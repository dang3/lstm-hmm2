cld
incl
iret
adc
mov
call
test
jne
push
call
test
pop
je
mov
push
push
call
test
mov
je
push
mov
call
shr
not
and
pop
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
mov
cmp
jne
mov
cmp
jne
xor
ret
xor
inc
jmp
push
movl
movl
xor
push
mov
call
mov
mov
lea
mov
call
lea
mov
mov
mov
call
mov
mov
mov
mov
mov
pop
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
fldl
mov
fstpl
fldl
fstpl
fldl
fstpl
fldl
fstpl
fldl
fstpl
fldl
fstpl
pop
ret
push
mov
sub
push
mov
push
mov
fldl
push
fchs
sub
fstpl
lea
fldl
fchs
fstpl
fld1
fstl
fldz
fstl
fstpl
fstpl
call
fldl
sub
fstpl
lea
fldl
fstpl
fld1
fstl
fldz
fstl
fstpl
fstpl
call
push
pop
pushl
lea
mov
rep
mov
call
lea
push
mov
call
pop
pop
mov
pop
leave
ret
push
pushl
mov
push
push
call
add
mov
pop
ret
push
mov
and
mov
sub
push
xor
cmp
push
push
jne
cmp
mov
je
lea
lea
mov
push
push
mov
call
cmp
je
pushl
lea
mov
push
mov
call
xor
cmp
mov
mov
mov
mov
mov
je
mov
cmp
mov
jge
test
jl
mov
cmp
jge
test
jl
test
mov
jne
mov
xor
cmp
sete
cmp
mov
mov
mov
je
cmp
jg
mov
cmpl
je
mov
mov
call
test
je
add
test
je
mov
andl
lea
push
push
call
cmpl
jne
mov
call
mov
lea
mov
call
lea
call
pushl
xor
inc
push
push
pushl
mov
push
call
movl
incl
mov
cmp
jle
xor
cmp
je
cmp
jne
mov
cmp
jne
cmpl
je
mov
test
jne
lea
call
pop
pop
xor
pop
mov
pop
ret
cmp
je
cmp
je
jmp
cmpl
je
jmp
push
mov
cmpl
push
mov
jne
mov
test
jne
xor
pop
pop
ret
lea
mov
call
test
jne
jmp
push
mov
push
push
call
test
jne
leave
ret
push
mov
and
sub
push
mov
mov
cmp
push
je
jle
cmp
jle
cmp
je
add
cmp
jbe
mov
mov
mov
call
mov
pop
pop
mov
pop
ret
mov
pushl
lea
push
lea
push
call
pushl
add
lea
push
push
call
add
pushl
pushl
pushl
pushl
pushl
mov
call
jmp
mov
pushl
add
push
pushl
call
add
mov
jmp
push
mov
push
cmpl
jne
movl
call
fstps
andl
flds
mov
fstps
leave
ret
mov
push
mov
mov
push
push
push
push
call
fldz
add
mov
pop
jmp
test
mov
je
mov
push
call
mov
andl
andl
andl
push
call
mov
neg
sbb
and
pop
add
ret
mov
push
mov
push
mov
add
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
push
mov
mov
mov
lea
push
mov
call
mov
mov
lea
push
mov
call
push
lea
call
test
jne
mov
test
mov
mov
je
cmp
jne
mov
test
je
cmp
jne
mov
push
call
mov
push
call
mov
mov
mov
xor
add
test
jne
mov
sub
test
jne
cmpl
jle
movdqa
movdqa
mov
movl
xor
test
je
lea
cmp
jge
mov
mov
and
and
sub
mov
mov
xor
shl
and
xor
mov
sub
or
mov
mov
add
add
add
test
jne
lea
cmp
jge
movdqa
movdqa
movdqa
movdqa
psubusb
movdqa
psubusb
pslldq
psubusb
movdqa
pand
movdqa
psubusb
pslldq
movdqa
pand
movdqa
pandn
movdqa
por
movdqa
pandn
por
movdqa
mov
add
lea
add
add
cmp
jl
lea
cmp
jge
movdqa
movdqa
movdqa
psubusb
psubusb
pslldq
movdqa
pand
movdqa
pandn
por
movdqa
mov
add
lea
add
add
cmp
jl
cmp
jge
jmp
lea
mov
mov
mov
and
and
sub
mov
shl
mov
sub
mov
xor
add
and
xor
or
mov
mov
add
add
cmp
jl
mov
mov
add
add
sub
add
mov
mov
sub
mov
add
add
cmp
mov
jl
mov
push
call
add
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
ret
push
mov
and
sub
push
mov
mov
push
push
lea
push
mov
call
mov
mov
lea
push
mov
call
mov
cmp
jne
mov
cmp
jne
mov
test
je
cmp
jne
mov
test
je
cmp
jne
mov
test
jne
cmpb
je
push
push
call
test
pop
pop
je
xor
inc
pop
pop
pop
mov
pop
ret
xor
jmp
test
mov
jl
fld1
fld
fldl
test
je
fmul
shr
je
fld
fmulp
jmp
test
fstp
jl
fstp
ret
neg
jmp
fdivrp
ret
cmpl
mov
je
orl
xor
ret
mov
pushl
mov
push
call
xor
ret
push
mov
sub
push
mov
mov
mov
push
imul
push
push
push
lea
jbe
inc
add
push
mov
mov
call
mov
xor
cmp
jne
cmp
je
cmp
jne
mov
push
lea
lea
call
lea
push
pushl
call
mov
pop
pop
lea
push
pushl
pushl
push
call
pushl
pushl
call
pop
pop
mov
test
jl
mov
jg
test
jbe
mov
mov
test
jl
jg
test
ja
mov
push
call
test
pop
pop
pop
je
mov
andl
leave
ret
cmp
mov
mov
lea
push
push
push
pushl
pushl
pushl
pushl
push
je
call
jmp
push
mov
sub
push
mov
mov
mov
imul
push
lea
pop
roll
push
jne
mov
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
je
cmp
je
pop
pop
xor
pop
leave
ret
push
call
jmp
mov
call
jmp
mov
call
jmp
push
push
lea
push
push
mov
call
xor
cmp
je
cmp
jne
mov
mov
mov
lea
push
lea
push
mov
pushl
mov
mov
pushl
mov
mov
movl
movl
mov
push
call
lea
mov
call
testl
jne
cmpl
jne
mov
push
push
lea
push
lea
push
pushl
mov
pushl
movl
movl
mov
push
call
lea
call
push
lea
call
test
je
andl
cmpl
jne
mov
call
mov
mov
cmpl
jl
jg
cmpl
jbe
test
jl
jg
test
ja
andl
jmp
push
mov
sub
fldl
andl
andl
fstl
fld1
push
push
fstl
push
fstl
mov
fstl
push
fstpl
mov
fstl
push
fstl
inc
fstpl
pop
mov
mov
push
lea
mov
mov
push
lea
mov
mov
call
mov
mov
mov
shl
mov
mov
shl
fldl
shl
fmull
fldl
fadd
fstpl
fldl
mov
fmull
mov
cmpb
fldl
fadd
fstpl
fldl
fsubp
fxch
fstpl
fsubrl
fstpl
je
pushl
call
cmp
pop
je
mov
mov
cmpb
je
pushl
call
cmp
pop
je
mov
fldl
push
push
mov
fstpl
call
fld
faddp
fstpl
call
fdivrl
pop
pop
push
fstps
call
test
pop
je
fldl
sub
fstpl
mov
fldl
fstpl
fldl
fstpl
fldl
fstpl
call
mov
test
je
incl
mov
fldl
fstpl
fldl
fstpl
fldl
fstpl
fldl
lea
fstpl
push
flds
push
fsubrl
push
mov
fstpl
call
mov
fldl
fstpl
fldl
fstpl
fldl
fstpl
fldl
lea
fstpl
push
flds
push
faddl
push
mov
fstpl
call
mov
pop
mov
pop
pop
leave
ret
push
push
mov
call
mov
mov
xor
test
jne
shr
and
cmp
mov
jne
push
push
push
push
call
add
cmp
mov
je
push
push
lea
call
cmp
pop
mov
je
push
push
push
push
pushl
call
add
pop
pop
pop
ret
push
mov
sub
cmpl
push
je
mov
pop
leave
ret
push
lea
movl
call
mov
test
je
mov
lea
push
push
push
call
test
js
mov
cmp
ja
mov
lea
call
jmp
push
mov
and
sub
push
push
mov
call
cmp
je
mov
fldl
sub
fstpl
fldl
fstpl
fldl
fstpl
fldl
fstpl
fldl
fstpl
pushl
call
add
pop
pop
mov
pop
ret
push
push
push
mov
xor
cmp
mov
je
cmp
je
cmp
je
cmp
je
cmp
jg
mov
test
je
cmp
mov
push
push
jne
call
mov
mov
mov
lea
cmp
je
pop
pop
mov
pop
ret
cmp
jg
jmp
movzwl
test
je
mov
lea
and
mov
call
cmp
jne
jmp
push
mov
push
push
mov
mov
push
mov
call
cmp
je
push
push
push
mov
call
pop
pop
pop
ret
push
mov
push
mov
test
push
push
push
jle
lea
mov
mov
shl
mov
test
jne
mov
mov
shl
andl
mov
mov
shl
andl
mov
mov
shl
add
mov
test
jne
pop
pop
pop
leave
ret
decl
jmp
mov
test
jle
lea
cmp
push
jge
shl
add
mov
mov
mov
mov
call
andl
pop
ret
xor
jmp
push
mov
push
push
andl
push
push
mov
mov
mov
cmp
push
jge
cmpl
jl
add
jle
mov
xor
cmp
mov
jle
mov
shl
mov
lea
push
call
push
push
mov
mov
call
mov
lea
xor
cmp
ja
movzbl
jmp
mov
shl
mov
and
sub
neg
sbb
inc
test
jne
mov
shl
mov
and
sub
neg
sbb
inc
test
jne
mov
test
jne
test
jne
mov
mov
cmp
jg
add
pop
pop
pop
leave
ret
xor
inc
jmp
testb
jne
test
je
mov
call
xor
cmp
jne
cmp
jne
cmp
jne
cmp
je
jmp
lea
test
je
decl
jne
mov
push
mov
call
push
mov
call
mov
mov
mov
jmp
mov
int
add
sbb
cmp
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmpl
jne
push
push
push
pop
push
pop
mov
call
test
pop
pop
je
xor
inc
ret
push
pushl
mov
pushl
add
call
pop
ret
push
mov
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
cmp
mov
mov
movl
mov
movl
jne
lea
mov
mov
cmp
je
lea
mov
push
call
add
call
test
js
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
pop
ret
xor
jmp
mov
mov
mov
push
call
ret
push
mov
sub
mov
andl
andl
mov
mov
mov
push
mov
mov
mov
push
push
lea
mov
lea
movsl
movsl
movsl
movsl
sub
sub
lea
lea
call
test
je
pop
pop
pop
leave
ret
mov
mov
push
push
lea
push
call
cmpl
je
pushl
mov
pushl
mov
pushl
push
call
jmp
push
mov
push
push
push
mov
mov
test
je
cmpl
je
mov
test
jne
push
push
lea
mov
cmp
jne
cmp
jne
pushl
mov
pushl
mov
push
call
pop
pop
xor
pop
leave
ret
xor
cmp
setne
ret
mov
call
test
jne
cmp
jne
cmp
je
xor
inc
ret
mov
test
je
push
mov
call
test
pop
je
xor
inc
ret
xor
ret
push
mov
test
je
call
test
jne
lea
call
test
je
xor
pop
ret
xor
inc
pop
ret
push
mov
mov
push
mov
andl
cmpl
je
mov
mov
lea
push
push
call
test
js
mov
test
je
movl
xor
pop
pop
ret
cmpl
jne
cmpl
jne
ret
mov
push
call
test
je
mov
push
push
call
jmp
push
mov
test
je
mov
mov
mov
cmpb
je
add
call
add
je
orl
xor
pop
ret
mov
cmpl
je
mov
pushl
add
mov
push
call
ret
push
mov
sub
push
mov
mov
push
push
lea
sbb
inc
add
xor
cmp
jbe
push
lea
pusha
leave
inc
add
inc
cmp
jb
mov
lea
push
mov
call
xor
cmp
ja
mov
lea
push
mov
call
cmp
ja
mov
lea
push
mov
call
cmp
ja
mov
lea
push
mov
call
cmpl
ja
mov
lea
push
mov
call
cmpl
ja
mov
mov
call
test
jne
mov
mov
call
add
jne
mov
lea
push
mov
call
xor
cmp
ja
mov
lea
push
mov
call
xor
cmp
ja
mov
lea
push
mov
call
cmp
ja
pop
pop
xor
pop
leave
ret
xor
mov
movzbl
mov
imul
add
imul
movzwl
mov
inc
mov
mov
movb
movb
cmp
jae
jmp
push
call
jmp
lea
movb
movb
movb
mov
movsw
movsb
movb
movb
jmp
mov
xor
mov
mov
mov
ret
test
push
jle
cmp
jge
shl
mov
push
mov
call
test
pop
jne
push
mov
call
test
pop
jne
push
mov
call
test
pop
jne
push
push
pop
call
test
pop
jne
push
mov
call
test
pop
jne
xor
pop
ret
xor
inc
pop
ret
cmpl
je
and
sub
neg
sbb
inc
ret
xor
ret
push
mov
mov
test
jne
call
mov
test
jne
pop
ret
cmpb
jne
ret
mov
test
je
mov
mov
add
push
push
call
mov
mov
push
push
call
movb
ret
push
mov
sub
push
mov
push
xor
cmp
je
mov
xor
inc
test
movl
movl
mov
mov
je
mov
mov
mov
mov
mov
lea
push
pushl
push
push
pushl
pushl
call
testb
mov
jne
testb
jne
neg
sbb
and
mov
pop
pop
leave
ret
push
lea
sub
mov
xor
mov
push
in
add
xor
decl
push
mov
je
andl
push
lea
push
lea
push
movl
movl
movl
mov
push
call
testb
jne
testb
jne
cmpl
jne
mov
push
call
mov
pop
push
push
call
xor
pop
mov
pop
icebp
inc
add
or
add
or
push
lea
sub
mov
xor
mov
or
inc
add
or
push
mov
je
inc
add
add
incl
inc
or
mov
movl
mov
je
inc
add
mov
jge
lea
inc
add
push
push
pushl
pushl
call
test
je
inc
add
add
test
les
jne
mov
pop
mov
mov
inc
add
fs
add
or
push
lea
sub
mov
xor
mov
mov
mov
test
push
mov
je
andl
andw
push
push
lea
push
lea
lea
push
mov
movl
movl
mov
movl
movl
movl
mov
push
call
testb
mov
jne
testb
jne
test
jns
add
add
test
inc
loopne
jne
pop
mov
pop
mov
xor
pop
call
add
leave
ret
push
lea
sub
mov
xor
mov
test
mov
push
mov
push
mov
je
andl
andl
testb
je
mov
mov
test
push
mov
sbb
inc
add
add
orb
adc
add
aas
mov
pop
lea
lea
push
mov
movl
mov
mov
movb
mov
push
call
test
je
andl
lea
lea
push
pushl
mov
int3
mov
movl
mov
movb
mov
push
call
test
jne
pushl
lea
push
call
testb
jne
testb
jne
testb
jne
testb
jne
xor
pop
mov
pop
xor
pop
call
add
push
rolb
push
movzbl
push
movzbl
push
movzbl
mov
or
shl
or
shl
or
mov
shr
movzbl
mov
imul
shr
movzbl
movzbl
imul
imul
add
add
cltd
mov
idiv
push
movzbl
lea
imul
add
cltd
pop
idiv
push
movzbl
add
imul
mov
pop
pop
cltd
pop
idiv
pop
ret
push
mov
sub
push
push
mov
shr
mov
push
pushl
mov
shr
mov
pushl
mov
shr
push
mov
mov
call
mov
mov
shr
push
mov
shr
push
pushl
call
add
cmp
mov
jb
cmp
jbe
cmpb
movb
movb
je
movzbl
shl
movzbl
mov
movzbl
movzbl
mov
mov
imul
cltd
mov
push
pop
idiv
mov
push
mov
sub
movzbl
movzbl
imul
cltd
pop
idiv
or
mov
shl
push
sub
movzbl
or
mov
imul
cltd
idiv
mov
movzbl
shl
mov
sub
movzbl
or
mov
mov
mov
sub
pop
imul
cltd
idiv
movzbl
push
add
movzbl
mov
sub
imul
cltd
pop
idiv
or
push
shl
add
movzbl
or
mov
sub
pop
imul
cltd
idiv
shl
add
movzbl
or
mov
mov
pop
pop
pop
leave
ret
push
lea
push
xor
mov
call
mov
mov
mov
push
call
test
je
xor
inc
pop
pop
ret
push
mov
push
push
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
test
jbe
xor
jmp
lea
mov
mov
test
je
lea
cmp
je
mov
add
test
jne
add
cmp
jb
xor
pop
ret
mov
pop
ret
push
mov
push
push
mov
call
pop
neg
sbb
pop
neg
pop
ret
push
mov
push
mov
test
je
push
mov
test
je
mov
push
xor
cmp
jne
cmp
je
mov
mov
mov
mov
cmp
je
pushl
mov
call
testb
jne
cmp
jne
pop
pop
xor
pop
pop
ret
mov
mov
push
push
push
call
jmp
xor
jmp
cmp
je
mov
mov
cmp
jne
cmp
je
push
push
mov
call
jmp
cmp
jne
xor
jmp
push
jmp
push
mov
cmp
jge
pushl
pushl
pushl
pushl
push
pushl
mov
call
pop
ret
push
mov
push
mov
cmp
push
mov
push
push
jg
mov
add
shl
or
add
add
add
mov
cmp
jg
lea
shl
or
add
add
add
mov
cmp
jle
mov
add
mov
shl
mov
mov
or
add
add
mov
incl
mov
mov
mov
mov
mov
incl
mov
mov
sub
shr
add
mov
mov
add
cmp
jle
mov
cmp
movzbl
jg
mov
shl
or
add
add
add
jge
jl
mov
dec
push
lea
call
dec
push
lea
call
pop
pop
pop
pop
pop
leave
ret
movzwl
mov
shl
mov
or
add
add
mov
incl
mov
mov
mov
mov
mov
incl
mov
mov
sub
shr
add
mov
mov
add
decl
cld
shl
or
add
add
mov
decl
decl
dec
adc
or
add
add
mov
incl
mov
mov
mov
mov
mov
incl
mov
mov
sub
shr
add
mov
mov
add
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
movzwl
push
mov
push
xor
test
movl
je
lea
lea
test
jl
add
add
mov
mov
lea
mov
movzwl
add
cmp
je
cmp
jge
jmp
lea
movzwl
mov
mov
sub
cmp
mov
jg
mov
shl
or
add
add
mov
sub
mov
jne
xor
test
mov
je
cmp
je
lea
lea
add
subl
mov
jne
pop
pop
pop
pop
add
ret
cmp
jl
jmp
movzwl
mov
shl
mov
or
add
inc
add
mov
addl
movzbl
mov
mov
mov
mov
mov
addl
mov
sub
shr
mov
mov
add
mov
jmp
mov
mov
jmp
test
je
cmp
je
movzwl
mov
sub
mov
mov
cmp
jg
mov
shl
or
add
add
mov
sub
movzwl
mov
sub
mov
mov
cmp
jg
mov
shl
or
add
add
mov
mov
add
cmp
jg
shl
or
add
mov
jmp
cmp
mov
jg
movzwl
sub
mov
mov
cmp
jg
mov
shl
or
add
add
mov
mov
add
cmp
jg
shl
or
add
mov
jmp
movzwl
mov
shl
mov
or
add
inc
add
mov
addl
movzbl
mov
mov
mov
mov
mov
addl
mov
sub
shr
mov
mov
add
mov
mov
jmp
movzwl
mov
shl
mov
or
add
inc
add
mov
addl
movzbl
mov
mov
mov
mov
mov
addl
mov
sub
shr
mov
mov
add
mov
mov
jmp
movzwl
mov
shl
mov
or
add
inc
add
mov
addl
movzbl
mov
mov
mov
mov
mov
addl
mov
sub
shr
mov
mov
add
mov
mov
jmp
mov
lea
jmp
mov
shl
mov
or
movzbl
add
mov
addl
movzbl
mov
mov
mov
mov
mov
addl
mov
sub
shr
add
mov
mov
jmp
mov
shl
mov
or
movzbl
add
mov
addl
movzbl
mov
mov
mov
mov
mov
addl
mov
sub
shr
add
mov
mov
jmp
movzwl
sub
mov
mov
cmp
jg
mov
shl
or
add
add
mov
mov
add
cmp
jle
mov
shl
mov
or
movzbl
add
mov
addl
movzbl
mov
mov
mov
mov
mov
addl
mov
sub
shr
add
mov
mov
jmp
shl
or
add
mov
jmp
add
add
loop
dec
adc
or
add
inc
add
mov
addl
movzbl
mov
mov
mov
mov
mov
addl
mov
sub
shr
mov
mov
add
mov
mov
jmp
mov
mov
lea
lea
cmp
push
push
jne
or
pop
pop
ret
mov
mov
movzbl
cmp
jne
sub
sub
jmp
xor
inc
mov
and
shl
mov
shr
and
neg
sbb
neg
ret
push
mov
push
mov
andl
push
push
mov
lea
mov
push
call
cmpl
jne
test
jne
cmpl
jne
lea
push
mov
call
test
jne
mov
lea
push
mov
mov
call
cmp
jne
lea
push
call
mov
xor
inc
mov
and
shl
mov
shr
shl
or
lea
not
and
mov
lea
push
lea
call
or
pop
pop
pop
pop
pop
ret
mov
test
je
mov
test
jne
mov
mov
mov
mov
mov
cmp
je
ret
push
mov
mov
mov
pop
jmp
push
mov
test
jne
pop
ret
int3
int3
int3
int3
int3
movzwl
push
push
mov
xor
test
push
movl
je
lea
lea
test
movw
jl
push
lea
add
mov
movzwl
add
cmp
je
cmp
jge
mov
add
xor
test
mov
je
cmp
je
lea
lea
add
sub
jne
pop
pop
pop
pop
ret
cmp
jl
jmp
mov
mov
jmp
test
je
cmp
mov
mov
je
add
add
jmp
cmp
mov
jg
addw
jmp
mov
lea
jmp
addw
jmp
push
mov
pushl
lea
push
call
pushl
lea
push
call
lea
push
call
add
push
pop
movzbl
cmpw
jne
dec
cmp
jge
mov
imul
add
add
pop
ret
sub
push
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
cmp
jge
mov
sub
push
lea
add
mov
mov
mov
mov
mov
movzwl
movzwl
add
cmp
jg
cmp
mov
jg
addw
cmp
jge
xor
movzwl
movzwl
add
imul
add
cmpl
je
mov
movzwl
add
imul
add
mov
mov
add
subl
jne
mov
test
jne
pop
pop
pop
pop
add
ret
mov
mov
sub
mov
mov
jmp
addl
mov
mov
jmp
lea
cmpw
lea
je
addw
addw
addw
lea
sub
test
jg
test
je
mov
mov
mov
mov
movzwl
test
je
mov
mov
lea
lea
mov
subl
sub
cmp
jg
lea
mov
movzwl
cmp
jne
mov
sub
mov
test
jne
mov
sub
sub
test
mov
mov
jne
dec
in
add
mov
xchg
jmp
scas
call
add
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
mov
mov
push
mov
rolb
push
mov
mov
mov
movl
mov
movl
jle
xor
lea
cmp
je
addl
mov
mov
mov
mov
add
cmp
jl
mov
cmp
jl
mov
mov
mov
cltd
sub
sar
cmp
jl
lea
mov
mov
jmp
lea
mov
lea
cmp
mov
jg
mov
mov
jge
mov
mov
movzwl
movzwl
cmp
jb
jne
mov
cmp
ja
add
mov
mov
movzwl
movzwl
cmp
jb
je
mov
mov
add
mov
cmp
jle
mov
mov
mov
sub
sub
cmp
mov
mov
mov
jge
mov
mov
mov
mov
mov
mov
lea
cmp
mov
mov
movl
jl
mov
mov
mov
cmp
jge
mov
mov
movzwl
movzwl
cmp
jb
jne
mov
cmp
ja
add
mov
mov
movzwl
movzwl
cmp
jb
je
mov
mov
add
mov
cmp
jle
mov
mov
mov
mov
mov
or
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
cmp
jb
movzbl
add
mov
movzwl
mov
mov
mov
mov
add
mov
cmp
mov
mov
jg
mov
mov
jge
mov
mov
movzwl
movzwl
cmp
jb
jne
mov
cmp
ja
add
mov
mov
movzwl
movzwl
cmp
jb
je
mov
mov
add
mov
cmp
jle
mov
mov
mov
mov
cmp
jge
addl
mov
mov
mov
mov
mov
call
mov
lea
push
call
add
pop
pop
pop
add
ret
mov
jmp
mov
cmp
jbe
jmp
movzbl
jmp
mov
cmp
ja
jmp
mov
cmp
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
lea
xor
mov
sub
lea
mov
add
add
movzwl
mov
add
cmp
jle
test
jl
xor
push
movzwl
test
je
movzwl
movzwl
add
mov
xor
mov
and
or
sub
shr
add
test
jg
shr
mov
add
cmp
jle
pop
mov
pop
pop
xor
call
add
ret
push
mov
push
cmpl
push
jle
mov
cmpl
jne
mov
call
mov
lea
push
call
lea
push
call
pop
pop
mov
call
add
mov
add
add
shr
shr
cmp
mov
jbe
mov
lea
cmp
jbe
cmpl
je
cmp
je
mov
cmp
jg
lea
shl
or
add
add
add
mov
inc
push
mov
inc
push
mov
call
lea
push
lea
push
mov
call
add
call
test
pop
je
mov
call
leave
ret
lea
mov
shl
mov
or
add
mov
add
incl
mov
mov
mov
mov
mov
incl
mov
sub
shr
add
mov
mov
add
pushl
leave
cmp
sete
mov
ret
push
mov
mov
cmp
je
mov
test
jne
pop
ret
push
mov
cmpl
je
mov
call
test
jne
mov
mov
push
call
andl
mov
mov
test
je
mov
mov
mov
mov
push
call
pop
ret
mov
pop
ret
mov
mov
test
je
pushl
pushl
push
call
add
cmp
je
mov
mov
xor
ret
push
mov
push
mov
mov
test
je
mov
lea
push
pushl
pushl
push
call
test
js
mov
push
xor
add
adc
mov
cmp
jne
xor
mov
mov
pop
pop
pop
ret
xor
jmp
mov
test
push
mov
mov
je
mov
test
je
push
push
call
mov
push
push
push
call
xor
pop
ret
mov
call
jmp
push
mov
mov
push
mov
test
jne
mov
test
jne
pop
pop
ret
mov
lea
push
push
call
mov
cmp
je
mov
push
push
call
jmp
mov
mov
push
movzbl
shr
and
neg
sbb
and
and
or
mov
mov
xor
cmp
mov
jne
and
cmp
mov
jne
mov
testb
jne
mov
push
push
call
pop
pop
pop
ret
mov
cmp
jne
jmp
cmp
jne
jmp
push
mov
push
mov
mov
mov
call
test
jne
push
pushl
mov
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
and
lea
push
push
pushl
call
mov
mov
pop
pop
pop
ret
xor
jmp
push
mov
push
mov
mov
mov
call
test
jne
push
pushl
mov
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
and
lea
push
push
pushl
call
mov
mov
pop
pop
pop
ret
xor
jmp
push
mov
mov
push
mov
call
test
mov
jne
mov
mov
call
test
jne
andl
cmpl
jne
lea
push
pushl
push
call
mov
mov
mov
pop
pop
ret
push
mov
sub
mov
push
mov
push
mov
cmpb
mov
mov
push
mov
je
mov
mov
mov
sub
cmp
jbe
inc
cmpb
jne
push
lea
push
pushl
call
mov
test
mov
je
andl
lea
push
push
push
call
add
cmpl
je
push
call
pop
mov
xor
inc
push
add
lea
mov
mov
mov
call
testb
mov
jne
testb
jne
mov
test
je
mov
push
mov
call
pop
add
mov
push
mov
lea
mov
call
mov
push
call
pop
pop
pop
leave
ret
push
push
push
pushl
mov
call
test
jne
push
push
call
test
pop
je
mov
andl
push
movl
movl
call
test
mov
je
mov
push
call
test
je
mov
mov
test
je
mov
push
push
call
pop
pop
ret
xor
jmp
xor
jmp
push
mov
sub
push
mov
mov
mov
call
test
js
mov
push
push
xor
mov
mov
mov
mov
push
mov
lea
mov
call
mov
mov
push
call
cmp
je
add
add
orb
call
mov
mov
lea
push
push
push
call
test
jne
mov
cmp
je
lea
push
mov
mov
push
call
cmpl
jl
mov
push
lea
mov
mov
call
mov
mov
lea
push
push
push
call
test
jne
mov
cmp
je
push
lea
mov
mov
mov
mov
mov
call
mov
mov
lea
push
push
call
test
jne
cmp
je
mov
mov
lea
push
push
call
test
lea
jne
mov
push
mov
call
mov
mov
lea
push
push
call
test
jne
cmp
je
mov
mov
lea
push
push
call
test
jne
pushl
add
pushl
pushl
push
call
test
jne
pushl
pushl
pushl
push
call
lea
mov
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
mov
mov
mov
mov
test
push
push
je
pushl
mov
push
push
mov
mov
mov
call
call
pushl
mov
push
push
inc
mov
call
call
pop
pop
pop
pop
ret
push
mov
push
mov
test
je
push
mov
and
je
push
mov
test
push
mov
jne
mov
mov
push
mov
call
cmp
jne
mov
inc
push
mov
call
test
je
test
jne
mov
mov
pop
pop
pop
leave
ret
mov
mov
test
je
mov
jmp
mov
mov
test
je
mov
jmp
xor
jmp
push
lea
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
mov
inc
mov
inc
cmp
jb
lea
mov
movl
call
test
je
mov
xor
cmp
je
mov
lea
mov
mov
mov
push
mov
pop
lea
mov
movl
mov
mov
movzwl
sub
je
dec
je
dec
jne
cmpw
push
jne
movl
add
push
push
lea
movl
mov
movl
call
push
lea
push
call
pushl
pushl
call
pop
pop
cmpl
je
mov
cmpl
je
andl
lea
mov
mov
lea
push
lea
mov
push
mov
mov
movb
call
mov
andl
lea
mov
mov
lea
push
pushl
mov
mov
movb
call
push
pushl
call
pushl
mov
pushl
call
pushl
pushl
call
add
test
je
jge
testb
jne
test
jg
mov
movl
pushl
pushl
call
pop
pop
mov
jmp
xor
mov
pop
pop
xor
pop
call
add
leave
ret
cmpw
push
je
movl
inc
jmp
mov
movl
jmp
push
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
pop
ret
push
mov
and
sub
push
push
push
pushl
lea
mov
push
mov
call
lea
mov
lea
push
lea
push
push
movl
call
mov
mov
add
xor
add
cmp
ja
pushl
lea
push
call
inc
add
jne
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
mov
push
mov
push
push
mov
push
mov
xor
push
mov
mov
mov
call
test
je
mov
cmp
jne
mov
lea
movl
mov
movl
call
mov
mov
lea
lea
xor
mov
mov
movl
movl
mov
movb
mov
mov
mov
mov
mov
cmp
je
cmpb
je
mov
test
mov
mov
mov
lea
jne
test
je
mov
cmp
jbe
mov
andl
movb
mov
mov
mov
mov
mov
add
jmp
movsl
ljmp
dec
call
mov
mov
mov
lea
mov
mov
lea
push
mov
push
push
mov
push
mov
push
push
movl
movl
movl
movb
call
mov
test
js
cmpl
je
push
lea
call
mov
test
jne
add
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
pop
xor
call
add
ret
push
mov
sub
cmpl
je
andl
lea
push
pushl
mov
call
test
pop
pop
je
mov
mov
call
mov
lea
push
pushl
mov
movl
call
leave
ret
push
mov
xor
push
mov
mov
mov
mov
mov
mov
push
mov
push
mov
mov
mov
mov
push
mov
mov
mov
call
lea
push
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
mov
cmpl
jne
andl
add
lea
call
mov
add
lea
call
mov
flds
pop
fstps
pop
flds
fstps
flds
fstps
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
fldl
fsubl
fstpl
fldl
fsubl
fstpl
fldl
faddl
faddl
fldz
fcom
fnstsw
test
je
fxch
fstpl
fldl
faddl
faddl
fcom
fnstsw
test
jnp
fstp
fstpl
pop
ret
mov
push
mov
cmp
ja
test
je
sub
mov
mov
mov
cmp
je
cmp
je
push
pushl
pushl
call
add
add
add
mov
pop
ret
mov
mov
push
call
pop
mov
jmp
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jmp
lea
mov
sub
mov
mov
lea
sub
cmp
jae
mov
cmpl
jne
pop
pop
pop
pop
ret
mov
add
push
add
push
call
add
mov
add
cmp
jb
mov
mov
lea
movzbl
mov
mov
shl
movzbl
xor
and
mov
cmp
jb
mov
mov
cmp
jae
mov
add
cmp
jae
sub
cmp
jbe
mov
mov
push
add
push
push
call
add
add
mov
pop
pop
pop
pop
ret
lea
cmp
jae
sub
add
sub
cmp
ja
mov
push
add
push
push
call
add
add
pop
pop
pop
pop
ret
mov
push
lea
push
push
call
add
sub
sub
sub
mov
mov
lea
lea
movzwl
sub
cmp
jae
xor
sub
mov
jne
mov
mov
lea
lea
movzwl
sub
cmp
jae
xor
sub
mov
jne
add
jmp
sub
jmp
sub
jmp
mov
jmp
mov
cmpl
je
jmp
int3
int3
int3
int3
push
push
push
mov
push
mov
or
mov
cmp
jb
cmp
jb
mov
mov
mov
mov
shl
mov
movzbl
xor
and
mov
and
mov
mov
mov
mov
mov
and
mov
movzwl
test
mov
mov
mov
mov
je
mov
mov
sub
sub
cmp
ja
push
call
add
mov
cmpl
jb
mov
sub
mov
mov
mov
movzwl
mov
mov
mov
sub
mov
add
movzbl
movzbl
add
lea
add
cmp
jb
movzwl
shr
movzbl
add
mov
sub
cmp
je
xor
mov
sub
cmp
ja
mov
cmp
jb
add
mov
add
mov
mov
mov
mov
movzbl
shl
mov
xor
and
mov
mov
movzwl
and
mov
mov
movzwl
mov
mov
or
mov
add
jne
jmp
mov
mov
mov
mov
mov
movw
mov
mov
mov
add
movzbl
add
mov
lea
sub
cmp
je
xor
add
add
test
je
mov
test
jge
xor
mov
sub
push
push
xor
call
mov
mov
mov
add
call
mov
cmp
jne
pop
pop
pop
xor
pop
ret
add
mov
mov
add
mov
movl
movzbl
mov
shl
movzbl
xor
and
mov
jmp
movzwl
movzbl
jmp
push
call
mov
add
cmpl
je
test
jne
mov
cmp
jne
mov
mov
test
jl
mov
add
mov
sub
push
push
call
mov
mov
mov
add
call
mov
cmpl
jne
cmp
jne
pop
pop
pop
mov
pop
ret
cmp
jae
pop
pop
pop
xor
pop
ret
cmp
jne
pop
pop
pop
mov
pop
ret
xor
jmp
mov
jmp
mov
jmp
xor
jmp
int3
int3
int3
int3
sub
mov
mov
push
mov
mov
mov
push
mov
mov
mov
add
cmp
push
mov
lea
ja
movl
cmp
mov
lea
mov
mov
mov
mov
jae
mov
cmp
ja
mov
jmp
lea
nop
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
cmp
jne
add
add
lea
mov
add
add
cmp
jne
mov
add
add
cmp
jne
mov
add
add
cmp
jne
mov
add
add
cmp
jne
mov
add
add
cmp
jne
mov
add
add
cmp
jne
mov
add
add
cmp
jne
mov
add
add
cmp
jne
cmp
jb
mov
mov
sub
add
cmp
lea
jle
cmp
mov
mov
jge
movzbl
mov
mov
mov
mov
and
mov
mov
movzwl
cmp
jbe
subl
jne
mov
cmp
ja
mov
pop
pop
pop
add
ret
mov
jmp
sub
add
mov
jmp
mov
jmp
shrl
jmp
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
lea
mov
cmp
jb
cmp
jb
mov
mov
mov
mov
shl
mov
movzbl
xor
and
mov
and
mov
mov
mov
mov
mov
and
mov
movzwl
mov
mov
mov
mov
test
mov
mov
mov
mov
mov
je
cmp
jae
mov
mov
sub
sub
cmp
ja
push
call
add
cmp
mov
ja
cmp
jne
mov
mov
cmp
jae
cmpl
movl
inc
insb
mov
mov
mov
mov
movw
mov
mov
mov
add
movzbl
add
lea
mov
sub
cmp
je
mov
add
addl
cmpl
jne
pop
pop
pop
xor
pop
ret
push
call
mov
add
cmpl
je
add
jne
cmp
jge
inc
add
add
jne
mov
mov
test
jl
mov
add
mov
sub
push
push
call
mov
mov
mov
add
call
mov
cmpl
je
cmpl
jne
pop
pop
pop
mov
pop
ret
cmp
ja
mov
sub
mov
mov
mov
lea
mov
sub
movzwl
mov
mov
mov
mov
sub
mov
add
movzbl
movzbl
add
lea
add
cmp
jae
movzwl
movzbl
add
mov
sub
cmp
je
add
add
add
mov
mov
sub
add
add
mov
jmp
lea
add
mov
cmp
ja
mov
mov
mov
shl
mov
movzbl
xor
and
mov
mov
movzwl
and
mov
mov
movzwl
mov
mov
mov
addl
jne
add
cmpl
mov
mov
movl
mov
je
jmp
add
addl
mov
sbb
inc
add
cmp
jae
pop
pop
pop
xor
pop
ret
movzwl
shr
movzbl
jmp
xor
jmp
xor
jmp
push
mov
mov
mov
push
mov
cmp
jbe
mov
test
je
push
pushl
pushl
call
mov
add
add
add
sub
mov
sub
mov
add
cmpl
je
pop
pop
ret
mov
mov
jmp
push
mov
mov
mov
call
test
jne
push
mov
push
mov
push
pushl
push
call
test
js
pop
pop
pop
ret
test
push
mov
je
lea
push
mov
push
call
test
je
mov
push
mov
call
test
jne
xor
pop
jmp
mov
mov
mov
call
test
jne
mov
mov
call
test
jne
push
push
mov
call
jmp
xor
jmp
pop
rolb
or
push
mov
call
xor
cmp
jne
mov
cmp
mov
jne
orl
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
push
mov
call
test
mov
mov
jne
orl
pop
mov
pop
pop
ret
pushl
mov
mov
push
call
test
je
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
jne
mov
test
je
add
mov
ret
add
movl
mov
ret
mov
mov
cmp
jne
jmp
jmp
push
mov
and
mov
sub
test
push
push
je
xor
cmp
je
xor
pop
pop
mov
pop
ret
mov
mov
test
je
pushl
mov
pushl
call
ret
call
test
jl
movsbl
push
mov
test
je
testb
jne
testb
jne
push
pop
push
push
push
pushl
call
pop
ret
push
jmp
push
jmp
push
push
push
call
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
xor
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
mov
mov
movb
movb
movl
mov
pop
ret
push
mov
call
test
js
mov
mov
mov
inc
add
add
call
xor
pop
ret
push
push
call
test
pop
je
mov
call
mov
test
je
mov
push
call
mov
mov
call
test
push
js
mov
mov
pop
pop
ret
xor
jmp
push
mov
push
mov
andl
cmpl
jne
lea
push
push
call
test
pop
js
push
mov
mov
push
pushl
push
call
mov
mov
push
call
pop
mov
pop
pop
pop
ret
mov
jmp
mov
incl
xor
ret
jmp
push
mov
test
push
je
lea
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
xor
jmp
push
mov
push
push
mov
push
mov
lea
add
push
mov
movl
mov
call
cmp
je
push
push
push
xor
push
inc
call
mov
mov
push
call
andl
mov
test
mov
jne
test
jne
testb
je
push
call
pop
pop
mov
pop
leave
ret
lea
push
call
test
pop
jne
push
call
pop
jmp
mov
test
jne
mov
test
jne
or
ret
push
push
mov
mov
test
movl
jne
mov
test
jne
lea
push
mov
call
mov
test
jne
mov
test
mov
pop
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
andl
call
add
push
or
mov
call
test
je
push
call
pop
jmp
push
mov
decl
mov
je
pop
ret
movl
movl
pushl
pushl
call
pop
pop
cmpl
je
lea
push
call
pop
push
call
pop
xor
jmp
push
xor
xor
inc
mov
mov
mov
mov
movl
movl
mov
mov
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
pop
ret
mov
test
je
mov
mov
mov
xor
ret
mov
test
je
mov
mov
test
jne
mov
ret
push
mov
and
sub
cmpb
push
jne
pop
mov
pop
ret
mov
test
jne
ret
andl
andl
ret
mov
mov
shl
push
lea
shl
add
cmp
jne
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
cmp
je
cmp
mov
push
je
cmp
je
cmp
je
out
inc
add
aam
add
jge
add
pop
lea
push
push
push
call
mov
mov
mov
pop
ret
mov
mov
push
call
xor
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
test
je
lea
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
test
je
lea
jmp
andl
jmp
push
mov
push
push
cmpb
jne
push
mov
mov
push
xor
cmp
movb
jne
mov
cmp
push
je
mov
shr
test
jbe
mov
test
je
mov
and
lea
mov
mov
call
inc
cmp
jb
pop
pop
pop
leave
ret
xor
jmp
xor
jmp
push
push
cltd
pop
idiv
sub
je
dec
jne
lea
mov
mov
mov
mov
mov
mov
mov
pop
ret
mov
jmp
push
mov
lea
mov
or
lock
dec
jne
movl
lea
call
push
call
pop
xor
pop
ret
push
mov
push
xor
cmp
je
push
mov
cmp
je
push
push
call
cmp
pop
je
mov
mov
mov
mov
mov
movl
add
add
je
mov
push
call
mov
mov
mov
test
mov
je
mov
push
call
mov
push
push
push
pushl
lea
call
add
add
je
test
js
mov
push
call
xor
pop
pop
pop
pop
ret
xor
jmp
push
mov
and
sub
push
lea
call
push
pushl
mov
pushl
push
call
test
js
mov
push
call
test
jne
mov
lea
call
xor
lea
call
mov
pop
mov
pop
ret
mov
call
jmp
mov
jmp
mov
push
pushl
push
call
xor
cmp
setne
ret
push
mov
sub
mov
xor
mov
push
movzwl
mov
and
neg
push
sbb
inc
cmpl
mov
je
test
jne
movsbl
andl
and
shr
push
lea
mov
lea
call
lea
push
lea
push
push
call
add
test
js
push
pushl
mov
call
pushl
mov
call
mov
lea
push
mov
call
mov
test
mov
je
andl
andw
lea
lea
mov
mov
movl
movl
mov
call
test
je
mov
mov
push
push
push
call
pushl
andl
mov
lea
call
mov
mov
push
call
movzbl
push
push
lea
call
lea
call
pushl
add
call
pop
pop
lea
call
lea
call
mov
pop
xor
pop
call
leave
ret
testb
je
mov
call
test
jne
jmp
push
mov
push
push
cmpl
je
push
mov
cmpl
je
mov
push
push
mov
movl
call
push
call
test
pop
pop
je
mov
mov
push
mov
mov
call
movl
mov
mov
call
pop
test
je
pushl
mov
push
push
call
pushl
mov
call
pop
mov
pop
pop
leave
ret
xor
jmp
push
mov
push
push
movl
xor
mov
lea
mov
push
movl
mov
movl
call
inc
add
lea
mov
push
lea
mov
call
mov
mov
push
call
mov
pop
leave
ret
mov
test
je
pushl
add
pushl
pushl
push
call
ret
push
mov
push
mov
test
je
push
mov
mov
test
je
mov
push
mov
push
call
test
js
mov
mov
push
call
test
mov
je
mov
push
call
mov
test
je
mov
test
je
push
mov
call
mov
lea
call
mov
pop
pop
pop
pop
ret
mov
jmp
movzbl
shr
and
cmp
je
push
call
test
je
push
mov
test
mov
mov
jne
push
call
jmp
call
shl
xor
and
xor
pop
ret
mov
andl
mov
mov
test
jne
ret
mov
push
push
push
call
jmp
mov
ret
push
mov
sub
andl
push
push
push
pushl
lea
push
movl
movl
call
lea
push
pushl
movl
pushl
pushl
pushl
call
test
je
mov
mov
cmp
ja
inc
movzwl
movzwl
mov
call
mov
test
je
mov
cmp
je
inc
mov
lea
push
push
lea
pop
call
cmpl
jle
xor
mov
mov
lea
lea
cmp
je
cmpl
jne
mov
mov
call
incl
movzwl
lea
cmp
jl
mov
cmpl
jne
movl
mov
mov
cmp
je
inc
mov
mov
call
mov
mov
push
lea
call
push
push
push
lea
push
mov
call
lea
call
pushl
pushl
call
pop
xor
pop
inc
pop
pop
pop
leave
ret
mov
push
pushl
mov
mov
call
pop
ret
push
mov
push
push
push
mov
mov
mov
push
test
je
mov
cmp
je
mov
mov
push
call
test
je
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
je
test
mov
je
cmpl
je
cmpl
je
cmpl
je
push
mov
call
mov
mov
mov
mov
movzbl
push
push
mov
push
lea
push
push
add
call
movzbl
mov
add
push
push
push
lea
push
lea
push
add
call
movzbl
mov
add
push
push
push
lea
push
lea
push
add
call
movzbl
mov
add
push
push
push
lea
push
lea
push
add
call
xor
add
cmp
je
mov
cmp
je
mov
mov
mov
cmp
je
mov
mov
test
jne
or
mov
mov
cmp
jne
mov
pop
pop
pop
pop
pop
ret
test
je
movb
movb
movb
movb
jmp
push
pushl
push
pop
call
jmp
mov
mov
push
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
jmp
xor
jmp
push
mov
push
mov
mov
mov
call
test
jne
mov
mov
call
test
je
mov
mov
mov
xor
pop
pop
ret
mov
movl
jmp
push
mov
decl
mov
je
pop
ret
push
mov
movl
pushl
movl
call
push
call
pop
pop
xor
pop
jmp
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
push
mov
push
push
push
push
push
call
mov
call
mov
lea
movl
xor
cmp
jne
add
decl
jne
mov
test
inc
add
add
add
mov
mov
push
push
call
lea
call
lea
call
mov
pop
mov
mov
pop
leave
ret
mov
mov
call
jmp
mov
test
movl
movl
je
push
call
pop
push
push
lea
call
lea
call
lea
mov
mov
push
xor
mov
call
push
push
push
push
mov
call
mov
cmp
je
mov
call
test
je
pop
lea
pop
jmp
push
mov
sub
push
mov
cmpl
je
mov
orl
push
push
mov
push
mov
mov
movl
call
mov
test
pop
mov
je
mov
push
call
push
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
add
inc
or
add
add
and
push
call
mov
ret
sub
push
mov
test
je
push
mov
push
push
xor
cmp
mov
jl
test
jne
mov
test
jne
mov
test
jne
mov
mov
test
jne
mov
test
mov
jle
mov
mov
xor
jmp
mov
sub
push
push
lea
push
lea
push
lea
push
push
call
mov
add
add
loop
pop
jmp
add
mov
call
add
add
lods
jne
add
xlat
mov
mov
add
cld
push
push
lods
js
neg
mov
add
add
add
inc
in
push
push
push
push
call
out
pusha
add
ljmp
into
add
roll
mov
xlat
lret
lret
xchg
mov
add
xchg
add
add
add
xchg
push
sti
mov
cltd
addr16
pop
push
push
push
push
push
push
call
jae
mov
add
enter
jmp
add
jge
add
lret
mov
add
add
jo
add
mov
lock
add
add
jns
lret
add
add
lcall
push
push
lea
push
push
push
push
push
push
push
push
call
into
jecxz
xchg
into
cmpsb
sahf
add
add
add
mov
ffree
add
arpl
lods
stc
popa
fsubrl
clc
jne
push
mov
add
xchg
add
sahf
mov
fadds
out
repnz
nop
add
loopne
xlat
jae
in
fdivr
lcall
push
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
call
jp
pusha
scas
mov
add
add
push
jmp
add
add
in
stc
jp
add
testl
xchg
int
add
add
addl
jp
enter
jge
add
add
add
lock
add
fwait
add
add
jae
add
enter
aam
fucomi
pop
ffreep
push
add
add
cmpsb
fldl
sub
pop
call
push
push
lea
push
push
lea
push
push
push
push
push
push
call
lret
mov
shll
add
out
movsb
mov
add
jnp
pusha
add
jae
stos
add
in
fdivr
lcall
add
push
push
push
push
call
add
add
pop
mov
sti
scas
ror
add
mov
into
add
add
imull
stos
add
push
lret
lcall
add
push
loope
out
add
add
outsl
sub
pop
call
push
push
push
call
add
mov
mov
mov
jmp
iret
in
add
add
push
add
fsubr
add
add
add
cli
xchg
pop
scas
jmp
sub
pop
jmp
ret
push
push
push
lea
push
push
push
push
lea
push
push
call
xchg
popf
jle
add
movb
add
out
test
lea
jmp
add
add
add
pop
add
add
aam
push
mov
into
std
rolb
add
aad
sahf
add
add
add
add
add
add
add
mov
data16
mov
add
add
inc
hlt
push
push
push
push
push
call
add
ljmp
xchg
add
add
out
add
push
add
mov
hlt
addr16
lret
in
cmc
add
pop
pop
mov
add
mov
add
pop
hlt
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
movb
mov
add
add
mov
add
mov
add
jecxz
add
cltd
add
movb
lea
into
add
mov
mov
add
testl
add
add
add
add
push
add
add
pop
fisubrl
in
popf
jno
add
rolb
pop
add
push
push
push
push
push
push
push
lea
push
call
popf
mov
add
mov
fwait
add
shlb
pop
add
add
jp
xchg
out
imul
mov
xchg
add
stos
fs
push
loop
mov
stc
aad
lods
data16
testb
add
add
lods
lods
mov
add
add
sub
pop
add
push
push
push
call
add
pop
push
shll
add
jle
out
add
lret
xchg
add
pop
les
push
mov
xchg
add
nop
cmc
lock
pop
add
testb
mov
add
mov
push
icebp
add
jmp
stos
loope
add
insb
mov
rolb
pop
loop
mov
pop
add
push
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
add
add
fcomps
add
push
add
add
pop
mov
mov
xchg
add
add
insb
add
add
mov
jnp
add
cli
rclb
arpl
scas
rcr
add
insb
jl
jle
roll
mov
pop
pop
mov
pop
mov
push
push
push
push
push
push
push
push
call
int3
stc
push
jp
add
out
add
mov
fst
add
add
mov
jne
add
pop
mov
enter
push
std
mov
mov
add
xchg
std
out
pop
jl
add
add
in
in
lcall
sbb
push
push
push
push
push
call
add
xchg
add
mov
mov
stc
add
ja
xchg
pop
mov
lcall
out
imul
add
movb
add
les
add
push
push
sub
add
not
push
push
pop
add
inc
sub
inc
add
pop
rol
shl
not
pop
push
push
push
push
lea
push
push
push
push
push
call
mov
idiv
shl
add
jmp
out
add
cmp
add
add
jmp
data16
enter
add
add
out
add
mov
mov
cwtl
add
add
mov
mov
into
add
jne
push
lea
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
add
lea
pop
add
js
mov
add
or
mov
data16
add
jge
mov
xchg
add
rolb
add
faddl
pop
call
mov
push
push
lea
push
lea
push
call
cmpsb
mov
nop
cli
mov
push
add
scas
jmp
add
bound
in
add
add
add
mov
ffree
pop
sub
pop
movl
push
push
push
push
push
push
push
push
lea
push
push
call
add
stos
cli
add
pop
shl
mov
mov
add
mov
mov
add
popf
add
lcall
inc
call
xchg
mov
add
sbb
push
push
push
lea
push
call
add
mov
int
add
add
aam
mov
add
add
add
jnp
add
add
add
mov
add
movsl
add
movsl
add
mov
add
add
push
add
xchg
xchg
add
fwait
mov
lcall
jne
push
lea
push
call
add
add
into
ljmpw
add
push
mov
add
add
add
xchg
add
jne
push
push
push
push
push
call
xchg
add
mov
fcoml
orb
arpl
test
lcall
add
enter
movsl
ja
add
add
push
add
mov
sub
add
cmpl
add
xchg
lock
into
add
scas
pop
add
add
xchg
sub
pop
call
pushl
push
push
call
add
movsb
jb
add
xchg
mov
add
add
pusha
mov
add
add
mov
in
add
mov
add
cwtl
insb
add
add
insb
add
lods
add
push
add
les
movsl
push
popf
mov
add
fstpl
scas
sub
pop
pushl
call
push
push
sub
sub
push
xor
add
sub
not
pop
sub
sub
pop
push
lea
push
push
push
push
push
push
call
mov
bnd
call
sti
add
mov
out
popf
filds
add
rol
call
arpl
add
add
add
out
add
shll
repnz
jae
add
pop
add
mov
push
ret
sub
pop
pushl
call
push
lea
push
push
call
fcomp
pop
add
pop
imul
les
add
movsl
add
ja
add
add
add
add
push
add
inc
push
push
add
xor
push
sub
add
shl
lea
sub
add
xor
shr
pop
sub
sub
sub
pop
push
push
lea
push
lea
push
push
push
call
xchg
add
pop
loopne
lock
data16
add
jecxz
add
cli
stos
movsl
add
mov
arpl
add
mov
fdivs
add
add
jnp
add
nop
mov
mov
add
jbe
jge
add
fs
add
add
sub
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
call
scas
jl
xchg
xlat
lds
add
add
add
clc
loop
add
add
popf
push
mov
add
aam
add
push
mov
stc
add
add
push
add
add
mov
sub
pop
push
push
lea
push
push
lea
push
push
call
jp
mov
mov
jb
lods
hlt
push
xchg
scas
test
lcall
add
mov
add
pop
add
sub
pop
call
push
push
lea
push
push
push
push
call
insb
jns
mov
mov
lock
lret
je
fcmovbe
mov
stos
add
add
add
sbbb
mov
clc
add
add
add
add
gs
jno
add
fs
add
fdivl
cltd
add
lds
mov
mov
fildl
imul
in
call
mov
push
push
lea
push
push
call
scas
add
out
add
add
jmp
mov
add
loop
add
cmpsb
out
add
add
jns
rclb
lock
push
push
push
push
lea
push
call
jl
add
add
cmc
add
jnp
add
mov
ror
imul
add
in
xchg
add
mov
cld
jno
add
out
add
xchg
jns
add
add
add
add
sub
pop
push
mov
push
lea
push
lea
push
push
call
cmpsl
add
jo
loop
mov
mov
rcrl
add
ret
mov
popa
lods
ljmp
aad
mov
mov
mov
add
xchg
fcoml
aad
add
add
add
cltd
add
xchg
add
lea
add
sub
pop
add
add
push
push
push
push
push
push
call
add
in
les
cltd
cld
pop
lcall
add
int3
repnz
add
cmc
ret
fildl
add
leave
push
add
add
fadds
xchg
outsl
adcb
mov
fldl
iret
jmp
loope
pop
jnp
add
lds
nop
mov
add
mov
sub
pop
add
push
push
push
lea
push
call
rol
lret
add
add
lret
mov
into
add
pusha
pop
add
cwtl
testl
iret
int3
add
xchg
push
lods
cmpsl
add
add
cwtl
lods
scas
cmc
xchg
add
je
mov
add
xchg
mov
jp
add
mov
add
jmp
lcall
xor
popf
out
lret
mov
mov
cmp
add
pop
mov
shl
testl
test
add
in
sahf
pop
jecxz
xchg
lret
add
add
pop
pop
shl
add
in
roll
add
jbe
ret
sub
pop
xor
push
push
push
push
push
lea
push
push
call
add
not
leave
add
add
add
add
add
mov
add
add
add
sahf
add
int
add
std
mov
js
sub
pop
add
push
push
push
push
push
lea
push
push
push
push
call
add
add
pop
add
jl
cli
int3
add
jb
add
add
add
cmp
add
test
sub
pop
add
push
push
lea
push
push
push
push
lea
push
push
push
push
call
cmc
mov
les
fwait
push
push
iret
add
imul
out
mov
roll
jae
mov
jecxz
jp
fisubrl
add
outsl
add
out
lods
add
add
add
add
add
mov
jecxz
mov
stos
add
add
cmc
fadds
rcrb
jl
loope
in
fdivr
lcall
inc
or
popf
out
lret
push
push
push
push
push
push
lea
push
push
call
jle
add
enter
pop
mov
fadds
xchg
add
lea
lahf
in
mov
jbe
add
mov
ljmp
mov
xor
push
push
lea
push
call
xchg
push
add
add
jb
test
mov
lock
pop
add
js
js
jne
add
test
add
jbe
mov
add
pushf
ljmp
add
lcall
les
add
push
lea
push
push
push
push
push
lea
push
push
call
lret
mov
test
fwait
mov
mov
jecxz
push
add
mov
add
js
aam
ffreep
add
add
ror
roll
sub
pop
add
push
push
lea
push
push
push
lea
push
push
push
push
call
add
jo
push
mov
add
loop
add
add
add
add
add
ficoms
add
int
add
sub
pop
pop
mov
push
push
push
push
call
add
mov
out
add
movb
push
push
add
fcomps
add
in
gs
fcompl
mov
sti
cld
add
add
add
add
xor
push
push
push
push
push
lea
push
push
push
push
push
call
aam
add
add
add
mov
add
add
add
int3
stos
add
out
add
shlb
clc
in
add
add
add
in
fcomps
les
lea
push
push
push
push
push
push
lea
push
call
add
add
jle
push
lret
scas
add
add
pop
add
add
mov
add
pop
add
mov
loopne
lcall
push
push
lea
push
call
add
add
fs
lret
mov
mov
add
lock
mov
xchg
imul
hlt
add
add
je
testl
add
mov
add
rcl
pop
loopne
mov
add
add
lcall
inc
or
popf
out
lret
je
dec
push
call
mov
jl
mov
add
add
clc
mov
nop
std
testb
add
xchg
cmpsb
mov
xchg
clc
push
add
rcrb
mov
add
add
lcall
add
push
push
lea
push
lea
push
push
call
out
cli
add
add
fdivs
pop
incb
popa
xchg
add
addr16
add
add
int
je
lods
add
add
arpl
jp
add
add
xchg
add
in
pop
add
push
push
push
push
push
call
add
add
add
aam
xorl
repnz
mov
push
fcoms
imul
add
add
lea
sub
pop
sub
push
push
push
push
push
push
call
add
xchg
add
add
add
rcrb
popa
stos
arpl
sahf
add
iret
jge
mov
jbe
stos
xchg
add
add
lcall
push
push
push
push
push
push
push
push
push
call
add
pop
std
lock
mov
add
mov
iret
lea
incb
add
insb
add
add
fists
js
incb
mov
add
jl
fwait
subb
rep
pop
push
push
call
mov
add
pop
cld
add
jb
lea
jne
add
add
jb
mov
in
add
pop
cmc
loop
add
lds
in
add
popf
pop
add
nop
push
xchg
xlat
fnstsw
ret
xchg
roll
add
loop
push
add
addr16
ret
push
add
sarl
pop
sub
pop
mov
push
push
push
call
pushf
add
rolb
add
add
faddl
cltd
xchg
add
add
jns
mov
mov
add
push
add
add
mov
fwait
add
imull
lret
add
out
movl
jl
pop
movl
lcall
pop
in
push
push
lea
push
push
push
push
push
call
in
add
loop
lahf
add
push
insb
xchg
add
add
cmpsl
add
jbe
rolb
add
lea
shl
in
popa
add
clc
add
pop
xchg
add
cli
add
add
into
add
add
jle
add
sub
pop
add
push
push
push
call
add
add
xchg
xchg
mov
iret
sti
push
add
movsl
add
popf
add
movsl
insb
add
nop
cli
loope
add
add
jecxz
xchg
add
mov
loop
imul
add
xchg
mov
pop
add
mov
push
push
lea
push
lea
push
push
push
push
push
push
call
add
lahf
jmp
add
mov
gs
roll
mov
adcb
xorl
jmp
fsub
xchg
stos
mov
aad
clc
add
pop
mov
add
add
sub
pop
xor
push
lea
push
lea
push
call
pop
push
add
insb
xchg
pop
mov
js
add
fwait
mov
loop
mov
in
test
std
push
add
fimull
stc
add
add
mov
mov
add
add
add
sub
pop
add
push
dec
xor
pop
mov
xor
push
sub
pop
mov
xor
push
push
push
call
loope
je
movb
add
lahf
arpl
add
into
jne
addl
add
ret
aam
add
stos
push
leave
pop
imul
pop
add
xchg
add
lods
repnz
add
jae
roll
imul
test
in
hlt
pop
add
push
push
lea
push
push
call
aam
addr16
add
add
fisubrs
add
add
add
in
push
mov
push
add
add
push
add
mov
call
lock
lcall
rcll
pop
pop
mov
push
push
sub
push
or
not
add
lea
sub
pop
sub
pop
push
push
push
lea
push
push
push
push
call
mov
int3
add
cld
stos
cmpsl
mov
add
add
stos
cld
mov
add
push
add
ljmp
jae
add
pop
loop
les
push
movsl
lock
jns
jecxz
iret
add
add
fs
test
sub
pop
pushl
push
inc
pop
call
push
push
push
lea
push
call
arpl
add
add
mov
movl
push
pop
arpl
pop
mov
add
lock
push
int3
addr16
xchg
add
in
sub
mov
push
lds
add
aad
jmp
iret
shlb
dec
pop
mov
add
lock
push
movl
in
lock
push
push
push
inc
push
xor
add
ror
sub
shr
sub
not
ror
add
pop
ror
shr
inc
pop
push
push
push
push
push
push
push
push
push
call
rolb
add
cmpsb
add
add
cli
nop
xlat
or
insb
lods
add
add
add
add
mov
add
push
cmc
bound
jle
jnp
add
add
add
add
add
mov
popf
je
in
fdivr
lcall
push
push
push
push
push
push
lea
push
push
call
add
add
push
mov
xchg
xchg
stos
push
fdiv
testb
add
fnstenv
add
call
je
fwait
add
lock
pusha
pop
add
add
fldl
addb
mov
push
xor
pop
push
push
push
push
push
push
push
push
push
lea
push
call
bound
add
je
add
push
movb
add
add
pop
add
jnp
mov
aam
add
add
pushf
mov
push
mov
movsl
push
add
in
fdivr
lcall
mov
push
push
push
call
icebp
rcrl
mov
cmpsb
add
add
add
pop
add
add
aad
ljmp
add
pop
mov
les
push
faddl
pop
fildl
out
add
add
je
pop
xchg
mov
loopne
pop
add
iret
pop
add
add
hlt
lcall
pop
in
push
rol
dec
ror
pop
add
push
inc
add
pop
add
mov
xor
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
scas
jl
mov
mov
add
jb
push
xchg
xchg
push
add
mov
movsb
add
rolb
bound
aad
pop
add
add
xchg
les
add
add
add
testb
add
filds
lret
mov
jmp
call
jle
popf
rcrl
add
push
lea
push
push
push
push
lea
push
push
call
mov
mov
hlt
popf
fs
stos
add
jnp
mov
add
push
js
mov
add
add
add
fcomps
mov
add
in
push
mov
push
push
push
call
add
outsl
add
add
add
xchg
mov
gs
add
mov
xchg
add
add
fwait
add
stos
add
scas
add
pop
fs
mov
movsl
add
push
lods
add
stc
mov
in
push
movsb
mov
notl
add
add
arpl
movb
push
add
out
pop
imul
and
push
lea
push
push
push
lea
push
call
push
incb
stos
je
add
test
insb
add
addb
fisubrs
mov
jns
add
stos
add
add
push
cli
jb
fwait
cmpsb
add
sahf
add
rclb
push
leave
add
clc
xchg
in
push
add
add
lods
mov
add
sub
pop
add
push
push
push
push
lea
push
call
fwait
mov
fldenv
add
push
in
imul
jb
into
scas
add
lds
add
push
scas
mov
ror
add
add
scas
int3
add
leave
lods
mov
add
shll
add
add
stos
add
fiadds
push
fists
push
flds
fmulp
sub
pop
add
push
lea
push
call
jb
add
outsl
add
add
pop
add
add
add
popa
mov
mov
add
in
fstl
mov
push
addl
add
lcall
push
lea
push
push
push
push
lea
push
push
call
add
adcb
icebp
rclb
add
leave
filds
add
add
out
add
add
aad
add
mov
xchg
xlat
mov
flds
push
out
add
add
add
add
lcall
dec
and
lret
lods
sub
push
push
push
push
call
add
movsb
add
out
mov
xchg
cmpl
push
pop
add
add
mov
add
addl
pop
mov
cli
xlat
mov
call
rep
push
sub
pop
mov
xor
push
push
push
push
lea
push
call
mov
jl
mov
out
shlb
push
add
xchg
xchg
into
out
jnp
jp
add
mov
mov
pop
xlat
into
xchg
pop
add
add
mov
add
outsl
out
cmc
popa
add
add
lret
xchg
cli
add
je
cld
cmc
add
test
in
in
pop
or
je
mov
xor
push
push
push
push
push
push
lea
push
call
mov
test
push
in
sahf
push
add
add
aad
add
mov
push
call
fmull
cmpsb
sub
pop
mov
xor
push
sub
pop
add
push
push
push
push
call
out
mov
mov
call
add
iret
lock
fldenv
pop
add
nop
sbbl
in
lock
lcall
jne
push
push
add
sub
pop
mov
xor
push
shl
shl
lea
pop
add
pop
push
add
lea
pop
rep
mov
push
push
lea
push
lea
push
push
push
push
push
call
xlat
add
add
pop
xlat
test
jo
lods
stos
mov
nop
xchg
mov
add
add
popf
std
mov
popf
add
shrb
add
imul
xor
push
lea
push
lea
push
lea
push
push
call
push
mov
pop
add
jae
out
add
mov
jge
jecxz
add
stos
sti
xchg
add
add
loope
add
jnp
add
int
add
add
into
mov
mov
sub
pop
add
push
rol
pop
or
je
push
shl
dec
not
pop
mov
push
push
push
push
lea
push
push
push
call
add
add
shll
push
jmp
cmpsl
add
push
in
stos
mov
in
fistpll
pop
bound
hlt
orb
in
in
lcall
sub
lea
push
lea
push
call
lahf
fstpt
flds
jmp
lahf
add
pop
add
icebp
add
add
add
ja
int3
add
add
mov
add
push
outsl
add
add
pop
aam
push
add
add
add
lret
add
add
xchg
add
lcall
movb
add
rep
push
sub
pop
pop
push
push
sub
add
shr
shl
push
push
pop
add
rol
ror
sub
shl
sub
rol
shl
pop
lea
pop
push
push
push
push
call
cmpsl
addl
add
add
ja
add
add
fimull
pop
add
xchg
jno
ja
loope
nop
jp
add
jle
out
mov
jnp
add
pop
add
xchg
add
push
add
sub
pop
pop
mov
push
push
push
lea
push
call
add
push
jnp
loope
add
add
push
repnz
add
add
add
jl
add
mov
add
test
call
lock
arpl
add
sti
add
add
add
add
mov
xchg
fs
jnp
add
jbe
cmpsl
cmpsl
add
cld
enter
push
fiadds
cli
add
in
lock
lcall
insl
hlt
push
not
lea
pop
mov
push
push
push
push
call
pop
fldl
add
loopne
cli
add
add
jecxz
out
loope
add
call
add
loopne
in
lock
jmp
push
push
push
push
push
push
lea
push
push
call
arpl
jo
push
movl
imul
ret
movsl
add
sti
add
fbld
add
ret
jecxz
add
pop
aad
cli
nop
lret
test
mov
add
aam
pop
addl
add
leave
sub
pop
mov
add
push
lea
pop
push
push
push
call
add
addb
add
add
cld
add
test
test
in
jecxz
add
gs
add
add
jmp
add
fs
fstp
add
mov
pop
fs
rolb
add
pop
push
push
push
sub
sub
pop
push
push
add
ror
shl
pop
mov
pop
push
lea
push
push
push
lea
push
push
push
lea
push
push
push
call
add
add
add
andb
lds
add
imul
scas
jbe
add
sahf
add
mov
popf
pop
push
add
sub
pop
pop
pop
push
push
lea
push
push
lea
push
push
call
mov
add
add
xchg
add
add
add
add
loope
add
roll
add
cmp
xchg
bound
fiadds
jmp
ret
add
push
sub
pop
pop
leave
push
dec
inc
dec
pop
ret
push
push
lea
push
push
push
push
push
push
push
push
lea
push
call
xchg
iret
add
int3
add
test
pop
mov
add
xchg
mov
xchg
push
mov
out
jne
add
test
add
test
mov
xchg
xchg
add
add
in
fdivr
lcall
in
push
xor
shl
pop
add
push
push
call
add
loop
add
xchg
loopne
lahf
add
add
jno
aad
add
add
add
sti
fsubl
add
lods
add
cwtl
add
imul
add
popf
add
xchg
mov
ljmp
add
hlt
add
callw
xchg
sub
pop
push
push
push
push
push
call
pusha
mov
fst
into
push
popa
fsubs
pop
add
add
add
add
ljmp
arpl
into
add
cmc
aad
andl
lea
push
lea
push
lea
push
lea
push
push
call
add
je
mov
out
movsl
movsb
add
cmpsl
je
popl
imul
test
pop
add
int
add
in
add
add
add
pusha
xchg
add
mov
add
add
lcall
add
add
xchg
jge
add
int
push
jo
in
in
lcall
push
push
push
lea
push
lea
push
push
call
xchg
add
pop
add
add
movsb
stc
add
cli
add
mov
iret
add
ljmp
add
add
add
add
push
add
fprem
add
add
xchg
cmpb
mov
rol
sar
add
push
mov
fcmovnbe
pushf
xchg
add
add
popf
sub
pop
push
push
push
lea
push
call
add
xchg
add
add
fwait
mov
add
push
pusha
mov
lods
popf
cmpsl
mov
add
ret
test
mov
sarb
add
add
lcall
inc
cld
add
add
push
push
push
call
pop
jbe
add
hlt
int
add
add
mov
add
jmp
add
mov
int3
faddp
add
add
mov
sub
pop
addl
push
dec
inc
pop
test
je
push
not
sub
shl
pop
mov
push
xor
not
shr
shl
pop
pop
pop
push
ror
inc
pop
pop
push
lea
push
lea
push
push
lea
push
call
add
addb
jo
add
les
lcall
add
je
lods
pop
lods
add
cltd
je
scas
xchg
add
add
mov
je
addb
xchg
add
mov
aam
add
push
hlt
fdivrp
jbe
jl
popf
mov
add
mov
pop
roll
sub
pop
pop
push
lea
push
call
mov
cld
imul
lahf
add
in
cmpsb
add
lods
jo
add
in
repnz
incb
cld
jp
insb
jp
mov
in
pop
in
add
add
into
add
pop
add
add
xchg
push
je
add
add
add
add
add
mov
lds
lcall
ret
push
push
push
lea
push
lea
push
push
lea
push
lea
push
push
lea
push
call
mov
add
popf
mov
add
dec
stos
ret
test
hlt
mov
add
add
add
add
add
mov
add
add
mov
in
fdivr
lcall
push
pop
mov
add
push
push
push
lea
push
push
lea
push
push
push
push
push
call
lret
pop
add
repnz
scas
push
add
push
lret
add
xchg
add
jnp
movsb
jno
mov
push
out
add
push
push
push
push
push
push
push
call
add
jmp
lahf
mov
gs
add
add
add
mov
mov
filds
push
add
mov
push
test
add
add
add
xchg
ljmp
rcll
jne
shl
add
imulb
add
lcall
push
add
pop
push
push
lea
shl
pop
push
push
rol
pop
testl
push
shl
pop
addl
push
lea
sub
add
pop
push
push
ror
inc
inc
pop
call
push
push
push
push
call
add
roll
pushf
test
add
scas
rorl
add
pop
add
add
add
cltd
dec
mov
add
add
popf
test
add
jo
push
add
hlt
xlat
add
mov
add
add
shll
lcall
inc
cld
pushl
push
push
lea
push
call
add
add
xchg
out
jne
jle
int
jp
aad
imul
mov
int
xchg
ja
iret
fdivl
add
mov
mov
add
andb
in
hlt
lcall
call
pop
xorl
lret
es
call
roll
repnz
loope
add
in
movb
out
loop
ljmp
add
leave
add
in
call
push
lea
push
lea
push
lea
push
push
call
in
out
cltd
push
add
push
les
mov
xchg
add
sti
pop
mov
in
add
leave
mov
add
sub
pop
call
cmpl
jne
push
shr
pop
pop
push
xor
pop
pop
push
not
inc
rol
pop
pop
push
push
push
lea
push
push
lea
push
push
push
call
jo
add
add
imul
add
test
add
xchg
addb
jb
data16
push
add
leave
push
inc
rol
pop
ret
push
sub
lea
pop
push
mov
push
sub
pop
add
push
ror
rol
inc
add
pop
push
push
dec
lea
pop
push
push
push
push
push
push
call
mov
cwtl
out
cmc
add
cwtl
cwtl
push
sahf
sarb
add
add
add
add
lea
pop
cmpsb
mov
xchg
add
jl
popf
stos
jbe
lds
mov
rolb
push
push
push
push
push
push
push
push
call
add
fistps
add
add
add
add
adcl
lcall
stos
xchg
cwtl
shlb
add
mov
add
add
mov
push
mov
add
gs
add
inc
cld
or
add
push
push
push
push
push
push
lea
push
call
add
out
filds
stos
mov
lret
add
fwait
mov
add
add
repnz
add
add
mov
add
add
scas
fcmovne
faddl
mov
pop
bound
je
add
les
stos
fsubrs
lcall
test
adc
pop
call
push
push
push
push
push
push
push
push
push
lea
push
call
add
jns
pop
add
mov
out
mov
lds
add
addb
cmpsl
cwtl
mov
add
add
pushf
fdivr
add
popl
cwtl
int3
xorb
mov
add
ret
jo
mov
subl
cmpl
jne
push
add
pop
pop
push
push
push
push
lea
push
push
push
push
call
push
add
add
cwtl
test
mov
add
add
jp
mov
add
shrl
in
pop
test
add
add
jge
add
imul
cmpsb
in
mov
add
add
in
loopne
pop
push
lea
push
push
push
push
lea
push
push
call
mov
jge
fldl
scas
add
mov
fiaddl
lds
add
add
cmc
pop
add
add
jnp
addl
add
xchg
in
filds
sarb
push
add
ror
add
add
stos
mov
add
popf
idivl
jb
sahf
mov
add
test
in
lcall
push
push
push
lea
push
push
push
push
call
add
add
add
push
addl
cmc
add
jbe
xchg
ja
lret
cld
mov
add
fildl
sub
pop
pop
push
pop
leave
push
push
push
push
lea
push
push
push
push
push
push
call
lret
rolb
push
add
add
add
sti
add
les
out
xor
add
add
add
add
les
int3
add
jmp
fbstp
push
mov
add
lods
add
rolb
lds
jl
add
loope
add
add
sub
pop
ret
push
push
push
push
push
push
push
push
push
call
mov
nop
fwait
add
add
jle
jno
add
lret
mov
jmp
lods
jns
lods
pop
xchg
add
in
fcompl
mov
push
push
push
push
lea
push
push
lea
push
call
fadd
add
push
add
add
les
mov
js
add
xchg
xchg
add
add
in
in
mov
xchg
mov
add
clc
add
add
pop
stc
add
cld
push
dec
add
xor
pop
push
push
shr
xor
inc
pop
push
push
push
push
call
mov
add
add
mov
in
xchg
add
cld
pop
add
lea
bnd
add
outsl
lahf
xchg
add
mov
jo
add
stc
add
sub
pop
push
push
push
push
add
push
or
inc
add
rol
add
sub
sub
sub
pop
inc
pop
push
lea
add
dec
pop
pushl
push
add
inc
sub
add
pop
call
push
sub
inc
shl
pop
call
mov
push
push
push
push
push
push
call
mov
jae
mov
add
pop
mov
add
add
xchg
xlat
add
fiaddl
in
add
add
jmp
cltd
popf
add
add
scas
rolb
ljmp
jle
add
add
add
add
mov
scas
add
movl
jnp
in
call
lea
sub
push
push
push
push
push
push
push
push
call
fcom
add
jnp
pushf
push
test
cmpsb
add
add
add
test
jl
jne
jbe
sub
add
imull
push
icebp
test
stos
mov
add
fcoms
jmp
add
add
mov
out
sub
pop
mov
shr
push
shl
pop
add
push
push
push
lea
push
push
call
fmulp
roll
add
rcll
imul
scas
xchg
insb
xchg
jne
ja
jbe
add
fidivrl
jmp
jmp
testb
add
je
add
add
add
add
add
in
sub
pop
mov
push
push
lea
push
lea
push
push
call
jne
lods
int
addl
add
pop
jle
gs
add
add
add
addb
ret
add
enter
stc
sarb
add
incb
popf
loop
addr16
lds
add
rolb
lcall
andb
call
add
add
mov
pusha
add
rol
add
jo
add
jne
lea
push
add
xlat
add
test
lods
add
add
ficoms
add
add
stos
pop
add
add
out
pop
mov
shl
fistpll
lcall
inc
or
not
not
pop
add
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
push
in
add
add
scas
mov
add
stos
out
movsl
mov
les
lock
add
add
lods
add
arpl
push
lret
and
insb
mov
add
pop
push
fldenv
add
add
add
lcall
inc
add
add
xchg
jnp
test
push
lea
push
push
lea
push
call
lcall
add
addr16
add
stos
pop
popf
jle
fs
jae
mov
mov
add
add
je
mov
pop
jns
filds
push
add
sub
pop
mov
push
shr
shr
lea
pop
cmp
jne
push
ror
dec
inc
pop
cmp
jne
mov
push
dec
pop
movl
push
push
push
lea
push
push
push
lea
push
push
call
pop
mov
add
add
jmp
imul
mov
scas
jae
imul
add
add
add
add
jns
jge
mov
push
mov
adc
add
add
add
sub
pop
jmp
push
inc
lea
add
pop
mov
mov
push
pop
sub
jne
push
sub
rol
shr
pop
mov
movl
push
shl
pop
jmp
push
xor
pop
mov
mov
push
xor
shr
pop
cmp
jne
mov
push
not
shl
pop
movl
jmp
push
sub
pop
mov
push
not
sub
pop
cmpw
jne
push
push
push
lea
push
lea
push
push
push
push
push
call
fldl
aam
mov
add
fisubrs
icebp
jmp
out
test
add
popf
jmp
jnp
arpl
xchg
ret
add
add
add
jp
std
xchg
lea
mov
lcall
inc
adc
add
inc
pop
jmp
push
add
not
lea
pop
pushl
push
ror
pop
pop
push
shr
sub
add
pop
mov
mov
push
lea
push
push
push
push
push
push
push
call
add
add
jbe
testl
mov
loop
sbbl
in
leave
les
add
add
jns
jge
movb
lock
clc
add
add
flds
push
or
mov
push
pop
add
add
sub
rol
sub
pop
inc
inc
pop
push
rol
sub
pop
push
push
sub
pop
call
push
shr
pop
cmpl
je
push
push
dec
push
or
not
add
not
sub
inc
sub
pop
xor
dec
pop
push
push
push
push
push
push
push
push
push
call
nop
add
fidivl
test
add
push
jp
addr16
add
popf
add
add
mov
test
push
add
addr16
into
xchg
add
fnstcw
les
leave
fiadds
add
inc
add
rclb
add
insb
test
add
add
lcall
push
sub
xor
add
pop
call
push
sub
pop
cmpl
je
push
push
not
lea
dec
push
and
add
xor
sub
dec
sub
rol
pop
lea
pop
push
push
call
add
xchg
leave
mov
xchg
fiadds
add
add
fcomip
fistl
arpl
cli
fisubs
in
hlt
nop
jle
int3
nop
testl
add
int3
fstp
add
loopne
mov
jbe
add
add
call
add
rcrl
in
clc
pop
push
push
sub
lea
pop
call
cmpl
je
push
push
dec
shl
push
sub
add
shl
inc
sub
sub
shr
add
xor
rol
pop
ror
pop
push
push
lea
push
push
push
call
add
mov
add
add
ror
mov
push
add
stos
push
data16
add
cwtl
imul
add
ljmp
jnp
add
movsb
add
add
lock
xchg
les
add
add
mov
lahf
add
jno
add
add
in
lcall
push
ror
sub
lea
pop
call
cmpl
je
push
push
inc
push
and
add
shl
add
sub
ror
inc
pop
add
xor
pop
push
rol
shr
sub
pop
push
push
push
lea
push
push
lea
push
push
push
lea
push
lea
push
call
cmpsl
int
add
mov
add
add
jp
nop
fcoms
pushf
add
mov
mov
add
jmp
out
add
add
add
shr
pop
add
icebp
add
les
mov
add
push
mov
in
jb
bound
sub
pop
call
push
push
lea
push
lea
push
push
call
ficoms
add
add
adcb
add
xchg
leave
cld
pop
loopne
clc
add
mov
mov
add
movl
fiaddl
in
add
hlt
std
sub
pop
cmpl
je
push
push
dec
push
sub
add
sub
xor
pop
lea
xor
pop
push
push
push
call
add
add
add
int3
rolb
mov
in
add
out
xchg
mov
add
add
rcll
add
push
xchg
test
in
scas
enter
mov
movsb
lea
sub
pop
push
call
push
shl
dec
pop
cmpl
je
push
push
inc
add
push
or
not
add
ror
sub
xor
add
add
pop
pop
push
lea
push
push
push
push
push
lea
push
push
push
call
test
add
lds
shl
mov
jle
js
add
jo
mov
add
add
test
sub
pop
push
call
push
lea
shr
sub
lea
pop
cmpl
je
push
push
shr
dec
push
or
inc
add
rol
not
sub
shl
pop
sub
pop
push
push
push
push
call
xchg
int
fwait
add
enter
add
add
mov
lods
add
push
add
mov
fadds
imul
mov
mov
addb
sub
pop
push
push
lea
push
push
push
push
push
push
call
add
add
out
add
jo
add
jo
add
xchg
jmp
jo
mov
scas
fildl
mov
add
add
outsl
fcmovnbe
les
mov
add
cmpb
pop
call
push
lea
push
push
push
lea
push
lea
push
push
lea
push
push
call
jmp
test
add
repnz
test
jge
add
add
sahf
imul
xchg
in
fdivr
lcall
cmp
test
add
push
push
add
push
or
not
add
lea
not
sub
shl
sub
pop
rol
shl
pop
push
add
sub
pop
push
call
push
push
push
push
push
lea
push
push
call
pop
jb
fcomi
pusha
nop
cld
jle
in
mov
xchg
add
add
add
add
mov
mov
push
fwait
add
fsts
add
add
jo
add
nop
fwait
add
push
mov
lods
add
sub
pop
cmpl
je
push
push
add
shl
add
push
and
add
sub
inc
sub
add
pop
inc
pop
push
push
push
push
push
lea
push
lea
push
call
mov
add
xchg
add
in
mov
add
lret
add
jb
rcrb
out
aam
add
cwtl
mov
stos
les
out
xorb
repnz
add
add
lods
add
add
call
push
inc
not
ror
pop
cmpl
je
push
push
sub
push
and
add
sub
xor
sub
shl
sub
pop
not
shr
pop
push
pop
push
push
shl
not
pop
call
push
push
push
push
push
lea
push
push
call
push
jle
pop
loopne
xchg
xchg
jnp
push
flds
jno
add
add
add
add
loope
add
add
pusha
lret
cmpsl
ja
ljmp
js
xor
pop
ret
in
add
add
mov
push
lea
push
push
push
push
call
cmc
mov
xchg
add
fists
stc
add
add
xchg
push
add
jmp
push
push
add
mov
in
add
add
add
pop
fadds
cmc
add
pop
lea
jmp
sub
pop
mov
push
lea
push
push
push
push
push
push
lea
push
push
call
subl
test
pop
hlt
fists
add
add
movsb
add
sahf
popa
into
xchg
add
lods
xchg
leave
gs
add
movsb
add
add
add
lret
loopne
clc
add
lcall
testl
jno
jbe
mov
stos
xchg
xlat
jl
sub
pop
movl
push
xor
pop
jmp
push
ror
dec
pop
xor
push
not
pop
pop
push
push
push
push
call
xchg
outsl
push
add
xchg
cmpsl
lcall
add
mov
push
int
sti
int
push
out
add
add
xchg
add
sub
pop
pop
push
sub
ror
pop
pop
push
shr
pop
pop
leave
push
lea
pop
ret
push
push
inc
add
pop
mov
push
pop
add
push
lea
push
push
push
push
push
push
call
add
add
mov
sbbb
add
lahf
outsl
add
sti
add
lds
lret
add
lcall
jge
add
test
add
add
cltd
int
push
shr
add
ror
push
xor
add
shr
shl
sub
ror
shl
not
pop
pop
push
xor
not
shl
pop
pushl
push
xor
pop
call
push
push
call
scas
into
add
in
add
add
xchg
add
out
add
add
add
add
lret
mov
mov
clc
pop
push
push
push
push
push
call
incb
add
add
push
add
add
add
add
pushf
pop
mov
int3
add
add
out
add
add
in
pop
roll
in
lock
lcall
shr
pop
sbb
add
std
not
pop
cmpl
jne
push
lea
push
push
push
push
push
push
push
push
call
add
pop
mov
addr16
ja
test
add
stc
lahf
iret
cmpsl
lea
add
add
add
lahf
add
hlt
add
add
rclb
xchg
pop
popa
add
loop
push
cmc
testl
rcrl
fnclex
arpl
push
xchg
add
pop
data16
add
lcall
inc
or
call
push
push
push
push
push
push
push
push
push
lea
push
call
add
add
out
add
jne
je
add
movsb
mov
in
add
add
add
mov
pop
add
mov
arpl
add
stc
mov
sub
pop
ret
jmp
push
push
push
call
add
jo
add
add
aad
add
add
add
aam
mov
add
add
lea
add
stos
mov
add
add
imul
jbe
add
imul
in
hlt
pop
cmpl
jne
push
push
not
dec
add
push
or
inc
add
dec
not
sub
sub
pop
dec
rol
pop
push
sub
rol
rol
pop
pushl
push
lea
push
push
call
cld
push
enter
add
add
add
sahf
mov
add
std
addl
imul
xchg
fs
loopne
ljmp
movb
add
add
add
add
sub
pop
call
push
push
push
push
lea
push
lea
push
push
call
jns
add
sahf
add
add
stos
add
add
pop
add
iret
arpl
lods
sahf
add
pop
decb
add
outsl
clc
rcl
lea
ljmp
add
adcl
test
in
jmp
add
sub
pop
push
push
push
call
fldt
cmpsb
clc
xchg
lea
imul
mov
add
jnp
mov
add
loopne
test
lahf
add
add
add
mov
loopne
imul
xchg
add
jae
add
popf
lock
jge
cmpsb
icebp
add
in
pop
add
lcall
rclb
push
push
call
mov
cltd
mov
xchg
roll
mov
mov
int
add
test
mov
add
add
roll
rcr
xchg
push
add
rolb
mov
pop
add
lock
lcall
sti
pop
add
push
push
push
push
lea
push
push
call
test
mov
jmp
jp
jne
add
add
add
repnz
add
add
fisubs
add
jbe
add
add
popf
xchg
iret
in
add
add
pop
iret
add
jmp
mov
lcall
jge
add
test
add
add
dec
rcll
lea
push
lea
push
lea
push
push
push
call
xchg
add
test
shlb
add
add
add
add
shrl
test
testb
add
add
lods
xacquire
add
sti
lods
mov
mov
add
jnp
mov
mov
push
add
lods
insb
sub
pop
cmpl
jne
push
push
push
push
push
push
call
add
out
add
add
loopne
add
add
je
add
incb
fiadds
add
mov
add
mov
cwtl
jb
add
jge
xchg
test
mov
add
xchg
add
add
cmc
mov
add
fldl
add
add
push
dec
ror
shl
not
pop
mov
push
sub
not
pop
push
jmp
push
push
lea
dec
push
sub
add
add
not
inc
ror
sub
inc
rol
pop
xor
ror
not
shl
pop
push
ror
add
sub
sub
pop
pushl
call
push
rol
dec
pop
call
push
push
push
or
inc
add
inc
add
sub
shr
inc
shl
not
pop
sub
sub
pop
push
push
push
call
add
nop
mov
stc
in
popf
sar
loope
add
add
add
imul
imul
rolb
fistps
add
add
hlt
add
add
lock
add
adcb
cltd
mov
add
pop
add
pop
int
add
add
sub
pop
pushl
push
lea
inc
pop
call
push
push
lea
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
push
mov
std
aam
hlt
push
add
cmpsb
mov
pop
xchg
add
into
add
enter
pop
push
in
mov
imul
lcall
shrb
xor
push
push
shl
push
or
inc
add
add
add
sub
add
add
rol
pop
inc
add
pop
push
lea
push
push
push
push
call
stos
arpl
js
xchg
mov
mov
add
out
push
add
cwtl
in
mov
fs
mov
pusha
andb
push
std
jb
data16
push
popf
clc
add
bound
xchg
ja
shrl
add
add
lds
add
add
xlat
fdivl
add
jne
push
push
lea
push
call
mov
jle
rclb
add
add
outsl
add
mov
mov
push
push
add
pop
add
pusha
sub
pop
call
push
shr
pop
call
push
push
shl
push
or
inc
add
sub
ror
lea
ror
sub
dec
add
dec
add
pop
shr
sub
pop
push
shr
sub
pop
pushl
push
xor
shr
pop
call
push
push
call
add
ja
add
add
iret
add
mov
pop
add
add
add
pop
push
cld
mov
mov
add
xchg
add
test
lock
int
mov
les
clc
lcall
shrb
inc
loop
push
sub
add
add
push
and
add
add
xor
shr
add
sub
sub
rol
pop
sub
lea
xor
pop
push
not
shl
pop
pushl
push
push
push
lea
push
lea
push
push
lea
push
call
arpl
add
lock
cmpsb
add
add
add
divl
add
add
in
add
out
bound
lods
ret
add
add
add
hlt
fs
icebp
sub
pop
call
push
add
sub
pop
call
push
push
shl
inc
lea
push
or
inc
add
lea
sub
rol
sub
shr
pop
sub
inc
shl
pop
push
add
dec
pop
pushl
call
push
not
ror
add
pop
call
push
push
sub
add
push
xor
add
shr
xor
add
sub
lea
add
shr
pop
dec
pop
push
push
push
push
push
push
push
push
call
add
push
cmpsl
add
mov
mov
mov
cld
mov
rcrb
pop
rolb
std
add
add
add
mov
clc
add
push
add
mov
add
lcall
jne
push
push
push
push
push
call
shrb
xchg
arpl
push
adc
jo
push
pop
mov
add
jo
mov
fistpll
add
pop
leave
fiadds
icebp
add
lret
pusha
add
jns
add
clc
push
add
add
lahf
add
add
add
out
add
mov
in
pop
call
push
add
rol
pop
call
push
push
dec
xor
push
push
pop
add
sub
sub
inc
sub
inc
xor
pop
ror
not
not
pop
push
shl
add
pop
pushl
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
lds
push
lea
enter
add
xchg
push
in
aam
out
repnz
add
ja
scas
jns
add
int
call
xchg
add
test
mov
add
cmc
out
faddl
sub
pop
call
call
push
push
lea
ror
push
and
add
shr
sub
sub
xor
not
pop
shl
rol
pop
push
push
lea
push
lea
push
lea
push
lea
push
call
add
xchg
add
add
in
mov
add
and
xchg
out
js
add
fbld
filds
mov
in
call
pushl
push
push
push
push
push
push
call
add
addl
add
mov
je
xchg
std
pop
fisubrl
add
add
lods
in
add
out
call
lcall
inc
sbb
fisubrs
filds
jg
pop
call
push
push
not
push
push
pop
add
ror
sub
pop
lea
pop
push
not
pop
pushl
push
add
xor
inc
pop
call
push
lea
add
sub
pop
lea
push
push
push
lea
push
lea
push
push
push
push
call
add
xchg
mov
test
outsl
mov
add
jno
out
lds
add
mov
std
add
cwtl
scas
pop
jno
bound
mov
negl
imul
jl
lods
push
dec
push
or
not
add
add
sub
sub
shr
rol
lea
pop
shr
pop
push
lea
push
call
mov
mov
clc
add
push
fwait
cld
ja
add
leave
add
movsb
fiadds
push
rolb
xchg
mov
add
lods
xchg
leave
add
lea
add
ja
pop
int
js
add
mov
mov
fsubrl
sub
pop
pushl
push
lea
lea
pop
call
call
push
push
sub
push
or
not
add
lea
sub
sub
pop
inc
lea
dec
pop
push
add
shr
pop
pushl
call
push
push
push
lea
push
call
add
add
pop
test
pushf
repnz
jno
mov
out
add
mov
xchg
testl
popf
add
add
pop
jno
flds
cltd
mov
jmp
fldl
iret
add
lcall
incb
jnp
add
popf
sub
pop
call
push
push
xor
lea
push
sub
add
sub
ror
inc
sub
xor
not
pop
sub
pop
push
rol
pop
pushl
call
push
push
push
push
call
test
xchg
jge
fwait
add
lret
push
mov
push
aad
pop
add
pop
mov
add
add
add
out
add
mov
jle
test
add
add
add
jnp
jmp
sub
pop
call
push
push
ror
sub
xor
push
push
pop
add
dec
inc
shr
sub
add
dec
ror
ror
pop
pop
push
shr
xor
lea
pop
pushl
call
push
push
push
sub
add
ror
sub
rol
ror
pop
inc
shl
pop
push
push
push
sub
add
lea
sub
inc
inc
pop
sub
shl
add
pop
push
push
push
push
push
push
push
lea
push
lea
push
call
addl
rcrb
cmpsb
mov
lret
test
add
jb
fcom
mov
add
add
flds
xchg
mov
into
fwait
add
add
lods
pushf
in
flds
lcall
rcrb
push
lea
push
push
push
push
push
call
add
mov
add
shll
insb
add
jb
test
add
add
xchg
faddl
mov
jne
add
fiaddl
ficompl
mulb
add
add
jge
ja
enter
lods
mov
sbbb
jecxz
add
add
rolb
cld
add
add
leave
out
sub
pop
dec
jne
call
push
push
push
lea
push
push
push
push
push
push
push
call
jnp
jmp
test
jecxz
add
mov
ret
add
fsubl
sbbb
clc
iret
add
add
mov
mov
ficoml
add
iret
arpl
add
scas
mov
sub
pop
mov
push
push
push
push
call
pop
test
mov
sahf
add
in
push
add
add
add
add
cmc
insb
pushf
cmpsl
mov
add
add
pop
lret
roll
add
testl
mov
xchg
cwtl
add
mov
mov
cmc
add
jl
add
xchg
add
pop
jne
add
add
xchg
iret
je
imulb
lcall
add
push
push
lea
push
push
push
push
push
call
add
jmp
add
add
add
cmc
add
add
add
add
mov
pushf
rolb
shll
push
jb
add
mov
add
xchg
hlt
cmc
mul
add
push
cld
add
add
nop
mov
xchg
out
sub
pop
lea
push
push
dec
rol
shl
push
and
add
sub
dec
sub
not
inc
lea
inc
pop
lea
not
pop
push
push
push
push
push
push
push
call
loopne
sahf
mov
xchg
add
add
add
jno
jmp
push
pop
push
xchg
mov
data16
in
add
int
out
mov
lret
mov
jbe
leave
add
ror
jno
filds
fcompl
add
enter
test
add
add
sub
pop
pushl
push
sub
add
pop
call
push
push
call
add
jp
test
rcrl
xchg
add
push
pusha
aad
add
add
fcomps
add
add
mov
add
clc
andl
pop
aad
mov
add
roll
mulb
in
cltd
add
sub
pop
push
call
push
push
ror
push
or
not
add
add
sub
add
pop
xor
pop
push
shl
sub
inc
pop
pushl
push
push
push
call
sarl
js
ret
fisubs
add
add
add
loopne
push
mov
push
add
cmpsb
lcall
fwait
imul
add
xchg
add
add
lods
add
cmc
xchg
mov
lds
add
mov
add
lcall
insl
push
add
push
ror
add
sub
inc
pop
call
mov
push
lea
sub
add
pop
lea
push
push
push
xor
add
sub
shl
sub
lea
ror
add
pop
xor
add
not
pop
push
push
push
push
push
lea
push
push
lea
push
push
push
call
jbe
xlat
call
loope
add
stos
push
gs
lods
hlt
jae
ret
add
lret
add
clc
mov
out
repnz
add
pop
pushl
push
lea
push
push
lea
push
lea
push
push
call
xchg
add
popa
jb
add
add
jmp
movsb
add
add
test
add
add
fidivrl
sti
add
add
add
int3
add
scas
add
mov
lea
test
addr16
add
hlt
add
add
mov
jno
mov
add
lcall
aas
adc
out
push
push
push
call
add
hlt
add
add
mov
pop
add
out
add
push
add
mov
add
pop
addr16
add
mov
mov
roll
add
sub
pop
lea
push
add
pop
push
push
push
add
add
pop
push
push
lea
push
push
lea
push
push
lea
push
call
rcl
add
iret
cmc
mov
add
add
out
add
gs
lret
add
loop
je
mov
sub
pop
pushl
push
push
shr
lea
inc
dec
push
or
inc
add
inc
sub
inc
shl
sub
rol
add
not
not
pop
sub
pop
push
lea
push
push
push
lea
push
call
popf
popa
iret
testb
add
ret
add
jl
mov
pop
lock
mov
add
gs
add
add
push
lcall
add
pushf
leave
add
cmc
pop
add
add
leave
add
into
add
mov
mov
add
roll
jns
sub
pop
push
push
push
push
lea
push
push
call
add
test
test
fs
out
or
cmc
flds
add
mov
add
add
jmp
add
mov
ja
sub
pop
call
push
push
not
inc
sub
push
and
add
sub
sub
add
rol
pop
ror
add
add
not
pop
push
push
push
push
push
call
fildl
mov
add
out
add
loope
xlat
mov
add
add
add
add
add
mov
fdivl
mov
rolb
add
stos
add
add
sub
pop
pushl
push
rol
dec
shl
pop
call
push
push
lea
push
push
call
cld
add
int
add
add
add
mov
rolb
add
jp
push
lret
popf
add
cli
test
xchg
push
add
jno
add
mov
ljmp
sbbl
cmpsb
push
jbe
add
mov
add
push
movsb
test
mov
sub
pop
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
int3
add
add
mov
add
add
add
mov
popf
lods
pop
add
xchg
add
pushf
fld
cwtl
push
bound
lods
mov
pop
add
push
loopew
ret
lea
mov
add
je
in
loopne
lcall
shrb
in
lea
shll
push
inc
push
push
pop
add
inc
add
xor
not
sub
shl
add
pop
add
pop
push
ror
inc
pop
pushl
call
push
dec
add
sub
ror
pop
call
push
push
push
push
push
push
push
push
push
push
call
adc
add
gs
stos
aam
xchg
add
filds
roll
loop
notb
icebp
add
push
aam
jge
mov
add
add
add
out
scas
rclb
add
add
jecxz
add
lcall
pushl
mov
push
push
lea
push
push
push
push
push
push
push
call
mov
sarl
mov
clc
loop
add
aam
pop
imul
add
add
add
add
add
push
jns
add
roll
add
add
imul
pop
jmp
push
push
add
add
push
or
inc
add
dec
sub
sub
pop
lea
dec
pop
push
ror
pop
pushl
call
push
push
push
push
push
lea
push
call
add
mov
add
add
pop
mov
sti
xlat
fldl
mov
outsl
movsl
out
push
js
jle
add
divl
xchg
lcall
add
shrb
push
enter
repz
or
not
add
ror
add
ror
sub
sub
shr
add
pop
inc
sub
inc
pop
push
push
push
push
push
push
call
cltd
rcl
push
mov
popf
jl
aad
test
icebp
pop
mov
test
add
cli
add
xchg
imul
faddl
out
lds
int3
jmp
jmp
rcr
add
mov
in
call
pushl
push
push
push
lea
push
push
push
call
negb
add
xchg
sbbb
fsubrs
add
imul
cltd
add
nop
in
out
mov
fwait
add
nop
in
int
std
add
jmp
add
jne
imul
mov
add
add
add
add
add
sub
add
push
push
add
shl
shl
pop
call
push
ror
add
pop
leave
push
push
lea
push
push
call
addl
add
jno
mov
add
addb
push
lcall
mov
add
ja
add
mov
xchg
add
add
jne
test
mov
shr
add
add
add
fstpt
test
add
les
pop
push
push
call
fildl
subb
fildl
sti
mov
jecxz
jb
add
add
mov
add
add
add
mov
test
lcall
mov
pop
push
push
push
push
push
push
push
push
push
push
call
add
out
mov
test
loop
jb
iret
add
shl
add
add
loop
stos
addl
mov
fsts
add
add
mov
fucom
call
lods
sahf
fdivl
pop
add
mov
fcomps
xor
push
push
push
call
add
push
in
je
int3
andb
lods
call
add
imul
add
leave
add
add
push
add
add
xlat
mov
add
add
loope
lcall
jb
jmp
fwait
test
idiv
add
cld
xchg
push
mov
in
hlt
lcall
push
dec
pop
ret
push
push
lea
push
push
call
add
add
addb
push
add
in
jb
add
jp
loope
add
add
xlat
mov
sti
mov
xchg
add
add
add
add
mov
add
lcall
push
shr
pop
ret
push
inc
shr
dec
rol
pop
push
push
xor
pop
mov
cmpl
jne
push
ror
pop
mov
push
pop
jmp
push
push
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
call
in
xchg
into
nop
fs
lret
add
addr16
xchg
xor
call
add
mov
add
movsl
jmp
push
add
jmp
jb
mov
add
mov
add
pop
push
add
add
xchg
add
mov
in
fcomps
inc
or
loopne
push
shl
dec
pop
xor
xor
push
shl
ror
pop
add
push
add
ror
sub
sub
pop
xor
dec
push
inc
pop
sub
jmp
push
push
push
lea
push
push
call
pop
add
mov
xchg
roll
mov
add
add
addl
add
add
add
cwtl
add
incb
xlat
add
add
ficompl
lcall
add
add
pushl
push
lea
push
lea
push
push
call
add
pop
addb
add
out
add
mov
mov
add
add
add
icebp
mov
add
mov
add
add
jge
lds
add
cli
add
ja
add
add
jecxz
add
add
add
pop
pop
sub
push
not
pop
cmp
jne
mov
push
lea
push
push
push
push
lea
push
lea
push
call
mov
lock
pop
mov
int
lds
into
mov
add
add
add
cmpsl
mov
add
mov
test
push
pop
jmp
jo
push
stc
ljmp
add
add
loop
test
fwait
add
add
add
lcall
dec
cmp
jmp
push
push
push
lea
push
push
push
push
call
bound
cld
mov
popf
negl
jle
lods
add
movsb
add
push
jge
scas
xchg
scas
mov
stc
cltd
out
test
addl
in
fdivr
lcall
or
jmp
pop
add
sub
push
lea
push
call
fidivl
popl
mov
add
push
mov
add
out
add
pop
lods
mov
add
fwait
out
mov
add
add
xchg
stos
add
jmp
sub
pop
pushl
push
add
xor
not
pop
pop
push
sub
pop
shr
push
add
sub
shl
pop
and
push
inc
xor
xor
pop
sub
cmp
jne
push
xor
lea
pop
leave
push
sub
shr
pop
ret
push
push
push
call
in
aam
mov
add
add
test
into
cwtl
add
clc
mov
std
mov
popf
add
add
pop
add
popf
in
mov
popl
mov
add
hlt
pop
push
mov
push
ror
pop
add
push
pop
push
push
push
push
push
push
push
push
push
push
push
call
mov
add
cmpsb
jecxz
leave
int3
jae
shll
jno
std
add
add
pop
jmp
xchg
mov
test
movsl
incb
lret
popf
addb
add
lret
add
add
push
add
mov
mov
add
mov
aad
jle
pop
mov
in
fcomps
push
push
push
push
lea
push
lea
push
call
lret
add
mov
js
mov
enter
loope
arpl
lock
shll
add
fldenv
add
repnz
add
add
xchg
add
pusha
add
xchg
mov
in
add
jb
mov
test
push
shr
add
ror
dec
pop
push
push
push
lea
push
push
push
lea
push
push
push
call
xchg
jne
nop
add
mov
xchg
xchg
loop
aam
js
faddl
cld
add
add
popa
add
loopne
add
xchg
add
mov
stos
lea
mov
add
add
cmpsl
jae
push
mov
add
add
mov
loop
scas
pop
add
outsl
lds
faddl
mov
push
push
lea
push
call
mov
sahf
add
stos
mov
into
xchg
cltd
add
add
add
fmuls
add
mov
ja
loop
fcompl
add
add
fiaddl
sti
leave
push
pop
out
add
jns
jbe
rolb
ja
arpl
addr16
mov
in
hlt
pop
lea
sub
push
lea
push
push
lea
push
lea
push
push
lea
push
push
push
call
add
mov
lods
fidivrs
add
int
add
outsl
add
cltd
andl
add
mov
add
add
mov
cltd
add
movsb
add
add
mov
xchg
mov
movsb
scas
jne
sahf
add
add
shlb
filds
add
sub
pop
mov
shr
push
xor
xor
xor
pop
add
mov
push
push
push
push
lea
push
lea
push
push
push
push
call
mov
rol
add
mov
std
sti
add
movl
lea
rcrl
add
pop
fwait
xchg
lea
add
js
lahf
add
add
hlt
jge
pop
xorl
add
out
mov
add
pop
add
jbe
cwtl
add
sub
pop
add
push
push
push
lea
push
push
push
push
lea
push
push
call
jge
mov
add
pop
mov
mov
popf
fwait
add
jne
add
mov
ljmp
jo
jnp
mov
add
lcall
jnp
push
sub
dec
xor
pop
add
push
push
push
push
push
push
lea
push
call
jecxz
push
add
lds
xchg
fiaddl
add
cwtl
add
mov
add
add
xchg
stos
lock
add
incb
rolb
mov
add
icebp
data16
add
add
ljmp
mov
lahf
add
jbe
rolb
in
xor
push
lea
push
call
stc
pop
jmp
add
int
call
jmp
add
pop
out
jne
add
add
jmp
push
add
sub
pop
mov
push
lea
push
lea
push
push
push
push
push
call
cmpsb
pushf
lea
in
add
cmpb
mov
test
add
add
add
pop
add
popa
add
add
add
sti
notl
lock
xchg
pushf
arpl
jae
faddl
add
cmpsl
cmc
add
sub
pop
and
rol
push
sub
sub
ror
ror
pop
rol
xor
push
push
push
push
lea
push
call
jge
add
add
and
add
test
xchg
add
cmpsb
mov
add
add
pop
mov
scas
add
push
sub
pop
inc
cmpb
jne
push
lea
push
lea
push
push
push
call
std
fldl
add
les
lea
into
add
xchg
add
xchg
cmpsb
add
mov
add
jl
enter
sti
jns
add
mov
jb
enter
jns
dec
add
call
lcall
inc
pop
ss
push
not
shr
ror
pop
cmp
je
push
sub
add
xor
rol
pop
add
push
sub
pop
cmpl
jne
push
add
dec
rol
pop
xor
push
push
call
test
adcl
add
loop
mov
lds
add
aam
out
add
lea
push
test
call
push
addl
sahf
pop
add
jno
add
out
add
lods
add
add
test
jmpw
sub
pop
pop
push
shl
not
rol
pop
pop
push
push
lea
push
call
imul
add
mov
add
add
in
rolb
test
xchg
xchg
add
push
lock
add
add
mov
imul
hlt
pop
pop
push
sub
sub
sub
pop
pop
pop
push
ror
pop
leave
push
xor
pop
ret
push
push
push
lea
push
push
push
push
push
call
ja
jp
mov
add
mov
pop
idivb
stos
add
add
mov
cld
xlat
arpl
add
lcall
push
adc
push
or
mov
decb
call
sub
add
stos
add
add
add
pop
jae
add
pusha
stos
into
test
add
pop
pop
add
mov
push
add
add
lock
stos
xchg
ret
jne
mov
sub
pop
mov
push
shl
pop
cmpb
push
push
lea
push
push
push
push
push
push
call
add
jb
add
add
add
rcrb
in
add
push
add
ret
into
add
add
testl
lret
fmul
add
add
mov
add
jo
mov
lret
flds
pushf
add
add
add
add
std
call
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
add
jno
add
add
sarl
pop
push
pop
add
stos
rolb
in
imul
mov
mov
loopne
add
movl
movsl
xchg
add
add
add
loop
in
fdivr
lcall
es
call
scas
lea
push
lea
push
push
push
call
push
pop
add
popf
add
addb
faddl
aam
add
outsl
lods
mov
shl
jns
jecxz
push
push
imul
mov
stos
mov
fmul
lock
add
add
ja
add
lcall
xor
pop
push
not
pop
pop
pop
push
push
push
lea
push
lea
push
call
repnz
add
add
out
js
nop
add
push
iret
add
add
jmp
mov
ret
add
mov
xchg
add
jmp
add
stos
mov
add
pop
push
inc
pop
pop
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
stc
lods
add
scas
mov
add
cmpsl
pop
mov
lds
add
fsub
push
shlb
mov
add
add
cld
jmp
add
mov
add
add
int3
jmp
add
pop
aam
add
sub
pop
leave
ret
push
sub
pop
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
lea
push
call
cwtl
add
add
mov
lret
add
fidivs
in
mov
add
popfw
stos
movsb
rcrl
add
jge
pop
add
loopne
arpl
add
push
add
add
sub
pop
mov
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
aam
add
shlb
sar
movsl
mov
push
xchg
int
xchg
call
jns
in
jle
je
add
add
je
sti
jae
xchg
jno
js
add
fld
les
je
add
fdivrl
jno
test
in
fcomps
hlt
push
push
push
push
push
lea
push
push
push
call
fdivr
add
bound
fucomp
add
bound
add
shlb
jp
mov
loopne
add
add
scas
pop
cmpsl
xlat
add
enter
cld
add
sub
pop
push
push
push
push
lea
push
push
call
jns
mov
xchg
add
mov
mov
mov
addl
push
cwtl
mov
add
je
add
test
shl
jp
add
add
lcall
push
shl
sub
ror
pop
push
push
sub
pop
push
push
push
push
push
lea
push
call
mov
add
xchg
add
push
pop
shl
je
add
add
jp
add
jns
push
mov
mov
mov
add
pop
add
add
add
pop
or
ds
push
push
push
push
push
call
jmp
mov
mov
push
add
add
add
mov
into
clc
add
add
mov
add
cmpsl
add
int
xchg
pop
test
add
mov
add
movsb
add
add
lcall
stos
insb
add
lcall
push
add
add
pop
pop
push
sub
pop
lea
push
add
rol
sub
sub
pop
sub
push
lea
push
push
push
push
lea
push
call
hlt
add
add
in
jb
loope
add
add
mov
add
add
add
add
mov
add
add
pop
roll
mov
in
call
mov
shr
push
add
not
pop
add
mov
push
pop
add
pushl
push
push
push
call
add
add
pop
cmpsl
testb
add
mov
add
add
stos
add
lret
mov
cli
roll
je
mov
mov
add
xlat
movsl
out
fs
pop
popl
mov
push
lea
push
push
push
push
lea
push
push
push
push
push
call
adcb
jno
add
add
add
fdivs
add
cld
data16
cmc
add
add
cmpsb
in
ja
add
add
stc
push
add
dec
pop
xor
push
rol
pop
lea
push
dec
pop
mov
push
push
push
push
lea
push
push
push
push
call
add
mov
add
jecxz
xorb
arpl
add
mov
push
out
add
add
add
mov
fsub
lock
xchg
add
lds
xchg
add
cmpsl
mov
in
loopne
lcall
rcll
push
push
push
call
jmp
add
jnp
pop
add
lds
addr16
add
pop
add
ljmp
xchg
add
mov
xchg
add
fcmovu
sub
pop
xor
push
dec
lea
lea
rol
pop
rol
nop
push
shr
sub
xor
add
pop
nop
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
nop
xchg
add
icebp
mov
add
cli
mov
jl
pushf
leave
add
add
add
add
add
sub
inc
pop
nop
push
rol
ror
pop
inc
push
push
push
call
push
add
shlb
add
call
in
add
mov
add
mov
push
add
popa
add
insb
jb
add
mov
faddl
jno
push
mov
add
mov
lcall
push
dec
rol
shr
add
pop
nop
cmpb
jne
push
push
call
add
sti
add
mov
ret
cmpsl
mov
mov
push
add
mov
add
add
cld
add
add
cltd
add
add
lret
mov
mov
out
addl
add
xchg
int
mov
pop
add
nop
push
pop
nop
push
push
push
lea
push
push
push
lea
push
call
add
push
test
cmc
push
add
addb
add
add
add
mov
test
ret
add
add
clc
add
add
fldl
ljmp
aad
incb
inc
or
test
add
push
pop
nop
push
push
push
push
push
push
push
push
push
call
add
pop
add
popa
xchg
add
pop
fdivp
add
mov
mov
mov
js
in
add
add
add
xchg
mov
mov
add
add
add
add
add
leave
mov
xchg
clc
addb
add
int
add
arpl
sub
pop
nop
push
push
push
push
push
call
xchg
data16
fstcw
sahf
add
lcall
add
jb
xchg
add
add
cli
add
faddl
add
stos
repnz
testl
movsb
testl
stos
xchg
xchg
sub
pop
inc
push
lea
ror
shr
pop
nop
nop
push
lea
not
shl
pop
cmp
jb
xor
push
lea
push
lea
push
call
imul
addb
add
add
cld
pop
add
cmpsl
pop
mov
js
fwait
jmp
movsl
les
add
add
jnp
add
add
xchg
jns
cld
loope
testl
add
call
lea
addr16
add
add
add
mov
in
hlt
lcall
pop
add
add
mulb
push
push
push
lea
push
call
jo
xchg
add
xchg
pop
add
je
add
scas
add
popa
mov
push
pushf
add
fldl
push
hlt
add
lcall
rcll
pop
push
push
push
lea
push
push
call
jp
popa
shl
add
mov
test
add
xchg
mov
iret
add
shlb
add
lods
in
lahf
loop
lret
shlb
pop
in
jbe
repnz
xchg
cmpsb
imul
lcall
mov
jb
add
shl
pop
mov
add
push
shr
add
pop
mov
push
add
pop
xor
push
lea
push
push
push
push
push
lea
push
call
rolb
adcl
clc
jmp
cmpsl
add
add
add
xchg
lahf
jno
icebp
xchg
xchg
mov
add
lahf
mov
add
fwait
add
je
push
imul
lret
stos
loop
add
xchg
add
push
cmpsl
add
popf
mov
add
in
in
xor
push
lea
push
push
push
lea
push
push
push
push
lea
push
push
call
int
add
filds
ja
leave
mov
testb
mov
add
add
add
addb
in
jmp
mov
cmpsl
loopne
icebp
mov
lcall
leave
xchg
icebp
cld
pop
add
into
mov
mov
add
decb
add
int
add
add
stc
add
lcall
loope
push
xor
pop
xor
push
sub
ror
pop
shl
push
push
call
add
xchg
mov
leave
fmul
ljmp
pushf
mov
add
xchg
mov
lock
notl
sahf
mov
mov
test
add
addb
test
ljmp
fdivl
out
add
add
popf
pop
add
lcall
dec
nop
add
fadd
jmp
pop
shl
push
dec
inc
sub
pop
xor
push
push
call
cmc
push
add
mov
data16
add
pop
pop
add
add
loopne
mov
xchg
mov
lret
xchg
shlb
add
mov
add
add
cltd
in
add
add
add
mov
add
push
push
push
lea
push
call
pop
add
add
test
add
add
loope
add
add
add
add
add
add
add
cli
add
push
xor
pop
pop
push
add
pop
pop
push
lea
push
push
push
push
lea
push
call
pop
fadds
test
pop
lcall
push
jb
mov
xchg
mov
pop
test
test
add
add
mov
add
add
call
fwait
cltd
add
mov
pop
jbe
movsb
add
shrl
aad
add
call
pop
push
sub
inc
sub
pop
leave
ret
push
pop
push
push
push
push
push
push
lea
push
push
push
push
push
call
icebp
add
mov
in
loop
add
add
lods
jb
add
add
mov
jle
add
nop
add
lcall
hlt
jp
add
add
add
loop
fwait
mov
cld
imul
lcall
in
push
inc
xor
pop
push
push
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
lcall
mov
out
add
push
ret
add
xchg
add
insb
call
add
push
mov
add
mov
jnp
js
add
add
test
mov
jbe
cltd
add
mov
stos
loop
in
fdivr
lcall
push
push
lea
push
push
lea
push
lea
push
call
pop
iret
add
clc
mov
in
xchg
add
add
mov
mov
clc
icebp
test
pop
scas
bound
add
add
push
scas
cld
cld
add
into
mov
in
pop
mov
push
lea
push
push
lea
push
lea
push
push
call
stc
mov
add
sahf
mov
pop
cwtl
sub
fbstp
add
cld
roll
mov
icebp
add
cltd
mov
add
add
fwait
pop
add
xchg
pop
jb
int3
xchg
scas
xlat
add
adc
pop
mov
test
je
push
shr
pop
mov
push
lea
push
call
add
add
lock
int3
add
fidivs
add
pop
add
jno
add
hlt
aad
add
add
mov
std
fsts
testb
push
push
add
push
ror
sub
sub
sub
pop
mov
push
push
push
push
push
push
call
add
pusha
jnp
nop
jecxz
clc
lret
add
loopne
notw
add
add
popf
out
push
add
add
add
adc
add
lcall
add
in
call
mov
push
add
sub
pop
inc
push
push
push
push
push
lea
push
push
lea
push
call
add
add
mov
add
imul
idivl
add
xlat
arpl
call
add
add
out
xchg
into
leave
jae
add
xchg
andb
cmpsb
mov
add
addb
call
jnp
add
jp
rcll
add
pop
cmp
je
push
lea
push
push
push
push
call
add
add
popa
add
add
add
gs
add
push
scas
add
imul
push
push
add
test
push
add
xchg
add
add
bound
pop
add
in
in
pop
test
je
mov
push
push
lea
push
push
push
call
add
movl
add
xchg
add
imull
add
add
stos
repnz
roll
rorl
repnz
add
xchg
add
sub
pop
inc
push
push
push
push
push
push
push
call
mov
mov
xchg
mov
add
jbe
test
lret
add
add
addr16
add
jo
scas
add
ljmp
mov
add
add
add
add
pop
add
mov
lcall
rorb
test
add
push
lea
push
call
add
xchg
add
add
rolb
test
ret
add
add
add
leave
add
je
rclb
add
insb
addb
jo
movsb
ljmp
add
pop
add
imul
add
test
jl
stos
add
add
test
jne
push
push
push
push
call
fidivl
xlat
popl
add
fucomi
mov
lahf
xchg
rolb
add
mov
add
pop
roll
add
in
lock
lcall
rcrb
pop
push
rol
pop
pop
push
push
push
push
push
call
lcall
add
add
shrb
loopne
add
mov
sahf
hlt
rolb
xlat
fiaddl
leave
jmp
add
add
push
nop
fdivrs
mov
pop
pop
push
ror
shr
pop
leave
push
push
push
call
xorl
cmpb
push
mov
add
int
je
fidivrs
adcb
add
imul
add
lods
add
add
mov
add
add
cltd
add
add
xchg
test
add
add
add
sahf
mov
sub
pop
ret
mov
push
push
push
push
push
lea
push
call
add
add
pusha
movb
add
add
fwait
add
jp
out
push
push
xchg
add
fldl
mov
std
movsl
add
mov
add
into
add
add
rolb
jnp
add
add
outsl
add
pop
inc
cmp
jne
push
lea
push
push
push
call
xchg
add
add
out
lahf
push
mov
int
movl
pop
movsb
mov
loopne
add
lds
fisubl
mov
add
add
add
add
aam
add
xchg
cwtl
mov
cltd
test
push
add
add
jo
add
jl
aad
mov
in
lock
lcall
jle
push
inc
pop
mov
push
sub
add
lea
pop
test
je
push
lea
sub
pop
mov
add
push
lea
sub
pop
cmp
jne
push
push
call
in
pop
add
rclb
jbe
cmpsl
add
push
jne
push
fs
mov
add
add
popf
add
insb
add
xchg
add
add
mov
add
shl
jp
out
in
add
mov
testb
pop
pop
js
gs
roll
add
add
add
clc
addb
in
clc
lcall
inc
add
test
je
push
push
push
push
push
push
push
push
push
call
push
xchg
pop
mov
movsl
in
add
add
popa
mov
mov
ja
pop
addl
jmp
add
imull
jae
movsb
cld
add
lcall
callw
lcall
roll
loopne
test
call
sub
pop
push
add
push
lds
lea
push
push
push
call
rolb
sti
add
add
mov
add
add
mov
add
cld
fwait
mov
pop
filds
mov
sahf
sub
pop
jmp
push
push
lea
push
push
call
add
add
lret
jae
pop
add
in
add
ljmp
jbe
mov
ret
fsubrl
xchg
jnp
jmp
mov
test
pop
add
mov
xlat
add
add
stos
add
push
sbbl
add
xor
push
lea
push
push
push
push
push
push
push
call
add
add
roll
les
jmp
pop
jmp
xchg
out
jmp
int3
or
ret
sarb
fidivs
add
out
hlt
add
add
in
loopne
lcall
push
shl
rol
pop
pop
pop
push
push
push
lea
push
push
call
xchg
insb
xchg
add
jle
mov
add
into
cmpsb
fwait
add
fwait
add
add
add
scas
cltd
add
ja
mov
fcmovnb
add
xchg
jae
mov
add
loope
add
add
add
gs
add
add
pop
add
mov
mov
in
pop
pop
push
push
call
add
hlt
in
add
hlt
add
in
ja
sar
add
jecxz
pop
push
out
shl
les
idivb
loopne
insb
jle
add
stos
add
add
into
mov
stos
in
jne
cmpb
rolb
mov
xchg
pop
repnz
jo
add
out
lock
add
sahf
add
add
sub
pop
leave
ret
push
not
xor
lea
dec
pop
lea
push
sub
shr
pop
pop
push
not
add
pop
pop
push
not
sub
inc
pop
pop
push
lea
push
call
add
faddl
pop
pop
add
rcl
jb
mov
add
jo
xchg
in
add
add
add
repnz
add
push
lea
pop
leave
ret
push
add
dec
ror
pop
mov
push
shl
ror
pop
pop
pop
push
push
call
pusha
stc
sahf
add
pushf
add
add
in
jo
add
xchg
fs
roll
add
cmpsb
cld
add
fdiv
add
add
jp
add
mov
add
test
sub
pop
pop
push
not
sub
pop
pop
leave
push
push
push
lea
push
push
push
push
call
movl
out
pushf
rcrb
popl
add
mov
fnstcw
add
iret
add
jecxz
jmp
in
in
lcall
or
lods
pop
in
lret
out
lret
out
lret
ljmp
mov
out
lret
out
lret
out
lret
out
lret
in
lret
add
pushf
mov
inc
es
subb
jb
sub
adc
lcall
aaa
cmpsl
enter
and
adc
pop
rcrb
mov
mov
int
or
add
stos
mov
dec
push
cmp
cmpsl
cmp
loopne
cmpsl
jge
sub
stos
push
jl
ja
std
inc
stos
fldenv
xchg
mov
sahf
icebp
out
ja
insb
lds
xor
xor
bound
scas
or
inc
in
pop
cmp
dec
js
inc
sbb
lock
stc
mov
xor
out
jl
mov
mov
iret
clc
ja
in
cld
in
jbe
test
jmp
mov
pusha
jo
das
int
cmp
sbb
push
or
inc
mov
jecxz
push
pop
mov
pop
es
dec
int
inc
ficoml
and
or
dec
xchg
scas
arpl
je
xchg
fcmovnu
hlt
jne
inc
lods
in
jmp
fwait
and
stc
jp
sahf
popf
xchg
pushf
loope
mov
adc
cmp
mov
cmc
repz
outsb
icebp
pop
daa
xlat
sbb
test
sti
adc
arpl
mov
mov
aas
inc
pop
cmp
push
xchg
std
jnp
sahf
ret
ret
test
mov
fstl
or
sub
stc
test
xchg
clc
push
inc
rcrl
andb
mov
js
mov
mov
pop
sub
fldl
mov
ljmp
push
jbe
pop
push
push
mov
add
cmp
and
int3
adc
or
add
jno
xchg
pushf
in
dec
inc
push
mov
lea
lahf
fs
stos
test
mov
aas
test
and
clc
cmp
mov
negl
and
loop
push
jne
stc
sub
pop
fbld
mov
int
sbb
testl
rclb
lea
out
xchg
fldcw
fs
and
ret
pop
das
pop
push
and
popf
mov
adc
mov
xor
mov
lret
arpl
cld
fdivrl
pop
pushf
outsl
pop
pop
mov
dec
or
adc
loopne
xor
dec
jbe
sbb
push
pusha
ds
aad
push
mov
jb
add
dec
insb
cwtl
xor
xor
add
jmp
sbb
mov
push
fmull
inc
cmpsl
jne
mov
out
inc
xor
xchg
insl
mov
mov
negb
fldl
add
mov
das
setl
jmp
fwait
pusha
fistpl
ret
sbb
and
scas
das
sub
outsb
mov
jnp
pop
or
adc
fcompl
mov
adc
or
insb
scas
les
push
ljmp
in
aaa
sbb
lcall
lds
jb
mov
rorb
out
iret
clc
decl
pop
push
push
cmp
stos
call
outsb
inc
sbb
mov
lea
insl
cmc
add
jns
xor
sti
or
lahf
mov
popf
fisubrl
cmp
loope
in
push
add
shlb
jno
jmp
in
jno
shll
and
xchg
call
inc
xchg
lret
add
cmpl
cli
mov
in
push
lea
iret
sub
xchg
mov
and
mov
add
lods
xchg
mov
xlat
dec
je
mov
jo
hlt
popf
inc
lahf
lea
fwait
bound
fst
sahf
les
pushf
fs
cli
rclb
push
jecxz
dec
out
pop
das
sbb
inc
inc
xor
jecxz
stos
mov
sbb
adc
into
mov
xor
jae
pushf
cmp
lahf
icebp
js
sti
mov
or
stos
mov
in
dec
jp
lahf
nop
xor
adc
cmp
xor
in
xlat
cs
gs
fsts
cwtl
pop
cltd
and
dec
fildll
leave
push
jb
push
xor
aas
jmp
push
aaa
sti
and
int
inc
les
repnz
and
je
iret
jmp
into
or
dec
stos
scas
fs
adc
stos
jne
adc
jno
mov
and
out
jg
rorb
popf
in
mov
mov
or
aas
dec
dec
jnp
push
xor
imulb
adc
imul
ret
sbb
out
lcall
scas
out
jns
ljmp
imul
or
xchg
stos
xorb
ss
xlat
jae
insb
cmp
dec
xor
push
fdivrs
pop
jo
jg
cmp
xchg
pop
cmp
jae
xor
rcrb
stos
fcoml
fwait
cmp
nop
mov
jo
adc
or
xlat
daa
insb
add
ret
jecxz
imul
call
cs
fistpl
sbb
mov
lods
and
dec
call
lock
mov
daa
jg
inc
call
cs
sbb
stos
cmp
dec
dec
xchg
mov
inc
lret
jb
jmp
pusha
je
sti
cmp
cmp
pop
rcr
adc
rcll
dec
sarb
pop
rcll
es
xchg
into
mov
or
push
mov
mov
xchg
lds
fcomip
add
sahf
sbb
jbe
cmc
or
adc
daa
ja
sbb
lods
fdivl
xor
orb
add
mov
in
icebp
ss
cmp
push
xchg
jl
nop
js
jns
xor
and
imul
daa
cmp
dec
mov
js
or
mov
pop
ljmp
nop
rcrl
ret
into
pop
ss
mov
jecxz
jns
xchg
mov
cmpsl
sti
addr16
addl
fwait
inc
divb
mov
in
paddsb
push
and
pop
sbb
pusha
jae
rclb
cltd
ret
fbstp
mov
in
lret
pushf
fisttpl
addr16
sbb
das
cli
mov
sbb
push
stos
je
xchg
hlt
gs
push
mov
xchg
jle
inc
loope
test
xor
push
das
lahf
das
mov
insb
scas
paddw
std
jno
lcall
dec
les
pop
or
sbb
imul
sub
pushf
push
cmp
aas
cmc
add
out
dec
jno
pop
loopne
inc
testl
fistpl
fisubl
xor
mov
pop
in
stc
in
add
xchg
jge
fcomps
adc
sti
data16
dec
pop
rorb
add
xor
mov
gs
sub
popf
lcall
pop
out
cmp
cmp
inc
xchg
push
jb
cmp
xchg
push
dec
mov
ja
mov
lea
dec
adc
mov
sbb
lock
mov
xor
jo
xchg
xor
mov
xor
xchg
repz
xor
push
clc
xor
ret
inc
nop
sub
arpl
jge
add
call
aam
fnsave
pushf
inc
les
mov
test
ljmp
shl
pop
jge
cmp
push
in
xor
sti
popa
push
mov
stc
imul
push
stc
sbb
ds
stos
ret
jmp
mov
mov
movsl
jnp,pt
mov
mov
test
dec
jg
cmp
dec
mov
dec
je
push
mov
daa
popa
xchg
jge
into
or
aad
mov
sahf
push
mov
leave
add
jb
jns
iret
mov
sbb
fadd
xor
sbb
je
jl
mov
mov
jns
in
jno
xchg
aad
push
fisubrs
fldl
mov
fimull
cmp
repnz
adc
mov
dec
cwtl
mov
rcl
call
xor
lea
stos
mov
jmp
xor
xor
fwait
in
aam
jb
test
lret
jle
clc
loop
nop
sub
fldcw
js
fimuls
fucom
bound
data16
call
fs
test
movsl
or
imul
mov
fwait
pop
adc
pop
testb
jo
cmpsl
sbb
mov
push
pop
jp
add
sbb
getsec
or
adc
dec
clc
lret
sbb
stos
int
xor
popa
push
ret
pop
xchg
jmp
out
insl
test
adc
dec
outsb
into
ret
rorl
xchg
adc
pushf
push
cmp
add
xor
icebp
stc
cmp
pop
sahf
push
movsl
jge
push
mov
mov
jnp
daa
add
fs
cmp
cli
pop
cmp
jg
popa
int3
pop
sbb
sbb
sbb
enter
cmp
cwtl
es
mov
mov
pop
add
stos
sub
pop
icebp
stc
loopne,pn
sti
call
sub
adc
cmp
aad
iret
loop
pusha
lds
sbb
pusha
flds
dec
repz
mov
mov
mov
in
in
jp
in
mov
mov
push
rcl
imul
mov
out
jecxz
into
out
arpl
shlb
jecxz
inc
les
lret
mov
fnstsw
pop
sahf
call
sbb
lret
mov
adc
mov
in
sti
push
out
inc
popf
mov
push
or
push
add
int3
mov
pop
int3
xchg
stos
aad
add
ja
dec
ja
xchg
or
mov
jle
push
adc
cwtl
rolb
lds
in
jle
xchg
rcll
push
push
pop
jbe
and
jge
movsb
adc
dec
xchg
or
sbb
enter
shlb
push
imul
push
or
sub
aad
cmp
push
data16
xor
xorl
push
aam
push
pusha
add
clc
fsubrl
adc
bound
cltd
pop
popa
pop
sbb
or
mov
mov
cmp
dec
mov
and
mov
repz
push
mov
mov
mov
push
iret
into
xor
add
cmp
xchg
sbb
rclb
cltd
in
daa
repnz
rcll
in
addr16
jle
lret
mov
das
neg
jne
mov
inc
push
clc
xchg
pop
and
add
add
outsb
xlat
inc
mov
inc
mov
bound
xchg
dec
jle
cwtl
push
test
repz
xchg
mov
das
xor
je
rclb
inc
sbb
sbb
test
call
imull
inc
jne
jle
add
push
mov
out
mov
movsb
repnz
loopne
test
inc
jecxz
push
icebp
xor
add
mov
subb
jo
xchg
outsb
add
insb
cwtl
icebp
sub
sub
xchg
xor
xchg
cli
icebp
mov
adc
aad
mov
in
xchg
lds
and
fadd
mov
popa
scas
push
mov
cs
mov
mov
movsl
arpl
jb
mov
sbb
jmp
ret
fistpll
xor
dec
xor
add
jno
xor
scas
push
or
sti
mov
imul
inc
cmpl
mov
mov
mov
dec
jl
les
aam
daa
dec
lods
cltd
add
mov
lcall
addb
mov
test
and
aam
xor
mov
sti
adc
cmp
xchg
push
in
push
outsl
gs
mov
jae
lds
repz
sub
adc
xchg
lcall
rolb
aas
subl
mov
loopne
jge
dec
jl
mov
ficoms
stos
stos
clc
xorl
js
lock
clc
push
adc
cmpsl
scas
or
int3
popf
inc
dec
mov
mov
lcall
pop
push
cmp
mov
push
push
adc
jb
mov
and
jne
add
sub
cmp
cltd
shrl
xchg
push
cmp
add
rorb
add
fwait
daa
imul
out
xor
xlat
pop
sub
lock
mov
scas
mov
daa
in
pop
push
push
lea
roll
std
push
adc
stos
imul
dec
mov
iret
in
dec
or
lea
into
lret
out
xor
les
inc
and
jle
ds
repnz
bound
mov
les
mov
xchg
mov
inc
xchg
int
das
or
jne
andl
dec
in
sbb
mov
or
cwtl
and
xchg
mov
pop
inc
mov
pushf
xchg
add
mov
lcall
pop
pop
xchg
fsub
mov
xor
cmc
hlt
push
sub
pop
ror
lahf
pop
sbb
adc
inc
test
xor
icebp
mov
add
sahf
xor
sti
jbe
and
or
or
in
das
push
ror
ds
fistpll
xchg
mov
dec
stos
ret
les
enter
pop
mov
stos
sub
push
fs
xor
mov
movl
xchg
xchg
pop
and
popa
mov
dec
lahf
cs
sbb
fsin
mov
iret
sbb
jl
in
cmpsl
cmp
mov
mov
and
add
addr16
pop
ret
push
sti
pop
jmp
es
sub
inc
adc
mov
nop
cmp
repnz
lods
daa
or
idiv
ja
or
add
sbb
testb
sbb
pusha
jns
push
mov
pop
movd
leave
mov
in
or
decl
hlt
and
mov
cld
fisubrl
mov
in
ja
stos
mov
dec
loope
xchg
test
xlat
xor
fisubrs
out
adc
jl
dec
in
jge
aad
dec
inc
imul
mov
rorb
sarb
icebp
fidivs
xor
dec
roll
add
and
push
xchg
mov
fildl
mov
or
xchg
ror
out
lock
add
adc
loopne
sub
pushf
cli
sti
or
fcomps
arpl
ss
pop
cld
lea
in
sbb
sbb
xor
mov
cld
roll
cmp
js
jno
je
daa
sub
push
ja
and
adc
inc
dec
sbb
push
xchg
loope
push
push
and
and
aad
cmp
mov
les
xor
cmpsb
hlt
adc
dec
sarb
lods
adc
xchg
fucomp
jb
cmp
and
popf
loope
int3
sbb
out
xchg
push
or
sub
lea
lret
add
cmpl
out
dec
sarb
or
lods
and
inc
in
dec
out
sbb
adc
sub
add
mov
mov
push
mov
int3
sbb
xchg
aad
lret
popa
rclb
sbb
xor
and
orb
xchg
cmp
out
sub
sub
stc
mov
sub
lcall
xorl
leave
mov
pop
sub
xor
and
scas
xorb
jbe
add
and
and
jmp
cld
lret
push
pushf
sbb
and
adcl
aaa
mov
xchg
in
cmp
test
repz
push
and
mov
pop
add
pop
in
gs
sahf
insl
push
xchg
stos
imul
mov
gs
popa
xchg
movsb
mov
stc
out
mov
pop
rep
cmpsl
xor
jne
retw
jae
jle
dec
jns
add
out
push
jmp
xor
bound
jne
push
dec
inc
mov
push
mov
push
arpl
dec
mov
out
xchg
push
mov
mov
data16
and
add
in
or
fstps
je
out
inc
jl
and
mov
repnz
cs
popa
stc
dec
xor
ret
pop
mov
fsts
xchg
xlat
xor
in
cmp
enter
jg
sahf
popl
mov
jns
test
rcrb
jg
int
mov
lret
pop
sbb
or
fcmovb
pop
or
pop
adc
gs
sub
fucom
add
xor
jg
adc
add
pop
ficoms
lods
insl
shr
hlt
xor
sub
cmp
addl
mov
aas
ret
js
jae
push
shll
divb
out
mov
xchg
push
or
adc
mov
pop
fisttpll
dec
xchg
test
nop
cmp
add
pop
pushf
dec
out
lcall
mul
lcall
lahf
pop
xor
int3
pusha
ret
cmc
scas
or
add
pop
sbb
add
xor
bnd
js
sub
pushf
jae
adc
pop
cmp
scas
cld
jle
scas
and
rcl
mov
sbb
repz
and
scas
xchg
or
pop
dec
mov
pop
scas
scas
adcb
cmp
adc
adc
js
xorb
or
addl
mov
rcl
cmc
dec
mov
stc
mov
adc
sbb
push
adc
sub
out
sub
clc
cltd
push
loope
xchg
and
fcomps
bound
das
mov
jle
cli
sbbb
pop
add
mov
push
aam
mul
lret
ds
pusha
imul
and
test
or
aas
scas
jne
cwtl
negl
arpl
sub
xchg
mov
inc
push
xor
push
adc
sub
fldenv
dec
in
ljmp
ds
cwtl
jge
xchg
or
mov
and
loopne
add
or
add
mov
xchg
out
outsb
inc
xchg
push
cmp
test
andb
sahf
outsb
jnp
sub
enter
mov
inc
xchg
xor
out
jmp
out
jns
inc
lcall
aam
mov
out
xchg
xchg
shl
imul
jo
and
sub
lds
outsb
or
lea
rclb
inc
add
in
xchg
idiv
xchg
stos
inc
hlt
fwait
mov
std
fistl
dec
movsl
in
pop
dec
mov
and
push
fcoml
into
popa
stc
push
pop
test
inc
out
adc
xchg
stos
mov
inc
lret
xchg
jl
ror
and
cmpsl
and
jne
lods
add
out
dec
idivl
jnp
add
ret
lcall
xchg
test
mov
in
and
cmc
jge
mov
repz
sbb
lret
scas
test
pop
push
xchg
sti
pushf
stos
aaa
cmp
pop
xor
testb
mov
sub
dec
std
fidivs
cmpsb
fisubrs
xchg
lahf
stos
jne
mov
movsl
add
push
in
aas
daa
rcll
sarl
and
and
es
aaa
divb
mov
add
imul
sbb
flds
jmp
adc
shl
jecxz
pop
mov
pop
inc
jb
or
inc
xchg
out
add
stos
daa
imul
testl
sti
sti
shll
jnp
jae
pop
push
jae
fimull
in
sahf
xor
cld
mov
xor
cwtl
jge
jle
rolb
sub
movsb
xchg
mov
std
add
inc
clc
add
es
cmp
dec
mov
stos
or
lahf
mov
shlb
add
imul
repnz
stos
sar
test
popf
inc
std
push
push
xchg
add
andb
out
shr
into
inc
fistl
sub
fcomps
add
xchg
jmp
xchg
xor
dec
mov
or
xor
fimull
dec
adc
icebp
fimull
sti
int3
xchg
mov
rclb
aas
sbb
jnp
fiaddl
pop
push
xor
jo
lock
pop
sbbb
xchg
jecxz
xlat
in
dec
lret
push
shr
fbld
push
lret
or
mov
js
loope
push
movsl
imul
xchg
stos
fisttpl
mov
adcl
dec
aas
mov
inc
or
mov
inc
dec
inc
add
add
movsb
xor
ficomps
shrb
outsb
jnp
nop
mov
mov
mov
nop
sub
mov
mov
and
les
in
imul
flds
jg
or
dec
mov
sbb
repz
adc
xchg
dec
fnstcw
punpcklwd
sbb
or
jb
movsl
adc
hlt
ss
leave
cwtl
in
iret
rcrb
cli
xor
lret
std
pushf
push
inc
les
xchg
movsb
lcall
mov
mov
xchg
movsl
xchg
shl
pop
popf
cmp
adc
stc
mov
stos
dec
inc
loop
push
mov
inc
test
mov
or
aas
xlat
mov
aas
test
mov
loopne
xchg
add
cmp
push
jnp
movsb
jmp
add
loopne
push
aam
mov
mov
shlb
out
add
arpl
mov
jp
mov
xor
stos
jo
orb
out
mov
pusha
cld
push
insl
inc
mov
in
push
xchg
call
add
call
sub
cmpsb
pop
add
mov
lret
lahf
sbb
test
add
sbb
mov
bound
dec
nopl
ret
pop
lods
push
in
into
xchg
lock
inc
pop
rcl
lock
icebp
mov
sub
rorb
xchg
call
xchg
out
add
int3
push
nop
sbb
rol
mov
jnp
pop
pop
mov
pop
jmp
add
pop
outsl
adc
jp
arpl
mov
add
dec
fdivl
xor
mov
xlat
nop
test
dec
inc
cmp
push
sbbl
test
sbb
mov
fwait
xor
rclb
mov
mov
out
fs
pop
jne
insb
sbb
jp
bswap
addr16
in
xor
mov
mov
push
jl
push
or
mov
mov
mov
ficoml
xorl
sub
js
or
or
nop
gs
cmp
repnz
mov
adc
push
pushf
stos
fidivl
dec
repnz
in
xor
test
pusha
repz
lret
lret
xor
xorb
mov
dec
inc
adc
mov
rorb
mov
shlb
mov
xor
inc
cmp
mov
inc
inc
std
fucomi
add
int3
and
push
push
pop
sbb
mov
push
mov
lds
mov
lods
sbb
and
jo
push
mov
loope
fsts
add
push
cltd
push
inc
mov
jnp
cmc
jae
js
jno
and
mov
jno
mov
int
aad
pop
pusha
dec
mov
fnsave
mov
fidivl
rcrl
add
mov
shll
cmpsl
movsb
ds
push
out
aad
testl
outsl
sub
jb
pop
lea
mov
pop
les
jecxz
mov
bound
sub
sbb
lods
xchg
test
or
add
fbstp
stos
test
mov
lcall
ret
adc
cmc
je
bound
cmp
xchg
adc
mov
mov
sub
orl
data16
and
dec
sbb
jbe
sub
xor
jl
inc
outsl
or
cmp
cli
sbb
call
cmp
adc
out
jo
jnp
repnz
dec
scas
or
adc
jg
aad
add
int3
sbb
xor
outsb
mov
mov
sar
dec
lret
add
jnp
ja
fimuls
data16
cmp
fidivrl
mov
shlb
push
ret
lds
mov
add
shrl
xor
andb
xchg
iret
bound
pusha
sarl
jb
scas
enter
jp
inc
ds
fcoms
pusha
push
jp
and
mov
pop
aas
add
pop
xor
mov
movsb
fistpll
mov
gs
push
scas
dec
cmpb
push
jae
lea
aas
divl
sbb
and
mov
mov
mov
jl
cmp
vmovaps
and
sbb
cmovle
rcl
push
cmpsb
pusha
imul
dec
dec
out
iret
and
icebp
sbb
and
loopne
leave
adc
fsts
cli
cld
push
add
xor
inc
ret
in
mov
cmpb
jae
enter
mov
jno
icebp
jge
dec
mov
and
lahf
mov
movsl
repnz
pushf
lock
rol
scas
in
aad
push
aam
mov
jae
test
int
cmp
ffreep
inc
ss
and
adc
into
test
cwtl
movsl
and
mov
fcoml
nop
or
add
fdivrl
iret
jmp
dec
int3
leave
inc
aas
pop
xchg
xor
xor
inc
push
jns
dec
pusha
pop
sbb
test
rclb
pop
fcompl
test
mov
push
dec
xor
mov
bound
mov
inc
daa
cwtl
fists
sub
mov
dec
push
cmp
sbb
outsb
mov
push
and
xchg
jne
push
stos
fmuls
or
lods
jno
xchg
in
adc
jo
imul
popf
lret
fisttpl
gs
in
icebp
adc
cltd
fimuls
xor
movb
fwait
lret
lret
lods
call
mov
sbb
rcl
pop
gs
push
mov
mov
cwtl
stc
xchg
pop
sti
dec
out
mov
push
mov
aam
insb
in
fsubl
aad
mov
pop
aad
dec
loope
and
sbb
mov
pop
push
cmp
jno
add
je
jno
das
test
lea
popf
fwait
inc
fisttps
pop
jae
arpl
adc
and
in
jbe
mov
xchg
jo
or
inc
inc
int
into
cmpsb
dec
fisttps
or
mov
mov
aad
fdivrs
iret
shll
adcb
in
xchg
test
shlb
pusha
pop
dec
psadbw
mov
adc
jo
mov
mov
inc
dec
jg
and
sbbl
push
repz
neg
xchg
sub
sbb
jnp
ljmp
fnstenv
dec
cltd
dec
inc
xchg
add
add
in
mov
sahf
ss
das
in
lock
cmp
lcall
adc
scas
add
push
movsb
arpl
sbb
dec
adc
movsb
stos
dec
pop
dec
adc
xchg
mov
mov
add
data16
sti
or
dec
push
push
notb
adc
jmp
add
sub
fcomp
std
xor
les
ljmp
push
dec
lods
add
mov
adc
xor
sahf
jg
jb
lea
push
pop
sub
nop
dec
cmp
or
faddl
out
and
and
aad
sub
pop
lret
dec
cli
fldt
cs
in
lods
mov
enter
mov
push
mov
push
aad
iret
cmpsl
push
andb
inc
push
cmp
subb
nop
cmp
cmpb
mov
jo
outsb
sbb
and
dec
loopne
add
and
sti
hlt
xorl
dec
xchg
incl
and
insb
popf
jecxz
jmp
imul
aad
in
aam
les
fcompl
shlb
inc
fistl
adc
je
sbb
add
jg
xor
mov
testb
imul
ror
call
cmpsl
mov
mov
test
and
iret
stos
jo
sbb
push
add
out
loope
push
xor
ja
sub
out
lahf
xlat
mov
mov
mov
mov
je
adc
pop
into
or
enter
mov
aam
mov
lahf
movsb
inc
idivb
mov
or
mov
insb
fwait
and
ret
sub
movsl
ficompl
jmp
xor
add
add
or
loope
mov
lds
add
sahf
cmp
add
or
dec
into
pusha
or
rcll
ds
call
in
cmp
lcall
cmp
xchg
stos
push
sarl
and
dec
ret
jle
push
sbb
xor
out
fsubl
cmp
jle
lea
mov
scas
pop
xor
mov
push
ret
fsubr
push
pop
add
fildl
xor
stos
jmp
cs
cmp
push
lock
xor
stos
stos
or
add
jp
sbb
dec
daa
mov
cmc
lret
fnstenv
jmp
fldt
stos
sbb
inc
inc
ja
pop
sub
sbb
add
movsb
fstps
neg
mov
int
add
inc
dec
mov
sub
and
add
leave
in
sub
mov
inc
insb
lret
ror
imul
aas
xor
push
mov
loopne
stos
adc
add
call
movsb
in
push
sub
sbb
iret
xlat
push
mov
mov
mov
push
jbe
adc
dec
insl
fisubrl
mov
in
sbb
shrb
xchg
add
movsb
sub
pop
icebp
daa
pop
data16
shrl
repz
sbbb
sub
fwait
mov
jmp
sahf
out
rol
pop
je
pop
movsl
lahf
jecxz
stc
pop
cmp
jne
push
cltd
popf
cmp
dec
push
cmp
gs
outsl
das
std
cmpsl
in
loop
xchg
iret
fildll
idivb
pop
add
aam
cmp
std
icebp
inc
sub
push
leave
fwait
xor
jo
adc
aaa
insb
and
movb
stos
cmpsb
out
sti
dec
mov
pop
mov
inc
sbb
pop
jecxz
arpl
sub
repz
in
imul
mov
add
data16
sbb
xor
lret
dec
std
movsb
lcall
aam
pop
mov
movl
xchg
adc
and
clc
and
pop
mov
xorl
lahf
std
dec
dec
jl
mov
testl
mov
les
arpl
test
cmp
pop
mov
push
mov
nop
pop
call
out
call
imul
imul
jge
repz
pop
pop
dec
cli
add
fwait
push
xlat
loope
pop
cmpsl
mul
cmp
push
int
mov
imul
push
pop
dec
mov
push
or
outsl
xchg
xor
lcall
loop
icebp
push
filds
daa
add
fdivrl
jp
cmp
push
sub
xchg
cmp
add
fidivrl
mov
mov
scas
les
sub
cmp
loop
push
mov
std
xor
and
jnp
fidivrl
pop
xor
mov
sbb
pop
sbb
sub
cmc
jbe
sub
fs
xchg
mov
cmc
imul
sahf
sbb
repnz
add
shll
lahf
ljmp
add
arpl
rolb
jecxz
inc
in
out
mov
push
push
push
jg
movsb
out
sarb
lret
push
les
or
ds
mov
jne
and
push
int3
movsb
stc
fdivr
pop
stc
inc
jge
cmp
jns
sbb
jmp
dec
cmpl
xchg
mov
or
call
push
in
cmp
cmpsb
leave
mov
dec
jg
mov
fidivrs
pop
sbb
std
mov
jmp
mov
aam
xchg
sub
sbb
and
in
cwtl
outsb
fstl
iret
clc
dec
lds
movsb
cwtl
mov
iret
xor
dec
pop
or
out
jbe
jb
pop
mov
ret
adc
pop
and
jmp
xor
inc
mov
lret
imul
mov
dec
push
cli
mov
lock
inc
mov
mov
and
lock
enter
sbbb
cmp
movsb
pop
and
shlb
xchg
into
nop
in
pop
push
in
add
cmp
pop
push
mov
out
stos
xchg
dec
mov
mov
icebp
lock
xchg
dec
test
and
and
dec
mov
jb
or
adc
or
loopne
les
shlb
lcall
nop
cmpsl
cmp
pushf
push
or
loopne
cmp
push
faddp
sub
xchg
pop
sub
cmp
clc
xor
iret
xor
test
push
sub
sahf
xchg
mov
fldl
lret
xchg
addr16
das
pop
pushf
cmp
mov
jmp
cmc
cmp
leave
lods
shlb
neg
dec
or
in
xor
pushf
mov
xlat
jno
xchg
push
ret
fnstcw
and
mov
inc
daa
cmp
push
xchg
mov
cltd
fdivr
aas
out
mov
inc
push
out
pop
push
sbb
ljmp
movsl
hlt
sti
iret
inc
inc
sub
divl
xlat
adc
lahf
aam
iret
mov
lret
fdivs
mov
das
in
fcoms
stos
test
xor
cmpsl
adc
clc
outsb
sub
cli
mov
insl
or
mov
in
test
dec
shrl
out
js
or
pop
leave
pop
and
rclb
cmc
jmp
push
pop
or
insl
xor
imul
loopne
push
sbb
pop
stos
push
pop
icebp
mov
mov
insb
dec
sbb
mov
inc
pop
pop
loopne
outsb
adc
imul
sbbl
and
mov
mov
push
call
sub
cli
insl
mov
mov
cli
movsb
pop
jno
jne
imul
and
inc
dec
hlt
idivl
jns
addr16
fistps
pop
out
aas
mov
pop
adc
push
pusha
idivl
popa
push
dec
jo
and
mov
test
mov
lods
pop
test
std
push
xorl
pop
xor
jge
stc
jp
cs
add
stc
cmc
pop
lods
adc
repz
cmp
ljmp
and
dec
mov
mov
mov
xchg
xchg
adc
fsub
xchg
into
adc
mov
test
xchg
lcall
test
push
xor
into
mov
mov
adc
push
fwait
adc
sub
test
and
int3
jecxz
dec
inc
or
pop
pop
pop
xor
and
push
imul
jl
jmp
cs
inc
dec
rcl
out
add
stc
mov
loopne
jp
jae
push
pop
jne
and
sbb
pop
xor
xlat
fstps
mov
or
aas
mov
xchg
outsl
stos
icebp
subb
in
int
pop
mov
loopne
sub
fdivrl
mov
push
adc
sbb
lds
popa
pusha
or
gs
inc
test
mov
xchg
mov
push
mov
or
mov
push
cmpsb
out
mov
dec
xchg
stos
or
aad
add
add
inc
mov
popf
jg
sbb
mov
jo
push
mov
mov
lods
push
mov
ja
daa
cwtl
test
stc
fisttps
sub
and
adc
xor
inc
popa
lock
push
pop
dec
ret
mov
jle
add
lret
jl
mov
movb
xchg
loop
scas
jb
mov
sub
jl
insb
repnz
divl
fisubl
rcrb
call
icebp
gs
ljmp
adcl
lods
fs
add
stos
jecxz
hlt
and
fisubs
aas
pusha
dec
aaa
fwait
cmp
cli
sti
shll
add
jmp
jle
movsl
pushl
xchg
pop
sub
mov
dec
mov
jnp
and
sbb
sub
lret
push
cmpsl
jno
shll
adc
lods
repnz
pop
sbb
xchg
fstpl
fdivp
setno
xchg
ja
mov
int
jle
out
and
ds
mov
cmpl
int3
cmp
ja
pop
jp
adc
les
insl
inc
subl
xor
loope
in
repnz
lahf
rclb
repz
dec
fdivp
pop
insb
je
xor
addr16
push
dec
lahf
sub
mov
sbbb
jl
cmp
cld
popf
das
rolb
xlat
push
and
cmpsb
xor
add
out
push
mov
in
ffreep
mov
out
push
inc
xor
push
dec
push
sbb
stc
sbb
adc
out
sub
pop
daa
mov
imul
out
inc
or
lods
leave
lcall
movsb
jecxz
adc
jno
in
dec
leave
mulb
inc
shl
sub
outsl
add
test
lret
ficomps
mov
mulb
adc
repz
lcall
and
sub
or
add
push
cmp
test
add
test
insl
cmp
ret
lock
hlt
mov
popf
xchg
pop
rcll
pop
cs
jmp
push
push
mov
mov
ss
data16
lret
stos
test
xchg
xchg
mov
add
out
out
pop
dec
jno
sub
pop
push
xlat
xor
cmp
cmp
std
jno
xlat
cltd
out
shrb
xchg
cs
pop
movsb
bound
mov
cwtl
movsb
addr16
sbb
jns
mov
orl
and
idiv
sbb
jle
cmpsb
and
sub
fists
mov
adc
inc
xchg
lcall
push
mov
test
ja
xchg
out
call
sahf
std
sub
nop
add
push
out
std
nop
nop
inc
sbb
push
sbb
jno
outsb
lahf
int3
xchg
cmp
jnp
cli
dec
je
mov
push
repz
jns
dec
or
inc
into
jp
int3
lcall
and
or
lahf
add
push
lods
idiv
into
fcompp
pop
pushf
dec
pusha
pop
rcrb
add
xchg
out
stos
cmc
dec
cwtl
ds
push
push
mov
cli
roll
test
sbb
out
push
daa
cmp
daa
cmpsb
jle
cli
xchg
insl
inc
fistpll
loopne
movl
dec
adc
aas
mov
mov
xchg
push
cmp
jb
mov
int3
es
pusha
push
shrl
cmp
inc
xchg
int3
sub
inc
xchg
enter
jmp
mov
xor
inc
mov
je
mov
or
push
stos
out
xchg
mov
mov
jns
push
xor
rclb
cs
adc
std
jp
shll
cwtl
jmp
divl
push
mov
fistl
jge
je
sbb
adc
xor
loopne
push
sbb
xchg
addl
rolb
cmp
imul
inc
shll
lcall
subl
xchg
fldenv
arpl
and
xchg
nop
pop
nop
xor
and
fs
xorb
inc
jecxz
cwtl
das
cs
fwait
push
pop
adc
mov
fbld
imul
mov
in
test
sub
loop
lahf
out
es
cmp
data16
nop
sahf
dec
xchg
xchg
pop
loope
push
xchg
push
fcompl
scas
fcom
inc
dec
mov
xchg
adc
pop
int3
jecxz
enter
int
or
rol
roll
js
popa
inc
stos
jle
jns
and
les
cmc
add
ja
repnz
mov
xchg
dec
fistpll
arpl
cmpsb
mov
cmc
jge
xchg
cltd
test
dec
jbe
inc
cmpsl
in
aas
mov
fmuls
push
sbb
sahf
in
push
in
xlat
adc
enter
inc
addr16
mov
add
fcmovne
aam
mov
ret
loopne
clc
jns,pt
or
lods
and
adc
pop
adc
test
mov
repz
int3
cmp
adc
adc
add
jno
iret
or
xchg
cmpsl
xchg
mov
fmuls
push
js
mov
pop
jmp
pop
cmovno
imul
ljmp
dec
gs
sub
test
in
and
enter
xor
push
inc
add
sti
out
sti
jg
lods
mov
sar
fwait
lcall
icebp
cwtl
out
scas
adc
mov
ljmp
popf
mov
fmul
cmpsb
or
je
adc
mov
jb
push
arpl
lret
sub
in
outsl
xchg
dec
sub
push
xor
jo
mov
ret
mov
jae
mov
roll
lahf
xor
mov
aad
movsb
ja
and
clc
push
clc
jmp
mov
mov
cmp
jnp
andl
sub
or
xlat
inc
aam
or
pop
sub
add
and
sahf
sub
push
ficomps
test
cmpsl
dec
sub
xchg
cmp
sbb
outsl
std
xchg
cwtl
movsb
pop
js
insl
je
inc
sub
lret
jl
and
mov
arpl
aas
push
add
inc
in
rol
mov
xor
or
push
andb
sub
adc
lds
adc
test
test
test
inc
fxch
xlat
jne
mov
mov
aad
cld
dec
test
repnz
nop
sbb
aas
lcall
dec
xchg
xor
pop
adc
aas
or
xor
orb
jcxz
jge
mov
test
fndisi(8087
je
cs
adcl
outsl
mov
mov
or
xchg
xchg
fisttpll
mov
rolb
cld
in
cmp
les
fisttps
insb
jg
nop
movsb
adc
inc
fcmovnb
mov
test
inc
adc
aam
push
pushf
les
fs
xchg
push
jae
pop
fs
cwtl
aam
iret
pop
insb
push
xor
adc
je
aas
push
iret
outsl
jne
adc
in
clc
lahf
sbb
js
push
xchg
fdivp
fstl
mov
loop
push
mov
push
jmp
sub
push
inc
cld
mov
int3
sti
in
bound
jmp
out
int
mov
pop
cmpsb
nop
and
je
imul
pusha
lods
and
sbb
cmpsl
mov
jle
loopne
fwait
mov
aaa
movsl
mov
daa
aad
pop
stc
nop
daa
mov
jo
rclb
imul
lahf
ss
inc
addr16
popf
aad
adc
or
in
loope
mov
mov
or
jmp
mov
rcrl
sbb
dec
push
outsl
sbb
mov
adc
mov
adc
jle
in
repnz
push
adc
pop
repnz
js
sub
fdiv
dec
xchg
add
scas
cwtl
pop
and
push
negl
aad
adc
mov
sti
jl
dec
mov
xorl
imul
iret
jmp
dec
cmpsl
cmp
movsb
call
sub
lods
jo
lcall
push
pop
leave
repz
icebp
sub
xor
out
adc
icebp
add
repz
mov
mov
pop
sub
jl
insl
test
ret
addr16
xchg
test
push
sub
xchg
in
jns
loope
pop
loopne
adcb
stc
push
pushf
jp
icebp
mov
mov
and
sbb
mov
sub
out
inc
mov
dec
hlt
and
jo
rclb
gs
dec
xchg
push
mov
and
add
push
push
xchg
mov
test
dec
pop
cltd
or
and
gs
mov
rcrl
sub
adc
cmp
dec
push
sarl
cwtl
cs
hlt
fnsave
xor
or
or
xchg
inc
shrl
sahf
mov
sbb
and
dec
push
inc
jecxz
push
xlat
fistl
mov
outsl
lds
inc
add
push
mov
mov
jb
push
jp
jno
inc
add
xchg
xor
inc
int
insb
aam
xchg
stos
push
das
rcrl
shll
cli
cs
sbb
and
push
add
fwait
sub
sar
pushf
cwtl
lret
xor
xor
sub
push
jp
jno
jnp
adc
out
mov
sahf
arpl
and
out
imul
mov
js
int3
xor
mov
fcoms
and
dec
ljmp
mov
and
nop
jbe
loopne
mov
cmpsb
out
stos
repz
fwait
and
incb
pop
or
out
pop
leave
bound
xor
xor
xchg
mov
adc
adc
bound
push
fisubl
int3
inc
repz
push
add
jne
xchg
and
jo
test
pop
dec
pop
push
push
stos
mov
in
add
mov
sbb
lods
sub
in
add
add
dec
arpl
jge
je
jno
mov
mov
jae
xchg
or
insb
xchg
in
outsb
pop
pop
mov
jbe
sbb
mov
leave
dec
and
pop
mov
ficompl
mov
pop
js
lea
ds
dec
test
lar
jg
jge
push
or
mov
ds
fildll
cld
fisttpl
mov
inc
adc
cmp
or
jne
push
andl
inc
rcrb
or
cmc
cltd
scas
fwait
jge
mov
push
sub
aam
lods
in
aaa
adc
leave
je
add
pop
test
or
xchg
cmp
add
sbb
ds
adc
cmp
push
outsb
cmpsl
sahf
out
cmp
cltd
mov
dec
mov
lahf
add
lds
sbb
cmpsl
or
xchg
les
add
loope
mov
xor
mov
movsl
pop
sbb
or
into
loopne
xor
mov
in
arpl
enter
add
pop
sbb
int3
gs
idivl
sbb
rolb
mov
sub
aaa
jne
fidivs
sbb
mov
inc
cmpsl
push
xchg
cmp
sub
add
dec
cmp
dec
cmpl
pop
and
adc
loop
aas
cs
rolb
popa
repz
cmp
mov
xor
add
icebp
fidivrl
leave
cmp
mov
and
fbstp
xor
fisubrl
xchg
or
into
leave
mov
mov
das
icebp
inc
rcrl
roll
subl
jb
fdivrs
in
push
push
sub
push
sbb
xchg
cvtps2pd
out
sbb
pop
cmp
dec
push
cmpsl
out
dec
cld
dec
mov
dec
or
cmp
dec
mov
adc
std
push
hlt
adc
lods
pop
cmpsb
fsts
add
push
xor
shll
fcmovnbe
mov
mov
ljmp
sahf
dec
or
shll
hlt
mov
push
and
cmp
rcrb
jb
rol
push
pop
in
dec
mov
mov
adc
lret
jmp
test
jns
insb
faddl
cwtl
cs
aas
cmp
mov
mov
mov
popa
jbe
arpl
add
sti
outsl
push
pop
insl
adc
cmp
outsb
jp
inc
jae
and
ret
outsl
lods
adc
sti
insb
add
fidivs
ljmp
ljmp
add
imul
jno
add
idivl
repz
fisttps
push
add
push
aad
shlb
mov
repnz
pop
filds
inc
mov
aam
mov
inc
fsubl
xor
lcall
ficompl
leave
xchg
xor
int
in
mov
mov
data16
mov
pop
jl
call
cmpsl
mov
xchg
out
cmp
pop
sbb
sub
and
in
movsl
xlat
ja
fcmovne
xlat
jl
add
sub
or
sbb
leave
inc
leave
xor
and
ret
mov
xchg
leave
mov
mov
sub
cmp
mov
adc
rorl
outsb
sarl
and
test
or
insb
jmp
add
push
out
xchg
mull
ljmp
jle
movsl
push
movsb
insl
add
inc
adc
shlb
jge
mov
js
push
leave
loop
xchg
cmp
xor
or
div
dec
hlt
dec
mov
popl
addr16
loopne
add
push
fsub
mov
rorb
jbe
xchg
jmp
sbb
inc
adc
sub
push
outsb
xchg
sbb
add
and
addl
sub
pushf
das
pop
sbb
mov
xor
enter
and
mov
mov
mov
push
mov
cmc
xchg
ret
movsb
mov
xchg
stc
push
fidivl
xlat
and
mov
jge
sbb
mov
fwait
mov
xchg
mov
xor
or
fdivs
int
les
std
push
popf
jo
mov
jno
adc
inc
in
xchg
add
sti
iret
cs
jp
bound
add
sti
cmp
add
mov
aam
xorl
inc
sbb
lock
xchg
mov
sub
sbb
mov
fidivs
gs
dec
outsb
pusha
xor
push
stos
mov
int3
xor
xor
ss
dec
inc
leave
pop
pushl
push
lea
cs
gs
mov
push
sarb
scas
push
jle
cwtl
cmc
stos
cmc
inc
mov
push
pop
mov
add
add
fadd
pusha
and
jp
sub
int3
pushf
and
shrb
xlat
lcall
popa
loope
cwtl
add
dec
mov
sub
sar
imul
xorb
into
fcoml
push
nop
icebp
scas
and
add
sbb
push
stos
rol
dec
in
and
mov
dec
sbb
lods
scas
jo
dec
cmp
and
or
sub
repz
cmp
shrb
mov
fs
cmp
inc
inc
inc
outsl
stos
enter
lock
lds
dec
mov
push
in
mov
btr
fsub
movsl
add
cmp
mov
scas
pop
adc
xchg
lds
cld
jg
or
xchg
lahf
cli
pop
dec
cmpsl
pop
jp
rcl
dec
cwtl
cmpsb
gs
mov
sub
jbe
add
mov
movsl
mov
xlat
adc
std
pop
out
adc
sub
sbb
or
mov
in
and
dec
add
andl
stos
add
jge
lds
jo
repz
mov
inc
xor
iret
imul
fidivs
sub
pop
jl
test
cs
fisubrl
cwtl
mov
mov
aas
shlw
outsb
dec
cli
jmp
push
and
push
jae
xor
mov
mov
into
insl
xor
cmc
xchg
mov
mov
or
or
sub
mov
xchg
lds
sarl
outsl
jge
imul
xchg
aaa
mov
sub
loope
xor
icebp
xchg
dec
mov
inc
arpl
xlat
sbb
mov
jmp
aaa
insl
adc
gs
inc
mov
mov
jne
in
cld
ret
insl
sahf
ficomps
int3
enter
test
scas
adc
gs
mov
nop
pop
shlb
out
lret
sahf
jns
test
cmpsl
movsl
loopne
adc
mov
mov
lahf
stos
push
scas
test
or
mov
pushf
mov
inc
mov
in
insl
cmc
outsl
daa
cmp
xor
sbb
xchg
loope
pusha
sub
dec
mov
mov
sub
lgs
aad
add
popf
clc
repz
jl
pop
lahf
dec
div
or
outsb
mov
lahf
xchg
inc
arpl
and
loopne
pop
in
mov
mov
add
ja
and
aam
lret
mov
clc
inc
mov
jno
push
shll
xor
pop
ret
adc
scas
jb
xor
push
mov
dec
aad
mov
lret
push
in
aam
mov
rol
fldt
pushf
out
repnz
ret
and
ret
in
adc
int
inc
or
mov
fcoml
arpl
and
mov
xchg
inc
lret
jo
cmp
xchg
adc
inc
jb
arpl
inc
xor
mov
mov
jo
std
jmp
sbb
dec
hlt
out
push
adc
leave
int3
pop
mov
dec
imul
scas
sbbl
lods
xor
jg
in
push
aas
dec
hlt
xchg
xor
sub
inc
dec
sub
dec
pop
pop
cmp
jnp
jmp
jns
xor
cmpsb
pop
add
stos
out
shlb
mov
adc
pop
adc
aad
mov
push
or
mov
fdiv
add
cwtl
out
xchg
bound
xor
dec
inc
or
aam
arpl
sbb
pop
mov
test
fadds
push
rcrl
adc
sbb
add
mov
ror
scas
scas
sub
xor
pop
xor
stos
pop
loopne
xor
and
add
scas
aam
ret
sub
ret
adc
jmp
in
shlb
data16
and
int3
pop
cmp
push
dec
and
bnd
push
outsl
xchg
rolb
mov
jecxz
push
xor
or
ret
in
out
push
std
push
subl
inc
enter
shrb
push
roll
into
jae
out
mov
mov
dec
cmpl
adc
loop
aaa
fisubrs
and
push
in
movsb
fnstsw
jle
xchg
ljmp
pop
lods
jecxz
into
inc
andb
cli
add
fisubrs
insl
pop
lea
leave
mov
sbb
jns
cmp
addr16
aam
jb
xchg
xlat
insb
jbe
call
jbe
push
into
jo
push
cmpsl
aaa
jecxz
and
inc
pop
mov
push
or
imul
jg
pop
pop
out
jp
stos
mov
lcall
jecxz
mov
xor
popa
gs
ds
sub
scas
aaa
mov
pop
pushf
jg
xchg
mov
and
movsl
incb
jge
pushf
jl
pop
mov
lea
int3
roll
mov
push
in
scas
xchg
and
dec
es
test
add
sbb
or
adc
repz
loop
jns
ljmp
cmp
in
loop
mov
int3
mov
loopne
aad
xchg
xchg
or
adc
bound
jp
lods
dec
and
adc
mov
push
xor
mov
sbb
xchg
incl
repz
icebp
xchg
insl
mov
addb
add
jecxz
jp
mov
mov
and
sarl
je
pop
insb
cmp
loop
add
xchg
mov
sub
cmpsl
loope
mov
fnstsw
movsl
push
arpl
in
int3
fsubrs
imul
jo
lret
cmp
je
or
ja
sahf
enter
int
sbb
xchg
push
int3
and
subb
aas
cli
shll
pop
adc
push
sbb
scas
ret
mov
cmpsl
test
lods
cmpsb
cmp
shl
mov
sbb
cmp
cld
cmp
ret
and
stos
in
sahf
cltd
cmpsb
and
mov
add
cmpsl
mov
lahf
arpl
scas
jne
xchg
sub
hlt
aad
xor
fistpll
das
invd
adc
out
sub
jl
xlat
mov
ds
sbb
sbb
xor
mov
pop
test
inc
rcl
cmp
sub
lods
mov
into
push
mov
das
cmp
mov
push
jl
orl
in
jl
dec
adc
test
fstpl
xchg
sbb
imul
pop
rcrb
dec
add
sarb
push
dec
xorb
cmpb
xchg
push
jge
roll
push
in
inc
cmp
stc
add
fucomp
xor
or
cmp
mov
push
adc
js
adc
push
fsubl
lret
mov
ljmp
and
dec
mov
push
testl
sub
push
pop
repnz
and
daa
iret
add
sbb
adc
sbb
cmp
xchg
rclb
push
sub
arpl
daa
jns
inc
movsb
repnz
mov
pop
pop
xchg
mov
pushf
xlat
ja
xlat
rcr
dec
or
cwtl
add
mov
insb
inc
in
dec
xor
push
xor
mov
in
mov
fmuls
and
call
xor
cmp
or
sub
or
mov
xchg
lret
xchg
ljmp
inc
cs
mov
aad
loopne
sbb
jo
mov
jbe
sbbb
and
jno
fstp
int3
xor
or
cltd
cmp
mov
pop
clc
pop
cltd
xor
popf
cltd
inc
jb
into
inc
std
sbb
push
mov
lock
daa
pop
rcrb
je
dec
pop
and
repz
out
jge
cmp
mov
dec
inc
test
or
xchg
jl
adc
bound
mov
mov
jnp
cmp
movsl
xchg
push
jmp
popf
rcl
cmp
icebp
lcall
or
fnstsw
xor
shll
mov
daa
sbb
mov
sbb
xchg
dec
mov
and
xor
aam
xorb
or
ja
mov
pop
add
ja
push
add
or
push
mov
loope
cwtl
in
fisubrs
stc
es
ret
inc
loopne
data16
mov
fcomp
addl
loop
jb
jl
mov
in
mov
jle
pop
aas
or
cmc
popa
cmp
jbe
lock
mov
pop
mov
push
pop
mov
adc
add
adc
jg
mov
not
loopne
push
inc
shrb
push
jmp
pusha
inc
popl
mov
sub
ja
stc
xor
mov
pop
or
es
mov
fsubl
cmpsb
or
call
sbb
into
xlat
or
adc
xchg
inc
mov
cli
cmp
jmp
pop
or
fldt
ds
cwtl
je
ja
ljmp
in
adc
jl
lret
adc
mov
cwtl
fcomps
xlat
adc
cmp
test
xchg
repz
or
test
jl
cmpsb
xchg
mov
ret
ja
mov
fwait
pslld
movsl
insb
push
pop
sub
rcrb
sbb
repz
shlb
xabort
cmp
add
stc
stc
inc
nop
sbb
jmp
inc
or
xlat
mov
dec
movsb
mov
and
sub
xchg
mov
add
add
xor
cmp
xor
mov
jns
cmp
imul
movsl
mov
cmp
cld
in
dec
inc
jns
cmp
scas
mov
test
loop
push
gs
popa
into
xor
dec
adcl
outsb
nop
loope
bound
bound
out
mov
shlb
jns
inc
cmp
xchg
push
cs
xchg
repz
jne
popf
dec
fldl
leave
adc
fs
in
scas
sub
pusha
jp
outsl
dec
xchg
push
add
in
scas
jl
mov
mov
mov
push
mov
add
pop
lea
inc
inc
test
popf
xor
sub
iret
lret
js
out
mov
cltd
sbb
stos
mov
in
mov
test
push
mov
dec
or
sahf
xchg
jge
mov
out
push
lock
jb
stos
or
outsl
dec
jp
hlt
loop
es
xchg
test
push
cmp
dec
ss
sbb
fldenv
pop
scas
xchg
ror
xor
fs
in
push
pop
rolb
and
xchg
push
xor
sbb
xor
loop
cmp
push
pop
stos
cmpsb
fs
jo
je
add
inc
test
push
arpl
jmp
sbb
or
xorb
add
sub
out
pop
call
hlt
cmc
xchg
js
fsubl
or
in
rclb
add
rcrl
cs
push
pop
pop
cmpsb
adc
call
xor
lret
cmp
mov
mov
pop
cmp
stos
ss
das
jecxz
scas
sbb
and
mov
and
mov
icebp
aas
sbbl
or
sub
inc
ljmp
adc
or
fcomps
adc
fs
hlt
repz
cmp
push
stc
sarl
testl
jg
stos
pushf
out
ret
mov
imul
outsl
push
gs
es
sete
xchg
rolb
andb
jns
cmp
ljmp
sub
das
shrl
pop
das
cmc
ret
jg
sti
repz
test
imul
mov
inc
adc
add
adc
pop
shll
lahf
sub
aam
cmp
jae
je
cmpsb
test
dec
mov
dec
movsl
gs
in
fldl
popf
stos
ret
pop
sub
psrlw
fwait
adc
scas
mov
mov
sub
xlat
sub
icebp
cld
push
popa
dec
cmp
adc
jg
and
aam
je
add
mulb
sub
inc
test
divl
pop
jo
mov
sub
dec
push
push
sub
mov
sbb
fcomi
add
inc
mov
cmp
sbbb
and
cmp
or
popa
xchg
or
jmp
aaa
loope
mov
jge
aas
jecxz
xchg
push
fld
aam
sbb
neg
test
cli
imul
in
clc
push
jnp
cmp
inc
movsl
stc
sub
dec
mov
push
ret
into
sub
cli
push
mov
scas
push
shlb
outsl
cld
ret
jbe
pop
mov
rcrb
mov
or
sub
sub
pop
mov
in
push
aas
xchg
ret
mov
sub
addr16
cmp
ror
loope
daa
mov
push
in
adcl
mov
sub
int3
gs
sahf
jns
push
out
mov
xchg
jp
cmpsl
shl
push
add
lcall
push
lods
nop
xor
xor
sarl
fs
add
or
sub
fstps
out
mov
test
dec
sbb
pop
lahf
pop
xchg
je
dec
push
getsec
push
fwait
pusha
and
adc
cmpsl
mov
jl
test
push
cmpsl
addr16
scas
xor
jae
cmpsb
jb
loop
cmp
sub
add
cwtl
scas
mov
cli
js,pn
push
add
das
xchg
pop
pusha
adc
test
xlat
lcall
inc
nop
xchg
mov
dec
pop
xchg
outsb
push
or
mov
sbb
lcall
sbb
fwait
xor
and
mov
daa
push
in
sub
enter
icebp
jne
jb
dec
imul
inc
or
mov
nop
mov
push
rclb
cmp
loope
bnd
aad
aam
add
and
jbe
imul
pop
in
mull
dec
cmp
sbb
lods
and
int3
mov
inc
daa
pop
and
inc
dec
mov
adc
sahf
and
fnstenv
lahf
push
cmc
into
test
jae
je
dec
xchg
jbe
loope
xacquire
mov
fmuls
mov
sub
daa
dec
inc
fwait
dec
adc
add
adc
dec
cmpsl
icebp
ja
cmp
mov
mov
sbb
outsb
std
adc
cmp
jle
movsb
lods
pop
out
lcall
mov
insl
jno
and
push
pop
insb
es
rclb
mov
inc
fld1
out
ffreep
lret
inc
addr16
mov
adc
cwtl
mov
repz
arpl
pop
xor
sti
in
sarl
leave
popa
cmpl
jb
adc
movsb
xchg
xchg
inc
ret
cs
lods
pop
fldl
leave
lea
push
movsl
mov
cmpl
aad
hlt
mov
es
mov
mov
ljmp
adc
shll
cli
cmp
add
pop
push
pop
inc
dec
popf
icebp
mov
inc
push
repnz
mov
fbld
add
movl
dec
shlb
int
jmp
add
inc
push
rcll
cld
jno
test
rclb
int3
jmp
cmp
add
cmc
pop
fisubrs
xorb
rolb
inc
inc
lahf
cmp
dec
push
inc
stc
into
lcall
or
xchg
push
pusha
inc
pop
mov
cmpsl
mov
jne
mov
and
in
sub
jne
div
fnstenv
push
jecxz
andb
stc
test
jnp
sub
push
sbb
lea
pop
test
int3
out
fidivrl
mov
aas
loop
inc
and
cmp
pop
aad
inc
cwtl
out
frstor
rclb
loopne
call
jb
xchg
fdivrl
push
f2xm1
shll
mov
mov
and
mov
push
stos
xchg
aad
gs
mov
fstpl
push
into
jbe
clc
push
lods
dec
dec
fdivrl
mov
movsb
jle
leave
or
mov
mov
call
icebp
or
inc
jg
xor
inc
jecxz
lea
stos
xchg
push
push
loop
outsb
stos
lods
cmc
mov
sahf
inc
adcl
cld
jecxz
inc
sbb
lea
pop
inc
sub
pop
movb
neg
sbb
mov
cmp
add
cwtl
sbb
mov
sbb
repnz
ret
xchg
pop
xor
jns
imulb
lret
rclb
pop
call
pop
mov
pop
inc
in
or
adc
test
and
cld
pop
icebp
icebp
iret
mov
xor
dec
sarb
push
add
inc
mov
xor
add
cltd
stc
test
and
pop
icebp
push
loop
add
cmp
adc
stos
jmp
jbe
call
outsl
sbbl
aaa
pop
out
mov
jne
fwait
push
repnz
pop
mov
loopne
daa
cmp
out
mov
or
add
push
lret
std
cmpsb
ret
or
mov
cmp
inc
adc
jno
rcll
sbb
cmp
stos
nop
jmp
sbb
cmpl
movsb
std
cmp
jg
rorl
lods
sub
cmp
or
xor
mov
into
mov
inc
mov
xchg
xor
pop
sub
pop
ret
lock
dec
decl
adcb
fiaddl
sub
sbb
pop
cmp
and
sub
sub
pop
sub
mov
cmpb
loopne
nop
add
test
out
lret
dec
inc
int3
push
adc
push
aad
mov
cmpsl
cmc
mov
and
rcrl
cwtl
std
in
xchg
jecxz
orb
call
adc
push
jmp
cmc
push
sbb
insl
push
cmp
pushf
rcll
gs
mov
mov
and
jmp
arpl
mov
mov
mov
int
leave
cmp
push
sub
mov
sahf
inc
push
fldt
dec
jne
pop
fmuls
mov
sub
leave
xor
xor
imul
mov
cld
mov
dec
jge
lods
cmpl
aad
mov
xchg
xor
sbb
xor
mov
stos
lds
test
adcl
push
and
cmp
or
mov
in
stos
es
inc
add
push
xor
sbb
jp
sahf
jno
xor
lahf
push
xchg
mov
stos
sbb
in
enter
mov
test
fcoml
inc
fiaddl
pushf
sub
jg
mov
outsl
adc
insl
pop
aaa
xchg
pusha
arpl
inc
xor
dec
adc
or
adc
shrb
xchg
data16
dec
xchg
sub
push
ss
jmp
imul
mov
lock
cmc
clc
inc
add
in
xchg
xchg
outsb
insb
ja
pop
sbb
mov
cmp
pop
or
stc
gs
popf
mov
fsubrs
jns
rcrb
xchg
icebp
outsl
je
xchg
mov
sbb
mov
je
jbe
push
fstpt
cli
iret
sub
movsl
dec
test
lods
jmp
sub
sbb
sbb
jecxz
sbb
js
sbb
push
es
jecxz
push
rcll
hlt
xor
clc
int3
jae
mov
jns
push
mov
inc
mov
xchg
jg
jmp
jnp
loope
jnp
inc
inc
ja
jle
test
inc
cmp
in
dec
mov
cmpsl
sbb
jne
int
les
push
dec
mov
test
add
stos
dec
data16
push
jg
inc
daa
push
es
in
pusha
mov
aaa
cld
das
aas
inc
movsl
je
xchg
cmp
xchg
shlb
mov
mov
cmp
xor
or
pop
pop
fadds
stos
xor
fstl
pop
test
dec
bound
addl
lods
push
fnstcw
shll
aaa
push
cltd
mul
aaa
mov
lea
fs
scas
repz
or
add
mov
adc
fldenv
mov
push
and
mov
pop
imul
adc
add
sbb
lds
push
dec
aam
fwait
pop
cmp
mov
in
push
lods
outsb
lea
mov
jae
mov
fcoml
jge
cmp
push
jnp
ret
std
pushf
out
in
outsb
mov
mov
sti
jae
or
and
pop
or
xchg
xor
jne
outsb
dec
pusha
push
imul
jge
mov
push
fistps
xchg
repz
lds
pop
pushf
xor
pusha
leave
pop
jnp
sbb
push
idivb
sub
push
lds
pop
es
rclb
jecxz
and
enter
out
xor
push
mov
ret
jp
jne
fs
xchg
push
cli
loop
mov
bound
mov
outsb
xchg
incl
int
pop
movsl
cwtl
test
mov
repz
aaa
lret
adc
inc
daa
in
mov
pop
pop
and
scas
xor
movsb
aas
sti
sub
lcall
cmp
adc
fnstcw
or
inc
push
cmpsl
inc
cmp
inc
pminub
ds
ljmp
adc
mov
sbb
pusha
mov
addr16
push
mov
sarl
mov
inc
sti
nop
inc
sub
inc
sbbb
in
sbb
lds
int3
sub
mov
cmp
lea
out
push
xor
jp
fdivrl
fs
mov
mov
lret
mov
add
push
push
int3
pop
push
xchg
rorb
hlt
mov
addr16
xchg
push
stc
sub
sbb
movsb
nop
ja
mov
lock
sbb
fcmovnb
enter
xor
pushf
xchg
sbb
fld
adc
ret
cmpsb
lods
add
pop
pop
stos
cld
int
xchg
movsb
jle
or
pop
test
rorb
std
ds
inc
cmpsl
cmp
pop
fistpll
loop
mov
repnz
push
mov
xchg
addl
ret
xchg
enter
lea
mov
loope
ja
inc
add
mov
mov
movsb
xabort
mov
cwtl
andl
enter
push
mov
xchg
leave
lods
out
adc
xchg
push
mov
fcoml
mov
popf
add
leave
xor
js
aam
mov
xchg
sbb
jmp
jecxz
in
movsl
or
outsl
pop
mov
xlat
lods
adc
xchg
ret
sbb
mov
or
add
cmc
adc
inc
and
leave
or
dec
dec
sbb
mov
mov
bswap
inc
or
aad
outsl
mov
scas
dec
xchg
es
push
add
mov
sbb
aad
and
rcr
fwait
jno
sahf
out
dec
jo
mov
sub
pop
rclb
jno
pushf
repz
xchg
in
testl
xorl
jl
sahf
nop
mov
popf
mov
call
xchg
movsb
mov
call
sbb
movups
or
mov
aam
pop
repnz
xor
movsl
sbb
cmc
dec
addr16
rol
cmp
notl
jg
pop
xor
cmp
mov
cmp
inc
aad
xchg
dec
fcmovnu
jbe
push
mov
adc
and
push
dec
sbb
stos
mov
je
cwtl
xchg
jmp
fstp
lea
fcmove
mov
xchg
test
fsubrs
jno
and
das
loopne
add
sub
in
outsl
ljmp
add
sbb
adc
jns
mov
cwtl
cmp
clc
adc
xchg
xchg
loopne
xchg
jo
jmp
lret
in
jge
scas
sbb
jecxz
jge
sahf
loop
or
sbb
and
in
mov
fwait
aaa
pop
inc
sub
pop
in
shrb
insl
ficompl
adc
fnstsw
push
mov
popa
jecxz
sbb
daa
push
or
adc
pop
lcall
and
shrd
pop
dec
rcrl
leavew
adc
inc
xchg
or
mov
faddl
xchg
cmpsl
add
sub
jl
fdiv
mov
mov
lcall
mov
adc
dec
gs
add
loopne
jae
mov
ret
mov
mov
in
mov
scas
mov
data16
sahf
movsb
xchg
mov
fs
pop
nop
xchg
stos
ret
cmpsb
shrl
sbb
test
jle
scas
dec
add
popa
cli
xchg
sbb
fidivs
cltd
xchg
and
call
mov
cli
neg
fidivrl
stos
jecxz
dec
outsl
xchg
jnp
cmpsl
xchg
inc
std
daa
aam
mov
inc
cltd
cmp
inc
pop
sbbl
dec
fisubrs
jmp
addr16
xchg
push
jmp
add
mov
loope
fs
shll
jge
dec
test
or
xchg
xchg
dec
pop
rcrl
lahf
xchg
sbb
ret
shr
iret
les
sub
push
xchg
sub
icebp
mov
jge
insl
push
pop
mov
cwtl
push
mov
mov
pop
mov
mov
shll
je
test
arpl
adc
jne
notl
mov
and
xchg
inc
jbe
and
es
xchg
mov
subl
mov
popa
dec
xor
push
imul
cmp
inc
rolb
push
icebp
ficoms
cmp
fadd
add
mov
dec
push
mov
mov
js
add
into
call
std
cs
ja
call
xchg
ret
sub
sub
mov
cmp
in
cmp
rolb
pop
inc
jo
ret
mov
cltd
sub
sub
std
push
stos
xchg
ret
loope
hlt
stc
mov
mov
jae
and
stos
repnz
outsb
inc
sbb
xchg
jge
inc
pop
pop
pop
inc
push
iret
mov
push
sub
shlb
mov
dec
xchg
jge
push
addr16
sbb
pop
scas
repz
aam
test
or
negl
test
sub
lret
adc
out
test
sub
ss
rcl
inc
sti
or
iret
inc
scas
scas
mov
lods
frstor
out
loope
mov
xlat
aad
sbb
js
jp
pushf
aaa
rcll
pop
ds
out
mov
mov
pop
lods
cmp
stos
mov
outsl
imul
arpl
fcomps
test
and
push
das
dec
in
fldl
mov
pusha
and
cs
mov
sub
mov
aam
mov
xor
es
lods
popa
cli
mov
xchg
and
and
and
repnz
cmpsb
pop
cmpsb
jl
dec
stos
bound
cltd
pop
jne
inc
test
jecxz
jle
jg
ret
pop
mul
fimull
push
cmc
mov
and
jle
pop
adc
push
pushf
push
mov
clc
add
jp
mov
mov
orb
xchg
fsubl
jp
int
inc
inc
mov
cmp
mov
stc
roll
jmp
loop
daa
in
loope
jbe
sub
out
pop
xchg
les
and
jecxz
jmp
or
cmp
sti
dec
pop
or
scas
sbb
cmp
sbb
lss
movsl
jnp
insl
sbb
daa
gs
loope
cli
imul
imul
or
adc
int3
jp
inc
sbb
aaa
rcrb
jae
xchg
xor
cld
jl
lock
add
cmc
std
mov
stc
xchg
inc
cmp
in
imul
shll
div
mov
aad
dec
cmp
bound
sub
jg
loope
and
cmp
push
add
xchg
jnp
outsb
insl
push
rcl
daa
mov
iret
xchg
sahf
dec
es
cmp
lds
cli
in
pop
ds
sub
icebp
out
sbb
stos
and
fmuls
add
mov
in
in
hlt
push
sbb
or
orb
and
push
push
sbb
sbb
xchg
xlat
test
movsb
fildll
mov
sub
sbb
sub
dec
lods
mov
leave
mov
scas
xor
push
sub
notl
cli
movsl
fiadds
mov
jmp
push
cwtl
push
insb
cld
fidivs
sbb
in
inc
jle
fs
mov
ret
lret
std
or
gs
dec
xor
movsb
xchg
or
cmc
inc
pushf
fdivrs
mov
insl
xor
push
mov
add
mov
and
daa
ds
cmp
xor
leave
out
pusha
pop
push
mov
xor
aaa
jo
sbb
hlt
sub
shlb
imul
insb
ja
xchg
xlat
mov
fdivs
push
xor
pop
inc
ljmp
or
mov
sahf
lock
outsl
testb
jmp
mov
in
cmpsl
stos
aaa
in
push
fdivr
inc
outsl
clc
ret
inc
pop
jnp
jl
aas
lret
test
adc
pop
fistpll
test
push
loope
lds
adc
jecxz
xor
loopne
test
test
fs
cmp
iret
sub
ret
ljmp
data16
mov
mov
lods
jl
faddl
mov
dec
dec
inc
test
test
mov
inc
push
cmpsb
mov
pushf
repz
or
and
fstpt
add
out
je
int3
sub
cmpsb
adc
cmp
fnstsw
dec
jno
pusha
pushf
xchg
ja
gs
enter
push
xchg
leave
arpl
jecxz
lahf
leave
sub
je
fisubrs
popf
scas
fidivs
outsb
xor
cltd
cmp
xor
jmp
sbb
arpl
call
movsl
inc
inc
out
ret
or
in
fists
and
pop
movsb
in
iret
push
sbb
sub
sar
xchg
push
imul
jne
lret
dec
aam
clc
repnz
fmuls
mov
divl
dec
rcrb
pop
dec
xchg
lock
mov
in
adc
into
push
in
adc
flds
mov
jae,pt
dec
jns
mov
xor
addr16
jecxz
inc
sbb
ss
cmp
push
jge
push
inc
push
inc
mov
insb
add
inc
dec
mov
sbb
js
mov
xor
pop
and
into
fldenv
loope
dec
in
inc
inc
sub
add
sub
sub
jmp
subb
push
mov
push
nop
out
addr16
iret
les
outsl
adc
sub
adc
dec
cmp
cmpsl
into
sub
jae
xor
loopne
pop
lret
stos
sahf
mov
jp
jge
dec
pop
lea
subl
test
sub
inc
pop
push
stos
jne
and
cmp
pop
arpl
mull
and
xchg
and
enter
mov
lock
cmp
cmpsb
subl
in
xchg
stos
pop
popf
leave
dec
lds
dec
adc
fstl
aam
pop
out
pop
mov
shlb
aad
adc
adc
insl
aaa
inc
mov
cmpb
je
cmp
inc
adc
js
mov
jp
mov
inc
stos
push
jns
cmp
dec
in
add
imul
mov
bound
pop
cld
sbb
loopne
jae
adc
adc
mov
mov
cwtl
rorb
lods
xor
popa
sbb
mov
or
scas
das
mov
lds
dec
cwtl
arpl
out
pop
mov
jae
jb
xchg
inc
ds
mov
sbb
je
das
xchg
scas
inc
xchg
std
mov
sti
sub
cmp
xor
jmp
sbb
inc
popf
out
and
xchg
adc
sti
pop
mov
mov
pop
popa
jecxz
mov
pop
hlt
push
adc
jae
cltd
popf
test
sub
movsl
ret
jbe
sub
lods
enter
xchg
mov
push
inc
shlb
into
repz
leave
and
int
add
sbb
sub
mov
or
out
out
pop
imul
lret
adc
ss
pop
xor
cmp
int
sub
inc
dec
insl
incl
adc
std
jnp
fnstenv
ja
sahf
aaa
mov
lret
jne
dec
cwtl
adc
inc
mov
lret
scas
aas
out
fistpl
in
sbb
outsl
es
xchg
xor
es
loopne
scas
mov
fimuls
dec
iret
push
sahf
xlat
ljmp
pop
scas
mov
push
mov
add
pop
mov
xchg
xchg
btr
or
stos
pop
lock
push
cmp
js
idiv
dec
mov
mov
and
hlt
pusha
leave
sahf
pushf
bound
out
mov
popa
inc
adc
mov
clc
mov
mov
or
pop
loopne
mov
mov
cwtl
xor
xchg
das
sub
pop
loope
lret
adc
aam
fdivl
arpl
mov
frstor
data16
cmp
lea
cmp
push
sbb
and
stos
push
xchg
roll
xchg
addl
lods
fbld
popa
repz
enter
popf
sahf
and
pop
sti
xor
pop
cmc
iret
push
cs
pushf
sub
dec
iret
lods
imul
pop
push
iret
mov
inc
aas
clc
sbb
arpl
mov
xor
cmp
scas
inc
stos
add
sbb
xchg
adc
xchg
cli
jp
add
pushf
cmp
inc
pop
mov
sub
xchg
das
mov
xchg
fadd
lds
je
xchg
cmp
lret
mov
add
pop
pop
shr
jb
pushf
push
bound
rolb
dec
inc
bound
xor
sbb
cli
aad
pushf
xor
xor
mov
repnz
mov
sar
cli
fwait
pop
hlt
and
xchg
inc
mov
mov
cwtl
dec
dec
xor
sbb
repz
inc
loop
test
cli
jge
fsubrs
sub
inc
scas
add
mov
jp
cmp
in
and
cld
addr16
sub
xor
fbstp
cmp
les
and
daa
mov
cmc
js
pop
jecxz
cli
out
jno
in
cltd
int
movsl
xor
and
pushf
hlt
hlt
mov
adc
sbb
fbld
sahf
stos
lods
mov
cmp
out
lods
outsb
rcll
dec
pop
push
std
iret
dec
or
mov
in
mov
loopne
cmpsb
xor
lcall
ret
or
push
inc
add
pop
out
dec
test
mov
adc
sub
incb
mov
cli
call
jbe
sub
mov
mov
cmp
or
pop
sbb
push
js
fs
sub
cmc
and
xchg
fwait
mov
sub
scas
and
arpl
mov
push
or
fsts
xor
cltd
fwait
push
out
dec
stos
xor
bound
divl
sbb
cmp
adc
xor
or
pushf
xor
sub
daa
in
dec
dec
dec
sub
scas
das
jnp
adc
inc
push
test
xchg
fistl
leave
dec
and
ficoml
lods
jns
and
dec
jo
push
push
xor
pushf
add
out
mov
xchg
testl
mov
dec
dec
jne
scas
rorb
mov
add
sbb
push
test
test
jae
lods
js
add
pop
sbb
pop
inc
aad
mov
sarl
sub
test
push
out
fnstsw
sub
cmp
imul
mov
in
cmp
jmp
sub
repz
fsubl
sbb
adc
aas
and
rorl
iret
data16
xor
jg
mov
stos
lods
adc
or
pop
and
lret
scas
sbb
push
out
ljmp
call
mov
jbe
aad
and
fs
xchg
daa
sub
xchg
xlat
inc
pop
pop
lea
mov
mov
cmp
cmc
ljmp
nop
push
filds
xchg
test
js
mov
sti
into
inc
push
or
sub
push
xor
mov
xchg
mov
rep
fnstenv
enter
xlat
xor
mov
fldt
lret
jae
stos
ljmp
stos
lcall
test
inc
int
test
xchg
aas
sbb
push
roll
mov
or
adc
imul
push
test
jmp
mov
cmp
xor
add
sbb
fiadds
popa
cmpl
and
hlt
clc
or
inc
jg
inc
mov
mov
shl
dec
loop
stc
jns
out
out
pop
in
mov
fs
mov
pop
and
test
mov
cmp
inc
out
scas
mov
mov
or
rcl
int3
add
adc
data16
lret
neg
pop
jno
test
push
test
and
test
cmpsl
mov
mov
sbb
cmp
repnz
jle
jbe
addb
test
jno
mov
lods
sub
movsb
sub
cmp
sbb
fdivl
cltd
test
int
insb
aad
jb
add
dec
pshufw
or
test
shrl
sub
in
cmp
xor
jo
dec
std
xchg
in
divl
insb
add
adc
lahf
pop
dec
stos
add
mov
add
dec
lret
lods
sub
cmc
out
or
mov
or
fmuls
cmp
pop
pushf
jle
fcmovne
lds
das
push
xor
insb
add
push
or
rorb
mov
leave
xchg
mov
addl
push
jno
xor
rcrl
adc
in
pop
arpl
out
call
aas
pop
xor
bound
xchg
fwait
lahf
cmpsl
or
popa
add
into
xor
in
inc
add
lahf
mov
pop
or
and
loopne
sbb
mov
out
mov
push
cmpsb
ss
sub
insl
jge
pop
push
mov
scas
shrb
mov
cmp
jne
mov
addr16
mov
daa
mov
jp
test
pop
ret
stos
sti
pop
lret
test
sub
cli
push
lds
cmp
push
mov
and
fcmovne
cmp
in
ret
mov
sbb
mov
jae
add
jb
imulb
and
bnd
aas
hlt
cmp
andb
xchg
xchg
dec
fldl
xlat
jmp
repnz
push
loope
mov
nop
psrlq
push
adc
mov
sub
xchg
insl
mov
enter
aam
mov
pushf
fisubl
les
mov
push
push
push
lds
xor
mov
sar
cmc
std
outsl
jno
je
push
push
adc
mov
xor
push
pop
add
inc
push
push
dec
push
lods
xchg
pop
int3
inc
sbb
jnp
mov
jbe
inc
into
jae
or
cmp
inc
sbb
cmp
xor
pop
dec
mov
clc
pushf
mov
push
inc
in
push
aad
dec
adc
stc
int3
mov
cmpsb
cwtl
rorb
bound
xchg
adc
jo
insb
adcb
jae
or
cmp
mov
inc
add
or
or
and
inc
je
xor
mov
dec
add
movsl
sbb
jp
into
inc
dec
and
out
add
into
sub
bound
mov
sub
es
and
in
outsb
mov
jns
pop
lea
das
xor
push
lret
ficompl
pop
imul
out
loope
shrb
mov
icebp
in
pop
incl
in
or
pushf
dec
mov
xor
jo
pop
push
imul
cmpsb
sub
mov
out
fisttps
lock
jb
jge
aas
sub
fcomps
or
dec
es
mov
das
jp
push
lods
xchg
pusha
ss
xchg
cmc
fwait
add
cld
fs
lret
loopne
add
aad
adc
add
aad
push
jge
jp
lahf
xlat
add
or
test
or
mov
std
push
dec
adcl
push
mov
xchg
jo
sub
cs
push
add
test
push
add
adc
inc
pop
sbb
mov
cmp
movsb
js
jle
out
push
repnz
sub
lods
inc
add
dec
aas
mov
ds
inc
fldenv
sub
xchg
icebp
lods
push
das
imul
repnz
push
dec
adc
dec
mov
mov
jmp
fsts
fdivp
pop
mov
paddb
repz
dec
mov
jp
sbb
int
and
xor
cltd
mov
gs
jno
sub
adc
rolb
mov
lea
cmp
test
dec
cwtl
roll
mov
aaa
inc
insb
stos
and
stc
fisubl
bnd
cwtl
lcall
and
enter
outsb
hlt
pop
xor
outsb
push
inc
mov
sub
sub
push
sub
xchg
push
ret
push
jmp
pop
aas
xor
mulb
xor
sub
into
sbb
dec
repnz
mov
hlt
pop
or
scas
sub
lahf
loop
mov
mov
cmc
mov
cmc
jmp
cs
mov
js
add
xchg
orb
mov
mov
test
mov
aad
xlat
pop
xchg
nopl
icebp
aas
push
cli
cltd
xlat
ljmp
popa
mov
sbb
inc
adc
std
outsb
rcrl
cmp
and
mov
jns
add
pop
pop
or
xchg
push
mov
mov
and
mov
inc
aas
es
and
cmc
fld
aad
adc
jns
xchg
rcrl
fwait
cmp
push
sti
push
les
xor
or
mov
sub
jnp
daa
es
inc
das
push
ja
xor
test
cmpl
cmpsb
add
mov
leave
jp
fisttps
cwtl
dec
lret
jne
add
add
mov
xor
xchg
xor
adc
std
inc
cwtl
or
xor
adc
call
loopne
mov
pop
cmpsb
xchg
jno
aaa
icebp
jnp
push
les
ss
and
mov
pop
sahf
rep
dec
je
jle
cld
jecxz
inc
dec
rolb
fcmove
push
in
addl
lcall
popf
dec
mov
roll
xchg
addl
outsl
std
addr16
gs
lods
pop
cld
mov
adc
jge
lock
mov
add
testl
inc
enter
aam
sbb
ja
ja
lret
das
pusha
pop
dec
pop
loop
mov
aas
inc
rorl
mov
cmp
dec
jp
repz
xor
sbb
xchg
xor
gs
jo
fdivr
mov
mov
xchg
pop
lahf
into
dec
pop
inc
dec
jl
inc
jae
pop
adc
mov
sbb
cltd
ja
sub
add
xor
inc
pop
fsubrl
les
jae
icebp
enter
add
fwait
xchg
rcll
pop
inc
pop
inc
pop
aas
jno
aam
mov
in
sbb
pop
int
dec
pop
adc
push
adcl
fwait
ret
pop
movsl
mov
iret
mov
jbe
ret
cmp
cld
xor
pusha
push
push
add
insl
sub
jl
inc
xchg
imul
out
dec
mov
sub
je
adc
shll
mov
leave
jl
mov
pop
test
inc
dec
fdivs
fidivrs
cld
std
jnp
or
in
in
push
loope
adc
dec
and
fincstp
shlb
sbb
jecxz
push
adc
cmp
mov
mov
loop
popf
pop
in
scas
shl
and
jecxz
mov
cmp
clc
scas
sbbb
in
mov
jno
cltd
jle
mov
xchg
mov
mov
xor
cmp
mov
xchg
cltd
insl
enter
test
sbb
ret
jne
mov
inc
mov
push
in
enter
lcall
xlat
inc
mov
add
cld
mov
and
or
fsub
shrb
jo
cltd
and
dec
jg
dec
ds
dec
inc
xchg
mov
fcomps
adc
repz
stos
faddp
dec
push
out
mov
popa
subl
mov
and
ss
inc
dec
push
ret
pop
dec
push
jns
pop
cli
xor
mov
sub
rorl
dec
stc
faddl
pop
stc
je
out
xchg
out
adc
lods
outsl
fwait
gs
popf
and
add
out
mov
lret
dec
mov
jge
or
hlt
out
les
fnstsw
dec
cmpsl
das
outsb
addr16
sub
iret
hlt
outsl
sbb
add
aam
cwtl
lods
or
mov
in
repnz
js
lret
xchg
pusha
mov
stc
pop
cmp
inc
jbe
out
std
das
push
xchg
leave
push
add
cld
int
imul
sti
push
xor
add
rolb
and
jbe
sarb
pop
scas
mov
adc
push
jne
insb
scas
mov
push
inc
pop
dec
fwait
fs
nop
outsl
dec
sahf
inc
dec
sub
mov
pop
clc
add
mov
jo
loopne
push
loope
out
mov
lcall
inc
ds
adc
test
push
es
pop
xor
mov
xchg
stos
adc
jmp
dec
cwtl
fidivl
ror
ss
stc
or
cmc
aaa
roll
call
mov
ljmp
cmpsb
hlt
mov
and
pusha
and
dec
pop
mov
lahf
ds
xor
lea
push
in
pop
inc
push
and
dec
mov
mov
in
leave
sahf
negb
xchg
mov
aad
shlb
mov
scas
xchg
push
imul
sti
das
inc
cld
jno
adc
mov
mul
stc
jae
sbb
sahf
xor
ljmp
jle
mull
orb
push
inc
xlat
mov
js
cmp
repnz
notl
dec
inc
mov
pop
out
xchg
stos
data16
outsl
int3
lea
movsl
cmp
inc
cli
jle
jge
fistpl
add
mull
sahf
inc
push
jo
adc
fildl
fistpl
or
pand
or
imulb
cmp
ret
pop
mov
or
insl
ds
jl
loope
xor
scas
xchg
and
pusha
push
fucomp
in
add
add
dec
and
movsl
adc
aas
test
inc
dec
enter
pop
movsb
cld
shr
insl
fdivrl
xor
cld
dec
lods
daa
push
ret
cmp
push
sbb
and
daa
shr
rclb
pusha
pop
jg
push
or
mov
roll
jb
xchg
fs
sub
mov
dec
mov
repz
mov
out
enter
xchg
and
lret
dec
cli
sub
sbb
xchg
jns
mov
pop
xchg
and
mov
int3
scas
mov
push
push
sbb
jnp
sub
xchg
lods
test
bnd
cmc
loope
fisubrl
mov
pop
ss
jecxz
adc
sbb
sbb
push
mov
push
sar
mov
out
sub
add
cmc
mov
jns
js
mov
or
aam
fldt
add
inc
loop
arpl
pop
jno
cltd
cli
jae
int3
std
push
popf
add
mov
inc
cmp
mov
loop
push
xchg
pop
lods
cli
stos
jbe
cmp
stos
insl
inc
subb
push
sahf
cmp
clc
sub
loopne
shlb
cmp
lret
push
mov
xchg
xor
in
xor
cmp
in
repnz
mov
push
mov
pop
ja
clc
add
sub
mov
repz
pop
push
inc
dec
addr16
xor
shll
xor
jnp
jb
nop
and
xchg
popa
push
ss
xor
pop
fisttpll
cs
arpl
cmc
mov
sbbl
ds
mov
mov
inc
xor
lea
push
cmp
xor
inc
cmpsl
es
sbb
push
add
sbbl
jo
push
pop
add
movsl
mov
pop
inc
outsb
xor
pop
mov
negb
dec
sub
cmc
pop
inc
aas
dec
adc
or
mov
jne
mov
repz
inc
fisubrl
or
pop
loope
dec
mov
adc
xor
lock
mov
inc
lahf
sub
inc
test
push
jno
and
sub
ljmp
adc
mov
fst
lods
adc
fstps
or
mov
mov
test
pxor
xchg
out
jecxz
or
cmovae
ss
fidivl
in
int3
mov
pop
aaa
leave
notl
das
or
sahf
mov
sub
not
inc
popa
push
pop
mov
jecxz
inc
rorl
ja
pop
and
out
in
adc
ss
mov
ljmp
lods
jl
leave
jns
fisubs
xchg
imul
fistl
sarb
xchg
mov
cld
decb
lds
subb
in
mov
inc
pop
push
andl
cmp
mov
lcall
mov
enter
pop
or
cmpsb
cmpb
loop
fincstp
adc
xor
and
mov
sub
jle
sbbb
in
scas
adc
adc
xor
lcall
dec
lds
jbe
add
cmp
sub
cmp
add
ja
inc
mov
xchg
jb
shr
sti
xchg
lea
test
sub
cld
xchg
jp
shrl
ret
insl
in
out
outsl
sarl
adc
js
aam
sti
mov
mov
imul
int3
jle
daa
push
fiaddl
int
pop
push
push
push
jge
lds
mov
dec
push
jno
push
inc
sub
sub
int
adc
dec
hlt
xchg
movsb
in
cmp
in
enter
push
es
add
repz
mov
xlat
xchg
dec
pop
push
cmp
pop
test
hlt
push
mov
xor
jo
andl
movsl
mov
adc
cmp
loope
rclb
push
mov
cmpsb
sbb
rcr
cli
pop
and
inc
push
test
shlb
lret
cmc
mov
xchg
test
out
es
data16
int
rcll
xor
adc
es
push
jae
dec
aas
aad
sbb
aas
roll
jne
ficompl
cmp
and
fidivrs
mov
pushf
sub
lds
inc
or
dec
xchg
push
arpl
icebp
das
push
push
sub
mov
jne
out
jo
push
xlat
adc
inc
pusha
pop
push
insl
cmp
mov
jnp
and
dec
lret
xchg
out
xlat
sar
mov
cmp
xor
jbe
sti
and
and
shlb
push
mov
inc
sub
inc
lret
or
fsubr
mov
xchg
cwtl
push
loope
outsb
fcompl
push
adc
fs
mov
inc
adc
inc
shlb
mov
fildll
jo
and
lahf
pusha
aaa
lods
push
jo
call
push
add
movsl
mov
xor
nop
test
cltd
pop
or
cwtl
xchg
orl
cs
cli
pop
cmpsb
jno
loopne
loopne
mov
add
dec
jo
mov
ss
inc
push
xor
pop
repnz
and
pushf
adc
jmp
adc
in
and
lock
fimuls
cld
stos
jge
clc
rorl
ss
pop
cmpsl
xchg
mov
or
xchg
hlt
popf
pop
data16
mov
movsl
xchg
lret
imul
shl
std
cwtl
aas
rcl
lds
add
sub
inc
ja
into
add
dec
int
icebp
pop
jl
scas
daa
push
push
in
ret
inc
enter
imul
and
xlat
mov
mov
notl
fdivl
fsubrp
and
mov
mov
pop
add
push
pop
inc
mov
scas
clc
stos
mov
or
mov
lret
mov
dec
dec
fidivs
dec
or
jbe
out
dec
push
mov
dec
push
jno
flds
mov
add
sbb
inc
lods
jle
pop
mov
dec
xor
xacquire
sub
push
in
mov
gs
cwtl
xor
adc
inc
sub
in
hlt
push
dec
lea
hlt
jge
jne
sub
xor
xchg
mov
push
add
in
das
mov
add
jg
je
adc
add
aaa
cmc
dec
pop
stos
aad
sbb
lock
jno
jmp
jno
xor
push
ss
adc
outsb
jecxz
mov
dec
out
inc
push
push
repnz
cwtl
mov
stos
xchg
imul
xor
icebp
mov
lock
pop
aam
mov
inc
inc
out
negl
sti
sbb
mov
sarb
jecxz
jg
inc
cmpsb
inc
mul
sbb
test
xchg
xchg
xchg
call
stc
push
or
push
test
sub
mov
jbe
jne
insl
sbb
mov
sbb
push
xor
in
jg
cmp
out
xor
subl
mov
cmp
push
ret
addr16
not
out
cltd
cmp
mov
xor
dec
cmc
insl
test
xor
or
shrb
jecxz
and
ret
cwtl
dec
lahf
lcall
xchg
inc
cmp
sub
mov
cmp
sub
or
movb
cmp
inc
repz
leave
pusha
sbb
rcrb
cltd
popf
xchg
xor
push
add
loopne
loope
mov
and
xchg
imul
aam
rorl
mov
or
into
dec
mov
sub
test
loope
cmpsl
std
lahf
lock
cmp
jae
roll
dec
mov
push
mov
lock
test
xchg
rcl
mov
pop
mov
mov
and
out
sub
xchg
and
xor
jbe
bound
sbb
mov
cli
rclb
pop
inc
test
scas
or
int3
popf
sbb
dec
stc
pop
stos
aad
adc
pop
push
jp
jo
fwait
cmp
or
fnsave
cmp
aaa
pop
sbb
in
mov
inc
imul
and
or
repnz
mov
lahf
cli
inc
out
inc
pop
and
jp
cmpsl
cmpsl
fstl
pcmpgtw
shll
xor
fcoms
push
dec
jae
call
sub
dec
and
xchg
gs
clc
jne
ja
inc
mov
jo
inc
mov
xchg
jbe
popf
push
mov
lahf
iret
adc
sahf
mov
jg
add
sbb
lds
repz
mov
or
fmull
pop
dec
push
lock
adc
movsl
imul
test
or
jmp
aad
repnz
popa
and
cmpsb
cmp
mov
pop
lock
mov
xchg
stos
ja
sub
mov
enter
fwait
inc
dec
lahf
sbb
call
pushf
push
rcl
jmp
adc
xchg
sti
mulb
mov
dec
loopne
movsb
jnp
flds
jnp
daa
mov
jmp
les
pusha
and
stos
addl
sub
cmp
insb
xor
jb
dec
push
jecxz
jmp
mov
jo
sbb
mov
imul
ss
pusha
out
dec
mov
int
dec
mov
mov
in
or
xchg
or
call
jp
pop
fsts
ds
sub
mov
das
cmp
rol
jecxz
push
jae
outsb
pop
sti
mov
std
add
cli
out
cmpsb
add
pop
fimuls
dec
pop
nop
xchg
fcomi
insl
adc
jns
sub
push
hlt
fmuls
fcmovne
dec
pop
add
imul
hlt
sub
jno
cmpsb
sub
out
sub
adc
aad
adc
cli
cmp
sub
add
leave
lods
push
jo
add
testl
test
sbb
loopne
aaa
fwait
xchg
inc
mov
in
call
dec
insb
add
push
inc
lret
shll
stc
or
push
pop
and
dec
inc
scas
lcall
xchg
pop
mov
adc
add
xor
pop
and
shl
xchg
pop
cmp
shll
ret
jnp
nop
and
mov
frstor
in
mov
cmpsb
or
outsb
cs
pop
lods
mov
addb
dec
je
sbb
pop
lahf
rclb
pop
scas
xor
xlat
ret
mov
xchg
lcall
enter
dec
push
cmc
pushf
xor
mov
mov
xchg
rcrb
xchg
push
test
loope
in
inc
stos
out
hlt
xor
int
and
loop
mov
xchg
sbb
fcomps
leave
cmp
jae
mov
mov
or
fisubl
pop
mov
inc
mov
repz
jne
imul
aad
xchg
push
jmp
out
sbb
inc
sub
mov
xchg
mov
mov
and
insl
pop
inc
daa
cmpsb
inc
ret
dec
dec
aam
add
xchg
pop
mov
insl
outsl
pop
addb
aam
dec
mov
gs
xor
les
inc
mov
xchg
lahf
icebp
cmc
out
xor
movsb
xor
or
lea
stc
das
and
add
mov
or
ss
std
arpl
stos
stos
push
bound
pop
test
dec
bound
mov
dec
loop
xchg
mov
xchg
stc
add
mov
xchg
and
call
xor
jle
stc
test
mov
loope
gs
test
lea
sahf
pop
or
movsb
xchg
pop
and
pop
and
sti
push
ja
or
cli
mov
jmp
xchg
enter
dec
cmpl
pop
movsl
stos
incl
sub
jl
ret
in
cmp
dec
stos
and
lods
sub
jl
cmp
bound
repz
lcall
jge
and
jns
icebp
dec
call
xchg
lock
jno
and
outsb
pop
dec
jne
insb
insl
pop
mov
fstps
cmp
loope
jns
sbb
push
xchg
xor
or
sub
clc
mov
lahf
gs
and
stc
mulb
push
shrl
sbb
sub
repnz
pop
jae
stc
push
cmpsl
fs
push
mov
push
dec
ljmp
xor
and
rcr
cmp
xlat
xchg
rorb
sub
ss
sub
add
ja
movsb
in
lds
lcall
sbb
pop
jbe
sarb
push
repz
inc
in
aam
cmpsb
pop
mov
inc
and
dec
fnstenv
sahf
bound
sahf
out
push
dec
push
mov
push
lea
into
mov
inc
addl
aaa
idivb
hlt
mov
pop
div
or
orl
cld
dec
pusha
cmp
inc
ljmp
lds
jo
sbb
test
outsl
sbb
shr
add
push
in
pop
int3
pop
xchg
inc
ret
xchg
xchg
jnp
fldenv
insb
jnp
mov
jae
dec
mov
test
push
cld
add
xor
fldenv
insb
leave
xchg
test
cli
dec
dec
push
jae
add
jge
pop
lcall
sbb
sbb
mov
int
jecxz
dec
or
dec
pop
lods
or
mov
jbe
das
push
sbb
negl
inc
movsb
enter
adc
dec
cmp
fldt
imul
lods
mov
bswap
cs
rol
xchg
mov
ss
lret
out
xor
out
xchg
adc
fstps
sbb
jmp
dec
mov
mov
dec
mov
or
and
rorl
in
das
mov
cmp
out
lret
sub
imul
cld
mov
call
inc
imul
stos
ljmp
movsb
add
das
notl
xchg
pop
outsb
sub
sbb
push
cld
sbb
inc
push
movsb
mov
pop
cmc
je
cmp
lock
sub
or
pop
fdivl
inc
xchg
xchg
das
pushf
lret
das
pop
inc
cmp
clc
pop
inc
sub
fisubrs
aas
test
out
loopne
inc
imul
or
aad
push
sub
aas
icebp
fcoms
push
movsb
arpl
xchg
dec
idivl
mov
dec
call
mov
sahf
mov
test
and
sahf
cmp
hlt
call
push
test
repz
mov
ja
imul
cmpsl
lahf
xchg
jo
or
lcall
ljmp
lods
sahf
out
imull
test
jns
orb
fs
pop
adc
sbb
dec
movsl
inc
mov
sub
sub
movsl
cs
lret
xchg
xor
push
stos
movsl
add
scas
imul
push
dec
popa
pop
cmc
sbbl
inc
in
das
fistl
shld
and
fisubrl
stos
test
pop
and
jg
sub
xlat
push
iret
xor
test
lds
ror
xor
or
add
dec
sub
pushf
xchg
insl
fisubrl
je
cwtl
mov
scas
and
lcall
pushl
inc
lahf
dec
pusha
outsb
addr16
fs
in
cmp
insl
push
mov
cmpsl
outsl
xor
xchg
stc
cmp
cwtl
pop
enter
lret
jge
shrb
pop
jge
daa
mov
shlb
adc
mov
negb
add
es
push
sbb
rolb
push
dec
or
xor
push
int
or
xchg
xchg
leave
icebp
fdivrs
mov
hlt
and
outsb
cmpsb
add
sbb
movl
add
aaa
ljmp
repz
xchg
push
xor
pop
aad
xlat
jno
mov
sbb
xlat
adc
dec
sbb
sub
sub
hlt
adc
fwait
vdivps
cwtl
das
mov
push
sbb
jecxz
gs
jae
xor
sbb
xchg
pop
jl
jns
dec
std
inc
in
mov
push
insl
sbb
stc
hlt
lret
ret
xor
scas
lret
testb
sbb
cmp
rclb
fstps
testb
fwait
and
repz
fldl
mov
fisubs
xchg
repz
sbb
xchg
nop
jp
stos
adc
sbb
sub
into
test
idivl
cld
xor
sbb
ficoms
sbb
xchg
hlt
loop
stc
into
or
mov
mov
push
adc
mov
mov
iret
sub
jbe
mov
addr16
sub
push
ret
and
mov
rolb
xlat
mov
mov
enter
pop
jnp
jo
mov
popa
cs
out
sbb
push
xchg
add
push
out
pop
sarl
pop
xor
mov
mov
sbb
popa
std
loope
arpl
sahf
push
jne
jb
sub
orl
fninit
push
jns
sbb
jmp
jge
inc
and
push
outsl
mov
push
and
loope
sbb
imul
or
mov
flds
outsb
pop
jno
fadd
xor
cmc
movsl
int3
jge
ret
push
cld
andb
xor
xlat
test
cmp
mov
mov
arpl
in
xor
pop
pop
add
int3
movb
aaa
loop
xor
dec
cmp
aas
daa
sahf
rcrl
cmp
movsb
mov
mov
add
faddp
cmp
shlb
push
xchg
push
sub
and
mov
xchg
fdivl
lret
or
adc
or
scas
popf
pop
dec
adc
std
jno
les
cmp
out
xchg
es
loop
mov
mov
push
mov
push
inc
dec
js
inc
test
lret
shll
in
cmp
icebp
dec
repnz
mov
std
jne
adc
fidivrs
jnp
push
push
mov
push
dec
pushf
adc
cmp
pop
in
cld
cmpb
aam
ja
in
sbb
cli
jns
adc
shlb
repz
jb
das
aaa
cmpsb
fs
stos
addl
adc
sbb
jbe
push
cltd
rclb
andb
dec
fidivrl
add
leave
cmp
pop
into
sbb
js
stos
aas
jmp
loopne
and
mov
dec
jge
aaa
ret
lret
insl
test
pop
cmp
movsl
ljmp
jbe
loop
pop
mov
and
cld
pop
sbb
inc
out
mov
sub
test
stos
jp
lcall
icebp
mov
bound
repnz
loopne
jl
and
cmp
mov
mov
push
pop
adc
mov
mov
lods
insl
cwtl
aam
sub
jb
test
ficomps
jmp
add
cmp
mov
mov
loop
push
dec
sbb
ret
mov
pop
lret
ljmp
push
jbe
xchg
pop
and
in
pop
xlat
pop
mov
pusha
or
cmp
lds
aaa
xor
add
iret
sahf
cwtl
cli
jmp
sbb
dec
jg
jl
icebp
shl
pop
mov
das
mov
pushf
pop
xchg
iret
jno
push
inc
or
jne
pop
jb
pop
inc
das
pop
push
mov
sahf
loop
jnp
mov
stos
aam
jno
jb
outsl
ret
je
sub
fsubrs
jns
cmpsl
dec
push
pop
inc
pop
mov
dec
jns
jge
test
ja
adc
or
das
outsb
icebp
mov
addb
dec
insl
xor
movsb
add
aaa
sbb
fwait
adc
dec
test
stos
fists
jmp
cs
mov
dec
lods
ds
ja
inc
ljmp
jp
mov
mov
outsb
mov
test
sub
mov
and
mov
movsb
aaa
and
adc
push
cwtl
or
mov
lahf
dec
loopne
js
or
mov
fwait
adc
cld
mov
adc
ja
sbb
daa
in
test
or
push
mov
push
pop
fs
rorb
xlat
and
pop
je
push
jns
bound
adc
and
lahf
xchg
stos
fwait
sbb
pop
mov
cmc
sbbl
dec
es
adc
clc
scas
out
cmp
faddl
icebp
mov
bound
xlat
pop
pop
mov
jl
mov
dec
pop
mov
stos
les
mov
pop
and
stc
fcmovbe
ljmp
or
test
xor
push
jge
push
dec
xchg
pop
push
mov
test
imulb
xchg
pop
adc
shll
jge
cmp
addr16
sbb
xchg
or
lahf
icebp
ljmp
cmp
fdivl
pop
in
pop
fmul
ds
cmc
cmp
or
xchg
repz
dec
shll
sarl
fcom
bound
push
idiv
push
cmc
inc
cli
rcll
fs
push
jecxz
mov
dec
lock
cmpsl
rcrl
loope
mov
inc
fwait
pop
or
inc
ret
mov
xchg
xchg
popf
cmp
ss
testl
es
inc
xor
scas
dec
fistpll
sub
jmp
lret
inc
pop
dec
out
aaa
fdivrl
daa
rcl
pop
movsb
add
pushf
lock
adc
cmp
adc
ljmp
or
mov
inc
jne
orb
shll
cmpsb
mov
popf
adc
shl
dec
mov
paddsw
xchg
stos
cmp
cmp
dec
xor
ret
add
sti
bound
jp
shrl
jp
fdivl
negl
xchg
mov
sub
sbb
push
dec
fwait
mov
cli
push
xor
jecxz
mov
js
mov
insb
cwtl
filds
fistps
imul
imul
mov
push
mov
and
mov
and
push
sbb
aad
push
xchg
shll
aaa
dec
cmpsl
push
nop
outsb
inc
std
or
pop
jg
stc
fs
add
xor
imulb
sti
cmp
sub
rol
pop
movsb
mov
pop
test
jbe
out
test
mov
mov
jnp
stos
xchg
lds
push
push
mov
in
jae
jle
cmpsb
cmp
sub
and
dec
aam
loope
cmp
pop
loopne
jl
mov
fwait
xchg
ja
ret
mov
inc
filds
lret
sbb
lea
mov
jae
outsl
adc
movsl
inc
mov
aad
mov
xchg
in
ss
orb
in
dec
flds
loope
mov
outsl
arpl
lahf
sub
les
cld
xor
push
out
int
sub
xor
cltd
pop
dec
sbb
out
mov
test
cld
jmp
insb
stc
out
sti
xchg
movsb
or
mov
fnstenv
or
int3
mov
pop
cmp
xor
push
xchg
push
shll
or
sbb
fwait
movsb
pop
xchg
rolb
lret
mov
sbb
xchg
pop
jge
lcall
add
add
outsl
in
add
xchg
push
xor
pop
cltd
arpl
jns
sbb
cmp
repnz
add
in
dec
push
push
ss
jns
or
mov
and
push
daa
dec
mov
lfs
scas
mov
cmp
dec
push
jo
ror
mov
lods
aaa
adc
push
sbb
mov
out
outsl
ret
loope
and
lret
mov
pop
pop
mov
test
pop
jmp
and
mov
xor
pop
decl
and
mov
sbb
mov
cltd
bound
dec
movsl
ret
notb
mov
jns
inc
jno
aas
or
insb
sbb
out
push
mov
mov
imul
xchg
dec
ds
pop
add
dec
xor
scas
jb
lret
push
lea
jp
pop
inc
fwait
lds
fwait
pop
dec
fldenv
loop
dec
push
pop
int
sub
movsb
jbe
mov
repnz
mov
popa
shlb
fisubl
data16
sbb
sahf
cmp
add
shlb
add
cmp
mov
shlb
mov
movsb
leave
jne
jae
fld
test
jl
push
jae
push
popf
shl
jmp
movsb
inc
or
add
call
mov
jmp
rcrb
loopne
xchg
xor
cmc
push
push
push
sub
mov
mov
xchg
add
mov
lock
sub
jp
mov
ss
ljmp
fs
sbb
leave
xor
xor
in
subb
out
mov
out
cld
out
ljmp
sbbb
jne
mov
sub
aad
and
and
adc
and
stc
push
adc
xchg
xor
lcall
dec
rolb
xchg
loop
out
mov
inc
loope
sarb
pop
adc
xor
push
mov
fcom
mov
or
pop
nop
xor
lahf
call
call
add
lods
loop
inc
call
aad
test
or
mov
jae
sarb
in
fadd
mov
in
fwait
inc
xchg
add
or
fwait
test
xchg
sti
pusha
mov
call
rcll
lcall
push
imul
jecxz
mov
gs
out
dec
and
xchg
sbb
mov
inc
mov
mov
jge
xchg
dec
jge
ret
scas
mov
int3
arpl
push
cmpsb
les
mov
jge
xor
add
mov
or
dec
mov
jg
xor
insb
mov
into
fimuls
es
or
test
adc
fs
xchg
testb
xor
add
test
mov
sub
jae
mov
pop
pusha
inc
jge
stos
fwait
lock
vpsubb
xor
dec
mov
scas
movsb
xor
imul
dec
rorl
insb
push
shrb
frstor
or
lock
daa
ljmp
mov
insb
mov
daa
add
arpl
out
inc
addr16
addl
mov
and
mov
int3
daa
push
mov
pop
pop
jbe
push
in
xor
mov
orb
sbb
imul
xchg
and
enter
shll
das
es
cmc
xor
xor
int3
mov
push
cvttps2pi
add
lods
data16
sbb
xor
push
cmp
rolb
push
mov
repz
sbb
movl
ljmp
cld
cmpsl
xchg
cmp
and
sti
cmc
jo
test
push
add
mov
or
lret
jle
mov
loopne
mov
mov
aam
mov
adc
bound
cmpsb
cmp
push
movsb
ds
add
cmp
jl
inc
sub
or
int
cmc
add
inc
mov
leave
subb
xor
faddl
pushf
popf
jge
fdivrl
inc
xchg
add
loop
popa
out
test
movsl
ljmp
in
mov
mov
repz
inc
test
jnp
dec
insl
sbb
rcr
lret
fidivrs
shll
roll
pminsw
dec
xchg
xchg
mov
pop
mov
sub
pop
loope
jb
out
mov
lock
push
inc
fxch
ljmp
hlt
cld
jg
fisubs
icebp
repz
and
es
jb
into
and
lahf
add
loop
mov
add
push
pop
cmp
cmp
rorb
testl
and
adc
adc
mov
cmp
push
xor
call
test
mov
ljmp
int
test
cmp
mov
insb
cmp
aad
int3
xchg
mov
sbb
dec
gs
hlt
movsb
pop
push
xchg
test
cmc
mov
mov
mov
mov
push
loopne
xor
and
cwtl
mov
sti
xor
adc
push
push
pop
inc
sahf
in
add
jno
rcrl
loop
js
data16
subb
mov
js
iret
repnz
cmp
shll
xor
rep
andb
jge
inc
lock
loopne
int3
andb
cwtl
icebp
jle
jns
jl
cmp
sbb
inc
jl
xchg
popf
fldcw
sub
jnp
mov
fwait
bound
mov
iret
mov
daa
insl
aad
sahf
push
push
lsl
gs
mov
fisttpll
jecxz
add
add
je
outsb
xor
jns
mov
mov
popf
or
lods
cmp
sbb
jp
push
jo
bound
fdivrs
cli
lods
push
xchg
jge
out
sbb
add
inc
add
xchg
sub
scas
inc
in
jmp
mov
jg
hlt
ret
cmc
jnp
jno
idiv
jae
mov
jl
out
and
add
out
popf
movsb
sbb
mov
ret
rcl
lret
int
push
or
ljmp
movl
imul
xor
sub
bound
ljmp
fld
shlb
das
ret
mov
sub
sbb
xchg
in
orb
jnp
cmc
fdiv
xchg
jecxz
add
hlt
movnti
stc
iret
loopne
lods
jo
adc
mov
cmp
lahf
jmp
lods
push
xchg
clc
inc
mov
in
sbb
inc
and
sub
push
pop
mov
ret
cmp
dec
pop
cmp
push
iret
std
fs
jp
scas
out
adc
inc
push
jge
mov
aam
add
rorb
inc
sbb
add
push
jb
push
repnz
pop
mov
movb
ds
mov
das
xchg
cmpsl
cmp
mov
outsl
xor
jno
sub
cld
out
jp
movsl
cmc
call
movsb
loopne
pop
and
mov
lods
imull
jle
enter
lcall
jle
pop
nop
add
jmp
pushf
dec
cmc
mov
push
sbbl
inc
pop
stc
push
xor
mov
cs
and
mov
cmp
in
ja
mov
jnp
inc
add
enter
or
hlt
fdiv
mov
test
stos
int
adc
push
sti
movsl
insb
and
lods
fcmovnb
int
or
or
in
mov
clc
cs
imul
dec
fs
mov
cli
test
mov
xor
or
stos
push
cmp
imul
push
push
pop
ja
sub
ja
dec
test
pushf
mov
out
icebp
or
dec
aad
and
push
mov
lods
imul
out
jp
pop
lds
bound
cmpsl
sub
xchg
jne
and
lods
xchg
inc
mov
data16
int
fcomi
sbb
mov
sub
push
std
jg
push
add
xchg
in
ja
jg
scas
lret
jae
lea
jnp
sub
ljmp
sbb
push
and
xor
je
pusha
sbb
hlt
and
lret
enter
out
aad
pop
loop
rcrl
mov
xchg
int
int
xchg
lcall
inc
inc
sbb
pop
popf
outsb
xor
daa
cmpsb
add
aaa
cmp
xor
jle
cwtl
insl
pop
inc
aad
push
test
sbb
dec
ss
jg
ret
js
fidivs
sti
sub
loopne
mov
add
sub
js
in
dec
aas
push
les
movsl
xchg
nop
mov
xchg
xchg
cmpsb
mov
push
mov
sarb
adc
lret
in
icebp
dec
ret
divb
xchg
inc
add
ficomps
pop
jge
std
mov
pop
test
inc
gs
cwtl
jae
xlat
pop
gs
mov
pop
xor
add
cli
push
sub
xor
imul
movl
mov
jbe
jmp
scas
leave
outsl
jecxz
les
mov
stc
cs
sub
jnp
mov
popa
fnstsw
sbb
in
mov
out
pop
add
push
pushf
mov
mov
add
cmpsb
in
subb
adcl
icebp
pop
aaa
push
out
or
mov
cmp
adc
jle
pop
shlb
pop
push
inc
mov
enter
stc
push
popa
push
stc
dec
or
mov
add
xchg
filds
dec
xor
dec
enter
fwait
popf
outsl
jl
out
mov
pop
fadd
shrl
jl
dec
mov
sbb
xor
mov
lods
mov
and
push
jge
gs
add
push
mov
push
or
xchg
leave
mov
sbb
scas
out
add
int3
in
push
mov
ljmp
add
orl
mov
ja
ja
ds
xchg
pop
fsubrp
push
fisubrl
mov
pushl
imul
sub
inc
loopne
test
loop,pn
xchg
daa
sbb
pusha
mov
dec
scas
mov
addr16
or
cmp
mov
lea
test
clc
or
cmpsb
pop
fwait
sarb
add
add
iret
jp
cmp
dec
or
int3
adc
and
stos
mov
and
cmp
xor
xchg
sbb
pop
pop
push
jge
pop
add
jb
mov
push
mov
push
imul
jl
loop
pop
rclb
mov
adc
lods
inc
xchg
xchg
cmp
fbstp
dec
push
dec
outsl
cmp
jns
xor
adc
jne
push
xorb
mov
cmp
inc
and
jg
lock
mov
hlt
jno
lea
popf
out
rcrl
jecxz
jecxz
fnsave
dec
mov
loop
sub
in
arpl
push
mov
das
std
sarl
shl
push
add
mov
adc
cmp
ret
sub
mov
cmp
test
mov
push
call
outsl
adc
and
xor
adc
aaa
mov
cmp
addb
xlat
in
lock
mov
dec
jle
scas
mul
aas
pop
xor
std
push
jp
rorl
enter
movb
sbb
outsb
push
test
and
icebp
das
insl
mov
xorl
pop
cmpsb
xlat
imul
cli
popa
or
push
sbb
test
pop
imul
jbe
mov
mov
xor
gs
loop
inc
cmp
test
daa
js
push
jae
dec
incl
cmpsb
sti
jns
dec
popa
jnp
sti
sbb
mov
mov
dec
fmul
jbe
pop
push
sbb
or
hlt
movsb
sbb
adc
lods
neg
adc
iret
jne
std
pop
loopne
push
enter
or
nop
lock
jbe
in
in
mov
mov
jle
out
lahf
testl
fstpl
repnz
pop
push
lock
leave
xor
cld
pop
pop
sbb
jle
out
stos
pusha
sbb
sbb
or
rorl
std
sbb
push
inc
shl
pop
xor
xor
inc
scas
scas
fwait
movsb
inc
lret
xorl
add
stc
pop
jne
adc
aad
sub
push
sbb
jns
add
pop
lea
fisubl
jb
je
add
mov
pop
jmp
movsb
test
cmc
lods
jb
xchg
fstpt
xor
jne
mov
dec
sbb
into
ljmp
adc
add
jb
addr16
subb
adc
das
cmpb
sahf
das
xor
and
adc
or
inc
cmp
insl
fst
adc
loop
cmp
inc
cmp
push
dec
cmp
lcall
lods
repnz
lahf
or
mov
fwait
cli
add
dec
adc
test
fnstenv
jne
pop
push
push
mov
lret
adc
imul
push
adc
mov
loop
js
test
jmp
hlt
idivb
cmp
fisubs
aas
mov
xchg
jbe
lods
push
cmpsb
and
mov
mov
adc
xchg
mov
out
lea
sahf
mov
bound
sbb
fs
xor
pop
lea
mov
jbe
iret
xchg
clc
fwait
add
mov
pop
imul
jae
call
out
inc
hlt
mov
xor
inc
js
sub
test
dec
outsl
iret
add
push
iret
sbb
nop
inc
dec
shl
inc
negl
hlt
leave
jns
testb
dec
ret
sub
into
xchg
sub
mov
dec
sub
filds
push
pop
pop
mov
shl
mov
jmp
cmc
and
jl
sbbl
cmp
adc
lods
cmpsl
sar
ret
fs
lods
dec
push
mov
movl
js
push
adc
mov
fidivl
cmp
add
mov
inc
mov
insb
adc
addr16
sbb
out
repz
xchg
mov
cmpsb
rep
fmull
jno
adc
mov
xchg
pusha
sbb
jp
add
shl
pop
mov
xchg
hlt
popf
sarb
imul
adc
mov
sub
xchg
xchg
fistps
popa
adc
loop
jmp
loop
sbb
push
iret
movsb
cmp
push
and
pop
in
out
jae
xor
and
xchg
out
add
xlat
push
sbbb
or
pop
rcrb
loope
je
mov
sub
xchg
ficoms
cld
push
inc
fbstp
or
dec
adc
xor
mov
out
mov
hlt
pop
pop
pop
in
pusha
sbb
scas
push
mov
push
adc
pusha
scas
jnp
mov
inc
jno
ret
enter
xchg
pop
cmp
pushf
iret
aaa
or
xor
jle
scas
sbb
cmp
loope
imul
sub
pop
xchg
add
sbb
shlb
ffree
fisubs
imul
mov
icebp
ret
or
cltd
push
mov
mov
inc
xor
pusha
outsl
inc
cmc
cmpsl
nop
mov
jecxz
sbb
mov
loop
cmp
cld
lock
in
aas
ja
icebp
hlt
sub
mov
ds
add
push
sbb
adc
mov
mov
cmp
ret
jo
mov
mov
sbb
pop
pop
pop
add
or
lods
cmp
test
repnz
mov
mov
or
dec
out
xlat
loopne
xlat
xor
jp
add
ret
mov
imul
add
das
pop
dec
mov
jmp
fcoml
in
lds
dec
loope
out
jb
stos
fsubrs
mov
or
loop
outsb
xchg
cmp
in
adc
mov
xor
mov
enter
sbb
ja
test
xchg
lcall
stos
lock
jb
mov
mov
js
add
adc
add
jb
sahf
pop
mov
xchg
data16
or
push
int3
add
call
aam
adc
int3
mov
adc
add
jecxz
push
push
push
stc
xor
adc
out
inc
jns
dec
ds
xchg
mov
pop
sbb
testb
jle
aam
stos
add
in
mov
jge
dec
pushf
jnp
subl
in
fldl
clc
jmp
sub
mov
roll
push
stos
adc
dec
sahf
jecxz
jecxz
aaa
add
jg
push
mov
inc
divl
popa
cmp
sbb
xchg
add
mov
and
jg
push
add
pop
dec
leave
int3
adc
inc
and
movsl
mov
ds
rorb
into
jge
push
mov
sbb
lea
mov
pop
push
lcall
sub
jbe
fs
mov
add
in
mov
ja
jno
mov
cmp
mov
mov
cmp
shll
inc
aas
xor
sahf
pop
in
ss
ret
jo
jo
dec
dec
daa
scas
xchg
std
rcr
notb
loopne
fnstenv
mov
dec
aas
mov
pop
mov
stos
pushf
sub
data16
into
cmp
dec
pushf
cltd
neg
inc
sub
mov
or
inc
sbb
bound
icebp
lret
cmp
cmpsb
loope
leave
sub
and
bound
or
jae
pop
pushf
jae
jle
ffreep
sbb
push
dec
and
movsl
pop
mov
dec
cmp
ljmp
jp
sbb
pop
inc
inc
mov
mov
out
jb
mov
mov
stos
aad
inc
xor
cmpsb
or
jmp
das
outsl
inc
inc
cmpl
int3
lret
call
sbb
jbe
inc
mov
jae
xchg
push
pop
scas
testl
pop
pop
mov
jl,pt
test
push
dec
aad
std
inc
loope
mov
or
xor
aaa
mov
out
sbb
xchg
scas
xchg
mov
xor
mov
pusha
inc
jg
into
insl
jmp
or
in
or
xor
push
inc
pop
icebp
enter
sahf
push
negb
dec
sti
pop
mov
test
pop
push
sub
cmpsb
pop
jge
xor
cmpsb
nop
leave
jne
mov
nop
scas
fsubs
ss
stc
jl
aas
sahf
movsb
dec
xchg
adc
jge
test
mov
push
and
int3
daa
nop
pop
and
sbb
aaa
sbb
iret
out
pushf
pop
pop
inc
jecxz
fmuls
mov
outsl
pop
subl
andb
stc
or
add
popa
rcr
push
or
cmp
shlb
inc
fdivs
enter
pop
cli
jo
andb
and
mov
mov
scas
rcl
dec
inc
into
or
fistpl
lods
in
cld
mov
mov
mov
jne
pop
mov
or
pop
pop
jmp
in
push
aaa
sub
popa
andl
call
and
push
push
cmp
push
inc
cmp
add
lods
in
mov
sbb
pop
inc
mov
gs
sahf
and
sub
jecxz
push
mov
and
cmp
inc
sbb
dec
xlat
cmp
cmp
roll
adc
rcrb
hlt
stos
add
mov
mov
push
mov
inc
scas
adc
adc
lods
loop
mov
mov
inc
loope
xchg
jbe
rol
dec
cmp
jae
add
pop
stos
pop
push
adc
cmp
lahf
xlat
jecxz
mov
inc
inc
push
add
cmp
test
in
or
data16
jl
test
test
mov
icebp
jp
ret
ja
sub
pop
push
rcrl
pusha
pop
mov
lret
xor
ss
hlt
or
pop
jo
mov
pusha
imull
jp
popf
mov
and
add
or
adc
cmp
bound
aam
ret
loope
pop
popf
cld
sub
rorl
pop
mov
sbb
int3
shll
lea
add
xchg
adc
sarb
and
mov
or
push
movsb
ds
test
mov
jmp
ds
pop
popa
xchg
hlt
out
jb
or
cltd
ja
add
inc
or
xlat
adc
pop
pop
pop
adc
sub
xchg
std
gs
loopne
lahf
dec
ret
test
mov
mov
fldl
daa
int3
insb
cs
or
enter
pop
push
jmp
divb
or
cmp
loopne
jmp
iret
pop
jle
push
add
xlat
mov
jae
nop
xchg
movsl
cmp
push
xor
mov
in
mov
fmull
test
or
xor
add
sub
xchg
cmc
cmp
cmpsl
mov
leave
push
or
pop
fnsave
dec
sarl
push
bound
cmp
sbb
dec
add
mov
test
test
arpl
cs
shrl
loopne
sbb
shll
hlt
and
out
adcl
xlat
sub
and
in
dec
mov
in
lock
aam
ret
cmp
pop
cld
repz
jno
into
pop
jl
cmp
jno
repnz
das
pop
scas
and
push
mov
test
cmp
jmp
xor
stc
les
push
imul
jg
in
jae
mov
aaa
jmp
cmp
xchg
pop
movsl
fcomps
xchg
mov
repz
dec
loopne
test
jae
xchg
incl
psllw
xor
fwait
movsb
out
or
test
mov
mov
dec
xchg
and
push
sub
pop
outsb
push
xor
pop
subb
aad
jecxz
adc
xor
gs
cli
out
push
inc
push
adc
jbe
icebp
dec
std
cmp
enter
shlb
sbb
les
and
mov
daa
pop
dec
cmp
rcrb
mov
icebp
sti
push
bound
sarl
out
int
fsubs
lock
hlt
std
xor
adc
test
sbb
inc
sbb
aaa
lds
and
cmp
aam
rcr
push
adc
dec
inc
xor
sahf
mov
int3
pop
cltd
cli
ficoml
xchg
xchg
cmp
mov
sub
lcall
push
xor
fwait
cld
xchg
add
mov
and
sub
lods
lock
jmp
mov
mov
inc
out
movsl
pop
inc
mov
bound
mov
add
sbb
ficompl
lahf
ffreep
fisttpl
xchg
dec
popa
out
xchg
push
push
rcrb
fsubp
sbb
ja
mov
jo
mov
jle
and
add
repz
jmp
fisubrs
movsb
dec
or
mov
jmp
ret
leave
pop
jge
push
mov
xchg
sub
movsl
test
mov
sub
dec
out
imulb
adcb
xor
cli
ja
ficompl
andb
pop
or
ds
jbe
icebp
ljmp
pusha
inc
and
popa
fwait
ja
adc
and
cmp
dec
repz
movsl
sub
jnp
push
in
ret
ljmp
shll
sub
popaw
and
adc
xor
mov
add
sar
adc
sub
pop
push
xchg
repnz
add
hlt
rcrb
sub
mov
subl
test
shlb
rcrb
xchg
sti
and
mov
cmc
jns
cmp
icebp
xor
ljmp
int
in
xlat
stos
ffree
xchg
movsl
mov
clc
fldl
mov
adc
pop
ret
sbb
out
add
into
mov
das
push
gs
rcrl
xchg
cmpsb
lea
fstpl
adc
inc
fwait
inc
mov
icebp
dec
mov
cli
mov
aam
push
stc
and
es
add
mov
jns
js
and
sub
jp
cmp
xchg
fwait
sbb
stos
call
add
cmpb
mov
pop
loop
push
out
lock
call
jno
test
mov
negb
sub
in
jge
out
xor
cltd
repz
cmp
and
in
outsl
out
mov
cmp
mov
inc
aas
cmpsl
popf
sbb
mov
lods
jmp
adc
mov
jnp
lds
or
shlb
jnp
xchg
adc
cs
ljmp
adc
int3
and
ss
xchg
les
inc
call
cmpsl
push
or
xlat
add
add
rorb
mov
mov
jecxz
and
jecxz
call
cld
lds
dec
mov
mov
mov
cmpsb
fisttpl
mov
ficoml
adc
test
popf
push
mov
jo
ficoms
sub
in
jb
imul
mov
jge
push
daa
adc
icebp
add
cmc
push
lds
or
stos
pop
mov
mov
adc
clc
pushf
loopne
fsub
movsl
lea
popa
rclb
aam
lahf
xlat
inc
stos
aam
pop
icebp
fimull
mov
or
es
lret
sub
movsb
xchg
mov
dec
lea
iret
dec
cmp
gs
or
and
movsb
aaa
inc
xor
xor
stos
or
or
or
jmp
in
or
or
fcompl
das
insb
mov
adc
push
mov
push
loop
ljmp
pop
inc
xor
push
out
jb
das
pop
mov
or
mov
movsb
xchg
loope
in
inc
or
test
sbb
sarb
mov
movsb
xlat
movl
jne
xchg
fwait
out
por
cmc
add
cmp
jg
xchg
mov
push
sbb
push
sub
push
imul
or
aas
popf
or
xor
adc
jns
imul
roll
shll
add
fcmovnu
push
stos
rcrl
xor
decb
dec
sti
inc
add
imul
into
sub
sbb
fucomip
ja
jnp
fbld
mov
sbbl
mov
or
or
rclb
xor
cmp
fs
pop
aad
and
xor
pop
out
imul
mov
mov
sbb
cli
or
cmpb
jecxz
sub
or
and
lahf
gs
sahf
inc
inc
jne
push
pop
adc
adc
jnp
cmpsl
out
clc
repz
insl
mov
stos
push
inc
stos
int3
inc
movsb
sub
jnp
cltd
dec
cltd
pop
dec
cmpsl
push
mov
stc
fbld
xchg
fidivs
xchg
pop
pop
fldl
sarb
lds
shl
imul
ret
and
or
pop
adc
mov
lea
ficoms
movsl
sbb
and
sarb
gs
aas
rclb
adc
xor
mov
stos
lods
pop
jl
fcoml
stos
pop
pop
inc
les
pop
xor
call
iret
mov
fistl
xchg
arpl
cmp
jg
push
ret
xor
push
sub
mov
inc
icebp
mov
xabort
inc
cmp
shll
fwait
and
shrb
enter
rcrb
xor
aam
cli
in
xchg
movsl
xchg
outsl
cmp
add
xchg
sti
leave
test
das
sbb
adc
push
push
xchg
xchg
sahf
cwtl
xchg
sub
into
xchg
inc
insb
pop
cmc
push
fs
dec
adc
adc
xchg
ljmp
jb
sti
rorl
and
pop
sub
test
imul
jmp
js
push
stc
out
jne
or
jmp
fdivl
inc
repz
cwtl
jnp
pop
lret
ds
shlb
enter
insb
push
push
pop
inc
jnp
std
testb
add
ljmp
push
imul
cltd
sub
xor
insb
addr16
leave
and
negl
aas
inc
and
test
in
aam
idivb
loopne
cli
jnp
clc
in
repz
inc
repnz
sahf
mov
mov
adc
lahf
ret
scas
jg
dec
jecxz
inc
sbb
cwtl
lret
cltd
in
or
push
iret
sub
or
or
shll
push
push
push
push
adc
pop
incb
push
repnz
adc
adc
inc
push
mov
inc
dec
or
cs
or
clc
out
inc
loop
in
fnstenv
push
ja
icebp
jl
loopne
sub
xchg
pop
push
xchg
adc
lret
jmp
jmp
jae
pop
mov
add
int3
lcall
les
outsl
sti
popa
lock
sti
xchg
and
out
mov
int
or
shrb
mov
xor
sar
push
mov
das
push
inc
and
lock
test
test
mov
add
ret
fistpll
vpackssdw
add
aas
dec
jae
test
shlb
dec
push
mov
jecxz
adc
mov
and
call
inc
xchg
in
fimull
jp
sub
cmc
fisttpl
xor
cli
or
roll
inc
sahf
push
loopne
xor
sbb
xchg
mov
mov
inc
lods
ret
sarb
adc
dec
and
in
or
or
fmulp
mov
mov
lea
adc
andb
fisubl
xchg
cmc
inc
outsb
or
or
xor
shll
das
ret
andb
jo
call
cmc
psrlw
sub
xlat
enter
in
and
popa
jl
ds
pop
dec
push
pop
xor
movsb
jbe
or
mov
sbb
adc
and
cmp
lock
enter
outsb
jl
movsb
daa
mov
loopne
lret
loope
mov
cmp
fsubrp
xchg
mov
dec
sarl
gs
out
xor
push
pop
dec
jg
lock
sbb
gs
iret
cmp
aaa
dec
xchg
stc
xchg
movl
in
gs
or
jmp
push
out
add
sbb
out
push
add
enter
mov
fldt
scas
fwait
roll
ffreep
in
cli
lcall
cmp
add
pop
scas
adcb
cli
pop
adc
je
or
push
and
adcb
cmp
xchg
sahf
shrb
and
mov
xor
in
movsb
cwtl
in
es
adc
pop
outsl
stc
inc
andl
ja
fisttps
dec
jae
popf
dec
fmulp
push
je
cmc
mov
push
push
test
scas
or
mov
in
push
sar
scas
lods
fidivs
in
sbb
aaa
pop
or
lods
mov
sub
rolb
addb
cmpsl
pop
testb
jne
xchg
push
jae
add
pop
repz
out
jmp
imul
mov
repz
pop
push
adcb
popa
dec
dec
das
mov
jle
call
scas
push
sub
cmpsb
cmp
lahf
ljmp
xchg
data16
push
fwait
pushf
xor
out
cmp
vorps
mov
xlat
in
movsl
sub
std
dec
pushf
aaa
jmp
icebp
repnz
cli
mov
cmpsl
stos
fs
dec
xchg
pop
divb
and
push
or
mov
insl
popa
imul
jl
dec
movsl
loopne
pop
pop
jb
push
inc
aad
jle
scas
in
iret
xchg
inc
xchg
sub
push
or
xchg
push
fcomps
ljmp
xor
leave
jb
mov
or
mov
or
jle
test
jb
outsl
add
sbb
mov
call
or
addl
inc
xchg
dec
data16
mov
dec
cmp
cmp
mov
jbe
repz
dec
mov
popa
dec
dec
cmpsb
mov
scas
lahf
ficoml
bound
mov
cmp
cmp
pushf
insb
mov
out
inc
in
negb
cs
mov
or
out
dec
movsl
je
test
fistps
add
jns
pop
xor
xchg
jge
jns
xchg
lock
sub
adc
outsb
mov
lsl
xor
out
lock
mov
pop
mov
adc
int
enter
in
nop
push
cltd
aaa
ret
lahf
out
adc
or
sarl
or
stc
cmp
inc
shrl
leave
push
push
push
add
cmp
sbb
sarb
js
in
push
sub
fimull
mov
test
adc
aas
into
cmpsb
sbb
icebp
repz
mov
loop
cmp
bound
call
add
pop
pop
int3
je
cmpb
pushf
add
mov
mov
test
sbb
into
pop
repnz
pushf
push
mov
push
xchg
jmp
cmp
adcl
jmp
in
sub
shll
sub
jns
and
jb
mov
cwtl
cli
fimuls
sub
test
push
sub
dec
xchg
aad
sub
xchg
lret
sub
mov
mov
pop
cltd
jmp
fsub
lret
or
cltd
cmp
xchg
xor
mov
adc
aam
pushf
add
add
aas
xchg
idiv
aaa
cs
push
mov
adc
imul
pop
sarb
jge
inc
xlat
sbb
jno
mov
pop
lahf
sahf
jge
aad
cmp
adc
sub
mov
xor
insb
cmp
enter
cmc
adc
add
inc
cltd
adc
push
int
gs
mov
sarl
stos
fisttpl
xchg
sub
adc
cmp
add
fadds
dec
icebp
sbb
aas
fstpl
xor
mull
les
loop
and
ret
and
cwtl
mov
sub
cmp
inc
inc
xchg
addr16
push
nop
inc
int3
push
stos
push
lock
adc
das
nop
movsl
or
or
and
repnz
sub
repnz
jae
mov
cmp
popa
movsb
sbb
add
das
xchg
sbb
sub
and
and
dec
jb
mov
aad
push
movsb
add
dec
les
or
mov
sub
fmuls
jnp
aas
push
push
adc
loopne
data16
adc
inc
dec
mov
push
popa
sti
loopne
xor
mov
or
sbb
jp
mov
push
jl
xor
out
int
arpl
repz
sbb
repnz
xchg
pop
lods
shll
mov
int3
jne
rol
stc
leave
sbb
mov
sub
std
inc
cmp
loopne
push
movsb
cmp
add
xchg
into
sub
or
int
pop
push
cwtl
mov
hlt
adcl
push
fildl
and
jne
mov
lds
js
xchg
popf
movsb
repnz
mov
cli
js
sarb
cmp
mov
jmp
aaa
xor
daa
sbb
enter
add
shr
pop
jg
xor
sbb
imul
xchg
out
jno
xor
pushf
movsl
sub
iret
sbb
or
add
jae
pop
sbb
testl
rcr
and
xor
jns
clc
std
dec
fnsave
movsb
and
leave
pop
mov
bound
sti
stos
loopne
fs
mov
mov
mov
pop
fdivp
xchg
xchg
xchg
dec
loopne
pop
bnd
jb
xchg
jmp
add
mov
outsb
push
mov
add
lcall
scas
outsb
fs
dec
or
fsubrp
mov
add
lock
call
sbb
push
mov
testb
gs
test
clc
mov
iret
ret
orl
stos
jmp
xlat
cmovo
shll
inc
and
xor
mov
stc
cmpb
mov
ljmp
inc
xchg
daa
lcall
fwait
cmp
push
fdivrs
leave
pminub
push
ja
xchg
fisttpll
mov
mov
pop
inc
test
push
adc
mov
movsb
ror
fiadds
mov
dec
mov
jmp
out
and
pop
dec
sub
xchg
stos
inc
out
add
test
mov
std
add
iret
mov
ss
sbb
push
or
mov
in
ds
cs
dec
pop
icebp
test
mov
inc
imul
add
adc
fs
insb
xorb
mov
shrb
sub
sbb
sbb
inc
mov
test
cwtl
rol
incl
lret
xor
inc
dec
cwtl
in
push
or
pop
jne
mov
hlt
jne
aam
daa
out
jbe
mov
imul
imul
fsubs
push
pop
rcl
jns
jp
mov
inc
cs
sbb
das
mov
lret
mov
sbb
jb
push
lahf
jnp
inc
ret
or
pop
out
mov
jecxz
and
iret
mov
and
dec
mov
jg
lea
iret
push
xor
and
popf
dec
mov
adc
inc
loop
dec
mov
push
frstor
lock
add
aam
xchg
mov
mov
test
push
mov
std
rol
popf
int
icebp
dec
pop
jmp
mov
mov
xchg
lods
inc
sbb
dec
imul
xchg
subb
ja
icebp
xor
sub
jbe
add
mov
subb
aad
cwtl
and
add
xor
and
add
std
daa
or
sbb
mov
xchg
ret
in
or
aam
push
lret
scas
into
dec
push
jo
repnz
in
out
js
das
jae
int3
cmc
jecxz
testl
enter
xor
mov
cmc
push
and
jle
cld
jbe
loope
imul
sub
xchg
push
cmp
ds
daa
add
mov
data16
subl
mov
add
shll
inc
cmp
lock
mov
test
ss
out
pusha
cwtl
adc
sub
xchg
sbb
loopne
daa
loop
fs
xchg
jmp
xchg
jge
and
mov
mov
fcmovnb
fstp
insl
mov
lds
adc
dec
add
mov
push
orl
mov
scas
in
mov
sbbb
mov
jbe
xchg
jg
xchg
jo
lcall
in
subl
shl
cmpsl
mov
xor
insb
adc
push
dec
jae
lcall
aas
mov
rol
aaa
test
mov
jbe
aaa
mov
fsts
enter
xlat
lods
push
movsb
xor
mov
mov
sbb
inc
dec
mov
mov
push
loope
sbb
mov
fwait
sti
shl
lods
in
xchg
fisttps
aad
cmpb
shrl
pop
mov
mov
sub
cs
stos
or
dec
les
sbb
and
lds
xor
mov
add
int3
jmp
push
jg
or
push
push
jp
xor
scas
sub
push
or
sbb
adc
mov
jecxz
push
sbb
shrl
in
pop
push
mov
out
pop
sarb
or
xchg
push
dec
sub
sar
mov
mov
adc
je
loopne
and
cmp
je
push
imulb
pop
sub
push
sbb
xor
inc
fistpll
xor
or
xor
xchg
jns
xor
jle
fistpll
sub
hlt
xchg
ss
cltd
xor
push
dec
jl
rcll
pop
je
push
mov
inc
sbbb
in
sbb
xchg
jl
jg
mov
loopne
dec
mov
jno
and
pop
inc
pop
jmp
shr
rorb
adc
ljmp
sbb
cmp
inc
rcr
xchg
pop
loopne
sbb
dec
aaa
mov
sbb
push
imul
outsl
mov
push
or
push
add
jno
push
fcomps
out
idivl
add
stos
inc
je
cmp
push
mov
popl
or
js
jp
into
mov
mov
les
mov
lahf
in
call
xor
aad
push
sub
xchg
add
inc
push
add
mov
cmpsl
fisttps
push
ljmp
andb
dec
arpl
and
and
and
pushf
push
mov
lret
sub
cmpb
call
adc
adc
dec
pop
mov
hlt
or
mov
mov
loop
mov
cmp
insb
sbb
into
test
xchg
jne
js
scas
das
add
out
add
pop
dec
lahf
sbb
nop
mov
loop
test
or
enter
stos
bound
shlb
xchg
inc
mov
mov
fmuls
loopne
test
data16
ficompl
mov
pop
push
cs
daa
xor
dec
int
push
jb
ror
jp
inc
mov
or
mov
fbstp
lret
enter
leave
sbb
xchg
insl
xchg
push
movsb
cmpsb
test
dec
adc
or
adc
mov
pop
and
mov
test
lcall
cltd
dec
lock
pop
lods
sbb
in
mov
in
rcl
mov
adc
xor
fiadds
pop
ja
ret
adc
inc
cwtl
add
mov
xchg
mov
cmp
inc
fimuls
bound
in
stos
aaa
sub
out
jmp
cmc
dec
xor
jp
mov
frstor
imul
or
js
adc
popa
or
inc
out
cmpsl
fiaddl
outsl
mov
fcoms
cmpsb
mov
or
stc
mov
pop
inc
mov
in
shrb
xor
inc
xchg
dec
lods
cmp
cmc
cmp
xor
test
pusha
popa
in
mov
mov
jne
fbld
cmp
jnp
jmp
fmuls
and
shrl
and
imul
jno
ret
cmp
test
rcrl
sbb
jecxz
arpl
adc
movsb
mov
push
xchg
dec
or
stc
cmp
xchg
xchg
inc
call
mov
insl
pop
fsub
rol
pushf
test
mov
fnstsw
daa
sti
dec
cmp
and
inc
in
stc
imul
mov
out
fst
ror
ss
xchg
out
mov
sbb
push
iret
loopne
pop
bound
out
inc
movsb
lret
sub
loop
push
xor
or
lods
cmc
dec
fidivs
dec
mov
push
and
add
cli
jae
mov
imul
dec
cmp
jle
shlb
lret
dec
fdivs
adc
lods
push
cmp
clc
es
xchg
in
cmpsl
rcr
mov
adc
sub
flds
enter
test
test
aaa
aad
clc
ret
xor
sbb
fbld
icebp
outsl
lock
cmp
ds
mov
rorl
sarl
test
cmp
imul
out
add
mov
shr
mov
xor
ds
notb
add
aam
stos
orl
pop
mov
mov
fidivl
idivl
xor
inc
sbb
mov
or
xchg
adc
xchg
and
and
xor
jno
sub
addl
cmp
push
or
jl
push
sub
inc
sbb
xorl
ss
sub
ja
inc
ror
stos
sti
mov
pop
pop
inc
clc
cmp
pop
inc
imul
jne
in
std
pop
push
and
lock
icebp
shll
repnz
lret
mov
lret
lods
sahf
push
stos
decb
sub
pop
xlat
ja
nop
mov
cld
mov
je
mov
notl
mov
jno
pop
add
cltd
push
movsb
stos
xchg
stos
jne
lds
out
stos
add
sbb
sarb
fistps
push
dec
jg
cmp
stos
mov
icebp
sbb
inc
aam
ret
cmp
sub
pop
insb
jl
push
adc
loopne
push
int
adc
adc
jl
scas
ror
dec
mov
movsb
add
xlat
sbb
imul
xchg
pop
jmp
icebp
cmp
lahf
mov
mov
lods
std
ficomps
mov
loope
push
add
icebp
sub
fidivrl
and
sbb
mov
sahf
jp
rolb
sbb
pop
loope
imul
mov
stos
aad
push
lock
mov
fwait
stos
jo
je
leave
insb
insb
push
sub
sub
pop
xchg
mov
icebp
aas
cmp
ds
cmp
jg
mov
push
imul
mov
rep
fwait
inc
xchg
enter
lret
cwtl
lds
test
in
jb
icebp
or
sbb
scas
stc
pop
jno
dec
in
dec
enter
daa
subl
add
jg
pop
lods
shrl
or
push
fs
xor
jb
inc
lods
push
int3
mov
std
loop
mov
scas
mov
pushf
mov
es
sti
aas
fsts
fs
push
in
jae
mov
cmp
sbb
mov
jae
aam
or
out
rorl
push
es
jle
out
rol
adc
popf
sbb
andb
lock
mov
or
adc
testl
sahf
jle
repnz
jecxz
cwtl
call
mov
hlt
aad
scas
cmpsl
cmc
mov
jae
sub
push
or
int
xchg
daa
sub
push
mov
int
fistps
and
iret
sub
clc
xor
lea
jnp
dec
and
xchg
aam
add
pop
sbb
loope
insb
test
push
gs
cmp
daa
call
sbb
sub
scas
jb
dec
mov
xchg
aam
sbb
rolb
pop
enter
test
cmp
jns
je
je
pushf
jo
jecxz
fdivrp
addr16
pop
shlb
addb
adc
sbb
imul
xchg
in
mov
in
sub
scas
pop
lods
out
sub
dec
sub
mov
jo
fcoml
hlt
pop
aas
cmp
sbb
pushf
enter
out
int
jae
adc
gs
nop
mov
sti
es
incb
lea
mov
mov
adc
test
cld
sbb
testb
pusha
or
inc
stos
sbb
outsb
xor
in
xor
xchg
add
xchg
ljmp
pop
inc
or
sbb
loopne
sbb
mov
adc
push
loope
js
sub
lret
push
and
cld
mov
mov
mov
or
out
cmp
add
adcb
mov
dec
add
shrl
rcrb
mov
dec
sbb
lock
icebp
std
ffreep
cld
inc
xlat
sbb
sub
test
mov
dec
xchg
xchg
scas
frstor
dec
pop
mov
jg
jl
push
orl
cld
and
cmp
mov
orl
imull
fists
daa
nop
ja
dec
je
loopne
das
jb
shrl
xchg
push
dec
adc
add
mov
int3
jno
adc
mov
cmpsb
dec
pop
loop
outsb
jbe
std
cmp
add
dec
bound
mov
mov
icebp
icebp
iret
or
out
mov
hlt
xor
movsl
xor
sub
add
inc
test
imulb
sub
outsb
adc
popa
cmp
popa
or
adc
imul
inc
inc
push
sub
xchg
sub
xlat
aam
pop
jae
aad
mov
cmp
jp
inc
jle
jno
loop
or
push
add
inc
jecxz
push
divb
ror
cmp
test
mov
sub
rorb
xchg
sub
loope
scas
inc
imul
lret
mov
xor
push
cmp
clc
lret
jne
add
mov
repz
dec
jl
shld
ret
aam
inc
inc
sbbb
xor
push
test
and
fdivr
out
pop
leave
lods
movsl
xor
fbld
and
cld
inc
dec
loop
es
add
pop
sbb
outsl
jno
add
sbb
fcmovne
add
not
sti
rorl
cmpsb
dec
clc
je
shll
outsl
and
cmp
sahf
test
xchg
clc
mov
jnp
outsl
cmp
clc
std
sub
xchg
repz
mov
add
loop
mov
fsubs
xchg
ljmp
call
push
jle
mov
fcompl
sbbl
mulb
ss
scas
sahf
lret
aaa
xchg
xorl
inc
mov
or
jnp
pop
cmp
sbb
es
addr16
mov
popa
negl
rep
mov
or
sysenter
pop
dec
fnstsw
cwtl
mov
push
enter
mull
clc
repz
fistl
int
mov
arpl
push
popl
adc
add
xchg
add
cmpsb
xlat
cmp
push
push
push
cwtl
adc
push
jge
in
inc
cmp
stos
adc
add
iret
lods
inc
test
outsl
jmp
and
cmpsb
mov
jmp
rorb
jns
out
fidivrs
cs
lds
jo
xor
mov
cmpsb
mov
mov
mov
adc
push
mov
stc
imul
jns
movups
mov
push
push
shlb
and
leave
jno
push
mov
movsl
insb
xchg
push
push
xchg
mov
out
add
lcall
stos
mov
mov
filds
dec
aaa
jmp
sub
icebp
or
fnstsw
mov
pxor
jb
dec
mov
adcb
pop
pop
mov
adc
stos
xor
mov
mov
verr
jno
daa
mov
cmp
movsb
std
popf
xor
imul
iret
mov
adc
imul
xor
andb
sbb
lods
cmpsb
sbb
testl
fucomip
mov
mov
cmp
inc
loop
outsl
mov
pop
imul
add
imul
clc
xacquire
stos
mov
or
icebp
cwtl
stos
xchg
xchg
adc
cmp
and
data16
lret
adc
sub
pop
mov
push
test
imul
xchg
dec
cmpsl
adc
push
and
mov
lock
jecxz
adc
aad
push
out
stos
mov
fnsave
jns
stos
mov
ljmp
jbe
sar
jo
xor
orl
adc
xchg
xchg
mov
es
jmp
nop
add
xlat
jle
or
jno
movsl
mov
neg
shrl
es
jb
cli
xchg
add
leave
int3
mov
loop
mov
mov
jmp
push
cmp
add
in
jmp
out
aaa
sbb
sub
cmp
dec
cmc
sub
push
pop
insl
in
xchg
mov
out
cmpsl
pop
loope
lahf
xchg
xchg
xor
rcrb
inc
fsubrp
lret
stos
or
push
mov
in
aad
sbb
push
orl
in
cmp
test
xor
nop
pop
inc
jle
pop
sub
inc
imul
or
cltd
flds
pop
mov
sub
repz
pop
xor
loopne
stc
cwtl
jmp
call
inc
sbb
sub
and
negb
fdivrs
push
xchg
mov
aaa
pop
roll
test
sbb
mov
call
xchg
insb
outsl
mov
lretw
ret
movsb
into
mov
les
adc
mov
in
iret
sahf
inc
and
inc
bound
into
pushf
mov
pop
push
xor
mov
jg
mov
leave
or
outsl
xchg
jmp
les
stc
mov
in
xchg
bound
icebp
iret
mov
add
mov
pop
mov
fisttps
mov
test
push
sub
test
xchg
dec
mov
inc
and
repnz
jb
mov
mov
and
push
out
sbb
arpl
pop
adc
loop
dec
xchg
js
fdivrl
test
clc
incl
pop
cltd
pop
jmp
dec
sub
inc
adc
push
rolb
add
xchg
add
ret
add
fidivl
in
mov
mov
imul
inc
aad
mov
cmc
movl
xchg
cltd
cmc
call
adcl
or
pop
inc
out
and
xor
ret
mov
pop
xchg
fiaddl
inc
inc
imul
cltd
mov
das
movsb
insl
adc
mov
mov
repnz
lcall
add
loopne
das
jb
out
fs
cmp
in
mov
pop
sar
out
mov
pop
cs
pop
insl
mov
cmp
or
sub
sub
cmp
inc
xchg
xor
fwait
cmpsb
jb
mov
loop
mov
ret
cmp
lret
inc
pop
jne
push
sub
loop
pusha
out
push
sbb
aas
xor
inc
sti
push
insw
and
inc
sub
mov
loope
fidivl
or
mov
xor
icebp
aas
xchg
cmp
pop
mov
or
jne
add
fisubs
cmpsb
lods
jbe
sbb
pop
adc
arpl
js
insl
movsb
push
or
dec
test
es
js
push
pop
and
in
mov
std
jo
ljmp
aaa
adc
ja
sbb
and
stos
jo
shl
jmp
push
hlt
xchg
mov
icebp
inc
lock
and
shrb
and
mov
inc
jns
cli
lret
rcrb
mov
rclb
or
inc
stc
sub
sbb
int3
and
pslld
inc
mov
dec
push
int
add
adc
lret
mov
xchg
mov
push
js
popl
pusha
fcomps
test
pop
bound
cmp
aad
inc
outsl
xchg
ds
cltd
shlb
mov
push
add
adc
jbe
insl
pop
pop
aaa
inc
movsb
and
jo
and
ja
mov
adc
pop
add
inc
ror
int
idivb
nop
push
gs
sbb
inc
push
rorl
shll
lea
push
xchg
add
ret
mov
push
lahf
mov
and
or
adc
adc
lret
out
mov
jno
inc
mov
xor
in
int3
cmc
mov
dec
sbb
imulb
testl
dec
repnz
leave
pop
dec
inc
and
lret
das
xlat
sbb
sbb
cmpl
or
in
mov
mov
ret
call
js
sbb
inc
push
mov
dec
out
mov
and
push
dec
dec
mov
adc
fistpl
xchg
pop
pop
add
cs
out
stos
andb
and
mov
outsb
pop
loope
mov
mov
fmul
sub
les
loopne
iret
iret
sub
pop
loope
insb
gs
adc
jne
mov
mov
mov
jge
mov
test
mov
xchg
inc
sub
push
adcl
and
ss
lock
jns
sti
sbb
cmpsl
adc
test
test
shlb
add
or
rcrl
add
add
inc
ljmp
pop
jnp
lret
ljmp
stos
insb
and
sbb
adc
adc
jo
mov
je
cwtl
lods
inc
or
mov
mov
stc
push
jecxz
scas
lea
in
and
popa
mov
ror
loope
adc
sbbb
xchg
out
fidivl
ja
adc
mov
mov
aas
fnsave
loope
xchg
lea
fucomp
mov
jg
or
cltd
xchg
xchg
inc
push
mov
jmp
inc
fistl
ficoms
inc
push
imulb
sarl
out
dec
jnp
xchg
jmp
loopne
jp
ljmp
loope
andl
xchg
ss
loopne
fistpl
jge
cmp
pop
fwait
das
or
mov
fbld
mov
je
cs
movsl
flds
lods
and
repz
mov
push
push
in
mov
ret
test
int
adc
fnstcw
imul
cwtl
sub
ret
jb
push
ljmp
shrb
dec
inc
pop
push
pop
sub
mov
mov
mov
sub
mov
inc
mov
sbb
lock
push
rorl
stc
lcall
and
loop
mov
ret
adc
lahf
dec
xchg
ret
push
repnz
jmp
fwait
sub
adc
jge
inc
cld
sahf
add
ret
fwait
mov
addb
mov
push
inc
jecxz
std
fldl
insb
xor
sahf
popa
fs
imul
insb
add
mov
jo
int3
push
imul
mov
dec
lcall
push
aam
adc
cwtl
gs
imul
fstp
and
out
shl
sbb
jg
lcall
sub
adc
sbb
xlat
sbb
pushf
pusha
mov
xchg
cmpsl
mov
std
mov
pusha
inc
gs
inc
inc
push
repz
or
push
imul
ret
sbb
and
push
push
xchg
sub
mov
push
in
aaa
icebp
popf
imul
mov
test
dec
leave
pop
in
iret
out
mov
sbb
push
ret
mov
sbb
cld
push
incb
mov
inc
addl
add
and
dec
mov
fwait
mov
lods
or
xor
clc
int
sbb
push
mov
xchg
test
fbld
into
add
and
lahf
les
fs
adc
dec
lods
adc
push
sub
test
imul
arpl
sub
aas
dec
jl
cwtl
mov
or
js,pt
mov
push
dec
or
popa
leave
jecxz
pop
lret
sarl
mov
and
and
cltd
or
ss
shll
xchg
fnstenv
pop
sti
jns
out
clc
mov
cmpsb
fisttps
mov
in
push
pusha
xchg
cmp
inc
dec
jg
stos
aam
ror
push
pop
or
inc
cmp
fsubrl
lock
arpl
cmpsl
cmp
mov
and
xchg
xchg
push
jns
jle
je
jne
lahf
jmp
mov
addr16
insb
scas
mov
pusha
or
jg
cli
adc
fwait
in
aam
add
fs
sahf
iret
outsl
iret
jo
testl
inc
mov
xor
jno
mov
inc
xchg
fisubl
mov
mov
shrb
mov
aad
out
cmp
cwtl
iret
pusha
aam
loop
lds
subb
call
sub
fisubl
sbb
sbb
jge
and
jmp
fisubrl
adc
dec
in
idiv
inc
call
aad
in
negb
movlps
cmc
and
stos
xor
pusha
and
frstor
hlt
or
dec
adc
dec
movb
dec
push
pop
xchg
mov
sub
aad
test
mov
insb
adc
xor
das
or
sbb
ffreep
lds
or
sarl
pop
hlt
bound
in
and
sbb
add
jb
pop
cmp
sti
ret
es
in
mov
test
adcl
sub
cmp
jbe
sub
mov
sub
ret
mov
mov
adc
pop
pop
pop
mov
in
sub
data16
lahf
pop
xlat
xor
jle
ja
jle
push
mov
lods
icebp
inc
fistpl
and
mov
imul
cltd
mov
mov
bound
movsl
lcall
inc
mov
divl
popf
mov
jp
fnstcw
mov
movl
adc
aas
mov
pop
outsb
sarl
pop
push
adc
jmp
fwait
mov
test
lock
mov
test
add
xlat
clc
roll
cmp
and
ljmp
mov
test
xlat
pop
mov
add
shrb
test
sbb
mov
xchg
cltd
cmp
sarl
scas
inc
inc
dec
pusha
mov
pushf
mov
sbb
dec
and
mov
dec
iret
xchg
dec
pop
inc
out
cmp
sahf
sbbb
in
rcll
ret
mov
mov
pop
js
cld
xorb
movsb
loop
cmp
scas
fldenv
cmp
xchg
adc
repz
jmp
out
cli
lahf
pop
sub
ret
xor
mov
and
mov
jge
arpl
cltd
mov
fdiv
ret
hlt
test
sub
fcmovne
and
bound
xchg
cmp
sar
das
push
push
ljmp
pop
xlat
inc
sti
jp
mov
adc
lea
lods
subl
adc
push
imul
repz
xor
ret
mov
push
fwait
sbb
jge
mov
mov
je
sbb
xor
sub
adc
mov
out
dec
add
in
sbb
push
fbstp
mov
fwait
sbb
frndint
mov
ljmp
add
push
out
out
sbb
ss
mov
mov
orl
dec
pop
rorb
cmpsb
test
mov
cs
pop
jno,pn
mov
enter
cmp
inc
mov
mov
test
inc
ja
pop
mov
mov
in
and
into
sbb
rol
inc
fs
push
das
mov
fadds
pop
aaa
jbe
iret
inc
pop
in
in
push
cld
mov
clc
fwait
bound
fnstenv
xchg
inc
pop
mov
sbb
cld
sbb
jle
pop
inc
or
clc
mov
jno
jo
vpmaddwd
jo
xor
xchg
push
xchg
xor
jg
mov
push
out
rorl
enter
xchg
jo
xchg
fisubrs
dec
lods
inc
adc
cmp
nop
adc
mov
popf
or
repnz
lret
sbb
loope
xchg
push
loop
push
fildll
and
inc
and
jg
out
icebp
xor
sub
xor
inc
xor
std
jmp
fmulp
ss
jle
and
out
sub
insl
add
das
dec
push
push
call
mov
ja
sbb
mov
cmc
pop
mov
or
or
xlat
insb
adc
or
push
inc
xlat
fsts
xchg
lock
inc
cmp
and
jno
repz
and
pop
cmp
aas
mov
pop
arpl
sub
jg
cmp
cmpsl
inc
adc
cs
punpckhdq
adc
hlt
jmp
inc
cmp
sub
pop
sti
pushf
mov
ss
push
jno
mov
pop
ds
add
ret
ljmp
mov
jb
mov
sti
mov
insl
ret
jge
pop
cld
inc
repz
stc
xchg
push
jns
sti
cltd
loop
lcall
dec
mov
movsl
or
inc
or
xchg
and
pushf
lcall
xchg
mov
shll
mov
sbbl
push
jge
int3
xchg
mov
dec
fs
or
mov
rcrb
sub
push
ret
jle
stos
inc
ret
popa
mov
sub
xchg
and
ss
fsubr
pop
dec
fidivl
iret
push
stos
xchg
clc
mov
imul
push
in
addb
aad
mov
loopne
sub
mov
adc
add
xor
add
popf
xlat
cmc
jae
or
or
movb
fsubl
hlt
mov
pop
pop
out
xchg
xchg
adc
loop
lea
lret
jb
fwait
outsl
pop
divl
ret
xor
cs
push
adc
cwtl
cmp
stc
mov
in
insl
cmc
xor
push
add
or
fstpl
leave
bound
movsw
adc
pop
in
xor
inc
outsl
push
cmc
lds
pop
in
ja
sub
popf
or
mov
and
aaa
es
push
jl
addr16
push
js
cltd
xor
fnstsw
pop
cwtl
inc
into
xchg
jecxz
xor
sub
mov
pop
dec
mov
scas
add
xor
or
push
mov
rorb
inc
add
jae
leave
mov
push
sub
ret
adc
pop
repz
leave
pop
adc
lret
arpl
movsb
fldenv
les
test
add
je
lahf
mov
arpl
xchg
push
fdivp
js
rclb
xchg
in
test
mov
inc
sbb
jp
js
shll
shl
bound
fidivl
out
xchg
addl
mov
stos
jnp
inc
cmpb
outsb
push
in
int
roll
popa
das
pop
cmp
jbe
fwait
xchg
cmpsl
sub
lret
ret
mov
sarl
pavgw
xchg
ds
xchg
sbb
mov
jge
xor
sbb
cli
inc
arpl
repz
jp
mov
iret
add
cli
scas
xchg
inc
xchg
sahf
mov
js
dec
jo
das
cwtl
pushf
xor
test
sahf
sbb
and
mov
mov
mov
data16
adc
jle
lret
mov
aad
insl
stc
hlt
std
sbb
cmc
insl
and
cmp
push
unpckhps
fildl
fwait
rorb
push
cmpsb
jl
adc
add
hlt
xchg
mov
push
push
pop
clc
stos
pop
mov
push
scas
aaa
rcrb
xchg
lds
ret
jmp
scas
xchg
sahf
jo
jge
pop
jns
push
jbe
and
insl
test
cmpsb
js
ja
mov
addr16
mov
xor
shl
push
mov
bound
cmc
push
in
mov
out
js
inc
enter
mov
sub
out
in
add
and
shlb
nop
push
testb
fwait
mov
adc
jmp
mov
adc
xchg
out
push
inc
loope
add
jae
inc
add
xchg
pop
sbb
outsl
cmp
push
leave
push
lds
fsts
push
xor
push
push
adc
sub
cmovns
and
adc
out
sub
jb
jns
mov
lret
popa
aaa
jae
inc
popf
jb
pushf
clc
add
mov
imul
ficomps
scas
mov
rcll
mov
aam
and
pusha
imul
lret
sbb
jmp
sbb
adc
rcrb
or
out
rolb
push
lock
mov
inc
or
mov
add
icebp
pop
pop
in
push
xchg
xchg
lret
and
inc
mov
xor
push
scas
popf
movsl
mov
mov
mov
push
flds
mov
sbb
mov
gs
push
mov
pop
gs
mov
sbb
cmpsl
ss
cli
pop
testb
shll
cmp
pop
mov
sbb
fmull
cmpsl
sbb
enter
fwait
movq
idivb
lahf
sbb
loope
mov
cmp
out
pop
pushf
sbb
mov
cs
loope
push
cld
adc
sub
dec
ss
xchg
nop
cmp
push
lahf
pushf
clc
stos
fdivl
fs
sub
sti
jbe
xor
push
mov
adc
push
jae
mov
jns
addr16
movsb
fcoms
push
test
push
inc
inc
aas
call
mov
pop
pop
sub
mov
nop
or
push
adc
xchg
arpl
or
jne
loopne
shlb
xchg
xchg
adc
and
dec
jne
mov
xor
mov
dec
fisubrs
pop
pop
mov
add
lret
xchg
mov
mov
adc
cmpsl
inc
cmpb
inc
lahf
mov
adc
lret
pop
mov
call
push
pop
enter
mov
outsl
sbb
out
mov
int
sbb
mov
stc
loop
clc
cmp
lahf
mov
sub
fcomps
inc
lret
dec
mov
jbe
cmc
scas
iret
test
in
mov
cmp
rclb
decl
adc
in
lock
inc
or
fcomps
fcoml
lock
push
sub
cmp
loop
and
ss
pop
or
mov
dec
loop
loope
in
les
addr16
cld
mov
les
es
push
insl
cmp
xchg
xor
pop
xlat
std
mov
pusha
pop
dec
lret
ss
out
lods
pop
adc
sub
pusha
fwait
aad
dec
test
fucomip
inc
daa
dec
out
sbb
mov
dec
push
ja
insl
divb
cli
fimuls
mov
push
insb
inc
sbb
or
in
and
add
mov
cmp
mov
loope
filds
dec
je
out
jne
xor
pop
ja
dec
jae
lock
cmpsl
clc
mov
sbb
movsb
mov
inc
loop
loope
int3
mov
into
xchg
sub
outsl
mov
mov
fcom
adc
cmp
aas
jmp
pop
push
rcrl
push
sarb
fmull
ss
out
adc
dec
pop
negb
ror
dec
scas
mov
loope
lahf
sahf
push
out
jl
iret
pop
outsb
mov
into
rorb
dec
repnz
mov
jb
jne
mov
xchg
xchg
outsl
fadds
xchg
movsb
test
bound
cmp
fcom
cmpsl
sbb
lret
push
and
and
push
and
push
dec
frstor
sti
data16
ds
imul
ret
imull
icebp
inc
cmp
cmp
xchg
push
sbb
inc
xchg
pop
jae,pn
popa
fmul
aaa
ljmp
push
cmpsl
pop
mov
imul
dec
outsl
loop
sbb
das
dec
pusha
mov
sub
rorl
push
ljmp
popf
mov
dec
mov
or
pop
xchg
std
lret
imull
push
movb
fld
dec
enter
mov
and
add
ds
xchg
in
push
fistps
mov
mov
arpl
cvtdq2ps
scas
out
add
mov
popf
out
lret
xor
leave
sub
aad
data16
lds
bound
mov
jne
je
cli
push
rcrl
adc
dec
push
in
in
dec
and
mov
in
lea
loop
out
xor
sbb
int3
mov
notl
dec
scas
stc
sub
popf
subl
jnp
addb
sub
js
int3
push
mov
jno
pop
fcomip
push
clc
xor
in
xchg
sarl
xor
pop
mov
popf
lret
push
jbe
int
rcll
fs
cmp
insb
push
sub
jo
push
or
mov
push
repnz
inc
bound
stos
lret
loopne
xchg
xor
repnz
scas
enter
out
cmp
push
pushf
hlt
in
dec
mov
lds
stos
rcll
mov
mov
jle
dec
add
gs
jo
outsl
xchg
or
imul
jl
aam
arpl
mov
nop
sub
mov
mov
test
mov
stos
jnp
ss
sub
sbb
lahf
aaa
xchg
sbb
repz
mov
jl
mov
and
sbb
sub
hlt
outsb
into
pop
push
jecxz
push
imul
mov
in
shl
outsl
jmp
aas
lods
fldcw
pusha
out
add
xor
ret
stos
mov
add
test
fisttpl
out
add
das
jbe
jno
out
jge
jle
loope
out
mov
xor
sbb
ficomps
xchg
mov
leave
scas
dec
rorl
add
ret
push
mov
int
fstps
or
andb
repz
shrb
sub
fwait
ljmp
movsl
fnsave
fisttpll
push
and
lcall
test
stos
ret
xlat
push
mov
mov
push
xchg
repz
mov
add
fcom
pop
and
ljmp
dec
adc
lods
aad
pop
hlt
mov
and
adc
pop
inc
mov
cld
mov
add
xchg
or
xor
dec
aaa
adc
fildll
jecxz
pop
rolb
xchg
mov
cmp
cld
shr
aad
clc
lret
cmp
sar
inc
out
leave
into
addl
xlat
cmpsl
mov
sbb
add
int3
ja
int3
stos
sti
mov
stos
insb
inc
dec
aam
or
jmp
mov
loop
ja
shr
mov
adc
lods
mov
mov
rcll
in
push
cltd
mov
mov
jns
push
push
ss
add
add
in
ret
xor
and
gs
xor
pop
mov
mov
inc
incb
into
mov
mull
fnstenv
arpl
test
xchg
mov
sub
add
test
mov
jmp
adc
out
push
aam
or
jp
div
dec
jp
stc
and
js
push
dec
push
lahf
lods
fdivrl
mull
sbb
movsl
arpl
lea
sahf
movb
out
cmp
scas
push
xlat
cltd
jge
fiadds
add
sti
mov
loope,pt
mov
jp
ret
dec
inc
lods
adc
sub
arpl
mov
sti
clc
or
adc
outsl
out
cmp
jae
mov
mov
das
scas
test
sti
in
insl
inc
ljmp
mov
jl
mov
push
push
jmp
mov
xor
xor
cmpsl
dec
rcr
mov
mov
xchg
inc
dec
fiaddl
xor
sbb
push
inc
xchg
ret
mov
dec
mov
adc
adc
cmp
dec
inc
pop
push
jl
pop
mov
inc
repnz
mov
fcoms
xor
mov
pop
mov
shrl
fwait
mov
xchg
ljmp
push
adc
insb
xchg
jmp
mov
in
adc
jns
and
pop
push
repz
jle
xor
adc
in
and
je
xchg
lock
sub
push
outsl
fcomp
enter
xchg
mov
pop
xor
sbb
xchg
test
test
dec
fimull
mov
fisubrl
pop
jno
call
pop
push
gs
xchg
iret
or
mov
and
sarb
das
lock
es
lret
dec
mov
shrb
cmp
addl
ss
xchg
mov
lret
negb
inc
and
sub
clc
or
mov
mov
cs
push
cmp
mov
xor
xor
mov
sub
into
pop
push
fldt
test
jge
aad
pop
cmp
nop
repnz
popf
dec
inc
fisttps
xor
mov
pop
pop
fs
dec
mov
push
jo
dec
push
cltd
inc
sub
push
stos
out
aas
fsubs
cmp
jecxz
data16
fnsave
popa
cmc
push
arpl
mov
fs
mov
mov
push
xchg
or
rcl
push
mov
push
out
xchg
add
pusha
jno
cmp
fisubrs
lea
mov
dec
cmp
orb
imul
loop
pushl
nop
adc
jp
cwtl
fldt
xor
stos
popf
pop
outsb
ret
or
loope
sub
ja
or
xchg
sahf
pop
out
mov
mov
cmpsb
out
sub
lret
sbb
lods
movsl
push
cmpsb
push
fsts
out
loope
xor
loop
inc
or
mov
jl
sbb
jae
xchg
mov
pop
loop
jge
sti
xchg
js
inc
rorb
iret
or
shll
pop
rcll
shr
jno
loope
hlt
push
neg
add
mov
mov
sbb
fdivrl
js
or
add
mov
popa
out
shl
test
jmp
loope
leave
adc
jne
cmp
sub
rcr
cmpsl
loop
faddp
dec
mov
mov
cmp
mov
imul
fs
shrl
xchg
lock
pop
std
jno
fcmovne
xorl
stos
fwait
sahf
mov
rolb
in
and
int
subb
nop
rcrl
jno
dec
mov
lods
pop
or
popf
adc
mov
xor
or
cli
btc
aas
mov
pop
mov
out
mov
inc
inc
into
std
out
sub
and
mov
xor
lea
and
loopne
push
rcr
cmp
int
and
mov
fistpl
add
or
test
sti
cli
sub
pop
das
repnz
dec
in
loope
ret
pop
push
dec
out
mov
jae
pop
dec
xchg
mov
xchg
xor
arpl
stc
jle
clts
and
shrl
sub
push
push
mov
jl
sbb
sbb
xchg
add
xlat
cltd
in
mov
stos
jmp
stc
hlt
mov
test
push
mov
jo
call
adc
repz
ret
sahf
mov
clc
sub
jbe
test
lock
push
pushaw
xchg
cmovae
pop
test
jne
push
jbe
and
sub
addb
sub
push
jnp
push
cwtl
sbb
xor
in
daa
in
fldcw
cmp
xchg
cmp
mov
stc
and
in
adc
insb
out
push
das
mov
nop
sub
bound
jbe
mov
or
cmp
push
cmp
jecxz
and
rclb
inc
cmp
mov
xchg
and
cmp
adc
cmp
repnz
sahf
push
mov
ds
incb
or
dec
inc
insb
push
aaa
ljmpw
xchg
adc
push
nop
inc
enter
aam
aam
cwtl
stc
stos
jge
js,pt
arpl
mov
xchg
jle
mov
rcrl
add
mov
pop
test
frstor
pop
xlat
fnstenv
push
out
sbb
inc
addr16
xor
test
pop
xor
lds
cltd
or
jae
pusha
mov
ret
fstpt
xor
pop
jae
imul
pushf
ficompl
sbb
pop
sbb
mov
leave
loop
test
add
fs
push
sahf
out
cmp
mov
ret
into
mov
sti
mov
or
mov
in
lcall
inc
stc
mov
mov
sub
push
or
movsb
dec
das
repz
lret
jmp
jg
xor
dec
xor
pusha
lods
cmp
cld
xchg
aas
fisubl
sub
fnsave
ret
sbbl
fcoms
xor
fdivs
imul
addr16
dec
or
movsl
inc
jae
cld
and
xchg
bswap
jg
int
jg
inc
lods
xchg
pop
mov
push
cwtl
test
gs
into
and
fldcw
cmpsb
adc
sbb
cwtl
pop
and
sbb
and
adc
push
aad
imul
lods
sbb
jle
xchg
pop
rorl
in
adc
or
jg
inc
loopne
sub
xchg
and
fcmovnb
mov
or
jo
lcall
pop
popf
popa
mull
jo
inc
xchg
lcall
adc
std
sahf
xchg
push
sbb
lret
testl
hlt
lds
insb
push
rcrb
into
cmp
enter
out
movsb
in
icebp
mov
xchg
adc
add
and
mov
int
jno
lret
call
scas
mov
data16
dec
popa
xchg
push
fistpl
xchg
mov
or
ficoms
cmp
int
ds
cmpsl
aas
pop
rcr
pop
push
adc
outsb
cmp
rcr
push
jno
adc
stos
dec
sbb
ret
xlat
xchg
loop
cmc
daa
in
xchg
mov
fs
sub
imul
rcll
outsl
xchg
sarl
ljmp
sub
lcall
cmpsl
pminsw
imul
std
adcb
sub
jge
and
inc
sub
jo
add
loope
inc
cmp
adc
out
pop
int
lods
push
mov
out
jnp
clc
std
cmc
mov
fdivrl
lret
outsl
mov
enter
mov
lret
jl
push
adc
fcompl
inc
cmp
xchg
pop
test
outsb
mov
cmp
test
std
push
dec
neg
jmp
repnz
leave
adc
in
repnz
cld
mov
xor
pop
add
mov
adc
jmp
jne
xor
mov
pop
ficomps
addl
push
jecxz
dec
dec
cmp
cmpsl
mov
popf
mov
jecxz
push
or
xor
out
je
in
sub
push
dec
adc
cmpsb
mov
jp
inc
outsb
cmpsl
ret
js
and
jae
mov
in
in
dec
cwtl
xor
xchg
leave
jecxz
cs
inc
xchg
sahf
xchg
or
fmuls
lock
cld
lock
sub
int
call
and
aas
or
sbbl
test
pop
rcl
xor
mov
adc
mov
or
sub
inc
ss
ja
cmc
int
idiv
ds
mov
xor
sub
sub
repnz
sar
pop
dec
ret
in
mov
je
fadd
and
les
fdiv
js
push
inc
jmp
lret
mov
jne
dec
mov
sti
mov
pop
rclb
jnp
mov
ja
jnp
or
daa
or
mov
push
mov
cmpsl
pop
fisttpll
shl
mov
or
into
lret
notl
popa
pop
push
repnz
stos
xchg
xor
stos
outsb
sarb
or
out
mov
sub
icebp
push
inc
xor
xchg
enter
mov
sbb
dec
and
outsb
mov
cmp
jmp
outsb
hlt
popa
fldl
mov
dec
lock
loop
testl
imul
bound
sub
aas
leave
push
std
add
add
xor
mov
test
in
push
das
xor
sbb
add
fadds
aas
dec
sub
and
adc
push
leave
sbb
jmp
pusha
pop
insl
adc
sahf
pop
movsl
xchg
int
imul
mov
xchg
mov
dec
fdivrs
aad
mov
movb
xchg
push
sti
pop
mov
jge
mov
xor
xchg
or
add
jl
jb
xor
loop
ja
repz
jge
add
leave
pop
lret
shlb
adc
mov
inc
push
cmp
int3
lock
inc
imul
scas
aam
jg
out
call
out
enter
faddp
pop
sbb
jl
in
dec
add
shl
test
adc
lods
faddl
push
cmp
int
insl
fisttpll
or
enter
mov
mov
inc
jmp
outsb
bound
adc
xchg
and
loop
test
mov
pop
in
dec
or
ja
pop
cmp
movsb
xchg
mov
call
lea
sbb
roll
daa
jl
out
int
lea
lods
leave
popa
xor
sarl
das
add
xor
add
fisttps
push
cmc
std
mov
push
data16
pop
xchg
xor
adc
fiadds
inc
jnp
jb
mov
mov
ljmp
fucomp
popf
test
in
lret
es
bound
lahf
cltd
mov
leave
cld
mov
pop
mov
pop
pop
inc
cmc
mov
ljmp
push
mov
mov
fidivs
pop
je
and
lods
inc
and
mov
sahf
cmp
call
lahf
mov
lea
sbb
lret
mov
adcb
lahf
xchg
cli
inc
mov
pop
pop
sbb
cmc
ds
sbb
dec
adc
out
out
mov
out
ret
push
jecxz
js
test
loope
push
pop
into
cmp
and
push
dec
loop
cwtl
mov
jg
gs
sub
lret
inc
ljmpw
gs
xchg
xlat
arpl
pop
dec
imul
add
lret
orb
pop
cmpsb
sahf
push
xchg
sbb
clc
popa
mov
push
inc
fwait
xor
push
test
inc
hlt
psrlw
jge
add
sbbb
add
push
in
push
mov
cmpsb
cmpsl
adc
jns
pop
in
pop
mov
jg
pop
inc
adc
cli
test
push
rcll
sub
daa
lods
sub
mov
ret
sub
stos
bound
mov
mov
ja
sbb
or
mov
js
push
adc
stos
adc
pop
mov
add
outsb
enter
fistl
adc
xor
loopne
jle
cmp
xchg
mov
cltd
mov
xchg
or
filds
pop
or
imull
insb
mov
inc
xor
jno
and
lret
mov
sahf
shll
out
std
scas
popf
xor
push
cwtl
adc
out
xor
stos
xchg
imul
out
or
int3
sarl
add
test
mov
lcall
in
mov
pushl
pop
imul
jp
shlb
rcl
dec
lret
sti
call
sbb
add
pop
mov
pop
dec
xchg
sub
mov
jl
pop
push
sbb
or
adc
dec
clc
xor
insb
js
lcall
mov
clc
push
xlat
xor
bound
dec
mov
xlat
fildll
mov
jmp
test
sub
add
xchg
call
xchg
fnstcw
lods
test
mov
pop
idiv
daa
inc
call
add
jns
cmpsb
mov
push
test
hlt
xorb
cli
je
test
fimuls
shl
stos
loope
mov
jno
scas
aad
or
aas
aas
hlt
jg
mov
inc
xor
arpl
mov
movsb
pop
sub
cli
xchg
mov
dec
cld
adc
cmp
fbld
or
aaa
aas
xchg
loopne
outsl
in
xchg
mov
adcl
scas
paddusb
push
iret
imul
add
jl
mov
adc
je
xchg
ret
cmp
dec
popl
in
dec
cmp
or
mov
incb
xchg
movsl
jne
sub
testb
popa
scas
sub
rolb
xchg
jl
sarb
push
leave
jmp
push
pshufw
jp
aad
jb
repz
mov
frstor
adc
pusha
aam
or
je
mov
mov
test
rcrb
shll
lods
pop
mov
movsb
aad
pop
inc
xor
iret
add
and
and
dec
int
and
cmc
mov
add
int
out
shll
mov
jp
cwtl
xor
jno
cmp
das
dec
push
sbb
push
mov
pop
mov
clc
pop
mov
or
sbb
xchg
sbb
in
xorl
bound
bound
sub
stc
andb
pop
xchg
add
lahf
mov
mov
pop
dec
and
jno
cmp
mov
push
movsb
into
xchg
sub
push
hlt
int
xchg
jbe
cmpsl
aaa
jns
xchg
add
xor
inc
mov
or
sbb
addr16
jmp
addr16
js
jp
mov
aam
mov
lods
mov
inc
xor
sbb
jne
add
xchg
jmp
por
xchg
cmp
lods
jecxz
lahf
lea
idivl
jge
pop
adc
notl
nop
cltd
lret
cmp
cs
xchg
jmp
sahf
nop
or
push
push
dec
sub
jge
cmpsl
adc
ja
dec
loope
sub
pop
arpl
sbb
push
and
xor
sbb
jle
repz
pop
js
dec
xchg
daa
sbb
insb
push
cmpsb
fstps
mov
xor
mov
push
rcrb
pop
mov
ss
loopne
fildl
and
xchg
mov
fstpl
out
rorb
je
or
inc
enter
xchg
mov
sub
lret
fstps
hlt
inc
dec
lea
mov
mov
into
mov
inc
sbb
movsb
lock
xchg
pop
xlat
or
std
dec
mov
adc
flds
mov
test
rorb
mov
mov
sbb
sbb
jae
pop
call
xchg
xor
inc
lods
or
test
push
and
xchg
movsl
xchg
testb
ss
pop
lret
repz
jl
mov
rcll
outsb
cltd
sbb
sbb
push
mov
lea
nop
pop
sub
dec
cld
mov
test
add
shrb
cltd
sbb
in
push
mov
sbb
fisttpll
adcb
jae
mov
insl
lods
and
mov
cmp
inc
roll
std
cli
mull
cltd
pop
inc
ret
cmp
outsl
sub
sbb
clc
js
pop
and
in
push
lock
and
mov
adc
movsb
frstor
cld
pop
into
test
adc
xlat
lcall
int3
outsl
xor
and
adc
lea
mov
mov
iret
not
ss
rclb
and
push
imul
add
fstl
add
in
loop
arpl
mov
inc
out
push
adc
mov
mull
cwtl
jecxz
inc
mov
dec
xchg
incl
dec
mov
or
mov
cwtl
push
rcrb
jae
idivl
repz
and
jbe
push
addl
cmp
sti
sbb
test
xchg
pop
xorl
push
cmp
repnz
jle
fidivrl
clc
jle
mov
aam
push
dec
lret
test
insl
ljmp
fwait
into
lcall
insl
shlb
fistpll
mov
sahf
inc
push
mov
xor
sub
test
jle
dec
sbb
jle
push
inc
jg
lahf
lret
daa
dec
mov
inc
inc
ds
ror
cmp
call
outsb
fidivl
fadds
lcall
pop
pop
cmpsb
xchg
add
push
mov
cmp
mov
dec
roll
push
in
movsb
mov
rcrl
jg
adc
jecxz
sarl
xchg
ds
mov
push
shrl
dec
sub
fwait
xchg
out
add
jae
jmp
mov
cmc
xchg
ja
ret
imul
shll
adc
push
jo
sub
lods
xor
std
stc
clc
push
push
mov
out
fs
add
sub
sbb
ljmp
jno
and
xchg
jl
lea
add
push
or
ficomps
xorb
insb
lcall
push
das
or
int3
push
push
mov
sbb
test
aam
mov
inc
and
out
fwait
int3
lds
xchg
rclb
clc
addb
sahf
mov
nop
rorl
jmp
into
leave
es
ljmp
xchg
cld
je
iret
add
xchg
cmp
test
leave
mov
jmp
aaa
xor
sbb
cmpsb
or
or
and
test
xor
push
sahf
cmp
xlat
xchg
cmc
cmp
rolb
and
pop
mov
xor
gs
nop
xchg
jmp
add
or
inc
push
pop
mov
cmp
in
fs
xchg
add
jp
cmp
jns
dec
fs
fcompl
mov
inc
setp
pop
xchg
lret
inc
lret
jae
out
ja
popa
aam
andb
sub
out
into
into
sti
push
in
cld
sbb
lock
push
jne
cmp
testb
in
push
es
fcoml
js
add
sahf
in
sub
fmul
arpl
scas
inc
in
rolb
mov
jno
rorl
testl
jle
loope
ss
cli
int3
bnd
xor
adc
imul
sub
stos
sub
jns
add
jbe
lods
xor
xchg
aaa
and
js
pop
xor
icebp
cs
xchg
and
dec
jecxz
fcomp
pusha
xchg
sub
jbe
sub
add
xchg
mov
mov
sti
cmpsl
and
cld
push
cmc
addl
adc
add
movsl
loopne
or
xor
xchg
popa
or
jmp
xchg
dec
lahf
arpl
aad
jecxz
mov
push
test
les
mov
push
adc
push
sbb
scas
pusha
jnp
jecxz
inc
sub
push
aam
mov
sbb
add
xchg
mov
pop
lahf
test
mov
pop
insb
or
test
mov
add
cmpsb
ret
adcb
push
and
test
sub
icebp
inc
popf
or
test
and
jg
xchg
lods
cs
and
xchg
xchg
addl
inc
mov
stos
repnz
cmp
or
jns
xor
mov
xor
jecxz
cmp
cltd
fwait
bound
mov
aas
sar
out
cmpsb
adc
shll
xchg
sbb
scas
xlat
ss
icebp
or
loope
into
xchg
pop
cmpsl
js
addb
nop
in
insb
iret
into
out
mov
push
outsb
je
js
lcall
ja
std
jmp
test
pop
mov
dec
push
mov
mov
cmp
das
pop
cwtl
arpl
pusha
jmp
aam
mov
mov
jp
adc
cmp
push
xor
xchg
movsl
pop
test
fs
jae
fimuls
cltd
je
mull
cmp
mov
aaa
test
cmpsb
sub
cld
and
or
icebp
dec
femms
jno
push
sub
mov
jb
adc
ret
dec
cmpsl
dec
in
xchg
subl
repz
cltd
inc
mov
rcl
and
cld
xchg
inc
ljmp
sbb
adc
push
sub
cmp
lods
xchg
inc
bound
adc
leave
push
mov
mov
fimuls
cld
stos
sbb
mov
lea
in
movsb
enter
outsb
bound
imul
xor
cld
repnz
mov
inc
or
push
dec
or
into
sbb
clc
adc
lret
daa
data16
lahf
adcb
pop
add
nop
lock
aam
jnp
cmp
sbbb
je
cmp
pop
in
fwait
dec
pusha
cmp
xor
icebp
xor
xchg
xchg
jae
ljmp
std
sub
xchg
and
mov
sbb
jne
cltd
rcll
push
add
xor
negl
mov
jo
sub
xchg
in
je
das
ss
sub
xchg
mov
scas
adc
dec
vpcomq
imul
pop
push
aam
jns
add
in
lahf
or
int3
jne
jl
pop
xor
sete
iret
pop
xchg
insb
mov
mov
inc
sbb
pop
sbb
pop
mov
dec
outsb
imul
xor
movsl
push
fnstsw
addr16
gs
lock
mov
inc
pusha
and
inc
mov
add
jmp
jmp
xchg
in
aam
test
aam
fmull
add
test
rcrl
cwtl
repnz
cs
cmp
cli
addr16
adc
lock
and
adc
es
cld
adc
sub
pop
sbb
mov
dec
int3
imul
or
lret
dec
xchg
fdiv
add
push
pop
in
ja
mov
and
leave
test
or
test
ret
mov
stc
repz
add
iret
xorl
dec
in
shl
sub
rep
sbb
or
adc
lcall
cltd
lahf
mov
adc
cmp
lahf
imul
bound
orb
and
xchg
test
jge
jle
xor
aam
jl
sub
dec
or
push
mov
fldt
fwait
scas
dec
jne
test
out
and
fisubrs
mov
mov
in
adc
pop
sub
inc
pop
or
leave
xor
mov
popf
xor
repnz
testb
negl
inc
jle
push
repnz
cmp
popa
leave
jo
dec
in
fiaddl
mov
lock
cld
mov
in
sub
mov
es
jle
push
fsubs
or
dec
pop
scas
push
xlat
xchg
adc
jnp
addr16
imull
add
mov
test
mov
xlat
int3
je
sbb
and
lret
fisubrl
mov
sahf
sub
lret
filds
dec
xchg
stos
adc
lcall
jbe
loop
jle
ljmp
mov
fisttpll
cmp
push
fisttps
cmp
dec
and
mov
rcr
pop
dec
mov
mov
popf
jbe
mov
shll
xor
fs
cli
pop
jb
push
pop
daa
pop
andl
cmp
mov
mov
test
fmull
push
push
push
mov
cmp
xchg
lcall
cmp
jg
shlb
aad
and
dec
cmc
rorb
pop
nop
add
adc
pushf
dec
sbb
inc
outsb
pop
out
fbld
pop
mov
fisubl
or
jb
mov
cmc
hlt
pop
ss
xchg
inc
cmp
lock
data16
movsl
mov
out
mov
aaa
movsl
dec
xchg
cmc
cmp
cmp
xor
lds
sub
fsubs
ja
clc
dec
mov
loop
mov
mov
pop
out
jge
dec
push
xor
sti
adc
and
xchg
sbb
fldt
inc
lret
push
dec
dec
scas
mov
stos
imul
add
fcoms
das
test
hlt
and
loopne
stos
std
lret
dec
shll
add
mov
bts
xchg
cmc
inc
enter
enter
iret
and
gs
sti
push
xor
jno
popa
add
push
pop
adc
dec
inc
stc
xor
test
mov
rol
subl
sti
ret
frstor
ds
out
cmp
imul
sti
in
mov
mov
ss
bound
inc
cmpsb
and
je
jb
ss
cmp
or
sbb
adcb
jmp
lahf
aam
pusha
rclb
or
or
rclb
adc
xor
adc
ljmp
xor
ret
inc
mov
pop
mov
sar
mov
or
ja
xor
out
cmp
test
cltd
shrl
push
fs
cmpb
adc
std
mov
lods
dec
and
cmp
std
mov
mov
xor
shlb
daa
push
shll
adc
movsb
xor
mov
lods
jle
jbe
pop
inc
jnp
push
mov
iret
inc
test
pop
rclb
testl
mov
or
movsb
cs
aad
iret
adcl
fsts
sbb
stos
mov
not
and
pop
ja
sbb
inc
scas
stos
in
and
scas
or
jnp
cld
inc
push
or
out
fxch
scas
cmp
test
adc
jnp
movsb
cli
inc
lock
dec
stos
sub
lds
call
xchg
fiaddl
shll
dec
xchg
cli
call
lret
stos
fstl
ljmp
sbb
add
and
push
and
lds
loop
dec
or
sbb
xor
mov
pop
jb
mov
repz
cmp
daa
cmc
aas
mov
int3
daa
sbb
fdivrp
sbb
and
out
lds
xor
negl
scas
xchg
mov
jo
xor
orl
addr16
loope
out
iret
sub
mov
dec
ret
sbb
jo
push
fs
sub
push
cmpsb
dec
cmpsb
enter
mov
adc
xor
mov
ret
scas
xchg
subb
in
push
jle
and
lods
loop
mov
popa
xchg
jmp
aas
mov
pop
sub
pop
js
and
jle
mov
jns
or
mov
jge
leave
cmpsb
adc
push
pop
push
inc
stos
aad
dec
sub
adc
or
jmp
xor
sbb
adc
jo
sub
dec
movsb
into
push
lods
aaa
test
int
xchg
in
stc
test
cmp
or
das
arpl
inc
gs
sbb
mov
add
mov
add
daa
sub
push
mov
inc
jb
mov
addr16
test
mov
loopne
jecxz
cmp
out
inc
sbb
lret
push
out
adc
dec
fucomp
or
in
mov
in
adc
mov
addb
inc
movsl
or
pusha
bnd
xor
addr16
aas
mov
inc
jo
ret
out
jns
adc
inc
sub
rcrb
jge
xchg
js
push
pop
sub
daa
pop
add
push
lcall
aad
into
out
movsb
idivl
in
mov
incl
xchg
pop
xor
cs
loope
push
sti
lods
add
dec
test
mov
clc
or
xor
mov
xchg
adc
cs
fcoml
loop
and
ficompl
ret
sub
xor
cmp
ljmp
stc
dec
inc
imul
popa
outsl
lock
mov
and
stos
movsl
lods
add
adcb
push
and
mov
pushl
dec
jl
mov
imul
xchg
movsl
push
sarl
fsubrs
mov
or
push
sub
pop
jb
mov
ds
nop
jne
pushf
jge
addr16
dec
mov
pop
scas
call
fcomps
out
jecxz
add
mov
nop
xor
dec
mov
sti
pushf
push
icebp
xor
in
data16
adc
aad
sarl
stc
jo
js
mov
pop
in
fs
mov
or
add
movsl
adc
stos
sbb
dec
stos
and
and
mulb
aam
enter
mov
stc
cmpsb
inc
dec
into
daa
and
dec
dec
ret
addr16
push
das
sub
out
andl
xor
repnz
test
stos
dec
repnz
cwtl
sub
sbb
or
faddl
cmp
insb
ss
xor
aas
and
and
out
in
aam
out
movsl
in
push
push
in
mov
mov
cmp
cmp
mov
out
orb
adc
or
lock
mov
mov
sbb
leave
jae
push
jo
push
divb
fsubl
dec
outsb
inc
or
add
fdivrs
shl
lcall
xor
dec
aam
aam
ror
dec
in
pop
gs
jb
push
sub
sub
psraw
scas
insl
gs
xor
push
mov
imull
push
fldl
cmc
jp
sub
cmpsl
push
hlt
add
push
mov
jge
mov
and
jg
push
test
mov
mov
jl
iret
mov
loop
cmp
gs
inc
sub
testb
xchg
shl
lods
xor
addr16
shr
or
jge
ds
mov
orb
rcll
xor
mov
data16
pop
in
decb
mov
shrl
mov
inc
mov
sti
jmp
mov
cmpsl
inc
adc
mov
out
test
leave
fsubrs
mov
inc
fs
rclb
push
push
leave
mov
subl
ficoms
out
in
in
xor
out
fmuls
gs
sub
fdivr
leave
cli
loopne
inc
push
shll
cmpsl
xchg
add
ret
and
fcoml
inc
fnsave
pop
dec
mov
jl
pop
cmpsb
lahf
mov
negb
xchg
sbbl
shrd
cwtl
sarb
sub
or
rclb
sti
ss
es
cld
lods
pop
jmp
inc
mov
loop
mov
dec
mov
imulb
sbb
into
xor
sbb
sbb
mov
fisubs
out
rorb
sub
mov
mov
orl
xor
mov
mov
daa
repz
or
out
jne
cwtl
lods
push
add
dec
jmp
lcall
sbb
out
stc
cli
outsl
cmpsb
jnp
cs
insl
pop
sbb
pop
mov
testl
leave
arpl
mov
iret
mov
mov
pop
cli
jno
add
lock
sub
insl
add
xchg
lcall
shr
mov
imul
xchg
shrl
les
das
fcomps
je
loope
out
or
sbb
dec
arpl
int
mov
in
popa
jne
addr16
jno
mov
or
movsb
fbld
addb
sbb
neg
or
mov
pop
aas
and
ja
push
lock
xor
inc
push
fxtract
dec
clc
mov
xor
aad
cli
cli
jl
rep
mov
stos
sbb
bound
jb
jmp
add
in
jle
xchg
insb
xor
movsl
pusha
mov
orl
sbb
mov
pop
adc
xorb
and
sbb
dec
sbb
cmp
cmp
cmpsl
orb
pmullw
inc
mov
imul
ss
jnp
cmp
or
test
mov
pusha
sub
cmpsl
push
mov
stos
mov
nop
sub
cmpsl
lcall
enter
adc
ljmp
into
jae
and
inc
xchg
add
add
hlt
and
pusha
test
mov
xchg
lods
push
scas
xor
pop
or
hlt
inc
mov
lret
aam
jno
add
xchg
testb
mov
xorb
das
addl
add
mov
pop
shlb
adc
xor
out
add
insb
mov
dec
xchg
imul
pop
sub
push
dec
add
mov
and
test
stc
jb
je
popa
cmp
addr16
sahf
hlt
inc
adc
ret
pushf
push
sbb
aas
or
adc
cwtl
orl
jp
ret
lock
mov
mov
add
adc
loopne
js
out
popf
or
mov
movsl
outsl
outsl
mov
lods
adcl
cmp
add
dec
add
aam
mov
dec
push
lret
push
sub
scas
cmp
mov
mov
cmp
pop
mov
loopne
jno
push
sub
xlat
cmc
mov
js
push
cmp
decl
push
imul
dec
cmp
xchg
dec
mov
enter
lea
repnz
jle
loopne
push
xchg
fsts
mov
sarl
aaa
or
test
enter
adc
pop
orb
mov
lret
ficoml
sub
ss
sbb
stc
test
push
cltd
sahf
jle
jnp
cmpsl
shrb
rorl
orb
js
push
das
sub
dec
mov
jge
dec
in
ret
test
popf
ud0
jp
add
iret
sbb
push
outsl
or
jae
sbb
daa
std
aam
fdivr
xlat
imul
cwtl
sbb
mov
in
jmp
idiv
mov
mov
mov
or
cmpsl
mov
incl
pop
stos
pop
rcrb
push
sub
lods
js
fimull
push
inc
xlat
and
cmp
stos
xchg
jo
andb
xor
push
xchg
shrl
cli
mov
call
fcomip
xchg
mov
cmp
or
cmp
sbb
ljmp
jbe
addr16
sarl
bound
rcr
cmp
mov
push
and
mov
jno
mov
mov
mov
je
stc
test
push
aam
aaa
incb
pop
loopne
pop
push
in
xor
dec
jmp
ror
jne
aam
mov
insl
popa
xchg
fisttps
insb
or
jo
push
shlb
add
xchg
arpl
push
aad
idiv
inc
fs
pop
addr16
sub
sbb
negl
push
add
mov
jbe
cltd
addb
inc
lock
xor
pop
adc
or
icebp
outsb
in
icebp
setg
adc
loopne
lds
fstp
cmp
adc
cmpsb
aas
insb
jp
fldt
xor
pop
and
shl
dec
mov
test
adc
xchg
cmpsl
sbb
in
jo
call
push
imull
mov
xor
push
push
stos
aaa
inc
imul
imul
out
or
das
int3
cmp
stos
pop
mov
pop
mov
push
out
inc
jecxz
imul
jge
cmp
lret
ret
sbb
stc
in
adc
sub
jg
lods
pop
or
out
mov
lock
addr16
cli
lret
lahf
or
jnp
jg
xchg
mov
into
je
pusha
sub
xchg
fstps
push
or
ret
out
aad
mov
fs
push
dec
insl
aam
call
les
sub
inc
mov
adc
mov
and
adc
rolb
sbb
insl
ljmp
jg
inc
cmpsl
add
lods
lcall
mov
in
movsl
imul
repz
rcll
mov
sbb
xchg
xchg
xchg
push
movsb
in
in
jno
mov
push
outsb
inc
insb
insb
jg
inc
inc
cli
je
mov
push
insl
movsb
scas
adc
add
ja
xor
adc
cwtl
rcrb
mov
add
xor
push
push
iret
cmp
jl
xor
outsl
lahf
into
lods
jge
inc
cmp
and
mov
loopne
into
ds
push
popa
in
lret
fmul
scas
insb
cmp
iret
adc
or
dec
bnd
mov
std
dec
sbb
cmpsl
cmpsb
lcall
lods
bound
insl
sbb
dec
jle
pusha
sar
jp
xor
dec
adc
sbbl
xchg
pop
inc
mov
insl
rcl
dec
adc
movsb
ljmp
and
jnp
movsl
test
scas
cld
stos
add
faddl
outsb
les
mov
pop
and
popl
dec
loope
js
arpl
inc
repnz
dec
mov
and
aas
fld
lods
mov
push
sbbl
pusha
pop
ret
add
aad
mov
jmp
or
dec
pop
fsubrl
in
loope
add
das
scas
in
mov
sahf
sahf
inc
scas
push
mov
jo
and
outsb
lods
or
rsm
jge
pop
xor
jbe
mov
cltd
in
shlb
loopne
xor
add
imul
adcb
ljmp
ja
and
dec
lret
mov
ret
test
enter
mov
loopne
lea
cmp
push
adc
inc
cwtl
cmp
mov
mov
cmp
scas
dec
add
ja
insb
xchg
sahf
lods
pop
push
pop
or
rolb
stos
fcoml
mov
or
mov
add
js
inc
outsl
outsl
push
mov
and
sbb
fadds
pop
push
mov
or
xchg
adc
pop
jmp
es
cmc
and
or
xchg
or
es
jae
arpl
movsl
pop
out
orb
sbb
pop
inc
mov
movsb
test
out
xor
jns
add
ror
or
push
jmp
mov
shl
adc
add
repz
inc
ret
aas
aas
orl
inc
inc
sbb
cli
sbb
pop
stos
inc
mov
cltd
dec
push
mov
sbb
daa
mov
in
test
icebp
push
in
sbb
cmpsl
push
mov
inc
jb
cmp
mov
arpl
mov
xchg
mov
jns
fisubrl
mov
and
mov
cs
fistpll
shr
mov
addb
cmp
arpl
jg
pop
jno
fdivp
jbe
ss
std
ret
jmp
fs
jge
sub
jae
xchg
push
les
dec
inc
adc
shll
rorb
mov
push
sti
fmuls
mov
pushf
jle
mull
setg
and
bound
outsl
pop
xor
inc
cmpsw
ds
shll
pop
lea
xchg
push
jmp
sbb
xchg
xor
mov
and
mov
stos
lahf
negl
adc
fcomps
sbb
ljmp
and
cwtl
or
mov
repz
call
mov
push
jp
fsubrs
adcl
xlat
xlat
and
std
jno
arpl
jge
mov
loop
mov
mov
roll
lock
xchg
fs
add
lods
stos
faddl
adc
push
sbb
pop
iret
cmp
enter
sbb
adc
mov
add
hlt
stos
rclb
lret
fcompl
pop
loop
adc
cmp
xor
mov
ja
push
xor
push
inc
inc
jb
enter
mov
push
or
add
xor
inc
cmpsl
adc
jae
push
xchg
iret
jle
imull
in
jbe
pop
rcrb
movsb
mov
push
xchg
fldenv
mov
jecxz
xchg
mov
fdivs
mov
and
push
xchg
xor
xchg
jo
iret
scas
lods
and
jp
cmovle
je
adc
call
popa
fimull
std
orl
fisttps
mov
fsubs
ss
testl
fistps
dec
jnp
jo
pusha
aaa
js
adc
aas
jecxz
fisttpl
bound
push
pop
adc
arpl
fcomp
xchg
cmovg
sbb
std
rol
icebp
in
aaa
ja
iret
fdivl
addr16
loope
push
gs
jbe
jg
pushf
cmp
dec
inc
jecxz
dec
push
in
sbb
fisubrs
sarb
cltd
xchg
jle
xchg
mov
mov
dec
dec
mov
lock
pop
jb
pop
push
icebp
dec
movb
cmp
inc
nop
test
mov
xchg
xchg
movsl
in
sub
xchg
xor
clc
cmp
pop
int3
mov
flds
push
stos
sbb
outsl
enter
dec
jns
stos
outsb
movsl
mov
and
xchg
stc
inc
popf
inc
and
notb
scas
mov
dec
adc
popf
mov
dec
fwait
std
inc
pop
cmc
mov
addr16
fs
mov
pop
xor
pop
jge
sub
mov
push
cmp
mov
insb
dec
push
rol
cmp
out
fsubrs
cmp
lret
std
and
pop
int3
test
out
dec
or
pop
dec
les
stos
stos
fisttpl
movsb
xor
sub
insl
pop
fiadds
xor
out
push
fmul
into
lock
cmpsb
popa
cmpsl
dec
pop
jl
fsubrl
xchg
mov
cli
outsl
movsb
adc
inc
es
enter
fimull
stos
sahf
mov
in
call
jbe
inc
subl
sbb
xlat
or
pop
fldcw
push
xchg
pop
lods
stos
dec
mov
sbb
insb
push
mov
pop
daa
lcall
arpl
ja
push
test
shlb
fs
push
lea
sbb
pop
lock
lahf
stc
data16
and
xlat
push
and
test
insl
mov
cwtl
cmp
jecxz
insl
pop
fmulp
cmpsb
push
mov
pop
dec
int3
adc
sbb
inc
push
sarb
push
xor
mov
adc
push
xchg
push
dec
in
test
das
decl
sbb
fs
jmp
pop
into
stos
mov
xchg
jp
in
call
jl
iret
popf
sub
ficompl
fldt
sar
into
sbb
leave
xchg
mov
add
mov
stos
fisubs
lret
pop
imulb
lret
lret
int3
lock
and
divb
jecxz
in
pop
push
and
sub
or
das
mov
adc
ja
or
lods
sub
sarb
cltd
loopne
cltd
fs
inc
pop
cmpsb
loope
push
pop
je
mov
ror
ret
sub
mov
push
pop
inc
aaa
lock
ds
or
adc
jp
aad
ficoml
subl
mov
fmull
jecxz
add
orb
hlt
push
sbb
rcl
inc
outsb
nop
push
lahf
inc
into
push
mov
daa
mov
aad
insb
cld
add
pop
adc
mov
sbb
enter
mov
mov
fldl2t
sti
mov
sbb
stc
cwtl
pop
add
lret
sub
cs
int3
sub
jl
inc
hlt
add
loop
scas
andl
outsb
inc
pop
push
mov
sbb
inc
and
movsl
cltd
and
hlt
inc
or
pop
push
push
pop
jle
sbb
cmp
jae
in
push
push
pop
aas
cli
imul
jno
xchg
sbb
push
jnp
xchg
mov
mov
lahf
add
pop
stc
add
mov
xor
xchg
popf
addb
lods
push
pop
push
pop
add
scas
js
pop
inc
loop
xchg
dec
cmp
sahf
cld
movb
lret
xorb
sbb
jbe
xchg
icebp
cmp
mov
sbb
mov
roll
cld
mov
loope
pop
lea
lahf
out
pop
jp
or
stos
dec
add
insl
mov
add
rcl
in
stc
loop
cmp
repnz
fnsetpm(287
ds
fwait
push
lods
in
lea
ds
pop
inc
out
adc
fwait
lds
sbb
cmpsb
pop
dec
adc
jnp
add
rclb
inc
fld
dec
imul
and
xchg
rcl
add
or
movsb
pop
cmp
pop
mov
sub
xchg
aas
jbe
repnz
daa
or
sbbl
mov
sub
imul
mov
xchg
jne
sbb
xlat
aas
fldenv
push
fistl
pop
test
jnp
loope
lea
imul
mov
mov
aas
cld
xor
mov
or
pop
test
ja
jl
loope
and
jle
dec
out
rcl
mov
scas
mov
mov
shrl
add
test
pop
xor
mov
xor
mov
jae
test
xlat
call
mov
iret
cmp
ret
mov
jg
lcall
lret
push
mov
rol
sbb
in
icebp
dec
dec
adc
dec
lgs
andl
leave
adc
aaa
aas
sbb
gs
xlat
stc
inc
mov
xchg
subb
clc
ss
repz
push
popa
stos
in
lahf
loope
push
test
add
mov
aaa
pop
push
and
ljmp
imul
ljmp
loopne
jg
cmp
mov
rcr
dec
movsb
inc
or
add
sub
sbb
fcmovnbe
cmc
jae
pop
push
jne
test
cltd
mov
ret
cwtl
ret
jnp
sahf
inc
inc
scas
add
std
movsl
rclb
push
xchg
cli
arpl
ret
and
hlt
lahf
test
scas
hlt
inc
subb
loop
xchg
mov
loopne
cmp
loope
mov
cmc
popf
pop
mov
push
jmp
sbb
dec
cmp
pop
push
or
and
jne
push
xchg
jno
pushf
sahf
ss
jne
sbb
mov
lcall
jmp
jl
adc
cmc
loop
loopw
daa
ja
sbb
in
pop
add
ss
inc
mov
stc
push
sbb
into
push
mov
pop
xchg
cs
mov
or
subl
pop
lea
fdivr
pop
jns
ss
bound
xchg
int
and
es
sbb
imul
mov
push
pop
test
mov
iret
add
dec
xor
into
adc
mov
and
pop
mov
push
lret
sbb
jbe
or
pushf
push
fsubs
cli
or
fwait
in
ljmp
push
sbb
xchg
jp
mov
mov
xchg
in
add
sahf
stos
push
in
adc
cmp
jb
aam
adc
fsubrs
push
scas
and
jl
inc
mov
int
xchg
sahf
pushw
and
in
arpl
sub
movsb
xor
jo
inc
mov
mov
push
xchg
icebp
and
adc
mov
popa
roll
push
imul
test
movsb
lea
aaa
shrl
mov
repnz
fisttpl
ds
sbb
jge
pop
jp
push
cmp
cmpsb
mov
and
pop
push
pusha
ret
mov
jecxz
add
pop
adc
mov
ja
push
sbbl
pop
xchg
jnp
mov
cmp
push
lods
or
mov
sarl
mov
stos
jg
and
scas
sbb
or
xchg
push
sbb
fsub
lods
rcr
pop
iret
out
mov
addr16
cmp
xor
in
fld
sti
outsl
fldt
pop
ljmp
cli
insb
inc
sahf
jb
mov
js
push
xchg
sbb
or
gs
pop
add
inc
out
cmp
jle
adc
dec
dec
xlat
loopne
sub
in
adc
fimuls
outsl
push
pop
adc
adc
cmpsl
sbb
clc
aaa
xor
adc
pop
pop
bound
mov
xor
loope
fdivl
add
push
pop
jo
xchg
mov
add
push
and
mov
xor
out
push
mov
jge
in
ret
pop
mov
cmpsb
sub
sbb
daa
inc
jg
pop
xchg
repnz
cmpsl
jge
mov
dec
mov
and
es
adc
mov
pusha
cmp
xchg
sub
fcomps
xor
inc
mov
aas
mov
fcom
jle
adc
xchg
push
pop
cmp
adc
dec
sbb
pop
and
or
cld
lods
vhsubpd
mov
mov
mov
je
pop
ss
outsl
pop
cli
push
or
add
std
ds
sbb
nop
fnstenv
inc
test
cmpsl
arpl
rcrb
push
mov
mov
fimuls
leave
loopne
in
adc
xor
adc
mov
push
xchg
or
lods
cmp
pusha
sub
lods
in
push
inc
mov
lock
push
fsts
dec
dec
scas
ret
rorl
ja
outsl
jmp
out
imul
in
je
fisubs
cmpsb
pop
fmulp
xchg
add
bound
lret
loopne
dec
pop
mov
push
mov
test
dec
pop
jmp
push
popf
lods
insb
aaa
cmpsb
out
dec
pop
mov
mov
fistpll
ss
loope
cmpsb
fwait
jmp
add
jne
je
push
mov
jmp
dec
out
ljmp
mov
lods
icebp
lds
dec
pop
sbb
iret
xchg
int
notb
and
aas
in
jle
into
imul
dec
arpl
outsb
mov
repnz
rcll
nop
outsb
push
es
dec
iret
shlb
jbe
cli
pop
sbb
cld
int
ljmp
jmp
stos
add
dec
in
pop
pop
lds
mov
xor
cmp
out
sar
sbb
aam
outsl
sbb
insl
es
pushf
jnp
inc
int3
sbb
pusha
pop
add
lcall
fnstenv
sahf
add
or
xor
stos
jecxz
stos
add
xor
rorb
jmp
add
cli
mov
inc
shrl
in
decl
jle
add
enter
popl
push
pop
mov
push
add
xor
pop
loop
xlat
ss
adc
push
inc
and
dec
sub
fbld
imul
or
imul
scas
pop
push
lahf
adc
lock
sbb
xor
mov
dec
push
dec
cmp
popf
movsl
in
adcb
shll
dec
sti
push
push
xchg
xorl
fstpl
ret
cmc
or
xchg
orb
movb
lods
shl
fwait
jb
into
stos
cs
aas
add
fcmovnb
and
inc
sarl
stos
jbe
leave
imul
lea
cmp
pop
sbb
and
rcrb
ss
or
in
mov
inc
xchg
sub
pop
fldcw
lods
and
js
xchg
out
test
jmp
call
movsl
cmp
sub
dec
sbb
push
inc
push
mov
or
into
mov
adc
les
adc
inc
dec
mov
add
rolb
jl
xor
add
mov
pushf
dec
xorb
xchg
push
mov
xchg
aaa
adc
sbb
cmp
out
mul
xchg
loope
sbbb
push
aas
jle
cli
mov
cwtl
xchg
aam
xchg
ds
fidivs
cmc
jecxz
push
mov
fsubrl
fcompl
idivl
pop
jmp
cmp
test
outsl
or
inc
fsubrl
lds
and
in
stos
pop
and
stc
aaa
lret
mov
sti
pop
loope
clc
rep
inc
mov
rorl
sub
sarb
ds
outsl
mov
push
mov
in
cli
mov
pop
fistpll
xchg
sub
push
sbb
cmp
ret
xchg
mov
xchg
and
sbb
int3
adc
shll
xor
lods
mov
andnps
fsts
inc
inc
fwait
outsl
jmp
mov
sbb
add
jle
push
rcr
mov
xchg
outsb
insb
mov
pop
push
ficoms
shrb
mov
shll
jno
aam
xor
lods
sub
insl
adc
cmp
xor
sub
pop
test
jg
or
mov
add
dec
mov
lahf
mov
inc
inc
and
mov
and
dec
data16
repnz
jno
int
gs
ret
push
out
jge
pop
lea
data16
xor
and
xchg
jnp
clc
int3
loop
data16
inc
pop
and
sbb
mov
mov
push
xchg
sarb
addr16
jp
inc
stc
cmp
add
xchg
fcmovnbe
bound
xchg
push
adc
lea
rcrb
test
add
lods
mov
clc
sahf
or
push
fisubrs
into
mov
mov
pusha
xor
shrb
xchg
push
lods
xor
leave
mov
test
lret
pop
mov
xchg
cld
or
mov
push
or
cwtl
dec
add
scas
xor
adc
lea
stc
pop
aas
nop
cmp
int
test
mov
push
or
fdivs
jg
jbe
or
pusha
scas
add
imul
and
jb
cmpsl
cmp
adc
and
fldl
adc
dec
add
pop
xor
mov
cmp
mov
out
call
stos
mov
add
mov
push
loop
mov
es
mov
mov
jmp
mov
dec
sbbl
pop
mov
inc
aad
imul
lock
cs
loop
repz
lods
rcll
cmp
repz
mov
in
ds
inc
in
xor
mov
push
fimull
lret
cmp
push
push
pop
addr16
std
cmpsb
mov
cld
leave
add
adc
push
cli
jecxz
lea
imul
and
jmp
repnz
add
mov
ficompl
leave
dec
mov
loopne
add
or
adc
jno
mov
mov
mov
jp
push
push
mov
inc
popf
js
lret
ss
or
ret
mov
lods
mov
adc
lret
test
addr16
add
loope
pop
push
jno
sbb
hlt
int
outsl
mov
or
cwtl
sbb
or
dec
mov
out
xor
incb
iret
add
lret
xchg
ja
lods
dec
mov
loope
pop
mov
mov
cmpsb
mov
addl
bound
pop
push
ds
jbe
adc
arpl
or
inc
lods
cmp
roll
repz
sub
popa
cld
pop
bound
dec
loop
insl
xor
cmp
mov
out
inc
aam
cmp
mov
mov
lcall
imul
into
es
stos
and
jecxz
pop
inc
fwait
xchg
jle
stos
cmp
and
jb
mov
mov
push
or
add
arpl
push
pusha
inc
push
fwait
insb
cmp
js
aaa
daa
mov
fbld
dec
and
sub
or
fbstp
xor
popa
dec
push
std
shrl
hlt
cmc
sbb
jecxz
lahf
mov
das
pushf
and
cmpsl
xchg
or
xlat
inc
lcall
mov
sbb
adc
cld
stos
add
data16
out
loope
jp
push
mov
xchg
sub
fsubrp
cmp
sbb
clc
cld
pop
loopne
adc
cmc
stos
adcb
xchg
test
add
rcrb
cmpsb
insb
jecxz
mov
jl
push
shrl
pusha
out
out
jge
in
repz
aam
cld
mov
jns
push
sbb
and
pop
and
in
sub
loop
dec
mov
inc
and
jno
out
in
dec
lods
cmp
fsubp
js
or
mov
inc
jge
stos
outsb
xor
mov
dec
lret
mov
enter
cmc
mov
cld
adc
sbb
das
adc
add
mov
in
inc
jne
scas
xchg
shr
cmp
sbb
fscale
mov
xchg
mov
mov
cld
call
je
das
aaa
jmp
pop
repz
add
mov
push
js
mov
fcmovne
sbb
mov
jl
inc
push
imulb
shll
and
sti
cmpb
pop
ja
data16
inc
lret
pusha
add
xor
adc
mov
loope
mov
mov
mov
fimull
lcall
fistps
sbbl
jns
lods
in
or
adc
adc
outsb
mov
mov
and
jl
clc
xor
and
popf
sub
or
rcrl
xor
pusha
sbb
jp
leave
dec
jbe
jae
aas
loope
adc
fistps
cli
inc
lret
sbb
dec
shll
scas
orl
jg
mov
fdivl
jle
mov
push
mov
lods
jbe
imul
and
mov
lock
outsb
sub
inc
adc
in
incb
pop
cmpsl
xchg
shlb
lret
shrl
test
jno
add
pop
push
xor
mov
pop
pushf
stos
test
pop
mov
imul
fdiv
sub
shl
aas
imul
loopne
popa
jo
call
ljmp
decl
fwait
loopne
ja
sbb
sub
dec
dec
stos
ficompl
pop
nop
jp
lret
inc
fs
mov
fstpt
push
pop
cmpsb
xchg
push
jmp
pop
or
bound
xor
mov
testl
mov
dec
call
cwtl
cltd
mov
ds
jg
mov
pusha
popa
add
je
loope
repnz
cmp
daa
xor
pusha
push
out
adc
daa
adc
in
xchg
scas
jb
rol
fisubs
xor
cltd
pop
pushf
nop
or
xchg
shll
sub
sub
cmp
mov
xchg
pop
or
xchg
jbe
mov
mov
negb
sarb
dec
ret
inc
mov
outsl
cmp
dec
clc
addr16
mov
dec
cltd
pop
lods
sbb
jmp
pop
mov
aad
in
enter
insl
or
lods
adc
or
scas
mov
cld
adc
sub
cmp
lret
mov
dec
insl
stos
iret
sbb
ss
pop
dec
aaa
sbbl
insb
in
insb
push
lea
jmp
push
lods
jne
gs
or
or
dec
movsb
pop
and
sbb
loop
cmp
roll
or
jle
mov
xor
cmpsb
repz
dec
sub
les
adc
divl
imul
mov
addr16
mov
jp
push
scas
push
fsubr
ja
cld
sub
add
mov
shll
inc
mov
push
cmc
pop
repz
cli
sbb
mov
loope
xchg
call
enter
sbb
fwait
loope
icebp
das
xchg
dec
xchg
jmp
movsb
cwtl
in
inc
loopne
mov
adc
mov
cmp
mov
fmull
int
mov
mov
jg
mov
xor
mov
pusha
in
setno
xchg
cli
pop
inc
sbb
clc
jp
sbb
sahf
stos
ffreep
pop
mov
insl
cmp
mov
mov
fsubp
xchg
lock
pushf
insb
adc
cmpsl
scas
lret
add
mov
mov
xor
movl
pop
popf
jg
incl
mov
int3
adc
cmp
fsubrl
repnz
mov
sub
push
hlt
cmpsb
xor
dec
inc
xor
jge
inc
iret
sti
mov
sbb
sbb
andb
cmp
outsl
lock
adc
add
xlat
push
in
inc
int
push
add
push
cmpsl
jnp
xchg
jecxz
ds
in
mov
fdivl
xor
dec
and
es
arpl
lret
aad
xchg
xchg
ds
fwait
mov
in
add
into
sbb
push
fisubl
xor
fwait
and
loope
mov
sbb
jl
xor
vmovaps
adcb
fsubl
mov
daa
xchg
xchg
push
sbb
pop
loopew
add
dec
and
dec
and
sbb
cs
fiaddl
pop
sbb
fs
adcl
aam
xchg
jp
iret
addb
xor
xchg
je
outsl
icebp
cmp
push
js
out
dec
mov
lods
mov
lret
adc
rcrb
leave
test
sub
nop
cmc
sbb
fisubl
jns
and
mov
or
insl
orb
test
jnp
pop
leave
cmp
fbstp
std
ret
push
adc
pop
rolb
sub
ljmp
sbb
mov
fwait
imul
push
ljmp
pop
clc
push
cli
movl
repnz
xchg
sahf
mov
cmpsb
ss
push
mov
nop
cmp
mov
pop
add
or
sahf
pop
fs
in
mov
mov
inc
test
sub
xorb
imul
cld
mov
xchg
enter
adc
loopne
ficompl
mov
stos
jns
sbb
sbb
push
repz
sub
lods
push
lods
mov
jmp
jae
cli
xor
lahf
outsl
xor
xor
outsl
aas
or
jae
fldl
out
lock
incb
xchg
imul
adc
cmp
adc
ss
in
lock
sub
jo
std
out
xchg
aas
or
sbb
int
in
pop
int3
nop
push
subl
and
cltd
ss
mov
popf
shll
inc
outsl
add
cmp
iret
cld
push
jg
dec
xor
adc
jno
ss
inc
jae
insl
fscale
xor
inc
ds
mov
cmp
sub
mov
cmp
cmp
ficoms
dec
add
jno
imul
insb
lock
nop
jmp
repz
test
xchg
flds
push
push
fs
push
pop
pop
aad
scas
dec
and
pop
movsl
or
fdivr
add
jge
es
mov
and
mov
cld
pop
test
scas
insb
aas
stos
ss
sub
sbb
mov
push
pusha
fstpt
pop
scas
push
pusha
cmp
adc
out
rolb
jae
in
inc
or
ds
mov
ret
stos
arpl
ja
inc
ljmp
inc
pop
jns
xchg
xorb
adc
xor
sbb
loope
xor
pusha
js
sbb
repz
jo
ret
mov
fs
imul
test
add
test
or
cmp
cmp
cltd
mov
jns
das
imul
sub
xchg
pop
adc
xor
test
jecxz
mov
sbb
int3
or
xchg
xorl
sbb
sti
sbb
pop
fs
cld
shlb
inc
push
xchg
xor
outsl
into
imul
adc
ja
push
dec
movl
movsl
cmp
andl
mov
repz
decw
pop
rcrb
pop
mov
roll
dec
or
xor
loopne
xor
daa
jnp
and
shll
fstp
pushf
sub
fdiv
push
stc
xlat
loope
lods
fwait
outsl
pop
push
xchg
mov
push
stos
mov
pop
xchg
push
pop
leave
cmc
loope
je
xor
push
lea
pop
push
dec
fidivrs
mov
movsb
cmp
push
inc
or
fistpl
mov
mov
insb
fistpl
xchg
shl
enter
push
sub
sbb
sub
imul
arpl
inc
andb
mov
pop
mov
ret
ret
orl
lahf
std
sub
mov
or
leave
int
arpl
bound
scas
lcall
aaa
dec
sbb
mov
push
push
xchg
xor
shlb
mov
xchg
es
push
cmp
inc
push
shl
mov
mov
into
hlt
jnp
jge
and
sub
aad
lcall
and
or
cmp
push
fidivrl
lock
mov
clc
cli
pop
xchg
rolb
xchg
fwait
imulb
inc
mov
stos
ror
sbb
aam
mov
iret
mov
cld
in
das
jg
addr16
lahf
ds
outsb
mov
dec
bound
jmp
mov
and
leave
mov
sub
test
insb
leave
xor
dec
addr16
lret
faddp
ffreep
stos
sti
jmp
fstl
sub
fcmovne
je
xchg
xchg
ret
scas
cli
addr16
lcall
push
iret
add
enter
daa
dec
mov
mov
add
xor
iret
jne
xor
xchg
lcall
dec
push
loopne
insb
cmp
pop
jmp
pop
mov
sahf
into
std
in
arpl
sub
push
push
sti
jo
aaa
imul
popa
ret
xchg
iret
sahf
or
inc
mov
cld
mov
mov
xchg
jns
adc
inc
clc
fdiv
pop
outsl
jns
aaa
inc
outsl
aaa
scas
mov
mov
and
scas
pop
mov
std
push
cmp
iret
loope
xchg
lods
iret
insl
ss
inc
insb
mov
lds
inc
pop
and
insl
in
in
notl
jp,pt
lret
mov
lret
movsb
hlt
add
mov
enter
pop
lahf
arpl
add
dec
scas
adc
sahf
jge
adc
enter
adc
xchg
dec
xor
icebp
inc
jne
stc
xchg
mov
push
jae
push
ljmp
jl
xchg
mov
mov
out
mov
or
mov
jno
aaa
and
inc
mov
imul
fcoml
jb
mov
push
add
pop
icebp
fwait
and
jle
inc
arpl
sub
mov
cs
pushf
sbb
inc
pop
mov
aas
imul
in
inc
xor
movsb
push
jnp
imul
ret
add
jp
loop
lock
sub
paddusb
lods
inc
pop
xor
pop
pushf
xchg
mov
adc
adc
inc
pop
je
sub
out
xlat
inc
push
sub
cmpsb
cmpb
adc
cwtl
iret
mov
adc
mov
lods
icebp
dec
push
jae
mov
pop
aaa
jne
cmp
int
pop
mov
sbb
or
movsl
dec
in
push
mov
fldenv
pop
fsubs
clc
pushf
adc
mov
mov
push
ret
sahf
stos
mov
sub
loopne
dec
mov
cmpsl
mov
outsl
ret
addr16
lcall
cld
scas
dec
or
ljmp
ds
cmp
pop
fimuls
dec
jae
mov
adc
or
lahf
jb
fwait
test
push
leave
dec
icebp
fldenv
iret
mov
loop
adc
inc
shlb
cmp
test
or
orb
enter
sahf
push
gs
std
fildl
sbb
jp
in
sbb
loopne
cld
inc
xchg
stos
push
fdivrs
aaa
test
sub
mov
sarb
cmp
push
mov
xchg
jns
sahf
or
fldt
pop
adc
test
xchg
mov
push
jecxz
jmp
or
xchg
ja
mov
add
aaa
push
cmp
jle
jb
mov
xchg
pop
sar
repz
xchg
roll
pushl
leave
add
lds
or
inc
loop
fnstsw
lcall
pop
push
sbb
repz
mov
ss
jo
sub
cmp
leave
test
fs
call
shrl
test
test
adc
mov
inc
aam
aas
xchg
pop
pop
cmp
push
mov
sub
xchg
xchg
pop
repz
dec
lret
movsl
push
in
psraw
mov
hlt
rolb
mov
jae
bound
cld
ljmp
addb
mov
cmp
lock
mov
inc
inc
imul
xor
fimull
or
aam
jns
out
xor
dec
push
rorb
out
and
jle
cmp
mov
aaa
sub
add
sub
sbb
pushf
insl
hlt
cmp
fwait
loopne
pop
lret
gs
xchg
js
imul
sbb
xlat
jl
aam
nopl
dec
add
dec
mov
loope
imul
jno
mov
push
popa
jge
add
loopne
int3
jle
das
pusha
lods
scas
pop
movsl
push
mov
dec
test
jno
or
decl
lods
inc
or
test
mov
sub
mov
sar
dec
js
jo
push
add
cmp
out
clc
hlt
pop
inc
lret
or
test
xor
jge
call
lahf
je
sbbl
ja
and
rcl
or
cmp
mov
mov
add
mov
pop
sub
push
add
push
arpl
sbb
cmc
stos
push
push
jbe
sbb
sti
testl
sbb
imul
test
lahf
mov
fbld
frstor
fnstsw
cld
xchg
das
int3
jne
jle
js
movsl
mov
lods
repnz
jmp
inc
inc
push
lock
movsl
and
negb
into
leave
xchg
push
js
xchg
push
mul
xor
xor
adc
fsubrs
scas
repz
mov
or
rcrb
pusha
rcrl
or
pop
test
mov
bound
mov
movntps
xchg
pop
inc
jo
or
push
cmp
stc
mov
pop
jbe
and
push
enterw
daa
icebp
popf
cli
mov
outsb
mov
sub
in
fcmovnb
dec
lea
sbb
mov
inc
adc
cmpsl
add
mov
mov
cmc
sbb
jmp
lcall
es
mov
jmp
leave
fs
jo
adc
aaa
mov
ret
movsb
int3
xchg
mov
popf
rdtsc
adc
pusha
addl
repz
loope
enter
jg
adc
xor
sbb
and
pop
push
fdivrl
and
imulb
pause
and
nop
xor
lds
sar
inc
and
fidivrl
mov
inc
int
dec
xchg
in
xchg
sti
es
cltd
jno
mov
jno
repnz
mov
sbb
xchg
pop
mov
or
add
mov
lds
mov
imul
imul
xchg
xchg
dec
in
sbb
ja
leave
mov
cmpsl
jecxz
andb
mov
rcrl
add
jecxz
mov
fwait
add
xlat
dec
mov
pop
and
int
fsts
cmp
scas
faddl
adc
nop
push
ljmp
mov
in
outsb
sub
inc
iret
inc
sub
das
add
jbe
xor
ror
jg
loope
jge
pop
idivl
test
stos
inc
mov
shll
xchg
andl
fnstcw
mov
push
push
adc
dec
das
call
lret
cmc
xor
mov
dec
bound
adc
dec
in
add
cmp
aam
sub
cmpsl
or
sbb
aas
ret
inc
mov
pop
stos
xchg
and
mov
and
xchg
test
mov
add
add
sub
mov
sti
pop
hlt
jno
pop
test
enter
rcrb
mov
xor
push
push
fs
popf
stc
ret
clc
call
jp
lahf
jns
es
outsb
leave
or
fimuls
rorl
dec
add
sub
lods
mov
sub
popl
fidivrs
andl
arpl
pop
cmpsb
inc
sub
or
imul
fnstenv
icebp
iret
test
mov
iret
addl
pop
push
in
insl
int
fdivp
fists
aad
xchg
stos
stos
jb
ja
inc
mov
movl
mov
sarl
movsb
pushf
imul
push
adc
mov
jne
and
cmc
xor
pop
jecxz
leave
push
insl
or
and
and
fidivrl
test
mov
mov
mulb
lock
out
cmc
fs
pop
mov
pop
mov
cli
inc
jg
or
adc
fnstcw
sub
push
ss
inc
or
aas
xchg
add
leave
les
cmp
sub
loop
pushf
push
pop
test
or
and
inc
sbb
xchg
lds
sbb
add
inc
sbb
scas
in
xorb
pop
add
jne
enter
mov
and
xor
sub
cs
pushf
push
scas
push
loop
outsb
cmp
pushf
inc
imul
mov
sbb
rcll
mov
sbbb
mov
bsr
sbb
fnstcw
loopne
push
shlb
push
xchg
sub
inc
push
out
arpl
shrl
xor
jno
mov
add
leave
sbbb
rorl
nop
push
pop
sub
ja
jb
sti
jb
popf
pusha
sbb
or
fwait
inc
pop
lods
mov
orl
ja
add
out
cwtl
sub
sbb
mov
ja
pusha
lods
push
cmp
jne
inc
jg
push
sahf
out
mov
fwait
sub
jg
loop
jbe
cmp
shrb
push
adc
push
dec
jb
push
stos
xchg
xchg
push
xchg
lods
icebp
loop
push
inc
bound
jmp
cmp
movsl
adc
aas
out
scas
lods
leave
jmp
imul
in
mov
mov
popf
ds
push
ljmp
mov
int
or
sbb
and
dec
xor
pop
dec
lahf
and
jns
test
push
das
mov
mov
mov
dec
mov
icebp
push
cmp
mov
insb
add
or
cld
jae
fldcw
sub
pop
jo
in
out
sub
mov
aas
xlat
mov
pop
or
mov
jmp
frstor
stos
mov
lret
mov
outsl
mov
loope
aas
cli
cmp
insb
stos
int3
xchg
imul
jl
xorl
jge
clc
mov
or
das
xor
mov
fistpll
cmpsb
or
bound
dec
test
rcr
test
inc
mov
pop
push
mov
mov
xor
sar
jg
push
cmp
jmp
dec
shll
movsl
jecxz
sti
mov
and
aaa
adcb
mov
mov
sbb
pop
lds
stos
xor
out
sub
or
xchg
xor
xor
xchg
mov
mov
cs
and
or
mov
inc
inc
das
push
inc
pop
push
test
iret
adc
lar
fisttpll
or
in
in
xor
sub
pop
dec
pop
dec
jb
sahf
sar
cmp
fistps
mov
fldenv
jg
aad
nopl
fdivr
cmp
xor
scas
jmp
add
sub
mov
in
mov
add
cmpsb
test
inc
mov
sarb
or
test
in
pop
loop
jo
inc
call
ficompl
inc
push
mov
inc
xchg
fbld
shr
pop
in
add
and
inc
ret
sbb
mov
aam
insb
dec
iret
inc
aas
rcll
and
int3
jo
sbb
xorl
jae
mov
mov
jns
xor
xchg
in
aad
out
xchg
shll
mov
insb
add
clc
addr16
xchg
es
dec
and
sbb
dec
jnp
int
jbe
test
cmp
test
cld
dec
mov
fdiv
movsl
xor
sbb
fs
lahf
cmp
jmp
rclb
or
push
mov
fcomps
and
sarl
xor
aad
addr16
idivl
sub
xchg
sbb
pop
rclb
xchg
or
in
pop
cmp
stos
jae
outsb
pop
fisubrs
ja
jg
lret
test
adc
ret
inc
cmp
shll
ret
jo
cmp
sbb
mov
sub
inc
cmp
jo
inc
lods
dec
and
nop
cmp
xchg
pop
loope
jp
nop
xchg
pushf
inc
in
mov
or
pushf
ret
sbb
mov
mov
mov
movsl
dec
add
adc
xor
mov
mov
and
mov
sub
push
in
adcl
inc
mov
repz
popa
xchg
adc
fsubs
and
xchg
pop
les
leave
fildll
sbb
test
test
jnp
rcll
sbb
xchg
popf
sbb
fnstcw
mov
pop
pop
mov
pusha
shlb
jno
lds
mov
inc
jb
sub
xor
sahf
or
dec
pop
leave
adc
jle
pop
dec
adc
in
sbb
inc
insl
imul
js
lods
and
dec
out
jb
ljmp
mov
pop
mov
pusha
adc
imul
jb
sbb
out
fldcw
lret
push
sub
pop
mov
lret
in
add
jle
xchg
jg
dec
aas
pop
sub
bnd
test
fs
les
fstl
mov
mov
xchg
xlat
push
cwtl
mov
mov
fisubrs
xor
lret
sub
fs
adc
fsetpm(287
jmp
and
ja
pushf
mov
stos
sbb
jnp
cmpsl
mov
ret
ret
bswap
dec
pop
jg
mov
xor
xchg
dec
jns
jp
dec
aam
mov
and
pop
jns
in
or
lock
inc
cmc
outsb
bound
and
test
xor
cld
rcrb
cmp
add
shl
rcll
fcomi
fildl
or
shrb
repz
push
sub
pop
frstor
out
dec
pop
imul
hlt
nop
inc
adc
sbb
pop
inc
dec
mov
daa
mov
jle
cs
in
mov
leave
mov
cmc
jns
aaa
jbe
mov
pop
repnz
shlb
push
pop
push
mov
dec
mov
out
imul
jbe
jmp
push
lock
adc
cli
jle
inc
xlat
xchg
and
fldcw
lea
cs
in
pop
fmull
inc
pop
outsl
mov
test
in
mov
clc
mov
xor
popa
repz
fldln2
jbe
ljmp
push
stos
dec
xorb
adc
push
cmp
xchg
pop
stos
or
push
fisubs
cmpb
mov
out
push
add
movsl
orl
push
xchg
sarl
push
dec
cmp
push
mov
fcmovnb
clc
and
xchg
out
mov
sbb
ja
push
leave
in
in
mov
out
fs
inc
es
jle
aas
addr16
push
cmc
fistl
xor
shlb
mov
pop
add
xor
fistpll
cmc
cmp
adc
dec
dec
and
imulb
and
add
sti
imul
push
or
orb
ror
insl
and
iret
ja
or
mov
inc
dec
xor
xor
dec
fistpll
dec
inc
cmp
out
aam
inc
mov
cwtl
in
mov
jne
xchg
lock
outsl
outsb
test
pop
xlat
dec
push
lds
ret
or
push
or
pop
xchg
repz
jl
mov
imul
push
sbb
adc
pop
les
addr16
dec
out
sbb
pushf
jmp
ss
cwtl
xchg
fdivs
xchg
mov
lock
dec
iret
arpl
scas
pop
cmp
lods
stos
ficompl
adc
sahf
sub
add
mov
mov
lock
add
pop
js
fdiv
ljmp
jecxz
sub
loopne
lods
addb
aam
in
test
cmpsl
sub
pop
fcoms
pop
das
int3
outsb
pop
aad
xor
in
ja
aad
xchg
mov
mov
jmp
cmp
jnp
in
pusha
cmp
fildll
or
aad
jns
lcall
add
push
adc
mov
adc
int
imul
add
push
out
arpl
add
adc
jb
scas
sub
lret
jo
int3
das
lahf
add
inc
in
inc
hlt
push
or
add
fadds
in
cmp
aam
push
dec
pop
jne
mov
sub
push
pop
arpl
dec
jmp
pop
adc
xor
shlb
nop
test
sbb
out
scas
push
pop
faddp
push
jge
popa
jg
ljmp
jo
xor
lea
push
inc
sbb
mov
jo
and
scas
xchg
inc
jae
and
test
dec
test
sbb
lcall
mov
pop
and
and
cmp
mov
adc
or
xchg
clc
in
push
jno
xor
inc
pop
and
cltd
in
scas
adc
nop
lahf
test
mov
iret
sbb
or
xor
out
mov
inc
adcb
mov
or
sbb
xor
mov
adc
mov
rcrl
sbb
mov
orl
cmp
shl
nop
or
pop
lods
rorl
mov
outsl
fwait
fs
insb
ret
int3
mov
daa
icebp
outsb
aad
mov
nop
leave
hlt
mov
jo
jb
xlat
popa
test
and
adc
push
lds
jmp
adc
outsl
push
outsb
xchg
mov
xlat
stos
rorb
cwtl
test
mov
jge
jne
cs
scas
sar
mov
sub
dec
mov
adc
or
xor
xchg
cld
inc
loope
jns
cmp
in
mov
jno
xchg
jp
pop
and
cmp
aaa
cld
xchg
outsb
lock
mov
jmp
ss
inc
data16
and
jmp
mov
fadds
das
rclb
mov
mov
xchg
add
movsb
mov
push
push
fisubrl
pop
sahf
sarl
iret
adc
and
movsl
jp
xor
and
je
mov
mov
push
test
pop
outsb
fildll
push
pop
jne
mov
jge
ss
mov
lock
sbb
cmc
stos
jbe
cs
mov
sbb
xor
dec
sub
fbld
bound
mov
mov
divb
incl
ljmp
test
dec
dec
outsb
cwtl
xor
icebp
dec
fistps
xchg
js
push
xchg
inc
outsb
push
mov
push
std
cmc
mov
jbe
jmp
mov
lods
int
aam
arpl
cmp
mov
sub
cmp
jge
iret
shrl
mov
push
fiaddl
jecxz,pt
test
dec
xchg
push
xchg
jno
adc
lock
mov
pop
out
jmp
mov
repnz
push
xor
nop
aam
adc
insb
jnp
fstpt
lret
flds
mov
psrlq
insl
cmp
push
js
fdivp
shrl
xchg
jle
jno
ret
add
stos
dec
xchg
fildl
cmpl
push
push
xchg
xchg
push
cmp
and
in
jmp
std
cmpsl
fcmovu
sbb
xchg
jae
scas
pop
and
mov
xchg
jns
jne
lahf
sbb
mov
jae
cmp
mov
ss
fsubs
jae
loopne
inc
bswap
shll
jo
out
xchg
cwtl
cmp
imul
jo
sbb
into
lahf
in
movsl
sbb
sub
lods
roll
movb
push
inc
andl
cmp
push
sub
scas
into
scas
sbb
icebp
mov
sbb
xchg
xor
adc
mov
push
xor
les
loope
sbb
shlb
test
pushf
popf
and
loop
push
xlat
xchg
push
stc
jl
and
adc
xchg
xlat
aad
jmp
nop
ret
scas
fwait
mov
fucomp
pusha
add
push
mov
inc
stc
clc
mov
out
pop
xor
test
jo
mov
push
cmp
jle
aam
shl
mov
out
lahf
xchg
or
add
test
mov
aam
rcr
andl
pop
dec
fisttpl
inc
jbe
fnstsw
je
cmpb
leave
xlat
sub
cmp
fwait
pop
mov
xchg
mov
pop
test
dec
sbb
jo
pushf
dec
or
and
pop
out
pop
mov
fsub
mov
mov
das
dec
jb
iret
fidivl
ss
outsb
aad
jns
and
lahf
ljmp
jg
addb
insb
jle
push
lock
cwtl
cmc
push
repnz
inc
mov
ret
push
xlat
lods
inc
repnz
divb
mov
nop
shrl
test
fdivr
js
xlat
or
and
ror
addr16
call
js
loopne
jno
cmp
and
mov
xchg
inc
bound
jns
push
mov
lock
lods
int3
ret
mov
mov
lock
push
mov
cmp
icebp
and
push
aam
inc
adc
cltd
xor
add
jmp
out
or
je
or
std
pop
sub
ljmp
dec
arpl
push
fidivrl
cmpb
dec
push
stos
aam
add
es
add
addr16
in
sub
psubusw
rcrl
aad
mov
jl
insb
push
roll
aad
jb
in
imul
push
mov
call
addr16
xchg
popa
pusha
clc
test
in
xor
imul
dec
fxch
movsb
stc
in
sub
push
iret
adc
jp
cmpsb
cmp
lret
testl
push
cld
test
xchg
xor
adc
fdivrs
cmp
addr16
mov
popa
fcoml
inc
sbb
mov
stos
sbb
or
xchg
push
shlb
sahf
adc
inc
aam
movb
jbe
stc
cmp
xor
cld
sbb
jp
mov
daa
jl
mov
ja
cmp
sub
xchg
xchg
inc
aaa
pusha
sti
cmp
mov
insl
out
mov
add
xor
cmp
adc
add
movsb
outsl
sbb
scas
out
push
add
popf
stos
dec
and
sub
loope
andl
mov
mov
insb
cmpsl
je
ja
mov
dec
dec
sti
ja
sbb
sub
pop
xchg
mov
pop
push
pop
aad
pop
jno
bound
jg,pt
or
fmull
jle
imul
inc
leave
mov
aas
int
sarl
cmp
mulb
cmp
leave
aaa
loopne
pop
stos
mov
in
cmp
shll
pop
add
mov
test
sub
sarl
cmp
cmp
adc
inc
lods
inc
mov
mov
mov
inc
push
sub
stos
imul
jo
enter
pushf
movsl
pop
pushf
mov
pop
pop
pop
inc
js
cmp
arpl
je
movsl
insl
cmp
imul
loop
sarb
sub
shlb
xor
adc
subb
jle
pop
rcr
rcrl
push
gs
xchg
lcall
out
jmp
pop
inc
jecxz
jb
or
mov
pop
or
int3
xchg
ret
sub
mov
mov
mov
rorl
lods
mov
ja
aaa
xor
andb
lea
adc
stc
stc
cwtl
mov
cltd
mov
repz
pop
push
loope
popf
repz
xor
cmc
jmp
ds
push
mov
rclb
push
insl
aaa
aam
and
push
testl
fistps
filds
jae
fmull
notb
sbb
hlt
sti
cmp
xchg
mov
add
adc
pusha
fidivl
xchg
jb
cmc
shlb
dec
cli
mov
scas
loop
cmpsb
lods
aas
push
sbb
dec
push
scas
hlt
push
repnz
je
insl
sahf
cmc
jns
jne
pop
fbstp
push
data16
movsb
xor
mov
int3
enter
jmp
lea
sub
jns
outsl
loop
je
call
inc
out
cs
xchg
sbb
repnz
stc
and
cmp
fmuls
test
mov
xor
icebp
cmp
lods
push
scas
adc
pop
jno
cmpsb
cmp
ret
xor
mov
lock
xchg
mov
push
pusha
mov
dec
jbe
sbb
cmp
or
jne
lods
xor
ljmp
and
add
xor
dec
mov
mov
dec
mov
arpl
lsl
imul
dec
cmp
lcall
loopne
repz
insl
push
cwtl
std
mov
popf
lahf
insb
cmp
adc
sti
dec
dec
or
aam
or
mov
cmc
in
insl
inc
and
jl
dec
jmp
push
adcb
inc
jns
cmp
cld
ret
movsl
adc
xchg
mov
pop
ja
cld
cmp
into
roll
xor
pop
sub
fmuls
jno
jecxz
sbb
push
xchg
ljmp
cmp
test
test
dec
push
cmp
or
or
popa
rcrb
add
sbb
add
mov
and
enter
sti
add
cmpsb
lods
sbb
loopne
insb
or
in
inc
inc
sbb
fnsave
lcall
mov
inc
cmc
mov
inc
sub
int
divb
out
aas
repnz
pop
das
ficoml
xorb
dec
out
dec
and
aam
js
mov
sub
mov
push
in
es
pop
mov
inc
out
imul
rcrb
jecxz
or
pop
dec
xchg
mov
mov
leave
jbe
mov
fidivl
jns
sub
mov
test
xor
fwait
adc
lods
hlt
sbbb
inc
jp
fcomip
shlb
sbb
or
xor
out
test
push
cmpsb
xor
dec
mov
jmp
or
outsl
test
arpl
repnz
ja
push
daa
ret
jmp
sbb
push
pop
sbb
sub
mov
lods
mov
in
adc
out
xchg
out
les
fidivs
mov
xor
sbb
jg
mov
insl
test
clc
fnsave
lock
dec
cmpsl
in
lock
inc
cmp
nop
enter
jmp
das
mov
dec
daa
xchg
and
and
add
xchg
imull
cmp
orl
xor
arpl
std
push
lcall
push
or
inc
sub
lds
call
jns
sahf
inc
jecxz
push
jns
adc
sub
cltd
fcoms
xor
aas
xchg
jns
pop
shl
lds
fadd
movsb
lock
pop
cmpsb
repz
inc
inc
or
xor
cmp
jae
xorb
mov
push
fs
xchg
jge
jae
pop
mov
and
rcll
aad
mov
xor
mov
stos
pushf
enter
jle
cwtl
fwait
add
mov
mov
jmp
push
loop
add
int3
xchg
cmp
fsubl
inc
xor
cmp
cmp
mov
pop
insl
pop
pop
fmuls
mov
das
scas
dec
shll
push
sub
lahf
sti
aaa
push
pop
shll
mov
ds
insb
subb
sti
jl
adc
out
pop
jge
fmul
fs
das
dec
lods
dec
outsb
je
xorl
mov
mov
or
mov
push
and
or
into
popf
dec
cltd
push
sub
adc
ja
cmpl
fcompl
je
int
js
push
jae
lods
not
aaa
das
rcrl
orb
ds
scas
mov
and
mov
sub
and
xchg
ret
adc
fdivrs
es
mov
sbb
lret
mov
add
push
push
xor
aas
lock
jno
aad
outsb
mov
xchg
testl
mov
cwtl
test
cmp
pop
popf
mov
mov
inc
ss
in
pop
jb
test
loope
push
std
adc
sub
xor
pop
xchg
cltd
stc
lcall
cmp
imul
popa
out
bound
out
sub
jge
insb
push
jp
push
test
leave
adc
mov
hlt
inc
dec
xchg
mov
jp
lea
add
jl
sbb
xchg
adcb
jge
fistpll
test
cwtl
clc
stos
jne
sarl
xlat
mov
jecxz
cld
rcrb
adc
pushf
pusha
iret
dec
xchg
pop
lods
arpl
jo
pushf
or
rcrl
jmp
mov
mov
scas
cltd
hlt
sbb
sbb
push
addr16
add
stos
daa
outsb
add
mov
icebp
fisttpll
shll
jnp
jns
adcl
or
or
repnz
bound
and
pop
and
or
add
dec
lea
mov
or
sbb
sub
insl
sub
jmp
cwtl
mov
or
and
das
es
out
dec
fsts
popl
loop
lock
mov
jecxz
in
add
sub
aas
cmp
mov
int3
pop
xchg
aad
js
bound
adc
test
cmp
jne
test
data16
sbb
sbb
mov
ret
imulb
bound
jae
ja
pop
or
cmp
outsl
mov
jg
fmull
push
test
fcoms
mov
mov
shrb
pop
in
outsl
mov
test
insb
ljmp
xor
lcall
dec
add
test
jl
or
lret
std
fimull
icebp
mov
push
lea
sbb
jl
mov
test
out
cmp
jl
call
mov
jnp
mov
gs
shrl
push
cmp
mull
pop
jg
mov
lods
or
or
jo
mov
sbb
jmp
sub
pop
jp
mov
sbb
and
lret
aas
mov
mov
mov
or
leave
push
and
xchg
divl
or
ja
pop
popf
test
add
adc
std
in
pop
lret
inc
push
mov
pop
and
out
sbb
in
gs
push
ret
mov
icebp
fimull
adc
aad
cld
iret
jne
sbb
sbb
or
mov
loope
jp
xor
in
ljmp
and
dec
movsb
pop
add
jo
fistl
std
ret
mov
pop
mov
push
jne
test
push
pop
stos
scas
ficomps
jg
push
mov
sbb
ret
adc
pop
inc
stos
push
imul
add
dec
stos
mov
lods
xor
xchg
xlat
ret
and
cwtl
cwtl
cmp
push
push
fldt
jae
pop
mov
rolb
xor
ja
and
mov
cmpsb
ss
pop
push
movsb
sbb
or
pop
and
pop
push
ss
push
mov
add
dec
aam
dec
jne
push
xchg
dec
cmp
sahf
sub
push
pop
sub
pushf
mov
subl
xor
jns
push
xor
lock
inc
std
cmp
lock
xchg
fs
bswap
cltd
cmp
pop
ret
push
xchg
sbb
mov
fs
or
add
xorb
dec
add
loope
and
hlt
add
insb
mov
pop
inc
fistps
fdivrl
cmp
or
inc
test
lret
ja
in
sti
call
push
add
fsubr
arpl
mov
out
and
adc
dec
push
dec
daa
mov
imull
rcll
mov
lret
imul
sub
jo
cli
fnstsw
mov
pop
mov
adc
bound
add
decl
adc
movsl
pop
scas
movsbl
xor
sub
enter
mov
les
xlat
in
push
fbstp
cmp
xchg
push
loopne
fsubrs
dec
pop
jle
rcll
xor
ljmp
nop
adc
in
adc
les
xchg
mov
adc
xor
pop
fmull
add
mull
and
leave
mov
jle
std
inc
cltd
cmpsb
cld
push
lock
out
pop
sub
mov
inc
fdivl
fsubrl
push
jb
icebp
pusha
mov
cwtl
jg
push
mov
shlb
inc
jbe
out
cmp
pop
and
in
cmc
dec
mov
icebp
adc
icebp
fists
orb
push
xchg
in
stos
inc
sahf
push
push
mov
sub
arpl
and
sbb
sbb
push
add
fisubrs
jmp
popa
cwtl
push
cmp
test
pusha
mov
ret
icebp
or
mov
fimuls
cmp
inc
out
inc
arpl
push
sbb
addr16
cld
pop
mov
sarl
push
mov
push
fsubrs
out
fldcw
add
loope
out
cmpb
mov
jae
dec
scas
scas
add
sbb
xor
hlt
fdivs
je
enter
push
addb
pusha
xchg
iret
cmpsl
lods
pushf
inc
adc
mov
inc
mov
xor
mov
lock
in
fs
pop
cmpsb
cmp
es
hlt
mov
iret
dec
inc
adc
fs
dec
push
xor
cmc
repnz
jne
hlt
daa
jbe
inc
popa
cs
addr16
mov
mov
jg
pop
mov
xor
icebp
jmp
push
sbb
cmc
push
and
pop
fcmovbe
sub
cmp
mov
fidivrs
dec
push
jmp
out
into
dec
sbb
lds
adc
or
fwait
dec
outsb
add
push
notb
and
and
cmpsl
insb
add
test
fildl
mov
ret
daa
jl
movsb
dec
xor
test
push
mov
nop
add
pop
out
push
push
repz
sub
in
or
xchg
and
cs
cmp
inc
pop
nop
xchg
mov
cmp
push
fsubr
fidivs
pop
and
xor
mov
loop
sbb
mov
divl
lret
mov
scas
imul
aad
inc
int
xor
mov
pop
mov
orb
adc
push
lea
mov
insb
test
jl
xchg
sub
bound
cmc
dec
nop
cld
and
andps
add
jmp
lock
or
push
and
xchg
je
clc
push
mov
xchg
add
aaa
dec
pushf
cmp
arpl
jmp
stos
addl
jg
js
xor
sub
addl
fisubrs
popf
ss
aaa
movsb
xor
or
dec
movl
les
stos
in
fidivrl
add
cli
lods
adc
cmpsl
cmp
cmp
pop
sbb
loop
test
fnstsw
xchg
pop
outsb
inc
or
sbb
std
xor
and
cmp
pop
jne
xor
add
in
test
bound
add
insb
xchg
cmp
cltd
hlt
shr
pop
and
shrb
out
jmp
mov
pop
movsb
inc
adc
push
push
leave
and
xor
xor
ja
pop
xchg
sub
xchg
push
pop
es
xchg
and
out
cltd
fidivl
dec
call
jne
jo
mov
out
jo
pop
ret
in
mov
dec
push
adc
nop
shll
nop
or
mov
xchg
and
dec
pop
push
pop
scas
jge
icebp
rorb
lods
mov
ja
pushf
inc
cmpsl
mov
jle
push
inc
pop
mov
cmp
sub
pop
sbb
shlb
mov
cmp
subb
sarb
push
xchg
out
add
sub
mov
sbb
sub
mov
xor
push
cmp
xor
xlat
ret
loop
inc
sub
pop
push
sub
fimull
sti
push
mov
ljmp
sbb
mov
loope
or
sub
push
fstpl
std
out
jle
cld
out
pop
roll
pop
imul
add
mov
popf
mov
dec
sbbb
jg
cmp
push
sahf
in
aad
test
dec
adc
mov
inc
pop
pop
or
sarl
xor
stos
jo
xchg
mov
loopne
xchg
mov
dec
iret
popa
decb
sbb
inc
inc
pusha
mov
popf
jecxz
dec
out
sub
xor
call
fstpl
cwtl
sahf
shl
jp
cmpsb
push
mov
into
push
cmp
jo
fcomip
dec
jg
mov
pop
ljmp
arpl
lret
xor
inc
mov
arpl
clc
mov
insb
subl
jl
mov
pop
das
test
imul
insb
lods
into
pusha
clc
lea
mov
ljmp
xlat
lds
mov
cld
inc
stos
pop
fstpl
or
dec
mov
xlat
lcall
dec
out
pop
cmpsl
push
insl
dec
mov
nop
outsl
leave
jbe
ja
sbb
in
cmp
mov
jmp
and
decl
dec
jno
push
sbb
xor
push
mov
sbb
scas
adc
xchg
jecxz
mov
adc
cmc
and
das
push
addr16
sbb
cli
cmp
pop
or
orb
rcrb
dec
es
xchg
jmp
jae
pop
xor
aam
pop
ficoml
and
mov
pop
push
and
mov
adc
adc
and
pop
xchg
cld
pop
add
mov
in
jbe
sub
pop
fldl
mov
out
xchg
jp
xor
test
mov
fstpt
or
mov
pop
inc
xchg
jae
int
xchg
leave
lods
int
lret
test
subl
sub
sub
mov
inc
sub
sti
ret
lret
scas
push
adc
mov
ficomps
mov
inc
test
pop
into
sbb
or
ja
mov
in
sbb
aaa
jo
jno
sub
adc
rcrl
mov
xchg
and
into
shl
inc
addr16
push
mov
push
and
leave
mov
sub
or
lods
mov
xchg
test
pop
adc
jle
xor
and
xchg
xor
aas
or
ja
jp
fisubrs
stos
pop
les
mov
ficompl
adc
ja
add
icebp
sbb
xor
adc
in
push
addr16
jnp
mov
cmpsl
ficoms
leave
testb
jno
mov
cli
aas
push
push
mov
mov
and
jb
ficompl
or
aas
subl
outsl
pop
sub
int
xor
jb
pop
jp
stos
dec
adc
cmp
loopne
fisubs
dec
or
jp
int
scas
clc
mul
mov
out
in
push
fimull
test
push
loope
fistl
adc
push
or
and
inc
jmp
js
xchg
mov
and
or
loop
outsl
sub
jae
add
bnd
or
push
pop
mov
pop
mov
add
addr16
adc
fidivs
roll
repnz
das
fisttps
je
lods
and
out
lahf
std
pop
fdivr
das
adc
aad
mov
int
loope
ds
std
push
mov
in
lret
and
mov
lret
lret
outsl
sbb
push
stos
mov
js
xchg
xor
lcall
mov
hlt
stos
xchg
sub
inc
cmp
out
xchg
push
or
pop
ljmp
in
cwtl
imul
xor
movsl
repnz
int
push
shlb
xchg
push
test
fyl2xp1
or
mov
jle
sbb
and
xchg
lods
push
popa
dec
push
pop
push
xchg
jge
sahf
mov
jge
out
jp
hlt
xor
lret
movsl
movsb
push
or
mov
fwait
mov
pop
mov
popl
iret
mov
test
enter
add
push
jne
scas
pop
je
sbb
les
ret
push
je
loope
pop
or
xor
push
sbbl
xchg
mov
lahf
repnz
rorl
cmp
sub
ljmp
push
pop
mov
in
lock
inc
frstor
pushf
add
test
inc
shrb
movsl
out
scas
sti
cmp
cmpsb
hlt
int
fcmovnb
into
out
icebp
cmpl
pop
pop
jo
sub
movsl
pop
loope
imul
cmp
or
ljmp
fcoml
pop
push
cmpsb
mov
and
cltd
cli
mov
jl
add
cmc
arpl
scas
jp
or
cs
jno
mov
or
dec
es
out
xchg
sub
push
dec
jle
stos
mov
jg
add
dec
test
xor
push
and
pop
scas
mov
out
fbld
in
jecxz
loopne
adc
sub
shlb
in
add
orb
push
cs
movsb
mov
mov
cmp
add
xor
xchg
imul
dec
or
aas
cwtl
sbb
xchg
push
ficompl
mov
out
lcall
aaa
ja
shll
inc
cmp
jp
nop
mov
imul
lds
push
lock
cmpb
testl
and
pop
js
stos
icebp
loopne
movsb
jg
push
loopne
adc
and
scas
pushw
in
mov
mov
enter
popf
push
mulb
xor
sahf
in
ret
push
xor
sbb
push
jecxz
insb
push
lret
mov
int
mov
jns
xchg
adc
push
out
inc
cmp
data16
cmpsb
js
jnp
ds
fcmovb
cmpsl
orb
mov
sub
inc
inc
in
mov
outsb
xor
xlat
mov
adc
mov
mov
fidivl
adc
add
fwait
cmc
dec
adc
loope
hlt
jo
loope
iret
stos
cmp
jecxz
mov
sub
fcoms
cld
lret
mov
outsl
cltd
rcrb
movsb
cmp
movsb
cld
mov
or
ljmp
add
push
mov
aas
cmp
sar
pop
cld
out
dec
das
out
jne
dec
pop
cs
or
sub
aam
sti
fwait
mov
call
dec
leave
and
pop
pushf
jg
imull
cmp
adcb
gs
xchg
mov
int3
push
insl
cmc
xchg
jns
xor
lret
mov
push
mov
sub
pop
jno
int3
shl
add
test
sbb
stos
push
lods
fldenv
and
insb
xchg
and
mov
inc
xlat
push
or
pop
dec
pop
mov
in
incb
cld
mov
outsl
sbb
xor
dec
or
cmc
sub
mov
xchg
fdivr
mov
xor
jnp
cli
pop
fidivrs
adc
mov
scas
cmp
jg
fisubrs
add
gs
push
cmp
xchg
jo
loopne
jnp
ret
xlat
cs
pop
out
call
sub
xchg
cltd
xchg
out
insl
or
ret
movsl
mov
inc
outsl
adc
fistl
jbe
lods
dec
mov
lods
pop
pop
iret
int3
out
add
dec
jmp
mov
jg
cmp
sbb
mov
in
add
cwtl
pop
fldenv
mov
into
mov
fldenv
sbb
jno
sbb
mov
xchg
xor
test
jae
lret
pop
inc
test
loopne
mov
add
mov
pop
xchg
in
push
jb
sbb
vmovntpd
pop
sbb
push
leave
dec
mov
sti
pushf
test
add
mov
pop
dec
bnd
mov
push
xlat
cmpsb
out
js
adc
loopne
fwait
je
fistpll
in
lret
or
fldenv
sbb
sahf
imul
test
mov
and
sti
or
cld
pusha
aam
sar
scas
dec
xchg
mulb
push
mov
xlat
inc
call
lret
out
lods
ja
mov
inc
jns
mov
sbb
fistps
in
ss
jo
mov
lea
sbb
divps
sbb
enter
scas
sub
movsl
iret
or
add
dec
cwtl
data16
dec
fisttps
or
stos
push
cmp
pop
jge
cmpsb
nop
cmp
rcll
pop
ds
movsb
and
mov
js
dec
dec
pop
pop
fwait
movsl
mov
add
mov
mov
in
mov
divb
lock
lds
stc
inc
mov
outsb
cld
pop
add
les
fwait
insl
adc
mov
mov
cmp
sub
repz
jge
insb
jne
push
stc
jne
xor
stos
or
push
popf
xchg
xchg
cld
shll
xchg
add
xor
adc
xchg
jnp
jb
lahf
adc
rcll
fs
adc
jae
fstpl
lret
sub
jle
out
push
xchg
lods
repz
sar
mov
sub
push
scas
out
lret
mov
negb
jno
sub
jno
ds
repz
loope
mov
imul
inc
and
sbb
loope
sbb
mov
cmc
jge
dec
push
enter
adc
scas
lcall
xchg
rcl
xchg
movsl
pop
push
sbb
mov
push
dec
mov
pmaxsw
adc
ljmp
mov
lock
mov
sbb
fdivrl
mov
pop
adc
sbb
mov
adc
cmp
mov
call
repnz
add
lock
rcll
mov
out
cwtl
fldcw
repz
aam
outsb
push
mov
mov
sahf
push
cmp
pop
lods
dec
mov
inc
call
insb
xchg
push
mov
orl
jecxz
add
out
loope
test
ss
out
or
jl
sub
pop
jl
push
scas
repnz
loopne
sub
push
in
inc
dec
jo
adc
hlt
inc
add
adc
and
adc
std
std
adc
stc
inc
scas
int
xorb
aaa
mov
mov
lret
adc
dec
lret
mov
pop
xchg
inc
xchg
dec
js
or
push
adc
pop
hlt
in
jo
sbb
mov
add
jae
pop
into
popa
imul
and
cmp
push
and
jns
xor
add
pop
pop
mov
fiaddl
sbb
popf
orl
jne
pop
or
les
mov
es
push
push
popa
adc
ret
fadd
loopne
add
add
sbb
stos
jg
fldl
and
and
ret
inc
dec
dec
xchg
jo
pop
in
or
call
dec
fs
add
push
sub
adc
in
in
gs
push
dec
sub
dec
sbb
sbb
inc
cld
mov
imul
sbb
in
xchg
cwtl
mov
lret
cltd
jge
jl
mov
lret
orb
jg
xchg
ja
cmp
aas
pop
cmc
jo
mov
mov
das
push
mov
mov
ficomps
jge
mov
fsts
popl
pop
pop
pop
es
cmpsb
adc
jmp
xor
hlt
mov
sti
leave
xor
adc
nop
add
xchg
daa
pop
fisubrl
test
push
loop
pop
int
lret
adc
xor
lret
call
dec
adc
mov
ret
push
push
pop
and
xor
xchg
fdivrl
scas
jecxz
out
gs
lods
mov
jecxz
add
push
sub
jmp
pop
mov
or
les
daa
dec
pop
jne
shrb
ret
popf
fsts
mov
jno
xchg
push
icebp
mov
movsb
dec
lret
cmp
sub
mov
jo
das
mov
mov
daa
cld
in
push
sbb
cmp
daa
mov
es
in
pop
fstl
xor
lret
adc
daa
and
adc
adc
mov
mov
pop
rcr
jle
cli
adc
and
shll
sub
movsl
cmp
xor
imul
adc
mov
icebp
fisubrl
mov
push
fidivrs
stc
mov
lret
mov
adc
fstl
imul
mov
mov
arpl
push
mov
cmc
out
into
and
gs
jnp
mov
cmpsl
jns
test
xor
into
out
mov
inc
test
mov
call
sbb
insl
mov
dec
rorb
es
adc
and
sarb
inc
lock
insl
xchg
lahf
insl
popa
lcall
loopne
jae
jo,pn
pop
mov
addl
int3
lock
mov
scas
repnz
popf
fdivp
in
pusha
scas
pop
jg
pop
jmp
lds
jecxz
test
xor
mov
mov
in
adc
jno
enter
mov
lea
lahf
xchg
cmp
int
jbe
jecxz
mov
cmp
and
pop
clc
jno
add
test
bswap
ret
ljmp
mov
sti
in
jle
ljmp
inc
enter
dec
movsb
ljmp
out
stos
sbb
push
icebp
fimull
pusha
ja
sub
into
mov
stos
cmpl
imul
jne
fwait
or
ror
pusha
ret
mov
sub
popf
mov
xor
out
ret
aam
and
push
cmp
and
adc
jp
out
stos
xchg
clc
repnz
xchg
jb
push
and
mov
popa
mov
mov
xchg
enter
insb
loope
xor
mov
adc
inc
adc
push
punpcklwd
shlb
mov
leave
testb
dec
cmpsl
sbb
imulb
mov
repnz
fadds
aas
mov
push
roll
inc
andl
inc
pop
or
dec
sub
negl
fidivrl
xor
ja
fcom
xchg
or
xchg
outsl
pop
roll
push
and
in
out
lock
adc
mov
mov
sti
cmpsl
ljmp
out
aam
mov
and
jge
add
mov
sbb
out
lods
jae
mov
xchg
sbb
in
data16
bound
ljmp
pop
xchg
les
gs
push
scas
enter
and
cmp
ja
test
or
test
inc
dec
mov
aas
xor
adc
lret
rorb
insl
out
inc
movsb
out
jl
xor
inc
adc
inc
pop
sbb
call
outsl
repnz
lds
pop
repnz
and
jl
les
adc
jmp
ljmp
pop
jecxz
adc
imul
and
stos
les
or
sub
loop
and
aaa
fldl
cwtl
or
xor
lea
ret
add
xchg
lods
lret
add
cmp
and
sbb
jno
dec
pop
lods
jae
or
push
sub
cmp
jg
adc
popf
clc
xchg
jle
cmpsl
xchg
shll
push
in
xchg
pop
sub
mov
setbe
sar
lods
or
test
dec
cli
arpl
js
lock
jbe
sbb
and
push
outsb
orl
xchg
scas
sub
mov
jmp
pop
data16
out
out
cli
or
push
repz
fs
mov
test
fucom
push
cmp
push
shrd
shlb
dec
fnstenv
push
stos
xor
xor
jnp
xchg
insl
mov
pop
pop
xlat
cltd
cmpsl
sub
mov
and
dec
outsb
cmpl
jno
call
orl
imul
out
xchg
pop
rorb
mov
mov
jmp
lahf
jae
xchg
mov
sbb
mov
mov
and
sbb
divb
ret
scas
out
ds
inc
rorl
xor
ja
jns
adc
lahf
lods
in
rorl
rol
jecxz
xor
aaa
sub
cmp
and
in
jp
push
leave
movsb
orl
push
fldt
frstor
add
fdivrp
lahf
and
test
xor
lds
mov
sub
inc
js
inc
lret
mov
aad
mov
cmp
inc
inc
cmpl
test
mov
pop
movsb
daa
jle
mov
fnsave
gs
in
aaa
sub
adc
mov
adc
fwait
idivl
in
pop
mov
pop
lret
ljmp
cwtl
mov
push
cwtl
inc
and
add
lcall
jl
adc
ds
and
fidivrl
sub
cli
xchg
cmpsb
rorl
popa
xor
mov
xchg
dec
mov
push
and
inc
test
shll
fnstenv
add
sbb
imul
mov
or
ds
int3
cld
vmread
pop
ss
xchg
mov
fmull
aaa
test
sbb
testb
lret
fimuls
scas
push
jmp
sahf
or
inc
cltd
lds
cwtl
imul
and
dec
sbb
pusha
bound
lahf
cmp
sbb
into
test
jl
xor
push
nop
mov
js
add
scas
mull
sub
jg
add
jmp
mov
cltd
dec
sub
and
push
inc
cld
dec
or
scas
movl
pop
add
loope
and
dec
push
add
test
cld
mov
scas
cltd
aam
out
mov
add
mov
xchg
inc
adc
xor
add
and
jp
adc
aas
xchg
push
imul
test
sub
add
cmp
fldl
gs
push
cld
in
dec
stos
push
cmpsl
cmp
in
in
std
inc
int
sub
or
pusha
push
inc
call
dec
adc
test
mov
mov
aaa
mov
lods
scas
mov
jbe
imul
ss
hlt
mov
mov
inc
andl
or
push
mov
imul
lcall
add
xor
rorb
arpl
add
xor
xchg
ljmp
sub
stos
xor
insl
outsl
aaa
jg
test
popf
loopne
aas
cmp
shrl
mov
jbe
aad
cmp
pop
repz
push
mov
pop
xor
or
out
incl
lahf
mov
andl
dec
mov
out
jo
negl
cwtl
sti
cmc
shl
mov
movsl
or
stc
cs
xchg
std
xchg
cld
xlat
js
pushl
dec
add
inc
adc
jg
aam
test
push
icebp
call
push
call
add
mov
shl
xchg
insl
xchg
sbb
daa
cmp
mov
jns
out
or
outsb
adc
dec
add
pop
outsl
jl
and
loop
adc
enter
pop
aam
jg
in
adc
cmpsb
jb
cmpsb
mov
or
pop
pusha
inc
clc
imul
xor
xchg
push
mov
imul
enter
lds
pop
and
sbb
fdivl
xchg
pop
into
in
jg
jg
das
sub
adc
mov
int
pop
push
sarb
outsl
ss
outsl
mov
sub
mov
mov
loop
jno
jle
xchg
out
nop
mov
cs
je
ror
in
divb
xor
push
pop
lods
cwtl
int3
mov
faddl
and
pop
xchg
fdivr
fsts
fldenv
or
fdivrl
adc
aam
scas
stc
cmp
pop
les
inc
ret
iret
ljmp
in
out
cmc
fldlg2
xor
insl
xor
xlat
mov
pop
adc
inc
fldcw
jge
fwait
or
mov
pop
lret
xorl
xchg
xlat
dec
imul
fmulp
test
stos
orb
test
mov
dec
pushf
sub
sbb
loopne
add
aas
inc
mov
ss
dec
mov
cmpsb
hlt
popf
decl
aas
pop
cmp
pusha
sub
lods
mov
inc
add
popa
aaa
dec
mov
mov
mov
std
xchg
es
out
in
mov
pop
xchg
cmp
jno
pop
sbb
add
loopne
push
aam
jne
push
scas
sbbb
js
add
es
xlat
dec
jmp
xor
mov
movb
lock
lods
sbb
push
ja
test
in
data16
cmpsl
shlb
movl
lret
mov
scas
cs
inc
negb
jp,pn
mov
inc
dec
jge
cli
icebp
and
je
jle
jp
and
js
into
out
ficoms
in
xor
aas
cmp
push
pop
adc
or
jge
inc
rclb
out
jp
mov
movsl
dec
lcall
ret
adcl
cmp
inc
pop
addr16
or
out
jne
inc
cmpb
or
ja
movsb
xchg
xor
cwtl
pop
scas
cwtl
arpl
pop
inc
inc
add
scas
cmp
hlt
push
js
dec
je
iret
icebp
xor
adc
out
or
add
add
ds
outsb
adc
pusha
clc
sub
mov
fwait
cmp
cmp
hlt
cmp
andb
aad
push
or
cltd
mov
fnstcw
sub
lcall
or
fldl
pusha
es
int3
mov
lock
xchg
mov
aas
or
xor
pusha
jb
pop
fucomp
mov
mov
jno
idivl
dec
add
loope
mov
out
inc
jbe
push
in
dec
out
mov
mov
imul
mov
and
xchg
and
fcoms
push
je
dec
lcall
js
mov
icebp
fsubp
aas
lods
lret
xchg
adc
ret
adc
push
xor
test
cmp
jno
mov
push
fldenv
imul
arpl
in
insb
and
gs
loop
cltd
ss
pop
fisubl
xor
lods
dec
cmp
adc
nop
jp
out
and
imul
xlat
sbb
mov
mov
movsl
lret
pop
lcall
add
push
repz
std
adc
out
xor
frstor
hlt
cltd
mov
loopne
xchg
sbb
push
in
repnz
dec
ja
jmp
dec
and
jae
dec
xchg
pop
jb
mov
mov
int
imul
lods
fnstsw
adc
lock
inc
lret
mov
fldcw
in
and
xchg
ljmp
push
push
jle
ja
pusha
inc
mov
xchg
push
stos
inc
mov
rcrb
inc
jns
fmul
or
lock
or
sub
xor
cmp
fldt
mov
or
enter
jns
icebp
dec
mov
dec
into
aaa
adc
push
sub
jg
mov
adc
lds
jne
push
out
repnz
inc
pop
stc
xor
adc
fwait
xlat
inc
jnp
push
mov
pop
fidivs
shll
scas
cmp
adc
ds
bound
shrl
sarl
push
or
insl
push
sbb
jb
push
or
inc
adc
pop
inc
pop
fsubrl
popa
jecxz
push
pop
and
dec
std
test
je
inc
cmp
sbb
cmp
push
lods
les
mov
mov
pop
mov
ret
mov
inc
xor
fmull
loop
mov
pop
rcrl
pop
sub
js
iret
fmul
or
test
mov
popa
dec
cld
dec
inc
imul
xor
sbb
mov
push
pop
mov
and
arpl
cltd
jbe
clc
movsl
bound
test
cmp
sbb
cmp
mov
repnz
lock
mov
stos
fwait
orl
push
mov
paddusw
inc
cmpsb
lcall
xchg
sbb
sbb
mov
push
mov
aaa
mov
enter
mov
add
test
addb
mov
rorb
stos
daa
stc
push
and
hlt
pop
push
or
ja
xor
sahf
lock
sbb
push
dec
in
lret
or
adc
cmc
lcall
sbbb
cmp
mov
and
pop
popf
mov
push
in
push
push
ret
add
adc
outsl
pop
repnz
inc
insb
jns
test
mul
add
mov
push
inc
or
divb
dec
mov
mov
pop
fisubs
push
jne
jbe
mov
sub
mov
out
ljmp
rcrb
and
leave
mov
jmp
xchg
mov
js
sub
test
out
ret
outsl
xchg
jecxz
jmp
jns
mov
into
test
jae
dec
sbb
cmp
call
imul
je
xorb
stos
fidivs
ljmp
inc
jnp
xor
push
shlb
add
jecxz
push
aas
stos
xchg
and
clc
xlat
cmp
mov
lods
xchg
or
or
xor
ret
sahf
clc
inc
or
mov
and
xchg
fsubs
push
lods
repnz
sub
mov
orl
imul
push
xchg
xchg
xorl
es
fs
das
aam
dec
sub
lahf
dec
out
xor
pop
mov
sbb
xchg
mov
mov
and
outsl
fdivrs
js
push
in
lods
cmpsb
in
xchg
nop
imul
lods
push
sub
mov
mov
dec
test
and
test
addl
lds
sub
jle
movsb
push
mov
sbb
sub
arpl
cmpsb
sub
sub
test
ret
add
fisubs
xchg
pop
dec
pop
or
pop
pop
xor
icebp
jnp
icebp
dec
data16
lahf
sbb
sbb
jecxz
push
shrd
sbb
xor
in
hlt
addr16
popa
repz
xorl
inc
xor
in
ja
push
mov
out
or
pusha
rcrl
fwait
dec
sbb
cmc
out
clc
xor
cmpsl
or
pop
rorl
mov
xchg
fsts
and
cwtl
mov
mov
adc
sbb
subl
mov
cmp
in
push
or
hlt
cmc
or
adc
xchg
ret
lcall
cmpsl
lcall
stos
mov
imul
stc
stc
ret
sti
mov
lods
mov
in
xor
mov
push
int
scas
cli
mov
jle
inc
inc
jae
out
ja
mov
lret
in
push
add
rclb
fadds
pop
std
es
cmp
hlt
das
ret
cmp
out
ljmp
mov
scas
pushf
loop
dec
jmp
jne
test
adc
loop
add
popf
es
mov
and
fadds
scas
ret
mov
mov
vcvttss2si
cli
sahf
pop
inc
push
adc
add
cltd
xor
dec
add
and
xor
xor
adc
imul
mov
sub
mov
icebp
mov
xor
mov
fwait
into
int3
fbld
popf
cs
stc
sub
addl
jmp
pushf
mov
sub
in
imul
les
xor
fimuls
in
adc
js
xor
rcrl
ja
flds
movl
lock
mov
and
inc
aaa
ja
sub
pusha
ret
scas
push
mov
sub
fs
shlb
push
jecxz
mov
bound
mov
dec
and
cmp
lock
mov
pop
fstps
icebp
xor
inc
fidivl
loop
xor
ljmp
adc
enter
loope
nop
pusha
push
sbb
out
cmc
outsl
sbb
mov
mov
dec
push
pop
les
sub
xor
mov
xchg
test
out
xlat
shll
shrl
dec
sub
mov
jb
sbb
ds
xlat
fsubrl
mov
xlat
add
mov
xor
out
loopne
lock
lahf
jnp
or
aaa
arpl
addl
or
pushf
cmp
lahf
fcoms
lock
sbb
push
push
push
aaa
push
mov
mov
je
inc
jo
sub
cwtl
sbb
shll
sub
daa
add
out
jne
sub
call
fildl
stc
fstps
mov
subl
xor
fistpll
jae
mov
rol
in
xchg
and
shl
dec
push
adc
inc
leave
ljmp
into
lods
fwait
loope
jmp
sub
or
sbb
mov
mov
cmpsb
mov
popf
jb
inc
popf
jl
fwait
mov
inc
mov
inc
mov
sti
es
add
add
jmp
aam
in
shrb
pop
pop
inc
push
xor
outsb
icebp
sbb
and
xor
push
jae
xchg
out
sub
add
jg
pop
int
fsubrs
fiadds
pop
pop
dec
out
or
push
or
xchg
push
mov
insb
mov
lds
jbe
fisttps
xor
sub
hlt
fcoml
inc
movsb
sub
aam
fdivrs
or
jle
roll
add
and
test
sbb
call
addb
or
or
ret
leave
decl
aad
pop
roll
shlb
mov
dec
xchg
or
test
sub
inc
imul
in
cwtl
lods
push
mov
cmp
lahf
sbb
fcmove
push
dec
xchg
cpuid
push
push
mov
imul
jno
jp
out
lcall
es
movsl
out
jmp
outsb
andb
inc
sbb
fildll
test
mov
bound
enter
in
adc
scas
xchg
inc
adc
cmp
jns
rcrb
out
mov
out
sbb
sbb
mov
push
nop
xor
adc
lahf
xor
arpl
fnstsw
or
adc
arpl
enter
shl
jo
lods
test
lods
xchg
mov
imul
sbb
mov
or
stos
bnd
ljmp
mov
loope
and
push
leave
cmp
mov
mov
mov
je
in
add
addr16
mov
scas
pop
shll
jmp
sub
stos
repz
pop
nop
pusha
xor
out
test
sbb
es
dec
or
push
xor
rcrb
outsl
pop
scas
cs
sbb
or
mov
and
push
stos
and
cmp
pop
xor
sbb
enter
jle
out
pop
and
clc
dec
pop
mov
push
cli
xor
cmp
mov
mov
jb
lret
push
into
clc
mov
mov
stos
xchg
push
lea
inc
jae
mov
mov
ret
sub
jle
ss
jle
and
daa
das
mov
mov
adcb
lahf
sarl
cmp
movsl
jl
sub
aas
inc
jg
adc
fistpll
movsb
scas
adc
sti
aam
dec
sbb
dec
xchg
jl
pop
lret
sub
fidivrl
hlt
adc
mov
push
cwtl
gs
or
adc
and
xor
hlt
imul
popl
fbld
aad
ljmp
icebp
cmp
mov
mov
pop
jge
std
jle
movsb
nop
aas
cmp
xchg
adc
test
mov
les
ficomps
pop
andl
movsb
sbb
sbb
cmp
mov
inc
subb
push
mov
aam
jns
fs
stc
pop
addr16
mov
mov
ffreep
pop
sarb
mov
fisttpll
pop
out
sahf
fcompl
in
push
and
cmpsl
scas
iret
xor
mov
int
and
daa
ret
repnz
sub
jl
push
stos
and
jg
cmp
je
stos
cmp
jge
add
xor
mov
jo
test
lea
cmc
cmovno
xchg
in
cmp
pop
cmpsl
ljmp
movl
mov
inc
cmp
outsb
les
idiv
add
adc
lret
clc
and
or
pop
jl
push
flds
inc
cltd
or
cmp
lds
jle
ja
jmp
ja
sbb
cmp
xor
insb
and
cmp
repnz
loopne
jne
cmp
arpl
cmp
mov
xchg
xor
cmp
lahf
adc
notb
xor
data16
lret
scas
int3
jae
sub
mov
je
stos
int
push
sbb
sbb
xor
lret
push
inc
pop
inc
or
push
push
jmp
scas
ljmp
pop
push
pop
mov
xlat
outsb
pop
out
out
mov
repz
mov
mov
sbb
adc
push
insl
pop
pop
cmp
loope
ret
adc
mov
pop
enter
div
dec
lcall
push
push
dec
jae
insb
adc
jne
test
andl
sub
test
fstl
mov
nop
jo
push
fwait
sbb
mov
jae
std
xlat
jns
add
loop
jecxz
popf
leave
gs
aaa
sub
jl
and
push
addr16
mov
fiaddl
adc
pop
pop
arpl
cmc
jbe
pop
mov
imul
fwait
stc
jge
in
inc
icebp
test
or
or
cwtl
sbb
dec
ret
add
fisubrs
lcall
pop
imul
cmpsb
jb
sub
jne
add
or
mov
mov
push
mov
or
xchg
mov
sbb
dec
sub
cmpsl
pop
mov
push
shll
hlt
add
xchg
sub
push
xchg
adc
ret
ja
test
in
ljmp
xchg
sub
pop
sbb
shr
xchg
mov
lret
arpl
push
pop
xlat
jp
xorl
inc
test
mov
cmpsl
out
scas
sub
xorl
xchg
xor
repnz
mov
ss
test
push
test
mov
fists
mov
mov
inc
sub
mov
inc
lret
inc
adc
pop
fisubrs
xor
mov
mov
je
push
loopne
push
xchg
mov
xchg
iret
addb
cltd
xor
mov
mov
jb
into
dec
insb
push
cs
push
rclb
dec
xchg
fildll
movsb
sub
dec
fld
push
pop
sub
mov
add
cli
mov
cltd
sti
gs
xor
sti
mov
test
sarb
jbe
add
movsl
loop
push
nop
das
lret
xor
fsin
out
pusha
pop
imul
mov
rcll
mov
push
movb
mov
xor
dec
sbb
arpl
repz
xor
mov
dec
jp
cmc
lahf
scas
mov
sbb
ljmp
mov
int3
add
sbb
into
out
in
mov
xchg
movsb
popa
pinsrw
mov
sub
idivb
movsb
leave
cmp
sbb
jp
fs
push
enter
orb
inc
or
pop
loope
out
and
add
orl
lods
popa
cld
mov
andl
sti
popf
push
mov
add
repz
test
shlb
inc
test
insb
push
jle
cld
aad
mov
pop
cld
test
imul
jp
adc
add
lret
sti
add
mov
xor
pop
inc
repnz
fisubrs
lret
jge
push
sbb
test
mov
out
fbstp
xchg
push
jmp
int
int3
stos
jns
or
push
aam
in
lahf
jecxz
loop
xor
lock
nop
scas
div
xor
cmp
call
in
add
cli
loop
dec
insl
xchg
scas
inc
ret
push
icebp
inc
mov
sarb
fcompl
lods
mov
clc
mov
int3
ret
inc
add
add
sub
popf
sbb
pop
in
dec
mov
mov
imul
mov
xchg
in
outsb
rorb
xchg
add
mov
xchg
and
sbb
dec
mov
ret
mov
adc
mov
pop
jb,pt
adc
out
loope
test
dec
sbb
jge
sbb
dec
jecxz
cmp
or
inc
stos
push
enter
mov
mov
inc
mov
mov
subl
out
xchg
mov
jp
mov
loope
inc
xor
leave
xor
jge
lret
mov
mov
outsb
fstpt
sub
pop
add
xchg
movsl
push
sbb
push
jmp
cmp
fdivrl
mov
dec
cmp
inc
fs
cmp
pop
xor
inc
mov
mov
pop
inc
xchg
les
mov
clc
sub
jmp
inc
sbb
popa
mov
in
test
cmpsl
pop
stos
pop
repz
add
inc
jle
cmp
push
mov
fcmovnb
mov
rclb
cwtl
and
out
aas
mov
lret
icebp
gs
and
popa
pushf
dec
ret
data16
cmp
lods
pop
dec
icebp
mov
jge
sbbl
pop
loopne
ret
xor
mov
in
nop
cwtl
xchg
outsb
int3
ror
jmp
inc
je
push
out
int
xchg
jg
rclb
in
loopne
or
std
or
push
mov
mov
push
mov
fwait
test
cltd
clc
cs
push
dec
out
sbb
add
mov
icebp
mov
popa
pop
arpl
push
mov
mov
repnz
cli
pop
es
dec
xor
pop
fs
roll
xor
jbe
lahf
mov
push
mull
mov
adc
jmp
stos
xchg
jl
pop
not
aad
call
cmp
push
push
popa
test
cmp
mov
cmpsl
cmp
pop
les
es
dec
nop
add
gs
outsl
pop
ret
mov
push
xor
xor
in
add
jnp
addl
mov
mov
iret
addr16
jp
pop
jns
and
push
aad
lret
or
and
stos
stos
adc
or
cld
adcb
jg
jns
movsb
or
dec
dec
sub
add
or
int
and
dec
fidivrs
mov
or
inc
sti
push
cld
mov
mov
pop
jns
outsb
add
jnp
inc
sbb
adc
jle
clc
gs
cwtl
sub
and
iret
sahf
jmp
aaa
das
push
or
sbb
ljmp
cmpl
mov
adcb
in
adc
jns
sub
hlt
into
jno
sub
lds
lock
cmp
mov
and
shlb
sub
adc
dec
mov
xchg
in
cmp
mov
jne
inc
sti
mov
pushf
jle
jl
hlt
je
and
mov
mov
insl
xlat
pop
or
scas
or
mov
dec
cld
roll
jbe
cmp
les
sbb
outsb
outsl
cmc
rcr
lret
xchg
or
mov
ljmp
or
sub
adc
data16
mov
cmp
inc
mov
mov
mov
xor
dec
out
jbe
push
sbb
jg
and
mov
insl
sbb
nop
or
cmp
jns
daa
into
and
push
test
nop
stc
insb
into
fdivr
mov
das
jns
jecxz
inc
in
inc
out
pop
popf
std
jns
enter
ss
jo
dec
lret
add
push
xor
push
repnz
adc
inc
das
adc
rclb
add
push
sbb
xorb
lahf
aas
mov
mov
outsb
ret
into
fstpt
cltd
shlb
movsb
dec
push
es
inc
call
stc
mov
cmp
dec
insb
mov
int
jp
push
int3
pop
and
ss
mov
and
fbstp
es
jo
and
inc
adc
loope
jbe
jecxz
and
dec
outsl
sub
push
and
xor
dec
arpl
imul
ss
loopne
scas
xor
orb
out
leave
filds
dec
and
outsb
out
xchg
and
hlt
imul
mov
adc
aad
es
jmp
dec
or
pushf
sub
push
push
loopne
cmp
repz
in
jp
test
icebp
loop
inc
push
imul
and
xor
xchg
pop
inc
inc
cmp
push
mov
xchg
inc
ds
ret
xor
dec
inc
sub
inc
cmpl
popf
mov
stos
ljmp
lea
lahf
sti
fcomip
push
inc
pop
ja
adc
loope
add
movsb
js
xchg
ljmp
push
shrl
sub
in
loopne
jnp
in
shlb
rcrb
adc
jbe
pop
cmp
stc
mov
xor
bound
test
pop
sbb
movsb
lea
loop
mov
and
lods
jo
pop
mov
push
test
scas
mov
rcll
pushf
push
xor
push
or
cmp
test
and
pushf
and
dec
loop
in
jne
sub
push
adc
sahf
push
dec
lcall
push
repz
pop
push
and
aam
mov
mov
xchg
imul
dec
jno
rcrl
into
cltd
loope
pop
mov
dec
adcl
mov
sub
popa
bound
stc
movsl
jo
call
pop
loopne
sub
pop
rcll
ss
cld
fldl
int
sub
in
sub
sarl
mov
imul
mov
mov
das
loope
and
cmpsb
lcall
fs
jle
movsb
and
dec
pop
xor
jnp
inc
jmp
sbbl
mov
jb
jo
xchg
in
call
loop
je
sub
jmp
inc
out
jnp
cli
fistl
das
adc
xor
dec
xchg
adc
fistps
leave
sarl
sbb
sbb
cmp
pop
lock
lds
dec
mov
add
inc
inc
mov
mov
jp
push
jl
add
popf
pop
mov
shll
cltd
mov
push
sbb
mov
cwtl
ja
cwtl
jg
jo
xchg
flds
cmpl
and
daa
out
js
pop
imul
pop
sub
add
out
mov
jnp
mov
dec
test
xor
mov
lods
sub
mov
sub
jecxz,pt
mov
pop
jp
add
xchg
sahf
mov
adc
add
ds
push
xor
mov
inc
arpl
scas
mov
pop
enter
rolb
or
pop
pop
push
in
pop
daa
scas
out
push
js
xchg
jg
cld
and
scas
dec
push
les
push
pusha
in
fbstp
mov
stos
cmpsb
mov
sub
iret
imul
jo
mov
enter
cld
jae
jbe
lods
dec
int
lods
in
xchg
out
push
sti
cmp
subl
or
icebp
mov
lret
mov
sub
fidivrl
xchg
in
addr16
push
pushl
mov
mov
pop
outsb
fcomi
mov
orb
pusha
or
xor
fucomp
hlt
or
mov
sbb
dec
repz
mov
fiadds
loopne
mov
xchg
test
or
inc
push
pop
xchg
ljmp
jg
push
adc
inc
aad
shl
inc
sbb
add
fists
sub
imul
and
idivb
inc
push
sbb
in
mov
xchg
cmpsl
inc
add
cli
sub
popa
mov
in
mov
dec
pop
dec
push
push
sub
mov
aam
mov
pop
or
lock
stos
push
push
pop
jg
xchg
xchg
adc
inc
sub
add
push
jne
das
lds
jno
push
mov
xchg
les
out
xchg
pop
imul
dec
push
xor
outsb
rolb
xchg
sub
jns
ja
movnti
leave
xor
js
fisubrs
shl
dec
aam
je
cmpsb
mov
xor
js
jb
cwtl
dec
xchg
sub
cmp
or
cltd
int3
out
inc
lds
popf
add
cmp
xchg
les
cmpsb
or
popa
push
mov
sbb
add
mov
or
out
int3
xchg
popw
out
imul
ljmp
outsl
mov
cmp
adc
add
add
xorb
popa
push
andl
mov
mov
mov
hlt
pop
fistl
ds
adc
dec
add
je
push
daa
xor
jnp
sbb
cmp
push
out
lods
shll
push
lock
out
sbb
xchg
call
clc
lods
push
jmp
mov
divb
lds
lret
and
arpl
push
mov
lds
loop
jg
lcall
mov
mov
push
loop
dec
mov
sub
inc
lods
jp
dec
mov
mov
push
inc
mov
insb
out
outsl
std
fidivl
fwait
xlat
addr16
adc
cmpb
jg
std
mov
outsl
sbb
lods
aad
push
and
adc
pop
stc
dec
cmp
popa
and
lock
sub
lcall
jle
inc
sub
xlat
sub
ret
sub
pop
js
mov
ljmp
int
gs
adc
imul
movsl
clc
jbe
lock
and
jne
jp
fcomi
jecxz
inc
jecxz
fdivl
stos
lahf
lea
ds
ljmp
lods
push
mov
mov
in
push
ja
sbb
stc
and
cmpsl
call
imul
dec
pop
sahf
dec
insl
mov
sub
popa
outsl
stos
xchg
in
fidivs
pop
mov
adc
pop
jle
pop
cmp
cmpsb
icebp
pushf
xchg
or
mov
inc
fsubs
rorl
mov
data16
fwait
movsl
cmc
fs
mov
pop
insb
cmp
adcl
mov
sub
ret
jo
repnz
xlat
repz
jp
xor
push
xor
aaa
inc
leave
cmc
fsubl
int3
sbb
div
or
or
rcr
and
or
jne
cmp
jmp
test
call
add
lods
call
out
cmpsb
daa
int3
std
push
out
cmp
pusha
sub
lods
sub
xchg
xorl
fiaddl
lock
jne
xchg
in
popl
mov
cltd
repz
cli
insl
call
psllq
clc
aaa
mov
dec
je
cmp
add
xchg
stos
push
inc
xchg
scas
adc
imul
icebp
push
mov
aad
test
ja
popf
cmp
fsubl
shrl
sbbb
fnstsw
ds
fs
test
mov
push
icebp
mov
ffree
jge
cwtl
pop
sbb
jnp
adc
insb
or
insl
inc
sub
xor
inc
aam
inc
sar
pushf
jmp
icebp
inc
neg
lods
push
call
out
mov
dec
xlat
in
jmp
int
les
mov
lret
sub
sub
adc
test
outsb
push
and
xor
dec
mov
int
iret
sbb
rclb
inc
jge
ret
inc
sbb
sub
pop
sub
in
and
mov
mov
and
pop
lret
xchg
xchg
ja
xor
popa
and
loope
or
jo
vpavgb
mov
sarb
cmp
push
test
lds
ds
add
testb
add
mov
add
mov
pop
sbb
into
sbb
cmpsl
dec
nop
mov
insl
pop
mov
sbb
mov
pop
xlat
aam
fwait
lret
scas
arpl
insl
testb
jg
dec
sbb
clc
jae
outsl
popa
sbb
mov
imul
add
mov
fdivl
xlat
into
and
pop
fimull
mov
push
xchg
push
jbe
pushf
pop
mov
ljmp
sar
pusha
iret
out
cmpsl
sub
jbe
fsubrp
test
movsb
addb
lods
nop
mov
mov
cltd
sahf
xchg
loop
jbe
iret
data16
ljmp
cmpsb
loop
test
pusha
or
cmp
movsb
adc
aad
pop
flds
cs
aas
ds
sbb
mov
ficoml
and
cmp
repnz
stos
push
mov
mov
ss
add
mov
cli
int3
ds
or
mov
std
jnp
insl
stos
int
or
or
lods
xchg
pusha
fsubrl
jmp
xor
sub
jnp
and
iret
inc
push
pop
aaa
mov
fldt
jmp
xchg
into
cmc
add
adc
cmpsl
mov
sahf
sbb
cmp
jo
test
dec
or
adc
in
gs
mov
outsl
pop
data16
neg
add
mov
or
insb
or
cltd
in
imul
adc
mov
sahf
mov
or
out
testl
push
inc
inc
push
and
and
insb
imul
push
out
lahf
cmp
insl
in
std
test
mov
mov
inc
jns
arpl
push
hlt
mov
push
dec
imul
fisttps
sub
xchg
insb
js
pop
inc
adc
jb
mov
jmp
stc
xchg
jb
jo
inc
mov
int
aad
divl
dec
scas
adc
or
mull
ja
out
pop
loopne
mov
add
xlat
mov
jmp
sub
dec
cmc
or
xchg
mov
in
add
sbb
inc
outsb
shll
icebp
in
or
xchg
jno
jp
scas
leave
jno
hlt
bound
stos
out
addb
mov
gs
push
cmpsl
test
push
hlt
inc
xor
jmp
add
or
daa
jno
or
out
sarl
cmp
inc
push
dec
dec
andb
xor
or
jno
add
bound
adc
es
enter
mov
fiadds
jnp
adc
push
cmp
push
and
pop
inc
lds
pop
inc
test
or
scas
mov
loop
cmp
stc
stos
lods
sbb
aam
or
pop
xor
rorb
lds
aam
movsb
xor
inc
xor
push
cmp
imull
lret
lea
or
lahf
lds
and
scas
and
in
push
push
sti
xor
jle
shrl
cwtl
xchg
mov
push
adc
mov
cltd
popa
fbld
jmp
icebp
fsubrs
sti
xchg
ds
mov
ljmp
lods
sub
push
lods
mov
mov
arpl
aaa
mov
addr16
pusha
xor
pop
or
jg
add
stos
hlt
and
fwait
xchg
ljmp
shl
xchg
and
or
inc
fwait
test
icebp
incb
inc
and
cmp
lds
in
icebp
ja
popl
fdivrl
pop
jg
icebp
aas
rclb
xchg
fwait
mov
adc
ss
mov
shl
mov
aad
arpl
jmp
xchg
xor
loop
scas
outsb
pop
shr
jne
mov
mov
or
inc
fstl
mov
lea
addr16
mov
push
sbb
bound
add
roll
notl
push
lods
imul
push
pushf
in
loope
popa
insb
mov
jbe
xor
push
lock
or
call
repnz
inc
sub
mov
push
out
pop
insl
cmpsl
jl
push
fnstcw
pop
nopl
dec
std
mov
mov
inc
mov
adc
addr16
imul
xchg
sahf
pop
in
clc
jbe
and
idiv
mov
xchg
cld
push
xor
push
xor
jg
or
dec
fbld
shl
fstps
or
call
pop
or
cwtl
xchg
outsl
and
cmp
ja
mov
pusha
xchg
fs
mov
cmp
xchg
dec
cld
add
daa
pop
repnz
cwtl
repnz
sbb
es
in
add
sub
dec
fcomps
sbb
or
icebp
sbb
cmpb
mov
mov
add
push
sub
stos
fisubrs
lock
push
std
sahf
dec
sbb
mov
xor
loope
or
inc
add
inc
jo
mov
xchg
inc
movsb
push
sbb
mov
adc
add
test
aam
push
xchg
jns
mov
in
cld
hlt
faddl
lcall
push
xchg
shl
les
pop
movl
ret
push
repz
cmp
rolb
call
mov
pushf
shrl
popa
xchg
inc
mov
or
rolb
pop
sahf
enter
inc
mov
aas
stc
in
cmp
addr16
fs
insb
or
lcall
imul
jge
cld
lods
shll
int
fadd
repz
add
inc
out
pop
sbb
lock
inc
xor
pop
mov
insl
dec
jp
call
add
jb
mov
in
push
test
out
sub
pop
test
pusha
sbb
cmp
cli
inc
cmp
jbe
push
add
stos
jecxz
sbb
mov
add
test
rcr
mov
ret
push
aam
mov
add
jo
xor
test
inc
fidivl
jbe
es
lods
push
imul
inc
cld
pop
and
add
mov
mulb
sar
and
fisubrl
jae
add
jg
inc
mov
mov
icebp
into
jns
adc
addl
cs
and
pmulhuw
mov
imul
sbb
daa
mov
pop
jb
xchg
mov
cmp
mov
fnstcw
or
insl
inc
fwait
sbbb
mov
in
push
adc
fcmove
xchg
dec
jle
roll
int3
push
sbbl
and
mull
jg
mov
jmp
bound
fwait
mov
sub
orl
push
sub
mov
inc
and
fiaddl
test
mov
call
loop
lea
push
stos
movsb
inc
lcall
bound
dec
inc
test
mov
rolb
fistpl
inc
push
mov
lcall
inc
pop
loop
cwtl
clc
ret
movsb
shr
push
lret
adc
sbb
mov
fidivs
add
mov
imul
mov
aad
push
lret
push
add
pop
out
mov
fwait
repz
aas
out
sub
jnp
push
aam
pushl
mov
repz
jl
fsts
or
call
jp
rcll
cwtl
push
nop
clc
insb
sub
mov
xlat
pushf
jae
jo
les
mov
and
jno
xchg
xor
ds
lea
push
sub
ja
mov
push
fwait
outsb
sbb
daa
dec
jbe
jmp
int3
shrl
lds
repnz
out
pushf
xchg
ja
xor
les
in
ficoml
out
shl
rorl
andb
sbb
pop
xchg
dec
push
fisttps
push
sbb
orl
sbb
xlat
jbe
xchg
jno
movsl
pop
cmpsl
xor
clc
sti
cmp
jne
jl
aad
pop
cmp
movsl
nop
add
cwtl
dec
pusha
or
mov
loope
cmp
call
cmc
test
dec
mov
inc
out
addr16
bound
and
or
xchg
xchg
xchg
in
mov
jae
push
test
aaa
pop
mov
mov
les
les
sbb
inc
xlat
call
sbb
int3
repnz
cmp
jne
icebp
sbb
idivl
cmp
aam
mov
int
cli
test
add
inc
dec
popa
pushf
ret
mov
mov
repz
jns
stos
cltd
repnz
sbb
test
cmpsl
clc
add
and
sbb
pushf
imul
daa
hlt
push
push
aaa
mov
pop
pusha
ljmp
cwtl
cmp
mov
jbe
adc
xchg
mov
xor
lods
pop
out
jp
aad
pop
push
sahf
outsb
iret
cmp
cwtl
in
mov
iret
fwait
mov
dec
jl
sbb
insb
psubd
mov
nop
xchg
cmc
or
xchg
mov
push
pop
cmp
and
leave
inc
mov
add
cmp
pop
push
roll
cmpsb
sbb
aas
ja
aaa
pop
popf
inc
iret
push
xor
adc
rorb
jp
push
add
inc
lret
xor
fwait
dec
pop
mov
push
sub
pop
jmp
push
data16
cmp
ljmp
adc
pop
es
notb
test
xor
pop
loopne
aas
cld
mov
test
in
call
cmp
push
push
pop
or
aaa
das
je
push
mov
jmp
inc
lahf
fmuls
lcall
xchg
or
jg
adc
and
sub
aas
xor
xor
or
int
push
sub
jl
pop
sub
mov
cmpsl
cli
mov
mov
nop
mov
lret
mov
sub
in
popf
loopne
and
setbe
out
gs
inc
push
stc
jl
fs
mov
push
or
xchg
js
pop
add
or
imul
mov
cmp
out
jb
jl
stos
test
mov
leave
hlt
xchg
stc
mov
xlat
aas
jb
or
insl
in
xchg
lret
fcomps
mov
aaa
mov
das
mov
testb
into
pop
shufps
std
enter
lea
pusha
hlt
xchg
aam
adc
cli
dec
mov
arpl
cmp
pop
jge
loope
fdivrl
cmp
pushf
or
push
mov
mov
cmp
xchg
xor
subl
sti
jo
xchg
sbb
xchg
sub
shlb
dec
cltd
and
push
loop
xchg
cmpsl
test
xchg
sbb
fadds
sbb
inc
loopne
fs
push
mov
pop
xchg
daa
movsb
lods
int
cmp
popa
inc
xchg
mov
pop
inc
int
push
jle
mov
and
cmpsl
or
out
aas
jp
adc
in
imul
jns
xchg
jb
xor
insb
idivl
adc
test
jno
pop
mov
push
push
mov
pop
mov
out
xchg
mov
loopne
fwait
ror
push
inc
adc
ffreep
push
push
imul
sbb
stos
mov
out
fsubrs
pop
rcrb
rcr
sub
mov
sub
int
jmp
cmpb
sbb
sub
jo
scas
sbb
stc
arpl
out
push
mov
xlat
aaa
imul
dec
dec
pushw
cltd
dec
sbb
enter
sti
jbe
mov
adc
jge
fadd
and
fstpt
xor
ret
adc
pop
dec
push
jle
int
and
push
dec
dec
fisubl
pop
add
fcompl
dec
and
and
jp
into
out
imull
test
push
es
cmpsl
or
popa
or
in
or
aaa
push
stos
setno
shl
push
sbb
xor
jmp
push
pusha
pusha
test
xchg
lock
arpl
test
loopne
sbbb
fs
ljmp
push
mov
cmc
lods
jb
int
mov
xor
and
sub
add
add
test
in
mov
push
gs
xchg
out
mov
xor
xor
mov
sub
mov
xchg
insl
xorl
inc
inc
cmp
aam
xchg
fwait
push
ljmp
inc
sbb
repnz
jb
notl
test
mov
inc
scas
por
mov
push
stc
mov
and
bnd
les
xchg
mov
jge
push
in
mov
leave
out
mov
add
push
popa
add
cmp
jne
xor
into
stos
pop
add
in
scas
roll
aad
fs
clc
inc
push
das
mov
das
add
dec
pop
sbb
jae
lret
int3
push
sub
test
adc
jle
jl
jbe
mov
pop
jge
mov
test
mov
leave
and
movsb
mov
cmc
loope
mov
jb
mov
adc
cmc
inc
jnp
push
cmc
adc
pop
test
fsubs
add
int
mov
inc
mov
arpl
pop
popa
fldcw
pop
fldcw
lods
inc
pusha
stos
call
ljmp
aad
in
xchg
pop
nop
test
cmp
sbb
pusha
es
jp
cmc
ret
scas
in
xchg
pop
pushf
xchg
mov
pushl
test
int3
movsb
shl
sub
sub
mov
xchg
pop
stc
lock
mov
or
add
xlat
test
stos
hlt
shlb
cmp
or
out
fcomps
repz
int
ret
xchg
inc
xor
pop
mov
cwtl
pop
sbb
add
add
test
cld
cmp
dec
inc
pushl
sarl
jmp
jle
sub
testb
int
xchg
movb
fcompl
std
in
sbb
cmpl
sarb
repz
dec
imul
mov
loop
testl
lds
std
movsb
cld
jne
rcrl
test
adc
pop
hlt
jecxz
ficoml
fimuls
mov
fsubrs
and
inc
mov
imul
clc
mov
cwtl
insl
outsb
nop
pop
lret
or
xor
xchg
and
and
aas
std
mov
fnstenv
int
mov
ljmp
jb
out
add
mov
pop
lods
les
mov
cwtl
ret
lods
sub
dec
stos
inc
leave
insb
cwtl
clc
fildll
cmp
imull
ret
lcall
mov
int
pushw
mov
clc
mov
loop
test
dec
adc
push
dec
arpl
push
mov
add
lods
mov
and
cmp
and
push
jl
fisttps
int
hlt
jne
push
jbe
ret
dec
pop
loope
cld
mov
push
push
or
adc
inc
mov
outsb
dec
popf
repz
inc
pop
push
push
push
cli
enter
lods
pop
add
sar
inc
jge
or
in
xchg
jmp
test
fst
mov
in
xor
or
and
xor
enter
aas
jb
pop
cmp
xchg
fcomps
and
push
negl
mov
inc
repz
xor
int
xchg
and
jns
mov
pop
lcall
gs
cld
and
jg
or
add
cmp
push
aas
adc
cltd
lahf
jae
sti
cltd
xchg
gs
gs
cltd
mov
push
fiaddl
rolb
aaa
push
ja
icebp
test
pop
jnp
jg
lock
sbb
xor
fstps
mov
sub
add
mov
adc
pop
ret
in
mov
pop
fmulp
sbb
outsb
daa
dec
leave
test
and
repnz
mov
inc
jl
mov
imul
and
orl
ds
jecxz
stc
push
cmp
dec
xchg
lcall
test
mov
mov
sub
xor
mov
xchg
stos
jge
movsl
iret
das
cli
xchg
sub
shr
cltd
pop
rclb
ror
add
push
dec
sbb
xchg
add
fs
mov
pop
divl
ret
jbe
pop
mov
mov
or
stos
test
sbb
push
push
mov
icebp
jne
jmp
cmp
in
movsl
mov
addr16
fldcw
mov
dec
mov
pop
dec
inc
movsb
cmp
add
js
movsl
dec
cmc
mov
imul
mov
cmp
adc
mov
nop
enter
mov
add
aas
sti
or
sti
icebp
daa
cmp
in
push
push
jge
pop
dec
add
into
fstl
rcrb
mov
ja
aaa
data16
lret
bound
cmc
les
add
lcall
outsl
ss
push
loope
cmp
cmp
je
addr16
mov
inc
sarl
hlt
jge
mov
push
mov
xor
mov
push
dec
lea
push
adc
popa
xlat
ret
popa
add
push
ret
inc
insl
jae
push
or
lret
mov
stc
stc
push
sub
shlb
nop
sbb
iret
das
dec
jl
int
fs
cmp
adc
cmc
jle
mov
loope
xchg
stc
adc
xchg
daa
or
or
inc
nop
jo
int3
popa
mov
rorb
dec
or
icebp
push
leave
lcall
mov
adc
inc
push
jmp
jge
inc
pop
iret
or
push
pop
dec
xor
and
mov
push
rorl
aas
fimull
jb
repz
add
inc
cmp
call
sar
sahf
mov
in
xchg
push
popa
enter
inc
cld
lods
adc
mov
push
inc
jecxz
and
insb
pop
sbb
adc
lods
adc
addr16
inc
sbb
imul
std
cmpsb
mov
and
sahf
nop
mov
jmp
stos
out
hlt
test
in
sub
hlt
sti
push
aam
fcmovnb
rcll
int
xchg
lea
pusha
fisttps
inc
push
xor
in
and
test
mov
mov
pop
jmp
mov
popa
xchg
jp
adc
loop
sub
fstps
fstp
inc
xlat
ljmp
cvtps2pd
and
inc
imul
and
xchg
push
das
or
xchg
popf
into
push
mov
sbb
xchg
xor
je
jnp
mov
clc
int3
ret
and
mov
loop
lea
sub
cmp
jno
cmpsb
icebp
andb
xor
cmp
loope
jne
xchg
jecxz
xlat
xchg
stos
rorl
adc
pop
mov
adc
popa
cmp
in
fwait
sub
xor
lds
push
jle
outsb
insl
mov
mov
push
shll
mov
pushf
lea
dec
sub
incb
lahf
ds
mov
push
test
cwtl
insl
xchg
and
jns
push
mov
cltd
daa
xchg
inc
lret
sub
or
mov
sbb
xchg
leave
sub
dec
int
inc
or
dec
dec
xor
test
dec
bound
daa
push
jae
inc
push
xchg
stc
sub
call
pop
xor
rol
fs
data16
call
inc
int
sub
cli
in
add
inc
pop
xchg
inc
fcmovbe
icebp
cmp
stc
scas
fidivs
cltd
mov
cld
loop
xlat
mov
mov
push
push
in
int3
pop
pop
daa
mov
and
cmp
and
insl
pop
add
daa
xor
aad
loope
fildl
int3
xor
insl
or
cmp
pop
cmp
cmpsb
popa
aaa
mov
pop
jge
bound
lds
clc
add
fistpl
xor
mov
lea
xlat
add
cli
sti
push
dec
sar
sahf
xchg
lret
dec
stos
clc
add
loope
int3
inc
mov
xchg
cld
or
push
movsb
inc
fcomi
pushf
imul
mov
fwait
pop
dec
push
adc
inc
inc
leave
mov
dec
and
push
call
or
icebp
mov
int3
push
sub
add
xor
inc
mov
jmp
fdivrl
rolb
repz
in
jle
mov
xor
loopne
push
xchg
imul
or
push
pusha
rcr
push
and
aad
stc
pop
sbb
icebp
mov
out
jp
test
jb
popa
mov
movsl
sbb
xchg
in
and
out
faddl
fst
pushf
ss
jge
xor
fsubp
add
mov
jo
xorb
lret
xor
sbb
cmpsl
fs
out
in
mov
rcrl
sub
push
mov
sarb
gs
or
lret
rorb
lret
shll
stos
mov
pop
test
pop
dec
and
dec
rcl
ljmp
pop
cmp
sub
fcmove
inc
and
push
in
xor
fwait
hlt
lds
jge
sub
movsl
jns
imul
inc
adc
mov
dec
cmc
mov
mov
lcall
inc
into
jecxz
xlat
leave
inc
loope
dec
mov
sbb
cmc
jbe
pop
lea
pusha
in
sbb
repz
cmp
icebp
into
jb
fstl
or
push
ret
sub
test
push
lret
mov
and
mov
data16
faddp
cmp
add
mov
data16
jp
and
jae
push
sbb
or
mov
push
cmp
js
push
push
fcmovne
push
cmp
fcmove
sbb
lds
sbb
cmp
mov
in
fmuls
fistl
sub
andl
inc
add
push
loopne
sarl
xchg
sbb
jp
imul
popf
push
xchg
jns
dec
mov
mov
push
lock
add
jbe
out
dec
adc
fwait
xchg
paddw
arpl
jne
cs
shl
shlb
xor
aad
shll
adc
adcb
mov
pop
cmp
sarl
notb
sub
xor
stos
pop
mov
mov
inc
mov
pushl
jns
push
jmp
cs
insl
fldt
popa
mov
int
dec
nop
pop
mov
hlt
or
and
addr16
sbb
mov
lret
lds
lahf
mov
inc
fiadds
push
loope
lret
lret
loope
imul
sahf
mov
das
hlt
add
adc
sub
jae
push
or
inc
insl
call
jge
aas
push
jae
and
ret
or
adc
scas
loop
es
pop
ljmp
add
push
cld
dec
fisttpl
jae
ds
outsl
xchg
xchg
jecxz
mov
mull
push
pop
cmpsb
imul
outsl
mov
jle
ret
push
imul
sbb
mov
cltd
pop
inc
mov
js
faddl
subl
jle
shrl
mov
ret
ja
mov
cmpsl
pop
cmp
testb
push
sub
jg
test
jb
sub
stc
push
stc
out
and
xchg
es
enter
out
jne
jmp
adc
pop
mov
int
xchg
xchg
cli
dec
add
adc
mov
outsb
jecxz
xlat
sbb
mov
insl
inc
nop
in
dec
adc
jl
out
je
cmp
sahf
and
sub
popf
cmp
movsl
pop
pop
push
jnp
subl
mov
sub
and
or
xchg
lds
xchg
mov
ljmp
adc
fidivrl
mov
xchg
inc
test
cmpsb
aas
mov
cmp
inc
jle
inc
push
mov
in
jge
sbb
add
adcb
push
dec
adc
inc
in
jle
cmc
out
mov
mov
out
scas
push
pop
ss
pusha
push
fistpll
jmp
and
std
xchg
repz
jae
mov
push
sbb
loopne
mov
fidivs
out
add
or
sar
inc
pop
mov
pop
inc
adc
adc
xchg
shl
pushf
mov
mov
addl
loop
pop
pop
pop
and
out
mov
jns
and
movsb
stos
out
scas
lods
pop
push
dec
mov
adc
dec
xchg
xchg
mov
push
cmp
js
jo
aas
push
xchg
pop
dec
sti
inc
mov
sub
cld
or
mov
sbbb
sub
mov
ds
shrl
clc
dec
mov
inc
aas
adc
xchg
adc
out
iret
mov
popf
jns
popf
cmp
xor
and
out
push
mov
mov
inc
push
cmp
shl
add
out
xchg
and
adc
lods
adc
icebp
mov
inc
fldcw
movsl
rcl
pop
xchg
xchg
insl
adc
xchg
mov
sub
leave
sub
lret
cli
lcall
mov
adc
jo
add
add
mov
rorb
pop
push
pop
jge
fiaddl
inc
data16
mov
cmpb
je
test
outsl
mov
jnp
clc
sub
or
in
inc
dec
pop
cwtl
inc
mov
xor
enter
stc
fs
xlat
xchg
add
cmpsl
mov
js
call
and
or
mov
loopne
out
andb
push
lret
loop
xchg
add
iret
push
loop
mov
jmp
loope
out
pushf
je
sbb
cld
push
xor
mov
jmp
call
mov
mov
mov
aas
in
push
push
mov
fwait
sbb
jge
les
xchg
pop
jp
fstp
mov
bound
incl
dec
push
repz
repnz
sbb
les
lock
shlb
stos
mov
lock
test
addr16
dec
mov
sbb
sub
xor
shl
dec
mov
pop
pop
retw
dec
pop
mov
and
mov
dec
cwtl
pop
sub
outsl
arpl
inc
xor
xchg
inc
jmp
movsb
lret
and
dec
inc
testb
iret
mov
sub
enter
mov
test
pop
fsubs
push
or
or
adcb
xchg
lcall
movsl
imul
ds
and
cmp
arpl
sub
es
rol
push
lock
inc
jle
adc
add
loopne
out
push
jmp
ds
hlt
jmp
dec
mov
dec
jle
fxch
inc
cltd
ljmp
out
mov
jnp
addr16
add
arpl
pop
add
cmp
sti
xchg
push
aam
jp
add
adc
mov
enter
insl
insb
fcomps
sub
lret
dec
or
lods
into
jno
inc
dec
cwtl
inc
sub
rcl
inc
int
fnstenv
fdivl
lods
icebp
add
fcomps
xor
jb
or
pop
jg
mov
jecxz
or
lret
sbb
sti
mov
cmc
jmp
mov
pop
in
adc
mov
in
pop
sbb
jg
inc
mov
jmp
leave
mov
pop
cli
cmp
cmp
cli
lcall
inc
xchg
sahf
movsb
lds
out
inc
ss
inc
lahf
movsb
es
fdivl
push
mov
lea
jno
dec
sbbb
test
pop
sbb
mov
inc
ja
dec
inc
sbb
gs
push
outsb
insl
in
cmp
imul
xor
sub
repnz
mov
lea
test
mov
push
mov
xor
outsl
pushf
nop
sti
pop
aam
jmp
jecxz
add
push
repz
subb
lds
and
into
out
push
push
movsl
clc
sub
nop
stos
dec
jno
inc
cld
push
xchg
push
scas
mov
test
mov
dec
ja
jns
sbb
sahf
hlt
pusha
xor
movsb
int
dec
and
aaa
mov
loopne
and
movsb
push
mov
pop
cmp
jmp
sub
mov
adc
sahf
jne
test
ret
xchg
lret
sub
fidivrs
sub
jno
sbb
addl
lret
xlat
adc
add
jnp
stos
fldl
push
xor
dec
lcall
es
xlat
cli
scas
adc
pop
jbe
xchg
loope
push
jns
stc
adc
data16
addr16
ror
jne
cs
pop
ret
dec
cmp
lret
push
out
push
ljmp
outsb
data16
push
stos
and
in
jp
test
lea
cltd
push
ljmp
int3
mov
dec
mov
push
xchg
inc
loopne
mov
shlb
mov
mov
subl
sbb
loope
cltd
push
dec
data16
test
xchg
in
sbb
in
add
jb
push
test
inc
inc
sbb
fcoms
repnz
in
rcll
imul
adc
ret
push
jo
and
leave
adc
das
and
testb
push
lcall
adc
call
jbe
and
repnz
bound
pusha
pop
cmp
jp
or
inc
stc
lods
inc
pop
dec
push
mov
insl
fwait
lahf
mov
xchg
mov
loop
in
push
push
cld
cmpb
cmpsb
fimuls
stc
lds
and
outsb
jb
insb
and
cmp
sbb
mov
ret
and
push
xor
push
mov
scas
mov
mov
mov
outsb
out
cmp
inc
push
cmp
jnp
popa
pop
or
pop
movsb
xchg
imull
shr
lods
dec
int
mov
lcall
pop
dec
mov
lds
adc
pushf
imul
lea
push
mov
lret
idivb
stc
clc
sub
imul
add
dec
xchg
lods
cmpsl
sbb
packssdw
dec
ficoml
inc
mov
jbe
nop
leave
cld
mov
daa
xchg
mov
xchg
repnz
std
jno
fwait
test
xchg
add
out
loop
inc
ret
mov
jbe
xchg
and
or
dec
lea
fsts
pop
jmp
outsl
icebp
fsubrs
add
clc
fcoms
pop
into
les
out
mov
imul
add
out
cli
mov
mov
sti
mov
jb
push
cli
out
js
push
cmp
push
in
test
mov
adc
loope
dec
fwait
movsl
ret
jo
out
push
in
loope
push
test
adc
dec
shlb
xor
lahf
enter
jo
out
mov
in
or
pop
lock
scas
imul
pop
test
dec
std
mov
mov
pop
test
mov
push
addr16
aas
inc
mov
icebp
mov
and
sar
ds
dec
in
call
ret
test
mov
movsb
test
jbe
daa
addl
lods
es
repnz
pop
insb
push
lods
dec
sub
cmp
ret
jae
stos
mov
and
mov
mov
fiadds
les
mov
adc
xlat
dec
stos
pusha
ret
call
pop
cmc
sbb
lods
mov
mov
test
mov
xchg
add
adc
fidivs
jae
and
adc
imul
cmpsl
aaa
jnp
aaa
jno
ljmp
les
ds
sub
lods
out
ret
out
jne
ljmp
setbe
fucomip
or
out
add
sarb
dec
push
lods
pop
fistl
cmpsl
pop
jo
imul
lcall
test
mov
jg
push
movsb
popf
adcb
adc
xlat
mov
sbb
stos
xchg
xor
out
jne
or
lahf
sub
inc
sti
nop
ficomps
jge
xchg
mov
lods
mov
aas
mov
adc
cmpl
jmp
icebp
inc
mov
in
lahf
push
pop
dec
pop
dec
cmp
xchg
mov
aas
ret
push
lahf
or
lea
int3
mov
scas
shlb
sarl
mov
cwtl
mov
adcb
sub
and
inc
jnp
ja
lock
push
incl
sub
popa
mov
mov
mov
cmpsl
in
mov
shll
pop
xchg
les
out
cmp
and
ret
push
mov
inc
lods
js
cwtl
xor
out
fcmovnbe
push
jmp
out
mov
xchg
push
and
pop
dec
stos
movsl
cmc
sbb
xlat
sti
inc
jo
in
push
inc
es
out
jmp
xchg
push
mov
xorl
sub
test
imul
inc
fstps
pop
add
rolb
rcrl
or
push
sqrtps
push
mov
sbb
xor
std
sbb
fcoms
fmull
cli
ds
mov
lcall
jg
test
dec
dec
jp
xlat
mov
movsb
cmpsl
mov
rcll
stos
lret
ret
fcmovnbe
jmp
dec
pop
and
xor
pop
or
xchg
es
and
cmp
int
fnstcw
inc
out
cmc
xlat
cmp
mov
adc
movsl
inc
jg
and
int3
dec
dec
push
xor
insl
dec
push
sbb
scas
popf
xor
inc
cld
mov
test
push
push
push
inc
inc
scas
aam
xlat
mov
bound
mov
xchg
lret
test
jns
mov
nop
push
add
movsl
xor
dec
popf
and
cli
pop
pop
pop
mov
or
push
inc
jb
push
rolb
dec
cwtl
mov
rorb
push
testl
imul
test
rcll
imul
ficompl
pop
push
or
mov
mov
mov
sarb
push
out
and
enter
pop
call
int
mulb
sbb
movsb
clc
inc
cmp
or
cs
out
pop
scas
loopne
shlb
pop
shll
and
shrl
mov
fstpt
inc
lcall
jle
pushl
jle
stos
cmp
or
or
hlt
fldcw
dec
loopne
insl
rep
hlt
jne
rcl
andb
inc
and
add
aas
xchg
mov
icebp
xor
sbb
les
xlat
std
cld
stc
pop
inc
hlt
push
jp
stos
popf
pop
push
fcoms
lret
bnd
adc
sub
adc
dec
mov
mov
fbld
xor
inc
inc
mov
test
push
loopne
popa
dec
imul
xchg
lahf
inc
push
or
aaa
sub
and
lcall
mov
mov
das
fisubl
mov
lea
fdivs
push
jbe
sub
adc
xlat
jae
loopne
andl
push
pop
and
pop
lods
jecxz
sub
xchg
mov
sbb
in
sbb
sub
and
repnz
jle
call
dec
daa
and
add
je
ror
xchg
loopne
dec
movsb
jmp
rcrl
sub
mov
jbe
mov
jg
repz
ret
ret
jnp
xlat
xchg
jl
push
push
inc
shlb
pop
and
mulb
pop
sub
adc
push
repz
and
sub
and
xchg
pop
js
lock
push
es
dec
cli
int3
ret
cmpsb
lods
push
mov
mov
cld
daa
push
cmp
shrb
cmp
inc
and
out
ficomps
call
add
les
dec
jg
fisubl
lret
addr16
ja
mov
mov
hlt
push
xor
push
mov
jp
and
cmpsl
xor
sbb
mov
je
push
es
sarl
pop
loop
dec
mov
ret
test
or
push
negl
jmp
inc
sbb
repz
lcall
outsb
mov
mov
imul
xchg
jno
leave
insb
in
dec
cmpsb
push
shl
cmc
xlat
cli
shll
ret
call
movsb
and
scas
mov
cmp
mull
ret
cmp
daa
mov
int
sub
repz
mov
pop
ret
push
lock
jo
xchg
pop
mov
push
xor
andl
pusha
mov
cmp
adc
adc
insb
out
loop
or
sub
adc
xchg
pushf
push
dec
dec
stc
xor
or
or
or
imul
push
xor
into
int3
out
aad
inc
out
adc
adc
aaa
jg
test
fs
sub
daa
push
cmp
cmc
mov
cld
push
sub
mov
rorb
pop
mov
push
aam
ret
scas
filds
sub
leave
aaa
gs
mov
mov
mov
sub
outsl
and
rorb
inc
aam
cltd
sbb
psubw
pushf
pop
adcb
movsl
jp
lods
std
ret
lcall
insl
repnz
enter
fisubrs
pop
and
clc
fwait
cmp
ret
stos
push
out
sub
pop
fwait
out
or
or
mov
sub
sbb
add
and
outsl
lahf
lcall
inc
sbb
mov
sub
xor
push
dec
popf
mov
fstl
popf
adc
jge
cmc
cmp
scas
movsb
jmp
dec
rcll
and
mov
push
or
inc
and
sbb
mov
sarl
imul
pop
in
ja
pop
jecxz
in
aaa
jo
inc
orl
mov
loop
insl
push
out
xchg
xchg
push
mov
lahf
mov
adc
loop
ficomps
in
adc
bound
sbb
lock
mov
or
cmp
in
mov
push
movsb
orb
push
std
daa
and
jno
sahf
sub
sub
rol
mov
clc
shll
xor
andl
scas
cmc
adc
mov
cmove
sarl
subl
loope
nop
pusha
sti
dec
aaa
mov
cmp
adc
mov
push
mov
stos
outsl
mov
lock
fbstp
stos
test
aad
mov
mov
aas
repz
mov
xor
cmp
scas
mov
lods
leave
repz
cld
mov
das
mov
ret
jg
out
xlat
push
xchg
push
lods
scas
mov
loope
xor
imul
xchg
push
dec
movsb
loop
add
cmp
adc
imul
popl
xchg
pop
fnsave
movl
mov
push
ja
prefetch
cmp
jae
ja
sbb
mov
orl
out
or
pop
test
aas
ljmp
aas
je
je
mov
xor
cmp
shrb
sbb
aam
out
xchg
push
in
es
or
outsb
mov
test
mov
movsl
xchg
sub
and
lds
and
or
dec
repz
int
inc
repnz
jge
call
and
enter
hlt
xchg
enter
cmpsl
cmp
outsl
rol
add
fs
xchg
mov
xor
sub
outsl
mov
mov
insb
out
sub
xor
aam
xor
sbb
cld
inc
ret
ljmp
test
mov
out
xchg
add
sub
and
test
repz
xchg
cmc
es
mov
sahf
scas
fsubl
lock
sub
sbb
mov
pop
rcrb
or
and
adc
sub
and
stos
arpl
adc
sbb
mov
dec
jmp
int3
iret
or
rclb
pop
cli
jp
cld
lock
inc
push
xchg
call
pushf
sti
rcr
cmp
mov
or
cwtl
push
inc
out
sub
mov
lcall
sbb
xlat
cmpsb
testl
cs
clc
dec
add
enter
add
push
std
js
cmpl
xor
jecxz
add
rolb
out
aaa
int
push
and
lahf
int
nop
dec
sbb
es
movsl
ljmp
nop
loope
cmpsb
mov
es
in
bound
xchg
scas
push
push
cmp
fs
mov
pop
incl
fwait
pop
mov
movsl
jge
popa
stos
pop
cmpsl
or
pop
repz
add
pop
push
enter
sbb
shll
je
xchg
into
cmp
mov
into
mov
jno
popa
pop
call
shrl
mov
sbb
roll
iret
in
adc
les
cs
aam
cs
shrw
pop
inc
jnp
xchg
mov
leave
lods
pop
sbb
ror
inc
cmp
xchg
inc
xor
pop
out
outsl
pop
sbb
add
cmpxchg8b
int3
leave
mov
loope
test
inc
lahf
movb
xchg
fsts
jo
dec
cld
sarb
iret
sub
mov
loopne
inc
rcrl
dec
mov
insb
dec
adc
daa
bound
outsb
fidivrl
inc
std
adcl
scas
xor
ja
hlt
out
in
inc
mov
sub
jge
or
outsl
das
cmc
mov
sbb
ja
pop
push
adc
aam
insb
jmp
cs
pop
into
daa
imul
jae
popfw
lret
cli
test
hlt
test
es
dec
mov
fidivl
in
into
jnp
jecxz
sub
jmp
mov
pop
or
fldl
loop
sbb
cmc
sti
lods
loopne
pop
stos
out
int
pop
ds
stos
gs
out
xchg
dec
xor
mov
sti
mov
stc
cmp
xchg
movsl
push
pop
icebp
sbb
inc
out
sbb
clc
add
in
jecxz
jb
inc
mov
or
bound
inc
sbb
mov
mov
jl
pop
and
cmpsb
imul
les
shll
lock
adc
mov
inc
lahf
repz
ljmp
and
mov
push
outsb
mov
cmp
stc
cmc
sbb
mov
pusha
inc
ficomps
in
div
outsl
in
pop
jb
sbb
pop
out
pop
jecxz
sbb
ss
xchg
sub
ljmp
shr
mov
jmp
mov
jl
jecxz
mov
lahf
xchg
dec
or
insl
push
inc
cmp
lea
dec
push
fs
add
mov
xlat
les
cmc
fildll
movsb
dec
mov
test
cmp
push
aam
pop
mov
aad
fisttps
sub
cmc
test
xchg
sbb
adc
push
xchg
lret
mov
mov
jl
fwait
mov
mov
push
gs
mov
dec
cmc
inc
xchg
jl
xchg
xchg
insb
popf
mov
or
stos
xrelease
cmp
es
cli
mov
cwtl
lret
fcomps
roll
stc
xchg
sbb
sbb
jb
push
lods
cmpsb
iret
in
leave
jmp
and
ficoml
outsl
dec
rcrl
int3
push
das
in
fdivrs
dec
repz
push
test
repz
repz
pop
andl
mov
jge
pop
mov
lret
mov
sub
push
into
inc
cmp
sarl
mov
popf
and
loopne
aad
mov
cmp
fsub
push
pop
sub
inc
pop
call
int
mov
sub
cli
pushf
or
xchg
adc
cli
test
ror
push
sbb
mov
cmpsb
mov
or
loopne
in
jl
ficompl
fwait
jae
sub
rol
aad
cld
xlat
inc
mov
xor
dec
mov
popa
mov
mov
test
stos
jmp
mov
aas
out
idiv
roll
and
cwtl
adc
pop
jns
divb
shl
fistpll
roll
ucomiss
push
sti
out
mov
aam
sub
adcb
jecxz
das
pop
int
xor
mov
push
popa
xor
dec
rcrb
xchg
scas
in
dec
sub
push
push
out
mov
jo
shl
movsl
fisubl
pop
jbe
push
mov
shlb
sub
sub
xor
jns
je
rclb
mov
inc
icebp
mov
xchg
add
push
bound
sub
xchg
add
imul
fidivrl
push
clc
test
jmp
adc
xchg
mov
add
testb
xchg
lock
shrl
repz
or
icebp
push
ss
fimull
push
mov
mov
test
sbb
nop
sbb
adc
mov
jne
jbe
pop
dec
adc
test
push
lret
outsl
xchg
and
sub
ds
sar
int3
out
pop
adc
inc
dec
outsl
sub
cmp
cmpsl
push
int
scas
and
lock
pop
xchg
sub
inc
cmpl
popa
or
add
repnz
mov
pop
test
pop
jno
pop
or
or
lds
fidivrl
push
push
in
pop
jecxz
mov
in
lea
test
mov
int
call
mov
ss
pusha
pop
ljmp
sub
jbe
sbb
and
lods
adc
lret
sahf
aas
shrl
incl
jno
xor
or
outsb
mov
negl
pop
inc
and
or
adc
adc
daa
fs
xchg
sti
rorl
sbb
icebp
cmp
mov
xchg
jg
jno
imul
add
mov
test
push
imul
mov
ret
push
jnp
inc
mov
xchg
dec
inc
scas
gs
cmp
or
jmp
loop
push
call
stos
imul
test
dec
push
lods
xchg
add
jmp
cwtl
lds
punpcklbw
dec
cmp
sub
pop
rcrb
dec
mov
or
push
sbb
es
sbb
xchg
xchg
push
push
je
movsl
adc
dec
jp
rolb
cld
mov
cmp
cmp
js
loope
int3
xchg
pusha
mov
int
pop
lods
push
xor
mov
xchg
and
call
popa
xchg
cmp
pusha
jecxz
cld
push
test
mov
dec
test
jb
lea
sub
into
mov
push
scas
and
mov
mov
insl
xchg
push
adcl
outsl
sbb
bound
ret
cs
in
inc
outsl
fwait
shl
xor
push
mov
xchg
mov
xor
js
pop
xchg
inc
dec
jmp
or
loopne
jl
fnsave
pop
hlt
pop
xor
clc
popa
fbld
xlat
or
lods
mov
out
jo
mov
xchg
jmp
imul
dec
mov
stos
pop
inc
add
inc
pusha
ficompl
pop
jge
pop
loope
mov
out
ljmp
mov
stos
fldt
jno
lret
add
mov
enter
dec
mov
mov
lea
fwait
or
pop
and
add
sub
mov
or
push
pop
aas
daa
jecxz
loop
and
lea
dec
or
ljmp
jae
loop
xchg
mov
rol
cmp
jno
inc
les
out
and
mov
enter
cmp
mov
pop
mov
dec
idivl
lcall
xlat
mov
stos
xchg
inc
pop
pop
roll
popa
repz
pop
mov
add
cmpsb
mov
test
xor
xchg
cmc
mov
gs
push
mov
cmp
test
stos
mov
fldl
pop
or
xchg
bnd
adc
inc
push
addr16
popa
jnp
stos
sub
pop
orb
addr16
inc
lahf
xchg
or
and
sbb
rcrb
adc
push
hlt
push
pop
dec
mov
mov
sbb
add
add
addb
push
loope
les
sbb
jg
mov
sbb
pop
push
insl
repz
inc
ljmp
test
fsubr
inc
pop
stos
and
insb
add
mov
push
and
shlb
or
nop
test
jl
aas
sbb
lcall
cmpsl
les
cld
or
sti
or
sti
pushf
cld
inc
cmpsl
ljmp
loop
into
jne
jg
insb
out
mov
xchg
repnz
shlb
dec
and
pop
xor
lret
sub
in
in
sarb
adc
mov
popa
mov
sub
push
xor
add
andl
data16
testl
cmpsl
es
hlt
insl
push
add
jle
arpl
cmp
dec
daa
icebp
in
push
xchg
dec
pop
rorb
adc
ljmpw
pcmpgtd
ror
pusha
fbstp
push
leave
adc
movsl
add
sub
test
filds
movsl
data16
push
adc
cmp
lea
dec
sub
push
sahf
sub
fisttpll
xor
clc
je
mov
lcall
mov
loope
lret
mov
fs
sbb
jbe,pt
cmp
cwtl
arpl
adc
pop
out
in
stos
cld
jmp
dec
cmc
inc
pop
inc
ljmp
xor
sbb
icebp
rorl
shlb
and
dec
out
and
pop
aaa
in
out
xor
outsb
sahf
hlt
fcoml
cmp
imul
xor
mul
int3
xchg
js
loop
je
pop
sub
pop
ja
mov
sbb
fnsave
aam
cmovne
repz
xchg
inc
outsb
cmpsl
les
add
mov
add
push
mov
aad
out
int3
das
in
add
sahf
movsb
adc
cmpsb
aaa
or
mov
inc
mov
pop
ret
and
ja
pop
sub
xchg
loopne
add
test
xchg
mov
cs
sbb
ljmp
or
and
jg
mov
xchg
push
mov
in
push
xor
les
dec
xor
js
xor
mov
adc
cmpsl
xor
les
mov
in
cld
leave
pop
xchg
mov
mov
jb
mov
cmp
cmp
sbb
cmp
xor
ljmp
dec
out
xchg
jecxz
icebp
test
clc
adc
mov
xchg
test
outsl
cmpsl
cmp
imul
ret
imul
dec
sbb
mov
addl
mov
enter
adc
outsb
or
adc
pop
xlat
push
mov
mov
cmp
stc
out
clc
rclb
sbb
ss
outsl
mov
push
jecxz
dec
lea
dec
xor
daa
and
push
mov
inc
gs
mov
jmp
sahf
loop
push
cmp
lods
jge
popa
fwait
lea
xor
sti
inc
imul
xor
idiv
add
and
dec
movsb
sub
inc
repz
cwtl
jne
and
stos
insl
mov
adc
adcb
lods
cmp
push
pusha
in
mov
negl
cmp
mov
mov
jno
cld
out
pusha
pop
add
sub
sahf
mov
out
icebp
cmc
in
xchg
pushf
cmc
mov
jge
mov
xor
mov
out
es
pop
cmpsb
roll
cltd
rclb
push
pusha
pop
pop
sti
xchg
and
cmp
in
xchg
cwtl
sbb
lcall
pushf
mov
xor
xchg
xchg
xchg
fstpl
loop
add
out
nop
jae
fwait
fwait
xor
adc
sahf
adc
in
pop
adc
sbb
out
sti
in
test
pop
xlat
adc
xchg
xchg
mov
into
mov
loop
incl
das
jmp
sub
mov
dec
andb
xor
dec
mov
lods
lcall
jno
lcall
popa
es
adcb
data16
rcrb
stos
mov
push
mov
xchg
xchg
enter
ret
stos
jg
scas
sti
sbb
ljmp
add
aaa
sbb
popa
call
and
incl
or
sbbl
out
lock
popf
fs
aas
xorl
xchg
add
out
lahf
ljmp
and
pop
enter
shrb
pop
mov
pushf
pop
fwait
test
aam
and
pop
jo
popa
dec
dec
xorl
fistpl
xor
cltd
sbb
xchg
push
jmp
cmp
sbb
or
push
cwtl
push
jle
adc
adc
mov
ja
push
add
ret
mov
cld
cmp
sbb
or
add
call
xor
cli
mov
lret
pusha
jno
xor
adcb
sub
std
add
mov
stc
push
xor
js
fadd
jp
jae
adc
xchg
mov
adc
push
stos
cmpsb
mov
cld
pop
cmp
ss
imul
ret
mov
add
shll
inc
fsubrs
dec
repnz
arpl
mov
cmp
and
and
xor
or
mov
into
and
dec
sbb
out
lret
cmp
clc
cltd
ss
add
jbe
data16
xor
popf
or
sub
cwtl
sahf
repnz
push
clc
test
pushf
xchg
mov
aad
inc
xor
inc
pop
dec
xchg
scas
cmp
shl
scas
in
sub
inc
or
inc
mov
jp
add
xor
lods
pusha
in
dec
lahf
push
mov
fsubr
xchg
mov
xchg
adc
sbb
adc
cmp
inc
and
push
xor
data16
ljmp
pop
mov
sub
mov
push
push
add
pop
daa
inc
out
loope
sahf
and
pop
push
pop
cmp
push
add
lcall
nop
ds
or
scas
jns
push
icebp
movaps
push
pop
outsb
sbb
add
std
loope
cmp
jmp
push
leave
jbe
adc
cmpsb
xchg
bound
inc
add
mov
loop
cs
sti
adc
sar
dec
xlat
mov
cli
call
cmpsl
imul
aam
mov
jge
rorl
jne
sub
xchg
jae
test
lds
jmp
test
adc
into
and
movsl
mov
jge
ror
xchg
in
mov
out
fs
lahf
inc
jno
movsl
lea
sub
stc
jne
mov
mov
icebp
push
mov
insl
sbb
mov
jmp
imul
imul
sbb
loopne
cld
mov
sbb
sbb
sti
arpl
std
jg
test
sahf
enter
insl
mov
repz
int
test
ss
fstl
cmc
mov
fcomi
dec
and
in
adc
mov
mov
or
outsb
push
xor
jecxz
nop
sahf
push
mov
cmpsb
repz
popa
addb
sti
sbb
inc
stos
fnsave
das
lcall
add
dec
inc
in
fs
dec
enter
movsl
mov
jg
mov
test
cmpsl
dec
in
pop
dec
and
inc
stc
push
outsl
xor
sbb
es
adc
mov
test
push
es
cmp
daa
lret
les
sbb
ficompl
or
mov
cmp
rolb
add
les
mov
adc
mov
jns
lret
jmp
addr16
call
jno
shr
inc
int
jg
xor
std
jg
add
outsb
dec
inc
and
insb
sti
push
lahf
pop
lods
xchg
and
mov
adc
push
mov
test
sti
adc
sarl
jbe
aad
dec
clc
in
jbe,pn
cmp
fcompl
and
cmp
mov
movsb
adc
outsl
add
xchg
xchg
pop
mov
pop
repnz
xor
lock
push
push
push
pop
jge
add
sub
ljmp
sbb
rclb
gs
cmp
cmpsl
xor
sub
in
push
incb
add
shll
js
leave
mov
decl
mov
stos
adc
hlt
lds
sbb
cmpsl
lret
jge
insl
addr16
xor
jo
pop
sbb
mov
adc
dec
fistpll
jecxz
les
push
mov
cltd
mov
movsl
int3
push
xlat
pop
pop
imul
repz
cmc
sub
dec
mov
int
dec
mov
jo
shll
aas
add
pop
jbe
repnz
mov
mov
gs
adc
jl
sub
daa
push
pop
repnz
pusha
leave
stc
add
sub
loope
inc
jp
bsr
add
jne
inc
popa
insb
push
pop
jle
mov
xor
sub
mov
cltd
sbb
xor
icebp
scas
push
adc
adc
icebp
sti
pop
mov
jl
and
mov
add
pop
test
mov
in
movsb
lods
lcall
lahf
cs
pusha
xor
or
dec
mov
icebp
lret
and
inc
mov
outsb
packsswb
xor
insb
mov
inc
fs
jbe
mov
outsl
pop
sbb
mov
outsb
imul
ret
pop
sub
cmp
mov
push
mov
mov
enter
push
movsb
adc
js
push
ret
pop
mov
mov
test
jle
cmp
rcrl
notb
mov
popa
or
aam
in
fmull
clc
iret
mov
xchg
fs
stos
rcrb
je
sbb
pop
pop
inc
xor
cmp
out
lcall
js
jl
mov
iret
push
push
cmp
daa
aas
sub
js
aaa
adc
adc
mov
adc
cmp
pop
mov
push
shll
mov
and
jmp
push
add
inc
fldenv
pop
fldcw
and
pop
mov
fs
and
mov
int3
cmp
jmp
cmpsb
orb
cmc
xor
iret
out
cmp
pop
repz
lcall
mov
mov
xchg
test
sub
aas
shll
out
xchg
jmp
sub
xchg
inc
jp
adc
fidivrl
fdiv
dec
aad
daa
inc
loop
jns
loopne
cmpsb
fs
jp
fwait
mov
cmc
xchg
mov
jge
mov
jno
cmp
mov
cwtl
mov
mov
loop
cltd
in
push
bound
lods
ja
imul
jmp
sbb
nop
dec
xchg
jg
cmp
sbb
clc
pop
aas
push
xor
jnp
decl
in
movsl
jbe
popf
pop
iret
orb
jae
aas
sbb
sbb
mov
fwait
dec
jl
jmp
xchg
leave
les
push
popa
push
push
out
adc
sub
inc
insl
pop
push
or
mov
sti
push
and
ds
sub
jl
dec
sub
divb
fisubrs
mov
adc
inc
out
dec
mov
dec
inc
inc
mov
mov
push
ss
push
fldcw
adc
jae
stc
push
pop
xor
cld
lcall
adc
loop
std
dec
cmpsl
mov
mov
xchg
add
fwait
xchg
repz
fildl
arpl
and
in
lods
sbb
inc
aam
add
mov
ret
fsts
fcoms
aad
or
or
cmp
ljmp
mov
scas
xchg
xor
sarb
fsubl
ret
xor
ret
jmp
jbe
mov
pop
lahf
icebp
or
test
fists
dec
out
mov
test
or
bound
dec
jns
adcb
subl
enter
stos
call
dec
pextrw
stos
mov
xchg
std
and
into
mov
pop
gs
out
dec
loope
mov
mov
or
inc
mov
push
gs
cld
pop
sbb
lock
lcall
aam
dec
outsl
mov
xor
sbb
imul
pop
lret
outsb
cmp
push
sbbl
sar
jbe
jp
addr16
leave
xor
aam
stc
nop
fs
xor
jmp
cmpsl
mov
lods
sub
jae
and
mov
and
cmp
arpl
add
outsl
mov
lock
ja
adc
in
jae
add
mov
add
and
and
bound
adc
aas
test
je
std
mov
push
jge
jb
insb
leave
dec
cmp
mov
cs
cltd
pop
lret
lock
xor
into
ret
fstl
mov
sub
mov
cwtl
jo
and
in
out
addl
and
addb
dec
pop
adc
adc
push
and
nop
mov
ljmp
mov
pop
pop
or
leave
dec
push
mov
repz
jp
lock
cmpsl
push
push
jg
loopne
lds
out
mov
mov
xor
in
cmp
subb
das
jecxz
mov
cmpsb
aaa
xchg
jge
negl
idivl
bound
mov
xchg
das
push
movsl
adc
cwtl
pop
imul
mov
pop
insb
sti
dec
push
ja
or
or
mov
sbb
call
mov
das
in
sub
push
and
dec
xor
jg
js
jo
test
mov
adc
outsl
jg
dec
test
adc
subb
xchg
cmc
out
jnp
and
test
jno
gs
cwtl
xor
in
vcvtpd2psy
leave
push
or
mov
mov
mov
jge
mov
or
shlb
xchg
clc
mov
jecxz
push
push
shr
aad
lea
adc
xchg
std
test
inc
mov
cwtl
aas
imul
dec
in
push
inc
push
mov
xchg
pusha
aad
stc
in
addps
lret
in
gs
or
xchg
mov
and
inc
cltd
enter
xor
dec
inc
inc
rcl
jo
cmc
mov
sar
mov
lds
mov
pop
xchg
stc
mov
sbb
icebp
cli
and
test
inc
test
in
ret
cmp
mov
rorb
push
push
jno
es
outsb
test
repnz
pusha
sti
fdivr
lea
xchg
jb
mov
fbstp
scas
add
stos
pushf
adc
push
js
push
std
test
call
aam
sub
push
push
call
sbbb
out
sbb
jg
add
je
lcall
pop
cwtl
fmuls
addr16
ficomps
jge
jae
dec
fldl
jb
mov
mov
movsb
fwait
cmp
inc
rolb
cmc
lahf
lock
add
add
lcall
jl
out
mov
jno
xor
cmp
adc
jns
jnp
outsl
sbb
cld
insl
cltd
xchg
stos
call
in
cmp
imul
cwtl
push
lret
ss
insl
dec
imul
inc
insl
jnp
jp
stc
dec
pop
pop
arpl
jl
dec
dec
ja,pt
xchg
loop
pop
xchg
adc
aam
cmp
mov
or
das
rcrl
rclb
dec
sti
add
pop
cmp
or
sbb
fdivrs
test
sbb
lods
out
xchg
xchg
clc
sbb
and
je
xor
mov
push
std
dec
in
pop
lret
roll
push
inc
sahf
cmc
das
nop
out
pop
lods
mov
mov
and
fs
out
or
push
cmp
and
cmp
stc
ds
mov
pop
repz
shl
ss
in
jb
lret
rcrl
dec
pop
push
jb
push
pop
pop
imul
aad
rorl
inc
xor
fnstenv
xor
push
or
xchg
fwait
inc
pop
ret
movsb
loope
pop
jnp
mov
cli
mov
iret
and
gs
push
fldcw
push
add
into
lock
sti
sub
pop
push
cmp
push
out
fcoml
or
outsb
loope
insl
inc
ror
mov
inc
sbb
pop
aaa
or
add
inc
lock
add
mov
ret
xlat
pop
pop
or
mov
adc
daa
rcll
movsl
in
sub
dec
rol
movsl
enter
mov
mov
cltd
cwtl
inc
push
jno
stc
mov
push
add
mov
lock
js
mov
insb
insl
mov
sub
les
lods
mov
int3
inc
sbb
or
dec
fsubrl
or
cmp
xor
les
jno
inc
mov
xchg
imul
leave
xlat
inc
ds
adc
or
sbbb
pop
and
stos
call
popa
or
xor
jo
xorl
fcmovbe
inc
mov
pop
lods
mov
jo
aaa
mov
cmp
mov
jge
cmp
mov
xor
jle
lahf
xchg
cltd
jns
push
lret
adc
cmc
hlt
into
fidivl
stos
aas
lock
jb
push
sub
and
mov
mov
subb
add
jbe
jno
mov
push
pop
sahf
cmp
adc
or
jnp
icebp
pop
xor
jno
gs
stos
adc
data16
dec
decb
and
mov
loope
je
negb
mov
inc
out
mov
pop
and
clc
cmp
mov
sahf
mulb
mov
cli
sbb
jecxz
mov
mov
xor
pop
adc
jecxz
fcoml
and
fcompl
lahf
aad
aaa
popa
and
push
aas
out
push
mov
jmp
scas
cmp
in
lods
data16
inc
jge
push
cmp
imul
push
imul
inc
mov
cmpsb
pop
lret
mov
xchg
adc
jns
ret
lds
pop
push
insb
dec
fadd
inc
inc
cmp
aaa
push
adc
imul
mov
icebp
lret
mov
jmp
out
mov
add
iret
lret
popa
lea
pop
mov
inc
leave
in
xor
or
lods
cmp
inc
idivb
outsl
xor
cld
push
adc
inc
out
call
xor
lahf
mov
xor
xor
bnd
stos
das
adc
push
popa
xchg
scas
xlat
into
inc
daa
cltd
sbb
push
fisubrs
scas
sbb
cmp
enter
inc
cld
imul
or
cmp
rcrb
xchg
xchg
xchg
push
repnz
push
push
ret
or
jo
shrl
inc
out
std
rclb
aas
xor
sbb
test
mov
mov
sbb
cmp
mov
inc
cmp
mov
sub
clc
test
and
sub
loope
aas
out
imul
fwait
les
mov
imul
cltd
aad
jno
loopne
loop
mov
ds
cmp
int3
push
movsl
inc
push
ss
mov
mov
mov
lret
pop
popf
mov
mov
sbb
jle
mov
or
fcoml
adc
test
add
cld
sbb
dec
adc
out
mov
cli
ja
inc
repz
loop,pt
aam
xor
jp
pusha
dec
dec
and
dec
dec
push
xor
pop
das
inc
addl
jae
jmp
cmp
sub
xor
mov
xor
xchg
ret
in
lock
lret
fs
rorl
dec
push
testb
mov
xchg
mov
or
add
lret
pop
inc
fdivl
adc
sbb
xchg
bound
mov
sbb
outsb
pop
sarb
xchg
jge
adc
cwtl
mov
add
jo
push
sub
pop
lahf
add
pop
dec
out
es
pop
dec
lock
leave
mov
fidivrs
in
inc
cmpsb
repz
and
movsb
fdivl
xchg
out
daa
aam
jb
scas
sub
mov
add
loope
inc
fisubs
xchg
rorb
dec
dec
pop
push
in
pop
shlb
lea
jmp
mov
inc
add
mov
jbe
imul
cld
daa
clc
dec
lds
ret
pop
add
jg
mov
pop
movsl
jno
or
and
dec
add
cmp
xor
fs
jns
xchg
push
inc
es
arpl
pop
inc
add
leave
adc
insl
scas
and
sbb
adc
stc
imull
fcmovne
push
xor
mov
cmp
lahf
mov
inc
cmp
mov
jno
cmc
mov
mov
out
sbb
pop
subb
icebp
xor
jecxz
sbbl
hlt
inc
sub
sti
cmp
add
or
inc
inc
add
popa
sub
test
mov
xchg
icebp
adc
or
fisttpll
dec
clc
mov
dec
push
mov
loope
popa
out
and
enter
dec
test
in
inc
and
push
inc
leave
or
mov
push
cld
xchg
loopne
pop
addl
sub
add
int3
aad
inc
fstpt
xchg
fcmovb
mov
mov
push
sarl
adc
sub
dec
pop
dec
inc
imul
dec
movsb
jl
cmpsb
ret
cmc
pop
jnp
movsl
xchg
and
or
pusha
adc
inc
outsb
xchg
enter
ja
sub
in
pop
mov
negb
sahf
lods
mov
jl
cmp
adc
adc
add
enter
adc
sbb
sahf
xchg
fdivrs
in
jb
rol
adc
jl
lock
jg
cmp
fistps
sub
cld
pop
ret
stos
lods
fbstp
out
cmpsb
call
testb
cmp
jb
and
adc
cli
nop
jne
outsb
aas
mov
or
and
mov
sbb
push
das
sahf
mov
pop
mov
pop
cli
push
push
push
movsb
leave
sti
mov
pusha
repnz
add
lret
jo
test
add
daa
and
push
roll
add
popa
inc
ja
ds
cmp
loope
ret
shrl
xor
and
sti
push
aas
out
iret
mov
aaa
xor
push
test
fs
adcb
lret
loope
xlat
es
lcall
jl
repnz
and
inc
addb
mov
mov
xor
cmp
pop
or
or
int
aas
mov
popa
push
cmp
sti
mov
cmp
ret
test
shr
and
ficompl
add
pushf
mov
or
test
xchg
lea
in
in
loope
fcmovb
arpl
sbb
push
inc
dec
jbe
xchg
and
fstps
out
inc
cmc
fwait
mov
aaa
fistpl
scas
mov
push
add
inc
mov
dec
push
push
sub
push
ljmp
gs
lret
jle
mov
mov
mov
std
cmp
or
daa
lods
dec
push
pop
fimuls
or
pop
sar
js
dec
subl
cmp
sbb
cltd
mov
dec
adc
pushf
or
cld
into
jecxz
xchg
xchg
mov
xchg
fcmovbe
dec
xor
add
ret
mov
pop
jns
and
sub
jmp
xor
push
push
push
ret
mov
inc
push
adc
xchg
mov
push
mov
fnop
inc
sbb
test
test
push
pop
cwtl
movsl
fnsetpm(287
inc
lods
pop
dec
mov
stc
jp
lods
add
push
ficompl
xor
add
bound
mov
imul
lds
jae
mov
arpl
jecxz
sahf
outsl
gs
cld
lods
enter
mov
or
ss
orb
mov
lret
add
adc
push
stc
loope
int
dec
cmp
mov
sub
mov
adc
inc
insb
dec
lods
xor
lds
in
mov
push
jmp
mov
popf
mov
int
cmp
fs
stos
test
mov
jnp
sahf
mov
ret
inc
cmp
xchg
add
frstor
lock
loope
push
cmpsb
lds
pop
lahf
or
js
pop
jp
scas
addb
jle
cmpl
popf
mov
jnp
insb
daa
inc
cmpsb
jmp
repz
gs
pop
jo
sbb
pop
das
cltd
iret
js
es
into
add
aas
inc
pop
push
mov
testb
ret
jae
dec
xor
divb
pop
adc
cli
fists
dec
in
push
repnz
add
cmpl
mov
mov
pop
or
push
cli
dec
hlt
shll
inc
mov
sub
sbb
les
or
insb
jle
pusha
cmp
add
mov
dec
stc
stos
out
nop
cld
or
push
jno
js
stos
fdivl
int3
sbb
scas
and
mov
movsb
ljmp
in
cwtl
mov
mov
mov
rcr
mov
jbe
mov
add
push
sbb
xchg
clc
mov
add
xchg
xor
or
pop
outsl
les
shll
sub
rcll
dec
mov
fstps
je
mov
fwait
xor
ja
roll
cmp
mov
ret
sub
lcall
lock
mov
xchg
mov
mov
mov
cmpsb
xor
push
xchg
movsl
cmp
scas
sar
rcrb
mov
push
or
jne
mov
inc
imul
add
inc
xchg
int
sbb
xchg
insb
lret
mov
xor
cmpsl
mov
pushf
push
in
jg
loop
in
inc
mov
pop
lea
shll
fcompl
xorl
cmc
ja
gs
dec
xchg
ljmp
push
out
jno
jmp
pop
and
add
mov
sbb
cli
insb
sbb
push
inc
lock
dec
insb
mov
push
leave
je
test
iret
cmpsl
iret
jb
cmpsl
sub
sbb
test
aad
lcall
push
pop
daa
ret
inc
popf
xchg
outsb
cmpsb
aad
sbb
in
sarl
xchg
jo
inc
sub
sub
ret
and
out
adc
arpl
push
xchg
fisubl
out
mov
stos
fwait
scas
js
lcall
dec
inc
jne
cmp
jnp
aaa
fdivrl
xor
cld
pop
imul
stc
jnp
aas
pusha
stos
mov
mov
pop
call
lock
or
in
jl
sub
mov
xor
add
aam
fsubrl
or
dec
js
sbbl
loope
sub
add
xchg
push
flds
mov
arpl
mov
pop
or
cmc
outsb
sub
aas
fists
cli
nopl
hlt
add
inc
mov
jecxz
js
stos
outsb
push
inc
imul
insl
pop
test
ja
mov
jb
mov
in
xchg
mov
in
pop
nop
push
xchg
cwtl
sbb
adcl
pop
dec
insl
movsl
or
or
hlt
sub
xor
mov
and
mov
in
in
aad
arpl
mov
push
stc
xor
out
push
dec
xchg
or
dec
int
inc
in
scas
push
xchg
mov
int
mov
mov
hlt
mov
int3
stos
sub
xchg
out
push
jg
mov
icebp
push
adc
or
sub
xchg
aas
sarb
and
je
cmp
inc
cmpsl
cli
inc
inc
lods
push
mov
jge
aam
aaa
mov
das
pop
push
xor
xor
and
fsubrs
dec
ds
sti
push
pop
or
dec
and
jmp
pop
or
les
cmp
out
push
and
outsb
subb
in
or
jns
or
dec
jnp
mov
in
sbb
add
pop
gs
adc
xor
lret
jbe
test
lds
test
mov
sub
pop
jne
xor
gs
loop
insb
jno
jp
lods
outsl
iret
fcoml
xchg
push
imul
push
xor
pop
nop
insb
dec
cmpsl
pop
add
adc
dec
mov
jp
and
in
push
dec
jle
cltd
jns
adc
sub
or
xchg
add
mov
add
cmp
mov
push
sarl
push
cmp
mov
dec
sub
or
mov
pop
and
in
outsb
add
mov
mov
addr16
daa
ljmp
jbe
das
outsl
push
loope
in
insl
inc
loop
xor
and
insl
pop
inc
scas
mov
pop
cmpsl
xor
pop
mov
or
insb
mov
xchg
cmpb
or
lock
or
gs
les
push
mov
xchg
scas
pop
cmovge
add
negb
pop
pop
xchg
or
sahf
repz
leave
sarb
xor
or
test
cwtl
mov
inc
sbbb
xchg
icebp
fsubrs
call
clc
sbbb
imul
aaa
fistpl
mov
and
adc
mov
orl
xchg
fimull
ror
jmp
cmc
testl
repnz
imul
xor
scas
adc
sub
rcll
push
ret
inc
jecxz
dec
in
pop
mulb
mov
add
push
dec
dec
push
add
push
push
hlt
mov
and
dec
sahf
jmp
jmp
test
xor
or
es
pop
add
pop
sbb
and
xchg
and
movsb
mov
std
lds
push
aam
test
aam
or
add
mov
lods
sti
test
xchg
adc
xchg
das
pop
int3
movl
adc
add
js
push
rcl
jo
xchg
subb
push
call
imull
inc
jg
bound
std
lea
push
stos
jg
push
stc
jns
ror
fcomps
int3
lret
int
mov
dec
mov
xchg
leave
xor
or
ljmp
out
pop
std
incb
mov
push
inc
add
cli
icebp
in
lret
in
stos
rcrl
cmpb
out
inc
sbb
sub
shll
cmp
jo
movsl
mov
sbb
lea
insb
jmp
jp
in
pop
enter
das
jle
pop
inc
loope
pushl
xchg
es
and
fdiv
lods
xchg
das
xor
mov
inc
inc
arpl
test
adc
push
add
jge
sbb
ja
imul
outsb
insb
xor
dec
cmp
das
insb
pushl
add
push
sbb
fs
xchg
or
mov
sti
xor
push
les
mov
outsl
js
dec
inc
mov
dec
iret
push
cmpsb
addr16
loopne
mov
and
and
adc
inc
cmp
jmp
adc
mov
add
jne
xchg
cmp
icebp
mov
shr
dec
inc
jb
pop
fdivs
mov
inc
dec
or
sahf
or
fcmovnbe
xchg
mov
popa
sarb
adc
loop
in
dec
dec
adc
push
adc
les
into
dec
daa
data16
dec
jmp
test
pshufw
cmp
andl
add
jne
lret
mov
sub
jno
pop
sbb
adc
adc
add
ss
sbb
insl
cwtl
add
push
cmp
fsubrs
mov
sbb
into
ret
push
loope
fst
xor
data16
popl
das
bound
add
mov
in
xchg
lods
mov
cmp
sbb
xchg
fdecstp
decb
mov
fucom
flds
fmuls
jle
stos
mov
test
push
in
mov
cmp
ljmp
inc
or
mov
out
inc
mov
sbb
data16
dec
mov
iret
daa
cli
lods
scas
push
push
dec
ljmp
popa
add
gs
iret
je
jmp
lods
lods
mov
sbb
pop
mov
into
stos
jbe
test
inc
out
aad
arpl
andb
mov
or
fwait
xchg
xchg
jecxz
pop
dec
out
lret
pop
mov
sub
sub
test
sbb
mov
dec
xchg
popf
add
popa
inc
test
ljmp
addl
in
xor
push
test
in
fiadds
push
xchg
mov
xchg
xchg
aam
xor
jecxz
cmp
cmp
scas
call
dec
xchg
mov
and
ret
inc
adc
lret
mov
stos
mov
fistpll
imulb
adc
pop
mov
sub
push
hlt
sti
data16
mov
jne
insl
data16
js
inc
das
repz
sbb
insl
test
sarb
or
pop
sub
pop
vprotq
std
and
cmpsb
movsl
add
xor
sub
rcll
mov
shr
enter
cs
dec
mov
xor
je
bound
push
add
loope
sub
push
cli
scas
mov
clc
lret
jge
in
out
scas
nop
mov
and
jns
divl
aad
dec
pop
sarb
sub
dec
ja
popa
adc
xorb
mov
pop
call
les
mov
ljmp
repnz
jb
push
inc
push
jmp
jno
push
rcrl
daa
and
cwtl
xchg
cmp
cmp
xchg
fdivl
pop
and
jo
fidivl
mov
stc
mov
popa
mov
adc
sub
push
push
or
inc
mov
lods
in
dec
outsb
mov
push
sub
shll
pop
push
mov
imul
mov
orb
mov
push
arpl
xor
cs
repz
je
xlat
std
add
sub
ficomps
mov
int
mov
inc
pop
cwtl
jae
out
dec
sbb
mov
pop
and
jo
lret
push
or
test
test
mov
push
jmp
jnp
cmp
adc
je
rcll
hlt
test
xor
xchg
aas
add
fsts
push
pop
xchg
call
mov
mov
lcall
test
lods
movsl
push
cmp
sub
pusha
loopne
mov
jae
mov
xchg
mov
sbb
inc
jle
mov
mov
aam
es
push
xchg
std
xchg
lret
mov
into
std
pop
jle
dec
sub
xchg
push
idivb
bnd
jle
xor
clc
mov
xorb
lahf
mov
jle
fidivs
outsl
add
adc
mov
repnz
in
cmp
arpl
aaa
mov
lret
inc
iret
push
or
outsb
cli
inc
sbb
pop
dec
mov
sbb
aas
shll
repz
jb
dec
adc
adc
mov
mov
sub
adc
hlt
fst
popf
int3
addr16
sbb
rcl
fwait
xchg
pusha
sub
push
push
jo
mov
add
rolb
mov
orl
fnstsw
jo
loope
inc
in
bound
cmc
test
mov
stc
sbb
adc
mov
jle
bound
dec
xor
adc
cmp
push
insb
jg
sbb
sbb
imul
rclb
or
push
mov
jecxz
mov
lea
jp
lret
pop
dec
fistpl
pop
jl
cld
in
ljmp
xchg
div
out
add
mov
ret
or
das
mov
rcll
jge
in
jle
sbb
push
out
pop
xorb
test
mov
mov
cmpsl
ret
pop
dec
int3
add
lret
rcrb
pop
cltd
sub
les
ss
pop
loope
push
xor
pop
in
lods
lods
stos
push
mov
add
or
in
leave
ja
cmp
jo
sub
and
and
ljmp
xrelease
push
mov
xor
js
cmp
mov
inc
jae
lods
adcl
test
rcll
fisubl
xchg
pop
mov
fisubrs
and
cmp
sti
icebp
sbb
jp
add
push
js
sti
xor
cmp
in
mov
in
and
test
cmp
fsubp
in
inc
in
xchg
cmpl
cmp
pop
mov
sub
aam
push
lods
in
mov
adc
pop
insb
in
cmp
mov
or
push
adcb
pop
aad
pop
and
push
je
push
mov
ljmp
adc
and
xchg
jb
setp
xchg
push
and
xor
adc
sahf
sub
sbb
pop
xor
outsl
adc
mov
aad
or
pop
lods
repnz
add
in
int3
adc
cmp
aam
pop
out
push
fildl
pop
enter
test
nop
dec
leave
rdmsr
push
lds
mov
in
mov
add
pop
or
add
sub
xchg
and
jecxz
jg
inc
rcrl
add
xchg
movsl
ud1
push
sbb
aam
add
aam
jns
xor
sti
leave
movsl
out
outsb
dec
test
in
mov
imull
add
in
test
movsb
inc
cmpsb
inc
cmp
call
jle
lret
adc
jle
mov
mov
cld
stos
movsl
pop
and
xchg
call
imul
pop
or
jae
mov
sbb
jb
add
xchg
adc
sub
push
cs
iret
adc
pop
lea
test
pop
andl
mov
push
andb
nop
lds
iret
sahf
xor
int
nop
and
int
aam
mov
js
call
inc
cwtl
imul
sub
push
ds
push
stos
mov
in
outsb
sbb
jno
sub
sub
and
enter
xor
lahf
fcmove
lds
jle
pop
cmp
rcrl
xor
call
xchg
xchg
mov
xor
mov
pop
les
pop
das
sbb
add
and
add
outsb
nop
mov
mov
fdivr
or
mov
gs
add
mov
lret
movsl
add
push
roll
shl
adc
jne
xchg
inc
xchg
fcmovu
pop
fisttpll
int
inc
rcl
inc
clc
pop
inc
das
and
jae
push
pusha
push
fsincos
mov
popf
int3
int
mov
inc
cs
pop
les
push
cmp
and
iret
inc
mov
pop
sbb
xor
pop
sbb
lea
mov
xlat
rorb
or
lahf
int
shrl
addr16
pop
fidivs
decb
leave
lods
jmp
push
cmpsb
aas
dec
dec
adc
test
enter
das
movsl
rol
pop
inc
test
fildl
fsubrs
push
xor
pop
mov
mov
and
sti
push
and
fsubrs
mov
pop
lahf
add
rcrb
int
into
xchg
gs
lahf
arpl
aam
in
jle,pn
mov
push
push
nop
sub
lock
js
fs
or
shll
mov
sti
pusha
out
and
pop
xchg
mov
cwtl
add
sti
lahf
aam
scas
adc
or
and
std
jecxz
leave
sub
repz
cmp
cmpsl
into
fbld
add
jnp
dec
pop
addr16
nop
adc
push
es
mov
adc
lea
jg
and
and
popf
js
lret
adc
mov
aas
loope
insb
mov
xor
das
hlt
out
mov
jmp
fdivl
sbb
jnp
cmpsb
into
xor
mul
add
push
push
sub
cs
mov
aaa
dec
mov
xor
or
sti
push
dec
fistps
mov
sbb
pusha
dec
test
sbb
icebp
inc
mov
push
jg
popf
pop
push
jns
push
pop
and
add
addl
mov
js,pt
xor
jbe
lahf
movsl
in
in
and
lods
orl
sbb
xor
mov
hlt
bound
shr
pop
cwtl
lea
test
sbb
mov
sub
pop
unpcklps
mov
bswap
add
gs
jle
lahf
test
lahf
adc
or
mov
pop
cmp
jo
leave
jns
pop
nop
pop
addb
or
fsubrs
lret
bound
in
inc
add
sti
add
xor
jns
in
fs
inc
mov
iret
cwtl
xchg
mov
inc
sub
js
sahf
dec
fwait
jle
pop
cmpsl
or
sbb
std
mov
data16
into
out
jmp
pop
jge
sub
pop
addr16
sbb
pop
cmp
push
cs
out
mov
pusha
xchg
int
add
insb
mov
xor
stc
shl
push
push
mov
pop
mov
int3
mov
jp
push
cld
cmc
sbb
cmovns
mov
and
pop
mov
pop
sarl
cmp
jne
sbb
adc
cmpsb
movsl
or
int3
sbbb
out
repz
ljmp
mov
adc
pop
fs
pop
mov
mov
mov
in
nop
and
mov
sbb
dec
jge
insl
daa
cmp
cli
out
mov
pop
adc
jle
out
ljmp
inc
cltd
cmp
repz
popf
lea
lods
out
loope
add
pop
mov
data16
pop
in
mov
sbb
mov
ds
jbe
sub
inc
insl
jecxz
push
dec
mov
icebp
sub
pop
in
and
xchg
ljmp
cmpsl
pop
push
ficoms
outsl
mov
sub
clc
xor
mov
mov
sbb
mov
nopl
dec
cltd
jmp
fs
movsl
mov
pop
xchg
mov
aaa
into
inc
pop
hlt
ret
out
lahf
pop
imul
jmp
cld
ret
sbb
cmpsb
rcl
jmp
xor
or
scas
sarl
in
xor
jnp
sbb
push
xorl
sbb
dec
and
or
int
mov
mov
cmpsl
cltd
mov
sub
push
mov
add
pushf
daa
sbb
or
je
iret
std
aas
jns
mov
mov
sti
in
imul
or
xor
dec
mov
call
ljmp
and
lret
popf
push
cmp
push
jg
test
xor
out
and
mov
into
or
jp
shll
add
aas
or
lret
jns
iret
gs
cltd
cmp
cltd
jne
pop
cmp
xor
cmp
cwtl
mov
or
in
je
lcall
movsl
mov
sub
popa
dec
xor
js
cmc
mov
pop
push
ret
sahf
popf
sahf
sub
mov
sub
inc
imul
filds
add
jae
mov
nop
iret
ss
sbb
in
cltd
jmp
es
add
add
adc
lea
sbb
jge
scas
push
sbb
or
lret
xchg
dec
cmpsb
js
rorl
lods
jno
push
fwait
cs
scas
int3
inc
shrl
push
addb
aam
mov
bound
pop
mov
pusha
xchg
aaa
mov
and
inc
hlt
cmc
pop
mov
pop
mov
dec
scas
scas
mov
cwtl
out
out
mov
stos
xchg
repnz
aad
shlb
adc
mov
cmp
xor
cmp
in
mov
movsb
mov
adc
scas
and
jg
movsb
fucomip
addr16
stc
loopne
lods
cmc
xor
push
xor
inc
clc
cmc
jmp
idivl
xchg
jecxz
cs
mov
lock
sub
imul
int
add
imul
fnstsw
sbb
pop
sbb
pop
sbb
dec
out
aas
int3
xlat
jae
jae
clc
repz
push
push
inc
fistps
or
mov
popf
lar
shlb
inc
lods
test
add
sbbb
pop
stc
dec
adc
pop
mov
dec
dec
cmp
pusha
push
sbb
cmp
fildll
mov
outsl
pop
xchg
hlt
xor
popf
enter
inc
dec
adc
daa
or
sub
sti
test
add
pop
fnstenv
stos
insb
pushf
jge
insl
shr
in
mov
fdiv
jb
sbb
jmp
out
push
adc
enter
push
int
bound
repnz
adc
sbb
fsubs
mov
into
ljmp
dec
jl
cmpsb
or
dec
push
js
sbb
shrl
adc
ret
mov
pop
lods
das
imul
xor
xlat
dec
test
lcall
mov
xor
inc
sbb
in
in
push
mov
or
or
push
jl
rcll
pop
push
ret
pavgb
adc
cmc
add
dec
aad
xor
pop
dec
enter
mov
xlat
or
cmpsl
lock
xchg
icebp
test
adc
sub
jo
mov
cld
scas
mov
add
push
push
mov
lock
shll
hlt
into
sbb
fimull
scas
pop
jg
inc
sti
xor
inc
daa
adc
jae
sbb
sub
mov
ja
pushw
stos
jno
sarl
ffreep
cmp
add
outsb
xor
addr16
jecxz
mov
scas
mov
lcall
orl
fstps
xor
rol
sbb
aas
test
add
clc
ret
enter
aam
sbb
jecxz
cld
std
mov
rclb
clc
js
clc
mov
jb
add
jnp
xchg
jnp
mov
fmulp
rcl
lods
subb
movl
rolb
mov
pop
negl
adcl
arpl
repnz
sbbb
push
out
adc
xchg
mov
sbb
pop
lcall
data16
jo
sub
dec
adc
sti
negb
enter
push
jg
xchg
insl
mov
psadbw
fs
xorb
xor
loop
cmc
cmp
scas
dec
inc
stc
popa
cwtl
mov
lcall
sti
mov
out
pop
mov
in
mov
lret
or
push
loop
dec
clc
shl
out
cli
push
std
sbb
and
scas
mov
jno
lret
cwtl
scas
jb
pop
push
imul
movsb
xor
sbb
inc
inc
jp
push
icebp
lds
addr16
imul
rcl
dec
aad
cmp
and
psrad
or
xor
into
jl
xor
and
cld
mov
jg
ds
mov
popa
xor
sti
jl
out
scas
xchg
insb
mov
inc
and
add
pop
adc
jmp
pusha
repnz
push
cmp
in
scas
loopne
cwtl
sub
loopne
jae
inc
ret
mov
loope
shrl
dec
or
data16
out
or
mov
or
add
adc
in
mov
add
mov
aam
out
clc
aaa
jbe
push
stc
pop
enter
js
push
and
fdivl
and
cs
lahf
out
jmp
fxch
or
or
mov
mov
inc
pop
add
sti
push
push
into
sarb
and
adc
pop
cmpsl
movsl
ret
mov
xchg
jno
inc
fisubrs
xor
ds
scas
sub
pop
pop
rorb
adc
xor
push
jo
jg
adc
xchg
fsubrs
push
shl
roll
stc
loop
push
cltd
clc
dec
xchg
rcrl
mov
addr16
mov
and
or
mov
jno
push
lret
push
inc
pop
outsb
popa
adc
lods
pop
clc
push
leave
add
add
addr16
notb
mov
fsubrl
adcl
mov
jns
cmp
aaa
push
add
mov
fnstenv
outsb
fiaddl
scas
cmp
mov
pop
dec
gs
xor
push
lahf
sbb
les
nop
aaa
mov
cwtl
push
sbb
add
push
lret
inc
in
or
test
into
sbb
mov
pinsrw
loopne
jle
dec
lds
add
xor
mov
cmc
shll
or
push
push
add
dec
insl
stos
jecxz
xor
push
push
and
and
mov
inc
movhlps
rcrl
xchg
mov
ss
enter
mov
dec
cwtl
mov
out
lods
push
adc
dec
jp
jle
test
xchg
cmp
adc
mov
or
lret
rcl
lret
mov
test
sbb
or
cli
push
adc
dec
ret
mov
sbb
stc
notb
sbb
cmp
dec
lods
or
into
dec
push
lcall
in
ret
in
icebp
add
movsl
inc
aad
mov
lret
lcall
je
fsts
out
mov
lcall
out
push
negl
ficompl
xchg
push
xchg
sbb
outsl
xor
mov
pushf
dec
mov
shll
js
sti
movsl
sbb
sub
inc
incb
or
inc
mov
mov
xchg
mov
bswap
adc
and
mov
int
xchg
cld
sub
cmp
sbb
adc
push
or
popf
test
adc
push
xor
mov
loop
fcmovbe
paddusb
sub
scas
cmp
inc
lods
inc
push
lock
hlt
add
dec
sbb
jp
push
test
movsb
lods
ret
cmp
sub
fiaddl
inc
pop
sbb
pop
mov
mov
xchg
cmpl
push
xchg
std
xchg
lods
and
loope
call
call
cmp
sbb
or
fimull
jbe
push
mov
fldenv
cmp
ja
or
adc
in
pop
xchg
repz
fistps
add
pusha
sbb
stos
push
les
inc
fmul
sbb
in
daa
dec
rclb
xchg
outsb
cmp
loop
xchg
adc
data16
int
ret
int3
sbb
test
xor
inc
jae
gs
and
mov
mov
lock
pop
into
fs
cmp
xor
lret
xchg
inc
outsb
push
loopne
sarl
mov
ds
mov
decl
adc
lods
sub
mov
fcomps
fisubrl
int3
add
shlb
in
push
dec
rcll
xchg
test
sarl
jmp
outsl
jae
sbbb
pop
inc
mov
aaa
xchg
shl
cld
cli
pushf
push
add
fcoml
mov
fnsave
dec
ret
or
and
int3
cltd
xchg
cld
and
and
jecxz
dec
and
test
into
push
rolb
sbb
les
lods
popa
mov
mov
pop
test
jae
mov
xor
cmp
ss
adc
pushf
inc
sub
push
test
cmp
lcall
nop
and
jo
mov
add
push
arpl
mov
push
je
pop
clc
sahf
pop
pop
xor
aaa
mov
push
jp
mov
adc
fsubr
mov
clc
imul
xchg
mov
mov
loop
adc
pop
mov
mov
mov
cld
stos
push
je
cmpsb
fldenv
ret
jecxz
ror
jno
daa
out
and
icebp
je
xor
xchg
out
in
sub
orb
pop
psubsb
inc
scas
lods
in
adcl
mov
xor
wbinvd
inc
and
mov
add
int3
xor
mov
orl
stos
jg
push
or
jbe
popf
fadds
mov
adc
sbb
pop
inc
data16
sub
in
out
jl
nop
in
movsl
es
pusha
imul
sub
scas
shl
dec
inc
repnz
movsl
into
imul
jle
and
fistpll
sub
ror
vaddsubpd
jecxz
or
cltd
jae
lods
xor
xlat
sub
xorl
scas
jmp
cwtl
pushf
sbb
test
push
add
mov
pop
in
mov
pop
test
jge
fsubrl
loopne
orb
lods
jp
mov
pop
loope
mov
sub
cltd
mov
adc
inc
jo
addl
arpl
insb
loope
hlt
push
sbb
aaa
cmp
push
ds
xor
pop
dec
call
mov
cmp
and
rcl
push
jo
test
in
repnz
movsb
out
outsb
pop
int3
mov
xchg
xor
pop
mov
mov
js
mov
in
or
es
daa
and
xor
fiadds
stc
pop
fmul
outsb
clc
inc
cli
loope
scas
pushf
in
add
mov
or
lahf
xor
push
mov
test
int3
jg
mov
mov
lods
adc
movb
out
bound
mov
leave
test
lcall
mov
nop
push
loop
inc
test
mov
lea
mov
daa
popw
enter
repnz
xor
aam
dec
mov
out
push
pop
jge
sub
lret
jns
in
addb
loop
push
mov
sub
fs
xchg
sbb
rorb
mov
jo
push
add
insb
mov
push
insl
mov
aas
jne
fildll
lock
and
loope
shll
mov
add
mov
adc
push
mov
and
out
popa
enter
out
pusha
xor
jmp
movsb
jmp
xchg
mov
je
cld
into
sti
push
fmul
in
addl
or
pop
jbe
rcr
int
dec
xor
ljmp
inc
sub
leave
mov
cli
jmp
rcrb
mov
idivl
inc
rcrl
sub
xchg
int
movsb
sub
pop
add
push
jae
mov
xor
pop
inc
jmp
mov
mov
jbe
fadd
pop
mov
cltd
pop
cbtw
jmp
pop
pop
push
aaa
and
adc
adc
sub
xchg
fdivs
aas
fnstenv
cli
or
loop
xchg
push
jmp
xchg
in
mov
jae
lods
adc
mov
sub
mov
lods
outsb
test
aaa
jnp
mov
es
adc
into
int
es
in
or
adc
mov
daa
mov
in
jne
clc
fmull
insl
xchg
int3
or
lcall
gs
pusha
pushf
pop
mov
aas
mov
xor
movsl
pop
pop
jae
test
mov
addr16
hlt
lcall
rcll
mov
mov
push
xchg
popf
push
push
sub
jg
rcrb
dec
mov
into
pop
push
push
std
inc
xor
movsl
or
sbb
fstp
pop
xlat
add
cmp
mov
push
imul
es
ret
das
dec
xchg
add
arpl
or
fdivrl
fidivrl
sahf
adc
fdivs
push
test
sbb
sahf
mov
cmp
xchg
sub
daa
in
inc
test
mov
orl
mov
into
icebp
pop
lret
add
jg
or
mov
or
ffree
das
or
mov
jae
out
mov
repnz
or
rcrb
or
outsl
lea
cwtl
pop
push
dec
int
mov
lret
mov
push
push
adc
clc
pop
lret
adc
add
and
mov
addb
sarb
jmp
push
jecxz
fsubrs
bound
inc
sbb
mov
push
mov
adc
out
sbb
mov
insl
ficomps
mov
repz
sub
mov
hlt
and
sbb
jb
out
adc
sub
xor
push
cmpsl
mov
xor
sub
daa
push
pop
lods
int
sub
and
xor
lds
jb
std
mov
test
loopw
gs
push
lret
xchg
sub
push
lret
cli
pop
adc
fnstenv
cli
mov
inc
push
push
jne
push
mov
int
popf
pop
push
aaa
fstp
xchg
xchg
mov
dec
inc
mov
pop
test
inc
add
popf
aam
adc
call
arpl
jbe
arpl
cwtl
and
sub
jp
add
rcrl
lahf
scas
adc
mov
rcrl
mov
enter
int
sub
cmp
int3
loopne
pop
insb
inc
cmpb
mov
repnz
dec
loop
pushf
jno
inc
add
ljmp
inc
mov
fdivp
cmp
fdivr
sbb
sub
adc
notl
cmp
jmp
mov
mov
mov
int3
lds
popf
shl
shlb
jne
cmpb
inc
aam
jmp
ja
adc
add
les
popf
ljmp
sti
cmp
and
jle
movsl
out
jmp
daa
out
mov
dec
loop
jb
aad
aaa
dec
push
loopne
in
mov
cmpsl
or
cmp
popl
loope
mov
outsl
in
cmpsb
fdivl
xchg
and
nop
loope
je
pop
xlat
add
jmp
data16
pop
mov
repnz
push
cmp
es
xchg
mov
aaa
stos
xchg
add
push
xchg
add
jecxz
sbb
das
jo
aaa
and
jge
mov
xlat
adc
loopne
cmp
mov
test
loop
sub
data16
sub
test
mov
es
push
out
stc
lea
push
arpl
mov
cld
aaa
mov
stos
pusha
insb
enter
adc
pusha
sub
dec
lea
shl
cmpsb
cmc
sub
xor
hlt
mov
pop
and
mov
enter
ds
inc
aas
sbb
loop
mov
iret
aad
fwait
int
or
mov
mov
jmp
push
and
xorb
pop
pop
adc
int
pop
pop
data16
add
inc
jle
jo
aas
call
push
mov
xchg
pop
xor
or
imul
test
fisubl
dec
mov
scas
pop
stos
inc
insb
adcb
lock
mov
and
adc
mov
lods
lret
imul
insl
roll
lock
mov
mov
cmp
mov
cmpsl
stos
cmp
aaa
mov
xor
mov
les
pop
jo
outsb
mov
test
dec
fldt
push
pop
insl
push
sbb
sbb
mov
lds
cmp
out
dec
or
ljmp
out
aaa
stos
jbe
nop
into
and
adc
and
int3
and
sti
test
pop
push
mov
jae
mov
ret
int
add
adc
inc
jno
sbb
out
sbb
xchg
in
push
cmp
push
movsl
dec
mov
sahf
push
xchg
mov
fbld
dec
jo
xchg
out
lods
push
push
cmc
bound
gs
pop
or
mov
pop
jne
jbe
dec
loopne
insl
mov
dec
mov
and
ds
insb
jp
cs
cli
sub
and
cmp
mov
jle
addb
xchg
call
jl
push
xor
xor
sbb
xor
call
pop
std
mov
dec
cs
sar
xchg
in
mov
jnp
push
dec
leave
or
out
pop
sbb
es
arpl
inc
scas
jb
sbb
movb
pusha
sbb
fnstcw
addr16
and
test
or
jmp
cmp
xor
jg
fwait
cmp
xor
jle
inc
xlat
cs
xchg
hlt
inc
das
adc
loope
sbb
mov
outsl
cmp
cmp
fcmovne
loope
outsb
jl
adc
xor
into
dec
lods
mov
sub
push
lods
fs
sub
mov
fcoms
or
imul
push
push
lahf
xchg
and
push
xor
xchg
cmp
jecxz
mov
mov
mov
popf
mov
push
mov
fidivrs
push
fwait
push
dec
loopne
jp
mov
xchg
clc
out
xchg
pop
mov
sti
mov
int
ret
or
inc
or
into
dec
scas
cmp
or
mov
sahf
fisubrl
dec
sbb
hlt
call
add
adc
adc
sarl
pop
shlb
test
mov
lcall
enter
sbb
xchg
cltd
jecxz
andl
pop
pusha
fsts
mov
test
test
xor
aad
jg
daa
mov
test
sub
ret
je
insb
mov
loopne
pop
aaa
inc
pop
and
fbld
fisubs
js
dec
scas
mov
mov
pop
iret
movsl
in
sbb
ret
loopne
cmpsl
adc
sub
jle
add
cld
pop
mov
push
es
push
fisubs
mov
mov
popf
pop
sbb
aad
dec
lcall
lock
xor
inc
test
mov
shrl
out
mov
xchg
leave
push
lock
jae
rcrb
lods
dec
mov
test
xor
mov
jnp
lods
jmp
push
push
fdivs
push
rorb
sbb
inc
pop
pushf
jmp
inc
cld
loope
inc
mov
sbb
dec
fs
pushf
cmp
push
dec
imul
dec
int3
cmpsb
xlat
imul
sub
adc
aaa
jno
lods
cltd
test
pop
sbb
jb
inc
xchg
push
mov
scas
cmpsl
mov
aad
arpl
mov
ss
loope
jbe
pop
sub
and
sahf
pop
scas
rcl
inc
adc
or
stos
inc
adc
ja
cmp
lret
pop
std
aam
mov
sbb
mov
outsl
les
ss
test
sahf
cld
movsl
popa
adc
loope
mov
in
cltd
clc
fsubs
in
pop
cmpsl
shlb
xor
xchg
popf
dec
xchg
das
mov
notb
xor
mov
out
jl
inc
pusha
andl
mov
dec
ret
xchg
and
jge
or
xchg
xor
mov
sbb
ss
jbe
adc
rclb
and
push
sub
cmp
and
push
jns
jne
pop
outsb
test
push
xor
sti
xchg
cli
outsl
and
push
xchg
fdiv
sbb
cwtl
jmp
dec
les
loope
imul
lahf
cmp
pop
xor
fdivl
repz
or
and
adc
ret
lcall
repz
xchg
pop
fists
pop
adc
mov
lahf
je
fistpl
fcom
adcl
xchg
popa
popa
jb
movsb
mov
lret
xchg
sbb
mov
cmpsb
stos
dec
ret
inc
pop
pmaxsw
pushf
into
push
xchg
pop
enter
pop
adc
jmp
mov
rorb
sub
and
int
pop
or
mulb
add
pop
push
mov
ja
cli
fwait
out
sub
lahf
mov
push
nop
cmp
cmpsb
push
stos
in
iret
int3
loopne
xor
lock
and
sub
movsb
mov
dec
add
imul
iret
adc
iret
das
rcrb
fsubl
xor
push
arpl
jns
jns
jns
sub
dec
pop
mov
idivb
adc
mov
and
xchg
popf
mov
xchg
rorl
pop
pop
jmp
pop
fstps
sub
jnp
pop
xor
hlt
add
mov
addr16
or
mov
stc
bound
jne
xor
minps
movsl
mov
sub
and
sub
inc
or
push
mov
andb
test
shlb
pop
push
inc
loop
loop
shll
pop
scas
leave
pop
add
fldl
inc
adc
and
fists
mov
jle
sahf
nop
mov
pop
or
pop
out
in
push
dec
pop
add
xor
adc
lcall
mov
jl
cltd
sbb
imulb
adc
mov
xor
sub
fbstp
xor
add
fldt
es
mov
jecxz
xchg
jbe
add
fs
es
ljmp
add
push
xor
cmp
decl
jae
dec
in
gs
jg
xchg
aaa
ret
mov
outsb
lds
insl
paddsw
and
lahf
or
and
iret
sbb
adc
fcom
mov
cli
cltd
adc
arpl
call
pop
add
enter
cmc
and
iret
fstpt
inc
mov
mov
insl
fists
cmpl
jge
pop
sub
xchg
fimuls
push
test
add
repnz
mov
xor
lahf
ficompl
add
mov
pop
jp
push
xchg
cmp
jbe
lret
or
inc
imul
mov
sub
dec
cmpsb
loope
enter
push
add
mov
nop
and
and
mov
mov
pop
addb
leave
jmp
jo
out
hlt
xor
addr16
pop
movsb
ret
clc
push
add
ret
push
pushf
push
add
imul
rorb
mov
addr16
in
push
rol
adc
sbb
addb
adc
cmp
pop
pop
outsb
and
xor
outsb
lods
mov
popa
adc
push
jl
push
call
mov
scas
or
jb
sbb
jo
mov
clc
and
imul
lds
sub
inc
rorb
inc
add
incl
out
mov
and
rolb
push
repz
xlat
jmp
jl
rolb
out
pop
clc
ljmp
aad
push
fnstcw
addr16
xchg
jnp
adc
mov
lods
nop
pop
cmpsb
pop
add
pop
leave
pushf
sub
pop
dec
inc
stos
int3
dec
xchg
pushf
jns
fldenv
adc
mov
lods
adc
jge
test
mov
mov
mov
ds
mov
jg
cld
fldcw
cmpsl
lcall
pop
leave
dec
mov
cli
jl
or
fmuls
jmp
into
pushf
gs
mov
jmp
aas
lds
repnz
nop
enter
xchg
xor
mov
popf
scas
sbb
lods
sarb
mov
shrl
test
push
arpl
loop
and
sub
fnstenv
mov
lods
pop
andl
cmp
and
int3
loopne
push
loopne
xor
aaa
insb
daa
jp
clc
scas
jmp
out
add
jo
ds
imul
pop
mov
mov
js
scas
xchg
push
sbb
stos
leave
cltd
cs
int
andb
jno
out
pop
dec
je
pop
hlt
xchg
fsubs
rclb
das
sbb
sbb
es
stos
popf
popf
sub
push
pop
roll
test
pushf
repnz
pop
arpl
fisubrs
inc
inc
popa
jae
xorl
mov
lret
aaa
aad
cmpsb
outsb
cmp
orb
gs
push
mov
rclb
xchg
push
xchg
dec
cmp
and
imul
xor
and
or
pushf
cmp
mov
mov
loope
and
clc
mov
sub
cmc
int3
push
pop
fmuls
insl
ret
stc
jb
out
lcall
inc
arpl
pop
mov
mov
xchg
pop
mov
test
mov
in
mov
dec
in
jge
sbb
shl
out
xchg
orl
push
push
stos
cs
popf
jb
cmp
or
fmull
pop
daa
cmp
cmp
sub
sbb
mov
imul
bnd
add
shll
pop
sti
jecxz
test
dec
imull
mov
and
cmp
call
adc
stos
out
mov
in
and
push
xorb
mov
sub
mov
daa
lods
lahf
inc
stc
ja
bound
cld
sub
adc
mov
pop
mov
cmp
frstor
aas
dec
fwait
lock
and
lea
inc
mov
cs
inc
add
cmc
call
push
cmp
icebp
xchg
int
jbe
push
call
rol
add
dec
xchg
fld
xor
and
mov
mov
push
sbb
jge
push
xor
pop
lret
ret
xlat
test
cmp
stos
mov
pop
enter
lret
jmp
dec
pop
cli
in
and
mov
in
rcrl
mov
je
cmp
xchg
add
repnz
dec
roll
add
popf
mov
dec
fdivrs
sub
dec
jae
push
fistps
cmp
pushf
add
out
mov
in
popf
and
dec
aas
pushf
xchg
ret
add
xor
insl
iret
jbe
shrb
addl
xor
jb
mov
ret
aas
xor
xchg
and
inc
iretw
jne
inc
bound
and
jp
cmp
repnz
lcall
sti
mov
test
ljmp
idivl
sbb
scas
enter
lods
mov
ficoms
cmp
xchg
jl
cli
imul
sub
dec
fstps
jmp
cmpsb
xchg
mov
aam
loopne
mov
xor
cltd
and
scas
mov
add
call
cli
insl
sub
push
mov
add
fwait
in
pop
jno
dec
daa
mov
pop
clc
clc
inc
in
test
push
iret
cli
out
or
cmp
jg
or
movsl
test
jl
rcrl
sub
hlt
int
rcrb
jle
leave
xor
inc
mov
xor
adc
enter
icebp
cs
xchg
dec
dec
inc
push
jl
sahf
and
out
mov
popa
testb
call
fisubrs
jnp
test
and
ja
cs
adc
and
iret
cwtl
adc
in
les
mov
dec
aaa
push
dec
pop
inc
gs
shl
out
hlt
lods
imul
add
daa
sbb
dec
lock
cmp
sbb
rolb
in
cmpsb
jne
addl
pusha
jo
ss
cmp
sbb
call
mov
and
aas
dec
test
cmc
pop
mov
jle
pop
fsub
pop
in
cmc
out
push
pop
movsl
shl
std
lret
incl
inc
push
jne
pushf
xchg
adc
pop
filds
xor
cltd
lds
sbb
enter
cld
jno
sbb
push
insb
cli
fwait
je
jns
dec
dec
data16
jmp
mov
xchg
adc
fisubs
mov
push
outsb
arpl
xorl
ss
lret
ss
push
xor
cmp
mov
add
push
pop
and
sbb
cltd
sbb
xchg
loope
std
jnp
adc
or
cmp
xchg
jmp
lahf
in
sbb
ja
xchg
cmp
out
cmpsb
in
inc
out
mov
adcb
aaa
aaa
push
jbe
xchg
std
xor
cwtl
sahf
lcall
inc
jg
subl
scas
jne
std
push
clc
ror
mov
movsl
sub
pop
and
mov
dec
xor
xor
ret
es
push
aam
test
inc
cld
aam
lods
mov
jbe
lea
scas
shll
aam
and
mov
cmpsb
outsl
mov
div
fidivrl
dec
mov
or
mov
int3
js
or
fdivr
cmp
push
icebp
into
jl
cmpsl
sub
pop
in
mov
mov
movsb
out
adc
leave
jnp
fbstp
mov
lret
sub
xchg
mov
repnz
stc
loopne
pop
fildl
cwtl
add
movsb
aad
mov
rclb
js
sbb
sub
mov
lcall
pop
mov
cmp
arpl
push
dec
and
jmp
hlt
ss
dec
fiadds
je
and
clc
fists
jg
movsb
dec
inc
fwait
xchg
and
pushf
dec
nop
dec
andb
jle
sub
cmc
cmp
mov
imul
loopne
rcr
hlt
and
daa
orb
bound
stos
in
sahf
xchg
movsb
jns
lea
xor
add
mov
or
or
loope
push
mov
jb
inc
inc
fildl
pop
cwtl
xchg
in
aaa
dec
cmpsb
xor
xchg
inc
jecxz
sahf
mov
insl
icebp
sahf
aaa
scas
clc
imul
enter
jns
cmp
cmpsb
jecxz
fdiv
clc
adc
ja
xor
pop
xor
aam
pop
sbb
cs
sbb
mov
cmpb
movsl
jnp
pop
xchg
fistl
jnp
outsl
add
loop
adc
sbb
gs
sub
cwtl
cmpsb
es
sbbb
test
stos
std
push
add
ficoml
xchg
stos
jae
out
arpl
cmp
cmp
mov
jns
subb
jecxz
mov
dec
out
shll
push
in
loope
test
mov
xchg
push
pop
fiadds
pop
pop
xor
movsb
movsl
and
stos
stos
dec
jle
cltd
and
into
test
inc
dec
mov
lret
int
mov
push
adc
fisubrl
cltd
mov
rorb
mov
pop
fs
or
mov
mov
pop
push
and
mov
aas
xchg
add
pop
clc
fisubrl
xor
sti
inc
mov
leave
or
out
clc
jl
scas
sub
pop
pop
outsb
pop
ljmp
mov
rcrb
xchg
mov
mov
lahf
or
outsl
mov
jge
xchg
jne
pop
inc
mov
xlat
test
notl
push
call
fnstsw
int3
mov
lcall
sub
push
mov
lods
mov
js
mov
xchg
sub
icebp
imul
mov
xchg
aad
jae
in
add
jae
jne
imul
push
cmc
xor
hlt
daa
fnstsw
fildll
int
test
mov
cmpl
aas
aad
xchg
jl
out
push
out
inc
sbb
scas
cmp
inc
fiaddl
pop
jg
inc
push
pop
lods
popa
into
adc
dec
leave
cmpsl
push
jae
test
mov
xlat
xchg
or
or
rcr
lods
push
jae
xchg
clc
rcrl
pavgb
testl
adc
cltd
lret
mov
scas
mov
mov
fdivrp
sub
push
enter
or
lea
and
int3
in
inc
inc
mov
inc
out
arpl
mov
mov
rol
jmp
stos
mov
push
dec
mov
pop
and
jbe
rcrl
imul
cmp
xor
lods
or
cmp
pop
test
mov
xor
test
and
or
cmp
movl
jo
into
mov
push
ret
stc
xorb
or
or
adc
xor
sub
arpl
andb
and
xchg
ret
ret
push
aas
pop
imul
jae
ror
push
hlt
lahf
mulb
mov
pop
es
mov
in
xchg
sbbl
clc
lds
pop
jp
sub
jns
sub
sub
push
xor
lods
and
mov
xchg
push
and
imul
ss
or
loopne
test
adc
roll
iret
faddl
loope
rclb
sbb
rolb
push
daa
scas
stc
movsb
stos
pop
adc
das
mov
out
mov
mov
mov
pop
int
xor
cmp
push
loope
fnsave
aad
sahf
loopne
pop
jl
nop
sar
or
xchg
sar
je
sub
aas
leave
or
shll
mov
pop
push
pushf
popf
jno
mov
mov
loopne
sbb
and
cwtl
in
jae
jp
dec
fadds
push
pusha
addb
daa
adcb
rclb
ds
mov
mov
stc
in
ss
mov
loope
call
add
xchg
adc
pusha
dec
sahf
push
shlb
mov
adcb
lods
xlat
mov
xor
ja
fldl
test
ljmp
sbb
dec
idivb
fdivp
push
lods
push
les
cmp
aas
mov
sbb
mov
push
xlat
adc
sub
fwait
inc
gs
shll
std
shll
clc
lcall
push
pop
out
ret
xor
fwait
fs
jmp
fwait
gs
fcomps
lcall
mov
fnstsw
stc
mov
es
sarl
lret
pop
pop
xchg
fst
pop
mov
jbe
lods
imul
jecxz
mov
popa
dec
sti
sbb
fcmovnbe
xchg
call
aas
andl
mov
sbb
cmp
insl
inc
iret
fmuls
inc
mov
testb
mov
jb
aaa
mov
pop
xorl
jle
enter
mov
dec
ja
sbb
or
xor
mov
push
hlt
stos
idivl
add
mov
test
sub
int
inc
pop
ja
cmp
test
into
dec
mov
cmp
addr16
or
lcall
xchg
add
dec
cli
push
cmpsl
add
loopne
push
popa
lahf
mov
icebp
outsb
adc
fcoms
fs
mov
sub
idivl
adc
or
jl
outsl
jmp
push
inc
sbb
mov
xchg
inc
ljmp
shr
call
dec
adcb
adc
test
movsb
dec
fistl
pop
fsubrl
cmpl
cmc
or
int
mov
lret
sub
push
std
jno
pop
pop
xor
mov
cltd
xchg
aaa
call
rorl
mov
dec
or
push
sub
xchg
pop
push
gs
jg
notb
test
call
xchg
lock
pop
sbb
loope
or
pop
lret
pop
inc
cmp
add
cmp
mov
mov
fistpll
mov
push
imull
dec
mov
stos
clc
lcall
or
imul
inc
fdiv
mov
cmpb
fcmove
dec
popf
loopne
idivb
je
cmp
stos
pop
adc
fwait
and
cmp
cmpsl
push
add
adc
loope
enter
inc
mov
decb
lea
push
push
into
es
fs
xor
push
jle
jbe
ret
and
movsb
mov
xchg
sahf
jmp
mov
mov
repnz
or
and
sub
lret
xchg
sbb
fdivrl
mov
pop
add
daa
rorb
ficoml
repnz
pushf
ja
frstor
aam
arpl
adc
mov
inc
aas
jo
xor
pop
adc
add
arpl
or
sarb
adc
popf
push
mov
sbb
push
or
xor
cvttps2pi
gs
jo
inc
out
fdivl
insl
xor
cli
aas
ljmp
add
cmc
test
push
or
push
adc
dec
data16
outsl
mov
fsubrl
jmp
mov
test
sub
cwtl
loopne
cltd
sub
mov
negb
or
xor
movsl
xchg
sbb
das
nop
and
outsl
ljmp
jmp
mov
mov
push
lret
sbb
ds
push
aam
mov
jmp
push
xchg
jmp
addr16
adc
dec
mov
or
mov
dec
enter
cmp
pop
lock
sub
icebp
pop
or
jmp
pop
pop
orl
dec
xchg
lods
jle
sarl
jge
xor
pop
fidivs
sbb
pushf
stc
out
mov
sti
cmp
mov
mov
fs
xchg
ret
or
scas
inc
in
fiadds
mov
pop
xlat
mov
push
ss
inc
cmpsb
scas
out
mov
adc
stos
mov
ret
popa
gs
push
int
jle
rcrb
cwtl
hlt
inc
jmp
repz
inc
xchg
xlat
and
fists
arpl
nop
das
sbb
fldcw
sub
jl
push
push
lds
addr16
inc
jno
inc
arpl
dec
xor
pop
inc
mov
pushf
lret
mov
leave
movsl
mov
push
gs
pop
lcall
in
push
add
jecxz
pop
outsl
dec
pop
pop
mov
out
subl
out
jmp
pop
jo
sbb
push
aad
add
sar
imul
xchg
mov
push
adc
mov
adc
repnz
iret
lock
mov
int
push
inc
dec
mov
inc
jae
jmp
bound
sbb
lret
push
jmp
sbb
add
lock
sarb
jle
or
outsb
js
aam
push
pop
sub
or
inc
aas
sub
dec
rcl
pop
fdivs
test
xor
xchg
fstpt
adc
push
pop
sub
insl
and
xor
xor
push
push
push
scas
cwtl
out
cmp
pop
inc
ret
enter
sbb
cmp
lret
mov
push
push
orb
and
or
mov
mov
mov
and
popf
pop
sbbl
test
sbb
and
mov
andb
cmp
negb
cmp
mov
data16
and
xchg
int3
popl
and
loope
mov
cmp
fisttpll
in
mov
sbb
push
pop
insb
sbb
jno
cmpsl
ss
mov
int3
cs
add
movsb
test
xor
jg
std
mov
dec
push
pusha
push
dec
mov
out
outsb
arpl
ss
sub
and
movsb
jp
dec
lods
xchg
bound
mov
std
jge
subl
inc
stos
mov
daa
dec
xor
cmp
xor
mov
and
add
inc
sti
xchg
or
pop
fcoml
fldt
mov
pop
fpatan
sub
outsb
ret
jge
add
mov
mov
mov
pop
mov
and
test
push
mov
int
inc
mov
mov
and
hlt
fwait
test
sub
je
adc
orl
jge
jle
lods
aas
in
fisttpll
xchg
mov
push
mov
xor
shl
in
push
xchg
sub
clc
imulb
clc
dec
xchg
or
imul
das
int3
jnp
jle
inc
push
jp
push
and
mov
push
adc
int
inc
test
lar
push
and
in
mov
sahf
hlt
ds
in
test
cld
cmp
and
sub
lds
lret
xchg
addb
mov
xchg
cld
and
sbb
or
jmp
std
pop
jb
enter
lahf
pop
lods
jmp
push
sub
xchg
jne
repnz
cli
fisubl
ss
mov
fsubr
adc
cmpsl
loop
popa
sub
mov
mov
xor
leave
sahf
adc
add
adc
push
xchg
stos
pop
xlat
mov
and
push
in
jg
sbb
jecxz
in
out
mov
jp
jns
sub
out
fildll
inc
jne
or
lea
lcall
cmp
out
pop
pop
fwait
mov
pop
xchg
xchg
pop
sbb
jo
stos
jecxz
pushf
and
cmp
sbb
jo
movsb
out
fadds
push
fwait
xor
cltd
push
in
lret
sub
ficoml
inc
xor
test
jg
test
xlat
ljmp
push
and
adc
js
adc
daa
aas
subb
add
out
inc
and
mov
xchg
mov
lahf
add
bound
push
add
dec
pop
int
cmp
jno
popa
push
pusha
mov
cmp
mov
pop
inc
adc
jmp
sub
sub
xchg
and
or
pop
mov
push
addr16
cmovae
pop
xchg
xchg
jno
pop
add
push
mov
cmp
jmp
lea
lret
pop
test
cmpsl
and
imull
int
sbb
add
jbe
mov
jl
pop
rorb
xchg
mov
lcall
add
sbb
pop
lods
jb
dec
fiadds
or
xchg
fstps
outsb
mov
jno
pop
aam
movsl
into
sbb
test
or
ret
jno
cmp
test
ss
sub
icebp
xor
add
cwtl
ret
mov
dec
std
loop
xchg
add
fwait
mov
mov
jg
xor
mov
aas
loop
lret
sub
bound
fidivrl
cmp
and
mov
add
inc
sub
mov
movsl
inc
pop
scas
add
add
xchg
cmp
fisubrs
xchg
sbb
dec
push
insl
pop
adc
pop
sub
or
shl
mov
dec
addr16
xchg
in
out
sub
int
and
jmp
or
add
xchg
fxam
popf
rorb
imul
out
push
sti
dec
pop
and
loope
enter
mov
ja
adc
int
pop
xlat
jb
inc
mov
loopne
std
xor
aas
fldt
pop
jmp
cwtl
dec
repnz
stos
mov
adc
push
lret
adc
mov
not
mov
jl
pop
mov
loopne
sbb
jae
icebp
inc
ret
dec
mov
bound
mov
scas
sti
in
cwtl
in
xor
push
and
into
jb
sbb
inc
mov
push
cmp
and
out
in
in
stos
xor
sbb
scas
lcall
enter
and
jno
jno
test
inc
pop
insl
pop
jmp
cmpb
pop
out
xor
outsb
or
push
fbstp
and
jae
sti
add
insl
jge
inc
dec
mov
out
es
fdivrs
mov
push
or
jns
rol
or
fnstenv
pusha
pop
cld
imul
repnz
push
shl
or
lret
out
in
lods
adc
ss
sub
push
pop
mov
test
cmp
lret
adc
push
psrld
movl
cmp
mov
mov
jns
jl
movsb
test
jns
or
repnz
arpl
pop
mov
and
xor
sub
inc
sub
mov
jl
mov
mov
arpl
mov
pop
in
mov
or
insb
stc
mov
nop
jb
test
mov
jmp
in
cli
insl
xorl
mov
jb
daa
sub
xchg
mov
mov
cmpsl
stc
or
jnp
int
xor
int3
dec
cltd
mov
lds
in
mov
sub
add
lods
pop
mov
aad
inc
mov
stos
addr16
mov
cmc
testb
sbb
jmp
cmp
neg
mov
mov
and
lods
jo
sbb
shll
jo
adc
lret
ss
fdivrs
std
mov
push
xorb
push
xor
or
jns
mov
pop
call
dec
mov
pop
xor
popf
movl
cmpsb
push
xor
aam
repnz
push
bound
rcrl
xor
xor
enter
ffree
leave
dec
sbb
cltd
or
mov
sub
jl
call
and
push
sbb
dec
pop
pop
rcr
fimuls
jo
mov
mov
inc
or
movl
xchg
inc
pop
xchg
sub
mov
outsl
sub
cmp
out
rcrl
outsb
lods
inc
cmpsl
int
adc
clc
adc
mov
xchg
xchg
add
pop
sub
or
adc
sti
pusha
loope
dec
mov
je
mov
xchg
sbb
lret
lahf
sub
cmp
cmp
pop
ljmp
decl
ljmp
out
pop
lea
aaa
ltr
push
sub
xor
jg
test
dec
aam
loopne
mov
adc
fnsave
fwait
mov
add
mov
out
lods
jge
dec
mov
ret
aaa
or
in
inc
popa
scas
mov
push
daa
sub
and
fwait
push
or
xor
dec
mov
test
sbbb
ds
or
xor
push
mov
sbb
fldl
scas
pop
bound
int
jge
jmp
std
shrb
out
xchg
movsl
lret
clc
xchg
push
or
dec
xorl
daa
add
mov
xor
scas
mov
mov
lds
cld
mulb
xor
push
pop
sub
lds
fisttpl
inc
dec
sahf
pop
sarl
and
push
sub
lret
inc
mov
dec
adc
pop
fs
pop
and
push
xor
arpl
jle
test
popl
xor
gs
aad
lods
pushf
jne
neg
xchg
rcll
push
nop
adc
scas
int
pop
test
pop
mov
shll
mov
or
movsb
out
out
shlb
sbb
mov
test
or
shl
scas
cmpsb
in
mov
jmp
cmpsl
jl
push
mov
dec
adcb
xchg
or
fiaddl
data16
sub
lahf
rolb
sbb
pushf
jg
rcrl
adc
jo
lea
xchg
jne
int3
cmp
lea
popa
pop
hlt
ret
sub
add
into
cmp
mov
mov
aas
push
dec
inc
stos
jmp
dec
insb
cmp
fsubrl
int
fnsave
mov
cltd
rclb
sub
sbb
scas
push
xchg
rclb
sbb
gs
mov
xor
out
je
inc
aam
stos
jo
loop
gs
push
aas
cmp
mov
mov
mov
mov
pop
test
insl
bound
test
inc
add
xor
push
mov
pusha
fdivrl
dec
dec
add
nop
clc
lods
call
mov
sub
inc
mov
outsl
lcall
lds
sbb
sbb
in
mov
cs
stos
mov
mov
pop
adc
xor
mov
jmp
dec
movsb
sbb
fisubs
xchg
loopne
cmp
xorl
push
pop
xor
hlt
insb
xchg
dec
push
fdivrs
sarl
xchg
dec
sub
cmp
test
xchg
stc
push
xchg
jne
xor
push
leave
sub
cmc
pop
adc
pop
push
adc
cmp
nop
xchg
mov
cmpl
inc
push
sub
jnp
mov
js
fisttps
add
push
inc
repnz
iret
leave
stc
jmp
sub
aas
cmp
xor
lcall
push
outsb
mov
xor
inc
movl
jmp
movsl
dec
pusha
outsl
rorb
movsb
into
inc
stos
loope
push
push
mov
and
stos
les
dec
ja
cli
push
pop
cmpsl
cmp
leave
add
leave
mov
fldl
in
jle
pop
loop
jl
push
shlb
xor
je
ss
ja
mov
movsb
cmp
ljmp
les
sarb
dec
xchg
mov
jbe
mov
imul
cmp
xchg
repnz
dec
adc
jecxz
adc
adc
cmp
mov
dec
jmp
loopne
add
cld
xchg
js
sbb
test
sub
xor
jae
mov
cltd
inc
xor
or
mov
hlt
movsb
cmc
mov
cmpsb
sub
pop
push
imul
cmp
push
and
dec
mov
sbb
add
xchg
mov
and
dec
lahf
cmp
mov
dec
mov
push
add
xor
or
pop
push
dec
sbb
pop
cmc
sbb
dec
xor
dec
out
jnp
push
loop
xor
cs
adc
cmpb
inc
shlb
and
imul
adc
imulb
and
adc
sbb
dec
or
jg
sbb
xor
popf
lods
cltd
inc
push
and
aad
sahf
push
sub
loop
pop
pop
jae
in
pop
mov
addr16
pop
xchg
jnp
je
ds
shrl
not
cmp
mov
mov
cmp
lods
add
dec
and
inc
ret
push
pusha
mov
ss
pop
lods
sub
mov
fwait
pop
pop
sbb
or
scas
insb
addb
imul
sahf
dec
bnd
fwait
dec
bnd
jne
pop
fstps
mov
cltd
rorb
ret
fmuls
push
aas
stc
ds
rclb
dec
dec
ret
xchg
ds
loope
push
arpl
leave
sbb
sub
dec
nop
adc
test
mov
pop
stos
int3
imul
jae
lahf
shl
jae
mov
sbb
out
push
stos
and
inc
mov
loope
imull
inc
mov
shlb
aaa
xchg
cltd
pop
outsl
in
mov
loope
inc
mov
leave
push
int
stc
sub
jb
xchg
fmuls
jno
xchg
push
repnz
cs
push
or
shl
inc
daa
addr16
mov
mov
xchg
xchg
jmp
add
adc
scas
adc
cli
xchg
daa
inc
scas
scas
int3
popa
fcmovne
addb
and
push
notb
mov
std
mov
sbb
cmp
aas
push
nop
pop
cmpsl
pop
sbb
cmp
mov
testl
jne
pop
fidivrl
push
movsb
and
lea
xor
clc
hlt
pop
int
xor
xor
mov
cmpsl
shlb
cmp
cld
outsl
divl
outsl
pop
xchg
dec
or
sbb
adc
int
roll
fmul
stos
in
sub
lret
add
pop
push
cmp
ljmp
mov
cmc
adc
sub
ss
mov
in
or
mov
fmulp
inc
imul
dec
enter
aas
push
dec
cmpsb
mov
jae
fldt
ficoms
sbb
popa
xor
push
pop
mov
and
sahf
into
hlt
dec
stos
popa
mov
pop
push
pop
imul
mov
jmp
in
out
test
push
or
mov
inc
push
mov
xor
lea
out
call
gs
sbb
jl
mov
ret
mov
insb
ret
in
scas
addr16
adc
addr16
repnz
xchg
sti
test
loopne
rcrb
sub
repz
jne
out
je
jb
movsb
pop
mov
pusha
shlb
sbb
cmp
mov
sbbb
andl
fldt
xor
mov
fcmovbe
inc
std
and
dec
pop
push
leave
sbb
inc
pop
push
dec
out
jge
imul
arpl
je
lock
and
cmp
lds
movsb
gs
mov
imul
fucomi
sub
sub
loopne
dec
je
dec
cmp
inc
cli
xchg
sub
stos
sbb
ficompl
mov
jg
sahf
xchg
movsb
testb
push
int3
jno
mov
mov
and
call
ret
xchg
movsl
jmp
jle
test
je
sub
std
inc
jae
mov
xchg
test
xchg
clc
cmp
mov
mov
xor
dec
aam
cmpsb
pop
jnp
pop
mov
stos
jl
add
cmp
push
movsl
xchg
insl
insl
xorl
roll
xor
stos
mov
popa
inc
jmp
cmpsb
loopne
nop
adc
stos
clc
test
pop
push
xlat
div
sbb
fstl
rclb
cmp
andb
movsl
jne
outsl
cltd
addr16
pop
push
mov
cmp
cmp
or
xor
sbb
or
test
adc
mov
in
xor
les
sub
movsb
add
out
mov
jmp
jmp
mov
dec
fs
sbb
ljmp
movb
in
mov
out
cmp
jp
inc
jne
daa
jle
sahf
sahf
sbb
mov
cmp
rolb
popa
dec
inc
dec
test
lahf
mov
into
mov
enter
aas
jnp
mov
add
add
lahf
das
jge
push
cmp
fbstp
pop
inc
dec
loopne
sub
repz
xchg
or
shrb
push
lods
mov
in
mov
jg
cmp
out
mov
fldt
mov
pop
push
fwait
jns
and
mov
add
js
xchg
bt
out
lds
shll
push
loop
sbb
hlt
repz
jl
jg
xchg
sbb
mov
outsl
andb
aad
mov
mov
nop
push
pop
in
dec
adc
les
test
imul
stos
dec
daa
mov
je
add
mul
adcb
pop
ficoml
pop
mov
std
lods
dec
jbe
mov
bound
cmp
scas
or
in
or
ss
addr16
outsl
sbb
in
sbb
fwait
rorb
jne
ficoms
shl
push
adc
movsl
dec
and
mov
cmpb
mov
sbb
int3
sbb
cltd
repz
rcll
dec
cmp
inc
in
movb
add
or
out
sbb
out
stc
inc
ror
xchg
rol
movhps
sub
xchg
mov
cltd
mov
scas
cmc
mov
js,pt
in
cmp
pop
repz
pop
mov
push
outsb
cmpsb
cmc
mov
push
pop
xor
cli
stos
mov
jmp
stos
fcompl
enter
xchg
fwait
and
lret
stos
mov
mov
push
jl
dec
push
push
adc
lea
stos
xchg
mov
jo
pop
adc
sub
adc
inc
cmp
popf
inc
xchg
push
inc
leave
sub
lret
loopne
push
in
jmp
xor
xchg
adc
or
mov
pushf
inc
mov
data16
shlb
repz
aaa
sarl
movl
fldpi
mov
and
push
out
je
or
mov
pusha
data16
xchg
in
adc
imul
inc
sbb
cmp
xchg
aaa
xchg
adc
leave
mov
in
and
jb
or
rcrb
cmpsb
mov
inc
push
fistl
mov
loope
leave
sahf
pop
scas
leave
mov
cmc
jno
insb
test
in
xor
ret
jae
lahf
xor
jecxz
inc
popa
add
sub
ret
xchg
or
xchg
add
cmc
sub
loope
mov
inc
pop
mov
mov
arpl
xchg
and
dec
outsl
mov
and
hlt
jg
mov
lods
sub
cmp
clc
out
gs
stos
into
in
test
aaa
scas
xchg
imul
mov
jae
mov
and
hlt
pop
pusha
dec
fdivl
div
das
dec
jbe
jae
adc
sti
sarb
xchg
and
xchg
movsb
sahf
add
and
sahf
lret
dec
sub
adc
scas
sahf
shrl
mov
mov
and
mov
ja
cld
or
stos
ljmp
jp
jge
pop
sbb
cwtl
or
jo
rol
and
push
pop
mov
lret
push
outsl
cmp
aas
insb
lods
mov
mov
push
lcall
add
daa
fisubs
or
sub
xor
aaa
stos
jbe
cmpsb
xor
pusha
leave
out
fnstcw
jnp
jbe
mov
les
mov
test
ds
ret
das
bound
jo
push
cmp
mov
inc
incl
inc
push
mov
repz
inc
and
and
xchg
stos
daa
movsl
scas
insl
add
pushf
out
js
add
jecxz
cmp
push
xchg
pop
repz
sub
sbb
mov
sbb
xor
lret
lods
xchg
xchg
lret
loope
cmp
or
adc
mov
pop
movsl
sbb
or
int
inc
mov
jae
nop
out
test
xchg
cltd
subl
je
outsl
pop
mov
jge
mov
jbe
out
mov
mov
test
pop
inc
loopne
ljmp
mov
fisubl
cmp
adc
jmp
push
mov
pop
or
mov
or
clc
icebp
push
sbb
sbb
test
dec
jns
mov
add
testl
aaa
pop
cmp
out
outsb
das
mov
push
out
dec
mov
loop
aam
cltd
inc
lcall
fbld
scas
mov
sahf
dec
aas
cmp
sahf
pop
xor
sbb
sahf
jle
cwtl
shll
fst
lret
pop
int3
dec
sub
xchg
adc
push
cld
jne
rol
int3
adc
dec
xlat
ja
mov
sub
sbb
out
push
pop
out
push
sbbb
inc
mov
int
add
iret
test
pop
jb
inc
sub
inc
addl
cmp
or
push
pop
ja
cmp
ret
test
pop
mov
or
cmpsl
scas
sub
insb
cmp
sarl
loop
loopne
notl
jo
and
insl
test
sahf
sub
jo
sub
pop
xor
pop
lcall
rolb
pop
in
jle
int
and
mov
scas
push
push
jno
push
xchg
ret
mov
mov
pop
ja
int3
xchg
into
rcll
cmp
adc
shl
orb
mov
cmp
movsl
inc
std
nop
mov
xchg
mov
lret
cmp
shr
int
ret
or
aas
mov
xchg
push
mov
mov
jo
dec
cwtl
jae
cmpl
add
pusha
movsb
sbb
adc
mov
mov
movsb
cmp
faddl
clc
mov
push
sub
add
shrb
insl
adc
jecxz
popf
push
mov
enter
rcl
div
and
imul
xlat
mov
pop
adc
xbegin
mov
cmp
pop
cmp
arpl
mov
pop
dec
out
popa
test
call
sub
pop
cltd
and
and
sbb
insl
test
bswap
xchg
out
add
xor
stos
and
leave
sti
aad
leave
in
jmp
insl
and
les
int3
pusha
xor
arpl
int
arpl
test
std
push
cmp
mov
or
pop
pusha
and
aas
movsb
sbbl
xlat
stos
sbb
push
and
clc
pop
jmp
mov
fistpll
jb
or
daa
std
movsl
dec
mov
or
pop
cld
mov
ret
aam
mov
jl
js
cltd
lcall
je
loopne
or
insl
imul
and
xchg
mov
mov
shl
mov
nop
decb
add
push
add
cmp
pop
mov
inc
fbstp
bnd
in
fwait
ds
inc
pop
push
dec
std
mov
push
mov
fcomps
comiss
pop
push
and
jns
inc
push
movsl
jbe
test
xchg
or
fwait
sti
cmpsb
ss
enter
mov
push
out
loop
sbb
xor
repz
mov
cmc
cs
jle
int3
jb
adc
rol
dec
and
mov
ljmp
cmpsl
xchg
movsl
sbb
test
outsb
push
mov
shr
push
add
std
mov
or
jno
mov
jbe
pop
xlat
orb
pop
and
pop
inc
sbb
push
jg
bound
clc
and
xchg
daa
sti
popf
addr16
in
sbb
test
repz
out
xchg
jg
int
fwait
jl
pop
sbb
ret
xchg
adc
into
jo
add
outsb
adc
outsl
mov
mov
adc
sti
test
lods
nop
jo
mov
push
iret
inc
aam
repnz
adc
outsl
push
iret
lret
jns
sbb
xchg
insl
test
lcall
jl
leave
std
jge
sbb
pop
mov
mov
and
clc
inc
addb
and
jge
cmp
sbb
cli
repnz
aas
pusha
mov
pop
or
push
cwtl
pop
fdivrs
and
das
dec
ljmp
xchg
xchg
pop
jbe
jg
sahf
dec
icebp
inc
cmp
ret
test
addr16
ret
adc
js
ja
dec
push
lret
cltd
pop
push
sarl
add
fs
mov
dec
imul
adc
insb
shl
fmull
jmp
adc
add
lahf
in
mov
sti
jge
lahf
mov
or
adc
jge
lret
fstpt
inc
push
in
int3
sbb
sbb
ds
lret
pop
lahf
fisttpl
add
aad
cli
inc
pushaw
fstps
ss
loop
lods
inc
jmp
call
jle
loopne
insl
sbb
jle
push
mov
in
inc
and
sahf
sbb
and
insl
hlt
xchg
xlat
push
enter
cmp
dec
xchg
loop
les
and
nop
or
sbb
xchg
push
lahf
scas
cmp
xchg
cmpsl
push
jno
mov
call
enter
rclb
fldenv
fwait
hlt
sbbb
push
stc
adc
adc
add
sub
test
in
leave
or
xor
and
mov
jns
dec
adc
pop
stos
push
imul
cmp
idivb
dec
or
fs
adcl
cmpsb
or
sbb
iret
imul
arpl
stc
adc
dec
in
fs
mov
roll
mov
ss
movsl
sbb
das
mov
call
lgdtl
jae
xchg
jns
pop
cmp
jle
into
fldl
popf
stos
xchg
jp
pop
in
out
cmc
loop
std
mov
mov
and
and
into
cmpl
cmp
xchg
xchg
pop
scas
adc
insb
sbb
movsb
subl
push
into
les
cs
jg
ja
mov
push
pop
outsb
sub
test
add
js
fs
enter
xchg
dec
xchg
pop
ffree
jmp
add
test
and
clc
jge
adc
jge
inc
jmp
adc
xorl
pop
adcb
dec
movsb
in
inc
mov
mov
and
sbbb
inc
and
test
lcall
mov
mov
cli
movsl
jp
aam
mov
pop
ja
cmpsl
rolb
and
jb
mov
cmpsb
test
mov
jle
insl
xchg
pop
in
js
int3
pop
pop
pop
cli
dec
out
lock
push
call
xor
rorb
andl
fisttps
pop
test
aam
cmp
sbb
jne
sub
in
mov
or
aam
adcl
movsl
mov
lret
adc
test
cmpsl
sti
icebp
dec
int
subb
mov
and
adc
adc
sahf
pop
xchg
inc
push
pop
mov
sub
subb
push
mov
filds
lret
push
and
in
test
and
jl
imul
mov
pop
xchg
int3
imul
leave
dec
fwait
cmpsl
adc
dec
les
iret
pushf
icebp
loop
add
pop
mov
dec
sub
xor
dec
lods
mov
int
cmp
jnp
pushf
sub
adc
ja
adc
push
inc
sarb
sbb
cwtl
mov
inc
pop
sbb
adc
repnz
bound
lds
arpl
xor
rclb
add
pop
pusha
cmp
add
pop
in
pop
hlt
or
add
fstpl
pushf
rolb
add
int3
inc
xor
popa
mull
aam
mov
inc
ss
adc
or
push
jmp
repnz
mov
or
mov
rcrb
or
out
sbb
shrl
dec
sbb
lcall
and
js
push
mov
cmp
fisubrl
lret
cld
fcoml
cld
pop
ja
xchg
add
sbb
push
andl
jns
push
adc
sbb
std
shlb
daa
loope
push
rolb
pop
rolb
adc
dec
clc
xor
enter
cld
enter
sub
hlt
and
adc
rolb
push
cltd
loope
out
mov
pop
sub
jl
fsubr
and
imul
in
aam
and
push
fucomp
sahf
dec
adc
cmp
or
push
fwait
dec
xor
ror
sbbb
scas
sub
push
adc
dec
pop
movsb
adc
int3
dec
js
or
and
cmp
arpl
mov
pushf
aad
mov
rorb
pop
ficompl
jmp
lcall
jg
into
mov
sti
xchg
cld
sub
jl
mov
add
add
pop
fcompl
mov
xor
mov
fwait
sbb
sub
and
cmp
test
rcl
popf
mov
cmpsb
repz
adcl
xchg
fiaddl
gs
jecxz
inc
dec
jle
insl
cmp
mov
xchg
push
adc
xchg
int
sbb
lret
push
xchg
ret
push
shll
inc
sub
mull
imul
fnclex
or
data16
sub
in
jb
dec
inc
repnz
pop
mov
scas
xor
add
sbb
fcoml
sub
mov
inc
adc
mov
inc
push
lods
insl
in
push
mov
jg
ficomps
jae
lock
test
fistl
mov
mov
jno
in
sbb
adc
sbb
xchg
mov
mov
leave
or
add
cli
xchg
lods
xor
nop
cmpsb
adc
sbb
sub
pushf
inc
in
inc
daa
sbb
flds
call
or
cmp
orl
mov
xchg
aad
jns
in
es
push
sbb
inc
jle
adc
push
cmp
pop
call
lret
gs
xchg
xchg
jb
mov
js
cmp
ficompl
xor
lret
sbb
stos
lds
pop
popf
es
jbe
xchg
icebp
ret
clc
iret
push
int3
mov
push
ss
cmp
xchg
mov
mov
int
les
repz
and
xchg
add
test
and
mov
jns
jmp
xor
sub
jbe
sbb
mov
dec
mov
push
mov
sbbl
ljmp
sub
adc
mov
insb
aas
sbb
cltd
fistpll
xchg
into
sarb
popf
enter
mov
pop
rorb
jae
push
cwtl
mov
add
aad
lds
popl
lock
int3
sub
mov
lcall
insb
or
shll
mov
xor
push
pop
or
and
or
dec
cmc
ss
shrb
and
jno
cmp
or
fdivrl
orb
fwait
mov
lret
dec
add
mov
sub
scas
mov
inc
in
popf
inc
movl
int3
sub
adc
pop
and
adc
lds
or
and
icebp
fisubl
pop
jne
repnz
ds
push
mov
fwait
into
mov
lock
xlat
rorl
ret
and
dec
addr16
lcall
icebp
mov
jl
ds
jo
and
mov
sbb
lret
out
jg
lds
or
es
pushf
sbb
shll
subl
movsb
scas
out
in
daa
inc
push
lock
pop
dec
outsb
clc
jle
aam
decl
test
sarl
or
inc
push
mov
and
cmp
mov
iret
ret
mov
sub
sub
add
cld
dec
fsubr
adc
jp
jp
cltd
jecxz
or
and
ret
subb
inc
out
and
fs
roll
shlb
jns
dec
scas
pop
in
aas
cmpsl
ja
in
hlt
cmp
jmp
or
fmull
cmpsl
mov
hlt
xchg
ja
cmp
subl
pop
leave
add
or
cmp
cmp
popa
adc
xorb
xor
xchg
imul
jl
adc
cmp
or
pop
mov
cmp
enter
out
mov
sub
mov
popa
lods
sbb
dec
icebp
shl
repz
les
int
scas
mov
ss
sahf
daa
jp
cltd
jns
pop
xor
lods
test
popf
int
ja
jae
repnz
push
ret
sub
inc
sub
jns
lds
push
xlat
aam
hlt
add
xlat
xor
or
mov
inc
jmp
ss
test
add
loop
cltd
pop
loope
ret
lret
aaa
and
jns
add
xor
mov
dec
add
jp
mov
daa
mov
cmc
mov
jae
push
lds
jge
dec
lret
mov
mov
dec
dec
test
js
adc
mov
lret
xor
jns
cmp
ret
cmp
mov
orl
xor
out
jb
jnp
dec
mov
fidivl
jg
pop
push
jo
pop
add
into
ljmp
lods
jb
lahf
rcll
dec
loop
mov
pop
inc
dec
sub
xchg
call
xor
mov
add
addr16
aam
fwait
inc
rcl
mov
cmp
sbb
add
out
jo
jbe
movsl
inc
or
lret
mov
sahf
sbb
or
je
or
imul
subl
in
imul
sub
sarl
aam
dec
mov
xor
sbb
push
pop
mov
inc
pop
cmc
pop
mov
idivl
push
or
sbb
pop
dec
mov
int
enter
cmpsl
test
jg
in
jmp
rcrl
jmp
adc
ds
shl
inc
insb
movsb
fadds
lock
and
mov
loope
dec
jns
in
pop
xchg
cmp
orl
or
xor
sub
pop
add
xor
cmpsl
xchg
popa
jmp
cmp
and
fidivrl
sti
or
rcrl
sbb
or
dec
mov
ficompl
jmp
lcall
test
test
jb
out
fstl
push
xchg
stos
in
scas
popf
mov
mov
lea
mov
test
loopne
cmp
aaa
or
lcall
fdivl
mov
xor
sbb
inc
mov
push
pushf
jl
or
movsl
cmp
or
dec
add
dec
add
dec
icebp
xchg
dec
fistpl
push
loop
out
test
jmp
data16
push
mov
cmp
jg
inc
into
shrl
xor
test
lret
std
pop
xchg
and
push
arpl
xchg
iret
adc
in
fstpt
sbb
mov
inc
stos
out
call
mov
insl
out
dec
lahf
push
xchg
gs
les
in
lahf
loope
cmp
in
cmp
adc
sub
jne
lret
shll
lret
jns
std
mov
jp
shrb
mov
das
cmp
data16
xchg
fs
flds
mov
xchg
push
push
fstps
sbb
mov
push
addr16
scas
mov
call
daa
popa
fwait
sahf
pop
jo
std
mov
mov
loop
jle
and
filds
xlat
dec
mov
push
clc
sub
cltd
cmp
test
lcall
enter
cltd
sarb
dec
aad
mov
adc
cmp
imul
loop
mov
jle
sub
leave
sbb
pop
sbb
xchg
lock
lcall
orl
mov
in
orb
cmp
daa
add
fcompl
movsl
mov
divl
jge
mov
pushf
lahf
push
sub
ss
cmp
cmp
xlat
outsl
mov
jl
and
js
mov
push
lea
leave
into
fwait
adc
xor
add
xor
jg
dec
test
mov
lds
loope
aad
xchg
mov
loope
in
test
lods
jmp
xchg
int3
insb
xchg
fidivrs
je
xchg
hlt
pop
out
lock
cmp
rorb
sub
xor
jg
mov
and
rorl
or
push
or
clc
into
and
xchg
jno
or
or
sbb
dec
sarl
cmp
movsb
sahf
pop
mov
push
add
orb
ret
add
lea
xchg
std
mov
fildll
lcall
test
cs
or
mov
sti
outsb
mov
in
popf
test
mov
mov
xchg
xor
stos
xor
out
fimull
sbb
xor
mov
outsl
xchg
inc
mov
xchg
dec
xor
orl
xchg
lods
cs
int
cmp
mov
fldt
shl
jmp
test
jg
mov
cmpsl
xchg
pusha
dec
cmp
or
call
xor
mov
clc
jno
int3
popf
cmpsl
inc
mov
lahf
aas
cmp
adc
dec
fisttpll
mov
loopne
jo
test
pop
lret
inc
mov
dec
xlat
in
and
add
add
mov
outsb
or
out
aaa
int3
sbb
repz
movsb
cmpsb
test
xchg
ljmp
push
mov
or
clc
fstpl
adc
inc
pushf
aam
cmpsb
je
xchg
mov
adc
lea
or
in
lock
pop
lcall
xorl
repz
popa
push
and
xchg
daa
xchg
shrl
dec
pop
lret
fdivrs
inc
in
or
out
test
dec
std
jle
xlat
jnp
test
aam
mov
pushf
adc
mov
addr16
loop
in
ds
push
jb
hlt
out
lods
int3
mov
adc
xchg
and
test
lahf
cmp
push
call
pop
sar
dec
repz
inc
adc
aaa
and
push
push
rorl
das
in
inc
mov
add
cwtl
inc
inc
sbb
inc
leave
mul
push
xor
hlt
pop
sub
fwait
shrl
pop
xchg
mov
sub
out
and
push
and
and
xor
and
mov
mov
pop
and
andl
std
add
inc
push
cmp
pushf
mov
inc
pop
data16
cmpsb
pop
ds
movsb
inc
movsl
ror
xorb
sub
mov
jbe
in
mov
imul
jne
xor
fidivrl
divl
inc
call
and
jl
cmpl
inc
fs
inc
nop
scas
add
jle
sti
inc
add
and
and
sbb
push
add
cmpsb
ljmp
sbb
lock
pusha
push
jae
and
dec
arpl
dec
sbb
sub
xchg
cmp
sarl
mov
test
ret
xchg
test
or
in
lea
vxorps
pop
lock
fcmovu
push
and
cmp
add
xchg
out
insb
xor
rcll
notl
pop
test
rcrl
inc
lahf
bound
add
sub
lret
adc
ffree
xor
mov
add
test
adc
mov
loopne
dec
inc
js
sysret
xlat
add
imul
es
sub
sub
in
aam
inc
or
inc
out
fcmovnbe
scas
push
popf
push
dec
std
fbld
and
ret
push
addr16
push
jno
aaa
lock
nopl
adcl
loope
ret
jl
jmp
movsl
int
jo
int
enter
sti
cmpsl
pop
jne
jecxz
inc
sahf
cmpsb
into
pop
or
arpl
push
leave
inc
cmc
adc
popa
mov
sbb
jne
inc
and
outsb
xor
ret
std
pushl
jge
pop
outsb
jmp
cld
pop
out
cmc
sbb
cmpsb
or
jle
and
repz
jno
outsb
aad
adc
xor
sbb
jmp
lea
sub
scas
xchg
jge
fimuls
or
cmpsb
xchg
sbb
pop
ljmp
or
fnop
insb
mov
mov
jge
fstpt
nop
cmpsl
sub
xchg
std
mov
in
sub
mov
mov
jge
lds
xor
mov
rcr
mov
add
in
lods
inc
xchg
jge
je
push
jnp
cmpsl
sbb
cmpl
jnp
dec
repz
fstl
or
into
xchg
fsubrp
xchg
dec
add
cwtl
pop
adc
inc
adc
push
push
mov
inc
push
mov
popf
push
fcmove
pop
out
pop
das
xchg
rorl
fisttpl
mov
stos
iret
push
out
lea
std
push
cmp
fdivrl
sub
jmp
dec
out
or
div
cmp
or
loope
clc
xchg
xor
mov
sub
jae
push
pop
mov
xor
mov
es
in
pusha
outsl
in
pop
add
dec
daa
sbb
lods
shl
dec
inc
bswap
nop
add
xchg
add
sub
rcr
cmp
movsb
cltd
sub
and
jne
cmp
out
fbstp
mov
insb
jg
pushl
fisubs
stc
pop
cmpsb
ret
sbb
aaa
fstl
dec
xlat
pop
mov
xlat
jmp
push
pop
out
stos
or
vpunpckhqdq
mov
sub
outsb
pop
pop
sbb
lret
inc
and
xor
in
mov
mov
jmp
push
test
pmaxsw
iret
imul
pop
xchg
aad
add
or
popf
mov
and
les
add
sub
add
test
mov
pop
inc
pop
xchg
xchg
mov
mulb
inc
push
push
dec
xchg
cli
add
cld
mov
aad
push
mov
mov
andb
pop
insb
fidivrs
adc
ret
jnp
subl
mov
adcl
jmp
pop
pusha
cmp
rorb
xor
xchg
fwait
sbbl
cmpl
pop
sbb
sbb
repnz
adc
incb
sbb
shlb
mov
cmpsl
pop
mov
aad
loope
dec
xchg
mov
filds
push
mov
or
imul
add
cmp
inc
pop
xor
push
xchg
xor
lock
js
or
pop
stc
or
or
ret
jecxz
mov
test
inc
loopne
mov
aas
test
adc
mov
adc
scas
adc
daa
leave
sahf
lea
out
fsubl
repnz
das
and
mov
xor
or
dec
inc
cs
or
out
inc
jnp
ja
push
orb
add
inc
xchg
mov
dec
pop
push
and
cltd
ds
xchg
jno
sbb
notb
mov
stc
sti
sti
inc
mov
jne
icebp
fwait
aas
sbb
sub
in
and
xchg
push
inc
icebp
leave
lds
mov
xchg
and
mov
mov
das
sbb
sub
fyl2x
in
jno
and
psubq
cmc
inc
xchg
adc
inc
out
add
ljmp
ja
pop
mov
pop
fsts
push
in
pop
sbb
dec
lea
push
sahf
mov
or
inc
mov
inc
mov
and
sahf
dec
psrlq
and
popf
stc
outsl
push
ja
cmp
xchg
fucomp
mov
lret
push
mov
xchg
lahf
or
popf
nop
mov
es
ja
movb
adc
mov
mov
push
insb
mov
jmp
gs
inc
mov
sbb
mov
pop
xor
movsb
mov
adc
mov
test
je
shrb
loope
inc
shlb
adc
jl
pop
imul
inc
add
push
mov
insb
sub
out
clc
imul
leave
outsl
mov
aad
aas
insl
cmp
mov
pop
xchg
shlb
lahf
ds
cli
sub
xchg
mov
fsub
mov
push
fiaddl
dec
add
xchg
imul
insl
push
sbb
enter
bound
inc
add
sbb
jecxz
fiadds
flds
xchg
pop
pop
sbb
repz
inc
pop
sub
mov
jge
lods
or
clc
and
lea
lock
lods
pop
xlat
pop
pop
mov
push
and
add
inc
pushl
xchg
icebp
mov
cltd
pop
and
jno
xchg
or
sbb
out
in
popf
mov
movsl
mov
and
inc
jbe
pop
dec
ror
imulb
mov
fimull
int3
jl
test
add
cmc
pop
xchg
lcall
scas
popf
lret
jmp
addr16
pop
xor
or
sub
or
enter
xchg
pop
sbb
jl
mov
lods
dec
rolb
ret
mov
sahf
lret
notb
clc
repnz
mov
in
aaa
sbb
xor
push
push
call
lock
fsubs
push
mov
xchg
aaa
test
adc
sub
dec
mov
test
arpl
jno
cmp
push
jg
rol
sub
repnz
mov
loope
sub
adc
push
dec
push
adcb
mov
mov
sub
xor
clc
push
cmp
xorl
shl
mov
rcrl
adc
movsl
sub
mov
hlt
adc
cs
jb
repz
fidivl
push
pop
outsl
mov
mov
inc
imulb
call
lret
jns
xchg
loope
test
stos
xchg
mov
lahf
fs
adc
mov
nop
mov
pop
cmp
cmp
mov
das
pop
sbb
jg
les
inc
iret
shlb
or
bound
sub
test
or
out
push
pop
jbe
loop
sub
add
xchg
stos
sub
cmp
mov
in
xacquire
orl
rolb
sti
push
mov
rorb
in
mov
fucomip
xchg
sarl
cltd
mov
icebp
sbb
std
or
icebp
pop
add
xor
out
movsl
xchg
outsl
lock
lcall
sbb
pop
mov
mov
test
lea
add
cmpsl
aad
movsl
std
mov
push
inc
outsl
or
int
pop
fistl
fidivl
xlat
jnp
pushf
sbb
fldt
sbb
mov
dec
icebp
stos
xor
fcmove
xchg
xlat
shr
jge
ljmp
aad
std
ret
jmp
lret
push
test
jnp
cld
scas
mov
movsb
imul
inc
xchg
lea
pop
call
push
and
push
mov
out
ret
inc
add
scas
mov
mov
sbb
stos
add
push
test
xor
sti
cwtl
mov
lods
mov
mul
negb
icebp
mov
hlt
jno
jl
sti
fsubs
dec
inc
jp
push
pop
loope
push
fwait
icebp
addr16
inc
int3
add
xor
data16
push
rcrb
and
inc
dec
stos
inc
test
sbb
cld
test
sbb
cltd
mov
ret
jecxz
push
idivl
mov
scas
and
add
adc
subb
jge
adc
rcl
sbb
adc
ja
es
and
jmp
mov
repz
sub
je
ljmp
push
xor
jae
inc
adc
or
add
sub
imul
cmpl
jmp
and
add
xchg
mov
ljmp
push
out
or
add
loopne
loopne
xor
and
rcl
cmp
jle
sub
mov
adc
test
cmp
or
or
mov
lock
xchg
movsl
cmp
outsl
add
push
jmp
das
dec
fisttps
and
inc
in
fildll
test
das
shll
xor
idivl
imul
lcall
jo
stos
jmp
aaa
das
or
mov
dec
js
jnp
dec
ret
loopne
or
shl
lahf
sub
insb
mov
cmp
mov
sbbb
addb
das
popa
iret
orb
and
inc
and
and
or
icebp
adc
push
mov
xchg
mov
int
ret
xor
push
aaa
mov
ds
shrl
and
cs
pop
adcb
fnstsw
fcoml
pop
push
ret
fsts
push
mov
cld
pop
fcmovu
cltd
leave
push
jo
mov
stos
je
or
dec
mov
mov
mov
loopne
icebp
xchg
js
xchg
fldl
test
hlt
or
hlt
pushf
sub
xchg
jle
jg
add
push
adc
lahf
mov
je
aam
sub
xchg
cmp
nop
insb
mov
pop
pop
jg
jo
test
pop
push
ret
movsl
ljmp
sub
icebp
call
in
xor
sbbl
inc
test
sbb
mov
xor
jns
mov
or
je
add
insl
mov
mov
xchg
mov
push
jns
mov
sti
cmp
mov
xor
add
dec
xor
aam
mov
ret
int
fisubrl
popa
xor
mov
stos
mov
fmull
fdivrs
and
push
adc
imul
cmp
stos
xchg
popf
enter
aaa
rorl
adc
push
sub
sbb
push
mov
mov
int3
cmp
outsb
mov
mov
mov
fstpt
addr16
cmpsb
shll
mov
or
comiss
xor
jge
sub
fucom
jmp
mov
xor
inc
xchg
add
shrb
xchg
mov
iret
sbb
mov
cwtl
dec
call
scas
scas
inc
mov
sub
xchg
add
and
pop
jb
pop
dec
mov
pop
mov
subl
xor
mov
inc
pop
sbb
push
xchg
lret
jg
bound
aas
jno
mov
xor
jbe
adc
cmp
mov
mov
jns
jbe
cmpb
dec
mov
inc
push
pop
scas
and
or
sub
enter
mov
int3
sbb
or
xchg
in
push
push
mov
inc
fidivrs
adc
adc
adc
repnz
sarb
push
fnstsw
or
sub
out
jb
jecxz
pop
outsl
push
sbb
ficoms
daa
test
dec
int
test
scas
aas
dec
sub
jg
notb
xor
add
push
fsubl
loope
sahf
cmp
xchg
loop
lcall
out
out
sbbl
out
xor
add
into
add
sbb
sub
cmc
repz
inc
xchg
mov
mov
lea
cmp
popf
mov
sub
dec
xchg
outsb
jne
js
out
inc
xchg
pop
out
jg
cmp
ss
pop
lods
into
pop
icebp
and
loop
scas
or
push
jne
je
fwait
add
jae
je
xchg
sbb
mov
cmc
jmp
dec
or
mov
pusha
xchg
aaa
and
pop
mov
aaa
les
repz
aam
stos
fistpl
pop
ss
jbe
cmp
repz
xor
sbb
sarl
pmuludq
jge
ror
fadds
aam
js
aas
fs
fnstcw
pusha
stos
xor
lds
outsl
mov
pop
jge
insb
aas
adc
jns
repnz
mov
xchg
add
mov
rcrl
inc
idivl
cmp
in
push
mov
add
lock
insl
sbb
xchg
pop
ror
push
push
inc
push
mov
outsb
adc
pushw
or
inc
or
aaa
add
and
adc
ret
in
repz
push
xchg
mov
mov
in
rcll
popf
fdivl
cmp
rcrl
inc
mov
jnp
inc
jbe
mov
sti
outsb
ljmp
mov
mov
pop
inc
orl
add
clc
mov
jle
jecxz
push
mov
push
add
xchg
decl
std
xchg
push
insl
fdiv
xor
cmp
lods
and
jo
dec
jmp
fincstp
or
out
aas
aad
pop
mov
cwtl
mov
mov
or
ljmp
mov
sbb
xchg
fldt
je
call
cmp
jbe
mov
xchg
hlt
mov
hlt
leave
popa
xor
dec
rolb
mov
cld
xor
call
inc
xchg
cltd
fistpll
xor
pop
call
cmp
lahf
mov
shrl
aaa
push
sbb
cmp
jge
int
jnp
icebp
mov
enter
xchg
jecxz
cld
imulb
punpckhdq
jno
adc
in
mov
jnp
cmp
xor
insl
je
adc
fwait
dec
pop
push
lods
divl
ret
mov
xchg
pop
mov
arpl
sbb
pop
xchg
lret
js
subb
clc
cmp
cmpsl
lea
js
lock
push
cli
rcll
loopne
dec
pushf
cltd
inc
dec
imul
xchg
popa
out
pop
mov
cmp
je
pop
aas
push
jle
pop
call
test
je
ret
sti
add
mov
mov
xchg
adc
sahf
cltd
mov
out
cmp
jle
push
popa
repnz
sti
xchg
or
inc
das
jl
lea
mov
lahf
mov
xor
sub
fstl
sbb
repz
and
test
leave
mov
daa
xchg
into
xor
xor
out
push
jg
ds
or
cld
push
sub
xlat
cs
and
insl
jbe
js
decl
fstpt
dec
xchg
sub
in
xlat
fildl
popf
mov
pop
pop
in
mov
ret
cmp
scas
scas
sub
div
and
cmpw
test
ljmp
cs
xchg
cld
sahf
mov
test
rcl
nop
vaddpd
lret
mov
out
and
push
mov
lods
inc
mov
mov
hlt
jno
es
push
inc
ss
pop
enter
cmp
repz
jle
out
adcl
leave
mov
xor
addr16
and
mov
or
adcb
out
fidivrs
incl
es
movsl
sahf
jge
ror
cmp
push
sub
ja
lahf
daa
out
pop
lods
dec
enter
mov
and
inc
add
mov
cld
jae
cmp
add
fwait
bound
icebp
out
mov
loop
movsl
ja
nop
or
test
dec
mov
mov
cpuid
stc
adc
sahf
mov
xchg
cmp
push
mov
pop
push
sbb
push
jmp
push
mov
test
dec
outsl
fdivs
into
push
pop
add
push
mov
xor
lock
fdivrl
pop
mov
aad
loope
push
mov
add
daa
in
outsb
lahf
stos
subl
inc
movb
lods
xor
push
sub
xchg
clc
test
add
shl
dec
fwait
sbb
ret
sub
lds
inc
out
jmp
push
push
stc
sbb
je
pop
cmp
outsw
mov
stos
push
aas
rolb
leave
mov
push
xchg
cli
mov
rclb
mov
cmp
fsubl
loopne
jae
sub
popf
push
in
test
aas
repnz
add
cmpsb
fld
inc
sub
mov
mov
cld
test
cmp
jb
loope
add
loop
xor
dec
rolb
imul
cmp
in
in
adc
je
nop
outsb
ret
and
ss
xchg
and
je
stos
fwait
stc
mov
or
test
insl
imulb
mov
push
ret
fisubrs
xor
and
mov
sbb
xor
scas
adc
movsl
mov
test
nop
mov
sbb
mov
or
in
mov
lock
pop
inc
mov
out
or
push
sbb
xchg
dec
mov
add
test
pop
roll
es
sbb
ja
dec
xor
pop
push
icebp
mov
push
dec
xor
pop
jns
insb
loopne
stos
outsb
aas
pop
adc
sahf
xor
shll
mov
inc
rorl
cmp
adc
addr16
out
aas
int
icebp
pop
aaa
out
mov
dec
stos
push
test
jo
test
sub
push
and
rcrb
es
dec
mov
mov
jle
pop
cmc
and
test
lock
dec
subb
or
pop
jo
stos
std
loope
call
cmc
xor
or
push
pop
stos
imul
gs
and
inc
in
mov
pop
movsl
sub
cmp
js
je
jbe
sbb
fisubrs
test
cmp
inc
lret
shll
scas
dec
pop
lock
push
dec
jp
lcall
xor
out
mov
pop
or
mov
push
add
mov
subb
dec
mov
movsb
jns
into
xor
mov
mov
lods
or
mov
push
rcr
push
icebp
push
cmp
roll
pop
popa
out
mov
frstor
nop
scas
push
inc
fbld
sbb
mov
mov
xlat
aas
out
idivb
fisttps
and
inc
jp
je
ret
ja
add
pop
jg
xrstors
mov
mov
or
pop
push
add
aam
push
dec
and
inc
and
cmc
inc
xchg
push
minps
cmpsl
test
popf
pusha
jmp
icebp
dec
out
push
mov
pop
sub
imul
dec
je
scas
sbb
test
cmpb
mov
dec
xor
sub
cmp
outsb
test
xor
aaa
add
faddp
shl
ret
mov
roll
imul
icebp
pop
stos
sbb
xlat
loopne
sub
dec
mov
and
cmp
ret
scas
push
scas
pusha
outsl
add
push
out
loop
div
cmpsb
out
xor
add
cmpl
xchg
lock
or
shr
pop
cli
scas
mov
fcoml
mov
or
sysexit
mov
cmpsb
rcrb
mov
and
xor
dec
adc
sbb
add
insl
mov
repz
jo
or
pop
mov
clc
ss
adc
call
lret
sbb
outsl
iret
jge
cmp
add
icebp
dec
and
popa
mov
sub
aad
ss
jle
jne
mov
adc
lcall
mov
xor
xchg
pop
lods
mov
add
out
sub
pop
xchg
popa
mov
add
imul
fs
cli
pop
iret
pop
ret
inc
int3
add
pop
xchg
adcb
mov
daa
mov
pop
rcrb
leave
cmp
inc
jmp
push
lock
imul
jge
cmp
sbb
inc
mov
nop
icebp
mov
pop
push
in
out
push
shl
inc
push
ja
test
pop
push
adc
push
mov
mov
xor
push
jns
lahf
bswap
out
add
sbb
in
mov
inc
hlt
scas
inc
mov
jmp
jo
pop
xchg
jae
xchg
mov
lcall
pop
pop
add
lods
repnz
aas
mov
repz
sbb
push
cli
iret
or
add
cmc
push
mov
movsl
pop
or
xchg
cld
sub
adc
xchg
xchg
imul
out
mov
or
add
jb,pn
fxch
jbe
sub
push
or
pop
add
xchg
shlb
sub
pop
pop
jne
jg
sbb
cld
std
xlat
xchg
test
push
cs
rcrb
jmp
mov
xchg
rep
add
movsb
or
pop
mov
mov
repz
xchg
dec
ds
push
add
rcrl
dec
ljmp
mov
add
jge
mov
sbb
push
xchg
jo
jmp
sbb
scas
jo
movsl
push
add
mov
jne
pop
outsl
sub
jmp
decl
test
sub
imul
test
in
movsb
addr16
popf
mulb
lret
jae
sete
push
add
scas
cmc
lods
xchg
stos
popf
pop
in
leave
pop
mov
mov
jge
sbb
pop
cmp
or
mov
inc
gs
fcompl
je
jge
test
xchg
sbb
mov
pop
mov
inc
xchg
orl
pop
mov
imul
cmp
xchg
scas
out
pop
bound
pop
movsl
lds
es
lahf
lods
out
sahf
sbb
iret
sbb
shlb
stos
pop
out
add
outsl
sbbb
clc
negl
lock
push
pop
out
mov
add
das
mov
inc
jmp
ret
push
ret
popf
pusha
push
inc
mov
int
in
mov
clc
loopne
push
gs
mov
aad
adc
or
pop
mov
push
cs
popa
filds
test
popa
icebp
mov
adc
dec
or
jp
aad
popf
adc
call
mov
push
xchg
in
jno
xchg
push
hlt
cmc
aaa
or
data16
dec
mov
xor
and
sub
aaa
movsl
mov
outsl
jnp
pop
and
pop
or
add
jb
mov
test
les
pop
add
je
addr16
das
data16
in
aaa
push
inc
imul
sbb
mov
mov
call
stos
sbb
jb
mov
sbb
out
popf
adc
sub
mov
in
pop
xor
dec
xchg
inc
inc
lret
jne
das
jl
pop
mov
jecxz
xor
in
aaa
xor
cmc
pop
aas
add
mov
sti
icebp
rcll
xchg
divb
xor
xchg
imul
push
scas
inc
mov
mov
inc
ret
sbb
mov
popa
movsl
cmp
pop
dec
mov
leave
fildl
xor
mov
repnz
es
inc
mov
mov
push
mov
out
push
sbb
xor
cmp
pushf
jle
jmp
sub
test
mov
arpl
sbb
adc
xchg
inc
hlt
call
in
and
fdivl
inc
subl
inc
dec
push
ja
je
xchg
enter
and
jecxz
add
rclb
pop
cmp
xchg
push
in
addr16
nop
repz
lds
dec
xchg
call
ret
add
mov
inc
xchg
gs
sub
dec
inc
dec
cli
stc
mov
lahf
ja
or
test
jo
aaa
add
mov
xchg
push
add
mov
push
or
es
es
sbb
cmp
cmpsb
into
cwtl
mov
inc
xchg
and
std
dec
mov
and
insb
fwait
push
repnz
leave
fs
loopne
aad
inc
mov
nop
mov
repz
les
daa
sbb
xlat
adc
xchg
scas
cmp
cmp
add
mov
jecxz
lahf
lock
cltd
je
adc
sbb
mov
sbb
aaa
sub
mov
jne
inc
cli
sbb
sub
incl
ds
jge
lea
rol
mov
lods
iret
jp
xchg
cmp
jno
fildll
loop
jle
xchg
sti
testb
mov
imul
pusha
pushl
xchg
add
mov
out
arpl
pusha
lcall
pop
lock
cli
add
call
or
xchg
sti
push
js
popa
cmp
mov
pop
test
xor
cmpsl
sub
lahf
neg
sub
sbb
xor
ds
mov
add
jmp
xor
cmpb
mov
sbb
cmp
in
xor
and
xlat
mov
xor
incb
pop
int
fisttpll
add
adc
loope
sub
out
xor
xor
jmp
or
test
ss
pop
je
dec
inc
xchg
sbb
leave
and
mov
pop
int3
ror
std
faddl
aaa
stos
push
sbb
sbb
movsb
cmp
test
fbld
cmp
les
notb
jnp
fisubrs
push
pusha
dec
lret
ss
push
jg
and
imul
mov
xchg
std
out
and
into
rolw
pop
xchg
mov
mov
repz
movsl
add
jecxz
adc
inc
and
adc
xchg
cmp
cwtl
xlat
ljmp
xlat
push
inc
fcmovu
pop
lods
aaa
push
dec
inc
sbb
ficomps
push
test
jle
push
movl
pop
cmp
add
mov
in
dec
in
xchg
adc
mov
flds
inc
in
mov
xor
rorl
mov
movb
daa
andb
sti
and
cmp
add
loope
cmpsb
arpl
subl
sbb
rcrl
xchg
pop
xor
pop
cli
pop
fiadds
div
std
mov
jp
mov
and
test
iret
lods
insl
stos
fbstp
or
dec
jmp
fcoms
insl
in
idivl
add
arpl
pop
push
or
ja
cld
orb
adc
arpl
fstps
pop
pop
cld
mov
pop
aad
add
sub
je
das
sub
pop
jne,pt
pop
daa
jl
out
popf
cmpsl
int
in
mov
mov
mov
imul
movsb
dec
mov
inc
fildll
dec
fbld
mov
mov
cmp
mov
push
imul
dec
out
mov
inc
push
push
in
or
dec
out
fwait
mov
roll
mov
dec
jmp
pop
imul
xchg
dec
sar
adc
das
cmp
insl
loope
cmp
outsb
rol
push
fstps
int
in
popa
das
arpl
mov
nop
pop
pop
insb
pop
cmp
pop
mov
in
push
mov
push
jmp
int
int
push
jmp
rolb
xchg
imul
and
mov
pop
lea
sbb
adc
fadds
in
out
xchg
or
dec
nop
bound
insb
pop
adc
xor
xor
push
adc
push
jae
jp
add
sbbl
and
or
inc
aaa
scas
cmpb
cs
dec
xor
cwtl
push
sub
add
xlat
add
ret
add
mov
test
push
mov
xor
adc
into
adc
xor
and
je
sub
movsb
cmp
arpl
and
jg
ret
mov
push
sti
dec
inc
cmp
frstor
xorl
idiv
js
xchg
and
mov
cmovne
test
pop
xlat
adc
xchg
mov
sub
cld
pop
cmc
adc
repz
clc
aam
push
xchg
repnz
cmpsl
lods
notb
jp
add
and
rorb
mov
fcoml
fldl
inc
daa
rcl
sub
fmuls
fcompl
sti
rclb
nop
or
lods
shlb
insl
mov
lcall
jne
int
xor
adc
pushf
lods
push
jmp
xor
or
pusha
mov
and
sub
lahf
not
mov
pop
movsb
xchg
xchg
xchg
mov
push
jl
popa
lds
mov
jge
xor
pop
cmpsl
sbb
pop
cmpsb
rorb
out
jg
pop
out
inc
lret
jae
popf
outsb
aaa
into
fdivrs
mov
add
bound
aad
push
inc
push
mov
push
jg
andl
jns
call
lods
mov
cmp
dec
pop
test
clc
cmp
fwait
test
xor
bound
xchg
cmc
bound
je
adc
xchg
pop
lcallw
push
lret
loopne
jmp
movsb
in
sbbb
pop
mov
and
stc
dec
pop
dec
mov
cmp
mov
jns
cmp
sbb
inc
repnz
push
ret
movsl
mov
call
lret
jp
bound
pop
ret
dec
push
and
push
cltd
scas
mov
or
cs
mov
test
pop
repz
in
push
outsb
xchg
loopne
jne
out
es
bound
dec
push
popa
mov
insl
mov
imul
imul
dec
ret
adc
and
cmpsl
lret
inc
mov
pop
pop
jno
xlat
adc
adc
cmp
and
and
mov
sub
insl
mov
imul
out
xchg
dec
scas
cltd
leave
xchg
sub
cmp
test
dec
xlat
mov
aaa
jne
aam
adc
das
daa
rclb
lcall
jmp
in
cmpsl
daa
test
call
addr16
dec
mov
add
cmp
nop
mov
jmp
sahf
sub
inc
test
jge
mov
fwait
dec
inc
push
sub
int3
cs
rorb
push
test
adc
imul
mov
sub
or
cmp
cmp
inc
stos
xor
adc
in
mov
aad
pop
sbb
sub
dec
stc
pop
mov
hlt
cmp
sub
jmp
movsl
jp
mov
test
mov
sahf
adc
push
mov
sub
xor
xchg
xor
inc
inc
pop
fwait
sub
ljmp
test
mov
push
in
add
repz
mov
mov
aas
xor
xchg
out
dec
dec
jae
dec
adc
push
inc
repnz
adc
andb
xchg
cwtl
or
movl
xor
cmp
loopnew
jbe
test
xor
out
jle
imull
mov
outsl
insl
das
xchg
gs
ds
ret
push
popa
call
fistl
mov
outsl
mov
adc
or
dec
add
hlt
out
mov
push
push
push
enter
mov
or
repnz
and
sub
mul
xor
in
pop
or
cmp
cmp
aas
inc
addr16
xor
jg
sub
fsubl
mov
xchg
or
sbb
pop
arpl
push
cmp
or
mov
dec
bound
fs
fdivrs
icebp
cmpsb
in
xchg
fidivl
pop
adc
jns
xchg
mov
jno
aas
test
sarb
mov
outsb
lods
xor
lds
fistl
mov
jge
dec
mov
loopne
pop
jmp
lahf
jle
cld
icebp
add
lcall
shll
movsl
shll
setno
inc
test
clc
push
jmp
std
lock
in
bswap
or
jecxz
bound
pop
lock
fisttpll
out
cmovle
inc
icebp
or
mov
imul
sub
and
and
leave
adc
xchg
sub
ss
sub
jno
jb
in
pop
or
adc
xchg
ljmp
adc
jge
mov
repz
cmp
sbb
dec
popa
imul
leave
cwtl
xchg
jb
les
pop
inc
push
in
xchg
xchg
jne
jmp
adc
das
push
testl
imul
cmp
mov
cltd
jns
cs
icebp
xchg
dec
cmp
shl
dec
stos
gs
daa
mov
repnz
xor
ror
xchg
or
push
pop
ret
cwtl
push
repnz
or
or
jle
and
lcall
jns
cmp
jb
out
pop
inc
stc
pop
xchg
jns
test
sub
or
out
test
ret
cmp
insl
jne
sahf
mov
adc
xchg
aam
xor
outsb
sbb
adc
xor
daa
ret
cs
call
leave
stc
jae
and
dec
and
jle
cmp
xchg
dec
outsl
pop
je
cmc
add
xor
cld
mov
test
push
mov
cltd
xlat
addr16
int
pop
jg
aas
aaa
inc
jle
test
movsl
js
ficomps
lds
and
mov
mov
sbb
and
pop
js
inc
and
inc
out
jmp
rcll
aas
in
pusha
test
sbb
xorb
mov
int3
and
pop
lret
and
imul
push
shrl
xor
repnz
mov
test
sbb
fistpll
xchg
dec
add
popa
pop
xor
je
xor
mov
inc
or
rcr
loop
lahf
addr16
xchg
cmp
stos
out
inc
lret
out
outsl
push
leave
cs
js
std
jge
loop
aam
sbb
cmp
mov
add
jle
insb
stos
imul
les
mov
pop
sbb
lods
xchg
orb
cmp
clc
std
movsb
arpl
in
outsl
ret
mov
pusha
dec
or
jno
repz
jae
imul
xchg
flds
mov
lods
filds
sahf
sbb
rep
lods
mov
mov
ds
cmpsl
mov
mov
inc
leave
xchg
xor
faddp
dec
sub
jno
mov
dec
mov
lret
stc
int3
stc
pop
out
stos
mov
xor
jno
in
loop
or
xchg
es
dec
sub
cmpsl
jecxz
dec
fsts
jg
fisubrl
pop
out
or
mov
jge
inc
lods
cmpsb
cmc
ret
pop
fiaddl
push
sarl
dec
cli
stc
inc
outsb
ret
dec
aam
jmp
in
pop
ss
jg
es
or
push
add
dec
dec
jbe
scas
dec
inc
lret
fisubrl
sub
shl
repz
xor
mov
popf
clc
ljmp
mov
xor
dec
push
leave
dec
xorl
outsb
ret
cs
and
scas
sbb
lds
cmpl
stos
sbb
push
mov
aaa
xchg
push
call
cwtl
xchg
mov
sub
dec
stos
sub
imul
addr16
dec
push
jbe
jbe
push
inc
mov
int3
into
sahf
xchg
xlat
jae
pop
sbb
cmpsb
into
fs
mov
jne
gs
inc
mov
les
push
or
and
aas
add
stos
ret
icebp
xor
and
or
dec
or
dec
inc
ljmp
sub
fcomps
fsubs
cwtl
popa
movsb
jnp
cmp
sub
jno
iret
mov
cmp
sbb
xchg
sub
fdivl
nop
push
cmc
cmp
sbb
push
pop
aaa
cmp
mov
jg
daa
ja
stos
dec
mov
xchg
sahf
mov
and
jae
adc
lss
cmp
in
mov
fisttps
mov
sbb
movsl
push
and
sub
pop
mov
pop
mov
xor
add
into
inc
inc
mov
pop
fbld
xchg
push
jo
push
pop
insb
imul
pop
lret
add
mov
es
or
test
push
cmp
adc
test
rcrb
les
mov
stos
inc
mov
sahf
sbb
inc
mov
movsl
mov
in
lret
movb
inc
rorb
ret
xchg
stc
jl
cmp
int
add
aad
mov
mov
sub
bnd
lea
cmp
xorl
mov
mov
lretw
dec
cmp
daa
enter
mov
iret
xchg
mov
scas
jns
enter
push
insb
mov
bnd
xchg
cmp
jecxz
xchg
jno
and
popa
es
mov
push
push
xchg
out
hlt
imul
sub
leave
push
daa
jge
xchg
pop
out
xor
loopne
loop
in
adc
inc
dec
lret
inc
rol
inc
imul
aad
and
dec
or
inc
jmp
pusha
in
pusha
ds
std
xchg
test
ds
aas
pop
stos
push
in
fcompl
je
ret
stos
and
pop
pop
addr16
push
jl
out
inc
mov
push
dec
test
bswap
lret
subb
mov
cwtl
sarl
push
and
popl
dec
mov
pop
mov
add
mov
aam
dec
xor
jns
or
add
pop
push
shlb
into
mov
xchg
aaa
xchg
dec
xor
mov
or
xchg
jecxz
or
out
cmp
cmp
outsb
les
sbb
stc
popf
clc
sbb
push
jbe
leave
jnp
loop
dec
add
out
mov
xchg
xchg
movsb
push
nop
sbb
sub
or
es
or
lcall
in
outsl
push
adcl
les
call
or
jns
lahf
lea
ret
inc
and
sbb
insb
xchg
inc
mov
jg
movsb
inc
jns
or
and
insb
out
mov
add
jns
add
mov
push
pop
sbb
into
mov
or
int
xchg
sti
sbb
stos
popa
in
fisubs
lahf
add
call
shll
aad
inc
xor
push
xchg
int
dec
push
fisttpll
insb
dec
aad
lds
dec
and
sub
orl
fstp
cmp
cli
push
sbb
push
pop
cli
sub
inc
faddp
mov
inc
in
filds
mov
or
cmpsl
int
xor
stc
push
jb
lods
push
dec
data16
adc
movsb
sbb
stc
lods
out
cmp
test
cwtl
lahf
js
inc
or
stos
mov
gs
mov
sbb
repnz
add
imul
lods
iret
sbb
mov
test
mov
rol
sbb
dec
test
jmp
and
mov
dec
out
movsl
es
ja
inc
mov
pushf
data16
and
into
aad
outsb
xorps
or
scas
push
leave
pop
fcoml
mov
jno
sbb
fists
jl
add
int
pop
insl
icebp
adc
inc
add
pop
add
jle
mov
stos
mov
shl
inc
pop
hlt
adc
jnp
and
cmp
inc
movsl
inc
xor
push
xchg
fdiv
fdivrl
icebp
sub
into
dec
mov
sbb
outsl
mov
aas
aas
pop
lret
adc
push
push
insb
push
inc
jns
adc
jecxz
cmp
or
push
xor
std
pop
sub
in
stc
push
dec
mov
sbb
push
lods
mov
in
push
and
lahf
push
xor
out
mov
add
stos
jo
jmp
add
inc
les
out
sbb
inc
cmpsb
fdivp
mov
mov
xchg
dec
jno
arpl
dec
sub
cs
repz
aaa
test
add
pop
cld
popa
movsl
sub
sub
sub
jmp
mov
push
or
lods
and
int
xchg
sub
in
iret
or
xlat
out
pop
arpl
in
and
dec
mov
xchg
sbb
nop
test
outsb
sbb
lock
mov
imul
sahf
enter
mov
push
pop
sti
rolb
lea
inc
push
mov
jp
jo
aam
jbe
sbb
push
mov
xchg
data16
mov
adc
adc
pushf
jae
fstpl
and
sahf
mov
mov
jo
loope
fdivl
and
xlat
jns
or
iret
fstpl
inc
push
sbb
inc
mov
mov
cmc
loop
xchg
out
ret
outsb
xor
sub
push
add
jg
pop
arpl
popa
pop
mov
add
sbb
pop
shll
es
xchg
dec
scas
daa
push
jecxz
xchg
pop
jp
lea
decb
sbb
mov
adc
sbb
or
into
inc
add
dec
ljmp
mov
test
ret
jecxz
mov
push
mov
jns
xchg
pop
xchg
cwtl
orl
sub
jl
pushf
daa
cmp
ljmp
stc
push
pop
lods
scas
cltd
movsl
jo
mov
inc
jno
test
das
test
andb
sub
hlt
xor
ja
pushf
popa
mov
addr16
repz
adc
in
dec
loope
call
lock
jbe
mov
dec
loope
push
scas
je
xchg
push
adc
pop
mov
adc
cmpsb
fs
hlt
sahf
loopne
rcrb
inc
xchg
add
lods
ds
inc
int3
adc
rcll
jge
sub
jmp
or
orb
mov
mov
pusha
sbb
sub
fisttps
bound
inc
sbb
and
mov
push
jle
test
push
pop
xor
dec
jge
lahf
xchg
aaa
clc
enter
pop
add
fistl
pop
or
sbb
mov
movsb
push
rol
roll
sbb
fwait
xchg
or
sub
push
stc
dec
ja
or
jg
imul
sbb
ret
push
push
mov
sub
adc
js
jp
jl
jo
test
call
inc
scas
mov
jg
mov
xor
mov
xor
cmp
xor
lds
dec
xchg
fistpll
push
cmc
je
loopne
xor
pushf
test
or
mov
push
xor
cwtl
jae
aas
in
add
jnp
sub
cltd
add
mov
xor
xchg
pop
push
gs
stos
andb
repnz
or
dec
setl
mov
jno
jecxz
rorb
test
xchg
ds
into
jb
xor
into
add
sub
das
je
dec
rcrb
clc
sub
hlt
xchg
jno
adc
dec
lods
inc
dec
ds
call
inc
jmp
mov
mov
xor
lea
push
jge
dec
jo
repnz
ss
imul
ror
mov
xchg
jge
fistl
mov
daa
fwait
mov
xlat
dec
add
dec
add
sub
scas
jne
enter
xlat
ljmp
xchg
loop
stos
ror
ja
jge
dec
xlat
xchg
lds
lea
mov
mov
adc
mov
lock
add
sbb
fsts
imulb
out
fildll
pop
loop
pop
dec
rolw
or
mov
mov
in
bound
in
add
fwait
scas
push
cli
adc
jno
movsl
jl
inc
sti
and
loope
sub
repz
out
sub
pop
sbb
stos
dec
push
lock
repnz
pop
sbb
scas
call
sbb
inc
sti
lret
out
or
or
sahf
inc
movsl
pop
js
mov
inc
cmpsb
xchg
mov
cmp
jne
mov
xchg
fnstcw
loop
pop
mov
mov
xor
int
mov
pop
pop
fst
iret
push
xor
aam
mov
mov
rorb
repz
lods
out
stos
scas
xchg
pop
ja
imul
in
leave
cmp
ljmp
xchg
push
clc
shll
push
scas
out
sbb
stc
popf
inc
lahf
aam
jns
jnp
pop
inc
rep
cmp
jg
push
mov
cmc
pop
pushf
imul
dec
rcrb
leave
ljmp
or
cmpsl
ljmp
nop
adc
xor
push
out
jg
pop
insl
stos
outsl
jge
pavgw
loopne
dec
data16
fidivrl
scas
sbb
mov
movsl
mov
mov
sbb
orl
aaa
int
and
cltd
mov
clc
aaa
outsb
mov
lret
mov
pop
scas
and
and
test
and
mov
push
iret
mov
mov
fsubl
add
and
jl
out
cmp
int3
cli
inc
push
add
jmp
cmc
jnp
push
cs
movsb
stos
jge
out
std
adc
xchg
or
loop
cmp
lret
cmp
movsl
sbb
lret
test
outsb
clc
lods
mov
adc
test
cli
loopne
inc
add
xor
mov
pop
xchg
or
mov
xor
mov
icebp
sbb
pop
outsb
jb
gs
dec
inc
out
stos
out
dec
fldcw
jecxz
xchg
shrl
fs
mov
ficoms
inc
inc
cmp
lcall
push
mov
orl
je
mov
jb
or
sbb
test
pop
in
nop
push
adc
push
dec
cmpsl
dec
hlt
jae
xchg
mov
mov
daa
cmc
push
jno
and
rcrb
push
les
sbb
xor
add
repz
lea
in
hlt
dec
lock
popf
in
fwait
movsl
or
inc
in
insl
pop
call
adc
mov
sbb
and
push
fidivrs
in
in
aam
jmp
lcall
cmp
push
sbb
in
loop
imul
arpl
inc
push
es
jno
mov
aam
pushf
pop
xor
in
insb
adc
pop
xchg
push
push
into
fsub
je
sbb
and
lods
movzbl
mov
addl
inc
ror
mov
and
daa
xor
jg
stos
icebp
push
in
xor
or
adc
in
cmp
lcall
xor
mov
sub
nop
test
fcom
fcoms
jnp
pop
insb
repz
sub
outsb
filds
pop
cmpl
mov
loopne
xor
ja
sbb
xchg
xor
cmpsl
cmp
xor
insl
pop
cmp
xor
cmpsb
xlat
push
jl
aaa
lcall
das
lea
loope
or
dec
dec
and
or
jl
push
dec
xor
lahf
mov
sub
mov
mov
fiadds
scas
adc
int
dec
in
pop
add
cmp
movsb
jbe
imul
ds
int
lods
enter
repnz
ss
enter
outsl
add
add
sbb
jne
in
fcompl
lods
rcrl
add
dec
add
mov
test
jle
push
das
cli
push
or
outsb
ja
lret
xor
lods
aaa
cld
insb
leave
cmp
or
cmpl
adc
imul
add
mul
xlat
test
dec
add
and
daa
pop
enter
fs
out
and
xor
mov
popf
pop
and
adc
inc
ret
into
jecxz
xor
push
cld
pushf
push
mov
mulb
xor
cmp
dec
das
stc
out
xchg
repnz
pop
mov
xor
sbb
scas
pop
push
or
mov
test
outsl
arpl
add
mov
push
jns
aad
pop
testb
das
adc
dec
cld
testb
fwait
in
test
and
imul
sub
repnz
std
bound
sub
int
push
push
mov
bnd
push
cmp
xchg
xchg
jns
cwtl
dec
out
add
rolb
in
nop
mov
mov
dec
nop
sbb
pop
shll
mov
or
imul
flds
and
mov
xor
ljmpw
cmpsb
sbbb
dec
or
lds
fadd
adc
xchg
shl
std
cwtl
std
lods
cmp
gs
jne
mov
add
pop
jl
in
cmc
ss
xchg
cmpsb
push
hlt
mov
cmpsl
push
gs
and
cmp
pop
add
ret
xchg
mov
cmp
in
push
test
mov
push
ret
and
bound
stos
cltd
mov
push
add
cwtl
in
imul
imul
sbb
ret
or
sbb
add
popl
cmp
xchg
mov
push
xor
dec
xor
or
aaa
pop
loopne
fwait
jmp
in
into
xlat
lods
cmpsb
cmp
cs
inc
rorb
or
add
lahf
out
and
jge
mov
cmp
mov
bound
mov
sub
and
sub
or
outsl
xchg
fisubs
cs
inc
in
rcrb
pop
inc
push
mov
sti
ljmp
or
mov
test
js
cmpsb
loopne
ret
cmp
nop
ret
scas
orl
and
jecxz
dec
xchg
aad
mov
std
cld
fstpl
add
out
test
pop
jle
js
sarb
adc
mov
adc
inc
cmp
dec
pop
push
sahf
mov
in
cmpsb
shlb
push
stos
popf
test
push
das
std
frstor
andl
jl
ljmp
hlt
jecxz
cmpsl
fwait
lret
es
rorl
sub
push
pop
and
jb
jl
and
cmpsl
rolb
sbb
mov
cltd
pop
rol
nop
idivb
popf
aam
jle
sbbb
or
inc
flds
push
xchg
imul
push
fsin
xor
movsl
negb
jnp
imul
int3
and
mov
hlt
out
mov
lds
mov
cmp
daa
daa
je
femms
outsl
jl
lea
push
mov
in
inc
out
push
xchg
rcll
cmp
shl
iret
cld
push
cmpsl
adc
loopne
mov
pop
inc
aam
je
nop
pop
and
push
or
jecxz
dec
iret
bound
adc
mov
sub
cmc
jae
push
cmpsl
sub
addr16
cltd
popf
roll
push
into
fiaddl
jmp
cmp
xor
jge
mov
jl
icebp
xchg
rcrb
xor
mov
out
pop
mov
xor
test
and
test
add
cmp
fcomp
fildl
in
or
pushf
scas
bound
mov
jle
bound
imul
dec
loope
adc
fs
in
mov
popf
push
rcrb
jnp
jno
pop
push
xor
and
dec
sbb
and
dec
cwtl
rcrl
loop
std
jl
xlat
inc
mov
dec
xchg
maskmovq
divl
loopne
or
mov
sbb
or
xor
dec
adc
cmp
test
push
lock
inc
les
std
ja
xchg
cmp
inc
rcrb
and
mov
andl
iret
aaa
push
sarb
mov
mov
or
xchg
mov
and
hlt
xor
addl
mov
mov
es
mov
out
push
cld
xchg
lds
ret
push
dec
or
inc
dec
and
sub
xchg
aad
stos
inc
jbe
lods
pop
ljmp
lods
pop
loope
pusha
jns
jb
push
shl
ret
into
sahf
cld
jl
dec
and
jae
cmpsb
movsb
jg
push
pop
sbbl
cmp
icebp
push
sub
cmp
clc
and
stos
jle
inc
jle
in
xor
pop
test
outsl
mov
jnp
cmp
dec
outsb
andl
int
dec
xchg
fmuls
jb
mov
cmp
and
adc
int3
adc
xchg
push
xchg
cwtl
dec
or
cmp
mov
popa
inc
cmp
and
lock
pop
pmulhw
and
cltd
sbb
test
call
jns
push
enter
mov
leave
movsl
ficoms
adc
mov
and
jge
ljmp
mov
dec
lret
cmpb
mov
adc
mov
sbb
outsl
lock
or
add
or
adc
xchg
mov
aaa
push
jmp
int3
xchg
arpl
sub
sti
jmp
sub
mov
out
mov
clc
shll
add
and
in
add
xor
xchg
xor
push
cld
orb
inc
add
adc
outsb
pop
aas
repz
sub
xchg
stos
mov
lret
xor
xor
outsb
cmpsb
cwtl
mov
out
nop
mov
or
aam
adc
adc
movsl
inc
xchg
xchg
scas
notb
cmp
jo
add
add
in
sar
in
or
push
rcl
inc
mov
outsl
sub
cs
insb
or
push
pop
push
pop
mov
mov
int
and
cmp
mov
dec
push
inc
add
sbb
pop
adc
mov
cmc
jle
adc
add
xor
xchg
inc
rclb
mov
xchg
mov
pusha
fwait
add
aad
movsl
and
cmp
sub
jecxz
lods
jl
cwtl
xor
jne
std
pushf
addr16
or
std
lea
stos
mov
mov
jae
inc
jmp
int
insb
outsb
mov
push
in
scas
lock
cmc
pusha
and
aad
shrl
ja
cltd
loope
mov
jb
repz
dec
stos
jae
aas
das
xor
pop
imul
jle
fmuls
repnz
jbe
aaa
cmp
jle,pt
xchg
in
pop
cmp
pop
add
shlb
xchg
pop
xchg
sub
fsubrl
or
bound
push
call
xchg
jns
xchg
fimull
sub
in
sti
cmpsb
and
nop
cmp
and
cmp
in
add
call
sub
fstpl
cmc
push
pop
mov
dec
cmp
roll
loope
add
and
mov
daa
mov
inc
pop
cmp
test
sub
adc
xor
cmp
fs
jo
mov
mov
cmp
mov
dec
mov
mov
add
movsb
fwait
xorb
pop
or
xlat
in
cmp
cli
stos
aas
iret
sub
cmp
insb
mov
sbb
mov
aas
fcomip
dec
scas
xchg
or
addr16
and
xchg
cltd
ja
fisttps
add
jnp
push
adc
outsb
or
or
xor
lahf
mov
in
repz
int3
inc
sub
lds
xchg
mov
inc
cmc
stos
int
mulb
test
or
dec
out
fcoml
push
enter
inc
mov
mov
in
push
jl
pushf
bound
arpl
cmpsl
movsl
xchg
test
ja
es
cs
cmp
dec
pop
mov
fldt
scas
push
add
lods
jg
add
jmp
mov
aas
xchg
and
dec
sti
in
push
add
cmc
add
adc
movsl
sbb
jbe
in
negl
mov
cmp
or
push
pop
cmpsb
popa
cli
out
sbb
and
jne
xor
inc
or
fs
mov
std
outsl
pop
shl
adc
mov
rcl
mov
test
movsb
into
xchg
adc
aas
sub
int3
mov
push
test
icebp
cltd
jnp
jo
lock
mov
das
mov
sub
mov
and
aas
movsl
sbb
repz
lahf
jmp
gs
lcall
ret
jmp
xchg
cmp
or
int
jmp
jbe
dec
mov
mov
mov
ljmp
popf
or
orl
mov
in
push
test
hlt
rcrl
jbe
ds
fisubl
jae
adc
dec
inc
adc
fstpl
sub
or
lods
call
pop
xchg
ljmp
pop
mov
lcall
sbb
in
fistpll
loope
into
mull
push
jmp
das
xchg
mov
cli
and
loope
ret
or
stos
call
outsl
jo
lock
xor
push
push
outsl
dec
lahf
mov
add
pop
pop
mov
jecxz
dec
mov
jo
popa
jl
test
lahf
iret
xchg
shll
ret
ja,pn
movsb
mov
mov
outsb
mov
popf
mov
jae
lods
jecxz
fnstsw
mov
xchg
sbb
and
pop
inc
mov
mov
popa
jl
adc
mov
mov
push
xchg
jecxz
bnd
jl
int3
add
jne
into
mov
nop
cwtl
jns
xor
enter
jmp
cmpsl
adc
clc
mov
or
jp
cmp
std
movsl
adc
aaa
xchg
mov
insl
jb
loope
sbb
jnp
out
pusha
push
loopne
mov
or
sbb
movsl
push
shlb
mov
pusha
fadd
mov
add
icebp
hlt
jl
jmp
std
jmp
sahf
sbb
in
push
cli
xor
adc
lods
mov
push
jmp
testl
and
lods
movsl
and
or
pushf
pop
sub
sbb
lods
mov
pop
and
mov
pop
lahf
and
shr
data16
clc
xor
push
aaa
aad
pushf
dec
loop
or
and
xchg
inc
fdivr
adc
pop
test
dec
daa
sbb
mov
jo
push
popa
mov
add
int3
rcrl
enter
jne
xchg
test
and
repz
cmp
dec
dec
jp
and
inc
pop
sub
icebp
push
ja
and
jae
rorb
jne
mull
inc
push
pop
pop
test
jmp
adc
mov
sbb
or
mov
cltd
or
inc
movsb
stc
lcall
cmp
int3
fisubrs
add
mov
mov
mov
loopne
cmp
or
ret
cmpsl
add
lock
add
sub
data16
cmp
popf
jno
sub
jmp
push
test
das
iret
push
aam
inc
outsb
rcl
test
daa
in
and
mov
inc
xor
sbb
cmp
push
cltd
adc
sbb
xchg
pop
dec
loopne
add
imul
dec
nop
push
pop
mov
inc
dec
es
scas
pop
roll
pop
dec
cmpsb
rcr
stc
hlt
andb
gs
jb
and
push
sbb
lods
xchg
loopne
mov
jne
shl
cwtl
and
test
inc
sahf
mov
sbb
scas
mov
ljmp
pop
ret
pop
add
mov
add
std
in
jecxz
mov
loop
hlt
and
push
lods
push
ja
mov
stos
add
and
test
test
ret
xor
imul
push
fwait
and
jbe
dec
jae
mov
pop
mov
pusha
lret
jne
leave
jne
pop
pusha
mov
inc
fistl
pop
jo
addr16
mov
mov
es
fdiv
std
jp
inc
sti
sbb
push
aaa
cmc
shl
jnp
mov
les
dec
or
mov
jge
in
jnp
push
mov
inc
adc
inc
dec
jmp
cwtl
in
notb
add
mov
mov
aaa
decl
fcomps
test
jns
leave
test
xor
scas
add
and
sahf
rorb
mov
and
pop
or
dec
int
pop
shll
jnp
mov
int
sbb
xchg
adc
adc
lret
pop
pop
sbb
dec
sbb
jg
mov
sbb
ret
inc
mov
mov
cmp
dec
cld
push
iret
ret
xor
xor
mov
xlat
in
pop
jnp
les
ja
lds
mov
sub
dec
ret
jle
xchg
cmp
pop
and
aam
dec
inc
sub
js
stc
test
pusha
in
xor
mov
in
jmp
adc
icebp
xchg
repz
jl
popf
notb
fisttpl
xor
xor
xor
dec
in
mov
subb
test
dec
sub
cwtl
or
or
push
repnz
xor
iret
frstor
mov
jbe
sub
lods
sbb
push
adc
pusha
pop
push
scas
rorl
add
xor
ja
dec
push
rcrb
pop
cmpb
sbb
xor
outsb
mov
mov
fs
mov
cmp
push
or
fisubl
shlb
fstpl
sbb
or
nop
inc
and
loopne
lds
mov
aad
les
popa
dec
cwtl
data16
enter
ret
arpl
pusha
or
mov
or
sub
and
inc
jge
shll
mov
xchg
lcall
or
js
jmp
cmpsl
aad
ljmp
je
push
pop
jecxz
movsb
int3
das
pop
cmpsb
fidivl
dec
sahf
push
movsb
cmp
fcmovbe
jg
or
mov
dec
addr16
mov
add
pushf
data16
xchg
sbb
ja
test
xchg
call
or
adc
sub
addb
rcl
adc
inc
popf
stos
sbb
sbb
scas
lds
xor
pop
push
enter
push
mov
addr16
jo
or
xlat
dec
dec
jecxz
ds
mov
jb
cmp
call
pop
inc
rcrb
and
jecxz
mov
aaa
aas
pop
cmp
jl
ret
movsb
mov
sub
shlb
add
dec
cmc
or
mov
out
xor
and
iret
xchg
jmp
stos
dec
cld
pushw
mov
aas
push
mov
sbb
mov
xchg
outsb
ja
or
cmpsl
ret
inc
mov
push
icebp
pop
loopne
xor
cmp
mov
pop
lds
xchg
adc
mov
aas
jae
xor
inc
mov
les
enter
sub
mov
fbstp
and
inc
mov
insb
or
push
push
dec
push
adc
push
cmp
lds
arpl
lea
jbe
mov
dec
bound
inc
jmp
shlb
popf
xchg
icebp
dec
adc
adc
iret
and
mov
or
cwtl
test
lret
insl
enter
xlat
int
sbb
or
adc
lea
mov
xor
stos
push
sahf
mov
fdivrl
mov
lods
out
mov
mov
std
mov
sbb
aam
pusha
sub
jb
into
mov
push
mov
ja
push
in
adc
hlt
scas
shrb
add
xchg
inc
jmp
test
lock
jno
stos
sub
scas
lods
cmp
inc
lods
lock
nop
xor
or
fwait
jns
push
adc
xorl
xchg
fstps
or
mov
jno
lcall
mov
popf
adc
add
into
loope
dec
adc
scas
inc
andb
cld
sti
and
pop
or
testb
scas
out
in
mov
cmp
jecxz
xchg
lret
mov
jle
gs
addb
jo
xchg
and
inc
loope
or
inc
mov
jne
add
icebp
stc
loopne
dec
jmp
sub
or
testl
push
es
adc
test
mov
push
shr
cmc
mov
push
mov
jp
or
jl
inc
jns
xchg
fldenv
pushf
neg
inc
sub
outsb
mov
testb
adc
loop
call
cmpsb
inc
jb
js
jno
pop
scas
movsl
or
mov
cmp
sbb
fmull
inc
push
mov
push
mov
add
data16
ljmp
out
lods
rcll
cltd
push
lods
sbb
jl
xchg
dec
rcl
push
gs
mov
add
cmp
sbb
add
int
fbstp
rclb
mov
in
cmpsb
pop
cmp
push
pop
dec
enter
mov
sub
xor
lods
and
inc
jge
mov
pop
lcall
arpl
fcmovnbe
xchg
mov
jb
shl
mov
cmp
icebp
fstps
jns
mov
sub
push
and
jns
repz
lea
dec
or
sahf
jg
sarl
mov
add
xor
fmull
pop
adc
sti
mov
addr16
ret
xor
insl
lret
jnp
fidivl
and
bound
pop
inc
jb
mov
or
sarb
add
shlb
xchg
call
ja
pop
jo
xchg
xchg
cs
mov
shl
pop
sbb
pop
fisubrs
push
out
mov
aaa
push
mov
imul
loope
xchg
subl
test
movsl
data16
mov
push
jg
rclb
push
add
fisttpl
hlt
inc
movsb
ja
sbb
in
inc
jle
into
out
xor
mov
movsb
repnz
jmp
xchg
daa
sahf
push
mov
popf
cmp
aaa
daa
mov
pop
das
test
mov
push
or
jp
data16
fucomip
or
lret
push
pop
scas
icebp
xor
add
pop
out
adc
shrb
rcll
pop
dec
sub
movl
sarl
jg
pushl
loopne
cwtl
popa
sahf
scas
test
push
add
mulb
mov
testl
cmpsl
cmp
or
std
cmc
cmp
push
mov
cmpsb
mov
rsqrtps
pop
test
scas
ljmp
mov
aas
push
xchg
inc
sub
lods
jle
shrl
ljmp
mul
and
mov
js
xor
insl
repz
jns
pushf
inc
xchg
testl
fsubs
fmulp
cmp
cwtl
std
cmp
and
push
xlat
cmpsb
xchg
es
or
aam
and
cwtl
add
mov
arpl
pop
aam
sar
lods
insb
mov
bound
mov
pop
call
add
test
cltd
icebp
sbb
push
fdivs
cld
mov
mov
imul
xor
sbb
dec
lret
pop
cmpsl
push
xor
popa
lods
push
add
cmp
and
rep
cld
mov
sub
lahf
mov
mov
add
fsubrl
dec
add
and
adc
lret
xorl
mov
sub
scas
or
or
jp
ret
lret
inc
pusha
fstp
sbb
dec
mov
lods
add
ret
mov
mov
mov
add
mov
adc
cs
clc
cwtl
inc
mov
xor
inc
fcoms
mov
jle
stos
imul
repz
pop
sti
jl
sbb
fsubrl
fmul
mov
shll
mov
lret
jl
push
mov
mov
jae
cmpsl
sbb
sbb
sti
lret
xor
adc
fistpll
pop
inc
pop
and
scas
push
dec
popf
cli
inc
xchg
dec
cmpsl
cmp
add
pop
loopne
jecxz
sbbl
lock
clc
lea
and
sbb
inc
pop
in
addl
fisttpll
mov
xchg
sbb
mov
mov
push
int3
lock
push
int3
je
sbb
hlt
addr16
sbbb
dec
aad
push
mov
mov
jl
popa
fistps
out
bnd
in
adc
xlat
gs
cmp
sbbb
shl
xor
push
adc
lcall
adcb
cld
hlt
push
scas
mov
aaa
outsl
rorb
ret
hlt
outsb
js
inc
mulb
adc
sub
mov
ds
push
out
inc
fildl
jecxz
faddl
mov
insb
lahf
cmp
or
aas
jb
aam
sub
je
sub
add
subl
jge
outsl
xchg
idivl
stos
mov
in
mov
fwait
cmp
inc
dec
mov
fdiv
ja
cmpsb
les
fs
inc
pop
cltd
in
mov
jbe
ss
jo
ror
sbb
or
outsl
cmp
sub
mov
xchg
xorb
xchg
ret
clc
aas
or
aas
pop
mov
or
inc
adc
xchg
sahf
stc
push
adc
fcmovb
xchg
mov
inc
pop
pop
pop
pop
push
aas
push
dec
push
nop
jecxz
mov
xchg
adcb
mov
adc
xchg
daa
add
xchg
jle
daa
push
mov
aad
mov
loope
ss
sub
ss
pop
sub
pop
cli
cmpsl
inc
mov
fdivrs
daa
mov
gs
cmp
rclb
sub
mov
xchg
iret
jg
pop
pop
xor
jl
hlt
fwait
xor
fistl
ror
push
pop
jge
rorl
sbb
push
mov
addr16
mov
push
cmp
lea
mov
pop
lds
push
xchg
and
mov
add
sub
cmpsl
push
inc
sub
jecxz
mov
or
or
xchg
pop
push
sub
imul
outsl
jnp
lods
scas
das
or
and
rcl
cmpsb
dec
push
push
pop
and
add
test
xchg
scas
jns
lock
popa
js
or
test
and
add
pop
repnz
sbb
movsl
push
cmpsl
mov
test
xor
adc
jecxz
jmp
inc
xchg
xchg
sbb
sbb
mov
mov
fbld
mov
inc
xlat
lcall
fildll
scas
sub
inc
rcrl
call
mov
push
movsb
cmpsb
push
sbb
sub
arpl
lahf
outsb
lret
mov
mov
data16
inc
cmp
push
mov
and
xchg
mov
sbb
push
jb
sbb
out
mov
mov
pop
and
or
inc
shll
dec
lea
sbb
cli
push
and
cwtl
loop
es
xchg
dec
mov
cli
push
jns
or
aad
andb
fisttpl
adc
add
sub
fistpll
and
bound
ret
outsl
shlb
dec
insb
push
aad
hlt
sub
addr16
xor
mov
dec
std
pop
xchg
cmp
into
aaa
arpl
setne
in
fcomp
jmp
sbb
test
pop
mov
mov
ret
jp
sarb
imul
xor
pop
aaa
int
es
sbb
enter
hlt
stc
js
test
frstor
fs
les
bound
stos
lock
sbb
data16
mov
pop
jecxz
and
shrb
fistpll
mov
add
pop
test
sub
xchg
or
mov
lahf
rcll
sti
or
push
add
mov
ret
jb
xchg
jo
mov
mov
cmp
push
stos
lcall
push
ret
add
add
push
pop
cs
imul
jns
dec
inc
mov
pop
pop
ja
or
insl
mov
add
xor
push
xchg
icebp
test
mov
rcll
adc
cmp
pop
sbb
bound
or
xor
ds
jo
loope
mov
loope
loop
sub
push
add
lret
mov
popf
push
ds
mov
jmp
mov
mov
or
xchg
pop
mov
mov
mov
outsb
daa
sbb
aad
in
adc
pushf
inc
push
mov
lods
pop
cwtl
and
stc
or
sub
out
pop
call
hlt
lahf
dec
adc
mov
dec
cmp
xchg
pop
mov
or
mov
pushf
lcall
ret
movsl
lods
mov
test
adc
sub
mov
cmpsb
fucomi
mov
sub
cmpsb
clc
mov
inc
sub
shll
mov
adc
push
rol
scas
into
cmp
sbb
movsb
xchg
xchg
and
js
inc
pusha
mov
pusha
add
jns
lods
cmp
and
punpcklwd
xchg
adc
push
sbb
sbb
dec
dec
mov
sbb
pop
or
ret
mov
adc
pop
lock
ret
pushf
test
repz
cwtl
adc
fdivr
jmp
leave
jbe
mov
or
or
jp
addr16
jo
iret
daa
push
add
inc
push
mov
frstor
std
shlb
shlb
mov
or
jnp
sbb
pop
inc
inc
testb
stos
icebp
pusha
nop
push
inc
add
inc
adc
fwait
dec
mov
fmull
inc
in
or
and
mov
inc
or
insb
movb
sub
pop
and
js
mov
xchg
mov
pop
fisttps
fiaddl
leave
dec
test
addb
or
pop
bound
jbe
aam
lahf
cmp
fnstenv
dec
scas
outsb
cli
sbb
pop
into
pop
push
pushf
lods
hlt
and
xor
and
mov
iret
dec
jp
repz
mov
cmp
or
mov
stc
push
dec
and
adc
dec
jb
xchg
std
and
xor
in
pop
jg
and
dec
fists
adcl
dec
rol
hlt
inc
loope
adc
sub
mov
shll
mov
std
je
xchg
adc
stos
sub
and
mov
push
mov
mov
xor
stos
inc
filds
mov
gs
dec
mov
pop
movb
pusha
movsl
and
adc
and
into
lret
loopne
cltd
adcb
insl
push
data16
push
sub
and
xchg
dec
sti
mov
pop
jno
inc
adc
mov
aaa
push
xor
mov
dec
cmp
frstor
and
xchg
daa
out
push
dec
andl
adc
xchg
mov
mov
xchg
inc
sub
and
jl
ret
out
fidivl
ss
movsl
out
das
push
lcall
adcb
loope
mov
inc
movsb
mov
hlt
jge
cmp
xor
jnp
test
jle
inc
ljmp
sub
lock
rcrl
icebp
add
repz
pop
xlat
and
leave
adc
adc
sub
dec
or
fadd
lods
testl
sbb
xchg
jb
sbb
lcall
test
dec
dec
mov
xchg
bound
jle
pushf
rorb
movsl
lods
pop
int
xchg
sbbb
sub
add
or
xchg
repz
jecxz
and
push
or
nop
popa
fsts
std
mov
loop
arpl
icebp
loope
icebp
dec
insl
rorb
orb
cwtl
lock
sub
jecxz
call
push
push
sbb
jo
inc
rcll
and
push
popa
mov
sarl
mov
dec
ss
rcrl
xor
and
push
int3
xchg
movsb
fisubrl
pop
stos
cmp
ss
xchg
shll
lock
loopne
xchg
cmp
cltd
mov
mov
in
mov
ret
je
test
push
cmp
je
cmp
data16
cmp
inc
movsl
push
sahf
and
and
sub
inc
imul
dec
mov
bound
pop
adc
cmp
cmp
popf
push
mov
dec
cmp
fildl
sbb
je
in
in
or
add
mov
jg
push
push
clc
mov
xor
add
imul
and
push
push
std
mov
mov
push
shr
pushf
dec
enter
mulb
dec
shlb
mov
or
call
inc
call
push
sbb
pop
push
das
syscall
and
mov
push
mov
out
mov
push
cmpsb
roll
sub
or
imul
mov
lods
push
imulb
jnp
mov
push
mov
xor
aam
daa
jb
rorl
lret
sbb
testl
mov
or
out
aas
cmp
aas
nop
mov
fsubrl
jae
jb
out
js
push
lcall
push
mov
cmp
repz
out
xor
adc
stos
loopne
dec
clc
push
xchg
arpl
ret
pop
data16
stos
dec
test
cld
aaa
jg
xchg
or
fisttpl
fnstcw
xor
mov
and
cltd
out
mov
ret
jp
sub
or
mov
add
lret
es
fwait
outsb
sub
dec
inc
rcrb
push
shr
push
xchg
call
aaa
lcall
sub
cltd
push
outsb
sbb
call
push
xor
aam
and
subl
jo
jl
out
or
dec
push
push
xchg
in
das
xor
fstpl
xchg
push
adc
sub
pop
jge
push
jns
pop
sbb
xor
iret
sbb
sbb
cmp
sub
movsl
ret
adc
dec
popl
scas
pop
cwtl
inc
jge
lds
mov
arpl
mov
add
mov
xchg
xchg
and
dec
aam
iret
cs
xor
repz
popa
pop
outsb
iret
sbb
addr16
pop
inc
lcall
clc
lahf
push
mulb
popf
cmc
xchg
pop
jp
loope
into
sbb
jle
rcrl
add
scas
iret
out
mov
repnz
cwtl
ds
jno
fnstcw
icebp
andb
sbb
cmp
pop
dec
xchg
ja
aaa
pop
lods
xchg
adc
outsb
xchg
int3
xor
jo
cmp
xor
push
fs
jne
mov
insl
shl
test
outsl
mov
inc
fdivp
stos
xchg
pop
mov
fdivs
xchg
je
adc
dec
cmp
dec
adc
sub
roll
or
popa
cs
inc
sub
mov
inc
test
adc
add
add
ljmp
jmp
push
sahf
lret
sub
pop
rolb
jle
xor
mov
sbb
aam
mov
in
xchg
lods
ja
sub
lret
sbb
xor
inc
jne
jo
mov
arpl
mov
arpl
pop
popf
imul
lahf
and
scas
cmpl
jp
or
in
addl
ss
pop
cmp
add
addr16
dec
inc
dec
and
push
loopne
lods
in
mov
adc
out
mov
adc
pop
mov
seta
aaa
icebp
insl
lret
and
lahf
dec
xchg
int3
push
and
pop
int
scas
jle
jg
xor
and
dec
push
or
leave
ret
pop
inc
jp
add
inc
lods
popa
stc
sti
incb
out
add
push
jo
mov
jno
or
sub
push
mov
inc
es
xchg
inc
mov
jp
addr16
inc
scas
jmp
mov
jle
fsts
push
xchg
xchg
inc
pop
xchg
cmpsl
test
stc
fidivrs
pop
testl
mov
adc
and
xchg
shlb
ss
or
pop
xor
sub
xor
sbb
push
movb
int3
adc
shlb
xor
pusha
daa
push
in
scas
stc
sbb
or
jl
int3
pop
push
push
fsub
dec
add
add
mov
inc
fsubl
test
mov
and
scas
mov
xor
add
sbb
jle
pusha
ljmp
and
into
adc
mov
bswap
int3
sbb
fisubl
push
and
cmp
add
jle
outsb
std
lods
or
icebp
mov
sbb
out
mov
insb
imul
ror
mov
jg
lods
dec
and
add
sbb
sbb
mov
stos
mov
push
xor
push
dec
add
pop
mov
out
lret
test
dec
mov
andl
xchg
push
es
jne
push
arpl
add
mov
subl
int
push
shll
jo
pop
dec
cmp
in
mov
xchg
cmp
inc
call
adc
jecxz
lock
xor
dec
mov
cmp
lcall
xchg
lret
out
push
fldl
xor
hlt
and
scas
pop
int
inc
jne
push
test
lcall
adc
or
daa
pop
lcall
jecxz
xchg
jne
mov
xchg
out
xchg
fs
pop
push
fidivrs
lret
inc
and
sub
mov
cltd
dec
jle
jbe
cmp
sar
jl
adc
and
inc
or
lret
js
lea
sti
pusha
inc
mov
clc
jp
daa
setnp
ret
daa
jae
mov
push
or
shlb
push
xor
sub
mov
js
fstpt
jp
inc
imul
jae
inc
out
jb
adc
push
out
xor
es
and
fwait
js
push
into
int
ret
lds
add
xchg
jae
ss
ljmp
dec
xor
ss
xor
movsb
jmp
insb
cmp
cltd
sbb
xchg
jae
iret
sbb
lds
xchg
mov
cmp
in
ljmp
mov
jp
int
push
sub
fdivrl
mov
xorb
adc
loope
push
lds
lods
push
pop
xor
cmp
jne
das
lock
adc
fdivs
mov
xor
stos
lods
gs
movsl
xchg
dec
test
repz
sti
iret
inc
pop
mov
dec
push
adc
jns
push
scas
ss
push
in
mov
test
fnstenv
mov
add
mov
fsubl
scas
inc
add
stc
frstor
xorb
sbb
sub
sbb
or
lock
sbb
push
call
pop
add
jae
in
cld
ss
xchg
cmpsb
loop
ss
and
cmc
dec
popf
mov
add
push
cmp
mov
out
adc
inc
or
jnp
sub
jg
icebp
jne
popa
push
lods
enter
dec
jge
mov
pusha
sar
cmpsl
ror
sbb
jecxz
loope
inc
xchg
psraw
lcall
cmpsl
xchg
imulb
mov
ret
dec
scas
sbb
adc
adc
divl
sub
mov
cmp
push
cld
int3
xchg
scas
jg
stos
nop
aam
daa
adc
xchg
negb
cmp
fwait
addr16
out
adc
leave
jbe
cmp
mov
mov
stos
popf
mov
dec
lock
fbstp
mov
fbld
pop
imulb
pop
adc
sub
xor
dec
and
pop
lock
sbb
dec
push
adc
out
bound
movntq
popa
sub
add
imul
push
lock
xchg
aas
fisubrs
add
mov
jl
fst
vpmacssdqh
adc
popa
ss
sub
iret
fs
sub
daa
imul
lods
std
mov
test
divl
sub
adc
xor
out
fcmovnb
data16
lods
sbb
push
rorl
imull
dec
stc
inc
test
fcmovu
sbb
adc
jmp
fcoml
mov
inc
pushf
addb
arpl
sub
lret
inc
fdivrl
mov
dec
push
jge
push
mov
and
jmp
dec
sbb
add
out
jns
je
lret
sarl
or
cmc
mov
mov
lret
push
lds
outsb
mov
aam
ror
les
mov
jno
adc
loopne
pop
gs
adc
in
lcall
pcmpgtb
cwtl
into
cmp
jb
pop
inc
outsb
xlat
fstpl
mov
ret
data16
cmpsb
cmpsl
sar
bound
lcall
xor
hlt
test
push
and
and
int3
add
call
inc
adc
jno
xchg
insb
andl
xorb
inc
call
aam
out
ret
mov
jle
arpl
pop
sbb
pusha
adc
inc
pop
mov
imul
sub
rcll
jge
and
mov
fwait
xor
fisubl
imul
stos
scas
pushf
outsl
icebp
sub
sub
scas
dec
enter
jns
pop
data16
rorb
cld
call
in
push
cmp
cwtl
inc
or
in
push
adc
mov
int3
or
add
mov
fdiv
push
dec
cmpsb
xchg
adc
das
cmp
add
xor
jp
mov
adc
sub
mov
and
add
movsl
add
es
mull
lcall
gs
in
aaa
or
inc
sub
mov
lds
sbbl
icebp
imul
movsb
out
jl
movsb
aam
movsb
fsubrl
lods
push
hlt
sub
xlat
adc
add
movntq
call
icebp
scas
mov
xchg
mov
loopne
scas
sbb
jg
push
add
and
sbb
orb
sbb
jne
ds
lret
clc
int3
ret
dec
cltd
adc
sbb
out
bound
xor
pusha
std
loopne
stos
xor
shl
mov
mov
mov
cmp
nop
push
jmp
mov
inc
mov
mov
mov
fstpl
adc
cmp
jp
push
test
mov
mov
cli
stc
push
and
into
cmp
movsb
sbb
stos
mov
loop
mov
jp
pop
or
jns
push
mov
in
pop
fnstcw
sbb
fxch
mov
dec
in
repz
dec
or
cmp
fadd
mov
jp
sbb
xchg
cwtl
js
inc
sarb
xor
loop
lock
lds
and
add
popa
sbb
sub
lock
loopne
jb
ret
mov
dec
les
or
xor
cli
jle
ffreep
inc
cmpsb
fildl
mov
lret
in
xchg
adc
out
iret
add
adc
sub
mov
in
call
cltd
mov
jb
jl
aam
jns
push
jle
notl
mov
pop
pop
das
mov
nop
and
sbb
sub
scas
movsb
dec
jge
dec
jno
test
pushf
inc
mov
push
sbb
nop
je
fwait
add
insb
mov
mov
jbe
ud1
mov
jl
sub
pop
push
adc
mov
inc
add
cli
mov
sub
and
iret
fwait
enter
xor
pop
in
rolb
xor
adc
rorb
into
push
mov
push
outsl
mov
cmp
adc
mov
and
movsb
mov
rclb
clc
sub
push
xchg
inc
add
scas
ljmpw
loop
inc
jbe
lret
mov
roll
inc
pushw
jo
jae
add
mov
dec
scas
or
pop
imul
popf
aaa
pop
mov
pop
sbb
jo
xchg
shlb
cld
fwait
and
dec
out
add
fsubrl
adc
inc
test
out
hlt
sub
cwtl
jge
xor
jg
ret
and
fldcw
sbb
bnd
jbe
and
push
data16
and
mov
test
mov
push
rcl
or
push
and
outsl
mov
push
push
lahf
mov
repz
or
lods
mov
int
repnz
ljmp
push
or
jle
or
pop
push
leave
jnp
push
repnz
cmp
mov
fwait
push
out
jle
xor
sbb
fs
sub
sahf
lds
fistps
and
xor
dec
inc
cmpsb
cld
jno
xchg
and
xchg
mov
sti
pop
fistps
les
in
push
jnp
xor
xchg
xor
fisubrs
fistps
and
jg
test
mov
rcr
sarb
sbb
in
enter
bound
in
xor
dec
dec
jns
mov
sti
jb
pop
jno
movsl
xchg
jb,pt
xlat
in
stc
cmp
rol
icebp
mov
mov
jne
std
cs
sbb
xchg
add
mov
cmp
sub
mov
add
test
inc
dec
mov
mov
mov
scas
xlat
xchg
shl
fcmovnbe
data16
fisttpl
negl
jle
cmp
xchg
or
pusha
leave
testl
mov
xorl
aad
mov
or
push
sbb
out
rorl
dec
jae
addl
jmp
inc
cmp
and
mov
mov
popf
test
rclb
pushf
cmc
pop
sub
sbb
cli
mov
shlb
mov
ds
into
insb
dec
and
push
test
scas
xchg
hlt
sbb
ljmp
adcb
jne
sub
jmp
mov
dec
xchg
ja
xor
cs
cmp
cmp
test
xorb
push
mov
cmc
daa
popa
mov
add
mov
add
scas
fisubs
adc
mov
sub
js
xchg
leave
add
popf
mov
sti
pop
push
jne
xchg
or
pop
sbb
pop
jae
outsb
jmp
lds
mov
adc
xchg
mov
les
mov
lock
dec
icebp
addr16
fnsave
sbb
and
push
dec
adc
jnp
xchg
pop
out
jne
mov
das
daa
mov
stos
in
jle
mov
and
mov
xor
test
adc
sbb
ja
inc
imul
inc
add
mov
das
addl
or
aas
sub
add
or
shll
fildl
aaa
aad
cwtl
and
dec
push
xorb
xchg
adc
dec
enter
cmp
xchg
jno
mov
movsl
gs
jnp
cmp
shlb
pop
xchg
aad
xchg
ja
jmp
sbb
out
xor
jmp
cmpl
mov
stos
arpl
divl
cmovne
and
test
inc
adc
inc
mov
push
sub
je
push
mov
or
inc
push
out
add
dec
push
out
sahf
stos
out
mov
add
fistl
test
push
inc
mov
cmpl
cmp
fwait
add
rcrl
pop
stos
enter
aad
sti
mov
pusha
add
js
push
jno
jecxz
mov
stos
repnz
sub
lods
call
insl
ret
fldcw
xor
lods
popa
cmp
leave
out
stos
cmp
dec
imul
sub
enter
xchg
gs
jbe
dec
push
inc
dec
js
insl
or
rcrb
mov
xlat
loop
incb
add
cli
movsl
cmpsl
sti
jg
aam
jg
push
jno
outsl
and
flds
mov
jmp
jp
dec
mov
test
popa
aam
inc
jno
xchg
push
int
push
mov
divl
cmp
jns
sub
sub
ljmp
adc
std
push
shr
xor
ss
insl
daa
sub
adc
cmp
cs
call
xor
sub
gs
clc
adc
faddl
or
mov
jne
pop
cld
sub
and
das
mov
pop
push
std
ljmp
lcall
add
jmp
int3
or
adc
out
dec
dec
adc
pop
out
mov
cmpsb
cmp
jg
or
cmpsl
stos
sbb
outsl
in
lods
jns
cmpsl
shrl
sbb
adc
or
popf
mov
into
test
mov
jmp
js
out
mov
add
js
inc
jae
les
xchg
fistpll
sti
push
inc
jns
sbb
pop
add
xchg
push
xchg
push
in
xorl
js
shrl
inc
mov
je
pop
rcrl
sarl
out
sub
xor
fwait
adc
push
jmp
fcom
and
and
mov
inc
outsb
mulb
icebp
addr16
imul
adc
cmpsb
adc
or
mov
aad
mov
xor
mov
mov
jae
cmp
rcll
xor
sub
out
fnsave
sti
ret
daa
loope
adc
inc
pop
std
push
jae
enter
inc
or
sbb
rol
xchg
repz
xor
sbb
orps
sub
sub
loope,pt
lahf
pop
push
jle
cmp
or
sbbl
ret
scas
call
jmp
outsb
jb
adc
fsts
push
jns
xlat
pop
stos
out
and
imul
cmp
inc
push
cld
pop
fs
mov
or
pop
hlt
mov
aad
adc
xchg
mov
and
test
call
divl
sbb
popa
lods
jae
push
lea
insl
stc
sub
ret
dec
cmp
lods
adc
out
adc
push
jmp
ljmp
daa
mov
and
fwait
inc
ljmp
inc
fiaddl
jmp
jne
lret
mov
xchg
ljmp
mov
pop
cmp
into
pop
push
fdivs
add
jle
inc
das
mov
push
cmp
inc
cmp
ret
hlt
lahf
and
mov
fwait
pop
imul
mov
mov
xor
xor
icebp
and
jae
data16
push
dec
das
mov
xor
out
fwait
mov
inc
add
mov
and
and
lea
je
xchg
push
push
push
lds
in
call
sbb
jmp
mov
inc
mov
xchg
mov
rcl
cmp
bound
int3
stos
inc
iret
mov
pushf
cmp
fwait
and
ljmp
stos
stc
aad
rcll
add
decb
stos
loopne
int3
jno
ret
shrl
into
out
cmp
fsubrs
push
sti
lret
add
add
fadds
cs
bound
lods
cmp
dec
sub
das
cmp
mov
ficoml
sub
xor
or
sub
daa
adcb
aam
cmp
pop
std
push
xchg
shll
mov
cwtl
pushf
sub
lods
cli
pop
cwtl
or
or
in
pop
push
or
test
stc
mov
cs
std
and
loop
or
adc
dec
and
test
mov
dec
jge
repnz
popf
dec
push
jge
xchg
mov
cmpsl
loop
mov
sbb
lea
jae
test
repz
xor
mov
push
xchg
xor
inc
pusha
and
fildll
push
mov
inc
mov
or
imul
inc
mov
cmpsb
int
cmp
mov
push
clc
fmul
mov
dec
movsl
js
bound
mov
add
outsb
imul
and
fdivs
enter
jecxz
in
xor
and
popl
pop
xchg
cmp
in
jnp
jge
movsl
xchg
cld
add
jno
inc
mull
mov
xchg
popa
lcall
cltd
lea
mov
mov
mov
adc
mov
lea
add
shl
mov
test
mov
and
aad
sub
mov
pusha
aam
ljmp
into
pop
mov
sbbb
add
jne
movsb
inc
hlt
pop
push
test
loop
sbb
mov
jge
cld
in
add
ja
call
cmp
loope
sub
popf
inc
pop
sahf
mov
dec
stc
xchg
das
rcll
cmp
gs
cwtl
add
add
lock
bound
popa
int
xchg
xchg
mov
mov
int3
mov
outsb
bound
xchg
mov
sbb
mov
mov
xchg
loop
idivl
iret
enter
cmp
sbb
mov
pop
adc
inc
sub
movl
xor
lret
das
xchg
dec
add
jmp
mov
mov
cmp
pop
mov
out
push
xorl
into
in
dec
sarl
jle
aam
xlat
lret
xchg
lods
test
sbb
test
ds
aam
cmp
lods
inc
ljmp
cmp
xor
add
lahf
jl
pop
aaa
imul
adc
fistpll
repz
mov
or
int3
lcall
jge
pop
and
inc
scas
aas
mov
push
pop
pop
mov
aam
cmc
in
lock
pop
pop
dec
xchg
mov
xchg
mov
and
lret
xor
or
cmp
xchg
leave
xlat
test
aaa
rcl
insb
dec
lds
pop
in
jb
dec
iret
lret
fidivl
fdivrl
test
mov
push
addr16
repz
aam
subl
loop
ja
mov
popf
ss
lds
aam
orl
lcall
repz
hlt
sub
daa
mov
dec
in
cmp
push
iret
sub
jp
pop
les
pop
insb
jmp
sub
bound
dec
dec
pop
inc
aas
add
fistl
inc
and
scas
push
mov
jp
mov
lahf
sub
icebp
xor
orl
je
inc
mov
xor
aam
jae
ror
mov
rol
rorb
popf
xor
inc
adc
test
pop
bswap
jp
xchg
add
rcrb
xchg
std
dec
pop
sahf
bnd
sub
lods
lcall
idivb
jo
test
cmp
push
dec
adc
ds
xchg
xor
cli
clc
aad
pop
or
ret
ljmp
push
jae
decl
daa
cmp
icebp
cli
sub
cwtl
or
fsubs
push
cmp
add
test
pop
sbb
xor
mov
roll
mov
sbb
fsubp
aam
mov
sub
iret
aaa
repnz
jno
jae
pop
adc
ret
push
cmpsb
lods
pop
push
adc
andb
testb
push
dec
xchg
fdivl
jl
xchg
shr
sbb
or
mov
sbb
orl
mov
push
cmp
movsb
mov
jge
fs
clc
dec
sub
inc
xor
dec
enter
mov
jne
jmp
and
stos
pop
sbb
or
inc
push
push
or
inc
das
pop
frstor
push
ret
pop
test
dec
add
jns
pop
das
adc
loopne
jnp
cmp
das
mov
mov
add
sbb
fwait
dec
ss
shll
cs
int3
mov
stos
adc
movsb
call
pop
aam
dec
aam
jle
imul
into
mov
divl
or
lds
mov
ja
xlat
out
lcall
rclb
and
ljmp
cmp
inc
and
dec
and
test
jl
stc
mov
cmp
lods
pop
xchg
mov
dec
pshufw
xchg
or
in
rorl
push
dec
adc
pop
ret
psubw
daa
xchg
sbb
insb
mov
sbb
adc
push
repz
out
stos
dec
sti
pop
popf
into
sub
outsl
pop
std
fldenv
pop
mov
cmp
call
cmp
jbe
push
lods
xchg
xchg
jne
pop
dec
and
insl
xlat
pop
std
lods
outsl
in
xchg
sub
mov
xor
xchg
enter
sbb
pop
outsb
mov
mov
loopne
add
fs
dec
pusha
js
lcall
inc
pop
jmp
or
push
xor
mov
ret
pop
sahf
fwait
and
repnz
add
or
cld
sbb
pop
sub
add
in
loopne
mov
test
mov
push
fisttpl
fwait
test
das
rcrb
inc
aam
pop
test
rolb
int3
sbb
dec
inc
imull
gs
es
add
in
xor
lahf
mov
lds
mov
pop
mov
lret
or
setl
fstl
pop
test
cld
dec
insb
push
pop
push
pusha
rorl
dec
pop
out
inc
les
cltd
mov
or
fdivp
nop
cmpsl
pusha
push
push
gs
mov
sbb
xor
mov
pop
rcll
mov
mov
and
daa
cmp
bound
cld
das
dec
pop
addl
dec
push
test
mov
and
cmpl
dec
imul
sahf
test
popf
subb
loopne
mov
ficomps
test
xchg
sub
ret
pop
pop
daa
or
sbb
testb
dec
test
mov
sbb
aaa
stos
cli
xchg
mov
nop
fdiv
push
xor
mov
out
sbb
jno
sbb
std
cmpsl
addb
adc
mov
ja
cmp
jnp
lcall
xor
mov
popa
mov
faddp
cs
xor
das
sbb
xor
into
shlb
xlat
xor
comiss
add
and
pop
lods
pop
es
cli
sbb
aaa
pop
xchg
iret
mov
in
std
rorl
jmp
int
ds
ss
popf
bound
into
insb
and
jle
push
pushf
mov
cli
or
test
and
es
insb
jp
mov
add
lret
mov
roll
lret
adc
adc
add
push
int
sub
repz
add
aam
mov
xor
fistl
sti
dec
hlt
mov
mov
lock
mov
insl
fsubr
out
push
xchg
in
mov
lret
imul
inc
mov
cltd
call
mov
cli
aad
adc
aam
clc
mov
stc
fsubl
push
mov
imul
outsl
and
push
aad
ss
jp
jne
out
sbbl
imul
mov
call
stos
nop
fs
out
jns
ljmp
add
arpl
lods
push
mov
dec
xchg
repnz
sub
dec
push
mov
cmc
fisubrl
push
mov
out
dec
xchg
daa
inc
in
cwtl
lea
and
sbb
aam
jecxz
xchg
jecxz
cltd
sub
movsb
popa
jae
mov
in
mov
xchg
push
fdivrs
imull
cltd
addb
mov
lahf
inc
mov
es
insb
push
out
pop
mov
das
lret
leave
mov
loopne
repnz
add
mov
add
mov
xor
sbb
popa
sub
pop
gs
inc
xchg
ja
sbb
lret
gs
inc
stos
clc
mov
lcall
rorl
repnz
in
lahf
scas
jnp
lods
inc
sti
leave
sub
pop
pop
lea
and
and
pop
fisttpl
push
mov
inc
or
mov
fnstsw
add
xchg
clc
leave
loop
push
or
in
xchg
cmp
xor
mov
xchg
push
pop
addb
jg
xor
pop
cs
fdivrl
xchg
dec
ja
xchg
dec
cmpsl
fcom
xchg
xor
mov
sbb
out
sbb
cmc
decl
mov
push
inc
sub
add
je
in
xchg
adcb
xor
out
lret
adc
aaa
outsb
or
and
negl
std
mov
cmp
sub
cmc
cltd
mov
sbb
and
xor
in
xlat
cmp
popa
ljmp
push
ret
sub
lods
jg
int3
inc
shrb
mov
mov
inc
lret
jns
cmp
sub
out
in
sub
test
and
shll
and
loop
sbb
test
test
js
lock
in
outsl
sbb
mov
adc
orb
or
push
sub
pushf
in
pop
cld
iret
fcmovne
je
cmpl
in
iret
inc
inc
loope
dec
pop
je
nop
test
sbb
mov
arpl
call
stc
dec
aaa
sbb
mov
xchg
jge
sahf
xor
inc
mov
outsl
pushf
stos
sahf
jmp
pop
cmp
dec
sub
jecxz
jp
loopne
jl
enter
leave
pop
movsl
ds
mull
pop
adc
out
je
push
sub
scas
in
jne
mov
sub
push
xor
insl
or
adc
scas
mov
andl
pop
jo
test
repnz
sarl
cmovl
lcall
inc
xchg
xor
hlt
mov
shlb
das
or
sbb
adc
push
rcl
adc
fcoml
cmp
inc
test
jecxz
bound
pop
call
pop
rol
xchg
mov
data16
int
sbb
or
jge
cmp
mov
xor
das
scas
mov
mov
sub
dec
and
nop
push
push
adc
mov
mov
lods
mov
lds
push
int
jno
sub
data16
or
dec
addr16
inc
outsl
insl
jae
out
xchg
data16
xor
push
pop
add
inc
xor
icebp
mov
xchg
sbb
xchg
pusha
test
push
xchg
or
mov
xchg
inc
loop
cmc
or
lds
jmp
jmp
xor
mov
push
hlt
cmp
dec
testb
xchg
xchg
fcomip
bound
test
pop
hlt
adcl
mov
jbe
addl
dec
cmpl
push
lret
dec
or
dec
movsl
pop
fiadds
cmp
dec
das
ds
bound
lea
sub
sbb
xchg
xchg
imul
xor
xchg
pop
cmp
ss
in
call
cmp
dec
pop
add
aaa
outsl
xchg
clc
lods
add
jp
mov
dec
pop
mov
pushf
cli
ds
xchg
xchg
pop
dec
daa
adc
test
jne
stc
xchg
movsl
stos
filds
dec
cmpsl
jl
push
in
mov
negl
lahf
push
popf
xchg
mov
xlat
rorb
xchg
inc
in
jge
jmp
dec
aad
cmp
dec
adc
dec
je
or
jle
jae
shrb
icebp
or
sbb
mov
pop
jae
add
dec
add
fists
push
sub
ficoml
pop
cli
push
lret
in
inc
xor
inc
sbb
push
movsb
inc
cld
xchg
data16
jmp
stos
sub
sbb
or
add
in
lahf
push
or
mov
imul
sbb
or
cmpsb
inc
push
dec
inc
mov
nop
and
xchg
dec
pop
jbe
int3
fwait
stc
mov
fcomps
inc
mov
fwait
mov
xchg
mov
je
fiaddl
mov
inc
rcl
in
imul
pop
sbb
std
test
cmp
jb
ja
and
push
xlat
into
mov
jle
daa
add
pop
stc
xchg
fsubs
stc
jmp
je
fistps
inc
imul
sub
out
xchg
xor
mov
or
in
mov
pop
mov
outsl
jb
imul
pop
outsb
cmpsb
jns
xchg
mov
cmc
rolb
and
mov
lahf
push
aad
xchg
inc
repnz
loopne
loope
sbb
mov
dec
sbb
iret
loope
ret
test
adc
repz
mov
movsb
in
addr16
repz
mov
cmpsl
popa
mov
add
sub
insl
lret
mov
xchg
or
fincstp
add
xor
lock
or
push
out
pop
xor
push
jb
mov
fcomps
xor
movsb
cltd
stos
std
faddl
mov
mov
mov
sar
mov
jno
mov
fisttps
push
mov
dec
pop
dec
mull
popf
jmp
stos
test
pop
std
xlat
and
xor
sub
and
mov
xchg
fisubrs
cmp
fdivr
push
sub
imul
repnz
shll
stos
les
stos
out
and
mov
mov
gs
pop
in
insb
cld
xor
stos
adc
adc
pslld
iret
loop
cmp
repnz
mov
stos
or
jecxz
push
sarb
repnz
or
fidivs
ror
jnp
push
in
xchg
imul
pop
fdiv
sbb
repnz
pop
std
ficoml
fsts
ja
insl
jne
test
sbb
xor
adc
clc
xor
pusha
hlt
daa
pop
rorb
pusha
repz
sub
add
callw
inc
add
sbb
or
xchg
jno
push
jae
xchg
push
jnp
imul
xchg
mov
xchg
sub
sub
out
fisubrs
addr16
xlat
loop
add
adc
fsts
lcall
movb
cmpb
mov
lahf
mov
pop
mov
aas
mov
mov
pop
dec
sbb
fdiv
jp
ss
dec
in
pusha
push
xor
xchg
lea
ds
pop
pop
inc
push
xchg
mov
pop
test
cmp
out
rolb
sub
jnp
jg
and
jns
outsb
mov
mov
lods
push
fldl
jmp
data16
cld
orb
cmp
repnz
or
jnp
je
mov
repnz
test
add
jo
sub
lret
and
fwait
lock
outsl
ds
add
jp
mov
fbld
scas
outsb
lahf
ret
rorb
js
dec
inc
addr16
rcl
lods
fisubs
and
xor
xchg
andb
mov
nop
cmp
sub
or
loopne
enter
movsb
gs
mov
repz
nop
aad
xor
out
pusha
setl
pop
xor
iret
stos
inc
jae
test
pop
std
lcall
arpl
hlt
outsb
movsb
add
fistpl
or
mov
sbb
fdivrl
sbb
mov
popa
jnp
jecxz
gs
push
jp
cltd
sub
or
rcll
pop
mov
xor
test
dec
mov
mov
mull
insb
imul
xchg
loope
sbb
mov
cld
fwait
ja
cmpsb
cmpsl
mov
push
clc
jae
movsb
mov
test
clc
insl
push
push
out
mov
mov
loopne
scas
add
ja
mov
test
js
adc
jne
lds
outsl
out
pop
movsl
sbb
inc
push
cs
inc
mov
in
add
cmp
or
andb
push
out
sbb
and
cmp
add
push
sar
int3
decl
xchg
pop
mov
xor
cmpsb
mov
mov
add
repnz
lods
clc
int
ss
add
cmp
xchg
in
sub
cmc
mov
gs
stc
dec
adc
scas
jp
fnstenv
rorb
cld
out
fisubl
jnp
stos
cvtpi2ps
mov
shrb
push
adc
inc
rcr
and
mov
pop
sarb
adc
lock
lretw
imul
mov
call
pop
mov
mov
adc
std
cltd
loop
mov
dec
scas
and
js
outsb
scas
mov
adc
xchg
ljmp
jno
lahf
rcrb
out
cltd
cs
jb
jmp
rol
imul
mov
ds
repz
repnz
icebp
outsb
int
fnstcw
adc
sbb
loope
imul
addr16
mov
rolb
stos
icebp
icebp
loop
andl
testl
scas
loope
mov
mov
adc
cli
jmp
mov
popa
push
in
and
mov
mov
mov
or
jo
insl
mov
lods
mov
inc
ret
jg
push
out
lcall
push
pop
push
dec
add
stos
imul
xchg
adc
mov
jnp
inc
inc
push
loope
lods
mov
je
mov
js
sub
adc
xchg
insb
popf
pushf
testl
dec
or
ja
jle
mov
test
cmp
cld
fildl
in
int
sub
mov
icebp
or
pusha
jbe
pop
repz
xchg
orb
ret
sarb
out
leave
stos
mov
lahf
pop
test
daa
dec
popf
mov
mov
inc
push
dec
mov
fnstcw
aam
fstl
xor
in
fwait
movsl
adc
fmull
mov
mov
fnstenv
xor
mov
repnz
daa
xor
adc
in
cmpsb
add
ret
mov
jb
ficoml
mull
adc
jecxz
test
outsl
mov
cmpsl
arpl
pop
xchg
enter
fs
gs
xchg
cmp
mov
je
lea
sub
out
ret
movsl
imul
cmp
shlb
dec
loop
jl
insb
fstps
cltd
and
xchg
pop
fdivrs
adc
repz
add
mov
lahf
cmp
jle
fwait
or
stc
out
fidivs
push
push
outsl
imul
es
popa
mov
loop
pushf
in
jg
inc
mov
push
popf
jno
idivb
ret
das
test
ret
jne
and
xchg
sti
orl
adc
js
pop
jle
inc
rcl
test
mov
or
or
mov
pop
pop
mov
dec
enter
adc
lods
or
out
ja
xor
xor
mov
in
sbb
sbb
or
cmp
iret
lret
pop
lret
xor
cmp
mull
mov
pop
jp
gs
sub
out
mov
scas
ror
mov
aam
sahf
mov
aaa
pop
sbb
int
adc
cmpsl
cmp
shll
sbb
sub
dec
mov
or
int3
dec
push
cmc
das
jp
lock
xor
hlt
call
pop
mov
add
cmp
lods
mov
mov
sti
adc
insb
mov
test
jo
dec
lret
fnstenv
sbb
sbb
pushf
das
outsl
push
sub
sub
xchg
or
sub
xor
adc
jmp
mov
xchg
stos
loopne
enter
aad
cmp
push
or
mov
test
lahf
mov
pop
lcall
ljmp
pop
stc
mov
in
arpl
cmp
leave
mov
pop
test
iret
adc
xorl
nop
in
daa
adc
mov
jg
push
cmpb
int
xor
rcll
popa
ja
pop
add
popf
sti
xor
push
loopne
adc
cmpl
add
cmp
or
shlb
and
push
fldl
jbe
sbb
dec
out
std
ret
xchg
xchg
sahf
sub
test
shlb
ss
decb
jnp
bound
or
push
lods
jbe
popa
aas
inc
sbb
xchg
dec
pop
dec
push
adc
adc
xor
mov
or
shll
jp
inc
lods
pop
outsl
ret
movsb
xchg
jae
stc
mov
add
or
xor
js
ret
xor
int3
mov
cmpsb
mov
adc
stos
lds
add
mov
add
sub
aas
and
inc
addr16
cmp
test
pop
mov
ja
pop
adc
and
pop
gs
pusha
or
out
mov
stos
mov
pop
adc
test
pop
loopne
or
mov
das
lsl
pop
pop
or
mov
cmp
adc
sbb
push
pop
shll
and
sbb
mov
mov
fsubrl
xchg
mov
mov
jb
adc
pop
inc
sbb
stos
cmp
push
inc
fstps
and
decb
sub
mov
loope
cmpsb
flds
jle
dec
adc
xchg
sub
fldenv
arpl
popf
jg
jb
js
dec
adc
push
fwait
jg
xchg
add
jg
mov
dec
xchg
pusha
push
int3
loop
dec
inc
jbe
push
test
adc
mov
scas
xor
inc
lods
jae
push
sub
xchg
leave
shlb
insl
jl
lds
adc
int
pop
cmp
clc
nop
mov
les
sbb
lcall
test
pop
xchg
cwtl
imul
lods
test
addr16
in
dec
adc
cld
out
aaa
int
and
mov
outsb
loop
cmpsl
int
sub
sub
cmpsl
in
cmpsl
xchg
ss
mov
xchg
gs
and
adc
mov
sbb
inc
xchg
cmp
inc
cltd
fildll
mov
ror
lcall
into
pop
aad
into
popa
push
xor
jl
das
push
jmp
sub
push
sub
int
data16
in
inc
inc
xchg
stos
push
push
cmp
call
dec
or
loopne
mov
add
cmpsl
xchg
jecxz
iret
adc
popf
rorl
cmp
sub
scas
lods
in
mov
mov
xor
pop
sti
clc
mov
js
xor
das
fisubs
jno
jne
and
leave
rcll
jge
add
cmp
loop
mov
shll
sbb
or
push
sbb
arpl
dec
push
hlt
push
stc
cmpsl
xor
sub
push
mov
xchg
lcall
repnz
ficompl
and
or
cmpsb
cld
ljmp
xor
out
pop
aaa
pop
mov
or
lods
popl
and
aam
loope
lds
adc
je
dec
rolb
fisttpl
loop
push
loop
push
add
insb
xchg
ds
pop
sbb
and
jg
loop
xchg
imul
loop
cmp
pop
jl
pop
sbb
xor
stc
fsubrp
mov
pop
test
lods
sbb
stos
xchg
and
and
daa
mov
mov
xor
and
jbe
loope
cvtps2pi
jnp
andl
js
mov
imul
xchg
push
mov
pop
push
push
ds
add
gs
or
jno
test
cmp
repz
add
sbb
popa
sbb
ljmp
cmpsl
mov
xor
jmp
test
dec
out
xor
aas
jp
sub
rcrb
icebp
repz
jno
ljmp
push
insb
gs
lock
mov
repnz
dec
dec
es
sub
mov
cmc
in
ret
xchg
xchg
inc
pop
movsl
ficoml
jle
incb
pop
in
push
mov
dec
sbb
int
std
faddl
inc
xchg
push
pop
adc
cmc
lds
and
jmp
jae
or
mov
popf
std
fdivrs
xlat
xor
sbb
in
out
jbe
mov
jl
iret
ret
xor
sarl
mov
sub
sbb
add
xchg
lea
pushf
rcrl
cli
iret
je
jbe
fsts
pop
stc
add
xchg
ljmp
cmp
in
popf
int3
dec
or
mov
push
push
pop
loope
jl,pt
stos
mov
push
inc
xchg
mov
sti
add
adc
rorb
cmpb
shll
imul
and
icebp
mov
stos
dec
mov
xchg
pop
pop
jge
sub
test
push
shll
rcrl
mov
jmp
sbb
xor
movsl
fidivrs
jns
jg
cmp
icebp
sbb
in
fimuls
mov
out
jmp
test
js
jecxz
sbb
test
and
mov
pop
and
into
mov
scas
testb
outsl
push
xchg
stos
ss
mov
dec
xchg
mov
add
outsb
inc
mov
lds
fcmovnbe
lcall
xchg
repnz
mov
inc
mov
add
out
imul
push
xchg
and
dec
mov
push
repz
fxtract
cmp
mov
aam
pop
repz
push
in
mov
jne
xchg
divb
or
jnp
and
pop
sbb
fsub
lock
imul
cmp
out
sarb
jmp
sbb
das
fisttpl
dec
or
mov
inc
scas
add
add
fsubr
lret
sub
sub
lock
cmp
dec
cmp
fwait
cli
pop
addr16
inc
mov
add
clc
xor
sub
cmp
stc
imul
popf
icebp
pop
in
inc
sub
pushf
fnstenv
pop
jo
test
xchg
xchg
or
dec
dec
lahf
into
jae
adc
dec
je
or
inc
test
clc
push
mov
sub
fiadds
pushf
add
cmc
leave
add
lds
push
sbb
xchg
addr16
in
add
cwtl
insl
and
lods
mov
xchg
inc
lock
jecxz
call
cld
or
scas
mov
gs
insl
jl
and
daa
push
sbb
outsl
jo
mov
jno
jae
and
push
mov
jge
mov
mov
cmp
cld
pop
idivb
insl
push
iret
popa
outsb
jbe
inc
add
and
mov
enter
loopne
cmp
test
icebp
pop
js
dec
pusha
test
sbb
mov
inc
movsl
addl
xor
push
mov
stos
cmpsl
cmp
or
or
cmp
inc
mov
dec
jb
xchg
cmp
sbb
insb
or
call
jmp
pushf
into
rorb
xchg
add
inc
rcl
cmp
pop
and
adc
rclb
jmp
in
dec
push
sti
cwtl
push
pusha
pop
test
pop
loop
mov
jmp
test
clc
cmp
sub
xor
lret
stos
jnp
or
insl
pop
pop
les
stos
aam
xchg
aam
sbb
cmc
jbe
arpl
lret
ja
mov
or
adc
aaa
rcrb
cld
or
xchg
push
mov
scas
mov
stos
insb
jbe
movsb
outsl
and
movsl
cmp
xchg
ljmp
mov
fdivrl
icebp
sub
xorb
es
insb
sub
inc
outsb
or
sahf
fs
pop
shlb
mov
jo
cmp
das
roll
sbb
int3
mov
test
pop
andb
and
pop
cmp
jl
lods
daa
iret
inc
out
out
loopne
shl
mov
xor
aad
inc
xchg
outsb
mov
xchg
sub
cmp
sahf
dec
add
out
shrb
sbb
push
outsl
es
and
test
add
mov
adc
dec
jbe
dec
pop
or
inc
xchg
loope
loop
mov
mov
sbbb
push
ja
mov
jmp
sub
fsubrp
or
mov
out
xchg
pop
mov
imul
dec
cwtl
inc
adc
mov
add
inc
mov
in
or
fst
pushf
sahf
jg
outsb
mov
sbb
cmpsb
call
mov
shlb
xchg
xor
jnp
sbb
adc
sub
xchg
into
hlt
adc
jmp
arpl
mov
repnz
sbb
out
into
push
decl
mov
ja
popa
in
xor
fs
je
into
inc
loopne
cmp
mov
adc
mov
fyl2xp1
inc
addl
insb
rclb
jne
aaa
sub
inc
or
pusha
fsubrl
fsts
in
imul
sub
faddl
imul
mov
mov
inc
je
add
pop
cmc
push
xchg
jg
xchg
fildl
lods
popf
jp
inc
scas
call
jo
mov
xchg
xchg
imul
ret
mov
insl
fmuls
fcomps
cmpl
fwait
and
or
pop
add
mov
push
scas
xor
push
add
cmp
in
cld
test
movsl
aad
cmp
mov
adc
mov
xchg
or
ret
lahf
add
xlat
std
cmp
sub
add
out
cltd
ljmp
int3
stos
arpl
fcoms
mov
mov
mov
cltd
popf
mov
ja
shlb
sbb
lret
int3
xchg
push
fs
push
outsb
mov
hlt
adc
and
xor
mov
mov
int3
jno
or
fldl
or
test
or
dec
pop
jmp
xor
js
pop
inc
and
add
dec
sbb
js
jmp
mov
sub
fnstsw
loopne
jno
out
jmp
mov
cmc
cltd
jb
shr
xchg
dec
outsb
cmp
pop
and
inc
mov
es
roll
or
adc
out
fs
cmc
cmpsb
ljmp
cwtl
mov
adc
aas
cli
mov
ljmp
aas
sti
xor
dec
mov
outsl
repz
lods
add
inc
inc
sti
mov
xchg
addr16
sti
aaa
adc
mov
push
orb
and
dec
jl
add
or
jge
adc
aaa
in
cmp
add
mov
paddsb
dec
push
rcr
or
xlat
imul
enter
testl
rol
adc
cmp
outsb
fisubs
in
dec
mov
cltd
sub
add
and
adc
xorb
outsb
add
inc
adc
pop
xchg
outsl
sahf
shlb
and
mov
pop
inc
flds
lea
dec
cmc
mov
mov
fcom
jle
push
xchg
outsl
daa
int
and
jge
imul
arpl
jnp
rclb
inc
mov
jne
dec
or
push
in
scas
jg
jns
push
mov
sub
or
push
popf
push
sub
dec
test
fs
push
data16
in
pop
es
cltd
lret
dec
shld
pop
popa
scas
enter
sahf
iret
mov
aas
fs
shl
xor
inc
xor
sub
insl
movsb
jle
mov
sahf
cmpsl
fstpt
xor
pop
jmp
adc
into
cmp
out
jbe
dec
mov
sti
mov
loopne
insl
xor
in
mov
sub
xor
sub
aad
pop
mov
push
in
lds
popf
bsr
pop
pop
jecxz
mov
jle
pop
in
hlt
push
aaa
es
inc
jg
leave
loopne
mov
xchg
mov
adc
mov
mov
insl
dec
add
fdivs
dec
popf
dec
stc
xchg
aaa
or
add
cltd
mov
push
mov
jg
push
nop
pop
aad
fistpl
data16
test
push
add
jmp
adc
jno
fldenv
cli
mov
bound
mov
jmp
xlat
mov
mov
push
int
test
jnp
add
outsl
cmp
popf
orb
movsl
in
cld
pop
nop
push
mov
push
ss
out
stos
pop
jae
inc
cmp
cmc
stc
aas
mov
sub
cmpsl
aad
orb
xor
lcall
das
cmc
pop
lret
mov
das
ljmp
in
or
inc
add
outsb
or
mov
jmp
xor
lret
jbe
fdiv
xchg
sub
pop
ljmp
xchg
insl
arpl
adc
test
std
gs
pop
adc
or
pop
idivl
sub
adc
sbb
test
xchg
mov
daa
xor
das
test
push
fcoml
rorl
push
xchg
popf
sbb
mov
adc
sbb
mov
jecxz
inc
ret
std
mov
insl
cs
dec
lods
in
ror
sub
lods
pop
sbb
jb
mulb
