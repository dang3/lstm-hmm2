jbe
ljmp
call
push
mov
call
push
mov
call
cmp
jne
push
push
push
lea
push
call
jmp
push
push
lea
push
push
call
mov
push
push
lea
push
call
mov
mov
mov
sub
mov
mov
call
test
jne
mov
mov
push
call
test
jne
push
lea
push
push
call
jmp
cmpl
jne
cmpl
jne
testl
jne
mov
test
jne
test
je
jmp
cmpl
je
jmp
nop
pop
cs
adc
lea
inc
lea
arpl
inc
adc
inc
adc
inc
adc
mov
and
add
adc
lea
lea
out
inc
adc
mov
shrb
inc
adc
nop
inc
adc
nop
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
inc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
sbb
sbb
add
sbb
sbb
sbb
pop
push
pop
sbb
sbb
sbb
or
sbb
or
sbb
sbb
or
add
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
add
sbb
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
adc
adc
adc
sbb
sbb
sbb
sbb
push
push
pop
sbb
sbb
sbb
push
mov
push
push
push
mov
test
je
push
push
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
cmpl
je
call
sub
cmp
jbe
pop
mov
pop
pop
leave
ret
mov
call
test
je
mov
jmp
push
mov
push
mov
push
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
mov
je
mov
push
call
lea
call
lea
call
mov
pop
pop
pop
ret
push
mov
push
mov
mov
push
inc
push
push
call
test
je
mov
mov
push
lea
push
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
test
mov
je
mov
push
call
addl
add
cmp
jne
mov
incl
mov
pop
add
pop
leave
ret
push
mov
cmpl
jne
push
pushl
push
pushl
call
add
mov
mov
mov
mov
pop
ret
push
lea
sub
mov
xor
mov
push
mov
push
mov
push
call
test
je
push
lea
lea
push
mov
xor
mov
mov
push
mov
movl
movl
mov
call
push
pop
cmp
jne
pushl
mov
call
test
pop
jne
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
add
push
movl
call
add
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
je
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
mov
mov
add
inc
add
enter
push
lea
cmp
ja
mov
pop
pop
ret
push
add
push
call
pop
pop
jmp
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
mov
shl
lea
test
je
movl
andl
mov
incl
pop
ret
xor
pop
ret
push
xor
cmp
je
cmp
push
mov
jbe
push
xor
mov
cmp
es
inc
add
jle
jb
pop
mov
push
call
add
mov
pop
mov
mov
movl
pop
ret
mov
mov
mov
cmp
mov
push
jne
call
add
jmp
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
push
mov
lea
call
mov
test
je
mov
push
call
testb
movl
je
push
call
pop
mov
pop
ret
mov
push
mov
movl
add
rolb
les
or
cmpl
cmpl
cmpl
jge
push
mov
test
je
push
call
test
pop
je
andl
mov
test
pop
jne
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
pop
jmp
push
mov
and
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
jne
mov
push
call
cmp
jne
cmp
je
mov
call
mov
test
je
mov
test
mov
jne
mov
mov
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
add
lea
call
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
call
test
jne
lea
call
test
jne
mov
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
mov
lea
push
pushl
lea
push
push
call
add
test
jne
add
add
test
pop
adc
jnp
add
test
aas
add
sti
mov
mov
je
mov
mov
test
jne
or
mov
mov
cmp
jne
mov
pop
pop
pop
mov
pop
ret
mov
cmp
jne
jmp
cmpl
je
cmpl
je
cmpl
je
push
call
mov
jmp
andl
mov
mov
mov
jmp
push
pushl
push
pop
call
jmp
cmp
je
pushl
mov
call
jmp
mov
mov
test
push
push
je
cmpl
je
pushl
lea
call
xor
pop
pop
ret
push
mov
mov
sub
cmpl
push
mov
jge
push
push
mov
test
mov
je
mov
call
test
jne
and
mov
test
jne
mov
lea
call
mov
lea
add
add
xor
mov
mov
cmp
mov
jne
mov
test
je
mov
pushl
lea
call
mov
cmp
jne
mov
push
mov
mov
mov
call
cmp
pop
je
decl
jne
mov
cmpl
jge
pushl
call
pop
mov
mov
test
pop
pop
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
pushl
call
pop
lea
call
lea
call
lea
call
pop
leave
ret
push
mov
mov
push
mov
call
test
jne
mov
mov
call
neg
sbb
inc
pop
ret
mov
mov
call
mov
mov
mov
call
sub
neg
sbb
inc
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
cmp
pop
jne
push
mov
cmp
pop
jne
test
je
mov
cmp
jne
xor
inc
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
push
push
xor
push
push
call
cmp
je
mov
lea
push
push
mov
movl
call
test
je
lea
mov
mov
mov
movl
movl
mov
lea
xor
cmp
je
xor
cmp
jne
add
add
jmp
lea
lea
mov
push
lea
mov
movl
call
mov
mov
add
xor
xor
lea
mov
cmp
je
cmp
je
add
add
cmp
jb
jmp
mov
jmp
mov
lea
push
push
call
add
test
jne
mov
lea
push
push
call
test
je
xor
mov
test
jne
test
jne
cmp
je
mov
mov
xor
cmp
je
add
add
cmp
jb
push
call
mov
pop
pop
pop
xor
call
mov
pop
ret
cmp
jae
shl
mov
mov
mov
add
mov
mov
push
push
lea
push
call
mov
add
mov
jmp
mov
jmp
mov
mov
test
mov
mov
je
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
mov
test
push
mov
je
and
jne
pop
pop
ret
mov
jmp
push
mov
movl
movl
cmpl
jne
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
push
lea
push
call
pushl
call
pop
pop
jmp
push
mov
push
mov
mov
cmp
je
cmp
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
jmp
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
sbb
inc
add
mov
mov
test
push
je
mov
test
je
cmpl
je
cmpl
je
cmp
mov
mov
jne
pushl
pushl
push
push
call
mov
test
jne
push
call
mov
test
jne
mov
mov
lea
push
push
call
xor
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
jne
mov
test
je
pushl
mov
mov
push
push
call
lea
mov
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
xor
lea
xor
cmp
push
mov
mov
movl
movl
mov
mov
jg
mov
sub
cmp
jg
cmp
jne
cmp
jne
cmp
jne
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
test
inc
add
jne
mov
movl
xor
pop
pop
ret
push
mov
mov
call
test
jne
mov
mov
call
test
mov
jne
push
mov
test
je
cmpb
jne
mov
mov
call
test
jne
xor
pop
test
jne
mov
mov
mov
pop
jmp
mov
push
call
xor
jmp
add
jmp
mov
jmp
push
mov
sub
andl
push
push
push
lea
call
lea
push
mov
lea
call
mov
test
pop
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
cmpb
jne
pushl
andl
mov
lea
call
mov
test
je
mov
push
push
call
mov
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
lea
call
lea
call
lea
call
lea
call
call
testb
je
push
call
pop
mov
pop
ret
push
mov
cmpl
jne
testb
jne
pushl
mov
pushl
call
pop
ret
push
push
lea
mov
call
testb
je
mov
mov
mov
test
je
cmpl
je
mov
push
call
call
andl
lea
xor
call
pop
pop
jmp
mov
test
jne
mov
test
je
jmp
xor
jmp
push
mov
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
decl
mov
jne
xor
inc
mov
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
add
test
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
push
mov
movl
jne
push
push
call
add
test
je
mov
call
test
je
mov
lea
push
push
push
mov
call
mov
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
mov
push
call
mov
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
movl
movl
movl
movl
movl
push
push
xor
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
and
or
mov
mov
mov
or
lea
mov
mov
mov
mov
sub
add
add
push
add
add
push
add
xchg
add
add
inc
add
mov
add
pop
inc
add
add
push
add
add
push
add
mov
add
add
add
add
add
add
or
push
movl
mov
mov
mov
mov
call
mov
mov
movb
mov
mov
movb
mov
mov
mov
mov
mov
mov
and
inc
add
mov
mov
mov
mov
mov
mov
push
movl
mov
mov
mov
mov
call
push
mov
mov
movl
call
add
pop
pop
mov
mov
mov
mov
pop
add
ret
int3
int3
push
push
push
push
mov
mov
or
test
je
mov
mov
not
add
and
mov
test
jne
mov
movsbw
movzwl
mov
lea
cmp
jae
movzwl
mov
and
test
je
add
cmp
jb
pop
pop
pop
or
pop
ret
movsbw
movzwl
test
je
nop
cmp
je
movsbw
add
movzwl
test
jne
mov
jmp
sub
pop
pop
pop
sar
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
cmpl
push
push
mov
mov
jne
push
mov
cmp
je
cmp
je
movb
cmpb
jne
mov
cmp
ja
test
ja
cmp
jne
cmpl
jne
push
push
call
pop
mov
pop
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
push
mov
jg
xor
mov
add
cmpb
mov
jne
cmpl
mov
jne
test
je
testb
jne
movl
mov
push
push
lea
push
push
push
xor
call
mov
test
je
testb
jne
test
je
testb
jne
pop
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
push
push
lea
lea
xor
push
mov
mov
movl
movl
mov
mov
call
mov
test
jle
testb
push
mov
mov
jne
cmp
jne
mov
test
jg
cmp
jne
cmp
jg
cmp
jne
test
jle
test
jl
cmp
jge
mov
mov
mov
mov
sub
push
lea
push
push
call
add
cmp
jne
mov
sub
push
lea
push
mov
call
movb
mov
test
jne
test
jne
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
sub
sub
lds
pop
or
mov
mov
lea
push
push
xor
push
mov
mov
call
cmp
movl
je
lea
lea
push
mov
mov
roll
inc
add
movl
movl
movb
call
mov
mov
lea
lea
call
test
jne
mov
push
lea
call
test
je
test
je
incl
mov
test
mov
jne
mov
test
jne
testb
je
mov
test
je
push
mov
call
mov
test
js
mov
andl
lea
push
push
push
call
cmpl
mov
je
mov
add
incl
lea
push
mov
call
xor
inc
mov
decl
je
mov
mov
push
call
orb
mov
push
call
mov
test
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
add
lea
cmp
je
push
push
mov
test
je
mov
mov
add
add
cmp
jne
pop
pop
mov
addl
mov
add
ret
push
mov
push
push
mov
push
lea
xor
cmp
jne
cmp
je
mov
mov
call
cmp
je
push
call
mov
push
lea
mov
call
mov
lea
push
push
call
pushl
lea
mov
add
call
mov
cmp
je
mov
add
movb
mov
mov
call
cmp
je
lea
push
lea
call
lea
call
pop
pop
xor
pop
pop
ret
mov
call
jmp
push
mov
and
sub
andl
push
mov
mov
push
lea
push
push
push
call
cmpl
je
mov
mov
call
test
je
mov
and
mov
je
push
push
call
test
pop
pop
jne
mov
mov
xor
test
jne
mov
pop
pop
mov
pop
ret
push
mov
xor
inc
movl
movl
mov
andl
test
push
mov
mov
mov
je
mov
shl
push
push
call
test
pop
pop
mov
je
test
jne
test
jbe
mov
test
je
mov
push
push
push
call
test
js
mov
incl
test
je
xor
mov
mov
mov
pop
pop
ret
push
mov
push
push
call
test
pop
je
push
lea
push
pushl
mov
mov
call
pop
test
je
testl
jne
pushl
mov
push
push
call
leave
ret
xor
jmp
push
mov
push
push
cmpl
push
push
jne
pop
pop
leave
ret
mov
mov
mov
cmp
je
push
push
mov
mov
mov
push
push
mov
call
pushl
lea
push
call
mov
test
pop
pop
mov
jne
mov
mov
test
je
and
mov
lea
call
cmpl
jne
jmp
andl
jmp
mov
mov
test
je
push
lea
mov
test
je
mov
push
push
call
xor
mov
call
pop
xor
ret
mov
pushl
mov
lea
push
add
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
push
xor
mov
push
mov
call
test
je
mov
testw
jne
cmp
jne
cmp
jne
testw
jne
mov
push
push
call
cmp
pop
pop
push
pushl
mov
push
jne
or
call
mov
pop
pop
xor
xor
pop
call
leave
ret
push
mov
decl
mov
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
mov
sub
push
xor
cmp
push
je
push
mov
call
cmp
movl
movl
movl
movl
movl
lea
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
cmp
je
mov
xor
mov
call
mov
cmp
je
mov
lea
push
call
mov
cmp
mov
je
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
mov
mov
jmp
mov
push
push
xor
inc
movl
mov
xor
cmp
mov
mov
je
mov
push
call
push
mov
mov
lea
mov
call
add
and
repz
mov
fsts
lea
fstps
mov
mov
mov
mov
mov
mov
mov
mov
call
fld1
mov
mov
mov
lea
mov
mov
mov
mov
lea
orl
orl
fstps
fldz
push
fstps
lea
mov
push
movb
movb
push
lea
mov
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
mov
add
mov
orl
mov
orl
and
or
cmp
movl
movl
movl
mov
mov
movb
pop
jne
mov
mov
mov
cmp
jne
andl
mov
orl
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
push
mov
mov
mov
call
add
mov
mov
push
push
push
mov
call
test
je
cmp
je
mov
mov
mov
movsbw
sub
mov
add
add
cmp
jne
mov
flds
pop
fstps
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
push
push
mov
lea
mov
mov
call
andl
push
lea
call
lea
push
push
call
pushl
andl
mov
lea
call
mov
test
je
mov
test
je
mov
push
push
call
lea
push
call
mov
mov
call
xor
mov
call
lea
call
lea
call
lea
call
pop
pop
leave
ret
push
mov
cmpl
je
mov
mov
test
je
andl
push
push
mov
lea
call
mov
test
je
pushl
mov
push
push
call
mov
lea
call
mov
pop
pop
ret
mov
test
je
mov
mov
test
je
mov
call
test
jl
movsbl
mov
test
mov
je
mov
push
call
xor
ret
xor
jmp
mov
jmp
push
mov
sub
mov
push
xor
push
mov
lea
mov
call
cmp
jne
mov
mov
push
push
call
lea
call
pop
leave
ret
mov
cmp
je
mov
cmp
je
lea
lea
mov
push
push
call
mov
lea
mov
mov
call
mov
mov
xor
cmp
push
sete
push
push
call
popf
add
ret
je
mov
mov
mov
mov
cmp
je
lea
call
jmp
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
lea
mov
mov
push
mov
mov
call
mov
mov
call
lea
mov
mov
push
mov
call
mov
mov
call
xor
cmp
mov
jge
mov
cmp
jl
mov
dec
cmpl
mov
jge
mov
cmp
jl
xor
cmp
lea
mov
jg
test
jle
xor
mov
mov
mov
mov
test
mov
jge
or
cmp
jne
push
call
test
pop
je
mov
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
mov
andl
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
inc
cmp
mov
jl
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
pop
pop
mov
pop
xor
call
mov
pop
ret
andl
mov
mov
mov
decl
jne
mov
call
push
call
pop
incl
mov
cmp
jle
jmp
push
mov
mov
mov
sub
push
push
call
xor
cmp
jne
add
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
test
js
mov
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
pop
pop
leave
ret
xor
jmp
mov
test
jne
cmp
je
test
jne
cmp
je
mov
mov
push
push
call
decl
je
andl
ret
push
call
andl
pop
ret
push
mov
mov
mov
cmp
mov
push
je
cmp
je
cmp
je
andl
lea
push
push
push
call
mov
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
add
xor
jne
test
je
lea
test
mov
je
mov
push
call
xor
jmp
xor
jmp
mov
test
je
mov
rol
xor
ret
xor
ret
push
mov
push
push
xor
push
mov
call
cmp
pop
je
movl
xor
inc
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
pushl
pushl
push
call
test
push
js
mov
mov
call
xor
pop
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpb
push
je
mov
andl
andl
mov
lea
push
lea
push
lea
push
push
call
add
test
js
pushl
mov
pushl
mov
pushl
pushl
call
mov
lea
call
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
test
mov
push
mov
push
mov
jne
test
jne
mov
cmp
ja
mov
sub
cmp
lea
pop
mov
mov
pop
jb
lea
mov
mov
movw
ret
lea
mov
mov
movw
ret
mov
jmp
push
mov
sub
push
push
mov
mov
xor
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
lea
mov
mov
call
push
lea
call
lea
push
pushl
mov
call
test
js
cmp
mov
mov
jne
push
push
call
mov
mov
push
push
push
pushl
push
call
mov
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
jmp
push
mov
sub
mov
andl
andl
push
push
mov
mov
lea
push
mov
call
mov
call
test
js
mov
mov
test
push
jbe
andl
mov
lea
mov
mov
mov
movl
jmp
addl
mov
mov
andl
mov
mov
mov
lea
add
call
push
pushl
mov
call
test
jne
mov
mov
call
test
jne
mov
test
mov
mov
je
incl
mov
andl
test
mov
je
mov
call
mov
mov
call
cmpl
ja
incl
mov
mov
xor
test
jne
push
push
lea
call
mov
call
test
jne
mov
mov
mov
xor
test
jne
test
je
mov
call
mov
call
mov
test
jne
incl
mov
cmp
jb
mov
mov
mov
incl
test
je
call
xor
pop
pop
pop
leave
ret
mov
jmp
mov
mov
push
call
ret
mov
call
mov
call
ret
movzbl
sub
jne
add
ret
dec
jne
add
ret
mov
and
cmp
movl
jne
push
push
mov
xor
cmp
jne
mov
cmp
jne
push
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
pop
jne
lea
call
lea
call
lea
call
pop
lea
pop
jmp
push
xor
mov
adc
and
mov
cmp
je
jmp
push
mov
mov
push
push
mov
xor
push
lea
call
cmp
je
mov
cmpl
push
mov
je
cmpl
je
cmpl
jne
mov
push
push
push
call
add
test
jne
mov
jmp
mov
push
push
push
call
add
test
jne
add
push
add
push
push
call
test
je
mov
pop
pop
pop
pop
ret
mov
push
push
push
call
add
test
jne
add
push
add
jmp
xor
jmp
int3
int3
push
push
mov
call
xor
add
cmp
je
mov
mov
movl
mov
lea
mov
mov
mov
mov
and
mov
or
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
pop
ret
xor
pop
ret
push
mov
push
mov
test
jne
and
testb
je
mov
mov
dec
neg
sbb
and
jne
mov
mov
mov
lea
push
push
push
call
mov
leave
ret
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
lea
cmp
je
push
mov
mov
lea
test
je
mov
mov
mov
test
mov
je
mov
push
mov
call
add
add
cmp
jne
mov
pop
mov
mov
add
mov
pop
pop
lea
pop
ret
push
mov
mov
mov
sub
push
push
push
push
call
mov
lea
mov
call
mov
dec
dec
neg
sbb
lea
inc
call
cmp
jne
movl
movzbl
mov
xor
dec
mov
je
dec
je
sub
mov
add
add
test
mov
je
lea
mov
call
cmp
jne
movl
lea
push
pushl
pushl
pushl
pushl
pushl
call
add
cmpl
mov
je
lea
mov
call
cmp
jne
movl
add
mov
call
cmp
je
cmp
je
cmpl
jne
mov
call
test
jne
mov
call
test
je
pushl
mov
call
pop
test
jl
sub
js
mov
mov
mov
call
cmp
jne
mov
mov
mov
push
add
push
push
push
pushl
movl
pushl
call
add
mov
add
mov
call
cmp
jne
mov
movl
call
test
je
pushl
call
pop
mov
test
jl
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
cmp
jg
mov
cmp
jg
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jg
mov
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
add
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
mov
cmp
jg
cmp
jg
cmp
jl
cmp
jg
cmp
jl
mov
mov
pop
mov
pop
pop
leave
ret
cmp
je
cmpl
jne
lea
call
test
jne
andl
jmp
push
push
pushl
pushl
pushl
pushl
call
add
mov
jmp
lea
call
test
je
pushl
lea
call
pop
test
jl
sub
js
mov
jmp
cmp
jne
mov
cmp
jl
cmp
jg
mov
cmp
jl
cmp
jle
jmp
cmp
je
jmp
mov
mov
jmp
mov
mov
jmp
xor
jmp
push
mov
and
sub
push
push
push
mov
or
cmp
jne
pop
pop
pop
mov
pop
ret
push
mov
push
push
test
je
mov
push
call
test
je
mov
push
mov
push
mov
call
test
js
mov
mov
test
push
push
jbe
andl
mov
mov
movl
mov
mov
mov
mov
test
je
mov
mov
cmp
je
lea
mov
test
je
orl
mov
mov
push
pushl
pushl
pushl
mov
call
test
jne
incl
mov
addl
cmp
jb
xor
pop
pop
pop
leave
ret
int3
push
push
push
mov
mov
test
je
and
test
je
mov
xor
mov
lea
mov
cmp
je
mov
test
je
and
mov
mov
jne
mov
test
jne
mov
pop
pop
pop
ret
cmpl
jne
test
je
cmp
je
mov
test
je
push
lea
lea
push
mov
mov
call
cmp
je
push
push
push
push
mov
call
pop
mov
lea
mov
push
add
mov
call
pop
pop
pop
ret
lea
push
add
push
mov
call
movl
pop
pop
pop
ret
push
mov
mov
mov
lea
push
push
call
mov
pop
ret
mov
mov
test
jne
call
mov
mov
xor
ret
push
mov
mov
cmpl
je
push
push
pushl
pushl
call
pop
ret
push
pushl
mov
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
xor
mov
lea
push
mov
push
lea
mov
mov
mov
lea
push
lea
push
push
push
xor
movl
mov
movl
call
add
test
je
mov
mov
push
push
push
mov
mov
push
push
lea
push
mov
call
test
mov
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
call
test
js
lea
call
mov
mov
mov
mov
test
jne
mov
pop
pop
pop
mov
pop
ret
pushl
push
call
ret
mov
mov
test
je
mov
mov
mov
push
call
xor
ret
mov
cmp
jne
cmp
ja
movzbl
jmp
flds
flds
fucompp
fnstsw
test
jp
xor
inc
ret
xor
ret
mov
sub
neg
sbb
inc
ret
nop
outsb
popa
add
adc
add
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
or
push
and
add
call
xor
ret
push
mov
sub
push
push
xor
push
lea
lea
movl
movl
mov
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
movb
mov
cmp
mov
jne
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
mov
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
mov
xor
cmp
je
incl
mov
cmp
mov
jne
mov
mov
mov
mov
call
cmp
mov
mov
je
pop
xor
pop
leave
ret
push
push
lea
push
mov
call
cmp
je
push
call
cmp
pop
je
movl
mov
lea
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
call
lea
movl
call
lea
call
jmp
xor
jmp
push
mov
push
mov
call
test
je
mov
push
push
xor
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
push
call
cmp
pop
je
mov
mov
cmp
mov
movl
mov
je
mov
push
call
pushl
lea
push
movl
mov
movl
call
push
call
pop
lea
call
lea
call
pop
pop
xor
leave
ret
xor
jmp
push
mov
push
push
xor
push
lea
mov
mov
call
mov
lea
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
mov
mov
lea
call
mov
pop
leave
ret
mov
jmp
push
mov
pushl
mov
xor
cmp
setne
add
mov
lea
push
pushl
pushl
push
call
pop
ret
push
mov
test
je
mov
mov
add
test
je
mov
and
cmp
jne
test
je
mov
push
push
push
call
pop
ret
mov
call
jmp
andl
xor
jmp
push
mov
and
sub
push
mov
test
push
je
mov
xor
cmp
je
push
lea
movl
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
push
call
test
js
mov
lea
call
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
test
js
mov
call
test
js
pushl
call
xor
lea
call
lea
call
mov
pop
pop
mov
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
mov
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
call
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
mov
mov
sub
push
push
mov
test
push
je
mov
test
je
mov
mov
push
push
push
mov
push
mov
call
mov
mov
mov
add
push
push
call
mov
mov
add
test
mov
je
add
mov
test
mov
je
call
mov
mov
mov
test
mov
mov
mov
lea
mov
mov
je
mov
mov
mov
mov
mov
mov
andb
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
test
je
lea
movl
call
mov
mov
mov
add
push
push
push
call
mov
add
mov
mov
cmp
jge
cmpl
jne
cmp
jge
mov
lea
call
mov
mov
mov
jmp
push
call
mov
add
test
jne
mov
call
mov
cmpl
je
mov
call
mov
push
call
mov
call
mov
call
mov
add
call
mov
mov
mov
lea
lea
cmp
jne
push
push
push
lea
push
call
push
push
add
push
movl
call
add
xor
pop
pop
pop
mov
pop
ret
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
mov
neg
sbb
xor
and
cmp
push
mov
mov
mov
mov
jne
mov
push
lea
mov
call
mov
lea
push
mov
push
push
pushl
push
pushl
pushl
push
call
test
js
mov
pushl
mov
push
call
mov
mov
mov
mov
push
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
jmp
push
mov
push
mov
call
mov
xor
cmp
jne
cmp
xor
inc
add
cmp
je
mov
fisttps
inc
add
call
call
mov
pop
pop
ret
pushl
lea
call
jmp
push
mov
push
push
mov
test
je
mov
test
je
andl
lea
push
push
push
mov
call
mov
add
leave
ret
xor
jmp
push
mov
and
sub
push
mov
push
mov
testb
push
jne
call
mov
andl
mov
mov
mov
mov
mov
call
test
je
add
lea
movsl
movsl
movsl
lea
mov
mov
push
mov
movsl
call
mov
add
mov
add
mov
mov
add
add
mov
add
sub
cmpl
mov
mov
mov
jne
cmpl
jl
mov
pushl
lea
call
mov
mov
andl
andl
mov
testb
mov
mov
jne
mov
testw
jne
mov
andl
mov
push
push
push
pushl
mov
pushl
lea
lea
call
mov
mov
and
jne
lea
mov
andw
test
jne
mov
mov
call
mov
and
or
jne
mov
add
lea
movsl
movsl
movsl
movsl
mov
xor
lea
mov
call
mov
and
xor
or
movl
je
mov
push
push
push
pushl
lea
pushl
mov
push
lea
push
pushl
push
call
mov
test
jne
mov
and
xor
or
je
lea
push
mov
call
push
mov
call
push
call
pop
mov
and
xor
or
jne
test
jne
pushl
mov
pushl
test
inc
add
test
je
xor
test
jne
andl
mov
push
pushl
mov
pushl
lea
push
lea
push
pushl
call
pushl
lea
push
lea
push
push
call
inc
add
add
add
add
cmp
je
mov
add
add
mov
cmp
je
mov
add
add
mov
mov
mov
mov
testb
jne
mov
mov
and
xor
or
je
mov
mov
mov
mov
mov
cmp
jne
mov
andl
xor
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
call
mov
mov
jmp
push
mov
and
sub
mov
xor
mov
add
add
or
push
mov
mov
push
jne
mov
xor
mov
xor
inc
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
movl
movl
mov
aam
inc
add
lea
mov
dec
pop
inc
add
daa
inc
add
mov
mov
movl
movl
mov
call
pop
pop
lea
push
lea
call
testb
jne
testb
jne
mov
mov
lea
push
push
push
mov
mov
mov
call
mov
test
jne
cmp
jne
push
call
cmp
pop
je
mov
mov
add
cmp
mov
movl
mov
mov
je
mov
push
call
xor
mov
lea
mov
push
lea
call
cmp
je
mov
push
call
mov
call
cmp
je
mov
push
call
testb
mov
je
mov
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
call
cmpl
je
call
test
je
mov
push
mov
call
pop
ret
push
mov
sub
mov
push
push
mov
mov
push
lea
lea
push
mov
movl
add
push
add
ret
je
mov
push
mov
call
mov
cmp
mov
je
pushl
mov
add
mov
call
push
lea
mov
call
mov
mov
lea
push
pushl
push
call
mov
test
jne
push
lea
mov
call
lea
push
push
pushl
add
pushl
mov
push
call
test
jne
cmp
je
pushl
mov
pushl
pushl
pushl
push
call
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
pushl
pushl
pushl
push
call
jmp
push
mov
mov
sub
push
xor
cmp
push
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
mov
add
mov
call
mov
call
cmp
je
testb
mov
je
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
pop
leave
ret
cmp
je
jmp
push
mov
sub
push
push
push
mov
call
xor
cmp
je
cmp
je
push
pushl
push
push
lea
push
call
mov
add
push
mov
call
test
ja
test
je
mov
push
call
xor
cmp
jne
movb
mov
cmp
jne
cmp
je
mov
push
mov
call
cmp
jne
mov
cmp
je
cmpb
je
mov
push
mov
lea
mov
call
pushl
lea
push
pushl
mov
movl
movl
movl
call
testb
jne
testb
jne
mov
lea
push
push
mov
movb
call
mov
cmp
jne
lea
call
pop
pop
pop
leave
ret
mov
movl
cmpb
jne
lea
call
cmp
jae
mov
mov
mov
andl
push
mov
lea
call
mov
test
je
mov
push
call
lea
call
addl
inc
cmp
jb
jmp
mov
push
call
jmp
xor
jmp
mov
test
je
mov
and
cmp
jne
ret
mov
jmp
push
mov
sub
push
pushl
mov
pushl
pushl
push
call
test
js
push
push
mov
call
xor
cmp
pop
je
movl
mov
mov
push
lea
mov
mov
call
cmp
je
pushl
mov
lea
mov
call
cmp
je
lea
push
xor
mov
mov
mov
call
mov
pushl
mov
push
call
lea
push
call
add
call
cmp
mov
mov
mov
je
mov
push
lea
mov
call
mov
lea
push
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
movzwl
mov
push
push
call
lea
call
lea
call
lea
call
mov
lea
call
mov
pop
pop
pop
leave
ret
push
push
call
jmp
push
mov
sub
push
push
mov
push
lea
mov
call
test
je
lea
mov
cmp
je
testb
jne
cmpl
je
mov
mov
mov
add
mov
mov
add
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
mov
call
cmp
je
cmp
je
cmp
je
xor
jmp
mov
push
mov
call
mov
lea
push
mov
call
push
call
test
pop
pop
je
lea
push
mov
call
mov
mov
add
mov
mov
add
mov
mov
add
mov
lea
mov
movsl
movsl
movsl
jmp
mov
call
test
je
mov
jmp
xor
inc
ret
push
mov
mov
test
push
push
je
cmpl
je
mov
push
pushl
lea
mov
mov
mov
call
mov
lea
push
mov
call
mov
push
push
call
test
pop
js
mov
test
je
mov
mov
push
push
call
test
je
mov
mov
xor
pop
pop
pop
ret
mov
test
jne
push
push
push
mov
or
lea
mov
mov
push
mov
call
movzbl
movb
mov
test
je
mov
shr
test
jbe
xor
mov
test
je
mov
and
lea
mov
mov
call
inc
cmp
jb
lea
xor
mov
call
push
lea
mov
lea
push
push
call
push
push
push
call
lea
push
push
movb
call
add
pop
pop
pop
pop
ret
xor
jmp
push
mov
mov
test
je
mov
jmp
mov
test
jne
mov
test
je
mov
pop
ret
mov
test
je
mov
test
jne
cmp
je
mov
mov
call
test
jne
jmp
xor
jmp
xor
jmp
push
mov
and
sub
push
xor
inc
push
mov
xor
push
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
js
push
lea
call
pop
call
cmp
je
lea
push
add
mov
push
push
call
test
js
cmp
setne
mov
lea
call
mov
lea
pop
sbb
add
add
mov
mov
push
push
call
test
js
lea
lea
inc
das
inc
add
test
jne
push
lea
call
test
jne
call
cmp
mov
je
mov
push
mov
call
mov
cmp
mov
jne
push
call
cmp
pop
je
lea
push
lea
push
pushl
lea
push
lea
push
mov
call
mov
cmp
mov
je
mov
push
call
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
push
push
push
call
test
lea
jne
call
cmp
je
mov
push
call
lea
call
mov
cmp
jne
mov
test
jne
testb
jne
test
jne
testb
jne
test
mov
je
mov
icebp
sub
call
test
pop
je
test
je
mov
add
push
call
test
pop
je
test
jne
testb
jne
test
je
mov
add
push
call
test
pop
je
xor
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
je
cmp
je
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
push
lea
sub
mov
xor
mov
mov
push
push
mov
xor
lea
xor
mov
mov
mov
call
lea
xor
call
push
lea
call
push
mov
mov
pop
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
mov
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
cmp
mov
jne
push
push
push
lea
call
test
je
mov
movl
mov
movsbw
decl
mov
inc
inc
inc
cmp
jne
push
push
pop
lea
call
test
je
push
movl
call
cmp
pop
je
call
lea
mov
mov
call
cmp
je
pushl
mov
pushl
lea
push
call
test
mov
js
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
pushl
push
call
mov
push
call
test
je
lea
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
je
xor
mov
pop
xor
pop
call
add
leave
ret
mov
test
je
cmpl
jne
cmpl
movl
jne
xor
ret
mov
push
call
test
js
andl
ret
push
mov
sub
push
mov
mov
push
push
push
xor
push
lea
call
mov
xor
cmp
jbe
mov
mov
test
lea
mov
lea
mov
mov
jne
mov
push
push
call
test
jne
mov
pushl
mov
push
call
pushl
mov
push
pushl
call
cmpl
mov
jne
mov
test
jne
push
call
test
pop
je
pushl
mov
andl
lea
movl
call
pushl
lea
call
mov
test
mov
je
mov
push
call
push
pushl
call
test
jne
cmpb
mov
jne
testb
je
cmpb
or
add
add
cld
lea
lea
call
incl
mov
mov
cmp
jb
lea
call
test
js
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
mov
test
mov
je
mov
cmp
je
mov
mov
push
call
test
jne
test
je
mov
call
mov
test
je
mov
test
mov
je
cmpl
jne
mov
mov
mov
mov
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
fld1
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
movzbl
mov
push
push
push
lea
push
lea
push
lea
call
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
cmp
je
mov
cmp
je
mov
mov
mov
cmp
jne
mov
pop
pop
pop
leave
ret
mov
mov
test
jne
or
mov
mov
cmp
jne
jmp
test
je
mov
call
jmp
cmpl
je
jmp
mov
mov
lea
call
jmp
mov
mov
push
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
jmp
xor
jmp
xor
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
call
add
or
mov
inc
sub
shlb
or
dec
xor
xor
mov
cmp
jb
sub
test
je
mov
and
cmp
jb
xor
ret
lea
mov
neg
sbb
and
jmp
xor
jmp
push
mov
sub
push
push
mov
cmpb
push
ja
xor
push
mov
lea
mov
call
cmp
je
lea
mov
call
movzwl
andb
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
push
call
test
js
testb
jne
testb
je
cmp
je
mov
testb
je
mov
mov
mov
cmp
je
lea
mov
call
mov
mov
xor
xor
mov
or
je
push
push
push
lea
call
push
push
mov
mov
mov
push
pushl
mov
call
lea
call
lea
call
pop
pop
pop
leave
ret
or
mov
jmp
orb
jmp
push
mov
sub
push
mov
mov
test
push
push
jne
mov
test
je
cmp
je
test
je
test
mov
jne
mov
cmp
ja
mov
mov
mov
add
cmp
mov
jae
fldl
mov
sub
fstpl
mov
push
lea
push
push
push
push
call
fldl
faddl
mov
fstpl
testb
mov
je
movzbl
cmp
je
mov
mov
test
jns
lea
lea
cmp
jae
mov
test
jns
push
sub
push
push
call
faddl
fstpl
fldl
inc
faddl
incl
cmp
fstpl
jb
mov
test
je
mov
mov
cmpl
jne
mov
mov
mov
mov
add
push
push
mov
call
mov
cmp
ja
mov
mov
pop
pop
pop
leave
ret
test
je
jmp
test
je
jmp
cmpl
jne
push
call
test
pop
je
andl
movl
mov
mov
mov
mov
mov
mov
push
add
push
call
fldl
push
push
fstpl
pushl
lea
pushl
call
fstpl
fldl
mov
fsubl
add
mov
call
test
mov
fildl
jl
mov
fstps
lea
push
add
call
fldl
jmp
mov
jmp
push
mov
push
mov
push
mov
push
mov
mov
call
test
jne
mov
push
push
pushl
mov
andl
push
pushl
call
mov
add
mov
xor
pop
pop
pop
pop
ret
mov
call
test
je
pushl
call
test
pop
jne
push
mov
call
mov
test
jne
jmp
xor
jmp
decl
push
push
push
push
mov
push
movl
movl
movl
pop
je
push
mov
call
lea
cmp
and
add
mov
lea
cmp
sub
call
pop
lea
call
lea
call
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
call
lea
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
lea
pop
pop
pop
jmp
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
add
lds
test
decl
or
adc
lock
incl
dec
mov
test
je
cmpb
je
mov
ret
mov
test
jne
movb
jmp
mov
call
test
je
cmpl
mov
mov
mov
je
push
lea
push
push
call
pop
test
mov
jne
movb
xor
ret
call
test
jns
jmp
push
lea
sub
mov
xor
mov
push
xor
cmp
push
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
lea
push
pushl
push
call
test
js
cmp
je
add
mov
lea
call
mov
mov
push
pushl
lea
push
call
push
lea
mov
call
lea
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
je
mov
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
pushl
lea
lea
mov
mov
movl
movl
mov
mov
call
test
js
pushl
mov
lea
push
pushl
call
testb
mov
je
mov
add
push
call
test
pop
je
lea
call
testb
jne
testb
jne
mov
mov
pop
pop
xor
pop
call
add
leave
ret
push
mov
push
mov
push
xor
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
lea
push
call
mov
mov
mov
test
mov
je
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
jne
test
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
push
mov
cmpl
je
add
jno
adc
add
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
test
je
lea
jmp
mov
test
je
lea
jmp
push
call
test
pop
je
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
pop
movl
xor
pop
ret
pop
movl
mov
pop
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
mov
mov
mov
jmp
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
push
mov
movl
call
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
push
push
push
mov
mov
add
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
add
cmp
push
mov
jne
mov
cmp
jg
add
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
mov
push
mov
push
mov
lea
mov
call
test
je
mov
andl
test
mov
je
push
call
pop
movl
push
lea
lea
call
mov
neg
sbb
and
je
mov
test
je
push
mov
call
mov
xor
pop
inc
push
lea
lea
mov
mov
call
test
je
mov
mov
testb
jne
testb
jne
cmpl
je
cmpl
je
pushl
call
pop
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
fldz
mov
fstl
sub
fstpl
fldl
mov
inc
and
fstpl
fldl
fstpl
push
push
push
lea
push
lea
push
call
mov
xor
mov
mov
mov
mov
mov
mov
fildl
add
fmull
fstpl
call
call
mov
mov
mov
fildl
mov
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
add
ret
fldz
push
fldl
push
fcom
fnstsw
fstp
test
jne
faddl
fstpl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
push
call
add
cmpl
je
mov
push
call
add
mov
pop
add
ret
mov
push
push
mov
cmp
push
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
call
mov
add
pop
pop
pop
pop
add
ret
sub
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
push
push
mov
call
add
jmp
push
add
je
mov
push
call
mov
andl
andl
mov
mov
test
je
pushl
mov
push
call
shr
not
and
mov
mov
ret
xor
mov
mov
mov
mov
mov
mov
ret
mov
test
je
mov
andl
mov
xor
inc
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
sub
push
mov
push
push
xor
cmp
je
pop
pop
pop
leave
ret
push
mov
sub
push
mov
cmpl
je
push
movl
movl
lea
push
mov
xor
cmp
je
mov
mov
mov
cmp
je
cmp
mov
jbe
mov
movl
mov
mov
mov
mov
mov
call
mov
cmp
je
incl
mov
mov
addl
cmp
jb
xor
mov
cmp
jne
inc
sub
mov
mov
cmp
mov
jne
mov
pushl
push
push
call
pop
pop
xor
pop
leave
ret
mov
mov
call
sub
jne
mov
add
lea
cmp
je
mov
mov
test
je
mov
push
call
add
cmp
jne
push
push
pushl
xor
push
inc
call
decl
subl
cmpl
jne
jmp
dec
dec
jne
jmp
int3
int3
int3
mov
mov
xor
add
push
lea
cmp
je
movsbl
rol
xor
add
jmp
pop
ret
push
mov
cmp
push
mov
je
cmp
je
cmp
je
pop
xor
pop
ret
push
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
pop
jmp
call
jmp
push
mov
push
push
push
mov
mov
add
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
add
cmp
push
mov
jne
mov
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
test
je
andl
push
mov
mov
mov
call
mov
andl
test
jne
lea
mov
lea
push
call
test
mov
js
mov
test
je
mov
push
call
mov
mov
mov
call
mov
test
je
decl
cmpl
je
mov
pop
pop
leave
ret
mov
test
je
push
call
pop
xor
ret
push
mov
test
je
cmpl
jg
xor
mov
xor
pop
ret
push
mov
push
andl
push
push
mov
mov
lea
push
mov
call
test
js
cmpl
push
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
call
lea
mov
call
push
mov
mov
call
pop
pop
ret
mov
test
je
push
call
pop
xor
ret
andl
inc
mov
mov
test
jne
mov
cmpl
push
je
pushl
mov
call
mov
test
jne
mov
mov
call
andl
andl
mov
pop
ret
pushl
push
pushl
pushl
call
jmp
push
mov
cmpl
je
cmpl
push
je
mov
push
lea
movl
call
cmpb
je
pop
xor
pop
ret
pushl
lea
call
test
je
jmp
cmpb
jne
push
lea
call
mov
call
pop
movb
jmp
int3
mov
sub
cmpl
push
push
mov
push
jge
mov
mov
movl
mov
mov
push
mov
movl
call
mov
add
test
js
mov
cmpl
push
je
mov
adc
test
les
add
add
test
je
push
call
mov
add
cmpl
jge
mov
mov
push
push
push
call
mov
add
cmpl
mov
jge
mov
mov
sbb
mov
add
addl
je
test
jle
mov
mov
add
adcl
mov
push
call
add
test
js
test
jle
mov
push
call
mov
pop
pop
pop
pop
add
ret
jge
call
cmp
jne
push
call
add
pop
pop
pop
mov
pop
add
ret
cmpl
je
push
push
mov
push
pushl
mov
mov
pushl
mov
push
call
test
lea
js
cmpl
je
andl
mov
pop
pop
ret
mov
jmp
movl
jmp
push
mov
sub
mov
xor
mov
push
pushl
mov
mov
push
call
test
jne
xor
mov
xor
pop
call
leave
ret
push
mov
cmpl
jne
cmpb
je
pushl
mov
pushl
call
cmpb
je
push
mov
call
push
push
lea
call
pop
call
pop
ret
push
call
jmp
call
jmp
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
pushl
mov
xor
push
mov
call
test
jne
mov
mov
call
test
jne
lea
call
pop
ret
xor
inc
jmp
push
mov
push
andl
mov
test
mov
push
mov
je
add
mov
andl
mov
push
call
pushl
mov
push
call
mov
test
pop
pop
je
mov
push
call
mov
neg
sbb
and
add
lea
call
mov
pop
pop
pop
ret
push
mov
lea
movl
movl
call
lea
call
lea
call
lea
call
testb
movl
movl
jne
mov
pop
ret
push
call
pop
jmp
push
mov
push
lea
push
mov
call
test
jne
mov
xor
cmp
mov
jne
mov
push
mov
call
xor
pop
pop
ret
push
jmp
push
mov
sub
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
xor
inc
jmp
push
mov
sub
mov
xor
mov
mov
shr
movzbl
push
push
mov
shr
movzbl
push
movzbl
push
push
lea
push
push
mov
call
add
push
call
test
je
andl
lea
push
mov
call
mov
lea
push
movl
call
pop
pop
mov
xor
pop
call
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
xor
cmp
je
cmp
jne
push
call
test
js
mov
mov
mov
mov
mov
lea
mov
push
lea
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
and
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
testl
punpckhdq
xchg
and
call
mov
add
test
fcomps
mov
pop
xorb
iret
movsb
clc
mov
leave
mov
stos
out
testb
imul
in
add
data16
in
add
push
push
push
push
call
add
lret
mov
test
add
test
add
add
mov
xchg
xchg
add
cmpsb
add
pushf
add
roll
std
add
add
mov
ret
add
add
stos
mov
aam
jae
add
int
in
hlt
pop
popl
push
push
push
push
push
push
push
push
lea
push
push
call
lret
add
mov
shlb
add
xchg
xchg
add
js
mov
add
add
pusha
stos
loope
repnz
add
jae
mov
add
in
cwtl
cmpsb
shrl
loopne
cmpsb
mov
mov
sub
pop
push
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
call
xlat
mov
mov
add
pop
cli
roll
add
fiadds
add
ja
lea
fildl
test
repnz
add
jnp
add
mov
movb
add
add
fwait
mov
cld
lock
cli
add
popa
add
push
mov
lcall
push
lea
push
push
lea
push
push
call
add
mov
mov
stos
add
out
add
add
mov
add
out
add
add
jp
add
mov
add
add
fnstenv
xlat
mov
enter
stos
fs
jno
mov
add
add
pop
push
push
push
push
push
push
lea
push
push
push
call
add
xchg
lds
mov
mov
add
rolb
add
add
aam
pusha
jnp
test
out
imul
mov
mov
xchg
xchg
add
sahf
sahf
mov
aam
add
add
loopne
lcall
and
add
push
push
lea
push
push
push
call
out
fstpt
shrl
clc
mulb
pop
arpl
iret
fsubl
push
lret
lret
mov
add
mov
lret
add
add
xchg
add
lock
cmpsb
add
mov
push
push
push
push
push
push
call
stos
add
jb
push
add
add
jmp
add
push
add
add
test
movsl
pop
xchg
add
movsl
scas
xchg
lret
mov
pop
lret
mov
rcr
add
scas
push
add
mov
pop
test
add
xchg
cltd
mov
rolb
add
add
js
mov
fildl
nop
sub
pop
push
push
push
lea
push
push
push
call
add
jge
pop
fldl
mov
add
add
add
jmp
fcomip
push
scas
add
pop
add
int3
mov
mov
add
mov
add
fldcw
add
clc
add
lods
movl
mov
pop
add
into
sub
pop
call
push
lea
push
push
lea
push
push
push
call
add
insb
arpl
add
add
add
roll
add
add
out
xchg
lea
ja
mov
movsl
jmp
push
popf
jle
mov
add
add
add
mov
icebp
add
leave
aam
sub
pop
jmp
push
lea
push
call
add
loope
add
roll
test
add
in
xchg
pop
add
mov
add
mov
test
add
imul
repnz
clc
xchg
add
add
leave
push
flds
add
sub
pop
ret
mov
push
push
push
lea
push
lea
push
push
push
push
call
stc
stos
jmp
add
jle
mov
add
add
fcomps
add
bnd
push
pop
cltd
fstps
stc
xchg
pop
add
lcall
pop
hlt
add
push
push
lea
push
call
jo
add
into
add
stos
push
add
out
add
mov
add
mov
add
pop
xchg
leave
fwait
movsl
mov
jnp
mov
add
push
add
out
in
hlt
pop
add
add
push
push
push
push
push
push
lea
push
push
push
call
mov
add
movsl
add
mov
out
add
lock
in
add
cmpl
mov
pop
lret
fldenv
jnp
fiaddl
aad
xchg
push
mov
pop
mov
push
push
push
lea
push
lea
push
lea
push
push
call
stc
add
cmpsl
int3
pop
mov
add
fisubrl
lret
jle
subl
arpl
nop
mov
add
mov
add
add
push
mov
add
mov
pop
add
int
sub
pop
xor
push
push
push
lea
push
push
push
push
push
push
call
pop
add
add
add
xchg
push
mov
add
add
xchg
rcr
out
jmp
int
sub
pop
add
push
push
sub
push
xor
add
shr
lea
xor
sub
shl
pop
add
dec
sub
pop
push
lea
push
call
iret
lods
mov
lock
cltd
repnz
roll
add
aad
pop
test
add
add
mov
lea
add
add
push
add
push
mov
push
add
data16
in
in
clc
pop
pushl
push
push
push
push
push
lea
push
push
push
push
call
clc
add
fidivrl
add
hlt
jle
jns
in
add
loope
add
imul
in
sahf
les
add
add
push
hlt
add
mov
add
int3
mov
aam
imul
pushf
movsl
pushf
ljmp
add
cli
sub
pop
call
push
push
push
push
push
call
add
mov
cmpsb
repnz
add
sbbb
pop
mov
pop
push
ret
out
aad
add
mov
jl
mov
add
sub
pop
mov
movl
push
push
push
push
push
push
push
call
add
add
mov
push
xchg
lds
js
ret
fs
into
add
push
cli
jns
add
scas
add
mov
add
add
mov
cwtl
ljmp
add
add
xchg
les
vphsubwd
mov
add
add
nop
mov
in
in
lea
push
lea
push
push
push
call
rolb
mov
jbe
icebp
add
add
popf
shl
in
push
cmpl
xchg
add
xchg
nop
loope
pop
add
mov
push
push
push
push
push
push
call
pop
fldl
les
mov
add
incb
fwait
xchg
add
hlt
add
add
jne
mov
jp
add
push
cmc
loop
jo
add
pushl
pushl
push
push
push
push
push
push
push
lea
push
push
call
lds
push
add
add
cwtl
jne
add
fcomi
out
add
out
push
mov
icebp
add
add
add
add
xchg
enter
add
test
mov
push
ja
add
push
add
add
add
mov
push
in
fcompl
inc
add
pushl
push
lea
push
push
lea
push
push
push
call
jmp
loop
add
bound
roll
pusha
out
lcall
mov
push
clc
add
add
add
mov
rcr
add
jl
add
fs
nop
add
add
push
mov
xlat
imul
scas
add
push
push
loope
adc
sub
pop
pushl
push
lea
push
push
call
fwait
aad
hlt
mov
add
loope
mov
sti
stc
add
push
add
xchg
mov
add
insb
add
lret
frstor
cld
ret
add
ret
add
add
jp
add
add
lcall
fnstcw
add
push
push
sub
rol
add
push
xor
add
dec
add
add
xor
sub
rol
shl
pop
add
sub
pop
push
lea
push
lea
push
lea
push
push
push
call
int
xchg
out
xchg
mov
add
fadds
add
cltd
add
cmc
add
add
add
push
push
lods
rolb
add
mov
add
testb
xchg
add
lahf
xchg
add
cli
sub
pop
pushl
push
push
call
clc
gs
mov
add
add
add
fucomp
enter
add
lret
add
icebp
xchg
in
lret
les
push
add
test
add
filds
mov
xchg
pop
pusha
pop
int
icebp
idivb
mov
lock
jae
push
add
add
add
test
sub
pop
call
push
push
push
call
addl
rolb
pop
add
add
test
add
ja
add
mov
add
xchg
add
add
add
add
mov
in
add
pop
add
jp
mov
add
mov
pop
add
mov
add
scas
sub
pop
push
push
push
dec
not
shl
xor
push
sub
add
xor
sub
shr
sub
sub
pop
sub
shl
dec
inc
pop
push
push
push
push
push
push
push
push
lea
push
call
jbe
insb
imul
mov
mov
push
mov
add
mov
push
mov
vsubpd
pop
je
mov
mov
jl
add
jl
add
xchg
fiaddl
lds
test
test
add
in
fdivr
lcall
push
push
push
push
push
call
roll
out
mov
test
mov
mov
mov
stos
shlb
loopne
add
shr
clc
sub
pop
push
push
push
push
push
push
lea
push
push
push
call
jle
jge
add
mov
pusha
aad
add
jl
add
ret
add
add
jecxz
lods
add
mov
add
iret
add
les
sub
pop
call
push
lea
push
call
ror
add
pop
jmp
push
mov
rolb
lods
jle
add
push
push
jno
add
hlt
xor
add
icebp
add
shr
mov
add
lret
mov
fsubrl
jp
mov
add
pop
rolb
xlat
addl
lcall
push
push
push
lea
push
lea
push
push
push
call
push
pop
loop
add
add
in
mov
add
imul
faddl
add
add
aad
in
in
lcall
push
push
push
lea
push
lea
push
call
clc
add
add
mov
jle
lcall
testl
add
aam
lea
push
cld
add
mov
add
add
push
add
pop
push
imul
add
mov
lock
add
sub
pop
push
push
push
push
push
lea
push
lea
push
push
call
imul
bound
add
pusha
add
loopw
add
xchg
add
push
loope
add
add
add
push
push
add
xchg
stos
add
repnz
lcall
stc
mov
lcall
pop
hlt
add
push
push
push
lea
push
push
push
push
call
mov
fistl
add
pop
ret
add
out
roll
testl
mov
ror
mov
xchg
mov
pushf
pop
push
add
xchg
xlat
add
push
lcall
ret
add
add
push
lea
push
call
xchg
add
add
add
scas
fiaddl
pushf
xchg
add
sti
loopne
mov
cwtl
jge
mov
add
cmp
fbstp
add
mov
jle
sub
pop
add
mov
push
push
push
lea
push
push
push
call
pop
add
add
add
hlt
xlat
ret
mov
aam
add
mov
into
mov
cld
xchg
push
loope
pop
lods
add
add
mov
add
mov
add
add
in
scas
jae
add
iret
jne
sub
pop
xor
push
lea
push
push
push
call
scas
out
cmc
add
stos
out
into
mov
add
add
jno
add
add
shll
add
popa
mov
push
enter
add
add
movsl
jnp
sti
cmc
add
jo
subb
mov
pop
add
into
jl
add
add
mov
add
cmpsb
add
sub
pop
add
push
push
push
push
lea
push
push
call
add
mov
add
add
test
divb
add
mov
pop
add
add
add
call
push
push
push
push
push
push
push
call
testb
fadds
mov
addl
add
mov
test
mov
les
jge
add
out
add
mov
aam
cltd
cmc
add
in
add
mov
pop
mov
add
fstpt
sti
jbe
add
lret
add
add
sbbl
push
mov
xor
push
push
push
push
lea
push
push
push
push
push
call
xchg
add
movsl
stc
xchg
aad
ja
xlat
test
jne
add
shll
add
add
fdivs
roll
into
add
mov
lcall
lock
push
push
push
push
push
push
push
push
push
call
xchg
xchg
jle
fadds
add
mov
add
jl
pushf
sarb
push
pop
add
bnd
push
push
fwait
pop
mov
cwtl
addr16
loope
add
add
sti
int3
fsts
mov
add
call
movsb
imul
xchg
mov
in
fcomps
mov
xor
push
push
lea
push
push
push
push
push
push
lea
push
call
add
out
cmpsb
repnz
add
push
repnz
mov
pop
mov
fcmovnbe
loope
mov
shll
mov
cli
std
add
add
aad
add
mov
std
mov
xchg
add
push
mov
xor
push
push
push
lea
push
push
push
lea
push
call
js
mov
xlat
add
lcall
add
arpl
scas
add
js
addl
movsb
xchg
pop
jne
popf
shrb
xchg
add
add
icebp
add
mov
add
pop
arpl
lcall
enter
dec
push
push
call
add
fldl
add
imul
xchg
jne
add
jge
add
add
add
mov
mov
add
into
ja
jp
add
loopne
jp
xchg
addl
out
in
hlt
lcall
rep
push
push
push
push
lea
push
push
push
push
push
call
add
jnp
mov
add
add
jle
add
mov
incb
add
aad
in
add
xchg
mov
nop
mov
add
add
add
mov
repnz
fdivr
lcall
push
push
push
push
push
push
call
jbe
push
aad
stc
lock
cwtl
aad
notl
add
add
mov
push
add
add
cltd
lods
add
add
add
in
call
push
push
lea
push
push
call
add
test
mov
loop
add
add
add
test
enter
add
add
add
addr16
lret
shr
mov
xchg
fistpl
jmp
sahf
add
add
mov
lods
add
sub
pop
add
add
push
push
push
push
push
lea
push
push
call
pop
add
mov
lcall
push
jns
std
jno
add
push
xchg
mov
add
mov
add
test
test
bound
clc
rolb
add
cmpsb
subb
mov
std
mov
mov
pop
add
xchg
add
mov
out
popf
flds
lcall
ret
xchg
push
push
push
lea
push
call
add
jns
in
out
data16
add
cmpsl
fistl
add
cld
add
add
std
test
sub
pop
mov
push
push
lea
push
push
lea
push
push
push
push
lea
push
push
push
call
add
add
addb
xchg
imul
push
sahf
jbe
aam
test
addr16
cmpsl
add
xlat
add
popf
icebp
add
push
mov
mov
add
xchg
divl
add
pop
add
fisubl
add
test
jae
data16
add
fdivr
lcall
add
push
push
push
lea
push
push
push
call
add
pop
aad
pop
add
mov
loop
lods
add
add
fs
mov
int3
lahf
aad
mov
mov
add
add
push
test
add
add
mov
in
call
push
push
push
push
lea
push
push
push
call
sub
add
mov
int3
in
movsl
rclb
add
push
add
add
jge
add
cwtl
add
lods
popa
pop
out
xchg
add
int3
add
add
roll
add
add
sbb
mov
jl
add
add
js
mov
test
push
and
test
push
push
lea
push
push
push
lea
push
push
push
push
call
lods
add
push
fcomp
add
fwait
add
add
add
add
jbe
icebp
add
js
add
add
add
shll
cli
add
mov
add
xchg
fdivrl
add
out
test
add
shr
mov
loopne
lcall
adc
push
push
call
push
add
add
xchg
add
pop
add
add
add
mov
xlat
jns
mov
add
mov
add
je
mov
clc
pop
add
push
push
lea
push
push
call
in
nop
movb
cli
add
add
ja
add
incb
add
add
jp
test
pusha
add
pop
mov
add
xchg
mov
pop
mov
rcrl
leave
cwtl
add
xlat
add
rclb
add
aad
add
add
jb
add
sub
pop
mov
xor
push
push
push
push
push
push
push
push
call
bound
int3
mov
lock
hlt
push
mov
scas
push
in
gs
test
jns
mov
std
mov
jo
xchg
add
push
pop
shl
mov
arpl
lcall
ret
call
xchg
out
add
int
cmpsl
int3
add
add
jb
add
repnz
pop
add
mov
add
pop
pop
lcall
clc
lcall
rorl
stos
push
dec
add
push
sub
add
shl
inc
not
sub
sub
not
add
lea
pop
shl
ror
inc
pop
push
push
lea
push
lea
push
push
push
push
call
add
add
add
add
in
add
pop
add
push
in
add
lret
mov
add
add
add
pop
int3
jne
mov
lcall
jne
push
push
push
lea
push
lea
push
push
push
push
push
call
push
int3
icebp
xchg
lods
out
ja
repnz
lret
fildl
jge
js
negb
jae
int3
scas
lds
imul
add
shr
jae
pushf
scas
add
mov
add
in
add
sub
pop
call
push
push
push
call
add
pop
into
push
sahf
add
add
add
push
cmpsb
mov
lods
mov
add
add
mov
add
into
lea
pop
add
cli
repnz
pop
push
pop
add
hlt
lcall
add
add
lldt
push
ficompl
ret
and
add
shr
sub
add
pop
rol
dec
sub
sub
pop
push
push
push
push
push
push
lea
push
push
push
call
jmp
xchg
mov
nop
out
add
cmpsl
cmpsl
mov
out
add
push
sahf
test
add
jmp
jmp
fiaddl
add
roll
jo
add
add
add
xchg
add
push
add
movsl
add
rcrb
les
imul
add
lcall
push
sub
pop
push
push
push
push
push
call
insb
xchg
cmp
add
add
mov
jle
add
movsb
add
add
rcrb
xchg
add
lahf
add
fs
mov
arpl
add
add
add
add
repnz
testb
fsubl
add
stos
loope
nop
movsl
jmp
add
add
lcall
rorb
push
push
not
pop
push
mov
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
shlb
mov
add
jne
add
add
mov
add
mov
jl
add
push
test
add
pop
add
push
xor
shr
pop
add
push
lea
push
lea
push
lea
push
call
add
push
xchg
pusha
pop
into
gs
add
add
fiaddl
add
andl
mov
jns
add
jb
fwait
add
popa
data16
xchg
popa
iret
jbe
mov
pop
add
movsb
add
add
add
jne
add
lds
roll
lcall
ret
xchg
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
xchg
xchg
mov
xchg
flds
in
scas
scas
add
add
add
fsubrs
shll
add
push
add
add
xchg
clc
into
add
out
test
mov
rol
add
jbe
add
add
xchg
mov
pop
add
jnp
xchg
fmuls
cld
mov
mov
mov
xor
push
pop
add
push
push
push
push
push
push
push
push
push
push
call
in
add
addb
fmul
movsb
add
pop
movl
mov
add
add
jae
add
push
mov
add
add
add
gs
pop
push
mov
xor
push
not
pop
add
push
lea
push
push
call
stc
push
add
aad
add
add
les
std
add
aam
add
jp
add
mov
outsl
xchg
lahf
add
add
roll
xchg
add
xchg
pop
pop
xchg
in
lock
hlt
sub
pop
pop
push
ror
pop
mov
push
push
push
push
lea
push
push
push
call
scas
js
add
rolb
add
add
add
sti
mov
add
hlt
add
add
jecxz
add
bound
ja
jns
mov
stos
roll
mov
push
add
clc
cwtl
add
leave
mov
add
add
add
std
add
add
pop
sub
pop
xor
push
lea
push
lea
push
lea
push
push
lea
push
call
js
sarb
pop
add
loope
add
add
fcmovb
add
sahf
loope
add
mov
mov
add
add
add
mov
in
add
add
loop
lahf
add
xchg
sub
pop
add
push
inc
not
pop
rep
push
add
not
inc
xor
pop
mov
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
add
test
add
movb
add
add
add
jecxz
add
add
add
popf
out
cwtl
add
add
jge
data16
in
mov
jae
add
pop
mov
jae
add
add
in
in
add
stc
fiadds
fcmovnu
add
rcl
sti
repnz
xchg
xchg
addl
and
lea
push
push
push
push
lea
push
push
call
add
jo
xchg
add
add
fldl
movsb
xchg
add
rcll
scas
cwtl
push
lahf
mov
iret
add
lret
mov
jl
pop
shll
add
aad
in
in
add
push
rol
pop
or
je
push
lea
push
lea
push
call
add
add
add
lcall
add
jns
jne
add
mov
add
mov
cmpsb
insb
mov
aad
add
add
out
fistpll
xchg
pop
add
add
mov
lods
mov
add
add
jo
add
sub
pop
mov
xor
push
shl
not
pop
mov
push
push
push
lea
push
lea
push
push
lea
push
call
add
and
rcl
lods
mov
pop
icebp
add
add
xlat
jp
stc
push
add
mov
pop
add
add
xchg
xchg
add
add
jp
in
out
js
push
shlb
mov
mov
mov
popa
add
sub
pop
xor
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
test
rcrl
add
jge
mov
rcl
in
ret
leave
jmp
mov
cli
push
iret
add
mov
mov
lea
add
mov
fdivr
lcall
les
xor
add
add
pop
add
push
xor
pop
add
push
push
push
lea
push
push
push
push
lea
push
call
pushf
pop
jbe
add
subl
add
clc
jno
add
cld
fsubs
jecxz
fs
pop
push
mov
xor
push
push
push
push
push
call
mov
xchg
lret
test
faddl
scas
je
mov
mov
mov
add
add
js
int
mov
cld
addr16
in
sarb
test
add
add
xchg
movl
outsl
jae
popa
sub
pop
add
push
push
push
push
push
lea
push
push
call
jl
add
add
mov
gs
lea
add
fdivrs
jne
add
add
out
push
cwtl
add
add
andl
push
add
add
movsb
add
popf
jmp
add
mov
add
add
in
fwait
loope
leave
sti
out
fcompl
pop
push
push
lea
push
push
lea
push
push
push
call
xchg
add
add
test
add
arpl
add
loope
add
add
lea
add
add
faddl
add
add
add
notb
add
add
movsb
push
shr
rol
pop
mov
xor
push
push
lea
push
call
add
add
insb
add
jo
lods
incb
add
add
roll
je
add
popf
ficomps
add
push
add
add
fwait
add
add
xchg
movb
lahf
add
cmpsb
add
add
add
scas
pop
insb
jle
add
jl
add
hlt
lcall
leave
je
push
inc
shr
sub
pop
mov
push
not
pop
add
push
lea
push
lea
push
push
push
push
push
push
call
shlb
into
add
add
cld
pop
cmpsl
add
cld
add
push
mov
jbe
jge
add
add
jge
insb
test
sub
pop
add
push
push
call
pop
into
in
cmc
add
lret
stos
arpl
mov
add
add
into
jns
add
push
sarl
add
add
jmp
bound
push
mov
add
out
add
add
add
lcall
movsb
push
sub
pop
pop
push
push
ror
push
or
inc
add
add
rol
xor
sub
pop
not
xor
shl
pop
push
push
push
call
aad
add
mov
mov
xchg
jb
add
popl
lods
add
pop
loope
push
jae
sti
out
add
movb
add
add
in
hlt
pop
pop
push
sub
pop
mov
push
sub
dec
dec
pop
mov
push
xor
sub
pop
mov
jmp
push
inc
inc
pop
push
mov
push
sub
pop
add
push
pop
push
push
ror
inc
shl
pop
push
push
push
rol
sub
inc
pop
push
push
push
call
add
idiv
xchg
insb
repnz
shll
pop
int3
mov
jne
add
fisubrs
sti
lret
add
add
jne
push
outsl
out
pop
jl
pop
add
mov
aad
sbb
add
in
sub
pop
mov
push
ror
sub
pop
pop
push
lea
pop
pop
push
push
push
lea
push
push
lea
push
call
test
add
shrb
add
cwtl
add
mov
add
scas
lds
push
add
flds
lret
add
cld
add
faddl
add
stc
popf
add
sub
pop
pop
push
sub
pop
pop
leave
push
push
push
push
push
push
push
call
add
add
cmpsl
ljmp
jp
lret
jle
mov
xchg
clc
add
addr16
add
lds
add
add
ror
data16
add
add
in
in
ret
push
dec
xor
add
dec
pop
push
push
push
call
cmpsb
aam
into
imul
jle
stos
out
out
test
add
cmpsl
mov
jmp
add
mov
mov
mov
push
shr
pop
add
push
push
lea
push
push
push
push
call
out
xchg
xchg
fwait
call
test
js
jmp
lea
add
add
mov
outsl
jae
jmp
mov
imul
add
cli
je
fistpl
mov
add
int
mov
add
jbe
in
in
pop
push
push
push
push
push
push
push
call
push
add
push
add
fstl
add
addl
into
xlat
nop
add
add
add
push
add
outsl
pop
mov
add
add
add
xchg
mov
add
mov
mov
mov
bound
add
add
mov
add
add
mov
pop
push
push
add
pop
movl
push
lea
push
push
push
push
call
fadds
add
xchg
add
les
imul
jne
add
mov
lahf
jo
add
add
add
add
mov
add
mov
add
add
fiaddl
add
sub
pop
addl
push
push
lea
push
push
push
push
push
push
push
lea
push
call
js
add
in
push
mov
nop
test
jbe
add
add
lret
enter
adcb
fcomps
rolb
add
add
pop
add
sti
sub
pop
test
je
push
lea
push
push
lea
push
push
push
push
push
push
call
add
mov
js
xchg
scas
mov
add
add
mov
jno
out
mov
scas
add
cmpsb
mov
mov
add
mov
add
jae
mov
fsubrs
push
add
mov
int3
filds
jo
cmpsb
add
rolb
add
repnz
pop
mov
pop
push
inc
xor
rol
xor
pop
pop
push
lea
push
push
push
push
call
add
pusha
push
std
add
loopne
add
add
shrb
add
mov
add
add
push
pop
add
pop
mov
lcall
push
push
call
cwtl
add
cmpsb
scas
add
add
add
add
add
andb
mov
add
xchg
add
jecxz
lods
cli
lea
add
sti
loope
in
clc
pop
pop
leave
push
push
push
call
into
add
fst
pusha
pop
lret
stos
fadds
mov
movsl
mov
add
add
add
add
add
lret
fildl
addr16
add
mov
add
push
push
push
push
push
lea
push
push
push
push
call
stc
mov
in
add
mov
lahf
imul
jns
call
add
add
out
scas
loopne
add
xchg
push
cmpsb
pop
jae
fadds
pushf
ret
add
hlt
lret
filds
test
push
sub
pop
push
push
shl
pop
mov
push
lea
push
push
push
lea
push
push
push
call
testl
rolb
in
add
add
lahf
pop
add
add
add
add
add
sub
pop
add
push
inc
pop
push
push
sub
shr
inc
pop
push
push
inc
sub
sub
rol
pop
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
pop
je
jl
add
scas
lahf
add
add
pop
push
xchg
jmp
movsb
add
jp
frstor
push
add
popa
call
call
mov
sarl
push
add
add
lcall
push
lea
push
push
push
push
push
lea
push
call
mov
add
mov
lock
sbbb
pop
mov
out
jl
mov
add
add
add
add
cltd
loope
add
subb
add
pop
add
in
in
testl
push
lea
push
push
call
add
mov
add
push
in
add
add
xchg
mov
add
add
sbbb
add
lret
rcrb
add
jae
add
fldl
add
add
idivl
int
fwait
movsl
xchg
add
mov
add
mov
sub
pop
addl
push
push
push
push
call
jo
add
clc
add
push
xchg
jns
out
bound
jecxz
mov
fsubrl
imul
test
add
jbe
ljmp
add
mov
add
lahf
cmpsb
add
jae
add
scas
pop
cmpsb
into
ja
add
mull
into
pop
sub
pop
push
call
push
lea
push
push
lea
push
push
push
push
call
add
movl
add
loope
cmc
pop
cli
add
add
int3
add
add
in
data16
xchg
add
jbe
add
test
push
add
fcomps
lcall
inc
cld
push
lea
push
push
push
push
push
call
add
pop
push
scas
push
rolb
add
icebp
xchg
jecxz
test
mov
scas
pop
mov
insb
notl
add
lock
add
fildl
add
add
mov
sub
pop
pushl
push
push
push
push
lea
push
push
call
pop
add
add
pusha
out
add
mov
mov
mov
add
rorl
add
add
mov
in
in
pop
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
add
add
mov
push
mov
add
leave
mov
into
cmc
in
xchg
iret
add
mov
add
outsl
sub
pop
call
push
shr
pop
cmpl
jne
push
add
shr
pop
pop
push
shl
add
pop
pop
pop
push
inc
not
pop
pop
push
lea
shr
not
pop
leave
push
rol
sub
pop
ret
push
push
lea
push
lea
push
push
call
add
add
add
rcrb
lods
data16
test
add
xchg
add
pop
add
push
insb
ljmp
add
mov
xchg
loope
jle
add
xchg
icebp
xchg
add
in
in
pop
push
mov
push
add
pop
add
push
push
dec
pop
push
push
dec
pop
push
push
push
not
inc
pop
movl
push
push
push
push
push
push
push
push
push
push
lea
push
call
add
insb
arpl
popf
ljmp
add
js
mov
add
add
cmpsb
mov
add
jne
rcr
add
rolb
pushf
mov
roll
mov
std
call
int3
mov
mov
add
call
int3
add
xorl
lcall
pushf
idiv
call
enter
pop
shrb
nop
push
push
push
call
mov
iret
add
add
in
mov
jl
popl
add
add
addb
add
add
add
mov
jns
mov
mov
ja
push
jp
add
add
add
lods
add
addb
lock
push
sub
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
push
call
add
add
add
push
mov
mov
add
int3
pop
add
jno
add
add
add
lock
add
lret
mov
jbe
push
addl
out
mov
push
add
mov
imul
cli
call
mov
mov
push
lea
push
push
push
push
lea
push
call
mov
add
jmp
add
in
ret
cmpsb
fiadds
aad
testl
imul
pop
sub
pop
subl
push
push
push
push
push
call
add
add
mov
add
add
or
add
add
testl
imul
add
cwtl
fsubl
in
cwtl
jns
repnz
cli
out
mov
add
insb
push
in
rcrl
std
add
cmpl
jne
push
sub
shr
pop
pop
push
add
pop
pop
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
lcall
fs
into
out
pop
add
push
faddl
add
out
add
stos
pop
pop
flds
xchg
add
cltd
push
add
add
add
add
int3
lret
add
mov
xchg
int3
subb
add
xchg
sub
pop
pop
push
not
shr
pop
pop
leave
push
rol
pop
ret
push
push
dec
shr
dec
pop
mov
push
push
push
lea
push
push
push
push
push
lea
push
call
add
pop
addl
add
cmc
stc
ffreep
mov
add
scas
pop
faddl
pop
push
fnstcw
in
idiv
mov
lock
add
addl
loop
pop
sub
pop
add
push
push
ror
xor
shr
pop
push
push
push
push
push
push
lea
push
push
push
call
stos
enter
popa
loopne
outsl
add
add
jle
mov
add
scas
add
faddl
fmuls
add
mov
jge
mov
add
jae
add
push
add
add
xlat
add
fbld
loopne
lcall
push
push
push
push
push
push
push
call
pop
rol
add
add
pop
stos
lods
mov
ror
arpl
lret
add
add
add
add
mov
xchg
jge
cmpsl
mov
add
push
add
loopne
xchg
ljmp
push
add
add
cli
add
add
pop
outsl
add
mov
sub
pop
mov
lea
push
lea
push
push
push
push
lea
push
lea
push
call
add
add
ljmp
add
add
mov
add
stos
pop
pop
cli
add
lock
mov
add
add
clc
jp
out
add
lcall
call
shl
pop
mov
push
push
lea
push
lea
push
push
push
call
mov
add
add
rolb
mov
add
cld
mov
frstor
add
mov
sti
mov
js
add
test
in
sub
pop
shr
add
push
sub
inc
lea
pop
mov
mov
push
ror
shr
rol
pop
add
push
push
push
push
call
ljmp
pop
test
add
mov
xchg
je
lds
add
jmp
out
ljmp
imul
mov
test
add
add
addl
jb
in
lock
add
push
lea
push
push
lea
push
push
lea
push
lea
push
push
push
call
pop
pop
jo
add
push
add
mov
add
mov
add
add
lea
add
mov
test
mov
movsl
pop
jmp
add
push
out
add
les
jle
scas
and
fdivr
lcall
inc
add
add
out
pop
mov
push
lea
shl
inc
pop
cmp
jne
cmp
jne
push
push
lea
push
push
push
push
push
push
call
test
add
add
add
xchg
aam
sahf
add
pop
lret
pop
add
push
loop
gs
iret
nop
add
sahf
fld
add
cmpsl
insb
xlat
mov
sahf
scas
adc
fs
add
add
cli
add
add
push
out
mov
cmpsl
add
xchg
add
sub
pop
mov
push
push
push
push
push
call
add
add
les
lods
js
mov
add
add
add
add
popf
mov
xchg
mov
push
popl
add
fildl
loope
jle
xchg
call
add
call
in
in
pop
movl
push
add
pop
jmp
mov
push
not
lea
pop
mov
push
push
push
lea
push
push
push
push
lea
push
push
push
call
movl
add
add
stc
pop
cmc
mov
add
into
shrl
mov
arpl
mov
arpl
mov
add
add
out
add
imul
xchg
add
movsb
imul
add
test
xchg
jbe
hlt
xchg
xchg
cmpsb
sub
pop
sub
jne
mov
push
push
push
call
add
std
scas
pop
testl
test
add
stc
mov
add
lcall
add
xchg
orl
add
add
add
cli
pop
lds
add
add
fstpt
add
test
mov
call
hlt
lcall
add
add
push
lea
push
call
add
add
add
jae
add
xchg
nop
movsb
add
out
fistps
test
add
add
sar
in
fs
add
add
arpl
sub
pop
jmp
push
add
xor
shr
shl
pop
mov
mov
push
sub
pop
cmp
jne
push
shr
xor
pop
mov
movl
push
rol
sub
pop
jmp
mov
push
add
pop
cmpw
jne
push
lea
shr
pop
mov
push
push
push
push
push
push
call
lds
mov
add
push
neg
xlat
add
mov
add
les
lahf
cli
add
xchg
je
out
pop
add
pop
jno
int
loope
cmpsb
add
add
push
add
add
mov
add
imul
add
add
add
lcall
add
rol
dec
xor
pop
jmp
pushl
push
shr
inc
pop
pop
push
not
shl
sub
inc
pop
mov
mov
push
push
push
lea
push
push
push
push
push
push
lea
push
call
lahf
push
rol
add
lock
jmp
lcall
sahf
int
add
add
ror
scas
add
or
les
mov
add
bound
add
mov
add
add
ljmp
out
jl
xchg
hlt
enter
add
test
push
or
mov
rorl
xchg
mov
in
mov
enter
push
rolb
add
hlt
lea
lea
sub
rol
inc
sub
sub
pop
pop
push
push
push
push
call
add
int
mov
add
add
mov
jmp
add
out
sar
mov
gs
mov
add
roll
lock
add
mov
lock
lcall
call
push
ror
shl
pop
cmpl
je
push
push
rol
xor
push
and
add
ror
inc
dec
sub
shr
pop
shl
add
pop
push
push
push
push
push
call
add
mov
out
jne
in
add
adcl
icebp
in
add
add
lahf
pop
add
movsb
add
out
mov
clc
add
out
add
add
add
filds
jp
mov
test
insb
add
je
in
in
lcall
push
xor
shr
pop
call
push
lea
push
lea
push
push
lea
push
lea
push
push
push
call
pop
add
add
mov
add
add
add
rcrb
cld
test
mov
jno
add
cli
add
cli
mov
add
add
in
sarb
stos
add
add
add
pop
mov
stos
xchg
push
in
mov
add
add
arpl
pushf
sub
pop
cmpl
je
push
push
lea
lea
push
push
pop
add
lea
sub
not
sub
add
shr
pop
sub
shl
pop
push
not
dec
pop
push
call
push
push
push
push
push
push
lea
push
push
push
push
call
data16
fldcw
mov
push
add
add
xchg
loop
out
fstpl
add
add
enter
iret
push
scas
add
add
testl
les
fbstp
aam
insb
jl
mov
testl
sub
pop
cmpl
je
push
push
xor
push
push
pop
add
dec
dec
sub
shl
rol
lea
pop
ror
inc
ror
pop
push
push
push
call
pop
mov
outsl
fadds
add
rclb
loopnew
test
cmpsb
add
hlt
cwtl
add
add
add
mov
lock
xlat
js
stos
aad
add
outsl
pop
add
cwtl
test
out
add
pop
add
les
rolb
push
add
sub
pop
push
call
push
lea
push
lea
push
push
push
lea
push
lea
push
call
add
add
popa
lods
ror
jo
xchg
add
scas
add
leave
cld
repnz
data16
mov
add
add
add
xchg
imul
add
add
cwtl
int
bound
imulb
push
stc
mov
incb
add
mov
mov
add
mov
add
mov
sub
pop
cmpl
je
push
push
add
push
push
pop
add
add
shr
dec
sub
add
ror
xor
pop
not
sub
lea
pop
push
lea
push
call
jb
add
add
add
add
leave
push
pop
rcr
mov
mov
fnstcw
add
add
push
mov
js
in
mov
add
mov
popf
add
push
push
push
push
push
push
push
lea
push
push
call
mov
mov
iret
xchg
sti
jno
push
add
xchg
add
add
add
add
lahf
add
add
movsb
into
int3
loope
bound
add
fwait
mov
xchg
add
pop
add
movl
jmp
stos
lods
std
add
arpl
jb
jnp
mov
fdivr
lcall
lcall
push
call
lock
fucomp
add
aad
add
outsl
jbe
fiadds
out
add
out
lods
js
lahf
jle
mov
add
rolb
push
cltd
sahf
int
mov
stc
mov
lcall
cmp
rol
je
push
push
shr
add
push
xor
add
add
sub
sub
not
xor
xor
pop
sub
pop
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
lods
gs
add
add
mov
fildl
add
push
add
add
rolb
mov
cwtl
add
bnd
leave
pusha
cmpl
fdivl
add
sub
pop
push
call
push
pop
cmpl
je
push
push
xor
rol
push
or
not
add
xor
sub
ror
inc
pop
xor
not
add
pop
push
push
push
call
add
mov
add
add
xchg
insb
pop
pop
stos
add
add
add
lea
pop
popa
fildl
mov
jbe
add
add
lcall
push
push
push
push
call
mov
xchg
add
add
add
pop
add
push
jmp
cmpsb
aam
jbe
add
add
outsl
sub
pop
call
push
lea
push
push
push
push
lea
push
push
call
add
pop
pop
xchg
mov
add
imul
xchg
roll
add
add
jmp
loope
add
add
pop
xchg
addl
xchg
lods
add
lods
enter
jb
add
lock
add
add
add
sub
pop
cmpl
je
push
push
push
xor
add
shr
sub
sub
inc
dec
inc
pop
pop
push
pop
push
call
push
sub
lea
pop
cmpl
je
push
push
add
lea
push
or
not
add
ror
shr
inc
sub
pop
sub
pop
push
push
push
lea
push
call
mov
popf
insb
lea
int
fsubs
lahf
add
into
add
faddl
mov
arpl
in
scas
add
jge
add
add
mov
push
push
xor
pop
call
push
add
lea
pop
cmpl
je
push
push
add
shl
shr
push
xor
add
sub
sub
sub
pop
inc
pop
push
push
push
push
push
lea
push
push
push
push
push
call
movsb
add
jle
cmc
iret
fiaddl
mov
roll
iret
rolb
add
push
enter
scas
mov
add
mov
pop
xlat
mov
add
cld
pop
fstpl
add
pop
pop
add
fdivr
lcall
call
push
add
pop
cmpl
je
push
push
add
sub
sub
shl
push
or
not
add
inc
not
xor
xor
sub
xor
add
pop
sub
not
rol
pop
push
pop
push
push
push
lea
push
push
push
push
lea
push
push
call
add
add
add
int3
add
mov
mov
add
scas
add
push
pop
pop
lcall
jp
add
lcall
jp
add
cmpl
je
push
push
add
sub
push
or
inc
add
rol
shl
dec
ror
sub
shr
pop
inc
pop
push
push
push
lea
push
push
lea
push
push
push
lea
push
lea
push
call
add
cli
mov
add
add
push
fisubrl
add
movsl
push
repnz
xchg
add
add
rorl
fcmovne
mov
xchg
add
call
push
xor
ror
rol
add
pop
cmpl
je
push
push
dec
sub
push
and
add
add
add
xor
dec
sub
shl
pop
ror
sub
pop
push
sub
pop
push
call
push
lea
add
ror
xor
pop
cmpl
jne
push
push
push
lea
push
lea
push
call
jnp
add
add
out
add
data16
xchg
jbe
add
jbe
out
addb
jb
add
mov
loopne
add
mov
add
push
test
out
jbe
int3
in
aam
add
jo
ret
lods
popf
mov
in
lcall
inc
adc
sbb
fwait
loopne
xor
push
call
stos
lcall
push
jno
pop
add
mov
add
add
mov
add
jo
jp
scas
cmc
push
add
add
aad
scas
repnz
roll
add
pop
fiadds
scas
pop
add
add
lcall
add
add
add
int
rcrl
data16
add
push
lea
push
push
push
lea
push
call
push
add
mov
push
add
popf
lcall
jle
cltd
add
movsl
add
mov
add
xchg
mov
mov
outsl
pop
add
nop
pop
mov
ja
testb
mov
add
in
xor
pop
push
inc
pop
pop
push
push
push
push
push
push
call
mov
add
lea
roll
lret
push
add
mov
stos
add
enter
lret
add
nop
lock
add
jge
jo
mov
add
push
push
push
push
push
call
mov
out
mov
out
fwait
add
add
jecxz
lds
mov
cli
mov
add
jmp
pop
push
inc
sub
add
pop
leave
push
push
push
lea
push
push
push
push
push
push
call
add
add
add
add
loope
xchg
ret
fsub
mov
mov
pop
adc
add
add
mov
mov
subb
add
adcl
mov
movsl
scas
pop
mov
fcompl
or
push
lea
ror
add
pop
push
push
push
push
push
call
add
scas
nop
int
stos
pushf
mov
add
add
mov
jmp
sti
int3
xchg
imul
ja
shlb
xchg
ljmp
mov
add
js
add
rorl
add
mov
mov
sub
pop
mov
push
lea
shl
pop
add
cmpl
jne
push
push
add
sub
push
or
inc
add
add
shl
sub
not
xor
pop
ror
add
inc
pop
push
lea
push
push
push
push
push
push
push
push
call
in
pop
addl
lret
sti
fstpt
push
push
add
add
jo
add
mov
add
cmc
push
push
out
test
pushl
call
push
shl
sub
add
sub
pop
push
push
lea
pop
call
jmp
push
xor
dec
rol
pop
cmpl
je
cmpl
jne
push
lea
push
push
call
add
sahf
push
add
lea
add
faddl
mov
xchg
add
enter
add
sub
pop
leave
push
xor
add
pop
add
push
pop
pop
push
push
push
lea
push
lea
push
push
call
add
xchg
add
add
stc
movsl
add
add
outsl
mov
clc
sti
scas
add
add
add
mov
in
add
fxch
pop
add
in
call
pop
push
push
lea
push
push
lea
push
push
call
add
add
movsl
mov
lcall
jecxz
add
add
hlt
add
add
incb
mov
pop
push
add
add
pop
pop
leave
push
lea
push
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
push
call
mov
add
scas
sarl
mov
add
je
aad
shlb
test
repnz
in
in
fcomps
les
push
shl
pop
jmp
push
push
push
call
data16
add
in
cmpsb
add
add
add
lret
fisttpl
mov
lret
add
jge
add
test
jno
leave
xlat
push
rol
inc
push
and
add
sub
add
ror
sub
dec
lea
lea
pop
pop
push
dec
dec
shl
pop
pushl
call
push
dec
add
pop
push
push
lea
push
push
call
xorb
loop
add
cld
add
je
stos
mov
add
stos
jne
add
mov
nop
ret
add
push
fcom
sub
pop
call
push
lea
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
jne
loope
push
xchg
add
add
add
cwtl
orl
out
xchg
add
stos
add
add
add
xchg
test
jno
add
add
mov
add
pop
push
roll
iret
add
jecxz
sub
pop
jmp
cmpl
jne
push
dec
dec
sub
ror
pop
mov
push
not
pop
mov
push
push
push
push
push
push
push
push
call
je
pop
push
add
mov
add
add
loope
hlt
cmc
mov
mov
add
movsl
add
fstpt
add
sub
pop
jmp
push
shl
shl
rol
pop
push
push
push
dec
add
not
push
or
not
add
rol
lea
add
sub
sub
xor
add
xor
pop
sub
shl
lea
pop
push
pop
pushl
call
push
lea
push
push
push
push
push
call
add
loopne
add
adcb
jne
xchg
test
add
add
add
add
ljmp
xlat
add
add
test
call
jp
int
push
inc
push
or
inc
add
xor
ror
sub
add
pop
add
lea
lea
ror
pop
push
push
push
lea
push
push
push
call
cld
lock
clc
add
add
add
stc
add
add
add
mov
add
into
add
add
pop
jno
add
sbbb
xchg
add
add
faddl
outsl
test
jle
cltd
jno
add
addl
stos
add
xchg
mov
call
push
shr
pop
call
push
sub
xor
pop
call
push
push
inc
dec
push
xor
add
sub
xor
sub
xor
add
pop
xor
pop
push
xor
rol
pop
pushl
push
lea
pop
call
call
push
push
xor
shr
push
and
add
not
sub
shr
sub
rol
pop
lea
inc
shl
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
call
fdivp
shl
add
pop
add
jne
addb
aam
imul
ret
mov
jmp
add
fldl
int
ljmp
mov
lret
add
mov
xchg
stc
fcomi
imul
mov
add
xchg
movsl
sub
pop
pushl
push
pop
call
push
dec
pop
call
push
push
dec
push
sub
add
shr
shl
not
sub
add
sub
rol
pop
ror
pop
push
push
push
push
lea
push
push
push
push
push
push
call
add
pop
add
xchg
xchg
repnz
push
mov
rclb
mov
test
add
jo
mov
xlat
jo
add
mov
push
xor
add
fiaddl
stos
pushf
add
jb
movsl
lret
jne
mov
add
lcall
jne
call
push
push
lea
push
call
xchg
add
add
add
fldl
popa
mov
add
mov
jne
mov
add
incb
add
sub
pop
call
push
push
sub
ror
lea
sub
push
sub
add
inc
inc
sub
ror
add
pop
not
pop
push
lea
push
call
stos
add
push
lods
lcall
int
add
out
add
cwtl
add
add
add
add
lock
rolb
add
hlt
jl
add
ljmp
fstpl
add
aam
add
mov
sub
pop
pushl
call
push
lea
push
lea
push
push
push
push
call
cwtl
add
add
mov
add
push
xlat
add
scas
mov
push
rolb
enter
add
imul
push
add
mov
leave
cwtl
add
fsubrl
add
rcll
add
cmc
add
sub
pop
call
push
push
ror
sub
push
push
pop
add
not
xor
sub
inc
pop
add
sub
rol
pop
push
add
add
add
inc
pop
pushl
call
push
lea
push
push
push
lea
push
push
lea
push
push
call
hlt
fisttps
mov
xchg
add
jl
add
mov
jl
add
add
insb
pushf
add
push
addl
enter
mov
addr16
sti
add
pop
rcrl
add
lcall
shrb
mov
cmp
loopne
xor
push
xor
add
add
sub
shr
sub
inc
sub
pop
add
pop
push
push
call
aam
out
imul
add
int3
insb
push
into
gs
add
int3
add
test
stc
imul
add
shlb
push
popf
add
push
mov
mov
add
loopne
xchg
mov
lea
cmc
add
repnz
movsl
add
xchg
in
clc
lcall
jne
push
rol
rol
sub
pop
call
push
lea
push
push
push
push
call
ret
add
add
push
add
int
out
cwtl
add
add
add
add
add
jle
add
mov
mov
sub
pop
call
push
push
not
sub
push
xor
add
add
rol
sub
shl
pop
sub
not
pop
push
lea
push
push
push
call
pop
fdivr
add
enter
add
add
mov
mov
insb
mov
add
add
jmp
add
push
add
out
je
leave
jns
imul
movsb
iret
add
add
jnp
sub
pop
pushl
push
lea
push
lea
push
push
push
push
push
push
push
call
xchg
add
add
pop
xchg
jno
stos
add
push
push
add
lret
loopne
push
outsl
jl
enter
test
add
xchg
push
add
add
sarl
imul
add
test
jae
add
push
neg
test
stc
outsl
cli
add
test
test
cwtl
into
scas
jnp
cld
jnp
in
fcompl
icebp
and
add
shll
pop
call
push
push
push
xor
add
add
sub
ror
sub
ror
pop
add
sub
sub
pop
push
push
lea
push
push
push
push
push
push
lea
push
push
call
xchg
leave
add
lahf
add
mov
pop
addr16
fnstenv
add
mov
add
test
add
mov
imulb
mov
repnz
push
add
add
fiadds
pop
scas
add
pushl
push
lea
push
lea
push
call
add
cwtl
popf
mov
add
xchg
add
lods
movsl
add
fdivrs
add
add
test
lea
mov
lods
mov
xchg
add
add
testb
add
sub
pop
call
lea
push
push
push
push
push
push
push
push
push
push
call
out
pop
loop
add
sahf
movsb
add
add
mov
mov
mov
add
push
aam
add
mov
sub
pop
push
push
push
push
push
push
push
call
mov
add
js
mov
push
add
add
jnp
lret
add
fiadds
add
add
cmpsl
mov
popl
lea
in
sub
pop
call
push
push
sub
rol
inc
add
push
and
add
ror
sub
add
lea
sub
ror
pop
not
lea
inc
pop
push
lea
push
push
push
call
ffree
add
stos
mov
testb
add
jno
cld
jns
add
int3
sti
push
add
push
xchg
cld
add
call
add
mov
mov
pop
imul
fucomp
add
leave
lahf
out
call
outsl
push
mov
add
in
lret
ljmp
pop
pushl
push
push
lea
push
push
push
push
push
call
mov
add
fmull
add
push
mov
out
add
xchg
add
mov
add
cwtl
add
test
arpl
test
cmpsb
lods
pop
add
add
add
mov
lret
add
repnz
mov
add
in
lcall
pop
and
add
leave
hlt
rol
pop
call
push
push
dec
shl
push
or
not
add
lea
add
dec
sub
add
not
not
shl
pop
lea
pop
push
push
push
push
push
push
push
push
push
call
rcl
loope
stos
add
add
lcall
pop
add
jo
test
mov
pop
add
jo
in
mov
add
add
movsb
loope
jmp
out
lret
add
add
in
fdivr
lcall
jne
push
lea
push
call
push
add
je
add
flds
add
add
js
jecxz
pop
mov
lds
jae
outsl
call
test
in
add
add
call
lds
adc
add
call
push
push
shl
shl
inc
push
xor
add
sub
lea
shl
dec
sub
not
pop
inc
pop
push
push
call
add
add
jge
add
mov
add
add
test
add
xchg
test
out
add
add
add
jae
sahf
mov
loopne
sub
pop
pushl
push
lea
push
lea
push
call
cwtl
push
add
mov
push
add
test
push
jecxz
add
add
add
rol
andl
in
hlt
pop
call
call
push
pop
lea
push
push
rol
dec
push
push
pop
add
rol
sub
sub
shl
pop
rol
pop
push
shr
pop
pushl
call
push
push
lea
push
lea
push
push
call
add
fcmovnbe
add
add
mov
add
adcl
into
movsb
add
in
imul
pop
add
xchg
insb
add
pop
pusha
add
add
cli
xchg
cmc
lahf
xchg
mov
mov
stos
add
push
sub
pop
push
push
inc
shr
pop
call
push
push
shl
rol
not
push
or
inc
add
shr
sub
ror
sub
xor
sub
inc
pop
rol
shl
pop
push
add
ror
pop
pushl
call
push
push
lea
push
push
push
call
mov
arpl
add
add
popa
add
add
add
mov
outsl
mov
add
pop
scas
bound
add
test
cmpsl
mov
mov
add
in
in
pop
call
push
add
rol
shr
pop
mov
push
push
xor
sub
rol
push
and
add
ror
sub
add
sub
add
ror
pop
dec
inc
pop
push
push
lea
push
lea
push
push
push
lea
push
lea
push
lea
push
call
je
add
add
mov
add
add
pop
jle
in
add
add
lcall
add
add
add
add
fs
add
jne
call
push
sub
rol
inc
pop
push
pushl
push
push
lea
push
push
push
lea
push
push
call
add
add
mov
add
add
cld
add
add
add
add
pop
jns
stos
rcll
xchg
xchg
cmpsl
add
add
add
loop
int
in
sub
pop
call
push
push
shr
shr
push
sub
add
inc
rol
sub
lea
pop
inc
pop
push
xor
add
pop
pushl
push
push
call
add
mov
add
in
subb
push
lcall
repnz
loope
add
int
sub
pop
call
push
push
lea
push
xor
add
shr
xor
shl
sub
lea
shr
lea
pop
sub
shl
rol
pop
push
push
ror
push
or
not
add
inc
add
sub
sub
pop
not
pop
push
push
call
add
add
xchg
add
xchg
test
push
add
jbe
add
push
add
roll
add
cmpsl
stos
insb
addl
clc
mov
add
add
add
xchg
insb
add
add
lea
out
add
pop
call
push
push
sub
rol
push
xor
add
ror
sub
dec
pop
add
sub
pop
push
push
lea
push
push
push
push
push
lea
push
push
call
loopne
jns
add
std
in
into
outsl
je
scas
mov
lcall
mov
add
int
rolb
jae
jle
add
test
sub
pop
pushl
call
push
push
push
push
lea
push
push
push
push
call
add
mov
add
add
loopne
add
add
add
movsl
mov
jnp
add
add
mov
jbe
add
mov
lcall
pop
mov
push
push
lea
push
push
push
push
push
push
push
push
call
int3
xchg
add
add
add
xchg
out
add
add
jae
mov
push
add
add
in
add
int3
mov
roll
add
in
fcomps
pushf
and
call
fdivp
roll
roll
fcompl
test
call
ret
lea
pop
push
push
lea
pop
push
push
push
push
lea
push
push
push
lea
push
push
call
nop
add
mov
add
int
add
mov
add
xchg
push
mov
in
call
add
add
mov
add
mov
mov
add
rcl
add
mov
out
mov
mov
imul
lock
test
pusha
add
loopne
push
push
push
push
lea
push
lea
push
push
call
add
add
add
add
roll
add
movsb
add
add
lea
jecxz
popl
testl
add
js
push
in
in
lcall
add
rorl
pop
push
push
rol
add
xor
dec
pop
push
push
rol
ror
ror
pop
push
push
ror
xor
pop
pushl
push
dec
lea
sub
pop
push
call
push
push
shr
sub
push
or
inc
add
not
add
sub
pop
inc
xor
pop
push
ror
lea
pop
pushl
call
push
ror
pop
call
push
push
push
push
push
push
call
not
addr16
add
mov
ljmp
iret
loopne
jno
loop
lea
testb
add
imul
movsl
add
jae
in
call
mov
push
pop
pop
push
lea
push
lea
push
push
lea
push
lea
push
call
add
add
push
cld
pop
pop
add
push
add
add
lea
push
push
push
xchg
lret
pusha
ficoms
add
rol
add
lods
add
fiadds
iret
roll
lea
ffreep
add
add
add
add
pusha
sar
add
add
xchg
sub
pop
dec
jne
push
dec
not
sub
pop
call
push
push
push
or
inc
add
not
dec
sub
sub
sub
sub
dec
pop
add
shr
pop
push
ror
pop
pushl
push
lea
push
push
push
push
call
mov
test
lods
add
roll
mov
add
cmpsb
add
jae
lret
stos
in
add
xchg
roll
int3
add
in
pop
call
push
push
add
shr
pop
call
mov
push
rol
pop
lea
push
push
lea
shl
xor
push
or
not
add
not
sub
pop
not
dec
shl
pop
push
sub
pop
pushl
push
add
add
pop
call
push
pop
push
push
shl
pop
call
push
push
shr
push
or
not
add
add
dec
sub
sub
inc
lea
xor
pop
add
sub
pop
push
push
push
call
xchg
cltd
add
lret
stc
js
xchg
add
xchg
add
add
add
ja
add
add
add
mov
add
jnp
test
jmp
pop
mov
add
add
hlt
hlt
add
add
popf
add
mov
mov
mov
pushl
call
push
lea
push
push
push
push
push
push
push
lea
push
call
aad
push
shr
in
jb
sarl
pushf
add
filds
arpl
jmp
scas
add
add
add
fisttpll
add
add
add
mov
add
sub
pop
call
push
lea
pop
mov
lea
push
push
shr
inc
push
or
not
add
sub
lea
sub
xor
pop
ror
pop
push
push
push
lea
push
push
push
push
push
call
add
add
add
insb
add
pop
out
int
scas
pop
data16
push
lret
fs
roll
add
ja
jne
pop
pop
int
pop
add
loopne
lcall
jne
push
lea
push
call
add
rolb
mov
xchg
add
add
mov
iret
add
add
add
fiadds
add
add
add
scas
add
mov
add
add
add
xchg
add
fnsave
add
shlb
stc
out
cli
push
cwtl
out
add
add
push
sub
pop
call
push
lea
push
push
push
lea
push
call
lock
loop
in
out
jns
xchg
add
fs
mov
add
out
add
add
add
add
push
add
add
fdivs
add
cwtl
in
add
in
gs
push
movb
mov
add
push
push
push
lea
push
push
lea
push
push
push
push
call
mov
jl
rcrl
mov
add
add
pusha
xlat
add
add
nop
shll
pop
lcall
jbe
fcom
mov
cmpsl
imul
out
push
xchg
fadds
sub
pop
push
push
push
push
lea
push
push
push
push
push
push
push
call
add
add
pop
push
fisubrs
push
loopne
xchg
add
lret
add
pushf
add
rolb
ficompl
mov
pop
push
add
add
mov
pop
call
sub
pop
pushl
push
push
rol
add
sub
xor
push
or
not
add
rol
not
add
sub
shr
ror
dec
shr
pop
ror
pop
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
jle
imul
imul
testl
ja
pop
add
stc
pop
sti
add
movsb
mov
pop
add
rolb
push
out
add
add
add
lcall
call
push
push
xor
xor
lea
push
push
pop
add
sub
sub
pop
ror
pop
push
rol
rol
add
pop
pushl
call
push
push
push
lea
push
push
lea
push
call
mov
mov
roll
add
mov
std
add
bound
add
data16
add
mov
jge
push
add
push
add
nop
into
cli
add
push
add
xchg
add
add
cli
xchg
add
iret
jge
add
sub
pop
push
push
not
add
sub
pop
call
push
push
push
push
pop
add
xor
sub
xor
pop
xor
not
pop
push
push
push
push
push
lea
push
push
lea
push
call
add
add
xchg
add
fcompl
int
imul
lret
fildll
into
out
negl
mov
pushf
add
jae
xchg
add
mov
lock
pushf
add
in
loopne
lcall
jne
call
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
stos
data16
add
arpl
icebp
add
std
bound
lea
add
popa
mov
imul
add
lcall
mov
mov
mov
add
frstor
mov
add
fst
jae
cwtl
nop
add
sub
pop
call
push
sub
dec
rol
pop
jmp
push
lea
push
push
call
sar
jmp
mov
mov
mov
add
je
rolb
clc
xchg
cli
add
fsubrl
xchg
jmp
mov
in
pop
movsl
cli
mov
add
xchg
cmpsl
add
filds
add
add
in
hlt
pop
pushl
push
add
shr
sub
sub
pop
mov
jmp
push
push
add
push
sub
add
sub
sub
ror
sub
xor
pop
dec
pop
push
not
pop
pushl
call
push
shr
sub
dec
pop
push
push
add
pop
call
push
push
dec
sub
push
or
not
add
add
rol
sub
sub
pop
lea
pop
push
pop
pushl
call
push
add
shr
sub
pop
push
call
push
push
call
pop
add
add
mov
mov
sahf
xchg
add
add
mov
add
add
add
add
add
faddl
lcall
push
sub
xor
pop
add
push
add
pop
pop
push
lea
push
push
call
add
xchg
add
movsl
add
outsl
add
data16
push
add
add
stos
mov
add
add
outsl
jbe
push
sahf
in
add
jbe
mov
mov
push
stos
push
lahf
int
lcall
pop
pop
push
shl
add
pop
pop
push
push
push
call
mov
add
out
mov
jp
add
rcrl
pop
cmpsb
fs
insb
mov
popl
stos
call
add
add
add
fisubrs
stos
mov
sub
pop
pop
push
not
pop
leave
push
push
push
push
push
push
push
push
push
push
call
xchg
add
lret
add
mov
jno
imul
add
arpl
aam
test
testb
mov
add
in
mov
add
mov
out
push
sub
pop
add
push
push
push
push
push
push
push
push
lea
push
push
call
mov
out
fildl
add
add
pop
pop
xchg
leave
bound
out
add
push
add
mov
add
push
cmpsl
add
icebp
jns
cltd
add
xchg
out
fwait
rclb
mov
add
add
jle
add
stc
fcoms
add
add
add
add
add
leave
push
push
lea
push
call
pop
add
pop
add
mov
add
add
popa
xchg
loope
mov
faddl
nop
popf
jle
add
loopne
add
fiadds
idivl
lea
call
pushf
add
insb
add
in
add
add
mov
insb
add
mov
aam
clc
out
add
pop
ret
push
lea
push
push
lea
push
lea
push
push
push
push
call
pop
stc
sbbl
arpl
in
aam
cld
add
add
push
push
add
nop
add
out
mov
add
mov
push
add
fs
mov
call
sub
pop
push
mov
push
push
push
lea
push
push
push
push
push
push
push
call
add
fwait
add
mov
add
fildll
pop
les
add
add
lods
aad
add
fadd
lret
jae
movw
int3
add
add
add
mov
aam
jnp
outsl
xchg
add
into
push
add
cmpl
jne
push
lea
push
call
add
jbe
fildl
add
xorl
loop
add
push
mov
test
add
fstp
add
push
pusha
mov
push
scas
addl
mov
push
sub
lea
pop
jmp
mov
push
lea
inc
add
pop
and
xor
push
ror
sub
xor
ror
pop
xor
push
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
add
scas
out
add
into
pusha
clc
add
add
addr16
push
add
add
add
ja
add
roll
add
out
out
pusha
add
rolb
rolb
push
call
out
add
jnp
fs
insb
add
xchg
add
push
addl
push
push
outsl
jae
mov
add
jmp
out
add
pop
add
add
mov
mov
add
stc
lcall
clc
pop
xor
push
lea
push
push
call
lret
add
push
xlat
xchg
je
add
fistps
ficomps
cltd
add
iret
fld1
add
pop
add
add
lcall
push
sub
pop
sub
jmp
push
sub
pop
sub
push
add
add
shr
rol
pop
pushl
push
add
shl
dec
sub
pop
pop
sub
push
not
pop
cmp
jne
push
push
lea
push
push
push
push
push
push
lea
push
call
add
add
lret
xchg
add
add
add
add
mov
scas
in
add
cwtl
loope
add
add
lcall
enter
lea
push
lea
push
push
push
push
push
push
push
call
mov
add
pop
add
add
aam
add
add
pop
fwait
loopne
stc
lods
mov
cmpsl
add
imul
in
add
out
add
fildl
popl
xlat
jns
add
popa
div
lock
add
sub
pop
sub
push
push
push
push
push
lea
push
lea
push
push
push
push
call
add
add
loope
mov
add
pop
add
mov
add
cltd
hlt
roll
movsl
mov
add
add
notb
push
sub
pop
mov
shr
push
push
call
add
cmc
add
add
jmp
std
add
mov
push
rclb
add
add
out
add
lock
lock
lcall
enter
push
push
push
lea
push
push
lea
push
push
call
call
pop
flds
add
add
mov
mov
add
pop
mov
push
lds
insb
jecxz
mov
add
test
add
out
cmpsl
imul
fs
nop
movb
mov
movl
sti
add
lods
mov
incb
imul
test
mov
mov
add
leave
fs
add
sub
pushl
push
add
lea
pop
pop
push
shr
pop
shr
push
lea
push
lea
push
call
pop
add
ja
add
mov
bound
loopne
pop
mov
into
fstpt
jne
nop
arpl
in
add
mov
loop
add
add
mov
mov
lahf
data16
pop
fistpll
cwtl
testb
rcr
test
loop
lahf
xchg
jnp
sub
pop
and
push
pop
sub
push
push
push
lea
push
push
push
call
push
add
add
add
test
add
add
cwtl
cli
repnz
push
xchg
add
mov
add
roll
add
add
loop
push
loop
add
add
add
lods
std
movsb
mov
faddl
frstpm(287
add
stos
xchg
add
add
jbe
add
push
add
sub
pop
cmp
jne
leave
push
push
call
ljmp
jo
add
push
push
add
addb
out
add
not
add
add
filds
stos
add
out
mov
add
ja
cltd
add
jle
in
push
aam
xchg
jbe
jnp
pop
out
push
add
mov
mov
jns
into
pop
pop
lahf
scas
fs
add
sub
pop
ret
push
push
pop
mov
push
pop
add
push
pop
push
push
push
ror
pop
push
push
push
push
push
lea
push
push
call
add
jnp
add
frstor
add
mov
shrb
sti
leave
cltd
jo
fadd
add
jp
add
fistpll
add
add
fsubrp
mov
push
fildll
add
add
stos
std
aam
add
add
add
add
add
lret
add
movsl
lret
mov
lcall
push
push
push
call
mov
add
cmpsl
add
add
sahf
int3
xlat
movsb
add
cmpl
add
xchg
icebp
add
push
faddl
jbe
andb
add
mov
ljmp
add
add
mov
aam
stos
add
add
je
jnp
fucom
mov
lcall
mov
push
sub
pop
lea
sub
push
push
push
push
lea
push
push
call
add
mov
stos
imul
mov
add
add
fld1
add
rolb
movsb
in
add
mov
repnz
stos
add
add
add
mov
add
out
add
in
call
not
not
pop
shr
add
push
push
push
lea
push
lea
push
push
push
call
ja
outsl
mov
xchg
scas
test
in
add
add
shrb
pop
mov
add
add
add
add
mov
sub
pop
mov
push
push
push
lea
push
push
push
lea
push
call
testl
pop
add
add
add
shr
cli
mov
add
add
mov
mov
shl
add
cmpsb
lea
mov
js
fiaddl
cmpsl
fidivs
sub
pop
add
push
not
ror
ror
dec
pop
mov
add
push
add
not
pop
xor
mov
push
lea
push
push
lea
push
push
push
push
push
call
popa
mov
rcll
jmp
movsl
add
repnz
loopne
nop
stos
add
add
add
add
roll
push
add
js
jmp
pop
and
push
push
push
lea
push
lea
push
push
push
push
push
call
push
mov
mov
mov
add
add
lea
movsb
push
ljmp
add
mov
xchg
aad
add
sar
cmc
jne
std
add
fldl
push
aam
add
insb
les
sub
pop
rol
rol
push
push
call
add
pusha
push
add
add
add
fwait
pop
lahf
pushf
fwait
mov
mov
add
add
mov
out
pop
pop
add
add
in
clc
lcall
add
push
push
lea
push
call
mov
add
push
outsl
cld
lcall
add
pop
out
int
add
add
push
shlb
mov
lods
add
add
mov
add
lock
loop
pop
insb
sub
pop
cmpb
jne
push
push
push
lea
push
push
push
push
call
icebp
enter
icebp
cld
add
ficompl
mov
add
fildl
mov
fsubrl
cli
loopne
mov
mov
pop
jecxz
add
into
add
sub
pop
add
push
inc
not
pop
cmp
je
add
push
xor
shr
sub
pop
cmpl
jne
push
push
push
lea
push
push
call
add
mov
add
add
iret
jae
add
add
add
js
rolb
xchg
hlt
rolb
add
add
lcall
cld
lret
add
add
add
test
jae
insb
fadds
add
jle
add
add
add
add
add
mov
movb
sub
pop
xor
push
lea
push
push
push
push
push
call
fsub
xchg
cwtl
add
rol
int
into
mov
add
scas
jbe
test
add
add
int
push
jo
out
test
mov
in
add
fucomi
xchg
add
test
pop
movsl
add
add
sub
pop
pop
push
dec
dec
pop
pop
push
shl
add
ror
dec
pop
pop
pop
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
lcall
add
add
rolb
stos
addb
add
lahf
cwtl
jle
xchg
mov
add
add
add
add
jbe
pop
movl
xchg
testb
iret
stc
add
push
in
add
add
push
push
push
push
lea
push
push
lea
push
push
push
call
pop
add
pop
add
jecxz
push
pop
pushf
arpl
mov
mov
push
add
add
add
add
addl
push
mov
out
lret
clc
gs
popf
add
filds
test
add
jl
mov
pop
add
mov
add
sub
pop
leave
push
lea
push
push
push
call
fs
add
fs
ror
pushf
mov
add
enter
add
mov
push
add
mov
push
insb
xchg
add
std
add
add
xchg
lret
popf
push
add
add
xchg
xlat
jbe
add
push
data16
popa
stos
outsl
hlt
jo
in
lock
ret
push
push
push
push
push
push
push
push
lea
push
call
mov
popa
out
add
add
add
mov
arpl
mov
jne
jae
add
repnz
add
pop
pop
add
add
add
add
jns
repnz
in
lds
popa
xchg
add
addr16
std
cmpsb
rolb
add
cmpsb
roll
pop
mov
push
add
rol
inc
pop
add
push
add
sub
sub
pop
push
push
push
push
push
push
call
add
add
mov
add
in
icebp
ljmp
in
add
mov
popa
xchg
pusha
jmp
in
add
add
add
add
fiaddl
mov
add
bound
ljmp
add
lock
leave
pop
add
add
rolb
or
add
rorl
push
xchg
dec
sub
pop
testw
push
sub
xor
pop
pop
push
ror
not
shl
shr
pop
pop
push
push
lea
push
push
push
call
mov
fwait
cmc
add
add
stos
movsl
mov
scas
xchg
stc
pushf
cmp
sahf
add
add
clc
add
loope
add
mov
add
mov
mov
call
add
hlt
add
insb
add
push
ja
add
mov
add
in
in
lcall
add
aam
sarl
xchg
lea
push
push
push
lea
push
call
shr
add
pushf
push
fildl
mov
cld
int
add
arpl
std
add
add
ja
stc
mov
add
pop
push
clc
add
popa
jb
add
test
add
push
push
add
not
pop
call
xor
push
shl
pop
pop
push
rol
pop
pop
pop
push
dec
pop
pop
push
push
push
push
push
lea
push
push
call
add
mov
add
lock
mov
hlt
add
stc
int
lret
clc
mov
lea
add
insb
lods
roll
add
add
pushf
push
pop
add
shll
lds
add
movsb
jge
jo
testl
icebp
ror
pop
leave
ret
push
dec
inc
pop
push
mov
push
push
push
push
call
jl
mov
loope
mov
pop
lret
imul
add
jge
add
add
add
add
mov
push
rolb
andb
add
test
mov
lods
shl
mov
cmpsl
add
out
jmp
add
jmp
roll
sub
pop
add
push
xor
pop
push
push
push
push
push
push
lea
push
push
push
call
jmp
mov
add
data16
mov
lret
sbbb
add
iret
add
iret
add
add
add
xchg
int
mov
add
add
cltd
add
add
lcall
push
push
push
call
movb
imul
jbe
shr
add
add
add
add
add
add
leave
iret
jo
imul
mov
roll
add
xchg
mov
add
insb
in
sub
pop
push
push
lea
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
add
mov
stc
add
add
mov
add
lds
ficoms
lcall
jp
add
add
add
add
shrb
mov
jbe
add
add
imul
fdivr
lcall
pop
or
ret
push
call
cmc
into
movb
add
mov
add
mov
add
add
push
jae
cld
jl
add
jge
mov
hlt
mov
add
add
add
add
jo
sub
pop
push
pop
push
add
dec
pop
lea
push
dec
inc
pop
sub
push
pop
mov
push
add
lea
pop
shr
push
inc
add
ror
pop
add
mov
push
push
push
push
call
push
add
filds
cmpb
movl
int3
add
add
add
add
test
pop
xchg
in
add
add
hlt
call
in
lock
lcall
fcos
jae
push
lea
pop
popl
push
push
push
push
push
lea
push
push
push
push
call
rcrb
int3
add
add
xchg
lea
out
aam
stc
xchg
add
add
lret
in
fdivr
lcall
jnp
add
push
xor
lea
lea
shl
pop
xor
lea
push
rol
shr
pop
mov
add
push
lea
push
lea
push
push
push
push
push
push
push
lea
push
call
in
insb
xchg
scas
pop
add
mov
insb
add
jb
mov
xchg
mov
filds
sahf
gs
imul
add
add
sti
add
add
mov
add
clc
popl
rcl
mov
add
add
add
add
xchg
add
in
repnz
nop
pop
test
sub
pop
xor
push
ror
lea
shr
shl
pop
rol
push
push
push
push
push
push
push
push
call
lods
add
jmp
add
addl
push
enter
add
jp
add
xchg
add
add
xlat
add
imul
mov
xchg
add
enter
xchg
pop
add
add
les
aam
lahf
stos
add
pushf
cld
push
pop
test
in
loopne
nop
push
push
push
push
push
push
push
call
mov
stos
add
add
mov
test
lock
cltd
add
fistpl
add
add
cmpsl
jl
xchg
popl
add
push
add
add
out
out
add
sub
pop
nop
xor
push
lea
pop
nop
push
ror
shr
dec
pop
nop
push
xor
dec
rol
pop
inc
push
push
push
push
push
push
push
push
push
push
call
out
add
add
add
pop
add
push
jnp
stos
mov
movsl
add
add
add
add
add
xchg
arpl
mov
scas
xchg
add
mov
add
jnp
mov
scas
iret
add
mov
add
loope
add
in
add
add
fdivr
lcall
push
pop
nop
push
push
push
push
push
push
call
test
fiaddl
shr
call
add
add
cmpsl
fbld
leave
mov
add
add
add
add
add
mov
mov
frstor
add
pop
add
add
in
call
cmpb
jne
add
push
push
push
lea
push
push
call
sar
mov
sti
mov
add
mov
add
std
add
jno
mov
mov
add
mov
int3
add
add
add
add
rcll
jno
push
add
add
iret
mov
in
pop
nop
push
push
lea
push
call
jecxz
add
add
xchg
xchg
into
jecxz
cltd
mov
add
cld
mov
adcl
scas
add
add
orb
data16
enter
xchg
xchg
pop
rclb
pop
add
jecxz
add
add
jno
sub
pop
nop
push
push
push
push
lea
push
push
push
call
add
add
movb
push
lcall
nop
int3
outsl
add
fisubl
scas
add
add
add
in
add
mov
popf
orl
je
push
push
push
lea
push
push
lea
push
push
call
icebp
add
add
add
add
add
jbe
out
add
popa
lret
rcll
xchg
cld
add
insb
pop
cltd
mov
add
add
addb
stc
addb
in
stos
mov
bound
roll
add
scas
add
xchg
mov
fldt
add
add
lods
add
movsl
ljmp
lcall
push
add
pop
nop
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
stos
add
filds
add
sti
int
add
xchg
xchg
push
sti
rolb
pop
add
add
in
xchg
add
mov
jbe
mov
pop
fwait
add
add
jb
out
jle
icebp
add
add
add
std
add
lcall
push
sub
sub
pop
nop
push
push
push
lea
push
call
jge
jl
lcall
in
shll
add
mov
cmpsl
push
jle
xorb
mul
mov
lret
add
mov
add
mov
add
rolb
add
call
mov
flds
pop
add
imul
leave
mov
sub
pop
nop
push
sub
inc
pop
cmp
jb
push
add
sub
dec
pop
xor
jmp
push
inc
sub
add
pop
mov
add
push
shl
pop
movzwl
mov
push
push
push
push
push
lea
push
push
call
xchg
bound
push
add
add
add
je
mov
add
int
add
iret
xlat
xchg
fists
add
popf
add
out
add
jecxz
add
add
cmpsb
pop
add
imul
lcall
rcll
in
xorb
inc
add
add
faddl
add
add
pop
add
popa
shll
mov
shr
add
loop
add
add
mov
add
add
add
xchg
add
add
lcall
dec
hlt
push
push
push
push
push
push
call
aam
add
sahf
add
fstl
add
into
enter
pop
push
mov
clc
addl
add
add
movsl
push
roll
icebp
add
leave
xor
push
push
push
push
push
lea
push
call
nop
add
push
lea
lock
pop
add
add
add
les
mov
add
xchg
pop
xchg
jb
rcrl
add
test
sub
pop
shl
push
push
lea
push
call
add
cwtl
add
divl
xchg
nop
add
add
test
fs
add
add
push
add
jae
xchg
add
addb
lret
mov
xchg
lcall
xchg
mov
add
loopne
sub
pop
xor
push
push
push
push
call
add
xchg
cmc
fdivl
loopne
add
add
data16
mov
movsl
add
mov
add
cld
lcall
mov
lea
mov
add
lods
ja
pop
add
mov
popa
lods
call
imul
mov
in
lock
lcall
loope
push
rol
pop
xor
push
shl
not
lea
pop
shl
push
shr
add
add
pop
xor
push
push
push
call
fwait
mov
add
add
jno
add
rolb
push
add
add
add
lret
lret
jle
mov
aad
cltd
in
mov
jb
add
pop
mov
add
push
not
pop
pop
pop
push
not
not
pop
pop
pop
push
push
lea
push
push
call
aad
in
iret
shrb
outsl
jecxz
movb
push
add
lock
gs
add
mov
loope
int
fdivrl
add
loope
cli
std
ret
add
sub
pop
leave
ret
push
push
push
push
push
push
call
popa
mov
add
andb
add
add
mov
mov
add
push
mov
fwait
push
add
add
jle
int
mov
add
lds
lcall
push
push
push
push
push
push
push
call
add
mov
shll
add
fsubl
add
add
fadds
jns
in
je
int
pop
testl
add
jno
xchg
add
add
add
lcall
in
push
push
push
push
push
call
add
add
jnp
add
lods
add
popl
add
cmpsl
data16
xchg
jo
cld
add
add
lret
addr16
mov
add
mov
mov
imul
ret
add
jae
add
stos
mov
fstl
in
lcall
push
push
sub
shr
pop
push
push
lea
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
jge
add
mov
push
pop
test
lahf
popf
add
add
add
add
popa
lods
lods
add
test
add
jae
clc
shrl
mov
add
lret
cmc
xlat
lods
add
push
dec
shr
pop
mov
mov
push
shl
lea
pop
mov
push
push
push
push
push
call
mov
push
add
in
add
add
xchg
add
jge
add
insb
add
xchg
popl
mov
popa
mov
fidivs
leave
mov
fldl
popa
add
pop
add
lahf
aam
shl
xchg
test
rorb
test
add
add
pop
mov
push
lea
push
push
push
lea
push
push
lea
push
call
movsl
add
aad
movsb
fsubr
lahf
mov
add
add
add
test
faddl
add
jecxz
mov
add
mov
mov
push
xlat
scas
add
in
mov
add
scas
pop
icebp
popf
add
xchg
cmpsb
lods
add
fs
leave
add
jmp
sub
pop
test
je
push
push
push
push
call
add
cmpsb
add
stos
mov
ljmp
pop
push
rorl
jp
add
add
mov
imul
scas
jae
add
scas
mov
mov
out
mov
add
pop
mov
mov
push
dec
inc
pop
mov
push
push
push
push
push
push
call
add
sahf
add
add
add
imul
add
add
je
add
scas
push
add
mov
fiaddl
add
lcall
cmp
je
push
sub
pop
test
je
mov
push
shr
lea
pop
inc
cmp
je
push
ror
rol
pop
test
jne
push
xor
sub
pop
xor
pop
push
rol
pop
pop
pop
push
inc
add
pop
pop
leave
push
push
lea
push
push
push
lea
push
call
add
add
mov
mov
add
add
mov
push
out
les
add
popl
loope
add
jecxz
add
mov
add
sub
pop
ret
push
push
lea
push
push
push
push
call
add
add
ja
imul
add
lods
stos
add
int
pop
jl
mov
mov
add
pop
fwait
jae
add
add
mov
stos
pop
fmul
les
sub
pop
mov
push
push
push
push
lea
push
push
push
call
lds
add
rorl
movsl
add
clc
cli
shl
add
jnp
iret
add
testl
std
add
mov
mov
mov
add
fldl
lret
mov
add
fcoml
add
in
in
lcall
push
rol
shr
pop
cmp
jne
push
rol
shr
dec
pop
lea
mov
push
dec
inc
pop
test
je
push
shr
shl
pop
mov
push
xor
dec
add
add
pop
add
cmp
jne
push
sub
pop
mov
test
je
push
rol
sub
pop
mov
push
pop
add
push
push
lea
push
push
push
call
add
mov
mov
cltd
add
jns
out
jno
fadds
mov
push
push
add
xlat
lcall
je
jmp
push
inc
sub
pop
xor
push
push
push
lea
push
push
call
cmpsl
mov
add
loop
push
add
in
add
push
push
mov
in
jne
add
add
add
lock
loope
add
add
add
les
push
add
add
add
bound
add
mov
in
in
pop
pop
push
sub
add
not
pop
pop
pop
push
not
pop
pop
push
ror
sub
sub
lea
pop
leave
push
push
push
push
lea
push
push
call
mov
in
aam
mov
add
xlat
jecxz
cmpsb
jp
jmp
add
sahf
add
movsb
ret
cwtl
rcrl
cltd
push
jnp
add
jae
aam
lcall
push
jae
lret
aam
in
call
ret
push
rol
not
pop
lea
pop
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
sub
subb
rcrb
add
add
mov
roll
add
addl
xchg
jne
add
enter
jmp
mov
sub
pop
pop
pop
push
dec
pop
pop
push
add
ror
pop
leave
ret
push
add
pop
mov
pop
push
sub
sub
pop
pop
pop
push
push
push
push
lea
push
push
push
push
call
add
add
jne
add
sti
jno
incb
int
sti
add
add
add
shr
push
loopne
add
xchg
add
push
imul
rolb
addr16
pop
pop
push
push
push
lea
push
lea
push
push
push
call
out
add
leave
add
mov
shlb
pop
cld
jp
orb
mov
in
imul
ret
popl
mov
add
add
add
add
sub
pop
leave
push
lea
push
push
push
push
push
push
call
jno
add
aam
jbe
mov
movsl
sahf
add
scas
add
les
add
pushf
lret
loope
add
test
add
mov
lcall
or
test
push
test
jae
inc
insl
jae
test
jo
test
push
pop
push
push
jo
jae
fnsave
test
jae
add
jb
sbb
mov
stc
lret
movsl
sub
mov
dec
push
subl
sub
stc
dec
arpl
test
cmp
mov
inc
xchg
sub
sbb
mov
arpl
test
mov
add
xchg
movb
sbb
jnp
cli
das
pop
movsl
inc
ds
icebp
imul
in
lods
mov
xorl
jmp
adc
fmuls
sub
sbb
pop
loopne
lahf
pop
mulps
aas
lahf
enter
jecxz
push
sbb
bound
notl
daa
mov
out
xchg
and
xorl
inc
vcvtdq2pd
xor
push
fbld
imul
jo
fdivr
popl
mov
je
pop
dec
ret
jnp
sti
fsts
fcos
aam
and
and
pop
cmpb
out
mov
xor
cld
xchg
cmp
lret
dec
lea
sbb
inc
mov
dec
ja
insb
nop
pop
push
ds
adc
mov
leave
jecxz
mov
jmp
xor
push
popa
daa
insb
je
pop
sbb
sub
pop
aas
hlt
xlat
outsl
repnz
adc
dec
in
test
xchg
mov
jmp
inc
pushf
fnstenv
loopne
lcall
pop
ljmp
push
cwtl
bound
dec
sbb
icebp
add
jl
mov
lcall
and
sahf
leave
mov
adc
cltd
test
adcb
mov
or
pop
lds
fidivs
loopne
stc
xor
pop
movsl
dec
and
sub
rclb
add
mov
push
dec
stc
mov
aaa
dec
imul
or
fwait
mov
insl
push
mov
sub
outsb
pushf
roll
in
jb
xorl
pop
pop
sbb
sbb
ja
lock
xchg
cs
cmpsl
xchg
ret
mov
cmp
adc
sbb
out
push
shl
adc
nop
add
movsl
mov
filds
cmpsb
mov
sbb
data16
xchg
dec
jne
mov
mov
mov
pop
mulb
scas
jns
jmp
mov
loope
push
push
hlt
xchg
mov
mov
pop
mov
into
mov
adc
mov
loope
into
jge
pushf
stos
aas
jl
mov
sbb
jne
sub
xor
jp
and
lods
and
roll
mov
ds
mov
inc
sbb
or
clc
repz
dec
rep
jns
repnz
test
xor
ret
imul
xor
in
addr16
stc
xor
xchg
stos
push
dec
cmp
xchg
dec
and
cltd
inc
fdivl
mov
sbb
cli
cmp
adc
pop
pop
jg
mov
imul
lret
push
pop
xchg
mov
out
in
loope
inc
mov
das
sahf
daa
sub
sbb
dec
push
inc
pusha
xchg
xchg
mov
mov
jge
xchg
xor
and
outsb
xchg
movb
ja
dec
imul
rol
stos
pop
mulb
inc
inc
cmc
cmpsl
mov
xchg
fs
js
sub
cmp
xchg
loopne
scas
rolb
push
add
pop
fnsave
and
in
cmp
jbe
test
negb
push
add
out
out
int3
xchg
cmp
mov
fdivrl
ret
ja
jns
pop
push
mov
push
or
je
push
aas
sar
ja
out
hlt
cwtl
adc
and
cmpsl
adc
test
pushf
mov
imul
adc
push
gs
out
push
and
movsl
clc
es
mov
or
push
or
jg
in
into
lcall
outsb
xchg
cmp
int
cmc
push
mov
lds
inc
sub
insb
lahf
cmp
loopne
ret
aam
pop
inc
mov
jae
or
incb
push
jnp
lret
mov
or
out
je
fimuls
xor
xor
xchg
jbe
inc
iret
xor
inc
xchg
xchg
lds
mov
jg
push
add
ds
or
sti
mov
js
cld
jecxz
scas
icebp
pop
xchg
movsl
ja
sbb
adc
aad
mov
mov
scas
pop
ss
sub
inc
inc
ficomps
and
sbb
sub
adc
xchg
push
inc
js
dec
repz
push
sahf
shll
loope
inc
mov
hlt
or
jge
cs
neg
outsb
out
test
sbb
fmull
test
or
loop
xor
add
jae
cmpsl
mov
add
movsb
fs
pop
push
inc
in
dec
cltd
dec
mov
mov
loope
xchg
das
jl
scas
stc
push
add
rcll
imul
test
mov
sub
mov
push
outsl
jecxz
dec
loop
cwtl
sub
lahf
int
dec
add
cwtl
ds
test
loope
sub
lock
sahf
jecxz
dec
or
jb
insb
pop
mov
xchg
in
or
push
popf
sbb
inc
jnp
arpl
xchg
xchg
sbb
xchg
mov
imul
and
das
add
jne
mov
push
xchg
pop
repz
mov
mov
mov
jg
fwait
adc
push
js
outsl
mov
dec
fsubrl
xor
mov
jo
dec
mov
adcb
xchg
push
adc
push
les
mov
cmc
out
mov
bound
das
gs
add
jne
cltd
xor
xchg
pusha
mov
popa
dec
fisubrs
mov
ljmp
sbb
sbb
push
inc
mov
push
cmpsl
push
xlat
jno
inc
pop
jle
xchg
repz
cmpb
mov
shlb
mov
rolb
dec
les
jge
sarl
mov
cltd
cwtl
push
lock
loop
lret
mov
sub
xchg
xchg
mov
mov
dec
push
jno
dec
icebp
icebp
bound
cmp
sbb
mov
leave
adc
ficomps
cmpsb
arpl
push
popw
mov
das
aaa
mov
mov
jmp
fnsave
cmc
sbb
sbb
dec
xchg
adc
enter
notb
iret
xlat
add
pop
jecxz
fists
loope
insb
jns
add
sbb
mov
ret
xchg
stc
shl
mov
rcll
into
inc
fnstsw
movsb
or
sbb
dec
repnz
cmp
adc
mov
jae
xchg
test
scas
push
jnp
and
mov
sub
xchg
jb
aas
lcall
dec
mov
push
and
aam
adc
jg
lret
mov
pusha
sbb
jmp
jl
jo
lahf
jg
out
rorl
adc
aas
into
repnz
out
xorb
jno
cmp
ljmp
repnz
adc
ds
inc
mov
pop
pop
nop
out
inc
aaa
inc
cmpsb
sub
sub
jns
test
push
sub
sbb
sub
test
xchg
ljmp
dec
jns
pop
mov
adc
mov
xchg
je
sub
or
dec
divl
xchg
dec
js
pop
fcoml
jg
cmpsl
outsl
js
fidivrl
out
cmpsb
lcall
push
mov
leave
std
cmc
fbstp
outsl
xchg
clc
int
add
pop
and
pop
popl
fwait
jp
xchg
adc
mull
and
jmp
mov
hlt
jae
pop
xchg
clc
or
aas
sbb
sbb
mov
push
roll
pop
sar
cmp
imul
dec
ljmp
push
cmp
test
sbb
mov
inc
leave
std
mov
ja
sarb
popf
sub
inc
repnz
push
adc
add
jmp
popf
int
js
xor
lds
push
das
dec
sbb
inc
xlat
ret
imull
pop
add
dec
lret
outsl
enter
or
in
push
fs
rcr
mov
jb
mov
sbb
adc
mov
xor
jmp
mov
clc
pop
enter
je
sbb
cmp
jb
repz
roll
push
jmp
pop
jmp
mov
cld
jl
add
nop
or
clc
es
adc
add
jge
pop
push
pop
inc
addr16
das
inc
aaa
mov
scas
stc
xor
sub
cmpb
push
adc
cmp
insl
ficompl
les
push
das
mov
enter
dec
inc
xor
rcrl
mov
lock
and
cmc
lret
outsl
add
inc
repz
xchg
sbb
fmuls
push
jl
insl
pop
js
aaa
adc
fwait
jno
test
ds
les
call
mov
fcomp
cmp
cwtl
mov
popf
cmp
nop
rorb
xor
dec
mov
daa
scas
xor
cmp
push
in
cs
sub
nop
insb
bound
xor
cmp
int3
movsb
bound
scas
mov
pop
cmp
add
ja
out
ss
nop
and
push
fidivl
daa
jno
movsb
cmc
xchg
cmpl
aad
data16
pusha
add
adc
das
xorl
out
fmuls
out
or
inc
out
push
repz
add
popa
xchg
pop
enter
and
stc
lea
push
imul
push
push
cs
push
xlat
mov
dec
jl
into
je
notb
adc
sub
xchg
out
out
hlt
or
cmpsb
mov
cmpsl
imul
inc
ds
ffreep
lahf
sbb
fwait
sbb
or
add
push
jo
dec
add
fdivp
mov
jbe
mov
es
aas
ret
adc
sub
push
xchg
aaa
shll
pushf
ja
lea
jge
daa
jae
cwtl
jp
jl
pop
push
xchg
xor
or
cs
icebp
xor
mov
test
lock
and
pop
gs
pushf
ficomps
jne
cmp
mov
mov
mov
xchg
mov
aad
rcrl
movsb
mov
jae
inc
cmc
call
in
rorb
pop
fmuls
in
btsl
clc
adc
and
insl
pop
stos
xorb
adc
es
iret
gs
shl
cmp
test
pop
lods
dec
add
ss
int
nop
jns
push
cmpsl
shrb
stos
mov
dec
mov
cs
mov
nop
sbb
sbb
inc
popf
sahf
imul
fisubl
sub
push
gs
add
in
pop
or
fs
rorb
xchg
xlat
mov
cld
movl
inc
scas
mov
and
mov
push
aaa
cli
stc
std
sub
push
pop
and
sbb
add
testl
and
aas
in
sbb
inc
cld
sub
scas
inc
addb
psubsw
sbb
loope
cmpps
jne
cli
neg
or
pop
adc
fwait
mov
or
fs
mov
mov
xor
mov
jae
cmovne
fistps
push
jo
popa
jne
inc
xor
or
add
insb
fstpt
lret
nop
std
push
test
insb
dec
lcall
push
js
test
mov
jne
fwait
sub
fdivs
jmp
push
pop
jp
dec
icebp
aam
mov
push
or
jno
push
mov
insl
ret
inc
sub
xor
mov
fsts
adc
and
adc
stos
aam
xlat
lret
nop
inc
sub
mov
dec
popf
loopne
and
lock
and
outsl
iret
lret
xchg
bound
popa
jb
daa
out
jae
xor
jbe
lods
jns
xchg
mov
nop
jbe
sahf
add
or
scas
dec
les
stos
mov
or
or
out
into
flds
cmp
cmp
push
mov
xor
sbb
icebp
dec
pop
add
icebp
pop
push
ret
adc
push
roll
popf
rorb
mov
xchg
cmpsb
dec
mov
sbb
jg
test
stc
cwtl
rcl
or
pushf
call
push
out
mov
and
jl
fisubs
es
movsb
mov
mov
pop
lds
aas
xchg
jnp
fisubl
mov
add
xchg
inc
or
cmp
adc
lahf
mov
imul
clc
test
jne
xor
pop
aad
ficomps
adc
add
pop
mov
out
iret
fcmovb
sbb
add
into
mov
mov
and
jbe
clc
into
icebp
les
iret
and
lock
dec
lods
ds
es
inc
shrl
insl
adc
push
psubsb
aad
in
and
or
sub
in
outsl
xor
rolb
andl
inc
or
xor
cmc
clc
fs
add
js
cmp
sbb
enter
mov
punpcklwd
push
add
inc
push
loop
mov
or
rcll
adc
dec
incl
push
call
mov
xor
cwtl
out
xchg
dec
xor
mov
pop
mov
testb
jbe
int3
rclb
mov
push
xchg
clc
mov
faddl
pop
cwtl
repz
jbe
pop
inc
pusha
outsb
ja
jno
call
lahf
push
pop
jo
hlt
dec
adc
jno
mov
dec
imul
out
xchg
sbb
dec
add
rdmsr
or
in
nop
out
pop
add
adc
popf
shll
sbb
mov
enter
mov
and
popa
mov
shl
test
jle
push
jp
movsl
pushf
cmpsb
rcr
push
sub
inc
mov
xor
push
popa
adc
iret
popa
aam
xor
scas
sub
stos
dec
dec
int
repz
sahf
mov
lea
or
push
dec
adc
sbb
inc
push
jg
xor
pop
push
push
jbe
fmulp
in
adc
push
cmp
sub
xor
nop
lea
mov
pop
mov
outsl
xor
adc
jg
push
xchg
or
lahf
ds
lcall
dec
out
add
std
test
sub
push
jbe
je
sarl
add
lret
stos
xchg
add
int3
sub
add
cmp
cmp
repz
cpuid
leave
push
outsl
sub
jbe
jge
xor
pushl
out
jae
leave
push
adc
ds
add
lret
xor
mov
mov
pop
sbbl
das
cmp
xor
mov
or
jb
cmpsb
movsl
daa
xchg
lods
into
sti
ret
dec
imulb
cmpsl
dec
dec
mov
xor
scas
dec
popa
or
hlt
mov
shr
push
das
inc
clc
and
dec
jne
out
push
stos
pop
shrb
outsb
mov
mov
mov
push
inc
dec
mov
pop
and
test
push
sbbb
lret
adc
push
sbbb
and
adc
xchg
lahf
mov
cli
xor
mov
xchg
lods
or
push
in
cmp
pop
cwtl
fstpt
push
mov
xchg
mov
jne
xor
push
xor
mov
stos
cmc
add
sbb
inc
leave
lods
je
hlt
sbb
shll
xchg
pop
adc
mov
or
imul
xchg
add
sub
out
out
outsb
adc
adcl
and
scas
cld
mov
out
bound
cmpsb
add
dec
std
mov
jb
dec
data16
aad
push
fwait
stc
mov
mov
mov
aad
ljmp
int3
xor
dec
push
adc
jne
out
inc
cmp
lea
pop
mov
inc
arpl
push
push
push
xchg
inc
sub
jb
mov
xchg
pop
out
add
das
cmp
xchg
les
btr
push
inc
adc
and
dec
mov
cmp
dec
ss
pop
test
xchg
inc
lods
stc
shrb
push
icebp
sbb
rcrl
ss
insl
pshufhw
notl
push
gs
xchg
popf
pop
jns
dec
imul
rcll
jmp
sbb
jge
sub
xchg
jno
or
sbb
cmp
es
or
stos
pop
lret
cmp
push
or
mov
pop
hlt
lds
adc
xchg
mov
cmp
mov
push
scas
jb
frstor
es
dec
cmp
mov
popf
bnd
cwtl
rcl
push
pop
mov
jmp
into
shlb
jne
rorl
sub
pusha
lods
addr16
pop
fwait
ret
jmp
mov
cmp
and
jge
frstor
sbb
aad
test
push
adcl
test
das
popf
sbb
test
inc
xchg
mov
fcoml
rolb
mov
mov
les
sub
lds
out
push
jbe
mov
fsubr
lea
cmp
xchg
faddl
pop
or
and
adc
sub
les
push
pop
cmp
loope
adc
cmp
mov
ja
mov
lcall
inc
rolb
in
mov
mov
stc
push
xchg
out
or
adc
jl
and
sub
xchg
inc
or
jle
xor
jo
aam
hlt
ret
imull
mov
mov
pop
add
mov
jl
xor
dec
andb
mov
fwait
cs
int
jl
jno
jnp
sbb
stos
push
jb
lods
rorl
dec
push
rcll
addr16
mov
in
or
pop
pop
hlt
insl
jmp
cmc
jl
nop
and
mov
aam
pop
sub
xor
xchg
push
xlat
insb
in
cmp
sti
jae
inc
add
scas
push
cmpl
insb
daa
jnp
push
xchg
or
pop
mov
jle
cltd
sbb
jno
sbb
xlat
and
push
sbb
mov
sarb
out
test
cltd
cmp
enter
aaa
mov
aaa
xorl
push
mov
jnp
fisttps
adc
adc
or
lcall
lods
bound
sub
loope
sub
or
pop
pop
insb
sbb
mov
mov
mov
fdivrs
mov
or
pop
das
xor
stos
adc
test
xchg
clc
fmull
pusha
and
dec
pop
jl
or
push
and
testb
les
fs
mov
pushf
test
mov
rcll
adc
in
jmp
mov
insb
push
xchg
sbb
daa
or
gs
push
frstor
push
orl
mov
pop
xchg
or
sub
mov
fxch
push
gs
cmp
pop
sbb
nop
cmpsl
daa
and
sbb
cmp
hlt
push
pusha
xchg
push
lcall
mov
add
int
enter
or
adc
mov
divb
std
bound
mov
mov
inc
pop
in
mov
into
xor
into
mov
aad
sbb
std
shll
into
aas
ja
int
out
cmpsl
loopne
sbb
inc
scas
xor
cltd
lret
sub
jns
imul
aam
scas
mov
adc
mov
pop
lods
lea
in
xor
in
mov
movsb
loope
adc
popa
dec
into
out
sub
push
mov
leave
dec
repnz
lods
jmp
add
je
por
cmp
rorb
repz
out
xor
inc
les
cwtl
mov
movsl
mov
mov
mov
pop
mov
cltd
and
popl
fs
cmpl
push
lret
fwait
faddl
mov
sbb
and
int
pop
enter
outsb
rcrb
or
ss
lea
push
sbb
dec
aad
imul
inc
ret
imulw
ds
add
pop
ret
ret
cli
lds
add
xor
addr16
rclb
stos
inc
in
mov
aas
and
inc
push
aam
xor
mov
mov
ljmp
cmp
dec
adc
out
cmpb
xchg
inc
pop
jp
adc
mov
sub
pop
mov
jb
cmp
ss
rorb
pop
loop
iret
pop
xchg
stc
pop
or
imul
and
push
inc
inc
cmpsl
aaa
jo
test
fdiv
add
js
jb
xchg
inc
out
xchg
inc
jle
add
inc
push
test
push
sti
addb
mov
subb
jnp
scas
dec
push
stos
std
jns
pop
imul
in
and
and
jnp
mov
dec
aad
clc
cmp
cmp
mov
inc
aam
cmp
push
cmpsb
inc
stos
ss
push
fmull
aam
cmp
imul
mov
adc
daa
jns
dec
mov
fdivr
dec
mov
psllw
scas
movsb
jno
outsb
out
outsl
jp
xchg
loopne
add
xchg
push
lahf
adc
add
inc
lret
jne
push
vmread
jmp
jne
lret
jle
loope
or
push
xchg
pop
enter
iret
sub
imul
mov
cli
roll
pop
dec
movsl
enter
push
orb
push
and
adc
push
jnp
stos
mov
lock
aas
inc
xchg
jae
sub
js
sbb
cmpsl
stos
jae
mov
xor
adcl
sti
cmp
add
xchg
imul
push
mov
les
sbb
mov
mov
daa
mov
test
dec
mov
rcrl
push
sbb
cmc
mov
mov
lods
pop
inc
pop
or
scas
clc
lea
xor
jle
jae
fwait
sahf
test
stos
push
add
adc
repnz
pop
in
pop
jg
xchg
push
inc
mov
jmp
sahf
outsl
mov
sahf
xchg
insl
js
hlt
mov
mov
ds
ss
fs
roll
scas
push
cmp
fwait
push
inc
sub
and
shll
gs
push
stos
std
rcrl
adc
inc
fldl
es
adc
repz
rorb
and
daa
scas
insb
fidivrs
enter
arpl
enter
pop
imul
mov
xchg
jbe
push
pop
adc
leave
test
pop
je
dec
setae
in
aas
nop
pop
mov
cli
lret
lock
xchg
sbb
sbb
outsl
pop
add
mov
jmp
movsb
shll
sbb
sti
iret
inc
inc
or
sbb
add
jne
lcall
xor
inc
push
cmpsl
mov
add
sbb
mov
pop
fisttpll
mov
cmpsl
aad
xor
out
mov
xchg
push
mov
pop
lcall
addr16
dec
fidivrs
and
gs
fistps
cmp
mov
loope
pop
jmp
push
icebp
lock
and
lret
movsl
mov
cld
add
or
fsubrl
fs
je
out
mov
push
xor
aad
cld
rcrb
stos
mov
filds
push
push
push
xchg
aaa
sbb
fsubs
lods
jae
sbb
xchg
sub
pop
loop
sub
mov
push
mov
pop
mov
xchg
je
push
iret
daa
popf
push
mov
jo
movsl
bswap
les
ret
and
and
inc
movsl
sbb
sbb
mov
out
repz
imul
mov
icebp
inc
jbe
pop
rcll
lea
lahf
and
pop
cmp
cmp
adc
frstor
fabs
adc
int3
pop
fdivrl
enter
iret
dec
or
aaa
fdivs
adc
pop
test
int3
stos
cmpsl
dec
or
sbb
arpl
sbb
pop
or
jo
test
xor
data16
rolb
mov
lds
rclb
cmp
fwait
inc
aad
pop
adc
adc
sub
rcrl
in
adc
test
cld
je
xchg
cli
mov
jecxz
pop
push
pop
add
ret
int
xchg
pop
fwait
or
push
xlat
gs
in
cmp
mov
cmp
leave
mov
icebp
mov
mov
sbb
xchg
jl
outsb
mov
imul
rcr
xchg
mov
sbb
adc
rolb
mov
test
cmp
dec
push
ret
lahf
xchg
jb
popf
movsl
insl
sbb
jp
dec
xlat
mov
movsb
sub
sbb
and
fisttpl
cmp
push
sbb
jle
cmc
in
push
inc
test
lods
sbb
jmp
dec
sbb
dec
cmpsl
negl
mov
lahf
test
mov
xchg
inc
rcr
mov
je
divl
rcrl
in
sub
sbb
sbb
imul
and
ret
mov
mov
test
or
or
stos
addr16
push
or
inc
sub
gs
stos
pop
sbb
jnp
mov
out
xchg
and
xor
or
fucomp
xor
imul
xchg
add
or
sbb
mov
pusha
push
stos
mov
call
jne
shll
out
pop
adcb
in
cmp
xchg
fadd
incb
cmpsl
imul
insb
rcrb
lret
xlat
sub
dec
cwtl
xor
cmp
leave
xchg
fcomps
ja
and
das
stos
lahf
push
xchg
jno
pushf
sub
dec
pop
in
loope
in
subb
rcr
inc
test
xor
xchg
pop
cmp
ja
out
pop
push
add
jmp
dec
add
jl
push
xchg
or
leave
jns
sbb
out
cld
or
sub
inc
cmc
repz
arpl
inc
pop
and
mov
inc
int3
movsb
lahf
push
pop
push
lahf
mov
jecxz
sbb
mov
lret
cmovl
insb
dec
imul
cld
push
pusha
mov
xchg
shrl
andl
inc
sub
mov
dec
xlat
push
pop
jl
adc
out
mov
dec
xchg
pop
mov
and
and
inc
fnstenv
xchg
push
mov
push
and
ss
mov
out
jb
push
xchg
mov
push
icebp
fsubs
dec
je
xchg
jmp
dec
popf
mov
dec
push
mov
add
sub
add
mov
inc
leave
jp
adc
xchg
or
pop
mov
cmp
jb
mov
xchg
sbb
testb
mov
imul
jo
aam
mov
and
jns
jbe
push
movsl
mov
adc
mov
loop
xchg
in
mov
jl
adcb
sub
cmp
out
adc
rcll
mov
in
mov
pop
in
lcall
jnp
cltd
mov
xor
aas
xor
rcr
clc
lods
push
mov
add
xor
and
add
push
push
mov
movsl
or
xchg
cmp
xlat
mov
outsl
xor
int
mov
xor
cmpsb
rcrl
lcall
imulb
pusha
rol
xor
push
xor
mov
call
imul
popf
daa
mov
sub
dec
jge
and
outsl
push
data16
test
les
movsb
mov
xor
mov
add
push
dec
fdivrs
out
rep
pop
std
mov
les
int3
in
sub
jge
jno
lcall
push
pop
and
cmp
rcrb
lret
iret
sbb
inc
fs
xchg
or
pop
jae
jmp
addr16
mov
cld
in
fbstp
mov
scas
sbb
lock
sahf
js
js
mov
sahf
addb
sub
mov
adc
mov
adc
ja
mov
fyl2x
popa
mov
xor
popl
movsl
mov
and
mov
jb
int
fidivl
push
les
mov
test
roll
mov
xor
shlb
push
push
in
insl
into
jb
sbb
mov
add
lahf
ficomps
cmp
jno
inc
xchg
cmp
inc
addb
or
lea
sbbb
sbb
lahf
out
and
inc
call
stos
push
or
xchg
pop
orb
sbb
xor
loop
sahf
pop
cmc
or
push
data16
xchg
push
mov
movsb
loopne,pt
mov
sbb
das
subb
stos
cmp
jl
sti
hlt
xor
or
mov
add
outsl
push
mov
stos
push
es
testb
xor
testb
decl
lret
outsb
and
scas
cmp
sub
push
loopne
scas
jle
push
xor
repz
mov
push
jo
cmc
fcoml
xor
mov
fiaddl
das
inc
int3
mov
movsb
dec
pop
pop
std
out
jno
in
sbb
jecxz
pop
mulb
les
dec
inc
dec
movsl
pop
xchg
mov
sbbl
in
std
leave
ja
dec
ss
stos
add
inc
orl
in
cltd
xor
cltd
out
popa
mov
xor
pop
aam
movsb
faddl
or
add
aad
shll
mov
cli
adc
insb
out
call
and
fs
push
xor
xor
inc
lret
jmp
popf
hlt
xchg
pusha
shrl
int3
movsb
divb
cs
and
aas
and
iret
out
pop
loopne
or
push
xor
push
jle
sbb
jb
cmp
cld
mov
gs
div
stos
andl
mov
addr16
add
jp
bsf
and
sub
int3
icebp
icebp
pop
clc
sub
and
aad
aas
xor
scas
push
mov
mov
loope
aam
inc
testb
xor
out
cmpsl
addr16
adcl
ljmp
xor
or
inc
dec
adc
cmp
rol
and
nop
sub
out
aad
stc
loope
sarb
and
out
fistpl
push
jmp
mov
xchg
mov
dec
push
mov
ret
aam
lret
xor
jae
mov
adc
testb
add
mov
pop
dec
push
sub
les
jmp
pop
insl
xor
mov
sub
inc
imul
mov
jle
push
xor
scas
mov
int3
jp
or
sbb
ja
rol
jne
or
popa
adc
pop
lcall
jne
xchg
sbbl
data16
sbb
xor
cltd
lret
pop
sbb
loopne
add
test
pusha
movsl
cmc
mov
daa
in
sbb
cmp
or
sub
int3
into
xor
fildll
js
mov
adc
mov
aad
in
add
sub
add
mov
insl
jl
lods
out
adc
pop
les
in
add
test
cld
js
inc
cmpsb
data16
jns
jo
neg
aam
ja
xor
jno
push
xor
adc
push
push
dec
in
std
std
mov
mov
cmp
cs
push
es
or
stos
pushf
mov
fisttpll
xor
ror
inc
testb
aaa
xor
insb
inc
lcall
inc
pop
sub
mov
dec
popf
test
xor
aam
inc
and
enter
pusha
scas
pmovmskb
and
shr
aam
cmpl
fsubrs
jmp
mov
popf
pop
cli
sbb
rcrl
or
std
push
popa
sbbl
sahf
push
pop
or
int
xchg
jno
std
ds
shll
xor
shlb
push
jae
pop
push
inc
mov
mov
xor
xor
imul
cmp
int
andl
test
test
push
jg
int3
mov
test
or
rcrl
xchg
shlb
sub
dec
jle
cmp
gs
sbb
xor
mov
inc
push
pusha
popa
mov
int
lods
pop
sete
call
je
sbb
inc
jg
vmovaps
test
mov
and
push
lea
lahf
mov
mov
and
push
movq
js
and
push
sbb
jl
and
sahf
sbb
lods
pop
jns
mov
in
mov
xchg
enter
pop
add
sbb
insb
cmc
daa
inc
push
scas
cmp
push
fstps
adc
dec
cwtl
mov
lods
arpl
rcll
add
mov
xchg
shrl
insl
sub
sbbl
inc
cltd
jbe
mov
fadds
bound
or
xor
sbbb
mov
xchg
mov
out
ret
mov
mov
adc
orl
xchg
pop
cli
loop
icebp
lea
jle
mov
int3
inc
dec
repnz
and
cmp
cmp
nop
jno
xor
add
push
and
das
mov
daa
mov
rorl
out
adc
mov
scas
scas
data16
ljmp
lea
das
jp,pt
jp
push
xchg
jecxz
int3
dec
or
fidivrs
pop
fwait
cli
jo
add
pop
test
add
aaa
adc
inc
xchg
cmp
pop
pusha
xchg
or
sarl
jmp
jne
out
and
out
cmpl
and
xor
mov
push
loopne
popa
cmp
in
mov
add
cmpsb
icebp
out
lock
lea
aad
ret
jne
loope
xchg
int3
push
inc
jbe
xchg
sbb
mov
rolb
and
push
and
outsl
pop
add
insb
ss
test
aad
sbb
add
adc
jl
incb
das
idivb
jg
push
pop
pushf
jo
pop
fprem1
rcl
xchg
mov
push
push
mov
rcrb
dec
int
cmp
mov
sbb
and
dec
dec
out
mov
mov
inc
mov
js
popf
ret
push
pop
push
mov
dec
roll
sub
push
ss
out
fisttps
test
xor
xchg
leave
jne
sub
lahf
jbe
jno
ljmp
clc
and
rorb
fists
mov
mov
out
dec
iret
popf
cmp
movsl
lret
rcl
push
imul
lcall
ror
out
xchg
dec
aas
pop
and
loope
jns
inc
or
loop
mov
pop
or
xchg
fistpll
sbb
mov
dec
jns
out
in
ret
dec
cmp
scas
repnz
push
mov
or
stc
cmp
mov
mov
or
in
mov
cs
jns
mov
mov
aam
push
arpl
pop
or
jl
inc
add
push
mull
push
arpl
insl
dec
rep
cltd
push
dec
lea
mov
mov
and
mov
ror
jg
pushfw
repnz
das
in
mov
dec
cmp
push
add
lea
dec
push
jmp
jo
test
add
add
pop
and
shlb
and
mov
adc
cmp
mov
pop
mov
mov
fdivrs
popa
repz
gs
fs
shl
or
iret
mov
ret
stos
add
push
pop
xor
jp
adc
mov
push
mov
or
mov
mov
sti
push
fwait
xor
inc
xlat
pop
jbe
les
xrelease
jo
hlt
mov
inc
and
test
jns
cmp
fbstp
sub
ljmp
addb
fcmovbe
imul
push
adc
into
cmpsb
out
pop
mov
inc
in
nop
mov
dec
repnz
lds
jb
popa
pop
call
cmp
jne
sub
addb
frstor
bound
inc
nop
mov
popa
or
xchg
dec
mov
sub
jp
movl
push
inc
mov
jb
pop
mov
push
inc
pushf
aaa
xor
in
mov
mov
gs
push
or
or
push
test
push
adc
fxch
pop
pop
popa
call
xchg
rolb
xor
jae
add
stos
xchg
in
out
mov
mov
call
push
mov
mov
and
mov
sub
jecxz
arpl
enter
xchg
daa
popf
jmp
stc
mov
loopne
data16
test
ja
mov
sbbl
ficoms
movsb
cmpsb
shrl
popf
mov
mov
mov
dec
xchg
ss
cmp
jmp
mov
jl
cli
test
in
jge
mov
jo
imul
clc
pop
jnp
ficompl
rorl
loopne
pushf
xchg
ljmp
pop
mov
jmp
sub
push
push
pop
cmp
test
loope
add
push
xor
lock
popa
pop
les
push
pop
dec
bnd
pop
adc
lret
or
fmuls
and
cmpsl
insb
xchg
test
iret
sbbb
in
add
mov
pushf
fimuls
xor
jle
push
decb
jne
inc
aas
fadds
imul
and
add
push
sub
outsb
dec
gs
jle
out
jmp
enter
insl
mov
xchg
or
cmp
fsts
xor
rorl
pop
dec
add
orl
scas
cmp
mov
inc
pusha
pop
xchg
mov
add
inc
and
imul
gs
jne
inc
andb
fldpi
fstl
mov
cmpb
xor
push
gs
pop
jmp
cmpsb
mov
sub
stos
in
xorb
cli
cmpsl
cmpsb
pushf
mov
lock
adcl
cld
xchg
and
jnp
fldt
cmc
das
mov
dec
inc
pop
dec
jmp
and
mov
test
test
lahf
xor
push
push
add
scas
pop
inc
xor
mov
aam
inc
dec
cmpsl
call
jne
sub
fildl
cltd
jp
ja
xor
test
test
xchg
push
movsl
xor
stos
cmp
sub
cmp
mov
sub
jae
les
jmp
in
leave
push
lret
or
insl
xchg
fs
dec
dec
scas
inc
out
sbb
pop
xor
dec
cmp
mov
nop
in
jbe
leave
lods
rol
out
adc
das
xor
je
sbb
pop
out
ss
rcll
adcl
mov
mov
cmp
out
xor
sub
mov
movsb
cmp
insl
movsl
mov
call
jp
xchg
sbb
xor
adc
jno
or
add
fmuls
pop
push
sub
clc
in
jmp
mov
push
test
ljmp
mov
jbe
fisttpll
cwtl
movsl
jne
cmp
jne
mov
mov
mov
push
inc
addr16
shrl
xor
out
inc
nop
sarl
scas
sub
out
lahf
and
inc
loop
or
sub
pop
jg
xor
lahf
js
ficomps
cld
loopne
jmp
mov
hlt
xor
sti
mov
cwtl
and
lret
pop
fs
lods
or
shrl
push
lds
mov
lret
push
push
and
jno
adc
adc
movsl
out
inc
in
xchg
outsb
fwait
jl
cld
repnz
sub
cmp
mov
xchg
sbb
add
mov
adc
loope
aad
lds
cmp
mov
adc
push
sbbb
sbb
repnz
sahf
jns
out
sbb
pop
cltd
bound
cmpsb
mov
xor
aas
das
imul
mov
jle
aam
mov
pop
jg
add
rorb
jb
add
pop
and
push
lods
push
jge
pop
rolb
xchg
in
mov
repz
movsb
fnstsw
cmpsl
add
out
mov
lret
xchg
pop
notb
arpl
in
insl
mov
in
ficoml
test
push
sbb
je
pop
jne
lods
out
pop
add
adc
icebp
pop
filds
in
jns
aas
fldt
repnz
ret
inc
scas
push
in
cmpsl
mov
inc
xorl
or
lock
inc
fisubs
xchg
xchg
in
lods
jge
push
sub
xor
adc
mov
jb
jl
cmp
adc
jno
cmpsl
clc
aad
mov
test
mov
pusha
jmp
xchg
mov
jns
loope
jae
or
sbb
jg
or
sbb
roll
lahf
lahf
fidivl
or
dec
dec
and
insb
int
or
and
jnp
cmp
jae
mov
mov
mov
and
sbb
xchg
repz
mov
nop
in
inc
cmp
and
repz
into
sbbl
xor
shl
pop
out
pop
ret
sbb
stc
clc
dec
ret
lret
push
movsb
adc
pop
test
xor
jle
icebp
stos
mov
icebp
mov
sti
repz
mov
xchg
clc
mov
or
or
movsb
jle
jae
sahf
cltd
dec
testb
mov
das
push
out
addb
pusha
mov
cmp
icebp
push
nop
daa
gs
pop
mov
xlat
cmp
sbb
mov
xor
inc
xor
sub
clc
es
jle
dec
cld
sub
sti
add
in
sub
jge
dec
jmp
loope
into
cltd
in
inc
mov
mov
mov
mov
js
sub
add
or
push
scas
inc
xchg
jbe
cmp
rolb
cs
sub
test
fnstcw
mov
nop
xchg
enter
mov
gs
push
mov
adcb
fwait
test
sbb
movsb
pusha
sbb
pusha
pop
int
dec
pushf
shlb
stc
fisttpl
lret
adc
mov
dec
orl
mov
fstpl
xor
xchg
subb
mov
mov
inc
xchg
test
cli
push
xorl
insl
sti
cmpsl
cli
mov
movsb
enter
cmpsl
or
mov
inc
call
push
mov
cli
xchg
popa
shl
adc
popa
xor
and
mov
in
xchg
out
mov
sahf
jmp
mov
push
xchg
jo
xlat
mov
addl
jo
int
mov
mov
call
jb
in
movsl
and
mov
imul
jns
leave
jge
inc
in
mov
imul
add
stc
pop
sub
add
and
pop
or
lahf
push
mov
mov
dec
mov
pop
das
inc
bound
cld
aad
inc
fcomps
mov
fisttpl
jmp
shlb
shrb
lods
fadd
or
mov
mov
adc
xchg
inc
xchg
ja
inc
cmp
mov
lea
mov
jl
adc
push
dec
mov
mull
mov
xor
inc
fwait
cmp
lret
bound
loopne
scas
xlat
and
fdivr
sub
and
mov
adc
xor
enter
stc
jno
jne
xchg
jecxz
out
pop
std
lahf
sub
mov
test
xchg
xchg
popf
and
pop
das
in
push
cs
lcall
adc
xchg
ja
in
orb
mov
mov
testb
xor
sub
stc
jns
xchg
mov
scas
test
pop
and
fdecstp
rcll
pop
aas
gs
test
mov
mov
dec
cmpl
inc
xor
inc
out
pusha
jb
xchg
ret
shr
mov
push
cmpsl
adc
ss
arpl
fcmovnu
imul
jae
pop
pop
pop
pop
jo
dec
xchg
in
push
mov
aad
adc
mov
pop
sbb
adc
jmp
sub
mov
sub
adcl
push
add
and
xchg
andl
xchg
stc
mov
add
mov
repnz
mov
das
mov
andb
mov
cmc
movb
call
in
pop
andl
pop
popa
cmp
pushf
sbb
xchg
dec
add
cmp
inc
jno
inc
sub
ficoms
dec
leave
shlb
sub
out
dec
mov
popf
dec
add
sbb
cmpsl
dec
cmp
shlb
cs
jecxz
mov
mov
icebp
ucomiss
enter
push
sbb
cmp
pusha
cmp
or
sbbb
iret
add
js
fcoms
mov
or
mov
cmp
ficomps
bound
mov
sbb
mov
lret
out
or
jle
adc
int3
dec
lret
sbb
inc
fnstsw
dec
dec
push
fmuls
xchg
mov
jbe
mov
or
add
dec
mov
cltd
or
popf
leave
adc
cwtl
cwtl
idivb
jg
mov
ljmp
mov
inc
mov
test
shll
bound
mov
add
pop
cwtl
mov
xchg
push
xor
aas
adc
xor
imul
lret
xchg
push
sub
mov
lods
cmpl
jmp
or
ret
jmp
addr16
xorl
sub
std
xchg
pusha
adc
xchg
xchg
std
cltd
xchg
in
test
xchg
mov
loop
xchg
mov
and
incb
insl
lds
cmc
out
add
sbb
or
jmp
fidivl
ja
lcall
repz
daa
push
mov
mov
bound
jmp
mov
out
dec
arpl
dec
push
pusha
and
clc
inc
js
jbe
call
daa
pop
arpl
aaa
outsl
stos
aad
pop
sub
xchg
out
jmp
ret
jae
add
fsubrl
dec
sbbl
ror
xor
icebp
cld
mov
dec
sahf
mov
dec
fs
mov
pop
das
pop
test
ret
in
hlt
in
cwtl
cmc
jge
ss
outsb
stos
lock
aaa
jp
and
and
sub
ja
mov
mov
mov
lcall
mov
mov
push
jle
scas
adc
mov
push
xorb
sti
subl
dec
adc
cmp
add
enter
push
push
mov
je
cmp
or
orb
imul
fadd
push
stc
cmp
lgdtl
pop
inc
ja
adc
incl
cwtl
lock
push
fcomps
xchg
int
lods
dec
mov
sub
push
mov
lahf
in
mov
xchg
sub
iret
insl
pop
xor
js
cwtl
xor
push
jp
mov
jmp
bound
jmp
rcrl
or
fcomps
bound
pusha
pop
aaa
xchg
fistl
jno
xor
xor
imul
add
mov
xor
mov
mov
ja,pt
push
int
popf
xchg
hlt
push
lds
addr16
lahf
mov
cli
fwait
xchg
fcoms
addr16
scas
mov
push
ffreep
arpl
js
icebp
int
out
stos
mov
mov
out
cld
loopne
mov
mov
jbe
movsb
mov
cltd
cmp
mov
dec
mov
in
fnsave
data16
shll
add
mov
repnz
pop
shld
xchg
in
out
je
pop
fisubs
xchg
xor
rcr
and
adc
shlb
ljmp
jp
rcl
mov
or
fcoms
jae
popa
orl
std
call
mov
jns
cmp
inc
fs
lret
and
dec
jb
aad
movsb
push
shrl
icebp
pop
push
bound
sub
mov
and
fcomip
xchg
movsl
or
and
test
lods
lods
imul
test
movsb
pop
in
out
fidivs
roll
dec
push
psrlw
dec
mov
inc
cs
lea
movl
xor
xor
pop
test
adc
jle
sahf
imul
dec
ja
push
push
cli
jae
inc
cmp
jnp
jmp
in
daa
pop
data16
add
xchg
push
sbb
mov
sahf
pop
orb
and
sub
or
push
pop
stos
fstpl
push
scas
cli
push
pushf
mov
arpl
push
ret
out
cmp
in
sub
pop
outsl
mov
xor
xchg
js
aaa
push
jp
sub
adc
lcall
sbb
shrl
add
stos
pusha
in
dec
mov
imul
and
in
mov
push
mov
hlt
lods
ja
mov
push
dec
gs
jg
xlat
pop
xor
cli
popa
xchg
mov
nop
push
fsubl
pop
cmp
in
cmc
nop
jo
xor
adc
jg
repz
xchg
iret
inc
xchg
xchg
xlat
cmpsb
sbb
mov
movsb
push
xorl
gs
jecxz
xchg
popf
ljmp
icebp
jns
ror
fcoml
sub
test
pop
fbld
push
xchg
dec
lret
push
out
sub
xor
or
dec
lods
fisubrl
pushf
jg
pop
cmp
daa
inc
test
dec
ret
loope
inc
mov
sub
and
xchg
pop
in
sbb
shrb
pop
sbbl
and
pushl
xor
ret
and
adc
sbb
sub
adc
pusha
sbb
fadds
pop
int
adc
fadds
or
jae
and
and
adc
jno
mov
jge
inc
xchg
fistpll
push
mov
repnz
mov
lahf
inc
addr16
mov
je
adc
fldenv
stos
cmp
in
js
jo
mov
sbb
sub
push
js
inc
jmp
mov
pop
push
out
enter
arpl
imul
int3
pushf
mov
add
adc
fnstsw
cmp
lods
es
imul
aad
or
xorl
aad
xor
dec
orb
imul
outsl
push
xchg
sub
imul
std
outsb
push
fwait
push
loope
lret
jnp
aam
and
xchg
movsb
push
pop
jb
fbld
leave
sbb
and
loop
test
jg
das
mov
cmp
adc
imul
lods
out
test
fists
xor
and
mov
aas
es
mov
jg
mov
inc
xor
inc
popf
int3
lds
rcrl
test
jmp
leave
jmp
sub
rclb
lcall
mov
push
jb
loop
sub
out
rorl
inc
mov
enter
jp
adc
push
pop
xlat
mov
adc
push
mov
mov
dec
mov
cwtl
dec
sbb
xchg
stos
xor
std
adc
jnp
xchg
hlt
or
cmpl
ret
sbb
mov
loopne
popf
push
inc
or
and
orl
adc
ror
pop
andl
subb
adc
insl
push
cmp
fiaddl
mov
insb
cmp
lret
in
nop
filds
sbb
xchg
ret
xchg
in
es
fs
adc
lods
xchg
jp
or
bound
jae
and
adc
rol
cmp
ja
dec
pop
cwtl
orl
imul
outsl
insl
push
imul
cwtl
in
jg
jp
jnp
jg
loope
gs
add
add
cmp
in
add
fcomps
out
lret
mov
pusha
dec
pop
and
mov
mov
ss
jno
pop
das
xor
fnstenv
fs
and
scas
xlat
gs
sub
cltd
aad
mov
sahf
or
jmp
inc
adc
scas
mov
cmpsl
loop
pop
insb
xchg
dec
loope
popa
sub
into
mov
or
mov
push
pop
pop
xchg
dec
addr16
sti
shrl
movsl
jno
adc
inc
mov
adc
out
test
stos
sahf
push
adc
xchg
dec
ficoml
jmp
aas
mov
test
shl
ud2
popa
sub
adc
cmc
mov
mov
or
bound
std
mov
mov
fnsave
inc
jle
imul
hlt
inc
mov
mov
into
mov
outsw
cld
imul
mulps
jle
xchg
cmc
push
dec
xlat
dec
inc
xor
push
pop
ret
push
mov
sub
cmpl
fld
in
lahf
ds
repnz
loop
jns
or
dec
sbb
bound
mov
add
sbb
lds
ss
ret
daa
aaa
mov
or
dec
or
in
xor
dec
fmull
fwait
mov
iret
lcall
orb
dec
pop
dec
movsl
aaa
mov
dec
pusha
xor
inc
or
mov
xlat
jg
mov
sahf
pop
repz
adc
mov
or
idivb
dec
sahf
cmp
jbe
nop
mov
int3
pop
add
aaa
mov
and
popa
lds
popa
clc
cmp
pop
cmp
xchg
lcall
sub
dec
jae
clc
notb
subl
or
into
cmp
cltd
lds
xchg
imul
mov
push
mov
and
popa
data16
out
scas
sub
pop
mov
mov
aaa
pop
xor
cmp
mov
xchg
iret
push
fdivp
mov
lret
jmp
sub
or
fwait
mov
dec
enter
ret
addr16
pop
push
mov
jbe
lret
mov
adc
sbb
fcoms
popf
pusha
leave
jo
push
mov
imul
cmp
andb
dec
push
orl
gs
cmp
or
inc
pop
fmull
inc
lea
sti
mov
xor
enter
pop
sbb
mov
mov
rol
movsb
sub
or
mov
fnsave
flds
cltd
mov
insl
iret
mov
push
pusha
mov
add
adc
inc
out
xor
std
movsb
pop
into
cmp
jb
push
add
adc
xor
cmc
shrl
sub
xchg
mov
push
jnp
mov
clc
xor
xor
pop
jbe
rcl
inc
and
pop
xchg
xor
aad
dec
dec
xchg
aam
push
iret
jb
outsl
or
jbe
mov
dec
mov
adc
lock
xor
mov
add
pop
mov
notl
cltd
sub
bound
xchg
inc
dec
pop
dec
pop
ja
into
frstor
outsb
lods
add
insb
and
rclb
lcall
mov
lcall
shrb
cld
movsl
daa
in
les
int3
or
leave
ss
das
fidivrl
inc
arpl
sub
dec
add
xchg
dec
push
or
dec
and
mov
mov
pop
pop
mov
out
lret
bound
fldenv
ret
ljmp
lods
les
dec
adcl
loopne
stc
jns
fstl
xchg
add
lcall
out
lea
jmp
loope
inc
mov
in
sbb
adc
push
jne
pop
adc
xor
adc
mov
ss
cld
inc
cmpsl
mov
unpckhps
ret
cmp
push
push
aam
into
jne
pop
jge
and
push
pop
fisubrl
xchg
dec
push
push
mov
and
mov
movsb
mov
xchg
leave
push
xor
xchg
lods
ljmp
adc
adc
lcall
add
or
mov
push
mov
jg
push
add
loop
cli
xor
lahf
sbb
cltd
push
dec
jo
movsl
hlt
sbb
inc
mov
inc
dec
push
or
test
push
stc
sub
push
and
notl
adc
in
imul
pop
hlt
inc
mov
lret
cld
mov
inc
xchg
clc
out
jae
loopne
call
dec
inc
push
cmp
fidivs
pop
inc
and
fwait
mov
mov
shrb
inc
in
rol
xor
es
fistpl
sbb
mov
sahf
inc
enter
cmp
cmp
push
xchg
enter
mov
rcll
ja
shlb
test
out
sti
test
inc
rcrl
inc
cmp
jns
pop
shll
lods
mov
outsl
fcoml
push
cmpb
or
push
and
inc
xchg
cmp
sbb
adc
and
out
mov
xor
subl
lret
pusha
push
shlb
adc
jb
sub
mov
xchg
imul
mov
data16
aas
test
mov
into
xor
jbe
jno
sbb
cmp
mov
push
adc
xor
iret
ficompl
sbb
xchg
fisttpll
mov
adc
push
xlat
inc
jle
movsb
test
icebp
push
push
cmp
or
cmp
cwtl
fstpt
mov
mov
jbe
mov
push
and
add
into
sarb
mov
nop
cmc
inc
in
inc
or
arpl
jb
pop
pushf
xchg
roll
in
jno
adcb
insl
cmp
cmpsb
std
mov
xchg
sbb
inc
or
push
add
insl
xchg
imul
add
pusha
stos
pop
dec
cmpsl
push
push
cmp
dec
dec
jns
lret
std
cmp
jmp
test
mov
dec
mov
aas
imul
mov
das
dec
push
std
push
or
int3
imulb
lret
xor
jo
jmp
mov
sub
add
test
mov
mov
jne
sub
or
lock
jge
dec
inc
shll
lret
fsubrl
iret
in
in
push
ljmp
lods
add
stos
mov
rcrl
mov
mov
movsl
mov
in
jbe
loop
in
add
std
sahf
xchg
add
je
hlt
filds
xchg
or
and
xchg
in
dec
je
push
xor
mov
push
sbb
mov
mov
mov
adc
insl
cmp
lods
pop
data16
push
lock
fidivrs
aas
stos
and
and
or
add
dec
clc
arpl
shll
shll
aaa
ss
in
movsl
xchg
jg
pushf
inc
loope
lods
dec
test
cli
or
inc
adc
rorl
adc
mov
sarl
addr16
mov
cmp
lcall
mov
and
mov
sub
pop
stos
mov
xor
lret
fcmove
xor
inc
and
pop
insl
fists
scas
loop
mov
scas
push
mov
add
push
or
clc
jae
inc
adc
push
dec
cmp
ficoms
mov
in
roll
outsb
lods
ss
aam
test
test
mov
repnz
out
in
int
mov
sbb
push
das
xor
iret
pop
add
popf
fcomp
aaa
and
inc
insl
loopne
popf
adc
cwtl
jno
dec
in
decl
dec
adc
xchg
inc
pop
outsl
repnz
pop
add
js
mov
inc
pop
jecxz
push
mov
cmp
aaa
ret
and
fiaddl
pop
iret
mov
movl
inc
sbb
cmp
mov
xor
push
dec
jmp
add
and
das
pushf
ret
repz
out
dec
mov
inc
shrl
mov
and
fwait
xor
lods
and
movsb
mov
mov
in
pop
or
inc
dec
out
jbe
shll
add
xorl
cmpsl
lea
inc
xor
lahf
popa
addr16
or
mov
or
sahf
adc
ret
aas
enter
sub
test
add
cwtl
sbb
sbbb
mov
stos
in
imul
mov
or
sbb
repnz
cmp
jg
push
sbb
movsb
es
sub
mov
call
loope
xchg
cmpsl
fnstcw
pop
add
cmp
vlddqu
cwtl
jecxz
outsb
int3
mov
outsb
mov
adc
pop
out
hlt
jge
in
add
sbb
jle
mov
addr16
mov
test
lock
lret
add
jns
fmull
test
xor
mov
sbb
hlt
je
mov
cmp
cwtl
xlat
ja
mov
loopne
addl
sahf
sti
pop
sti
jo
aam
sbb
add
jns
push
cmpsb
push
stos
adc
rcrl
ret
sahf
or
dec
ror
xchg
int
stc
sbb
jno
or
loope
repz
mov
xchg
cli
in
lds
jae
negb
imul
into
icebp
in
cld
pop
pushf
push
inc
lds
mov
inc
mov
mov
mov
jp
out
in
lahf
adc
out
or
jne
hlt
imul
xchg
add
or
pop
test
iret
lods
inc
push
inc
pop
ss
fisttpl
sti
stos
ret
outsl
inc
inc
jae
xchg
mov
xor
sti
cmp
sbb
inc
pop
sbb
jae
mov
lret
adc
add
xchg
mov
int
aam
jnp
lcall
subb
xchg
mov
or
xchg
cmp
ljmp
clc
gs
xor
aad
xchg
xchg
notb
icebp
in
dec
data16
cmp
rolb
pop
mov
sti
sub
xor
test
xor
fxch
sbb
cvttps2pi
pop
aam
das
sub
je
ss
cmpsb
in
loope
je
jg
cmp
out
mov
mov
lods
cmp
xor
das
fsubs
xchg
sub
push
xor
jmp
mov
pop
inc
cmp
xlat
sub
jle
aam
cs
adc
test
mov
rorl
dec
xchg
mov
popf
mov
lret
jno
mov
pop
xor
mov
das
sarb
add
cmp
test
or
sbb
push
test
mov
sbbl
dec
jo
xchg
sbb
ja
push
or
and
jp
inc
sbb
jge
dec
mov
ret
jmp
sub
fistps
jle
xor
fldl
idivl
stos
sti
dec
sub
ret
cmp
pushf
push
push
and
dec
pop
sbb
mov
add
cmp
pop
mov
repz
cmp
add
out
outsb
arpl
push
pop
inc
lcall
jb
push
mov
loopne
fnsave
into
sub
pop
pop
mov
push
adc
lret
dec
mov
stos
cmp
mov
pop
adc
add
push
cld
loop
ror
jbe
mov
loop
sbb
stc
sahf
cmp
fdivs
pop
sarb
aad
jle
push
xchg
inc
loop
mov
xor
mov
xor
sbb
aad
inc
rcll
mov
adc
inc
or
cli
rclb
imul
ljmp
mov
pop
out
or
pop
into
jns
fildl
dec
mov
fmuls
inc
aaa
push
lds
and
xchg
jb
cmp
xchg
hlt
fwait
push
mov
rolb
jne
sub
repz
rolb
test
mov
push
out
dec
shrl
ja
fnstsw
mov
ret
pop
cmpsb
pop
loope
add
and
icebp
ljmp
sbb
inc
xor
scas
adc
cmp
push
and
sahf
push
xchg
nop
add
mov
push
lock
pop
pop
out
dec
xor
push
cmp
iret
test
je
and
clc
subl
xchg
repnz
push
ja
ret
push
lret
cli
push
inc
mov
inc
sbb
jp
ret
cs
mov
dec
pop
add
out
and
aaa
andl
mov
push
in
push
lock
xorl
fwait
cld
fisttps
lods
inc
mov
out
mov
dec
aad
js
out
lahf
into
fwait
and
rcl
cli
mov
pushf
or
xchg
mov
jno
jnp
dec
int3
mov
push
push
sub
push
dec
ret
test
and
sbb
imul
adc
cmc
fnsave
loope
add
ret
lods
sbb
dec
xor
scas
andl
and
and
pop
shll
fs
sarl
or
outsb
sbb
cmpsl
loop
xchg
imul
dec
scas
lret
test
inc
sub
push
aaa
arpl
push
dec
aas
mov
pushf
ja
gs
and
jae
sub
push
jle
sbb
cmp
mov
jno
clc
mov
fistpll
loope
jmp
push
icebp
and
pop
cs
dec
jecxz
mov
sub
mov
inc
lods
aas
or
inc
inc
mov
test
aaa
rclb
scas
xchg
adc
xor
mov
and
aam
push
das
sahf
shl
andb
in
sbb
or
subb
mov
into
sbb
pop
mov
xchg
rcrl
adc
jo
jne
jne
sarl
in
nopl
ja
xchg
cli
orl
sub
push
imul
xchg
dec
lds
jo
mov
imul
xchg
cli
out
pop
outsb
notl
pop
jle
push
fs
cmp
lock
rcl
sub
sti
int3
mov
repnz
fsubrp
dec
test
inc
dec
jns
cmpsb
mov
repz
mov
push
outsb
mov
cmp
ds
fcoml
xor
xor
push
pop
outsb
add
pushf
add
adc
dec
jecxz
aam
notb
jbe
lret
inc
and
sahf
push
sahf
mov
out
cltd
mulb
push
inc
ftst
mov
jno
mov
jmp
xor
inc
fwait
and
mov
loopne
and
fcomip
stc
inc
mov
mov
filds
sarb
stos
ror
pop
inc
pop
mov
cwtl
jg
lods
mov
adc
sbb
mov
mov
ret
filds
or
mov
and
sbb
xor
repnz
sub
ja
pop
lods
jecxz
pop
popf
pop
ja
and
sbb
xchg
or
push
nop
inc
adc
imul
je
shrl
pushf
mov
xchg
popa
lahf
dec
popf
incb
pusha
shlb
out
pushf
mov
fnstsw
js
es
or
sbb
mov
jmp
insl
stc
jbe
test
sbb
out
sbbl
pop
and
mov
lcall
mov
ss
mov
jmp
inc
jno
dec
cld
jo
inc
add
mov
xor
mov
jb
sbbl
push
pop
fucomip
pop
int
mov
adc
dec
xor
in
pop
push
sub
repnz
jo
ss
xor
frstor
loopne
lds
pusha
mov
ss
ret
fs
iret
incb
mov
shlb
cwtl
dec
mov
mov
ss
in
inc
rcll
inc
lods
dec
lock
lahf
or
inc
rclb
mov
mov
ret
adc
add
pop
repz
pushf
ss
sub
popf
and
cmp
repz
cmp
into
les
test
cmc
das
add
mov
cmp
jae
shll
cmpsl
cltd
lret
cmpb
xchg
lcall
inc
pop
xchg
fisttpll
je
test
rcr
sbb
les
loope
dec
test
mov
jne
mov
push
lcall
or
jecxz
sbb
xor
lds
push
rorb
push
jg
stc
nop
pop
jle
jbe
out
cli
xchg
insb
dec
lds
jno
mov
cwtl
dec
test
fstl
mov
pop
sbb
jbe
cmc
mov
sahf
movsl
push
xchg
pop
xchg
aad
cmp
fsubl
xlat
push
mov
test
cli
shr
lea
or
and
popf
adc
and
push
jbe
aas
xor
ja
push
in
jmp
sub
gs
adc
mov
xchg
imul
mov
jge
and
pop
sub
js
fucom
testb
imul
cwtl
dec
movsl
test
xor
out
mov
outsb
dec
add
mov
sbb
enter
repz
inc
xchg
movsl
aas
cmpsb
sahf
mov
inc
xor
mov
jo
popf
and
out
insl
cwtl
imulb
test
fstps
clc
xor
cmc
xor
leave
push
lahf
fidivl
fidivrs
mov
cmpsl
test
cmpsl
inc
stos
inc
loop
and
pop
cmpsb
rcll
xchg
cmpsl
sbb
xchg
push
leave
popa
push
nop
into
xchg
stos
addl
adc
xor
dec
push
cmp
xorb
inc
and
ss
sub
pop
shll
inc
pop
icebp
push
mov
jno
fadds
adc
fnstsw
cltd
xor
xchg
lds
sub
adc
pop
mov
js
pop
dec
ret
mov
loope
mov
jp
dec
adcb
out
out
jns
mov
inc
je
xchg
rcl
push
xor
mov
ret
add
js
sarl
je
pop
adc
jge
repnz
xchg
nop
adc
ljmp
xor
mov
fwait
incl
jno
inc
lcall
repz
mov
mov
xor
fsubs
cmc
ret
sub
add
aad
clc
arpl
insb
fidivrs
cli
push
mov
js
loopne
jecxz
aaa
adc
mov
addr16
adc
pusha
fs
insl
push
cli
cmpsb
pusha
or
test
or
or
cmpl
mov
push
icebp
faddp
xchg
lea
insl
add
push
mov
inc
leave
call
subl
mov
insl
dec
xchg
repnz
shrl
lcall
hlt
cmp
mov
fisttpll
aas
lods
lret
push
subb
cltd
xchg
inc
or
pop
leave
or
std
jle
std
mov
push
loopne
xor
cld
outsl
mov
push
mulb
inc
jle
inc
sti
dec
je
outsl
jg
mov
cmpsb
dec
adc
bound
in
add
andl
test
mov
or
pop
jmp
sahf
fs
mov
adc
jne
add
push
fisttpll
jle
mov
and
pop
pop
addr16
add
aas
or
sub
push
push
adc
mov
mov
cmpl
cmpsb
jle
out
xchg
mov
mov
and
repnz
add
shrl
stc
mov
insl
or
ret
pop
sbb
out
push
stc
aam
jo
inc
cmpsl
add
ret
inc
push
xchg
mov
stc
out
dec
and
xchg
fcom
xor
add
leave
lret
push
mov
stos
jne
push
iret
cmc
stos
or
sub
xchg
sahf
lock
popf
mov
lahf
stos
imul
popa
jo
lahf
int3
add
inc
cwtl
push
ss
loop
and
shll
jge
cwtl
xchg
cmp
lock
lea
mulb
adc
mov
int3
xlat
jb
add
xor
jns
jae
clc
lahf
sahf
fdivs
add
mov
mov
dec
xchg
lods
mov
lea
bound
inc
lock
add
xchg
dec
test
sbb
add
xchg
testl
lahf
dec
stc
mov
xorb
scas
cmpsl
fdivrl
mov
int3
cmpsl
pop
xor
mov
lock
pushf
imul
xor
push
scas
pop
dec
movsl
inc
jnp
mov
je
gs
cs
adc
sbb
out
and
or
cmovae
xchg
mov
cmp
jmp
imul
adcl
fs
xlat
sub
stc
push
and
lahf
mov
sbb
cwtl
jle
or
int3
push
fs
cmpsl
dec
mov
lcall
lds
rol
stos
pop
push
inc
xchg
mov
mov
cmp
sar
imul
lods
jp
mov
add
je
or
sbb
mov
dec
and
cmp
mov
xor
or
aaa
jb
jno,pt
mov
repz
mov
repnz
mov
pop
sbb
mov
push
frstor
cmp
jecxz
fucomi
jnp
out
push
movb
test
decb
movsl
jg
add
outsl
dec
loopne
jmp
adc
sub
std
mov
shlb
mov
sbb
js
es
jp
add
jle
je
xchg
inc
loopne
mov
push
sbb
xor
inc
or
sub
mov
xor
push
scas
pop
jae
imul
mov
dec
ljmp
dec
outsb
xor
push
and
xlat
in
and
lock
xchg
addl
sub
je
ja
add
jle
lea
lds
fs
ss
std
inc
cmpsb
lahf
sub
stos
xchg
sub
jne
cmpsb
fiaddl
repnz
pop
rcrl
in
add
dec
sbb
ds
and
mov
adc
jecxz
and
enter
fistpl
mov
adc
mov
inc
sbb
daa
jmp
int
outsb
out
stc
xor
inc
ljmp
cltd
inc
cmp
xlat
aad
das
rcr
xchg
lcall
fs
push
xchg
mov
data16
in
mov
dec
out
dec
xchg
jb
lock
adc
lahf
out
dec
fbld
cmp
inc
dec
add
into
mov
adc
out
cmpsl
sub
mov
mov
inc
and
xor
and
in
xchg
xor
mov
inc
fstpt
or
jae
push
addb
decl
or
mov
out
out
jne
repz
pusha
xor
inc
repz
inc
pushf
mov
daa
loopne
sub
into
fstl
pop
lret
inc
cltd
rcr
and
aaa
mov
mov
inc
mov
cmp
push
ret
inc
imul
cmp
xor
pushl
add
sbb
enter
cmp
out
cs
loopne
lock
fmulp
lahf
cmp
pop
mov
je
xor
xor
mov
out
loopne
fs
and
pushf
mov
dec
mov
bound
push
or
out
imul
jg
mov
pop
cmp
mov
xchg
pusha
jecxz
jb
fsub
and
mov
mov
add
xchg
mov
out
lahf
jno
addl
mov
xor
inc
lahf
sub
push
mov
hlt
mov
or
xchg
fwait
xor
pop
cmc
ss
ret
mov
out
je
adc
popf
sbb
adc
clc
push
cmp
shlb
aas
sahf
push
pushl
and
gs
popa
cld
das
fstl
jl
mov
fsubp
inc
mov
rcl
mov
xchg
divl
fs
mov
sbb
les
gs
ret
idivb
pop
ret
std
inc
movsl
or
mov
push
fsubrl
add
loop
sub
xchg
lahf
leave
ja
mov
enter
and
and
push
sub
pop
xchg
stos
pop
lret
enter
sbb
fimuls
or
push
aaa
aad
cltd
inc
sub
pop
jne
lret
sbb
cwtl
xchg
test
or
and
mov
jb
aaa
int
ja
jl
push
xchg
sbb
sub
fisttpll
push
push
dec
sub
out
xor
jecxz
outsb
xor
rcll
add
and
jbe
test
dec
sahf
push
icebp
rorb
mov
lcall
imul
shlb
subb
xor
dec
xchg
cmp
rclb
xchg
cmpl
fwait
imul
nop
shll
adcb
mov
push
sti
xor
jle
jne
cmp
pushf
jnp
in
and
adc
jnp
hlt
push
hlt
lcall
jns
mov
cmp
lret
pop
pop
jns
xchg
sbb
les
dec
add
push
nop
mov
xlat
fnstenv
mov
lock
sahf
scas
pop
je
lods
leave
and
push
imul
lcall
sbb
and
mov
cmp
js
mov
mov
pushl
jl
popa
jae
out
or
test
jno
jno
pop
aam
and
mov
in
pop
dec
mov
lock
add
mov
push
xchg
push
in
pop
pop
fsub
mov
dec
pop
stos
lock
inc
jne
pusha
enter
dec
test
mov
pop
inc
jne
fstpl
stc
cmp
fcompl
lahf
ret
ficomps
sti
lcall
lret
data16
pushf
shll
mov
push
pop
test
push
push
xor
call
push
pop
adc
pop
add
inc
mov
lods
ds
int
cmp
das
xchg
jge
cmp
push
cwtl
cli
dec
xor
iret
mov
mov
sti
mov
or
stos
pop
cmp
das
inc
mov
ss
cmp
in
xor
cmpsb
or
dec
sub
jle
mov
dec
adc
je
push
mov
jo
sahf
inc
or
mov
cmp
mov
push
inc
iret
and
jg
sbb
xor
xchg
dec
inc
lahf
adc
ficoml
repz
xchg
jnp
jmp
fs
rorb
cmp
inc
pusha
push
shrl
mov
xlat
jmp
push
test
push
xor
jb
insl
ret
aad
lret
fcmovu
fwait
inc
dec
mov
xchg
lds
out
jno
jae
popa
aad
adc
jnp
lods
repz
xor
xchg
in
out
sbb
sbb
repz
addb
jns
xor
icebp
imul
dec
or
dec
sahf
sbb
and
das
into
lea
jns
test
push
enter
adc
aad
or
pop
push
mov
mov
aad
jae
rcr
shlb
aaa
mov
shl
sbb
xchg
mov
rcrl
js
xor
xchg
insb
mov
seta
repnz
adcb
pop
and
leave
icebp
add
mov
mov
icebp
and
sbb
adc
pop
xchg
pop
cmpsl
push
cwtl
add
sbb
sarb
aas
ror
xchg
adc
cmpb
xlat
adc
cmpsl
push
cld
jle
in
adc
es
mov
fisubl
dec
push
insl
push
iret
add
dec
sub
out
jo
call
add
mov
jno
js
inc
testl
xor
pop
add
lock
es
adc
push
neg
push
into
cmp
mov
cwtl
inc
xor
imul
and
pop
out
push
ljmp
in
mov
das
adc
push
orb
sbb
push
jne
xor
sbb
push
lods
test
push
mov
lds
push
test
loope
shlb
xor
pop
xchg
ss
ret
sub
mov
popa
and
sti
cmpsl
data16
mov
sbb
mov
fisubrs
stc
shlb
movsl
out
cli
dec
lods
stos
cmp
inc
pop
aaa
push
cmpl
and
pop
cmp
inc
cmp
hlt
leave
lcall
push
mov
pop
xchg
data16
adc
ret
nopl
mov
sub
jo
outsb
inc
jmp
mov
insl
xlat
add
push
add
mov
testb
imul
mov
pop
sbb
lock
mulb
jg
mov
cwtl
addr16
ret
into
xchg
xchg
jb
orl
mov
push
cmpsw
js
sbb
dec
mov
pop
sahf
fdivs
out
insl
jno
fstps
popf
in
les
cmp
test
imul
hlt
daa
xor
sbb
lret
mov
fisttpll
imul
mov
jbe
insl
rolb
or
sbb
pusha
sub
mov
out
les
in
fsubr
mov
insl
cmp
test
bound
stc
loopne
bound
enter
adc
fisttpl
daa
dec
stc
inc
leave
loop
and
xchg
or
cmpsb
outsl
fmuls
daa
hlt
fidivl
xor
leave
mov
dec
pop
xchg
movsb
xchg
mov
popf
outsl
or
fadds
in
shrl
stos
lods
std
out
aas
leave
cs
mov
aas
mov
add
dec
fmul
pop
stc
xchg
cld
xor
lret
and
movl
cmc
stc
xchg
out
into
xchg
lcall
mov
leave
cmp
aaa
jmp
icebp
sbb
cmp
pop
xor
dec
jne
mov
shll
std
idivb
neg
sbb
and
nop
dec
sbb
lea
inc
jns
xchg
dec
ja
mov
idiv
push
aas
cmp
popa
adc
sbb
sbb
jle
mov
xchg
cmp
shrl
push
je
jne
stos
xor
hlt
add
negb
mov
inc
adc
or
mov
into
sub
mov
push
in
cmp
push
test
mov
jnp
add
adc
xor
lds
dec
sahf
or
fwait
rcll
scas
jo
std
jno
jne
lods
sub
mov
mov
cmpsb
xlat
insb
cmp
movsb
shll
push
and
out
fs
loop
cmp
xor
xchg
or
mov
data16
scas
mov
xor
in
push
cmpsl
outsb
xor
push
xchg
fwait
enter
push
jnp
test
rcl
lods
lock
mov
ljmp
push
loop
cltd
push
jge
jecxz
sbb
sbb
int
bswap
divb
jo
xchg
jb
push
add
in
mov
pusha
jle
mov
lret
pop
repz
or
mov
dec
ficomps
adc
fstpt
cmpsb
push
sbb
push
out
dec
jecxz
das
pop
cmp
adc
das
testl
mov
fidivrs
fists
repz
mov
sbb
mov
xor
xor
fnsave
sub
mov
push
push
in
fstpl
pop
test
cmpl
call
movsl
das
cwtl
pop
adc
push
cmp
imul
pusha
or
add
add
insl
leave
add
jg
inc
out
jns
dec
repz
pop
xor
xchg
sub
subb
sbb
pop
jge
lds
dec
das
lods
or
je
mul
scas
xor
fwait
icebp
stos
jns
aad
add
stos
xor
sub
jo
sbb
mov
jns
mov
xchg
int
addb
jae
cmp
int3
shlb
cld
xor
jns
loopne
add
lcall
jnp
in
mov
push
xchg
sbbl
outsb
outsb
inc
cmpsl
cltd
or
iret
bound
mov
sbb
push
mov
dec
not
gs
pop
scas
mov
push
lea
or
call
dec
lods
push
imul
jp
cwtl
insb
in
pop
xor
rorl
add
idiv
sarb
stos
and
xchg
pop
jp
mov
loopne
mov
adc
mov
das
out
xchg
ret
ljmp
mov
add
push
push
jnp
xor
pushf
and
mov
ljmp
cmp
jp
fsts
faddp
jge
les
xchg
push
cmpl
jp
push
sti
xlat
out
pop
pop
negl
data16
jle
in
imul
inc
mov
data16
add
xor
add
mov
sbb
repnz
cmp
loopne
sbb
pop
xor
and
lret
sahf
into
push
hlt
aas
push
xchg
dec
adc
lret
xchg
or
or
shll
fwait
ds
cli
jns
or
cmc
mov
loop
jmp
xchg
dec
sahf
cmc
jae
pop
cmp
rolb
test
pushf
push
xor
fstl
adc
mov
cltd
popa
loopne,pt
mov
or
fdivrs
in
jbe
leave
stos
xchg
js
icebp
xchg
push
lods
fwait
cli
and
dec
xchg
mov
pop
sbb
xchg
pop
lahf
bnd
pop
push
out
jle
cmpsb
xchg
xchg
add
dec
repz
test
jno
push
addr16
lcall
stos
xor
push
ret
js
imul
sub
cmp
mov
cmp
popa
movb
mov
jmp
nop
and
je
loop
jne
out
lret
outsl
add
push
in
pop
shll
mov
mov
clc
fwait
sbb
mov
addr16
push
adc
aas
gs
sub
push
insl
lret
adc
das
andps
xchg
push
loopne
xchg
sub
lock
sub
jmp
sub
add
xchg
jecxz
jmp
jmp
rolb
ljmp
into
jp
mov
movsb
mov
xlat
push
add
negb
and
test
lods
pop
out
mov
outsl
mov
sbb
xchg
push
jnp
pop
fldcw
repz
add
stc
mov
hlt
sub
xchg
fbstp
pushf
je
push
gs
pop
notl
xor
adc
idiv
or
cmpsl
sub
mov
insl
pop
xchg
jmp
mov
and
jbe
add
mov
lret
mov
int3
jns
sub
cmp
or
inc
movsl
mov
loope
movsl
cli
xchg
pop
add
int3
leave
aas
daa
out
add
mov
jecxz
xchg
and
xchg
jns
pop
repnz
out
pop
adc
loop
xor
cmp
adcb
imul
push
pop
sub
jae
stos
pop
das
mov
inc
sub
clc
and
lahf
pop
lods
aam
add
cmpl
test
enter
sub
hlt
sbb
outsb
repz
lcall
cltd
and
std
out
sti
push
mov
mov
pextrw
dec
cwtl
notl
fstl
int3
iret
xor
mov
push
gs
lods
jne
jecxz
push
das
mov
dec
xchg
aad
jle
push
daa
mov
lret
lcall
ficoml
rcrb
inc
xchg
mov
push
inc
pop
jb
in
sub
dec
sahf
and
push
sbb
mov
and
adc
sbb
fcomip
fstpl
jle
mov
cmp
xchg
lret
and
outsl
cwtl
aad
loopne
push
int
int3
outsb
xlat
test
adc
icebp
in
fidivl
pop
leave
scas
add
mov
sbb
shlb
mov
imul
lret
imul
sahf
in
int
pop
mov
in
mov
xchg
clc
cmp
cwtl
aaa
jb
adc
fidivl
adc
loope
test
pop
cmp
xlat
loop
test
int
stos
fs
mov
mov
push
repz
sbb
adc
jmp
cmc
xorb
pop
dec
add
dec
test
shr
cltd
bound
and
xor
sbb
xor
push
pushf
mov
mov
jge
fstp
out
sub
das
dec
ljmp
ljmp
ljmp
add
xchg
dec
enter
inc
lock
les
sahf
stc
inc
fisubrs
push
loop
push
loope
enter
pop
insb
into
mov
jp
pop
enter
sarl
cld
xchg
movsl
js
aad
push
inc
add
sub
daa
mov
adc
xchg
loop
mov
incb
add
mov
sub
jnp
mov
sbb
out
nop
cmpsb
jne
pop
mov
popf
lahf
cmp
sbb
and
std
mov
adc
cmp
push
push
es
mov
jne
lret
sub
xchg
fidivl
sbb
push
cmpsl
pusha
lcall
sbb
fisttpll
out
jb
cs
dec
mov
mov
xchg
sbb
enter
mov
cmp
ss
sbb
mov
stos
jbe
fnstenv
xor
rorb
cmp
pop
sub
mov
xchg
xor
andl
or
sub
mov
lock
fisubrs
hlt
mov
pop
rcrb
test
mov
aaa
xchg
dec
mov
stos
mov
dec
cmp
sub
dec
jmp
scas
ret
fxch
daa
pop
mov
add
add
xchg
fs
mov
aas
daa
sarb
pop
nop
rolb
fsqrt
adc
cs
aam
pop
jmp
sbb
or
ret
icebp
movsb
aam
push
add
aaa
lcall
sub
add
lods
adc
ja
xlat
test
stos
cmp
sbb
lret
arpl
cmpsb
adc
testl
sub
or
addl
pop
dec
sarb
sahf
mov
mov
rcll
outsb
add
jmp
add
into
repz
jnp
fs
jle
adc
scas
sbb
rorl
cmc
or
or
movsb
pop
push
add
adcl
jo
das
stos
inc
rorl
jns
divb
or
push
movsb
stos
add
fsubrs
sub
push
xchg
inc
mov
pop
pop
mov
sbb
movsl
pusha
jg
lea
push
pop
jns
jbe
mov
or
mov
dec
and
orl
cli
stc
dec
adc
ds
mov
jg
nop
andl
pop
adcb
mov
mov
add
push
sbb
adc
mov
js
stos
push
addr16
test
pushf
pop
mov
repz
rorl
push
popa
or
rorb
push
or
pop
shll
pop
rclb
cmp
add
sar
and
stos
or
bound
subb
inc
dec
add
mov
xchg
scas
mov
xchg
ja
adc
pop
hlt
sarb
pop
and
xor
xor
pop
push
imul
imul
int
dec
mov
orl
addr16
pop
sub
rorl
mov
mov
popa
cmc
stc
and
cmp
mull
sbb
xor
adc
rcrb
scas
or
push
adc
andl
fsts
test
das
lds
decl
stos
mov
and
orb
push
gs
daa
xchg
xor
leave
pop
fbld
jns
cmp
cmc
xor
and
mov
and
pop
jmp
out
xor
add
or
dec
sbb
push
jg
fsub
adc
out
cmp
sub
fs
dec
cltd
sub
daa
inc
ror
psllw
sbb
cmp
xchg
fildll
jp
shll
or
lret
push
cld
jg
sub
lea
cld
and
pop
pop
push
dec
dec
sbb
add
mov
push
inc
mov
stos
repz
xchg
aam
and
jbe
call
and
rcrb
in
and
lcall
mov
xor
aas
fsubr
loopne
icebp
mov
xchg
ret
cli
outsb
inc
loop
sub
inc
jmp
sahf
les
insl
adc
test
cli
adc
je
popf
pop
cli
sub
rorl
into
popa
in
xor
fists
je
daa
aas
and
mov
cmpsb
bound
push
lret
xor
or
pop
mov
add
or
sub
aam
pop
adc
in
inc
sahf
sahf
inc
mov
xchg
cli
push
or
xchg
sbb
fcoms
je
push
subl
sub
or
scas
mov
sub
lcall
shlb
jge
xorl
cwtl
std
jle
pop
dec
popa
pop
and
jmp
fsubrp
sarb
mov
add
stc
bt
lds
aad
inc
test
mov
in
iret
aam
dec
adc
in
aaa
inc
sub
push
inc
pop
xor
add
jne
add
clc
shrb
jl
xor
in
out
cltd
push
mov
pop
cmp
mov
hlt
pop
push
jns
adc
add
add
push
ja
dec
shlb
ret
add
sbb
rcrl
sti
xor
cmc
inc
xchg
push
popa
fmuls
mov
mov
int
jl
fcomps
es
add
sahf
pop
sbb
xchg
repz
xchg
add
push
xchg
in
dec
xchg
add
pop
inc
cmp
faddp
xor
ljmp
push
lahf
sub
pop
mov
scas
ret
mov
loopne
aaa
or
mov
push
cmc
call
fistpl
ljmp
fimull
mov
mov
shll
inc
lcall
rclb
fisubl
and
in
pop
sbb
xchg
gs
repnz
xlat
mov
jbe
jb
push
in
into
xchg
xchg
sbb
movsl
je
jne
hlt
fdivr
and
mov
mov
lahf
xchg
in
arpl
movsl
in
pushf
push
jg
dec
rcrl
mov
xor
inc
jmp
lret
std
xchg
push
or
and
aas
es
sub
lds
sub
aas
ja
jnp
in
mov
lret
lcall
jo
mov
dec
fld
loop
and
cli
fs
popf
shrb
clc
js
call
pop
push
stos
test
xor
fcmovnu
and
shlb
dec
mov
jl
mov
ja
ds
cmpb
nop
inc
xor
fwait
dec
lea
jmp
in
test
jns
mov
adc
sbb
mov
inc
in
sti
and
movsb
jp
je
mov
ljmp
add
test
stc
jnp
jecxz
jle
xchg
dec
cmpsb
cmp
and
sbb
fidivrs
jb
jmp
dec
out
dec
out
dec
cmp
mov
test
pop
push
fsubs
aam
lret
xchg
shl
in
loope
inc
pop
cltd
pop
test
shl
out
movsl
hlt
dec
mov
mov
lea
xchg
insl
lcall
push
out
sbb
xor
xchg
inc
outsb
in
jge
add
inc
xchg
mov
xchg
sub
fimuls
jne
sti
push
inc
aaa
nop
cmpsl
jle
xchg
xlat
sbb
lods
lahf
push
push
jnp
jmp
loop
pusha
sub
sub
adc
popa
push
fdivrs
mov
jne
pushf
stc
sbb
es
rcll
pop
negl
cli
xchg
aad
xor
and
push
enter
es
mov
sub
push
adc
enter
inc
xor
clc
jg
ds
and
push
pop
int
loope
inc
mov
jge
mov
xchg
lret
scas
outsl
push
lret
xchg
test
mov
aaa
int3
mov
insb
dec
jmp
cmc
push
les
insl
rcll
imul
ret
xchg
cmp
jae
mov
inc
loope
loopne
aad
push
xchg
repnz
inc
and
or
inc
push
rclb
std
cld
add
add
in
and
pop
scas
mov
subl
xchg
mov
add
in
lds
insl
pop
jnp
repz
add
xor
aas
add
adc
sbb
js
mov
push
mov
out
xor
cmp
and
outsb
dec
subl
int3
cltd
xor
mov
mov
fstpl
gs
xor
inc
or
or
fs
adc
xor
cmpsb
shll
repz
in
int3
add
std
adc
inc
in
es
xchg
lea
in
aam
pop
sbb
xchg
mov
gs
ss
jb
adc
jle
inc
pop
lahf
fdivl
lahf
push
ret
negb
outsl
fisubl
sbbb
push
pop
xor
inc
mov
je
pop
bswap
ret
es
mov
push
clc
shlb
xchg
mov
cmpsb
imul
out
add
and
push
mulb
pop
dec
mov
js
decl
test
xor
ss
dec
mov
lds
adc
jns
cmpsl
fdiv
cmp
inc
cld
push
or
push
rol
push
icebp
push
movb
or
scas
sbb
loopne
jnp
repnz
stos
aas
inc
mov
xchg
test
adc
loopne
sub
push
repz
pusha
xchg
loopne
test
sub
lea
push
xchg
outsb
popa
addr16
jo
out
xor
das
mov
cld
xor
aaa
sub
fdivrl
xorb
sbb
jg
inc
inc
push
adc
sbb
or
inc
loopne
pop
push
mov
push
cld
dec
mov
pusha
mov
cmp
jbe
ljmp
andb
pop
loope
jle
fisttpll
jb
aad
in
ret
adc
xchg
addl
inc
add
pusha
je
xor
xchg
sbb
call
js
stos
scas
adc
add
inc
in
inc
jge
fisttpll
dec
sti
xchg
fbstp
aam
jne
imul
jmp
mov
test
lods
movb
lret
xchg
push
les
loope
dec
sub
mov
and
pop
or
or
sbb
and
fnstenv
adc
in
cmp
sub
lock
mov
insb
js
add
pop
cmp
outsl
mov
or
fildll
sbb
mov
mov
pop
xchg
sbb
lret
in
pop
xchg
insl
sbb
sbb
int3
mov
jns
lret
fxch
mov
imul
ret
orl
inc
xchg
icebp
add
lret
jecxz
nop
pop
mov
adc
cmp
xor
pop
xchg
xchg
mov
xchg
sbb
mov
lods
lcall
mov
lret
push
mov
ja
sarl
leave
fisubl
sub
push
add
clc
push
mov
mov
pop
sti
mov
rcll
jle
mov
icebp
int
xchg
mov
in
and
stc
and
mov
fwait
xlat
mov
aad
ss
mov
mov
arpl
or
fcompl
pop
sbb
out
aaa
push
dec
mulb
sub
mov
call
and
sbb
pop
push
mov
fadds
push
test
inc
bound
push
jo
push
mov
sub
lock
mov
add
or
in
divb
in
mov
mov
mov
jmp
pop
aas
insb
clc
sbb
push
popf
jbe
aad
scas
dec
add
and
mov
or
jge
sbbb
cltd
inc
sbb
push
fs
pop
mov
and
test
lret
xorl
jbe
sbb
push
fcmovnbe
je
and
xor
xlat
dec
push
imul
and
jne
fdivl
cmc
sbb
xorl
js,pn
push
mov
push
inc
or
mov
xchg
fisttps
fs
cmp
mov
mov
pop
pop
cmp
xor
out
scas
mov
lods
cmpsl
clc
cmpsl
in
incb
or
pop
jne
out
or
sahf
adc
lds
dec
js
into
push
loope
xchg
and
hlt
sbb
or
daa
stc
mov
mov
push
sub
and
popa
xchg
fildll
andb
xor
popa
mov
data16
adc
outsl
pop
xor
out
jae
test
repz
test
scas
in
pop
out
dec
ja
push
insl
push
pop
loop
push
add
test
jecxz
inc
and
andb
imul
fadd
pushf
cmp
ss
lret
push
repnz
call
ret
les
andl
adc
stc
fstpl
sbb
dec
cltd
ret
aas
cmc
jo
jp
adcb
xchg
mov
xor
nop
mov
mov
lahf
push
mov
out
ffreep
and
cs
pop
sti
sub
sub
ljmp
lods
sbb
jg
gs
cwtl
scas
es
xchg
mov
push
cmp
xchg
sti
loopne
lea
shll
cmp
xchg
dec
push
pushf
pop
pop
pop
xchg
cwtl
inc
mov
out
add
xchg
push
cmp
adc
jb
pushf
sbb
sarb
pushf
pop
lahf
repz
adc
mov
ror
cmp
je
inc
pop
mov
sti
neg
inc
or
push
xchg
mov
cld
in
add
out
aam
sahf
fbstp
adc
stc
mov
sub
jne
sub
hlt
mov
gs
popf
scas
mov
jns
sarb
iret
or
ds
xor
mov
sub
scas
pop
mov
sahf
push
mov
fcmovnb
push
and
mov
mov
cmp
std
mov
mov
mov
mov
sub
cmp
lods
and
aad
push
jne
int
push
push
out
in
mov
test
in
pop
out
pop
les
aam
add
pusha
inc
inc
call
out
icebp
lock
xchg
arpl
mov
add
mov
outsl
adc
dec
and
clc
cli
xchg
orl
outsb
xorb
js
xchg
dec
lods
test
xlat
dec
xchg
insb
add
xchg
sub
jg
inc
and
cmp
xchg
pop
imul
mov
arpl
pop
bound
adc
or
fs
and
dec
mov
data16
mov
lahf
out
sti
loopne
clc
add
mov
pop
inc
and
mov
je
xchg
cmpsb
and
in
pop
enter
pop
cwtl
fs
cwtl
xchg
mov
lock
mov
xor
add
inc
scas
divl
call
push
pop
mov
mov
sar
jecxz
mov
xor
or
sbb
and
xchg
jns
mov
pop
mov
sub
scas
loop
pop
cmp
mov
add
jle
jge
inc
mov
stos
repnz
lahf
adc
sbb
inc
xor
push
nop
push
xor
mov
sub
cmp
xorl
movsb
cmpsl
cld
inc
pop
iret
dec
insb
pop
hlt
or
inc
jmp
mov
sbb
in
mov
jo
sub
sbb
je
addr16
or
adc
jg
or
in
sub
loopne
jnp
mov
rcrb
inc
pop
out
movsb
out
fwait
aam
adc
xchg
iret
popf
mov
pop
addr16
mov
fsubl
lea
jo
mov
adc
pop
jno
sub
out
sti
or
add
push
xor
inc
in
xchg
dec
movsb
ret
data16
push
lret
mov
fiaddl
jns
mov
mov
mov
fcomip
dec
push
jmp
and
push
fisubrl
add
mov
outsb
push
jecxz
fdivp
cld
sti
mov
xchg
daa
mov
cmp
xor
sbb
iret
cwtl
add
in
mov
adc
sti
iret
cmp
pop
mov
sarl
fnstsw
adc
mov
xchg
xchg
ja
mov
mov
jle
loope
xchg
fdivl
loop
orb
jmp
dec
sbb
pop
add
jp
mov
jae
pop
and
call
xchg
cwtl
subb
xor
or
jg
xchg
push
dec
jbe
cmp
xorb
loope
mov
mov
and
xor
pop
jp
cmp
sbb
add
push
mov
in
xor
lret
ja
mov
mov
stc
jo
and
sbb
sub
gs
nop
mov
nopl
outsb
pop
inc
addr16
lret
out
sub
pop
mov
pop
push
push
sub
pop
std
lret
icebp
mov
push
cmpsl
fwait
mov
xlat
in
mov
or
imul
pop
and
in
fsts
push
inc
xor
mov
jle
sub
and
lods
int
push
mov
cli
test
les
clc
mov
push
hlt
addr16
pop
jmp
or
lahf
pop
dec
add
aad
lods
cltd
lcall
insl
out
mov
lret
fwait
daa
into
mov
jno
dec
sbbl
sahf
mov
mulb
push
add
fisttpl
mov
sar
push
cmp
fstpt
jne
sub
jp
adc
lods
pop
into
ficompl
test
xor
mov
dec
in
push
mov
fmuls
fstpt
jge
xchg
xchg
movsb
inc
mov
ljmp
xlat
daa
cwtl
ljmp
mov
test
push
leave
ss
jge
outsb
sub
mov
xchg
dec
and
dec
movsl
stc
cmp
int3
push
addl
lcall
cld
int3
cs
cmpsb
sub
pop
push
gs
xor
std
aas
xor
inc
hlt
les
add
push
mov
xchg
loopne
push
nop
sbbl
and
mov
pop
loopne
lret
xchg
lea
adc
or
jmp
cmp
mul
es
push
decl
sub
mov
cltd
inc
sub
mov
cwtl
mov
dec
inc
cltd
lret
adc
sbb
add
sbb
sti
mov
call
push
cltd
shll
dec
mov
mov
mov
jge
stc
sbb
out
aam
out
and
test
call
jns
pop
es
xchg
mov
jb
add
and
push
lret
pop
jmp
mov
rcrb
xlat
sti
cmp
push
aaa
es
subb
cmpsb
add
cmp
push
or
das
mov
inc
pop
cmp
fbld
and
clc
lock
test
aaa
rolb
aaa
and
test
sbb
and
xchg
push
adc
xchg
out
out
imul
push
movsb
imull
fcoml
fbstp
stos
cmp
outsl
gs
add
negl
out
loopne
sbb
inc
sbb
add
cwtl
xchg
sub
fcom
fdivr
lds
negb
pop
bound
mov
leave
or
inc
mov
ljmp
lods
sub
adc
mov
mov
enter
dec
cmp
outsl
pop
jp
arpl
xor
test
xor
push
lahf
push
bound
roll
mov
pop
pop
icebp
cmp
andl
aaa
lods
stos
outsb
mov
fcmovbe
lcall
test
loopne
sub
mov
insl
lods
mov
mov
sub
push
movsb
cltd
out
mov
ljmp
clc
mov
ds
jns
mov
hlt
dec
xchg
adc
lds
pop
and
into
stc
jg
xor
sub
scas
fcomps
addr16
pop
daa
mov
insb
xor
jbe
sti
sub
mov
rclb
aad
push
xor
xchg
xchg
movsb
push
jecxz
lds
xor
pop
sbb
mov
cltd
push
mov
iret
sub
add
in
lcall
pop
or
test
jmp
mov
dec
cwtl
out
pushf
dec
cmpsl
fwait
dec
dec
sbb
imul
mov
jnp
add
sub
test
ss
enter
push
pop
pop
cmp
push
mov
insl
cwtl
lds
in
out
cmp
ret
aad
sbb
pop
js
pop
sbb
mov
out
mov
fwait
sub
xor
mov
adcb
call
adc
ds
fisttpll
inc
fbld
cmp
sub
or
xor
lods
sbb
insb
push
jo
xor
sub
cmp
xor
aaa
and
sar
nop
sbb
cltd
loope
mov
mov
inc
fnstcw
lahf
push
pop
xchg
sub
popf
push
mov
repnz
test
enter
pop
adcb
cmc
scas
push
lahf
lret
ret
adc
arpl
ret
mov
lahf
xchg
je
js
jmp
sti
mov
jp
xchg
aad
int3
push
add
lret
ljmp
popf
and
enter
pop
mov
xor
inc
rcll
lret
mov
cmp
cmpsb
jb
push
xor
jo
mov
cmp
out
popa
and
dec
pusha
lea
js
pop
jne
cmc
push
xor
cmpsl
or
jno
ljmp
movsl
call
ja
test
in
cmp
inc
xchg
imul
sbb
xchg
mov
mov
sbb
push
sti
and
mov
jp
jo
addb
xor
xchg
push
push
bound
cmc
clc
movsl
mov
mov
mov
rorl
fbld
pop
push
sub
add
loope
mov
mov
lahf
add
ret
and
inc
in
icebp
and
je
icebp
xor
sahf
in
adc
mov
lret
cld
adcb
inc
xchg
and
xor
mov
mov
int
mov
arpl
into
lods
iret
jg
mov
sub
push
jb
shrb
inc
mov
cld
das
gs
xchg
push
imul
adc
jae
mov
cwtl
xchg
mov
sub
clc
adc
aad
pop
fstl
in
js
xor
sub
enter
dec
pop
jle
push
mov
mov
mov
or
or
icebp
mov
clc
dec
dec
mov
stos
pop
dec
push
dec
jbe
movsl
inc
dec
fwait
sub
or
inc
push
outsb
ret
inc
aam
shlb
dec
mov
jae
dec
test
push
mov
mov
out
xchg
sbb
sbb
mov
mov
sub
insl
and
hlt
arpl
add
inc
adc
mov
pop
repz
lods
aaa
jl
loope
mov
fwait
mov
sbb
mov
int3
cmp
sahf
mov
adc
xchg
stos
mov
lret
movsb
ficompl
jbe
xchg
adc
mov
dec
mov
add
xchg
pusha
test
dec
and
data16
push
xor
stc
push
push
lods
pusha
xchg
cli
fs
gs
mov
mov
sub
mov
inc
inc
or
divl
or
cs
and
scas
popf
dec
mov
pushf
jecxz
and
jl
cmp
enter
push
lea
je,pn
pop
cmpsl
stos
jle
stc
pop
mov
div
push
cmpl
pop
pop
mov
aas
frstor
xchg
mov
adcl
scas
mov
mov
adc
and
push
lock
push
psraw
jmp
sbb
mov
shrb
mov
adc
pop
sahf
xor
scas
fcoms
xchg
or
rclb
push
aas
popf
shll
mov
ret
pushf
sub
inc
mov
hlt
xlat
jns
pop
push
icebp
sub
and
mov
xor
scas
jo
jp
pusha
call
jmp
push
pushf
dec
sbb
sub
inc
fisttpll
add
scas
ret
pop
xchg
ss
fs
push
mov
sbb
xor
pop
lea
cltd
sbb
jno
lahf
mov
mov
out
sbb
pop
xchg
cmp
mov
mov
dec
dec
inc
xchg
mov
lcall
cmp
les
mov
mov
out
cmp
xchg
lods
inc
push
subb
jbe
sbb
ds
pushf
out
iret
outsl
xlat
ret
adc
push
shl
mov
adc
call
xchg
dec
call
dec
cmp
pop
std
and
imull
push
sub
mov
sub
insl
test
lods
jno
xchg
lret
jo
cmp
jge
jno
pop
cld
lret
lcall
lret
sbb
lcall
shr
jae
jae
adc
or
inc
xchg
rep
std
cmp
mov
adc
lods
jae
mov
pop
lods
push
popf
dec
out
xor
and
pop
cs
xor
imul
cmc
xchg
jo
loop
mov
insb
cld
cmp
adc
addb
mov
dec
inc
adc
jle
xchg
cmpsb
mov
inc
or
xor
mov
jg
int
jmp
push
push
adc
sbb
movsb
fcompl
fwait
dec
hlt
push
mov
popf
daa
sarb
outsb
pop
int3
mov
sub
add
mov
mov
fcmovnu
stos
mov
into
inc
xor
or
pop
insl
cltd
sbb
jmp
push
imul
hlt
addr16
push
lock
xor
sbb
mov
pop
jmp
pusha
outsl
insb
xchg
roll
fstl
fwait
mov
icebp
divb
dec
adc
in
repz
idivl
xor
stos
pslld
cmc
push
or
xor
insl
imul
mov
push
dec
movsb
insl
or
pop
rcll
add
jmp
stos
and
shlb
cmp
sub
mov
jge
js
jno
pop
jge
out
mov
xor
push
jmp
outsb
dec
mov
mov
push
dec
ret
xor
push
fst
aad
xor
adc
pop
sub
mov
popf
lea
and
ffree
imul
inc
jge
fsubrl
push
in
sub
pop
xchg
adc
lds
xlat
pop
mov
adc
inc
lods
cmp
ss
incl
lods
push
jb
es
xchg
dec
out
stos
mov
push
ljmpw
inc
mov
mov
es
inc
lods
mull
mov
sub
mov
jns
jmp
xor
add
aaa
lock
xchg
outsb
push
sbb
pusha
popa
lods
js
mov
inc
jp
cmp
jns
adc
hlt
addr16
push
sub
fdivl
sub
mov
cmpsb
decl
xchg
addb
cmc
and
push
mov
imul
es
movsb
jg
jmp
mov
maskmovq
testl
xchg
pop
inc
repnz
xlat
mov
sub
lret
cld
outsb
pop
ror
pushf
dec
push
xor
mov
pop
dec
cmp
lcall
inc
xor
insl
filds
or
push
cmpb
pop
lock
shl
in
mov
mov
int3
push
add
pop
scas
arpl
add
dec
xor
roll
cltd
push
inc
lahf
idivb
jge
and
xchg
push
pop
roll
aad
or
cld
and
lret
dec
adc
xchg
bound
shr
arpl
lcall
das
mov
fsts
mov
jo
lret
mov
cmp
call
sbb
jp
xchg
push
icebp
dec
les
and
in
pop
popf
inc
cmp
pusha
imul
sarl
movsb
push
push
pop
add
dec
jb
cli
dec
pop
icebp
ljmp
mov
mov
stos
mov
out
cmp
xor
mov
add
leave
lock
cli
data16
xchg
jne
data16
push
lahf
cmpsb
adc
repz
sub
mov
pop
adc
push
jbe
jle
shlb
cld
push
mov
nop
enter
mov
pop
int
cmp
xchg
add
jmp
in
dec
pop
aad
push
jo
cmovbe
les
push
int
lds
shlb
into
repz
push
sbb
and
mov
test
jmp
inc
xor
xchg
sub
mov
fisttpl
cs
nop
jle
xor
dec
add
aaa
pushl
cmp
cli
test
xchg
xorb
lret
push
sbb
inc
xchg
stos
shll
sub
mov
mov
pop
cmp
sbb
cld
pop
xchg
cmp
mov
loopne
cmp
stos
mov
push
ss
les
push
fidivrl
mov
sbb
divb
xchg
pop
push
sub
les
xor
and
fcomps
pop
stos
sahf
pop
adc
fisttpll
fwait
cmp
cld
faddl
jae
out
sbb
nop
dec
pop
mov
sub
add
in
aaa
data16
incb
sarb
inc
mov
cmpsl
aaa
jecxz
jbe
call
shrl
dec
ja
sbb
shl
inc
les
or
mov
push
lods
in
aam
cmpsb
xchg
fidivrl
movsb
xorb
lret
insl
iret
js
xchg
in
xor
andb
inc
es
mull
shld
adc
and
sub
xor
dec
lock
int
mov
aad
push
sbb
dec
dec
pop
fdivrl
pop
rcl
cmp
test
in
imul
inc
dec
subl
lds
aad
and
shrl
ds
nop
sub
inc
ret
imul
and
or
js
mov
enter
cmp
inc
mov
xorl
or
insb
jl
push
jae
les
cli
or
xchg
and
das
dec
xchg
dec
or
ret
call
nop
insl
mov
cmp
fsubrs
pushf
es
jne
roll
dec
mov
inc
ja
or
jbe
jl
and
call
outsb
xor
and
jmp
cmc
js
mov
pushf
sub
lret
xchg
test
ljmp
or
sub
mov
arpl
ljmp
adc
jmp
jno
fmuls
adc
mov
js
sbb
dec
popa
push
pop
mov
jecxz
adc
mov
or
jno
inc
inc
push
mov
mov
je
in
into
xchg
lcall
inc
es
jnp
rolb
das
cmc
push
inc
jb
lods
mov
ffreep
jmp
mov
and
push
dec
in
sub
ror
gs
int3
call
imul
in
stos
hlt
sahf
and
popf
adc
rorb
jg
dec
dec
sub
cmpb
popa
xor
repz
mov
adc
mov
call
ds
cmp
cmpsb
sub
pop
test
dec
sbbb
ljmp
pop
mov
push
sbb
outsl
pushf
mov
xchg
and
bound
add
iret
test
push
mov
xor
push
adc
sub
mov
bound
mov
fmull
icebp
or
add
out
push
pop
xor
adcb
pusha
add
js
and
ljmp
les
mov
dec
test
call
fisttpll
pop
lret
in
mov
mov
loope
and
mov
fstl
xchg
aaa
out
mov
aad
ret
jb
or
lret
das
xchg
or
or
pop
and
pop
mov
dec
test
xchg
cltd
inc
pop
icebp
outsb
xlat
adc
lods
outsl
es
push
std
and
mov
sbb
cmc
lea
rol
in
mov
stos
mov
cmpsl
test
and
mov
adc
mov
xor
ja
mov
lret
inc
mov
dec
push
test
lahf
cmp
cmp
andl
mov
add
and
and
fs
aas
or
test
and
repz
cmp
dec
push
or
mov
add
xchg
push
jg
mov
mov
inc
cs
lods
and
cmp
push
cmpsl
or
ss
divb
cmp
pop
mov
inc
xor
inc
and
jecxz
xchg
or
data16
out
insb
fnsave
push
sub
cmp
loopne
ja
mov
dec
cmp
sub
jmp
ja
out
xchg
and
dec
jb
mov
adc
xor
ss
mov
in
or
jo
std
sub
mov
mov
repz
jle
in
cmp
sbb
push
cmp
sbb
mov
push
test
cmp
push
xorb
shll
xor
inc
inc
pop
push
xor
bound
popf
sub
cld
cmp
mov
cmp
cmp
pop
xchg
xchg
jno
dec
data16
xor
aad
imul
add
pop
adc
mov
xor
inc
lods
pop
dec
ss
adc
dec
sarb
inc
xchg
or
pop
movsl
sub
aam
cs
mov
pop
adc
pop
xchg
xlat
shl
dec
fdivrl
xor
adc
pop
sti
scas
xchg
fwait
jge
cmc
jns
test
or
mov
jbe
mov
pusha
mov
not
notl
or
sbb
push
dec
notb
and
jmp
inc
push
inc
or
jmp
add
enter
xchg
test
xor
or
jge
es
mov
add
jp
cmp
cld
gs
lcall
cmp
sbb
xor
in
pop
outsb
cmp
in
xor
cmp
stc
out
dec
lahf
or
clc
xor
cwtl
pop
push
sbb
adc
aaa
mov
dec
xchg
nop
inc
xor
jge
std
mov
or
mov
inc
sub
push
jp
dec
add
dec
testl
iret
popa
or
pmullw
enter
mov
and
push
pushf
outsb
lret
aam
pop
fisubrl
and
imull
lahf
or
je
in
add
mov
cmp
loope
cs
cmp
cmp
add
insl
dec
or
push
push
lods
push
popa
add
jp
xchg
add
mull
add
ror
outsl
xor
mov
mov
jg
dec
pop
das
pusha
sbb
out
sbb
lods
test
mov
push
dec
sbb
sahf
mov
jae
sbb
shlb
mov
jmp
xchg
pop
lds
lods
and
popa
xor
and
xchg
test
out
daa
push
pop
cmp
sub
dec
pushf
dec
fldcw
xor
mov
mov
iret
xchg
pop
sub
iret
movsl
mov
cltd
push
mov
rcl
pop
scas
mov
imul
sbb
jb
or
cli
jmp
out
xchg
xchg
loop
test
inc
jecxz
out
sub
push
int
xchg
mov
pop
jns
enter
movsl
mov
cld
icebp
jp
dec
jg
fistl
scas
int
jns
or
inc
lahf
sbb
cwtl
in
lahf
subl
sub
dec
xchg
jo
or
cmp
stos
pop
addr16
pop
jl
mov
sub
xor
adc
jle
xor
add
cli
sar
es
push
jb
movsb
out
xor
sub
push
push
addr16
into
mov
dec
xchg
scas
and
fdiv
das
xorb
ljmp
mov
xchg
lcall
add
aaa
cld
jle
or
cld
dec
inc
cmp
push
mov
and
jnp
out
xchg
xor
iret
mov
frstor
daa
xchg
es
pushf
ret
mov
and
js
aad
fmul
movsb
hlt
sub
and
xor
fadds
sbb
dec
mov
inc
call
rol
pop
mov
inc
lods
sub
lahf
ret
push
roll
pop
loop
inc
in
clc
ds
lret
dec
cmp
mov
sub
dec
add
jae
and
lods
mov
cmp
sub
je
mov
pop
jle
es
and
ret
cmp
out
xchg
popf
shrl
sti
addb
sbb
fistps
xchg
lahf
push
dec
pusha
cmpb
sub
std
sbb
mov
cmc
lds
rcl
xchg
xchg
mov
insb
int3
inc
dec
aam
and
lret
and
andl
test
nopl
push
and
test
cmp
and
inc
es
ret
cmpsb
fwait
lock
ds
cltd
repz
cld
jae
into
ja
cmpsl
push
scas
adc
scas
rclb
inc
ret
gs
cmp
lock
xor
xchg
push
pop
mov
aam
adc
test
jl
insb
jg
push
out
push
and
imul
cmc
sub
fstpt
scas
jno
pop
jmp
icebp
mov
or
adc
xor
xor
sub
fs
fsts
imul
xchg
xor
mov
xchg
mov
jnp
or
das
inc
sti
adc
test
mov
popl
popf
fstps
and
int3
jecxz
mov
adc
dec
or
pop
mov
mov
das
mov
xor
push
cmc
cs
bound
mov
push
and
inc
adc
ficompl
xchg
mov
test
dec
dec
lods
gs
add
mov
mov
lods
inc
sbb
mov
pop
sbb
pop
push
pop
mov
xchg
dec
roll
lret
sub
xor
outsl
decb
andl
sbb
in
pop
ror
mov
sub
test
sub
lahf
mov
jae
jae
push
inc
xchg
sbb
mov
cmp
fdivs
dec
scas
enter
aam
mulps
popf
mov
jl
jmp
in
lret
xchg
dec
jle
arpl
pushf
xor
and
imul
or
clc
jg
mov
into
dec
cld
cmpsb
inc
push
out
sahf
push
cmp
add
cli
cmp
insl
popf
and
mov
loope
push
add
dec
shll
testl
das
mov
hlt
mov
cmpsl
mov
dec
xor
lea
out
and
adc
ss
push
cwtl
jo
lahf
out
pushf
lahf
pop
repz
mov
mov
test
adc
mov
je
mov
dec
lahf
ret
cmp
push
and
movsb
rcrl
pop
in
mov
push
mov
inc
xchg
dec
iret
xor
repz
pop
mov
xor
cmp
pop
cmpsb
andb
jnp
xchg
imul
fwait
clc
sub
pop
outsb
pop
mov
fmuls
sbb
mov
push
sbb
push
cwtl
mov
mov
in
fistps
insl
push
and
sbb
mov
sub
mov
push
jmp
push
push
cli
mov
scas
dec
scas
mov
mov
xchg
xorl
cmpsl
adc
sbb
cmp
in
pop
cmp
cld
cmp
pop
dec
sub
movsb
push
das
jno
pusha
dec
adc
dec
out
add
cmp
add
push
rolb
dec
pop
pop
push
lds
adc
cmpsb
jnp
sbb
rclb
enter
pop
add
out
sub
or
pop
lods
pushf
cwtl
xor
pop
fcom
mov
daa
adc
mov
sbb
mov
or
int3
pop
rcrl
or
les
test
insl
nop
xchg
outsl
push
je
jg
int3
lock
push
push
jns
xor
incb
adc
jmp
daa
inc
xchg
imul
stc
in
inc
cltd
daa
mov
mov
lret
push
div
les
shll
int3
xchg
push
pop
dec
mov
sbb
mov
push
fnsave
xlat
pushf
fsubr
cld
xchg
xchg
lods
mov
mov
jbe
fimull
pavgw
scas
andb
cmp
gs
sarl
leave
je
mov
pop
nop
mov
incl
stos
loope
icebp
dec
or
cwtl
repz
dec
or
sub
xchg
xchg
or
pop
mov
ret
movsb
aaa
rorb
aaa
cmpsb
insl
adc
push
rorl
mov
ja
testl
arpl
ret
fs
fisubl
xor
out
push
rcrb
sahf
test
pop
xor
jno
incl
add
add
cmp
sahf
gs
mov
adc
add
sub
shl
pop
mov
adc
add
js
and
test
stc
mov
adc
lret
jg
jno
push
daa
dec
mov
and
testb
test
pop
in
ss
mov
sub
cmp
xchg
pop
mov
cmpsl
loope
in
or
pop
inc
jl
sub
sbb
and
adc
sar
cwtl
fisttpl
fmull
mov
push
sbb
mull
fwait
pop
insl
ja
test
xchg
in
dec
adc
inc
sub
into
jecxz
add
sbb
dec
js
and
pop
dec
inc
stos
pextrw
mov
sub
mov
ret
sub
mov
rol
lds
std
mov
cmp
test
sbb
push
rclb
xor
loop
sub
mov
jmp
mov
out
lret
insl
mov
mov
int3
mov
and
mov
add
inc
add
push
out
imull
ja
or
inc
pop
sub
jns
enter
aad
jbe
xor
inc
sbb
mov
lea
shlw
into
fwait
sub
icebp
fisubrl
sub
jle
ss
cltd
xchg
xor
insb
nop
scas
imul
test
add
data16
pop
mov
out
mov
mov
adc
loop
imul
cmp
outsb
fimuls
push
cli
cmp
icebp
int3
cmp
push
inc
repz
jle
xlat
aas
mov
fwait
mov
xlat
sub
inc
rorl
test
lods
rcrb
xor
add
mov
xchg
xchg
mov
mov
push
cmp
add
fsts
scas
fistps
ret
jne
add
adc
cmp
popf
cmp
cltd
hlt
ss
cli
mov
out
fsubr
mov
out
pop
mov
fwait
cli
push
push
push
jae
push
scas
aas
xlat
fstps
inc
or
sub
fidivrl
mov
push
mov
ret
popw
push
cs
or
mov
sbb
sub
xchg
pop
jno
push
dec
mov
loope
jae
inc
inc
fisubs
xchg
and
sbb
mov
das
sbbl
rcrb
stos
lahf
pusha
insw
lea
fidivrs
mov
enter
leave
addr16
ljmp
clc
sarl
push
movsb
dec
add
jns
test
test
sti
hlt
mov
mov
das
mov
cltd
test
jmp
jnp
ret
push
test
outsb
insb
xor
jne
xlat
push
dec
jb
ret
xor
into
mov
mov
add
fmull
mov
and
inc
jge
pop
int
sahf
fstl
mov
mov
stc
test
jne
popa
mov
out
inc
sbb
pop
out
pop
ljmp
push
les
jnp
xor
and
mov
cli
adc
jmp
jge
add
shrl
adc
scas
jp
sub
push
mov
lock
andb
pop
mov
dec
test
xchg
bound
sarb
mov
cmp
mov
dec
outsb
mov
dec
jo
pop
sub
ds
xor
out
jmp
xor
jmp
xchg
clc
testb
std
lcall
mov
test
sbb
cwtl
mov
dec
mov
dec
sub
jmp
popa
imul
int
ret
mov
inc
xchg
cs
flds
aaa
iret
mov
fisubrs
stc
into
inc
stos
cmc
clc
dec
pop
mov
test
and
push
imul
icebp
stc
aaa
inc
and
in
mov
cltd
adcl
out
sbb
testl
lcall
dec
mov
sub
test
add
hlt
sub
ret
inc
cwtl
push
jo
mov
clc
popa
insl
int3
jo
adc
aam
xor
xchg
cld
imul
imul
cmpsb
enter
add
jne
int3
pop
fwait
enter
lds
mov
stc
and
sub
enter
je
pop
loop
sbb
addr16
inc
xor
cmpl
in
mov
mov
adc
jno
dec
cmpsl
cld
ss
or
arpl
fs
rcll
add
leave
call
pop
push
idivl
lds
jno
sub
mov
adc
sub
xchg
xor
fstl
fs
cs
in
pop
inc
push
sub
imul
add
inc
sub
ret
cmpsl
mov
into
add
sbb
add
push
or
hlt
or
mov
pop
rcll
and
push
cmp
subb
stos
sbb
mov
daa
jns
mov
push
push
pop
add
stc
popf
sub
adc
jae
xchg
shlb
lcall
fistps
and
push
sbb
sub
xor
out
scas
jmp
xchg
inc
push
sbb
jno
mov
outsl
std
fwait
adc
aas
sti
and
sub
adc
cwtl
inc
add
sub
add
sub
mov
es
cld
stos
sbb
call
les
std
sahf
rorl
cmpsl
mov
cmpsb
push
mov
pop
xchg
jl
js
mov
int
adc
ja
push
pop
push
fdivl
push
shll
int
sbb
mulb
movsl
into
div
orb
mulb
mov
push
xchg
scas
dec
out
sub
push
repz
cmp
mov
sahf
mov
pop
lcall
pusha
aad
lret
stc
data16
je
inc
inc
out
pop
adc
jmp
adc
lret
cmp
aaa
int3
dec
add
push
and
jno
andb
dec
ficoml
mov
mov
dec
mov
mov
jae
pop
push
pop
inc
cmp
test
mov
xor
stos
lods
adc
mov
fbstp
jno
test
test
cmp
out
test
inc
mov
sbb
rcrb
lret
cmp
jge
lret
outsl
jo
arpl
xchg
dec
shr
aas
sub
dec
leave
loopne
pop
imul
aam
inc
jg
fildll
xor
stos
enter
mov
aas
pop
leave
push
mov
mov
mov
xor
cld
mov
inc
rcrb
jnp
jno
lret
mov
adc
lcall
mov
cwtl
mov
jl
dec
mov
sbb
insb
xor
mov
push
test
frstor
sbb
mov
xor
sbb
push
or
xchg
loopne
xchg
nop
and
stos
mov
les
pusha
and
mov
mov
sub
in
xor
fisubrs
jecxz
insl
lea
subl
ljmp
lahf
imul
dec
mov
sbb
jle
mov
sub
xchg
jae
wrmsr
sbb
rorl
sahf
outsl
lods
xchg
cmp
push
or
mov
xchg
sub
xor
shr
pop
sbb
or
sub
lods
test
cmp
sub
cmp
loop
nop
adc
test
in
sub
or
fnstsw
dec
into
pop
jne
nop
sub
aaa
adc
and
sti
into
mov
push
adc
jp
cmc
sbb
imul
pushf
cmp
repnz
mov
xchg
je
xchg
sbb
pop
and
rcrb
lret
out
pop
push
mov
mov
mov
dec
mov
ret
inc
xor
test
test
or
xchg
adc
lcall
mov
icebp
mov
xchg
push
out
mov
mov
cmp
imul
lods
xchg
mov
test
sbb
repz
jmp
mov
pushf
pop
fdivs
push
mov
pop
movsb
nop
xorb
sti
cmp
popf
andb
jne
dec
adc
out
loopne
cli
shrb
and
adc
mov
cld
inc
and
andl
das
mov
cmp
dec
iret
ret
in
subl
iret
jl
dec
inc
mov
pop
ja
inc
int
imull
in
mov
add
mov
cld
mov
repz
fs
rcrl
out
sub
aad
das
jecxz
adcb
or
add
ss
jns
jl
mov
cltd
sub
test
pop
mov
arpl
pop
aas
mov
xchg
pop
jbe
jbe
add
sbb
cmpsb
outsb
xchg
xchg
adc
fucomp
es
fs
mov
bound
mov
dec
mov
push
ljmp
push
cltd
or
ja
sub
aad
mov
aad
mov
pop
cmp
ja
cmp
lea
xor
adc
cli
lahf
ja
jl
jbe
dec
outsl
jle
cld
or
jmp
loop
popa
in
fcomps
xor
jnp
push
and
add
push
and
testl
push
mov
mov
dec
cmpl
jns
mov
lock
mov
or
rolb
lahf
loopne
inc
jl
mov
push
movsl
or
movsl
add
hlt
inc
pop
xchg
xor
mov
inc
jns
das
push
shll
je
mov
popa
pop
sub
sub
push
rorb
shlb
aaa
pop
mov
fnstenv
pop
push
inc
or
ljmp
inc
pop
icebp
scas
rcr
adc
adc
pop
inc
movsb
jmp
cwtl
mov
int
sti
xchg
test
pop
loop
mov
inc
add
loopne
daa
or
and
ds
rcrb
shll
sub
clc
add
iret
and
inc
movsb
or
pushf
stos
scas
in
packsswb
inc
les
jge
je
and
and
push
xchg
rcr
jecxz
jne
inc
ljmp
add
pop
sbb
mov
shl
sbb
rcrl
test
pop
dec
jo
test
or
insl
add
movsb
cmp
mov
or
sahf
mov
leave
lock
test
sbb
aam
aaa
stos
mov
jecxz
icebp
lods
cmp
mov
popf
cld
ret
xlat
adc
pop
push
jle
fidivrs
arpl
repz
mov
push
pop
movsl
fidivrl
data16
mov
inc
jl
fcompl
mov
shlb
scas
bnd
shll
call
push
xor
pop
repnz
sbb
mov
add
lods
dec
jns
xor
loopne
imul
push
setno
dec
xor
stos
bound
sub
aas
leave
scas
int3
loope
ja
mov
mov
lds
sub
adc
xor
test
jmp
insb
fsts
aas
aas
mov
sbb
lret
ss
and
jmp
add
mov
mov
inc
jo
sbb
push
or
scas
dec
jg
aaa
gs
cwtl
leave
clc
xor
push
jl
push
dec
lods
dec
sbb
push
scas
in
pop
pop
aas
sbb
addr16
popa
fidivrs
jge
ljmp
nop
push
and
mov
xor
cmpsl
out
repnz
xor
mov
imul
cmp
cmc
sub
mov
les
test
gs
loopne
dec
bound
xchg
cmp
and
push
ljmp
rcl
stos
sub
cmp
sbb
xchg
dec
sbb
jmp
stos
ds
add
cmp
cmp
add
enter
lods
sbb
test
pop
roll
in
xchg
scas
lret
sti
orb
and
arpl
xchg
repnz
sbb
out
mov
lcall
data16
ret
cli
in
sahf
cld
jnp
or
push
sti
mov
xchg
add
pop
xchg
test
addb
xor
push
add
sbb
dec
jb
in
inc
jmp
aam
pop
xchg
in
adc
sbb
lcall
sbbb
cmp
out
xchg
push
fcmovnu
imul
xchg
hlt
aaa
aaa
mull
and
movsb
xor
mov
stc
pop
bound
push
jo
rolb
mov
jo
fwait
push
or
loopne
std
jns
das
or
lahf
ja
cmpsl
pop
mov
bound
data16
cmc
xorl
sbb
or
js
stc
xchg
pop
in
mov
popf
das
dec
clc
push
outsb
jo
mov
push
jno
mov
jno
inc
push
outsl
xor
imul
shl
arpl
mov
pop
stc
push
jb
sub
les
faddp
cli
test
data16
jg
stos
jecxz
movb
or
adc
inc
ret
inc
aam
mov
enter
inc
pop
or
inc
in
mov
shrb
mov
xor
inc
jle
and
test
ret
jbe
rcrb
neg
add
mov
sbb
inc
sahf
bound
or
ret
sbb
jno
aam
rolb
push
imul
je
inc
mov
fimull
dec
int
je
enter
hlt
cld
shll
dec
jae
pop
pop
fcom
shrb
lock
ffree
in
mov
dec
mov
aad
shlb
das
dec
outsb
pop
jecxz
adc
movsb
mov
jmp
xor
xchg
jae
pushf
fsubs
cmp
mov
inc
stos
mov
sub
add
ficomps
rcrl
sbb
repz
xor
jb
or
jle
inc
popf
js
pop
je
pop
mov
fmulp
imulb
adc
mov
fwait
out
cmp
pop
xchg
test
rol
pop
fadds
outsb
ss
xchg
mov
xchg
loopne
or
xchg
or
xchg
inc
mov
into
pop
insb
push
ljmp
test
loop
aaa
sbb
mov
mov
pop
pop
out
adc
insl
mov
adc
mov
dec
cwtl
aas
cmp
adc
and
mov
xor
imul
jne
or
idivl
mov
cmp
ljmp
cmp
inc
pop
les
sub
mov
jmp
out
sbb
test
cltd
jo
fistps
mov
ljmp
dec
cli
aas
cltd
mov
dec
mov
ja
pop
mov
adc
sbb
adc
call
sbbb
xlat
out
lds
divb
mov
lds
jmp
mov
std
enter
mov
das
popf
vucomisd
orl
xchg
push
inc
dec
xor
icebp
lods
jno
push
bound
adc
inc
mov
jnp
sub
jno
sahf
jmp
add
add
int
mov
insl
call
sahf
xor
add
mov
or
dec
jno
xchg
ja
mov
lfs
icebp
adc
add
jle
negl
pop
cmp
ja
std
sahf
mov
dec
xor
mov
lahf
fldenv
movsl
mov
loopne
frstor
push
sbb
stos
js
push
dec
mov
sub
mov
push
push
inc
sbb
cwtl
xchg
mov
jp
hlt
sub
add
cwtl
adc
mov
dec
jnp
push
sub
das
cmp
push
jp
sbb
mov
push
xchg
data16
adc
and
jo
sub
fiadds
out
mov
mov
or
lods
xchg
pop
data16
pop
push
lods
je
and
scas
shl
jge
sbb
add
arpl
jmp
mov
sub
sub
xchg
icebp
cmpsl
mov
dec
shl
out
sub
mov
sbb
jbe
push
ja
cmp
dec
jp
iret
sub
into
insb
stos
xor
call
and
cmpsb
insb
dec
adc
adc
or
nop
push
scas
pushf
xorl
sub
sub
in
ret
push
dec
cmc
cmp
push
pop
or
ljmp
call
push
test
stc
orb
popa
mov
pop
mov
pop
and
mov
dec
popf
test
pop
cmpsb
or
stos
add
add
fwait
rol
stos
push
fbld
insl
clc
rol
enter
jns
scas
jb
mov
xor
jnp
leave
or
test
cmpsl
and
pushf
pop
sub
lcall
fildl
or
add
inc
xor
xchg
jp
sub
pop
xchg
cmp
testb
shlb
adc
dec
add
mov
pop
jge
or
outsb
or
mov
enter
loope
test
das
imul
and
and
out
push
dec
sarb
pushf
mov
gs
outsb
lahf
mov
dec
mov
pop
pop
jmp
add
popa
push
jno
dec
inc
mov
lcall
mov
scas
mov
mov
les
push
inc
push
mov
in
jbe
shr
call
vcvtsd2ss
inc
add
stc
loop
shl
dec
aam
ja
push
or
cmpsb
out
test
inc
sub
scas
dec
dec
insb
in
xchg
fldt
push
cmp
adc
cli
jne
lahf
xchg
mov
in
add
int3
jae
dec
loopne
int3
and
addps
or
dec
fmuls
stc
mov
cwtl
cli
adcl
inc
pop
adc
adc
cmpsb
cmp
cli
pop
dec
push
iret
cmpsl
add
movsb
jns
xchg
imull
ret
js
inc
dec
daa
mov
gs
fsubrl
inc
jns
dec
cmpsl
fisubrs
jnp
icebp
ljmp
bound
and
push
sti
or
mov
arpl
adc
arpl
in
pop
insb
decl
jl
in
lret
pop
cmpb
xchg
xchg
push
dec
jmp
push
scas
sahf
std
sbb
pop
xlat
xchg
and
lahf
add
dec
jb
in
mov
sahf
and
lret
mulb
mov
and
jmp
jbe
xchg
fcomps
test
adc
add
mov
fcmove
loop
lcall
cld
mov
in
rolb
sbb
mov
in
repnz
ljmp
push
mov
roll
lock
movsb
mov
inc
sbbl
dec
push
ja
add
pop
mov
vpmacssdqh
push
loope
or
pop
adc
shrb
or
cmc
sbb
cli
mov
std
mov
or
inc
sub
cmp
dec
adc
enter
lret
dec
fs
xchg
jnp
mov
push
loope
fwait
lret
jns
loopne
pop
xlat
mov
movsb
xor
push
or
xchg
adc
xlat
mov
adc
fsubr
push
push
adc
out
push
dec
repnz
and
xor
clc
lds
pop
adc
roll
loopne
and
ja
into
push
cltd
jns
pop
mov
adc
push
push
sub
aad
mov
lret
mov
adc
das
ljmp
sbb
jo
mov
xchg
pop
pop
sub
loopne
loope
js
test
cmp
dec
jl
add
inc
mov
mov
shl
rcrb
mov
xchg
inc
pop
xor
sub
ljmp
divb
xchg
and
leave
mov
ss
cltd
repz
cmp
or
jns
mov
mov
pushl
dec
iret
mov
cmp
loope
mov
and
jae
xor
mov
fisttpll
fidivl
or
jmp
mov
js
jecxz
testl
mov
hlt
into
fs
jl
loopne
mov
lret
mov
fisubrl
adc
adc
adc
cs
pop
dec
in
pop
std
lods
aam
xchg
mov
xchg
lcall
ja
adc
outsl
xor
xor
testl
xchg
in
ficoms
shl
sub
sbb
adc
push
ret
push
jecxz
push
sub
dec
adc
call
mov
lods
aam
or
xchg
add
mov
ljmp
stos
dec
enter
adc
in
dec
scas
jle
popa
test
icebp
daa
pusha
jno
cld
or
mov
cmp
xchg
lret
push
leave
push
in
scas
sbb
scas
lock
pusha
test
push
inc
pop
daa
clc
dec
cs
jb
dec
pop
lahf
cmp
movsb
and
adc
ret
and
inc
mov
loop
mov
xchg
pop
jns
sub
mov
out
movsl
aaa
test
push
lods
pushf
pop
mov
push
xchg
cmp
push
rol
xchg
fwait
loope
xor
je
ja
xor
pop
outsb
bound
jge
sub
inc
push
push
hlt
mov
or
mov
jne
push
ljmp
jo
les
enter
sub
out
xor
out
je
imul
loopne
shlb
xchg
sub
jb
test
add
cmpsb
pop
add
fwait
sub
lock
xchg
mov
dec
cli
cmp
inc
scas
and
pop
stc
popa
xchg
sahf
out
jmp
sbb
xchg
inc
and
jle
jo
push
dec
gs
xor
out
xor
cmpsb
add
cs
cmpsb
push
sbb
insl
and
xor
stos
xor
pop
out
adc
cltd
xchg
mov
and
pop
jp
cmpb
xchg
in
push
imulb
xchg
add
lahf
mov
and
std
jnp
stos
jo
xacquire
fsubrs
insb
ss
push
pop
test
jae
sbb
sub
sbbb
jp
adc
fsubrs
fdivl
ljmp
das
cli
outsl
dec
jo
jae
nop
stos
lods
mov
sbb
pop
mov
adc
inc
mov
mov
xchg
stos
push
outsb
xchg
rcll
aad
imul
pusha
push
dec
fdivs
int3
sbb
in
push
fmull
push
outsb
pop
mov
fwait
cli
sub
std
and
mov
dec
push
pop
js
stos
dec
push
cmpsl
mov
add
sub
stos
adc
cmp
loope
ljmp
mov
adcb
add
fldenv
push
xor
idivb
push
pop
aad
pop
shl
rorb
dec
jne
sub
cmp
xor
pushf
cmc
adc
xchg
mov
cltd
dec
repnz
sbb
cmp
lea
lcall
data16
cmpsb
mov
fistpll
mov
sar
xchg
ljmp
or
push
scas
or
loopne
xor
jmp
fcomps
test
push
dec
insl
in
jmp
mov
shlb
pusha
outsb
xor
dec
bound
insb
mov
mov
fildl
cmp
sbb
ja,pn
jge
cmpsl
cwtl
mov
sahf
pop
out
adcl
aas
cmpb
adc
mov
mov
cmpb
dec
ret
push
push
addr16
pop
sub
mov
adc
or
outsl
mov
insb
leave
insb
mov
dec
pop
push
nop
lret
mov
fildl
add
fcomps
sarb
inc
pop
dec
das
pop
mov
or
dec
mov
sbb
call
ljmp
jecxz
mov
adc
pop
inc
push
loope
mov
arpl
adc
bound
push
push
xchg
push
mov
bound
pop
pusha
data16
pop
sub
push
sti
dec
mov
pop
mov
fbld
xchg
insl
inc
out
cmp
push
stos
mov
adcl
bound
dec
cmpsb
div
cmp
jae
push
cmp
insb
cld
and
inc
test
stos
mov
dec
add
sub
lret
pop
loopne
xchg
faddl
inc
es
test
cmp
rol
repz
cmpl
cmp
mov
sub
es
sub
mov
and
and
sbb
mov
sub
jl
inc
in
mov
repnz
mov
orb
je
aad
push
roll
push
lahf
cld
outsl
and
adc
pusha
inc
repnz
cmp
fwait
mov
push
jecxz
das
lods
pop
imul
xchg
pop
icebp
xor
loop
insb
mov
je
in
mov
imul
jp
and
jecxz
loopne
jg
aam
out
repnz
and
push
in
adc
mov
or
or
xchg
mov
rclb
pop
and
ja
movsl
out
fs
inc
push
inc
sub
arpl
in
scas
test
iret
cli
or
cmp
sbb
dec
or
in
mov
jb
cli
rcl
xchg
lret
push
xchg
fcmovbe
or
jmp
mov
add
xchg
push
into
mov
in
or
ror
push
pushf
add
push
xchg
jmp
mov
mov
inc
cmpb
rcl
sbb
gs
jl
aas
loop
adc
icebp
dec
int3
pushf
aam
hlt
mov
cmp
inc
xor
in
addr16
dec
jg
push
pop
or
clc
dec
pop
and
test
outsb
dec
xor
add
lods
xor
test
rolb
or
mov
cmp
xchg
popa
mov
mov
nop
inc
mov
mov
aas
fcmovnu
cmp
pop
stos
jnp
xchg
sub
cmp
sahf
fwait
dec
inc
lods
pop
out
mov
cmpl
shrb
adc
xchg
lret
or
push
movsl
xchg
test
ds
cs
testl
in
or
xchg
xor
insl
xchg
dec
jle
test
xor
sub
les
imul
fistpl
inc
mov
pop
mov
mov
push
pushf
add
cs
dec
mov
in
xor
cmp
or
stos
xchg
mov
aaa
pop
les
fsts
stos
decl
adc
stc
jge
stos
int3
jle
mov
ret
in
sub
mov
cs
or
stos
fistpl
pop
aad
sahf
add
mov
andl
jg
insl
adc
xor
mov
lods
lock
fdivrl
mov
mov
jmp
or
mov
fwait
nop
adc
add
push
testl
cltd
ljmp
adc
rcrl
push
es
mov
mov
sub
mov
cli
and
addl
cmp
mov
xor
lahf
mov
js
jne
into
and
stos
cmpsb
cmpsb
dec
inc
push
test
inc
addr16
rol
jb
sub
sbb
dec
pop
es
pop
stc
pop
sbb
fs
sbb
cmp
insl
adc
add
sbb
repnz
xlat
sarb
inc
test
jbe
pop
jns
mov
fnstenv
or
ror
or
stos
pop
push
and
xchg
jo
outsl
xchg
lret
cmpsl
ficomps
cmp
push
inc
sub
push
in
jg
fbld
fmuls
mull
and
xor
dec
popa
sti
js
mov
iret
fdivrp
push
imul
sub
mov
mov
subl
xor
sbb
cmp
out
fstl
in
xchg
jg
xor
add
mov
xchg
int
into
sbb
adc
test
das
subb
test
insl
jge
dec
dec
mov
cwtl
out
loope
dec
mov
cmp
sbb
fsubs
outsb
mov
or
daa
dec
adc
xchg
cli
dec
and
arpl
stc
xchg
out
push
sbb
les
add
andb
dec
pop
sar
push
pop
pop
iret
in
pop
cwtl
addr16
lock
xchg
xchg
jo
in
cmc
ret
lahf
cli
test
mov
and
jl
movsl
pop
cltd
mov
mov
or
fisttpll
cmpsl
sbb
divb
cmp
jb
je
sub
xchg
scas
pop
pushf
fidivs
enter
int3
fwait
mov
push
ret
mov
stc
rol
dec
push
pop
jne
jae
add
xor
mov
addr16
addl
jns
fisttpll
ljmp
push
aas
out
fsubl
adc
mov
push
in
enter
mov
and
add
fidivrs
popf
sbb
dec
movsb
mov
sbb
mov
sub
aas
ja
or
xchg
mov
repnz
mov
mov
aam
pop
dec
adc
pop
xchg
shll
jno
mov
ja
stos
add
popf
dec
outsl
inc
fsubrl
adc
mov
cmc
pushf
mov
or
ficompl
mov
add
push
lods
std
inc
stc
or
xlat
arpl
cmp
xor
jecxz
das
pop
dec
out
cli
shrl
pop
sub
pop
or
xlat
lcall
mov
and
mov
adc
addr16
in
xchg
daa
test
cmp
jge
fsubrs
pop
mov
push
and
in
addb
leave
sub
lcall
jnp
inc
xor
ss
mov
and
or
pop
push
cmp
repz
adc
mov
in
daa
mov
push
adc
push
xacquire
popa
add
sub
xchg
lahf
pop
outsl
into
pop
ret
popa
and
je
roll
loope
add
xor
ljmp
pop
stos
cmp
sbb
mov
insb
push
hlt
sbb
xor
jl
imul
jg
outsb
shrb
arpl
daa
xor
inc
cmpsb
mov
enter
xchg
sub
mov
mov
jb
jmp
mov
xchg
jp
imul
mov
loope
stos
jl
scas
pop
push
stos
and
push
dec
mov
loop
je
stc
movsb
ret
loope
mov
xlat
xlat
lcall
sbbb
mov
cmc
jge
xor
es
ja
and
and
or
ret
ret
imul
std
pop
cmpsl
mov
jne
add
mov
sub
and
dec
push
aas
mov
pop
es
dec
dec
push
repnz
outsl
jno
xchg
push
xchg
add
and
xor
mov
mov
shrb
scas
adc
cmpsl
mov
or
daa
sbb
mov
push
dec
lods
fs
mov
in
cmc
jp
pop
mov
adc
xor
jp
scas
popf
push
adc
push
out
in
outsb
pop
push
xchg
das
cmp
or
imul
mov
lcall
dec
fs
xchg
rclb
fnstsw
aas
mov
cmp
clc
fldl
mov
mov
mov
dec
pop
mov
xor
mov
loop
mov
or
adc
push
xor
call
push
cmpsl
pop
loopne
and
sti
pusha
inc
push
xchg
aam
pop
shll
mov
js
mov
sub
int3
orb
repnz
cld
push
xor
clc
mov
repz
adc
add
jecxz
shrl
and
repz
lea
lds
push
inc
es
dec
icebp
lods
add
cmp
push
ret
cli
popa
mov
in
add
dec
ss
cmp
outsl
mov
lock
mov
mov
aam
cltd
test
sahf
sbb
pop
loope
mov
nop
push
add
push
enter
aam
and
or
pop
out
jle
and
les
and
fstpt
mov
in
inc
add
sbb
xchg
or
ret
cmp
mov
sbb
sub
dec
mov
popa
sub
nop
xor
and
idivl
mov
stos
ds
sub
add
adc
das
pusha
clc
mov
and
sub
or
dec
sbb
mov
mov
pop
mov
aaa
insl
jno
xor
mul
dec
xor
call
popa
loope
outsl
pop
cli
test
inc
push
cmp
pushf
sbb
fistl
fstps
btr
call
cmp
dec
pop
clc
mov
lcall
dec
jmp
int
sub
inc
xor
fidivl
scas
sbb
pop
xchg
mov
xchg
mov
clc
pop
xor
incl
pusha
aad
pop
jae
dec
dec
push
outsb
and
dec
lret
push
psubd
cmp
add
into
dec
outsb
jmp
xchg
pushw
and
in
lcall
aam
or
cli
pop
out
cwtl
pop
mov
dec
xlat
push
cltd
fmull
cmp
in
icebp
gs
cltd
push
adc
rorb
mov
in
clc
jne
jne
add
push
mov
jmp
cld
dec
clc
cmp
dec
sarb
cld
dec
sub
mov
sbb
int
inc
mov
dec
mov
dec
mov
xchg
sbb
sub
aad
outsb
or
mov
mov
cltd
push
shll
adc
adc
jbe
and
jecxz
adc
and
mov
xchg
insb
or
mulb
movd
cmp
mov
push
jl
inc
out
or
loopne
mov
and
scas
out
ficompl
xor
jbe
jl
das
cmp
sub
test
or
inc
and
jle
sbb
or
pop
push
test
mov
and
ret
cmp
dec
inc
push
test
in
sub
cmp
adc
mov
jge
out
and
sub
pop
and
incb
push
xor
lcall
pop
outsb
jnp
cmp
repz
lds
bound
inc
fadd
outsb
push
pop
cmp
cli
mov
xor
mov
add
adc
daa
fldenv
cmpb
push
fcomps
fwait
icebp
fbstp
and
lock
mov
pop
mov
jno
dec
enter
ljmp
sahf
pushf
outsl
es
adc
or
lods
cltd
sbb
xchg
sub
ja
insb
push
cltd
and
dec
nop
test
movsb
das
mov
push
mov
jb
loop
pushf
xor
js
mov
pushf
addb
scas
cmp
mov
sub
xor
addr16
push
push
mov
xchg
stos
stc
iret
call
and
cld
mov
cmp
loopew
in
lea
sub
jecxz
inc
loope
lods
test
decl
pop
sahf
cltd
mov
in
daa
jno
cmpsb
call
add
mov
dec
insb
insb
das
push
or
cmc
ret
call
in
xchg
aad
and
out
imul
int3
or
aaa
adc
dec
mov
lret
imul
enter
and
adc
das
setge
rclb
add
mov
aas
in
test
int3
and
adc
stc
fsubrl
loop
in
add
xchg
test
jle
pushf
call
out
cmp
je
push
xchg
push
rclb
push
add
xor
nop
adc
in
ret
cmovl
pop
add
inc
sbb
sub
in
in
aaa
sbb
xor
fcmove
shr
fcom
mov
shr
leave
sub
sbb
inc
mov
dec
test
pop
fisttps
mov
movsl
jle
jle
adc
fsts
lcall
pop
inc
pop
adc
sti
inc
arpl
sub
and
jnp
inc
add
xor
cmp
leave
add
add
out
mov
das
dec
aas
scas
lcall
jl
dec
iret
mov
or
int
arpl
push
xorb
cwtl
lahf
cmp
in
dec
ret
sahf
lahf
pop
fnstenv
fbld
bound
mov
cmpsl
insl
mov
lret
push
cmp
movsl
outsb
int
pushf
lcall
nop
dec
or
outsl
jecxz
in
lds
hlt
int3
das
mov
dec
dec
pop
jp
lock
movsb
lcall
push
push
pop
xchg
jecxz
stc
jmp
mov
xchg
negl
push
push
jg
push
pop
mov
loopne
lcall
dec
rcr
rcl
jne
dec
test
mov
icebp
pop
xchg
jle
and
or
mov
xchg
pop
hlt
out
jae
lahf
sbbl
aam
mov
push
push
cmp
rcll
icebp
pop
xchg
aas
jecxz
xor
mov
clc
fimuls
lret
rol
mov
lahf
mov
jb
push
in
mov
test
and
imul
lea
out
ss
mov
inc
mull
fucom
sarl
pop
push
xchg
mov
or
imul
cmpsb
dec
out
dec
pop
hlt
outsl
cli
dec
xor
add
mov
data16
push
push
cmpsb
popa
xchg
mov
mov
sbb
push
or
add
push
cltd
dec
push
leave
sub
dec
subb
xor
cmp
sarl
outsb
jge
and
cmp
dec
dec
gs
fidivrl
and
add
dec
and
jae
or
sub
mov
add
shll
fsts
push
dec
sub
hlt
bound
rorl
sub
adc
mov
lcall
gs
or
inc
mov
negl
ljmpw
jno
mov
xor
lea
jg
cli
gs
pop
push
or
jnp
and
jmp
shl
push
add
outsl
pop
push
adc
and
jecxz
push
xor
je
loope
xchg
repz
imul
clc
stc
lock
sub
push
cmp
scas
adc
dec
jle
lahf
sbb
pop
add
xchg
in
fs
xchg
aas
pusha
fisttps
jae
loopw
fstpt
cmp
jg
adc
jp
mov
lea
adc
sub
dec
xor
arpl
mov
mov
jne
nop
inc
mov
xor
lock
enter
adc
int3
out
add
cwtl
int3
and
push
pop
sbb
xor
xlat
and
mov
addr16
or
aad
mov
mov
cltd
sub
mov
mov
repnz
dec
and
jbe
or
add
pop
call
jl
clc
negl
int
in
in
inc
sub
add
adc
adc
sbb
inc
movsl
sbb
dec
scas
push
cmp
xchg
movsl
inc
mov
call
in
rorb
mov
aaa
in
sbb
js
sarl
sbb
in
scas
cwtl
mov
sub
dec
cmp
adc
push
in
test
shl
sub
xchg
dec
ja
add
aad
stc
andb
mov
xor
test
sbb
jo
push
inc
ljmp
and
ja
or
mov
adc
sbb
cmp
mov
pusha
in
or
xor
adc
sbb
inc
loope
call
dec
push
cmp
cmp
stos
imul
imul
dec
shll
dec
loope
mov
push
push
ret
arpl
out
and
jne
in
inc
in
xchg
push
or
adc
shr
push
jecxz
cmp
pop
lock
add
pop
int3
pop
out
or
rcrb
push
dec
sbb
cltd
adc
outsl
add
push
daa
sbb
data16
jno
mov
cld
and
xor
jnp
fildl
sub
jmp
leave
cmp
int
in
pop
or
aad
inc
aam
pusha
iret
push
stc
jmp
cmp
push
gs
dec
push
xchg
subl
mov
je
dec
cmp
bound
rcl
clc
xchg
fstpt
fdivp
jl
cmp
stos
imul
jb
dec
bswap
shlb
loope
cmp
sub
iret
pop
xor
cmpb
iret
mov
xchg
loope
cmp
pop
into
and
cmp
insl
out
lods
add
cs
mov
stc
xchg
negl
or
sub
sbb
mov
xchg
jg
or
loopne
std
out
ds
mov
sub
popa
xchg
mov
xchg
mov
mov
aam
popa
pop
mov
divl
inc
jmp
sub
loope
inc
aad
sbb
imul
dec
scas
or
jae
rcr
jne
outsl
cmpsb
pop
inc
in
jmp
fbld
xlat
inc
cmp
xlat
syscall
and
mov
movb
mov
dec
or
pop
pushf
jo
dec
fdivl
jecxz
icebp
popa
out
out
lock
hlt
cli
std
sub
push
and
cmpsl
mov
mov
sub
das
inc
and
stos
shll
xchg
int3
fistl
mov
inc
push
push
addr16
es
or
loop
fcom
cltd
inc
pop
sub
jmp
cmpb
mov
mov
mull
mov
sub
adc
adc
outsb
and
mov
rcll
out
mov
clc
sbb
fimull
jle
shrb
inc
in
insb
jg
xor
mov
idivl
les
xchg
imul
das
jl
fwait
aam
test
or
ja
cwtl
pop
jg
mov
add
mov
xor
push
fsubl
push
mov
adc
je
and
sbb
or
or
cmp
adc
and
pop
movsl
sbb
inc
xor
stc
mov
je
adc
push
test
fs
add
pop
fstl
cmp
or
addr16
ret
shrl
jge
insb
cmc
std
ret
mov
test
or
jmp
xor
jo
mov
or
sub
dec
push
xchg
adc
jbe
adc
fisubl
lret
mov
es
sbb
pop
push
xor
add
adc
or
mov
add
in
in
mov
pop
xchg
mov
notl
sub
xchg
cmpsb
call
inc
mov
stc
adc
sahf
lret
dec
mov
nop
and
pusha
mov
xor
mov
sub
push
cmp
notl
and
add
push
and
mov
shrl
lock
jge
inc
mov
pusha
inc
jns
pop
inc
push
sbb
stos
arpl
fsubs
mov
in
xchg
jmp
ja
test
push
cmpsb
flds
movsb
cmp
sbb
popf
popf
clc
cmc
pop
mov
add
adc
and
scas
mov
jbe
fsub
enter
adc
xchg
pop
push
pop
pusha
pop
test
enter
dec
xchg
sbb
hlt
iret
pusha
xchg
mov
sub
inc
call
repz
repnz
jp
test
or
arpl
js
pop
test
mov
pop
or
cmpsl
push
icebp
inc
clc
sub
ja
inc
icebp
movsb
out
loop
call
jmp
jge
scas
out
ja
test
mov
ljmp
cld
dec
out
or
xor
sbb
pusha
hlt
add
aam
or
push
int
lret
inc
stos
lods
sahf
sub
daa
cmp
jae
mov
repz
xchg
inc
mov
mov
push
cmpl
lds
in
push
sahf
or
jg
sub
aam
test
fwait
push
orl
sbb
push
xchg
iret
push
mov
xchg
cs
adc
mov
mov
sub
dec
stos
mov
mov
bound
sbb
rcrb
add
jnp
sbbl
roll
mov
mov
outsl
or
rolb
or
shll
ficomps
idivl
xchg
adc
test
push
ret
nop
or
sbb
sbb
clc
push
pop
xor
fistpll
not
jbe
jns
sub
int
jne
fsubl
ja
das
mov
xchg
mov
scas
dec
in
mov
popa
xor
loop
iret
enter
or
leave
or
js
inc
mov
push
or
adc
dec
cmc
push
dec
movsb
adc
lods
pusha
xchg
mov
add
popfw
pop
adc
mov
inc
and
jbe
aaa
insb
sbb
adcl
imul
out
push
or
fmull
hlt
lea
mov
repnz
add
daa
repz
jmp
or
jmp
push
add
mov
cmp
push
cmpsl
ret
lods
sub
mov
shlb
xlat
pop
stc
and
mov
out
inc
add
fisttpll
mov
stos
aaa
ljmp
in
lret
clc
xchg
enter
test
mov
cwtl
cmp
mov
jl
andb
sahf
push
jge
insb
mov
lcall
mov
insb
fwait
into
add
mov
xchg
or
outsb
cmpsb
xlat
dec
aam
or
sub
sub
xchg
mov
ss
outsb
in
pop
mov
lret
push
test
stc
fdivr
out
push
sub
subl
ret
pop
stc
jle
jp
xor
stos
fldcw
out
push
jg
inc
daa
repz
cmp
pop
xchg
jns
bound
and
rcrb
cmp
jo
add
inc
or
lahf
add
cwtl
mov
int3
insl
cltd
andb
in
stos
sbb
das
shl
push
sbb
call
mov
inc
fisttpl
push
adc
pop
lds
out
xor
lcall
imul
sbb
mov
daa
fmuls
mov
ret
and
mov
es
mov
jne
gs
push
xor
jle
sbb
pop
cmp
dec
out
mov
dec
fisttps
fldenv
jecxz
xor
cmp
ljmp
into
inc
sbb
cli
xor
or
mov
pop
push
aaa
jge
test
ffreep
push
cmp
jle
ja
cmp
imul
sti
sbb
lock
mov
dec
inc
int3
lock
adc
stc
xor
das
jg
insb
xchg
out
fists
sbb
push
xchg
xchg
lcall
shll
xchg
js
sar
test
lret
gs
inc
sbbb
in
cmp
pop
mov
sahf
mov
ret
mov
aaa
xor
xor
popf
jo
out
dec
stc
push
mov
cli
add
in
xchg
mov
push
aam
movsb
fsts
pop
xor
sti
sub
add
jnp
adc
cmp
imul
fldl
or
pop
jb
mov
loope
mov
fcoml
cmc
movsb
jne
xlat
std
lret
bound
lods
push
mov
cmp
and
scas
xor
inc
orb
jo
fnsetpm(287
inc
aad
daa
das
bound
mov
bound
cwtl
loopne
std
mov
pop
pushf
mov
push
imul
call
xor
or
hlt
in
mov
sub
push
cmpsl
push
adc
or
js
cltd
pop
fmul
cmpsl
xor
add
jg
xor
pop
clc
lret
pop
sbb
rcrl
mov
jbe
lret
rorb
rcrl
mov
xchg
shr
pop
loopne
gs
aas
sub
jo
mov
cmp
mov
mov
aam
das
cltd
stos
jmp
add
into
mov
inc
ffreep
fwait
add
andb
jb
and
sub
xchg
dec
or
inc
iret
scas
cmp
dec
ss
cmp
sub
xchg
xchg
in
sbb
add
push
push
xlat
ficomps
imul
pusha
movsl
push
adc
inc
add
inc
and
mov
jo
sub
fcoms
adc
lods
pop
bound
mov
mov
mov
pop
into
mov
cmp
cmp
leave
out
cwtl
sahf
movsl
aam
shlb
inc
mov
rcrl
mov
push
xchg
icebp
inc
add
and
or
cs
add
cltd
mov
mov
dec
inc
and
fwait
cs
pop
nop
sbb
popf
loope
lods
insb
rcrb
int
stos
ret
xchg
add
cltd
pop
es
xor
mov
rcll
fwait
lahf
aad
xchg
lret
sbb
xor
loop
mov
lret
adc
jb
mov
ret
xchg
xchg
cli
aas
sti
mov
mov
dec
test
mov
mov
pusha
insl
outsl
loope
icebp
jecxz
push
lret
push
mov
test
and
cli
mov
popa
dec
int3
xor
sub
mov
and
inc
pusha
push
jno
repz
xor
call
or
jl
inc
out
movsb
dec
jae
cmovg
addb
pop
nop
jb
fwait
in
xor
cmpsb
int
and
lods
aaa
xorb
leave
jle
mov
cmp
loope
cmpsb
lahf
push
jo
or
roll
arpl
cmc
xor
mov
out
fnstsw
cmp
jge
mov
jecxz
leave
mov
fwait
ds
sub
mov
xchg
imul
sti
mov
stc
push
cmc
push
scas
cmp
js
mov
pop
test
inc
cmpsl
mov
movsb
mov
fistps
add
xor
push
lret
xor
dec
out
imul
mov
sbb
mov
push
sbb
lods
jl
or
push
push
sbb
sbb
xchg
cmpsl
dec
jo
xchg
xchg
in
loope
movsl
icebp
mov
jg
mov
es
dec
cmp
fcoml
cmp
ja
xchg
xlat
mov
stos
inc
mov
fisttpll
and
pop
aam
sub
mov
sbb
movsl
mov
add
leave
mov
ss
mov
mov
mov
int
addr16
cmp
outsb
sahf
pop
fdivl
movsb
aad
xlat
in
sbb
fnsave
faddl
ffree
inc
sub
push
in
into
mov
nop
jb
cmpsb
out
fadds
jnp
fucomp
loop
popa
sub
sub
clc
or
lods
adc
cmc
sub
cmp
mov
xchg
jne
sarl
ficomps
repz
stos
mov
test
add
jns
jo
into
dec
bound
repnz
daa
in
adc
gs
sbb
scas
fistpll
bound
frstor
push
call
imul
arpl
push
dec
and
jle
mov
push
loopne
push
xor
push
xlat
mov
jns
push
repnz
xchg
sub
ss
jle
repnz
inc
sub
jmp
dec
psadbw
add
jecxz
sahf
cmp
test
xchg
dec
movzbl
nop
mov
and
std
sub
mov
inc
lahf
and
sub
les
mov
sub
lcall
pop
call
shll
xor
pop
mov
jnp
adc
sbb
fadd
fwait
int
xor
in
xor
mov
fisubl
push
jmp
stos
sbb
jae
jbe
cmp
mov
les
scas
lahf
pop
push
mov
arpl
enter
push
in
xor
outsl
or
sub
push
mov
jmp
ret
sbb
mov
xor
push
xor
cmp
xchg
sub
stc
xchg
and
pop
add
push
jle
out
popf
loope
inc
sbb
cmp
inc
xchg
pop
lret
mov
scas
pop
push
gs
mov
push
addr16
sbb
repz
cwtl
adcb
mov
rcl
fs
inc
test
push
iret
sarb
ficompl
in
imul
xchg
in
or
jb
sbb
popa
cltd
pop
insl
outsb
and
mov
mov
sbb
das
pop
inc
loopne
fnsave
imul
jnp
jl
adcl
sub
vunpckhps
rcll
repnz
loope
jbe
push
inc
arpl
pop
xor
sbb
push
or
jmp
cmp
push
outsb
adc
sub
sbb
mov
sub
fstps
and
je
fidivl
mov
or
fldenv
inc
or
mov
cld
cs
cmp
adc
adc
pop
ss
rorb
add
cmp
jae
xchg
add
outsb
dec
inc
xor
adc
jp
pop
je
ja
pop
les
sarb
adc
add
sbb
stos
mov
insl
mov
sahf
mov
mov
or
push
fwait
aad
xor
pushf
cltd
mov
shlb
scas
negl
jb
roll
sub
fidivs
pop
cwtl
gs
insl
lods
ret
lods
inc
popa
push
mov
push
in
bound
lods
sub
sti
push
mov
adc
nop
xor
push
lahf
sub
inc
jg
jmp
clc
leave
inc
jne
xor
xor
call
jmp
mov
push
xchg
lds
cli
movsl
jge
fstl
inc
in
push
cmpsl
fsubs
jo
pop
fwait
dec
xlat
testb
sub
repz
pushf
repz
mov
in
push
addl
jae
lods
clc
pop
sub
mov
pop
data16
sub
in
ljmp
and
out
pushf
sub
push
or
sub
scas
mov
into
outsl
adc
xor
shrb
movsb
into
xor
mov
jp
test
mov
insb
pop
rcpps
add
adc
add
mulb
xchg
add
push
fwait
mov
mov
pop
adc
inc
push
jo
jnp
push
incb
push
sbb
sbb
inc
jle
jle
mov
dec
je
out
sub
shlb
add
movl
xor
sbb
ret
xchg
insb
nop
popa
cli
mov
jns
movsb
sar
cmp
pop
loope
shrl
sbb
adc
xor
add
test
sti
jnp
adc
js
xor
loopne
cmpsl
addr16
xchg
jl
repz
pop
out
adc
jecxz
mov
cmpsb
je
leave
jne
ret
fdivr
cmp
adc
and
frstor
pop
push
inc
push
mov
push
ja
cmc
insb
ljmp
sbb
pop
xlat
cmp
lret
int3
bound
mov
int
stc
psubsw
bnd
outsl
nop
dec
mov
loop
std
std
sar
inc
add
mov
xor
mov
fwait
lret
dec
inc
cmpsb
aas
insb
sub
fwait
and
sub
xchg
push
xor
ret
sbb
adc
jle
mov
les
cmp
es
test
fsubs
add
dec
stos
fldln2
sbb
push
jae
mov
mov
ret
sub
mov
xlat
out
mov
or
pop
minps
xorl
push
xchg
fadd
add
das
mov
lods
push
ja
add
pop
cli
mov
test
pop
mov
push
call
jg
rcl
icebp
xchg
sub
dec
int3
dec
dec
pop
inc
add
cld
adc
mov
adc
fcomps
push
jmp
nop
mov
inc
repz
jecxz
into
jb
push
test
mov
outsl
adc
repnz
popa
lret
outsb
loop
push
adc
xchg
shl
mov
cwtl
xor
push
sbb
jbe
push
int
mov
mov
inc
push
imul
jno
xor
clc
cmp
fcoml
cmc
lds
mov
rclb
jb
pop
xchg
loop
lock
xlat
mov
or
jo
ja
inc
std
cmp
lods
cmpsl
pop
scas
icebp
ds
out
out
clc
out
lock
push
ret
int
dec
xchg
sbb
leave
jmp
test
outsl
pop
push
ljmp
push
test
pop
test
inc
loope
sub
xor
andl
mov
xchg
lahf
dec
aas
sub
jmp
jecxz
shrl
rcrb
imul
push
fld
dec
pushl
iret
sti
mov
inc
popf
pop
xchg
cmpsb
pop
cwtl
loope
enter
fnstcw
js
cli
ss
mov
pop
jne
push
lods
push
js
jmp
fstpt
faddl
xchg
push
add
dec
stos
rcr
xchg
xchg
mov
push
fistpl
xor
addr16
cmp
pushf
xchg
push
in
and
xchg
imul
out
fldenv
hlt
cmpsb
sti
loope
jge
mov
sbb
cmp
std
jnp
mov
add
sti
roll
xor
hlt
add
fdivrp
pop
out
jns
push
ljmp
cmp
loop
mov
mov
mov
ret
outsl
or
scas
and
push
inc
xor
xchg
jb
in
and
or
add
lods
lods
sub
adc
push
popa
fildll
xor
loopne
lods
stos
sub
lds
mov
pop
xchg
int
loope
ja
inc
jo
cwtl
xor
dec
pop
xchg
jmp
push
jne
pop
imul
ja
aaa
jmp
ss
mov
mov
push
mov
fnstsw
push
xchg
aas
sbbb
xor
out
xchg
sti
popf
movsl
xor
gs
jb
ror
out
pop
daa
gs
aas
add
rorb
lcall
mov
arpl
mov
int3
js
or
add
push
mov
push
xlat
mov
int
loope
add
scas
mov
and
ficoms
push
add
int
pop
add
sub
sti
or
and
cmp
jle
call
icebp
gs
mov
push
fbstp
adc
icebp
test
and
adc
mov
mov
pop
xchg
adcl
inc
jmp
daa
loopne
sbb
lcall
and
stos
testl
pop
aam
pop
sar
push
int
les
add
js
mov
and
std
jae
mov
addr16
insb
pop
pushf
pop
in
mov
add
cwtl
xor
in
push
mov
fstl
leave
in
mov
add
push
and
in
sbb
adc
lods
mov
mov
mov
insl
pop
adc
mov
movl
mov
and
xor
mov
xor
movsb
repnz
xchg
ss
cmpsb
in
mov
sbb
push
mov
mov
mov
into
push
inc
jo
add
mov
add
sbb
adc
xchg
imul
outsb
arpl
fwait
mov
or
sbb
or
or
loop
adc
dec
out
fwait
lea
movsl
jmp
jns
aas
jl
mov
pop
cmp
push
sbb
lock
je
and
jp
jge
pop
add
and
setg
insb
jl
mov
jp
movsl
jp
xor
push
mov
mov
mov
xchg
sbb
adc
mov
sub
in
mov
lods
cmp
adc
xor
sahf
mov
mov
outsb
ja
test
push
rclb
mov
ffreep
loope
pop
cwtl
loope
cmpsb
inc
xchg
cmp
outsb
sbbb
incb
adc
lods
inc
pop
rcll
push
out
mov
xor
dec
loope
or
xchg
jle
cmpsb
outsb
in
sub
lods
aaa
mul
imul
test
loopne
je
mov
push
fnstsw
popa
imul
ss
orl
add
jae
rcl
orl
ds
ret
push
xor
mov
xor
movsb
aas
jo
lret
shlb
xor
dec
dec
test
mov
imul
or
lcall
ret
fmuls
push
xor
int3
enter
or
nop
out
push
push
add
mov
scas
in
pushf
add
sub
enter
inc
js
in
mov
cs
popa
in
adc
lods
push
push
cmc
loope
pop
push
mov
xchg
cltd
xchg
dec
pop
and
adc
fbld
push
mov
aam
jmp
mov
mov
in
cmp
outsb
ret
inc
nop
cmp
add
icebp
dec
pop
mov
xor
cmpsl
pop
mov
test
popa
jge
push
sub
xor
sbb
popf
jne,pn
mov
in
and
fcmovbe
in
fildl
cmpsl
fmuls
mov
scas
call
mov
xchg
imul
adc
mov
mov
pop
inc
pop
sahf
insl
leave
in
push
cmpsl
ds
in
xorl
xor
mov
adc
in
scas
ret
push
shr
or
mov
pop
or
sbb
outsl
push
pop
push
adc
fmuls
mov
or
xchg
inc
or
add
adc
lcall
popa
cmp
in
add
or
lahf
jmp
xchg
jge
int
dec
cltd
push
jmp
lahf
mov
add
std
in
xor
push
mov
pop
mov
push
xor
inc
fstpl
divb
adc
lret
sbb
insb
pop
mov
fwait
and
or
pushf
lcall
and
mov
mov
fucompp
cltd
sbb
jns
mov
cmpsb
xchg
cs
inc
daa
fdivrs
or
aad
imul
addl
ss
sldt
mov
lods
shrl
rcl
aaa
inc
adc
inc
xor
xor
fldt
xchg
dec
mov
push
test
push
inc
mov
sar
call
call
push
xor
shll
cmc
adcb
and
jo
fwait
mov
faddl
mov
jmp
pop
jns
adc
pop
mov
sarl
push
ss
outsb
xchg
or
scas
rolb
movsl
rcrl
inc
push
insl
sub
fisttpll
in
in
and
ret
int3
sub
cmpsl
push
cmpsl
daa
cmp
fs
xlat
push
mov
sahf
jg
pop
mov
std
notl
jo
xchg
add
arpl
flds
and
outsb
mov
or
mov
inc
imul
jecxz
dec
sub
cltd
ds
ss
sbb
add
movsb
mov
mov
jle
pop
int3
cmpsb
cli
inc
and
cli
push
gs
movsl
ja
or
leave
adc
mov
add
cmp
loopne
add
jo
mov
lods
icebp
mov
pop
cmp
fcmovne
data16
add
adc
push
sub
pop
mov
inc
js
loop
push
cmc
mov
adc
add
and
mov
dec
das
pop
bound
lods
or
dec
inc
xchg
push
inc
mov
inc
lahf
xchg
or
dec
or
mov
adc
jo
test
cmp
and
loopne
or
and
mov
or
test
movsl
push
or
jno
faddl
iret
or
xor
in
lcall
dec
sbb
test
les
clc
xor
cmp
cli
orb
xor
js
jb
push
jae
pop
and
movsb
xor
pop
jbe
or
sti
outsl
push
ljmp
push
jne
inc
int3
fisubrl
shlb
xorb
aas
mov
add
pop
pop
push
fmuls
cmp
cs
call
mov
in
mov
sub
bound
or
bswap
pusha
loopne
adc
cwtl
notb
lcall
ss
pushf
cmp
inc
bound
mov
and
jp
inc
or
push
adc
pop
imul
icebp
fimuls
repnz
or
add
xchg
dec
xchg
and
mov
lcall
push
movsl
push
imul
push
mov
sti
and
and
add
jmp
inc
fbld
bound
jl
mov
push
aaa
xchg
in
xor
es
or
add
out
mov
jmp
lods
iret
mov
cwtl
ss
sub
mov
icebp
cwtl
jecxz
mov
loope
out
clc
pop
lock
fcmovb
or
fmull
inc
pop
insb
xchg
fs
insl
push
inc
xchg
pusha
push
out
jp
push
dec
mov
les
sub
sub
push
cmp
cmc
popf
call
mov
sub
add
lcall
mov
xor
lods
xchg
rcrb
aaa
pushl
lret
sub
je
mov
push
shr
mov
mov
add
cmp
loop
and
xor
mov
push
in
iret
push
pminsw
movsb
xor
outsl
icebp
in
cmovno
cmp
cmp
push
pop
lock
lock
xchg
xor
in
sub
mov
scas
or
cmp
lea
mov
jns
lods
push
jns
mov
xchg
add
call
sbb
pop
mov
outsl
ficomps
dec
sbb
inc
stos
call
adc
xor
stc
sbb
mov
mov
cli
ja
scas
cmc
push
hlt
lret
sbb
imul
stos
addr16
xor
cmpsb
jno
cmpsl
adc
popf
popf
es
fldcw
movsl
dec
push
fcmovnb
loopne
jae
and
call
sub
enter
jno
inc
mov
sahf
push
mov
pop
push
mov
sbb
and
sub
fists
movsb
cld
push
mov
pop
inc
orb
dec
inc
add
neg
or
cmp
loope
pop
adcb
les
inc
iret
or
fistpll
sub
frstor
jnp
add
push
push
xor
ds
shlb
jne
iret
inc
imul
cmc
movsb
lahf
adc
xchg
js
dec
das
jns
cmpsl
add
shlb
pop
in
scas
add
fmulp
ss
jb
mov
adc
scas
rclb
in
lods
imul
out
and
and
aas
inc
js
out
adc
mov
out
sub
pusha
xor
ja
cwtl
es
les
mov
pushf
add
aas
mov
outsb
xor
inc
jge
movsb
jno
fsubrl
aaa
push
xor
lea
stos
scas
and
insb
sahf
or
outsb
cmp
nop
or
mov
fsubs
xlat
or
cmp
push
fucomip
mov
rclb
in
lahf
aad
cwtl
push
in
fwait
fs
push
hlt
inc
xchg
int3
xchg
js
and
pop
xor
in
xchg
and
lods
cld
pop
inc
ljmp
push
popa
fidivs
xor
jbe
sub
aad
push
cmp
subl
cltd
gs
mov
jp
popf
and
es
push
xchg
test
pop
push
es
pop
ret
loop
shll
dec
and
dec
mov
rcrl
into
sbb
mov
and
mov
mov
test
out
cmp
mov
add
stos
xchg
pop
jne
lods
movsl
mov
into
sbb
mov
fisubl
or
mov
push
xchg
push
pushf
insb
mov
sarb
xchg
into
outsb
jle
stos
out
xchg
xchg
ret
dec
xor
pop
cmpsl
jecxz
pop
aas
test
adc
and
lret
jnp
jmp
daa
sub
sub
or
lahf
add
dec
xchg
lods
rorb
adc
adc
jns
and
lret
push
fisubl
hlt
add
xor
shrb
sbb
jne
imul
int
loope
jl
xchg
nop
lret
scas
es
jmp
lds
dec
mov
sahf
inc
test
jmp
dec
mov
lea
fcmovu
inc
add
mov
and
addr16
or
push
fisubrl
repnz
sbb
mov
loop
or
inc
jb
pushf
imul
adc
aaa
scas
jle
and
mov
movsb
xchg
insb
outsl
add
psubsb
push
or
add
inc
scas
push
icebp
data16
push
mov
lds
pop
dec
adc
push
pop
daa
mov
ja
je
test
lret
in
outsb
sub
dec
sub
jnp
sub
aaa
ja
out
iret
aas
inc
dec
fcoml
sbb
out
jo
mov
or
pop
add
sub
cmp
seta
lcall
aas
subb
jb
fdivrs
mov
jbe
mov
mov
push
dec
fdecstp
fmul
sarl
das
or
lcall
and
adc
js
fcompl
arpl
adc
mov
ds
inc
sarb
test
outsl
adc
sbb
or
jg
mov
scas
lahf
dec
add
shlb
and
mov
xchg
jmp
mov
mov
fwait
in
jmp
bound
repz
mov
out
inc
shlb
or
stos
les
icebp
mov
pop
outsl
fldpi
jae
jmp
inc
mov
pop
mov
scas
les
ficomps
xchg
xchg
add
out
lds
push
lea
call
insb
lock
jge
xchg
adc
testw
popa
es
testl
pop
outsl
jl
outsb
mov
inc
xchg
insb
sbb
push
sbb
dec
popf
rclb
sub
inc
or
or
idivb
enter
ret
inc
xor
push
mov
mov
mov
int3
adcl
pop
fs
cld
inc
mov
xor
cmp
sub
xor
mov
in
leave
jle
mov
fistpl
jge
sahf
xor
lret
ljmp
mov
mov
add
stos
daa
jp
jg
mov
je
xor
insl
mov
movsb
iret
sbb
jbe
loope
cmp
mov
cmp
mov
pop
sar
movsl
rcl
xor
fs
sub
sub
dec
into
inc
stos
repnz
push
int3
sbb
mov
inc
jmp
std
pop
aaa
mov
inc
xor
mov
push
notb
fsubs
sub
pushl
jle
mov
shl
pop
push
add
cwtl
mov
fisubs
dec
xchg
pop
and
inc
mov
mov
add
or
mov
mov
jg
fisubl
fcmovbe
push
addr16
movsl
stos
cld
or
stos
sub
inc
jl
xchg
inc
orb
test
enter
add
loop
inc
sub
adc
nop
aam
mov
imul
push
push
andb
rcll
cli
mov
movb
test
mov
test
lcall
in
xchg
in
pop
arpl
sahf
push
int3
popf
cmpsb
add
js
push
scas
xlat
enter
stos
iret
enter
and
add
mov
cmp
js
fisubs
dec
fsts
xor
xor
pop
test
std
and
jne
inc
mov
mov
jno
lret
insl
stc
rol
stos
outsb
fstpt
addr16
in
loopne
and
bound
outsb
xchg
inc
inc
lcall
pushf
sub
and
sbb
int3
jno
jl
jg
fs
mov
xor
mov
pop
mov
jle
push
sub
imul
jnp
lcall
lahf
call
scas
mov
xchg
xchg
lret
mov
pop
xchg
dec
pop
mov
lahf
pop
fiadds
cmpsb
into
cld
rorl
lea
pop
data16
mov
cmpb
mov
test
sbb
and
pop
jnp
in
push
dec
adc
pop
pop
mov
adc
dec
and
jle
mov
jl
movsb
dec
vcvttss2si
push
jp
pop
adc
dec
cmp
sbb
cmp
jbe
cmc
rcll
lcall
and
jns
arpl
popa
ljmp
mov
adc
stos
in
std
stos
aad
pop
cwtl
fisubrl
flds
sbb
mov
icebp
push
ds
stc
push
cwtl
cmp
jle
cli
ss
inc
stos
inc
cmp
mov
in
pop
mov
sbb
add
add
mov
test
xchg
das
cmp
jl
pop
pushl
je
adc
lcall
add
in
fdivs
mov
add
inc
imul
pop
arpl
repnz
inc
ret
bound
adc
dec
mov
mov
xchg
cmp
push
mov
mov
repz
or
xchg
xchg
add
sub
sysexit
dec
jecxz
addr16
ror
mov
push
push
movsb
dec
insl
pop
push
popf
cli
mov
fs
push
js
or
rorb
push
sub
aam
adc
add
push
scas
mov
or
ret
shlb
xchg
xchg
and
imul
or
xlat
arpl
sub
pop
adc
imul
pushf
jle
pop
stos
cmpsl
fsts
mov
int
fldenv
jp
push
mov
add
jg
out
fisttpll
pop
push
sbb
jge
push
mov
xchg
xor
sub
xor
jp,pn
mov
mov
out
cmp
mov
dec
cmpsb
xor
mov
pop
ret
pop
rcl
xchg
idivb
mov
or
push
sbbl
int3
out
jle
xor
arpl
mov
cli
in
add
mov
inc
or
andl
fsubr
wrmsr
fldt
sbb
lea
sbb
mov
insb
sbb
cmp
add
inc
or
std
mov
sbb
push
sub
sub
inc
out
fistl
push
xlat
lods
imul
jge
sbb
push
test
fidivrl
aam
lock
rorb
pop
mov
testb
cmp
dec
add
sbbb
lock
or
out
dec
jne
adc
lods
mov
andl
inc
dec
int3
arpl
adc
mov
enter
clc
pop
repnz
fimull
repz
adc
push
push
int3
mov
dec
and
mov
fiaddl
mov
mov
frstor
xchg
imul
pop
push
rcrl
icebp
repz
adc
cmp
cmpsl
popf
xor
ss
xchg
fstpt
jle
pop
std
mov
lret
cltd
push
clc
sbb
jno
cmp
gs
pop
adc
sar
cmp
and
stos
leave
inc
lret
stos
or
inc
in
dec
cltd
jns
sbb
jbe
into
rorb
push
push
leave
ret
popa
dec
or
xchg
xchg
cmp
call
sub
mov
stos
out
inc
jo
loope
mov
popf
ret
fidivl
sbb
scas
sbb
out
mov
repz
lods
mov
add
mov
shlb
stos
jle
unpcklps
sbb
stos
fldcw
xor
aaa
repnz
push
ficomps
jne
aaa
add
mov
xlat
pusha
sub
adc
pusha
ficoml
adc
jl
lds
mov
and
fstps
aaa
lea
mov
adcb
pop
and
loope
addl
ror
mov
ror
push
push
push
add
ret
inc
or
out
cmp
arpl
cmp
lods
int3
movsb
cmp
lahf
and
cmpsl
jns
inc
jecxz
aas
es
out
cmpsl
add
mov
inc
adc
add
repz
mov
nop
add
pop
stos
mov
fs
push
jg
ljmp
orl
and
out
out
push
call
repnz
fadds
cwtl
ret
dec
hlt
scas
mov
add
push
loopne
inc
loopne
mov
xchg
or
cmpsl
cltd
mov
mov
stc
push
push
lds
imull
jle
roll
sub
add
sbb
pop
sub
nop
insb
lret
rcll
mov
pop
repnz
fistps
lea
bound
pop
out
sub
stc
xchg
push
rorl
mov
add
mov
add
push
int3
leave
mov
cwtl
ljmp
sbb
enter
out
adc
in
in
dec
push
push
in
fsub
lcall
ret
cmpsb
ljmp
mov
jne
dec
push
mov
mov
push
sbb
in
jl
in
push
dec
push
add
adc
add
mov
leave
push
dec
push
rcl
cmp
push
or
in
es
sub
hlt
je
push
nop
pushl
mov
mov
pop
mov
xorb
sub
inc
lods
and
mov
test
in
das
cmpsl
mov
lock
insl
cli
aaa
jns
aam
pop
sbb
push
fbld
push
test
jbe
adc
push
movsb
cs
jecxz
push
pop
cvtps2pi
cmpsb
icebp
in
mov
lods
add
cwtl
cmpsb
ss
sarl
push
rep
xor
mov
cmp
pop
test
into
fmuls
out
mov
jnp
in
jge
mov
outsl
mov
sub
cltd
push
jl
addl
rolb
jmp
addl
popa
and
arpl
sahf
fisubrl
mov
arpl
out
cmp
push
jae
push
int
mov
lds
shl
scas
push
dec
pop
repz
xchg
xor
mov
enter
xor
ret
adc
jae
xchg
loop
mov
hlt
cmp
sbb
in
mov
test
sti
out
mov
shl
mov
sbb
sub
adc
rcr
mov
push
mov
jge
notb
cmp
addr16
stos
or
mov
and
add
adc
mov
sti
nop
add
add
push
sbb
loopne
push
cwtl
sti
pop
push
shlb
pop
stos
cltd
or
ret
xor
add
xor
aam
sub
roll
xchg
xor
xchg
jnp
xchg
inc
mov
xor
mov
and
std
arpl
fsubr
cmp
data16
lea
push
xor
idivb
test
mov
scas
sub
mov
into
test
jmp
sub
lds
icebp
cltd
inc
test
stos
test
sub
sub
stos
jmp
insl
cmc
aad
lds
mov
ljmp
add
cmp
shl
addl
cwtl
inc
addr16
pushf
cs
fsub
data16
fnstenv
enter
mov
nop
and
cmp
inc
and
push
or
es
lret
mov
aad
test
imul
xchg
fisttpll
push
lahf
jle
and
mov
fnstcw
scas
rcll
mov
int3
fcmovne
insl
xor
mov
jecxz
sub
cmpsl
loope
outsl
fistpll
roll
int3
outsb
popa
xchg
sbb
paddusb
lret
push
and
nop
clc
inc
fistpl
inc
shll
into
add
xchg
outsl
cltd
cmpsl
add
subb
int
dec
pop
cmpsb
dec
mov
mov
repz
into
inc
in
jp
or
clc
aaa
sbb
or
inc
js
nop
mov
inc
stos
rclb
cmpb
mov
hlt
int3
jle
pop
lods
push
mov
lret
lock
dec
popf
xor
adc
sbb
sbb
loopne
xor
repnz
cmp
push
pop
xchg
pop
add
mov
adc
xchg
cmp
xor
jecxz
test
push
lret
dec
dec
sub
inc
testb
imul
cld
jp
sbb
or
lret
outsl
xchg
lods
adc
adc
sahf
xor
outsb
outsb
xor
add
dec
add
fnsave
fmuls
mov
mov
or
push
xor
ficomps
outsb
popf
xor
ljmp
aad
sahf
or
push
mov
xchg
cmp
pusha
sahf
aam
lret
sub
push
and
lahf
sti
fwait
es
add
pop
jmp
frstor
es
or
sbb
xchg
cs
adc
jnp
push
sbb
sbb
add
loopne
xchg
arpl
mov
dec
inc
jl
idiv
xor
push
push
lods
push
scas
inc
std
arpl
in
sub
sub
mov
scas
ja
add
xchg
dec
fimuls
lcall
sub
add
outsl
es
in
mov
jnp
sub
jge
and
inc
sub
stc
mov
daa
sbb
lds
hlt
bound
push
jp
jecxz
inc
add
fimull
xchg
sub
add
xchg
jbe
out
inc
lret
ja
jecxz
loop
xchg
fwait
mov
push
inc
js
enter
add
mov
fiaddl
inc
rclb
fstpl
fld
push
adc
ljmp
loop
pop
mov
mov
sbb
xchg
repnz
out
mov
lods
loope
xchg
sub
in
sti
jno
xlat
mov
mov
movsl
in
add
pop
mov
in
fdivs
dec
inc
lea
xchg
data16
rol
adc
or
mov
mov
ret
mov
outsl
nop
mov
pop
inc
push
sbb
sti
std
pop
or
scas
std
fcomps
scas
pop
in
popf
es
lock
xchg
pop
insl
xor
push
test
fs
sarb
int
loopne
test
add
shrb
shll
jmp
mov
add
clc
das
jne
hlt
mov
test
mov
gs
adcl
and
and
push
dec
sbb
pop
repnz
xlat
fdivs
push
dec
sbb
pop
mov
jge
cmp
push
fisttpll
sub
jecxz
and
xorl
insb
jnp
lahf
aas
fnstenv
inc
inc
mov
mov
adc
inc
push
ror
inc
cld
outsb
sahf
add
ljmp
mov
rcrl
cmp
lods
sbb
xor
sar
pop
rcrl
push
sbb
scas
mov
xchg
ret
inc
dec
shll
insb
cmp
mov
push
cmpsb
aam
adc
xor
push
add
sbb
and
cmp
ficompl
insb
inc
ret
push
xchg
nop
rol
sbb
into
jmp
push
pop
push
pop
or
xor
insl
cs
jmp
add
shlb
cmp
push
sub
adc
cmp
fists
jmp
mov
xor
rcrb
addr16
adc
fs
icebp
inc
rclb
sahf
jbe
mov
xchg
lret
mov
mov
xor
clc
adc
sti
inc
jp
sbb
push
and
test
dec
cmp
jb
sub
cltd
xchg
push
mov
pop
sub
xorl
push
mov
mov
test
fnstsw
push
and
push
insl
pop
sbb
adc
push
push
xor
shrl
ljmp
jp
pop
push
je
arpl
mov
xor
add
xchg
std
adc
pop
xchg
ret
js
xchg
mov
push
cld
std
outsl
sbb
sub
jmp
add
scas
pop
mov
sahf
push
push
inc
cwtl
xchg
sbb
bound
scas
outsb
mov
sahf
cmpsb
xor
lods
fwait
lret
es
add
inc
push
pop
xor
or
aas
pop
cmp
scas
ror
das
cld
sub
mov
lahf
mov
push
test
popa
push
and
gs
or
lahf
xor
incb
in
outsl
into
mov
or
and
pop
scas
jo
ljmp
and
inc
fisttps
hlt
nop
sarl
lea
fistpll
jg
in
cmp
fdivr
aad
sbb
sub
dec
mov
xchg
mov
out
fmuls
add
mov
fildl
addr16
es
cmp
inc
xor
shrb
mov
jno
repnz
or
lret
out
add
mov
scas
aad
scas
xchg
test
mov
jns
cwtl
scas
xlat
xchg
test
ja
negl
outsb
int3
sbb
stos
pop
push
lock
mov
jp
add
fdivrp
push
loop
pop
pop
lods
xchg
shll
mov
pop
or
sbb
ss
lahf
or
lock
xorb
and
mov
jmp
out
bound
pop
dec
call
xor
sub
mov
les
fiaddl
sub
dec
rcrl
pop
stc
aad
sbb
scas
jmp
cmpb
lds
dec
push
lea
push
mov
outsl
sub
je
cmpsl
and
loopne
cwtl
mov
ficoml
and
fnstsw
fisubs
lock
mov
aas
data16
add
daa
cmp
xchg
mov
sbb
xchg
sbb
dec
arpl
xchg
xor
out
scas
or
lods
int3
jg
inc
jl
push
push
mov
jnp
test
push
pop
jb
ffreep
in
and
mov
mov
imul
push
mov
sub
adc
cltd
jecxz
popa
gs
mov
push
xor
mov
xlat
cmc
call
mov
dec
push
cmp
lcall
lret
lock
cmc
sbb
adc
inc
addr16
insl
dec
push
jns
sub
sbb
fidivrs
sahf
adc
inc
mov
pop
ds
jno
cmpsl
imul
negl
add
out
aas
call
jle
call
loope
and
push
jg
push
into
lahf
lret
xchg
ret
add
mov
cmp
insb
in
xor
incb
sbb
es
scas
cmp
xchg
cmp
add
popl
xchg
jae
sahf
and
adc
mov
jmp
je
int
les
loope
cs
inc
in
addr16
mov
mov
loopne
mov
aas
adcl
cmpsb
popa
in
and
imul
sbb
insl
inc
mov
aaa
xchg
mov
gs
sub
mov
lods
test
mov
std
loopne
negl
jns
add
mov
mov
jns
jns
shr
mov
and
insl
sub
loopne
out
cmp
int
pop
lcall
xchg
jle
xor
mov
pop
cmpsl
xor
inc
les
push
daa
sti
pop
push
xchg
cli
sub
dec
ja
rcrl
div
mov
xchg
nop
add
aam
xchg
or
int3
xchg
pop
sub
cltd
push
jae
in
daa
jb
imul
or
inc
pop
dec
cmp
xchg
and
lods
pop
pop
std
pop
add
sub
inc
pushf
orb
dec
adc
lds
idiv
jge
jo
and
pop
adc
movb
jle
out
xchg
cmp
mov
adc
jle
dec
pop
addb
hlt
test
add
repnz
jo
rorl
adc
js
cmp
jo
mov
ds
inc
pop
test
adc
adc
mov
loope
js
jae
jge
decl
cmp
test
enter
adc
loop
pop
mov
iret
dec
mov
and
bound
sub
lsl
jmp
mov
repnz
rorb
test
ss
ds
mov
mov
mov
sti
bound
out
ss
adc
mov
mov
jle
je
mov
add
push
nop
popf
testb
js
xchg
xor
aad
push
out
cli
addr16
or
outsb
leave
bnd
jmp
jmp
pop
lock
mov
in
clc
lret
adc
dec
sbb
jae
cltd
movsb
mov
push
test
test
fdivr
mov
imul
jmp
mov
adc
sbb
push
loop
cmp
sahf
push
cli
cmp
sarb
cltd
jne
xchg
lds
fwait
insl
call
lret
icebp
jmp
jbe
xor
sub
rol
sbb
and
subl
add
dec
pop
mov
xorb
mov
rcrb
push
jns
lcall
cltd
jmp
dec
insb
mov
in
jle
mov
inc
pop
sub
xchg
pop
and
rolb
inc
xchg
sahf
test
push
cltd
jmp
out
scas
incb
pop
push
shll
shlb
jle
adc
lock
test
jne
dec
in
sub
and
xchg
fs
imul
inc
subb
mov
cs
js
adc
pop
test
lahf
stos
lcall
xchg
push
add
insl
outsb
es
mov
cltd
bound
pop
and
dec
xor
mov
adc
sbb
mov
mov
adc
and
push
inc
cmpsl
and
push
lret
fldcw
jo
popa
fimuls
pop
and
xor
inc
mov
cwtl
xor
push
test
in
rol
xchg
add
or
idivl
mov
mov
je
lds
jge
rcr
fstl
mov
jno
lods
dec
xchg
mov
cmp
mov
pop
insl
pop
pushf
dec
mov
push
popf
loop
jno
aad
in
out
test
lock
mov
sbb
push
xchg
mov
mov
sti
pop
out
popf
dec
popa
movl
lahf
lods
dec
inc
sub
pop
mov
push
in
sub
iret
mov
out
xchg
fwait
nop
inc
loope
stos
push
xchg
add
push
je
inc
jmp
in
mov
je
pop
push
shrl
notb
ljmp
test
aam
dec
loop
nop
mov
imul
call
or
mov
cmp
ret
sbb
ret
xchg
push
lock
sbb
out
pop
jo
repnz
es
jp
push
xor
xor
xchg
sub
mov
shll
push
adcb
cltd
dec
add
add
push
and
insb
xchg
mov
adc
out
movsl
xchg
js
mov
jbe
out
mov
cwtl
lret
inc
lcall
out
in
jmp
outsl
enter
mov
push
mov
ret
rolb
icebp
inc
fcompp
pop
ss
mov
xchg
outsb
rcll
movsb
pop
in
xor
and
add
jns
push
sbb
sbb
cltd
in
inc
mov
inc
movsl
dec
dec
or
cwtl
lock
addb
dec
add
fsubrp
inc
daa
sahf
hlt
or
ja
jns
jbe
inc
fsubrs
sub
mov
pmaxub
xor
cmpsb
pop
daa
daa
fnstcw
filds
mov
mov
xor
mov
cld
nop
push
mov
xchg
sbb
inc
and
push
push
lahf
jp
out
mov
lock
push
or
int3
pop
mov
fwait
or
cmpsl
in
sub
xor
adc
and
jnp
push
add
aaa
test
andl
stos
fwait
sahf
scas
adc
xchg
das
adc
decl
xchg
sbb
cmp
mov
stos
out
inc
mov
adc
pop
push
nop
inc
int3
and
adcb
cmp
inc
repz
call
pop
enter
mov
mov
add
add
mov
ret
mov
push
test
iret
ljmp
insl
gs
cmp
ror
or
inc
gs
dec
fwait
test
das
out
repz
cwtl
xchg
stc
std
cmp
mov
xchg
je
inc
jne
sbb
xor
sub
push
sbb
inc
push
jno
xchg
pusha
push
incb
in
or
movsl
scas
cs
and
push
ss
push
test
dec
pop
stos
loop
push
mov
lods
andb
ret
add
jo
xor
adc
lods
test
seta
fwait
push
dec
and
sub
push
inc
lret
out
push
ret
cmp
push
sti
adc
inc
orb
cmpsl
js
mov
push
cmp
jnp
sbb
sbb
cwtl
dec
call
jp
nop
cli
and
xchg
mov
inc
arpl
aaa
aas
mov
dec
test
out
aas
imul
bound
pop
and
xchg
push
in
xchg
mov
or
and
fadds
into
clc
add
enter
inc
dec
in
pop
xchg
or
pop
xor
push
out
ljmp
mov
ss
xchg
xor
movsl
jmp
fmul
mov
mov
cmc
push
mov
arpl
mov
gs
movl
and
add
mov
jbe
mov
dec
data16
repnz
mov
pop
aaa
test
testl
dec
lds
negb
sti
mov
mov
jbe
mov
rclb
sub
and
or
test
add
mov
pop
leave
or
push
bnd
xor
mov
outsb
punpckhdq
fistps
xchg
or
adc
adc
jge
cmc
iret
dec
pop
unpckhps
icebp
or
rcrb
sbb
popl
sub
idiv
test
dec
arpl
shrb
adc
sbb
add
mov
add
jp
lods
imul
js
mov
jnp
in
pop
mov
xchg
inc
add
cmp
in
jle
enter
rorl
bound
incl
add
fisttpll
cmp
jge
loop
cli
push
push
add
fistpl
inc
enter
xor
push
mov
rcr
jbe
cmp
sti
aam
jecxz
or
fisttpll
pop
fs
sub
scas
out
lret
sbb
pusha
jne
fnstcw
shrb
sub
adc
sbb
inc
jg
in
fbstp
mov
stos
pop
xchg
das
or
xor
mov
pop
mov
xchg
cmp
lret
sahf
or
insl
inc
test
daa
push
sub
sarl
pop
pop
fnstcw
faddl
frstor
mull
inc
dec
out
jg
in
cli
ficomps
stos
clc
scas
xor
int3
cmp
call
dec
sbb
mov
pop
mov
sbb
out
pop
out
lcall
in
inc
xchg
sub
in
test
xchg
xor
jle
jmp
push
or
sbb
loope
out
cmp
scas
pop
fbstp
filds
and
aas
cmc
pop
frstor
jl
pushf
fistpl
in
out
inc
mov
cmp
mov
mov
aam
push
jbe
push
jnp
ljmp
jp
movsl
arpl
das
cwtl
sbb
aad
shl
sub
stos
jge
mov
push
cmp
cli
mov
repnz
mov
lea
in
mov
sub
and
stos
dec
inc
mov
and
push
xchg
sub
clc
jne
and
inc
rcll
xchg
nop
jl
loopne
xor
jmp
frstor
sar
xlat
mov
int3
lds
int
dec
push
ficoms
lret
ret
jge
cltd
into
pop
lcall
mov
je
lods
test
xchg
pop
push
out
je
popa
adc
add
lds
popl
inc
shrb
imul
outsl
jle
sbb
cmp
cli
cmpsl
syscall
fdivrl
jp
adc
scas
insl
pop
push
popf
shlb
aas
ja
jp
jg
mov
enter
or
iret
ret
add
and
aam
sub
test
dec
pop
in
push
popf
mov
outsb
adc
mov
test
sub
xchg
outsb
inc
idivl
insb
jo
std
stc
jg
sub
dec
sahf
pop
and
ss
cmp
and
mov
inc
sbb
jns
mov
fisubrl
mov
mul
or
pop
idivl
test
das
fistpl
xor
js
les
jne
les
lods
aaa
inc
pop
mov
cmp
popf
pcmpgtd
aaa
or
shl
fsubs
mov
jbe
aam
xchg
sbb
lds
lock
pusha
lret
xchg
je
mov
xor
mov
sub
sbb
movsb
sub
lods
mov
aas
nop
pop
push
xor
jb
lods
and
cmp
arpl
jne
popf
jp
mov
mov
loope
leave
jg
lcall
cmpsb
lods
imul
in
add
mov
das
loopne
fwait
cld
gs
mov
int
sub
psadbw
push
adc
jecxz
sti
daa
fisubl
and
loope
les
and
cmpb
mov
iret
ficompl
mov
loope
cmc
ret
insl
pop
push
xchg
rcrl
ljmp
call
sub
pop
dec
lahf
fists
test
lds
push
andb
sub
pusha
fwait
test
sub
subb
in
gs
or
cli
mov
out
sub
sbb
into
into
sbb
cmp
out
mov
push
push
loop
ss
sub
add
aad
adc
in
lds
fdiv
into
or
iret
fs
add
lock
xchg
xchg
xchg
movsl
outsl
pushf
xor
jl
sahf
mov
xchg
movsb
xchg
mov
gs
sbb
mov
in
rcl
adc
xor
cmp
adc
enter
dec
icebp
mov
push
lods
pop
cmp
add
xchg
notl
cld
std
inc
aad
cmp
jnp
or
push
cmp
sbb
imul
add
push
pop
xorb
adc
and
and
add
int
xor
jae
out
rcr
sbb
jmp
int
out
jmp
sub
xor
xchg
aam
test
fidivrs
and
sbb
repz
fsubl
and
stos
dec
xor
cmpsl
inc
insl
mov
push
jle
testl
rol
repz
cld
data16
jp
pop
pushf
dec
or
lods
in
mov
and
cwtl
fs
cltd
xor
jecxz
inc
fnstenv
test
push
fidivrs
jl
xchg
xchg
movsb
mov
das
inc
pushf
test
sahf
xor
ss
sahf
popf
nop
inc
ja
fs
fistps
cmp
mov
stos
mov
aaa
insb
mov
shlb
cmp
in
push
fbld
inc
mov
aaa
stos
insl
pop
sbb
dec
dec
xor
imul
lods
mov
push
dec
or
shll
jo
repz
dec
xchg
daa
arpl
push
mov
gs
call
push
mov
out
addr16
popf
repnz
push
xor
scas
mov
shr
xor
repz
mov
or
inc
insl
xor
sbb
jle
dec
mov
clc
sub
mov
cmp
adc
xor
andb
and
cltd
jge
into
call
add
mov
arpl
add
aad
nop
popl
adc
mov
push
test
fs
sarl
jle
lods
push
inc
sahf
lret
roll
das
mov
ljmp
loope
addb
in
loopne
rcrb
repnz
insb
lea
test
inc
mov
lea
jle
aaa
and
dec
sbb
popa
clc
mov
dec
bound
sbb
jp
imul
push
mov
add
shll
mov
fsubl
mov
cld
fiaddl
outsb
ret
fwait
push
sbb
sub
mov
aad
mov
ljmp
cltd
mov
cld
jo
arpl
push
insl
inc
test
sahf
pop
fists
push
inc
inc
outsl
data16
adc
push
mov
fxrstor
inc
sarl
clc
rcrl
iret
out
enter
sub
mov
pushf
inc
xchg
je
mov
stos
mov
jmp
mov
sbb
dec
lahf
scas
xorl
out
adc
movsb
mov
test
or
sbb
sbb
jo
ret
aad
es
pop
aam
stos
sbb
es
push
push
data16
inc
sbb
bound
repz
dec
ss
pop
xor
insb
and
mov
jne
pop
mov
and
mov
scas
test
adc
mov
pop
or
outsl
in
mov
rcrl
out
jne
jmp
mov
mov
sbb
ss
pop
fwait
shrb
inc
repnz
repnz
and
movsl
sbb
inc
dec
arpl
rcl
cmp
popa
aam
cmp
fadd
xor
dec
scas
mov
sbb
xor
cmp
xchg
and
ret
loope
jno
stc
mov
adc
lret
inc
out
fiaddl
dec
sub
aad
jp
adc
sbb
lods
mov
mov
test
adc
pop
int3
sbb
hlt
mov
inc
jne
xchg
daa
into
roll
cmp
pop
inc
xchg
dec
subb
xchg
or
inc
lods
jmp
xor
ds
inc
je
mov
or
xchg
movsb
add
xor
hlt
mov
xchg
cmp
dec
ret
in
mov
fimuls
dec
enter
xchg
and
cmp
push
jge
fstpt
imul
repz
push
mov
icebp
jo
test
push
xor
sbb
xchg
js
xchg
xlat
sub
mov
fstpl
pop
lods
and
pop
adc
into
sahf
outsb
mov
mov
lret
and
inc
add
lretw
push
insl
xchg
jnp
nop
mov
jle
adc
jnp
cmpsl
repnz
xor
repz
test
into
pushf
fwait
cltd
xchg
jmp
xchg
jge
adc
pop
insl
and
das
pop
fcmovnu
cli
iret
mov
enter
and
dec
addl
jmp
push
add
pop
push
subl
stos
cmp
stos
imul
and
inc
mov
cmc
lret
add
push
loope
mov
inc
or
push
data16
movsl
jb
clc
call
push
adc
mov
sub
ss
stos
xchg
in
imul
aad
jp
sahf
pop
imul
pop
mov
jne
decl
out
push
cwtl
xchg
mov
sub
rolb
inc
inc
mov
push
imul
sub
push
adc
dec
mov
adc
jecxz
out
pop
mov
out
repz
repz
nop
or
and
flds
mov
inc
test
cmp
and
mov
fcmovne
mov
fadds
sbb
pusha
dec
mov
ja
sbb
or
adcl
ja
mov
mov
jno
xor
dec
out
arpl
out
in
xorb
mov
mov
add
aas
je
and
add
sub
ret
lcall
jmp
xchg
and
and
in
cmp
js
repz
adcb
pusha
clc
push
sub
jnp
mov
xor
xor
xchg
sbb
sub
and
push
hlt
lods
fnstenv
inc
and
inc
in
pop
insb
mov
js
sbb
mov
xor
pop
push
bound
dec
ss
adc
rcll
xchg
ret
ret
dec
lea
fs
sbb
dec
fiaddl
call
inc
cmc
loopne
lock
push
inc
data16
repnz
js
enter
jl
mov
outsb
jo
inc
out
add
and
add
enter
fs
fnsave
push
push
inc
jecxz
pop
jmp
es
xchg
pop
pop
fcmove
pop
lcall
call
je
jle
ds
and
mov
sub
add
sbb
dec
mov
sub
adc
decb
inc
xchg
mov
cmpsb
mov
js
nop
movsl
dec
repnz
lds
cmc
xchg
adcb
add
outsb
into
je
dec
cltd
adcb
adcl
fstl
in
stos
pop
push
xor
xor
xor
push
popa
std
aas
movsb
int
sbb
mov
pop
out
ficomps
xor
lds
inc
cli
into
xchg
push
dec
mov
mov
adc
or
xchg
roll
push
lret
rorb
xor
jns
shll
xor
sarl
fsubl
sub
xchg
jnp
test
leave
in
repnz
mov
pop
loopne
loop
subl
sbb
xorb
mov
popa
push
push
fs
ret
cmp
sub
xchg
jg
je
pop
jns
xchg
cli
lea
ljmp
dec
addr16
sub
inc
sub
push
jecxz
and
fdivl
cld
jne
inc
aam
rolb
movsl
mov
or
jp
adc
push
dec
fcmovnu
cmc
mov
xchg
gs
mov
rol
shr
pop
mov
mov
scas
add
dec
testl
leave
sbb
enter
dec
bound
add
dec
icebp
jmp
sub
stos
pop
imul
xchg
mov
and
inc
rclb
and
arpl
sbb
pop
add
push
fstpt
outsb
sbb
and
jo
jle
xlat
test
xor
push
jmp
jnp
lods
and
sbb
hlt
lock
scas
into
fadds
xchg
cmpsl
cmp
and
and
in
gs
out
dec
test
pop
movsb
mov
jmp
and
int
insb
ss
xorb
mov
fwait
inc
jg
inc
out
mov
xor
ljmp
adc
aas
cmc
lret
cmpsl
pop
mov
orb
and
sbb
inc
xlat
jne
out
cmp
ja
std
dec
jb
xchg
ss
xor
xor
pop
pop
pop
cmpsb
and
lods
and
shlb
adc
pop
push
push
jb
mov
add
sub
push
sbb
cli
mov
ret
sub
mov
push
shlb
inc
lret
mov
sub
movsb
inc
insb
or
movsb
xchg
push
stos
and
and
add
in
incl
fstpl
ds
inc
mov
xor
push
dec
jno
pop
xlat
xchg
push
sbb
jnp
int
ds
inc
push
sub
in
add
or
jae
mov
repz
and
mov
dec
adc
rorl
popf
scas
mov
push
cmp
fiadds
sub
ficomps
mov
sub
sarb
push
xlat
or
es
and
insb
and
jecxz
or
adc
xor
mov
sahf
push
mov
adc
adc
cmp
mov
ljmp
push
pop
push
mov
ja
mov
ja
pop
ret
xlat
xorb
ds
hlt
movsb
iret
mov
gs
test
mov
pop
imul
out
fiaddl
int
jmp
push
ss
test
jmp
lcall
jmp
lods
mov
cmp
sbb
mov
dec
lea
mov
das
rcll
into
stc
pusha
dec
xchg
and
popf
xchg
gs
stc
iret
outsl
mov
add
push
movsl
popa
pop
fdivrs
loop
aaa
repz
inc
fistps
pop
adc
lcall
movl
jmp
out
inc
xor
out
or
fimull
int
cmp
fld
push
add
xchg
in
hlt
test
or
ljmp
push
xor
adc
in
gs
aas
and
cmpsb
testl
xor
fisubrs
shrl
push
dec
jne
pusha
xor
movsb
pushf
popf
int3
arpl
xor
push
inc
sub
mov
push
pop
arpl
xchg
out
pusha
jno
jl
test
or
loop
mov
push
sub
jo
ja
sbb
xor
push
dec
in
stos
lret
cltd
jmp
pop
jle
lods
push
or
loopne
and
lcall
jbe
cmc
rclb
das
and
in
adc
mov
addr16
pop
loopne
fisttpll
dec
xor
fcomps
mov
cmpsb
mov
inc
cld
xchg
or
les
mov
jns
xchg
sbbl
xor
pop
mov
jle
fwait
test
cltd
pusha
cmpsb
fs
ja
xchg
inc
popf
xchg
mov
ret
mov
lcall
in
call
insl
jb
push
movsb
aam
mov
repz
cmc
xchg
add
out
out
adcb
cmp
pop
xchg
mov
jnp
rolb
and
cmp
inc
sub
leave
dec
not
insb
jns
lock
jno
fbld
jb
sub
mov
jbe
loopne
jne
loop
incb
pop
push
adc
mov
rcl
out
mov
push
dec
and
sub
dec
popf
sub
jbe
fnsave
cmp
aas
or
sbb
scas
ss
std
jne
shrl
sbb
fstpl
ja
push
test
inc
out
mov
or
push
stos
dec
mov
adc
hlt
sbb
mov
pop
push
imul
enter
jecxz
in
bsf
jmp
xchg
outsb
mov
lea
cmp
push
adc
in
inc
cmc
pushf
test
dec
lea
or
push
pop
sbb
movsb
mov
xchg
pop
fists
imul
cmp
clc
out
out
je
mul
nop
stc
pop
lock
cmp
sti
cmp
mov
add
mov
lea
xor
lods
and
mov
sbb
jp
pop
ja
aam
movsl
pop
sub
aam
data16
dec
lret
sub
dec
mov
mov
fiadds
add
pop
and
ss
mov
sub
xlat
mov
sub
jp
popa
push
test
mov
mov
push
dec
pop
xchg
xchg
pop
or
jbe
sbb
dec
pop
pop
jne
pop
aaa
repnz
out
std
lahf
jbe
jle
iret
jno
sub
mov
cltd
pop
sub
pushf
fadd
jbe
ffree
test
push
sbb
fsts
mov
dec
sahf
dec
add
push
push
rcll
pop
sbb
out
pop
test
or
push
data16
xchg
stc
dec
jle
in
adc
sub
leave
outsb
pop
fiadds
add
ljmp
push
fstps
scas
arpl
js
push
cmpb
push
pop
pusha
insl
jns
xor
daa
fidivl
insl
sar
pop
es
aaa
out
push
int
mov
les
cld
pop
sar
repz
sbb
test
jp
pushf
loop
es
sub
popa
or
rclb
sub
in
idivl
hlt
inc
ret
jb
inc
shlb
add
inc
stc
lret
cmp
add
lock
repz
fsubs
and
mov
pop
mov
sub
loopne
jge
loop
xor
ror
mov
adc
jl
xchg
outsl
aas
test
mov
shrb
out
repz
dec
jnp
add
loop
dec
lahf
cs
std
inc
xor
jbe
repnz
loopne
clc
sub
jb
subb
shrl
jecxz
adc
pop
or
icebp
mov
in
mov
shll
xor
in
lods
mov
push
mov
mov
pop
das
xor
daa
shlb
mov
iret
pop
div
call
sti
ja
add
test
push
cmp
jg
jle
fnstcw
fnsave
out
mov
mov
cmpb
mov
ret
mov
cmp
inc
orl
and
push
movsb
pop
cmpsl
stos
outsl
notb
mov
aaa
rorl
push
dec
fimull
mov
dec
xchg
dec
cmp
icebp
jns
int3
xchg
fiaddl
iret
and
cmp
fcmovu
insb
pusha
adc
mov
inc
call
inc
aaa
enter
push
cltd
orb
test
jmp
rorb
test
mov
arpl
mov
xlat
jns
mov
ljmp
add
dec
fldln2
imul
icebp
push
ficoml
jge
lcall
out
jl
add
shl
push
vcmpsd
jmp
mov
sub
dec
jle
mov
jmp
shr
loopne
mov
xchg
dec
hlt
mov
lcall
idivb
scas
xchg
negl
into
inc
shll
xor
loope
shrl
add
or
mov
xor
lods
inc
mov
add
push
add
jns
cmpsb
shlb
in
add
mov
mov
adc
jne
fisubs
push
mov
jb
call
mov
mov
lret
sbb
xchg
les
xchg
les
cmp
xchg
jne
inc
pop
div
cs
adc
iret
push
mov
stc
insl
sarl
add
jmp
fs
and
sub
cli
pop
mov
mov
fsubs
xchg
sbbb
enter
cli
in
mov
aam
lret
pop
or
orl
mov
or
aas
inc
and
pop
sbb
daa
pop
test
sahf
not
jae
jne
in
movsl
fmuls
pusha
out
bound
inc
mov
cs
bound
pop
jge
jl
add
sbb
addl
loope
ret
inc
int3
mov
xchg
fwait
rorl
push
repz
aas
cmpsb
jp
mov
pop
mov
in
push
inc
mov
jbe
pop
jns
xchg
ss
iret
pop
ret
mov
aam
rclb
pop
fs
cmp
and
mov
inc
fstl
sbb
bnd
mov
xchg
loopne
outsb
pushf
insl
push
mov
mov
in
ss
lods
xchg
stc
sbb
imul
add
or
adcl
jg
roll
ud1
lds
jno
or
popf
push
add
mull
mov
sub
add
stos
pop
pop
or
mov
jb
in
push
bound
lea
ljmp
and
mov
inc
dec
xor
inc
mov
ss
xchg
aad
rorb
insb
lods
int3
mov
mov
fdivrp
arpl
cmc
pop
dec
jge
inc
mov
mov
push
imul
icebp
sub
add
lods
inc
hlt
xchg
jle
inc
push
inc
pushf
lret
cmpb
loope
push
out
or
and
cmp
sub
mov
mov
xor
test
pop
mov
mov
mov
int3
push
das
push
add
in
pop
jmp
or
ret
inc
mov
ror
bound
cld
push
pop
sbb
rcll
out
add
or
or
mov
arpl
push
lret
jmp
mov
into
and
xor
xchg
addr16
in
mov
jns
aad
ficompl
ret
lods
mov
mov
or
loop
adc
sbb
add
pop
mov
in
mov
jno
aaa
out
into
adc
push
push
mov
adc
or
add
aaa
ud0
jg
shl
add
clc
pop
das
jo
xchg
pop
mov
mov
out
ds
out
rcll
mov
add
pop
xor
sub
mov
pop
lcall
jge
into
mov
repnz
ss
and
outsl
mov
repz
negl
or
xchg
add
jle
xchg
adc
insb
into
ret
clc
inc
cmp
test
pop
dec
mov
mov
push
mov
add
dec
shlb
mov
dec
movsb
cli
xchg
shlb
lahf
and
inc
or
imul
jge
int
dec
mov
xchg
sub
jmp
cmp
out
inc
xchg
lret
mov
lods
mov
repz
rcrl
sbb
sbb
pop
cmp
gs
add
jno
stos
add
add
push
repnz
jo
or
mov
push
mov
icebp
adc
mov
jge
test
xchg
dec
mov
add
mov
mov
rolb
sbb
cmp
pop
mov
lret
push
jno
mov
inc
lock
cmpsl
xor
imul
jae
mov
loope
jbe
dec
add
popa
sub
adc
flds
or
or
test
lcall
jb
xor
imul
test
push
rorb
sub
jo
dec
lcall
rclb
pop
setle
push
pop
pop
mov
and
fsubp
cli
aas
aas
fisttpll
jge
add
or
les
push
mov
sahf
mov
mov
ja
lcall
lock
aad
rolb
les
pusha
je
into
js
cmp
push
xchg
not
cpuid
xchg
mov
cmp
shl
shl
popl
fwait
sbb
hlt
mov
mov
pushf
movsl
xor
jecxz
sbb
inc
test
fldenv
push
dec
sbb
mov
or
in
out
lret
jns
incl
pop
rcrl
ficoms
call
out
arpl
push
aas
and
packssdw
xor
mov
ds
subl
add
push
pusha
imul
mov
pop
popa
popa
cmp
addl
std
mov
std
jae
icebp
add
daa
dec
decl
add
jle
es
ret
into
mov
rorb
inc
cmp
pop
add
xchg
and
int
mov
sti
insb
sbb
aad
jecxz
lock
push
inc
xchg
or
dec
repz
lds
pop
mov
and
test
rorl
sbb
inc
jecxz
dec
fwait
pusha
push
pop
mov
xchg
insl
mov
pop
inc
dec
cmc
sahf
inc
xchg
mov
fs
and
sub
and
pop
dec
dec
jge
cwtl
jecxz
movsb
out
mov
fisubrl
jle
stos
push
cltd
cmpsb
or
mov
mov
fwait
xlat
mov
stos
stos
add
stos
testb
jmp
adc
or
test
loopne
jle
sbbb
sub
dec
pop
sahf
jg
punpckhdq
movsl
rol
ja
add
sbb
int
pop
roll
popa
add
push
and
ljmp
mov
sarb
imull
mov
pop
and
xor
shrb
shll
in
xchg
std
push
insb
xchg
filds
sub
jns
call
cwtl
adc
push
pushf
daa
inc
jecxz
sub
ret
pop
loop
xchg
xchg
imul
js
cmp
sti
push
test
push
mov
push
push
mov
enter
rcll
cld
mov
js
daa
subb
jecxz
and
ss
aad
loopne
mov
jne
andl
lods
stos
shlb
fdiv
inc
in
mov
mov
pop
jae
imul
insb
ja
or
xchg
loopne
dec
push
mov
cltd
adc
and
adc
mov
vpunpckhqdq
aam
fucomp
sub
emms
data16
adc
or
jle
psubq
sbb
adc
in
lods
push
in
mov
add
xor
inc
and
dec
repnz
sar
lea
pusha
dec
pusha
push
mov
adc
pop
inc
arpl
sarb
test
mov
pop
inc
pop
shll
inc
mov
clc
insb
cli
sbb
insb
cmp
adc
mov
test
cmc
ja
jnp
jg
fldt
sbb
adc
jp
rcrl
stos
sub
mov
bound
xor
in
sub
cmp
mov
xchg
cmp
notl
stos
outsl
jmp
push
mov
push
push
jle
pop
cli
jl
and
fmuls
inc
jno
jnp
xchg
icebp
jb
mov
das
xchg
sahf
jbe
pcmpgtw
push
or
pop
and
sub
or
fbld
in
jns
mov
jb
lahf
inc
dec
loopne
mov
fsubr
js
ss
sbb
inc
xchg
jecxz
and
xchg
out
imul
mov
pop
mov
dec
orl
sbb
leave
or
jno
pop
fwait
out
cltd
push
mov
pop
sub
push
or
sbbl
jmp
cmp
fdivrl
mov
movsb
pop
insl
inc
or
inc
jns
repz
mov
xchg
lahf
negl
hlt
adc
fwait
insl
mov
mov
rcr
fdivs
fucomp
lret
imul
scas
mov
mov
mov
push
popa
adc
ret
pushf
xchg
pop
sub
and
scas
and
mov
inc
pushf
in
push
cmp
ds
xor
scas
lcall
and
push
pop
push
mov
pop
sti
push
sub
xchg
pop
mov
xor
add
adc
fstpl
push
sub
jmp
nop
imul
xor
subb
and
das
out
hlt
popf
sub
cmp
push
insl
sbbb
jecxz
push
sbb
mov
incb
nop
lods
or
mov
shl
jae
insb
leave
pop
mov
dec
std
cmpps
push
push
xchg
movsb
pop
lock
mov
cmpsb
notl
jne
call
fwait
pop
push
xlat
aas
fsubrs
into
out
xor
xchg
adc
and
or
lret
and
sbb
mov
iret
fisttps
adcl
or
in
js
inc
mov
sub
stc
ror
adc
jge
dec
inc
dec
or
xor
sbb
inc
pop
fdiv
xchg
xor
int3
int3
lret
inc
or
nop
inc
adc
xor
jns
inc
test
inc
in
xchg
incl
int
std
cld
pusha
mov
adc
int3
jmp
mov
test
mov
rcrl
les
mov
jmp
xchg
sub
pushf
and
pushf
shr
sarl
push
insl
imul
push
jno
push
adc
fnsave
cmp
mov
mov
outsb
scas
mov
aas
or
and
add
dec
push
mov
inc
scas
jbe
sub
or
jle
add
daa
inc
fsubrl
adc
gs
xchg
jo
lods
sub
pop
xorb
or
jmp
dec
sbb
gs
add
push
fdivrl
jbe
cmp
sahf
jg
mov
add
pop
bound
push
cmp
inc
in
mov
jl
cmp
pop
push
and
aad
fcmovnb
mulb
add
mov
dec
punpckhbw
std
cmp
cmpsl
inc
push
inc
shlb
leave
pop
mov
clc
lcall
cmp
cli
and
inc
jle
or
repz
push
fwait
sub
insl
in
xor
add
int
fistps
pop
inc
mov
mov
idiv
sbb
leave
xchg
xor
rep
into
or
lcall
push
lahf
out
adc
repnz
or
ret
mov
mov
movsb
xor
or
pop
aam
push
fs
lods
pop
fnsave
add
inc
enter
lea
adc
mov
mov
xchg
out
dec
dec
insb
sub
jge
jno
and
shrl
push
sbb
add
nop
mov
mov
xchg
push
lret
aam
lods
inc
mov
ljmp
sub
ljmp
inc
inc
push
scas
or
ret
sub
sti
lcall
add
inc
add
pop
les
pushf
stc
ljmp
and
mov
fldl2e
sub
mov
jecxz
sti
out
cmpsb
sarb
and
sub
fcoml
mov
loopne
sbbb
popf
shrl
fistpl
add
sub
hlt
add
xchg
mov
xlat
xchg
pop
sbb
popa
cmpsl
stos
in
and
insl
inc
mov
dec
add
shll
out
sub
mov
lea
push
dec
ds
mov
into
std
inc
lret
pushf
repz
movsl
rol
shlb
pop
addr16
pop
iret
add
cmpsb
mov
jmp
pop
shlb
sub
jae
mov
pop
mov
movb
mov
sbb
pop
in
negb
out
mov
out
and
xchg
jle
inc
into
js
push
pop
mov
adc
daa
addb
lds
cmpsb
inc
mov
ret
shll
gs
inc
mov
mov
test
sahf
movsb
mov
xor
dec
hlt
mov
cmp
ret
xor
test
mov
mov
push
sbb
mov
lods
jmp
adc
aaa
loopne
shrb
cmp
inc
jns
in
dec
cmp
sub
out
stos
sbb
mov
inc
fidivrs
scas
fdivrl
int
xor
mov
mov
push
bnd
stos
or
stos
std
and
je
sti
ljmp
xor
test
sbbl
lds
xor
push
jns
test
cmc
and
out
or
pop
aad
lods
push
mov
xor
jmp
subl
jnp
mov
out
or
mov
ds
lret
cmp
rcrl
imul
insb
clc
jg
into
out
push
mov
add
xor
jo
pop
inc
ficoms
xchg
out
fadds
mov
inc
adc
mov
scas
push
gs
push
mov
sub
test
cmp
mov
lahf
lcall
sbb
cmpsl
sbb
and
mov
fld
jo
jl
jns
xchg
sub
mov
inc
addr16
in
dec
shrb
sbb
arpl
sub
sub
lcall
and
sbb
sub
shlb
cmp
dec
inc
and
in
xlat
lock
shll
fs
sti
push
cmpsb
xchg
sbb
leave
and
push
or
xchg
fs
imul
jno
jae
push
les
ss
xchg
jmp
repnz
pushf
nop
aad
xchg
lods
in
and
or
test
mov
cmpl
mov
clc
cmp
jl
fldt
push
add
mov
xor
sub
sbb
pop
scas
enter
repz
dec
aaa
out
push
stos
jle
loope
push
mov
scas
and
out
int
mov
cmpsl
cmp
sahf
into
cwtl
sub
pop
lcall
movsl
or
xor
pop
popf
mov
daa
iret
movsl
or
outsb
jl
mov
fs
rsqrtps
lock
iret
aas
lods
xchg
xor
jae
pusha
lret
jbe
cmp
mov
or
xor
popa
pop
lea
xor
add
movsl
stos
xchg
imul
mov
call
cmc
in
in
rorl
int3
add
xchg
sahf
xchg
dec
out
imul
pop
lret
push
cmp
push
dec
fwait
rcll
cmp
or
cmp
stos
scas
pop
jle
cli
dec
dec
adc
outsb
pusha
dec
inc
mov
arpl
xchg
adc
lock
fwait
dec
inc
into
xchg
dec
notb
mov
pop
mov
sbb
sbb
xor
ret
mov
push
dec
pop
jmp
xchg
inc
pop
incb
ret
mov
insl
inc
test
leave
dec
adc
jecxz
pop
inc
inc
inc
addl
stc
inc
xchg
insl
out
jg
sub
scas
clc
jmp
jo
push
adc
adc
xchg
dec
in
addl
in
addr16
or
push
push
push
loop
int
mov
jle
out
pop
xchg
mov
pslld
or
cwtl
pushf
jbe
mov
and
pop
cmp
and
add
arpl
mov
push
lea
lahf
ds
xchg
stc
roll
icebp
rorl
fdiv
int3
lea
xlat
xchg
int3
mov
xchg
pop
cmc
pop
mov
stos
pop
and
cltd
imul
dec
sub
out
adc
and
mov
insl
andb
and
or
xchg
fcoml
push
sub
jge
test
jl
xchg
pop
test
fistpl
in
lds
add
xor
xorb
and
mov
jg
fsubl
hlt
cmc
std
mov
hlt
js
cmp
lahf
les
jecxz
pop
fistpl
andb
loop
push
xchg
movsl
push
mov
push
decl
stos
dec
imulb
test
or
jmp
fildl
pop
test
or
hlt
daa
mov
pop
xor
fsts
test
sbb
scas
clc
mov
xchg
jo
fwait
aaa
pop
testb
sbb
sub
sarb
adcl
sub
iret
inc
inc
fcoms
add
pop
add
xor
mov
mov
call
pushl
cmp
jecxz
adc
addr16
jge
aam
jae
iret
push
and
sub
int
hlt
mov
test
clc
or
jnp
je
sbb
mov
sti
test
inc
fiadds
scas
mov
push
sti
pop
les
and
ja
cmp
dec
fistps
mov
scas
sub
xchg
mov
adc
lret
in
test
orl
pop
ds
loop
dec
cli
in
push
adc
shrb
inc
xor
jne
mov
push
mov
lcall
pop
xchg
dec
jbe
cmp
movb
sbb
cmc
data16
lahf
addl
push
stc
or
cmp
int
xchg
inc
les
mov
lods
push
js
mov
popf
sahf
xchg
cli
insb
adc
inc
out
pop
fcmove
xchg
mov
xor
add
sub
jne
in
jo
inc
imul
lock
subb
mov
ja
or
jne
pop
push
and
stos
mov
push
xlat
adc
out
cld
mov
jae
xor
into
into
sbb
sbb
mov
fadd
mov
cmpsl
cmpsb
sub
inc
insb
sub
pop
cwtl
data16
and
dec
loop
out
pushf
sub
dec
jbe
fwait
subb
mov
aaa
pop
sbb
inc
xchg
xor
pusha
leave
inc
fs
jl
push
xchg
std
dec
repnz
subl
cmp
pusha
cmpsl
jo
adc
xlat
add
dec
or
sahf
mov
cmp
mov
add
mov
push
sbb
andl
iret
mov
pushf
jae
int
sub
mov
in
and
jnp
push
inc
sub
ljmp
push
lea
pop
leave
mov
xchg
sub
daa
jae
dec
and
cld
cmp
and
inc
jl
and
and
push
icebp
mov
in
out
cmp
inc
mov
jbe
mov
cmp
jecxz
rcr
or
jb
shll
daa
dec
cltd
pop
fsubs
jecxz
mov
mov
inc
hlt
pop
call
imul
jmp
scas
leave
jne
xchg
inc
lea
sbb
addr16
mov
push
and
push
cld
mov
ja
lahf
js
sub
es
inc
jnp
mov
inc
clc
jne
lret
jge
xor
test
mov
mov
mov
and
dec
pop
push
push
lds
jb
lods
leave
enter
cmp
movsl
mov
jae
lock
dec
add
lods
cmp
incl
imul
push
fwait
cmpsb
pop
mov
xor
mov
mov
push
roll
int3
lock
mov
test
mov
jmp
sti
clc
enter
xchg
or
repnz
inc
inc
mov
outsb
cld
stc
mov
mov
out
or
cmp
in
inc
inc
gs
cli
or
int3
leave
push
repz
xchg
jae
fstpl
les
inc
xor
out
inc
xchg
into
jo
shll
pop
inc
jecxz
and
jg
in
mov
adc
pop
sub
sub
sarl
mov
mov
imul
out
jnp
jecxz
int3
insb
add
outsb
xor
outsb
mov
inc
inc
bound
in
inc
pop
mov
jp
cmp
xor
mov
jp
movsb
outsb
add
jmp
xchg
adc
sbb
scas
fistps
mov
sub
test
loopne
inc
and
pop
sti
jecxz
call
adc
jb
in
xor
inc
cmc
shll
in
nop
arpl
adc
and
mov
int
popf
frstor
jnp
ss
mov
sbb
fs
orb
js
lcall
shr
js
and
out
sub
out
mov
lcall
sarb
adc
xor
andb
lcall
sub
push
xor
cmp
loopne
mov
test
sub
cmp
out
incb
add
out
ds
sbb
mov
push
or
adc
inc
and
add
mov
jno
xor
inc
mov
nop
jns
stos
push
bnd
mov
pop
mov
xor
add
xchg
dec
scas
xor
lea
pop
push
push
pop
ud1
pop
mov
push
push
rorl
xchg
jno
or
scas
jne
clc
movsb
sbb
orb
and
push
ja
test
push
cmp
adc
dec
scas
sbb
test
xchg
pop
das
add
jp
pop
mov
lods
mov
xchg
jge
addl
push
cli
pop
dec
jp
nop
push
mov
repnz
inc
adc
test
inc
jmp
shlb
jns
pop
push
ljmp
int
stc
and
mov
scas
add
ds
mov
ss
into
mov
dec
insb
std
adc
and
lods
cltd
mov
aas
scas
js
inc
jo
push
jnp
mov
xor
mov
sub
sarl
movsw
jmp
insl
nop
test
fwait
cli
xchg
scas
ss
imul
js
cld
or
lahf
push
loope
shlb
mov
lcall
mov
cmpl
adc
or
loop
inc
cmp
sbb
into
aam
and
or
std
loope
pop
mov
std
dec
pop
jmp
mov
push
sbb
cmp
pop
and
sbb
sub
aam
cs
pusha
push
divb
in
xchg
movsb
mov
push
aas
fidivrs
mov
lret
sbb
int3
rcrb
push
pop
fsubl
inc
popf
aam
push
fbld
test
and
xor
dec
inc
mov
push
stos
out
pop
push
aad
xlat
cltd
or
cltd
pop
or
or
push
mov
dec
mov
sti
pop
jl
mov
mov
add
mov
sahf
lahf
decb
cmp
push
mov
fnstenv
jb
or
sbb
mov
jle
leave
ljmp
shrl
pop
popf
and
pop
sti
imul
mov
int
repnz
add
mov
fadd
fdivrl
xchg
pop
add
decb
leave
mov
subb
or
mov
sbb
aad
jle
cld
inc
sub
mov
leave
pop
mov
push
loop
cmp
pop
shll
jmp
mov
cmpsb
sub
jns
test
cmp
dec
and
mov
mov
call
jg
dec
ds
jle
in
cmc
fisubl
je
cli
arpl
decl
mov
int
rcrl
pop
xlat
cmp
or
loope
arpl
repnz
dec
mov
out
or
int3
repz
scas
and
cwtl
mov
jbe
sti
fmuls
repz
xor
out
push
jb
aad
ss
cmp
cmp
pop
push
jmp
hlt
jns
lods
cmp
xchg
imul
cwtl
cmpsb
leave
xor
add
lock
data16
stos
jl
pop
mov
xor
into
das
mull
jae
cmp
adc
sti
jle
xchg
jbe
out
int
icebp
aaa
sbb
je
rcr
pop
cmp
fcoms
jl
jle
cmp
ds
add
dec
inc
leave
xchg
movl
xchg
jo
shll
jmp
out
xchg
mov
fincstp
add
in
xchg
mov
mov
sahf
jg
clc
mov
pop
pop
iret
repz
inc
outsl
mov
adc
mov
ret
jecxz
xlat
sub
pop
jge
lods
mov
nop
mov
fcoml
mov
das
sub
add
mov
xor
rcrl
push
adc
and
cwtl
ss
ljmp
std
ss
sti
subl
mov
push
push
or
mov
test
or
std
mov
pop
ret
fs
cli
int
aad
mov
scas
movsl
push
mov
xchg
hlt
add
sbb
cmp
aam
add
cmpsl
inc
mov
leave
icebp
nop
jge
dec
hlt
mov
cmp
movsb
sbb
and
pop
rclb
jb
outsb
jecxz
cli
inc
rcl
sbb
jg
sahf
inc
roll
es
xchg
out
lret
scas
mov
add
push
out
pop
js
jle
pop
std
mov
add
mov
test
ljmp
loop
arpl
cld
aam
pop
inc
push
mov
lcall
lahf
push
daa
int3
out
inc
data16
aam
mov
ret
sbb
mov
stos
fs
mov
movsl
out
out
mov
mov
add
negl
cmp
jg
movsb
sbb
jne
ret
in
xor
cltd
aas
dec
ret
pop
dec
jne
sbb
push
push
jnp
push
jno
roll
in
jnp
sbbb
ret
add
push
sub
outsb
leave
ret
xor
addb
loope
aaa
mov
stos
add
pop
add
dec
dec
in
mov
gs
mov
icebp
jmp
fs
sub
push
cmpsb
std
mov
test
stos
ja
ss
jg
and
xchg
in
adc
lret
daa
jns
gs
cwtl
cmp
cmpsl
lret
xor
int3
decb
cmp
mov
dec
pushf
lock
cmp
gs
arpl
inc
inc
adcl
fs
roll
es
pop
jl
xlat
ss
xor
push
in
rolb
inc
push
cmp
iret
add
sub
lods
ja
inc
enter
loope
pop
int
push
jns
enter
test
mov
jbe
divl
aam
int
cltd
scas
dec
mov
ljmp
loop
shrl
pop
testb
ja
jno
js
insl
and
rolb
dec
jns
dec
sti
xor
out
ret
xor
and
push
inc
xlat
cwtl
gs
and
fstl
ret
sub
fmull
xchg
imul
test
ret
arpl
sub
jnp
push
insl
gs
and
int3
mov
mov
cmp
sbb
sti
lods
mov
push
lea
pop
sub
subl
xchg
call
out
xchg
popf
sbb
and
out
fimuls
das
xchg
pop
jmp
pop
add
mov
fmuls
aad
inc
in
add
inc
hlt
shlb
add
inc
xchg
or
dec
pop
xorl
pop
ljmp
mov
ljmp
pop
push
mov
sub
mov
lea
sub
pushf
push
out
insb
gs
and
sbb
add
mov
gs
daa
jb
movsl
xchg
test
mov
iret
adc
test
sub
jnp
enter
lods
dec
dec
aad
bnd
sub
lea
stos
mov
cmp
cs
arpl
sahf
cmp
sbb
popa
nop
sub
add
push
cli
dec
jg
mov
repz
xor
cmc
sub
mov
adc
fdivrp
jno
push
ss
sub
and
aam
roll
jp
outsb
and
lds
adc
mov
faddl
cmp
mov
lds
bnd
call
je
ljmp
rorb
pushf
pop
cli
jae
push
xor
fstl
cmp
scas
fldenv
adc
or
cld
sub
jae
test
or
test
sub
adc
rcl
addr16
xlat
push
xchg
stos
testl
push
add
xchg
lods
adc
insb
jb
fidivrl
push
push
imul
lret
push
movsb
mov
fldt
cmc
mov
stos
inc
push
mov
scas
jb
mov
mov
das
push
sahf
ret
xor
mov
push
cmp
rcll
jmp
cmp
mov
pusha
inc
int
xchg
sbb
sub
jno
lds
aad
xor
aam
push
in
mov
je
cmp
pop
cmp
rcll
mov
sarl
pushf
repz
xor
mov
pusha
jnp
mov
das
mov
sar
sbb
aaa
xor
jge
test
xchg
inc
daa
mov
nop
cwtl
cmp
sbb
pop
xor
ss
push
adc
icebp
mov
push
aam
cmc
ja
cmp
mov
repz
jns
adc
lock
cmc
mov
push
popa
xor
cltd
adc
or
sti
xchg
mov
les
enter
pop
jo
and
mov
push
jnp
ds
or
dec
cwtl
arpl
popf
stos
sub
push
sbb
add
lahf
push
mov
data16
scas
adc
rclb
mov
xchg
icebp
leave
cmp
push
test
jle
lods
cs
rcr
xchg
mov
in
sarl
lahf
cmc
mov
and
mov
push
gs
clc
xchg
or
in
mov
movsb
fbstp
jp
cmc
imul
cwtl
adc
cmp
jle
gs
dec
add
ficoml
mov
xor
push
stc
insb
cmpsb
push
adcl
add
movsl
xor
jecxz
inc
push
nop
sbb
pop
mov
mov
aad
mov
mov
fdiv
addr16
test
xor
pusha
ljmp
in
add
insl
add
sahf
pop
sbb
cmpsb
es
xchg
or
mov
pop
mov
ds
xchg
mov
cmp
cmp
ds
lcall
mov
or
mov
mov
jmp
leave
ficomps
outsb
or
jmp
rorl
mov
and
push
scas
inc
mov
lds
and
and
cld
push
or
mov
pop
sub
hlt
into
push
fucomi
lahf
mov
bound
xchg
sbb
cmpl
adcl
adc
movsl
mov
pop
stos
out
or
movsl
pop
xlat
sti
xchg
mov
pop
insb
fsubs
and
jmp
adc
cmp
jne
mov
pop
lret
mov
inc
into
int3
cmp
popf
outsb
and
pop
adc
clc
cmpsb
push
les
or
or
sar
int
ret
fbstp
daa
mov
fwait
xor
inc
int
cmp
cmpsb
mov
cwtl
jecxz
addr16
inc
lret
xchg
jbe
lcall
js
icebp
xor
bound
add
sahf
into
sti
imul
sbb
push
imul
lea
cmp
xor
or
jp
cmovp
jp
test
jmp
out
outsb
jp
xor
push
cmp
sub
mov
test
stc
pop
repz
insb
in
and
mov
xlat
test
ret
dec
cmp
add
hlt
cmpsb
mov
xor
push
movsb
testb
push
jo
mov
repz
add
adc
int
cwtl
cli
xchg
lods
out
lahf
icebp
push
sahf
in
mov
jmp
and
out
movsl
fdivrp
or
daa
sub
mov
fistpll
lods
loop
sub
movsb
into
mov
ret
and
in
xchg
jl
jne
fists
clc
rorl
stc
push
repnz
xor
fldenv
stos
sub
fistpll
leave
mov
sarb
mov
loope
loope
lock
pusha
jle
cld
test
shll
or
lock
out
cmp
and
xchg
in
and
mov
sbb
sahf
lcall
inc
push
xlat
sub
jns
mov
cmp
mov
bound
repz
jp
stos
sub
inc
lds
jge
scas
movsl
push
in
movsl
xchg
xchg
push
stos
xchg
test
mov
nop
or
mov
mov
loopne
mov
jmp
mov
enter
repnz
sub
push
icebp
into
fwait
leave
gs
cmpsl
xor
dec
orb
fildl
pop
sbb
lea
xor
jp
push
imull
xchg
jno
lods
adc
mov
jg
and
pushf
cmc
pop
mov
movsb
shr
jg
mov
adc
test
mov
dec
xchg
sbb
pop
sub
push
mov
repnz
lcall
adc
aam
adc
imul
call
bnd
adc
pusha
sub
dec
pop
fidivrs
inc
ret
jb
or
aad
pop
sbb
testl
adc
or
mov
lcall
test
out
ret
mov
dec
dec
adc
test
outsl
fisttps
arpl
jo
jg
mov
add
leave
and
xor
adc
repz
scas
lea
sbb
mov
dec
dec
pop
xor
leave
out
push
mov
xchg
iret
xchg
lret
adc
and
cmpsb
ljmp
mov
xchg
out
pop
dec
les
jne
jns
jb
enter
push
mov
je
mov
dec
push
arpl
outsb
rcrl
call
addr16
out
adc
pop
in
into
jg
inc
push
out
push
mov
cli
leave
rol
rcrl
push
add
add
out
pop
cltd
push
mov
push
push
pop
inc
imul
outsl
xchg
rcr
mov
mov
xor
xorb
or
xchg
lods
popf
dec
and
fsubs
lret
fmull
pop
fadd
mov
mov
insb
scas
and
test
or
jge
add
nop
mov
ret
sbb
jl
call
push
sbb
aaa
sbb
inc
and
iret
sub
out
adc
aad
shrl
mov
or
jb
aad
cmp
xor
movsb
out
and
dec
mov
xchg
jns
mov
sti
adc
sbb
in
jmp
jb
repnz
gs
fs
add
and
cmc
inc
pushf
stc
xor
cmp
and
pop
out
adc
xor
add
add
push
sub
inc
out
rcl
mov
loopne
adc
jl
ds
pop
push
xor
aaa
mov
call
cmp
pop
lea
mov
mov
push
mov
insb
movsl
call
xlat
fsubp
imul
movsb
das
jmp
cmp
cmp
or
pop
out
xchg
fidivl
jp
insb
and
mov
fsubrp
sub
sar
cmp
cmc
shrl
pushf
cld
cmp
cwtl
fwait
rorb
pusha
mov
scas
incl
mov
cmc
jb
adc
push
scas
lret
stos
out
cmc
cmc
cmpsb
xchg
push
xchg
cmp
je
push
cli
movsl
in
pop
dec
sub
sbb
roll
cli
leave
pop
inc
cltd
insl
orb
in
imul
jo
mov
ss
pop
push
mov
adc
popf
cmp
fdivrl
aas
jnp
jg
jmp
shl
outsl
repnz
test
sbb
lods
popa
repz
mov
xor
lods
lock
and
push
fiadds
out
mov
mov
xor
jo
js
insb
mov
and
push
jnp
sbb
push
ljmp
xor
addr16
mov
fwait
leave
lock
insl
int
shll
imul
scas
test
sbb
ret
dec
mov
jl
xchg
in
and
push
movsl
jns
jg
push
cmp
int
ja
das
fs
gs
aad
js
jo
mov
lret
test
push
sti
inc
sub
gs
aaa
mov
push
adc
fildl
in
jbe
scas
cld
inc
mov
push
sub
cwtl
pop
xor
adc
inc
fwait
subl
pushf
mov
rol
push
and
inc
roll
fcoml
fldl
sti
mov
testb
call
sbbl
pop
lock
in
jns
xchg
xchg
xor
loop
mov
ret
addr16
sub
or
dec
and
inc
xlat
mov
rcrl
mov
adc
sub
ljmp
jecxz
ljmp
outsl
dec
adc
push
push
pop
mov
jp
and
push
pop
das
push
arpl
dec
jns
test
add
xor
int3
in
mov
popf
lods
push
push
jne,pt
rep
xchg
ret
mov
inc
int3
add
test
aas
aad
or
mov
imul
insb
rcll
xchg
fcoms
cmp
leave
adc
fs
jne
adc
in
repnz
mov
mov
jmp
stc
cmpsl
and
divb
push
je
loope
andb
cmp
int3
ljmp
mov
pop
movsb
xor
pop
push
in
mov
dec
add
push
mov
rcl
sbb
pushf
ljmp
push
mov
cltd
aaa
std
divl
or
inc
sub
xor
mov
inc
div
cli
cli
mov
daa
mov
mov
je
jecxz
cmp
push
or
or
jno
mov
test
pop
mov
fistl
imul
test
data16
inc
pop
sub
cmp
out
sub
fwait
clc
or
movsb
cwtl
cmp
ret
mov
pop
rcrl
jo
jecxz
xchg
rorl
xor
test
and
je
stc
aaa
mov
andl
cli
xor
jo
aad
mov
xor
mov
fcoms
xchg
cld
lahf
lea
ficomps
aaa
test
pop
sub
push
cmp
popf
icebp
ret
add
xchg
or
xchg
mov
push
or
je
sub
bound
sub
jo
enter
insl
rcll
ja
sbb
ja
xchg
jns
lret
pop
pusha
sub
in
dec
push
loope
enter
loopne
mov
sbb
xchg
inc
inc
sub
push
inc
pushf
or
scas
push
fists
cmp
mov
outsl
mov
fcomip
cld
cltd
xchg
xor
mov
out
cmp
cs
fsubp
cmp
ficoms
jbe
imul
push
add
cli
fdivr
orl
mov
add
jl
pop
repz
adc
ja
push
mov
and
sbb
push
ret
xchg
aas
aas
mov
mov
cmp
add
aam
cli
nop
repz
sahf
jp
adc
inc
outsb
test
push
or
data16
mov
sahf
cmpb
cwtl
push
mov
fisubl
cld
jbe
out
test
fistpll
repz
shll
lret
divl
clc
cmp
scas
xchg
ret
lea
in
mov
cmp
mov
jp
in
out
popa
pop
adc
xor
xor
imul
cmpsb
test
lcall
mov
jb
fistps
add
add
lret
fmulp
mov
inc
mov
jge
loop
or
adc
inc
shrb
nop
fadds
jns
mov
add
mov
adc
ds
xchg
les
add
or
and
push
repz
leavew
aas
icebp
ficoml
mov
dec
aaa
dec
jl
and
mov
inc
rcrb
push
fsubrl
and
movsl
pop
rorb
mov
dec
sbb
dec
jge
lcall
xor
test
loopne
push
xchg
repz
mov
sti
scas
mov
jg
cmp
mov
mov
cli
ds
pop
ja
cmpsl
cmp
movntq
out
stos
sbb
push
jecxz
xchg
jp
subb
ret
int
add
pop
or
movsb
xchg
test
cmpsb
movsb
cmpsb
xchg
jo
add
dec
xlat
mov
inc
pop
int
adc
add
loope
and
shrb
mov
test
push
jno
and
sbb
adc
test
popf
loop
cmpsb
jl
mov
xchg
lea
xor
push
jecxz
imul
jg
xchg
in
sub
clc
xchg
mov
jno
mov
mov
sti
dec
addl
xor
and
addl
mov
mov
or
xor
fimuls
out
js
imul
mov
bound
inc
jge
dec
xchg
sbb
mov
lcall
mov
das
add
mov
pop
sbb
mov
push
je
adc
shl
out
sbb
movsl
push
dec
and
mov
cmp
mov
std
lods
dec
das
push
add
pop
mov
popa
movsb
mov
mov
xchg
jmp
out
xchg
xchg
jg
xchg
push
ss
mov
ljmp
jp
pusha
and
xor
inc
push
out
test
mov
jg
jle
imulb
rol
xor
dec
cmp
pushf
pop
test
dec
sbb
jecxz
pop
int
in
mov
and
xchg
inc
mov
mov
sbb
divl
rcrl
pop
push
sbb
mov
cltd
mov
push
mov
scas
cs
cmpsl
subl
xor
sbb
stc
push
orb
pop
mov
mov
pushf
adcb
and
mov
mov
inc
movsl
mov
inc
inc
rol
pop
test
dec
sub
dec
insl
xor
inc
leave
cltd
cmp
and
loopne
rorl
lea
fistpl
pop
mov
xor
fistpl
imul
mov
ficoml
int
push
fsubl
dec
bound
scas
clc
int
jbe
xor
jns
mov
jmp
xlat
movsl
stc
lock
pop
sarl
sub
pop
cmc
pop
push
out
test
orb
out
xor
jnp
xor
mov
mov
mov
insl
int
push
pop
inc
lret
in
rcrl
testb
cmp
loope
push
repnz
sbb
jmp
movsl
cmp
xchg
xchg
sbb
stos
lret
loope
add
mov
sbb
jae
jge
mov
sarb
clc
xchg
vrsqrtss
sbb
push
cli
cmpsb
xchg
fld
xor
jmp
xchg
inc
dec
call
mov
mov
mov
pop
or
jecxz
add
and
push
xchg
or
pusha
inc
fsubl
push
insl
inc
xor
shrl
pop
nop
dec
loop
movsl
and
dec
inc
xor
out
dec
roll
imul
fwait
lds
push
push
ljmp
sarb
cs
int3
xor
pusha
in
adc
adc
sub
xchg
sub
sbb
lahf
jecxz
push
add
addr16
aad
hlt
iret
and
test
or
cmpsb
jns
icebp
jg
adc
jns
cwtl
mov
mov
ret
inc
jp
outsb
and
scas
jge
fildl
mov
shlb
push
mov
pop
cmpsl
fcmovu
xchg
jbe
int
std
xor
shlb
or
jns
jmp
jle
call
xchg
out
nop
icebp
xchg
mov
sub
iret
jp
xchg
jp
push
mov
btr
sub
fisubl
lea
dec
imul
push
sub
pop
mov
xchg
or
add
stos
sbb
int
jle
inc
sahf
and
test
xchg
in
push
dec
mov
out
fdivrp
add
js
mov
test
sbb
std
mov
icebp
push
hlt
movsb
push
add
in
sbb
mov
adc
pop
out
mov
lea
les
jb
inc
in
push
inc
mov
scas
dec
popf
stos
fnstcw
ret
jns
mov
daa
sub
fiaddl
rcll
movsb
pop
scas
das
push
xchg
fcompl
fldcw
pop
jae
stos
aam
nop
add
xchg
daa
inc
sub
cmc
stos
cmp
jno
sbb
or
lcall
pop
cmpsb
mov
xlat
or
xchg
mov
add
xor
sar
xor
arpl
lret
adc
shlb
inc
pop
nop
jge
push
lahf
shl
jnp
jnp
dec
mov
imul
divl
adcl
xlat
sbb
scas
or
or
push
pop
ss
js
pop
mov
sbb
lahf
aad
dec
testb
lds
mov
test
xchg
enter
xlat
push
mov
loop
in
adc
mov
xlat
xchg
and
popa
pushf
inc
mov
xor
pop
jecxz
sub
mov
out
push
jge
ja
mov
sbb
fwait
push
dec
adc
sub
movsb
sub
pop
shr
popa
ret
fadds
in
cwtl
mov
je
mov
loopne
inc
add
dec
pop
dec
lds
sub
cmp
adc
jns
fucomip
pop
adc
roll
jne
mov
sub
mov
div
mul
popf
adc
or
xchg
in
pushf
adc
sbbl
aad
push
fcoms
es
dec
adc
dec
xchg
jge
inc
testl
clc
cmp
xor
or
jne
pushf
dec
movsb
dec
fdivrs
push
ds
rep
push
movsl
ffreep
sbb
pop
lcall
movsb
jmp
push
pushf
pop
xor
jne
bound
xor
rol
cltd
or
adc
xlat
test
add
xchg
in
insb
loopne
jl
or
pop
jmp
iret
addr16
stos
pop
push
incb
mov
in
inc
dec
push
sbb
push
sahf
adc
addl
pushf
cmpsb
data16
shlb
sub
dec
dec
pop
sbb
movsb
add
mov
out
movsl
jecxz
mov
hlt
aam
adc
cmp
inc
xchg
pop
ljmp
dec
xchg
pop
rcr
mov
test
xor
adcl
loopne
and
mov
add
mov
pop
popa
cmp
pop
push
ljmp
pop
xor
adcl
fisttps
mov
fcomps
pop
daa
movsb
mov
push
adcb
cmc
or
loope
popf
ret
iret
int
rcrl
int3
daa
push
pop
test
rcl
xor
dec
cmp
jns
cmp
sbb
sub
lcall
cmp
and
push
pop
andb
mov
ss
gs
pushf
xchg
inc
popa
inc
cwtl
jg
xchg
data16
mov
adc
mov
push
out
inc
pusha
push
mov
repnz
pop
jge
cmp
mov
sub
pop
xchg
lea
sbb
mov
or
mov
sub
insl
inc
outsb
mov
mov
push
inc
out
add
xchg
aas
shr
jb
pop
cmp
inc
mov
aam
fildll
fstpt
jecxz
cmp
pop
and
xor
adc
sbb
mov
xchg
dec
inc
lcall
mov
mov
into
mov
fsubs
mov
fidivrl
or
pushf
popf
or
cmp
push
addr16
cld
mov
cmp
dec
mov
xor
lods
in
add
dec
scas
gs
add
frstor
pop
rol
cmp
jle
cmp
mov
ffreep
shlb
xlat
xchg
out
mov
inc
das
xchg
sub
icebp
push
lret
sbb
jbe
cmpsl
je
loop
cmp
into
or
cmp
icebp
ss
je
pushf
adc
adc
repnz
or
fidivrs
stos
push
ds
mov
cmp
ror
imul
xchg
dec
aaa
or
or
push
push
loope
enter
imul
bound
sbb
pop
mov
inc
push
push
insl
jb
stos
mov
test
out
sahf
xchg
and
iret
sbb
xor
jg
data16
push
dec
sbb
lret
dec
push
push
pushf
ds
mov
outsb
lods
add
jmp
cmc
scas
fistpl
jo
adc
popf
xchg
push
mov
pushf
mov
and
loopne
cli
orl
aam
fadds
adc
popa
mov
pop
imul
pusha
fs
lock
pop
xchg
mov
enter
cmp
lods
lcall
jno
push
xchg
movsb
sbb
jne
lock
dec
mov
fsubr
sbb
dec
mov
jno
cmp
lods
in
or
cmpsb
idiv
push
rolb
or
mov
js
ret
outsl
push
pop
mov
arpl
dec
int3
xor
mov
in
push
les
mov
divb
sub
or
mov
into
mov
aam
je
push
ret
mov
xchg
out
push
loopne
out
std
testl
lret
pop
dec
repnz
andb
xor
mov
xor
pop
adc
aaa
shlb
cmp
filds
lods
or
mov
add
cwtl
mov
mov
pop
or
push
cmp
incb
or
xor
stos
cmpsl
dec
stos
mov
aas
xchg
or
bnd
lret
add
pop
cltd
dec
inc
repnz
ds
enter
mov
xchg
daa
mov
enter
out
mov
sbb
aad
cmc
lock
sti
mov
and
adc
and
lds
or
dec
inc
stos
in
push
adc
mov
sub
insb
and
aaa
js
and
rcrb
int3
ficomps
sbb
fwait
lcall
into
xchg
pop
in
fnstenv
mov
loope
pop
push
test
xor
xchg
and
adc
inc
jne
jmp
xchg
jg
jmp
rcrl
jne
xchg
cmp
inc
fisubl
pop
mov
add
xchg
and
daa
aam
out
cli
lds
xor
pop
std
js
gs
cmp
out
sbb
in
push
inc
sub
xor
and
outsb
or
ljmp
xor
xor
sbb
sub
loop
dec
popf
out
cmpsl
test
push
sysret
add
loop
ljmp
dec
jecxz
jno
call
jle
adc
and
inc
dec
and
std
add
inc
in
pusha
add
mov
es
sub
push
push
or
ret
dec
lods
repnz
gs
into
pusha
mov
adcb
sub
mov
dec
cli
rorb
loope
cmpsl
jne
bound
xchg
sahf
jno
aam
daa
inc
xchg
je
pusha
pop
ja
dec
xchg
fcoms
mov
cmp
js
popa
sub
xor
sub
insl
push
lea
mov
clc
push
push
mov
add
inc
pop
addb
mov
es
jp
daa
lret
sub
cmp
jle
or
mov
or
push
daa
dec
mov
or
sub
stos
xchg
mov
stc
sbb
sub
outsl
dec
or
lds
stc
out
mov
jnp
cmp
lds
add
dec
cmp
jb
xor
mov
push
mov
popf
movsl
mov
sarl
rcll
adc
push
mov
xor
loop
fs
mov
push
dec
ffreep
stos
cmp
dec
pop
push
adc
scas
push
xor
stos
jge
in
test
fiadds
add
sarl
mov
jg
dec
adc
leave
lahf
repnz
cltd
dec
pusha
lds
repz
or
xor
adc
jge
and
test
ret
daa
icebp
mov
ja
push
add
hlt
enter
daa
test
add
and
pop
lods
or
push
add
sub
outsl
inc
dec
jp
lret
inc
mov
sbb
mov
inc
xchg
insl
les
mov
mov
jbe
mov
rcrb
dec
mov
cmp
ds
add
sub
rclb
clc
aam
xor
daa
sub
xchg
bound
dec
sub
outsl
inc
pop
std
fisubrl
and
gs
movsb
xchg
mov
test
jmp
int3
dec
xor
cmp
jg
rol
sub
cmp
cmp
add
or
sub
imulb
mov
int3
es
mov
loopne
sbb
adc
jecxz
setnp
fstpt
inc
push
adc
xor
ds
in
xor
in
subl
dec
paddsw
subb
testl
mov
lods
ss
mov
adc
in
scas
push
divl
lods
and
iret
imul
inc
xchg
xlat
pop
adc
push
cmp
push
lods
or
imul
fdivr
xor
in
sbb
mov
in
xchg
testl
xchg
fistps
into
xchg
in
int3
or
inc
jp
mov
adc
enter
test
daa
pop
or
xor
cmp
push
pushf
test
aaa
pop
xchg
jg
test
xor
pop
cmp
les
stos
lret
inc
push
xchg
push
jnp
cwtl
rcl
cld
cmp
and
sub
inc
scas
dec
jo
mov
push
inc
insb
cmp
and
aas
into
sub
dec
mov
in
mov
mov
pop
push
inc
lahf
xchg
mov
sbb
addr16
push
inc
mov
or
divb
xchg
mov
cmp
loope
pop
pusha
push
pop
adc
popa
xchg
lret
mov
in
push
aaa
mov
ret
jecxz
popf
lret
jge
in
inc
into
lret
test
lods
pop
shl
push
sub
ss
cmp
scas
jge
test
mov
push
xchg
xor
jnp
scas
sub
sub
lds
push
sbb
cmp
push
psubb
arpl
or
push
sub
das
mov
mull
test
sbb
adc
mov
lahf
add
int3
scas
push
mov
enter
test
sbb
push
mov
in
inc
inc
pop
push
xchg
jne
xchg
push
add
sub
imul
inc
leave
cmc
and
test
jl
mov
mov
pop
or
out
sub
push
xchg
les
movsb
rol
xor
sbb
pop
insl
das
cmp
xor
jmp
sbb
mov
push
insb
push
in
ja
pop
pop
andb
stos
cmp
sbb
push
jo
xorl
enter
fisttps
push
cmpsl
out
aas
sub
fiadds
sbbb
sbb
mov
js
iret
sub
andl
divb
push
xor
mov
in
je
sbb
mov
std
or
std
mov
pushf
xchg
shll
subb
cmp
cmp
or
dec
sbb
and
adc
js
mov
push
or
dec
mov
and
fcmovnbe
test
std
fists
cmp
out
sbb
jg
repnz
ss
xor
sbb
push
adc
enter
and
aam
mov
fcoml
ficompl
repnz
pusha
in
cwtl
test
dec
mov
and
cmpl
and
sbb
or
mov
xor
clc
jle
dec
cmp
pop
jge
out
push
stos
js
hlt
test
cmp
and
enter
rcrl
jecxz
aaa
ds
ljmp
sbb
lcall
or
shrl
fildll
ds
out
mov
add
aad
push
in
xor
les
jge
nop
inc
xchg
in
lret
jl
xchg
mov
inc
push
lods
rolb
mov
cmc
push
icebp
cmp
add
adc
xor
std
hlt
ds
jl
adc
mov
dec
jne
inc
xor
xchg
pop
fwait
xor
cmovg
shlb
es
test
inc
xor
push
adc
popa
mov
imul
add
add
cmpsl
cmp
cmp
inc
stos
add
rcrb
sbb
add
add
mov
mov
pushl
fsubrs
sbb
fcmovnb
into
push
in
unpcklps
adc
jb
loopne
push
mov
pop
jp
leave
sbb
mov
push
sub
pop
repz
hlt
xchg
sarl
dec
mov
ud2
sub
pop
mov
loope
je
or
jns
repz
rep
movsb
jg
dec
push
test
mov
pop
push
lahf
mov
mov
mov
stos
lcall
and
mov
fists
push
add
imul
cld
push
push
lahf
push
iret
and
jmp
dec
sarl
jbe
jns
pop
add
fldt
xor
nop
or
sti
mov
lods
bound
enter
mov
push
inc
push
ficomps
jb
mov
mov
movsb
push
cmp
add
push
out
mov
dec
fs
js
aam
sub
inc
or
insl
setg
pusha
imul
jecxz
cmc
in
sub
adc
xchg
nop
lods
inc
in
es
sbbb
lods
ja
lcall
test
inc
addb
xchg
or
frstor
pop
jno
dec
adcb
clc
or
xchg
cwtl
jb
jecxz
rclb
add
or
dec
ret
lret
cmp
pop
test
aam
inc
cmp
rol
push
mov
subl
ss
call
sbb
cmp
xchg
sbb
xchg
aam
into
sbb
or
fisttpl
nop
out
or
ljmp
pop
adc
mov
and
xor
xchg
cmc
outsb
aad
jecxz
pop
sub
outsb
iret
rorl
rorb
add
mov
jno,pt
jbe
andb
popf
cmp
cmp
adc
mov
jle
xor
jmp
xchg
xchg
hlt
lds
mov
pop
mov
mov
adc
pushf
jle
fbstp
je
jne
test
inc
cmp
xor
orb
or
shr
repnz
fcmovnb
imull
out
arpl
xorb
fcomi
sub
xchg
mov
push
sbb
aas
flds
imul
popf
hlt
xor
jp
push
xorl
dec
jl
cli
popa
sub
test
cmp
lahf
dec
or
sub
sbb
js
inc
xor
cli
and
int
dec
push
clc
pop
push
lcall
test
jo
fwait
callw
and
fcomi
jbe
aaa
dec
pop
les
xor
xchg
ret
daa
scas
cmp
fs
daa
dec
call
jo
cwtl
data16
aad
jle
fisubl
psubw
mov
pop
mov
aam
sbb
xchg
adc
xor
mov
daa
scas
push
pop
cld
xor
jnp
or
fnstsw
mov
push
test
mov
inc
mov
jnp
or
and
sbb
shrb
nop
add
rcrb
pop
sti
stc
cmpb
mov
es
andb
dec
ljmp
cld
dec
jle
adc
adc
sub
repnz
cltd
xor
orb
fisubs
and
or
jbe
xor
mov
jae
scas
pop
out
sub
ds
gs
cmp
mov
sub
mov
into
loop
out
mov
movups
aas
insl
daa
sbb
les
pop
je
flds
fdivrl
scas
or
fwait
je
or
and
test
mov
lahf
cmpsl
pop
dec
es
dec
inc
push
jg
test
mov
callw
jae
xchg
add
jno
push
and
mov
aaa
or
mov
stos
cmpsb
insb
add
jns
mov
hlt
ja
dec
test
stos
ret
int3
pop
sub
or
pop
mov
push
movsl
push
stc
push
int
xor
sub
mov
mov
cmp
in
and
lret
xchg
jg
lret
dec
adc
xlat
lcall
test
mov
insl
cmpsl
lds
jge
and
fcoml
hlt
xchg
shl
push
fcomi
leave
cmp
movsl
or
lcall
clc
out
push
pusha
dec
stos
push
mov
stc
inc
inc
push
dec
add
jge
sub
mov
leave
mov
rcll
sti
test
xchg
pop
pop
sub
shrb
or
es
jnp
movsb
repnz
pop
dec
push
and
inc
xor
add
jne
loopnew
pop
test
or
insb
mov
mov
push
inc
push
cld
in
cmp
mov
divl
mov
inc
adc
test
movl
lret
jne
fistpll
mov
xchg
cwtl
xor
movsb
sbb
cs
iret
popfw
into
fcoms
mov
cwtl
sahf
add
sahf
mov
out
and
xchg
pop
mov
int
das
cmpsl
jle
jecxz
popa
scas
cs
int3
shll
dec
arpl
jae
mov
lret
jns
pop
repz
adc
lret
dec
movsl
push
mov
add
addr16
pushl
pop
cmp
ja
add
ljmp
data16
adc
shlb
rcrl
pop
pop
and
or
lds
sub
adc
push
in
xor
push
jmp
scas
cld
xchg
add
inc
cmp
scas
jne
jle
fildll
movb
popa
inc
inc
cmp
aaa
sti
xchg
shlb
icebp
test
aad
xor
das
add
mov
and
mov
repz
push
mov
add
sarb
enter
test
cltd
xor
ds
fisubrs
in
sbb
clc
add
push
mov
sub
adc
add
ret
out
sbb
and
jmp
push
test
icebp
inc
stc
sbb
mov
xor
fs
add
ljmp
xchg
jge
mov
and
jae
xchg
js
rorb
ja
stos
nop
js
push
dec
jne
xchg
jne
mov
sahf
jle
pop
xchg
add
inc
inc
cli
xchg
mov
jge
ss
int3
shl
stc
push
test
insb
shrb
and
enter
jecxz
les
jae
loope
les
or
adc
jb
iret
iret
repz
push
popa
add
lock
repz
push
fsubl
sub
mov
jne
add
mov
movsb
push
or
sbb
ja
jp
jno
dec
lcall
dec
jb
inc
jbe
inc
lds
fldcw
xor
pop
mov
call
mov
cmpsl
mov
inc
dec
sub
cwtl
xchg
xor
sbb
ds
bnd
cmpsb
xchg
sbb
pop
adc
imul
push
xchg
mov
or
mov
scas
in
shrb
mov
es
arpl
popa
jg
dec
mov
mov
mov
jp
lahf
jecxz
shl
cli
fdivs
push
ficomps
fiaddl
dec
ss
cmpsl
in
or
fstpt
std
outsb
xor
cli
fdivrl
mov
jb
sbb
cmp
aaa
push
or
dec
xchg
push
or
sbb
stos
inc
push
aas
sbb
rcrb
mov
bound
pop
stc
sti
mov
lahf
jg
push
aam
pop
inc
aaa
test
jb
movsl
es
lcall
mov
add
add
js
out
xor
ja
adc
xchg
push
iret
iret
fsubrp
call
cmc
cmc
pop
lahf
inc
cmc
xor
icebp
ror
jg
add
rcr
imul
push
and
sbb
in
xor
xchg
push
xchg
inc
and
fdiv
popa
test
stc
cmpsl
pop
ret
in
sub
js
mov
dec
outsb
fisubrl
lret
stos
das
loop
xchg
mov
sub
iret
push
filds
aas
cmp
xchg
add
and
mov
dec
sbb
or
xchg
push
dec
int
fdivrp
jae
dec
adcl
imul
loopne
cmpsl
scas
xchg
or
sub
cld
sarl
jp
jne
idiv
xor
adc
and
push
add
pop
pop
push
dec
pop
int3
push
adc
mov
push
call
push
es
pop
mov
nop
out
jmp
lods
daa
lock
sbb
bnd
js
adc
push
subb
js
jmp
movsb
inc
into
ss
gs
or
cmpsb
aad
stos
ja
xchg
adcl
mov
fucomp
mov
cmpsb
xlat
bound
mov
out
je
mov
xorl
xchg
and
test
hlt
xchg
aas
shlb
stos
popf
nop
insb
sbb
inc
cld
sub
cmc
dec
sub
iret
mov
les
xchg
mov
pop
stos
lret
mov
cmpsl
in
cld
lea
test
push
inc
lock
bound
mov
push
lds
dec
roll
push
mov
loopne
int
mov
add
and
push
push
mov
shrl
movsb
push
or
andb
xor
sub
je
dec
mov
lahf
jmp
popf
iret
inc
out
icebp
xor
or
jl
jmp
dec
test
icebp
mov
dec
xor
jno
mov
xor
rorb
jbe
or
out
sbb
rolb
jge
xor
ds
insb
lret
fmuls
pusha
fildll
dec
cwtl
arpl
adc
jge
mov
mov
rcrl
sti
xchg
push
lds
stos
add
test
pop
call
sbb
pop
mov
enter
jle
shr
ret
dec
nop
mov
aad
ret
push
and
xchg
sbb
mov
mov
push
xor
aam
adc
mov
pop
hlt
int
sbb
and
cltd
push
mov
outsl
mov
and
andl
jmp
lahf
icebp
push
jl
je
mov
data16
pusha
popa
loopne
mov
or
mov
cmc
xchg
int3
cwtl
mov
test
or
push
sub
aas
jns
xor
pop
fs
imul
mov
lret
nop
popa
leave
addr16
pop
call
insl
repnz
stos
mov
mov
hlt
call
loopne
xor
push
jle
pop
lret
dec
insb
cs
outsl
iret
scas
rcrl
mov
int
cs
mov
mov
fs
cmp
sub
mov
frstor
adc
nop
pop
and
inc
mov
sbb
insb
stos
lret
xchg
add
push
cmp
pop
loop
leave
jo
rcrb
sbb
inc
push
cmc
enter
sbb
mov
pop
mov
sarb
rclb
aad
pop
mov
inc
data16
lret
or
in
dec
xor
cmp
cmp
imul
sub
xlat
mov
jo
mov
jbe
pop
pop
jge
insl
and
fldcw
push
es
ret
test
sbbl
cltd
out
sub
les
xor
fistl
movsl
xchg
loopne
roll
std
mov
notl
cltd
jg
pop
iret
mov
imulb
cmpsl
jg
ljmp
or
mov
and
cmp
mov
mov
ret
test
hlt
mov
ja
popa
push
adc
jecxz
mov
out
jo
aaa
jle
inc
lds
lahf
fiadds
pop
and
xchg
mov
dec
stos
test
sti
pop
mov
into
lods
sub
int
sbb
insl
xchg
rcr
mov
insl
inc
lcall
ss
add
dec
xlat
stos
aas
add
dec
push
inc
dec
mov
sub
shlb
mov
jns
jmp
repz
xchg
fldenv
dec
outsb
cmp
cmpsb
jg
pop
inc
popf
xorl
push
std
add
pushf
jo
add
out
xor
push
or
icebp
imul
xchg
add
in
dec
mov
es
shlb
jae
and
cs
xor
mov
lret
out
lods
popa
lds
add
stos
icebp
jb
je
sub
cld
pushl
xchg
and
add
mov
ljmp
xor
mov
pop
jge
jl
xchg
push
lret
clc
jp
and
rcrb
cmp
xchg
in
daa
movsl
push
or
sarl
cld
cmpsl
xchg
jmp
sub
push
mov
add
inc
xchg
push
and
add
or
jb
js
orl
adc
roll
ret
xor
test
in
add
or
push
lea
push
xchg
push
inc
test
cmpsl
fucomip
adcl
rorl
loopne
ret
imul
jns
jmp
sub
pop
je
jge
sbb
inc
rorl
xlat
out
mov
sub
lods
mov
sahf
cmp
adc
fstps
and
repz
push
mov
stc
pusha
inc
sub
shrb
cmp
imul
out
cmp
scas
mov
mov
loope
mov
adc
mov
jecxz
aaa
lock
cld
pushf
push
or
dec
out
js
lahf
bound
fucomip
lds
and
cmpsb
pop
cmp
sti
stc
cmpsb
pop
sbb
std
imul
fwait
jl
xor
adc
addr16
pushf
jne
jno
or
sbb
xchg
dec
lcall
adc
xchg
lods
outsl
or
cmp
cmp
or
push
mov
dec
inc
push
orl
pop
aam
add
xchg
das
xor
ja
jb
sub
cmpsb
or
or
sub
add
pop
pusha
dec
push
repnz
in
nop
mov
mov
pop
insl
and
push
jp
cmpsb
and
and
or
lock
mov
lea
mov
mov
jle
loopne
test
mov
shrl
pop
push
jle
fidivs
or
fldenv
int3
mov
add
mov
or
sub
out
add
clc
data16
cmpsb
push
push
bound
mov
js
inc
add
loope
scas
fimull
aaa
jmp
lahf
movsl
repnz
je
inc
jo
loop
jge
push
adc
add
rorb
loope
ret
xor
mov
mov
dec
sbb
les
cmp
add
in
arpl
push
mov
mov
xchg
xchg
dec
dec
int
ret
andl
push
adc
sbbb
adc
aaa
or
mov
sub
jns
sti
sbb
pusha
repz
mov
in
in
xor
shrl
pop
cmp
add
lds
popf
loopne
ja
dec
mov
push
inc
cmp
push
shl
call
add
xor
sti
pop
shll
jae
aaa
or
es
and
add
subb
or
fwait
jo
adc
mov
imul
sbb
push
les
dec
insb
sbb
iret
lcall
pop
cmpsw
dec
fs
scas
fs
imul
pop
repz
fdivl
cmp
test
icebp
xchg
inc
mov
scas
and
adc
dec
ret
dec
mov
leave
pop
sbb
les
jmp
push
inc
out
loop
sub
mov
adc
push
and
sub
nop
ja
sub
push
push
sub
adc
dec
push
fmulp
cmpsl
fwait
mov
and
cwtl
and
mov
xor
jb
mov
rclb
inc
xchg
mov
pop
mov
stos
rorb
int
testb
hlt
fsubr
iret
cmp
jmp
and
cli
push
mov
loop
aam
lret
cwtl
jne
fists
iret
orb
dec
xchg
push
std
mov
inc
pminub
out
stc
mov
fst
ret
bound
shrb
shlb
mov
in
push
ljmp
inc
push
pop
cmp
jg
ret
mov
in
xchg
sub
jbe
subb
push
fwait
push
ja
and
out
inc
notb
dec
jmp
cmp
push
xchg
inc
cmp
push
xchg
sbb
je
inc
push
push
dec
sub
clc
stos
scas
or
add
popf
cmp
fidivrs
mov
out
loop
push
sub
js
mov
stos
outsl
out
imul
mov
mov
inc
sub
inc
fs
pusha
shlb
int3
fwait
hlt
push
mov
stos
fwait
or
add
push
sub
int3
push
nop
mov
jecxz
shll
repz
inc
mov
les
push
sub
lock
pushf
xchg
xor
popf
arpl
pop
int
add
sub
pop
stc
fldt
icebp
jp
aas
int
sub
xchg
xchg
push
mov
pop
xor
push
je
sub
xor
sahf
in
roll
sub
rcrl
mov
fdivrs
cmp
mov
xchg
xchg
add
inc
push
fcoml
pop
inc
cltd
sti
sarb
xchg
lret
stc
push
fcoms
rcrb
ret
prefetch
mov
insl
cli
test
lods
stc
mov
psllq
cmp
jns
loop
scas
aaa
dec
dec
mov
cmp
or
pop
shl
xchg
out
sub
mov
mov
out
inc
pop
out
jecxz
inc
sub
fisttpl
pop
andl
pop
push
in
and
push
push
nop
hlt
mov
iret
dec
xor
mov
outsl
fstp
outsb
test
pop
pushf
push
dec
mov
cmp
xor
sub
adc
jmp
inc
js
mov
jle
mov
jo
sub
adc
adc
xchg
vphaddwq
inc
fcompl
jecxz
xor
scas
addr16
pop
cmp
sub
pushf
pop
inc
lods
jge
pop
add
jbe
push
cmpsl
jno
enter
lock
hlt
mov
stos
sbb
sbb
leave
sub
sub
addb
cmp
push
ljmp
xor
dec
jmp
and
adc
lea
xor
jne
mov
cmp
inc
jmp
insb
cmpsb
sahf
pop
push
es
daa
adc
and
enter
mov
cmp
js
pusha
movsb
adc
pop
test
and
insb
mov
and
xor
fimuls
jmp
xor
xorl
ljmp
sub
sbb
or
ret
cmp
dec
sbb
mov
dec
ss
and
push
sub
add
int3
mov
pop
jnp
gs
xlat
fs
mov
inc
out
or
cmpl
push
xchg
cmp
inc
loope
jns
xchg
pop
iret
insl
fsubrl
jo
mov
sbb
std
repz
pop
pop
dec
mul
dec
xor
rclb
pushf
cmp
cmp
hlt
push
lods
dec
sub
dec
aam
mov
pop
stos
sub
mov
dec
mov
mov
jl
jp
mov
roll
sub
xchg
cmp
mov
xor
les
fcomp
sub
out
xchg
xchg
push
arpl
stc
js
out
push
dec
arpl
jno
inc
xchg
cmpsb
jae
mov
sarb
aam
test
push
jl
enter
rorl
fs
cli
and
imul
and
sub
loop
cs
imul
inc
mov
test
notl
mov
pop
and
aad
inc
jae
inc
xor
lea
jne
lea
stos
ret
cmc
sub
add
das
push
xor
xor
inc
fs
ret
addr16
aas
jmp
sub
mov
loopne
push
pop
jl
xchg
xor
xchg
addb
rcll
es
mov
or
testl
cmc
mov
inc
out
out
mov
fmul
mov
outsb
lods
sbb
mov
dec
nop
dec
iret
inc
mov
std
xchg
mov
insl
cmpsl
cltd
xchg
pop
xor
adc
cmpsb
cmp
ljmp
shrb
and
or
push
xchg
pop
dec
mov
and
ljmp
mov
jnp
sbb
fadds
inc
fs
sti
jnp
mov
pop
test
inc
add
cmp
or
mov
shrl
push
push
test
pop
fs
push
insb
iret
pop
les
test
lret
adc
jmp
enter
adc
adc
push
mov
pop
lahf
mov
pop
insb
pop
cwtl
shrb
dec
mov
xor
stos
adc
popf
je
xchg
dec
push
mov
inc
sub
push
negw
stc
dec
repnz
pop
or
cli
ret
cmc
sti
lock
std
inc
xor
inc
and
mov
in
call
bound
popa
adc
out
test
mov
inc
sbb
les
xchg
add
loopne
push
std
out
adc
jle
cmp
loop
push
inc
fsubl
pop
ss
xor
popf
std
test
sti
in
pop
inc
sbb
add
push
xor
ret
sbb
daa
pop
sub
xchg
mov
sbb
iret
push
mov
mov
adc
pop
push
adc
xor
xchg
jb
mov
out
jl
jae
jb
inc
add
mov
repz
pop
test
mov
lret
out
ret
pusha
lret
in
inc
addr16
sbb
loope
mov
int3
sub
sub
stos
pop
enter
inc
push
dec
les
scas
sub
xor
sub
jp
sub
es
and
dec
ds
pop
shlb
sahf
lcall
cmp
movsb
xchg
lahf
lcall
push
bound
ffree
in
orl
add
add
sub
mov
hlt
sbb
testb
testb
test
mov
out
jp
clc
push
inc
fiadds
ljmp
clc
dec
cs
sbb
rcr
add
cmp
adc
addr16
push
ret
and
data16
cwtl
xlat
aas
mull
daa
and
push
fidivl
or
mov
cld
dec
and
adc
jmp
and
adc
push
ret
add
xchg
cmp
adc
or
mov
inc
cmp
pusha
outsb
mov
icebp
pushf
cmp
add
mov
cs
in
add
loopne
mov
add
les
in
sbb
stos
inc
sbb
ds
inc
cmp
sub
mov
cli
jns
iret
iret
jae
push
mov
jl
lea
inc
sbb
lods
adc
pop
jbe
mov
mov
and
adc
out
and
xor
push
mov
jns
out
stos
or
xchg
lahf
call
hlt
xlat
cmp
xchg
mov
cmp
sub
push
sub
outsb
mov
int3
test
call
push
sub
rclb
xor
push
inc
adc
push
ja
fsubs
cmp
imul
sti
test
mov
pushf
pop
lcall
imul
mov
imul
jecxz
pop
shrl
xchg
xlat
mov
mov
insl
negb
and
dec
inc
mov
fcmovbe
jl
and
lods
mov
jae
fnstenv
movsl
mov
inc
dec
imul
mov
adc
adc
sar
nop
jae
js
xchg
sahf
mov
push
and
repnz
and
adc
popl
sbb
mov
movsl
push
arpl
mov
dec
fldcw
fcomps
ss
mov
sub
jp
xchg
pop
pop
add
lcall
shll
mov
test
sti
ljmp
dec
inc
imul
je
sub
or
int
pushf
insb
arpl
jp
cli
insl
pop
hlt
incl
repnz
jb
lods
push
sbb
lds
idivl
in
pop
dec
or
loopne
xchg
fistps
mov
into
adc
lret
and
inc
out
stos
in
pop
dec
ret
cli
mov
in
and
mov
sub
dec
cmpb
xor
pushf
cmc
ret
imul
dec
or
xchg
pop
xchg
jno
sarb
popf
cmpl
or
and
sbb
je
shrl
jne
orb
mov
pusha
lahf
xor
inc
je
lock
mov
popf
mov
lods
mov
xchg
pop
or
nop
int
dec
cmpsb
dec
ljmp
dec
ret
cld
lret
jae
xchg
in
inc
in
mov
lret
pop
jecxz
inc
ja
jne
test
addr16
das
adc
mov
push
out
jno
or
xor
inc
inc
mov
mov
lds
test
push
sub
imul
cmpsb
and
adc
cmpsb
lea
jb
pop
cmp
pop
mov
out
inc
psubsb
mov
or
mov
or
mov
sub
insb
push
pop
outsb
mov
push
cld
test
add
inc
push
scas
sahf
popf
xchg
pop
rolb
xchg
lahf
pop
je
add
xchg
push
ror
hlt
push
lock
mov
inc
sbb
inc
int3
inc
inc
hlt
data16
out
push
pop
pop
test
xchg
mov
mov
and
dec
cmpsl
lret
sbb
bound
cmp
mov
in
fmull
cmp
pop
cmp
call
xchg
adc
stc
arpl
gs
mov
dec
movsb
sbb
aam
pop
test
mov
js
shll
pop
fs
into
nop
xor
mov
movsl
fstl
pop
scas
insl
sbb
cmp
imul
in
cmp
inc
in
sbb
mov
cltd
ja
push
and
lods
outsl
push
inc
int3
loope
push
and
and
and
fists
inc
notb
jg
stos
dec
dec
mov
test
shlb
cs
mov
test
test
sbb
repz
jnp
add
lret
lret
sub
mov
orl
jg
cmp
sub
xchg
jnp
nop
cmp
sbb
dec
and
loope
lods
pop
das
mov
lds
movsl
addl
add
sbb
add
cmp
cmc
dec
xlat
loope
loope
push
xchg
mov
mov
cli
lods
movsb
enter
enter
push
fadds
mov
nop
ret
dec
inc
shr
adc
rclb
cmp
loopne
push
aaa
mov
jns
push
add
dec
out
add
and
cmp
rcrl
and
bound
inc
iret
aam
sub
mov
fs
sbb
jbe
cld
lods
pop
mov
sbb
out
mov
xchg
dec
int
fiadds
movsb
lods
js
and
stos
fnstenv
pop
sub
inc
add
rorb
dec
fistps
mov
rolb
inc
sub
inc
pop
lds
aaa
mov
xor
mov
xchg
call
repz
inc
add
sub
loopne
inc
xor
pop
push
xchg
mov
pop
lds
sub
inc
inc
dec
jb
mov
cld
lods
and
out
push
lcall
aad
dec
idivl
lock
or
test
lret
jl
jno
insb
cmp
out
and
add
mov
add
add
push
and
or
xor
xchg
subb
dec
add
repz
xchg
mov
jns
decb
mov
cmpsb
fisubrl
jl
pop
sbb
adc
and
adc
and
leave
lret
imull
sbb
and
jmp
or
and
test
sub
cltd
outsl
test
shrb
jae,pn
arpl
adc
or
jecxz
lret
es
inc
lahf
addr16
mov
sbb
shlb
addb
inc
lret
shlb
bound
into
jmp
out
cmpsb
mov
dec
pop
xchg
pop
mov
push
ret
fdivrl
lret
cmp
pop
jmp
add
or
sub
cmp
ds
lret
and
inc
nop
jg
fldl2e
or
movb
mov
cmp
dec
xor
pop
mov
mov
fdivl
out
mov
ja
rclb
push
aaa
sbb
cmpsb
filds
mov
into
mov
xchg
xor
insl
dec
adc
xorps
mov
xor
inc
fidivl
or
ds
mov
sbb
mov
cmp
btr
pop
push
jmp
enter
sub
push
dec
push
mov
mov
adc
mov
mov
mov
leave
sub
xor
push
push
pop
popa
shl
and
mov
dec
pop
jmp
int
jg
out
push
cmpsl
test
push
call
je
dec
in
mov
cli
dec
xor
add
dec
out
lods
int
sahf
sub
ja
jle
mov
fildl
sti
icebp
or
jnp
ds
cmpsb
addl
dec
ret
cli
ljmp
jns
lret
mov
insb
xchg
adcb
xor
cmc
fwait
cmc
hlt
and
dec
dec
adc
dec
ret
imul
push
repnz
xchg
wrmsr
dec
mov
bound
dec
or
push
push
clc
pop
adc
jmp
das
dec
inc
or
std
in
xchg
mov
lea
push
mov
icebp
inc
leave
rcr
or
pop
andb
in
jnp
sti
lock
rclb
lea
jbe
cmp
fstps
adc
adc
repnz
add
adc
and
xor
loop
data16
fadds
xchg
idivb
pop
add
lods
jecxz
pop
xor
cmp
sub
mov
sub
lds
mov
jb
mov
cmc
cltd
xor
test
cwtl
outsb
pusha
sbb
adc
bound
sbb
es
pop
or
psubw
inc
pop
lea
fisubrl
js
iret
sbb
jo
or
xor
xchg
and
call
xchg
jo
out
mov
push
test
call
out
out
push
inc
cmpsl
rcrb
mov
rorl
movsl
jmp
ss
loop
mov
xor
mov
cmp
inc
imul
xor
fninit
inc
loop
jmp
es
loope
cld
outsb
push
sub
stos
and
loop
pop
mov
loop
dec
aas
and
lods
dec
mov
mov
mov
jnp
xor
rorb
test
lret
loope
mov
mov
cld
mov
mov
int3
stos
pop
dec
sub
xchg
movsl
hlt
dec
pop
mov
jbe
js
jg
fidivrl
dec
mov
sub
sub
pop
lds
and
testl
mov
pop
rclb
push
push
push
cmp
pusha
fiaddl
fcompl
add
inc
add
cmp
adc
popf
shll
push
jp
aaa
cmpsl
es
popa
jnp
pop
cld
stos
xchg
in
loopne
jns
je
aas
les
scas
cmp
cmp
jo
mov
jecxz
pop
add
xor
cwtl
mov
inc
xor
scas
mov
mov
pop
repnz
pop
data16
sub
pop
dec
insl
lret
pushf
adc
clc
roll
or
popa
in
fstpt
mov
xor
lods
movb
sahf
enter
adc
push
xor
mov
push
cmpsb
jns
das
in
pop
xor
popa
sbb
shrl
jo
pop
out
add
fcomps
shl
and
xor
cmpsb
bound
lods
mov
sahf
ja
out
jle
stc
cs
push
or
push
popa
gs
pop
pop
mov
in
xchg
add
in
dec
cmp
jb
testb
sub
lret
xchg
les
iret
jno
cmp
paddusb
inc
xor
inc
movsb
and
imul
inc
xchg
insl
nop
adc
adc
addb
insl
hlt
add
xor
or
push
mov
icebp
cli
or
inc
clc
inc
mov
gs
mov
sub
sbb
iret
mov
sbb
cmp
daa
imul
jl
cmpsb
pushf
neg
das
ret
shlb
push
jae
cwtl
add
cmp
movsl
jle
xor
pop
and
out
add
cmp
bound
jp
xchg
scas
xchg
and
sarl
cmp
dec
and
fcoml
inc
aaa
push
fidivrs
jnp
cmpsl
fildll
lods
mov
addr16
rcll
add
mov
xchg
pop
cld
mov
adc
loope
mov
push
cmc
adc
jno
movsb
out
ret
mov
push
ljmp
push
adc
jo
mov
xor
lea
out
loop
mov
out
xchg
mov
fcomps
mov
mov
insl
mov
jo
jge
jb
jno
dec
inc
jb
daa
rolb
add
lea
xchg
inc
test
jmp
jmp
nop
loope
jmp
lcall
sti
dec
imulb
jge
repz
cltd
fwait
xchg
jl
xor
je
in
cmpsl
out
mov
xchg
scas
jle
adc
popf
fwait
jae
adc
loop
jle
or
pop
mov
stc
jne
shrl
xlat
inc
mov
xor
into
sbb
js
mov
test
loope
cs
adc
bound
mov
mov
or
insl
adc
sub
jle
sbb
dec
or
jmp
sahf
fiadds
and
mov
dec
add
pop
or
add
fimull
jne
cmp
fisttpll
es
insl
aam
mov
xchg
stos
xor
xchg
add
in
fmuls
push
in
loopne
stos
mov
test
js
sti
push
ret
mov
or
jge
pop
inc
xlat
push
mov
ss
xchg
add
clc
xlat
lds
repnz
mov
fdivs
xor
mull
or
fdivrl
loop
mov
mov
mov
or
enter
xchg
pop
sub
push
test
adc
add
test
aaa
dec
imul
or
shll
cltd
cwtl
inc
inc
adc
mov
ja
push
loop
icebp
in
lock
mov
xchg
imul
pop
push
mov
dec
pushf
xchg
sbb
into
adc
jmp
push
arpl
and
push
mov
stos
cmp
pop
scas
sub
sub
loop
fisubrs
daa
pop
dec
dec
pop
outsb
mov
push
mov
jle
mov
dec
aaa
fmuls
xor
insl
mov
adc
scas
mov
cmpb
out
ret
fs
inc
mov
and
xchg
shll
dec
jb
movsl
add
jp
out
push
push
daa
test
in
inc
lods
and
jp
cmp
dec
ret
iret
sub
lods
aaa
test
out
mov
xor
loope
daa
jl
mov
insb
es
push
jp
push
pop
nop
imul
or
mov
add
out
xlat
inc
mov
or
jg
out
popf
pushf
xor
loop
movsb
mov
pop
add
dec
ja
jnp
jne
out
xchg
jmp
cwtl
sub
bound
or
or
ret
sbb
not
push
fisubs
bound
aam
lock
jl
addr16
insl
ret
or
test
pusha
in
imul
mov
test
faddl
sbb
cltd
push
call
sub
mov
imul
inc
das
ret
and
mov
sub
roll
add
aam
xor
loope
xchg
pop
loopne
pop
lods
push
divl
xchg
insl
lret
dec
gs
aad
lahf
cmp
sti
in
add
jnp
lods
jp
mov
fcmovnbe
xor
mov
cmp
adc
test
lret
std
imul
adc
xor
loopne
fmul
mov
scas
hlt
xor
xchg
out
std
inc
aaa
std
jbe
xlat
test
les
cmp
xor
mov
xor
int3
push
mov
inc
decl
push
lcall
imul
nop
ja
into
icebp
lret
mov
xor
cmp
mov
nop
mov
adc
xchg
xor
insb
hlt
movsl
sahf
test
call
xor
add
imul
dec
fcmovnu
rcll
and
call
inc
int3
or
dec
ds
js
adc
mov
inc
ja
cld
outsl
lds
test
cmpsb
sti
xchg
add
stc
pop
push
inc
push
cmp
xor
jmp
push
cmp
adc
loop
adc
popa
movsb
ret
ret
scas
pop
push
push
push
imull
das
add
adc
fwait
jg
mov
sub
xchg
loope
push
sub
pushf
mov
mov
cltd
outsl
mov
add
gs
pop
mov
cmpsl
out
pop
sbb
mov
out
and
inc
test
mov
or
shlb
adc
sarl
jge
cmp
mov
inc
mov
add
shlb
cmp
sub
xchg
daa
add
ja
repz
jmp
mov
inc
les
xchg
sbb
mov
jnp
stos
aas
fidivs
fidivrs
inc
enter
aaa
add
repz
pop
xchg
pop
aaa
fadds
ret
xor
pushf
shr
out
popa
and
push
fwait
sub
shl
or
cmp
cs
mov
call
aas
gs
cltd
pop
lock
out
xlat
pop
add
sub
cmp
adc
fsubrs
pusha
jnp
fidivl
push
mov
cmpl
xor
imul
outsl
pusha
shr
iret
flds
aam
lret
into
fcoms
mov
ss
and
fldt
xor
sbb
jnp
clc
ret
adc
ret
push
je
sub
and
sub
loope
mov
ds
jne
mov
rcrl
inc
out
adc
cmp
cmp
rcl
push
pop
sbb
leave
lock
popa
jl
dec
inc
fnstenv
mov
ja
jnp
lcall
rcl
ss
and
mov
fidivs
popa
jle
int
xor
adc
push
mov
insl
push
xchg
fstl
orl
aas
out
xlat
sub
lret
loop
popa
imul
enter
sbb
pop
lods
mov
mov
mov
cmp
sub
sti
push
and
xor
cld
and
jnp
lret
bound
add
mov
fucomi
repnz
lock
pop
xchg
lods
sbb
jg
mov
and
and
and
sbb
xchg
mov
inc
mov
addl
test
pop
scas
js
leave
and
push
cmp
cmp
xchg
test
or
add
push
lods
push
mov
pop
flds
testb
lahf
pop
mov
ret
aas
xchg
cs
dec
fiadds
in
mov
xor
int3
ss
add
aaa
jns
arpl
out
ja
xor
lds
cmp
mov
adc
clc
repz
cmpsb
pop
xchg
jns
test
mov
mov
dec
push
or
cltd
lcall
or
loopne
xor
in
jmp
mov
outsl
movsb
push
add
mov
aam
out
sub
dec
pop
mov
push
int
mov
leave
adcb
nop
repz
lea
jge
daa
les
out
imull
inc
sti
mov
push
fistl
pusha
nop
ljmp
push
out
and
mov
xor
aaa
cld
jl
cmp
mov
dec
daa
cmpsl
pop
dec
mov
icebp
pop
sahf
ficoml
jmp
les
dec
jp
xchg
xor
xchg
lahf
repnz
cmpl
mov
je
mov
mov
xchg
outsb
es
mov
loop
fdivrs
and
out
sub
loope
push
push
mov
clc
push
insb
loopne
nop
mov
nop
cmpsl
dec
leave
cwtl
cmp
xor
seto
cmc
test
push
test
dec
stos
pop
and
outsl
mov
pop
mov
roll
cmpsb
mov
movsb
push
push
out
xchg
add
lahf
loopne
pop
push
mov
or
call
mov
jno
es
sbb
xor
cld
adc
mov
mov
leave
lea
decb
xchg
adc
add
fistl
pushf
jg
jp
icebp
xchg
cltd
cmp
push
out
sbb
scas
pop
lret
xchg
mov
lea
adc
in
push
pop
add
ljmp
xchg
lds
or
push
mov
test
lods
sub
jecxz
push
repnz
ret
inc
jno
push
sbb
in
in
or
repnz
sahf
out
mov
xchg
rep
dec
loopne
xor
push
out
push
ret
pop
and
stos
sbb
add
imul
sbb
mov
push
mov
pushf
das
gs
loop
popf
pop
subb
insb
mov
pop
pop
mov
lods
stos
jmp
lock
mov
sub
inc
faddl
dec
rolb
and
stos
and
push
xor
jmp
andl
xchg
shlb
mov
insl
or
jo
xor
mov
test
inc
sub
add
lods
leave
out
jl
dec
sub
mov
loope
arpl
mov
cmpsl
in
dec
xchg
push
sbb
sbb
jbe
in
call
loop
cmp
out
cli
lahf
shll
movsb
and
jns
lea
lea
dec
mov
adc
inc
test
jmp
insl
mov
scas
cmp
enter
pop
or
enter
in
jno
testl
test
fbstp
adc
sbb
push
or
lods
push
pop
repz
adc
flds
stos
mov
jns
lea
js
inc
inc
aaa
imul
insl
lds
sbb
cmp
imul
add
inc
xor
jbe
arpl
ror
insb
jo
cs
outsb
fdivrp
les
pop
cmp
out
and
stos
ret
add
imul
mov
stc
aaa
stos
add
jg
xchg
insl
add
in
notb
stos
lahf
idiv
mov
dec
mov
fmuls
mov
mov
negb
xchg
arpl
shrb
add
xchg
aam
lcall
aaa
push
inc
in
mov
mov
mov
cltd
xchg
enter
pop
shlb
and
dec
loopne
inc
ret
test
sar
stc
fbld
scas
mov
jle
int
dec
dec
pusha
and
into
xor
popf
sub
push
sarb
stos
jb
pop
mov
in
inc
pop
in
mov
sub
and
aaa
cmp
lods
inc
out
lods
and
jg
xor
sub
add
xchg
fwait
mov
fldl
xchg
cmpsb
and
mov
mov
and
fcmovnb
data16
mov
leave
add
lret
clc
jl
stos
mov
jl
out
mov
mov
or
mov
out
out
ret
loop
add
ja
les
daa
inc
jg
loopne
pop
nop
lahf
popa
pushf
in
out
add
mov
sub
test
push
adc
push
fisubrl
in
jg
ljmp
out
cwtl
push
mov
jne
sbb
sbb
push
movsb
scas
int
cmpsb
inc
and
add
jb
and
sub
or
dec
loope
inc
dec
mov
loopne,pn
sub
movsl
jge
push
pop
ja
in
or
jno
cli
adc
adc
nop
aaa
aaa
js
fstpt
aas
push
repz
mov
cmpsb
stc
pop
repnz
sbb
sahf
lret
fmulp
inc
fldenv
dec
sahf
ret
mov
fbstp
into
xlat
push
sbb
jnp
push
xchg
cld
mov
lcall
outsb
ret
xchg
xor
fadd
push
fstps
aaa
in
dec
push
mov
dec
pop
adc
mov
gs
jmp
add
mov
loopne
icebp
pop
in
jae
scas
jp,pn
mov
out
fstpt
dec
cmpl
int
je
ss
dec
add
push
and
jmp
fisubrl
jo
mov
insb
or
outsb
dec
pop
bound
jge
test
imul
outsb
imul
xchg
jmp
pop
and
decb
lcall
mov
adc
not
jmp
cmpsb
dec
stc
subb
lahf
pop
dec
sbb
in
xor
or
ja
push
pop
xchg
xchg
ret
stos
pop
sub
mov
pop
fs
cwtl
lock
sbb
dec
mov
imul
test
or
int3
wrmsr
pop
jae
xchg
hlt
push
iret
push
xchg
jnp
mov
mov
pop
pop
or
add
push
add
loop
pusha
push
pushf
push
iret
push
pushf
outsb
ficoms
leave
cmc
pop
mov
movsb
push
sahf
sub
testl
das
lcallw
shlb
mov
fidivl
xchg
lret
mov
rcll
cs
scas
into
enter
flds
adc
jnp
pop
pop
fsts
sbb
jbe
lock
xchg
add
sahf
xor
fdivl
in
sbb
cmpsb
or
adc
xor
mov
mov
xchg
lret
out
or
adc
push
pop
fcoml
xchg
cmp
push
enter
test
sbb
jg
ja
ret
sub
cwtl
push
dec
mov
cmpsb
std
push
push
mov
out
sbb
add
add
pop
jns
add
insl
inc
cld
sbb
and
lea
cltd
push
pop
pavgw
les
mov
jmp
xor
les
mov
adc
mov
and
jne
xlat
xchg
mov
notb
add
xchg
jp
sub
fwait
dec
das
js
ljmp
xorb
dec
or
mov
jp
xor
lret
sub
dec
imul
add
lods
lock
sub
add
dec
enter
push
sub
mov
mov
xchg
divb
mov
push
xchg
es
mov
add
shrb
std
out
inc
jae
lret
xchg
fsubs
in
mov
adc
test
or
clc
dec
mov
dec
aam
stos
mov
stos
mov
decl
inc
push
dec
xchg
cmpsl
outsl
adc
push
hlt
cmp
stos
mov
add
jge,pt
fistl
outsl
nop
ret
stos
les
xchg
stos
xchg
mov
dec
test
roll
xor
cmp
rsm
fsubs
inc
or
push
cltd
add
movsb
mov
fsubs
cmp
adc
jecxz
mov
push
pop
jno
aas
lcall
in
outsb
mov
mov
pop
adc
addr16
sub
inc
push
shll
xlat
and
jmp
jae
lock
repz
and
loop
adc
loop
and
fcomp
xorb
mov
fcomip
rolb
lret
sub
shll
scas
adc
loopne
sub
xor
pop
lcall
inc
jmp
ds
in
imul
stos
popl
push
mov
icebp
push
mov
into
cmp
inc
add
out
lret
pop
stos
add
sbb
cmp
stos
es
fimuls
xchg
sbb
xchg
hlt
pusha
rcr
or
mov
cltd
shll
jnp
lock
gs
popf
fmull
push
shll
jmp
shll
mov
fisttpl
adc
inc
jno
push
jecxz
sbb
test
imul
lcall
adc
sbb
andb
jae
daa
scas
fs
jg
mov
pusha
outsb
fwait
and
xchg
insl
push
cmpsb
sar
and
in
push
pushf
hlt
xor
andb
cmp
sbb
aaa
or
fs
and
imulb
dec
ss
addr16
inc
jb
mov
stos
movl
lret
hlt
daa
dec
fsubrs
jnp
and
jle
adc
or
stos
and
out
shll
and
lods
and
xor
int
cmpsl
leave
sub
add
jne
jbe
xchg
inc
test
sti
repnz
lock
repz
or
adc
ljmp
int3
cmpsb
push
mov
jo
jl
pop
out
mov
cs
adcl
add
dec
cmpsl
mov
test
push
inc
pop
lods
mov
sbb
insl
sub
dec
scas
mov
hlt
setg
push
or
ret
jmp
aaa
out
lcall
pop
ficoms
jmp
shl
and
std
notb
push
call
pop
add
iret
sahf
push
xor
pop
cs
cmp
jo
arpl
fsubl
test
inc
aam
in
aad
ja
lahf
nop
mov
out
repz
xor
addr16
sbb
pop
aas
int
jp
mov
lret
mov
sub
and
xor
jl
xorb
jns
es
lret
and
add
je
push
adc
sub
dec
dec
test
rcrb
mov
bound
fsubl
mov
push
push
hlt
jl
fisttpll
rorl
sbb
gs
cmp
xchg
xor
and
stos
stc
jl
cmc
lods
xchg
push
cmp
mov
mov
cld
test
ret
ret
and
xchg
push
xor
lss
push
jns
mov
cmc
ret
dec
scas
sti
adc
ds
mov
into
dec
ja
pop
loop
lret
ds
in
hlt
cmp
push
in
jbe
mov
inc
popf
jg
inc
hlt
not
dec
shrl
xchg
hlt
into
sub
or
pop
addr16
adc
outsb
stc
xor
dec
pop
into
mov
ds
sbb
jl
outsb
mov
mov
popa
or
dec
lods
push
lods
inc
jmp
js
sbb
jecxz
ljmp
adc
inc
sbb
hlt
adcb
mov
add
mov
scas
int
jne
repnz
popf
insb
mov
dec
and
sub
loopne
daa
mov
dec
popa
sbb
negl
pop
mov
push
stos
ljmp
es
mov
and
fisubl
ret
pop
push
mov
frstor
ljmp
rcl
xchg
addr16
fstp
ss
mov
xor
push
loop
rolb
cmc
pop
and
mov
jle
add
sti
push
jns
test
lret
in
xorl
into
sbb
push
sbb
mov
test
into
aad
xor
pop
pop
loop
ss
in
cmp
cmp
add
lcall
rcrb
into
stos
and
xlat
aad
dec
mov
push
inc
mov
sahf
xor
xor
movsb
pop
decl
in
cmp
ljmp
push
mov
pop
mov
je
inc
sbb
xor
sub
in
push
jg
fndisi(8087
pop
rclb
xchg
hlt
mov
cmp
ds
cmp
shlb
test
shl
cltd
ret
mov
jle
xchg
sub
in
leave
mov
add
cmovno
add
aad
xchg
xor
add
test
xchg
les
mov
in
jmp
or
sub
add
xchg
and
lock
and
sahf
or
dec
dec
out
loope
jne
int3
pop
pop
jmp
lret
xor
decl
mov
in
pop
push
add
jae
sub
xchg
xchg
enter
pop
jns
cmp
xlat
rol
sahf
fstpt
rcll
in
or
xor
jle
xor
lahf
outsb
inc
xchg
subb
loop
inc
scas
imul
cli
push
dec
mov
out
mul
cmp
mov
or
lret
call
sub
out
cmc
loop
xchg
xchg
addr16
adc
je
mov
fldenv
pop
leave
rorb
int3
popf
sub
dec
js
into
xor
das
out
ds
cmpsb
mov
inc
frstor
sarb
dec
push
adc
pop
jno
in
mov
dec
sub
push
inc
cltd
cmpsb
repnz
sahf
sbb
pop
adc
and
jp
jbe
xchg
sbb
and
or
mov
push
push
push
fs
xor
cmpl
movsb
mov
adc
or
or
xor
sub
add
xchg
leave
sbb
in
ret
and
and
sub
mov
push
lret
out
jg
mov
outsb
sub
mov
xor
sbb
lock
out
cmp
fstpl
shr
sbb
in
insb
std
jne
pop
je
lods
rolb
xor
dec
nop
xlat
xchg
enter
gs
and
into
mov
add
and
mov
ja
orl
dec
mov
lea
pop
leave
push
fisttpl
cmc
and
mov
jge
jge
cli
mov
fmuls
pop
add
lea
leave
jns
outsb
ljmp
loope
cmc
fwait
test
mov
pop
sub
push
mov
lahf
inc
cmp
imul
out
cli
jbe
dec
mov
mov
sbb
push
push
mov
jle
popa
stc
mov
xchg
push
push
nop
enter
out
push
add
sbb
jg
loop
xchg
orl
addb
in
daa
loopne
mov
fcmovnbe
mov
sti
and
lea
jp
sbb
xor
add
dec
push
stos
push
lds
xchg
add
mov
pop
xchg
in
outsb
cmp
subb
lret
cmp
push
shlb
jne
push
xlat
aaa
mov
inc
xchg
mov
or
or
add
cs
add
cli
mov
stos
jge
add
les
xchg
aas
pop
sub
les
in
sbb
add
rorl
mov
out
sahf
pop
std
lods
add
fdivl
sbb
cmp
stos
sti
cwtl
jl
xchg
aaa
add
mov
mov
fsts
ljmp
cmp
sub
xchg
sarl
ja
nop
xchg
dec
push
psllq
jne
ret
push
or
jnp
bound
cmp
sub
pop
ss
mov
pop
sbb
bsf
sbb
push
inc
xchg
flds
pop
mov
xchg
pop
inc
loopne
js
xchg
and
push
cmc
test
nop
mov
bound
aas
push
aad
adc
mov
jmp
mov
lds
mov
xorl
cmp
ljmp
mov
push
dec
mov
sbb
cmp
jge
cs
mov
out
push
je,pn
push
insl
test
lret
arpl
push
mov
mov
and
dec
xor
rorl
mov
inc
mul
out
pusha
jno
inc
dec
loop
or
jae
mov
jge
cmp
test
movsb
stos
test
call
icebp
xor
or
inc
mov
xchg
inc
add
mul
cmp
mov
push
es
stos
mov
in
movsb
mov
or
not
movsl
in
push
movsb
xor
dec
pop
jmp
enter
repz
xchg
xchg
xchg
clc
adc
jge
cmp
aas
add
jle
rcll
test
and
pushf
jae
mov
sbbb
sub
inc
jo
out
pop
shr
daa
add
mov
push
sub
inc
mov
sub
or
adc
sub
repnz
btc
lds
xchg
inc
and
enter
cmpsl
mov
jno
or
xchg
cltd
mov
mov
push
imul
and
sbb
ss
jg
sbb
xlat
lar
mov
and
or
jmp
push
pop
add
nop
push
in
loopne
popf
aam
mov
sub
insl
lcall
rorl
mul
addr16
mov
mov
stos
xor
mov
inc
fdivrl
add
repnz
addl
inc
sbb
popf
mov
stos
ja
leave
dec
push
lea
xor
rcll
aaa
pop
mov
fisttps
or
cmpsl
stos
mov
fsubs
dec
push
add
test
xchg
cmpsb
in
cltd
cmpsb
mov
aam
or
lock
add
mov
imull
pop
add
jp
push
add
es
jmp
mov
sbb
nop
sub
mov
aam
jg
std
das
push
cmpsb
sub
add
cmp
test
lret
cmp
scas
aam
lods
scas
push
push
into
popf
aad
cmp
mov
insl
mov
jns
push
ja
dec
pop
and
mov
out
pop
outsl
sti
cwtl
pop
loop
inc
out
cmp
call
jle
outsb
mov
repz
pop
insb
mov
inc
sbb
scas
add
jae
xchg
or
out
mov
adc
dec
and
xchg
scas
sbb
gs
xor
mov
mov
js
lahf
mov
cli
les
mov
inc
aad
jge
ud0
add
xchg
and
ds
sbb
repz
mov
loop
rcl
mov
jl
mov
add
stos
cmp
and
or
mov
inc
pop
jnp
fldl
jno
cmc
mov
sub
pusha
push
mov
cld
dec
js
dec
xchg
jge
sub
jns
lock
fadds
lea
repnz
and
in
cmpsb
add
mov
xchg
inc
mov
inc
jb
add
sbb
xchg
inc
es
xchg
int
cs
and
test
lret
jp
faddl
hlt
rcrl
mov
push
in
int
adc
orl
dec
adc
iret
aas
mov
cltd
hlt
cld
rorl
add
fstpl
add
xorb
je
push
push
cli
xchg
or
pop
orl
lods
aas
and
xor
fwait
pop
add
xor
mov
int3
or
ret
add
mov
xor
dec
cmp
jnp
rcll
outsb
and
mov
fmull
jl
or
cmp
andl
cmp
push
add
icebp
cld
pushf
ret
xchg
cmp
ljmp
cmp
xchg
or
lahf
push
xchg
gs
cmp
imul
in
inc
ja
mov
push
enter
and
fmuls
mov
jp
mov
imull
xchg
ds
xlat
repnz
sbb
dec
out
add
popa
xor
iret
out
add
and
repnz
add
mov
jmp
adc
push
cmp
ljmp
test
or
lahf
add
add
int3
and
or
popa
nop
aam
cmp
mov
pop
ljmp
xor
cmp
mov
cmpsb
mov
movsl
or
cmp
push
jmp
std
pop
mov
or
jg
pushf
lahf
jg
push
es
add
or
sub
fsqrt
andb
or
mov
hlt
fsubs
inc
gs
xor
cmp
jl
cmp
add
lret
sbb
adc
pushw
xor
sub
and
inc
push
and
xchg
mov
imul
aas
xorl
fcmove
jle
mov
mov
pop
ret
mov
xor
pop
mov
sbb
dec
aad
popa
xchg
cmp
jle
in
add
pop
popa
les
and
mov
pop
mov
mov
xchg
fmuls
in
aas
outsl
lds
mov
jb
xchg
nop
push
dec
or
lods
sbb
insl
pop
cmp
addr16
mov
jl
mov
push
mov
fwait
mov
mov
stos
icebp
das
push
adc
cmp
cmp
pop
add
bsf
xor
or
jmp
fnsave
shlb
bound
mov
loopne
shll
and
dec
testl
mov
add
sbbb
or
jmp
cmp
pushf
bound
faddl
or
loopne
or
jge
cmpl
jno
dec
mov
jo
in
cwtl
xchg
mov
xchg
push
xor
loopne
push
repnz
out
mov
out
adc
xor
sub
mov
mov
clc
add
scas
push
cs
imul
stc
xchg
jge
xor
stos
leave
arpl
movsb
call
ficompl
xchg
and
int
pushf
sahf
aam
adc
iret
sahf
cs
sar
sahf
xor
jnp
mov
enter
out
pushf
jmp
outsl
nop
mov
sub
fidivrl
xchg
mov
ss
nop
sbb
mov
lahf
negb
imul
inc
ss
pop
aaa
xlat
xor
xor
mov
cmp
cld
or
sub
rcrl
push
mov
sub
fsubrl
pop
jo
enter
aaa
push
and
and
sub
cwtl
mov
xor
nop
mov
shlb
cmp
cld
repz
ret
cmpsb
pop
mov
xchg
stc
in
fwait
call
lcall
ljmp
inc
mov
sahf
das
loopne
mov
mov
iret
inc
jmp
pop
adc
jo
sub
aaa
mov
mov
mov
adc
fwait
sbb
dec
hlt
aas
push
inc
push
popf
pusha
dec
mov
outsb
or
push
add
ret
repnz
mov
ret
and
jnp
jb
insl
into
mov
mov
fstps
inc
xor
jnp
in
sti
in
lods
sbb
inc
adc
jl
lds
out
xor
mov
sbb
push
fdivr
cmp
sub
outsl
test
jl
repnz
pop
mov
stc
add
out
jg
and
jmp
jg
test
in
or
mov
cli
xchg
nop
jnp
mov
ja
aaa
mov
cmp
dec
dec
xchg
rcrl
cmp
dec
add
cmp
adc
jge
xor
sti
xor
bound
dec
or
dec
stos
mov
sahf
ror
lret
adc
dec
add
lcall
and
or
xchg
or
lods
data16
in
pop
sub
pushf
mov
xchg
decl
or
push
test
mov
xchg
xor
inc
dec
aad
testb
mov
stos
push
je
sti
adc
cltd
stos
sub
jg
bound
icebp
sub
lahf
sbb
sbb
xchg
inc
push
mov
fisubl
mov
aas
shrl
ljmp
mov
pushf
push
pop
cld
mov
or
loop
dec
push
sbbl
or
push
daa
lds
xchg
mov
int
adc
xchg
pop
adc
jns
aad
inc
mov
adc
mov
cmp
add
fwait
or
and
sub
inc
mov
mov
jae
pop
sub
jbe
shrl
dec
mov
mov
xchg
rorl
xchg
add
les
repz
ds
mov
stos
lret
cmp
andb
cmp
mov
sub
pop
daa
cli
mov
lahf
xor
cmp
and
cli
imul
mov
pop
inc
add
icebp
pop
js
mov
mov
aad
ret
push
mov
loop
ja
ret
mov
push
xor
add
cwtl
loope
or
cmpsb
mov
push
push
inc
add
xchg
mov
test
dec
xchg
push
xlat
mov
adc
jp
stos
scas
mov
xor
dec
out
out
mov
cmp
scas
cvtpi2ps
xlat
lods
inc
and
aam
sub
mov
aam
dec
push
add
cmpsl
sahf
scas
xcrypt-ofb
cmpsl
in
jmp
mov
jae
mov
adc
push
mov
mov
pusha
lods
and
dec
or
push
add
loopne
jge
cmp
mov
aam
movb
das
loope
and
je
shl
inc
or
lods
ficompl
test
enter
cmpsb
fisttpl
mov
adc
pop
xchg
xchg
das
mov
or
and
les
jecxz
into
xlat
pop
adc
adc
mov
push
call
enter
sahf
roll
sbb
or
mov
loope
xor
cmc
in
addr16
inc
xchg
lret
push
sub
mov
idivb
loop
daa
jle
adc
sub
out
test
cwtl
sbb
popf
push
in
dec
and
arpl
mov
cmp
or
jns
bound
mov
push
fxch
lods
es
xor
cmp
leave
gs
xor
mov
ret
sbb
xchg
inc
idivl
sbb
push
jbe
cmp
jge
in
outsb
out
sbb
insb
mov
jmp
dec
add
cmc
xchg
iret
lcall
pop
pushf
ds
lock
mov
ljmp
lods
popa
inc
ds
insl
fisubs
cmp
push
jne
loopne
push
push
fsubl
aam
pop
mov
sbb
push
sbb
lods
push
jmp
pop
stc
addl
xchg
int
and
jo
imul
icebp
scas
xchg
xchg
rclb
mov
sahf
xorb
mov
ds
aam
mov
dec
add
pop
push
mov
test
cmp
push
push
fdivrl
and
sarl
roll
jns
push
pop
imul
inc
rdmsr
aad
nop
movsl
jmp
sbb
adc
push
fistpl
lock
dec
mov
dec
mov
jle
push
repnz
repnz
scas
and
mov
or
or
cmpsl
and
imul
aam
popf
mov
push
and
fwait
es
dec
mov
ja
xor
pop
or
sti
xchg
mov
sub
xlat
mov
test
adc
push
aam
dec
mov
mov
rol
mov
testl
pusha
cwtl
sbb
leave
or
or
fcoms
cld
inc
into
std
adc
xor
pushf
popf
or
leave
mov
test
out
mov
jp
pop
jbe
loopne
inc
mov
dec
cld
mov
scas
and
addr16
push
lods
xor
loop
xchg
sarl
mov
jo
loope
out
or
notl
xorb
test
mov
scas
mov
iret
add
loopne
ds
fists
mov
adc
jge
sub
jge
fstpl
pusha
mov
adc
pop
pop
xchg
xchg
jo
popl
mov
mov
inc
sbb
or
push
pop
pop
icebp
test
ja
popa
pusha
test
pop
aas
jnp
test
fucomp
lahf
xlat
ja
push
mov
dec
hlt
mov
mov
mov
sub
sbb
add
and
xchg
repnz
pop
je
fisubl
cwtl
pop
fisttpl
loopne
outsb
cmp
cmp
dec
push
aaa
sar
mov
inc
adc
cmp
pop
cmc
pop
mov
dec
test
data16
sbb
sbb
cltd
rcrl
jecxz
sbb
or
loope
inc
sti
dec
out
cld
cmpsl
fwait
mov
xchg
xor
out
push
pop
jmp
mov
ror
mov
sbb
mov
cmpsb
or
pusha
loop
call
or
loope
fcmovbe
ficomps
cmp
leave
out
push
push
int
fidivs
mov
sbb
leave
pop
or
xchg
mov
out
pop
pop
pop
dec
insb
xor
cmp
hlt
and
dec
push
ljmp
pop
mov
jne
add
in
mov
ja
xlat
fimull
lock
mov
pop
jg,pn
mov
fiaddl
repnz
and
pop
out
cs
or
adc
adc
pushf
ss
stos
scas
sti
cld
adc
push
frstor
int3
jp
inc
jo
in
divb
xchg
push
and
fsubl
add
push
jbe
out
movsl
lods
scas
jns
flds
pop
divb
sbb
push
iret
xor
lret
dec
andl
push
gs
lods
xor
mov
addl
imul
in
out
xor
mov
mov
mov
push
or
outsl
add
xchg
push
jae
pop
call
cmpsl
insb
or
les
pop
jno
nop
rclb
arpl
push
ljmp
aaa
xlat
mov
jne
imul
sub
pop
testb
mull
mov
je
xchg
sbb
imul
das
bound
pop
in
or
jg
outsl
iret
dec
sbb
push
ret
pop
xor
outsl
sti
int
rcll
bound
into
pop
test
loop
outsl
loopne
add
jp
mov
push
mov
mov
pop
bswap
aam
and
dec
xchg
or
test
push
xchg
pusha
aas
xchg
lock
addb
adc
sti
mov
mov
and
add
jecxz
and
push
jmp
cld
cmc
lds
mov
lods
cmp
hlt
aam
ljmp
leave
pop
mov
push
ret
and
dec
sub
into
jo
lds
xchg
stos
push
pop
addr16
sub
aam
loopne
push
mov
iret
xchg
or
dec
jmp
jno
shr
pop
lods
push
dec
xchg
mov
or
arpl
clc
and
in
adc
and
ret
rcll
les
xorl
mov
pusha
push
inc
mov
stos
decb
xlat
outsl
lea
xor
fwait
jmp
xchg
mov
inc
dec
popf
lret
cmp
fldl
movsl
pushf
jle
sbb
sub
mul
pop
cmp
int3
mov
sti
out
sub
add
out
adc
outsb
adc
jmp
mov
fdivs
test
in
mov
mov
adc
cmpb
mov
ret
sub
xor
nop
pop
add
mov
cli
cmp
loop
dec
push
inc
cld
mov
push
lea
test
mov
icebp
adc
inc
adc
cltd
aaa
xchg
push
mov
mov
pop
jge
fidivs
lcall
add
push
jecxz
adc
mov
inc
cmpb
jnp
les
pop
das
jae
xor
xor
jae
mov
xor
roll
xchg
xor
jae
fadds
into
ret
adc
sbb
in
jbe
jge
fmuls
xorl
cli
dec
mov
mov
xchg
ret
mov
mov
cmpsl
arpl
cmp
mov
lret
mov
addr16
xor
test
pop
inc
and
jne
push
xor
xchg
in
cltd
repz
cmc
stos
imul
and
jmp
or
jle
fcmovb
push
lock
hlt
mov
pop
sub
or
arpl
xchg
push
lret
xchg
or
cmp
xchg
pop
pushf
cmp
xor
mov
call
jnp
faddl
jl
add
fisttps
sub
or
sub
mov
pop
jnp
les
popf
adc
xchg
adc
iret
dec
cmpsl
loope
sbb
insb
int3
mov
sub
out
iret
dec
in
ss
jp
xor
outsl
inc
ficoms
imul
mov
clc
add
loop
mov
fincstp
stos
int
je
mov
stos
mov
jno
sbbb
pop
sub
and
ja
cmp
xor
test
mov
daa
push
inc
cmpsb
pop
fidivrl
movsl
mov
leave
push
fbstp
xor
repnz
cmpsl
pop
repnz
pushw
xchg
sbb
cli
fcompl
mov
inc
icebp
push
or
iret
lock
jbe
cltd
div
shlb
jns
sub
mov
or
shlb
movsb
outsb
outsl
push
aad
icebp
cmpsb
xchg
lods
add
xor
add
fldt
adc
cli
push
fcom
roll
mov
ja
sahf
hlt
scas
mov
push
mov
adcb
adc
jb
inc
inc
lock
arpl
mov
jbe
shll
xor
and
jecxz
cmp
xor
mov
in
in
lahf
lcall
sub
outsl
popf
je
ror
adc
pop
fstl
into
push
rolb
je
add
clc
inc
rcr
out
pop
xchg
or
inc
mov
rolb
fcompl
cmp
sbb
push
mov
les
jg
popa
fbstp
or
xlat
bound
stos
add
std
cmpb
es
rcl
lret
dec
int
jno
add
xchg
pop
push
inc
sti
pop
mov
jnp
add
popa
ret
popa
adc
arpl
iret
rep
xchg
jg
lret
lea
xchg
rorl
or
and
enter
sbbb
inc
jo
xchg
divps
call
out
rol
das
pop
lods
dec
sbb
cmp
js
dec
jecxz
pop
and
stos
cmp
fmuls
jno
lahf
rolb
pop
out
and
jne
inc
bnd
pop
mov
testb
adc
mov
ss
enter
fcmovbe
sub
in
jp
cmp
rcll
in
pop
cmpsl
icebp
stos
in
pushf
in
lods
inc
mov
cmp
inc
inc
dec
or
dec
popf
addl
scas
imul
pop
mov
xor
pop
cmp
fdivrl
lret
push
leave
sarl
mov
int
push
cltd
ficoms
cmp
mov
pushf
pop
and
loop
sbb
and
jp
push
adc
jb
adc
mov
ret
sbb
xorl
jo
sbb
dec
in
loop
imul
and
rclb
jnp
stc
jp
das
push
jmp
sub
ds
xchg
lahf
mov
cmp
add
xchg
hlt
and
gs
mov
cmp
loopne
and
addl
sub
lcall
mov
inc
pop
shl
insl
cs
xchg
inc
fcomip
mov
jnp
int
mov
jb
sub
xchg
xor
mov
inc
dec
pop
mov
fisubl
dec
sbb
test
add
das
push
inc
loop
jl
dec
lods
stos
cmp
test
push
popa
mov
into
jb
xorl
jbe
jmp
lea
or
mov
xor
ds
inc
sbb
into
pop
fimull
jno
jge
jns
inc
xchg
push
xchg
addl
test
mov
test
inc
sub
adc
arpl
mov
insb
mov
clc
adc
sbb
jmp
in
dec
and
dec
or
in
mov
mov
pop
pushl
leave
jp
jns
arpl
jecxz
adc
in
xchg
sbb
adc
jnp
movsl
and
mov
lcall
mov
dec
mov
leave
mov
dec
sahf
add
push
dec
aam
xchg
in
xchg
bound
and
test
mov
cwtl
or
popf
nop
or
sbb
push
mov
mov
mov
xchg
push
icebp
jo
shrl
cli
rorl
int3
lea
in
jns
mov
mov
and
sbb
nop
mov
scas
xor
insl
int
fimuls
cmp
mov
lods
dec
fwait
adc
sub
ret
nop
xor
mov
push
pop
inc
jge,pt
adc
dec
inc
sub
je
dec
dec
sbb
mov
jge
sbb
or
testb
lock
js
pop
sub
inc
jg
mov
add
mov
jge
cmp
cwtl
mov
xor
xchg
mov
adc
cmp
add
jno
jae
aas
pop
xor
loope
popf
test
ljmp
inc
int3
rcrb
ss
dec
and
aam
es
jb
mov
jnp
addr16
mov
and
cmpsl
jmp
int
adc
mov
daa
push
add
jecxz
sbb
inc
in
add
dec
jmp
mov
push
mov
repz
scas
pusha
aam
jg
cli
outsl
xchg
push
adc
lea
push
sbb
add
mov
add
sarb
insb
stos
fisttps
fldenv
adc
pop
call
aam
sar
fbstp
mov
lods
adc
xor
inc
cwtl
lods
les
sub
inc
std
lcall
test
and
xor
sub
pop
jecxz
add
subb
imul
icebp
in
mov
loope,pn
int
int3
out
push
or
sub
das
and
sarb
pop
dec
mov
les
push
jecxz
negb
dec
insb
xchg
push
lds
pusha
ljmp
std
mov
xchg
sbb
pop
adc
add
cmp
pop
add
call
mov
fidivrs
aam
xchg
push
dec
mov
mov
jg
push
cmpb
mov
xor
fucomp
adc
cmp
jp
push
inc
mov
push
enter
nop
sbb
lods
decb
sub
and
aaa
xor
pop
fisubrs
in
add
fs
add
aad
or
inc
mov
jae
inc
mov
in
imul
mov
out
data16
xor
mov
sub
push
adc
and
xor
adc
pop
out
shlb
push
adc
lcall
lret
dec
shr
jg
jb
roll
sti
lds
lret
das
xchg
sub
scas
fbld
dec
aaa
cs
dec
fsubs
iret
fdivs
ret
jne,pn
sub
xchg
cs
jae
dec
xchg
mov
push
xor
xchg
pop
jb
sub
repnz
jmp
inc
adc
jb
sbb
push
fadds
xor
pop
data16
cli
outsl
pop
inc
xor
mov
enter
push
mov
mov
inc
ds
add
test
jge
push
fs
jbe
popf
in
cmp
das
mov
out
lea
sarb
push
or
xlat
dec
push
popa
jle
mov
je
or
lods
push
nop
and
pop
testl
or
sahf
mov
out
insb
dec
mov
mov
adc
gs
les
je
loop
ret
cmp
mov
push
lods
inc
and
push
xchg
push
jo
roll
cli
ficoml
fisubrs
aam
mov
add
loopne
test
fwait
rep
std
mov
xchg
mov
test
pop
les
xchg
stos
add
decb
pusha
mov
pop
mov
sbb
aam
rclb
stos
and
mov
and
call
adc
cmp
cmp
add
sub
pop
test
xchg
lods
adc
cmp
jbe
in
push
xor
mov
xchg
mov
icebp
dec
mov
sub
iret
inc
push
inc
fbstp
adcb
dec
das
jne
adc
sub
jb
rorl
push
subl
ficomps
js
mov
sub
or
cmpsl
test
sub
and
addr16
inc
dec
jb
adc
dec
sub
mov
popf
fmulp
cld
aas
mov
push
notl
mov
pop
inc
out
rcll
lret
pop
xchg
lds
fnstenv
add
jge
or
cwtl
aad
xor
aam
pand
mov
jno
pop
jno
jg
sub
push
fs
les
mov
inc
pop
xor
int
adc
adc
pop
jle
xchg
jb
arpl
xor
push
pop
rorb
dec
xchg
xchg
in
jle
rolb
push
jg
push
sbb
into
test
leave
repnz
xchg
inc
mov
mov
jns
sbb
out
fistl
mov
jo
xchg
leave
ja
adc
ljmp
xchg
adc
bound
insl
lock
pop
sub
xchg
dec
cmp
mov
or
and
loopne
setp
mov
cmpsb
inc
cmp
popa
stc
fiaddl
jo
xchg
sahf
imul
cwtl
sbb
stc
jmp
test
addl
cmp
or
dec
pop
jecxz
shll
testb
movsl
imulb
push
sub
or
xor
stc
popa
fstl
cltd
xor
xchg
push
jmp
lods
mov
add
fiadds
sub
and
out
imul
xchg
jge
cli
inc
cmp
mov
or
sub
scas
rcrl
dec
sub
ss
xchg
sbb
fildl
mov
sub
xchg
addl
cmp
ret
xchg
dec
in
jmp
add
popf
sub
and
inc
lods
xchg
outsb
in
push
addr16
mov
negl
fisubrl
int3
push
lods
fdivrs
out
and
in
cltd
in
ret
xor
ljmp
movsb
pop
mov
addb
or
arpl
sahf
inc
loope
out
test
imul
mov
cltd
lds
ss
push
and
stos
jl
mov
push
jge
seto
mov
mov
shlb
std
stos
pushf
and
and
lcall
ljmp
cmpsl
inc
and
sbb
mov
push
enter
mov
sbb
mul
add
mov
ss
stos
lret
or
outsb
xor
or
call
fcmovb
xor
in
jo
ret
loopne
push
adc
push
inc
mov
sub
xorl
test
stos
sub
fdivr
pop
and
and
mov
pop
cltd
aaa
pushf
sub
push
mov
xchg
pop
jb
inc
sub
loope
cmp
push
push
sti
push
dec
scas
jns
sub
inc
jmp
popf
pop
pop
xor
int
xchg
xor
in
pop
enter
fnstcw
aad
or
xchg
inc
fwait
mov
loop
repnz
or
pushf
mov
jae
sub
sbb
lcall
aam
fbstp
aaa
test
xlat
mov
icebp
sbb
mov
jmp
ja
out
xchg
pop
push
mov
cmpb
mov
loopne
jae
xchg
or
int3
xor
popa
test
inc
adc
push
inc
insl
test
sbb
fistl
sbb
jno
mov
sub
fsubrl
lret
fstpl
test
xor
adc
pop
xchg
fdivs
inc
push
bound
jmp
sub
daa
inc
or
dec
frstor
aad
mov
push
pop
loop
pop
dec
mov
fcoml
ret
movsl
movsw
je
mov
push
loopne
jbe
cs
jno
sbb
daa
inc
test
ret
cld
pop
pop
mov
rorl
or
and
popa
in
es
lcall
dec
push
dec
add
mov
es
adcl
jl
daa
mov
mov
push
je
inc
push
scas
fs
enter
cltd
aad
ret
lea
insl
or
test
int3
mov
pusha
test
loopne
mov
jbe
lahf
sahf
adc
xor
jnp
xchg
movsb
dec
mov
cli
sti
loope
mov
add
clc
orl
sbb
push
xchg
incl
jge
mov
cs
fldenv
mov
jb
loop
add
or
es
repnz
add
sub
and
and
mov
lds
mov
movsb
and
pop
dec
push
mov
adc
fwait
pushf
flds
ret
jg
and
inc
loope
pop
mov
cltd
test
test
mov
cltd
sbb
push
lods
sub
jmp
idiv
add
pusha
mov
into
loopne
movq
push
push
test
cmpb
dec
mov
and
adc
into
fwait
adcb
pop
cmp
and
sbb
sar
and
jae
xor
jle
sbb
shl
xor
xor
ficoml
and
movsb
pop
je
lahf
xchg
mov
push
mov
fistpl
push
sbb
push
std
mov
pop
int
cmpsl
jb
or
mov
mov
icebp
push
mov
fcmovb
into
mov
js
add
cld
stos
cmp
stos
pushf
inc
idiv
mov
in
dec
in
inc
jp
sti
mov
xchg
lret
adc
outsl
xor
test
dec
movsl
sub
mov
data16
add
insl
cld
outsb
mov
pop
mov
add
jg
insb
mov
bound
xor
jmp
mov
xor
dec
cmpsb
repnz
cld
fs
insl
les
cwtl
or
sbb
push
aam
repz
lock
or
mov
repnz
lods
scas
iret
imul
test
sub
insl
adc
orb
test
pop
addr16
pop
fdiv
pop
icebp
js
sbb
adc
push
xor
push
mov
sub
mov
fwait
movsl
popf
and
pop
in
cmpsl
fistl
xlat
push
and
mov
pop
xor
xchg
xchg
inc
inc
in
sahf
xchg
ret
jns
ja
mov
add
fldenv
sub
mov
pop
adc
and
sub
lds
mov
icebp
mov
mov
mov
movsb
sub
jmp
ja
or
pop
pop
fimull
xchg
or
aam
cmc
pop
add
pop
test
push
mov
idivb
shl
mov
setbe
mov
sub
das
stc
sbb
mov
shlb
stos
fsubr
sub
repz
or
dec
sbb
cmp
xchg
mov
inc
push
and
jns
outsl
lahf
mov
add
pop
add
shrl
sub
movsbl
pushf
das
xor
jle
repnz
rolb
mov
movsl
outsl
pop
shlb
cld
lret
test
xchg
mov
loope
divb
lods
push
push
add
lods
les
mov
out
jae
into
cmpsl
call
xchg
xchg
out
xchg
dec
aam
fldt
cmp
sbb
stos
sub
cs
cld
pop
ds
push
bound
outsb
adc
popf
in
pushf
or
lock
cmp
outsl
mov
rcrb
cmc
aad
jp
xchg
jno
mov
addr16
xchg
add
sub
shlb
cltd
adcl
les
xchg
out
sbb
pop
in
dec
pushf
jg
jmp
dec
xor
xchg
or
pusha
mov
push
sbb
decl
dec
add
mov
ficomps
sub
xlat
xchg
inc
push
repz
lds
cmp
push
jb
mov
sarb
jg
movsb
loope
fs
inc
scas
adcl
lret
pusha
pop
mov
inc
add
adc
roll
ja
pop
sbb
mov
inc
mov
mov
mov
pop
mov
or
push
cmp
popa
lea
mov
lret
push
dec
xchg
adc
xchg
sub
and
dec
popl
iret
ja
pop
lret
cltd
shrb
or
jecxz
pop
pop
sub
inc
jae
mov
xchg
mov
fst
inc
je
dec
push
adc
jecxz
gs
lcall
fistpl
ret
jmp
sub
jo
add
adc
ret
es
fimuls
inc
sarl
shrb
cmp
dec
dec
push
push
popf
xor
inc
subb
or
ljmp
xchg
mov
test
add
flds
and
cs
out
in
sbb
aas
dec
aam
jb
xor
in
ss
lret
push
mov
cmp
xchg
lfence
nop
jne
jmp
sarl
repnz
sbb
sub
add
lret
mov
adcl
aam
pop
adc
xchg
jbe
sub
lcall
push
adc
adc
int
rorl
cmp
cld
dec
out
mov
in
out
movsl
jns
cld
aaa
sbb
fistpl
xchg
and
clc
dec
lock
dec
xchg
cld
lock
aam
cli
lcall
push
xor
cmp
lahf
jne
lea
call
imul
into
arpl
dec
xchg
add
push
lods
shrb
clc
outsb
inc
xlat
push
mov
or
add
pusha
sub
mov
push
rclb
faddl
les
js
mov
jno
test
push
push
jg
out
cli
adc
sub
sti
scas
pushaw
push
push
fcoml
mov
adc
push
add
push
pop
sub
jp
scas
adc
sbb
pushf
sub
fcomp
and
in
insl
inc
sar
enter
in
mov
repnz
adc
nop
lock
sub
add
ss
xchg
rolb
repnz
push
movsl
mov
mov
mov
jmp
orl
and
cmpsb
pop
cmp
fisttps
jmp
es
repnz
lods
jecxz,pn
rorb
inc
jle
in
add
sub
clc
add
pusha
add
mov
mov
sub
fnstsw
jae
dec
and
jbe
inc
mov
lea
mov
fwait
xchg
loope
subb
into
push
subb
scas
and
and
test
and
mov
std
rcrl
sbb
imul
mov
mov
fwait
loope
pop
or
dec
mov
outsl
pop
xor
dec
cmp
rcrb
xor
push
aas
test
decl
sub
push
arpl
cli
mov
rcrb
pop
push
mov
inc
cltd
dec
in
pop
jo
pop
iret
sbb
push
aam
push
or
jbe
lock
xor
icebp
push
adc
lods
push
or
jbe
daa
dec
cmp
jp
mov
fdivr
xor
rcr
push
mov
dec
aas
dec
inc
negl
icebp
out
mov
adcl
das
ret
cmpb
jecxz
xor
jle
and
daa
mov
pop
mov
movsl
std
ret
arpl
cmp
xchg
stos
mov
dec
nop
shl
cwtl
cwtl
fmul
repz
push
xchg
popf
cmp
and
sub
stos
xchg
cmp
fmull
mov
jle
stos
sub
lods
dec
xchg
lcall
or
jecxz
addl
dec
mov
add
fidivrl
pop
pop
cmp
mov
and
jb
cld
sub
hlt
divl
mov
jne
or
jle
inc
jmp
cs
jo
mov
in
cmpsl
jle
cmp
mov
xchg
aas
hlt
iret
loopne
fucomi
lds
dec
add
adc
aaa
icebp
sbb
lahf
int
ss
inc
out
aaa
pop
mov
jg
jl
mov
jnp
cmc
cltd
lcall
xor
add
xor
dec
push
or
or
cltd
scas
shlb
loopne
shr
pop
add
imul
xorl
xchg
push
adc
inc
mov
jo
cmpsl
jnp
pop
add
lahf
or
lds
add
loop
adc
jnp
add
and
cmpsb
data16
lods
bound
pop
xchg
lods
cmp
sbb
test
push
jbe
pop
and
add
cmp
cmp
popa
xchg
mov
mov
inc
xchg
mov
inc
insl
sbb
adc
movsl
push
ss
jl,pn
sbb
lods
push
or
loope
popa
faddl
sbb
in
and
mov
pushw
testl
insb
xchg
lea
or
push
lcall
xchg
push
stos
gs
push
xchg
dec
push
jno
leave
or
cmpl
mov
je
pop
jne
add
int
hlt
xor
pop
gs
mov
jae
sbb
repz
repz
or
bound
into
xchg
mov
aas
cmp
fisttps
in
push
insb
setb
lods
movsb
mov
lods
jns
pop
leave
ja
xor
mov
je
lods
stos
add
adc
or
inc
xlat
mov
iret
adc
push
or
add
xchg
sbb
sar
add
in
mov
cmp
es
test
push
xor
mov
and
inc
inc
xor
jnp
cmp
pop
jg
les
insl
loopne
dec
mov
cli
leave
call
cld
mov
cmp
and
cltd
pop
rcrl
cmpsb
xlat
ss
mov
mov
lret
out
xor
and
pcmpgtb
orl
mov
pop
and
or
dec
enter
inc
scas
adc
sti
shl
push
or
pop
aaa
sub
push
and
jnp
sbb
dec
cld
fildl
xlat
and
xor
test
loop
sbb
fdivrp
notb
out
jns
bound
mov
test
mov
ret
inc
dec
aam
inc
jne
jp
mov
jno
xchg
fisubs
cltd
bound
rolb
sbb
stos
lret
sbb
adc
dec
jo
cmp
movsl
and
stos
cwtl
inc
push
jae
xchg
jo
popf
or
out
outsb
cmp
xlat
cmpsb
aad
jo
int
addb
cmp
xor
rcrb
bound
mov
and
ret
cld
dec
test
pop
lods
cmp
inc
xor
xor
cmp
pop
subb
sbb
dec
lcall
repz
pusha
movsl
push
and
xchg
dec
push
sti
jns
sub
xchg
mov
iret
outsl
mov
icebp
adc
jb
dec
add
and
mov
mov
sub
mov
mov
pop
or
mov
negl
int
sub
pop
out
mov
popf
shll
aam
push
mov
adc
scas
test
push
inc
out
aas
mov
push
mov
sub
cmpsl
cmc
push
lods
jmp
lret
dec
sub
add
and
outsb
sarl
cmc
scas
jge
gs
and
idivb
loop
sahf
push
push
inc
jle
sbb
xchg
mov
repz
mov
mov
aam
cmpsb
inc
cmpsb
icebp
sub
cmpl
aad
xorl
call
dec
push
cmpsb
mov
ret
sbb
mov
stc
daa
dec
mov
ljmp
adc
jle
repnz
pop
xor
and
bound
dec
int
mov
pop
rclb
sarb
sub
cli
adc
cmp
stc
lcall
shlb
test
movsl
fistpl
adc
dec
and
outsb
fnstenv
adc
mov
out
adc
dec
cmp
cmpb
cmp
and
call
aam
pop
dec
dec
cmc
mov
lcall
sahf
mov
movsl
imul
popf
mov
nop
push
push
leave
xchg
jns
mov
ljmp
insb
mov
fidivrl
cmp
sbb
fadd
lcall
inc
cmp
faddp
push
test
loope
fstl
in
lahf
int3
push
not
sub
mov
scas
push
int3
iret
xchg
sbb
pop
rclb
lock
pop
test
loope
mov
xor
shrl
out
adc
push
loop
mov
data16
ret
adc
es
mov
push
les
out
xchg
lea
push
outsb
jl
lods
mov
push
sbb
lock
pusha
dec
jmp
jo
pop
movsl
dec
mov
adc
int
aaa
push
mov
xchg
lds
cmp
push
insb
popa
iret
mov
dec
or
iret
decb
pop
pusha
ja
aad
pop
mov
fwait
popa
sarb
repz
lcall
mov
and
pop
bound
mov
scas
xlat
jge
cmp
out
aas
outsl
inc
add
jge
or
adc
scas
sbb
out
cmp
push
outsb
push
jg
inc
aad
pop
xchg
cmp
sbb
fstpt
xchg
or
inc
mov
addb
inc
mov
jne
movups
movsl
adc
lret
add
ljmp
add
adc
jge
xor
jo
mov
sub
popa
in
pop
or
mov
dec
inc
into
out
dec
int3
push
fadds
mov
fnstsw
in
push
mov
cmpsb
jg
mov
push
and
push
ret
inc
mov
mov
cwtl
or
fiaddl
and
test
in
sbb
bnd
add
cwtl
dec
shll
ficompl
xor
inc
add
push
cmpsl
add
loope
imul
or
and
add
jno
cmp
xchg
lret
mull
pop
mov
cli
repz
sub
jns
push
pushf
testb
inc
outsl
stc
xor
sub
imull
andl
jne
sub
sub
pushf
andb
xchg
cli
lahf
push
dec
mov
dec
pop
jnp
popf
arpl
jae
adc
mov
push
mov
adc
loopne
shll
push
pop
mov
test
mov
xorb
sbb
addl
jmp
cmp
movsl
dec
mov
jne
cmp
xor
jno
leave
daa
inc
cmpsl
scas
xor
cmp
dec
gs
fists
int3
addr16
cmpsl
mov
adc
ds
add
and
fwait
mov
dec
xchg
push
nop
pop
jae
scas
sarl
xchg
test
and
cmp
add
sub
push
sbb
fld
and
loop
test
cwtl
push
ret
mov
push
pop
cmpsl
add
cmc
push
daa
sahf
inc
sub
bound
adcb
xor
aam
stc
dec
sub
ljmp
mov
mov
inc
push
leave
dec
add
in
mov
push
xchg
xor
inc
dec
sub
iret
es
mov
xchg
cmp
add
add
fimull
rol
leave
xlat
add
js
test
test
xlat
loopne
dec
jno
cmpsl
lcall
jmp
sub
dec
push
cltd
sbb
jno,pt
mov
out
jp
into
notb
in
sbb
dec
mov
repnz
cmp
in
pop
imul
dec
pop
sbb
and
mov
cltd
mov
ljmp
cmpsb
outsl
xor
xor
adc
or
adcb
xchg
xor
cltd
cli
sbb
jne
fwait
mov
dec
and
and
ja
sub
push
negl
inc
ret
es
fsubrs
pop
inc
xchg
push
mov
and
add
mov
popa
stc
pop
repz
mov
clc
sbb
push
inc
xor
inc
ret
div
add
loop
leave
mov
pop
pop
mov
gs
orl
fwait
push
xor
into
dec
jno
in
out
mov
addr16
stos
aaa
popa
and
shll
sub
adc
lods
mov
cmpsb
mov
mul
jp
test
mov
inc
test
cmp
xchg
ss
xchg
dec
mov
jmp
clc
loop
shll
push
sbb
lret
movsb
pop
xor
call
jmp
jecxz
paddsw
movsl
sub
lea
sub
or
scas
popa
cld
fadds
out
lock
aad
movsl
les
xorb
cmp
adc
inc
xchg
repnz
adc
sti
fidivl
dec
pop
mov
pop
mov
pushf
sarl
pop
adc
ret
jg
pop
or
lahf
pop
adc
adc
ret
loopne
push
cli
add
adc
fsubrs
push
adc
gs
mov
fistpll
mov
fmull
cmpsl
jecxz
dec
aas
aam
shll
dec
daa
or
adc
jmp
xlat
mov
mov
mov
xor
xchg
aam
pop
clc
mov
mov
mov
sahf
test
mov
icebp
xor
sbb
scas
inc
in
dec
or
sub
xchg
sbb
ja
cmp
mov
xchg
inc
jns
or
sub
and
mov
js
push
idivl
push
sti
mov
adc
xchg
test
sub
std
mov
jmp
mov
push
sbb
lret
pop
fisubrs
insl
push
inc
xor
jne
add
cmp
call
inc
addr16
scas
adc
test
cmp
inc
mov
xor
arpl
cmpb
or
mov
and
jmp
stos
push
aaa
push
mov
dec
push
mov
aas
shlb
popa
inc
lods
fisubrs
idivl
mov
icebp
or
dec
into
pop
adc
es
bound
in
sbb
cmp
stos
mov
sub
sbb
cmpsl
dec
xor
mov
daa
or
cmp
sbb
adc
inc
jecxz
jp
lcall
jne,pt
push
pusha
shrb
jmp
fmull
pop
mov
xchg
fcmovbe
inc
dec
dec
aam
int3
pop
lods
popa
daa
jbe
sub
addr16
push
in
inc
out
cmpsl
je
or
xchg
mov
xor
roll
imul
jp
popf
cmp
pop
xor
fcomps
popa
sub
dec
adc
dec
ja
fldcw
sbb
push
bound
jo
mov
mov
sub
in
jmp
xchg
pop
or
add
inc
sbb
add
pop
lret
pop
xchg
jns
lcall
loope
out
mov
cmp
jle
mov
jnp
push
lock
pop
adc
stc
mov
out
cmpb
or
andl
lcall
xchg
cmc
or
loop
add
insl
mov
nop
arpl
inc
pop
fwait
mov
push
mov
sub
lods
sub
ficompl
inc
ret
jno
aad
arpl
xchg
xchg
insl
push
mov
stos
push
xchg
shlb
sbb
pop
pop
hlt
fcomps
cld
mov
data16
push
push
cmpb
or
mov
ljmp
insb
andl
pop
push
lahf
xor
add
inc
je
add
flds
fwait
cs
loopne
pushl
pop
and
subl
pushl
jne
mov
sbb
sarb
and
sti
es
imul
jecxz
and
cld
hlt
push
sub
or
test
arpl
addr16
scas
bound
lahf
mov
or
cs
imul
mov
fmuls
ja
add
repnz
iret
add
shl
mov
in
pop
sub
lds
jl
fsqrt
out
jl
jp
pusha
idivl
jmp
les
inc
and
scas
arpl
jo
mov
lret
into
lea
jne
cmpl
loopne
xchg
pusha
mov
clc
movmskps
add
adc
shlb
call
push
mov
inc
loop
mov
ss
push
lods
ljmp
in
or
dec
mov
rclb
or
scas
sarl
push
dec
xor
outsl
mov
and
aas
into
mov
mov
xchg
mov
cmc
stos
ret
adc
pop
idivl
adc
jns
movsl
fmul
cmp
inc
and
outsl
mov
fistps
bound
inc
mov
mov
pop
int
pusha
mov
les
jns
cmpl
es
rorb
stc
out
sahf
fisttps
jbe
pop
rcl
sub
lds
jmp
adc
stos
xlat
push
push
divb
enter
psubusw
jmp
or
pop
or
daa
je
add
loopne
loope
inc
sbb
imulb
mov
pop
aaa
out
test
mov
sbb
push
out
adc
loop
in
scas
dec
sbb
inc
gs
push
xchg
ret
sub
rcl
inc
repnz
cs
lds
sbb
sar
mov
xchg
jb
outsb
fistl
sbb
pop
xchg
jmp
and
fisubrs
call
mov
add
out
jge
adc
sti
cltd
inc
pop
test
jecxz
dec
push
sub
mov
ja
js
jb
lahf
iret
xchg
lcall
gs
jae
faddl
aad
out
lds
sub
pop
repnz
sbb
dec
sub
psraw
mov
inc
stos
push
sbb
mulb
lahf
sbbl
sbb
adc
jb
iret
lock
outsl
sub
lea
sub
mov
inc
popf
cld
or
inc
out
std
fadd
js
cmp
aaa
stc
imul
dec
add
xchg
cmp
in
pop
pop
mov
jae
je
lods
aad
loop
fwait
mov
sbb
lret
cltd
ret
adc
iret
js
fsqrt
sub
movsb
jecxz
clc
lock
xchg
cmp
xor
inc
lcall
pop
dec
cwtl
mov
add
test
adc
sahf
jae
jo
xor
fcoml
jnp
jl
sub
xchg
mov
adc
movsl
dec
pop
shlb
push
imul
fsts
pop
push
ss
cltd
and
jnp
cmp
mov
fildll
mov
daa
sahf
xchg
scas
fmul
jmp
mov
jl
sbb
mov
jmp
rcrb
xor
ret
mov
xchg
mov
pushf
ror
sti
stos
push
xchg
push
out
cmp
and
mov
push
insl
or
test
mov
pop
mov
das
lea
in
js
xchg
cmp
pop
pushf
pusha
xor
xorl
xchg
frndint
jmp
or
jecxz
xor
push
sub
std
stos
imull
sub
pop
xor
or
jecxz
sub
jae
and
mov
xchg
outsl
aas
leave
jp
fdivrl
aaa
popf
xchg
jo
mov
push
repz
fsubl
xor
ss
stos
pop
enter
mov
dec
or
mov
push
mov
inc
mov
mov
xlat
adc
inc
lcall
je
out
cmp
add
push
or
cmp
add
jle
pop
imul
sub
mov
icebp
pop
add
mov
call
movsb
fs
data16
ret
mov
jle
add
jl
out
lcall
jnp
ja
xchg
sbb
int3
pop
or
fisubl
mov
sar
movsb
or
push
arpl
ds
push
out
mov
movsl
rolb
sub
stos
and
dec
pop
lret
insb
ffreep
ss
lret
sbb
dec
xor
pop
sbb
lahf
out
aad
mov
rorl
out
pop
in
std
adc
jp
je
loopne
sub
jl
das
dec
loopne
pusha
mov
jae
insl
mov
mov
mov
divb
mov
clc
mov
in
cltd
cwtl
dec
mov
int3
js
insb
ret
cmp
xor
push
jb
popf
jns
xchg
cltd
mov
xchg
out
loope
cld
inc
negl
clc
inc
aam
aaa
mov
jecxz
and
sub
sub
fstps
xchg
push
ds
iret
inc
or
sbb
jbe
sahf
int3
loopne
pop
call
xchg
pop
out
jnp
imul
sbb
inc
adc
fsubrl
fnsave
outsb
jg
test
add
push
adc
inc
push
std
jne
popf
leave
pop
mul
mov
dec
pusha
sub
mov
push
mov
xchg
mov
xor
mov
test
test
test
xchg
mov
enter
mov
sbbl
mov
sbb
inc
je
pop
sub
xchg
add
xchg
adc
and
outsl
dec
stos
dec
hlt
mov
mov
out
cld
pop
inc
jp
and
das
pushf
test
ftst
mov
push
xor
fwait
jb
ret
cmp
ljmp
cmp
sub
popf
repnz
xchg
jnp
scas
movsl
icebp
and
jne
call
inc
pushl
or
outsl
dec
bound
xchg
scas
aad
pop
lds
enter
pop
ffree
andl
ds
ret
rorl
sbb
inc
in
mov
and
icebp
or
and
in
test
mov
cmp
aam
cmc
lock
pop
sub
jmp
sub
or
divl
adc
xchg
mov
stos
fdiv
mov
arpl
or
pop
sub
mov
fbstp
fimuls
dec
or
jg
xor
imul
xor
dec
sub
lods
xchg
push
jp
push
pop
lahf
fcom
in
xchg
out
xchg
push
nop
sub
inc
or
and
cmc
es
andb
fs
rcrb
pop
ret
mov
adcl
dec
xchg
and
pop
ds
imul
imul
pushf
aam
daa
adc
xor
push
jecxz
hlt
jle
icebp
dec
push
int
arpl
or
push
ljmp
outsb
and
dec
insb
jns
xchg
jne
fs
dec
js
adcl
add
dec
or
ret
lahf
lret
or
xchg
mov
add
sub
aaa
sub
pop
and
pop
mov
mov
imul
jno
xor
inc
dec
xchg
jp
xchg
mov
clc
inc
out
jns
or
inc
xchg
adc
cwtl
mov
mov
jbe
pushf
mov
sub
nop
repnz
xor
xchg
jns
xor
mov
push
mov
enter
stc
imul
int3
xchg
inc
shll
aad
push
cmp
mov
fistps
ss
cld
sbb
negl
inc
lods
xchg
xchg
xchg
loopne
xor
sbbb
outsb
adc
inc
mov
cmp
and
scas
xor
leave
adc
cs
jl
dec
fidivl
add
fiadds
jecxz
inc
cli
jnp
cli
rcrb
lock
shl
or
loop
mov
iret
sti
push
lock
sub
pop
iret
jnp
ja
aaa
pop
leave
mov
lea
and
adc
mov
cmp
cli
outsb
out
lods
jb
push
imul
mov
call
mov
mov
jle
push
push
data16
cmpsb
sarb
je
test
insl
pop
int3
rcrl
dec
adc
adc
xchg
sarl
mov
test
addl
mov
loop
pop
mov
rcl
psubd
mov
lea
lret
cmp
fnstcw
xchg
xchg
push
xchg
mov
gs
lret
xchg
pop
pop
lret
popa
mov
xchg
jg
sbb
adc
push
add
jo
out
xchg
ret
xor
ficoms
dec
xchg
adc
mov
jmp
adc
test
mov
push
cmp
mov
xor
jmp
imul
lahf
or
mov
repz
jb
xchg
xchg
and
ss
mov
jns
mov
testb
fisubrl
ret
shlb
out
imul
jno
sbb
and
pop
add
cmc
fnstsw
test
adcb
jns
push
sub
stc
push
cmpsb
mov
bound
push
insb
bound
or
adc
orb
inc
push
mov
inc
mov
xor
sbb
pop
cmpsb
nop
daa
ret
cmpsb
pop
push
icebp
lret
out
xor
je
jp
fldenv
pop
mov
sbb
xor
in
sbb
xchg
rolb
cld
mov
cmp
xor
lret
mov
xchg
xchg
rcrb
js
ljmp
orl
sahf
xor
jno
pop
imul
mov
data16
mov
jmp
xor
jb
sbb
push
mov
add
mov
adcl
jno
fnstenv
sbb
mov
mov
lret
pop
clc
xchg
lcall
in
mov
mov
jle
xchg
out
dec
cs
ret
aad
or
mov
popa
jle
int3
xchg
pop
or
xchg
push
xchg
pop
mov
aad
pop
divb
sti
loope
add
lods
add
mov
push
pop
lret
cld
push
push
repz
cwtl
scas
aad
iret
cmp
pop
pop
push
icebp
fcomps
hlt
lods
pusha
std
add
push
adc
loop
xor
mov
mov
test
inc
jge
rcll
push
std
mov
push
nop
push
fsts
sbb
or
mov
clc
frstor
and
and
scas
and
cmp
push
fyl2xp1
cs
sti
jecxz
add
rcrl
ja
push
outsb
arpl
dec
sbb
inc
stos
pop
jl
adc
inc
fcomps
lahf
lock
adc
jns
push
sbb
and
push
xor
cmpsl
cmp
jmp
lahf
movsl
add
lock
jno
push
cmp
fidivrs
xor
movsb
insb
mov
jge
int
jg
fwait
pusha
pop
sahf
je
xchg
in
jge
sub
ja
das
mov
adc
dec
repnz
leave
aam
sbb
fisubl
insb
notl
push
xor
jb
inc
cmp
hlt
cmpsb
push
jl
sarl
push
adc
pop
jge
or
adc
push
pop
jne
xor
mov
add
pop
daa
imul
cmpsl
sbb
or
or
cmc
paddusb
addl
lret
es
xchg
pop
jmp
repz
aad
sarl
add
gs
repz
in
jle
loop
and
lock
add
lret
inc
xor
shrl
cmp
fisubrs
xchg
fmull
in
sub
or
das
stc
mov
push
fcoml
test
push
jbe
push
pop
mov
xchg
cmp
jno
dec
pop
mov
lahf
push
mov
lret
jns
stos
pop
jmp
xchg
dec
adc
and
mov
adcl
out
cmp
adc
pop
xchg
xchg
fbstp
and
adc
mov
das
loope
dec
clc
xchg
outsb
sahf
inc
xor
enter
push
repnz
inc
mov
std
shll
and
cmpsl
adc
and
inc
addr16
jl
mov
cld
in
jmp
xchg
notb
mov
or
fcmovnbe
jge
mov
aaa
in
popf
fs
leave
jmp
shlb
mov
inc
add
xchg
sbb
mov
push
add
cwtl
decb
pop
inc
outsb
ret
dec
in
push
or
add
sub
sub
mov
sbb
mov
or
jge
aam
lahf
xchg
test
push
loopne
xchg
sub
or
pop
or
inc
lahf
ret
rcrb
aas
js
jbe
imul
es
mov
push
inc
leave
or
das
ja
xchg
icebp
adc
cmc
and
pop
jle
push
sbb
xchg
cli
fisttpl
in
in
outsl
and
or
sub
aad
pusha
hlt
imul
dec
and
out
testb
pushf
xor
dec
dec
mov
pop
sbb
push
mov
cmpsb
daa
jmp
jl
movsl
adc
cmp
icebp
push
mov
fs
cmp
mov
pop
loope
mov
insb
jae
xchg
xchg
test
add
dec
mov
xlat
mov
cmpsl
push
in
aaa
jbe
out
dec
jmp
in
scas
clc
mov
jnp
sub
dec
in
xor
pop
jae
sbb
fwait
addr16
mov
andb
inc
lret
pushf
or
push
das
daa
sbb
xchg
jmp
out
or
lret
push
jo
cmp
pop
cmpsb
pushf
xorl
aad
nop
rep
push
pavgw
fnsave
icebp
sbb
xchg
mov
sarl
std
cltd
lock
inc
lcall
test
test
mov
sbb
in
mov
jmp
mov
pop
mov
xchg
adc
sub
loopne
pop
jae
jbe
adc
popa
adc
inc
das
movsl
dec
pop
stc
jle
mov
popf
mov
sbb
aam
call
jmp
xchg
and
insb
xchg
pop
fucomi
inc
leave
ror
bound
outsb
scas
fwait
lcall
aad
rcll
das
in
in
inc
sub
dec
andl
dec
in
push
ret
mov
dec
hlt
in
mov
add
xor
mov
out
add
shl
je
mov
out
and
mov
mov
xor
xor
xor
movsl
push
xor
or
fcom
adc
xchg
cld
js
daa
enter
mov
ljmp
test
pop
push
ss
adc
add
and
pop
xchg
xor
pop
pop
mov
mov
je
jg
lret
mov
in
sbb
cmp
in
jo
lret
mov
subb
bound
pop
stc
roll
adc
lock
and
or
scas
mov
pop
cmpsb
push
mov
inc
xchg
pop
rcrb
popf
inc
inc
nop
lret
aaa
hlt
pop
sahf
mov
mov
das
testb
dec
into
fdivr
adc
mov
fisttpll
daa
dec
aad
jecxz
fidivl
xchg
cmp
push
adc
sub
mov
sbb
ror
inc
jecxz
jno
and
outsl
adc
dec
andl
or
inc
fidivl
fs
mov
movsl
xchg
bound
mov
fidivrl
jge
push
add
aam
jae
xchg
jmp
insb
mov
shl
outsl
xchg
ljmp
das
ds
call
fidivs
push
leave
and
sbb
lahf
mov
lea
mov
pop
add
daa
sub
loop
test
jnp
push
xor
iret
jnp
jecxz
js
fsubrl
in
and
mov
or
adcb
jle
push
inc
cmp
pop
dec
pusha
lods
cmpsb
adc
cmp
cwtl
js
adc
dec
sahf
repz
inc
and
std
lret
in
cmp
loop
and
sbb
lods
icebp
stos
je
push
int3
hlt
xor
fcoms
lahf
push
cltd
into
dec
mov
or
nop
inc
cs
into
or
pop
popa
add
push
flds
jb
fwait
or
mov
cli
push
cmp
repnz
mov
sub
inc
scas
pop
insb
les
lcall
or
dec
lds
xor
test
xchg
je
lahf
sbb
hlt
xor
mov
pop
xchg
dec
loopne
call
insl
pop
fcmovne
push
mov
outsb
mov
hlt
mov
call
and
pop
pop
insb
lcall
dec
inc
push
loopne
shlb
test
push
jnp
jg
test
sbb
xchg
int
cmp
xchg
inc
je
stos
push
pushf
filds
repnz
pop
loopne
cmp
stos
mov
xor
movsl
cmp
mov
xlat
sti
dec
add
pop
addr16
push
mov
mov
shrl
ret
xchg
push
clc
sub
mov
sbb
cmp
rolb
insb
xor
test
mov
bound
testb
and
mov
call
xor
cmp
test
xchg
inc
enter
dec
shll
fisubrs
lods
out
inc
addr16
je
push
mov
cmp
add
pop
adc
dec
inc
xor
mov
inc
test
push
mov
xchg
pop
push
cmp
pushf
out
cmp
mov
fs
cmpsl
into
dec
mov
jne
mov
lds
mov
nop
add
push
je
pop
in
jae
rol
aam
aam
jbe
xor
or
xor
cmp
adc
cmp
mov
ss
mov
ds
stc
cmp
out
enter
insl
xlat
push
aam
or
inc
cmp
push
adc
pusha
push
repz
addr16
push
gs
xor
cld
ret
jg
cmc
inc
push
sbb
xchg
cmp
pushf
ljmp
int
fdiv
das
es
lods
push
add
loopne
idivl
mov
and
xor
mov
loopne
cs
stos
imul
and
test
mov
int3
in
mov
sub
pop
adc
fadds
pop
cltd
push
xlat
jae
pop
sub
cmc
frstor
cmp
sub
push
mov
je
hlt
mov
lahf
xchg
fwait
mov
popa
ret
sbb
jo
out
add
and
xor
jmp
mov
mov
mov
push
pop
pop
pop
dec
fisubl
push
xor
inc
test
lcall
cmp
stos
pop
movsl
out
ljmp
cmp
loop
ret
jnp
faddl
dec
out
and
or
mov
mov
mov
xchg
xchg
sub
cmp
imul
sti
cld
addl
imul
leave
into
pop
lds
lahf
xchg
adc
xchg
into
repnz
int
sub
jmp
sub
cld
mov
mov
pusha
testb
inc
jle
pop
js
xchg
fnsave
mov
push
jg
xchg
fstps
lods
sar
shll
daa
in
clc
xchg
mov
enter
add
sbb
and
jo
in
fstpt
fwait
ret
mov
subb
xlat
mov
icebp
mov
cmp
cmp
or
pop
cld
jg
xchg
ja
cmp
lods
adc
pop
cmp
sub
imul
lods
addl
ret
cmp
int
insb
xchg
mov
movsb
jb
or
mov
addb
outsl
inc
mov
sahf
jae
cmpsl
test
aas
imul
pop
add
dec
cmp
mov
mov
mov
pop
stos
pop
cs
cmc
cmpsb
push
vphadduwq
loop
and
fistpl
and
ret
sub
addr16
cld
divl
aam
fdivl
xchg
sarb
sub
into
ljmp
adc
dec
push
or
sub
xor
ss
es
mov
ss
or
cmc
cmc
cmp
les
mov
mov
out
lock
sbb
es
xor
sub
fstpt
jbe
popa
and
cs
test
jg
iret
daa
and
fincstp
leave
iret
imul
inc
imul
loope
fsubs
mov
adc
mov
cs
fcoml
lods
out
jo
sti
hlt
xlat
aaa
cmp
mov
pop
and
xchg
pop
inc
imul
mov
dec
dec
in
fwait
mov
ljmp
mov
jmp
cmp
das
jae
jae
shlb
adc
daa
pop
pop
push
push
and
enter
inc
add
cmpsl
out
sub
mov
push
xlat
push
jo
daa
in
pop
inc
xchg
xor
movsb
jb
out
push
sub
and
sti
pop
xor
mov
jg
outsb
loopne
push
in
scas
scas
fcmovne
out
out
mov
lods
int3
and
add
push
jo
popa
sbb
out
fcompl
iret
mov
fisubrs
xor
xor
scas
fbld
cmpl
jg
pusha
sbb
out
repnz
xchg
pop
jp
add
inc
mov
cld
stc
test
xlat
ljmp
xor
jge
sub
mov
pop
and
cmp
jecxz
nop
inc
arpl
fstl
mov
adc
cmc
adc
out
imul
cmpb
mov
xchg
xchg
pop
fisttpl
mov
cwtl
stos
or
push
xchg
push
add
sub
imul
adc
cmp
decb
add
test
pop
or
out
cmpl
sub
mov
sbb
outsb
jmp
cmp
mov
lahf
ljmp
outsl
lods
jge
jmp
jae
pop
fsts
scas
enter
bound
mov
or
mov
fisubl
addr16
push
dec
mov
in
mov
rcrb
fmuls
data16
imul
cmp
fistpl
sub
lret
pop
in
mov
push
stc
mov
lock
test
xor
test
decl
aam
mov
lret
stos
adc
sub
jae
dec
jg
pop
repz
int3
orl
add
bound
inc
test
mov
notl
xchg
sbb
mov
test
cmp
cmp
inc
cli
inc
jbe
xchg
scas
sub
stc
pusha
cltd
shr
inc
jecxz
out
sbb
pusha
outsb
rcl
xlat
push
push
push
fnstenv
inc
hlt
pusha
insl
cmpsl
fsubrs
xchg
or
aaa
cmp
pop
jge
xchg
sbb
mov
data16
imul
mov
sub
xchg
xor
push
imul
ret
in
xor
pop
bound
insb
inc
cmp
mov
sub
outsl
and
inc
push
aaa
stos
mov
es
jecxz
adc
jb
movl
xor
enter
cmp
rolb
loop
sub
lcall
scas
sub
cmp
jnp
lret
or
insb
xor
inc
and
sbb
cmp
scas
cs
mov
rcl
xor
clc
js
push
push
and
xor
scas
mov
mov
and
cmc
pop
sarb
sbb
cli
mov
pop
dec
pushl
mov
icebp
ret
jl
xor
xchg
hlt
sbb
pop
insb
leave
add
idivb
mov
and
outsb
mov
popa
outsl
add
sub
xorl
xor
dec
imul
xlat
fisubs
mov
adc
mov
outsl
xor
inc
mov
push
ljmp
add
pop
orl
fildl
repnz
jnp
cmp
mov
xchg
fcom
pop
sbb
or
pop
call
hlt
pop
jno
das
sub
aad
mov
daa
sub
imul
cmc
aaa
push
pop
push
inc
cmp
addr16
js
lea
pop
xchg
mov
test
push
test
pop
add
pop
enter
je
loopne
mov
cmp
fstpt
fwait
and
insb
ja
je
leave
test
dec
fisubl
sbb
fdivrs
stos
cli
inc
push
jge
addr16
mov
add
mov
jmp
sub
pop
sub
scas
sbb
pusha
out
movsl
xchg
xor
lods
int3
out
and
cmp
sub
mov
lock
rolb
js
sub
ljmp
add
or
sbb
cmp
push
leave
add
sub
xor
pushf
iret
cld
sbb
pop
aad
sti
ret
inc
sti
fnsave
stos
loopne
aam
push
out
movsl
cltd
mov
pop
repz
in
jb
jecxz
cwtl
or
sahf
add
outsb
hlt
cltd
cmp
cmp
gs
gs
sub
lock
in
push
sarb
sub
aas
push
lret
push
cmpsb
sbb
in
or
mov
leave
int
leave
iret
jecxz
add
lods
xchg
xchg
add
xor
mov
mov
add
mov
dec
dec
les
das
dec
out
hlt
cmp
sbb
sbb
mov
popa
lds
movl
and
mov
mov
mov
iret
int
add
jo
repz
push
fs
divl
jb
ret
jmp
mov
xor
sub
mov
mov
xchg
sbb
loope
sbb
xchg
or
rcl
cmp
xchg
icebp
jb
and
aas
int
outsb
insb
mov
mov
frstor
mov
cmc
negl
rorl
rolb
fmull
and
push
jle
mov
cmpsl
xchg
popf
add
imul
notb
pop
out
push
ret
push
sub
mov
add
fcoml
sub
jl
inc
xchg
repnz
scas
jae
sbb
imul
cltd
dec
aad
les
inc
pop
test
cwtl
lcall
mov
sarb
inc
notb
cwtl
jecxz
mov
xchg
imul
std
mov
cltd
outsl
xor
xchg
mov
sub
movsb
leave
outsl
lea
push
add
cld
adc
shll
xor
std
add
pop
pop
leave
cmp
add
test
repz
imull
dec
xchg
jns
sub
or
dec
or
mov
mov
inc
imul
push
sti
aas
mov
pop
das
sbb
add
xchg
cli
test
add
sahf
and
stos
shll
fcompl
pusha
xor
add
add
clc
jl
jecxz
in
push
aas
sub
cmpsl
andb
dec
or
xchg
jmp
xor
imul
pushf
or
into
fistps
pop
jg
decl
movsb
xchg
xchg
xor
fcomi
mov
or
ljmp
scas
imul
jl
out
xchg
stos
mov
pop
aad
into
outsb
leave
call
fcmove
int3
lret
mov
mov
add
rcrl
pop
xor
xchg
jg
pop
push
aad
mov
hlt
test
xchg
stos
ljmp
mov
or
and
pop
sub
push
inc
xchg
mov
sbb
lods
mov
pop
dec
leave
mov
inc
push
fstl
inc
es
adc
repz
loop
lcall
push
cli
push
mov
insl
xchg
xchg
clc
stc
lahf
jnp
mov
push
xchg
or
pop
add
xor
movsl
mov
shrb
pop
adc
cmpsb
or
push
xchg
decl
repz
cmpsl
rcr
cs
repz
es
pop
addr16
into
cmp
sbb
scas
push
shl
add
xchg
negl
add
add
fists
mov
dec
rcrb
and
mov
ja
sbb
or
xchg
xchg
ret
stc
jmp
cltd
adc
pop
jae
lea
pop
in
jne
or
fmuls
mov
imul
mov
push
push
mov
int3
aam
int
fcompl
mov
push
movsb
mov
inc
jecxz
test
xchg
loop
mov
dec
movsb
loop
cmp
add
mov
fadd
addr16
fldcw
sbb
orb
mov
test
lret
and
imul
mov
sbb
pushf
idivb
into
mov
mov
cmp
mov
sarl
sbb
repz
outsl
movhps
mov
or
sub
aas
inc
push
aam
hlt
dec
pop
pop
cmp
sub
adc
mov
imul
hlt
lock
out
jle
mov
loopne
pop
inc
cld
jle
jge
xchg
fdivrs
xor
mov
dec
daa
cmp
fsub
js
stos
fs
out
popa
movsl
or
mov
pop
gs
mov
jae
jg
push
push
xchg
mov
in
jg
jo
dec
add
cld
dec
fiadds
push
cmp
cmp
mov
je
cmp
dec
adcb
cmpsl
or
xor
mov
outsb
xchg
shrl
push
mov
iret
inc
xchg
push
mov
popf
xchg
xchg
shr
lea
movsb
sub
or
pop
insl
inc
add
lods
cmp
loop
insl
or
rolb
lcall
sub
push
cmp
inc
mov
xor
outsl
cmpsb
