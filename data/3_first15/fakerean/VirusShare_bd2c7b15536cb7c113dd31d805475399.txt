add
add
dec
dec
and
inc
and
mov
lea
imul
movzbl
add
dec
mov
sub
dec
mov
add
lea
movzbl
movzwl
dec
add
dec
add
and
dec
add
movzbl
lea
mov
xor
inc
dec
inc
dec
sub
xor
lea
mov
dec
add
dec
sub
add
dec
jne
lea
mov
mov
sub
pop
dec
add
pop
sub
xor
pop
lea
movsbl
inc
inc
dec
add
and
lea
imul
inc
dec
add
ret
push
dec
dec
add
lea
mov
inc
dec
add
push
push
push
push
inc
or
lea
push
mov
dec
sub
inc
inc
xor
lea
mov
inc
mov
inc
push
sub
dec
xor
or
lea
push
movzbl
dec
push
inc
dec
pushl
inc
call
or
add
lea
mov
inc
inc
dec
sub
add
pop
ret
call
int3
outsl
jbe
js
cmp
imul
std
xor
push
lods
loopne
sbb
push
lods
mov
mov
scas
ret
xchg
enter
clc
pop
jp
je
movl
push
inc
cmp
fwait
fwait
or
mov
jmp
in
rcrl
and
cmp
xchg
mov
das
insb
cmp
mov
hlt
push
lcall
sub
enter
test
outsb
shll
or
jne
jge
aad
jmp
ret
mov
jmp
repz
pop
mov
and
js
and
and
dec
sbb
les
fstpl
jnp
int
out
shlb
imul
shr
scas
mov
rol
test
data16
adc
cmp
cltd
cmp
dec
adc
loop
push
sbb
pop
in
inc
xor
add
mov
ret
mov
aaa
mov
cmovnp
lods
and
jne
insb
ds
pop
out
testl
push
ret
pop
sub
sahf
pop
js
aas
dec
xchg
into
jb
xorb
inc
pop
or
loop
insb
aaa
lods
in
outsl
sub
mov
jmp
stos
out
jns
js
pop
add
jl
push
leave
insb
insb
adc
cmp
test
rcrl
jns
inc
in
outsl
das
bound
jbe
xchg
mov
jle
int3
fcompl
subb
clc
movsb
mov
arpl
shr
jg
pop
int
xor
xor
mov
fdivrl
loope
sbb
lods
sbb
sub
push
fisubrl
aad
and
inc
add
dec
push
jae
cmpsl
dec
push
cmp
add
sub
stc
push
lea
lods
jno
jns
add
push
sbb
xorl
mov
pop
pop
pxor
out
cmpsl
jne
fiaddl
inc
inc
dec
sub
or
adc
mov
sarl
push
sub
xchg
rorl
pop
and
movsb
scas
xchg
cmp
ss
dec
loope
fistpll
ljmp
mov
mov
stos
jno
inc
dec
ficomps
mov
js
loopne
out
adc
lea
cmpsb
mov
xchg
cli
int3
cli
add
lock
sahf
loop
leave
xchg
aaa
sbb
cmp
outsl
and
jmp
stos
cmp
push
or
mov
push
pop
jns
cltd
cmpb
add
lds
cmp
cwtl
pushl
mov
data16
insl
popa
adc
dec
stos
and
xor
xor
jno
and
pop
mov
shlb
jle
mov
inc
mov
aad
clc
push
loop
push
adc
mov
pop
dec
jb
pushf
sub
jge
mov
cmpsb
xchg
loopne
push
scas
imul
aaa
mov
mov
mov
in
mov
fnstenv
cmp
ds
add
out
fadds
ret
pop
pop
mov
jge
loopne
pop
fwait
stos
bound
je
jmp
pop
or
mov
test
mov
mov
mov
cwtl
and
mov
add
fwait
jg
push
sub
mov
call
lods
andl
or
push
loopne
popf
xchg
or
cmp
cld
setb
xchg
es
push
mov
cmpsb
mov
add
xchg
mov
push
jb
sbb
mov
insb
cs
jp
cmc
xchg
sti
xlat
aad
ret
sets
in
nop
inc
dec
andb
rorl
jns
mov
add
jl
lds
pop
add
cmpsb
mov
push
jecxz
add
cld
mov
rcrb
lock
push
cmp
fdivs
sub
mov
out
mov
nop
mov
aaa
cmp
fstpt
xchg
popf
cmp
ret
loop
mov
iret
sbb
adc
out
jb
fmull
dec
ja
fisubs
jge
push
mov
jb
in
shlb
sub
arpl
push
stc
mov
and
test
ljmp
int3
pushf
xchg
les
mov
mov
push
mov
nop
adc
cmc
fbld
mov
das
xchg
xchg
push
mov
shll
lds
adc
imul
sub
dec
js
adc
add
inc
ss
nop
lds
or
mov
jnp
gs
or
push
mov
arpl
into
mov
mov
sub
iret
jp
mov
inc
dec
pop
xchg
sahf
jb
pop
pushf
fsubs
out
and
inc
add
ja
push
push
push
pushf
scas
fstpt
into
in
std
loop
jae
sub
jmp
pop
sahf
push
pop
push
jne
ret
pop
mov
lods
sarl
mov
rcr
fistpl
mov
fisubs
into
pusha
pop
aad
arpl
subb
lcall
enter
or
in
rclb
aam
push
hlt
in
or
adc
xchg
mov
popf
sahf
cmp
add
js
jge
out
mov
mov
push
insl
lea
enter
mov
pop
in
addl
stc
mov
push
sbb
push
pop
inc
rcl
aaa
pop
sub
push
pushf
lahf
or
ljmp
jl
nop
daa
cmp
mov
repz
and
push
sbb
in
cs
out
iret
xor
sbb
aad
icebp
ret
mov
movsb
cmp
mov
pop
fs
pop
mov
or
jecxz
push
into
jmp
adc
cmp
or
jns
iret
mov
std
cmpsb
cwtl
hlt
xchg
imul
or
ljmp
xor
push
das
rorl
xchg
adc
test
lea
xchg
add
xchg
mov
movsl
sub
test
outsl
inc
pop
jmp
or
inc
xlat
int3
jnp
jo
pop
xor
orb
mov
fs
pop
cmp
jno
xor
push
mov
lret
cld
pushf
cltd
loopne
pop
and
add
push
imul
stos
push
shrb
or
outsl
mov
ja
mov
lcall
jle
push
cs
das
popa
ljmp
xchg
xchg
mov
dec
add
popa
stc
mov
fwait
mov
ja
jle
jno
and
pop
inc
in
inc
out
nop
shl
stos
lods
stos
push
pop
mov
and
stc
cmpsl
pop
xchg
pusha
and
dec
mov
mov
push
stos
or
dec
mov
xchg
push
incb
jg
hlt
add
mov
jl
adc
push
jo,pt
rcll
loope
pop
adc
movsb
aam
pop
ror
sahf
aas
sbbl
jg
lock
add
ss
sub
imul
aas
iret
add
ja
pop
ret
imul
ljmp
mov
out
mov
mov
leave
out
mov
or
loopne
xor
xchg
movsl
clc
scas
in
fdivr
jmp
je
dec
mov
sti
rcr
sub
jmp
fwait
aad
lods
je
lahf
les
lcall
mov
cld
or
and
inc
repnz
inc
xchg
aas
and
adc
push
push
sub
or
rclb
mov
repz
xchg
xor
mov
cmp
xlat
pusha
xchg
jmp
test
sub
add
cld
mov
mulb
inc
xor
mov
sbb
inc
dec
je
enter
scas
out
std
or
and
clc
inc
divl
pop
dec
cmp
xchg
push
mov
outsl
sarb
jle
pop
popa
inc
adc
add
xor
inc
jg
std
jl
mov
inc
jp
lret
insb
push
loopne
int3
inc
adc
xchg
adc
mov
mov
mov
sbb
add
mov
jns
in
lcall
arpl
clc
mov
pop
adc
inc
mov
push
sbb
fs
subb
call
add
push
xor
rclb
jp
aas
adc
push
adc
mov
pop
mov
adc
mov
or
cs
es
lock
cwtl
stos
outsl
mov
divl
adc
popf
mov
in
in
push
push
pop
sub
arpl
je
div
movsb
mov
and
dec
gs
movb
jo
xchg
out
fwait
push
aas
cmp
das
nop
mov
xor
loop
out
or
out
cltd
clc
mov
xlat
jecxz
shrb
hlt
out
call
movsb
pop
and
pop
idivl
push
cwtl
shrl
or
ljmp
xchg
lret
pop
dec
cmp
jns
popa
testb
mov
cmp
push
in
loop
insl
xchg
cmp
sub
mov
or
sahf
push
stc
loope
int3
fnsave
inc
xlat
fldt
mov
out
divb
orl
lcall
xchg
aam
and
push
jb
inc
nop
jne
or
mov
rolb
ret
sub
aad
jle
jle
mov
pop
out
outsb
sub
sub
lcall
mov
clc
call
in
xchg
jp
sub
aam
inc
sub
add
and
fwait
xlat
cld
dec
test
repz
jle
pop
push
dec
push
test
in
push
repz
xchg
sti
xor
mov
add
cmp
mov
sahf
xchg
rol
test
jns
jo
push
or
int3
sub
in
cmpsl
xchg
inc
inc
jmp
mov
xlat
mov
in
push
pop
das
mov
flds
mov
pop
mov
dec
fs
xor
mov
adc
sub
mov
loopne
xchg
inc
jg
and
sbb
add
xchg
repz
mov
sbb
jnp
les
bound
ret
jne
push
sahf
inc
rorl
adc
cmp
mov
imul
popf
ss
xor
inc
jo
imull
and
aam
fldl
in
cmp
push
add
ret
insb
xchg
std
or
outsb
clc
xchg
call
cmp
xchg
push
sub
xor
and
sbb
xchg
xchg
add
push
js
or
pop
xchg
mov
jne
cltd
int3
stc
mov
pop
xchg
in
loopne
adc
sub
mov
in
sbb
loop
xlat
jns
orb
outsl
mov
xor
int3
nop
cwtl
pushw
or
rcrl
je
adc
xchg
ffreep
enter
aas
das
adc
mov
sbb
insb
in
pop
jns
push
sub
or
cmp
fimull
inc
add
add
lcall
pop
xor
xchg
iret
adc
cltd
lret
lcall
in
xchg
bound
inc
scas
pusha
fs
dec
adc
cmpsl
dec
jmp
sbb
jno
xchg
stos
call
out
lods
push
sbb
aas
ret
sub
lea
adc
jp
xchg
movlps
mov
in
jle
xor
inc
cmpb
iret
push
and
enter
pop
out
adc
ljmp
cmpsb
lock
xorl
imul
lcall
int
xorb
dec
int3
addb
pop
sbb
sbb
xchg
and
popf
fwait
adc
mov
cmc
adc
ret
inc
clc
sub
in
adc
lret
xor
ds
jno
add
sub
insb
mov
mov
fildl
add
ror
daa
sub
push
scas
inc
shr
popa
or
test
test
and
cmp
fldl
out
dec
repz
or
in
sub
sub
fcmove
shlb
je
sbb
cmp
inc
mov
xchg
jae
push
repnz
mov
mov
pop
fnstcw
cmc
cmp
and
ret
leave
ljmp
push
xlat
imul
aas
loopne
dec
mov
cmp
leave
mov
adc
inc
fnstsw
push
dec
je
clc
fsubrl
hlt
cmpsl
scas
inc
out
fs
mov
fstpt
jbe
lar
bnd
xchg
cmc
das
mov
repnz
lods
pop
add
insb
jno
lods
jp
adc
in
xchg
dec
outsl
test
clc
jbe
in
adc
fisttps
cs
in
mov
xchg
dec
adc
fisubl
sub
mov
fldcw
and
fildl
cmpsl
mov
repnz
pop
dec
nop
jno
mov
dec
adc
pop
ret
push
leave
loopne
out
cmp
stos
fcomps
mov
or
mov
repz
mov
pop
imul
rorb
loope
dec
stos
add
adc
pop
mov
cld
pop
mov
popa
mov
cmpsb
ja
ss
mov
test
mov
push
mov
icebp
inc
ds
adc
sub
out
daa
mov
push
mov
push
xor
inc
pop
in
dec
dec
outsb
shlb
lock
rolb
jg
push
mov
sbb
mov
mov
lods
cmpsl
or
scas
inc
out
lret
mov
pop
pop
inc
inc
jmp
loope
leave
roll
mov
add
cmc
into
xor
aaa
cwtl
leave
in
xchg
fstpt
insb
mov
fdivrp
aad
inc
and
and
fs
mov
out
and
lds
mov
push
mov
jp
adc
ret
or
sub
sbb
inc
in
rolb
shll
insb
mov
or
pop
jecxz
icebp
and
xlat
lret
pop
and
out
mov
xchg
add
mov
testl
jge
push
popf
rorl
out
add
lods
aas
daa
adc
rol
inc
push
insl
dec
addr16
std
popf
mov
cmc
adc
scas
cltd
sbb
pop
push
mov
mov
scas
dec
std
pusha
sar
pop
pop
push
imul
mov
adc
repnz
xor
inc
mov
dec
and
test
cli
and
adc
inc
xchg
sbb
inc
call
divb
pop
dec
push
adcl
push
in
xchg
add
cld
in
jns
or
jmp
adc
xor
hlt
add
xchg
dec
push
movsl
cld
and
push
out
fdivr
lea
ja
clc
dec
int
aam
mov
out
shlb
mov
xchg
xor
lock
sbb
js
mov
daa
jmp
outsl
push
xchg
into
jl
fcoml
aaa
inc
outsl
or
and
aad
xchg
fidivs
mov
inc
test
cmp
or
imul
xchg
jmp
cwtl
stos
sub
sahf
xchg
ds
sysexit
mov
mov
sub
lret
jle
call
call
sbb
jle
movsl
sbb
imul
in
mov
dec
les
lods
cmp
sub
ficoms
dec
add
sub
and
jle
add
jnp
and
dec
shrb
mov
and
scas
insb
cs
es
or
sti
mov
imul
push
fildl
popa
adc
in
dec
adc
jmp
lds
dec
lock
orl
les
or
cmp
fidivl
rclb
daa
lock
cmc
sub
and
cmp
loope
fs
stos
into
and
mov
push
ret
hlt
inc
xor
adc
fs
push
addl
add
fists
adc
jmp
dec
and
ds
jp
inc
incl
mov
popf
jle
aaa
mov
nop
test
and
pusha
sar
into
mov
ret
dec
add
cmp
jecxz
outsl
inc
push
mov
in
mov
xchg
mov
mov
rcr
lahf
mov
cmp
add
in
popf
or
jno
fcompl
inc
jg
rorb
in
or
mov
xchg
aas
aas
adc
mov
mov
jle
loop
dec
imull
push
pop
inc
lcall
sub
mov
mov
or
sarb
fidivl
popf
xor
sbb
or
add
pop
mov
jnp
sub
xor
push
loopne
imul
aas
adc
pop
pop
fistl
cmp
xlat
add
test
mov
repz
sub
in
mov
lcall
xchg
mov
sbb
cld
je
lock
sarl
lods
pop
pop
inc
mov
iret
adc
mov
addr16
sub
jns
cmp
xchg
jb
inc
add
mov
push
mov
movsb
in
push
ret
fbld
sbb
test
bound
aas
lret
ss
mov
add
pushf
std
pop
outsl
jb
test
and
fildl
pop
add
jno
push
enter
rcll
and
loop
and
pop
aas
dec
lahf
or
test
dec
push
sub
test
cltd
push
xchg
ja
xchg
mov
movsl
lds
xor
and
fstl
scas
cmp
xchg
cmpsl
push
hlt
add
add
adc
mov
enter
dec
or
mov
and
in
cmp
daa
fsubrs
ret
scas
sbb
pop
in
sahf
test
xchg
cmpsb
nop
sub
mov
mov
sub
call
ds
mov
fcom
adc
mov
sub
movsb
push
sbb
repnz
cmp
rolb
jbe
out
adc
std
jp
mov
mov
leave
ret
aad
push
jmp
jge
mov
sub
push
push
xlat
add
push
gs
les
or
inc
mov
out
sbb
scas
outsl
and
cmpsb
add
xchg
sahf
out
dec
add
cmp
std
inc
mov
les
sar
pshufw
sub
out
pop
jg
dec
es
xchg
ljmp
ret
adc
push
les
mov
jns
outsb
sahf
fcmove
out
dec
xor
dec
jo
mov
inc
mov
div
ret
xor
hlt
add
hlt
add
xchg
add
loope
out
xchg
jl
xor
sarl
scas
xor
or
nop
xchg
lret
jno
loope
pop
sub
push
leave
stc
pop
pop
mov
sbb
pop
ljmp
into
scas
push
ja
pusha
mov
jmp
cmp
repz
cmpsl
add
add
repz
mov
and
mov
enter
rcrb
aad
sahf
cmp
gs
mov
sbb
fcompl
ds
lods
xor
fcmovb
daa
rorb
popa
xchg
lcall
pop
ret
cltd
push
push
sub
cwtl
in
test
add
xor
adc
arpl
push
inc
inc
in
arpl
jnp
xchg
inc
lret
jbe
lds
ret
stos
adc
push
test
sbb
add
mov
pop
and
subb
movsl
and
test
in
push
xor
jg
daa
sub
push
test
jecxz
sbb
hlt
repz
push
cmp
int
jg
jmp
cmpsl
cwtl
adc
xor
or
dec
subb
pop
or
ja
out
adc
fwait
sub
shlb
xchg
jmp
xchg
fwait
pop
fcoms
lea
test
push
jp
insl
or
sbb
push
jns
mov
iret
mov
mov
push
mov
cmp
and
inc
mov
cmp
jmp
push
and
jne
or
mov
gs
enter
repnz
xchg
jne
rcrl
ja
pop
movsl
sub
ss
hlt
adc
rcr
and
lock
fs
or
jno
outsl
iret
cmc
gs
sbb
loopne
push
jmp
push
cmp
xor
repnz
loopne
xor
iret
and
fidivs
or
loop
xchg
sub
inc
inc
push
or
stos
adc
mov
mov
mov
icebp
fidivl
dec
shl
data16
jbe
jne
test
ret
cwtl
add
jb
and
add
push
mov
pushf
xor
adc
mov
push
sub
std
inc
les
cmp
mov
bound
jle
fsubs
jecxz
or
fsubrl
jl
lret
outsl
and
lds
push
pop
cld
jb
bound
mov
enter
or
test
aad
jmp
inc
test
jmp
lods
sub
mov
out
xor
cmp
push
clc
cmp
cmp
sahf
data16
dec
js
xchg
dec
mov
daa
fistpll
jne
lret
push
cmpsl
push
insl
push
adc
fidivrl
and
mov
mov
inc
lock
cmp
icebp
leave
fcomip
ja
push
xor
dec
loop
dec
je
push
popa
cwtl
cmpsl
movsl
add
hlt
fwait
cmp
mov
jle
and
jecxz
push
mov
mov
jno
shlb
mov
dec
xor
fldl
lcall
mov
nop
into
xchg
fnstenv
jmp
mov
cmp
hlt
in
out
pop
sbb
add
loope
and
rorl
sbb
insl
je
lods
cld
mov
lods
cvtps2pi
push
lock
jno
popa
lret
fs
xchg
inc
jns
mov
push
sub
shll
push
ret
ljmp
push
or
repz
dec
mov
cmc
xor
test
dec
shlb
test
or
push
pop
test
add
cmpsb
mov
cwtl
imul
cmpsb
cmp
in
mov
cwtl
xchg
mov
inc
dec
cmpl
adc
dec
sub
add
cmp
andl
mov
pop
jbe
or
pop
push
scas
test
and
or
push
push
sbbl
and
in
test
int3
ss
or
out
imul
adc
movsb
pop
ret
testl
or
mov
in
push
pop
push
add
stos
or
sub
sbb
test
mov
rcll
sub
ja
cli
loopne
or
mov
push
roll
int
dec
mov
das
in
jmp
mov
xor
dec
cmp
cld
fnstsw
pop
loope
in
push
sahf
test
and
dec
std
fadd
jne
sub
imul
movsl
mov
mov
mov
aaa
pop
in
mov
ds
shll
cwtl
jge
pop
xor
pop
lods
lahf
jb
lods
fstpt
add
adc
hlt
stos
fbld
adc
jns
pop
and
loope
cmp
pop
push
and
imul
mov
add
dec
dec
or
in
test
push
jns
push
mov
and
push
adc
pop
cmp
js
out
fsubrl
cmp
in
ds
dec
fiadds
hlt
sbb
int3
cwtl
dec
stc
into
fucomip
je
popa
sbb
add
into
imul
lret
lock
sub
inc
ljmp
ret
and
sbb
xchg
mov
cmp
js
dec
loope
sbbb
cli
sub
and
and
shl
repz
addr16
and
pushf
mov
call
sar
fdivrs
add
inc
lret
andl
push
lock
ja
int
jb
cwtl
cmpsl
xlat
sub
sub
mov
shr
sti
inc
loop
pop
test
jb
dec
mov
xor
testb
push
jne
shrb
sarl
in
popf
pop
push
lret
xchg
or
out
andb
mov
mov
lea
mov
fisubl
cltd
inc
adc
test
in
or
xchg
lods
ret
or
lods
xlat
lods
mov
mov
inc
xchg
fisttps
and
in
sar
dec
inc
pop
movsb
pop
js
fwait
push
jmp
pop
nop
sbb
ljmp
and
xchg
xor
clc
xchg
dec
pop
jnp
data16
push
xchg
sbb
popf
pusha
stos
dec
inc
popf
ljmp
cs
adcl
jnp
adc
sbb
push
dec
add
mov
sub
sbb
cmpsl
imul
push
lock
mov
or
jne
jmp
es
pushf
cli
mov
fsubrl
mov
cwtl
arpl
sub
dec
jno
xchg
fcoml
jb
outsl
cmp
dec
test
repz
add
jb
dec
lods
jo
sub
pop
inc
push
sbb
jno
xor
addl
adc
mov
scas
leave
std
xor
aad
inc
cmpsl
or
jo
fs
into
push
dec
mov
xor
sub
jb
not
mov
or
daa
repnz
js
mov
dec
mov
sbb
outsb
inc
inc
or
cmp
bound
sub
jge
mov
mov
pop
orb
jmp
test
movsl
jecxz
or
arpl
push
xchg
push
lds
mov
mov
pop
xchg
mov
imul
sbb
mov
sbb
push
mov
mov
shrb
jno
cmpsl
ret
out
in
adc
mov
scas
aaa
enter
rolb
add
lods
das
pop
test
inc
or
ljmp
hlt
xor
ljmp
push
add
mov
push
in
bound
jl
mov
jmp
shlb
xor
popa
add
int3
mov
fisubrl
cli
adc
jle
push
mov
out
add
and
mov
xlat
xchg
sub
lahf
and
jl
mov
mov
test
cmp
popa
mov
in
jno
jg
sub
sbb
je
sub
push
jmp
filds
add
test
test
outsb
in
rclb
stos
cmp
addl
adc
jge
mov
push
xchg
fisubrs
into
inc
stc
add
dec
push
add
jg
cmp
pop
mov
inc
dec
scas
pop
and
sbb
and
jb
sbb
jp
pushf
ljmp
sub
mov
or
in
xchg
add
dec
mov
iret
fbstp
xor
insl
fstl
std
sahf
fcomip
es
or
out
inc
inc
or
cli
push
into
mov
in
sti
fcmovnbe
ficompl
xchg
mov
xchg
std
icebp
test
test
test
jecxz
jns
int3
or
les
xchg
bound
mov
pop
adc
ret
mov
sahf
mov
mov
popf
mov
cli
add
es
daa
jns
cltd
lahf
mulb
cmp
push
daa
push
in
jo
movsb
nop
outsl
adc
movl
jg
mov
cmp
cmp
call
fs
dec
call
adc
loop
xlat
out
pop
lods
sub
mov
mov
das
xchg
cmp
pop
xchg
jns
jbe
fdivs
pop
jno
in
and
divl
pop
push
aam
cmp
ja
mov
push
repnz
adc
std
pop
mov
jbe
inc
sbb
jl
and
in
mov
sub
adc
dec
and
addb
sahf
add
jmp
in
jl
push
pop
mov
jae
into
pop
cmp
push
dec
cld
lea
jg
popa
mov
aam
cld
notb
xchg
push
ljmp
fs
xchg
xor
and
xchg
fstps
inc
xchg
daa
mov
les
orb
out
sti
sbb
and
ret
mov
sbb
mov
aam
xchg
cltd
xchg
jp
inc
mov
stos
and
xchg
inc
scas
add
repnz
cmp
outsb
and
mov
test
negl
sbb
mov
mov
out
shrb
push
daa
shrl
xchg
scas
sbb
inc
cmp
cltd
jnp
cmpsl
push
repnz
imul
popf
test
xchg
stc
mov
sub
and
xor
lret
movsb
out
sahf
insl
imul
sub
pop
cli
pop
cmpsb
dec
js
mov
fisubs
or
jg
or
lods
dec
jmp
xor
push
idivb
das
ljmp
mov
es
cmpsl
fmull
ret
dec
and
ja
jl
pop
aam
or
sbb
sahf
sahf
mov
dec
or
pop
sub
inc
je
mov
loop
cmp
and
dec
cmovge
fisubrl
xlat
dec
jl
push
xor
pushf
or
popf
or
out
lock
add
out
jne
push
jmp
cmp
fldenv
jne
jo
mov
jge
orl
mov
sbb
lret
and
and
fisubs
push
movsb
xor
sahf
lcall
inc
xor
jp
sub
cld
data16
inc
rolb
xor
mov
jle
cmp
xchg
push
in
jmp
mov
and
ret
repnz
and
mov
sub
mov
mov
xlat
mov
aaa
pop
dec
leave
mov
sub
push
shlb
push
adc
movsl
mulb
ljmp
cvtps2pi
pop
push
push
jecxz
push
in
lods
sbb
or
and
inc
imul
push
add
inc
fildl
xchg
sahf
out
cwtl
mov
in
and
sub
out
imul
rcrl
pop
fisubrl
xchg
inc
imulb
sbb
mov
and
es
iret
pop
ffreep
js
lock
std
idivb
andl
pusha
inc
loopne
pop
mov
lahf
xor
pop
lret
xor
daa
xchg
mov
inc
mov
and
fidivrs
ss
lret
add
test
sub
mov
dec
mov
push
pop
adc
gs
and
sub
leave
mov
and
inc
xor
sahf
pop
jb
js
push
push
imul
rsqrtps
pusha
add
xchg
in
imul
lock
imul
mov
or
mov
xchg
xor
cmc
sbb
xor
insb
arpl
bound
cmp
sub
lcall
cmp
jo
mov
and
cmp
inc
shlb
mov
and
inc
sbb
fbstp
imul
fcmovbe
daa
outsl
and
popa
neg
xor
fiadds
jmp
xchg
xor
dec
lahf
push
inc
imul
push
movsl
mov
and
imul
iret
sti
pop
or
nop
fwait
sbb
and
mov
jl
or
mov
mov
mov
cmp
call
lods
sbb
pop
mov
mov
push
into
idivb
aad
orb
hlt
sub
aad
sub
xchg
mov
mov
out
pop
mov
mov
cltd
mov
mov
or
dec
dec
cmc
imul
repz
ds
add
or
xchg
xchg
sub
dec
rclb
ds
ret
imul
push
aaa
xor
cmp
inc
jecxz
mov
pop
jmp
pushf
imul
incl
pusha
jo
push
in
insl
adc
divl
adc
testl
stos
xor
pop
popl
test
shl
ret
mov
pop
mov
jp
cmp
std
dec
bound
mov
cmpsl
pop
mov
cmc
jge
xchg
inc
loope
test
fs
xor
adc
cmpsl
push
aas
adc
repnz
xchg
fiadds
sub
les
cmc
leave
xchg
xchg
out
mov
inc
subl
das
push
add
dec
mov
pop
lds
pop
push
jne
mov
push
pop
push
in
fisttps
push
aam
sub
into
aaa
shld
mov
outsl
lret
inc
dec
inc
or
cs
xor
sbb
jnp
xchg
sbb
repz
push
fwait
sub
pusha
test
inc
hlt
pop
cmp
jge
icebp
int
sbb
mov
nop
mov
cli
insl
and
mov
js
pop
int3
push
push
scas
cmp
add
cmp
or
xchg
adc
aaa
movsb
jecxz
jp
mov
cmp
cmpsl
and
mov
add
insl
lods
push
in
sahf
xlat
or
push
arpl
aaa
stc
pushf
push
cli
mov
cmp
loop,pt
inc
je
scas
push
inc
pop
mov
xor
add
mov
call
lahf
ret
mov
lock
out
fidivrs
or
testl
push
cmp
push
xchg
pushl
out
icebp
xor
das
incb
arpl
loop
mov
sub
repz
mov
or
xor
xor
je
jo
mov
les
mov
xlat
loopne
push
or
cltd
bound
add
bound
rolb
loop
mov
test
lret
addr16
pop
push
movsl
loope
jl
sub
scas
movsb
xor
mov
cmp
mov
pushf
or
ja
fst
push
out
mov
fidivs
fistpll
dec
lahf
cmp
mov
pushl
leave
flds
test
or
mov
and
push
or
out
hlt
rorl
repz
daa
cmp
pop
push
cmc
xor
adc
sbb
andl
aad
or
dec
jns
mov
scas
fwait
rorl
xchg
adc
push
xor
roll
mov
jmp
sub
cmp
fdivs
cmpl
dec
ljmp
push
lock
mov
je
mov
mov
shlb
pop
cltd
mov
and
push
fmuls
inc
xchg
lcall
aad
pop
jne
and
mov
dec
pop
lods
pop
out
and
subb
xchg
sarb
fidivs
int3
mov
push
add
rolb
mov
out
dec
mov
daa
push
das
push
add
fcoms
call
jb
out
xchg
xchg
shr
insb
mov
cmp
xchg
popa
ss
pop
push
fbld
test
sub
push
push
fiaddl
add
xor
inc
sub
lcall
daa
xor
adc
mov
adc
out
mov
mov
pusha
sbb
xchg
xor
xor
xchg
sub
push
fnstenv
push
push
push
shll
fdivrs
repz
ret
sti
pusha
mov
xchg
push
test
dec
add
cmpsl
inc
fmulp
faddl
out
xor
dec
pop
iret
ficomps
mov
or
nop
out
push
bound
add
cli
xor
fisubs
dec
mov
xor
inc
mov
jecxz
mov
scas
add
sub
mov
adc
dec
lods
push
mov
lret
inc
cmp
pop
insl
imul
mov
insl
sub
out
shr
mov
mov
mov
pop
push
pop
fs
lret
les
and
mov
push
mov
push
xchg
push
std
insb
mov
xchg
aad
cwtl
mov
mov
xlat
pop
es
add
test
popa
fldt
repnz
arpl
icebp
fcomp
cwtl
lret
rol
mov
enter
gs
insl
xchg
jle
vmovdqa
ljmp
fstpl
and
dec
scas
xchg
adc
add
daa
sub
shlb
jmp
xchg
xchg
orb
std
test
cmp
aad
fsubs
or
sbb
movsl
sub
dec
mov
fsubs
fists
out
pop
add
mov
mov
fimuls
mov
dec
out
into
stos
shll
mov
repnz
sti
and
add
gs
nop
pop
lds
mov
in
cmp
pop
testl
outsb
push
adc
and
xlat
lods
cmp
mov
xor
loope
push
test
push
bound
idivb
add
out
popa
mov
inc
add
sbb
rol
mov
and
out
mov
or
je
xor
mov
pop
nop
out
es
rcrl
adc
pusha
sti
inc
add
dec
rcl
lods
jmp
inc
xchg
data16
pop
lcall
cmp
mov
incb
inc
and
sahf
mov
cmp
das
mov
sti
mov
xor
adc
out
addr16
mov
mov
aad
mov
xor
dec
lret
jo
dec
es
xchg
psubusw
gs
inc
dec
dec
repz
leave
jno
mov
and
inc
sbb
or
sub
and
jmp
xor
out
mov
pop
insb
or
test
sub
sahf
das
pop
test
push
in
enter
leave
or
add
les
dec
add
enter
ja
dec
push
rol
cmpsl
repnz
sbb
ja
lret
in
outsb
imul
cmpsb
mov
mov
and
fisubrl
and
sarb
out
pop
int
xchg
push
lret
lret
seta
mov
repnz
adc
push
and
push
test
enter
or
xchg
push
dec
fs
imul
test
pop
mov
loope
adc
jmp
dec
pop
push
inc
pop
cmc
sti
xchg
jb
jecxz
scas
cmp
sub
nop
jmp
in
cmp
and
je
adc
sbb
es
cmp
jbe
pop
shll
adc
fistpl
sub
lea
xorl
push
dec
add
ret
inc
rcl
scas
int
repz
cltd
push
pop
cs
or
jge
sbb
cmp
shlb
sbb
jmp
adc
mov
cmpsb
xchg
xchg
das
iret
ret
sub
bound
orb
scas
shrb
mov
jnp
loope
adc
push
inc
inc
jbe
jbe
push
data16
adcl
jae
mov
and
lahf
lsl
inc
in
sti
mov
cwtl
mov
and
mov
mov
int3
pop
inc
pusha
adc
adc
inc
ret
adc
mov
or
dec
call
push
loope
insb
xor
mov
add
adc
lahf
cmp
je
ljmp
and
les
out
push
fsubrl
push
and
mov
out
add
jns
and
cltd
enter
jno
xlat
js
add
mov
push
pop
dec
pop
dec
pop
dec
xor
ret
lret
sahf
lock
adc
out
push
pop
mov
cmp
cld
stc
mov
xor
pushf
pop
mov
xchg
mov
fmulp
mov
jno
int
jno
jp
adc
sbb
dec
fisubrl
stos
out
nop
xlat
ds
orl
repnz
mulb
nop
mov
and
movb
iret
mov
aaa
add
pop
cwtl
ret
es
xchg
and
int
jb
mov
clc
add
rcrb
push
add
ds
add
scas
stos
out
jne
arpl
pop
insl
pop
xchg
mov
loope
sub
adc
mov
imul
js
mov
xor
xchg
add
iret
fwait
out
fcompl
subl
insl
push
scas
xor
test
xor
fstpt
sbb
les
sbb
xor
xor
push
popf
pop
stos
adcb
cmp
test
fnstsw
iret
pop
dec
in
aaa
push
pop
imul
pop
adc
in
xchg
popa
pop
cmpsb
out
arpl
testb
ret
ret
insb
push
add
stos
add
pop
arpl
ljmp
movsl
xchg
test
pushl
pop
imul
movsl
jnp
and
jmp
testl
push
sbb
cmp
in
jo
adc
add
mov
sub
jns
test
and
outsb
je
mov
dec
sbb
push
mov
fstpt
fnsave
data16
ja
into
test
cmp
jmp
sub
inc
adc
mov
mov
push
daa
test
aas
fwait
int
js
mov
sub
das
in
fwait
mov
and
js
sbb
xor
cmp
stos
mov
push
pop
popa
fstl
pop
and
jnp
les
jmp
fucomp
and
call
jmp
jne
popf
mov
imul
pop
insl
gs
mov
bound
imul
xor
mov
mov
adc
repz
ds
mov
xbeginw
loope
fiaddl
xor
pop
pop
mov
mov
stos
jno
adc
repnz
xchg
push
push
push
fstl
mov
add
xlat
or
fildll
into
pop
ds
jae
xchg
xchg
or
sarb
repnz
js
fsubp
test
stc
sub
and
das
and
jb
jl
cmp
xchg
icebp
jecxz
mov
loop
arpl
stos
je
ret
mov
jns
xchg
repz
lds
cmp
xchg
rolb
add
clc
or
cld
fldenv
and
cli
shrd
les
jns
ret
scas
xchg
jb
xlat
out
sub
xchg
xorl
cmp
shlb
pop
xor
loopne
push
cld
adc
xor
lret
lods
shrb
cmc
push
pop
adc
push
or
shlb
adc
inc
fmul
mov
adcl
pop
push
mov
add
sub
add
sub
sbb
sarl
sub
mov
and
shl
jg
pop
fs
in
aam
dec
leave
push
ret
call
jnp
icebp
lods
adc
push
insl
lahf
sub
subb
and
popf
mov
lods
sbb
dec
imul
push
push
daa
mov
pop
mov
data16
xchg
int3
rclb
inc
cwtl
push
jns
mov
shll
pop
addr16
mov
pushf
loope
je
xlat
and
pop
mov
cmp
lea
subb
push
pop
sahf
repnz
lcall
call
outsb
mov
jmp
xor
cmp
fwait
lea
jg
fsubr
xchg
movsb
xlat
xchg
fs
movsl
mov
mov
dec
mov
aad
sub
dec
pop
sbb
mov
or
jge
mov
mov
daa
es
in
loopne
jp
inc
ror
sbb
or
jge
mov
aas
lahf
mov
jno
xchg
rorl
dec
call
mov
push
enter
fcoml
mov
inc
movsl
idivb
inc
cmp
jb
in
xchg
std
fbstp
jge
inc
or
push
movsl
cmp
mov
cmc
cwtl
shlb
jne
dec
rcr
lds
lods
arpl
int
inc
cmp
mov
push
mov
scas
sbb
in
call
push
jae
ljmp
inc
jecxz
push
gs
jnp
jnp
test
and
lods
lcall
dec
cmp
lea
jb
push
pop
mov
and
lock
jge
shlb
mov
pop
sbb
mov
and
fmul
push
clc
ror
lret
imul
aaa
cltd
lcall
movsl
push
cmpsb
adc
data16
mov
inc
les
sahf
push
test
add
roll
sbb
sub
xchg
out
lret
adc
jl
mov
mov
inc
inc
fnstsw
push
cmc
repnz
mov
mov
xor
scas
in
mov
pop
dec
mov
xchg
fs
je
mov
mov
xchg
test
dec
lods
stos
sub
inc
mov
cmp
jmp
sbb
mov
inc
adc
sub
xchg
rorl
sbb
jns
stos
or
inc
inc
push
mov
or
cs
jno
xlat
sbb
adc
imul
push
inc
cmp
xor
xchg
aas
hlt
in
cli
mov
mov
mov
mov
in
cltd
aaa
ret
hlt
sar
push
dec
xchg
mov
cmp
add
ret
cmp
push
jmp
jge
cli
mov
add
and
cmpsb
or
jp
pushf
sahf
test
xchg
xchg
push
mov
mov
int3
xor
mov
dec
pusha
add
cmpsb
sbb
in
or
mov
inc
mov
pop
shlb
mov
sarb
lea
sub
xchg
negb
add
inc
repz
xchg
ret
push
adc
sbb
mov
out
dec
jg
dec
mov
mov
pop
dec
popf
or
add
mov
fsubl
enter
aas
je
subb
cmpsl
out
xchg
add
je
jne
repz
mov
sahf
pop
jo
pop
int
pusha
ja
jne
lods
test
cmc
lahf
ja
xchg
add
inc
push
or
mov
out
add
out
fsubrs
pop
or
sbb
pusha
adc
inc
sub
mov
pop
in
je
cmc
out
push
ret
pop
jp
add
test
mov
shll
popa
mov
jg
adc
mov
or
roll
cmp
mov
mov
dec
mov
fs
mov
dec
int
insw
jae
ljmp
loope
fnstsw
dec
nop
dec
adc
xlat
mov
add
jbe
movsl
fmulp
lea
loop
cli
sub
push
mov
mov
loope
jne
mov
pop
push
test
test
mov
imul
cltd
jno
jecxz
popf
fsubrs
sbb
add
filds
arpl
into
and
cwtl
pop
pop
or
icebp
in
lock
cmc
xchg
test
scas
cmp
jbe
mull
mov
aad
mov
xchg
out
pop
fisttpl
sarl
sub
or
inc
adc
into
stos
fdivp
pop
xor
movsb
push
push
imul
out
dec
inc
dec
mov
cltd
ficoml
or
enter
cmpl
notb
pop
inc
lods
lcall
fisubrs
jbe
and
mov
push
fucomip
cmp
sti
push
movsb
mov
pop
push
adc
dec
bound
je
mul
dec
mov
sarb
sub
xor
jns
cmp
adc
mov
scas
cli
add
push
out
sbb
mov
out
cwtl
and
adc
cmp
cmp
mov
inc
add
pusha
pop
das
into
popa
mov
enter
mov
aam
mov
mov
adc
xor
das
daa
cmp
lds
mov
mov
sbbl
cmp
movsl
xchg
int
es
out
in
aad
fnstsw
or
inc
pop
push
mov
push
push
jb
inc
add
pop
sbb
push
mov
inc
push
add
jns
jge
inc
lcall
fwait
ds
fdivr
mov
and
or
adc
aad
icebp
int
out
lcall
jbe
push
into
xchg
and
std
pop
inc
cmpsl
mulb
out
push
cmpsb
das
int3
iret
into
ss
pop
xlat
xor
mov
mov
xchg
addr16
aad
mov
xchg
inc
fcomps
add
lcall
adc
mov
hlt
xor
add
das
sub
jns
jge
stc
stos
std
les
mov
xor
fisubs
add
dec
les
filds
and
xor
push
jg
pop
push
and
stc
ds
xchg
pop
xorl
lods
pop
push
movb
xchg
dec
push
fs
push
adc
lahf
or
fcompl
cmpsb
mov
sbb
inc
pop
add
jne
test
shl
int
jmp
and
lods
pop
mov
dec
pop
xor
cmpsl
mov
imul
and
iret
mov
jne
xor
mov
inc
stos
jb
dec
int
adc
adc
out
fistpl
add
xlat
mov
sbb
mov
jns
fwait
inc
daa
sbb
jbe
flds
sbb
cmp
mov
inc
loop
sub
xor
sbb
cmp
ja
pop
sbb
and
jg
mov
push
push
push
dec
dec
inc
push
mov
add
adc
mov
ret
or
stc
call
add
adc
cmp
subl
xor
stos
sarl
sub
pop
fs
push
mov
jp
jle
dec
push
xchg
daa
enter
cmp
lahf
lds
cld
sub
cmpsl
mov
loop
and
mov
call
lds
not
cwtl
cli
imul
test
add
mov
add
arpl
xor
sub
jle
rolb
xchg
loopne
and
in
jecxz
xor
inc
xor
jno
inc
aaa
push
jno
mov
lret
stos
adcl
stos
xor
push
adc
filds
fwait
into
sub
mov
mov
out
add
shlb
sbb
nop
fbstp
xor
fs
xor
mov
ret
js
lea
arpl
aam
xlat
addr16
in
add
jl
addr16
xchg
push
dec
jl
andl
adc
jg
gs
xchg
test
fadds
movsb
pop
idivb
adc
xor
jge
lock
cmp
hlt
std
gs
xchg
and
pop
add
sarb
aad
fwait
lret
and
test
dec
cmpsb
fstps
add
fdivrl
xlat
movsl
or
mov
adc
in
incb
sub
jge
inc
shll
push
sub
push
push
jns
and
out
xor
dec
fildl
sahf
arpl
aad
ds
xchg
out
jl
addr16
inc
call
jo
push
mov
jg
add
add
push
jg
bound
into
js
xchg
sub
test
or
rclb
and
mull
mov
test
jge
adc
mov
pop
nop
dec
or
test
fisubrs
dec
cltd
sbb
or
and
gs
repnz
xchg
fldl
or
xchg
or
filds
sbb
aam
jg
hlt
fcompl
mov
push
sbb
je
daa
ds
xchg
dec
pop
lret
andb
loope
popa
lods
jno
leave
mov
xor
dec
aad
adc
mov
call
push
adc
cmp
scas
xchg
and
xchg
mov
clc
mov
mov
cmp
mov
dec
mov
jne
inc
jbe
xor
adc
ja
js
cli
xchg
adc
ror
ljmp
sub
mov
add
push
hlt
scas
outsb
xorl
xchg
xlat
sahf
gs
ret
test
mov
dec
shl
filds
addr16
outsb
push
int3
mov
pop
xlat
and
clc
mov
sbb
jmp
in
outsb
arpl
stc
push
mov
push
imul
lahf
fwait
loope
rolb
xor
enter
and
xor
mov
pop
xchg
xchg
mov
sub
sbb
mov
jnp
cmp
sbb
pop
outsb
ljmp
and
adc
scas
roll
mov
mov
imul
cmp
mov
out
add
lahf
adc
cmp
push
cld
xchg
das
lret
in
jge
pop
imul
xchg
subl
pop
xchg
push
xchg
aad
ja
mov
xorb
xchg
push
or
cwtl
and
pushf
sub
mov
fisttps
scas
pop
fildll
xor
sub
push
sub
sbb
xor
lds
pop
adc
jns
xchg
out
mov
out
lods
mov
notl
push
and
pop
js
shlb
jmp
cmc
cltd
aas
mov
sahf
mov
mov
add
pushf
mov
add
add
test
addl
mov
rcrl
xor
or
cmp
push
loope
mov
loope
or
inc
ret
inc
test
cmpsb
orl
mov
outsb
inc
inc
lcall
fdivl
loopne
cli
xchg
cmp
cmp
nop
xchg
test
addr16
xor
cld
test
push
gs
dec
mov
push
ret
ljmp
pop
push
or
bound
inc
add
stos
out
aaa
jbe
pop
mov
and
pop
int
sti
xor
lret
rcrb
inc
cmc
aad
fnstcw
dec
mov
iret
pop
inc
sti
stos
pop
pop
xchg
xchg
enter
inc
fnstcw
or
mov
sbb
mov
mov
ja
and
movsb
cs
sti
pop
push
shlb
sarb
mov
les
andl
vcvtdq2ps
xchg
inc
jno
adc
in
pop
push
leave
push
and
adc
lcall
cmc
gs
mov
jmp
pushf
mov
icebp
outsb
lret
arpl
out
out
mov
stc
pop
rclb
or
mov
call
mov
mov
jge
rolb
incl
adcl
push
test
adc
movsb
sub
adc
test
repz
pop
cs
xchg
jmp
push
mov
add
fistl
jge
aam
dec
test
dec
test
add
sub
sbb
fisttps
inc
xor
mov
js
lea
jmp
mov
mov
add
xor
pop
fmuls
test
out
push
in
pop
xor
inc
bound
leave
and
inc
adc
jb
aaa
sti
addr16
leave
rclb
mov
and
scas
ret
fidivs
cmp
mov
xchg
aad
ss
andb
mov
out
loop
insb
stos
insl
xchg
test
ja
fsubrs
cmp
sbb
sbb
cmp
push
sbb
jns
daa
mov
xlat
fwait
xor
mov
lret
xchg
scas
test
out
fistps
fsub
sbb
pop
mov
or
pushf
sub
or
int
sahf
fbld
cmp
or
adc
repnz
ror
inc
sbb
xor
sbb
iret
pop
loope
addr16
or
push
int
mov
jp
fwait
jl
pop
aaa
dec
jb
sbb
push
aaa
mov
lahf
pusha
mov
insb
cmp
ds
test
xchg
dec
es
dec
xor
cli
pop
xchg
in
movsl
pop
pop
push
jb
test
sarb
test
dec
or
inc
jg
xlat
inc
bswap
push
stc
nop
xorb
adc
xor
mov
add
test
mov
jg
sbb
lock
or
lea
adc
enter
lahf
adc
lock
mov
movsl
fsubr
daa
mov
mov
in
in
bound
gs
add
arpl
and
push
mov
adc
pop
xor
cmp
fnsave
js
into
mov
cwtl
loopne
fidivrs
mov
notl
push
mov
out
test
sbb
inc
push
pop
cmp
cmp
shlb
jg
ds
test
dec
mov
loopne
mov
dec
pop
mulb
pop
xchg
cmp
sbb
mov
add
test
in
rcll
inc
rcll
adc
and
jg
jge
adc
jns
lahf
mov
mov
pusha
lea
push
jmp
sbb
fstl
stos
test
mov
jmp
rorb
and
sub
ret
iret
loopne
mov
lds
nop
sub
jl
push
sbb
sbb
xchg
dec
pop
lret
imul
mov
mov
bound
add
mov
mov
pop
dec
ret
sub
or
scas
jl
sub
jo
jg
test
cmc
insb
push
insl
cld
daa
es
iret
and
pop
inc
sbb
imul
jmp
push
sub
scas
loopne
adc
jnp
stos
lahf
jns
roll
call
or
cmp
fwait
fs
pop
sub
inc
fiaddl
jmp
inc
leave
xor
fucom
sti
clc
cmpsb
cmp
mov
fcomps
outsb
inc
mov
pop
adcl
out
xor
add
int3
and
sbb
add
mov
mov
and
rorl
inc
mov
repnz
dec
jae
sbb
jmp
sbb
cmp
xchg
adc
es
fstpt
inc
mov
inc
xchg
mov
mov
jge
lods
pop
fcmovu
fimull
and
shll
xchg
or
decl
sbb
ja
jg
add
sahf
jae
cltd
out
mov
push
push
movsb
cmp
fiaddl
xor
xchg
pop
ja
aas
stos
arpl
adc
aas
stos
aam
xor
sti
jge
lods
adc
aas
add
push
jecxz
les
loop
jno
and
xlat
adcl
out
es
sti
shlb
stos
mov
jne
loope
fists
or
and
in
popa
xchg
mov
insl
sahf
push
mov
in
cld
pop
sub
jbe
lcall
xchg
jb
fldt
mov
enter
hlt
ffreep
cld
adc
repz
nop
mov
mov
cmp
sub
jge
shll
int3
jg
jae
xor
jno
and
rcrl
mov
out
call
sarl
das
or
lock
add
sbb
fxtract
sarb
mov
ror
test
jg
cmpb
xor
cmp
es
dec
cmp
pop
iret
push
push
clc
movb
jp
jns
fdivr
xchg
dec
ljmp
jecxz
les
jno
cmp
adc
mov
je
and
add
les
mov
jo
jb
ds
dec
int3
sub
ud2
lock
imul
int3
out
cmp
pop
andb
xorl
lods
mov
cmp
addr16
vpcmpeqb
mov
or
sbb
ret
lcall
mov
faddl
fstpt
out
mov
cwtl
add
push
les
mov
ds
and
pop
cmc
test
insb
inc
cmc
scas
push
dec
mov
mov
shlb
and
xchg
fbld
loope
inc
mov
xor
sbb
in
xchg
push
insb
in
xor
sub
les
xchg
sbb
adc
mov
inc
dec
pop
neg
std
and
lods
test
cmpb
les
testb
ret
dec
mov
or
stc
loopne
loopne
push
adc
mov
mov
and
lahf
inc
push
pop
mov
cmpsl
leave
imul
mov
mov
out
cli
or
sahf
or
and
fiaddl
outsb
lret
fldcw
or
push
in
mov
push
mov
jge
pop
dec
inc
mov
jno
inc
and
shl
imul
dec
add
cmp
in
jp
ret
pop
repz
mov
mov
push
dec
jl
dec
push
mov
adc
ljmp
sbb
add
sbb
mov
xchg
testl
jmp
fadd
adc
push
std
push
jecxz
jge
jmp
mov
xor
int3
adc
inc
enter
mov
das
idivb
test
out
push
push
jecxz
clc
aam
jg
mov
xchg
mov
xchg
cltd
mov
int3
hlt
mov
arpl
dec
adc
sbb
ljmp
aaa
enter
mov
int
sub
jle
add
cmp
jbe
xlat
rcr
dec
mov
push
std
or
cmp
or
xchg
mov
lock
faddl
push
sarl
jg
inc
sbbl
add
dec
cmpsb
lahf
adc
sahf
or
clc
jecxz
je
jns
pop
in
push
test
mov
dec
pop
fs
negb
push
dec
and
addr16
jmp
ret
mov
arpl
sbb
mov
inc
imul
popa
inc
mov
lret
shlb
mov
inc
lret
out
incb
lcall
nop
pop
enter
in
xchg
cmp
jp
cmp
pop
shlb
adc
inc
adc
sbb
sub
out
test
cmpsb
lret
mov
jnp
lcall
lahf
jle
mov
mov
jno
fistl
in
mov
push
and
sbb
cli
ret
arpl
cli
rolb
jo
cmp
mov
subb
imul
add
insb
cmp
mul
iret
iret
xor
jae
or
addr16
cmpsb
pop
fs
lret
icebp
popl
cmp
test
sbb
shlb
push
dec
scas
mov
std
fdivs
in
mov
xor
cmp
xorl
sbb
inc
push
mov
lcall
jle
repz
inc
cmp
dec
jne
push
push
inc
mov
adc
add
sub
ds
and
cli
push
or
mov
cli
xor
push
shrl
ss
cmp
pop
hlt
sbb
mov
xor
xchg
and
shll
xlat
push
ret
cs
add
cmpsb
inc
push
cmp
cmp
cmpsl
adc
dec
aam
pop
lahf
jmp
xsavec
sbb
xchg
scas
xchg
xchg
push
adc
dec
xor
aas
xlat
push
add
sub
xchg
jl
dec
fmull
dec
sti
addr16
mov
xor
cltd
cmp
std
pop
inc
xchg
dec
pop
out
inc
sbb
incb
lahf
arpl
js
nop
cmp
lods
xor
mov
mov
push
fadd
add
push
mov
ret
dec
push
inc
lret
xlat
fmuls
jne
sti
cmpsl
adc
jno
mov
mov
popa
sub
mov
bound
jae
mov
rorb
loop
sub
sub
lret
or
aam
inc
pop
mov
push
sub
aaa
iret
movsb
outsb
out
sbb
mov
sub
lods
jecxz
fisttps
loopne
cmpsl
fdivrp
mov
jl
pop
hlt
xchg
push
orb
push
inc
enter
insb
push
push
jge
mov
loopne
sbb
call
sbb
or
xchg
mov
loopne
jg
adc
inc
cmp
stos
pop
shrl
jge
scas
fs
call
and
es
scas
faddl
dec
dec
js
je
stos
sbb
ja
xchg
cmp
outsb
pop
test
movsb
ja
outsl
stc
sahf
inc
cltd
mov
cwtl
mov
leave
jae
jmp
shlb
jns
mov
dec
mov
enter
shrb
outsb
ret
pop
adc
insb
movb
mov
jae
int3
clc
int3
rorb
dec
xchg
xchg
ljmp
adc
push
pop
push
push
ja
xchg
cmpsb
or
sbb
inc
xor
inc
xchg
inc
add
fnstcw
jg
inc
test
push
mov
fdivrp
sub
mov
inc
int
jmp
bnd
sub
jo
lahf
xchg
inc
pop
cmp
cmp
dec
dec
pop
cmp
stc
pop
inc
xchg
cltd
shl
mov
shlb
mov
icebp
loopne
mov
and
imul
xchg
fwait
jp
jno
dec
call
cwtl
pop
outsb
dec
shr
pop
mov
adc
daa
in
icebp
mov
jp
or
iret
lret
sbb
and
pop
stc
jno
mov
andl
aas
adc
and
xchg
mov
inc
outsl
int3
ljmp
lods
sub
ja
inc
jmp
xor
sub
lods
aam
xchg
sarl
add
lods
ret
pop
mov
movb
test
xor
push
lea
jecxz
fdiv
cmp
or
repz
inc
fmul
cs
and
nop
movsl
pop
cmp
outsb
dec
mov
enter
xchg
les
and
in
cld
nop
test
and
mov
jle
sbbl
jg
jg
push
fldenv
mov
mov
cmp
mov
iret
pop
push
data16
mov
mov
stc
int3
sarl
int3
cmpsb
xor
and
and
jbe
stc
sub
rolb
mov
jg
clc
shlb
xor
xor
add
clc
popf
popl
aam
outsb
mov
rolb
es
add
mov
orb
test
dec
insb
inc
jp
xchg
mov
cwtl
repnz
cmpsb
sub
and
sub
lds
mov
push
push
repz
jmp
xor
inc
and
push
sub
vmovq
rcrl
gs
imul
mov
xor
push
scas
insl
imul
lcall
fs
clc
xorb
jp
enter
je
lds
imul
inc
push
imul
into
dec
or
push
sub
adc
clc
rcrl
in
mov
pop
or
pop
mov
shrl
cmp
in
lods
out
roll
inc
sub
aaa
test
push
sub
mov
mov
sbb
push
xor
cmp
sbb
push
ds
je
adc
stos
lret
arpl
leave
mov
movsb
push
xchg
lds
xor
in
jl
pop
and
dec
mov
jecxz
pusha
pop
push
daa
mov
xchg
sub
lods
xchg
ss
push
and
dec
insl
ficoml
int
pop
rcll
sub
call
xchg
sub
or
clc
sub
jb
fmull
ja
lret
aam
nop
outsb
popa
cmpb
fists
push
adc
fs
cwtl
dec
in
sbb
faddl
test
mov
lds
aam
insl
push
scas
aaa
pop
xor
pop
andb
inc
push
xlat
fdivp
pop
jge
repnz
sub
int3
mov
xchg
loope
mov
ficoml
inc
in
inc
gs
shrl
pop
gs
jmp
mov
out
andl
cmp
dec
fidivs
and
sub
fcmovnb
xchg
aad
sar
mov
fsubl
aaa
xor
pop
adc
add
les
mov
roll
mov
and
xchg
or
pop
stos
xchg
test
mov
mov
ss
test
mov
shl
pop
fwait
ret
jnp
lret
cli
and
shrb
call
xorl
aaa
xor
push
cltd
loop
lods
push
xchg
push
lds
rolw
pop
and
push
rcr
imul
insb
inc
dec
insl
test
inc
mov
dec
xchg
fildll
call
add
add
adc
into
cmpl
sbb
mov
pop
cmp
lods
ja
adc
push
mov
jecxz
mov
mov
add
push
inc
pop
cli
cltd
fistl
aas
mov
pop
jnp
fnstenv
in
inc
push
aas
lds
outsb
lods
ficompl
popa
mov
jne,pt
mulb
iret
jno
xchg
jns
test
push
ss
pushf
ret
inc
and
frstor
jg
sbb
pop
fdivr
nop
or
push
mov
inc
jb
add
jmp
lods
nop
out
mov
pop
push
add
mov
mov
int
mov
ret
pop
rolb
aas
lcall
cli
push
jmp
mov
cmp
into
icebp
fidivrs
push
jns
or
rclb
cmp
lock
xchg
outsl
fldenv
push
add
adc
outsl
inc
inc
sbb
mov
pushf
stc
fimuls
pop
pop
in
mov
inc
xchg
mov
mov
sbb
pop
or
sbb
imul
xor
xor
aaa
je
notb
push
insb
mov
das
mov
ret
sub
lods
in
pop
jmp
addl
jns
in
inc
cmp
repnz
cs
push
repnz
ss
neg
shlb
dec
and
cwtl
stc
jnp
sbb
mov
jb
nop
repnz
hlt
ret
mov
jnp
inc
jno
xchg
es
jecxz
int3
lock
dec
stos
into
adc
inc
cmp
push
popa
push
adc
fldcw
cmpsl
xor
rcl
inc
fistpl
bnd
sbbb
mov
insl
mov
stos
sub
add
xor
rolb
rcl
out
xchg
add
in
outsb
cwtl
in
mov
shll
mov
xchg
jle
sub
jl
icebp
enter
sub
pop
and
jbe
stos
push
xor
scas
dec
push
insb
mov
mov
enter
cld
pop
in
rcr
lea
mov
jae
cmp
dec
faddl
push
lods
shr
cs
or
sub
push
and
std
pop
mov
or
imul
inc
hlt
mov
mov
test
mov
pop
cltd
cld
sbb
loope
mull
or
in
fmull
fbstp
jp
sub
clc
stos
fcomip
inc
pop
mov
inc
insb
rorb
mov
and
xorl
pop
mov
xor
jo
ds
ficomps
mov
xor
pop
std
xor
mov
call
xchg
jmp
or
push
fwait
jl
lods
jg
out
add
jb
gs
sub
sub
sub
scas
mov
xor
xchg
sub
jp
xor
sbb
mov
jo
mov
pmuludq
pop
aaa
fwait
ljmp
jle
inc
idivl
xor
lahf
pop
inc
mov
lea
add
lret
dec
xor
mov
cmp
push
aas
add
lods
and
outsl
xchg
mov
inc
rclb
sbb
inc
sahf
cmpsb
sbb
or
aad
sub
fstpl
push
push
pop
sub
sbbb
add
nop
cs
push
push
and
mov
je
inc
loopne
adc
daa
test
pop
cmp
imul
dec
xchg
lea
add
pop
outsl
ja
sbb
push
jmp
xor
fs
cmp
or
dec
xlat
inc
mov
insl
inc
insl
jmp
lret
push
xchg
out
mov
mov
clc
ror
insb
stc
je
pop
ret
es
xchg
and
jae
fcomps
ja
imul
xor
sbb
out
push
fidivl
xchg
sbb
call
cmp
lock
sbb
fcompl
xchg
jb
xor
sbb
loopw
addr16
fnsave
clc
ja
inc
addr16
dec
push
inc
ljmp
sub
mov
sbb
jb
xlat
daa
dec
jmp
sub
int
out
imul
sbb
inc
testl
cmp
cli
adc
rcl
addl
xchg
adc
inc
mov
dec
xchg
cld
pop
dec
or
sbb
aaa
xor
and
xchg
mov
aas
dec
in
mov
test
clc
cmp
mov
jg
cs
sub
sbb
sahf
fadds
rcr
out
les
icebp
pop
inc
movsl
fwait
popa
xor
pop
lahf
sbb
call
dec
fdiv
xor
and
xor
jp
fldt
inc
imul
jmp
push
cmc
xor
icebp
lcall
enter
in
cmp
or
insb
push
mov
addr16
lret
dec
popf
enter
dec
dec
icebp
sahf
xchg
add
push
cmp
mov
pop
jnp
sbb
jnp
jp
push
shrl
cmp
xchg
in
cs
aad
mov
pop
push
mov
xchg
mov
fnsave
out
movsb
mov
cmp
pop
inc
add
sub
cmp
out
pop
cmp
add
stos
cwtl
shll
xor
daa
jno
pop
mov
jo
ret
daa
adcb
mov
cmp
mov
cmc
mov
imul
and
pop
jle
enter
jle
mov
scas
mov
addr16
mov
mov
cmp
scas
ja
or
aad
inc
and
repnz
mov
or
add
inc
mov
daa
leave
fmull
aaa
sti
dec
sar
inc
ret
jae
stos
icebp
mov
je
jnp
push
or
jge
sbb
mov
popf
daa
loop
cmp
pushf
add
fists
jo
mov
pop
cmpsb
popa
and
gs
mov
imul
movsb
out
xor
lods
mov
aaa
push
out
mov
dec
mov
add
mov
addr16
sub
cmp
sti
sub
sbb
sbb
push
xor
subb
pop
inc
in
lret
aad
imul
inc
cmp
mov
mov
adc
cwtl
cmp
adc
leave
enter
mov
sbb
jmp
pushf
mov
rorl
int3
pop
jmp
mov
cmpsb
sub
sbb
ja
jge
sbb
xchg
mov
add
push
fstpt
out
lods
xchg
subl
jle
xor
xor
imul
scas
or
in
cmp
wbinvd
lahf
repz
xchg
mov
pop
mov
sub
loop
in
jl
jecxz
jns
cmp
out
pop
push
and
sub
sbb
sbb
lea
sub
popf
push
addr16
pop
addl
mov
dec
mov
shll
push
ucomiss
popf
mov
lcall
jae
xor
mov
sti
push
xor
lret
push
push
xor
sbb
lods
xchg
js
adc
push
push
addr16
mov
pop
aaa
adc
pop
movsl
cmpsb
aaa
jae
push
jecxz
adc
and
stos
shrl
scas
adc
popa
jmp
fimuls
das
sbb
cltd
pop
adc
fnstsw
and
imul
rolb
fs
dec
loopne
test
jns
jge
jge
push
leave
xchg
cld
xlat
das
fimuls
js
dec
imul
ja
mov
push
pop
pop
jmp
loop
lds
mov
inc
xchg
jno
mov
jns
pop
mov
and
jnp
mov
cmp
sbb
mov
add
inc
fimull
cmp
roll
add
dec
iret
out
xor
ja
fcoms
testl
bound
jae
dec
pop
addl
mov
aas
or
mov
cmc
or
sbb
cmp
or
subb
pop
pushf
das
out
push
inc
in
xchg
repnz
stc
jo
push
call
mov
js
movsb
addr16
cmp
cmc
mov
ret
popf
rcrl
es
in
mov
fsubrs
pop
pop
mov
cld
mov
mov
sbb
sahf
pop
dec
sbbl
lcall
insl
fs
mov
or
orw
int3
inc
cli
add
pushf
push
fdivs
lret
bound
dec
loopne
mov
xor
xlat
mov
inc
xchg
shll
jae
mov
fs
jno
mov
scas
addr16
sti
in
xor
outsl
mov
pushf
jae
out
rolb
ja
cmpb
xor
jb
insl
mov
test
mov
push
es
loop
scas
test
mov
cmp
and
incb
sti
das
pushl
push
pmuludq
xor
jl
stc
jg
add
push
in
dec
pavgb
lcall
mov
stos
mov
enter
add
pop
ds
pop
je
dec
cmp
aaa
add
xor
popf
sub
lret
mov
sahf
pop
sub
movsb
inc
pop
sbb
adc
adc
out
xchg
pop
in
lret
lock
xchg
xorl
lods
stos
cld
out
aaa
fs
lds
jge
je
xchg
int
xchg
adc
xorb
cmp
stos
push
mov
pop
jl
lcall
fistpl
arpl
jg
arpl
in
enter
int
xor
add
cld
pushf
rcll
xchg
pushf
jno
pop
les
cmp
or
mov
cli
lock
cwtl
int
repz
out
cmp
push
xor
adc
pop
jle
push
dec
popa
cmpsb
cmpsl
movsl
sti
add
leave
and
push
mov
insb
mov
stos
enterw
ffreep
sub
push
ljmp
mov
aas
dec
inc
fs
lea
ret
fwait
icebp
jno
cmp
xchg
push
inc
sbbb
nop
pop
pushf
imul
in
pop
rcrl
mov
push
cmp
mov
fsubrp
mov
xchg
cmpsl
jle
hlt
ds
insb
ljmp
ficoms
ljmp
fucom
mov
xor
aas
xor
out
lret
in
insb
rorl
pop
lcall
leave
pusha
loope
adc
aas
jnp
mov
insb
pop
push
adc
idivb
popa
scas
subb
popa
lods
push
cs
mov
push
dec
dec
jecxz
cmc
jbe
mov
stos
jle
or
cmp
std
jo
mov
push
scas
rclb
push
shrb
adc
or
mov
repz
ret
orb
movsb
cmovl
add
xlat
aas
inc
scas
andl
and
mov
aas
mov
enter
jmp
push
jge,pt
insl
mov
add
adc
jne
add
jmp
jo
cltd
or
fdivr
mov
fldt
adc
fwait
fwait
push
fidivrs
adc
inc
shrl
and
sarb
cmp
lock
aad
mov
into
divb
ret
pushf
imul
shlb
out
cltd
dec
mov
int3
mov
mov
fsubp
jb
push
push
xchg
jp
inc
mov
cld
jne
ja
popf
shl
or
push
or
call
pop
fs
pop
jbe
sti
mov
daa
loopne
dec
jnp
dec
inc
mov
fsubl
filds
mov
mov
push
sub
enter
notl
xchg
mov
sbb
imul
ret
insb
add
jge
leave
jle
rol
cmp
xlat
mov
cmp
call
jb
dec
xor
sbb
dec
cmpsb
pop
sbb
lods
arpl
test
aaa
test
add
lea
pop
cmp
add
mov
fs
lods
mov
sub
mov
or
lds
adc
pop
jp
movsl
stc
sub
pop
pushf
aas
in
lret
jo
fisttpll
movsl
push
push
mov
push
push
pop
loopne
push
sarl
rep
jbe
add
pushf
movsb
mov
pop
stc
rorl
and
mov
ja
clc
xchg
dec
push
sub
mov
fwait
mov
stc
in
ficompl
les
addr16
or
or
das
jno
xchg
pop
iret
or
repnz
pop
xor
mov
jo
adc
bswap
push
fadd
outsb
cli
movsb
sbb
js
xchg
push
cwtl
mull
cmpsb
dec
adc
and
pop
sti
leave
pushf
push
adc
xor
cmp
cmpsl
repz
lcall
lahf
aam
pop
sbb
or
stos
iret
pop
insb
sbb
xchg
mov
sti
jecxz
scas
repnz
sub
enter
xorl
cmpsl
in
pop
xchg
push
cmpsb
aas
pop
mov
int3
mov
adc
shll
jge
in
or
popf
test
dec
dec
add
shrb
or
xor
inc
ds
push
xlat
popf
clc
mov
popf
pusha
ret
nop
adc
or
jecxz
pop
subl
push
sarb
pusha
sub
sub
push
enter
arpl
lret
push
bound
push
adc
lods
and
sbb
rcrl
fists
sub
mov
push
dec
sub
pop
inc
pop
lods
pop
cmp
nop
pusha
fidivs
mov
jecxz
fisubl
pop
pop
mov
out
mov
jbe
mov
pop
mov
adcb
cmp
inc
cmpsl
outsb
adc
mov
nop
pop
jg
jecxz
call
and
loop
adc
ja
aaa
aad
insl
sub
and
sbb
xchg
push
lret
or
subl
dec
fimuls
negl
rolb
loop
stc
dec
int
test
jno
in
pop
xchg
push
mov
sub
fldenv
scas
mov
test
dec
and
pop
aad
out
cltd
divl
jb
jg
jle
mov
into
imul
in
test
xchg
jbe
mov
sbb
pop
ds
cld
jle
jns
jae
xor
xchg
cmp
int3
fsubrs
sub
sti
pushf
lods
mov
test
pop
mov
into
push
adc
jns
xor
sub
cmp
xchg
xchg
cmp
or
pop
pop
ret
mov
cs
push
pop
xchg
cli
mov
aam
cmp
jb
lret
or
out
or
push
aam
push
iret
inc
test
shr
pop
push
mov
cmp
in
mov
sbb
ljmp
pusha
dec
ret
mov
push
stc
pop
test
decl
scas
in
fcomps
stos
mov
xchg
out
adc
xchg
decb
scas
adc
lods
aaa
mov
mov
mov
sarl
outsl
push
pop
das
fwait
icebp
scas
aas
scas
imul
jo
push
push
or
daa
les
push
xchg
test
sbb
push
xchg
test
scas
push
mov
push
add
stos
mov
cli
stos
jge
popa
cwtl
pop
pop
sub
dec
out
cmpsb
addr16
or
xchg
iret
ja
xchg
or
scas
ljmp
js
mov
mov
add
shll
sbb
jmp
test
fnsave
sbb
mov
xor
inc
mov
fucomip
jge
in
inc
dec
mov
or
mov
aad
mov
std
mov
shlb
fnsave
pop
pop
fidivrs
fldt
out
mul
sbb
xor
test
mov
adc
mov
pop
ss
rorl
add
xchg
mov
into
daa
mov
pushf
scas
aas
or
pop
sbb
loop
mov
sti
call
bound
out
ja
push
data16
jl
ret
nop
adc
or
xchg
and
pop
in
clc
or
in
es
dec
xlat
mov
or
fimuls
movsl
loop
popa
and
and
mov
ss
mov
je
int
decb
push
adc
shl
cmpsb
push
cmp
sbb
ja
xchg
out
cmp
adc
push
cwtl
test
movsb
dec
pop
push
pop
pop
jle
pushf
lahf
xchg
cmp
decl
dec
dec
ja
jp
mov
xor
into
jle
sbb
stos
jge
subl
out
push
and
rcl
push
adc
cmp
mov
add
and
loope
ja
pop
xchg
lea
mov
ds
pop
xchg
dec
lcall
outsb
cmpsb
test
cmpsl
cld
jno
mov
clc
xchg
cmp
cld
andb
push
pop
jb
arpl
clc
pop
pop
iret
sbb
jle
pop
dec
pop
and
and
mov
fs
cltd
mov
jmp
movsb
dec
cmpsl
jl
mov
rdpmc
cmpsb
inc
pop
add
cli
fldenv
rcrb
les
push
aam
in
cmpsb
adc
insl
daa
clc
pop
pop
nop
mov
shlb
mov
sub
xchg
adc
jge
adc
lods
adc
jle
sub
or
out
inc
test
adc
push
pop
in
stos
jo
ds
fucomip
sub
sub
cmp
jle
call
mov
pop
in
push
xor
ror
inc
jp
xchg
push
outsl
pop
test
test
xchg
dec
mov
add
je
lret
shl
xchg
fdivl
cmp
out
fldenv
stos
cmp
outsl
arpl
ficompl
sub
adc
mov
adc
aad
aad
out
mov
repz
dec
xlat
mov
orl
mov
pop
ficompl
sahf
mov
fs
sub
dec
and
aaa
jbe
nop
stos
mov
call
pop
adc
lcall
lcall
rorl
and
and
xor
sub
rcl
cld
jbe
test
les
dec
pop
xchg
in
lock
nop
outsl
stos
frstor
cli
mov
lea
jmp
negb
arpl
fxch
cmp
mov
cmpsb
or
adc
push
xor
sub
std
inc
inc
lret
enter
aas
sub
int3
fs
cli
lods
scas
frstor
out
push
xchg
in
movsb
sarb
nop
jbe
call
and
stc
lret
sub
xor
or
cli
pop
sbbl
cmp
push
sub
repnz
repnz
sub
les
imul
clc
mov
jno
daa
cmp
lods
and
mov
mov
jl
add
inc
dec
fimull
adc
add
dec
pop
rol
xor
push
pop
push
pushf
inc
sarb
out
dec
shl
mov
sahf
imul
and
gs
mov
fdivrs
lock
dec
pop
xchg
cmpsb
adc
xchg
popa
and
mov
test
mov
loop
jae
jns
mov
test
jge
dec
clc
push
fists
push
mov
cli
lcall
and
or
fistl
xor
mov
inc
stos
jns
mov
popa
jecxz
daa
sub
iret
sub
int
int3
fisttpll
mov
fists
lret
jnp
jae
sti
mov
jb
enter
sti
xor
mov
inc
mov
pop
or
lods
scas
imul
xor
stos
scas
mov
lods
push
xchg
repnz
clc
outsl
inc
out
test
cmp
inc
push
stos
addl
outsl
cmpsl
xor
xorl
cmp
ss
sbb
lds
mov
adc
daa
push
clc
call
idivl
sbb
lods
add
fdivr
mov
in
or
leave
and
add
mov
jl
cmpsl
lcall
jmp
insb
out
add
lock
fsubp
inc
test
cmpl
push
mov
or
mov
inc
lahf
test
ljmp
test
rcrb
pop
frstor
daa
int3
mov
sub
clc
inc
and
cmp
outsb
fnstsw
mov
cli
dec
out
mov
sbb
in
dec
test
lret
xchg
inc
bound
or
and
fwait
xor
xchg
jnp
movsb
pop
sub
mov
shlb
mov
outsb
mov
pop
data16
mov
frstor
rcrb
xor
rclb
mov
fcom
dec
jge
dec
xor
push
sub
sub
xchg
icebp
das
in
icebp
fnstcw
fwait
mov
and
mov
push
pop
push
push
psubd
xchg
dec
cmp
jnp
push
mov
sbb
xorb
sub
or
dec
jg
ss
cmp
xor
cmpsl
xchg
ja
mov
pop
mov
rcll
push
test
cmpsb
xchg
cmpsb
shll
sbb
xchg
mov
repz
pusha
pop
adc
popa
add
std
out
mov
xor
push
inc
or
and
sbb
rcll
jae
mov
gs
add
jnp
mov
scas
cmc
xchg
das
sub
pop
fnsave
jmp
cmp
pop
stc
test
push
dec
inc
cmp
dec
sub
addr16
jnp
mov
enter
adc
out
orb
ds
pusha
pusha
jb
jne
inc
sahf
pushf
addr16
lods
dec
subb
push
pop
mov
cmp
arpl
leave
push
mov
mov
das
add
xchg
pushf
cmp
dec
fdivrl
mov
inc
out
xchg
je
or
xrelease
icebp
mov
jmp
imul
enter
xchg
pop
push
outsl
cmc
js
scas
mov
add
stos
insb
fildl
scas
sub
in
vrcpss
push
cmp
outsl
xchg
push
inc
sti
call
outsb
sbb
lds
addr16
js
jmp
call
aaa
pop
mov
mov
xchg
or
mov
das
cmp
lahf
imul
lcall
mov
orl
mov
sbb
in
lcall
xchg
gs
movsb
mov
dec
add
adc
loope
sub
jb
inc
jmp
push
pop
ror
arpl
adc
fldcw
test
test
jno
inc
sahf
ret
mov
aas
test
jle
mov
mov
or
addr16
push
bound
xor
out
dec
push
xchg
fisttpl
stos
daa
outsl
xchg
jnp
push
cmp
mov
dec
adc
jbe
test
cmp
add
jmp
cmp
mov
test
mov
mov
or
mov
outsb
loopne
push
add
cmp
rorl
mov
push
cmp
pop
sbb
sbb
or
mov
mov
dec
imul
adc
jne
pop
pop
xor
inc
in
pop
adc
mov
adc
mov
fs
lock
ret
and
xor
pop
push
clc
xor
mov
sbb
cmp
cmp
in
leave
xchg
js
testl
pusha
loop
push
cwtl
das
push
popa
add
sbb
mov
mov
cmp
pop
in
repnz
dec
sbb
mov
add
inc
xor
icebp
cld
fwait
cmpsl
icebp
xor
lcall
fsubs
push
add
popf
jae
and
cmp
inc
push
sub
cwtl
std
movsl
in
dec
int
adc
jns
lods
fsin
sbb
ret
cld
dec
pminub
jge
xchg
fsubs
out
cmp
das
sar
stos
rcr
rorl
popf
push
cltd
and
inc
gs
dec
jo
adc
int3
mov
lcall
pop
aaa
xchg
ljmp
shlb
sti
lock
in
aaa
add
push
mov
mov
mov
mov
in
fmull
mov
or
mov
out
cmp
icebp
mov
jge
mov
hlt
jge
xchg
scas
inc
aaa
pop
mov
repnz
sbb
das
shlb
sub
ficoml
out
jns
push
adc
dec
cmp
adc
stos
jb
sub
jae
fwait
xor
fwait
adc
mov
sub
adc
xchg
lret
mov
ljmp
push
inc
pop
pop
inc
movl
sbb
cmpsl
xor
mov
loop
mov
shl
addb
mov
sub
push
insl
loop
add
sbb
lods
mov
out
lcall
lcall
rcll
lahf
subb
nop
mov
xchg
outsl
lahf
pop
gs
adc
mov
mov
push
test
fisubrl
jo
aam
pslld
mov
into
ret
adc
adc
lret
outsb
or
xorb
out
and
xchg
mov
std
aas
sub
sbb
xchg
lret
popf
arpl
inc
xor
lods
cmpsb
jmp
in
out
fcoms
lods
pop
lcall
sub
add
sbbb
popf
mov
mov
out
cli
loop
int
mov
cmpsb
add
jge
mov
mov
ret
add
out
mov
lea
outsb
jle
and
add
pop
cwtl
rorl
pop
or
mov
fwait
sahf
cmpsb
lds
xor
sbb
test
mov
jmp
movsb
icebp
pop
test
aaa
jnp
or
icebp
mov
mov
movsb
dec
mov
insl
xor
insb
lods
clc
mov
aad
jo
adc
mov
in
xchg
push
pop
data16
mov
shl
clc
jnp
and
dec
pusha
cli
repz
pop
jecxz
insb
popf
stos
adc
repz
insl
clc
lea
inc
imul
or
push
out
mov
stos
mov
pop
jo
lret
data16
fmulp
pop
daa
xor
pop
fimuls
jp
sar
cmp
xor
mov
rcl
js
lods
or
jge
wrmsr
push
mov
sbb
inc
inc
sbb
cmp
jae
or
daa
fwait
jno
mov
pop
add
jecxz
cwtl
sti
jno
mov
negb
jb
in
iret
inc
das
push
shrl
push
es
into
int3
push
jno
filds
xchg
push
lret
test
imul
adc
aaa
push
dec
enter
ljmp
fcompp
aaa
stos
mov
call
sbb
mov
outsb
lea
and
shrl
ds
test
pushl
andl
icebp
cmpb
stc
or
mov
and
and
sbb
push
stos
mov
jl
mov
dec
add
nop
xchg
cltd
xor
loopne
mov
popa
cli
jo
add
adc
out
cmp
arpl
fsubrs
sub
lcall
xchg
push
ret
jmp
cwtl
adc
rcll
dec
das
mov
enter
ret
insb
mov
mov
lret
jle
cs
push
das
shrl
lea
mov
std
dec
xchg
adc
jg
inc
outsl
into
incl
aad
idivb
sbb
std
test
arpl
dec
dec
mov
imul
dec
mov
sbb
xor
or
repnz
mov
mov
aam
in
cmp
loopne
pusha
mov
ja
in
jns
adc
mov
jbe
cmovg
loop
rolb
xor
ja
loopne
ja
pop
jne
test
mov
sub
leave
mov
cmp
pop
sti
divl
int3
cmc
mov
mov
push
int
sahf
movsl
mov
inc
pop
data16
iret
sbb
out
lods
push
stc
cmpsl
pop
in
insb
hlt
mov
cmp
subl
xor
sub
jae
mov
ds
in
pop
xchg
addr16
dec
adc
pop
stos
push
shl
jecxz
mov
jl
sub
mov
outsb
xchg
test
mov
push
stos
ficoml
lea
out
push
push
mov
pop
orb
jb
push
es
adc
sarl
mov
pop
aad
xchg
and
jns
ss
pop
mov
sub
fs
inc
cmp
inc
aaa
jle
push
cmp
adc
cmp
out
std
and
xchg
push
ret
fisubl
test
mov
mov
mov
and
popf
mov
push
sub
repz
xchg
test
jne
pop
fbstp
call
jmp
mov
and
xor
push
orl
jns
sahf
and
repz
push
movsb
fildl
out
adc
insl
shr
cmp
jp
loope
lret
rorb
lret
mov
leave
mov
sub
jo
dec
stos
xchg
in
add
bound
out
sub
out
movswl
jge
out
dec
mov
mov
add
dec
repnz
sub
ljmp
insl
sub
ljmp
sub
popa
leave
je
sti
mov
mov
adc
rorb
imulb
jns
push
xlat
jbe
and
lods
test
nop
pop
dec
nop
push
ret
and
mov
mov
insb
outsl
dec
fldcw
sub
jmp
jne
xchg
dec
push
rol
sub
or
popa
adc
cmp
and
loop
or
mov
gs
xchg
lea
mov
test
ret
orl
addr16
inc
push
dec
iret
push
mov
jecxz
retw
fwait
scas
imul
or
insb
andl
xor
xchg
iret
or
popf
pop
pop
adc
repz
aaa
jge
lock
pop
xchg
test
dec
xchg
fs
add
pop
mov
jns
icebp
pop
dec
arpl
ja
jmp
jecxz
mov
push
aas
scas
push
jbe
cmpsl
and
hlt
mov
lret
aad
lods
dec
jmp
xchg
and
dec
lea
stos
fdivr
cmp
icebp
inc
stos
mov
push
mov
in
shll
and
add
fbld
fcmovbe
lods
sbb
sti
out
icebp
xchg
cmc
arpl
int
mov
pop
std
and
mov
adc
adc
dec
jo
push
ret
jno
push
outsb
aam
shll
in
cmp
mov
mov
leave
sbb
or
xchg
pop
pop
add
and
push
jle
pop
fs
lcall
mov
or
mov
jecxz
ret
mov
lods
mov
mov
and
ss
fs
test
jae
jns
jecxz
xor
rolb
adc
rorb
leave
cld
mov
mov
mov
negl
ss
rcrl
movl
mov
cltd
loop
loope
test
mov
xchg
inc
aas
mov
test
or
out
stc
jb
and
cmpsb
xchg
insb
mov
fidivrl
popf
addr16
xchg
push
pop
xchg
fimull
mov
or
data16
push
jno
fdivrs
fadds
sub
sbb
pusha
je
jmp
push
cltd
xor
lea
icebp
sub
addr16
cmp
imul
movsb
adc
cli
shlb
test
aad
dec
in
cmp
out
icebp
jmp
daa
repz
gs
mov
cmp
jo
fsts
add
cmp
add
test
aad
test
pop
fisubl
pop
xor
outsb
out
ret
int
pop
repz
add
xchg
xor
lgs
sub
and
pop
sub
pushf
mov
decb
ss
ret
jae
fwait
scas
in
adc
aam
sbb
ficomps
or
cmp
ret
shlb
mov
mov
or
popa
dec
fldt
mov
in
test
ret
inc
scas
mov
mov
pop
arpl
std
jbe
movsb
push
push
push
das
pop
or
aas
or
push
lahf
ret
nop
stos
inc
and
ljmp
addr16
mov
dec
cmp
adc
dec
add
movsb
pop
pop
jecxz
xchg
mov
cmp
pop
xchg
dec
flds
fiaddl
pop
push
stos
fwait
mov
sbb
outsl
and
cvtdq2ps
shl
cmpsl
outsb
dec
xor
mov
aaa
arpl
mov
repz
or
fwait
pushf
mov
std
xchg
or
push
jl
pop
mov
aaa
mov
jb
cmp
popa
lock
movsb
xchg
cmp
lods
in
test
dec
xchg
add
pushf
mov
cmpsl
and
adc
pop
out
mov
flds
inc
and
mov
cld
mov
icebp
scas
in
mov
mov
fbld
adc
aas
negb
jo
mov
outsl
mov
push
ret
loop
fwait
in
xchg
add
and
or
inc
jle
leave
pop
daa
jmp
and
or
mov
daa
fwait
mov
mov
xchg
mov
movsl
sbbb
inc
xchg
dec
into
inc
fs
mov
mov
push
pop
push
ja
pop
out
xor
jbe
imul
mov
sub
mulb
and
nop
mov
cmpsb
or
mov
daa
arpl
xor
aad
xchg
iret
fs
stos
cmp
or
cmpl
testb
sub
pop
inc
stos
movsb
push
add
inc
lcall
shl
inc
int3
adc
rol
and
or
outsb
mov
inc
rcll
pusha
orb
test
xchg
iret
pusha
and
movsl
leave
ret
loopne
cmp
sub
aas
in
or
test
jecxz
cltd
pop
js
movsb
roll
dec
mov
pop
mov
ds
inc
mull
repz
xor
push
push
aad
cli
ds
pop
test
std
movsl
lock
push
outsb
dec
jno
or
xor
shlb
jmp
inc
dec
sbb
pop
js
iret
bound
push
aaa
ret
rcrl
and
roll
pop
mov
es
sub
outsb
mov
bound
adc
aam
mov
cmp
icebp
aas
sub
adc
sbb
enter
shl
icebp
rorb
mov
lret
in
outsl
cmpsl
notl
xlat
mov
mov
sbb
pop
enter
mov
fcmovb
pop
xchg
rclb
lret
lret
mov
dec
xchg
jbe
popf
mov
and
dec
mov
jae
push
cmp
inc
loopne
mov
jp
imul
test
and
fidivl
aaa
sub
test
pop
outsb
cmp
cmpl
roll
in
rcl
jle
sbb
das
adc
xchg
adc
sbb
cs
mov
adc
ret
loope
sahf
lret
das
sbb
fwait
jnp
push
lret
mov
ret
xlat
xchg
and
inc
inc
daa
rolb
cmpsl
pusha
insl
rorb
pop
fsubrs
out
in
sub
jne
out
stos
mov
push
faddl
pop
insl
shrl
jne
daa
adc
enter
mov
adc
aad
jmp
int
jnp
fsubrs
and
mov
in
ss
or
subb
push
lret
dec
dec
ret
sub
scas
shl
push
inc
jae
dec
ja
dec
inc
movsl
and
iret
sarb
mov
jnp
inc
stos
or
lock
xorb
jle
in
nop
mov
loopne
fidivrl
push
ljmp
cmc
sub
adc
dec
stc
fs
add
pop
loope
and
adc
cmpl
addr16
pop
mov
dec
inc
iret
jns
idivb
clc
jns
xlat
add
fcmovb
nop
jo,pt
or
pushl
bound
pop
xor
inc
sbb
sbbl
mov
xchg
inc
into
mov
iret
push
xor
scas
mov
sub
xor
insl
dec
cmp
sbb
popf
dec
pop
decl
cmp
add
mov
pushf
test
lret
sub
ds
inc
das
fs
pop
xchg
xchg
cmp
clc
add
ljmp
adc
sahf
and
mov
cli
vmread
fists
int
push
cwtl
faddl
cmp
or
arpl
push
dec
mov
jnp
cwtl
inc
sbb
xchg
xchg
fimuls
inc
pop
cs
inc
movsb
jle
cmp
test
mov
push
cmp
hlt
adc
pop
leave
lret
sub
bound
adc
adc
in
mov
adc
mov
adc
dec
mov
je
mov
cwtl
cmc
jg
or
idiv
in
hlt
push
outsl
rorl
fildl
je
stos
sbbb
jbe
cmp
mov
lahf
sub
imul
mov
into
pop
mov
xor
sub
dec
mov
rcrb
stos
fdivrs
inc
xchg
sbb
mov
pushf
sbb
mov
pop
xchg
push
call
push
inc
leave
push
pop
xor
add
push
mov
mov
loopne
shlb
mov
jecxz
sarl
or
push
dec
inc
fistpll
lcall
jo
mov
sahf
aas
test
push
mov
jl
pop
stos
xchg
mov
xor
add
mov
scas
scas
out
pop
jle
xchg
mov
pop
mov
mov
out
pusha
into
arpl
shr
xor
popa
pop
add
lds
cwtl
pusha
jmp
icebp
jge,pt
pop
mov
fisubrl
pop
mov
pop
in
inc
jmp
hlt
jno
shlb
dec
fcomi
pop
ret
push
xor
mov
pop
cmp
push
inc
dec
icebp
jno
push
pop
cld
ss
out
out
jp
mov
mov
andl
mov
aaa
adc
out
inc
rorl
clc
das
dec
packsswb
cmp
js
jmp
pusha
sub
jle
aad
bound
not
jnp
inc
inc
xor
jge
or
or
sub
lret
dec
call
iret
ret
xor
movsb
and
cli
xor
mov
jnp
jae
dec
mov
movups
iret
out
mov
xchg
xchg
cltd
push
or
pop
fwait
dec
push
lret
push
adc
loope
sbbl
outsb
mov
or
enter
add
mov
popa
sub
movsl
xchg
jne
mov
and
aas
movsl
push
je
test
stos
xchg
jb
in
fildl
jo
xchg
cld
cmp
in
ret
adc
mov
scas
lods
mov
cwtl
in
sbb
push
mov
push
hlt
daa
cmp
adc
cmp
rcll
pusha
lret
in
fmull
jns
cmp
icebp
sbb
sbb
out
enter
iret
into
pop
cmp
adc
lahf
and
mov
dec
outsb
sbb
shl
mov
pop
add
push
lcall
loopne
ffree
call
sub
int3
sub
ret
dec
test
shr
test
xchg
jl
aad
pop
push
xchg
fsubp
lock
aad
cmp
cmp
icebp
add
mov
scas
mov
ss
jns
stc
pop
mov
and
daa
outsb
scas
cs
sbb
cmc
pop
inc
push
mov
dec
test
test
or
ficoms
leave
xor
pop
pop
popa
scas
in
xorl
sub
sbb
fldenv
pop
dec
fld
mov
popa
out
mov
push
aad
stos
mov
add
ret
mov
sahf
xlat
and
dec
loope
xchg
insb
jge
adc
fsubs
test
aaa
orl
cmpsb
insb
movzbl
sti
shrb
insb
sbb
dec
lahf
or
imul
mov
mov
popa
repnz
in
xor
push
or
pusha
pusha
xor
or
sbb
add
and
mov
stos
inc
andl
cmp
fidivl
push
cmp
fdivl
loop
push
clc
fdivl
push
outsb
loope
push
pop
out
or
cltd
inc
mov
mov
pusha
out
imul
cld
bound
test
xlat
sub
test
push
lock
leave
movsb
xor
nop
sub
je
inc
hlt
xchg
mov
test
sarb
jb
dec
pushf
xor
stc
mov
cmp
sbb
add
adc
arpl
and
mov
ja
lcall
dec
movsl
leave
pop
mov
cmp
andb
push
lcall
out
sbb
mov
xchg
jl
fwait
pop
loope
imul
clc
lahf
shlb
adc
mov
cld
int3
xor
mov
mov
mov
add
sub
scas
jne,pt
test
mov
push
shl
sbbb
pusha
scas
cmpsl
jae
enter
or
mov
push
dec
push
leave
sub
scas
sbbb
aaa
out
sbb
test
and
scas
test
push
jp
adc
gs
out
jecxz
outsb
js
jmp
and
pop
pusha
ljmp
into
cmp
cwtl
jns
mov
out
xchg
movlps
movsl
repnz
inc
mov
sbb
pushf
andb
cmpsl
mov
aam
pop
cmp
cmp
pop
push
mov
xor
push
push
mov
stc
dec
adc
mov
mov
push
test
mov
aaa
pop
mov
in
sar
mov
pop
lahf
xchg
add
adc
aaa
cmp
pop
ljmp
xchg
stos
cmc
mov
jge
mov
sbb
pop
add
dec
pop
dec
pop
es
test
cmc
inc
or
loope
out
or
adc
rorb
push
clc
pop
or
imul
adc
pusha
mov
mov
xor
pop
push
mov
cs
stos
jb
imul
xor
fwait
xchg
dec
push
jmp
fsubl
outsb
fistl
jns
jns
pop
jno
jbe
repnz
clc
adc
cmp
jo
xchg
jmp
fwait
daa
jno
adc
mov
and
loop
ljmp
cmpsl
push
repnz
sbb
push
out
loopne
pop
xor
mov
dec
mov
fwait
movsb
cs
movaps
mov
mov
cmp
nop
shrb
inc
dec
inc
pop
std
cmpsb
fsts
mov
movsb
sbb
push
repz
in
aas
mov
lds
icebp
js
lcall
mov
ljmp
out
cmpxchg
xchg
lret
push
sbb
fcoms
ror
imul
sub
test
push
jmp
addr16
test
ss
divb
lahf
je
imul
jmp
ficoml
loope
outsl
test
jp
cs
xor
test
sbb
sbb
lret
lret
repnz
out
fiadds
outsb
mov
inc
lods
or
shrl
popa
mov
mov
idivb
fdivr
pop
or
or
ret
imul
mov
je
negl
imul
pusha
jle
fnsave
xor
fbld
add
mov
sahf
leave
icebp
xchg
das
sbb
cli
pushl
test
jecxz
roll
jp
icebp
xchg
lea
add
push
push
jmp
pop
inc
mov
lcall
movsl
movsl
push
fisubl
xor
cltd
xor
pop
rcll
dec
les
rorl
inc
mov
out
xor
xchg
or
pop
sub
adc
jecxz
mov
faddp
inc
jae
xchg
xor
inc
mov
cmc
jecxz
out
xlat
loope
adc
movsb
divb
aas
mov
add
push
push
mov
push
rcll
into
div
mov
iret
and
or
mov
adc
testb
mov
ret
cmpsb
sub
dec
and
ret
push
lds
xorl
ret
test
xor
or
cmpsb
bound
iret
dec
jb
insl
jo
leave
mov
fsubs
sub
fsubl
fwait
je
pop
jo
mov
movsl
test
aam
xchg
pop
cmpsb
pop
cmp
mov
jno
xchg
xchg
rolb
sbb
jmp
mov
adc
xchg
das
arpl
loopne
xchg
inc
jno
lret
enter
out
shlb
adc
push
arpl
and
aaa
mov
jp
xchg
and
repz
cmpsl
xchg
mov
in
sub
aaa
scas
leave
mov
cmp
adc
clc
sub
or
mov
cmpsl
popa
cltd
mov
lods
nop
mov
in
fmull
clc
jg
xor
mov
cmpsl
mov
in
inc
pop
push
dec
clc
fs
mov
shlb
ljmp
and
out
push
outsb
fnstcw
adc
ss
incb
fists
mov
adc
sub
pusha
enter
ja
movsb
ss
sub
jo
sbb
mov
mov
inc
xchg
out
adc
inc
jnp
mov
shrl
cmp
push
out
fwait
test
sub
ss
push
mov
call
inc
inc
sub
notl
mov
sbb
adc
cmp
pop
mov
sub
inc
sbbl
pop
outsb
xchg
lds
mov
pushl
fdivrs
mov
je
gs
cmp
adcl
jg
pop
sahf
mov
ja
imul
daa
push
adc
cmp
xchg
sub
in
cmpsb
push
xlat
dec
pop
notl
int3
outsl
inc
add
push
aaa
dec
ficompl
addr16
cmpsl
sahf
aas
jns
ss
std
add
aam
inc
xchg
add
imul
sarl
outsb
or
lret
sbb
mov
fcoml
iret
lcall
ret
sbbl
mov
mov
mov
pop
mov
push
mov
pop
ljmp
mov
xorl
adc
xor
mov
lods
ret
xor
mov
popf
pop
ret
and
scas
cmp
xchg
inc
adc
in
and
sub
push
scas
cmpsb
rcll
inc
inc
xor
add
push
sbb
jg
shlb
stos
dec
mov
mov
leave
mov
mov
arpl
pop
pop
xchg
pop
xchg
mov
out
movsb
sti
fnsave
shlb
cmp
adc
stc
sub
popf
push
ljmp
add
outsb
xchg
decb
dec
xlat
fimuls
and
mov
test
inc
sbb
lock
push
or
daa
fcomi
xchg
mov
fcoms
or
xchg
lret
or
or
mull
js
ret
adc
fldt
xchg
mov
int3
sarl
pop
mov
mov
push
dec
scas
sbb
int3
mov
xor
or
adc
sub
pop
inc
push
lcall
scas
sub
lahf
pop
int3
test
loop
and
dec
testl
loop
fimull
cmp
or
mov
repz
or
insb
ds
stos
jae
mov
imulb
in
jae
sub
movb
insl
sbb
cmp
imul
aaa
jl
dec
lods
mov
push
icebp
out
icebp
jl
add
shlb
mov
int
inc
movsl
push
lods
bound
xor
fstpt
daa
pop
pop
sbb
xchg
nop
push
lea
lcall
adc
add
out
inc
push
pop
into
cli
repz
add
lods
xlat
dec
xchg
int
xchg
aas
jmp
pop
xchg
test
or
ss
mov
mov
in
adc
mov
scas
dec
and
sub
imul
mov
aam
popa
pushf
lcall
stc
insl
mov
xchg
mov
repz
cmp
daa
inc
movsl
in
cmp
fdivp
std
data16
test
test
mov
filds
dec
mov
push
xchg
popa
xor
imul
mov
push
and
fcmovne
imul
xchg
imulb
mov
jge
inc
ret
rcl
stos
std
jae
sti
loopne
dec
mov
fcmove
lahf
mov
lods
pop
sti
push
xchg
pop
loope
pushf
insb
test
cld
vphaddwd
icebp
mov
mov
mov
pop
or
mov
pop
std
push
xchg
shl
out
xchg
jbe
in
testl
push
cltd
fcoms
push
je
add
mov
mov
repz
xchg
dec
mov
lock
sub
jle
repnz
sbb
push
cmpsl
push
fiadds
sbb
loop
std
xor
nop
in
xor
loopne
mull
xor
ljmp
xchg
lcall
mov
in
sbb
sbb
sub
ja
mov
pop
leave
mov
dec
mov
pop
adcl
sbb
add
insl
and
sbb
gs
jb
cmpsl
sbb
shlb
xor
add
jmp
mov
xchg
sti
cmpsb
fs
sti
cmp
notb
mov
lods
daa
rcr
or
rep
les
dec
sahf
aas
test
lret
loope
mov
cmp
test
adc
push
lcall
sbb
add
pop
daa
shll
jae
xchg
clc
adc
xchg
push
mov
std
adc
mov
insb
adc
fwait
je
sbb
mov
jge
jb
xchg
imul
push
jl
cmpsl
aaa
dec
mov
cmp
cltd
pop
push
cmp
mov
sbb
xchg
or
push
pop
mov
mov
sbb
call
jg
pop
mov
lahf
jmp
sti
pop
daa
push
jp
cmp
or
push
jbe
jg
mov
stos
add
fcoml
nop
into
imul
test
mov
xchg
cmp
popa
icebp
cwtl
sbb
ret
jb
pop
mov
mov
mov
mov
dec
vandpd
mov
mov
es
mov
adc
xor
scas
bound
jb
mov
jge
add
fmuls
sub
xor
mov
cmpsl
jecxz
xchg
cmp
and
ljmp
inc
sub
and
sbb
sbb
daa
xchg
inc
jno
pop
andl
incl
xchg
cmp
sbb
pop
scas
pop
and
sbb
icebp
adc
xchg
mov
mov
fisubl
add
mov
add
insb
sub
movsb
xor
int
cmp
xchg
scas
dec
jge
xor
ds
add
xor
mov
jp
sti
aad
aam
rorb
sti
in
stc
add
rclb
add
lods
stos
fwait
subl
pop
pop
push
jmp
cmp
aad
jae
push
lds
sub
sti
and
sbb
adc
push
xchg
xchg
les
xor
mul
sbb
mov
mov
pop
inc
sub
push
dec
add
mov
and
lea
mov
sub
inc
dec
inc
or
lea
mov
add
call
dec
dec
sub
add
lea
mov
sub
dec
inc
sub
sub
lea
add
inc
dec
add
sub
lea
inc
inc
dec
sub
call
sub
lea
movsbl
dec
call
dec
inc
dec
and
call
lea
push
mov
sub
inc
inc
inc
call
and
lea
mov
add
inc
inc
call
inc
pop
xor
lea
mov
add
add
pop
inc
inc
pop
sub
xor
lea
mov
pop
inc
dec
sub
inc
and
lea
mov
sub
pop
inc
dec
pop
sub
xor
mov
lea
mov
call
sub
sub
inc
add
ret
xor
lea
push
mov
sub
push
add
sub
push
dec
and
push
lea
imul
push
inc
inc
mov
sub
dec
push
or
ret
push
lea
push
mov
add
push
dec
inc
push
add
call
and
lea
sub
dec
add
inc
or
lea
mov
sub
inc
add
add
add
lea
inc
jmp
sub
mov
dec
sub
mov
lea
movzbl
inc
inc
inc
dec
add
add
lea
add
imul
dec
movzbl
sub
inc
sub
and
lea
imul
dec
add
inc
inc
add
mov
or
lea
mov
dec
dec
inc
cmp
jb
inc
xor
xor
lea
mov
dec
mov
dec
sub
inc
add
add
lea
movsbl
dec
inc
mov
inc
inc
cmp
jb
or
mov
lea
imul
xor
sub
inc
xor
dec
add
pop
and
lea
test
jbe
imul
inc
inc
inc
inc
add
lea
imul
add
dec
dec
add
and
lea
dec
sub
inc
inc
add
xor
lea
mov
inc
and
sub
dec
mov
add
add
movzbl
lea
imul
add
add
inc
and
add
inc
mov
add
lea
mov
imul
dec
mov
dec
inc
mov
add
sub
lea
movzwl
inc
inc
dec
jne
dec
mov
dec
sub
lea
imul
dec
add
dec
dec
sub
lea
mov
imul
dec
inc
inc
add
or
lea
movswl
mov
inc
dec
test
jbe
inc
inc
or
lea
imul
dec
inc
inc
add
and
lea
mov
dec
dec
dec
inc
add
add
lea
mov
dec
sub
and
add
inc
mov
add
lea
movzbl
mov
jmp
inc
add
pop
ret
push
inc
or
lea
mov
dec
add
dec
dec
sub
or
lea
imul
inc
add
inc
dec
add
lea
mov
inc
push
dec
inc
push
dec
or
lea
mov
dec
inc
inc
dec
or
lea
movsbl
sub
push
inc
call
call
dec
dec
and
lea
imul
inc
inc
inc
dec
add
lea
mov
sub
sub
dec
inc
sub
lea
mov
inc
dec
add
sub
or
lea
mov
sub
cmp
je
dec
add
add
add
lea
imul
dec
dec
dec
add
and
lea
mov
add
sub
dec
inc
and
lea
mov
dec
dec
inc
inc
xor
lea
mov
add
inc
dec
dec
add
lea
mov
add
inc
inc
add
or
lea
movsbl
sub
add
dec
dec
add
lea
mov
sub
add
dec
dec
sub
lea
mov
ret
add
inc
pop
dec
ret
push
add
push
and
lea
mov
mov
inc
push
dec
push
inc
push
add
sub
lea
mov
add
call
jmp
dec
push
dec
dec
xor
and
or
lea
mov
mov
inc
mov
inc
dec
test
je
dec
or
lea
mov
dec
dec
inc
dec
or
mov
lea
mov
add
add
sub
sub
or
lea
repnz
mov
inc
add
inc
jmp
dec
inc
xor
lea
mov
dec
sub
dec
add
add
lea
mov
pop
pop
ret
push
inc
inc
dec
inc
add
lea
imul
dec
add
inc
inc
or
lea
mov
inc
dec
inc
dec
sub
lea
mov
inc
add
sub
dec
or
lea
imul
pop
ret
sub
dec
mov
add
inc
mov
dec
sub
mov
lea
mov
mov
add
inc
xor
dec
inc
mov
xor
lea
inc
mov
dec
inc
dec
inc
sub
cmp
jb
lea
push
mov
inc
push
dec
add
push
inc
or
mov
lea
mov
xor
dec
inc
xor
sub
inc
xor
xor
lea
push
movzbl
dec
xor
inc
jmp
out
dec
sub
mov
int3
push
aad
inc
add
mov
mov
cwtl
imul
pop
into
leave
inc
scas
xor
mov
mov
mov
mov
icebp
mov
sbb
in
add
jns
pusha
bound
cmovg
inc
pop
insl
popa
gs
xchg
aad
pushf
xchg
xchg
xchg
mov
push
loop
xor
cmp
mov
imul
sub
cmpsl
cli
xchg
and
inc
inc
jmp
lods
and
mov
mov
mov
or
push
into
daa
jno
mov
mov
inc
inc
loopne
pop
dec
cmp
stc
mov
cmp
mov
jp
pop
xlat
in
cmpsl
push
outsb
push
hlt
mov
and
mov
or
dec
push
and
mov
pop
in
push
jge
lcall
aad
cmpl
int3
or
popa
xor
cmp
mov
add
lret
bound
jbe
sbb
push
xchg
and
mov
push
sahf
cmp
shrb
cmp
lods
lock
pop
jne
push
in
cmc
pop
push
sbb
testl
out
cld
push
cmp
xor
cltd
mov
insb
repz
xor
arpl
jno
fildll
imul
jno
fs
jl
jecxz
cmp
push
and
or
in
jnp
bound
ss
inc
mov
jae
mov
ret
pop
adc
push
or
lea
mov
cmp
sub
fcomi
mov
arpl
push
mov
cmpsl
fldt
sbb
cmpsl
outsb
mov
negl
mov
arpl
hlt
sub
nop
addl
mov
or
leave
xor
daa
lcall
mov
xchg
push
loope
rclb
cmc
push
aam
cmp
andl
add
jp
jle
rcrl
jle
lea
inc
daa
cmp
test
and
cwtl
lods
cmp
jl
iret
pop
xchg
and
pop
inc
cmp
bound
popa
addr16
sub
imul
adc
mov
fstp
jns
je
cmp
idivb
mov
dec
movsb
inc
aas
fsubrl
fldl
sub
jmp
lahf
push
decl
lods
sbb
dec
fsincos
xchg
jno
dec
pop
mov
xor
cmp
fmuls
pushf
dec
ficomps
test
call
in
cmp
mov
jno
adc
and
adc
push
adc
jnp
and
inc
ljmp
xlat
mov
test
in
mov
mov
bound
push
iret
inc
mov
or
hlt
cltd
pop
jp
push
xlat
sbb
jp
add
lods
lahf
je
hlt
clc
leave
cld
gs
ds
add
dec
and
out
dec
push
jns
mov
mov
xor
mov
cmpsl
flds
jb
lods
les
das
lcall
leave
pop
lret
cmp
pusha
jno
cmc
pop
fisttpl
xchg
adc
dec
jp
xlat
pop
xchg
aad
xchg
mov
jmp
clc
insb
xchg
daa
hlt
pop
shll
sahf
hlt
sbb
fldt
shll
mov
xor
cmp
lods
sbb
rcrb
in
adc
xor
insb
aad
sbb
pop
dec
add
mov
sub
mov
jp
daa
jmp
and
ret
or
mov
xor
mov
arpl
pop
sbbb
movsl
arpl
push
push
add
in
test
pop
cltd
clc
mov
pop
fbld
into
push
pusha
aaa
xor
data16
scas
shlb
push
push
sub
fcmovbe
and
mov
shll
lods
inc
cltd
jnp
adcl
mov
mov
int3
fwait
jg
lret
adc
mov
fwait
push
add
mov
cmpsl
bound
je
xor
das
mov
insb
xor
je
cwtl
cmp
lods
pop
adc
inc
mov
ss
stc
outsb
sub
jne
out
sbb
iret
mov
push
cwtl
call
rcrl
clc
jge
sub
inc
loope
push
movsb
inc
lock
outsl
stos
dec
loopne
xor
inc
mov
cld
sbb
push
out
mov
ret
shrl
add
jecxz
adc
pop
pop
lock
push
push
mov
fildll
dec
push
movsl
xchg
imul
push
call
mov
sbb
jle
adc
pusha
enter
cmc
rorb
fwait
add
shlb
lock
cmc
rclb
fcompl
cld
cmp
xor
jl
mov
aad
push
mov
dec
add
adc
or
scas
sbb
ss
and
sbb
dec
das
ss
pop
or
add
imul
and
fisubrl
adc
push
scas
lea
adc
fwait
mov
aas
ja
shlb
ss
jae
les
stos
push
add
jbe
mov
pop
jge
out
push
jnp
mov
mov
fsubrl
or
cmp
push
cmp
pop
loop
pop
je
pop
fwait
scas
mul
xor
leave
shrl
pop
int3
rcrl
pop
fistpl
js
push
sub
add
lods
into
mov
inc
pop
negb
push
jle
int3
adc
xchg
mov
adc
inc
das
mov
gs
rcrb
dec
lods
jno
inc
adc
rcrb
decl
pop
mov
insb
inc
lock
jnp
push
pop
or
add
addb
jbe
sub
inc
jmp
mov
rclb
das
jecxz
pop
and
fldenv
dec
push
repz
dec
sahf
into
testb
sahf
jae
pop
movsb
test
pop
rclb
push
push
mov
lret
jecxz
pop
jge
add
leave
xchg
sbb
jne
xchg
mov
and
mov
hlt
gs
mov
popa
and
pop
popa
aaa
rcrl
lds
cmp
adc
inc
dec
cmc
cmpb
inc
cwtl
sub
in
mov
fwait
xor
cmp
pushf
and
lahf
sub
jecxz
fcomi
and
pop
sub
cli
fcomps
out
je
mov
jne
loop
sub
xor
inc
or
lahf
aaa
mov
add
call
ja
cmp
inc
scas
mov
fdivs
cmp
dec
das
bound
lock
mov
mov
aam
stos
rcl
xchg
and
jno
xorl
popf
in
cli
and
inc
and
sub
pop
in
stc
test
xchg
push
cmp
inc
cltd
jno
insb
mov
rcll
dec
dec
lahf
jl
loope
adc
cmp
jae
test
pop
inc
xchg
jp
dec
xor
and
mov
loop
adc
lcall
sbb
or
inc
out
out
push
push
mov
or
enter
in
je
mull
jecxz
jo
iret
shl
xchg
jle
add
iret
test
fstpl
mov
cmpsb
stc
add
cwtl
jo
fs
xchg
or
stc
ficoms
cmp
shl
mov
adc
divb
out
jmp
pop
pop
push
pop
xchg
scas
sbb
sub
out
lahf
das
lea
loope
xor
mov
push
icebp
into
or
mov
mov
sbb
push
daa
xchg
mov
inc
mov
adcb
lcall
shrb
dec
mov
setno
pop
sbb
aas
cmp
push
mul
cmp
out
jns
cmp
cmp
addr16
mov
jg
jnp
test
test
inc
or
insb
stos
adc
cmpsl
aaa
fldt
lock
mov
mov
mov
jecxz
sbb
ret
dec
mov
js
mov
test
popa
popa
jne
add
movsl
pusha
ret
shl
lds
add
jecxz
cltd
out
mov
je
dec
mov
jle
lds
es
rorb
mov
xor
or
pop
movsl
in
stc
into
jp
lret
mov
sbb
mov
and
addl
iret
xlat
fcmove
dec
out
inc
dec
mov
imul
cmpxchg
fisubl
imul
xor
call
aam
repnz
sbb
add
xchg
mulw
dec
sub
inc
int3
xchg
mov
outsl
add
outsl
mov
pop
lods
sbb
cli
sbb
testl
jmp
loopne
out
jl
xor
outsb
jge
aad
xchg
fistps
mov
test
xor
loope
jp
push
add
mov
add
aam
fmuls
loopne
aas
push
and
gs
xlat
loope
xchg
or
aad
fcomps
es
jmp
jns
es
test
rolb
scas
nop
push
xchg
push
mov
mov
push
jae
add
pop
sub
inc
fxch
mov
fbstp
stos
push
ret
dec
movswl
or
fdivs
sub
and
add
push
mov
or
fwait
mov
pop
lahf
int3
or
hlt
pop
push
xor
daa
aam
ljmp
lahf
mov
cwtl
out
mov
xchg
cmpsb
xchg
mov
test
push
xorb
in
or
out
xor
mov
cmp
inc
es
popa
cmp
push
rorb
movsb
inc
cmpsb
fs
xchg
lods
clc
sub
mov
push
popa
in
mov
shl
pop
rorl
mull
add
sarl
in
push
lcall
cmp
cmp
pop
or
sbb
daa
or
lret
js
push
push
lea
mul
push
imul
pop
leave
out
rcll
repz
xchg
movsl
push
hlt
test
pop
outsb
test
xor
ds
or
and
xchg
cmc
jmp
test
jmp
ja
ret
fiadds
sub
mov
cltd
fmuls
mov
push
push
aam
out
jle
xor
sbb
arpl
mov
pop
mov
inc
push
dec
jae
ss
stos
and
mov
shl
mov
mov
test
mov
mov
mov
loop
out
mov
cmp
jmp
cmpsb
loop
or
insb
adc
adc
cli
jbe
xchg
popl
push
fidivrl
cmp
sahf
std
fidivrl
sub
jo
push
dec
pusha
into
rcrb
cli
shr
pop
hlt
sbb
in
call
mov
hlt
xor
and
insl
test
es
repz
outsb
loope
sbb
push
aam
imul
sub
push
mov
push
insl
xor
xor
enter
mov
std
lods
orl
mov
add
pop
arpl
add
fisttps
ljmp
pop
gs
inc
pop
mov
pushf
hlt
cmpsb
and
jecxz
dec
mov
dec
lods
mov
inc
cli
push
adc
fwait
xor
in
dec
cmp
stc
xadd
and
mov
mov
nop
jmp
push
dec
jno
dec
insb
sti
ret
pop
cltd
pop
ret
imul
shrb
bound
fs
mov
cmp
push
jae
fwait
add
pop
shrb
movsb
or
xor
adc
sub
js
inc
dec
int3
ds
mov
fucomip
inc
subb
mov
dec
imul
xlat
pushf
ds
pop
in
pop
lock
subb
scas
rcll
cmp
xchg
xor
jl
bound
stos
jne
xchg
xchg
adc
inc
inc
pop
out
cld
loop
fsub
or
or
push
out
loop
fimuls
lods
outsl
jo
in
in
push
cmc
movsl
leave
inc
shrb
pushf
in
imul
shlb
mov
jbe
mov
mov
cltd
stos
insl
sarb
sahf
int
arpl
sub
loop
push
xor
and
sub
mov
jle
add
insl
xchg
cmpb
and
xchg
ja
sub
fidivrs
sti
push
cld
add
or
pop
fsubs
push
loop
adc
fists
cwtl
jg
dec
sbb
cmpsb
gs
ret
popa
aaa
in
jecxz
fisttpll
hlt
ja
xor
dec
mov
repz
les
leave
mov
addr16
jae
repz
cld
test
shlb
aad
adc
neg
sub
call
inc
fiaddl
testl
testl
outsb
jmp
leave
hlt
popa
xchg
leave
cmc
cmp
imul
test
mov
fistps
ljmp
push
xor
repnz
jle
cmp
inc
jbe
sub
es
push
dec
xchg
popf
inc
ror
xchg
jle
in
std
cmp
xor
sbb
fbld
dec
push
out
mov
sar
pop
adc
and
sbb
or
je
fstp
fs
outsl
loopne
cwtl
pop
lret
flds
push
jg
lret
cmpsb
outsl
push
inc
sbb
jnp
popa
aaa
or
add
fildl
jg
insl
push
fisubrl
mov
push
jns
push
mov
pop
shld
and
xor
add
cwtl
mov
shlb
arpl
xor
mov
adc
and
sub
add
stc
jl
lea
xchg
add
ficoms
orb
aad
adc
sahf
test
pop
xchg
dec
pushf
into
xchg
push
dec
imul
fwait
sbb
adc
lock
or
push
cld
xor
push
xchg
mov
jnp
jge
jne
imul
int3
mov
adc
in
ror
adc
icebp
lds
les
cmc
dec
jmp
mull
pop
ret
xor
roll
out
scas
pop
push
fwait
pop
pop
loope
ret
adc
jb
jge
sub
xor
shl
adc
xor
out
aaa
or
mov
push
imul
movlps
jecxz
lea
js
cmc
negb
insb
call
xchg
sbb
iret
dec
clc
add
test
xor
xchg
int
xlat
imul
data16
shrl
mov
and
push
xor
jle
mov
push
outsl
dec
cli
lret
stos
lret
cmpb
inc
inc
or
and
cmp
fcomi
nop
add
ret
pop
mov
sub
mov
add
xor
cmpb
jnp
ret
dec
xchg
aam
mov
int
jns
andl
es
and
xchg
fsubl
xlat
rep
bound
popa
repz
jae
and
xor
arpl
out
lahf
mov
dec
sub
sbb
psubb
push
mov
mov
daa
stos
popf
push
xorb
sub
adcl
and
stc
sbb
repz
scas
adc
push
and
repnz
jge
push
mov
nop
inc
xor
push
and
adc
sub
mov
shrl
divb
cmpsl
in
pop
xchg
es
inc
scas
sbb
adcl
into
jmp
shlb
ds
sti
mov
lret
mov
js
cmp
xor
mov
inc
aas
xor
pop
push
mov
mov
xor
lahf
inc
fisubs
sbb
pop
or
xchg
pop
lahf
jns
jle
or
jae
js
dec
jbe
or
mov
jns
lcall
pop
cmp
rorl
fcoml
out
adc
je
idivl
pop
cltd
xchg
les
cmpsb
fmulp
xchg
cmc
adc
out
mov
pop
xorb
dec
cmpsb
mov
insl
insb
popf
sbb
add
xor
jp
or
xor
stos
popf
cs
xchg
inc
insl
pop
mov
push
mov
pop
mov
xor
jae
in
push
mov
idivb
imul
xor
in
repz
mov
pop
mov
jp
outsl
scas
stos
fwait
leave
add
mov
cmp
adc
xchg
mov
aad
mov
push
pop
into
inc
int3
nop
add
arpl
dec
and
and
add
and
clc
cmp
mov
inc
dec
jno
std
mov
push
dec
pop
rclb
sub
push
push
cli
jo
fdivrl
mov
or
roll
and
xlat
cmp
mov
js
dec
or
sahf
cltd
ja
shlb
rolb
or
mov
mov
mov
aad
jno
push
addl
out
andl
int
cltd
insb
dec
in
adc
lods
dec
movsl
sub
mov
js
cmc
scas
adc
sub
pusha
adc
fwait
mov
ret
lods
and
data16
mov
dec
cli
xchg
sub
xor
xchg
not
cld
or
jl
xor
jl
pop
cmpsl
xchg
mov
gs
push
sahf
rcll
fstl
push
lcall
fcomip
and
rcll
rclb
movsl
mov
or
mov
cmpsb
xchg
outsb
scas
daa
sbb
push
or
vpsubw
fwait
mov
push
in
mov
testl
shlb
cmp
faddp
nop
xchg
or
sbb
dec
cmp
mov
mov
int3
jmp
dec
ljmp
enter
inc
in
sahf
stc
notl
daa
mov
mov
jmp
in
or
sbb
and
mov
xor
sub
add
cmpsb
xchg
mov
mov
mov
or
movsb
sub
fists
jno
scas
xor
cmpl
insb
pop
xchg
xor
mov
popa
sahf
mov
push
test
push
push
ret
fnsave
int
sbb
fstpt
push
rolb
fdivrl
mov
insl
adc
adc
stos
mov
push
push
jp
xor
xchg
dec
popf
fwait
scas
filds
inc
subb
inc
std
iret
xchg
sbb
inc
mov
fsubl
fxch
adc
fwait
ret
cmp
movsl
add
pop
mov
fcompl
xor
pop
sahf
xor
hlt
cmp
sbb
pop
in
push
rorb
out
and
cmpsl
lea
mov
jne
xchg
sti
inc
jmp
fwait
pop
sbb
mov
in
xchg
jg
push
les
pop
xchg
push
imul
cltd
or
push
test
stc
xlat
in
inc
cltd
jnp
in
add
inc
sub
out
add
adc
xchg
xor
addr16
test
negl
xchg
out
leave
stc
ret
outsl
clc
loop
jns
int
push
stos
test
jae
cmpb
cmpl
sub
test
mov
cmp
loop
mov
test
mov
cmp
mov
push
cmpsl
and
mov
adc
cwtl
mov
cmpb
orl
pop
adc
iret
pop
pop
imul
sbb
or
mov
or
addr16
imul
pop
lahf
repz
sbb
addr16
test
xchg
add
aaa
nop
pop
insl
insl
add
mov
jg
lret
daa
add
and
stos
bound
cs
pop
addr16
movsb
ret
dec
push
repnz
stc
mov
xor
sub
mov
call
mov
push
incb
xchg
add
mov
or
outsb
ljmp
push
out
mov
adc
call
test
mov
notl
mov
jne
cmp
xor
xchg
scas
hlt
fisubrl
movsb
gs
and
inc
xlat
mov
out
test
sahf
push
rorb
jnp
or
lcall
add
pop
repnz
hlt
ja
xchg
outsb
shrl
jnp
push
insl
daa
sbb
mov
out
movsl
push
aad
dec
or
lahf
sbb
push
push
push
int
jmp
pop
sbb
cmp
into
mov
or
mov
jnp
leave
ja
gs
cmpsl
addb
mov
xor
dec
aas
lods
movb
enter
loopne
pop
movsb
cmpsb
cmp
ja
sub
inc
fdivl
mov
adc
mov
jge
ljmp
adc
imul
andl
test
dec
pop
lock
pop
jo
push
and
mov
pop
xor
lods
pushf
pop
cli
hlt
xor
jg
andb
jp
mov
push
aaa
lret
test
inc
push
xor
jnp
in
std
push
dec
aad
fcoms
fsubrs
ret
push
xor
xchg
or
sbb
push
inc
xchg
inc
cmp
mov
cmp
in
push
pop
out
sahf
ficomps
and
or
not
xchg
out
push
xchg
lcall
imulb
vcvtdq2ps
jecxz
inc
sub
cmp
ja
or
push
dec
jg
pop
dec
loopne
roll
sarl
call
jo
cwtl
into
pop
or
adc
ja
dec
or
shlb
and
jmp
aad
rcrl
push
iret
jecxz
addr16
dec
sti
cli
jnp
mov
sbb
xchg
pop
xlat
aas
shl
dec
and
cli
add
lret
stos
mov
inc
and
jnp
jbe
mov
push
sbb
imul
cmp
popa
int3
testl
leave
adc
subb
jge
test
dec
pop
sahf
or
cwtl
fisttpl
xor
imul
add
je
cmp
cmp
dec
insb
ss
mov
inc
dec
mov
sbb
pop
jge
or
push
and
push
mov
push
cmpsl
in
xor
add
vpsubusw
pop
adcl
add
fildll
push
sub
in
icebp
mov
and
ljmp
stos
lret
mov
mov
xchg
cld
loopne
xchg
mov
push
jns
pop
jmp
adc
xchg
aaa
xchg
fidivrl
dec
call
inc
mov
jae
scas
adcl
adc
push
inc
fwait
cmp
and
fstps
push
lret
sbb
dec
shrl
mov
imul
sti
arpl
call
in
push
data16
jmp
xchg
jle
fucom
pop
mov
cmpsl
add
cmpsb
pusha
push
les
dec
mov
mov
xor
adc
loopne
push
inc
cmp
jb
push
mov
push
dec
out
jmp
pop
shll
xchg
xor
xor
adc
sub
push
lahf
cmp
cmp
jns
ja
push
cmpsl
push
or
ss
add
call
jne
xchg
sti
push
xchg
xor
ret
int3
ds
les
mov
cmc
or
push
testb
sbb
adc
insl
test
xchg
cmpsl
xchg
lret
gs
enter
idivl
or
insb
jmp
mov
dec
xchg
and
lds
roll
cmc
repnz
add
cmp
pop
shll
ljmp
sbb
jp
inc
nop
xor
add
adc
cli
scas
pusha
xor
sbb
xor
push
sti
xlat
pop
mov
push
and
pop
das
in
mov
sub
add
ljmp
push
mov
inc
mov
xor
lods
loope
out
dec
pop
or
ljmp
daa
inc
xchg
and
add
insb
icebp
loope
push
loope
adc
push
jb
test
jl
fidivrs
lods
jo
mov
fmul
ficomps
adc
int
iret
xchg
sub
loopne
ljmp
outsb
mov
lret
xor
add
pop
mov
mov
push
shl
or
hlt
ror
bound
push
xchg
out
fdivp
push
arpl
adc
xchg
mov
ja
das
mov
xlat
cmpsl
pop
pop
lock
shlb
cmovns
test
xchg
add
cwtl
aam
jno
mov
scas
inc
cmp
mov
xchg
imul
lea
out
xchg
clc
xorl
cli
xchg
sub
xchg
xor
in
mov
or
iret
sbb
je
stos
cli
mov
aas
pushf
xor
loopne
aad
cmpsb
mov
enter
xor
test
inc
sbb
daa
repnz
sub
stc
mov
adc
sbb
iret
sub
xlat
push
dec
dec
add
and
add
or
outsl
jp
mov
int
inc
mov
cmc
add
sti
leave
sbb
in
leave
adc
ljmp
mov
pop
hlt
push
jnp
xchg
xor
test
ja
rcrl
into
rol
sahf
ljmp
mov
mov
xchg
ret
cmp
hlt
hlt
xchg
shlb
shll
xor
push
push
pop
pop
popf
pop
arpl
push
pop
insl
push
mov
push
xorb
mov
scas
and
test
xchg
fwait
push
enter
inc
cmp
jl
and
jbe
xor
inc
loope,pt
loope
mov
int3
test
adc
into
incb
sub
fsubl
dec
jno
mov
inc
bound
push
cmpb
lcall
push
pop
or
jne
iret
imul
ljmp
fchs
aas
cltd
jg
aaa
add
mov
sub
sti
out
mov
mull
lcall
test
movsl
aam
push
cld
and
ret
loopne
je
addl
ja
or
push
xor
les
or
leave
jmp
je
and
fmull
or
addb
xor
mov
iret
pop
and
mov
fsubrl
xor
data16
gs
push
cmp
dec
dec
arpl
and
ljmp
xor
cld
adc
xchg
sti
scas
ljmp
stos
loopne
loope
test
xchg
arpl
mov
dec
and
mov
push
mov
pop
mov
fnstcw
lret
aas
test
addr16
xchg
ja
pusha
lods
insl
mov
lods
test
adc
push
sub
xor
or
xchg
push
or
mov
pop
sahf
push
aas
insl
ljmp
lods
mov
out
adc
out
mov
mov
pop
jp
ds
xchg
lock
sbb
popf
mov
jno
shr
hlt
sub
mov
sarb
and
jns
xchg
ja
xchg
nop
jae
lcall
cmp
outsb
pop
adc
insl
xor
fmuls
imul
ljmp
push
xchg
ret
leave
sar
nop
fldenv
movsl
insl
stc
push
xchg
jge
jl
push
push
and
std
push
xchg
sub
call
pop
push
rcrl
jecxz
xlat
std
test
lea
shlb
mov
mov
mov
inc
jmp
cmpsl
sub
ds
push
jb
test
ss
or
sub
loop
mov
fbld
adc
scas
lods
ss
xor
sbbl
pop
xor
mov
add
adc
xorb
test
push
cmpsl
testb
pop
inc
mov
mov
pushf
fwait
adc
jmp
mov
inc
jle
xor
mov
xchg
push
add
out
inc
xchg
xchg
fsubrp
pop
adc
shrb
sbb
lods
in
mov
jle
push
outsb
jecxz
push
add
dec
push
out
fdivr
xor
xchg
gs
int3
jge
rorb
inc
lcall
inc
mov
adc
xor
cmp
into
sub
cmp
ret
repz
sub
lock
inc
mov
out
mov
mov
or
mov
mov
xor
push
mov
xchg
lahf
outsb
sbb
and
push
dec
into
jns
dec
cmpsb
outsb
div
rcl
jno
xchg
addb
jns
cmp
sbb
jecxz
mov
loope
jmp
jb
adc
pop
mov
xchg
adc
divl
popf
mov
call
incb
movsl
in
out
xchg
out
dec
movsb
out
add
ja
fld
clc
nop
fisttpll
ret
sbb
jno
repz
das
mov
std
cmp
adc
xchg
push
in
jnp
sbb
mov
jo
mov
adc
icebp
lret
fstpl
mov
xor
push
stc
jl
inc
std
stos
rcrl
adc
xor
pushf
fdivrs
or
push
inc
imul
lods
inc
sbb
sbb
mov
push
aam
inc
test
and
mov
jnp
pop
mov
xor
pop
sub
mov
dec
or
notb
popf
push
pop
or
loopne
setle
test
ret
adc
inc
adc
dec
int3
test
subl
jns
subb
cmpsb
cmp
cmpsb
cmc
mov
shlb
loope
push
push
mov
inc
and
and
aad
subb
mov
or
mov
xchg
lods
mov
or
rcll
xchg
addl
xor
lock
push
sbb
pop
in
add
sub
mov
xchg
jge
dec
divl
lret
lahf
xorl
std
mov
lahf
shrl
std
call
pop
push
add
sub
mov
and
hlt
or
rcrb
mov
in
lock
and
mov
cmpsb
add
ss
push
int
inc
xchg
test
pop
and
jl
popf
add
mov
xor
and
cmp
das
mov
mov
mov
daa
mov
mov
lds
into
andb
cmpsl
dec
xlat
dec
push
loop
jg
mov
sar
jno
cmpsb
mov
into
or
pop
add
xor
jae
sub
rol
imul
lea
dec
push
xchg
in
sub
lods
xchg
and
sbb
adcb
addr16
iret
out
jecxz
pop
push
add
jle
add
lcall
fidivs
or
mov
mov
arpl
sub
into
xor
pusha
std
inc
xchg
aas
xor
sbb
pop
hlt
ret
sbb
jp
into
in
or
jae
mov
mov
mov
movl
mov
jo
adc
pop
push
push
jb
addb
and
fwait
push
lds
add
jl
mov
jne
ss
daa
xor
int
mov
aas
inc
jmp
pop
jb,pn
cld
aad
mov
mov
ret
outsb
jae
add
in
adc
sbb
inc
pop
rclb
test
outsb
rol
push
shrb
stos
outsb
rcrl
les
and
fstl
jns
pop
push
es
sarl
fmuls
hlt
sahf
sbb
dec
movsb
adc
std
add
loope
dec
mov
leave
sbb
dec
repnz
xor
cmp
mov
shl
adc
push
or
cld
dec
and
lret
sti
adc
data16
ss
push
fsub
cld
scas
movsl
fsubp
dec
sbbb
mov
test
push
cltd
mov
cli
push
and
jb
insb
lds
push
loop
aam
shlb
cmpsl
roll
jmp
jle
pop
jl
and
jle
pop
addb
jg
jmp
scas
test
add
mov
cmpsl
inc
shll
enter
das
fwait
sbb
iret
cli
pop
xchg
sbb
aam
cwtl
and
jge
ds
adc
loop
push
or
adc
xchg
loope
lfs
enter
xchg
shll
dec
bound
sub
daa
jl
inc
inc
adc
push
push
movsb
sub
mov
sub
mov
cmp
mov
in
fisubrl
inc
jno
or
dec
cmp
lds
fsubrl
sahf
mov
jnp
loope
and
mov
dec
jge
inc
in
cmpsb
lods
inc
loopne
rolb
or
and
and
clc
fistps
sbb
mov
inc
movsb
xchg
nop
jg
xor
dec
imulb
inc
les
push
push
and
jmp
ja
test
xchg
cltd
popf
push
int3
mov
push
test
je
push
xchg
or
sahf
or
test
repnz
pop
fwait
dec
mov
jo
fnstsw
push
inc
mov
sahf
rol
mov
lcall
add
cmpsl
xor
mov
jo
add
sub
addl
xchg
daa
push
inc
xchg
into
fcompl
sbb
jg
adc
mov
mov
pop
out
add
loop
subb
mov
sahf
xor
rol
jne
mov
gs
lret
pop
icebp
ja
add
mov
jbe
mov
xor
jge
cld
adc
enter
mov
icebp
pop
fsubs
scas
in
stos
pop
bound
mov
push
sbb
add
inc
cld
xchg
fidivrl
push
fsub
jmp
and
cmpsl
push
mov
jb
pop
js
add
pusha
mov
or
pop
jne
cmpsb
rcl
push
and
repz
rclb
adc
bound
xchg
pushf
daa
insl
addr16
fwait
and
dec
inc
mov
xchg
movsl
cmp
pop
push
sahf
ja
test
mov
or
outsl
sahf
in
jg
sub
aam
movsb
lahf
cmp
dec
outsl
call
adc
xchg
inc
and
jae
popa
ret
push
ret
adc
out
adc
data16
pop
sbb
sbb
or
mov
cmp
sbb
in
and
imul
imul
lds
outsl
dec
inc
mov
idivl
jno
dec
sub
ss
movsb
rclb
adc
push
push
ret
sub
cmp
mov
sub
mov
sti
movsl
leave
mov
pop
rorb
push
and
in
ja
and
add
lds
fstpt
icebp
xchg
icebp
ret
aas
xchg
mov
inc
xchg
dec
out
outsb
jle
iret
test
cmp
cli
orb
push
push
shrl
clc
icebp
fiaddl
add
aad
adc
cmpsl
mov
and
dec
test
push
or
sbb
xchg
in
loope
add
xchg
push
sbb
fisubs
call
and
mov
and
adc
dec
or
cmp
test
adc
xor
pop
add
jo
les
es
inc
xor
dec
fisubrs
lcall
jmp
in
lods
jecxz
xchg
into
sub
ss
sub
cmp
scas
and
lcall
cmp
push
lahf
ficomps
or
mov
sbb
sahf
fldt
loop
lret
sbb
aas
jne
mov
adc
js
insb
mov
mov
scas
roll
xchg
cmpsl
outsb
test
mov
sbb
addr16
adc
jnp
loop
and
jo
cwtl
outsb
jb
push
jg
xor
fs
ds
decl
imul
dec
stos
test
out
xchg
push
mov
rcrl
mov
pusha
and
mov
dec
les
scas
mov
daa
neg
mov
xchg
sbb
mov
shll
shll
gs
lret
cmp
push
add
sub
and
mov
ret
cmpsb
mov
fstps
adc
arpl
jge
or
in
jne
inc
mov
push
outsl
fidivs
adc
scas
mov
loop
cmpsl
push
fldcw
stc
stc
mov
jecxz
mov
adc
pop
jge
fisubrl
inc
leave
nop
testb
inc
mov
loopne
jp
test
cwtl
insl
fs
fsubs
insl
daa
sti
stos
ret
pop
ss
adc
xchg
mov
or
mov
push
stos
adc
dec
sub
notl
sub
fstpt
mov
jmp
ljmp
leave
rolb
iret
xchg
add
jns
fmull
add
in
in
cmp
sbb
repnz
into
push
sub
push
js
int3
jmp
xchg
pop
not
out
repz
pop
repz
test
pushf
arpl
sub
mov
and
sub
pop
push
cmpsl
push
not
dec
int
test
dec
inc
in
pop
pop
stos
lcall
and
fidivs
sub
dec
dec
dec
mov
cmp
inc
popl
je
ss
negl
in
fisubrl
stc
or
icebp
adc
mov
xor
clc
cmp
xchg
ljmp
arpl
sbb
xlat
aad
fistpl
fcoml
jno
outsl
test
and
sub
cmp
sti
jb
loope
gs
test
sbb
cli
jb
or
push
or
jae
cmpsl
mov
add
jecxz
xchg
add
push
loope
pop
sti
lahf
stos
mov
inc
add
lds
adcb
divl
jbe
xchg
xor
mov
push
sub
pop
pop
pop
in
test
pop
int
adc
add
fnsave
test
shrb
lds
mov
jmp
push
mov
push
xor
stos
data16
mov
popf
notb
loopne
hlt
fst
aaa
push
pusha
fistpll
xlat
popa
push
adc
mov
cltd
cli
movsl
push
sbb
enter
xor
bnd
xchg
scas
inc
dec
outsb
push
sar
xchg
push
cs
ss
lods
out
roll
inc
and
pop
xchg
ja
push
popa
les
xchg
dec
xor
pop
scas
iret
into
cmpsl
inc
pop
add
in
mov
ss
push
daa
pop
out
addb
mov
insl
cmp
sub
test
and
pop
xchg
ss
ret
js
dec
xchg
push
insl
ja
push
mov
jns
lds
cmp
sbb
mov
fstps
push
cmp
jne
sahf
popa
std
cltd
addr16
xchg
xor
cmp
xchg
cmp
int3
sbb
adc
pop
call
movsb
ljmp
push
push
pop
sub
cmp
insb
pop
push
decb
rorb
setne
pop
imul
sbb
pop
imul
xchg
stos
mov
ret
cmpsl
add
sbb
xorb
shlb
arpl
sub
add
out
and
xor
xchg
jo
lods
lret
mov
cwtl
mov
add
das
lcall
adc
jl
inc
pop
mov
inc
dec
xor
pop
inc
lods
std
or
scas
insl
loop
pushf
scas
int3
orb
ds
dec
in
and
in
repnz
dec
jno
ret
insb
movsb
outsb
movsl
mov
dec
pop
or
mov
outsb
hlt
mov
jecxz
outsl
xor
fldcw
pusha
and
xchg
cltd
jg
adc
dec
adc
push
and
mov
fdivrl
insb
imul
lods
aaa
mov
push
mov
scas
cmp
mov
cmp
popa
sbb
push
cmp
add
mov
test
je
shlb
xorl
push
out
inc
in
cmp
xlat
movsb
xor
pop
or
arpl
mov
jno
xor
mov
pop
lds
mov
jl
prefetch
pop
pop
ret
mov
dec
push
out
rorb
stc
sub
das
pop
adc
enter
loop
mov
mov
gs
xchg
push
dec
jg
xchg
dec
mov
fcoml
outsb
dec
jmp
sbb
lahf
ret
jp
in
jle
repnz
mov
stos
movsb
imul
add
sub
or
mov
add
fistpll
xor
xchg
pushf
sbb
push
adc
lahf
dec
imul
rcl
mov
sti
dec
or
movsb
or
xchg
sbb
sbbl
insb
insb
pop
ret
mov
and
bound
push
fwait
es
jecxz
pop
mov
pop
dec
mov
mov
push
fisubs
loop
cltd
int
sahf
daa
scas
xchg
jb
pextrw
mov
test
imul
sbbl
lret
mov
aad
jmp
loopne
pop
sub
andl
out
sub
mov
loope
orb
sub
and
xor
inc
and
ljmp
pop
cmp
lock
mov
push
sti
sbb
mov
lds
xchg
out
mov
mov
inc
insb
addr16
inc
ljmp
in
in
xor
imul
ljmp
pushf
mov
rcl
xor
aas
sub
sbb
push
push
cmp
sarl
aaa
push
xor
dec
cltd
fimuls
push
sbb
cmp
mov
add
mov
pop
jp
mov
dec
inc
or
cli
mov
pop
clc
enter
or
fidivl
and
inc
stos
xor
iret
cltd
int3
leave
cmpsb
xlat
mov
outsb
push
inc
fs
xor
jp,pn
xor
adc
add
frstor
fcomps
jecxz
or
cmp
leave
mov
push
subb
stc
pushf
xchg
into
push
test
jns
fs
mov
insb
inc
fmull
add
cmp
xlat
aam
mov
ljmp
mov
roll
push
std
add
rcrb
rcr
push
adc
movsl
xchg
ljmp
lds
and
movsb
jae
sbb
sbb
jmp
hlt
or
push
rorb
test
pop
gs
repz
jmp
aam
add
adc
sub
enter
inc
sbb
ret
push
adc
pop
popa
push
jns
out
scas
fdiv
or
cmpsl
clc
add
movsl
scas
dec
xchg
mov
movsb
inc
mov
icebp
je
cltd
ljmp
adc
push
or
jle
inc
lahf
lods
adc
sarb
cmp
ss
pop
mov
adc
jmp
inc
fidivs
les
lods
xchg
into
sub
jo
mov
ds
and
pop
in
xor
out
mov
or
ret
hlt
sarl
dec
mov
xchg
mov
pushw
mov
xchg
fwait
testl
push
fnsave
out
sbb
jmp
lret
ds
cmp
test
inc
fiaddl
and
es
sbb
or
mov
in
jo
rorb
inc
out
mov
jne
xchg
movsb
pushl
mov
sbb
mov
push
shrl
movsb
adc
loope
cltd
mov
sahf
mov
test
mov
add
add
cmp
xchg
mov
xor
push
inc
push
lcall
xor
add
mov
rcl
inc
popf
sbb
jmp
jle
rcrl
movsl
push
mov
mov
lods
mov
and
and
dec
fs
push
mov
call
and
popaw
pop
push
sub
outsl
mov
mov
sbb
test
xor
es
inc
pop
inc
ja
jle
mov
push
cld
xchg
or
cmc
mov
sbb
inc
out
pop
pop
cmp
or
mov
and
mov
test
mov
fwait
lret
xor
rclb
inc
dec
adc
int3
push
ret
adc
sub
and
jmp
test
adc
sarb
test
sub
mov
ret
icebp
sub
imul
pop
scas
dec
fs
add
and
adc
mov
insl
lea
scas
inc
cmp
jp
rcr
push
mov
enter
aad
or
sub
mov
sbb
mov
rclb
cmp
cld
push
arpl
sub
pop
cmc
inc
fxrstor
in
loopne
push
jne
and
jg
mov
call
jnp
jmp
sahf
sub
or
xchg
movsb
cltd
in
xor
pop
movsl
mov
ljmp
xchg
mov
sub
xchg
or
inc
pop
iret
jl
es
int
add
jecxz
xchg
insb
push
cld
jmp
pop
mov
or
or
in
and
out
and
fcmovb
xchg
inc
jb
leave
aaa
pop
mov
lods
lods
jge
dec
xrelease
hlt
scas
cmp
mov
lock
mov
mov
lret
jge
js
imul
or
rol
insb
jno
dec
adc
sbb
lock
dec
hlt
and
imul
and
inc
or
sub
insl
es
stos
mov
outsl
stc
sbb
inc
in
dec
das
cmp
rcll
pop
ja
adc
imul
mov
scas
jne
sub
inc
mov
push
xchg
pop
daa
mov
mov
shll
push
jno
mov
pop
sbb
sbb
and
add
push
fwait
stos
into
ret
adcl
jle
clflush
inc
xchg
mov
pop
cmp
dec
add
pop
sbb
das
fidivrs
mov
cld
ljmp
call
ljmp
cmpsl
and
and
movsl
rolb
jmp
lret
jp
aad
jns
lds
cmpsb
stos
imul
and
lahf
sub
lods
pop
dec
inc
sti
mov
sub
push
insl
shrl
aam
pop
cmp
cmp
xlat
in
addr16
jnp
out
mov
push
push
sbb
lret
testb
cli
in
cli
xor
and
xchg
ret
subb
xlat
imul
outsb
cmp
adc
icebp
sbb
dec
sarl
mov
cld
pop
xchg
and
mov
rorl
daa
and
shrl
jb
mov
push
lock
push
insl
or
mov
loope
fmull
jmp
and
test
push
sti
jns
push
xor
sbb
data16
mov
repnz
cmpsb
jbe
xor
fmull
fwait
or
mov
lret
mov
lock
stc
movswl
push
js
or
pop
pop
inc
mov
jno
mov
testl
rcrb
jmp
lahf
mov
sbb
jo
pop
gs
adc
cmp
jae
xchg
lods
ljmp
xchg
or
int3
call
aam
or
shr
fadd
sub
mov
pushf
pop
jmp
test
je,pn
sbb
ljmp
sub
inc
ja
cmp
clc
cmp
mov
jge
mov
inc
jmp
jae
movsl
xchg
sbb
pop
sub
je
loope
push
sub
test
dec
xchg
or
mov
and
xchg
cmpsb
pop
jmp
xchg
cs
pop
scas
dec
leave
inc
jl
outsb
pop
sbb
ljmp
cltd
mov
push
loope
in
mov
cmp
mov
xchg
int3
fwait
jle
dec
fucom
sbb
aad
stc
jmp
insb
xlat
and
mov
jne
inc
scas
int
nop
sbb
outsb
out
cmpl
push
pop
ss
inc
and
in
loopne
adc
sbbl
add
lret
outsb
push
cmp
loope
sti
adc
inc
jmp
push
leave
xchg
mov
adc
cmp
mov
jae
inc
xchg
popf
insl
mov
mov
push
mov
scas
jle
jb
mov
sub
aam
scas
mov
lds
pusha
ja
jg
pushf
lods
or
cmp
xorb
add
add
sarb
pop
add
out
andl
mov
mov
int3
sahf
scas
xlat
mov
xlat
and
adc
les
cwtl
jns
movsl
in
movsb
push
cmc
inc
loope
jb
ret
add
mov
test
xchg
or
inc
mov
cmpsl
stos
into
mov
cmpsl
mov
popf
sbb
inc
in
inc
sti
test
lret
xchg
push
jecxz
xchg
addr16
dec
loop
ja
outsb
out
movsl
shrl
loope
insb
pop
add
shl
fdivrs
cmc
sysenter
add
call
xor
and
jg
loop
mov
sbbl
or
xor
cmpsl
jne
xchg
cmp
push
pop
orl
loope
jge
sarl
adc
mov
xchg
scas
pop
cmp
xor
jp
aas
push
arpl
negb
enter
jnp
hlt
sbb
mov
sub
jno
out
rclb
xchg
test
ret
lcall
out
test
stos
ds
ljmp
add
jl
and
daa
mov
inc
adc
mov
repnz
out
or
dec
push
xchg
jnp
pushf
scas
test
lahf
sub
push
sbb
fadds
inc
dec
shl
push
shll
ss
mov
call
into
jmp
int3
xchg
mov
inc
lds
sbbb
scas
or
push
pop
repz
jl
rcll
push
fistpl
sbb
dec
push
push
and
icebp
jnp
stc
xor
sub
fwait
adc
mov
hlt
lret
arpl
fnstsw
bound
popl
jns
jle
inc
inc
pop
std
fldt
xchg
popf
and
adc
jmp
push
inc
mov
mov
sbb
xchg
out
sbb
movsb
and
mov
jbe
jg
or
jbe
mov
into
xchg
or
pop
cmp
cli
insb
sub
cmp
rorl
inc
xor
ss
stc
xor
andb
aad
xor
in
repz
push
inc
jmp
pusha
andb
je
imul
mov
xchg
add
xchg
mov
cmp
loop
mov
mov
insb
xchg
push
and
imul
je,pn
int3
pandn
je
iret
mov
cmp
aas
xor
pop
loope
and
in
cmpl
mov
xor
jae
cmp
xlat
push
xchg
fisttpl
mov
mov
add
fstpt
xchg
outsb
imul
lods
stos
lods
mov
neg
mov
mov
inc
iret
cltd
shr
mov
sbb
and
inc
lahf
push
jb
cld
pop
sbb
scas
dec
ficompl
out
sbb
test
call
shrb
ja
adc
xor
cmp
test
ljmp
pop
dec
mov
test
inc
sub
lcall
pushf
push
pop
flds
mov
sbbb
pushf
cs
popa
jg
lret
dec
pop
mov
int3
cmp
outsb
repz
mov
hlt
rcrl
fwait
aaa
sub
in
sbb
int3
repnz
mov
fxch
jae
cmp
and
sbb
les
push
daa
xchg
inc
inc
push
loope
fdivrl
rorl
pop
jns
jns
mov
xor
lea
xor
movsl
jnp
cld
cmp
enter
test
int3
inc
and
js
sbb
aaa
lret
lock
out
pop
cli
inc
push
pop
outsl
stos
in
shrl
aas
lods
fcomp
cmpsb
rcl
xchg
neg
xchg
cs
jg
mov
data16
mov
push
rol
jns
dec
push
adc
cmp
pusha
loop
fwait
and
sbb
jns
mov
adc
push
dec
stc
jmp
out
jb
pop
jbe
pop
cmc
jmp
xchg
outsl
aam
xchg
pop
sub
mov
iret
cmpsl
mov
sbb
add
cs
add
jl
adc
xorb
cmp
mov
leave
pushf
cmpsb
mov
out
cmp
mov
push
jge
pop
add
push
sub
and
lahf
push
leave
repnz
subb
gs
sbb
shrb
xorl
inc
lods
das
mov
push
push
iret
push
push
pushf
stos
outsb
outsb
push
fdivl
sub
cmp
vxorps
sub
pop
mov
repz
lahf
lcall
xor
in
mov
scas
hlt
jnp
sub
jl
sub
mov
aas
add
jmp
iret
cmp
mov
leave
dec
adc
orb
imul
jp
push
rclb
call
and
jb
add
dec
pushf
cmc
repz
test
sahf
jno
shll
insl
push
sub
sbb
mov
js
ss
xchg
outsl
lods
lret
mov
jae
popf
mov
push
xchg
das
mov
out
lret
enter
inc
clc
pushf
cld
or
ret
hlt
mov
mov
int
dec
inc
cmp
adc
nop
jl
cmp
mov
loopne
out
dec
sbb
sbb
es
stos
xchg
jo
jmp
add
iret
pop
mov
popf
fildll
mov
push
jne
out
inc
mov
in
scas
mov
sbb
inc
xor
loopne
and
adc
cwtl
movsb
lret
or
jle
ljmp
mov
mov
fwait
cs
push
fucomi
ljmp
mov
push
pusha
push
jno
sub
inc
or
fcompl
adc
call
enter
sbb
in
xor
sub
push
rorl
xchg
int
out
movsl
movsl
jp
call
mov
dec
jo
jnp
sub
jg
sbb
sbb
sub
lcall
clc
std
mov
movsb
ljmp
mov
xor
shl
imul
fwait
loope
loopne
data16
out
cmc
andps
sbb
aas
test
stc
mov
loope
and
dec
pop
repz
inc
cmpsb
lcall
push
or
push
pop
test
add
xchg
xorl
clc
mov
cmc
popf
repnz
hlt
jg
pop
inc
fmull
push
hlt
stc
scas
dec
in
std
cld
lahf
and
repz
sub
and
mov
mov
popf
gs
ja
or
pop
pushf
ret
call
pushf
in
les
ds
je
push
lds
aad
jne
fstp
outsl
dec
lahf
pop
mov
jle
fnstenv
repz
cmp
mov
mov
es
dec
adc
xchg
xchg
jns
arpl
xlat
pop
dec
mov
xor
jmp
ret
addl
ja
cwtl
dec
cmp
repnz
pop
mov
inc
sub
in
mull
sbb
inc
jg
push
cld
mull
pop
aaa
mov
push
xor
and
xor
push
xlat
lret
loop
mov
fwait
insb
xor
mov
out
scas
push
mov
repnz
adc
sti
loopne
and
xor
or
jnp
xchg
mov
jae
mov
aam
and
xchg
pop
cmp
xlat
add
mov
test
jno
pop
fcoml
arpl
push
inc
stos
adc
jb
fnsave
mov
pop
pop
xor
es
stc
js
dec
sub
fistpll
xchg
mov
push
outsl
negl
push
loop
lahf
or
push
popf
sti
mov
int
loope
xchg
push
dec
mov
in
dec
out
cwtl
mov
nop
xchg
jnp
or
mov
and
bt
cmp
and
scas
sub
jmp
mov
ds
daa
mov
ret
sub
je
test
inc
add
popf
sbb
out
mov
sti
mov
push
sti
mov
shlb
out
or
int3
loop
aaa
andl
repz
scas
int
adc
in
movsl
xchg
fcoms
adc
shll
push
pop
ret
pusha
sahf
popa
cmpsl
dec
seta
test
and
sub
jmp
pop
stos
shrl
addr16
xlat
loope
in
push
scas
dec
sbb
pop
jmp
sub
sarl
sti
add
test
add
sbb
cmp
push
jae
bnd
in
sbb
ret
mov
or
sub
in
ja
push
std
or
cmp
mov
lcall
mov
jmp
call
imul
sbb
fstpl
flds
jae
fiaddl
mov
leave
pop
cmp
mov
push
and
cmc
sbb
loop
imul
mov
adc
out
mov
pop
xlat
and
push
je
scas
inc
add
pop
ret
xchg
stos
push
in
sldt
xchg
jbe
inc
mov
fs
adc
bound
loope
push
js
outsl
lahf
jnp
xchg
in
add
xorb
outsb
cmpsb
push
adc
cmp
mov
or
lcall
out
adc
sub
cmp
dec
fwait
imul
mov
mov
pop
push
sub
imul
lcall
hlt
aad
sbb
lret
xor
sbb
pushf
out
push
lcall
mov
pop
arpl
pop
xchg
scas
test
xchg
iret
adc
repnz
push
dec
cmpsl
xchg
pushl
dec
nop
or
repz
jnp
xlat
jge
es
inc
movsb
les
aam
sub
nop
fcmovu
fistpl
test
rorb
sbbl
into
adc
loopne
arpl
xor
xor
fistpl
pop
imul
mov
cmp
aaa
faddp
in
sub
out
pushf
pushf
cmpsl
jne
jge
hlt
dec
loope
sbb
ret
xor
add
sbb
sahf
push
mov
jp
xchg
xor
mov
xor
or
rolb
clc
enter
loopne
inc
dec
aam
lds
cmp
movsb
and
pop
daa
inc
ss
stc
dec
popa
pop
xchg
add
jno
loop
repz
faddl
scas
pop
lea
lock
out
enter
cmp
ja
jbe
sub
iret
mov
jecxz
mov
ja
pop
test
adc
sub
add
aas
push
cmpsb
push
popf
cmp
loopne
jp
jl
cltd
or
clc
pushf
in
xor
fistpl
scas
in
xor
cmp
leave
lret
xor
pop
lret
push
lahf
mov
xor
lea
adc
aad
sub
xor
jns
xchg
sub
shrl
push
adc
add
test
xor
jne
in
jae
in
or
mov
adc
aam
lods
mulb
cmp
imul
inc
dec
jmp
popf
xor
xchg
sub
push
lahf
mov
comiss
cmp
cmc
orb
inc
mov
add
or
pop
inc
adcb
enter
pop
adc
mov
jmp
ret
mov
xchg
sar
jmp
mov
add
xor
mov
add
and
jbe
pop
clc
clc
mov
int3
push
or
and
jmp
dec
repz
frstor
cmp
fcompl
mov
or
pcmpeqd
out
ss
gs
push
cmp
cmp
repnz
jb
fildl
ret
ret
or
das
mov
mov
dec
stos
xchg
mov
sbb
push
lret
mov
xor
fisubrl
ret
adc
sub
xor
and
mov
hlt
and
popa
inc
pop
adc
call
cmp
mov
cmp
stc
sbb
fbld
es
add
int3
inc
or
shrb
and
into
pop
adc
xor
pop
xchg
ss
jge
jge
cmp
xor
inc
dec
sub
sbb
dec
dec
call
xor
push
dec
aaa
enter
mov
popf
je
in
sti
ror
scas
loop
ljmp
xor
jnp
mov
dec
out
enter
add
push
push
jb
and
xchg
cmp
mov
jae
xchg
mov
cmc
xchg
mov
push
pop
lret
ficompl
fucomp
arpl
adc
scas
mov
ret
xchg
push
dec
xor
sbb
mov
jno
ja
clc
sub
xchg
inc
mov
js
inc
adc
les
add
in
dec
push
pushf
add
push
sub
xchg
int3
int3
sbb
xor
sub
jecxz
shll
sbb
loopne
inc
jl
mov
test
push
inc
cmp
ss
xor
stos
mov
pop
sbb
negl
mov
jae
jl
loopne
adc
cli
lret
inc
std
pop
and
fdivl
xchg
call
pop
int3
aad
test
jg
movsl
shll
pushf
sbb
scas
mov
fs
mov
mov
push
fcompl
xchg
pop
mov
popf
outsl
scas
jnp
cmc
mov
cmpsl
mov
js
sub
stos
and
loope
and
lahf
xchg
push
mov
cmp
sub
cmp
test
ret
push
mov
stc
push
pushf
popa
dec
pop
pop
jl
ljmp
loopne
jnp
push
and
mov
iret
push
mov
xor
mov
add
addl
mov
repnz
test
call
sar
or
inc
shl
dec
push
popl
or
call
bound
mov
jg
cltd
inc
jo
rolb
cmpsl
cmpsl
jb
push
fcompl
iret
sub
fldl
loopne
ss
xchg
insl
jb
loopne
iret
clc
cwtl
xor
push
push
nop
std
or
sbb
shlb
popf
and
inc
cld
xor
les
lds
inc
cwtl
jle
int3
test
rep
in
ret
sbb
inc
stc
ljmp
push
mov
jle
mov
js
cwtl
cmp
cmp
pop
jge
aad
cmc
xor
cmpsl
movb
push
mov
cs
dec
ficoml
inc
insl
xorb
adc
es
repz
jl
imul
or
or
push
out
jmp
std
add
dec
adc
ljmp
jb
xchg
add
repz
inc
cmp
sbb
mov
and
repz
adc
clc
ficompl
mov
fidivl
rol
mov
imul
test
and
jecxz
jle
outsb
scas
jge
mov
rcl
sti
pop
pushf
jo
mov
lods
ret
add
pusha
iret
or
bound
std
dec
add
xor
mov
dec
scas
pop
test
mov
cld
dec
dec
mov
lea
nop
cs
jno
sub
xchg
inc
scas
stos
insl
hlt
out
inc
lahf
xchg
pop
es
and
ja
out
push
cmp
sbb
mov
nop
xor
rolb
mov
lcall
shl
lods
adc
into
stos
adcl
or
cwtd
into
dec
movsb
cmp
loopne
add
cmp
inc
sub
dec
fdiv
mov
lcall
and
mov
xor
imul
mov
xchg
or
cmp
hlt
mov
push
out
sbb
add
xchg
add
dec
jnp
push
es
xor
frstor
jle
sti
cmpsb
cmp
addr16
test
out
cmpsl
gs
sti
pushl
scas
push
cmp
cld
mov
clc
push
dec
add
sbb
cmpsb
loop
mov
sbb
xchg
fisttpll
mov
in
shl
fiadds
push
pop
ja
cmp
je
je
data16
mov
lret
pop
or
cwtl
and
dec
dec
sahf
xchg
or
fistl
xchg
fisubs
cmp
and
fadd
pop
addb
or
loopne
loopne
popl
xor
add
ja
push
lret
out
xchg
sbb
mov
and
in
mov
mov
in
sbb
add
pushf
out
jl
pushf
or
fadd
and
xor
xchg
movsl
xor
jbe
mov
and
sbb
cmp
fs
add
test
out
mov
addl
ss
testb
jne
sub
lock
clc
pop
movsl
nop
addr16
mov
push
mov
xor
mov
or
push
aad
rcr
adc
xchg
dec
fs
inc
enter
imul
aad
popf
mov
cmp
std
fbld
pop
pop
adc
cmp
mov
push
cmp
insb
sbb
cmp
sub
xchg
xchg
jecxz
mov
fisubrs
addr16
xchg
shrb
in
out
inc
push
inc
outsl
dec
push
or
xor
inc
cmp
fidivrl
or
hlt
inc
es
cmp
fmull
and
or
and
andl
out
shrl
push
jp
or
rcl
inc
pop
repz
jle
cmc
mulb
enter
mov
jl
das
xor
inc
jle
dec
xor
jno
mov
push
cmp
mov
sti
cltd
movsb
sub
mov
scas
cmpsb
dec
sahf
test
fs
jg
into
mov
push
andb
cmp
repz
mov
pop
dec
xor
sti
fidivs
stos
pushf
or
imul
pop
and
push
inc
ret
add
jbe
sbb
popa
clc
cmp
mov
xor
in
xchg
cmp
fwait
sbb
mov
and
jo
lods
in
int
stos
loop
bound
add
push
mov
in
cmp
lret
sub
stos
jae
dec
push
cmp
enter
out
rcrb
xchg
add
xchg
pop
inc
xchg
and
cmp
mov
mov
mov
rorb
inc
cmpsb
dec
pop
pop
pop
cltd
test
stos
into
mov
inc
sub
inc
mov
inc
and
cmpsb
mov
sbb
and
jg
scas
push
jo
ds
and
scas
cmpsb
and
test
dec
dec
add
lret
cmpb
cmp
data16
jae
mov
add
test
jmp
cmp
jno
repnz
mov
lock
inc
call
imul
nop
popf
add
addr16
stos
jmp
push
add
idivb
dec
lahf
jne
iret
mov
lds
fcmovnbe
cli
insl
dec
iret
scas
push
jge
mov
inc
xchg
iret
repnz
adc
mov
xchg
push
sub
or
cmp
jmp
addr16
cmpsb
or
dec
dec
test
mov
and
cmovle
jne
xchg
mov
add
and
repz
sahf
loop
jns
pushf
and
outsb
stc
xor
lea
popa
aam
aaa
mov
cltd
movsb
dec
mov
inc
leave
add
inc
out
inc
push
adc
mov
lods
push
jbe
les
jge
mov
or
and
add
std
push
out
xchg
andb
or
sbb
ret
lods
lods
jge
sub
and
imul
fnstcw
sub
mov
scas
es
pop
insb
adc
shrl
leave
sbb
mov
js
dec
xchg
cli
ret
test
mov
jmp
int3
and
mov
xor
sbb
push
cmp
and
mov
outsl
jl
and
fimuls
xchg
mov
scas
and
push
xor
xor
fwait
adc
sbb
outsl
push
pop
pop
push
mov
pop
dec
xor
inc
mov
mov
subl
sti
ds
lea
xchg
nop
outsb
mov
fwait
subb
lcall
sub
sti
in
filds
arpl
add
outsb
test
push
lcall
and
lods
lock
dec
push
pop
or
push
push
les
sub
sub
adc
jp
aaa
lods
xor
cmp
push
dec
inc
sub
or
shlb
xchg
adc
fisubrs
psubd
inc
lahf
inc
xchg
idiv
mov
sar
jge
or
test
xchg
shlb
push
enter
leave
sbb
iret
cmp
add
rcr
arpl
push
adc
mov
push
mov
inc
mov
fldenv
repz
leave
movb
fsubs
xchg
or
dec
cmp
jl
pushf
outsl
dec
or
lods
pop
xchg
adc
inc
and
fnstcw
sub
insb
mov
outsb
xor
or
insl
outsb
aas
into
dec
ljmp
adc
inc
and
test
dec
push
arpl
das
push
sub
and
sarl
jge
clc
add
inc
add
dec
jg
outsb
enter
push
fsubs
inc
roll
adc
push
pop
ret
dec
aad
mov
sub
and
xor
jle
adc
and
jecxz
adc
sub
sub
shrl
pop
mov
pop
add
cmp
jnp
dec
popf
jae
mov
test
mov
cmpsl
mov
mov
gs
je
mov
fidivrs
dec
mov
lret
or
test
xor
data16
lods
stos
mov
sub
ds
cs
push
bnd
andl
inc
cld
dec
push
sub
push
je
jmp
cmpsl
mov
dec
imul
xchg
and
pop
xor
cmp
test
mov
rclb
pop
addr16
sub
push
iret
adc
pop
and
push
rcrb
test
fdivrp
mov
jmp
dec
insl
inc
stos
std
push
or
mov
push
ja
jnp
xchg
sbb
jg
fsubr
jge
cmpl
in
inc
adc
or
ljmp
mov
jno
insl
in
cmpsl
ficoml
negl
mov
xlat
adc
or
pop
iret
clc
sub
jmp
cwtl
pop
pop
int
enter
out
cmc
jecxz
std
in
repz
push
mov
repz
mov
push
add
ficoml
sarb
mov
add
fistpl
jbe
mov
inc
insl
adc
movsb
mov
pop
sbb
std
sahf
push
lock
outsl
orb
test
sub
repnz
stos
mov
cmp
push
xor
pop
js
xchg
add
push
lock
mov
ljmp
out
cmp
add
in
jecxz
mov
out
in
cmpb
mov
fimull
mov
adcl
adc
xchg
mov
xor
fidivl
jecxz
mov
popf
jb
scas
cmpb
sub
stos
sti
push
inc
or
mov
mov
negb
xchg
ljmp
sbb
test
adc
sbb
dec
fsubrl
mov
scas
sbb
int3
cmpsb
jge
icebp
sbb
ds
daa
imul
xor
pop
daa
fists
loopne
lods
out
mov
dec
test
mov
sub
stc
push
stos
mov
or
add
and
jmp
add
adc
scas
fcoms
xor
sub
mov
adc
mov
sahf
xor
mov
dec
inc
cwtl
push
mov
ret
in
cld
push
or
testb
jp
mov
xlat
loop
sub
stc
imul
popa
stos
xchg
aad
adc
shr
sahf
cmpsb
lret
sub
rolb
movsb
cmpsl
jno
rorl
adc
mov
daa
jecxz
repz
aaa
dec
ss
js
mov
repz
mov
inc
and
push
mov
es
movsb
xlat
movsl
push
adc
movsb
and
xchg
push
ljmp
mov
stc
inc
lcall
and
add
xor
inc
outsl
xor
lods
pop
jnp
mov
cmpsb
add
clc
add
les
jno
mov
xchg
inc
pop
inc
stos
inc
cmpb
mov
clc
in
fsubs
or
or
mov
jno
xor
push
sub
pop
push
adc
mov
mov
sub
mov
std
repnz
popa
stc
imul
mov
cltd
pop
mov
pop
xor
lea
pop
and
mov
and
arpl
dec
lea
out
and
cmp
xlat
sbbb
in
mov
lea
xchg
add
sub
scas
adc
in
inc
jg
pop
lock
aas
mov
push
dec
fadds
mov
fs
loopne
fwait
mov
dec
loopne
gs
xchg
pop
out
xchg
push
mov
mulb
js
xor
mov
xchg
jge
loop
movsb
xor
dec
inc
cltd
fstpt
add
jp
add
xchg
lret
faddl
mov
jg
xchg
push
add
push
xchg
movsb
jecxz
stos
mov
test
iret
test
jmp
lcall
mov
aad
mov
dec
int3
add
dec
fistpll
lret
pop
adc
test
adc
sti
jmp
leave
sbb
jg
das
rorb
out
cltd
push
leave
adc
insb
sbb
mov
outsb
sub
push
es
outsl
ret
adc
dec
cmp
rcrb
pop
or
movsl
mov
iret
shr
outsb
rorb
out
add
lds
and
sub
pushf
xchg
push
xchg
lahf
in
test
loop
xchg
adc
pushf
int
push
jno
xor
jecxz
lret
dec
adc
xchg
jge
call
mov
cmp
push
or
jbe
scas
cmp
push
add
aad
dec
arpl
scas
repz
stos
cmpsb
cmp
dec
out
fucomip
pop
jecxz
dec
leave
or
lcall
xor
les
push
inc
data16
mov
lock
std
daa
sbb
lods
push
adc
scas
jecxz
push
xchg
jae
and
xchg
into
jmp
in
xor
les
add
xacquire
aaa
dec
fs
stos
in
jns
sub
adc
or
lds
je
aad
inc
add
xchg
fsub
push
loope
mov
xor
pop
sub
roll
mov
push
lods
mov
sub
inc
mov
les
into
stc
jl
sub
jl
cmp
inc
sub
test
cltd
or
repnz
pop
or
test
lret
pusha
ss
mov
sub
sbb
pop
push
int3
cmc
push
ret
rorb
fiadds
xor
jmp
outsb
iret
aas
rclb
adcl
jecxz
dec
lods
pop
jae
mov
scas
data16
dec
fwait
pop
xchg
jno
cs
sbb
arpl
jno
popf
jb
sbb
loop
fildl
icebp
jb
cld
dec
xchg
shr
es
fidivrs
dec
pop
test
mov
rolb
and
xchg
dec
in
pop
jecxz
inc
pop
xor
sub
cmpsb
out
push
xor
fdivrs
sbbl
jnp
push
mov
outsb
jle
imul
xchg
fbstp
icebp
cmp
mov
or
mov
xor
mov
fistpl
xchg
mov
xor
mov
pop
flds
fsubl
sub
push
or
out
or
pop
pushf
sbb
add
add
push
sbb
fistl
lret
outsb
testb
mov
mov
stos
jge
fidivl
outsl
movl
jns
repnz
fimuls
sub
jp
mov
rolb
out
js
dec
rol
pop
lret
pop
jno
int
das
adc
pop
enter
push
jbe
mov
es
pop
call
int3
loope
pop
in
jb
xchg
push
pop
add
add
add
push
ljmp
xor
stos
push
ds
cmp
adc
frstor
ss
fsts
adc
iret
ror
in
inc
ja
aas
pmulhuw
add
outsl
xchg
jns
xchg
mov
loop
in
es
pop
fwait
pop
mov
movsb
scas
loopne
pushf
frstor
scas
inc
mov
mov
lret
mov
pop
rol
inc
lods
cmc
mov
cmp
dec
rcll
jle
test
bound
js
fs
dec
mov
add
pop
lds
fnsave
das
xchg
mov
imulb
test
xlat
mov
hlt
pop
jecxz
mov
imul
mov
stos
jb
adc
sbb
jnp
js
outsb
lret
xor
cmp
adc
push
sahf
add
cmp
or
mov
push
mov
jne
cli
add
rcrl
mov
dec
lcall
ret
jg
add
xchg
mov
sub
cmpsl
loopew
iret
push
xchg
cmp
ss
xchg
xlat
pop
xor
shll
adc
les
in
mov
jnp
xor
pop
inc
mov
push
insb
andl
sbb
jl
jnp
jb
loope
cmp
mov
add
aaa
addb
add
sub
clc
je
mov
pushf
and
xchg
or
mov
jmp
cwtl
lahf
sbb
les
shll
insb
ret
jle
dec
dec
in
mov
loop
out
adc
adc
cmc
out
mov
cmpsl
push
push
stos
notb
nop
pop
rol
pop
mov
dec
pushf
lods
and
jae
outsl
mov
mov
bound
sub
and
mov
inc
mov
ret
cmp
imul
mov
inc
pop
bound
dec
test
add
xor
inc
cltd
iret
dec
mov
mov
inc
push
ljmp
add
cld
pop
fwait
orb
filds
cmp
pushf
xchg
mov
or
out
mov
and
loopne
popf
cltd
or
imull
push
movsb
pop
jmp
or
xchg
mov
test
jmp
lret
mov
leave
sub
sahf
stos
pop
popf
sub
sbb
cmp
xchg
pop
push
xchg
leave
inc
cmc
dec
sti
jne
ja
jge
lods
mov
mov
mov
and
mov
mov
adc
repz
push
push
xor
sbb
mov
leave
inc
nop
xor
sahf
pop
xor
es
jle
call
pop
mov
dec
lods
fcoml
mov
jo
cmp
scas
test
mov
cmc
int3
pop
insb
and
xchg
aas
cs
mov
out
les
adc
jmp
fists
flds
push
fucomi
xchg
push
shl
jg
sub
rcrl
push
movsl
dec
inc
hlt
mov
outsl
push
inc
inc
cmp
sbb
out
fldl
and
sbbl
dec
adc
mov
xchg
cld
inc
jg
lods
adc
or
mov
mov
xor
mov
xchg
and
fisubrs
movsb
push
bound
xchg
sbb
dec
into
aad
sbb
enter
jge
in
add
inc
loopne
cmp
sbb
jmp
add
push
arpl
ds
ret
fidivrs
cmp
ret
imul
into
and
and
out
xor
clc
sbb
aam
push
je
mov
and
fistl
jae
adc
jmp
jns
push
jnp
mov
push
out
or
bound
cmp
nop
or
and
je
xor
pop
adc
mov
or
movsb
repz
cltd
dec
addr16
sbb
pusha
ljmp
pop
jbe
mov
mov
lahf
pop
jb
lods
pop
mov
addr16
inc
lock
data16
std
xchg
aad
sbb
pop
sti
aas
std
fstpl
and
push
push
lahf
and
rcr
arpl
xchg
shrb
mov
out
lret
cld
pop
je
push
mov
push
mov
insl
cmpsb
xchg
mov
fwait
lret
rclb
stos
jle
popf
adc
jb
or
xchg
test
xchg
cli
sub
jbe
push
xchg
push
add
out
out
rclb
xor
pop
sub
fs
lea
imul
cmpb
jnp
jmp
int
sub
push
pushf
mov
sub
or
dec
out
sub
pop
mov
jg
xor
fnstsw
pop
cmp
lea
lcall
es
dec
sub
pop
dec
int3
lcall
jle
cmp
xchg
imul
pop
mov
outsl
rcrb
pop
jle
xor
fsubrs
sub
sub
dec
cwtl
jae
pop
jge
les
pop
xchg
subb
aad
clc
scas
sbb
rcll
lods
and
lock
cmc
insb
cmp
mov
aas
push
cs
sbb
pushf
mov
adc
lea
orl
stos
ret
orb
mov
xor
sbb
iret
pop
jle
fwait
scas
sti
imul
jb
cmp
mov
sub
cmp
add
push
dec
mov
ja
adc
lods
jmp
pop
rcrb
insl
sahf
mov
test
mov
jmp
jg
in
call
ret
clc
add
inc
mov
sar
push
mov
into
into
sbb
xchg
xor
xor
xchg
lods
in
addr16
sub
scas
mov
xor
sbb
cs
mov
sub
or
adc
jg
js
adc
inc
in
jp
dec
ss
loopne
fcomp
and
and
push
push
push
sbb
aam
mov
fcomps
call
mov
xchg
mov
lcall
jge
cmp
xor
mov
dec
xor
cmp
test
hlt
xor
or
sbb
xor
adc
cmpsl
es
js
popa
cmp
jl
jl
cwtl
repnz
addr16
add
adc
mov
xchg
mov
subl
lods
add
dec
fs
cs
push
rorb
sub
cmp
inc
cmpsl
cltd
call
pop
mov
test
std
sbb
push
pusha
push
or
add
loop
nop
cmpsb
mov
dec
test
cwtl
addl
ror
mov
mov
xchg
hlt
imul
leave
sbb
cmp
or
je
fcoml
testb
enter
mov
shlb
cmp
ds
xchg
pop
push
cltd
jmp
popa
js
int3
adc
ds
push
fsubl
daa
jp
lods
mov
scas
mov
adc
cwtl
mov
add
sub
test
int
aad
pop
mov
push
fwait
lcall
in
mov
sub
leave
shrl
pop
push
and
fwait
lods
push
push
mov
jl
jo
add
mov
sbb
dec
mov
js
add
popf
xor
jmp
cltd
xchg
xchg
stc
cmp
je
inc
rorl
mov
mov
out
pop
jp
les
cli
mov
dec
inc
fstpt
imul
and
fisttpl
pop
and
daa
popf
stc
xchg
push
pop
negb
adc
enter
jl
mov
mov
xchg
divb
mov
sub
jo
popa
das
and
les
fidivrl
sbb
adc
stos
or
jo
cmc
xchg
add
add
adcb
out
sub
and
push
xchg
adc
inc
mov
mov
cmp
or
pop
xchg
xor
cmp
add
push
repz
sub
inc
hlt
jmp
adc
push
orb
add
fwait
push
lret
cmp
add
lcall
jne
inc
xlat
xor
rcl
les
and
lret
xchg
test
pop
xor
sbb
in
xlat
xor
movsb
xchg
mov
enter
adc
dec
or
in
jmp
push
cmp
inc
add
pop
test
ljmp
lea
pop
movb
pop
pop
cmp
and
div
jg
subw
js
pop
push
in
fisttpl
fsubs
mov
lea
inc
sarl
sub
xor
xchg
aad
int
push
sti
jge
add
adc
rclb
and
dec
add
and
std
mov
pop
push
cmp
push
loope
in
cmp
addr16
cwtl
and
cmp
sub
lds
sub
enter
cmp
insl
jle
stos
pop
mov
std
add
jmp
jns
pop
ljmp
cld
and
pop
daa
ss
out
jbe
sarl
jne
pop
cld
adc
push
cs
xor
aad
and
pop
xchg
xchg
out
or
and
and
cmp
hlt
ss
sub
mov
cmp
or
jbe
jnp
outsl
inc
mov
fcmovnbe
daa
mov
rorb
dec
jne
jbe
divb
or
dec
clc
outsl
xchg
pop
adc
ret
xor
cwtl
adc
hlt
dec
and
pop
daa
mov
notb
imul
andb
out
mov
ljmp
inc
sub
sub
mov
out
stos
pop
lds
jns
pop
sub
pop
sbb
ret
popf
mov
adc
mov
sti
int3
hlt
ret
lods
inc
dec
cmp
inc
mov
jmp
sbb
cmp
stos
mov
mov
pop
ficomps
pop
adc
pushf
nop
sbbb
sarl
or
mov
mov
divl
lock
xchg
cmp
outsb
subb
jne
lret
leave
aas
pop
stc
mov
mov
push
xor
sahf
sarb
xchg
imul
in
popf
cmp
lods
daa
imul
nop
jne
add
cmp
addr16
jo
pop
pop
ss
cmp
pop
shll
mov
mov
out
pop
cltd
mov
or
lock
loopne
dec
mov
xor
imul
stc
push
outsl
mov
movsb
push
lock
or
and
push
push
push
fildl
cltd
mov
adc
scas
pop
push
stos
and
jmp
jmp
mov
pusha
jmp
jo
sub
inc
and
es
adc
ret
cmpsl
pusha
lea
jg
clc
outsl
mov
sub
mov
mov
stc
sbb
push
fcmovbe
mov
in
gs
push
sub
rorl
cmc
push
fcmovne
push
fnstsw
mov
add
push
jg
mov
addb
push
mov
mov
outsl
out
stos
mov
insl
xlat
jo
lret
repz
ds
loop
cs
faddl
add
xchg
or
sbb
xchg
xor
shll
adc
and
jle
xor
ss
xor
scas
ljmp
cmc
aam
std
jmp
xchg
sbb
sar
and
xor
xchg
add
sub
test
cmp
hlt
push
pusha
mov
add
sbb
xchg
add
call
push
test
and
pop
inc
mov
adc
mov
cwtl
jns
cmp
sti
aad
push
mov
pop
or
fs
cmp
fcomps
inc
sahf
in
jl
fmuls
ljmp
rcrb
push
cmp
sbb
aas
mov
leave
jno
lahf
pop
test
fmuls
add
pop
and
mov
mov
cmpsb
cld
fdivrs
xchg
mov
outsb
push
pop
and
jl
in
inc
pop
push
dec
rorb
jecxz
mov
mov
insl
dec
jle
sarb
or
scas
adc
mov
imul
xor
scas
shll
jmp
jmp
mov
jo
or
aas
add
or
pusha
sbb
cmpl
mov
pop
jecxz
dec
cmpb
shl
lret
mov
sar
into
ret
jg
enter
add
dec
xchg
test
in
dec
and
popa
sub
into
push
divb
pop
adc
adc
aas
jb
std
pop
ss
mov
mov
fwait
or
cld
jae
les
ss
loop
pop
pop
sarb
push
jmp
or
ljmp
push
dec
add
in
fsubs
push
jl
das
lods
mov
sbb
lcall
xchg
inc
pop
mov
dec
xor
stos
jae
jnp
sahf
dec
xacquire
mov
mov
cs
pop
ret
xchg
push
cmpsb
in
aaa
aam
push
mov
jo
stc
movsl
mov
fcmovnbe
repnz
sbb
mov
mov
out
xchg
ljmp
jecxz
enter
mov
or
scas
icebp
loope
dec
cmp
dec
dec
or
test
in
adc
xchg
mov
lock
out
xchg
test
sbb
dec
fxch
adc
adc
and
gs
popa
adc
in
cmp
insb
sti
dec
lock
sbb
sub
enter
jo
sahf
outsl
and
sbb
shrl
loopne
pop
test
pop
popf
push
mov
sub
lods
rclb
jg
jae
ljmp
repnz
cmp
jp
and
adc
inc
mov
push
int
push
or
xchg
xchg
popf
in
or
int
jmp
insb
inc
mov
or
test
aam
shl
mov
add
outsb
shr
cs
cmp
jle
cli
jg
inc
cmp
mov
int3
call
out
dec
das
push
daa
cmp
pop
pop
mov
xor
jle
icebp
lods
xorb
mov
icebp
xchg
jp
lock
scas
call
out
std
mov
in
mov
pop
and
sbb
xor
fcomp
movl
std
stos
add
jge
mov
fisubs
xor
mov
xchg
lds
jmp
dec
jnp
fidivrl
js
mov
arpl
add
xchg
adc
mov
cwtl
in
add
fcmovu
pop
outsb
jo
sahf
add
pusha
mov
popf
daa
push
push
xchg
dec
and
je
lock
lea
jne
fisubs
fs
das
sub
or
inc
dec
js
adc
cmpsb
jbe
pop
in
mov
cmp
hlt
test
cltd
push
loope,pt
cmp
sub
lods
lea
pop
jnp
sahf
and
sbbl
int3
add
xor
push
arpl
and
xor
pop
hlt
stos
testb
mov
imul
leave
sbb
cmp
sub
sub
pop
sub
add
jbe
ljmp
mov
out
add
sbb
sub
and
sub
mov
cmp
pop
scas
sub
or
mov
pop
jns
int
xorl
or
or
in
bound
into
dec
lea
mov
push
cwtl
mov
aaa
pop
adc
mov
es
cmpsb
jae
fistps
pusha
scas
mov
sub
jecxz
testl
jle
shrb
adc
cmpb
shrl
jbe
dec
scas
xor
dec
cmpsl
in
sahf
fdivs
or
jno
sbb
xchg
lods
cs
xchg
sub
iret
push
inc
xchg
rcr
inc
add
fdivr
mov
sbb
call
pop
xchg
dec
scas
test
xchg
xchg
sarb
xor
call
sub
jle
mov
stc
sub
mov
sahf
mov
jecxz
out
push
bound
adcl
fistpll
pushl
lea
bnd
sub
push
das
aas
scas
aad
mov
loop
mov
setne
in
mov
xor
sbb
sbbb
jp
aaa
fimull
cmp
push
cmp
xchg
xchg
xor
icebp
aaa
lods
xchg
outsb
daa
pop
outsb
pushf
inc
or
andl
sbb
stos
mov
xchg
jae
daa
jo,pt
outsb
into
cmp
push
iret
lret
sub
inc
xchg
popa
pop
inc
out
sbb
sbb
adc
testb
out
mov
rolb
jb
sti
cs
cmp
fistpll
shrl
push
mov
xchg
fsts
pop
les
ret
mov
inc
sti
cltd
jecxz
or
pop
enter
xchg
jns
mov
sbb
adc
inc
loope
fstpl
into
pop
addr16
jo
jge
int3
addr16
cmp
pushf
cmp
jae
or
xor
mov
dec
repz
mov
xchg
loop
cli
mov
dec
hlt
cmp
or
fiadds
jle
jae
xor
outsl
test
add
popf
cmpsb
repz
aad
add
and
xor
aam
xor
daa
notl
loope
xchg
adc
cmc
mov
mov
mov
cmp
xor
pop
pop
loop
sub
dec
lock
pop
cltd
xor
test
lds
mov
outsb
push
xchg
clc
sub
xchg
fsub
ljmp
pop
sbb
int
rol
or
insb
cld
imul
sti
cltd
sub
fs
pop
sti
daa
call
xchg
fsubrs
or
jmp
add
sti
fsubp
test
jmp
inc
mov
or
sub
inc
pop
into
int3
bound
sub
filds
ficoml
stos
stos
xor
out
gs
push
cmc
lea
popa
aas
fistl
les
inc
rcrb
sbb
shlb
jmp
testb
cs
stos
daa
mov
mov
into
pushw
cmp
xor
or
and
sbb
xchg
mov
inc
cmp
std
unpckhps
lcall
loopne
mov
loop
push
cmp
fsubl
xchg
or
outsb
js
fistps
mov
nop
or
call
and
in
dec
mov
or
pop
imul
scas
mov
loop
insb
inc
mov
mov
mov
jno
push
cmp
popf
clc
sbb
cwtl
leave
test
jae
dec
icebp
lds
cmpsl
jmp
es
fisubrl
push
xchg
push
push
addr16
pop
jnp
subl
or
scas
adc
mov
cmpsl
daa
adcb
cmp
leave
xchg
jo
add
loope
lods
lret
adc
ds
push
mov
movsb
popf
imul
sub
enter
mov
int3
addl
dec
out
mov
fsubs
push
adc
xor
in
das
sahf
lret
xchg
pop
push
sbb
and
scas
mov
xchg
into
push
cmp
fcmovne
movsb
hlt
outsl
out
sbb
lahf
ds
ss
mov
inc
mov
popl
std
arpl
movsl
xchg
nop
sub
shrl
xlat
mov
lret
adc
sbb
add
fs
iret
mov
push
adc
cmc
sub
loopne
imul
pop
mov
fildll
mov
pop
xchg
mov
movsl
and
ret
test
pushf
fscale
cwtl
inc
ret
stc
stos
jg
sti
inc
add
mov
pop
lret
daa
xchg
sub
mov
mov
xchg
push
cmp
dec
out
jmp
push
imul
xor
cltd
jne
push
jns
xchg
sbb
in
loop
loopne
push
into
push
push
xchg
xchg
or
adc
add
inc
pop
mov
arpl
xor
insb
call
xchg
cli
xor
lcall
pusha
jp
mov
lea
or
sbbb
ja
shr
testb
test
dec
and
dec
in
aas
lcall
sub
outsb
stos
inc
dec
fcompl
mov
int
pop
lcall
int
out
das
dec
adc
xchg
cmp
xor
aad
es
adc
xor
iret
mov
mov
sbb
xchg
les
movsl
aad
mov
outsl
or
in
shll
push
ftst
enter
cwtl
insb
jg
icebp
cmpsb
jle
inc
outsb
out
push
and
cmp
aas
jl
fiadds
pop
xchg
rclb
lret
das
flds
fsubrl
mov
or
jmp
push
loopne
les
sub
mov
stos
dec
sahf
cmp
inc
adcl
xor
mov
push
fmull
mov
jp
mov
xchg
sti
addl
lcall
ret
dec
test
dec
jg
xor
rcl
gs
pop
mov
adc
cwtl
pushf
adc
pop
xchg
mulb
fcomi
xor
shlw
mov
jbe
mov
pop
aad
pop
popa
xabort
mov
mov
pop
outsb
cltd
mov
nop
incl
pop
movsl
push
loopne
cmp
sub
inc
and
lret
mov
adc
pop
mov
test
sub
xchg
xchg
mov
xor
jmp
repz
iret
bound
idivb
lret
outsb
push
ds
movb
mov
push
je
hlt
mov
scas
dec
jmp
lret
das
movhps
cli
bound
mov
testl
leave
inc
push
push
int3
adc
cmp
fisttpl
cmc
pushf
jno
mov
mov
mov
pop
mov
push
lods
nop
nop
jp
mov
dec
lret
leave
mov
jmp
les
xchg
jp
mov
add
cs
inc
mov
jbe
aaa
sub
jle
or
or
mov
insl
inc
push
popf
or
sarb
mov
xor
lret
dec
jp
sahf
fs
faddl
and
dec
ja
jl
xchg
jno
in
or
cmp
scas
push
add
sbb
jp
rcrl
jge
gs
cmp
jp
ret
inc
and
sbb
and
add
inc
sbb
repnz
pop
pop
sbb
and
dec
inc
cmp
js
fstl
je
mov
and
jo
loop
adc
test
ret
jnp
sbb
fwait
pusha
fidivrs
fbld
lods
mov
ret
pop
mov
pushf
push
scas
pop
scas
mov
lea
dec
repz
ret
jecxz
cltd
mov
cmc
push
mov
ret
call
cwtl
xor
in
xlat
es
sub
jmp
push
shll
daa
push
mov
push
sub
cli
call
in
dec
clc
ret
mov
inc
adcl
mov
jo
mov
gs
push
cwtl
shl
mov
adc
add
sbb
fldt
push
stc
jns
adc
in
dec
cli
leave
mov
test
stos
push
pop
sbbl
xor
cltd
aaa
mov
adc
pop
add
cmp
ss
mov
sbb
stos
adc
or
and
lret
test
jno
mov
nop
test
push
or
out
out
les
xchg
in
pop
jmp
popa
scas
xchg
punpcklwd
ficompl
fmull
sub
mov
aas
sub
fstl
or
loope
and
xchg
sar
sub
pusha
outsb
jnp
push
push
adc
xchg
fwait
rorb
rcl
mov
adc
and
fwait
das
jae
std
mov
adc
mov
or
mov
jmp
add
adc
dec
push
inc
push
mov
inc
add
or
pop
add
call
cmc
cld
jae
rorl
jp
push
cwtl
pop
sub
fdivrl
mov
aad
test
lcall
fmuls
jno
aas
test
ds
inc
addr16
adc
fsubp
cltd
inc
dec
fisubs
mov
lds
cmpb
or
getsec
cmp
mov
mov
sub
jb
test
cmp
enter
push
xor
push
loope
pushf
je
push
lret
das
pop
mov
dec
or
sbb
out
ss
push
xor
dec
add
pushf
mov
cli
ret
scas
xchg
jl
or
mov
les
push
movsb
test
mov
js
inc
scas
stos
ljmp
aaa
jae
stos
adc
add
add
adc
cmp
adc
clc
dec
mov
or
mov
push
inc
inc
fbld
jl
and
jl
add
std
push
out
int3
pop
dec
add
in
pop
cmpsl
push
hlt
mov
cmp
imul
push
fdivrs
or
jg
loopne
push
in
cmpsb
fstps
testb
add
enter
je
gs
test
je
push
mov
adc
dec
xor
sbb
pop
call
mov
pushl
mull
mov
jg
lock
inc
std
mov
icebp
or
sbb
xchg
js
pop
xchg
aad
or
pushf
inc
lds
popa
mov
mov
xor
push
xchg
or
dec
bound
xchg
mov
mov
call
insb
repz
dec
jno
int3
fidivs
aas
and
cmp
adc
inc
mov
ss
jp
lods
stos
addr16
aas
orb
cmp
inc
cmpsb
pop
xchg
aas
xor
mov
or
fmuls
fsubs
add
rcr
mov
pop
shll
jecxz
stos
imul
pop
hlt
ljmp
push
and
cmp
jg
ret
stc
repz
pop
jo
mov
rorl
shrl
add
subl
push
pop
outsb
testb
adc
out
and
and
add
aaa
das
jecxz
outsb
mov
lea
mov
roll
repnz
test
xchg
adc
out
pop
in
dec
aas
xlat
lret
push
adc
lds
inc
cwtl
push
pop
jbe
jb
stc
mov
ret
shrb
or
repnz
negb
push
scas
fisttps
arpl
xor
std
dec
in
xlat
aam
sub
aaa
push
xchg
mov
flds
mov
sub
movsb
fidivrl
cmc
xchg
mov
out
scas
push
test
cs
mov
inc
rclb
test
mov
inc
xor
jle
je
mov
sbbl
xchg
dec
imul
rol
aad
dec
xor
inc
lods
xchg
test
jl
adc
cmp
std
mov
fisttpl
int3
loope
fldcw
mov
popf
in
push
mov
mov
inc
pop
in
add
in
jb
adc
or
mov
jne
pop
or
jecxz
mov
xor
imul
mov
inc
fcoml
inc
mov
inc
sub
out
dec
sub
repnz
xchg
cmp
cmp
xor
rcll
xchg
test
mov
icebp
cwtl
daa
sarl
pop
cmpsl
pop
mov
dec
je
fistps
rclb
pop
mov
dec
pop
cmpsl
outsl
jecxz
pop
xchg
jbe
into
popa
adc
pusha
addr16
mov
sub
ja
clc
dec
out
pop
adcb
pop
rclb
inc
cs
mov
cs
loope
testb
cmpsl
cmp
and
shr
aas
shll
pop
rorb
test
add
and
push
arpl
adc
ret
dec
int
fbstp
push
clc
cmp
mov
negl
and
in
lds
xlat
es
pop
cmp
push
sub
test
inc
inc
adc
dec
cmpsl
jp
insl
mov
push
push
movsb
lahf
lock
fst
adc
jb
pusha
lret
jbe
pop
sub
mov
testl
and
rcll
in
mov
in
jp
mov
cmpsb
inc
popa
call
mov
jne
add
and
mov
scas
ss
inc
mov
jnp
sbb
jno
pop
mov
notb
sbb
and
movsl
test
inc
jmp
outsl
adc
iret
inc
shrl
mov
xchg
repz
push
cs
pop
ficompl
shl
cli
and
test
aaa
mov
aam
mov
es
cmp
call
push
sti
push
mov
add
daa
aas
sbb
ret
and
outsb
mov
fisubl
xor
pop
jecxz
clc
pop
mov
cs
shll
je
aam
sub
jae
mov
pop
cmp
sbb
add
push
lahf
adc
adc
js
and
xor
jb
bnd
ds
in
fnstcw
icebp
int
pushf
cs
push
imul
push
inc
push
push
cmp
scas
rcrb
add
add
jmp
repz
fs
inc
jnp
arpl
jl
jnp
mov
mov
pop
xchg
lahf
inc
sbb
movsl
push
jecxz
outsl
scas
xchg
jl
aad
mov
lock
mov
add
lcall
jo
add
shlb
fs
ds
lret
cmp
gs
out
mov
lods
xchg
mov
dec
fcmove
cld
jns
into
jg
inc
test
daa
sbb
or
stos
push
pop
jge
gs
fs
xor
or
andl
sub
inc
push
mov
addr16
xor
test
jp
clc
push
mov
mov
ret
push
or
imul
imul
and
inc
mov
add
jne
jle
pop
dec
fnstcw
lds
mov
subb
inc
lods
or
jno
insl
xor
xlat
xor
pop
xor
pop
daa
lds
mov
aam
outsb
insl
lret
mov
adcb
xchg
inc
mov
movsl
scas
push
cmp
in
flds
fisubrl
pop
add
sbb
clc
lods
or
in
dec
adc
jp
fstl
arpl
xor
scas
and
pop
pop
les
sub
out
insl
lret
cltd
dec
dec
or
add
or
clc
aam
pusha
jl
loop
sahf
test
stc
cld
rorb
ja
xchg
fsts
and
int
sbb
dec
jecxz
iret
in
mov
mov
testl
or
mov
iret
xchg
xchg
xor
jmp
movsl
push
xor
in
int3
outsb
xchg
aam
cmpsb
fnstsw
jle
stos
mov
fld
movsl
jno
xor
aas
xor
push
cmp
icebp
rolb
cmpb
stos
mov
sbb
outsl
icebp
or
dec
fcomps
mov
sub
cltd
into
rcrl
xchg
ffreep
fstl
lock
ds
sub
mov
pop
jmp
pop
mov
push
inc
cwtl
mov
and
xor
sub
lds
sub
stos
jle
xchg
popa
mov
xor
decb
mov
cmpsl
sub
andps
sub
aas
test
xchg
push
out
mov
jb
pop
dec
les
andl
repz
jne
jns
sbb
leave
jl
cmpsb
and
or
repz
insb
add
jmp
leave
sub
cmc
pop
jae
testb
leave
aad
lret
cmp
clc
pop
inc
mov
leave
jle
and
mov
movsb
cmp
scas
mov
push
test
rcrb
jp
jecxz
push
in
or
xor
push
pop
fldt
fsubl
push
fildl
dec
int3
inc
xlat
les
pop
movsl
kmovd
stos
out
mov
pop
push
mov
inc
mov
sbb
mov
mov
sbb
cmpsl
cmp
pusha
xchg
inc
rcrl
xor
lods
and
xor
or
or
sbb
nop
pop
dec
lahf
ret
fists
mov
loop
das
aas
adc
lods
xlat
sbb
xor
sti
or
daa
xchg
push
ja
mov
fiadds
push
xchg
mov
add
and
adc
dec
ss
push
mov
fcomp
dec
addb
mov
insb
rorb
cmp
xlat
xor
sbb
loopne
es
push
and
inc
fmuls
inc
les
push
pop
or
in
out
or
comiss
negl
pop
mov
int3
test
hlt
ja
out
or
lret
push
cltd
sar
adc
sahf
cmpsb
or
outsb
pop
push
insb
mov
out
cmp
subb
adc
xchg
mov
scas
fst
push
mov
js
or
jnp
es
fistpl
loop
orl
pop
pusha
test
pop
aaa
lods
sub
shll
mov
cmpsb
adc
jne
pusha
add
add
mov
push
cmp
cld
fisttpll
mov
jnp
sbb
mov
mov
add
fdivs
xchg
add
orw
and
loop
mov
cld
les
jno
sub
jl
hlt
inc
push
sub
bound
cs
sub
mulb
rcrl
mov
xchg
mov
jg
jns
mov
lods
arpl
inc
dec
cltd
xchg
loope
lret
mov
roll
fwait
push
dec
push
xor
or
fistpl
pop
jmp
aas
pop
jnp
fistps
mov
shlb
test
ret
sar
repnz
push
or
shl
lea
push
sub
xchg
outsl
fcmovb
dec
out
in
push
sbb
test
dec
push
and
loop
pop
jg
lock
test
xchg
and
divl
mov
pop
mov
and
dec
push
cmpsb
push
cmp
icebp
dec
jge
mov
mov
es
pop
xchg
xchg
cli
sti
lds
cmp
cltd
mov
int3
stos
out
jle
in
fisubs
nop
out
jno
sub
adc
sbb
dec
jge
jle,pn
pop
out
sbb
nop
sub
ja
add
lock
or
or
pop
xchg
clc
outsl
repnz
js
daa
pop
jge
movntq
push
lret
call
imul
mov
add
cwtl
pop
jae
mov
mov
sbb
xor
in
popa
mov
and
ss
and
loope
gs
pop
rorl
mov
xlat
jg
add
popa
mov
mov
sbb
test
and
mov
jbe
push
sub
xchg
gs
popa
sbb
pop
pop
out
iret
add
mov
hlt
pop
dec
mov
ret
js
enter
sub
lods
shrb
mov
xchg
sarb
jecxz
outsl
or
sub
add
pop
sbbb
sbb
in
pop
adc
dec
divl
roll
shlb
movsl
jne
and
fimull
inc
jmp
je
and
xchg
call
mov
sbb
pop
push
adc
cmpsl
jle
mov
pop
or
dec
jecxz
or
adc
jl
xor
cltd
dec
jle
ljmp
adc
shrb
sub
ljmp
inc
ret
pop
xchg
pop
leave
pop
sbb
imul
dec
push
xchg
das
stos
lds
ja
mov
push
fadds
cmc
dec
or
mov
rcl
xor
fwait
adc
mov
or
push
aaa
out
push
mov
xor
push
xor
sbb
sbb
pop
xor
add
outsl
mov
sbb
fcompl
cmpsb
mov
clc
pop
inc
pop
add
cs
pop
loop
add
pushf
enter
stc
outsb
enter
push
mul
fwait
and
xor
push
inc
pop
cmp
mov
scas
daa
sbb
sahf
pop
sbb
aam
je
cmpsb
inc
scas
sbb
outsl
sub
sbb
js
xchg
call
enter
rcrl
or
test
in
cmp
mov
cmp
mov
push
fnsave
jmp
aad
mov
mov
test
lds
cli
mov
in
push
mov
fs
pusha
jb
lock
adc
cmpsb
pop
sub
test
push
jle
mov
movsl
adc
cmpsl
push
stc
mov
sub
out
dec
addr16
xor
int3
lods
adc
lea
cld
ret
inc
sub
out
dec
nop
mov
inc
jae
insb
pop
cmp
sub
xchg
clc
inc
and
push
fstpt
loopne
mov
out
xor
fsubrs
std
and
sarl
xor
movsb
out
push
pop
pop
dec
fstps
jp
mov
sbb
test
inc
ljmp
jo
fimuls
and
adc
push
jne
sbb
jl
or
dec
mov
mov
aaa
mov
subb
imul
adc
jle
sub
in
sub
scas
rolb
sbb
or
adc
rolb
jb
push
jb
mov
mov
or
mov
inc
test
mov
in
mov
icebp
fdivl
pushf
in
lds
shrl
mov
inc
loop
mov
jns
mov
dec
loopne
es
mov
dec
xor
cmpl
add
and
cmovl
call
ljmp
mov
add
shrl
push
cmp
jbe
adc
hlt
out
xchg
out
adc
sysret
jmp
imul
dec
sarb
imul
scas
cmp
add
sti
mov
or
or
pop
sub
pusha
arpl
nop
cmp
in
jbe
mov
dec
dec
mov
in
sub
addr16
ficoms
jae
pop
pusha
test
or
lret
sub
les
insb
aaa
aad
popa
inc
xor
iret
mov
rorl
mov
in
cmc
dec
lret
mov
jo
xchg
jns
test
xchg
in
cmpsb
adc
arpl
shrb
fwait
and
call
mov
and
les
out
push
xchg
jnp
js
cmp
xchg
cmp
mov
mov
outsl
int3
push
cmpsb
aaa
pop
repnz
push
mov
stc
xchg
pop
mov
pop
mov
push
call
mov
or
xchg
adc
cmp
fwait
or
pushf
xchg
jp
inc
push
jbe
cmp
jnp
mov
mov
pop
push
jnp
stc
pushf
and
rsqrtps
xchg
ljmp
jl
addr16
in
dec
adc
in
push
push
cmp
inc
adc
imul
movsl
arpl
xor
pop
jnp
mov
sbb
popa
je
adc
aas
lcall
fsubrp
inc
cmp
adc
or
insb
iret
sbb
ds
arpl
pop
jno
arpl
stos
sbb
bound
stos
mov
push
mov
mov
mov
sub
sub
add
mov
ret
in
lea
dec
dec
push
rcr
mov
or
inc
and
xchg
fcom
dec
sub
mov
jb
movsl
push
sahf
lret
cmpsl
imull
cmp
enter
mov
dec
add
js
jne
scas
das
mov
mov
push
inc
push
cmp
cld
sub
mov
lea
fimuls
fisttpll
inc
pop
mov
mov
jno
pop
fs
mov
xor
jl
cld
sbb
daa
mov
stos
out
jmp
mov
jecxz
adc
mov
xor
out
ss
scas
cmpsl
pop
cld
pop
xchg
sbb
inc
inc
cmp
pop
ljmp
add
sbb
in
stos
xchg
mov
mov
pop
dec
cmpsl
pop
fwait
mov
push
imul
sub
movsb
pop
mov
cmpsl
in
xchg
xor
cmp
lret
fcompl
into
mov
xchg
dec
in
lods
aam
fwait
shlb
lock
mov
test
lret
adc
or
sahf
icebp
or
fstps
pop
cwtl
cmp
sbb
and
mov
inc
xorb
xchg
ljmp
sbb
mov
jae
fisubs
mov
xchg
repnz
subl
inc
sub
pop
pushf
mov
pop
pop
adc
pop
cmp
adc
sbb
sahf
cmpsl
filds
fsts
cld
lods
dec
movsl
dec
dec
cmp
jecxz
lahf
outsl
and
mov
cld
or
test
ret
test
iret
xchg
xor
in
inc
and
test
cmp
pop
and
fnstenv
sbb
sti
xchg
ficoms
pop
scas
pop
or
cmpl
push
cltd
pop
jne
iret
fisttpl
mov
dec
sbb
mov
mov
sbbl
adc
sbb
nop
cmp
fcmovnu
fsub
repz
cli
insl
adc
push
sbb
mov
pop
jb
lea
adc
push
sbb
add
xor
adc
sub
sub
daa
shll
jmp
addl
jno
test
sub
lods
jp
push
cmp
mov
loop
in
sti
sbb
pop
xchg
in
cmpsb
jae
push
psubd
lahf
sahf
scas
in
and
jmp
test
insb
mov
pop
xchg
sub
cmp
push
push
mov
pop
sahf
adc
cld
mull
pusha
xor
xor
ret
mov
lahf
jb
mov
sub
xor
add
fisttpl
pop
stc
ja
push
int3
and
jo
cmp
cmp
cmp
cmpsb
lods
test
popl
cmpsb
fcomip
test
imul
js
sbb
out
xchg
pop
loope
push
imul
std
pop
mov
call
or
jle
adc
test
sub
cmp
in
xor
xor
jns
push
in
dec
jecxz
inc
mov
xchg
xor
sbb
sbbl
int3
lcall
fwait
xchg
cmp
push
outsb
pop
push
pop
adc
inc
sub
cmp
aam
or
mov
loop
ja
inc
pop
pushl
orb
push
imul
add
inc
ret
scas
inc
inc
jmp
bound
popa
pop
jle
fsub
test
sub
and
fdivrl
xchg
rcr
popf
jne
cmp
mov
push
mov
adc
or
into
pop
daa
out
push
sbb
movsb
mov
inc
mov
into
xchg
pop
rorl
pop
cmp
xchg
xchg
mov
jmp
mov
gs
adc
hlt
cmpl
push
jo
sub
scas
les
in
and
sahf
adc
das
int
loop
andb
aam
lock
push
inc
sbb
xchg
ret
mov
pop
dec
subl
xor
test
in
aaa
iret
lods
pop
jnp
mov
ljmp
mov
std
xlat
or
mov
jns
mov
daa
hlt
aas
xorl
xlat
ficoms
into
aaa
pop
dec
push
mov
lods
inc
dec
xchg
sbb
jae
int
addr16
cli
mov
std
pop
xchg
mov
inc
sar
push
leave
jl
dec
xor
sub
mov
cmpsl
stos
into
lea
outsl
inc
adc
add
cmp
sub
cmpsb
push
adc
loope
push
sbb
std
jg
js
fidivl
cmpsl
insb
push
in
stos
ret
addr16
xor
or
push
xor
and
sub
push
push
pop
push
pop
cmp
or
inc
xchg
adc
mov
adc
fcomps
mov
cltd
push
fldlg2
jecxz
js
imul
sahf
and
stos
pop
mov
int
mov
lcall
mov
sub
lods
xchg
shr
stc
add
pop
push
sub
add
pushf
pop
ss
sub
test
push
mov
ds
shll
xor
jl
xchg
pop
dec
jg
mov
cli
sbb
xor
pushf
and
mov
mov
mov
inc
pusha
jb
xor
popa
repnz
insb
add
call
mov
xor
in
xor
mov
xor
test
ja
adc
ret
lea
mov
dec
mov
or
jl
mov
mov
mov
inc
lcall
test
pop
pop
sarb
or
mov
dec
xchg
mov
pop
daa
xchg
test
pop
lahf
pop
aas
sbb
mov
push
into
jno
les
jmp
test
sbb
lret
jp
xchg
push
sarb
pop
sub
and
setl
xor
push
sbbb
xorb
mov
shlb
inc
js
lds
jnp
xchg
jmp
dec
ss
mov
mov
mov
adc
andl
mov
daa
mov
push
or
cmp
inc
jg
popa
data16
xchg
or
push
add
int3
sbbl
enter
es
sub
mov
aam
mov
stos
and
ficompl
lds
cmp
movsl
mov
in
mov
sub
mov
pop
rcr
mov
jb
jp
mov
cmp
xor
add
xchg
mov
sub
dec
pop
cld
call
push
xchg
test
xchg
cmp
cld
xor
pop
sar
mov
call
pushf
adc
sar
andl
ja
mov
shl
aad
test
pushl
ss
mov
push
js
mov
adc
call
outsl
sbb
sub
addr16
jns
jo
jns
nop
das
xchg
jmp
inc
xchg
sbb
and
pushf
je
sbb
aad
or
push
out
out
arpl
dec
sbb
cmp
icebp
jmp
iret
ret
ja
call
out
xchg
mov
sarl
cmp
out
push
je
xor
sahf
mov
cmpsb
in
and
arpl
jo
xchg
fildl
and
xchg
mov
cmpsb
cli
mov
in
enter
lret
jmp
das
cmp
data16
xor
xor
sub
jo
adc
and
lahf
into
cwtl
inc
xlat
test
sbb
enter
imull
les
mov
cltd
xor
inc
dec
push
call
pop
pop
and
movsb
mov
xchg
jl
data16
adc
xchg
add
cmc
jnp
fmuls
imul
test
and
xchg
cli
outsb
and
cmpsl
inc
add
out
push
icebp
lcall
nop
fsubs
sti
push
in
mov
addr16
fstpl
enter
lea
adc
push
cmp
cvtdq2ps
mov
cmpsb
ss
push
je
fbld
repz
push
int3
mov
outsl
lock
inc
call
mov
cmp
pop
mov
into
mov
mov
mov
sbb
roll
inc
push
nop
mov
cld
aaa
inc
stc
sti
mov
pop
mov
imul
mov
lock
std
mov
mov
popl
mov
icebp
push
mov
inc
add
jns
in
aaa
mov
pop
and
or
movsl
shrl
dec
imul
mul
int3
push
enter
xlat
shll
aam
insb
cmp
dec
sbb
adc
ds
dec
mov
dec
push
jle
xchg
testb
inc
dec
loop
jb
add
insb
and
xchg
push
jl
dec
pop
push
lods
inc
subb
xchg
xchg
push
cli
sbb
fcomps
xchg
xchg
imul
outsb
xchg
xor
xchg
in
pop
lock
mov
mov
les
pop
pop
clc
push
cld
add
lret
loopne
cs
xor
pop
add
stos
push
imul
adc
clc
insl
jle
fnstenv
out
ret
sbb
sub
test
inc
movsl
pop
fdivrs
repnz
movsl
xor
aaa
js
fsub
mov
dec
mov
lahf
sub
mov
int3
sarl
sub
adc
rorb
adc
pop
daa
jge
js
and
pop
dec
push
mov
leave
inc
mov
pusha
or
arpl
pop
lods
cmp
es
cmp
imul
push
sti
cmpsb
andl
ljmp
or
inc
sub
fiaddl
bound
js
insl
stos
adc
cmp
and
imul
or
loop
and
inc
test
das
jge
clc
in
xchg
repz
outsl
add
add
push
mov
in
nop
popf
fnstsw
test
or
js
rol
inc
or
cmpsb
lods
sbb
push
cmp
adc
mov
dec
inc
add
jne
push
jnp
xchg
icebp
je
imul
push
mov
sbb
dec
mov
jns
mov
jne
xor
repz
into
and
iret
mov
cwtl
outsb
xchg
add
sbb
jns
dec
xchg
sbb
ret
adc
ret
mov
dec
mov
mov
arpl
push
out
lcall
push
add
and
push
std
add
xchg
and
stos
mov
les
add
or
and
cmpsb
lcall
pusha
cwtl
xor
jbe
es
sub
arpl
out
push
inc
xchg
mov
out
xor
mov
push
into
mov
aaa
lds
cli
sub
mov
sub
sub
ljmp
pop
mov
cmpsl
daa
jmp
cmpsb
pusha
add
leave
mov
mov
fcoml
mov
adc
aaa
pop
int
cmp
addr16
ss
adc
orl
lds
jg
mov
mov
sub
xlat
add
stos
inc
in
pop
fstpl
or
int
pop
lahf
xchg
movsb
sbb
pop
pop
adc
scas
fidivl
imul
xor
lea
test
adc
push
ja
lcall
xor
sbb
insl
xchg
adc
clc
xor
jo
arpl
test
dec
ss
jns
sbb
lods
push
daa
cmc
xlat
and
sub
in
cmp
or
mov
ss
insb
jp
lcall
mov
or
and
imul
cmp
pop
imul
nop
cmc
fdivrl
rol
jmp
dec
loopne
out
je
inc
cs
jbe
add
sbb
mov
rcrb
leave
push
clc
mov
inc
xchg
inc
bound
xchg
out
add
xchg
adc
loopne
lahf
in
add
pop
test
outsb
push
pop
xchg
or
inc
andps
pop
lock
push
xchg
dec
or
xlat
mov
lods
mov
cli
clc
pop
pushf
add
jle
push
adc
nop
push
dec
jo
popf
lahf
ja
pop
insb
xor
mov
mov
rcrb
cmpsl
ret
xor
xchg
scas
mov
fisttps
adc
pop
imul
movsb
repnz
jne
lds
and
scas
daa
sahf
cli
mov
mov
mov
movsb
sub
out
enter
dec
jnp
adc
out
jle
outsb
mov
jb
and
cmp
enter
sbb
jp
arpl
jbe
popf
add
out
orl
std
jb
test
repnz
mov
sbb
pop
jg
and
pop
stc
mov
cld
dec
add
repnz
pop
mov
mov
mov
in
std
cmc
push
jl
and
out
cmpsl
aad
xor
push
xor
lret
lcall
pop
test
imul
add
jle
das
xchg
mov
mov
lcall
inc
mov
and
mov
fdecstp
in
test
daa
or
jnp
fildl
lret
cltd
sub
call
adc
loopne
jnp
popf
cs
jle
dec
in
lcall
xor
pop
and
rcrb
fidivrl
mov
and
pop
pextrw
sbb
into
arpl
out
int3
or
xchg
pop
push
pop
xlat
idiv
jbe
cmpsl
notl
cmp
pusha
mov
xor
sbb
mov
dec
out
adc
xchg
inc
enter
and
pusha
mov
idivb
test
addr16
push
stos
jb
add
push
sbb
loope
and
pop
or
push
pop
jns
addr16
mov
add
daa
xlat
scas
xor
jns
and
xchg
pop
push
or
shll
inc
ficoms
cmp
jb
jl
outsl
into
jge
idivl
mulb
cwtl
add
adc
int
sbb
jp
mov
jecxz
lret
stc
fisubl
or
xchg
shlb
in
lret
stos
daa
fimull
add
insl
test
fists
js
push
jecxz
dec
push
dec
js
sbb
movb
and
fstpt
sub
int
mov
movsl
repnz
into
push
mov
pop
bound
cmpsl
ljmp
push
or
mov
cmp
idivb
js
sub
dec
jo
xor
mov
mov
gs
jo
ret
lcall
std
icebp
jmp
xor
ja
jmp
into
cs
lods
mov
mov
add
xorb
push
mov
cwtl
xor
mov
push
pushf
or
std
jp
jnp
call
push
aas
xchg
in
repnz
sbb
jg
mov
in
test
sub
es
lods
push
xor
or
lret
xchg
or
or
icebp
and
addr16
mov
push
rcrb
add
ljmp
adc
fbld
xchg
jp
push
and
iret
lds
dec
lock
cmpsb
jno
push
shll
shrb
sbb
sbb
push
jg
fiadds
je
fs
int3
push
jne
push
adc
das
jle
aad
pop
pop
or
dec
outsl
outsb
in
sar
push
dec
push
rorl
shrl
xchg
lods
and
fsubl
sbb
sbb
push
xor
and
mov
test
jno
sub
xor
jge
xor
cld
sbbb
lods
pop
push
push
cltd
xor
dec
jo
xlat
mov
ljmp
xor
aas
inc
cmpsb
iret
push
insl
lea
das
packuswb
js
pop
ja
xor
and
inc
or
add
xchg
std
mov
mov
stc
inc
aas
not
xchg
sbb
sub
push
xchg
pop
or
dec
imul
dec
aas
repnz
push
mov
jge
andl
mov
jae
lcall
notb
pop
adc
mov
cld
mov
cs
dec
roll
aas
dec
rorb
mov
stos
xchg
jne
fcoms
repz
test
jo
jne
xorl
enter
nop
ret
rcll
push
jns
and
inc
or
inc
sar
inc
or
repz
pop
mov
pop
mov
jo
add
mov
test
scas
call
dec
ret
test
popa
addb
popa
ljmp
pop
dec
test
cs
in
hlt
lret
jle
pop
xchg
push
sahf
gs
push
stos
mov
xor
dec
and
sbb
sbb
outsl
aaa
les
test
aad
pop
dec
addb
pop
aaa
add
mov
mov
lds
movsl
push
out
mov
fwait
test
push
nop
mov
lahf
insl
dec
lcall
adc
adc
pop
mov
jns
cmp
fcomp
outsb
rcrl
or
xchg
xchg
stos
roll
data16
and
pop
push
pushf
addr16
inc
dec
sets
dec
add
lods
out
dec
sbb
mov
cli
pop
pop
cli
sub
mov
push
in
adc
fwait
push
insl
adc
cmp
xor
clc
mov
cli
fisubrs
out
jg
stos
lock
xchg
mov
inc
push
hlt
ret
addl
ret
mov
lock
roll
inc
push
mov
sub
or
pusha
out
push
dec
stos
repnz
pop
mov
out
push
addl
add
xor
mul
fdivs
pop
mov
daa
xlat
pop
test
aaa
adc
scas
insb
cwtl
jg
xor
sbb
inc
cmpsb
jnp
scas
icebp
adc
add
push
mov
pop
push
inc
arpl
scas
lea
or
pop
sbb
out
test
mov
adc
daa
lods
dec
test
adc
lds
cwtl
dec
fdivl
xchg
push
push
scas
adc
repz
xor
pop
lock
sbb
int
inc
outsb
shrl
movsl
mov
cmpsl
pop
les
in
shr
mov
xor
mov
jecxz
or
xor
inc
push
jecxz
xlat
cmp
inc
out
repz
xchg
scas
in
sub
adc
xor
cmp
cmp
lea
cmc
mov
push
test
pop
subl
cmc
sub
mov
shll
push
andl
adc
js
orl
movsb
dec
xlat
ds
out
cwtl
cltd
push
push
ljmp
jo
ja
int
lahf
jo
inc
add
push
stc
sbb
pop
pop
inc
inc
cltd
and
ljmp
shll
pop
insl
ds
add
adc
mov
movsl
inc
jle
jg
pushf
jge
push
add
push
jmp
jg
jno
adc
fistl
mov
inc
repz
jmp
mov
sbb
cltd
xlat
sbb
cmp
stc
sarl
std
cmpb
int
mov
jg
lahf
xchg
ret
mov
sbb
lcall
add
sub
loop
es
jg
push
aad
inc
movsl
aam
imul
inc
xchg
mov
xchg
fcoml
push
enter
cli
add
mov
outsl
pop
push
mov
cs
mov
pop
xor
and
mov
shrl
xchg
xchg
out
mov
test
addr16
ljmp
jne
xor
idivl
out
push
mov
popf
int
dec
leave
xor
xor
push
in
jne
xchg
ljmp
mov
insl
les
mov
insb
or
hlt
xlat
cmp
imul
push
mov
mov
lds
mov
sbb
mov
mov
xchg
adc
mov
adc
into
es
push
add
or
and
jl
xchg
or
mull
push
stos
xorl
nop
mov
xchg
sub
pop
cmpsb
adc
cmp
adc
push
cmp
lret
icebp
dec
aaa
frstor
imul
or
jecxz
sahf
pop
push
inc
mov
xor
cmpsl
mov
orb
sbb
or
mov
dec
push
mulb
pop
sub
xor
pop
sbb
or
test
subl
js
sahf
mov
pop
movsl
mov
imul
scas
ja
or
mov
jl
push
sub
and
push
mov
movsl
fs
cmp
sbb
mov
lahf
out
test
ljmp
scas
sub
mov
sbb
inc
lock
jmp
xor
adc
mov
adc
mov
std
lods
fldcw
movb
nop
xor
mov
out
incb
mov
sti
popl
movsb
mov
xlat
dec
cmp
jg
xor
outsl
les
fsubp
push
iret
mov
hlt
mov
orl
mov
cmc
xor
rcl
insb
pop
adc
rcrb
insl
imul
hlt
clc
adc
inc
mov
ror
jl
jnp
mov
push
bound
pushf
xchg
leave
lods
insb
nop
shrb
ljmp
stc
pop
lahf
insl
mov
mov
call
mov
pop
in
jmp
inc
loop
pop
loop
imul
mov
clc
ljmp
xlat
outsl
push
stos
test
xchg
sub
fs
push
mov
lret
xor
xor
out
sub
test
out
aam
sbb
push
repnz
sub
jg
mov
or
mov
movsb
jb
sbb
pop
insl
mov
sbb
int3
dec
mov
add
lret
movsl
clc
mov
ss
out
fildl
pop
dec
test
and
push
aam
imul
fsubr
xor
loope
mov
add
cmpl
add
repz
pop
push
arpl
mov
leave
in
imul
aam
mov
int
test
notl
std
fcoms
jle
stos
je
adc
adc
aas
test
mov
scas
hlt
clc
mov
imul
push
adc
std
sbb
jmp
jo
dec
sbbl
pushf
test
push
and
fisubrl
mov
or
or
in
orb
mov
mov
or
rolb
and
inc
xor
cmp
xor
xchg
icebp
bound
inc
int3
inc
push
movsl
add
jecxz
mov
std
xor
pop
xlat
lret
loop
aaa
out
lahf
inc
cltd
mov
adc
cmp
adc
push
pop
add
push
dec
lea
add
out
mov
aas
jae
push
cmp
das
in
mov
mov
xchg
mov
gs
push
test
cmp
pop
xchg
and
mov
or
inc
aad
jno
jge
bound
xor
scas
push
or
xchg
stos
shrb
mov
insl
adc
sbb
inc
cs
pop
dec
xor
fstpl
test
sti
call
or
inc
cld
rcr
test
pop
scas
push
insl
sbb
aaa
push
mov
jns
rcl
mov
or
mov
shrb
xchg
adc
and
mov
insb
and
movsb
mov
nop
xchg
fists
pop
mov
dec
out
iret
inc
xchg
jnp
aas
xchg
fisubs
aaa
ja
jb
jp
or
sbb
int3
dec
stc
negl
in
dec
jmp
jmp
outsb
leave
dec
pop
adc
loope
jnp
adc
mov
out
cli
js
cmp
add
mov
sbb
mov
push
xor
inc
daa
outsb
test
in
inc
sysexit
das
insb
lock
xchg
mov
dec
rorl
pop
idivl
add
cld
mov
fsubrs
or
addl
addr16
clc
xchg
mov
dec
pop
cmp
jp
xchg
iret
push
mov
iret
pushf
mov
sarb
cs
out
cld
push
inc
mov
xor
mov
xchg
out
insl
mov
mov
sub
jae
mov
into
pop
scas
push
mov
or
push
test
sub
mov
pop
ljmp
mov
push
jecxz
add
es
cmp
popf
sbb
in
dec
push
adc
jbe
jg
cmp
es
mov
push
jg
adc
sbb
jecxz
cmp
sbb
in
pop
add
mov
cmp
aaa
xchg
pop
mov
or
sub
mov
into
jmp
xchg
push
cmp
mov
pusha
jecxz
mov
pop
les
pop
mov
jbe
cmpsl
out
inc
pop
div
outsb
cld
rcrb
sahf
lods
xchg
ret
inc
xor
jecxz
test
push
cmp
jae
xlat
sub
add
xchg
cmc
adc
stos
sub
ficoms
fbstp
mov
or
jle
xor
ljmp
imul
je
scas
int3
sbb
cli
sub
inc
inc
ja
test
cmp
mov
add
dec
data16
outsl
pop
adc
dec
sub
xor
test
ja
mov
aas
lods
mov
mov
and
cmp
add
xchg
daa
test
ljmp
sub
xor
and
pop
jns
ds
add
rolb
rorb
jae
sbb
test
inc
jno
xchg
cmp
fildl
push
or
dec
into
loope
addb
pop
and
mov
jmp
pop
and
inc
frstor
js
or
test
outsl
and
repnz
mov
int
les
leave
mov
enter
mov
leave
mov
push
jae
push
push
push
adc
out
jbe
jmp
adc
out
push
pop
inc
out
pop
cmp
and
cwtl
stos
scas
xor
fwait
or
ffreep
jbe
or
pusha
les
add
inc
xor
push
ds
test
add
xchg
xor
divb
jbe
pusha
adc
lea
out
mov
loop
cwtl
in
enter
adc
mov
jle
adc
insb
stos
stc
mov
hlt
mov
jo
lret
test
les
push
cmpsb
popf
cmpsb
xchg
bound
das
xchg
bound
scas
or
outsb
in
daa
jnp
mov
int
imul
outsl
movsl
or
cs
idivb
ret
mov
ds
clc
inc
iret
xchg
pop
mov
lea
mov
int3
mov
cmpsl
imul
int3
cs
mov
push
xchg
mov
push
mov
or
popa
mov
jp
test
movsl
addr16
mov
pop
cmp
ret
test
jg
insb
dec
les
xlat
sub
push
pop
ret
push
add
adc
lods
pop
jp
je
sub
jo
ja
into
fst
shrl
mov
xchg
xchg
mov
cwtl
es
jmp
xchg
add
push
aas
add
nop
adc
adc
and
xorl
push
push
enter
ss
aam
xor
jecxz
das
pop
outsl
or
add
lock
jge
orb
aam
and
inc
and
adc
xchg
ss
aam
mov
repz
or
mov
fadd
shrl
icebp
add
bound
dec
dec
add
cmp
int3
les
mov
loope
jecxz
enter
lret
cmp
inc
pop
ljmp
das
and
inc
lods
xorl
out
push
jb
js
xchg
std
out
dec
repnz
xor
sarl
sbb
inc
sti
pusha
in
sub
out
sbbb
fwait
es
inc
stc
dec
inc
aad
jne
sbb
adc
and
fs
out
ret
fiaddl
sub
ja
inc
push
sahf
push
inc
or
mov
push
ja
popf
pushf
sub
sub
and
rcll
pop
sub
call
in
add
push
mov
mull
dec
lcall
and
mov
xchg
mov
mov
fcomps
fldl
xor
xor
xor
sub
push
out
add
mov
leave
aaa
and
into
push
iret
test
mov
cmp
add
int3
jg
fmull
sarl
push
and
popa
mov
jo
pop
loopne
repz
inc
pop
not
fnstsw
or
fcmovne
sbbl
pop
pop
ss
jnp
adc
shlb
subb
je
xor
mov
inc
xor
inc
and
mov
push
cmc
xchg
addb
loope
sahf
scas
or
dec
sbb
ret
push
sub
test
test
adc
push
out
in
addr16
and
popa
out
mov
and
ds
dec
jns
push
in
imul
out
xchg
icebp
inc
iret
xchg
xchg
inc
mov
enter
xor
sbb
mov
sbb
imul
jle
imul
gs
mov
cld
cltd
mov
fs
not
scas
outsb
mov
xchg
cmp
clc
repz
push
test
repz
inc
and
add
icebp
addl
cmc
loope
cmp
in
inc
sbb
aam
movsb
shll
add
add
jmp
movsb
sbb
cmp
push
loope
inc
pop
or
cld
incb
mov
flds
sahf
xlat
repz
inc
mov
lods
cmp
push
push
iret
mov
push
cmpb
sbb
push
daa
adc
mov
das
es
subb
inc
jns
popf
push
push
lods
out
nop
mov
mov
es
xor
das
add
mov
mov
and
movsb
jne
fcomi
push
lock
mov
rorl
jge
cmp
daa
js
jg
mov
sub
add
call
repnz
inc
lock
scas
cs
lcall
sti
shll
push
xchg
jge
loop
fcoms
lcall
xlat
push
cli
push
ret
movsb
jecxz
pop
insb
sahf
xchg
out
inc
inc
inc
in
call
ret
and
cmpsb
sbb
jmp
ja
push
adc
cli
stos
sbb
shrb
aaa
bound
pop
addb
and
push
dec
mov
inc
fsubl
cmp
push
sub
xor
fiadds
inc
popf
ret
cmpsl
icebp
es
pusha
mov
xor
dec
repz
push
jecxz
dec
cli
outsl
sar
je
mov
mov
in
inc
inc
inc
pop
mov
fistps
dec
dec
aad
push
pusha
push
stos
cmp
stc
xchg
jno
arpl
movsl
out
and
xor
push
aas
pop
mov
pop
icebp
dec
dec
xor
movsl
push
xor
cmp
mov
mov
stos
adc
jae
push
or
inc
imul
clc
inc
pop
mov
pop
sub
call
and
lds
dec
in
outsl
inc
mov
arpl
cmp
jmp
add
or
mov
scas
iret
outsl
jae
aad
or
fcomps
lds
data16
add
and
ret
lock
cmp
mov
nop
lods
das
test
push
insl
outsb
push
inc
inc
cmpsb
adc
pushf
insb
fldt
lahf
cmpsb
sbb
add
subb
pop
call
shlb
js
out
jnp
imul
and
xor
mov
jmp
adc
mov
mov
xchg
stos
xor
adc
pop
push
and
mov
xor
jns
gs
rcll
cmc
cld
cmp
pop
mov
adc
cmp
lds
or
inc
test
lret
push
fpatan
xor
movsl
xor
push
inc
add
stos
lods
pop
adc
scas
add
or
sbb
lea
push
push
out
jae
jge
mov
mov
loopne
mov
call
shll
lcall
inc
nop
push
mov
xchg
aas
int
notb
out
enter
adc
in
ds
pop
pop
dec
mov
out
xchg
das
scas
mov
inc
lea
push
jb
aad
push
out
adc
cwtl
int
push
ss
push
inc
or
adc
mov
mov
ss
or
fsubrs
ficoms
imul
push
inc
inc
mov
jle
pop
mov
in
cmpsb
shrl
and
pop
mov
mov
pop
mov
je
fldcw
mov
outsb
lods
call
push
inc
lds
xor
or
popf
push
inc
mov
xchg
add
das
hlt
repnz
lea
mov
jmp
sub
fwait
sbb
sub
push
and
mov
push
out
mov
add
pop
les
imull
dec
push
jnp
leave
mov
cmpsb
mov
xchg
lds
fists
lock
sbb
lds
out
cmp
or
in
dec
fidivs
or
push
enter
shll
inc
xchg
xchg
jb
pop
dec
pusha
repz
jecxz
mov
cmp
sbb
sbb
pop
and
cltd
and
and
xchg
inc
or
insb
lock
fdiv
subl
bound
outsl
rcrb
push
adc
adc
test
fiaddl
insb
inc
push
and
sbb
cmp
fs
gs
jecxz
push
xor
mov
int3
jl
mov
je
orl
or
sbb
pusha
mov
icebp
xchg
xor
jbe
xor
stos
cmp
cmc
or
jmp
jnp
pushf
or
pop
sub
or
mov
push
lea
push
ja
mov
inc
leave
sub
int
lahf
leave
jne
les
xor
std
mov
pop
repnz
dec
and
scas
or
stos
imul
daa
rcrl
sub
mov
inc
jns
iret
mov
test
xchg
mov
sbb
jo
jb
or
inc
fimuls
jo
mov
insb
jp
cmp
mov
sbb
ret
testl
jb
xchg
pop
rcll
xchg
imull
clc
cmc
aad
xchg
xchg
inc
xchg
shrl
test
push
mov
scas
sahf
push
xor
or
outsb
shll
addr16
repz
dec
and
scas
cmp
sbb
sbb
mov
cmp
cmp
mov
dec
aaa
lcall
std
mov
movsl
sub
mov
dec
mov
cmp
lods
add
mov
aad
xchg
sarl
jge
icebp
in
jnp
sar
sbb
xchg
stos
jne
mov
inc
fwait
and
mov
cmp
push
add
bound
mov
test
stos
punpcklwd
fwait
lret
outsl
cmp
lret
sarl
popa
inc
out
shl
in
mov
andl
das
cmp
inc
js
jmp
inc
mov
pop
push
fmull
pop
push
pop
jnp
repz
leave
mov
dec
sar
dec
adc
xorl
mov
fstpl
mov
adc
inc
sub
ds
mov
aaa
jecxz
mov
arpl
das
cmp
loope
push
fwait
enter
ret
pop
andl
sbb
insl
scas
mov
aas
dec
mov
imul
lret
mov
pop
and
ja
mov
aad
mov
push
pop
xor
dec
inc
lods
data16
cld
cltd
rolb
test
dec
add
iret
xchg
fadds
push
sahf
imul
push
test
lock
cmpsl
and
inc
out
in
popf
loop
mov
lret
ds
filds
negl
repnz
arpl
mov
ja
ds
stos
fwait
or
outsb
cmp
jae
pop
out
dec
add
int3
iret
dec
pop
sbb
add
out
mov
stos
inc
push
lret
dec
data16
pause
xchg
push
ja
sub
aas
mov
jns
push
into
out
push
sub
adc
mov
inc
lret
pop
sub
dec
nop
push
xchg
mov
and
into
cld
jae
inc
enter
cs
push
sub
incb
mov
mov
and
xchg
dec
push
ficoml
mov
adc
dec
cmp
jbe
cmp
mov
xlat
xlat
sub
addl
rclb
popf
mov
mov
sub
fwait
les
ja
xor
add
ret
cmp
mov
cmp
subl
xchg
ss
or
xlat
stos
fdivl
xor
lods
push
sahf
adc
addr16
xchg
adc
and
xor
cli
cmc
push
outsl
jge
lahf
cmpsb
in
mov
xchg
repz
mov
pop
xor
lods
fiadds
mov
xchg
shlb
lods
lods
repz
test
dec
in
int3
jmp
outsl
pushf
xor
push
neg
push
popa
jecxz
ret
and
adc
mov
test
jmp
mov
sub
shll
mov
fwait
outsb
shl
repnz
mov
inc
mov
lahf
rcrl
adc
ficomps
mov
jns
int
shr
mov
add
dec
js
xor
imul
or
push
push
xchg
rcrl
movsb
prefetch
or
xlat
aaa
mov
adc
pop
jmp
pop
jp
enter
mov
enter
insb
cmpsl
inc
mov
cmp
popf
push
or
popf
dec
or
imul
sbb
loop
and
jns
push
jnp
addl
pop
and
or
in
packssdw
mov
fdivrl
mov
call
stos
mov
arpl
or
mov
enter
dec
or
pop
fnstenv
jp
mov
add
loop
into
into
or
inc
or
push
push
jl
mov
dec
popf
jnp
xchg
pop
add
loop
mov
push
jmp
les
in
mov
cwtl
push
not
cmpsb
push
sar
cmp
dec
push
pusha
in
mov
outsb
data16
add
out
stos
js
shrb
lahf
lcall
and
cmp
repnz
pop
inc
cmpsb
cltd
daa
jb
filds
ss
cs
xorb
sbb
ret
push
aaa
fsubl
clc
out
add
xchg
adc
lods
subl
mov
xlat
adc
out
jb
push
mov
aad
lock
sbb
jecxz
pop
lcall
adc
in
dec
add
cld
push
jecxz
scas
arpl
inc
mov
stc
shrl
and
mov
mov
loopne
cmpsb
popa
idivl
push
sbb
cmp
out
cmp
mov
sbb
sti
faddl
inc
pop
dec
pop
mov
xor
sub
jbe
xor
fisubl
mov
fst
jge,pt
clc
int
inc
push
insl
mov
mul
push
sbb
or
shlb
js
ljmp
shr
hlt
loop
pop
adc
sbb
mov
dec
pop
into
xchg
repnz
mov
or
mov
adc
ret
jge
or
lods
ret
testl
and
push
sti
add
int
iret
rcl
xor
jae
icebp
out
dec
cmp
lret
cmpxchg
lret
pop
test
clc
sbb
mov
xor
sar
jae
pushf
pop
test
cmp
aaa
mov
fadds
jge
xor
xlat
xor
idiv
and
rclb
out
rol
cld
mov
aam
pop
mov
and
adc
mov
scas
fcmovbe
mov
mov
decb
adc
cmpsl
inc
mov
loop
iret
js
fstl
arpl
jo
jge
adc
jae
mov
fnstsw
xchg
push
sub
dec
lock
sbb
arpl
pop
int3
ljmp
add
add
jne
fisttpll
jg
inc
xor
lret
sbb
dec
js
and
je
shrb
testb
icebp
or
aas
ss
jo
pop
sti
dec
and
ljmp
orps
mov
or
push
stos
pop
lods
or
js
and
scas
sbb
cmpsb
add
outsb
test
rorb
xor
aaa
jp
scas
pop
xchg
jge
rorl
aaa
in
and
or
mov
jae
adc
cmp
ljmp
fwait
push
icebp
gs
push
push
mov
outsb
sub
push
sbb
or
andl
jle
sub
adc
out
lds
sub
shrl
add
ds
mov
fsubrs
lds
wbinvd
adc
jl
add
jo
mov
add
inc
mov
and
or
lea
fdivr
or
rolb
lods
fisubs
mov
negb
dec
lock
gs
mov
cltd
pop
push
jmp
inc
push
enter
xchg
add
es
xchg
push
outsl
sub
sarl
jbe
inc
aaa
mov
mov
or
and
aas
xchg
xor
insb
push
inc
mov
ljmp
popf
in
fists
pop
popf
test
mov
lods
or
shlb
pusha
jnp
mov
dec
fisubrl
repz
cwtl
dec
mov
pop
jg
insb
lock
scas
rclb
or
int3
xor
or
sbb
fcmovnb
push
mov
cmp
fcom
and
lods
cmp
sbb
dec
add
xor
mov
inc
outsb
sahf
movsb
jle
xchg
lahf
in
sbb
add
adc
sbb
mov
push
sbb
sbb
ljmp
dec
scas
jnp
shlb
out
stos
sub
xchg
xchg
nop
cmp
sbb
testb
imull
mov
xchg
jbe
loopne
jp
jo
jae
push
sub
imul
jg
lahf
insb
jne
adc
cli
mov
insl
xor
mov
xchg
mov
lret
sub
jmp
or
xchg
jnp
imul
lret
adc
add
sbb
xor
sub
jno
push
pop
fwait
repz
lods
sub
inc
dec
pop
out
je
imul
mulb
clc
icebp
test
add
mov
int3
or
nop
maxps
sub
add
adc
outsb
daa
rol
fwait
adc
add
sbb
inc
push
sub
mov
adc
or
cwtl
cmp
ss
mov
or
cmpsb
rclb
sbb
pop
xchg
lock
call
fistpll
add
push
jg
mov
mov
mov
loopne
inc
or
push
dec
sub
pushf
dec
sub
lea
or
pop
sbb
mov
lcall
xchg
adcl
out
pop
xchg
inc
outsb
mov
mov
xchg
rcrl
adc
sbb
clc
testl
xchg
push
cmpsl
and
in
movsl
mov
pop
testb
fucom
push
das
sbb
ja
xor
push
cmp
outsb
mov
mov
xor
mov
jp
or
js
lahf
mov
adc
filds
into
stos
daa
push
cmp
mov
jmp
jle
sub
leave
or
jo
cmpsl
lds
int3
cmpsl
dec
lcall
popf
cmpsb
push
adc
pop
inc
or
out
xchg
pop
push
or
btr
je
pop
imul
fwait
mov
jno
xchg
cwtl
jmp
fstpt
mov
add
add
jbe
mov
xor
fisttpl
das
inc
jmp
mov
xorb
pusha
lret
mov
dec
sbb
insl
jmp
mov
cmp
sub
int
add
mov
or
das
pop
and
push
scas
xchg
adc
inc
gs
fcomip
enter
repnz
or
outsl
xor
sub
fnsave
in
xor
adc
dec
loope
arpl
pop
xchg
adc
xchg
scas
notl
inc
fists
pusha
push
mov
inc
out
cmp
lock
adc
pop
sub
pop
cmp
in
ja
repz
pop
fcomps
shr
loop
mov
mov
xchg
xor
cmpl
fs
sbb
ficoml
mov
inc
shl
les
sbb
pop
int
movsl
mov
jnp
xor
adc
mov
cs
lods
test
mov
stc
xor
sub
aas
push
outsl
dec
xchg
iret
adc
iret
xor
cmp
loope
aaa
mov
arpl
xchg
jne
rcrl
add
push
jp
pop
leave
insb
jp
sub
fs
xchg
cwtl
scas
shl
paddw
push
and
in
clc
xchg
adc
std
shll
push
and
adc
fidivrl
ror
sub
pop
aam
aas
stos
xchg
dec
aaa
pop
clc
sbb
push
fidivl
lret
sub
cmpsb
pop
cs
int
aad
orb
cmc
es
popa
adc
xchg
js
sbb
in
adc
repnz
mov
mov
adc
insb
add
ss
adc
xor
pop
xchg
in
pop
shr
ja
xchg
adc
sub
mov
push
xchg
dec
loop
or
cmp
pop
fcoml
je
mov
loop
lods
lret
and
jb
mov
xor
add
dec
cmp
and
xchg
xchg
xchg
fxch
cmc
fistpl
daa
fsubrl
scas
push
pop
xchg
push
or
out
fs
scas
leave
add
mov
loopne
or
ret
lods
mov
loopne
inc
fsts
mov
out
pop
ds
xchg
lods
inc
inc
ror
insl
and
jb
lret
pushf
call
mov
rcr
push
aas
adc
mov
cmp
dec
stc
or
mov
int
add
es
jae
xchg
sub
adc
cmp
xor
in
cmc
pop
test
jge
stos
nopl
icebp
fsts
ja
inc
mov
push
cld
lods
rolb
push
sub
nop
or
add
xor
shll
xor
mov
enter
fldz
sahf
stc
dec
std
cmp
lea
pusha
adc
mov
and
and
push
dec
add
cmpsl
pop
ljmp
push
cmpsb
sti
push
adc
dec
cs
mov
mov
dec
std
pop
jge
js,pn
js
test
loopne
adcb
sub
fdivs
test
xor
iret
dec
xor
jge
subl
pop
sbb
or
inc
test
jge
mov
inc
mov
or
call
xchg
call
xor
lret
sub
cmp
outsb
out
imul
inc
dec
sbb
mov
int3
push
aaa
and
or
fwait
push
rol
iret
test
cmpsl
jae
bound
push
shufps
xor
dec
inc
sbb
cli
pop
xchg
shlb
dec
or
jnp
sbb
mov
out
jnp
mov
fs
xchg
scas
sub
movsb
mov
mov
cld
es
mov
cmpsl
scas
xchg
jl
cmp
cmp
bound
je
fistl
xchg
inc
imul
dec
popf
sarb
xlat
icebp
pop
sahf
push
lds
lods
hlt
repz
decl
mov
adc
insb
push
iret
cmpb
andb
enter
push
xor
dec
mov
repz
mov
jb
pop
int
jb
pop
push
mov
out
aaa
and
and
add
scas
clc
xchg
add
insb
cs
fwait
and
mov
jl
cmpb
fldenv
int
pop
ljmp
add
jl
in
push
sbb
test
fdivs
xchg
in
dec
in
xorb
adc
pop
scas
insb
int
cmp
imul
rdpmc
and
add
and
jl
shlb
xor
mov
fistps
add
das
imull
testb
add
adc
mov
jns
push
adc
push
add
imul
outsb
lcall
cmp
inc
out
out
xchg
inc
mov
mov
jno
out
mov
and
sar
inc
ret
cld
xor
ror
pop
scas
loopne
repz
and
