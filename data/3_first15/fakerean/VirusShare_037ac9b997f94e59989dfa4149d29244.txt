push
push
call
andl
push
push
call
pop
pop
movl
jmp
xor
inc
ret
mov
movl
xor
inc
call
ret
push
mov
push
push
push
push
xor
sub
mov
mov
mov
mov
and
jns
dec
or
inc
cmp
jne
cmpl
jle
mov
imul
lea
mov
xor
jmp
test
jne
cmp
jle
mov
xor
lea
mov
sub
mov
addl
and
rol
add
inc
cmpl
jb
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
leave
ret
push
mov
sub
push
push
call
push
call
mov
cmpl
jge
push
call
mov
mov
push
push
call
cmp
jne
movl
jmp
mov
xor
mov
pushl
mov
mov
call
pop
cmp
je
lea
jmp
call
test
je
push
push
push
call
mov
mov
xor
mov
div
mov
push
pop
sub
mov
mov
xor
push
pop
div
mov
mov
shl
mov
push
mov
neg
sbb
and
push
pushl
call
mov
push
pushl
pushl
call
add
push
call
push
call
mov
mov
push
call
leave
ret
int3
int3
int3
repz
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
neg
jmp
push
push
push
push
push
repnz
insb
repnz
xchg
xlat
call
dec
pop
dec
test
jnp
jbe
nop
add
popa
push
adc
enter
fwait
loop
adc
inc
lcall
std
int3
loopne
shll
push
outsl
lock
mov
test
inc
and
jecxz
adc
in
or
hlt
mov
jmp
pop
test
mov
xor
pop
adc
stos
icebp
movsb
push
cmpsb
loope
pop
roll
std
cmp
dec
pop
dec
xor
stos
mov
cmp
mov
stc
add
cltd
jns
bnd
lahf
loopne
loope
js
push
jge
call
stos
xor
cmpsl
ds
jb
js
sub
xchg
out
sbb
dec
push
push
dec
adc
pop
dec
mov
cmpsb
ja
inc
loope
sub
scas
rorb
adc
pop
leave
mov
repz
call
loopne
pop
adc
cmp
mov
ret
adc
fcmovu
add
shll
rcl
dec
leave
sub
pop
mov
lret
mov
mov
dec
pop
fisttps
insl
test
jg
pop
out
jbe
and
lahf
outsl
cltd
sbb
cltd
movsb
testb
and
pop
ret
int
jno
jle
je
jb
in
fildl
mov
mov
mov
adcb
mov
out
push
cmp
sub
jmp
test
dec
sub
and
jecxz
and
cmp
fiadds
lcall
adc
mov
mov
xchg
addr16
cld
sbb
jo
cld
int3
or
push
jge
mov
and
sbbl
popf
xchg
cmc
xor
andb
mov
add
push
and
lock
and
pusha
push
lahf
iret
dec
std
ret
jno
mov
sbb
adc
add
sbb
fldl
pop
jbe
add
push
jno
inc
inc
pop
or
rolb
decb
push
mov
mov
ds
cli
adc
or
rcll
mov
inc
fisubrs
in
or
jbe
jnp
adc
int3
imul
insl
jbe
rcrb
and
adc
hlt
lods
cmp
mov
xchg
cmp
ret
adc
std
jmp
pop
jge
out
ret
push
mov
push
test
lods
data16
inc
outsl
sbb
dec
test
aam
and
cmpsb
lock
fcompl
sub
add
mov
stc
int
jmp
ja
pop
adc
push
push
mov
inc
push
pop
mov
and
mov
incb
jbe
and
sub
mov
xor
mov
outsl
imul
fwait
add
push
xor
push
js
js
jle
sub
inc
xchg
les
sti
mov
rcll
lea
ds
pop
cmp
rclb
ss
jecxz
ret
test
pop
fsubs
daa
mov
adc
or
push
loopne
add
jmp
push
xchg
inc
fdivs
shlb
clc
rorb
iret
out
test
aam
cmpsl
ret
mov
mov
jno
inc
call
mov
mov
mov
repnz
adc
or
jge
stc
sub
mov
pop
mov
add
outsl
mov
in
andb
xchg
xchg
xchg
rcll
inc
fildl
inc
pop
jno
cli
fsubr
test
cmp
jmp
adc
int
fcom
mov
dec
sub
fst
out
aad
into
adc
pop
cmp
xor
jl
imul
xchg
popl
mov
and
mov
push
sub
xchg
insl
stc
adc
out
imul
inc
test
decb
lea
clc
test
imul
xor
jno
rorb
bound
cmp
sahf
inc
dec
xlat
and
pop
popf
xor
aas
pop
fwait
fwait
cmp
jg
enter
mov
bound
sub
ss
sub
adc
mov
mov
mov
imull
xchg
movsb
xor
and
fstps
sbbl
jp
mov
out
or
cmp
rcr
in
out
mov
add
mov
mov
stc
jnp
pop
sbb
addb
stos
in
inc
test
imul
push
pop
jb
rcrb
fcmovne
fcompl
insb
leave
xor
daa
dec
test
adc
jne
xor
in
movsb
add
mov
push
rorb
daa
out
mov
arpl
dec
mov
lods
test
in
mov
lods
pushf
inc
sbb
or
das
fidivrs
fisubs
icebp
ss
in
push
sbb
cmp
jge
cmc
rclb
xchg
xchg
xor
push
shll
xchg
fstps
mov
int3
psllq
inc
inc
xchg
sub
xchg
mov
mov
ja
mov
ljmp
push
jno
pop
sbb
mov
sbb
mov
xchg
ljmp
neg
loopne
or
addr16
mov
pop
mov
lds
fildll
jl
xor
in
ja
xchg
idivb
ljmp
jns
xchg
inc
sub
pushf
push
push
mov
int
sbb
mov
fcmovne
xchg
das
jno
xchg
popa
xor
loope
inc
fdivrs
cmpsl
in
stos
lcall
add
push
mov
pop
sbb
pop
roll
sbb
sub
adcl
aaa
out
insl
test
popa
jge
jp
mov
lods
scas
daa
push
jne
int
inc
fcoml
cli
xor
push
sub
ja
pop
xor
shrl
ljmp
or
add
dec
repz
ljmp
enter
aam
pop
test
jae
dec
inc
sub
xchg
out
arpl
sbb
movsl
stos
repnz
adc
leave
aaa
pop
movups
iret
in
xchg
test
insb
das
cmp
mov
dec
inc
lret
mov
fcmovnu
repnz
dec
mov
push
inc
cwtl
dec
cmpsb
jmp
cli
js
jmp
outsl
popa
movsb
imul
lahf
frstor
sahf
js
and
inc
outsb
aam
scas
repz
push
pop
pop
stos
and
cmpb
add
pushf
inc
out
aad
xor
in
add
nop
inc
add
dec
popf
dec
jne
js
mov
xor
in
jns
adc
jbe
scas
sub
mov
lcall
fcoms
pop
mov
jmp
shrl
and
imul
jg
mov
hlt
js
pop
cmpsb
cmp
inc
adc
adc
lods
fwait
js
sub
test
fdivr
in
fsubp
test
nop
enter
aad
in
movsb
stos
leave
test
push
push
ljmp
divl
inc
leave
ret
fstpt
je
fs
mov
rcrb
jae
sbb
push
call
push
mov
jecxz
enter
outsb
inc
rcrb
xor
push
jns
adc
push
scas
push
push
pop
and
push
das
and
cmp
xor
cltd
lock
out
insl
mov
pop
daa
inc
sub
and
mov
arpl
cmp
nop
ficomps
dec
pop
out
leave
add
pushf
dec
aad
sarb
pop
push
lret
and
jne
outsb
sbb
loope,pt
cwtl
fldt
push
push
ret
cwtl
imul
roll
xor
fsubrs
push
mull
mov
cmc
loopne
adc
dec
mov
fdivs
js
aad
and
repnz
cs
xlat
scas
push
push
xchg
or
push
mov
rcrb
jne
leave
sub
iret
dec
dec
push
idivb
hlt
push
push
jge
ja
cld
inc
addr16
xchg
inc
mov
sub
daa
addr16
ss
cmpsl
lret
pop
scas
cltd
or
jno
cmp
loope
cmpl
ret
in
push
ret
int3
adc
in
out
jbe
add
ljmp
xlat
or
jbe
push
leave
pop
sbb
int
pop
dec
xchg
jp
xor
mov
dec
cld
mov
cli
iret
js
cmp
xchg
rol
jns
mov
repz
ss
push
xor
sub
enter
stc
dec
notl
popa
or
and
fdivs
sti
in
pop
adc
loopne
mov
and
push
bound
mov
add
sbb
push
stos
xchg
sti
adc
adc
xchg
out
and
cli
xchg
aas
jg
push
adc
loope
pop
inc
outsl
and
lret
mov
lods
cmp
mov
mov
push
ds
loop
shll
mov
stos
test
and
aaa
mov
mov
pop
cmp
jl
xor
lds
stos
fwait
push
mov
lds
lret
mov
ret
ds
jg
mov
and
and
inc
mov
ljmp
xchg
and
mov
data16
xchg
cs
clc
add
jp
fisubs
aas
dec
and
mov
aam
movsb
lahf
pop
pop
cld
xchg
jecxz
mov
pop
dec
or
call
in
sbb
mov
out
mov
sbb
insb
mov
mov
push
xchg
add
add
daa
sub
adc
mov
sub
arpl
out
daa
cmp
pop
cmc
popf
insl
mov
les
dec
dec
mov
aad
loop
les
adc
mov
dec
movb
ljmp
xor
dec
jo
cmp
lret
movsl
xor
shll
lock
xchg
sub
repnz
cmpsl
gs
dec
shrb
dec
aas
or
mov
repnz
ja
cmp
push
orb
pop
jecxz
adc
leave
popa
lret
mov
jno
test
push
sbb
fs
aas
sub
hlt
icebp
add
push
jnp
push
scas
jge
loope
test
rcll
pushf
push
iret
jno
add
sbb
loope
shlb
stc
cltd
jge
ljmp
pop
jecxz
fsubrs
xchg
mov
dec
mov
push
xchg
test
lret
dec
xor
sub
mov
xchg
push
cmp
adc
jbe
call
xchg
sub
ret
xchg
adc
and
jmp
andb
call
cltd
xchg
out
push
xchg
sarb
push
push
or
test
fisubs
cltd
lock
and
sub
mov
push
dec
out
cmp
xchg
push
or
xchg
insb
aam
jo
jmp
jns
sbb
jbe
orl
pushf
jl
lods
sub
inc
jns
pop
fisubs
xchg
in
test
fcoml
or
ja
adc
jle,pt
and
lcall
rcll
daa
mov
pop
aam
jl
pop
xor
jb
jns
nop
mov
push
xchg
stos
movsl
xchg
loop
sub
xor
xchg
add
ljmp
sbb
adc
push
fwait
lods
and
push
lcall
mov
leave
jle
cmp
sub
jl
sub
pop
cmp
add
std
inc
cmpsl
xchg
mov
mov
in
lods
push
pushf
ret
test
iret
dec
outsl
inc
mov
lods
shlb
sub
test
in
fnstsw
iret
pop
pop
pop
in
mov
push
cmp
sub
test
and
xor
test
push
or
cld
lea
cmp
xchg
adc
xchg
roll
addr16
xchg
das
outsl
fisttps
in
in
cmp
cmp
sarl
faddl
repnz
testb
aaa
pop
xchg
jo
mov
call
stos
xchg
fidivrl
xor
pop
add
cmc
or
out
sbb
jb
in
pop
rcrl
xchg
xchg
adc
mov
mov
sbb
jg
sub
sub
dec
fidivs
add
xchg
pop
push
xor
xorb
fwait
and
sahf
les
inc
mov
rcrb
psrad
mov
clc
sbb
fs
bound
dec
jb
out
iret
and
fcmovne
cmpsl
sti
push
hlt
stos
repz
ja
loopne
cwtl
int
push
out
mov
push
push
ds
loope
mov
xchg
iret
push
push
or
rol
mov
lods
inc
ja
out
nop
pop
insl
xchg
jae
addr16
add
scas
lods
push
sbb
mov
cmp
pushl
call
push
sbb
cltd
pop
inc
test
dec
xor
pop
fidivrs
cwtl
dec
xchg
aad
cld
sbb
aam
xor
roll
repnz
imul
loopne
call
nop
sub
add
loope
cmc
in
jae
cltd
test
icebp
push
pop
fildl
popf
pop
xor
mov
xor
sub
dec
popa
add
pop
mov
adc
rorb
push
lods
sti
lret
push
xchg
sub
or
cmpsb
xorl
movsl
xchg
sub
push
imul
shlb
aad
adc
popa
insb
fstpt
push
rorb
stos
push
and
inc
pop
shl
sbb
js
xlat
outsl
xlat
scas
sbb
into
enter
popa
loopne
mov
sbb
shll
sbb
or
fs
std
repnz
push
pop
pop
xchg
incl
cmp
dec
pop
out
adc
jae
insl
pop
xchg
ficoml
daa
or
fdivs
cmc
icebp
push
ret
xchg
fdivl
shll
push
dec
cmp
cmp
fldcw
push
add
ficoml
shll
inc
cmc
or
inc
fcompl
loop
cmp
jns
cmpsb
jae
mov
fnstenv
mov
mov
jmp
outsb
in
aam
pop
mov
sub
sub
jb
xchg
or
cwtl
aaa
pop
test
std
mov
out
mov
inc
popa
in
or
pusha
xlat
xchg
jne
cmp
insb
mov
pusha
cld
test
jbe
lea
mov
jns
in
ret
push
jnp
int3
sbb
imul
xlat
pop
adc
cld
add
pop
imul
arpl
movsb
addl
in
pop
cli
test
xlat
mov
push
les
bound
cmpsl
add
cltd
dec
into
lods
dec
add
cmp
cmp
mov
lcall
push
pop
mov
mov
movl
mov
lret
scas
push
imul
mov
out
inc
cltd
into
or
loopne
lret
jmp
jnp
sbb
xchg
adc
xchg
inc
adc
jl
incl
add
cmp
lahf
fistps
in
cmp
movsl
sysenter
push
xchg
out
cmp
xor
xchg
pop
dec
scas
inc
mov
dec
out
mov
sahf
mov
mov
dec
add
xchg
stos
mov
es
jno
mov
scas
xchg
in
cmp
mov
cmp
addl
sub
cmp
shll
ret
testb
outsb
inc
and
movsb
or
jmp
out
xchg
lock
adc
push
cld
aas
mov
mov
sbb
or
dec
inc
frstor
enter
cmp
arpl
cs
mov
lods
cmp
mov
pushf
mov
mov
adc
pusha
inc
mov
scas
addr16
fs
ret
and
out
or
mov
lods
jne
ljmp
cld
cld
sub
scas
cmp
notw
mov
es
cltd
cmc
ljmp
jb
add
and
adc
popa
dec
gs
pushf
out
dec
sbb
andl
pop
dec
popl
sti
adc
pop
stc
push
imul
jmp
push
popf
adc
pop
mov
jmp
sub
xchg
sbb
push
into
xchg
lods
xchg
cmp
jo
sbb
or
sbbl
mov
jbe
aas
divb
adc
jge
jb
lret
ret
lahf
pop
cmp
rorb
xchg
cmp
cmpsl
mov
mov
inc
jo
mov
lcall
push
sbb
mov
mov
add
xchg
add
mov
mov
pop
xor
pop
jae
xchg
imulb
rcrb
test
out
jne
faddp
daa
sbb
outsb
xor
in
addr16
or
push
inc
jmp
in
dec
lcall
shll
pop
push
mov
insl
ret
xchg
mov
jns
dec
ret
aad
test
lods
jmp
sub
loopne
inc
arpl
bound
outsb
sub
rclb
pop
mov
push
push
sbb
mov
sbb
shlb
mov
xor
testb
mov
push
popa
popf
fs
sub
imul
push
cld
dec
add
jmp
test
adc
mov
ret
repnz
sub
and
push
popa
cs
xlat
ja
out
pop
and
dec
jle
sub
insb
fsubp
cltd
mov
enter
pop
inc
shll
stos
out
imul
test
aaa
mov
push
push
test
sahf
pusha
mov
loope
mov
sub
xor
dec
dec
push
dec
test
aaa
lcall
out
mov
pop
adc
cli
ds
ret
stc
inc
adc
jo
mov
inc
jns
xor
cmp
fs
xor
mov
gs
pusha
fistpll
mov
jb
mov
cmp
pop
and
pusha
cmp
xchg
insb
mov
ja
push
push
mov
xor
sti
xor
lahf
jl
pop
xor
dec
adc
xchg
test
cmc
les
xchg
xchg
pop
inc
inc
enter
jnp
icebp
cmp
or
and
in
in
ja
cmp
vcvttsd2si
push
outsl
mov
xchg
push
sbb
mov
jmp
lcall
dec
push
fists
out
adc
mov
dec
mov
mov
mov
aam
sub
push
out
bound
rolb
lret
or
push
dec
push
je
test
aam
testl
popf
sub
pusha
adc
sub
sbb
xor
cmp
cmp
fdivrl
inc
test
inc
dec
push
sbb
imul
nop
push
shlb
dec
mov
mov
mov
push
mov
xchg
xchg
or
lcall
cmp
xorps
fildl
mov
fbld
ljmp
lds
std
push
jmp
sub
inc
addl
pusha
dec
mov
cs
mulb
xor
test
out
aad
shl
pop
testb
jp
test
adc
ljmp
loope
lahf
lea
adcb
xchg
adc
stos
xlat
loop
add
add
push
cmc
cmp
gs
push
mov
mov
fs
add
cmp
pop
sbb
cmpsl
push
cmp
cmc
sbb
js
lahf
jg
lds
push
mov
dec
xchg
adc
mov
fs
rcrb
push
add
rcrb
xchg
push
ds
mov
ret
lcall
mov
mov
hlt
rolb
fistl
jb
mov
push
insb
stc
test
mov
sub
filds
mov
icebp
fcoms
mov
sbb
mov
imul
inc
push
inc
nop
ds
sbb
jmp
jmp
pause
pop
mov
shrb
int3
loopne
jl
jnp
pop
lahf
cld
xchg
mov
xchg
xchg
push
and
dec
sahf
stos
dec
cmp
sarb
and
sahf
scas
ljmp
mov
mov
movsl
aad
scas
jo
ljmp
cwtl
mov
mov
sbb
outsb
iret
cli
sbb
pusha
sbb
jne
rcr
dec
inc
hlt
jl
jnp
nop
and
stos
inc
ds
loopne
mov
iret
add
in
aas
or
mov
stos
imul
and
adc
add
mov
stos
dec
daa
ffree
add
int3
xchg
jp
push
jae
movsb
test
mov
push
pop
xchg
ror
jb
cmp
dec
or
jl
pop
fistpll
mov
lcall
dec
mov
sar
jne
cmp
popf
outsl
nop
pushw
jle
decl
out
enter
pop
out
and
add
adc
dec
mov
out
test
xchg
jns
loop
fisubrl
movsl
rcrb
xor
and
inc
and
xor
xchg
dec
cwtl
xchg
lods
lcall
insb
insb
sub
pop
ja
adc
stc
cmp
push
adc
push
pop
ss
mov
xchg
nop
sub
jne
or
bound
and
pop
push
sub
mov
jge
into
inc
xchg
jle
insb
mov
idivb
mov
ds
and
aaa
jnp
jbe
push
inc
stos
hlt
inc
mov
out
push
push
test
enter
jmp
bound
cwtl
fldcw
pop
sub
adc
adcl
jnp
pop
mov
imul
cwtl
scas
movsl
cmp
and
sub
jo
fimull
xchg
adc
xchg
jbe
adc
fsubl
repz
push
adc
pushf
xchg
movsb
pop
sbb
ss
clc
jg
enter
and
fldl
push
orb
mov
mov
pop
subb
enter
mov
add
mov
push
ja
cmp
jle
in
mov
decl
jecxz
pop
inc
dec
daa
testb
push
mov
dec
and
dec
pop
addr16
in
jb
mov
jo
inc
push
sbb
je
out
push
pop
cmpsl
mov
fildl
add
mov
sarl
popa
stc
cmp
inc
xchg
lds
and
and
leave
mov
xlat
mov
out
test
fldcw
out
xlat
movsb
or
test
shl
fistpll
or
sbb
repnz
push
sub
adc
cmpl
mov
mov
pop
add
push
and
roll
jecxz
and
inc
xchg
aas
mov
jb
fildll
xor
int3
jno
xorb
call
xchg
dec
push
jbe
out
dec
out
adc
xlat
pop
sub
sqrtps
insb
inc
mov
fs
xlat
cmp
inc
inc
jmp
pop
mov
dec
subl
orb
das
sub
lea
stos
jp
pop
loopne
in
imul
mov
xchg
ds
fldt
movsb
es
repnz
js
test
or
pop
lcall
stos
inc
xor
movsl
mov
mov
and
pop
adc
bound
outsb
pop
daa
sub
jp
mov
lahf
push
inc
mov
into
or
sub
and
dec
lahf
and
mov
loopne
xchg
jg
bound
test
xor
adc
mov
adcl
rorl
jl
test
mov
push
imul
movsl
lcall
jns
xchg
or
adc
adc
incl
jne
push
lret
movsb
xchg
daa
out
out
adcb
shlb
loopne
bound
sub
sti
jecxz
fbld
movsbl
pushf
outsb
fwait
push
leave
mov
inc
adc
adcb
inc
cltd
adc
or
xchg
lods
lcall
xor
cmpsb
or
arpl
pop
mov
inc
or
scas
or
push
subl
fldl
xlat
lret
sub
cmp
mov
inc
mov
ja
inc
inc
add
pop
adc
xchg
and
sub
xor
fbstp
das
inc
insl
push
xor
std
push
and
dec
aas
fcomp
imul
pop
mov
ja
pop
or
xorl
dec
mov
icebp
imul
push
jge
popa
mov
lods
xor
call
and
repz
jb
or
cli
sub
iret
gs
shl
cmp
popf
shlb
xor
pop
xchg
jecxz
mov
sti
push
mov
rcl
cmp
jne
dec
xor
lods
fldz
test
lahf
push
stc
inc
dec
mov
ficoms
sbb
nop
dec
ret
sbb
sub
xor
icebp
sub
fnstcw
loop
cmp
jne
mov
call
mov
jns
dec
mov
scas
sarl
push
adc
pop
dec
add
stc
jl
lods
pop
mov
adc
loop
pop
rorb
ret
imul
test
xchg
andb
jo
cmp
cmpsb
daa
mov
mov
lock
push
adc
mov
xchg
jle
test
lods
mov
out
inc
adc
push
mov
sub
push
shr
inc
pop
add
dec
mov
jmp
popa
popf
nop
jae
cmp
addr16
cld
mov
mov
pop
sub
mov
sbb
pop
std
jnp
mov
je
push
mov
jge
adc
lret
scas
fimuls
add
int
in
cmc
cmp
pop
cmpsb
lds
cmpsl
inc
rorb
ljmp
icebp
add
cmp
jmp
xchg
xchg
lods
sahf
lret
jecxz
test
cmc
mov
test
js
inc
pop
les
dec
push
inc
in
cmpsb
sub
xor
pop
adc
nop
push
mov
test
fadds
ret
addr16
dec
and
adc
negl
inc
jp
sbb
push
jmp
jge
mov
shrl
cmp
lds
mov
imul
mov
push
js,pn
outsl
test
cs
sti
into
lret
push
sub
sub
gs
fcmove
pop
aad
xor
fstpl
mov
call
cmp
inc
inc
push
fsts
dec
add
sub
push
leave
sub
rolb
mov
push
mov
and
cmp
and
jp
in
mov
mov
xchg
sub
pop
rcll
rcrb
xchg
mov
movl
mov
and
sahf
lret
lcall
filds
or
in
inc
outsb
inc
shlb
imul
repz
fndisi(8087
ljmp
imul
dec
inc
mov
out
mov
or
push
inc
dec
ljmp
adc
push
mov
fsubrs
outsb
jbe
and
cmc
inc
in
ss
jp
xchg
jge
mov
add
and
call
les
lds
adc
int
mov
inc
add
fwait
cmp
cmp
je
lret
lret
rolb
xor
cmp
test
lods
dec
inc
sarl
pop
ret
imul
je
cmp
cs
dec
jno
insl
outsl
ror
fwait
pop
jno
lods
jns
icebp
push
ja
mov
lret
imul
cwtl
add
les
dec
xor
push
push
mov
xchg
out
push
pushf
sti
cld
jmp
fwait
pop
imull
mov
subb
adc
adc
sbb
lret
xchg
adc
fs
mov
push
lods
mov
fdivrl
addr16
lea
mov
sub
movsl
iret
xor
xchg
adc
popa
add
dec
mov
out
inc
pop
pop
jmp
iret
cltd
fwait
arpl
or
xchg
shrl
into
jb
xchg
mov
std
test
mov
push
pushf
pop
lock
and
sub
inc
or
int
jb
mov
lods
push
icebp
fdivrl
das
push
sbb
cmp
pop
js
mov
out
inc
mov
jmp
mov
inc
mov
stc
fildl
stos
sub
or
pop
out
mov
mov
mov
cmpsb
xor
adc
dec
mov
adc
test
push
add
out
or
sub
test
sub
or
push
dec
shlb
inc
pcmpeqb
aas
icebp
cmpsb
loope
ds
xchg
inc
mov
sbb
mov
pop
sub
ror
or
pop
lahf
pop
dec
ret
insb
jge
dec
xchg
sahf
push
mov
mov
cmp
stos
push
adc
sub
push
imulb
aaa
into
ds
inc
or
ret
aad
mov
and
or
adc
adc
inc
inc
stc
paddsw
add
sbbb
dec
add
sbb
mov
add
sbb
std
sti
testl
xor
adc
ja
push
repz
mov
pop
ficoml
mov
mov
rorb
pop
xor
mov
push
sti
jecxz
mov
add
adc
leave
aad
inc
inc
loopne
fldl
jecxz
pop
addr16
popf
lock
pop
inc
jg
lcall
cmpsb
fsubrl
dec
int
cltd
sti
ss
pop
jl
inc
loopne
movsl
ljmp
xchg
js
and
jno
dec
xchg
push
cmp
xchg
mov
es
mov
lods
lret
adc
and
adc
loop
call
ret
int
es
push
stc
xchg
bound
pushf
mov
icebp
jbe
xchg
mov
jo
pop
out
movsb
sbb
ficoml
test
lods
dec
bound
xchg
pushl
mov
movsb
mov
pop
imul
in
pop
out
cmp
inc
mov
rcll
aaa
out
lock
hlt
popa
jg
ljmp
mov
push
cs
sub
pop
lds
arpl
sbb
loopne
fstps
pop
out
sarl
cmp
or
mulb
pop
cli
fadd
pop
pop
xor
test
mov
xchg
jne
hlt
push
lcall
fcoms
dec
xor
sbb
xchg
fistps
jmp
xchg
rsm
ret
shl
in
adc
ficoms
sub
dec
shll
in
xor
addl
data16
subb
or
pop
les
mov
sahf
jnp
sbb
push
imul
out
repnz
pop
and
jp
ljmp
addr16
pop
mov
in
sub
xchg
cmpsl
jg
sub
or
aaa
cmc
jp
das
xorb
aaa
daa
ret
adc
cld
cwtl
inc
clc
xor
push
dec
scas
test
lret
or
ss
aam
adc
shrl
jp
cwtl
mov
jno
movsb
jg
push
test
sub
sub
cmpsb
jb
xchg
fdivs
xchg
test
push
push
into
adc
jp
icebp
jbe
sbb
mov
push
pop
fucomip
push
xor
test
adc
nop
rclb
mov
cs
push
inc
mov
cs
je
xlat
or
xor
lcall
xor
cs
stos
pop
idivl
fildl
ja
lcall
mov
xchg
xchg
dec
aam
lcall
push
je
bound
dec
mov
pop
sub
faddl
jmp
and
or
mov
insl
add
pop
or
dec
mov
xor
and
xor
cld
mov
loope
icebp
sub
cmp
addr16
and
popf
stos
jmp
fmuls
dec
fadd
add
mov
fldl
aam
sub
xor
xchg
sbb
xchg
es
push
pop
push
push
lods
lock
int3
push
rorl
xchg
push
inc
jno
mov
push
incl
xor
lfs
xor
push
cmc
mov
rclb
add
mov
jl
cmp
cwtl
in
roll
aad
jns
mov
in
mov
jns
ljmp
pop
lock
jns
jns
add
and
popa
inc
xchg
shll
jae
nop
jo
xchg
cmp
jmp
rorb
dec
mov
aad
mul
jl
imul
cs
repnz
push
mov
push
fstpl
push
das
pop
rcll
lods
xor
insb
test
adc
movswl
adc
rol
sub
cmp
shl
cmp
adc
dec
cmp
pop
fldt
icebp
popf
xor
xlat
add
cmp
test
incl
inc
imul
mov
sub
inc
jbe
mov
in
add
add
pop
mov
xlat
pop
mov
add
loop
xlat
js
aad
cmpsb
adc
jge
jnp
mov
add
loopne
mov
add
push
lock
lahf
in
pop
mov
cmp
gs
dec
sbb
lahf
data16
out
mov
sub
mov
cwtl
and
or
dec
popa
icebp
es
mov
divb
lcall
mov
movsl
fstpl
mov
push
xor
mov
les
daa
pop
ds
push
std
scas
je
mov
pop
fs
mov
arpl
insb
sti
sar
add
pop
or
xor
and
in
cmc
mov
push
cmp
mov
aas
or
lcall
cwtl
leave
nop
mov
lcall
je
loope
cltd
cmp
push
inc
fiadds
mov
stos
jmp
es
sub
fiaddl
push
dec
cmp
jg
js
cmp
cmpsl
sahf
fwait
inc
inc
jns
pop
adcl
sbb
and
xor
das
pop
mov
ljmp
inc
jg
or
jne
and
gs
mov
cld
fdivl
insl
mov
adc
movsl
sub
adc
ffreep
cs
sbb
lret
out
into
adc
dec
cmc
arpl
pop
pop
or
push
iret
fstps
push
xchg
out
or
mov
sub
xchg
fldlg2
mov
dec
sbb
or
xor
xor
pop
sub
mov
inc
leave
or
hlt
rclb
or
sbb
add
fisttpl
and
inc
mov
nop
sbb
in
jmp
jecxz
cmc
pop
out
je
jp
cwtl
fnstsw
arpl
pop
cmp
sub
or
mov
adc
fsubl
stos
mov
add
leave
stos
sbbl
add
jmp
imul
pop
xor
mov
cmp
or
push
stc
gs
or
jp
adc
lcall
mov
add
mov
into
mov
sbb
subb
jmp
pop
inc
imul
outsb
and
rcr
inc
xlat
pusha
mov
ffreep
fdivp
iret
adc
cmp
data16
insb
pop
cmpsl
daa
pop
cmc
fldl
xchg
push
fs
sbb
pop
cmpsl
jmp
inc
xor
mov
popl
xchg
les
push
test
test
or
pop
rcrb
jno
adc
int
mov
ret
fildll
std
lods
icebp
sub
out
in
jmp
ss
adc
xor
xchg
push
arpl
inc
mov
jo
addr16
fisttpl
imul
iret
adc
dec
lret
sbb
pop
jnp
add
cltd
std
mov
pop
lret
aas
mov
add
mov
push
aas
push
jmp
into
insb
rorl
std
inc
xor
or
sti
cmp
jno
cmp
stos
addr16
mov
sub
js
sub
jge
pushf
pusha
adc
notb
inc
movl
fwait
movsl
jmp
repz
cmp
lods
push
leave
cmp
inc
add
xor
ret
pusha
pop
ret
je
push
pusha
mov
xor
aaa
aam
dec
cmpsl
sarb
xlat
pop
add
push
addr16
mulb
data16
movnti
cmp
loope
push
jns
add
fstpt
mov
jae
and
dec
repnz
lret
fistpl
loopne
cltd
jmp
int
lahf
push
or
fwait
dec
adc
jle
fprem
add
sbb
loop
xchg
xlat
cmp
mov
es
sub
mov
xchg
aad
or
mov
sbb
aad
and
shlb
sub
ret
cwtl
dec
aaa
adc
jmp
iret
dec
or
xchg
int3
cli
fwait
in
mov
jo
popf
lods
add
dec
jnp
ds
leave
sahf
cwtl
mov
sub
pop
xor
ja
and
loope
cwtl
dec
ljmp
mov
pop
push
test
cmp
ror
dec
andb
cmp
lea
fs
rcll
insl
adc
fcomps
addb
push
in
int3
das
push
sub
call
xor
sbb
jbe
scas
inc
adc
test
js
fbstp
inc
mov
dec
out
add
int
adc
or
into
and
xchg
sti
cmc
scas
adc
sbb
aad
repz
loop
dec
lock
in
aad
lcall
sbb
mov
clc
mov
mov
rclb
leave
adc
cmp
gs
inc
lahf
dec
popa
in
jmp
in
fisubl
sub
jno
mov
push
jmp
rorl
testl
xchg
xchg
adc
in
iret
iret
stos
pop
scas
sub
in
sar
jmp
pop
and
jp
popf
sub
jns
mov
les
ja
and
fisubrs
repz
jo
mov
icebp
mov
mov
pop
out
ret
pop
aad
cmp
imul
imul
lahf
sub
test
xor
sarb
mov
out
popa
dec
cmp
jne
xor
ficoml
insl
push
mov
ficoml
mov
rclb
and
pop
enter
out
in
sub
mov
out
jp
lods
loope
push
mov
mov
mov
out
sbbb
lcall
je
adc
jg
xchg
jb
lock
repz
outsl
and
mov
iret
xor
fnsave
mov
clc
mov
adc
dec
sub
sbb
mov
jbe
and
cwtl
jg
mov
mov
cli
aas
dec
dec
adc
aaa
pop
mov
gs
rolb
sub
xchg
data16
pop
gs
aas
and
mov
xchg
or
jmp
sahf
jecxz
sub
inc
mov
jmp
orl
mov
xchg
add
inc
pop
insl
xlat
dec
loop
gs
mov
rorl
icebp
enter
mov
sub
sbb
xor
outsl
js
jb
pop
jae
mov
mov
pop
push
dec
dec
clc
jb
adc
sub
mov
cwtl
xchg
jp
repnz
xchg
test
dec
pushf
xlat
lods
scas
or
and
je
mov
pop
sub
lds
or
fwait
adc
aad
cmp
add
in
iret
mov
aad
data16
enter
aaa
es
jb
sub
adc
pushf
call
fwait
cld
xor
out
cltd
mov
push
push
inc
insb
pop
in
out
mov
dec
jbe
fistpl
scas
scas
add
sub
and
lods
dec
jb
test
dec
xor
or
pop
or
mov
cmp
mov
mov
pop
mov
sbbb
test
inc
pop
popf
rolb
mov
push
sub
movd
sbb
jbe
xchg
jecxz
cmpsl
inc
and
push
ljmp
cmc
scas
fidivs
maskmovq
popl
pop
in
jmp
out
push
add
les
mov
xchg
into
inc
insl
jp
ret
sbb
les
aas
inc
les
out
and
in
rep
in
orb
or
pop
outsl
add
cmp
pop
jnp
xchg
and
xchg
sbb
pop
insl
cmpsb
sub
mov
dec
sbb
pop
hlt
mov
lret
fmuls
xor
adc
pop
outsl
or
push
lahf
aaa
mov
sbb
out
les
int3
ss
hlt
sahf
add
into
jno
jle
ror
inc
daa
dec
jb
push
fstps
and
and
pop
jb
pop
jo
mov
or
test
popa
sbb
jge
gs
mov
dec
movsb
push
mov
ret
aaa
add
push
cld
mov
and
loop
rol
fmull
or
add
aaa
dec
movsb
mov
icebp
adcl
cs
pop
xchg
sub
adc
sub
push
jp
or
scas
pop
cmp
push
or
lea
adc
addb
insb
mov
out
push
jecxz
rorb
adc
sbb
sub
cmc
ja
inc
sahf
fsubr
jecxz
loopne
stos
repz
cltd
jb
js
test
and
push
xor
ds
lret
rorl
jge
or
push
xchg
mov
jns
inc
xor
xor
dec
out
dec
rcr
inc
fwait
cld
mov
stos
imul
lods
fwait
mov
movsl
jp
mov
inc
sub
sub
out
das
push
mov
jns
mov
lahf
in
sub
inc
push
mov
arpl
ja
mov
mov
push
cmc
pusha
cltd
outsl
lea
and
mov
cmp
adc
pushf
mov
sub
xor
jns
sahf
std
bound
insl
adc
adc
test
dec
lods
cmp
jae
sub
test
test
mov
and
out
mov
mov
xor
adc
int
push
std
es
lcall
xchg
aaa
rcrl
mov
and
test
and
sahf
gs
insb
push
cli
shlb
idivb
daa
inc
sbb
pusha
xchg
cwtl
adc
pop
repnz
inc
cmp
push
mov
cmc
cmp
dec
mov
int3
push
jp,pt
iret
pop
xchg
ljmp
pop
pushf
inc
call
pop
push
not
sub
icebp
push
outsl
inc
and
shlb
ret
insb
pop
jmp
int
mov
jecxz
xor
sbb
subl
mov
mov
push
jnp
out
rcll
or
xor
scas
mov
and
xchg
cmpb
into
fcoml
jge
enter
mov
mov
ret
sbb
mov
pop
pop
pop
jne
inc
push
jns
mov
pop
paddd
out
dec
cmpsl
ret
pop
or
dec
mov
mull
mov
mov
inc
cmp
repnz
insl
int
mov
outsl
aad
mov
test
cmp
test
scas
out
fbld
in
dec
cmpsl
ja
jg
sbb
inc
lcall
adc
push
lahf
cmp
add
sbb
les
fsubrs
daa
test
stc
popa
cmp
ja
jmp
sbb
addr16
xor
add
insl
orl
fcomps
push
xchg
cli
xor
mov
or
pop
pop
sub
pop
leave
orb
mov
lahf
shlb
mov
out
dec
mov
imul
daa
rolb
jge
testb
push
into
and
add
insb
cmp
adc
jno
shr
pop
sbb
push
add
mov
mov
or
aaa
add
rol
stc
outsb
lea
mov
push
dec
or
jle
jmp
xor
std
xchg
loope
push
lea
sarl
ds
popf
xor
scas
lret
jne
adc
lcall
in
xchg
cmp
das
addr16
mov
xchg
sahf
inc
insl
push
push
push
mov
mov
and
leave
scas
insl
out
in
and
addb
mov
dec
mov
mov
push
and
push
inc
dec
cltd
sti
loop
push
jp
ret
mov
pop
lahf
scas
shrl
xchg
shrl
loope
dec
mov
or
push
pop
jge
pop
fisubl
and
cmpsl
ljmp
arpl
ja
fstl
jge
ret
lcall
or
add
or
xlat
aam
cltd
loop
pop
jle
or
cs
xor
mov
std
xchg
dec
repz
and
scas
clc
fcoms
in
pusha
scas
sbbl
xorl
jb
add
daa
dec
iret
mov
leave
outsb
dec
jns
enter
inc
addr16
popf
push
sbb
lods
cmp
lods
daa
or
mov
fidivrs
cs
dec
push
xchg
lahf
idivl
push
aas
mov
pushf
sub
jl
mov
mov
fucom
adc
popf
dec
cwtl
pop
and
dec
jmp
mov
int3
mov
aaa
inc
or
jb
enter
decl
repz
mov
rorb
repnz
adc
sahf
inc
movsl
add
adcb
cmp
add
lods
and
ss
das
fwait
das
pop
lods
daa
cwtl
mov
icebp
stc
jb
stc
das
fstp
or
or
call
scas
outsl
sbb
pop
sbb
or
push
mov
add
push
arpl
test
mov
shr
loope
pusha
aaa
lea
xchg
xchg
in
mov
loope
add
sub
xchg
aad
or
dec
loopne
fcoml
out
fsubl
xchg
sub
incl
mov
xchg
je
or
push
push
clc
fwait
dec
and
and
mov
inc
xor
mov
aam
sub
xchg
mov
inc
js
scas
inc
cmp
jbe
adcl
mov
mov
cmp
and
mov
mov
repnz
fwait
icebp
icebp
mov
divl
lea
rcll
add
fbstp
xor
loope
mov
shl
andb
sub
jl
js
mov
adc
mov
popa
dec
sbb
sub
popf
jne
xchg
mov
dec
aas
cmpsl
mov
scas
cs
push
icebp
fdivr
cwtl
cltd
xchg
push
test
add
mov
push
mull
mov
repnz
jmp
jmp
and
adc
or
sub
add
mov
aad
enter
xchg
rol
xor
jg
test
pop
xlat
mov
jmp
repnz
add
jmp
imul
icebp
pop
in
xchg
or
nop
cmpsl
lahf
test
xlat
add
dec
jmp
mov
xor
xchg
cmp
push
xchg
inc
rorl
cltd
ret
xor
jl
idivb
dec
clc
ret
sbb
and
and
cmp
sahf
cld
lock
aam
and
push
pop
das
add
push
call
dec
sahf
and
out
leave
xchg
repz
inc
xor
cs
out
mov
lcall
je
in
in
xor
mov
cmovg
mov
faddp
dec
adc
jmp
aad
mov
inc
in
mov
cmp
mov
jecxz,pn
sbb
push
int
and
lds
scas
imul
add
jp
cmp
bnd
jle
insb
sbb
and
xor
mov
xlat
xchg
dec
test
push
cmc
sbb
nop
lretw
orl
and
nop
mov
es
pop
inc
stos
insb
lret
xchg
hlt
loope
imul
aam
xchg
mov
aad
arpl
add
lcall
xchg
or
adc
and
sub
push
dec
mov
xchg
inc
xlat
out
cmovne
xchg
pop
std
xchg
pop
sti
popa
adc
mov
jno
push
xor
popf
ret
sbb
jl
dec
cmpb
add
inc
cmp
clc
mov
xlat
or
ss
orl
es
ss
shl
pop
shl
inc
jae
lods
adc
aad
xchg
movsb
xchg
sbb
scas
push
sbb
test
adc
mov
inc
dec
xlat
divb
push
inc
adc
bound
jae
sbb
lahf
cmc
mov
sahf
jb
call
mov
outsb
ficomps
lods
loopne
movsb
xor
aas
lahf
jno
out
stc
bound
mov
ret
adc
insb
fmul
push
push
arpl
out
dec
xor
cld
jno
ss
cmpsb
xchg
push
andb
push
xor
jo
mov
sti
sbb
ja
jbe
push
test
dec
psubusw
jne
rorl
dec
mov
dec
repz
mov
aad
inc
sbb
mov
notl
sub
or
adc
xor
adc
adc
movsb
pop
arpl
pop
xchg
adc
adc
enter
lods
gs
mov
dec
popa
fnsave
inc
lock
xor
xchg
mov
add
movsb
scas
xchg
std
fisubrs
mov
jbe
gs
mov
push
or
movsb
mov
push
jp,pn
and
adc
daa
in
sub
subl
xchg
stos
mov
mov
sub
outsb
cmpb
mov
mov
adc
movsl
enter
cmp
dec
inc
lret
sub
push
adcb
push
add
js
pop
mov
jb
pushf
push
or
cli
jp
push
xchg
subb
pop
xchg
add
orps
mov
xchg
pop
add
dec
push
addr16
jl
lods
bound
push
lea
ret
das
test
mov
dec
jbe
nop
mov
gs
pushf
pop
lret
shlb
push
dec
loope
mov
and
scas
push
je
stos
les
xor
add
inc
cmp
stos
lahf
mov
out
or
lret
cmp
jg
add
lea
sub
cmpsb
adc
lea
ret
pusha
sbb
jmp
sbb
int
dec
push
mov
pop
imul
movsb
lock
or
jne
add
mov
mov
inc
imul
sub
push
sahf
lcall
je
xor
arpl
cwtl
push
shll
cmp
movsb
aad
ret
cs
dec
jl
scas
xor
testb
fadds
xchg
pop
xchg
adc
xchg
pop
xchg
shrl
xchg
mov
int
inc
das
stos
xchg
cmp
pushf
jecxz
mov
mov
adc
nop
pusha
dec
sub
gs
jnp
push
inc
scas
shll
sub
loope
and
fisubl
sbb
xor
mov
lods
jno
ret
aas
cmc
mov
fwait
ja
push
ud0
ret
cwtl
js
push
cmc
fs
push
adc
xchg
add
pop
dec
cld
mov
test
stos
adc
jmp
and
sbb
sub
adc
or
lods
mov
in
or
and
xor
sbb
lea
shr
imul
xchg
test
flds
sub
adc
jns
out
int3
je
push
sbb
push
frstor
movsb
outsb
cmc
xchg
sbb
xlat
mov
aad
inc
scas
cwtl
mov
outsl
adc
shrb
std
pop
xchg
jae
push
push
sub
adc
cmp
pop
aas
push
insl
add
sub
push
adc
and
lcall
dec
gs
xchg
lods
cld
sti
adc
or
jne
jl
push
dec
jae
pusha
out
push
clc
imul
ret
mov
enter
jo
arpl
and
mov
lret
lret
add
stc
jno
fsubrs
mov
out
imul
icebp
loope
sbb
out
push
jns
push
outsl
add
cltd
sbb
hlt
mov
stc
cmp
xor
pop
lods
pushf
in
xor
cmpsb
into
test
lahf
fldenv
setle
loop
cmc
pop
dec
jnp
sbbl
xchg
rcrl
or
cmp
push
sub
mov
jg
int3
jno
mov
imul
jne
out
xor
cltd
xchg
lock
xor
xor
aad
notl
adc
fdivr
scas
lret
adc
lock
or
fistl
cwtl
lods
sbb
es
push
test
jp
in
adc
adc
sbb
or
lds
lcall
scas
shrl
ja
pop
sub
and
adc
out
test
xchg
into
pop
jecxz
mov
clc
fistpll
gs
daa
leave
divb
inc
es
nop
inc
cmp
call
adc
into
dec
ret
mov
loop
lea
std
mov
jp
stos
sbb
xor
rcll
pushf
pop
loope
xor
xor
dec
shl
out
les
push
movsb
js
cwtl
pop
push
jno
fldcw
imul
sti
lods
mov
jmp
and
loopne
xchg
xchg
negb
add
js
or
das
loopw
fidivrs
and
lock
xchg
jge
pop
xchg
mov
test
mov
push
repnz
jle
das
faddl
xchg
scas
test
out
pop
mov
xor
add
sub
lea
aaa
xchg
mov
cli
lock
add
and
or
addl
jmp
addr16
fld1
or
mov
sub
or
ret
jnp
jle
mov
and
test
xchg
dec
sti
call
shl
jg
adc
es
loope
jno
popf
dec
or
mov
xor
es
dec
push
outsb
jl
inc
jp
cmp
push
fwait
iret
test
fldl
push
adc
rorb
decb
clc
into
push
xor
ljmp
je
into
popf
fidivrs
add
xchg
mov
cmp
jmp
push
jp
call
sub
inc
jmp
jbe
mov
and
test
pop
mull
push
mov
hlt
cmp
aas
dec
loopw
sbb
inc
js
inc
pop
xchg
mov
pop
stos
sti
push
movsl
pop
mov
jg
adc
cltd
mov
gs
dec
loope
mov
leave
lret
mov
mov
pop
into
scas
sbb
in
and
mov
icebp
in
add
inc
lcall
out
testb
push
fists
andb
and
add
add
in
mov
pop
testl
inc
and
ja
and
iret
popa
int3
fsubp
mov
sbb
pop
and
xchg
lods
call
mov
out
popf
cmpsl
pop
xor
sbb
adcb
mov
scas
xchg
lea
cmp
adcb
or
jmp
push
arpl
jb
pop
ret
xor
and
js
dec
into
mov
inc
data16
and
add
sbb
pushf
adc
repnz
fiaddl
mulb
fidivrl
push
iret
les
ret
or
or
inc
popa
in
mov
outsl
das
add
test
sub
inc
stc
push
cmp
test
cmp
testl
aad
jmp
add
push
jl
mov
adc
test
push
cmp
push
inc
xor
ja
stos
sbb
lods
mov
test
mov
mov
push
sub
pop
fsubp
dec
movsl
arpl
rcl
es
pop
es
ret
pop
imul
aas
ja
add
in
orb
sbb
jl
sub
test
out
in
cmpsb
adc
sub
in
les
shr
xor
cmc
and
jno
popf
sbb
add
mov
jno
arpl
push
leave
out
int
fcmove
xor
out
ja
pop
pop
ret
add
fstpl
test
rolb
adc
addb
mov
push
loopne
aad
jae
mov
ja
cmc
push
sti
out
pop
sarb
mov
pop
leave
cmp
jge
test
add
add
insl
mov
or
out
repnz
pop
imul
pop
aam
jo
pop
jnp
mov
call
rclb
jmp
pop
dec
daa
mov
insb
mov
pop
fidivrl
testb
in
loopne
pop
jl
inc
push
and
and
push
and
lret
imull
sub
and
je
dec
lods
mov
sbb
pop
cmpsb
xchg
fildl
add
lahf
sub
mov
cmp
adc
outsb
pop
cmp
dec
jp
mov
mov
xor
aaa
sub
aad
jns
jle
dec
sub
or
sub
push
xor
das
inc
sbb
xor
js
xchg
jae
xor
daa
out
sub
cwtl
shl
idiv
test
icebp
xor
xorl
push
xchg
jg
jns
xchg
add
cmp
fsubrs
lock
add
loopne
pop
and
mov
inc
inc
or
movsb
mov
lret
pop
pop
mov
sub
call
mov
int3
push
adc
mov
shll
popa
lock
aaa
in
es
test
mov
stos
adc
shlb
sahf
loopne
in
pusha
inc
pop
sbb
xchg
sbb
push
or
inc
push
es
repz
push
std
sub
and
nop
pop
xlat
mov
xor
xlat
daa
jle
adc
lods
test
pop
or
add
push
add
dec
mov
sbb
push
add
push
lret
pop
test
mov
repnz
adc
call
fdivrs
lret
int3
or
call
mov
in
cmp
mov
and
arpl
pop
sub
fwait
and
jae
or
es
shlb
roll
in
jmp
mov
sub
sbb
xor
or
mov
pop
clc
outsb
inc
cwtl
stc
cmp
adc
push
rorb
inc
cld
adc
xchg
adc
pop
sbbl
push
hlt
and
lds
pushf
jecxz
pusha
add
lock
mov
add
push
nop
pop
xchg
cmpsl
sub
int
negb
fistpl
movsl
rclb
aam
lods
insl
adc
outsb
in
push
cmp
mov
leave
int
in
mov
les
js
test
je
pop
cli
push
bound
mov
jp
jns
daa
cmp
iret
pop
or
pop
pop
div
ret
add
mov
adc
xor
push
aaa
or
addr16
out
out
sub
imul
cmpsb
int3
fidivrl
rcrl
sub
adc
mov
dec
pop
lds
jb
dec
int
insb
icebp
jno
test
cmpsb
aad
jne
movsb
jo
scas
imul
fidivrs
adc
add
mov
les
ljmp
inc
xchg
push
lret
test
xor
scas
mov
push
bound
sbb
repnz
incb
dec
add
and
sbb
fstl
xor
sub
mov
xor
jl
ja
jp
pop
mov
and
rcrb
mov
pop
frstor
orl
sub
inc
rolb
sarl
aas
into
rcrl
jns
xchg
lods
les
loopne
repz
xor
pop
fisttpll
insl
mov
pop
out
jo
mov
or
dec
out
sahf
test
ret
mov
outsl
and
xchg
jns
mov
or
push
mov
dec
pop
lret
add
or
and
and
sti
mov
push
loope
mov
sbb
fwait
or
xor
mov
mov
jne
adc
ret
mov
lret
sbb
insl
lds
pop
dec
jns
bound
mov
and
addl
rolb
mov
les
fisubrs
and
dec
mov
jge
xchg
pop
shl
xchg
xor
movsl
sbb
jmp
cmpsl
mov
ljmp
lahf
pop
outsl
ret
pop
fistps
inc
test
mov
push
shll
add
dec
xor
fsubs
std
test
sbb
aas
inc
mov
or
loopne
mov
sbb
pop
jbe
xor
rcll
std
dec
ja
mov
jno
gs
adc
pop
xchg
lock
xchg
lret
fsubrp
mov
jecxz
and
cmpsb
push
dec
mov
mov
loop
negb
and
mov
test
mov
movsb
adc
lcall
insl
pushf
popf
jge
scas
jp
xchg
mov
sbb
cwtl
xchg
cmp
push
adc
push
or
add
scas
scas
mov
fnstcw
pop
and
dec
dec
outsl
push
cmp
loopne
sub
add
sbb
andl
mov
jno
out
out
and
pop
orl
or
dec
sbb
sbbl
pop
or
test
orl
push
fwait
or
xor
dec
iret
outsb
es
mov
mov
jo
mov
sbb
fwait
or
aad
mov
xchg
sbb
jle,pt
outsl
mov
jp
push
sub
mov
inc
xchg
imul
push
dec
lods
push
imul
jmp
ljmp
sbb
push
scas
adc
bswap
in
xor
dec
dec
movsb
pop
xor
inc
xor
xlat
aam
mov
or
fwait
addps
repnz
add
mul
les
sar
test
mov
lds
leave
sbb
push
lret
repz
mov
sbb
sub
mov
loop
incl
dec
xor
add
adc
lea
js
hlt
stc
sub
adc
loope
cmp
mov
aaa
neg
data16
jmp
fnsave
xchg
push
mov
pop
call
jns
shlb
xor
xchg
dec
lods
xchg
and
or
cwtl
pop
dec
push
insb
or
inc
out
test
insb
das
mov
and
add
xchg
sbb
push
popa
cwtl
ss
stos
xor
xchg
les
mov
daa
icebp
or
scas
movsb
loop
and
fisttps
xor
push
movsb
xchg
stos
and
push
enter
push
bound
outsl
das
jb
enter
in
daa
jge
lods
cltd
or
adc
jo
cli
sbb
rcll
ja
fcoms
fcmovne
fs
sub
test
lretw
roll
push
sbb
test
int3
aam
aas
dec
lret
jb
pop
in
mov
lret
and
pop
ja
cmp
mov
imul
stos
sar
mov
out
int3
faddl
push
shlb
xchg
sti
hlt
repnz
sti
mov
mov
out
stos
jbe
in
sti
push
insb
jl
sti
jle
dec
lcall
sub
pusha
dec
and
sub
iret
movsb
and
or
and
test
shrb
sbb
and
incl
in
and
loop
fisttps
jp
scas
roll
jp
xchg
jne
cmp
add
movsb
out
pop
adc
in
call
mov
mov
ss
les
xor
lea
sub
mov
cmp
mov
notl
jo
arpl
jns
jle
inc
aad
insb
in
and
and
cmp
pop
xorl
mov
insb
in
faddl
sar
iret
push
cmpsl
mov
loope
testb
std
in
jo
inc
aas
mov
pop
movl
enter
or
mov
movsb
mov
gs
adc
lds
mul
xchg
mov
das
push
in
test
mov
mov
push
shll
sti
fldcw
xchg
js
lcall
mov
push
sub
dec
adc
mov
pop
sbb
sarb
cmpsb
mov
jb
dec
mov
jecxz
or
ss
out
cwtl
inc
mov
mov
ja
ret
jnp
lods
dec
xor
divl
vmwrite
xchg
inc
rolb
cmp
cmp
sub
xchg
mov
and
sub
sti
push
fsub
imull
mov
or
fistps
mov
mov
xor
sub
cmpsb
repz
in
and
add
sarb
mov
cmp
jns
ljmp
pushf
sub
xor
fs
insl
add
inc
mov
sar
jne
add
xchg
fdivl
cmpsl
lea
es
fmull
jl
xlat
test
popf
and
pop
fldl
lret
movsb
sti
shrl
push
cmp
and
sbb
sub
and
mov
in
jp
imul
lcall
dec
dec
jno
and
xchg
pop
mov
outsb
or
lret
in
sub
je
imull
inc
nop
mov
xchg
xchg
pop
push
pop
adc
pop
push
cli
add
mov
pop
cmpsl
dec
sbb
shl
xor
fucomip
add
lea
sbb
data16
sub
stos
jl
mov
push
add
stos
loope
cmp
mov
mov
cmp
inc
out
dec
adc
mov
sub
or
lods
mov
jnp
fistps
je
rol
repz
lods
loopne
mov
das
cltd
and
pop
int
ja
sti
int3
pop
and
sbb
fst
pop
add
mov
daa
cmp
hlt
mov
fs
mov
std
mov
fdivrl
pop
int3
add
mov
mov
inc
sub
add
fwait
ret
inc
mov
in
int3
andl
das
mov
pusha
push
and
mov
and
daa
enter
shrb
int
loop
shlb
adc
mov
mov
repnz
mov
push
std
int3
hlt
lods
cld
sbb
mov
cmp
andb
xor
add
rcll
mov
lods
pusha
push
xor
jg
or
test
lods
cmpsl
push
pop
jb
bound
mov
add
ja
mov
cmp
test
out
jbe
dec
inc
stos
mov
xchg
psrad
loopne
fidivrs
outsb
cmp
xchg
fistl
mov
test
mov
cmp
pop
jns
call
cmp
lds
sbb
inc
jle
das
out
test
sbb
pop
pop
xchg
fs
xor
xor
push
mulb
movsl
xor
data16
mov
nop
shrl
sub
jo
jl
mov
add
incb
ror
mov
aam
pop
inc
lock
fsubp
fistl
push
push
mov
xchg
ficoml
dec
or
hlt
inc
or
cmpsl
mov
push
pop
mov
mov
xchg
push
ds
push
out
xor
mov
mov
push
mov
int3
addr16
sub
jno
jae
subb
cmp
cmp
pusha
or
and
xchg
outsb
pop
xor
test
or
inc
push
testb
and
aad
jns
push
adc
mov
and
mov
mov
frstor
cmp
popf
int3
inc
add
mulb
or
out
jns
imul
arpl
daa
out
loopne
add
divl
setne
test
hlt
or
add
pop
dec
faddp
sub
push
adc
lahf
add
xor
cli
inc
mov
xchg
xchg
fwait
enter
mov
xor
sti
jb
cmp
bound
push
pop
out
rorb
movups
mov
pop
and
iret
cmpsb
mov
mov
or
cmc
in
push
pop
scas
ljmp
jg
fdivrs
scas
and
add
adc
aad
push
push
aaa
jns
cmpsb
aas
pop
cmpsl
or
into
jle
data16
addb
cmp
inc
dec
add
xlat
popf
jns
push
scas
arpl
push
mov
inc
test
or
loop
clc
jnp
insl
std
lock
icebp
pop
pushf
push
push
or
sbb
fcoml
pop
lahf
aam
cmp
dec
sbb
scas
push
push
int
inc
mov
cli
and
mov
and
jo
mov
cmpsl
popl
jmp
jae
cmp
adcb
outsl
push
lods
sub
lahf
shll
decl
dec
pusha
movsl
adc
jmp
outsb
cmp
mov
inc
insl
lcall
mov
push
inc
lahf
sbb
push
xchg
mov
cmpsl
mov
out
and
or
sub
pop
dec
adc
jp
nop
and
mov
jb
push
inc
stos
xor
std
xor
scas
lods
lahf
ret
das
movsb
pop
adc
push
dec
pop
das
mov
cmc
into
mov
cmp
and
inc
adc
cmp
adc
scas
popa
rolb
mov
es
subl
or
inc
mov
call
pop
xchg
add
cmp
mov
jl
repnz
cwtl
and
xlat
add
out
xchg
mov
dec
jae
pushf
xchg
in
stc
das
xchg
dec
repnz
scas
jecxz
ja
add
add
jo
mov
jle
adcl
hlt
andl
ss
xor
mov
imul
add
dec
dec
inc
cmp
rcll
and
mov
and
mov
loopne
fucomp
insb
mov
push
add
mov
mov
mov
or
jnp
jp
mov
call
xor
lahf
push
jge
jg
scas
jae
fs
pop
xchg
movsb
call
or
adc
jge
jno
bound
cld
jo
mov
mov
adc
scas
cli
pop
das
mov
sbb
filds
orl
bound
nop
add
subb
sbb
decb
stos
or
in
out
xchg
in
push
cmp
dec
cmp
call
add
add
jp
xor
iret
test
pushf
sbb
in
push
int
aaa
mov
out
cmp
push
xchg
mov
inc
jg
stc
leave
out
or
dec
add
mov
mov
imul
test
xchg
cmpl
push
mov
outsl
repz
stos
push
ds
and
aam
aam
ja
inc
cmp
inc
fisubrs
pop
jnp
xchg
movsl
jp
and
pop
push
repz
add
pop
cld
in
adc
lods
lret
or
rorb
add
adc
mov
cwtl
inc
cmp
inc
cmpsb
cmpb
sub
xor
xchg
push
js
imul
inc
lods
or
and
in
movsl
and
inc
cmpsl
cmc
in
inc
push
cmp
lret
addr16
add
dec
sti
lahf
inc
or
push
push
fdivr
xchg
and
or
js
mov
mov
pop
inc
and
fisubl
or
rol
incb
aaa
add
in
ja
outsl
enter
imul
mov
jp
sub
inc
jbe
dec
enter
mov
adcb
jl
outsb
gs
sbb
mov
jo
xor
mov
push
int3
outsl
inc
sbb
imul
inc
jo
push
mov
fidivl
pusha
sbb
out
mov
push
or
or
xorb
xchg
sbb
adc
sbb
icebp
and
pop
test
mov
adc
insb
push
movsl
rcll
xor
mov
push
or
test
ss
jb
js
rorl
xor
rclb
inc
inc
mov
stc
sbb
sub
mov
inc
jle
add
pop
or
dec
je
addl
mov
je
mov
insl
inc
sub
jne
lods
lret
or
add
inc
sub
call
int
adc
loope
xor
cmpsl
outsb
lock
and
notl
adc
jecxz
mov
lcall
push
add
aas
pop
test
adc
stc
adc
xchg
imul
or
test
aam
lods
push
std
add
xchg
clc
cmp
in
xchg
inc
pop
aaa
and
mov
shrb
push
jbe
or
lahf
pop
cltd
mov
adc
cmpsl
inc
sub
jp
push
adc
lret
xchg
gs
and
pop
outsl
mov
insl
loopne
xchg
rorl
inc
mov
nop
push
stos
dec
dec
or
je
jp
mov
add
jle
sub
lea
inc
dec
push
add
and
cltd
lcall
sub
fs
lds
cwtl
out
js
sub
add
or
dec
add
push
push
std
cmp
push
mov
lahf
rcll
aam
jne
jp
sub
jp
adc
add
sub
xchg
lds
std
mov
les
pop
sbb
stos
xchg
rol
rorl
rcrl
inc
repz
or
bound
sahf
aam
sub
popf
in
stos
pop
xor
xchg
mov
dec
dec
scas
ds
cmp
inc
pop
sub
sub
loopne
popw
mov
sbb
cmpsl
and
leave
das
sbb
push
push
mov
fucomi
gs
cmpsl
stos
jb
int
sub
sbb
dec
in
pop
push
dec
jbe
sbb
stc
mov
rorb
xchg
bswap
mov
nop
mov
popa
stos
dec
mov
jge
mov
jnp
mov
in
loope
jno
inc
cs
insl
jbe
ds
xchg
jbe
orb
cld
pop
dec
aad
popf
mov
cmc
jmp
jo
cmc
es
pushf
mov
jo
jbe
cmp
xchg
test
mov
popa
in
jb
mov
sub
div
es
fcompl
jmp
add
sbb
pop
xor
dec
int
mov
notb
in
adc
xor
jecxz
xchg
mov
inc
cmp
outsl
adc
dec
or
leave
aas
nop
mov
xlat
js
out
es
push
movsb
fwait
mov
out
mov
mov
adc
push
mov
mov
xchg
stos
and
xchg
xchg
rol
mov
dec
jecxz
push
pop
frstor
fidivl
into
ret
adc
mov
sbb
clc
leave
push
stos
pop
lock
mov
lods
out
jb
ss
repz
popa
sbb
scas
xchg
adc
xchg
push
nop
sar
jl
push
and
dec
outsb
xchg
adc
faddl
out
or
mov
or
sbb
push
or
cltd
jbe
bound
mov
data16
inc
push
aad
mov
notl
cmpsl
pop
repnz
and
mov
das
push
sarb
es
scas
aam
xor
add
cmpsb
dec
mov
scas
pop
jae
into
shll
dec
pop
add
mov
xor
or
cmp
lahf
jbe
adc
out
pop
ss
dec
icebp
lret
js
xchg
mov
sarl
je
in
iret
jmp
in
pop
adc
pop
and
outsb
or
enter
sub
cmpsb
bound
pop
lcall
push
add
adc
mov
nop
cmc
lods
xchg
int
dec
jg
mov
jo
mov
pop
repnz
mov
xchg
out
pop
or
mov
sbb
mov
add
dec
jae
inc
inc
ss
jo
sbb
in
jns
or
mov
iret
into
cmp
xchg
pop
mov
dec
push
cmp
dec
adc
imul
arpl
lock
stos
insl
jp
xor
test
mov
je
inc
cwtl
push
mov
push
push
mov
lcallw
dec
xor
icebp
jge
dec
sti
jp
fldcw
shrb
jb
or
inc
add
push
cmp
push
mov
cmp
sbb
cmpsb
outsb
push
cs
jne
xor
ret
shll
mov
inc
cmc
xchg
adc
stos
dec
call
push
stos
mov
mov
xchg
popa
jno
ds
pop
lods
data16
xor
loope
jl
lahf
jle
push
addr16
outsl
in
inc
das
fst
add
loop
xchg
jmp
stc
imull
scas
ja
pusha
or
in
jecxz
aas
adc
lods
push
push
dec
jl
jae
lcall
in
or
rorl
popa
inc
pop
or
jns
pop
inc
mov
aad
inc
lret
fwait
xor
xor
es
subps
xor
gs
xchg
cmp
cwtl
fdivr
aad
cmpsl
loop
sbb
movsl
scas
and
je
int3
adc
cmc
sbb
pop
lods
pop
jp
add
mov
and
sbb
pop
dec
xor
jbe
fwait
test
and
in
fisubs
lds
xchg
jns
js
sub
push
pop
iret
lock
lahf
outsl
add
adc
mov
rol
jo
jbe
adc
jl
mov
bound
mov
inc
call
xor
inc
add
cwtl
ficomps
add
pop
or
aaa
and
loop
fcomip
xchg
rcr
addr16
xor
xchg
shlb
nop
lods
sub
pop
mov
popf
lods
fwait
popf
push
add
add
lods
in
mov
jmp
jge
cmp
xor
loop
adc
jbe
xor
into
fistl
add
loope
sti
in
cli
loopne
fmuls
jns
xchg
mul
mov
cmp
and
mov
sti
int
les
clc
jmp
sbb
xchg
insb
outsb
pop
push
repnz
adc
iret
call
inc
jnp
xor
fs
lahf
fidivrs
ficomps
jp
aad
lahf
aaa
xchg
repnz
mov
dec
xchg
pop
xchg
mov
mov
mov
std
dec
jl
negb
cmp
addr16
or
inc
sub
dec
lods
enter
push
jecxz
xorb
pop
jl
cmpsb
add
add
movsb
adc
pop
mov
into
iret
scas
jbe
popa
or
or
shl
dec
ret
ljmp
push
and
cltd
cmpb
sub
leave
xchg
mov
stgi
push
cmp
cmp
push
call
jne
out
mov
jbe
cmpsl
pushf
out
daa
popf
hlt
add
fdivr
mov
and
aam
enter
movsl
arpl
nop
and
pop
outsl
cli
cwtl
cld
or
les
hlt
jo
xor
xor
lcall
and
and
shlb
test
xor
or
pop
mov
test
mov
outsl
into
jecxz
inc
mov
dec
cs
push
xchg
imul
or
ficompl
jge
jbe
pop
mov
lret
push
imul
jl
inc
sub
mov
idiv
in
inc
cmp
mov
mov
fldl
mov
ficompl
test
cli
xor
pop
sarb
lock
pop
xchg
imul
pop
shll
mov
xchg
clc
and
leave
xchg
jbe
cmp
jo
outsb
and
xchg
loope
jmp
cmpl
fwait
cmp
cmp
sub
push
xchg
adc
aaa
and
mov
xor
dec
cmp
jp
jecxz
fwait
das
add
push
pop
add
jbe
leave
outsb
xchg
or
push
lret
push
mov
stc
sbb
dec
imul
or
lds
and
push
adc
mov
test
fdivr
cmp
cmpsb
push
mov
dec
test
mul
stc
lret
mov
stos
sbb
gs
in
je
lret
xchg
cs
setnp
dec
out
js
mov
sub
addr16
clc
or
mov
xor
push
add
or
fstpl
andl
inc
add
mov
and
fbstp
pusha
sbb
out
sbb
mov
and
sub
sbb
pop
mov
scas
or
push
cmp
add
adc
sbb
jl
in
cmp
mov
and
xor
mov
xchg
jge
jecxz
xchg
mov
fcomps
pusha
mov
fistpll
cli
xor
loop
test
mov
xor
out
je
mov
imul
ficoml
aas
mov
popa
mov
push
fbld
cld
or
outsb
scas
add
mov
and
add
and
or
push
mov
ds
lahf
into
repnz
mov
jmp
inc
fsubr
cmp
roll
xchg
dec
js
pop
or
pop
jmp
daa
mov
mov
daa
and
call
xchg
add
push
adc
mov
nop
nop
ret
fldcw
fnstenv
shr
sub
push
popf
add
out
in
xor
push
mov
jge
and
lds
pushf
xor
icebp
or
dec
jecxz
out
fcmovbe
push
push
iret
dec
repnz
mov
int3
je
stos
pop
dec
sti
mov
mov
inc
into
sub
push
mov
jns
or
outsl
int
cmp
lods
and
out
inc
mov
xor
cs
sahf
push
out
jl
mov
outsl
adc
pop
and
jnp
fs
test
fcompl
cmp
jae
loopne
lock
lret
cs
jbe
mov
mov
fistps
push
loop
fcmovu
out
pop
mov
nop
imul
jb
inc
adc
outsl
jne
cwtl
mov
daa
pop
xlat
push
mov
das
inc
leave
fldenv
jae
xor
inc
cmp
push
mov
lea
jp
movsl
and
fwait
popa
xchg
mov
dec
ss
and
jmp
adc
aad
mov
xchg
sub
mov
mov
sahf
les
mov
mov
arpl
stos
ja
in
scas
jb
mov
xchg
dec
fstps
lcall
inc
pusha
push
imul
mov
cwtl
test
mov
lret
insb
jg
lret
lods
mov
ret
inc
ss
insb
mov
xchg
insl
stos
gs
add
mov
xorl
scas
add
dec
ljmp
outsl
jp
jb
je
add
test
insl
test
mov
adcl
cltd
cld
sub
mov
out
or
nop
addr16
and
cld
test
cld
inc
cmp
repz
lahf
loope
mov
ja
dec
cwtl
jl
std
iret
cmc
sub
adc
xchg
mov
add
sub
fiaddl
dec
mov
or
fs
movntps
aas
in
inc
mov
cmp
addr16
jg
out
mov
inc
flds
mov
lods
nop
addr16
jle
sub
lods
mov
jne
add
scas
fildll
sub
lds
adc
nop
mov
cmp
push
movsb
dec
xchg
cld
xchg
iret
mov
lods
xorb
inc
pop
pop
repz
dec
insl
lods
sar
mov
dec
cmp
ja,pt
add
xchg
push
add
xchg
xchg
in
mov
inc
xor
pusha
std
insb
pop
mov
fs
out
and
es
movl
sub
push
cmp
xor
jns
pushl
dec
cwtl
stos
in
dec
mov
sbb
xchg
hlt
cmp
xor
imul
sti
gs
mov
lods
cmp
int3
mov
adc
add
lea
clc
into
jo
cld
dec
and
jg
xchg
sbb
sbb
adc
add
inc
ja
sub
aaa
mov
test
test
fstpl
sub
or
mov
cli
xchg
mov
movsl
mov
cmp
es
mov
jae
xchg
jbe
jge
pop
cld
xor
jle
bound
and
ret
cmp
repnz
inc
sub
mov
adc
hlt
mov
orl
cmpsb
mov
arpl
sti
rclb
test
mov
xchg
mov
cmpsl
les
jl
insl
shlb
mov
mov
push
xchg
sti
ret
test
scas
inc
dec
pop
mov
xor
cmpl
xchg
mov
adc
xor
in
shll
dec
adc
loopne
xchg
dec
pop
lret
dec
adc
add
jle
and
dec
pop
push
mov
jl
jle
mov
movsl
and
add
push
es
pop
pop
push
mov
dec
pushf
mov
into
push
aas
stos
inc
xchg
loopne
or
ficoml
pop
mov
sbb
mov
pop
mov
orl
pop
inc
push
or
lret
or
jmp
pop
or
add
adc
xchg
xor
jl
mov
cmpsb
push
and
push
mov
jbe
push
dec
mov
aam
out
repz
lods
pop
dec
sub
or
cwtl
adc
in
xchg
pop
inc
pop
pop
inc
dec
cwtl
shlb
popf
inc
mov
das
xchg
aad
lcall
stos
insl
lret
pushf
je
das
xchg
sub
xrelease
sbb
inc
xor
out
arpl
sbb
ja
fcomps
sub
mov
int
or
dec
test
pop
dec
fwait
and
xchg
jnp
mov
lcall
movsl
lds
movsb
aas
lret
dec
dec
xchg
adc
iret
fists
enter
nop
neg
cmpsl
pop
rcll
outsl
adc
insl
gs
lret
pop
mov
aaa
add
dec
ds
mov
sbb
push
push
pop
dec
jae
nop
push
and
adc
nop
mov
fbld
adc
rcll
mov
fistpl
test
sbb
push
movsl
inc
jo
or
fildll
xor
push
or
call
or
fsubrl
std
jns
pop
shlb
mov
jmp
mov
fnsave
xchg
jmp
lcall
cmp
inc
scas
sub
mov
pop
mov
loopne
xchg
fidivs
fiaddl
pop
fidivs
jo
daa
cli
adc
push
push
lds
test
popf
and
movsb
cmp
in
shl
decl
jbe
stos
mov
mov
sbb
fiaddl
or
adc
daa
daa
je
sbb
mov
push
call
in
nop
dec
sbb
pop
andb
ja
pop
mov
pop
das
cmpsb
add
aad
or
lods
push
pop
cli
pusha
lret
xchg
inc
sbb
rcll
movsb
inc
and
pusha
cmp
fcomi
and
idivb
pop
pop
pop
cmp
repz
test
dec
fidivrl
call
int
pop
pop
or
lret
adc
push
icebp
mov
dec
sub
jg
insl
inc
lcall
or
int
dec
mov
adc
adc
in
dec
scas
jns
roll
clc
pop
loopne
xchg
mov
loopne
test
pop
outsb
subl
pop
pop
jmp
fldl2t
insl
fwait
push
jg
enter
je
dec
push
inc
loopne
js
inc
cmp
mov
scas
add
imul
jg
add
pop
repnz
sbb
or
push
outsl
sub
sub
in
lods
and
sbb
jl
jmp
sbb
pop
xor
or
cmpsb
push
push
clc
jne
or
out
inc
bnd
xor
xor
icebp
xchg
cmp
mov
les
jle
adc
pop
dec
mov
push
xchg
xor
add
shll
xor
test
popl
mov
dec
xlat
and
sub
out
dec
aad
jne
jbe
lahf
inc
adc
pop
jle
push
cmp
movsl
inc
pop
and
mov
sbb
mov
xor
add
cmp
fdivl
scas
push
push
fwait
xchg
or
test
jle
dec
aam
lret
idiv
push
es
lods
jne
rorb
insl
cltd
cmp
into
xchg
stc
xchg
outsl
dec
scas
ret
loopne
pop
dec
push
sub
push
lea
xor
mov
pop
into
ret
sbb
push
pop
push
fcompl
sbb
fimull
add
gs
xor
add
jp
aam
cmp
or
dec
mov
sbb
xor
push
stos
pop
loopne
test
les
arpl
sub
jnp
sbb
inc
shl
mov
test
iret
ret
stos
dec
mov
icebp
xchg
sbb
ds
int3
mov
rcl
cld
fisubs
test
jns
xor
adc
imull
popa
push
or
enter
loop
cmp
lds
mov
inc
popf
push
fsubs
xchg
adc
lds
adc
out
into
or
std
fsubs
in
aad
pushf
out
imul
clc
adc
lock
xor
pop
cwtl
fdivr
imulb
rorb
pop
pushf
adc
icebp
or
sbb
xor
inc
xchg
dec
icebp
sahf
ds
bound
sub
cli
test
jbe
cs
std
inc
ja
test
cmp
int
popf
jp
shr
inc
jmp
and
shll
xchg
aaa
xor
sub
fcmovnbe
mov
addl
ret
mov
sub
in
xor
pop
ljmp
dec
mov
icebp
je
adc
sub
sbb
adc
sahf
lds
jne
sub
cwtl
sub
mov
sar
cmp
jp
in
clc
aam
or
movsb
test
daa
pop
and
leave
ss
lret
mov
clc
sub
dec
jns
ret
xchg
or
push
jg
jae
sbb
sub
out
pop
adc
cwtl
lea
mov
or
aaa
pop
dec
mov
and
inc
and
add
pop
sub
push
fidivl
repnz
fldcw
mov
mov
out
push
push
sub
push
jmp
dec
std
int3
gs
imul
repz
or
fiadds
lock
adc
fidivrl
pushf
xorb
inc
xor
lods
iret
inc
jl
sbb
mov
add
and
push
xlat
ljmp
jmp
adc
mov
sti
jae
jno
pop
xor
xor
inc
faddl
cs
outsl
push
mov
into
fs
shlb
test
out
pusha
or
leave
fs
rcl
push
aad
inc
jge
jge
test
jp
sbb
add
dec
and
sbb
push
jbe
mov
cmpsl
insl
ljmp
xor
loop
sahf
mov
pop
leave
in
or
pop
push
jae
js
icebp
sub
lcall
shl
pop
fsubl
add
sbb
in
outsb
sbb
pop
int
cmpb
inc
int
inc
pop
ja
mov
sbb
in
mov
xchg
mov
in
faddl
mov
repz
jno
push
pop
cmpsl
adc
push
dec
jnp
and
gs
cmc
sbb
sti
adc
mov
inc
lds
jle
xlat
in
std
fcompp
aam
pop
add
inc
aaa
pop
imul
lret
sub
out
mov
test
mov
pop
sub
aam
stc
and
lret
aad
int3
lret
js,pt
repnz
jb
push
stc
sub
inc
xchg
cmp
cmp
xor
inc
lds
movsb
shll
and
movsb
outsb
pop
popa
push
repnz
cmp
push
ja
fld1
inc
lret
clc
add
mov
cmp
pop
mov
ss
ss
cltd
jno
lret
push
lods
jbe
dec
jecxz
cmp
sbb
adc
dec
pop
aas
shlb
int3
push
sub
cmc
xlat
dec
jno
dec
sqrtps
adc
stos
dec
dec
inc
popa
xchg
sub
mov
nop
xlat
add
and
or
arpl
fdivr
icebp
pop
sub
aas
mov
cmp
sub
sbb
mov
scas
push
dec
movsb
jbe
outsl
sbbl
push
cs
push
jbe
push
sti
aas
push
xchg
inc
hlt
aam
imul
scas
inc
gs
jne
xchg
push
movsl
inc
popf
in
or
pop
xor
inc
das
jae
adc
shlb
xchg
lods
ss
movsb
jle
jnp
xchg
jae
xchg
ja
insl
lret
decb
inc
mov
adc
pushf
adc
addb
xlat
jo
pop
sub
sbb
xchg
out
mov
jle
sub
imul
push
lea
xor
dec
sbb
push
inc
cmp
inc
lods
mov
jg
enter
bnd
ss
push
pop
mov
lods
adcb
ret
pushf
insb
sub
insb
orl
or
fcoms
aam
pop
lock
mov
movsl
jecxz
pusha
cmp
xlat
fistps
shl
xchg
lea
pop
mov
lds
outsl
mov
push
call
popa
pshufw
xor
in
shlb
mov
xchg
les
cmpsl
mov
and
out
inc
sub
adc
jl
pusha
mov
icebp
xchg
jp
leave
loopne
and
aas
adcl
ret
das
xlat
cmpsl
mov
fucomi
sub
mov
int
push
ret
cld
sub
sub
cmp
jbe
pop
mov
lock
add
das
mov
fadds
lret
pop
outsl
insb
lcall
imul
add
mov
sub
add
mov
pop
pop
cwtl
aas
pusha
jae
ljmp
ret
fsubl
push
push
sub
mov
push
xchg
mov
out
mov
adcb
mov
imul
lcall
mov
int
jp
jnp
aad
divb
inc
push
enter
xor
std
mov
popa
jg
add
adc
jns
inc
rcll
push
aas
xor
out
jnp
stos
imul
pop
jle
xor
movb
jge
xchg
cmc
cmpsb
sarl
jl
mov
ret
cmp
leave
push
inc
clc
aam
aad
pop
jg
inc
xchg
rorb
or
mov
mov
xor
lds
out
jg
mov
iret
push
jnp
into
sti
je
int
addr16
xchg
mov
sarb
or
pop
push
jmp
addl
mov
fdivrs
and
pop
inc
jbe
sbb
loopne
sub
test
inc
sub
and
xor
loopne
notl
jmp
push
sub
sti
xchg
adc
push
mov
je
lods
push
inc
bound
fmuls
daa
test
push
aaa
out
jne
xchg
rclb
push
les
pop
in
xchg
jo
push
lret
imul
xchg
ds
dec
in
in
decl
push
pushf
push
xor
lcall
mov
faddp
js
and
popf
jnp
sahf
xor
mov
mov
sub
cli
mov
add
and
xor
lcall
or
hlt
lahf
push
lods
sbb
push
pop
push
mov
sub
push
js
dec
test
jp
aad
cmp
pop
push
jo
mov
pop
test
adc
loope
sub
cmp
jle
inc
dec
in
and
call
add
inc
test
xor
test
xchg
xchg
mov
clc
popa
push
cmc
pop
dec
mov
jno
int
cmp
gs
dec
xchg
xchg
cbtw
adc
daa
bound
push
ret
and
ret
adc
adc
xor
ja
mov
shll
push
outsb
sbb
fists
or
es
pop
inc
jns
or
sbb
stc
testl
filds
aam
xchg
jbe
jmp
lods
insl
imul
jecxz
pop
sub
lea
gs
dec
je
xor
jbe
sub
inc
shll
sub
mov
mov
add
outsb
push
in
iret
rolb
lock
cli
ja
hlt
es
addl
push
loopne
rol
mov
sti
movsb
jmp
sub
inc
add
mov
stos
out
sbb
daa
mov
inc
stos
jg
mov
lods
mov
dec
and
sarb
fmuls
daa
xor
outsb
xor
sbbl
ja
das
dec
jae,pt
and
je
and
out
fwait
mov
xor
into
ds
cmp
sub
jg
fs
repnz
or
clc
in
repnz
inc
pop
shlb
mov
sub
loop
add
ret
or
xchg
adc
inc
mov
xlat
pop
xor
lret
mov
js
or
sub
imul
movsb
fwait
dec
cmpsl
adc
inc
dec
push
mov
lods
stos
jl
subb
or
loope
mov
sub
push
cmpsl
sti
daa
ss
fcompl
xchg
sbb
pop
add
and
mov
push
iret
sbb
mov
push
scas
mov
dec
mov
jl
fucom
addr16
stos
jae
cmp
lods
inc
in
movsbl
daa
mov
ss
test
adc
frstor
fidivrs
ljmp
xchg
mov
int
movsl
lahf
adc
dec
xor
repnz
rolb
jle
scas
jbe
jae
stos
and
push
setne
daa
loop
test
adc
int
cmpsb
leave
add
sbb
testl
dec
pop
in
push
loopne
xchg
cmp
mov
lret
jns
add
cwtl
sub
cmp
cmpsb
daa
jno
enter
scas
mov
pop
adc
jle
pop
lods
xlat
pop
mov
jp,pt
pop
je
addr16
cmpsl
lods
sub
mov
cmp
repnz
cs
test
sub
push
sub
repz
fistpl
mov
mov
movsb
lret
xor
bound
or
icebp
ret
dec
cld
add
add
pop
call
push
std
stos
mov
lods
mov
jbe
movsb
stos
ds
fwait
pop
cld
mov
jg
aas
inc
out
mov
sbb
cld
mov
fdivrs
xlat
insl
movsb
mov
cmp
daa
sbb
mov
pop
xor
inc
movsb
mov
dec
dec
cmp
fstp
mov
iret
mov
in
in
imul
cli
or
lcall
or
lods
sbb
rcll
clc
aam
sarl
pop
ss
pop
js
xor
out
push
nop
test
out
stos
stos
out
inc
test
pop
adc
sub
shll
repz
push
or
jle
sahf
fwait
addl
in
addr16
negb
pushf
mov
jno
adc
dec
lods
fs
shl
movl
jecxz
dec
xchg
mov
mov
js
rcrl
and
negl
adc
cmp
flds
movsb
pop
mov
mov
clc
out
js
push
mov
pop
cmc
mov
arpl
lods
stc
jne
xor
ror
ds
xor
mov
jns
mov
aas
out
in
pop
inc
dec
xor
movsb
or
mov
call
stos
popa
sub
dec
sarb
xchg
push
add
and
insl
notb
movl
into
mov
dec
pushl
mov
popa
cmp
cmc
fldl
xchg
sub
shrl
loopne
cmp
and
ss
sbb
leave
or
jbe
rcl
inc
adc
mov
lods
and
js
inc
xor
mov
out
cmp
inc
mov
xchg
in
and
dec
testl
pop
mov
loope
jmp
rcr
nop
dec
pop
ss
sbb
test
cmpsb
fiaddl
pop
jecxz
out
sub
movsb
xchg
outsb
in
fiadds
jecxz
test
pop
jns
sbb
xchg
xor
cmp
sub
popa
mov
push
xlat
push
test
fimuls
mov
inc
bound
test
mov
pop
mov
pusha
mov
loop
aaa
cmpl
sbb
leave
fadd
mov
sbb
adc
cli
mov
and
mov
scas
push
jae
shr
call
inc
pop
and
lods
pop
lret
sub
jo
daa
cmp
inc
mov
fnstsw
xor
sbb
sbbb
adc
ja
iret
cmpsl
dec
jo
lods
repz
cmp
cs
ret
push
idiv
push
sti
sub
roll
push
pop
adc
orb
pop
add
adc
cli
mov
xor
jb
and
push
cs
or
popf
js
fwait
inc
push
push
es
pop
fmul
fs
cmp
dec
ja
xchg
jnp
pop
push
adc
jbe
mov
mov
push
insl
and
aaa
leave
repz
addl
jno
stc
sub
arpl
adc
test
add
pop
cmp
ret
das
mov
adcl
dec
jmp
dec
xlat
adcb
test
mov
loope
xor
out
xchg
gs
jp
lret
pop
mov
subl
xchg
cld
stos
jne
push
inc
push
rcl
lods
out
fsubl
cmc
lret
ret
and
xchg
into
push
add
bound
scas
mov
mov
ljmp
and
ja
data16
or
xchg
xor
cmpsl
sbb
out
push
clts
ret
push
cmp
fisubs
adc
les
inc
inc
or
pusha
dec
out
sub
cmp
push
jne
xchg
mov
jle
aaa
scas
test
add
fwait
gs
or
xchg
popa
jl
jae
popa
hlt
jle
out
or
add
adc
or
mov
xor
in
push
adc
push
sbb
jl
jge
cwtl
sbb
mov
xchg
push
popa
daa
fs
mov
mov
rclb
add
shl
xor
pusha
inc
aas
mov
mov
scas
enter
movsl
pop
mov
push
clc
mov
dec
clc
ffreep
inc
sbb
jae
stc
sub
cld
push
push
out
into
fisubs
cmp
dec
mov
dec
xor
adc
test
and
into
in
sbb
mov
inc
cmpl
push
mov
jecxz
push
pause
mov
mov
movswl
lds
scas
fcomi
cmc
push
in
and
jle
pop
or
pop
imul
add
mov
loopne
mov
jg
and
cmpsl
cwtl
xor
in
lods
sarl
inc
dec
mov
pop
lahf
push
xchg
cmpl
enter
jmp
jmp
in
mov
into
in
out
pusha
ss
sbb
pop
loopne
loopne
jns
lods
lods
gs
dec
xchg
dec
lea
cmp
arpl
hlt
dec
sub
aam
or
sub
adc
pop
xor
pop
push
mov
in
std
sub
out
repnz
mov
cli
rcr
mov
jo
enter
dec
and
or
and
test
ja
fstpl
bound
adc
and
xchg
pop
inc
lds
xchg
mov
out
iret
fidivrl
sbb
fwait
movsb
out
ret
hlt
or
aad
cld
ds
in
sahf
repz
lahf
or
orl
push
mov
sbb
add
stc
adc
jp
gs
out
roll
out
xchg
outsl
icebp
out
arpl
cli
stos
mov
or
inc
xor
and
jecxz
sbb
shl
mov
cld
int3
fldl
cmp
or
push
xor
mov
dec
lods
mov
push
xor
dec
ja
cli
movsb
repz
sbb
jo
sbb
mov
xchg
sub
lock
cmp
pop
mov
mov
inc
adc
insl
loop
mov
int3
push
cmp
popf
mov
push
das
out
int
lock
movsb
sub
mov
imul
fistpll
push
dec
mov
dec
iret
or
ljmp
sub
mov
jno
jle
es
mov
push
call
sbb
sbb
inc
xchg
dec
rcrl
cwtl
dec
lahf
add
xchg
js
in
mov
jmp
and
jne
mov
pop
ds
sub
inc
add
mov
fs
cmc
negl
pop
mov
testb
xor
ja
jge
xchg
cltd
out
mov
xchg
push
mov
sub
pop
mov
adc
lahf
rorl
mull
dec
jb
dec
ret
mov
inc
leave
jb
loopne
mov
pop
or
push
mov
xor
jecxz
mov
xor
out
or
pop
rcrb
lods
sahf
lock
adcb
das
mov
xlat
cs
jno,pn
in
cltd
nop
push
cmp
daa
inc
in
add
xchg
neg
mov
mov
in
out
push
mov
push
nop
int3
in
mov
aad
xor
les
sti
popa
sarl
mov
dec
or
cmp
mov
add
cltd
sbb
imul
sub
sbb
mov
cltd
and
xchg
xor
pop
stos
xchg
add
mov
push
jle
pop
xor
add
lea
inc
ret
mov
mov
daa
xchg
sar
jno
pop
adc
stos
idivb
or
mov
xorl
shll
mov
push
ja
and
or
mov
cmp
ret
fwait
mov
call
sub
pop
cmp
and
dec
push
pop
jns
sar
xchg
movsl
scas
mov
in
lret
or
add
dec
mov
sub
pushf
pop
int3
pop
mov
popf
push
je
int3
add
mov
xor
jp
es
cmpsl
pop
cltd
mov
xchg
pop
sub
cmpsl
dec
cld
in
ds
ret
mov
ja
into
test
mov
iret
dec
imul
fs
xchg
fdivrs
add
adc
pop
pushf
inc
daa
loope
imul
cmp
test
sub
fsubl
mov
les
movsl
mov
adc
int
mov
mov
pop
leave
pop
add
negb
daa
jl
fcmovnu
lock
xchg
cmp
lcall
jg
mov
les
gs
les
in
aaa
jb
cld
mov
aad
sbb
inc
mov
jecxz
lds
push
mov
push
and
jb
in
xor
cmp
jb
pop
mov
ja
aam
inc
add
scas
mov
push
adc
ljmp
jl
hlt
iret
jns
ja
mov
test
out
mov
and
mov
push
add
dec
int
inc
test
or
arpl
ret
jmp
xchg
dec
movsl
cmpb
pusha
out
cmpsb
je
mov
es
sbb
sub
cmp
in
addl
push
push
into
jb
rclb
dec
cmp
add
pop
pop
imul
popa
push
inc
push
cmp
nop
test
or
add
ret
fsubrp
loope
dec
neg
or
test
and
mov
call
mov
mov
add
fnstenv
mov
sbb
fdiv
cmp
jne
fimull
mov
int3
iret
int3
dec
and
in
das
dec
adc
fdivs
adc
mov
or
cmp
dec
iret
mov
fwait
push
xchg
andb
das
rcrb
icebp
pop
dec
fs
movups
mov
ret
jle
or
fisubs
jge
cmp
repnz
outsb
mov
adc
and
arpl
xchg
repz
jno
mov
ror
ja
push
xchg
pop
xchg
icebp
push
aaa
pop
sub
jl
aas
arpl
push
outsb
test
jb
cmp
push
stos
call
mov
jb
pop
jmp
push
jno
jnp
jmp
fcmovbe
jge
rcrb
ret
pop
push
std
xlat
sbb
mov
insb
rcll
std
bound
mov
aaa
cmp
push
lret
mov
xorb
leave
adc
daa
es
rclb
xchg
int
dec
or
xlat
sbb
loopne
ftst
push
add
or
jb
pop
lock
mov
pop
sbb
ds
or
repz
dec
call
pop
stos
lret
int3
mov
jmp
inc
pop
repnz
iret
sbb
clc
pop
pop
faddl
mov
in
mov
std
xchg
in
inc
dec
adc
arpl
and
aam
adc
inc
pop
inc
inc
notb
cmp
repnz
lods
add
inc
scas
jnp
and
push
out
cmp
mov
aam
jnp
dec
adc
mov
adc
int
loop
pop
push
fiadds
lea
pop
add
std
leave
lret
pop
or
fimull
push
idivb
nopl
in
xor
push
xor
mov
add
ficoms
jecxz
mov
je
int
or
les
movsl
in
repz
stc
gs
add
lret
sbb
sti
dec
jecxz
push
cmpb
inc
movsl
dec
mov
mov
cmpb
pop
fadd
mov
dec
mov
pop
movsl
test
jae
xchg
sub
cli
in
jmp
cltd
test
in
cltd
data16
jmp
leave
clc
push
xor
test
nop
mov
adc
in
ss
jmp
and
aas
lods
movd
lahf
lcall
aas
mov
imul
lret
stc
sbb
ret
out
fisttps
jp
pop
pop
movsb
fsts
insb
mov
sahf
xor
lods
or
stc
or
dec
addl
cmp
mov
rol
sbb
loopne
xor
push
gs
mov
orb
and
sti
popa
or
add
push
imul
out
les
insl
push
into
push
lret
adc
pop
je
mov
jo
inc
mov
cmp
out
push
inc
pop
enter
inc
xchg
xchg
cltd
notb
lods
sahf
sub
mov
cmc
jae
mov
sarl
push
int
rorl
shlb
mov
sti
xor
sub
cmp
cmp
hlt
lods
int
movntq
out
sub
outsb
mov
cli
fs
cltd
inc
push
mov
and
cmp
in
cmc
nop
orl
stc
mov
pop
les
sbb
repnz
cmpsl
cmp
negl
aad
das
or
or
push
cs
cltd
jae
pop
adc
cmc
lcall
scas
pop
sub
addr16
out
dec
fbstp
jb
cmc
lods
dec
subl
addr16
call
pop
pushf
enter
outsl
jne
push
jp
jmp
out
jns
xchg
push
cli
sub
and
xor
lds
cmpsb
fcomps
mov
addr16
sub
faddl
or
cmp
jg
mov
outsb
dec
mov
movsb
sbb
pop
pushf
movsb
adc
jge
add
jp
mov
arpl
adc
into
xchg
pop
fistpl
repz
addr16
mov
mov
pop
js
loopne
jnp
test
je
fdiv
fiadds
and
into
out
movsl
sarl
add
mov
jbe
jne
jmp
js
pop
hlt
mov
rolb
pop
into
adc
je
out
fisubl
outsb
adc
bound
ja
xor
imul
ss
bound
outsb
or
sti
mov
repnz
iret
adc
outsl
inc
or
test
adc
imul
xlat
sbb
push
mov
pop
dec
xchg
dec
or
call
lea
pushf
das
insb
xchg
cmp
shlb
cli
mov
sub
hlt
subb
add
sub
pop
mov
loopne
movsl
and
inc
dec
in
push
sub
adc
pop
rclb
adc
mov
and
ror
insb
xor
or
fstps
sub
xor
jno
enter
jnp
jne
gs
adc
sbbb
inc
cwtl
pop
fidivrl
or
adc
mov
sub
jmp
ljmp
sbb
icebp
sbb
push
testl
add
xchg
ss
cmpsl
ds
inc
xor
ret
mov
iret
mov
dec
dec
cmp
aas
jb
mov
jnp
mov
std
mov
test
stos
pop
push
xchg
arpl
push
imul
popl
out
sub
mov
jnp
jae
clc
enter
stc
fcoml
adc
aad
and
inc
cmp
int3
dec
pop
jg
mov
fidivl
mov
movsb
fs
xor
shll
mov
gs
cmpsl
pushf
je
in
add
lods
mov
add
sti
inc
in
push
mov
adc
cmpsl
xchg
call
jns
adc
mov
mov
push
cli
cmpsb
pusha
cmp
sahf
mov
jnp
add
insl
mov
popl
aad
movsl
int
jae
sahf
mov
nop
insb
and
lret
pushf
icebp
adc
jns
out
pop
shlb
hlt
out
fdiv
scas
insb
stc
cmp
dec
inc
adc
jbe
mov
scas
ret
mov
hlt
stc
jno
movsb
mov
xor
adcb
dec
mov
jae
lsl
cmp
adc
pop
or
pop
stc
popf
pusha
and
ret
loope
sub
mov
xchg
fs
mov
adc
inc
sahf
add
dec
xchg
test
pop
dec
xchg
dec
pop
mov
sti
sub
or
dec
add
pop
jle
push
or
mov
subb
cld
outsl
pop
and
clc
mov
in
dec
ret
pop
fcomps
cld
mov
inc
mov
jmp
mov
push
sbb
xchg
lahf
xor
lahf
dec
inc
outsl
stos
mov
and
jecxz
adc
jecxz
sbb
repz
xchg
or
cld
lret
cld
mov
xchg
inc
cmp
lcall
scas
adc
arpl
sub
call
mov
cwtl
pop
push
imul
insl
test
je
mov
cmp
into
stc
jle
popa
mov
mull
xchg
mov
rorl
mov
into
js
incl
xchg
xlat
cli
push
cmpsb
xor
sub
cmp
mov
xor
add
mov
push
mov
jp
push
cmp
mov
sub
cmp
ss
fmuls
mov
imul
pop
inc
push
add
das
pop
sbb
mov
push
mov
aam
sar
aad
flds
lahf
jae
lds
scas
inc
imul
inc
push
inc
inc
aas
enter
add
outsb
arpl
divb
inc
push
scas
orl
rcrb
stc
adc
je
push
cmp
mov
daa
int
push
cld
xor
add
and
test
jae
fiaddl
pusha
mov
inc
add
xor
adc
push
ficompl
cld
mov
push
xchg
sub
or
or
je
mov
and
fidivl
xor
jne
mov
lret
pusha
push
loope
mov
inc
ljmp
ret
inc
xchg
ret
in
stc
push
mov
jmp
mov
ret
push
lods
xor
mov
les
iret
push
icebp
mov
xchg
cmpsb
orps
aad
icebp
stos
pop
clc
push
push
rcl
cmp
sti
add
ret
or
in
and
out
pusha
lahf
xor
sti
cmp
fwait
sbb
and
xor
cmpsl
sub
aam
inc
aas
popf
jno
sub
out
adc
adcb
sbb
lcall
cld
iret
cmp
lods
jbe
addl
mov
xor
pop
sbb
hlt
mov
sbb
push
ror
fdivrs
cltd
or
xor
jp
push
cmpb
cmp
pop
sbb
pop
sbb
sti
or
xor
hlt
cwtl
daa
repnz
test
adc
dec
mov
cmp
xor
dec
mov
mov
ja
stos
fcoms
jno
cmpsb
push
mulb
push
mov
adc
xor
cs
addl
xor
inc
pop
dec
mov
xlat
dec
sub
in
fadd
cs
add
addb
std
rcrl
in
jne
fwait
les
sti
shll
cmp
cmp
loop
test
fidivl
add
dec
xchg
dec
mov
xchg
sub
int
push
mov
loope
inc
sarb
dec
fsts
arpl
sub
jl
lret
js
push
out
sub
dec
sub
jnp
xchg
pop
mov
mov
add
sbb
cmc
arpl
or
andl
das
inc
lret
mov
into
push
sbb
mov
lret
out
xchg
or
out
mov
jbe
cli
clc
es
pusha
fs
push
repnz
or
adc
arpl
jb
cwtl
loope
aaa
aas
cmp
cli
mov
mov
mov
sub
test
pop
pop
out
adc
push
mov
mov
push
les
scas
lret
xchg
fmuls
xor
jmp
xor
xor
adc
popa
and
pop
xchg
fwait
enter
dec
outsl
xchg
inc
cmp
idivb
cld
mov
js
push
repnz
pop
ljmp
cmp
arpl
and
loopne
aad
mov
data16
xchg
mov
gs
stos
sbb
xlat
xor
xchg
cld
push
sar
xchg
xchg
arpl
outsl
lret
aas
and
fcmove
scas
xchg
xor
cmp
lods
dec
dec
inc
shl
cli
cmp
ds
arpl
dec
fwait
jnp
pop
test
ljmp
xchg
jle
push
jns
mov
pushf
ss
aaa
cwtl
jg
and
jno
push
fwait
sti
outsl
and
xchg
rcl
and
clc
adc
insb
mov
in
pop
jns
inc
add
cmpsb
adc
sub
dec
jne
and
pop
imul
or
sbbl
pusha
scas
mov
adc
push
adc
push
outsb
pop
leave
mov
mov
jl
add
push
mov
loope
push
mov
aaa
jmp
andl
clc
orb
push
je
and
les
dec
dec
addb
sub
movsl
xchg
test
cli
dec
outsl
mov
fwait
int
pop
ret
pop
das
jle
ds
push
orl
andl
or
and
lcall
mov
out
cmp
sub
in
mov
fsts
xor
mov
ror
xor
stos
mov
sub
data16
movsl
pop
cwtl
mov
jecxz
fwait
iret
sbb
cmp
mov
gs
mov
sub
fcmovnu
imul
mov
xchg
push
scas
adc
or
mov
into
jp
inc
dec
addr16
ss
push
add
iret
sarb
lds
dec
mov
push
stos
push
dec
inc
stos
fmull
xchg
adc
loope
lock
in
adc
adc
jbe
in
popf
cwtl
movsb
or
and
addb
pop
cmpsb
push
push
scas
push
dec
aad
sbb
aas
fs
insl
insl
ret
scas
movsl
inc
es
jge
inc
stos
xor
test
lods
scas
dec
xchg
mov
stos
hlt
out
add
arpl
sbb
and
inc
push
lret
ret
and
in
fbld
mov
cmova
or
fistps
repz
das
inc
jle
pop
icebp
dec
mov
jp
push
mov
stos
adc
repz
fwait
mov
sbb
das
ret
test
out
ds
add
fdivrl
adc
sub
mov
js
ds
cmpsl
cmp
add
call
add
popf
imul
pop
cmp
pinsrw
jbe
pop
clc
mov
mov
and
ja
jno
xchg
sbb
inc
xchg
fmull
and
test
xchg
mov
xor
pop
inc
flds
adc
xchg
pushf
test
and
test
out
xchg
fidivrs
test
lcall
jmp
sbb
mov
pop
jnp
bound
jmp
addr16
pop
out
pop
or
adc
jp
je
fsubrs
inc
cmpsb
mov
pop
insl
mov
repz
ret
xchg
add
dec
gs
loopne
fsubr
insl
push
fwait
sbb
aas
xchg
push
imulb
cwtl
js
cld
cmp
je
add
inc
push
loopne
je
cs
pop
cmc
out
fistpl
mov
xor
xchg
divl
pop
push
and
xor
insb
clc
incl
xchg
jmp
add
sbb
pop
jae
adc
mov
iret
push
add
outsb
gs
ret
pop
outsl
imul
xchg
push
test
sbb
adc
div
cli
movsl
add
pop
mov
out
xchg
cwtl
sub
jo
pop
push
add
xchg
mov
xchg
mov
add
mov
cmp
push
xor
jmp
dec
jne
xchg
adc
aam
adc
lock
sub
loopne
rorb
cmpsb
inc
xchg
xor
jnp
cmpl
push
out
icebp
inc
inc
or
mov
mov
jmp
movsb
rol
cmp
mov
or
ret
dec
push
adc
pop
mov
es
sbb
cwtl
mov
iret
add
xor
jmp
inc
xor
xor
jnp
imul
jg
or
test
add
push
jne
sbb
xor
test
dec
and
xor
push
out
lea
push
gs
shll
lahf
loope
aaa
rorl
sub
enter
xchg
ror
jb
and
insb
mov
stos
subb
cmp
mov
call
out
push
cmp
mov
int3
ljmp
push
out
cmpsl
add
xchg
pop
push
repz
call
sub
add
mov
mov
std
ret
pop
xchg
fwait
inc
jg
adc
fdivrl
and
aad
fcmovne
outsl
sub
xchg
mov
push
les
int3
add
test
xchg
and
and
xor
inc
xchg
icebp
xchg
xlat
daa
cmp
and
add
xchg
mov
pushf
add
call
push
and
xor
push
xorb
cwtl
xchg
mov
in
js
sbb
arpl
cmp
mov
in
lcall
adc
cmp
push
sub
push
bound
sub
mov
into
mov
xchg
mov
push
mov
xchg
data16
in
or
stos
mov
stc
adc
movsb
cltd
cli
clc
sti
insl
insl
inc
add
iret
push
sub
pop
and
das
adc
in
push
mov
in
popf
push
jb
movl
fiadds
jg
or
inc
ficoml
out
sbb
xor
rorl
xor
int
lea
mov
add
sbbl
cmpsb
cld
jno
xchg
js
xchg
sarb
insl
arpl
add
outsb
cs
idivb
clc
cmc
outsl
jnp
dec
add
mov
xlat
fdivr
mov
fsubrl
iret
push
add
cmp
sub
sahf
mov
inc
fists
in
add
aas
jbe
mov
imull
sub
cltd
jl
push
xchg
mov
ret
xchg
push
sub
cmpsl
les
lcall
jns
nop
jo
adc
fiadds
adc
rcr
add
sbb
sub
fcoms
cld
inc
loope
sarl
sub
loopne
or
mov
sbb
add
mov
pop
cs
shlb
cmc
hlt
imul
ja
notb
pop
mov
setp
push
cmpsb
ret
pop
call
or
shrb
mov
add
call
inc
cmp
cmpl
pop
lea
lret
push
add
je
in
lods
pop
ss
adc
testl
mov
stos
inc
call
rol
jb
dec
push
jmp
mov
stos
lret
push
int
scas
jg
xchg
mov
ss
jg
mov
mov
mov
pop
mov
jb
add
sub
push
cmp
push
aaa
dec
jno
push
dec
hlt
jp
push
mov
cmp
sbb
jle
xorl
je
mov
imul
dec
sbb
mov
insb
enter
shl
repz
sbb
test
mov
mul
xchg
and
adc
jae
lret
scas
adc
addr16
mov
cmpsb
dec
mov
cwtl
push
jb
rorb
cli
in
stc
xor
rcrb
mov
cmp
pusha
sub
push
inc
xor
aam
xchg
push
xchg
mov
test
fcmovu
pop
mov
je
ror
fmull
mov
inc
inc
insl
sbb
mov
or
pop
or
lods
pusha
add
xlat
mov
and
or
scas
jbe
std
inc
or
sti
lahf
stos
cmp
mov
lahf
pop
insb
mov
not
movl
pop
xchg
inc
jl,pn
in
mov
pop
mov
jmp
jg
testl
aaa
push
enter
mov
adc
lret
nop
add
ja
or
pop
inc
push
mov
dec
lods
dec
dec
fwait
out
xlat
repz
inc
cli
jae
adc
ret
cmp
ds
jecxz
push
popf
push
gs
aad
xchg
pop
pcmpgtw
lret
lret
add
xchg
xor
inc
push
shr
jmp
mov
sub
sub
pop
sbb
jl
jnp
sbb
mov
fildll
mov
cmpsb
aas
aaa
stos
fnstenv
jge
jmp
loope
pop
popa
push
cli
xor
mov
outsl
aas
xchg
sub
repz
sbb
inc
mov
cmp
adc
mov
and
test
orl
push
dec
pop
mov
or
idivl
fistpl
popa
jl
or
pop
jl
in
mov
and
and
in
jmp
xor
jne
push
dec
jae
aad
negl
clc
xchg
insl
pop
push
sub
clc
jno
add
pop
add
decl
out
fs
loope
out
pop
test
cmp
add
ja
ret
and
stos
lahf
lret
jmp
xor
dec
xchg
dec
jg
xor
insb
push
mov
cmpb
add
rcrb
jnp
push
sub
pop
in
cmp
jp
imul
sbb
int
lds
sub
fmulp
jp
add
pop
push
jbe
test
leave
cmp
push
mov
add
jmp
subl
jnp
jnp
adc
or
jg,pn
jno
mov
cmpsl
inc
movsb
incl
in
fs
cmp
jb
sbb
mov
lds
add
sahf
hlt
mov
imul
incb
in
inc
xchg
test
pop
data16
aad
ljmp
lcall
mov
pop
ret
push
jmp
into
push
loope
xor
std
push
mov
mov
jnp
popw
nop
lret
lods
fldenv
cld
psadbw
in
xor
mov
and
push
lret
nopl
loop
mov
imulb
mov
loope
mov
aaa
loopne
sbb
sub
rolb
repnz
dec
mov
mov
ret
aam
lds
sti
add
push
xor
out
xchg
xor
pusha
jg
adc
mov
mov
leave
lret
and
pusha
jle
in
mov
insb
add
and
scas
lcall
ficoms
fdiv
ljmp
adc
xchg
xchg
push
scas
pop
xor
gs
mov
pushf
int3
inc
mov
mov
divl
xchg
dec
mov
mov
sub
pop
cmpsb
push
arpl
shrb
imul
cmpsl
xor
add
mov
movsl
add
or
and
xchg
pop
sahf
aaa
pop
inc
add
out
gs
jmp
or
mov
sub
push
mov
pop
cmp
cmc
iret
jns
rcrb
cld
jmp
cmp
jo
sahf
xchg
xor
out
scas
nop
pop
in
sarl
push
lret
cmp
push
nopl
andb
jg
xor
dec
inc
pop
fstl
scas
xchg
lock
push
push
pop
lret
sbbb
push
pusha
js
clc
je,pn
ja
int
mov
ret
pop
push
adc
push
bound
aas
ret
xor
pop
lods
pop
insl
xchg
lret
repnz
inc
push
inc
sbb
fs
movsl
adc
cmc
inc
or
aam
sbb
cmc
dec
mov
add
shlb
add
push
dec
ds
insl
adc
jnp,pn
lds
xchg
or
cwtl
mov
test
outsl
std
in
adc
out
and
fwait
inc
lret
xchg
or
lret
insl
xchg
push
push
push
ds
imul
mov
outsl
push
pop
repz
mov
lock
or
pop
imul
mov
mov
xor
cmp
orb
add
cmc
lahf
xchg
sbb
rcrb
xchg
pop
dec
fsubl
jo
mov
faddp
rcr
paddusw
jnp
adc
ret
jnp
mov
cmp
mov
imul
fcompl
clc
or
scas
cmp
jmp
xor
mov
push
mov
cmp
repz
rcll
pop
iret
in
aad
cmp
jecxz
push
or
xchg
cmp
push
xchg
test
sub
adc
mov
insl
clc
test
shrb
pop
push
add
xchg
ror
sbb
mov
mov
xchg
lods
push
repnz
xor
aaa
and
movsb
lock
inc
pop
adc
ss
mov
inc
mov
bound
sarb
lock
push
fwait
stos
dec
ljmp
stc
push
sti
iret
adc
jl
xchg
push
mov
fdivl
push
ss
faddl
js
push
dec
ljmp
roll
push
jae
dec
or
cmpsl
fadds
xchg
addl
xchg
mov
jbe
mov
jge
inc
cmp
outsl
repz
mov
in
daa
stos
inc
add
cmpsb
mov
dec
push
add
pusha
js
out
inc
cmp
inc
mov
mov
xchg
mov
pop
aad
inc
lock
jp
adc
push
mov
loopne
aas
cmp
sub
es
movsl
or
inc
adc
cmc
outsb
shrl
mov
je
dec
shlb
add
sub
xor
int
stos
popf
orb
out
ss
add
adc
lods
push
jp
test
das
lock
mov
jbe
fcmovnu
mov
sbb
jge
iret
jecxz
jmp
test
inc
rorb
push
bound
mov
cmpsb
dec
cli
shlb
pop
loope
cs
in
sbb
nop
scas
mov
adc
and
jle
divb
rolb
rcll
jg
jle
adc
roll
jg
fcoms
mov
mov
dec
into
lcall
pop
rcll
sti
stc
aam
push
pop
or
or
mov
jecxz
jae
mov
repnz
mov
xor
push
inc
rcrl
popf
jl
xor
push
dec
movsb
mov
cmp
cmpsl
lret
push
push
sarl
test
sbb
fisubrl
dec
fistl
cltd
mov
setb
mov
xlat
imul
lods
stos
or
scas
subl
pushw
inc
cmc
sbb
add
fbld
xchg
mov
std
sub
imul
iret
push
shll
mov
push
loopne
aas
sbb
xchg
jmp
xchg
add
dec
fidivrl
pop
pop
movb
neg
pusha
out
inc
jg
sti
inc
iret
ret
adc
push
sahf
mov
ss
jmp
mov
or
adc
lock
push
call
mov
xor
in
bound
xor
mov
adc
push
in
mov
dec
add
and
jmp
add
dec
bound
out
mov
inc
jae
and
add
sti
xchg
push
fwait
leave
cli
add
je
popa
ja
sub
mov
dec
roll
in
pop
xor
clc
out
loope
ret
mov
cld
xor
fildl
and
add
lar
add
fildll
cmp
imulb
movl
pop
sbbl
xorb
inc
or
lock
push
stos
rcl
xor
sub
in
shlb
pushf
cwtl
pop
sub
add
insl
mov
ret
fsubl
push
pop
inc
test
push
jb
pop
pop
sbb
jp
push
movsb
imul
adc
in
sub
inc
inc
jbe
or
pop
mov
xchg
loop
repz
xchg
push
popa
ljmp
mov
call
jmp
adc
mov
xor
gs
enter
popa
pop
adc
mov
mov
cmp
fwait
jge
inc
mov
mov
mov
enter
es
adc
test
xchg
ud1
cltd
aad
lods
out
cmp
movsb
or
cmc
rcrl
push
je
xchg
pushf
jbe
mov
push
xchg
inc
sahf
cmpsb
jecxz
inc
sbb
jbe
stos
fwait
mov
pop
sub
or
dec
loopne
hlt
insb
xchg
mov
add
or
pop
fs
leave
push
and
jl
xor
xlat
sub
xor
clc
subb
test
insb
jo
xchg
rcrb
scas
fidivrl
sub
jmp
cmpsl
pop
imul
xorl
jle
jle
cld
push
daa
cmpsl
dec
fists
out
cmp
pusha
mov
orl
cld
push
and
or
dec
and
subl
int3
pop
sbb
sbb
dec
ds
xchg
aad
mov
push
roll
push
cmp
js
add
jg
xchg
and
xor
movsb
cmp
xchg
ds
lcall
fwait
dec
xorb
ret
jp
fisttps
js
mov
mov
fdivrp
dec
loop
jbe
dec
shrl
add
adc
outsl
sub
mov
mov
idivb
push
hlt
xor
imulb
inc
sub
pop
loopne
push
loope
clc
shll
js
add
lcall
xchg
sbb
test
jmp
inc
adc
fwait
push
flds
out
mov
mov
cli
dec
cmovns
cmpsl
jle
in
movsl
xchg
sti
push
stc
pop
mov
movb
fucomi
lods
jle
aam
gs
adc
fcom
mov
pop
jnp
jmp
inc
add
jae
and
test
jo
xchg
test
scas
ror
pop
out
add
ljmp
or
aas
scas
xchg
out
pop
sub
jmp
mov
pop
mov
push
insl
fidivs
xor
mov
jb
jmp
test
imul
jnp
xor
mov
lret
push
jb
in
popa
imul
push
cmp
aas
dec
test
movsb
adc
sbb
mov
loope
leave
push
push
rorb
add
lods
sbb
in
mov
adc
fsubrs
shlb
and
pop
incl
bound
mov
test
dec
imul
mov
mov
mov
xor
das
or
lods
mov
fstpl
push
mov
push
inc
mov
ljmp
jg
cmp
cmp
shll
lock
lcall
pop
and
arpl
sub
or
adc
jbe
test
icebp
sub
sbb
mov
pop
lods
jbe
xchg
int
lds
adc
push
xor
out
sbb
mov
das
das
sub
ljmp
push
cmpl
addb
fcmovnbe
lock
pop
lods
mov
lret
fwait
cwtl
sbbb
loopne
xchg
pop
ljmp
xor
in
and
and
lea
stc
cmp
fwait
mov
push
mov
andb
adc
ds
rcrl
pusha
cmpsl
sbb
or
adc
jmp
movsb
imul
mov
dec
mov
test
mov
in
vpsllq
mov
sbb
pop
pushw
out
negb
test
ja
data16
cwtl
movsb
scas
aaa
jnp
cmpsb
pop
arpl
push
mov
mov
jo
fists
addr16
xor
fwait
mov
inc
push
mov
mov
jle
pop
cmpsb
int3
scas
stos
jg
jbe
push
pop
xor
stc
push
pop
jg
out
mov
movsb
inc
enter
imul
pop
dec
inc
lds
insl
outsl
jmp
add
sbb
pop
shr
jns
mov
add
fidivrs
cmc
sbb
push
cmpsl
out
movsb
add
clc
cmp
push
push
cmpsl
cmpsb
movsl
add
imul
cwtl
mov
aad
mov
add
ljmp
ds
sbb
xchg
test
mov
inc
push
and
mov
pop
ror
test
add
dec
js
test
or
das
arpl
fs
inc
sub
fcoml
sub
or
imul
adc
jb
add
outsb
shrl
stos
adc
or
pop
jge
pop
mov
jae
mov
out
adc
test
dec
inc
iret
mov
mov
jmp
les
test
rcr
pushf
shlb
cmp
dec
in
fisubs
in
add
inc
scas
dec
aaa
xor
mov
rcrb
cmp
or
outsl
lock
pusha
xor
pushf
fwait
scas
add
dec
rcr
sbb
lcall
movsb
outsl
int3
shll
ret
pop
and
in
iret
pop
lahf
push
xchg
outsb
jb
lods
imul
insb
sbb
in
jp
sbb
push
ss
inc
je
das
stos
es
jle
xor
imul
outsl
inc
testb
fisubrl
mov
sbb
sub
ja
sahf
test
out
mov
adcb
xchg
data16
cmpsb
or
je
dec
sub
cmp
bound
mov
dec
loope
push
or
cmp
mov
lcall
sbb
ljmp
movsl
lret
adc
ret
xchg
and
mov
clc
or
ret
lods
xor
mov
mov
insl
bound
cmpsb
or
fists
jbe
mulb
xchg
mov
jno
mov
fstl
xchg
inc
push
fisubs
lods
pop
fiadds
arpl
mov
push
cli
xchg
je
cmp
clc
sbb
cmp
pusha
ljmp
in
mov
jmp
inc
push
push
bound
in
cmp
insb
xchg
popa
mov
in
adc
cmp
inc
jne
incl
jle
jb
out
adc
js
mov
push
jne
insb
xchg
xchg
add
cltd
lcall
repnz
rcrl
jo
adc
jp
pop
fmull
mov
loop
push
outsb
les
adc
cmc
pop
cmp
imul
pop
loope
add
or
jmp
pusha
out
lahf
rol
mov
sbb
add
cli
pushl
rcll
pop
mov
xor
ja
aaa
sbb
cmp
cmpsb
inc
aaa
popf
ffree
int
movsb
mov
mov
sahf
fnsave
aas
and
lahf
out
pop
addb
clc
insl
gs
xlat
in
negb
or
imul
dec
bound
jl
sub
insl
fs
pop
add
inc
push
dec
mov
outsl
test
out
insl
loopne
or
shlb
fincstp
ret
gs
sti
sub
dec
test
xor
jp
jl
or
decb
nop
xor
mov
jns
pop
mov
pop
adc
pop
or
cmc
and
faddp
lret
lret
scas
aam
mov
sub
repz
pushf
mov
ds
add
iret
push
lea
in
lret
sbb
in
inc
lods
mov
jmp
data16
aam
cmpsl
jno
cmp
mov
imul
mov
pop
jg
cld
mov
sbb
inc
inc
cmpb
xchg
cltd
jge
js
mov
insb
in
popa
pop
or
repnz
add
pushf
pop
sbb
stc
sub
jns
adc
in
daa
rcll
mov
and
repnz
push
jg
or
mov
lock
pop
pop
push
xchg
dec
jo
sub
sbb
sub
jg
xchg
xchg
shl
add
les
test
add
aad
popa
xor
repnz
ret
pop
fwait
xchg
dec
mov
add
or
hlt
or
int
mov
push
add
mov
std
outsb
mov
mov
or
movsb
mov
scas
addr16
das
cmp
popf
pop
sbb
popa
daa
stos
in
cmp
stos
mov
jle
enter
outsb
lret
xor
dec
sub
ret
iret
icebp
mov
repz
popf
aas
gs
sub
fs
lods
inc
ja
imul
cmp
loope
push
fs
es
lock
insb
jns
lds
add
add
popf
sbb
mov
jbe
inc
fdivrs
ja
cmp
pop
and
push
inc
dec
clc
loop
jae
jb
push
mov
mov
aaa
pop
pop
jo
aad
ja
adc
inc
ret
ljmp
bound
inc
xor
icebp
test
xchg
fimull
lock
mov
and
sbb
and
notl
adc
test
in
outsb
and
es
sbb
idivb
test
inc
mov
lods
sti
inc
mov
fldenv
lods
xor
rcr
mov
mov
sbb
shrl
inc
push
lcall
jge
data16
inc
push
ljmp
mov
nop
xchg
pop
pop
dec
mov
jb
xchg
pop
shlb
fildll
loop
jnp
and
add
jmp
aas
dec
cmp
icebp
sbb
out
je
and
mov
push
pop
jnp
movsl
call
mov
jp
inc
outsl
mov
dec
adc
bound
and
mov
popf
mov
mov
icebp
or
xor
pop
outsb
mov
or
cli
in
mov
nop
lret
inc
comiss
pusha
cmp
xor
aam
std
cmp
dec
inc
jge
ret
adc
inc
xor
roll
push
stos
sub
ret
dec
dec
out
in
cmc
loopne
roll
int3
sti
rclb
mov
cmp
daa
add
stc
mov
rolb
mov
lods
lods
fnstsw
push
sar
mov
pop
mov
xchg
xor
fdivrl
mov
sar
lahf
xor
jp
rcrb
rcrl
push
sub
ljmp
std
cmp
sbb
cltd
mov
cld
es
jae
arpl
pop
jb
lcall
jl
test
lret
inc
lock
cld
rolb
dec
jnp
xor
subb
ss
dec
data16
das
xor
lock
mov
sub
dec
xchg
mov
push
push
sbb
jne
mov
mov
mov
popf
repnz
inc
lds
or
jb
sbb
ds
cmp
push
leave
mov
orl
popa
cs
push
gs
pop
js
push
pop
dec
mov
mov
jmp
fildl
jge
mov
leave
ljmp
out
push
addr16
outsl
and
and
test
cmpl
dec
xchg
inc
fimull
arpl
inc
inc
xchg
xor
or
negl
sub
cwtl
movsb
add
xchg
mov
jecxz
mov
je
dec
cmpb
clc
mov
or
sub
lods
call
in
call
repz
push
add
mov
leave
fsubl
cmpsb
dec
sbb
push
dec
push
and
lock
in
les
mov
add
andb
mov
sbb
xchg
mov
adc
int3
outsl
repz
pop
add
daa
dec
call
dec
lret
fiadds
fcoms
je
fsubp
mov
mov
dec
cltd
sbb
or
mov
int3
pop
inc
lret
cmp
fistpl
repz
inc
mov
cli
loop
data16
mov
inc
jmp
test
out
pushf
sahf
repz
xchg
lea
mov
dec
pop
imul
dec
arpl
outsl
sbb
imul
push
inc
fisubrs
popa
ss
mov
rorl
mov
xor
mov
adc
pop
iret
cltd
jl
rorl
fs
les
and
and
dec
ja
adc
aas
neg
popl
jns
test
cmp
inc
add
fistpl
popf
dec
in
add
xchg
dec
in
loope
nop
mov
push
out
lea
sbb
je
mov
xor
fwait
jp
mov
xchg
inc
aam
pop
adc
cmc
fimull
ss
push
push
push
add
movsb
movsl
cwtl
adc
rclb
lahf
rorb
jecxz
movl
fsubrp
popa
sbb
mov
push
jge,pn
out
mov
dec
sti
lds
adc
jb
ret
test
pop
jno
out
test
xchg
sub
xchg
dec
pop
scas
movsb
inc
mov
aad
mov
data16
add
data16
leave
push
test
popf
cmp
scas
inc
push
xchg
sbb
push
push
fsub
call
push
loop
ss
push
mov
push
ds
xchg
ljmp
adc
adc
adcl
enter
pop
push
sti
lahf
sub
inc
fwait
mov
arpl
push
aaa
mov
push
jnp
jl
or
dec
inc
xlat
sub
insl
or
xor
pop
imul
add
das
aam
mov
sub
lahf
imul
in
cltd
push
mov
bound
or
sbb
jle
jg
or
mov
in
cmp
mov
xchg
cmp
mov
cmpsl
test
movsb
add
inc
leave
xchg
xor
cmp
fsubr
mov
sbb
jg
lods
sub
dec
fbld
and
pushf
sub
and
gs
dec
mov
cwtl
cwtl
insb
adc
aaa
imul
lods
outsl
cs
lods
xchg
sbb
jle
and
push
push
sub
rol
and
gs
push
mov
loop
cld
pop
in
rcl
popl
add
add
jge
dec
out
dec
or
cmp
fadd
ja
imul
mov
cli
fnstcw
add
repnz
ret
xchg
aaa
rorb
or
mov
xorb
xor
sbb
lret
mov
sub
bound
pop
loop
dec
jmp
sbb
mov
xor
mov
test
pushf
fdivrs
inc
pusha
scas
stc
aad
stc
mov
lcall
test
test
mov
or
pop
jmp
out
cld
ss
lret
fdivrs
mov
mov
push
in
cmpsl
mov
cmpsl
mov
mov
bound
xchg
sub
in
adc
or
in
es
scas
addr16
xchg
sbb
jae
jo
push
jle
loope
and
push
mov
loope
ret
or
std
push
pop
xchg
rorb
inc
xor
das
test
adc
mov
mov
pop
pusha
aad
aad
mov
mov
or
sbb
or
sahf
movsl
imul
test
pop
lds
bnd
out
xor
aad
cmp
out
movsl
loope
sub
lock
xchg
icebp
out
fs
sub
mov
call
call
xchg
out
sub
scas
mov
arpl
fwait
xchg
adcl
sub
sbb
push
sbb
cmp
pop
mov
shll
mov
clc
mov
ss
or
je
adc
inc
cmc
lret
insl
les
das
jns
bound
and
dec
pop
scas
ret
js
mov
pop
and
push
test
addr16
sbb
test
test
jno
cli
inc
movsl
int
popa
mov
in
scas
mov
pop
pop
sub
arpl
adc
jb
xchg
fisttpl
fs
daa
jnp
cmp
push
nop
loope
add
stc
filds
sahf
cmc
loope
pop
iret
ret
pop
jb
or
jae
mov
mov
xlat
and
cmp
imul
vpcmpeqw
lcall
jb
ret
xor
push
test
daa
or
push
fs
inc
incl
and
mov
cmc
roll
filds
jge
cli
es
test
adc
rcl
outsl
je
dec
hlt
fcompl
xchg
add
jae
jecxz
outsb
insb
sbbb
stos
notl
mov
xor
or
jmp
cmp
hlt
jae
jbe
pop
or
adc
mov
stos
jae
shrb
xchg
sub
or
push
arpl
ret
or
jns
orb
jl
lea
jle
jb
dec
test
jne
pop
jno
es
inc
xor
inc
mov
stos
dec
adc
arpl
loopne
sbb
adc
ret
push
enter
and
push
or
neg
push
inc
fs
or
push
pop
out
xchg
xchg
sub
js
push
test
nop
jle
xchg
mov
enter
je
adc
cmpsl
lcall
popa
push
std
cmp
cmpsb
mov
xchg
cmc
aad
lds
popa
xor
jl
fcomp
lret
push
pop
imul
out
push
push
xor
xor
adc
aad
shll
xor
repnz
lret
pop
f2xm1
fs
test
mov
je
in
data16
lea
mov
push
shrb
add
sbb
pop
or
add
sub
fiadds
out
ja
and
mov
lods
xchg
inc
mov
jae
ljmp
dec
dec
xchg
icebp
in
dec
stos
pop
cmc
je
lcallw
xlat
mov
fidivrl
mov
insl
xor
fstl
inc
push
mov
push
sbb
jl
or
data16
inc
lahf
je
int
lods
inc
mov
out
loope
xor
call
subl
xor
xchg
pusha
lahf
in
jmp
rcrb
cwtl
cltd
mov
adc
mov
xchg
inc
ret
ret
andl
sbb
or
jns
mov
inc
mov
testl
xchg
nop
push
adcb
in
fnstenv
dec
adc
popa
add
lods
test
outsb
cmpsl
call
xchg
push
xor
fisttpl
lahf
dec
loope
lcall
or
inc
jge
xor
out
test
clc
aad
add
add
loop
int3
push
push
jmp
xchg
or
jp
or
shlb
repz
pop
xor
pop
outsl
movsl
in
mov
shll
imul
lret
hlt
add
outsl
cmp
je
rcll
pusha
xchg
rolb
pop
aam
fwait
mov
addb
ja
mov
dec
sub
jmp
rcrb
dec
mov
ret
mov
nop
add
popa
shlb
xchg
call
pop
lea
pop
notb
sub
lret
jmp
jbe
or
cmp
sarb
pushf
out
inc
mov
testl
push
and
ds
fiadds
dec
ljmp
out
push
bound
add
mov
sbb
xchg
in
testl
add
xlat
das
cmp
push
xor
lods
loopne
int3
xor
in
jo
or
mov
ror
aaa
sbb
mov
aas
xor
mov
in
and
in
cmp
mov
jl
jp
je
or
arpl
lock
aaa
mov
scas
push
jno
xor
dec
clc
daa
pop
push
push
es
add
sbb
clc
rcrl
xchg
pushl
xorb
cmpsb
adc
push
and
and
cmc
aas
mov
mov
icebp
sti
mov
cmp
sub
movsl
pop
lret
push
adc
cltd
adc
fs
sahf
fs
jo
jno
push
mov
xor
aam
add
cmpsb
repnz
ja
cmp
cmc
jns
fs
popa
test
and
lret
lahf
stc
fcom
or
push
je
repz
mov
fsubrp
aam
int3
mov
add
sahf
pop
scas
mov
jg
inc
stos
add
mov
pusha
or
aaa
out
fs
int3
dec
push
icebp
or
pop
push
inc
test
scas
mov
jno
dec
xor
jecxz
inc
push
int3
xor
loop
lds
js
fs
imul
inc
or
popa
mov
mov
cmpsl
mov
test
xorl
in
mov
in
mov
movl
cltd
js
std
mov
into
xor
test
scas
mov
xor
mov
ret
xor
aad
and
xor
movzbl
and
std
mov
mov
push
mov
cmp
into
imul
arpl
popw
je
xor
push
pop
sbb
pop
push
fwait
xchg
mov
adc
sub
call
sub
sbb
mov
fbld
in
insl
rep
add
fwait
std
out
and
loop
rcll
inc
xor
test
xor
xor
pushf
push
ljmpw
fisubl
mov
jo
or
ja
fldcw
dec
mov
sub
popa
mov
xor
push
adc
jo
stos
sub
or
pause
add
stc
inc
add
add
inc
lcall
jle
out
lret
add
add
mov
or
enter
ja
cmp
mov
test
in
adc
push
mov
mov
mov
mov
outsl
loope
sarl
jne
ret
xchg
lahf
fisttps
stos
mov
outsb
cmp
popa
cmpsb
subb
outsb
push
add
and
xchg
ret
pop
dec
mov
dec
sar
in
int3
mov
adc
dec
cmpsb
negl
mov
jmp
mov
arpl
lock
test
inc
jno,pt
jecxz
inc
pop
fwait
mov
dec
movsl
sub
jge
mov
sbb
rcr
or
sbb
repnz
lds
negb
mov
int
pop
fwait
sarb
pop
in
cwtl
mov
movsl
loop
popf
lods
repz
sahf
fdivrs
loope
fildll
jo
adc
in
sub
gs
insb
jbe
pop
jnp
xchg
js
cmp
sbb
pop
jnp
push
movsl
rcll
and
fs
scas
in
mov
mov
jmp
adc
pushf
xchg
push
add
sbb
push
sbb
popa
cltd
pop
and
aam
inc
cld
adc
mov
lods
mov
xor
int3
inc
sbb
pushf
mov
jnp
fsubl
add
shl
mov
adc
xchg
dec
pop
dec
pop
pop
out
mov
push
inc
outsb
jg
cmp
and
filds
mov
add
or
jno
adc
and
ss
loopne
push
ja
arpl
xor
dec
or
mov
repz
cmp
xchg
jbe
fmul
popa
sub
ficompl
xchg
pop
mov
notb
test
icebp
fwait
jp
mov
xchg
dec
sub
pop
jb
jbe
nop
jns
cmpxchg
jne
push
lods
bound
inc
push
xchg
test
push
lea
lret
aaa
fisubs
fisttps
fmuls
adc
mov
adc
js
or
test
ret
mov
push
lock
daa
xchg
fldcw
cmpsl
and
enter
mov
fmuls
call
mov
mov
adc
ja
push
sub
or
loop
push
es
sbb
in
pop
push
pop
loope
dec
je
dec
lods
scas
fwait
int3
dec
adc
jns
mov
insb
les
pop
loopne
jno
ss
jmp
mov
inc
adc
pop
push
sub
cmp
dec
xchg
add
dec
mov
mov
xor
mov
push
jl
fcoml
mov
cmc
inc
repz
and
add
add
outsl
pusha
ret
imul
push
outsl
sub
xchg
push
into
inc
inc
dec
lahf
out
push
ja
das
data16
hlt
clc
pusha
mov
ljmp
frstor
arpl
pushw
lods
jmp
fs
sbb
cmp
cmp
cld
cmc
ret
lds
adc
push
sbbl
dec
mov
dec
mov
loop
test
adc
xor
outsl
adcl
cltd
cmp
dec
lret
popf
add
mov
mov
js
scas
add
mov
pop
jge
rcrl
sub
add
fs
popa
add
notl
imul
push
sar
or
mulb
outsl
mov
cmp
loopne
int
mov
mov
sbb
addr16
dec
inc
add
loope
inc
sbb
pop
push
pop
or
sub
cmp
add
adcl
mov
adc
test
aad
int
divb
sahf
push
and
xchg
cmc
push
inc
cmc
inc
mov
push
mov
and
dec
adc
mov
cltd
movsb
inc
arpl
jo
push
std
xor
cmpl
clc
aam
roll
push
xchg
inc
out
leave
sub
fimuls
ds
sub
add
lea
call
sub
iret
das
lods
cmp
jne
xchg
sbb
or
xor
repnz
pop
mov
addr16
ss
pop
sub
stos
xlat
push
lock
daa
push
movsb
es
lcall
xor
mov
lods
les
lahf
mov
add
iret
mov
add
pop
rcll
inc
and
xor
cmp
xor
leave
fimull
hlt
fwait
inc
loopne
and
into
push
sub
mov
push
in
loop
push
popf
loopne
jnp
fld1
outsl
arpl
pop
pop
jmp
clc
je
nop
mov
jmp
and
mulb
roll
into
push
dec
mov
dec
sub
inc
test
mov
add
xor
imul
push
inc
sti
ret
dec
jbe
push
sti
je
repz
les
cmpsl
cs
ljmp
iret
push
jmp
jmp
mov
jle
mov
pop
push
push
ss
mov
fistl
mov
loopne
ret
arpl
fnstsw
pop
cwtl
adc
dec
cmp
jg
xor
ds
loop
fdivp
mov
ja
inc
jno
cmp
inc
add
mov
inc
jle
pop
es
dec
inc
push
and
outsb
arpl
mov
ficompl
mov
sbb
fildl
xor
clc
das
pop
cmpsl
mov
mov
pop
add
sub
push
inc
lret
sti
add
dec
int
dec
jne
icebp
test
and
shl
lds
mov
pusha
mov
inc
and
xchg
cli
out
add
lret
int3
xchg
in
addl
add
inc
loope
shr
mov
push
and
shlb
in
stos
out
repnz
lods
test
push
loope
enter
mov
mov
pop
mov
push
adc
aas
lods
bound
inc
pop
cmp
sti
mov
cmp
test
iret
fnstsw
outsb
js
add
dec
xchg
mov
aas
xchg
sub
sbb
into
enter
insl
ds
cmpsl
in
add
rclb
insb
popf
bound
fwait
popf
addl
popa
lret
je
push
dec
out
xor
mov
test
jle
add
push
sub
jne
aas
mov
into
xor
negb
sub
adc
ret
mov
cli
fs
ret
scas
mov
movsb
ds
repnz
add
jle
aam
jno
lret
pushf
mov
sbb
inc
pop
mov
inc
sub
lret
pop
aaa
popa
dec
push
sub
mov
mov
push
test
xchg
arpl
inc
inc
jg
out
repz
cmp
cmc
xor
popa
ret
orl
jle
or
sbb
test
add
insl
subl
pushf
cmp
sbb
jnp
popa
or
push
cmp
jg
mov
adcb
push
sub
mov
popa
fnstenv
outsl
xor
pop
lods
jae
mov
pop
pop
xor
xchg
xchg
xor
xchg
cmpsb
add
jb
inc
adc
pop
fildll
daa
add
mov
mov
inc
adc
clc
jecxz
and
push
mov
fstpt
or
out
jno
nop
mov
jp
jp
jg
out
inc
cmp
lret
js
adc
movb
mov
inc
pop
shl
mov
mov
pop
pop
sub
or
scas
out
sbb
pop
cmpsb
mov
daa
push
fmul
dec
jp
test
leave
test
das
in
mov
int3
pop
roll
and
pop
mov
mov
jmp
push
adc
imul
out
in
idiv
iret
inc
imul
xor
and
idiv
lds
sbb
dec
imull
ret
mov
xchg
div
ficoms
xor
enter
push
lret
sbb
bound
dec
jl
add
clc
mov
push
push
jmp
inc
test
stc
xor
repz
sub
and
or
add
jge
jp
xchg
add
jecxz
sbb
push
cmp
inc
je
adcb
into
inc
mov
sbb
adc
loope
push
inc
mov
or
jmp
cmp
mov
push
mov
jg
mov
push
aaa
sbb
lahf
lret
add
lods
test
and
scas
xlat
jle
sbb
inc
mov
call
jg
jns
out
or
jmp
or
pop
ret
inc
fdivs
movsb
sub
in
mov
jns
sar
xor
inc
jo
dec
call
add
xchg
js
adc
lods
xchg
leave
sbb
aaa
ds
hlt
lret
repz
jecxz
inc
loop
out
mov
pop
mov
sub
mov
jl
ret
mov
cmp
mov
sub
repnz
jle
and
mov
clc
loopne
jmp
sbb
insl
mov
jg
mov
das
and
addb
and
and
mov
into
mov
mov
xor
daa
cs
inc
les
cmp
dec
into
jbe
or
mov
inc
pusha
ljmp
lods
lock
mov
dec
and
subl
push
cmp
testl
or
fadds
pop
pop
adc
inc
lods
mov
lcall
fstp
jo
xchg
je
mov
dec
dec
mov
jnp
ficompl
daa
mov
aad
cli
dec
jecxz
test
mov
das
call
ljmp
popf
lods
cmp
cmp
into
pop
dec
cs
push
jle
data16
sbb
addr16
adc
ja
xor
loope
mov
adc
imul
pop
or
repz
jecxz
movsb
mov
mov
rcll
mov
and
pop
lcall
inc
jb
stos
out
sbb
xchg
mov
lods
dec
and
add
and
inc
loope
in
and
test
test
lods
mov
decl
mov
sbb
mov
ds
bound
add
shll
nop
sub
in
pusha
adc
out
in
xor
push
je
fcompl
cs
cltd
push
cmpsl
jae
iret
imul
inc
ljmp
cli
inc
outsb
sti
pop
push
fisubs
cmp
fcom
out
jno
adc
stos
jg
mov
xchg
xor
out
arpl
jb
push
pusha
cmp
jne
xor
inc
daa
outsb
inc
push
jp
mov
inc
sbb
mov
shll
stos
mov
int3
pop
inc
sbb
xlat
sbb
push
sub
xor
pop
push
daa
imul
xchg
xor
and
jl
les
loop
lahf
inc
sar
addb
pop
filds
clc
mov
sub
dec
mov
mov
daa
jae
pop
xchg
in
scas
push
imul
test
aad
dec
cli
xor
pop
imul
or
mov
sbb
lahf
xor
cmp
incl
mov
push
push
xchg
mov
stos
push
xor
rclb
idiv
test
ljmp
sbb
scas
xchg
sbb
rcrb
pop
lods
push
sbb
mov
push
sbb
sub
xchg
aad
sbb
sahf
xchg
rorl
mov
or
cli
out
out
sub
pop
into
js
jmp
cmpsl
push
jl
lahf
xor
into
push
fsubrl
jg
mov
insl
fiadds
jne
gs
jo
and
or
arpl
mov
and
xorb
jle
fwait
int
lret
addr16
les
repnz
xchg
ljmp
mov
and
aam
xor
icebp
push
mov
mov
stos
dec
addb
stos
ss
jl
test
push
jnp
fcomip
clc
mov
push
and
push
adc
fdivl
insb
sbb
jb
dec
fs
fwait
nop
jnp
ja
cmpsb
movsl
shll
sub
call
jae
fisttpll
es
mov
outsb
sbb
xchg
enter
jo
bound
and
out
hlt
inc
lcall
clc
stc
pop
push
ljmp
and
test
fdivp
js
cmp
lods
mov
dec
aaa
stos
pop
lock
adc
lret
js
jo
xchg
or
test
mov
pop
cmpsb
out
inc
mov
lods
cmpsl
test
jle
repnz
enter
je
or
dec
sbb
adc
adc
rcl
lret
push
std
fsubs
lds
jp
es
lahf
iret
out
jnp
loope
out
lods
pop
stos
and
push
iret
inc
stc
jmp
dec
mov
pop
xor
loop
xor
sbb
nop
mov
push
jmp
push
cmp
xchg
subb
adc
dec
jae
jge
insb
dec
or
out
int3
loope
lods
dec
repz
insl
dec
ja
je
test
in
in
mov
rcl
pusha
test
mov
push
mov
sbb
ss
or
jns
adc
mov
pop
jecxz
pop
mov
pop
xchg
hlt
ds
pop
mov
mov
xor
dec
inc
xchg
jge
jecxz
pushf
fisttpll
mov
cld
push
stos
movsb
dec
scas
mov
and
inc
add
jp
push
iret
sub
cmc
add
pusha
faddl
test
out
sub
push
xor
cmpsb
jmp
or
stc
mov
inc
pop
cwtl
adc
and
and
movsl
nop
call
scas
data16
xchg
lock
jge
lret
das
adc
xor
cmc
mov
inc
cwtl
dec
xchg
jns
jbe
dec
call
jmp
outsl
adc
fwait
mov
and
movsb
fisttpl
rorl
mov
movsl
jb
jecxz
test
subl
inc
mov
sbb
shll
jg
sub
jno
dec
cmc
push
adc
sbbl
mov
cwtl
jge
dec
push
rcl
sbbb
jmp
lret
add
arpl
push
inc
mov
mov
xchg
push
adc
mov
cmp
pop
cmpl
les
loope
negb
movsb
jnp
mov
imul
fidivs
cmp
xor
mov
pusha
push
push
push
stos
push
outsb
js
fcomps
mov
push
insl
jo
jle
inc
push
cmc
push
inc
iret
sahf
popf
popf
ds
xor
mov
lret
daa
mov
mov
adc
mov
mov
sub
sahf
push
das
fidivs
scas
cmc
arpl
inc
or
mov
stc
dec
push
cwtl
punpckhbw
out
jbe
jae
jbe
and
xchg
dec
adc
aas
xchg
scas
jg
add
mov
or
loopne
cmp
popf
or
in
pop
push
cld
xor
add
and
inc
iret
mov
mov
rol
test
or
xchg
std
xchg
into
push
orl
lea
and
scas
or
scas
mov
pop
push
ret
and
adc
push
ret
mov
mov
out
imulb
pop
sbb
repnz
out
jae
lcall
pop
adc
cmp
fmul
xor
out
mov
sub
insb
or
aaa
xor
mov
ds
cmp
jbe
cmp
aas
xchg
mov
test
nop
dec
movsl
or
mov
dec
inc
lods
lock
rorb
mov
mov
pop
icebp
mov
pusha
in
out
call
xchg
pushf
in
xor
iret
push
leave
dec
mov
lcall
inc
nop
mov
jno
cmp
dec
aas
bound
add
fstl
fwait
mov
sti
lea
or
push
mov
daa
addb
ds
xchg
mov
push
sahf
push
mov
and
inc
out
in
push
or
imul
mov
add
sti
adc
dec
or
in
mov
jns
push
push
ret
xlat
add
std
cmp
pop
movsb
sbb
lret
out
xor
mov
jp
xchg
and
xor
xchg
sub
dec
daa
sti
aaa
shll
mov
sub
inc
mov
jo
ds
hlt
in
cwtl
jae
loop
clc
int3
jbe
push
xchg
or
mov
sub
adc
dec
inc
push
pop
pop
push
sub
pop
mov
aaa
popf
lret
push
loop
in
mov
rcrl
sbbl
adc
repz
ret
and
movsl
adc
xor
xor
sbb
pop
add
xchg
cmp
mov
adc
lock
and
mov
je
movl
mov
fwait
ret
sbb
ds
cli
popa
in
cmpl
cld
in
stc
push
lret
daa
shlb
mov
aam
sub
adc
dec
xchg
ret
or
mov
mov
nop
clc
dec
fwait
or
sbb
sbb
aas
test
lret
mov
out
jge
cmovnp
and
sahf
enter
in
test
stos
mov
or
pop
xchg
pop
pop
nop
mov
sub
jno
dec
in
vminpd
pusha
decb
mov
lret
movsl
adc
mov
xchg
idiv
jp
or
jecxz
jle
fists
ds
icebp
lahf
xchg
ret
out
addr16
push
and
cltd
es
or
cwtl
pop
or
into
xchg
inc
mov
ja
loope
adc
xor
in
xor
xchg
call
repnz
mov
in
cmp
adc
dec
push
jmp
int
sub
loop
jl,pt
push
xchg
addr16
xor
data16
cmp
push
jmp
and
adc
das
xor
xchg
jle
mov
mov
pop
pop
int
mov
pusha
cs
jae
data16
add
push
xlat
cmpsb
xlat
les
cmc
hlt
sti
test
xchg
jmp
test
sub
loopne
or
das
icebp
test
pop
out
aaa
out
lret
mov
movsb
mov
cld
fildl
push
stos
int3
js
aad
sbb
movsl
push
adc
mov
lods
cmp
push
lret
or
or
out
jo
int
xchg
inc
pop
sbb
test
cmp
int
repz
out
lret
mov
loopne
sub
dec
and
sbb
scas
sub
gs
enter
fcomps
mov
fs
add
jae
sti
dec
adcl
shl
sub
sbb
push
pop
pop
in
mov
clc
test
in
mov
pop
popf
lds
mov
push
shl
cmp
mov
dec
aad
jno
lret
mov
xchg
push
lock
shrl
fstpl
insb
out
jl
mov
sbb
inc
add
xor
addb
cmpsl
mov
loopne
lods
jecxz
pextrw
imul
jmp
push
repz
int
xor
loopne
sub
decl
insl
pop
bound
pop
xchg
push
and
jnp
mov
jge
cltd
ja
jbe
or
xor
xor
std
xlat
lock
jle
ja
mov
mov
lock
or
hlt
pop
out
and
cmpl
out
and
pop
xor
add
and
pop
and
mov
je
lea
jecxz
adc
fwait
mov
in
outsl
adc
pop
fsubrl
jnp
imull
pop
dec
pop
inc
and
sbb
or
mov
adc
mov
outsb
mov
mov
dec
dec
add
dec
sbb
shl
mov
xor
xor
fidivl
gs
into
pop
push
and
out
insb
jns
xor
dec
jbe
outsb
cpuid
mov
iret
js
fwait
ljmp
sarb
jb
nop
sar
push
pop
mov
ss
or
jns
arpl
mull
pop
lea
mov
lahf
adc
nop
lods
sub
mov
mov
imul
icebp
dec
jo
or
lock
push
push
dec
repz
stos
rorl
cmp
dec
andb
xor
inc
or
sbb
icebp
shlb
outsb
das
lahf
sbb
jp
clc
mov
cmp
iret
add
mov
sub
out
shlb
push
jge
mov
movsl
outsl
in
sbb
xchg
mov
icebp
pop
scas
pop
pop
test
jmp
mov
scas
pop
xor
fucomp
cmp
sbb
insb
fidivl
call
iret
lahf
adc
pop
repnz
cwtl
int
jmp
jecxz
insb
fsub
addr16
out
cs
or
jge
dec
int3
sub
lret
cmp
lahf
test
mov
adc
pop
fdivs
dec
fstl
out
mov
xlat
out
rcrl
movsb
lock
push
cmpsl
dec
js
cltd
addr16
push
cli
vaddss
cmp
cmpsb
lock
ds
hlt
cmp
pop
cmp
fs
out
mov
sub
out
fimull
mov
pop
loop
push
mov
xchg
test
add
cltd
popa
insb
subl
push
ljmp
paddd
pop
or
cmp
mov
add
inc
test
outsl
int
in
mov
mov
dec
sub
xchg
dec
xchg
gs
ljmp
or
pop
pushf
shrl
adc
adc
test
mov
fistpll
outsb
xchg
stos
xor
lret
add
push
sbb
test
jno
mov
mov
add
pop
jbe
or
mov
out
lods
push
sub
dec
pop
fstpl
sub
shll
lods
aaa
xor
cmpsb
inc
dec
in
dec
pop
in
and
dec
xor
add
lcall
pushf
or
scas
test
aaa
mov
jnp
sbb
add
sub
adc
add
gs
push
test
outsb
enter
imul
mov
cld
pop
inc
in
cmc
insb
in
out
imulb
push
rol
popf
and
add
les
inc
outsb
int
xchg
ljmp
xor
out
xor
out
xchg
xor
mov
mov
cmp
imul
adc
loop
leave
mov
cmp
jne
mov
adc
mov
xor
fldcw
call
daa
mov
leave
cld
and
jge
dec
sarl
sub
pop
sbb
adc
dec
les
push
subb
mov
or
enter
ljmp
jo
add
cmp
stos
addr16
inc
dec
xchg
push
dec
inc
sbb
movsb
push
jbe
int
mov
sar
mov
fiadds
rorb
add
or
imul
jmp
mov
test
inc
insb
rclb
pop
mov
lock
pop
add
or
in
or
addl
jns
pop
imul
xor
test
rclb
mov
add
xchg
into
jno
mov
xchg
dec
cld
mov
stos
push
mov
fcomps
lods
enter
sti
incb
aad
inc
cwtl
and
mov
daa
repz
jge
in
jns
adc
mov
or
mov
inc
fdecstp
scas
popa
stc
add
jecxz
mov
fstp
mov
pop
xor
xor
fstpl
push
call
les
loop
std
fsubrp
popf
add
xor
and
bound
roll
and
sub
push
adc
inc
sbb
in
scas
jno
lods
add
xchg
insl
mov
mov
sbb
std
cmp
mov
jne
outsl
fwait
fs
dec
mov
test
inc
jae
xor
stos
ja
scas
daa
push
arpl
mov
or
push
sbb
mov
pop
inc
in
imul
daa
sbb
mov
fnsave
dec
push
inc
adc
faddl
mov
add
pop
mov
divl
push
loopne,pn
or
jp
jg
rcl
pop
out
sbb
and
inc
push
sub
nop
mov
aam
stos
ja
and
in
mov
lret
loope
push
jmp
xchg
test
shll
cmpsb
sbb
adc
and
shll
jae
into
outsl
stc
cmp
insb
dec
dec
mov
into
lcall
mov
outsb
pop
shl
out
mov
std
cmp
adc
mulb
or
pop
or
mov
cltd
test
sti
ds
fld
push
push
mov
push
adc
mov
les
insb
shll
aam
out
jbe
mov
adc
aas
mov
add
pop
xchg
call
test
inc
fwait
sub
mov
sahf
pop
mov
xchg
sub
dec
pop
sbb
pop
rol
in
jno
or
xchg
pop
je
cmpb
sub
and
cwtl
cld
cs
dec
hlt
aad
push
out
jmp
mov
rsqrtps
rcrl
iret
in
cmpsl
shrl
lds
lret
push
pop
pushf
push
sahf
cmp
pop
sbb
ja
mov
mov
sub
add
xor
sub
and
xor
lcall
jno
mov
and
inc
jns
stos
lods
ljmp
fucom
popa
imul
pop
push
mov
les
aam
and
jbe
mov
jbe
out
movsb
mov
mov
push
stc
sub
ja
sarl
pusha
fnstenv
jp
dec
pop
or
push
mov
push
jno
and
sahf
popf
mov
pop
scas
xchg
in
sbb
cmc
into
loopne
push
das
arpl
repz
add
dec
adc
or
ds
push
dec
jns
mov
scas
jmp
push
mov
in
shrb
cmpsb
out
or
mov
nop
test
mov
in
fstps
into
ret
or
out
and
test
aas
arpl
sub
jmp
or
push
loop
adc
loope
inc
ja
scas
fwait
insb
fdivs
jno
shll
aas
mov
cmpb
cmp
scas
jo
je
sahf
dec
aaa
shll
std
jecxz
push
pop
ljmp
cmpsl
mov
sub
dec
mov
pop
xor
das
cmp
jp
xchg
jb
jge
and
xchg
pop
add
mov
xchg
outsb
adc
js
jae
push
inc
insb
xchg
xor
nop
push
icebp
addl
insb
jp
iret
cmp
xchg
xor
out
icebp
jl
adc
je
cli
push
cmp
jnp
ret
test
xchg
insl
jl
pop
and
je
int3
pop
fwait
add
cmp
cli
fdivrs
arpl
shl
xchg
push
sti
test
jns
push
inc
lahf
dec
stos
jg
fstpl
dec
dec
dec
insl
scas
xor
je
gs
add
out
in
xchg
aam
mov
sub
sahf
mov
aad
fmull
xchg
rcl
mov
jl
stc
add
mov
movsl
dec
arpl
roll
xchg
rolb
sarl
in
adc
jnp
push
mov
pop
int
adc
push
andl
frstor
stos
mov
iret
adc
shr
outsb
sub
mov
xor
jns
and
test
in
jo
outsl
jnp
inc
jbe
jmp
pop
ss
testl
insl
push
pop
sbb
add
nop
jge
mov
jge
xlat
cli
pop
sar
push
add
rcrl
or
cwtl
insl
ja
dec
dec
jnp
test
add
jle
cmpsl
lret
xchg
rcrb
sbb
jbe
xor
pushf
mov
jb
xchg
push
xor
pop
test
sub
xchg
fldl
or
fadd
in
inc
xchg
xchg
aaa
xor
fistps
sub
test
pop
jle
test
sub
xchg
or
push
xor
sahf
aas
mov
rorb
push
lret
ret
in
out
imul
insb
mov
lea
jle
pop
out
gs
repz
or
and
mov
push
pop
sub
cwtl
mov
dec
gs
cmc
xorb
sahf
ficomps
insl
cld
sbb
and
shll
dec
out
scas
mov
loopne
lods
test
adc
dec
jl
lock
or
or
xchg
insb
call
shlb
call
icebp
outsb
imul
or
fistpl
bound
outsl
cmp
push
shll
test
test
icebp
xorb
in
mov
cmp
pop
pop
cmp
bound
xchg
mov
push
push
push
cmp
out
cmp
sub
push
mov
pop
in
or
cmpsl
push
repz
call
pop
pop
pusha
dec
call
jl
std
jg
push
inc
sub
sub
daa
sbb
flds
je
fsts
jle
jb
pop
dec
nop
lret
ljmp
sarb
ja
std
nop
or
adc
stos
or
or
fimuls
inc
test
lahf
jl
xor
rolb
pop
add
cmp
xor
adc
out
insb
call
scas
aad
subb
mov
lea
sti
xchg
aam
iret
icebp
test
nop
sbb
sub
ss
mov
and
push
cld
jnp
push
mov
jnp
push
rorl
push
inc
imul
push
leave
add
loopne
lret
fimull
jl
fdivp
test
repz
daa
daa
test
enter
pop
sbb
ljmp
add
push
repz
push
or
jb
das
mov
addr16
sub
shll
or
mov
or
subb
adc
dec
insl
or
cmc
inc
in
and
nop
int3
mov
call
sarl
push
sbb
sbb
and
fistpll
pop
push
cld
fcoml
push
lret
mov
xchg
cmp
movsl
mov
push
icebp
cmpsl
and
push
test
lods
pushl
aas
test
and
push
mov
xchg
jbe
mov
sbb
je
sti
test
in
push
mov
fistpl
xchg
out
push
jp
mov
or
inc
mov
test
jl
out
std
imul
xchg
mov
ficompl
jbe
fstpl
add
iret
push
insl
filds
shlb
in
jecxz
ss
fildll
mov
inc
mov
nop
fsubl
sub
hlt
mov
inc
cmc
aam
mov
dec
mov
push
movsl
in
outsl
addr16
sbb
pop
dec
lahf
je
lods
loopne
dec
mov
jb
mov
jl
adc
add
les
mov
push
clc
xchg
cmpb
or
vpavgb
lock
aas
jle
repnz
or
test
aam
jae
ficomps
cmp
pop
push
rsqrtps
mov
pop
aaa
mov
and
xor
mov
enter
out
pop
push
cmc
ljmp
dec
test
data16
bound
pop
push
mov
rclb
mov
gs
inc
std
sub
call
fs
je
mov
addl
ret
ret
sbb
xor
push
cld
inc
outsb
xchg
lcall
dec
cmp
push
pop
xchg
mov
nop
das
pop
andl
sarb
movsl
repz
adc
and
mov
out
mov
push
push
decl
adc
mov
inc
pop
int3
std
shll
push
sbb
jp
jmp
ds
adc
mov
sub
shll
or
test
or
nop
xchg
adc
jmp
and
aas
xor
ja
push
ficompl
arpl
cmpl
ja
mov
shrb
pusha
push
fidivl
test
cmp
and
pop
xor
jge
sbb
sub
xchg
mov
shrb
jl
leave
or
mov
xor
jo
incb
adc
and
std
mov
fwait
stos
jmp
cli
test
add
pop
sbb
xor
je
cmpsb
sbbl
out
sahf
inc
cltd
jne
pop
push
outsb
jg
cmp
and
imul
enter
cmp
rol
dec
mov
xchg
push
sub
jg
inc
aaa
inc
mov
popf
pop
inc
mov
mov
and
fiaddl
into
fwait
ret
push
jp
sub
sarb
xchg
addl
je
shl
or
add
lock
ss
ljmp
jge
inc
and
in
jno
or
lds
shrl
cltd
lods
inc
cmp
lcall
ja
push
daa
mov
cmp
push
sub
xchg
fwait
call
in
into
mov
rcrb
and
sub
mov
pop
fisttps
sbb
aas
cwtl
loop
mov
and
mov
stos
push
xor
mov
xchg
movsl
lods
lock
rorb
int3
mov
lahf
loope
bound
xor
and
adc
xchg
aas
inc
subb
adc
jne
mov
insb
cli
push
aad
mov
xchg
or
mov
push
shl
and
lcall
mov
repz
push
jo
jo
xchg
subl
cmc
sbb
push
icebp
inc
push
pop
fldln2
ds
mov
adcb
fisubs
pop
leave
mov
outsl
in
orb
jecxz
repz
lods
cmp
jmp
out
mov
and
in
jge
int3
sub
mov
xor
dec
jne
shrb
in
dec
add
loope
in
shll
ja
rcrl
dec
leave
mov
sbb
stos
dec
and
or
sub
iret
test
push
push
cmpsl
mov
push
das
lret
fsubl
dec
mov
or
cld
mov
sbb
pushf
cmp
in
xchg
cld
xor
call
pusha
ss
and
lahf
cmp
sti
push
cmp
push
int3
stos
dec
cmpsl
mov
mov
pop
pop
andb
out
pop
data16
inc
data16
jae
jo
jbe
jo
xlat
pop
adc
sub
shl
push
xchg
test
sub
jne
cmp
jns
cmpsl
dec
subl
gs
bound
mov
les
test
popf
ds
add
adc
sbb
cmc
mov
or
and
xchg
xlat
clc
push
jns
jnp
pop
test
adc
mov
es
fwait
adc
and
dec
lea
addl
inc
sub
int
add
or
insl
push
clc
testb
pop
movsb
mov
mov
lret
inc
sbb
pop
repnz
ds
pop
cmpsl
adc
stc
or
xchg
scas
cmpb
dec
inc
mov
pop
aaa
test
mov
loop
jl
cmp
leave
cmp
stos
jns
mov
negl
fidivrs
js
icebp
inc
pushf
sub
mov
push
lods
popf
int
inc
pop
gs
imul
xor
xor
jnp
mov
push
arpl
test
divl
gs
jp
mov
rol
mov
adc
mov
aas
pop
mov
xor
clc
or
jmp
and
push
cmp
push
push
sbb
mov
out
sbb
pop
mov
or
mov
in
sub
lcall
aam
push
mov
rcll
push
test
popf
loopne
mov
jno
fsubr
dec
shll
cmc
sti
pop
sbb
arpl
jnp
fcoml
iret
push
jnp
jmp
rorl
xchg
push
pop
cmc
jno
or
das
jle
pop
ljmp
jmp
int3
mov
jl
scas
sti
sub
push
andb
sub
pop
mov
or
sahf
aad
adc
in
js
iret
enter
adc
mov
jg
in
jns
sahf
pavgb
mov
pop
sbb
repnz
mov
xchg
test
lods
mov
mov
andb
stos
fs
nop
jno
sbb
pusha
int3
pop
rol
push
push
push
ror
push
imul
sarl
ret
fcmovnbe
pop
pop
gs
xlat
out
inc
jle
mov
add
sbb
inc
sbb
ficomps
cli
mov
call
and
xchg
jle
lods
xchg
loope
mov
xchg
pop
and
mov
sbb
cmpsl
pop
lahf
dec
jo
scas
fbld
pop
icebp
push
int
inc
lret
insb
add
in
icebp
lret
outsb
lods
pop
les
call
jae
cli
ljmp
repz
inc
pop
cwtl
ds
pop
xlat
jnp
lcall
add
adc
push
loop
dec
xor
shrb
push
sti
mov
xor
dec
ficompl
sbb
push
push
push
outsb
sbb
ja
fdivrp
jae
adc
addr16
iret
pop
sub
out
orl
jno
cli
mov
mov
fwait
lods
sbb
add
cmp
and
push
add
das
ret
in
aas
xor
hlt
jne
cwtl
stos
lahf
add
into
and
das
ss
pop
out
int
jae
push
and
inc
mov
jae
lahf
sbb
sbb
inc
ficoml
das
and
jl
pushf
jne
jne
xor
pop
fldenv
cmpsl
xor
fnsave
push
or
sub
rcll
push
cmp
vpminsw
scas
xor
fildll
push
inc
andnpd
adc
je
xor
test
in
sbb
jmp
push
lahf
xor
lods
mov
inc
jne
or
jmp
inc
mov
sbb
out
dec
fwait
and
iret
popf
sub
xchg
jo
and
lock
inc
mov
mov
push
push
pop
hlt
mov
and
sbb
lcall
dec
add
dec
adc
push
lret
out
aad
push
ss
cmpsb
mov
push
and
imul
imul
cmp
out
mov
outsb
lret
jnp
sbb
pop
out
and
scas
sub
int
mov
mov
test
in
divb
xchg
ficompl
mov
ja
or
int
xchg
cmpl
mov
cltd
mov
fs
cmp
jo
cmp
sub
aas
into
xchg
inc
pusha
jb
mov
dec
push
fisttps
sbb
imul
jbe
pop
push
jecxz
scas
adc
or
shld
outsb
pop
ds
jg
in
iret
xor
cli
mov
leave
repz
mov
test
cmp
imulb
into
push
cmp
pop
xor
sbb
fidivs
test
aaa
mov
add
mov
adc
stc
hlt
daa
fistpll
imul
cmp
jg
out
mov
outsl
and
push
repz
xor
lret
and
shrw
cmpsb
ret
mov
iret
aad
mov
das
mov
stos
jno
dec
hlt
mov
les
pushf
stc
inc
xlat
pushf
jecxz
jle
inc
add
and
mov
pusha
ret
outsl
clc
ja
enter
jmp
add
clc
xchg
pop
shrb
das
test
mov
xlat
fs
cld
rclb
outsb
sub
rol
inc
adc
pop
ja
inc
add
sub
or
mov
out
mov
mov
scas
mov
sbb
adc
in
repnz
je
and
mov
xor
popa
in
lret
xchg
add
icebp
in
push
sbb
lcall
dec
xchg
or
iret
pop
push
sub
pop
gs
dec
xchg
das
mov
mov
dec
pop
rcrl
jne
popa
insb
mov
mov
push
insb
cmp
pusha
clc
or
push
jmp
outsb
add
sbb
push
clc
sarb
das
xor
dec
outsl
cmp
pop
dec
lret
sar
sub
ror
nop
xchg
in
cmp
je
xchg
std
pop
in
add
and
adc
mov
test
xor
xchg
les
ret
add
or
push
or
add
jbe
in
cltd
roll
fistpll
pop
rcr
adc
xor
dec
popa
inc
push
fucom
es
mov
xchg
jecxz
testl
aas
ljmp
push
xor
movsl
aaa
stos
sti
add
daa
jae
xor
fs
sub
mov
mov
adcl
cmpb
inc
sbb
nop
ret
add
pop
pop
in
loop
cs
add
xchg
push
daa
icebp
addl
sarb
and
and
xchg
and
addb
dec
pop
sbb
lahf
mov
repnz
mov
in
xchg
pop
das
mov
mov
fbstp
cmp
int3
xor
vpaddd
clc
push
nopl
aaa
aas
mov
jl
loopne
roll
test
in
in
adc
pop
sbb
or
xchg
mov
imul
inc
stc
inc
mov
test
test
std
push
mov
data16
bound
idivb
jne
ja
out
and
imul
push
ljmp
ja
dec
or
pop
insl
cmp
mov
jecxz
xchg
int3
xchg
pop
sar
icebp
push
frstor
mov
ret
dec
mov
fisubrl
rcr
loopne
lods
rorl
mov
fs
xor
aaa
mov
pusha
out
ljmp
sub
and
xor
dec
jge
xchg
dec
arpl
add
cli
mov
scas
clc
movsl
cmpsb
pop
mov
shrb
sub
add
xchg
fwait
outsb
jge
pop
js
and
mov
das
mov
fdivp
push
mov
es
cmpsb
mov
icebp
sub
xchg
pop
push
out
xchg
pop
xor
or
pusha
pop
decb
inc
rorb
rorb
and
fmuls
iret
and
repz
cmp
popa
bound
enter
sbb
cltd
mov
leave
rclb
mov
stc
push
fcompl
cmc
enter
push
cli
xlat
push
adc
sbb
cmc
mov
ds
out
dec
mov
adc
inc
or
mov
and
pop
xor
add
mov
lock
cmp
jmp
clc
leave
cmp
outsb
call
scas
jnp
adc
setg
in
fcmove
stos
cmpsl
inc
sbb
jg
xor
cmp
sbb
outsl
sub
or
sub
jo
lret
test
idiv
push
pop
pop
cmp
dec
jne
lahf
mov
ss
outsb
push
push
das
ljmp
mov
sarl
jae
frstor
adcl
clc
jge
stc
xchg
arpl
push
xchg
sbb
cli
and
nop
xchg
pop
and
in
push
fildl
pop
in
inc
add
sarl
lock
jle
lret
add
inc
or
add
scas
mov
xchg
mov
mov
int3
pop
mov
test
out
ret
fistps
dec
sbbl
sub
test
jmp
adc
push
adc
lahf
inc
push
xlat
lret
leave
adc
sbb
out
dec
mov
loopne
rclb
sarl
arpl
inc
mov
xchg
adc
mov
data16
xor
aas
mov
xor
mov
xchg
adc
push
mov
mov
pop
push
jp
leave
sub
sti
mov
jle
mov
scas
cltd
inc
aas
xor
popa
decb
stos
mov
push
cmc
scas
xor
or
stos
jmp
sub
mov
je
lods
shll
int3
xchg
or
inc
xchg
shlb
mov
faddl
sub
pop
cltd
lea
rorb
jnp
or
dec
idiv
adc
push
fisttpl
sub
jns
mov
insb
popf
cmpsb
push
adc
xchg
sub
pop
loop
flds
les
and
pushf
lcall
stos
adc
mov
cld
aaa
push
fistpl
or
sub
stos
mov
lods
pusha
std
cmp
stos
adc
test
jne
in
test
aaa
fsubs
int
lock
pop
mov
inc
test
mov
repz
push
pop
xor
or
pop
mov
cli
clc
sbb
in
xchg
enter
push
push
aas
ret
inc
inc
push
lahf
xchg
sub
add
pushf
ljmp
lret
xor
dec
mov
push
jl
xor
ficompl
sub
inc
aaa
leave
inc
mov
mov
mov
pop
ret
mov
mov
pop
add
xor
pop
xchg
shll
xchg
dec
mov
adc
into
jb
adc
xor
cmpsl
adc
adc
push
sbb
sbb
leave
inc
inc
jecxz
scas
xchg
loope
call
push
push
dec
add
fidivl
adc
movsb
push
inc
jno
sbb
mov
jae
test
stos
rcrl
scas
xor
hlt
inc
sbb
jge
xchg
cmp
std
mov
pop
rol
adc
lret
outsb
xor
adc
lea
mov
jecxz
out
and
rclb
out
popf
rorl
push
sub
push
mov
pop
jge
ljmp
xor
adc
mov
cmpsb
push
rcll
pop
add
std
mov
jle
jge
sbb
into
insb
repz
cmpsb
mov
negb
or
loope
and
es
xor
xor
pusha
imull
ret
mov
mov
loop
adc
jnp
ficompl
sbb
std
xor
cmp
lods
je
in
jne
mov
jp
sub
test
ljmp
mov
rol
ja
fnstsw
loopne
push
pop
daa
inc
and
jl
jbe
lret
enter
xor
dec
outsl
or
outsb
push
ret
bound
pushl
pop
enter
movsb
sbb
pushf
and
jbe
sbb
not
add
cwtl
idivb
andl
cmpsl
pop
out
jg
push
sti
cmc
lret
sbb
mov
addr16
sbb
lahf
xor
push
add
adc
and
insl
arpl
rcrb
pop
sbb
in
aaa
std
pop
xchg
xchg
or
call
pop
inc
adc
mov
pop
aam
jb
nop
aas
dec
mov
aaa
pop
test
icebp
pop
aaa
xor
cmp
cmp
ljmp
iret
push
mov
cmp
sarb
xchg
xchg
xchg
and
roll
dec
xor
cmc
loope
mov
xchg
xchg
in
dec
push
stos
push
add
pop
cmpsl
test
cmp
notb
inc
lea
nop
or
inc
lock
jge
sub
lds
jnp
and
int3
ficoml
sub
add
xchg
or
iret
imul
xlat
lods
iret
shl
movsl
jb
subb
in
ss
add
inc
clc
leave
jp
decb
out
insb
stos
pop
push
cmp
mov
mov
push
sub
outsb
and
push
adc
jg
lock
jmp
stc
cmp
mov
rclb
sub
jg
gs
sbb
fwait
je
sbb
fisttpll
andb
pop
mov
pusha
xchg
add
adc
mov
mov
pop
or
add
adc
ds
mov
adc
ret
imul
push
xor
adc
mov
xchg
cmp
push
pop
lock
xchg
rcrb
xchg
enter
inc
push
inc
outsb
push
cmp
dec
mov
inc
icebp
mov
in
repz
shr
or
xor
hlt
rolb
and
jo
arpl
adcl
fwait
adc
ja
or
or
xchg
xchg
fbstp
test
and
push
dec
mov
fstl
xor
adcb
arpl
shr
sub
adc
inc
push
pop
std
cmpsl
int3
aas
or
pop
mov
repz
pop
lcall
mov
dec
gs
push
loopne
inc
jbe
sub
fwait
adcb
jne
pop
cwtl
lret
pop
add
cmc
pop
push
sar
dec
add
aad
push
pop
cmpsl
insl
adc
add
inc
mov
mov
out
in
push
mov
fstl
sub
mov
mov
xchg
js
lock
and
mov
inc
mov
sub
mov
jg
ror
js
mov
outsl
add
xlat
push
fsubl
push
add
xchg
testl
dec
mov
jns
dec
leave
mov
decl
push
adc
aam
cwtl
mov
dec
inc
stos
popf
bound
mov
pop
mov
mov
int3
dec
dec
out
sub
jl
popa
test
or
and
in
jae
mov
push
push
mov
repnz
dec
mov
repz
ljmp
adc
mov
sub
and
out
sub
stc
jo
sbb
das
push
dec
shll
xchg
push
pop
sbb
lds
and
int3
sub
or
jnp
mov
pushf
out
xlat
cli
sarb
mov
out
inc
test
lret
popf
mov
popa
push
ret
out
arpl
fwait
pop
adc
push
ret
add
subb
popa
dec
pop
test
xor
xchg
test
adc
int
mov
lods
cmp
sahf
ret
js
xchg
xor
call
lret
cs
int3
push
lret
cltd
and
and
test
fbstp
fadds
push
loope
xchg
outsl
ss
sahf
mov
mov
psllw
movsl
pop
stos
mov
fbld
call
xchg
xchg
iret
js
sub
pop
or
adc
mov
ja
push
inc
and
cmpsb
jp
mov
movsl
icebp
and
mov
mov
pop
inc
pcmpgtb
add
clc
add
cltd
jmp
in
sbb
fdivl
add
fs
or
fsubrl
mov
xchg
pop
lahf
xor
pop
inc
adc
cmpsb
xor
shr
cmpsb
lahf
aam
dec
xor
out
out
popl
bound
add
movsl
rorl
loope
push
les
fwait
aam
mov
lods
test
add
mov
test
pop
insb
pop
and
jp
mov
jo
ret
shl
push
jmp
xor
push
cmpsl
dec
stos
repnz
andl
lock
cmp
lds
scas
loopne
pop
mov
cltd
test
movsb
stos
je
or
cmp
push
clc
into
xchg
sbb
push
push
gs
xor
data16
loopne
lds
orb
push
mov
popa
cmp
lret
xchg
out
hlt
sahf
lea
jnp
arpl
push
popa
adc
or
js
mov
mov
inc
inc
out
jne
jp
sbb
sti
xchg
repz
xor
or
movsb
xor
add
scas
pop
jg
xchg
lods
jb
adc
and
insb
push
and
std
imul
sub
clc
and
jg
jecxz
push
sub
mov
enter
cmpsl
push
cmpsl
popf
mov
adc
outsb
xor
mov
cltd
push
lds
pop
loop
and
mov
mov
xchg
loope
cmp
sbb
stos
xor
repnz
pop
xor
xchg
ret
je
je
fisubl
stc
lds
pop
dec
or
jo
cmp
in
iret
and
and
inc
mov
mov
and
push
aaa
pusha
cmp
cmp
adc
mov
fidivrs
xchg
mov
es
adc
jecxz
popa
lcall
dec
mov
inc
clc
push
jbe
lahf
pop
sub
fistps
mov
sarl
and
dec
sub
sbb
pop
push
mov
hlt
dec
movaps
pop
fnstcw
and
lret
loop
in
or
mov
jnp
stc
stos
enter
sbb
dec
out
les
jae
mov
pusha
jmp
fwait
adc
in
loope
jnp
cltd
repz
jo
cld
pop
pop
out
clc
dec
dec
and
mov
test
mov
jp
xchg
mov
loope
stos
insl
mov
pop
hlt
ja
adcl
adc
sbb
mov
xor
dec
nop
pop
imul
jp
or
stos
repz
cld
insl
ds
rcl
insl
imul
imull
jno
mov
fcoml
adc
mov
xor
mov
je
push
ds
inc
mov
sbb
cmp
aas
sbb
pop
pop
push
pop
inc
push
imul
dec
jp
add
aad
xchg
orl
push
mov
mov
sbb
and
add
aad
outsl
inc
add
aas
imul
hlt
in
imul
outsl
shl
xchg
loop
mov
xor
ss
jecxz
xor
cld
addr16
lea
or
dec
adc
cld
push
sbb
inc
cmp
dec
xchg
stos
inc
into
or
xor
sbb
imul
ficoml
push
add
fildl
rep
fcompl
shll
dec
pop
xor
mov
je
push
scas
xor
xchg
test
xor
enter
lret
xor
push
lcall
nop
xchg
cmp
xchg
jo
inc
mov
js
mov
xchg
sub
call
icebp
sahf
divl
sub
mov
pusha
pop
mov
cmp
je
mov
out
sub
xchg
movsl
call
push
jecxz
inc
or
jb
push
jl
xor
repnz
push
add
cmpl
and
scas
xor
pushf
pop
push
lods
mov
enter
xchg
mov
or
cmpsb
popa
cmp
mov
out
sbb
sti
inc
sbb
repz
dec
outsl
push
cltd
rorb
lahf
cltd
mov
bswap
negl
out
add
xor
xchg
or
and
hlt
pop
fsubrl
xchg
out
inc
mov
mov
add
add
fildll
mov
es
xor
or
std
adc
and
dec
xlat
pop
aaa
sarl
shlb
out
pop
jl
and
cmp
pop
inc
inc
pop
sbb
inc
out
pop
cmp
adc
or
repz
loope
or
jb
orl
scas
gs
push
imul
mov
mov
lock
mov
add
pop
imul
aas
adc
je
dec
lcall
cwtl
enter
imull
movsb
sbb
and
ss
add
xor
icebp
test
xchg
icebp
sbb
enter
lret
gs
arpl
mov
xlat
sbb
enter
dec
sar
mov
ret
shlb
sub
xchg
inc
and
leave
repnz
fwait
push
lea
jmp
test
push
sti
pop
inc
xor
fisttpll
cld
xor
dec
cmpsl
cmc
push
in
dec
mov
jecxz
mov
add
rclb
push
cld
bound
test
into
push
sbb
xor
xlat
mov
or
xor
pop
mov
sti
adc
pop
out
and
in
xchg
scas
adc
mov
clc
loop
insl
cmp
and
inc
and
arpl
jecxz
mov
jmp
push
dec
mov
xchg
int
fs
mov
daa
sahf
mov
jl
ss
push
mov
mov
not
xchg
sbb
stos
inc
dec
push
mov
add
sbb
outsb
pusha
sub
mov
lahf
or
sub
jno
dec
mov
jge
add
sub
inc
aaa
inc
test
mov
clc
in
jb
and
stc
push
imul
sbb
xchg
push
mov
pop
cmpsb
or
add
xchg
mov
loope
mov
test
xchg
push
xor
cltd
insb
sbb
bound
push
or
mov
rorl
or
push
push
in
mov
inc
es
fst
stc
inc
negl
pop
fildl
sub
add
outsb
pop
cwtl
js
ds
out
cmp
jecxz
mov
push
pop
sbb
mov
subl
stos
and
jp
adc
push
jp
jne
jnp
lds
subl
fs
mov
or
adc
adc
loope
pop
adc
out
and
cmp
mov
xor
rol
jecxz
mov
insl
pop
push
loopne
jmp
jg
dec
sahf
ficompl
jb
andl
xchg
mov
mov
ljmp
jno
sti
jg
aad
ljmp
test
mov
jmp
repz
jbe
outsl
negl
clts
pop
dec
mov
lea
inc
dec
mov
enter
imul
sub
mov
mov
data16
fwait
mov
test
das
pop
inc
ret
add
sub
xchg
imul
enter
iret
shll
or
mov
imul
mov
lock
movsl
push
cmpsl
subb
jp
push
add
call
sub
adc
js
out
mov
xlat
jae
ret
jo
jecxz
mov
sbb
jmp
mov
imul
pop
jecxz
dec
pop
sub
cmc
jge
xor
add
push
adc
sar
push
hlt
push
xor
push
shl
adc
jge
sbb
notl
adc
clc
or
popf
add
mov
dec
lcall
push
imul
inc
lret
fmul
push
push
mov
and
sbb
mov
and
inc
mov
inc
push
pop
mov
adc
loopne
es
lods
sub
iret
and
dec
push
sub
dec
fsub
movsb
sbb
mov
jp
imul
jae
lret
into
rcll
jno
add
daa
pop
mov
push
minps
sbb
scas
jns
cli
xchg
mov
rclb
dec
jb,pt
fwait
mov
sbb
push
dec
out
pop
movsb
jno
aad
dec
cwtl
in
jno
sti
outsl
icebp
cwtl
dec
dec
or
mov
sbb
pop
xchg
icebp
jne
push
lods
outsb
lds
rcl
inc
mov
dec
cmc
mov
push
sbb
lods
sub
cmpsb
pop
jbe
xor
or
jo
inc
cmpsb
cli
orb
mov
inc
lcall
inc
hlt
fildll
out
jge
and
out
mov
loopne
pop
mov
ss
scas
dec
int
les
push
enter
mov
out
popa
dec
cmp
push
push
jecxz
les
pop
sarb
fisttpll
outsl
nop
push
enter
mov
add
lea
andl
mov
ljmp
ja
xadd
xor
mov
insl
out
rol
and
xchg
testb
hlt
mov
sbb
xchg
push
xchg
cmpsb
pop
lcall
sarb
and
lret
push
and
loope
pop
pop
sub
and
popa
inc
lahf
bound
cltd
sbb
sti
pushf
movsl
out
insl
adc
dec
and
in
js
icebp
cmp
jbe
or
xchg
imul
xor
mov
clc
int
add
and
inc
pop
incb
filds
push
mov
push
xchg
pop
cmpsl
adc
and
shrl
mov
mov
loope
xchg
xchg
rcr
add
push
leave
test
mov
jnp
and
clc
sbb
ljmp
rorl
outsl
aad
dec
sbb
icebp
sbb
jnp
push
fcmovu
loop
inc
in
arpl
cmp
xor
jae
sub
dec
sbb
lods
stc
fwait
inc
cmpsl
sbb
or
sbb
shrb
pusha
xlat
lret
or
mov
adc
stos
in
jo
cmp
mov
dec
sub
cmc
jo
aaa
ss
mov
push
nop
mov
jo
fwait
mov
mov
pusha
or
mov
insb
sbb
in
pop
pusha
dec
movsb
enter
xor
or
test
ds
pop
xlat
jge
cs
and
push
adc
mov
fwait
mov
add
fs
repz
les
fimull
test
repnz
push
ffree
mov
lods
enter
mov
add
jmp
hlt
mov
xor
pop
or
sub
or
imul
dec
clc
icebp
repnz
or
adc
lret
les
push
mov
mov
mov
jb
jb
outsl
insl
mov
cmovg
inc
inc
dec
pop
sbb
push
push
dec
cmp
clc
dec
xor
cmp
adc
xor
fidivs
out
aad
leave
sub
push
push
sub
mov
mov
rcr
pop
mov
cs
inc
xchg
jecxz
adc
jg,pt
xor
bound
stc
mov
out
int
or
sub
and
push
add
repz
mov
push
adc
adc
iret
popf
or
jg
aaa
in
push
enter
jg
sbb
mov
and
cmp
ret
and
xor
pushf
mov
mov
xchg
lret
mov
pushf
rcl
add
lods
aaa
dec
cmp
je
inc
jmp
cmp
jno
add
loope
stc
xor
and
adc
popf
add
loop
add
push
jmp
adc
ds
mov
mov
fs
popf
fldl
pop
and
insl
xchg
jno
mov
mov
fsts
lret
mov
cli
lret
in
adc
adc
mov
jle
ret
ljmp
iret
xor
push
or
xchg
int3
jp
mov
test
out
fcmovnbe
mov
pusha
and
mov
int3
pop
push
push
int
daa
adc
daa
imul
loope
sahf
mov
cmp
cmc
pop
insl
repnz
and
gs
and
imul
fstpt
inc
cli
jae
sbb
outsb
shrl
stos
pop
jg
cmp
mov
push
lahf
cmp
aas
movsl
popa
jecxz
call
add
push
xor
stos
push
pop
fidivrs
mov
sbb
jne
adc
pop
shrb
dec
sub
sub
les
cld
sbb
pop
lahf
xor
lret
mov
jg
ljmp
in
pop
inc
adc
and
mov
jo,pt
fnstsw
sbb
fistl
fistpll
mov
push
inc
inc
lods
push
shll
test
jno
sarb
mov
movsb
leave
or
sbbl
pop
inc
mov
fistps
cmp
cmpsb
hlt
lahf
adc
sub
in
cmp
and
cmpsl
xchg
lods
lock
in
mov
and
bound
pop
xchg
mov
stos
jge
shr
xchg
mov
add
ret
or
sbb
mov
pop
pop
or
out
jecxz
jne
ret
int3
dec
jne
adc
jecxz
fsubl
and
clc
pop
and
xchg
adc
cmpsl
sarl
ret
add
cld
cmp
cmc
sbb
or
loop
mov
sahf
dec
subb
sub
lods
or
dec
mov
add
ja
adc
push
and
sahf
dec
cmp
sbbl
setbe
sub
out
inc
fcmovnbe
dec
cli
sub
push
push
inc
cmpb
ja
push
pop
mov
jnp
inc
imul
dec
mov
ja
pushf
dec
push
inc
push
out
loop
rcl
xor
sbb
pop
mov
mov
pusha
inc
cmp
out
cmp
sarl
bound
pop
mov
pop
ljmp
ss
or
cltd
xchg
gs
mov
xor
dec
dec
mov
imul
sbb
sbb
call
cmp
cmp
sub
test
cmp
in
pop
jno
fsubp
xor
stos
leave
test
jae
cmp
insl
jns
push
push
mov
push
inc
fldt
jne
cmpsl
imul
ljmp
stos
mov
mov
jmp
mov
mov
hlt
mov
filds
mov
or
int
mov
mulb
jb
icebp
loope
ss
or
icebp
fs
das
out
loopne
dec
mov
in
cs
fidivrl
jae
mov
cmpsb
dec
ja
enter
or
sub
dec
lods
jecxz
or
pop
jle
xchg
mov
out
div
arpl
aaa
icebp
push
mov
mov
cmp
popa
arpl
sahf
adc
gs
cmp
ret
int
fcomip
inc
mov
push
lds
mov
adc
or
je
mov
int
into
fildl
add
cld
mov
sti
push
loopne
pushf
add
mov
or
push
inc
push
xor
sub
popl
repz
lret
lret
cli
call
jmp
dec
sbb
out
push
pop
pushl
frstor
push
jecxz
fbstp
mov
lods
xor
test
lahf
enter
mov
ret
fcompl
adc
mov
cwtl
and
inc
aaa
sbb
adc
mov
adc
in
stc
mov
into
xlat
mov
loop
cs
popf
leave
out
orb
mov
loopne
cmc
jae
ror
loop
adc
inc
mov
loopne
inc
sbb
push
pop
iret
arpl
sahf
lret
scas
scas
sub
mov
test
pusha
sar
test
inc
jp
sbb
lret
shlb
inc
shr
test
lahf
lods
jne
cmp
in
arpl
imul
mov
ret
aad
mov
and
aad
clc
adc
mov
cmc
out
shlb
add
nop
mov
mov
outsl
xchg
mov
repz
jb
cmp
fists
cmp
cmp
scas
in
mov
dec
pop
test
and
sahf
jmp
out
popf
icebp
lods
add
cltd
mov
mov
adc
pop
xlat
insl
cmp
das
das
sti
clc
pop
inc
lea
imul
sbb
loopne
dec
mov
leave
mov
lcall
or
call
vpmulhuw
dec
and
enter
je
mov
das
sbb
sub
push
inc
push
test
into
es
movsl
popa
pop
jns
jge
incl
popf
dec
push
lcall
inc
xlat
mov
push
jbe
imul
insl
push
das
outsb
add
test
shlb
repz
ljmp
jae
int3
xchg
sbb
push
mov
pop
ror
cmc
inc
adc
scas
ja
movsl
jmp
push
dec
push
xchg
xor
cld
xchg
jge
sarl
loope
cmp
cwtl
rolb
jl
push
pop
movl
mov
dec
sub
pop
push
push
sub
loopne
cmp
xchg
shll
ret
dec
int3
inc
shr
mov
xlat
pop
xchg
cli
out
stos
rep
outsl
mov
mov
icebp
pop
movsb
inc
pop
jns
jecxz
sbb
pop
je
mov
or
flds
lcall
enter
or
lret
mov
lcall
out
sub
jne
bound
push
jns
inc
mov
lea
mov
dec
loop
cmp
pop
cld
stc
mov
xchg
ljmp
fsubl
mov
cs
dec
hlt
add
mov
into
cltd
push
cmpsb
and
cwtl
pop
sbb
inc
mov
adc
test
push
xchg
mov
xchg
call
sub
movsl
mov
push
push
add
std
push
ja
cwtl
jl
inc
movsl
gs
inc
xor
jne
cmp
andb
pop
cs
sahf
xor
inc
lret
mov
cmpsl
dec
adc
nop
iret
sub
enter
adc
icebp
outsb
sub
stos
push
addr16
rolb
movsb
mov
mov
jg
ss
icebp
xor
popa
xchg
in
mov
pop
jp
cmc
mov
pushf
fisttps
sbb
out
pop
mov
lahf
ret
xchg
mov
adc
xchg
je
and
and
into
inc
xchg
adc
nop
mov
fcompl
popf
movsb
gs
add
sbb
lds
xlat
and
test
out
adc
pop
mov
dec
push
cwtl
orl
xchg
push
ljmp
pop
or
dec
pop
sub
push
inc
test
push
adc
add
cmp
mov
dec
fwait
cmpxchg8b
enter
adc
popa
mov
mov
lcall
lret
jne
repz
loopne
sub
adc
leave
inc
mov
cli
inc
fldenv
call
inc
add
test
cmp
xchg
xor
mov
addr16
sbb
jp
sbb
xchg
mov
loop
sub
cs
sub
push
test
mov
lret
sarb
adcl
ficoml
testb
or
fdivrl
add
or
fs
push
mov
jae
mov
xchg
mov
int3
inc
sub
mov
xlat
in
sti
xchg
shlb
pop
loop
push
pop
push
fidivl
mov
mov
inc
mov
decl
cmpsl
test
pop
scas
sub
ja
inc
mov
xchg
dec
mov
inc
aaa
mov
mov
andb
in
sub
mov
pop
gs
add
call
insl
outsl
imul
add
pop
sub
lods
pop
stos
int
sbb
mov
and
xor
pop
lahf
inc
pop
aad
jl
lahf
cltd
mov
gs
push
sub
xor
mov
mov
js
aad
addb
adc
lahf
or
mov
inc
sbb
repnz
fmuls
or
sahf
fisubrs
cmp
pop
int3
or
aaa
dec
and
fcmovne
outsb
inc
inc
dec
shld
hlt
xchg
push
in
mov
test
sub
inc
cmc
clc
inc
movsl
cmpsl
xchg
lea
inc
jae
repz
call
test
and
rorb
outsb
cld
cmp
arpl
shll
mov
mov
pop
cmpsb
pop
cld
lds
add
cltd
addr16
scas
aam
pop
push
stc
dec
cli
stos
rep
popf
sar
jnp
dec
lods
lods
loop
pop
lods
insb
add
ljmp
data16
pop
adc
push
jno
cltd
arpl
and
fidivs
mov
test
hlt
lret
or
inc
mov
cmp
pop
into
adc
mov
test
fsubrl
mov
fs
and
cmp
sahf
fists
mov
popf
aad
mov
fsincos
xchg
xlat
ffree
test
movsb
aam
int3
loop
adc
sti
je
iret
stc
decl
leave
add
psrlq
sbb
mov
hlt
cmpl
std
xor
mov
dec
loop
inc
mov
andl
push
addr16
inc
lds
mov
adc
mov
adc
inc
nop
int
aas
fwait
sbb
sbb
jae
pop
movl
movsl
insl
pushf
pop
dec
push
mov
in
jno
jnp
jno
sar
mov
cmpsb
ja
mov
dec
mov
sbb
add
xorl
lcall
cltd
cmpsl
xchg
stc
ljmp
xor
aaa
dec
pop
dec
xor
repz
jbe
arpl
lahf
xchg
xchg
mov
stos
mov
ss
mov
jmp
mov
stc
sub
pop
add
push
test
in
xor
cltd
lret
sub
xchg
and
xchg
dec
mov
test
aad
cld
gs
fcomi
mov
popa
dec
in
imul
hlt
aam
stos
mov
out
push
push
pop
and
loopne
js
cmpsb
sub
test
jmp
sbbb
mov
testl
add
mov
push
or
jo
inc
test
scas
ljmp
xchg
mov
sbb
jbe
inc
jo
add
push
push
adc
mov
sub
call
in
cltd
dec
lahf
lds
das
xlat
sahf
popl
xlat
cwtl
lods
push
xor
jns
mov
mov
mov
data16
jmp
sub
adc
ss
adc
popa
push
lds
push
fisubrs
decl
pop
xchg
inc
in
sub
mov
dec
rcl
add
nop
out
addl
cli
test
cmpsb
or
mov
jecxz
jno
in
jecxz
cmpsb
adc
jle
repnz
daa
repnz
aam
imul
xchg
adc
lds
push
mov
adc
sbb
inc
stos
mov
pop
imul
push
jecxz
push
ficomps
out
clc
xchg
int
dec
push
mov
xchg
imul
push
xlat
dec
inc
mov
xor
outsl
sbb
xor
sarl
leave
push
add
ret
mov
and
and
outsl
cs
sub
add
inc
and
or
enter
sub
jne
inc
add
dec
test
pop
lods
data16
add
daa
pop
sbb
das
cmp
stos
xlat
mov
cs
mov
rcll
cli
addr16
pop
popa
mov
lds
cltd
loop
fldcw
adc
lock
fmull
mov
jns
xlat
ret
mov
sbb
mov
sbb
push
xchg
push
cmp
mov
subb
xchg
pop
or
fiaddl
cmp
inc
aas
jns
mov
dec
dec
lods
outsl
xchg
mov
sub
jl
mov
jl
jecxz
ret
fnsave
loop
fs
pop
mov
movsl
out
data16
xor
filds
xor
dec
mov
addr16
mov
mov
add
cmp
mov
ja
xchg
aas
push
mov
je
leave
sub
mov
xchg
fst
cmp
pop
xor
fs
daa
js
cmp
pop
mov
repnz
xor
pop
mov
xlat
cmp
loopne
adc
xchg
insl
jge
popf
insl
mov
outsb
cs
dec
popf
iret
test
scas
mov
mov
divl
cmp
dec
imul
adc
subl
xchg
les
in
dec
inc
inc
out
out
xor
ja
shrl
cli
sub
mov
mov
aaa
xlat
push
pop
inc
loop
outsl
sub
push
mov
and
dec
ljmp
xor
push
push
scas
out
iret
mov
mov
sub
cmpl
push
lahf
jl
cmp
xchg
or
or
or
test
push
dec
mov
mov
inc
dec
scas
in
and
sub
mov
cmp
movsl
inc
dec
test
pop
repnz
cmp
push
iret
mov
das
icebp
aas
jo
insl
cli
ljmp
push
inc
or
iret
mov
xor
jg
adc
rcrb
and
ljmp
sahf
or
cmp
add
adc
rorl
inc
xor
jb
out
lahf
insb
daa
sub
decb
imul
sub
add
pop
iret
sar
push
or
icebp
dec
pop
xchg
adc
cmpsb
mov
std
fwait
or
inc
xchg
loopne
or
fdivrs
ss
sbb
mov
sub
dec
fimull
jns
daa
xor
sbb
fwait
or
orl
pop
out
les
imul
jge
js
push
jno
mov
jg
sarl
filds
pop
mulb
mov
jo
xor
add
dec
daa
cmc
dec
mov
jge
cwtl
push
scas
je
arpl
add
dec
test
hlt
mov
lds
stc
pop
jne
add
adc
jb
push
mov
ret
sbb
fwait
push
xchg
sbb
cmp
mov
mov
xchg
lock
jecxz
lea
dec
mov
ficoms
mov
xchg
inc
cmp
lcall
cwtl
fwait
xchg
sbb
iret
xor
sub
test
fstps
in
xor
push
mov
fucomi
dec
adc
sbb
mov
in
nop
push
sbb
pushf
mov
cmp
sbb
mov
repnz
pop
gs
mov
test
xchg
data16
ret
xorb
pop
outsl
stc
sbb
sub
push
push
add
mov
fildl
push
adc
in
addr16
mov
sbb
cmp
sbb
shlb
pop
xorb
pop
inc
out
push
ret
fiaddl
xor
fisttpl
mov
push
stos
adc
loopne
ljmp
ljmp
adc
pop
lahf
out
pop
les
mov
jecxz
add
sahf
sub
dec
fmull
das
rclb
xchg
jmp
fistpl
sub
lret
or
hlt
push
add
mov
dec
push
in
mov
cmp
cmp
lcall
inc
mov
les
mov
mov
std
insl
and
xor
inc
sarb
add
jle
int
outsl
mov
inc
sarb
sahf
push
test
popa
mov
movsl
cwtl
push
mov
pop
loopne
adc
inc
cli
aad
jle
cmp
into
into
sub
inc
sbb
add
push
or
jmp
mov
repz
dec
call
out
mov
xchg
add
jnp
cmp
adc
xlat
lret
movw
jmp
scas
lds
sti
sub
sub
lock
out
xlat
cmp
fldl
cmc
mov
cli
rcrl
push
sub
dec
jmp
mov
fstpt
xor
push
jnp
rcrb
icebp
add
push
add
test
aas
cld
xor
cmp
loope
sub
sbb
fisttpll
xor
and
rorb
ret
imul
jns
jns
outsb
nop
push
pop
xchg
pop
cmp
lahf
std
inc
adc
fisubl
in
push
fstp
or
stc
les
aaa
outsl
push
hlt
pop
fcmovbe
bound
sbb
shr
jb
and
inc
mov
mov
les
xchg
push
fs
mov
mov
mov
aas
std
or
ret
enter
xchg
mov
lea
popf
lock
add
aam
dec
dec
and
loope
cmp
mov
insb
int3
mov
pop
lods
movsl
mov
sub
or
call
divl
repnz
jg
add
pop
push
mov
lcall
cmpsl
in
inc
and
adc
mov
ja
adc
jae
xor
mov
cmp
cmp
cmc
sub
cmp
lcall
or
sbb
leave
push
cwtl
push
in
push
leave
clc
loop
loopne
test
jnp
cmp
inc
fnstcw
inc
jmp
inc
xchg
mov
inc
pop
sub
es
loop
cmp
lcall
sub
add
in
push
mov
inc
js
or
xor
and
js
pop
xor
les
lods
jb
stos
sbb
into
in
jae
fimull
xor
mov
xchg
stos
mov
jbe
sbb
mov
xchg
push
cmp
add
js
loope
cmpsl
or
adc
xchg
fdivrs
push
mov
mov
mov
pop
gs
mov
rcrl
out
ljmp
lods
adc
sbb
mov
jbe
jecxz
push
popf
sub
xor
mov
adc
shrl
cmpsl
dec
cld
jae
es
fwait
mov
bound
xchg
xor
add
adc
pop
cs
pop
or
shll
sti
cmp
daa
pop
daa
arpl
je
std
arpl
push
repz
scas
xchg
push
inc
ret
aad
push
fbstp
in
in
add
scas
std
sbb
xor
out
jb
popf
loop
fmul
inc
loopne
fistpll
inc
push
add
dec
lock
xor
les
cld
or
cmp
ss
pop
and
push
mov
scas
insl
stc
repnz
popf
xchg
adc
add
sbb
add
pop
insb
fildl
adc
xor
popa
pop
pop
ds
pop
out
mov
cmp
ja
sti
sub
push
rcrb
xchg
or
mov
addr16
fdivrs
push
shlb
adc
adc
cld
push
or
push
mov
dec
pop
mov
lods
jge
add
adc
push
cmp
aas
aad
sbb
inc
push
add
jge
test
sbb
mov
jb
xchg
and
adc
and
jne
cli
lret
stos
xchg
out
push
pop
out
or
cmp
ss
pop
cmp
or
mov
push
pop
jnp
imul
dec
lcall
push
mov
popa
and
or
xorb
add
imul
sbb
fcomip
or
jo
mov
ljmp
add
add
pop
lods
fdivl
das
in
fidivl
pop
imul
out
imul
loope
mov
mov
out
push
rcrb
dec
imul
scas
lock
out
jbe
jo
popf
pop
sahf
imul
gs
fsubr
dec
es
int3
aaa
in
and
sub
and
sub
hlt
jmp
xor
in
hlt
cmp
push
fidivl
jnp
xchg
xor
notl
add
fwait
cli
outsb
les
mov
jmp
mov
add
test
out
cmpb
out
scas
cmp
sub
je
cld
aas
add
in
cltd
int
jmp
push
mov
or
jg
sub
push
in
push
pushf
cwtl
jle
cmp
clc
jecxz
push
dec
movsb
mov
es
add
lret
push
movsb
xlat
and
hlt
loop
int3
mov
push
mov
mov
mov
pop
pop
ss
mov
frstor
mov
push
mov
rcrl
jle
sti
mov
movsb
mov
outsl
aas
outsb
stc
into
push
add
fwait
js
dec
fs
imul
cmp
or
outsb
int
or
rcll
and
xor
push
jnp
repz
mov
inc
test
aaa
mov
out
xor
xchg
out
mov
fistpl
and
mov
mov
pop
adc
enter
sbbl
cmp
mov
jne
push
xchg
scas
mov
mov
cli
adc
insl
cmp
mov
lahf
int
pop
pop
jecxz
jb
lahf
and
int3
or
sub
or
sbb
inc
int
les
push
enter
mov
fbld
and
mov
stc
pop
mov
mov
loope
int3
push
loope
push
pop
fsub
lcall
pop
jg
jecxz
subl
movsb
push
into
dec
and
inc
lds
xchg
das
cmpl
es
std
sub
into
sbbl
cli
shr
movsbl
mov
jbe
inc
in
push
mov
bound
outsb
lock
sub
jmp
repz
scas
adc
inc
in
pop
cmp
pop
fcomps
fucompp
enter
xor
aad
cmc
enter
orb
insb
xchg
addr16
mov
xor
addb
cmp
sub
lock
lea
out
ret
or
cs
push
outsb
movsb
pop
sbb
arpl
aaa
mov
or
inc
inc
out
inc
mov
outsb
xchg
aad
cwtl
xor
xchg
test
xchg
test
arpl
aaa
pop
daa
fbstp
hlt
xor
icebp
or
cwtl
xor
push
cmpsb
jecxz
sub
fsts
scas
ds
sbb
iret
sub
adc
fmull
jo
pop
jge
xchg
fnstcw
imul
cmp
sbb
in
iret
push
cmp
mov
add
dec
je
jecxz
loop
jle
mov
and
aas
mov
aad
aam
mov
movntq
int
lds
or
aam
shrl
mov
mov
mull
popf
xor
jg
movsb
addb
sub
pushl
sbb
mov
pop
mov
cmp
es
jae
xor
xchg
repnz
mov
push
jp,pn
dec
fnsave
in
adc
lds
mov
push
hlt
inc
push
mov
inc
adc
pop
test
dec
pop
jl
xlat
mov
lea
pop
shlb
pop
xchg
rol
ret
fs
mov
icebp
push
stos
cltd
imul
sub
lea
jb
jne
dec
mov
call
lock
movsl
cmpsl
push
imul
mov
jle
adc
dec
and
and
mov
push
imul
xchg
adc
pop
jl
mov
inc
jp
outsb
scas
ret
repnz
xor
test
jae
rcrl
dec
xor
mov
add
jno
movsl
push
nop
lock
xchg
repz
push
xor
movsl
repnz
sub
imul
mov
movsb
add
fstpl
cmp
inc
stos
in
add
or
sbb
hlt
adc
xorb
lods
push
sbb
push
sbb
cltd
jns
xchg
xchg
fwait
and
popf
orl
repnz
lret
jns
dec
xor
cwtl
pop
fdivrl
xchg
or
xchg
jns
mov
movsb
hlt
movsb
lods
and
adc
loopne
pop
out
rclb
hlt
insl
mov
sbb
add
fadds
mov
sbb
sbb
dec
popf
xchg
idivl
lea
add
cld
out
popf
inc
jb
xor
xor
push
dec
xor
pop
outsb
or
add
bound
cmp
sahf
mov
inc
xor
xor
es
fidivl
adc
popa
loop
pop
stos
sbb
call
inc
add
cwtl
and
test
jl
add
push
adc
rclb
nop
xchg
xor
pop
mov
imull
cmp
adc
sbb
mov
repnz
lcall
loop
inc
testl
into
push
jp
mov
xchg
inc
add
call
ss
adc
mov
ror
or
mov
sbb
mov
sub
rorl
in
shl
fadd
in
lock
js
data16
or
xchg
push
out
outsb
insl
xor
jns
loopne
insl
in
pop
call
mov
mov
xor
out
jecxz
shll
es
fldcw
and
add
add
dec
lcall
add
cmp
inc
pop
insb
stos
movl
jae
out
movsl
repz
mov
lahf
mov
roll
mov
push
push
push
push
js
mov
pop
cmc
push
add
push
cmc
inc
sbb
lret
mov
xchg
xchg
or
push
push
xor
lahf
push
or
movsl
cld
idivb
inc
push
stos
clc
mov
pushf
ficoml
sarb
add
sub
cmp
pop
hlt
pop
addb
mov
xor
repz
addr16
loopne
ror
aaa
ds
test
fs
inc
xchg
loop
xlat
cltd
pusha
cmp
pop
xchg
dec
repz
push
jne
jbe
xchg
dec
add
and
mov
cmp
jl
or
jecxz
daa
xchg
push
lds
mov
daa
mov
nop
scas
mov
inc
int3
sbb
out
sub
dec
cwtl
sbb
in
xchg
sub
cmp
cmp
mov
fbstp
and
dec
fmull
shl
test
hlt
imul
jns
xchg
mov
cmp
mov
loop
out
aas
pop
and
pop
popa
xchg
cmp
adc
lods
lods
sub
sbb
lcall
int
mov
out
outsl
xor
sahf
cmp
lcall
adc
inc
mov
mov
icebp
sub
loope
lcall
popa
or
sti
mov
mov
and
mov
mov
cmp
popa
xchg
lcall
adc
loopne
out
test
loopne
cmp
inc
xchg
dec
into
popa
or
negb
lret
ret
add
inc
xchg
push
sub
pusha
mov
add
scas
pop
mov
jo
test
ss
fidivrs
loop
ror
shlb
rclb
cmp
push
xchg
in
ud0
jb
jne
and
punpckhdq
mov
sub
mov
js
xor
sbb
rclb
test
and
lods
cli
in
movsb
fcompl
and
cmp
hlt
scas
lock
mov
popf
mov
xchg
lcall
aas
sarl
and
xor
pop
push
push
cmp
dec
out
mov
sti
jno
jae
iret
ret
shlb
rcrb
jp
ffree
fwait
lea
insb
int3
adc
dec
lea
pop
inc
shrl
lea
fcmovnbe
adc
and
push
lret
ds
pop
daa
add
mov
insb
fs
mov
int3
int3
pop
xchg
jp
test
jnp
add
mov
and
mov
mov
mull
js
dec
outsl
jo
jno
pop
and
jecxz
push
out
sbb
test
push
and
mov
sub
push
inc
xor
movq
mov
imul
mov
loop
mov
sbb
hlt
cmp
cmp
jns
loope
stos
xor
jno
jl
shrl
xor
nop
ljmp
push
cmpsl
mov
cmpsb
mov
orl
repnz
stc
add
jne
fwait
sub
sub
bound
push
sar
dec
sbb
stos
dec
pop
mov
pop
xchg
popf
jle
inc
jg
ficoml
dec
pop
jbe
cmp
sbb
sub
jbe
dec
pushf
out
pop
inc
aam
call
insb
mov
add
pop
add
mov
ret
aaa
adc
jecxz
enter
test
mov
inc
mov
or
jns
sub
test
lret
loope
or
xor
cmp
ficompl
mov
mov
push
lahf
xlat
sbb
ljmp
mov
rorb
or
mov
inc
int3
iret
es
fistpl
leave
pop
insl
out
stc
rcr
imul
mov
lret
cltd
dec
ss
ret
fs
jle
mov
arpl
mov
xor
shr
sti
xchg
inc
mov
cmp
loopne
outsl
pop
xchg
or
mov
jg
mov
fcomp
orl
and
or
sub
ja
inc
mov
in
js
xor
dec
add
lock
mov
stc
pop
mov
lcall
jg
outsl
out
add
push
repnz
and
jmp
ja
jge
xor
or
lret
push
inc
sti
xor
inc
pushf
mov
inc
cltd
mov
out
jg
lods
jns
clc
mov
ljmp
jmp
enter
xchg
repz
sbb
fimuls
cli
mov
lret
in
pusha
push
pop
shlb
xchg
dec
inc
sbb
xchg
mov
rcrb
das
mov
or
inc
decl
arpl
sti
or
shlb
mov
dec
je
cmpsl
out
test
insl
mov
int
cmpb
mov
inc
hlt
inc
sbb
loope
push
jecxz
cs
mov
pop
cld
ds
mov
arpl
negl
push
lcall
inc
es
fildll
ss
mov
mov
scas
push
shl
in
jno
dec
mov
push
shll
arpl
lahf
leave
ja
je
and
mov
pop
cmpsb
xor
xchg
sub
and
push
lret
jb
adc
cmp
shl
xorb
cltd
es
cli
dec
das
xchg
add
pmulhuw
mov
xor
jmp
pop
pushf
mov
push
addl
cmpsb
mov
iret
lret
mov
movb
push
mov
test
scas
jg
aad
mov
sub
pop
mov
out
rcr
xor
aaa
and
andl
das
xchg
into
mov
cltd
inc
test
push
insb
add
mov
fnstcw
lock
push
sub
adc
inc
movsl
mov
loope
inc
imul
adc
adc
xor
add
leave
jl
stc
aam
aam
es
iret
in
mov
data16
dec
cld
push
clc
mov
nop
fucomi
out
subb
push
pop
or
cmpsb
xchg
mov
shlb
sub
sub
fists
cltd
jg
jg
stos
fwait
outsl
pusha
push
hlt
xchg
add
push
in
inc
fstl
adcb
and
fldt
cmp
xor
mov
out
jle
adc
or
movsb
fisttps
jmp
fwait
cwtl
cmpsb
daa
loop
add
lods
out
sub
es
xchg
aas
fadd
mov
sarl
lret
cmovp
fsubs
adc
ss
adc
loopne
test
dec
push
repnz
cs
je
or
sbb
je
mov
ds
mov
scas
mov
addl
call
fs
add
xchg
arpl
aad
into
int
daa
mov
pop
inc
repnz
or
cmpsb
lods
or
jae
pop
add
ficomps
jecxz
jno
lahf
shll
push
jb
adc
test
cmp
sti
test
dec
add
add
je
lea
fcomps
pop
inc
mov
data16
fdivs
js
push
out
and
xchg
ds
rcll
push
pop
into
pop
sub
flds
mov
and
xor
fs
mov
mov
jb
jns
imul
aam
lahf
push
jg
sbb
sahf
mov
mov
mov
ret
adc
lock
stos
jae
xchg
fisubs
pushf
ffree
repz
test
xchg
xchg
lds
ds
loop
pop
or
lcall
push
aaa
in
jg
dec
adc
int
adc
je
mov
pop
jnp
scas
sbb
popf
sbb
out
testb
loope
mov
fisubl
or
iret
cmp
adc
int3
fists
mov
cltd
xchg
fcmovnu
inc
loope
xchg
shll
add
xchg
ljmp
arpl
lea
cmp
push
mov
xor
jne
mov
dec
rcr
cmpsb
lds
inc
inc
xorb
loop
pop
xchg
ljmp
dec
and
mov
mov
inc
in
xor
jecxz
or
sbb
lock
add
mov
fwait
loop
inc
test
pop
je,pt
adc
mov
jns
imul
ss
mov
or
out
ljmp
lea
mov
fwait
push
or
push
cmp
aad
ret
lods
jl
xchg
sbbb
in
jnp
jne
jmp
jns
divb
adc
into
pop
pop
adc
jl
fsubrs
jo
or
cmpsl
sbb
pop
std
or
idivl
and
rorb
jg
cmp
negb
out
or
mov
scas
test
pop
test
cmp
jge
sbb
dec
movsw
xchg
mov
push
add
fdivrs
fdivp
sahf
hlt
cs
scas
push
mov
mov
fidivs
ja
pop
das
repnz
pop
sarb
ja
loope
orb
aad
in
cmp
inc
ret
xor
mov
or
pop
daa
das
add
lea
aaa
mov
loope
stos
cs
mov
loop
mov
dec
fdivr
xchg
outsl
xor
lods
dec
jg
mov
or
pop
jg
jns
xor
mov
pop
incl
es
fcmovu
ret
dec
jbe,pt
daa
mul
and
add
mov
mov
and
push
pop
mov
mov
push
jo
lahf
sarb
and
cmc
xchg
jno
lahf
dec
bound
pop
inc
mov
add
fwait
ss
sbb
pushf
mov
push
shlb
mov
cltd
push
sub
loop
pop
xorb
sub
inc
lods
stc
lret
mov
inc
cli
fstp
push
lahf
movsb
movsb
sahf
sti
inc
scas
jbe
gs
cmp
in
cmp
push
jns
mov
ficompl
mov
cmp
arpl
mov
cmp
lods
popa
fs
in
push
mov
add
test
dec
mov
push
add
dec
xchg
mov
pop
jns
jge
out
cmp
test
scas
push
popa
cmpsl
xchg
popf
lahf
xchg
call
aas
loope
sbb
or
mov
or
jnp
and
jae
xchg
lds
in
test
leave
je
mov
xchg
fcomps
gs
inc
mov
mov
js
xor
ret
cld
mov
in
jno
jmp
jle
cmc
sbb
loopne
lock
mov
cld
test
sbb
into
mov
dec
popa
in
rorl
arpl
inc
leave
sbb
daa
dec
sahf
and
mov
andb
cmp
lock
jmp
adc
gs
fmuls
out
and
pop
stos
daa
mov
das
jle
aam
mov
mov
xchg
aad
cwtl
add
arpl
inc
xlat
push
pop
pop
insl
shlb
pusha
sbbb
iret
or
add
leave
flds
mov
mov
loope
jl
lods
test
mov
fisubs
sti
push
push
lea
das
push
inc
sub
adc
sub
adc
sbbb
sahf
mov
xor
mov
xchg
sub
lods
test
cmpsb
adc
roll
inc
imul
jge
xchg
adc
repz
imul
cwtl
mov
cs
scas
mov
popf
out
loop
xor
cmp
movsl
mov
push
inc
movb
add
aaa
xor
sti
adc
mov
stos
jecxz
fwait
xlat
cltd
test
sbb
xchg
dec
jg
ljmp
cmp
pushf
mov
push
cmp
test
sub
mov
out
xchg
mov
mov
test
stos
dec
hlt
push
jl
lock
inc
lds
into
lds
mov
sub
inc
jge
fidivl
in
rcr
fisttps
es
rclb
inc
sbb
cld
ret
jo
js
sti
mov
test
sub
xchg
test
pop
cltd
arpl
pushf
bound
jns
js
sub
push
imul
rol
cmp
push
hlt
bound
pop
popl
out
jecxz
add
dec
aad
les
call
sbb
dec
sub
cli
sahf
gs
lahf
add
dec
hlt
and
inc
jo
sbb
fdivrs
cmp
xchg
sbbl
jns
push
jb
adcb
adc
js
rol
jge
addr16
and
rcrb
cmpsb
jl
test
jnp
and
inc
inc
lock
push
adc
xor
cmp
in
notl
cmp
jle
popf
movsl
lods
mov
jns
cmp
push
jge
test
cmp
jle
rclb
pop
inc
lock
cmp
clc
lds
cmp
push
scas
clc
adc
inc
xor
mov
jp
jg
pop
ja
inc
jb
jmp
adc
jg
sti
mov
sahf
adc
pop
push
cli
add
repz
fisttpl
jecxz
sub
push
out
je
fs
pop
xor
fisubrl
cmp
sbbb
cltd
out
outsb
test
xor
imul
incb
fadds
leave
cmp
lret
sysenter
adc
icebp
sub
cwtl
cmpsb
sbb
cs
and
lcall
mov
sbb
shll
and
cmp
mov
daa
push
lret
jne,pn
pop
out
rcr
pop
iret
cmpsb
ljmp
movsb
adc
movsb
rcrl
sub
ss
cmp
sub
push
pop
xchg
adc
cmp
sub
inc
js
sub
ds
xor
testb
in
stos
xchg
xor
out
pop
test
out
outsb
sahf
ss
pop
lret
ds
in
add
adcl
and
inc
rep
push
insl
xorl
push
rcrb
rcll
push
vcvtps2pd
lods
arpl
pop
andl
cmc
pop
xchg
cmp
outsb
sbb
ljmp
sbb
mov
in
push
imul
sub
and
mov
loope
fistps
xchg
js
jb
test
scas
dec
cs
mov
mov
xor
or
xchg
and
aam
lock
inc
mov
add
out
sub
or
imul
dec
xchg
cmp
dec
sub
out
and
sub
das
cli
push
jns
scas
jle
cmc
je
add
addb
inc
leave
adcb
out
xchg
inc
inc
jmp
mov
mov
push
xlat
sub
sti
cli
mov
pop
je
pop
fidivs
mov
push
mov
jg
sahf
mov
xlat
cs
in
loopne
lock
push
shr
xor
js
mov
pop
ret
xchg
aam
mov
test
aas
in
sti
pop
aam
push
and
jmp
xor
test
pop
je
sub
out
lahf
mov
and
imul
add
inc
clc
pop
push
stc
cmpsl
push
jae
loopne
test
xchg
imul
int
push
int3
mov
in
lcall
inc
loope
xor
mov
fisubs
or
into
inc
add
push
xor
mov
jl
adc
scas
xor
pop
mov
mov
lcall
xlat
fadd
jp
pop
test
mov
jo
stc
sarb
test
rorb
sbb
cmp
cmp
sub
dec
lock
fimull
imul
pop
not
jp
inc
rcl
cld
cmpsb
jnp
push
dec
ss
sub
mov
and
es
lea
and
dec
cmp
cltd
orl
jnp
hlt
xchg
lea
sbb
pop
mov
icebp
fldl
lods
bound
dec
sub
out
cmp
cmc
mov
loop
or
sbb
mov
mov
mov
int
hlt
fidivrl
int3
mov
sub
jmp
sub
pop
xor
insb
sub
inc
xchg
mov
adc
popf
repnz
mov
xor
inc
inc
xchg
int
xchg
aaa
or
adc
adc
mov
into
outsl
das
cmp
inc
fdivrs
jbe
test
cs
lds
jge
push
pop
xor
arpl
push
ljmp
dec
adc
and
push
outsl
rclb
jnp
push
imul
xchg
lods
scas
and
push
fs
jg
push
jle
movsb
sub
jecxz
sub
sahf
adc
stos
jl
out
xchg
js
jo
mull
mov
mov
cmp
cmc
cmp
adc
and
daa
cld
mov
jae
int3
fcomps
movsl
or
scas
scas
fs
sub
insb
and
rcll
jle
call
adc
movsl
and
jne
add
xchg
and
xor
add
sub
or
decb
mov
inc
or
sbb
xchg
jle
ljmp
jne
gs
push
inc
das
bound
or
inc
fildl
push
rorb
jg
nop
outsb
sbb
ljmp
aaa
clc
or
jecxz
aad
fimuls
aas
xor
and
mov
sbb
shll
push
pop
imul
add
add
int3
xchg
mov
or
cmp
mov
insl
dec
jle
xchg
pushf
adc
sbb
mov
and
data16
scas
cs
incb
clc
call
int3
lea
pop
sbb
pop
ss
pop
enter
sarl
pop
sbb
je
jp
mov
mov
mov
gs
sub
pop
loop
mov
push
sbb
mov
in
pop
sub
ret
cmpsl
adcb
imul
repnz
cwtl
mov
rcrl
in
imul
inc
popf
pusha
mov
and
vmread
hlt
mov
loope
xor
iret
popa
push
aam
jne
loopne
push
xor
int
dec
scas
outsl
dec
inc
sub
pop
clc
out
and
xchg
xchg
mov
pop
sbb
and
addl
in
cmp
dec
lock
inc
mov
fcoml
aas
pushf
daa
mov
test
mov
push
mov
stc
stos
popa
hlt
sub
adc
xchg
sbb
aas
jle
push
repz
inc
cmc
hlt
xchg
push
jmp
cmp
push
or
pop
add
fidivrl
ror
clc
dec
out
xchg
pusha
cmp
test
ret
addl
notb
xor
jl
gs
jmp
pop
clc
iret
imul
call
lcall
lahf
aam
out
xchg
or
xchg
mov
cmp
mov
sti
xchg
out
fwait
adc
arpl
jne
xchg
xchg
ljmp
test
cmp
popf
insl
in
mov
daa
cmp
adc
cmp
int
mov
add
sub
sahf
or
mov
popf
or
xchg
jecxz
les
dec
negl
divl
arpl
cmpsb
pop
dec
cmp
enter
fisubrl
lods
mov
jae
out
jg
add
and
vprotb
adc
stos
mov
xor
jp
sub
dec
stos
pop
rcll
shll
mov
shll
push
mov
in
in
mov
sbb
adc
sbb
shll
cltd
pop
rorl
cmc
outsl
pop
repz
stos
mov
mov
mov
jae
fwait
mov
nop
sbb
xor
sub
or
adc
mov
inc
and
imul
inc
addb
push
ret
fs
adc
adcl
fsts
stos
int
shll
or
js
adc
pop
ds
rcll
mov
adc
adc
lret
addr16
nop
in
xor
outsl
xchg
cmpsb
int3
jnp
push
fimuls
xchg
mov
lahf
scas
subb
dec
xchg
add
std
arpl
dec
xor
cwtl
orb
out
adc
insb
movsl
mov
jne
dec
in
adc
ficomps
sub
xor
inc
fnstenv
mov
test
in
jns
dec
pop
inc
not
mov
adc
fisttps
cld
mov
loopne
jo
stc
cmpsl
jp
pusha
add
out
loope
testl
mov
mov
jg
fcoml
call
adc
fldenv
cld
push
cmp
xor
test
jno
mov
fimull
and
mov
jb
pop
inc
add
and
pop
adc
dec
xchg
loop
int
or
rorl
jmp
inc
scas
dec
adc
mov
mov
pop
or
adcb
enter
adc
xor
bound
cmp
mov
addl
std
pop
push
cmp
cld
cs
cmp
movsbl
and
btl
fxch
lret
mov
or
jbe
jno
mov
xchg
cmp
icebp
lahf
and
stos
or
cld
fisubrl
pop
mov
add
dec
imul
scas
pop
xchg
mov
jecxz
cmpl
mov
out
clc
or
sub
lods
xchg
fwait
or
push
imul
mov
test
stc
loop
adcl
in
lods
loope
jo
dec
fisubl
gs
xchg
mov
repnz
mov
mov
popf
adc
fildl
popf
pop
fnsave
mov
cltd
test
xchg
sahf
fwait
out
jmp
sub
xorb
pop
jmp
mov
adc
jge
add
or
jecxz
cmp
in
jl
ja
sub
push
push
xchg
inc
jne
inc
test
das
pop
sbb
push
jge
jmp
add
inc
adc
je
outsb
jmp
adc
xchg
ljmp
test
stos
daa
test
enter
sub
push
out
ss
cmp
scas
mov
and
bound
jae
jp
data16
inc
pop
inc
inc
ret
adc
jl
cmpsl
test
daa
push
imul
cld
lea
sub
cmpsl
stos
das
dec
or
fdivrp
subl
xor
inc
jo
or
sbb
sub
sarl
add
or
cmp
push
and
lods
hlt
adc
fidivl
je
rcr
cmp
jg
andb
call
dec
fcoms
push
cmp
test
xor
dec
add
dec
or
arpl
pop
pop
adc
ret
loopne
add
mov
xchg
es
fstl
iret
jecxz
xor
stos
lock
jmp
inc
test
notl
leave
lods
std
inc
jecxz
mov
shlb
out
test
dec
insl
cli
jge
test
dec
add
lods
lcall
lahf
incb
xchg
fcmovnbe
shll
add
or
xchg
mov
sahf
jg
or
sbb
iret
imul
jp
scas
jbe
loop
or
fstl
jae
push
mov
pusha
xor
loope
in
fwait
test
fidivrs
scas
in
push
mov
jo
std
mov
push
stc
cs
lret
ljmp
mov
sbb
xchg
ss
mov
and
arpl
add
pushf
div
adc
jmp
cmpl
js
lock
sub
gs
lret
loop
int
mov
adc
mov
mov
out
aam
mov
cltd
repnz
in
mov
mov
push
ret
dec
adc
adc
sti
shll
inc
ljmp
xchg
out
je
adcl
out
fisubrs
dec
popf
outsb
lret
xor
adc
aam
lahf
imul
cs
cld
fldt
and
jo
jmp
xor
xor
xlat
xchg
pop
lods
xor
in
sbb
icebp
add
mov
push
mov
movsl
popa
sbb
fucom
adc
xchg
and
push
outsl
mov
rcl
mov
pusha
nop
xor
dec
dec
mov
adc
pop
lahf
dec
push
dec
sub
jns
mov
bound
pop
rclb
xlat
xchg
data16
imul
sub
adcl
lret
fwait
sub
dec
adc
fwait
scas
cwtl
sbb
pusha
jae
mov
add
nop
mov
imul
aaa
sarl
in
mov
dec
movsb
iret
jnp
popa
int3
mov
xchg
outsb
push
cs
cltd
shrb
pushf
out
xchg
cmpsl
and
sbb
jp
in
jl
int3
mov
in
jb
push
jle
mov
cmpsl
jo
sbb
mov
fxtract
adc
ja
xor
or
pop
and
sbb
test
add
push
or
or
jb
out
xorl
sbb
jne
mov
push
jle
pop
cltd
test
orb
out
lahf
adc
sub
aaa
jmp
test
pop
dec
call
inc
push
mov
mov
rcr
je
mov
iret
shlb
push
dec
out
mov
dec
mov
shlb
dec
pop
test
push
enter
aas
dec
sub
sti
xchg
inc
repz
adc
ret
xchg
dec
pop
out
vcvtps2pd
dec
popf
dec
xchg
push
mov
repnz
js
scas
andb
int3
outsl
mov
mov
jmp
sahf
mov
sahf
mov
xchg
out
mov
popa
jbe
inc
inc
in
lds
pop
mov
or
mov
sub
push
mov
adc
loop
shl
jae
mov
inc
adc
rcr
add
add
mov
pop
loopne
dec
inc
mov
push
cmp
adc
mov
pop
popf
rcrb
cli
add
cmp
or
xor
jmp
in
dec
sbb
cmp
sub
nop
sbb
xchg
jno
cmp
imul
adc
js
mov
pop
mov
mov
mov
lret
movlps
cmp
lcall
fcoms
hlt
call
dec
jo
dec
mov
int3
imul
jno
jl
pop
int
push
lds
jp
dec
repnz
and
pop
pop
test
cmpsl
sub
in
jle
and
bound
ret
out
call
les
das
and
and
jnp
mov
ds
iret
stos
divb
leave
sbb
jmp
ret
fbld
subb
lret
push
lea
jp
sbb
cwtl
iret
mov
and
mov
insb
test
cmp
mov
mov
sub
inc
outsl
movsl
lock
subl
jl
aam
bound
dec
cmpsl
push
clc
shrl
stos
sahf
jge
stos
shrl
rcll
into
rcll
jle
mov
xchg
sbb
push
add
cwtl
and
mov
jle
cltd
sbb
sbb
shl
push
rorb
fisttpll
mov
pop
dec
jp
push
repnz
sbb
lods
xchg
adc
adc
in
jne
sbb
lods
or
js
arpl
push
cmc
enter
inc
mov
stos
int
data16
push
sti
cmovg
push
add
aad
xlat
cld
cmc
rorb
jnp
mov
pop
sub
mov
addl
pop
sub
lods
in
mov
in
ret
mov
push
test
jbe
sub
mov
pop
and
dec
cmp
xchg
mov
add
ret
sub
xchg
cmpsl
xchg
xor
or
xchg
pop
fisubl
jno
mov
pop
dec
sbb
or
sub
imull
pop
fstl
mov
xchg
jg
and
popa
inc
lret
ja
push
fwait
xor
dec
mov
dec
test
cmp
out
push
pop
jmp
xchg
push
stos
jp
sbb
inc
adc
ret
shl
jmp
cli
push
shr
pop
dec
mov
rolb
or
das
push
mov
xor
cmp
test
movb
pop
jge
fcomps
imul
xchg
xor
imul
les
push
xchg
stos
loope
insb
je
sub
or
jecxz
pushf
test
stc
dec
out
dec
or
pop
pop
inc
and
inc
std
inc
mov
clc
nop
gs
xchg
inc
inc
dec
pop
xor
leave
das
pop
pop
jp
pusha
iret
jp
ss
mov
push
insb
imul
clc
and
adc
push
aaa
leave
sbb
mov
data16
mov
mov
mov
adcb
push
jo
addl
mov
ror
sahf
xchg
xor
inc
scas
cwtl
pop
adc
in
test
mov
pop
lcall
push
lret
mov
scas
jne
std
push
iret
sub
add
xchg
jge
adc
xchg
lods
pop
in
push
js
dec
add
add
sbb
fnstcw
mov
cmpsb
pushf
scas
fcompl
inc
sub
adc
cmc
fisttpl
jp
mov
ljmp
pop
lahf
loop
je
sti
mov
xchg
mov
mov
mov
mov
pop
push
popa
sub
in
sub
dec
add
clc
push
add
repz
aad
cwtl
into
dec
addr16
xchg
mov
jle
inc
cmp
pop
dec
pop
adc
lock
sub
add
jmp
inc
std
push
xlat
mov
mov
mov
pop
scas
lcall
jle
gs
pop
cmp
shll
mov
ss
sub
addr16
pusha
add
push
dec
sub
jl
sahf
movsl
inc
push
xlat
mov
lahf
and
pop
and
add
repnz
sbb
sbb
jl
push
cmc
lahf
scas
gs
test
mov
sub
push
push
insl
push
adc
dec
out
das
add
add
fnstenv
sbb
mov
test
or
cmpsb
mov
notb
mov
test
jne
xor
lods
lock
push
mov
imul
pop
out
jns
mov
out
cmpsb
sti
push
cltd
and
pop
fiaddl
loopne
fs
push
jno
sbb
dec
cmc
pop
jge
jno
clc
ss
scas
das
dec
out
adc
addr16
mov
mov
cmp
popa
hlt
sbb
ljmp
inc
pop
xchg
mov
pop
popa
inc
imul
int
or
sbb
xchg
in
push
loope
jge
mov
pop
popa
or
jae
xor
xchg
in
outsb
xor
xor
orb
or
test
loopne
outsl
clc
cli
cmp
xor
jmp
inc
mov
mov
rcl
iret
cmc
mov
xchg
dec
mov
mov
mov
out
xchg
jl
ss
adc
pop
in
sbb
dec
aam
enter
cmp
fdivs
adc
movsb
adc
jb
dec
lods
out
inc
and
pop
cmp
ret
insb
repnz
mov
les
divb
add
iret
lahf
stos
or
test
inc
mov
dec
mov
lea
pop
jge
jmp
adc
arpl
mov
xor
pop
xorl
sar
jbe
jae
rcll
popf
in
push
leave
aas
test
sub
popa
sub
sub
xchg
out
dec
fcompl
xchg
cs
arpl
shrl
sahf
into
jne
mov
les
push
mov
in
mov
pop
mov
and
adcb
push
add
mov
jae
push
push
mov
cmpb
cmp
or
mov
push
mov
test
movsl
xchg
push
jmp
inc
inc
sub
add
add
sahf
out
add
fidivl
out
dec
sbb
fst
xchg
or
leave
mov
ljmp
pop
imul
test
loope
ss
and
in
and
sub
mov
pop
lahf
and
insl
or
lret
leave
push
add
div
loope
inc
dec
inc
dec
jg
roll
jle
pop
dec
sbb
pop
xlat
cli
mulb
dec
popl
mov
movsl
adc
aas
pushf
inc
mov
sub
pop
mov
test
xor
xchg
push
xchg
scas
mov
loopne
insl
inc
test
mov
cmp
mov
add
bound
sarb
cmp
insb
add
sub
outsl
xlat
and
push
push
stos
xor
pop
in
fdivs
outsl
and
xor
cld
loopne
imul
xorb
pushf
pop
in
sbb
int3
roll
adc
cmc
xor
stc
mov
inc
cld
inc
and
aad
insb
adc
dec
cmc
icebp
lods
push
and
jp
sbb
adc
jbe
addl
mov
jp
sarl
roll
arpl
stos
outsb
pushf
xchg
js
push
cmp
and
in
iret
xlat
ss
mov
jnp
out
test
sub
pop
mov
mov
ljmp
orl
fisubrl
lea
insb
pusha
push
aad
mov
or
jno
testl
or
shrl
repz
xchg
iret
push
push
sub
pop
adcl
or
jbe
outsl
std
fimull
or
push
mov
testl
mov
js
xor
pop
rorb
std
pop
xchg
xchg
popf
add
mov
push
lcall
sub
mov
or
mov
scas
or
mov
xor
mov
or
jne
popa
or
xor
jnp
lods
lcall
outsl
fs
cmp
into
sbb
lds
lcall
xchg
add
mov
dec
out
sbb
stc
push
sub
jmp
push
mov
dec
inc
add
sbb
adc
jo
stos
mov
mov
pop
and
aad
push
or
data16
cmpsb
mov
repnz
mov
clc
lret
addb
int3
jo
lret
push
scas
mov
es
xor
ds
lods
xor
stc
inc
test
call
jb
inc
fs
push
cmp
pop
cmpsb
or
das
jge
jbe
xor
es
out
ljmp
push
enter
mov
xor
xchg
xor
cld
fldl
dec
push
pop
xchg
jbe
insb
stos
pusha
xchg
fwait
scas
jne
lock
dec
mov
jl
fisttpl
xor
mov
mov
jge
aas
xchg
loope
jno
cli
leave
mov
ljmp
dec
and
mov
inc
xor
push
push
or
cmp
sbb
popa
adc
dec
mov
push
movsb
in
insb
add
lret
jnp
nop
cmp
fcmovnbe
sahf
sbbb
roll
push
push
aad
xor
rorb
xchg
dec
movb
adc
rcll
adc
mov
xor
in
call
stc
adc
cmp
inc
insl
imul
and
pushf
outsb
nop
lea
sub
pop
shlb
jle
pop
loop
in
ffree
mov
cmpsl
add
pop
pop
imul
leave
jg
test
sbb
push
fsubrs
sbb
jecxz
xor
inc
ret
fsubrl
adc
mov
dec
cmp
aad
ds
dec
sub
out
inc
mov
outsb
popl
sbb
gs
rcrl
mov
and
in
cmp
fwait
subl
arpl
int
jmp
xchg
adc
cmp
dec
ret
dec
dec
cmpl
stos
hlt
fwait
pop
mov
xlat
mov
jg
aaa
aad
cmpsl
orl
pop
pop
pop
jl
dec
adc
cmp
mov
mov
lcall
and
push
iret
mov
ljmp
cli
pop
dec
xchg
loope
loopne
bound
filds
or
mov
mov
fimull
xchg
flds
stos
mov
sti
sub
or
jmp
mov
xor
out
jb
pop
pusha
test
mov
rcl
sub
insl
das
xchg
cmp
mov
dec
loop
pop
mov
inc
sti
lahf
sbb
pushl
mov
jmp
rcl
xor
jle
insl
gs
sbb
mov
mov
sbbb
stos
dec
inc
fisubs
int
insl
outsb
cwtl
sub
jbe
fwait
xchg
sbb
test
dec
out
pusha
pop
lcall
push
fsqrt
ss
aad
pop
insl
fisttps
xchg
call
adc
iret
fadd
adc
add
inc
cmp
push
dec
idivb
xor
cmp
and
popa
pop
cmpsl
push
adc
add
fcomps
inc
enter
pop
adc
cltd
pop
sbb
mov
xchg
xchg
cmp
adc
lret
mov
mov
pop
pop
jge
push
push
add
fdivrs
xchg
popf
in
jae
scas
stc
mov
mov
scas
adc
clc
flds
mov
in
bound
inc
push
mov
push
push
mov
int
mov
insb
mov
lcall
pop
jge
sbb
repnz
dec
mov
clc
pcmpeqd
ds
popa
pop
popf
cmp
mov
clc
loope
push
push
loop
mov
lods
fisubrl
and
popa
add
hlt
rorb
rorb
or
add
cli
jmp
mov
mov
aas
add
mov
aaa
out
ret
cld
xchg
ja
inc
sarb
dec
mov
dec
cmc
xchg
jp
lea
mov
add
mov
ljmp
xchg
out
pop
arpl
inc
sbb
stc
rcr
xor
cmpsl
cld
mov
clc
or
sub
imul
dec
call
mov
hlt
dec
outsb
int
pop
xor
cld
adc
pop
and
hlt
fldcw
fstl
nop
int
lret
outsb
pop
sbb
repz
sbb
xchg
jge
or
pop
mov
stc
jl
pop
repz
mov
je
mov
scas
mov
sarb
jle
std
stc
adc
cmp
daa
lahf
jle
dec
dec
mov
in
and
lcall
mov
cmpb
inc
pop
cmp
mov
cmpsl
push
cmp
inc
xor
mov
xchg
jmp
pop
enter
fnstcw
out
dec
ret
mov
cwtl
pop
iret
cld
iret
imul
cmp
cs
push
rolb
fdivr
ret
inc
rolb
jge
jg
mov
jg
sar
pop
stos
das
mov
fs
je
or
push
and
pushf
push
shlb
cmpsl
ret
pop
shrl
imul
lldt
lret
inc
push
xchg
ret
xor
inc
add
clc
psrad
mov
mov
fsubl
repz
js
out
adc
loop
add
movsb
cmp
ficoms
mov
sub
nop
lret
jp
mov
pop
add
inc
push
push
inc
mov
lods
ret
adcl
movsb
xchg
xchg
and
lods
les
cmp
popf
add
mov
loop
ds
mov
les
xlat
stos
push
scas
mov
cmp
lret
pop
pop
js
pop
push
aad
rcll
sub
ret
cmp
jns
xchg
push
push
mov
pop
dec
es
add
les
xchg
je
sarl
cmpsb
jbe
orb
cmc
fistl
and
enter
xor
lahf
test
fsubl
movsl
clc
repnz
mov
pop
xor
push
cmc
xlat
dec
mov
cmp
fld1
pusha
ljmp
mov
push
sahf
inc
cmpsl
pop
cltd
or
lods
lea
pop
pop
add
push
jns
adc
mov
out
insb
data16
sbb
adc
repnz
pop
adc
pushf
mov
jbe
test
push
and
cwtl
cmp
enter
outsl
and
jle
jecxz
push
push
dec
pop
jg
and
pop
mov
cwtl
add
imul
sub
or
or
insb
mov
test
fdivp
fadds
mov
xchg
pop
jmp
call
sti
sbb
repz
and
pop
pop
aas
cld
enter
je
jle
sub
mov
inc
cmp
fs
imul
out
inc
xor
ss
outsb
cmp
cltd
iret
xor
loopne
lods
fistps
jae,pn
pop
insl
data16
pop
icebp
or
rcll
lds
test
dec
push
test
mov
mov
adc
push
xor
xor
data16
repnz
fdivrl
adc
imul
pop
adc
adc
scas
scas
adcl
cmp
mov
aas
mov
int3
inc
pop
lods
or
test
jp
sbb
loope
cli
hlt
xor
inc
ljmp
in
jnp
sbb
cwtl
mov
xchg
shlb
mov
inc
jo
mov
rol
ret
push
mov
addl
add
ret
mov
pop
pop
mov
stc
fs
jge
pop
popa
aas
cmp
adc
in
or
int3
adc
sbbb
insl
jmp
push
add
push
mov
jecxz
int3
jns
adc
cmp
lcall
and
cltd
xor
sub
xor
and
jne
xchg
cwtl
pop
mov
jno
bnd
mov
mov
cmp
daa
mov
push
stc
pop
shl
mov
sbb
test
pushf
jb
pop
in
cmc
ret
pop
push
push
mov
shrl
and
roll
rcrb
subl
add
cmp
mov
jle
xchg
lcall
repnz
and
xchg
pop
ljmp
mov
repz
loop
dec
sahf
ja
add
js
mov
loope
cmp
stos
mov
adc
sub
mov
shl
test
movsl
in
xchg
adc
add
inc
sbb
loope
out
xchg
iret
mov
mov
mov
mov
lret
jb
push
dec
cmp
cmp
unpcklps
add
pop
add
jmp
mov
popa
push
fildll
imul
repz
mov
jge
cmp
cmp
mov
adc
stos
mov
push
popf
stc
push
xchg
push
add
jp
jae
in
dec
adc
cld
pop
xchg
mov
ficoml
loopne
adc
iret
sysenter
cwtl
mov
imul
call
dec
or
jo
hlt
dec
test
cmc
aaa
xchg
jmp
in
ret
push
push
adc
push
fisubrs
jb
jbe
xchg
out
or
mov
into
cmp
add
std
scas
push
ss
test
push
lahf
dec
div
test
cmc
pop
xchg
mov
pushf
stos
fcoml
push
aad
mov
daa
insb
sahf
test
mov
add
test
dec
stos
stos
cli
scas
inc
rolb
jne
sub
cli
bound
repz
pushf
push
insb
jae
dec
and
or
cmc
daa
lret
jle
pop
in
pop
shll
mov
xor
or
cld
iret
pop
add
in
add
mov
arpl
xchg
mov
rolb
adc
sub
mov
add
and
aas
js
mov
mov
pop
adc
andb
dec
lds
fnstenv
jp
nop
jnp
and
addr16
fs
cmpsl
fimuls
test
jl
xorb
push
pop
test
jnp
push
mov
icebp
sti
xor
into
mov
jae
pop
dec
insl
data16
es
roll
jb
leave
and
sub
and
call
repnz
mov
sbb
data16
push
xor
jns
add
adcl
clc
insb
rcl
shll
inc
cmpsl
out
lods
lahf
cmp
and
iret
popf
pop
pop
incb
mov
mov
mov
pop
scas
dec
add
enter
loope
dec
lret
jmp
adc
jo
addr16
xchg
mov
bnd
adc
dec
aam
sahf
push
lock
and
outsl
xlat
and
push
jb
adc
and
das
push
aad
mov
ficoms
jg
xchg
pushf
dec
or
mov
ror
mov
dec
pop
imul
pop
out
push
mov
in
sbb
sbb
rorl
cmpsb
adc
pushl
mov
dec
push
sti
clc
inc
mov
addb
mov
mov
cmp
add
loope
inc
sub
gs
rcrl
and
or
int
sbb
lods
pop
mov
aam
add
aad
mov
pusha
call
stos
cld
jnp
sarl
jo
lods
dec
inc
mov
push
pop
ja
pop
lods
out
mov
mov
pop
sbb
jno
fstpl
sti
pop
fld
lret
into
std
test
cmc
ret
mov
xchg
push
mov
orl
or
cmpsb
ss
xchg
sbb
gs
jmp
ret
shll
sub
movsb
and
sahf
cmp
xor
aaa
push
jae
sub
and
cmp
pop
sub
das
or
dec
push
sub
inc
addr16
pop
jo
dec
aam
repnz
lcall
daa
sub
int
or
cmpsl
mov
subl
loopne
std
push
mov
jo
sub
into
mov
jb
lds
mov
xor
iret
daa
mov
ficomps
lcall
xor
push
lret
imul
push
outsl
mov
push
mov
mov
xchg
int3
fwait
xlat
dec
imul
addr16
shr
sub
sahf
xchg
arpl
jp
mov
testb
adc
push
scas
stc
ja
xchg
js
sub
aas
ss
sti
jns
bound
enter
xor
jmp
push
push
cmpsb
inc
clc
cmp
sar
mov
aas
sub
xchg
jb
stc
adcl
sub
cmp
jge
xor
mov
ja
nop
cmp
je
mov
sub
imul
mov
pop
mov
sub
adc
xchg
ja
mov
dec
push
lcall
aad
or
adc
loope
adc
in
dec
ja
sub
outsb
std
dec
iret
insl
pusha
cmp
iret
mov
ret
xchg
sbb
sbb
cmp
js
or
push
lea
ss
sub
lret
aas
push
insl
pop
xor
or
mov
mov
xor
adc
in
jo
xor
adc
push
xchg
or
insl
dec
mul
shll
or
sub
fcomps
xlat
adcl
jl
mov
in
and
adc
sbb
icebp
mov
out
fs
fistpll
out
push
mov
lret
clc
test
sub
test
cmp
xchg
cmp
test
cmp
push
outsl
mov
std
call
popf
bound
shr
jbe
inc
push
jns
cltd
addb
in
ret
add
mov
inc
jp
mov
scas
sub
sub
fcmovbe
es
lea
jp
push
aaa
aas
push
inc
jl
hlt
xchg
fnstsw
gs
lock
mov
xor
arpl
lock
push
loopne
xor
das
xlat
sub
cmp
mov
push
inc
pop
mov
imul
lock
pop
sbb
mov
xchg
cld
rolb
mov
jns
aam
adc
mov
enter
gs
mov
jp
mov
inc
bswap
inc
test
add
imul
popf
sbb
add
fldenv
stc
ljmp
adc
fistps
into
int
and
rolb
loop
cmp
mov
repnz
adc
xor
mov
push
and
lret
imul
call
jle
mov
dec
cmp
xchg
sbb
mov
int3
sub
pop
jp
inc
ds
daa
lods
push
push
lea
or
add
lret
aam
clc
pop
inc
sub
jne
ss
pop
mov
js
or
mov
lods
jg
sbbb
and
insl
jns
std
ret
negl
test
sub
mov
xor
ret
fs
nop
loop
jno
negb
cmc
xchg
mov
sbb
mov
stc
and
int
jnp
cld
sub
cltd
cld
lds
test
sbb
inc
cwtl
cmp
dec
jne
jno
cmpsl
cmp
xchg
jl
inc
jl
shr
fisubrs
stc
aad
mov
cmpsl
cld
add
cld
or
je
push
xchg
subl
lret
pop
xor
adc
adc
test
push
xchg
das
push
notl
imul
mov
in
add
lods
xlat
in
push
sub
sahf
dec
sub
pop
test
testb
sub
cltd
mov
mov
leave
adc
addb
mov
outsl
dec
ljmp
stc
sbb
add
js
dec
movsl
int
stc
mov
sub
movl
mov
popa
mov
pop
repnz
mov
mov
pop
push
adc
xchg
and
jbe
sti
dec
ja
and
inc
mov
std
test
add
pop
pop
stc
adc
xlat
notb
sbb
ja
dec
fdivs
sbb
in
sahf
or
dec
mov
cld
lahf
das
ja
and
pop
sar
fisttpll
pushf
out
mov
lods
arpl
mov
sub
dec
and
mov
mov
rcll
mov
pop
push
imul
fisttps
inc
jbe
mov
adc
fwait
pop
xchg
imul
scas
sbb
and
loope
cmp
pushf
sub
int3
add
jle
xchg
push
xchg
jne
xchg
inc
gs
sbb
adc
sbb
je
out
adc
daa
pop
push
add
bound
or
mov
repnz
mov
dec
aam
ja
movsb
movsb
dec
outsl
icebp
nop
fdivrl
daa
addl
das
pop
push
xchg
in
stos
int
scas
dec
or
ss
shr
leave
push
ficoms
pop
aad
lahf
cld
enter
cltd
loop
or
int
and
ds
xor
test
adc
adc
push
and
int
xor
lods
das
dec
xchg
pop
outsb
movsl
dec
popf
and
jb
xor
lcall
xor
ret
fcmovbe
jle
jl
mov
cmc
mov
imul
outsl
xchg
ds
jne
jb
movsl
test
add
pop
mov
aam
mov
addr16
or
repz
cmp
fistl
cmp
ljmp
jle
inc
stos
jo
sbb
cmp
cmp
aas
fmuls
jne
xchg
mov
pop
xchg
mov
cwtl
add
pop
xchg
int
fsubrl
movb
ret
xchg
pusha
ss
and
into
mov
clc
int3
cmpsb
ret
mov
mov
sbbl
popf
jp
inc
jmp
xchg
fs
sahf
lret
call
dec
mov
xchg
mov
jge
jno
xchg
push
adc
and
inc
xchg
jmp
mov
in
lret
or
jge
scas
cmp
adc
xor
cmp
pop
hlt
in
dec
cmpsl
jae
and
cmp
add
pop
xor
int
mov
or
mov
jecxz
sub
fnstcw
mov
jne
add
test
cwtl
xchg
out
push
int3
xor
sub
lods
mov
xor
jl
daa
aaa
call
xlat
loop
push
fdivl
stc
mov
fidivrl
cmp
dec
add
cmp
sbb
inc
cmp
cmpsb
stc
mov
addb
sub
dec
fucomi
or
insb
xor
or
cwtl
sbb
fildl
xor
cmp
insb
mov
cld
mov
imul
mov
xlat
lods
clc
sbb
fcoml
jo
push
ret
mov
mov
repnz
ss
inc
mov
jo
icebp
out
cltd
repz
push
mov
mov
call
icebp
fidivrs
cwtl
push
push
jbe
lahf
mov
xor
xchg
ss
mov
enter
pop
sub
ret
fsubrs
arpl
and
mov
mov
add
in
movsb
mov
add
scas
mov
lcall
rcrb
shlb
test
out
jg
sarb
rclb
cli
test
out
jecxz
ja
leave
lock
stc
les
stos
orb
adc
rcrb
aad
int
dec
lods
or
out
jae
mov
and
cli
sub
gs
icebp
lcall
loop
shl
push
outsl
mov
pushf
movsl
stos
repz
or
xchg
orl
mov
inc
mov
cmp
or
je
jmp
pop
fbld
addr16
fidivl
insl
xor
pop
mov
lcall
mov
pop
or
pop
push
pop
jns
push
sbb
mov
or
xor
or
fadds
pop
js
iret
xchg
and
repnz
sarl
inc
xchg
pop
xor
jno
push
fwait
shl
imul
jecxz
jae
mov
mov
mov
test
bound
or
and
insl
repnz
xchg
cltd
scas
adc
xchg
ja
inc
sub
push
mov
push
push
add
jp
testb
sub
lret
sub
js
mov
add
adc
ja
xor
jbe
mov
fcmovbe
out
popf
mov
into
aam
mov
mov
ds
dec
gs
out
clc
mov
div
cmp
aas
pop
aad
in
xbegin
subb
jp
mov
fbstp
jbe
mov
scas
sbb
fcomps
or
inc
sti
push
xlat
pusha
pmulhuw
stos
lret
lret
inc
ljmp
rol
movsl
jb
popf
lret
add
sub
int
idivl
push
ljmp
jge
popa
outsb
jbe
iret
std
xor
test
sbb
lock
push
or
dec
and
or
mov
and
fucomip
cld
ljmp
and
nop
out
or
and
add
mov
in
inc
sbb
aad
fcmovu
bnd
cmp
mov
mov
pop
insb
in
inc
jp
inc
std
push
insb
xor
push
sbb
inc
pop
mov
cmp
leave
mov
jae
mov
mov
push
mov
or
xchg
movsl
push
pop
adc
xchg
andb
sbb
addr16
jnp
add
jne
nop
cmp
call
lea
call
xchg
in
jge
jns
fmul
in
xchg
ret
imul
int3
jae
fwait
mov
add
pop
push
or
jge
lock
imul
sbb
mov
pop
add
shrb
rcr
cmp
incl
scas
in
add
ss
shlb
add
js
cli
pop
adc
xchg
lds
mov
xorl
clc
cmp
sti
jbe
ret
sbb
xor
xchg
int3
mov
or
jo
pop
and
fwait
dec
xchg
pushf
repnz
enter
lock
repz
nop
and
shrl
dec
lret
out
dec
lods
pushf
out
mov
and
dec
mov
shll
movsl
sub
enter
mov
aas
nop
popf
call
lods
loop
fisttps
mov
xor
or
mov
mov
ja
push
in
pop
icebp
in
into
jge
jb
add
sbb
insl
loop
push
ds
bound
shrb
and
in
sub
inc
add
stos
xchg
mov
arpl
cwtl
xchg
pop
stc
ja
lahf
loope
jge
mov
dec
jbe
jnp
pop
xor
xor
inc
mov
jmp
and
xchg
ret
pop
xchg
int3
scas
subl
stc
mov
lods
fldcw
movsl
mov
pop
stos
mov
pop
arpl
adc
inc
mov
or
add
sub
cwtl
aas
jnp
test
call
mov
rol
pop
outsb
dec
cmc
daa
xchg
aad
test
dec
adc
jo
into
add
addr16
add
mov
sub
lods
cmpsb
int3
xchg
adc
sbb
cmpsb
dec
fistpl
ficoml
mov
bound
and
jae
mov
push
cmp
pop
pause
adc
push
push
sahf
es
fstpt
push
and
adcl
sbb
ficompl
in
pusha
or
subb
jae
fimuls
sbb
mov
sbb
xchg
inc
xor
jmp
aaa
pop
popa
cwtl
aas
xlat
and
popa
fiadds
push
cmp
inc
sarb
or
out
insb
cmp
pop
call
das
jb
mov
pop
cmc
sbbb
jae
mov
inc
add
xor
adc
push
shlb
adc
repnz
dec
aas
rorl
clc
ja
lcall
add
sahf
jecxz
mov
and
mov
pop
imul
and
cmp
cmp
mov
add
xchg
dec
pop
xor
xchg
sbb
xchg
inc
inc
lahf
pusha
dec
lahf
cmpsl
mov
jp
mov
lret
mov
roll
iret
rclb
push
lock
imul
shll
jns
mov
jne
test
dec
push
imul
and
stos
bound
xorb
clc
movsl
nop
lods
add
aaa
add
int3
pop
icebp
cmp
imul
sbb
mov
and
mov
loop
and
out
adc
sbb
dec
push
pop
cmpsl
pop
push
xchg
sbb
outsl
fcmovnb
jns
mov
adc
sub
xchg
xchg
mov
outsb
lods
mov
fistpl
dec
nop
xchg
aas
or
add
push
jle
cmp
mov
mov
xor
add
arpl
popf
rclb
sub
adc
into
testb
jnp
inc
arpl
mov
sbb
dec
pop
push
dec
cmp
mov
fsubs
imul
jge
sub
xchg
jno
stc
add
fsubrp
subl
hlt
mov
test
xchg
xor
or
ss
mov
sbb
movsl
ret
aaa
push
inc
pop
jne
imul
jmp
iret
xorl
shll
je
fdivrs
push
aam
aaa
loopne
sbb
and
push
jmp
or
cli
jo
push
push
cmp
ds
lahf
in
lea
imul
xor
cmpsl
out
sbb
test
out
push
imul
cmc
push
dec
lods
mov
sbb
cmpsb
popa
mov
xchg
leave
out
aas
aam
std
fisubrs
cwtl
lods
out
xchg
adc
mov
mov
out
lock
das
jle
daa
sbb
jbe
mov
xchg
xchg
sub
int
sahf
sbb
xor
add
leave
lahf
bound
xor
pop
fld
xchg
inc
aam
js
lret
les
push
daa
inc
dec
xor
mov
lock
jp
push
ficompl
mov
sub
insl
dec
jmp
adc
and
dec
lock
inc
out
sbb
arpl
xor
fxch
cmp
or
stos
cmp
fiadds
xchg
mov
push
movl
das
dec
enter
ret
cwtl
fimull
mov
cmp
idivb
mov
clc
xchg
sbb
cmp
or
inc
je
arpl
fisubs
cmpsb
call
aas
insl
xchg
mov
pop
sbb
sbb
enter
inc
daa
or
scas
xrelease
imul
outsb
mov
fdivrs
gs
insb
ds
inc
mov
negb
lcall
push
es
push
cmp
mov
cmove
jae
adc
aam
cmp
cwtl
popf
les
mov
es
jb,pn
adc
xchg
outsl
out
call
cmc
das
andl
data16
dec
ljmp
dec
mov
fsub
mov
mov
lock
orb
sub
add
xor
fdivrs
and
mov
test
jns
dec
lret
mov
cltd
mov
fldenv
ret
push
addr16
fcomps
outsb
mov
adc
test
loope
pop
xor
les
push
xchg
lea
repz
lea
pop
pop
xor
cli
mov
mov
pop
push
push
jno
pop
loope
inc
pop
lods
adc
inc
pop
cmpb
aas
xor
rcrb
pop
sub
xor
nop
add
cmpsl
movsl
movsb
bound
out
cmp
sub
lods
jnp
mov
scas
aaa
insl
adc
xchg
bound
scas
lret
dec
xchg
int3
jmp
inc
mov
inc
add
outsb
sub
sti
adc
push
mov
push
and
jae
sbb
jo
push
mov
jp
dec
leave
push
popa
push
aad
mov
pop
mov
mov
cmc
xor
push
shlb
push
jae
or
jno
sub
dec
out
lods
inc
movsl
pop
sbb
movsb
sub
ss
and
out
xor
mov
push
ljmp
imul
inc
aas
imul
mov
push
in
dec
roll
jmp
lea
test
aaa
inc
add
jmp
xchg
scas
cmc
pop
cmpsl
data16
mov
jle
xchg
das
gs
add
sbb
push
lret
ss
mov
inc
es
leave
stc
mov
lret
mov
cltd
jecxz
faddl
add
mov
mov
xor
jle
daa
in
xor
lcall
push
mov
mov
out
pop
adc
xor
not
push
fs
fucomp
jbe
adc
in
cmpl
cmc
shrl
movb
push
inc
sbb
dec
push
je
pop
movups
cmp
pop
repz
mov
xor
adc
adc
pop
push
dec
mov
popa
lcall
add
mov
test
sbb
pop
mov
xor
mov
add
pop
out
cmpsl
mov
sahf
pop
mov
pushf
dec
push
jnp
out
inc
and
ret
or
and
notl
ja
jg
adcl
add
push
push
rcrl
ljmp
mov
sbb
les
repnz
dec
mov
sbb
out
dec
mov
xchg
xchg
sarb
sub
shrl
imul
out
mov
scas
sbbb
xchg
mov
jl
pop
insl
mov
mov
loopne
mov
int
add
pop
sbb
xchg
add
inc
ss
push
fildll
xor
add
pop
fdivl
inc
xchg
fwait
cmp
dec
fcomps
test
movsl
sub
cmp
sbb
hlt
cmp
aaa
mov
inc
cmp
arpl
push
test
repz
mov
fnstsw
sub
jo
sbb
mov
jecxz
shll
inc
jle
pop
and
sub
ret
std
sbbb
jnp
push
mov
fcoms
shll
mov
mov
mov
push
dec
es
test
push
xchg
mov
in
push
mov
xchg
xlat
loopne
mov
dec
fbld
leave
lret
insb
inc
arpl
fldt
push
mov
cltd
xchg
mov
das
movsb
je
xlat
inc
rcrb
add
push
mov
loop
test
add
movsl
xor
push
mov
or
push
sub
mov
aam
xor
dec
push
sub
aam
fcomip
enter
scas
loope
jp
mov
ds
popf
mov
xlat
out
insb
adc
cltd
js
loopne
jg
repz
push
xlat
rolb
and
imul
rorb
adc
movsl
leave
neg
push
rolb
imul
mov
cld
aas
inc
push
sti
bound
mov
movsb
pop
mov
popa
in
fisttpl
outsb
lods
or
js
xchg
jnp
ret
adc
push
xchg
sbb
xchg
lods
dec
scas
fwait
add
addl
outsb
xor
xor
mov
shlb
movsl
xor
pop
fdiv
sub
js
mov
inc
or
sbb
or
out
aaa
sbb
mov
inc
jno
fincstp
idivl
push
hlt
pop
scas
inc
jg
pop
sub
inc
dec
add
loope
outsb
hlt
adc
xchg
scas
insb
mov
mov
push
mov
xchg
lret
test
hlt
shrl
adcl
sti
nop
repz
mov
loope
dec
cmp
jae
xor
aaa
sbb
xor
ja
repz
divb
out
xor
xlat
inc
add
cli
mov
shl
and
stos
xchg
mulb
xchg
ss
mov
data16
sbb
mov
fistl
adc
pop
jb
push
mov
cli
rorb
mov
pop
dec
xchg
jp
data16
fstpt
cmc
int
mov
sub
cmc
pop
fmul
push
bound
xchg
and
aam
xor
or
cwtl
mov
pop
inc
pop
pop
enter
fistpll
cwtl
out
fimuls
jno
test
adc
xor
jnp
jae
dec
mov
stos
pop
int
fists
adc
xor
mov
sub
dec
inc
leave
dec
hlt
pop
inc
sti
jp
inc
lret
pop
push
shlb
push
add
lahf
mov
cmp
push
aas
inc
push
push
out
or
nop
mov
push
push
dec
sub
int
repnz
sbb
rorl
scas
push
mov
into
pushf
lea
je
inc
cmp
mov
cmpsb
cwtl
push
xor
push
adc
es
cwtl
and
mov
xor
in
repnz
ljmp
repnz
xor
orl
repz
es
cmc
jmp
ret
arpl
lahf
adc
lods
fldl2t
addr16
shl
cmp
lods
fmul
jle
push
les
push
mov
loopne
fdivr
cld
dec
repnz
mov
jecxz
mov
cmpsb
ret
loope
adc
and
stos
stos
mov
jns
sub
int
inc
jne
mov
cmp
in
rolb
xor
dec
icebp
adc
out
insl
sub
cmpsl
and
in
aam
jp
xchg
inc
in
or
mov
lock
fwait
xchg
mov
jmp
pop
inc
fildl
push
outsb
jge
xchg
inc
or
or
mov
or
int3
ret
add
pop
push
cmp
cmpsb
xor
or
cmp
mov
adc
pop
arpl
pusha
dec
nop
fisubs
addb
mov
cli
mov
xchg
int
dec
push
pop
sbb
pop
jnp
shl
and
add
fisttpl
jg
clc
scas
sub
out
iret
jno
mov
movsb
adc
push
cli
dec
cmc
mov
fiaddl
sub
mov
mov
dec
mov
jnp
cmp
xlat
push
jecxz
and
mov
mov
jl
cs
and
fstps
sahf
ret
cmp
outsb
mov
mov
cli
pop
dec
repnz
cwtl
mov
outsb
mov
push
test
daa
mov
aad
jecxz
pushf
ret
fldcw
je
mulb
movb
cmc
dec
insb
out
js
negl
cld
or
push
inc
shrl
call
stos
test
pop
scas
roll
imul
pushf
bound
mov
pop
jne
ffree
scas
jp
adc
and
call
repnz
jp
lcall
cmp
aaa
mov
sub
push
lock
jo
sub
xchg
sub
cmpsb
repz
mov
clc
clc
stc
mov
dec
mov
sbb
xor
pop
sahf
xchg
loopne
roll
outsb
imul
push
mov
or
mul
shlb
rcrl
cs
adc
std
clc
sbbl
call
ret
xchg
and
sbb
ljmp
pusha
test
adc
add
movsb
sti
stc
adc
sub
out
adc
push
incl
movsl
pushf
cmp
aam
out
lret
popf
ss
lock
pop
xchg
aam
into
pop
mov
mov
push
daa
aad
jbe
daa
in
or
cmp
sub
out
mov
sbb
mov
in
pop
fstpl
dec
mov
loope
outsl
sub
test
cmp
mov
push
call
inc
cmp
jb
dec
xchg
mov
lods
loop
pop
xor
sahf
or
shlb
sbb
insb
cmpsb
push
sbb
add
out
and
pop
sar
mov
leave
mov
add
adcl
int3
mov
dec
in
sbb
push
ret
adc
hlt
sbb
mov
hlt
ret
cltd
and
mov
pop
es
sahf
xor
lods
dec
push
dec
loope
add
mov
add
cmc
pop
mov
movsl
inc
mov
lcall
and
pop
scas
sbb
pushl
jbe
adcb
fwait
mov
lret
adc
cmp
in
clc
sar
push
mov
jno
imul
jns
mov
xchg
push
ja
jae
nop
push
sub
cmc
and
ljmp
nop
lcall
aaa
je
sahf
test
fisttpll
cwtl
and
imull
incl
in
lret
loope
pop
adc
outsb
sub
add
sar
pop
xlat
sbbl
sub
fs
fidivl
arpl
stc
std
lea
cltd
mov
or
fld
sbb
loopne
dec
xchg
mov
pop
adc
ror
dec
out
adc
iret
mov
xor
sbb
scas
dec
xchg
xchg
jno
pop
lods
icebp
mov
dec
sbb
cwtl
xchg
enter
inc
sahf
repz
adc
jp
or
sub
mulb
out
out
jmp
out
dec
sbb
std
or
and
cld
push
adc
pop
lock
adc
jle
fimull
fidivs
cltd
pop
sub
push
and
sbb
cmpsl
shrb
into
sub
fadd
jg
subl
imul
jno
test
inc
adc
loope
in
dec
pop
or
or
test
cwtl
enter
popf
ret
sti
mov
out
ret
out
adc
pop
mov
cltd
stos
fs
int
push
inc
movb
jnp
xchg
jg
push
rorb
pop
dec
mov
cmp
inc
movsb
push
leave
popf
pop
cmp
jmp
int
dec
lds
jo
mov
push
or
mov
mulb
jns
inc
dec
cwtl
mov
vpshufd
orl
stc
or
bound
mov
inc
mov
pop
mov
mov
dec
xchg
mov
or
add
into
enter
shlb
repz
lods
mov
mov
mov
hlt
pushf
or
and
mov
test
iret
jmp
fsubrl
push
in
adc
mov
ljmp
sbb
out
fildll
out
fdivr
adc
mov
clc
adc
add
xor
xor
push
add
aas
adc
mov
test
jmp
add
js
insl
pop
jmp
cmpsb
std
incb
mov
sbb
sbb
ljmp
xchg
jo
movsl
in
clc
pop
roll
and
mov
sbb
divb
roll
xchg
imul
dec
jmp
popa
xor
lahf
dec
fsubs
gs
mov
ljmp
out
mov
jecxz
adc
add
or
jle
jns
mov
adc
mov
lea
scas
sti
push
xor
repz
cs
mov
inc
cmc
sbb
dec
fcmovnu
nop
call
ljmp
repnz
aad
inc
aaa
hlt
stos
dec
add
mov
pop
popf
push
outsb
enter
jno
bound
fnstenv
mov
sub
les
xlat
cmp
add
inc
jbe
xorb
lds
sbb
inc
push
fisttps
or
sti
movsb
test
aam
scas
lcall
mov
dec
push
rcrb
test
xor
in
aad
add
adc
cmp
mov
test
xor
push
adc
inc
fidivs
jecxz
stc
inc
cltd
gs
aas
and
xchg
repnz
cmc
mov
cmpsb
pop
or
repnz
ja
mov
xchg
adc
fbstp
testl
cli
push
xor
mov
pop
xor
rcrb
cwtl
fidivs
incl
push
jbe
jle
iret
add
lahf
add
pop
push
mov
fiaddl
xchg
sbb
push
aaa
sbb
call
mov
bnd
inc
out
mov
xchg
out
inc
roll
mov
xor
jnp
sbb
jg
jmp
inc
lods
aad
push
cmpsb
repnz
cmpsl
gs
pop
roll
mov
cmpsb
arpl
in
xor
and
lods
lock
outsb
lret
xchg
cltd
xorb
fists
add
sbb
inc
inc
dec
ret
add
pop
add
enter
test
jp
in
jmp
mov
imul
jmp
dec
xchg
stos
xor
icebp
mov
insb
cli
add
arpl
xor
xor
mov
js
movsb
push
clc
mov
push
pop
adc
mov
xchg
jnp
outsl
iret
jge
js
jmp
decb
xchg
mov
jecxz
push
test
bound
jo
iret
mov
sbb
std
pop
aaa
lods
leave
jl
push
push
mov
shlb
sbb
adc
loopne
mov
dec
cmc
lods
mov
xchg
outsl
stos
inc
sbb
pop
jno
outsl
aas
push
jg
mov
or
cld
in
js
mov
xchg
mov
adc
pop
cld
inc
push
dec
sti
mov
aam
push
cltd
fwait
mov
pop
xchg
dec
loop
mov
mov
std
lds
or
sbb
mov
mov
jmp
loopne
stc
cli
fucomp
and
dec
out
mov
fsubrl
test
imul
outsl
fcomps
lcall
jns
or
inc
push
es
adc
lods
sbbl
dec
adc
cmp
movsb
sub
mov
pop
cld
rorl
sbb
sahf
pop
and
sub
mov
outsl
cmc
mov
adc
data16
flds
pmaddwd
xchg
sbb
push
or
jle
cmp
loopne
and
lcall
mov
mov
ret
lcall
daa
mov
and
lret
daa
arpl
adc
or
push
mov
jecxz
lcall
in
movsb
cmpsl
imul
sbbb
fisttps
in
rorl
cmp
mov
pop
movsl
and
cmp
sub
xor
cmp
in
out
jae
and
mov
in
pop
cli
rol
addr16
dec
sub
push
arpl
into
sbb
mov
pop
mov
xchg
and
sub
jo
sti
repz
mov
xor
inc
xchg
jo
jl
adc
out
push
std
rol
repnz
js
add
mov
and
xorl
jbe
or
mov
xchg
sti
mov
sbb
nop
mov
roll
insb
fadds
mov
das
cmp
dec
sbb
lret
fnstcw
les
sbbl
stos
testb
xchg
or
mov
int3
fsubr
sbb
decl
and
ret
loop
std
lock
lcall
aas
pop
ljmp
imul
xchg
cmp
andb
cmc
adc
add
sub
cmc
cmp
ljmp
test
popf
test
ja
pop
inc
hlt
in
lcall
sub
aad
mov
dec
lahf
jb
cmp
push
mov
cld
divb
popa
sub
push
aad
outsb
dec
cmp
push
sbb
xor
xor
and
sbb
mov
jmp
and
mov
shrb
cltd
pop
mov
ds
sbb
push
ret
fsts
xchg
aad
cli
xor
jl
xchg
jmp
rorb
bound
jno
pop
push
mov
push
cmp
arpl
xrelease
fidivs
pop
out
jb
add
repz
adc
gs
sbb
xchg
dec
pop
push
adc
adc
and
call
orb
das
fldt
push
add
mov
ja
cld
mov
ret
or
dec
fmuls
incb
xor
push
add
and
xor
or
cmp
mov
or
sub
push
dec
mulps
add
fsts
pop
pusha
mov
lock
addl
adc
outsl
xor
xor
sti
lea
ja
adc
mov
rolb
xorl
and
lods
pop
icebp
ja
sti
sub
or
lahf
pushf
shrb
out
clc
das
dec
pop
lds
aas
dec
or
ret
fwait
push
sbb
cmp
sti
and
lcall
popa
sahf
mov
add
andl
mov
pop
or
dec
into
bnd
pop
icebp
sub
jge
cmp
xchg
push
mov
cmp
dec
rolb
outsb
cmp
sbb
ds
cld
pop
cmp
into
fwait
in
pop
push
int
add
in
push
push
jp
and
pop
sub
test
push
dec
bound
dec
xor
adc
inc
out
inc
sti
push
dec
or
mov
cmp
stos
xchg
sub
add
lret
xor
mov
mov
rcll
push
cltd
push
and
add
push
push
mov
sub
push
imul
ret
test
fwait
ja
fwait
or
jecxz
mov
enter
push
in
js
ficomps
mov
pop
pop
es
inc
movsl
cmpsb
iret
leave
xchg
or
mov
mov
inc
test
je
cmp
add
dec
cmpsl
adc
stos
sti
ret
inc
pop
in
or
jnp
aas
pop
jns
and
fsub
add
aaa
sti
inc
mov
lret
cmc
mov
gs
pop
stos
dec
ljmp
lea
out
and
inc
js
and
shll
or
sbb
test
int
xor
jb
mov
sbb
arpl
fs
test
and
mov
popa
mov
inc
mov
and
cmp
cmc
cmp
push
cmp
data16
mov
jl
mov
jecxz
ja
rolb
test
adc
jbe
sbb
sub
rcrb
icebp
out
out
outsb
sbb
daa
inc
loop
mov
dec
push
xor
aaa
mov
sub
mov
sbb
push
mov
push
mov
fidivrs
popa
jns
inc
fldl
pop
xchg
jecxz
fstl
imul
push
push
push
adc
testl
xchg
jmp
inc
mov
out
jns
push
out
cmp
imul
xlat
sub
mov
repz
inc
xor
xchg
adc
pop
add
popa
xchg
lret
stos
jp
pop
ja
int3
sbb
pusha
test
pop
push
xor
or
outsl
int3
adc
cltd
cmp
pop
inc
mov
lahf
push
fnsave
outsl
cmp
pop
xchg
aad
aas
dec
mov
aaa
or
lock
subb
js
fidivl
and
ja
subl
test
push
subl
js
and
xchg
xor
mov
sbb
dec
inc
jnp
in
addr16
mov
xor
mov
imull
call
adcl
mov
inc
push
rcr
lods
push
adc
into
imul
mov
imulb
and
outsl
jae
push
inc
js
iret
icebp
inc
into
push
sti
movb
in
mov
inc
and
cwtl
mov
add
aaa
push
xchg
test
movsl
mov
lret
cmp
dec
cmp
into
lods
and
xchg
adc
push
inc
jg
pop
adc
es
mov
arpl
jmp
dec
cltd
mov
loope
cmp
lea
sahf
in
inc
pop
sbb
in
lcall
cmp
test
push
mov
sub
test
pop
int
stos
int
xor
stos
int3
idivl
push
repnz
orl
inc
push
sbb
inc
jno
sarb
pop
push
dec
std
cld
ja
xor
dec
rcr
mov
pop
dec
push
int
mov
add
ss
sbb
sub
ss
dec
clc
xor
stos
xlat
sub
nop
dec
and
sbb
adc
mov
mov
lods
inc
mov
pop
inc
test
xchg
inc
xor
pop
iret
xchg
mov
xchg
int
mov
pop
aas
sub
repz
pushf
push
xchg
fcompl
mov
sbb
test
imul
je
jl
jp
rolb
out
shrb
cwtl
cmp
inc
cmp
push
movsl
push
popf
mov
mov
dec
int3
mov
and
xchg
add
cmp
mov
mov
jl
sbb
sarl
jae
ss
out
fidivrl
or
leave
mov
dec
loope
les
add
jns
sbb
adc
push
sbb
movsl
cs
jle
lods
test
out
add
mov
daa
push
xchg
jp
mov
push
dec
loope
hlt
jle
sbb
sbb
jge
mov
fsts
ret
add
pop
and
outsb
shrb
jae
imul
jmp
rcr
mov
xchg
hlt
inc
pop
mov
shll
pop
dec
or
jp
mov
cld
mov
subb
dec
sub
cmp
dec
rep
push
dec
in
or
pop
xor
mov
iret
mov
out
dec
xor
dec
sbb
ret
push
out
lock
push
lock
mov
fsub
bound
and
jno
jecxz
sub
mov
test
call
add
mov
push
enter
pop
pop
sarb
repnz
cwtl
outsb
pop
loop
scas
cmp
in
adc
mov
cmpsl
jle
jge
addl
lret
loopne
mov
xchg
rcrl
push
fs
sub
scas
dec
mov
lahf
pop
das
push
movsl
clc
push
jne
pop
xchg
sbb
add
insl
mull
std
je
into
or
bswap
sub
mov
pop
lahf
lret
and
xlat
pop
in
popf
fsubl
xchg
adc
jno
or
jno
lret
sub
sahf
in
arpl
cwtl
or
pop
lods
and
dec
cli
xor
and
mov
and
xor
mov
add
jg
inc
pop
inc
pop
ja
jnp
inc
dec
or
stos
jno
cmpsb
inc
es
shll
call
inc
mov
out
jmp
jne
sub
sub
sahf
mov
fisubl
mov
mov
cmpsl
cs
jmp
inc
fcoms
ds
mov
and
jl
add
and
gs
pop
dec
sahf
sbb
insb
xchg
dec
mov
mov
adc
lret
lea
std
sub
das
adc
cmp
fs
leave
inc
fwait
aam
loop
xchg
push
leave
fidivs
inc
lods
cmp
dec
push
movsl
dec
mov
ja
lcall
dec
sbb
push
jge
adcb
jno
lret
lret
scas
sbb
xchg
jl
cwtl
inc
inc
gs
or
xchg
fs
xor
mov
mov
push
jmp
push
mov
push
int3
ljmp
jns
push
mov
jmp
push
jb
into
mov
les
imul
movsl
fistpll
insl
jo
sub
movzbl
std
rol
rcr
jg
cld
xchg
loopne
inc
cmp
add
cmpsb
sub
arpl
test
pop
stos
cli
mov
mov
inc
ss
xor
adc
pop
pop
idiv
mov
pop
sub
fiadds
add
fs
out
ja
lcall
adcb
lret
lods
xchg
fisttpll
and
mov
ljmp
mov
push
fs
cmp
mov
sbb
popa
adc
imul
mov
jae
adc
mov
aad
sbb
adc
sub
stos
dec
or
add
and
cltd
add
mov
lods
inc
add
push
pop
add
jb
jge
xchg
mov
das
lcall
mov
lahf
and
or
pop
out
cmc
xchg
test
pusha
jmp
movsl
adc
fs
sbb
test
inc
jmp
jp
mov
dec
add
ja
mov
loope
xor
cmp
rcrb
incb
cmp
mov
cmp
or
aaa
fyl2x
or
cmc
addr16
or
out
insl
push
dec
mov
cmp
insl
orb
or
imul
pop
scas
pusha
sbb
daa
rcll
jb
std
xor
outsb
push
lcall
sahf
sbbb
and
cs
ficomps
adc
cmp
icebp
scas
mov
push
negb
je
stc
xchg
imul
iret
and
repnz
add
or
add
and
mov
or
loop
adc
xlat
cmp
mov
sbb
int
push
push
jno
and
aas
cmpl
pop
jecxz
adc
and
je
clc
sbb
xchg
in
push
pop
mov
xor
fadd
rorl
jb
int
and
mov
inc
and
or
xchg
testl
lea
adc
sbb
push
xor
mov
aas
cmp
lret
sbb
pop
xchg
loope
xor
mov
test
xchg
out
dec
push
push
das
lcall
jnp
sbb
or
jnp
fsubs
adc
push
and
test
aaa
ljmp
ret
mov
xor
dec
cmp
mov
and
cli
mov
push
popa
pop
stc
ret
scas
pop
mov
push
in
or
cli
xor
fwait
push
adc
lret
pop
out
mov
orb
mov
test
add
xor
inc
jne
insl
outsl
jge
and
jle
dec
push
popa
popa
mov
repnz
test
pop
repz
xchg
js
pop
std
and
in
repnz
jmp
jae
push
in
mov
add
jae
sub
fidivrs
sub
xor
mov
add
lods
pushf
in
dec
cmpsb
push
xchg
icebp
or
lods
inc
out
adc
test
jp
lret
push
popa
xchg
fsts
add
sub
push
stc
cmpsl
pushf
into
lret
adc
jp
cmpsl
iret
dec
cmp
jae
mov
fisttpl
adc
push
add
pop
lahf
fsubs
jbe
bound
hlt
jae
pop
jl
jae
rcrb
jnp
push
sbb
pop
mov
lods
into
iret
shl
popa
sti
pop
lcall
or
aas
decb
and
clc
fs
stc
xchg
sbb
sti
mov
xchg
pop
sub
add
notl
push
into
fidivl
stos
loop
push
push
mov
sarb
arpl
scas
lret
pop
sub
movl
mov
pushl
mov
xor
jo
cmpl
mov
push
insl
push
mov
stos
aas
add
fsqrt
xchg
cmp
sub
cs
mov
shr
sti
sub
fwait
push
das
dec
dec
scas
nop
movsb
pop
dec
inc
lret
push
and
xchg
pop
cmp
inc
cmp
mov
pop
aam
pop
jp
inc
cs
data16
fadds
inc
rclb
sbb
add
scas
movsb
jmp
and
ljmp
pop
jbe
loopne
pop
jmp
rep
rcl
lcall
pop
push
lret
fadds
dec
sbb
subl
jge
pop
mov
fistpll
data16
ss
or
stc
xchg
inc
xor
pmulhw
mov
scas
popf
xchg
insb
popa
sbb
and
das
adc
and
in
pop
push
sub
sar
lods
das
ret
add
sub
add
cld
add
mov
fistpll
out
aad
negl
add
testb
ficoml
sbb
adc
in
ja
pop
dec
cmp
pop
xor
xchg
int3
loope
mov
or
cli
jp
and
jno
fstpt
adc
inc
xchg
mov
movsb
enter
inc
and
and
sub
out
inc
jb
cwtl
movsl
cs
pushf
sub
or
mov
or
or
roll
mov
dec
jno
call
cmp
enter
dec
push
lds
xor
mov
sar
bound
aaa
and
sub
lods
or
jbe
push
jns
nop
add
pop
mov
cs
imul
movsb
ljmp
mov
test
test
push
mov
out
ficomps
mov
stos
stos
mov
jcxz
inc
arpl
lahf
test
pop
fs
lret
sub
xchg
xchg
and
daa
leave
lret
pop
stc
test
dec
cmp
jecxz
fnop
add
aaa
inc
inc
pop
incl
cmp
and
jp
sti
push
test
jge
mov
jp
pusha
or
outsb
stos
or
mov
sarl
jge
push
and
sbb
dec
xor
cli
cmpsb
pop
inc
push
mov
fstps
dec
addr16
mov
cmp
jl
loope
jg
xchg
pop
sbb
dec
add
push
jb
pop
mov
mov
int
mov
icebp
mov
pop
inc
inc
add
inc
mov
xchg
mov
mov
inc
in
imulb
imul
or
insb
inc
ret
add
and
mov
or
gs
sbb
int
sbb
jno
lcall
sbb
or
jp
push
sbb
inc
push
adc
push
addb
outsl
pop
repnz
push
nop
lret
fs
fstpl
repz
jae
jl
push
mov
or
mov
js
adc
cmp
test
adc
sub
fsubrs
xor
insl
xchg
push
fimull
push
mov
pop
xor
add
clc
outsb
cld
loope
scas
stc
pop
jmp
push
cmp
loope
dec
cmp
and
or
adc
pop
out
cmp
add
dec
das
mov
sti
push
ficoml
sarb
repnz
cmp
mov
sbb
pop
adc
sub
fisttpll
and
call
and
mov
bound
lret
fildl
push
or
mov
lret
jecxz
cmp
add
insl
lcall
adc
add
in
jns
push
jnp
shr
ds
mov
jns
or
mov
sbb
jecxz
fidivrl
std
lahf
cmp
lock
dec
leave
cmp
repz
cmp
push
test
or
int
ss
mov
push
out
rcll
pop
insb
sub
orl
push
jb
cmp
outsl
push
mov
sbb
mov
loop
sub
lret
es
sbb
mov
push
aam
shlb
pop
out
push
xor
mov
bound
out
addr16
xchg
pop
cmp
dec
orb
stos
dec
fs
in
hlt
pushf
jl
mov
popa
in
lcall
inc
xchg
sbb
mov
sahf
jp
adc
addr16
mov
loopne
xchg
cmpsb
ficoms
sbb
stos
dec
test
mov
lcall
or
push
fchs
cld
js
mov
int
mov
jno
repz
idivl
dec
repz
and
mov
sahf
in
xchg
xchg
mov
xor
pop
fstps
lds
push
inc
xchg
fcoml
test
bound
inc
mov
fsubl
subl
test
outsl
ss
lock
js
jecxz
pop
das
dec
jbe
xor
insb
mov
loopne
push
hlt
loopne
insb
cmp
daa
je
xchg
xorl
popa
xchg
int
dec
push
rcl
pop
sbb
jne
push
mov
call
and
mov
xchg
push
ffreep
outsb
mov
xlat
out
and
jb
xlat
add
pop
pop
loopne
dec
out
ja
les
push
lock
bound
enter
add
ss
push
push
jae
sub
xchg
or
lret
mov
popa
sbb
aam
sbb
sbb
adc
shrl
ret
mov
jnp
scas
testb
sub
jg
sbb
mov
xchg
mov
sub
cmp
mov
aaa
cmpsl
enter
or
pop
mov
push
cmp
push
mov
enter
xor
xchg
mov
aas
push
mov
dec
leave
sub
mov
lahf
jge
faddl
ret
xchg
enter
and
jnp
cld
hlt
sub
mov
mov
aam
outsl
pop
sbb
xchg
and
jnp
je
loop
mov
es
cmp
lahf
jae
dec
xor
add
jmp
pop
cmp
out
pop
rcr
ss
mov
mov
pop
scas
mov
mov
sbb
pusha
mov
imul
mov
sub
rolb
imul
mov
inc
adcb
mov
addr16
jle
inc
jle
rorl
pop
mov
mov
xchg
sbb
loope
in
push
imull
add
ja
dec
xlat
cmp
xor
inc
lock
loop
xchg
stc
mov
inc
pop
cmc
imul
jns
push
ljmp
cld
jo
int
cltd
neg
dec
add
xchg
dec
jg
jmp
test
addr16
dec
dec
in
mov
cmc
aas
arpl
mov
inc
lds
aaa
jmp
ds
mov
mov
ljmp
in
orl
cmc
lods
clc
ret
psubsw
push
fstpl
gs
cmp
orl
dec
dec
or
popf
cmp
out
mov
xor
cld
push
lret
test
sahf
pop
mov
es
jecxz
pusha
sbb
mov
frstor
je
mov
icebp
xchg
mov
cld
adc
inc
dec
mov
sahf
lret
imul
lods
fstl
pop
or
stc
test
fwait
insb
pop
jno
cmc
dec
test
nop
sti
inc
out
scas
imul
inc
push
pushf
cmp
cltd
jmp
lahf
jl
in
insl
push
enter
or
xchg
sti
cmpb
and
fnstsw
out
pop
and
lcall
rclb
jle
ljmp
dec
pop
bound
insl
sbb
sub
cmp
dec
push
or
push
pop
inc
xchg
andb
or
cs
add
push
dec
mov
adc
xchg
xlat
out
sahf
mov
sbb
decl
pusha
mov
jle
adc
pusha
aaa
cltd
test
mov
mov
sub
scas
dec
les
mov
int
mov
inc
lahf
imul
es
cmpps
adc
add
fwait
inc
nop
push
mov
jle
mov
stos
movsb
dec
adc
mov
pop
jnp
mov
cld
es
les
lods
aas
pop
mov
push
mov
dec
lret
cmc
mov
dec
daa
xchg
and
dec
les
xor
pop
iret
sarl
cmp
aam
adc
or
or
test
inc
push
mov
sub
jo
xor
jnp
enter
push
sbb
xor
cmp
adc
inc
cmpsl
ljmp
out
jno
mov
mov
std
pop
popa
or
dec
lcall
xor
hlt
lock
inc
xor
xchg
mov
xchg
or
and
jno
push
stc
mov
mov
cmpsl
cmp
test
ror
gs
cltd
jo
jae
xor
dec
xor
mov
in
mov
aas
addr16
pop
xchg
rorl
push
dec
and
mov
dec
imul
and
mov
pop
xlat
cmp
es
cltd
aas
jns
aam
or
xchg
rcr
or
mov
and
out
mov
dec
lret
xchg
and
jmp
cmpb
dec
cmp
inc
push
into
push
jmp
mov
mov
jecxz
icebp
jno
mov
clc
mov
pushl
daa
adcl
pop
rcrl
aas
fs
xchg
or
push
mov
dec
dec
mov
aas
shlb
mov
push
push
testl
mov
cmc
cmp
push
in
in
adc
cmp
iret
pusha
subb
test
ficoml
mov
push
stc
repz
ss
fdivl
insb
call
aad
lret
xor
sub
rorl
mov
test
and
dec
sbb
push
lea
sub
xorb
repnz
jmp
das
dec
mov
shrb
aad
cwtl
adc
push
pop
cs
mov
mov
aam
cltd
inc
dec
mov
out
xchg
scas
cmp
imul
ret
stos
fs
btr
or
test
insl
fisttpl
or
fwait
shr
gs
jbe
xchg
cld
adc
inc
pusha
or
mov
mov
and
repz
imul
xlat
jle
out
cmp
out
mov
dec
sahf
xor
insl
loop
aaa
ret
mov
cmp
bnd
cs
pop
or
mov
add
lahf
dec
add
popf
push
pop
cmp
loopne
pushf
sbb
pop
and
clc
in
aaa
dec
mov
leave
test
test
sbb
mov
and
dec
into
cli
cmpsb
test
pop
jmp
test
inc
scas
stc
or
dec
sbb
adc
or
les
mov
push
out
and
or
pop
pop
lods
or
add
out
mov
notl
notl
inc
in
pushf
and
fchs
bt
in
mov
es
or
add
imul
and
pop
icebp
ja
in
mov
push
or
mov
xor
scas
fisubrl
das
push
sub
cltd
lcall
repz
and
out
inc
push
leave
scas
add
cmovno
lds
jne
sbb
mov
stc
pop
xchg
pushf
gs
mov
sub
insb
shl
ja
inc
inc
mov
jb
rorl
push
mov
dec
jg
hlt
pushf
jno
ss
mov
mov
aam
andl
lahf
xlat
sub
xchg
dec
insb
add
test
jge
xchg
mov
sbb
sub
icebp
mov
stos
and
test
stc
sarl
adc
ja
xor
bound
adc
jo
insl
xor
movsl
das
inc
xchg
xor
dec
lret
add
shll
pop
mov
pop
sbb
lret
arpl
jo
cwtl
das
push
inc
lea
mov
mov
cmp
pop
idivl
int3
sub
jb
lret
dec
sub
ret
stc
xchg
cmp
std
jnp
stos
dec
mov
hlt
mov
scas
sbbl
and
addr16
mov
aas
fistpl
mov
xchg
cmp
lods
and
shlb
iret
enter
xor
scas
insl
lret
jnp
mov
sub
test
adc
add
call
adc
jecxz
rcrl
xor
sub
imul
mov
sar
sbb
icebp
test
sub
or
mov
sti
test
cmp
aas
mov
arpl
add
add
and
fdivl
ret
pop
fistl
xor
xchg
push
out
fcomip
push
fwait
cwtl
or
subb
xchg
fs
add
nop
in
ret
iret
hlt
jbe
ljmp
push
mov
push
xor
cmp
lahf
repnz
push
push
pop
mov
cld
outsb
cwtl
push
aaa
jae
fnstsw
adc
rcrl
push
push
pop
lds
mov
repz
es
cmpsl
sbb
add
mov
xor
test
xor
imul
scas
imul
mov
jne
lds
inc
push
sbb
shr
jle
lret
mov
sahf
inc
es
mov
and
mov
pusha
fwait
daa
stos
enter
cmp
mov
scas
popf
mov
je
idivb
xchg
add
add
adc
popf
dec
roll
popa
cmp
cwtl
cltd
les
mov
andb
mov
mov
ss
and
sbb
push
mov
dec
cmp
ljmp
leave
cmp
cmpsb
aam
ret
pusha
mov
sahf
arpl
leave
sub
xor
subl
dec
divb
push
mov
daa
push
aas
dec
sub
mov
sbb
gs
sbb
inc
fildl
lcall
add
push
lcall
and
jecxz
add
rcrb
add
jb
in
pop
cli
fwait
pop
cmpsl
sbb
push
jb
ret
popa
sbb
pop
outsl
movsl
sub
add
test
leave
xchg
adc
cwtl
ljmp
pop
pop
and
lcall
inc
pusha
dec
cld
cmp
push
dec
inc
xchg
push
push
stos
sahf
mov
add
int3
push
ret
ret
pop
and
mov
mov
insb
fcoml
lods
adc
or
sahf
cmp
mov
adc
push
jne
inc
xor
pop
pop
push
rcr
jo
fwait
mov
shrb
icebp
out
jge
pop
jge
mov
pushf
jne
adc
loope
pop
mov
mov
lret
sbb
mov
dec
adcb
movsl
cmp
lea
sub
jecxz
jmp
jmp
xor
cld
pop
test
ficoms
outsl
xlat
ficoml
in
push
scas
movl
add
mov
add
iret
mov
cs
jecxz
xor
push
pusha
push
dec
jecxz
outsb
pop
lret
cmc
cli
push
sbb
fwait
subl
sbb
sbb
cld
stos
js
imul
ret
cmp
adc
pusha
xor
and
stos
push
scas
je
push
mov
lods
adc
push
sti
sar
in
dec
push
and
push
xchg
or
adcl
jle
adc
stos
mov
leave
ret
inc
adc
sub
dec
daa
scas
add
jbe
insb
sbb
push
dec
and
xor
enter
push
outsb
push
inc
lods
sbb
addl
mov
jo
fdivr
js
mov
dec
es
mov
repz
das
lds
add
sbb
scas
scas
int3
daa
jl
lret
xchg
dec
sub
shll
jo
xchg
movsl
add
test
outsl
jge
dec
jns
mov
shl
pop
call
test
adc
enter
mov
or
dec
outsb
xchg
int3
xchg
jmp
sbb
in
mov
mov
dec
mov
add
shl
test
jg
js
in
out
aas
lret
aaa
je
mov
jle
jo
xchg
std
scas
push
lahf
nop
push
nop
pushf
repnz
in
rcrl
movsb
inc
gs
sarl
pop
sub
dec
cld
xchg
iret
mov
or
mov
cmp
loopne
icebp
adc
jle
insb
inc
sbb
clc
sbbb
cmc
push
pop
aad
mov
push
mov
and
xchg
ljmp
stos
mov
pop
push
xor
mov
insb
cmc
shrl
scas
cwtl
xor
pop
jge
aam
arpl
clc
daa
push
das
adc
push
pop
stc
inc
xchg
push
fsubrl
push
mov
mov
mov
and
out
es
inc
test
fnstcw
xor
imul
pushf
imul
lods
in
idivl
or
cld
bound
out
or
push
jno
scas
adc
out
lods
out
call
mov
sbb
jmp
inc
cwtl
lods
testb
movsl
dec
dec
sub
pop
call
hlt
lahf
jmp
mov
outsb
adc
dec
or
aaa
mov
fbstp
xchg
cmc
ret
jb
sbb
in
push
popf
scas
test
add
cmpsl
sbb
loop
mov
into
lds
sub
loope
cltd
cmc
rcrl
sbb
mov
pop
dec
xchg
imul
inc
jbe
lods
and
jns
adc
xchg
dec
je
and
adc
fld1
mov
xor
cli
nop
push
lret
pop
cld
jns
sub
push
push
push
mov
sbb
pop
and
ret
adc
dec
inc
or
jnp
clc
push
xchg
sbb
ja
push
movsl
push
xorl
loope
add
mov
js
aaa
cmpsb
push
cmpl
sbb
push
out
mov
aas
es
push
in
inc
jae
movsb
dec
mov
mov
sub
inc
xor
and
clc
lcall
and
jge
xlat
aas
pop
mov
dec
cmc
or
gs
sahf
mov
pop
xchg
imul
add
cmc
shr
pop
arpl
mov
push
push
jle
movsl
xor
adc
adc
lahf
pop
call
xchg
add
xchg
inc
ds
mov
or
add
and
ds
jo
mov
xorl
lcall
stos
out
cmp
out
xor
or
xchg
popa
dec
clc
scas
inc
insl
out
pop
inc
add
dec
mov
and
pop
or
lods
popa
lods
xorb
push
mov
pop
not
or
or
jp
bound
pop
mov
stos
add
testl
cltd
cmp
xchg
and
pushf
lea
stc
loopne
aad
xor
cltd
xchg
add
push
mov
or
add
xchg
stos
or
shll
push
sbb
push
icebp
dec
addl
mov
inc
cmpl
ret
mov
push
outsl
jg
mov
or
jge
int3
or
mov
dec
sub
cltd
shlb
mov
xchg
mov
jo
rcll
lcall
mov
mov
andl
jo
repz
loope
inc
ret
sub
cmp
scas
sarb
and
test
mov
adc
imul
mull
mov
or
std
out
fstpt
jae
mov
dec
jle
divps
xchg
mov
push
vpshufb
out
and
scas
inc
int
out
call
dec
ljmp
rcrl
pop
pop
call
aaa
rol
adc
ficomps
dec
daa
push
es
scas
xchg
movsb
jg
sub
mov
pushf
popf
sti
les
movsb
pop
jl
call
jecxz
enter
inc
test
mov
stos
sub
and
cli
jne
fsubp
sub
jb
lret
fistpll
icebp
stos
jg
fistps
aas
scas
je
in
fs
lods
stos
pop
add
lcall
stos
in
stc
outsl
sbb
xchg
adc
jb
sbb
stc
inc
es
push
mov
cmpsl
inc
sbb
outsl
in
lods
je
xor
stc
fwait
out
jo
mov
and
adc
sbb
addr16
lock
jmp
mov
gs
pop
mov
push
inc
test
jbe
adc
pop
clc
cwtl
add
lods
pushl
xor
scas
scas
mov
fsts
inc
sarl
inc
divl
add
jns
das
test
mov
add
xchg
push
xchg
scas
dec
sbbb
inc
mov
sub
popf
xchg
mov
inc
fwait
add
xchg
xor
jae
stos
iret
cmp
js
add
sti
jnp
stos
pop
dec
xchg
cmp
pop
in
xchg
mov
gs
add
xchg
arpl
fsubr
fidivrl
dec
roll
popf
shl
mov
sbb
ss
sub
dec
push
scas
test
je
push
mov
cmp
sub
fisubs
out
js
adcb
cmp
mov
ss
into
shrl
in
arpl
push
adc
movsb
test
clc
cmp
insl
loopne
add
inc
mov
xor
push
jmp
dec
and
xor
pop
stc
in
mov
add
cmc
cli
mov
fmulp
jae
mov
sbb
pop
push
jmp
jno
movsb
pop
mov
loop
xor
adc
push
pop
ret
mov
aad
test
loope
mov
sub
fbstp
cwtl
add
push
ret
aam
lods
adc
ficomps
dec
adc
mov
mov
dec
xor
push
mov
lods
ret
sub
aam
xor
xor
mov
inc
lods
aas
or
push
rorl
mov
xchg
inc
pop
dec
mov
add
push
mov
test
lods
sbb
dec
shrb
outsb
int
or
mov
sbb
cli
add
xchg
stos
push
loop
jp
in
jmp
mov
cmp
hlt
iret
icebp
add
add
inc
lods
notb
mov
call
cli
mov
pop
pop
push
vucomisd
lods
int3
sub
or
sti
or
popa
add
adcl
shrb
inc
cltd
sbb
mov
inc
jbe
xchg
mov
loopne
fistl
mov
adc
adc
popa
and
dec
hlt
fcoms
xchg
push
sub
pop
mov
ds
xchg
mov
leave
loope
out
dec
shll
or
shr
mov
xchg
sar
pop
repz
xor
push
fstpl
jae
testb
xor
sbb
mov
shrb
outsl
xchg
lock
push
mov
pop
xchg
outsl
imul
aam
mov
pop
inc
cmp
fcomp
jmp
push
xor
push
stos
adc
outsl
xor
test
repnz
scas
sub
push
jp
push
das
iret
push
inc
jne
shll
fisttps
loopne
pop
inc
pop
adc
cld
dec
aas
dec
cmpsb
loope
es
push
and
cmp
or
jecxz
adc
lock
mov
xor
jmp
hlt
add
jne
push
xchg
ds
lahf
and
gs
jmp
xchg
stc
lods
lock
sbb
pushl
mov
inc
jno
shlb
dec
stos
dec
push
add
fcompl
and
add
push
cmpsl
jmp
jae
jge
mov
pop
mov
adc
jg
jmp
ror
jg
aas
mov
sbb
dec
sarl
shlb
fisubl
divl
movsb
dec
or
mov
push
lcall
out
mov
int
test
dec
fidivrs
cli
xor
cmpsb
jae
jge
sub
imul
shrl
xlat
fwait
or
sub
shll
push
pop
jg
call
in
dec
cmp
or
cld
xchg
stos
into
jge
pusha
push
pusha
dec
jg
mul
sub
mov
sub
rolb
jbe
ret
cmp
scas
xchg
imul
jbe
fsub
popf
divl
dec
pop
adc
and
test
movb
std
push
out
cmp
lret
cmp
stos
xchg
jo
inc
callw
xrelease
lcall
adc
sub
fisubl
out
mov
adc
fs
xor
sub
hlt
jle
imul
out
and
mov
pusha
dec
add
inc
mov
mov
dec
movsb
xchg
lods
gs
mov
push
adc
mov
aaa
stc
mov
adc
ds
vpsrld
test
jns
js
out
xor
fistl
push
lret
sub
test
or
shll
jle
add
aaa
adc
outsl
ds
dec
mov
xchg
and
leave
dec
cs
jnp
stc
lret
bnd
xor
punpckhbw
mov
sahf
push
sbb
stos
add
ljmp
test
lods
repz
or
push
pop
pop
cli
mov
outsl
dec
rcll
dec
mov
adc
in
cmp
add
push
aam
in
jl
into
fwait
loopne
roll
xlat
loopne
out
cmp
mov
jb
sbb
cli
mov
call
bound
inc
lods
nop
lea
add
dec
sub
add
and
xor
fldl
ret
xor
xlat
sub
or
stc
call
fcomps
or
dec
data16
mov
test
imul
push
mov
xor
xchg
xchg
pushl
fs
sub
out
inc
xor
cmp
xorl
fsub
ret
and
push
je
mov
xchg
sub
and
int
xchg
mov
mov
add
dec
and
add
mov
sbb
paddsw
dec
fwait
loope
pop
lea
sbb
imull
lret
cmovge
xor
outsb
jae
outsl
mov
mov
or
xchg
cwtl
xor
movb
ja
add
divb
sub
mov
jmp
pop
es
nop
mov
mov
push
mov
daa
and
loop
mov
jne
scas
push
bound
adc
and
ja
or
popa
shr
xchg
pop
mov
mov
and
add
xor
xor
mov
clc
pop
dec
shr
jl
add
pop
cmp
mov
cmp
out
fldenv
mov
out
mov
mov
scas
sub
dec
shlb
cmp
out
dec
outsl
les
push
loope
inc
adc
add
jnp
out
scas
mov
inc
loop
fldcw
adc
jl
sbb
sahf
pop
std
fwait
ljmp
rcrb
push
sub
inc
in
in
xbegin
aad
sub
push
adc
and
fdivr
jne
adc
and
mov
sahf
inc
pushf
mov
add
xchg
icebp
cltd
fsubs
and
pop
popa
adc
adc
filds
fildl
add
insb
pop
sbb
mov
addr16
inc
pushf
dec
enter
sub
pop
jmp
mov
or
lahf
pusha
dec
xor
scas
mov
das
arpl
sub
ror
push
movsl
pop
add
and
jbe
ljmp
jbe
pop
insl
push
dec
mov
dec
pop
push
xchg
mov
loop
jle
sbb
jne
fists
shlb
or
jg
out
pop
jb
jp
and
jno
mov
add
jbe
fs
lret
notb
or
mov
jno
push
ljmp
cmp
rcrl
je
cld
notb
sahf
inc
mov
and
adc
jmp
subl
out
cli
xor
adc
adc
and
into
out
add
jg
pop
int3
rcl
lds
dec
jne
arpl
adc
add
dec
jae
mov
push
pop
xor
push
xor
shrl
cmpsl
xchg
inc
jne
xchg
add
stos
push
fwait
sti
stos
sub
mov
in
jmp
and
mov
js
add
push
ds
inc
and
push
mov
xor
cld
push
sub
hlt
int
or
or
test
xchg
fisubs
in
or
ljmp
cmpsb
mov
cmp
loopne
fldcw
mov
cld
dec
or
sbb
ffree
or
lods
jl
cld
mov
mov
fstl
scas
sbb
jle
mov
inc
push
das
add
lds
test
jne
pop
push
add
jle
dec
or
pop
movl
cmpsb
popa
lock
xlat
mov
inc
stos
leave
push
js
lcall
movsl
movsl
xchg
inc
sahf
mov
imul
roll
or
pushf
imul
xchg
inc
pop
out
aad
lret
fsubrs
in
sub
and
icebp
xchg
xchg
mov
fstpt
les
dec
jae
loope
in
cmp
aam
push
es
inc
sti
mov
aas
xchg
jecxz
xchg
xchg
lea
rorb
mov
push
lods
les
cwtl
rorl
add
cmp
ss
sbb
loope
and
ss
mov
and
pop
cmp
xor
out
insl
fistpl
sti
in
push
cmpsl
aaa
inc
into
xor
ljmp
jo
mov
sub
stos
sbb
and
lret
idivl
jecxz
icebp
aaa
out
mov
lods
aas
cmp
shl
dec
popf
aam
adc
push
jne
or
or
push
xor
pop
inc
lahf
loop
ret
mov
mov
fwait
mov
jb
aad
iret
mov
out
dec
lock
mov
lret
push
adc
pusha
fwait
adc
ss
mov
call
mov
mov
pause
mov
pop
into
sbb
data16
enter
xlat
push
pop
andl
sbb
mov
pop
fs
je
out
leave
jbe
cltd
fcoml
fwait
jne
insl
fstl
or
push
adc
movsl
dec
pop
pop
mov
mov
or
bnd
scas
popa
push
fidivrs
cmc
pop
xchg
push
push
test
ss
loope
aam
fisubrl
pop
sarl
out
add
pop
push
adc
sub
adc
jo
rolb
lahf
cwtl
cs
push
shlb
jnp
pop
jae
addb
xchg
out
pop
xchg
mov
push
pop
add
dec
into
cmpl
mov
mov
xchg
add
aam
mov
sbb
xchg
dec
xchg
dec
pop
call
lret
imul
mov
jo
push
or
movsl
pop
aas
jg
loop
lods
jecxz
xchg
sbb
lds
lock
push
in
pop
fucomp
pop
gs
push
pop
mov
insl
or
add
cmp
das
lods
adc
inc
popf
lret
lcall
pop
push
ja
jb
xchg
mov
adc
mov
add
aaa
pop
mov
loope
fs
pop
insb
cwtl
ljmp
outsl
movsl
add
cmc
mov
cltd
sbb
cli
jbe
mov
in
inc
adc
xchg
fwait
imul
ss
in
mov
mov
sbb
daa
sbb
sbb
test
inc
pop
testb
cmp
in
cmpsb
and
fdivrs
subb
rorb
and
bound
xchg
and
cmpsl
sub
fdivs
repnz
xor
mov
push
mov
inc
pop
jecxz
les
mov
inc
add
lea
push
cld
test
bound
loop
xchg
mov
es
inc
negl
insb
call
cmp
js
cmpb
ret
leave
cld
mov
jns
shll
arpl
in
dec
cld
pop
or
push
cs
jb
jge
hlt
jno
js
out
cmc
ljmp
out
das
inc
sub
cmpl
jmp
fcomip
cmp
roll
nop
mov
fcmovnb
cmp
pop
fbld
stos
pop
cltd
mov
sbb
sub
jno
mov
sbb
push
xchg
aam
adc
ja
jnp
fiadds
cld
mov
cmp
cli
cmpsl
outsb
testb
add
pop
sbb
mov
arpl
push
adc
mov
jb
and
lcall
sbb
and
and
jg
aaa
push
rclb
inc
out
inc
push
and
pop
or
adc
or
ss
or
inc
xchg
mov
mov
push
add
jg
mov
pop
pop
mov
mov
adc
sbb
and
aam
push
pop
stc
bound
rcrb
lret
sub
sbb
push
adc
shll
lds
mov
mov
add
pop
pop
mov
sub
lcall
into
in
iret
loopne
rcl
jbe
jno
into
pop
sub
pop
in
pop
cmc
push
out
dec
mov
xor
jl
mov
sbb
mov
je
mov
jne
ret
xor
lahf
cltd
ret
mov
lahf
jmp
cmp
fildl
inc
xchg
jns
mov
mov
mov
scas
add
jp
je
dec
dec
sarb
jns
aam
add
dec
push
push
dec
inc
stos
push
aam
add
sub
adc
stos
int
dec
sbb
call
dec
scas
jns
lock
add
dec
fwait
sub
add
adc
jo
packssdw
bound
push
cmp
aaa
scas
lret
nop
mov
test
mov
pop
out
jo
push
rcl
in
mov
arpl
push
lea
cmc
cmpsl
ret
jecxz
les
aaa
cltd
pop
ss
sarb
add
in
cmp
scas
xor
stc
addb
cmp
or
push
clc
xchg
mov
arpl
push
pusha
push
int
mov
popf
push
or
test
xor
cmp
in
sbb
push
sub
out
jns
add
cltd
xchg
and
xchg
mov
mov
xor
xchg
repz
push
mov
and
rclb
cli
and
sub
mov
pop
out
xchg
sbb
aaa
pushf
adc
and
bound
loopne
and
sub
cld
add
mov
outsl
pop
inc
add
and
or
loopne
mov
xchg
cmp
sub
sub
inc
or
cmp
add
enter
pop
sub
jne
mov
lods
jo
aad
xchg
loope,pn
add
xchg
mov
mov
inc
rcr
pop
push
mov
adc
push
sbb
jae
jle
les
out
mov
bound
ljmp
mov
mov
jae
mov
inc
adc
test
mov
scas
lds
and
cmc
psrad
cmp
push
in
aas
out
repz
xor
mov
mov
push
sub
js
fiadds
xor
bound
and
pop
or
bound
mov
xchg
push
lds
mov
mov
ficomps
loopne
lret
push
subl
xchg
cmp
xchg
lahf
push
cwtl
outsl
insb
addb
out
or
dec
into
xlat
insb
call
add
xor
test
pop
mov
cmpsl
mov
push
jne
mov
sbb
lret
sub
lcall
adc
rclb
mov
jg
les
jne
sbb
adc
mov
push
jo
lret
xchg
loopne
add
mov
imul
test
loopne
scas
xor
fidivrs
fadd
or
lds
jle
mov
adc
or
lods
dec
mov
mov
adc
mov
cmp
xchg
push
sub
into
xor
pop
pcmpeqb
lret
push
pop
dec
das
xor
sbb
lock
xchg
rolb
stos
outsb
scas
sub
jno
mov
jge
les
xchg
dec
clc
push
pop
xchg
pusha
push
inc
ret
call
add
cltd
andb
popl
aas
bound
sti
inc
enter
jl
inc
inc
int
pop
pop
cmpl
sub
add
push
add
sub
adcb
sub
push
mov
sub
mov
or
pop
fsubr
bound
adc
das
cmp
sub
push
int3
mov
insl
xchg
mov
or
scas
lods
nop
adc
icebp
sbb
jno
pop
sub
sbb
adc
xor
sar
lret
and
ss
adc
fbld
fsub
mov
or
or
stos
push
bound
sbb
int3
jle
xor
pop
sahf
popf
xor
pop
xchg
fnstcw
dec
mov
sbb
stos
add
jae
xor
arpl
sub
xchg
fimuls
adc
data16
shrl
jle
jle
rcr
adc
movsbl
push
mov
cmp
fwait
inc
jmp
daa
xor
jmp
nop
inc
fdivs
add
clc
mov
jno
push
stos
mov
add
ret
mov
xchg
adc
rorb
xor
cmpl
dec
pop
cmp
leave
cmp
dec
fdivr
out
leave
mov
lods
imulb
cltd
fnstenv
mov
mov
jp
gs
adc
xchg
pop
cmp
mov
xor
mov
arpl
pushf
mov
das
xchg
fnsave
bound
inc
inc
inc
dec
push
or
enter
lret
mov
jo
movsb
scas
mov
es
jp
dec
mov
dec
jp
or
xor
adc
ljmp
bound
ret
dec
xor
xchg
loope
movsb
sbb
push
pop
cmp
inc
mov
mov
and
inc
call
nop
sub
ja
into
ret
adc
add
inc
jge
xor
das
ret
fdivr
push
bound
test
sub
mov
call
pop
notb
sub
scas
sbb
nop
push
insb
popa
push
dec
fisubl
sti
stos
cltd
xchg
and
subb
mov
insl
pop
pop
cli
jl
jg
mov
pop
and
hlt
je
sbb
out
sub
call
cmp
ljmp
mov
pop
mov
cmpsb
in
push
lret
mov
pop
fistl
pop
add
pop
stos
divl
insb
pop
xchg
mov
jns
leave
push
lcall
dec
outsl
push
adc
dec
shl
xchg
int3
sti
jno
add
in
add
mov
or
jg
sbb
aam
pop
dec
pop
cmp
jns
add
ret
hlt
cltd
xchg
jno
add
cmp
or
xor
inc
fdivrs
mov
push
pop
and
add
es
xchg
and
mov
je
add
std
jno
pop
or
or
cmp
pop
ret
jo
xorl
jp
pop
in
icebp
mov
xchg
aad
jbe
mov
mov
cmp
push
into
in
jne
aaa
mov
jmp
sbb
xor
xor
push
enter
cmc
ljmp
and
in
insb
dec
js
negl
jp
stos
add
add
mov
mov
push
inc
int
dec
imul
pushf
cli
add
pop
dec
decb
mov
pop
fs
jge
sbb
mov
ret
mov
pop
shll
jo
movsl
mov
add
les
add
jne
dec
test
pop
inc
scas
pmuludq
fwait
scas
push
mov
sub
popf
hlt
xor
add
add
or
xor
ds
mov
scas
stos
cmp
iret
adc
inc
stos
loope
push
ss
ret
dec
rcrl
jp
push
fs
sbb
dec
dec
cmp
push
fidivs
push
arpl
ret
push
jecxz
inc
sbbl
and
lahf
push
sbb
inc
mov
xchg
movsb
sub
std
bound
push
or
push
das
loope
sbb
clc
in
inc
clc
sub
dec
ljmp
pop
xchg
sbb
cmc
mov
repnz
arpl
dec
ret
xor
fsubl
cmp
mov
sbb
sub
sbb
in
sub
inc
push
or
loopne
sbb
push
jae
iret
jb
imul
shlb
and
lds
xchg
rol
or
pop
movsb
mov
pop
xchg
mov
stos
fcmovbe
lahf
cmp
std
dec
stc
rorl
outsl
frstor
and
popa
mov
xchg
xchg
movsb
fwait
outsb
push
push
iret
or
imul
mov
adc
mov
xorl
insl
fstpl
sub
pushf
xchg
cmc
cmp
mov
push
ret
lcall
sub
cmc
cmpsb
xor
inc
xlat
fisttps
sarb
incl
fdivrs
xchg
add
arpl
scas
jns
inc
jno
add
or
mov
shlb
mov
mov
dec
push
pop
popf
xchg
dec
and
data16
push
mov
and
dec
push
xchg
add
mov
andl
inc
mov
add
lret
push
out
fucomp
insl
out
jmp
xor
ficompl
test
fldt
pop
sbb
pushf
xchg
adc
xor
outsb
cmp
jge
xchg
ja
mov
insb
fidivrs
fsubs
nop
aas
xor
xor
xchg
push
xor
repz
hlt
pop
xchg
decb
add
xor
daa
fadds
in
rclb
lcall
add
out
cwtl
jp
push
mov
xchg
push
popf
into
jp
arpl
imul
mov
cmpsb
fsubs
xor
add
dec
xchg
call
adc
xor
adc
mov
or
rcll
mov
add
btr
xor
sarb
jge
scas
and
insb
dec
mov
mulb
leave
hlt
sub
ja
pop
insl
xchg
pop
mov
insl
xchg
push
and
sbb
pop
jo
adc
jns
jmp
push
mov
mov
push
sahf
inc
xchg
dec
dec
hlt
cmp
dec
ja
push
movsl
add
xchg
adcl
lds
pop
pop
inc
fistps
mov
adc
fisubl
test
fistl
ficompl
nop
mov
aad
pop
adc
xor
outsl
xor
inc
push
loop
outsl
mov
mov
push
mov
ja
or
adc
dec
ret
dec
push
testl
pop
push
push
dec
iret
mov
mov
sbb
lret
ds
dec
mov
cs
jo
cmp
sub
jecxz
lea
inc
pop
andb
out
push
daa
push
push
mov
jbe
mov
pop
sbbb
pop
inc
xor
cmpsb
jo
pop
popa
insb
fmuls
fists
mov
cmpsb
mov
jg
loop
fwait
repz
insl
fistpll
rorl
cmp
scas
push
out
or
xchg
loopne
mov
scas
cli
sub
jge
movsl
jo
or
mov
data16
inc
fildll
xchg
mov
mov
out
lods
mov
aam
jmp
pop
lods
lret
daa
outsb
adc
adc
scas
mov
xor
mov
aaa
xchg
addr16
pop
push
cld
aaa
dec
jecxz
dec
icebp
ss
sub
and
insl
adc
add
dec
fdivs
xor
in
mov
arpl
popa
or
int
movsb
dec
cmp
adc
test
xchg
int3
or
loop
sbb
push
add
test
scas
shr
inc
rclb
psubusw
inc
in
add
gs
mov
repnz
adc
xor
adc
lret
sub
mov
cmp
cmp
jge
mov
andb
xchg
cli
in
stos
push
je
ds
xchg
and
xor
fsubs
or
pop
jns
sbb
fstpt
fisttpll
jecxz
push
pop
xor
jb
int3
pop
enter
pop
sbb
mov
imul
inc
xorl
lock
test
jae
ljmp
iret
cli
das
or
adc
push
clc
sbb
mov
sub
sub
stos
movsl
repnz
clc
lret
ljmp
xor
das
mov
ljmp
ss
cmp
int
pop
movsl
xlat
inc
enter
mov
stc
sub
jmp
sbb
adc
leave
ret
pop
jg
dec
push
repnz
inc
xchg
pop
xchg
cld
dec
and
fmuls
movl
stc
bound
test
negw
and
cmpsb
pop
adc
divl
pop
add
fcoms
test
dec
push
push
or
dec
and
insb
add
repnz
loop
stc
sub
xor
stc
mov
xchg
dec
outsl
push
add
pop
out
cltd
adc
into
and
add
inc
mov
test
data16
imul
lret
pusha
jmp
jmp
fimuls
addr16
ret
lods
mov
loop
jnp
pop
push
xchg
pop
cmp
adc
pop
out
or
sub
mov
add
or
inc
lea
pop
or
xor
xchg
add
fsubs
daa
sub
or
xor
cld
and
inc
cmp
pop
xchg
pop
pop
fnstcw
pop
jge
and
fsubs
dec
push
lcall
cmp
rol
sti
ret
dec
mov
lcall
sub
imul
jmp
pop
fbstp
shlb
lods
mov
movsl
gs
jns
jo
ret
xor
imul
xor
stc
imul
lock
sbb
popf
fsincos
push
into
adc
jnp
cmp
sahf
cmp
fsubr
repz
cmp
test
inc
or
nop
or
je
fsts
mov
jle
ss
bound
jl
push
adc
loopne
inc
xchg
mov
inc
cmp
pop
or
aam
roll
adc
cmpsl
insb
icebp
pop
outsl
outsb
mov
pop
subl
dec
out
pop
sbb
dec
pop
aam
imul
xor
add
and
leave
icebp
rol
push
sbb
gs
mov
sub
std
mov
mov
aad
pop
sbbb
jae
sub
fsubl
dec
inc
out
xchg
pop
xchg
ret
scas
ja
daa
sti
xchg
sub
lea
sbb
sbb
ret
and
icebp
int3
out
xchg
shrl
iret
push
sub
popa
and
fsubrs
popa
or
int3
or
sahf
enter
mov
jns
xor
xor
leave
pop
xor
fwait
jae
lret
mov
and
popf
mov
inc
jo,pn
ss
test
adc
repz
push
adc
and
cltd
jge
rcll
es
out
das
xor
adc
rcl
aad
pop
sahf
add
mov
cmp
adc
outsb
inc
pusha
ja
and
mov
pop
into
shll
sarl
loope
push
pop
pop
inc
push
call
pop
fs
sbb
or
and
imul
subb
adc
jae
orl
mov
mov
mov
push
fcomps
mov
test
push
ror
iret
insb
out
mov
adc
sub
xchg
cltd
xchg
cltd
dec
popf
leave
sbb
cmp
sub
cmp
cmpsb
int3
add
jp
fwait
pop
imul
clc
ror
jecxz
jmp
cmp
add
pop
jl
sbb
arpl
mov
orb
xor
bound
cmp
test
jbe
dec
test
push
mov
repz
add
adc
fcomp
sub
inc
pop
loopne
scas
sub
in
mov
adc
jae
das
ficompl
push
ljmp
mov
out
test
fldt
std
idiv
nop
jg
add
cs
cmpsl
imul
sbb
or
add
call
es
rol
dec
lret
ss
mov
xchg
scas
insb
cmc
adc
pop
mov
push
dec
mov
and
push
gs
mov
mov
lock
test
xchg
xor
adc
xchg
xor
sbb
out
pop
mov
lret
shr
sbb
dec
push
sti
imul
jbe
pop
call
jnp
les
lret
pop
cmc
sbb
lock
sahf
pop
push
xor
inc
push
dec
cmc
pop
test
sbb
mov
mov
push
adc
ljmp
xlat
in
push
lea
ljmp
xchg
jnp
ret
loop
cmp
sbb
xchg
xor
pop
nop
or
insl
lock
fsubrs
mov
stc
inc
jp
int
in
ljmp
xor
cmp
je
add
push
lcall
sahf
jae
jbe
movsl
mov
inc
pop
fwait
sbb
enter
inc
xor
mov
movsl
push
xchg
push
popa
stos
jle
loop
leave
xor
stos
push
mov
in
and
ret
dec
or
dec
cs
mov
and
notl
mov
call
and
lahf
cli
xchg
mov
sbbb
push
and
shlb
pop
pop
pop
xchg
inc
mov
sub
sar
mov
mov
outsl
adc
push
push
in
stos
pop
stos
in
popa
out
xor
mov
pop
sarl
shlb
dec
cs
jno
cli
cmp
and
jl
test
lds
or
fbld
das
jne
xchg
les
mull
subb
into
xchg
jle
outsb
loope
push
das
mov
ds
fldl
test
jo
pop
in
push
rol
cs
pusha
imul
sub
sbb
xchg
xor
jmp
fiadds
mov
cmp
xor
jp
arpl
xor
xchg
outsl
loop
adc
add
ljmp
pop
dec
pop
ficoms
xor
jle
add
push
ret
jl
lret
push
lea
cmp
and
es
mov
lods
or
cld
pop
dec
jg
adc
out
in
push
dec
or
mov
jl
xchg
push
aam
jae
mov
inc
mov
push
test
enter
lret
in
push
cmpsl
test
inc
xadd
push
sub
xor
mov
ja
aaa
fcoms
inc
cmp
rcrl
inc
xor
jno
jp
or
sbb
mov
clc
cmpsb
mov
sub
adc
jp
push
pop
jae
setl
mov
ljmp
lds
xlat
cmp
fisttps
scas
and
add
lock
repnz
fcmovu
and
mov
add
dec
subb
ror
lock
xchg
fsubr
loope
jns
cltd
push
sbb
cmp
fs
popf
mov
mov
sub
jns
mov
aaa
rol
outsl
clc
lcall
jmp
adc
stos
mov
or
or
subl
jp
mov
inc
add
imul
xchg
outsl
cmpsl
and
les
mov
aas
or
fbstp
and
mov
and
stos
mov
enter
or
movsb
ret
je
es
push
mov
dec
mov
fcomps
sub
out
out
sbb
and
dec
mov
outsb
xorl
sti
sti
cmpsl
dec
jns
sub
jp
iret
nop
fmul
cmp
repz
and
daa
outsb
js
or
sub
jb
sub
arpl
lods
or
stos
mov
loop
xchg
cmpl
jl
lock
cmpsb
movsb
and
into
inc
js
pop
lcall
jg
std
push
and
jns
mov
testb
call
or
lret
sbb
inc
pushf
out
or
cmp
and
loop
and
int
mov
mov
incl
std
movaps
lret
out
push
mov
adc
add
and
adc
out
scas
imul
lret
fcmovnu
or
fcoms
daa
mov
sbb
daa
mov
push
pop
popf
inc
rcrb
mov
mov
mov
scas
add
int
out
mov
mov
int3
pop
das
les
fdivl
xchg
sbbl
dec
rorb
orb
subb
push
into
es
inc
dec
outsb
pop
or
ss
jle
sub
sub
test
jbe
in
ret
push
ss
or
adc
cmpsb
push
mov
movsb
pop
inc
cmp
flds
jle
stos
out
lock
loop
and
fisttpl
push
movsb
mov
outsb
les
cs
jg
int
scas
and
adc
data16
call
stc
add
fsts
sub
call
mov
hlt
scas
or
into
sbb
inc
nop
in
cmp
xor
push
adc
mov
div
fnstsw
xchg
jns
dec
stc
or
loopne
aas
or
test
add
or
mov
iret
lcall
test
out
inc
int3
xor
insb
mov
int
mov
adc
out
pusha
aad
inc
loop
xor
je
mov
fisubrs
mov
dec
cmp
adc
movsb
mov
push
bound
dec
jo
mov
repnz
sub
lret
add
mov
jo
ss
jecxz
mov
clc
adc
fisubl
test
lods
sbb
jp
ret
ret
stc
mov
inc
pop
lcall
loopne
add
test
fstpl
push
aas
xor
movsl
pop
pop
popa
xchg
cmpsb
xchg
pushf
out
lahf
dec
lret
jne
aas
sub
push
push
inc
adc
xor
scas
in
xchg
mov
cmc
ret
cmpl
insb
add
and
std
mov
mov
cld
jb
xchg
pop
lock
add
mov
cld
sbb
in
pop
mov
divb
cld
out
or
add
mov
hlt
xor
dec
lea
add
xchg
add
mov
adc
dec
cmp
xor
shr
cmp
jbe
add
mov
xchg
mov
insb
mov
pop
push
mov
pop
popf
mov
and
mov
sahf
add
xchg
jbe
dec
sbb
scas
lret
lea
inc
into
dec
mov
add
jns
cli
cmp
stos
lret
mov
loopne
mov
loope
cmc
in
xchg
daa
in
xor
mov
out
jl
imul
and
cmp
ficoms
sahf
push
clc
cmp
addb
add
and
in
xor
pop
cmp
pop
cmp
jle
dec
clc
pop
adc
andl
pop
call
loopne
stos
aaa
xlat
inc
repnz
sti
aas
or
xor
icebp
data16
in
lret
xchg
xchg
out
sahf
pop
cmpsl
jae
ljmp
push
push
pop
pusha
add
dec
xchg
loopne
lea
inc
enter
adc
lods
ds
inc
jmp
sti
mov
shrb
nop
repnz
icebp
negb
xor
push
rclb
lods
xor
inc
adc
cmpsl
sbb
data16
push
fcomps
mov
imul
fstpl
mov
push
repz
dec
addr16
xchg
or
push
lret
out
idiv
cmp
or
add
pop
cmp
loop
xchg
hlt
popa
or
and
insb
push
pop
adc
cwtl
push
in
daa
cmp
push
jno
das
and
pop
inc
dec
dec
pop
cmc
lret
outsl
mov
mov
test
xchg
add
icebp
add
dec
mov
int
mov
sbb
mov
inc
push
adc
inc
stos
push
fbld
or
iret
dec
test
cmp
inc
adc
stc
cmc
aas
adc
dec
ret
iret
pop
mov
pop
imul
push
and
stos
pop
dec
xchg
pop
cmp
mov
push
lret
lret
in
test
bound
pop
mov
into
js
jo
inc
shl
xchg
mov
mov
insb
adc
inc
or
das
and
lahf
xor
dec
push
in
test
xchg
add
dec
xchg
movsb
or
sub
dec
push
add
jb
add
testl
jne
sub
xchg
cmp
inc
lods
mov
or
sarb
in
aas
xlat
stc
icebp
xchg
mov
lcall
xor
dec
jg
shl
mov
jge
and
arpl
fsubs
add
std
cmc
dec
push
pop
stos
je
dec
lret
mov
loope
inc
ret
jg
lcall
dec
sbb
into
addr16
cwtl
pop
or
test
lock
call
in
lds
test
inc
mov
or
in
xadd
sub
sub
jnp
stos
sbb
or
aam
movsl
xchg
in
shlb
movsl
popa
ja
out
insl
loope
insb
push
sub
dec
jl
mov
adc
mov
aad
repnz
or
sbb
cwtl
pop
repz
jne
pop
add
adc
out
mov
sbb
leave
dec
icebp
cmp
scas
xchg
or
lcall
and
xchg
pop
dec
incl
inc
pop
fistpll
jp
cmp
out
orl
stos
cmpl
iret
in
dec
repz
imul
gs
ret
sti
cmc
adc
cmp
ss
mov
mov
and
dec
clc
cmpsl
mov
mov
pop
imul
add
push
xchg
imul
xchg
int3
jg
push
orl
icebp
rcl
pushf
movsl
adc
sub
xlat
adc
xchg
out
sbb
out
xchg
push
shrl
cmp
shl
je
mov
aad
js
test
call
mov
lock
jecxz
dec
lahf
adcl
rol
and
jmp
mov
shll
enter
push
repnz
loop
push
dec
mov
xchg
xchg
mov
add
je
xorl
dec
push
adc
inc
mov
addr16
cld
adc
int3
ljmp
movsb
int3
xchg
sub
rcrl
pop
mov
mov
movsb
push
mov
push
xor
pop
or
cmp
jmp
call
jmp
movsl
pop
push
stc
les
push
aas
push
pop
lds
mov
in
sbb
cs
xor
cmc
push
adc
xchg
inc
out
dec
daa
mov
gs
adc
jb
test
adc
shll
dec
lcall
fwait
insb
mov
frstor
add
pop
jg
lret
mov
and
pop
inc
pop
ffreep
insl
call
or
ss
cmp
pop
rolb
xchg
sbb
js
dec
stos
sbb
adc
adc
in
js
filds
xorb
mov
push
cmp
push
dec
out
and
push
dec
iret
mov
push
xchg
xchg
inc
mov
pusha
sbb
es
ds
or
xor
sbb
adc
rolb
stos
push
mov
insb
pop
mov
jp
addr16
sbb
or
mov
sub
sub
inc
pusha
or
ds
test
cli
leave
stos
add
in
pop
sbb
aad
imul
pop
add
iret
pusha
rcrb
jno
sbb
jle
cltd
sub
fistpll
pusha
push
loopne
sbb
stc
dec
push
test
icebp
out
or
cmp
divb
loopne
pop
dec
subb
fldenv
pop
cmp
ljmp
adc
andl
test
int3
popa
daa
idiv
std
dec
leave
cli
xor
aam
cmpsb
or
mov
popa
aam
movsb
mov
fs
out
les
mov
xchg
inc
mov
fidivrl
mov
out
and
in
xor
test
and
xor
mov
xchg
daa
xorb
sahf
test
cmp
and
dec
add
push
dec
repz
adcb
stos
sub
test
jb
jp
dec
cmp
ret
lods
add
mov
fmuls
pop
movsb
xorl
movsl
addr16
cwtl
ja
jnp
popf
rcr
gs
sub
push
sahf
mov
and
mov
adc
or
pop
fldt
or
pusha
loope
movsb
adc
daa
sub
mov
inc
shrl
mov
shrl
pop
stc
in
push
jecxz
xor
dec
cld
push
fisubrl
cmpsb
repnz
das
in
insb
fisubrs
xchg
mov
jnp
rcr
mov
shll
mov
repz
repz
xor
dec
jae
les
out
push
push
mov
jno
fcompp
and
scas
add
sbb
dec
add
int
in
ret
add
test
dec
xchg
std
pushf
leave
repnz
repz
xchg
adc
add
mov
mov
mov
pop
cmp
ficoms
gs
rolb
sahf
sbb
movsl
add
inc
insl
ja
cli
push
imull
iret
fwait
clc
xor
bound
mov
mov
gs
fwait
adc
sub
jmp
xchg
fmulp
jo
lret
popf
push
lahf
dec
fmul
sbb
aad
call
push
and
out
sbb
pop
mov
dec
push
and
jle
mov
addb
test
test
lea
mov
shll
mov
js
inc
jo
push
int
or
mull
mov
xor
shrl
cmp
test
push
dec
mov
mov
je
lret
add
sub
push
out
into
xchg
and
cmp
popa
xchg
int
mov
icebp
dec
jne
rcl
les
mov
adc
test
pop
inc
mov
insb
mov
adc
xchg
dec
insb
inc
mov
inc
repnz
clc
or
movl
es
push
mov
call
aas
lret
pop
fidivl
iret
nop
loope
lods
cwtl
cwtl
in
lods
jno
and
push
into
mov
ret
push
in
xchg
sbb
movsb
adc
xor
adc
sbb
test
sub
jg
sbb
and
and
repz
mov
push
mov
push
clc
sahf
mov
lods
aam
sti
cmp
into
loop
or
jl
scas
pusha
std
sti
jae
call
jl
push
push
pop
adc
fnstsw
call
push
rcl
sbb
sbb
mov
repz
gs
sti
dec
xchg
xchg
push
push
daa
imul
cmp
js
add
insb
hlt
sarl
hlt
xchg
shr
or
fmuls
call
inc
mov
cli
sbb
insb
inc
clc
sub
int
pop
sub
lret
xchg
jecxz
dec
out
testb
pop
inc
imul
js
mov
push
xchg
test
mov
shll
shrl
test
xor
enter
sbb
pop
loop
fcoms
dec
js
stc
add
aad
fstp
jns
ret
sbb
xchg
stos
mov
cs
jmp
pop
add
sbb
adc
or
sbb
jns
sbb
push
divl
imul
fisubl
loop
popf
cli
insb
dec
imul
repz
lea
mov
scas
cltd
test
or
sbb
movsb
pop
mul
in
xchg
push
mov
stos
xor
inc
in
mov
dec
mov
ffreep
int
mov
cmp
mov
sub
ss
mov
mov
pop
sbb
arpl
push
add
jnp
jnp
rolb
icebp
cs
cmc
data16
enter
dec
sqrtps
mov
cli
ret
sbb
das
stos
sbb
add
scas
mov
push
mov
push
push
gs
call
inc
push
negb
or
notb
adc
adc
or
push
or
shll
mov
inc
push
cs
stos
insl
pop
leave
xchg
pop
hlt
into
jg
and
sbb
push
fsubr
mov
dec
mov
sub
jo
bound
int
dec
push
and
clc
ret
push
mov
aam
out
outsl
sub
sub
adc
fs
jmp
jnp
sub
adc
mov
xor
bound
mov
sub
xor
mov
xchg
out
sub
mov
dec
inc
outsb
in
loopne
jl
xchg
mov
lds
pop
inc
sub
push
and
ret
xchg
or
fiadds
push
lods
jae
mov
xchg
or
jbe
cmpsb
jge
sbb
mov
insb
fdiv
pop
fcomps
cmp
out
add
sarl
imul
mov
outsb
inc
fwait
movlps
ret
loope
dec
test
adc
mov
lods
in
pop
lods
in
dec
pop
sbb
das
sbbb
cmp
mov
dec
xor
ss
imul
loop
mov
fnsave
in
rolb
jnp
add
cmc
pushf
movsl
sub
out
dec
and
pop
sub
mov
sbb
data16
into
int
mov
and
outsb
push
in
or
movsl
shl
movsl
adc
hlt
outsl
loopne
inc
xchg
add
or
nop
mov
in
or
arpl
inc
and
fsubrl
aam
shll
mov
repz
cmpsb
out
enter
test
push
add
inc
sbb
mov
mov
imul
pop
ljmp
add
or
add
mov
adc
test
and
out
xor
cmpsb
jecxz
sub
sbb
push
xchg
dec
scas
mov
std
add
stos
mov
push
push
lret
pushf
loopne
ja
dec
mov
jecxz
add
imul
clc
xor
cli
inc
or
cmpsl
repnz
jns
jle
cmp
shl
mov
jge
adc
sti
push
sub
outsl
jl
mov
pop
xchg
into
pop
dec
into
sub
out
sbb
push
sub
dec
jo
in
mov
int
imul
addr16
and
jle
mov
mov
inc
sbb
or
sbb
inc
mov
push
xor
sti
and
std
adc
popf
dec
xchg
push
add
jp
es
movsb
ds
movsl
cmp
mov
popa
mov
cmp
loop
aas
test
imul
ss
mov
fsubrs
inc
and
or
or
jge
push
xchg
mov
out
andl
js
pop
and
sub
mov
pushf
pop
adc
mov
lock
and
add
imul
mov
ret
ljmp
jne
addl
adc
pop
add
lods
inc
loopne
sbb
or
push
lods
inc
das
xor
fsubrs
out
inc
jp
ficompl
and
fsubl
sub
dec
inc
sbb
and
int3
xchg
add
pusha
add
pop
lods
pop
int3
sahf
daa
or
test
xchg
pop
insl
cmc
or
cli
jl
dec
and
cs
out
leave
dec
out
shll
mov
rolb
mov
add
dec
or
sub
dec
sub
adc
jecxz
mov
lods
lods
sbb
push
scas
mov
lahf
or
mov
or
outsb
and
int3
shrb
mov
adc
rorl
jnp
pop
std
mov
fsubrl
adc
sbb
jge
pusha
push
jecxz
cld
leave
lcall
fcomps
pop
fs
lahf
loop
lahf
dec
aaa
mov
test
dec
hlt
lods
mov
int
nop
mov
stc
sub
enter
pop
les
xchg
pop
into
xchg
push
insl
jbe
pop
cmovo
push
ss
inc
jno
cld
loop
ljmp
dec
pushf
ficoms
and
fstps
add
test
pop
xchg
cmp
jp
mov
mov
jo
pop
inc
mov
inc
mov
jg
lock
sub
shr
mov
pop
call
daa
dec
sbb
cltd
mov
loopne
push
mov
mov
sub
shlb
idivl
clc
fucomi
and
repz
xchg
sbb
mov
lds
test
push
push
into
ret
stos
scas
mov
sub
pavgw
push
scas
mov
xchg
push
dec
loopne
jnp
repnz
mov
dec
xchg
test
mov
in
sbb
in
jbe
sub
pop
lea
outsb
pop
xor
xchg
repz
xor
pop
pop
movsb
lock
xor
cs
mov
inc
out
add
jecxz
dec
nop
out
push
ret
lods
aas
cmp
in
inc
fists
or
jmp
daa
xor
mov
mov
into
mov
mov
in
rcrb
movsl
aaa
mov
and
mov
imul
cmpsl
les
movsb
out
push
mov
fcmove
pop
aas
into
adc
mov
add
push
lret
out
pop
xor
shll
negl
loopne
icebp
xor
lods
and
push
loop
pop
push
mov
push
lods
shr
lds
iret
mov
out
sub
lahf
sub
pop
mov
jp
jg
or
enter
pop
xor
mov
inc
xor
movsb
rol
add
je
adc
jge
test
addr16
add
cmc
sbb
dec
dec
out
sbb
push
fisttpl
orl
jg
inc
data16
andl
jbe
sbb
xchg
sbb
dec
lds
cwtl
mov
lea
shll
fadds
mov
mov
adc
divps
xchg
xchg
add
hlt
inc
push
sarl
es
mov
xor
jle
push
fcomps
jge
mov
xor
xchg
test
lret
cltd
mov
pop
and
push
mov
dec
popf
dec
mov
addr16
bound
push
dec
bound
scas
movsb
sahf
xorb
insb
cwtl
mov
paddw
mov
in
std
punpckldq
imul
inc
xor
iret
adc
aad
imul
mov
sub
jmp
sbb
adc
adc
mov
mov
adc
stc
repz
mov
sahf
in
xchg
push
mov
sub
fcomps
mov
clc
pop
push
dec
push
sbb
into
mov
xchg
ret
inc
and
cmp
pop
shl
out
cmpsb
pop
cmp
xchg
mov
xor
xor
xchg
js
sahf
or
add
insl
shll
jecxz
lds
pop
out
mov
ss
outsl
fnstcw
mov
xchg
out
add
addr16
stc
jb
out
mov
jns
pop
sbb
adc
pop
ljmp
xchg
cs
rorl
in
xlat
adc
and
sub
out
test
repnz
push
fwait
gs
cltd
jmp
mov
popa
test
fcompl
ja
sub
adc
ret
xchg
push
dec
jne
loope
icebp
jecxz
inc
fstps
mov
fs
ds
divb
push
xchg
push
pop
mov
dec
je
shlb
dec
insl
jle
push
sbb
mov
jbe
sub
dec
pop
clc
adc
pop
add
sub
mov
fsubs
gs
mov
aam
stc
aas
add
sub
cs
and
xor
fidivl
push
arpl
pop
xor
push
pusha
mov
mov
mov
mov
add
xor
xor
jae
cs
pop
and
add
dec
ret
or
dec
rcll
shl
divb
int
pusha
or
and
inc
xlat
insb
insb
and
sbb
and
aad
push
cmp
imul
lret
cmp
loop
jmp
stos
dec
call
jmp
jne
ljmp
aad
iret
adc
mov
jo
inc
add
scas
push
jmp
scas
push
mov
fiadds
sub
and
iret
xchg
call
cmpsl
loop
lret
push
and
test
rcr
mov
imul
test
lahf
push
jmp
lock
inc
icebp
inc
sbb
mov
mov
sbbl
iret
xchg
mov
mul
mov
notb
mov
pop
and
int3
or
movsb
mov
sbbl
xchg
test
inc
test
push
jge
test
sub
jmp
popf
dec
outsl
mov
movb
push
push
jno
sub
mov
pop
cmpsb
int
enter
sbb
loopne
in
lahf
xchg
cmpsb
pop
imul
fucomip
icebp
dec
in
divb
jecxz
insb
mov
push
jno
sar
test
arpl
test
int3
outsb
dec
lahf
xchg
pop
jecxz
imul
sbb
push
cli
in
push
mov
jge
adcb
mov
adc
jecxz
mov
jnp
mov
movsb
movsb
pop
pop
out
aam
stos
xchg
icebp
std
pop
aas
shrl
or
inc
inc
mov
pop
inc
push
movsl
jae
xchg
add
out
leave
repz
addr16
mov
and
dec
jno
push
mov
mov
leave
cmp
in
cs
xlat
mov
pop
xchg
mov
icebp
shll
inc
mov
pop
inc
loope
jo
add
sub
cltd
add
xlat
cmp
jmp
sub
idivl
rcr
das
fisttps
xor
inc
xchg
hlt
notw
addb
cmpsb
adc
shrl
aad
mov
addr16
jmp
xchg
add
mov
push
andl
outsl
push
clc
sbbb
push
subb
cltd
cmpsb
xchg
cs
cmc
mov
sti
dec
push
pmaddwd
inc
out
iret
in
add
int3
and
ds
int3
dec
mov
fimull
call
mov
aam
out
iret
lcall
rolb
sub
outsl
inc
test
xor
out
add
add
sub
adc
shr
xlat
xacquire
rolb
jae
popa
lret
xor
sbb
jmp
aad
repnz
mov
int3
das
and
and
sahf
xchg
adc
loopne
nop
xchg
inc
hlt
mov
and
repnz
xchg
lcall
in
sti
fsts
xchg
pop
and
xor
inc
fcom
lds
mov
xchg
pop
xor
xorl
cwtl
cmp
or
inc
pusha
push
fimull
rcll
mov
mov
push
adc
int
sbb
xor
dec
cmp
xor
xorb
fistps
cli
testl
mov
decb
sub
push
rcrl
sbb
lods
xchg
mov
dec
fcomp
aad
aas
sub
jp
pop
jmp
push
out
insb
dec
enter
lcall
sbb
inc
in
out
mov
mov
mov
push
xchg
ret
push
mov
cld
add
pop
cmp
cwtl
sub
test
add
push
fst
ss
push
cli
std
mov
dec
mov
cmp
dec
loopne
xor
xor
mov
jb
faddp
std
inc
cmp
aas
cltd
xor
push
loop
or
pusha
jbe
testb
int
mov
repz
data16
movsb
cmp
pop
jl
sub
cwtl
add
sti
sub
pop
xchg
cltd
jg
arpl
in
shlb
sbbl
loopne
mov
mov
std
lcall
int3
mov
adc
cli
fstl
jg
repz
jnp
fdivrl
std
cmc
jl
cli
or
lret
mov
push
nop
add
adcl
mov
jo
cld
cmp
out
push
daa
xchg
loope
les
rcrw
xchg
fidivrs
ret
pop
dec
inc
cmp
sub
mov
push
mov
jb
sub
mov
push
add
test
adc
adc
inc
pop
or
or
cmpl
lods
rorl
xor
pop
jo,pn
out
mov
hlt
js
xchg
add
jmp
inc
cmp
mov
js
xlat
jo
pop
ret
dec
js
sbb
test
lcall
enter
test
cmp
popf
mov
dec
imul
in
jae
fildl
or
outsb
mov
pop
dec
test
xor
cmp
push
jge
mov
pop
in
jns
cmp
xor
fs
out
jbe
push
out
inc
mov
lds
dec
fcoml
lret
daa
and
addr16
sbb
popa
xchg
adc
jge
cltd
push
and
and
fwait
pusha
icebp
push
inc
leave
pop
inc
repnz
sbb
mov
xchg
int
add
mov
mov
ret
fcmovnb
imul
cmpsb
adc
sti
or
in
adc
xorb
cmpb
push
mov
sti
dec
xor
imul
and
clc
adc
bsr
imul
insb
mov
mov
and
dec
sbb
push
sub
mov
imul
sub
jb
aad
scas
arpl
sbb
jmp
xor
shrl
mov
andb
mov
ret
add
mov
inc
mov
xorl
add
adc
xor
mov
and
test
test
dec
adc
jne
int
lock
adc
pop
push
mov
data16
mov
pop
pop
cli
cmpsb
push
jae
xchg
test
mov
jns
dec
inc
xchg
sub
sbb
inc
scas
cmpsb
cltd
inc
pop
enter
push
push
cmp
stc
rorb
dec
or
pop
popf
mov
add
inc
sbb
test
fs
jg
das
nop
lahf
call
pop
pop
aaa
mov
push
and
xchg
push
and
jp
adc
xor
ret
pop
ljmp
popa
out
sbb
push
jg
and
cmpsb
jne
out
mov
or
mov
pop
out
lods
ficoms
cmp
imull
enter
xchg
jp
sub
xor
jp
xor
xor
xchg
ret
push
jmp
dec
cli
outsb
dec
popf
jmp
mov
pop
iret
loopne
pop
and
mov
inc
dec
clc
xchg
out
int
loope
sub
inc
and
cld
in
call
mov
lods
mov
push
aas
mov
cwtl
hlt
repnz
jecxz
and
iret
or
lcall
push
mov
daa
xchg
sub
inc
cmp
test
and
out
je,pn
insl
jl
call
lea
sub
sub
xor
mov
lods
dec
inc
into
outsb
or
and
push
jmp
out
dec
inc
dec
das
mov
mov
fistpll
mov
aaa
and
pusha
pushf
out
and
mov
sub
adc
std
lret
push
pop
in
push
aad
clc
push
jb
in
bound
sahf
pop
or
cmp
decb
je
inc
mov
and
arpl
cmpsb
or
clc
mov
mov
rcll
int3
or
mov
adc
cwtl
aam
mov
and
in
cltd
inc
push
pop
adc
out
mov
movsb
or
aam
lods
fstpt
jg
mov
inc
iret
cmc
dec
dec
fcoml
and
lock
fisttpl
arpl
pop
push
das
or
inc
cld
adc
add
xorl
fcmovnbe
sub
xchg
sbb
add
push
movsb
push
ja
fcmovnb
in
push
cmp
in
lods
dec
mov
les
loopne
imull
mov
adc
mov
add
mov
into
imul
sub
add
popa
push
daa
loope
adc
dec
loope
es
stos
popa
dec
int
sbb
adc
icebp
call
aam
je
addr16
jo
fwait
test
fsubp
fdivs
mov
decb
cmp
cmp
ret
sub
push
pushf
xor
jb
mov
cwtl
dec
push
aas
aas
decl
data16
ljmp
push
sub
mov
fbld
jge
pop
sbb
sbb
inc
mov
or
dec
repz
adc
cmpsb
xchg
inc
xchg
mov
mov
sub
add
and
cs
xchg
ds
inc
xchg
add
lds
aas
add
fs
pop
sub
mov
cmp
ljmp
xchg
pop
testl
add
movsl
into
aaa
or
mov
sbb
iret
pusha
jle
jbe
pop
loopne
xchg
push
stc
xor
mov
cmpl
or
cs
or
jle
mov
inc
int
push
pop
aad
clc
pushf
pop
or
das
pop
imul
movsl
ja
jb
lea
imul
stos
gs
jp
mov
xchg
mov
mov
mov
into
mov
icebp
pop
jmp
lds
inc
iret
add
pop
pop
and
into
sub
xchg
xor
mov
stos
std
in
sub
inc
aaa
bound
shll
pop
jb
dec
andl
or
cmp
jle
out
outsb
mov
lcall
xor
aad
pop
sarl
lods
jl
sub
inc
out
jbe
pop
subl
inc
add
sub
push
fiadds
test
test
bsf
ds
pushw
cmp
push
adc
movsl
dec
add
mov
mov
fnsave
jp
das
push
ficoms
fs
out
rclb
hlt
cmpsb
cltd
mov
adc
lahf
push
outsb
stos
dec
int
xor
xor
lret
jecxz
inc
xchg
int
test
hlt
int
dec
push
cli
lds
ffree
les
imul
sbbb
jg
movsl
imul
or
ljmp
push
inc
jns
in
xor
jg
fadd
out
iret
rcrl
nop
or
jecxz
xchg
movsb
xchg
stos
data16
xor
xor
dec
orb
pop
jmp
insb
sarl
repnz
push
mov
or
sahf
bound
test
popa
cmp
sub
xor
jno
cmp
hlt
pop
push
adc
stos
jle
lods
hlt
jne
xor
and
shll
and
add
xorb
out
dec
mov
iret
inc
shll
inc
leave
adc
lock
scas
xchg
jmp
inc
push
xor
cld
cmp
or
adc
mov
ja
lcall
mov
and
repnz
inc
hlt
stc
mov
xor
daa
adc
sbb
xchg
data16
push
adc
movl
mov
rcrb
or
dec
mov
std
pop
test
bound
xor
rolb
in
gs
adc
mov
inc
inc
and
mov
inc
cmp
iret
fcmovnb
sub
mov
inc
jp
inc
stc
mov
cmpsb
jg
jb
mov
pop
out
pop
cld
pop
aam
sbb
mov
fwait
movsl
shlb
lahf
sti
mov
or
sbb
cwtl
loopne,pt
push
mov
xor
lret
push
push
jge
push
fildll
mov
jmp
inc
loope
and
movsb
leave
mov
repz
add
in
mov
aad
das
cmp
out
outsb
push
mov
nop
or
into
scas
sahf
dec
add
loope
push
pop
aam
fists
add
adc
push
mov
call
movsl
push
xchg
pop
js
push
cmpsb
mov
jl
and
outsw
fisubrs
xchg
jecxz
roll
xor
mov
cmc
inc
roll
sbb
xorb
adc
ja
cs
fs
aad
adc
dec
cmp
cmp
pop
mov
int3
outsb
push
jb
add
pop
push
and
hlt
xor
adc
jge
ljmp
dec
jle
push
dec
add
mov
sub
lret
mov
sbb
xchg
call
xchg
testb
inc
and
jmp
pop
test
mov
out
sbb
lods
jg
push
mov
fnstenv
pop
or
pop
outsl
adc
sub
lods
js
mov
mov
into
cmc
xchg
sub
fsubs
shrb
mov
mov
in
int3
or
negb
sbb
ficompl
scas
xor
cmpsb
in
fsubp
push
bound
add
test
mov
fisubrs
into
je
cltd
fimull
std
test
test
push
xchg
xchg
hlt
aas
outsb
repz
push
jge
dec
mov
mov
mov
lret
out
movsl
mov
aaa
mov
cs
pop
jno
test
pop
mov
repz
in
cs
int3
xor
mov
mov
dec
xlat
scas
dec
jne
pop
sub
in
or
sub
mov
in
pop
xchg
lea
lods
adc
lcall
dec
sbb
lret
enter
mov
cmc
or
sbb
ss
xor
jae
int
jp
lods
cmpsl
push
xor
rcrl
lahf
xor
mov
mov
ret
stc
out
push
jge
loopne
sbb
repz
jmp
sub
mov
movsl
jae
mov
cli
bound
and
outsb
push
cli
dec
mov
je
inc
sbb
stc
dec
xchg
inc
dec
pop
in
lds
or
test
push
inc
into
adc
inc
sub
loopne
mov
jb
mov
loopne
fstps
push
mov
mov
stos
and
es
loope
sbb
das
mov
pop
mov
cmp
test
inc
lcall
push
cmp
and
rclb
pop
stos
inc
mov
lods
cld
jno
lahf
adc
xchg
dec
repz
fisubrs
pop
mov
aas
dec
mov
dec
adc
outsl
lock
add
xchg
addr16
or
pop
dec
push
int
lock
mov
push
xor
gs
popf
dec
stos
add
add
mov
pop
scas
shlb
add
dec
sbb
mov
shl
addl
xorl
mov
cwtl
xor
push
xor
pop
mov
lcall
mov
dec
pop
arpl
ja
add
mov
dec
and
clc
mov
adc
fsubrl
jnp
sahf
scas
test
add
popa
add
cmc
fwait
sbb
jne
fnstcw
add
mov
cltd
jbe
cli
and
xor
xor
adc
inc
hlt
add
push
push
xchg
adc
or
mov
enter
mov
push
mov
lret
pop
cmpsb
dec
test
adc
xchg
lods
cwtl
xchg
push
stc
inc
loope
mov
xor
int3
push
mov
and
inc
inc
dec
ljmp
xor
cmp
xchg
shlb
jmp
js
imulb
or
movsl
xchg
cmp
je
and
dec
and
mov
ja
jb
cltd
icebp
mov
lods
adc
test
mov
add
addb
and
inc
fldt
iret
sub
lock
movsl
subl
cmp
fbstp
xchg
mov
test
cmp
and
mov
cltd
xor
mov
push
pop
push
push
int
popf
adc
ljmp
outsl
pop
mov
sti
xchg
mov
cmp
push
or
leave
arpl
xchg
es
in
stc
movsl
mov
add
mov
fsubl
pop
in
xor
mov
ret
sbbl
out
negl
mov
xlat
jb
adc
xor
lods
aad
and
aad
negl
jecxz
dec
outsb
inc
int3
adc
ds
pop
inc
jmp
rolb
es
mov
scas
mov
mov
or
inc
or
out
imul
or
outsl
sbb
xchg
jge
dec
jmp
dec
ljmp
push
stc
mov
imul
into
mov
ret
pop
cmp
and
xchg
lock
xor
je
jns
xchg
dec
js
jle
mov
out
cmp
push
mov
mov
sbb
sub
aas
enter
test
cltd
pop
or
pop
imul
cmp
movsb
cli
xchg
int
lock
in
pop
ljmp
cmp
jne
xor
mov
and
adc
gs
and
jns
gs
adc
lahf
imul
or
mov
mov
mov
jg
sbb
dec
pop
mov
jne
or
and
mov
call
repnz
data16
mov
add
jne
xor
nop
cmp
or
pop
int
cmpsl
in
movsl
inc
inc
add
push
xor
mov
call
cmp
je
mov
push
xchg
jmp
int3
loop
inc
mov
int3
cmp
xor
push
ja
sbb
fiaddl
inc
dec
in
fsubr
push
neg
mov
push
sub
mov
mov
sub
lret
jge
idivb
inc
inc
rcr
and
movb
icebp
fisubs
cmp
adc
inc
cmp
lret
xchg
sbb
pop
xor
int
push
sbb
negb
jl
pop
stc
test
and
push
hlt
std
pop
xor
jg
dec
push
sub
fisttpl
gs
jp
pop
xor
jecxz
ds
push
daa
and
outsl
xchg
jl
mov
imul
mov
aas
fwait
push
push
insb
cmp
lret
rcll
out
mov
push
int
adc
mov
push
cmpsl
insl
loopne
jmp
lea
cmpsb
adc
jns
in
xchg
iret
push
lods
daa
sub
add
ss
xor
ljmp
sub
jge
dec
add
xor
addr16
pop
mov
add
aam
addr16
lahf
stos
mov
jo
add
clc
aad
mov
lret
add
daa
and
xchg
xchg
push
and
movsl
ss
push
lds
or
mov
cmpsb
divb
push
jae
in
inc
pop
imul
roll
cmp
cmpsl
movl
sub
ljmp
pusha
cltd
jle
pop
rcr
out
je
push
fucomi
je
xor
pop
ja
call
fsubl
inc
xchg
mov
adc
outsl
call
jne
adc
dec
adc
pop
adc
jp
cmp
pop
push
aaa
sub
test
bound
pop
call
inc
incl
inc
xor
fwait
js
xchg
cltd
fnsave
outsb
mov
test
fidivrs
lea
aam
push
aas
movsl
arpl
out
inc
push
cmp
xchg
sbb
test
ret
adc
pop
xchg
lret
or
lods
lea
aaa
pop
xor
jo
roll
stc
pop
jnp
cli
mov
arpl
fsubrl
pop
xor
jae
inc
mov
inc
pop
mov
pop
stos
jo
aam
add
xor
aad
or
cmp
mov
push
inc
xchg
xchg
pop
ret
mov
xchg
imul
daa
shrl
xchg
add
and
jge
mov
sbb
pusha
ljmp
pop
loop
jmp
cmp
lock
and
icebp
mov
lcall
fsub
inc
jns
test
rcll
or
dec
cmc
jnp
gs
cmp
pop
cmp
xor
or
lock
nop
jnp
mov
mov
and
pop
shl
push
in
in
cltd
xchg
aas
sbb
addr16
jg
je
lods
cwtl
arpl
loope
aaa
ljmp
mov
fs
lods
jge
jmp
mul
and
mov
push
loop
cmp
adc
push
shrl
fistps
std
and
mov
aaa
ds
jae
pop
ficoml
ja
repnz
mov
repz
dec
cltd
jo
pop
jg,pn
pop
or
sbb
mov
xchg
cld
lods
aad
add
dec
dec
pop
jae
aas
mov
add
dec
or
push
push
popa
pop
fnsave
xor
xor
scas
jb
push
sbb
aam
dec
xor
fcoms
int
cld
xor
aas
adc
shlb
repz
jle
sub
mov
sbb
pop
or
push
andb
sbb
imul
mov
movsb
std
push
mov
into
jnp
test
lahf
dec
xor
dec
stos
cmp
clc
pop
inc
lret
loopne
jp
adc
pop
mov
cld
int
lods
sub
fmul
packuswb
and
mov
jge
push
lods
shrb
add
xchg
clc
ret
adc
cmpsb
std
dec
fbld
jns
jb
sahf
aaa
icebp
pop
lret
push
inc
data16
shl
dec
mov
jp
into
jno
xchg
push
leave
sbb
cs
cmp
mov
out
mov
nop
shlb
out
ffreep
lret
fists
and
ret
cltd
mov
xchg
or
cmp
mov
mov
sub
loop
or
test
push
inc
sub
ds
push
jno
test
adc
inc
scas
fisttpll
aad
adc
xor
stc
cmpsb
adc
jb
bound
int
sahf
scas
lahf
xor
in
test
sub
addr16
inc
jle
adc
rorl
outsl
and
in
in
mov
ljmp
adc
pop
mov
in
nop
dec
jnp
scas
jmp
insl
stos
push
mov
jmp
push
add
mov
cmp
movsl
int
fdivrs
jne
xor
jmp
mov
or
adc
iret
f2xm1
sub
pop
sub
out
xchg
mov
hlt
test
test
sti
add
outsb
mov
sbb
mov
leave
mov
add
shll
adc
das
inc
rol
push
xchg
in
xchg
test
inc
cmpsl
mov
pop
adc
sub
pmuludq
test
cli
lea
popf
push
xlat
addr16
and
push
and
inc
and
ljmp
rorl
mov
mov
cmpsb
inc
nop
lret
clc
jbe
mov
cwtl
add
ud2
ret
lds
xchg
iret
mov
mov
xor
mov
xor
cld
loope
mov
pop
mov
mov
inc
pop
imul
jns
icebp
cmp
mov
fnstsw
dec
xor
cltd
add
stos
ds
fsubl
jne
add
lcall
lret
imul
cltd
test
aas
or
push
mov
sub
outsb
pop
mov
jecxz
pop
orb
icebp
mov
jnp
nop
cmpsl
sarb
aad
outsb
add
pop
mov
adc
add
mov
mov
push
mov
fbstp
pop
dec
out
xor
or
into
jb
pusha
ja
jnp
jb
push
sbb
mov
stos
shlb
call
dec
pop
ljmp
loope
call
outsb
imul
sbbl
test
pusha
cmp
mov
pop
clc
push
and
ja
inc
leave
sti
dec
mov
sub
sub
xor
lcall
test
jno
test
push
mov
sub
cmp
divl
pop
sbb
clc
pop
pusha
cmp
inc
insl
push
ret
mov
ret
fxch
add
lret
pusha
dec
mov
shr
fdivl
test
push
jbe
and
test
movsb
sub
arpl
enter
mov
je
out
pop
jb
repz
test
pop
loop
mov
das
jmp
cmp
adc
js
mov
xor
pop
sub
and
and
adc
pop
les
repnz
ret
adc
inc
xchg
fsubs
inc
mov
xor
fsts
inc
mov
jle
test
sub
xor
sub
ljmp
xchg
pop
fimuls
mov
jno
lods
xor
inc
or
stos
cwtl
inc
not
stos
push
or
xchg
and
jno
je
pop
je
cmp
pop
add
cmp
mov
mov
cmc
cmp
or
push
pushf
or
out
bound
push
clc
cmp
repnz
sub
enter
pop
into
pop
cld
xchg
lock
call
popa
iret
int3
push
mov
inc
test
dec
imul
xchg
ret
movsb
inc
sbb
repnz
sub
add
aam
mov
xor
les
test
ljmp
jp
dec
add
add
push
enter
push
xor
xchg
sub
fsts
ja
and
hlt
sbb
xor
enter
cwtl
daa
out
popa
add
mov
adc
scas
cmp
xchg
mov
jmp
push
push
xchg
jb
rorl
repnz
nop
insb
cmp
push
or
pop
adc
adc
cld
mov
jge
in
jge
add
scas
xchg
push
push
adc
mov
loope
hlt
mov
inc
pop
and
sub
testb
push
fisubrs
add
mov
sahf
lret
add
sti
inc
and
mov
stos
xor
fisubrs
aam
movb
mov
push
or
lea
cmpsb
cmp
sbb
xchg
int
xchg
add
xor
pop
in
clc
sti
pop
push
push
sub
sar
ficoml
or
mov
aaa
dec
jmp
lret
or
pop
test
mov
add
mov
cmp
sbb
dec
ret
cmp
xchg
sub
ds
jno
inc
test
fs
sbb
mov
jo
jp
aas
cmp
cmp
mov
shl
push
mov
inc
inc
js
add
sbb
scas
jg
xchg
fcomps
mov
lret
negb
das
hlt
decl
lods
xlat
jl
and
inc
icebp
jo
and
jle
fnstsw
cmpsb
fstps
out
shlb
idivl
cld
xchg
cmp
sub
cmp
into
sub
std
push
js
fdivs
adc
std
dec
push
and
dec
cmpsl
sub
cmp
xor
cmc
pop
mulb
jmp
jp
repnz
js
xchg
scas
frstor
mov
inc
mov
out
xchg
or
mov
sub
mov
hlt
stos
int3
and
pop
jno
fprem1
mov
in
and
add
mov
addl
fwait
in
add
mov
in
or
xchg
xor
or
stos
fmulp
sub
aad
dec
cs
adc
mov
dec
scas
fiadds
es
pop
mov
push
xchg
andb
movsl
inc
imul
inc
cmp
sub
mov
into
mov
andl
xor
adc
xbegin
lret
push
cld
mov
clc
sub
inc
aad
rorb
mov
scas
sbb
cmpsl
lret
adc
sub
adc
fisubs
divl
push
iret
out
mov
outsl
xor
fistl
pop
lods
cmp
leave
imul
test
mov
push
or
outsb
pop
xor
insl
ror
adc
shrl
pop
cmc
insl
js
icebp
jne
push
inc
sbb
and
dec
xchg
inc
jo
ret
clc
mov
and
hlt
push
pushf
in
xor
cmc
rorl
enter
in
dec
test
imul
lods
ja
dec
mov
pusha
movsb
push
xchg
in
aaa
ret
jo
push
inc
iret
inc
rcrl
mov
or
mov
cld
mov
xor
sbb
das
jbe
int
into
pop
pop
or
cmp
and
and
adc
xor
dec
mov
jge
loopne
or
leave
scas
cli
lret
cmp
cwtl
xchg
sbb
mov
jle
jbe
iret
rcl
movsl
in
push
icebp
lods
les
in
rcll
sub
jmp
inc
xchg
pop
sti
inc
pop
pop
test
out
xchg
shlb
add
test
xor
fsubrs
adcl
dec
int3
add
push
pop
arpl
mov
insl
iret
movsb
nop
imul
fwait
in
fsubp
incl
in
mov
test
std
inc
and
inc
dec
jmp
iret
add
inc
xchg
or
repz
xorb
sub
xor
lret
sub
int
into
insl
sbb
cmpb
or
popf
mull
xor
xchg
mov
add
orb
sub
sub
mov
push
xchg
mov
shrl
sahf
jb
mov
in
lock
dec
mov
mov
les
jne
push
pop
push
lods
je
fsubrp
inc
jo
mov
xchg
pop
andb
addb
daa
xor
xor
xchg
pop
enter
mov
test
add
fsubs
clc
repnz
xrstors
cmc
adc
movsb
lcall
leave
stc
daa
pop
and
or
push
sbb
pop
xchg
push
aam
mov
adc
loop
cmpb
nop
mov
dec
sbb
add
mov
xchg
jne
mov
sub
shrb
in
bound
test
fcoms
nopl
mov
test
dec
aas
mov
fildl
gs
adc
insb
mov
cwtl
mov
movsl
push
icebp
mov
lret
push
sub
and
shl
shrl
xchg
cmp
int3
mov
cmp
sbb
mov
adc
and
mov
adc
outsb
cmc
sar
or
sbb
insl
outsb
inc
int
shlb
push
cmp
mov
add
leave
xor
icebp
sub
pop
je
dec
das
out
xor
or
ja
insb
loope
xlat
call
pavgb
push
ret
popa
pop
or
pop
das
push
lods
test
add
push
add
jp
out
jmp
push
and
jno
pop
push
adc
iret
int3
jo
jne
adcl
inc
mov
sbb
aaa
les
cltd
pop
jne
cmp
out
jo
sub
insl
shl
xchg
nop
std
imul
push
inc
pop
pop
xor
pop
test
xchg
insl
sub
push
insb
and
xchg
mov
popf
pop
test
aaa
push
pop
push
xchg
arpl
fdivrp
rcrb
lods
cmc
sar
or
loope
scas
mov
pop
lea
inc
push
outsl
cmp
mulb
inc
aaa
gs
cmp
test
daa
inc
adc
in
lcallw
mov
sub
aam
dec
or
mov
sbb
jmp
pop
add
mov
mov
inc
rcl
push
idivl
enter
adc
das
lds
icebp
ret
push
xchg
pop
mov
mov
in
int
mov
dec
pop
jmp
sti
in
xor
jmp
inc
into
or
popf
xchg
in
hlt
cmc
lcall
cmpsb
or
mov
push
mov
fs
pop
mov
mov
sar
gs
repz
mov
ja
xchg
pop
sbb
test
jmp
adc
outsl
mov
push
sub
and
push
lret
mov
xchg
fsubrp
and
test
inc
cmp
add
jge
dec
jg
xchg
test
insb
je
adc
sbb
and
test
pop
out
mov
jge
mov
jae
ud2
adc
test
out
sti
inc
add
jno
movsl
mov
pop
lock
push
or
ja
pop
cmpb
cmp
stc
out
fs
hlt
cmpl
pop
xchg
aam
cmpsl
adc
inc
lods
jl
es
mov
jecxz
xchg
mov
mov
adc
jle
test
repz
pop
sahf
jne
out
stos
mov
into
and
movsb
cmpl
jne
das
out
or
dec
mov
lret
add
or
push
lock
cmp
movsl
cmp
xchg
dec
add
push
and
fs
mov
sub
fnstcw
mov
push
addl
andl
mov
test
repz
icebp
je
adc
ret
ds
xorl
dec
lock
fsubrs
jmp
in
sbb
push
cmc
inc
and
pushf
mov
int3
mov
shrl
fmul
inc
and
lret
sub
xor
push
jnp
xchg
or
insb
pop
add
add
xchg
arpl
cmp
lret
mov
mov
mov
xchg
or
dec
push
clc
stos
cmc
pushf
addb
mov
mulb
stos
out
shr
scas
lret
mov
sahf
mov
add
test
push
jne
sub
jno
push
scas
pop
pop
gs
cwtl
or
push
add
fisubrs
fldenv
cld
cmp
ret
cmc
push
dec
pop
outsl
cld
sub
out
lock
stc
pop
dec
nop
jno
divl
mov
lea
sbb
push
sub
int
aaa
mov
sbb
cs
xchg
movsb
inc
xor
pop
push
xchg
sarb
pop
xchg
cmp
test
out
cmp
add
dec
out
leave
ljmp
xor
push
into
sub
divl
aad
roll
cmp
pop
sub
mov
dec
divl
xor
push
sub
std
sbb
xor
inc
xchg
into
push
lock
mov
mov
dec
out
les
mov
jne
jnp
shll
aad
in
scas
stos
outsl
xchg
push
gs
leave
mov
push
shlb
stos
sub
iret
xchg
jb
mov
mov
mov
jo
aaa
aaa
cmp
in
pop
hlt
mov
push
adc
and
dec
outsb
mov
lds
add
jmp
test
std
push
jmp
xchg
dec
mov
jge
daa
pop
push
push
inc
mov
cmp
sbb
loop
push
lcall
lret
cmpsb
and
aam
ss
xchg
gs
push
int3
sub
pop
fsubl
pop
mov
in
test
xchg
jecxz
dec
xchg
push
xchg
ja
mov
pushf
and
jne
jge
out
dec
mov
push
dec
jmp
inc
addb
nop
jge
lods
jne
je
aad
lock
mov
and
dec
pusha
inc
cmc
cmp
jns
and
xlat
movsb
cmpsb
pop
mov
lock
lods
jnp
ficompl
add
adc
sbb
lcall
repnz
mov
or
leave
jb
mov
ds
jb
mov
out
les
stos
js
into
cmc
xchg
movsl
inc
ja
and
xchg
sub
lds
fadds
test
call
fwait
mov
out
sbb
jmp
imul
fldcw
aaa
dec
test
jbe
std
sub
push
lea
fidivrs
push
imul
mov
xor
dec
rolb
in
andl
cli
adc
pop
sbb
scas
cli
cmc
jae
push
sub
imul
stc
cs
mov
lcall
mov
gs
xor
fisubs
cmp
orb
sbb
mov
inc
out
sbb
pop
sub
or
xchg
jb
and
inc
jns
cmpsl
push
pop
fs
push
sub
adc
movsl
shll
lods
into
out
add
sbbl
inc
pop
gs
aaa
std
testl
mov
frstor
or
call
jns
aam
inc
xor
and
inc
sbb
das
and
int
xor
jmp
out
and
cs
incl
sub
rcll
clc
test
je
mov
leave
mov
mov
push
dec
icebp
das
aam
xor
mov
push
movl
jno
fdivrs
out
jg
lret
je
mov
sarl
cs
cmp
sarl
jl
scas
and
aas
dec
mov
xchg
jne
adc
cmp
mov
fmul
push
and
leave
int3
leave
sahf
mov
pushf
add
fcmovne
jo
mov
inc
inc
nop
add
add
mov
push
xor
es
inc
sub
dec
xchg
xchg
mov
ret
fistps
xchg
je
scas
cmpsb
jns
clc
inc
mov
dec
sub
sbb
jnp
lods
addr16
insl
jne
pop
jae
sbb
ja
aad
outsl
inc
sarl
stos
test
xor
lods
lods
jmp
mov
mov
inc
jae
push
addb
dec
mov
gs
movsb
in
sbb
add
jp
mov
lods
and
and
xlat
scas
dec
adc
fcomps
adc
lret
pop
js
stc
xchg
pop
dec
adc
push
xchg
iret
inc
mov
out
mov
mov
fstps
jae
in
lret
adc
mov
dec
push
dec
mov
aam
arpl
jnp
leave
popa
mov
rcll
subl
call
fisttpl
repnz
dec
or
shrl
push
lea
jmp
addr16
and
mov
jns
dec
popf
or
imull
shl
dec
nop
insl
inc
in
popa
andl
in
mov
xchg
mov
call
jmp
xchg
mov
push
outsb
sbbl
dec
sub
pop
or
lods
pushf
aad
mov
aas
mov
adc
cmpsl
xchg
shlb
add
adc
pop
push
out
repz
pop
sbb
add
inc
push
faddp
out
cmp
pushf
add
icebp
push
add
mov
add
clc
aaa
test
add
loop
loope
pushl
cmp
xchg
cs
mov
adc
jmp
xchg
push
in
push
mov
push
sbb
jb
adc
push
or
inc
mov
sub
lods
sub
jne
add
pop
divl
sbb
sahf
cmp
xlat
add
js
pop
cld
icebp
mov
add
mov
inc
cmp
mov
add
jns
jbe
call
in
clc
add
push
loopne
imul
std
movsl
sub
mov
mov
sti
jp
adc
adc
arpl
sub
jns
pop
dec
push
icebp
inc
or
je
test
fldl
pop
lcall
add
pop
lcall
mov
lea
xlat
mov
jle
stos
push
pop
data16
incb
jl
pop
add
sbb
popf
mov
cmc
adc
jmp
leave
rcrl
xor
gs
fdiv
sbb
jmp
mov
xchg
data16
xchg
adc
jmp
mov
inc
scas
push
sub
dec
jp
or
jno
sub
out
cs
mov
mov
mov
mov
hlt
push
shlb
and
push
orps
fcoms
lcall
mov
mov
stos
aas
pop
adc
js
jg
inc
push
jo
cld
daa
ja
xchg
aas
jns
xchg
dec
fs
aaa
xor
and
pop
iret
pop
aas
cs
call
pop
out
bound
mov
pop
adc
push
test
sbb
pop
arpl
add
in
jge
dec
cli
jbe
ret
test
leave
push
push
in
dec
inc
push
ds
lea
into
xchg
mov
lods
ljmp
mov
insl
jg
out
in
mov
pop
loope
inc
push
cmp
int
int
test
dec
and
inc
add
push
cli
fsubl
pusha
xor
dec
lock
pop
pop
xor
test
sbb
stos
mov
stos
jg
cmp
jmp
jmp
xor
test
mov
ja
incl
sub
call
jo
dec
rclb
mov
ljmp
aam
repnz
xor
addr16
pop
jg
sti
ljmp
and
out
jmp
mov
ror
push
decb
scas
and
repnz
pop
mov
mov
mov
cs
or
add
sub
sub
or
add
jecxz
sub
sti
add
sub
clc
jmp
jbe
dec
loop
xchg
lock
outsl
dec
loope
sub
dec
addr16
je
pop
jmp
in
andl
ljmp
sub
and
test
stos
addl
stos
popf
pop
jae
stc
and
sbb
cmc
ffree
mov
mov
pop
repnz
call
shl
mov
test
movsl
dec
mov
ret
xchg
scas
fwait
cmc
and
lods
jnp
pop
mov
xor
vdivss
push
addr16
cs
fcompl
xchg
jl
add
mov
mov
xchg
test
mov
adc
xchg
and
imul
push
xchg
mov
je
int3
cmp
or
add
pop
push
repnz
xor
adcb
push
and
daa
in
pop
loopne
mov
stos
sbb
mov
es
and
pop
outsb
cmp
jnp
xchg
inc
adc
pop
rorl
repz
pop
mov
jecxz
inc
push
dec
stc
sub
push
je
lods
js
jl
call
xor
movsl
andb
xor
rclb
out
adc
jg
adc
mov
cltd
insb
push
outsl
or
popf
inc
test
std
std
dec
sbb
jecxz
xor
ret
mov
fists
bound
xor
cmc
add
dec
fmuls
jae
cmp
pop
xorl
add
int
mov
inc
ss
shll
jne
outsl
pop
or
daa
cmp
push
jb
jno
aas
adc
out
and
in
cmp
sar
adc
cmp
push
or
repnz
sbb
adc
insb
fnstenv
sub
push
jmp
ss
xor
xor
popa
sbb
mov
movsb
mov
sub
fildll
xchg
sub
adc
or
out
mov
xchg
aas
xchg
sarb
and
mov
push
outsb
sahf
and
dec
out
xor
inc
and
sub
jbe
push
jb
jmp
aad
mov
mov
jp
hlt
rcll
outsl
cmc
xor
movsl
fistl
pop
lea
cli
loope
sub
dec
in
xor
add
dec
and
out
sahf
lahf
in
pop
mov
shlb
jb
push
xor
inc
dec
jo
xchg
rorl
or
and
ja
mov
push
mov
push
jne
rcrb
dec
outsb
fisubl
sbb
cmp
jl
ss
push
mov
mov
fadds
ja
pop
push
loopne
js
jnp
pusha
and
enter
push
cmpsb
jmp
cmpsl
xor
jl
push
das
inc
or
cwtl
dec
jmp
xchg
outsl
loope
or
outsl
xchg
xor
or
cltd
movsb
inc
xchg
stos
les
add
xchg
arpl
pop
xchg
inc
jmp
pop
mov
jnp
js
test
jg
popf
rorl
jp
push
jbe
push
jno
jecxz
fiadds
cmpsb
sarb
sub
jmp
push
mov
mov
jne
out
int3
sbb
xchg
lods
mov
add
sbb
inc
push
jns
sub
push
aas
push
loopne
xchg
push
orb
dec
inc
add
dec
jmp
inc
xor
dec
add
lahf
push
loop
adc
sti
sub
stos
dec
lcall
cmp
dec
orl
add
jmp
sbb
lret
add
arpl
dec
mov
mov
in
push
push
xchg
cld
rcrl
cli
dec
inc
jnp
push
sbb
data16
jmp
jge
cmp
cli
aam
movsl
rcrl
ss
int3
fimuls
cs
clc
push
rorb
orl
clc
out
add
insl
sbb
dec
or
loopne
mov
push
lods
jnp
xor
scas
bound
pop
addr16
and
in
or
loope
mov
jns
xchg
lods
pop
push
push
jmp
jno
aam
out
mov
rorb
xor
xor
test
inc
test
sub
and
stos
inc
push
dec
and
loop
fwait
pop
lds
and
inc
jmp
mov
rorb
mov
popf
cltd
cmpb
adc
sbb
stos
sahf
fmuls
js
out
test
cmp
nop
loop
loopne
loope
mov
ret
in
scas
xor
sti
pop
dec
setl
and
add
inc
add
stos
add
cs
iret
lea
repnz
cmpsb
ss
and
sbb
imul
std
xor
nop
movsl
scas
add
jne
icebp
out
lret
outsb
rcll
pop
push
dec
jg
pop
jb
cmpb
and
jge
in
jp
lcall
enter
add
sbb
xor
ret
shr
fsubs
int3
stos
pop
sbb
or
xor
sbb
jae
push
arpl
out
cmp
jmp
stos
push
dec
mov
mov
add
inc
rcll
es
pop
es
ljmp
cmp
bound
jo
fs
pushf
lea
or
xchg
jge
xchg
test
adc
xor
mov
and
mov
jae
cmp
dec
hlt
pop
add
hlt
xchg
movsb
push
popf
movsb
mov
mov
fwait
jnp
lods
rorl
es
mov
test
and
mov
data16
gs
mov
pushf
jne
enter
rolb
jge
test
js
pop
loopne
in
sbbl
sahf
ret
cwtl
sbb
jge
adc
jecxz
movntq
sub
aaa
dec
aam
inc
decb
or
lods
dec
fdivl
mov
jg
jo
lret
sbb
outsl
xorl
adc
add
mov
xlat
push
xchg
je
inc
in
in
pop
add
lock
into
adc
jne
cmp
sub
lret
mov
in
fistl
leave
mov
popa
lret
lret
xor
clc
inc
cmc
or
cli
movsb
icebp
fs
cmc
enter
divb
sbb
sbb
sub
mov
dec
inc
mov
dec
inc
fdivrs
orl
inc
ss
test
pop
lahf
fsts
out
dec
pop
je
setns
js
scas
inc
fs
mov
mov
sub
mov
push
mov
sub
mov
ss
mov
scas
jge
or
aas
jle
outsl
mov
push
sub
and
sar
pop
outsb
loopne
clc
stos
mov
and
icebp
iret
outsb
fs
and
push
dec
mov
xchg
pop
hlt
adc
dec
jno
push
cld
addl
mov
xor
mov
aam
push
or
fcomp
pushf
sbb
sti
push
popf
push
push
mov
mov
rcpps
push
or
arpl
dec
xorl
pusha
jnp
push
scas
jg
aam
fs
imul
outsb
pop
add
cmp
aas
in
sbb
loopne
ja
icebp
lcall
inc
add
aas
cmpsb
fsubs
mov
sbb
les
lahf
cwtd
add
sub
adc
push
call
into
cmp
mov
dec
sbb
mov
pop
test
lods
fsubrl
das
in
xchg
imul
inc
ja
ret
mov
sbb
sbb
add
das
shlb
cmp
or
jle
jo
dec
int3
mov
sarl
data16
mov
inc
or
and
or
popa
adc
lahf
rolb
popf
jecxz
jns
clc
aas
scas
dec
insb
dec
lds
mov
movsl
xchg
mov
pop
add
mov
lahf
push
cmpsb
cmc
scas
jo
jmp
sbb
add
es
mov
xorl
sbb
cmp
cmp
addb
mov
popa
enter
sub
je
or
mov
data16
sbb
mov
cmp
movsl
scas
push
cwtl
divps
stos
pand
cmp
add
pop
stos
cmc
ljmp
sub
test
inc
add
push
cmp
push
jmp
int3
sahf
push
notl
lds
imul
dec
or
cld
and
fs
jbe
aas
subl
shlb
push
leave
imul
adc
loopne
call
stc
dec
movsb
clc
cwtl
test
ja
jle
mov
sbb
repz
cmc
push
xor
push
dec
jmp
je
in
jo
jp
or
cmpsl
or
push
cmp
inc
lahf
mov
jno
or
nop
push
cmp
pop
and
ret
inc
and
bound
xchg
movsb
fstpt
test
mov
pop
sub
dec
push
stos
push
jb
mov
pop
lds
stos
and
sbb
push
or
sbb
aas
add
inc
lret
xor
ss
dec
rolb
add
push
adc
pop
mov
cmp
fwait
xchg
jnp
pusha
mov
and
in
lret
jb
cli
rol
xor
or
cmp
leave
pop
mov
in
ljmp
pop
pop
sub
sub
push
adc
push
push
dec
dec
mov
adc
into
mov
imul
pop
bound
and
jl
push
loop
mov
and
scas
mov
ret
mov
inc
inc
js
mov
lds
sbb
sbb
jne
mov
fcomi
cmp
and
outsb
bound
lods
clc
out
sahf
repz
sbbb
test
xchg
sub
fisttpl
test
xorl
push
sbb
push
popa
pop
std
inc
xchg
movsl
outsb
inc
lcall
mov
push
sub
push
cld
test
test
fucomi
cmpsb
shrb
sbb
mov
cmc
add
pop
jmp
jnp
insb
shll
lcall
adc
jge
sti
sub
scas
pop
inc
push
xchg
gs
xor
fisubl
out
push
sbb
xchg
insl
mov
jge
jp
outsb
rorb
leave
push
push
pop
mov
cmp
jo
call
pop
jbe
xor
insb
sti
dec
xchg
icebp
icebp
imul
vpcomub
movsl
ljmp
dec
adcl
fcompl
andl
inc
mov
repnz
adc
or
in
pop
movsl
mov
ret
jmp
mov
lret
push
es
fiadds
push
adc
lea
and
or
out
pop
fsubl
inc
hlt
test
xchg
insl
sbb
cli
mov
and
xor
jle
lock
mov
rorl
or
lds
aam
push
adc
stos
fsts
sbb
inc
jle
xchg
sar
xchg
jae
fidivrs
cmc
test
push
xor
test
shlb
bound
push
nop
xor
inc
in
loop
mov
mov
in
leave
aas
les
jp
outsb
imul
jne
rorl
jo
fimull
in
and
sub
add
or
aad
xchg
mov
bound
subb
push
sbb
sahf
iret
cmpsl
cwtl
mov
mov
fldcw
mov
xchg
adc
xor
faddp
mov
and
test
cmp
sbb
les
fisubs
adc
mov
push
nop
xchg
aad
int3
cmp
cwtl
ljmp
inc
lods
push
adc
cmp
add
sub
mov
mov
cltd
lret
dec
jl
push
mov
aas
addb
cli
dec
dec
mov
add
imul
repnz
jmp
mov
xchg
lret
test
cmp
inc
ret
or
jns
dec
mov
cmp
cmc
test
fistpl
pop
dec
pop
push
pop
lock
pushf
outsb
test
pop
cmp
enter
test
test
test
repz
push
mov
sbb
mov
popa
add
or
arpl
cli
lea
int
arpl
sub
lahf
push
scas
outsl
andb
sbb
rclb
shll
cmp
je
aas
push
gs
fcompl
mov
lods
xor
fisubs
sahf
jmp
ljmp
test
mov
adc
nop
push
adc
lea
insb
push
je
sqrtps
outsl
daa
lcall
cmp
xor
aaa
test
out
outsb
and
lcall
in
frstor
scas
or
cld
xchg
pop
in
adc
ds
mov
cwtl
add
and
xchg
dec
daa
sub
lahf
cli
xchg
leave
into
sbb
mov
insb
jae
inc
out
popf
push
jl
and
arpl
in
adcb
movsl
sub
xchg
sbb
filds
repnz
sub
test
xchg
lea
popf
lea
sar
andl
pop
lret
fbld
test
xchg
inc
and
xchg
or
pop
push
outsb
movsb
fisttpl
je
inc
ror
push
lods
push
mov
adc
xchg
inc
mov
test
fisubl
sub
aam
ret
pop
int
jecxz
test
sbb
sarb
pusha
or
xchg
int3
push
addr16
push
les
mov
test
cmpsl
xor
outsb
sbb
das
xchg
ja
push
mov
mov
mov
aam
xor
andb
aam
xor
push
lahf
push
xchg
out
pop
shl
push
inc
test
imul
add
lock
mov
adc
sub
loope
out
mov
pop
dec
mov
aaa
scas
and
dec
mov
or
in
and
push
test
gs
imul
push
cwtl
adc
loop
rcrl
or
cld
iret
mov
scas
gs
xchg
mov
loop
lods
dec
xchg
xlat
mov
add
push
ret
or
mov
lret
out
cld
je
je
call
pop
les
mov
movsb
into
jg
inc
xchg
fistpll
jb
ds
add
repz
sub
xorb
or
cmpsl
lods
daa
add
pop
cmc
ret
pusha
pop
test
inc
sbb
icebp
push
pop
popa
push
pop
push
cmp
inc
push
inc
and
cs
adc
jg
jmp
fldl
cmpsl
sbb
mov
xlat
xor
pushf
sub
into
fadds
and
pop
or
push
cld
out
xor
ss
push
in
xchg
jnp
out
aaa
or
cmc
bound
push
pop
lock
xlat
push
add
pop
outsb
scas
stos
sub
cmpl
pop
ficompl
das
dec
ss
xchg
lods
insl
xchg
cmp
xor
or
lahf
lcall
add
stos
movsb
mov
or
adc
pop
mov
push
push
xor
xchg
mov
dec
mov
mov
mov
or
fimuls
xor
add
les
rcl
in
adc
pop
push
xchg
mov
xchg
fbstp
add
dec
jmp
imul
xor
test
ret
out
enter
fucomi
aam
out
mov
insl
mov
mov
mov
cmc
sbb
pop
lds
enter
sbb
dec
mov
and
xor
pop
test
inc
inc
mov
xchg
or
adc
aam
mov
jmp
out
push
sub
fidivrs
enter
lods
push
nop
mov
sti
pushf
inc
sti
in
mov
data16
into
bound
daa
data16
mov
repz
inc
jbe
cmp
jns
int3
out
aas
loope
jae
jp
xchg
inc
cltd
fstpt
movsb
push
arpl
orb
add
pop
push
xor
fsubs
fisubrl
mov
cmp
mov
or
jg
int
xor
sbb
xchg
sub
or
cltd
cmp
xor
jbe
dec
adc
out
loop
fisubrl
pop
addb
or
enter
rcll
faddl
jp
push
sbb
in
aaa
addb
xchg
out
pushf
daa
mov
les
stc
insb
vsubss
cmc
repz
and
fs
xlat
daa
cltd
cmp
xchg
gs
jmp
mov
ret
into
cmp
xchg
jl
adc
or
sbb
mov
out
add
adc
mov
xor
imulb
enter
mov
mov
xchg
jge
lods
into
fs
jns
fidivrl
dec
xchg
mov
subb
clc
hlt
xchg
inc
dec
mov
cmp
stos
cmp
push
pop
ret
out
mov
sub
inc
scas
fsubrs
ds
dec
push
aam
dec
xchg
sub
cmpsb
adc
insl
xor
gs
test
mov
and
mov
sub
mov
subl
mov
aas
sbb
mov
jae
cltd
cli
ds
sub
movsb
mov
ficoml
fisubs
xor
or
sub
loop
sub
in
or
mov
mov
aaa
push
pop
push
fisubs
pop
xlat
insl
iret
and
mov
dec
pop
cmp
inc
das
push
hlt
negl
fs
popa
loop
test
xor
rcrl
dec
mov
mov
daa
sbb
shrb
xor
cld
aam
sbb
leave
adc
adc
insl
popf
movsl
mov
rorb
int3
loope
or
decl
lahf
pop
or
mov
fwait
or
insl
mov
mov
xor
test
cmp
data16
gs
xchg
idiv
mov
sahf
lock
imul
push
xchg
call
sub
vmread
push
cmp
sbb
outsl
jg
dec
mov
in
out
rorb
enter
fmul
pop
cli
loop
std
int
cmpsl
sub
int3
or
pop
loope
pop
es
push
into
mov
pop
pop
cld
mov
in
test
inc
lds
repz
sub
jae
or
insb
mov
call
ret
sub
push
lods
movsl
and
push
int
jp
mov
xchg
or
xor
data16
out
mov
sarl
adc
xchg
das
push
cmpsb
or
js
jecxz
shl
mov
shrb
mov
sti
push
mov
hlt
mov
sub
mov
xor
dec
dec
sbb
scas
lea
test
ljmp
sbb
fisubrs
aaa
in
jp
iret
cli
inc
jmp
roll
xchg
mov
add
das
sbb
loopne
cmc
jp
sbb
cmp
pop
cmpsl
pop
testl
lds
sub
imul
dec
mov
xchg
into
in
push
les
mov
psraw
and
add
xchg
mov
stos
in
mov
mov
or
sbb
jb
sarb
xchg
mov
cmpsl
cld
scas
out
push
imul
push
inc
push
cmp
out
xchg
in
stc
mov
paddw
adc
pop
out
leave
xchg
sbb
xor
dec
mov
mov
mov
sbb
rorl
movsb
dec
sub
or
and
lods
and
call
rcl
sub
inc
jecxz
lds
and
in
sub
sahf
cmovbe
int3
xchg
mulb
add
push
and
adc
cltd
add
or
lods
and
dec
xor
faddp
ret
insl
rol
jl
dec
inc
xchg
loope
clc
adc
in
popa
dec
push
out
addr16
cmp
test
mov
shrb
test
xor
imul
dec
mov
repz
mov
cmp
cmp
mov
jae
sarb
sbb
ret
ret
xchg
icebp
imul
adcl
iret
rcr
incl
hlt
jo
cli
out
cmp
lods
or
pop
cmp
mov
in
sbbb
lcall
mov
dec
clc
push
loopne
popf
sbb
pop
scas
outsb
mov
push
push
gs
scas
mov
xchg
jne
sar
hlt
sbb
xchg
fidivrl
int3
xchg
fwait
andb
sbb
aaa
mov
cmc
addr16
xor
or
dec
pop
call
bound
jp
push
inc
int3
inc
push
mov
sbb
and
testb
cmc
inc
mov
push
and
mov
mov
inc
in
mov
les
jae
aas
out
pop
das
pushl
or
xor
je
inc
mov
data16
sub
repz
in
arpl
rorb
in
mov
xchg
mov
xchg
sbb
sti
add
ret
stos
sbb
pop
mov
jbe
xchg
mov
mov
or
dec
sub
lahf
cmc
adc
adc
adc
shl
ffree
les
cwtl
mov
sahf
or
push
rcrl
std
push
push
cld
sbb
push
sahf
fmul
imul
add
js
sbb
je
mov
out
jge
outsl
and
or
add
jp
test
fsubl
stc
mov
out
jl
out
push
dec
popf
add
sarl
pop
pop
loopne
xor
cvtps2pi
or
imul
fsts
test
in
sahf
add
test
sbb
mov
sti
imul
pop
jl
stos
mov
fwait
jns
jbe
dec
and
sbb
fneni(8087
push
ljmp
sbb
fimuls
enter
cmp
test
or
mov
dec
xor
jp
stos
lea
rorb
xchg
test
sbb
stc
popl
xchg
rcrb
push
in
mov
jbe
outsl
sub
add
in
lcall
inc
stc
sub
out
push
pop
fbstp
in
roll
mov
inc
imul
clc
jb
inc
dec
aas
and
mov
sahf
sarb
xchg
jno
sbb
cwtl
xor
in
and
xor
dec
int
mov
icebp
js
fistl
rcrl
push
icebp
mov
jno
jle
fsubrs
test
lea
mov
mov
popa
nop
push
push
fcoms
leave
shlb
dec
loope
and
out
outsb
xchg
sbb
cmp
jecxz
mov
les
lods
inc
and
or
cmp
push
sbb
and
or
xchg
jle
jne
loopne
jge
jmp
addr16
lret
push
lds
nop
cmp
adc
std
repnz
jge
jns
mov
enter
inc
push
jge
int
repz
aam
and
mov
cmp
in
cmp
jbe
sarb
jae
ja
cmp
sub
sahf
cmp
cmp
add
cmpb
inc
mov
js
jg
iret
cmp
inc
and
sub
faddl
cltd
adcl
popf
in
shrb
inc
jae
negl
pop
xor
dec
fisubrs
dec
sub
sarl
adc
dec
cmp
imul
jl
cmp
xchg
push
cmp
dec
mov
mov
cmp
rcl
mov
fsubrp
or
je
cltd
push
pusha
ficoml
mov
aad
mov
rcr
mov
cvttps2pi
add
movsb
mov
adc
inc
into
loope
into
andb
push
xor
xor
insl
xor
ds
adc
jge
xor
lods
jmp
push
mov
lcall
cli
jno
js
std
mov
jge
ret
repz
or
adc
mov
test
add
rcrb
outsb
or
std
push
push
stos
add
ficoms
adc
mov
push
push
dec
in
fisttpl
lock
sbb
aaa
adc
xor
mov
jns
sti
pop
or
xor
cmp
add
ss
out
shrb
shl
sbb
lods
adc
or
jne
add
subl
push
nopl
adc
fimull
shl
xor
bound
push
mov
sbb
dec
add
in
cwtl
data16
pushl
mov
adc
dec
push
and
push
into
pop
loopne
mov
sbb
outsb
lods
dec
mov
xorl
xor
imull
xor
push
and
or
add
shll
xchg
add
mov
out
repnz
xchg
xor
xorb
outsl
shr
inc
pusha
jmp
rcrb
dec
mov
pop
shl
imul
and
sahf
notl
ret
cmpsl
or
mov
xchg
popa
lock
and
dec
int
or
mov
in
in
sti
jb
jno
lea
push
call
movsb
js
pop
dec
jecxz
sub
push
loope
pop
mov
add
sub
fbstp
sbb
imul
frstor
lret
push
sti
stc
push
mov
add
out
or
adc
mov
or
jg
popa
push
sub
mov
sahf
out
bound
fdivs
cmc
mov
loop
and
xchg
jle
loop
and
mov
data16
sub
ret
jmp
sbb
and
lods
leave
rolb
outsl
cld
rcl
rcr
add
stc
push
scas
shrl
and
add
lds
lods
jo
or
lds
scas
jge
mov
sbb
jbe
lahf
out
cli
jne
lds
out
or
mov
xor
popa
loope
sbb
sbb
pop
xchg
add
stos
xor
addr16
inc
sti
imul
icebp
lods
jbe
pop
popa
mov
cmpsl
dec
ficomps
ret
ds
imul
jmp
sbb
filds
cmp
adc
mov
inc
iret
dec
int
mov
mov
inc
sahf
mov
not
push
lock
push
add
xor
jmp
jle
xor
stc
xchg
pop
imul
cmp
int3
dec
pop
adc
dec
push
sbb
xchg
sub
call
inc
aaa
stos
sub
int
fdivr
cmp
loop
or
test
faddl
push
dec
sub
adc
int3
xorl
mov
mov
into
imul
dec
fs
fwait
add
xchg
adc
add
call
dec
aad
pop
fnsave
mov
and
daa
je
mov
and
fimull
hlt
mov
addr16
push
cmc
jl
movsl
xchg
insb
jae
jae
sbb
mov
dec
xchg
or
loopne
add
adc
and
loopne
lcall
xchg
in
xchg
movsl
test
cs
in
jnp
sub
jg
call
adc
cltd
add
and
nop
mov
mov
adc
pop
cmpsb
pop
fcmovnb
icebp
movzwl
sarb
jnp
jp
push
jae
aad
out
movsb
push
mov
dec
jge
scas
subb
push
movsl
dec
mov
add
mov
cmpsb
scas
cs
jge
loop
xchg
das
or
data16
nop
clc
add
or
add
xchg
sub
pop
mov
sub
jg
sbb
mov
dec
jo
adc
test
mov
sqrtps
mov
pop
rcr
adc
mov
ret
xchg
xchg
push
push
fs
push
lret
mov
push
xchg
dec
lahf
sub
ds
js
jae
mov
adc
pop
xor
insl
jl
cs
pop
cmp
inc
fs
ljmp
or
sbb
jb
cmp
shll
or
xchg
add
pop
outsb
mov
pop
push
cld
test
sahf
mov
pusha
and
add
xor
test
shlb
xchg
cmp
or
sbb
test
fiadds
hlt
and
iret
jmp
sahf
sub
inc
mov
mov
imul
call
cli
test
pop
push
lahf
push
sub
into
in
notl
sarb
arpl
sub
cmpsb
rcrl
pushf
out
pop
pop
stos
rclb
add
inc
mov
cmp
xchg
dec
jl
mov
mov
pop
pop
pop
cwtl
dec
mov
mov
popf
jl
jnp
outsb
inc
sbbl
ficompl
fisttpl
push
mov
pop
ret
pop
inc
sarl
rcll
cli
inc
push
sbb
push
adc
popa
add
lcall
cmc
push
push
jae
out
movsl
cmc
sahf
push
and
popf
lea
push
out
pushf
pusha
sub
ja
aad
pop
xchg
popl
lds
popa
ret
pop
xor
lods
push
movsb
push
push
cmp
add
xchg
push
sub
xchg
mov
movsb
push
addr16
fwait
inc
and
sub
in
pop
lea
sub
push
and
xor
loope
inc
and
and
jmp
shl
add
fwait
ja
stos
xor
adc
fidivrs
mov
sbb
pop
or
lock
faddp
rolb
push
loop
cltd
sbb
arpl
jl
notl
cmp
mov
cmp
stos
mov
sti
in
add
popf
push
daa
adc
jnp
popa
shr
xchg
test
mov
xor
jbe
scas
sub
imul
addr16
adcl
aam
pushl
insb
mov
sub
and
inc
leave
pop
aad
daa
cwtl
mov
ret
mov
cmp
xchg
sbb
cmp
cmpsb
pop
pop
stc
sub
gs
mov
or
icebp
fs
jne
test
icebp
imul
into
sub
sub
ret
and
jae
loop
lea
pop
rorb
lods
aaa
cmc
pop
fs
adc
dec
adcb
jbe
cwtl
adc
sahf
lods
movsl
sti
and
xor
out
mov
pusha
cmp
rolb
mov
jmp
sahf
or
or
jecxz
adc
push
jbe
mov
aas
pop
push
mov
in
mov
shlb
sbb
jno
add
dec
stos
or
stc
adc
pusha
outsl
es
adc
mov
subl
jge
xchg
out
xor
adc
and
xchg
jle
xchg
mov
lea
arpl
ret
push
popf
mov
ja
shlb
push
popf
lret
mov
adc
sub
insl
mov
mov
lods
mov
out
xor
cld
inc
mov
jle
cmp
pop
aas
push
push
or
sbb
and
or
cltd
adc
mov
daa
jmp
and
cmpsb
rorl
test
adc
inc
xor
ret
dec
ret
add
stos
hlt
inc
jecxz
call
popa
push
int3
lret
cmp
or
fsubr
bound
push
xchg
and
cmpsb
jl
push
and
mov
jge
sub
sbb
jle
inc
les
jecxz
push
test
addb
push
xchg
sbb
mov
iret
leave
pop
push
dec
pop
scas
mov
adc
in
call
or
popa
pop
nop
loopne
aam
or
adc
sti
aaa
inc
xor
jmp
push
cmpsb
test
xor
dec
out
arpl
pop
movsb
jbe
push
bound
decl
inc
sub
not
loope
adc
loopne
outsl
or
inc
dec
fstps
out
push
mov
xlat
xor
lret
cltd
loopne
cmc
mov
les
inc
sbb
mov
cs
and
and
mov
pusha
xchg
push
cmp
mov
xor
adc
fwait
lods
xor
cmp
outsb
pop
ljmp
inc
add
sti
mov
enter
fcoml
push
pop
fildll
loopne
add
ret
sub
nop
js
jbe
lahf
pop
std
pop
and
out
cmp
push
cs
inc
push
outsb
and
mov
test
lahf
sub
inc
mov
jecxz
cmp
cltd
cld
adc
xor
and
dec
jecxz
aad
mov
mov
adcb
push
and
push
decb
jle
shl
aad
push
in
and
stc
jns
mov
dec
repnz
pop
into
shll
data16
jl
inc
or
shrl
je
nop
xor
jne
push
inc
add
scas
inc
pop
test
cmp
repnz
push
fdivrs
lcall
cmpsl
rcrb
je
iret
fbstp
push
addl
mov
lret
pop
jmp
loop
jle
push
fldl
jl
xor
push
xchg
int
cwtl
fcoms
js
mov
aas
mov
sub
leave
pop
popa
pusha
push
add
fdivrp
bound
pop
push
mov
pop
and
imulb
ds
mov
push
adc
mov
inc
xchg
leave
xchg
dec
mov
das
push
xchg
or
cwtl
cmpsb
cli
xlat
loopne
cmpsl
out
xchg
pop
or
cltd
in
es
test
push
lret
arpl
dec
xor
dec
mov
cmp
push
xchg
sbb
das
sbbl
pop
jle
pop
cmp
push
out
push
inc
jbe
iret
or
sbb
adc
push
mov
dec
add
stc
es
xorl
in
out
dec
pop
add
mov
lds
sub
jo
pop
stos
add
add
lcall
mov
lret
rclb
test
mov
pop
stos
sti
mov
popa
lret
lods
inc
adc
jnp
inc
fisttpll
ror
sub
inc
inc
jecxz
imul
pop
xchg
mov
dec
mov
es
push
in
jnp
lcall
cmp
inc
pop
mov
js
hlt
je
sub
lods
xor
add
fistpl
push
and
jns,pn
jmp
insb
test
sbb
sbb
mov
aaa
jnp
in
aaa
stos
pusha
decl
fadds
or
outsb
and
loope
xchg
sub
push
lcall
push
enter
xchg
or
dec
jmp
shll
popf
mov
xchg
dec
inc
cs
faddl
sub
movb
or
and
ljmpw
pop
xchg
add
xchg
pop
lds
pop
movsl
popf
push
inc
sub
sub
aad
cltd
pop
sbb
pop
int3
xor
xchg
lcall
je
fldt
add
imul
aam
or
ljmp
jp
xor
sbb
or
stc
cli
mov
or
inc
mov
cmp
pop
push
bound
aaa
mov
inc
mov
inc
subb
rcll
mov
dec
xor
lods
dec
rorl
repnz
mov
notl
icebp
lods
icebp
loopne
jecxz
mov
jne
and
pop
lds
cmp
xor
or
and
outsb
pusha
rclb
adc
jnp
add
adc
adc
in
shll
rol
inc
jmp
frstor
stos
jae
and
je
cwtl
mov
in
lock
insl
lcall
pop
jae
add
shrb
inc
dec
insb
and
fnstcw
popa
pop
adc
xchg
je
int
jg
push
mov
pop
sub
xor
sbb
dec
push
cmp
cmpb
lds
leave
mov
testb
or
dec
push
sarb
popa
cmc
push
repnz
outsl
gs
pop
or
ja
inc
rcrl
pop
loop
adc
js
adc
je
push
rorl
cld
push
in
daa
cld
dec
stos
and
jge
pop
sbb
imul
enter
xchg
add
mov
push
int
pop
mov
imul
sub
in
fimuls
sbb
inc
pop
dec
lds
add
jnp
mov
pop
cwtl
lods
ret
pop
repz
test
push
lods
and
aad
filds
in
mov
add
add
dec
mov
int3
loope
xor
fdiv
pop
iret
outsl
leave
ds
dec
fsubrl
adc
aaa
movsb
les
dec
nop
nop
inc
clc
sub
jns
mov
mov
xchg
xchg
stc
jg
xlat
loope
fs
rcrl
cli
dec
in
outsl
dec
imul
push
loopne
fisttpl
mov
mov
xor
add
xchg
pop
add
out
ja
std
test
xchg
stc
test
mov
fsubrl
dec
or
mov
sahf
cwtl
xor
lahf
jmp
xor
jne
out
aas
pusha
sbb
gs
shlb
push
mov
mov
xchg
fadd
pop
fnsave
imul
sbb
cmp
int
movsl
sbb
dec
ja
cmp
push
enter
add
or
xchg
add
and
or
popa
push
xchg
xchg
rcll
inc
cmp
daa
sub
or
pop
mov
inc
dec
cmpsl
fnstsw
mov
lcall
dec
push
dec
add
inc
or
clc
test
push
cmp
out
mov
add
dec
mov
scas
inc
sub
enter
sub
loopne
loop
mov
cmpsl
inc
out
push
es
lahf
fnstenv
les
jb
dec
adc
das
outsb
out
cmp
repz
sub
cmp
push
lods
xchg
push
cmp
xor
adcb
cmp
pop
sub
ja
push
insb
pusha
jmp
nop
ljmp
mov
les
data16
cltd
call
inc
lret
imul
addr16
and
lret
adc
test
xor
dec
adc
dec
movsl
push
mov
inc
insl
gs
clc
dec
test
add
rcrb
ret
fs
in
sub
movsl
mov
add
mov
sub
inc
xchg
xchg
sbb
sub
mov
clc
in
scas
inc
jmp
fmull
mov
pop
jbe
ds
cmc
mov
push
jns
cmpsb
inc
xor
cmp
mulb
mov
mov
pop
rcrl
push
mov
mov
pop
and
bound
sbb
cld
stos
arpl
push
js
xchg
ja
ja
scas
pusha
jbe
mov
sbb
cmpsb
data16
lret
inc
mov
or
sahf
rcrb
mov
add
cmpsl
xchg
jp
push
mov
sub
addr16
ds
adcl
cld
xor
cmp
loop
iret
dec
mov
mov
fisttpll
jge
pop
ror
mov
js
or
push
das
sbb
repz
push
dec
sub
cmp
fiadds
movsl
insb
jae
adc
fdiv
mov
and
mulb
add
jb
mov
cmp
adc
dec
pop
ret
out
sub
rcr
lock
clc
flds
inc
dec
mov
aam
test
cmpsl
jle
adc
inc
das
cmp
push
fs
mov
ja
add
imull
add
or
iret
sub
mov
jmp
jns
out
or
fs
popf
dec
xchg
sbbl
loopne
cwtl
mov
leave
and
scas
xor
mov
je
pop
jge
cmpsb
shrl
je
jge
stos
add
xchg
cmp
xor
adc
addr16
rclb
loopne
and
je
scas
shr
gs
sarb
push
repnz
inc
into
fidivrs
ss
xchg
push
and
inc
or
daa
pop
lock
test
mov
cltd
rclb
add
xchg
loop
pop
dec
xchg
in
flds
repnz
and
mov
sbb
shrb
xchg
cmp
xchg
or
push
lock
mov
cmpsb
loopne
enter
add
jecxz
jbe
add
rcl
mov
sbb
popf
jbe
shrb
xor
out
jne
int
adc
pop
add
loop
cwtl
cld
loopne
lahf
xchg
sbb
jnp
jns
pusha
mov
pop
xor
bound
ret
xor
adc
shll
rcl
icebp
and
fisttpll
aaa
stos
add
popa
shrl
mulb
cltd
cmp
xor
hlt
data16
rorb
pop
dec
sbb
xor
sar
into
add
or
pusha
and
adc
iret
sub
scas
cmp
decl
fsubr
sti
and
sbb
cmp
clc
leave
dec
int3
inc
dec
out
jo
inc
cli
jge
xchg
fsubrl
dec
aas
and
mov
repz
ret
cmp
dec
mov
adc
jge
pop
xor
xchg
add
push
fidivs
push
in
mov
cmp
xchg
push
test
push
pop
jne
jbe
push
mov
push
sub
lret
lds
push
xor
fldt
adc
xor
pop
mov
hlt
or
dec
icebp
sbb
pop
stos
out
cmp
or
add
fstps
lods
xchg
mov
cmp
xchg
jle
cmc
test
pop
and
jbe
or
inc
call
push
inc
aad
subl
xchg
inc
lods
mov
bound
xchg
pop
out
movsl
lea
add
push
out
jl
cs
mov
xchg
xchg
mov
or
sub
loop
mov
imul
dec
out
mov
sbb
enter
sarb
pop
mov
lock
inc
movsb
movsb
sub
push
sbb
fidivrs
lcall
test
cld
and
inc
test
jmp
mov
jecxz
lods
sbb
and
cmp
add
adc
jmp
lock
repz
mov
adc
scas
jg
inc
mov
fcmovne
sub
fsubs
push
cli
stos
sbb
cmpsl
xor
jae
mov
push
ret
insb
sbb
adcb
bound
cld
add
ret
mov
je
fcomps
push
loop
mov
call
jp
adc
in
imul
inc
sub
lahf
ret
aad
loop
mov
out
cmc
fstpt
mov
int
lcall
outsb
shl
sub
repz
push
jge
add
loopne
ljmp
popa
frstpm(287
jmp
pop
inc
inc
mov
xor
push
cmp
xor
ror
jp
inc
arpl
xor
sbb
inc
sahf
xorl
aas
loope
mov
push
cwtl
cmp
mov
in
xor
inc
or
fldenv
lcall
adc
xor
xchg
mov
stos
lret
jle
scas
cmpsb
adcl
lret
cmpsl
push
dec
iret
jo
out
sub
subl
loop
dec
fmull
lods
je
cltd
sbb
mov
nop
adc
out
and
mov
jae
shrb
xchg
lret
mov
inc
shrb
out
lock
or
push
dec
outsb
mov
stos
movsb
addl
adc
icebp
xchg
xor
inc
xchg
jne
mov
or
xchg
repz
add
stc
sbb
mov
inc
mov
cmp
jge
shll
hlt
outsl
lods
or
or
insb
adc
and
jg
or
xchg
jecxz
bound
mov
push
mov
in
mov
stos
pop
es
adc
popf
je
add
mov
sub
push
lock
rolb
jge
cs
mov
inc
mov
or
orb
xchg
filds
push
push
mov
mov
jg
sahf
inc
inc
mov
pop
add
lods
jmp
push
add
imull
inc
add
fsub
jg
mov
mov
push
fs
adc
jmp
movsl
adc
mov
xchg
add
getsec
mov
mov
mov
or
aam
aam
push
xchg
lods
mov
dec
xlat
push
aas
scas
arpl
fwait
mov
fidivrl
jnp
jge
rorb
or
inc
mov
fistpll
dec
fsts
mull
xchg
ret
mov
incl
sbb
ret
add
mov
loopne
aad
cmp
mov
pop
stos
jb
lret
mov
sub
sub
popf
inc
mov
cmp
cmpsl
adc
imul
arpl
popa
loope
in
sbb
fwait
aam
fwait
add
dec
repz
sbb
sub
ja
gs
mov
and
stos
into
test
adc
andb
ret
bound
xor
mov
cmp
pop
clc
loopne
mov
push
out
imul
aad
ss
daa
adc
imul
cmp
enter
loopne
cwtl
push
mov
inc
and
pop
inc
mov
mov
add
add
stos
mulb
stos
insl
rcrb
add
mov
sub
mov
std
or
icebp
pop
cmp
scas
add
inc
imull
loope
ret
jne
notb
icebp
pop
cmc
inc
shl
mov
cmpsb
mov
or
dec
dec
add
bnd
push
ljmp
loope
dec
and
or
xchg
push
xchg
push
sbb
jge
and
push
jge
insl
sub
pop
and
gs
xchg
inc
inc
daa
and
out
xor
cld
add
fisubs
decl
push
into
stc
xchg
aaa
ds
int3
iret
xorl
or
ja
aaa
int
inc
pop
mov
inc
daa
and
mov
jae
rol
cmp
pop
push
cmp
daa
into
lods
push
call
movsb
pop
hlt
cmp
mov
push
xor
mov
daa
jmp
cmp
jns
xchg
lret
das
push
ja
popf
push
xor
lret
cli
jmp
mov
imul
scas
push
dec
iret
or
dec
clc
inc
add
xchg
sub
movsb
cwtl
cmp
jbe
jg
lcall
lods
cmp
xchg
add
mov
mov
movsb
jbe
xor
inc
mov
inc
xor
insl
mov
xor
popf
xchg
imul
adc
push
mov
test
xchg
sti
mov
scas
lock
push
mov
in
test
aaa
insl
aad
xor
fidivl
mov
and
jne
jecxz
push
leave
mov
fiadds
pop
test
jnp
push
sbb
jecxz
in
dec
mov
push
out
clc
fbld
cld
data16
dec
repnz
insl
cmp
inc
pusha
iret
dec
mov
sub
lahf
mov
jbe
loop
sbb
xchg
pop
push
push
ja
mov
xor
lret
mov
aad
xchg
ljmp
adc
outsl
push
pop
cmp
xor
pop
dec
imul
sub
pop
loopne
or
fcmovne
lds
aam
out
cli
adc
subl
movsl
int
xchg
lods
in
mov
mov
outsb
loopne
je
outsb
iret
push
sti
jo
xor
mov
testb
lcall
adc
xor
es
add
test
push
add
xchg
fimuls
es
lea
call
test
imul
push
repnz
pop
not
lods
aas
xchg
cmp
lret
jp
mov
and
addb
dec
mov
adc
jnp
push
insb
mov
iret
mov
xchg
mov
int3
mov
add
imul
add
nop
inc
dec
stc
shlb
in
xor
icebp
clc
inc
in
fsubr
jmp
sbb
popa
adc
sahf
adc
mov
sbb
clc
arpl
mov
cwtl
stc
lcall
test
mov
fisubl
dec
mov
xchg
mov
sbb
jns
les
aam
iret
or
adc
ret
jle
cld
addr16
xor
test
or
rcr
repz
mov
stc
aam
push
aam
pop
pop
jl
add
add
rcll
mov
test
aas
pop
addr16
jecxz
push
cltd
and
leave
xchg
sbb
or
mov
and
popf
pop
pushf
add
push
pushf
sub
shrb
mov
add
rclb
xchg
xor
lods
jo
jb
ret
sbbb
sbb
jbe
mov
xchg
ret
push
lret
cmpsl
jecxz
adc
push
aam
mov
in
out
fisttpl
out
daa
mov
mov
icebp
dec
sub
clc
inc
cmpl
sbb
test
pop
hlt
movsb
push
int3
inc
mov
push
out
pop
sbb
inc
dec
mov
push
leave
xor
or
pop
test
out
in
fdivrp
in
xchg
inc
jp
adcl
pop
scas
or
fnstcw
roll
test
dec
cmp
cmpsb
cmc
jp
push
nop
jbe
jo
call
push
insb
add
fcoml
imul
sbb
test
pusha
ss
mov
dec
movaps
adc
aaa
xchg
add
pop
inc
inc
adc
xlat
inc
lea
cmp
adc
loopne
jecxz
lea
xor
int
sbb
in
popf
lcall
fs
pushf
in
fsubl
cli
sbb
adc
or
in
and
call
add
fisubrl
xor
and
imul
les
ds
insb
add
vsqrtsd
pop
loopne
mov
rcll
push
mov
repnz
into
test
cmp
inc
outsb
aas
repnz
push
mov
sub
sub
mov
int3
mov
popa
idivl
dec
out
test
popf
sahf
pop
hlt
and
rol
push
mov
xor
mov
push
sahf
enter
arpl
pop
push
mov
repz
shrl
mov
cmpsl
fwait
stos
mov
push
inc
mov
bound
imul
test
rorb
in
fldt
and
push
or
lcall
xor
jne
add
push
mov
imul
test
xor
popa
or
aas
je
pushf
aad
out
jne
add
jmp
dec
in
stos
jp
push
push
gs
mov
fnstcw
inc
jge
mov
out
cs
or
cmp
jb
out
jne
loope
in
jl
mov
sbb
loopne
pop
cli
negb
dec
enter
cld
xchg
jnp
jne
fistps
outsl
adc
lds
outsb
es
cmp
and
out
in
adc
xchg
pusha
pop
cmpsb
sub
inc
ljmp
leave
sub
pop
fs
aam
movsl
lret
mov
loope
mov
inc
test
adc
cmp
pop
inc
lahf
pop
cmc
and
cld
insb
xchg
push
les
mov
xchg
xor
fs
cld
pop
ficoml
mov
add
sub
sbb
nop
mov
mov
sahf
inc
jnp
addr16
pop
int3
lret
out
cltd
ret
sub
jbe
icebp
pop
cmp
movsl
fisubl
lods
ja
out
mov
lahf
clc
sbb
fsts
cld
xor
hlt
sub
pop
test
pop
es
jnp
out
inc
adc
pop
imul
shll
scas
add
jle
lock
mov
in
ret
sbb
in
test
scas
mov
mov
jnp
xlat
lret
addr16
lods
inc
jae
fcomps
lock
push
xor
mov
cmc
jno
xchg
xchg
mov
fbld
pop
out
fdivrs
outsb
lods
sub
dec
pop
aam
xorl
jo
imul
test
roll
or
les
push
pop
les
iret
cltd
test
sbb
out
add
mov
push
imulb
lret
mov
pop
int
imul
cmp
test
mov
cmp
in
cmpl
hlt
or
fistl
sbb
sub
mov
lret
pop
enter
std
sbb
pop
xor
jo
test
inc
dec
pop
lock
pop
inc
insl
mov
loopne
js
mov
clc
loope
std
xor
jo
mov
mov
cmp
add
test
rcll
lds
dec
es
jo
in
dec
push
adc
shl
dec
je
stos
and
and
in
iret
cltd
daa
call
mov
sub
shll
shll
cmp
lcall
xchg
mov
cmp
or
mov
jecxz
pop
and
fwait
push
addb
xor
addb
rcl
jp
pop
lcall
pop
adcb
fwait
mov
daa
stos
stos
and
adc
cltd
jle
xor
rorl
scas
clc
push
inc
dec
call
and
mov
sub
fidivrl
sub
add
test
movsl
push
lds
dec
lock
xor
jnp
push
mov
jle
movsl
and
call
aas
ficomps
xor
adc
ja
or
out
lret
cmp
pop
jb
popf
mov
fs
lock
jnp
dec
or
jle
inc
mov
repz
inc
ret
mov
f2xm1
imul
ljmp
mov
jl
push
cltd
bound
es
rorb
pop
leave
int3
stos
jp
fdivr
pop
mov
mov
sar
mov
orb
hlt
jle
cmp
lds
jmp
mov
sarl
sub
inc
jecxz
in
xor
dec
stos
aas
insl
in
mov
cmp
push
aad
push
rorb
add
xor
mov
pop
ja
out
popf
jo
lahf
das
xor
add
dec
or
aaa
pop
pop
jne
push
dec
mov
add
ja
call
push
xchg
cmpsb
xchg
jne
test
stos
in
inc
shll
cmp
xchg
je
and
insl
push
shll
shll
sbb
dec
addb
sbb
adc
inc
movsb
push
popf
cmp
leave
mov
cmp
mov
or
add
out
adc
inc
xchg
xchg
fldl
add
stos
sub
cld
adc
mov
loopne
aam
mov
repz
insb
dec
xor
mov
push
add
jbe
je
jnp
mov
cmpsb
cs
negl
jb
sbb
inc
out
rclb
andb
adc
inc
adc
add
insl
out
nop
cmp
mov
jbe
lock
leave
pop
imul
mov
push
mov
shl
sub
push
cmc
sbb
in
inc
sahf
scas
pushl
adc
xchg
lods
jle
inc
shll
fs
adc
stos
sahf
mov
jp
stc
mov
std
in
stos
mov
sbb
scas
jl
mov
add
pop
jge
mov
push
jecxz
lods
xchg
fdivrp
jl
pop
stos
popa
xchg
or
loopne
or
xor
or
sbb
sub
pop
clc
jb
fsts
lcall
push
rcrl
mov
lods
mov
or
mov
outsl
inc
loopne
sbb
lea
jae
push
sar
mov
push
sub
xor
adcb
mov
adc
adc
xlat
sbb
dec
mov
mov
jg
mov
imul
repz
ficompl
dec
mov
iret
sbb
in
aaa
mov
dec
cmp
lcall
xchg
ret
or
inc
dec
push
push
mov
jge
xor
fidivl
out
or
or
jecxz
call
dec
push
inc
sub
add
cmc
test
mov
xor
roll
push
xchg
jno
enter
add
std
fnstcw
punpckhbw
or
cwtl
rep
mov
sbb
dec
sbb
lods
inc
push
cmp
push
pop
popa
mov
mov
data16
add
xchg
cmp
jno
data16
movsb
sbb
adc
and
fmuls
daa
arpl
jo
js
fmul
negb
xchg
dec
inc
sbb
mov
dec
xor
pop
dec
mov
cli
add
xor
insl
sbb
mov
orb
rorl
and
push
push
cmp
xchg
and
pop
or
setae
sub
mov
pop
arpl
movsb
cmc
jno
leave
mov
gs
jae
icebp
sub
xchg
imull
sar
cltd
xor
mov
xor
dec
xor
ficompl
sbb
cmp
cmpsl
add
js
jg
sbb
or
ds
loope
imul
and
stc
test
pop
loopne
sub
sub
fsub
movsl
es
cwtl
js
cmp
pop
outsb
shlb
icebp
add
je
ret
out
lods
sub
pop
xchg
xchg
mov
lret
rcrl
andl
jno
data16
mov
out
in
jnp
enter
pop
insl
dec
aam
mul
dec
adc
into
cwtl
sub
cmp
xor
xorl
js
xor
addr16
push
adc
fcmovne
mov
mov
int
adc
fsub
dec
scas
mov
cld
pusha
or
cli
sti
adc
push
sbb
js
daa
test
lea
ja
mov
outsl
mov
inc
xor
cmpsb
xchg
mov
fidivrl
rcrl
mov
test
inc
sbb
aam
dec
test
sub
xchg
test
mov
or
negb
cld
out
push
iret
pusha
cli
inc
pop
mov
rorl
mov
and
cs
ja
sbb
jp
cmp
xor
mov
mov
cmpl
dec
clc
dec
fcmovnb
jecxz
in
mov
dec
push
addb
jmp
or
sbb
sub
shll
invd
adcb
shlb
cmp
rcrb
in
xor
in
adc
sub
daa
fwait
mov
xor
push
sub
popf
loop
je
roll
sub
dec
and
cmp
js
xchg
lret
jecxz,pn
jnp
dec
hlt
adc
xchg
out
pop
in
subl
inc
jns
add
es
inc
js
out
in
daa
je
ds
or
mov
inc
or
jae
dec
in
ss
pop
mov
in
sub
push
test
dec
imul
sub
data16
dec
sub
ds
inc
out
mov
xorb
adc
lret
xchg
notb
adc
pop
and
aaa
clc
and
lret
fs
in
into
sub
fnstsw
ss
sub
loop
adcl
pop
lret
nop
sub
dec
xchg
imul
stc
inc
xchg
xor
jbe
dec
pusha
mov
stos
push
mov
xchg
mov
jmp
xchg
xchg
lahf
aad
lcall
test
gs
inc
loop
pushl
sub
bound
je
adc
adc
pop
shrb
pop
pop
push
mov
fidivrl
imul
int3
inc
xor
inc
adc
mov
sub
stos
sbb
xor
mov
push
in
push
push
xor
fstps
std
xor
pop
clc
mov
jo
push
stos
or
insl
das
stos
test
shr
push
popf
cmpsb
mov
les
call
pop
pop
je
mov
outsb
dec
dec
inc
push
call
lcall
push
bound
mov
xchg
lock
rcrl
sub
test
add
pop
push
leave
dec
inc
in
out
pop
push
or
sub
imul
adc
mov
test
sub
iret
pusha
sub
or
or
movsb
loop
fldenv
jg
jg
scas
mov
in
divl
pop
es
sub
adc
inc
mov
stos
rcrl
and
je
jl
xchg
clc
pop
or
repnz
cmp
fsubl
mov
rolb
insb
cmp
mov
cmpl
rcll
sbb
jle
adc
das
outsb
jo
shrb
mov
sbb
popa
out
popa
xchg
sbb
pop
or
mov
subb
das
das
out
jge
mov
popa
mov
enter
jb
xchg
mov
fsubrs
imul
xchg
xor
push
xchg
subb
aad
cmp
jle
test
xorb
xor
pop
ds
xchg
mov
rorb
jno
jns
insl
bound
jno
ficomps
and
hlt
iret
mov
and
mov
lods
cli
adc
cmpsb
pop
mov
vphaddubq
out
fisttpl
lock
or
icebp
lret
mov
mov
xchg
xor
or
jo
or
pop
enter
and
cmp
push
and
and
stc
mov
lret
dec
pop
nop
dec
xor
bound
sub
pop
inc
or
inc
cld
clc
jo
inc
cmp
xor
add
imul
sub
push
or
hlt
sti
jecxz
adc
mov
jecxz
inc
rcl
mov
sbbb
sbb
mov
mov
les
addr16
pop
lret
lds
subl
insl
test
mov
adc
arpl
outsl
sahf
and
sbb
push
xchg
mov
mov
daa
cli
cltd
pusha
cmp
test
cmpsl
adc
sub
mov
lods
iret
bound
mov
daa
cmp
and
xchg
test
enter
fadd
sbb
lahf
test
je
xchg
aaa
repz
pop
jle
xchg
pop
jne
sti
mov
sbb
fstpl
adc
mov
jno
hlt
aam
ss
xchg
cltd
scas
leave
insb
mov
lds
ss
cmp
dec
enter
mov
add
repnz
stc
daa
or
bound
xchg
inc
cli
adc
pusha
mov
push
jp
fsubrp
call
adc
out
cmp
push
jns
sbb
cmpsl
mov
jne
adc
shrl
rorb
jne
sub
and
jle
adc
je
push
sti
or
sarl
rolb
shll
cmp
mov
fdivl
icebp
je
lods
mov
jp
fs
notl
xor
aaa
sbb
clc
pop
sbb
jns
iret
lcall
loop
or
fbstp
lahf
ss
lret
test
jge
cld
sbb
xor
arpl
cli
mov
pushf
iret
ret
and
js
push
xchg
or
dec
jne
jns
fs
addr16
lods
jp
mov
cmc
out
adcb
xchg
sbb
add
mov
sahf
aas
pop
iret
inc
pop
fwait
xchg
jno
jnp
dec
jmp
loopne
xchg
push
call
mov
mov
arpl
add
mov
adc
mov
inc
repz
xor
or
dec
fwait
arpl
mov
rclb
in
xchg
mov
pop
sub
scas
pop
sbb
ljmp
into
xchg
cs
lock
sbb
inc
out
fimull
jle
mov
out
xchg
leave
int
push
jne
sub
in
cli
mov
or
into
pop
fstl
cmpl
andl
int
inc
or
testb
repnz
xor
or
dec
dec
movsb
xchg
ja
into
fiaddl
sbb
aam
call
jae
pop
mov
mov
inc
jle
jp
repz
xor
add
fdivrs
push
mov
enter
pop
in
outsl
scas
je
mov
or
push
gs
leave
frstor
mov
or
and
ljmp
push
push
adc
jo
jno
jl
mov
sbb
out
aas
or
icebp
xchg
popl
push
inc
adc
or
push
or
rorl
or
push
pusha
cmp
add
pop
push
mov
pop
cmc
ljmp
int
jno
lea
xchg
leave
scas
xchg
into
dec
add
xor
fnstenv
repz
push
push
lret
fwait
sub
orl
adc
into
push
adc
stos
pop
cmp
incl
iret
mov
cmpsl
repz
out
jmp
mov
pop
pop
aas
xor
xor
aas
xchg
xchg
pop
jae
pop
adc
lcall
repz
jbe
aad
xchg
adc
jl
adcl
inc
nop
std
jns
mov
outsl
or
xor
data16
sub
pushf
fcmovnu
pop
push
popl
mull
jmp
lret
inc
xchg
fstpl
dec
mov
lods
jmp
and
mov
adc
push
aam
ja
push
jbe
aaa
data16
js
mov
xor
xorb
sub
pop
clc
or
mov
data16
icebp
cmp
fwait
inc
sub
lret
movsb
jl
jl
fwait
sbb
cmpsb
sbb
adc
fildll
stos
cltd
shrb
xor
imul
fnstenv
sub
inc
movsl
xor
in
xchg
xchg
mov
xchg
pop
mov
push
mov
jb
imul
imul
outsb
xor
sahf
flds
mov
popa
insl
arpl
lret
je
and
xchg
addr16
sbb
shld
pop
mov
cmp
repnz
and
loop
rorb
fs
inc
loope
push
adc
repz
pop
lret
int3
mov
stos
jge
inc
mov
xor
push
aaa
add
aam
in
cld
insl
clc
mov
out
and
cs
icebp
iret
jl
pop
pop
iret
clc
jne
sahf
pop
inc
das
jmp
mov
and
mov
lock
insb
add
rclb
ljmp
rcrb
sbb
pushf
std
int3
stos
aas
icebp
outsb
sahf
push
lret
dec
data16
mov
dec
adc
and
pop
imul
pusha
stc
or
rcrb
jp
sbb
in
xchg
xorl
cmc
fisttps
ret
sub
leave
xor
add
add
or
inc
mov
and
aas
lds
pop
cmp
lret
in
imul
sbb
fstps
insb
mov
lret
xor
or
and
pop
lock
pop
call
dec
jno
loop
pop
test
add
das
or
jmp
xchg
out
out
inc
out
test
rolb
pop
inc
das
mov
add
les
ljmp
es
jge
stos
fists
xor
add
call
inc
push
adc
inc
scas
and
push
fs
push
push
cmp
xchg
jae
cmp
mov
addr16
mov
ljmp
int
fdiv
cltd
add
pop
add
outsl
pushf
inc
lock
call
pop
popf
inc
nop
or
jmp
lock
sub
pop
dec
add
cmp
sarl
xchg
xchg
test
nop
test
jo
pop
insl
ja
sti
fstpt
xor
imul
mov
call
clc
xchg
movups
xchg
mov
cld
adc
fsts
pop
das
sbb
jp
xchg
add
leave
vmread
sbb
shr
mov
stos
inc
ss
push
mov
mov
push
xor
pop
stos
push
mov
aas
and
aam
dec
repz
pop
shlb
movsl
mov
test
or
fdivrp
decl
cmc
push
je
popf
imul
or
add
xchg
sahf
or
loopne
or
mov
xchg
in
mov
cmpsl
movsl
push
movb
movsl
mov
test
les
inc
das
lret
rcll
je
add
je
pop
pop
rcll
xor
dec
pop
cmp
clc
inc
jle
sbb
bound
or
mov
jns
dec
fldl
filds
cmp
lret
jo
and
push
sbb
repnz
sahf
xchg
rorb
les
and
pop
fwait
or
in
lock
fildl
jmp
stc
add
aam
imul
dec
mov
mov
push
add
push
and
add
andb
loop
outsb
cwtl
jecxz
xchg
dec
addl
cmp
sysexit
pop
inc
js
ficoml
movsl
mov
pop
dec
mov
sub
outsl
adc
sahf
xor
loopne
inc
mov
arpl
add
xor
dec
es
mov
jmp
fnsave
fisubrl
bound
fisubs
jg
ret
cltd
mov
jbe
mov
jge
fldenv
je
orb
xchg
repnz
pop
pop
mov
pop
pop
push
cmpsb
xlat
scas
rcll
sbb
lahf
push
mov
call
sub
les
sbb
cmp
xor
insb
cltd
fadd
loope
das
out
inc
insl
lds
out
pcmpgtb
xchg
adc
out
or
loope
dec
and
bound
add
push
cmp
or
test
gs
xlat
push
xchg
pop
push
sahf
test
aam
loope
dec
pushf
insb
jmp
test
cmp
cmp
scas
outsb
in
stos
push
dec
imul
pusha
push
add
adc
push
adc
dec
lahf
cmp
inc
hlt
inc
shll
mov
and
sub
inc
xor
rolb
ficompl
add
scas
addl
or
outsb
scas
sub
xchg
mov
int
push
icebp
or
mov
andb
jle
fldcw
andb
or
dec
push
pop
add
jp
dec
cmp
mov
and
jnp
mov
mov
jae
popf
out
dec
xchg
jl
inc
stc
pop
dec
out
cltd
divb
ret
push
shl
pop
sub
cwtl
and
loop
nop
xlat
into
mov
jl
ss
scas
cmp
icebp
xchg
aad
push
imul
repnz
jbe
jl
push
lret
inc
incb
fs
cmp
pop
sbb
mov
test
add
sahf
mov
repz
pop
out
ljmp
pop
xchg
sbb
jge
ret
js
pop
fdivs
pusha
mov
hlt
pop
xor
xchg
lock
jp
and
outsb
imul
mov
add
and
pop
push
sub
mov
xchg
xor
inc
mov
shlb
lods
push
sbb
add
or
dec
sbb
jbe
sub
gs
pop
dec
xchg
cmp
dec
cmpsb
insl
jno
addl
es
out
out
ret
insl
mov
bound
ficompl
stc
mov
sub
mov
imul
and
insb
and
test
cmc
mov
iret
push
subl
cmp
mov
mov
mov
dec
lret
push
fsubr
or
xorl
mov
xor
jnp
pop
pop
push
mov
shlb
dec
mov
jmp
pop
dec
inc
xchg
insl
mov
push
and
sub
out
das
mov
xchg
les
jo
sbb
jge
jb
adc
and
clc
nop
sbb
push
pop
or
xlat
sbb
insl
push
mov
test
inc
xchg
insb
xor
sub
lea
imul
xchg
std
mov
and
in
adc
sbb
or
lret
cmc
out
xchg
mov
push
cs
dec
mov
pusha
fs
xor
popf
ja
mov
adc
scas
lahf
push
mov
and
pop
mov
pop
mov
std
mov
popa
add
mov
mov
xor
dec
dec
stos
and
adc
xchg
cmp
lods
js
test
cmpsb
cmp
push
push
push
dec
je
pop
jae
ss
mov
add
xchg
xor
call
sub
mov
add
inc
insl
jl
inc
idiv
mull
xor
fcoms
mov
push
mov
sbb
je
out
mov
lahf
sti
movsb
dec
insb
push
ljmp
mov
mov
mov
aad
sbb
push
xchg
xchg
arpl
add
test
mov
mov
xor
sub
adc
sbb
mov
aas
in
jmp
insb
mov
stos
jge
or
xchg
jb
test
xchg
mov
add
jle
es
mov
adc
repnz
pushf
mov
loop
nop
lret
and
cmp
orl
and
outsl
fs
mov
dec
sbb
rclb
out
and
cmp
pop
int3
push
ljmp
sahf
mov
pop
imul
sub
addr16
xchg
jle
int3
pop
push
sbb
adc
out
adc
mov
sub
lcall
sub
loop
mov
int3
popw
fldcw
dec
sub
std
shlb
jns
jbe
add
in
fiadds
fldcw
adc
mov
adc
cmp
bound
hlt
xchg
xchg
pushf
cmp
loopne
inc
ljmp
dec
into
inc
lds
sbb
and
xor
xlat
adc
jp
mov
xchg
bswap
fisttps
lds
lret
movsb
jno
in
inc
lret
mov
inc
dec
or
lock
xor
fs
mov
shll
or
mov
loopne
divl
loopne
iret
dec
pop
mov
repz
pop
push
pop
xchg
adc
push
inc
bound
out
test
inc
ficompl
fisubrl
cmc
lahf
les
fwait
lds
sbb
push
fwait
pusha
rclb
enter
loope
push
mov
push
cmp
cmc
in
xchg
mov
adcl
jb
fwait
and
sub
aam
pusha
dec
xchg
pop
repnz
js
add
dec
popf
fxch
dec
lret
inc
lea
test
push
imul
out
test
and
fwait
inc
fs
pop
imul
test
cmp
mov
push
imul
mov
sbb
loop
scas
inc
inc
cmc
xchg
popf
dec
bound
mov
jmp
adc
out
out
mov
bound
xchg
mov
and
push
repz
filds
arpl
mov
popa
pop
es
jne
pop
pop
pop
stos
pop
lods
pop
movsl
cmp
xorl
xchg
jns
mov
mov
xor
cli
das
mov
movsb
push
push
test
lods
fwait
rcrl
cmp
and
imul
int
ffree
test
std
add
push
lret
lret
lret
dec
test
push
cmp
popa
nop
add
push
rorl
cmp
pop
jnp
insl
jg
pop
jbe
jns
out
cmp
sub
push
push
mov
loope
mov
xor
fldt
cmp
test
test
aaa
adc
push
cmp
fimull
test
sub
add
or
rolb
jecxz
ljmp
scas
mov
imul
cmp
lock
mov
adcl
mov
dec
subl
fbld
and
div
pop
test
inc
sub
xchg
mov
mov
dec
leave
push
pusha
mov
enter
mov
daa
scas
sub
pop
inc
sbb
pop
icebp
mov
fstl
mov
cli
sarb
xchg
inc
shlb
movsb
out
imul
popa
pop
pop
in
jmp
test
mov
inc
out
int
push
jo
inc
or
sub
shrl
sbb
fwait
push
xor
add
cmp
pop
xchg
mov
mov
pop
xor
pop
dec
int3
mov
nop
dec
stos
mov
in
and
fwait
inc
leave
andb
mov
aas
in
xchg
sbb
nop
mov
out
cs
iret
mov
sahf
out
push
inc
jno
sub
repz
pop
mov
jg
mov
gs
scas
fistpl
push
cmp
lret
fcmovnu
dec
mov
iret
arpl
out
mov
shlb
inc
mov
pop
cltd
call
inc
mov
popa
iret
cmp
adc
into
repnz
subb
sarl
stos
sar
andl
test
outsb
fxch
daa
xchg
lock
push
sbb
jp
gs
xor
adc
push
add
loopne
pop
and
outsl
ret
adc
int3
call
out
ds
jp
les
inc
stos
cli
push
xchg
adc
dec
stos
pop
and
pop
push
cld
scas
dec
sti
jo,pn
mov
mov
mov
or
pop
movsb
outsl
clc
xchg
pop
loope
dec
ja
ja
pushf
fsubrl
mov
lret
push
lahf
stos
nop
test
mov
mov
sub
jl
jle
aad
xor
pop
jae
or
mov
push
xor
mov
jnp
subps
rolb
fidivrs
add
xor
lds
adc
dec
notrack
incb
icebp
sub
sbb
aad
push
add
mov
adc
push
add
sbb
rcl
mov
push
and
arpl
stos
xchg
int3
xchg
popf
inc
test
test
or
lock
jo
scas
adcb
adc
sbbl
cmp
xchg
mov
or
stc
mov
mov
cmc
xor
pusha
pop
pop
ficomps
cmp
out
lcall
outsl
jmp
dec
dec
jge
inc
addb
pop
mov
cs
movsl
add
or
pushf
dec
stos
pop
enter
nop
push
push
arpl
mov
arpl
sub
shrb
dec
outsb
nop
jno
mov
sahf
mov
cwtl
imul
scas
sub
nop
xchg
xor
es
push
adc
aas
inc
movsl
mov
call
fsubrs
in
push
add
inc
movzbl
push
pop
icebp
fsubl
dec
pusha
inc
leave
mov
push
mov
in
xor
bound
mov
fidivl
fwait
mov
enter
je
dec
je
paddusb
ja
ja
push
push
inc
sub
cmpsb
inc
lret
or
jno
dec
xchg
jb
cmpl
pop
mov
clc
add
aas
pop
lret
lret
das
fdiv
jp
jmp
es
and
pop
outsl
sarl
inc
push
test
push
push
in
cmp
mov
movsl
sub
sbb
out
cs
dec
in
xor
or
in
sbb
push
out
fsubp
mov
jmp
and
test
cmp
xchg
pop
jg
mov
out
xchg
pop
pusha
push
xlat
out
pop
icebp
mov
xor
les
scas
into
jge
mov
addr16
addr16
mov
pop
mov
mulb
daa
jecxz
scas
lea
inc
cmp
xlat
jns
daa
pushl
pop
leave
jecxz
and
aam
mov
mov
sbb
fnstsw
pop
lret
push
mov
pop
sub
pop
sub
or
ret
and
mov
xchg
sub
jno
add
xchg
sbb
fisubs
inc
sarl
xor
sub
clc
cld
mov
or
push
xor
mov
bound
arpl
ret
pop
fdiv
sbb
jnp
mov
insb
dec
dec
and
adc
xchg
cmp
notb
sbb
xor
xor
mov
dec
bound
cmpsl
adc
movsl
fmul
into
addr16
mov
mov
lds
mov
add
cmp
push
aas
push
enter
mov
stc
cmp
jg
or
or
lret
mov
adc
mov
je
lock
lock
cmp
gs
fnstenv
loop
mov
push
xchg
push
push
repz
jo
shrb
movsb
int
xchg
and
push
push
je
jecxz
fs
cmc
mov
sbb
mov
mov
mov
and
cmp
icebp
divb
data16
hlt
mov
jo
cmpsb
sub
jp
pop
push
gs
jmp
movl
mov
out
stc
test
add
pop
jge
and
aaa
or
sarb
popf
cmp
xor
add
xchg
ss
xor
fs
mov
shrb
xchg
add
je
lret
xchg
xor
mov
xlat
lods
or
sahf
sbb
rol
cmp
sub
aaa
xchg
inc
push
pop
cld
les
nop
and
mov
bound
enter
adc
adc
and
jb
xchg
push
inc
sbb
mov
xor
cli
dec
enter
in
and
inc
or
loopne
cmp
sbb
out
cmc
mov
adcl
in
bnd
or
into
mov
pop
popa
cmp
sub
mov
fstpt
or
push
negb
lods
jle
ja
aad
cmp
popf
out
and
push
mov
rclb
lahf
std
flds
call
jne
or
shrb
mov
or
xchg
inc
js
mov
mov
aaa
mov
vphaddudq
and
and
xlat
outsl
xchg
rcr
aam
movsl
mov
ficoml
out
stc
add
jecxz
mov
cld
xor
std
mov
mov
push
loope
or
mov
pop
sbb
mov
mov
data16
pop
xchg
xchg
jnp
sub
into
pop
sub
jecxz
add
andb
xor
stos
int
xchg
in
mov
jecxz
into
rcrl
pop
mov
lahf
and
dec
jecxz
inc
mov
lret
pop
lahf
jbe
jle
pop
add
jne
dec
test
lret
xor
mov
fcmove
cmc
in
cmp
dec
out
and
xlat
cmp
popa
fbstp
int
mov
sarl
loop
cld
mov
pop
xchg
imul
cld
outsl
test
xchg
cli
hlt
les
push
shlb
lahf
push
xchg
inc
movsb
out
cld
inc
out
jmp
cmp
dec
mov
in
mov
xchg
cmp
loop
out
jg
in
jl
add
sub
xorb
arpl
data16
and
leave
popf
mov
mov
out
sarl
push
jne
ret
dec
mov
addr16
push
push
js
bound
jnp
aad
clc
and
sbbb
xchg
cmp
cmp
mov
in
jg
testb
and
cmp
loope
mov
test
int3
jge
fsubr
xchg
jo
lods
mov
int
cmp
push
and
fimuls
sbb
in
mov
outsb
xor
sti
shlb
in
push
out
aas
fsubs
push
xchg
movsl
sbb
cmpsb
ja
std
jle
adc
mov
idivl
mov
enter
call
popa
adc
pushf
cmp
lods
mov
jl
nop
movsl
imul
inc
pop
testl
lods
lea
push
int3
cmpsl
insb
pop
push
xchg
push
mov
insl
xchg
test
or
adc
pop
xchg
or
add
or
test
dec
hlt
jecxz
mov
mov
push
jmp
out
inc
mov
hlt
jns
pop
add
adc
leave
sub
ret
lahf
dec
insb
js
int3
pushf
xor
test
scas
popa
daa
sub
pop
enter
and
mov
pop
rolb
and
xor
lahf
xchg
sub
je
sbb
jge
dec
push
mov
sbb
fcmove
sahf
dec
jbe
inc
sub
and
mov
or
fsubrl
lret
xor
cmp
roll
inc
cmp
outsb
mov
rorb
outsb
ds
add
cs
in
sub
sti
mov
mov
ljmp
cmp
adc
push
movsl
push
add
test
lret
mov
lods
jecxz
mov
sarb
cmp
aaa
mov
add
les
rorl
daa
xchg
cmp
ds
lret
movsb
lcall
cmpsb
mov
mov
mov
lcall
les
cmp
pop
cld
adc
pop
shl
cmp
les
outsb
sti
add
or
sbb
adc
cmpl
ret
jmp
sbbl
lret
mov
mov
xchg
out
inc
pop
aas
insb
mov
pop
adc
jle
xchg
mov
mov
lods
adc
movsl
add
les
jmp
subb
pop
jmp
mov
aaa
loope
js
test
mov
jecxz
in
xor
test
aam
xor
outsl
cmp
adcb
aad
xchg
bound
jge
movaps
xchg
outsl
or
loopne
sbb
add
mov
add
mov
neg
dec
jno
std
addr16
lods
fwait
iret
imul
inc
inc
jb
mov
push
call
inc
fistl
and
add
pop
mull
test
cmp
push
cmp
fists
sub
sbb
pop
sub
test
xor
push
pop
cmpsb
ds
inc
stos
add
add
add
push
adc
jl
stos
rcrl
xor
cmp
push
pop
mov
rcrl
rcrb
fs
add
int
sbb
mov
bound
push
xchg
int
xchg
arpl
push
hlt
fsubs
in
adc
mov
fmull
lret
cltd
and
lcall
cmp
inc
movsb
jae
or
in
xchg
scas
test
out
popl
jmp
mov
inc
add
sbb
dec
lret
dec
add
mov
cs
and
mov
cmp
mov
adc
mov
fisttpll
inc
cwtl
and
cld
outsb
bound
mov
push
fstpt
scas
push
pop
lods
scas
inc
jl
das
and
and
mov
ret
pushf
xchg
insl
mov
adc
xchg
jb
mov
call
pop
test
loop
xor
xchg
mov
dec
out
pop
dec
add
lcall
popf
mov
lods
mov
pop
stos
xorb
inc
lret
cwtl
mov
add
add
repnz
stc
pop
push
sbb
pop
xor
xchg
iret
test
or
add
cmpsl
icebp
mov
mov
leave
mov
pop
fisubs
cmpsl
mov
sbb
mov
inc
shrl
push
sub
loopne
std
cwtl
mov
fs
les
mov
dec
out
jl
cli
adc
out
hlt
lahf
stc
pusha
sbb
pop
and
xlat
imul
xor
add
or
jo
inc
ret
rcr
push
aad
push
adc
push
in
mov
mov
loopne
out
xchg
sbb
mov
lock
repz
mov
mov
arpl
stos
notl
nop
leave
sahf
shll
imul
jae
mov
addr16
lds
leave
icebp
xor
mov
xchg
mov
mov
inc
jmp
sbb
push
js
mov
pop
and
loop
mov
pushf
mov
mov
cmc
lcall
inc
je
movsb
repnz
dec
xor
jle
jge
xor
test
jns
xor
sub
jne
push
push
mov
cmc
push
insl
js
mov
push
pop
addr16
popf
arpl
in
cmpsl
test
xchg
into
ret
popa
push
aad
xlat
in
fimull
and
sbb
gs
inc
aas
jp
lret
pop
push
cwtl
dec
pop
jns
call
cmp
std
jns
call
push
iret
mov
and
subl
mov
in
fcomp
pusha
inc
mov
sbb
jle
jbe
cmpsb
mov
fwait
adc
lods
jmp
adc
xor
mov
int3
sub
sub
mov
fcomps
into
push
and
stc
push
jp
repnz
mov
pop
lock
push
cli
lcall
inc
push
aas
orb
imul
mov
dec
fisttpl
aaa
adc
mov
das
cmp
das
mov
imul
int3
sbb
or
mov
imul
test
mov
push
inc
push
pop
test
cmp
into
je
sti
insb
nop
sbb
in
fs
jns
inc
mov
loop
mov
push
dec
daa
push
xchg
xor
in
and
inc
xor
loopne
test
movsl
movsb
jae
sub
lret
sub
in
cld
and
xchg
in
or
mov
mov
pop
dec
pop
sub
mov
xchg
inc
mov
test
sbbl
xor
sbb
icebp
outsb
push
lret
xchg
std
call
inc
dec
add
jp
add
out
inc
int
or
lcall
imul
jae,pt
jnp
pop
xchg
pusha
cli
iret
mov
sbb
cmp
add
call
pusha
shrb
aad
fs
sbb
aas
mov
in
inc
call
idiv
je
and
in
dec
int
in
mov
pop
gs
dec
mov
sbb
push
sbb
jecxz
add
pop
leave
xor
xchg
jp
push
aad
inc
rolb
jae
mov
add
dec
enter
hlt
fs
daa
and
xchg
dec
repnz
xchg
sub
cmc
and
icebp
aad
push
add
pop
inc
adc
pop
dec
outsl
xlat
pop
cmp
fldcw
repz
shll
stos
test
ret
pop
outsl
cmp
sbb
pushf
test
sub
rorl
repnz
test
andl
outsb
sub
pop
rcrb
cld
enter
push
pop
cmc
xor
jae
sbbb
aam
pop
sbb
or
mov
mov
fs
xor
mov
xchg
sarb
popa
mov
adc
pop
negl
movsb
bound
xorl
xor
outsb
inc
mov
repnz
dec
push
aad
mov
mov
into
ja
sbb
adc
mov
push
cmp
pop
aaa
cmp
push
pop
nop
jg
xor
mov
mov
mov
les
lods
mov
add
or
mov
jmp
mov
aaa
pop
and
add
ret
nop
add
mov
aam
es
daa
lahf
jl
pop
add
cltd
mov
mov
pop
xchg
cmp
mov
iret
dec
ret
das
pop
and
cmpsl
jbe
pop
pop
mov
cmp
jle
into
rclb
mov
lods
cmp
or
pop
add
test
cmc
clc
or
sub
add
icebp
sahf
sbb
jae
jno
add
dec
mov
pop
dec
pop
pop
inc
int
cwtl
lcall
xchg
mov
push
out
movsb
xor
les
test
and
jmp
pop
insb
sbb
sub
or
lret
out
loopne
into
enter
mov
xor
ja
jle
jns
add
sub
stos
adc
dec
push
ja
aam
adc
fnstenv
outsl
push
lahf
stos
inc
mov
mov
xor
dec
add
or
daa
mov
mulb
xchg
bound
test
scas
add
ss
mov
push
inc
inc
inc
inc
adc
rolb
cli
cmp
sahf
pop
dec
sbb
shll
cmp
inc
mov
fnstenv
add
mov
clc
movsb
addr16
jge
movsl
out
mov
adc
ret
scas
mov
or
or
dec
out
sub
enter
cli
jp
push
cld
shrl
loope
dec
mov
lsl
mov
cmp
dec
inc
xchg
mov
mov
jge
aad
cltd
mov
mov
or
bound
shlb
ret
xchg
mov
outsb
imul
fstpt
push
adc
inc
lret
and
xchg
loope
inc
inc
jno
out
shl
ret
push
stos
andb
mov
js
mov
popf
pop
sti
xchg
pop
or
add
add
adc
xchg
leave
xchg
pop
cmpsb
jbe
scas
xchg
pop
mov
xchg
shll
shlb
aaa
push
xor
fs
sub
movsb
dec
add
push
ret
in
rorb
leave
aas
sub
sbb
pop
in
sub
mov
pusha
scas
inc
outsb
test
or
mov
push
jne
dec
sbb
sub
mov
mov
rorb
sbb
cli
fiaddl
iret
jecxz
subl
hlt
je
dec
add
xchg
inc
arpl
mov
adc
jl
dec
insb
jbe
push
mov
sub
xchg
xchg
cmp
mull
popf
aad
xor
inc
xchg
jle
stos
pop
dec
out
dec
push
and
test
mov
rcr
shlb
jg
cmpsb
pop
pop
mov
add
and
jns
lret
pop
cmp
xchg
or
jl
hlt
mov
xor
jae
mov
pop
inc
outsb
pop
sbb
jnp
aas
iret
es
icebp
into
movsb
pop
jge
call
mov
inc
shrl
cmc
inc
or
mov
ftst
pop
sbb
cmpsl
mov
sbb
jecxz
mov
insl
and
jg
inc
xchg
repnz
mov
cli
lods
jge
mov
xor
pop
jmp
data16
jo
loopne
adc
inc
and
xchg
in
std
fwait
insb
popf
jae
into
jmp
xor
xchg
jle
inc
or
adc
in
xor
or
pop
adc
int
sub
fistpl
inc
sub
int3
sub
inc
ljmp
popf
gs
gs
or
popa
mov
adc
jne
outsl
add
xchg
pop
in
lea
ds
adc
sti
xchg
out
jl
sbb
mov
movsb
popf
xor
push
push
jo
mov
mov
and
sub
dec
inc
js
cmp
lcall
push
sarl
mov
mov
ret
fwait
mov
pop
xchg
out
mov
aad
cmpsb
stos
or
into
mov
mov
addr16
sub
rcr
dec
pop
sub
sahf
jns
jne
or
bound
add
insb
outsb
and
or
int3
mov
mov
fmuls
adc
adc
push
xchg
inc
or
dec
int3
xchg
dec
ljmp
push
lcall
mov
or
out
into
mov
pushf
cmp
lds
push
outsl
push
mov
cmpsl
in
sbb
mov
xchg
iret
cmpsb
dec
push
cmp
dec
sahf
push
sbb
fsubs
pop
fisubs
mov
rcl
stos
hlt
pop
inc
fst
insl
mov
mov
daa
pop
pop
and
sub
mov
loop
dec
jmp
push
out
inc
gs
sbb
xor
insb
add
or
adc
dec
jb
into
xlat
popa
je
adc
out
shlb
sarl
mov
xchg
imulb
lret
mov
sub
sti
push
xchg
mov
mov
add
sub
frstor
or
inc
fcmovbe
faddl
je
sbb
jb
mov
xor
xchg
push
mov
cmp
mov
es
pminub
insl
iret
mov
adc
int
pop
movsl
and
lahf
jle
lock
lcall
ds
rcl
cmpsl
push
das
incb
pusha
xlat
and
lods
sbb
test
pop
notl
int
in
mov
fnsave
cmpsl
cmpsb
mov
dec
jmp
and
push
push
filds
int3
mov
inc
mov
cmp
mov
mov
jns
dec
xor
cmpsl
add
gs
imul
pop
stos
in
gs
mov
roll
jne
test
xlat
not
mov
imul
cmp
sub
sub
adc
adc
xor
sbb
push
das
das
in
lea
jmp
pop
jo
push
mov
mov
cmp
xor
adc
in
adc
and
mov
pop
cwtl
jnp
jo
imul
jp
sbbl
mov
mov
inc
xchg
push
mov
xchg
mov
xor
add
lcall
add
push
lcall
cmp
xchg
lock
std
mov
sbb
push
add
sbb
xor
dec
xchg
mov
stos
lahf
movsb
inc
outsl
adc
xlat
pop
push
mov
clc
inc
fs
lahf
bnd
inc
xor
jl
xor
xchg
dec
dec
gs
popf
xchg
xchg
adc
mov
sbb
push
out
jg
jmp
inc
orb
ds
js
pop
jge
dec
repz
jmp
jg
mov
adc
push
in
loop
push
push
sbb
inc
add
sbb
gs
xchg
out
sbb
aad
repz
in
iret
mov
popf
int
adc
fcmovnb
xor
jg
in
mov
in
fwait
cwtl
pop
aaa
dec
repz
outsl
daa
daa
rorl
popf
dec
mov
mov
into
aam
push
add
push
inc
mov
scas
sub
les
aaa
movsb
in
cmp
sub
notb
outsl
rorl
jno
fstl
sub
mov
std
je
mov
cmp
jle
lcall
jl
adc
xor
adc
daa
leave
out
roll
dec
icebp
jbe
inc
lret
notl
jo
cmpsb
inc
cmp
cmp
jp
enter
loop
cmp
xlat
jg
scas
mov
lcall
xchg
mov
inc
sbb
loope
std
cli
sub
add
mov
lcall
test
fcompl
add
xchg
xlat
loope
jmp
adc
pop
fnstsw
add
dec
pop
push
ja
adc
addr16
mov
jecxz
mov
xchg
sbb
aad
aad
push
ljmp
mov
sarb
rorl
jge
xor
and
rcrb
mov
inc
fdivrl
inc
testl
lock
test
data16
out
aam
push
sbb
or
cmpsb
adc
aam
mov
mov
mov
adc
lea
in
mov
mov
hlt
popf
mov
cmpsl
stos
jmp
xlat
mov
daa
fadds
mov
cli
test
loope
jb
push
lcall
movsl
cwtl
add
or
add
ficoms
pusha
mov
int3
xor
movsl
adc
jmp
imul
aas
inc
aam
dec
in
jl
xchg
hlt
mov
push
insl
pop
mov
xor
add
inc
or
imul
xchg
sub
dec
push
aaa
int3
test
fdivrp
mov
into
dec
and
fs
jl
jnp,pn
pop
sar
jbe
push
add
pop
pop
out
leave
adc
or
mov
xchg
cmovns
jp
je
push
loop
ret
or
ret
loop
dec
lret
imul
stc
sub
sub
mov
lock
lret
imull
ret
out
popa
add
shrl
pop
xor
cmpsl
sar
sub
jge
popf
pop
imul
sbb
pushf
rcr
jno
xchg
outsb
add
mov
std
jo
inc
mov
data16
cmp
stc
loope
mov
loop
mov
stc
stos
stos
xchg
pop
cmp
shlb
into
test
mov
cmp
or
in
arpl
pop
ja
pop
seto
inc
sub
or
gs
hlt
test
mov
jmp
dec
pop
icebp
leave
lods
das
pop
scas
add
js
rolb
jbe
jge
and
push
dec
or
mov
sub
in
dec
cmp
sahf
in
adc
bound
or
fs
es
and
je
fiaddl
lret
jle
in
push
jo
xchg
dec
adc
popa
jbe
frstor
xchg
aad
cmp
repz
call
fucomp
mov
pop
inc
cltd
sbbb
cmp
sub
jge
loop
sbb
iret
imul
scas
das
rcll
iret
dec
fimull
adc
cmc
inc
subb
scas
or
loopne
jecxz
pop
xchg
sub
hlt
jne
jge
repnz
into
roll
adc
ret
imul
inc
and
adc
inc
pusha
mov
in
pop
inc
sbb
notb
fs
inc
adc
std
lods
shll
lea
addb
xchg
outsb
xchg
rcl
mov
out
xor
enter
xor
jno
push
addr16
roll
enter
inc
cmp
iret
mov
lods
lret
sub
push
adc
xchg
mov
push
sbb
lock
cli
jb
cld
leave
fldt
inc
dec
es
jbe
popf
lret
and
test
push
rclb
lcall
cs
xor
jnp
cld
or
jp
lods
mov
mov
mov
xchg
and
fmul
mov
leave
add
ficoml
ficoml
cltd
subl
cmp
jae
dec
jg
roll
clc
or
jmp
xor
out
loope
decb
pop
seto
lods
inc
xor
inc
lds
ret
cmp
push
imul
outsb
xchg
mov
mov
bound
jnp
cmpsb
cmpsl
in
or
push
out
stc
push
into
rolb
mov
push
out
pop
lods
and
push
out
push
gs
push
loopne,pt
jp
jmp
inc
mov
icebp
xor
imul
mov
xchg
add
xchg
negb
leave
jg
jbe
flds
xchg
adcb
ss
sahf
mov
loop
mov
mov
dec
out
jae
loopne
rcrb
loop
ret
push
push
out
dec
cmpb
mov
jecxz
mov
icebp
cmpsl
jp
xor
dec
fdivr
aad
mov
cmp
push
pushf
out
outsb
imul
icebp
jg
call
icebp
adc
add
cmp
fbld
clc
loope
filds
fimuls
cmpsb
mov
shlb
xchg
inc
adc
push
dec
addr16
dec
mov
in
cmovns
xchg
mov
ljmp
cmpsb
into
and
mulb
fisttpll
daa
add
bound
jnp
aad
lret
xchg
lock
jmp
lods
and
pop
mov
je
push
add
add
frstor
xchg
cmp
jmp
mov
loope
outsb
push
inc
cmp
lahf
in
xchg
je
pop
and
sbb
jl
lock
xchg
out
out
mov
dec
ss
sub
ret
popf
out
add
rcrb
and
fucom
sbb
stc
subb
divl
ds
cmpsb
jne
sub
leave
xchg
xor
xor
sbb
adcb
lods
push
mov
in
lret
add
xchg
jmp
pop
or
repz
adc
fidivs
pop
pop
dec
adc
mov
pop
and
mov
jmp
xor
push
sub
pop
mov
push
xorl
js
inc
push
xor
sti
push
cmp
lods
mov
test
cmpsl
push
inc
sub
or
push
std
sub
outsb
or
lea
insl
test
adcb
mov
psrld
or
shll
fistpll
popf
test
adc
stos
in
stos
mov
mov
testl
cmp
insb
test
and
pop
push
out
cmp
xor
arpl
jecxz
fidivrl
arpl
adc
lcall
sub
push
cmp
cs
arpl
jnp
andb
insl
in
mov
jno
push
mov
std
mov
mov
loop
or
nop
xor
sbb
sbb
jmp
jmp
jnp
test
insl
mov
dec
xor
pop
sbbb
lahf
test
into
jns
hlt
push
jecxz
andb
jno
lret
xchg
cmp
mov
rcrb
add
add
pop
push
std
add
jo
iret
mov
stos
rolb
xor
push
into
test
call
dec
jmp
xchg
sub
mov
out
xor
or
enter
dec
testl
repz
test
adc
jnp
call
push
addr16
fcmovu
sub
xor
mov
and
stos
test
mov
pop
mov
cmp
repz
push
mov
out
mov
shrl
inc
pop
sbb
mov
aas
mov
push
andl
data16
inc
js
and
test
lock
rorb
sbb
rcrl
push
les
mov
dec
out
sbb
jge
adc
repnz
xor
pop
push
sahf
push
test
inc
sub
cwtl
push
xchg
mov
ficoml
push
push
adc
or
jns
cmp
jns
mov
sub
or
cmp
dec
sar
mov
cmp
jecxz
add
cmp
mov
gs
sbb
ret
mov
xchg
sub
push
jg
mov
inc
adc
cltd
and
pusha
inc
lret
in
jnp
shrl
pop
outsl
inc
xor
dec
das
mov
sbb
inc
push
pop
add
in
or
imul
push
cmp
mov
jo
and
dec
pop
sub
nop
push
mov
and
dec
es
mov
adc
push
loopne
inc
ja
mov
mul
and
inc
fmull
cld
cmp
push
push
insb
jg
pop
pop
inc
fldt
int
ficoml
inc
divb
cmpsb
outsb
outsl
into
shl
aaa
push
lcall
and
mov
xor
xchg
scas
call
sbb
fistl
aaa
addr16
mov
ja
xchg
adc
mov
jo
mov
adc
cmp
sahf
bound
xchg
aam
adc
subb
out
inc
pop
jnp
outsb
sub
cmp
jo
and
jbe
mov
dec
cmp
test
jmp
adc
fs
inc
push
cmp
xchg
dec
loop
arpl
outsl
pop
dec
xchg
and
mov
mov
or
xchg
pop
dec
mov
cmp
addr16
rorb
dec
outsb
out
add
inc
ret
mov
lock
jae
dec
ret
pop
cmp
lea
sbb
cmp
inc
sbb
dec
fs
mov
jbe
xor
xor
and
rclb
gs
adc
pop
add
imul
mov
push
pop
test
add
jecxz
in
bnd
popf
call
in
adc
or
or
mov
movsl
rcll
mov
jl
rolb
pop
nop
dec
cmp
in
movl
sub
xor
push
int
jl
lea
divl
icebp
mov
mov
ret
xchg
add
lods
mov
test
mov
sarl
aad
add
outsb
mov
jmp
jb
repnz
pop
xchg
mov
dec
je
mov
inc
shrl
aas
cmc
mov
mov
arpl
imulb
aas
es
leave
fstl
xchg
je
jno
sti
fbld
fwait
fs
test
mov
inc
xchg
sub
cmc
sbb
in
loop
outsl
decl
fistps
xor
sti
fdivrs
pusha
push
sbb
repz
mov
xlat
lea
jl
adc
sub
ljmp
push
push
sbb
in
rcrl
pop
xlat
sbb
clc
jmp
loop
cmp
fsubl
out
decl
das
imul
push
jno
cld
hlt
movsl
sbb
push
xchg
test
dec
mov
push
bnd
xor
mov
scas
repz
jmp
mov
pop
jb
inc
jnp
inc
push
mov
pop
cld
test
out
pop
adc
cmpsl
adc
lods
notl
adc
inc
mov
mov
mov
movsl
sub
shll
jbe
push
inc
push
mov
adc
scas
jb
out
ficompl
aas
cs
add
dec
out
push
add
mov
inc
hlt
addr16
push
je
imul
fisttps
repnz
and
test
add
rcrl
mov
in
push
adc
dec
mov
xor
inc
add
add
sub
mov
mov
nop
mov
cmpsb
lret
scas
test
xchg
out
or
mov
out
inc
ret
xor
cmc
aas
sbb
mov
push
ja
xchg
jb
andb
test
jb
insb
adc
imul
popf
cli
sbb
movsl
jbe
popf
mov
mov
ret
aam
or
mov
lea
repnz
sub
mov
ljmp
dec
loop
jae
jae
pop
addr16
or
pop
or
enter
pop
mov
repz
outsb
add
xor
pop
cli
pop
push
daa
push
cmp
pop
and
cli
mov
lahf
cmpsl
fistps
pop
sub
lret
mov
loopne
call
mov
icebp
test
stos
adc
out
lea
dec
popf
pop
testl
xor
xor
mov
pop
lret
popf
iret
jbe
pop
mov
adcb
push
mov
jecxz
sbb
add
nop
cmp
pop
mov
stos
mov
push
adc
cs
xor
sbb
leave
inc
dec
in
cmpsl
bound
mov
pop
popf
test
repnz
ss
jg
push
shr
jge
test
fdivs
push
sbb
enter
xchg
adc
cmpsl
cmp
fwait
push
clc
push
xchg
call
sarb
in
push
orb
xor
pop
sub
mov
xor
mov
or
add
pop
jle
repnz
stos
arpl
fwait
mov
mov
icebp
mov
sub
pop
mov
ds
ret
jmp
and
dec
popf
sub
aad
push
fcom
adc
movl
cmp
sub
fldenv
mov
xor
cmpl
jle
jmp
or
mov
add
loop
mov
cmc
fdivs
cwtl
stos
mov
mov
add
mov
inc
jecxz
jae
mov
pop
sub
int3
add
adc
push
cld
pop
or
and
jl
es
mov
and
dec
push
pop
jns
mov
ret
add
scas
mov
insb
rcrb
fstps
mov
push
push
sub
rcr
inc
fcoml
sbb
rorb
out
outsl
clc
mov
push
mov
push
jl
mov
in
push
jno
cs
sub
cmp
jno
push
sbb
jnp
out
dec
clc
lods
movsb
sub
je
sar
mov
fists
push
sarl
and
push
js
lahf
sti
fstpt
add
fdivl
mov
daa
mov
xlat
iret
sub
aad
or
push
push
dec
sbb
leave
mov
xor
negl
mov
mov
test
push
dec
loopne
sbb
rol
leave
test
mov
pop
insl
in
mov
add
and
dec
scas
mov
cwtl
mov
mov
jge
or
inc
mov
add
insb
frstor
lret
lahf
pop
test
mov
sub
bound
test
lods
sbb
dec
inc
lret
mov
push
lds
sti
mov
pop
loopne
packsswb
xchg
jl
and
pop
movsb
sub
rcrb
data16
push
repz
ds
jge
sub
and
push
xchg
fmull
or
push
lods
insl
or
arpl
and
mov
mov
cltd
shr
aam
or
xor
cltd
in
add
cmp
push
bnd
pusha
out
popf
mov
ja
dec
sub
jp
fprem
and
add
xchg
dec
inc
add
inc
or
or
add
sub
jg
daa
int
push
fmuls
adc
jecxz
insl
outsl
pop
inc
jg
lahf
push
data16
cmp
repnz
add
push
sub
xchg
mov
push
jp
cwtl
cmp
or
mov
xchg
cltd
sub
bound
jno
mov
shll
sub
and
ret
pop
ds
push
scas
mov
dec
fwait
je
das
repnz
adc
out
repz
scas
das
jnp
aaa
pop
cmp
aas
fs
ss
xorb
cld
pop
cmpsl
pop
mov
and
dec
inc
je
adc
daa
popf
push
push
and
and
icebp
jmp
in
addr16
pusha
xor
or
xor
sahf
outsb
mov
shl
xchg
mov
loope
cs
cs
mov
jp,pn
jp
cmp
xchg
pop
leave
cmp
inc
pop
mov
lods
enter
out
in
mov
pusha
std
jo
lea
inc
arpl
inc
into
cmp
dec
cmc
adc
mov
and
into
mov
dec
jbe
push
leave
inc
out
pop
repnz
push
pop
std
add
xchg
dec
jb
imul
lahf
pop
mov
inc
movsl
push
or
and
das
cmpsb
mov
bound
lds
xchg
out
sub
pop
sar
je
scas
in
and
mov
std
aaa
jmp
ss
or
fmul
dec
or
lods
add
ret
addr16
orl
fisubl
mov
test
mov
sub
mov
xor
test
push
ficomps
dec
xchg
xor
and
pop
mov
pop
fiaddl
lret
iret
iret
xchg
adc
push
xor
push
fnstenv
pop
adc
leave
stos
imul
jns
dec
in
les
loope
or
insl
ja
shrb
das
filds
dec
shl
movsb
test
push
es
sti
iret
fldl
lcall
out
int3
out
mov
call
nop
lret
imulb
push
setge
adc
repnz
jnp
dec
mov
lods
add
outsb
mov
push
mov
movsb
jge
jecxz
or
jecxz
mov
or
add
fcoml
jp
out
mov
jle
fucom
popa
loop
jno
inc
mov
xchg
pop
mov
or
and
mov
and
sahf
imul
subb
jge
cmp
dec
xor
inc
adcb
in
test
cs
jnp
mov
jne
arpl
lods
sbb
mov
sbb
mov
mov
fwait
out
loope
aaa
popf
jnp
sarl
sahf
push
stos
sbb
pop
das
mov
push
popf
jecxz
testl
enter
sbb
mov
inc
jp
xchg
hlt
xchg
xchg
mov
jns
xor
and
clc
mov
pusha
pop
and
and
hlt
push
adc
dec
lcall
pop
mov
dec
xor
ljmp
shrl
out
je
pushl
jle
cmp
inc
add
push
push
fwait
int3
dec
mov
and
dec
sub
or
or
loop
hlt
adc
mov
bound
xlat
imul
xchg
or
or
jo
lcall
gs
or
jmp
outsb
lea
and
push
mov
mov
mov
xchg
sarb
test
leave
cmpsl
shlb
xchg
mov
outsb
sbb
loop
or
js
push
cmp
pop
into
xchg
push
sub
rcrb
das
sahf
imul
mov
adc
mov
movsb
aam
push
and
mov
call
pop
jg
inc
cmpsl
and
dec
cmp
push
movsb
or
ja
mov
sahf
fisttpll
loope
cmp
into
sbb
nop
xchg
mov
mov
lcall
aad
jecxz
data16
mov
fcomi
mov
shrd
sbb
pop
jecxz
mov
pop
xor
or
cmpsb
int
sbb
in
mov
cmp
mov
repz
imul
pop
lds
mov
repz
cltd
repz
arpl
ret
mov
fidivrs
les
cmpl
fbstp
orb
icebp
repnz
pushf
ljmp
mov
pusha
mov
and
stos
insl
pop
cld
and
mov
push
inc
xlat
push
mov
bswap
scas
ret
lahf
and
inc
gs
jmp
mov
inc
and
aas
sub
fldcw
flds
inc
sbb
test
push
jp
add
inc
xchg
dec
mov
push
mov
lahf
sub
xor
popa
mov
out
cmc
scas
xchg
adcb
push
cmpb
ficomps
scas
in
jg
pop
add
mov
xor
dec
pop
push
lods
mov
adc
aad
test
mov
imul
ret
cs
jb
out
fldenv
and
rorb
aaa
dec
data16
loope
in
add
pop
imulb
add
aas
lcall
adc
xchg
mov
xchg
jbe
xor
push
pushf
je
mov
dec
and
test
cmp
jge
add
insl
mov
sbb
and
xor
jmp
sbb
xchg
pop
cmc
mov
mov
pushf
xor
xchg
in
xchg
add
push
cmp
fwait
and
fdivr
icebp
jl
in
int3
test
push
je
adc
mov
jb
fistpl
inc
push
sub
ret
iret
pop
ret
jno
mov
in
inc
xor
lret
sub
inc
stos
and
mov
or
mov
cwtl
imul
mov
jmp
sti
lcall
lret
movsb
jno
loop
xchg
and
mov
idivb
sub
adc
push
pop
cs
jge
inc
inc
add
cwtl
in
pop
mov
sub
pushl
cli
mov
push
mov
and
dec
pop
jg
pop
iret
mov
ds
enter
pusha
mov
add
mov
mov
adc
jns
mov
lret
pop
pop
sub
testl
xor
xchg
jb
movsl
jmp
sbb
and
enter
in
xor
jl
xor
adc
cld
jle
dec
lods
test
inc
and
sarb
and
push
cld
lods
add
cld
rorb
adc
mov
in
stos
adc
add
dec
add
outsb
lahf
lret
jns
push
cmp
xchg
push
and
sbb
dec
clc
jle
popf
xchg
outsl
fcoms
adc
push
xchg
sbb
ficoms
mov
cmp
cmp
mull
mov
xchg
aas
fsubp
mov
es
stc
add
loop
movntps
sti
imul
mov
adc
cmc
shl
aad
push
push
test
xchg
rcr
repnz
out
mov
push
out
jbe
in
mov
dec
mov
inc
add
lahf
out
out
lods
inc
pop
sbb
push
jno
push
sub
cmpsb
pop
inc
cmpsl
in
inc
xor
jno
add
loop
lahf
push
ret
pop
push
stc
cmpl
pop
rcrl
mov
inc
cwtl
dec
sbb
pop
clc
push
arpl
pop
adc
mov
xchg
movl
jle
ss
mov
mov
in
pop
mov
scas
pop
mov
cli
pop
cwtl
add
xor
scas
rorl
insb
rcr
pushf
scas
and
sbb
or
add
mov
jo
addr16
push
movsl
loope
adc
jnp,pn
xor
jae
das
add
loop
dec
and
stos
and
push
adc
iret
or
lret
xchg
xchg
shl
stc
cmp
fistps
insl
or
ds
pushf
adc
xchg
jecxz
xorb
pop
mov
dec
or
popf
xor
sbb
mov
fcomps
ds
sbb
negb
inc
or
xor
cwtl
inc
imul
dec
shl
incl
stos
inc
repz
jmp
repz
pusha
or
inc
inc
ds
mov
push
repnz
popf
xchg
insl
dec
cmp
sub
mov
sarl
push
push
inc
loope
call
xorps
popf
cs
adc
and
cltd
xchg
cmovs
jmp
mov
loope
lds
int
ss
cwtl
mov
and
add
lcall
jmp
in
dec
xor
mov
loopne
sbb
add
mov
lcall
dec
fnsave
mov
into
mov
and
popw
es
jmp
fxch
in
jle
mov
fnstsw
xor
ljmp
iret
out
pop
dec
mov
jnp
push
sub
xchg
lahf
lea
jle
mov
hlt
lods
cmpsl
pop
push
ljmp
pop
icebp
insl
loopne
xorl
loope
mov
hlt
mov
inc
andl
gs
scas
xchg
lods
jecxz
cmpl
lods
xlat
ljmp
dec
cmp
addr16
add
div
or
fdivl
push
adc
adc
and
cwtl
jb
mov
lahf
cmp
cmpsb
push
loopne
stc
jg
in
push
ja
mov
xchg
mov
jg
sub
push
xchg
fs
xor
enter
popa
iret
pop
push
sbb
pop
int
pop
and
lods
jnp
mov
xchg
js
clc
xchg
ret
iret
mov
mov
push
push
and
xor
pop
sub
lds
cmp
add
dec
test
out
adc
lcall
fidivs
sub
or
add
push
in
jl
stos
push
cmp
and
into
mov
pop
scas
repz
test
rclb
fs
test
movsl
push
sti
push
adc
std
cmp
xchg
sbb
xchg
inc
mov
outsl
jmp
push
push
pop
jnp
dec
mov
scas
pop
pop
mov
rclb
arpl
xchg
loopne
and
out
cmp
mov
jnp
mov
xchg
test
dec
in
outsl
cmp
push
lcall
test
ja
fwait
inc
mov
xchg
cmp
xchg
or
push
and
push
loope
stos
inc
scas
gs
adc
in
cmpsl
cmp
mov
popf
mov
aam
repz
mov
inc
pop
adc
sti
and
jae
push
mov
push
dec
inc
dec
bound
jae
loopne
loop
shll
mov
jnp
mov
sub
sub
push
xchg
xchg
aas
inc
icebp
in
or
dec
std
jp
test
fs
jne
mov
cmc
dec
lcall
fwait
jno
xor
notl
fimull
ljmp
ds
jecxz
push
test
lret
cs
loopne
addb
loope
inc
mov
xchg
aas
out
push
test
cmpsl
loope
movsl
push
dec
lahf
inc
cmp
inc
cmpl
xchg
lret
jecxz
lcall
jbe
xlat
ss
xchg
mov
fsub
xchg
cmp
mov
or
cmpsl
push
popa
fdiv
inc
adc
sbb
imul
je
sbb
sub
xchg
stos
push
sub
and
cmp
loop
push
leave
add
adc
mov
cmp
mov
daa
lcall
and
dec
pushf
push
fisubrs
pop
cmp
and
test
inc
inc
and
scas
fwait
jp
inc
es
inc
pop
cmp
xor
sahf
or
in
mov
sub
andb
jae
inc
xor
jno
sbb
test
adc
pop
rcll
mov
imul
ds
inc
cmp
in
jbe
scas
xchg
iret
sbb
jecxz
int3
mov
cmc
mov
xchg
dec
dec
pusha
dec
rcl
das
loope
ja
jmp
inc
sbbb
jge
lock
mov
and
ror
lahf
xlat
inc
in
stc
cli
insl
or
jo
gs
loop
mov
mov
out
ss
push
cmc
test
pusha
dec
push
fsubrl
sub
inc
pop
cmpsl
xor
mov
inc
pop
pop
xchg
lahf
repnz
adc
notb
pop
dec
mov
pop
inc
call
pop
jbe
dec
fdiv
mov
push
lahf
jmp
je
push
enter
insl
stos
push
ret
daa
inc
xchg
cmpsb
adc
cmp
mov
cmpsb
pop
mov
dec
pop
je
mov
aaa
in
push
pop
mov
es
mov
lea
test
cmpsb
bound
and
imul
dec
add
inc
lds
push
ja
rcrb
test
ljmp
mov
loope
xlat
sub
push
imul
adc
sti
jecxz
mov
mov
dec
jbe
fs
je
fsubl
xor
sub
mov
xor
call
dec
les
push
in
sarl
jo
mov
ds
xchg
add
mov
add
lahf
pop
les
sbb
inc
inc
mov
cmp
clc
lods
pop
sbb
jp
gs
push
sub
into
sarb
inc
mov
push
sti
pop
add
popf
xchg
pop
mov
out
shrb
cmp
in
inc
imul
xchg
jecxz
push
imul
in
fwait
test
xor
inc
outsl
mov
lods
adc
icebp
sbb
subb
out
or
fs
into
in
test
popa
loop
aas
std
cmpsl
aas
add
xchg
aad
mov
test
pop
ret
test
incl
adcb
lea
std
sbb
ja
push
pop
add
adc
pop
imul
xor
push
jg
push
cmp
add
lcall
in
and
ficoms
dec
adc
jnp
pop
jo
cmp
pop
call
iret
jb
iret
cmpsl
outsl
xchg
in
ret
insb
lock
adcl
mov
out
xor
cmpb
call
pop
into
cmp
push
iret
stos
cwtl
dec
sub
jmp
jg
pusha
pop
fsubl
adc
shlb
xchg
push
mov
sub
dec
jmp
cmp
outsb
ret
repnz
fldl2e
lds
sbb
pop
movsb
in
xor
sbb
xchg
push
pushf
mov
mov
cmpsb
je
mov
jge
lea
push
inc
arpl
pop
add
movsb
addr16
enter
xor
daa
popa
gs
shll
jb
push
ljmp
jge
shr
adc
ror
add
aas
and
shl
data16
fcmove
fcoml
pop
push
das
jb
inc
inc
jne
dec
mov
pop
mov
and
mov
dec
dec
and
or
push
mov
pop
aas
bound
repnz
cmp
xor
lret
idivl
in
cmp
xor
lods
cmp
vhsubpd
data16
cwtl
push
insl
cld
lahf
fstps
clc
push
ds
pop
test
roll
jmp
mov
mov
push
bound
xchg
pop
popf
in
out
sub
cmp
mov
imul
sbb
xchg
push
popf
jo
adc
jbe
mov
jp
fs
mov
mov
pop
add
mov
pop
mov
flds
xchg
pop
adc
xor
daa
int
fs
lcall
into
sbbb
mov
sbb
andl
mov
add
lret
xchg
aam
inc
leave
and
stc
cs
pop
outsl
add
sub
mov
fnsave
stos
loopne
mov
xchg
and
jbe
in
shrl
sarl
leave
xchg
pop
fsts
add
test
lock
aad
out
loopne
add
addr16
repnz
dec
es
lahf
cmpsb
push
sbb
test
sub
jle
icebp
and
sbbl
cltd
or
fnstenv
pushf
push
push
sub
pushf
cmp
inc
jae
lods
pop
daa
fdivl
cmp
inc
mov
ss
add
cmpsb
jae
cmpsb
push
push
and
xchg
mov
jp
ss
xchg
mov
or
std
mov
push
repnz
icebp
adc
jo
sbb
in
bound
cmpsb
out
adc
sarb
cwtl
cs
aaa
aam
scas
in
cmpsb
mov
arpl
jl
xchg
or
int3
xchg
sbb
pop
mov
jnp
add
jnp
mov
jmp
lret
adc
cmp
lret
mov
fwait
nop
xchg
repz
insb
pusha
inc
mov
scas
dec
lret
push
std
stc
sbb
test
pop
insl
jnp
xchg
lcall
aad
fwait
adc
push
js
fisttpll
add
int
pop
sbb
jbe
in
add
jmp
and
xchg
movsb
mov
mov
cmp
hlt
push
push
subl
bound
sbb
jne
jns
cmpsb
leave
cwtl
add
xor
inc
and
mov
mov
int
pop
les
jo
xor
movsb
push
jl
pop
inc
jae
inc
leavew
pop
cmp
dec
xchg
and
insl
mov
pop
pop
xchg
data16
lods
add
icebp
jle
mov
xchg
in
mov
dec
jp
push
jle
ljmp
pop
sbb
cwtl
outsl
adc
mov
out
or
out
jl
sub
cmp
daa
add
xlat
popf
mov
lds
lods
lret
test
inc
dec
int3
mov
pop
in
incl
insl
jb
push
pop
cli
out
lret
inc
dec
dec
lods
push
scas
mov
mov
iret
xchg
outsb
inc
push
aam
daa
daa
mov
fiadds
fsubrp
sbb
int3
rorb
xchg
scas
lds
jae
add
rcr
or
cmp
in
mov
stos
jb
push
outsb
lods
mov
dec
mov
lds
push
and
mov
xchg
jae
iret
lods
fcoms
mov
push
xchg
test
aas
pop
neg
jns
das
add
test
jae
test
das
inc
daa
cs
popf
dec
push
in
ds
dec
push
adc
pop
loopne
lods
push
cs
pop
pop
sbb
ljmp
dec
data16
dec
mov
loope
lock
shlb
pushf
jae
rcll
pop
mov
sbb
sbb
loopne
imul
clc
dec
bound
xchg
mov
jo
test
leave
sub
das
cltd
pop
mov
scas
jno
enter
lds
mov
aaa
jg
loopne
mov
lods
orl
and
jns
in
cmp
lahf
jne
mov
fldcw
nop
sub
inc
out
popa
or
and
in
pop
add
test
or
outsb
das
inc
movsb
stc
pop
mov
call
jl
mov
jl
out
mov
mov
cwtl
cmp
frstor
stos
popa
stos
inc
jp
das
rclb
sahf
clc
fisubl
cmc
add
pop
pop
enter
sbb
xor
call
push
pop
pop
jle
pusha
dec
and
pop
and
xor
cmpsl
mov
push
rcrl
and
xchg
icebp
pop
pop
xchg
xor
js
ds
loope
mov
into
fsubs
jne
repz
fadds
push
pop
repz
push
rol
out
popl
fcoml
test
mov
push
push
pusha
cltd
jb
mov
pop
js
cs
movsb
hlt
popf
xchg
jg
xor
mov
pusha
jle
les
dec
cwtl
push
fst
outsb
pop
adc
stos
shrb
jmp
std
jne
sub
and
push
scas
mov
and
and
das
mov
and
lcall
sbb
iret
mov
mov
jmp
out
or
inc
or
in
push
dec
lret
idivl
ret
pop
and
cltd
mov
jae
or
push
out
out
daa
xor
cmp
repz
das
imul
push
iret
test
cmpsb
sub
pop
pop
add
mov
cs
pop
jp
lods
les
mov
jecxz
mov
lock
add
lret
jmp
xor
subb
xchg
shrl
cmp
cmpsb
add
fwait
pop
test
roll
faddp
subl
jns
sub
pcmpeqb
fs
xchg
inc
je
fnstcw
jg
stos
jl
popa
loop
or
xchg
sub
push
rclb
ficoms
into
push
fbstp
xorb
sub
dec
inc
dec
std
rcll
es
sarb
ja
xchg
movl
cmp
nop
out
pop
mov
inc
jne
jp
in
add
jmp
or
inc
xor
mov
out
xchg
icebp
jno
rolb
lret
in
sbb
or
lret
cmpsb
in
mov
cmp
aaa
js
lds
shl
cltd
arpl
leave
fnstsw
jmp
fs
shll
test
mov
add
and
jnp
imulb
inc
xor
lcall
jne
cmc
and
push
test
les
inc
sbb
adc
test
sub
push
inc
sti
dec
iret
dec
push
push
daa
mov
stos
pop
jp
jbe
repz
push
push
mov
ljmp
mov
das
clc
fnstcw
add
adc
ficomps
mov
imul
cli
dec
sbb
addr16
dec
les
mov
xchg
xor
or
add
adc
xlat
mov
std
pop
jmp
stc
hlt
push
jb
push
pop
mov
outsl
jmp
dec
and
pop
test
dec
mov
cwtl
loope
mov
addr16
ja
xchg
lahf
xchg
loopne
rdpmc
lea
xor
xchg
sbb
pushl
scas
int
lahf
push
gs
or
mov
lcall
sub
mov
insb
sbbl
push
mov
icebp
or
xchg
xchg
mov
adc
stos
sahf
out
test
ljmp
add
outsl
jno
pop
jbe
fcmovnu
mov
decb
mov
mov
inc
loop
pop
dec
jl
pop
pop
inc
cmc
add
push
dec
scas
xor
inc
filds
push
outsl
lahf
loope
xchg
or
lahf
push
dec
sbb
mov
push
es
jecxz
arpl
adc
rclb
es
jbe
fdivl
cmp
in
and
sbb
jmp
sub
lods
rcll
push
int3
add
in
jmp
jbe
fs
vpunpckhqdq
add
outsl
loope
inc
stc
mov
call
and
cmp
jle
pop
push
xchg
stos
pusha
adc
add
xchg
jp
xchg
sub
jnp
lret
nop
inc
mov
mov
movsb
cmc
test
pop
mov
mov
pop
mov
xchg
pop
daa
insl
addb
inc
push
dec
mov
jae
push
xchg
adc
sar
cmpsb
scas
xchg
inc
dec
cld
push
je
and
dec
outsl
cwtl
mov
jns
push
mov
enter
mov
outsb
mov
les
adc
loope
lods
or
dec
pop
ljmp
into
movsb
hlt
scas
cld
sub
dec
push
jno
xchg
sti
mov
sub
stc
data16
push
aam
mov
mov
push
xchg
sbb
lock
cmp
or
mov
stc
hlt
cmp
xchg
add
jne
xchg
push
add
rcrb
std
das
movsb
xlat
test
cs
lret
pop
xchg
pop
das
push
cld
aas
cvtpi2ps
daa
xor
pushl
imul
push
mov
xchg
in
and
sub
ja
adc
xchg
push
jnp
loop
ljmp
mov
shrl
jge
in
pop
out
insb
mov
push
push
f2xm1
adc
in
xor
jbe
jmp
int3
push
sub
loope
lcall
in
mov
int
sub
into
rolb
in
jo
xor
ret
mov
repz
jns
ret
add
lahf
cli
pop
repnz
movsb
add
fsubrl
out
jle
imul
push
dec
inc
sbb
jle
pop
lock
fistpll
push
inc
push
js
jnp
loope
xor
lcall
sub
xor
in
cmp
or
dec
sbb
or
pop
jmp
xor
mov
inc
test
aaa
ret
jbe
cli
sbb
sub
cmp
xor
cmp
ffree
in
sbb
andb
imulb
hlt
mov
add
test
mulb
push
add
insb
push
aad
mov
outsb
jecxz
test
clc
or
fistps
mov
inc
dec
pop
out
aam
or
arpl
shr
xor
punpckldq
ja
lcall
div
shlb
in
inc
xchg
push
fsubrs
xchg
scas
sbb
ret
dec
lds
outsl
fbld
fmull
scas
mov
mov
ja
cli
enter
cltd
xor
or
cli
out
ret
pop
loopne
mov
inc
int
rorb
rol
cmp
or
pop
nop
push
sub
xchg
in
xchg
aaa
push
and
and
mov
ljmp
aam
or
push
cmpsb
loope
arpl
sbb
mov
and
rorl
pop
adc
sarb
popa
mov
sub
cmc
push
mov
test
sahf
cltd
xchg
mov
push
repz
mov
pop
psllw
mov
and
mov
xlat
es
cmpsb
pop
lret
add
sarl
popa
sub
es
lods
mov
sub
adc
gs
jns
ficomps
dec
jno
xchg
popf
fs
fistpl
gs
push
loop
leave
jnp
fldl2t
inc
dec
jno
pop
mov
ret
aad
mov
ret
mov
xor
inc
inc
mov
or
shrb
mov
movsl
jb
sbb
mov
pusha
movsb
adc
inc
scas
cld
repnz
stos
inc
jae
lret
and
roll
inc
repnz
insb
lret
stos
jle
rclb
inc
jb
lock
fbld
mov
dec
xor
jns
das
jl
fwait
sbb
jno
sub
or
daa
add
push
dec
outsb
adc
nop
pop
mov
push
pop
movsb
mov
out
pop
fucom
fisubrs
pop
push
les
pop
mov
cmp
push
ret
or
mov
push
inc
popf
dec
daa
cltd
mov
divb
sbb
lods
sbb
ficoms
stos
sbb
cwtl
lods
pop
test
mov
lock
mov
or
fucom
adc
cmpsl
mov
insl
xor
xchg
xor
and
les
jo
and
cmc
mov
cmp
fidivs
sbbb
mull
sbb
mov
jmp
dec
out
stos
sub
fwait
sarb
gs
sbb
or
push
icebp
test
ja
push
adc
or
in
sbb
and
xchg
in
ljmp
xor
adc
and
adc
xchg
loope
pushf
imul
sbb
pop
scas
aas
subb
lea
clc
pop
add
cld
pop
jb
aam
mov
into
movsb
aad
cmp
inc
bound
jge
xchg
mov
fwait
sbb
push
lea
and
mov
dec
xchg
stc
sub
aaa
and
jp
xchg
adc
movsb
mov
or
cmp
aad
mov
xchg
xchg
or
shrl
sub
into
fldcw
jb
repz
pop
and
mov
xor
inc
xchg
sub
add
add
inc
ds
stos
gs
loop
shll
or
out
adc
cwtl
xchg
push
and
enter
mov
cli
or
dec
insl
cmp
mov
sub
and
mov
loopne
inc
sub
fistpll
aas
dec
inc
icebp
jp
aas
jns
push
cmp
sbb
lcall
mov
pop
and
sbb
movsb
xchg
mov
mov
aas
mov
jbe
dec
sbb
jae
shlb
push
cs
add
in
lock
mov
pop
imul
xchg
cmp
test
iret
roll
sbb
mov
jg
or
inc
mov
xchg
call
test
lea
mov
repz
jb
dec
jmp
xacquire
push
cwtl
loopne
xlat
cld
ljmp
mov
test
push
fld
push
mov
ret
je
mov
push
sbb
imul
testb
imul
sbb
sahf
testb
mov
in
mov
jne
dec
test
sbbb
cld
xorl
and
push
sub
xor
in
lret
movsb
stos
cmp
ja
int
scas
icebp
mov
push
mov
sub
loopne
testl
lea
inc
je
in
rcll
inc
jns,pn
outsb
dec
mov
pop
ljmp
sub
lret
stos
aad
pop
inc
arpl
shrl
push
add
pop
jns
ljmp
lahf
clc
shll
inc
mov
add
sub
and
int
cmp
jg
mov
pop
adc
call
fldt
sub
xchg
or
outsb
lret
xchg
dec
dec
jne
fidivrs
adc
and
pop
sbb
inc
sbb
fldl
push
cmp
sbb
std
pusha
jnp
dec
adc
rcrl
mov
xchg
sub
mov
arpl
decl
fcom
movsb
outsl
xchg
leave
rol
mov
sbb
mov
std
mov
aaa
sahf
rcll
gs
xchg
mulb
xchg
stos
pop
jae
inc
and
sub
dec
repz
cmp
aas
jbe
aaa
test
mov
loopne
sub
dec
mov
xchg
mov
ss
iret
pop
leave
out
inc
daa
jns
sub
xchg
out
dec
mov
mov
je
xchg
lea
push
int
jle
xchg
in
push
data16
cmpsl
sbb
cmp
les
adc
xor
dec
sbb
cmp
enter
cmp
mov
arpl
xchg
stos
divb
adc
and
pop
mov
inc
cmpsb
mov
iret
mov
inc
dec
xor
out
lahf
scas
fisubrs
bound
je
jns
out
xor
push
adc
icebp
out
shll
or
addr16
stos
je
sbb
add
lret
mov
pop
ja
imul
xor
fistps
cwtl
test
and
jae
cmp
cmpsb
shll
mov
test
aaa
scas
cltd
pop
dec
lds
subb
adc
aas
pop
adc
inc
sub
or
cmp
add
icebp
mov
arpl
in
sbb
movsb
mov
pop
pop
sbb
cmpsb
or
mov
popf
fs
jl
cmpsb
xor
jg
xchg
and
ret
mov
mov
cwtl
xchg
or
push
add
xor
mov
das
pop
xor
pusha
test
inc
pop
pop
mov
sbb
dec
fldcw
inc
mov
or
flds
pop
loop
nop
dec
hlt
arpl
pop
ficoms
mov
or
je
mov
push
int
mov
xor
mov
xchg
or
and
jge
jns
mov
sbb
xchg
xor
inc
aaa
les
outsb
orl
adc
or
mov
cli
clc
push
dec
inc
repnz
loopne
jl
aad
sub
ljmp
push
mov
and
sbb
jb
mov
and
into
xchg
mov
inc
push
pop
fmull
das
in
imul
or
fidivs
jecxz
xchg
dec
jle
loop
sbb
sahf
and
je
push
xor
lahf
cmpsl
pop
dec
ja
push
sub
movsb
cmpsl
add
mov
lret
cmp
test
out
incb
loopne
je
lcall
jecxz
add
ficoml
gs
jb
addb
xchg
pop
fiaddl
ljmp
and
psubusw
cli
xor
imul
dec
sbb
jecxz
push
xor
in
test
cmp
xor
ret
add
and
loopne
sbb
in
xchg
fs
cli
loop
call
cwtl
xchg
mov
xchg
push
test
xor
cli
inc
pop
cld
popa
xchg
js
jg
jno
dec
ret
jmp
sub
std
pop
lods
aas
cmp
mov
pop
push
add
out
gs
xchg
or
arpl
jno
setp
mov
lret
and
push
push
xor
insb
fmuls
bound
jecxz
add
adc
es
sbb
nop
dec
adcl
ret
inc
inc
xor
lods
or
nop
pop
out
addr16
jb
or
or
fnstenv
push
pushf
mov
js
pop
ret
lea
shl
lgs
into
push
shll
ja
and
divl
in
lods
inc
jmp
mov
leave
ds
outsb
popa
unpcklps
daa
in
sub
add
gs
hlt
out
repnz
addb
les
cmp
sbb
int
gs
arpl
add
mov
aad
add
mov
mov
adc
fwait
out
repnz
sbb
repnz
pushf
outsl
xchg
test
loopne
dec
icebp
out
push
push
sbb
hlt
std
add
sarl
xor
aam
fcmovbe
dec
mov
jg
nop
insl
add
outsl
jl
out
cmp
dec
mov
sbb
push
rorl
mov
push
sbb
adc
in
xchg
cltd
pusha
dec
into
ficompl
jne
mov
cmp
jnp
mov
mov
pop
lahf
icebp
sub
dec
xchg
aas
push
add
ljmp
into
mov
jl
stos
jo
add
xchg
mov
xchg
xchg
push
leave
xchg
and
mov
ret
mov
sbb
scas
test
mov
xchg
test
mov
mov
iret
pop
adc
cli
push
push
sub
aaa
mov
std
test
add
ret
mov
sub
lret
push
inc
push
stc
or
mov
aaa
mov
cmp
mov
and
or
mov
test
inc
fisubl
xor
push
mov
bound
stos
adc
xor
pop
add
push
sbbb
and
rorb
mov
or
mov
das
enter
mov
sbb
adcb
stc
push
push
lock
loope
add
scas
std
ds
adc
stc
stc
lds
cmpsb
jo
xchg
pop
mov
inc
jbe
adc
data16
inc
fwait
jle
or
je
dec
inc
gs
adc
dec
inc
jbe
sbbl
push
pushf
sbb
push
data16
les
and
sti
leave
adc
inc
cltd
sbb
xchg
dec
mov
icebp
sub
xor
sbb
push
or
mov
fcomps
nop
cmc
call
push
jecxz
cmc
test
jle
jge
dec
ss
ja
pop
xor
imul
in
cmp
dec
jo
jp
notl
push
adcl
xlat
daa
lahf
sar
ficompl
lds
push
jns
dec
ret
sub
rolb
fmull
add
mull
xchg
pop
or
test
lods
mov
leave
jg
ss
jecxz
lods
lahf
xchg
das
cmpsl
je
jae
mov
negl
xorl
pop
ret
stos
sub
inc
jecxz
and
jl
stos
js
pop
fldl
push
aas
pop
enter
xor
push
inc
mov
es
lods
mov
divb
mov
inc
in
adc
loop
pusha
mov
mov
daa
push
imull
shlb
push
loopne
sub
or
push
inc
in
ret
xchg
insb
lret
cmpsb
dec
testb
sbb
std
fwait
mov
jno
or
push
rcl
fstpl
cltd
cmpsl
mov
gs
orl
dec
gs
mov
popa
arpl
cmpsl
sti
dec
jbe
inc
je
jns
xor
fs
jo
mov
lds
fiaddl
xor
sbb
sub
xchg
push
shr
outsb
dec
ss
mov
cmp
stc
xor
lock
and
js
xchg
dec
jnp
test
imull
sbb
nop
jae
push
adc
mov
sbb
out
xor
cmp
inc
lret
test
fs
test
mov
nop
call
sbb
divb
mov
rcrb
out
cmp
and
enter
push
dec
cwtl
shll
dec
aaa
push
mov
lahf
pop
test
sbb
mov
imul
out
lods
mov
into
push
enter
mov
js
nop
cmp
push
cli
mov
xchg
fldenv
nop
mov
cmp
stos
jns
push
fs
into
cmp
mov
jg
leave
sub
cmpb
inc
push
aad
jmp
mov
out
lret
cmpsb
push
pop
or
loop
cltd
xor
clc
sub
sbb
and
das
cmc
test
push
std
js
push
stos
xor
test
cmpsl
mov
call
jns
mov
inc
sahf
lock
pop
push
jnp
inc
and
shr
test
sub
bound
lea
loopne
out
xchg
jnp
mov
int3
cmp
xchg
ret
push
add
jg
rcll
lret
lods
mov
mov
out
push
mov
fdiv
mov
push
popa
lcall
in
inc
ja
mov
mov
push
dec
cmp
je
jnp
fdivs
out
xor
fmuls
xchg
mov
rolb
pusha
and
xor
jmp
cmpsb
cmpsb
loopne
jl
inc
ret
sarb
aad
iret
mov
cmp
icebp
jb
clc
in
dec
out
sub
inc
loop
xchg
cltd
sub
ds
out
fcoml
cli
mov
cmpsl
mov
in
sub
inc
jae
test
inc
mov
test
test
insl
add
scas
adc
js
adc
dec
push
dec
dec
lds
lret
icebp
ds
shll
cld
add
fbstp
mov
sub
cmpl
jbe
cmpb
out
pushf
dec
xor
add
mov
push
xchg
add
jge
outsb
sub
mov
std
push
imul
push
in
xchg
test
lods
jae
stos
mov
mov
adc
mov
lea
push
xchg
les
xlat
fnstsw
dec
in
mov
shlb
mov
repz
pop
xchg
adc
cmp
push
pop
fiaddl
rolb
lods
pop
loope
cmp
xor
popa
jo
dec
sub
cwtl
mov
out
push
imul
dec
lcall
pop
shlb
and
insl
or
jno
sub
adcl
out
mov
inc
fdiv
lods
lock
sbb
iret
pusha
xchg
mov
lock
test
mov
inc
fdivrs
jmp
sbb
dec
cltd
xchg
cltd
adc
pop
push
test
js
lds
push
sbb
je
sub
out
je
gs
mov
les
adc
outsl
dec
pusha
push
das
ljmp
inc
jecxz
adc
cld
mov
jg
clc
fcoms
pusha
dec
sbb
ficompl
das
lea
xor
call
or
lcall
fs
adc
sbb
and
adc
pop
pusha
mov
inc
faddl
scas
and
movsl
popa
cmp
xchg
daa
lret
xchg
adc
imul
ja
mov
mov
je
incb
jle
hlt
lods
std
xor
fmul
cmp
icebp
sub
cs
xchg
push
xor
push
shr
mov
dec
pop
jo
adc
imul
outsb
mov
sub
jns
hlt
out
cmp
div
inc
pop
adc
push
fistl
enter
hlt
add
lret
imulb
call
xlat
xor
dec
inc
das
lea
push
jb
mov
aad
test
adc
testb
sub
or
daa
xlat
punpckhdq
dec
subl
mov
dec
hlt
js
test
int3
mov
enter
stos
sub
outsl
loope
pop
out
jmp
aad
repz
das
xor
stos
outsb
mov
bnd
sbb
int3
pop
or
adcb
shr
jl
pushf
cmp
mov
jmp
cmp
push
mov
inc
add
and
jecxz
scas
lock
sub
fbld
add
push
into
mov
xor
sbb
pop
inc
imul
hlt
icebp
vmwrite
sbb
aad
cld
jae
push
ljmp
andl
aam
cwtl
and
call
mov
out
stos
xchg
sti
aad
pop
add
dec
inc
mov
sub
mov
outsl
cli
xchg
out
clc
xor
cmp
lods
jmp
inc
or
adc
in
popf
cmc
shll
lahf
add
add
mov
rorl
lret
sbb
jnp
pop
in
pop
addr16
and
fiadds
andl
sub
cmpsl
jo
dec
fiadds
mov
xor
add
mov
dec
and
mov
push
pop
xchg
arpl
leave
roll
inc
mov
bound
fadds
add
and
int3
inc
call
ss
js
jns
mov
mov
adc
adc
jo
mov
movsl
ljmp
popl
push
jp
test
imull
and
push
dec
lcall
movsl
or
push
push
pop
add
push
sbb
mov
adc
mov
jne
sbb
xor
mov
and
repnz
lea
xor
test
inc
and
popf
aaa
leave
shll
out
jbe
push
es
jbe
out
fsubrs
mov
test
xchg
xor
jbe
sub
cmp
and
arpl
mov
sbb
enter
dec
mov
into
popf
fsub
adc
call
imul
das
mov
or
push
cs
pusha
xchg
and
flds
dec
pop
pop
cld
loope
je
hlt
repz
or
and
outsb
add
sub
push
sbb
loope
mov
pop
in
push
mov
aad
in
add
push
mov
mov
add
pop
cmpsb
pop
stc
sar
outsb
cmp
sub
push
ror
mov
mov
xchg
adc
fs
insl
xchg
clc
adc
lds
pop
push
aam
fwait
scas
mov
iret
loopne
pop
sbb
fwait
sbb
dec
imul
add
push
or
dec
out
sarl
lods
mov
jg
aam
cmp
xchg
add
and
add
rcrl
sbb
or
rcrb
mov
loop
pop
xor
cld
push
mov
rorl
dec
cmp
inc
sti
mov
es
test
dec
lret
decl
idivl
outsb
sub
xchg
push
sbbb
lock
aam
inc
pop
push
lea
gs
xchg
or
mov
rclb
bnd
fnsave
sub
lock
push
cmp
pop
ljmp
pop
push
pop
enter
scas
dec
loope
fdivr
mov
inc
setb
mov
push
mov
mov
cmp
test
stos
call
aam
and
shlb
sbb
scas
repnz
lahf
or
push
xchg
or
aas
pushf
fdivl
in
sbb
jns
cmpsl
sbb
mov
nop
xchg
or
mov
aam
int
xchg
xchg
add
scas
in
mov
xchg
popf
popa
or
ds
ja
xor
inc
inc
and
insb
outsl
jg
push
ss
clc
cmc
adc
je
mov
xchg
fbld
xor
jl
push
fnstcw
mov
sub
fstl
fnstsw
lahf
mov
aas
movaps
jae
ljmp
jae
stos
js
mov
ret
xchg
xchg
lea
inc
jns
pusha
cltd
jbe
incl
adc
call
adc
ret
cvtps2pi
data16
mov
jmp
mov
subps
mov
dec
mov
inc
dec
or
add
nop
jl
adc
lahf
sub
pop
dec
sub
fneni(8087
mov
cmc
popfw
sbb
inc
push
cmp
adc
cmp
leave
mov
pop
stos
aas
or
mov
inc
inc
inc
and
sub
xor
lahf
mov
ret
pop
and
lock
push
sbb
scas
sti
or
int
stc
int3
lret
mov
lea
stos
inc
ja
fwait
sub
pushf
mov
cmp
and
xchg
or
sbb
outsb
add
hlt
icebp
lods
iret
insl
push
push
adc
lods
pusha
fcoml
sub
mov
sbb
push
mov
shlb
dec
je
xchg
push
sub
jmp
lret
mov
testl
mov
cmp
sti
shlb
push
out
mov
jmp
mov
ret
out
jae
sbb
out
mov
pop
sub
out
pop
sahf
hlt
popf
cmp
xlat
jge
jmp
scas
pop
or
mov
addb
mov
or
xorl
lods
ljmp
je
cmp
xor
shr
scas
outsb
call
adc
scas
mov
push
and
jmp
rolw
push
inc
or
call
push
and
sub
and
loopne
mov
pop
lea
add
dec
rorl
push
mov
lds
adcb
lea
inc
pop
lahf
test
loopne
xchg
push
lock
add
adc
mov
lock
shll
sub
dec
xor
or
fxch
mov
js
cmp
stc
add
test
jp
sbb
mov
push
test
sahf
lcall
add
imul
pop
add
xchg
xchg
jge
push
popa
jp
lret
mov
mov
addb
dec
push
and
dec
addr16
daa
loopne
scas
scas
nop
adcb
xlat
jb
cmp
cmp
in
mov
add
inc
mov
lcall
pop
outsb
bsr
daa
jmp
cmpsb
popf
out
jae
add
push
xor
lods
hlt
or
and
std
fwait
orw
ds
cmpsl
push
adc
loopne
imulb
dec
mov
sbb
dec
iret
cmp
push
test
xchg
std
cmp
adc
mov
xchg
inc
pusha
jns
fstp
xchg
sub
xchg
int
out
jle
push
ds
dec
stc
adc
mov
cmp
pushf
xor
in
jns
insl
mov
pop
sub
idiv
push
push
scas
mov
and
mov
pop
loopne
dec
sub
xor
test
pop
jns
mov
fxch
dec
lods
push
mov
pop
leave
popw
addb
add
push
stos
adc
and
dec
mov
daa
mov
inc
mov
mov
sub
lret
cmp
dec
aad
mov
nop
cmp
mov
js
fldt
sahf
add
mov
fiadds
dec
inc
xor
lcall
pop
flds
stos
stos
outsb
cwtl
in
cli
clc
subl
cltd
js
sti
sub
push
je
inc
scas
negb
cltd
test
inc
mov
xchg
sub
push
ret
sbb
or
xor
aam
cmc
dec
les
cld
xlat
cltd
push
incb
adc
imul
dec
mov
and
push
loopne
ljmp
sbb
push
aad
inc
aaa
loopne
add
dec
int
shll
sti
popa
daa
stc
or
cld
subb
repnz
add
pop
sbb
add
clc
push
xchg
xor
jmp
jb
lret
lahf
loope
cmp
mov
mov
cmp
test
add
pop
rorb
jp
out
out
add
pusha
add
mov
cmp
mov
scas
in
test
jb
dec
and
leave
jno
nop
scas
sub
or
xchg
fcoms
jle
or
imul
lods
es
aam
push
sbb
sahf
data16
out
ja
bound
adc
pop
mov
out
and
daa
leave
lock
and
xchg
stos
imul
jae
push
mov
cmp
nop
test
xchg
adc
xlat
mov
rcrb
fcomp
into
aas
push
or
scas
nop
loopne
in
xor
repz
mov
decb
push
xlat
cmpsb
push
sbb
jbe
popa
popf
mov
mov
aad
sbb
sbb
popw
sub
mov
out
and
imul
test
sbb
testb
lcall
xor
jns
push
int3
sti
js
cltd
hlt
movsb
cmpb
xor
loop
inc
gs
jmp
or
rorb
pop
pop
pop
loopne
sti
and
in
inc
lds
adcl
inc
out
fcomip
movsb
imul
loopne
leave
inc
andl
mov
sarb
pop
push
nop
aam
in
dec
lds
mov
mov
popf
int3
out
mov
inc
dec
jo
jge
pop
mov
insb
sub
cs
pop
pop
add
call
icebp
or
jo
dec
gs
jbe
pop
outsb
xor
mov
ret
xor
xchg
dec
nop
sbb
and
test
xchg
or
ficompl
data16
xchg
sub
je
xchg
push
push
sbb
imul
sbb
push
mov
xchg
and
outsl
jmp
cltd
jnp
add
ljmp
scas
cmc
xchg
adc
sub
data16
jecxz
pop
xlat
stos
sbb
neg
decb
addr16
or
mov
movsb
pabsb
add
js
dec
ret
scas
fdiv
ret
scas
sbb
in
or
pop
cli
mov
mov
push
lea
mov
andl
lods
stc
test
sbb
aas
sahf
leave
imul
push
pop
pop
cmpsl
shll
cs
or
push
js
adc
adc
push
int3
dec
inc
pop
addr16
repnz
mov
mov
push
sbb
mov
jbe
loope
fstpl
mov
mov
cmp
frstor
in
in
fwait
adc
stos
scas
pop
push
icebp
popa
lret
mov
arpl
std
inc
in
or
or
or
jbe
mov
cmp
call
adc
add
dec
test
xchg
cli
xor
or
push
lds
gs
push
mov
add
jl
pop
jmp
mov
jp
push
negb
sbb
xchg
xor
out
pop
pop
xchg
xor
jnp,pt
js
mov
ljmp
test
inc
pusha
cmp
or
pop
xchg
dec
leave
faddl
ret
scas
cli
into
insl
mulb
xor
arpl
xchg
adc
jmp
mov
adc
js
aas
insl
popa
sub
jns
push
jmp
mov
rol
inc
dec
rorb
leave
imul
in
ret
lret
mov
cmc
pop
aas
lret
push
sub
add
inc
mov
jb
mov
adc
lds
pushf
jno
pop
jnp
push
dec
cmp
ljmp
or
stos
jecxz
leave
push
cmp
loopne
inc
fstps
je
mov
pop
add
xchg
pop
enter
fsubrp
leave
push
lods
push
push
push
mov
mov
leave
enter
xchg
sti
cmp
arpl
xor
cmp
arpl
inc
psubq
dec
sub
mov
add
filds
push
add
cld
sbb
rcll
and
loop
mov
sbb
or
sbb
mov
xor
xchg
jp
sbbl
pop
repz
imulb
icebp
out
and
test
mov
xchg
out
test
loop
push
cmp
sub
jmp
inc
and
push
int
mov
xor
fs
mov
xor
push
out
push
subl
addr16
clc
fstl
jle
cwtl
mov
adcl
dec
addr16
mov
out
or
fsubrl
adcb
in
mov
jo
out
fs
cmpsl
push
inc
stc
sti
dec
addl
mov
sub
out
outsl
mov
push
es
fsubl
pop
scas
shl
inc
sbb
mov
pop
enter
pop
mov
dec
xor
imul
in
ret
mov
pop
and
add
sbb
push
enter
test
mov
mov
mov
pop
sub
dec
test
mov
scas
popf
clc
add
push
sbb
add
test
fdivrs
leave
xchg
fs
inc
shl
aaa
scas
mov
mov
lret
xorl
add
clc
ret
cmp
cmc
rcrl
mov
jp
movsb
lock
jle
sbb
popa
push
andl
sub
mov
aaa
and
clc
rep
shrl
testb
into
loop
xor
push
adc
fdivrs
out
movsl
dec
shr
inc
test
shrb
shll
fdiv
out
sub
xchg
dec
xchg
sarb
arpl
or
int3
testl
in
sub
pop
add
sbb
sbb
leave
inc
mov
xor
jae
int3
dec
sbb
push
xor
mov
out
addr16
sbbb
cmp
dec
push
push
push
test
das
out
loopne
scas
insl
jae
lret
add
int
wrmsr
cli
mov
in
inc
subb
dec
out
ss
jns
repz
or
pop
and
lret
xchg
mov
addl
lock
mov
stc
jo
sub
ficompl
xor
aas
mov
es
push
add
add
push
loop
cmp
push
push
pop
dec
movsb
int3
jge
jl
fucomp
pop
mov
xchg
rcrb
push
outsl
cmp
imull
pop
inc
sahf
sahf
es
popa
xchg
sbb
xchg
gs
cmp
jmp
arpl
ds
jle
inc
cli
jmp
in
hlt
dec
sub
push
pop
shll
mov
scas
test
lea
sub
pop
mov
test
in
mov
jp
jno
or
push
xorb
sub
mov
notb
xchg
lcall
dec
cmp
icebp
movsl
jge
rol
lea
repnz
clc
pushf
into
adc
and
push
mov
jbe
lock
stc
jne
pop
sub
cmp
lea
cmpsb
jne
ficomps
mov
add
jns
and
xor
out
and
outsl
rolb
rorb
or
insl
stos
pop
insb
fnsave
sub
outsb
mov
add
daa
xor
rorl
xor
sti
cs
xor
mov
sub
jbe
mov
loop
jl
push
mov
insb
pop
sbb
mov
mov
mov
data16
mov
inc
inc
push
push
leave
mov
xor
add
add
shrb
mov
mov
sub
movsb
sub
roll
mov
sti
popa
and
push
sbb
xchg
aam
mov
inc
jl
pop
jbe
enter
loope
lahf
and
push
nop
imull
cltd
pop
add
test
adc
mov
xor
inc
sub
sub
test
sub
repnz
leave
mov
sub
pop
pop
movsb
jmp
stc
decl
xchg
xchg
iret
orl
aad
xor
das
cs
cld
cmc
adc
mov
outsl
fidivrs
lock
hlt
pushf
mov
inc
pop
jo
fimuls
ja
popf
mov
in
xor
andb
test
adc
mov
mov
push
jp
inc
sub
sub
sub
sub
rcl
jle
inc
adc
pop
repz
adc
out
ss
xor
dec
in
dec
in
outsb
mov
jmp
xchg
lock
or
int3
jp
sub
rolb
sbb
repz
jp
out
push
pop
mov
xchg
in
cmpsl
mov
insb
push
aaa
and
daa
outsl
mov
inc
mov
pop
out
sub
mov
xor
mov
sub
in
sub
popf
dec
rcll
jecxz
add
fdivs
jmp
cwtl
imul
mulb
cld
lock
cld
bound
test
dec
and
pop
aas
popf
lret
mov
jecxz
pop
jmp
push
lock
shl
hlt
cmc
or
mov
add
inc
fnstsw
out
fs
and
ret
js
int
outsb
or
mov
dec
out
jge
fucom
mov
and
lods
std
sahf
push
lret
jl
jbe
bound
testl
sub
imul
lret
and
mov
addb
ljmp
in
std
leave
cmpl
adc
mov
mov
xor
addb
jmp
mov
mov
push
aad
lods
add
test
es
decl
push
cmpsl
jnp
cld
jbe
inc
pop
imul
mov
imul
xchg
aas
sbb
dec
mov
mov
imul
xchg
xor
mov
push
loop
xchg
pop
sbb
hlt
lods
dec
push
mov
fsubs
xchg
or
sbb
inc
push
aas
sti
push
in
mov
xchg
mov
lds
mov
push
mov
call
cmc
inc
mov
hlt
or
hlt
mov
xor
mov
sub
or
jne
mov
test
pop
mov
sub
cld
and
or
into
add
repnz
movsb
add
cld
xchg
sub
popf
loopne
dec
sbb
xor
testl
dec
insb
cmovns
pushf
test
arpl
mov
insb
mov
test
bound
ret
loope
mov
xchg
xor
jp
mov
sub
out
iret
sti
xchg
cmc
fdivrs
mov
shrl
sbb
aas
in
jl
pushf
adc
adc
mov
subb
push
inc
leave
dec
hlt
ret
push
psubsw
or
jo
mov
dec
pop
dec
inc
ja
fimull
cmp
ficoms
xchg
imul
imul
cmp
movsb
inc
xchg
mov
pop
inc
dec
inc
sub
cmp
out
pushf
jno
das
sti
rcr
inc
dec
repnz
idiv
ljmp
fs
and
fbld
push
ss
stos
push
dec
mov
clc
xchg
std
and
add
jne
add
xor
outsb
stc
add
outsl
add
aad
jle
pop
and
dec
jbe
fwait
ljmp
int3
mov
sbb
rcrl
xor
inc
enter
ljmp
cmp
imul
xor
sbb
cmp
add
add
xor
jno
push
imul
cmp
xor
xor
adc
shrb
dec
cmp
ja
and
xchg
nop
pop
jne
inc
repnz
cwtl
jo
int
pop
xchg
cltd
addb
mov
movsl
and
leave
int3
xchg
fwait
outsb
mov
cmp
xchg
rcr
add
sbb
fs
mov
in
adc
popf
popa
mov
push
out
nop
aam
fiaddl
mov
mov
arpl
jl
dec
mov
into
push
jnp
push
loopne
test
iret
in
xchg
mov
sub
fsubr
das
xor
xor
adc
loop
in
pop
insl
xlat
pop
lcall
std
and
add
inc
sbb
and
push
mov
or
repnz
mov
pop
pop
pusha
jmp
cmp
bound
pop
and
dec
ret
rol
je
mov
das
dec
adc
orl
mov
inc
dec
ret
icebp
mov
mov
mov
mov
xor
sub
out
push
enter
jno
fcomps
lea
outsl
lea
mov
movsl
jae
inc
add
shll
loop
adc
leave
icebp
aas
xor
cs
or
ja
pushf
fwait
inc
lods
sahf
div
inc
adcb
add
push
dec
xor
repnz
popa
pop
push
xchg
ret
lds
xor
push
push
call
aaa
lcall
dec
test
add
rorl
xor
lods
out
add
xor
shlb
bound
xor
inc
and
sahf
cmp
stos
call
nop
test
loop
sub
cmpsb
aaa
xor
in
sbb
sub
leave
es
test
xor
fidivs
ss
sbb
lret
addr16
out
int3
testb
mov
imul
xor
jg
jl
enter
inc
das
inc
shrb
ret
push
test
dec
stc
mov
cmpsl
cs
fistpll
outsb
lea
lea
mov
adc
fwait
pop
shrb
inc
adc
inc
dec
hlt
fiaddl
pusha
sub
cmp
in
sub
sub
sub
pop
add
adc
nop
xchg
pop
push
add
das
add
and
or
popf
and
fwait
imul
loope
cmpsb
inc
imul
mov
adc
push
neg
jmp
mov
notl
adc
xchg
add
adc
out
xchg
subl
jno
inc
mov
sbb
xor
pop
imul
jle
or
pop
rcrb
jno
ret
add
notb
lea
xchg
pop
push
or
adc
adc
push
dec
enter
outsl
test
rcll
lahf
push
in
scas
shlb
in
and
ljmp
dec
jecxz
xor
add
in
pop
hlt
loop
jo
je
aas
notb
and
xchg
mov
out
and
in
subb
mov
xor
icebp
inc
inc
mov
test
cmpsb
ret
sbb
sti
dec
or
xor
mov
xorb
sti
lret
enter
dec
repz
icebp
mov
fs
dec
and
lods
sub
jnp
dec
ret
xchg
sub
fcoms
jns
jno
jl
cmp
je
mov
mov
xchg
sub
nop
adc
adc
push
lahf
stos
arpl
add
lea
mov
test
or
xchg
int
repnz
dec
or
and
insl
inc
mov
mov
bound
ficompl
add
jmp
jg
push
dec
jp
xorb
jmp
sub
mov
inc
rcrb
mov
sahf
sub
loop
mov
jns
orl
cli
adc
int3
addr16
mov
jae
inc
push
lcall
xchg
xchg
test
loopne
or
xor
or
popl
and
add
fildl
sub
sbb
adc
cwtl
cmp
shr
and
inc
in
mov
mov
mov
add
xchg
xchg
fsubrl
xlat
imull
stos
loopne
mov
pushf
movb
dec
jae
inc
outsl
repz
push
jle
xorl
add
sub
stos
xor
iret
movsl
sub
xor
xlat
aaa
and
repz
aas
cmc
addb
push
daa
mov
das
mov
cmp
or
fistpll
xor
orl
inc
cmp
shrb
sbb
cmpsb
cwtl
ret
out
outsl
xor
sar
or
popa
daa
cld
pop
sbb
ret
decl
mov
loop
imul
mov
mov
call
bound
sbb
sub
lret
push
out
nop
ljmp
stos
jmp
out
push
inc
xchg
fwait
mov
das
and
dec
push
scas
mov
jo
jo
mov
or
ds
jns
sbb
dec
fildl
xorl
jmp
in
cmp
fcoml
rcr
push
test
movsb
inc
jle
add
cld
sub
sbb
sub
cmp
or
popl
xchg
or
scas
lds
and
pop
fs
gs
pop
imul
lods
xchg
inc
mov
cmp
hlt
in
scas
and
shrb
jne
pop
and
xor
popa
or
int
lods
sbb
cli
cmp
lea
cmp
sub
popf
xchg
push
inc
mov
repz
sub
dec
iret
loope
cmp
insl
mov
jae
cmc
add
sub
jge
filds
xlat
jecxz
mov
aas
adc
cmp
int3
xchg
xor
and
mov
out
pop
fucom
xchg
repz
lret
lea
sub
cmpsl
dec
pop
into
testl
inc
dec
fadds
cmpsl
push
mov
fwait
pop
sub
aam
mov
or
fisubs
sub
lret
adcl
xchg
scas
rcll
cmp
xchg
jb
push
jns
incb
mov
les
cmpsb
das
adc
sti
jmp
and
js
lret
inc
mov
arpl
dec
sbb
xor
jg
out
push
and
hlt
push
sbb
push
mov
add
xchg
pop
push
loope
dec
mull
aas
rcrl
jns
xchg
lret
and
push
add
test
or
sub
ss
shr
repz
imul
cmpsl
and
mov
lret
cmpsl
cmp
inc
arpl
fdivrl
mov
test
push
lods
les
sub
clc
insl
pop
repnz
std
and
adc
int3
loop
lods
jno
fwait
mov
scas
daa
insb
cmp
mov
pushf
mov
outsb
insb
mov
pop
jge
daa
ja
xchg
sub
fs
cmp
mov
fldt
lock
cmp
and
or
mov
jle
inc
and
add
je
iret
pop
adc
lret
ja
cmp
divb
mov
push
mov
in
sbb
xchg
ret
push
lret
stc
cmp
clc
mov
bound
adc
test
jo
mov
test
aas
and
add
mov
xchg
dec
das
cmp
push
mov
mov
loope
inc
jl
arpl
push
das
scas
add
out
xchg
ret
jecxz
push
add
lea
scas
cs
movsb
test
ret
xor
push
lahf
jp
sbb
lret
mov
popl
nop
loopne
inc
xor
push
dec
pop
std
ret
ret
dec
lds
in
repnz
cmp
arpl
cmpsb
inc
into
push
pop
cs
xchg
in
or
jl
and
sub
mov
leave
pop
and
stc
mov
popa
pop
pop
xor
lcall
push
mov
or
pop
or
sbb
stos
mov
or
mov
cmp
sar
mov
int3
push
test
mov
es
add
stos
adc
xchg
mov
xor
cmp
xor
sbb
cs
hlt
outsb
icebp
lock
cmpsb
fsts
mov
pop
mov
inc
inc
xor
scas
adc
lea
test
push
xor
lea
cs
fidivrl
and
push
dec
and
mov
mov
mov
add
je
xor
push
inc
testl
dec
rorb
mov
adc
loop
iret
add
insb
xor
push
and
mov
in
mov
mov
jae
sbb
push
mov
push
lea
mov
imul
loopne
lahf
cmc
jne
imul
addb
stc
and
fistps
or
mov
clc
cwtl
lea
xchg
mov
int3
mov
jmp
stos
sub
pop
cs
cmp
inc
push
rorl
jbe
or
loopne
test
and
dec
ss
sbb
add
out
sub
out
test
gs
pop
clc
pushf
fwait
cmp
push
mov
test
pusha
sbb
lods
lods
jno
int
hlt
sbb
ss
fdiv
dec
loop
ss
stos
bound
int
gs
pushf
xchg
test
sbb
push
adc
movsl
push
push
movsl
bound
test
pop
jecxz
sti
ljmp
cmc
push
add
loopne
fcomp
mov
scas
ret
fs
or
jg
inc
lock
push
faddl
xchg
push
push
popf
fmuls
cmp
pop
jo
jne
pop
call
add
das
mov
in
inc
xchg
scas
mov
jl
popf
out
cmpsb
cltd
int
hlt
adc
cmp
enter
mov
mov
ljmp
push
lret
sarb
or
inc
push
inc
jl
or
std
or
pop
lcall
pop
je
lods
stc
in
jp
aaa
cs
xor
adc
in
adc
fs
pop
repz
cmp
out
rcr
mov
inc
lock
cmc
movsl
call
fdivrs
addr16
loop
and
int3
mov
aas
aaa
push
pop
sahf
adc
bound
jge
pop
jmp
jmp
out
ret
bound
std
sbb
jg
mov
shrl
jno
jnp
insl
popa
mov
and
push
idivl
loop
test
cld
jmp
in
das
in
xchg
fstpl
jns
adc
pop
daa
popf
cmc
subl
sbb
adc
mov
adc
mov
jbe
mov
lret
shrb
mov
ret
stos
mov
out
fsubrs
inc
fmul
out
loop
add
aas
pusha
adcl
rorb
jno
pop
adc
sbb
xor
sbb
pop
dec
sbb
leave
movhlps
mov
or
addr16
daa
pushl
add
loope
fwait
inc
gs
mov
out
jp
cmp
push
shrl
dec
ljmp
in
mov
out
in
sub
fwait
test
push
pop
adc
push
notl
mov
pop
push
emms
movsb
mov
stos
imul
add
jo
mov
sbb
xchg
cmp
xchg
mov
xor
daa
xchg
push
inc
add
adc
cmp
addb
adc
inc
adc
dec
push
test
dec
loope
mov
mov
cmc
sub
or
popf
sbb
das
rcrl
sahf
mov
cmp
lcall
stc
loopne
cmpsb
leave
sbb
rcr
jns
sti
jmp
mov
and
imul
cmp
or
je
push
insl
lret
cmp
xchg
and
xchg
pop
gs
fidivrl
nop
xor
mov
dec
or
mov
sbb
mov
jb
pop
lret
inc
inc
jo
inc
setl
and
and
pop
lock
xorb
adc
pop
cmp
lds
push
or
cmp
adc
pop
xor
xor
popf
push
xchg
outsl
adc
iret
pop
jnp
sub
jmp
mov
or
adc
dec
sbb
enter
add
lahf
mov
push
or
xchg
inc
pop
ss
and
cld
inc
inc
inc
mov
insb
xchg
xchg
mov
setp
js
dec
mov
jl
xchg
loopne
das
jecxz
icebp
lds
repz
into
mov
js
lret
scas
sub
sbb
call
xchg
ss
jns
ficoml
pop
fsubrp
jb
stos
orl
push
and
addb
jmp
and
lock
inc
lahf
hlt
mov
push
push
out
and
lcall
ljmp
into
ret
lret
or
pop
dec
mov
shll
cltd
test
xor
ds
cmpsb
leave
mov
inc
outsl
inc
or
push
cmpsb
cmpsl
imul
rcll
or
movsb
popa
cmp
and
inc
jle
call
ror
jnp
add
xor
jbe
mov
loopne
cmpsb
mov
dec
or
jle
ds
mov
mov
jae
or
movsb
gs
pop
outsb
or
jne
mov
pop
sub
popa
loopne
je
cmp
insl
test
pushf
add
rep
mov
mov
jns
mov
and
inc
fcom
aas
icebp
fst
insb
cmp
pop
xchg
mov
out
pop
jle
gs
xor
push
cmp
sarl
iret
push
lea
loopne
push
fs
cmpsb
test
or
pause
push
inc
aas
pop
inc
dec
pop
loopne
sub
lret
sub
dec
bound
jp
cltd
clc
mov
pop
sbb
sbb
insb
add
add
stc
push
jne
subb
sahf
inc
stc
sbb
mov
lret
hlt
jb
ret
cli
mov
stos
out
in
xchg
icebp
icebp
sbb
adc
scas
loope
dec
mov
ljmp
lret
repz
jmp
xchg
adc
es
mov
iret
bound
or
mov
xchg
repnz
out
mov
daa
lahf
xchg
inc
jo
pop
je
popa
data16
jo
pushf
mov
sbb
push
lods
icebp
sbb
pop
dec
aaa
push
rorl
test
dec
cmp
js
xor
arpl
repz
stc
xchg
dec
pop
andl
and
lret
insb
popf
stos
inc
aas
test
lcall
mov
dec
popf
mov
jl
lret
test
jmp
inc
dec
leave
test
sbb
mov
pop
int
mov
xchg
jecxz
mov
cli
inc
in
bswap
jno
xor
xchg
ljmp
ja
push
data16
out
mov
add
movsl
dec
mov
testl
cwtl
imul
xchg
mov
jo
add
xchg
cmpsb
fistpll
jmp
leave
dec
jp
aad
cmp
mov
repz
push
mov
ret
orl
or
cmc
fdivp
push
ffreep
pusha
pop
cmpsl
into
cs
mov
and
xor
int
dec
mov
inc
bound
xor
shr
test
mov
and
mov
insb
movsl
fs
bound
test
push
mov
add
call
inc
stos
push
xor
testl
xchg
add
rcrb
test
scas
push
jmp
ret
push
rolb
or
addb
mull
jae
daa
jge
addr16
xor
sbb
fidivrs
mov
jbe
rorb
adc
ret
inc
scas
xchg
rorl
adc
or
js
test
inc
push
mov
fcoml
cmc
push
xchg
jecxz
pusha
pop
pop
jle
fcmovnbe
sti
mov
inc
or
jmp
pop
popa
dec
sahf
in
das
pop
xchg
js
mov
add
dec
pop
in
pop
and
sbbb
add
mov
jae
add
adc
adc
out
and
mov
add
inc
sub
pop
into
push
adc
es
jb
jle
xchg
xor
pop
iret
inc
sbb
pop
fildll
mov
adc
outsl
inc
inc
xchg
pop
cmp
sahf
imul
movd
imul
lods
ret
cmp
mov
pop
mov
in
or
or
rcr
pop
mov
pop
and
enter
xor
adc
push
out
and
jp
iret
cli
push
mov
orl
xchg
adc
and
mov
mov
fsubrs
insb
mov
addl
sbb
pop
add
jecxz
cmp
sub
int
sbb
aaa
mov
imul
pushf
sub
xor
icebp
movd
xchg
push
mov
js
mov
push
mov
call
push
mov
syscall
sub
loopne
enter
loope
lret
popl
imul
cld
loope
push
lret
add
xor
sub
lcall
sbb
sbb
push
jl
lret
xor
pushf
test
fldt
xlat
xor
cmp
inc
jmp
add
dec
xchg
dec
movups
lods
adc
imul
add
lahf
imul
push
daa
inc
lods
adc
loope
aad
or
sub
sar
and
iret
fisubl
push
xor
fs
xor
out
test
cmp
or
and
pop
movsl
xor
inc
fs
int
inc
inc
jle
dec
mov
rclb
test
leave
sbb
pop
xor
mov
sub
jne
cmc
xor
js
movsl
jnp
das
sbb
xchg
test
inc
pusha
pop
bound
pop
mov
arpl
fdivrs
fsubl
fists
xchg
xor
jg
xchg
pop
lea
jbe
in
orb
dec
xor
xchg
dec
add
arpl
inc
xchg
ja
in
test
test
mov
add
adc
into
fwait
xor
fnstcw
adc
test
mov
shll
sub
xchg
xchg
jecxz
popa
les
in
insb
scas
push
fldcw
adc
sub
inc
inc
mov
sub
cmpl
mov
inc
adc
xchg
test
std
xor
xchg
andb
pusha
repz
inc
and
mov
mov
loopne
pop
insl
test
xchg
pop
arpl
push
add
mov
mov
lods
push
movb
mov
fisttpll
cmp
idiv
fisubs
pushf
cmp
cmpsl
out
xor
mov
lea
xchg
inc
mov
jge
leave
xchg
lock
inc
shlb
repnz
xor
adc
or
sub
mov
mov
mov
stos
add
dec
sub
inc
cwtl
adc
push
xor
jl
into
into
leave
push
aad
frstor
mov
and
aad
stos
adcl
sbb
out
sti
sub
sub
jmp
jo
fdivl
cltd
and
fcomi
jno
xor
out
pop
inc
push
test
pop
adc
add
xor
mov
out
adc
iret
adcb
popf
and
fildll
lods
hlt
fdivrp
std
mov
outsl
fsts
or
lock
movsb
ret
inc
push
or
fadd
insl
pop
xor
mov
xlat
sbb
test
xchg
repnz
scas
pop
jne
stc
jmp
iret
xchg
insb
add
xor
add
add
sti
mov
das
stos
jp
cmc
sub
in
inc
mov
and
mov
cmp
push
push
inc
fidivs
xchg
cmpsl
adcb
shlb
ja
insb
or
jne
dec
inc
mov
push
cmp
icebp
push
lret
mov
pop
cli
sub
dec
cmp
out
jne
das
sbb
xor
pop
and
mov
cmp
out
mov
mov
inc
inc
das
push
insb
lds
cmp
sbb
pop
pop
push
jno
iret
or
jge
jb
cltd
mov
das
dec
push
sub
lea
mov
adc
mov
mov
dec
add
std
pop
repnz
sbb
ja
imul
leave
jge
cld
mov
mov
add
sti
in
fbld
out
in
ret
jo
mov
cmp
and
ror
mov
xorb
jns
pop
and
mov
xchg
cltd
je
movsl
rorb
lods
mov
mov
xchg
nop
sbb
xor
jg
testb
fldt
cmpsb
mov
dec
lea
and
js
fldcw
mov
movsb
std
xlat
xor
dec
lahf
mov
mov
cmp
das
adc
jbe
sahf
mov
pop
xor
stos
arpl
sub
jo
jbe
sbb
or
or
push
pop
ljmp
mov
leave
sub
push
fmull
mov
es
pop
cmpsl
lahf
cmp
cmpsb
push
imul
fdivrl
cmp
inc
ljmp
mov
mov
cs
fmull
movb
mov
fs
cmp
leave
sub
jbe
sbb
cmp
and
add
incb
aad
push
adc
add
mov
sbb
mov
xor
jbe
ds
stos
cmpsb
xor
pop
imul
cmp
fcmovnb
mov
mov
adc
xchg
inc
mov
cmp
push
cmp
or
xchg
fsubl
adc
cwtl
adc
jo
sbb
jle
dec
pop
dec
rol
dec
fidivrl
movsl
jae
loop,pn
jae
sub
mov
enter
sub
in
cmp
add
sub
loopne
xchg
pop
mov
xor
test
xor
mov
sbb
push
in
les
jle
test
lret
sub
xor
les
hlt
xchg
inc
mov
loop
data16
repz
pop
jns
jmp
aas
sub
or
rorb
test
aad
testb
mov
mov
jne
push
and
out
sbb
lods
lods
scas
mov
xchg
fucomip
jp
cli
ljmp
movsl
mov
jno
dec
pop
movups
outsl
or
add
push
lods
sub
addb
inc
sub
adc
clc
mov
mov
push
lock
add
mov
insb
arpl
mov
insb
push
cmp
dec
in
pushf
pushf
icebp
xorps
imul
imul
jl
mov
ljmp
mov
dec
mov
xor
loope
fisttpll
jl
cmp
xor
mov
pop
sbb
mov
push
fsubrp
xchg
in
push
pushf
or
or
popf
cmp
sbb
fs
jbe
cwtl
xchg
scas
lock
imul
dec
mov
cltd
mov
out
sub
dec
adc
test
mov
dec
add
mov
inc
mov
adc
andb
outsb
jo
and
add
pop
pop
pop
and
sub
push
pop
xchg
xchg
push
arpl
push
sti
cli
push
leave
les
xchg
daa
fists
adc
xor
xchg
mov
fldcw
loopne
loopne
sub
lea
jo
aad
push
popa
pop
stc
or
pop
lcall
fldl
roll
push
xchg
lods
loop
mov
push
mov
push
pushf
nop
inc
jmp
xor
push
xchg
mov
or
adc
or
mov
in
push
call
jno
dec
jo
into
bound
mov
es
inc
inc
fnstcw
dec
sub
or
adc
xchg
fadds
xor
inc
inc
mov
mov
xchg
xchg
jp
fidivs
stc
xchg
sub
imulb
in
cltd
insb
adc
pop
push
call
bound
mov
sub
mov
shrb
inc
mov
jns
lret
addb
sub
pop
das
mov
mov
mov
lock
push
pushf
mov
add
cmc
addr16
popa
jge
loope
imul
jge
mov
notb
xor
mov
and
mov
ret
cmp
xchg
leave
jge
cmp
push
and
cwtl
mov
or
outsb
icebp
in
sbb
out
xchg
and
shl
xor
inc
mov
sbb
ficoms
and
inc
inc
and
mov
imul
mov
jb
mov
jle
in
add
jp
cs
test
jo
aaa
push
cli
clc
cmp
sahf
mov
shl
mov
cli
out
std
clc
jnp
pusha
inc
outsl
cmpsb
fs
adc
push
pop
in
lods
inc
inc
dec
cmp
xchg
mov
and
lcall
test
jae
imul
jmp
int3
push
jae
jae
jl
test
push
mov
adc
or
lock
ret
jl
rep
adc
ja
xor
xchg
in
sub
stos
stc
aas
cmpsl
mov
sbb
mov
pushw
sub
popf
adc
xor
lods
nop
into
fimull
mov
lock
jo
roll
xor
test
or
scas
or
ljmp
pop
dec
and
push
adc
sbb
adc
inc
lock
xchg
aad
or
in
lret
outsb
pop
je
ret
int3
add
xlat
dec
in
or
fwait
aas
inc
rorl
add
or
xchg
out
push
not
js
push
adc
push
ret
inc
test
lret
add
push
fwait
mov
pop
jmp
test
test
scas
mov
sbb
movsb
mov
loope
loope
pop
mov
mov
dec
mov
leave
xor
cs
cli
cmp
loop
loopne
push
rclb
fstpt
and
xor
jge
inc
iret
in
or
call
ficoms
inc
fnstsw
pop
icebp
leave
jp
stos
cld
xor
outsb
inc
sub
sbb
sbb
in
loope
mov
xor
movb
dec
scas
ret
dec
daa
in
into
call
out
mov
out
mov
out
dec
repz
stos
pop
popf
jl
dec
js
adc
pop
dec
int
nop
sbb
jo
insb
pop
lahf
js
pop
xchg
xchg
and
and
sbb
repnz
pop
int
xor
sbb
cmpsl
lret
stos
sub
insb
loop
repnz
imul
inc
xchg
les
pop
adc
flds
xor
jne
test
lods
ret
in
fdivr
push
add
mov
rolb
frstor
outsb
or
aad
cmp
or
mov
mov
sbb
imul
pusha
or
cmp
fsts
mov
in
pusha
push
and
cs
aam
pop
gs
xlat
fdivs
stc
adc
pop
push
add
mov
popf
adcb
jno
cmp
sub
out
scas
lds
mov
ds
adc
push
xor
fwait
and
das
push
sar
add
testl
add
lret
dec
and
cmp
outsl
std
fisubl
jne
push
imul
test
push
jp
lock
imul
cltd
arpl
xchg
lcall
outsl
jp
push
and
sub
pop
adc
xor
sahf
mov
jns
mov
add
in
and
das
test
rorl
adc
dec
sub
lock
inc
sub
add
jne
add
jp
dec
inc
mov
jecxz
mov
hlt
lock
int3
xchg
push
xchg
cli
call
loop
iret
mov
mov
mov
test
jbe
xor
enter
xor
mov
scas
cmp
rorl
mov
push
imul
pusha
and
jecxz
jl
push
inc
xchg
jnp
std
mov
insl
mov
cmpsb
add
arpl
outsl
mov
dec
test
pusha
mov
popf
inc
or
xadd
adc
mov
orl
and
stos
push
jp
in
call
sarl
mov
lea
pop
sbb
mul
iret
jge
inc
sahf
fdivrl
mov
stos
arpl
ficoml
inc
mov
in
icebp
jbe
cmc
jo
ds
mov
std
xchg
sub
fcomp
cmp
cltd
push
mov
sub
les
jnp,pn
jl
dec
mov
cmp
scas
xor
jae
js
jmp
out
mov
loopne
je
std
in
sub
inc
mov
jmp
cltd
inc
xor
rolb
mov
cmpsb
iret
xlat
loopne
decl
inc
lret
iret
and
sarl
andb
fisttpll
sub
arpl
clc
and
lret
fadds
mov
xor
call
ret
xchg
shr
lahf
xchg
push
xchg
mov
arpl
push
sbb
cmc
jb
sub
cmp
int
push
pop
pop
jecxz
fucomip
jecxz
aad
mov
sbb
cmp
aaa
movsl
hlt
std
xchg
pop
ss
dec
insl
lret
jl
pop
sbb
pop
xchg
push
inc
or
or
arpl
xchg
adc
iret
repz
add
lock
pushf
mov
call
dec
adc
std
jp
mov
gs
jmp
or
icebp
dec
xorb
jle
jle
not
iret
loopne
and
in
add
push
push
add
test
repnz
das
sub
cmp
push
adc
xchg
popw
scas
push
xor
dec
in
adc
add
xor
push
and
testl
push
ja
mov
dec
aaa
pop
pop
xor
cltd
sub
imul
imul
enter
jb
pop
jo
jle
movsb
mov
sub
scas
push
mov
pop
sbb
hlt
out
jg
fsubrl
in
push
xlat
xchg
mov
movsl
in
cmp
xchg
dec
lea
cmc
xchg
sub
jle
std
and
or
xchg
adc
sbb
jns
inc
add
daa
push
mov
inc
or
sub
scas
aam
stc
pop
xchg
leave
imul
adc
push
push
sti
out
sti
add
movsb
mov
cmp
fmulp
push
adc
cmp
lods
test
es
ror
dec
fwait
push
in
add
lock
shl
mov
imul
inc
out
push
fs
insl
dec
adc
adc
and
push
jp
push
popf
and
sbb
sbb
jecxz
pop
xchg
or
mov
iret
das
cld
test
ja
sbb
popf
cmp
inc
pop
pop
xchg
push
icebp
lods
push
xor
pop
addl
scas
mov
xlat
inc
lret
addr16
dec
cmp
incl
loope
jbe
jb
mov
mov
lret
cwtl
stos
jae
in
inc
add
jl
pop
mov
inc
xor
je
into
and
inc
adc
aam
adc
inc
movsl
jno
mov
outsb
cmpl
out
jns
movsl
out
cmpsb
aam
cmp
aaa
out
lds
lods
and
jge
lds
add
lret
mov
sbbl
lret
dec
mov
push
dec
outsb
sahf
pop
mov
mov
mov
mov
aas
movl
adc
jb
arpl
mov
pop
test
adc
xor
push
add
push
jae
les
sub
lods
js
cmp
inc
pusha
inc
dec
jno
repnz
bound
pop
rolb
aam
data16
adc
aaa
dec
sbb
mov
xor
movsl
inc
pop
jb
leave
fstpl
lahf
mov
xor
mov
mov
jmp
mov
lret
es
pop
lret
push
or
cmp
cmp
pop
cltd
movsl
cmc
stc
adc
ficomps
js
add
cmp
shrl
xor
icebp
fisubrl
pusha
mov
mov
xor
mov
mov
add
sahf
rclb
xor
jae
xchg
daa
sbb
jge
scas
mov
andb
mov
movsb
stos
lods
push
incl
mov
push
dec
push
or
sbb
ja
xchg
adc
push
mov
sbb
jl
fmull
and
cmpb
js
cltd
or
fiadds
or
dec
and
pop
sub
movsb
and
cmp
loope
add
addr16
push
jmp
push
and
out
pushf
stos
push
inc
pop
stc
aad
clc
dec
loopne
push
inc
repz
adc
xor
mov
jge
mov
push
jl
test
movsl
mov
mov
insb
inc
cmp
mov
fwait
popa
in
mov
jns
shr
outsb
sbb
movsb
lcall
les
mov
sbb
inc
mov
stos
js
sbb
push
cmp
lret
inc
shl
bndldx
cmpsl
jecxz
sbb
add
dec
popl
or
pop
icebp
dec
jl
push
stc
xor
fidivl
in
or
rcrb
inc
mov
inc
movsl
fnsave
movsb
jle
sbb
lea
or
sub
mov
xor
xchg
es
push
push
int
adc
lock
dec
out
roll
nop
cli
dec
jns
lods
lds
adc
sbb
pusha
fistps
sub
stos
ds
inc
mov
pop
xor
xor
sub
mov
ffreep
lods
aad
data16
cwtl
cmpsl
or
or
pop
mov
lods
push
addr16
or
cld
test
pushf
add
mov
push
push
inc
cmp
pop
pop
adc
popa
and
push
push
push
pop
fiaddl
out
icebp
fld
adc
loop
fcomps
mov
inc
rorb
into
push
in
add
or
inc
mov
jns
fidivrl
xchg
and
jnp
out
iret
fcompl
add
mov
in
jb
sub
out
mov
sub
push
or
out
ret
mov
xchg
add
pop
push
push
pop
jle
xchg
jae
ror
scas
inc
repnz
adc
mov
scas
jne
ss
out
in
incb
mov
cmp
mov
pop
pop
sar
push
jns
cld
neg
jle
xchg
jle
add
inc
push
cmp
mov
in
cmpsb
daa
jge
subb
int
pop
xlat
sbb
push
xchg
addl
and
arpl
mov
shlb
or
add
sbb
daa
ljmp
or
aaa
mov
cmp
stos
into
jbe
dec
push
mov
ret
xor
lcall
push
lahf
push
push
push
cs
icebp
pop
popl
cmp
sahf
mov
orb
pop
aaa
ret
adc
clc
cmp
mov
jns
repnz
clc
adc
sub
pushf
lea
mov
cmp
cmc
sbbl
jecxz
ja
in
sbb
xchg
call
outsb
inc
inc
leave
mov
add
cmp
and
adc
mov
dec
clc
pop
test
push
jno
jg
mov
repnz
push
adc
xchg
cmpsl
icebp
testl
sbb
mov
mov
pop
les
mov
mov
arpl
gs
repnz
add
int3
data16
xchg
jl
inc
fsubr
or
dec
dec
inc
xor
test
pop
enter
inc
mov
aaa
inc
adc
in
pop
fs
mov
pusha
push
xchg
mov
popf
mov
out
xchg
in
sub
mov
inc
xchg
cmpsb
ficompl
in
fldt
xchg
inc
aad
push
outsb
lods
xchg
jns
push
icebp
cltd
nop
test
fbld
xlat
inc
push
test
mov
adc
pop
or
xchg
psubusb
sbb
sbb
lea
fnsave
fidivrs
lds
pop
scas
movsl
dec
pop
sbb
je
cmp
lgs
jnp
das
push
jae
inc
jg
and
sbb
mov
and
fimull
add
cmp
jns
fildl
repz
inc
and
mov
pop
mov
jnp
sti
sbb
cld
push
repnz
rclb
dec
xchg
xchg
mov
cmp
je
sbb
sti
xor
xchg
xchg
and
xor
and
daa
into
stc
inc
inc
or
cld
and
sbb
inc
testb
and
cmpsb
or
push
push
xor
loop
xlat
push
icebp
adc
mov
in
xchg
cmp
lds
push
sbb
xchg
push
sar
dec
cmp
ret
lea
aad
nop
adc
cmp
pop
or
sti
pop
jmp
mov
or
shlb
and
cmp
es
mov
scas
cmpsb
xor
jg
xor
test
dec
fwait
cld
adc
stos
add
cmp
mov
cmc
mov
sub
cli
adc
add
pop
and
test
into
push
sti
int3
push
push
cmp
add
adc
cwtd
mov
leave
loope
les
je
mov
push
stc
xchg
sub
push
mov
jno
pop
imul
mov
xchg
fwait
dec
sub
movsb
xchg
cmp
shufps
or
push
jmp
imul
cmc
sahf
lods
aaa
mov
adc
jmp
inc
call
add
add
cmp
push
cwtl
dec
jge
sub
adc
push
ljmp
int3
in
jns
ficomps
inc
subl
jp,pn
adc
enter
dec
or
pop
xchg
bound
les
dec
aaa
jo
add
xor
repz
xchg
fwait
xchg
imul
push
pop
test
movsl
clc
addr16
repz
mov
ss
fdivs
mov
ss
nop
fwait
out
in
pop
xor
out
adc
xchg
clc
push
cmp
fidivrs
or
ljmp
shl
jmp
xchg
sbb
jbe
sub
push
js
mov
test
fwait
add
push
xor
xlat
xchg
into
xchg
or
add
mov
cld
movsb
out
inc
in
js
lods
mov
mov
subb
icebp
xor
or
or
repz
fnstsw
pop
mov
repnz
das
mov
inc
mov
cmp
cmpl
movsl
mov
fstpt
xchg
flds
xlat
and
loopne
xchg
mov
enter
pop
jecxz
lcall
lret
rcrb
mov
ss
inc
cmp
sbbl
cwtl
fcmovnbe
pop
push
inc
les
sti
fildl
jg
push
xor
dec
cwtl
cld
xor
ljmp
cmpsl
add
insl
pop
int
loop
xchg
mov
pop
and
xor
pop
and
inc
aam
push
inc
xchg
mov
push
jo
sub
ss
pop
adc
shrl
je
loope
xchg
daa
pushf
nop
or
mov
jmp
pop
sbb
aas
mov
jno
lock
out
jb
notl
jle
shlb
pop
fwait
or
ret
arpl
mov
daa
pop
into
testb
mov
test
dec
add
inc
pop
and
imul
stc
pusha
test
mov
les
jl
pop
push
mov
lret
push
popf
mov
jbe
lea
data16
cmc
xor
mov
in
popl
mov
test
daa
jae
cltd
xchg
dec
xor
popf
dec
movsl
xchg
gs
jmp
gs
and
mov
repz
mov
add
lahf
dec
xor
push
jne
pop
xor
cmpsl
mov
mov
cmpsl
out
mov
pop
stos
imul
out
mov
dec
fs
cmc
jae
lds
xchg
xor
mov
out
sahf
out
cs
sub
lret
pop
nop
icebp
add
call
in
sahf
mov
pushl
shrl
clc
das
jne
push
stc
fistps
cmp
push
jl
push
out
int
sbb
mov
pop
fidivrl
rorl
nop
lea
icebp
cltd
arpl
mov
jne
loope
imul
and
xor
or
insl
add
pushf
not
mov
mov
lret
in
or
pop
push
test
imul
xbegin
dec
jge
stos
jae
sbb
ss
sbb
xor
sbb
stc
cwtl
cmp
dec
outsl
mov
push
xchg
das
jle
in
lahf
mov
adc
mov
das
mov
subb
xor
inc
push
pop
lods
push
cs
out
dec
hlt
cmp
in
xor
mov
pop
negl
das
sbb
pop
in
sbb
jmp
pop
inc
inc
cmp
dec
mov
push
js
adc
push
pop
cli
adc
mov
arpl
subb
cmc
dec
ret
scas
add
cmp
aas
jecxz
dec
mov
xchg
loope
mov
push
push
mov
push
jne
adc
into
lods
mov
loopne
push
arpl
push
mov
cmp
xor
or
fistl
or
ljmp
mov
sahf
mov
mov
push
inc
loopne
lock
and
sbb
mov
sbb
mov
add
push
mov
push
mov
sar
cld
xchg
testb
out
xor
lods
sbb
lret
fnstsw
sbb
xchg
stos
pop
in
std
push
popl
dec
inc
jae
lods
imul
push
push
dec
je
cmpsb
sbb
les
pushw
sbb
cmp
cmp
pop
jne
fwait
rorl
sbbb
pop
cmp
sbb
test
in
orb
pushf
xor
repnz
jnp
into
adc
mov
pop
xor
mov
pop
push
and
cmp
idivb
pop
roll
jmp
jle
insb
or
jecxz
sub
ret
push
or
lods
jne
sub
sub
dec
aas
xchg
and
or
lea
inc
push
pusha
fnstenv
dec
jecxz
xchg
inc
inc
pop
adc
jns
sbb
xor
repnz
popa
popa
cmp
enter
jb
add
test
out
xchg
mov
add
mov
jne
leave
aas
xor
stos
lds
adc
inc
aad
frstor
imul
stc
push
mov
or
and
sub
sub
adc
and
mov
fldcw
mov
cmpsl
into
cwtl
les
out
mov
mov
add
push
inc
sub
mov
mov
mov
pusha
xor
inc
jo
out
outsl
mov
sub
xlat
jno
imul
or
test
jo
adc
pushf
xor
pushf
icebp
loope
mov
cmpsl
mov
sub
xchg
mov
dec
pop
adc
xor
inc
arpl
or
jb
daa
mov
sbbl
sub
outsb
rclb
xchg
sbb
mov
sbb
lcall
mov
pop
imul
pop
data16
out
xchg
test
push
sahf
xchg
pop
fsts
sbb
cmpsb
pop
mov
int
shrb
dec
int
dec
xor
push
dec
jno
or
ret
xor
aad
push
jecxz
mov
cmpb
adc
in
int
stos
aaa
loop
xor
lods
push
or
rol
push
or
xor
repnz
lock
sbb
scas
xchg
sarb
stos
fcoml
sti
movsb
aam
addl
data16
lock
jne
pop
jl
add
ljmp
out
imul
jmp
dec
enter
into
subb
lcall
xor
or
sbb
loope
out
push
ljmp
jae
mov
stos
stos
loopne
add
jl
inc
dec
mov
fs
mov
xor
test
test
negb
test
adc
iret
hlt
aad
add
test
int3
testb
lcall
out
sub
xchg
inc
xor
in
mov
icebp
testl
in
sub
jae
loope
push
xchg
lahf
jp
sub
loope
mov
jmp
push
pop
xchg
lahf
repnz
push
std
cmp
lock
out
push
mov
inc
leave
add
mov
or
repnz
addl
adc
ljmp
loope
jbe
add
xchg
gs
mov
xchg
popf
mov
or
ficomps
inc
lock
mov
stos
pop
adc
pop
fwait
lahf
xor
test
xor
lods
pushf
adc
lahf
lock
scas
ss
loopne
push
out
add
lods
jle
sub
lahf
rcl
push
or
xor
loopne
cmpsb
and
xor
clc
mov
jno
cld
cmp
xchg
lods
adc
sub
xchg
fwait
add
adc
call
mov
fwait
fs
inc
popf
inc
out
xchg
inc
rcrl
sti
fmuls
dec
pop
sbb
sbb
shrb
push
test
jno
pcmpeqb
jne
stos
add
mov
subl
test
cmp
icebp
adc
lods
add
arpl
adc
out
subl
mov
jns
mov
mov
mov
mov
popa
adc
push
repz
push
xchg
rcrl
into
arpl
pop
jge
pop
xlat
xchg
ret
loop
sahf
fs
push
mov
inc
data16
test
lcall
sub
popa
aam
sbb
adc
mov
gs
addr16
sub
daa
pop
popl
pop
mov
into
or
mov
mov
xchg
out
push
jle,pn
sbb
es
idivl
xor
xchg
dec
aad
sbb
test
lret
or
jnp
add
imul
fcom
and
inc
cs
adc
inc
or
repz
dec
xchg
ret
inc
flds
ljmp
int
sub
ljmp
addl
scas
data16
xor
fdivrs
jbe
pop
jmp
test
add
arpl
pop
sub
pop
mov
xchg
outsb
and
or
mov
inc
dec
cmp
xor
mov
cmp
inc
cmp
dec
and
cli
lods
and
int3
dec
sarb
mov
js
daa
es
sub
les
add
cmp
dec
inc
pop
cmc
jp
jge
lret
fsubrs
adc
push
loopne
fcompl
cmc
pop
inc
push
cmp
popf
xor
pop
push
test
add
mov
inc
mov
in
cmp
pop
ret
or
and
sbb
adc
mov
ja
pop
add
ss
jl
pop
in
jecxz
xor
pop
int3
dec
idivl
nop
lea
filds
out
in
xchg
cmpb
loope
sbb
out
aad
inc
dec
mov
jae
mov
and
sbb
stos
sbbl
dec
jge
outsb
jmp
rclb
sub
fwait
dec
pusha
pslld
bound
or
cs
sub
mov
pop
sbb
pop
mov
leave
lock
push
pop
adc
fistps
push
inc
dec
adc
test
gs
fisubl
gs
push
sbb
push
jle
call
stc
lret
mov
cli
pop
mov
cmp
repnz
int3
icebp
outsb
das
aaa
mov
cmp
or
nop
and
lods
cmpsb
pop
sub
fst
cmp
pushf
sub
rorb
mov
push
jp
sbb
or
xchg
fstps
aam
std
xor
jb
inc
ret
idivb
shrl
test
mov
stos
xor
repnz
call
movsb
sar
out
je
push
xorl
mov
mov
mulb
mov
xor
jo
dec
insb
rcrb
sub
mov
ficompl
add
mov
cmp
mov
mov
mov
hlt
dec
sub
push
cmp
jne
scas
ds
stos
in
cmp
ret
push
mov
mov
jnp
inc
push
insl
pop
inc
shll
stos
sbb
cmp
push
inc
test
xchg
add
push
jg
add
xchg
adc
stos
repz
out
movsb
imul
sbb
adc
jl
insl
in
scas
mov
push
mov
fisubl
adc
jo
or
orl
ret
sub
sub
sbb
cli
inc
mov
sbb
enter
xor
gs
xchg
adc
int
call
inc
cmp
daa
fiadds
das
mov
scas
les
sti
push
cli
adc
pop
and
jo
mov
sahf
shl
ja
cmp
jl
lcall
stos
add
xchg
push
call
push
xlat
stc
jnp
mov
mov
jl
inc
mov
pop
jge
cmpsl
or
mov
fildl
enter
ret
mov
jns
jmp
dec
icebp
and
or
nop
outsb
xchg
push
mov
push
insl
es
mov
movsl
push
dec
test
lods
mov
mov
das
sub
inc
dec
into
out
xor
add
push
xor
mov
dec
sarl
inc
popa
cmp
pop
daa
shr
inc
adc
mov
out
jbe
fisttpl
sbb
enter
lret
sub
mov
or
arpl
daa
idiv
es
cld
jae
cmp
mov
flds
xrelease
outsl
daa
arpl
stos
les
sub
repnz
jle
push
loope
cmp
aam
ds
adc
sbb
int
sub
push
xor
sbb
in
or
mov
es
out
hlt
jle
stc
stc
mov
xlat
sbb
xchg
xor
in
dec
scas
xchg
jno
mov
add
ret
popa
jae
dec
dec
enter
in
cmp
enter
dec
jmp
loope
dec
pop
inc
sbb
adc
and
mov
cwtl
adc
mov
jp
and
inc
scas
push
std
sbb
push
or
lds
test
mov
insb
mov
jae
mov
pop
inc
sbb
shll
lahf
mov
mov
and
sbb
mov
dec
loop
out
xor
xchg
arpl
mov
ja
movaps
push
repz
mov
pop
or
stos
loop
push
outsl
out
xlat
aam
out
cmc
pop
outsb
insl
leave
jne
push
popa
mov
faddp
hlt
xor
mov
dec
rclb
push
sbb
mov
sub
fdivrs
lods
or
mov
jecxz
cmp
push
mov
test
pop
add
lcall
dec
or
outsl
lock
icebp
dec
xchg
js
dec
xchg
pop
nop
movsl
cmpsw
js
out
fst
and
jbe
pop
lea
mov
loop
adc
cmp
sti
sub
and
and
pop
aaa
cmc
dec
cltd
mov
lea
mov
mov
mov
arpl
sub
nop
mov
push
dec
push
js
push
mov
and
sbb
mov
inc
sbb
jg
fsubrs
add
les
rclb
shlb
popf
jge
sti
fnsave
addl
push
mov
sub
imul
daa
cli
mov
xchg
sti
mov
rclb
mov
rcr
push
mov
das
push
lea
nop
jmp
int
jmp
dec
dec
insb
andb
mov
mov
movsl
rorb
mov
inc
stc
cmc
call
inc
repz
jp
lods
jmp
aas
daa
sbb
mov
inc
stos
xchg
test
dec
filds
sbb
test
mov
or
inc
xchg
cmc
adc
aaa
jg
ds
fisubl
repnz
dec
sbb
mov
addl
aaa
pop
xor
inc
xchg
ljmp
push
cltd
inc
mov
out
mov
ss
into
xchg
or
sbbl
sbb
and
xor
xchg
add
cmpsb
dec
sub
ja
mov
mov
test
push
setbe
mov
sbb
xor
ja
mov
mov
lcall
pusha
cwtl
mov
xchg
mov
aad
adc
jne
hlt
inc
icebp
jl
mov
xor
movsl
out
js
shrb
scas
jp
loopne
push
pusha
adc
aaa
mov
pop
mov
add
les
inc
mull
in
adc
in
push
pop
hlt
outsb
mov
push
je
dec
pop
xchg
cmpsl
xchg
stc
fistps
test
jmp
iret
enter
fs
lret
adcl
or
stc
addb
adc
ficompl
push
jg
sbb
xchg
sbb
push
shll
jae
push
ret
popf
sarb
jne
mov
ljmp
test
jns
mov
or
and
jp
cwtl
xchg
pop
push
jne
mov
mov
das
outsl
cmp
dec
adc
into
push
dec
adc
insl
stos
inc
xor
inc
sbb
loop
dec
jecxz,pn
mov
cmp
mov
mov
xchg
data16
cmc
out
aaa
sbbl
scas
cli
testb
pop
adc
add
pop
pop
scas
dec
bound
fadds
mov
mov
jge
les
adc
inc
out
push
mov
inc
int3
movlps
pop
test
in
sub
pop
aam
insl
inc
cmp
flds
adc
mov
pop
repz
fdivrs
push
rcll
adc
xor
sub
push
mov
xchg
aas
add
sbb
fwait
pop
sbb
or
popa
mov
lahf
cwtl
in
xchg
fisubrs
push
mov
leave
sbb
and
movsb
jmp
inc
or
cs
xor
subb
mov
sub
repz
pop
mov
and
mov
and
shll
mov
lcall
fmul
cmp
roll
add
outsl
sub
push
std
scas
adc
stc
mov
rcr
mov
push
in
into
sbb
ret
test
push
filds
cmc
xor
push
int
faddl
int
cli
js
loopne
insl
mov
cmc
in
sahf
ret
cs
sbb
xchg
mov
je
adc
xchg
subl
into
pop
pop
mov
mov
adc
and
mov
sub
sbb
ret
mov
push
cmp
xchg
fsubs
cs
push
repnz
mov
mov
lahf
repz
les
sbb
fstps
jecxz
xor
ds
sub
cmp
push
es
mov
mov
sti
sub
out
loopne
mov
inc
test
jg
fstpt
popf
subl
sbb
dec
cli
jbe
mov
mov
xor
dec
cmc
push
scas
sub
arpl
adc
pop
iret
mov
mov
sbb
push
push
outsl
jno
or
sbb
sub
sub
pop
jg
jp
mov
and
fldenv
adc
inc
add
pop
add
xchg
xor
shrb
and
or
stc
and
pop
fcompl
sub
fs
lods
pusha
and
clc
jo
jle
push
xlat
mov
sub
cli
std
mov
push
test
pop
sub
mov
mov
sub
and
mov
aad
je
arpl
mov
jae
stos
int3
inc
int
cmp
mov
pop
ja
fnstsw
ja
test
cmp
scas
rcr
mov
inc
mov
jmp
mov
outsb
mov
repnz
push
fidivrs
add
pop
inc
push
out
fcmovnb
pop
aaa
fwait
lods
mov
stos
jnp
decb
ret
fstps
out
fsubr
xchg
xchg
cmp
test
inc
mov
insb
and
add
adc
add
mov
mov
clc
pop
cli
leave
xor
mov
mov
lods
sub
sub
sbb
dec
cmp
sbb
popa
test
lock
cmp
dec
addr16
flds
aas
in
cltd
push
out
fs
lds
js
rclb
sahf
dec
pop
aas
shll
sbb
imull
cli
les
push
xchg
add
lds
js
add
lea
out
popf
aaa
aam
sbb
aas
or
ljmp
das
mov
mov
shrb
add
adc
insb
xchg
inc
stc
scas
xor
cmpsl
mov
mov
push
in
sbb
inc
push
inc
cmp
fdivr
jo
in
jns
mov
lock
mov
fdivl
mov
push
shll
stos
pusha
out
ljmp
pushf
ffreep
mov
adc
jecxz
sub
pop
idivl
dec
xchg
mov
movsb
aam
jle
fwait
pusha
ror
dec
mov
test
aam
lods
fcom
shlb
sbb
es
mull
daa
add
scas
ja
xlat
or
in
add
dec
insb
or
lock
outsb
xchg
inc
out
imul
stos
dec
mov
bound
or
sbb
adc
and
or
mov
addr16
test
dec
adc
add
shrb
ja
or
daa
jo
cmp
cmpsl
out
std
jle
cld
jae
xlat
pop
das
mov
mov
pop
scas
lahf
pop
cltd
jg
jge
cmp
pop
pop
cmp
cltd
add
or
xor
sbb
mov
stos
das
mov
jbe
xor
lret
popa
fistl
pop
jecxz
mov
pop
mov
cmp
dec
popa
fnsave
push
cmpb
je
dec
iret
jg
mov
dec
push
add
mov
or
les
mov
lret
jae
xor
push
clc
pop
jg
fidivrl
mov
leave
adc
inc
xchg
sbb
std
cltd
ja
insb
out
adc
movsl
dec
or
inc
sub
inc
jl
std
push
mov
test
jecxz
mov
lock
aaa
cld
and
adc
out
pop
sub
push
cltd
xor
sub
mov
xchg
pop
jl
dec
jmp
shll
sarl
lret
adc
std
out
add
dec
or
jno
add
sub
sub
adc
neg
fidivrl
aam
js
pop
inc
mov
push
arpl
lods
fucomi
xorl
in
out
dec
jl
xor
and
jbe
ret
shll
dec
popa
pop
and
aas
add
jnp
outsb
adc
mov
mov
mov
inc
xchg
jbe
sbb
push
lahf
mov
sub
mov
rclb
sbb
flds
jl
xchg
rclb
lahf
cmp
gs
adc
jmp
insb
jo
scas
cmp
loopne
push
inc
in
push
push
daa
cmp
jae
inc
push
cmc
mov
iret
xor
fidivl
aam
cmp
call
sub
lsl
stos
xchg
loopne
mov
mov
stc
pop
js
lods
mov
pop
pop
aaa
imul
add
inc
cld
es
lock
sbb
daa
and
mov
mov
mov
call
cltd
mov
shl
add
orb
lods
sbb
xchg
inc
repz
std
loope
push
push
xchg
scas
es
push
add
and
mov
andb
push
mov
js
lcall
pusha
jmp
push
push
adc
cltd
repz
cmpsl
js
into
gs
leave
jle
push
mov
sahf
fwait
cmp
or
hlt
and
sbb
jg
shrb
pop
mov
test
mov
shrb
clc
das
enter
xorb
jae
ljmp
nop
adc
idivb
rcr
into
xchg
or
mov
jle
push
lea
cmc
jecxz
mov
sti
andb
or
sub
sbbb
or
out
inc
les
js
push
repz
mov
idivb
mov
cmc
mov
mov
mov
in
data16
jge
popf
pcmpeqw
outsb
lret
push
mov
lret
mov
stos
mov
mov
loopne
outsl
add
jnp
pop
pushf
jmp
cmp
add
inc
sbb
pop
jmp
test
loop
push
pop
scas
imul
fadd
jb
aad
inc
rcrl
paddb
adc
lret
inc
test
mov
lods
sbb
mov
push
add
xchg
jp
dec
call
jns
lcall
pop
lea
js
add
jno
repnz
cmp
jb
adc
mov
leave
mov
adcl
xchg
fisubl
lahf
cli
mov
cwtl
pop
mov
push
sub
or
sbb
leave
push
jle
das
pop
das
testl
ss
push
push
imul
pop
push
adc
pop
lcall
cmc
xchg
lds
dec
cwtl
je
stc
out
int3
clc
pop
add
ret
pop
lret
or
xchg
push
jns
lods
dec
mov
push
fs
jl
in
and
ret
push
lock
es
loopne
sbb
cmc
fiaddl
jl
lret
out
mov
push
mov
out
sub
dec
mov
fidivl
mov
aaa
arpl
js
jb
cltd
cmpsl
fdivrl
pop
cwtl
mov
mov
inc
mov
cmp
mov
mov
cmp
insl
jae
mov
sahf
push
xchg
lods
jecxz
mov
mov
mov
xlat
inc
pop
xor
dec
out
pop
xchg
xor
insb
add
cmp
dec
ljmp
and
inc
xor
dec
or
lret
add
cmp
je
mov
sahf
fcmovnu
sub
mov
loop
sbbl
loopne
in
pop
dec
mov
js
sbb
ljmp
jl
lret
out
push
jne
fldl
test
negl
ja
sbb
mov
cmp
mov
pop
lock
pop
jmp
scas
cmc
lea
in
clc
sub
pop
mov
add
xchg
lds
ljmp
outsb
stos
lret
or
movsl
ja
cmp
push
cltd
cmp
lods
jl
mov
xchg
inc
xchg
jnp
scas
outsb
ljmp
cs
dec
aam
mov
repz
stos
dec
stos
adc
mov
cmpsl
or
sub
das
push
ds
arpl
pop
adc
inc
dec
into
add
sub
mov
and
into
inc
push
adc
cmpl
pop
pop
mov
movlhps
loop
fistps
mov
mov
cmp
popa
or
jnp
or
cs
mov
push
loop
jp
lods
mov
aam
ds
pop
movsl
inc
fiaddl
or
mov
xchg
cs
and
jnp
xor
popa
add
aam
jns
sbb
out
push
fnstcw
mov
inc
rcr
fistl
es
aam
cmpsl
xor
insl
out
lcall
xchg
lds
mov
dec
mov
push
add
add
lret
or
std
loopne
xor
cmc
add
in
ljmp
iret
sbb
std
sub
inc
pushf
add
or
mov
pop
aaa
test
cld
sub
fcomps
imul
xchg
jg
sbb
cmp
or
iret
into
inc
popf
mov
loope
repnz
lods
pop
popa
or
xchg
inc
add
mov
xchg
mov
adc
icebp
or
and
xor
fcompl
cmc
cmp
xor
popa
out
ds
mov
dec
dec
repz
jae
jmp
adc
or
pop
adc
mov
movsb
adc
pop
jb
mov
add
xchg
bound
and
push
push
mov
repz
daa
jecxz
and
lcall
rcr
int
adc
jecxz
in
adc
sbb
mov
sbb
cmpsb
pop
pop
xor
orb
insb
and
je
in
mov
mov
fadd
xchg
daa
and
js
adc
push
mov
ja
mov
enter
jge
je
sub
add
add
out
das
imul
mov
insl
pop
dec
dec
dec
std
sub
mov
movsb
xchg
adc
push
sti
push
scas
sbb
out
lret
sbb
or
or
iret
mov
dec
cmp
jg
mov
mov
push
mov
in
mov
sti
popf
sbb
mov
fwait
xlat
cmp
shl
adc
or
in
cltd
repnz
or
inc
jbe
jbe
sbb
mov
ret
pop
mov
cltd
or
cmp
jge
aas
inc
add
pop
cwtl
jnp
call
jae
ja
pop
xor
inc
dec
bound
lods
data16
mov
js,pn
in
jns
inc
add
lret
pop
pusha
jns
add
ljmp
loope
xorb
mov
mov
enter
neg
fidivl
push
cmpsb
mov
sub
popf
insb
and
test
sub
inc
les
add
lock
ljmp
cli
ret
pop
or
inc
divl
sti
sub
adc
push
aam
xchg
or
inc
loopne
or
pusha
sbb
mov
aaa
inc
xor
daa
pop
adc
test
cli
push
add
iret
jecxz
jg
leave
push
ret
ss
aad
loope
push
iret
cmpl
xchg
fldenv
ja
adc
in
pop
pop
cmpsl
out
mov
lods
pcmpgtd
push
mov
outsb
mov
imul
xor
sub
fstpt
pop
cwtl
shl
lock
mov
outsl
loop
xor
popa
push
pushf
lods
jb
add
adc
mov
leave
test
lds
ljmp
imul
sub
xchg
xor
or
and
mov
idiv
ja
test
xchg
fsts
dec
mov
mov
push
fldenv
sbb
in
and
dec
lahf
ss
sub
scas
sbb
dec
add
or
std
xlat
xor
push
xchg
pop
sub
test
pop
push
mov
xchg
in
pop
dec
lds
mov
lock
je
sub
call
jnp
jae
jbe
stos
orl
push
subl
jnp
int3
repz
in
insl
in
jnp
pop
dec
add
add
and
and
shrb
hlt
mov
mov
jbe
stc
jle
xchg
mov
fwait
test
jg
aad
mov
addr16
sub
aam
xor
mov
push
add
cwtl
inc
int3
pop
inc
pop
or
inc
icebp
or
sbb
ja
push
push
ret
xchg
push
jmp
cmp
sbb
mov
out
fwait
mov
pop
sub
mov
inc
mov
xor
lret
pop
ja
cwtl
or
cmp
or
pop
mov
arpl
shl
enter
fsubs
mov
cs
sbb
jb
jmp
inc
adc
shlb
adc
outsl
sbb
cli
inc
inc
lods
lret
addr16
cwtl
insb
sub
gs
sarl
pusha
push
nop
into
cs
sub
jo
adc
adc
dec
stc
mov
cli
ds
cld
call
cltd
js
mov
xchg
push
iret
pop
inc
loope
mov
jae
popf
js
or
or
cmpsb
leave
lahf
test
pop
jo
mov
pop
push
add
inc
mov
gs
mov
mov
roll
dec
inc
popf
rorb
xchg
lods
jmp
jns
mov
push
xor
mov
stos
fwait
sub
jmp
data16
pop
sbb
pop
test
popl
sub
arpl
jle
call
rcrb
xchg
mov
sbb
or
mov
mov
pop
and
mov
add
cld
and
pop
mov
mov
lret
mov
mov
cmp
lods
mov
and
push
call
push
mov
mov
or
jle
insb
outsb
imul
push
addb
push
push
in
mov
and
sbb
out
pop
push
cmpsl
imul
mov
iret
dec
ds
fs
jno
adc
xchg
in
je
mov
imul
test
and
push
incl
cltd
insb
sub
xchg
mov
xor
jge
rcll
mov
lret
jp
outsl
pop
sbb
jne
mov
ret
push
push
and
fstpl
or
and
fsubrp
jg
xchg
insl
int3
leave
stc
inc
jo
push
and
scas
shlb
lahf
lahf
inc
mov
pop
mov
jp
mov
scas
or
jne
gs
xlat
test
dec
mov
add
outsl
sbb
loop
shll
rclb
pop
mov
or
rcll
adc
popa
mov
push
mov
mov
aas
enter
mov
mov
xchg
aam
popl
mov
addr16
out
sub
sub
js
jne
inc
stos
add
pop
es
test
aam
mov
test
aas
scas
aam
loopne
xor
inc
mov
mov
add
add
push
pop
mov
jne
adc
xchg
sbb
fsubrl
aam
or
pop
out
insb
cmp
pushf
push
pop
push
das
hlt
ret
jbe
lret
rorb
ret
ja
gs
out
jg
ljmp
ret
ret
addb
cmp
out
es
test
je
xor
rcr
out
lret
and
adc
cmpsb
shrb
in
cwtl
cmpsb
out
lods
daa
mov
in
xor
mov
push
jns
xchg
in
rclb
enter
sti
call
adc
xchg
push
lock
inc
xlat
mov
cmp
sahf
cmc
popa
stos
pusha
mov
jns
out
andb
adc
ret
and
into
push
lods
ljmp
aaa
sbb
call
xchg
inc
inc
mov
ret
stos
pop
ljmp
sti
and
das
pop
xor
pop
aaa
adc
in
add
jnp
push
sbb
or
and
pop
mov
rolb
jo
fldenv
push
push
aad
in
xchg
imulb
mov
sbb
cmp
push
les
imul
jb
pusha
mov
lods
pushf
pop
mov
out
mov
cltd
stos
push
sub
adc
in
pop
fisubrl
sub
push
ja
cmp
jmp
inc
lahf
call
jge
scas
and
pusha
sbb
out
or
fildl
cltd
add
add
xor
fwait
out
jmp
shrb
into
dec
fstpl
xor
fdiv
pusha
out
in
mov
pop
jg
jne
lret
shlb
addr16
or
or
and
push
arpl
inc
and
ret
or
ror
sti
out
jge
inc
xchg
pop
xor
mov
cmp
outsl
inc
nop
adc
adc
sub
ret
dec
cmpsb
popf
out
push
inc
push
gs
pop
fwait
xor
out
fistps
sahf
cmp
add
pop
movsb
pusha
pop
cli
sbb
pop
insb
inc
out
mov
negb
test
sti
insb
cmc
loop
in
aaa
or
or
jle
int
fnstenv
sti
mov
xor
mov
out
inc
jo
xor
ret
jmp
cmp
inc
mov
loopne
arpl
fiaddl
jle
inc
xchg
or
jmp
out
int
nop
in
cmp
fiaddl
and
hlt
push
lods
jmp
movsb
jl
imul
cmp
fnstenv
mov
sub
sbb
pop
xor
dec
stos
lahf
divl
cmpsb
mov
push
mov
aaa
inc
je
jnp
push
mov
pop
dec
push
lret
dec
sarl
dec
in
push
shufps
sti
mov
add
loope
xchg
call
aas
sub
sti
adc
add
cwtl
fcomi
add
push
insb
jle
xor
into
adc
faddl
mov
and
sbb
dec
rolb
ficoms
arpl
call
cltd
push
sti
mov
cld
pop
jle
xchg
add
rclb
mov
ljmp
aaa
lcall
or
dec
push
inc
loop
jecxz
pusha
xchg
imul
ja
dec
sub
jo
push
mov
add
push
push
cmp
rcll
or
xor
cmp
inc
ja
cmpsl
mov
pop
test
loopne
xchg
dec
xchg
xorl
fsubrl
out
fs
insl
lods
mov
xchg
jbe
xor
push
sbb
out
divl
loopne
int3
cmpsl
mov
out
fdivp
pusha
mov
popw
insl
adc
icebp
cmp
pushf
lds
jno
add
mov
inc
pop
sbb
xchg
mov
fwait
dec
adc
ret
sbbb
xchg
cmp
mov
int3
stos
push
jg
xor
or
nop
mov
rclb
jmp
mov
loopne
xchg
push
mov
lcall
clc
mov
pop
jnp
mov
push
mov
push
inc
mov
popf
dec
or
cmc
cld
dec
aas
idivl
aad
mov
sub
loopne
jp
inc
rcrl
test
or
pop
add
pop
outsl
fidivrs
add
ret
adc
inc
push
or
mov
xchg
adcl
das
dec
xor
dec
aam
add
dec
and
les
and
in
xchg
cmpsb
lahf
pushf
jns
rcrl
outsl
push
js
dec
mov
inc
adc
sahf
sub
fldl
xchg
idivl
or
outsb
mov
adcl
imul
sahf
cs
jae
dec
lcall
rclb
add
dec
subb
lahf
mov
imul
push
push
mov
in
xchg
sysret
mov
or
stos
lret
mov
xor
popa
lock
out
mov
mov
jae
xchg
dec
and
fisubl
xor
xor
call
pop
std
cwtl
addr16
jmp
lret
mov
mov
das
xchg
cltd
jg
sbb
shll
loop
dec
cwtl
and
fs
aam
xchg
push
shl
shrl
adc
adc
or
mov
push
lods
mov
es
inc
lahf
xchg
jo
and
xchg
mov
fwait
int
sbb
clc
lahf
stos
cmpsl
push
jbe
jno
mov
dec
cmp
data16
shlb
out
leave
les
push
sti
push
cmpsl
mov
js
xchg
lea
push
xchg
daa
in
pop
xor
jnp
xor
dec
enter
mov
pushl
lock
aam
mov
ljmp
imul
dec
jl
mov
add
xor
outsb
xor
scas
das
pop
jo
dec
call
clc
addr16
pop
rcl
pop
cwtl
sub
cmp
subl
mov
fcomp
mov
aad
fwait
rolb
mov
jb
mov
adc
es
aam
pop
test
cld
mov
ret
mov
lret
gs
mov
imul
out
loopne
ljmp
add
int
js
cli
imul
mov
xchg
sar
fists
inc
adc
and
mov
adc
mov
mov
insl
js
add
cmc
add
leave
xchg
clc
ja
xchg
lods
out
sub
sub
shl
popa
loope
imul
mov
movsb
arpl
dec
sti
xchg
cmpsb
cmp
in
rolb
adc
cmp
mov
insb
mov
stos
xchg
pop
das
pusha
push
sbb
dec
mov
lods
hlt
push
pop
out
pop
in
ds
sub
push
pop
jmp
aas
pop
or
daa
ret
leave
aas
sbb
adc
pop
pop
andb
or
push
sarl
cmpsl
insl
pop
and
clc
xlat
push
lret
addr16
movsb
adc
sub
adc
mov
aad
mov
call
scas
daa
dec
mov
jl
or
scas
inc
jp
aaa
int
inc
dec
scas
imul
mov
out
or
xchg
mov
adc
push
sub
shrb
sub
push
push
dec
sbb
adc
pop
push
dec
adc
inc
add
sub
push
adc
stos
adc
mull
lea
call
aam
shlb
xchg
test
push
push
movsb
test
xchg
inc
pop
cwtl
sub
jnp
inc
arpl
aam
mov
pop
mov
insb
cmpsl
sbb
mov
rclb
fs
mov
neg
dec
stos
mov
lcall
pop
ret
or
add
je
jo
mov
outsb
ret
mov
sarl
loopne
dec
mov
shr
xchg
mov
inc
popa
in
repz
push
adcl
and
outsb
jbe
cmp
jl
push
mov
aas
mov
sbb
cs
dec
bound
mov
mov
sbb
in
fwait
stos
scas
testb
sub
in
add
ljmp
adcl
add
bound
sbb
std
pusha
dec
scas
loop
jnp
inc
test
es
cmp
xor
inc
in
push
fcoml
outsb
es
inc
add
pop
inc
ljmp
hlt
pushf
xchg
out
lahf
push
or
aad
insb
sbb
flds
outsb
js
jl
rcll
in
add
mov
push
dec
in
push
mov
jno
insl
dec
stc
jp
mov
push
aaa
shll
mov
repz
add
add
or
lret
test
cs
xchg
fisubrs
pop
adcl
pop
out
clc
push
sbb
je
adc
mov
insl
add
mov
cmc
jecxz
fimuls
pop
gs
in
sub
scas
sub
mov
mov
test
mov
dec
aaa
pop
cmp
mov
pop
mov
inc
scas
jl
icebp
cmp
mov
mov
jp
subl
mov
push
lods
push
in
mov
dec
dec
xorl
pusha
pop
jo
and
push
mov
test
leave
cmpsl
fsubrs
mov
inc
test
out
data16
sub
mov
movsb
loop
jne
push
adc
ret
mov
std
sbb
pop
jns
leave
data16
cs
sbb
sub
sbb
nop
add
mov
mov
adc
inc
lods
sahf
cmp
test
stos
mov
xchg
data16
enter
jns
daa
sbb
adc
jns
adc
arpl
mov
mov
decb
mov
and
xor
out
sub
cmc
cmp
push
lret
call
and
sub
lret
andb
push
cmpsb
popf
and
sub
dec
out
push
jno
loopne
aas
loop
cmpl
push
inc
mov
scas
imul
xchg
sub
mov
sbbl
push
mov
lds
adc
mov
xlat
scas
pop
jecxz
data16
mov
pop
pop
push
xchg
mov
xor
sbb
lock
scas
sbb
pop
pop
mov
test
cltd
cld
mov
pop
push
push
stos
dec
or
xor
iret
push
cmovp
call
lods
add
jae
mov
cmp
cmp
mov
insb
jmp
xchg
fcompl
cltd
outsb
lret
es
aaa
cmp
mov
add
xlat
repnz
mov
ret
scas
pop
movsl
inc
sbb
fisttpl
gs
jne
sub
mov
mov
inc
add
push
dec
popf
iret
fimuls
outsl
push
std
jecxz
inc
pop
fsubp
aaa
or
aad
cld
cmpsb
ds
cmp
pop
test
mov
add
insb
xchg
hlt
cs
ds
or
insl
add
adc
adc
jecxz
subl
sbb
aaa
pop
pop
aaa
push
dec
js
jb
popf
mov
insb
mov
jl
aas
mov
jecxz
popa
jbe
shld
lret
jns
addb
push
andl
pop
mov
and
mov
in
push
sub
inc
leave
mov
or
adc
outsb
xchg
bound
in
sti
lock
dec
outsl
cwtl
mov
loop
addr16
mov
pop
mov
xchg
push
dec
dec
add
pop
ds
mov
inc
xchg
add
outsl
imul
add
nop
or
jp
into
cmpsb
adc
lock
fs
sbb
ja
xorl
cmp
dec
sti
cmp
pop
mov
fimuls
hlt
xchg
sub
dec
push
outsl
adc
or
mov
test
cmpsl
and
jo
loop
fs
cmp
and
movsl
push
jle
jmp
lcall
fxch
add
outsb
sub
shlb
psubsb
push
aad
and
xchg
mov
mov
dec
or
dec
test
jmp
pop
sarb
aam
sahf
mov
pop
imul
mov
dec
out
mov
outsl
pop
daa
push
ficomps
into
or
outsb
imul
int
test
rclb
subl
or
cmp
into
lods
mov
and
jle
push
mov
dec
inc
test
sub
mov
lret
adc
lahf
cmpsb
out
cmp
stos
repnz
hlt
arpl
mov
lock
dec
fs
push
push
ror
inc
js
cltd
loopne
inc
or
pop
test
push
movsb
stos
jno
xlat
aaa
jecxz
mov
addr16
aas
cmp
in
clc
imul
outsb
sbb
mov
into
inc
pop
ret
cld
jnp
sub
jne
popa
popa
sub
or
imul
inc
lea
jmp
xor
cmp
dec
pop
push
pop
xor
repnz
je
roll
gs
jge
add
jmp
and
fcomps
sbb
mov
xlat
sbb
lret
jge
mov
mov
test
mov
mov
inc
jns
add
movsl
ret
push
movsl
xchg
icebp
sub
arpl
inc
sbb
in
fsubs
les
or
jnp
sahf
scas
cld
add
rol
sub
cmp
dec
movsl
sbb
enter
out
pop
xor
repnz
fsubrs
mov
mov
pop
fldl
mov
shll
cmpsl
test
imul
push
bound
push
rclb
push
pop
adc
notl
pop
or
aas
dec
test
mov
in
sbb
cld
add
movsb
mov
inc
clc
jb
or
xor
or
mov
clc
lcall
in
in
fistpl
icebp
out
out
xor
rep
ret
xor
gs
outsl
pop
popa
adc
addr16
push
das
push
ret
or
imul
ror
js
push
adc
mov
push
and
cmpsl
add
and
jp
sub
out
mov
jbe
imul
int
aam
daa
cld
addr16
adc
pop
xor
jns
movsb
es
jnp
sahf
pop
adc
dec
xlat
addr16
mov
es
fstp
mov
push
mov
test
ret
repz
xchg
lods
dec
enter
push
xchg
add
xlat
mov
into
inc
aam
imul
in
xor
push
jp
push
mov
ja
movsl
aaa
insb
dec
jle
test
adc
aaa
lcall
push
xor
pop
or
adc
push
ss
sub
stos
mov
mov
or
mov
clc
jecxz
push
mov
stos
mov
adc
add
sub
add
lret
jge
das
add
sbb
mov
mov
pop
jo
or
cmpb
add
push
and
scas
jae
pushf
fcoml
stc
aas
lods
pop
add
pop
inc
out
rorl
pushf
test
in
mov
aas
sub
inc
fcomps
cmp
push
je
mov
outsl
or
sbb
repnz
scas
dec
movsl
sahf
xor
shll
sahf
xor
sbb
pusha
pop
mov
mov
aad
aad
in
or
lock
das
rclb
pop
adc
dec
jecxz
mov
and
push
xor
arpl
mov
inc
cli
inc
sub
lods
es
adc
cmp
clc
cmp
lods
clc
and
sub
cld
xchg
and
les
jb
pop
in
mov
lea
fldcw
insb
lret
push
mov
dec
sub
mov
leave
push
jns
adc
mov
rcl
push
add
mov
in
icebp
aad
jmp
mov
data16
cmpsb
push
inc
test
ss
sub
jns
mov
notl
test
mov
ljmp
icebp
lcall
data16
shrb
test
add
movsl
insl
and
repz
bound
stos
iret
pop
mov
js
mov
or
mov
inc
std
jmp
dec
cmc
push
and
shrl
dec
sbbb
and
shrb
in
repz
loop
sub
cld
pop
stc
fists
mov
out
repnz
icebp
mov
inc
or
out
xchg
xchg
daa
cmp
lds
mov
sbb
data16
xchg
xor
loop
mov
pop
adc
data16
jnp
mov
mov
xchg
push
nop
push
mov
pop
mov
shlb
and
ja
notl
lahf
cmp
pusha
test
cmpsb
cmp
push
imul
jne
leave
test
lahf
sub
lock
push
inc
mov
es
sahf
cmp
in
not
loope
push
es
popf
mov
andl
mov
pushf
les
pop
inc
imul
dec
push
ja
testl
movsb
fs
cmp
push
imul
mov
sub
bound
push
jns
aas
jo
adc
cwtl
repnz
iret
push
xor
cmp
add
loopne
mov
jle
cld
lcall
arpl
push
mov
adc
ja
sbb
jno
dec
les
mov
pop
mov
test
mov
jbe
and
or
fmuls
jns
cwtl
enter
rcll
adc
mov
ficoml
fmuls
lea
insl
imul
iret
add
repnz
ja
cwtl
jp
int
jnp
xchg
xor
ljmp
or
push
lret
fisttpl
ja
adc
adc
and
inc
dec
add
int
mov
je
lret
rol
aad
mov
add
xchg
imul
jle
adc
xor
jecxz
aas
imull
jmp
aaa
jecxz
orb
sbb
sub
lds
xchg
sarl
cmp
cmp
int
cmpps
testb
ds
sbb
jae
loop
push
loopne
fisttpll
xor
xchg
xor
aad
cmp
jg
jl
mov
xchg
nop
popa
scas
decl
mov
pop
cmp
pop
into
push
dec
jmp
fistpll
fimuls
outsl
pushf
push
out
lcall
daa
inc
aas
jb
bound
aas
and
repnz
push
int3
jbe
cmp
mov
jne
jnp
mov
movsl
lret
mov
mov
je
add
lret
pop
push
jns
ljmp
call
scas
lods
fcoms
in
lods
mov
popa
add
xchg
fbstp
test
ljmp
sbb
out
push
mov
xchg
xchg
loop
loopne
in
cs
and
mov
xor
jle
and
popf
inc
lahf
addr16
push
adc
popf
push
and
cmp
out
push
repz
scas
push
pop
jge
pushf
test
test
std
sbb
mov
xchg
adc
xchg
test
outsb
inc
inc
cli
movb
xchg
xchg
jb
cli
cwtl
pop
cld
pop
and
push
loope
aas
adc
push
sub
imul
fdivrs
lahf
add
and
xchg
mov
mov
test
not
popf
push
pop
inc
int3
jb
inc
pop
or
ret
push
dec
inc
dec
test
sbb
cmp
ljmp
pop
ret
adc
dec
clc
inc
dec
in
jg
imul
popf
cmp
adc
dec
sub
stc
xchg
jle
jle
fs
jp
mov
fldcw
mov
out
loope
mulb
dec
out
xor
or
dec
xchg
mov
push
insl
scas
loopne
mov
dec
and
inc
leave
jg
dec
fldt
or
out
into
and
filds
adc
mov
mov
int
ret
sbb
pop
fldenv
clc
cmpsb
lahf
aad
pop
test
loope
xchg
pop
test
imul
fistpl
bound
lret
jns
dec
fucomi
pop
fdivl
daa
jl
stos
daa
mov
pop
jnp
loope
or
test
lock
adc
out
xor
stc
jmp
scas
pop
test
mov
sub
iret
inc
enter
mov
aam
lcall
iret
sub
stos
fcoms
insb
mov
or
xor
jecxz
push
mov
sti
mov
sub
push
cld
or
out
dec
sbb
rorb
mov
dec
adc
je
adc
call
add
shlb
movsl
fldenv
xchg
scas
fstl
jge
mov
cs
dec
int
int
roll
sub
push
or
add
loope
imul
push
clc
fstl
and
and
sbb
xchg
loopne
les
push
jecxz
iret
add
outsb
and
pop
mov
sbb
pop
cld
test
inc
jp
outsb
ror
pop
add
subl
inc
shld
jmp
std
mov
fcmovbe
mov
pop
ret
mov
push
mov
push
das
cli
push
test
loope
mov
movsl
mov
push
lret
lahf
lock
inc
push
xor
cmc
adcb
outsb
or
inc
xor
lods
xchg
jns
xor
push
fdivrl
dec
push
push
xor
lcall
enter
adc
push
dec
sub
dec
popa
dec
dec
mov
mov
jecxz
pop
in
enter
in
std
popf
adc
jb
jge
jno
sbb
or
xchg
pop
ficomps
pop
int
fucomi
push
stos
mov
addl
cli
je
idivb
scas
and
inc
scas
jl
jae
xchg
dec
aad
ljmp
movsb
add
mov
cmc
jecxz
cmp
add
push
or
fadds
es
xchg
fcoms
cs
or
add
sar
mov
add
test
sub
pop
sbb
cmp
fmull
loop
lods
mov
or
pushf
sub
sbb
icebp
cmp
int
test
pop
mov
lret
or
mov
sub
test
sbb
push
scas
in
add
push
pop
inc
sub
jb
rclb
pop
arpl
fwait
in
test
push
rcrb
rolb
pop
fdivrl
wbinvd
cmp
or
push
addr16
pop
or
add
jmp
in
jecxz
sub
mov
es
mov
aad
rcr
cmp
push
popf
subl
fs
sbb
push
into
xor
xchg
testb
fnstsw
or
or
or
cmpl
add
scas
cltd
je
cmp
xchg
aas
sbb
scas
mov
cmp
adcl
lcall
rorl
daa
inc
aas
pop
xchg
outsl
test
mov
dec
cltd
and
mov
aam
adc
mov
inc
cld
xor
push
mov
mov
ja
aad
sbb
sbb
ds
cmp
mov
jno
jg
mov
xor
mov
ds
mov
cmp
sti
lock
pop
ficomps
jo
dec
lods
fwait
repz
popa
mov
mov
inc
push
nop
out
pop
mov
pop
leave
jg
clc
sub
aad
pop
sbb
imull
or
jne
sub
add
xlat
nop
pop
mov
xchg
pushf
cmc
cltd
ret
dec
sbb
dec
cmp
shl
push
dec
cmp
loopne
inc
adc
int3
sub
sbb
dec
and
and
rcrb
int
mov
scas
imul
test
sbb
int3
cltd
lcall
into
xor
shl
scas
and
xlat
adc
sbb
adc
mov
cmp
or
adc
arpl
mov
hlt
outsl
sub
mov
xchg
push
add
movsb
xchg
sub
movsb
dec
sub
sbb
or
cld
pop
fnstcw
add
pushf
fimull
sahf
add
ljmp
mov
das
sub
testb
jae
mov
push
mov
cmp
jo
pusha
mov
inc
rolb
dec
daa
das
xor
cmpsb
movsb
mov
jecxz
ret
adc
push
xchg
push
dec
ljmp
popa
and
pop
mov
mov
sbbb
pop
cmp
xor
add
jp
movsb
jno
lahf
cmp
loop
clc
inc
lods
pop
lds
xchg
mov
pop
jo
das
cs
cltd
adc
js
addr16
cmp
xchg
cwtl
jne
mov
inc
sub
movsl
pop
ret
fs
xchg
mov
cwtl
shrb
rcl
or
rclb
jl
pop
ds
insl
sti
scas
jmp
popf
mov
scas
cmp
push
jnp
dec
sbb
in
outsl
adc
cmp
jbe
jnp
push
push
insl
mov
int
cmpsb
outsb
or
stc
ljmp
inc
push
icebp
pushf
mov
clc
dec
out
cmp
push
into
mov
jne
loope
fcoml
sbb
dec
xor
mov
jp
repz
xchg
in
ss
jmp
popf
mov
xchg
int3
imul
cmp
jae
lods
pop
jge
add
cmp
fwait
mov
mov
rcrb
imul
int3
pop
aad
inc
mov
iret
dec
inc
cmp
mov
int3
int
add
cmpsl
cmp
mov
in
ret
je
fdivr
sub
dec
jb
cmp
loop
sbb
mov
jo
xor
ss
lock
dec
in
pop
pop
xchg
inc
add
xchg
push
aam
and
xchg
dec
int3
in
push
jns
sbb
sbb
inc
ret
jae
and
aad
pop
sub
out
stc
mov
and
imul
js
js
pop
push
dec
iret
fbld
ja
inc
mov
stos
cmp
lret
mov
jg
jmp
mov
adc
bound
push
sbb
or
test
divps
sbb
stc
nop
pop
test
aad
enter
inc
mov
jae
pushf
fs
call
mov
rclb
cltd
mov
mov
rolb
add
cmp
pop
sbbl
adc
and
mov
rcl
pop
mov
subl
test
fwait
dec
or
xchg
mov
push
dec
push
orl
mov
arpl
push
test
aas
mov
mov
lods
shlb
mov
dec
cmc
mov
jl
xchg
mov
pop
cmc
dec
movsb
push
imul
ret
scas
push
inc
push
xor
add
cmpsb
clc
pop
call
and
mov
jnp
popf
pop
cmp
imul
in
fisttpl
test
sub
in
mov
cltd
xor
fldl
das
xchg
gs
xor
int3
loop
call
repz
jl
negb
cld
add
enter
lret
adc
jb
movl
jp
jo
aam
adc
pushl
and
xchg
fistps
cs
ss
out
call
pop
mov
push
add
xorl
leave
testl
pop
fbstp
jbe
ljmp
jle
fs
ss
sbb
jp
bound
pop
inc
jl
mul
pop
xor
and
xor
jae
xor
push
and
aam
pop
sub
loop
dec
mov
stos
add
sbb
test
test
hlt
xor
f2xm1
sarb
sub
inc
push
outsb
and
mov
dec
sub
in
and
xchg
je
and
rol
xor
inc
das
add
insb
pop
jnp
cmp
push
lcall
jbe
jge
ja
adc
push
adc
pop
push
jmp
sub
jne
icebp
add
sbb
clc
bound
xchg
mov
sub
lods
dec
icebp
pop
mov
cmp
mov
cmp
adc
sub
jmp
and
mov
in
push
js
mov
xor
push
inc
mov
mov
scas
mov
mov
pop
scas
test
xor
xchg
leave
and
int3
bound
and
mov
insb
jg
ret
clc
jl
insl
push
daa
xlat
cmp
or
jle
or
pop
jno
lret
push
inc
stos
in
lods
dec
mov
cmp
pop
sahf
pop
inc
jg
mov
sub
idiv
mov
sbb
sti
pop
mov
adc
insb
and
push
sarl
stc
push
and
jle
or
cs
mov
cmc
sarb
jge
mov
add
repz
repnz
jge
test
pop
ds
lea
jae
cwtl
pop
js
jae
jmp
inc
scas
push
iret
pop
into
mov
sti
adc
and
movsl
nop
insb
xor
jo
inc
loop
pop
stos
nop
push
je
inc
popf
imul
push
icebp
ret
decb
ret
push
clc
mov
jb
clc
pop
dec
add
ficomps
dec
fisubrl
ret
cmp
inc
cmpsl
popa
fs
sbb
negl
pop
popf
dec
in
mov
add
std
push
sbb
fstl
push
pop
es
das
fs
aaa
xor
mov
push
cmp
and
fmuls
addl
das
mov
xchg
out
gs
inc
sti
aaa
stos
ljmp
arpl
sub
vmread
push
mov
int
pop
sti
imul
addr16
push
mov
mov
arpl
lcall
or
inc
enter
sub
pop
adc
jnp
enter
add
scas
outsb
out
fs
nop
dec
aas
shrl
les
je
cs
push
inc
xchg
jmp
ss
mov
cmp
movsl
inc
call
insl
push
into
jae
enter
cld
cmp
repz
mov
inc
inc
movsl
test
lahf
into
cwtl
push
inc
mov
jb
adc
aam
das
pop
ljmp
push
fs
jl
add
daa
ds
fsubrl
mov
enter
cmpb
xor
ja
popa
comiss
hlt
mov
lods
addl
clc
cmp
imulb
dec
mov
hlt
in
pop
pop
cld
popf
inc
call
push
or
mov
loope
int
leave
jo
add
mov
out
mov
sbb
in
mov
mov
subb
mov
das
cmp
lods
pop
div
pusha
or
inc
stc
ss
sahf
repz
mov
popa
adc
mov
or
or
adc
in
xlat
sub
mov
dec
cmp
pop
pushf
or
sub
inc
cmp
clc
inc
int3
sarb
fidivl
pop
mov
pop
xchg
popa
daa
adc
leave
je
dec
ja
aam
mov
idivl
sbb
lret
negb
xlat
movsl
sub
nop
jp
aad
xchg
mov
adc
inc
jp
cmp
or
mov
pop
loop
mov
enter
and
outsl
xorb
fwait
outsb
adc
jmp
push
inc
xchg
add
mov
aam
sbb
dec
out
adc
rorl
sti
decl
in
pop
cmpsl
jmp
cltd
cmp
cwtl
ret
lods
dec
jne
cmpsl
xchg
jecxz
lods
xchg
mov
and
mov
addb
mov
das
test
rcrl
mov
dec
mov
dec
jbe
cmpsl
mov
inc
test
push
jno
xchg
sub
add
xlat
daa
cwtl
cli
push
rclb
cli
mov
cmp
xor
pop
pop
aam
adc
icebp
shlb
xchg
push
push
mov
pop
xchg
mov
rcr
xchg
fiaddl
mov
dec
xchg
cmp
cmp
inc
sub
and
inc
pop
shl
add
test
add
icebp
mov
mov
jmp
add
iret
icebp
insl
jae
jmp
push
adc
pop
ret
add
frstor
or
in
push
push
pop
and
out
jle
pop
mov
push
xor
pop
inc
test
add
icebp
scas
rcrb
xor
pandn
push
or
dec
dec
mov
sub
xor
movsl
add
mov
fs
daa
xchg
fdivrp
fldcw
test
mov
xor
rcll
xlat
addr16
popa
pop
xchg
adc
push
pushf
or
jne
aaa
sarl
cmp
inc
lock
in
imul
inc
mov
int
dec
stc
fldl
cmpsb
test
ret
pop
ljmp
loop,pt
xor
pop
dec
loopne
imulb
les
fbld
into
inc
xor
imul
mov
mov
ret
xchg
xchg
ja
jl
fldt
mov
add
insl
cmp
xchg
xchg
sub
addr16
incl
mov
inc
lods
flds
pop
jp
adc
jns
jb
push
jmp
cli
xchg
pop
dec
inc
sti
jae
or
jmp
and
ja
pop
nop
xchg
movsl
mov
fmul
push
es
mov
xlat
test
jbe
sub
inc
pop
je
in
cli
pop
std
sbb
fcomps
loopne
xor
and
cltd
adc
stos
decb
popa
push
adc
xor
jo
enter
adc
mov
ljmp
mov
xchg
pushf
ljmp
sbbl
pop
or
gs
jnp
jle
popf
dec
aas
outsl
pop
and
or
inc
cltd
mov
orb
inc
jne
movsl
sar
fstpl
and
mov
loop
mov
inc
test
lods
cmc
shrb
mov
lock
stc
xchg
shr
fs
jnp
out
inc
add
or
xchg
cld
add
and
icebp
insl
inc
outsb
clc
fs
jno
adc
insb
fnstenv
sbb
icebp
push
fcomp
jns
push
call
ret
mov
jg
iret
nop
movsb
cmpsb
xchg
insb
xchg
out
or
inc
out
out
sbb
popf
sub
and
icebp
xor
adc
adc
sub
insl
into
ret
sub
test
inc
push
movsl
lcall
scas
add
mov
rcr
std
push
or
add
pop
xor
aad
dec
jmp
fcomp
xchg
dec
jne
push
cmp
repnz
jmp
push
fwait
mov
xchg
jbe
repnz
in
adc
fsubrl
jg
xor
add
sbb
dec
xchg
sbb
hlt
mov
push
scas
sub
arpl
add
dec
fisubrs
fldcw
mov
movq
lret
cld
out
icebp
pop
pop
and
xor
mul
mov
out
data16
movsl
adc
xor
jo
inc
xor
pusha
adc
and
push
divb
and
test
dec
leave
fwait
std
xor
loop
int3
mov
imul
sub
fisubrl
xor
cmpsb
imul
negb
push
cld
push
imulb
xchg
loopne
rcr
sub
push
mov
aad
mov
addl
ja
or
cmp
sub
jmp
in
jl
into
cmp
nop
ss
lcall
push
ljmp
mov
dec
mov
cmp
loope
sbb
and
jbe
and
pusha
xchg
rol
adcb
inc
lods
jno
mov
in
ds
arpl
test
aam
clc
fists
orl
xor
xor
cld
insb
int
adcb
sub
inc
cli
aam
push
cmpsb
dec
mov
adc
and
lods
adc
sbb
sar
out
cld
test
orb
std
pop
dec
bound
jb
jecxz
cwtl
cmp
push
inc
adc
aam
xor
imulb
mov
dec
sbb
cmp
pop
loopne
sub
xchg
pop
inc
aas
mov
lret
push
mov
pushw
movsl
dec
xchg
adc
hlt
mov
test
pop
shl
adc
fdivrl
sbb
mov
dec
cmpsb
jae
jne
pop
inc
fisubs
push
movsb
lods
movsl
mov
fsubrl
mov
pop
dec
es
add
mov
into
mov
mov
aas
pop
xor
jl
or
xchg
sub
lods
es
outsb
out
test
std
sbb
in
jnp
insl
in
lods
imul
push
cmp
loopne
inc
scas
call
cmp
test
cmpsw
add
cmc
mov
fcmovnu
outsb
mov
or
jge
outsl
pop
mull
ficoms
push
mov
in
mov
addr16
jno
cmpsl
and
or
iret
xchg
mov
jge
sbb
test
pop
jae
mov
mov
push
xor
into
jg
sub
pop
inc
cmp
aad
or
fsubrs
sbb
mov
stos
sub
loope
hlt
adc
push
test
movl
testb
mov
test
sahf
enter
adc
inc
cltd
xchg
cmp
or
cld
pop
jecxz
jne
inc
mov
lcall
std
dec
cmp
xor
aas
xor
sub
sub
je
pop
jb
pop
xchg
dec
inc
mov
and
filds
sahf
dec
pop
pop
imul
cmp
gs
in
negb
hlt
cli
lret
scas
lret
out
cwtl
fs
sub
and
sbb
xchg
jno
pop
sub
sti
jne
jb
sbb
pop
adc
jmp
jecxz
jb
jmp
inc
or
cwtl
jne
adc
pop
aad
in
push
lea
mov
js
jbe
pop
mov
std
stos
inc
test
sti
in
lods
imul
dec
int3
mov
pusha
inc
fisttpl
mov
sbb
mov
add
push
hlt
mov
push
out
sub
ficompl
add
jo
cmc
cmp
sbb
mov
je
js
push
pop
inc
insl
jae
setb
movsb
push
adc
call
icebp
loope
pop
lds
push
jle
push
jge
lock
pop
add
xchg
aaa
sbb
mov
ficomps
jns
push
leave
dec
pop
inc
cwtl
shll
ret
daa
call
ja
xchg
or
pop
jmp
xchg
test
push
jecxz
ficoml
xchg
addl
insl
ljmp
cltd
inc
xor
fcompl
out
insb
mov
test
mov
fnstcw
cld
leave
adc
addl
lods
aas
arpl
int3
shrb
imul
loop
sub
or
aad
xor
bound
pusha
add
sub
jno
shll
andl
cwtl
rorb
pop
mov
addb
sub
fwait
sbb
jge
mov
sub
pop
sub
insl
int3
imul
pop
addr16
fistpl
dec
jecxz
xchg
xlat
stos
and
sbb
mov
pop
in
mov
test
mov
imul
ret
mov
adc
push
bound
xor
insb
aaa
notl
and
js
xor
ljmp
dec
push
cmp
sub
sub
ret
popf
xchg
inc
push
sbb
mov
jl
in
or
repnz
int3
mul
es
in
lret
movsb
jmp
mov
mov
xor
fiaddl
data16
cmp
das
shl
aaa
popf
mov
loopne
push
jno
push
adc
mov
mov
xchg
mov
sbb
outsb
outsb
cmp
mov
outsb
inc
mov
in
aas
sub
repnz
in
dec
outsb
inc
scas
loop
loop
outsb
xchg
mov
lcall
pop
cld
xor
loop
mov
mov
aas
push
xor
cmp
push
and
sbb
rcr
cmp
orb
mov
lcall
mov
ss
sbb
fcomip
cmc
xchg
fiadds
fcmovne
jl
jl
insl
cmp
mov
adc
inc
xor
adc
sub
fadd
sub
or
insb
pop
rcr
push
repnz
js
out
mov
mov
aas
or
jo
pop
iret
mov
cmp
jmp
dec
jae
sar
push
pusha
in
inc
dec
stos
pop
push
ja
pop
pop
mov
lds
push
mov
insl
mov
imul
add
flds
mov
jle
xchg
pop
in
loope
insb
pop
test
mov
daa
and
std
and
push
sub
cmp
and
pop
push
xchg
mov
shll
shll
mov
je
adc
testb
mov
cltd
stos
fldl
and
fwait
mov
mov
sub
not
mov
jle
and
or
mov
inc
mov
mov
fxch
adc
push
addl
call
in
inc
in
sub
mov
out
sub
lods
stos
add
mov
jmp
add
mov
push
push
xchg
xchg
mov
test
xor
mov
mov
loop
cltd
popl
pop
xchg
xchg
out
adc
out
and
jmp
mov
mov
pop
mov
fdiv
xchg
int
xchg
jbe
sbb
or
lods
xlat
or
pop
scas
or
add
or
aas
xorb
insb
and
push
sahf
dec
cli
push
sarl
jge
push
jecxz
orb
mov
xchg
mov
jl
mov
call
stc
and
lea
cmc
ret
xorb
ja
cltd
test
cmc
xchg
cvtps2pd
cld
out
mov
in
or
mov
test
ret
ret
or
jns
or
decl
xchg
jns
dec
stos
mov
xchg
mov
ret
movl
repz
xchg
arpl
imul
int
test
outsb
pop
ljmp
xor
sti
and
sub
roll
or
and
pop
lods
imul
dec
std
dec
lods
std
add
cmp
sarl
mov
or
ljmp
aam
push
dec
test
mov
movsl
inc
adc
xchg
in
push
popa
fsubr
into
sub
or
cmp
xlat
mov
mov
std
mov
add
arpl
jo
rorl
mov
sub
lret
aam
push
xor
lods
gs
sti
je
sti
pop
movsb
call
xlat
xchg
insl
push
mov
lret
mov
mov
leave
mov
pop
inc
pop
pop
mov
aad
arpl
mov
lahf
stos
rcll
mov
sub
sbb
sti
mov
pop
lods
push
inc
cwtl
pop
pop
mov
aas
movsb
shlb
ret
stc
repz
insb
sbb
aaa
fsubs
cwtl
nop
popf
enter
or
test
jg
lock
add
push
movsl
or
lahf
mov
fcmovnbe
push
inc
loopne
inc
lods
push
lahf
out
adc
pop
repnz
aad
loop
data16
fidivs
mov
xor
mov
sti
xor
push
movsl
pop
mov
cmp
shll
loop
sub
lret
mov
xlat
add
ds
mov
sbb
mov
scas
into
jecxz
mov
aad
scas
mov
out
add
mov
inc
aad
rcr
pop
jg
dec
add
inc
and
xlat
xchg
sarl
lods
scas
sbb
daa
ja
jbe
cmp
xor
mov
lea
test
pusha
mov
add
les
mov
cs
mov
dec
aam
iret
sti
mov
aas
imulb
and
sbb
lahf
scas
xchg
cli
dec
ljmp
and
rorb
push
mov
pop
popf
dec
das
add
cwtl
lods
pop
js
ret
xchg
and
cmp
adc
mov
mov
cs
imul
push
mov
in
aaa
jno
outsl
cmpsl
sub
mov
cmp
jmp
popa
jnp
sub
push
lcall
add
add
and
pop
mov
loope
mov
popa
mov
mov
mov
std
roll
cmp
ljmp
fmull
xchg
lock
cs
imul
mov
push
repz
int
shrb
sub
lret
adc
adc
inc
mov
cmc
dec
xchg
lret
sbb
adc
lcall
jbe
in
cmp
xor
orb
test
and
mov
sahf
add
push
xchg
xor
jbe
pop
daa
xor
sbb
iret
push
loope
in
push
lods
add
test
jmp
jl
sub
imul
jge
cli
adc
or
sbb
xchg
or
mov
lret
outsb
xchg
addl
mov
aas
xor
pop
pop
jp
orb
pop
add
imul
js
pop
rorb
push
xor
and
iret
mov
sbb
cmpsb
lret
outsl
jnp
lret
pushf
or
mov
mov
loop
push
lods
pusha
imul
lock
xorb
jne
data16
inc
out
add
xchg
vpcomuq
adc
mov
jno
cmp
pusha
cli
decb
inc
pusha
sbb
jne
push
adcl
into
mov
in
mov
pop
pop
div
pop
pop
fst
rclb
mov
pop
inc
das
gs
insb
push
insl
iret
xchg
mov
sbb
push
and
mov
jle
pop
mov
sub
jns
dec
inc
and
lcall
leave
mov
cmpsl
and
fwait
adc
cltd
arpl
rclb
daa
add
xchg
in
scas
inc
lock
dec
lcall
mov
repnz
jge
movsb
xor
mov
scas
outsl
xchg
ds
insb
cmc
nop
rorl
rcrb
jne
mov
dec
paddusw
movsb
push
push
arpl
incb
xchg
imul
nop
lods
es
xor
xlat
mov
pop
inc
pop
jp
or
lock
das
mov
mov
sahf
cli
call
sub
mov
pop
jne
adc
aaa
lock
ljmp
imul
outsl
mov
fistps
rorl
insl
and
pop
lret
sub
jge
ficompl
mov
mov
pusha
xchg
seta
or
mov
push
aas
and
gs
pop
inc
cmc
cmc
test
pop
xchg
repnz
sti
pushf
or
or
test
add
rcr
xchg
push
imul
pop
js
jne
test
push
and
insb
inc
pop
mov
push
lds
jb
sbb
fwait
pusha
scas
cli
sub
add
insb
fwait
lods
imul
insb
aam
pop
rcr
jge
dec
pop
call
aad
pop
int
pop
dec
aad
rolb
je
xchg
sub
lods
repnz
into
xor
push
adc
and
or
jno
adc
lea
mov
aad
gs
sub
xorl
sub
inc
cmp
js
test
aaa
pusha
dec
out
repz
clc
repz
add
in
es
push
aas
xor
testl
lahf
movsb
or
popf
fnstcw
ret
jl
jmp
dec
out
cmpsb
xchg
lock
xorl
inc
xor
adc
xchg
mov
fcoms
imul
sbb
add
inc
pop
adc
std
in
loop
enter
mov
inc
xor
cmp
or
mov
or
ljmp
loopne
lods
jnp
add
adc
aas
xchg
test
lret
mov
out
sub
or
pop
jno
adc
mov
mov
ja
dec
test
jl
and
jne
inc
mov
lret
fwait
mov
enter
stos
pop
scas
cld
cmovb
rol
rol
enter
mov
idivl
sahf
pop
popf
test
and
in
aas
sbb
push
repnz
cmp
xor
movsl
cmp
je
jae
test
inc
adc
test
push
test
lea
in
mov
fcom
lret
pushf
cmp
jne
pop
cmp
in
sub
test
fcmovnbe
sar
pop
add
mov
ret
push
scas
es
jae
cmp
jmp
cmp
addb
mov
sahf
dec
mov
out
and
pop
add
mov
jnp
and
sahf
xor
dec
inc
daa
jg
xor
int
mov
out
and
add
ss
call
or
ja
cmc
push
mov
aaa
add
mov
dec
ret
cmpsl
cltd
pop
adc
adc
xchg
mov
popa
subl
xchg
xor
movsb
and
mov
stos
stos
test
lock
stos
or
mov
xor
fadd
cmp
fimull
push
stc
mov
int3
lret
out
arpl
xor
cwtl
push
cmp
movsl
clc
je,pn
or
test
sbb
rorl
xchg
pop
dec
add
adc
pop
in
and
mov
sbb
adc
ficoml
sub
lock
xor
add
inc
and
mov
int
lahf
in
push
xchg
fistpl
popf
not
and
jmp
mov
es
sub
jle
into
ficoms
jecxz
cwtl
mov
cld
orl
jbe
adc
repnz
insb
lahf
lcall
mov
cmp
jo
stc
popf
xchg
outsl
dec
divb
fildl
dec
sub
lret
loopne
es
mov
add
roll
cli
and
testl
cmp
sub
stc
sub
jae
jmp
dec
sbb
cmpsb
xlat
loope
pop
inc
mov
mov
push
in
iret
inc
out
sub
inc
pop
out
enter
cmpsb
arpl
cmc
gs
idiv
in
bound
daa
sub
sbb
leave
stos
jnp
out
or
cltd
pusha
pop
fwait
adc
pop
shr
push
pushf
xchg
arpl
mov
sti
jae
popf
or
or
and
sbb
jnp
repnz
aam
jl
outsl
dec
repz
sub
xchg
ret
push
jle
mov
push
decb
in
mov
and
xchg
jnp
ja
sub
dec
sahf
rolb
inc
ja
mov
imul
mov
sub
outsl
inc
or
sarl
or
inc
imul
in
in
adc
sub
mov
rcr
fwait
lahf
rcrl
fisubl
jno
mov
sbbl
int3
inc
stos
imul
cmpsb
lock
ficompl
insb
push
call
lret
push
pop
mov
mov
dec
inc
mov
sbb
jnp
sbb
fldenv
lods
pop
push
test
loope
movsl
in
sub
out
jbe
orb
sbbb
jecxz
mov
sub
lock
idivb
call
dec
mov
sbb
jle
mov
mov
mov
cld
cmp
outsl
lods
push
test
ja,pt
push
mov
inc
jmp
dec
add
cvttps2pi
add
dec
outsl
push
out
adc
out
lock
stos
add
lret
mov
test
mov
out
movsb
popaw
pop
xor
push
sahf
ret
shlb
std
test
xor
push
lock
js
repz
cmp
jp
cmpsb
mov
jae
add
inc
cld
push
push
pop
mov
cld
repnz
jb
out
and
mov
data16
in
xchg
daa
inc
inc
xchg
mov
pop
push
test
add
je
enter
mov
loope
xlat
inc
outsl
pushf
mov
and
aad
dec
xchg
movsl
mov
adc
lods
popl
pop
sub
cmp
fucomi
into
shlb
sub
push
add
push
and
mov
add
mov
stos
adcb
jg
mov
push
repz
pop
fdivl
fidivl
dec
cbtw
outsl
sti
notb
add
ljmp
sub
fs
xchg
mov
xchg
xor
mov
pop
jbe
sub
pop
sti
hlt
loopne
jmp
dec
sti
scas
fimull
push
inc
inc
push
cmp
adc
add
repnz
inc
jmp
lret
fsub
and
or
mov
aad
cmp
and
dec
leave
loope
cltd
xorb
inc
test
movsl
daa
inc
fadds
ret
jnp
inc
jno
sbb
insb
cs
fdivs
repnz
loopne
mov
and
pop
negb
and
mov
inc
aas
dec
lret
xchg
inc
jle
adc
push
mov
pop
outsb
nop
lcall
or
sbb
or
add
adc
and
jb
es
mul
adc
adc
scas
fwait
mov
inc
inc
sbb
xchg
pop
mov
das
imul
xorb
call
mov
xchg
sub
daa
insl
sbb
imul
cmp
cmpsb
mov
add
jbe
mov
adc
stc
jne
dec
faddl
insb
popa
sbb
pop
adc
inc
into
jg
fstl
lea
pusha
jnp
andl
jle
and
mov
add
xor
push
sub
and
push
in
lahf
dec
add
aad
enter
cmp
call
jg
dec
lds
mov
insb
sbb
jl
sub
aaa
fwait
inc
jmp
into
loopne
mov
stc
jg
imul
jo
xchg
mov
jns
push
xor
or
cli
sub
pop
mov
bound
loope
std
mov
add
jo
push
sahf
xlat
jne
mov
gs
sarb
stos
mov
jge
int
icebp
cld
cmp
shll
and
add
mov
xchg
test
jnp
outsb
lret
cltd
pop
jg
mov
jmp
das
and
xchg
lret
xchg
cmp
push
jge
inc
push
movsb
mov
bound
negl
gs
jp
xor
je
fcomp
cmc
jp
mov
sub
jne
cmp
add
mov
sbbb
les
xchg
jb
mov
inc
sbb
cmc
pop
pop
ret
fistps
movsl
mov
arpl
or
js
xchg
imul
ja
stc
push
and
dec
in
push
mov
in
stos
sti
mov
pop
nop
insl
fs
cltd
aaa
out
out
fwait
add
fildl
dec
stos
mov
push
movsl
dec
lret
insb
lds
inc
aas
sbb
out
cmpsl
jns
mov
push
inc
mov
daa
inc
inc
stc
add
bound
cld
ss
mov
or
push
pop
dec
test
data16
shrb
inc
xchg
fninit
pop
clc
mov
or
int3
inc
fcmovnu
in
or
in
xchg
mov
hlt
fidivrs
and
daa
pop
ljmp
sbb
jge
in
sbb
push
xchg
outsl
lcall
pusha
dec
mov
xchg
out
enter
add
push
pushf
out
lret
rclb
mov
aam
inc
test
movsb
or
sbb
mov
cmp
xor
pop
and
jb
lea
sbb
addb
inc
repnz
adc
popf
sar
pop
cmp
push
stos
cs
mov
xchg
push
xchg
pusha
sub
mov
test
mov
inc
test
cld
subb
cmpsl
sbb
xchg
cmp
repnz
rclb
push
inc
pop
out
lods
sub
fs
jns
loope
test
in
insb
xchg
mov
insl
out
mov
xchg
aas
xchg
hlt
sub
mov
push
jp
cli
mov
mov
fmull
mov
xor
mov
and
mov
leave
gs
mov
xchg
lock
cli
inc
scas
cmp
popa
jg
cmp
add
testb
shrl
fstps
pop
out
and
pop
push
jg
sbb
dec
hlt
adcl
xorl
add
push
orb
pushf
fldenv
lret
imul
push
loopne
add
push
rcll
leave
mov
jb
cli
mov
push
jns
ljmp
adc
les
xor
and
mov
xor
cwtl
aaa
xchg
repnz
imul
rclb
mov
rcrl
inc
inc
inc
in
std
mov
shr
push
inc
inc
sub
push
mov
iret
int3
cmp
xor
test
fstpl
jb
push
adc
jp
mov
sti
jp
je
test
shrb
out
cmp
aaa
int
jge
cwtl
and
ss
scas
xchg
lods
jecxz
outsb
mov
mov
add
outsb
ds
cmp
mov
push
jge
das
lods
lods
int3
lods
lock
ret
fs
psubq
and
xchg
aas
das
mov
xchg
fs
pop
orl
shrl
sub
mov
setbe
adc
popa
jecxz
push
adc
cld
hlt
inc
insl
push
mov
or
adc
xchg
mov
adcb
xor
lret
cmpsl
xlat
lret
clc
pop
iret
cltd
adc
out
loop
xchg
aas
repnz
xor
pop
and
scas
pop
insb
inc
push
jae
hlt
push
sub
jl
mov
add
adc
xchg
rorb
cmp
mov
add
andb
div
iret
mov
mov
mov
mov
lcall
outsb
movsb
pusha
pusha
sahf
or
mov
out
cmp
imulb
notl
sub
sbb
mov
xor
jp
test
jp
add
mov
xchg
sub
fs
add
mov
and
sti
fs
jne
adc
inc
push
lcall
arpl
fidivl
mov
fwait
xchg
sub
lret
lock
xchg
dec
ds
ljmp
clc
pop
popa
clc
or
cwtl
cmp
hlt
jg
outsl
imul
daa
inc
jne
dec
outsb
xchg
xor
pop
push
pop
xchg
jmp
inc
lock
mov
int
gs
out
inc
in
push
mov
outsb
loop
cs
dec
and
xor
push
lret
stc
pop
mov
xor
nop
ljmp
in
enter
add
hlt
rcrb
and
fisubrs
inc
push
int3
shll
push
fcompl
test
imul
mov
aam
lahf
in
fcompl
xchg
jp
movsb
cli
xor
mov
mov
sbbl
cltd
popf
loop
jne
cmpsb
sub
add
mov
cli
in
inc
add
fs
jo
pusha
aam
leave
lods
imul
shld
int
lds
test
ret
neg
mov
aaa
or
das
add
push
add
movsb
scas
or
sbb
push
cmp
sbb
ja
dec
and
sub
xor
pusha
mov
pop
push
mov
scas
cltd
cmpsb
jecxz
xlat
loop
cmpsb
push
sbb
dec
push
fsubr
int
imul
fwait
pmaddwd
or
add
fisttps
inc
sbb
dec
popf
dec
cltd
repz
iret
pop
and
jnp
mov
mov
out
sub
imul
push
mov
lret
jmp
add
icebp
jb
scas
repnz
gs
cmp
mov
rcrb
cmp
cltd
push
int3
xor
jmp
and
ds
sbb
leave
and
popf
xchg
rcrl
mov
jle
in
xchg
and
lods
jbe
rol
or
or
addl
pop
lret
pop
pop
stos
inc
cmp
fwait
lock
push
loope,pt
inc
push
jp
sbb
pop
call
out
test
and
adc
jl
sbb
int
push
add
mov
adcb
jae
pop
stos
rorl
jo
ljmp
lcall
movsl
daa
fdivs
imul
js
insl
aam
pop
xchg
aas
mov
and
and
cmp
mov
push
mov
bsf
adc
mov
repnz
mov
cs
pop
push
xor
imul
shll
add
push
vmovupd
das
mov
daa
pop
icebp
int
inc
int
push
in
inc
into
cmp
mov
cmp
nop
mov
pop
cmpsb
or
hlt
lret
nop
movsl
mov
ficoml
jns
cmpsb
cld
pusha
rcl
daa
arpl
jle
pop
xor
in
cmpsl
pushf
subb
pop
imul
cmc
sti
fcoms
sbb
add
adc
fsubrs
loop
sbb
mov
dec
mov
jp
mov
hlt
mov
mov
sub
push
dec
lds
into
rorl
mov
adc
sub
je
movsl
sub
sub
popf
or
adc
es
sahf
sbbb
push
mov
adc
shll
pop
ja
jg
movsb
adc
mov
sbb
xor
lmsw
mov
aad
and
cmpsl
in
repz
test
xchg
loop
add
add
inc
push
xchg
lcall
sbb
les
pop
jle
pop
jl
adc
dec
ljmp
push
lds
and
in
push
lods
jnp
jl
andb
cwtl
xchg
or
jge
les
cltd
inc
or
pop
mov
addr16
mov
ja
lds
push
in
sbb
data16
icebp
mov
ret
pcmpgtw
jmp
fsubs
pushf
cwtl
jp
push
xorl
and
pop
ja
jp
test
sub
or
dec
xchg
xor
mov
popa
xchg
add
rolb
dec
jns
in
pop
fs
into
cltd
cs
jmp
pop
mov
jge
mov
repnz
rcll
enter
push
js
es
jno
repnz
or
shll
add
dec
jo
cli
mov
xor
jl
loope
cltd
stos
xchg
lret
push
in
jnp
sub
jle
pop
testl
jl
push
mov
movsb
mov
movsb
mov
mov
and
and
jne
popf
icebp
arpl
pop
or
sub
mov
in
sbb
xchg
and
cltd
pop
enter
cld
sbb
scas
xor
jae
out
aaa
push
int3
adc
fnstsw
test
or
xchg
jns
cltd
add
ret
pop
dec
add
mov
lahf
aad
mov
lret
dec
cltd
aam
into
or
mov
ret
loope
mov
and
outsb
movsl
and
ret
popa
xchg
mov
push
push
mov
aas
test
push
lret
pop
and
scas
fsts
daa
xchg
inc
inc
insb
clc
and
adc
mov
push
insl
push
int
jae
insb
xchg
in
pop
mov
test
mov
mov
mov
and
loop
cmpsl
sbb
sub
ja
in
cli
dec
jo
sub
jno
xor
mov
mov
adc
adc
mov
fadds
in
xchg
push
mov
fs
xlat
int3
leave
sbb
aad
adc
out
pop
cmc
bound
add
cmpsl
loope
lea
aas
sub
add
sub
add
leave
jno
cli
popf
rorb
sbb
shrl
mov
test
and
ficoml
jl
arpl
sub
nop
outsl
pop
sbb
test
adc
fwait
cld
cltd
ror
jmp
mov
cmp
jp
push
or
adc
pop
outsl
inc
jo
int3
bound
adcb
in
and
sub
loopne
lods
nop
jge
inc
fldt
ja
jp
cwtl
pushf
das
mov
xchg
gs
push
aaa
sub
inc
dec
pop
jns
inc
lock
icebp
addr16
daa
movb
call
loopne
movsl
outsb
mov
inc
ljmp
mov
aaa
movsb
push
popa
pop
aas
sbb
lock
enter
inc
dec
mov
lea
aam
mov
mov
sti
push
or
push
lods
or
xlat
stos
loope
xchg
ljmp
mov
imul
iret
and
push
fdiv
inc
loopne
xor
test
cwtl
icebp
mov
orb
cltd
out
sbb
xor
lcall
testl
fildl
fadd
mov
test
mov
push
xchg
lret
aas
ss
rcr
sub
lahf
push
mov
cwtl
xchg
mov
mov
sbb
dec
jae
out
fs
inc
or
loopne
fst
out
jb
xor
xor
gs
dec
mov
push
jo
loop
dec
ljmp
fidivs
lock
fisubrs
int3
sbb
and
xchg
repz
inc
jg
sub
out
loop
mov
mov
stos
push
and
nop
ja
mov
movl
and
and
sti
movsl
mov
push
sbb
and
rcr
sub
push
mov
repz
fdivrp
ss
inc
mov
pop
pop
add
stos
adc
icebp
cmp
lret
add
cwtl
sbb
repz
push
leave
mov
lcall
push
mov
jle
daa
sti
or
inc
push
adc
push
jg
into
je
xor
imul
push
clc
sub
mov
dec
xor
insl
jae
daa
aam
aaa
adc
out
sbb
pop
imul
das
or
sub
js
movsb
testb
lcall
fsubrp
mov
sub
mov
add
enter
mov
repnz
xor
fisubrs
adc
addr16
mov
and
int3
ret
and
pop
jp
pop
rorl
sub
sub
sub
add
jge
pop
xchg
addr16
push
loop
jge
or
push
mov
addl
cli
js
pop
push
adc
ds
xchg
jbe
push
loope
mov
add
movsb
jno
mov
mov
jmp
imul
jl
cltd
push
pop
xchg
add
pop
mov
push
push
les
jecxz
mov
outsb
mov
dec
addr16
fbld
test
push
loopne
iret
dec
xchg
inc
lcall
push
sub
push
jmp
xchg
fimull
xchg
mov
push
pop
aam
jb
dec
and
out
inc
ret
lret
jecxz
gs
sbb
push
adc
inc
xchg
aam
xorl
push
incb
mov
andb
cmp
or
movups
jnp
mov
das
ljmp
test
out
data16
or
jno
outsl
mov
dec
test
mov
add
jo
popa
movsb
fwait
test
push
adc
call
push
daa
ret
push
es
rorl
lea
das
int
inc
shrl
or
add
pop
push
sahf
rol
mov
pop
stos
and
jmp
mov
popl
mov
inc
push
je
or
mov
es
mov
inc
daa
leave
dec
sbb
jmp
movsb
fisubs
cmp
int
cmp
push
sti
dec
popf
push
dec
leave
mov
cmpsb
adc
insb
adc
jae
aas
enter
cmp
or
inc
fdivs
shll
adc
jb
outsb
bnd
lahf
dec
frstor
test
cmpsl
jg
faddl
pop
outsl
cwtl
mov
push
push
xor
loope
sarl
jnp
xor
jle
sub
pop
call
movsl
mov
imul
aas
and
xor
xor
mov
pop
movsb
push
nop
gs
and
xor
adc
into
add
mov
into
aas
xor
enter
out
and
not
xlat
adc
cmp
daa
lock
mov
js
jne
mov
shlb
inc
jnp
pop
mov
addl
cwtl
mov
cwtl
test
pusha
push
addr16
test
das
mov
fnstcw
sti
divl
gs
jmp
add
nop
mov
sarb
lods
int
cmp
ljmp
loope
push
adc
and
insb
mov
mov
or
add
mulb
or
bound
mov
dec
loop
jne
cltd
xchg
jecxz
scas
push
inc
aaa
xlat
and
inc
mov
jp
inc
adc
xchg
push
add
andb
mov
fcoml
pop
ret
xchg
xchg
jge
inc
mov
xor
adc
push
rcll
or
test
cmc
aad
rcll
out
sbb
cmp
fdivl
es
mov
les
or
daa
pop
xor
or
sbb
fld
or
inc
stos
inc
jle
pop
or
mov
fsubr
cs
jmp
andl
jae
or
fnstsw
repnz
jb
adc
xchg
and
ja
and
pop
sub
adc
adc
mov
fs
sbb
shr
addr16
adc
ret
aad
hlt
jge
mov
push
aam
mov
mov
aam
lds
test
cmp
inc
sti
fsubl
adc
sub
lods
mov
test
into
lods
pushf
jne
imul
inc
popa
xchg
movsl
lret
test
aam
xchg
mov
test
dec
pop
mov
xchg
out
in
dec
hlt
lret
mov
imul
mov
jnp
test
xchg
in
xchg
leave
fstps
lret
ret
cmpsl
pop
clc
mov
add
fiadds
out
sbb
leave
stos
loop
shrl
je
mov
popf
xor
mov
jbe
sbb
xchg
hlt
aas
xchg
add
stos
cwtl
pop
mov
cmp
xchg
test
xchg
in
adc
or
cmp
pop
in
mov
icebp
out
fwait
and
push
pop
jmp
outsb
mov
enter
mov
or
push
push
in
push
jg
sub
push
jle
jbe
scas
push
xor
fidivrl
cmp
insl
mov
or
aaa
adc
stos
mov
imul
lret
in
xchg
rorb
ret
outsl
sub
cmp
xchg
icebp
mov
fwait
adc
inc
mov
aas
add
add
mov
sub
jg
cld
addr16
fadd
popa
pop
push
or
mov
fistpll
add
into
xchg
xor
cltd
xchg
lock
push
dec
jne
mov
xchg
adc
mov
shrl
icebp
andl
fdivs
loope
mov
pop
ret
sbb
mov
insb
insl
movsb
mov
mov
stos
stc
insb
jg
cld
mov
lret
jbe
ficomps
jp
adc
mov
lcall
push
pcmpeqd
daa
sub
mov
in
xchg
movsb
cmpb
jo
repnz
adc
jmp
fdivr
fcmovne
addr16
jg
and
sub
jns
push
mov
jae
icebp
mov
xchg
or
test
orl
jae
dec
push
jge
and
push
nop
aaa
jo
jno
shrl
xchg
sarb
adc
push
lahf
sti
cmp
pop
sub
pop
call
into
cmpb
adc
cmp
xor
dec
push
outsb
cs
cmp
bound
adc
push
push
cmp
iret
pop
xor
or
mov
aaa
or
loopne
lcall
xor
bound
cwtl
inc
sbb
adc
test
out
jns
jl
dec
stc
daa
jp
ljmp
hlt
mov
mov
sbb
sbb
jle
into
dec
aaa
push
test
push
dec
test
xchg
pop
add
mov
stc
dec
les
mov
ds
adc
push
andps
out
xchg
jmp
inc
dec
jle
dec
xchg
cld
je
fcmovbe
loope
loop
addr16
sub
xor
add
mov
cmp
sub
push
inc
push
aam
mov
ja
sbb
xlat
add
xlat
cli
sahf
fists
dec
add
pop
mov
rcl
jmp
cli
out
js
imul
push
jg
loopne
mov
pop
jne
lea
popf
add
ret
sbb
xor
xchg
and
inc
les
test
pop
sub
mov
sbb
test
test
push
xchg
xchg
test
into
data16
call
shr
push
call
jnp
adc
bnd
inc
jl
xor
push
lcall
dec
inc
in
repz
or
push
or
dec
xchg
and
cmpb
xor
mov
ret
icebp
pop
js
ret
out
out
mov
add
stos
dec
jo
ror
xchg
xor
xor
popf
sbb
mov
pop
adc
mov
testl
lahf
mov
lock
mov
add
mov
out
enter
scas
cmp
aas
outsb
jo
xchg
jae
pop
loop
shll
ss
clc
movsb
push
sub
xchg
std
std
sub
cwtl
push
or
out
xor
fcompl
clc
add
add
adc
xchg
push
aam
jbe
cmc
shlb
movl
and
mov
and
jae
pop
insb
ret
mov
into
ret
cmp
in
mov
and
mov
push
psubsw
push
mov
es
jle
divb
andl
cmc
pop
movsb
cmc
sub
add
cmpsl
fbld
xor
cmp
jecxz
xchg
inc
lret
inc
insl
inc
push
jo
aam
imul
aaa
fsubp
xor
jmp
lahf
mov
cmp
pop
addr16
adc
xchg
mov
jmp
sbb
out
nop
lret
inc
shlb
lret
add
push
mul
mov
aam
dec
jp
mov
add
sbb
mov
lods
xchg
movsl
out
mov
sbb
movsb
out
or
dec
add
push
rolb
popf
shl
loope
xchg
mov
jne
scas
test
xor
add
sub
pop
lea
push
icebp
push
pushf
aad
xor
jecxz
pop
lea
loope
push
sahf
jo
push
cmp
xor
cmp
stos
gs
sbb
dec
push
adc
xor
out
or
out
pop
pusha
xor
push
xchg
fldcw
sarb
sub
jmp
out
cmp
cmp
hlt
xor
cmp
out
or
fistpll
cli
daa
outsb
sti
or
xchg
out
popf
push
xor
mov
loop
xchg
leave
inc
pop
enter
stc
push
xchg
data16
push
xor
out
imul
cmc
or
fadds
std
adc
jbe
int3
jbe
orb
jae
call
fldcw
int
jbe
mov
mov
std
lahf
lods
mov
mov
and
push
scas
add
ss
testl
imul
movq
sarl
test
aad
jb
xchg
in
add
lret
cmp
cwtl
notb
test
fidivrs
aad
in
lock
lock
aaa
fwait
popa
add
std
fstps
jo,pt
in
imul
push
jp
popa
push
in
aam
outsl
je
cmp
dec
jne
cld
ficoml
mov
mov
mov
cmp
dec
and
adc
xor
cmpsb
jp
pop
inc
add
push
stos
loopne
aad
in
cli
push
and
in
outsl
adc
fdivrl
adc
push
jg
bound
les
je
in
insl
out
xchg
iret
mov
insl
sub
jo
mov
pop
jb
or
pushf
in
jae
mov
pshufw
xchg
ljmp
insl
sti
fisubrs
pop
subl
dec
xchg
push
rorb
repnz
mov
js
inc
mov
inc
mov
shll
xor
adc
in
fisttps
loope
pop
sub
push
inc
ret
push
push
outsb
pop
cmp
repnz
out
shrb
sub
das
movsb
pop
pop
dec
add
sub
jbe
pop
add
into
sub
sub
outsb
sub
mov
mov
inc
cmp
mov
mov
cld
stc
mov
push
lea
mov
mov
enter
mov
cmp
mov
sbb
mov
imul
into
popa
cmp
xor
sub
ljmp
popa
cmp
dec
jle
xor
jne
xchg
jmp
inc
test
push
and
fld
mov
push
pop
ja
test
js
pop
sbb
mov
std
lret
xlat
push
bound
pusha
dec
and
aam
adcb
sub
dec
push
scas
mov
rorb
int3
fnsave
xchg
mov
lret
ret
cmp
push
lahf
sbb
mov
int3
mov
jbe
sbb
test
shl
popa
fistpll
sahf
test
sti
mov
iret
int
aaa
sub
stos
icebp
jnp
xchg
pop
pop
add
sbb
stc
push
sbb
aas
push
sub
xlat
int
imul
pop
jl
nop
rorl
andl
cmp
sub
hlt
sar
inc
movsb
and
or
adcl
xchg
inc
shrb
jae
xchg
push
negb
mov
inc
dec
in
and
dec
movlps
inc
add
jmp
fwait
push
mov
andl
mov
stos
xchg
push
sub
mov
cli
mov
or
lahf
fwait
stos
pop
xlat
pop
aas
and
gs
add
fnstcw
testb
in
mov
and
loope
xchg
mov
cmp
mov
add
adc
aad
es
cmc
dec
and
cmp
imull
les
movsl
add
jle
mov
mov
cs
ret
std
mov
insb
fistl
fcomps
mov
adc
pop
inc
loopne
xor
dec
test
add
cmpsb
out
call
ds
mov
mov
and
mov
fists
push
scas
push
stos
ss
adc
into
lods
fiadds
lods
jg
jns
stos
cmpsb
dec
add
mov
xchg
push
fwait
push
test
sbb
mov
jge
xchg
idivl
rorb
cs
cmp
movhps
inc
sbb
xchg
push
sub
xor
popa
jle
cld
lds
sbb
clc
add
movsl
mov
ret
sbb
mov
xchg
lret
pop
test
cwtl
imul
cmp
loopne
mov
pushf
inc
out
cmp
out
hlt
in
sbb
add
into
cmpsb
mov
inc
cmc
mov
insb
data16
xchg
out
rcll
leave
adcl
add
sbb
sbb
or
into
int3
mov
push
add
xchg
xor
fisttpl
mov
mov
inc
mov
data16
adc
test
pop
fnstcw
sbb
insb
mov
pop
adc
push
jbe
jbe
xchg
cmp
flds
inc
scas
imul
es
dec
sub
xchg
in
or
xor
jmp
xlat
in
gs
xchg
nop
cs
insb
fmull
mov
add
pop
faddl
sub
cmp
and
push
loop
cmp
mov
gs
outsb
mov
in
out
dec
adc
bound
push
mov
test
push
les
js
sbb
push
orb
lret
mov
add
adc
test
lret
enter
dec
mov
add
scas
scas
xlat
xchg
jo
mov
scas
in
outsb
pusha
sahf
popa
xchg
jmp
add
push
mov
das
test
jbe
pop
int3
aam
aaa
int
jle
repnz
sbb
rcr
mov
shr
pop
hlt
mov
add
or
stc
push
repz
fiaddl
imul
sbb
in
mov
aas
std
and
scas
sbb
sbb
sbb
fisttpll
cmp
push
jno
xchg
xor
inc
cmpsl
cwtl
xchg
pusha
adc
aam
test
adc
inc
jg
push
sub
shll
jmp
adc
jl
jno
adc
pop
xor
or
push
mov
xorl
push
imul
jae
xchg
fadd
mov
scas
cmp
lea
xor
pop
loop
pop
stc
lock
clc
add
pop
cmp
mov
movb
xor
dec
loope
push
sub
inc
aas
cmp
mov
jp
adc
out
pusha
inc
jne
adc
dec
stos
out
cld
mov
rorl
sbb
xor
cmp
push
out
out
push
xchg
pop
dec
inc
das
jge
test
pop
or
bound
jnp
pop
faddl
pop
aaa
adc
xchg
stos
icebp
das
out
cli
and
ja
inc
jle
fnstsw
cmpsb
shrb
cmpsl
xchg
jno
aaa
cwtl
adc
pop
xchg
add
clc
lret
mov
xchg
es
push
mov
cmc
inc
loop
xlat
mov
pop
rorb
dec
push
in
sbbb
enter
hlt
or
jb
out
mov
movsl
test
jle
rorl
aas
xchg
push
std
insb
shrl
adc
bound
add
push
jecxz
cmpsb
gs
mov
xor
aad
out
out
out
cli
sahf
mov
inc
addl
cmp
xor
push
and
or
sub
inc
lods
xor
movsb
lea
outsb
jno
ret
stos
lcall
gs
mov
test
xchg
mov
sbb
jg
dec
clc
xchg
sarb
mov
jecxz
jp
lock
mov
or
enter
mov
or
and
jbe
add
inc
shlb
dec
mov
cld
adc
push
icebp
mov
imul
bound
cwtl
mov
mov
and
sbb
cmp
lock
add
mov
xchg
xor
push
leave
ja
inc
mov
jge
cltd
mov
cmp
sub
mov
out
ret
repnz
scas
insl
sarb
cld
int
jg
lock
out
mov
inc
fstps
push
pop
loop
aas
in
cmp
ror
test
xchg
cmp
inc
sub
lcall
rclb
xchg
pop
push
mov
jle
in
and
jl
pushf
or
mov
xor
pop
mov
and
fcmove
imul
sbb
jg
imull
or
movsb
loop
xor
mov
push
repz
pop
repz
jmp
and
mov
pop
and
outsl
or
lea
adc
loopne
add
jmp
out
das
mov
stos
in
inc
push
lahf
fs
clc
int
inc
test
lock
out
inc
popf
add
repz
pop
pop
out
push
jb
mov
push
bswap
daa
dec
sbb
jnp
jmp
leave
test
inc
aam
fnstenv
sub
jb
xorps
pushf
bts
rcrl
leave
movl
popf
iret
popf
xorl
cltd
xor
push
cld
cs
movsl
in
enter
mov
dec
rcrl
sub
xor
stc
clc
fistps
mov
out
test
call
cmp
mov
sbb
dec
adc
xor
mov
int
fs
adcb
inc
out
mov
pop
stos
arpl
xchg
push
sub
inc
jno
imul
loop
ss
hlt
pop
mov
mov
fisttps
add
notl
push
arpl
repnz
push
xchg
or
idivl
jmp
rcll
ret
mov
sub
dec
jmp
in
push
lahf
sbb
je
cmp
jb
cmp
std
bound
jbe
push
xor
and
mov
and
mov
imul
jmp
aad
sub
aad
inc
icebp
addl
divl
ljmp
fisttpl
inc
xchg
cmp
xchg
adc
out
add
push
call
xor
inc
xorb
mov
cmp
lcall
mov
out
popa
cmc
movhps
hlt
mov
mov
arpl
xor
in
cld
adc
je
jno
rcr
dec
or
insb
mov
test
loop
dec
lods
nop
adc
arpl
ret
stc
inc
into
in
sub
insl
test
jae
popa
jno
jge
mov
push
push
jl
lods
fcoms
pop
push
das
data16
bound
lret
mov
mov
stc
xchg
popa
sbb
testl
insl
adc
sahf
adc
movsl
arpl
iret
jb
hlt
jno
add
inc
or
cmp
stos
add
repnz
and
jecxz
cmp
stos
nop
aas
sti
rol
adc
jne
mov
mov
jge
push
pop
jne
outsb
cmp
add
cwtl
mov
push
pop
sub
mov
ds
jecxz
scas
add
pop
push
mov
adc
xchg
sub
test
loopne
stos
or
mov
rcrb
mov
loopne
mov
clc
scas
xchg
cmp
pop
xchg
pop
push
mov
dec
clc
lods
mov
mov
dec
xor
sub
inc
push
lret
incl
stos
clc
add
test
pop
je
es
push
or
and
test
lea
cmp
arpl
jb
push
orl
sub
les
je
mov
test
lret
and
fcoml
lds
lret
mov
lahf
icebp
aas
out
xor
mov
in
push
lret
add
mov
fisubl
xchg
lea
ss
dec
mov
movsb
sub
popf
fldl
test
addr16
cld
add
mov
arpl
cmpl
arpl
add
test
jae
xlat
hlt
mov
rclb
push
inc
lahf
jae
iret
inc
movsl
arpl
inc
xor
clc
xlat
pop
mov
scas
fisubs
clc
inc
sub
sub
and
sub
push
sbb
or
stc
repnz
imul
arpl
sub
mov
xchg
iret
test
sti
xor
test
adc
fstl
mov
adc
sub
add
cli
mov
stos
dec
cli
in
lods
hlt
inc
out
cmpsb
mov
and
es
mov
fs
lods
les
mov
dec
fisttps
js
mov
or
int3
mov
ret
mov
test
lahf
sub
cmp
or
icebp
out
dec
sbb
mov
or
sbb
pop
jbe
pop
push
pop
mov
out
test
and
xchg
and
pop
cmp
fimuls
clc
adc
jo
pop
jo
in
jecxz
cmp
jae
jo
mov
das
mov
mov
clc
adc
jne
mov
inc
leave
jl
ror
mov
lds
cmc
dec
adc
jnp
sbb
mov
xor
cld
xor
mov
push
imul
jbe
jg
xchg
sti
shlb
nop
aas
push
dec
das
push
xchg
das
mov
ret
jecxz
jns
pop
xchg
scas
lock
ds
push
rcl
cmp
mov
das
clc
scas
int
shr
mov
sub
add
shll
sahf
push
mov
sarb
lahf
addr16
adc
mov
jmp
shl
adc
imull
inc
rclb
adcl
psubsb
inc
lock
int3
inc
xor
pushf
ret
orb
dec
and
scas
addb
pusha
sbb
arpl
lods
xor
lcall
fstp
repz
das
xorb
out
psubusb
loope
in
xchg
mov
pop
xchg
pop
enter
dec
lcall
movsl
int
loope
scas
adc
adc
cli
sbbl
repz
ret
shlb
addr16
mov
mov
pop
xorb
mov
mov
daa
gs
lea
push
insb
push
mov
and
dec
imul
jge
mov
insl
add
outsb
ja
sub
out
gs
cmp
or
mov
movsb
test
sbb
pushf
pop
lret
inc
pop
fwait
hlt
mov
aaa
mov
xlat
pop
cmp
mov
mov
xchg
sbb
jmp
add
push
pop
cld
daa
or
cmp
or
sbb
test
mov
inc
frstor
or
cltd
cwtl
jne
stc
xchg
pop
or
pop
sahf
mov
inc
rep
jmp
pop
in
mov
data16
or
pusha
jp
add
pop
sahf
sbb
stos
nop
jae
into
rcll
inc
cld
jbe
pop
insl
mov
pop
test
mov
addr16
mov
popa
dec
xor
and
sub
jns
ljmp
sbb
orl
jns
and
cld
mov
or
pop
repnz
cmc
xchg
flds
add
xlat
jge
aas
les
scas
dec
xchg
in
push
jl
sti
loope
push
or
mov
or
xchg
mov
mov
ja
shrl
mov
add
xlat
ljmp
mov
xchg
or
mov
jne
add
insl
pop
fcmovb
loop
arpl
push
outsl
das
pop
test
jmp
stos
das
shlb
les
nop
test
add
mov
std
mov
mov
inc
jbe
test
add
leave
lret
rcl
or
xlat
mov
cmpsb
xchg
aam
in
lret
dec
lcall
repz
cwtl
dec
xor
xor
out
leave
scas
clc
dec
sahf
and
adc
inc
mov
cmc
dec
push
mov
push
fwait
push
jg
cmp
or
insb
inc
stos
inc
int
push
jecxz
mov
xor
push
into
jns
mov
mov
enter
or
inc
dec
sbbb
xchg
repnz
daa
xor
jmp
testb
or
jp
int
lods
test
mov
cwtl
iret
arpl
lret
jge
std
inc
lcall
dec
adc
ret
add
cltd
pslld
xchg
loope
add
fisttps
shl
insl
xlat
pop
jns
out
inc
sbb
inc
xor
sub
xchg
stos
sbb
int
mov
push
inc
and
ret
clc
and
mov
cvttps2pi
sar
mov
daa
loop
sub
adc
cli
addr16
inc
movsl
cmp
mov
leave
mov
lcall
test
jge
movsl
pop
cmpsb
icebp
into
cs
xchg
cvtpi2ps
aaa
ffreep
aad
adc
loopne
sub
sti
rcrl
hlt
adc
sub
shrb
inc
mov
add
pop
int
jecxz
pop
sbb
pop
xor
mov
pushf
pop
mov
pusha
int
icebp
push
sub
int
loopne
push
jge
dec
dec
lcall
sahf
test
sub
adc
ret
and
add
push
inc
testl
pop
push
push
xchg
dec
scas
cmp
or
sbb
mov
inc
sbb
icebp
cmovle
jo
ret
jg
sbb
inc
popa
das
rcll
lret
xor
cmp
int
push
add
inc
rolb
int3
scas
cwtl
mov
andb
mov
test
iret
and
lret
and
jg
mov
mov
push
arpl
jb
sarb
sti
adc
leave
and
cmpsl
popa
out
lcall
xor
dec
pop
loopne
clc
cmp
test
shl
cld
sub
jno
iret
dec
push
or
add
andb
dec
mov
repz
inc
xor
cs
mov
xchg
mov
add
xchg
xchg
mov
and
aam
aad
sbb
shll
es
inc
push
sbb
sbb
lcall
pop
cmc
inc
inc
faddl
push
mov
jae
xor
xchg
sti
mov
outsl
cmp
mov
inc
add
loopne
or
sub
rolb
lret
jnp
imul
push
sbb
in
jg
outsb
lds
jb
enter
push
mov
aas
je
fadd
repz
dec
bound
mov
jg
cli
popf
cmp
pop
inc
daa
adc
test
arpl
or
xor
mov
or
sub
xor
and
gs
push
jg
scas
mov
incb
imul
pop
xor
push
cmpsl
jge
enter
leave
arpl
mov
pop
insb
aad
xchg
mov
test
mov
inc
add
loopne
and
insl
xchg
mov
mov
pop
leave
xchg
inc
loope
jmp
les
sub
xchg
cmp
and
int3
ror
mov
stos
xor
hlt
arpl
loop
pop
das
rcrl
cmp
inc
int3
adc
mov
or
xor
pop
sbb
inc
adc
lds
add
xor
ficoml
pop
jo
xchg
xlat
or
mov
or
push
rolb
xchg
lcall
in
and
les
sbb
sub
pop
ss
fmuls
add
fadds
fwait
mov
leave
add
repnz
add
sarb
jnp
ss
test
ss
int
loop
mov
out
cmp
aaa
loopne
pushf
loopne
add
mov
vpxor
test
out
rorw
aaa
insb
mov
cmp
outsl
mov
dec
bound
mov
xchg
popf
xor
sub
fisttpl
mov
scas
test
stos
cltd
mov
adc
insl
sbb
fwait
les
sti
or
imul
lea
pop
testl
or
adc
dec
sbb
mov
ret
sarb
mov
outsb
mov
fnsave
xchg
frstor
push
sub
pop
inc
fdivrl
jnp
insb
dec
fwait
ds
ds
stos
xchg
es
or
stc
fcompl
repnz
or
push
lods
js
enter
pusha
adc
inc
arpl
push
repnz
xor
rcll
pushf
cmpsl
jmp
nop
mov
aaa
out
push
popf
in
imul
mov
push
sub
mov
in
neg
jge
fcmove
rcl
mov
mov
lret
incl
pop
push
jg
ss
push
dec
mov
shll
lret
xchg
fucom
lret
add
dec
daa
daa
pop
and
aaa
fcmovb
daa
push
push
iret
sub
popa
hlt
divl
fstp
mov
faddp
sub
mov
sarb
or
cmpsb
scas
movsb
xchg
jne
inc
ljmp
in
lods
pop
push
jl
push
xchg
cmp
lods
sbb
test
cmp
push
lret
pop
icebp
movsb
adc
ljmp
add
fwait
adc
iret
shl
pop
sbb
out
xchg
icebp
popf
xchg
jecxz
std
or
xchg
jne
movb
jg
nop
repz
mov
xchg
fs
mov
pusha
test
xchg
push
test
stos
mov
sar
in
aaa
mov
hlt
jb
and
and
jo
xor
dec
adc
pop
sbb
xchg
sarb
out
mov
sub
int3
pop
jb
dec
je
sar
mov
xor
adc
imul
fcomps
add
sub
mov
data16
hlt
movsb
sub
jne
mov
movsb
test
jg
jnp
and
inc
fdivrl
stos
xor
inc
adc
outsb
lods
mov
lock
int3
loopne
cltd
push
rorb
pop
out
jae
fstps
or
cmp
or
mov
or
xor
jecxz
jmp
jecxz
jl
adc
mov
mov
popa
sarb
daa
in
mov
and
lds
mov
push
mov
mov
mov
jbe
mov
cli
aam
ret
pusha
xor
sbb
cmpsb
jbe
scas
stos
xor
mov
and
pop
lahf
ja
dec
js
das
and
sbb
aas
insl
jecxz
sahf
lret
aad
jmp
mov
int
rcr
adcl
dec
and
lock
outsb
jmp
xor
test
jge
inc
sbb
out
inc
js
jne
or
xchg
outsl
jno
push
pop
test
mov
rcr
into
or
add
repnz
orl
std
cmpsb
xor
xor
add
out
in
mov
incl
mov
mov
sarb
scas
jae
xor
push
inc
dec
push
arpl
cmpsl
push
in
xchg
sub
xor
sahf
ja
mov
cmc
in
dec
icebp
aaa
repnz
mov
cmp
insb
test
ja
add
out
xor
xor
mul
sbb
test
ss
mov
mov
movsb
or
das
push
cmp
inc
push
testb
aad
and
je,pt
mov
mov
inc
int3
adc
xchg
add
call
mov
addl
subb
arpl
mov
repz
js
jle
loope
pop
in
rcrb
lds
pop
cmp
xchg
ret
inc
mov
lret
shlb
aaa
ss
gs
scas
clc
pop
mov
lcall
paddb
sarb
cmp
jle
lds
sbb
sbb
or
js
pop
push
lret
pop
jmp
push
mov
dec
push
mov
mov
lahf
cli
adc
sub
inc
pop
xchg
add
test
pushf
pop
jae
or
sbb
push
pop
mov
mov
fimuls
loope
xor
test
scas
add
fidivl
push
pop
nop
push
loope
mov
arpl
jne
add
or
mov
movsb
out
sub
sbb
or
outsb
addl
adc
popf
xor
mov
mov
add
mov
pop
loope
mov
out
popf
sbb
pop
sbb
xchg
jns
sbbb
pop
sbb
hlt
push
jg
ja
xlat
in
popf
ds
jmp
shll
aas
cmpsl
fcompl
sbb
fidivl
jmp
and
ret
sub
jns
fildll
enter
fwait
pop
iret
or
fcmovnb
and
and
pop
arpl
fsubr
test
fwait
mov
sub
add
mov
mov
mov
fcomi
jecxz
lcall
loop
repz
pushl
imul
or
daa
je
push
xor
pushf
popa
movsb
push
push
or
es
mov
stos
in
mov
push
and
aam
or
push
sub
push
sbb
add
pusha
sbb
mov
inc
and
mov
leave
sti
jno
cmp
dec
out
pop
imul
je
xchg
mov
sub
cs
xchg
out
pop
call
shrb
cmpsb
dec
pop
xchg
inc
xchg
iret
dec
out
mov
lock
push
cltd
pop
aas
jae
jbe
outsl
adc
sahf
ret
jmp
cwtl
xchg
jl
sbb
aad
push
push
mov
push
addl
in
stos
add
arpl
jae
sbb
pop
and
mov
lock
fiaddl
hlt
icebp
xor
out
inc
lds
cld
pop
push
sub
leave
adc
addr16
xor
pusha
sbb
mov
cmp
inc
ret
hlt
pop
push
inc
or
in
jl
or
sarl
mov
out
jp
push
inc
dec
cwtl
push
push
aas
jbe
movsl
xchg
jp
lret
mov
and
mov
or
push
or
dec
dec
test
mov
xchg
fisttpll
and
leave
pop
xadd
leave
mov
jnp
addl
and
lods
and
mov
stos
jnp
aam
inc
mov
movb
push
roll
bound
stc
sub
jg
adc
ret
dec
or
stos
sbb
add
mov
imul
in
leave
loopne
push
pop
and
popf
es
das
mov
std
fisubs
lret
push
adc
leave
dec
xor
push
xor
dec
daa
repz
jmp
fmuls
mov
push
aaa
adc
jmp
lret
xchg
and
pop
movsl
sbb
mov
cmp
hlt
adc
test
lea
stc
notb
roll
nop
cmp
fwait
ja
inc
dec
xchg
leave
loop
sbb
jo
lahf
push
cltd
inc
out
in
je
jg
sub
mov
addb
es
xchg
inc
xor
jbe
push
subb
sarb
addr16
scas
in
fimull
mov
insb
mov
mov
pusha
ljmp
cwtl
shrl
leave
leave
mov
sahf
or
sub
push
xchg
fistl
hlt
orb
push
ret
aaa
cmp
sub
aam
stos
orb
lret
sub
mov
scas
movsl
push
lods
arpl
mov
adc
adc
clc
pop
fsubl
pop
test
sub
inc
insb
add
sbb
and
sub
data16
in
fisttpll
adc
in
cmp
jge
cmpsl
aad
test
sub
mov
xchg
inc
add
int
cmpsb
add
aad
inc
fimuls
cmp
test
inc
ret
or
stos
add
dec
je
lock
insl
add
push
ret
xchg
mov
jb
test
fidivl
or
mov
cmpsb
outsl
out
mov
xchg
sub
push
mov
dec
clc
mov
dec
test
jp
xchg
pop
xor
shl
xlat
popf
pop
fistpl
pop
sub
jno
xorb
movb
clc
out
pop
nop
mov
dec
enter
outsl
xchg
xlat
add
scas
rcr
js
fxch
jb
out
jecxz
aam
jb
in
xor
push
sub
stc
pop
aas
xor
inc
pop
lds
int
in
test
daa
sub
je
faddl
lret
mov
xlat
in
out
lds
aaa
aaa
out
pushf
jg
jl
fimuls
push
iret
adc
dec
out
sahf
dec
xchg
or
sub
icebp
out
mov
into
out
xor
in
or
lds
pop
mov
aad
int3
lahf
in
clc
sahf
dec
lds
inc
add
xor
gs
mov
jno
pop
insb
stc
sahf
daa
addl
cmp
xchg
and
call
int
sub
and
aas
add
lea
rolb
push
or
and
lods
pushl
push
add
mov
or
cmp
fcomps
add
not
popa
or
in
inc
das
push
mov
in
shll
cmp
outsb
xlat
mov
mov
lods
pop
push
nop
xchg
in
sbb
push
popf
mul
cmp
mov
mov
jecxz
push
and
lcall
aad
xor
pop
iret
push
xor
fimuls
xor
lods
dec
out
xchg
dec
xchg
shl
cltd
dec
add
mov
adc
push
fmull
insl
add
lock
decl
not
bound
add
sahf
xchg
add
add
mov
sbb
out
mov
mov
insl
sbb
lods
loop
adc
lods
xor
insl
push
ret
inc
dec
xchg
xor
decb
jo
inc
push
aas
jge
iret
std
dec
adc
xor
outsb
xor
clc
loop
jg
push
les
stos
jmp
hlt
mov
jl
sub
in
loopne
jge
push
xchg
push
or
aaa
stos
ret
repnz
adc
and
mov
repnz
aaa
mov
mov
dec
or
sub
cltd
sbb
test
dec
test
ss
jne
or
xchg
mov
fldl
es
mov
repnz
imul
mov
cld
adc
or
adc
push
sub
dec
lea
stos
push
mov
out
pusha
sti
nop
rcrb
mov
repz
daa
xchg
das
inc
repnz
dec
into
enter
enter
inc
ret
mov
cmp
repnz
sbb
push
cmpsb
in
je,pn
xor
mov
lods
shl
push
mov
jb
outsb
push
stos
mov
or
lods
add
out
ret
into
cmp
dec
outsl
rcll
ficomps
sar
or
xchg
daa
nop
fidivrl
jecxz
cmp
inc
and
cmp
jl
add
inc
adc
das
push
movsl
mov
jne
push
jecxz
add
cwtl
aam
cmp
js
pop
js
and
mov
add
loopne
sbb
mov
cmp
lahf
mov
pop
or
in
lea
pop
shl
fs
dec
jge
es
data16
inc
xchg
xchg
mov
mov
popa
mov
pop
pop
daa
pusha
inc
inc
mov
jno
sub
mov
ss
xor
and
pop
in
xor
mov
add
jns
out
push
xchg
sahf
adc
movsb
push
mov
insb
fistpll
jb
jb
js
jecxz
cmp
rcl
out
dec
push
shl
mov
pop
clc
dec
xchg
loop
ficompl
or
adc
mov
and
rcr
adc
mov
cmp
fsts
mov
pop
sbb
shrl
fsts
cld
ja
dec
test
clc
mov
push
rclb
xchg
sub
jecxz
stos
dec
mov
cltd
call
jmp
lods
add
inc
jo
testl
imul
inc
cmp
sahf
std
adc
out
mov
rclb
mov
sbb
or
sbb
insl
shlb
fildl
mov
lds
sbb
loope
push
rclb
ds
add
enter
pop
cmp
jge
and
mov
xchg
dec
sbb
std
ds
lret
inc
push
jecxz
add
and
fsubl
push
and
inc
and
xlat
pop
orb
pop
aam
cltd
mov
imul
jmp
fidivrl
ucomiss
jp
xchg
cmp
cmp
dec
add
push
lods
outsb
jg
popf
test
mov
mov
xchg
jae
jns
dec
jmp
mov
push
pop
sub
sahf
popf
movsb
sbb
pop
add
ss
nop
pusha
xchg
int
test
jnp
out
fistl
and
aam
xchg
xchg
les
jle
aaa
push
xor
loopne
mov
mov
icebp
mov
adc
jne
cmp
add
iret
cltd
int3
imul
push
repz
out
sub
and
cmpb
mov
adc
and
cmpl
in
dec
dec
lcall
call
enter
ds
add
jb
faddl
jbe
test
mov
cld
aad
xchg
inc
or
push
jns
xor
movsb
stc
rorb
fistps
xorl
gs
sub
sub
inc
cmpb
insl
lahf
dec
stc
inc
jecxz
mov
mov
and
test
ret
bound
push
dec
sahf
aaa
cs
enter
xor
or
mov
adc
aam
jmp
out
pushf
sahf
cmp
dec
aam
pop
enter
stc
fstl
xor
fisttps
inc
fstpl
mov
adc
xor
push
cmp
sbb
jno
xchg
mov
inc
and
les
lret
mov
push
inc
call
mov
push
inc
xchg
orl
scas
fs
xchg
mov
jg,pt
iret
shll
sahf
xchg
stc
pop
sbb
mov
mov
ljmp
push
jle
jnp
test
mov
cld
sahf
imul
sti
adc
sti
out
jg
mov
jnp
insl
or
aaa
push
adc
out
push
jnp
or
lds
jmp
dec
movsb
ret
jge
jmp
push
ljmp
xor
js
sahf
or
mov
mov
sub
mov
fcmovb
lret
push
ficomps
xchg
adc
inc
adc
ret
add
ds
imul
mov
push
xor
imul
or
adc
lea
outsl
cmp
mov
adc
mov
and
loop
sub
jbe
lahf
outsl
pop
sub
loopne
insb
aad
ret
add
cmpl
mov
aad
dec
xor
xchg
or
add
out
xchg
mov
arpl
and
jg
xor
push
push
repz
adc
jae
pushf
or
int3
inc
jecxz
enter
les
sti
iret
jo
dec
lock
mov
add
pop
and
stos
xchg
add
and
imul
arpl
mov
ja
add
and
xchg
bound
int3
add
idivb
mov
mov
outsl
out
add
mov
loopne
adc
mov
das
mov
mov
sub
lock
jnp
iret
dec
in
cmp
jmp
out
scas
sbb
imul
enter
inc
add
push
and
adc
dec
movsb
in
or
in
dec
cmp
ss
add
sub
cmc
addb
mov
sti
push
mov
dec
lret
pop
xlat
jg
loopne
mov
ds
sti
push
xchg
mov
addr16
popa
mov
sbb
int3
movsl
sbbl
add
imul
outsl
ret
cmc
dec
stos
inc
xor
pop
mov
pop
adc
push
xchg
or
pop
push
and
sarb
or
xchg
and
add
mov
lcall
inc
test
pop
imul
jno
cmpsl
inc
sti
xor
mov
or
push
pop
stos
iret
in
jge
adc
int3
ret
cli
cmp
imul
repnz
cmc
iret
lods
and
mov
push
inc
in
testb
fidivrs
lds
shll
insl
daa
mov
adc
or
fldl
popa
or
repz
adcb
fistl
fwait
mov
aam
iret
mov
iret
xchg
in
mov
scas
aam
jl
cld
or
pop
sub
sub
jge
inc
pop
ss
lds
dec
sub
movsb
loope
and
jmp
lock
jns
pop
dec
xor
cmc
test
dec
jl
jae
xchg
jb
icebp
iret
test
pop
mov
xchg
movsl
out
dec
gs
rorl
adc
inc
xor
lods
rol
aad
stos
and
pop
cmp
scas
scas
dec
nop
fildl
mov
cwtl
repz
mov
jge
int
push
or
fbstp
popa
pop
imul
mov
mov
imul
mov
ss
leave
jg
sbb
jl
dec
and
int
lahf
cmp
pop
pusha
xchg
fmull
fnsave
pop
dec
pop
inc
lock
les
je
stos
lahf
into
push
jmp
add
mov
cmp
adc
pop
or
jbe
sbb
mov
dec
sbb
test
insl
xor
sub
mov
enter
outsb
inc
or
xor
inc
incl
dec
add
decb
test
test
es
jb
andl
add
lods
sub
push
mov
call
inc
add
sarb
gs
mov
pusha
xchg
aas
ds
mov
mov
add
or
and
or
pop
int
xchg
bound
or
pushf
mov
push
jge
lds
add
mov
je
xor
and
test
jns
repz
dec
adc
repz
lret
inc
stos
fs
or
fwait
shrb
repz
test
push
xor
xchg
or
test
mov
dec
mov
sub
dec
clc
xchg
mov
mov
or
outsl
inc
fcmovu
mov
adc
cmp
jle
or
repnz
mov
fimuls
xchg
push
jl
data16
cwtl
addl
push
sbb
inc
sub
stos
mov
jne
xchg
movsb
cmp
lock
cld
push
popf
sti
dec
sbb
lret
push
test
orl
inc
fisttpl
ret
std
dec
mov
pop
mov
mov
push
jae
lods
inc
dec
addr16
add
pop
adc
push
cmp
fcoms
mov
mov
pop
or
jg
or
mov
sbb
test
push
mov
xchg
xchg
loope
in
xchg
pop
cs
nop
add
xchg
sub
mov
jae
mov
cmp
aaa
inc
arpl
je
movsl
mov
out
lret
sbb
push
rcrl
xor
cmp
xor
aad
mov
lds
xchg
push
lock
fdiv
iret
popf
movsl
dec
testl
in
imul
ret
cmp
daa
iret
ds
sahf
inc
fistps
xor
mov
mov
xchg
test
pop
cltd
xchg
out
push
or
shlb
sti
xchg
test
mov
and
les
add
or
dec
inc
mov
notb
je
add
int3
fstps
sub
out
add
mov
lcall
lods
mov
call
insb
cmp
imul
push
mov
mov
mov
scas
push
lret
sbb
mov
sub
nop
pop
inc
es
xchg
popf
subl
lods
sbb
aad
pop
inc
sub
pushf
insl
jge
sbb
test
xchg
push
and
enter
insb
xchg
in
jb
call
xchg
jnp
add
test
bound
iret
pop
enter
je
orb
adc
add
loopne
sbb
pop
icebp
ret
cs
dec
sbb
fbld
ret
sbb
push
mov
sti
mov
jmp
xlat
mov
xchg
adc
in
and
int3
adc
dec
ss
aas
les
push
cltd
les
imul
and
les
mov
fcomps
test
std
cs
inc
cmp
cmp
add
adc
jp
movsb
pop
xchg
add
arpl
mov
fsts
dec
shl
mov
xor
jge
jae
and
and
sub
out
or
in
cmp
addr16
out
xor
jle
add
jmp
push
sbb
xchg
mov
mov
inc
lretw
adc
adc
incb
test
mov
stos
sbb
pop
nop
sbb
lds
loop
in
out
fs
xchg
xchg
out
cmp
add
dec
or
sbb
fstl
cwtl
scas
nop
test
fcmovb
pusha
mov
shlb
inc
xchg
push
mov
bound
in
mov
pop
push
movsl
jnp
insl
insl
cli
mov
fnsave
and
loope
lahf
push
mov
lret
adc
nop
lea
dec
mov
int
xchg
test
cli
xor
daa
in
sub
xchg
xchg
cmp
mov
pop
daa
pop
les
dec
xor
push
fildl
push
data16
pop
aam
add
lahf
incl
mov
push
mov
popf
mov
add
mov
mov
or
inc
jle
arpl
int
jle
inc
idiv
clc
shll
add
fwait
jb
mov
in
jo
outsb
adc
push
outsb
ljmp
sub
push
mov
and
nop
imul
mov
jne
pop
lahf
movl
popf
mov
test
xchg
mov
xchg
jle
mov
incl
or
xorb
cld
mov
mov
shlb
mov
or
pop
sbb
rcl
mov
lds
push
rorl
pop
push
not
or
int
push
mov
mov
je
push
mov
sbb
stos
sub
jp
and
fdivl
test
call
fbstp
inc
bound
roll
push
dec
out
das
pusha
ds
jge
out
cs
stc
sub
mov
popa
sub
leave
repz
jecxz
lods
or
ret
mov
pop
jb
cmp
mov
push
cmp
mov
je
mov
and
sbb
jne
pushf
inc
jns
pop
adc
and
inc
jmp
add
cli
mov
cmc
imulb
cli
add
not
jns
mov
mov
add
fcmovnu
lahf
shrl
adc
xor
sti
lcall
push
mov
mov
cmc
xor
repnz
sub
pop
outsl
bound
aad
and
lret
mov
jbe
xchg
jo
inc
pop
lret
call
mov
sbb
cwtl
xchg
xor
add
stos
xchg
repz
dec
in
dec
sbb
hlt
cld
lods
dec
rol
out
scas
sbb
gs
in
xchg
fbld
mov
test
test
movsb
xor
and
sbb
and
loop
jg
sbb
std
jmp
pop
ret
das
add
repnz
bswap
or
or
fs
mov
nop
cmp
loop
dec
cmpsb
hlt
cmp
fldenv
outsb
xor
mov
aad
pop
add
cmp
pop
pop
cltd
mov
xor
mov
xchg
test
cmp
arpl
xlat
scas
out
push
sub
mov
sbb
add
mov
cmc
stc
push
push
cmpsb
and
dec
les
cmp
and
cltd
mov
popa
lret
push
into
cmp
fimull
xchg
xchg
rcl
sbb
inc
in
xor
aas
leave
cmp
test
mov
cmp
ret
xchg
jb
in
out
xchg
xchg
fsubr
or
mov
mov
aam
mov
lock
xlat
push
sahf
cmpsl
test
int
lods
mov
push
dec
mov
adc
or
jecxz
out
fimull
add
pop
xor
cmp
dec
push
in
adc
dec
fs
adcb
adc
sbb
fucomi
int
fs
mov
sbb
mov
pusha
mov
out
daa
hlt
es
sbb
rcl
jns
hlt
cmp
call
pop
push
jno
mov
push
add
mov
fisubl
lods
mov
nop
mov
imul
mov
ret
stc
stc
jmp
pop
in
lods
push
sbb
movsb
lods
sbb
and
in
pop
add
jp
add
mov
mov
push
jle
adc
push
mov
imul
sahf
pusha
pop
jecxz
mov
xorl
jno
lret
sbb
enter
and
stos
push
clc
mov
ja
ret
sahf
and
outsl
repnz
jg
jb
cld
add
subl
pop
gs
aad
pop
faddp
das
sbb
push
or
mov
xor
pop
jne
and
das
hlt
insb
jg
inc
fucomi
ja
call
cs
ds
pop
movl
ss
aaa
pop
ja
mov
xchg
push
das
flds
fwait
incb
mov
inc
xor
daa
test
lods
out
sahf
pop
nop
out
into
rolb
or
enter
loope
rolb
inc
jecxz
aaa
mov
and
into
in
mov
push
push
and
sub
arpl
mov
repnz
sbb
mov
es
xor
mov
das
pop
aaa
add
mov
pop
fs
les
xor
push
sub
xor
cmp
gs
out
addl
xor
out
mov
sbb
fdivrl
inc
jmp
lds
loop
pop
jo
rorl
jne
mov
mov
add
mov
lcall
mov
or
push
mov
sbb
mov
push
xchg
inc
jmp
sub
dec
push
jnp
inc
add
sbb
xor
inc
js
push
rorb
mov
dec
or
inc
inc
mov
std
cmp
ljmp
add
lahf
les
imull
sbb
arpl
iret
pop
call
xor
test
loopne
push
sbb
imul
inc
sub
cmpsl
arpl
pushf
inc
mov
jecxz
push
repz
push
out
fcoml
pop
fldt
and
xchg
and
addl
rclb
sub
test
or
xchg
lea
cmp
and
in
cmp
mov
mov
leave
add
sub
iret
insb
xchg
inc
rcrb
jge
push
jmp
out
push
cltd
imul
aas
cltd
out
daa
inc
sub
ss
dec
mov
pop
scas
xchg
test
fimull
ljmp
in
imul
mov
addr16
hlt
xor
push
inc
sbbb
push
push
ds
sub
inc
sub
add
test
fsubs
ret
hlt
repz
ror
pop
stc
xchg
std
mov
inc
cs
imul
int
sbb
inc
jmp
loope
sub
lods
cmp
insb
push
dec
lock
inc
jle
mov
xchg
mov
pop
pop
adc
add
fistpl
xlat
fsub
sbb
ret
imul
cmp
and
cmpsb
loopne
xchg
mov
hlt
ljmp
loopne
or
push
xor
in
mov
lods
cmp
sub
add
aas
lods
or
gs
ja
xchg
fistl
adc
mov
rorb
ss
in
dec
sub
pop
jmp
adc
sbb
sub
rcrb
int3
test
shl
popf
and
mov
shl
and
lods
xchg
out
mov
shll
ficoml
xor
and
mov
repz
jnp
adc
jg
cmp
rsm
clc
cmpsb
pop
movsl
pop
fidivs
dec
mov
daa
sbb
push
mov
data16
dec
jo
ds
jg
jmp
mov
mov
mov
arpl
xor
or
ror
adc
xor
jno
push
je
aas
lds
jbe
andl
icebp
insb
jmp
and
add
cs
lock
xor
leave
roll
mov
add
push
mov
ljmp
mov
and
jg
inc
push
aam
cmp
addb
outsl
test
or
dec
imul
mov
dec
adcl
fisubrs
pop
int
popa
repz
mov
pop
shll
adc
or
and
xchg
mov
testb
loopne
xor
jmp
pop
adc
lret
push
jle
jl
movsl
or
adc
push
mov
mov
fpatan
out
mov
or
pop
mov
add
popf
faddl
andb
gs
jb
popa
cmp
inc
lods
mov
nop
jo
aaa
cmp
lods
xor
ljmp
mov
adcb
bound
scas
lret
mov
loopne
cwtl
repnz
pop
jle
dec
call
push
pop
ss
jmp
pushf
xchg
stc
test
mov
mov
enter
jecxz
outsb
pop
xor
fsubrs
leave
pusha
addr16
movsb
lds
clc
inc
mov
xchg
sub
dec
add
push
and
test
pop
sub
movsb
mov
add
ljmp
out
adc
in
rcrl
lock
push
aam
mov
aas
cmc
aam
enter
jmp
mov
dec
push
lock
cwtl
out
pop
mov
data16
data16
cmp
fsubrs
fnsave
or
test
xor
addr16
cs
inc
sub
stc
insl
mov
je
or
xchg
icebp
fistpl
dec
jle
fnstenv
sub
les
cmp
mov
dec
out
dec
push
insb
jle
les
out
in
rolb
sub
and
push
push
push
mov
test
pusha
adc
movsb
test
add
imul
enter
popf
mov
in
xor
cmp
mov
pop
xor
mov
arpl
jl
add
je
cltd
or
mov
mov
jbe
xor
arpl
je
sahf
cmp
pop
mov
in
push
ds
aad
into
in
ret
addr16
fwait
jne
das
insb
test
repz
loop
loope
and
xchg
ds
pop
sti
rol
fimull
mov
icebp
ret
addr16
shll
xchg
mov
insb
lcall
and
inc
test
add
clc
ds
xchg
shlb
push
test
stos
or
mov
ljmp
xor
xlat
sti
cmpsb
aaa
lods
sub
or
adc
je
and
mov
push
mov
cltd
jp
insl
fsubs
xor
idivb
sub
stos
pop
fstp
pop
pop
jl
repz
or
push
les
xor
ja
rcll
mov
xchg
xor
scas
dec
int3
pop
and
pusha
lret
test
dec
push
lret
mov
fwait
push
push
inc
out
inc
fwait
mov
ffree
das
ss
icebp
sbb
ret
jns
or
and
loop
cli
shll
into
mov
sbb
dec
es
mov
mov
mov
popf
lds
push
dec
cmpsb
dec
dec
fldcw
enter
jge
xor
mov
std
or
lret
sbb
sar
and
loop
scas
ljmp
cli
inc
sti
mov
cmpsl
xchg
adc
int3
inc
push
jb
inc
xor
pop
mov
push
lods
add
jle
or
xchg
test
dec
jae
mov
or
and
cltd
sbb
dec
pop
test
cmc
xchg
xor
movsb
jp
rcll
mov
in
mov
ficompl
orb
fstps
push
xor
test
orb
add
aam
jb
or
sti
cmp
push
push
jg
std
leave
mov
jnp
or
dec
or
cmp
cmpsb
jg
sahf
ss
out
dec
push
and
add
imul
rclb
or
push
adc
xor
push
mov
xlat
test
stc
pop
cmp
sbb
jp
pop
mov
adc
outsb
or
imulb
fnstcw
dec
dec
push
sbb
adc
aad
adc
and
inc
repnz
fsubr
test
insl
mov
adc
pop
stos
test
popa
lahf
xor
jae
jnp
push
cltd
pop
out
or
imul
fnstcw
adc
pop
pop
cmc
cmp
xor
or
das
adc
repz
inc
mov
les
xor
ss
std
gs
insb
pop
pop
mov
ret
fs
mov
and
loope
xor
sbb
mov
sub
pop
jp
add
inc
pop
mov
cmc
mov
in
dec
inc
mov
push
push
and
lret
cs
clc
mov
lds
rorl
mov
mov
lahf
arpl
push
bound
loope
lret
int
adc
adc
cmc
fistl
push
sbb
and
cld
mov
ret
cmp
push
jae
pushf
mov
sti
cs
jg
fstpt
pop
adc
mov
fcoml
inc
lahf
addl
push
sub
repz
or
ljmp
dec
jmp
dec
jle
insb
imul
cld
inc
xchg
leave
clc
jb
pop
mov
adc
lea
popa
xor
dec
out
pop
mov
mov
dec
pop
les
aas
outsb
xlat
sbb
popa
dec
int
jmp
dec
pop
sbb
sbb
and
push
in
adc
sub
and
jge
cmp
fwait
inc
push
mov
stos
aaa
mov
jmp
stos
inc
dec
xchg
fiaddl
inc
xchg
mov
xchg
test
testl
mov
callw
js,pt
sbb
sysexit
ret
cltd
cmp
xor
lea
lods
insb
pop
icebp
daa
int3
cmp
jno
fnsave
and
mov
push
js
pop
push
mov
mov
adc
movl
int3
aas
fs
outsl
int3
lret
rcrl
imul
mov
jle
rorb
mov
cld
xor
fwait
mov
cmpsb
mov
dec
iret
push
mov
mov
cmp
pmullw
mov
mov
or
scas
mov
bound
call
fdiv
cmp
jns
xor
jbe
jl,pn
jno
scas
incl
xchg
stos
loopne
and
cli
jle
pop
enter
add
movsb
cmp
sub
jo
pop
inc
repnz
bound
es
sbb
add
fwait
pop
push
lahf
divl
lods
gs
mov
adc
enter
lods
cmp
fidivrs
lahf
add
lock
fisttpl
ljmp
or
mov
dec
loopne
xchg
lods
jle
mov
mov
test
xchg
and
mov
lods
shlb
dec
test
arpl
mov
repz
std
stos
maxps
add
cwtl
adc
mov
mov
or
js
jle
sbb
shl
stos
js
xchg
mov
sbb
xor
mov
sbb
push
inc
test
or
lods
stos
xchg
sti
push
testl
push
std
jmp
jge
outsb
mov
inc
dec
ljmp
lock
jle
xchg
invlpg
push
sub
fadds
add
mov
and
pop
into
xchg
jecxz
cmp
mov
int3
fs
sub
sub
xchg
sub
jnp
movb
frstor
in
add
xchg
fcmovnu
fcmovne
dec
mov
mov
xchg
push
mov
inc
jg
jp
mov
or
mov
cmp
leave
mov
cmp
jo
add
aad
sub
pop
mov
pop
gs
loopne
repnz
popa
and
sbb
jo
je
adc
nop
xor
dec
in
xorb
sub
dec
and
pushf
jb
loop
fcmovbe
mov
push
jo
xor
add
pop
xchg
jb
hlt
jae
test
cmp
sbb
push
mov
lods
xlat
push
lds
sarl
mov
ds
arpl
sub
mov
rorb
push
inc
out
das
int
pop
push
fists
mov
nop
inc
clc
shr
jmp
push
cmpsl
mov
push
es
lods
arpl
inc
mov
loope
test
cmpsl
adc
or
add
push
ds
gs
sbb
inc
dec
and
inc
addr16
or
adc
movsb
jg
push
ljmp
or
ljmp
pop
cli
lahf
add
sbb
xchg
cltd
fnstcw
aad
fdivs
cmp
test
out
orb
shlb
inc
dec
iret
scas
mov
pop
dec
adc
mov
mov
into
adc
sub
and
dec
mov
rorb
dec
inc
mov
in
push
add
cmp
lret
jbe
or
ja
subb
xchg
ret
add
inc
xchg
lods
jae
loope
stos
sbb
push
out
inc
add
add
sub
xor
fwait
jp
and
push
add
loopne
fsubl
fwait
out
xchg
int
or
xor
mov
dec
outsl
pop
push
jbe
cmpsl
js
fcomps
stc
nop
push
dec
dec
cmpsl
clc
xlat
cmp
lock
xchg
add
int3
rcrb
pop
inc
cltd
sbb
lods
xchg
nop
lock
cmpsl
mov
mov
push
and
add
push
pop
fsubrl
insb
mov
xor
jne
dec
dec
stc
bndstx
in
dec
test
fwait
fs
push
adc
mov
addr16
and
pop
push
jg
adc
jnp
into
test
push
arpl
arpl
imul
adc
mov
test
inc
add
in
adc
sub
inc
sti
and
xlat
pop
mov
mov
rclb
sbb
sbb
dec
add
mov
pushf
and
cmp
and
cmp
cmp
inc
mov
scas
test
fdivrs
pop
repnz
mov
arpl
xor
push
push
aad
mov
or
ss
ss
mov
jmp
int
rcll
pop
inc
mov
leave
in
jbe
jne
mov
jl
lea
mov
push
out
imul
shrl
jmp
push
xchg
imul
pusha
xor
inc
fidivrs
mov
std
jl
fs
hlt
sub
mov
popf
cmpsb
dec
pop
mov
negb
insl
test
popf
xchg
dec
je
ljmp
cmp
movsl
loop
mov
aad
sub
ret
fsubl
jmp
subl
jbe
incl
pop
and
fcmovnb
fst
cmp
nop
ljmp
add
mov
ret
sub
cltd
push
sbb
test
loopne
notl
jno,pn
pop
xlat
pop
arpl
loopne
mov
cmc
or
sbb
pop
push
sub
daa
jp
outsb
in
inc
fs
int
jno
pusha
je
in
mov
jge
fisubl
test
sarb
pop
jb
adc
pushf
lcall
cltd
data16
jnp
pop
test
ja
push
lahf
mov
fwait
in
jno
in
stos
loope
add
mov
push
push
rclb
les
in
mov
sbb
in
dec
mov
scas
mov
pop
jo
cld
mov
imul
jno
and
test
outsb
or
das
movsl
cmp
mov
add
insb
out
jmp
dec
bound
push
in
lds
jnp
pop
fdivrp
xchg
sti
mov
mov
call
inc
cmpsb
inc
xchg
and
adc
adc
mov
ficoms
jl
cmpsl
lret
imul
and
ss
leave
push
adc
mov
cltd
imul
int3
xor
push
adc
bound
lret
insb
stos
fadds
xchg
sub
mov
dec
xchg
xor
mov
sbb
dec
shr
pushf
xchg
cmp
push
mov
stos
lahf
jno
iret
gs
jns
pop
lods
cmp
loopne
fwait
push
pop
loope
jmp
dec
mov
mov
int
sbb
add
push
jae
push
pop
pop
movsb
sub
std
sbb
adc
mov
sub
xchg
aas
sbb
xor
jbe
sbb
pop
pop
xchg
data16
jmp
rclb
js
mov
pop
cmp
imul
ljmp
xchg
add
aad
xchg
mov
cmp
mov
leave
mov
adc
sub
mov
inc
hlt
aad
popl
out
and
mov
cwtl
mov
ret
pushf
stos
inc
stc
js
imulb
out
in
cmpl
call
lcall
sub
pop
hlt
stos
repnz
lea
test
roll
inc
mov
push
fmull
in
jecxz
push
mov
sub
fcomip
inc
xchg
mov
lock
shlb
aaa
shrl
int
pop
jnp
addl
and
adc
ret
inc
jno
lar
dec
decb
popw
xchg
or
push
fnstcw
sbb
inc
fcoms
loopne
xchg
fdivrl
and
cmpsl
adc
add
mov
push
pop
dec
lahf
inc
sub
leave
mov
push
mov
pop
push
xor
repz
or
adc
jae
ss
pop
fisttpl
jl
inc
jne
or
mov
pop
jmp
dec
sbb
loope
push
ret
cs
mov
test
loope
stos
adc
xchg
lods
xor
rclb
out
mov
dec
cmp
cmpsb
ror
or
mov
push
pop
js
push
mov
mov
adc
xchg
sti
adc
les
fildl
xchg
mov
jl
mov
mov
dec
push
je
inc
add
mov
sub
scas
out
pushf
cld
fwait
jb
cmp
shrb
aam
push
add
and
and
cmp
jge
lods
add
add
into
rol
pop
fsubs
ret
mov
jmp
lods
insl
xchg
iret
sub
push
mov
mov
daa
or
fcomip
fidivl
ljmp
add
loopne
and
loop
push
out
aam
arpl
mov
pop
pusha
pop
inc
sub
jl
pop
mov
mov
nop
xchg
jge
jge
out
cmp
xchg
mov
xor
loopne
imul
mov
je
xor
add
and
sub
dec
ret
in
jp
jp
sbb
or
lret
add
insl
jmp
mov
or
test
sub
mov
mov
jg
sbb
mov
andb
sahf
xor
adc
inc
gs
lahf
add
add
ds
ror
ds
ficoms
loope
out
inc
or
xor
sub
scas
mov
mov
cmc
dec
push
pop
cmpsl
sub
adc
cmp
cwtl
data16
stos
or
shlb
or
push
adc
mov
inc
gs
jp
aad
push
push
add
xor
arpl
ret
cmp
push
pop
add
pop
test
or
sbb
mov
cltd
cmp
add
cmpsb
ss
mov
jp
mov
sub
cld
dec
inc
fdivrp
jae
sbb
out
aas
stos
xchg
in
xchg
scas
lret
mov
shll
adc
ficomps
push
movsb
ja
cli
sub
jmp
ss
dec
out
loope
mov
out
cmc
testb
imul
fldcw
movsl
jne
loope
std
jmp
lock
lea
jle
add
inc
push
repnz
outsb
adc
jno
mov
in
iret
adc
jl
sbb
adc
stos
in
mov
test
call
xor
cltd
pop
aaa
sti
int3
sbb
addl
inc
iret
sub
adc
shl
outsb
lock
lds
inc
loopne
xor
in
dec
iret
jmp
and
jge
sbb
mov
jne
dec
dec
jb
adc
and
mov
push
xchg
mov
orl
imul
and
inc
aas
lret
sub
divl
and
ret
mov
repz
sub
xchg
adc
sub
hlt
sbb
pushf
insl
jne
into
push
fwait
in
sahf
testb
pushf
push
fistpl
inc
mov
fwait
add
out
ja
in
mov
lea
or
pop
or
adc
in
xchg
mov
jns
push
dec
jbe
jno
sahf
adc
mov
jbe
lret
into
mov
dec
mov
cmp
lods
fdiv
movsb
sub
cmp
add
inc
call
lock
push
aam
adc
fadds
test
rorl
cmp
sub
out
in
sbb
stos
push
divb
xchg
cmpsb
mov
inc
std
movsb
notl
mov
bound
in
arpl
out
out
adc
pusha
mov
mov
out
and
jne
ja
xor
push
xor
or
pop
ss
adc
adc
enter
and
add
xchg
or
mov
stc
loop
fmulp
jmp
out
push
into
dec
xor
pop
shll
lcall
out
jo
pop
rcrl
inc
xchg
js
jecxz
cmp
rcll
decb
jge
jae
lea
iret
mov
scas
or
push
jmp
mov
xor
pop
push
loope
dec
mov
adc
inc
cmp
repnz
mov
test
sub
xchg
movsl
insb
ret
call
xor
into
mov
fstpl
add
cwtl
jmp
scas
insl
or
jne
push
aaa
fwait
hlt
fldcw
pop
daa
rcll
addr16
mov
sbb
or
cmp
pop
adc
int3
xlat
sbb
rep
adc
pop
cmp
sub
stc
inc
pcmpeqb
leave
imul
int3
push
xchg
mov
hlt
pop
loopne
cmp
gs
sarb
mov
or
in
mov
movsb
xlat
mov
xcrypt-cfb
cmpsl
in
insb
dec
cmp
mov
mov
push
imul
icebp
push
mov
mov
imul
push
in
in
xor
mov
sub
lds
sub
mov
adc
sahf
shr
adc
push
aad
sbb
inc
shr
or
sbb
int
mov
sbb
out
jbe
jecxz
nop
int
add
mov
rolb
xchg
mov
jno
cs
push
or
subl
mov
lods
push
fimuls
aaa
or
shr
jl
jp
push
ja
or
jg
sbbl
repz
cmp
push
out
popa
in
xor
dec
orl
out
pusha
fidivl
ds
jge
notb
mov
scas
pop
subl
lock
repnz
ljmp
and
out
fistpll
xchg
rcl
jge
cwtl
xchg
sub
rolb
cwtl
cmpb
int3
out
hlt
pop
or
cmp
int3
es
in
in
push
adc
jno
inc
jecxz
mov
adc
sahf
mov
popa
stos
mov
mov
inc
test
and
inc
sti
mov
in
pop
mov
jmp
nop
add
add
mov
aaa
jecxz
inc
add
mov
jge
sub
jmp
leave
out
mov
inc
fists
and
imul
xor
cmp
sub
icebp
pop
jo
leave
lcall
jg
mov
imul
dec
enter
dec
dec
cmpsb
mov
xor
scas
in
pop
and
mov
dec
mov
xlat
sahf
mov
jp
pop
cld
iret
inc
cmpb
mov
lea
dec
dec
sbb
roll
lea
inc
dec
loop
lret
out
pushf
pusha
xlat
outsb
and
loop
hlt
fs
push
pop
mov
stos
in
out
cmpl
stos
imul
test
ret
test
inc
addr16
popa
testl
and
jecxz
xchg
and
repz
mov
jmp
push
sbb
pop
cmp
das
jb
cmp
out
ds
rclb
push
push
and
and
xchg
pushf
mov
fisubl
dec
fwait
pop
fldl
pop
cmc
rorl
loopne
pushl
popa
xor
ss
dec
sub
gs
cwtl
loop
mov
xor
lods
sub
cmp
pusha
pop
mov
or
fldenv
jg
pop
pusha
cmp
xlat
adc
push
cmp
lock
mov
pop
mov
dec
cmp
ljmp
mov
jge
sbb
cmpsl
out
sbb
popa
mov
and
jp
and
pop
xchg
repz
lret
jmp
flds
jns
aad
pop
jne
cmp
enter
lock
and
push
xor
data16
repz
leave
inc
fisttps
fisubrl
pop
popf
out
jnp
sbbl
mov
and
sti
xor
test
adc
cmpl
cmp
jbe
icebp
loop
lcall
add
in
jmp
call
mov
outsb
vmovaps
dec
ja
fcomps
pusha
loop
mov
scas
shrb
in
or
pop
jg
xor
mov
sti
out
mov
dec
dec
das
repz
test
mov
xchg
iret
repz
jae
push
mov
lods
sub
pop
addr16
loope
out
lea
add
push
dec
sub
xchg
sbbb
int3
lods
iret
idivl
jno
push
xlat
xor
clc
sbb
jb
aas
dec
and
scas
inc
inc
xor
lds
popf
jbe
aam
sub
dec
inc
mov
adc
push
add
add
icebp
cmc
lcall
push
imul
rcrl
les
add
jo
pop
swapgs
stos
rolb
sti
adc
pop
cmpsl
mov
fistps
cmp
cmpsl
ret
sbb
or
dec
mov
daa
shr
out
sbb
jge
popa
divb
outsb
cmpsl
mov
jmp
jge
mov
rorl
xor
cmpsl
and
imul
inc
fucomp
inc
shl
hlt
shl
sbb
or
aas
insb
sarl
cld
inc
push
hlt
std
cmp
mov
dec
aas
xchg
fistpll
test
or
nopl
testl
int3
aad
add
out
pop
sbb
jg
cmp
cmc
lods
int3
adc
dec
cli
jge
cmp
jbe
jo
insl
test
xor
adc
shll
scas
or
cmp
xchg
pop
leave
mov
pushf
dec
out
and
push
in
xor
loope
test
iret
pop
add
std
pop
movsb
cmp
or
sub
cli
arpl
mov
ffreep
or
xchg
xchg
sub
lret
ss
adc
rcl
pushf
sbb
repnz
dec
aas
fadd
or
rep
xor
xor
fs
mov
xlat
shrb
test
aam
js
sbb
arpl
ds
xor
pop
fidivs
xchg
incb
leave
mov
frstor
and
ror
mov
mov
dec
js
adc
sar
pop
pop
push
cmp
fwait
mov
arpl
out
xchg
push
in
xchg
pop
hlt
and
xchg
cwtl
mov
sbb
push
or
mov
pop
sub
mov
and
jecxz
xlat
push
mov
xchg
loop
jbe
push
cmp
loopne
mov
sbb
xchg
roll
or
popa
inc
clc
xchg
std
incl
gs
and
sbb
mov
push
movsl
leave
push
insb
xor
imul
jno
ret
lds
push
mov
sub
xchg
jno
xchg
push
stos
outsb
outsl
les
sbb
lds
cltd
xor
dec
inc
sbb
pop
repz
mov
xchg
insb
mov
test
ret
mov
jae
es
in
inc
push
je
lea
pop
ljmp
pop
mov
xor
aam
cmc
mov
repz
dec
jp
cmp
ds
inc
xor
pop
and
fnstenv
aas
imul
xchg
mov
scas
adc
push
dec
mov
inc
icebp
jno
jb
cmp
stos
inc
add
jae
mov
sbb
mov
mov
jnp
dec
push
lea
and
sbb
in
mov
shll
je
mov
ss
stos
rorb
cmp
sub
jne
add
sti
inc
ret
inc
mov
cmc
popa
push
enter
shrl
sarb
and
sbb
jne
pusha
sti
mov
xor
fstps
dec
sbb
popa
enter
add
and
dec
out
and
cli
add
push
scas
roll
sub
fwait
and
sbbb
push
out
xlat
inc
jno,pt
dec
das
ja
xchg
jp
jmp
data16
and
hlt
stc
jmp
mov
cli
les
in
xchg
stos
cli
out
push
push
push
and
cltd
aam
scas
fisubl
cmpsb
insl
cwtl
pop
mov
adcb
fidivl
jno
pop
and
imul
push
jge
ss
outsb
push
test
dec
push
mov
rcr
into
shll
loope
sub
sbb
stc
add
sbb
lea
test
xchg
out
mov
or
lcall
mov
push
pop
xor
jl
clc
mov
addl
jns
lret
das
fwait
icebp
and
sbb
outsb
cmpsb
sub
inc
scas
out
int3
sub
shll
jl
adc
jno
lret
inc
stc
cvtdq2ps
xchg
popa
out
int3
add
fs
mov
dec
add
repz
jb
jle
dec
outsb
xor
mov
lahf
mov
iret
mov
and
cmp
fidivrl
xchg
notl
sbb
dec
mov
pusha
loop
mov
test
pop
adc
test
sbb
dec
ja
repz
outsl
out
loopne
lcall
fs
inc
push
aaa
lcall
stos
mov
or
pusha
sub
jecxz
adc
adc
movl
jbe
adc
jge
xlat
sbb
addb
fchs
hlt
mov
mov
push
mov
aam
push
mov
jmp
cmp
test
loope
adc
jmp
push
xchg
stos
daa
push
add
inc
addr16
lret
fidivrl
mov
push
int3
push
mov
add
repnz
push
cmc
jl
outsb
int
flds
jo
cld
aaa
popf
jns
test
addr16
aam
in
out
and
ss
je
mov
sub
add
outsb
and
mov
rcrl
push
fidivrs
test
jle
es
into
sub
mov
repz
loope
loop
push
pop
dec
or
jnp
popf
adc
inc
inc
push
test
loope
shr
rcll
jb
jb
xor
xchg
loope
addr16
movsl
xchg
lcall
dec
pop
dec
lods
les
or
mov
dec
lock
bound
in
fidivrl
add
and
jmp
popa
lods
mov
jmp
pop
popf
popa
fsubrs
add
push
xor
jne
dec
jnp
arpl
add
lods
lret
ret
lods
outsl
loopne
stos
mov
in
inc
sbb
incl
shrb
repz
repz
in
sbb
outsb
jnp
mov
jae
or
mov
dec
hlt
cmpsl
in
pushf
sbb
jo
hlt
loopne
xor
outsb
lahf
and
mov
inc
leave
stos
push
repnz
mov
hlt
pop
pusha
inc
mov
les
jl
push
add
pop
es
hlt
add
cli
out
inc
pop
sbb
stos
mov
hlt
xchg
fsub
in
cltd
add
dec
jg
xor
cli
dec
cmp
rcrl
loop
or
jp
arpl
push
pop
and
imull
xor
or
std
push
test
add
inc
out
pop
mov
jecxz
mov
out
icebp
xor
mov
xchg
mov
adc
push
movsl
ljmp
rorb
push
fistpll
fcmovb
jae
imulb
fdivrs
adc
dec
imulb
sbb
jge
xchg
lret
jecxz
push
xor
aam
adc
inc
fs
lods
inc
lock
pop
and
and
sbb
int3
mov
cmp
mov
dec
fsts
xor
test
dec
cmc
data16
adc
in
mov
aaa
cmpsl
sub
repnz
push
and
sub
cmp
dec
fstps
sub
xchg
stos
sbb
leave
or
int
dec
popa
les
cs
inc
sbb
lret
dec
pop
and
push
and
sbb
sbb
out
repnz
push
xor
leave
add
nop
nop
mov
repnz
pop
insl
mov
pop
fwait
ljmp
mov
rol
xchg
das
loop
popa
mov
sub
mov
stc
outsb
xor
pop
ja
popf
inc
mov
sbbl
inc
jae
orl
aas
mov
roll
push
xchg
sti
jecxz
scas
push
cmpsl
xchg
popa
popa
call
mov
sub
add
jp
push
sub
mov
pop
outsl
mov
jl
out
mov
pop
sbbb
testb
ja
arpl
je
imul
jecxz
and
fiadds
mov
and
sub
call
aam
sbbl
dec
cmc
and
ja
out
push
mov
or
or
adc
popa
dec
cmova
adc
or
push
and
dec
xor
pop
jns
xchg
subl
cs
pop
mov
or
mov
mov
pop
cmp
mov
lds
fistpl
and
scas
cmc
repz
dec
pushf
inc
arpl
test
jbe
xor
mov
jo
loopne
push
sub
dec
rclb
mov
loop
scas
movsl
xchg
out
mov
sbb
test
fwait
cmp
movsl
add
lret
xlat
adc
ljmp
out
mov
popf
add
pop
jge
je
pop
fnsave
sub
bnd
and
lods
xor
int
xchg
call
add
stos
imul
lea
pop
mov
sbb
mov
cld
filds
add
cmpsb
adc
call
sbb
loopne
in
repnz
divb
imul
mov
adc
sarb
lret
lret
jnp
fisubrl
cwtl
aam
out
push
sbb
test
inc
fwait
mov
ret
gs
inc
xor
xchg
in
fxch
insl
fdivs
adc
scas
inc
sahf
push
rcrl
add
add
add
cmpsb
mov
or
loop
xchg
inc
pop
data16
push
decb
stc
movsb
stos
mov
scas
and
js
test
inc
pop
test
adc
fistpll
push
jne
out
cli
out
xor
loopne
test
inc
inc
add
das
cs
cmp
push
ret
dec
aad
mov
dec
or
lock
addr16
andb
push
push
sub
and
pop
es
cmp
in
stc
or
cmp
mov
push
ja
pop
fdiv
xchg
loopne
jle
data16
js
pop
dec
xchg
enter
aaa
neg
insb
sbb
ja
imul
xchg
call
mov
ljmp
cmpl
lcall
sub
outsl
fnstenv
mov
test
xchg
jns
in
and
lods
mov
ds
sbb
aas
jmp
xorl
cmc
das
fmul
xchg
testl
pop
jmp
pop
fs
sbb
cld
pop
add
fldl
daa
push
jns
dec
cmp
lea
sbb
ljmp
dec
cmpsb
jg
cmp
addb
dec
lcall
or
pop
or
xlat
in
in
dec
out
sbb
or
or
sbb
push
add
negl
addr16
xlat
or
jno
mov
shll
xor
mov
movsl
fnsave
fstps
movsb
fwait
and
into
in
loop
shrb
mov
dec
dec
pop
lret
jns
dec
mov
hlt
push
lock
les
xor
xor
cltd
popa
mov
mov
jo
adc
inc
cld
pop
xlat
mov
in
ljmp
test
push
mov
fstpt
ds
xchg
int3
mov
cmpsb
pop
mov
sub
mov
xchg
push
nop
subb
aam
movsl
out
inc
insb
jo
and
std
mov
sahf
sub
inc
leave
inc
cli
push
fs
test
and
mulb
pop
dec
stc
sar
popf
jbe
push
add
or
cld
mov
pop
mov
sub
ror
data16
ss
mov
jl
mov
and
scas
xor
add
xchg
jno
inc
in
popf
or
sbb
pusha
pop
lods
add
lds
mov
stc
xchg
cs
lcall
cmpl
xchg
int3
sub
nop
adc
movsl
jmp
xlat
sbb
test
stc
push
fcomps
out
push
ret
adc
aad
mov
pop
stos
daa
mov
mov
adc
arpl
and
dec
dec
lret
fsub
push
repnz
push
pushl
ss
add
xchg
stc
mov
test
add
push
call
rcl
jecxz
push
outsl
mov
lock
add
pushf
fisttps
pop
and
mov
mov
lods
xor
xor
js
and
in
mov
cmp
pop
push
shll
jae
and
ficomps
out
jp
dec
lock
mov
in
cs
mov
or
inc
imul
test
pushf
pop
inc
and
xor
cmp
push
xchg
mov
cmp
or
jl
jmp
mov
fistl
inc
push
mov
sub
dec
fisttps
jge
push
sahf
aad
mov
leave
sub
lods
push
out
mov
mov
insl
rclb
cmp
addl
xchg
loop,pn
xchg
out
push
lcall
sbbb
mov
pop
rcrb
xchg
xchg
fwait
shrb
lods
mov
inc
xchg
push
or
aad
sbb
stos
inc
iret
sbb
jp
shlb
xor
lret
mov
mov
fiadds
mull
dec
faddl
add
mov
mov
cmpsl
lret
mov
mov
xlat
sub
loopne
jnp
mov
into
adc
cmc
rclb
xlat
mov
cmp
andl
rcrl
imul
jle
idivl
xchg
mov
outsl
lds
pushf
insl
lahf
xchg
inc
pop
inc
mov
push
adc
fwait
cmp
push
push
add
bound
sarl
popa
or
sbb
fwait
ljmp
pushf
std
cmc
mov
jno
xchg
add
sbb
xor
sub
jbe
mov
imul
movsb
xor
or
lock
mov
pop
xor
add
xchg
sahf
mov
mov
repz
out
subb
mov
repnz
fstps
adc
aas
cld
pop
imul
pop
push
fbstp
mov
stos
lret
fcomi
mov
fsubrl
ficoms
into
mov
dec
inc
fsubs
sbb
ret
outsl
outsl
shr
mov
sub
fwait
insb
jns
lods
xor
xchg
out
or
pop
mov
or
mov
hlt
mov
je
adc
testl
cmp
jo
shll
add
mov
mov
inc
movsb
aas
xor
aas
scas
xor
nop
pop
int3
sbb
xchg
mov
mov
mov
cmpsb
sub
out
aaa
push
cs
out
sbb
jnp
cmc
xchg
into
hlt
mov
mov
jo
add
and
outsb
cltd
fs
leave
sub
push
pop
mov
push
xchg
sub
mov
add
scas
pop
xor
xlat
mov
imul
jnp
jle
rcll
into
push
inc
cs
mov
out
loopne
push
or
decb
and
adc
sahf
insb
inc
mov
outsb
or
sub
and
push
sbb
mov
inc
jbe
mov
hlt
adc
ret
int3
mov
xor
dec
push
adc
mov
sub
ret
dec
repnz
mov
popf
and
mov
ja
mov
push
pusha
push
into
jecxz
addl
mov
dec
mov
mov
pop
push
into
mov
aas
nop
push
repnz
pushf
cmpb
jmp
popa
dec
sbb
cltd
int
push
cmp
loope
test
xchg
jno
xor
cmpsb
js
jp
xchg
adc
clc
or
fists
cmp
push
and
adc
mov
lock
add
jmp
lea
jns
cmpsl
add
push
int
data16
call
jge
insb
fs
dec
push
int
adc
dec
mov
aaa
pop
xchg
push
sar
cltd
test
mov
push
sarb
pop
jnp
fstp
jnp
xchg
call
jge
add
scas
in
lods
pop
fstpl
and
leave
mov
ljmp
cli
cltd
sub
xor
enter
push
xchg
sbb
or
fldenv
dec
mov
add
shl
enter
enter
ret
and
mov
cmp
cmp
cmp
mov
sarb
jmp
xor
pop
xor
mov
into
bound
test
lcall
daa
ja
adc
push
andb
mov
adc
and
jle
add
ljmp
popf
aas
inc
jbe
or
subb
mov
adc
lret
les
pop
pop
jb
lods
sti
fsubrs
cmp
or
pop
mov
mov
dec
pop
hlt
lds
aaa
popa
aad
adc
sysexit
dec
or
loope
dec
mov
out
jbe
test
mov
pop
pushf
loope
notb
add
push
add
and
mov
cwtl
in
cs
cld
xlat
and
mov
mov
mov
xchg
mov
add
sbb
xor
inc
in
lods
sahf
loop
xchg
mov
mov
lret
and
sub
add
jbe
dec
push
loopne
pusha
pop
push
lret
adc
push
cmpsb
popa
stos
cmpl
test
gs
push
inc
enter
fisttps
add
orb
mov
mov
aaa
inc
mov
and
lds
mov
jecxz
in
into
sti
pop
sub
and
out
insb
sbb
mov
adc
mov
mov
push
inc
imul
cmovo
outsb
mov
fdivrl
aaa
int
pusha
push
mov
sbb
imul
lret
iret
jmp
bound
cltd
ja
lahf
cld
mov
push
test
lock
or
push
xchg
in
lods
fldcw
sbb
inc
fwait
sti
rclb
and
sbb
lock
testb
aad
adc
pop
fsubrl
jae
stos
jge
clc
pop
jbe
xor
pop
cltd
movsl
mov
fdivl
cmp
mov
scas
je
js
dec
xor
ljmp
lods
mov
sbb
out
insl
incl
popa
mov
push
adc
mov
sub
into
ljmp
stc
mov
jmp
mov
xchg
ljmp
dec
mov
jg
cld
popa
jp
sbb
and
fstpt
subb
mov
dec
xor
lahf
and
stos
loope
mov
sub
rcrb
mov
cmc
les
jo
lods
xor
dec
jne
cltd
dec
add
dec
data16
stc
xchg
cmp
fstps
jno
xchg
cmpsl
pop
jo
popf
fnstsw
inc
xor
clc
jb
dec
hlt
jb
adc
scas
insl
loopne
xor
shlb
out
inc
in
sub
mov
add
sub
fdivrl
mov
out
cmp
add
cld
dec
add
push
lcall
sub
out
lea
dec
inc
pop
xor
adc
dec
adc
cmpsb
out
lcall
fimull
cmpsl
mov
pusha
test
fbld
jecxz
sub
sub
outsb
jge
aaa
add
mov
lcall
aad
aad
add
sbb
and
lods
or
fwait
xor
outsl
xchg
jnp
pop
jno
mov
mov
repnz
iret
mov
out
mov
xchg
mov
sti
pop
jmp
addb
sbb
push
scas
popf
push
sub
aad
lock
jbe
mov
int3
lock
mov
push
add
sub
mov
mov
test
aam
in
or
xchg
mov
mov
mov
insb
popa
loope
xchg
movb
sbb
inc
add
outsb
sub
lret
inc
adc
push
adc
loopne
xlat
pop
dec
jge
mov
roll
cltd
pushf
stos
mov
pop
mov
jbe
fidivl
mov
push
push
push
mov
loop
mov
push
arpl
sbb
mov
cli
in
pop
inc
jle
clc
push
lods
cmp
jae
inc
fsubs
mov
repz
cmp
fsubrs
decl
ja
sti
mov
jp
cs
mov
stc
adc
sar
rcl
lret
mov
and
rclb
sbb
fstpt
rol
repnz
rcrl
movsl
cwtl
adc
rclb
xchg
aaa
dec
stos
sti
jg
js
mov
jbe
mov
adc
int
inc
add
inc
in
inc
cmp
mov
hlt
lret
ret
rcrl
cmp
pop
xchg
addr16
cmp
outsb
ja
cmp
stos
fistpl
cld
ret
jno
ds
xor
inc
out
adc
lret
mov
push
in
xor
jmp
mov
pushf
fdivs
adc
inc
sbb
push
jl
push
lret
push
sbb
dec
out
or
push
xchg
into
lret
andb
adc
shll
out
addr16
hlt
pop
cmpsb
hlt
fs
push
jle
enter
sub
jp
sbb
and
fstl
fcomip
sub
and
mov
push
adc
addl
xchg
shr
dec
push
sbb
inc
aas
xchg
jb
jge
pop
and
cs
movsl
mov
jne
mov
push
popf
ficoml
or
cli
push
sahf
aaa
xchg
fucomi
fs
stos
mov
dec
leave
in
lds
test
push
push
add
jo,pt
test
push
ret
hlt
push
push
mov
mov
call
mov
inc
inc
cli
xchg
or
adc
pushl
add
xchg
xor
mov
mov
mov
pop
imul
fstpt
dec
xchg
cld
push
ficoms
xor
dec
dec
mov
ret
and
enter
or
xchg
popf
je
mov
jl
push
loope
jmp
jne
scas
mov
es
or
cmp
add
inc
enter
sub
scas
dec
xor
test
ffree
sub
cmp
fnsave
xor
mov
dec
cmp
xor
aas
jp
iret
mov
push
xchg
cltd
sar
daa
jecxz
adc
repnz
cmp
jge
adc
clc
dec
cltd
push
pop
mov
inc
push
loop
lcall
ja
mov
lcall
adc
out
push
mov
sbb
mov
xor
hlt
mov
fidivs
or
mov
xor
jmp
int3
btr
mov
test
dec
shr
mov
fs
jle
adc
aas
inc
inc
fimull
mov
pop
xchg
cmp
lods
cmpb
pop
or
xchg
push
cmp
loopne
out
push
xchg
and
jbe
addr16
mov
scas
jl
inc
sub
inc
sub
addr16
popl
jg
out
loop
push
ljmp
dec
gs
mov
sub
xlat
aam
push
aaa
add
cmpsb
mov
xchg
or
pop
and
stos
orl
cld
pop
and
sbb
fsubrl
mov
adc
pop
cmp
mov
pop
mov
jmp
dec
jecxz
movsb
fisttps
sbb
dec
inc
mov
cmp
inc
sub
xchg
inc
fistps
js
or
adc
or
mov
push
mov
ja
out
xchg
xor
mov
and
mov
pop
xor
cmp
xchg
xor
gs
insl
aad
mov
outsl
push
addb
cwtl
xchg
faddp
add
or
fwait
movsb
sub
sbb
in
sbb
cmp
lds
rolb
mov
mov
shlw
jne
fbld
daa
adcl
mov
dec
lret
and
shrl
mov
add
and
test
pop
push
int
fldenv
cmpl
ljmp
mov
jmp
leave
inc
rclb
pop
into
ss
dec
sbb
lahf
stos
insb
inc
inc
fwait
or
and
mov
mov
cltd
iret
jg
stos
push
pushf
rcrl
xor
rolb
nop
pop
pop
shll
fsubrs
mov
mov
mov
out
daa
lcall
pop
inc
fnstcw
sub
test
fldcw
and
mov
repz
sarl
push
aad
mov
bound
repz
sbb
jl
or
ja
stos
mov
sub
mov
into
xor
aad
sti
aad
xchg
mov
je
iret
pop
push
cmp
pop
adc
mov
das
movl
sub
fidivrl
inc
sub
cli
sbb
push
or
or
dec
sbb
xor
mov
test
int
jecxz
pusha
xchg
mov
push
jge
cmp
xor
bound
mov
add
filds
mov
mov
pop
push
aas
ja
ja
enter
loopne
into
push
lods
pop
add
mov
mov
mov
adc
cwtl
jl
call
sub
cmp
rcrl
pop
inc
jae
or
cmpsl
sbb
ror
idivb
push
aas
fidivl
imul
or
jmp
fwait
mov
pop
fwait
push
add
sub
popf
dec
aaa
mov
aaa
cmp
divl
repz
xlat
fstp
pushf
cmp
aas
shr
pop
out
adc
insl
push
fwait
sbb
clc
test
adc
mov
dec
data16
mov
or
xor
jns
popa
mov
lds
or
add
inc
jbe
xchg
into
fidivrl
insl
xchg
mov
xchg
push
je
or
inc
dec
ds
dec
mov
mov
pop
rcr
mov
jle
nop
scas
pop
sub
cld
mov
or
pop
mov
filds
add
inc
sbb
mov
mov
xchg
sub
aam
dec
lods
mov
cmp
xchg
shll
loopew
sbbl
pop
testb
sub
ret
add
stc
mov
or
pop
bound
add
outsl
xchg
mov
pop
rorb
mov
subl
and
and
in
add
lahf
mov
xchg
clc
data16
xchg
fs
inc
leave
jnp
xor
jecxz
push
fwait
inc
push
adc
or
mov
lea
lods
fnstenv
aas
loop
or
adc
xor
pop
add
adc
clc
popf
mov
es
insb
nop
mov
mov
inc
sbb
dec
cmc
lock
cld
dec
ret
cld
sbb
mov
dec
faddl
pop
add
pushf
adc
push
sbb
les
mov
loope
outsb
jle
out
xchg
aad
jo
jbe
mov
and
bswap
add
and
lahf
ja
data16
jle
push
jl
imul
lods
movsl
mov
fcomp
jno
ds
jl
mov
adc
mov
mov
mov
jmp
movsb
outsl
xchg
adcb
pushf
xorb
xor
push
dec
pop
std
inc
nop
cmc
stos
leave
dec
or
sub
xchg
repnz
cmp
cli
popf
aaa
mov
enter
loopne
movsb
mov
into
inc
enter
pop
sbb
out
jne
jmp
std
mov
jl
lret
pop
into
rorl
dec
sti
or
ja
jnp
lods
outsl
xchg
ret
dec
repz
push
popa
sbb
inc
sahf
xor
mov
les
sbb
stos
sti
xchg
aaa
ja
sbbl
lcall
ss
or
xchg
jp
xor
pop
incb
mov
out
lock
dec
push
lret
cwtl
push
or
rorb
add
push
mov
leave
ljmp
insl
inc
cmpsl
pop
add
mov
mov
or
mov
fsubr
add
test
in
sbb
xchg
or
push
mov
ret
push
pop
sbb
xchg
fmuls
call
arpl
jmp
dec
mov
cmp
sbb
test
aad
sub
dec
pop
add
adcb
movsl
test
mov
test
push
cmp
add
gs
fwait
jne
cli
inc
add
popa
mov
or
adc
jecxz
jge
stos
gs
or
add
xchg
jnp
and
call
adc
aad
sbb
xchg
mov
fidivs
jae
pop
push
into
xor
aam
fstl
xchg
push
movsb
dec
js
mov
movsl
aaa
inc
sbb
xchg
xchg
adc
or
push
out
mov
jno
mov
dec
mov
pop
xchg
mov
shll
pop
jecxz
cmp
pop
js
clc
movsb
mov
mov
cmc
xchg
std
sbb
iret
imul
clc
add
add
lret
or
cmp
stos
mov
cmp
test
scas
lahf
jns
inc
test
int3
push
dec
pop
mov
xor
cmc
inc
gs
xor
fcoml
testl
push
das
xchg
or
outsl
push
or
xchg
test
outsb
and
pop
xor
scas
xchg
adc
push
sub
and
adc
cld
or
enter
sbb
cmp
push
cmpsb
imul
lock
jp
pop
lods
cmp
into
loop
enter
xchg
dec
lret
ffreep
adc
mov
out
mov
aas
into
mov
pop
jp
das
pop
test
push
iret
icebp
mov
xchg
and
dec
mov
jg
mov
inc
test
fadd
sbb
aas
push
jmp
jno
jl
xor
jmp
or
adc
mov
inc
push
xor
sbb
shll
push
out
loope
adcl
faddl
adc
mov
aaa
mov
push
sbb
push
mov
dec
add
test
push
xor
jge
dec
and
xchg
outsb
in
jno
or
push
inc
lret
cmp
xorb
daa
pop
out
enter
pop
cwtl
add
adc
push
mov
outsl
pop
rorb
sub
cmpsb
mov
xor
cmp
shr
jnp
cmp
xor
icebp
out
or
cld
stos
movsb
outsl
out
test
xor
pop
shrl
pusha
loop
mov
call
outsb
fimuls
test
int3
inc
fmull
insb
hlt
addr16
notb
push
dec
cmp
call
scas
in
bound
sbbl
pop
scas
mov
dec
int3
popa
pop
xor
pop
fwait
push
data16
mov
cmp
leave
ja
scas
lds
std
mull
inc
iret
sbb
adc
stos
je
and
out
xor
out
adc
dec
lret
dec
sarl
movsb
mov
inc
icebp
dec
insl
js
ds
adc
subb
jge
ljmp
or
cmc
adc
arpl
cmpl
lds
faddl
cmp
js
sub
or
mov
sti
mov
insl
pop
in
out
sahf
add
in
sub
cmc
sub
rep
sub
jb
xor
dec
mov
xchg
fwait
inc
push
adc
lret
mov
mov
sub
cld
movsl
mov
inc
out
adc
sbb
in
and
push
pop
dec
pop
cmp
xor
jns
fst
pop
ret
js
jns
xchg
shlb
lods
enter
xchg
sbbl
mov
hlt
push
in
aam
jecxz
fwait
xor
scas
pop
test
ljmp
in
inc
jnp
popf
adc
or
or
pop
add
pop
and
push
jmp
pop
sbb
insl
leave
adc
jno
sbb
dec
sub
mov
sti
mov
cmp
pop
sub
or
dec
movsl
pop
call
enter
mov
gs
sbb
ror
sub
add
sahf
stc
xchg
hlt
cltd
mov
inc
dec
lahf
push
and
repz
loope
mov
mov
pop
stos
or
arpl
js
movsl
jnp
mov
pusha
insl
push
jmp
jbe
adc
mov
pop
jnp
jo
sub
mov
dec
int3
pop
loope
stos
add
out
sbb
mov
dec
addb
cli
and
or
mov
fsts
mov
jbe
push
inc
push
xchg
sbb
xor
sbb
mov
adc
cmpsl
mov
sub
js
jo
pop
inc
test
inc
scas
adcb
jmp
mov
iret
mov
nop
fcmovbe
bnd
nop
lods
loopne
sti
jg
inc
cs
mov
jmp
xchg
cmp
jne
clc
aas
mull
mov
pop
cmp
sahf
pushf
inc
push
add
add
push
out
push
dec
push
sbb
in
enter
pop
push
sbb
das
mov
jae
leave
aas
pusha
out
subb
mov
inc
inc
bound
fcomps
xchg
push
lret
es
xchg
mov
addr16
out
sahf
outsb
pop
divl
xchg
fidivs
adc
adc
cmp
cmpb
outsl
andb
cmp
inc
insl
xchg
pop
inc
add
shrb
jge
movsl
cmpsl
shr
cmp
sbb
sbb
mov
icebp
jb
ds
add
in
mov
daa
insl
cmpsl
xor
and
xchg
into
dec
cld
out
push
jle
add
icebp
jmp
cltd
ss
xchg
and
sub
inc
cs
movntps
jne
xchg
and
jbe
adc
mov
fadds
push
not
sar
push
pop
arpl
pop
shrl
cli
fistl
les
pusha
sub
aad
dec
or
fisubs
xor
aaa
mov
mov
out
and
in
aas
mov
sbb
inc
jb
jl
push
lds
ss
out
je
int
cmp
mov
jmp
inc
aam
sub
ret
mov
or
adc
and
fs
jnp
in
loopne
sub
mov
and
sub
jb
rclb
subl
jle
jmp
test
mov
mov
dec
js
inc
jg
fisubrs
dec
aaa
or
orl
xor
cld
or
jo
xchg
adcb
xchg
repnz
mov
add
test
in
pop
decl
xor
sub
adc
mov
push
dec
pop
scas
sbb
adc
cs
sub
je
pop
rcr
pop
cmc
je
push
sub
mov
rorb
sbb
mov
subl
or
sbb
int
roll
cltd
cmpsl
ds
pop
push
cli
cld
icebp
in
dec
or
shlb
out
test
sub
mov
add
xor
loop
js
jge
hlt
stos
lds
mov
jmp
jle
rcrl
subb
aad
ja
pop
adc
jp
ficomps
and
push
leave
sub
mov
lock
pop
cmp
out
push
std
sub
cli
nop
sub
test
sbb
adc
fiadds
je
dec
stos
push
imul
xchg
dec
xlat
xor
jbe
or
ss
fidivrl
rcrb
fcmove
pop
push
cmp
fs
xchg
cmp
xchg
insb
pushf
das
jne
repnz
sbb
inc
lret
mov
sub
xor
xchg
cmpb
adc
xor
lds
jmp
repz
aam
mov
fstpl
and
adc
mov
push
pop
mov
mov
jg
jno
add
mov
ja
dec
orl
mov
jle
into
cmc
or
cmc
fidivrs
hlt
imull
pcmpeqb
mov
lds
out
cwtl
inc
xchg
jle
lret
sahf
mov
cmp
push
out
adc
mov
adc
insb
pushf
stos
imul
sub
aas
call
xchg
or
dec
jp
inc
mov
scas
mov
push
test
xchg
inc
mov
scas
mov
insb
lods
adc
cwtl
stos
gs
je
fisttpl
nop
aas
sub
push
inc
adc
jne
pop
jg
loope
das
lcall
lods
pop
loope
mov
stc
dec
ss
popf
adc
fwait
cmp
fsubrl
add
push
and
inc
js
pop
jns
dec
add
xor
lret
mov
pop
stc
push
mov
test
cmpsl
jmp
or
enter
and
pop
mov
pop
cld
sub
stos
sbb
out
xchg
sub
aam
jns
fidivrl
jmp
into
sbb
inc
mov
mov
mov
cmovne
hlt
xor
test
jle
ficoml
sbb
aad
pop
cmp
popf
notb
fsubrs
cmp
inc
push
and
repz
pop
adcl
mov
mov
mov
ss
in
xchg
stc
sub
mov
add
leave
fcomps
xor
gs
fstps
out
dec
dec
repnz
ja
jge
test
test
lcall
sti
dec
mov
or
lcall
movsl
addr16
test
mov
pusha
test
subl
fnstcw
and
fdivrl
fldcw
insl
xchg
ljmp
cmpsl
addr16
shll
push
lea
cmp
psrlq
or
aaa
rcll
in
arpl
insb
adc
mov
xchg
mov
icebp
insl
push
sbb
jmp
scas
loopne
sbb
sub
mov
test
je
sar
das
orb
aaa
pop
cmp
loopne
std
mov
xchg
add
add
stc
push
int3
push
lea
mov
dec
xor
sub
out
mov
prefetch
pop
push
push
mov
mov
mov
nop
negl
punpcklwd
mov
idivb
arpl
lret
ja
add
mov
pop
jecxz
inc
xor
into
pop
cmp
cmp
test
fwait
mov
adc
add
std
mov
shrb
mov
or
stos
sbb
inc
xchg
adc
rcrl
jo
or
inc
mov
divl
mov
mov
sub
sbb
js
jle
xlat
pop
cs
fisttpll
enter
add
mov
jne
ss
mov
jo
adc
jnp
insl
add
mov
xor
or
test
es
adc
mov
jl
jg
into
stos
ja
mov
xlat
subb
xchg
loop
adc
fimull
xchg
cmc
je
clc
mov
mov
jp
ljmp
sbb
fucomi
mov
stc
pop
xchg
decl
cmp
xchg
mov
pop
ret
mov
pop
push
xchg
iret
inc
frstor
jnp
jb
mov
popf
xor
imul
int3
insl
pop
shl
shrb
inc
int3
jae
je
mov
gs
add
in
js
push
jle
data16
mov
mov
lret
ja
xchg
pop
sub
sub
or
loope
call
mov
xor
pop
cmp
push
adc
pushf
fisttpll
insb
jl
je
jecxz
movsb
push
nop
in
sub
mov
dec
mov
fldcw
dec
mov
in
mov
cmp
sbbl
daa
jnp
jg
mov
aaa
psubb
loop
inc
inc
aam
aas
cmp
fsubs
pop
lcall
pop
push
sub
lock
add
icebp
or
and
mov
cmp
fnstenv
mov
sbb
xchg
add
or
jp
adc
and
or
ret
jnp
clc
sbb
mov
xchg
mov
addl
decl
xor
jb
adc
cwtl
or
xor
clc
arpl
int3
push
push
and
inc
mov
push
lcall
lret
insb
test
jge
pop
sub
lods
inc
mov
mov
hlt
jns
sbb
fbstp
shlb
stos
aaa
cmp
out
add
jnp
xor
out
fisubrl
out
jge
testb
outsb
cs
and
sub
imul
lret
sahf
pop
push
sbb
dec
cmp
sbb
xor
mov
movsb
imul
dec
lret
in
cli
push
jne
sub
jle
mov
insb
cs
add
enter
test
and
mov
test
or
test
into
rcr
fucomip
fidivrs
add
nop
push
out
dec
call
outsl
mov
jg
mov
mulps
popf
movsb
jb
int
outsl
ss
out
mov
test
pop
pop
subl
or
call
push
add
sbb
rorb
stos
sbbl
xchg
jne
mulb
in
in
xchg
and
push
push
fwait
call
dec
or
pop
fstl
pop
cld
xor
mov
sub
scas
mov
jb
out
pushf
scas
sub
add
std
setg
pop
lods
jg
loope
insl
fs
xchg
arpl
ret
sub
insb
test
jp
ror
movsl
pop
add
divl
push
lret
jae
adc
cmpsl
mov
aam
fildll
out
stos
jae
es
and
neg
rol
dec
addl
movsb
orb
fcmovb
inc
shrl
adc
lods
push
in
rcll
stos
out
popa
loopne
add
insl
xchg
out
inc
mov
adc
xor
scas
lea
jbe
sub
daa
cmp
movsl
xor
test
mov
and
pop
fdivr
xor
sbb
orl
sub
icebp
inc
mov
ljmp
push
xor
daa
cmp
sbb
test
adc
sbb
and
sub
pop
xchg
pop
call
dec
cmp
in
pop
insl
xchg
inc
pop
jl
pop
pusha
ljmp
mov
es
pop
repnz
icebp
mov
hlt
int
test
dec
lea
mov
test
pop
push
cld
cs
das
push
loope
sub
std
inc
inc
push
fnsave
fwait
in
mov
dec
add
mov
mov
nop
movsb
mov
aad
and
lcallw
das
cmp
std
lods
es
pop
rorb
jmp
pop
xchg
hlt
jae
jp
jb
stos
in
nop
ds
xchg
clc
jne
enter
aas
out
lret
push
aaa
xchg
cmp
jns
ss
xor
shll
xor
in
cmpl
aad
movsb
cmp
sbb
imulb
ds
mov
pop
mov
inc
push
rclb
cmp
mov
push
lahf
scas
pop
mov
mov
repz
scas
lret
adc
sub
or
ss
jl
xor
push
mov
je
jnp
cld
cmpsb
scas
aas
scas
push
insl
mov
call
push
cmp
aaa
inc
dec
daa
add
pop
pop
or
pusha
jno
lock
dec
movsl
dec
pop
sbb
ljmp
xchg
xor
pop
divb
pop
dec
lds
push
pop
js
sar
imul
or
out
jb
jns
dec
xchg
pop
lds
add
mov
popa
pop
incb
pop
iret
jg
jo
decb
repz
and
jmp
ret
adc
leave
adc
dec
call
hlt
std
enter
sbb
cmpsb
cltd
xchg
push
push
or
jo
mov
sub
repnz
mov
int3
in
mov
push
inc
mov
cs
ret
imul
stos
mov
and
lds
jno
push
imul
hlt
inc
pop
xchg
ds
std
push
jae
push
hlt
sbb
in
xchg
stc
cwtl
imul
lock
data16
sahf
cmp
dec
into
hlt
jp
and
mov
icebp
mov
js
out
jo
ror
scas
je
xor
or
sahf
outsb
and
mov
xchg
shll
sti
das
cs
sub
add
mov
cmpsl
or
xor
aam
cmp
dec
faddp
mov
add
push
data16
rclb
dec
push
inc
xor
mov
or
dec
or
adc
enter
add
dec
mov
push
add
mov
pop
fwait
dec
add
xchg
push
cld
ja
pop
push
lret
sbb
sub
stos
xchg
inc
cmp
mulb
loope
scas
ljmp
clc
xor
shll
inc
out
xchg
out
popa
pop
outsb
rcrb
push
iret
dec
inc
hlt
divb
in
les
xor
push
inc
xor
ljmp
pop
add
movsl
adc
movsl
cmp
mov
mov
jg
jae
arpl
push
mov
ficomps
push
mov
jo
push
orl
push
into
hlt
pop
cli
rcr
xor
xor
out
xchg
adcb
addb
lods
sub
test
cmc
jno
lea
mov
js
call
gs
mov
in
jb
dec
xchg
dec
popa
lds
cmp
test
popf
fmull
mov
fildl
jp
shll
push
pop
adc
sub
push
daa
mov
loop
mov
mov
mov
loop
inc
lcall
cmc
jnp
and
cmp
mov
dec
cmp
leave
mov
lods
mov
lea
and
jge
xchg
xchg
bound
sub
aaa
mov
int
fistpl
fsubrp
dec
ss
and
sub
movsb
rclb
cmp
repz
lock
stos
xor
sub
scas
popa
cld
and
mov
sbb
data16
xchg
push
push
cmp
mov
or
sbb
lds
lret
and
fadds
pop
lret
dec
jmp
xchg
jnp
mov
adc
ficomps
mov
xchg
mov
andl
ret
xor
incl
push
and
mov
into
lea
outsb
ja
es
out
cmpsl
movlps
add
call
push
inc
insb
clc
mov
mov
out
lods
test
fld
shll
addr16
insb
sub
repz
pusha
test
loope
js
dec
mov
xchg
arpl
cmp
movsb
xchg
jnp
fisubs
jecxz
std
jg
cmpl
cmpsb
dec
mov
insb
push
divb
sbb
push
jg
push
xor
pop
xchg
out
pushf
or
sarl
fldcw
inc
dec
in
cld
fbstp
push
jns
test
push
fwait
clc
and
mov
cmp
mov
mov
add
mov
in
scas
cwtl
mov
addr16
jl
push
jecxz
xor
push
repnz
iret
xchg
dec
mov
mov
dec
cwtl
lcall
push
shrl
adc
or
cltd
test
stos
fwait
mov
and
sub
pop
test
clc
ficoml
and
mov
cmp
jmp
rep
loopne
testb
sub
xchg
jmp
and
push
jecxz
std
ret
mov
dec
mov
test
jl
adc
js
mov
aam
sbb
adc
xor
ljmp
stos
pop
mov
repnz
stc
and
cmp
shlb
push
clc
ja
dec
test
ficomps
or
jge
insb
mov
dec
and
add
or
xchg
loopne
test
inc
ret
movsb
add
dec
lahf
push
clc
arpl
xchg
inc
mov
cwtl
test
mov
push
das
push
xor
insb
sbb
pop
add
mov
jo
jp
mov
ja
ljmp
pop
adc
or
cmp
je
jno
nop
sub
test
cli
adc
add
daa
jg
roll
sbb
out
roll
les
and
out
cmpsb
leave
and
mov
jno
lock
fwait
adc
fs
clc
lock
jge
test
adc
aas
adc
sbb
inc
test
mov
icebp
fdivl
loop
inc
xchg
push
mov
fcomp
add
loopne
sbb
aaa
popf
sti
flds
add
lods
pop
imul
dec
jne
orl
pop
inc
cmp
mov
lret
popf
and
sub
in
xor
stc
sbb
push
in
clc
xchg
xor
cmp
les
xor
xor
lods
cmp
loop
jmp
shll
sub
xor
ret
scas
jecxz
call
mov
notb
lcall
ja
adc
pop
lock
addl
mov
jp
or
ret
or
xchg
mov
dec
add
xchg
lods
sbb
mov
adc
cld
rcrl
je
push
jmp
push
jo
rcl
and
sub
pop
dec
push
mov
aam
outsb
dec
push
out
adc
inc
sbb
lods
clc
ljmp
sarl
cmpsb
testb
xchg
or
add
pop
mov
lea
xor
into
aaa
jae
jne
xor
movsl
jmp
out
popf
adc
xchg
mov
imul
inc
jge
fdivl
and
sbb
jmp
notl
jo
mov
cmp
mov
or
cmp
popw
pop
cmpsl
movsl
sti
or
js
into
testl
test
mov
lods
insl
pop
subb
rorb
cs
mov
arpl
imul
lcall
cmp
rorl
cmp
cmpsb
iret
pop
inc
inc
sbb
xor
pop
repnz
int
push
in
mul
pop
sbb
jae
jo
bts
scas
test
xchg
inc
dec
neg
and
push
push
push
mov
dec
iret
jmp
scas
xchg
lret
repz
xorb
push
sbb
outsb
cmp
mov
sub
mov
dec
outsl
rclb
in
iret
jp
outsb
cld
jp
mov
cmp
and
xchg
xchg
push
push
inc
repnz
dec
in
out
and
enter
jb
xlat
int3
movsb
cli
shll
inc
fists
mov
dec
mov
test
shrl
scas
xchg
add
test
daa
push
pop
sub
aaa
jg
mov
popf
dec
insl
cmpsl
cld
dec
les
imul
jp
adc
je
imul
jnp
cmp
xchg
out
lret
lea
das
outsb
adc
cmp
sbbb
movsb
aad
jge
pop
in
push
sbb
pop
loope
fsub
mov
sbb
icebp
pop
test
pushf
add
aam
lods
xor
jbe
shl
pop
inc
daa
xchg
jecxz
push
cmp
mov
in
out
arpl
push
and
mov
lds
lea
sbb
pop
push
das
dec
sbb
sub
hlt
cmp
popf
dec
mov
iret
stc
xchg
loopne
sti
dec
repnz
shll
mov
in
subb
sub
inc
cmpsl
jno
js
fsqrt
sub
jns
out
add
loope
cmp
mov
js
xchg
xchg
mov
adc
sub
fsubs
out
xchg
adc
and
addr16
and
sub
in
outsb
repnz
and
cmp
enter
adc
decl
add
push
lock
je
push
je
pop
cmp
mov
jae
addl
cs
cmp
out
sbb
push
jne
mov
jno
add
inc
andb
loopne
imul
shlb
and
mov
sub
icebp
hlt
push
enter
adc
mov
cli
nop
shlb
jb
dec
leave
or
rcr
mov
js
add
adc
fisubl
sub
sbb
mov
and
mov
xor
and
je
xchg
push
and
int
iret
das
lods
jecxz
push
pop
pop
jo
mov
jbe
sarl
jo
inc
int
out
fs
mov
lahf
shrb
jo
jnp
fnstenv
mov
outsb
add
pop
and
roll
add
cmpsb
or
inc
lahf
adc
stc
xchg
aam
ficoms
inc
xor
adc
in
lds
inc
popf
pop
mov
sub
xor
icebp
int
pop
fwait
imul
cwtl
xchg
adc
xchg
inc
jmp
shll
xorb
push
out
jecxz
out
xor
shlb
pop
shr
cmc
xchg
or
dec
push
in
ret
lret
ret
sbb
push
daa
push
pop
mov
push
jmp
and
push
jae
xchg
dec
xlat
mov
clc
xor
cltd
imul
testb
push
pop
clc
xor
sub
xchg
mov
push
lock
ret
dec
pop
cs
dec
mov
pop
ss
into
movsb
popa
shlb
dec
ret
mov
mov
mov
pop
adc
mov
mov
pop
fiaddl
mov
xlat
cmp
pop
cmpb
repz
mov
fldcw
ret
loop
in
pop
test
insl
cmp
fs
fs
inc
cmp
cwtl
pop
mov
mov
sbb
jne
sub
mov
adc
int3
xchg
jbe
inc
xor
hlt
ds
and
cmc
lods
nop
lock
cmpsb
xchg
shlb
test
aam
jo
pop
es
les
sarl
aaa
in
inc
test
mov
push
xor
inc
dec
rcr
in
xchg
hlt
into
adc
xor
movsb
in
fadds
mov
dec
fistpl
jne
popf
and
dec
test
adc
cld
aas
pop
sub
ret
lods
scas
push
dec
sub
fucomip
in
outsb
test
xchg
pop
add
jae
dec
inc
jmp
and
inc
lods
mov
inc
push
sbb
int3
lret
lret
and
inc
cmp
je
add
orb
mov
push
aad
scas
and
aaa
stc
sbb
push
mov
into
pop
cmc
cltd
dec
cmpsl
sahf
push
insl
aaa
inc
mov
sti
add
inc
jbe
mov
in
jp
mov
push
dec
leave
sahf
jo
mov
jne,pt
sbb
pop
push
jmp
int
fs
js
gs
inc
loop
adc
repnz
mov
dec
jne
loop
mov
es
ds
pop
mov
les
scas
pop
cmc
outsb
rcll
push
xchg
sbb
cmpsb
mov
adc
mov
popa
inc
pushf
in
mov
cli
sarl
sub
sub
loope
out
ret
push
rclb
xchg
outsb
lcall
lock
or
iret
or
dec
popa
cmp
inc
shll
lret
cmp
xor
xor
insl
outsl
jg
jnp
cmpsl
push
lcall
fs
jbe
dec
jo
xorb
ljmp
sub
dec
scas
insl
jecxz
std
fcoms
es
sbbl
rorl
mov
incl
dec
jbe
inc
and
hlt
mov
popa
pop
or
fiaddl
mov
leave
lods
push
jae
pop
repnz
lds
sbb
xchg
mov
jg
shl
dec
and
popf
cli
repnz
sbb
sbb
popa
frstor
jmp
test
ljmp
in
jp
sbb
aam
sub
aas
pusha
mov
in
mov
sub
mov
jmp
pop
xchg
cmpsl
dec
pop
pusha
aaa
jb
cltd
int
shl
repnz
je
inc
in
sbb
inc
adc
mov
in
or
cmp
or
adc
xchg
sub
addl
lds
mov
or
bound
pop
psubusw
mov
cs
pusha
sub
outsl
inc
inc
cmc
sti
dec
mov
loopne
cs
std
fsubs
sub
pusha
cld
jne
rorb
mov
rorl
out
pop
push
inc
dec
pop
pop
add
orb
cld
inc
sbb
fsubl
jecxz
or
mov
imul
mov
test
stos
mov
jg
jno
aas
mov
jmp
popf
inc
test
and
push
mov
add
std
test
dec
jns
loop
dec
fs
and
leave
sub
shlb
fcomp
outsl
ja
dec
mov
pop
clc
cld
add
or
sbb
mov
jno
leave
jge
sbb
sbb
mov
mov
xor
or
mov
xor
adc
dec
jne
call
add
adc
ja
cmpsb
es
aam
dec
loop
sbb
mov
jns
fsts
add
aam
add
sarl
or
dec
sub
or
sub
xor
push
int
lret
cli
pop
or
push
jle
mov
dec
xchg
xchg
pop
out
in
imul
les
mov
xchg
bound
testl
lods
xchg
sbb
pop
inc
nopl
dec
es
mov
sub
mov
or
hlt
mov
jns
out
add
sbb
pop
shrb
imul
mov
push
mov
mov
in
lods
push
add
ret
bound
mov
mov
scas
lods
cmp
dec
pop
daa
divl
in
fbstp
leave
mov
in
pop
jne
stos
fisubs
mov
lret
pop
fsts
fsubr
fcoml
mov
mov
jno
iret
cmp
pop
mov
lret
xchg
cmp
cmp
cmp
jmp
adc
inc
mov
cmp
lcall
xor
loopne
idiv
js
add
mov
cmpsl
das
mov
xchg
and
fucomi
adc
push
cltd
add
ffreep
sub
movsb
dec
cld
mov
pop
in
or
icebp
int3
es
or
mov
add
add
push
iret
outsl
aaa
test
pop
hlt
jge
jne
add
mov
in
leave
sbbb
mov
loop
ja
mov
inc
inc
hlt
loopne
es
in
mov
in
test
mov
nop
or
cmpl
xor
pop
push
sahf
insb
lods
sub
push
mov
and
push
test
sbb
cs
add
aaa
sar
mov
je
test
lret
mov
jbe
adc
daa
out
xor
icebp
shlb
mov
insl
inc
lcall
insl
dec
mov
add
push
inc
push
add
adc
cmp
pop
call
mov
jbe
sbb
lds
or
std
sti
sar
xchg
aam
pop
in
cld
enter
lea
int
or
movb
fsubs
xor
fs
mov
push
rol
outsb
lret
or
mov
sub
push
stos
fsubs
dec
sub
jne
inc
leave
mov
sbb
xchg
aaa
popa
sbb
es
jnp
jns
inc
lcall
arpl
pusha
notb
out
dec
adc
pop
add
push
sbb
cltd
sar
inc
iret
leave
mov
mov
mov
ljmp
ficoml
xor
in
sbbl
mov
mov
xor
sub
cmp
icebp
gs
daa
dec
std
add
loop
fs
push
jnp
call
in
mov
inc
push
movsb
push
xchg
pop
stc
xchg
inc
pop
mov
fs
mov
jle
in
loopne
jle
imul
and
test
adc
stc
inc
push
or
or
fadd
into
test
loopne
xor
add
mov
xchg
add
mov
push
xor
xchg
icebp
xor
pop
repz
cmp
or
pop
test
pop
jno
inc
lcall
push
hlt
fcmovu
int
lods
andb
inc
pop
negl
stos
aad
and
jb
les
dec
cs
jle
adc
lea
arpl
out
ret
jnp
pusha
xchg
negl
shll
fbld
fwait
mov
add
out
dec
pusha
dec
test
jge
sbb
and
inc
sbb
or
sbb
sarl
mov
ret
add
mov
movsl
andb
add
xchg
je
dec
stos
les
push
js
ss
pop
and
rolb
hlt
jbe
and
into
cmp
adc
test
dec
repnz
out
stos
mov
into
push
fwait
jmp
xchg
mov
fwait
lret
xor
jno
mul
mov
mov
fstpt
lods
mov
push
inc
cmp
clc
clc
das
jns
movsb
test
loop
xchg
and
pushf
hlt
mov
subl
into
shll
jecxz
cmp
rclb
jl
decb
sbb
stos
iret
aad
jmp
pop
mov
xchg
pop
pop
mov
dec
push
xchg
int3
dec
cld
adc
sub
sub
imul
dec
out
insb
aas
push
sar
xchg
sbb
hlt
addr16
popl
cmp
push
pop
or
fmulp
mov
inc
cmp
sti
je
inc
push
jle
aam
jbe
insb
ret
mov
shl
xchg
les
test
fstps
aas
xchg
lahf
mov
std
cs
bound
mov
cmc
stc
mov
and
mov
lock
insb
jmp
shll
and
movsb
dec
push
dec
pop
test
or
popf
push
scas
clc
gs
pop
mov
push
and
mov
fildll
add
or
cmp
cmp
dec
inc
sbb
sbbl
jg
pop
xor
lret
loopne
cmp
jl
push
add
mov
xchg
sbb
dec
imul
arpl
xlat
and
test
mov
aam
inc
inc
fidivl
filds
fld
popa
xchg
mov
outsb
cld
popa
popa
push
sub
xchg
inc
es
mov
fstl
fbstp
insl
push
dec
pusha
inc
pop
mov
or
pop
and
push
xor
push
ss
adc
cmp
pop
enter
inc
cmp
push
adc
rorb
es
mov
mov
push
scas
push
xor
into
loopne
lret
cli
cmp
and
dec
cmp
sbbl
xor
adc
xchg
pop
push
sti
mov
xchg
in
dec
shlb
shll
lea
nop
pop
test
inc
xchg
cmp
in
rcrl
aaa
icebp
adc
jno
add
sbb
imul
sub
shl
data16
aas
sub
or
push
add
flds
add
insl
push
sub
ficomps
jb
sub
bound
mov
and
jmp
jge
lock
cs
aas
xchg
pop
or
cmp
dec
adc
dec
cmp
repz
xchg
adc
sub
cwtl
enter
movsl
shll
stos
or
arpl
dec
lcall
gs
or
push
inc
into
shlb
sub
daa
clc
scas
jb
pushf
cmp
mov
lret
mov
sub
cltd
mov
or
clc
pop
push
rcll
rol
jbe
fsubs
push
and
push
lods
adc
std
aas
insl
jb
cltd
movsl
mov
inc
adc
clc
adc
and
dec
push
inc
jmp
add
jno
add
repnz
fidivrl
adc
repnz
adcl
lahf
fldenv
sbb
mov
clc
notl
pop
inc
fldl
pop
jp
jmp
or
cli
push
xor
pop
roll
lock
out
xlat
mov
cwtl
cmp
mov
sarb
dec
push
or
mov
das
cmp
insb
test
xor
push
pushf
ror
jns
jl
out
mov
cmp
pop
mov
push
pop
aaa
testl
movl
xor
jge
mov
sbb
push
xchg
out
lods
fldenv
scas
ret
mov
inc
fistps
cmp
std
in
out
cmpsb
xchg
jg
movsb
rcll
aaa
pop
call
ds
imul
testb
les
adc
fldcw
cmp
nop
test
push
sahf
adc
cmpsb
mov
push
ror
daa
aaa
cmpsb
fdivrp
js
sbb
lods
inc
fs
lods
fistpll
sahf
cmp
repnz
icebp
and
push
loope
push
xchg
outsl
pop
pushf
xchg
jmp
lret
out
es
sbb
fcoml
mov
shlb
sbb
idivb
data16
popa
jg
sbb
lock
mov
jno
cmpsl
push
add
jle
jnp
lcall
sub
aas
fstpl
fnstenv
xlat
or
xchg
insb
dec
insl
jl
call
mov
mov
adc
cmp
flds
lret
mov
jno
mov
call
sahf
mov
or
div
out
xor
es
ficompl
fbld
sub
mov
push
xchg
cmp
jne
sub
push
inc
push
sub
imul
push
mov
mov
mov
fldenv
sub
cwtl
cli
xor
xor
das
push
jbe
adc
mov
iret
scas
cli
sbb
sbb
rclb
leave
bndstx
stos
fadd
mov
xchg
cli
in
dec
test
iret
cli
enter
call
xor
test
shlb
jecxz
adc
lods
arpl
movsb
inc
jnp
aas
jno
adc
ds
inc
dec
aad
jg
das
in
enter
sbb
insb
dec
push
pop
sub
insb
js
inc
mov
fwait
imul
adc
inc
and
shlb
out
inc
cwtl
aad
push
adc
pop
outsb
fs
jge
and
fwait
popa
cmp
push
jo
and
sbb
mov
mov
and
cmpsb
jecxz
pop
mov
xor
sub
icebp
xor
xchg
shlb
jl
lret
inc
insb
cwtl
fidivrl
fsub
das
loop
fcoml
out
inc
ds
sahf
pop
in
dec
cli
jle
cli
push
push
pushf
push
dec
jecxz
xchg
pop
mov
cmp
test
test
pusha
sti
movsl
out
sbb
adc
push
dec
xor
movsl
sub
clc
ret
jmp
sarl
sbb
xchg
jl
sub
test
mov
inc
or
fdivp
leave
or
pop
jle
lea
daa
xchg
js
push
scas
and
cmp
and
cmpsl
mov
push
pop
mov
fildll
and
popa
dec
popa
mov
arpl
dec
cmp
jne
and
pop
std
or
jp,pt
push
int
cwtl
adc
inc
mov
sbb
loopne
je
jge
add
bound
mov
out
outsb
je
and
sbb
cmp
pop
add
jecxz
mov
jge
mov
xor
lahf
mov
inc
pop
pop
cmp
jle
pop
data16
sbb
shrb
and
sub
jg
aad
mov
jecxz
in
or
out
outsb
jo
xchg
jns
mov
and
jbe
insl
and
ja
into
and
xlat
out
aas
cmp
in
mov
fwait
mov
mov
aaa
push
fcomi
push
in
mov
and
addr16
jmp
pop
add
iret
xor
mov
jns
sbb
mov
mov
add
push
aad
jae
add
xor
pusha
jb
adc
xor
repnz
lods
mov
ret
jae
and
inc
mov
mov
cli
cmpsb
shlb
sbb
or
sbb
cmpsl
cmp
fimuls
ret
pop
movsb
out
fimull
setp
mov
std
ss
inc
cmp
pop
dec
sbb
xor
cmp
in
cmp
in
mov
ret
mov
jl
call
push
mov
and
bound
leave
mov
movsb
das
xchg
rorb
mov
fnstsw
or
dec
testl
scas
and
out
fwait
aas
push
mov
ds
ds
sbbl
cs
out
sub
mov
hlt
and
sub
lahf
test
pusha
cmpb
int3
and
cmpsl
dec
mov
cld
lret
jle
push
shlb
fidivl
inc
xlat
jb
and
inc
pushf
aaa
add
or
or
frstor
sarl
lock
pop
outsb
add
xor
add
push
mov
and
sti
inc
rsqrtps
sub
sbb
push
test
add
es
cmp
dec
js
xchg
pop
xchg
scas
loope
inc
xchg
out
jmp
stos
push
lock
jno
push
scas
or
fstps
sahf
adc
dec
adc
xchg
out
mov
mov
cmp
imul
inc
loopne
inc
insl
test
imul
fs
push
in
fcmovne
leave
push
dec
es
add
cltd
mov
adc
xchg
arpl
and
and
fisubrs
jle
mov
pop
sub
sub
add
sbb
nop
fmuls
out
cmp
call
pop
mov
add
loope
cmp
dec
jmp
iret
dec
test
and
popa
shlb
pop
pop
dec
subl
and
sbb
pop
hlt
lock
fldt
xor
jl
pusha
aaa
cmp
repz
cmpsb
mov
jae
mov
fs
shlb
lods
lcall
leave
ret
nop
lret
ljmp
jbe
scas
mov
inc
test
jns
gs
xchg
cmp
cmpsl
mov
fsubl
jmp
imul
sahf
insb
rcrl
int
leave
fcmovbe
dec
add
or
add
vmovupd
push
or
addr16
and
jmp
cmp
lahf
filds
std
jecxz
jl
cwtl
rorb
aad
sub
jp
out
xchg
mov
mov
into
sbb
repnz
mov
into
add
sbb
ds
mov
out
jge
movsl
ljmp
mov
jl
ret
mov
add
pop
lret
lock
push
jbe
mov
mov
xlat
addr16
push
ds
fs
xor
rorl
insl
cmp
mov
out
lahf
push
cmc
cld
insl
mov
addr16
xchg
jb
mov
in
mov
push
repz
jo
sbb
adc
js
fadds
or
js
movsb
out
mov
xchg
lahf
inc
cmp
mov
dec
bound
mov
xchg
ret
in
sbb
mov
popa
mov
fsubrl
inc
outsb
movsb
sbb
mov
sub
lahf
leave
xor
jle
ds
xchg
mov
add
dec
mov
jnp
pop
repnz
imul
adc
icebp
clc
mov
insb
out
sbb
jmp
popa
std
xor
fsubp
mov
xchg
enter
mov
push
sti
jo
mov
jb
sub
adc
int3
test
adc
jp
mov
cmp
ljmp
xor
fs
je
cwtl
adc
in
push
xchg
neg
outsb
xchg
mov
lods
icebp
arpl
dec
inc
repz
ss
call
mov
fldt
push
loope
inc
mov
pop
lcall
leave
divb
mov
mov
xchg
insb
push
adc
ljmp
jmp
shlb
ret
out
mov
stos
and
mov
or
inc
sti
xchg
mov
mov
repnz
outsb
mov
and
mulb
out
fmuls
mov
in
xchg
mov
popf
test
lcall
add
es
dec
icebp
mov
mov
in
std
mov
xchg
inc
sub
test
dec
push
and
adc
mov
pop
lods
and
mov
mov
fisubs
je
icebp
int
mov
jnp
stc
out
jno
aaa
in
add
jbe
or
dec
cmpsb
outsb
lahf
in
mov
jle
ljmp
pushf
lds
fs
lock
leave
das
sti
clc
iret
mov
push
mov
and
cld
sub
xlat
outsl
cmp
sub
mov
xor
xor
sub
ja
fwait
mov
sahf
add
repnz
fsubrl
ret
cmp
ret
fldcw
sub
mov
ret
shl
push
ljmp
push
or
sub
sub
cmp
adc
xchg
mov
xchg
fs
cli
push
lods
int3
in
cmp
insl
ds
adc
je
in
inc
pop
arpl
mov
jle
sbb
pop
insb
clc
and
sbb
pop
or
sub
mov
jecxz
getsec
or
xor
repnz
push
imulb
jecxz
dec
mov
mov
cmp
rcrb
insb
cwtl
xchg
mov
sub
stos
test
cmp
push
dec
andl
or
and
dec
mov
scas
cmpsl
jo
mov
adc
dec
aas
subl
sarl
xchg
ja
jb
fs
and
cmc
mov
jae
sub
je
mov
mov
push
dec
hlt
fmuls
pop
cmp
mov
movsl
push
repnz
pusha
or
shl
stos
pop
aaa
jb
cmp
cmp
jnp
push
aas
inc
xchg
xor
xorl
rolb
jecxz
out
repnz
ret
lret
add
pop
mov
outsl
mov
loopne
pop
outsb
pop
sahf
jb
sub
or
bts
add
or
test
mov
jp
dec
push
test
rorb
mov
pushf
fistpl
mov
or
inc
jns
stc
xor
add
fisubl
dec
xor
rclb
sub
hlt
cmc
dec
or
sti
adc
pop
ja
xchg
lods
lods
mov
lods
incb
es
lods
lods
test
xor
ret
jno
jg
push
push
cs
mov
jb
js
sub
repnz
shl
testb
sbb
mov
mov
xorl
bound
stc
int3
lds
lods
mov
adc
jo
push
cmpsl
sbb
xchg
ja
adc
shr
or
sub
push
ss
cmp
push
cli
inc
stc
add
adc
in
xor
shll
sbb
xlat
dec
lock
jbe
in
lods
jne
das
pop
andl
mov
aaa
add
sbb
or
sub
push
jg
stos
fmull
imul
dec
sbb
mov
adc
push
sub
enter
mov
xchg
add
dec
mov
or
mov
jecxz
or
aas
aad
lock
add
shr
movsb
cmp
inc
mov
cmp
add
push
cmp
pop
sub
mov
sub
in
and
clc
sbb
lea
lcall
xchg
stos
mov
mov
repnz
adc
dec
pop
int
es
in
and
fists
xchg
jne
mov
jae
jge
xchg
push
arpl
das
jle
pop
inc
call
push
xchg
add
xor
and
xor
inc
stos
pop
add
popf
scas
shll
rcll
xor
adc
dec
and
lds
ret
mov
cmp
test
push
push
rcll
mov
cmpsl
pop
adc
fldl
sub
int3
or
mov
mov
cmpps
jbe
xchg
loop
cmp
dec
loope
dec
lret
cwtl
mov
rol
jne
out
loopne
aad
add
jns
xor
jno
push
lret
movsb
and
xchg
enter
out
xor
push
jne
or
dec
jnp
push
jmp
adc
ret
push
jnp
adc
xor
cltd
cmp
out
xor
jno
insb
sbb
add
sbb
bound
loopne
push
push
or
fbstp
cmp
sub
mov
push
fldenv
es
jmp
xor
pop
inc
aas
xchg
dec
pop
rol
adc
push
sub
inc
imul
xchg
lcall
xchg
mov
jl
lret
pop
or
cwtl
ret
in
sub
dec
jnp
ja
or
leave
push
stc
and
lcall
jecxz
xor
loop
push
leave
add
and
imul
sbb
jns
pop
rolb
imul
jecxz
pop
mov
and
std
lahf
aaa
arpl
in
sub
les
or
inc
xor
inc
xor
test
lahf
sti
xlat
dec
jecxz
outsl
lods
pop
sbb
jo
sbbl
dec
add
push
out
es
cmp
cmpl
lcall
pop
jae
movsb
inc
out
mov
divb
je
cmp
movsl
sbb
and
xorl
sub
aaa
and
fidivrs
iret
movsb
stos
loope
mov
lret
movsl
xor
out
mov
loop
xor
dec
cmp
mov
cmpsb
mov
je
sarb
dec
sub
mov
lcall
daa
fchs
sbb
out
repz
cmp
jae
imull
stos
sub
dec
sbb
stc
xor
add
xchg
push
cli
loop
pop
lcall
jmp
out
dec
jmp
jbe
mov
mov
stos
push
xor
mov
pop
xchg
push
mov
add
sub
popa
pop
and
dec
xchg
sub
add
push
jne
test
aaa
xchg
js
dec
rolb
mov
xorl
pushf
jb
mov
divb
pop
ja
dec
scas
lock
mov
mov
out
jnp
add
mov
jb
jnp
jne
sub
sbb
dec
das
adc
cmp
pop
out
ja
stc
jno
add
mov
stc
fldl
or
sbb
jb
add
loopne
sti
inc
shlb
inc
adc
stos
mov
pop
ret
sbb
ds
mov
andl
fadds
push
xchg
cmp
ret
inc
and
insl
movsl
dec
ret
xor
into
cld
cmc
inc
int3
cmpsl
test
ret
jns
stc
dec
xchg
roll
jmp
jbe
shl
adc
pop
cltd
sahf
mov
xchg
cltd
pop
packssdw
sbb
fimuls
je
fnstcw
nop
and
test
stos
pop
add
enter
in
fcmovnbe
fadds
or
fistpll
imul
inc
sub
dec
sub
mov
jge
adc
dec
adc
xchg
dec
dec
pop
ljmp
mov
mov
jp
adc
push
lock
lcall
es
xor
pop
lcall
lret
cld
clc
adc
dec
out
imul
ss
mov
sub
or
push
inc
push
mov
stos
stos
jbe
cmc
jge
xor
inc
pop
std
mov
push
adc
lret
imul
xchg
adc
cmp
jmp
leave
jae
jns
stos
rclb
xchg
cmp
or
jo
fwait
push
sub
lea
or
cmp
push
pop
xchg
out
mov
mov
jne
lods
pop
mov
inc
out
fsubp
and
gs
inc
cmc
push
inc
out
inc
lahf
and
sub
out
xor
test
imul
sarl
roll
adc
shll
push
loope
daa
jmp
or
pop
cmp
dec
into
push
lods
mov
push
add
aam
inc
in
scas
rol
or
sbb
ljmp
xchg
and
mov
addr16
fadd
mov
sub
outsl
cli
and
popl
adc
or
mov
int
and
lahf
mov
jg
sbb
aad
ja
mov
mov
fdiv
inc
fs
jge
mov
mov
pusha
inc
in
cltd
jecxz
orb
lods
mov
lcall
cld
in
xabort
xor
mov
pop
pop
mov
push
jo
push
cltd
aam
out
or
ja
in
dec
aaa
inc
and
aaa
insb
shrb
dec
jo
mov
xor
pop
lods
adc
push
and
cmp
mov
arpl
popa
leave
test
imul
mov
mov
xor
push
outsb
repz
jbe
in
mov
pop
es
leave
out
mov
push
icebp
test
jne
pop
mov
xor
or
mov
or
sahf
mov
jg
movb
ret
push
jb
mov
cli
add
es
xor
sahf
in
lret
pop
dec
test
inc
or
mov
adc
sub
adc
push
and
fwait
rcrb
push
cmc
inc
push
sub
sbb
in
testb
mov
or
pop
pop
add
xor
jg
loope
out
xchg
inc
cmp
push
inc
sub
mov
les
cwtl
inc
sbb
and
pop
pop
into
nop
xorl
xlat
sti
push
mov
stc
fstl
dec
xchg
leave
mov
aaa
and
sbb
mov
mov
insb
jp
dec
ljmp
and
jb
mov
sti
mov
fldenv
jmp
je
mov
pop
fxch
cs
and
sbb
pop
idivl
fs
gs
int
add
adc
and
into
pop
pop
inc
push
mov
stos
add
inc
sub
dec
xchg
jle
test
push
dec
pushf
xor
dec
vfrczss
dec
je
imul
add
popa
das
stos
dec
arpl
pop
movsl
fcoms
enter
imul
adc
ret
iret
mov
into
push
and
cmpb
mov
loope
test
lret
jmp
flds
lock
repz
add
pop
mov
inc
outsb
imul
lock
inc
push
iret
inc
aad
xlat
dec
imul
stos
ret
ss
mov
xchg
sbb
das
imul
jne
xchg
test
inc
cmpsb
popf
mov
mov
xchg
loop
scas
sahf
aad
into
xchg
lock
cmpsl
pop
das
mov
push
adc
vandnps
in
mov
movsb
cmpsb
clc
mov
fdivl
add
push
push
lods
enter
sub
jbe
pop
xor
cltd
outsb
mov
enter
std
push
mov
jle
std
nop
dec
out
add
push
fwait
bound
adc
stos
jae
insl
clc
push
sub
scas
loope
scas
or
adc
cmp
pop
add
pop
xor
inc
cmp
addr16
dec
and
stc
jl
sbb
aad
fildl
mov
adc
dec
xchg
mov
and
sbb
cli
xor
sub
and
popa
inc
testl
and
and
push
test
lock
push
in
add
mov
dec
les
cmp
in
push
movsl
fwait
sbb
popa
jecxz
shr
pusha
das
pop
pusha
movsl
fs
push
sbb
xchg
clc
xor
add
in
push
push
push
pop
lahf
inc
outsl
cwtl
aam
mov
lea
dec
pop
std
adc
adc
mov
out
notb
jno
mov
pusha
xchg
mov
std
pop
adc
add
xlat
push
daa
pop
push
fwait
lret
pop
ret
push
mov
lcall
jle
lcall
iret
insl
mov
push
cmpsb
dec
jbe
leave
rcrb
jl
inc
ljmp
lret
ja
and
enter
negl
sbb
movsb
cli
adc
aaa
test
stos
sbb
sub
and
inc
fs
lds
daa
sbb
gs
mov
jge
push
add
pop
pop
mov
stos
sti
jp
je
mov
adc
and
imul
or
aaa
pop
mov
divl
dec
pop
mov
lahf
bound
dec
ss
or
inc
in
xor
adc
mov
out
mov
mov
into
or
outsb
out
js
mov
push
or
pop
loop
sub
popf
cmp
in
mov
mov
mul
jge
sbb
aas
aas
lcall
ret
mov
in
jnp
jp
test
arpl
xchg
mov
cmp
movsl
lcall
jbe
arpl
add
stos
outsl
sbb
shl
loop
jle
sub
fcmove
divl
jnp
insb
loope
mov
shll
pop
or
add
add
mov
mov
dec
into
sti
or
loop
sub
imul
les
pop
daa
mov
xor
pop
mov
dec
cmp
insb
pop
lds
loope
subb
xchg
fldt
daa
dec
mov
fwait
imul
sbb
mov
mov
test
add
jmp
test
add
add
pop
pop
lods
fldl
and
jnp
dec
sahf
jg
adc
pop
jne
in
into
inc
movsb
aad
rorl
mov
dec
insb
xchg
xchg
js
imul
sub
jbe
mov
lret
push
adc
pop
inc
jae
mov
jns
imul
mov
fcmovu
sbb
imul
mov
dec
aad
insl
jns
mov
dec
icebp
xchg
ret
and
inc
inc
inc
insl
mov
mov
aas
mov
jge
inc
mov
mov
cltd
inc
jg
ret
in
pop
dec
or
inc
into
iret
mov
gs
push
push
jg
into
ljmp
adc
pusha
das
and
shlb
mov
and
ds
jecxz
je
pop
pop
cmp
out
mov
sub
push
pop
js
test
in
push
ljmp
add
ficoml
sarb
mov
repz
fs
jnp
leave
mov
dec
test
mov
cmpsl
mov
xchg
xchg
push
in
push
xor
adc
inc
enter
jne
ja
leave
lock
test
and
jle
mov
in
inc
jno
sbb
sahf
lahf
pop
adc
es
insb
mov
nop
or
inc
in
pop
jecxz
push
scas
push
jle
test
xchg
setge
inc
mov
jge
jne
out
and
stos
sbb
and
cld
xchg
xor
scas
mov
ljmp
dec
xchg
rcl
mov
xor
sub
sbb
jns
pop
xchg
mov
xor
cmpsb
lret
or
pusha
ljmp
lea
xchg
xor
sti
or
shll
jb
sbb
mov
add
push
mov
mov
dec
sar
xchg
aaa
bound
test
lret
ss
and
xor
jecxz
std
imul
lea
pop
pop
insl
push
aas
std
mov
lar
je
jmp
xor
sbb
mov
xor
and
shlb
scas
fidivs
repnz
jno
adc
mov
xor
fcompl
push
lods
push
add
sub
cmc
lgs
cwtl
or
lret
push
test
in
inc
scas
outsl
push
add
fxch
movsl
lods
repnz
dec
int
les
sahf
and
and
sbb
mov
ss
fimull
sub
das
icebp
lods
sbb
xchg
outsb
lret
mov
inc
add
pop
xchg
test
gs
fwait
das
sbb
leave
sub
jecxz
lea
xor
mov
sbbb
scas
mov
add
lret
fs
mov
lcall
add
lret
dec
mov
out
jl
fisubs
repz
or
scas
xchg
sub
push
add
fidivl
mov
jg
push
sbb
mov
or
int3
pop
shlb
mov
cmpsl
lods
push
fs
fsubs
push
ja
and
sbb
loope
jnp
mov
aas
out
jl
mov
push
jl
int
dec
fs
sti
pop
sub
dec
int
cli
cmp
in
jecxz
or
or
dec
ja
es
cmp
sbb
mov
aas
and
sub
outsb
jmp
xor
loopne
outsb
mov
add
call
mov
in
leave
ret
frstor
fisubl
mov
dec
aad
icebp
pop
inc
xlat
sbbb
push
and
pop
mov
lea
aad
push
push
mov
jb,pt
loop
stos
fwait
sarb
push
shr
in
cmp
mov
xchg
lcall
xor
sub
repz
pop
cltd
repnz
jle
cli
xlat
mov
or
jne
inc
sub
or
loopne
xchg
xor
icebp
pop
adc
inc
push
adc
movsl
arpl
idivb
or
mov
mov
sarb
mov
outsb
out
push
ja
and
or
sub
movsl
dec
stc
xchg
adc
push
imul
icebp
xchg
icebp
cwtl
test
lods
mov
insl
mov
jecxz
outsb
pop
adc
inc
push
adc
int
mov
cmp
pop
rorl
iret
shlb
scas
ja
out
add
loopne
out
popf
icebp
rclb
mov
mov
lcall
pop
or
in
sbbl
pop
popa
negl
jns
stos
mov
xchg
cmp
mov
jmp
lea
in
push
push
loopne
dec
or
dec
push
jnp
inc
test
sub
xor
scas
push
popf
fistpl
xor
mov
xor
loop
inc
or
mov
pop
sbb
mov
and
sub
and
jmp
fstp
stos
xlat
and
cld
out
sarb
les
lahf
enter
mov
mov
loope
cmpsb
ud2
mov
add
cmc
stos
roll
ss
shrl
sti
adcb
or
lods
cwtl
sbb
mov
divl
out
mov
bound
imul
std
jno
mov
jbe
xor
outsb
mov
xchg
dec
dec
test
fwait
xor
stos
cmp
sub
cmp
mov
subl
negb
mov
inc
cmp
arpl
sbb
jecxz
rcr
add
pop
add
xor
pop
es
add
nop
addl
repz
fnstcw
iret
out
insl
mov
decl
jmp
dec
mov
push
xchg
mov
cmc
pop
ja
jmp
pop
lahf
pop
push
pop
cmc
push
push
jns
sbbl
mov
dec
mov
clc
cmpsb
or
pop
stc
ret
dec
push
xchg
jb
mov
jl
data16
xchg
fmuls
stos
mov
inc
shlb
inc
xchg
jns
movsl
aas
aad
test
cld
test
adc
iret
cmp
mov
sub
stos
push
nop
or
sub
mov
adc
outsl
mov
scas
mov
mov
ret
mov
pop
cmp
rolb
and
add
inc
rcl
ljmp
mov
mov
mov
inc
mov
out
jae
andl
adc
rorl
lcall
in
shrl
xlat
and
or
fwait
into
lcall
incl
jae
dec
dec
jg
mov
in
jns
fwait
jmp
adc
cs
hlt
or
xchg
pop
scas
scas
in
in
add
ja
push
faddl
mov
xchg
rcll
jl
and
adcb
dec
and
stos
pop
icebp
and
in
inc
and
push
les
ret
xchg
mov
mov
pop
xor
mov
les
xchg
jmp
xor
push
aas
hlt
sbb
addl
xchg
ret
mov
push
dec
inc
xchg
pop
xor
mov
shll
lock
imul
push
shlb
inc
rclb
cmp
dec
sti
jo
outsl
ficoml
mov
popa
or
or
ficomps
nop
fisttps
mov
push
sbb
les
clc
rcrb
jno
insb
insl
push
repz
fldcw
mov
clc
sbb
lods
mov
test
pop
adc
xlat
add
xor
ja
lods
scas
shll
iret
aaa
sub
cvtps2pi
sub
and
lods
leave
and
lret
fcmove
mov
movsl
and
ja
scas
mov
fld
aaa
fs
out
jns
idivb
add
sti
and
incb
pop
mov
inc
in
ficoml
or
adc
fistpl
xor
out
add
and
test
mov
sub
sbb
leave
fimull
mov
push
cmpsl
push
mov
mov
in
dec
or
mov
push
jp
data16
lods
sub
mov
xor
fcoms
mov
sbb
and
adc
lds
adc
pusha
imul
cmpsb
push
cld
imul
mov
xchg
xlat
lahf
cmp
xor
nop
lds
pop
clc
daa
in
dec
mov
cli
sub
mov
lret
inc
rclb
out
movsl
jmp
dec
rclb
dec
sbb
fs
mov
add
sub
js
movsl
jge
cmp
jle
loop
sub
fs
dec
mov
pusha
xor
lret
nop
mov
dec
dec
inc
in
or
jp
mov
mov
inc
insl
xchg
and
hlt
jns
mov
out
pop
ljmp
cs
or
ds
lea
rcrl
out
leave
pop
push
shll
adc
cmpsb
dec
sub
and
adc
push
jmp
xchg
dec
fs
fisubrl
aaa
stos
push
mov
push
enter
lods
popf
jbe
pop
pop
into
push
mov
xchg
inc
push
stos
xor
cmp
dec
sbb
into
mov
inc
lret
jo
ss
adc
jns
shr
jg
push
mov
hlt
stos
dec
lods
iret
int3
add
fsubrs
sahf
cltd
cmpsb
insb
mov
sub
mov
jp
sbb
inc
dec
mov
jno
int
or
lods
mov
and
sub
push
and
adc
add
add
add
dec
xor
sbb
push
int3
lcall
scas
in
cltd
or
mov
shlb
pop
int
daa
pop
push
add
lret
cmp
push
pop
cmp
lock
adc
aad
movsb
lock
mov
cmpsb
pop
sarb
popf
and
mov
push
mov
jmp
bound
xlat
mov
lea
or
test
int
xor
xor
ret
imul
push
lcall
fsubl
lods
lret
mov
push
xchg
add
pop
in
lahf
ror
inc
loopne
pop
xlat
dec
push
addl
data16
pop
mov
pop
int
pusha
mov
ret
scas
add
push
jae
icebp
jne
dec
icebp
mov
pop
lret
filds
cli
xor
and
sti
pop
adc
xor
jmp
sub
push
mov
add
add
hlt
and
inc
xor
xor
insl
jns
and
nop
mov
mov
dec
out
xchg
xor
in
mov
inc
push
and
lods
sbb
xchg
pop
push
lahf
mov
xchg
jns
sarb
rol
sbb
pop
push
push
inc
in
push
and
inc
dec
cmc
xor
lds
shl
lret
adc
stos
mov
dec
mov
xchg
push
push
pop
movsl
xchg
jbe
cmp
negb
dec
and
repz
movsb
movl
mov
jp
icebp
rorl
aaa
push
adc
jo
dec
inc
add
mov
in
mov
out
test
leave
out
mov
je
cmp
or
call
push
ja
ja
mov
jns
mov
testb
mov
js
repnz
push
in
notl
push
or
lock
push
shr
xor
and
cli
outsb
fidivrl
jnp
mov
in
rolb
push
xor
rclb
xchg
jae
ja
xchg
lods
insl
lret
mov
in
add
push
add
cs
mov
mov
add
mov
jno
bound
push
je
movsb
shlb
or
in
xchg
adc
das
mov
cmp
xlat
cmp
arpl
mov
lods
xchg
push
stos
push
call
or
pop
push
inc
mov
xchg
mov
fwait
iret
popf
outsb
roll
xchg
popl
ljmp
imul
mov
pushf
sbb
dec
ror
mov
out
sub
push
jecxz
mov
sti
sub
pop
movsl
mov
in
ret
pop
jmp
dec
sub
or
in
push
test
cmp
sahf
ljmp
jg
aad
pushf
push
insl
xchg
in
and
mov
push
xor
and
sbb
fs
jl
shl
jle
xchg
inc
sub
pop
loop
xchg
lahf
sub
imul
aad
pop
addl
int3
adc
cmp
fisttpl
int3
stos
daa
add
bound
data16
mov
call
jb
inc
cmp
aaa
sarb
dec
insb
fwait
cli
popa
imul
mov
out
cli
mov
jns
mov
xor
mov
cwtl
push
enter
nop
int3
data16
sbb
mov
rcll
fisubrl
dec
cmp
inc
pop
movsl
fidivl
sbb
rol
push
faddp
icebp
xlat
push
shrb
icebp
subl
mov
inc
addr16
mov
addr16
out
outsl
ss
cmpsb
pop
dec
lea
mov
aas
mov
out
das
mov
mov
stos
in
lods
insb
mov
mov
movsb
mov
add
cmp
jae
mov
repz
xor
rol
adc
or
pop
repnz
push
iret
aas
add
or
icebp
xchg
sub
test
mov
inc
cmove
jo
jno
and
cmc
cmpsl
in
mov
fucomp
mov
lods
inc
push
xchg
iret
out
mov
mov
sbb
xchg
movsl
cmpsb
das
gs
cmp
xchg
adc
jno
in
loope
cmp
out
push
outsl
xchg
sub
pop
dec
push
push
cld
pop
pop
adc
adc
mov
add
hlt
sbbb
sub
jns
mov
or
push
adcl
pop
dec
repnz
cwtl
pop
inc
jo
lods
adc
ror
push
jb
mov
mov
xchg
pop
xorl
mov
sbb
xchg
mov
mov
adc
push
pusha
adc
and
xchg
mov
add
pop
inc
xor
pop
repnz
loop
mov
jne
daa
mul
sbb
adc
add
pop
lret
aas
mov
cmp
mov
push
mov
fisubrs
xchg
sub
cs
xchg
mov
divl
pop
data16
iret
mov
std
push
adc
pusha
add
scas
mov
gs
andb
cmp
fwait
inc
insb
xor
dec
xor
cmc
stc
cmpsl
insl
jns
sub
out
sbb
mov
mov
insl
jmp
adc
push
in
dec
add
push
pop
je
test
movl
mov
xor
aam
pushl
outsb
fldcw
inc
inc
inc
push
jns
adc
pop
shlb
sahf
inc
pop
adc
push
jnp
popa
mov
fmull
push
imul
ss
push
mov
outsl
or
daa
imul
sbb
mov
jge
adc
xor
jmp
pop
xchg
lcall
insl
loope
sahf
push
ret
dec
pop
imul
testb
loopne
out
gs
ds
jecxz
cmpsl
adc
test
test
jo
mov
vpsllq
leave
dec
lcall
fisubs
lods
fbstp
push
pop
into
cmp
or
xor
sbb
pop
dec
xor
pop
aas
call
push
and
jge
fidivs
sbb
cmp
subl
aas
pop
dec
ljmp
loope
insb
mov
push
sub
stos
mov
adc
dec
shlb
pop
lahf
cs
inc
adcl
or
jl
repz
mov
mov
scas
ds
cmp
adc
push
fdivrl
pushf
orb
clc
or
sub
aas
sbb
mov
jns
jnp
nop
test
fsts
pop
pop
jle
lds
mov
fwait
imul
dec
lea
xor
loope
mov
jle
daa
xchg
push
arpl
icebp
loope
loopne
mov
dec
mov
dec
xor
fstp
add
and
std
adc
cmpl
decl
add
lahf
jp
sarl
scas
test
pop
fmuls
lret
sbb
fnstcw
cmp
push
mov
mov
js
popa
les
mov
push
push
and
lcall
pop
mov
setb
outsb
outsb
sti
fwait
xlat
or
icebp
adc
out
jae
pop
in
es
mov
scas
xchg
add
xchg
sub
inc
les
mov
pop
std
movb
sti
mov
sbb
rol
inc
mov
lock
pop
mov
xchg
dec
pop
xor
sbb
lret
jle
lock
aaa
fnstcw
pop
dec
mov
movsb
and
inc
sub
sbb
in
iret
hlt
xchg
and
es
frstor
pop
dec
sub
inc
dec
push
cmp
jae
push
xchg
mov
jge
fcmovnb
or
adc
adc
xchg
push
adc
or
and
cmp
jne
mov
movsl
call
pop
mov
and
push
sub
and
stc
jle
ror
add
add
add
testl
mov
data16
xor
shll
jo
outsb
es
icebp
inc
fs
add
clc
adc
dec
xor
imul
lret
ret
jae
pop
cmp
pushf
mov
movsl
and
cwtl
xchg
sti
enter
dec
movl
xchg
adc
cli
cmp
add
bound
xor
mov
rcl
orl
pop
aam
dec
jnp
jo
jle
out
and
pop
push
ds
dec
test
add
adc
add
ficomps
fimuls
pop
stos
jo
lea
jb
jbe
push
js
xchg
mov
or
in
add
adc
orb
sahf
push
stos
call
cmpsb
mov
or
sub
test
clc
enter
push
xchg
adc
sti
dec
dec
imul
xor
icebp
lds
iret
inc
imul
xchg
iret
dec
push
adc
mov
cmpsl
int3
loopne
les
fstpt
or
push
fs
movsl
pop
mov
mov
jae
ja
cmc
sti
ljmp
mov
sbb
or
xchg
mov
mov
push
inc
fldcw
pop
je
sbb
cmp
addr16
add
ss
cli
push
adc
xor
and
push
cmp
loopne
jne
jp
mov
push
mov
in
or
inc
aas
dec
imul
fdivl
and
dec
mov
inc
mov
xor
push
mov
push
or
shl
lea
xchg
lcall
cmp
or
or
pushf
push
inc
adc
inc
push
add
cltd
frstor
ljmp
mov
movsb
xchg
idivl
mov
lahf
and
movsb
inc
ss
repz
xchg
clc
push
icebp
lock
out
inc
adc
jae
outsl
shlb
mov
add
cmpsl
adc
lds
int3
xchg
in
lods
cmp
pop
and
cmpsl
xchg
imul
insl
dec
arpl
xchg
or
add
mov
in
jg
call
mov
ds
hlt
test
xchg
fidivrs
push
inc
cmpsl
fstpt
ljmp
imul
xchg
cmp
cmp
cmovs
xchg
pop
icebp
mov
cmp
fistpll
fstpt
lret
test
inc
lock
lret
dec
imul
cmp
dec
insl
jno
and
rclb
or
mov
dec
push
movsb
xchg
xchg
add
add
fs
leave
lcall
add
inc
sahf
pop
mov
add
daa
push
dec
jecxz
mov
roll
cli
shl
push
xor
jb
jecxz
inc
push
jnp
adc
mov
addr16
cmp
xor
stc
call
das
dec
pop
insl
enter
out
shll
inc
mov
lock
mov
lcall
js
insb
dec
movsb
jo
mov
push
ja
lret
jmp
mov
nop
hlt
xchg
jl
jb
fimull
mov
fcompl
push
test
and
aad
cmp
pop
jge
and
rorb
pop
push
mov
popa
xor
jg
stos
jno
mov
push
out
mov
pop
fldln2
mov
movsl
test
movsb
or
repnz
cmp
sbb
and
outsl
fdivs
inc
out
rol
aam
pusha
imul
mov
mov
mov
mov
xchg
ja
lcall
je
test
sbbw
mov
scas
inc
ss
ss
das
dec
mov
fbstp
mov
add
fcmovnbe
test
into
mov
and
cmp
scas
cli
mov
push
xor
imul
sub
imul
xor
adc
aam
jb
pop
dec
push
mov
aad
cmp
adc
test
packsswb
dec
cli
test
mov
or
push
daa
std
pop
pop
mov
mov
inc
sbb
mov
and
pop
add
mov
bt
mov
ds
addl
jge
cs
test
mov
inc
add
inc
pop
pop
jecxz
lcall
adc
dec
outsb
clc
imul
std
mov
ljmp
aad
dec
ja
scas
stc
mov
pop
pop
out
cmp
les
inc
loope
scas
xchg
addr16
mov
lods
xchg
pop
stos
xor
lcall
add
cltd
inc
jb
cmp
push
push
rcrl
stos
pop
inc
decl
xor
loopne
sarl
mov
mov
push
mov
and
or
jecxz
push
pop
push
jno
mov
push
xchg
push
insl
mov
jl
xorl
cs
call
mov
jae
stos
jbe
andb
lcall
jne
andb
test
loopne
dec
xchg
jb
xor
repz
outsl
addb
test
out
mov
sbb
inc
dec
std
leave
jbe
subl
repz
incl
cmp
shrl
aaa
and
scas
or
and
stc
std
jl
jmp
pop
insb
xor
xchg
pop
and
int
outsb
js
xchg
sbb
stc
jge
aad
xor
or
cmc
jns
adc
in
push
in
mov
outsl
rep
jl
push
sbb
pop
cmc
push
pop
shll
push
lcall
jno
push
xor
cmpsb
in
filds
shll
leave
xchg
sub
pusha
jns
add
rorb
das
and
lea
cmp
mov
in
aam
les
xor
xchg
nop
xlat
mov
mov
jne
sbb
iret
adc
xlat
das
xor
xchg
adc
shrb
cli
call
mov
inc
rclb
or
add
jnp
xor
sti
dec
adc
ljmp
push
push
pop
xchg
sahf
inc
dec
lcall
das
xchg
mov
inc
jno
mov
add
es
out
mov
fxch
insl
sbb
aaa
fcmovu
pop
lret
fisttps
push
ja
jb
divb
mov
outsl
jecxz
or
xchg
inc
call
mov
inc
rcll
loope
mov
pop
je
hlt
jbe
inc
addb
in
outsb
fistpll
aas
in
sbb
addr16
aad
dec
pop
out
xchg
shlb
xchg
pop
inc
pop
and
adc
cltd
icebp
aaa
mov
leave
jb
sahf
mov
xchg
das
xchg
loopne
out
inc
popa
mov
mov
lea
adc
lods
popf
jnp
int
xchg
cs
cmp
ficompl
or
lea
incl
fs
insb
loop
add
pop
clc
or
mov
aam
mov
inc
sbb
add
leave
inc
mov
pop
fwait
mov
adc
cmpsl
push
adc
es
test
xlat
xlat
sbb
mov
xchg
cmc
ds
pusha
push
nopl
xchg
push
jl
sub
jl
ss
xchg
fdivs
gs
aad
inc
jno
lret
xchg
adc
mov
or
test
es
cmp
js
adc
add
cmc
test
js
loopne
lods
mov
lea
cli
push
rclb
cld
jecxz
mov
fildl
push
jp
and
push
ficoms
test
ljmp
jle
mov
cmpsb
ja
xor
in
sub
add
mov
mov
sbb
mov
jge
pop
mov
fcmovnu
adc
out
in
hlt
or
push
cwtl
js
xorb
inc
sub
sub
popa
cwtl
out
dec
arpl
push
pop
push
ss
xchg
and
lods
cmp
and
rcl
stc
mov
jb
outsl
jo
push
mov
cmp
add
clc
cmp
pop
push
xor
mov
cmpsl
stos
pop
sub
mov
mov
jb
cwtl
cmp
adc
push
cmp
push
js
call
iret
cmp
mov
jge
das
sub
insb
inc
call
mov
mov
or
or
stc
push
mov
jb
cltd
sub
popf
mov
popw
cmovle
mov
idivl
pusha
es
dec
repz
or
xor
scas
adc
push
adc
loop
inc
out
xor
or
mov
or
mov
mov
lret
dec
sbb
xor
stos
inc
leave
shrb
cmpsl
pushf
push
les
sti
mov
pop
jmp
aaa
sub
fsubrp
pop
mov
leave
ja
or
jl
xor
lahf
bound
mov
inc
ja
xor
mov
aam
pop
mov
add
aas
sbb
stos
fmull
sahf
mov
clc
xchg
adc
aad
sahf
mov
pmulhuw
mov
test
faddl
adc
ja
mov
push
test
cmp
cmp
movsl
or
pop
addr16
pop
sbb
movb
lds
fists
or
sbb
cwtl
push
jmp
sbb
out
xchg
mov
stos
inc
mov
mov
inc
js
lods
imul
hlt
data16
das
sub
add
jecxz
xchg
cmp
push
jbe
test
push
fidivrl
lds
sbb
xor
lea
mov
outsb
sbb
inc
cmp
sar
dec
xor
insl
pop
scas
pop
xchg
xchg
dec
xor
dec
aam
fildl
or
sbb
lds
cmp
shll
insb
mov
popl
sbbb
jecxz
lods
mov
ss
lahf
stos
cmp
ror
pop
jle
mov
xchg
div
cwtl
jno
popa
insb
pushl
mov
sub
mov
outsb
es
inc
cmp
insb
aad
test
and
imul
sbb
sub
ja
push
add
pop
dec
stc
sbb
fstps
or
test
lods
iret
xchg
jle
adc
pop
inc
cmpsb
pop
xchg
xchg
cwtl
sub
xor
fxch
jp
pop
imul
sbb
inc
xor
mov
lahf
cmpsb
and
dec
out
and
cmp
lret
lock
cmc
jmp
lea
mov
test
pushf
sbb
push
popa
push
inc
hlt
lret
repnz
sarb
lcall
sbb
add
pop
andb
lods
enter
push
stc
scas
lret
add
repnz
fiaddl
jmp
rolb
sahf
cmp
mov
and
add
dec
lds
incl
cmp
ret
scas
sarl
mov
sub
xchg
mov
insb
add
int
out
lds
cld
dec
test
mov
call
ret
xor
dec
fs
inc
cmpsl
or
sub
hlt
jmp
sbb
int
jecxz
pop
loop
or
popf
add
stc
fs
jne
sub
push
add
stos
test
cmpsl
pop
ja
jg
popa
jge
dec
xor
mov
roll
insb
mov
cli
or
cmp
lea
sbb
jo
in
push
fdivl
cmpsb
mov
outsb
mov
repnz
mov
stc
push
mov
pop
mov
mov
test
mov
adc
sahf
push
mov
push
pop
clc
or
sub
scas
sbb
push
andl
pop
in
xor
jmp
pop
repnz
push
and
pusha
stos
mov
aas
mov
test
je
cmp
fcompl
gs
push
sub
outsb
addl
lret
cwtl
mov
add
xchg
mov
loop
xchg
mov
xchg
dec
fwait
mov
es
inc
cmpsl
lock
mov
sbb
jnp
xchg
imul
int3
mov
sub
adc
ret
outsl
mov
xchg
ret
cmp
mov
test
and
push
mov
pop
push
xchg
inc
or
add
mov
mov
jle
outsl
mov
cmp
inc
cmp
rol
icebp
dec
push
fs
pop
popa
mov
gs
dec
cmp
aam
jecxz
test
add
lods
fnstcw
push
andb
mov
fidivl
imul
leave
aas
or
hlt
int
push
stc
das
and
push
sub
rcl
xor
arpl
mov
dec
fs
daa
jmp
rolb
outsl
outsl
fmuls
rcll
ljmp
mov
pop
imul
sbb
popf
xor
cmp
push
inc
or
pusha
repz
xor
pop
cmpsl
sbb
subb
sbb
push
ds
enter
loope
pop
loope
add
cmpsb
xchg
xchg
mov
lods
leave
add
fists
stos
lahf
ja
ss
fidivrl
dec
lcall
cmp
jl
and
dec
out
add
rcrb
xchg
adc
jg
xchg
out
je
addb
int
dec
insl
xor
pop
mov
xor
lret
add
mov
xor
int
sub
scas
and
cmp
xchg
shl
fistl
mov
pop
test
sub
sbb
push
xor
jl
jmp
sub
or
and
mov
mov
mov
icebp
sub
xor
out
xor
das
cmp
jl
insl
push
mov
leave
push
into
arpl
lods
int
out
pop
sub
repz
push
int
jnp
je
mov
ret
shl
out
inc
inc
xchg
cmp
stos
mov
fldt
push
push
xchg
int
aad
and
push
dec
push
sbb
ret
xchg
fsubr
scas
pop
push
mov
inc
jb
pop
push
push
pop
das
xchg
lea
dec
or
push
cwtl
cmp
inc
sub
cmpsl
in
ljmp
inc
loope
cli
mov
aam
scas
cltd
scas
inc
test
leave
aas
out
or
mov
cli
pop
adc
mov
cmpsl
outsl
testl
xor
sbb
add
lret
or
cli
stos
jmp
mov
push
pop
lea
daa
ss
icebp
mov
es
mov
sbb
aad
je
sub
dec
orb
jle
scas
das
pop
inc
jp
mov
js
add
jmp
push
mov
or
push
scas
adc
out
jns
insl
dec
push
repz
in
incl
adc
das
xor
pop
fcomps
sbb
out
xor
xor
je
scas
jge
jb
mov
out
xchg
scas
stos
clc
xchg
das
stos
sub
cmp
add
pop
rolb
or
inc
mov
lret
or
sbb
jmp
add
cmc
push
adc
cmpsb
xor
icebp
rcl
out
xor
and
insb
rolb
jle
pop
fcompl
sbb
mov
sub
mov
and
aaa
dec
test
inc
sbb
fwait
inc
int
push
lock
pop
stc
add
inc
mov
sbb
mov
fnstenv
xchg
cli
pop
and
push
icebp
sbbl
pusha
dec
fisubs
loop
or
adc
or
push
xorl
aam
mov
pop
mov
adc
inc
jb
mov
add
push
adcb
loopne
mov
mov
imul
add
in
pusha
jns
cmp
sub
in
push
outsl
lea
in
sub
jbe
xchg
dec
pop
jae
aam
hlt
ljmp
jb
mov
xchg
addr16
mov
mov
jae
jnp
jo
sbb
cmpsl
dec
or
lret
int
bound
arpl
push
dec
sbb
push
push
sbb
sbb
or
lds
addr16
jae
sbb
data16
shr
add
inc
jle
lret
xor
jmp
cmp
mov
add
cmp
mov
hlt
mov
je
mov
mov
and
pop
xlat
ficoms
mov
cmp
sbb
repz
mov
fisttpl
loop
push
or
pop
mov
adc
mov
mov
xor
js
icebp
out
inc
cmp
pushl
inc
or
sub
dec
adc
xchg
and
mov
mov
lret
push
sub
insb
and
sub
add
movsb
mov
dec
sub
fldl
bound
lea
flds
hlt
loope
mov
cmpsl
or
mov
leave
dec
inc
pushw
in
lahf
lods
test
fs
jne
push
hlt
jmp
movsl
cmpsb
icebp
insl
lret
mov
sub
aas
lea
xor
flds
jbe
dec
mov
push
js
inc
insb
nop
sahf
xchg
pop
or
mov
and
jns
popf
gs
mov
jo
push
scas
sub
mov
shlb
fdivr
shlb
sub
xor
push
negb
stos
mov
icebp
jbe
xor
add
push
jge
cmc
sub
push
inc
jmp
shrl
sarb
in
in
mov
outsb
sarb
icebp
xor
cmpsl
inc
ret
rolb
jnp
popl
scas
or
hlt
push
aaa
jge
shll
jnp
jmp
std
sbb
pop
dec
jmp
ret
call
xlat
sub
pop
je
fwait
mov
cmp
scas
pop
movsb
jge
adc
mov
in
iret
hlt
mov
testb
pushf
pusha
mov
or
jnp
testb
add
or
add
mov
outsb
push
cld
ret
in
lahf
sbb
lock
or
dec
pop
mov
xchg
cmp
xchg
lcall
xchg
mov
xor
xorb
repnz
adc
or
sub
shrl
or
push
or
loopne
cmp
mov
les
aad
fstl
sbb
jmp
test
push
sub
dec
cmc
pop
pop
call
int
pop
adc
fwait
lret
inc
pmuludq
or
mov
movsb
push
cltd
fld1
jne
adc
xchg
sub
pop
packsswb
dec
adcl
addr16
mov
or
xchg
fdivl
mov
in
lret
adc
shl
push
pop
test
in
adc
ds
sub
mov
cmp
inc
lods
enter
cmp
stos
sbb
inc
shll
push
mov
cmp
es
mov
xorb
ss
iret
loop
push
ret
xchg
fisubrl
shll
cld
pop
addr16
nop
sti
sahf
cmp
jmp
pop
adc
inc
leave
mov
loope
test
mov
fwait
rorl
loop
xchg
call
xchg
orb
ret
ljmp
cmp
and
les
out
push
pushf
fwait
in
out
out
insl
adc
adc
add
out
sbb
adc
jle
xchg
arpl
jp
popa
dec
push
mov
aas
into
lret
in
inc
mov
cmp
fdivs
xchg
and
mov
or
int3
xchg
repz
fs
dec
in
cmpsl
pop
xchg
les
lods
adc
mov
addl
mov
stc
outsb
insb
xlat
dec
andl
adcl
fnstsw
jne
ljmp
cmp
mov
cld
xor
jbe
push
addb
xchg
sub
loope
pop
sbb
jl
or
and
notb
movl
jne
jg
mov
sub
stos
test
jle
mov
mov
dec
movsl
subl
lds
mov
std
mov
cmpsb
in
push
paddq
mov
int
fldl
ret
in
inc
andl
add
mov
popf
xor
aam
shll
bnd
xchg
addr16
iret
jl
repz
and
testl
dec
pop
popa
test
fstpt
push
mov
inc
fs
mov
cwtl
and
ljmp
dec
adc
add
and
sub
add
jl
mov
inc
mov
cmp
inc
ss
out
jg
mov
cmp
shll
pop
jle
scas
pop
xchg
adc
xchg
sbb
ret
pusha
sbb
xlat
and
shlb
loopne
pop
mov
push
sti
mov
out
insl
inc
adc
movsl
cmc
rcrb
in
leave
popa
pop
sub
arpl
mov
idiv
aaa
mov
cltd
mov
dec
in
inc
je
pop
push
jle
cs
outsl
cmp
and
push
mov
divl
push
inc
xchg
cltd
je
sarl
or
roll
lock
imul
xchg
inc
stos
and
out
pusha
test
cmp
loop
fsub
push
fisubl
mull
pop
xchg
jbe
mov
leave
and
cli
iret
and
mov
std
inc
mov
add
sbb
aam
xchg
mov
jp
sbb
aas
or
lea
jno
data16
fdivrs
lock
jle
dec
mov
xchg
pushf
sbb
sbb
xchg
andl
dec
push
not
cmp
popa
bound
sbb
or
clc
hlt
jne
mov
movsl
and
repz
sbb
inc
repz
inc
enter
dec
test
outsl
cmc
dec
insb
loop
fs
fsubr
repz
sbb
sbb
scas
jl
or
push
imul
mov
jp
dec
fsubl
and
cmp
inc
inc
inc
scas
test
aaa
int
test
mov
mov
xor
push
sbb
mov
jl
xor
aam
mov
mov
or
jmp
pop
or
negl
add
sbb
iret
out
cmp
sbb
mov
and
cmp
shrb
xlat
lea
int
or
call
les
mov
pop
inc
inc
pop
mov
ljmp
xchg
and
inc
mov
test
xchg
shl
shrb
mov
fnsave
popf
inc
pop
pusha
or
cmp
jne
push
adc
call
sbb
push
sbb
xor
push
adc
cmp
fistps
stos
mov
jg
ljmp
fmull
adc
xlat
int3
mov
dec
clc
insb
das
pop
sbb
dec
add
sbb
dec
push
xor
xor
push
enter
sti
xor
or
push
addb
xchg
sbb
rcrb
clc
test
das
shlb
push
arpl
xorl
pop
mov
jb
or
push
jmp
mov
cmpb
mov
rcrl
pop
mov
mov
scas
test
jo
outsb
jle
add
leave
add
bound
add
outsl
es
fwait
xor
lret
cltd
bound
dec
cmp
mov
sub
ljmp
test
mov
mov
mov
inc
rcrl
repnz
lock
mov
ljmp
adc
or
cmpsb
cli
push
fwait
bound
pop
pop
cmpsb
mov
sti
push
enter
fmuls
jb
repz
xor
sbb
loope
scas
xor
test
nop
push
xchg
hlt
jmp
out
sub
cmp
xchg
and
in
inc
dec
ror
int3
push
ficomps
pop
in
sbb
mov
inc
nop
mov
sarb
mov
int
sbbl
or
xchg
jge
adc
sbb
int
imul
mov
push
and
repnz
xorl
jne
jg
pop
pop
mov
decb
bound
movsl
add
mov
fsubrl
loope
mov
xchg
xchg
jmp
mov
xlat
rcll
ficoms
push
fiadds
mov
or
push
adc
cmovle
ret
jmp
aaa
jmp
xchg
xchg
mov
cmp
jecxz
out
cld
mov
mov
lret
sbb
push
daa
sbb
mov
jnp
inc
sbb
mov
clc
movsb
fiadds
and
bound
fdivr
xchg
fistpl
jl
gs
or
mov
inc
xchg
or
imul
test
sub
inc
lret
pop
mov
jmp
arpl
inc
pop
pop
push
ret
mov
or
xor
and
push
adc
mov
or
das
cmc
xor
or
add
adc
cmc
cmc
cwtl
fs
std
mov
in
pop
aas
jae
ret
xor
xchg
inc
xor
pop
xor
popa
clc
xorl
in
aas
popa
in
stos
popa
adc
mov
fdiv
out
pop
jbe
jmp
lock
push
rorb
nop
mov
inc
inc
jae
out
std
pusha
scas
insl
lcall
icebp
inc
mov
push
repz
jno
inc
popf
pop
adc
inc
int
inc
fisubl
mov
or
cmpsl
add
cmp
mov
jmp
out
pop
in
aas
dec
xchg
call
push
pop
rclb
xor
js
addr16
lods
test
in
scas
sti
enter
repz
xor
js
repnz
insl
jno
or
sbb
fs
pushf
fisttps
cmpb
dec
push
inc
mov
pop
repz
pushw
int
or
arpl
xchg
xchg
and
mov
inc
ret
fcmovb
inc
repnz
push
jecxz
mov
cld
jbe
mov
loope
pop
in
push
dec
push
inc
insb
dec
into
adcb
xchg
mov
mov
scas
and
xchg
sub
and
pop
aaa
mov
dec
repnz
pop
and
jns
sub
mov
outsb
mov
or
mov
std
pop
cmp
jne
sub
fsub
pop
vmread
push
xor
mov
xor
loopne
mov
inc
xchg
lcall
dec
pop
aaa
mov
adc
jns
cld
mov
cltd
mov
into
xchg
adc
scas
fwait
sti
sub
inc
int
enter
sbb
loope
xchg
shll
xlat
adc
xor
jbe
push
in
dec
shll
int3
mov
iret
lods
test
sub
lods
mov
xchg
sbb
std
xor
les
jae
push
mov
jl
loope
fwait
xchg
xlat
popf
inc
lods
xor
xlat
cmp
and
lret
fnstsw
rcl
pusha
ss
pop
push
cld
sbb
pop
popl
cmp
pop
ficoms
xchg
jmp
mov
sti
pop
aaa
dec
push
daa
mov
fidivl
and
jb
or
call
mov
lds
inc
imul
fnsetpm(287
cmp
outsb
mov
sub
add
jle
popf
push
mov
xchg
sub
pusha
enter
addr16
add
push
and
dec
arpl
pusha
test
adc
loopne
sub
mov
sahf
clc
mov
out
cs
mov
divl
push
add
push
cmp
cmc
fstpt
or
icebp
mov
jnp
dec
jbe
mov
pop
or
adc
mov
dec
sub
xchg
jno
cs
dec
add
mov
mov
adc
cmp
xchg
arpl
arpl
sti
lods
jecxz
int
fists
pop
test
mov
sub
fildl
inc
push
push
adcl
xor
test
jo
xor
inc
mov
push
or
xchg
pop
out
pop
outsb
mov
mov
cmc
ffree
test
and
lds
shlb
faddp
out
addr16
push
cmp
lcall
loope
filds
mov
mov
test
xchg
movsl
sti
mov
mov
pop
aam
repnz
mov
push
mov
leave
add
fcmovnbe
add
decb
dec
icebp
and
test
es
repnz
push
fsubl
add
cmp
int3
mov
mov
and
jmp
dec
stc
dec
scas
add
adc
fiaddl
mov
aas
in
inc
jns
mov
push
and
cs
gs
dec
jae
loop
mov
mov
and
out
sub
cmc
out
xor
sar
les
sbb
sbb
inc
fdiv
test
inc
nop
out
xlat
xorl
push
inc
sub
and
xor
lock
mov
inc
data16
xchg
push
push
aas
out
pop
mov
jne
test
sbb
es
jmp
sub
fildll
in
lret
sahf
pusha
ja
cmp
mov
pop
xchg
fs
xchg
roll
in
int
repnz
mov
inc
dec
xorl
cs
daa
xchg
daa
daa
mov
xchg
jmp
call
pushl
repz
inc
in
pusha
jno
dec
and
push
add
sub
daa
xor
xor
cli
clc
dec
mov
aas
push
xor
outsl
dec
testb
lods
lcall
sub
sarb
mov
inc
pop
jb
dec
inc
push
push
or
or
sub
inc
call
imul
jns
popa
inc
fs
jnp
jb
loop
cmc
ds
or
arpl
sbb
cwtl
lret
outsl
mov
or
out
imulb
xorl
or
imul
or
or
mov
cld
clc
fisubrl
and
pusha
xchg
loopne
imul
and
or
and
in
movsl
or
xchg
pop
push
out
cwtl
ja
ret
sarb
movsl
add
test
cmp
xchg
pop
lret
xor
add
push
int
xchg
jb
adc
push
aam
pusha
inc
mov
inc
in
xor
les
rolb
jp
stc
call
fcompl
stos
mov
adc
push
lods
add
sub
mov
stos
movd
xchg
push
ss
aas
or
cmp
aam
xor
dec
and
jmp
cmp
jae
in
ljmp
pushf
imul
mov
data16
arpl
stos
es
sub
jp
outsl
mov
rcr
dec
push
dec
inc
lock
sbb
repz
test
inc
nop
fdivr
jecxz
jb
cmp
sub
call
rol
sub
push
xchg
int3
lock
flds
and
inc
inc
lcall
je
loopne
push
stos
cmc
jae
or
in
inc
cwtl
mov
and
pop
jns
mov
inc
cmp
sahf
fnsave
fdivrs
insl
add
out
push
cs
cmp
sbb
sub
ljmp
xchg
shl
out
inc
ljmp
push
cs
cmp
lods
xchg
jge
or
cltd
cld
and
mov
cmp
popf
rorb
test
je
cmp
push
sub
cmp
mov
jnp
jns
ret
push
fisubrs
std
mov
mov
lret
sub
fs
sahf
adc
cli
jge
stc
and
out
leave
dec
fs
xchg
mov
out
xacquire
or
or
mov
sahf
pop
call
rclb
pop
push
sub
cmp
ss
shl
ja
orl
pushf
mov
rcrl
mov
shl
or
js
sub
push
inc
pop
inc
or
daa
push
test
add
pop
pusha
xchg
rcrb
stos
and
add
cmp
pop
fistps
sub
dec
into
add
movsb
rcrb
jae
mov
jne
mov
or
cli
popa
lcall
in
mov
ja
xor
add
lods
cmpsl
cmp
push
repnz
xchg
push
or
arpl
pusha
push
pop
int
js
test
out
cwtl
and
test
xor
inc
pop
jb
xchg
fildl
mov
fisubrs
push
mov
mov
leave
stc
mov
scas
addr16
xchg
pop
lcall
jns
pop
js
inc
jl
rolb
xchg
jp
pop
mov
xor
add
cwtl
lahf
sar
mov
mov
mov
xor
movsb
daa
aad
push
push
sbb
sbb
js
ret
aam
stos
or
icebp
ror
out
int3
cs
ja
pop
ret
test
mov
aam
loope
mov
addr16
mov
pop
test
add
push
cmp
mov
sti
jecxz
push
or
adc
lods
ficoml
mov
movsb
mov
cs
stc
test
cmpsl
aam
xlat
lds
icebp
push
popa
push
push
cli
dec
mov
push
push
mull
fdivs
aam
dec
cmp
in
push
mov
clc
adc
adc
in
and
inc
sbb
mov
ror
int
insb
or
cmp
loopne
je
shlb
pop
gs
jl
push
jbe
or
test
loop
jbe
sti
dec
sahf
fs
adc
or
lahf
xchg
ret
mov
mov
push
addl
aaa
dec
les
aam
inc
xor
and
scas
push
dec
fdivl
jmp
and
or
scas
xor
rorl
xchg
test
pushf
nopl
lods
popa
jne
testb
nop
mov
xchg
test
inc
movsb
ficompl
mov
movsl
lds
push
mov
jg
jmp
leave
test
add
inc
dec
repnz
lods
or
call
mov
push
je
sbb
nop
push
clc
mov
fsubl
sub
push
xor
jne
hlt
or
sub
hlt
fwait
and
call
xor
xchg
xor
testb
ffreep
xorl
repz
xor
lods
sbb
ret
mov
mov
iret
andl
and
push
mov
mov
add
mov
mov
clc
dec
insb
push
lea
out
xchg
sub
cltd
test
inc
cwtl
cmp
les
mov
sbb
jle
or
mov
xor
loope
jmp
xchg
dec
insl
imul
jle
jp
fildl
and
adc
mov
imul
jnp
ret
ret
inc
adc
xchg
std
push
cmpsb
sti
iret
push
cmp
inc
shlb
inc
jae
outsb
pop
mov
add
pop
imul
repz
or
test
push
mov
pop
inc
enter
dec
dec
repnz
pop
inc
xchg
inc
lea
shlb
cld
push
mov
imul
psllq
sahf
adc
cltd
in
imul
inc
cmp
adc
adc
jns
sub
mulb
into
and
mov
mov
sub
pop
sub
inc
pusha
movsb
adc
pusha
cmpsl
adc
cmp
scas
pop
push
sbb
enter
test
inc
mov
int
push
outsl
inc
push
aaa
mov
nop
data16
test
fneni(8087
mov
pop
adc
inc
adc
inc
leave
popl
inc
cmpl
in
popa
ret
and
xchg
hlt
mov
repz
pop
out
repz
sbb
mov
xor
popa
push
aaa
movsl
movsl
shrl
shrl
push
lds
push
cmp
cmpsb
dec
js
das
in
sti
push
std
test
cmp
pop
mov
push
sbb
inc
xchg
push
add
mov
fidivl
sbb
push
jnp
sub
sbb
inc
push
jmp
cmp
dec
hlt
or
jb
lock
iret
lods
pop
adc
sahf
cs
cmpsl
paddq
xor
push
adc
adc
push
sub
aaa
shl
decl
add
push
xchg
popa
cmp
push
test
dec
sbb
dec
jb
fwait
jmp
dec
aaa
mov
jl
ret
out
loope
xchg
mov
mov
adc
mov
ret
iret
ljmp
dec
jge
sub
sub
clc
mov
call
add
xchg
mov
jl
push
sub
or
aam
int
es
sub
inc
xlat
mov
inc
push
scas
pusha
ror
js
out
subl
jge
mul
int3
cmp
ret
das
xchg
ds
mov
divl
iret
or
dec
inc
fs
mov
jecxz
add
pusha
lock
lcall
mov
push
push
xor
jns
mov
mov
aaa
add
ds
in
cmp
push
lea
sahf
mov
push
jmp
mov
cmp
addl
in
fs
out
mov
sbb
roll
mov
xchg
dec
or
gs
fwait
pushl
sub
repz
sub
cmp
sbb
test
mov
shlb
jns
loopne
xchg
dec
out
sub
mov
insl
sub
lcall
cmc
pusha
jmp
imul
enter
daa
out
fdivrs
jge
ljmp
nop
push
adc
push
sbb
js
inc
pop
sub
jmp
pop
pop
pusha
ret
add
mov
stc
pop
adc
push
or
inc
jb
fxtract
frstor
sbb
les
mov
lahf
cwtl
clc
enter
in
neg
sub
xchg
call
push
push
dec
mov
cmp
stos
test
cmp
fistps
pop
mov
push
addl
imul
xor
cmc
sarb
rcrl
pusha
inc
je
popl
iret
jo
fcomp
add
inc
mov
fdivrp
xchg
cmp
movsl
popf
aad
jg
imul
push
push
cmc
push
addr16
jnp
jo
addl
insb
dec
dec
mul
imul
loop
pop
push
test
stc
out
mov
inc
xor
mov
sub
dec
sub
inc
jns
popa
aad
pop
cmp
aam
lods
xor
enter
xchg
add
and
pop
inc
cmp
xorl
das
sbb
mov
mov
mov
dec
push
xchg
push
add
pop
and
aas
out
or
in
sub
iret
test
and
lds
adc
imul
rorb
push
xchg
add
ret
movsl
fistpll
outsl
push
jge
fldcw
lods
dec
dec
and
mov
loope
sbb
xchg
pop
or
jne
add
shrb
push
bound
int
mov
add
pusha
insl
cwtl
ror
mov
mov
add
inc
sub
sahf
pop
jecxz
mov
mov
andl
arpl
mov
mov
outsb
lahf
xor
cmp
jl
jge
jb
movsb
icebp
push
icebp
push
leave
inc
aas
insb
xchg
xlat
popw
mov
lahf
pop
fisubrl
mov
mull
mov
cwtl
mov
xor
mov
xchg
mov
adc
out
xchg
cld
xor
xchg
jne
and
mov
adc
push
pop
in
sti
mov
les
adc
mov
popf
and
pop
jne
rorl
nop
adc
sbb
es
stos
xchg
and
jg
cwtl
mov
pop
mov
std
daa
and
sbb
add
jno
out
scas
shl
outsl
pop
dec
mov
dec
cmc
mov
mov
in
mov
dec
in
dec
push
xor
add
test
sub
jge
imul
push
dec
test
aam
jp
sbb
out
push
outsl
jbe
and
insl
cmp
xor
cld
mov
pop
out
xchg
cmpsl
stc
out
mov
movsb
fptan
cld
dec
iret
pop
pand
fnstenv
movsb
popf
pop
inc
cmp
xor
push
mov
jbe
add
stc
insl
fnstenv
adc
dec
xchg
shlb
push
out
in
cmp
pop
xlat
popf
or
mov
dec
lods
ret
mov
cmc
push
ret
lret
dec
inc
sbb
xor
fcomps
add
jg
cmc
push
dec
test
lcall
stos
mov
mov
inc
test
mov
jns
xchg
or
dec
inc
loopne
mov
out
push
rol
push
cli
xor
je
add
in
and
movsb
pop
repnz
shlb
cmp
jns
in
sti
data16
popf
adc
int
and
mov
aaa
and
adc
mov
cmp
push
cmp
mov
add
sub
pop
pop
jge
push
xlat
xchg
dec
lret
sub
dec
jmp
xchg
clc
rclb
mov
xchg
fidivrs
out
mov
das
arpl
jl
push
test
mov
cmp
pop
popa
je
sti
xor
sub
jnp
push
mov
addr16
mov
add
and
adc
push
aam
xchg
nop
xor
stc
cwtl
mov
xchg
pop
dec
insl
sbb
shrl
jns
sub
mov
out
cli
mov
addr16
pushf
test
adc
adc
cmpsl
xchg
push
fwait
cld
test
je
cmc
push
mov
push
adc
aam
sub
nop
jg
and
dec
xchg
cmp
cmp
stc
int3
out
cmp
mov
mov
push
test
sbb
stc
add
mov
sbb
repz
incb
jns
es
sub
dec
mov
adc
in
cmp
inc
pop
stos
mov
mov
in
out
push
insb
pop
dec
mov
cwtl
pop
dec
ja
mov
pop
ss
clc
inc
in
sahf
shl
ds
mov
jbe
push
subb
mov
in
and
sbb
outsb
cmp
mov
cld
push
negl
push
mov
sarl
aas
movsb
pop
cmp
popf
dec
lods
dec
not
pop
inc
pop
and
xorb
dec
push
aam
popa
adc
xor
sahf
push
jmp
inc
xchg
popa
mov
sub
popa
add
xchg
inc
fwait
idivb
jns
lods
and
push
addb
shlb
std
dec
test
ljmp
mov
repnz
popf
cmc
test
inc
xor
in
mov
outsb
dec
int
repnz
into
pusha
sti
pop
out
je
xchg
dec
xlat
shlb
push
cmp
sbb
js
clc
fcmove
daa
andb
stc
jo
pusha
mov
jns
in
ljmp
jae
loopne
sbb
hlt
push
pop
icebp
lea
or
ljmp
out
cmp
xchg
push
aas
outsb
cs
addr16
push
aad
out
sub
dec
pop
icebp
into
shrb
xor
scas
mov
imul
lods
prefetch
or
iret
clc
push
lcall
hlt
stos
jae
mov
imul
add
dec
repnz
xchg
push
pop
push
int
and
repz
jns
int
lret
in
cmc
pop
mov
push
push
std
int3
push
sbb
jns
repz
mov
icebp
cmp
insl
int3
pop
outsb
divb
add
dec
loopne
dec
xlat
and
jbe
pop
call
add
push
xchg
insl
add
cmp
push
jmp
adc
sbb
daa
xor
data16
xchg
popa
pop
nop
inc
add
push
cli
pop
pop
mov
lret
inc
stos
scas
push
cmp
js
adc
xchg
sbb
mov
sbb
mov
int3
call
add
adc
sub
push
fwait
outsb
test
dec
mov
jmp
cmp
lea
xchg
dec
bound
add
rclb
jge
push
sub
mov
pop
mov
cmp
xor
sbbb
stos
in
data16
les
mov
das
and
sbb
dec
jg
and
fwait
mov
aam
bound
mov
inc
and
sub
xchg
xchg
mov
fdivrl
push
inc
inc
pop
dec
sbb
outsb
in
sahf
mov
mov
jno
subl
in
sub
jge
push
jmp
cmp
testl
fincstp
out
jno
les
pushl
outsb
mov
mov
aad
test
repnz
out
mov
jns
lods
lcall
mov
cmp
cmp
xor
mov
mov
adc
pop
out
loop
xchg
ljmp
mov
loopne
pop
mov
enter
int
int
adc
insl
xchg
aam
or
lock
dec
sbbb
mov
pusha
negb
aam
push
fdivrp
push
dec
flds
rolb
scas
xor
push
aam
loop
shll
and
cmc
inc
adc
lock
icebp
cmp
lret
lea
insl
cwtl
mov
fildl
mov
push
cmc
mov
cli
mov
into
or
mov
xor
sub
movsb
adc
ret
sub
cld
cld
pop
subl
iret
fwait
add
push
xchg
inc
mov
in
and
pop
jae
sub
movsl
mov
jmp
aas
dec
sub
lret
xchg
loopne
pop
sti
shrl
hlt
lods
xchg
sbb
mov
xchg
pop
pop
and
clc
or
sub
clc
and
dec
hlt
dec
pop
fdivrs
test
mov
cmp
cltd
pop
aam
out
and
and
pusha
pop
jns
mov
jns
adc
fs
sbb
lods
inc
scas
cmc
mov
aas
repz
dec
cmpsb
xchg
or
pop
xor
dec
into
and
sti
pop
jne
in
xchg
ljmp
sbb
xor
out
inc
into
fcoms
in
ret
lret
pusha
or
mov
sti
test
xor
pop
lods
mov
adc
xchg
lods
jmp
dec
dec
push
xor
xor
popf
pop
aam
mov
cmp
cs
add
cmp
jg
cmc
addr16
test
cli
and
sub
out
lock
pusha
ljmp
cmp
test
pop
mov
lahf
inc
mov
xchg
sub
lds
inc
test
xor
dec
and
ret
pop
mov
mov
call
or
shrb
popa
jge
lds
or
or
push
sub
pop
pop
xchg
adc
in
fadd
addr16
jg
and
push
gs
sub
fimuls
pop
data16
lahf
sbb
lahf
fdivrl
mov
std
fsubp
into
aas
xlat
mov
sub
pop
mov
das
mov
call
ret
add
orb
xor
jns
in
fsubrs
mov
imul
lcall
cmp
outsl
loop
xchg
aas
inc
jne,pn
dec
insl
iret
jns
add
cmpsb
pop
lock
mov
in
mov
jo
sub
push
sbb
cmpsb
mov
dec
dec
add
leave
rorb
dec
inc
fstpt
rol
hlt
push
dec
rcrb
repnz
or
mov
xchg
scas
push
xor
jp
ret
sarl
test
ret
inc
push
mov
nop
ss
add
fcoml
cmp
xor
and
lret
inc
mov
sbb
and
xchg
cmpsb
int
popf
sub
frstor
add
cli
pop
inc
dec
mov
mov
pop
jle
jle
dec
sub
hlt
cmovb
ret
dec
fldcw
outsb
cmpsb
outsl
loope
clc
pop
adc
mov
mov
or
das
ss
test
movsb
in
push
lret
mov
out
data16
push
cmpl
shrb
scas
dec
jbe
or
sarb
repz
iret
lcall
push
lea
jmp
cmpsl
push
test
sub
dec
sub
fdivr
jbe
mov
pusha
pop
in
stos
sub
inc
insl
sub
xchg
cmp
jno
inc
adc
in
and
dec
jmp
pop
sbb
loop
mov
cmp
add
sahf
in
imul
mov
pop
mov
sub
xchg
repnz
sub
ds
adc
adc
inc
shll
repnz
popf
int3
xchg
jmp
fsts
test
movsw
lcall
mov
fsubl
dec
es
inc
xor
xlat
mov
mov
les
mov
mov
jno
mov
add
xor
mov
in
fwait
pop
add
inc
sub
icebp
scas
dec
lcall
mov
pop
rcrl
and
push
mov
imul
in
fwait
in
je
insb
sti
leave
xchg
out
test
and
dec
cltd
jbe
pop
in
loop
mov
mulb
cmpl
shlb
xor
or
xchg
xor
mov
loope
js
cld
inc
or
shrb
mov
and
mov
xchg
mov
xchg
subl
sti
push
aam
xor
daa
cmpsl
dec
sub
sub
das
daa
and
inc
test
add
aam
fimuls
push
rorl
or
pop
sub
pop
jne
fcmovu
cli
aaa
mov
or
adc
into
dec
mov
lcall
sarl
cmpl
jno
adcb
mov
adc
pop
mov
mov
ret
mov
mov
push
cmp
test
pushf
mov
pushf
subl
mov
jp
mov
mov
iret
rclb
sarb
scas
or
cmpsb
ljmp
aad
pop
push
popf
add
clc
repnz
push
dec
add
dec
shr
pop
popa
dec
adc
sub
imul
rcrl
aas
adc
adc
push
push
inc
add
ret
fiaddl
add
fmull
or
int3
in
pop
mov
push
rolb
aas
stos
cli
push
xchg
shlb
mov
push
fimuls
ret
mov
sti
lret
inc
icebp
jne
jg
xchg
fisttpll
jae
mov
or
aad
or
mov
shll
dec
add
test
insb
test
adc
sbb
cmp
cmp
enter
sbb
sbb
nop
stos
inc
push
inc
cmpsb
mov
cld
out
sub
sbb
mov
adc
inc
cmp
sub
arpl
test
push
sahf
push
cmp
mov
popa
popa
and
movl
fisubs
push
pop
shll
out
cmp
dec
cli
rcll
dec
lret
repz
dec
inc
mov
test
pop
cmp
xor
and
xchg
insl
and
aam
and
cmp
xor
adc
stc
addr16
inc
ljmp
mov
jmp
sbbl
sti
or
fs
mov
scas
add
das
mov
inc
sbb
cwtl
cmpsb
and
jecxz
pop
cld
cmp
mov
add
sahf
gs
mov
insl
sbb
jmp
mov
xor
push
jbe
xor
movb
aam
repnz
daa
mov
or
add
jno
scas
add
rcrb
mov
pop
pop
roll
in
ja
adc
jo
cli
and
shlb
scas
add
adc
aam
mov
cmp
inc
and
adc
test
int3
jb
aas
shr
and
cltd
dec
lock
std
es
adc
ret
sti
subb
enter
mov
mov
dec
cmp
loop
sub
push
mov
nop
push
pop
loope
clc
mov
psrad
or
icebp
pop
fwait
adc
push
cmpsl
jbe
mov
negb
jbe
test
jmp
cltd
dec
div
data16
iret
jle
cmp
aad
addr16
cmp
or
inc
enter
std
cmp
lret
insb
test
xor
dec
fldt
addr16
lcall
icebp
int3
jmp
inc
fchs
int3
mov
or
jmp
pop
ds
in
sbb
je
mov
lds
leave
xchg
pop
mov
mov
mov
inc
dec
xor
xchg
jns
test
fs
adc
call
out
loop
jnp
mov
pushf
imul
imul
jbe
push
sti
dec
cmp
jo
mov
shrb
mov
cmp
push
in
lock
dec
push
lea
into
daa
mov
sbb
mov
dec
ret
nop
testb
aam
test
push
sbb
mov
dec
sub
pushf
or
lahf
lahf
pusha
int
fisubl
mov
and
mov
ret
pop
pushf
xor
insl
dec
xor
xchg
mov
jg
data16
inc
fdivs
std
push
mov
outsl
push
or
inc
mov
pop
mov
xchg
push
sbbl
in
aas
ret
fidivs
xorb
insb
addr16
cmc
movsl
cmp
push
clc
xlat
cmpsb
xchg
adc
push
xchg
mov
xchg
sahf
jae
fstps
decb
dec
push
je
cld
mov
pop
mov
and
out
icebp
cmp
aaa
mov
xor
fdivrl
or
and
stos
mov
aam
jae
out
pop
fists
or
and
mov
push
add
popf
bound
pop
ret
pop
pop
cld
ret
mov
ficoml
fstl
mov
mov
pop
fildl
mov
aaa
pop
es
call
stos
mov
cmpsl
inc
pop
mov
inc
dec
lret
ficomps
lahf
dec
pushf
inc
add
jecxz
mov
negb
dec
jg
ret
repz
jge
fwait
movsl
xor
sub
pop
inc
in
sbb
fisubrl
in
decb
sub
sub
dec
insb
push
and
mov
pop
jp
and
pop
jbe
or
xor
and
insb
aad
stc
and
and
scas
icebp
daa
push
test
cwtl
sbb
jg
ficomps
aaa
stos
inc
lds
test
push
or
and
mov
pusha
ret
arpl
mov
mov
subb
pop
jmp
inc
sub
pop
aaa
dec
iret
mov
out
push
enter
pop
cwtl
pusha
aam
cmpsl
pop
dec
mov
sub
into
push
jp
cmp
push
xor
rolb
lock
testb
lret
ret
cli
jp
mov
leave
outsb
dec
test
push
cmp
cmp
punpcklbw
jb
mov
stos
pop
fsubrl
push
fs
xor
mov
dec
nop
test
or
mov
loope
pop
push
lods
rolb
xor
inc
fsubr
stos
int
cmp
lods
adc
and
mov
add
pop
ret
dec
pop
pop
in
and
push
movsb
pop
lahf
or
or
xchg
and
xchg
add
jecxz
push
jmp
add
int
ffreep
test
sbb
pop
push
push
pop
leave
ja
mov
and
adcl
lret
adc
ds
insb
jb
adc
push
subl
cmp
mov
lds
sbb
xorl
mov
rcll
mov
mov
pop
push
lret
pop
lret
inc
jmp
and
aam
cli
cmp
cmp
imul
imul
inc
pop
sub
pop
cmp
repnz
mov
cmp
push
inc
mov
mov
mov
daa
lcall
or
std
lea
repnz
mov
cmpsb
mov
jb
jle
adc
cmp
push
push
xchg
sub
pop
mov
pop
mov
aaa
lcall
fmuls
cmp
lea
mov
mov
test
lahf
fisttpll
sub
cltd
loope
add
enter
sbb
jl
xor
popa
lea
mov
or
mov
fsubl
dec
fnstenv
imul
pop
cld
add
es
mov
scas
push
cld
and
cmpsb
sub
call
in
jecxz
in
xor
mov
popf
dec
mov
aam
movsl
repz
popl
jnp
int
add
ss
iret
test
add
insb
je
rcrb
jg
fildl
rcll
xchg
ljmp
fiadds
and
inc
pushf
jae
test
and
xchg
sub
adc
fucomi
daa
mov
xor
jp
mov
test
inc
pop
test
bound
imul
push
repnz
arpl
push
repz
xchg
mov
jle
xchg
lret
or
mov
ret
out
aad
push
xchg
cmpsl
dec
cmpsl
test
sbb
push
pop
outsb
sbb
adc
mov
inc
movsb
mov
lods
push
pop
std
in
inc
push
daa
dec
mov
push
inc
cmp
xchg
in
cs
in
mov
fcmovnu
push
cmpsb
fcomp
out
out
cmp
pop
xchg
aaa
dec
jbe
sahf
ss
icebp
outsl
pop
lret
xlat
sub
jle
and
jp
inc
andl
loop
add
fistpl
cs
icebp
inc
ja
add
dec
dec
cltd
dec
dec
lret
jle
movsl
cmp
jns
lret
test
xchg
loop
mov
xchg
jo
push
iret
fstps
pop
or
mov
xchg
inc
lahf
js
cld
pop
fidivl
sub
andb
insl
mov
fwait
aad
mov
stc
js
add
sub
cs
xor
jmp
cs
push
mov
push
ret
sbb
enter
jmp
mov
bound
out
mov
add
sbb
sbb
dec
in
mov
sbb
cmp
add
inc
pop
out
mov
addr16
cltd
nop
mov
push
nop
mov
fisubrs
push
cmp
in
mov
outsl
sub
push
call
imul
inc
cmpsl
jbe
push
push
in
aaa
push
mov
inc
dec
inc
jle
xor
leave
jb
inc
sbb
sub
popa
mov
xchg
inc
popl
imul
mov
push
lods
insb
sbb
mov
lcall
pop
or
mov
pop
mov
arpl
mov
loopne
jne
jg
sub
push
mov
adc
leave
mov
dec
mov
adc
loope
push
pop
shll
and
sti
add
xchg
mov
xor
addl
call
pusha
adc
sbb
xchg
in
sbb
cmp
cmc
ja
iret
xchg
loope
push
mov
imul
jno
loop
cltd
in
out
push
sub
xchg
outsb
sub
lret
mov
dec
mov
ss
aaa
sbb
mov
mov
cld
clc
daa
xchg
pop
and
or
je
mov
xchg
and
pop
addb
jns
dec
pushf
adc
jbe
mov
pop
push
aad
jae
mov
imul
shrb
xchg
sti
scas
aam
aad
loop
andl
shrl
push
xor
jl
ljmp
xor
inc
leave
jmp
test
push
sar
sti
pushf
pop
adc
dec
push
sub
test
sub
sub
scas
pop
jmp
das
dec
stos
jns
mov
mov
loope
ljmp
stos
push
or
jmp
cmpsl
es
call
repnz
mov
lods
xchg
pop
nop
cmp
scas
sbb
idiv
push
in
cmpsb
pop
loop
data16
arpl
into
jle
push
add
jbe
sarl
cmp
mov
pushf
outsl
shlb
jns
xchg
out
sub
add
sub
add
jg
push
push
or
mov
push
clc
in
mov
arpl
popa
add
dec
lods
cmp
jb
xor
mov
out
popa
bound
dec
sbb
sbb
dec
fdivl
cmpsb
icebp
adc
lods
out
decb
pusha
fdivs
les
jecxz
mov
iret
movsl
mov
cmpsl
sbb
leave
ss
or
mov
mov
mov
arpl
xchg
jmp
roll
mov
xor
sub
sub
dec
in
or
sub
ret
jo
push
xchg
and
or
lods
orl
add
cli
jns
int
xorb
adc
in
inc
or
cmc
jg
and
int3
paddusb
and
and
add
leave
dec
sub
xchg
addr16
cmp
xchg
cmp
rorb
push
mov
testb
out
pushf
fsqrt
movsl
sub
loope
add
cmp
pop
add
sub
int
push
push
dec
lea
int
jae
loop
push
or
pop
add
dec
inc
dec
push
cmc
mov
scas
repnz
lcall
and
cmp
pushf
mov
insl
dec
add
inc
je
cmp
pop
push
adc
and
pop
push
clc
push
add
fwait
sub
mov
jb
fisubs
dec
test
loope
and
rcr
in
mov
aad
loopne
inc
mov
add
mov
mov
arpl
add
push
xor
dec
cld
inc
ja
sub
mov
push
test
push
shll
dec
clc
jp
test
fistpll
ljmp
adc
in
ljmp
mov
add
gs
loope
add
mov
inc
mov
lahf
dec
mov
adc
sarl
imul
test
pop
mov
inc
adc
pop
es
cmp
sbb
ret
jmp
dec
mov
pusha
dec
push
adc
sti
or
dec
mov
stos
mov
and
adc
cld
or
xor
das
add
push
jge
fldl
mov
push
jmp
cmpl
push
mov
mov
pop
fs
xor
xchg
dec
lret
ds
xchg
xchg
cld
mov
fstpt
jae
jg
xchg
je
pop
pop
rcpps
jnp
out
fdivrs
fdivrl
iret
into
pop
xchg
bound
clc
cwtl
and
inc
leave
adc
les
jns
imul
jo
xchg
int3
pop
imul
rcl
test
sbb
mov
fdivrl
adc
fnstsw
or
lahf
repnz
xor
cmpb
or
push
xchg
and
fstpt
pop
loop,pn
cmp
sub
mov
and
inc
cmc
inc
dec
in
in
and
into
mov
in
mov
jl
gs
dec
and
stos
add
dec
dec
lods
xchg
shrl
push
rol
cwtl
call
pop
pop
popa
adc
mov
jae
add
arpl
cltd
push
jmp
loopne
pop
push
pop
das
lahf
mov
push
inc
stos
insl
and
push
xor
out
pop
push
stc
mov
sub
jb
dec
nop
lea
out
aas
jg
mov
cwtl
mov
mov
push
mov
cwtl
nop
push
adc
or
xor
xchg
mov
popa
pop
fucomp
hlt
in
sub
stos
inc
aam
xor
mov
push
add
sbb
sarb
mov
push
sbb
pop
idivb
xchg
jno
or
add
cmp
inc
ret
ljmp
or
js
mov
sbb
push
aam
fcomps
sbb
pop
add
sub
jnp
and
iret
mov
dec
insl
jo
jl
add
test
jbe
or
pop
cltd
pop
shrb
repz
sbb
addr16
mov
inc
xlat
cmpsb
mov
dec
insb
dec
pusha
fstpt
mov
lahf
jcxz
repnz
bnd
fs
popf
mov
jg
xchg
xlat
popa
cmpl
aaa
mov
xchg
cmpsl
hlt
aas
mov
sbb
jmp
outsl
adc
ds
mov
push
sub
push
hlt
cmp
gs
xchg
ja
push
mov
adc
fs
lds
sub
addb
pushf
rorb
lret
sti
push
aaa
push
icebp
push
cmpsl
adc
imul
or
sbb
das
xchg
outsb
push
outsb
rorl
inc
test
dec
pusha
lds
cmp
push
enter
and
pop
dec
sbb
stos
es
cli
sti
add
fbld
popa
mov
scas
shlb
or
test
pop
xchg
pop
mov
pop
mov
imul
leave
xchg
out
pop
or
roll
push
popf
or
jbe
fdivrl
mov
add
sbb
sub
lret
cmpsb
cmpsb
imul
cmp
xchg
dec
int
mov
stos
out
adc
cmp
int3
pop
insl
aaa
inc
jbe
push
and
xchg
jne
loop
dec
dec
imul
sub
idiv
cmp
bound
mov
xor
loope
inc
or
mov
fnstenv
or
lcall
out
adcl
push
mov
jne
dec
out
loope
lahf
inc
push
add
mov
mov
adc
ds
sbbl
push
aam
fldenv
jnp
pusha
call
es
out
lods
pop
push
mov
sbb
or
out
fstl
nop
and
addr16
dec
push
in
push
das
push
pop
outsl
sub
adc
inc
push
int
enter
add
or
fldt
outsl
jecxz
push
cmp
pushf
push
test
jnp
or
cmpsl
out
lret
lcall
idivl
dec
cwtl
mov
mov
dec
jge
jne
cmp
mov
jnp
pop
push
pop
bound
inc
add
dec
movsb
sbb
cmpb
aam
aas
mov
xor
test
push
mov
insb
sar
lods
mov
cmp
shlb
adc
jne
dec
sahf
aas
push
sbb
or
scas
stos
popa
inc
adc
jecxz
popf
addr16
lret
lock
lock
dec
or
sbb
sahf
das
iret
in
sbb
mov
mov
push
iret
test
insl
push
sti
in
pop
js
clc
sbb
pop
xchg
or
mov
adcb
lods
jae
shlb
jmp
push
cs
fs
stos
adc
test
imul
mov
insl
arpl
dec
sub
cs
mov
outsl
outsl
jne
cwtl
jmp
movb
mov
mov
push
push
mov
jae
push
cli
shll
leave
mov
dec
or
sar
pop
mov
sub
xchg
mov
xchg
stos
dec
aad
sub
lahf
dec
shrl
inc
push
inc
dec
jnp
push
add
insl
mov
int3
sbb
inc
mov
loopne
jmp
or
mov
jge
pusha
lahf
jo
or
mov
sub
roll
ljmp
inc
test
js,pn
iret
adcl
hlt
or
ret
aas
test
mov
jl
push
and
hlt
pop
inc
xor
inc
and
pop
adc
fildll
and
push
das
jbe
bound
mov
lret
cmp
mov
sbb
test
std
add
mov
xor
daa
scas
push
lcall
pop
jb
cmp
je
push
in
rorl
cmp
inc
sbb
lret
aas
fisubrl
ds
dec
mov
dec
addr16
jae
sub
pop
dec
sti
mov
insl
out
inc
xor
popa
push
mov
jne
dec
dec
fs
push
mov
or
sub
shl
pop
jle
lock
add
and
inc
leave
inc
stc
pushf
push
mov
lcall
push
lahf
fstps
popf
hlt
add
or
cs
imul
movb
scas
or
add
lcall
xor
jnp
cli
inc
adc
fildll
mov
rolb
pop
push
xchg
jp
xchg
mov
lcall
mov
xchg
sub
fsts
out
js
cltd
iret
pop
in
mov
loope
inc
and
aaa
stos
inc
enter
cmp
jmp
mov
mov
or
push
movsb
ljmp
cwtl
add
in
loope
pop
iret
pop
cmpsl
icebp
int
shlb
mov
mov
xor
outsb
xor
push
rcll
sahf
and
add
dec
xchg
sub
int
mov
test
mov
int3
fisubl
rcl
popa
mov
repz
addr16
or
clc
push
pushf
cmpsl
cmp
aas
stc
or
inc
repz
mov
push
fmulp
outsl
cmp
loope
mov
dec
mov
and
mov
in
or
mull
divb
hlt
insl
push
inc
in
mov
out
mov
out
push
mov
mov
pop
push
stos
mov
xchg
pavgb
mov
push
repz
aas
mov
add
pusha
loope
ljmp
lcall
push
dec
or
or
cli
xchg
pop
cmp
pop
jo
sub
and
into
dec
nop
scas
or
into
jnp
mov
or
lret
xchg
leave
or
push
js
add
test
jle
dec
lret
jo
adc
push
icebp
jmp
ja
imul
test
mov
cld
in
js
ficompl
xchg
jp
add
lret
adc
in
push
scas
cmpb
lock
movb
nop
cmpsb
mov
out
mov
push
dec
fs
jmp
outsl
clc
shrl
jmp
push
loopne
inc
mov
mov
mov
sbb
insb
lods
stos
pop
push
repnz
dec
jbe
in
jecxz
stos
lret
loope
ret
mov
mov
test
push
mov
nop
mov
les
rorb
pop
repz
mov
pop
pop
cmp
or
jl
xor
in
push
xor
pop
adc
or
mov
or
push
cmpsl
pop
push
inc
mov
repz
aas
pushf
and
mov
pop
add
adc
shlb
adc
int3
ss
mov
xlat
mov
in
add
cmp
loope
and
sti
pop
arpl
cmp
aad
or
sub
testl
cli
push
stos
xchg
mov
inc
popf
imul
cli
ds
clc
mov
jnp
mov
xchg
pop
mov
jns
inc
dec
mov
cwtl
fisttps
xor
push
push
addr16
jg
or
in
sub
xchg
sub
xlat
push
jae
xchg
add
pop
into
pop
and
adc
add
mov
sbb
xor
mov
xchg
jle
xchg
or
out
adc
sub
pop
jp
pop
jns
repz
sti
je
pop
ds
sbb
xchg
or
dec
dec
mov
pusha
addr16
lahf
pushf
nop
sbb
xor
adc
imul
fsubp
xchg
ljmp
add
lock
xor
add
mov
iret
jo
scas
aas
jo
mov
cmp
nop
pop
mov
and
push
sarl
je
or
fistpl
addb
adc
jg
pop
sar
test
jmp
pop
sub
sub
ds
aas
add
jmp
mov
shrl
stos
stos
sub
jle
test
rol
test
inc
add
adc
add
adcb
test
jmp
mov
rclb
sahf
hlt
or
jecxz
xchg
add
adc
push
orb
xor
pop
clc
adc
aas
cmp
cmp
fs
sar
mov
inc
daa
mov
shr
xchg
mov
and
in
sub
push
mov
mov
mov
cmpsb
sbb
pop
cmp
mov
rcrl
mov
xor
push
jge
imul
jmp
mov
push
jno
jg
bound
in
xchg
sti
sti
call
dec
add
pop
jo
fwait
dec
dec
pusha
cwtl
cmp
ret
jge
jo
fstpt
rorb
nop
xchg
xchg
sub
xchg
cli
ljmp
xchg
sbb
ljmp
xor
das
sbb
dec
xor
sbbl
ficoms
cwtl
mov
dec
ljmp
jge
dec
inc
mov
in
stos
pop
mov
pop
movsw
popa
jno
push
sbb
andb
sub
mov
pushf
out
or
out
sub
scas
je
dec
mov
div
jle
es
lret
xchg
aam
xor
push
loopne
and
clc
clc
shrb
mov
sub
jo
mov
dec
mov
push
cmp
jge
xlat
push
inc
scas
inc
into
fwait
addl
sahf
cli
adc
es
test
cmpsl
push
mov
cmp
sbbl
sbb
lods
std
imul
popf
clc
out
push
xlat
neg
inc
cltd
push
mov
icebp
and
mov
dec
xor
test
mov
inc
int3
imul
ret
shl
mov
push
add
mov
mov
add
add
xor
mov
stos
clc
adc
or
cmpsl
lret
inc
sub
scas
mov
imul
inc
scas
jo
xchg
int3
mov
dec
sbb
mov
pop
pop
push
cmpsl
mov
pop
add
and
push
pusha
imul
push
leave
or
test
pop
ficoms
pop
sub
insb
leave
push
mov
jmp
inc
xchg
test
das
in
pop
shll
fsubs
cmp
in
xlat
mov
jmp
jno
push
sbb
test
insl
jne
rorb
pop
or
pop
mov
push
add
xor
popf
push
outsl
mov
pop
mov
clc
bound
les
push
std
jno
pop
cwtl
push
xor
add
dec
xor
fnstsw
addr16
addl
mov
inc
loopne
push
cli
cmp
sbb
or
cmp
pop
add
movsb
je
sub
sbb
rcrb
call
add
push
adc
fidivs
and
into
sub
mov
test
push
mov
jae
lods
gs
xchg
push
xchg
andl
jns
lds
inc
push
jg
mov
pop
pop
add
cmp
imul
dec
stos
sub
enter
mov
mov
xor
ds
loop
dec
jmp
pop
xchg
or
pop
add
inc
repnz
test
pusha
jecxz
ret
lods
stc
jle
pop
rcr
xor
in
out
push
mov
and
repz
in
pop
notl
xor
inc
fisubs
push
jae
ret
mov
mov
add
test
lock
imul
ds
mov
movsl
pusha
xchg
inc
mov
add
sub
mov
xlat
mov
roll
sahf
inc
or
inc
sbb
inc
popa
popf
mov
ret
mov
pop
outsl
test
outsl
cmpb
cltd
pop
rorl
out
xor
outsb
out
cmp
lds
fcoml
insb
jbe
jo
icebp
ret
sub
jp
sub
popa
xchg
lea
lods
les
pop
lock
aad
inc
mov
cld
imul
jg
les
mov
sbb
or
js
xchg
xchg
mov
movsb
xor
push
jmp
ljmp
shlb
jp
xchg
sbb
sub
add
pop
or
sbb
inc
jbe
and
hlt
push
mov
or
orl
sub
stos
mov
pop
inc
xchg
dec
stos
scas
repz
das
ret
scas
fldl
insb
insb
mov
pop
sbb
mov
sarb
xor
push
cmp
out
cld
adc
ret
jb
mov
je
fdivl
lahf
xor
and
inc
mov
movsb
iret
xchg
fcomps
adc
test
sbb
test
nop
negb
sub
fwait
sub
movsb
push
cli
ja
xlat
fldl
insb
call
xor
mov
or
cmp
adc
xchg
mov
out
pop
je
call
jmp
fwait
addb
xor
sub
outsl
mov
xor
pop
pop
mov
xchg
mov
jns
pushf
bound
sub
inc
dec
jmp
xor
mov
sbb
rorl
loopne
pop
pushf
push
mov
cld
xchg
cld
aas
sbb
xchg
mov
and
push
push
int
jle
test
leave
xchg
or
pop
roll
pop
ret
dec
xchg
or
xchg
cmp
mov
pop
popa
out
mov
js
cmp
jne
xchg
xchg
icebp
fcmovnu
mov
cmp
shlb
pop
mov
cmp
mov
fldl
fnsave
stos
sub
fcoml
xor
cmp
xchg
aad
sub
mov
in
xor
xor
or
lret
jne
add
mov
sbb
push
add
adcb
mov
cmp
push
cs
sarl
mov
mov
pop
push
in
inc
call
in
mov
enter
xorl
push
lret
pop
int
daa
enter
jae
ret
jg
inc
xchg
dec
popa
mov
pop
inc
addb
mov
addr16
add
fucomip
je
add
pop
sub
in
add
jp
fwait
and
push
dec
outsl
add
cld
icebp
push
jbe
xchg
fldcw
lahf
aas
cmp
movl
push
cmc
hlt
arpl
mov
lods
add
sub
inc
inc
lahf
mov
lods
sub
cmp
jae
push
popf
mov
aas
add
out
jns
test
test
ja
shrl
jo
jae
jmp
addb
push
sahf
popa
testb
imul
lret
dec
dec
sbb
pop
add
push
jae
addr16
stc
stos
sahf
inc
and
sbb
call
aas
int3
mov
imul
sbb
scas
dec
add
data16
clc
inc
sbb
inc
pop
add
push
iret
xchg
fsubrl
ss
xor
out
inc
jo
test
xor
idivb
jg
jl
push
inc
jbe
in
xchg
ja
mov
lcall
aaa
shl
aaa
daa
sahf
jne
stos
jl
add
mov
mov
adc
mov
mov
cmpsb
ficomps
mov
lea
mov
xor
lcall
jne
adc
sti
pop
xchg
inc
mov
push
imul
cltd
jp
stos
loopne
dec
cltd
aaa
out
jae
pusha
jbe
dec
and
pop
enter
scas
les
sbb
xchg
dec
ss
lret
sbb
repnz
inc
iret
fs
mov
adc
cwtl
aam
push
mov
lret
pop
sub
movsl
pop
mov
push
sub
mov
inc
inc
cmp
sbb
mov
jns
shrb
shlb
cmpsl
add
cmpsb
push
imul
ljmp
insb
sub
paddsb
out
shll
cmc
addr16
int
popf
jbe
xchg
les
fwait
pop
jl
rcll
fsts
mov
mov
jle
pushf
imul
icebp
add
pushl
inc
push
xchg
pop
fildl
call
xchg
xlat
jns
mov
push
xchg
xchg
inc
xchg
out
sti
lahf
pop
int
jmp
xchg
or
xorl
stos
xchg
rorl
fwait
xchg
popf
jl
add
pushf
inc
inc
mov
sub
mov
lods
and
outsb
test
aas
inc
or
mov
jnp
inc
sub
lods
inc
cli
cmpsb
jmp
notl
fcomip
fistpl
js
aam
xchg
outsl
or
mov
adc
jb
mov
loop
fucomi
cmp
mov
out
fs
aaa
nop
inc
test
inc
xchg
lret
jmp
int3
adc
rorl
push
daa
mov
mov
sbb
mov
sub
aam
into
dec
fdecstp
inc
pop
adc
and
jbe
jmp
imul
dec
ret
xchg
jno
test
dec
mov
rorb
std
cltd
dec
xchg
sub
xor
mov
icebp
lock
mov
cmpsb
and
or
dec
lock
jge
xchg
mov
adc
mov
and
scas
leave
mov
test
push
or
mov
and
testb
adc
movsl
push
sub
mov
or
icebp
cs
testl
jecxz
pop
sub
pusha
int
jno
xor
or
push
cmp
scas
out
push
loope
jp
push
or
leave
lret
insw
mov
push
ja
rcrb
inc
jmp
adc
out
xor
aas
mov
mov
ret
je
das
push
mov
and
pop
and
movsl
mov
mov
push
sub
loope
mov
pop
cmp
ss
loopne
jecxz
inc
push
cmp
lahf
aas
popf
xor
gs
enter
mov
push
push
lcall
pextrw
mov
cmp
dec
aad
jmp
das
test
insl
popf
stos
push
scas
clc
mov
shlb
mov
lcall
xchg
dec
dec
rol
daa
test
imul
adc
push
stos
cmp
adc
sub
push
lahf
sahf
pinsrw
mov
gs
push
les
xchg
rcrl
add
test
xor
int
push
push
jnp
pop
sub
cld
xchg
pop
in
mov
mov
sub
sarb
std
jno
loope
xor
out
shlb
cltd
cmp
movsl
popf
jle
cmp
movsl
add
adc
jb
movsl
movsb
xor
arpl
fnstcw
scas
sti
sbb
sub
fwait
sti
xor
dec
xor
inc
pop
lahf
fnstenv
pop
mov
mov
in
xor
dec
sbb
mov
mov
and
imul
add
cmc
lahf
imul
dec
scas
sbb
es
out
addr16
dec
sbb
ret
push
dec
sub
or
aas
cmp
ret
pop
movsl
cmpsb
and
and
xor
pop
mov
lea
pusha
xlat
fxch
lds
mov
mov
js
adc
push
in
insb
dec
sbb
cmp
loop
inc
add
adcb
jl
mov
into
push
fucomip
sbb
cmp
and
xchg
jnp
jne
out
clc
cwtl
rcrl
cld
ss
dec
leave
ret
sahf
cmp
or
stc
subb
push
and
add
mov
movntps
or
and
cli
loopne
and
iret
iret
mov
test
mov
fcomp
lcall
inc
dec
sub
xchg
lcall
rcr
cmpsb
add
push
cmp
xor
xchg
out
into
push
insl
lahf
mov
mov
mov
sbb
jmp
aaa
sbb
mov
fwait
jp
push
sbb
or
lcall
std
pop
pop
or
sub
in
fmul
mov
test
pop
or
adc
lret
pop
in
jnp
ret
test
imul
lea
insl
dec
jns
in
push
pop
hlt
rclb
mov
in
lock
xchg
xor
pop
inc
bound
pop
fs
icebp
out
adc
mov
push
mov
mov
call
in
adc
popa
orb
orb
lods
jp
sub
push
push
jle
and
fimuls
xchg
js
insb
mov
fistps
pop
push
adc
dec
pop
adc
jl
cwtl
loop
enter
adc
inc
push
lods
lods
push
and
or
push
pop
xor
rclb
divl
shl
out
sub
inc
out
mov
mov
stc
mov
adc
mov
mov
jmp
mov
inc
leave
int
insb
sbb
shll
xchg
pop
xor
mov
or
loope
dec
push
test
pop
inc
jno
mov
and
andl
test
mov
js
mov
sub
jae
ret
aaa
adc
ljmp
call
aas
pop
jl
xchg
ret
jl
scas
xor
mov
nop
cmp
xchg
jp
lahf
aas
adc
adcl
cwtl
rclb
add
pusha
xchg
vpslld
mov
std
mov
out
dec
nop
pop
pop
orb
test
mov
adc
add
stos
inc
loop
out
imul
add
jno
ret
ret
repnz
daa
ds
int
mov
xor
clc
imul
cmp
clc
jl
push
mov
imul
xor
dec
and
or
xor
pop
pop
out
xchg
add
inc
or
jecxz
mov
rolb
adc
cwtl
jmp
push
jbe
cmp
xlat
and
jns
lcall
sti
mov
xchg
pop
adc
ret
stos
popa
test
sbb
int
fisubs
notl
sti
lret
enter
push
clc
mov
sub
stos
dec
mov
pop
rolb
aaa
int3
das
out
sbb
leave
or
icebp
jb
call
std
push
fcoms
jg
mov
sarb
push
cltd
mov
gs
dec
je
hlt
iret
loopne
decl
aam
cli
dec
fisttpl
xchg
insb
adc
xchg
jl
dec
sub
in
xor
sub
jae
dec
mov
lcall
or
cli
outsb
sti
scas
fs
lds
mov
jno
dec
ljmp
push
ja
or
or
in
pop
jle
and
sti
sub
int3
pusha
dec
or
iret
xchg
or
jle
add
inc
cmpsb
adcb
fists
pop
sarb
les
imul
outsb
add
and
outsb
adc
aam
shll
push
enter
ret
movsb
mov
jmp
push
sahf
repnz
nop
xor
sbb
das
aad
mov
add
xchg
imul
jo
out
xchg
movsb
cmpb
sbb
je
xchg
int3
fsub
mull
jmp
mov
add
fidivrs
mov
pop
js
loope
jbe
push
cmp
aam
dec
dec
dec
mov
pop
imul
loope
cmpsb
xor
mov
int3
shl
xchg
pushf
xchg
sbb
cmp
pop
cmp
lods
jbe
lea
mov
pop
shll
jno
xlat
cmp
inc
xchg
stos
mov
pop
sbb
fiadds
sbb
in
jmp
in
push
jp
push
inc
in
ficompl
mov
sti
mov
xor
call
mov
push
xchg
xor
ret
jo
insl
or
jle
push
and
xor
fisttpll
cmp
mov
mov
xchg
loopne
pop
movsb
mov
mov
xchg
cmp
fldenv
clc
cmp
imul
jno
sbb
sub
adc
push
xchg
cs
mov
and
or
or
push
cmpsb
incb
ds
nop
sub
mov
repnz
inc
xor
jbe
mov
jmp
ds
movsb
cs
cmpsl
dec
mov
xchg
aam
int3
fidivrs
add
mov
sbb
lcall
push
push
out
inc
mov
in
stc
adc
mov
lock
sub
inc
jb
mov
leave
je
xor
test
xchg
imul
adc
filds
leave
pop
inc
mov
dec
ret
arpl
cwtl
add
lock
xchg
es
mov
cmp
and
push
push
jno
mov
sub
out
pop
push
fistps
or
xor
push
lods
les
lds
mov
dec
or
js
shrb
pop
mov
mov
inc
dec
dec
push
mov
inc
cwtl
enter
sub
adc
jecxz
add
lea
sub
nop
sub
pop
icebp
xorb
or
push
adc
mov
stos
imul
and
stos
aaa
and
daa
jo
scas
and
ds
sbb
shll
inc
jbe
mov
stc
leave
mov
incl
bound
js
inc
add
flds
xchg
adc
xor
xchg
push
je
popa
push
jle
mov
dec
in
data16
and
into
les
movsb
out
aad
push
push
push
notl
jbe
xchg
fistpl
addb
cwtl
out
ficomps
je
cmp
inc
add
scas
cli
mov
add
sub
ss
pusha
or
add
jbe
loopne
mov
sbb
pop
mov
clc
xor
xchg
mov
xchg
push
ret
je
cwtl
stos
out
out
je
push
jl
xor
push
add
jp
pusha
mov
mov
xor
pop
lods
fidivrl
dec
test
inc
adc
inc
cmp
xor
mov
mov
rolb
js
xchg
test
movsb
and
icebp
cs
pop
jne
in
movl
sbb
mov
dec
jns
cmpsl
popf
inc
jbe
hlt
sar
loope
add
and
push
mov
incb
int3
idivl
jp
cmp
mov
add
and
dec
testb
sub
loope
in
movl
dec
pop
aas
in
push
mov
push
aam
xchg
xor
lods
push
in
and
cmp
or
ret
je
lret
ficompl
mov
int
push
sub
inc
and
loop
jns
jnp
lret
adc
mov
cmp
xor
lret
xchg
sbb
dec
jae
scas
dec
sar
cmc
jo
push
bnd
ds
or
inc
psrad
jg
xlat
dec
lss
out
std
in
cmp
add
adc
je
adc
pop
pop
subl
inc
add
scas
rolb
inc
int3
inc
and
push
test
fisubs
mov
in
fiadds
push
test
jge
mov
cld
and
mulb
aad
test
and
loopne
push
xor
ret
xor
sub
inc
or
std
xor
adc
jp
dec
pushf
mov
cwtl
insl
mov
mov
test
clc
jecxz
clc
mov
aas
push
adc
inc
sub
fdivs
mov
pop
mov
out
gs
pusha
sbb
in
adc
ds
dec
sub
jecxz
mull
push
inc
jo
mov
lds
push
in
dec
xchg
jecxz
sub
sahf
insl
enter
dec
fwait
in
icebp
int3
push
aas
aas
pusha
jg
inc
rorl
out
inc
test
ljmp
fidivs
sub
pusha
lret
push
cmp
pop
add
xchg
in
test
shlb
ss
xor
sti
xlat
in
cld
clc
insb
sbb
rorb
mov
test
out
push
add
cld
fisubrs
int3
enter
cmpsl
cmp
push
loop
add
xchg
and
cmp
push
inc
ss
sbb
lcall
push
sub
dec
mov
mov
push
mov
xor
mov
in
sbb
xor
add
or
push
or
je
mov
sub
xchg
outsb
lds
pop
lcall
inc
or
lret
add
scas
les
data16
add
jns
inc
dec
outsb
inc
dec
cmp
xor
or
std
pause
jge
jle
aam
ficompl
gs
mov
xchg
and
sbb
xchg
lods
or
mov
in
je
in
mov
or
out
xor
adc
loope
adc
and
mov
lret
notb
xor
icebp
outsb
adc
jno
sbbb
lea
jb
mov
jae
lret
test
jnp
jnp
mov
push
test
push
add
cmpsb
mov
stos
std
orb
mov
mov
jnp
mov
xor
xchg
pop
repz
cld
jle
adc
xor
add
cmpsl
sbb
dec
mov
and
call
mov
inc
adc
and
int
pop
fnstenv
mov
pop
sub
mov
test
ja
pop
testb
push
xor
clc
leave
rclb
sbb
adc
sti
rclb
dec
int
out
push
in
or
outsb
fisubs
in
jns
add
mov
bound
jnp
push
nop
idiv
mov
add
scas
cmc
or
mov
xor
cmp
pop
push
insb
mov
push
sub
arpl
aam
arpl
bound
sub
andl
pop
mov
js
test
cwtl
cli
mov
and
dec
mov
inc
popf
pop
mov
ret
dec
cmp
lret
in
mov
int3
rcll
pop
repz
xor
inc
adc
mov
mov
loope
adc
fdivl
gs
xchg
and
inc
ror
es
mov
cmp
add
out
xchg
cmpsl
cli
jecxz
shrb
fdivrs
inc
sbb
enter
dec
fcompl
adc
add
push
call
or
push
and
fwait
and
pop
sub
adc
scas
inc
sbb
fmul
stos
pusha
jae
in
inc
jns
adc
fwait
inc
cmp
sub
inc
cld
push
mov
cltd
xchg
or
clc
iret
ds
lea
mov
mov
xor
jmp
daa
insb
rcrl
sub
icebp
roll
popa
popa
stc
inc
in
lock
fsts
xchg
jp
cmp
inc
aaa
fnstsw
ljmp
fidivrs
jle
aas
sbb
add
stc
pop
lahf
push
xchg
inc
stc
push
std
push
jbe
cmc
jnp
popf
fsubs
and
jne
sbb
out
sub
mov
add
xchg
iret
mov
add
mov
jge
les
adc
je
adc
aas
pop
sar
sbb
cmpsl
neg
pop
orb
in
add
shlb
jmp
dec
jnp
mov
test
jp
in
pop
les
pop
or
aam
dec
int
cmp
or
adc
or
lahf
mov
ljmp
pop
mov
sbb
sbb
int
inc
out
testl
bndstx
test
ds
loop
jae
shrb
push
add
cmpsb
mov
imul
pop
mov
out
and
je
sbb
adc
in
add
sbb
out
sub
mov
push
add
fldenv
push
mov
cld
and
into
mov
dec
inc
push
out
and
cs
stos
call
insb
xchg
rol
enter
repnz
or
cmp
mov
xchg
cmp
test
inc
inc
cmp
cmc
dec
fcomps
pop
and
push
int3
jl
pushf
dec
sbb
pop
gs
pop
loop
mov
jg
sub
faddl
pop
mov
pop
sbb
jge
fists
xchg
sbb
mov
mov
fcoml
and
test
dec
lahf
xor
inc
jbe
xor
outsb
mov
fs
xlat
push
testl
xor
in
cmpl
inc
push
mov
adc
pop
pop
jbe
dec
pop
dec
push
popl
xor
out
ljmp
cmc
xor
aaa
ret
xchg
andb
lods
sbb
cld
push
xorl
push
sbb
ror
xchg
shll
xchg
xchg
test
push
sbb
pushf
push
adcl
sbb
or
mov
mov
into
stos
je
imul
lock
mov
insl
sub
xor
test
cmpsb
jecxz
sti
enter
mov
and
fsubp
in
cs
fstps
call
mov
cmp
inc
cmc
inc
lock
addr16
icebp
pop
or
pop
add
mov
nop
adc
mov
in
ret
popa
jno
imul
cmp
aaa
sub
jae
pusha
sub
arpl
mov
sahf
icebp
push
fnstenvs
mov
jmp
pop
bound
loop
int3
je
add
lds
loope
jb
xor
xchg
sbb
int3
mov
mov
inc
dec
int3
adc
mov
jns
sub
lea
stc
inc
or
push
and
pop
push
insl
fsubrl
mov
sbb
jmp
clc
xor
out
xchg
aam
jmp
pop
and
and
into
push
xor
test
and
dec
mov
popf
lock
lcall
or
sub
mov
mov
imul
sti
out
shlb
adc
or
inc
lahf
js
add
repnz
fs
add
call
aam
cmp
mov
adc
mov
addb
sbb
enter
fwait
or
loop
test
bound
in
rclb
and
add
stos
fs
sti
cmp
cmp
sbb
or
inc
xchg
xchg
in
loope
cmp
xor
mov
dec
jbe
inc
out
jae
out
std
in
fsubl
je
push
lcall
sub
and
nop
mov
mov
xchg
sbb
add
negl
sbb
push
orl
mov
inc
adc
inc
push
subl
insb
dec
dec
outsb
jnp
jmp
lahf
cs
int3
cwtl
xchg
cmp
dec
jno
mov
mov
jg
mov
cli
push
aam
xchg
dec
pushf
call
pop
ss
shrb
dec
mov
dec
push
adc
lret
outsb
inc
or
mov
arpl
and
cltd
mov
in
js
mov
jnp
shll
mov
arpl
cld
jmp
cmp
lcall
scas
xchg
push
nop
and
push
popl
cmc
test
sahf
mov
add
push
in
xor
std
push
adc
add
shrl
cmc
sbb
dec
data16
and
shlb
jg
insb
cmp
test
cmpsl
xor
push
and
mov
decb
add
cmpsl
test
push
sbbl
int3
xor
sbb
mov
xchg
push
push
int3
dec
aad
ss
stos
in
jl
pop
push
add
data16
loopne
out
call
or
aaa
push
mov
clc
adc
adc
or
inc
jo
arpl
popa
movsl
filds
xor
add
shll
fnstenv
popf
xchg
nop
scas
mov
leave
xchg
push
es
sub
lcall
jno
dec
dec
shll
aaa
dec
pusha
das
sub
iret
mov
sbb
sub
pop
mov
push
add
scas
mov
movsb
inc
xchg
cmpsl
xor
and
sahf
pop
bound
repnz
fwait
push
jg
push
jb
aas
dec
out
das
outsb
push
lods
loop
push
jnp
adc
pop
mov
repnz
sub
mov
leave
lods
sbb
adc
push
divl
push
leave
int3
scas
daa
jle
sti
fisubrs
push
push
fs
std
cmc
movsb
mov
ja
xchg
and
popa
sbb
rorb
movsb
imul
pop
lcall
insb
xchg
cs
mov
rcrb
aam
fimuls
sbb
push
incb
out
jns
aam
out
mov
dec
adc
mov
call
out
iret
sbb
imul
enter
push
mov
pop
cmp
in
in
jmp
aad
cmp
fnsave
movsb
jnp
xor
loope
push
fistpll
mov
shl
adc
lret
shrb
loop
movsb
dec
fs
mov
pushf
push
loop
sub
add
mov
in
mov
xchg
mov
sub
jp
fistpl
jle
into
les
jl
dec
mov
cltd
in
scas
or
xchg
fmul
pop
mov
xorb
dec
int3
stos
inc
icebp
idiv
bound
sar
mov
sbb
dec
jae
sbb
sbb
lcall
faddl
sub
ja
mov
sbb
sbb
xchg
and
xor
test
in
out
push
iret
das
jno
cwtl
mov
inc
cs
jle
arpl
push
fnstenv
in
jecxz
clc
cmp
sbb
call
pop
add
lahf
movsb
sbb
push
aaa
xor
sbb
pop
dec
cmpsl
nop
or
iret
add
push
mov
cli
mov
in
ret
fistl
mov
cmp
xchg
xchg
xor
pop
outsb
and
into
sub
jne
jecxz
jmp
add
sbbl
leave
add
jge
or
mov
ljmp
cmp
cld
cli
lret
mov
xadd
repz
xchg
std
rolb
lcall
shrl
repz
cltd
mov
mov
notb
sub
xor
mov
xor
fisttpl
in
mov
mov
dec
sbb
mov
sbb
xchg
push
hlt
aas
ds
jbe
adc
mov
xchg
push
sti
mov
addl
push
xchg
leave
test
flds
mov
aas
and
popa
xchg
inc
sbb
scas
jbe
cld
xchg
es
movsb
adc
sbb
xlat
insb
mov
fisubrs
adc
xor
nop
fldl
adc
dec
rcrl
add
ljmp
lahf
pusha
data16
lock
xor
loope
outsb
fisttpll
pop
push
rcrb
push
pushf
or
dec
pop
test
scas
xor
gs
sbb
inc
gs
in
mov
pop
das
sub
sub
jmp
adc
jns
push
push
pop
es
inc
fdiv
ja
lahf
sub
adc
mov
scas
negl
push
mov
push
adc
inc
movsb
sarb
or
jne
aaa
sub
lret
iret
sbb
mov
insl
aaa
and
cmp
sub
push
les
scas
filds
outsl
dec
inc
scas
mov
aam
mov
rcrl
xchg
or
scas
mov
cld
and
or
cwtl
jecxz
fnstenv
sbb
xchg
sub
or
adc
dec
pop
jo
jbe
pop
fdivs
push
hlt
bound
xlat
mov
inc
jp
inc
ret
mov
mov
loop
insl
rclb
inc
fwait
lret
vpmaxub
mov
jl
add
insl
dec
ja
mov
pusha
fsubl
cltd
add
or
movsb
sbb
clc
jl
inc
or
push
imul
mov
sbb
push
divl
jb
fwait
je
jo
inc
repz
lds
push
pop
mov
mov
fs
mov
jle
fildll
and
or
insb
dec
rclb
mov
jb
pop
push
frstor
xor
pop
out
and
mov
ds
ss
lds
mov
mov
test
xor
out
nop
and
out
ss
das
push
push
mov
movsb
insl
jmp
aad
mov
in
mov
icebp
out
xlat
cmp
xor
cld
fistpl
repz
mov
test
push
movsl
push
cs
rcrl
sbb
xor
test
movsl
es
jmp
dec
pop
xchg
cmpsl
pop
test
aaa
mov
data16
and
stos
imul
sub
push
mov
int
pop
push
mov
outsb
shll
jmp
pusha
rolb
test
push
ss
mov
sahf
mov
pushf
inc
int
shr
push
jnp
mov
repz
stc
pushf
jae
jo
sub
push
gs
push
out
stos
mov
aam
jb
sub
sbb
sbb
sti
aas
loope
arpl
sub
in
dec
jb
nop
ljmp
repnz
push
dec
mov
mov
ja
aad
std
jne
pop
xchg
pop
sbb
ljmp
mov
fsubr
inc
shrb
rcrl
dec
dec
and
mov
mov
and
add
inc
push
dec
inc
in
jbe
into
dec
movsb
cmp
pop
cmpb
hlt
fstpt
adc
xor
sub
lods
gs
mov
xor
inc
scas
inc
outsb
jbe
or
ret
or
dec
daa
push
push
stc
data16
shll
sub
dec
dec
clc
xor
test
inc
dec
iret
mov
pop
scas
mulb
rorl
mov
outsl
shlb
cmpsb
ljmp
cmp
test
sbb
push
pop
cwtl
add
sub
pushf
into
inc
mov
shll
xchg
fdiv
lcall
cs
arpl
or
std
call
repnz
arpl
mov
lcall
adc
jae
pop
pop
mov
sbb
xchg
jno
and
std
inc
xchg
push
fstps
inc
push
jecxz
addl
cmp
dec
xchg
sahf
sub
push
daa
movsb
jbe
in
jmp
fisubrs
sbb
dec
stos
mov
xor
pop
sub
mov
xchg
mov
push
pop
fisubrl
in
or
mov
aas
inc
add
sub
sbb
lods
gs
nop
sub
lods
shll
push
iret
sub
lods
in
cmp
repz
movsl
fstps
shr
out
dec
mov
xor
pop
dec
jl
push
mov
mov
imul
add
sbb
push
mov
test
inc
jmp
js
repnz
pop
adc
std
dec
popa
lret
lods
in
cmpsl
cmpl
sub
xor
cmp
push
jb
xchg
xchg
lea
mov
push
insb
jnp
or
cmpsl
pop
ja
and
dec
pop
dec
lock
out
dec
pusha
aaa
mov
mov
xchg
test
fisttpll
jb
push
xchg
mov
daa
out
adc
sub
loope
push
lods
fstl
test
jo
lahf
cmpsl
lods
mov
pop
xor
sbb
rcrb
lock
inc
and
pop
adc
jnp
ja
jae
out
jne
popa
jo
bound
cli
es
pop
inc
scas
popf
js
cs
idivb
fidivrl
cld
dec
xor
add
mov
cltd
aam
add
fwait
jbe
rcll
dec
js
jno
int
inc
cmp
clc
fldenv
mulb
inc
or
jmp
sub
xor
rep
adc
push
sub
std
inc
sarl
outsb
outsl
sbb
jp
mov
mov
pusha
stc
jl
inc
push
jae
lea
push
xchg
xorb
fwait
cmp
pop
mov
sahf
out
adc
arpl
xchg
pop
xchg
mov
cmp
sub
int3
mov
mov
jae
dec
ficoms
mov
push
adc
out
sbb
xor
fxch
or
int
adc
inc
out
or
mov
xchg
in
into
jbe
jg
inc
jo
pop
cmp
aam
movsb
and
pop
in
in
sbb
loopne
out
push
cmp
pop
push
adc
push
inc
gs
mov
stos
fidivrl
add
popa
ja
adcb
sbb
xorb
call
pushf
cld
cld
fmuls
or
sbb
inc
jae
daa
test
aas
movsl
mov
movsl
or
mov
pop
mul
cmpsl
je
xor
or
test
fdivs
or
jmp
mov
sub
inc
loop
outsl
ja
mov
addr16
hlt
sub
mov
fisubl
push
sbb
inc
sub
inc
call
enter
repnz
cmc
pusha
pop
pop
and
cmpsl
or
mov
cltd
adc
mov
jne
cltd
xor
fdivrp
push
xchg
dec
and
xor
int3
subl
imul
loope
fs
iret
clc
rorb
mov
pop
sbb
mov
mov
imul
push
pop
pop
pop
popl
push
jae
adc
lock
push
fidivrs
inc
add
add
lret
push
sbb
cld
insl
jmp
jae
hlt
cmp
popf
fiadds
add
adc
xchg
das
gs
icebp
xchg
cmc
add
dec
lods
test
sbb
mov
je
sarl
out
inc
fsubl
dec
sub
filds
mov
pop
test
xor
sub
sbb
mov
lods
jo
ds
outsb
and
pop
popf
movsl
push
and
xorb
pop
pop
testb
dec
cmp
sbb
lahf
mov
add
cmpb
test
test
sti
adc
out
insl
cmpsl
insb
xlat
int
cli
xchg
sarb
test
dec
dec
push
enter
dec
stos
xor
sub
enter
fisubl
pushf
mov
pusha
int3
sub
add
in
in
push
mov
pop
repnz
jns
aaa
dec
mov
insl
shll
xor
add
in
jl
dec
sub
out
xchg
in
popa
iret
lcall
orl
mov
adc
js
iret
inc
mov
mov
jmp
icebp
shll
loopne
cmp
adc
push
outsl
in
push
pop
mov
dec
pop
xlat
sub
push
test
ljmp
scas
xor
pop
mov
lahf
sub
repz
mov
push
icebp
inc
dec
mov
cmp
jo
mov
in
outsl
int
mov
cmpsb
xor
cmpsl
xchg
imul
rcrl
inc
lods
ja
pop
mov
adc
dec
mov
xor
negb
mov
in
and
pusha
lret
adc
ds
mov
iret
stos
clc
andb
popa
cmpsl
jge
lds
fs
pop
xchg
mov
out
fnstenv
iret
in
pop
popf
xchg
int
imul
pop
cmpsl
ffree
ret
mov
ret
sub
inc
out
pop
xor
push
mov
lods
andb
cld
dec
xor
and
sbb
ret
add
dec
es
fistps
jns
fdivs
js
inc
mov
sti
inc
adc
dec
mov
mov
test
mov
test
xchg
jb
or
aaa
xchg
stos
arpl
data16
mov
sub
clc
dec
arpl
imul
rcl
test
xchg
sbb
sbb
dec
dec
mov
jne
mov
aad
dec
mov
xor
or
cmp
stos
dec
ret
dec
add
xor
mov
mov
test
in
or
pop
in
fs
push
dec
subl
int3
sti
jne
inc
clc
ret
addr16
fstps
and
scas
xor
iret
ss
adcb
mov
push
jl
popf
imull
out
out
cltd
jae
je
mov
mov
jns
dec
fsubl
cltd
add
scas
movsl
add
xor
je
sbb
lock
aam
mov
sbb
insl
cmp
mov
sbb
repnz
shl
repz
cld
jns
insl
mov
sbb
filds
mov
adc
jmp
add
push
lock
in
xor
js
rorl
xorb
out
pop
push
imul
cmp
lcall
in
xchg
lcall
push
adc
and
push
rcrl
clc
mov
mov
ljmp
xchg
addb
dec
cmc
in
add
cmp
inc
jmp
addr16
push
int3
ret
sub
repz
std
push
mov
ljmp
add
pop
ret
mov
push
mov
add
mov
inc
and
insb
mov
lahf
mov
cmp
adc
mov
xor
lea
pop
push
clc
adc
test
sub
lcall
cmp
push
ret
pop
sub
pop
jae
add
or
mov
mov
add
ss
sbb
dec
lahf
xacquire
jg
xchg
fmuls
jae
loope
jmp
fnstcw
scas
es
clc
mov
jne
outsl
push
cmpsl
enter
dec
les
repz
dec
xchg
cld
mov
inc
push
sub
or
stc
lods
pop
stos
lods
in
xor
ret
hlt
cld
jno
lret
addr16
sbb
ret
data16
push
push
or
mov
sub
sbb
ret
addr16
test
ret
gs
push
stc
jbe
js
ret
inc
mov
inc
cmpsl
addb
mov
add
cmpb
pop
hlt
aaa
addb
and
pop
or
mov
xchg
ja
loope
push
cmp
daa
and
insb
jg
mov
mov
dec
loopne
push
test
jae
xor
idiv
lahf
ljmp
pop
mov
jbe
push
dec
out
jl
pop
int
xor
xchg
xor
insl
mov
xchg
sahf
mov
inc
lret
insl
add
test
mov
mov
lods
insb
outsb
jne
repz
out
scas
push
pushf
int3
shrl
and
lds
xor
out
je
inc
call
scas
cmp
xchg
lcall
mov
stos
jp
or
dec
out
inc
and
mov
pop
sub
mov
jae
inc
leave
mov
mov
xchg
lret
ret
mov
lea
popf
jp
aam
lcall
lret
mov
inc
repz
int
mov
push
popa
and
push
inc
rcrb
negb
add
in
cmpsb
mov
jl
lret
inc
out
xchg
dec
inc
xor
dec
inc
pop
push
cmpsb
lret
or
pushf
cmpsl
adc
sub
push
iret
adc
lods
fsubrl
pop
out
cli
ror
sub
cwtl
lds
lea
divl
inc
inc
cltd
pop
mov
add
xor
push
jns
or
addr16
adc
adc
in
icebp
cld
dec
rol
sbb
mov
aam
pushf
repz
int3
push
or
js
sub
cwtl
jae
xchg
push
in
or
dec
addr16
cmp
test
lods
pop
push
push
rcr
mov
mov
jnp
mov
cmpsl
jne
mov
cmp
and
outsb
xlat
jge
mov
xchg
inc
out
sti
popa
in
mov
std
jb
push
in
rclb
lret
js
sbb
jns
nop
faddl
lods
fldl
add
dec
mov
xor
push
cmp
add
test
and
gs
lret
sub
cld
iret
les
call
lods
iret
jle
por
popf
lds
sub
mov
mov
roll
out
jb
lahf
fstpl
adc
xor
outsl
lret
mov
push
jae
popl
ja
push
push
sbb
cmp
popf
sbb
aaa
loope
in
add
cld
xorb
xchg
in
aaa
add
pop
gs
test
int3
stos
in
aaa
mov
ret
shlb
ja
iret
jecxz
mov
xor
in
adc
imul
sti
shlb
repnz
mov
pop
paddusw
and
cmp
push
inc
and
mov
sub
pusha
rcrb
jmp
test
mov
ret
pop
add
jle
shlb
sub
mov
adc
lret
popf
rcr
sbb
pop
mov
mov
mov
mov
scas
aad
pop
ss
cmp
out
subl
cmp
repnz
xor
rcrb
std
adc
mov
sahf
and
cld
add
iret
pop
andl
mov
jle
outsb
mov
mov
in
mov
push
dec
ljmp
mov
ficoml
call
fs
push
dec
repz
js
mov
or
lods
xchg
adc
jg
inc
jl
adc
adc
stc
sbb
inc
dec
mov
pusha
iret
adcl
scas
xor
mov
fisubl
fwait
mov
pusha
add
mov
inc
ljmp
mov
pop
stos
cli
jbe
add
push
es
jmp
addb
lcall
mov
jmp
mov
jmp
fistl
repz
xchg
enter
sahf
cmp
sub
or
mov
mov
pusha
sbb
je
xchg
inc
xchg
xchg
dec
jmp
rolb
ret
mov
int
scas
push
mov
pop
pop
cltd
add
sahf
jge
repnz
lea
andb
call
fisubs
outsb
xchg
pop
dec
push
ja
dec
push
fdivrs
mov
adc
mov
shlb
dec
add
dec
push
in
clc
dec
push
les
add
imull
xor
iret
in
push
mov
jnp
test
and
cmpsb
test
rolb
ljmp
adc
popa
into
ret
push
pop
cltd
frstpm(287
cmc
outsb
inc
pushf
jae
dec
cmc
inc
inc
loop
mov
sbb
mov
push
pop
mov
jne
lock
xchg
push
inc
lock
xorl
add
push
sbb
xchg
pusha
xor
or
shl
mov
cmc
jl
rclb
fs
enter
xchg
or
jecxz
loope
mov
xor
inc
ret
sub
inc
or
popf
or
xchg
out
ret
xor
dec
dec
adc
mov
mov
jg
jl
insl
sub
mov
xchg
out
mov
aam
or
jp
adc
popa
test
mov
or
ret
mov
test
std
ret
dec
xor
cltd
fstl
sahf
divb
ror
mov
icebp
xchg
or
pusha
mov
xlat
add
mov
lcall
mov
sbb
mov
lcall
fidivl
dec
jo
ret
lret
lea
mov
cs
xor
jo
inc
xchg
pop
hlt
loop
xor
push
push
arpl
lret
inc
ja
dec
in
inc
lcall
push
and
inc
ljmp
gs
mov
jb
jae
or
dec
rcl
jecxz
fs
lock
pop
in
xor
lret
cli
test
in
lock
popf
in
nop
outsb
cmp
into
dec
fiadds
fwait
iret
es
xor
add
repz
inc
push
inc
add
jmp
mov
mov
mov
scas
add
inc
and
subl
lcall
sti
gs
pusha
in
rcll
push
add
sbb
repz
add
push
sub
outsl
dec
add
push
jnp
mov
dec
cmpsl
sub
ljmp
dec
pop
mov
add
push
data16
std
push
dec
pop
adc
arpl
sub
lret
negb
xchg
orps
push
rorl
inc
mov
out
rcrl
xchg
rol
add
lea
daa
jns
pop
jns
imul
pop
lock
sub
movsb
cwtl
pop
dec
aad
xor
clc
stos
ja
cld
mov
pop
fdivrl
popa
lar
out
sub
pop
pusha
adc
adc
push
cmp
cli
jl
loope
daa
loop
or
mov
cli
push
aad
mov
or
sbb
les
stc
jb
push
adc
push
sub
lds
adc
int3
movsl
sub
ja
mov
sub
popa
inc
daa
outsb
cli
xor
pushf
inc
or
or
or
xchg
scas
addr16
add
push
in
test
hlt
aas
cltd
jnp
cmp
sbb
pop
add
mov
mov
arpl
xchg
push
and
in
xchg
fs
mov
dec
cmpsl
outsl
mov
mov
rolb
mov
es
cmp
jmp
adc
pop
mov
dec
in
filds
push
cs
mov
xorb
nop
push
mov
xchg
loope
adc
jl
mov
jns
ret
or
loop
ljmp
push
pop
mov
jp
jmp
add
xchg
cmp
ret
enter
fisttpll
int
mov
outsl
fs
clc
les
pop
mov
addr16
fidivl
sbb
mov
jecxz
mov
add
sbb
loope
adc
xchg
hlt
lret
movsl
dec
popf
and
mov
pop
cmpsl
vlddqu
push
rcrl
je
dec
mov
add
mov
repnz
je
in
cmp
fs
xor
cld
sbb
cld
push
inc
icebp
std
lods
adc
je
loope
inc
pop
mov
jb
out
xchg
sbb
lea
mov
icebp
sub
stos
mov
fdivrs
fstpl
dec
dec
int
nop
pushf
loop
and
rclb
loopne
cmp
in
mov
pop
cs
mov
pop
iret
jmp
xchg
and
inc
jg
shll
push
test
icebp
lods
lds
mov
add
jmp
mov
ljmp
push
in
sbb
pop
enter
xchg
or
mov
xor
pop
sub
sahf
fwait
mov
popf
or
xor
cmp
sbb
les
faddl
ss
push
push
pusha
cmpsb
js
mov
icebp
mov
idiv
test
aas
jmp
xlat
cmpsb
xchg
js
dec
mov
push
movsl
dec
cmp
or
mov
or
sbb
or
mov
ds
sbb
out
jbe
nop
lds
iret
jae
or
mov
sub
xor
dec
bound
push
push
mov
mov
push
and
lds
vpmacsswd
dec
js
adc
sbb
or
repnz
cmp
push
testb
adc
adc
data16
sti
sbb
xor
movsb
or
lret
adc
pop
mov
mov
dec
mov
and
adc
cmp
cs
test
jl
in
loop
xchg
lret
fcompl
adc
push
push
orb
jecxz
mov
je
sub
subl
mov
cmc
sbb
nop
lods
fsts
lds
popf
cmp
inc
dec
lret
mov
dec
adc
adc
movsb
adc
mov
inc
mov
or
push
sbbl
xor
fidivrs
xchg
pop
jmp
pushf
push
scas
test
mov
daa
hlt
mov
sbb
out
add
cmp
mov
mov
call
dec
sbb
shlb
dec
fbld
scas
aaa
mov
jmp
daa
and
loop
shl
cmp
dec
ret
int3
push
das
adc
cmp
repz
xor
scas
in
in
dec
and
push
ficomps
sbb
jbe
mov
pop
pop
pop
adc
xor
dec
xchg
aam
dec
dec
ljmp
dec
mov
xchg
pop
loope
adc
sar
xchg
jecxz
cmp
mov
minps
jecxz
movsb
int3
lahf
sahf
int
out
out
dec
movsl
cmc
add
daa
xor
cmc
xchg
sbb
inc
xchg
and
adc
xchg
iret
dec
mov
ror
xchg
or
jecxz
adc
or
and
adc
imul
push
mov
xchg
movsb
sbb
xor
or
xchg
push
and
repnz
cmp
jg
add
push
dec
lcall
mov
sub
outsb
add
arpl
push
xchg
sbb
dec
ja
fdivrs
dec
jo
dec
pop
jle
push
push
push
lods
ja
movsb
add
add
push
inc
aam
enter
fists
pop
lods
fs
xchg
lret
dec
fiadds
lds
push
fwait
xor
in
outsb
lods
mov
ja
mov
mov
mov
gs
add
push
jo
test
imul
arpl
das
pop
and
xchg
leave
inc
lds
push
and
sbb
lods
push
mov
mov
mov
mov
shlb
test
xchg
inc
es
cs
je
imul
or
popa
andl
push
mov
push
rorl
test
call
lret
jge
jg
sbb
in
lret
in
and
push
pop
daa
and
or
push
ljmp
and
test
lret
insl
sbb
jbe
or
jbe
cmp
inc
dec
push
pop
addr16
sbb
cmp
inc
pop
dec
jecxz
sub
xbegin
add
mov
push
insb
mov
out
popf
add
loop
inc
adc
xor
cmp
mov
jae
pop
mov
dec
jp
mov
fdivrs
xor
and
test
inc
bound
dec
sbbl
xchg
gs
fists
lock
jg
mov
jle
out
ja
mov
lods
cmpsb
dec
test
mov
enter
sbb
cmc
xchg
mov
inc
jecxz
mov
pop
xor
pushf
movsb
dec
pop
push
nop
inc
pop
aam
jmp
sub
add
adc
xchg
dec
mov
mov
adcl
push
cmpsl
rorb
mov
pop
das
push
push
popf
pop
jecxz
sbb
jo
adc
in
shlb
int
xor
fs
ds
outsl
inc
mov
loope
data16
fucom
push
pop
fs
adc
mov
fs
cli
enter
cli
js
jmp
jb
mov
inc
inc
jp
mov
imull
stos
mov
std
addb
push
ds
inc
imul
sub
movsl
pop
push
pop
int3
inc
mov
jo
dec
cld
jg
lret
inc
or
mov
cli
xor
les
popf
or
xchg
in
or
jae
cs
mov
int
std
repz
mov
add
jl
je
shrb
sub
inc
cmpl
cltd
lock
je
xor
iret
jb
lea
cmp
adc
lret
test
daa
ja
lcall
mov
rcrb
lods
les
fs
pop
out
and
cmpb
popf
out
sub
lahf
push
and
jnp
add
jmp
or
inc
add
add
mov
mull
aam
push
outsb
std
icebp
and
outsl
int3
push
lea
add
daa
jmp
cmp
push
lea
out
push
jp
pop
mov
adc
xchg
clc
xchg
mov
inc
test
adc
dec
xor
lret
lods
daa
inc
mov
push
ss
fdivrs
cmp
jmp
jnp
and
je
xor
sub
jbe
data16
iret
or
lcall
mov
movsb
xor
pop
jecxz
push
mov
sub
dec
xchg
sti
xchg
pop
lret
imul
hlt
sbb
mov
jno
push
das
movsb
loopne
aad
daa
push
out
divl
cmp
jnp
inc
cmpsb
aas
cmp
or
shll
cmpsb
popa
paddb
add
imul
mov
imul
ret
les
cmovae
and
ret
fadds
clc
mov
xor
into
mov
cmp
dec
push
pop
sbb
hlt
outsl
std
mov
std
shrb
push
lcall
sub
inc
mov
cmp
repnz
pop
movsb
xor
inc
sbb
aad
popa
sub
andl
addr16
lcall
jl
inc
dec
mov
add
std
xlat
not
iret
lea
and
into
push
add
shl
or
sbb
adc
aad
dec
jmp
mov
pop
aaa
pop
xchg
mov
cmpsb
inc
mov
add
push
xchg
dec
cmp
sti
repz
inc
sahf
add
pop
cmpsl
sbb
jl
jl
cmp
fs
sbb
mov
mov
pop
les
cs
ds
imul
lock
fsubrs
add
ficompl
push
and
imul
nop
test
ja
push
jle
inc
or
adc
lock
bound
mov
mov
daa
dec
push
in
add
xchg
stos
repnz
dec
pop
ss
pop
movsl
orb
jl
lea
lcall
or
and
pop
inc
or
and
jno
add
push
arpl
dec
dec
inc
or
mov
jmp
cmp
call
mov
jmp
cmp
andb
cs
mov
xor
cld
fildll
lcall
push
leave
jmp
and
mov
repz
inc
insl
dec
xor
jns
test
int
out
inc
aam
inc
push
mov
lods
lock
xchg
xchg
cmp
dec
push
addr16
scas
lret
push
mov
jno
mov
iret
imul
fwait
xor
push
js
in
lahf
pusha
gs
dec
mov
adc
mov
hlt
or
pop
mov
mov
lods
js
cwtl
stc
adc
cli
jmp
cmp
and
adc
call
scas
inc
lahf
or
das
stc
testl
movsl
push
xor
jae
ja
fs
lret
into
adc
int3
push
mov
mov
aas
pop
mov
test
fdivrp
add
adc
xchg
jmp
std
pop
das
dec
js
sti
add
popf
pop
inc
push
iret
jge
and
mov
jbe
xchg
mov
loopne
fisttpl
xchg
cmp
fisttpl
mov
and
mov
or
enter
fimuls
push
adc
into
addl
mov
inc
mov
jg
outsb
inc
sub
pop
xchg
int3
jno
es
jecxz
repnz
stc
aaa
xor
imul
xchg
ds
dec
rcrl
jle
jge
sub
mov
xchg
push
cli
jg
inc
or
or
add
sbb
adcb
jmp
ss
fildll
mov
or
or
cmpsl
xchg
sub
jp
pop
jne
sarb
inc
mov
das
sub
sti
hlt
insl
inc
jno
pop
xchg
push
fdivrl
or
xchg
xchg
xor
xchg
xchg
sbb
aas
movl
mov
fwait
and
add
inc
rol
lds
xor
cmp
sub
fldt
jo
xchg
leave
mov
pop
jle
lock
add
sti
ret
add
sub
cs
add
mov
subb
arpl
cli
stc
cmp
das
add
dec
push
stos
xor
xchg
fwait
rolb
les
in
lods
push
mov
push
xchg
jo
inc
mov
std
pop
loopne
pop
repnz
insb
jg
cmpl
repz
fistl
in
mov
ret
adc
ficoms
enter
inc
popf
cmp
fdivrl
sbb
sub
adc
sbb
ror
stos
rorl
pop
lock
test
dec
xchg
jmp
mov
mov
mov
mov
sbb
jnp
jp
stos
lahf
repz
rcrb
sub
push
xor
call
pop
add
jge
les
fisttpl
test
cmc
push
mov
cwtl
pop
gs
and
xor
mov
xor
insb
or
mul
pusha
les
mov
xchg
cmp
ds
or
stos
xor
jmp
and
jb
sti
sbb
shlb
cmpb
pop
xchg
sbb
stc
ja
leave
inc
xchg
shrl
cmp
popa
xlat
push
or
sub
mov
push
push
movsl
icebp
ja
mov
out
sub
stos
daa
dec
jmp
lret
push
add
popf
mulb
lods
js
and
repnz
sub
dec
aad
test
xlat
dec
hlt
push
out
xchg
clc
loopne
sti
pop
jns
js
in
cmp
outsl
add
fsts
push
jecxz
mov
subl
dec
lret
mov
sahf
and
push
cmc
jge
jecxz
leave
ficoms
jmp
lods
push
jge
inc
mov
sbb
pop
in
in
and
mov
mov
push
cmc
jns
pop
push
push
mov
stos
mov
pop
ljmp
lahf
lahf
sbb
mov
push
push
rorb
rcrb
mov
test
addr16
xchg
add
lods
bound
std
push
add
ss
fildll
mov
call
xor
pop
repz
test
push
fdivrs
dec
repnz
mov
mov
mov
int3
daa
incl
jo
enter
inc
xor
xor
push
lcall
mov
xchg
pop
lret
push
dec
pop
add
mov
fwait
jns
lods
mov
out
int3
lret
push
jle
cli
push
dec
mov
mov
rcrl
popf
imul
pop
xorb
jb
and
in
int
dec
das
enter
xor
arpl
stc
cs
jge
add
std
lahf
xlat
jle
aam
es
pushf
xchg
call
jae
es
into
xchg
mov
dec
mov
das
push
mov
hlt
je
xchg
sbb
in
std
push
imul
insl
cwtl
jge
sbb
out
clc
xchg
clc
cmp
lods
sbb
push
and
fwait
and
mov
xor
pop
daa
xchg
cs
shl
scas
jb
cs
cmp
pop
inc
das
and
ficomps
test
inc
std
mov
ss
mov
pop
test
cltd
add
cmp
push
scas
jp
jp
sub
xchg
and
fadds
jo
cld
pop
test
jo
push
or
xchg
dec
pop
fcomps
mov
xor
jge
mov
push
and
mov
sub
adc
sub
fisubs
xchg
pop
test
sub
pushl
mov
cmc
sbb
cmpsb
jp
fnstsw
ja
xchg
sub
add
and
in
or
dec
cli
lods
mov
xor
imul
rolb
ror
loope
and
outsl
bound
cmpsb
pop
mov
hlt
xor
outsl
xor
fs
or
cmpsl
xchg
fcmovbe
std
xchg
das
mov
cltd
dec
xchg
mov
ss
push
pop
pop
test
test
adc
mov
mov
xchg
call
jecxz
push
cmp
scas
cmpl
out
insb
add
pop
mov
lods
sub
add
stos
imul
adc
fdivrp
dec
mov
insl
xchg
mov
fucomi
test
shll
rcr
jne
rcll
adc
std
scas
je
pop
cwtl
jno
add
and
jle
mov
stc
xor
clc
dec
xchg
rcrb
adc
rol
loop
mov
sbb
movsb
enter
in
mov
addb
loope
xlat
rol
stos
mov
push
adc
pop
xchg
push
js
loop
or
push
ds
lahf
inc
movb
sahf
pop
fbstp
inc
pop
dec
xlat
in
mov
es
pop
pop
mov
mov
jmp
mov
add
out
popa
aad
cmc
ret
push
or
add
push
jp
nop
jmp
xchg
or
adc
cmp
and
insl
imul
adc
and
adc
fcmovu
clc
cli
mov
int3
or
imul
lcall
pop
jle
int3
adc
test
loop
iret
pop
xchg
jno
xor
imul
and
jmp
arpl
cmp
out
xor
add
stos
mov
push
imul
movsb
insl
sub
hlt
mov
rcll
sbb
mov
ret
stos
and
jbe
push
jle
dec
or
mov
sarb
push
mov
sbb
push
jle
xchg
pop
clc
imul
insb
or
les
push
add
outsb
jmp
mov
stc
xor
js
mov
xchg
out
rorl
negb
inc
cmp
lgs
and
and
xor
movsl
cld
xchg
mov
ja
push
arpl
lret
fnsave
mov
push
add
dec
bound
outsb
and
sti
inc
stos
or
je
jmp
xor
mov
es
std
adc
xor
insb
jno
filds
dec
arpl
sub
iret
xchg
cmp
mov
popf
mov
dec
lods
sbb
pusha
sub
divl
push
fisttps
add
xchg
adc
pop
int
out
xor
xchg
les
or
pop
loopne
sti
jecxz
dec
scas
push
lahf
mov
mov
or
aam
push
sub
cmc
stos
jmp
test
cmp
into
daa
andb
loop
inc
lods
inc
je
inc
sbb
jecxz
scas
cmpsl
lret
pop
push
imul
jl
push
jg
stos
cmp
test
imul
mov
pop
fcoms
jp
mov
lcall
aam
xchg
sbb
hlt
hlt
sub
and
mov
std
push
lahf
mov
dec
jbe
jnp
pop
xchg
push
imul
iret
jnp
add
mov
jmp
jecxz
pop
leave
cmp
xchg
jge
nop
int3
pop
adc
aad
stos
mov
fdivl
xchg
adc
pop
xchg
sbb
push
bound
std
lods
pop
sbbl
sbb
mov
lods
pop
lods
in
xchg
adc
cwtl
mov
add
xchg
pop
cmc
jnp
lahf
push
lcall
pop
cmp
andl
aas
xor
adc
mov
loope
xlat
test
inc
ret
ret
std
fsubrl
arpl
aaa
in
mov
cmc
cmp
ja
popf
insb
jmp
add
dec
std
out
pop
mov
incb
dec
or
push
or
fildl
jmp
or
notl
repz
dec
aaa
cli
push
bound
dec
das
popa
add
or
cmp
push
cmp
mov
test
pop
shrb
clc
or
nop
adc
inc
sbb
movsb
push
dec
jno
jno
loope,pn
lods
movsl
jne
inc
lods
add
shrb
adc
jnp
xchg
xchg
das
or
bound
and
lea
popf
sbb
or
test
ret
fdivrl
stos
test
xchg
ret
pop
jp
inc
fldenv
ret
ss
ret
cld
jl
or
dec
adc
loope
int3
pusha
dec
or
sahf
repnz
testl
incb
cmp
dec
jecxz
loopne,pn
xor
test
mov
sbb
mov
dec
es
add
jge
daa
hlt
xor
in
adc
mov
movb
in
fnstenv
prefetchw
or
clc
dec
cltd
push
int3
mov
in
xor
cmp
dec
ds
es
mov
and
xor
out
mov
incb
inc
xorl
xchg
jg
jp
lcall
adc
mov
imul
cmp
daa
int3
pop
jmp
push
sub
lods
loopne
xchg
add
sbbl
leave
sub
jge
fdivrp
push
cmp
or
js
jns
jno
repnz
push
xor
push
dec
into
sub
dec
gs
cs
in
dec
lds
mov
and
into
inc
push
cltd
clc
je
scas
push
jg
mov
jmp
push
iret
inc
popa
inc
and
cld
inc
outsb
scas
pop
mov
mov
push
scas
or
xchg
mov
jbe
xchg
and
jnp
sub
icebp
xchg
test
push
and
ds
daa
je
jmp
cmp
pop
xchg
xchg
js
fisubl
out
mov
lret
mov
xor
fnstenv
xchg
ljmp
stos
sub
jbe
add
leave
add
pop
mov
jp
into
dec
ljmp
sub
inc
push
xchg
dec
nop
jle
add
pop
sub
or
jecxz
cmp
mov
arpl
jg
inc
jno
gs
lcall
jl
in
hlt
and
adc
lods
repz
fwait
and
js
std
jmp
jl
sbb
xchg
xor
mov
mov
add
ret
and
imul
jo
pop
push
push
mov
add
je
xchg
push
jno
mov
sbb
popf
je
sahf
or
jmp
cmp
and
ss
add
in
add
insl
fistps
arpl
mov
jp
int
mov
cmp
or
pop
adc
xor
push
lods
sub
xchg
push
adc
shr
insb
bound
popf
cmp
mov
add
jns
pushf
xchg
jle
cmpsb
xchg
dec
fs
out
xchg
rclb
xor
mov
insl
xchg
addr16
add
cmp
sti
pop
loope
mov
mov
mov
pop
inc
mov
mov
inc
mov
cmp
and
fsubp
aad
adc
int3
jl
xchg
aas
push
cli
dec
lock
and
mov
push
mov
mov
mov
xor
outsl
cli
inc
int3
push
xorl
popf
gs
jb
aas
inc
xchg
sub
mov
jnp
shl
xor
negb
mov
and
xor
xchg
fsubs
pop
sub
and
cmpl
mov
test
pop
jle
sbb
dec
imul
mov
out
dec
lods
dec
mov
mov
js
mov
outsb
fs
negl
jno
mov
xor
enter
adc
xor
cli
subl
and
test
xor
fnstenv
mov
pop
repz
ret
ret
dec
jne
xchg
outsb
push
sbb
push
pop
jg
int3
pop
mov
xchg
xor
pop
rcr
pop
adc
mov
sbb
adc
test
mov
mov
loope
push
stos
int
xchg
loop
xchg
jae
push
es
jmp
imul
test
ret
sbb
leave
or
mov
stos
jbe
inc
lods
sbb
pop
imul
pop
cmp
lds
xor
adc
sub
loopne
lret
pop
and
xchg
sbb
xor
jle
cwtl
cmpsl
mov
sbb
test
jg
mov
lcall
mov
add
insb
sbb
fwait
jne
dec
cmp
xchg
mov
popf
mov
in
adc
sub
mov
lock
pop
lcall
xor
xchg
lea
cmp
inc
mov
sub
sub
in
inc
les
cmp
std
mov
mov
lahf
aaa
stc
xchg
notb
stos
xor
xchg
test
into
scas
mov
fidivrl
xor
in
movl
hlt
add
cmpsb
out
out
mov
inc
jp
sub
int
loopne
test
cs
rorb
mov
leave
pushf
outsl
ss
ror
fisubs
dec
dec
sarl
dec
xchg
out
jnp
push
xorb
loope
leave
aam
mov
xchg
sub
mov
loope
stos
sub
and
pop
mov
int3
xchg
data16
cs
and
inc
add
sti
lds
nop
cmp
pop
mov
mov
sub
pop
sar
mov
xchg
dec
es
out
dec
add
sbb
or
xchg
pop
in
mov
adc
insb
ffree
les
fmull
adc
sahf
cmc
xchg
stos
mov
js
mov
or
insb
jno
lahf
ret
popf
pop
push
leave
std
pop
or
cmpsl
je
xor
inc
jne
jnp
insb
lcall
cmpsb
pop
iret
pop
adc
cmp
and
mov
out
adc
jmp
sbb
sbb
push
ret
pop
pop
sub
rolb
sub
sbb
mov
push
mov
cltd
jo
mov
int3
insl
jo
adc
push
push
je
and
mov
es
js
enter
ds
xlat
dec
mov
shr
dec
cmp
sbb
testl
add
dec
std
jnp
scas
clc
test
test
sbb
xor
loope
enter
xor
je
or
scas
das
inc
xor
sti
sbb
int3
xchg
je
cmp
cmp
loopne
inc
adc
inc
mov
adc
dec
out
adc
cmp
test
mov
mov
cmp
stc
xor
rolb
mov
loop
xor
mov
cmp
pop
popf
jns
cwtl
cltd
mov
gs
and
outsb
dec
cmp
dec
dec
xor
cmp
adc
popa
add
gs
xor
inc
mov
jge
adc
jge
out
or
daa
sub
lret
xorb
test
imull
lds
cmc
add
xchg
dec
sbb
rcll
movsb
iret
out
cmc
fisttpl
mov
sub
xor
dec
and
sub
sub
or
mov
jle
movsb
jnp
cmp
push
dec
xor
ja
xchg
call
movsb
sbb
sti
xor
and
pop
dec
mov
inc
cmp
jb
push
sbb
test
out
fwait
bound
out
mov
push
gs
std
adc
and
daa
push
out
ja
adc
lea
test
imul
jl
gs
popf
inc
adc
das
sbbb
mov
and
sub
jno
loop
dec
sbb
push
mov
and
movsb
cmp
jl
mov
sti
mov
out
and
mov
dec
pushf
pop
mov
inc
lea
idivl
pop
int3
mov
adc
sbb
fcmovnb
fcmove
and
pusha
loope
loop
fimull
jmp
inc
xchg
call
mov
xchg
add
aas
cs
ss
out
sub
push
pop
ljmp
fmull
sbb
popf
push
add
pop
push
sbb
push
ds
mov
into
jecxz
and
cld
test
push
sub
xor
aaa
outsl
xchg
fmuls
dec
cltd
fsubs
and
outsl
push
bswap
lea
mov
mov
dec
mov
jnp
xor
push
pop
sbb
dec
or
clc
std
int3
dec
je
mov
sbb
scas
lret
out
push
mov
and
push
shrb
pop
inc
sbb
psllw
ffreep
pop
sti
inc
mov
lret
mov
pop
aas
fwait
mov
and
xchg
dec
mov
xchg
test
xor
xorb
and
andb
pop
push
insl
rcll
mov
dec
leave
cmp
adc
push
int3
mov
scas
repnz
mov
imul
popf
fisttps
stos
mov
pop
inc
ljmp
fcmovnbe
mov
sbb
mov
popa
xor
push
lret
std
mov
inc
mov
nop
xchg
mov
les
loop
dec
std
stos
sub
rcll
out
push
push
fwait
xor
add
pushf
aas
xchg
add
insl
data16
fstl
xchg
test
repz
out
xchg
daa
aas
or
in
cltd
mov
mov
inc
test
pop
lock
mov
adc
push
mov
mov
mov
inc
out
jne
ret
leave
lahf
pusha
jno
xchg
mov
dec
enter
ss
out
arpl
gs
or
rcl
push
inc
jp
orl
jle
mov
test
and
into
iret
and
sbb
lods
mov
cmc
lahf
jbe
dec
add
pop
jb
pop
fs
add
and
les
xchg
shll
aaa
fmuls
mov
ja
inc
push
xor
jo
je
cmp
mov
cmpsb
cmp
clc
mov
mov
dec
sti
dec
jle
add
sahf
push
and
daa
lods
push
cmc
adc
in
and
cmpsl
xchg
jg
push
inc
mov
cs
xchg
pop
lods
cmp
cltd
add
ret
jmp
dec
pusha
pop
push
pop
mov
sbb
addr16
inc
neg
repz
cwtl
sbb
ljmp
mov
clc
psllw
ljmp
jb
int
xchg
xor
pushf
push
notl
pusha
movsb
ja
mov
aam
jbe
fnsave
movsl
jbe
inc
sbb
in
mov
dec
xchg
lret
mov
stos
inc
adc
insb
out
push
xor
pop
stc
mov
xchg
pop
pop
sub
repnz
ljmp
cmc
push
fldl
jbe
jno
xchg
push
cmp
aaa
cwtl
xchg
shr
int
and
or
jae
pop
xor
add
mov
pop
loopne
and
daa
repz
mov
mov
add
clc
cmp
lock
mov
mov
jl
dec
std
cwtl
xchg
mov
sbb
mov
in
fdivl
inc
adc
adc
sub
fs
inc
jns
and
xchg
in
leave
gs
xchg
xchg
xor
xchg
lds
insb
dec
or
cmp
inc
sbb
sub
sbb
mov
in
push
inc
jle
push
sti
stc
jmp
rcrb
xor
insb
jg
dec
jg
int3
pop
inc
xchg
sarl
push
jnp
in
cmp
dec
fmuls
jle
test
es
pop
xchg
ds
and
or
inc
fwait
lcall
inc
xchg
push
movsl
fiadds
je
mov
sub
cmp
dec
inc
test
subl
adc
int3
fnstenv
xor
sub
dec
jmp
pop
lea
jbe
ss
test
add
arpl
aad
mov
in
inc
add
pusha
out
xchg
test
pop
iret
fistl
push
add
inc
xor
enter
jnp
cmpsb
sahf
lods
jl
cwtl
pop
mov
pop
push
pop
xchg
test
pop
out
push
imull
push
aad
dec
rol
cld
ja
loop
rclb
lods
or
enter
das
or
call
mov
cli
cltd
jbe
cwtl
jns
sub
jmp
ret
imul
mov
or
xor
inc
or
cltd
mov
xlat
adcb
push
and
out
lods
jge
mov
sbb
testb
mov
sbb
fisttps
jl
ret
jo
cmp
push
mov
and
mov
mov
xchg
repz
push
mov
outsl
popf
es
dec
push
mov
int3
mov
fcmovb
inc
notb
and
shlb
insl
sub
movsb
int3
fsubs
mov
aaa
scas
ja
xor
sbb
lods
gs
in
xor
in
cld
fldt
iret
cmp
dec
leave
popf
mov
fnstsw
adc
add
push
sbb
inc
jbe
lods
test
pop
and
pop
dec
pop
dec
push
jle
insl
pushf
movq
stos
clc
or
jmp
fiaddl
ret
jb
lcall
pusha
loop
mov
cmpl
mov
cltd
data16
xor
xchg
btr
pop
cmpsl
xchg
les
fbstp
lds
ja
sub
mov
push
mov
aad
imul
sub
sub
pop
out
cmc
inc
out
pop
stc
dec
xlat
mov
fiaddl
pop
repnz
rorb
pop
negb
xchg
push
adc
add
xchg
pop
inc
shrb
lahf
push
out
adc
mov
arpl
mov
in
and
mov
mov
inc
aas
dec
imul
iret
clc
ss
push
pop
sub
in
cmp
inc
test
push
arpl
lret
sub
mov
push
sahf
rclb
add
iret
popf
loope
sbb
ds
mov
push
aaa
dec
or
into
add
daa
mov
xchg
cmp
in
int
sub
mov
mov
push
ret
xchg
inc
sub
sbb
xchg
sub
imul
cmp
pop
push
jecxz
test
leave
movsl
outsb
sbb
cmp
or
cwtl
movb
dec
incl
cld
and
sbb
test
pop
enter
adc
lret
aam
loopne
shrl
mov
addr16
inc
jns
or
mov
mov
int3
clc
mov
loop
test
arpl
pop
jl
and
or
insl
lds
push
mov
sti
movsl
inc
ljmp
test
movsb
sbb
les
fsubrl
adc
cmp
mov
pop
icebp
shlb
aas
mov
cmp
push
cmp
pop
test
aam
mov
shll
mov
addb
xor
in
or
std
jge
and
xchg
rcrb
loopne
flds
rclb
inc
fistl
push
enter
pop
mov
or
data16
sub
daa
jmp
outsb
xor
jne
cmp
insl
push
ljmp
stos
adc
into
or
stc
sbb
jbe
sub
jae
mov
sub
xchg
pop
add
and
movsb
push
fadds
mov
popf
adcl
fsubrl
jle
adc
or
mov
push
mov
movsb
xor
adc
push
mov
add
fucomi
pop
push
add
or
mov
dec
mov
push
cmpsl
pop
leave
push
stos
xor
icebp
sbb
dec
add
xchg
pop
or
xchg
cmc
xlat
push
adc
addr16
cmp
push
stc
push
mov
push
popf
roll
pushf
push
jl
xchg
es
fisubrs
in
mull
lcall
divl
jge
dec
jb
sbb
dec
mov
dec
aaa
lret
sub
hlt
mov
mov
mov
sti
cmp
lods
xchg
mov
xchg
in
dec
in
sub
or
push
ffree
fnsetpm(287
dec
imul
jo
enter
mov
adc
mov
mov
sub
loopne
sub
enter
je
pusha
jno
xchg
jl
jge
repz
out
lods
push
sahf
adc
repz
push
lret
outsb
scas
and
popf
and
pusha
ss
lcall
repz
mov
cmp
jecxz
mov
mov
jge
sbb
pop
mov
push
dec
mov
dec
test
mov
pop
notb
out
das
jne
mov
test
cmp
testb
or
sbb
sbb
scas
pop
hlt
sub
or
sahf
sbb
pop
mov
mov
cmp
push
xchg
push
mov
ljmp
aas
nop
mov
test
push
dec
cmp
mov
add
mov
adc
xchg
cltd
add
pop
adc
ss
mov
pop
jle
inc
ljmp
fucomip
cmp
xchg
data16
or
jb
dec
and
lcall
and
dec
pop
cmp
push
aad
in
push
mov
xchg
sub
pop
mov
and
push
push
adc
ss
or
add
sub
cli
insl
stos
dec
jnp
in
sub
add
pop
mov
pop
inc
and
dec
push
sub
mov
mov
lock
scas
data16
insl
rcl
sub
enter
outsl
pop
nop
push
loopne
sub
sti
mov
fdivrs
notb
inc
imul
gs
idiv
cmp
in
jns
fwait
add
mov
jmp
inc
add
ds
pop
mov
push
mov
je
loop
insb
pop
or
out
jae
dec
insb
fidivrl
fmuls
lock
cmp
pop
in
ret
clc
test
inc
fcom
inc
adc
jno
mov
nop
in
pusha
test
cmpb
xor
add
pop
dec
mov
xchg
rcll
data16
sub
xchg
rorb
pop
or
arpl
sub
insl
or
sti
dec
add
iret
int
bound
inc
out
loop
inc
inc
rclb
call
inc
mov
pop
cmp
aam
repnz
sbb
shll
ds
je
rcrb
repnz
push
jo
and
stc
sbb
sub
sbbb
inc
inc
icebp
push
xor
out
aam
or
mov
aad
push
mov
add
xchg
aam
push
js
mov
gs
or
jmp
pop
dec
or
pop
scas
adc
movsl
fildl
or
mov
inc
adc
cmp
movb
cmp
stos
stc
push
mov
js
js
in
jne
inc
loopne,pt
xor
inc
outsb
popa
and
pop
push
jmp
data16
cmp
push
jb
lods
in
sub
lock
push
repnz
mov
pusha
push
fisttpll
pop
inc
mov
mov
movsl
push
push
pop
sub
ds
inc
lea
shl
ret
or
adcb
xchg
les
sti
scas
push
mov
xchg
push
jno
adc
jns
mov
loopne
inc
pop
leave
mov
jle
ljmp
mov
push
pop
pop
dec
icebp
cltd
dec
push
not
inc
in
dec
mov
mov
fnstsw
shll
adc
flds
rcrl
cmp
aaa
lds
pop
orb
insl
enter
icebp
xorl
fwait
leave
or
and
jnp
js
jno
adc
adc
mov
test
into
push
or
inc
mov
adc
xchg
jmp
ljmp
insb
shll
xchg
cmp
or
push
testl
add
push
cmp
lret
or
std
push
test
xchg
rcrb
pop
adc
add
enter
call
sarb
adc
or
scas
dec
test
out
and
push
das
movsb
mov
mov
xor
dec
mov
repz
dec
jae
imul
in
push
mov
movsl
pop
loop
or
rcrb
inc
sub
inc
sti
int
out
mov
xor
popa
sub
and
fs
mov
call
daa
les
xor
sbb
jg
dec
mov
pop
mov
popa
sbb
mov
aaa
ljmp
mov
les
jns
clc
inc
and
xchg
clc
adc
fnstenv
jl
adc
rclb
or
mov
outsl
shrb
arpl
xorl
or
in
mov
into
dec
mov
loopne
push
xchg
aaa
mulb
mov
in
inc
test
inc
cmp
and
fiadds
pop
ds
pop
outsl
add
lret
mov
addb
jo
jbe
push
push
and
insb
rorb
push
lahf
insl
call
push
mov
sub
sbbl
or
jbe
andb
in
repz
syscall
lods
dec
xchg
inc
aam
mov
fcoms
mov
rol
jecxz
je
std
ja
mov
adc
int3
std
adc
sub
mov
repnz
push
jecxz
or
cwtl
push
xchg
push
int3
test
inc
test
gs
pop
fdiv
dec
sbb
dec
cli
scas
and
outsb
xchg
loope
mov
jbe
sti
les
jge
stos
pop
xor
call
fmull
out
mov
jae
in
dec
cs
sbb
mov
inc
sbb
cwtl
mov
test
jge
jbe
icebp
ss
push
or
fidivl
sub
cmp
jle
hlt
mov
sbb
dec
dec
lds
sub
pusha
gs
test
xchg
mov
mov
sub
sbb
and
sbb
push
fsubr
jbe
pop
js
scas
sub
das
js
cmp
cwtl
lcall
mov
push
lea
jge
outsb
mov
fstpt
movsl
xor
pusha
std
xor
inc
cld
mov
pop
iret
sbb
sbb
stos
std
dec
xchg
jo
lds
pop
sbb
sti
push
imul
fs
pop
sub
shlb
cmp
lods
scas
lahf
or
xchg
jbe
mov
scas
mov
xor
testb
sbb
popf
in
mov
shll
iret
ljmp
sbb
adc
push
fs
ljmp
in
fldenv
pop
xchg
xchg
mov
jne
nop
fildl
lods
pushf
sarb
mov
xor
loope
fwait
rcr
fldl2t
test
ret
mov
int
xor
jnp
hlt
fyl2x
fcmovnb
stc
mov
mov
fsubr
lods
xchg
movsl
fldl
clc
mov
fnstcw
cmp
cmp
stos
cmpsb
rcr
lcall
bnd
cmpsl
mov
daa
pand
in
fdivrl
add
or
aad
mov
mov
pop
stc
dec
movsl
std
xchg
xor
push
xchg
je
shlb
push
cmpb
daa
mov
adc
jmp
mov
pop
add
cltd
adc
mov
cmp
jge
aaa
pop
push
add
mov
push
cmpsb
arpl
icebp
xlat
mov
mov
xchg
mov
ss
fmuls
inc
aam
cmp
adc
xchg
or
pusha
test
dec
adc
or
daa
jl
ss
shrb
cmp
cmp
adc
jne
fistpll
adc
xor
pop
insl
pop
mov
popa
out
sub
inc
xchg
test
cmp
test
adc
jp
ret
dec
and
lods
lret
mov
xor
lahf
inc
int
sub
test
lds
outsb
ljmp
out
xchg
cmp
xor
pop
xlat
iret
ss
psraw
andb
movsb
or
dec
xor
pop
mov
push
cwtl
pop
add
add
scas
ret
xchg
lret
push
mov
ss
cmpsl
in
mov
sub
aaa
sub
out
in
dec
add
cmp
jb
frstor
cmp
pop
fildl
cmp
rcrb
dec
testb
leave
mov
cmp
jge
repz
dec
popa
and
out
into
movsl
cld
pushf
es
pop
inc
lods
rcrl
sbb
enter
ds
jmp
cli
es
push
add
push
xor
mov
in
or
cwtl
pop
jbe
daa
xor
add
sub
das
push
inc
aas
insl
lods
cmpsl
fbstp
std
pop
enter
lds
mov
mulb
cltd
aam
fs
mov
jae
fisubl
dec
and
sub
cld
push
xchg
lahf
mov
push
pop
and
pop
ja
mov
fs
repz
lods
popa
xchg
fdivl
rolb
mov
cli
pop
scas
mov
inc
bound
push
lea
movsb
pop
enter
jnp
gs
pop
jg
mov
fidivrs
imul
out
adc
out
sbbb
stos
sbb
aas
or
mov
add
jmp
stc
xchg
jae
scas
adc
push
mov
js
fcoms
pop
pop
imul
fcmovnb
pop
test
daa
mov
push
mov
mov
add
inc
mov
mov
movsl
mov
das
dec
into
mov
add
test
in
xchg
adc
aas
pop
in
cltd
es
push
sub
test
jnp
popa
fisubrl
dec
xchg
jecxz
aad
cmp
or
cmpsb
mov
xorb
gs
icebp
cmp
out
push
mov
sub
mov
push
fs
adc
cmp
or
and
in
sti
inc
in
xchg
ffreep
lret
jg
inc
push
pop
dec
cmpsl
aaa
cli
pushw
jmp
cmpsb
adc
dec
pop
addr16
in
xor
cmp
lcall
pusha
insl
mov
icebp
jle
inc
subb
sub
xchg
push
je,pn
je
sub
rcrl
mov
dec
cmp
dec
shll
push
test
fistl
push
push
ret
cs
cwtl
sti
gs
or
xchg
scas
inc
add
jnp
test
adc
iret
xchg
sarb
adc
jne
and
not
adc
imul
data16
or
aad
rclb
or
mov
or
outsb
es
push
push
xchg
sarb
pushf
sbb
cmp
fxch
int3
sbb
sbb
sahf
in
leave
arpl
addb
iret
sub
push
lea
sbb
inc
stc
xchg
out
loopne
dec
jg
jmp
sahf
nop
cmp
add
lods
and
cmpb
pushf
dec
mov
mov
js
movsb
and
cmpl
shrl
std
adc
mov
xor
fsubs
push
xchg
xchg
dec
imul
movsl
sbbl
cmc
jl
mov
popf
adc
add
add
xor
and
mov
jmp
gs
mov
cmpsl
ret
test
sti
out
pop
push
movsl
lret
dec
movsb
cmpsl
sbb
scas
mov
cmp
or
packssdw
inc
fldt
mov
dec
add
mov
sub
jnp
cmc
mov
ret
or
mov
add
xchg
xor
push
scas
mov
jge
insl
push
or
inc
into
std
and
int
mov
sarb
call
insb
add
mov
fdivs
lods
mov
push
stc
push
push
movsl
inc
test
mov
cwtl
jbe
mov
jl
or
popa
xchg
jae
xor
lock
adc
stc
inc
sub
call
or
mov
or
push
push
or
dec
push
pop
in
push
movsb
lahf
add
arpl
inc
seta
sahf
pop
fmull
mov
push
loopne
or
xchg
lret
pop
jns
and
out
mov
loope
jnp
repnz
lcall
pusha
pop
aas
push
ljmp
mov
fs
mov
push
gs
pop
sub
aad
testl
rcrl
push
jl
je
dec
test
lea
orb
test
cmpsl
pushl
shl
icebp
loopne
add
and
aad
xor
sbb
sub
inc
ret
aad
nop
loop
mov
aam
std
pop
lods
lcall
out
out
call
loopne
add
sbb
xor
or
mov
xchg
fnstcw
hlt
sub
jge
mov
inc
ja
data16
push
and
push
sub
dec
sub
mov
out
sbb
xlat
test
outsl
pop
out
jg
cmp
repz
cli
xor
jmp
data16
pusha
outsl
push
mov
scas
cmpsb
insl
in
mov
jl
jmp
enter
sahf
adc
jbe
mov
add
lea
fstpt
cli
jae
sbb
cwtl
leave
jb
push
cmp
addr16
mov
jo
inc
sub
lret
jae
dec
fdivrp
repnz
jmp
ds
push
cmp
dec
sbb
lds
ljmp
mov
sub
dec
fmulp
mov
push
pop
and
or
push
adc
sti
jb
pop
xchg
mov
daa
sbb
pop
sbb
dec
imul
jnp
daa
ret
jae
out
rorl
jns
hlt
les
pop
mov
jl
pop
jo
jmp
lods
push
std
sub
jl
movsl
fsubs
negl
and
mov
test
sub
mov
rorb
dec
pop
and
pushf
jecxz
fcompl
outsb
or
icebp
adc
rcrl
or
cmc
ret
cli
ffree
push
add
add
pop
test
test
xchg
adc
jle
in
jecxz
adc
repnz
jge
or
ds
movsl
loope
popaw
in
fcomps
push
call
repz
loope
into
in
dec
and
arpl
call
dec
push
push
xor
mov
cwtl
jbe
and
jne
mov
add
out
pop
icebp
jae
adc
mov
push
and
push
sbb
or
sub
xor
test
leave
cmp
mov
cmp
les
dec
push
xlat
jae
testb
sti
je
ja
and
out
jg
inc
sbb
jae
out
fwait
clc
or
pop
movsl
mov
fldenv
mov
ret
or
cltd
arpl
jno
dec
shl
popa
repnz
inc
dec
inc
arpl
mov
andl
fnsave
lods
jmp
in
pop
add
out
das
xchg
pushf
insb
out
data16
imull
dec
push
sbb
dec
jbe
sahf
pushf
stos
rclb
sub
rclb
xchg
cmpl
jns
mov
jmp
pop
inc
insb
cmp
adc
jp
int
push
insb
jp
mov
mov
mov
adc
sbb
cli
in
pop
add
xorl
sub
repz
mov
or
fistps
add
xor
cmpsb
pop
pop
shlb
dec
xor
outsl
test
mov
and
jae
leave
hlt
add
sub
es
es
sbb
inc
clc
pop
int
call
xlat
inc
pop
xor
and
idivb
jno
xorb
dec
popf
movsb
sbb
mov
ds
out
imul
mull
inc
cmpsl
fcomps
mov
and
test
pop
mov
movsl
out
push
mov
xor
mov
mov
aam
cmpsb
fidivrs
sti
push
cmp
dec
mov
rcrl
lret
add
fsincos
cmp
gs
call
pushf
cmp
sarl
pop
ds
cmp
fstps
iret
pop
xor
and
dec
jae
leave
or
iret
dec
mov
int3
jle
sub
add
mov
xor
jae
fcomip
scas
sbb
push
xchg
out
xchg
stos
inc
push
sbb
in
icebp
xchg
into
iret
lret
cmp
or
mov
push
rcll
jp
hlt
jg
mov
je
pop
adc
imul
xor
aas
sub
cmp
sbb
adc
push
cmp
sbb
cmpsb
stos
push
mov
adc
xchg
imulb
push
add
mov
repz
fisubs
xchg
sub
fs
push
xor
enter
or
pop
lret
mov
xchg
aaa
es
lock
or
lret
or
pop
in
lds
or
xchg
sub
gs
jae
js
sti
daa
mov
xchg
outsl
into
shll
inc
or
mov
adc
adc
sahf
fs
jns
sbb
pop
push
mov
nop
rclb
daa
adc
je
sub
ja
sahf
adc
roll
cld
popa
fucomi
scas
int
cs
jb
iret
movsb
gs
cmp
push
jecxz
cmpsb
mov
jo
push
je
push
enter
mov
cltd
mov
fdiv
jno
call
xchg
adcb
xorl
dec
and
jmp
pop
shll
inc
inc
sbb
xor
scas
adcb
fmull
xchg
loopne
push
mov
add
test
push
xor
cmp
std
cmpsb
xchg
shlb
sub
pop
jle
add
mov
jmp
lods
push
mov
int
js
mov
stc
xchg
push
mov
or
mov
dec
pop
sub
cltd
and
push
pop
hlt
popf
faddp
cld
add
or
movsb
pop
jo
sbb
ret
add
lods
push
adc
adc
mov
sbb
adc
fld
aad
cmpb
aaa
xchg
enter
mov
sub
pop
adc
pop
xor
mov
sub
mov
roll
push
jecxz
jl
cld
xchg
pop
jae
dec
lds
xchg
shrl
xchg
cmp
jge
ds
inc
lock
mov
sbb
dec
negb
push
test
inc
pop
jecxz
ja
xor
xchg
xor
adc
cmp
in
int
fdivs
sub
fidivrl
ljmp
push
push
test
jp
ret
sbb
adc
arpl
pop
fs
in
inc
aam
sti
insl
mov
lds
addr16
sarb
adc
mov
and
mov
ret
leave
xor
dec
pop
hlt
pushfw
shll
aam
pop
lds
cmp
pushf
arpl
push
arpl
jg
push
sub
jg
dec
push
addr16
in
stos
or
cmp
scas
pop
les
and
mov
push
mov
fwait
aad
lods
loopne
jl
jg
aam
jge
xchg
inc
jno
jmp
inc
add
inc
jl
xor
repnz
pop
cmp
fs
out
ret
cmp
or
dec
sub
dec
mov
and
mov
mov
imul
inc
xlat
inc
fsubrs
jb
fndisi(8087
mov
cmp
scas
lret
popf
sbb
or
fnstsw
mov
cmp
cld
sbb
scas
jmp
mov
cmpb
mov
jns
push
leave
adc
push
out
pop
repnz
aas
fidivrs
hlt
sbb
or
popa
roll
rcll
dec
mov
cwtl
xor
in
mov
and
pop
fdivl
or
push
shll
push
sti
aaa
bound
inc
fldl
cmp
imul
jecxz
sbb
daa
xor
mov
push
sbb
leave
aad
insl
in
hlt
xchg
inc
leave
lret
dec
mov
test
cmp
and
ret
cmp
jle
mov
sahf
cmp
jae
push
jne
fstpl
jbe
xor
ret
lahf
hlt
sbb
pop
mov
sbb
fisttpll
adc
test
mov
or
dec
sub
xor
push
cmpsl
sub
mov
mov
in
and
mov
sbb
fisttpl
jns
adc
mov
push
jno
xchg
aas
test
cwtl
movsb
mov
push
cmpsb
mov
inc
pushf
fdivp
stos
pop
in
xor
xor
inc
cltd
cltd
jnp
scas
jle
fsubl
mov
cltd
in
ficomps
add
inc
std
pop
or
addr16
clc
rclb
pop
inc
inc
insb
arpl
push
scas
pushf
pop
mov
cmc
sahf
jg
test
repnz
jl
and
aad
frstor
or
ds
pop
pop
mov
add
jo
mov
jae
adc
and
pop
fiaddl
jne,pn
sbb
mov
popf
mov
fistpl
cmpsl
cmp
roll
sahf
fxch
jno
mov
or
subb
xor
stos
xchg
cmpsb
pop
mov
rolb
scas
je
ljmp
cmpsl
pop
out
mov
outsl
mov
sbb
mov
pop
jl
jo
mov
jecxz
mov
js
jbe
roll
aad
push
mov
mov
or
adc
cmp
ds
xor
fcoml
pop
push
or
movsb
cmp
aaa
push
cmpsl
cmpsb
ficoms
pushl
or
rolb
push
daa
sbb
scas
fwait
and
mov
cld
popa
lret
adc
jl
push
fistpll
pop
inc
ror
scas
xchg
jae
test
outsl
fistps
xchg
pop
cwtl
dec
inc
pushf
scas
add
xchg
jbe
lcall
xchg
iret
xor
sbb
mov
and
ret
cmpsb
rolb
pop
xchg
sub
mov
push
jb
out
inc
movaps
fbld
jne
mov
mov
adc
leave
mov
xchg
xor
xlat
lods
shlb
push
outsb
cmp
fldcw
sti
fcomps
push
out
imul
stos
stc
test
scas
out
in
in
add
xor
mov
lods
sub
divb
test
mov
sub
int
sbb
adc
fsub
mov
xlat
scas
out
idivl
dec
test
addr16
fnsave
cld
into
je
mov
xlat
gs
pop
in
in
cmp
jnp
stos
adc
repz
popa
cmc
push
inc
sbb
add
int
mov
inc
sbb
aas
or
ljmp
aas
xchg
mov
xlat
pusha
loopne
mov
mov
or
jmp
jne
pop
add
sub
rcll
lds
outsl
js
lods
pop
push
loop
gs
adc
cmp
pop
xor
xchg
mov
leave
out
sbb
mov
int
ret
pop
or
rcr
xchg
cmp
test
jle
push
and
out
jmp
jmp
add
add
das
dec
fldcw
addb
mov
cmc
jae
inc
out
xchg
adc
inc
lds
push
and
mov
in
xchg
addl
and
sub
jbe
sub
sub
adc
or
mov
loop
test
xchg
cmpsb
lret
out
js
or
jne
xorl
sub
add
cmp
fs
lret
dec
faddp
xchg
inc
sahf
dec
or
test
or
xchg
pop
push
cmp
cwtl
mov
cmp
gs
adcb
pop
std
popa
pop
dec
adc
stos
imul
jmp
adc
inc
enter
outsb
cmc
dec
lds
cmp
pop
jmp
ds
pop
scas
aad
and
lahf
fistl
cmp
or
shll
aad
pop
or
rolb
pop
mov
xchg
add
in
xor
aad
adc
xor
hlt
test
shl
push
xor
push
je
test
rcr
inc
jp
imul
add
push
cmpsb
push
or
dec
test
pop
dec
add
dec
or
outsl
ljmp
mov
adc
fcmovne
add
mov
divb
or
das
test
popf
inc
loope
ss
enter
into
adc
push
pop
pop
sub
data16
test
dec
mov
sbb
test
dec
xor
mov
cltd
fucom
imul
sub
push
mov
push
xor
jb
hlt
test
xlat
cmp
push
mov
inc
mov
sub
jbe
xor
test
sarl
mov
std
jno
jge
pop
xchg
and
xchg
sub
test
rorb
sbb
cmpsb
popf
fwait
cmp
ret
pop
mov
jl
ds
in
add
mov
xchg
arpl
pop
add
jp
out
inc
sarl
fnstsw
add
mov
pusha
cmp
adc
rorl
stos
inc
adc
test
je
inc
icebp
stos
out
push
jb
xor
loop
dec
or
push
inc
inc
pusha
mov
jecxz
cmp
xorb
pop
fs
adc
test
dec
sub
daa
enter
pop
out
dec
cmp
add
cmpsb
std
fs
jge
pop
aas
jmp
gs
loop
aaa
das
sub
daa
jae
mov
mov
lcall
inc
lods
inc
cmc
mov
mov
ret
xchg
stc
inc
jge
andl
xor
stos
sti
dec
jcxz
push
pushf
mov
push
cmpsl
test
out
mov
or
das
cltd
mov
and
jno
dec
and
daa
test
lods
adc
popa
imul
inc
push
scas
mov
imul
icebp
or
inc
pushf
jge
int3
in
xchg
mov
lods
add
loop
xchg
ficompl
adc
popf
dec
mov
out
addr16
push
xor
sub
insb
lcall
and
test
sbb
insb
mov
outsl
xchg
enter
cmp
adc
push
cli
pop
rorb
or
push
sahf
add
pop
push
in
xchg
movsb
sub
and
or
sub
xor
cs
test
xchg
je
dec
push
sbb
lods
pusha
call
mov
mov
pushf
stc
std
add
mov
mov
xlat
scas
rcll
out
leave
push
sub
in
add
imul
movsl
pop
loopne
pop
add
js
sbb
jb
jecxz
cmp
xchg
dec
fimull
xor
pop
cmp
sbb
mov
pop
sub
imul
sub
pop
lods
mov
jb
pop
adc
mov
icebp
imul
jle
pop
sbb
xor
into
in
xchg
int3
out
outsb
sti
mov
inc
stos
lret
cmpsb
inc
imul
ret
sub
xchg
and
roll
push
cltd
int3
and
mov
int3
xor
add
jae
xchg
sub
jb
scas
fwait
xor
mov
pop
ds
aam
xchg
dec
movsl
pop
std
mov
xchg
xchg
jle
jo
sub
test
and
dec
fiadds
add
sarb
mov
rorb
pop
jbe
ret
das
lahf
aaa
fistpl
lret
adc
push
xchg
or
and
in
cwtl
push
xchg
add
sbb
and
dec
pushf
imul
std
mov
jo
out
jmp
jg
fistpll
add
aas
push
adc
mov
jmp
fisttpl
or
shl
cvttps2pi
mov
or
adc
ret
out
imul
mov
xchg
inc
daa
inc
ljmp
adc
fisttpl
push
push
cmp
adcb
sti
test
shrl
cs
out
mov
push
mov
and
stc
enter
add
jnp
add
cmp
pop
xchg
adc
ss
jl
jmp
sbb
loope
xchg
mov
jbe
leave
iret
ja
push
pop
pop
gs
push
push
test
cmp
addr16
inc
rcrl
xor
cmpsl
sub
iret
hlt
dec
mov
push
outsb
dec
arpl
add
cmpsb
sarl
rcl
sbb
popa
sub
in
jo
and
cli
sub
adc
inc
add
cmp
add
into
pop
mov
int
pop
movsb
mov
pushl
add
gs
mov
mov
out
xchg
xchg
neg
fldenv
sub
pop
push
test
orl
test
arpl
mov
lret
pop
fnstsw
jl
imul
fcompl
aam
mov
mov
mov
jecxz
test
out
dec
push
aaa
fldcw
jge
or
je
sbb
clc
test
pusha
sahf
inc
outsl
pop
sub
push
sbb
adcb
dec
outsb
inc
mov
fsin
test
popf
push
jmp
dec
scas
sti
enter
cmpsb
fdivrl
and
out
pop
pop
pop
lods
push
sub
pop
popa
jp
xchg
lods
pusha
sub
pop
mov
in
repz
pop
push
jno
pop
cmp
stos
cmpsb
lds
lea
daa
mov
dec
push
push
icebp
in
test
lods
arpl
pop
divb
mov
mov
subb
mov
mov
mov
fists
rcrb
pop
pushf
enter
mov
mov
out
popf
xchg
pop
in
cwtl
jecxz,pt
xor
clc
sbb
adc
push
xor
push
popf
dec
iret
pop
push
pop
push
imul
in
ss
jne
lahf
and
inc
adc
into
popa
out
jmp
add
stos
sub
mov
imul
sub
or
mov
jle
dec
insb
adc
dec
push
inc
xchg
add
or
adc
sub
adc
test
imul
stos
dec
jle
jge
sub
dec
repz
sbb
pushl
mov
add
pop
lods
dec
lock
shl
or
movsl
repz
mov
xor
aam
fwait
xlat
icebp
icebp
sbb
fsubl
test
inc
aam
loope
cmpsb
cmp
pop
add
sbb
loope
inc
mov
pusha
add
js
push
pop
add
fstpl
aam
call
pop
inc
outsb
or
mov
das
pop
aaa
fstps
xor
out
mov
test
pop
jecxz
mov
xor
cltd
aaa
mov
mov
cli
xor
sbb
je
or
add
mov
icebp
dec
mov
aas
cmpsl
push
cmp
mov
sbb
loope
sbb
cmpsb
xorl
add
inc
xchg
fdivs
les
mov
cs
imul
pop
enter
push
rclb
add
pop
add
ret
hlt
xchg
movb
mov
in
icebp
incl
adc
ret
shlb
push
insb
pop
lahf
xchg
loop
int
repz
sti
push
mov
repz
data16
mov
sub
sub
adc
xchg
cmp
cmp
int3
scas
xor
out
sub
pop
jo
ss
pop
call
dec
or
adc
push
cmp
mov
mov
add
cmpb
sub
sub
cmc
ficoms
frstor
lcall
cmp
gs
js
lock
adc
and
inc
pop
addr16
pop
imul
sbb
sub
lods
jg
xchg
lcall
arpl
pop
andb
aaa
mov
xchg
xchg
inc
lcall
cmc
lret
ja
flds
xor
push
cmp
pop
sub
adc
enter
rclb
bound
sub
int3
or
cltd
pop
cmp
test
xorl
les
xchg
and
movsw
dec
outsl
or
cmpb
push
and
ficompl
xchg
clc
mov
jno
mov
inc
lret
push
add
in
jno
insl
inc
pop
stc
andb
pushf
pop
xor
sub
xlat
sub
or
and
mov
test
jne
xlat
lcall
jb
sahf
push
xor
jbe,pn
push
add
push
jbe
hlt
mull
dec
mov
ret
cltd
fcoms
xor
cmp
xlat
std
int3
shrl
xchg
jg
andl
clc
jle
enter
dec
test
adc
xchg
mov
rep
mov
dec
ret
push
xchg
pushf
and
icebp
popa
cmp
sub
shll
in
in
mov
cld
jmp
out
sub
pop
or
cltd
mov
mov
cmpl
mov
and
in
jle
popf
outsb
and
cltd
sbb
test
pop
xor
fstpl
repnz
mov
xor
popa
mov
add
and
or
cltd
or
xor
sahf
popa
mov
test
data16
push
jmp
jns
adc
ljmp
jecxz
or
xchg
pop
pop
ret
add
fcompl
pop
loopne
inc
pop
jecxz
out
lret
outsl
push
scas
add
les
aam
leave
cmp
hlt
dec
lret
hlt
pop
push
js
rcr
icebp
pop
jo
adcb
dec
scas
ds
insb
out
sti
call
popa
sti
xchg
mov
dec
mov
mov
jl
mov
mov
sbb
outsl
lea
mov
out
adc
loope
cmp
aas
jnp
cmp
jo
jbe
inc
sahf
enter
ret
lret
jnp
shrb
lret
or
and
aaa
or
mov
push
leave
lea
fstl
adc
and
lahf
les
sahf
push
leave
ret
negb
notl
xlat
cmp
cmp
into
fisubl
stc
ss
pop
sub
pusha
test
pop
pop
out
std
jg
fs
je
sahf
negl
out
repnz
add
adc
jo
lds
shl
inc
jmp
cmp
inc
test
jb
pop
push
or
popa
out
jb
xchg
fs
int
repz
lods
mov
scas
jmp
mov
flds
pop
xchg
leave
inc
fmuls
pop
idivb
jle
mov
mov
shlb
inc
xchg
xorl
das
cmp
push
jmp
clc
movsb
mov
cltd
cwtl
fstpl
add
pop
xchg
pop
les
cmpsb
push
and
adc
push
push
jmp
ret
popa
jb
ss
in
push
mov
fwait
and
xchg
lods
mov
push
mov
jb
inc
loop
xor
jae
sti
cmpsl
adc
dec
pop
xchg
ljmp
and
ret
push
imul
mov
clc
negb
cmp
jne
mov
pop
out
iret
pop
cmp
sub
inc
and
or
sub
xor
jae
test
push
icebp
mov
push
enter
jg
push
dec
sbb
dec
sub
repz
mov
mov
fs
je
adc
lahf
pop
xor
fmull
add
fwait
mov
xchg
insl
ds
jmp
out
mov
insl
clc
leave
or
stos
imul
sbbl
cvtpi2ps
jl
xchg
push
adc
rcrb
imul
dec
imul
dec
and
inc
jl
aam
lods
mov
or
fdivs
mov
pop
mov
cmc
test
mov
pop
pop
mov
mov
dec
cltd
aas
jl
repz
dec
mov
sub
lea
fldenv
scas
cwtl
push
orl
add
lds
stos
fiadds
jb
xchg
xor
insb
lret
arpl
lock
add
out
ja
pop
xchg
es
dec
or
pop
int
arpl
jno
cmp
and
mov
xor
repz
in
adc
fs
cmp
cs
mov
lods
stos
out
push
icebp
mov
xchg
ja
loopne
jno
hlt
arpl
orl
fildl
mov
aaa
sbb
inc
stos
aaa
adc
jle
mov
mov
cmp
call
mov
es
loopne
shlb
fimull
incl
clc
faddl
xor
mov
jb
inc
lods
cs
add
imul
mov
fwait
insl
lret
or
xchg
ret
out
sub
insl
mov
jne
xor
xor
xlat
or
xor
arpl
lods
mov
and
rorl
out
cltd
es
cmp
movsl
sub
adc
sbb
add
push
or
add
xor
movsb
std
stc
gs
rol
lret
jo
adc
je
lock
pop
in
pop
clc
jns
xchg
pop
xor
push
sarb
pop
lods
aas
dec
mov
cmp
hlt
insb
imul
adc
sti
jno
mov
jnp
mov
int
test
inc
mov
insl
push
ret
inc
cld
pop
sti
fucomp
pop
sbb
fdivrs
das
xor
add
xor
fbld
inc
xor
int3
cmc
fwait
mov
jg
pop
rcr
mov
sarb
iret
dec
or
add
mov
stos
popf
je
icebp
ljmp
out
outsb
and
lods
mov
aaa
mov
jle
nop
push
jecxz
test
lret
sahf
mov
or
jmp
pop
test
stc
ret
aad
mov
loope
pop
rcrb
das
pop
call
mov
idivb
jecxz
mov
cmc
aaa
or
dec
jnp
xor
adc
fsubrs
cmpsl
jle
outsl
js
mov
stos
subb
adc
outsb
icebp
scas
int
loope
sub
test
ficoml
xchg
outsl
push
mov
pop
into
scas
test
mov
add
clc
xor
adc
xor
inc
add
sub
or
xchg
sbb
adc
xor
ret
divb
in
fisubl
cmp
cld
inc
popf
rorl
loope
insl
cmp
push
jno
pop
and
or
call
push
test
std
mov
gs
push
mov
or
inc
dec
mov
mov
or
lock
ljmp
enter
xor
loope
push
push
hlt
cli
add
enter
clc
ljmp
sarb
or
dec
cmp
push
data16
xor
scas
stc
lock
cmp
mov
mov
idivb
inc
stos
sti
hlt
test
test
lods
gs
bound
inc
imul
inc
push
mov
stc
loop
or
add
pusha
jle
fwait
out
adc
lret
push
int3
pop
int3
dec
fsts
dec
mov
mov
test
hlt
inc
outsb
dec
fstl
out
dec
add
gs
mov
ljmp
in
dec
sub
fmuls
repnz
jo
fistps
pop
adc
or
into
negb
mov
in
jno
sti
and
fisttpll
sub
sub
pop
nop
jp
inc
scas
andl
rcrb
fst
xchg
lea
and
dec
dec
repz
xchg
and
popa
jb
adc
cli
mov
and
mov
adc
aas
and
neg
and
push
movsl
fnsave
mov
hlt
stos
out
add
int
cmp
iret
xor
int3
gs
sub
addb
add
inc
ds
push
loopne
bound
leave
fnstenv
test
test
xor
xchg
ss
or
sti
cmp
pop
lea
fsub
pop
loope
dec
ljmp
imul
je
data16
sbb
mov
push
hlt
cltd
shrl
ds
xor
notl
ja
ret
add
int
int3
sub
test
imul
stos
std
sahf
idivl
pusha
les
not
mov
xchg
inc
inc
insb
aaa
shlb
jae
leave
daa
icebp
sahf
cmp
and
lcall
and
pop
mov
lods
dec
out
lret
jge
push
inc
sub
push
sbb
mov
or
mov
jae
add
pusha
mov
lock
jne
sbb
and
jl
pop
mov
aaa
mull
jnp
nop
jo
sub
and
sti
inc
xor
and
outsl
inc
into
enter
mov
adc
fcoml
lret
in
jle
fsubrs
push
pop
sbbl
cmp
andb
sbb
push
xchg
lahf
repnz
enter
jo
sbb
adc
xchg
mov
test
popa
ljmp
popa
aam
mov
pop
cmp
push
jo
mov
fidivl
dec
mov
out
xor
dec
jecxz
cs
mov
ss
aas
xchg
pop
sbb
pop
xchg
inc
inc
dec
jg
sbb
out
xchg
popl
adc
add
scas
sahf
adc
aam
int
iret
pop
scas
test
into
orl
lock
aam
push
sti
addb
push
seto
or
jmp
pusha
daa
cmpl
jb
cmp
aam
lret
push
insb
pop
jo
dec
call
pop
cmp
ja
jns
xor
je
fadds
imul
arpl
fldcw
out
cmp
int
push
jb
rcrl
test
mov
rolb
hlt
sbb
out
sbb
icebp
insl
aad
test
jecxz
into
inc
sbb
pusha
in
insb
mov
xor
lds
dec
mov
test
and
insl
inc
fisttps
call
mov
fbstp
scas
xorl
dec
cmp
jns
jge
negb
mov
mov
adc
dec
loop
pop
sub
mov
sub
dec
jl
push
xor
dec
or
mov
pop
add
mov
xchg
scas
inc
cmc
and
pop
dec
or
adc
adc
cli
xchg
les
popa
jg
jg
pop
mov
lahf
push
popa
adc
add
jmp
lock
test
dec
dec
sbb
stos
mov
mov
mov
aas
cld
mov
push
fidivrs
in
ljmp
std
push
dec
pusha
int3
repnz
popf
insb
cmpsb
sbb
xchg
or
flds
js
and
sahf
xor
shll
xlat
xchg
or
xchg
xchg
pop
hlt
into
negb
xchg
inc
jp
sti
add
inc
sub
pop
inc
jl
leave
mov
mov
xchg
int
test
mov
mov
fmul
mov
cmpsl
xchg
lock
call
xchg
stos
sti
sbb
loop
mov
adcl
mov
mov
xchg
inc
pop
xor
dec
je
xchg
sbb
stc
repz
or
repnz
fcos
sbb
scas
fisttps
cmp
stos
pop
adc
xor
sub
and
sub
mov
stos
dec
xchg
push
sbb
xor
das
mov
popf
lret
lret
and
stos
insl
adc
enter
jmp
test
sbbb
ljmp
jge
pop
subl
or
lret
aas
test
cli
sub
icebp
mov
jmp
int
add
arpl
add
lods
leave
icebp
outsb
aas
mov
ret
inc
and
mov
test
and
sub
cmc
add
cs
bsr
sahf
sbb
jmp
jecxz
ficomps
shl
sub
movsl
push
xchg
or
jb
xor
pop
adc
xor
jb
flds
aad
mov
mov
lcall
adc
stc
inc
fwait
and
lret
in
jl
jge
and
push
decl
call
lret
mov
or
dec
and
sahf
jle
xchg
fstl
lods
fwait
mov
push
ss
jecxz
js
test
jb
dec
inc
out
imul
adc
mov
push
icebp
sub
fiaddl
in
xchg
cmpsl
int
movsb
pushw
sarb
mov
clc
pop
cmp
ret
inc
lahf
cmc
testl
jae
fisubrs
mov
xor
xlat
xchg
cmpl
xchg
add
lods
xor
into
xchg
fnstenv
sbb
aas
mov
movsb
inc
loopne
lret
loope
push
sub
ret
xor
in
jg
negl
daa
cmp
es
cli
cs
leave
stc
add
das
or
and
shrb
adc
sub
jmp
pop
shr
mov
dec
xchg
mov
sbb
daa
xor
cli
and
xchg
and
aaa
ret
fdiv
or
mov
movsb
dec
jg
jl
fucomp
push
jns
enter
sub
jecxz
xor
or
lods
clc
idivb
outsb
out
aam
jl
jne
dec
lock
aas
ret
pop
jo
ret
ss
inc
mov
pop
pop
clc
dec
jnp
in
adc
pop
inc
adc
es
insl
outsl
push
mov
lcall
mov
testb
pop
pop
mov
mov
scas
jmp
add
fstpl
or
inc
cmpsl
das
jge
jecxz
gs
data16
mov
cs
adc
scas
in
or
jp
or
xchg
mov
call
dec
stos
aam
sbb
xchg
or
in
lods
or
fsub
ss
inc
enter
add
rcrl
ficompl
inc
push
imul
gs
xor
or
imul
sub
aas
outsl
movsb
imul
xor
sbb
popf
lret
in
in
rclb
xchg
sbb
aad
cmp
mov
pop
push
sbb
xchg
push
xchg
cmp
cli
std
xchg
cmp
or
nop
xor
xor
insl
test
shll
dec
iret
xor
inc
cli
out
push
xor
sbb
clc
arpl
std
adc
ret
cmp
pop
icebp
pop
pop
in
add
mov
dec
mov
jle
test
mov
aaa
icebp
adc
ljmp
pop
std
adc
aam
jae
lods
sbb
out
stos
iret
and
jp
add
cmp
pop
mov
jmp
push
jecxz
xor
jmp
pop
adc
pusha
jmp
add
sbb
stos
test
lds
mov
adc
in
inc
cltd
lds
orl
imul
pop
cmp
inc
jg
out
mov
dec
mov
add
lahf
jno
add
rcrl
mov
xor
sbb
in
dec
call
cmp
out
jmp
imul
daa
ficoml
jbe
fwait
in
inc
sbb
in
inc
xchg
xchg
push
adc
cs
and
dec
jae
lods
sbb
inc
out
mov
fwait
mov
enter
xchg
ret
jno
add
ja
xchg
lds
inc
fistl
imul
jle
xor
cld
inc
repnz
adc
push
rcll
inc
das
out
loopne
push
adc
jge
xchg
sub
iret
insl
test
cmc
push
cmp
mov
xchg
jno
pop
jns
mov
loopne
xchg
adc
lea
and
lds
mov
mov
and
rcll
mov
daa
es
imul
repnz
jbe
testb
addr16
in
push
mov
pmaxsw
mov
xchg
mov
cmp
dec
push
pop
es
fidivl
jecxz
in
mov
cmc
jno
pop
arpl
inc
insl
scas
or
cmpsl
js
sbb
loope
test
lcall
in
adc
mov
jmp
mov
lods
loopne
xor
mov
or
jmp
fld
gs
ss
leave
add
xchg
cmc
lret
mov
cmpsl
cmp
push
cli
stos
aas
add
test
in
inc
sti
push
pop
mov
cmp
sbb
imul
insl
repz
push
jns
cmpsl
add
lahf
jno
add
aad
js
cmp
clc
xor
fucom
or
nop
jbe
cwtl
dec
mov
jle
cmp
dec
push
push
out
imul
lret
cmp
cmp
cmp
ret
cld
jmp
ds
adc
push
insb
jl
dec
mov
hlt
dec
jle
push
adc
ja
aam
xchg
mov
ficompl
xchg
daa
call
xchg
fldt
lods
inc
lret
fisttpl
mov
add
sbb
imul
mov
imul
lahf
clc
fwait
sbb
js
push
xchg
xchg
jp
dec
pop
fsubrl
enter
cmc
cmc
out
cmpl
push
xchg
ljmp
lea
jns
push
cmpl
dec
loope
rcr
push
jno
sbb
imul
popf
shrb
mov
and
cmp
mov
out
push
pop
lcall
push
sbb
push
in
gs
mov
xor
push
mov
sub
cmpl
xlat
aam
add
xchg
out
out
sub
sbb
je
stos
or
out
insl
sbb
add
test
mov
loope
lds
insb
jae
cmp
into
push
or
pop
cltd
mov
inc
push
jge
lods
lcall
dec
adc
cld
xchg
xor
add
cmp
lock
js
call
or
fstps
shlb
adc
lods
dec
movsl
lea
pop
lret
or
mov
add
sub
xor
dec
cwtl
xchg
lods
ret
xchg
std
dec
mov
imul
sbb
mov
pop
outsb
inc
add
icebp
scas
pop
aam
push
lahf
pop
xor
xchg
scas
adc
pushf
sbb
les
insb
sub
jns
push
pusha
and
out
clc
cwtl
outsb
xchg
sub
mov
into
test
movsb
mov
push
dec
fidivs
mov
mov
lock
inc
xor
sub
lcall
out
js
or
mov
mov
and
int3
gs
scas
into
loop
xchg
mov
pop
mov
jle
out
arpl
and
cmpsb
inc
stos
inc
das
jmp
and
outsb
push
or
jne,pt
iret
jge
xchg
cmp
pushf
xchg
jo
sub
sub
pop
lods
pushf
pop
cmp
mov
cltd
and
cmp
mov
lods
mov
in
inc
xor
sahf
jge
mov
jge
mov
mov
cmp
push
clc
cmp
stos
in
dec
mov
popf
std
or
mov
fldl
adc
mov
lret
pop
inc
rorb
lcall
imull
pop
ja
xchg
jp
pop
hlt
pop
fsubl
notl
push
jg
push
int
in
stc
jae
xor
xchg
sbb
mov
adc
arpl
test
jp
pop
xor
test
inc
adc
and
fsub
lcall
inc
lret
adc
ror
fdivr
notl
call
jbe
imul
mov
pop
jg
mov
inc
xchg
lods
cld
fldt
mov
jmp
stos
jae
mov
and
inc
xchg
cmpsb
lcall
add
add
cltd
jno
into
daa
jnp
mov
or
scas
les
push
jp
mov
mov
es
mov
stos
mov
sbb
negb
repnz
pop
fneni(8087
dec
xor
adcb
stc
jns
mov
lock
je
rorb
sub
pop
jp
cs
jo
addl
mov
out
jp
popf
out
xchg
pusha
idivl
adc
jns
cmc
push
or
jmp
mov
lock
adc
dec
mov
xor
jmp
sbb
dec
lcall
arpl
shll
jns
stc
scas
jae
cmc
jecxz
out
fcoml
cwtl
jg
cmc
and
adc
sbb
sbb
nop
jbe
fcomi
xor
jmp
dec
pushf
inc
ficompl
mov
inc
mov
movsl
push
jp
cmp
jb
pop
vcmpss
jp
ss
or
repz
decl
fmulp
pop
add
jnp
lea
int3
cmp
std
je
or
mov
and
push
mov
adcl
lahf
bound
jo
adc
aad
dec
pop
fisttps
adc
lock
popa
jbe
mov
gs
push
xchg
cmp
push
or
das
dec
aam
dec
sub
jnp
cs
int3
mov
xorl
mov
pop
xor
aad
pop
mov
push
shlb
mov
in
ja
mov
cmp
decb
cmpsb
adc
std
shlb
cwtl
jp
movsl
mov
sti
iret
ja
sub
push
iret
es
push
pop
and
ficompl
dec
mov
and
mov
and
mov
ss
push
pusha
std
test
je
movsb
idiv
and
lods
mov
xor
mov
out
test
xchg
jae
das
and
incl
mov
sahf
and
push
mov
outsb
or
mov
scas
adc
xor
xor
in
ficompl
rcrl
mov
jmp
out
cmp
lods
pop
and
inc
cs
out
outsl
call
ficoms
add
pop
cs
cmc
vmaskmovps
add
lret
popa
jae
cwtl
inc
adc
sahf
sbb
add
mov
movsl
push
ret
pop
mov
push
aam
es
and
nop
loopne
and
mov
imul
outsl
push
stos
sbb
mov
dec
lods
paddusw
std
mov
pop
movsl
fnsave
rcrl
jno
add
sub
rolb
lds
jmp
cld
jle
jne
mov
mov
xlat
push
sahf
cmp
mov
dec
outsb
xchg
fcoml
and
pop
xchg
cld
jae
add
in
jg
xchg
pop
or
loope
into
dec
test
push
mov
cmpb
sub
jmp
mov
into
popf
enter
dec
mov
or
test
incl
lahf
cmp
rolb
xchg
sub
pop
subb
jge
fwait
jns
sbb
pop
dec
pop
dec
xchg
js
jle
shrl
mov
push
or
jp
pop
daa
sti
jle
stos
push
mov
imul
pop
xor
cwtl
mov
add
add
mov
sbb
out
sar
inc
data16
push
jg
aam
daa
or
jmp
pop
mov
inc
je
mov
mov
bound
sbb
insl
mov
push
rcrb
mov
pop
pop
pushf
ds
xchg
and
repz
push
test
rcl
push
and
and
push
ret
mov
pop
out
mov
sub
arpl
pop
lret
xor
xchg
add
enter
cmp
xor
enter
pop
pop
mov
sti
in
subl
movsl
dec
mov
or
das
fstl
mov
iret
bound
aad
shr
xor
out
lcall
dec
out
movsb
js
and
int3
or
jecxz
xor
out
pusha
nop
fs
push
and
or
add
and
notb
pusha
jnp
cwtl
dec
inc
mov
incl
nop
add
jmp
fstl
in
scas
in
scas
push
mov
mov
lds
ljmp
cmp
xor
add
adc
dec
lods
int3
push
jne
pop
add
hlt
testl
sbb
scas
sti
push
cs
add
mov
jl
mov
inc
xchg
inc
cwtl
push
and
ja
stos
sbb
lea
sub
scas
cmp
push
ds
mov
cmp
movsl
xchg
pop
subb
hlt
sbb
adcb
xor
cmp
stos
xor
jbe
pushf
sub
gs
fstl
int
mov
push
gs
sahf
jl
mov
xor
add
xor
iret
sbb
pushf
adc
jmp
ror
cld
ret
leave
pusha
ljmp
data16
outsl
notl
xor
xlat
test
dec
rcll
push
mov
sub
fstp
cmp
fidivrs
fwait
dec
cmp
xchg
test
adc
push
and
movsl
xchg
in
xor
into
test
std
jg
test
mov
inc
notl
pop
je
sarb
adc
pop
fcomps
xchg
xor
shlb
xor
mov
sbb
pop
adc
mov
dec
test
add
test
dec
or
paddusw
testl
cwtl
loopne
add
push
push
xchg
sub
test
out
mov
sbb
push
sub
adc
pop
repnz
rcrb
outsb
jns
sbb
push
push
pop
pushf
orl
xchg
pop
add
outsb
mov
in
jno
sub
in
bound
inc
and
data16
xchg
movsb
dec
mov
xlat
repnz
ds
nop
xor
loope
xchg
stos
ds
pusha
xchg
jno
sti
loope
jb
mov
inc
sub
inc
enter
out
lea
push
mov
loope
pop
xor
leave
cmp
add
roll
pop
test
scas
jne
and
ljmp
mov
xor
and
aam
or
sbb
pop
dec
sbb
add
cld
push
sbb
stos
push
xor
stos
push
and
testb
adc
push
scas
outsb
mov
leave
pop
imul
sbb
lods
outsb
outsl
pop
rorl
mov
jns
inc
inc
dec
test
jmp
jg
icebp
popa
lock
inc
jecxz
jno
mov
sub
dec
add
notb
bound
jo
or
mov
jp
cmp
xchg
jne
jl
aaa
jnp
test
add
jge
push
and
cmp
mov
jmp
in
push
sti
cmp
mov
push
mov
lds
inc
icebp
pushf
add
jbe
fistpl
orb
push
test
push
es
hlt
jp
out
mov
rcr
cld
int
rcll
call
aad
gs
rorl
jmp
mov
mov
gs
test
and
pop
scas
call
fstps
dec
push
lock
or
cmp
pop
xchg
lret
mov
insb
pushf
sbb
ja
pusha
jb
push
xchg
inc
or
mov
out
lods
fldcw
push
cmp
dec
push
mov
les
mov
cwtl
dec
mov
jg
mov
xchg
jns
fsubl
daa
pop
fcomp
xchg
sti
repnz
dec
push
cmp
cmp
cltd
push
xor
cmpsb
out
xor
mov
mov
sbb
mov
add
lods
jmp
loopne
push
sbb
sbb
sub
shl
pop
pop
pop
sub
adc
pop
mov
sub
pop
mov
push
adc
add
fs
dec
cld
mov
mov
ror
fdivl
ds
jae
fisubrl
loopne
dec
push
adc
fsts
test
pop
push
pop
jp
jns
fsubl
pop
mov
adc
jle
loope
pop
sbb
shll
iret
dec
or
test
mov
ss
pusha
loopne
jbe
sub
jb
jne
leave
jns
aam
es
jge
push
dec
mov
icebp
das
xor
mov
cmpsb
dec
fwait
das
fmull
cmp
sbb
pushf
ret
inc
mov
sti
jg
sub
insb
jge
lret
push
add
dec
mov
push
test
testl
push
jns
ljmp
cmc
mov
or
jb
inc
add
leave
lcall
push
insb
push
ffreep
xchg
pop
jb
aaa
stc
cld
lods
jb
ret
push
sbb
ja
inc
push
out
xor
imul
add
ret
or
sbb
inc
cmpsb
cmp
and
jmp
movl
lock
fmull
push
fs
aas
mov
inc
add
sub
and
sub
add
outsl
aad
mov
ficoms
dec
icebp
inc
cmp
or
adc
cmp
mov
inc
xorb
cld
lret
enter
pop
in
mov
or
data16
xor
xchg
sahf
mov
jge
adc
sub
dec
sub
and
leave
inc
or
fwait
mov
mov
and
lods
and
sbb
push
ss
call
push
lds
sbb
push
jne
xchg
pop
out
xor
aaa
aam
int
stos
test
xor
fnstsw
jl
jmp
xchg
cltd
fdivs
mov
inc
xchg
cmpsl
hlt
daa
js
push
scas
fidivs
outsb
xchg
xor
loope
loopne
cs
push
cmpsl
push
cs
mov
pusha
inc
jg
dec
das
lahf
cmpsl
mov
pop
cli
fs
dec
insb
dec
repnz
je
cmp
movsl
iret
dec
push
gs
lods
and
aaa
push
test
cld
sbb
test
sub
ret
or
dec
pop
leave
lret
mov
push
dec
cmpsb
pop
pop
pushf
leave
jno
add
movsl
fwait
addr16
mov
cmpsl
jne
icebp
in
test
pop
fwait
cld
ret
pusha
mov
mull
or
pop
mov
clc
xlat
mov
sbb
fnstcw
inc
pop
ds
mov
cmpl
mov
inc
adc
aas
push
push
xor
outsb
xchg
iret
dec
jg
jnp
pop
xchg
jne
dec
jne
movsl
hlt
pop
lock
push
aas
inc
inc
and
jg
pop
rorb
hlt
dec
inc
inc
push
push
inc
out
pop
pushl
xor
jae
lahf
sbb
imul
and
aam
adc
int
dec
mov
jp
push
jge
mov
addr16
sarl
stos
inc
sbb
sub
jmp
sub
negb
jae
lret
pop
lea
push
sub
mul
mov
mov
jecxz
movsl
shrl
xchg
mov
test
popa
mov
out
mov
or
cmp
addb
pop
xchg
push
sbb
sbb
jecxz
cmc
cmp
push
inc
xlat
cmp
push
inc
je
sbb
sbb
stos
or
ljmp
adc
pop
shlb
mov
mull
jmp
sbb
jge
inc
aad
pusha
js
mov
mov
lcall
outsb
es
in
push
dec
sti
dec
adc
gs
cs
cs
test
shrb
or
push
cmp
out
and
cmc
xor
xor
jl
jmp
dec
cmp
or
sbb
lret
shl
and
stc
cmpsl
inc
popa
sub
xchg
inc
daa
mov
in
fnstcw
jle
fs
addr16
and
addl
push
in
sub
and
push
ja
adc
jp
cld
fs
dec
push
adc
hlt
popa
loope
clc
xor
pusha
out
test
cmp
mov
xchg
inc
dec
sbb
jno
inc
ja
fwait
sbb
cmpsl
push
pop
ja
lret
adc
sahf
and
adc
lds
sbb
cwtl
jb
dec
enter
loopne
loop
xchg
push
push
fiadds
push
sbb
xlat
inc
movsl
inc
mov
pop
aad
in
es
andb
sub
add
fmuls
inc
scas
push
add
fwait
aaa
jp
out
mov
nop
mov
mov
pop
iret
or
xlat
pop
mov
rclb
sub
out
xor
xor
cmp
ja
imulb
lods
shr
sub
test
fmull
daa
icebp
push
bound
test
push
or
xor
stos
jmp
frstor
test
lock
mov
out
out
jp
or
je
adc
inc
shl
mov
add
lret
adc
imul
sub
jne
push
movsb
daa
adc
mov
mov
inc
push
push
lods
shr
jmp
mov
add
pop
xor
dec
je
pushl
cmp
lods
lea
and
int
mov
or
insb
jbe
popf
xor
xor
enter
adc
jno
roll
sub
mov
jge
push
test
out
lcall
dec
push
sbb
xchg
pop
push
in
xchg
shll
fs
shrb
sti
push
mov
aam
mov
aad
imul
test
je
mov
bound
xchg
movsb
push
pop
daa
xchg
rcr
jl
sbb
aas
int
sbb
push
add
pop
mov
mov
adc
mov
cmc
ds
lret
push
loop
xor
pop
xchg
cmp
mov
and
dec
ret
push
pop
loop
mov
nop
mov
pusha
aas
sarl
sub
scas
sbb
inc
sarl
in
push
add
fcmovu
jo
and
and
push
fdivr
inc
xchg
dec
jne
add
pop
mov
mov
data16
inc
adc
repnz
mov
push
insb
shlb
jmp
testb
fwait
test
loop
and
mov
adcb
lret
lcall
or
repnz
pop
mov
jns
test
daa
insb
mov
cmpsl
ret
mov
xor
cltd
add
inc
dec
mov
mov
bound
dec
mov
cwtl
ds
xchg
or
fs
call
data16
mov
daa
push
and
jbe
mov
mov
fnstcw
jl
push
jb
mov
push
rolb
jecxz
or
xchg
loope
jbe
jae
int3
sbb
cltd
aam
negl
jp
or
jmp
lds
sub
ret
mov
sbb
xchg
ret
sub
std
mov
and
cmp
jge
fsub
test
xlat
and
mov
out
scas
jbe
xchg
inc
inc
mov
in
nop
arpl
in
mov
mov
nop
jecxz
test
imul
int3
loop
pop
lret
mov
or
mov
outsb
mov
pop
mov
iretw
call
test
jb
pop
mov
fsubrs
mov
data16
inc
fdivrs
pop
adcb
xchg
mov
leave
cmp
cmc
mov
cmc
add
xchg
push
dec
mov
mov
add
and
sbb
add
mov
jae
das
pop
mov
sub
out
push
xor
rorb
jle
pop
add
inc
mov
xchg
xchg
jmp
ds
cs
push
or
and
orl
xchg
out
hlt
fidivs
ljmp
sub
test
int3
xchg
fbstp
call
daa
pushf
dec
xor
or
cmp
and
sbb
daa
mov
ja
inc
dec
mov
into
cs
xorl
pop
and
into
loopne
pop
sbb
loopne
pop
mov
push
pop
testl
daa
fwait
cld
push
faddl
fwait
inc
push
dec
test
add
aas
add
lret
mov
mov
jb
bound
loop
das
or
andb
pop
sub
sub
aam
pop
je
mov
sub
notb
pop
outsb
es
mov
in
jbe
arpl
dec
dec
repz
pop
xor
jae
add
testb
lcall
outsl
sbb
sub
int3
jle
faddl
dec
adc
xor
stos
stc
test
lea
addl
pop
xchg
and
movsl
daa
popa
iret
adc
fistpll
test
push
xchg
and
push
xchg
pop
mov
pop
push
stos
cld
cmp
inc
jo
add
mov
loopne
mov
jp
mov
jmp
dec
jmp
jecxz
mov
mov
popa
pushf
inc
xor
pop
pop
roll
outsb
xor
repz
ss
dec
addr16
fwait
divb
decl
and
repnz
and
call
popl
or
sbb
sarb
fs
jno
outsb
push
rclb
mov
lret
add
adc
int
add
mov
pop
inc
jbe
inc
pushf
inc
jbe
jecxz
gs
xor
adc
sub
push
call
push
pop
sti
dec
daa
lahf
xor
sarl
ljmp
pushl
out
and
pop
pop
clc
dec
stos
pop
cwtl
fidivl
aaa
lock
lock
mov
insb
addr16
sub
shr
dec
fidivl
adc
popa
xor
push
mov
dec
add
es
pop
mov
cmpsb
subb
cmp
ds
lock
js
jg
imul
ljmp
xchg
out
fiaddl
sti
cli
push
xchg
fisttps
bound
inc
and
ja
jne
push
sub
add
pop
mul
jbe
leave
push
sbb
imul
mulb
pop
dec
sub
mov
mov
popa
mov
push
and
add
repnz
xor
sbb
adc
push
inc
sbb
jg
subl
push
jno
testb
data16
lret
jno
pop
sub
outsl
cltd
mov
sbb
mov
rolb
push
mov
and
rcrl
les
fs
addr16
das
mov
or
push
fmulp
xlat
sbb
jno
aas
insl
adc
sbb
scas
inc
lret
push
jo
dec
mov
lcall
fnstenv
inc
mov
les
push
das
rcl
call
mov
or
xor
clc
mov
je
les
adc
dec
adc
stos
movsl
loop
shlb
leave
adc
pop
dec
jmp
aas
pop
or
mov
add
jb
stos
adc
scas
mov
add
mov
cmc
cmp
sub
xor
call
inc
mov
push
xchg
and
xor
arpl
pop
dec
pop
scas
jle
into
inc
jb
jnp
fmuls
push
and
ljmp
out
nop
scas
push
lahf
aaa
xchg
jl
adcb
out
cmc
cmpsb
test
fs
mov
imul
jo
cmp
dec
cmp
movsb
pop
xchg
jne
dec
test
ja
add
mov
out
mov
mov
pop
lea
mov
sbb
out
adc
aas
adc
cmp
mov
xchg
sub
loope
pusha
adc
xchg
ret
scas
push
pop
and
xchg
xlat
pop
stos
adc
xchg
dec
xlat
and
and
cmovge
mov
fidivrl
xor
incb
in
pop
lods
adc
dec
jge,pn
push
fsubp
sbb
loope
and
je
cmp
mov
xchg
xor
fisttpll
movsb
lods
cltd
inc
sbb
push
adc
mov
mov
xchg
push
bnd
aad
test
pop
xchg
xchg
idivb
pop
loopne
icebp
mov
jge
fstpt
dec
mov
push
lods
pop
mov
xor
sbbb
pop
aad
jns
add
in
clc
xlat
cs
test
das
cli
pushf
inc
int
imul
mov
and
pusha
into
scas
adc
outsb
faddl
adc
or
call
loope
mov
cmp
int
dec
scas
jge
adc
pop
xchg
fists
dec
out
addb
insl
push
mov
push
pop
pop
mov
mov
xchg
loope
xchg
sub
movsl
jae
fimull
fists
scas
push
hlt
shll
cwtl
mov
pop
icebp
xchg
mov
cmpsl
add
insb
cmp
push
scas
pop
and
xchg
sahf
xchg
popa
mov
pop
inc
lock
fidivrs
aad
push
js
mov
repz
mov
push
mov
js
shl
mov
mov
je
sub
test
or
enter
pop
or
mov
ss
flds
test
jae
outsb
loopne
dec
inc
mov
cmp
notb
cmp
mov
xchg
xchg
cld
jae
pushw
pop
dec
lock
dec
stc
lret
and
int3
mov
je
inc
dec
jae
push
pop
sbb
mov
aam
inc
int3
mov
jl
xlat
fsubl
into
jae
add
js
xor
cmc
xchg
fadds
sbb
pop
aad
insb
pop
inc
inc
mov
and
dec
mov
jmp
xchg
imul
jmp
enter
fwait
pop
xorl
cmp
es
push
pushf
xor
callw
pop
rcrb
mov
insb
xchg
xor
fdivs
xchg
test
movsl
out
testl
test
ror
dec
mov
lret
pop
movsl
aad
shlb
xor
cld
mov
add
lcall
sbb
dec
sub
mov
repnz
lods
xchg
jmp
out
dec
ljmp
notl
or
mov
push
insl
mov
fs
hlt
adc
or
ja
dec
add
je
cmp
inc
stc
jb
popa
xchg
push
pop
cmpb
repz
pop
ret
xor
sub
adc
inc
jl
mov
sahf
sbb
sub
out
or
out
cmp
dec
jmp
jecxz
xor
jb
sub
repnz
push
flds
cmpsb
loope
sub
pop
sbb
pop
push
cli
jae
cltd
push
scas
jle
scas
in
cmp
fcomps
xchg
pop
cs
jp
xorl
lret
mov
mov
daa
lea
push
jecxz
adc
lds
outsl
aas
pop
push
divl
sub
push
jmp
and
shlb
cmp
stc
test
mov
out
push
mov
xchg
mov
push
push
imul
adc
push
fwait
int3
clc
in
inc
or
push
invd
subl
clc
std
mov
cmp
into
jbe
lret
cld
leave
mov
sub
enter
push
push
hlt
xchg
out
adc
or
mov
xor
scas
cmc
outsb
pop
push
ret
jmp
xchg
dec
enter
faddl
and
scas
inc
cli
lahf
sbb
adc
inc
mov
aas
lock
rolb
sub
cmpsb
movsl
nop
mov
inc
cmpsb
push
jb
popf
add
jge
inc
sub
push
mov
mov
mov
xor
dec
jb
out
add
sub
ss
addr16
xor
and
xchg
sti
cmp
leave
xchg
xchg
push
popf
lret
ret
xor
adc
ljmp
lea
sbb
inc
mov
inc
or
push
mov
mov
call
pop
and
inc
icebp
aad
push
arpl
fisttpll
divb
test
loope
out
fwait
xchg
jo
mov
mov
and
lret
inc
xlat
mov
push
mov
inc
repz
adc
clc
adc
jg
xchg
pop
mov
sub
dec
cmp
and
lahf
sbbl
mov
sbbb
lods
dec
popf
inc
cmova
ficoms
andl
jmp
add
jae
int
mov
jge
andl
out
sarl
popf
fs
enter
ja
aaa
pop
dec
cmp
push
adc
stc
test
mov
or
cs
es
cmp
cmp
adc
jmp
enter
enter
mov
sti
scas
ficomps
sub
leave
in
mov
fnstenv
das
stc
fsubrl
adc
mov
ljmp
test
movsl
pop
in
push
movsl
adc
ret
daa
das
push
and
hlt
mov
pop
call
test
cmp
mov
sbbb
push
insl
add
test
sbb
xor
xchg
cmpsb
jecxz
jns
cmp
fisubs
outsl
mov
cltd
jg
pop
dec
inc
idiv
sub
and
sub
add
push
lea
sub
lcall
aad
outsb
mov
bound
xchg
add
and
inc
cmp
jo
cmp
xor
cli
pop
push
jecxz
and
xchg
out
push
icebp
or
add
dec
add
jb
push
je
loopne
dec
inc
mov
testb
shrl
push
mov
sbb
cmp
hlt
faddl
stos
adc
mov
rcll
or
xor
shr
out
shlb
mov
mov
test
push
mov
in
call
adc
mov
fildl
xchg
inc
call
jecxz
push
aaa
jbe
iret
je
loopne
xor
mov
or
sbb
out
mov
add
cs
xlat
xor
out
push
push
hlt
cmp
mov
aad
hlt
lock
sbb
or
push
test
inc
sti
loopne
in
mov
ret
xchg
sbb
mov
pop
sbb
popa
or
aas
incb
jl
ss
shlb
jae
cmp
mov
enter
repz
pop
jmp
sub
sbb
pop
cmp
push
jne
push
add
dec
stc
xchg
pusha
pop
or
dec
popf
mov
xor
mov
and
cltd
fldenv
push
cmp
mov
pop
test
mov
std
or
cltd
popa
add
sbb
cltd
jae
add
xchg
loop
imul
ja
sbb
pop
cmp
scas
repnz
js
enter
dec
dec
pop
dec
call
lcall
or
movsb
in
lahf
enter
jp
ror
enter
adc
negl
xlat
testb
aad
mov
xchg
and
int3
aas
cmp
xorb
arpl
popf
ss
xchg
mov
push
outsb
adc
test
stc
ja
fisttpll
insl
pop
adc
dec
inc
jb
xchg
cmp
les
pusha
xlat
incl
pop
push
xchg
mov
dec
jp
mov
xchg
jbe
pusha
xor
sti
rdmsr
inc
jecxz
loop
sub
aas
sbb
pop
jne
insl
dec
pop
aam
xchg
and
add
popf
addl
push
and
out
outsl
mov
nop
ja
xor
pop
cmp
fcomps
lahf
pop
xchg
decl
push
stc
xchg
test
jp
sbb
sbb
stc
aam
or
out
xchg
push
pop
sub
jb
lods
inc
push
rclb
std
push
inc
pushf
sub
sbb
aas
pop
testb
push
jb
test
mov
or
xchg
push
popa
pop
sub
sbb
lcall
dec
and
push
cltd
ret
ds
daa
lods
cmpsb
dec
leave
cmc
xchg
gs
call
push
mov
imul
dec
jno
popf
enter
into
mov
cmpsl
sub
lods
and
cmp
pop
aaa
mov
inc
imul
inc
imul
cltd
out
into
imul
xchg
cs
dec
jne
out
mov
rcll
gs
pushf
insl
enter
sbb
push
lods
and
dec
mov
add
or
arpl
cmpsl
cltd
subb
ljmp
decb
and
or
xchg
pop
pop
mov
push
mov
mov
lods
xchg
outsb
adcb
repnz
adc
leave
xor
insl
add
add
loop
sbb
mov
pop
sti
xchg
pop
je
aam
fcoms
add
popaw
in
int
mov
cmpsb
in
xchg
mov
mov
leave
int
sbb
sub
inc
xchg
push
insl
push
cmp
mov
std
scas
adc
mov
ret
stc
dec
adc
push
mov
clc
pushf
popa
fisttpll
ljmp
ljmp
jecxz
add
aaa
push
lea
fstpt
jg
imul
jo
fisubs
pop
cmp
dec
adc
pop
pop
std
ds
pop
ret
xchg
jno
stos
add
rclb
jp
icebp
popf
push
push
adc
mov
xlat
arpl
mov
cs
int3
push
int3
cmc
jg
out
or
roll
mov
rorl
pusha
sahf
cmp
cmp
push
cli
xchg
loop
dec
js
sti
push
out
jp
xor
xor
or
sub
mov
insl
mov
decb
cmpsb
and
xchg
sarl
push
pop
sub
lea
test
and
add
cmp
jmp
sahf
add
hlt
push
pushf
xchg
add
dec
jns
or
outsl
push
imul
mov
in
jbe
xchg
mov
subl
sub
cmp
xchg
mov
and
test
mov
loop
clc
popf
mov
add
jns
sub
push
enter
xor
pop
or
cmp
cmpl
sbb
mov
jno
lea
xor
subb
mov
ret
push
jae
je
xchg
push
jmp
movsl
inc
mov
pop
in
movsb
xchg
lods
mov
push
andb
sbb
dec
addb
add
incl
xchg
adc
lcall
push
inc
jae
sub
sbb
ror
or
sbb
enter
insl
push
mov
pushf
jge
push
stc
jbe
xor
mov
je
ficoms
imul
adc
lods
xor
idiv
inc
popa
cli
clc
mov
mov
add
sbb
ss
outsb
stos
fmulp
jb
xchg
push
insb
mov
call
call
mov
into
sbb
popl
das
cmp
lret
call
in
lea
test
pushf
jo
add
std
ds
jecxz
adc
cs
dec
mov
push
cld
or
sbb
ja
dec
push
jo
lret
jbe
fisubs
mov
js
pop
push
loope
call
stos
das
jecxz
jp
fisubrl
dec
stc
cmc
cmpsb
or
pop
ss
rorl
and
push
push
dec
pop
je,pn
ss
cmpb
shr
addb
fwait
push
xchg
insl
mov
iret
jno
cmp
fsubr
lea
cmp
popf
adc
or
lods
ljmp
jecxz
shrb
inc
ds
add
daa
outsb
lcall
dec
daa
loop
hlt
cltd
sub
movsb
mov
and
ds
push
dec
push
adc
lret
roll
pop
jns
mov
lret
add
jns
js
cmp
xor
test
cmpsb
out
dec
sbb
out
movsl
lret
in
aas
scas
mov
nop
xorb
ffree
int
test
mov
xor
mov
inc
dec
icebp
push
mov
add
scas
jge
ja
pop
push
add
jo
sub
and
sub
aaa
enter
insl
icebp
cmpsb
cmp
push
mov
jg
jns
xchg
xor
inc
xorb
jno
mov
jg
sahf
jno
cltd
push
jo
lock
test
cltd
dec
add
add
inc
cmp
jle
fmul
xor
xchg
or
test
loopne
sbb
xchg
sbb
dec
fidivrl
outsl
pop
mov
add
and
xchg
push
test
adc
add
lcall
push
jo
push
aad
das
outsl
aam
inc
add
loop
add
loope
testb
aaa
ret
and
jmp
lret
pop
xchg
cmp
mov
xchg
push
mov
sub
gs
shr
jmp
jle
add
mov
cwtl
push
xchg
cmp
daa
insl
into
sbbb
dec
inc
add
rcrl
cmp
lcall
cwtl
js
mov
movsb
inc
scas
sub
lock
pop
mov
lods
mov
and
mov
add
lds
lea
ja
pop
lds
add
mov
cmp
mov
movswl
decb
or
jno
mov
mov
cmp
cwtl
or
jnp
repnz
les
or
sbb
xchg
push
dec
fwait
inc
hlt
and
adc
ljmp
stc
outsb
jno
cmp
mov
xor
jl
xor
jecxz
daa
sbb
les
in
scas
mov
stos
dec
inc
dec
push
stos
imul
dec
xor
repnz
and
jmp
jmp
xchg
leave
je
in
mov
iret
adc
jb
push
mov
daa
dec
inc
sbb
or
jmp
sbb
sbb
cmc
push
lods
dec
jp
mov
push
mov
xor
inc
and
outsb
push
sti
imull
cmc
lahf
enter
lret
cmc
add
pop
xchg
loop
repnz
and
in
jnp
pop
jnp
jae
insb
popf
inc
dec
jge
and
in
add
push
inc
ret
push
xor
rcl
adc
pop
inc
sbb
mov
imul
jo
or
cmp
and
pop
ret
in
std
jg
aad
pop
int3
dec
fisubs
sbb
mov
mov
int
outsb
adc
mov
dec
shrl
jg
call
imul
sbb
lcall
adc
push
test
push
inc
orb
or
aaa
das
nop
call
cmpl
xchg
and
and
cmp
nop
jae
inc
fxch
pop
aad
mov
adc
outsb
js
xor
push
test
xor
and
or
push
add
adc
out
fisubrs
loopne
xlat
xor
mov
mov
loopne
or
cmp
dec
or
arpl
cmpsl
cmpsl
test
inc
std
or
sbb
test
aad
sbb
lds
sub
push
lcall
je
inc
das
sub
dec
cmp
jb
xchg
jp
outsl
dec
xor
dec
jmp
inc
xor
addr16
cmpsb
pusha
imul
loopne
cmc
mov
or
mov
sbb
xchg
clc
or
push
and
mov
and
fstpl
sti
pop
mov
dec
pop
mov
decl
mov
fs
iret
std
and
mov
sbb
push
jmp
jnp
jmp
enter
in
daa
popl
mov
jmp
jo
xchg
jo
nop
push
enter
or
test
lock
les
iret
dec
xor
cld
ja
imul
inc
pop
out
filds
cmpsb
inc
fcmove
lds
iret
sbb
xchg
addr16
inc
loope
cmp
addr16
dec
adc
inc
aas
lret
fnsave
dec
cmpsb
or
adc
clc
mov
pop
ret
xchg
sbb
and
inc
mov
add
mov
add
cltd
pop
xchg
dec
pop
popa
add
rorw
jnp
sub
clc
push
jns
adc
mov
js
xchg
cld
mov
dec
cmp
adc
dec
xor
xchg
scas
andl
jmp
jne
int3
rcrb
dec
ret
div
push
sub
stc
mov
ljmp
xlat
psubsw
mov
test
sub
or
adc
loop
fcmovu
or
mov
adc
aam
push
add
cmp
call
aam
lds
add
push
or
push
ret
arpl
add
push
cli
insl
cmp
mov
test
cmp
push
rclb
cmc
and
aad
sub
jle
mov
hlt
adc
insl
pop
or
xor
add
inc
imul
sub
das
test
hlt
int
jecxz
sbb
add
das
jns
std
lods
leave
fstpt
out
aad
test
dec
xor
stos
dec
mov
insb
int
push
stc
shll
ret
jecxz
add
adc
push
mov
test
add
mov
pop
scas
or
and
pushf
and
out
fs
call
jecxz
dec
cmp
leave
jae
pop
adc
aas
push
sbb
mov
repnz
sub
repz
popa
push
into
sub
mov
xchg
pop
fbstp
dec
mov
pop
fmul
xchg
test
push
js
push
inc
test
jne
dec
mov
lods
push
add
in
inc
lods
repz
iret
add
jb
xchg
mov
js
sub
out
adc
icebp
xor
pop
lea
sbb
dec
mov
adc
gs
add
jle
pop
addl
push
or
jmp
test
scas
jge
aas
mov
dec
aam
mov
push
pop
movzbl
dec
mov
aad
test
add
add
out
or
mov
xor
ds
adc
and
or
adc
aas
flds
lock
jns
fadds
ja
mov
shlb
mov
mov
jo
jno
imul
test
outsb
dec
push
aaa
sub
leave
push
push
or
and
fucomp
or
adc
jnp
sub
mov
stos
out
pushf
imul
push
scas
adc
sbb
ja
repz
imul
daa
add
jle
cmc
mov
outsl
fisttpl
call
adc
xchg
gs
bnd
cmp
scas
adc
push
dec
pop
cmc
popa
jmp
xchg
push
mov
hlt
mov
dec
cwtl
leave
push
mov
push
loopne
and
xchg
pop
popf
cmp
dec
add
cmp
lret
xchg
sti
or
addr16
insl
add
inc
push
mov
adc
and
pop
cmpsb
xchg
repnz
push
nop
outsb
ds
jns
adc
lea
adc
cmpb
popf
inc
rclb
jg
inc
and
scas
xor
mov
imul
lahf
mov
fistl
cmp
movb
push
inc
adc
loopne
sub
lahf
dec
dec
cmp
sub
pusha
addr16
loope
sub
rcll
jecxz
pop
cmp
adc
stc
dec
iret
inc
push
ret
test
mov
pop
ret
xor
jle
aaa
out
inc
push
push
push
mov
clc
lahf
adc
push
test
mov
nop
mov
push
push
cmp
mov
es
xor
mov
out
ss
mov
hlt
and
std
adc
outsl
push
and
aas
mov
sub
out
jle
js
negl
sub
enter
or
sbbl
push
push
fcomps
gs
adc
push
orl
loop
ljmp
sub
inc
bound
adcl
xlat
pop
loop
test
dec
pushf
jg
jmp
insb
jo
iret
dec
adc
jp
repnz
sbb
faddp
sbb
and
mov
repz
jns
int
fistpll
adc
mov
test
popa
in
repnz
adc
inc
shll
push
lods
adc
andl
aam
lds
ljmp
sti
ror
xor
pop
stos
in
push
cmpsl
and
lret
in
imul
pop
xor
jl
daa
sbb
push
inc
dec
int3
test
jnp
rcrb
repz
int3
mov
movsl
sub
cmp
adc
clc
push
fsubrs
fidivrl
push
mov
xor
push
js
imul
stc
cmp
pop
lahf
jp
int3
push
out
mov
test
ljmp
inc
imul
fs
test
rorb
xchg
sub
in
xor
loop
pop
mov
jle
dec
add
sbb
cmp
iret
sahf
sub
scas
enter
shrb
add
xor
push
pop
inc
lods
sar
das
adc
sti
cmc
imul
push
or
test
rcl
sbbb
mov
pop
jl
cs
pop
dec
mov
sbb
dec
pop
ljmp
test
mov
in
jo
xor
rep
or
out
or
daa
dec
sbb
fsts
out
bound
push
loop
jno
add
repnz
dec
into
pop
mov
jnp
fsubrs
iret
aaa
inc
mov
test
and
sbb
cmpl
ss
adc
fs
jg
call
aam
jbe
xchg
ret
mov
mov
inc
icebp
das
inc
xor
cli
lret
xchg
push
insb
sub
aam
std
movups
lcall
insb
xor
in
and
xor
sub
pop
jg
xchg
pop
jbe
insl
push
andb
pop
dec
lcall
mov
pop
xor
fwait
in
hlt
clc
pop
mov
out
in
xchg
dec
test
aam
mov
cli
insb
pop
inc
add
test
sub
movsl
stos
test
shrb
int3
data16
stos
xlat
lahf
sahf
aaa
stos
adc
adc
gs
jle
lds
arpl
negl
push
mov
jg
pop
stos
nop
sbb
xchg
dec
bnd
popl
addb
jecxz
lock
mov
pop
push
out
in
int3
jmp
and
xor
filds
pop
movsl
inc
mov
xchg
in
jmp
fwait
testb
and
stc
test
lret
fsts
pop
jl
dec
ffree
das
data16
adc
fstp
lds
in
mov
dec
pusha
dec
andb
mov
lods
movsl
mov
ret
add
push
add
lahf
dec
adc
shll
add
dec
repnz
test
andb
sub
pop
mov
mov
mov
cmp
and
jo
or
mov
cmpsl
outsb
outsl
test
fsincos
fistpl
outsb
inc
mov
mov
jne
sbb
and
inc
and
xchg
sub
pop
pusha
xor
js
cmc
outsb
xor
adc
shll
out
lds
repnz
dec
shrl
imul
repnz
movsl
int3
xlat
mov
sti
in
repz
pusha
cmp
xor
lock
inc
xor
jle
nop
mov
nop
push
and
push
ljmp
sbb
adc
fstl
and
mov
xchg
pop
jge
xchg
xor
mov
xchg
mov
xchg
push
addr16
fsts
ret
cmp
jae
sbb
mov
loope
rol
or
sbb
adc
push
mov
mov
lods
or
push
in
and
popf
or
inc
ret
dec
out
adc
mov
add
and
jecxz
cmp
jns
mov
cs
sbb
sbb
push
cmp
mov
je
lds
paddsw
ds
or
cli
clc
jno
in
adc
cli
movsb
in
sbb
mov
or
xchg
shrb
xchg
lods
jl
adc
lock
mov
ljmp
ficoml
clc
sub
fwait
loope
jbe
lock
stos
fbld
pop
loopne
cmpsb
or
xor
and
pop
cmp
dec
mov
add
aas
aaa
hlt
and
ffreep
mov
or
or
cmp
stc
add
in
or
shll
subb
pop
aaa
push
dec
sub
push
data16
mov
mov
push
pop
mov
mov
mov
cmp
mov
rcll
jne
pop
dec
or
loop
jl
and
and
lods
jo
adc
mov
jno
int3
aad
test
mov
push
testb
mov
test
jle
sbb
cmp
push
arpl
add
mov
loop
or
pop
mov
add
sub
sbb
fildll
sbb
mov
push
jne
pop
and
push
jne
addl
stos
call
pusha
pop
loopne
insl
sahf
push
iret
out
push
std
lahf
into
push
icebp
mov
mov
in
leave
hlt
adcb
int3
push
sbb
in
cmp
fstpt
lcall
xor
imul
pop
cmp
fisubl
repz
ret
add
adc
inc
sti
pop
pop
or
xchg
sbb
jnp
outsb
ret
mov
dec
out
sub
arpl
push
mov
adc
mul
lahf
out
xchg
shll
arpl
push
mov
and
outsb
xchg
imul
and
repnz
in
dec
push
pop
rcrb
popa
btr
stos
xor
add
scas
push
mov
mov
lahf
idivl
sub
push
nop
pop
cmp
mov
sub
mov
add
fstps
fwait
inc
stos
push
repnz
inc
mov
mov
mov
pop
negb
lea
aaa
int
push
in
sbb
in
mov
push
std
dec
dec
imul
cmp
scas
mov
mov
out
enter
xchg
mov
or
sub
push
mov
je
xor
jb
adc
add
dec
ret
cwtl
dec
aaa
sbb
loope
mov
dec
movsl
cmp
and
sub
push
mov
xor
inc
mov
push
add
rcr
cmovge
outsl
or
popf
sbb
mov
outsb
les
andb
adc
xchg
mov
ret
ret
cmp
sub
xor
je
arpl
pop
push
lahf
push
push
xchg
in
jno
fs
out
pusha
ror
sbb
sbb
or
lahf
mov
ss
sub
leave
jnp
xor
imul
adc
out
inc
or
xchg
jne
inc
nop
sbb
cmpsb
xor
mov
xchg
pop
imul
out
dec
jne
cmp
pop
out
addr16
add
cmp
push
pop
or
out
xor
inc
mov
add
aaa
and
xchg
insl
hlt
push
orl
ja
movsl
dec
mov
jno
loopne
hlt
ljmp
xchg
xchg
xchg
add
jns
xchg
cmp
in
dec
xchg
push
add
pop
or
cltd
lods
testb
mov
push
in
inc
iret
fisubl
xor
mov
dec
scas
jb
cmc
mov
dec
push
icebp
js
mov
aam
test
or
jge
ds
es
jae
jp
enter
mov
jb
out
mov
mov
in
push
test
sub
movsl
push
or
sub
dec
popa
lcall
iret
pop
push
sbb
xor
dec
sbb
rcrl
es
cmp
mov
enter
push
mov
scas
mov
adc
fmull
and
mov
jle
mov
mov
jns
mov
push
and
or
in
call
stos
jnp
cmpsl
in
fcomi
and
mov
stc
xchg
jne
cmc
xlat
aad
sahf
js
mov
inc
loope
call
xor
mov
out
int
stc
dec
daa
xchg
inc
icebp
repz
mov
push
ss
int3
jns
lret
rolb
lds
rcll
imul
mov
jmp
bound
cmp
add
lcall
pop
negb
push
dec
rol
push
bound
push
mov
mov
jns
mov
mov
dec
mov
mov
adc
pop
bound
bound
jae
fidivl
movsb
rclb
xchg
in
inc
int
mov
lret
jb
inc
mov
cmp
sbb
pusha
rolb
cwtl
loope
rol
dec
fs
fisttpll
repz
iret
and
sub
test
insl
pusha
xor
repnz
or
stos
fisttps
xchg
mov
repz
aaa
mov
les
pop
lret
lret
dec
xor
addr16
jp
std
cli
lea
mov
in
popf
dec
push
push
addr16
enter
mov
mov
stc
pop
mov
arpl
hlt
vphadduwd
dec
fildll
pop
adc
inc
mov
fwait
loopne
mov
cmp
xor
jmp
sbb
in
decl
mov
out
daa
sbb
popf
adc
cmc
outsb
in
repnz
bnd
push
mov
lcall
sbb
popa
js
cwtl
pushf
ja
iret
lods
lcall
pop
sti
jno
lret
and
iret
mov
cmc
xchg
cmpsb
add
aas
jle
push
sbb
jecxz
pop
inc
lods
inc
jge
aad
sub
out
mov
aaa
mov
cmp
xchg
test
sbb
icebp
fisubrs
sbbl
mov
push
lret
mov
jecxz
ja
pop
mov
in
push
pusha
movl
call
push
adc
lock
loopne
mov
push
pushf
push
pop
cmp
fdivs
call
xchg
jecxz
xor
sbb
sub
lock
xor
sub
push
sub
mov
add
enter
divl
mov
xor
xor
loope
jecxz
ret
aam
sarl
enter
nop
mov
out
pop
xchg
cld
lds
mov
mov
aas
jle
pop
int
rorl
mov
dec
or
pop
pop
mov
jae
lock
jl
shll
call
mov
ja
mov
mov
cwtl
dec
mov
add
data16
sbb
and
cmp
xor
scas
test
jnp
loopne
cmp
add
push
mov
jmp
pop
inc
jb
mov
in
add
pop
inc
cmp
cmpb
jnp
adc
xor
jnp,pt
push
loop
cmpsl
push
pop
fbld
ret
and
xchg
xlat
xor
cmp
loopne
dec
outsb
sbb
js
pop
insl
mov
xchg
sub
js
xchg
pop
adc
inc
stos
test
test
outsl
lds
cmpsb
or
xor
xchg
and
jmp
fnstenv
add
and
cmpsl
cmc
aam
data16
js
das
or
pushf
mov
cwtl
mov
cmpsl
adc
xchg
ljmp
xchg
aam
jl
push
pop
adc
outsb
mov
push
and
es
xchg
lret
lret
push
outsl
push
leave
inc
mov
and
pusha
cltd
cltd
push
xchg
dec
jg
sbb
sbb
cmp
cmp
cmc
insl
pusha
ja
mov
jg
outsl
addl
add
mov
mov
fistpl
sbb
and
mov
push
stc
or
push
xchg
test
inc
jp
movsb
int3
insb
fs
loopne
mov
lock
or
cmp
xor
push
sub
outsb
pop
ja
push
sub
inc
je
pop
mov
rolb
push
adc
push
pop
xor
xlat
mov
add
sub
xor
js
dec
leave
and
mov
inc
stc
arpl
out
fwait
call
negl
and
push
in
int3
jecxz
push
add
in
pop
jle
loopne
call
orl
lods
std
jge
push
dec
mov
ret
lahf
outsl
lahf
jecxz
or
push
leave
xchg
mov
dec
mov
inc
cld
mov
aaa
mov
cmpsl
sbb
mov
fstl
cmp
jno
lock
mull
jge
adc
jl
inc
and
push
pop
push
enter
movsl
enter
notl
sar
or
sub
xchg
xlat
push
mov
adc
daa
adc
test
push
mov
movsb
les
cmp
add
mov
cmp
inc
ljmp
cmp
inc
imul
dec
cltd
cwtl
popa
daa
aas
pushf
loope
imul
incb
clc
fnsave
clc
cmp
xchg
popa
inc
xor
jne
lret
aaa
mov
mov
push
dec
in
cli
ss
dec
ffree
jb
cli
mov
xchg
adc
cli
pushf
int3
mov
test
in
sub
arpl
out
icebp
xor
fistps
xchg
arpl
sub
aaa
out
lahf
das
mov
jne
dec
bound
add
push
daa
sti
jge
mov
fldl
xor
add
xor
les
add
cwtl
push
cli
fldenv
lods
addr16
push
repnz
and
push
pop
push
mov
adc
xchg
mov
sub
rorl
pop
add
mov
lret
pop
cmp
in
lds
add
movsb
push
push
xchg
fs
xor
add
pop
mov
adc
insl
dec
mov
mov
jge
push
pop
sub
jnp
fstl
mov
test
and
sbb
pop
push
xchg
out
repz
fs
mov
add
out
mov
xlat
repz
mov
push
mov
push
cli
shrb
mov
fisttps
adc
es
sbb
idivb
dec
scas
and
sub
jne
sub
aas
lcall
cwtl
cld
rcrl
sbb
jne
mov
enter
push
repz
stos
insb
sarl
ror
imul
mov
popf
and
mov
test
cmpsb
mov
sub
xchg
sub
outsl
pushf
jo
clc
loope
xchg
data16
or
cmp
add
pop
jmp
mov
mov
sbb
fmulp
aam
inc
push
leave
and
je
inc
adcl
shll
pop
aaa
stos
pop
mov
xorb
jns
dec
or
lods
push
mov
rorl
add
loope
mov
push
jge
lret
cmpsb
xor
repz
or
outsb
sub
lahf
xchg
push
mov
push
cmp
pushf
cwtl
lods
pushf
mov
decb
mov
jbe
sub
cmpsb
push
push
xchg
shr
mov
les
pusha
out
outsb
dec
inc
pop
lret
pop
loop
jmp
jno
imulb
inc
imul
and
out
in
push
fstpl
xor
or
je
enter
sbb
ror
std
fbstp
mov
mov
cmpsb
outsb
nop
dec
ds
xor
xchg
lds
decl
popa
sbb
dec
cli
mov
int
cmp
hlt
call
pop
test
xor
pop
dec
icebp
mov
pop
add
fcmovb
lahf
cmp
repz
xor
into
stc
mov
jbe
and
push
leave
xlat
adc
cmpsb
sti
bound
fisubl
outsb
lret
ja
xchg
data16
js
pop
dec
xchg
lcall
adc
popa
or
sub
push
jmp
repnz
jge
mov
and
push
and
gs
inc
lret
fxch
inc
and
inc
add
pop
or
xchg
mov
mov
mov
imul
call
add
add
mov
movsb
mov
mov
imul
cmp
outsb
cmp
das
push
jne
in
stos
adc
out
mov
scas
pusha
push
jb
pusha
xor
dec
mov
scas
xchg
rorb
in
repnz
pushf
sub
cld
imull
cmp
jne
std
pushf
int
outsl
outsl
nop
mov
aaa
mov
scas
pop
mov
daa
or
inc
iret
mov
movsl
add
clc
ds
mov
sbb
cmpsb
stc
pop
and
mov
push
cmp
or
outsb
das
in
scas
xchg
mov
cmc
hlt
aam
xor
cmp
inc
sahf
jae
cmpsb
mov
push
dec
test
ljmp
jns
inc
xchg
aaa
mov
aaa
jno
mov
addl
xchg
pop
cld
lahf
sub
lods
and
sahf
mov
xchg
inc
lock
out
out
sbb
jbe
jne
mov
in
lcall
xchg
sub
jmp
call
filds
sub
dec
xchg
roll
mov
push
mov
mov
mov
add
sbb
mov
ficoml
cmp
mov
ja
dec
cmp
shlb
cli
xrelease
lret
jae
pop
push
cmpl
es
stos
push
sub
loopne
adc
enter
jns
dec
das
insl
bound
or
stos
and
cwtl
stos
fldcw
jle
cmp
inc
enter
enter
addl
decl
pop
dec
push
dec
jae
mov
xchg
loop
sbb
and
shl
fidivl
cmp
mov
jne
pop
cltd
mov
sub
push
xorb
sub
dec
mov
roll
xor
mov
pop
dec
test
bound
pop
rcrb
fsubrl
xor
movsb
push
xor
mov
add
std
arpl
ljmp
or
dec
pop
mov
jnp
fimuls
sbb
jl
xor
dec
adc
xor
rcl
jnp
leave
xor
gs
mov
dec
nop
jle
mul
ljmp
int
sub
xor
sub
xchg
rorl
cmpsl
mulb
je
cmp
pop
fdivl
jnp
dec
aaa
pop
std
das
sub
fnstenv
int3
dec
test
into
aad
push
mov
mov
cwtl
decb
lret
mov
jle
pop
sbb
xchg
dec
or
rolb
inc
aam
xchg
add
iret
add
idiv
aad
xchg
arpl
aas
pop
adc
lods
loope
inc
push
jmp
jne
jnp
pushf
mov
mov
xor
inc
mov
test
nop
inc
jnp
mov
ss
icebp
xor
ss
sub
sub
sub
push
out
add
pop
or
sub
cmp
mov
imul
pop
pushf
leave
sbb
lret
mov
adc
lea
sub
add
mulb
adc
sbb
lds
pop
xchg
fwait
enter
sbb
dec
mov
in
mov
int3
scas
mov
out
push
pop
andb
jno
out
out
nop
cmpsb
jns
lods
test
dec
cmp
mov
iret
lahf
test
sahf
sti
cmp
lahf
mov
sub
pop
inc
dec
mov
mov
xor
inc
sbb
popa
cld
and
adc
lea
in
cli
or
xchg
rolb
jno
sbb
shrl
push
cmp
push
into
mov
notl
stos
iret
jg
jge
loopne
leave
inc
ficompl
imul
adc
cwtl
cmp
ljmp
movsb
setns
mov
or
mov
push
xchg
mov
sbb
aaa
jae
icebp
gs
xchg
cs
mov
addr16
fistl
push
jb
fst
pop
push
push
jmp
neg
scas
mov
xor
add
xchg
aas
ja
arpl
xor
cmp
mov
test
mov
push
in
test
sbb
fdiv
adc
adc
sbb
jo
adc
sub
je
inc
repnz
shl
mov
mov
mov
shld
fwait
in
stc
and
mov
imul
outsl
pop
pusha
imul
dec
push
inc
jmp
sahf
cmc
jae
fsubs
clc
pusha
xor
cmp
in
ficompl
xor
inc
aam
iret
dec
scas
or
les
pop
setg
outsb
and
dec
pusha
sub
mov
aam
dec
lcall
mov
and
cltd
mov
pop
pop
inc
mov
mov
jp
shl
mov
push
lcall
xor
lret
lock
int3
mov
cwtl
paddusb
orl
dec
dec
pop
aam
in
loopne
scas
add
add
mov
mov
push
jno
jecxz
push
pop
push
mov
mov
outsl
pusha
sub
mov
lods
jo
int3
test
bound
mov
adc
jmp
into
jge
adc
dec
mov
pop
push
xchg
decl
jl
cmpl
lods
add
inc
adc
movsb
push
outsl
fcoml
in
mov
ss
push
ljmp
scas
mov
data16
jecxz
out
xchg
outsl
pop
imul
push
cld
iret
push
sbb
push
bound
js
mov
movlps
mov
mov
push
mov
jmp
fsubr
scas
xor
xor
nop
push
pop
inc
imul
test
adc
ret
sahf
dec
xchg
shll
cmp
cltd
aas
or
jmp
mov
dec
xor
dec
cwtl
data16
int
aam
inc
cld
lcall
lahf
push
push
test
or
pusha
mov
out
lock
stc
mov
mov
addr16
push
sbb
add
mov
xchg
mov
daa
dec
sub
inc
repz
mov
ja
test
es
cmp
push
pop
push
lcall
push
jo
lret
fimuls
das
push
js
data16
sub
repz
sub
cmp
dec
pusha
cmp
or
roll
cwtl
sbb
mov
out
bound
cltd
ljmp
rol
int3
daa
sub
decb
adc
subl
jb
sub
xor
movl
pop
xchg
sbb
rcll
mov
roll
aas
mov
cli
stos
add
cmp
mov
mov
mov
mov
sbb
data16
mov
xor
jp
mov
inc
cmp
xchg
mov
mov
pop
dec
mov
xor
bound
enter
aad
fstl
adc
jecxz
dec
pop
inc
or
decb
push
and
sub
xor
loop
lea
cwtl
mov
or
dec
xor
sbb
fscale
jmp
adc
outsl
push
dec
xor
pop
jb
in
addr16
int
inc
xor
out
addl
push
addb
inc
addb
scas
outsb
cmp
pop
pop
aam
push
jne
fidivs
and
pop
xchg
rorb
mov
mov
dec
pushf
scas
sti
imul
mov
add
stos
adc
sub
shll
icebp
xchg
sub
inc
loope
sbb
adc
aaa
lcall
fsubl
test
inc
adc
data16
mov
mov
inc
xor
mov
mov
aaa
push
jge
incl
out
fsub
into
pushf
xor
scas
sbb
xor
loop
and
pop
ret
into
mov
ljmp
aad
sub
jbe
inc
imul
nop
push
jne
xchg
mov
dec
mov
sbb
dec
jae
int
rolb
xchg
or
sub
test
mov
cwtl
mov
mov
xor
add
jbe
push
daa
sub
shll
xchg
pop
sbb
xchg
outsl
push
mov
mov
int3
add
mov
imul
mov
loope
popa
push
fisttpl
dec
adc
adc
mov
jge
stos
popf
jbe
push
std
repz
test
pop
xor
xchg
add
das
test
mov
cmp
ja
jnp
sub
mov
out
pop
pop
sahf
in
lahf
stos
stc
es
jg
mov
sub
cli
xchg
xor
push
popa
cmp
xor
cmp
adc
gs
test
imul
add
mov
pop
in
leave
popl
mov
adc
jbe
jmp
cmp
sti
rcrl
inc
add
add
nop
lret
mov
sub
add
outsl
mov
mov
and
aas
jb
sbb
mov
pop
xor
int3
aas
cmp
pop
loopne
outsl
icebp
or
imul
mov
sbb
pop
inc
adc
out
lock
push
sbb
enter
mov
sbb
jne
fsubs
and
mov
daa
jnp
pushf
movsb
jo
cli
jecxz
es
pop
mov
pop
mov
inc
sbb
xchg
das
popf
mov
xor
flds
adc
mov
inc
scas
fistpl
jle
push
fs
cmpsb
xchg
and
cli
aad
and
int
les
arpl
sahf
rorl
lock
mov
adc
push
xchg
in
jb
loop
or
pop
cmp
in
cmc
mov
lret
sbb
aam
clc
lret
sbb
cltd
push
mov
jno
sub
and
aam
push
mov
adc
and
xchg
addr16
insb
out
iret
dec
lcall
aas
js
adc
inc
inc
rcr
call
xor
imul
add
mov
mov
push
in
push
loopne
xor
inc
inc
bound
jns
xchg
sbb
sbb
cmpb
mov
int
mov
jo
fistpl
negb
outsb
mov
pop
xchg
sbb
cmp
jns
mov
mov
dec
mov
push
es
loop
movsl
add
lret
add
jbe
jmp
sbb
mov
ret
xor
mov
xchg
push
xchg
push
or
sub
inc
jnp
push
lds
outsl
fcmovne
jbe
shlb
outsb
jae
jp
mov
in
mov
jno
cmp
sbb
push
xchg
mov
movsb
xor
push
jge
or
ret
stos
lret
or
mov
and
add
push
daa
pop
xchg
sbb
jnp
adc
or
or
push
cmc
popf
mov
add
cld
shl
xchg
sahf
adcb
enter
test
jbe
popf
loope
push
icebp
sbb
xchg
lods
mov
call
or
mov
pop
lock
sub
adcl
iret
fistpll
sub
pop
jbe
test
sbb
lahf
and
fldl
ljmp
push
xor
push
int
mov
xchg
and
sti
repnz
pusha
xchg
add
cmp
sub
mov
stc
adcl
in
add
out
mov
hlt
add
mov
sub
push
lret
mov
push
sbb
out
dec
push
and
jns
push
ret
push
and
arpl
mov
int
insl
popf
dec
sub
push
nop
and
and
lret
aad
scas
jno
sub
add
adc
pop
push
and
rcrb
adc
mov
pop
xchg
inc
push
lcall
loopne
fadd
lret
addl
xchg
fs
xor
pop
fistl
adc
inc
popf
jbe
cmp
push
in
es
fistpll
rolb
sahf
jl
cmp
add
mov
and
add
mov
inc
leave
mov
gs
inc
push
out
ret
inc
add
subl
jge
rcrl
test
lds
je
sbb
icebp
out
push
in
sub
mov
xchg
xchg
popa
xor
loope
add
sub
mov
scas
fists
push
dec
jne
insl
jbe
popa
lods
bound
ret
aam
repz
pushf
iret
sti
mov
or
push
sbb
mov
xor
insb
push
pop
popf
xchg
inc
cmp
rolb
fsubrs
push
dec
adc
test
clc
ja
sbb
aam
pop
xchg
enter
notb
cwtl
popf
enter
f2xm1
lods
pop
jle
rorb
pusha
pop
mov
mov
add
in
mov
or
nop
in
inc
cvtdq2ps
mov
call
pop
loopne
jmp
add
adc
push
mov
xorb
rcrb
pop
xor
mov
xorl
inc
dec
xor
insl
cli
imul
cltd
sbb
rcl
lea
lahf
mov
xchg
sub
jg
pop
fdivs
mov
jae
or
scas
pushf
jecxz
daa
pop
mov
pop
mov
inc
push
adc
jg
sub
mov
add
ror
lock
mov
mov
bound
in
int3
jno
xchg
dec
fmull
or
lahf
bound
pushl
inc
cmp
or
sbb
cltd
movq
mov
int
out
adc
stos
or
dec
ja
mov
popa
push
sbbb
lea
fsts
rorl
in
movsb
in
aaa
push
je
mov
adcl
lret
jmp
std
xchg
or
dec
cmp
ret
sub
outsl
inc
out
fwait
dec
adc
inc
lods
jmp
arpl
imul
clc
ds
addr16
xchg
cmpsl
ds
mov
divb
add
push
xchg
mov
out
aas
mov
das
dec
addr16
inc
cmpsb
jb
push
sbb
in
adc
mov
aas
pop
out
sahf
lcall
and
sbb
repz
and
out
cmp
xor
mov
jecxz
push
dec
cmp
mov
scas
lds
push
clc
xchg
cmp
mov
sub
test
or
out
push
xchg
inc
fdecstp
xchg
xchg
cmp
sub
add
xchg
loop
xchg
subl
bnd
adc
xor
xsavec
cltd
mov
cs
mov
xchg
cmp
cmp
imul
bound
push
or
pop
insb
xchg
scas
imul
sbb
sti
jg
mov
add
sarl
mov
inc
out
aaa
mov
sub
xchg
xor
insl
mov
test
lahf
push
movsb
cmpb
fiaddl
imul
out
bound
pop
push
jb
push
daa
cmovnp
mov
or
adc
push
jle
insb
and
fcomip
es
imul
repz
add
es
popf
pop
movsb
insb
inc
mov
push
pushf
mov
push
add
cmpb
xor
xchg
sub
test
inc
push
pop
xor
aas
push
lods
xchg
lds
test
mov
push
hlt
lret
movsb
pop
gs
mov
sub
and
sub
xchg
fwait
dec
jae
pop
sahf
or
andl
test
jle
and
fistl
cs
loopne
negb
xor
sbb
pop
pop
or
adc
test
repz
loope
push
test
test
mov
in
sub
and
pop
push
call
repnz
data16
clc
inc
dec
shl
jge
stos
fsubrs
push
xchg
divb
jge
push
jno
outsb
mov
jp
test
inc
mov
jl
push
stos
cmp
jmp
lods
pop
inc
dec
cwtl
mov
mov
mul
push
inc
or
push
cmp
rcrb
or
rcr
outsl
ja
xor
jg
push
pop
rcll
das
dec
xlat
xor
mov
cmp
mov
nop
sbb
jge
js
dec
loopne
dec
pop
mov
shrl
xchg
xchg
xor
xor
and
sti
pop
xor
insb
mov
js
and
daa
mov
aas
dec
jmp
out
cmpl
mov
dec
rcl
in
loopne
push
lods
mov
push
std
push
scas
sub
jo
ret
je
stos
shlb
cli
cmp
pushf
jae
inc
jo
fnstenv
repnz
adc
insl
scas
ret
lahf
cmp
repz
aaa
lock
dec
push
je
and
xchg
jl
js
sbb
add
lods
pop
and
movsb
push
pop
mov
inc
repz
sahf
repnz
jns
cmc
pop
push
outsb
fists
mov
dec
add
add
mov
out
and
cltd
filds
das
popf
pushf
js
xor
pop
xor
jge
movsb
mov
movsb
mov
xchg
push
pop
or
lcall
pop
stc
lods
in
scas
jne
mov
arpl
fistl
inc
sti
lret
rcrb
into
mov
xchg
mov
sahf
xor
jle
pushf
aas
push
roll
test
dec
arpl
fmulp
movsl
clc
add
mov
mov
daa
inc
push
add
adcb
or
scas
adc
hlt
jne
xchg
sbb
mov
jnp
cwtl
xchg
lea
xor
fadds
pushf
dec
aas
out
les
mov
sbb
cmpsl
sub
pop
test
mov
push
adc
pop
fldl
add
ss
xor
inc
lods
into
stos
and
lock
jns
cs
inc
cltd
add
jg
loop
cli
push
and
ja
dec
sbbl
fstl
test
stc
jecxz
insb
es
mov
pop
fstpt
jns
into
mov
cmp
arpl
loope
pop
cmc
lret
aaa
das
and
jge
lods
and
loop
pop
out
shlb
pop
sbbb
das
cwtl
incb
xchg
loope
outsl
js
or
xorl
add
scas
mov
daa
push
imul
mov
pop
shr
dec
iret
and
mov
repnz
and
push
mov
js
dec
adcb
xchg
xor
jae
inc
cmp
addr16
insl
inc
adc
loop
test
out
inc
pop
jl
push
mov
out
insl
inc
xchg
addr16
ss
faddl
insl
aam
adc
sbb
mov
cmp
dec
add
lods
inc
adc
jo
adc
pop
push
test
mov
pop
sub
sarb
int3
popf
xor
pop
or
mov
sahf
mov
popa
push
push
ret
leave
loopne
outsl
jecxz
sbb
movsl
decl
fldl
addl
lcall
inc
mov
jnp
lea
mov
push
pop
xor
mov
ret
or
sbbb
and
cmpsb
mov
push
xchg
inc
lock
cmp
cmp
scas
sub
and
mov
push
daa
push
outsb
ss
jecxz
ret
outsl
imul
lahf
push
jo
xor
or
into
lods
sub
sbb
in
or
fwait
sbb
jae
loope
pop
pushf
int3
xchg
in
jecxz
lds
es
movsl
inc
ja
jb
das
inc
jmp
inc
stos
stos
cmc
shll
ficomps
xlat
shr
jnp
pop
pop
push
lret
xor
jno
xchg
xor
cltd
aaa
fs
dec
xor
gs
and
mov
movsb
push
cmp
inc
stos
in
xor
lds
andl
push
inc
dec
xchg
stos
outsl
mov
lahf
sahf
push
pop
push
jl
mov
ret
dec
and
xchg
rol
fucom
cltd
in
cmc
out
push
mov
rcrl
adc
jp
fstpl
stos
mov
cmp
mov
js
scas
lock
or
test
cli
ds
sub
or
xchg
push
pop
xchg
sarl
out
add
sub
sbb
aas
jl
inc
insl
push
js
push
mov
ljmp
sub
add
and
push
in
int
cmp
mov
xchg
xor
sub
sub
loopne
stos
jg
push
out
rorl
out
mov
lods
mov
pop
mov
xor
testl
aaa
inc
repnz
jne
lret
popf
add
call
cmpsl
mov
mov
cli
cmp
jle
sub
stc
scas
aad
es
imul
gs
jle
mov
xor
push
adc
rcrl
pop
pop
push
xchg
and
mov
sahf
fstpl
bound
pushf
jp
push
sbb
sub
jecxz
mov
sub
sub
sti
jne
out
push
lock
xor
ret
cmp
xlat
cld
outsb
rep
aas
addr16
inc
mov
scas
lcall
pushf
les
pavgw
mov
lock
movsb
mov
fsts
imul
nop
in
fistl
xchg
push
ret
lock
call
shlb
scas
popa
fwait
imul
outsl
cmp
in
add
push
loope
adc
push
shrl
gs
daa
cld
cmpsb
pushf
sahf
jne
mov
cmp
or
aam
sti
rcr
jmp
cwtl
hlt
mov
cmpb
rcll
mov
sub
popa
fwait
cmp
jne
imul
repz
push
das
xchg
sub
jnp
pop
hlt
test
jmp
hlt
scas
das
push
xchg
stos
pop
mov
shll
cld
jg
pop
fisubl
adc
adc
xchg
sti
add
in
xchg
mov
or
ljmp
pop
xor
push
jbe
ret
push
insl
sbb
or
inc
in
xor
xlat
adc
mov
movl
sub
test
fnstsw
sbb
adc
and
xor
and
out
mov
add
pushw
call
jae
in
call
push
fnsave
arpl
loop
jmp
jns
xor
cmp
cltd
lcall
lcall
pop
outsb
rclb
loopne
sub
xor
inc
aam
in
and
out
pop
push
mov
cmp
iret
or
je
out
pop
movswl
push
nop
and
mov
int
nop
cwtl
je
inc
push
xchg
pop
fidivrl
scas
sub
mov
shl
add
sbb
orl
xchg
adc
mov
sbb
scas
jp
repnz
loop
iret
lds
lea
decl
pop
inc
xchg
leave
test
xchg
adcl
dec
ficoms
sub
mov
or
xchg
push
adc
std
in
stc
enter
push
sbb
mov
mov
into
sahf
divl
pop
sbb
int
jl,pn
cmpsl
fldpi
inc
mov
inc
xor
xchg
out
pop
push
imull
nop
and
dec
xor
and
jbe
jns
sub
inc
jl
daa
push
pushf
mov
xchg
orb
insb
sub
sub
fisttpll
mov
jmp
in
in
cmc
hlt
cmp
pop
fidivs
sub
push
xchg
popa
outsl
cmp
leave
or
push
push
aam
lahf
nop
notb
cmp
xchg
push
pop
push
jmp
out
mov
push
stos
popf
pop
or
stc
mov
sarl
or
pushf
xchg
clc
xchg
dec
jbe
pop
jns
cld
aam
mov
jp
aam
cmpsb
push
push
jb
in
pop
or
cmp
mov
sbb
dec
mov
add
sarl
mov
push
push
mov
jg
icebp
pop
popf
mov
fdivs
outsl
pop
int
shl
popa
decl
lret
add
or
cld
inc
mov
adc
push
mov
lds
mov
push
js
push
mov
push
pop
inc
adc
and
or
mov
cli
stos
dec
xchg
push
clc
hlt
pop
cs
jno
inc
imul
push
fisttpll
adc
xchg
lret
ds
lock
mov
or
add
int
es
gs
push
movsl
cmp
xor
mov
inc
jno
jnp
pop
mov
scas
or
xchg
mov
jle
adc
adc
fwait
or
popf
mov
add
mov
out
xchg
movsl
add
js
push
adc
shl
mov
sarb
dec
pop
popf
or
stos
adc
loopne
cmp
xlat
addb
insl
imul
hlt
jns
out
mov
out
mov
mov
scas
dec
negl
into
cltd
inc
sub
insb
rol
ss
jg
adc
push
das
xor
add
jp
mov
lret
mov
das
aam
sub
and
mov
sub
stos
cmp
cld
sti
dec
out
sbb
inc
in
add
movsb
inc
sahf
push
and
jbe
xor
imul
bound
les
loopne
loope
mov
push
popl
icebp
fbstp
cmp
dec
cmp
aad
std
mov
sub
mov
push
rcrb
adc
inc
add
push
and
ror
mov
rcrb
stos
cld
in
rclw
sbb
mov
add
xor
loope
ss
push
jp
jbe
cmc
mul
mov
jbe
mov
popf
out
pop
xchg
mov
fnstsw
ret
shr
idivb
cmp
repz
push
cmp
sti
xchg
add
loopne
sar
testl
cwtl
pop
scas
push
mov
insl
mov
insb
test
push
data16
mov
pop
push
out
sbb
mov
cmpsb
push
shll
fistpl
jbe
and
push
push
or
into
loopne
int
sub
aaa
mov
loope
in
pushf
popa
adc
pushl
pop
dec
pop
mov
lea
insb
inc
repnz
js
out
xchg
inc
dec
call
leave
lock
sbb
iret
aas
fstl
pop
or
and
lcall
fwait
sub
adc
fbld
fsubrl
fistpll
iret
cltd
jg
mov
leave
jns
stos
pop
push
inc
ret
inc
loop
adc
xchg
test
mov
frstor
in
pop
push
sub
lret
test
push
cltd
out
fnstcw
push
sbb
sahf
lods
aaa
loope
shll
adc
mov
bound
fbld
jmp
int3
std
jg
popa
ret
or
ljmp
xchg
cwtl
jle
xor
fstpl
mov
jb
jne
or
push
lcall
xchg
scas
mov
or
repnz
xor
in
adc
aad
jmp
push
gs
jp
xchg
inc
jo
loopne
push
sbb
ljmp
sbb
cmp
mov
stos
cmc
jb
lods
jl
stos
push
adc
mov
jecxz
mov
roll
dec
out
cmp
scas
fisttpll
inc
ret
push
xor
enter
dec
mov
lea
sub
push
xchg
mov
mov
insl
pop
cmp
xchg
pop
dec
fdivrl
ror
and
jp
pop
cmp
mov
fadds
popf
aaa
lcall
loopne
scas
rolb
inc
or
es
insb
xor
push
mov
and
fistl
adc
dec
or
pushf
mov
xchg
rcr
mov
mov
sti
dec
shll
shr
push
inc
mov
mov
lods
pop
repz
jno
btc
jecxz
mov
push
in
mov
js
push
and
push
cld
dec
push
mov
push
sti
iret
int
adc
and
insb
mov
subb
insl
sti
xchg
in
icebp
mov
in
pop
xchg
cmp
xchg
mov
and
sbb
mov
adc
not
mov
mov
test
out
xor
xorl
aad
lea
clc
fstpl
cmp
xor
lcall
mov
dec
pop
mov
jg
adc
pop
pop
cmp
icebp
pop
push
mov
push
fiaddl
stos
cwtl
aaa
loope
xchg
lret
int3
lcall
add
adc
test
fs
clc
adc
mov
push
fs
sbb
mov
movsl
or
loope
std
repz
mov
idivl
imul
cmpsl
inc
xor
jg
mov
leave
and
sbb
mov
fstpt
xor
lods
mov
push
cmc
dec
push
or
aam
sbb
jecxz
mov
push
pop
outsl
cmc
mov
sbb
int
xchg
aam
jb
ja
sbb
insl
rcr
mov
mov
adc
mov
push
dec
dec
jnp
lcall
lods
push
sub
sbb
pop
or
xchg
test
push
inc
inc
fwait
ljmp
add
xchg
loop
out
stos
mov
rorb
and
rolb
inc
loop
cmp
push
push
jle
gs
test
fbstp
sbb
dec
push
pusha
movsl
mov
mov
rorb
sbb
in
mov
cmpl
loop
or
sbb
xor
stos
or
inc
testl
sbb
lret
push
mov
cltd
shlb
jb
adc
mov
mov
into
inc
sti
add
mov
popl
cwtl
sub
fucomi
cmp
sub
je
jne
ret
jl
lcall
aad
jns
out
and
mov
push
fs
add
test
enter
jae
je
mov
into
push
je
daa
js
mov
fdivrl
out
cmc
and
data16
stos
flds
sub
or
dec
dec
mov
rolb
dec
and
push
pop
lds
or
inc
bound
leave
lcall
jnp
ja
notl
fwait
add
push
mov
jge
mov
push
daa
cmp
fadd
mov
int3
push
rorb
mov
std
lods
add
insb
push
pop
lahf
jno
in
rcl
and
mov
sahf
jbe
adc
fldcw
inc
inc
xchg
push
andl
jb
mov
mov
cld
mov
stos
test
push
lods
xchg
push
pushf
jae
fmull
int
leave
mov
dec
jp,pt
pop
cltd
mov
push
lds
xchg
sbb
jb
adc
inc
lods
ficoml
leave
repz
sub
inc
iret
lock
push
fdivs
pop
or
inc
subl
out
sbb
out
jae
out
enter
jecxz
jmp
jg
iret
sub
or
mov
sub
rcl
and
dec
lcall
dec
xlat
and
roll
mov
pusha
adc
xor
insl
aad
divl
pop
into
ljmp
and
pop
dec
test
jne
in
test
mov
jmp
dec
call
and
call
insl
rcrb
xchg
pop
sbb
xlat
dec
adc
xor
jmp
and
add
cmp
imul
sahf
dec
push
jmp
dec
or
adc
inc
ret
cltd
push
stos
mov
mov
xchg
fisubl
fdivrs
loop
dec
out
xchg
inc
xor
in
ja
xor
stos
lds
sub
lock
pusha
dec
leave
in
dec
push
mov
xchg
out
or
rorl
push
mov
jb
ret
inc
fsts
and
mov
jg
loopne
frstor
xchg
jae
repz
mov
test
lahf
mov
iret
xor
fcmovb
mov
je
stos
jecxz
mov
test
xor
sbb
int
pop
int
mov
dec
sbb
test
or
sub
shll
bound
pop
data16
jl
nop
mov
fidivl
sahf
push
and
ret
icebp
cltd
or
ficoms
mov
pop
and
or
jns
pusha
sbb
sbb
sub
negb
std
cld
sub
gs
jg
push
insb
int
push
add
ja
push
clc
movsb
icebp
jb
outsb
dec
ss
mov
mov
jo
jge,pn
push
cli
cmp
pop
mov
pop
dec
gs
mov
mov
mov
push
scas
or
or
enter
jle
sub
add
cmp
sub
or
aas
sub
adc
mov
push
push
std
pop
xchg
and
push
out
cmp
xchg
fadds
sub
jl
mov
mov
repz
or
mov
jl
pop
jl
and
jnp
jg
lock
clc
or
xchg
fdecstp
push
cmp
jo
or
mov
fcomp
xorl
push
pop
test
loopne
insb
jbe
in
mov
je
cmpl
mov
icebp
push
push
xchg
pushf
add
jno
pushl
add
jecxz
xchg
adc
sub
xchg
fsubrl
jno
mov
pop
fucom
aaa
sahf
aad
push
notb
fdivr
and
pop
fnsave
mov
adc
push
push
pushf
mov
sti
jbe
mov
mov
sar
jp
push
add
popf
sub
pop
mov
lock
mov
lds
mov
push
xchg
inc
mov
bound
gs
pop
jmp
push
mov
scas
push
mov
xchg
repz
dec
cmp
pop
lret
or
dec
jne
lcall
xchg
pop
push
sarl
dec
jb
push
pop
xchg
sbb
push
ret
ret
mov
sub
push
sub
mov
push
out
inc
push
jp
jns
pop
fdivrs
push
mov
in
in
inc
sti
insl
je
jecxz
mov
pop
or
imul
out
orb
repz
push
mov
adc
shrl
sub
inc
xchg
mulb
or
pop
mov
cmp
lret
scas
push
mov
xor
js
mov
lret
push
int
jbe
fistps
cltd
lods
push
jns
jne
jl
cmp
outsl
loope
icebp
jmp
sahf
jle
stc
mov
xor
sti
subps
cmp
out
jns
cmpl
aas
add
adc
popl
and
sbb
push
and
cmp
mov
mov
jb
inc
mov
aaa
inc
mov
push
in
sbb
test
sub
dec
fwait
sbb
push
mov
into
mov
pop
and
movsb
mov
jae
inc
pop
es
push
jno
out
cmp
mov
lds
lcall
fstpl
or
pop
into
sub
and
and
mov
outsl
mov
xlat
jno
outsb
stc
int
push
sub
lret
push
inc
popa
sub
mov
xchg
lcall
pop
pop
mov
loopne
sbb
jmp
or
mov
ficoms
dec
insb
mov
call
fidivs
mov
jno
mov
popa
push
popa
rorl
imulb
and
roll
ja
loop
sub
int3
dec
sub
mov
adc
mov
or
push
imul
fcoml
dec
icebp
icebp
and
push
dec
pop
dec
jg
push
or
push
cmpb
and
pop
je
imul
sub
mov
std
cmpsb
insl
repz
insb
mov
lret
push
cli
mov
mov
xchg
adc
inc
popf
rorl
push
fnstsw
dec
fdivrl
mov
aas
pop
push
mov
lea
cmpsl
mov
fldenv
xor
cwtl
pop
dec
imul
jl
mov
lret
je
ret
stc
fstpl
mov
in
arpl
testb
sahf
or
push
cltd
inc
ret
xchg
xor
push
fs
xor
insb
xchg
fisttps
cli
adc
lret
xor
xchg
mov
fisubrl
mov
pop
es
sbb
aaa
cmp
in
or
lods
clc
push
add
mov
lcall
daa
pop
sub
sub
test
mov
add
and
adc
jnp
push
pop
lods
cmpsl
ret
cli
add
inc
mov
jne
push
adc
xchg
xor
sbb
or
dec
clc
ficompl
arpl
scas
ret
pop
xlat
call
pop
notb
or
ret
insb
insl
lea
mov
stc
xor
xchg
lea
leave
pop
jb
std
mov
dec
icebp
and
inc
pop
jns
mov
ret
in
mov
xlat
out
sub
jmp
popf
sub
xchg
inc
ljmp
out
repz
dec
cmp
or
addr16
dec
jge
out
jae
or
fnstsw
scas
mov
add
mov
ror
push
fisttps
rolb
push
fdivs
outsl
stc
leave
push
pusha
dec
jns
push
push
adc
cmp
inc
fsubrp
mov
into
jle
jne
mov
xor
sbb
mov
lret
movsl
mov
inc
mov
fnstenv
in
cmp
test
ret
lods
pop
sbbl
push
shl
sub
push
sbb
mov
push
leave
jne
add
and
mov
int
leave
dec
loop
call
loop
fisttps
jnp
xor
rorl
filds
sbbb
repnz
and
dec
insb
mov
shll
sti
cmpsb
lret
lds
pop
out
iret
xor
mov
fiadds
and
cmp
cwtl
push
inc
daa
aaa
jmp
arpl
icebp
cmp
es
xor
inc
jo
pop
stos
sub
subl
jp
cmp
mov
mov
repz
lods
adcl
mov
jmp
inc
andb
and
cmp
imul
iret
push
or
fildll
enter
popf
ja
sub
cmp
pop
or
xchg
cmp
mov
jae
movb
sarl
mov
out
push
loopne
push
inc
sub
dec
int3
mov
dec
rcr
out
in
lods
subl
test
pushf
inc
call
pushf
imul
cmp
arpl
stos
leave
out
mov
mov
xlat
add
std
daa
fs
jo
lods
sti
popf
lea
shll
mov
fwait
pop
add
mov
mov
insb
xchg
cmp
xchg
daa
jle
dec
jbe
popf
add
adc
xchg
pop
insb
or
inc
lock
stc
inc
loop
mov
into
mov
nop
loop
push
cmp
movsl
pop
rcrb
xchg
pop
lahf
push
mov
or
dec
xchg
movsb
pushl
out
aaa
bound
pop
mov
cli
mov
sub
sbb
push
fnstenv
popa
test
js
sub
jno
fs
test
shlb
pop
dec
nop
sub
xchg
das
ss
xor
add
rorl
std
xor
ljmp
push
movsl
cwtl
leave
inc
out
xor
xchg
mov
pop
and
or
sbb
mov
mov
fstps
jb
pushf
cs
je
ljmp
imul
add
scas
sub
lret
std
into
inc
or
cmc
jl
pop
stos
cld
jo
je
out
adc
push
pop
mulb
sub
daa
imul
and
icebp
pop
jge
leave
xor
scas
sub
push
int3
pop
sbb
jo
push
lea
les
rorb
enter
cwtl
xchg
inc
pushf
and
repnz
daa
lds
fmul
jbe
jecxz
cmpsb
sbb
jecxz
push
sahf
arpl
sti
cli
mov
push
ja
jmp
mov
cmp
dec
push
fsubrl
in
adc
xchg
es
pop
mov
in
or
test
adc
mov
stos
arpl
daa
sarl
out
hlt
adc
and
inc
rolb
xor
std
push
inc
outsl
xchg
test
xchg
sub
sbb
notb
add
mulb
aam
mov
push
sbb
push
jae
in
cwtl
jo
test
test
push
push
ret
pusha
jb
add
jo
and
scas
cmp
ljmp
inc
mov
outsl
mov
cltd
rep
imul
gs
mov
je
and
xor
stos
aas
push
dec
push
daa
xchg
xor
xchg
jg
or
dec
jp
push
xchg
mov
add
sbb
dec
add
jno
xor
mov
pop
pushf
sbb
lahf
inc
xchg
repnz
dec
gs
or
out
cmpsl
loop
dec
divl
push
sahf
push
sub
stos
js
insl
jb
hlt
lock
mov
popf
cmp
xchg
dec
add
pop
adc
imul
addr16
pop
mov
or
mov
es
mov
sub
xor
mov
adc
ss
jl
mov
mov
fldenv
adc
jae
add
cmpsw
mov
jecxz
call
popa
in
xlat
pop
sti
fucomp
loope
mov
xor
lahf
mov
es
cmc
jl
lea
bound
dec
jno
cmc
push
adc
xchg
fisubrl
cmpsl
bound
mov
sbbb
pop
in
pop
je
pop
out
lret
or
jecxz
dec
add
xchg
stos
sub
xchg
loop
dec
filds
iret
push
pop
movsb
mov
test
mov
mov
scas
test
jnp
mov
cs
push
xor
arpl
cld
call
adc
repnz
push
inc
pop
jnp
mov
inc
imul
repnz
add
fiaddl
xchg
inc
dec
jmp
xor
mov
loop
xchg
cmp
mov
or
leave
jp
pop
rcl
adc
cmpsl
repz
adc
sbb
push
xor
pop
fldt
and
or
ds
mov
sti
sub
dec
mov
out
xchg
push
mov
in
xor
sahf
sub
aas
in
dec
repnz
adc
cmp
adc
sub
add
jns
cli
scas
add
push
shl
cld
outsl
jl
xor
repz
ja
in
aas
nopl
sub
or
loop
dec
insl
stos
cltd
xor
add
adc
sahf
mov
mov
add
inc
bound
iret
cld
shll
stos
dec
jb
lock
mov
nop
xor
adc
jnp
cwtl
aas
movsl
push
ds
jno
icebp
lret
sbb
nop
ds
jnp
mov
mov
mov
cmp
call
xor
call
aas
roll
lret
jmp
fucomp
movsb
push
inc
test
decl
mov
cwtl
xchg
mull
xor
pop
stc
cwtl
mov
fimull
in
sub
lahf
sbb
cmp
scas
insl
les
adc
jmp
test
mov
mov
arpl
ss
adc
call
pop
push
sub
push
cwtl
outsb
into
repz
fwait
and
mov
dec
mov
mov
push
xchg
rcrl
inc
in
in
fstpl
cmp
es
pop
pop
jo
sbb
mov
ret
push
les
add
pop
repz
or
xor
ficompl
sahf
fcomps
xchg
mov
add
imul
xor
out
mov
push
mov
push
xchg
out
pop
sub
loope
add
jns
push
aaa
push
add
sbb
pop
fnstenv
pop
mov
ljmp
test
mov
mov
popa
ds
cmp
sub
mov
mov
out
hlt
and
leave
dec
aaa
jb
cmp
sbb
pop
jge
xchg
add
lret
mov
sbb
sbb
mov
lods
mov
into
lahf
adc
insl
inc
sub
sbb
fsubrs
fidivrs
dec
imul
adcl
mov
cmp
es
outsb
loop
sahf
js
testb
push
mov
and
stc
stos
push
pop
mov
popf
dec
cmpsb
inc
jl
int
into
imul
pop
xchg
into
dec
ljmp
mov
xchg
mov
movsb
add
lods
iret
add
les
jbe
out
aam
dec
adc
loop
dec
push
push
add
inc
dec
repnz
sbb
gs
sbb
add
cltd
aam
xchg
out
aad
mov
and
clc
add
out
addb
mov
adc
into
data16
lock
push
stos
sti
pop
adc
test
test
cmp
loop
xor
test
adc
bnd
out
inc
mov
lock
sub
ret
je
aas
lea
je
aaa
bnd
push
mov
add
int
add
sub
push
mov
pop
fs
insl
jecxz
dec
testb
xor
loope
sbb
scas
mov
aam
scas
lds
insb
mov
loopne
add
addr16
xlat
xchg
mov
jg
pop
pop
and
nop
cmc
jg
in
cltd
sbb
jae
loop
push
add
inc
fbld
inc
cwtl
sub
enter
lahf
xchg
cwtl
cmpsl
mov
pop
mov
hlt
mov
inc
cmp
into
add
test
orb
dec
mov
and
ret
mov
arpl
lcall
inc
pop
inc
outsb
mov
addr16
jmp
sbb
fisubs
dec
dec
lock
test
int
jb
xlat
xchg
fistpll
repz
lock
mov
pushf
mov
cmpsl
mov
icebp
test
adc
out
or
icebp
sub
inc
xchg
outsl
fcmove
pop
fwait
and
mov
fdivrl
mov
pusha
sar
imul
cmp
push
xor
dec
mov
orl
js
sub
fcmove
dec
insl
xor
incb
jmp
lahf
cmp
pusha
jl
mov
mov
arpl
stos
and
test
or
adc
inc
dec
dec
mov
dec
xchg
insl
clc
lret
jne
and
aaa
out
fdivs
test
clc
jl
push
mov
imul
push
sbb
inc
or
bswap
shl
mov
and
negb
add
xchg
lock
cli
push
outsl
gs
add
int
xor
jge
gs
or
xor
and
mov
cmp
jge
icebp
cmp
outsl
and
adc
dec
add
mov
xchg
pop
xor
inc
adcb
xchg
push
add
pop
or
ret
add
subl
push
mov
jbe
or
cmpsl
push
pop
loope
fistpl
lahf
ficompl
lds
xchg
mov
push
mov
mov
cmpsb
mov
sbb
adcl
jl
push
or
mov
xchg
mov
pop
jae
daa
fcompl
pop
clc
add
and
jo
mov
push
mov
imull
mov
mov
mov
xchg
test
push
lock
ss
outsl
mov
ss
insb
int3
je
push
add
jno
fldcw
jb
stc
sbb
in
push
scas
jne
nop
mov
in
in
xor
inc
or
and
shlb
xor
pop
mov
sbb
lods
push
push
jp
hlt
arpl
pop
push
push
lcall
mov
mov
repnz
adc
imul
add
xor
idivl
adc
push
xor
lds
gs
inc
push
xchg
popa
popa
or
inc
add
subl
in
arpl
adc
adc
pop
std
adc
dec
sub
std
push
out
ss
and
movsb
push
or
cli
pop
mov
test
cld
add
sbb
ds
cmc
cmpsl
in
mov
inc
out
loop
jge
mov
push
popf
into
fmul
cs
ljmp
stos
or
test
jp
mov
cmp
enter
ds
es
inc
movsl
adc
test
ror
aaa
gs
cwtl
xchg
test
mov
jg
fwait
and
in
adc
fs
mov
or
adc
ss
sub
iret
jmp
rolb
pop
insb
sub
dec
inc
rcl
jmp
mov
into
jp
ret
and
sbb
sbb
push
jnp
bound
negl
mov
add
or
add
cld
push
push
rorl
insl
insl
jecxz,pn
mov
ljmp
les
inc
jmp
int3
push
pop
insb
in
insb
mov
cld
jo
daa
data16
movsb
or
cmp
stos
jecxz
mov
not
mov
jp
call
push
test
jo
shrb
and
lods
popf
sbb
mov
leave
arpl
add
xor
mov
xchg
js
pop
cld
adc
movsl
add
jmp
jmp
cmp
clc
mov
lods
imul
je
mov
pop
std
xchg
in
loop
leave
push
les
xchg
loop
mov
inc
mov
add
dec
mov
jmp
inc
or
jbe
inc
pusha
stc
out
adc
mov
lahf
sub
lods
iret
dec
push
mov
or
in
mov
orb
enter
orl
cmp
outsl
call
pop
cmc
ja
mov
stos
es
movb
pop
push
int3
and
sub
pop
out
inc
pusha
rolb
inc
loop
push
pop
loop
jb
mov
fucom
je
sbb
test
and
mov
loop
int3
out
in
lock
xchg
adc
or
jle
sahf
push
in
das
xchg
or
or
out
sti
lahf
sahf
add
xor
cmp
cmp
dec
mov
subl
cs
int3
inc
mov
pop
push
xor
sub
push
jne
push
sbb
fs
rcl
aad
cmpsl
push
mov
add
xchg
loopne
loope
jno
xchg
ljmp
adc
rol
inc
fildl
fsubrs
and
sbb
out
inc
cwtl
adc
pop
aad
cmp
mov
cwtl
xchg
dec
call
sbb
rorl
ja
lock
daa
and
dec
pop
popf
cmp
iret
sbb
lea
mov
scas
mov
mov
mull
divl
lea
test
aaa
arpl
mov
sub
loop
gs
mov
push
int
test
js
inc
xor
mov
push
enter
lcall
sar
jmp
push
jecxz
aad
or
sbb
push
lds
cmp
xor
push
dec
test
movsb
fiaddl
jb
push
mull
mov
dec
pushf
rolb
popa
iret
imul
jb
xchg
or
push
mov
call
out
fimuls
push
dec
jb
out
fisttpll
lret
xlat
mov
cwtl
sub
pop
mov
stos
sub
inc
icebp
mulb
sub
pop
xor
cmp
movsl
dec
push
jle
jbe
in
cld
ficoms
xchg
mov
and
or
mulb
gs
xchg
lcall
adc
into
iret
adc
rcrl
popf
test
and
adc
fnstenv
lahf
push
and
sbb
negb
test
cmp
pushf
xor
jg
push
xor
xchg
jmp
lods
or
mov
mov
imul
pop
xor
movb
inc
xor
inc
sub
std
ja
dec
popf
adc
cmp
roll
inc
pop
adc
test
inc
mov
jnp
roll
repz
xchg
xchg
lock
add
mov
jb
popf
out
fcomps
arpl
pushf
and
and
aas
out
mov
out
stos
sub
or
inc
es
mov
mov
push
push
push
inc
andl
daa
test
loopne
jg
sub
jp
aam
xchg
lea
cli
pusha
fs
pop
test
jg
jge
inc
fs
imul
imul
jp
lcall
jbe
int3
inc
insl
ror
cld
lods
lea
aas
addb
repnz
or
std
cmpsl
dec
aad
loope
in
ja
loop
test
dec
psubusb
and
inc
xchg
arpl
xchg
or
fdivr
dec
cmp
dec
mov
push
push
in
sahf
rcrl
daa
insb
test
sahf
imul
cmpsl
popf
push
je
sarb
or
push
pop
test
movsb
push
cmp
loop
mov
fists
scas
adc
push
sbb
fnsave
cmc
xchg
rorb
lea
lahf
je
adc
push
push
inc
popf
subb
and
and
lock
adc
pop
push
mov
addb
xor
mov
dec
rclb
addb
ja
cs
imul
jle
sbbb
mov
out
push
stos
fdivrs
rorb
call
aam
pop
out
or
pop
in
and
sbbl
and
andl
pop
and
and
push
xchg
inc
cmpsb
mov
scas
mov
and
shlb
mov
repz
cmpb
push
push
add
lods
lock
add
inc
rclb
sub
fadds
loopne
call
xchg
cmp
dec
add
lods
dec
jl
cmp
and
xor
cmp
push
jecxz
das
xor
testb
cmpb
ss
jbe
in
lods
mov
push
inc
mov
xchg
xor
mov
inc
popa
inc
inc
add
cwtl
leave
mov
fldl
insb
pop
jb
jg
lret
lock
dec
sbb
loop
push
push
ficomps
inc
push
dec
jl
adc
ja
xor
sbb
test
jne
or
clc
imul
and
sahf
cmp
lods
push
cmp
xchg
add
sbb
dec
mov
cmpsb
inc
cmp
mov
mov
test
mul
jae
cs
adc
sbb
inc
stc
push
xchg
es
gs
push
and
sbb
test
mov
mov
jns
pop
lods
and
sub
repnz
je
mov
dec
rcll
inc
push
imul
add
popf
mov
fbstp
jo
inc
jecxz
mov
mov
fadds
mov
stos
lods
data16
xor
jae
dec
jle
mov
mov
pop
cmp
in
out
add
or
js
jmp
or
decl
inc
outsb
cwtl
pop
lock
xor
jne
cwtl
imulb
pop
mov
jns
dec
mov
or
mov
loope
mov
or
ret
adc
scas
in
ja
addr16
mov
sahf
aaa
adc
sub
cltd
mov
ficoml
aaa
xchg
stc
into
dec
cmp
pop
imul
xchg
pop
cmp
test
dec
rcl
xor
mov
jge,pt
mov
jmp
push
push
rol
jb
lds
cmp
adc
mov
in
sbb
into
loopne
rcr
out
sub
push
and
fsubrp
sti
imul
add
sub
jno
jmp
int
xor
push
out
mov
mov
imul
inc
aad
pop
pop
in
dec
lahf
adc
jge
popl
xchg
pop
pop
movsl
push
decl
xchg
cli
jecxz
push
out
aad
and
adc
mov
leave
in
mov
in
pusha
fldl
sti
cmp
mov
and
cmp
push
gs
mov
and
ss
inc
test
mov
adc
pop
into
je
pop
jno
mov
negb
js
push
jne
push
repz
and
ret
inc
push
jne
mov
and
add
xor
add
mov
mov
lret
xchg
dec
xchg
ds
ror
mov
xchg
xchg
iret
sub
or
cmpsl
sbb
pushf
cmp
aas
cmp
xor
gs
cld
pusha
mov
sarl
mov
sub
lret
xchg
jmp
and
iret
or
mov
jnp
xchg
aaa
jecxz
js
popa
mov
dec
bound
je
xor
sbb
scas
icebp
cmp
lods
clc
inc
lds
rcrl
and
sarb
sahf
sbb
add
cli
sub
mov
in
dec
or
aas
divps
lods
xlat
fwait
ja
rorb
cwtl
push
repnz
or
mov
cmp
cmpsb
test
cmp
outsb
add
sub
adc
push
pop
arpl
pop
test
imul
cmp
fcoml
aaa
or
sub
xor
dec
lock
xor
bound
mov
ss
push
jmp
jb
sub
in
in
mov
outsl
pavgw
adc
jnp
push
lcall
mov
cltd
xor
popf
xchg
push
out
lea
dec
jle
stc
icebp
pop
nop
sbb
and
dec
inc
aam
pop
xor
or
sahf
push
mov
cld
sub
pop
hlt
out
popa
or
push
pushf
ficoms
cmp
idivl
pop
movsb
adcl
ljmp
sar
jo
imul
dec
lods
push
outsb
cmp
add
inc
or
mov
outsl
jbe
cli
in
lret
and
in
loopne
scas
lock
cmpsl
cs
mov
repnz
dec
dec
call
pop
inc
fisubrl
hlt
lea
mov
lret
fwait
pop
push
adc
lahf
adc
data16
jg
xchg
shll
pop
xchg
adc
cmp
mov
push
lahf
push
fld
add
mov
cmpsl
aaa
dec
cmc
enter
xor
pop
sbb
insb
mov
dec
lds
pop
xchg
insl
xor
mov
or
pop
adc
pop
shlb
xor
lea
call
cltd
stos
aaa
stc
sbb
pop
pusha
arpl
cwtl
mov
pop
les
ffreep
pop
push
xor
xchg
sahf
outsb
fstpl
ss
mov
pop
and
or
xchg
and
xchg
xchg
pop
stos
rol
xor
push
stos
ljmp
xor
push
dec
std
and
sbb
mov
sti
stos
mov
cmp
outsb
mov
adc
in
outsb
sub
push
loop
or
xchg
ds
test
xor
jmp
xchg
lea
xor
dec
aaa
pop
loope
lahf
stos
xchg
mov
jno
mov
mov
inc
add
in
jge
add
fs
and
adc
xor
lods
stc
fs
cmp
inc
inc
mov
sbb
inc
add
cmpsb
cltd
daa
adc
mov
inc
and
test
xchg
mov
test
inc
add
mov
sbb
ja
cmc
daa
dec
dec
sub
adc
push
mov
xor
stos
mov
jle
push
std
stc
in
dec
dec
into
hlt
xchg
jg
repnz
stos
cmp
xchg
mov
cmc
jno
adc
jp
xchg
mov
mov
rol
scas
fdivrl
mov
xchg
fnstcw
sbb
xchg
outsb
les
fcmovne
mov
add
pop
pop
iret
xor
xorb
clc
cmp
lcall
out
dec
negb
mov
pop
hlt
pop
sbb
ljmp
mov
or
push
fsubl
sbb
lcall
testl
mov
outsb
test
out
inc
mull
xor
fmuls
push
inc
xchg
jg
jb
daa
call
dec
lahf
std
push
lods
scas
cmp
daa
adcl
in
stos
fnsave
into
jg
cwtl
inc
push
arpl
adc
mov
fucom
cmpsl
popf
dec
xchg
in
or
cmpsl
mov
dec
mov
inc
push
inc
adc
loopne
arpl
mov
inc
test
push
lcall
or
fsts
xchg
stc
mov
cmp
in
adc
mov
jns
mov
inc
sbb
test
jae
sub
rorl
push
xor
mov
pop
mov
fildl
inc
enter
cmpl
jno
sub
cs
jb
test
pop
and
xlat
scas
clc
xchg
or
sub
mov
stos
push
ret
outsb
movsl
out
ljmp
cmpsl
popf
addr16
pop
cmp
data16
adc
push
popa
pop
or
fwait
sarl
cwtl
out
jmp
pop
scas
push
xchg
cmp
xlat
dec
inc
pop
mov
mov
mov
mov
iret
push
popa
push
das
das
add
mov
push
mov
iret
test
mov
mov
out
jmp
icebp
ret
or
movsb
push
clc
fs
pop
xor
adc
push
xor
gs
scas
dec
f2xm1
mov
lret
mov
fstps
ficompl
int3
mov
push
sub
aas
jb
lret
flds
call
and
push
sub
inc
ss
btr
in
jmp
sarb
mov
rolb
outsb
lods
pop
dec
cmpb
mov
push
mov
inc
xchg
inc
sub
in
addb
xor
adc
inc
pushf
xchg
shlb
mov
jp
add
nop
leave
dec
in
aad
jbe
sub
jp
push
iret
sub
fistpll
gs
scas
insl
mov
adc
mov
adc
jecxz
ja
adc
cs
imul
inc
in
cltd
bnd
push
xchg
loopne
aaa
lock
outsb
mov
jbe
inc
cs
and
xor
xchg
popa
jne
push
mov
sbb
adc
jl
push
pop
js
push
pop
sub
mov
cwtl
or
xor
fxam
fsts
push
xor
sti
leave
lahf
enter
mov
dec
cmpsb
popa
pop
dec
jge
in
pop
xlat
or
mov
aad
fs
mov
packuswb
inc
stos
pop
in
jg
out
mov
jno
sub
dec
push
xchg
idivb
je
lods
roll
xor
and
mov
insb
pop
push
inc
pop
mov
xlat
xor
or
call
push
add
inc
push
or
pop
dec
cwtl
notb
ss
pop
enter
pop
jbe
push
mov
pop
scas
xchg
ljmp
mov
mov
loop
xorb
movsl
aaa
insb
pop
loopne
push
cltd
sub
mov
push
push
movsl
pusha
dec
ss
callw
dec
inc
lret
lods
or
and
inc
popa
cwtl
addl
sbb
nop
add
jmp
popf
cmc
loopne
shlb
mov
addr16
test
cld
clc
ret
and
or
add
mov
arpl
fldt
js
ss
addr16
aad
jge
sub
pop
or
sbb
add
addr16
cmp
mov
jmp
stc
xchg
pop
or
pop
sarb
push
or
xor
dec
int
sub
imul
jnp
adc
mov
pushf
pop
les
int3
sahf
nop
or
add
adc
neg
lret
mov
mov
adc
shll
dec
cmp
mov
shl
sbb
mov
fdiv
mov
sarb
adcb
fnsave
inc
adc
jle
ret
addb
loopne
in
add
lcall
pop
or
ret
loope
mov
add
test
repz
adc
mov
mov
fwait
loope
mov
out
xor
das
pusha
lahf
mov
xor
movsl
mov
dec
sarl
insl
arpl
sbb
aad
add
pop
fs
sub
inc
das
pop
inc
loop
mov
stos
mov
shr
cs
push
dec
fists
inc
aas
test
sub
or
lods
lods
inc
lods
jbe
sahf
jge
jo
mov
insl
xor
ret
xor
cwtl
lock
add
dec
add
scas
negl
fadd
fistps
jl
clc
imul
push
jecxz
cmp
xor
clc
enter
sub
into
data16
pusha
fidivs
pop
push
stos
push
cmp
enter
jno
cmp
cli
inc
rclb
iret
xchg
mov
test
lds
adc
loope
in
xchg
mov
xor
fcomp
mov
cmp
xchg
iret
inc
cmp
std
inc
mov
in
xchg
arpl
scas
lahf
cwtl
sti
dec
fisubl
sbb
js
mov
xchg
cli
add
leave
inc
pop
and
in
test
das
add
andl
sbb
cmpsb
mov
test
jmp
testb
pop
rcrb
in
imul
inc
ljmp
in
dec
orb
fdiv
loopne
pop
sbb
mov
jg
sahf
mov
mov
in
scas
sbb
out
fs
pop
add
sbb
scas
in
mov
sub
mov
outsl
sbb
iret
or
test
stc
jns
test
adc
ffreep
cld
sub
loop
xchg
inc
jae
or
aam
xchg
pop
imul
xor
hlt
out
mov
push
hlt
push
test
inc
pop
loop
dec
adc
pop
lock
test
stos
in
pop
mov
or
lea
es
ss
adc
xchg
sbb
daa
in
imul
in
sbb
and
idivb
lret
negl
cmpsl
ds
or
fwait
sub
ds
push
dec
nop
movsl
push
aad
mov
js
mull
pop
push
nop
fxch
dec
xchg
test
xchg
rclb
xor
cld
popf
shr
arpl
sub
fadd
iret
or
imulb
addr16
xchg
push
adc
push
sub
xchg
dec
push
xchg
pusha
bound
xor
cmp
scas
mov
fmull
xchg
or
or
fwait
clc
int
ror
stos
push
xor
pop
mov
jg
dec
cmp
mov
ds
popf
fisubl
sub
and
mov
push
xchg
pop
mov
in
cld
leave
in
cli
out
xchg
fbstp
imul
subps
fs
shll
lret
inc
mov
adc
sbb
inc
sub
push
jge
aas
adc
or
jnp
leave
mov
nop
out
push
adc
xlat
sub
inc
loope
and
into
mov
loopne
in
sub
ja
out
out
lods
sub
fcmovne
mov
jb
push
mov
pop
sbb
mov
push
cmp
adc
insl
add
mov
aad
adc
mov
sbb
xchg
imul
sub
aas
pop
jb
out
pop
std
or
xor
insb
out
mov
fdivrp
jns
xchg
xor
popa
mov
add
mov
pop
pop
mov
fiadds
pushf
cmc
pop
push
or
xor
pop
add
shlb
mov
lahf
stos
mov
sarl
push
and
bound
jbe
loope
adc
adc
sbb
adc
sub
add
cs
lds
aaa
imul
pop
push
or
mulb
hlt
das
jg
mov
test
xchg
enter
cmc
and
jmp
dec
or
les
negl
mov
push
and
sbb
lock
adc
out
sbbb
aam
jg
daa
inc
mov
pop
jecxz
lret
imul
pop
fnsave
jne
lret
mov
bound
in
pop
in
xchg
dec
scas
mov
jb
pop
fsubrs
pop
jns
add
jl
jl
imul
cmp
orl
push
adc
mov
ret
mov
mov
dec
xchg
cmp
xor
pop
fdivp
fists
popa
jne
pop
in
push
xor
xchg
pop
push
out
sahf
cli
add
pop
push
int3
jno
test
movsl
sbb
mov
cmpl
pop
or
add
jno
cmpl
mov
lret
les
cmp
adc
nop
das
cmpsb
in
pop
mov
mov
pop
add
aaa
pop
iret
loope
arpl
pop
sub
dec
cltd
xchg
lods
mov
ja
fwait
sbb
pop
inc
jecxz
cmp
xor
xor
and
mov
push
jne
or
cmp
in
push
icebp
or
mov
imul
adc
into
mov
xchg
mov
adc
subl
adc
testl
sti
inc
in
pop
sub
add
orl
daa
repz
int
test
pusha
rol
repnz
popa
jae
push
mov
xchg
adc
mov
xor
lret
mov
cltd
mov
inc
cmp
lods
jnp
jl
sbbb
cmp
xchg
aad
scas
shlb
out
cmpsl
mov
or
int
pushf
repz
jp
xchg
in
rolb
push
pop
sbb
adc
pop
sbb
neg
jo
push
idivl
add
adc
fwait
pop
sbb
mov
test
or
aam
mov
cltd
fnstsw
mov
mov
fcos
cmc
and
or
subb
lock
enter
pop
inc
mov
mov
out
cmpsl
cld
in
inc
cs
jno
test
test
pop
ror
rcrl
negb
adc
outsl
ss
aas
mov
jg
mov
xchg
cltd
mov
int
rorb
enter
push
loope
ljmp
movsl
cmc
jne
or
sbb
sub
sub
mov
call
stos
out
scas
jbe
mov
inc
addl
sbb
int3
xchg
mov
xchg
and
sub
push
or
int
in
ja
les
ja
rcrl
or
rcll
dec
movsl
nop
pop
mov
adcb
rcrl
sahf
sub
cmpsl
pop
add
test
cli
out
dec
jb
mov
cmp
jmp
out
push
popf
xor
sbbl
adc
pop
out
inc
mov
jno
push
ror
dec
sub
cmp
adc
insl
mov
stos
cltd
push
xor
mov
push
bound
sahf
push
cmpsb
sub
dec
push
xchg
pop
testl
inc
lods
adc
popf
xor
imul
push
dec
lds
lea
add
ds
push
repnz
pushf
arpl
les
xor
add
or
fs
out
jp
pop
inc
mov
fwait
cmc
or
xor
mov
cmp
adc
in
int3
and
push
or
pusha
xchg
jnp
inc
cmpsl
jne
shlb
adc
xor
stos
add
es
sub
cmpsl
pop
call
push
xchg
mov
cltd
dec
inc
imul
push
push
out
mov
pop
out
adc
pusha
popf
jne
fdivrl
fs
out
fs
add
fdivl
mov
cltd
out
sahf
pop
mov
push
cmpsl
sub
mov
and
addr16
dec
push
push
and
xor
jp
cmp
std
fimuls
fs
mov
out
sbb
inc
daa
push
fidivs
out
and
xchg
sbb
fmuls
inc
sbb
daa
mov
in
roll
adcb
icebp
aam
mov
add
cmp
mov
imul
xchg
dec
test
jo
push
sub
imul
into
add
sub
cs
or
push
sub
outsb
inc
inc
int
xor
mov
mov
pushf
mov
sbb
cmp
cmpsl
adc
jns
jb
cmp
insl
dec
lcall
test
shll
in
pop
add
inc
add
pop
mov
jnp
lea
movl
jl
fsubs
push
andb
loop
inc
mov
cmp
mov
jnp
sbb
int
vmovd
aam
add
mov
mov
mov
jmp
mov
call
sahf
popf
sbb
push
push
cmp
fcoml
inc
fcmove
inc
push
mov
imul
sti
aaa
add
scas
cmpsl
lods
lea
inc
pop
ss
daa
mov
and
mov
mov
pop
outsl
outsb
push
push
or
sub
test
imul
sbb
ret
fmull
xor
arpl
add
addr16
inc
mov
lds
sbb
sub
jl
jecxz
push
mov
jp
pop
loopne
pop
iret
gs
dec
jne
in
and
cmpsl
orl
mov
mov
popf
stos
aam
arpl
roll
dec
out
push
mov
mov
ret
push
lods
pusha
sbb
ret
fwait
cmc
pop
mov
popf
push
mov
cli
inc
dec
cmp
cmp
movsb
mov
int
xor
cmp
stc
lea
xor
push
add
mov
xchg
frndint
mov
xchg
push
dec
lcall
xchg
xchg
pop
cmp
xlat
add
cld
lret
stos
sub
mov
dec
mov
xchg
sar
adc
call
and
xchg
jge
loope
xcrypt-ofb
cmpsl
ljmp
das
xchg
mov
mov
jge
mov
cmp
pop
cltd
bound
sbb
jmp
push
sub
movsb
popa
aad
and
std
jle
test
in
mov
add
jbe
int
ljmp
ljmp
imul
dec
fdivl
add
lret
pop
inc
and
test
xchg
outsl
xchg
lret
or
fcmovbe
lods
xor
stos
lods
jmp
sbb
push
data16
jno
or
cmp
nop
mov
orl
repnz
cmp
cmpsb
clc
jmp
imul
insl
sub
je
arpl
cmp
dec
jne
dec
sub
arpl
ret
sub
testl
jmp
xchg
mov
lahf
cmp
std
dec
inc
mov
xor
xlat
rcll
fneni(8087
mov
cmp
add
fsubr
mov
les
inc
fidivl
mov
movsl
sub
aas
cmpsl
cmp
mov
jns
mov
push
cmc
inc
dec
mov
dec
xor
mov
int3
outsl
push
je
cltd
push
sub
icebp
icebp
mov
cs
jo
fsubp
insb
xor
lret
sub
lret
sbb
xchg
imul
movsb
pop
mov
cmp
mov
xchg
fstpl
in
xchg
sbb
lds
mov
push
cmp
cltd
sbb
lods
imul
jmp
icebp
fdivrl
dec
pop
mov
cmp
cmp
sbb
pop
lods
adc
jmp
mov
mov
loop
loope
lds
add
jmp
and
adc
ljmp
cmp
mov
or
sti
outsb
mov
or
sbb
pop
sbbl
mov
cmc
sbb
cli
scas
test
xor
ret
mov
sub
push
rcll
xchg
test
dec
add
sub
xor
jge
mov
test
mov
outsb
insl
int3
scas
push
mov
push
jg
adc
and
imul
scas
mov
pop
xchg
rorb
push
xchg
das
jle
push
aas
add
scas
pushf
je,pt
mov
stc
jl
int3
stos
std
fiaddl
and
mov
sarl
cld
lods
pop
jl
push
popf
cld
mov
fs
pop
mov
movsl
pushl
ja
pusha
cmp
sub
leave
sub
scas
push
sarb
fdivr
and
pop
ja
sahf
inc
mov
push
add
addr16
imul
push
xor
jns
aas
cmp
mov
lcall
loope
sti
leave
xchg
mov
mov
leave
jge
clc
and
lds
pop
movsl
test
mul
push
mov
xor
cmp
inc
cmp
sub
mov
fninit
push
and
in
pop
mov
fwait
out
loop
inc
add
das
popf
rcrb
mov
gs
cmp
sbb
cmp
into
add
sub
mov
mov
cwtl
mov
or
cs
mov
jne
xacquire
xchg
arpl
pop
sbb
int3
push
fdivl
dec
call
scas
jp
mov
inc
xor
inc
lahf
jecxz
rcl
xchg
xchg
add
icebp
push
add
and
pop
hlt
mov
jno
loopne
jg
add
mov
lods
test
cs
iret
sbb
add
pop
ja
cmp
xor
data16
popf
jns
aaa
orl
pusha
pushf
mov
mov
fbld
inc
cmp
lock
pop
push
cli
xor
das
call
push
add
cmp
js
xchg
aam
lcall
out
cld
fistl
pop
packsswb
pop
aam
lcall
hlt
mov
jecxz
add
inc
clc
xchg
adc
cmpb
push
mov
out
mov
pop
xchg
inc
sahf
bound
mov
push
sti
pop
sub
icebp
lea
push
out
imul
pusha
add
cmp
sarl
push
mov
and
mov
mov
jg
mov
daa
pushf
scas
outsl
adc
dec
repz
mov
sbb
add
xchg
rolb
jne
movsb
mov
push
aam
andl
movsl
aam
fisubl
inc
clc
je
lods
pop
dec
pusha
push
dec
xchg
mov
pop
scas
pop
pop
ror
cmpsb
mov
sub
leave
jne
popf
add
fldenv
push
dec
dec
cs
pop
mov
out
nop
test
and
push
adc
dec
adc
lret
xchg
sbb
cs
dec
shrl
sbb
je
jnp
imull
or
and
ljmp
lock
mov
xor
cmp
pop
roll
call
or
pop
push
arpl
lods
ljmp
mov
bound
jbe
jbe
dec
ds
cld
cmp
pushf
cmp
in
outsb
scas
hlt
into
jnp
inc
and
add
mov
adc
mov
pop
ret
stc
and
fdivl
loope
push
ret
sub
xor
rolb
xchg
stos
lea
jns
orl
in
mov
leave
insb
mov
in
sbb
lds
adc
scas
movsb
mov
sub
mov
scas
push
inc
in
scas
test
in
push
loop
mov
jl
test
adc
shrb
popf
sub
pop
lds
cld
push
sbb
outsb
repnz
xor
scas
jns
stos
xlat
mov
sahf
mov
xor
das
adc
in
daa
scas
add
rorl
add
mov
icebp
scas
icebp
xchg
push
shrl
jns
pop
xor
jbe
loop
cmp
mov
jbe
sub
sbb
inc
cmp
push
cwtl
inc
arpl
mov
lret
mov
popa
dec
insl
cmp
mov
or
int
fwait
scas
aad
loop
or
fs
sub
push
fdivs
daa
fdivl
pop
adc
mov
inc
sbb
insb
or
outsl
leave
xor
out
outsb
test
repnz
and
leave
and
push
push
pop
dec
dec
cmp
sbb
sub
lods
fisubrs
push
lods
les
ret
mov
stos
dec
lods
xchg
sbb
loopne
cld
mov
dec
clc
pcmpeqw
scas
xchg
adc
sbb
imul
les
aas
pop
mov
sub
popa
mov
mov
mov
lahf
bound
scas
or
xchg
into
xchg
jo
aaa
sub
lods
and
mov
adc
outsb
lods
add
cmpsb
push
aad
subb
es
lret
rolb
pop
push
jmp
jne
adc
pop
mov
arpl
push
daa
push
adc
mov
movsb
pop
nop
xor
sarb
movsb
lods
hlt
add
cmpsb
jg
fucomip
xor
mov
movsl
lret
jnp
fcompl
jg
push
loop
xchg
push
xchg
sahf
pop
cmpsb
or
dec
dec
frstor
ret
cmpsl
popf
sti
ds
add
mov
inc
jle
out
mov
loop
and
mov
sub
shrb
cli
jl
ss
xchg
jl
ret
roll
push
in
pop
les
je
and
pop
and
cmpsb
and
push
rcr
ds
in
xchg
adc
stc
xchg
iret
and
sub
add
dec
pop
dec
orl
aas
in
out
adc
mov
jg
stc
adc
and
and
inc
push
loop
in
mov
dec
iret
mov
jmp
fiadds
out
lret
mov
jmp
popa
mov
and
mov
and
add
loop
sbb
addl
jno
scas
cli
stos
and
add
dec
push
aad
addr16
lods
dec
inc
imul
cmp
gs
add
cmpsl
ds
push
sbbl
sub
pop
ljmp
xchg
ret
sub
lahf
lahf
loop
sarb
nop
push
and
jae
xchg
out
push
xchg
loopne
loope
mov
outsb
pop
adc
inc
iret
and
jno
mov
or
pusha
faddp
out
sbb
nop
orb
in
and
mov
push
pusha
inc
sarl
mov
jnp
addr16
or
stos
sub
out
pop
cmp
inc
push
sub
cld
and
dec
push
andb
mov
sbb
push
jle
scas
stos
mov
mov
data16
aaa
pop
or
rcl
mov
or
xor
ljmp
pop
and
xchg
das
sahf
subb
loopne
push
add
jb
mov
push
rcrb
cmpsl
aam
fldl
scas
inc
fsts
std
cmp
jno
dec
mov
cltd
out
pusha
push
sti
add
lret
movsl
or
lea
mov
mov
arpl
inc
pop
aaa
repz
cs
call
leave
push
inc
scas
pop
dec
fisubs
mov
lcall
jp
shlb
pop
ja
test
repnz
lock
shlb
pop
dec
xchg
jnp
cs
or
push
add
lret
push
sub
push
mull
icebp
out
cmpsl
xor
imul
pop
clc
je
imul
std
imulb
cmp
loop
jp
cltd
nop
cmc
idivb
insb
orl
and
bound
or
dec
dec
pushf
push
test
test
test
bound
ss
xchg
mov
fistl
cld
stos
pop
pop
dec
cltd
mov
xchg
jp
pushf
mov
add
mov
cmp
dec
orl
cmp
ljmp
push
dec
xchg
push
in
xlat
clc
mov
push
inc
xor
cmp
add
adc
mov
fmull
aaa
add
pop
call
leave
ret
lods
add
or
mov
mov
sub
jecxz
idivb
push
sar
inc
jmp
mov
sub
mov
adc
sahf
in
add
adc
cmp
or
jae
dec
adcb
mov
rorb
jns
lcall
jno
add
jp
jge
les
fsubrl
xchg
shlb
out
sbb
cs
aaa
lods
add
push
icebp
jecxz
mov
mov
in
call
inc
and
fcoml
xchg
jl
and
pop
dec
mov
pop
shrb
lcall
jne
iret
fwait
test
icebp
and
mov
clc
mov
xchg
cltd
inc
add
jnp
sub
add
pusha
jb
imul
jns
and
add
jb
stc
cmp
pushf
add
shl
fadd
lds
xchg
jp
bound
mov
test
cmp
cwtl
cmp
and
pusha
pop
sub
add
ret
xchg
cmpsl
icebp
add
mov
jb
jno
arpl
add
test
jge
dec
jne
mul
pop
out
out
lahf
jp
xchg
je
out
jno
adc
aad
mov
add
fldt
xchg
loop
popf
in
lcall
push
pop
enter
cltd
lds
arpl
shlb
test
mov
out
lret
jecxz
pop
pop
rorl
jnp
sub
xchg
sbb
fsqrt
sbb
lea
popa
cwtl
pop
sub
cmp
ljmp
lret
insb
out
jnp
test
cmp
add
add
xchg
shl
add
das
loop
adc
xchg
ds
add
jae
es
fisubrs
pop
scas
cmp
outsl
inc
cmp
xor
mov
fnsave
mov
cmc
xchg
push
pop
jne
mov
call
mov
mov
aaa
or
or
jb,pt
mov
mov
inc
and
clc
rol
cld
gs
adc
mov
ds
jge
mov
or
stos
xchg
jo
in
lret
lret
jp
enter
sub
test
mov
cmp
aaa
sbb
es
ds
testb
mov
inc
jp
sbb
and
std
and
insl
inc
xchg
or
push
fidivs
cld
cs
mov
lret
insl
adcb
ret
ret
sbb
pop
les
lret
sti
sbb
inc
arpl
pop
mov
out
sub
lea
fildl
es
in
or
dec
int
add
push
pop
dec
jae
cmp
push
aas
and
in
jae
aam
mov
jecxz
dec
cmpsb
fbstp
cmp
cmp
pop
add
jl
imul
dec
incl
loope
push
mov
insb
or
pop
sbb
cmc
sahf
jp
mov
outsb
lea
xor
mov
inc
cmc
dec
shlb
mov
dec
out
or
lds
cmp
idivb
xbegin
outsl
jne
outsl
lock
cmc
push
sarb
jns
push
mov
icebp
mov
pop
jecxz
or
xor
lret
push
pop
fstpt
lahf
into
push
xchg
inc
testl
and
int
mov
or
inc
dec
std
outsb
cmp
insb
je
jg
inc
xlat
add
sbb
fidivl
fsubl
dec
mov
nop
cmpsb
sbb
gs
sub
int
pop
fdivs
mov
dec
call
cmp
mov
cltd
leave
fdivrl
je
jns
fwait
cmc
push
add
loopne
sbb
xor
jmp
dec
test
sub
cs
push
js
push
sbb
idivb
addr16
out
push
shr
adc
add
push
sbb
jb
mov
popf
sub
mov
pop
push
xor
dec
adc
fisubs
test
xchg
aaa
jns
xor
movsl
fwait
clc
push
je
inc
insl
pop
mov
xchg
and
enter
lahf
test
jmp
loopne
add
jo
xor
arpl
rorl
addr16
pop
sbb
push
jge
je
aam
jge
mov
repz
mov
pop
xlat
mov
outsb
pop
subl
test
jl
lea
dec
fistpll
sub
push
push
and
jmp
cli
mov
sbb
pop
mov
js
scas
adc
subl
shlb
mov
pop
ret
int3
jnp
aad
inc
mov
pop
xor
mov
pop
xor
nop
dec
push
gs
push
mov
and
loopne
jle
adc
inc
pop
sub
imul
popa
push
add
stc
xchg
jmp
frstor
push
divb
cmp
jb
outsb
jge
and
xchg
and
addr16
mov
mov
seta
fldcw
ret
lock
ss
xlat
test
sub
sub
mov
xchg
rcll
negl
push
ds
hlt
dec
push
cltd
pushf
js
outsb
add
sbb
inc
jae
inc
or
iret
xchg
adc
add
ret
jae
add
and
fs
xadd
push
add
cld
cmpsl
jnp
int3
fs
and
popf
cmp
nop
dec
or
pop
movsb
xchg
and
lret
int
mov
inc
int
xchg
mov
push
pop
sub
jbe
inc
sbbb
pop
xchg
mov
dec
hlt
jle
pop
mov
and
inc
push
mov
mov
xchg
fdivr
push
cmp
adc
push
fcmove
repz
mov
movsl
stos
pusha
push
cmp
sub
imul
or
xchg
lahf
inc
cmpsb
fsts
mov
jmp
and
or
xchg
add
ret
arpl
push
cmp
fildl
pop
push
or
pushl
xchg
pop
jp
xor
jp
push
or
xchg
fwait
cmpsb
adc
je
push
repnz
xor
movb
pop
bound
or
fistl
cmc
bound
data16
ret
mov
fildll
dec
xor
push
fs
scas
mov
mov
jmp
add
adc
xor
xchg
test
sub
push
repnz
mov
add
xor
xor
fwait
rcl
hlt
sub
jecxz
loope
xor
sbb
mov
mov
call
mov
jl
inc
icebp
jo
push
jecxz
stos
cs
test
ret
add
push
mov
pop
popa
in
and
xor
xchg
xor
or
xchg
out
lods
xor
jmp
xchg
jg
lock
loope
cmp
and
push
fldenv
popa
cmpb
adc
cs
out
insl
orb
mov
rclb
inc
repz
sub
inc
mov
fwait
mov
lcall
and
push
shlb
iret
adc
sbb
jno
and
repz
cmp
call
push
fistpll
mov
jns
jmp
ret
jecxz
fdivs
xor
adc
push
inc
sarb
fstps
and
pop
std
and
fists
push
pusha
mov
add
ficomps
adc
mov
lret
add
and
scas
mov
pop
repnz
test
in
xchg
push
adc
xor
xor
adc
loopne
shll
pushf
cmp
push
or
fstpl
pop
repz
cmp
stc
mov
cmp
sub
cltd
inc
cmc
adc
fisubl
and
clc
pop
lods
fisubrl
mov
pop
mov
dec
add
sbb
or
mov
pusha
ret
sti
leave
out
repnz
cmp
xchg
popf
and
pop
jns
adc
mov
or
insl
jle
lahf
fstl
iret
mov
or
sbb
inc
and
cld
or
adc
pop
sti
in
push
mov
or
adc
or
push
sub
adc
int
inc
xchg
adc
mov
pop
xchg
cmpsb
movsb
sbb
insl
enter
adc
jge
int3
xor
push
inc
fistpll
repz
loope
cmp
into
adc
mov
in
sbb
sbb
pop
call
out
rorb
mov
scas
shlb
lret
push
fcomip
loopne
and
ficoml
and
movsb
mov
mov
push
adc
mov
outsl
sub
adc
shr
sti
dec
dec
and
iret
stos
cs
push
add
inc
push
xchg
cld
rorb
fdivl
add
push
mov
mov
andb
dec
aas
jo
jp
adc
rol
pop
arpl
int
xchg
cltd
xor
jbe
cmovnp
add
dec
cmpsb
add
jnp
sub
insl
cwtl
jae
test
jo
cltd
jl
pushf
jl
cmp
cmp
movsl
lcall
pop
lea
pshufw
push
fimull
pop
jge
mov
scas
test
lcall
mov
lret
push
outsl
mov
lret
add
in
ljmp
adc
cmpsb
iret
add
push
pop
jle
int
stos
fs
lret
mov
mov
or
out
jbe
cwtl
stos
repz
jge
sbb
mov
movsb
jae
jl
pop
jge
mov
sbb
inc
in
sahf
add
mov
test
dec
push
addr16
sbbb
std
int
rorl
or
sub
fwait
daa
outsb
jmp
lea
aaa
sub
scas
push
mov
jg
jl
ljmp
addr16
and
vxorps
or
aas
jg
adc
add
sub
jp
lcall
repnz
push
test
and
xchg
mov
lret
test
push
das
xchg
mov
adc
jno
add
push
stos
dec
mov
inc
cmp
out
pop
pop
int3
cmpsl
daa
push
mov
dec
push
or
push
jb
pop
loopne
xor
and
jb
idiv
xchg
and
popf
jb
das
mov
xor
push
push
mov
adc
bound
cmpsl
inc
scas
lea
jns
dec
adc
pop
sbb
mov
push
test
insl
lods
or
and
es
mov
mov
cmp
push
push
mov
or
xchg
ja
push
inc
fwait
mov
add
lods
mov
sub
sbb
data16
imul
idiv
xor
sub
cld
push
repnz
fsub
test
sbb
inc
pop
fsts
push
shrb
aam
sahf
adc
xor
std
ret
jns
jle
push
aam
adc
xor
and
ja
leave
loope
inc
in
cli
mov
jecxz
loope
mov
xor
sub
pop
xchg
jbe
fcomps
dec
adc
add
fidivrl
or
arpl
mov
inc
add
fists
jne
xchg
sub
mov
lea
inc
or
rol
addl
ret
ja
sbb
sbb
fstl
cmp
jno
out
push
jmp
mov
mov
add
pop
sbb
rolb
xchg
dec
add
mov
inc
xchg
push
and
xchg
je
add
mov
lcall
ret
ja
push
shrb
lock
push
sbb
addl
adc
jg
out
ss
jmp
sub
xor
and
in
stc
jl
loopne
adc
in
roll
sbb
cli
pop
call
repnz
jno
sub
fs
dec
mov
sbb
outsl
push
es
pop
fidivrs
sbb
scas
in
jecxz
stc
mov
mov
xchg
xchg
push
mov
mov
fistl
pop
pop
xchg
decb
mov
addr16
pop
push
mov
mov
inc
sub
xchg
mov
sahf
repz
cmp
xchg
cmp
ret
clc
sbb
jl
sbb
out
das
inc
outsl
rolb
jbe
mov
ds
iret
mov
pop
ss
into
mov
iret
mov
data16
push
xlat
and
mov
insb
mov
cmc
lret
adc
push
push
xchg
mov
mov
jge
adc
sub
dec
xchg
dec
jbe
incb
pushl
and
xchg
xchg
popa
xchg
mov
jmp
shlb
testb
bound
int
xlat
fsincos
cltd
push
add
mov
push
or
aaa
daa
aam
dec
test
and
call
scas
pop
mov
xchg
mov
pusha
inc
add
cmpb
jge
ja
adc
aad
mov
pop
push
xchg
cmpsb
push
stc
fiadds
fisttps
setl
mov
cmp
cltd
push
je
push
sti
sub
inc
sbb
xchg
mov
in
pop
mov
adc
or
or
add
sti
xor
imul
push
cmp
imul
xchg
mov
inc
gs
xchg
dec
cmp
repz
sub
lock
mov
nop
dec
or
movsb
outsb
pushf
and
and
push
xor
testb
fs
adc
rolb
mulb
adc
lods
or
adc
push
cmp
inc
stc
adc
cli
and
stc
cld
and
mov
sbb
add
cs
stos
push
test
sub
call
es
and
xchg
xor
sub
pusha
jmp
rol
dec
pop
inc
add
outsl
pop
push
jmp
bound
mov
and
xorl
or
or
lods
mov
cltd
lods
test
push
push
stc
outsb
lahf
and
or
mov
xchg
in
push
push
pop
jge
inc
in
loop
dec
test
pop
dec
jb
dec
pusha
aaa
mov
scas
mov
xchg
and
mov
out
mov
fstpt
push
rol
cld
or
repnz
adcl
mov
stos
or
cltd
sbb
call
lods
cmpsl
popa
jne
aam
fbstp
lods
aaa
cld
push
xchg
xchg
je
sub
fcoms
outsl
clc
scas
mov
and
mov
jge
add
lods
dec
dec
inc
or
adc
enter
push
push
lods
add
andb
aaa
hlt
mov
mov
cli
xor
notb
addr16
and
popa
iret
adc
add
xchg
dec
jecxz
or
jo
les
inc
mov
dec
addr16
mov
scas
out
xor
sar
xlat
mov
iret
add
orb
fmull
in
ss
js
aaa
hlt
push
fdivs
scas
pop
or
push
inc
cs
dec
adc
sbb
jbe
jge
adc
test
mov
and
hlt
adc
jns
adc
add
mov
sbb
stos
push
ffree
jl
push
push
icebp
repnz
cltd
cmpsb
jne
daa
hlt
dec
sub
daa
or
add
push
das
xor
push
add
push
xchg
and
push
jo
sti
xor
stos
inc
push
icebp
jl
inc
jecxz
adc
sub
cmp
sbb
addr16
sbb
in
or
testb
dec
and
jp
ret
hlt
add
mov
mov
push
dec
add
xchg
and
arpl
mov
cltd
pop
dec
jp
dec
hlt
pop
or
add
fs
adc
pop
push
mov
popf
adc
pushf
or
dec
movsl
rcrb
jl
push
add
mov
jge
lea
arpl
mov
fadds
gs
inc
outsb
je
unpckhps
jp
mov
int
fistpl
jge
popa
mov
in
fnstenv
andl
push
sti
sub
mov
aad
pop
dec
fldl2e
push
jne
test
es
lcall
pusha
mov
mov
pop
call
and
out
sub
cmp
fs
cmp
nop
jne
popf
pop
loop
dec
lret
stc
and
or
cmpsb
mov
inc
or
pop
mov
push
in
cmpsl
shlb
mov
jno
add
add
add
data16
jmp
in
sbb
sub
stos
xor
subb
inc
xchg
jp
push
jno
inc
xor
cltd
mov
leave
pop
cmpsl
push
xlat
adc
push
test
int
loopne
cwtl
inc
enter
mov
mov
lcall
cmp
mov
inc
or
in
mull
outsb
cmp
cmp
dec
pop
or
nop
push
int3
repnz
cmp
mov
and
inc
inc
dec
mov
test
mov
inc
jns
ret
daa
cwtl
push
cltd
cli
inc
mov
or
call
pop
mov
xlat
mov
insl
je
add
xchg
out
rcrb
insb
ret
or
sarb
add
mov
cs
xacquire
sbb
cli
test
stc
inc
push
or
fiadds
jo
mov
in
pop
test
call
lods
mov
sar
sbb
push
pop
mov
inc
and
sarb
cltd
mov
lods
pop
fisubs
nop
int
cmpsl
int
movsb
imul
cmp
add
cmp
mov
loopne
cmp
jbe
pushf
mov
scas
inc
dec
fldt
sub
mov
jp
jecxz
or
dec
jg
mov
orl
push
sub
sub
push
cld
jge
ds
xchg
testl
icebp
mov
dec
or
pushf
stc
das
movsb
pop
fadds
and
lods
fstpl
icebp
sarb
mov
jp
in
sub
cld
inc
movsb
out
add
add
mov
orb
loop
fisttpll
adc
lea
pop
jnp
inc
orl
inc
cmp
jmp
lock
jae
movsb
inc
push
divl
sub
inc
or
pop
inc
inc
adc
pop
jno
sbb
movsb
jnp
shll
in
push
clc
mov
pop
mov
inc
sbb
cmp
pop
pop
sti
adc
xor
daa
or
mov
stos
lahf
fildl
xor
shll
mov
xor
jle
out
cmp
mov
jmp
add
hlt
insb
stos
add
xchg
adc
je
add
rcr
roll
mov
pop
fldt
mov
lock
repnz
push
pop
jno
sub
sar
scas
or
adc
inc
and
or
sbb
orl
xchg
xlat
fs
in
pushf
mov
shll
sbb
sub
into
dec
out
les
push
jecxz
mulb
pop
cld
xchg
pop
adc
addb
cmp
adc
sbb
dec
and
out
fidivrs
data16
outsb
fdivl
push
addb
outsl
sarl
dec
push
cmp
lcall
jb
xor
test
sbb
jge
inc
fldt
mov
je
call
xchg
nop
mov
in
fadd
mov
adc
sahf
cmp
cld
adc
mov
xchg
inc
jp
repz
out
inc
cmp
test
jecxz
fsubl
jb
push
or
xchg
mov
movsl
push
push
loop
cs
jns
mov
aaa
mov
fs
sbb
clc
mov
xchg
je
xchg
movsl
mov
mov
in
xor
hlt
push
into
xchg
add
lcall
jo
ja
dec
addr16
in
out
xor
and
enter
sub
in
jae
in
mov
sub
push
bndldx
aas
insb
cmp
arpl
stos
mov
movsl
or
fs
daa
out
rcll
jns
negl
js
mov
mov
fstpt
lret
scas
adc
gs
push
and
mov
sub
adc
jb
jg
clc
add
repz
jle
xor
adc
sbb
xor
loope
sub
add
cltd
sbb
scas
test
mov
sub
pusha
mov
out
jne
in
and
cli
dec
ljmp
aas
bound
nop
mov
pop
call
mov
jae,pt
dec
insl
mov
mov
int3
mov
pop
sub
rol
push
jg
xchg
clc
pop
imul
cmp
adc
mov
cmpsb
fs
mov
xchg
or
sub
pop
addb
jge
rorw
inc
aad
nop
scas
and
mov
iret
push
das
jns
mov
cli
inc
pop
imul
dec
daa
fnsave
sar
repz
movsl
pop
lea
test
mov
mov
pop
fisttpll
movsl
pop
mov
adcb
and
or
inc
jae
lods
leave
rcl
and
icebp
nop
loope
jo
push
sbb
push
inc
jne
pinsrw
int3
jle
stc
add
lcall
popa
or
test
fcomp
mov
cmc
or
testl
sub
lods
sbb
nop
xchg
inc
ja
loope
or
filds
or
dec
mov
test
fimull
rorb
mov
xor
pop
pop
add
add
mov
cmp
mov
cld
mov
jl
pop
mov
xchg
adc
ja
int
in
adc
jno
rcrb
out
outsl
add
sub
int
arpl
mov
iret
out
pop
adc
sarb
aad
inc
inc
nopl
cmp
cmpb
mov
adc
rol
mov
and
hlt
push
cmp
cmp
das
fistps
int3
or
push
pushf
push
xchg
sub
and
cmpsl
pop
xlat
inc
stc
push
pop
jge
invd
lock
stos
mov
std
mov
fsubrl
dec
clc
adc
xor
outsl
test
mov
fwait
ss
and
aaa
push
sub
lock
jl
inc
ss
je
pop
dec
push
and
outsl
into
popf
mov
rcl
pushf
decb
rcrl
cltd
add
dec
sbb
std
lock
mov
cwtl
push
and
jmp
addr16
cltd
out
test
mov
xor
jbe
icebp
cmp
xor
rcrb
mov
hlt
xchg
data16
push
mov
ss
test
dec
fildl
outsb
das
movd
dec
mov
sbb
aam
and
push
xlat
lret
sarl
jo
mov
fwait
shlb
xor
pusha
repz
and
fldl
mov
es
xchg
out
hlt
and
rcll
test
mov
dec
bound
insl
mov
sti
lcall
std
out
test
adc
adc
push
push
pop
adc
add
jae
dec
or
jb
ja
adc
push
xchg
add
fwait
mov
mov
adc
sbb
mov
or
inc
in
sarl
lds
add
insl
xchg
nop
cmp
std
les
xchg
lods
popa
adc
or
push
push
sbb
mov
or
pop
and
out
test
int3
enter
jb
pop
inc
pop
inc
mov
add
testl
push
xor
out
mov
xchg
lret
aas
push
outsb
stos
outsb
add
test
loopne
pop
cwtl
sbb
scas
mov
imul
jno
cs
jp
pop
lds
sub
inc
cmp
push
mov
cwtl
nop
cli
add
dec
loope
rorl
dec
adc
dec
sbb
add
mov
or
lcall
sbb
jle
dec
inc
adc
pop
add
cld
mov
push
roll
mov
in
adc
cmp
dec
inc
add
inc
pop
outsb
sbb
fiadds
pop
jle
shrl
hlt
sub
lret
pop
arpl
imul
lret
dec
mov
sbb
das
ja
cltd
testl
repz
adc
inc
ljmp
jmp
dec
loope
cli
adc
xchg
xchg
enter
mov
ror
jbe
in
or
xor
popf
cmp
push
mov
shrb
es
cmp
push
mov
xchg
shl
in
or
ljmp
das
fadd
cmpsl
sti
jne
roll
sub
mov
pop
xchg
cli
pop
xorb
adc
push
add
out
pop
adc
iret
inc
fidivl
jle
xor
push
outsb
add
call
data16
fwait
mov
ja
aas
jg
call
mov
push
sbb
inc
or
push
iret
xchg
testb
mov
adc
out
insb
xor
adc
push
les
mov
insl
outsl
inc
mov
sbb
cmp
dec
adc
dec
ss
test
mov
orb
ret
ret
pop
mov
in
dec
mov
push
call
aam
cld
pop
pop
adc
pop
mov
loopne
cwtl
sbb
arpl
push
sub
lahf
dec
push
cmp
clc
mov
cmp
dec
xchg
add
test
lods
ja
dec
fmulp
inc
xchg
xchg
xor
dec
push
je
sbb
test
out
cmp
outsb
gs
xor
cmp
pop
div
sbbb
stos
and
out
adcl
sub
arpl
push
mov
cmp
mov
test
addr16
sar
imul
xor
fldcw
scas
push
loope
test
and
int
xor
and
adc
stos
stos
mov
inc
sub
mov
xchg
cmp
popf
repz
inc
add
cmp
add
xor
or
xchg
jbe
inc
adc
push
sbb
mov
or
pop
adc
rorl
sbb
testb
in
sbb
fs
sbbl
stc
dec
dec
dec
nop
lock
loop
and
jmp
mov
out
lcall
inc
jg
clc
mov
mov
add
pop
inc
xor
sarb
cmp
lret
inc
mov
push
std
push
sar
in
clc
insb
sbb
xor
push
jecxz
xchg
nop
xor
pop
lret
out
sarb
icebp
xor
not
push
inc
sbb
cmp
xor
nop
ds
sbb
rcl
push
adc
jmp
adc
adc
push
pop
nop
mov
mov
cmp
lods
cmp
int3
sub
or
fldenv
sub
mov
adc
dec
mov
lods
movsl
cs
int
dec
and
arpl
adc
dec
sbb
adc
dec
pushf
pop
jb
xchg
iret
ja
fistpll
out
xchg
xchg
jg
fwait
xor
sbb
push
xchg
fstpl
mov
and
jl
cmpsl
xchg
cmpsb
cmp
and
mov
fwait
mov
das
dec
bound
mov
push
ret
je
dec
or
pop
dec
pop
dec
or
mov
daa
int
jne
sub
mov
xchg
pop
fisubrl
jmp
push
movsb
pop
rcr
push
mov
mov
leave
jecxz
insb
push
ja
es
push
or
jg
inc
mov
pop
sub
adcb
jbe
push
fcomp
sbb
jno
adc
mov
xlat
andb
inc
mov
sbb
xchg
add
push
pop
cmp
xchg
xchg
sub
sub
ja
jne
cmp
int
adc
mov
add
mov
stc
jo
sbb
popf
mov
aam
jl
xchg
pushf
jb
sub
cmpsb
mov
and
add
cmpsl
push
mov
call
imul
jne
stos
movsl
pushf
test
clc
pusha
das
lea
or
fprem
xor
sub
lock
loope
sub
gs
sbb
aam
mov
adc
stc
add
outsb
bound
aaa
negb
xchg
data16
mov
jmp
or
jbe
ja
jp
inc
jbe
aam
cmp
sub
cmpsb
mov
int3
nop
push
cli
in
xchg
jnp
sub
out
add
pusha
aaa
loop
mov
in
mov
adcb
jle
inc
jg
xchg
mov
mov
or
jmp
enter
pop
loop
inc
inc
sub
xlat
and
out
push
pop
mov
xchg
jecxz
adc
stos
cmc
sbb
mov
sti
push
xor
ja
ret
cmc
xchg
add
jecxz
sar
mov
in
pop
test
pop
xorl
pop
xchg
insl
ds
xor
jmp
pop
sub
bound
in
shll
in
shr
in
inc
bound
aam
mov
lods
mov
xor
xor
push
and
mov
clc
and
jae
push
add
lret
mov
iret
mov
pusha
arpl
mov
inc
jns
and
jg
xor
adc
stos
mov
subl
push
sub
sbb
loope
jne
addr16
shlb
lret
inc
jb
mov
xchg
bound
or
int
mov
gs
or
ja
or
pusha
sbb
lahf
sub
or
inc
xchg
cltd
mov
adc
sbb
push
xchg
cmc
mov
loop
add
adc
daa
cmp
int
mov
dec
in
mov
xchg
in
jp
gs
adc
lahf
push
xlat
mov
sub
xchg
and
push
aas
ss
mov
int3
pusha
xor
mov
loope,pn
pop
push
stos
pop
mov
xchg
adc
cmpl
out
lret
sub
push
cmp
inc
xchg
or
ljmp
test
mov
mov
pop
jne
adc
sub
adc
testl
rol
cmp
fnstcw
push
mov
add
fiaddl
add
sub
and
inc
jo
stos
jnp
jl
jge
scas
adc
dec
xchg
xchg
pop
stos
js
add
negl
jle
fisubs
inc
dec
inc
incl
inc
lcall
cltd
lods
jge
stos
popl
iret
pushf
push
mov
adc
negl
loope
shll
dec
inc
or
sbb
jle
mov
push
jle
and
mov
mov
imul
push
imul
pop
mov
push
cmp
jo
dec
inc
es
stc
roll
bound
sbb
mov
xchg
pop
cmp
cltd
ss
adc
ds
leave
nop
out
pop
mov
aaa
cmp
js
hlt
mov
cmpsl
and
sbb
cmp
adc
stos
xor
outsb
push
xchg
mov
xor
mov
fimull
sub
loopne
fmull
and
mov
or
cmp
sub
dec
push
dec
mov
lds
cwtl
in
push
jp
jge
pop
sub
jae
xor
rcll
push
aaa
mov
jnp
mov
fldt
push
test
cmp
insl
outsl
call
pusha
push
fstpl
popa
repz
mov
lods
int
cmp
jns
in
mov
jno
xchg
pop
sbb
mov
shl
pusha
and
lcall
mov
xchg
hlt
notb
mov
cmp
inc
pop
lea
lret
insb
scas
jo
xchg
adc
mov
out
xchg
mov
mov
fst
in
push
jnp
ret
mov
mov
out
mov
fwait
add
aas
das
movsl
xchg
push
or
xchg
out
into
popf
jne
loop
adc
repnz
jecxz
or
lods
sbb
lea
bound
mov
cmpsb
pop
jecxz
mov
adc
push
std
sahf
push
shlb
jp
daa
or
int3
push
in
adc
jnp
pop
cmp
daa
jb
cmp
sub
mov
sbb
sub
clc
divb
add
test
push
push
add
test
xchg
mov
jae
or
jbe
into
and
lret
push
es
and
mulb
les
stos
dec
das
and
jmp
mov
orl
jae
push
insl
push
dec
xor
fcmovb
out
adc
xchg
scas
data16
pop
jmp
add
cwtl
adc
mov
add
and
mov
data16
sbb
aam
aas
popf
rcll
sub
lods
test
mov
into
fsubr
cwtl
cs
adcl
cmp
movsl
lock
sub
pop
shlb
outsl
insb
cmc
test
pop
test
scas
daa
stos
notb
and
mov
cmp
cwtl
bound
daa
call
scas
pop
inc
and
adc
inc
mov
inc
cld
clc
clc
push
sahf
in
jbe
fisubrs
xchg
pop
outsl
lret
mov
call
pusha
scas
pop
pop
rcr
rcr
or
movsl
js
sbb
in
mov
idivl
jno
sub
adc
inc
mov
clc
push
bnd
or
sub
into
or
cmp
cmp
pop
mov
sub
xchg
mov
les
inc
lcall
ror
jl
in
inc
outsl
aad
loopne
mov
adc
test
sub
outsl
ret
iret
and
in
jno
add
pop
psubb
xchg
repnz
mov
inc
ret
jne
pop
call
cmp
fstps
xor
jl
inc
ffreep
std
sahf
les
cld
imul
rcl
lods
stc
mulb
xor
mov
push
mov
lret
daa
dec
jb
or
lcall
arpl
jp
push
inc
cs
pop
mov
inc
adc
lods
jl
lea
jle
xlat
add
test
push
dec
push
jns
cld
icebp
push
bound
adc
mov
and
fnsave
cmp
insl
cld
and
loope
lods
add
imul
mov
loop
mov
les
dec
addr16
jl
out
ds
xor
ja
mov
jle
imul
inc
sub
push
add
fisttps
repz
ds
comiss
jmp
test
fimull
dec
xchg
adc
jp
dec
cli
movsl
hlt
addr16
bound
out
outsb
pop
notb
xchg
adc
mov
cmc
adc
aas
cmp
test
cmpl
es
icebp
mov
mov
mov
call
mov
imul
inc
jo
in
or
sub
cmc
stc
mov
xchg
imul
int
xor
jp
sub
adc
mov
cmp
sbb
cmp
test
mov
dec
dec
dec
in
fsubs
adc
rorl
xlat
fists
sub
add
dec
lea
scas
dec
insl
insl
xchg
pop
scas
dec
pop
dec
sbb
jmp
clc
aad
lods
cwtl
enter
mov
ret
inc
das
jns
or
sbb
push
jno
cmpsb
mov
loopne
push
cmp
dec
mov
mov
cmc
xchg
std
jae
aam
jns
idiv
repnz
icebp
add
lds
repnz
adc
clc
test
mov
subb
jmp
std
push
mov
lcall
xchg
iret
or
mov
fdiv
sbb
icebp
sbb
adc
push
inc
pop
ja
insb
das
into
fcmovnbe
push
movsb
ficompl
in
push
data16
cld
xor
pop
mov
mov
sti
jbe
or
iret
mov
add
insb
or
inc
jecxz
lahf
push
leave
xchg
mov
and
repnz
push
loope
incb
aad
adc
mov
movsl
mov
mov
insl
orb
jno
cs
dec
testb
mov
test
mov
adc
sar
idivb
xchg
inc
push
jmp
or
and
pop
adc
pop
mov
xor
jns
and
cmp
xor
xchg
rclb
mov
or
movsb
mov
mov
int
adc
jle
dec
jb
jge
jbe
add
and
out
xor
lock
push
sub
ret
mov
out
cmp
jno
popf
in
push
mov
pushf
pop
add
lds
loope
inc
and
mov
jg
add
stc
xchg
mov
rcl
sbb
mov
scas
nop
adc
jmp
stos
or
jb
sub
inc
push
push
jmp
or
pop
and
push
adc
outsb
mov
push
push
add
adc
xlat
aam
jecxz,pn
dec
out
mov
xchg
xchg
push
sbb
jmp
push
arpl
push
mov
jg
jg
iret
xor
mov
mov
andl
mov
add
jmp
adc
pop
mov
dec
sub
ljmp
test
add
xchg
insl
xor
shll
sbb
hlt
adc
rcll
sbb
or
scas
or
jle
repnz
ja
sub
mov
cmp
aas
xchg
ret
repnz
daa
enter
cmp
dec
mov
sbb
mov
pop
out
lock
leave
das
aad
push
dec
es
pop
pop
shll
icebp
mov
jg
cli
sbb
sahf
fcmovb
adc
dec
mov
jo
and
pop
adc
shl
inc
push
dec
std
mov
mov
jne
repnz
or
cmpsl
shl
push
cld
xchg
je
pushf
cmpsl
inc
add
adc
push
sahf
in
enter
arpl
insl
dec
fimull
mov
cmp
mov
cmc
popa
cmpsb
mov
dec
pop
pusha
fildll
insb
rcll
leave
shl
xchg
jl
jns
jns
xchg
mov
dec
outsb
cmp
dec
mov
leave
cld
lret
adc
fcmovne
lea
fidivs
xlat
aam
outsb
dec
or
cmp
mov
aam
cld
movsl
pop
push
sbb
jb
xchg
push
mov
stos
jnp
mov
jnp
imul
loopne
lods
push
movsl
mov
jb
lahf
test
mov
jo
dec
push
add
popa
adc
stc
dec
aam
adc
inc
movsb
push
xchg
xchg
sbb
jo
mov
xchg
xor
mov
cmp
dec
lods
test
cmp
shl
xor
pop
insb
inc
mov
notl
cmpsb
jge
fstl
rorl
cli
dec
push
fiaddl
aaa
jp
aas
lret
ret
out
add
leave
sbb
pushf
or
cmc
inc
nop
adc
sub
sub
pop
push
push
ret
lret
outsb
pop
mov
and
mov
mov
jne
fs
pop
inc
shll
or
data16
cwtl
arpl
lods
clc
mov
mov
fwait
lods
add
dec
push
mov
pop
cs
push
xchg
pop
xchg
fistpll
xchg
imulb
xchg
xor
dec
mov
decb
mov
sub
add
or
fisubs
jmp
jno
mov
mov
lret
fildll
test
xchg
jnp
into
lret
leave
cmp
xchg
movsl
popa
xchg
push
xor
pop
std
sub
fsts
cmp
add
rorl
mov
push
sub
popf
add
cmp
clc
loopne
nop
outsl
mov
mov
mov
adcl
movsb
mov
mov
pop
and
decb
add
mov
sub
cmpsl
or
bound
aas
sti
xor
scas
je
adc
jmp
jecxz
nop
repnz
inc
push
dec
outsb
add
push
mov
mov
rcrl
dec
sbb
mov
in
push
pop
mov
lea
loop
int3
cli
adc
dec
pusha
sub
lods
gs
scas
popf
lea
pop
jg
outsb
or
mov
adc
jl
dec
fdiv
arpl
je
jl
add
icebp
cmp
pop
test
mov
xchg
add
xchg
and
cmpb
pop
dec
adcb
xchg
xchg
insl
or
sub
fcmovne
adc
jae
jae
or
sub
inc
movsl
xchg
mov
mov
mov
mov
cmp
shl
add
stos
pop
inc
das
cld
mov
cltd
pop
xorl
mov
xor
scas
aaa
fsubrp
jne
sbb
stos
ret
stos
in
or
push
mov
xchg
mov
stc
push
jb
ljmp
push
imul
mov
and
mov
inc
lcall
aad
mov
push
lret
xor
test
test
dec
imul
add
lcall
xor
bound
fistpl
nop
xor
mov
add
push
popf
mov
in
cmpsb
mov
push
outsb
inc
jg
xchg
jnp
push
and
lret
lret
mov
ret
mov
add
adc
in
scas
divb
mov
mov
cmc
sub
add
cmp
jge
loop
xchg
notl
stc
adc
ror
adc
fbld
push
sub
je
cs
jge
adcl
mov
inc
xchg
or
popf
loop
mov
lret
fadds
inc
mov
testb
out
adc
test
in
sbb
scas
adc
in
mov
sahf
adc
in
dec
xchg
jb
rcr
pcmpeqw
ficomps
inc
fwait
nop
and
out
adc
and
iret
push
or
cmpl
fistpl
negb
fwait
pop
sbb
mov
outsl
add
adc
insl
push
jnp
xchg
add
mov
hlt
test
mov
push
add
jo
insl
imul
pushf
mov
sub
lods
adc
fstpl
pslld
push
fstpl
aaa
mov
cli
mov
imul
fidivrl
ja
xor
cs
ret
movsl
sub
int
adcb
or
je
scas
pop
fst
jle
es
and
sarb
fsubl
or
xchg
mov
decb
in
dec
scas
or
popa
dec
xor
pop
lds
inc
push
lock
push
stc
inc
pop
add
mov
addr16
test
pop
dec
sbb
rcrb
ds
dec
inc
mov
aaa
rclb
mov
sub
sub
ss
add
xor
out
fucomip
insl
add
vxorpd
pop
and
or
mov
sub
and
push
daa
mov
ret
sbb
decb
fwait
les
dec
inc
dec
jmp
enter
pop
fwait
rolb
std
cld
xor
daa
adc
insl
xor
es
movsl
data16
and
jb
fisttpll
test
add
mov
dec
xor
pop
pop
bound
mov
mov
or
mov
xor
fsubl
inc
add
shl
push
out
cmp
imul
clc
xor
in
insb
lret
outsl
shl
pop
xchg
xchg
mov
ljmp
clc
das
pmaxsw
lcall
ffreep
addb
mov
adc
insl
hlt
xlat
mov
scas
dec
inc
add
inc
mov
mov
mov
xor
mov
scas
adc
dec
push
xchg
sub
pusha
in
lret
xlat
int3
dec
lahf
xor
push
sub
fsubrs
mov
fwait
mov
aaa
dec
add
mov
icebp
adc
mov
jne
ljmp
clc
in
adc
and
out
and
stc
js
inc
sti
mov
shlb
dec
or
push
stos
xchg
add
mov
push
scas
jb
jge
or
cmp
mov
push
and
test
pop
push
push
mov
mov
adc
xchg
jp
pop
jne
lret
inc
adc
in
push
les
fnstenv
xchg
inc
mov
push
xor
popf
sti
std
pop
shrl
mov
or
push
jmp
pop
jg
sarl
xlat
adc
push
test
pop
orb
xchg
add
sbb
cld
sub
or
cwtl
xor
or
fstpl
and
and
jo
jae
pop
mov
jle
xor
push
enter
jp
mov
or
xchg
stos
sbb
jo
pop
insb
insl
lahf
push
dec
cmc
sub
sbb
lea
in
sub
pop
sbb
movsb
mov
pop
icebp
add
nop
sti
scas
cmp
mov
pop
jg
xor
or
std
jl
adc
xchg
mov
inc
xor
lods
jl
cmp
dec
adc
mov
cmp
xchg
cltd
cmp
fwait
jmp
decl
popf
sbb
out
inc
stos
shll
movsl
ljmp
fstpt
jg
ljmp
or
push
push
jge
pop
adc
aam
testl
out
xchg
pop
loop
adc
jo
push
sbb
or
aam
cmpl
xor
inc
xchg
daa
out
gs
dec
sti
dec
clc
iret
lret
fsubl
out
scas
adc
aaa
push
mov
push
mov
notl
inc
je
xchg
push
out
scas
add
data16
jp
xor
cmpb
sbb
mov
fisttpll
pusha
xchg
shrl
sbb
push
cmpsb
mov
or
out
mov
andl
es
fwait
ljmp
cli
jp
mov
std
adc
call
cmp
in
sarl
cld
data16
mov
fs
loop
xor
repnz
pop
outsb
iret
add
cmpb
or
imul
icebp
test
jno
in
xchg
pop
push
xor
ljmp
mov
and
sbb
add
lahf
js
test
mov
inc
daa
push
xor
loop
test
lods
notl
fisttps
jns
mov
xchg
cs
inc
push
sbb
cmpsb
iret
mov
mov
adc
mov
fistps
adc
gs
mov
rcrl
fisttps
fcomip
lock
clc
push
pop
out
cmpsb
das
fwait
push
das
mov
push
bnd
ja
mov
cwtl
and
pop
sbb
mov
outsb
or
xor
or
ljmp
aas
fimull
xchg
jle
cmpsb
adc
and
fistl
repz
push
mov
dec
rolb
outsb
sahf
mov
fdivs
test
or
inc
mov
or
dec
lods
movsl
xor
movsb
mov
aas
lahf
dec
outsl
xchg
aad
jg
jo
adc
enter
mov
pop
jg
enter
fdiv
mov
jns
pusha
fs
push
jnp
or
xchg
jno
jge
shl
leave
mov
mov
mov
sub
xchg
ljmp
xlat
call
xor
mov
cmpsl
sbb
ds
mov
jo
and
aad
cmp
jbe
ret
jo
fcoml
mov
ja
fucomi
loopne
inc
sarl
scas
cmpsl
add
loope
mov
pop
je
jb
mov
adc
mov
xor
cld
lret
pop
stos
scas
in
ds
push
xor
nop
sbb
dec
addr16
mov
inc
iret
movsb
jg
arpl
pop
cld
ds
and
lret
jo
clc
adc
rol
xchg
pop
or
loop
mov
and
and
stos
sub
jae
sub
fistpll
add
cmpsl
jge
and
ja
scas
pop
out
dec
mov
dec
hlt
ret
add
ret
fs
pop
cmc
xchg
sahf
mov
dec
pusha
aas
push
sub
and
xor
dec
aad
jp
and
in
lock
and
dec
xor
fdivrs
shll
mov
xchg
xchg
mov
push
daa
mov
mov
and
mov
popa
lods
adc
xchg
fsubl
jp
add
movsb
or
andl
dec
popa
mov
fistpl
push
ja
lock
mov
stc
addr16
leave
pop
arpl
sub
adc
cmp
pop
test
xchg
hlt
je
jne
and
stos
fmulp
repz
xchg
cmp
mov
scas
cmp
adc
lcall
xchg
mov
xchg
pop
div
insb
fstpl
push
jbe
test
sub
cltd
push
adc
test
js
mov
lcall
pop
outsl
mov
imul
add
aaa
jg
push
jle
and
inc
sbb
call
dec
cwtl
and
xlat
ljmp
inc
mov
mov
pop
inc
mov
mov
inc
and
hlt
sbb
cmp
loope
push
pop
cli
mov
iret
inc
pop
imulb
pop
sub
pop
stc
push
or
out
fidivrl
rolb
pmullw
popa
xlat
and
jnp
jmp
pop
mov
int3
je
fcmovbe
in
stos
push
aaa
jo
loop
xchg
jp
jne
popf
jl
js
add
lret
jle
inc
outsb
nop
pop
push
fwait
movsl
mov
inc
jno
mov
jnp
sbb
js
mov
mov
or
jge
jae
outsb
xor
stos
mov
iret
out
mov
xor
or
cld
movsl
inc
mov
out
add
idivb
inc
call
xor
add
test
mov
call
aaa
sarl
daa
dec
mov
pop
aam
push
gs
aaa
sti
fiadds
jmp
dec
and
inc
jmp
in
inc
or
sbb
repnz
push
xor
fs
int
xlat
jg
mov
aaa
jg
aam
fdivrs
ljmp
mov
cmp
aaa
imul
inc
fstps
inc
mov
incl
clc
fwait
pusha
xor
int
or
scas
push
jecxz
stc
movsl
rcll
in
push
mov
mov
and
add
adc
jecxz
fnstcw
inc
mov
xchg
ret
xor
call
mov
pop
pop
loope
out
or
std
xor
mov
mov
cmp
int3
leave
shrb
add
push
adc
xchg
xchg
xor
jnp
adc
lcall
cwtl
push
and
push
rcll
pop
jo
and
fldl
xchg
cmpsb
scas
sub
mov
aam
aad
ja
jnp
ret
sahf
fldenv
lods
gs
jmp
push
imul
mov
lea
pusha
mov
pop
dec
out
mov
jnp
or
mov
loop
arpl
xchg
inc
mov
pusha
dec
push
sahf
daa
sub
ljmp
sub
push
sub
enter
pop
cli
add
cmc
sbb
add
xor
orl
filds
fstps
inc
rcrl
jbe
aas
pop
sti
push
movsl
ss
mov
mov
cwtl
aaa
inc
cltd
push
push
fldl
jmp
adc
arpl
cs
xchg
mov
bnd
and
add
sahf
inc
add
lret
in
mov
mov
xchg
cltd
inc
jle
gs
popa
push
mov
shlb
sbb
cmp
pushf
mov
and
es
scas
and
inc
ljmp
inc
divl
add
insb
jecxz
sbb
jl
mov
test
fstl
pop
loop
fadds
xor
and
jbe
mov
mov
cwtl
stc
cltd
dec
sbb
mov
push
std
mov
les
lret
add
sub
or
imul
jno
insl
shrl
gs
mov
pextrw
jp
push
push
pushf
fdivs
scas
out
and
adc
sub
iret
in
popa
sbb
xchg
dec
push
test
fistpl
popf
mov
daa
out
inc
leave
jmp
xor
dec
mov
in
mov
push
adc
mov
int
idivl
out
cs
fisubrs
xchg
mov
outsb
iret
lcall
dec
push
push
mov
inc
outsl
or
push
je
xor
nop
jae
pop
and
xor
cwtl
in
lret
lret
or
lods
scas
push
pop
loopne
out
cmp
scas
mov
in
dec
mov
stos
jbe
push
cli
push
dec
push
and
sbb
jge
adc
xor
jnp
shr
push
bound
rcrb
popl
pop
loop
mov
mov
sub
xchg
lods
insb
arpl
sbb
out
push
inc
lret
inc
cs
icebp
popa
mov
jbe
fs
mov
or
jns
add
bound
push
mov
xchg
xor
jns
fwait
sbb
out
cmc
push
imul
mov
mov
orb
xchg
add
cltd
gs
in
mov
jno
push
mov
cvtps2pd
jp
lret
inc
add
ljmp
scas
sbbb
push
jbe
mov
in
mov
add
jb
loope
xchg
inc
xchg
cmp
lahf
mov
shr
xor
xchg
sbb
cmp
jg
cmpsl
and
enter
rcrl
mov
push
outsb
inc
mov
outsl
ss
lods
imul
popf
adc
lcall
cmpsb
or
adc
or
test
push
mov
sub
out
and
dec
and
popf
sub
mov
adc
jg
fnstsw
xor
jbe
push
add
adc
add
push
insb
pop
cmc
or
addr16
mov
xchg
repz
sub
dec
jns
loop
xor
lcall
lahf
cmp
movsb
pushf
adc
jb
add
pushf
inc
ret
mov
or
ljmp
test
daa
push
xchg
mov
inc
xor
mov
lds
adc
pop
sub
mov
aas
movsb
inc
fnstenv
cltd
adc
xchg
out
ret
xor
jb
imul
sbb
cmp
icebp
pusha
xor
mov
dec
pop
test
sbb
loope
push
mov
cmp
or
popa
fmulp
sub
hlt
loopne
push
stc
push
faddp
xor
dec
mov
and
mov
mov
test
jns
xchg
aaa
out
imul
cmp
dec
out
mov
mov
cmpsl
out
dec
xchg
push
cld
roll
and
dec
mov
fimuls
dec
scas
jo
jecxz
loope
ret
fisttps
sti
cmpl
sbb
outsb
frstor
repz
jp
xor
mov
xchg
out
cmpsl
pop
cmpsl
fcomps
jmp
add
test
inc
push
mov
ljmp
cli
ficomps
test
js
mov
es
cmp
mov
in
clc
xchg
test
outsb
add
cmpsl
push
or
jno
lahf
cmp
cmpsb
xlat
xchg
sbb
mov
inc
and
loop
in
add
xchg
lea
in
pop
mov
sti
clc
and
and
xchg
or
call
ss
push
pop
lcall
loopne
jb
clc
cltd
stos
in
add
loopne
fcoml
mov
rcll
pushf
fimull
sahf
cmp
je
xor
pusha
push
movsl
and
daa
hlt
popa
lds
iret
push
jbe
hlt
jnp
cld
sti
js
lods
and
inc
sub
xchg
bound
les
jno
xchg
aad
and
mov
test
arpl
add
loop
or
jl
and
mov
push
add
ds
loopne
les
out
call
stos
or
es
push
call
push
outsb
sbb
insl
lcall
les
fimull
in
xorl
xchg
dec
imul
sbb
sub
int3
cs
jae
in
mov
push
and
out
fmuls
sbb
and
ret
or
jb
add
inc
jnp
jmp
addb
mov
paddb
pusha
lods
dec
and
cmp
nop
testl
push
aad
fldenv
xlat
add
adc
sub
leave
icebp
adc
dec
mov
adc
fldcw
push
xchg
je
test
sbb
dec
jo
repz
subl
stos
cmp
lods
adc
repz
call
int
jmp
dec
add
adc
sub
mov
pop
pop
add
mov
push
les
call
in
mov
inc
lods
or
push
push
imul
or
or
jnp
outsl
int
push
push
sbb
movsb
adc
scas
pop
lea
pop
mov
push
xchg
ds
frstor
push
add
cmpsl
push
inc
out
xchg
rolb
cmp
dec
cmp
or
xchg
ss
cmp
fwait
clc
fcmovbe
jge
adc
sub
fmulp
ljmp
aas
out
push
and
and
or
enter
xor
call
cmc
add
std
test
and
push
xlat
pusha
mov
andb
sub
inc
sub
call
iret
out
jae
jle
mov
data16
mov
xor
add
xchg
mov
push
add
loop
and
fwait
jl
call
adc
add
jp
cmp
push
xchg
stos
push
adc
cmp
inc
repz
pop
lcall
int
in
pop
sbb
lock
push
jae
mov
push
sbb
fldenv
lock
sbb
lret
aam
xor
stos
xchg
pop
xor
mov
pop
adc
icebp
stc
add
mov
xchg
xor
adc
jne
cmp
sub
lock
inc
stos
idivb
pop
scas
daa
xor
cmpsl
decb
bound
adc
adc
mov
int
xor
lds
mov
call
fs
es
push
test
lock
mov
mov
lcall
loop
push
lea
push
cmp
sti
cli
idivl
in
fwait
rorb
dec
imul
adc
nop
outsl
fimull
ja
into
ret
push
cmpsb
je
in
and
gs
repnz
push
lahf
lret
insl
sub
xlat
imul
cs
xchg
lret
mov
pop
mov
push
out
sahf
movsb
lret
cmp
mov
sbb
cmpsb
mov
xor
push
rorb
lret
mov
fcompl
orb
addr16
or
dec
mov
xor
hlt
lcall
inc
in
jle
lcall
jb
cmpl
inc
fwait
push
jg
cmp
cmp
out
imul
mov
lods
adc
jo
lock
adcb
sbb
xchg
insb
lcall
xor
push
pushf
xor
and
xchg
rcrb
or
cs
xlat
push
fstpl
mov
push
shrl
loopne
addr16
cmpsl
and
jmp
test
mov
push
leave
orl
lret
add
loop
and
ljmp
push
inc
ss
adc
inc
repnz
sbb
push
mov
sub
jge
repnz
pop
mov
xor
lcall
mov
dec
add
call
pop
ja
mov
movsb
cs
ss
dec
les
cs
sub
pop
inc
adc
jmp
jmp
loop
aad
jl
push
pop
imul
dec
mov
and
imul
inc
pop
sbb
fbld
cmp
push
push
shr
in
pusha
and
lahf
or
iret
aad
sub
out
bound
stos
and
test
sub
xchg
jno
pop
out
add
pop
iret
sbb
inc
lds
mov
xchg
loopne
dec
fwait
lods
fisubrl
aas
pop
ja
xchg
out
dec
xchg
stos
cmp
aaa
push
lds
in
je
push
xchg
fbld
leave
pop
sti
test
push
inc
add
jne,pt
roll
fwait
sbb
push
dec
inc
add
sbb
mov
adc
in
fmull
mov
pop
jmp
jmp
movl
dec
stos
daa
mov
int
pop
inc
dec
out
inc
lret
push
dec
les
jecxz
xchg
cmp
test
jns
xor
insb
mov
push
xchg
je
adc
dec
add
filds
sub
adc
pusha
xchg
mov
in
add
movsb
mov
or
add
pop
ja
cmp
and
outsb
sti
jge
mov
inc
ficoms
outsb
cmpb
cld
add
inc
sahf
loop
push
fimuls
pop
ds
bound
subl
mov
lcall
inc
scas
push
dec
shlb
dec
test
jl
rcrl
shll
andb
imul
repnz
cwtl
and
dec
lea
lcall
sbb
mov
ljmp
in
sub
leave
mov
hlt
adc
jne
pop
pop
pop
xor
mov
stos
push
mov
int3
imul
lds
jmp
mov
xor
imul
movsl
sub
dec
negb
in
dec
ss
sub
jecxz
data16
mov
pop
aas
imul
repnz
mov
jae
push
mov
pop
adc
pop
add
jb
mov
ja
push
adc
push
sbb
or
pop
adcb
pop
mov
jns
xor
add
mov
cmp
inc
mov
cmp
fldcw
xorl
test
iret
cwtl
mov
lahf
xchg
dec
clc
mov
leave
jae
stos
sub
or
inc
stos
jg
push
push
push
cmpl
or
leave
pop
push
xor
mov
push
enter
mov
popf
inc
test
ss
aam
into
jno
cs
pushf
pushf
out
dec
mov
jp
fdiv
dec
push
jne
pop
push
mov
adcl
and
test
sbbl
add
cmp
iret
push
jmp
cmp
inc
mov
add
mov
push
pop
dec
and
pop
mov
adc
jne
xor
cmp
add
xchg
dec
fsts
cmp
push
inc
outsl
mov
cmp
sbb
mov
push
pop
shlb
loopne
aad
cmp
jbe
rcr
stos
sahf
test
xchg
mov
mov
lret
out
mov
pop
inc
xlat
fldt
jae
shr
out
notl
add
or
clc
js
adc
mov
xchg
ror
rcl
add
xchg
stos
push
mov
dec
xchg
out
jg
pop
outsl
fmuls
incl
ss
and
les
and
xor
enter
sub
add
les
movsb
xorps
movsl
xor
or
mov
arpl
dec
mov
mov
daa
icebp
lea
mov
mov
jne
test
xor
imul
pop
jecxz
pop
shr
scas
sbb
jno
xchg
push
std
vpaddb
fisubl
jnp,pn
lret
mov
lret
call
xchg
shlb
xor
je
pop
sub
xor
xchg
pop
into
adc
sub
icebp
pop
sahf
push
cs
test
lcall
insb
repz
into
test
push
jae
sbb
fisubl
cmc
push
mov
inc
sbb
mov
sbb
dec
jecxz
lahf
jne
sti
inc
jo
sub
addl
push
xchg
into
dec
mov
lret
add
xchg
push
add
aad
subl
jmp
out
sbb
into
dec
imul
mov
inc
stos
les
or
pop
or
jae
xchg
add
int
out
sbb
test
ljmp
loope
or
shr
fbstp
sahf
mov
rorl
mov
out
movsb
push
jb
cli
cmpsb
jb
in
jb
jmp
fwait
outsl
add
jmp
push
cli
int
add
lret
mov
sub
add
add
lods
filds
les
leave
hlt
mov
sahf
repz
pop
fildll
lods
popa
dec
int
adc
lods
dec
aam
in
leave
mov
or
call
xor
lcall
jbe
pop
or
jp
adc
mov
and
loope
adc
push
sub
pusha
dec
sub
jb
dec
call
fiaddl
xor
lods
cmpsl
scas
test
xchg
bound
inc
jge
jb
std
shll
cld
cmp
sub
xchg
fisttps
pop
jecxz
adc
pop
ljmp
pop
push
dec
sbb
pop
mov
inc
insb
mov
inc
pop
clc
daa
das
inc
jg
cmp
lock
xor
jmp
ds
xor
nop
stos
outsl
int3
inc
pop
daa
es
stc
pop
jle
mov
test
mov
inc
test
cmp
pop
pushf
fwait
iret
push
out
lahf
in
test
clc
mov
lods
lret
pop
popf
fwait
sbb
mov
aam
mov
or
dec
dec
dec
int
fists
mov
das
sub
push
arpl
int
mov
sbbb
das
cmp
add
stc
pop
add
movsb
das
pop
mov
repnz
or
dec
outsl
nop
cmpsb
and
sar
mov
push
test
leave
xor
or
test
mov
mov
or
arpl
xlat
ss
or
stc
mov
push
int3
cmpsb
cmp
push
cmp
out
mov
call
rorb
aad
sti
xchg
and
es
es
cwtl
mov
rolb
add
cmp
dec
imul
fists
push
arpl
subb
pop
inc
sbb
mov
pop
int
or
loope
lcall
ret
adc
inc
mov
aam
and
into
or
inc
or
push
add
je
insl
inc
dec
cmp
mov
push
scas
divb
dec
js
push
cmpsb
fnstcw
add
outsl
and
pop
mov
push
ret
adc
int
insl
inc
insl
sub
addb
scas
and
mov
bound
add
push
lods
mov
rol
gs
aad
orb
popf
hlt
xor
cltd
in
std
add
loopne
imull
jo
xchg
jno,pt
add
sahf
movsl
xor
pop
sahf
inc
std
incl
inc
cmp
pop
mov
or
and
inc
mov
dec
pop
fdivl
std
imul
call
xchg
jecxz
arpl
inc
lcall
popa
inc
adc
adc
jb
push
adc
sahf
icebp
push
adc
mov
pop
add
fidivrl
cltd
popa
dec
adcb
ss
test
xlat
push
pop
xchg
xor
sahf
inc
xlat
aaa
add
lret
mov
addl
int3
cmpsl
lock
xchg
pushf
aam
data16
dec
mov
sbb
mov
sbb
cmp
outsb
jmp
sub
dec
mov
dec
mov
xlat
sub
or
jb
mov
fcomip
iret
sub
mov
adc
scas
test
mov
imul
mov
mul
adc
dec
es
scas
aaa
inc
xor
ret
aas
cmp
rdpmc
aam
roll
xlat
xor
cwtl
int
push
xchg
fnstenv
pop
add
xchg
pop
push
lret
and
pop
sub
daa
dec
cmp
andl
mov
mov
push
aad
mov
mov
out
jmp
outsl
cmp
xchg
jp
push
dec
jno
roll
repz
dec
sub
cltd
in
mov
push
repz
sub
in
and
add
popa
sub
dec
fsubrs
adc
mov
cmp
scas
mov
adc
cvttps2pi
xor
je
inc
jo
push
call
aaa
loope
loop
sbb
loop
push
loop
mov
bound
rolb
cmpsl
adc
les
push
push
loope
mov
jge
mov
xor
les
jno
scas
lea
sub
inc
push
aas
cmp
in
sbb
jle
mov
inc
leave
push
aam
filds
call
stos
icebp
xchg
pusha
mov
and
push
add
cs
xor
fldl2t
push
test
rclb
leave
add
aaa
xchg
aas
stos
cltd
sahf
jp
sbb
and
jno
sub
std
rorl
sbb
dec
jbe
aam
push
movsl
mov
mov
jl
in
cmp
jne
ffreep
fists
xor
push
int3
or
cmp
pop
popl
cmpsb
sub
gs
cmp
fdivs
dec
adc
push
pop
mov
adc
mov
nop
pushf
pushf
scas
sub
ret
push
fucomip
sub
push
scas
popa
imul
shrb
sbb
cmpsl
pop
filds
pop
out
pushf
aas
push
test
mov
mov
into
rcll
dec
sahf
add
dec
pop
mov
insb
mov
insl
dec
int
dec
adc
test
test
jl
cltd
scas
adc
dec
es
xchg
sbb
jne
sbb
mov
push
and
add
adc
or
lret
fmull
or
andb
clc
xor
das
rorl
popf
sub
sub
adc
xor
pop
xchg
ret
int
xor
push
pusha
adc
jl
fisttps
mov
push
aas
frstor
mov
xchg
aad
movb
data16
mov
mov
inc
divb
push
and
push
ror
mov
mov
xor
gs
add
jg
inc
dec
addr16
ja
aam
or
mov
jmp
pop
xchg
sbb
and
mov
pop
mov
imul
sbb
clc
ja
sub
daa
and
adc
adc
mov
test
sti
jbe
mov
sub
loopne
add
cmp
xchg
cmp
aas
mov
sub
leave
xadd
fucomi
jns
dec
adc
mov
repnz
fs
shr
jmp
push
lds
lret
loopne
popf
ret
mov
xchg
xchg
jge
add
dec
inc
inc
xchg
jae
jle
add
xor
aas
fs
xlat
loop
popf
mov
sub
stos
rcll
mov
xchg
in
xchg
jae
lods
int3
test
jg
repnz
decb
mov
in
pop
or
cmp
hlt
or
test
stc
push
es
jecxz
add
aam
orb
out
xor
jecxz
adc
test
testb
mov
lcall
loopne
int3
scas
sub
mov
test
sti
mov
pop
dec
aaa
push
fimull
pushw
jo
stos
sbb
mov
int3
push
xlat
mov
int3
fdivp
int3
dec
xchg
or
ffree
or
jle
push
das
push
push
hlt
mov
in
mov
pop
mov
fbstp
enter
aam
scas
lcall
lret
jp
sbb
lcall
movsl
add
mov
push
adc
jecxz
and
adc
inc
jo
jecxz
or
icebp
test
sbb
add
add
or
inc
mov
pop
sbb
mov
pop
cltd
sub
icebp
xchg
movsb
test
imul
xor
adc
sub
scas
cmp
add
pop
inc
or
icebp
add
scas
sbb
hlt
lea
mov
cwtl
dec
jnp
xor
add
jae
lret
push
iret
xchg
shl
push
mov
enter
scas
mov
or
loope
push
mov
pop
stos
dec
cwtl
mov
aas
shlb
popa
sub
dec
or
jbe
push
fisubl
fcmovnu
pop
jp
icebp
sub
fldcw
add
dec
jg
in
xor
jp
dec
dec
sub
stc
or
stc
add
jmp
pop
pushf
lods
xchg
jmp
sbb
cmc
push
addr16
xor
pop
mov
xor
lea
adc
stos
imul
popa
mov
push
notb
imul
dec
mov
add
outsl
arpl
and
sub
movsl
mov
iret
add
ficompl
dec
xor
mov
adc
jbe
neg
pop
push
jnp
inc
add
mov
xlat
test
inc
bound
pusha
into
cltd
dec
push
xor
cmp
inc
add
mov
sbb
jb
addr16
and
dec
inc
jb
test
pop
pop
ja
out
fstpl
sbb
push
jbe
insb
add
mov
push
fidivl
movl
jns
stos
pusha
cmc
ljmp
cmp
into
mov
icebp
into
lret
in
or
fs
ss
dec
sub
pop
out
inc
cmp
inc
or
fcoml
xor
out
mov
xor
in
ror
ss
lods
rcrl
vpperm
es
mov
data16
cmpsb
push
pop
sbbl
sub
xchg
dec
mov
mov
dec
mov
mov
sub
je
adc
adcb
or
pop
cmp
mov
mov
adc
pop
add
or
in
popf
pop
dec
pop
lea
push
ss
movsl
stos
push
push
icebp
mov
mov
jg
jge
mov
sub
sbb
dec
pop
rcll
cmp
and
ljmp
bound
lret
jle
xor
cmpsl
mov
xor
sub
mov
sub
mov
enter
movsl
push
test
int
mov
add
in
test
sarl
in
test
clc
push
xor
lret
sub
inc
pop
mov
and
out
jp
in
scas
sar
sbb
or
imul
sub
adc
push
shll
bound
or
jnp
xchg
je
jbe
test
push
adc
dec
lods
dec
sbb
lock
ja
sub
stc
jne
pop
pop
hlt
pop
ds
loope
add
mov
lds
push
flds
orl
cld
xor
cltd
push
ja
daa
loopne
cli
cli
xchg
sub
inc
fiaddl
movsl
leave
jb
lods
jg
pop
out
cmp
pop
outsl
gs
lahf
adc
pop
inc
stos
pop
sbb
dec
cmp
sub
sbb
push
jae
popa
das
sti
jae
push
dec
sub
mov
xchg
cmp
cmp
push
testl
sub
pop
out
sbb
mov
cmp
mov
pusha
push
xor
int3
imul
push
adc
sub
enter
imul
repnz
sbb
jg
je
xchg
or
lret
and
ret
mov
daa
bound
xchg
sbb
push
mov
insb
lcall
xchg
mov
cmp
call
mov
test
mov
scas
je
and
rcll
into
inc
xor
and
mov
enter
jne
xorl
or
xor
fcompp
cs
adc
jno
xchg
lods
inc
sub
push
icebp
mov
lret
out
fisttpl
imul
pop
cs
scas
stc
xchg
lods
xchg
push
lret
outsb
push
lcall
icebp
fs
mov
ss
inc
cwtl
mov
adc
movsb
or
add
shl
stos
stos
pop
and
add
imul
sub
sbb
mov
mov
loop
outsl
xchg
cltd
and
popa
sub
push
rcr
push
mov
loop
lahf
sub
outsb
popf
sti
xlat
mov
ljmp
lahf
lods
mov
imul
pop
imul
adc
sbb
jp
jo
movsl
mov
loopne
push
leave
xchg
mov
jae
addr16
mov
jl
or
pop
fmuls
dec
in
daa
sub
push
or
sbb
inc
mov
push
push
push
out
or
jmp
shlb
mov
popl
gs
dec
xchg
fildl
mov
mov
mov
les
addr16
sahf
inc
add
mov
sbbl
or
mov
sbbb
xchg
mov
push
sbb
xchg
repz
xor
add
std
push
xchg
cmp
add
or
in
jb
enter
insb
or
iret
inc
sub
into
dec
shrb
add
pop
mov
adc
adc
or
pop
es
cmpsl
mov
mov
add
hlt
lods
loope
loop
mov
cld
pop
cld
push
std
add
fwait
mov
inc
cmpsl
cs
les
add
jbe
rolb
push
sbb
sbbl
pop
xchg
xlat
jbe
add
xchg
test
hlt
xchg
test
mov
in
imul
sbb
pop
enter
sbb
jbe
mov
dec
sub
jbe
cmc
mov
mov
lock
push
add
xor
xchg
dec
pop
and
and
lods
js
pushl
out
mov
push
loope
aaa
aam
mov
out
leave
loopne
aad
cmp
mov
adc
push
push
cmc
jg
adc
les
dec
dec
fwait
iret
int
mov
adc
add
jbe
cld
mov
mov
adc
jmp
aas
in
les
arpl
test
in
pushf
adc
ljmp
cmp
adc
push
cmp
hlt
pop
push
test
cmp
push
lods
out
subb
sub
push
add
or
sti
sbb
dec
pop
dec
mov
cmpsb
push
jns
xor
aad
gs
jle
sub
and
push
int
or
add
daa
mov
mov
loopne
dec
clts
inc
xchg
jle
mov
movl
push
sub
repnz
xchg
scas
push
movsb
popf
push
inc
cmp
loopne
sub
pop
push
push
ret
xor
in
push
lret
mov
cmp
ret
call
dec
call
aaa
xchg
add
and
and
adc
xchg
jbe
jns
xchg
jmp
es
fwait
add
adc
push
pop
push
mov
xchg
imul
dec
into
fs
aam
les
lods
or
pop
lock
jns
cwtl
pop
rolb
jmp
sbb
aaa
or
adc
and
mov
push
lret
xchg
jp
push
lds
cmp
fwait
dec
in
pop
ds
push
mov
rol
xor
jns
mov
push
arpl
cmp
call
sbb
cmpsb
sub
mov
push
ja
dec
in
adc
sub
jl
jbe
negb
pushf
xchg
add
xchg
or
push
jo
adc
inc
addb
adc
nop
call
xchg
jo
mov
aaa
clc
fsub
ret
jge
repnz
addr16
sahf
jns
jbe
cmp
push
cmp
bnd
sub
and
mov
xchg
push
xchg
mov
int
add
int
gs
push
pop
shrb
imulb
mov
cmp
lret
and
mov
sbb
mov
sub
das
sub
test
sub
xchg
xchg
scas
cmp
ss
jae
sub
cmp
dec
ds
ljmp
fs
add
imul
push
dec
sub
mov
add
jb
pop
mov
cltd
xor
push
push
xchg
cmp
les
dec
add
insb
dec
sub
pop
icebp
cld
push
sub
addl
pushf
add
sub
or
iret
adc
mov
lds
sub
cmp
lods
hlt
xchg
rcrb
push
mov
scas
addr16
xchg
daa
sub
cwtl
aaa
test
jbe
add
mov
cmpsb
lods
xor
mov
or
push
cli
jno
bound
inc
test
data16
mov
scas
lods
jnp
add
aas
push
je
lret
or
adc
hlt
mov
jl
popl
fdivrl
and
jns
out
sub
fwait
jg
mov
mov
divb
sub
imul
xchg
and
rcr
push
inc
push
insb
adc
cmpsl
add
int
sbb
jne
call
dec
lock
js
jmp
adc
fbstp
pop
add
lea
dec
or
add
mov
aas
mov
dec
sub
aas
sub
mov
outsl
mov
jle
js
insl
movsl
fidivrl
xor
btr
xchg
stos
inc
cs
jle
lea
push
pop
adc
lock
clc
or
mov
fstl
xor
orl
add
pop
adc
shl
push
jp
lar
aaa
scas
jg
xchg
mov
lret
aas
test
xlat
jns
pusha
push
std
mov
xor
jmp
pop
stos
test
out
push
sub
jae
sub
stc
nop
scas
jb
movsl
and
add
sbb
pusha
mov
push
mov
shrl
cmpsl
push
mov
adc
jns
or
dec
sahf
xor
call
fnstenv
cltd
jne
dec
imul
mov
jnp
test
add
and
adc
cmc
mov
and
dec
sub
xchg
fisubrl
mov
scas
rorb
daa
xchg
and
cmc
pop
shlb
push
enter
cmp
add
xor
shlb
fwait
jmp
lds
es
sti
nop
cmp
dec
mov
fcomps
xchg
pop
std
push
mov
scas
mov
ret
les
fildll
mov
div
jne
gs
jge
xor
jecxz
dec
dec
fs
mov
pop
hlt
jbe
in
cmp
mov
adc
xchg
fistl
xchg
lahf
xor
xchg
mov
rep
cs
sub
scas
mov
sbb
insl
jge
clc
add
xchg
out
cmp
scas
jg
int
ret
pushf
lds
jge
cltd
dec
roll
stc
sbbb
test
adc
mov
pop
movsb
xlat
xchg
push
push
pop
imul
jnp
out
shlb
jne
push
jae
and
push
jmp
jl
movsl
nop
push
rcl
in
and
inc
jne
cmpsl
ja
out
cmp
sbb
mov
call
fnstenv
out
jmp
push
xchg
xchg
lahf
xor
stc
sbb
adc
std
jae
sbb
xchg
xchg
sub
mov
cmp
and
fdivrs
dec
lret
fisubl
sub
stc
mov
std
std
nop
out
shrb
mov
jno
sbb
fdivl
push
pop
movsl
push
fwait
mov
jnp
or
clc
popf
repz
lods
je
fwait
clc
enter
inc
lods
jnp
or
je
and
sbb
push
fwait
mov
jge
xor
mov
xor
andl
test
inc
je
sbb
dec
xchg
lock
inc
jno
mov
jnp
cmp
inc
stos
lret
aam
jbe
lcall
xor
in
divb
and
adc
jns
jle
cmpsl
movsl
loope
jnp
jge
add
add
push
sbb
mov
jge
mov
jns
and
cli
sbb
jns
imul
fsubrl
xlat
lcall
jl
push
mov
bound
arpl
and
dec
in
push
cli
pop
pop
loop
int
gs
dec
sbb
rorb
mov
or
stc
cmpsb
xchg
cmp
pop
js
orb
insl
sbb
push
stc
cmp
stos
je
or
lea
jo
and
les
mov
cmp
and
sub
adc
inc
cmpsb
loope
roll
xchg
cld
and
insb
aas
rcrb
sub
lods
popf
pop
add
inc
inc
ror
jmp
not
fimull
dec
push
push
dec
icebp
add
add
in
aas
mov
popa
cltd
push
dec
add
sti
inc
mov
addr16
insl
test
cli
repnz
sti
cmp
shr
movsb
rclb
in
out
outsl
cwtl
test
cmc
shrl
jns
xchg
jle
add
clc
cmp
cmc
and
sub
addr16
mov
jno
cmp
mov
pop
lcall
sub
mov
outsl
popa
jnp
sub
add
loope
xor
inc
out
ljmp
rcrb
fidivrs
ret
pop
inc
insb
push
sub
hlt
inc
outsb
shll
xchg
cmp
pop
mov
movl
repz
stos
insl
pop
jae
sbb
push
mov
mov
lea
test
inc
xchg
lds
dec
sbb
xor
int3
rorl
jnp
sub
scas
iret
sbb
add
in
out
fildll
lods
push
pop
shll
in
ret
jo
loope
jb
push
sti
cmp
rcr
pop
or
test
sti
les
mov
dec
lea
lret
mov
xchg
lret
icebp
roll
int
movl
fldl
mov
or
repnz
xlat
adc
jnp
aas
push
test
mov
mov
movsl
mov
lods
insl
test
aam
lods
jo,pn
push
cld
pusha
push
testl
add
adc
insb
sbb
rcrb
mov
mov
sub
inc
test
icebp
out
je
and
js
xor
adcl
popf
repnz
push
sub
iret
scas
iret
out
or
push
aam
iret
fwait
and
adc
add
adc
mov
call
sbb
loop
push
sbbb
mov
movsl
dec
adc
mov
cmpl
enter
scas
adc
insb
cwtl
repnz
imul
aam
pop
out
dec
mov
fs
xchg
pop
in
lcall
xor
push
inc
and
test
sub
sbb
push
jno
pop
pop
xlat
dec
pop
xchg
adc
movd
neg
or
loope
stos
inc
roll
cmp
das
sti
mov
in
rcll
loop
mov
pop
arpl
fdivl
pop
cmc
loopne
jmp
pop
mov
add
jb
iret
jle
adc
mov
hlt
sub
cmpsl
dec
adc
push
dec
clc
adc
sbbb
ss
sbb
fdivs
cmp
adc
mov
gs
dec
mov
loope
fwait
add
or
daa
lret
sbb
dec
loope
sub
push
addl
test
mov
mov
dec
mov
xor
shrb
sbbl
cmpb
and
ljmp
fidivl
loope
and
xchg
pop
cmc
data16
lahf
xor
shll
and
mov
xor
xchg
fistl
fcmovu
fs
mov
add
ja
ds
mov
mov
jle
mov
and
test
mov
cmp
dec
lret
or
rcrl
and
sarb
jbe
in
adc
mov
add
pop
mov
pusha
daa
cltd
pop
cmpsl
les
pop
into
jge
xor
add
xor
dec
jns
arpl
addb
es
sbb
fsubs
dec
aam
jo
sub
adc
mov
jnp
pop
stos
inc
mov
lahf
mov
je
push
outsl
pop
or
lods
in
lds
ja
xchg
push
xchg
sbb
mov
mov
outsl
mov
test
mov
add
jmp
adc
jg
test
xchg
test
xchg
jecxz
jbe
adc
mov
je
xchg
leave
out
std
stc
add
mov
andl
out
ljmp
sbbl
dec
sahf
dec
push
icebp
mov
add
dec
cmpsl
fcomp
out
pop
pop
lods
xchg
hlt
push
ljmp
jmp
scas
push
repz
ret
aad
mov
inc
iret
sub
pop
aaa
mov
xor
pushf
dec
lock
mov
aas
aam
cmpsl
mov
xchg
test
in
xor
test
jl
ja
cmpsb
scas
cmpsb
xchg
arpl
inc
push
mov
push
mov
sub
push
subb
pop
cmp
out
insl
xor
aas
pop
sub
sub
pop
outsl
fmuls
or
adc
cmp
inc
in
jl
repnz
into
push
mov
sub
mov
and
fdivl
sti
jl
inc
insl
sti
jbe
mov
and
mov
sbb
and
cmp
outsl
push
mov
ret
lock
je
imul
aam
mov
mov
rcr
imul
inc
xor
das
jae
inc
out
sub
adc
pop
xlat
jecxz
frstor
ret
lahf
sub
scas
imul
fbld
mov
imul
test
jb
ret
loope
pop
aad
mov
aad
outsb
incl
rcr
into
inc
cmpsl
adc
pop
mov
adc
les
inc
jecxz
sub
mov
popl
stc
aaa
nop
rcrb
add
pushl
fnstsw
in
iret
test
mov
xchg
jns
jg
mov
les
cmp
add
in
jo
cmp
imul
xor
mov
lods
push
mov
fsubs
mov
push
xchg
jnp
cmp
sbb
scas
icebp
sarb
inc
push
mov
fmulp
filds
addl
cmp
out
sub
pushf
xlat
sti
xchg
repz
loope
pop
jno
mov
in
rcr
dec
fucomip
push
xchg
cmp
sbb
arpl
mov
add
xchg
std
jmp
loope
leave
and
in
lods
in
adc
lahf
xor
fisttpl
jl
push
mov
inc
int
fsubrs
fdivp
xchg
sahf
iret
cmp
inc
sbb
mov
and
and
xor
and
jbe
aam
cs
ja
insb
xchg
or
inc
push
and
fstps
xor
out
pop
rcll
lret
mov
or
or
dec
xor
or
mov
movsb
inc
push
inc
pop
mov
lahf
adc
dec
pop
pop
js
jg
pop
ret
or
push
stos
cmp
notb
inc
frstor
lds
push
push
lea
or
mov
imul
dec
push
int
mov
lock
clc
mov
ds
mov
repnz
jnp
fsubr
mov
sub
test
insl
iret
push
aam
stc
loop
cmc
testb
aam
xchg
icebp
bound
jecxz
sbb
jmp
mov
lds
xor
and
push
into
jle
xor
aaa
adc
es
cli
mov
lods
aad
fadds
int
ss
mov
pusha
xor
nop
sahf
cmp
jb
aam
mov
jecxz
push
in
cmp
inc
pop
cs
or
mov
mov
lods
out
or
mov
mov
test
lcall
loope
stc
xchg
mov
ss
and
sti
mov
xlat
fwait
inc
inc
out
dec
int3
out
dec
jge
addr16
pop
outsb
and
test
mov
iret
mov
leave
xchg
outsb
sub
and
mov
pop
add
in
push
mov
inc
mov
push
cmp
mov
mov
sti
and
xchg
clc
cmp
fcoml
and
mov
cmp
scas
dec
daa
and
adc
cmp
sub
jns
sbb
lds
fstl
push
cmp
fwait
loope
pusha
mov
repnz
xor
add
push
pop
adc
data16
ret
jb
sti
ljmp
les
sbb
mov
pop
jno
jb
push
aas
push
int3
jo
mov
add
lods
das
dec
pop
mov
movsl
jns
js
dec
dec
inc
lret
fisttpl
push
mov
push
pop
adc
adc
jb
les
adc
xchg
bound
int
test
jl
push
push
cli
mov
mov
fidivrl
aam
nop
or
inc
jns
jp
fcmovnbe
movsb
loop
add
sub
jo
jae
xchg
je
jg
out
aad
jnp
out
popf
fisubl
xchg
out
sarl
jne
fistl
sti
stos
or
inc
xchg
std
and
xlat
sub
or
sub
cmp
jno
mov
or
out
jle
insl
sub
and
les
sub
lds
adc
fsubl
dec
xor
mov
ret
shrl
jg
ljmp
add
xor
jl
mov
push
in
rcll
nop
lret
call
sub
jg
sub
dec
pushl
xor
push
cmp
pop
mov
cmpsl
scas
pop
out
or
add
lods
pop
inc
sub
out
add
dec
pop
adc
nop
ja
imul
mov
adc
fs
loop
cmp
cmp
inc
pop
mov
mov
popa
cmp
lock
fsub
jle
xchg
popa
push
movhps
sub
shl
pop
push
cmp
cmpsl
pusha
fs
mov
ret
push
lret
ja
andb
clc
pop
test
pop
or
cs
outsb
popa
adc
pop
cmpsb
aas
fists
sbbb
ljmp
cmp
xchg
ljmp
in
repz
icebp
lods
jne
jb
pop
jp
jge
mov
pop
push
mov
pop
and
sub
cmp
test
fwait
inc
lret
sub
test
dec
arpl
leave
fnstenv
lea
push
or
push
push
cmp
addl
call
xchg
decl
cld
test
call
cmp
in
add
jbe
adc
out
cld
mov
leave
dec
fdivrl
fistpl
pop
jmp
xor
mov
fcomi
sbb
fldcw
mov
ja
mov
adc
std
iret
mov
mov
adc
inc
clc
mov
mov
push
dec
mov
sbb
dec
pushf
xor
lods
lcall
lcall
ror
loope
iret
jge
xchg
jno
push
test
add
int
jmp
inc
or
jb
add
repz
imul
pop
jl
mov
push
mov
dec
popf
adc
adc
out
enter
rcrl
cmp
notl
mov
adc
push
fidivs
mov
scas
inc
push
push
add
subb
sbb
stc
or
data16
ljmp
daa
clc
iret
mov
xlat
insl
clc
pop
jge
adc
jae
push
cmp
inc
imul
orb
iret
cmp
xchg
testb
mov
pop
jle
xor
push
aad
and
pop
push
repz
loop
xchg
adc
lods
add
pop
repz
lret
inc
insl
aad
mov
sub
ds
sub
sbb
sbb
push
mov
pop
and
pusha
dec
movsb
inc
repz
sarb
adc
xor
adcl
xchg
imul
xor
pop
daa
fistl
mov
bound
outsl
clc
push
test
movsl
mov
mov
xor
sub
repnz
xchg
inc
or
jmp
sarl
mov
aas
xchg
test
lds
les
int
or
inc
lods
cli
or
or
sub
fidivs
add
xor
pop
shll
xchg
cmp
setb
in
jo
inc
jp
sub
addl
xor
mov
cmp
decl
test
add
lock
iret
in
ljmp
jae
adc
inc
sbb
xor
pop
inc
sub
loop
push
pop
scas
mov
daa
push
mov
rcr
pop
pop
scas
xchg
and
aaa
mov
adc
push
pushf
mov
or
add
jmp
jp
mov
xchg
jno
cwtl
mov
fstpl
into
testb
ss
jl
pop
enter
icebp
push
inc
inc
and
loopne
xchg
mov
outsl
and
push
das
cmp
stos
xchg
ds
stos
push
sbb
jl
ficoml
mov
movsb
and
cmp
cmpsl
jo
lods
dec
sub
xlat
ret
test
jns
and
repz
cld
sub
loop
nop
add
xor
xor
js
fcmovnb
jecxz
cli
jae
jg
pop
test
imul
jno
int3
shr
mov
push
pop
test
xchg
push
adc
sbb
sub
dec
nop
mov
mov
jle
repnz
repnz
aad
in
pop
push
mov
inc
lret
bound
out
inc
testl
or
mov
inc
inc
rcrb
stos
add
fnstsw
in
lahf
jmp
dec
aas
or
pop
sub
cs
inc
sbbb
xchg
stos
ja
jo
add
mov
aaa
aam
idivb
xchg
pop
mov
test
imul
sbb
sub
shrl
mov
pop
xor
xchg
imul
mov
mov
pop
adc
repz
dec
mov
mov
add
cmp
rcll
popf
xor
in
jge
insl
jbe
out
insl
inc
pop
movsl
or
insl
push
jae
or
pushf
jecxz
cmp
test
push
test
push
std
call
sub
in
xchg
push
mov
push
pop
cmc
pop
leave
outsb
jl
addr16
call
ds
loop
mov
out
sarb
xor
and
sbb
cltd
fisubs
lcall
add
fcmovbe
mov
xorl
jbe
lcall
fs
cltd
xor
fcoms
cmp
mov
and
ss
inc
and
or
and
testl
movb
int
sbb
nop
sub
dec
xor
sbbb
stc
pop
in
pop
fdivs
push
jb
enter
outsb
and
test
add
or
mov
imul
xor
push
pop
pop
les
lret
adc
call
lahf
ret
sbb
out
cmp
push
movsl
in
clc
cld
cmp
into
bnd
dec
cmp
lret
sbb
lret
inc
scas
sbb
and
dec
ret
or
out
mov
push
inc
jae
fisttpl
xchg
aam
jae
adc
ret
aad
or
mov
add
pop
stc
out
and
pop
sbb
mov
dec
clc
adc
popf
imul
sub
mov
mov
mov
add
jecxz
repz
inc
xchg
icebp
sarb
pop
les
inc
mov
sub
ljmp
imul
inc
xchg
xchg
pop
test
mov
negb
sub
pop
and
movsl
or
pop
sbb
xchg
shr
shrl
dec
ret
pop
out
jge
xchg
popf
data16
insl
lahf
jp
dec
mov
jmp
sub
inc
sub
push
inc
mov
cmp
mov
lea
int
addl
outsl
mov
daa
insb
fistpl
fidivs
pop
lods
jmp
out
mov
mull
xor
cwtl
mov
xchg
repz
mov
loope
test
push
xor
mov
outsl
sbb
and
pop
std
orb
out
cmp
aad
lea
sub
cmp
jae
mov
push
sub
fidivrs
xchg
xchg
movsl
movsb
ss
or
pop
seto
fildl
inc
xchg
and
test
mov
or
fimull
arpl
fistps
jge
mov
xor
push
stc
imull
aas
fildl
cmp
std
mov
in
and
inc
pop
lock
and
xor
mov
dec
cld
std
mov
fdivs
xchg
jno
les
adc
mov
inc
xor
push
jbe
in
insb
aaa
stc
jle
dec
cwtl
jg
ret
add
add
dec
and
cs
push
inc
fstpl
daa
xchg
sbb
inc
stos
das
stos
outsl
rcl
sahf
cmpb
repnz
mov
stos
das
out
mov
sbb
pop
cmc
scas
inc
fs
mov
mov
cld
and
bound
mull
rol
aam
add
sti
push
jmp
lods
push
ret
cmp
push
mov
outsl
insb
imul
call
stc
pop
inc
repz
mov
lret
mov
and
les
sbbl
repnz
out
push
out
ja
cmp
dec
cli
xchg
in
sbb
cmp
popa
scas
mov
enter
cmp
fisttps
jne
sahf
mov
out
adc
add
pop
rcrb
in
xchg
lret
jae
cmp
mov
cmp
add
enter
fisubrs
or
ret
push
out
test
cltd
movsl
xor
nop
sbb
jns
stc
mov
fsubs
lods
push
lock
xorl
stos
inc
jle
dec
mov
jle
insb
popf
mov
pop
ret
jo
sub
adc
jne
test
xor
lds
and
xchg
lea
mov
pop
adc
stos
ss
jb
ljmp
shlb
or
adcl
xchg
in
xchg
loop
lret
sbb
push
test
mov
fwait
push
mov
mov
pop
call
sbb
cmp
shr
inc
mov
test
in
xchg
sub
inc
outsb
mov
add
xor
lock
fdivrl
in
rcll
jo
popf
xor
dec
dec
dec
pop
repz
inc
or
jg
cltd
add
lret
imul
mov
sahf
test
xchg
jae
cs
mov
addr16
adc
imul
lock
jge
add
ret
scas
outsb
xchg
dec
and
inc
dec
sahf
mov
mov
outsb
into
daa
xchg
cmp
xchg
xchg
in
fdivr
mov
repz
lds
out
pusha
push
aaa
mov
lods
and
cli
es
inc
clc
loop
xchg
xchg
add
invd
lcall
push
mov
fchs
movl
adcb
push
subl
int
xor
jmp
imul
jge
and
fnstsw
and
andb
mov
dec
cmp
lea
fucomp
movsb
aas
inc
push
mov
stos
cmpsl
and
pop
repnz
jns
mov
fnsave
into
lcall
fucomi
dec
push
in
cltd
cmp
icebp
or
stos
lock
pop
cli
nop
ret
repnz
dec
mov
pushf
pop
or
jg
scas
jg
ljmp
and
repz
and
jge
and
mov
xchg
insl
ret
fwait
push
pop
push
sti
fcmovbe
xchg
sub
scas
and
xchg
mov
cmpsb
lock
ja
loop
lret
imul
cwtl
fcmovbe
and
or
ljmp
adc
mov
movsb
data16
cltd
and
shrl
nop
push
and
sub
sbb
movsb
stos
in
outsb
jl
push
sti
outsb
xchg
cld
mov
xchg
or
mov
lcall
loope
add
imul
rorb
cmp
pop
sar
movsb
shll
test
ja
cmp
mov
cmp
and
lea
pop
and
leave
cmc
xlat
sbb
addr16
jo
movsl
loop
xchg
sbb
sti
loop
movsb
xchg
sub
and
scas
or
in
cmc
push
das
pop
mov
cmc
push
lods
lea
xor
and
xchg
ljmp
sub
xor
movsb
sbb
call
icebp
into
icebp
iret
cmp
into
pop
push
nop
aas
inc
inc
mov
push
lock
mov
push
and
orb
mov
mov
cmp
enter
and
add
cmpsl
out
cltd
push
fidivrl
repnz
out
push
adc
js
outsb
xor
jl
jle
enter
dec
pop
mov
xor
pop
stos
test
lds
xor
imull
inc
fisttps
xchg
aaa
je
mov
mov
les
or
mov
bound
push
inc
jnp
rcll
mov
shll
mov
lret
aad
xchg
sbb
xor
cli
cli
clc
rorl
push
jp
sub
popf
xor
in
dec
mov
add
aam
push
loop
cmp
icebp
xchg
dec
cs
push
test
clc
mov
arpl
roll
dec
movsb
dec
inc
sbb
pop
mov
lods
les
das
push
outsl
cmc
pop
and
sbb
cmp
lds
cmp
push
and
push
jb
mov
pop
ret
jecxz
and
lds
movsb
dec
ret
pop
stc
ret
inc
or
mov
cld
pushf
xchg
ds
sar
clc
xchg
dec
mov
xchg
sub
cs
or
mov
mov
cmp
sarb
mov
xlat
lea
clc
mov
rorl
xchg
sahf
xor
pop
jmp
inc
push
pop
rcll
out
xchg
push
lods
stos
jge
xor
mov
hlt
bnd
jbe
sub
jb
ret
xor
dec
pop
xor
insb
cmp
dec
mov
adc
xchg
mov
pushf
and
daa
cmpb
in
shlb
dec
cmp
jmp
push
insl
clc
addl
out
or
outsl
jnp
lods
inc
daa
fsts
sbb
in
jns
and
xor
clc
xor
or
mov
in
cmp
cltd
sbb
jb
js
shll
sarl
xchg
pop
push
iret
xchg
mov
test
aaa
movsl
cmp
xchg
sarb
xchg
sbb
mov
adc
addr16
addr16
push
or
roll
pop
and
stc
xor
bound
scas
in
mov
scas
mov
orl
pop
push
or
jnp
ror
pop
mov
sbb
in
and
jbe
dec
inc
cwtl
mov
int3
pop
mov
mov
das
or
push
push
add
cmpsb
mov
pop
add
inc
loop
addb
mov
dec
subb
mov
pop
xchg
xchg
rcl
push
fs
sbb
cmc
shrb
inc
fimull
ljmp
sbb
arpl
or
pop
adc
sub
inc
jb
and
popa
cmovnp
mov
fldcw
push
inc
out
push
lds
xchg
pop
int
push
adc
mov
int
mov
or
push
jo
stos
stos
dec
ret
jl
das
mov
repz
leave
cmpsl
pop
clc
lahf
push
popa
loopne
out
mov
fisubrl
lds
in
inc
mov
inc
xchg
test
rcr
jecxz
and
inc
sbb
rcr
in
mov
inc
cmp
push
aam
movsb
jne
cli
ss
mov
sahf
add
cmp
out
sbb
jmp
pop
das
inc
mov
cld
stos
pop
xchg
es
in
arpl
stos
loope
add
ret
loop
cmpsl
push
pop
or
cli
xchg
mov
int3
jmp
iret
sti
jne
add
nop
mov
rorl
xor
pop
into
xchg
repz
xor
lret
hlt
push
push
movsl
imul
lods
and
aas
jne
rcr
adc
mov
pop
and
stc
push
sahf
les
lock
sbb
lret
movsl
out
and
mov
adc
jg
dec
adc
push
jecxz
dec
jge
jbe
jecxz
into
inc
jnp
clc
std
cmp
cmp
xor
std
jle
dec
add
out
imul
mov
xchg
xor
push
imul
xchg
divb
fwait
inc
dec
loope
or
sub
and
cmp
outsl
insl
cli
jae
xchg
sarl
dec
out
fiadds
jns
sarl
fs
dec
push
cld
push
ds
les
push
push
iret
dec
pusha
xchg
shlb
pop
cmc
jns
dec
sbb
fidivrs
push
pop
stos
adc
loop
call
jge
jge
imul
lock
aad
xor
sub
adc
dec
pop
loop
dec
push
cwtl
sub
push
mov
fwait
mov
ja
mov
mov
inc
mov
hlt
add
out
inc
jne
or
cmpsb
aas
mov
pop
std
aas
aas
mov
icebp
push
xor
in
push
fs
leave
or
stc
jmp
lret
bound
pop
jg
pop
sbb
call
mov
or
pop
fisttpll
jmp
mov
fs
ja
mov
nop
add
pop
mov
sbb
scas
xchg
add
dec
shrb
in
into
pop
lds
fnstenv
stc
inc
jae
adc
addl
out
pop
cmp
outsb
push
cmpsl
mov
cwtl
add
arpl
dec
cs
stos
jbe
and
inc
call
in
jecxz
mov
pop
mov
inc
jge
imul
jae
pop
push
cmp
or
sbb
out
xchg
xchg
arpl
popf
mov
cmp
fwait
add
movsl
adc
xor
xchg
movsb
cmpsl
mov
in
xchg
jns
in
add
inc
fimull
fidivrs
fwait
xorl
mov
imul
lods
cmp
pop
add
icebp
sub
pop
push
lahf
pop
push
jne
loopne
mov
test
incb
imul
shlb
xchg
cmp
jle
sti
pop
sahf
loopne
neg
call
or
bound
incl
sti
push
stc
stos
pop
lds
jle
call
popa
adc
push
sbb
inc
cwtl
mov
dec
movsl
scas
xchg
jae
mov
pop
movsb
mov
idivb
sti
mov
and
mov
sbb
inc
add
jl
add
ret
fsubrl
xor
mov
push
lods
mov
cli
leave
cmp
mov
imul
into
xchg
push
lods
add
js
jnp
add
dec
fwait
aam
addr16
scas
xchg
mov
inc
icebp
inc
clc
cld
les
scas
cwtl
push
aas
scas
sarb
into
ljmp
pop
iret
mov
mov
inc
icebp
test
cmp
das
and
inc
aad
fs
pop
mov
push
or
shl
in
and
faddl
xor
clc
cmp
jnp
adc
in
add
jge
das
pop
jg
cmp
movb
or
insb
add
and
fsubr
mov
mov
icebp
mov
xchg
adc
add
ljmp
stos
or
and
jo
adc
dec
jmp
arpl
mov
adc
repnz
repnz
in
xchg
or
pop
adc
sti
adc
enter
idivl
jbe
movsl
stc
or
adc
mov
jno
push
movsb
sub
mov
or
pop
mov
add
push
and
mov
lcall
rcll
xchg
mov
lea
fstl
fistpll
pusha
xor
mov
ljmp
daa
sbb
pusha
mov
stc
and
push
sbb
add
dec
inc
comiss
ret
mov
bound
test
subl
hlt
pop
xchg
xor
out
loop
adc
lock
push
push
sub
jbe
mov
adc
xor
adc
inc
mov
and
or
pop
bound
xchg
repnz
aad
cmpsb
pusha
mov
fisubrs
mov
out
cld
push
test
jle
or
adc
rolb
rorb
mov
pop
stos
xor
pop
dec
shl
int
shrl
inc
lea
iret
jle
ss
or
and
fildll
add
adcl
aaa
xchg
mov
mov
ljmp
data16
adc
or
insl
and
mov
lods
fs
xor
hlt
xchg
test
push
fs
ret
and
mov
push
loopne
cmp
mov
sahf
std
inc
je
nop
or
pop
cwtl
xor
lock
scas
mov
mov
cltd
js
lock
rcll
int
mov
inc
rorb
sahf
and
cmp
sub
mov
sub
sub
mov
mov
mov
push
popa
pop
aaa
adc
cmc
ja
imul
out
pop
jb
enter
data16
mov
scas
xlat
xlat
sub
pop
and
test
fsub
retw
sub
mov
adc
loope
daa
sub
xorb
xchg
addb
into
adc
rorb
rcrb
jle
jmp
cmp
mov
cltd
pop
push
add
orl
xchg
test
jmp
test
imul
sub
gs
outsb
xor
inc
iret
inc
popl
inc
aaa
in
pop
sub
add
in
and
xchg
or
out
enter
push
cmp
or
pushf
aad
mov
sahf
push
repnz
pop
adc
hlt
dec
aas
jp
jge
mov
sbb
cli
cmpsb
sub
xchg
js
sbb
mov
sbb
ret
idivb
insl
cli
and
xchg
and
mov
jmp
sbb
dec
mov
add
add
inc
inc
gs
jle
and
inc
into
es
or
iret
xor
loope
pop
mov
hlt
jno
jae
loop
fwait
in
mov
push
adc
imul
xchg
dec
push
mov
out
pop
mov
incb
daa
pop
mulb
test
rorl
add
jmp
out
inc
inc
xchg
outsl
out
or
cmpsb
xor
int3
mov
lahf
xor
in
inc
xchg
xor
add
adc
cld
mov
je
ret
outsb
pop
lcall
aaa
adc
std
icebp
mov
jmp
lret
test
pop
std
dec
adc
into
sbb
push
xchg
fnstenv
in
in
in
sub
cmp
scas
out
js
shrb
fwait
mov
adc
adc
jne
or
cmc
xchg
shl
stos
lea
and
pop
loope
jbe
loop
loope
cli
xchg
mov
sti
mov
sub
add
dec
mov
sarb
std
rclb
mov
xlat
jecxz
cmp
mov
lods
test
adc
mov
add
xchg
pop
push
popa
fs
mov
and
andl
les
jnp
scas
testb
jbe
mov
fisttpll
out
jmp
shlb
mov
sbbb
add
lods
adc
and
lcall
and
mov
add
ljmp
xchg
lret
add
ja
dec
hlt
outsb
cli
pusha
and
xchg
pop
cmp
cmp
ljmp
jecxz
ja
hlt
inc
and
cmp
and
push
sub
jmp
push
push
pop
add
pop
mov
aaa
xchg
cs
lret
subb
mov
cli
subl
insb
mov
arpl
ror
mov
andb
shll
xchg
xchg
fidivl
jmp
pop
and
cwtl
sbb
xchg
ret
push
dec
ss
fildl
jmp
fdiv
jmp
jg
filds
rcll
and
xchg
pusha
or
mov
and
aam
cs
xor
sub
add
int
mov
ljmp
pop
outsb
lret
cmp
xor
insl
jno
clc
or
dec
xlat
imul
mov
lcall
cmpsl
call
mov
jae
shlb
hlt
movsl
inc
adc
pop
mov
dec
iret
mov
and
or
stos
sbb
pop
shlb
push
test
bound
sbb
mov
mov
add
repz
mov
addb
xor
arpl
push
popa
xchg
add
jne
inc
mov
stos
jg
jno
sti
sbb
adc
pop
insb
lock
out
testb
mov
incb
ret
mov
fiaddl
scas
daa
adc
fisttps
fisubs
movsl
loope
xchg
xorb
mov
in
cli
pop
and
enter
ds
pop
cmpb
xchg
sub
dec
enter
lods
inc
shl
rcrb
and
adc
mov
mov
fnsave
gs
popa
sub
jl
pop
jnp
mov
jmp
sub
les
add
xor
cmp
dec
icebp
scas
fwait
push
mov
insb
pop
ficomps
or
cmp
rolb
xchg
mov
and
iret
in
cmp
aad
or
iret
fdivr
negb
inc
outsl
stc
sti
cmp
xor
fcom
cld
aam
arpl
push
repnz
outsb
lret
jnp
popa
jb
rcrb
sbb
stc
les
les
or
es
in
sub
xchg
loope
mov
int
int
mov
xchg
sub
aam
icebp
sub
pusha
dec
outsl
pop
mov
or
mov
jne
rclb
push
pop
les
movsb
pop
in
mov
out
mov
lods
outsb
movsl
xchg
scas
push
pusha
mov
aas
dec
stc
mov
add
and
xchg
je
cwtl
mov
dec
sarb
mov
inc
pop
lods
or
mov
imull
mov
xchg
int3
dec
dec
iret
pop
and
movsl
std
pop
in
cltd
inc
insb
lods
fs
sahf
mov
dec
xor
cld
call
cmpsl
inc
dec
sbb
push
cmp
push
add
test
outsl
imul
sub
sub
lahf
cmc
dec
ss
jo
insl
push
jecxz
or
cmpsb
cld
arpl
loope
adc
push
dec
cmpsl
je
jbe
inc
call
xlat
pop
pop
sbb
mov
cwtl
mov
and
cmp
sub
xlat
sarb
sub
mov
mov
fsubrs
std
add
pop
mov
loop
and
ja
xlat
test
repz
add
pop
shlb
fcmove
dec
mov
lds
out
ljmp
xchg
push
mov
icebp
jmp
rorl
push
inc
call
in
jne
push
mov
js
das
sbb
mov
sbb
and
dec
push
mov
outsl
pop
jne
inc
xor
js
mov
mov
jp
insl
stos
jp
mov
cmp
sub
cmp
dec
dec
enter
outsl
push
dec
ljmp
sub
rolb
push
pop
inc
das
add
mov
rsm
mov
cli
cmp
xor
push
add
clc
lea
movsl
push
ficompl
push
pop
jl
dec
gs
aam
jg
cmp
xchg
xchg
imul
and
lcall
cmp
push
mov
and
pop
adc
pop
adc
stc
sub
ret
inc
jle
mov
mov
sbb
mov
dec
jecxz
xchg
and
and
cwtl
pop
jg
mov
xor
or
cmpsb
inc
xor
adc
jne
pop
insb
mov
stos
adc
lods
jp
js
push
out
aaa
inc
mov
jns
test
xchg
ja
testb
outsl
sbb
popa
jbe
rcll
test
sahf
ds
js
andb
cmp
subb
pop
aas
repz
loope
dec
dec
inc
shrb
lret
lods
inc
cmp
xor
jnp
jbe
pop
push
cli
mov
add
and
aaa
pop
setp
scas
jae
out
mov
and
scas
or
lahf
dec
xor
xchg
and
jmp
dec
add
or
cmp
mov
cmp
cmp
sub
pusha
outsb
xor
xlat
dec
lahf
sahf
mov
inc
fnstsw
test
rorl
in
push
popa
out
sbb
fs
mov
cli
jge
ret
mov
into
add
popf
rclb
cltd
push
lods
cmpb
pop
stos
xchg
dec
ret
mul
sub
loopne
gs
je
jno
test
push
in
addr16
test
dec
cmp
xchg
inc
xchg
adc
pushf
adc
xchg
call
pusha
loop
lock
and
jb
pop
rcrl
incb
adc
mov
test
jmp
pushf
xchg
pop
bound
mov
sub
addr16
jne
inc
mov
mov
cmp
pop
ds
mov
sbb
pusha
sbb
push
and
inc
fadd
xor
fwait
adc
mov
xchg
cli
mov
xchg
mov
popa
jle
enter
lret
dec
jmp
out
sahf
jne
outsb
insb
fmul
lahf
cmp
mov
and
xchg
pop
frstor
dec
xchg
ret
push
xor
clc
or
addr16
cltd
lock
mov
stc
jb
test
sub
adc
ljmp
aas
xor
scas
ret
mov
cmp
lcall
ljmp
xchg
mov
lahf
ret
sbb
jmp
cli
rcr
fstpl
mov
fs
nop
sbb
or
cli
div
js
pop
in
fidivl
das
cmc
jbe
pop
jnp
aas
fadds
sbb
rcr
mov
sub
dec
test
cmp
fwait
std
movsd
sub
popa
jle
xchg
dec
dec
mov
loop
iret
ret
cmc
movsb
js
or
pop
pushf
in
xchg
daa
ret
push
out
adc
jge
hlt
mov
sub
mov
or
repz
add
fildl
testl
jp
push
pop
jns
lcall
pushf
movb
push
rcrb
daa
bound
clc
and
push
adc
cmc
es
pop
mov
pop
add
mov
icebp
pop
jge
and
cltd
dec
push
scas
or
ljmp
push
divb
ljmp
jbe
fcom
inc
addr16
mov
daa
ds
mov
daa
popf
sub
dec
mov
dec
jmp
jns
call
psrlw
mov
lods
inc
mov
loop
cmpsb
jne
push
push
pop
or
imul
jns
jg
das
jl
fiadds
dec
inc
xor
add
es
fs
sbb
jmp
jp
into
xor
cmp
fistl
and
mov
in
xor
cmpsl
subl
jae
in
xor
mov
ss
or
mov
push
xor
ja
movsl
sub
ror
xchg
mov
nop
jns
dec
mov
ss
mov
sti
nop
cmp
outsl
mov
lahf
rolb
je
insb
jns
jb
nop
xor
shr
icebp
mov
dec
outsl
add
jno
fmuls
mov
pop
shll
inc
ret
jb
ficoms
push
sub
mov
and
jns
dec
test
xor
fnstsw
add
push
sbb
out
mov
inc
jp
addr16
inc
inc
adc
pop
mov
outsb
cmp
and
je
pusha
jmp
data16
hlt
mov
sbb
loop
inc
pop
in
mov
adc
insb
pop
jne
and
nop
out
or
inc
test
and
or
jns
out
popa
push
adc
adc
lret
fimull
lods
cmp
jae
and
push
movsl
daa
ret
dec
pop
push
push
cmp
cli
mov
out
sti
cmpsb
icebp
cld
push
sbb
jo
xchg
std
add
jae
add
inc
mov
jae
call
sbb
js
adc
sbb
adc
sbb
lods
leave
scas
inc
mov
movzbl
stc
push
je
inc
je
aas
mov
in
sbb
scas
out
in
sub
popf
clc
xchg
leave
and
sub
fscale
xchg
lods
sbb
lret
fistl
mov
gs
cmovnp
sti
cltd
mov
push
ljmp
lea
push
aas
hlt
mov
xor
fcmovnbe
enter
lods
bnd
lcall
test
or
mov
and
enter
gs
push
outsb
bound
outsl
test
cwtl
movsl
test
mov
in
mov
jle
pop
lock
mov
das
pop
cmpsl
jne
and
std
dec
test
jo
push
movsb
dec
jbe
les
mov
sbb
out
flds
sub
outsb
fucomi
and
cmpsb
std
add
divl
insb
adc
imul
jae
fidivs
jl
cmp
sbb
jg
xor
pop
ret
push
dec
and
jnp
and
lret
popa
outsl
mov
xlat
insl
xor
sbb
mov
stc
cs
sub
sub
adc
into
lea
outsl
test
or
xor
cmp
iret
add
mov
push
ljmp
xchg
test
jle
aas
pop
push
sbb
imul
jns
inc
imul
popa
pop
inc
pushf
enter
mov
cmc
xchg
sbb
pop
stos
mov
lcall
lods
xchg
xor
push
mov
icebp
jg
mov
sub
mov
icebp
xor
pop
ja
sbb
insl
and
pop
fs
rolb
cmp
shlb
ror
pusha
call
push
lret
fwait
and
subl
movb
stc
test
pushw
lret
popf
adc
pop
dec
lea
call
fmuls
cmp
and
sub
int
imul
loopne
in
cmp
pop
into
jo
cmp
rcrl
mov
mov
or
push
sbb
push
aad
das
cmpsb
or
sahf
movsl
clc
mov
imul
sahf
stos
push
addr16
fwait
test
pushl
test
xor
dec
cs
aaa
mov
and
mov
pop
add
arpl
sbb
cmp
add
sbb
and
sub
loope
into
leave
shl
sbb
imul
cmp
fsubr
test
rorl
xchg
xchg
push
int3
or
ljmp
fs
dec
clc
jno
cmpl
lea
imul
xchg
js
add
fidivs
movsl
and
in
push
arpl
std
mov
inc
arpl
sub
push
stc
or
inc
in
push
sbb
jl
int
lods
arpl
mov
icebp
adc
xor
pop
inc
or
jg
lods
cmpsl
inc
inc
js
push
ja
add
add
aas
push
mov
jg
lret
mov
push
cmp
repz
dec
rcr
add
outsb
mov
aad
cmp
test
fdivrl
sbbl
sub
scas
or
cmovno
stc
not
inc
xlat
cmpsb
cmp
mov
cmp
mov
xchg
insb
aaa
aad
call
add
int3
push
scas
jg
cmpsl
cmp
outsl
inc
loopne
and
fnstcw
adc
jmp
mov
out
adc
cmp
cwtl
push
sub
xchg
or
jae
add
fisttps
dec
stc
inc
xor
imul
mov
hlt
cmp
sub
and
out
imul
scas
inc
and
adc
adc
sub
mov
lods
sub
inc
lods
sub
inc
test
jae
insl
jbe
xchg
mov
add
sub
clc
xor
stos
jae
pop
sbb
mov
cld
mov
ljmp
add
lcall
adc
orl
imul
xor
xor
inc
pop
ss
cs
mov
add
mov
pop
fildll
into
cmpsb
stos
push
cltd
fcmove
mov
xor
cmp
mov
add
push
sbb
hlt
popf
add
stc
jb
sub
imul
bound
addr16
mov
fdivl
adc
cmpsb
push
outsl
or
mov
or
xor
leave
loope
jecxz
test
in
sub
pop
mov
add
fwait
jae
jno
enter
jno
mov
push
and
xlat
xchg
jno
daa
insb
in
push
xor
aaa
movsl
js
adc
inc
cmp
fists
test
pop
ret
mov
xchg
pop
call
inc
in
mov
pushf
notl
scas
xchg
adc
rolb
mov
imul
divl
scas
nop
insb
mov
mov
add
pop
mov
les
mov
push
dec
out
ret
sahf
stc
cmp
test
aaa
inc
push
in
mov
test
testl
fmull
add
sub
and
fdivrs
push
pushf
mov
arpl
mov
jecxz
or
scas
mov
cli
ret
stos
addps
jno
fdivs
dec
out
loopne
jmp
pop
lret
dec
loopne
dec
adc
jnp
add
xor
mov
bound
mov
and
imul
xchg
adc
sar
imulb
lods
jnp
xor
inc
cltd
fcomp
iret
fnstsw
imul
or
xorb
lcall
cwtl
test
jle
loop
pop
ud0
lcall
push
data16
dec
stc
fwait
push
cmc
loope
fisubrs
bsr
aas
test
cs
gs
outsl
cmc
dec
aaa
xchg
xchg
jbe
cmp
push
je
pop
lret
ret
ds
sbb
sti
cmpsb
push
adc
lahf
fwait
jmp
mov
cmc
dec
lcall
vpsrad
lods
test
pop
ljmp
mov
lock
dec
push
enter
mov
sbb
push
imul
sub
and
push
adc
out
jns
jo
adc
xchg
ret
jno
fldt
ret
daa
loop
les
and
fistpll
lret
lahf
cmpsl
fdiv
jmp
pushf
inc
xchg
xor
dec
add
mov
mov
or
mov
mov
movsl
stos
out
sub
test
mov
jb
xor
arpl
or
pusha
enter
mov
xor
push
sbb
test
dec
and
shlb
divb
stc
mull
dec
push
inc
mov
mov
iret
dec
arpl
adc
pop
movsl
std
cld
adc
xor
lock
cwtl
fwait
xchg
sub
lahf
mov
push
repnz
nop
faddl
inc
outsb
pusha
int3
movsl
mov
lea
repz
rorb
addr16
or
cmp
push
mov
loope
popf
ja
in
cltd
push
rcl
je
aaa
jp
rorb
pop
aas
into
mov
outsl
out
adc
jmp
inc
sbb
incb
inc
dec
call
pusha
loopne
das
int3
mov
mov
push
dec
mov
ret
xchg
filds
push
ret
mov
lret
ret
mov
aad
adc
dec
adc
mov
mov
mov
and
xor
dec
push
out
sbb
mov
sub
int3
push
mul
jae
daa
jp
sub
xor
push
mov
push
lcall
lcall
arpl
inc
out
data16
pop
jnp
push
movsb
not
and
cmp
sbb
xchg
addr16
cli
pop
dec
mov
xchg
xchg
mov
adc
stc
aad
and
ja
sarb
and
shll
jle
pusha
cmc
pusha
or
cmp
and
mov
xchg
rol
int3
stos
mov
push
leave
sbb
jle
test
mov
push
sahf
mov
jge
adc
dec
stos
movb
aad
jmp
mov
lret
jp
sahf
shll
rclb
add
stos
cli
std
add
jns
or
xchg
rcll
nop
cmp
or
lods
iret
fsubrp
jnp
mov
pop
cmp
jle
pop
adc
pusha
repz
inc
jae
mov
scas
and
clc
xchg
jns
sub
pusha
repnz
xchg
xchg
idiv
aam
jl
inc
and
leave
les
cmp
xchg
jmp
or
fwait
pop
inc
movsl
adc
insl
push
xchg
adc
cmp
int3
and
mov
aaa
iret
mov
and
movsb
mov
insb
fimuls
pop
jl
insb
out
inc
lret
inc
mov
inc
xor
pop
bound
jge
loope
stos
in
adc
pop
jp
dec
int3
or
jmp
movsl
and
les
clc
test
push
adc
xlat
insl
push
dec
dec
pushf
add
fcom
cwtl
notb
dec
jge
lods
lret
shrl
lock
push
int
or
and
sbb
sub
popf
lock
mov
gs
xchg
rorl
addr16
pop
sbb
sarb
adc
in
mov
outsb
aas
ja
cmpsb
cmc
mov
cltd
push
insl
dec
or
adc
lods
std
out
add
mov
and
dec
cmc
imul
rclb
aaa
xchg
movsl
out
pop
test
sbb
outsb
call
adc
xchg
aas
mov
inc
ds
mov
out
sub
repz
xorb
repnz
ja
add
pop
notl
pop
xor
imul
andl
sub
repz
ja
and
int
mov
loopne
popf
movsb
orb
push
jle
and
arpl
mull
cli
lcall
out
in
out
sahf
inc
add
mov
sbb
ret
jmp
pop
mov
xor
ret
mov
ds
sub
sub
jecxz
adc
mov
pop
ljmp
stos
mov
fstl
push
dec
or
shlb
xor
mov
movsb
mov
repnz
cli
xchg
dec
outsl
imul
jbe
push
mov
mov
adc
aad
mov
pop
sbbl
xchg
sbb
inc
adc
cmp
inc
mov
inc
lods
fwait
cmp
inc
and
xchg
gs
es
jmp
jnp
pop
sub
cmp
out
push
push
bound
sub
in
jge
push
inc
out
out
lock
mov
sub
inc
adc
mov
dec
movsl
mov
dec
ret
out
rcrl
rol
xchg
ret
mov
cli
xchg
cmp
pop
movsl
jecxz
test
mov
dec
inc
shlb
imul
shlb
lahf
push
dec
xchg
clc
inc
loope
push
lds
mov
dec
pop
push
dec
fldl
adc
push
adc
imul
cltd
sarb
sub
xor
sbb
jnp
cs
aaa
andl
sub
inc
ljmp
adc
pushf
mov
sub
or
jp
cmp
xor
mov
stos
popa
add
pusha
or
sbb
into
mov
sub
fistps
fimuls
cmp
cwtl
test
sbb
lcall
or
cli
jp
fidivs
jbe
gs
out
aas
xchg
mov
test
pop
sub
mov
fdivrl
fldcw
mov
xchg
jae
int3
adc
dec
hlt
push
outsl
mov
push
stos
jle
xor
cmp
pop
sar
dec
xor
test
clc
pop
aam
inc
pop
jne
mov
cld
icebp
push
cld
mov
in
int3
fisttpll
mov
icebp
aas
mov
int
popf
mov
or
adcl
ljmp
adc
push
cmp
int3
cmp
enter
cmp
rolb
mov
cmp
push
inc
repz
mov
fistpll
lods
xchg
fisttps
aas
imulb
mov
rorl
pop
xchg
inc
aam
push
inc
shl
in
in
dec
pop
lret
adc
mov
lea
cmp
push
or
ja
cmp
adcl
mov
mov
mov
pop
sahf
xor
inc
aam
insb
pop
pop
sub
notl
cs
or
test
mov
daa
sar
pop
push
outsl
pavgw
adc
cmp
mov
or
adc
add
jecxz
inc
fstps
push
loope
loope
in
and
mov
imul
mov
mov
dec
sbb
and
imul
fiadds
dec
pop
xor
cmp
jb
mov
fwait
inc
push
mulb
lock
fimull
cmp
cmpsb
insl
pop
pop
scas
lock
sub
out
out
jbe
fidivs
adc
xchg
je
mov
fwait
mov
data16
xchg
jg
aam
clc
add
aam
jb
inc
les
aas
xchg
in
push
xor
sub
jns
clc
xchg
sarb
bound
add
or
pop
adc
aam
push
arpl
or
loopne
enter
cmp
cli
sub
int
arpl
cmp
or
push
jne
jg
std
mov
and
call
sbb
out
stc
add
mov
xor
xchg
add
pop
in
sbb
jecxz
push
jae
add
out
xor
addr16
popa
dec
dec
lods
icebp
xor
pusha
jo
mov
nop
sbb
mull
mov
adc
sbb
xchg
push
mov
das
pop
sub
es
xchg
mov
mov
sbb
out
mov
fs
js
das
test
dec
jl
jo
jp
and
and
sahf
sub
je
mov
xchg
add
mov
mov
mov
sahf
pop
xor
add
jl
mov
cltd
adc
cmpsb
in
repnz
add
xor
jno
mov
sub
lahf
ds
fdivrl
into
dec
call
or
push
mov
arpl
addb
jb
jnp
test
dec
and
inc
xor
arpl
mov
fisttps
and
imul
out
push
mov
push
addb
jae
in
and
mov
or
bound
or
dec
iret
push
jo
xchg
mov
mov
push
adc
int
mov
cmpl
sub
sti
pop
pop
arpl
jnp
pop
or
scas
pop
shl
ss
leave
repnz
sub
dec
sub
fiaddl
jns
push
popf
fistl
push
pop
out
imul
and
call
decl
and
and
mov
mov
stc
sub
lea
insl
push
in
dec
sbb
lods
shl
and
cmp
lock
jp
jecxz
rorb
fdivs
test
aad
pop
in
ds
mov
lret
icebp
ret
scas
popf
rcrl
das
pop
push
das
jge
fsts
cmp
xchg
leave
test
jmp
cmc
add
sub
inc
add
mov
xor
dec
shl
push
call
fadd
data16
lds
sbb
call
pop
xor
fsub
inc
sbb
mov
xchg
in
lea
and
mov
fstps
test
aad
pop
clc
in
jae
sbb
jecxz
lcall
jne
add
pusha
xlat
push
cmpsb
hlt
mov
cmp
or
or
jg
lret
push
fwait
xlat
arpl
movsl
push
mov
mov
dec
sbb
fcoml
test
in
fidivl
jns
out
jno
in
and
xchg
mov
push
adc
push
xchg
mov
lods
in
mov
add
outsb
adc
test
pop
pushf
mov
cmc
jne
adc
cmp
rolb
jb
xchg
mov
fisubs
add
lock
xlat
mov
xor
test
fwait
pop
lods
add
xchg
movb
jp
or
sbbl
daa
clc
jecxz
cmpsb
inc
bound
sub
lret
xchg
ljmp
add
out
fldl
xchg
push
sub
stos
dec
inc
mov
mov
stos
adc
push
push
sbb
sbb
push
xor
adc
push
aam
outsl
xchg
adc
add
adc
jle
mov
jecxz
inc
test
fsubl
mov
orl
jge
push
enter
pop
inc
sarb
outsb
fisubrs
js
pushf
add
pop
std
sbb
push
jge
les
jo
pop
add
popa
les
jl
jno
arpl
mov
sarl
in
dec
sahf
enter
mov
push
in
lret
clc
xor
std
test
scas
pushf
inc
out
cs
fld
rcrl
pop
out
jmp
aam
xor
jmp
rcl
imul
lgdtl
loopne
icebp
das
addr16
fimuls
lcall
dec
sbb
inc
dec
fisttps
xlat
or
pop
mov
ljmp
addr16
xchg
mov
das
sti
lahf
lds
setno
pop
and
punpcklbw
jge
dec
add
mov
es
fs
inc
jbe
push
xchg
outsb
fdivr
adc
add
inc
ds
adcl
xor
lret
and
push
pop
fwait
jns
push
xor
jmp
xchg
sub
and
adc
lods
pop
or
pop
mov
rcr
sbb
sbb
nop
cli
pop
icebp
dec
cmp
jl
dec
into
push
aaa
or
xchg
das
inc
int3
jb
out
push
imul
jl
xchg
and
mov
stc
fwait
sub
roll
mov
mov
fs
iret
sar
inc
cmp
jnp
dec
shl
mov
mov
add
push
sub
out
push
out
jg
sub
inc
test
daa
inc
xchg
movsb
pop
insl
xchg
enter
hlt
add
inc
sub
enter
inc
jne
nop
mov
cmpsl
fsubl
pop
movsl
cltd
jmp
lds
aad
inc
inc
data16
mov
arpl
sti
adc
pop
jle
lret
add
dec
adc
or
arpl
aas
nop
test
data16
sub
rcrl
mov
jge
add
aas
dec
add
jmp
fists
mov
and
mov
ja
xlat
add
test
mov
xchg
ds
fdivrs
mov
je
decl
jecxz
add
inc
iret
or
lods
mov
outsb
aas
inc
fiaddl
adc
dec
stc
jno
mov
jg
fsubs
ret
stos
xchg
jbe
push
mov
xchg
xor
fs
add
adc
mov
rcl
inc
inc
mov
xchg
fcomi
or
bnd
adc
push
sub
pop
mov
cmpsb
sti
push
sbb
int
sbb
inc
jbe
insl
jge
pop
sbb
lret
sbb
test
fisttpl
das
xchg
mov
imul
xchg
bound
orl
dec
inc
mov
cmp
inc
adc
inc
stos
stos
fcoms
scas
in
lahf
insb
inc
movsb
ljmp
stos
push
cmpsb
dec
fs
cs
mov
pop
and
ja
sahf
out
jge
push
push
sub
push
icebp
fsubp
popa
push
and
lret
pop
lods
inc
mov
push
or
aaa
sti
loopne
sti
dec
sub
jle
cwtl
dec
paddsb
in
aam
adc
mov
fdivrl
adcb
push
pop
xchg
push
inc
jo
int3
xlat
scas
xchg
xlat
orb
scas
gs
aaa
sbb
xor
cmp
loopne
fwait
testb
jp
pop
pop
sbb
in
lods
adcl
xchg
push
cmp
lahf
fucomip
lcall
jmp
clc
pop
out
test
mov
call
mov
sti
rol
hlt
mov
push
dec
inc
outsb
imul
andl
ss
cmc
ja
in
aas
lret
bound
sbb
out
gs
rcrl
mov
and
mov
push
xchg
leave
and
inc
or
mov
xor
rdtsc
movsb
ret
jecxz
mov
lock
in
jbe
xorl
push
jb
adcl
push
sahf
mov
cmp
dec
mov
ljmp
mov
data16
mov
jno
daa
jge
and
inc
repnz
push
mov
divl
jae
or
pusha
outsl
ret
push
fsub
imull
shrl
mov
stc
push
mov
pop
push
mov
data16
xor
lahf
aaa
in
je
fcomps
loopne
pop
lods
fidivrl
scas
clc
imul
mov
mov
xchg
idivb
mov
dec
daa
loop
xor
xchg
mov
cs
push
xchg
mov
adc
push
jge
in
decb
pop
into
pop
xor
add
xor
outsl
das
inc
addb
cltd
loope
xlat
push
movsl
cmp
add
fwait
or
cmp
jno
lock
jl
sahf
jb
jmp
les
add
in
dec
fmull
sbb
pop
push
inc
in
fcomi
pop
dec
cmc
pop
cmp
sbb
imul
fists
outsb
push
xor
xor
xchg
rcrb
out
add
mov
stc
sub
cli
add
mov
sarl
jecxz
push
mov
jo
in
or
jb
lods
jge
movsb
dec
movsb
lahf
add
gs
or
std
add
out
cli
mov
outsl
fmul
lds
in
xor
push
xor
jle
xchg
nop
test
pop
ret
or
jne
cmp
int
xchg
mov
inc
xor
fimull
jnp
add
adc
fiadds
arpl
push
ljmp
test
mov
add
push
push
std
sub
mov
ror
adc
lock
ljmp
push
add
sub
dec
rclb
aad
sbb
sub
dec
jecxz
adc
outsl
out
enter
dec
ret
sbb
lds
daa
fdivl
ret
enter
imul
shll
mov
leave
mov
idiv
loope
xchg
stos
js
sbbb
sub
jmp
fistl
sbb
pop
mov
mov
sub
idivl
decb
fs
or
lea
mov
or
lea
and
and
in
daa
imul
loopne
mov
mov
fwait
xchg
sbb
pushf
pop
imul
stc
lret
nop
dec
push
cs
movsb
sbb
ljmp
xor
add
incl
adc
outsb
xchg
dec
cld
out
add
test
xor
flds
xor
jge
and
daa
sbb
mov
add
mov
dec
test
stos
mov
sbb
jp
pushf
add
fsubrp
ja
test
pop
mov
in
xchg
lret
sti
xor
mov
iret
pop
xor
xchg
js
sti
xchg
cmp
ds
jl
loop
hlt
push
lret
insb
xor
mov
loopne
mov
push
insl
xchg
dec
xchg
or
hlt
adc
pop
xchg
mov
es
sbb
loope
pop
test
jns
ja
pop
xchg
push
js
shll
inc
clc
dec
xor
test
jno
sub
outsl
addl
push
stc
mov
add
pop
fisttpll
and
pop
pop
das
gs
mov
cmp
fbld
mov
lods
mov
shrl
xchg
fdivl
enter
cli
adc
cmp
stos
mov
mov
sti
sti
mov
or
adc
icebp
and
cmp
push
out
scas
ds
xchg
jl
xchg
jg
roll
cmp
enter
fbld
adc
in
test
jmp
fidivrl
jge
push
lahf
mov
pop
mov
imul
ds
jmp
adc
push
enter
inc
pop
sub
faddp
cmpsl
jge
test
fidivrs
nopl
out
lcall
pop
push
in
stc
mov
stc
outsl
enter
std
jmp
mov
aas
and
lods
xchg
sub
or
es
out
and
scas
nop
sbb
insl
idivl
push
mov
push
inc
out
leave
dec
mov
jge
push
pop
xchg
cmp
js
inc
jbe
xchg
pshufw
and
rcr
add
stos
fisubrs
fsubs
scas
inc
sti
mov
imul
fsubl
xchg
add
inc
leave
fs
clc
mov
adc
mov
and
cmpsl
cmp
int3
sbb
mov
leave
mov
push
fucomip
jg
lcall
nop
or
popa
inc
cwtl
cli
and
pop
js
flds
pop
sti
aam
fbld
pop
mov
insb
mov
out
adc
into
mov
push
test
int
ljmp
dec
push
daa
dec
push
jno
ja
aas
xlat
mov
aad
lret
xor
mov
loopne
mov
stc
int3
stos
scas
xchg
insb
mov
nop
inc
cmp
cmp
ljmp
das
mov
cmp
xlat
sti
cld
xchg
adc
sub
or
push
jns
cltd
cmp
fistps
mov
or
mov
and
sar
lea
sub
push
lret
xor
shlb
xchg
shrl
pop
lcall
dec
pop
pop
dec
mov
sbb
lds
scas
lahf
sbb
push
hlt
dec
sahf
cmp
shrd
push
push
xchg
mov
es
in
call
cmpsl
inc
loope
je
lods
fisubl
lock
xchg
ss
mov
mov
sbb
adcb
lods
or
push
push
inc
sub
movsb
fistpl
nop
sbb
push
imul
lret
jl
inc
or
push
lock
imull
mov
lods
loop
shrl
mov
jae
pop
das
adc
ret
out
daa
jmp
push
xchg
inc
xchg
enter
fisttps
mov
pop
mov
adc
mov
push
xor
mov
cltd
rorb
ret
icebp
jg
xor
insb
inc
and
mov
mov
outsb
scas
pop
es
and
xorb
fs
sbb
push
or
sbb
test
mov
ljmp
push
jl
mov
pop
jmp
cli
xchg
mov
pop
push
mov
in
nop
mov
xchg
std
imul
mov
mov
and
nop
cs
in
sbb
add
insb
xor
xor
xor
adcb
pushf
scas
jmp
shll
lcall
test
fs
outsb
ficompl
pop
movsb
jnp
imul
insb
mov
mov
sub
nop
push
cmpsb
test
and
inc
nop
mov
sbb
add
insb
ja
outsb
jle
xchg
jp
mov
les
aad
cltd
mov
jmp
imul
inc
ret
xor
aaa
out
imul
dec
push
xor
sbb
jo
jmp
mov
pusha
xchg
loop
mov
addr16
ja
cmp
adc
out
fidivl
cmp
clc
jp
pop
mov
js
rcrb
adc
adcl
adc
ds
nop
cmp
lcall
mov
call
aaa
lods
repnz
cmp
out
idivl
mov
cs
jb
scas
pop
cs
xchg
ret
out
pop
mov
jbe
dec
jmp
xor
xchg
setne
notb
cwtl
rorl
sbb
or
lret
int3
cmp
push
in
scas
jae
and
push
xchg
xchg
jns
sub
je
lea
pop
inc
push
sahf
jne
adc
cs
mov
or
or
popa
cs
icebp
in
xchg
push
ja
repz
jb
popf
bound
bound
stc
repnz
insb
xchg
in
jle
and
in
loopne
sub
cmpsl
jp
daa
xchg
jb
idivb
jb
mov
lods
popf
movsl
test
cmc
test
into
cmovp
xchg
xor
and
clc
and
sahf
std
pop
js
test
jne
and
adc
enter
cmc
iret
bound
in
insb
mov
loop
mov
add
mov
xor
lahf
pop
lods
jae
mov
fcoml
jae
cmp
stos
cmp
push
stc
add
sub
icebp
push
loope
movsl
int
jp
and
movsl
out
enter
cmp
xchg
mov
mov
adc
test
sub
inc
inc
cmpsl
mov
cli
push
xor
jmp
insb
and
jo
in
dec
pop
test
cmpl
xchg
out
jo
mov
xor
aas
jp
jne
pop
sbb
ret
rcll
lea
ret
lds
lea
or
into
jg
adc
sbb
clc
cmpsb
jp
or
aaa
mov
sti
addr16
inc
xlat
lds
dec
cmp
jmp
dec
loopne,pt
push
ss
cmpsl
fisttps
jnp
enter
cmc
arpl
std
jbe
add
test
insl
sarb
ss
call
pushw
mov
inc
clc
add
mov
push
jp
jo
mov
addl
or
adcl
lret
or
xor
adc
cmc
repnz
xor
sahf
jnp
adc
inc
cli
xchg
repz
mull
jo
fdivrl
leave
adc
sbb
sub
sbb
cmp
cmc
mov
idivb
jp
xchg
flds
ljmp
mov
nop
lods
idivl
out
rorb
xor
gs
movsl
lea
insl
xor
jo
mov
ja
push
mov
pop
xor
mov
imul
inc
nop
movsb
shll
mov
add
iret
dec
les
sarl
pop
sub
stc
lret
mov
push
add
das
xlat
out
cltd
scas
jecxz
dec
pusha
data16
mov
adc
stc
fs
movlps
mov
cmpsl
mov
or
dec
dec
or
lock
inc
shrl
lds
push
in
mov
push
aas
pop
cmp
loope
mov
pop
xchg
pop
jge
cli
in
rcr
fsubrl
push
sahf
add
rorl
jmp
or
mov
mov
jno
jno
pop
sbb
out
push
or
int3
loop
mov
mov
vandnps
cmp
inc
inc
sub
movsb
jae
sbbb
and
xchg
jg
dec
adc
cmpsb
js
add
fsubrl
pop
popf
dec
mov
fbld
xlat
repz
xor
push
mov
imul
jbe
or
mov
dec
js
mov
or
pop
adc
pusha
mov
sbb
out
mov
loopne
imul
xchg
xor
inc
pop
adc
shll
pop
ficompl
jae
pop
test
jg
pusha
cmpsl
cltd
mov
in
fidivs
ret
cmp
imul
add
movsb
jne
mov
pop
inc
xchg
rol
dec
pop
push
in
cmp
sub
data16
insb
das
or
pop
sub
inc
pop
mov
sbb
pop
shl
xor
sub
pop
xchg
mov
in
and
cmpsb
cld
mov
imul
icebp
out
add
jb
rcll
mov
jno
lea
pop
cltd
movsl
jmp
insb
add
dec
sub
pop
ja
lods
daa
roll
test
sub
outsl
push
test
adc
fisttps
lret
push
iret
mov
jnp
or
add
testb
mov
adcl
sbb
mov
jno
mov
pop
roll
loopne
mov
pop
in
push
int3
pop
adc
sub
fstl
ja
or
adc
or
aam
mov
lret
fstl
loopne
xchg
pop
mov
sbb
sbb
fstps
dec
mov
aas
nop
sbb
or
xor
sub
jge
inc
test
inc
mov
pop
divb
mov
shll
add
xchg
andb
push
push
mov
sar
lods
lods
sbb
mov
iret
jmp
jge
fwait
roll
cmovs
sbb
xor
cmp
stc
pop
sbb
popf
imul
mov
fnsave
xchg
mov
or
lea
mov
or
movsl
int3
mov
into
xor
xlat
or
sbb
mov
insb
xchg
pop
fildll
pop
mov
es
push
cmp
xchg
fdivs
addr16
push
mov
in
sub
int3
insb
push
push
or
sbb
dec
jecxz
fwait
jo
mov
mov
rcl
adc
xchg
hlt
dec
out
dec
xchg
aaa
ficoms
push
xchg
pop
jnp
test
sub
mov
mov
shll
mov
in
mov
jns
xchg
add
lds
inc
sar
daa
inc
stos
mov
lcall
lods
test
arpl
add
and
in
cld
rcr
sbbl
outsb
int
xchg
mov
dec
test
iret
pop
std
mov
mov
or
mov
addr16
std
lahf
dec
into
cli
add
rcrb
inc
sahf
push
nop
out
mov
cmp
enter
inc
sti
fldenv
ss
jg
dec
pop
test
ds
cmp
into
mov
sbbb
pop
mov
mov
adc
cli
pusha
out
sub
pop
pop
and
jbe
mov
not
mov
nop
cli
mov
int
push
jl
stos
push
ja
cmp
leave
xchg
inc
jl
and
pop
and
aas
aas
testb
loopne
xchg
xchg
ljmp
and
mov
incl
cmpsl
pop
das
pop
sbb
push
cmp
and
and
xchg
imul
add
sub
outsl
fsubl
jge
sbb
ljmp
lds
push
mov
mov
iret
mov
jno
int3
mov
push
jle
adc
add
add
pop
pop
jle
xchg
sub
mov
rcll
jns
movb
xchg
push
dec
cmp
in
shll
mov
ss
loope
mov
mov
adc
movsb
mov
sbb
mov
je
roll
adc
pusha
pusha
mov
cli
mov
push
mov
sub
scas
cmpl
imul
pop
pop
jecxz
popl
sub
xchg
pop
pop
xorl
add
mov
sets
lcall
mov
lds
movl
push
adc
xchg
cmp
insb
cmp
in
mov
and
sub
xchg
cld
movsl
adc
imul
fistps
xchg
sbbl
inc
jb
sarb
jns
sub
lcall
pusha
sub
fwait
and
add
xchg
pop
xorb
xchg
mov
mov
add
inc
movsb
mov
cs
adc
xchg
or
mov
out
xor
dec
out
xchg
jnp
inc
jg
pop
fmuls
mov
sbb
fimuls
pop
subb
pushf
ret
lcall
xchg
push
sub
shl
jae
push
dec
shlb
jl
xor
inc
adc
dec
outsl
mov
fcoml
sbb
dec
ja
out
jne
nop
movsl
or
mov
pop
ds
fwait
out
or
pop
aam
dec
mov
je
cmp
mov
insl
outsl
subb
inc
int
or
jge
out
add
adc
daa
jp
xchg
or
push
adc
mov
loop
lods
jnp
or
adc
test
call
les
xchg
add
jbe
push
mov
lea
outsl
pop
movsb
jp
push
xchg
mov
ret
insl
adc
sub
adc
repz
jmp
mov
jl
xor
and
mov
xchg
xor
cmp
out
ja
imul
clc
and
push
adc
roll
push
es
outsl
cli
testb
in
sbb
sahf
xor
ss
int
sbbl
push
sub
loope
lret
mov
lods
es
outsl
and
push
xor
nop
cmp
movsl
in
mov
mov
jge
xor
mov
iret
test
push
jbe
loopne
adc
push
mov
cltd
ja
loop
mov
lock
jge
add
push
call
and
inc
stos
sti
pusha
call
push
in
sahf
jge
call
mov
push
ss
xchg
and
dec
cmp
mov
jo
fwait
dec
xor
clc
push
negb
std
jbe
cld
cmc
or
shrl
pop
mov
ljmp
add
jo
arpl
or
xor
lret
add
push
lods
movsl
xor
xchg
cmp
aad
fwait
ret
fadd
push
ret
cmc
es
xchg
cmp
in
lea
ret
dec
add
dec
icebp
xchg
mov
push
inc
aam
and
push
ret
mov
enter
jne
adc
jle
rol
xor
rcrb
clc
pop
cs
das
lods
jp
cmp
jno
cmp
xchg
ror
sbb
xor
or
loop
mov
test
outsl
inc
filds
test
nop
or
imulb
cmp
add
outsb
xor
pop
stos
push
insb
and
adc
imul
pop
xchg
push
mov
cmpsl
xor
subl
sbb
lods
pop
fstl
cld
push
ret
lds
ja
mov
outsl
scas
cmp
dec
xchg
ret
push
cmp
mov
mov
shl
mov
mov
and
add
test
insb
es
cmpsl
push
fsqrt
push
inc
clc
adc
xchg
and
gs
ss
pop
mov
pop
shll
jle
aad
stc
outsb
loop
mov
add
jo
pop
jne
je
jecxz
push
dec
cld
ss
sti
aam
daa
into
sahf
or
cmp
jg
pop
mov
popl
jp
inc
rolb
sub
and
mov
sahf
xchg
cld
cmp
inc
adc
push
in
jns
aas
insl
xchg
xor
dec
mov
jae
mov
inc
push
fwait
out
dec
popf
outsb
xor
xor
and
dec
or
add
add
mov
mov
mov
cmp
sarl
pop
xor
push
mov
sub
pusha
sub
add
loope
imul
mov
pushf
sub
fnstenv
xor
lahf
sbb
or
ljmp
int3
push
in
dec
cwtl
pop
or
cmp
clc
mov
and
xor
adc
int
mov
sbb
xchg
fcmovu
dec
movsl
sti
and
cmp
pop
pop
scas
pop
adc
jge
rol
add
jno
out
out
inc
imul
shll
jne
in
shlb
push
inc
scas
jbe
lcall
jne
stc
add
cmpsb
fadds
test
fistl
outsl
popf
sub
sub
mov
lds
mov
jnp
lret
push
out
lds
test
insl
push
es
cmp
es
push
xchg
mov
enter
cmc
lock
in
push
ss
add
pop
test
and
enter
pop
shll
inc
out
inc
call
jecxz
jb
dec
cmpsb
hlt
daa
and
imul
nop
or
loopne
add
hlt
cmp
enter
filds
and
int3
scas
loope
dec
push
or
rol
adc
cmp
popa
sub
incl
mov
sub
iret
add
loop
popf
scas
or
jg
ffree
sub
lds
xor
roll
in
mov
ljmp
std
sbb
hlt
sub
or
pop
pusha
adc
jl
inc
lods
fldt
xchg
push
cmp
aas
icebp
dec
shlb
mov
jp
pusha
sbbb
adc
cli
lahf
mov
and
mov
dec
mov
mov
fwait
cs
jle
jo
pop
inc
test
sub
leave
rcrl
push
das
mov
push
dec
jecxz
je
jbe
jmp
lret
enter
mov
inc
pop
stos
mov
lock
aam
xchg
test
jbe
test
xchg
mov
popf
movsb
aam
xchg
orb
repnz
xor
hlt
jmp
xchg
fisubrl
int3
mov
mov
jne
sbb
and
mov
fcmovu
or
out
scas
js
loop
cmpsb
and
pop
xchg
mov
and
cmpsb
xchg
outsb
mov
cmp
jnp
adc
push
aad
xchg
ficoms
push
jp
and
nop
insl
inc
cli
rep
fs
add
sbb
mov
out
xchg
jne
inc
insb
mov
dec
mov
mov
fucomp
inc
push
mov
fwait
pop
mov
stos
aaa
into
loope
or
cmp
in
xchg
shlb
cltd
jge
int
scas
rorb
int
out
jno
lock
sti
cld
and
nop
jo
shrb
mov
int
orb
pop
iret
mov
cmpsb
mov
add
dec
jecxz
popf
cmp
lret
jno
int
dec
dec
jl
int3
push
inc
jecxz
mov
mov
push
iret
mov
inc
lock
xchg
aas
test
iret
movsl
add
pushf
data16
jmp
or
into
movsb
lods
push
mov
dec
or
sub
loopne
jbe
dec
sbb
rorb
lea
out
out
mov
dec
dec
icebp
mov
and
xor
mov
dec
xchg
or
out
lock
inc
lods
sub
sbb
movl
mov
xor
or
mov
xchg
test
ss
ja
fstpl
inc
cmp
push
dec
mov
fs
sti
repz
xor
mov
fwait
adc
stos
scas
cmp
dec
inc
add
inc
adcl
aad
aad
fisttpll
cltd
sarb
add
pop
jnp
xchg
add
nop
mov
pop
inc
sub
loopne
lcall
cmpsb
stos
jg
jge
fidivl
shlb
nop
xor
mov
pop
outsb
sub
cwtl
add
shl
xchg
jecxz
stos
mov
fcoml
or
xor
scas
movsl
sbb
pop
movb
loop
rorb
mov
dec
mov
out
ljmp
test
inc
fmuls
sub
and
or
fildll
push
dec
icebp
std
push
rorb
xchg
jle
pop
sbb
add
ljmp
sahf
int3
lcall
sub
adc
sbb
pop
imul
int3
dec
test
or
testl
sbb
daa
test
inc
dec
fwait
std
mov
cli
xchg
xchg
push
inc
cmp
mov
ss
pop
addr16
movsl
jne
adc
jns
mov
sub
push
jmp
pop
dec
ljmp
inc
fildll
mov
ss
fcomps
test
add
jno
mov
fcmovb
in
xor
std
adc
adc
sub
inc
lds
out
push
xchg
stos
sbb
inc
das
add
test
xor
pop
pop
push
gs
push
sbb
outsl
imul
add
jl
mov
push
jno
pushf
pop
mov
sub
retw
stos
mov
int3
std
cmp
std
push
add
mov
jns
dec
xor
cld
outsl
or
jo
rclb
mov
je
sub
negb
jne
jno
insl
fdivs
lret
int3
mov
pop
pop
hlt
cmp
mov
mulb
dec
adc
adc
dec
in
jno
pop
sub
and
jbe
push
xor
sbb
ds
inc
sub
loope
pop
push
cmp
out
mov
es
pop
test
cmp
pop
add
cs
sbb
jae
inc
mov
inc
cmp
push
xchg
lds
mov
add
push
sub
jno
dec
movsl
and
sbb
or
add
faddl
mov
sbb
push
loop
sarb
fmulp
out
cmp
jmp
insl
dec
aaa
fnstcw
sbb
dec
mov
fsubl
sbb
test
stos
insb
add
pop
in
enter
xchg
rclb
ljmp
out
xor
aas
xchg
xor
loopne
std
jno
les
es
mov
cmpsl
leave
insl
mov
out
sub
cltd
mov
jo
jno
mov
dec
lock
jne
ds
inc
lods
add
cmp
and
add
pushf
dec
and
dec
sub
push
xor
mov
mov
dec
insl
jns
leave
xchg
xor
adc
lods
rorb
inc
sbb
fistl
fwait
popf
clc
enter
ret
aam
cld
jge
mov
in
data16
movsb
pop
loop
inc
sub
jae
add
dec
and
add
outsb
in
aaa
imul
dec
xchg
sub
enter
hlt
push
repnz
ds
sbb
xchg
sub
cld
cmp
mov
pop
add
sbb
adc
ret
insb
popa
pop
rcl
cmpsl
and
dec
pop
dec
aaa
cmp
loopne
es
mov
dec
mov
mov
inc
adc
push
jg
cmp
dec
mov
jno
mov
lods
in
lret
gs
xchg
fnsave
test
pop
daa
mov
xor
rcl
jmp
push
or
add
pop
orb
sbb
pop
add
iret
mov
mov
add
push
lahf
sub
roll
outsb
cmp
sahf
cmpl
iret
pop
pop
adc
loop
mov
in
in
aas
jo
fbstp
dec
sbb
adc
roll
jbe
shl
hlt
sarl
mov
sbb
sub
ret
cmp
imul
or
je
xchg
js
je
pushf
sbb
in
pop
jmp
and
je
repz
jle
sbb
pop
iret
and
inc
outsl
sbb
cmpsl
inc
mov
push
scas
mov
pop
imul
mov
dec
in
mov
cmpl
nop
ds
and
insb
lods
inc
inc
mov
pop
addr16
roll
cmpsb
test
add
ljmp
ret
js
out
jl
addr16
insb
sbb
in
jl
rcl
cmpl
in
dec
push
outsb
add
jp
fisubs
icebp
pop
out
ljmp
in
dec
xchg
adc
lret
push
incb
and
sub
movsb
test
lcall
aas
pop
leave
push
cmp
jno
pop
jae
into
cmp
pushf
mov
cmp
in
inc
into
mov
mov
sub
aam
jg
xchg
outsb
cmpsb
xchg
out
pop
or
adcb
xor
loop
mov
inc
popf
jne
xor
jb
add
fstps
arpl
ds
pop
xchg
push
dec
sahf
jno
xor
fs
imul
ljmp
and
mov
mov
adc
mov
cmpsb
cmp
xor
lock
push
test
and
push
jno
je
mov
ljmp
add
cmp
add
pop
sbb
pop
icebp
jae
cmp
iret
xchg
push
in
data16
adc
sbb
cmpsb
cld
or
jle
push
cli
ficompl
int
mov
xlat
shlb
sbb
fwait
loop
stos
mov
das
lea
cli
jp
inc
mov
adc
inc
cmp
add
aas
adc
xchg
out
ficoms
add
pushf
scas
mov
mov
push
dec
push
in
push
adc
sahf
lods
and
ret
mov
cmp
and
fimull
push
push
pop
push
push
or
push
lahf
shll
xchg
pop
pop
mov
ds
loop
inc
lret
push
sub
mov
or
xor
xor
adc
movsl
xchg
mov
inc
aas
mov
mov
or
pop
mov
jnp
lea
rcrb
leave
stos
aam
add
out
aam
pop
xchg
xor
mov
adc
js
or
je
fdivr
or
mov
cld
fcomps
xor
fs
inc
mov
mov
xor
cltd
xchg
lods
adc
sbb
jae
mov
call
adc
enter
sarl
pop
push
fstpt
dec
ret
aad
ljmp
in
add
sbb
bound
pop
push
xlat
movsl
cmp
lds
pop
pop
cmp
sti
sub
dec
shl
inc
repnz
cmp
loopne
outsb
and
imul
aaa
mov
fs
imul
inc
mov
fisttps
add
jb
xchg
scas
inc
mov
test
xor
dec
insl
ret
push
into
mov
push
push
mov
pushf
int3
fildl
xchg
xor
cli
xchg
dec
cmp
clc
lock
push
loop
dec
adc
pushf
int3
or
adc
pop
pop
jno
jp
repz
jnp
imulb
xchg
lock
das
loope
in
fcmovnbe
or
mov
cld
adc
push
xlat
add
sbb
pop
sti
xchg
stos
lret
push
addr16
mov
or
inc
movsl
jg
popa
sbb
sbb
sub
insl
mov
gs
push
in
dec
inc
pop
movsb
ljmp
mov
fisttps
fisubrl
pop
outsb
xchg
and
jno
out
adc
das
ret
jge
loop
sub
pop
mov
xchg
sub
cwtl
repz
sbb
scas
cli
mov
clc
cs
popw
or
aad
inc
adc
mov
xor
flds
lods
or
adc
popf
mov
insl
pop
addr16
pop
or
repnz
js
or
dec
pop
les
aas
push
jle
jg
cs
mov
push
xor
stc
or
daa
jl
bound
xchg
hlt
fldcw
mov
add
jp
add
shll
rcll
pop
mov
ljmp
outsb
and
in
jle
or
jne
or
andb
pop
push
and
dec
jne
insl
cltd
and
rcrb
adc
fisubs
mov
pop
inc
xor
adc
ficompl
adcb
ja
movsb
popf
add
iret
dec
sub
xchg
add
add
aam
outsb
repz
cmpsb
daa
pop
cmpsl
fidivrs
xor
dec
push
or
out
mov
sbb
jl
aam
popa
bound
pop
insl
add
add
mov
es
cltd
aaa
push
jno
push
push
out
jle
loop
mov
add
addr16
fs
push
cmp
insb
arpl
maxps
movsl
or
movsl
jb
fnsave
mov
xor
in
sbb
adc
das
dec
inc
mov
ret
mov
mov
data16
jl
pop
repnz
jne
xchg
mov
lods
push
fcoms
adc
sub
sbb
fdivrs
add
nop
arpl
xchg
pop
cmp
add
dec
fstpt
mov
out
mov
pop
mov
repnz
in
into
add
lcall
pusha
push
xor
in
or
imul
cmp
int3
dec
jo
faddl
jns
scas
push
dec
pop
cmp
sti
enter
stos
push
addr16
mov
inc
out
mov
rclb
repz
jbe
mov
ja
xlat
and
lock
xchg
push
outsb
cmp
outsl
mov
xchg
loopne
in
sbbl
mulb
inc
sub
dec
je
testb
ljmp
leave
pop
and
je
dec
lods
or
or
xchg
imul
cld
pop
and
data16
fstpl
mov
lcall
jo
rcll
in
mov
cmp
mov
cmp
or
ret
dec
cmc
lahf
inc
lcall
push
movsl
xor
push
repnz
jns
jo
add
add
jmp
mov
or
sub
xchg
adc
mov
add
int3
sahf
aaa
inc
test
push
fidivrs
inc
data16
pop
mov
movsl
mov
or
jmp
mov
sub
cltd
mov
in
js
xor
test
data16
or
mov
sub
sub
inc
and
fisttpl
jbe
push
xchg
leave
fmuls
pusha
pop
out
lock
cmc
call
sti
shlw
test
inc
jae
jb
xlat
jecxz
cmpsb
jle
xor
adcl
test
aas
in
loopne
sbb
or
adc
sbb
lret
popa
sbb
sub
rolb
inc
add
push
push
dec
repnz
dec
cmpsb
insl
mov
mov
inc
fcmovu
jns
or
ret
and
out
lret
jbe
mov
pop
outsl
mov
mov
jmp
hlt
fsts
jle
xchg
mov
jno
fsubs
and
mov
add
fsubs
test
pop
xor
out
cmp
pop
and
xor
cmpsb
inc
sbb
lahf
sti
enter
fs
or
and
in
pop
outsl
out
xor
mov
out
enter
scas
mov
ffreep
push
mov
ds
jg
adc
mov
and
push
sub
or
inc
fdivp
rorb
js
loope
adcb
dec
adc
ret
fbld
iret
cli
test
cmp
scas
jge
clc
or
adc
and
cmp
jae
nop
in
in
or
negb
xor
sbb
es
jge
jge
dec
cmp
aas
lds
add
ss
mov
cmc
jne
push
jae
movsb
push
aas
cwtl
dec
pop
xchg
imul
xchg
cmpsb
ja
fstps
cmp
or
sbb
into
outsl
scas
xchg
lock
xchg
testb
fs
or
cmpsb
scas
sub
imull
iret
insl
mov
loop
mov
xchg
jecxz
add
push
mov
lods
add
mov
mov
repnz
idivl
mov
in
imulb
repnz
jle
fldln2
cwtl
les
andl
adc
xchg
rcrb
test
stos
cmpsl
dec
cmp
dec
pop
inc
movsl
xchg
fyl2xp1
lods
push
out
lea
cmc
mov
and
mov
scas
pop
nop
lss
push
ja
xor
mov
clc
xchg
divb
jnp
sbb
je
and
shlb
fwait
sub
pop
in
pop
out
jmp
sbb
cltd
mov
push
push
aaa
jne
ret
sub
adc
mov
fcoml
mov
or
jg
mov
ja
lock
mov
bnd
insl
gs
xor
pop
pop
push
inc
out
lds
mov
into
pop
mov
js
sbb
mov
push
arpl
and
add
push
es
adc
cwtl
pop
and
or
xor
cli
lods
jmp
leave
out
test
push
push
push
repz
cld
lahf
mov
mov
in
cltd
add
dec
fadds
movsl
dec
outsb
push
mov
push
inc
popf
mov
dec
rcrb
mov
ljmp
shrl
and
repnz
push
movsl
add
push
and
lcall
sbb
hlt
sbb
cmp
mov
into
in
and
mov
xor
pushf
mov
dec
xchg
testl
sti
lods
and
test
popf
lahf
mov
daa
test
movsb
fsubs
repnz
sbb
cmpsl
int
inc
pop
jbe
push
mov
rolb
shll
loope
jno
movsl
test
cld
mov
scas
call
ljmp
fs
sbb
pushf
pop
aas
xor
cmp
lock
mov
cmp
xchg
ja
lret
lret
shrb
cmp
nop
push
popa
pop
mov
jnp
jb
adc
jnp
or
les
xchg
mov
jge
nop
fiadds
test
jg
fnstenv
imul
in
xor
sbb
hlt
cmpsb
push
cwtl
mov
push
inc
aas
push
clc
mov
push
test
jne
mov
out
xlat
xor
inc
jnp
dec
mov
js
call
xor
test
inc
cmpsb
ja
fsts
jb
arpl
cmp
adc
js
out
pop
cltd
sub
shrb
add
mov
loop
xchg
addr16
xchg
cli
and
push
inc
std
push
test
adc
faddl
add
jno
cmp
and
pop
push
xor
je
add
pop
cmp
xchg
jo
arpl
push
es
js
gs
movsl
addb
mov
jg
dec
mov
in
mov
jbe
dec
xchg
roll
cltd
push
bound
lcall
push
fsubrs
inc
mov
in
cmpb
movsl
pusha
sbb
dec
or
rorl
xor
es
in
pop
andl
test
movsl
sub
mov
lcall
mov
mov
xchg
rorb
lds
popa
xchg
mov
pusha
pushf
fbld
stos
or
dec
pop
sbb
pop
or
ret
mov
aas
aad
call
scas
aam
push
int
stc
xchg
loopne
mov
lret
ja
push
rcrb
adc
leave
jg
ds
xchg
repz
das
cs
lea
sbb
fistpl
cmp
negl
pop
scas
add
xchg
add
in
dec
push
and
cwtl
xor
mov
addr16
mov
mov
mov
jnp
cld
mov
loop
int
std
call
cwtl
int
in
test
or
dec
sahf
dec
dec
push
push
sbb
xor
xor
popa
rcrb
in
pop
cmpsb
cmp
pusha
or
dec
insl
cmp
in
push
cmpb
arpl
dec
lods
cwtl
fistpl
dec
loop
push
fiaddl
out
mov
data16
xchg
daa
into
add
adc
and
mov
inc
ja
mov
add
arpl
rcr
mov
cmpsb
fcomip
cltd
add
cmp
shll
pushf
or
repz
inc
sbb
sbb
repz
popf
pop
sbb
out
ret
dec
lret
rcrw
pop
lods
mov
data16
pop
jne
cmp
ljmp
mov
pop
movl
in
dec
and
call
sub
filds
push
imul
push
pop
bnd
and
out
decb
shrl
lret
cmp
pop
xor
dec
sbb
mov
add
jne
test
pop
jmp
mov
adc
clc
xor
push
jne
pop
data16
xchg
fidivl
mov
aad
push
cmp
rcrl
ret
pop
adc
jge
inc
arpl
or
rorl
incl
loopne
ret
andps
imul
lea
dec
out
add
cmp
sbb
stc
dec
adc
loopne
jecxz
and
je
inc
mov
push
shr
sbbl
jg
loope
adc
adc
les
jl
hlt
out
pop
xor
sub
sarb
cmp
push
insl
bound
sub
xchg
mov
sub
xchg
insb
mov
fidivl
rorl
xor
outsl
es
xor
inc
push
lods
xchg
inc
add
jg
cmp
xchg
mov
jne
xchg
cmp
fbstp
cld
jne
sbbb
cmpsl
stos
test
loope
xchg
andl
mov
test
jae
lock
fdivl
mov
mov
and
imul
orl
sysenter
push
mov
jae
aam
inc
movsl
repnz
lock
jno
inc
inc
rcrl
add
int
pop
add
push
outsl
clc
and
and
fcomps
or
sub
xchg
pop
pusha
jecxz
ds
add
inc
and
in
pop
or
xor
cmpb
in
pushf
sbb
xorps
pop
mov
les
xor
inc
adc
xor
cwtl
or
push
pop
idivb
stos
xor
jecxz
js
daa
xchg
mov
lods
pop
cli
dec
sbb
sbb
mov
jno
in
xor
mov
mov
cmp
and
lods
aas
add
jae
dec
add
xor
testb
pop
sahf
leave
in
cmc
addb
iret
clc
stos
add
sti
cmp
xor
xorl
dec
mov
clc
lcall
sub
sub
mov
icebp
push
dec
out
cs
rcr
and
pop
mov
data16
lock
icebp
inc
in
jge
lods
stos
push
mov
dec
scas
push
or
dec
gs
xchg
add
imul
aas
ja
add
xchg
and
inc
mov
repz
dec
in
add
cmp
mov
shrl
jl
repnz
jbe
loope
cld
push
cmp
jns
pop
out
lret
dec
mov
add
lahf
xchg
pop
ds
add
shlb
mov
mov
jno
gs
fcomi
loop
in
add
clc
and
mov
ds
lds
popf
je,pn
or
mov
adc
cld
ret
jp
mov
hlt
cwtl
or
sahf
jg
ficoml
pop
mov
jl
cwtl
or
and
xchg
fbld
add
push
mov
sahf
xor
sbb
xchg
int
test
push
xchg
cmpsl
ficompl
iret
lods
dec
in
or
nop
popa
int
xor
sub
push
sbb
scas
and
pop
outsb
pop
push
sub
push
jecxz
adc
sti
pushl
mov
cmpsb
out
dec
mov
lock
xor
ret
and
sti
out
dec
mov
mov
lahf
outsb
mov
mov
jo
jns
push
fwait
mov
mov
ds
std
ds
jg
and
adc
cld
test
in
xchg
mov
outsb
or
mov
in
dec
aam
loopne
inc
xchg
xlat
loope
cmpsb
scas
xor
pushf
jp
or
je
xchg
out
lock
rorl
idivl
aam
fmull
cmp
mov
popa
shlb
jp
sbb
lods
ss
mov
popa
pop
cmpsb
adc
adc
xorb
mov
or
pop
aas
lods
inc
js
push
push
lock
sub
xchg
and
fistps
inc
mov
mov
in
stc
fiaddl
sbb
push
pop
aas
mov
xchg
loopne
outsl
cmpb
aad
mov
out
lea
outsl
mov
cwtl
push
push
cmp
outsl
cmp
aam
nop
or
stos
into
and
and
sbb
and
repnz
sub
xchg
mov
popa
adc
mov
add
scas
add
push
adc
adc
fdivs
addl
hlt
clc
test
inc
adc
pusha
pop
pop
xchg
lcall
push
push
push
stos
mov
dec
nop
add
inc
mov
push
pop
enter
idiv
mov
notb
jne
imul
ffreep
inc
and
out
ret
ja
addr16
or
xor
sbb
ja
pop
mov
mov
cltd
mov
lcall
pusha
rclb
cmp
rorb
test
pop
testb
xchg
cmp
xor
test
jge
or
and
je
add
or
sbb
push
add
test
and
add
fcmovnu
push
repz
stos
push
xchg
cld
push
clc
mov
into
xchg
pop
sbb
mov
dec
xlat
scas
out
push
ret
xor
sbb
push
jp
pshufw
bnd
push
loope
mov
xor
or
xor
sbb
bound
dec
in
je
outsb
jecxz
inc
addr16
push
mov
push
jno
sahf
inc
sbb
and
out
inc
fmull
enter
stc
jg
cmc
test
int
pop
xor
mov
lods
cmp
mov
mov
orl
mov
arpl
movsl
jle
jae
pop
cmpsl
push
sub
popa
xchg
mov
mov
push
js
out
xchg
push
inc
cmp
roll
pop
sbb
int
and
pop
lods
add
inc
in
data16
cmpsb
dec
xor
cmc
clc
and
jne
push
cmc
cmpsb
dec
mov
add
push
ds
les
or
mov
pop
mov
std
inc
push
stos
sbb
cmp
pushf
cld
cltd
mov
jo
test
in
cmp
jp
pop
pop
les
ds
adc
xchg
stos
imul
test
pop
mov
mov
outsl
loope
cwtl
jg
dec
ja
xchg
aam
dec
push
pop
stos
dec
mov
mov
imul
push
dec
mov
push
shrb
sub
sub
push
clc
loope
testl
xor
mov
mov
rolb
popf
es
in
xchg
sbb
stos
push
sti
movsl
mov
mov
jb
clc
inc
adc
inc
xchg
mov
adc
push
and
xor
cmp
jmp
popa
test
dec
mov
rorb
mov
stos
pop
mov
leave
mov
push
call
sub
push
fcomip
push
mov
push
lret
cmp
dec
fiadds
pop
fldenv
cmc
jae
push
jne
mov
jge,pn
jo
mov
pop
inc
mov
ret
jnp
dec
mov
xchg
mov
cld
add
ficoml
pop
cmpsl
adc
xor
aam
imul
dec
mov
inc
test
mulb
adc
nop
sub
loope
sbbl
mov
shr
add
adc
mov
sbb
rcr
fistpll
data16
fdivrl
ss
sbb
adc
ljmp
sbb
mov
testb
xor
add
ds
xchg
cmpsl
ret
mov
mov
xchg
inc
sbb
mov
mov
inc
repnz
dec
outsl
cltd
aaa
stos
jl
xchg
insb
xchg
dec
cwtl
xor
dec
or
inc
in
xchg
pop
jp
and
into
and
cmpsb
dec
mov
and
sbb
push
mov
or
imul
jns
mov
inc
sti
leave
pusha
sub
shrl
jo
and
xchg
push
fs
out
jp
test
insb
jns
lock
incl
add
push
add
adc
adc
mov
or
adc
pop
and
xor
sbb
testb
aaa
push
push
sub
fcompl
ljmp
sub
mov
mov
ret
pusha
adc
mov
jo
cmp
out
dec
into
adc
cmpsb
sub
inc
test
stc
jmp
inc
push
cmovb
mov
sbb
push
fstps
rcrl
inc
repnz
fstp
jns
mov
inc
xor
pop
cmp
push
sti
icebp
insl
das
arpl
pop
xlat
int
mov
pop
movsb
fcoml
dec
sub
mov
sarl
mulb
ss
sub
or
mov
mov
push
mov
mov
sbb
xchg
jecxz
push
arpl
fldl
pop
mov
hlt
jbe
lds
fadds
mov
xchg
hlt
pop
adc
sub
push
leave
orl
scas
mov
jmp
jecxz
ret
fnsave
pop
fucomp
push
or
out
pop
outsl
jo
push
and
pop
gs
rorl
ror
pushf
or
pop
test
adc
mov
adc
mov
xchg
icebp
mov
out
push
addr16
or
cmpsl
xlat
pop
or
xchg
cmpsl
mov
icebp
jmp
jns
xor
stos
add
std
imul
adc
outsl
xlat
mov
lds
ss
nop
call
cmpsl
push
sbb
sbb
xor
stos
or
in
lock
adc
mov
dec
xor
pop
rclb
mov
inc
inc
push
icebp
stos
shlb
shr
inc
movsl
mov
jp
test
cs
mov
xlat
xchg
xor
xor
cwtl
pushf
lds
loopne
pop
jmp
mov
in
flds
and
ret
mov
mov
arpl
movsl
xlat
xchg
dec
jge
cmp
subl
xchg
xchg
xchg
and
mov
mov
popw
push
dec
mov
xchg
jecxz
fstpl
push
mov
mov
fistpll
add
or
mov
sub
pushf
jge
dec
in
dec
ret
fisttpll
add
in
sub
xor
sub
in
sub
out
mov
xchg
pop
fbstp
cmp
and
inc
outsb
mov
push
push
push
jecxz
sub
cmp
sbb
js
and
cmp
repnz
and
jp
pusha
mov
inc
fcoms
push
push
insl
push
fwait
xchg
jge
inc
icebp
jne
aad
push
daa
std
dec
xchg
movsb
test
adc
fsubrs
lret
jle
jp
iret
lods
xor
cmc
push
xchg
inc
inc
pushl
repz
add
push
call
sub
imul
cmpsl
mov
int3
dec
scas
out
xchg
hlt
fildll
scas
lret
leave
popa
fs
dec
cmp
call
jp
movsl
push
add
je
lods
and
sub
mov
sbb
popa
inc
add
fsubr
dec
mov
cmp
dec
popf
mov
lds
dec
bound
pusha
push
movsb
xchg
sarb
mov
pop
fidivs
rcrl
das
ja
sahf
int3
aas
xchg
sub
mov
xor
daa
mov
xchg
call
or
mov
push
dec
mov
sahf
repz
lahf
sub
jp
sub
out
subl
shll
mov
lea
addr16
arpl
jo
add
add
aas
movsl
in
jl
xchg
xchg
repnz
inc
pop
pop
mov
outsb
sarb
dec
out
pushf
dec
or
mov
hlt
enter
sub
mov
sbb
inc
bound
repz
jp
sub
mov
loop
bound
mov
negl
mov
xchg
or
movsb
outsl
pop
je
clc
repnz
mov
mov
addr16
pop
scas
mov
mov
insl
test
dec
jbe
push
rolb
loopne
and
add
jmp
push
popf
pop
inc
lds
in
mov
sbb
imul
push
aad
fmull
pop
mov
push
jle
pop
or
int3
mov
shrl
stos
xor
cmp
mov
shll
push
hlt
rcrb
dec
mov
addr16
xor
inc
push
hlt
int
push
mov
ljmp
mov
sbb
cmovg
mov
in
cmpsl
add
ss
jno
lds
in
dec
push
lods
xchg
lods
stos
jle
push
js
fwait
mov
adc
inc
icebp
mov
in
repz
cmp
mov
loop
leave
xchg
add
int3
daa
jmp
jbe
es
xchg
jl
in
dec
int3
or
popa
jae
lods
fsubp
cmc
int
aaa
mov
fcmovnb
ss
xchg
scas
push
pop
push
js
lcall
mov
add
filds
cmp
sbb
popf
cmc
gs
pusha
sbb
sbb
lds
pop
sbbb
mov
dec
lea
xor
jo
sbb
shll
adc
shl
adc
outsb
push
push
mov
jg
ja
hlt
pop
add
jp
rcrl
ret
mov
cs
daa
mov
and
xchg
popf
ljmp
mov
cmc
pop
push
add
inc
mov
pop
stos
insl
ficoml
xor
pop
jle
bound
mulb
call
es
ss
out
test
sbb
pop
sbb
popf
jo
out
outsl
pusha
and
xchg
cmp
and
stc
shrl
aam
inc
pop
fidivs
pop
into
mov
ret
jl
dec
pop
fisttpl
rcr
add
mov
push
arpl
mov
mov
or
cli
cmp
aam
sub
lds
xchg
and
sub
mov
cwtl
pop
iret
ss
mov
jae
push
insl
inc
jg
mov
inc
rol
or
and
mov
filds
add
mov
mov
and
and
add
and
mov
xchg
testl
xchg
lahf
jp
push
xor
shrb
cmp
pushf
into
cld
addl
mov
scas
cmpsl
sub
mov
mov
push
jle
out
testb
jne
cmp
inc
mov
into
fisttps
inc
push
aad
pop
scas
rcll
pop
jge
xchg
insb
cltd
or
mov
dec
and
mov
inc
rcr
mov
dec
ffreep
test
aas
sbb
out
cs
xchg
pushf
jne
stos
sub
lea
ds
in
dec
and
mov
mov
cli
idivl
daa
sub
and
lret
lock
inc
test
int
je
sbb
aad
roll
jb
inc
ja
adc
xor
scas
fsub
shlb
in
cmp
in
xchg
or
xchg
inc
mov
mov
psubsb
or
cmpsb
dec
and
cmp
sbb
and
fiaddl
adc
clc
dec
int
jb
ja
xor
loop
pushf
js
xchg
and
loopne
push
adc
dec
jne
shll
push
sub
rcrl
loope
jp
ret
movsl
or
jnp
and
cmc
mov
movsb
aas
loopne
push
push
or
inc
mul
adc
imul
jne
cmp
add
shl
push
lahf
add
test
lock
test
add
movsl
jle
bound
inc
jl
xchg
scas
in
and
ror
icebp
ja
add
cmpsl
daa
std
cld
out
dec
xor
or
xrelease
cld
es
sbb
mov
jb
xchg
dec
dec
push
lds
inc
adc
cld
stos
mov
subl
mull
out
cmp
mov
xchg
xchg
mov
jo
out
mov
push
in
and
popa
test
push
je
shl
movsb
into
pop
cwtl
jecxz
lock
mov
add
data16
mov
xchg
pop
idiv
mov
sahf
jg
pop
out
cli
iret
jecxz
loopne
push
xchg
adc
js
push
xchg
jmp
stc
mov
stos
sahf
dec
jae
sub
push
lods
inc
out
xchg
add
adc
mov
stc
jg
out
xchg
push
xchg
out
jmp
adc
std
rorl
add
aas
dec
mov
out
fcoml
push
jno
sub
cmp
fidivrl
popf
mov
fsubp
xor
dec
adc
pop
push
and
les
jno
dec
loopne
aam
inc
and
test
mov
mov
addr16
dec
xor
mov
cld
dec
mov
pop
inc
mov
cmp
xchg
pusha
shrb
push
jl
fists
clc
iret
mov
mov
divl
or
movsb
mov
test
xor
stos
mov
lock
ret
mov
rclb
stc
or
push
popl
test
aam
inc
push
insb
lahf
sarb
dec
cmpsb
in
into
clc
imul
sti
arpl
jnp
sti
clc
jecxz
movntq
xchg
clc
scas
daa
add
mov
rol
popf
adc
in
and
lds
aaa
and
std
out
pop
in
xchg
rol
insb
mov
push
sbb
push
cltd
pop
push
ja
ficompl
pushf
icebp
mov
out
shrl
lret
push
mov
adcb
sbb
and
shlb
outsl
pop
cli
out
hlt
xchg
mov
loop
out
mov
shlb
mov
out
out
xchg
dec
out
sbb
inc
cmpsb
repnz
cli
in
sbb
cmova
rclb
ret
add
sub
adc
in
jg
sti
test
mov
cli
or
mov
cmpsb
inc
sbb
push
sub
mov
add
pop
repz
arpl
mov
mov
push
adc
fdivr
xchg
jno
and
aam
and
mov
jmp
dec
mov
xchg
jb
add
adc
mov
ret
es
div
mov
int
push
adc
dec
outsb
ds
arpl
decl
lahf
xorb
push
cld
fidivrl
and
or
add
loop
popf
test
jmp
mov
mov
loope
scas
push
mov
push
mov
mov
mov
pop
int
mov
sbb
lods
jl
ror
sti
mov
mov
mov
ja
sub
xor
cmp
and
xor
fidivs
mov
jo
xchg
jae
scas
scas
insb
add
sub
mov
rcl
jle
aaa
or
jb
mov
pop
lret
mov
dec
lock
pop
ljmp
adc
mov
xchg
mov
adc
pop
push
loopne
ljmp
lds
sub
lock
cld
shlb
cmp
xor
aad
push
xchg
add
sbb
xchg
popf
fs
sub
inc
or
and
mov
push
dec
fstps
imul
inc
or
fisubrl
int
or
inc
mov
adc
fadd
aas
jg
adcl
pop
xchg
add
xchg
add
jecxz
in
loop
inc
cs
stos
push
lock
xor
xor
mov
das
mov
dec
or
dec
loopne
xor
xchg
lahf
into
sub
inc
dec
les
dec
mov
push
cmpsb
cwtl
jnp
mov
sub
hlt
sub
mov
loope
aad
int
mov
fisubl
mov
pop
mov
mov
mov
sbb
subb
sub
outsb
push
pop
sub
inc
scas
xchg
dec
adc
cli
adcl
nop
int3
addl
pop
aam
add
loope
lods
adcl
lret
push
daa
and
call
shrl
mov
es
testl
pop
mov
enter
push
and
xchg
mov
daa
arpl
rcrb
loope
inc
js
ljmp
lret
pop
shl
pop
jne
mov
inc
sub
add
sarb
xchg
in
cmpsl
dec
mov
enter
inc
pop
rcll
jg
sub
xchg
jae
ret
scas
mov
iret
xchg
orb
or
mov
mov
cmpl
mov
repz
or
jno
jmp
jp
cmp
ret
push
clc
ljmp
scas
das
inc
jl
cltd
scas
rorb
pop
testl
adc
test
mov
idivl
out
fimull
jne
mov
and
bswap
lods
push
mov
mov
cmp
sub
push
fnstcw
inc
mov
insb
xchg
es
cmpb
mov
pop
ret
sti
and
and
popa
inc
jg
stos
ja
bound
insl
adc
leave
jne
cmp
cmc
leave
or
cmp
inc
mov
inc
pusha
int
jo
stc
daa
add
push
jno
jmp
sbb
mov
jge
sub
fiadds
sarl
xchg
test
loop
mov
mov
xchg
push
int
nop
adc
inc
inc
divb
jns
dec
rol
pop
jmp
movsb
test
sbb
mov
and
jnp
mov
or
dec
or
pop
or
mov
stos
mov
ljmp
xchg
subl
popf
sub
ficoml
dec
out
ret
push
pop
sub
outsb
sbb
add
gs
push
aam
or
inc
push
cmc
push
js
popa
mov
mov
mov
stos
xor
or
xor
andl
push
push
inc
dec
out
sub
leave
mov
xchg
mov
push
xlat
adc
dec
jle
mov
mov
push
stc
xor
gs
cmp
adc
cmc
cmp
sbb
sub
jne
jbe
inc
jp
adc
or
movsbl
clc
fsubp
and
jmp
adcb
xor
frstor
pop
imul
out
jnp
mov
shlb
xor
fdivrp
jg
dec
sbb
mov
insb
mov
idivl
mov
push
push
push
mov
clc
dec
enter
xor
sbb
or
out
mov
rorb
xchg
jo
or
and
mov
adc
test
xchg
aaa
ds
push
mov
dec
push
mov
inc
xor
jmp
jo
lods
sti
shll
es
mov
adc
or
add
sarl
cli
repz
sbb
mov
stos
sbb
aam
inc
lock
imul
fcoml
and
push
jnp
xor
mov
fimuls
add
cmp
cmp
mov
ficompl
cli
jl,pn
sbb
iret
in
rcll
push
jle
inc
inc
in
loopne
mov
sub
sbb
and
push
aas
jb
iret
add
lret
push
xchg
or
jp
xchg
sbb
cli
pop
mov
test
pop
and
jns
inc
jo
xchg
push
dec
mov
int3
into
lea
jnp
mov
out
out
mov
ja
adc
jo
scas
aam
outsl
xor
and
lock
pop
or
xchg
adc
jmpw
or
sti
call
arpl
inc
mov
adc
sub
insl
paddusw
dec
mov
pop
mov
int3
fstl
in
pop
adc
shrb
sub
push
mov
clc
aam
push
lret
repnz
icebp
testl
add
pusha
loope
xlat
loop
inc
jg
cwtl
xor
xor
xor
push
ret
frstor
pop
push
fisttps
sbb
pushf
es
cwtl
add
mov
xchg
jno
nop
adc
dec
adc
outsl
sbb
push
in
test
lods
inc
push
mov
mov
sbb
fwait
ret
cmp
fistps
lea
out
pop
and
pusha
sbb
inc
push
inc
xor
std
fsubr
cmpsl
aam
clc
aaa
jle
test
testl
pop
push
sbb
and
incb
idivb
pop
mov
lea
pusha
daa
dec
aam
jg
xlat
imul
mov
std
sbb
xchg
mulb
mov
jg
fcomps
js
dec
sbb
mov
stos
or
inc
dec
popa
les
cmp
mov
outsb
clc
lret
jns
mov
pop
push
mov
mov
outsl
jbe
dec
xor
jecxz
push
pushf
push
pop
and
add
pop
pop
std
lcall
mov
cmpsb
lods
add
push
jo
jg
imul
jns
jmp
imul
adc
repz
mov
and
roll
ds
addr16
dec
pop
mov
loopne
xlat
and
addb
mov
inc
out
in
das
lcall
stos
mov
roll
push
and
shrl
aaa
outsl
fidivrs
jo
ss
pop
outsl
addr16
fsts
ret
fs
sub
dec
lcall
and
xchg
push
pop
inc
movsb
push
cmp
or
jl
popa
mov
sbb
jnp
jle
pop
je
fxch
bound
xor
lahf
xchg
pop
cmp
sub
sub
sbb
int3
pop
jo
hlt
pushf
or
xchg
pop
push
dec
jp
xchg
or
push
out
iret
ficoml
pop
fmulp
sbb
dec
xor
inc
adc
mov
insb
push
pusha
adc
add
xor
loop
xor
pop
mov
lea
dec
xor
xchg
ljmp
mov
mov
inc
test
jl
repnz
dec
lcall
gs
push
cmc
jbe
mov
test
leave
out
mov
add
mov
int
pop
dec
lea
fdivrl
movsl
or
adc
dec
cli
sub
mov
pop
dec
shlb
test
subl
inc
and
out
cltd
jp
lret
jne
push
pop
sti
stos
and
test
push
ret
aam
loope
dec
mov
aas
sub
bound
repz
int3
lahf
xor
mov
punpckhbw
jge
insl
icebp
sbb
xor
jmp
insl
push
sarb
lret
lahf
les
lods
fiadds
aam
cmpsl
adc
ss
sbb
pop
mov
push
xlat
xchg
cmp
decl
mov
test
stos
testb
sahf
loope
outsl
jle
sbb
seta
mov
pop
hlt
movb
je
sahf
mov
cmp
insl
into
cltd
mov
sub
pop
adc
sarl
mov
xor
sbb
dec
cltd
int
cwtl
or
notb
je
inc
add
pop
inc
in
xor
and
rolb
sbb
mov
push
movsb
dec
negb
cmpsl
stos
push
cmp
and
jmp
inc
mulb
and
add
xor
jns
sti
dec
scas
mov
stc
data16
negb
jne
xor
lock
data16
cmpsl
sbbb
nop
sarl
ds
adc
xchg
mov
ljmp
outsl
incb
sti
pusha
lock
xor
xor
and
lds
pop
je
and
jno
out
adc
movsb
bound
sub
jno
cmp
push
inc
stos
int3
push
cmp
dec
or
cltd
or
std
sbb
inc
xor
mov
stos
jecxz
cs
rcr
into
iret
jmp
push
xor
jecxz
scas
mov
fwait
jp
mov
call
xchg
adc
add
adcl
inc
mov
sarl
push
aaa
mov
jbe
pop
mov
mov
jbe
mov
dec
inc
sub
movl
push
scas
sbb
xchg
push
xchg
xchg
jno
sbb
xchg
addb
incb
add
stc
sbb
clc
mov
xor
sar
mov
pop
inc
push
xchg
adc
mov
outsl
mov
cmp
loopne
push
fistpl
mov
ljmp
xchg
mov
jmp
mov
push
ret
inc
jae
into
enter
pop
mov
add
fmul
xor
jo
jns
repnz
clc
movsl
mov
push
xchg
inc
or
xchg
add
or
loopne
adcb
cmp
add
es
shlb
std
jo
push
inc
mov
sti
data16
sbb
jns
leave
inc
mov
cwtl
loopne
aaa
mov
mov
mov
adc
lret
xor
addb
pop
xchg
sbb
inc
scas
icebp
imul
sbb
push
cmpsb
test
xchg
loop
mov
jg
sbb
jl
mov
sar
ss
sbb
mov
jecxz
in
out
add
dec
stc
js
outsb
cmp
mov
adc
inc
bound
fadds
daa
fcomps
lret
sbb
dec
stc
or
xlat
adc
mov
ja
dec
out
push
fwait
cmp
sbb
outsl
stos
call
cltd
aad
fdivs
jp
out
mov
loopne
loopne
jb
xor
mov
ret
and
shll
xlat
mov
stos
push
mov
inc
and
in
ja
test
push
adc
or
insl
add
in
push
xchg
xchg
pop
arpl
addr16
xchg
outsb
xchg
mov
adc
mov
jmp
jne
mov
call
das
or
sbb
inc
dec
shlb
ficoms
stc
mov
xchg
mov
xchg
orl
cli
sahf
addb
int3
js
mov
ret
out
negl
enter
subl
fstps
fidivl
cmp
pop
repz
jle
or
xchg
jmp
jp
es
sub
push
mov
jp
mov
xor
popa
xchg
pop
sbb
adc
in
sbb
pop
fwait
out
ja
mov
jnp
jle
sub
jge
das
sbb
pop
lods
adc
ss
xorl
int
pop
lea
pop
mov
lahf
add
movsb
jns
lock
mov
jns
cmp
test
cmpsb
inc
inc
test
and
testb
mov
xchg
add
xchg
push
imul
adc
adc
adc
ret
leave
and
mov
aas
mov
outsb
add
push
mov
ds
or
sti
insb
lcall
mov
xor
dec
adcb
scas
sbb
jo
adc
inc
pop
xchg
inc
fisubrl
xchg
cmp
dec
shll
js
dec
cmp
dec
xor
mov
test
pop
cmp
andb
lods
mov
daa
cld
push
daa
sub
jb
leave
stc
movsb
mov
je
pop
pushf
adc
jbe
aas
icebp
fadds
mov
arpl
jo
cmp
data16
rolb
insb
jecxz
call
xchg
lods
ss
xor
loop
out
icebp
mov
sahf
pop
pushf
xchg
add
mov
jecxz
cmpsb
sahf
mov
es
scas
jl
inc
and
sbb
fsubrl
cltd
lds
mov
mov
pop
lock
inc
adc
xchg
xor
jae
mov
cwtl
xor
add
or
mov
mov
std
movsl
dec
in
xor
mov
push
es
shlb
out
dec
test
pushf
out
jnp
jno
xor
push
sbb
push
cli
and
lds
pop
aas
xchg
icebp
cmpsl
loope
roll
test
clc
mov
aad
jno
test
shrl
sahf
shl
ror
sbb
pop
jbe
dec
xor
outsl
jl
jge
xchg
jmp
outsb
rcrl
push
insl
mov
pushf
push
push
in
nop
mov
jmp
lock
clc
push
mov
movsl
jnp
push
pop
iret
bound
dec
mov
mov
stos
jo
aaa
mov
imul
adc
xlat
ficoml
add
inc
ja
jae
pop
push
pusha
outsb
pop
jle
push
jb
in
popf
in
data16
mov
or
clc
loop
mov
and
cmp
mov
cli
repnz
mov
std
pop
xchg
jp
or
addl
rcr
xchg
dec
scas
push
inc
ret
imul
mov
stos
xchg
cli
jge
aaa
dec
int3
jb
test
jno
shrb
mov
sbb
insb
or
out
adc
dec
ficomps
add
adcl
xchg
xchg
adc
mov
mov
xchg
mov
lods
sti
mov
dec
and
shl
inc
xor
add
jno
or
sbb
sbb
cmp
in
add
clc
ja
andl
cmc
mov
and
pop
or
inc
test
leave
mov
inc
stos
xchg
inc
cmp
int
sub
lds
les
movsb
int3
loopne
das
arpl
ret
and
stos
cmp
mov
data16
out
mov
insl
orl
xchg
xor
pusha
adc
clc
sub
std
xchg
in
push
out
rcrb
mov
lcall
addr16
repnz
lea
mov
push
das
lock
mov
push
mov
adc
pop
scas
or
pop
inc
movsb
or
jmp
sbb
aam
push
es
cs
push
cwtl
shrl
pop
cmpsb
and
int
sbb
movsb
adc
pop
push
mov
sti
xchg
movsb
mov
sarl
fidivrl
mov
mov
stc
xchg
cmp
lcall
lret
dec
adc
stos
mov
sub
stos
mov
mov
mov
inc
push
lods
sbb
or
iret
pop
xchg
cmpsb
std
flds
or
in
jg
rcll
mov
imulb
pop
enter
mov
std
mov
dec
jbe
decl
xchg
subl
mov
aam
sub
out
rorl
in
leave
imul
call
and
mov
orb
push
cmc
and
mov
cmpsb
dec
and
int3
pop
dec
shrb
ss
notl
xor
cmp
ds
in
xor
pop
cs
imul
insb
mov
xorl
or
jns
mov
cmc
jo
or
xor
cli
inc
test
outsl
out
movsl
in
cltd
dec
daa
dec
xlat
or
movsb
cmpsb
icebp
test
in
or
lock
add
jne
pop
mov
cli
cli
out
inc
pop
ja
imul
mov
push
fwait
jge
xchg
and
xchg
fwait
xchg
xorl
push
jae
in
outsb
push
int3
stos
xchg
and
push
jo
xor
aaa
insb
ret
xor
loopne
js
mov
mov
leave
xchg
fcmovne
std
xor
xchg
inc
insb
loope
inc
pop
fbld
jecxz
shrb
mov
repnz
inc
mov
cmp
fdivp
cvtpi2ps
and
jge
adc
scas
in
push
fidivs
sub
pop
pop
sbb
push
xlat
inc
aad
inc
mov
hlt
shld
shr
cmp
outsl
in
add
sbb
out
and
arpl
mov
sbb
call
lods
cmp
das
les
jne
push
inc
pop
pop
cwtl
fdivrs
ss
xor
daa
mov
mov
lret
loope
push
push
stos
xchg
pop
pop
adc
js
sub
adc
aaa
aad
inc
cwtl
pusha
and
xor
les
lret
outsb
in
repnz
bound
mov
mov
sub
mov
push
mov
repnz
test
flds
cmp
js
adc
pop
mov
es
inc
or
in
cmp
test
roll
popa
popf
movsb
popa
test
sbb
cmp
cmpsb
mov
js
test
pop
int
iret
jo
push
rol
stos
cld
xchg
push
push
lods
add
xchg
dec
in
mov
aad
scas
pop
sub
jg
pop
push
mov
add
int
push
sub
mov
bound
jmp
imul
cmp
je
je
shr
fcomi
out
push
pop
adc
jo
out
mov
les
les
xlat
inc
mov
data16
inc
sbb
push
cld
xchg
mov
xor
adc
pop
sbb
xlat
xchg
cmc
addl
aad
push
outsb
sbb
into
out
sub
test
sbb
subl
lret
and
push
stos
cwtl
test
xlat
sub
mov
popa
sarl
pushf
rclb
adc
cmp
sub
mov
popf
cld
sbb
pop
pushf
in
mov
mov
xchg
xchg
push
xchg
sti
hlt
movsb
jle
cmpsl
adc
jb
aas
pop
sbb
icebp
cmp
les
enter
mov
push
xchg
jne
sub
push
cmp
scas
sbb
loope
lds
adc
mov
push
and
ljmp
xchg
imul
pop
test
xor
in
jge
dec
or
jae
iret
cld
call
mov
outsb
test
xchg
cli
or
dec
push
mov
nop
or
leave
dec
push
dec
xchg
add
xor
pop
aaa
fs
pushf
lods
rcrl
and
cmp
jmp
jbe
insb
test
cwtl
in
xor
shlb
aam
inc
sarb
test
push
mov
repz
mov
pop
push
sar
ds
push
mov
arpl
and
inc
das
pushf
ljmp
sbb
lods
push
mov
push
cmp
mov
add
sub
jb
cmp
cltd
mov
and
jecxz
addr16
aad
insl
add
iret
stos
sub
add
push
mov
cmp
jp
pop
push
out
out
fidivrl
add
add
rcr
inc
xchg
cmc
test
dec
push
fists
cmp
adc
mov
out
in
adc
fstps
xor
popf
mov
insl
lods
xor
and
loopne
mov
mov
mov
sub
lock
pop
pusha
adc
call
fwait
jne
cmp
rcr
aas
in
cmp
mov
dec
addr16
cmp
jl
sbb
pcmpeqb
and
inc
fsubrs
enter
fsub
pop
pop
mov
push
and
cmp
mov
lock
xchg
cmp
andl
and
outsl
pop
jbe
jae
call
popl
pusha
and
in
pop
mov
cwtl
jns
pop
mov
scas
jae
fwait
rorl
fsubs
stc
out
pop
jle
mov
jo
aas
cmp
jle
movntq
fbstp
sbb
rclb
adc
sti
out
cld
ret
mull
pop
sbb
fs
inc
lods
xor
addb
add
out
push
and
dec
push
lea
mov
mov
js
dec
lods
mov
ljmp
adc
test
jae
popa
mov
or
lahf
insl
xor
loopne
int3
adc
mov
test
dec
sbb
xchg
into
cmp
mov
sarl
gs
outsl
insl
mov
inc
and
imul
sub
mov
int3
jg
xor
dec
mov
insl
pop
jne
push
in
sub
pop
mov
push
subb
mov
cmpsb
subl
push
dec
add
and
sub
sbb
push
jg
test
mov
stos
mov
push
cmp
mov
pushf
push
fs
rcrb
and
cmc
sbb
ret
dec
adc
cmpsb
inc
xor
xlat
jno
mov
jne
xor
fisubrs
adcb
daa
and
ds
and
call
cmp
sub
das
pop
jg
call
outsb
lods
mov
inc
jbe
popa
out
mov
aaa
fwait
add
rolb
add
cmp
lret
insb
call
xor
jle
sub
call
cmpsl
lgs
ss
loop
cli
js
pop
add
adc
pop
sbb
add
xlat
popa
fs
xor
test
movsl
sbb
cmp
mov
push
or
clc
scas
shlb
pusha
push
mov
or
lea
sub
sti
faddp
rorl
aas
mov
cmp
xor
or
lods
sub
jno
jmp
shl
push
sbb
fwait
push
aam
in
pusha
pop
cs
push
cmp
or
pop
inc
dec
mov
sbb
outsb
mov
lcallw
jp
outsl
and
or
cmp
sbb
cmp
rorl
int
ficoms
dec
mov
rcl
leave
gs
mov
xchg
add
rcrb
pushf
xor
or
jbe,pt
or
mov
notb
mov
sbb
add
cmp
pop
mov
xchg
mov
sub
mov
jae
fsubrl
jmp
xor
mov
cmp
jmp
inc
decb
cltd
or
sbb
dec
mov
fs
js
push
cmpsl
cli
add
icebp
fildl
dec
arpl
or
aaa
mov
mov
ss
rorb
pop
dec
cmpsb
mov
out
dec
sbb
or
add
mov
call
or
lods
xlat
pop
test
mov
test
rcrl
aaa
xchg
call
es
cmp
negl
inc
cmp
lret
pop
enter
add
andb
sbbl
jne
mov
orl
jns
imul
outsl
adc
xchg
js
dec
push
adc
int
adc
aas
push
fisttpl
xor
lods
test
nop
hlt
das
js
enter
stos
push
lods
jno
xchg
icebp
stos
and
jne
sub
mov
repz
loope
dec
push
loop
fisubrl
cmp
pop
mov
adc
xor
jg
addr16
pop
clc
dec
stos
cmpsl
inc
mov
jns
test
fdiv
shlb
cmp
cld
in
insl
shrb
jb
inc
imul
movsl
and
mov
adc
das
sbb
cltd
outsl
jae
ss
mov
mov
mov
testb
cmp
jo
in
mov
jmp
dec
cmp
inc
push
mov
lds
jne
pop
cmp
sbb
xchg
cmp
jmp
xchg
pop
mov
test
mov
lcall
int
enter
insb
inc
hlt
nop
ljmp
fdivrl
je
movsl
imul
xor
ret
fwait
sub
lods
fnstsw
cmp
rcrb
sub
in
push
push
fs
adcl
xor
pop
add
fldenv
fisttpll
push
cmp
in
outsb
mov
fwait
ss
sbb
rorb
mov
aam
addr16
mov
pop
or
jg
test
nop
loopne
mov
lods
in
or
out
push
xchg
call
es
cs
lods
cmpsl
xchg
aam
add
pop
lods
dec
lods
jns
dec
scas
in
jbe
fwait
loop
in
push
xor
fcomp
imul
rorb
mov
dec
out
dec
sbb
arpl
push
adc
lret
jecxz
jg
imul
lods
push
aas
sbbb
sub
fs
rol
scas
std
test
pop
mov
dec
xor
cs
sar
jl
cs
sbbl
xor
insl
inc
out
dec
jp
sbb
arpl
and
ficoms
sahf
adc
adc
cmp
jo
push
inc
inc
je
push
pushf
or
loop
or
pop
mov
imul
cltd
ljmp
adc
in
lods
cmp
mov
repnz
add
cmp
call
sbb
jge
xor
mov
jb
mov
mov
in
inc
out
fnstcw
add
je
and
push
xchg
stc
int3
dec
push
cmp
lea
mov
mov
sub
xor
mov
push
stos
adc
jp
lods
adc
xor
in
imul
inc
dec
rolb
push
pop
addr16
or
xchg
xor
mov
sbb
jl
xor
enter
insl
ss
dec
xor
das
aas
push
iret
jae
gs
clc
sbb
inc
mov
lea
leave
js
dec
sysexit
lret
shl
mov
mov
test
or
cmp
lret
fsub
rcr
inc
push
pop
and
mov
aaa
mov
push
subl
adc
aad
int
jae
inc
test
cmp
mov
lret
sti
std
scas
xor
mov
popa
popf
int3
in
push
pop
es
mov
jb
jae
pushf
push
rcrb
cli
ja
pcmpgtd
test
outsl
test
cmc
out
sub
dec
mov
pop
push
mov
clc
dec
mov
xchg
and
popa
pop
daa
jge
push
stos
jmp
push
or
lret
inc
dec
xor
xor
sub
sbb
pop
and
or
jle
stos
js
xchg
sbb
stos
xor
xchg
pop
fmull
push
je
add
int3
jo
insl
ss
and
xor
xor
out
fldt
mov
push
out
cld
mov
sub
xchg
fidivrl
shlb
ds
jecxz
lods
pushf
popa
sub
cmpsb
jo
movsl
mov
out
in
sahf
mov
dec
cld
cmpsl
add
fsts
in
aad
or
mov
sbb
xchg
dec
std
xor
cmp
dec
nop
jnp
sub
orb
xchg
pop
cmpsl
xchg
sbb
mov
mov
jns
xchg
pop
cmp
pop
pop
jge
xchg
popa
test
add
lahf
stos
mov
xchg
adcl
lret
pop
daa
and
addb
sub
xor
pop
pop
mov
or
mov
or
inc
xor
adc
cwtl
bound
clc
shrb
and
in
shl
ja
and
ret
dec
lret
inc
inc
ss
lahf
nop
add
jno
lahf
dec
xorb
fldenv
sub
les
dec
int3
rcrl
cmpsb
popa
imul
inc
stos
dec
andl
mov
pop
mov
lea
mov
xchg
imul
or
fcmovbe
cmp
dec
mov
adcl
push
pop
dec
cmp
add
xor
aaa
and
jp
mov
pop
iret
xor
pushf
and
sbb
push
adc
mov
cmp
xor
inc
in
or
pusha
test
inc
mov
sbb
pusha
aad
mov
mov
adc
scas
and
movsl
and
cwtl
pop
stos
push
cmpsl
test
iret
cmp
fisubs
test
and
lods
xlat
sub
or
pop
lock
fwait
dec
mov
outsl
arpl
out
leave
shlb
nop
enter
bound
push
xchg
jmp
iret
xchg
stos
fs
cmpb
cltd
cmp
cld
out
pop
cld
lods
lcall
adc
mov
call
and
pop
sub
dec
js
shlb
sti
into
cmc
push
test
and
or
mov
fldt
je
out
ja
leave
loope
bound
mov
mov
cli
outsl
jle
aas
sbb
fwait
xchg
ljmp
mov
into
and
bound
pop
int3
insl
nop
scas
jge
add
outsb
mov
push
adc
mov
jl
ds
xchg
ja
add
rolb
mov
sub
popf
push
std
push
ljmp
aas
shlb
push
dec
jno
lods
sub
mov
js
pop
js
mov
inc
inc
cmp
mov
stos
pop
sub
bound
sub
dec
push
mov
jge
in
adc
test
fwait
in
xchg
out
cmp
cli
fbstp
and
pop
test
and
lea
mov
mov
fisttps
gs
imull
aam
dec
sbb
mov
js
mov
push
arpl
xchg
cmp
xor
and
das
rolb
les
arpl
push
xchg
lock
dec
dec
stc
push
in
xor
sbb
shr
jp
sahf
and
iret
jbe
cmpsl
push
gs
test
cmp
cmp
xchg
cwtl
sub
jbe
sub
mov
in
es
pop
scas
mov
in
push
pusha
bound
or
test
add
push
leave
aas
rcrl
cmc
fisubrl
push
loop
pop
mov
dec
int3
mov
pop
pusha
divl
lock
add
lds
adc
sbb
push
rorl
cld
sbb
sahf
sub
pushf
pusha
mov
push
inc
xchg
fdiv
out
out
mov
inc
mov
test
or
xor
or
aad
js
adc
jnp
fucomip
mov
sbb
mov
cmp
jmp
setbe
in
cmpsb
fmuls
adc
push
jecxz
pop
push
push
mov
cld
outsl
xchg
jbe
xchg
xor
fisttpl
mov
sub
mov
mov
cmp
mov
mov
pop
adc
adc
or
mov
cwtl
test
or
xor
mul
xchg
outsl
ret
mov
dec
cmp
inc
mov
aas
and
adc
out
test
lods
pop
out
sbb
lret
lods
push
fimuls
cmc
clc
mov
or
frstor
xchg
loop
outsl
sbb
pop
loop
sbb
iret
add
inc
mov
test
jmp
cmp
adc
xlat
hlt
fstps
ds
or
movl
jecxz
aaa
adc
leave
fcoml
ja
out
mov
push
pushl
hlt
or
and
cmp
ja
fadd
push
mov
jnp
or
jge
outsl
pop
ljmp
imul
push
cwtl
xor
mov
or
cmp
js
xchg
xchg
add
sbb
repz
jb
xchg
sub
jne
jbe
mov
ret
ds
push
js
pop
mov
leave
fadds
cli
out
xchg
mov
jge
push
or
mov
lods
cmp
mov
mov
divb
pop
out
inc
nop
ret
sub
rcrl
dec
mov
pushf
mov
ret
mov
stc
sbb
test
int3
out
mov
mov
adc
stos
sbb
xor
cli
ret
out
xchg
mov
adc
xor
add
rolb
in
jmp
adc
insl
inc
inc
fdivr
or
push
mov
jns
add
pop
mov
pop
or
mov
push
pop
mov
test
jns
mov
cmpsl
inc
xchg
repz
and
cmp
shll
in
or
xorb
mov
sar
add
pop
leave
int3
jno
pop
push
push
insb
adc
outsl
out
gs
and
pushf
mov
xchg
into
adc
cld
gs
inc
ret
insb
add
push
test
repnz
inc
lds
inc
inc
inc
jo
fcmovbe
lret
incb
inc
cli
and
sbb
mov
xchg
je
and
sti
mov
pop
ret
or
jae
push
pop
add
inc
jo
sbb
adc
lcall
mov
fldcw
js
ficoml
add
fnstenv
mov
xor
test
mov
jmp
daa
adc
mov
pushf
jbe
xor
negl
inc
inc
add
mov
mov
arpl
mov
fnstenv
inc
inc
and
add
test
pop
fsubs
aad
push
test
xchg
add
clc
ret
jmp
in
sbb
hlt
data16
cmp
push
mov
icebp
out
sbb
pop
push
std
sbb
adc
push
sub
xor
mov
mov
cltd
pop
pop
jl
mov
dec
sbb
add
push
pop
lock
imul
sbb
test
cmp
cwtl
popa
sub
jmp
xchg
mov
xchg
mov
mov
icebp
leave
jp
cwtl
in
fwait
mov
cmp
aaa
cmp
dec
stc
ret
or
sti
push
movsb
aas
ss
fcomi
cltd
clc
out
jo
mov
sbb
ss
daa
jle
lods
mov
cmp
pushf
test
sbb
mul
inc
sbb
mov
loope
pop
push
lret
lret
loope
inc
jnp
popa
push
jle
into
xchg
xchg
add
shr
sbb
jbe
movsl
in
inc
insl
xor
ja
aam
push
mov
mov
jl
call
xchg
stos
dec
clc
push
mov
fisttpl
jecxz
out
push
pusha
lret
cmp
jg
aas
mov
mov
pusha
enter
ret
dec
xchg
and
push
pop
jp
push
stos
out
or
inc
ljmp
pop
int
push
xor
xchg
cmp
mov
int3
js
add
add
in
xchg
mov
pop
arpl
and
push
adcl
jge
aaa
mov
mov
mov
pop
mov
mov
inc
cwtl
ret
adcl
and
sbb
adc
cmpb
flds
pop
in
dec
jb
and
jg
test
in
pop
xor
out
jle
lods
add
cwtl
pop
push
popf
popa
jl
mov
loopne
push
inc
insl
loopne
mov
push
insb
mov
stc
pop
jns
cld
in
fs
les
mov
or
xchg
cmpsl
or
mov
xor
dec
mov
fwait
and
pop
jmp
and
pop
outsl
and
jle
data16
repz
movsl
jae
fsubrs
pop
bswap
sub
xchg
or
addl
popf
enter
xchg
cmpsb
inc
sbb
nop
and
fcoml
test
xor
jo
cwtl
pop
lahf
test
adc
cmpsl
popf
popa
cld
in
add
mov
add
inc
lcall
es
inc
pop
xor
push
dec
inc
flds
repnz
inc
adc
pop
movsl
dec
pop
mov
iret
scas
mov
arpl
sub
jge
fs
in
lea
and
push
push
jmp
dec
jno
adc
adc
xchg
popa
cmp
ret
mov
xchg
lock
lods
fs
pop
mulb
popa
shl
and
adc
adc
lret
fldt
inc
mov
cmp
icebp
or
push
std
fidivl
mov
cmp
lock
inc
mov
movsl
inc
pop
cwtl
cli
into
mov
fsubp
insb
xchg
jno
sbb
andl
jb
decl
arpl
xchg
lahf
lock
pop
mov
movsl
rcll
out
inc
sbb
mov
aaa
sub
mov
in
add
unpcklps
inc
inc
lock
mov
cs
pop
push
adc
jg
jns
sub
loopne
inc
sub
insl
mov
leave
pop
fwait
mov
mov
aaa
mov
inc
adc
push
jb
mov
test
xor
sub
mov
add
es
dec
dec
push
test
inc
adc
shlb
mov
mov
adc
cltd
cwtl
mov
xor
and
es
out
push
pop
aad
mov
lret
aam
xchg
ljmp
jmp
fcmovnbe
cmp
pop
lcall
xchg
outsb
popf
push
lret
adc
test
cmpsb
notb
push
dec
mov
mov
mov
hlt
add
mov
ret
jmp
xchg
add
sub
xchg
popf
xor
fwait
xchg
jl
sbb
jns
mov
ja
scas
lret
xor
dec
movsl
loop
xchg
test
cmp
insl
mov
sub
xchg
and
inc
mov
cmp
sbb
add
or
ja
jbe
mov
adc
mov
mov
inc
movsl
pop
outsl
repz
xor
inc
ds
mov
and
dec
add
push
push
xchg
adc
xchg
dec
ja
nop
paddb
sbb
push
adc
pop
or
xor
dec
mov
pop
sbb
xchg
jae
xchg
jno
dec
psllq
push
dec
jns
jmp
mov
jecxz
push
in
ss
mov
call
and
jg
and
add
shll
mov
cmpsb
push
fdivrs
xor
mov
fildl
fstl
and
xchg
cs
lea
push
movsl
jo
jnp
sahf
mov
fwait
mov
mov
xor
mov
dec
jae
test
out
mov
dec
cltd
mov
jb
pop
jp
test
dec
mov
cmc
filds
loop
ljmp
pop
push
aaa
xlat
pop
popa
pop
inc
call
ret
lcall
out
adc
test
push
sub
ficoms
fidivrl
outsl
pop
adc
test
inc
pop
les
pop
sbb
mov
test
dec
fistpll
pop
int
ds
mov
add
das
mov
xor
lret
incl
sbb
ljmp
lds
lcall
int
xchg
cltd
loopne,pt
mov
and
pop
aam
int3
mov
rclb
cli
cmpb
add
mov
adc
or
sbbb
das
popl
add
fbstp
clc
test
sub
xchg
xor
data16
and
push
push
pop
aam
fs
cmp
mov
bound
lea
sub
pop
add
in
fnstenv
ljmp
fstpl
cmp
jmp
push
int3
ret
imul
filds
jnp
scas
fnstcw
pop
dec
pop
es
nop
into
xchg
and
mov
gs
rcll
outsl
and
adc
lea
xchg
aaa
cmp
and
sub
jnp
lods
int
jns
jae
ret
lock
fs
add
insl
int
test
push
cli
roll
inc
adc
add
fisubrs
jecxz
xchg
out
cli
enter
jns
pop
mov
fdivl
lods
mov
mov
mov
inc
faddl
inc
pop
sti
lods
mov
cli
jp
jnp
insl
inc
or
mov
sbb
iret
inc
imul
jae
inc
or
or
lock
dec
and
adc
movsb
jle
cmp
xchg
cmp
je
mov
xor
add
les
mov
pop
mov
cmpsb
cmc
aam
push
push
int3
ret
dec
fists
pop
popa
pop
adc
add
add
push
dec
push
xchg
lods
shll
lds
or
mov
pop
xor
fcom
xor
pop
pop
adc
popf
mov
push
mov
call
dec
rcrb
mov
jle
jb
push
cmc
jns
mov
adc
or
cmp
lods
nop
je
cmc
aas
orb
loop
enter
shrb
push
and
lods
pop
xchg
and
adc
stos
pop
push
pop
daa
mov
push
jns
sub
dec
dec
out
jle
popa
test
call
mov
or
imul
push
aad
adc
pop
fcomip
jne
and
sarb
or
nop
clc
pop
inc
jbe
add
insl
cmp
cmp
mov
mov
sub
adc
xchg
xchg
mov
push
imul
mov
pop
pop
call
pushf
sbb
jmp
push
mov
xchg
js
adc
sbb
js
scas
enter
ret
add
adc
push
das
dec
ss
pusha
inc
push
xlat
adc
dec
mov
inc
rcl
orl
mov
insl
mov
loopne
daa
stos
leave
imul
mov
sub
and
mov
cmp
xchg
and
gs
movsl
fists
imul
or
xchg
jmp
popf
negl
movsl
xor
dec
popf
sbb
push
loopne
stc
stc
xor
adc
or
mov
or
push
daa
in
iret
aam
call
out
imul
lds
dec
jo
cmp
adc
lahf
push
add
in
lret
ljmp
pop
xchg
jmp
imul
movsl
cmp
lret
cmc
fsubrl
add
movsb
std
movsl
cmp
push
iret
xor
mov
jo
sub
and
fsts
jle
sbb
gs
aad
fwait
lods
jecxz
xor
push
pop
je
inc
bound
rclb
cmp
repz
mov
mov
xor
mov
jo
fs
adc
stos
pushf
mov
loope
out
add
jl
pop
or
scas
jno
jb
mov
imul
jbe
call
sarb
pop
out
jmp
mov
pop
cmp
fmuls
lods
or
inc
xor
out
gs
xchg
popf
sbb
jecxz
jmp
in
pop
xor
jb
mov
ret
das
adc
cltd
mov
lcall
js
mov
inc
or
ret
ss
jl
test
imul
mov
or
add
push
and
adc
pop
sbb
les
dec
arpl
cmpsl
loope
and
lods
pop
sub
mov
popf
xchg
leave
mov
adc
or
pop
mov
cmc
in
inc
sub
pop
iret
jnp
add
dec
add
scas
push
in
inc
jmp
jmp
and
cmpsl
xchg
ss
xor
divl
aas
cmp
out
into
clc
arpl
lea
xchg
addr16
gs
popa
pop
jl
inc
aam
icebp
or
gs
movsb
lret
mov
xchg
push
cli
das
imull
cmp
shl
mov
add
adc
push
mov
cmpsb
clc
jle
out
pop
jge
cltd
mov
repnz
mov
movb
add
cs
xchg
inc
test
mov
inc
out
pop
add
inc
in
pop
aaa
fmull
mov
jns
sub
inc
es
sub
sub
dec
out
xor
jnp
inc
sub
out
outsl
movsl
jp
mov
in
jg
jo
stos
movzwl
ljmp
out
inc
inc
adc
aam
mov
sbb
sub
inc
and
lea
fcmovnb
mov
aas
pop
dec
pop
jmp
mov
xor
cmpl
loop
xor
jno
orl
mov
outsl
sub
enter
bound
insb
scas
insb
adc
and
jbe
add
into
int
xchg
push
in
or
or
inc
lock
rcll
addr16
and
xorb
adc
andb
jmp
jmp
inc
xchg
mov
mov
xchg
imul
push
or
xchg
loopne
pop
and
aad
rol
push
inc
add
js
ret
not
sarb
inc
adc
cmp
arpl
in
jo
addr16
jp
mov
push
jbe
inc
test
cmp
xor
lret
sahf
sub
bound
jl
bound
inc
and
adc
repnz
ss
popf
out
mov
lock
xor
xor
inc
dec
aam
add
mov
repz
mov
add
popa
sarl
adc
push
jl
xchg
aas
xorb
lea
xchg
lcall
mov
lea
pusha
xchg
add
imul
xor
pushf
iret
aad
cltd
nop
lea
push
lahf
imul
ret
inc
inc
add
xor
dec
dec
and
dec
cwtl
xlat
das
cmpsb
adc
jmp
or
rolb
cmpsl
lds
lock
dec
in
xchg
jl
jae
pop
cli
or
sub
cltd
fwait
mov
movsl
sbb
js
imul
sbb
leave
pop
in
dec
out
xchg
aad
sbb
outsl
js
movsl
adc
cmc
mov
test
mov
mov
pop
xchg
xchg
ljmp
in
test
sub
mov
scas
dec
fldl
inc
in
ja
push
outsb
fstpl
negl
mul
pop
cmpsl
or
ret
sub
cld
popf
dec
pop
dec
lret
cmpsl
push
mov
scas
ds
setbe
jecxz
push
adc
mov
out
xchg
fisubrs
js
out
dec
stc
divps
stos
cmp
xchg
adc
push
test
sub
inc
jg
imul
int
out
dec
cmpsl
jns
sbb
or
imul
cld
inc
jnp
fcomip
or
or
enter
enter
sbb
adc
arpl
ficoms
movsl
popl
stc
data16
lods
sbb
or
mov
or
dec
andps
add
xlat
js
outsl
imul
inc
std
jl
and
pop
mov
cli
pop
push
sub
mov
mov
lea
stos
sbb
cmp
outsb
adc
sub
cmp
icebp
lcall
sub
sbb
hlt
jmp
scas
cmc
int3
daa
cmp
lahf
mov
aam
adc
cmp
or
inc
gs
imul
fistpl
shll
xor
xchg
pop
push
cs
jmp
ja
leave
ljmp
movsl
out
jg
loope
out
ret
std
sti
lods
testl
cmp
sbb
int
mov
fs
cmpsb
shr
add
dec
add
cmp
mov
out
mov
fstpl
add
lea
push
mov
mov
adc
iret
int
movl
push
enter
loop
lcall
cli
clc
cmc
sub
insl
xor
xchg
scas
imul
mov
push
mov
xor
cmpsb
xchg
scas
repz
leave
or
mov
jl
xchg
xor
shrb
mov
pop
lods
lret
lds
leave
cli
mov
mul
mov
mov
in
dec
cld
lods
pop
jbe
and
jecxz
and
sahf
inc
add
jbe
xchg
or
jmp
insb
lods
fbld
jne
jle
adc
jecxz
adc
dec
push
dec
out
add
data16
sub
pop
and
mov
arpl
xor
jae
jno
je
movsb
or
push
out
es
and
or
stos
push
ret
sub
cmp
add
mov
sbbb
movsb
out
mov
dec
js
das
faddp
mov
cmp
mov
pop
pop
mov
lods
rcrb
scas
enter
cwtl
xchg
jl
lcall
mov
pop
xor
inc
js
pop
je
out
xchg
jo
fsubrl
daa
pop
push
and
jne
mov
mov
add
cmpsl
leave
xor
ret
fldl
filds
lock
add
mov
mov
in
shl
and
push
inc
push
fcompl
adc
clc
jmp
jne
ja
pop
ret
daa
xor
xchg
pop
adc
stc
lock
scas
inc
dec
fnstsw
sbb
jecxz
int
sbb
repz
or
xor
mov
out
pop
push
sbb
shlb
ja
mov
sub
outsl
xchg
sar
inc
xor
negl
clc
outsl
pop
pop
push
shlb
addr16
and
lret
sbb
sti
adc
cmpl
push
push
stos
jle
jmp
push
loopne
cs
push
xchg
loop
repz
lret
xor
push
inc
mov
loop
iret
test
jb
cmp
or
insl
xor
xor
out
fwait
inc
sbb
cmpsl
xchg
pop
je
test
mov
std
ss
or
xor
mov
mov
mov
scas
ljmp
test
push
push
rcrl
xchg
rol
fstp
in
mov
out
sub
mov
je
xchg
mov
push
out
test
std
sbb
push
repz
popa
pusha
ret
jecxz
cli
push
add
inc
inc
dec
jns
and
xchg
sub
ja
cmc
adc
jge
lock
mov
xor
dec
jo
fnstsw
andl
xorl
adc
push
jbe
fsubrp
ret
in
and
sbb
fisubs
cmp
lea
fiaddl
push
cli
in
jb
push
mov
mov
fnstenv
popf
dec
xchg
cmp
test
daa
clc
aad
ja
and
movsb
icebp
and
or
mov
push
xchg
xor
xor
pop
ja
cmp
xchg
mov
pop
mov
mov
mov
push
pop
mov
hlt
out
pop
xchg
pop
testb
mov
divl
gs
je
js
mov
xchg
jbe
andl
cmp
cmc
js
cwtl
test
movsb
jge
jae
ss
push
pop
adc
jo
mov
rorl
push
push
lock
pop
mov
pop
ficoml
hlt
push
mov
jnp
cmp
and
test
inc
aad
sahf
mov
lfence
lds
jecxz
cmc
stos
aad
push
adc
scas
add
inc
int3
xchg
and
push
sbb
sbb
push
test
mov
jb
loop
dec
stos
int3
leave
sbb
filds
mov
inc
jnp
xor
aaa
test
dec
mov
out
insb
cmpsb
xor
sbb
stos
adc
add
mov
sbb
mov
stc
pop
xor
dec
addr16
test
enter
out
lock
cltd
sub
xchg
mov
fcomps
mov
fildll
mov
repz
and
std
sub
roll
sub
and
push
cmpsl
lds
xlat
pop
sbb
pop
push
and
adc
faddl
bound
test
repz
jno
in
adc
mov
inc
push
faddl
cmc
inc
sub
lods
into
mov
pop
adc
xchg
stc
or
arpl
push
xor
and
filds
mov
xchg
pop
bound
and
or
mov
mov
pop
add
cld
scas
std
jge
mov
or
popf
xor
insb
add
lcall
jnp
dec
daa
inc
shll
inc
dec
xchg
hlt
mov
cli
cmpl
push
js
out
mov
xchg
inc
cmp
mov
xor
movsb
aaa
decb
xchg
sbb
cmp
das
inc
int
insb
mov
test
add
cmp
mov
out
mov
out
mov
push
mov
sbb
mov
xchg
mov
sbb
stc
insb
repz
imul
mov
inc
sub
out
mov
cmp
stos
out
mov
shrb
pop
jecxz
push
negl
aad
mov
sbbl
xchg
xchg
ja
sbb
or
sbb
out
iret
arpl
dec
push
test
test
pop
movsb
andl
cmp
xchg
pop
or
push
popa
ficoms
outsl
aad
push
test
or
notb
dec
outsb
dec
cmp
imul
test
jecxz
or
pop
pop
mov
scas
sbb
and
xlat
push
push
cmp
adc
das
shr
push
adc
popf
or
inc
data16
push
imul
out
jecxz
lds
notb
sub
xchg
ss
lret
gs
ficoms
jmp
das
lcall
pushf
out
lret
sub
movsl
jb
imul
out
hlt
jg
movsl
shr
ljmp
pop
sub
out
sub
rcrl
cmc
test
push
clc
ficoml
jg
add
xchg
jmp
mov
push
sbbb
push
ud1
mov
cld
lret
dec
sub
xchg
aam
push
push
cmp
mov
add
daa
jecxz
std
leave
inc
sub
fadds
xchg
xchg
and
movl
xor
stos
and
fwait
pop
mov
cld
sub
add
xor
test
mov
js
mov
leave
sbb
sti
jbe
test
stos
lret
sub
into
sahf
lahf
repnz
shr
enter
out
hlt
es
xchg
gs
cmpsl
ss
stos
dec
mov
xor
ja
mov
mov
adc
mov
add
mov
mov
bnd
inc
cmp
in
xchg
int
fidivl
loop
mov
fildll
pusha
xor
jg
hlt
popf
and
xchg
shll
inc
add
iretw
cmpb
push
jecxz
cmpsb
dec
aas
jle
xor
push
mov
adc
push
cs
stos
imul
call
push
iret
ds
aas
sub
out
mull
in
and
lds
xor
mov
xchg
xchg
xor
cmovns
lods
cmp
iret
pop
loopne
push
out
mov
push
lock
jl
stos
lods
jo
add
repz
xor
mov
xchg
mov
negl
inc
or
jp
repnz
or
dec
dec
jecxz
js
inc
cwtl
outsb
pop
sub
aaa
push
add
sbb
cs
ds
mov
lret
lret
fdivp
cmpsb
mov
sbb
nop
and
sub
ss
sbb
push
out
icebp
pusha
arpl
mov
into
loop
inc
call
xor
xor
add
push
test
out
pop
ljmp
adc
xchg
dec
frstor
jecxz
dec
leave
imul
adc
aam
fs
xchg
dec
fwait
adcb
push
cmpsb
fwait
cmp
or
in
pop
fstps
add
xor
cli
dec
jmp
pushf
dec
mov
inc
inc
stos
arpl
imul
mov
ljmp
or
jno
nop
jg
jnp
and
sub
fistpl
mov
sub
mov
jg
or
mov
inc
adc
adc
arpl
sbb
xchg
in
dec
jmp
jp
enter
movsl
mov
sbb
aaa
sti
in
imul
inc
arpl
shll
arpl
movsb
and
pop
adc
notb
mov
and
add
lcall
outsb
out
cmp
xchg
xlat
pushf
arpl
pusha
and
pop
test
mov
lds
mov
call
mov
jnp
inc
sbb
sub
pop
lods
pop
xchg
scas
pop
push
ljmp
xchg
ret
cli
adcl
or
and
lds
sti
jge
push
vmovntps
scas
mov
lret
sbb
adc
jb
jle
add
pop
mov
notb
mov
mov
aas
add
pop
mov
mov
fdivr
pusha
test
cmp
fists
hlt
in
pushf
lret
pop
addr16
test
or
outsb
popa
inc
das
arpl
daa
jg
dec
and
or
or
iret
push
push
gs
push
aad
gs
test
ljmp
loopne
dec
add
push
lret
stos
lcall
daa
test
push
lock
dec
mov
aas
std
testl
into
pop
loop
mov
out
jno
loopne
jns
sbb
add
mov
push
fildll
add
movsb
notb
lret
pop
lahf
fwait
insl
mov
stos
in
sub
inc
sbb
mov
aad
jbe
xor
sahf
jns
lcall
mov
mov
mov
xor
xlat
jnp
repz
dec
cli
arpl
lods
jmp
jg
add
stos
dec
stc
arpl
mov
and
popa
cmc
jns
or
push
cs
sbb
ret
mov
or
cmp
mov
inc
dec
xor
xchg
iret
popa
xchg
in
mov
loope
hlt
dec
xor
orb
sbb
hlt
mov
scas
push
push
aam
add
dec
fstl
cmp
cmp
add
aam
repnz
or
int
inc
sbbb
jecxz
loopne
add
mov
sub
jae
pop
adc
gs
ja
fstps
loopne
xchg
sbb
ds
lods
stos
mov
fdivr
mov
icebp
insl
icebp
mov
loopne
call
and
lods
repz
imul
in
orb
mov
jmp
pop
nop
mov
decl
push
ljmp
inc
add
cmp
mov
cmpb
push
xchg
icebp
jno
out
in
sbb
cli
fstl
and
lret
dec
pop
enter
repnz
stos
adc
std
mov
out
mov
xchg
xchg
ret
inc
adcb
arpl
outsb
leave
fsts
ss
or
fists
inc
jbe
push
jle
mov
rcrb
mov
lds
pop
cli
in
lret
xor
aas
rcrb
popa
mov
in
mov
aas
adc
adc
hlt
stos
xor
inc
mov
mulb
dec
ds
add
sub
mov
pop
jmp
dec
add
js
sbb
and
and
jle
pop
xchg
push
lods
pop
mov
cmp
push
fwait
cmp
movsl
jbe
and
jl
adcl
sub
mov
sbb
mov
nop
jl
mov
and
inc
mov
sbb
mov
adc
inc
fwait
sub
xor
pop
rcr
fcomps
adc
arpl
scas
mov
xchg
dec
call
lcall
js
cmc
mov
sub
push
std
jmp
and
loope
rdtsc
repnz
clc
push
add
stos
cmpsb
cmp
in
loop
in
cmpsl
mov
sarl
sti
push
hlt
mov
push
test
push
stc
and
lret
outsl
cmp
mov
xchg
aaa
or
push
jmp
sbb
hlt
jmp
inc
adc
or
push
jl
or
sete
mov
pop
pop
sub
push
int3
lahf
mov
cmp
cmpsl
add
lea
xchg
icebp
sub
and
mov
xchg
or
cmp
xlat
push
cmp
jp
jo
cmovl
sbb
das
fadd
test
mov
in
popf
movl
shr
adc
and
gs
pop
jecxz
insb
ljmp
fs
or
inc
lret
shrb
pop
iret
out
movsb
push
xchg
xlat
mov
popf
dec
repnz
outsl
mov
fucomip
adc
jo
dec
push
out
cmp
popf
mov
cmp
or
in
popa
fsubr
leave
lahf
dec
dec
push
in
xor
mov
fbstp
cmp
jg
sub
push
mov
mov
mov
mov
jg
out
xor
aas
test
andl
pop
cltd
hlt
dec
das
mov
ss
pop
mov
bound
mov
and
cmpsl
pop
ret
fsubrs
jg
rorb
cli
jge
sbb
mov
std
push
inc
jl
sbb
nop
and
repnz
xor
push
arpl
push
fldl
sti
and
shl
ret
bound
iret
mov
mov
inc
aas
pop
movsl
xchg
mov
inc
add
ds
add
lcall
adc
xor
aam
xchg
push
aas
jl
jo
sub
dec
ss
cmp
sub
insb
cld
cmp
push
add
xor
add
mov
push
add
jns
out
cwtl
mov
dec
cmp
cmp
mov
ja
pop
mov
jno
jg
cmpsb
sbb
lcall
out
cwtl
in
or
mov
repnz
jb
adc
push
cltd
mov
mov
out
aas
ret
push
cmp
iret
add
das
leave
xchg
sar
dec
loopne
jae
inc
pop
push
and
mov
cltd
jae
repz
mov
sub
int
pop
fdivrl
cli
and
mov
sti
xor
insb
push
ret
jle
enter
jl
push
pop
mov
dec
into
jno
jmp
mov
mov
mov
xchg
pop
test
sub
mov
loop
dec
mov
pushf
dec
inc
mov
popf
gs
adc
jo
jbe
movsl
repz
mov
pop
es
push
rcrl
jbe
xchg
enter
fcmovnbe
aaa
xor
or
loope
scas
rcll
sub
in
dec
sbb
fldlg2
divb
stc
filds
fnstenv
mov
mov
aaa
cltd
xor
cmpb
ljmp
adcb
roll
stos
and
mov
mov
popa
push
in
scas
mov
add
dec
scas
add
lahf
or
je
pop
scas
shll
sub
imul
xchg
pop
rclb
pop
cmc
daa
or
data16
out
and
into
jl
aam
outsb
jb
in
push
sub
dec
je
test
cmpsb
xchg
jbe
cmpsb
test
adc
loope
xor
out
or
mov
call
repz
in
jle
ljmp
sub
loopne
jns
pop
subl
cmpsb
or
aad
dec
mov
jecxz
fwait
cld
sbb
dec
shl
arpl
pop
pusha
leave
mov
and
mov
or
lock
xchg
out
fstl
inc
mov
popa
int3
es
pushf
push
push
es
push
mov
call
aad
fs
add
sbb
pushf
in
jb
mov
add
add
push
push
inc
in
adc
jae
popf
xchg
inc
add
enter
sub
mov
aam
push
xchg
pop
arpl
jle
fiaddl
aaa
call
sub
test
mov
and
sbb
pop
bound
jecxz
mov
jno
sti
je
sub
dec
lock
sbb
push
inc
and
or
inc
xor
push
ljmp
push
add
daa
mov
mov
xor
cs
jge
push
or
insb
idivb
out
test
test
inc
push
or
or
or
ret
fistps
pop
fistl
aad
push
pop
mov
addb
clc
adc
shl
fwait
mov
nop
pop
or
mov
dec
pop
push
adc
dec
jg
pop
movsb
mov
mov
loope
fidivrl
shrl
cmc
cmpsb
imul
push
stos
sti
or
pushl
subl
xor
mov
loope
jae
pop
mov
icebp
shl
imull
negl
cwtl
mov
data16
cmp
jmp
in
and
xchg
mov
add
xor
rcrl
mov
xor
test
xorl
sbb
and
rclb
push
in
in
imulb
or
push
call
les
add
jp
adc
jmp
loope
addr16
arpl
jb
sar
rorl
jae
pop
pop
adc
fstps
addr16
lcall
aam
aam
add
and
addr16
pop
mov
fistl
dec
sbb
xor
xor
or
xlat
pushf
pop
in
bound
sbb
cli
jle
inc
cmp
jp
ljmp
sahf
addr16
dec
insb
outsl
popf
andl
out
iret
cmp
sbb
inc
jo
repz
jne
mov
or
shlb
jl
cmp
mov
in
cmpsb
add
es
adc
xchg
jmp
inc
push
cmp
loopne
in
mov
in
fwait
mov
or
idiv
xor
jl
push
sub
cli
jle
push
pop
ret
mov
pop
adc
jne
fidivrs
test
mov
cwtl
xchg
decl
out
loope
addr16
es
cmpsl
lret
hlt
pop
cwtl
leave
stos
sub
mov
sbb
push
aaa
add
rep
setb
movsb
inc
or
mov
xor
xchg
xchg
sub
and
mov
into
sub
enter
inc
add
push
jmp
or
mov
add
jge
out
sub
push
call
mov
fs
sub
xchg
cmp
pusha
adc
fisttps
mov
sbb
das
and
cmp
fs
mov
ret
add
adc
gs
mov
cmpsb
stos
aad
in
pop
leave
dec
shl
and
pushf
outsl
stos
call
xor
rcrl
shl
jbe
jge
mov
arpl
lods
push
dec
sub
addr16
rcrl
int
xor
and
fwait
nop
sbb
outsb
jmp
inc
and
incl
mov
cmp
xchg
mov
es
cmp
xchg
loope
mov
cmp
mov
mov
mov
cmpb
lret
mov
arpl
xchg
ficoms
out
cmp
cmp
in
jg
stc
sbb
mov
pushf
aas
fisubrl
cmp
or
addr16
lock
and
scas
push
mov
in
cmp
repz
adc
popa
mul
jmp
fnstenv
add
testl
pop
xchg
push
loop
jmp
into
xchg
fstl
lock
lea
sarl
mov
push
in
xchg
pop
lock
cltd
fnstenv
jecxz
xchg
fs
push
mov
icebp
rolb
jnp
push
rcl
or
aam
adc
imul
pop
aad
pop
sub
inc
aam
pushf
icebp
cs
and
imul
sbb
dec
and
mov
pop
scas
repz
in
les
jae
out
sahf
in
mov
push
repnz
nop
cmp
shlb
push
data16
or
xchg
sarb
pop
pusha
sub
push
lds
cmp
mov
insb
rclb
cltd
cmp
pop
ret
sbb
stos
imul
and
ret
call
sub
xchg
or
sub
gs
or
mov
mov
repz
subb
mov
sbb
mov
fs
sbb
push
jae
aas
test
xchg
loop
adc
popa
iret
in
nop
jnp
adc
push
mov
xchg
pop
mov
dec
fnstsw
jmp
adc
in
lods
pop
xor
int
test
and
mov
mov
jle
lcall
pushf
sbb
dec
jne
add
fimull
les
xchg
dec
push
cmp
dec
fists
call
push
cmp
mov
sti
add
jecxz
lret
inc
cltd
mov
add
push
push
iret
imull
arpl
jne
jno
test
sbb
sbb
test
xchg
ret
jbe
fwait
sahf
and
ds
stos
popa
adc
int
add
pop
imulb
jns
loop
or
xchg
sub
xor
enter
push
ja
jmp
push
add
les
jbe
xchg
scas
mov
inc
lret
mov
aad
xchg
int
and
in
lcall
cmp
fiaddl
shl
test
sbb
je
int
arpl
imul
mov
stc
dec
push
pop
xlat
stos
leave
test
mov
add
andl
xchg
xor
push
jg
std
dec
mov
fwait
scas
sarb
push
cmpsl
pop
xchg
xchg
sbb
push
mov
popa
xchg
pop
sbb
mov
test
and
inc
or
xor
push
mov
out
sub
idivl
jmp
popf
icebp
pop
fidivrl
out
sti
fbld
sbb
mov
stc
cwtl
scas
cmc
adc
jecxz
xor
add
leave
push
in
push
mov
xor
ljmp
mov
mov
xor
aam
les
and
inc
rorb
lock
or
pop
pop
shlb
stc
faddp
add
cmp
mov
dec
subl
mov
dec
icebp
cmp
sbb
mov
push
pop
sti
dec
cs
decb
xchg
insb
mov
xorb
push
push
jg
faddl
pop
arpl
mov
and
add
movsl
dec
pop
insl
mov
jecxz
lods
xchg
pop
pop
adcb
add
sub
or
scas
test
mov
mov
xor
add
sub
dec
fisubrl
inc
xchg
lds
in
inc
sub
sarl
or
or
inc
mov
repnz
or
and
mov
sub
fwait
lret
test
add
mov
ror
aaa
push
mov
xor
or
push
idiv
movsb
mov
mov
adc
pop
cmpsb
mov
movsl
xor
mov
ljmp
testb
sub
fstl
cmp
push
and
ror
jp
jnp
sub
arpl
movsl
xchg
add
insb
mov
shlb
dec
inc
leave
hlt
dec
cld
xchg
pusha
and
push
or
xchg
mov
or
sub
jno
jbe
mov
js
push
pop
fdivrl
arpl
arpl
insb
lret
mov
jno
insl
imul
mov
call
pop
push
sbb
mov
mov
sarb
xchg
es
lcall
ret
sub
iret
jno
outsb
add
les
fadd
add
add
mov
sbb
into
adc
fistps
jbe
jmp
pushf
cmp
or
mov
lcall
dec
stos
mov
lods
and
jo
jnp
jge
cmp
jge
fwait
add
sub
loop
cwtl
cmp
or
sarl
ret
data16
xor
gs
sub
mov
out
iret
lock
adc
jle
rolb
mov
mov
arpl
inc
or
in
bound
dec
dec
push
inc
pop
popa
cltd
test
push
test
mov
lcall
xchg
push
sub
inc
mov
lods
or
shrb
pop
push
fnsave
dec
out
sbb
xchg
ljmp
push
ja
hlt
adc
out
shll
fs
into
hlt
cld
loop
rcrb
cli
loope
data16
xchg
mov
fxam
adc
pop
and
or
mov
cmpsl
nop
dec
jg
arpl
cmc
add
data16
dec
jb
je
sbb
mov
sbbb
fdivs
sub
mov
or
pop
jecxz
jle
jmp
cmpsl
add
mov
push
shrl
fdivl
out
xor
dec
int
and
mov
push
pop
xor
jp
ds
xor
cwtl
nop
lock
fistps
lret
mov
inc
inc
popa
outsl
popf
xchg
inc
dec
xorb
mov
mov
loopne
mov
out
and
in
jae
dec
mov
ss
bound
mov
jle
jmp
arpl
icebp
lds
mov
lret
pop
mov
bswap
cmp
push
mov
mov
aam
jo
add
mov
divl
push
jle
pop
cli
dec
adc
mov
mov
es
adc
adc
sub
jle
dec
mov
js
lret
cmp
jg
lahf
cmc
push
jns
arpl
fnstcw
add
pop
divl
adc
outsb
xchg
daa
cmc
xchg
in
sbb
xchg
fnsave
ja
push
pop
add
cmp
daa
mov
sbb
adcb
add
movsl
mov
fidivs
sub
popf
xor
cmpsb
addl
aaa
mul
mov
sbb
sahf
repz
push
mov
pop
pop
jmp
xchg
add
les
jl
and
mov
xchg
idiv
cmp
mov
sbb
inc
ror
jne
or
rorb
dec
sti
cmpsl
in
lcall
shlb
adc
adc
rorl
or
leave
test
xor
jecxz
stos
cld
es
rcll
jecxz
pop
inc
rolb
imul
cwtl
dec
sbb
jmp
pop
cs
adc
push
inc
and
jne
es
repz
mov
std
mov
loope
or
xor
mov
inc
jae
add
arpl
sub
cmp
mov
nop
or
mov
sbb
push
ss
rcll
xor
xchg
xor
rclb
in
imul
cmpsb
cmpsb
rcrl
push
jl
dec
mov
das
xor
cmpsb
imul
pop
jge
ficompl
xchg
shlb
jns
stos
out
fcomps
lea
mov
push
stos
or
lods
fisubl
lods
adc
cli
les
fwait
mov
mov
pop
push
dec
jmp
sbb
pop
and
lret
mov
pop
fimuls
jnp
mov
mov
cmp
cmp
xchg
and
dec
lds
sbbb
cmp
sub
into
dec
pop
cmc
dec
mov
cmp
xchg
rcl
fisubl
sub
lret
sub
ds
jmp
lahf
mov
fnstenv
mov
mov
popf
lcall
mov
sub
mov
mov
fnstsw
jl
cmc
scas
pop
jae
mov
jp
jne
insb
lahf
cli
scas
sbb
test
mov
shrl
ret
lcall
aam
dec
popf
and
iret
add
lea
xor
cmp
repz
jae
cwtl
loop
fisubs
mov
incl
jb
mov
jo
pop
cltd
push
jecxz
or
pop
xchg
and
xchg
inc
add
out
out
mov
aam
jmp
mov
scas
sbb
jecxz
cld
clc
movsb
dec
cld
mov
push
pop
sti
pop
xchg
xor
mov
pop
or
dec
sbb
sbb
iret
arpl
push
iret
inc
push
lea
rcrl
pop
cmp
dec
mov
pop
jns
jno
dec
ficompl
add
fisubs
scas
rclb
xchg
ja
out
nop
mov
add
push
adc
in
fwait
imul
lret
cmpsb
pop
test
jae
stos
stos
adc
ret
push
sub
push
fwait
pop
sub
int
fs
mov
outsb
js
sti
mov
dec
out
dec
leave
stos
or
pop
out
rcll
xchg
inc
or
sbb
sub
imul
push
push
outsb
sahf
dec
out
sbb
cmc
jmp
inc
cmpsl
or
sarb
ljmp
sbb
das
sbb
lcall
push
xor
imulb
inc
mov
mov
sbb
insb
jnp
jecxz
push
into
xor
xor
dec
mov
je
sbb
and
add
dec
out
clc
or
lds
pop
je
adc
sahf
imul
pop
and
fcomps
mov
push
mov
out
fnstcw
and
fucomp
pushf
cmovp
pop
cwtl
add
out
inc
jno
lcall
jns
add
xor
push
daa
push
fistps
stc
insb
aad
mov
jp
adc
lahf
ljmp
sub
mov
ficoml
sub
adc
or
je
xchg
lds
stos
pop
fcomip
std
sbb
and
xchg
inc
xchg
dec
sbb
or
adc
push
cmc
fists
out
cmp
das
and
mov
xchg
ret
test
xchg
mov
dec
loopne
mov
push
std
aam
fnstsw
sbb
cmp
add
add
sub
inc
jno
cltd
in
mov
lret
or
pop
or
xchg
cmpb
jo
mov
fistpll
mov
jg
dec
cmovle
int
pop
push
cs
adc
mov
outsb
push
xor
fiaddl
pop
loopne
aam
inc
push
xchg
inc
movsl
leave
pop
or
push
cmpsb
adc
pop
jno
xchg
in
leave
test
or
stc
popf
divb
lahf
fdecstp
ret
xor
adc
test
mov
and
cmp
dec
insb
movsb
insb
pop
jge
mov
dec
pop
jno
mov
push
mov
add
bound
cli
jnp
adc
mov
packssdw
cmpsb
sti
aaa
movb
pusha
mov
mov
lds
add
cmp
xchg
xor
in
xchg
push
or
fs
ljmp
arpl
xor
nop
roll
inc
rcrb
sub
dec
out
or
mov
notl
mov
sarl
inc
ja
shll
mov
and
mov
std
pop
call
mov
pushl
pop
push
cmp
fwait
mov
fwait
shlb
jmp
cmp
lcall
rorb
shrb
mov
loopne
dec
adc
test
gs
cmc
mov
inc
hlt
and
xchg
and
push
inc
orl
outsb
into
jbe
dec
mov
mov
push
je
mov
popl
inc
movsb
imull
adc
rcpps
jo
dec
fstpt
imul
lret
inc
xor
add
inc
and
pop
daa
movsl
ret
mov
scas
push
jae
inc
call
xor
insb
mov
push
adc
jnp
mov
cltd
dec
jne
iret
dec
mov
push
outsb
sub
std
xor
mov
mov
add
jnp
stc
idivl
ret
or
mov
adc
ljmp
sbb
shlb
inc
or
push
je
insb
js
mov
sti
enter
es
outsb
jmp
pushf
mov
jl
mov
inc
call
sub
pop
sahf
xlat
ds
fildll
jno
pop
inc
pop
jecxz
push
inc
shrb
adc
cld
call
add
imul
push
out
out
stos
mov
notb
jp
inc
add
test
hlt
adc
lret
jns
test
stos
lcall
adc
mov
xchg
jp
mov
enter
sbb
pop
xchg
lret
outsb
xchg
push
jge
int3
mov
ret
mov
jecxz
rcrl
andl
mov
cmp
mov
push
sub
inc
mov
sub
dec
aas
pop
dec
push
push
or
addr16
aad
in
in
mov
xor
jp
aas
stc
pop
cmp
in
mov
ret
loope
and
in
rcrl
add
jle
dec
ss
fcoms
out
xchg
pop
sub
xchg
inc
dec
loopne
imull
pop
dec
fistpl
leave
dec
adc
push
xor
sbb
sub
xor
sub
shrb
ljmp
test
insl
mov
push
fcmovu
out
lcall
xor
scas
push
cwtl
xchg
mov
mov
stos
xor
in
and
movsb
sub
sar
mov
add
test
inc
pusha
ja
addr16
or
iret
fcmovne
jp
jecxz
and
push
inc
xlat
testb
repnz
or
push
cmp
inc
xchg
popa
mov
mov
cmpsb
shl
rorb
pop
leave
and
popa
dec
or
icebp
xor
cmp
stc
fldl
into
adc
pop
pause
lcall
in
into
imulb
dec
mov
push
stos
dec
jecxz
mov
sbb
sbb
and
mov
out
mov
dec
xchg
push
xor
adc
or
xchg
xor
int3
es
jl
xchg
add
fdiv
ja
or
or
inc
fildl
pop
cmp
les
sub
outsb
adc
fbstp
mov
std
mov
dec
fwait
les
fstps
sbb
repz
mov
sbb
fadds
sahf
sub
inc
push
das
js
xor
int3
xchg
mov
xor
in
dec
jbe
push
mov
push
mov
dec
movsl
test
cmovs
out
jns
ficomps
js
or
cltd
mov
jmp
sub
jae
pop
fcoml
jg
sub
pop
in
dec
mov
or
pop
mov
cmpsb
lods
iret
or
scas
push
out
in
add
repz
xchg
push
nop
pop
inc
vmovlps
addb
insl
add
les
jb
insl
scas
pop
jmp
leave
add
rorl
nop
gs
insb
imul
jnp
je
fisubrs
sbb
dec
mov
jge
shrb
adc
and
xchg
pop
and
inc
std
dec
iret
fisttpl
push
movsb
test
pop
fmull
popf
mov
mov
jo
loope
dec
fstpl
loop
xchg
shlb
sub
cli
push
pop
jp
arpl
adc
shll
push
hlt
sahf
cmc
mov
sub
sti
outsl
scas
xchg
repnz
and
xchg
fnstsw
or
or
push
rclb
mov
add
jns
mov
sbb
mov
insb
sbb
cmp
sub
sarb
xor
dec
pop
push
jecxz
fnstsw
mov
orl
lds
mov
imul
cld
mov
or
jno
mov
in
adc
je
inc
test
iret
mov
or
push
jmp
push
sbbb
cmp
pop
push
pop
fcomip
lret
xchg
les
jmp
pop
pop
in
xchg
add
sbb
add
outsl
adcb
mov
dec
mov
pop
add
mov
cltd
inc
sbb
add
mov
call
jle
shll
stos
call
dec
int3
cmpsl
mov
andw
sub
std
call
or
mull
gs
xchg
xor
mov
push
cli
adc
inc
jno
fs
xchg
fildll
mov
push
mov
xchg
rorb
aam
clc
test
dec
fisttps
dec
pop
mov
in
and
clc
add
mov
ret
push
pop
cmp
push
sbb
xor
xor
negl
sub
lods
push
test
dec
divl
roll
daa
pop
push
push
test
inc
mov
pop
dec
mov
gs
int3
pop
inc
pop
shrl
rcll
and
das
bound
adc
jle,pn
mov
mov
scas
pop
mov
fldt
loopne
adc
add
mov
inc
imul
inc
cmc
ss
jle
push
dec
ficomps
jl
dec
fcom
fcompl
decb
scas
pop
imul
pop
cwtl
std
sbb
xchg
je
xchg
icebp
jae
push
mov
inc
addr16
sub
xor
pop
pop
stos
iret
inc
mov
mov
shlb
mov
sub
xor
out
out
dec
cmpb
mov
mov
xchg
mov
inc
ret
hlt
outsl
jp
add
mov
jno
inc
sub
jg
adc
gs
pusha
and
or
jmp
pop
gs
aam
jmp
rorl
dec
mov
sti
cld
enter
mov
jo
push
mov
mov
outsl
push
or
movsl
fnsave
dec
dec
fistps
or
ret
fxch
outsb
arpl
pop
and
mov
cld
out
push
mov
inc
jg
mov
jg
xchg
rcll
xchg
xchg
pop
rclb
leave
jle
push
sbb
pusha
jmp
push
xor
lods
lock
out
jp
or
jb
mov
out
mov
xchg
scas
mov
lahf
push
lods
ss
inc
sbb
fidivrl
mov
int
cmpsl
jb,pn
cmp
outsb
ret
or
mov
andl
sahf
les
mov
inc
imul
fs
adc
add
test
lods
dec
sub
xor
int
and
ljmp
repz
adc
adc
les
ljmp
push
loop
and
fists
mov
mov
sbbb
pop
fbld
pushl
xor
test
loope
aas
sub
scas
lahf
inc
mov
ret
push
mov
dec
xor
and
loop
mov
push
fisubl
ss
and
xor
mov
jae
pop
push
jno
int
sbb
test
sub
adc
xchg
aam
xchg
mov
pop
push
xlat
into
leave
test
fnsave
pop
insb
sub
cmpsl
into
lahf
ds
movsl
cmp
outsl
mov
xchg
imulb
xchg
in
adc
push
inc
mov
mov
jge
push
ja
sub
mov
enter
je
mov
leave
lcall
or
hlt
fwait
ds
and
lahf
pusha
int
push
xchg
pop
xchg
call
mov
and
fstpl
fimull
adc
outsl
lock
rorb
dec
cmpsl
jo
test
arpl
dec
xor
ljmp
ljmp
push
sysexit
cld
pop
mov
pop
jmp
dec
cli
cmp
fsubl
cli
je
mov
or
mov
push
adc
daa
enter
or
lret
sbb
jbe
dec
dec
rol
jl
mov
sti
into
sbb
fsubrl
inc
andl
cli
mov
and
leave
add
mov
adc
dec
jle
pop
or
fcoms
arpl
sub
mov
jp
aaa
sbb
scas
aad
repnz
jle
jae
jo
sub
fwait
outsl
jo
inc
sub
loope
pushl
push
subb
nop
xor
popa
add
aaa
or
xchg
push
lods
add
in
call
xor
test
out
xorb
adc
mov
and
xor
pop
mov
jae
sbb
add
lock
adc
cmp
jae
in
scas
repnz
fidivl
mov
push
or
mov
sub
fnstenv
adc
ljmp
sbb
jnp
loope
jl
adc
sbbl
dec
mov
les
jne
mov
jae
ds
enter
sub
pop
jmp
mov
pop
lods
nop
ds
adc
fcoml
rcrl
ret
and
jb
xor
out
xor
sbb
sub
or
xor
insb
mov
pop
push
pop
fsubrp
bound
pop
sar
xchg
mov
iret
xchg
das
in
pop
sub
popf
stos
insl
jno
imul
xchg
jmp
nop
or
bound
dec
scas
insl
pop
lock
or
int3
aam
mov
das
mov
mov
outsl
xchg
outsl
pop
test
mov
out
popf
add
sahf
dec
mov
cltd
sub
pop
mov
xchg
jl
orb
iret
sub
movsb
out
cltd
mov
sub
push
shll
loopne
leave
aad
roll
enter
test
je
mov
std
fcomps
mov
sbb
pushf
rclb
inc
lret
adcb
test
popa
pop
mov
and
jl
in
frstor
fadd
pop
jl
fidivs
in
pop
mov
aaa
and
add
icebp
jge
cmpsl
gs
fwait
jle
xlat
outsl
sub
mov
out
sub
cmc
mov
dec
push
dec
ret
movsl
or
mov
cmpsb
push
mov
xchg
push
imul
leave
mov
xchg
sbb
add
adc
aam
das
popa
or
pop
xor
push
adcb
test
out
lret
repnz
fsubl
pop
pusha
sub
xchg
repz
sub
jge
test
push
add
out
mov
enter
in
in
xor
das
jecxz
cwtl
aaa
and
push
loope
jne
dec
and
cmc
lds
mov
cmp
sub
add
add
rcll
cli
push
xchg
dec
icebp
test
inc
ficompl
cld
mov
jecxz
jo
dec
nopl
mov
repnz
mov
inc
jbe
mov
add
sbb
push
adc
add
mov
mov
jno
push
repz
pop
fwait
movsb
lock
push
stc
fcoms
data16
imul
push
cmpsb
sbb
xor
mov
cmp
adc
xchg
inc
xchg
imul
push
jae
fdivrs
bound
pushl
lret
stc
add
cmp
dec
popf
xchg
jb
mov
or
push
pop
xor
scas
cli
cmc
jmp
icebp
mov
icebp
cmc
icebp
es
cmp
jp
jbe
push
mov
mov
dec
xor
adc
into
dec
xor
cmp
fdivrl
insb
mov
lahf
push
scas
outsb
stos
test
jmp
imul
sub
in
push
and
mov
test
jge
mov
insl
enter
adc
sub
mov
xchg
inc
cmp
outsl
sbb
sti
mov
and
mov
xor
push
xor
int3
gs
sarb
fcmove
xchg
push
bound
jno
ljmp
sbb
or
jno
cld
test
push
rclb
repnz
lock
inc
sbb
ljmp
scas
xchg
fs
push
sbb
sarl
sbb
in
ljmp
xchg
sub
inc
aam
push
pop
out
cld
sbb
mov
or
scas
xchg
pop
test
in
fstps
inc
repnz
daa
inc
js
mov
into
int3
lods
push
insb
add
addl
mov
loope
sub
jg
and
xchg
cld
xor
mov
les
inc
sbb
push
daa
ljmp
neg
mov
push
inc
out
cli
xchg
jl
imul
fsubs
out
mov
xchg
jo
aad
sbb
mov
rcrb
add
icebp
mov
mov
pop
dec
int
xor
xchg
sbb
mov
xlat
mov
xchg
lods
add
addr16
inc
mov
loop
lds
pop
or
aas
rcll
icebp
xchg
mov
ret
cwtl
fidivrl
ss
mov
add
push
fisttpl
stc
push
popf
stc
lahf
cmpsb
filds
pop
mov
nop
or
dec
dec
add
jbe
pop
push
cmp
inc
scas
push
stc
and
cli
popa
jnp
je
jge
adc
xchg
sahf
cmp
mov
jmp
inc
mov
bound
stos
xchg
inc
arpl
sahf
push
or
fwait
sbb
rorl
push
out
into
xor
mov
test
sbb
dec
mov
inc
add
jmp
in
sub
data16
inc
xor
pushf
push
hlt
push
stc
dec
mov
pop
adc
xor
lock
mov
in
push
mov
out
xchg
adc
lahf
cwtl
mov
push
fsubrs
repz
sub
subb
jl
push
push
dec
fstpl
push
enter
dec
fcomps
xorl
and
inc
fsubs
xchg
mov
aas
mov
inc
adc
mov
adc
lcall
jnp
repnz
fwait
lret
sbb
pop
jp
xchg
fisttps
mov
push
and
sub
xor
pop
xlat
jnp
dec
cmp
mov
mov
hlt
xor
and
and
stos
aad
jmp
mov
imul
pop
xor
sbb
jb
push
push
mov
out
ds
imul
fimuls
ds
ret
jo
sbb
das
mov
jns
lcall
lea
and
mov
and
add
or
out
sbb
imul
add
sbb
xchg
add
insb
pop
sahf
sbb
adc
xchg
ds
clc
leave
jle
cmc
cmp
jno
les
scas
out
stos
bound
mov
les
jle
imul
cmpps
shrl
insb
push
push
adc
add
jae
mov
or
fdivl
call
jecxz
repz
mov
out
lock
lahf
lods
jmp
inc
bound
sub
shll
inc
sbb
jbe
scas
out
adc
cld
ficoml
outsl
or
ret
gs
add
cmp
cmp
outsb
mov
cmp
movsl
pop
call
mov
outsb
sbb
lcall
nop
cmp
cmp
xor
sbb
jno
pop
loop
sbb
cmp
test
enter
or
mov
test
out
stos
adc
fstpl
mov
lds
repz
pusha
rorb
xchg
cmp
scas
xor
mov
xchg
push
mov
cmp
das
out
mov
adc
cmpsb
mov
or
call
int3
stc
xor
dec
mov
pop
ljmp
push
mov
das
leave
xorb
add
enter
xor
inc
shll
test
adc
sbb
fiadds
test
push
les
or
sub
add
xchg
rcrl
xchg
cmpsl
inc
push
movsb
push
mov
mov
xor
adc
cmp
out
jp
daa
cli
lret
pop
cli
mov
lcall
ja
xor
stc
dec
or
xor
test
rorl
cld
lods
xchg
dec
ja
cs
cld
int3
lret
inc
add
imulb
jl
test
jo
ja
inc
mov
push
dec
ucomiss
adc
mov
pop
cmpsl
outsl
movzwl
inc
sbbl
push
xor
cmp
das
fisubrs
int
push
dec
daa
cmp
aam
jecxz
lcall
sub
pop
or
add
add
pop
cli
push
imul
adc
pop
adc
mov
mov
aas
mov
inc
and
fildll
adc
in
xor
pusha
sbb
lret
dec
add
lret
incb
sub
mov
jecxz
out
roll
dec
sbb
jg
xor
es
sbb
fstpl
inc
pop
mov
inc
dec
in
ret
cmpl
scas
cmp
aas
js
sbb
fcoml
inc
insl
cmovge
fisubs
aad
and
mov
and
cmp
dec
decl
fdivs
inc
cli
xchg
leave
push
in
cmpsl
insb
adc
fwait
ja
xor
addr16
push
xor
push
sbb
in
mov
imul
or
mov
vcvtps2pd
insl
mov
lcall
xchg
sbb
mov
iret
xchg
je
jl
sbb
sub
popl
shl
mov
mov
fmul
mov
mov
jns
add
loopne
mov
in
lahf
out
xchg
cld
sub
lea
pop
mov
nop
dec
mov
xor
lahf
rol
cld
dec
outsb
mov
mov
cmc
pop
mov
and
sar
data16
test
outsb
push
sub
push
dec
psadbw
mov
jnp
jg
inc
ljmp
dec
add
jo
push
in
rcl
add
test
or
idivl
adc
push
or
inc
pop
les
inc
subl
jns
loop,pt
mov
rclb
or
lcall
mov
sti
mulb
jl
sbb
es
and
nop
add
frstor
xchg
ja
or
lock
jae
je
sub
xor
mov
clc
inc
or
mov
jne
pop
pop
notl
loopne
es
outsl
leave
adc
adc
pop
xor
test
imul
mov
pop
pop
data16
sarl
lods
cmpsb
cwtl
int
push
aas
nop
pop
mov
jb
add
jp
and
mov
ljmp
int3
mov
cmovl
jge
ret
xor
inc
repnz
or
fwait
pop
cmp
mov
mov
xchg
mov
clc
loopne
popa
mov
push
mov
jbe
pop
xor
stos
push
inc
push
adc
int3
pop
enter
jl
fmuls
adc
aad
dec
dec
loope
cli
fisttpll
mov
or
xor
test
dec
leave
push
je
or
popa
stos
lahf
lcall
pop
mov
pop
scas
cltd
jb
mov
sbb
ljmp
daa
into
addb
inc
xor
push
xchg
push
or
cmp
div
xchg
int
roll
outsl
sub
mov
ds
je
and
imul
pop
and
mov
push
lods
repnz
out
and
fiaddl
sub
fs
jl
ret
cmp
or
repz
mov
jbe
cld
rclb
stc
ficoml
ss
ss
add
pusha
push
sub
push
inc
incl
xchg
cwtl
mov
cmp
dec
pusha
stos
jp
mov
cmp
xchg
sbb
lcall
mov
aaa
repz
inc
into
inc
jns
jae
lahf
movsb
popa
in
xor
dec
push
enter
or
or
push
mov
push
addr16
add
neg
adc
adc
adc
or
push
jg
xchg
push
lcall
ja
mov
icebp
loope
ljmp
push
cmp
or
mov
shrb
pop
movsl
jo
imul
xchg
jae
rcr
mov
or
and
dec
int
mov
repnz
cmp
lcall
or
repz
sub
andl
inc
push
push
insl
jne
dec
xchg
pop
cmp
xchg
arpl
mov
faddl
push
mov
pop
in
jnp
inc
imul
cmp
xchg
xchg
out
movsl
inc
loopne
scas
or
lea
in
mov
ds
gs
mov
imul
mov
mov
rcr
js
test
mov
mov
push
out
inc
imul
mov
mov
das
ljmp
or
cmpl
mov
lods
jb
stos
test
push
and
in
mov
adc
xor
cmc
popa
lea
das
scas
adc
mov
sbb
and
imul
into
pop
mov
jg
mov
cmp
call
or
cmpsl
mov
int3
sub
add
xchg
pop
adc
cmp
push
pushf
inc
mov
xchg
fs
repz
ds
lods
leave
enter
or
xor
shll
lods
mov
xor
in
fstpt
push
dec
xor
inc
les
cs
insl
xchg
push
cmp
test
lods
inc
js
add
inc
aam
lods
mov
mov
push
xchg
ror
sub
loope
inc
divb
mov
leave
xlat
mov
add
into
dec
es
xchg
aas
hlt
jnp
aad
sub
insb
loope
cmp
stos
cltd
mov
in
or
mov
fistl
push
fcompl
scas
jp
or
ljmp
and
aaa
mov
cmp
adc
dec
dec
stos
mov
mov
in
or
mov
scas
sbb
cmpl
popa
push
call
inc
cld
jnp,pn
mov
daa
dec
mov
mov
inc
jne
mov
mov
js
pushf
in
jae
xor
rcl
sbb
rorb
and
aas
leave
sub
cmpsl
sbb
movsb
dec
shlb
cmpsb
dec
jae,pt
jp
es
or
sti
pop
mov
aad
mov
lds
cmp
jl
loop
fbstp
inc
push
gs
sti
cmp
repnz
push
ss
cli
adcl
mov
mov
sub
lcall
sti
pop
clc
sbb
aad
outsb
jbe
orb
fiaddl
xchg
out
and
sbb
push
sub
cld
fsts
jp
rcl
adc
shlb
pop
jge
cmp
imul
dec
daa
clc
std
stc
push
pop
leave
ret
cltd
shll
push
repnz
xor
fisubs
shlb
jl
cmpl
sbbb
cs
test
nop
xor
xchg
cmp
lret
inc
jl
lock
and
mov
ret
popa
out
jg
test
out
xchg
pop
push
das
sub
mov
lea
push
inc
inc
xor
mov
and
mov
or
cmp
inc
jne
pop
cmp
mov
shr
inc
mov
jmp
sbb
loope
test
loop
jle
repz
scas
fs
xor
notb
push
test
clc
in
roll
mov
mov
lea
arpl
mov
add
jmp
ja
pop
inc
outsb
fstp
push
jge
test
enter
int3
cmp
roll
inc
pop
xchg
lret
dec
mov
adc
sub
push
sub
xchg
out
xorb
pusha
and
lock
loope
fisubs
insb
shrb
sub
aam
das
test
or
inc
addr16
lock
or
inc
or
ficoms
mov
jns
lods
lods
in
push
out
cwtd
adc
mov
adc
rorb
add
push
xchg
push
loope
stos
sub
fstpt
add
pop
cld
pop
repz
mov
dec
cmp
mov
push
mov
in
movsb
in
lcall
jb
int3
cmpsb
and
test
sub
popf
outsl
xor
rorl
cmp
std
jge
shr
cltd
add
mov
movsl
add
leave
mov
mov
adc
mov
and
lds
xchg
repnz
ds
in
xchg
dec
fdivrl
gs
mov
into
pop
stc
cmp
fadd
movsl
push
sti
sbb
in
iret
flds
lods
mov
add
jno
shlb
jb
inc
lret
dec
decl
mov
clc
cs
push
xor
inc
mov
repnz
lods
call
dec
push
push
push
dec
push
subb
mov
in
dec
pop
cmpsl
jns
dec
xor
push
or
push
mov
adc
dec
push
mov
xchg
andb
aas
lcall
stos
xchg
cli
mov
shll
mov
stc
stos
inc
ret
xchg
loope
out
dec
loopne
aaa
sbb
fisttps
pop
lds
cwtl
xor
add
scas
adc
leave
dec
mov
dec
ret
xchg
mov
stos
faddp
mov
inc
mov
add
mov
cli
dec
adc
push
pop
popf
ds
mov
and
stos
cmc
jno
jg
test
insl
leave
push
xchg
push
mov
gs
mov
dec
imul
xor
sbb
xchg
cmp
sbbl
lret
pop
inc
ss
in
mov
pop
mov
ja
mov
fstl
popf
addr16
mov
loope
adc
xchg
jp
mov
push
push
frstor
cmp
movsl
xor
xchg
jnp
pop
xchg
in
loope
fstl
add
decl
cwtl
cwtl
js
clc
int3
std
push
pop
mov
or
jg
inc
jp
mov
pop
pop
sbb
pop
sti
je
dec
int
xchg
mov
mov
mov
cltd
out
sarl
dec
std
mov
fists
and
cmp
jl
mov
jb
jp
lahf
sbb
sbbb
mov
lods
arpl
in
mov
inc
and
adc
cltd
test
jo
orb
sub
jns
sub
movsl
pop
sbb
popa
out
jp
aas
cmp
xchg
loopne
jns,pt
dec
dec
mov
xorb
in
adc
icebp
scas
pop
mov
pop
mov
lods
fldl
and
mov
mov
fwait
jo
and
mov
pop
fildl
nop
test
aam
es
fwait
aaa
mov
mov
lret
cltd
sbb
lds
xchg
movsb
daa
test
faddl
add
sarb
test
enter
mov
fcompl
inc
xchg
dec
jl
enter
shr
mov
call
mov
lahf
dec
inc
inc
in
cs
jns
sbb
jmp
cmpsb
xor
mov
nop
mov
xchg
out
inc
and
je
and
sub
test
fists
fucomip
sub
push
push
pop
sub
mov
add
ljmp
xor
cld
hlt
fdivrl
inc
sub
das
iret
int
inc
adc
jae
or
mov
adc
or
cwtl
add
in
aaa
pop
test
xchg
movsl
or
std
outsl
insb
and
clc
xor
in
xchg
or
les
jnp
jns
arpl
ret
mov
pop
inc
push
cs
xchg
cld
aaa
inc
stc
out
push
sbb
mov
insb
lods
cli
mov
out
mov
aas
inc
incl
adc
mov
outsl
loop
dec
movl
call
int
sbb
push
mov
jg
ds
les
vmread
mov
pop
ficompl
mov
sbb
sub
mov
cli
hlt
pop
fstl
mov
shrb
dec
lods
imul
push
loopne
dec
ljmp
int3
scas
ds
popa
test
ret
lods
xlat
xor
clc
test
xchg
cmp
xor
fldcw
ret
cmc
sub
outsl
mov
fisubs
mov
push
mov
cld
fs
int3
pushf
mov
int3
mov
lock
pop
add
in
ret
outsl
dec
add
shrl
jbe
mov
mov
cmp
ss
xor
jae
das
add
rcrb
mulb
and
loop
std
push
dec
andl
sbb
shll
mov
lods
mov
add
cmc
outsl
mov
xor
dec
sti
sub
out
cmc
push
in
addr16
jg
or
fucomip
inc
xor
adc
movsb
pop
popa
mov
fstl
divl
sbb
sbbl
mov
mov
add
mov
data16
std
cmpsb
or
cmpsb
lods
call
inc
stc
mov
mov
leave
or
and
sub
mov
xchg
or
lods
lods
lret
xlat
jle
inc
mov
mov
fsubr
jbe
pusha
or
jns
fists
xchg
push
pop
je
and
xchg
push
and
mov
cli
cmp
mov
aas
gs
outsb
nop
je
negb
mov
mov
and
mov
mov
addr16
lods
sub
inc
mov
adcb
xor
addr16
sub
and
cmc
js
je
testl
int
sti
je
jns
lcall
sbbb
sbb
or
push
inc
inc
es
andb
xor
outsb
addl
adc
or
lea
pushf
fiaddl
push
lret
push
mov
mov
test
push
mov
es
pusha
pusha
cmpsl
push
mov
movsb
std
ljmp
and
lret
pop
lcall
stos
xor
cmp
fmuls
mov
outsl
scas
ss
push
add
mov
mov
rol
sbb
jmp
mov
lcall
icebp
mov
cmp
adc
push
mull
addb
jae
dec
pop
sub
xchg
inc
cmp
fildl
imull
pop
std
stos
ljmp
stos
mov
mov
xor
pop
adc
jb
ds
xchg
push
aas
or
fdivs
ds
pop
adc
int3
mov
sbb
fldl
xor
lahf
mov
mov
jge
ret
iret
xorl
dec
mov
add
jl
mov
in
loopne
test
cli
cmp
idivl
push
inc
imul
mov
xchg
pushf
int3
enter
lea
mov
stc
sti
mov
push
adc
inc
das
pop
or
imul
dec
add
cs
xor
push
dec
repz
sti
inc
xor
adc
dec
xchg
adc
push
sahf
mov
cmp
mov
in
inc
add
jno
xlat
xor
sbb
or
push
sbbl
mov
push
cltd
and
sbb
loopne
push
pop
jae
and
sbb
jp
cli
fwait
rcr
stc
dec
movsl
sti
fiaddl
or
xchg
ret
pop
cmp
in
out
mov
jmp
inc
sub
dec
or
popa
push
testb
mov
pusha
mov
and
mov
dec
xchg
mov
andl
mov
add
inc
ss
jmp
test
or
pop
in
lods
add
sbb
mov
push
lahf
add
dec
addr16
fldcw
out
pop
daa
test
movsb
push
sub
inc
fldt
jge
std
dec
push
mov
aam
fwait
mov
sbb
outsl
mov
add
or
sbb
lret
jbe
ret
call
loopne
es
cmpsb
add
cs
fwait
jno
aam
sbb
repnz
and
test
test
aad
test
arpl
out
push
inc
pushf
shlw
mov
xchg
jg
rol
lods
sbb
nop
jo
psrlw
lods
pop
mov
aad
sub
movsl
mov
dec
or
xchg
add
add
fisubs
xlat
push
out
xchg
xchg
jl
mov
aad
stos
scas
lods
out
movsb
cwtl
xchg
jns
imul
adc
jo
and
icebp
pop
jbe
xor
sbb
test
adc
inc
dec
outsb
mov
mov
jmp
cmpsb
lret
push
push
movsl
sbb
mov
bound
cmp
aad
xchg
lods
mov
sbb
aaa
mov
ljmp
aad
shr
mov
mov
mov
sub
pop
pop
xchg
mov
xor
call
inc
imul
mov
xchg
sahf
addr16
mov
adcb
xchg
push
rcrb
xchg
int3
jne
push
aam
into
jp
or
mov
mov
out
xchg
mov
xchg
and
xchg
outsl
jae
btc
fcmove
mov
std
xor
test
jmp
fwait
jne
mov
insl
insl
movsl
add
cmp
clc
xchg
out
mov
pop
in
icebp
jns
push
dec
dec
cmp
aaa
inc
mov
int3
pop
insl
lods
aaa
or
inc
rcrb
mov
and
mov
add
pop
int
out
jecxz
push
mov
fcomp
xor
lret
inc
push
aas
jl
and
pop
mov
lahf
lahf
frstor
iret
js
dec
sub
adc
into
bound
inc
lcall
aas
dec
das
mov
mov
clc
cmp
das
add
adc
stos
add
cvttps2pi
popf
or
or
mov
push
or
sbb
lcall
pushf
mov
popa
jp
cmp
mov
into
stos
jno
mov
nop
stos
mov
cmp
xchg
and
fstpl
jmp
sbb
out
out
icebp
mov
mov
in
hlt
lea
mov
test
cli
cmp
dec
lcall
enter
sti
sbb
push
or
lods
test
scas
adc
adc
adc
dec
cmpsb
jge
mov
cmp
leave
and
cmp
and
mov
add
fnstenv
fmuls
sbb
jmp
mov
out
subb
or
lea
enter
mov
pusha
inc
inc
cwtl
gs
sarb
mov
xor
scas
mov
stos
fistl
mov
in
or
xor
jnp
roll
jae
mov
sub
imul
mov
insl
pop
call
xchg
pop
sbb
imul
cmp
repnz
pop
mov
ret
int
and
push
cmc
sti
jp
rclb
pop
ja
into
dec
xchg
adc
mov
adc
add
add
push
mov
xor
mov
lods
cs
sbbl
arpl
bound
mov
mov
fs
sub
icebp
test
sahf
in
mov
scas
push
cmp
and
pop
or
and
sbbb
mov
pop
mov
lods
outsl
jmp
popa
clc
mov
xor
cmc
out
pop
mov
jo
frstor
loopne
stc
mov
scas
scas
mov
xor
das
pushf
push
or
insl
pop
rcll
sbb
ja
pop
sub
mov
dec
xor
or
cmpl
andb
adc
cs
stc
test
or
jae
pop
mov
sbb
cmp
std
push
aad
cli
cmc
xor
add
xchg
jbe
or
jns
and
sbb
xchg
loopne
imul
fwait
in
mov
push
fcompl
inc
jge
arpl
pop
jge
add
loop
adc
adc
xchg
dec
dec
jbe
push
fmull
ds
or
xchg
cld
inc
pop
pop
mov
out
repnz
icebp
iret
test
cmp
add
mov
or
sbb
fistps
cli
xchg
mov
jno
lods
ret
enter
cmp
mov
mov
push
inc
mov
mov
pop
out
icebp
dec
cmpl
imul
rorb
in
jg
mov
sbb
mov
inc
push
dec
sbb
sarb
jmp
rcll
dec
andb
mov
jg
pushl
notb
xchg
dec
fsts
mov
lds
pushf
lds
notb
lret
push
xor
ror
nop
lahf
repnz
cli
aaa
movsb
ds
sub
pop
ja
dec
les
lods
adc
push
xorb
ret
jne
enter
xor
push
or
push
push
jge
int3
push
je
push
inc
and
adc
mov
pop
xor
sbb
xchg
sub
adc
mov
lahf
pop
in
testb
add
addb
jg
add
mov
jle
add
jnp
cmpsl
or
stos
sub
out
xchg
cmpl
sbb
sbbb
cs
push
cmp
sub
outsb
or
lods
add
mov
in
ja
loop
pushf
outsl
call
push
adc
xor
mov
pusha
pop
sub
ss
pop
imull
sahf
pop
mov
xor
sbb
inc
push
adc
and
sahf
mov
and
das
sbb
out
xor
aad
aaa
jp
outsb
int
inc
hlt
ret
push
xchg
popf
and
adc
fwait
jmp
xchg
sub
lock
mov
xor
ja
fnstenv
scas
sub
dec
fcmovnu
aas
jge
repz
xor
push
addr16
nop
push
push
mov
lock
push
pop
hlt
aaa
mov
js
aam
push
pusha
cld
pusha
inc
add
pop
push
rolb
outsl
adc
add
cmp
arpl
fisttpll
sbb
xchg
fadds
in
cmp
loop
or
out
xchg
sbb
mov
mov
and
inc
nop
repnz
mov
or
imul
mov
and
ret
dec
je
mov
sbb
jno
sub
or
add
clc
push
ror
insb
cmpb
add
sub
mov
cmp
in
jns
and
mov
push
mov
sahf
insl
test
inc
cli
push
cld
add
jns
out
fstpt
cli
lds
decl
rcll
arpl
mov
sub
and
lods
add
mov
int3
add
dec
leave
lret
lods
push
in
dec
mov
push
cmp
adc
lcall
and
push
sbb
inc
fldl
add
ficoms
imul
js
pop
sub
in
div
jo
and
and
out
outsl
out
shlb
out
inc
mov
in
fnstsw
inc
mov
lock
pop
push
mov
roll
xchg
in
xor
mov
dec
push
scas
jo
mov
jl
imul
jmp
aam
add
out
mov
into
imul
test
mov
xor
xchg
mov
sti
imul
ret
adc
repnz
and
scas
fucom
cmpb
shll
mov
or
rorl
or
sub
mov
popf
and
xchg
jae
inc
mov
aas
jle
fst
les
mov
push
loop
adc
sub
or
xchg
xchg
mov
pusha
jge
or
inc
or
xchg
lods
and
shll
popf
cmc
push
gs
or
aad
pop
add
fwait
xorl
out
cmp
pusha
cmp
xchg
outsb
cltd
and
lret
aas
arpl
pop
mov
test
xchg
inc
fld
sub
push
push
inc
push
xchg
lods
fists
mov
aam
mov
ss
or
lea
rorw
or
mov
mov
in
int3
xor
and
mov
xor
out
mov
or
mov
or
out
enter
dec
lret
cmpl
xchg
pop
pop
lods
lea
insl
scas
pop
idivl
inc
jmp
loope
aam
outsl
ret
addl
sbb
es
fisttpll
repnz
lds
inc
and
xchg
loope
cmp
fadds
xchg
cs
lea
lods
popa
dec
push
push
add
pop
mov
and
and
mov
sub
ss
ret
mov
lea
cs
fiaddl
arpl
roll
xor
rcl
scas
jae
xchg
mov
fs
dec
stc
mov
jmp
test
nop
jb
push
icebp
ja
push
popa
and
daa
pop
xchg
mov
push
lock
int
lock
pop
mov
cli
mov
stos
inc
test
fbld
bound
xor
mov
jmp
pusha
xchg
rcll
cmp
mov
nop
jg
mov
cld
push
fwait
mov
adc
imul
popf
sub
imul
mov
mov
sbb
pushf
imul
push
divl
ror
cmpsl
in
imul
cmpsl
addb
mov
xchg
cltd
rcll
sarb
cwtl
fwait
xchg
data16
xchg
sbb
jns
fnstsw
mov
jl
idivl
fcomip
and
adc
inc
inc
cld
push
xchg
or
fwait
call
cmpsb
outsl
jne
addr16
test
je
dec
sbb
inc
sub
cmc
cmpsl
xor
shl
js
ljmp
in
das
mov
dec
loop
push
mov
in
jg
ja
std
pop
aad
nop
sub
or
pop
leave
xor
aam
mov
and
insl
dec
scas
fnstcw
movsl
sti
out
sbb
aad
stos
adc
or
lahf
push
inc
sub
enter
cmc
xchg
adc
loope
rcrl
test
sub
mov
test
or
mov
pop
testl
stos
add
rolb
inc
pop
mov
pop
loopne
xchg
push
pop
bound
loope
and
and
jecxz
add
jg
or
cmp
mov
mov
ret
cld
es
aas
pushf
pop
mov
out
loop
aam
add
xor
imul
xor
call
xor
fdivr
ret
cli
mov
mov
test
dec
int3
push
jbe
cmp
out
adc
sub
rorl
and
dec
xchg
sbb
dec
mov
stc
or
loop
mov
xchg
cmp
cltd
orb
jmp
mov
scas
in
pop
fdivrs
jl
and
hlt
push
aaa
mov
fcmovb
jbe
cmpsl
pop
fcomi
mulb
inc
std
popf
jne
sbb
xchg
xor
pop
mov
outsb
in
imul
pop
lea
mov
push
lahf
jbe
pop
insl
add
cmpsl
int
push
in
out
push
and
roll
mov
cmp
push
mov
jno
mov
movsl
mov
mov
push
rolb
xchg
xor
sbb
fs
mov
dec
pop
pop
daa
jle
out
mov
inc
pop
mov
in
outsb
cmc
pop
pop
xchg
push
pop
lcall
xchg
jns
inc
fmull
mov
js
sbb
stos
jmp
xchg
addr16
sbb
fcomi
testb
lods
sub
cmp
add
xchg
shl
fnstsw
mov
testb
test
sub
mov
std
mov
and
mov
imull
icebp
es
out
add
fs
inc
and
sub
les
inc
jecxz
int
imul
jns
mov
adc
cmp
sbb
cmpb
cmpb
push
xlat
out
scas
xor
add
xchg
sbb
xor
push
cmpsl
test
adc
mov
test
add
lea
insl
repz
pop
push
pop
test
mov
inc
sub
mov
sbb
sub
push
subl
mov
scas
ja
enter
mov
jbe
es
mov
xor
ja
mov
mov
ss
adc
adc
push
scas
scas
fwait
push
enter
jae
add
test
sub
in
fcmovne
loopne
jne
xchg
push
imulb
sub
ficomps
rcrl
ljmp
mov
xor
outsl
mov
lcall
test
or
mov
sub
adc
test
jb
dec
imul
mov
sub
jbe
jge
or
sbbb
fnstcw
cmp
pop
mov
adc
insl
hlt
pop
or
jbe
and
and
lods
insl
mov
adc
mov
add
sub
lret
xor
shl
out
sbb
test
not
lret
adc
push
int
push
xor
fldenv
mov
xchg
inc
ret
adc
mov
jl
pop
cmpsb
pop
int3
dec
loope
sub
movsb
cs
cmpl
bound
mov
lods
ljmp
mov
clc
jae
push
sti
aaa
or
jo
adc
popa
inc
inc
pop
fucomp
and
inc
sub
jmp
pop
mov
pushf
or
in
pop
loop
dec
sub
in
lods
mov
cli
hlt
out
jne
ds
test
cmp
and
sahf
enter
mov
jb
mov
in
xor
sbb
or
adc
push
mov
popf
add
arpl
popf
movsl
push
inc
mov
sub
mov
xchg
xor
ret
pop
cli
and
mov
outsl
pusha
pop
sti
test
mov
lods
push
sub
mov
xlat
ss
inc
sbb
test
jp
pop
jmp
cmp
sbb
mov
fstpt
jo
shlb
scas
rcrl
frstor
fcmovu
mov
sti
jno
int3
icebp
sbb
jno
mov
adc
xor
in
sub
lret
ja
cltd
sbb
fldt
pop
push
and
xor
xor
and
rcrl
icebp
jg
js
mov
test
cmp
loope
test
adc
inc
mov
mul
push
out
loopne
jae
pop
and
fstl
pop
shrl
imul
mov
jo
mov
xor
mov
in
pop
lret
loope
js
andb
mov
xor
cmp
mov
repnz
addr16
push
xlat
ret
int3
mov
in
arpl
jno
add
fsubs
push
and
repz
fldcw
movsb
jne
cmpsb
jge
dec
test
sbb
sub
loopne
movsl
pop
cmp
cmp
pop
xor
imul
fs
mov
add
stc
test
subl
push
add
add
test
lods
ret
pop
xchg
test
mov
cmp
xchg
lret
leave
repnz
push
int
jns
jne
scas
repz
out
iret
std
outsl
sub
adc
cmc
xor
aaa
pusha
push
jg
and
addr16
repnz
push
jle
incb
repnz
sbbl
fdivrs
add
add
xorb
lea
pop
and
andb
stc
mov
or
addb
adc
mov
cmp
add
mov
mov
cmp
mov
or
insb
cltd
in
sub
xchg
inc
or
lods
ret
test
sbb
xchg
lret
pop
mov
push
xlat
and
adc
rorb
out
xchg
lea
stc
inc
xchg
lock
xchg
lret
cli
loopne
shl
mov
inc
mov
stc
mov
test
add
repz
xor
aam
mov
sti
nop
xorb
push
jle
cmp
or
adc
and
or
mov
fxch
mov
pop
xor
adc
adc
popf
lock
and
jl
push
lods
mov
xor
test
push
adcb
and
sbbb
test
dec
lods
push
fmulp
fwait
cli
push
dec
inc
hlt
bound
subl
adc
inc
xchg
pop
cmp
mov
dec
pop
bound
dec
cmc
ret
out
add
push
ret
xlat
and
add
push
cli
push
mov
adc
jg
cmpsl
inc
mov
cmc
lret
das
xchg
idivl
call
cmp
mov
outsl
dec
lods
rolb
test
add
mov
and
push
fbstp
mov
jl
sahf
cmp
aad
cld
jae
push
rorl
test
scas
push
sahf
mov
notl
pushl
pop
andb
push
or
addr16
loopne
jno
xlat
push
dec
add
sub
jo
mov
addr16
mov
movsb
sub
aaa
jnp
jae
ret
stc
or
pop
jmp
xor
or
jbe
leave
inc
and
mov
mov
lret
cmp
mov
stos
mulb
lret
sub
mov
out
and
jb
xchg
into
cmpsb
or
xlat
fnstcw
add
mov
fbstp
movsb
sub
mov
xchg
jbe
or
push
mov
in
rcll
dec
jb
pop
cmp
orl
hlt
or
popf
aaa
jne
dec
mov
hlt
sarb
cmp
lods
or
cmp
adc
rclb
testl
js
push
add
inc
es
pop
mov
jnp
add
sub
das
cmpb
xchg
cmp
outsl
xor
mov
inc
dec
jns
data16
push
dec
mov
lea
dec
jl
ret
sbb
addb
leave
sub
sarl
push
aaa
negb
in
pop
das
mov
ret
add
and
mov
call
push
mov
dec
xor
or
and
psraw
into
jnp
std
adc
popa
inc
loopne
adc
jle
shll
aam
mov
push
data16
xor
jl
jo
lds
xchg
mov
sub
enter
stos
adcb
es
push
adc
in
dec
pop
aad
lret
push
or
cmp
mov
fwait
cwtl
lods
bnd
sub
fs
or
movsb
inc
lds
and
test
es
jbe
pop
cmpsb
ljmp
add
xchg
adc
out
fiaddl
or
test
jle
testb
test
scas
jle
jle
xor
dec
aas
and
lods
or
stos
and
mov
mov
lock
pusha
mov
cmp
aaa
data16
dec
pause
mov
cmpb
mov
ss
jno
xchg
popa
dec
dec
jecxz
sub
fmuls
nop
jecxz
movsl
stos
pop
cmp
push
ds
pop
movsb
scas
xor
push
into
dec
mov
stos
xor
dec
pop
aam
sbb
dec
push
shll
mov
dec
out
clc
sub
xor
outsb
and
jbe
sbb
aam
stos
pop
les
jmp
enter
loopne
fisubl
sbb
push
cmp
lcall
add
cmpsb
in
clc
out
ljmp
mov
fidivrl
movsl
in
fs
pop
movsb
push
enter
cmpb
cmp
mov
add
xor
mov
xor
cmp
sahf
in
or
mov
shrb
mov
icebp
push
scas
fwait
adc
lock
push
cli
jg
jo
popf
lret
xchg
ret
pop
ja
lret
lcall
pop
dec
pop
lcall
push
popf
inc
test
in
cmp
popa
fisttpl
icebp
pop
rorb
push
cmc
sub
cli
incl
dec
out
lret
mov
sbb
test
pop
inc
mov
dec
pop
mov
ss
cmpsl
cmp
mov
push
pop
std
jne
push
fcoms
test
push
push
push
mov
add
adc
jne
adc
push
mov
jle
imul
outsl
or
xchg
sbb
out
dec
jno,pn
ficoml
jp
rorb
rcl
push
lahf
fidivrl
cltd
lcall
and
test
out
sub
out
leave
sbb
inc
mov
add
je
and
xlat
xor
fsubl
pop
dec
ret
shrb
aaa
pop
sub
loope
or
push
push
jp
ss
xchg
aad
in
xchg
jmp
pop
pop
enter
cs
mov
push
lods
cmp
sub
xchg
xchg
das
sbb
dec
and
mov
mov
adc
daa
sub
imull
ljmp
mov
movsb
mov
push
cmp
and
dec
stc
faddl
mov
popf
dec
push
xor
repz
int
mov
xchg
lea
movl
add
in
shlb
sbb
cmp
aad
aam
sbb
les
mov
fsubs
lds
mov
call
jo
mov
add
jmp
cmc
push
enter
fimuls
mov
mov
mov
fs
outsb
xchg
sbb
cmp
jbe
int3
mov
pop
orl
mov
sub
in
ret
mov
ret
dec
jmp
test
fwait
or
cmpsl
pop
xor
sbb
mov
ret
aaa
and
out
mov
test
or
ljmp
adc
pop
lods
test
test
jns
test
dec
cmp
jb
add
rorb
mov
icebp
decl
adc
xor
add
xor
into
mov
imul
shlb
or
mov
scas
js
pop
pop
daa
scas
sahf
jmp
repnz
and
movsl
mov
test
fsubrl
jnp
jns
shr
or
sbb
and
add
ds
adc
sbb
cmp
jecxz
inc
add
xor
je
jecxz
push
inc
shlb
xor
jne
mov
adc
cmp
std
and
push
add
dec
enter
sub
dec
push
mov
jne
hlt
ds
sbb
sbb
mov
push
cmpsl
movsl
cmc
add
jmp
sub
mov
sub
mov
add
cmc
and
in
sbb
cmc
jno
fdivrs
xchg
shlb
add
cmpsl
out
cmp
outsb
idivb
repnz
xor
js
fs
adc
fisttps
std
aam
ja
sub
movsb
loopne
push
xchg
idiv
jg
sbb
sahf
jl
jb
inc
mov
je
cmp
push
jmp
in
test
mov
mov
or
fstpt
mov
or
loopne
std
movsb
js
mov
lods
pop
mov
rorb
jno
std
add
movsb
push
jns
mov
repnz
xor
repz
cmp
mov
jmp
push
dec
fisubl
push
stos
aas
sbb
mov
imul
jp
cmp
sub
dec
popa
leave
cmpl
lods
cwtl
cld
mov
stos
scas
mov
pop
in
insl
cmp
dec
das
les
and
in
out
add
cmpsb
in
or
sbb
mov
mov
mov
fldl
cmp
bswap
iret
pushf
lods
pop
popf
imul
daa
jnp
xchg
shrl
shrl
sbb
shrb
std
pushf
sub
push
pop
out
hlt
mov
sub
adc
gs
jecxz
lahf
insb
das
lods
aam
sub
bound
ret
push
imul
push
push
movsb
enter
fsubrl
lahf
scas
int3
sbb
xchg
ljmp
cmp
jl
insb
imul
mov
mov
nop
and
les
scas
inc
int
scas
inc
adc
xchg
mov
adc
int3
mov
cltd
sub
rcrb
lods
cld
push
pushf
mov
repnz
jl
stc
mov
aaa
das
mov
loopne
aam
adc
sti
mov
dec
aaa
int3
arpl
mov
pop
adc
jnp
cmc
outsb
nop
test
fwait
dec
lock
inc
jecxz
cmc
lds
xchg
cmp
imul
mov
inc
or
and
jle
in
jne
repnz
jae
sbb
mov
ret
xor
adc
mov
je
mov
xchg
imull
jo
enter
movd
push
and
pop
shll
and
jae
mov
insl
pop
leave
push
dec
push
jmp
and
fcomi
lds
sub
addr16
mov
mov
in
push
stos
outsl
pop
inc
cmpsb
int3
fbstp
rolb
mov
dec
sti
xchg
and
sub
mov
push
movsl
cmp
fildll
xchg
popf
popf
xchg
inc
das
test
dec
sub
cmpsb
adc
mov
add
mov
pop
pop
adc
jle
lret
es
adc
pop
arpl
adc
pop
cmc
pop
sbb
cli
fldt
loopne
sarb
mov
out
loopne
leave
cltd
pushl
mov
mov
sahf
iret
pop
ret
rorb
cmc
popf
loope
sarb
dec
and
stc
dec
enter
lret
imul
out
cmp
test
mov
decl
add
mov
cld
insb
es
pop
bswap
push
jnp
in
jmp
mov
stos
neg
js
push
outsb
inc
fdivrs
lods
fmulp
bound
mov
cltd
sbb
ret
inc
sbb
icebp
adc
rorb
xchg
cld
imul
dec
roll
add
push
cmpsb
sub
imul
mov
xchg
sti
mov
jne
repz
jnp
into
mov
push
jge
es
mov
cs
adc
push
out
jo
adc
cmc
cwtl
rclb
clc
int
push
fwait
in
dec
xchg
aaa
jecxz
aam
sbb
sub
sub
test
and
lods
fwait
dec
sbb
xor
into
cmp
sbb
pop
sbb
mov
mov
out
cltd
out
jae
mov
fistpl
out
mov
cmp
test
and
sbb
adc
je
jg
pop
push
shr
pop
jle
push
outsb
lods
pop
test
xchg
inc
js
mov
aas
cli
xor
pop
in
jae
jnp
sub
jae
xchg
pop
xor
inc
xchg
mov
push
dec
mov
mov
mov
ret
mov
jns
scas
cs
gs
repnz
iret
fmull
sub
fwait
in
in
cs
and
cmpb
ss
pop
lea
jbe
mov
sbb
cld
fidivrl
jl
fmuls
sar
mulb
mov
cmp
cmpxchg
jo
scas
sub
mov
das
xor
sti
xor
jmp
push
xchg
pop
pop
out
popf
fistpl
dec
xchg
je
pop
into
inc
xor
js
mov
ret
sbb
inc
loop
into
mov
pop
lahf
jmp
ljmp
jne
cli
cmpb
test
enter
cmp
sub
arpl
sub
in
add
cmpsb
call
sub
shll
add
sub
add
push
adc
in
jmp
js
xchg
dec
dec
inc
cld
xor
lret
pusha
and
pop
inc
dec
outsl
jp
jo
movsl
repnz
fisttpll
and
xor
mov
in
mov
pop
add
adc
sub
out
mov
sbb
xchg
jle
mov
mov
add
in
and
mov
ds
sbb
addl
in
cs
movsl
push
and
sbb
or
jecxz
push
xchg
xchg
in
lock
lahf
cmp
xchg
inc
dec
mov
mov
faddp
les
imul
pusha
push
or
outsb
into
pusha
popf
aas
rclb
call
dec
in
and
fwait
xchg
xlat
fcmovnbe
mov
pop
addr16
xor
shr
push
fistpll
fstps
test
jae
push
fldt
xor
in
ds
je
sub
mov
mov
or
adcb
adc
xchg
sub
sub
mov
movsl
stos
inc
push
in
jmp
addr16
push
adc
cmp
pop
repz
push
and
gs
ret
out
hlt
xor
insb
js
mov
or
push
cmove
xchg
test
inc
or
jnp
sub
and
sbb
jae
in
mov
mov
mov
pop
sub
mov
aaa
add
mulb
and
mov
push
and
repnz
icebp
xchg
jnp
pop
sarb
and
jmp
test
lods
loop
sbb
jmp
xor
dec
push
imul
mov
cmp
cmp
popa
jl
aam
adc
adc
je
inc
add
sbb
mov
out
in
xchg
fdivrp
jne
test
adc
dec
xchg
jecxz
stos
jo
lock
mov
loop
daa
mov
xchg
jae
fadd
addr16
dec
mov
ss
movsl
jge
roll
dec
fs
mov
js
gs
or
or
pop
push
test
stc
ret
mov
mov
cmp
mov
cli
testb
sbbl
inc
pusha
or
pop
inc
roll
lcall
rorl
inc
ds
or
mov
fiadds
jle
or
push
fidivs
fs
popl
enter
push
cmp
jl
fbld
popa
or
mov
jecxz
std
enter
aam
lahf
lock
rorb
dec
shr
lcall
xchg
aad
insb
mov
xor
loop
lea
lock
negb
push
call
inc
data16
loop
subb
lds
push
inc
data16
xchg
repnz
loope
push
repz
aam
sbb
mov
int3
sbb
cs
fucomp
pop
enter
or
adc
sbb
inc
pop
add
jno
pop
push
roll
add
sahf
fists
pop
and
cmp
outsl
fistps
push
push
jb
cmp
jmp
inc
cmp
fsubp
mov
cli
adc
sub
xchg
pop
add
insb
cmp
fs
push
cmp
in
pop
adc
inc
or
lea
loop
cli
adc
fwait
jle
xchg
lret
cmpsb
jmp
inc
out
mulb
sbb
in
push
movsb
addb
dec
repnz
insl
mov
inc
pop
cmpsb
cmpb
push
pop
dec
add
mov
jne
mov
ret
or
lds
mov
mov
fidivrs
outsb
js
outsb
push
jecxz
xchg
ret
movl
adc
movsl
outsb
and
xchg
adc
addr16
lret
cmpsl
daa
dec
push
or
sub
mov
xchg
in
lods
mov
insb
xchg
dec
xor
push
outsl
daa
daa
lahf
andb
jbe
jb
pop
dec
aaa
push
sub
xchg
xor
and
sbb
inc
in
sub
je
dec
push
sub
mov
sub
fstps
fists
adc
loop
fisubl
mov
ret
sbb
push
mov
pop
popf
out
xchg
adc
or
outsl
push
xorb
cmp
mov
cmp
push
lods
sbb
sbb
das
leave
or
out
fcom
xchg
xchg
and
jne
push
or
mov
cli
bnd
ljmp
jl
cmc
jns
jl
mov
enter
lea
add
int
hlt
jo
das
cld
xor
stc
scas
addl
call
cmp
xchg
xor
test
push
xor
jae
jae
pop
das
mov
inc
dec
dec
xchg
pop
sahf
dec
repz
pop
xchg
lods
cmpb
mov
jle
sbb
repz
adc
inc
add
jo
arpl
ror
cs
rol
out
lret
add
aaa
aaa
xor
and
scas
xor
ds
mov
pop
lods
data16
int3
fcoms
pop
jmp
push
dec
mov
xor
imul
xchg
es
add
bound
dec
sti
cmpsl
test
js
inc
inc
outsl
adc
mov
test
push
cld
lret
aad
xor
pop
std
or
xor
popf
int3
cmp
xor
sbb
xor
roll
add
daa
mov
mov
ja
sub
cmc
mov
mov
fistps
pop
sbb
pop
notb
mov
ss
sbb
and
jb
imul
test
ljmp
repnz
negb
popf
lahf
or
pushf
xor
xchg
iret
cmp
mov
add
jg
pop
sbb
enter
and
cmpb
je
in
mov
divb
cltd
jno
cmp
pusha
mov
jecxz
mov
sub
out
push
mov
xor
inc
les
push
adc
adcl
into
inc
adc
les
push
imul
shll
jle
or
ror
jne
arpl
pop
scas
cmp
inc
js
es
mov
xor
loope
dec
xor
fildll
jecxz
pushf
xor
sbb
iret
sahf
insw
insb
lock
xchg
pop
imul
sub
cwtl
stc
out
je
ror
push
movzwl
iret
stc
sbb
mov
inc
mov
add
decb
cli
push
inc
push
or
add
mov
pop
repz
mov
mov
imul
mov
icebp
stc
cmp
xchg
rorl
pop
inc
add
and
jmp
mov
cmp
in
clc
xor
cli
aaa
inc
lahf
loop
aad
dec
cmp
xor
popa
hlt
test
lea
call
pop
mov
out
sbb
imul
xlat
sub
iret
outsb
pop
lahf
mov
and
fists
cli
sbb
mov
mov
scas
cmc
hlt
adc
mov
mov
push
push
data16
andb
jp
jo
cli
mov
push
mov
adc
notl
xor
je
fdivl
loope
dec
inc
out
sbb
insb
inc
or
inc
xchg
ss
jmp
ja
cmp
repnz
shrl
add
push
or
cmp
or
test
movsl
adc
fwait
xchg
movsl
notb
test
jns
ror
sbb
fcomip
std
scas
rcrl
jmp
cmp
fidivs
call
mov
sub
add
mov
rclb
jnp
mov
inc
repz
cmp
arpl
inc
leave
sahf
call
sarb
jecxz
rcrb
jnp
xor
mov
test
mov
pop
lods
or
xorb
nop
or
inc
nop
jmp
repnz
and
push
jb
inc
pop
daa
cld
jg
fucom
mov
mov
fnstenv
mov
test
xchg
dec
sub
hlt
cmpsb
add
sti
leave
iret
ja
add
pop
mov
int
xchg
mov
repz
pop
lea
cmp
and
push
shrb
shlb
fnstenv
pop
xchg
mov
push
or
jle
jg
cmp
adc
adc
xchg
xchg
test
dec
and
add
xchg
push
faddl
cmp
dec
add
dec
out
cltd
std
pop
xlat
fcoms
les
push
repz
mov
inc
andb
dec
sbb
mov
xchg
push
xchg
push
sub
insl
sub
mov
call
add
xlat
ja
sub
addr16
movhlps
stc
xchg
mov
adc
stc
cmpsb
ret
mov
int
dec
je
orb
mov
push
clc
jb
fdivp
mov
arpl
out
cmp
mov
repz
or
mov
jns
js
inc
into
jmp
or
bound
pop
mov
and
hlt
mov
mov
inc
push
pop
in
leave
sbb
jno
push
call
daa
or
iret
in
sti
sbb
pop
pop
jnp
hlt
push
mov
adc
lods
std
out
leave
popf
add
in
add
fnsave
xor
push
xchg
vmovq
cwtl
bnd
jge
push
mov
ja
in
pop
sub
fadds
push
aas
mov
inc
daa
mov
jae
rolb
and
and
mov
adc
stos
mov
sbb
xchg
mov
mov
pop
sarl
pop
dec
pop
aad
jmp
or
loop
adc
xlat
jno
pop
rclb
xor
mov
adcb
addr16
fyl2xp1
xor
fwait
clc
push
dec
pop
sbb
push
std
push
push
xchg
adc
jmp
pop
pop
das
ud1
dec
sarl
and
subl
jae
xor
fstl
es
in
iret
add
mov
mov
jns
repnz
test
push
mov
cltd
jge
push
insb
jp,pt
mov
pop
mov
testl
roll
xchg
cld
push
test
and
sbb
dec
add
std
push
shlb
sbb
mov
mov
sbb
aad
aaa
cmp
lcall
adc
ret
sub
xchg
inc
jo
dec
das
sbb
loopne
gs
xchg
mov
addr16
sbb
pop
es
insl
call
iret
aad
sahf
cmp
xchg
and
es
js
hlt
lcall
test
xorb
and
jns
pushf
aaa
or
aas
mov
xor
sub
push
xor
lods
mov
mov
daa
rcr
mov
stos
adc
popf
dec
cmp
push
out
pop
mov
nop
out
mov
add
fwait
call
movsl
adc
cld
mov
imul
jl
call
das
or
xor
push
dec
lock
push
adc
out
mov
roll
sub
loope
data16
lods
add
fs
and
mov
data16
adc
mov
outsb
or
cli
and
or
lahf
adc
pushf
imul
xlat
std
cmp
sbb
cmp
push
pop
xorl
xchg
xchg
and
xchg
movsl
out
or
outsl
stos
outsb
and
leave
lahf
push
inc
std
dec
xchg
xor
int3
jge
fwait
xchg
fucomp
push
fwait
pop
mov
enter
mov
insl
or
pop
sarl
int
cs
fiadds
mov
cmp
jo
pcmpgtb
mov
xor
jo
bswap
jae
adc
jmp
cli
int3
lahf
add
stos
push
int3
inc
xor
lds
pop
dec
inc
adc
scas
rcrl
sbb
out
sbb
test
outsb
fld
or
or
repnz
add
xlat
sub
cmp
popf
sbb
lods
out
andl
leave
out
das
jecxz
dec
or
pushl
gs
mov
cmp
and
add
aam
push
pusha
mov
sub
jns
pop
sbb
adc
jl
push
dec
mov
jmp
jp
cmpsl
xchg
push
or
loope
dec
sbb
lret
movsl
fnsave
mov
stc
test
shlb
xor
out
sub
mov
aaa
cmpl
xlat
test
test
test
sub
xor
xchg
ret
sub
mov
imull
push
push
icebp
lods
mov
push
inc
ret
lock
stos
pushf
in
sub
rcl
scas
cmp
int
dec
or
mov
aam
fildl
scas
popf
testb
dec
inc
jo
out
mov
pushf
mov
mov
push
mov
mov
fidivs
mov
rcl
fldl
sub
cmpsb
pop
xchg
pusha
dec
cmp
pop
sub
adc
adc
in
jg
push
lea
mov
addl
bound
je
sti
push
jb
movsb
cmc
adc
aam
adc
mov
rcrl
and
or
out
in
sub
fs
pop
jmp
enter
arpl
jp
ljmp
or
xor
pusha
and
mov
outsl
imul
leave
dec
mov
mov
cmpsl
stc
es
ja
popa
xor
xchg
push
rorl
push
shll
pop
xchg
aad
lods
xchg
inc
sub
adc
mov
jo
ja
out
repnz
sub
lahf
inc
mov
or
and
ret
fwait
repnz
or
sbb
sbb
jecxz
fdivp
stc
fsub
sbb
outsb
sahf
jne
in
testb
pop
xchg
xchg
mov
out
sahf
push
add
dec
mov
xlat
shlb
ss
push
mov
adc
imul
and
dec
lock
or
jnp
xchg
push
mov
mov
mov
repnz
psubw
ja
xchg
arpl
icebp
aas
daa
mov
add
sbb
cld
mov
mov
out
dec
bound
or
fnstcw
push
sbb
fnstcw
shrl
pop
clc
add
cmp
xchg
pop
mov
xchg
les
mov
cmpsl
lcall
leave
hlt
mov
idivl
es
mov
pop
push
pop
pop
mov
je
out
imul
outsb
adc
dec
dec
add
das
lcall
inc
call
xchg
std
mov
leave
icebp
push
out
jg
lret
xor
loop
mov
leave
repz
dec
xchg
mov
mov
mov
bound
dec
stc
mov
xchg
pop
sub
pop
mov
les
ja
idivb
sbb
testl
add
movsl
out
mov
mov
xor
jne
icebp
lret
in
scas
jmp
mov
jle
insb
mov
or
std
fildll
inc
imul
pop
lea
jbe
push
push
lcall
in
rol
inc
mov
fs
es
pushf
mov
int
int3
clc
jnp
sbb
das
sbb
mov
pop
les
cmc
mov
or
setbe
loope
jae
cs
mov
fsubl
inc
mov
test
or
add
sub
mov
lahf
je
popa
daa
sbb
pop
jg
lock
add
push
mov
xor
cmp
aad
adc
hlt
add
xchg
out
mov
lret
lock
sbb
ds
jp
fcomps
pop
add
xor
add
and
mov
aas
dec
out
push
mov
outsl
ret
xor
mov
arpl
mov
cs
movsb
mov
xchg
incl
sahf
pop
mov
testl
dec
sub
pop
jno
int
pop
out
lock
sub
mov
aaa
xor
stc
sbb
xchg
dec
jmp
sbb
jbe
das
imul
mov
shll
pop
out
cli
scas
sbb
jle
fwait
cmp
mov
xchg
stos
add
xchg
sub
dec
stc
das
cmp
or
mov
xor
rol
roll
arpl
and
jbe
mov
cli
mov
inc
inc
jae
xchg
jle
push
push
jns
mov
inc
loope
jo
adc
shlb
xor
mov
adc
orl
sub
inc
push
inc
mov
push
rcll
pop
outsl
cmp
adc
shrb
push
getsec
cmp
mov
outsl
repnz
repnz
sub
cmp
icebp
fcomp
lods
dec
mov
cmc
push
cmp
das
fwait
mov
fidivl
stos
mov
mov
pop
xchg
imul
xchg
mull
insl
cmp
jecxz
fsubl
mov
sub
shr
jns
add
cld
xchg
mov
std
and
fistl
iret
pop
jle
test
inc
fsts
je
add
adc
and
call
and
imul
or
xchg
sub
add
insb
stos
gs
ljmp
int3
push
adc
std
repz
clc
lock
and
loope
sarb
adc
mov
or
adc
adc
push
movsb
or
loop
movsl
cmpsl
dec
stos
lock
inc
pop
inc
andb
dec
les
dec
clc
test
mov
mov
pushf
inc
jecxz
fidivl
or
scas
and
shlb
adc
push
inc
fidivrs
mov
adc
loope
xlat
stos
or
mov
nop
sti
ds
cmp
inc
fsts
stos
addr16
arpl
scas
shlb
jle
sar
stos
xchg
xchg
mov
sar
sub
adc
pop
int
mov
dec
sub
test
aas
fsts
inc
dec
imul
jmp
shrl
insb
and
jnp
scas
pop
aam
or
fs
push
sbb
lea
shll
dec
testl
mov
sub
rcl
inc
jge
ret
jl
adc
pop
mov
bound
xchg
xchg
icebp
out
cld
and
xchg
cld
mov
in
ss
out
loopne
sub
cmp
ja
jne
in
jno
arpl
jg
shrb
inc
data16
mov
iret
or
lea
in
add
and
inc
loopne
pusha
out
mov
movsb
fidivrl
push
inc
mov
pop
icebp
sbb
jne
int3
sbb
dec
stc
mov
add
cli
fldt
and
daa
mov
ljmp
adc
movsb
cmp
flds
push
lcall
and
push
mov
popf
jmp
mov
adc
daa
subb
lret
mov
addr16
scas
shr
outsb
jns
shll
dec
mov
pop
push
jmp
stc
push
cmp
sbb
jecxz
push
iret
cs
add
into
dec
frstor
movsb
pop
push
jns
pop
mov
dec
loopne
out
mov
fs
ret
xchg
sbb
rcrl
out
xchg
out
add
sub
mov
push
inc
add
pop
jae
call
es
xchg
dec
lahf
ret
aad
daa
repnz
ljmp
mov
pop
push
push
jo
xor
adc
in
mov
pushf
add
cli
iret
pop
cmp
andl
mov
test
mov
and
jns
jecxz
cmp
xchg
clc
jl
sbb
insb
jne
das
je
push
fdivl
sbb
dec
dec
insl
jb
xor
cmp
sbb
aad
dec
xor
loope
jge
dec
jae
add
test
cmp
inc
shlb
push
test
in
mov
lods
xchg
adc
lock
addb
lret
ret
adc
es
dec
mov
sub
in
xor
xor
mov
loop
push
das
push
cmp
ficoms
mov
cmpb
cmp
jne
call
mov
bound
and
jne
add
fimuls
enter
das
cmp
xchg
mov
mov
shll
cmp
push
loop
inc
mov
enter
call
push
lds
in
in
insl
popa
sbb
dec
xchg
nop
emms
xchg
stos
fistl
mov
or
andl
iret
mov
aas
cmc
js
repz
xor
jmp
rcr
mov
nop
mov
sub
mov
mov
popf
mov
fucompp
psrlq
mov
mov
inc
mov
outsb
outsl
ss
orl
fldt
test
inc
inc
and
add
xor
or
and
sti
je
popa
jmp
or
cmp
aad
sbb
call
push
mov
push
fdivrs
and
push
leave
loope
aad
add
push
adc
ljmp
int
test
fiaddl
andb
je
vmaxpd
xchg
sarb
lds
adc
mov
push
and
gs
sbb
pop
bound
jnp
aad
les
lods
ss
or
and
pop
dec
fsubrs
cmp
push
mov
cs
cmp
outsl
repnz
push
and
cmp
pop
int3
out
pop
ret
in
std
or
dec
std
pop
mov
mov
dec
jmp
mov
cld
out
lods
enter
hlt
push
loope
mov
fstpt
mov
stc
and
adc
into
pop
es
xchg
dec
jmp
jno
mov
loope
es
add
rcrb
out
pop
jl
movsl
push
mov
or
jbe
jnp
xchg
add
hlt
push
xor
jecxz
leave
lea
mov
xchg
roll
xchg
xchg
call
push
inc
in
rcll
inc
pop
lahf
pushf
daa
sbb
dec
loopne
add
int
outsl
jg
outsb
dec
jae
jbe
fisubs
sub
dec
jbe
addb
adc
fmulp
mov
dec
pop
xchg
mov
and
cmpsb
jnp
mov
out
cmpsb
mov
jg
movsb
xchg
lock
add
inc
jo
jle
les
push
and
imul
mov
adc
add
fcmovb
or
enter
xchg
loop
xor
dec
sahf
mov
cld
dec
popa
push
sbb
nop
push
fisttpl
lods
orb
mov
mov
add
jo
out
and
dec
or
xchg
mov
cld
pop
sub
jle
or
or
add
add
mov
imul
sub
inc
dec
mov
loope
fldt
jnp
pop
cmpsl
jae
pop
fs
std
mov
fbld
loop
fwait
push
mov
mov
push
lcall
mov
iret
in
xor
and
jl
fcompl
sub
ds
xchg
mov
pop
jp
lods
dec
sahf
push
push
xchg
pop
js
inc
outsl
inc
loopne
or
and
out
stos
add
out
dec
les
xchg
outsb
iret
outsl
xchg
jge
jne
aam
xchg
test
sbb
out
jecxz
int
inc
push
cvttps2pi
std
dec
gs
jmp
pop
push
je
notb
into
push
aam
push
inc
sub
and
loope
pop
aaa
outsl
jg
int
dec
inc
call
mov
cld
outsb
inc
xor
sbb
icebp
test
sbb
xlat
in
sarl
jo
push
addl
ror
sbb
scas
aam
in
and
cmpsl
pusha
mov
fildll
or
jp
mov
lahf
pushf
sub
fwait
sub
push
aaa
scas
ss
jbe
dec
jmp
jno
daa
test
lret
dec
pop
xchg
sarl
inc
xor
lods
xor
iret
push
or
in
outsb
push
mov
scas
sbb
inc
stos
dec
push
or
shll
or
jae
fisubrl
xchg
ljmp
and
mov
subb
add
adc
inc
in
cmp
pop
or
jbe
ror
fsub
jl
in
and
lds
adc
fsubrp
insl
sbb
or
or
xor
ror
jne
pop
cmpsl
push
gs
cwtl
ja
mov
pop
sub
xchg
imul
inc
dec
dec
or
in
mov
sub
dec
adc
xchg
and
incb
test
fsub
xor
jne
inc
js
cmp
jae
fstpl
jo
mov
je
pop
cmp
mov
sbb
outsl
pop
and
or
test
add
push
mov
cmp
xor
lods
cmpsl
xlat
pop
pop
jmp
leave
sbb
mov
outsb
test
inc
or
pop
xchg
xchg
aam
adc
mov
cmp
sbb
not
fsubs
pop
leave
jmp
dec
pop
fistpl
out
mov
bound
jne
iret
push
xchg
mov
sbb
stos
jnp
sub
in
mov
lods
mov
into
shrl
fcmovbe
push
shr
inc
outsb
add
sbbb
icebp
fsubr
xlat
loop
loope
sbb
push
rorl
mov
add
xchg
movsl
mov
add
fbstp
call
and
sub
xchg
loop
daa
test
aas
pusha
or
out
jne
insb
fidivs
sbb
int
sub
dec
pop
test
xchg
stos
sti
push
out
ljmp
fcomip
xorb
push
fs
pop
outsl
repz
stos
xchg
push
mov
dec
pop
roll
pop
jge
xor
cmpsl
or
add
cld
xor
in
aaa
add
mov
mov
add
inc
cmc
sbb
lds
ret
into
lret
xorl
adc
push
lods
and
jbe
pop
jg
fisttpll
jns
push
mov
adc
bound
xchg
loop
test
fdivrl
notb
rolb
lret
xchg
mov
insl
or
outsl
je
and
add
popf
pop
add
fsub
xchg
jbe
sbb
push
popf
and
inc
test
notl
or
sub
or
push
loope
pop
dec
sbbb
add
cmp
fcmovnu
out
cmpb
fmuls
lds
test
cld
enter
xor
je
stos
xchg
cltd
cmp
lret
imul
cmpsl
dec
fmuls
sbbb
adc
mov
bound
add
inc
mov
mov
jbe
aad
int
xchg
outsb
fwait
inc
in
and
mov
jp
aaa
int3
jl
sbb
sbb
pop
add
mov
push
jl
js
mov
jns
mov
in
repz
rclb
cmp
push
sub
sub
fdivs
ja
loop
nop
sti
and
les
xchg
sbb
out
insb
push
gs
in
cmp
add
adc
test
inc
sub
inc
popa
mov
cmpsb
and
imul
pusha
in
rcrb
in
inc
push
dec
mov
movb
mov
icebp
push
and
aas
sbb
dec
inc
sbb
mov
in
ljmp
mov
clc
push
sbb
into
in
sti
add
je
lods
dec
jp
cwtl
test
or
push
dec
push
jns
mov
in
push
jno
fiadds
jo
call
mov
sahf
test
push
ja
ret
call
ret
or
push
scas
adc
pop
testb
test
rcrb
mov
aas
shl
or
mov
sbb
repz
push
push
mov
fsubrp
xor
cli
repz
xchg
jecxz
push
xor
and
enter
jmp
push
cwtl
shlb
jo
push
cmp
mov
scas
stos
shrd
sbb
cld
sbb
mov
loopne
stos
popa
jge
jns
pop
mov
xadd
enter
cmp
push
inc
adc
ja
stos
sbb
mov
sbb
mov
insb
cmp
ds
gs
xor
orl
jp
popa
mov
cld
cmp
js
dec
or
jb
imul
pop
jle
cs
push
dec
sub
sti
add
jne
mov
out
popf
add
pop
aaa
sub
mov
sti
push
insl
lcall
outsb
outsb
dec
dec
lcall
popf
add
mov
aam
jb
das
lret
daa
dec
jb
rcrb
popf
cmpsl
pop
jb
insl
pop
loop
cld
loopne
loopne
sahf
fs
add
pop
in
loope
subl
add
pop
and
addr16
out
xchg
add
out
popa
cmpsl
push
jge
pop
scas
mov
xor
gs
adc
add
cmp
cmc
mov
in
ja
add
mov
js
mov
test
xchg
pusha
outsb
xorl
jmp
sahf
lret
cld
jl
add
mov
fwait
pop
dec
adc
aaa
das
inc
test
test
dec
add
cmp
stos
xor
add
outsl
pop
push
jecxz
shrl
or
cltd
dec
ds
andl
mov
or
jl
test
and
js
push
ret
mov
fdivrl
pushf
mov
hlt
cwtl
call
or
xchg
aas
aaa
pop
int
cld
fs
sar
adc
lret
movsl
mov
loopne
push
mov
inc
mov
nop
sub
mov
sbb
push
fdivr
add
pushf
push
or
sbb
lret
jge
sub
dec
insb
and
cmp
xor
lock
xor
lea
les
pop
sti
negl
movsb
and
cmp
stos
push
xchg
jg
lods
mov
pop
jmp
rclb
lds
jl
sarl
cs
cmp
dec
imul
jnp
add
mov
std
lret
cmp
inc
daa
ret
fnstsw
xchg
js
or
sti
test
inc
imul
leave
sbb
jp
mov
mov
arpl
cmp
movsl
imul
mov
mov
jle
push
inc
inc
stc
cmp
mov
out
or
jbe
jl
leave
push
lods
call
bswap
or
rorl
insl
mov
leave
and
mov
sbb
mov
mov
jp
fstps
shlb
and
mov
das
pop
add
test
inc
sbb
pop
and
xor
jb
sahf
and
das
add
hlt
das
jno
push
jge
jl
aaa
les
xchg
push
push
cs
xchg
dec
cmp
jl
out
mov
out
mull
out
sbb
test
sets
insb
jecxz
pop
mov
mov
sub
test
pop
pop
xchg
mov
mov
cmp
clc
bound
imul
jnp
xchg
xchg
mov
inc
addr16
mov
mov
jb
xor
pop
fstpl
ret
scas
lock
xor
test
ja
sahf
push
mov
test
hlt
add
inc
or
cmpsl
mov
shlb
mov
jb
fwait
lds
fistpll
pop
cli
adc
mov
sub
jg
push
dec
sbb
repz
sub
push
dec
adc
daa
push
sarb
imulb
stos
or
xchg
call
push
call
in
jns
insb
pop
inc
mov
sbb
fwait
lods
pop
test
push
mov
aas
std
lea
mov
inc
xchg
cmpsb
inc
invd
adc
mov
mov
scas
mov
add
adc
lret
inc
loope
cmp
into
mov
dec
adcb
fcomip
lcall
jb
cmp
ficoml
ret
add
mov
fidivl
aas
shlb
adc
pusha
jo
fsubrl
fstl
mov
aaa
fwait
outsl
mov
sub
popf
sbb
pop
cmp
sbb
cld
pop
pop
jle
leave
pop
mov
lret
out
jg
cmp
es
popa
lods
mov
xchg
jle
inc
adc
scas
shlb
inc
or
xchg
lcall
mov
test
sbbl
cs
jns
jg
xchg
or
out
movsl
sub
int3
and
outsb
test
sbb
aas
sub
dec
hlt
es
pushl
push
imul
fildl
int
and
mov
pop
lock
lock
inc
inc
cmpsb
imul
xchg
insl
fnstsw
jecxz
pop
pusha
jge
sarb
adc
mov
jae
mov
add
aam
xor
pop
insl
inc
repnz
sbb
mov
iret
xor
sub
sub
lods
pop
xchg
mov
xchg
rolb
loope
orb
cmp
stos
mov
inc
and
pop
in
in
hlt
sbb
mov
mov
int3
mov
repnz
adc
add
mov
jo
outsl
pop
int
dec
jbe
arpl
or
jae
mov
push
pusha
lcall
movsl
dec
cmp
jle
test
fdivrp
dec
adc
jmp
dec
insl
mov
mov
jg
pop
inc
hlt
cmp
mov
insl
mov
leave
lock
mov
push
jo
or
or
nop
cmp
and
or
ret
sbb
sub
lock
insb
inc
out
adc
mov
mov
inc
int3
adc
adc
rorl
out
gs
mov
clc
bound
jp
stc
dec
jle
mov
cwtl
sbb
jb
mov
add
ret
push
pushf
cmpsb
fstpl
sbb
sarl
hlt
rcl
jmp
jnp
mov
xchg
scas
ss
daa
fcmovnb
iret
je
cltd
lods
xchg
add
stc
xor
mov
test
cmp
imul
xchg
icebp
icebp
pusha
push
dec
mov
lret
repz
mov
or
or
sbb
sub
xchg
in
das
nop
add
out
adc
mov
or
mov
movsl
sub
popf
mov
inc
push
add
jbe
hlt
fisttpl
pop
lret
es
pop
data16
fisubs
push
add
adc
inc
pop
pusha
add
jmp
mov
adc
test
or
mov
enter
scas
pop
ret
pusha
and
jge
fwait
lea
fnstenv
xor
xchg
cmp
adc
addr16
out
cmp
push
mov
cltd
loopne
aaa
les
and
fwait
sub
pop
push
mov
sahf
in
sbb
mov
notl
std
mov
pop
sbb
iret
aam
mov
mov
adc
pop
movsb
adc
sbb
add
mov
add
lahf
mov
ljmp
push
adc
insb
dec
mov
pop
ljmp
add
stos
push
mov
mov
dec
ds
popa
ljmp
fs
xchg
or
mov
mov
jge
jns
and
jae
dec
stos
cmp
and
xchg
mov
es
sbb
aad
push
lret
xor
es
dec
sbb
xchg
lea
mov
dec
xor
push
add
arpl
out
inc
mov
push
mov
scas
sub
ror
mov
push
adc
pusha
aad
adc
mov
movsl
sbb
pop
in
dec
mov
lods
push
jnp
shlb
outsb
push
std
adc
push
gs
insb
rol
sbb
sub
incl
mov
test
shlb
pop
pop
in
cmp
or
fisttps
mov
cltd
lahf
ret
out
sub
and
jno
int3
out
mov
pop
iret
xor
inc
test
dec
adc
add
out
add
mov
popa
jb
fisubs
pushf
add
aam
sbb
sub
mov
ficoms
mov
stos
sbb
inc
dec
or
mov
lea
iret
or
fldl
xchg
cmp
sbb
testl
mov
cld
adcb
or
dec
addb
pushf
xor
je
sbb
addl
faddl
mov
fsubr
test
in
add
xor
imul
xchg
xchg
mov
loopne
cmpsl
pushw
mov
ret
call
data16
lea
ljmp
mov
shll
fdivr
into
inc
or
dec
xchg
shlb
sub
mov
cmc
jle
dec
leave
dec
imul
jo
ret
inc
dec
fistpl
push
shrl
addr16
cmpsl
and
out
in
push
and
aaa
fnstenv
and
and
sarl
xchg
subb
arpl
leave
out
or
fmuls
stos
sbb
xchg
mov
fxch
xchg
gs
jae
sti
pop
xchg
adc
pop
push
jns
push
mov
push
dec
lcall
mov
rcrb
fsubl
cmp
rcrl
aas
loope
sub
mov
inc
sbb
mov
fldt
mov
clc
sahf
xchg
adc
jg
popa
mov
add
insl
cmp
xchg
mov
stos
inc
cmc
or
cwtl
sub
cmp
shlb
push
sub
fmull
mov
mov
ret
mov
jnp
push
nop
sub
arpl
mov
dec
cli
aam
imul
adc
push
xchg
testl
aad
cmp
lea
sbb
cmp
lea
adc
and
in
xlat
push
cs
cmp
jge
int3
mov
idivl
push
jmp
cli
arpl
js
and
shrl
mov
jge
jae
ja
add
xchg
sbb
lods
push
js
push
outsb
cs
enter
ljmp
jne
mov
lods
xchg
aaa
int3
inc
cmp
mov
sbb
cmpsl
adc
imul
jnp
add
inc
fstps
pop
push
lock
push
stos
push
cmpl
jbe
jp
pop
in
xor
jno
daa
add
jnp
sbb
subb
insl
pop
push
insl
mov
pop
aad
or
loope
or
sub
jbe
jne
ss
inc
cmpsl
cmp
mov
push
cltd
lea
or
fcmovnu
loopne
mov
inc
push
imul
fidivl
mulb
sbb
xor
mov
and
out
lock
mov
add
int
leave
int
clc
cmp
jne
in
fucomp
call
mov
xchg
cmp
jecxz
sub
cmp
dec
fld
je
xchg
xchg
mov
xchg
inc
fbld
jb
ret
sar
adc
or
push
jmp
xchg
mov
adc
sbb
cmp
dec
or
push
fistps
and
out
adc
gs
sub
into
mov
ja
mov
xchg
fadd
cltd
mov
lods
inc
lods
cmp
iret
or
fisttpl
mov
dec
out
cmp
push
fldl
out
enter
and
jle
xor
inc
push
les
lea
dec
pop
fs
out
or
add
pop
or
addr16
pop
push
add
adc
rcll
xor
lods
adc
mov
or
js
and
pop
aam
inc
mov
fisubs
mov
dec
mov
int3
xor
sub
jne
sub
ljmp
test
fistps
mov
ja
stc
inc
cli
lret
shl
or
add
xor
pop
jecxz
jp
or
in
lds
in
inc
out
test
fiadds
xchg
imul
arpl
arpl
xor
add
xchg
loopne
movsb
pop
fsubs
or
push
inc
imul
sbb
sbbb
data16
pop
sbb
xchg
xchg
in
mov
imul
jb
jb
jecxz
jbe
stos
imul
gs
movups
adc
ss
or
mov
pop
or
mov
testl
mov
cli
pop
pop
push
sub
jns
cmp
jl
ja
xchg
es
bound
scas
mov
enter
adc
jp
xchg
fstpt
pop
xor
add
pop
cld
push
rcll
iret
cmp
sbb
mov
cmp
cmp
nop
dec
xor
test
sub
mov
movsl
out
lcall
enter
jno
adc
out
sub
pop
or
aas
adc
jo
ret
push
push
inc
das
cpuid
jl
jge
out
addb
cmp
sbb
stos
mov
fwait
push
dec
aas
rolb
shrl
pop
jmp
push
mov
mov
push
push
add
mov
jecxz
dec
adc
loopne
js
xchg
and
cmpsl
cmpsb
mov
xchg
into
inc
roll
mov
mov
push
test
stos
mov
aad
mov
push
movsl
gs
pop
stos
mov
movsb
jle
dec
xchg
shlb
test
lahf
call
daa
fidivl
jb
loopne
outsb
mov
jg
out
jle
int
pop
data16
aas
mov
das
js
push
cltd
mov
data16
and
in
loopne
out
mov
call
cmpsb
dec
leave
mov
in
notb
je
cmpsb
adc
or
in
cld
jge
aas
pop
insb
pop
fstl
sbb
jnp
adc
or
stos
leave
sbb
add
shl
loope
cmp
push
xchg
mov
cwtl
jno
insl
enter
sbb
je
imul
daa
pop
dec
mov
stos
jle
popf
stos
adc
mov
je
aam
loopne
in
les
jno
mov
daa
test
cltd
test
or
xchg
aaa
mov
outsb
push
xor
idiv
push
xorb
mov
inc
or
xor
int3
fs
mov
js
lret
xor
ss
push
add
insb
repz
flds
bound
pop
mov
cmp
arpl
pop
push
or
ss
mov
jo
lcall
lds
scas
xor
adc
sbb
mov
ret
and
dec
jle
lret
inc
xor
or
fstps
mov
xchg
fcomi
and
aas
subb
sub
jne
loope
cmp
mov
insl
push
sbb
in
int
lock
int3
dec
fsubl
cmpsl
xchg
inc
mov
test
xlat
repz
inc
pop
iret
cmpsb
popf
xchg
or
das
lds
add
loope
xchg
je
jno
stc
mov
xchg
cmpsl
sub
fwait
push
and
mov
mov
or
insl
mov
pushf
mov
and
cld
out
faddl
mov
or
js
inc
sahf
shl
push
sbb
arpl
es
mov
lea
pop
es
nop
das
and
testl
cmpsb
lods
fcmovu
arpl
loope
or
inc
lret
mov
and
cmp
or
ret
js
dec
push
mov
scas
outsl
pop
inc
stc
das
xor
lcall
lcall
or
push
jne
notl
testl
mov
dec
inc
lret
arpl
inc
loope
sti
push
xchg
jo
clc
xor
das
cmc
dec
insl
lock
shlb
sub
sbbb
jp
jmp
add
cmp
ret
or
inc
xor
jmp
daa
int
scas
popa
add
push
lock
or
popf
dec
mov
push
cmp
lods
shr
dec
jnp
xchg
std
dec
dec
mov
out
inc
jb
sub
fisttpll
cmp
push
insb
std
aaa
lock
mov
push
imul
fildll
ret
pop
fisubs
xchg
dec
inc
lock
xlat
sbb
es
shr
pop
inc
xlat
pop
cltd
add
jmp
adc
push
xchg
dec
sbb
adc
in
inc
stc
lahf
dec
and
aam
xchg
rcrl
iret
movsl
pop
pushf
imul
into
push
das
pop
or
xchg
push
mov
orb
mov
pop
ficompl
dec
int
aaa
out
les
lcall
test
out
insl
mov
out
pop
xchg
adc
out
inc
xchg
push
mov
adcb
ja
pop
mov
dec
in
pop
stc
fdivrl
push
pushf
loope
push
lea
sahf
add
lahf
in
mull
lea
mov
cmpsb
push
pop
jae
add
mov
loopne
scas
stos
or
dec
inc
and
cmp
add
pop
cltd
adc
mov
addr16
dec
sbb
pop
movsb
xlat
divb
es
mov
push
sbb
jbe
push
mov
push
lret
insb
fldt
and
xchg
adc
fwait
sbb
imul
sub
or
aam
jge
ret
std
loop
cmpsb
lods
cmpsl
sbb
cmpsl
xor
imul
pushf
int3
rorb
pop
stos
mov
sbb
leave
subb
enter
hlt
jae
inc
add
push
rcr
dec
lea
sahf
mov
loope
xor
or
push
pop
cmp
cs
leave
sti
pop
insl
js
cmc
mov
popa
ret
jnp
ret
loope
frstor
es
iret
inc
inc
pop
add
fisttpll
ja
jp
xor
jnp
push
fsubrl
fisubl
loopne
pop
in
xor
push
jmp
je
mov
adc
push
sbb
pop
into
rorb
in
inc
adc
enter
push
mov
das
psubw
mov
adc
fwait
and
in
mov
mov
das
cmp
aas
cmp
lcall
hlt
pop
xchg
xchg
xor
sahf
jae
lods
mov
cmp
sub
xor
or
es
cltd
sub
dec
lods
scas
push
subl
pop
aam
cwtl
loop
test
imul
xchg
xor
mov
test
lret
push
lock
add
arpl
inc
cmpsb
call
rcrb
insl
fisttpll
mov
xorb
sahf
jae
or
push
sub
rep
xorb
jecxz
cmc
inc
pop
lret
les
mov
outsl
adcb
imul
push
jg
mov
neg
mov
jmp
inc
rcl
arpl
nop
xchg
mov
pop
imul
adc
mov
aam
movsl
xchg
xor
and
inc
jmp
lcall
lock
lret
mov
ficomps
inc
movsb
xor
jge
xchg
sub
jbe
cmpb
or
loopne
cmp
testb
iret
lods
or
mov
push
inc
mov
xchg
insl
cmp
fwait
sarb
inc
test
mov
mov
std
sub
sub
js
or
rclb
fidivs
mov
rcrb
jne
out
dec
notl
sbb
xchg
repz
cmp
or
fs
push
fwait
inc
xlat
in
and
cli
lahf
dec
jmp
orb
les
cmp
lods
push
stos
xor
mov
lcall
cmp
mov
xchg
outsb
fdivrp
push
lret
pop
push
aas
stos
fistl
add
mov
ret
or
mov
inc
mov
mov
cmpsl
xchg
repnz
fsubr
stos
aas
in
inc
les
insb
popw
mov
sub
pop
push
mov
jnp
adc
cld
pop
cwtl
push
pop
adc
sbb
or
jge
test
sbb
clc
mov
test
sbb
stos
call
addr16
push
adc
adc
pop
arpl
mov
xchg
add
mov
imul
inc
in
jno
mov
push
cs
dec
leave
jo
jle
xor
xchg
fs
sub
pushf
or
or
repz
cmc
sub
hlt
sti
mov
adc
xchg
pusha
cmp
inc
push
xor
ss
frstor
push
pushf
test
je
aam
jmp
popf
mov
add
sub
lods
adc
inc
leave
dec
dec
stc
pop
fisttpl
aad
out
dec
xchg
rolb
mov
in
sub
add
test
cmpb
scas
sub
mov
push
into
push
jmp
sbb
jge
lods
leave
xchg
cmpsl
into
ja
push
jno
add
cmc
or
imul
jle
aaa
lahf
out
push
xor
fs
rclb
int3
xchg
pop
mov
test
jae
ds
icebp
mov
iret
ficomps
in
mov
popf
cmp
mov
jle
outsl
in
lret
and
popa
lods
xchg
sub
insl
gs
add
and
orb
loop
lret
cbtw
mov
inc
pop
fidivrs
sub
idivl
mov
and
pop
sarb
mov
pusha
sbb
das
mov
cmp
and
dec
fcomps
lcall
into
dec
add
xchg
mov
movsb
add
imul
shr
rcll
jae,pt
insb
shr
loope
gs
sahf
sbb
pop
sub
and
pop
sti
test
dec
push
xchg
out
add
loopne
ss
dec
sub
mov
movsb
insb
ljmp
xchg
add
and
out
sub
mov
sub
scas
cmp
push
outsl
repnz
loopne
aas
sbb
mov
mov
test
or
cmp
ja
mov
mov
xor
add
out
mov
out
jnp
jbe
cltd
or
imul
call
and
icebp
jae
icebp
stc
fisttps
and
inc
dec
std
dec
inc
push
push
cmp
jns
jmp
enter
mov
cltd
testl
subl
scas
lods
inc
dec
xchg
mov
fstl
icebp
stos
cmp
fnstenv
xor
call
in
pop
addl
mov
add
lods
lcall
dec
xchg
stc
lret
es
les
and
outsb
sub
aam
in
pop
cmp
inc
fsubl
push
or
out
jmp
push
xchg
push
sub
mov
adc
push
dec
pop
cmp
insl
or
cwtl
mov
aas
icebp
xchg
pop
sbb
leave
test
adc
aam
add
sti
arpl
nop
add
mov
lcall
push
mov
cmpsb
js
aam
add
cmp
scas
movsl
pop
insb
mov
test
mov
push
push
cwtl
leave
cmpsb
push
ret
inc
outsb
lahf
ret
mov
jb
push
js
in
rorl
loopne
hlt
xor
mov
add
mov
lahf
lock
imul
sbb
mov
jb
jno
and
mov
out
aaa
test
data16
mov
xorb
push
sbb
adc
adcb
in
lods
sub
inc
xchg
inc
mov
mov
lahf
push
or
hlt
mov
dec
inc
inc
jne
pop
sub
ds
or
mov
test
dec
cmp
xor
xchg
sub
test
inc
sbb
fxch
out
xor
xlat
mov
clc
dec
fdivr
outsl
push
jbe
xchg
xor
dec
cmp
pop
rorl
outsb
scas
outsl
xor
sbb
andb
xor
inc
inc
push
push
gs
sbb
pusha
push
pushf
outsl
pop
rorb
leave
mov
push
mov
push
je
xorl
push
inc
dec
cld
cli
std
sti
fisubl
or
repnz
and
int
mov
out
sbb
add
in
bound
pop
sbb
leave
adc
out
les
push
add
rorb
mov
jp
sub
jmp
bound
popf
testb
inc
mov
adc
lock
scas
inc
xcrypt-ecb
cmpsl
dec
cld
lahf
fstpt
mov
loop
test
stc
cmp
cmp
mov
and
loop
jl
idiv
adc
inc
fwait
cmp
mov
sub
je
xchg
xchg
int
inc
fwait
je
rorl
addr16
mov
jb
cmc
and
cltd
and
sahf
aaa
mov
sub
sub
fiadds
popa
sbb
adc
push
inc
mov
repnz
push
or
pusha
add
adc
fs
cs
adc
daa
cltd
stos
inc
and
fnsave
cmpsb
mov
sub
lock
sbb
add
push
push
push
xchg
aad
mulb
add
mov
jnp
enter
jae
sbb
fnstenv
xchg
mov
inc
xor
pop
outsb
jno
or
lock
ror
imul
cwtl
push
sub
mov
mov
xchg
stc
jae
out
inc
inc
sub
mov
icebp
repnz
mov
jns
pop
jns
dec
imul
rorl
pop
cmc
mov
scas
or
sub
mov
lahf
jmp
dec
xor
insl
loope
leave
sub
js
enter
add
push
mov
loopne
xor
pop
or
insb
mov
pop
dec
out
mov
icebp
push
call
mov
cmp
fwait
push
xchg
mov
imul
jae
mov
jno
jecxz
out
push
shrl
dec
faddp
mov
jp
daa
in
stos
and
mov
mov
pop
sub
fildl
fwait
dec
enter
mov
push
sbb
push
pop
mov
adc
shlb
and
xor
aas
popa
jb
xor
leave
mov
mov
jmp
pop
and
loopne
xor
call
mov
pop
lret
movsl
push
nop
in
out
jmp
in
cmp
pop
mov
es
xchg
lds
jb
repnz
fstpt
ss
cmp
lds
hlt
adc
outsb
xchg
inc
push
mov
or
dec
add
insl
pop
or
dec
cmp
dec
test
mov
or
mov
xlat
sbb
fadd
mov
pop
cld
lret
sbb
pop
test
cmpl
rorb
ret
lds
fimull
sahf
arpl
fs
stc
outsb
cmp
push
div
negb
add
das
fcompl
sub
stos
mov
mov
je
jecxz
pop
push
mov
adc
or
call
loop
test
int3
push
sub
pop
mov
and
aam
sbb
mov
lock
inc
mov
xchg
dec
popf
shlb
loop
int3
jp
and
jl
jecxz
loop
xchg
jecxz
add
les
pop
outsl
or
inc
leave
ret
xor
xor
testb
push
mov
adcl
jecxz
cwtl
aaa
cli
mov
ja
repz
xchg
xchg
and
test
lods
out
lahf
mov
outsb
out
push
add
mov
xlat
fists
cli
pop
jmp
in
pop
loope
mov
loope
pop
mov
hlt
cmc
or
adc
adc
or
push
out
mov
loop
xchg
shr
or
lods
xlat
pop
out
mov
stos
std
add
fldt
jne
in
jne
jmp
or
stos
test
pop
imul
pop
inc
iret
jae
xchg
rclb
mov
mov
addb
sub
push
mov
inc
or
stos
dec
pop
popf
and
int
jnp
jbe
cli
mov
fsubl
add
push
fstl
js
lret
push
repz
cmovnp
rol
jg
mov
and
loope
les
jp
push
jg
into
xchg
jmp
and
dec
insb
loopne
pop
sti
mov
xor
sbb
fadds
xchg
stos
into
dec
ret
lcall
fdivrs
add
cli
cli
fsubs
test
inc
add
mov
xchg
into
or
push
negl
add
pop
and
inc
test
or
cmp
rolb
test
adc
push
pop
cmc
lods
fst
ss
jmp
cmpsb
or
rcll
dec
loopne
xlat
inc
push
ss
test
fsubrs
and
test
imul
sub
loop
mov
cmc
jp
inc
mov
add
push
outsb
inc
jns
or
pushf
xchg
shrl
fwait
ror
inc
mov
cmc
xchg
xchg
push
add
test
aam
push
loop
negl
enter
gs
or
or
sbb
adc
mulb
inc
jne
adc
mov
sbb
sub
push
scas
ret
dec
cmp
aad
test
xchg
sub
jmp
outsb
out
mov
ret
and
mov
jb
jno
dec
jge
cmp
cli
adc
sub
ret
push
lret
leave
pushf
mov
fs
sahf
icebp
cwtl
and
out
jns
xor
inc
xlat
push
sti
outsb
dec
testl
push
mov
xchg
or
call
enter
lods
push
mov
adc
test
jnp
dec
bound
xchg
repz
lock
push
push
rclb
inc
cwtl
int
andl
cli
cmpsl
xor
sti
or
fsubl
jb
rclb
int3
fcompl
add
testb
shrl
ja
add
hlt
and
add
lret
pop
mov
cmpb
mov
mov
jecxz
mov
xchg
mov
lret
js
lods
cmpsb
into
dec
ja
jl
mov
stos
adc
mov
or
lret
shll
mov
xor
imul
cs
xchg
adc
clc
mov
dec
jnp
aaa
inc
test
add
dec
ss
dec
int
sbb
lahf
xorb
xchg
push
out
add
pop
inc
insl
popa
daa
cmp
xor
mov
sub
loopne
push
dec
fldcw
sbb
mov
pushf
and
lds
pop
orl
sbb
mov
loopne
push
sub
pop
jns
outsl
test
nop
sbb
xchg
xlat
adc
and
lods
inc
imul
sbb
sahf
jp
sub
mov
jns
mov
dec
call
mov
jl
adc
into
xchg
popa
gs
je
mov
fwait
imul
popa
aam
mov
les
mov
or
push
pusha
into
daa
jbe
fucomi
xchg
xchg
push
test
and
sbb
cltd
testb
movsb
mov
adc
les
mov
add
test
in
hlt
leave
jg
jb
inc
in
adc
fistps
xchg
pusha
xor
outsl
test
push
pop
pop
jecxz
stc
lock
ficompl
cwtl
mov
adc
adc
pop
shll
pop
inc
loop
push
xorb
mov
xchg
arpl
arpl
mov
mov
lret
inc
mov
inc
int
sti
ja
pop
mov
jo
and
mov
mov
adc
shll
ljmp
pop
jo
out
cld
out
imul
push
mov
scas
movsl
shll
repz
lock
mov
or
insl
ret
sti
aam
out
or
xchg
ret
jp
divl
xor
mov
daa
push
test
inc
clc
aas
sti
mov
add
jo
xor
mov
mov
iret
rolb
out
sub
mov
mov
cmp
aas
insl
and
aas
push
add
xlat
or
mov
cmc
xorb
adc
mov
jmp
arpl
cmp
lret
jge
neg
das
repnz
pop
scas
and
popf
jle
dec
mov
push
jne
loope
test
ja
jae
cmpl
jb
sub
jle
loopne
mov
add
mov
push
call
pop
or
stos
fisttpll
ret
js
mov
or
push
mov
push
lds
mov
adcl
loope
dec
adc
pop
mov
xlat
je
pop
cmp
and
daa
push
and
fs
cmp
sub
in
xor
lds
push
rclb
stos
jo
mov
jp
jne
push
dec
inc
mov
cs
movsl
jae
mov
mov
cmp
out
xchg
popf
and
inc
jo
int3
int3
loopne
cmpsl
lods
or
andl
lds
adc
pop
push
sub
lods
pop
adc
cmp
cmp
lret
stos
fwait
repnz
roll
arpl
loopne
sbb
sbb
mov
adc
sbb
bound
sti
inc
push
sbb
mov
movsl
jb
push
dec
mov
movsb
push
fisttpll
stos
add
jns
pop
cmp
sbb
movsl
rcr
push
mov
jnp
xor
pop
mov
xchg
scas
fndisi(8087
and
ret
insl
and
out
adc
fnstcw
adc
jecxz
or
xlat
add
dec
out
mov
out
push
adc
or
inc
leave
les
shll
lea
or
sbb
lods
gs
fldl
into
push
dec
pusha
mov
push
stos
repnz
push
fadd
mov
or
xchg
inc
int
arpl
sub
mov
push
daa
mov
inc
cwtl
or
and
hlt
sub
cmpsb
pop
rcl
clc
or
jge
repnz
stos
mov
cmc
out
or
pop
lahf
cmpsl
inc
cld
nop
repz
dec
pop
jmp
stos
push
sbb
fldt
cwtl
cld
insl
dec
mov
daa
test
ret
adc
je
sub
inc
jno
les
int3
outsb
outsb
lods
add
inc
and
cmp
push
cmp
popf
sbb
xor
sub
fiaddl
sub
cmp
out
lret
pop
or
cltd
es
dec
sbb
add
cmp
pop
fistl
xor
ret
leave
mov
test
push
cmp
adc
pop
mov
lret
push
mov
sahf
insb
fildll
push
pop
jbe
out
gs
xor
imul
adc
inc
xchg
sub
xchg
add
iret
shll
imul
add
push
mov
repz
xor
in
ss
int3
xchg
mov
push
mov
cmp
cmp
stc
inc
push
jp
int3
dec
movsl
lahf
divb
pop
int
mov
dec
popf
movsl
cltd
dec
cmp
fsubr
lods
or
dec
int
dec
imul
adc
stos
pop
hlt
push
jb
and
and
fidivl
sbb
add
fcmovne
lret
dec
aaa
fsubrs
aam
xchg
inc
int3
adc
xchg
push
and
sub
and
outsl
pop
dec
adc
sahf
mov
adc
enter
or
sbb
cmpsb
out
and
popa
push
push
cmpsl
aam
xchg
mov
lods
dec
pop
sub
iret
in
iret
sbbl
push
pop
fwait
mov
enter
out
mov
inc
jmp
or
cmpsl
xor
shrl
and
mov
test
arpl
fldl
dec
xor
shrb
ljmp
sub
pop
ror
test
in
lea
xor
mov
imul
std
outsb
sbb
fisttps
adc
lahf
fdivrl
inc
repz
dec
add
fisubs
addr16
push
lods
cmpsl
xor
jne
jbe
popl
push
push
jno
adc
pop
repnz
jae
lar
jb
les
and
cmp
xchg
and
jae
out
cmp
add
mov
aas
add
ss
cmpb
movl
flds
jo
data16
popf
or
out
jo
push
test
adc
movsl
iret
dec
sub
and
add
lea
sbb
std
movsb
dec
jmp
movsl
ror
dec
imull
push
and
xchg
leave
test
jno
int3
mov
pop
xor
pop
fsubrl
xor
js
ret
outsl
dec
mov
inc
add
lret
pop
icebp
sbb
mov
inc
insl
ds
ds
lret
mov
inc
outsb
pusha
sbb
pop
inc
push
roll
aas
jecxz
jge
inc
ret
cmp
das
cmp
imul
xchg
sahf
sahf
pop
push
in
or
xchg
dec
cmpsb
push
enter
sbb
ret
jg
mov
fisttpl
sub
mov
fidivs
mov
add
jle
inc
dec
sub
popf
adc
mov
xchg
arpl
enter
or
mov
xor
xchg
mov
pop
mov
lock
mov
mov
popf
xor
sbb
popf
call
cmpsb
cmp
int
je
mov
ret
inc
add
bnd
out
ret
test
jmp
sub
fcmovu
scas
and
mov
mov
in
sub
out
xchg
shll
jl
pop
add
dec
sahf
xor
frstor
mov
dec
in
cld
push
aad
mov
shll
jmp
out
or
push
dec
adc
loop
dec
jo
andl
xor
aaa
in
inc
lret
cmp
repnz
ret
pop
in
out
mov
mov
mov
sbbb
add
int3
aas
aam
cwtl
popf
or
inc
sbb
sbb
add
or
pop
loope
imul
or
loopne
lahf
ljmp
movsb
pop
mov
add
pop
fcmovnb
inc
pop
xchg
lods
ret
fs
ja
add
jle
orl
sahf
jne
sub
sub
int
bnd
mull
rorl
lds
xchg
loop
popa
dec
inc
lret
cwtl
loop
inc
ret
add
sub
pcmpeqd
dec
cmovp
scas
jge
ds
mov
sti
mov
fimull
aad
jle
cmp
and
out
mov
jl
pushf
sahf
jge
adc
aas
add
xor
sbb
adc
iret
jl
add
ret
add
add
xchg
push
sbb
sbb
sti
out
notb
inc
xchg
push
mov
outsb
mov
fdivrs
hlt
pand
xor
cltd
add
sbb
xchg
movsb
cmp
jmp
push
sub
loop
leave
das
loopne
xchg
sub
ds
int
popf
je,pn
sub
loope
xor
pop
rcrl
loopne
int3
pop
and
cwtl
es
sbb
lcall
cmp
adc
xchg
fidivs
pop
mov
fisttps
adc
sbb
or
mov
inc
stc
xor
mov
fnstsw
mov
rclb
jno
icebp
pop
stos
add
push
in
mov
nop
out
push
mov
jecxz
inc
adc
mov
aam
fs
int
js
daa
adc
sub
adc
xor
popf
inc
push
dec
adc
sub
inc
lcall
cmp
iret
sub
push
jmp
cmpsb
insl
hlt
mov
mov
sub
mov
adc
dec
and
add
aas
xor
or
and
xchg
scas
lea
pusha
rcl
lock
sbb
sbb
xchg
popf
inc
lcall
sbb
cmpsb
xor
dec
or
cmp
pop
sub
or
mov
cltd
cs
lods
pushf
mov
xchg
test
sub
enter
jl
mov
out
push
add
rol
mov
push
push
repnz
xor
dec
xchg
ret
enter
ljmp
jg
jb
aam
mov
jb
fwait
dec
sbb
ss
adc
jg
scas
xchg
aaa
lods
pop
rsm
stos
std
je
xorl
jnp
dec
pop
gs
orb
inc
test
inc
jnp
pop
clc
std
push
std
mov
scas
dec
mov
xchg
push
xor
add
ja
xor
repnz
cmp
dec
js
jmp
cmp
test
negl
xchg
sbb
adc
inc
xor
xchg
inc
icebp
stc
jne
sub
insb
popf
add
movsl
add
mov
loop
xor
sbb
xor
cltd
jnp
inc
push
xchg
or
stc
movsl
xor
sbb
mov
outsl
lea
sarb
outsl
bound
cltd
xchg
je
cmp
jo
or
sub
test
inc
shll
mov
aas
lahf
data16
and
out
std
and
icebp
out
cmp
test
sbb
shlb
and
mov
mov
popl
xchg
pop
lods
jge
rdmsr
scas
sarl
fdivl
mov
icebp
lret
cwtl
sti
inc
jp
jnp
imull
adc
dec
xchg
lea
stos
daa
clc
movl
jb
lcall
sub
and
hlt
adc
pushf
jle
jge
or
and
inc
cli
outsb
insb
pop
cltd
or
daa
mulb
mov
aas
aaa
arpl
cmpsb
cmc
cltd
add
mov
mov
or
jle
jae,pn
imul
jns
imul
mov
loope
scas
shrl
push
and
stos
push
popf
xchg
fsts
in
mull
sti
adcl
sub
testb
and
dec
adcb
cmpl
and
movsl
scas
pop
jne
mov
cmp
sbb
fwait
or
push
fwait
aas
or
xlat
repz
push
loopne
push
mov
gs
cmp
push
scas
jno
cmp
ret
jnp
shll
jl
sub
mov
jno
gs
out
push
int
cmp
fisttpl
jp
jnp
xchg
sub
pushf
mov
cmp
in
or
iret
outsb
mov
pusha
jmp
mov
dec
sti
pop
sbb
xor
out
mov
movsl
and
push
scas
push
mov
jl
push
out
xor
pushl
or
adc
pop
push
push
and
dec
push
stos
and
adc
mov
inc
mov
push
mov
out
adc
test
xor
jle
loopne
fwait
cltd
or
adc
mov
ficoml
frstor
das
pop
popf
cmp
mov
jno
int
out
test
sub
xor
sub
popa
loopne
jno
dec
cmp
fsubrs
or
sbb
inc
or
dec
scas
leave
inc
xchg
or
aaa
jmp
xor
pop
repnz
lcall
jb
jp
mov
and
sahf
ss
iret
fwait
hlt
jnp
dec
sarb
fildl
sbb
mov
cmp
jmp
dec
push
mov
scas
and
imul
test
jnp
je
xchg
inc
cmp
leave
push
jo
adc
xor
popa
lods
cmp
mov
ret
and
push
push
xor
int3
adc
inc
repnz
in
dec
dec
xchg
test
adcb
jns
adc
push
dec
pop
xor
aam
pop
les
push
sub
and
fucomp
cmp
push
arpl
in
mov
push
xchg
jno
mov
sub
mov
push
and
mov
mov
sub
pushl
pop
pushf
gs
into
jle
sbb
push
aaa
or
and
and
js
aam
enter
inc
ret
pop
fstl
mov
popf
or
add
push
daa
add
loop
lret
ss
outsl
int
xchg
outsb
jno
cmp
arpl
jne
or
jp
outsl
pop
xor
dec
dec
dec
pop
cmp
filds
inc
cmpsb
cltd
sbb
call
mov
sahf
fisttps
hlt
les
pop
sub
ffreep
insb
insl
std
mov
xchg
or
icebp
pusha
repnz
cwtl
loop
or
das
bound
adc
out
mov
mov
enter
jl
or
xchg
mov
xlat
lods
outsl
loopne
push
push
sbb
xchg
adc
adc
cwtl
enter
cmc
mov
and
stos
int
mov
jb
hlt
dec
jbe
shrb
add
lret
jecxz
rcrl
adc
add
pop
xor
push
pusha
xchg
pop
nop
in
adc
cmp
and
xchg
push
and
rcrb
dec
lret
lea
enter
dec
mov
push
hlt
and
std
dec
movsb
popf
xorl
jmp
dec
xorl
subb
scas
enterw
mov
or
sbb
or
push
fildll
xor
addb
enter
iret
push
jb
js
movsb
lret
xchg
add
imul
push
or
mov
mov
pop
mov
popf
cmc
inc
enter
mov
fadd
pop
sbb
mov
mov
or
orb
out
dec
cmpsb
jge
repz
inc
in
lods
xor
pop
add
dec
ljmp
test
clc
pop
sti
jbe
jo
push
imul
pop
iret
cwtl
dec
pop
mov
or
xor
xor
shll
pop
xchg
jle
dec
adc
fiadds
dec
dec
mov
inc
fidivs
cmp
xchg
mov
sub
cmp
je
push
adc
aam
push
mov
cltd
cwtl
push
dec
adc
xchg
arpl
add
jae
inc
inc
and
lods
inc
dec
ret
sarb
lcall
aas
push
fucom
aaa
jge
jg
scas
ss
bound
shll
sahf
shll
call
pushf
loopne
aaa
push
xchg
adc
js
fs
xchg
pop
push
mov
aam
testl
mov
sbbl
dec
push
dec
sbb
jo
dec
xor
cmpsl
repz
mov
lret
outsb
iret
sarb
adc
mov
scas
in
dec
cli
sbb
aam
in
cmp
test
cli
andb
push
sub
xlat
mov
push
xchg
push
pop
push
cmp
repz
test
sub
scas
xor
lret
outsl
or
xor
mov
push
xorl
mov
cltd
add
mov
cli
cmp
ds
inc
xchg
arpl
dec
icebp
shll
jb
mov
push
add
mov
aad
pusha
xor
adc
pop
xchg
fisttpll
mov
outsb
enter
mov
movsb
lret
shl
cmc
rclb
mov
mov
mov
jne
xor
mov
xor
out
pop
inc
push
call
int
jne
xor
ret
js
adc
jmp
jg
mov
cmp
shl
mov
push
iret
into
xchg
add
jg
add
jle
cltd
icebp
mov
movw
ret
cmp
jne
mov
xchg
jns
adc
cwtl
xchg
push
mov
mov
aad
jmp
adc
pop
cli
mov
cmpsl
bound
xorb
xchg
pop
jae
jp
or
mov
clc
popa
jbe
cld
and
push
xor
push
hlt
sbb
fdivl
cmc
inc
movb
xchg
out
jns
notl
int
cltd
and
clc
mov
push
ds
cmp
jne
inc
fadd
xchg
dec
or
jns
scas
imul
inc
xchg
xchg
fldcw
in
insl
jmp
add
out
xor
xchg
add
cmc
lods
lods
push
xor
insb
xchg
sbb
subb
enter
out
mov
dec
pop
clc
push
icebp
hlt
out
filds
iret
jg
hlt
int3
xor
jb
loope
mov
mov
cmp
or
mov
inc
sbbl
sti
jmp
clc
daa
clc
js
push
rorl
outsl
imul
fldenv
push
jecxz
imul
dec
push
rorl
add
ret
ljmp
mov
arpl
lret
jmp
sub
and
mov
aas
lret
jl
cmp
dec
in
imull
les
sarb
pop
jo
in
cmp
or
mov
ss
or
add
push
addr16
xchg
push
nop
into
xchg
repz
sbb
imul
pop
push
outsb
mov
jge
fcomps
add
leave
and
ret
mov
out
sub
out
mov
dec
or
fidivrs
dec
mov
mov
lcall
lret
pop
popf
dec
imul
clc
cmpb
popa
sbb
es
or
or
cltd
dec
cmpl
adc
sub
fsts
push
icebp
push
add
pushaw
pusha
sub
push
test
mov
negl
outsl
je
enter
mov
test
cs
shll
dec
pop
inc
push
das
addl
out
mov
notb
pusha
push
cmpsl
js
mov
lcall
hlt
das
jae
lea
subb
jb
inc
ljmp
addb
mov
je
mov
jmp
xor
jne
jmp
movsl
call
push
nop
mov
pop
gs
repz
or
sti
pop
push
insb
sarb
repz
mov
pop
mov
mov
or
movsl
test
test
cmpsl
fprem1
or
insb
ret
filds
daa
sbb
rcrl
pop
rorl
cmc
stos
lret
push
lea
fadds
rcrl
in
mov
and
jo
cmp
sub
or
and
daa
iret
mov
jbe
mov
add
add
xchg
xchg
test
pop
dec
repz
stc
cmpb
test
xchg
dec
or
add
push
sbb
mov
icebp
test
jecxz
dec
out
jnp
add
inc
daa
or
fimuls
inc
dec
and
mov
sub
jge
and
lea
cmp
add
into
mov
std
xchg
fnsave
stos
sbb
pop
repz
sbb
in
and
dec
rol
aad
jne
and
inc
pop
outsl
lret
xchg
dec
sbb
ret
nop
rcr
aad
cmp
pop
aas
inc
pop
shll
loopne
xchg
push
add
rclb
out
pop
cli
xor
mov
scas
inc
jecxz
sub
inc
loope
mov
popf
dec
mov
sub
dec
es
lds
repnz
sub
xor
scas
add
mov
push
jle
loope
adc
mov
lock
xchg
xchg
add
ss
jp
iret
cmpsl
jl
js
inc
mov
push
mov
mov
pop
mov
repnz
and
lahf
loop
sub
clc
jmp
cmp
rcrb
rcrb
test
push
cmp
inc
fadds
sti
push
push
push
ds
in
push
pop
lods
mov
cwtl
mov
rcrl
jb
jp
inc
adc
mov
out
inc
out
push
xor
fsqrt
adc
ret
cmc
inc
mov
sub
cmp
pop
jg
xchg
pop
mov
fadd
out
rorl
push
imul
scas
sbb
stc
lret
daa
mov
push
mov
pop
inc
out
mov
in
test
pop
jecxz
sbb
sub
dec
lds
ret
xorl
stos
or
mov
movsl
test
andl
mov
movsb
fwait
sub
iret
cmp
daa
xchg
push
xchg
push
sar
jecxz
mov
and
jns
and
jns
in
push
mov
adc
add
incb
aas
mov
jmp
nop
inc
inc
jp
int
mov
in
jno
pop
mov
add
or
pop
jle
or
test
jmp
mov
imul
adc
mov
rcrb
push
mov
aaa
dec
and
sub
bound
inc
fidivl
insb
sahf
mov
mov
fcmovnu
rorb
mov
xchg
dec
mov
sbb
sbb
or
inc
arpl
call
dec
aas
and
jno
jl
mov
lock
inc
loop
inc
sub
mov
jbe
insb
rcrl
add
dec
xor
inc
and
ljmp
jmp
jns
jp
ret
mov
push
jmp
cmpsl
pop
in
xor
mov
push
arpl
add
lods
repz
xchg
jle
add
fs
xchg
cltd
repz
add
repnz
mov
push
cmp
sahf
test
into
out
in
pop
ss
aaa
or
or
mov
or
outsl
daa
or
fildl
call
out
or
jg
or
sti
jno
lea
mov
mov
shlb
jo
dec
pop
jmp
push
test
xchg
out
mov
aam
cltd
mov
mov
fcompl
jb
or
jae
call
inc
jle
or
push
pop
lahf
inc
cwtl
call
sbb
cmovge
cmp
xchg
mov
loop
push
pop
cmp
pop
jb
jbe
jb
sub
out
jp
jb
and
inc
orb
fstpt
cli
or
push
outsl
sub
daa
push
push
and
pop
inc
cmpsl
jne
add
mov
mov
mov
xchg
pop
repz
xor
mov
pushf
dec
dec
lea
xlat
repnz
mov
add
pushf
std
cltd
mov
in
loope
mov
icebp
xor
fcoml
fdivrl
and
sub
push
xor
roll
push
pop
mov
lods
xor
adc
jmp
and
mov
and
nop
std
loopne
outsl
mov
push
cmp
and
push
out
and
or
lret
dec
mov
push
mov
nop
sub
outsb
mov
sub
loope
test
pushf
cli
or
dec
outsl
test
popa
or
mov
outsl
push
or
data16
test
xchg
pop
xchg
push
fdiv
loopne
dec
mov
loopne
sbb
pop
sub
adc
pop
xor
pushf
inc
mov
fst
fwait
add
mov
mov
sti
ja
arpl
and
sbb
adc
setle
add
divl
int3
push
push
push
xchg
fcomip
inc
pusha
jecxz
sub
icebp
sbb
sub
push
imul
cltd
xor
push
testl
fldl2e
lcall
cmp
mov
dec
or
jl
imul
mov
fcoms
in
dec
or
xor
jp
add
push
jp
jbe
lahf
imul
loop
push
mov
addr16
push
data16
int
pop
xlat
inc
data16
push
lea
pop
ljmp
mov
je
int
popa
jno
xor
or
mov
inc
fnstcw
push
in
push
out
and
scas
pop
je
fs
ds
aaa
out
fbstp
sbb
dec
sub
mov
dec
jle
movsl
adc
test
ret
push
in
add
jno
lahf
rorl
cmp
add
mov
addl
je
mov
cmp
xor
pop
sbb
sbb
sti
mov
out
mull
jo
sbb
add
push
pop
xor
mov
fstpt
xchg
jmp
bound
mov
and
mov
push
mov
cli
jge
insb
shll
adc
out
mov
shl
inc
jmp
jbe
adc
insb
addr16
adc
loope
hlt
fbstp
push
sbb
aad
loop
mov
xchg
or
lret
jp
dec
pop
inc
lahf
repz
jno
xlat
mov
dec
or
negl
aaa
mov
or
lods
add
shll
xchg
pushf
lret
sbb
rcll
pusha
in
cltd
lcall
cmpsl
jmp
mov
or
ret
popf
adc
insl
jp
mov
or
std
cltd
sub
enter
lock
data16
stos
loope
movsb
test
in
test
cmp
push
inc
stos
jle
xchg
dec
cmp
outsb
dec
mov
lods
or
xchg
or
mov
jmp
fldl
mov
ljmp
mov
mov
cmpsl
pop
in
push
mov
dec
jg
imul
sub
xor
add
push
jge
ja
movsl
mov
fcoms
mov
pop
fwait
daa
push
xchg
or
stc
mov
adcb
imul
cmp
in
add
ret
lods
out
in
pop
add
inc
je
push
mov
push
outsl
ljmp
and
mov
cmp
and
mov
cmpb
into
aam
movsl
mov
mov
pop
in
insb
and
and
jle
popa
movsb
add
push
jp
adc
add
in
push
sbb
inc
cmp
xor
cmpl
adc
push
mov
in
cwtl
pop
cmp
ss
inc
xlat
mov
jbe
shlb
mov
in
mov
cmpsl
mov
and
push
pop
ss
push
imul
fwait
sub
loope
testb
mov
sti
cmp
cmp
mov
in
repnz
jg
gs
xor
lret
jmp
sbb
lock
cs
jp
adc
push
add
repnz
icebp
jg
xchg
jae
or
mov
sbb
cmp
ficoml
sbbl
xchg
stc
or
xorb
data16
stc
ja
xor
mov
dec
cwtl
mov
mov
inc
pop
and
out
add
insl
stc
mov
and
adcl
push
inc
ret
mov
scas
sub
or
out
and
icebp
xchg
popl
xchg
add
ret
ljmp
js
xchg
and
outsb
jge
inc
pop
sarl
iret
call
and
mull
inc
jmp
popf
add
xor
test
sbb
sbb
sub
ja
xchg
inc
shlb
sub
mov
cmp
push
add
pop
jmp
idivl
mov
mul
adc
outsb
adc
adc
push
sbb
mov
aas
sub
fwait
and
mov
mov
imul
adc
fstpl
or
jne
sub
and
xor
sub
mov
negb
add
add
adc
jge
addr16
and
mov
inc
lret
or
lods
sub
loop
shl
pop
hlt
in
mov
fstpl
inc
in
fbstp
cmp
mov
lcall
dec
adc
mov
cmp
loop
adc
sbb
lds
lds
xchg
fs
jmp
or
inc
fwait
popf
out
icebp
aam
int3
cmc
mov
cltd
xor
pop
jmp
mov
js
xchg
in
jmp
fistpll
pop
test
ds
sub
sbb
pop
cmp
pusha
adc
lods
mov
stos
mov
cmpb
cmp
jmp
iret
enter
stos
ja
roll
cmpl
in
mov
mull
stc
jbe
lahf
lret
vpsadbw
inc
xorb
pusha
stc
push
popf
jmp
ret
and
mov
sbb
jb
pop
add
insb
push
pop
std
mov
xlat
sbb
jmp
adc
inc
aam
fistpll
lods
std
scas
je
sbb
imul
xor
testl
cmp
ret
mov
subb
and
jns
hlt
pop
adc
pop
sub
bound
xchg
fildll
cltd
fmull
mov
jmp
push
jp
movsb
in
mov
lods
pushf
push
jb
adc
fisubrs
mov
or
xor
and
arpl
fwait
adc
incb
es
dec
mov
fmul
sbb
pop
int
add
in
loope
pop
or
ja
jb
test
out
into
mov
test
fcmovnb
insl
dec
out
jp
imul
mov
sbb
scas
sbb
pop
inc
pop
mov
lods
into
fsub
sub
xor
fucomi
movl
mov
mov
push
shll
movsl
sub
repnz
dec
cld
lret
lods
fstps
jge
mov
mov
mov
inc
ja
mov
mov
lret
jnp
shlb
arpl
mov
stos
frstor
adc
cmp
inc
push
sub
cmpsl
or
add
or
xchg
lods
decb
push
iret
pop
xor
push
jbe
sbb
pusha
xor
and
mov
adc
dec
scas
fsubrs
add
xor
stc
xor
call
sbbl
dec
adc
cltd
dec
inc
sub
iret
mov
sub
std
xor
adc
aas
add
jbe
pop
sbb
in
imul
push
sub
jge
lods
fldl
push
nop
or
add
fldt
test
adc
lock
jne
and
lret
mov
fmuls
movsl
and
rcl
sti
pop
adc
pusha
les
faddp
jge
dec
add
xor
pop
scas
and
pop
scas
xor
mov
lods
jne
mov
jmp
or
xor
mov
testl
jbe
je
pop
cli
and
mov
scas
or
cmpl
push
rcrl
imulb
inc
enter
jecxz
leave
and
dec
dec
insl
push
jecxz
jl
pop
jge
jle
fs
addb
into
gs
adc
les
repz
lock
pop
sub
jp
adc
jbe
daa
lods
add
and
cltd
jl
ljmp
dec
or
mov
nop
sbb
pop
lahf
mov
dec
lods
or
xchg
xchg
ficoms
je
testl
inc
sbb
in
xlat
cmp
push
or
cmp
push
mov
repz
sbb
lret
and
fstpl
xor
fwait
pop
mov
sub
or
out
out
pop
stos
fstpl
fisubrs
sub
mov
fwait
mov
ljmp
mov
orl
push
jge
bound
movsb
fldt
sbb
inc
pop
mov
cmp
mov
out
icebp
jl
xor
aad
cmpsb
cmp
mov
push
movsl
or
dec
mov
push
inc
stos
loopne
rcrb
mov
pop
frstor
pop
das
lea
out
jecxz
nop
sub
imul
and
test
push
pop
aad
lret
movd
or
sarl
jmp
pop
xor
rolb
in
xchg
jge
cmp
iret
lret
mov
cmp
lret
mov
xchg
imul
mov
test
nop
add
out
inc
ret
and
mov
cmpsl
jnp
push
add
popa
lds
dec
sub
sub
mov
xlat
iret
mov
incb
push
push
cs
mov
dec
inc
imul
ret
mov
es
mov
not
call
mov
mov
leave
sarb
icebp
sahf
fwait
mov
cltd
inc
aam
es
mov
das
pop
pop
insb
out
stos
sbb
int
dec
mov
ret
mov
mov
push
mov
inc
cmpsb
fidivl
imul
test
sub
mov
lods
aaa
shlb
xchg
adc
xchg
fidivs
pop
sub
orb
cld
jae
mov
and
sti
das
pusha
je
jg
xchg
fidivs
call
ja
mov
add
lea
fwait
cmpsb
mov
mov
cmpb
sub
or
icebp
hlt
gs
sbb
mov
xor
mov
outsb
add
enter
or
mov
test
orb
mov
sbb
mov
outsl
cmp
dec
aas
and
adc
outsb
popl
adc
add
or
stc
test
test
sti
inc
into
pop
imul
adc
xchg
pop
hlt
sbb
cmp
out
adc
mov
inc
lret
jmp
mov
fldt
repnz
loop
push
enter
sub
fadds
adc
mov
jbe
into
dec
inc
cmp
cwtl
cmp
mov
movsb
sub
pop
cmp
jne
xchg
pop
push
cwtl
cwtl
xchg
scas
aas
nop
cld
xchg
std
jae
jnp
pop
xor
jbe
dec
pop
mov
mov
arpl
dec
jne
or
sarl
push
ds
inc
imul
dec
das
inc
mov
scas
xor
mov
adc
rorb
inc
sbb
xor
push
push
xor
aam
xor
xchg
fs
fwait
jb
dec
xor
stc
xchg
or
aam
jl
mov
gs
lahf
add
and
mov
movsl
pop
das
lea
jnp
stc
xor
aas
outsl
bound
sbb
mov
stos
jno
hlt
push
mov
cmp
filds
in
pop
xor
jecxz
or
loope
mov
jo
fistl
dec
or
dec
mov
addr16
iret
out
xchg
scas
mov
xor
inc
lcall
notb
and
push
mov
xchg
mov
mov
or
jo
jo
and
ljmp
mov
dec
dec
decl
movsl
push
mov
cli
sti
xor
call
out
jb
in
ret
inc
in
test
and
adc
cmp
jno
nop
fildl
mov
nop
loope
sub
mov
mov
int
adc
xchg
mov
cmp
or
fldenv
stc
mov
cmp
dec
in
jne
or
sub
or
xchg
cmp
test
stc
xor
push
mov
mov
jmp
scas
test
and
xchg
das
cmp
mov
imul
mov
mov
out
lods
ficoms
jmp
test
jb
or
outsb
sti
jae
mov
rcl
jmp
mov
in
xor
add
test
push
add
movsl
inc
insl
addr16
popa
aad
sbb
jmp
push
mov
int3
sub
and
add
sub
hlt
fidivrs
cmp
cmpsl
mov
lcall
dec
pop
lock
push
pop
jb
sahf
in
push
lods
dec
and
jecxz
inc
pop
insl
push
mov
icebp
sbb
jno
sarb
repz
rcll
cmp
icebp
enter
sar
sbb
int
imul
mov
mov
add
xlat
pop
mov
fstpt
lods
stos
sub
int
mov
sbb
gs
inc
ret
adc
outsb
js
repnz
cmpl
sbb
mov
jbe
xor
out
imul
int3
sahf
aas
xchg
mov
jo
ljmp
or
aaa
insl
jp
inc
dec
inc
inc
repz
cwtl
lods
lods
cwtl
inc
movb
decl
jnp
cwtl
gs
mov
and
out
ds
pop
lods
test
jge
cmpsb
imul
adc
pusha
sbb
inc
push
push
and
mov
mov
mov
add
lcall
scas
mov
cmp
dec
pop
mov
fidivrs
xor
sub
adc
adc
lds
jae
mov
add
out
sub
pop
sub
jns
orl
ljmp
adc
test
xor
adc
cmp
xchg
cwtl
mov
shrb
lahf
push
loopne
inc
fcmovnu
pop
aam
test
out
aam
pop
mov
cli
push
sub
fisubl
mov
popa
fldenv
sub
cltd
mov
inc
leave
cmp
sbb
push
icebp
divb
push
cmp
cli
jno
lods
adc
loopne
inc
mov
aaa
stc
lahf
mov
and
or
out
call
outsb
cltd
or
mov
daa
cmp
icebp
subl
lea
dec
fisttpll
mov
jb
dec
fcompl
dec
xchg
ja
mov
aam
movsb
dec
rorl
cltd
addr16
addr16
scas
pop
dec
mov
mov
jb
sub
mov
mov
pop
sub
call
aad
lods
sub
outsl
mov
rorl
jb
mov
call
jns
jmp
stc
lods
sbb
js
ja
cmp
lods
mov
subl
lods
lahf
jg
arpl
mov
pop
sbb
int
jno
lret
data16
mov
inc
daa
bound
fs
das
add
lods
scas
add
rol
adc
rol
into
sbb
movsl
cwtl
shrl
cmpsl
adc
into
pop
xchg
in
xor
stos
iret
jecxz
fisubl
fisttpl
mov
pop
inc
dec
or
rorl
movsl
lret
lea
cs
pop
stos
mov
popf
cld
push
pop
push
dec
cmpsl
pushf
cmp
rclb
cmp
inc
ret
mov
push
mov
ja
out
lea
jecxz
stos
mov
mov
cmp
iret
xchg
fst
push
mov
imul
sub
fisttpl
ror
es
in
ror
mov
cmp
xchg
jge
fidivrl
jno
jmp
push
jno
push
shlb
out
imul
daa
stos
insl
sahf
adc
aas
test
pop
mov
push
aas
adc
daa
insl
fists
les
ljmp
fs
jge
dec
push
add
jno
test
addr16
sub
repz
div
mov
pushf
into
lahf
bound
sbb
mov
pop
loop
lea
mov
mulb
xor
je
push
mov
and
inc
xor
adc
inc
push
mov
sti
pop
or
push
xchg
add
rcpps
mov
xchg
sbb
and
mov
mov
lods
cmp
cs
ficoml
push
test
mov
lea
push
ds
inc
inc
sbb
mov
xor
add
sbb
ss
dec
lods
mov
pop
daa
imul
int
xchg
sbb
orb
popa
pushf
xchg
push
rcll
adc
cltd
cltd
cs
add
aam
mov
xchg
scas
fisttpll
mov
sbb
call
popa
mov
icebp
mov
rcr
inc
sbbl
dec
or
cmp
inc
or
inc
sbb
clc
push
sbb
cmp
pusha
mov
imul
lret
mov
js
mov
mov
andb
movsl
mov
scas
jno
ljmp
test
xor
adc
rorb
sbb
adc
je
pop
out
add
or
icebp
cmc
mov
jns
xchg
shrl
ss
xchg
into
repz
mov
xchg
mov
cmp
adc
cld
test
popa
cmpsb
outsb
sbb
js
shl
aad
lretw
mov
lahf
add
insl
cmp
xchg
and
add
or
sti
and
adc
inc
lret
or
loop
dec
popa
push
pop
jge
fnstenv
lds
nop
add
ficoml
mov
in
stos
repnz
adc
ret
outsb
sbb
add
cmpsb
jbe
mov
mov
pushw
push
jbe
pop
ret
test
sbb
aas
push
ja
lods
cmp
or
ret
jno
mulb
call
cmp
fists
xor
stos
in
test
xchg
jmp
in
add
inc
cs
pop
das
clc
inc
mov
xchg
or
lret
cli
shlb
addl
lret
jp
and
out
dec
xchg
dec
out
movsb
or
mov
cmp
add
sbb
lahf
pop
pop
and
daa
ja
pop
dec
push
ljmp
jno,pn
xor
xchg
out
or
dec
clc
fnsave
inc
xor
mov
scas
mov
push
clc
xor
stos
fs
ret
push
add
or
pop
or
xchg
lcall
sbb
pop
xor
arpl
lods
insl
pop
mov
ds
xor
xchg
loop
jbe
lock
sti
cmp
ret
mov
stc
outsl
xchg
push
dec
and
pushf
push
enter
push
sbb
repz
shlb
int3
dec
hlt
ret
dec
mov
push
ret
shll
mov
or
or
outsl
fdiv
insb
rcrb
mov
ds
andb
std
cs
js
es
push
lock
test
cmp
xchg
repnz
adc
inc
sub
rcrb
sub
or
fwait
xor
iret
inc
mov
sahf
and
aaa
cmp
imul
sti
adc
jae
dec
inc
in
js
popf
leave
push
pusha
movsb
and
jne
lods
gs
loopne
cwtl
dec
mov
xor
loop
scas
movsl
movl
and
mov
cmp
mov
inc
xchg
mov
out
dec
paddq
mov
jo
pusha
xchg
mov
xchg
xchg
jle
fimuls
lds
xchg
or
ffreep
and
fsubs
sbb
ja
cmpsl
sbb
pop
cmp
jnp
stc
or
xchg
xor
push
mov
mov
insb
push
sub
add
les
mov
mov
ja
shll
xor
xchg
dec
sub
stos
pop
divb
jge
fisubs
mov
in
xor
inc
lret
xchg
mov
sub
pop
scas
aaa
mov
andl
dec
or
enter
xchg
js
jge
jne
push
mov
sbb
sub
push
in
mov
ja
sub
out
sti
cmp
mov
mov
outsb
sbb
dec
add
enter
int3
movsl
adc
jno
pop
push
pushl
mov
repnz
pop
pusha
adc
aam
dec
cmp
mov
pop
call
jb
cmp
in
aas
xchg
adc
leave
cmpsl
and
aam
loopne
addl
dec
negl
mov
push
popa
cmpl
loope
xchg
mov
cmp
repnz
jmp
cltd
cmpsl
adc
mov
test
pop
xchg
cmp
rcll
and
iret
dec
push
loopne
inc
scas
sub
inc
inc
add
inc
fprem1
inc
mov
pop
movsb
imul
sbb
and
outsb
inc
lcall
stos
ret
xchg
push
and
rolb
jle
or
inc
inc
test
push
adc
xchg
jmp
sub
outsb
pop
cmp
xor
fcompl
popf
mov
mov
adc
aad
adcb
addr16
push
andl
jl
jne
or
lcall
dec
jmp
fstps
sub
jno
imul
call
add
adc
loopne
stc
dec
scas
mov
les
daa
sub
mov
lock
fidivrs
pop
push
xchg
stos
add
shlb
ret
fs
mov
ljmp
mov
pop
aam
xchg
sub
jle
jns
lret
in
and
jge
xor
fsubs
cmp
pushw
xchg
jb
imul
dec
cli
neg
les
ret
xchg
es
out
fstpt
add
add
sbb
aaa
jge
dec
loopne
pop
push
lock
cmp
dec
jge
sbb
push
icebp
sub
scas
add
jg
xchg
data16
je
add
dec
js
jmp
xchg
lods
ret
pop
inc
icebp
sub
adc
adc
inc
cmp
subb
jl
push
sti
pop
leave
aas
cmp
xchg
xchg
andb
bsf
incl
das
pusha
cmp
lea
jle
mov
xchg
mov
xlat
test
add
xor
rclb
cmpsb
loope
imul
dec
adcb
ljmp
in
lea
jmp
and
push
ror
out
mov
aam
adcb
jge
mov
or
sbb
fcmovb
lock
bound
hlt
adc
dec
neg
dec
movsl
cmp
mov
pop
mov
mov
in
cmpsb
into
sbb
jmp
fucom
stos
xlat
dec
subl
rcl
repnz
int
cwtl
testb
dec
pop
imul
minps
push
sbb
mov
inc
dec
stos
xorb
out
ret
lahf
jb
fldl2t
jp
hlt
adc
outsl
mov
stc
aaa
pop
fcompl
fwait
and
adc
in
jno
lods
mov
mov
in
fstps
aad
mov
and
aaa
je
cmp
dec
or
cmc
xchg
cmp
test
loopne
dec
rcrl
pop
push
inc
arpl
xor
stc
mov
daa
jnp
xchg
es
mov
push
xor
sub
xor
add
pop
cld
pushf
cli
scas
adc
mov
pop
jae
call
jno
add
cmp
and
cmp
push
mov
pop
mov
dec
and
dec
add
add
cmp
pop
out
or
jecxz
jg
cmp
daa
cmp
dec
out
lods
addr16
lret
cltd
fs
je
inc
mov
cwtl
mov
hlt
dec
loopne
push
jbe
cmp
mov
mov
imul
outsb
leave
add
add
mov
sub
jmp
sbb
mov
aad
pop
into
jmp
jne
cld
xchg
popf
cmpsb
mov
and
das
dec
int
sarl
das
ret
push
mov
dec
fisubrs
and
push
jnp
mov
jge
hlt
gs
rcrb
sbb
cmp
movsb
insb
sub
push
push
fsts
or
out
lret
les
jmp
mov
sarb
xor
cmp
stc
xchg
push
shll
cwtl
cmpb
insl
sbb
ret
movl
es
or
aad
hlt
fwait
add
popf
daa
push
adc
push
icebp
call
rclb
xchg
push
in
mov
jbe
popf
xor
sti
pushf
jl
pop
push
cmp
sbb
lock
ds
jl
ret
enter
sbb
rcrl
aas
adc
mov
mov
inc
cmpsl
in
cmpb
cli
outsl
jl
lret
cmpsl
push
push
xchg
add
lock
inc
adc
loop
scas
inc
xchg
mov
push
inc
xchg
and
jnp
jecxz
lea
loope
push
cli
jns
ftst
sahf
sahf
fsubs
xchg
dec
xor
mov
jp
leave
push
iret
mov
add
sbb
sbb
inc
popa
mov
enter
shll
call
imul
lea
lahf
test
jg
loopne
aam
xchg
push
ret
stos
push
sar
imul
mov
inc
or
in
mov
loopne
sub
and
or
in
fistl
lods
or
or
and
cmp
jo
pop
add
push
pop
fmull
shlb
push
popf
idivb
psrld
adc
imul
add
ror
cmpsl
add
xchg
mov
add
cs
leave
push
sub
imul
fs
xor
ror
mov
dec
dec
fiadds
xchg
mov
jle
add
add
outsb
lcall
xchg
mov
push
cmp
inc
aaa
pop
dec
into
cmp
pop
or
jb
loope
push
jae
mov
xchg
push
add
adc
arpl
std
dec
in
sbb
das
cli
outsb
es
mov
hlt
fmull
inc
cwtl
xor
decb
imul
into
dec
adcb
adc
hlt
adc
lods
xor
xor
pop
cmp
jbe
and
rcrl
sub
xchg
fcmovne
daa
xor
and
sbb
pop
adc
popa
xchg
ret
hlt
adc
mov
call
movsb
sbb
cmp
push
das
out
lock
jnp
cmp
cs
and
mov
cltd
mov
idiv
dec
push
pop
in
add
and
sub
push
add
xorb
pusha
mov
xchg
scas
lret
mov
iret
lock
jecxz
mov
mov
push
mov
cmc
nop
ret
push
sbb
add
inc
repnz
stc
addr16
or
cmpsb
ss
jae
imul
fcmove
or
imul
jecxz
pop
mov
imul
aam
or
imul
test
xlat
and
mov
stc
in
in
mov
dec
enter
jmp
push
lods
ljmp
iret
adc
dec
xchg
mov
movsb
push
add
xchg
outsb
sbb
ret
cmp
fs
mov
or
mov
in
pop
loopne
sarl
lds
or
test
dec
inc
mov
jno
insl
dec
repnz
mov
fiaddl
icebp
push
push
or
popa
jl
add
jmp
inc
sbb
add
pop
cwtl
and
jmp
outsl
mov
xchg
xchg
or
gs
dec
push
jmp
fwait
xor
and
fcompl
pop
and
push
mov
push
lahf
repnz
sub
push
inc
push
dec
adc
movsb
fmuls
out
aam
mov
mov
xorb
ss
les
or
dec
or
jecxz
dec
sub
imul
les
or
add
rclb
dec
fsubrs
xchg
xchg
xor
adc
js
mov
adc
mov
es
xchg
sub
push
test
lahf
je
mov
jp
xor
cwtl
icebp
popa
sbb
inc
packsswb
push
jb
popa
sub
iret
mov
pop
stos
inc
fcmovne
outsl
out
loope
jb
or
xor
test
lcall
add
inc
test
mov
or
stos
and
sbb
insb
xor
negl
jecxz
nop
or
jg
lahf
sub
sbb
cld
fidivl
fdivrl
inc
pushf
fcmovb
inc
sub
nop
das
out
pusha
jb
or
ss
dec
push
add
xor
or
enter
popa
jb
out
xchg
cli
insl
or
mov
ss
sbb
xor
push
aaa
xchg
hlt
popw
insl
sbb
mov
xor
cmpsl
mov
pop
pop
inc
rcrb
outsb
in
in
scas
add
popf
fldcw
cmp
popa
jae
loop
mov
xchg
xchg
lods
in
jbe
xor
adc
sbb
sub
adc
in
and
mov
int
test
cs
inc
das
or
lods
sub
jmp
push
lea
dec
int
mov
inc
outsb
aaa
lea
icebp
iret
jecxz
dec
aad
cwtl
jecxz
inc
pop
flds
or
test
mov
mov
or
inc
sar
xchg
movsl
cmc
popf
push
out
adc
hlt
dec
or
jl
jo,pt
cwtl
pushf
fidivl
fisttpl
jne
xor
cmp
pop
push
in
push
dec
sub
iret
cmp
push
lcall
std
arpl
orb
icebp
outsb
mov
out
fwait
or
sbb
jae
xchg
cmp
shl
push
mov
in
test
sub
in
pop
sahf
pop
and
leave
sbb
scas
push
pop
jno
xchg
adc
push
popa
sarl
lret
shlb
and
repnz
mov
fimuls
test
loopne
aad
fstpl
xchg
imul
imul
imul
xchg
pop
and
jl
dec
fnstsw
outsb
mov
das
and
dec
and
xor
gs
scas
push
loopne
cmpb
mov
mov
in
shll
test
int3
pop
mov
add
leave
fidivrl
xor
sbb
stc
dec
fbstp
push
scas
mov
cs
sub
xchg
iret
mov
nop
lds
outsb
cltd
dec
xchg
inc
fcmovu
repz
mov
cltd
pop
jb
int3
imul
les
daa
and
push
mov
test
movsl
jnp
ss
dec
dec
mov
stc
mov
dec
out
add
jns
xchg
call
enter
ret
mov
jp
dec
mov
out
mov
jne
ja
mov
push
aad
icebp
mov
pusha
jne
mov
jge
enter
pop
dec
or
rorl
adc
orb
test
sub
out
xor
pop
and
andl
leave
adc
mov
test
lret
outsb
test
ds
cmp
movsl
push
stos
jp
lea
mov
mov
subb
mov
mov
shll
jl
push
ljmp
push
aas
jge
xchg
ss
pop
mov
pop
mov
stc
test
lcall
leave
or
xchg
scas
jbe
push
push
ss
cmc
inc
lods
mov
adc
in
loop
aas
fdivrs
xor
push
adc
jnp
sbb
sub
bound
lods
push
xchg
and
push
sub
sbb
push
xor
xchg
orb
xchg
push
lock
mov
sti
cli
dec
dec
push
lahf
mov
mov
sbb
aad
xlat
scas
lret
add
sub
insb
jle
addr16
mov
lret
xor
je
and
sub
jle
dec
and
sysenter
inc
push
filds
inc
cmpsl
mov
in
pop
push
lret
decb
test
or
mov
ss
test
mov
jg
ds
dec
leave
or
imul
ret
and
out
aad
jecxz
int3
scas
test
sbb
mov
xchg
cmp
js
or
shlb
jg
xchg
sub
xor
sbb
pop
hlt
ds
mov
and
sbb
lods
pusha
fs
icebp
jg
test
dec
or
mov
push
in
fbstp
sarb
or
ret
mov
push
aas
push
ret
out
outsb
nop
insb
pop
jnp
test
pop
aas
lahf
jp
mov
inc
sbb
xor
fildl
aad
js
icebp
subb
ret
fwait
dec
xorl
sbb
mov
jle
sub
popf
add
mov
scas
cmp
addl
xchg
std
add
ljmp
flds
mov
fcompl
sub
test
ret
call
aas
cmp
in
cmc
bound
jmp
int
pop
shlb
in
arpl
out
cltd
outsb
hlt
push
js
sub
sub
add
imul
aas
cmovbe
sbb
pop
push
enter
or
inc
negb
cmp
inc
lahf
inc
xchg
fsubrl
leave
scas
pusha
mov
in
std
mov
xchg
mov
or
sbb
adc
push
into
sub
xorb
nop
sub
test
sti
nop
aam
je
push
dec
jae
xor
dec
in
jns
add
sub
imul
aad
pop
jb
sbb
out
ror
dec
setbe
xchg
loopne
add
push
mov
sub
test
in
dec
mov
scas
sbb
push
push
ja
sub
pop
jb
lea
or
push
fidivs
les
mov
sbbb
mov
addr16
leave
xchg
adc
or
mov
cwtl
mov
sahf
leave
aam
cs
or
daa
dec
dec
xor
jo
cmp
cli
subb
sbb
mov
cmpsl
or
test
xchg
enter
jno
cli
fmull
shrb
push
add
jge
scas
and
bound
mov
or
sub
adc
cmp
add
push
push
xchg
repz
adc
aad
mov
dec
cld
mov
dec
fucomp
or
clc
dec
dec
add
enter
mov
mov
jb
jne
mov
das
cltd
cltd
imul
inc
push
ret
mov
sub
cltd
mov
jbe
mov
xor
test
dec
push
testl
cltd
out
stos
or
je
inc
sti
cmp
jle
pop
icebp
lret
inc
adc
sbb
rcrb
shl
fildll
hlt
lea
inc
call
lods
arpl
ljmp
mov
enter
imul
jns
jo
rcrb
mov
xor
or
pop
jle
push
shl
ljmp
mov
test
data16
lret
fisttpl
out
and
fistpl
arpl
shrl
mov
mov
out
fdivrl
mov
sbb
xor
add
add
or
loop
sub
cmp
sub
sti
xchg
lret
repz
stc
mov
push
add
pop
dec
or
and
pop
stos
dec
int
mov
add
xor
div
fcoms
cmp
cmp
add
pop
dec
outsl
test
dec
fsubr
shll
mov
dec
movsb
cs
add
xlat
cmp
inc
out
pop
mov
scas
pop
mov
jns
lds
push
mov
jp
sbb
cmp
ja
gs
sbb
loop
outsl
pop
cmpsb
pop
outsl
sub
in
scas
test
jns
call
repnz
test
adc
fcomps
adc
lods
cmp
hlt
mov
fcomps
xor
jl
push
iret
mov
push
mov
insl
xchg
int3
pop
cmp
insb
jae
mov
inc
es
cmp
rorl
lret
jne
arpl
fwait
jb
dec
inc
lcall
xchg
mov
sarb
vpsubd
jae
aas
jno
imul
fnstenv
or
mov
shl
lock
loop
xchg
cmp
jnp
pop
pop
push
adc
scas
movsl
test
xor
repnz
iret
loope
rclb
lcall
pushf
mov
out
test
fwait
data16
add
mov
push
jno
sqrtps
idivb
or
out
shrl
jae
dec
ret
cmpsl
sarb
test
jecxz
scas
jns
sub
jmp
stos
xchg
lret
outsb
xchg
mov
mov
cmp
pop
add
dec
aam
fistpll
mov
push
ds
fsubrs
mov
int
pop
add
inc
push
out
cmp
jl
pushf
jnp
loop
fldcw
test
test
cli
insb
jbe
mov
and
cmp
pushf
adc
jbe
mov
and
add
xor
jno
jno
inc
inc
pop
pop
aaa
xor
xchg
mov
inc
and
mov
daa
cmp
into
pop
shrb
leave
xor
jle
adc
fs
pop
imul
or
divb
call
lcall
push
test
cmp
leave
jecxz
jo
add
loopne
in
popl
add
pop
loope
lcall
pop
daa
dec
jno
dec
pop
aam
jp
adc
out
daa
data16
mov
fstps
or
movsl
outsl
sar
lods
pop
nop
inc
test
pusha
lea
lock
jmp
inc
filds
ja
out
popa
inc
mov
mov
outsl
sbbl
fildll
test
xor
pop
push
shll
inc
adc
mov
sub
imul
not
cs
add
jecxz
idivl
xor
sbb
test
push
add
ficoml
mov
mov
xchg
cmp
fisubrs
repnz
jno
popf
jp
push
cmp
cmc
pop
sub
stos
repnz
je
add
mov
cwtl
scas
add
fs
lock
mov
ret
mov
pop
pop
jb
mov
adc
movsb
push
ss
and
mov
cmp
add
xchg
add
pop
inc
mov
insl
sub
xchg
push
out
sti
sahf
push
xor
jne
sub
xchg
xor
xorb
push
loopne
xchg
test
lahf
fimull
jmp
xchg
shrl
mov
xchg
addb
jge
dec
out
addb
mov
testb
or
sub
mov
scas
xor
mov
jl
in
mov
mov
push
cmp
fwait
ja
popa
in
fwait
mov
pop
shlb
pop
mov
lret
adcl
jg
add
xor
sbb
out
scas
dec
add
sub
and
clc
push
mul
inc
mov
mov
in
sahf
ss
xchg
aaa
arpl
fadds
jl
hlt
icebp
test
sarb
xchg
imul
dec
pop
pop
mov
mov
sahf
mov
int3
into
mov
sbb
jmp
inc
js
add
cmpsl
subb
cmpsb
scas
adc
and
mov
sti
sahf
icebp
sti
lods
jno
add
mov
nop
mov
and
lahf
icebp
and
mov
scas
push
in
mov
popf
and
int
jo
hlt
push
or
movsb
aam
dec
adc
ja
cmp
repnz
inc
in
lea
clc
enter
xchg
ja
pop
into
out
jae
mov
cmp
sub
mov
sub
in
pop
inc
dec
jb
pop
cmpsl
dec
push
dec
test
insb
xor
das
ret
test
lahf
dec
cltd
pop
insl
inc
cmpsl
sbb
or
mov
cmpsb
mov
out
js
adc
shl
shll
inc
mov
fimuls
and
test
mov
xchg
dec
fbld
ficoml
loope
jp
mov
out
lahf
rcll
pop
cmp
dec
inc
jno
ficoml
jp
mov
fcmovnb
addr16
adc
mov
dec
adc
mov
in
aad
cmpsb
lock
fwait
sahf
imul
jo
xchg
sar
sar
mov
inc
pushf
mov
faddl
add
dec
inc
sub
in
outsl
aad
adcl
pop
push
imul
insl
fs
popf
js
add
mov
add
adc
imull
call
or
das
in
insl
mov
inc
mov
out
xchg
pusha
insb
adc
sbbb
fistpll
adc
bound
jae
ret
testb
orl
jge
push
cmpsb
jo
gs
mov
jnp
aad
mov
iret
sub
ljmp
dec
push
je
and
jbe
movsb
xchg
pop
xchg
arpl
scas
add
or
jns
adc
jno
mov
pop
xchg
inc
push
inc
sbb
out
std
or
insb
aam
mov
add
les
push
or
mov
push
mov
cmpb
xchg
out
xorl
mov
xlat
jae
in
ret
sbb
and
and
mov
push
in
imulb
popa
popf
enter
imul
or
icebp
orb
out
mov
xor
out
mov
iret
mov
in
mov
shrb
add
sbb
data16
push
xchg
ljmp
lea
adc
push
and
sub
sub
cmp
sarb
stos
sahf
sti
pop
paddd
dec
or
jecxz
push
adc
mov
sub
imul
outsl
mov
add
jno
arpl
stc
pusha
loopne
addr16
mov
mov
orb
out
sbb
jg
les
pop
xchg
xor
les
insb
xchg
mov
xor
push
pop
push
push
sub
push
inc
fldt
push
xchg
lds
insl
repz
pushl
mov
push
ds
lcall
push
xor
lret
aam
pop
sbb
lock
inc
push
outsl
mov
fisttps
insb
add
hlt
jmp
sbbl
jg
int
adc
mov
cmpl
out
sbb
jl
adc
mov
shlb
rcll
rolb
dec
push
push
sarb
add
or
nop
pop
mov
adc
xor
cmp
push
mov
and
mov
pop
and
scas
xor
pop
pop
sbb
ret
jp,pn
aas
je
sub
stos
les
push
out
rcll
in
xchg
dec
dec
pop
lahf
lcall
aam
in
mov
loop
bound
ljmp
jbe
je
push
pop
loop
hlt
shrl
and
mov
xrelease
mov
jbe
fmul
push
xlat
lods
sbb
repnz
cs
int
sbb
xchg
ret
scas
adc
jo
into
jl
ss
xlat
push
sub
movsl
pop
popa
call
and
dec
mov
xor
nop
je
xlat
lret
inc
push
add
or
test
cmpsl
xchg
mov
pop
push
outsl
test
sahf
xchg
lahf
aaa
dec
lock
loope
mov
mov
scas
andl
call
movsb
pop
fsubr
push
add
out
mov
in
adc
ds
mov
pusha
mov
aam
jno
dec
mov
pop
cmp
push
push
jp
and
mov
js
pop
xchg
out
loopne
xlat
mov
jge
dec
out
lcall
jbe
jnp
fcomip
jl
ss
xchg
jmp
jb
out
adc
pop
repnz
and
insb
stc
jmp
out
lret
push
lahf
insl
cmp
insl
mov
aam
and
lds
mov
rcll
push
enter
lock
fst
jle
or
or
leave
outsb
add
adc
cmpsl
test
dec
loopne
jbe
out
mov
pop
add
push
jno
mov
sbb
in
sar
lods
scas
push
xchg
cmp
inc
adc
add
jo
pop
mov
jae
cld
pop
outsl
xor
xchg
xchg
insl
xchg
fsub
loopne
daa
fs
shrb
in
jae
sarb
pop
mov
jecxz
in
enter
fists
inc
mull
jp
xor
aam
loopne
add
loopne
push
jmp
inc
adc
and
sub
lock
imul
lods
mov
xchg
dec
loop
cli
xorl
sub
cld
subl
inc
leave
jmp
out
sbb
sbb
sub
add
mov
lds
aas
add
enter
incl
add
daa
pop
enter
test
cmp
arpl
pushf
ret
or
aad
daa
imul
iret
outsb
cmp
cmpsl
aad
mov
in
mov
loope
lea
cwtl
mov
mov
data16
out
sub
jmp
outsb
js
inc
lret
stos
js
sub
jns
xor
fdivrs
in
push
or
mov
push
cmp
cs
push
ljmp
sahf
sub
dec
and
outsb
loopne
insb
out
and
add
xlat
sub
test
mov
fiadds
lock
test
inc
jnp
movsb
push
scas
mov
sbb
insl
and
ret
xor
lret
sub
xlat
jns
inc
arpl
rcl
adc
ljmp
mov
adc
mov
rcrl
cmp
clc
cmp
mov
cs
mov
imul
lret
mov
xchg
bound
xchg
adc
cli
push
mov
push
dec
push
in
xlat
sub
add
dec
dec
inc
jp
and
add
das
cs
jecxz
cmc
ja
push
jbe
divl
push
int
mov
stos
data16
push
gs
xchg
pop
out
adc
mulb
push
movsb
mov
les
clc
mov
lcall
pop
in
and
popfw
mov
mov
lock
lock
xchg
sbb
or
jo
in
loope
cmpsb
inc
call
cwtl
mov
cltd
out
or
dec
dec
fs
sahf
scas
jg
dec
fdivs
and
xor
imul
jb
lds
fmul
xor
xlat
dec
call
push
rol
fdivs
jg
cmc
lahf
cmp
jmp
jg
or
mov
jmp
cmp
cmc
push
pushf
jno
adc
movsl
lret
lahf
cmp
cmp
cld
dec
mov
mov
stc
lahf
mov
rcrl
cmpsb
icebp
add
cli
dec
popf
ss
mov
xor
dec
outsl
sub
mov
imul
cmpsl
cwtl
aaa
arpl
or
xor
iret
fstps
jmp
call
mov
inc
pusha
enter
cmp
ljmp
gs
push
insl
xchg
loop
leave
mov
inc
call
aam
adc
sbb
jp,pn
lods
filds
hlt
cmpsl
gs
test
into
jne
jecxz
movsl
and
iret
pusha
loopne
xchg
rcrl
add
adc
xchg
repz
cmc
xor
aaa
sarb
in
push
sbb
arpl
shl
mov
aad
in
lods
insb
mov
loopne
mov
add
xor
iret
sbb
push
es
push
pusha
pop
test
inc
out
les
mov
cmp
call
xor
pushl
mov
sub
test
stos
icebp
cmc
and
and
cmp
mov
shrb
sub
dec
mov
enter
adc
popa
pusha
ljmp
jne
shr
push
out
popf
xor
enter
jge
dec
dec
addr16
les
sub
pop
mov
mov
pop
nop
imul
xor
lds
mov
mov
lods
test
movsl
xchg
rorb
out
sti
jb
negb
dec
mov
ja
sbb
in
je
test
xor
sbb
jbe
fisttps
pop
xor
cli
mov
fidivrl
sbb
jmp
xor
call
mov
mov
mov
mov
je
and
data16
sub
jle
adc
test
sbb
cmpsb
pop
stos
lret
int3
xchg
jno
pop
mov
jno
out
shlb
lret
lret
pop
les
je
and
push
iret
sti
rcrl
add
std
insb
mov
test
mov
out
lcall
mov
pop
jecxz
repnz
out
or
add
adc
mov
movsl
push
dec
adc
movsl
sbbb
push
sbb
dec
jbe
add
movsb
fwait
sbb
mov
mov
call
dec
sti
fimuls
js
int3
adc
rcrl
mov
int3
repnz
cmc
mov
sti
movsb
shll
dec
je
or
repnz
cmp
das
in
cltd
lcall
fwait
test
pop
addr16
jae
push
ljmp
push
add
xor
test
dec
cmp
aad
adc
nop
nop
jecxz
sub
and
push
push
sysexit
inc
clc
push
and
and
mov
cwtl
or
shrl
nop
xor
pop
push
xchg
lods
pop
mov
les
daa
ja
jb
inc
and
call
sub
cmpsb
lea
push
loop
dec
call
lds
pop
rcll
ret
and
jp
cmp
push
outsb
aas
ja
adc
pop
insl
fcompl
dec
movsl
int3
fisubl
sub
push
push
mov
jbe
pop
bound
xchg
fs
scas
cmpsl
cmp
jge
xchg
push
lahf
mov
adc
iret
dec
adc
push
pop
mov
push
mov
ss
ja
push
pop
incl
xchg
adc
inc
dec
jb
jbe
daa
pop
inc
mov
jmp
xor
in
fdiv
adc
lock
mov
mov
lahf
repz
sub
cmpsl
inc
fldt
cmp
cmpsl
int3
xor
imulb
int3
mov
lret
jp
mov
pusha
test
inc
cmpb
pop
mov
pop
sbb
pop
xchg
test
inc
clc
cmp
out
sub
xlat
shlb
shrb
cld
pop
sub
nop
sub
dec
movntq
cmc
hlt
aad
stc
mov
inc
mov
in
leave
jp
shr
jne
cli
mov
out
lea
imul
outsb
fdivrs
aad
shl
or
lea
fidivrl
adcl
or
or
out
push
jg
sub
push
sub
aaa
in
divl
xchg
xchg
adc
scas
mov
pop
mov
mov
and
xchg
fwait
loopne
mov
inc
lock
stos
int
mov
mov
loop
lods
add
dec
dec
je
test
mov
push
mov
loope
cmp
enter
mov
jle
fdivrl
sub
xchg
mov
xchg
xor
sbb
sub
lea
fimuls
mov
add
in
cmp
and
loop
and
jp
add
stos
mov
subb
loopne
inc
stos
and
cld
out
fsubrl
mov
adc
jg
push
xor
lret
jecxz
push
mov
xor
xchg
sub
ja
dec
mov
push
jle
mov
add
in
mov
xor
inc
mov
xor
xchg
push
subl
pop
fisubs
in
or
xlat
adc
scas
daa
push
cld
int
in
adc
pop
fldt
lret
out
shrb
sub
push
fisubrl
aam
fsubrl
cmc
popf
and
aad
push
arpl
out
and
orl
dec
or
in
push
mov
gs
push
cmp
cmp
mov
repz
and
jge
xor
cmp
adc
or
cmp
mov
shlb
xchg
xchg
out
or
mov
xlat
inc
mov
shl
jo
mov
out
pop
xchg
pop
mov
cmp
test
dec
or
push
call
sub
daa
sbb
or
inc
add
fisubrl
add
and
cli
jne
cmc
sub
rcrl
out
mov
push
jmp
lds
jno
sbb
xor
out
sub
sbb
or
cwtl
sbb
cs
outsl
das
test
inc
mov
or
jae
dec
repnz
mov
mov
je
je
hlt
inc
add
or
pop
in
inc
icebp
xor
dec
insb
xchg
pop
inc
inc
or
shl
mov
test
fcoml
inc
fiadds
push
into
movsb
sub
out
orb
jg
mov
sub
aas
xor
pop
or
cs
cmp
mov
sbb
add
in
dec
mov
ficomps
jno
mov
test
fs
fsubrl
or
sbb
adc
push
sbb
outsl
inc
xor
mov
stos
sarb
or
imul
addr16
in
iret
fisttpl
xchg
data16
fnstcw
adc
sub
fcomps
in
and
cltd
push
push
test
adc
pop
inc
dec
dec
pop
or
lea
lea
iret
or
add
cltd
gs
inc
adc
and
add
xchg
pop
insb
insb
cld
je
adc
xor
fsts
fstps
sbb
jns
mov
jl
test
adc
dec
mov
out
lods
pushf
outsl
aas
adc
aaa
inc
stc
jnp
and
mov
adc
xchg
repz
xchg
inc
pop
bound
add
lret
pushf
xor
mov
mov
push
stc
gs
lock
add
faddp
adc
adc
imul
cmp
jl
popa
lret
aam
mov
fisttps
jbe
in
jb
dec
cmp
js
and
fwait
inc
sbb
adc
xchg
mov
push
imul
cli
jo
dec
pop
xchg
aaa
mov
int
mov
sub
jle
into
lds
add
into
adc
sub
and
jle
insb
dec
lret
loopne
daa
lds
sbb
inc
cwtl
cmp
inc
sub
jae
sub
and
sbb
push
mov
dec
pop
xlat
mov
movsl
add
insb
pop
outsl
bound
and
fwait
and
mov
rorb
lahf
xor
or
jnp
dec
jnp
xchg
leave
jecxz
gs
popa
scas
sub
sbb
das
push
in
mov
xchg
inc
int
xor
scas
insb
notb
mov
push
cmc
arpl
cmpsb
outsl
fstpl
popa
aas
lahf
arpl
and
movsb
arpl
sub
into
nop
std
cmc
inc
notb
adc
add
add
jb
mov
adc
or
xchg
pop
stos
cmp
dec
push
inc
ja
fstps
sbb
push
dec
sub
adc
rcrb
popf
cmc
jbe
js
mov
adc
or
rcll
lea
test
push
jecxz
fcmovne
or
mov
nop
push
mov
cwtl
cmc
xor
pop
fsubrl
adc
inc
mov
movsb
into
cltd
xchg
adc
pop
or
xchg
call
jecxz
pop
loop
xchg
in
mov
jl
rcrb
xor
mov
into
subb
sbb
mov
mov
cmp
incb
bound
xchg
test
dec
fisubrl
stos
mov
and
pop
les
mov
outsb
out
add
bound
or
jae
mov
into
cwtl
cli
sbb
and
mov
aas
add
fwait
inc
mov
cmc
cmpb
fs
bound
dec
icebp
imul
xchg
pop
js
jns
inc
pop
push
pop
cmp
repz
adc
stos
inc
out
arpl
mov
inc
notl
sub
js
jno
cli
ja
xchg
jo
or
sub
movl
sub
mov
and
push
jle
flds
pop
xchg
sbb
imul
in
loop
dec
pop
push
outsl
mov
jmp
mov
mov
das
adc
ss
dec
xchg
popf
call
xchg
lods
sahf
push
call
adc
hlt
arpl
xchg
push
xorb
pop
xchg
test
testb
in
mov
lret
lahf
and
adcb
scas
jnp
pop
cmpsb
stos
xchg
into
stos
or
and
pop
imul
push
bound
mov
xor
shrl
push
out
stos
insl
test
fdivl
stos
clc
test
in
sbb
icebp
pop
dec
call
idiv
aas
mov
test
mov
pop
sarb
out
andb
popf
mov
mov
add
popf
or
inc
es
inc
inc
lret
je
or
dec
and
jmp
jns
dec
inc
xchg
loop
into
xlat
push
xorb
sub
out
fmull
cmp
ficoml
mov
cs
add
jo
mov
dec
jbe
and
sahf
faddl
pushf
mov
add
popa
fsts
jmp
lods
scas
loopne
mov
sti
call
out
and
mov
xor
sub
orb
test
test
pop
or
shll
sbb
test
sbb
inc
in
jne
jbe
and
pop
or
mov
or
daa
xchg
sub
lds
xor
arpl
out
inc
jecxz
div
xchg
mov
xor
pause
cwtl
push
adc
inc
push
xor
cmp
notb
xor
sbbb
add
rolb
adc
aaa
divb
icebp
and
adcb
jg
dec
dec
mov
mov
popf
lret
andb
sahf
adc
dec
dec
push
ss
aaa
xchg
or
mov
xchg
xchg
loop
push
scas
xchg
inc
out
mov
push
inc
test
addr16
sbb
jo
jmp
out
inc
inc
add
jp
add
cmp
mov
lcall
mov
dec
les
inc
pop
pop
outsb
shrb
add
jo
hlt
les
imull
imul
lds
jne
mov
mov
sbb
loop
lods
jno
aad
movsl
shlb
mov
ret
sub
mov
sbb
inc
add
in
cmp
add
sub
jmp
shll
dec
cmc
xchg
push
scas
cmp
xor
dec
subl
lods
xor
mov
mov
mov
repz
fildll
inc
mov
sub
sub
mov
pushf
pop
lods
ljmp
mov
xor
in
sbb
sahf
sbb
and
arpl
add
je
mov
inc
xor
cmc
stos
insb
adc
scas
popa
push
insl
scas
dec
sbb
and
sub
xor
incl
or
jg
xchg
stos
jnp
mov
and
cltd
sti
stos
mov
mov
iret
cmpsl
rcrl
loope
sbb
sbb
fiaddl
aaa
sbb
mov
aam
int
dec
sub
das
mov
xchg
and
jno
hlt
or
cmp
scas
imul
fcomi
push
xchg
dec
cmovl
mov
hlt
es
sub
icebp
cmp
jmp
jne
or
sbbb
cs
jmp
shr
ss
cli
mov
fistl
xchg
xorl
pop
or
fiadds
js
loopne
pusha
jmp
adc
add
sti
cli
mov
addl
sub
xchg
sub
mov
in
scas
jge
cli
jbe
aad
cmp
sbb
pop
dec
in
inc
jae
or
mov
sbb
and
adc
lahf
and
xor
cltd
cwtl
mov
repnz
popa
fwait
aas
or
in
add
in
test
and
inc
push
mov
sahf
or
sbb
mov
xor
lcall
and
adc
pop
xchg
out
movsl
lahf
add
ret
mov
adc
sub
insb
inc
jp
out
pop
rcll
adc
or
sub
addb
loop
push
and
adc
in
xchg
and
inc
jo
push
out
xlat
aad
mov
call
pop
in
xchg
push
mov
imul
jecxz
imul
pop
outsb
pushf
and
xor
leave
inc
test
and
andb
sub
adc
pop
or
jp
aaa
insl
stc
inc
mov
push
cwtl
repnz
notl
xor
cmp
daa
jns
aad
arpl
mov
sbb
add
mov
xchg
sbb
outsl
ds
mov
iret
inc
daa
push
sub
out
lret
shll
cmpsb
xchg
stos
jns
add
jp
sub
jne
lea
lds
and
aam
lahf
sub
in
cmpsb
cli
cs
test
popa
cwtl
sub
rolb
cmpsb
outsb
adc
mov
sbb
ret
cwtl
test
es
nop
ret
pop
into
sub
mov
mull
movhps
dec
or
mov
lds
mov
mov
push
xlat
fs
pop
dec
cmp
addl
or
pop
xor
sbb
pop
aam
int3
lds
lock
adc
sbb
imul
in
cmp
mov
psllw
xchg
sbb
lea
sub
xchg
jns
lret
pop
mov
sbb
xchg
rcr
ja
sti
loop
aaa
cmpsb
pop
xchg
jp
outsb
nop
pop
or
pusha
xor
jbe
xor
lret
hlt
lea
sbbl
mov
shll
fldt
insb
out
lcall
xchg
shl
aas
xor
xor
stos
arpl
mov
test
inc
fiaddl
inc
jns
xlat
dec
scas
popf
xchg
out
cmpsl
std
outsb
aam
jecxz
gs
push
dec
xor
jmp
negl
and
addr16
sbb
out
dec
xor
sbb
adcl
addr16
das
adc
insl
cmp
jg
lcall
fisttpll
out
jno
pushf
notb
ret
lcall
enter
inc
and
mov
mov
adc
xor
sbb
orl
outsb
jbe
inc
push
add
jne
fadds
mov
pop
test
and
cwtl
out
andb
push
cmpsb
loop
jns
fdivr
sbb
cmp
out
fistl
sar
loop
add
jp
pop
mov
outsl
repz
pop
ljmp
dec
pop
loope
cmc
sbb
out
xchg
lea
add
inc
or
mov
cltd
push
jmp
fldz
aam
stos
push
insb
test
jmp
xor
mov
push
repz
insb
ss
pushf
xchg
pop
scas
inc
js
push
pop
adc
sar
push
push
ss
jmp
mov
dec
cmp
ss
add
mov
sahf
sub
js
mov
bound
scas
push
adc
xorl
or
pop
inc
addl
pop
outsl
xchg
sub
push
jnp
divl
movsl
ss
sbb
mov
outsb
in
dec
not
sub
js
imul
xchg
rolb
mov
jno
sbb
sbb
mov
xor
fdivrp
push
fwait
sbb
test
fcmovbe
pop
xchg
std
push
movsb
sahf
adc
shrb
arpl
pop
fdivl
out
mov
adc
pop
pop
dec
loopne
and
push
fistpl
scas
inc
negb
cmp
fisubs
fistpl
jns
jle
dec
inc
daa
push
xor
leave
mov
and
xchg
mov
xor
outsb
pop
mov
push
adcb
fwait
cwtl
adc
sub
call
cli
test
repz
add
hlt
sub
sbb
pop
xor
cmpsb
dec
fdivrp
pop
fists
leave
cmp
lret
xchg
bound
inc
sbb
jl
fstp
dec
sub
repnz
dec
xor
pop
lods
mov
js
xor
xchg
sti
fsubs
or
cmp
movb
mov
or
push
mov
pop
pop
sub
xor
sbb
pop
or
fnsave
cmc
lret
pop
sbb
insl
adc
nop
adc
popa
frstor
dec
push
nop
pop
mov
dec
arpl
insb
dec
cld
enter
sarb
mov
mov
or
repnz
xlat
into
or
pop
mov
je
mov
cmpsl
jle
in
push
or
jmp
es
sub
inc
jg
sbb
xchg
popa
jo
mov
dec
insl
sub
cmpsb
jae
in
fwait
jl
add
mov
push
cltd
imul
test
add
xlat
pusha
mov
sbb
ja
jno
mov
lock
mov
pop
in
clc
xor
inc
jecxz
mov
addr16
jle
int
mov
inc
push
mov
push
push
int
mov
gs
mov
stos
mov
adc
fisttpll
testb
enter
sbb
daa
sbb
dec
and
and
mov
imul
pop
adc
xor
stos
mov
sub
je
repnz
rcrb
loopne
test
fwait
jae
add
fs
xlat
mov
aad
cmc
inc
jae
cmp
imul
sub
mov
aam
jb
dec
iret
xchg
push
push
repnz
jbe
popf
fcomps
ds
arpl
int3
inc
xor
fnstcw
pop
out
push
les
mov
sti
lods
cmpsl
xlat
or
cld
jne
out
jmp
add
jmp
xor
cmp
test
cmp
rcrl
ret
push
or
ret
stos
pop
scas
and
dec
aam
pop
fsts
jns
and
adc
mov
cmp
push
push
das
ds
inc
in
pop
cmpxchg
sarb
mov
add
jecxz
sti
std
pushf
and
imul
xchg
inc
mov
stos
fs
push
out
fldl
cli
add
jae
iret
cmp
sahf
jp
insb
loopne
popf
ret
pop
lahf
scas
sub
or
lret
ret
cmpsl
and
cltd
sbb
mov
in
cltd
fcomi
sub
fs
fisubl
inc
adc
sub
or
sbb
lock
cmp
mov
inc
nop
addr16
mov
inc
adc
or
pop
fsubrl
pop
rclb
iret
outsl
cmp
pusha
inc
fidivrs
sub
out
jbe
pop
xor
dec
mov
mov
mov
rolb
rcrb
js
mov
jno
xchg
mov
pusha
dec
mov
aaa
push
jp
out
stc
mov
jmp
or
ljmp
xchg
test
fcoml
mov
jmp
dec
push
or
inc
mov
mov
icebp
xchg
int3
ret
je
add
sti
dec
sti
push
in
mov
repnz
cmpsl
cs
aad
adc
out
push
xchg
shl
jno
into
fwait
or
repz
jo
lcall
mov
sub
flds
sub
pop
insl
aad
out
test
or
pop
jno
nop
cmp
mov
in
and
notl
push
mov
add
add
fsubrl
xlat
jo
sti
das
push
push
jne,pn
inc
mov
xlat
mov
mov
je
movsb
pop
sub
imul
cs
jle
jb
cltd
cmc
sub
mov
leave
test
es
mov
cmp
dec
aad
push
lds
insl
in
add
mov
nop
dec
imulb
das
lahf
mov
push
mov
cmp
test
adc
mov
outsb
fprem1
ret
pop
negb
cmp
sbb
mov
stc
repnz
jge
mov
pop
pushl
push
cmp
cltd
adc
dec
arpl
inc
push
mov
mov
arpl
jecxz
shlb
push
pop
jmp
aas
add
lea
xor
lds
or
fiadds
push
mov
lahf
je
push
ret
mov
out
jp
jae
test
nop
mov
jmp
mov
jne
test
mov
arpl
insb
dec
adcl
and
mov
les
sbb
aaa
push
adc
or
popf
mov
xchg
xor
jge
in
adc
jl
mov
mov
stos
add
loopne
push
xor
jle
dec
sub
push
scas
cwtl
add
sub
push
pop
dec
push
aas
dec
xorl
lret
cmc
jecxz
xchg
repz
std
or
loop
stos
fisubrs
js
loopne
data16
lahf
jecxz
lahf
loope
lret
lock
iret
inc
adc
xor
shll
jmp
adc
xor
jp
pop
mov
dec
inc
xor
mov
lcall
add
push
jmp
jl
aad
movb
test
icebp
jns
outsb
xor
sub
inc
inc
fildll
inc
js
call
fidivrl
stos
scas
call
test
jle
or
jecxz
or
nop
and
mov
mov
das
mov
sbb
jge
cmp
mov
add
dec
sbb
lock
dec
in
push
cmp
sbb
pop
dec
rolb
dec
out
jmp
dec
add
and
arpl
jae,pn
roll
inc
sbb
cmp
jae
call
add
lea
rorb
jl
out
cmp
sbb
xchg
rol
jge
add
and
aas
sbb
enter
xor
lret
test
movsb
cwtl
jle
jp
xchg
inc
or
push
ja
inc
fisttps
fstp
xchg
fnstenv
arpl
and
adc
adc
mov
lods
jle
cmp
mov
lods
xchg
mov
outsb
mov
addl
push
push
inc
outsl
fmuls
add
cmpsl
inc
mov
pop
lret
inc
adc
cmp
int
add
jno
cmp
lahf
mov
dec
arpl
stos
jecxz
icebp
push
add
ja
sub
stos
sbb
insb
fadds
dec
xor
mov
loope
in
repz
je
inc
test
and
xlat
adc
jmp
jae
ss
arpl
ret
mov
add
xchg
test
dec
mov
cltd
cmpsb
xchg
dec
push
xor
std
jbe
sahf
or
inc
cmp
cmp
nop
add
inc
pop
adc
je
test
imul
movzwl
popf
cmp
dec
push
mov
cltd
push
or
popf
sub
mov
push
frstor
rcr
push
out
test
add
lds
dec
notb
loop
push
es
jae
dec
cli
movsb
mov
xor
pop
push
dec
mov
mov
xchg
stos
and
pusha
push
adc
filds
inc
pusha
xchg
push
icebp
js
insb
scas
scas
or
enter
sti
pop
jbe
out
push
fwait
pop
sbb
ds
cld
jmp
inc
cli
test
mov
or
les
xor
leave
data16
rclb
inc
mov
adc
scas
mov
lret
insb
daa
cli
and
jp
mov
cmp
in
mov
rcll
pop
dec
mov
repz
imul
shlb
mov
imul
xchg
jle
sbb
sub
movsb
jl
adc
dec
lret
xchg
xchg
push
sub
insl
inc
and
inc
ljmp
lret
mov
and
xchg
dec
fisttps
call
lahf
ret
mov
hlt
mov
cld
xchg
icebp
jae
cltd
rcrb
cmovns
test
xor
sar
add
faddl
out
out
xchg
add
mov
ret
cmp
xchg
jb
cmpsb
jae
cmp
mov
arpl
sbbb
mov
lahf
inc
cmp
xlat
jmp
stos
out
push
dec
sti
xor
shrb
xchg
jle
loop
push
mov
stos
xchg
jl
xor
addl
sbb
daa
fcmovnbe
imul
and
push
push
push
mov
je
std
sti
frstor
sbb
jl
jno
jle
std
mov
jl
ljmp
pop
fwait
cld
aas
dec
jp
scas
ret
sub
jmp
dec
adc
xchg
or
xchg
jns
inc
mov
or
das
fbstp
cli
scas
es
xlat
fwait
test
cmpsl
mov
call
cwtl
mov
lahf
sub
pop
stos
pop
sbb
cmc
adc
or
pop
ret
cwtl
push
adc
jp
movsb
scas
jl
or
pop
or
mov
data16
dec
lret
dec
pop
sbb
mov
shrb
cmpsb
pop
fdivl
int3
movsl
dec
shrb
movb
int3
lahf
mov
mov
xor
mov
rol
jb,pn
pop
and
movsl
cli
push
lahf
push
jo
pop
push
pop
xlat
jle
andps
pop
and
cmp
pop
inc
sti
xor
mov
daa
cmp
or
hlt
lcall
sahf
cmp
imul
push
je
jmp
xchg
push
fstpt
pushf
es
sahf
aad
out
fcoms
outsl
mov
mov
insb
pop
std
outsl
cmpsb
mov
data16
jecxz
outsb
jmp
stos
lea
push
adc
lret
pop
mov
mov
jg
jbe,pn
inc
ja
lret
sub
sub
call
scas
and
sub
pop
jge
inc
sbb
idiv
adc
push
xor
cltd
dec
and
xlat
out
mov
cmpsb
fldl
push
sbb
lahf
or
mov
adc
imulb
rcl
jno
adc
icebp
cmp
sbb
pop
in
jnp
pop
ja
hlt
mov
lret
mov
push
lret
xchg
lods
mov
scas
pop
fadd
jle
push
mov
sub
dec
je
or
lahf
ljmp
cld
pop
push
jo
push
outsl
xor
mov
mov
add
ss
and
fs
ja
mov
jno
outsb
sub
adc
push
fcomip
mov
bound
aas
jp
loope
mov
aad
pop
sbb
sub
mov
mov
popa
jp
xor
xor
cmove
mov
jle
outsb
add
ret
stos
mulb
stos
inc
mov
push
sbb
xchg
xor
mov
mov
jae
ja
mov
jbe
jge
dec
lret
shlb
fists
mov
push
rcrb
pop
cmp
js
sbb
inc
sbb
dec
dec
rcl
xor
mov
cmp
push
mov
leave
cmp
into
sbb
pushf
xchg
sti
imul
nop
sahf
xorb
xchg
dec
incb
je
movsb
xchg
push
jno
pop
test
stc
cmp
push
and
dec
mov
lret
sub
sub
xchg
inc
adc
jo
in
leave
mov
jae
lahf
pop
sbb
cmp
daa
je
aaa
mov
and
xchg
push
sbb
push
and
lds
scas
push
repnz
test
es
inc
mov
jl
shrl
jge
aaa
xor
jo
arpl
push
filds
jae
movsb
mov
lret
xchg
ja
mov
ja
jmp
xlat
xchg
out
imul
jmp
mov
je
jb
pop
sahf
jle
mov
mov
sub
inc
jecxz
sbb
and
inc
aam
sbb
shrl
cmpsl
cmp
pop
mov
enter
repz
icebp
jbe
or
leave
lcall
and
test
imull
insl
dec
out
mov
data16
sub
mov
xor
fs
cmp
pop
xchg
mov
outsb
lock
sbb
xchg
in
pop
outsb
dec
mov
aaa
dec
mov
pop
fstpt
in
lea
xlat
out
mov
push
xor
fadds
lds
popa
inc
xchg
imul
and
adcl
add
xchg
cmpl
dec
outsl
inc
hlt
daa
cmp
scas
push
xor
aaa
sub
fwait
mov
or
test
mov
js
outsb
mov
idivb
jae
loope
lods
xor
sub
mov
fsincos
fcoml
insl
pusha
dec
pushf
mov
hlt
or
pop
mov
xlat
pop
dec
push
jae
push
xor
imul
cmpsl
mov
pop
adc
cli
imull
cli
outsl
lds
pop
js
mov
fwait
int3
test
push
adc
fisttpll
rol
inc
in
lcall
cld
jp
cltd
outsb
and
nop
sahf
inc
shrb
js
dec
je
cmp
movsl
lcall
fwait
adc
lret
lret
sbb
sbb
je
aad
dec
push
int
insl
dec
in
rcrl
jle
daa
xchg
imul
pop
sbb
shll
ror
sbb
fimuls
mov
aad
fs
pop
mov
inc
mov
jne
dec
or
push
fcompl
push
stos
sti
xor
outsb
xor
mov
sbb
out
mov
cltd
mov
cwtl
adc
and
dec
scas
je
aad
in
pop
and
or
xchg
fldcw
adc
push
jecxz
ja
in
not
lret
lock
mov
xchg
arpl
lods
push
sbb
pop
add
pop
test
gs
call
insb
add
cld
shrl
sbb
clc
and
sub
inc
in
jmp
cmp
cld
mov
gs
mov
jl
cmp
add
into
jb
xchg
xor
jmp
es
xor
push
sbb
mov
mov
rcrb
sahf
mov
add
dec
mov
push
stos
hlt
stos
pop
andb
cmpsl
das
int3
sbb
inc
xchg
cmp
add
std
pop
dec
jge
push
sahf
es
xor
cmp
sti
jle
cmp
pop
mov
insb
push
cmp
aaa
in
inc
les
add
int
js
jle
frstor
fcompl
add
dec
cmpsl
adc
cli
rclb
dec
js
dec
mov
xor
in
mov
js,pt
imull
stc
cs
in
ljmp
add
in
lods
fwait
iret
call
jecxz
fnstsw
add
loope
or
test
adc
jne
fwait
mov
jg
jp
mov
fcmovb
pop
jae
xchg
imul
sub
xchg
xchg
sub
call
mov
loop
ljmp
cmp
cmp
push
arpl
or
push
and
xchg
mov
iret
cmp
ss
test
cs
ds
es
int
cmp
aam
jecxz
and
clc
popf
sub
imul
add
hlt
aad
push
idivl
or
inc
out
inc
mov
cs
jae
int3
sbb
pop
mov
xchg
sbb
inc
call
pusha
rcll
pop
mov
or
stos
sbb
mov
sub
sub
lock
popa
xchg
lea
dec
rcrl
cld
mov
lahf
dec
jp
xor
notb
dec
or
push
xor
not
popf
lahf
lea
lea
dec
jnp
dec
insl
scas
xor
add
fldl
scas
mov
hlt
sahf
iret
sbb
mov
xchg
imulb
mov
xchg
fwait
xor
and
inc
sub
xor
imul
or
and
cmp
push
rcr
cmpsl
pop
call
aad
scas
leave
adc
lahf
in
cmp
loopne
mov
pop
outsl
iret
into
mov
inc
sbb
in
push
mov
mov
mov
pop
push
xchg
insb
jge
xchg
sub
mov
cmpsl
pop
sbb
or
cld
das
adc
or
and
cmp
imul
inc
xor
push
ret
divl
mov
or
xchg
mov
neg
cli
add
mov
cld
pop
xor
or
sahf
and
push
push
push
adc
mov
mov
out
add
xor
lds
cli
cmp
mov
popa
frstor
xor
js
push
mov
push
push
sbb
shlb
jg
int
cs
hlt
sbb
jmp
push
jl
push
xchg
movaps
orl
xor
in
adc
mov
sub
cmp
fsubrs
sbb
xchg
push
andl
dec
pop
out
std
mov
in
xchg
inc
idiv
adc
xchg
xor
jge
and
xlat
push
cwtl
mov
mov
cmp
lods
xchg
add
fmull
sbb
mov
adc
lods
push
into
xchg
mov
cmpsl
sti
popa
adc
clc
jp
stc
cmp
xchg
xor
cs
insb
jo
sbb
mov
xor
xor
push
cltd
jg
icebp
jne
pop
icebp
testl
dec
add
testb
in
dec
pop
lods
or
dec
jl
scas
xor
and
in
xor
cltd
add
and
pop
pop
fucomip
in
cmc
call
je
call
int3
loop
loope
inc
xor
call
pop
inc
xchg
nop
xchg
xchg
popa
imul
sbb
testb
push
jp
movl
aas
jnp
jne
movsb
adc
outsl
and
inc
popf
cmp
arpl
leave
ds
clc
cmp
jb
push
inc
add
xor
xchg
jle
les
data16
cld
and
out
cltd
lahf
jp
icebp
test
sbb
rcll
imul
pop
sub
gs
adc
movsl
icebp
lds
popa
xchg
cmc
shll
std
fidivs
cmp
out
lds
insl
popa
cmp
stos
xchg
fwait
dec
sti
push
les
rcl
cli
lret
negl
mov
lret
fmull
pop
mov
sbb
call
bnd
mov
push
sahf
testl
mov
dec
roll
in
cmp
jp
fcompl
ds
test
mov
fimull
mov
fidivrs
xchg
inc
mov
mov
jp
or
add
xchg
mov
xor
pop
cwtl
mov
pop
pop
mov
cmc
cwtl
add
xchg
loopne
in
mov
mov
xchg
aad
stos
je
jg
movsb
fmul
pop
xchg
sub
sahf
leave
xor
xlat
mov
inc
pop
sbb
dec
push
lret
push
sub
sub
mov
mov
jne
mov
gs
sbb
and
aam
add
push
xor
rcrl
nop
jns
push
fdiv
jno
fistpl
push
ds
rorb
mov
mov
adcb
stos
pop
jae
mov
jmp
rclb
mulb
mov
hlt
jp
adc
dec
sub
popa
les
inc
leave
ret
jno
fdivs
xor
out
fldt
leave
pop
or
scas
xchg
push
jae
xchg
es
add
fwait
insl
jl
int3
adc
fsubl
dec
xchg
pop
adc
xor
pop
mov
jae
cmp
hlt
cmpsl
lock
int3
lahf
mov
jecxz
pop
pop
test
dec
fdivl
push
ror
mov
adc
into
sub
sbb
shll
mov
adc
jge
shlb
mov
sub
ljmp
pop
xlat
stc
jle
inc
and
in
jg
imul
xor
dec
pop
ret
xchg
mov
or
cmp
dec
push
lret
push
jmp
and
je
scas
lret
in
jmp
movsl
rorl
jge
and
push
lods
sub
fs
xor
mov
mov
aam
inc
pop
and
inc
jmp
ret
dec
adc
pusha
xchg
mov
lea
out
imul
mov
cwtl
mov
in
out
dec
ret
std
dec
push
ret
jmp
inc
std
and
lret
sub
out
cmp
xor
cmc
mov
mov
mov
dec
lahf
adc
fildl
sbb
or
cltd
inc
fisttps
mov
sahf
push
mov
mov
xbegin
jo
into
sub
lds
and
frstor
and
hlt
push
mov
ret
lcall
push
sub
inc
sbb
add
sbb
in
add
es
sbb
xor
rcrl
shll
pcmpgtb
test
push
sub
adc
aaa
mov
mov
cmp
xchg
ss
sub
scas
pop
dec
jl
and
scas
lods
rcl
adc
ds
mov
lahf
push
adc
lcall
push
dec
cs
lock
stos
addr16
stos
cli
js
xor
xor
xchg
push
jns
ja
or
cmp
xchg
int
dec
mov
jbe
stos
ud2
pop
adc
and
adc
sub
ds
stos
push
repnz
mov
jp
pop
ja
dec
dec
dec
mov
movsb
jae
in
mov
repnz
dec
mov
ret
out
or
stc
hlt
pop
fwait
or
dec
jl
mov
shll
push
ljmp
pop
cs
dec
cltd
dec
and
sbb
cmp
add
and
std
adc
cltd
mov
dec
xchg
test
stos
cld
and
dec
in
or
sub
sub
int3
jle
jp
call
mov
das
add
sarb
cli
mov
inc
add
ret
rcll
jl
movsb
xchg
bound
xlat
mov
arpl
int3
dec
nop
lret
mov
sub
cwtl
pop
xor
jge
bound
mov
sbb
icebp
or
sub
inc
imul
mov
out
hlt
test
imul
mov
xchg
or
and
mov
pop
sbb
mov
lods
jnp
xor
ja
in
subl
daa
xchg
jmp
fidivrs
stos
mov
sub
pop
stos
jb
int
insl
sbb
lds
fbstp
sub
ljmp
push
call
fcom
imul
imul
xchg
cmp
lahf
cli
sahf
xor
jb
insl
cli
cltd
test
dec
jecxz
loope
test
push
cmc
inc
sub
imul
xchg
jl
out
push
fidivrs
ret
mov
test
xor
sahf
and
fistl
mov
or
xchg
pop
das
pop
ds
decl
inc
sti
icebp
jl
in
xor
stos
in
pushf
test
clc
int3
mov
mov
lret
push
sbb
mov
mov
inc
inc
sub
outsb
sub
ret
mov
into
loop
movsb
mov
or
mov
xchg
jecxz
dec
and
imul
inc
mov
faddl
adc
fsubl
lcall
stos
xor
stos
inc
mov
pop
pop
cmp
inc
movsl
stc
les
inc
bound
sbb
lret
sub
and
testb
xchg
and
sti
add
test
sub
sahf
ja
subb
cmp
jno
push
mov
mov
lea
adc
add
cld
aam
jl
es
jmp
sbb
inc
mov
fucom
cmp
jns
jb
xor
out
sbb
nop
cmp
loope
out
jb
fsubl
pop
push
loope
data16
test
push
add
aaa
jo
imul
sub
loope
cmp
xorl
push
mov
mov
jnp
add
cmc
add
xor
xchg
rorl
rol
lods
mov
jnp
jb
pop
pop
push
mov
clc
mov
dec
xchg
cmp
cs
lods
push
lret
ds
popa
cmp
test
mov
and
jae
clc
pop
stos
push
test
pop
cmp
arpl
dec
or
je
sbb
xchg
test
js
rcl
jle
fsubs
insl
fwait
movsl
mov
push
pop
xchg
and
inc
add
sub
aaa
adc
inc
ds
negl
jne
cmp
icebp
lcall
push
mov
mov
int3
jnp
xchg
iret
dec
test
mov
push
out
les
jge
call
outsl
jo
and
sti
inc
fldt
xor
ret
fdivrl
inc
push
leave
sbb
stc
sbb
jmp
cld
loop
or
dec
test
mov
and
fcompl
lds
aas
jns
call
mov
test
jmp
fistpl
cmp
fildll
mov
xchg
lods
xchg
sbb
lock
popa
push
rol
lahf
int3
sarl
iret
subl
or
mulb
andb
dec
enter
decl
enter
cmc
je
jg
scas
into
loope
mov
nop
or
bound
pop
int
cmpsb
mov
push
add
xor
jmp
addr16
cltd
push
push
mov
js
adc
daa
mov
lea
mov
leave
test
inc
xchg
pop
push
push
pop
push
xchg
rcll
jb
pop
push
xchg
aam
push
out
sub
xor
bound
xchg
mov
addr16
and
mov
sub
sbb
out
push
iret
cs
shlb
mov
xor
imul
faddl
data16
mov
pop
or
jns
or
and
fidivl
cmp
inc
or
inc
out
inc
test
mov
sbb
sbb
pop
shll
js
mov
and
orb
aad
push
shll
lds
das
int
mov
adc
mov
shld
inc
lods
mov
cmp
xchg
push
cld
jno
mov
shr
push
add
and
mov
adc
aam
jle
add
sub
je
jmp
mov
subb
rcll
test
cmp
dec
fistps
ficoms
sub
shlb
adc
lcall
or
stos
rorl
loope
sbb
lcall
xor
xchg
pop
mov
push
sahf
add
inc
push
adc
sbb
push
cli
mov
fldenv
scas
std
adc
mov
adc
movsb
mov
fisubrl
mov
or
dec
out
out
jge
pop
inc
add
sbb
jbe
ficomps
sbb
pop
repnz
rclb
cmc
pop
push
fisubs
cltd
jno
lcall
sbb
in
movsb
xor
ret
push
insb
inc
sub
into
iret
xor
aad
hlt
adc
pop
in
fisubl
int3
xchg
fsubrl
in
xchg
add
enter
jne
repnz
dec
jbe
jg
mov
fmuls
jno
push
shrl
pushf
inc
dec
and
xchg
mov
mov
sbb
pop
adc
push
sti
bound
hlt
push
sub
sbb
cwtl
sbb
inc
cmp
mov
xor
sub
jb
jnp
lock
pushf
or
ljmp
lcall
push
push
sub
insl
cmpsl
pop
fwait
xchg
or
outsl
outsb
push
out
add
xchg
and
jne
les
jne
fistps
and
ds
testl
add
mov
push
sub
sub
aam
clc
mov
or
push
enter
andl
aas
dec
adc
pop
dec
xor
mov
inc
xor
jle
mov
cmp
mov
jge
int
add
loop
int
stos
cmc
ret
xchg
add
inc
addl
lea
or
add
pop
ret
push
or
inc
aad
mov
push
sbb
arpl
cmpsb
and
or
mov
push
mov
mov
sahf
mov
sub
cmp
pushf
and
insb
add
popf
pop
and
lods
lret
pusha
popf
popf
orl
cs
add
xor
outsl
lods
popf
movsb
andl
fdivrl
cmp
aas
sbb
lahf
jp
out
cwtl
push
add
lret
push
inc
loope
push
imul
adcl
cli
jmp
pop
pusha
mov
mov
cmpsb
mov
cmpsb
aad
mov
inc
movsb
js
push
mov
mov
pop
pop
int3
outsb
mov
jnp
push
xor
xor
push
mov
sbb
mov
push
insb
loop
jb
movsl
shll
out
popa
or
inc
lret
push
pusha
push
lods
adc
lcall
push
punpckhwd
sub
shll
fistpl
push
xor
jle
pop
cmp
dec
rclb
mov
cld
cmp
jp
stos
push
pop
mov
cld
mov
test
mov
push
jo
cmp
shl
out
fs
roll
xor
fs
add
sets
pushl
js
cwtl
fwait
inc
stos
fisubrs
xchg
fcompl
pop
movsb
mov
lahf
repz
fwait
mov
pop
ret
pop
adc
pop
arpl
push
xor
sbb
inc
popf
insl
pop
xchg
xchg
jge
rorl
mov
test
xor
imul
movsb
cld
pop
rcll
cmc
ds
aas
fs
xchg
ljmp
mov
xchg
or
mov
and
mov
insl
pop
inc
xchg
pusha
and
out
pop
test
pushf
shlb
lds
data16
mov
out
push
pop
and
repz
jg
adc
outsb
cmp
sub
arpl
jb
push
nop
in
inc
jmp
push
loopne
test
mov
push
into
xchg
push
sub
hlt
fsts
or
cwtl
xchg
adc
dec
loope
je
pop
scas
cli
shlb
ja
ret
cwtl
sub
pop
mov
jne
fstpl
xchg
cmpsl
fistps
cmp
push
dec
mull
mov
mov
mov
das
pop
dec
xlat
xor
loop
clc
test
inc
add
dec
cmpsl
and
sub
mov
cwtl
in
dec
cmp
jno
int3
in
stos
mov
sbb
push
jp
mov
icebp
fdivs
cmp
push
inc
call
cmp
push
add
test
mov
repnz
movsb
inc
add
cmp
pop
jmp
push
jae
add
ss
into
xor
das
mov
ljmp
test
cltd
pop
sbb
sbb
push
mov
es
jbe
or
pop
or
xchg
mov
mov
push
mov
push
jnp
mov
repnz
pop
in
mov
es
ja
ljmp
dec
xchg
pop
pop
icebp
cld
cld
mov
cmpsb
xchg
xor
push
out
sbb
dec
push
fwait
stos
and
xchg
loope
or
sbbl
rcll
cld
stc
sub
lahf
push
stos
enter
ss
into
sahf
pop
dec
out
add
test
xchg
leave
xor
cltd
xchg
outsl
enter
xchg
int3
mov
decl
sbb
and
movsb
mov
jl
fst
adc
xor
daa
lods
mov
mov
xchg
mov
jle
xor
mov
cmp
icebp
push
adc
mov
mov
cwtl
arpl
adc
ds
shll
pop
sbb
rolb
stos
arpl
pop
aam
jge,pn
sub
js
inc
cmp
sbb
rcrl
mov
jno
mov
insl
inc
inc
mov
ret
pop
aam
jmp
dec
nop
xchg
and
or
sub
icebp
adc
xchg
nop
leave
aaa
xchg
sub
cmpsl
sub
inc
imul
push
cmp
jae
iret
inc
leave
mov
ror
sub
bound
int
aaa
sbb
andb
nop
pop
xchg
inc
pop
adc
pop
mov
lods
in
aaa
mov
mov
sbb
xchg
sbbb
loopne
popf
jb
cmp
pusha
loop
enter
add
testl
out
scas
cmpsb
pop
and
xchg
xor
repnz
dec
push
paddb
cmp
fstl
dec
mov
rcrb
loop
test
cmp
sbb
add
jle
mov
sbb
aaa
push
inc
add
jl
pop
mov
aad
out
inc
addr16
jns
cmp
ret
int
sbb
pop
jb
lcall
pop
mov
loop
cmc
notl
dec
movb
cs
sbb
imul
fnstenv
jge
lea
or
mov
dec
movl
mov
loope
mov
ret
mov
inc
sub
lods
fs
sbb
repnz
int3
jecxz
out
adc
mov
cld
ret
push
push
repnz
xor
adc
cwtl
and
lock
xor
loopne
std
pop
jb
je
inc
aas
aad
mov
cmp
jbe
jl
pop
std
movsl
adc
in
xor
je
adc
das
lret
hlt
jl
movl
jnp
cli
push
lret
dec
mov
ja
xchg
fcomps
lret
das
in
push
test
loop
out
loopne
iret
daa
cmp
enter
mov
dec
lret
dec
inc
das
outsb
mov
scas
mov
das
outsb
mov
pop
mov
ds
xchg
adc
mov
sub
std
jg
dec
add
pop
ss
fisttps
pusha
dec
inc
in
fisubrl
pop
xchg
rcl
rcl
clc
push
call
fcomp
mov
mov
xchg
pushf
ret
mov
mov
dec
sbb
or
cltd
mov
iret
int
jne
cmp
sahf
mov
mov
fsubrl
stos
fisttpll
mov
lcall
dec
jmp
xchg
movsb
enter
xchg
mov
imul
enter
scas
dec
push
dec
gs
loopne
cmp
inc
cmp
cmp
dec
mov
xor
pop
and
mov
mov
xchg
imul
jns
push
inc
xchg
sbb
adcb
jo
cmp
dec
repz
pop
outsl
test
sbb
jp
push
pop
xchg
or
push
mov
inc
out
pop
test
push
sub
cmp
roll
jnp
daa
jno
testl
leave
sub
cli
loop
pop
call
test
sbb
rcl
mov
pop
adc
cli
sbb
sahf
in
mov
hlt
imul
outsl
mov
jge
sbb
jle
fwait
aam
out
sbb
call
adcl
lret
mov
sub
and
push
mov
push
insb
lret
faddl
mov
dec
stos
mov
inc
stos
cwtl
add
xchg
imul
popa
cmpsb
lods
mov
jmp
cmc
ret
pop
xchg
sbb
mov
test
cltd
jnp
add
outsl
xor
iret
int
ficomps
enter
in
movsb
out
lahf
cmp
popf
mov
mov
adc
insl
cmp
movb
dec
pop
pop
push
pop
gs
addr16
mov
into
xchg
pushf
push
push
sub
sar
sub
and
cmp
movsl
notb
push
push
pusha
ja
add
outsb
push
movsb
pop
imul
mov
cmpb
out
fucomi
xchg
aad
mov
test
in
push
jge
sbb
mov
outsb
pop
inc
pop
scas
stos
shrb
sbb
push
or
lds
push
add
fdivrl
and
sbb
mov
lds
pusha
fadd
sbb
cmp
adc
sub
scas
fisubrl
add
mov
cwtl
sub
fadds
xor
in
mov
enter
mov
dec
test
dec
cmp
bound
pop
pop
scas
cmc
mov
lahf
xchg
mov
mov
cld
fisttpl
push
shll
xor
mov
sub
cmp
xchg
aam
imul
fdivs
mov
pop
cmpsl
or
dec
adc
fs
inc
add
xor
ja
push
adc
jns
jg
mov
sbb
jo
xorl
into
out
dec
data16
imull
test
sub
in
leave
or
inc
dec
mov
mov
inc
les
lret
popf
lcall
jp
inc
inc
pusha
data16
and
loope
outsb
sbb
aaa
or
pop
sub
mov
sub
and
pusha
or
xchg
mov
in
lock
jns
orl
xor
mov
scas
and
sbb
xchg
enter
sbb
mov
pop
inc
xor
sub
cltd
adc
or
les
lcall
xor
inc
jmp
add
sub
inc
push
xor
arpl
out
xor
pop
inc
pop
fs
es
shr
ljmp
jl
lock
cmp
outsl
loope
cmp
arpl
and
adc
pusha
bound
add
lds
mov
es
mov
xchg
push
test
mov
jb
inc
fcoml
mov
insl
pop
aaa
push
icebp
sub
push
mov
bound
insl
inc
inc
cli
or
pop
lret
out
lods
jns
cmc
mov
and
rcrb
xor
mov
nop
sbb
imull
shlb
iret
out
jns
mov
out
stos
cwtl
mov
stc
call
js
sar
push
xchg
mov
je
pushf
cmpsl
inc
sarl
and
in
leave
sbb
in
scas
scas
rcr
ss
mov
negl
movsb
pop
je
push
xor
insb
mov
popf
add
jle
iret
mov
cmp
out
outsl
arpl
loopne
pop
add
fmulp
rclb
lock
mov
jmp
andb
sbb
and
cmpsl
sub
push
daa
mov
xchg
mov
imul
lds
jp
push
popl
lar
cmpb
adc
xchg
lret
mov
mov
ret
fnstcw
data16
push
in
mov
mov
push
lahf
shll
or
mov
fnstsw
dec
loopne
hlt
sbb
int3
add
mov
lock
mov
mov
mov
cmp
or
mov
data16
fidivrs
lret
or
xlat
jb
xlat
data16
int
shll
shrl
lea
scas
pop
or
xchg
mov
pop
lcall
inc
sarl
push
pop
jg
imul
sub
out
aad
rep
div
adc
bound
lahf
testb
movsl
jno
daa
imul
arpl
dec
lcallw
sub
ds
jl
mov
dec
fistl
pop
sbb
stos
aam
movsl
dec
mov
xor
aam
ljmp
leave
sti
push
push
mov
ret
es
mov
inc
adc
mov
inc
ret
sub
mov
aaa
mov
inc
xchg
fiaddl
sub
orl
sbb
out
js
cmp
repnz
insb
xchg
pop
lahf
cmp
dec
push
lods
mov
push
push
inc
or
repz
popf
sahf
jbe
test
sub
sahf
popf
xchg
and
ljmp
cld
ret
cmp
fcomps
fidivrl
int3
pop
xor
sahf
mov
pusha
je
shlb
js
dec
loop
gs
inc
adc
or
mov
sbb
lods
xor
add
cli
cwtl
mov
xchg
mov
or
push
or
xor
cli
lret
jns,pn
enter
inc
mov
mov
aaa
xchg
push
or
push
cli
mov
out
push
mov
jns
and
adc
bound
cmpsl
loopne
ret
xchg
mov
aas
jecxz
sub
mov
test
add
nop
int
lods
inc
loop
mov
int3
mov
jb
inc
movsl
pop
pop
dec
pop
mov
xchg
std
push
sub
int3
xor
push
popa
rcrl
fldt
mov
clc
mov
cmp
xorb
cmp
lods
dec
ret
xchg
in
jle
push
jecxz
xchg
loope
sbb
or
into
mov
daa
rol
push
push
add
mov
jno
inc
das
arpl
ja
loope
jl
sbb
mov
shl
lea
stos
shlb
cmc
jecxz
or
pop
bound
insb
fs
jnp
mov
inc
pop
or
or
test
pushf
mov
nop
cwtl
xor
movsl
mov
icebp
sbb
jg
and
enter
add
jno
inc
pop
jl
pop
dec
int
dec
xor
movsb
scas
push
push
mov
imul
ja
xchg
xor
lcall
xchg
subb
cmp
test
and
scas
xchg
or
mov
push
jbe
mov
mov
jle
test
loope
add
pop
cmpsb
sub
cwtl
dec
test
xchg
pusha
push
mov
loop
fmuls
cld
dec
fsub
je
or
xor
mov
sbb
or
jb
scas
xor
in
bound
push
mov
xchg
cs
cmp
jo
push
fistpl
add
jns
lahf
test
mov
idiv
jae
addr16
jae
mov
push
jnp
aaa
aas
cmpsl
pop
and
cmp
or
adc
push
data16
mov
scas
push
mov
jmp
loop
sub
pop
imul
add
call
inc
mov
test
and
cmp
imul
mov
or
sub
roll
in
imul
adc
nop
mov
pusha
les
and
push
mov
clc
cmp
movsb
xchg
shll
push
add
or
leave
dec
icebp
iret
adc
push
movsb
sahf
mov
pop
cmp
ss
adc
cmp
in
fs
xchg
out
push
movsl
and
cwtl
rclb
mov
dec
lret
test
cmp
stos
frstor
lds
cmpsl
sarl
fsubrs
test
icebp
inc
je
inc
bound
and
pop
xchg
dec
mov
in
jl
add
outsl
xchg
fcomps
sub
xor
dec
pop
lods
scas
dec
into
jb
jmp
test
aaa
jbe
and
jne
mov
out
dec
imul
punpckhbw
dec
ds
push
arpl
or
sub
mov
aam
mov
pop
add
push
push
sub
pop
or
mov
add
outsl
iret
lret
fcompl
cmp
mov
hlt
push
scas
jmp
andb
or
mov
ljmp
lea
adc
or
es
xor
mov
scas
jge
mov
pop
xor
cmp
xchg
mov
bnd
or
pop
add
and
add
and
inc
je
popf
pop
sti
push
jecxz
pop
and
fld
or
sbb
testb
into
push
and
push
in
push
push
jmp
fst
push
and
xlat
rcrl
enter
sbb
loopne
mov
xchg
jmp
std
dec
loope
or
add
add
movsl
push
cwtl
jg
aaa
push
or
or
into
lock
pop
push
ss
xor
push
jle
mulps
inc
cwtl
or
cmpsl
cli
xchg
test
outsb
mov
add
push
mov
and
shlb
sub
add
out
stos
add
jo
jge
push
int
test
sahf
inc
imul
add
inc
test
sub
cmpsb
das
adc
cmpb
add
shll
sub
or
mov
fsubrp
test
jge
adc
sbb
fs
aaa
lods
sbb
fldl
jmp
sub
jne
fiadds
xlat
add
mov
xor
jae
call
ja
and
loop
sub
or
cmp
les
loope
loop
leave
jmp
inc
xor
jb
mov
jo
in
add
pusha
sarb
into
mov
mov
sti
out
scas
sub
and
out
mov
dec
add
or
out
dec
or
push
stos
scas
or
mov
push
outsl
cmp
jne
mov
jns
lcall
jno
test
sti
sarb
pop
sbb
int3
jl
das
insb
cld
cmp
sbb
fldl
sub
addr16
sub
mov
mov
push
iret
mov
pop
push
push
jge
icebp
insl
sub
lods
mov
shll
cltd
jmp
adc
das
sbb
bound
cmc
cmp
xchg
sub
push
mov
xor
repnz
pop
cmpsb
mov
roll
pop
int3
sbb
daa
add
sub
xor
pop
fisubl
add
out
cli
lahf
andl
test
pushl
mov
pop
jle
mov
fnop
add
les
push
add
inc
loope
and
xor
inc
or
mov
mov
mov
adc
sbb
mov
or
or
mov
test
sub
inc
movsb
test
pop
std
repz
scas
outsb
xor
js
push
push
imul
adc
push
xchg
shrl
aam
mov
mov
in
inc
lods
scas
fsubl
mov
ds
mov
int3
mov
inc
scas
pusha
or
out
mov
adc
inc
scas
jge
inc
lcall
dec
stos
adc
jmp
stos
out
cmp
lock
test
inc
mov
les
or
adc
add
je
out
and
push
jmp
or
inc
pop
pushf
insl
fsubrl
sahf
pusha
test
cmp
lret
dec
inc
dec
aad
test
xchg
roll
ds
pop
shll
addr16
cmp
pushf
in
mov
stc
inc
mov
push
push
jge
mov
push
pop
stc
in
leave
pop
into
xchg
mov
mov
clc
add
ja
rorb
push
xchg
push
push
and
dec
das
imul
nop
mov
fistpll
lods
adc
cld
push
mov
ds
sbb
push
in
test
lods
fprem
lcall
dec
cmp
dec
adc
and
pushf
nop
js
out
aam
in
jno
gs
xchg
subl
sub
mov
js
mov
nop
and
sbb
sbbl
pushf
adc
shlb
out
in
cwtl
sub
out
jae
add
sahf
call
dec
repnz
insl
mov
cmp
std
pusha
in
jl
fcom
mov
das
in
idiv
mov
test
nop
push
jl
mov
mov
fldl
cwtl
add
mov
sbb
into
mov
adc
and
adc
pop
jp
daa
adc
sbb
jmp
jl
mov
fxch
hlt
cwtl
ds
ret
sub
xlat
xor
divl
test
sub
mov
adc
negl
dec
shl
jecxz
popf
pushf
nop
mov
sarl
dec
inc
xchg
or
lret
shrb
cmp
punpckldq
sbb
jno
stos
cmpl
jbe
sub
push
adcl
pushf
mov
add
xor
and
stc
outsb
pop
icebp
lock
aam
popf
inc
cwtl
sti
cmp
cmp
insb
pop
push
fucomp
cmp
sbb
out
mov
sbb
sarb
push
test
leave
xchg
xor
insb
popf
jge
xor
jmp
jnp
daa
mov
add
std
inc
mov
outsb
in
jl
insb
fs
fiadds
sub
add
repz
fldenv
and
mov
inc
scas
push
cld
and
pop
xchg
ljmp
call
out
and
out
inc
sbbl
mov
or
xchg
jo
pusha
dec
pop
ljmp
shrb
cs
jno
or
dec
dec
sub
loopne
mov
mov
pop
adc
jae
lds
imulb
and
mov
loopnew
nop
inc
jp
lret
scas
mov
ss
fimull
addr16
jl
shll
jnp
pop
mov
mov
in
testl
out
inc
call
fisttps
test
xlat
bswap
or
pusha
enter
ror
push
inc
addr16
out
pop
push
not
cmovae
xor
lret
bound
sbb
sti
mov
cmp
fwait
mov
sbbb
pop
sti
xchg
inc
mov
lods
mov
mov
push
enter
dec
daa
icebp
lock
jns
sub
push
push
in
mov
cmp
cmc
movsb
pop
sbb
add
push
dec
lcall
call
mov
cs
mov
inc
cmp
aaa
jle
lahf
pop
mov
fstps
movsl
push
lret
jbe
and
jae
push
push
je
call
pop
xchg
jp
fldenv
movsb
cwtl
cmc
cmp
ficoml
addr16
push
jl
ret
fdiv
and
dec
das
mov
fadds
cmpsb
popl
dec
ss
movsl
cwtl
insb
in
adcl
shll
popa
cli
aam
cmpsb
lods
xchg
scas
or
stc
mov
mov
lods
cmp
xor
lock
xchg
sti
pop
xchg
pop
pop
mov
das
popf
pop
orb
ljmp
and
outsl
sti
or
mov
xchg
jl
ffree
jmp
mov
push
mov
fstps
and
adc
pop
icebp
and
hlt
lock
mov
inc
mov
and
pop
pusha
cmp
ret
push
lcall
mov
xchg
aaa
mov
xchg
scas
xlat
clc
cmp
jae
hlt
sub
xor
dec
add
frstor
rorb
movsl
mov
loope
dec
aad
stos
mov
sub
ss
adc
and
fbld
rorl
xchg
sub
xchg
sub
dec
push
testl
push
mov
outsb
sub
mov
mull
hlt
xchg
jg
inc
push
inc
scas
arpl
sbb
xor
cs
adc
dec
sbb
movsb
lret
pop
movsl
shll
shlb
inc
push
sahf
jecxz
mov
jno
jnp
pop
aaa
mov
ret
fbld
xor
out
clc
pop
test
lahf
int
fmulp
cmp
xor
push
lret
movsb
cmp
out
into
sbb
or
sub
in
aam
inc
ljmp
sbb
out
je
cmc
lods
mov
inc
xor
xchg
dec
mov
sub
dec
call
xor
push
jge
jle
sti
sub
sub
bnd
mov
jp,pt
mov
pop
or
cmp
mov
mov
xor
outsb
js
pop
add
or
enter
scas
sub
dec
cld
mov
inc
xchg
jp
jb
and
and
push
into
nop
rorb
je
lahf
mov
ret
iret
jo
sub
push
cmp
sbb
negb
jg
xchg
aam
fnstenv
lret
cmp
fdivrl
fs
mov
sti
and
imul
insl
aad
push
fwait
lcall
push
inc
cwtl
popf
cld
jge
or
jno
inc
or
sar
in
out
int3
mov
xchg
sub
or
inc
stos
mov
cmpsl
bound
arpl
test
inc
or
and
iret
stos
nop
cld
push
movsl
icebp
or
pushf
stos
sbb
jbe
leave
mov
int
mov
cmpsb
int3
push
mov
dec
push
shll
jo
in
testl
ja
es
in
subb
sub
jno
mov
mov
aad
je
in
lods
stc
xor
nop
mov
mov
jle
loope
stos
arpl
or
inc
sub
cmc
xor
pop
out
sahf
push
mov
push
jmp
sub
mov
mov
addr16
mov
xchg
add
mov
push
pop
stc
and
jmp
jecxz
lcall
into
std
pop
or
in
xchg
les
inc
call
fdiv
xchg
jae
xor
mov
and
scas
frndint
sub
test
outsl
pop
mov
jl
lock
and
lods
bnd
xchg
jns
sub
aad
rcll
or
sub
lods
aas
push
inc
xchg
adc
mov
adc
or
mov
aaa
cli
push
adc
jg
cmpsl
fs
add
dec
inc
push
jo
add
dec
arpl
and
adc
xchg
filds
xorb
cmp
push
fildl
xchg
pop
nop
mov
test
or
mov
cmp
shlb
shll
daa
dec
mov
mov
mov
subb
leave
sbb
js
jae
xchg
or
mov
ss
mov
aas
je
scas
cmp
xchg
dec
push
inc
lcall
inc
pop
sti
and
mov
push
push
inc
ficomps
mov
mov
cs
xor
fsubs
and
ljmp
cmc
imul
fidivl
or
loop
xorb
xchg
add
cmp
out
leave
orb
es
xor
xchg
sbb
fnsave
sbb
add
jae
mov
push
icebp
jae
mov
js
sub
popf
jno
inc
jno
xchg
outsl
iret
mov
scas
fldl
lret
mov
mov
test
fstps
int
out
mov
pop
inc
cmp
je
jo
daa
inc
adc
cld
pop
xchg
rclb
sbb
and
and
mov
cmp
and
aaa
int
push
out
mov
adc
xchg
xor
push
add
lret
pop
push
mov
jle
and
fisttpll
cmp
mov
sub
mov
push
mov
scas
push
adc
inc
fstp
in
dec
xor
xlat
mov
push
pop
cltd
addr16
gs
lahf
xchg
inc
mov
jmp
insl
cmp
and
loopne
rclb
xor
ss
loop
mov
add
nop
push
test
cmp
shl
mov
xchg
ds
mov
dec
mov
sub
pop
mov
sub
jb
or
jg
ret
xchg
and
xchg
stos
push
popa
imul
nop
add
mov
and
xchg
aad
subb
xchg
mov
adc
mov
adc
or
movsl
enter
inc
lret
xor
loopne
jmp
out
clc
mov
inc
mov
pop
jle
push
les
fcompl
cs
and
inc
add
jg
sub
ds
in
adcb
push
popa
mov
ljmp
adc
sub
inc
adc
idiv
mov
mov
rcrb
lods
sarb
mov
pop
xor
sub
and
adc
lret
fbstp
andl
mov
int3
in
loop
xlat
pop
outsb
sub
add
push
pop
enter
fs
mov
fldlg2
stos
pop
je
ss
pop
cmp
std
loop
repz
xor
jl
sbb
sbb
fdiv
jmp
pop
jne
add
bound
mov
clc
lahf
lock
push
pushf
cmp
or
xchg
cltd
nop
call
insl
push
pushf
push
cmp
xchg
push
fwait
push
data16
les
shlb
xor
pop
popa
mov
xchg
shl
sbb
mov
lahf
sbb
bound
cwtl
mov
push
jb
mov
inc
push
icebp
ret
mov
cltd
mov
outsb
aad
sub
loop
mov
xor
mov
subw
sub
adc
movsb
xchg
jae
adc
lahf
movsl
sub
dec
push
xorl
pop
mov
movsl
testl
jbe
and
rcl
push
sub
lcall
mov
into
rcr
push
pop
sub
mov
jb
push
dec
lret
pop
jbe
inc
arpl
jge
xchg
cmpsb
mov
je
push
mov
sbb
shr
shlb
mov
or
xor
sbb
dec
xor
fmull
dec
sar
xor
lods
lods
pop
push
aam
aad
dec
pop
sarb
pop
cmp
pop
sbb
xchg
sarl
ljmp
scas
aad
jg
adc
loopne
aam
sbb
inc
bound
int
jp
ret
dec
push
cmove
fildl
mov
add
hlt
push
pop
pop
jno
mov
loope
xor
add
nop
lcall
outsb
jge
jno
mov
xor
push
shrb
or
lods
movsl
jl
add
mov
shl
inc
insl
jmp
xchg
test
cmpsb
adc
xor
leave
out
mov
push
mov
ret
in
jmp
cmp
lods
mov
push
mov
sbb
loope
cmpsb
fnstsw
add
dec
adc
push
imul
mov
cmpsl
add
fwait
sub
jmp
push
roll
cmp
mov
cmp
mov
imul
jp
cmp
mov
das
pop
aas
aas
je
es
add
xor
pop
ret
lds
out
fisubs
add
push
cmp
rcrb
arpl
pop
add
mov
dec
bnd
pop
cmp
popf
push
into
pcmpgtw
dec
jns
stos
push
jne
pop
sbb
loopne
xor
push
mov
lods
nop
icebp
jbe
xchg
add
add
enter
add
and
xchg
jle
push
mov
add
sbb
sbb
stc
and
push
cmp
push
mov
sahf
add
or
xchg
je
mov
xchg
int
outsl
or
push
pop
fdivr
inc
stos
imul
ficoml
imul
ret
inc
jmp
or
sbb
out
repz
push
scas
out
lock
xchg
inc
roll
xor
int
into
into
bound
jo
inc
jp
pop
jo
xchg
sahf
inc
push
fstps
test
push
imul
mov
rep
push
fidivrs
aas
imul
xchg
std
scas
ficomps
cmp
cmpsb
outsl
iret
test
es
fadd
pop
mov
inc
cmpsb
aas
cmpb
out
cvttps2pi
int3
jl
xchg
push
in
sub
jg
movsl
je
mov
in
jno
sub
stc
jg
scas
and
xchg
dec
sbb
sub
incl
lds
inc
popf
std
jp
popf
cmc
push
fbstp
cmp
rorl
loopne
mov
aad
iret
sahf
jge
outsl
mov
pop
ss
and
dec
add
lahf
lods
mov
scas
out
bound
jmp
sbb
cmpsb
test
mov
xchg
xor
in
into
int
push
rcrl
push
cmpl
adc
mov
add
push
test
jnp
sbb
inc
mov
push
fmull
pop
inc
mov
iret
mov
inc
mov
push
mov
fistl
fistl
call
in
int
stos
xchg
lock
or
cltd
or
cli
mov
mov
or
dec
out
mov
xchg
adc
into
int3
xlat
stc
lea
add
mov
into
dec
js
lods
and
add
std
mov
dec
gs
insb
pop
sbb
xchg
popa
int3
push
cmp
neg
lret
clc
hlt
xchg
fwait
push
mov
cmp
mov
lret
fwait
adc
call
push
push
dec
ljmp
popa
mov
push
or
or
lea
gs
and
cld
stos
pop
jnp
jnp
enter
iret
jb
std
mov
cmp
push
pop
mov
imul
in
lret
hlt
ret
mov
es
int
xchg
and
mov
daa
inc
xor
cmpsb
daa
cmp
sbb
stos
and
mov
std
test
or
add
mov
push
lock
xchg
and
cld
pusha
movsb
mov
insb
xor
push
mov
fildl
rolb
adc
adc
jmp
movsb
cld
out
jbe
adc
xchg
daa
out
sub
js
fs
cld
cmp
fldenv
stc
pop
in
fadd
lods
iret
and
mov
xchg
sub
mov
mov
mov
ja
int3
adc
jl
mov
and
push
mov
icebp
mov
add
push
out
addl
aad
fwait
sahf
int3
sahf
loope
inc
mov
mov
xchg
xchg
mov
jl
addr16
mov
cld
iret
lods
mov
jg
add
stos
mov
movsl
stos
xor
in
imul
insb
sub
cmp
addr16
lcall
pusha
inc
inc
mov
out
adc
fsubrl
mov
loop
dec
or
sub
clc
jge
hlt
or
insl
pop
and
jp,pn
adc
and
outsb
mov
jae
fstl
repz
stos
movntq
sub
out
aam
cs
loope
or
dec
fstpt
or
movsl
lret
and
cmp
push
dec
cmpsb
push
aad
jo
push
add
cmp
pop
les
adc
bound
imul
pop
mov
pop
pusha
pop
push
mov
inc
jecxz
stos
add
aaa
imul
xchg
xchg
adc
cmp
shrl
aas
or
movsb
iret
jle
pusha
pop
je
jae
mov
push
sbb
mov
mov
roll
out
cli
rclb
lds
mov
push
test
scas
dec
mov
dec
lret
xor
andb
push
mov
idivb
mov
js
mov
jge
push
dec
daa
xchg
ljmp
divb
xchg
jb
add
sahf
mov
mov
fcomps
scas
mov
pop
outsl
mov
subb
cs
jp
dec
sbb
cmp
cltd
mov
loopne
out
xchg
adc
dec
inc
mull
out
pop
into
mov
pop
pop
loope
aas
jmp
push
sbb
sub
shlb
jl
rcl
jb
iret
fsubr
and
scas
scas
popa
push
in
mov
pusha
inc
push
xchg
ficoml
inc
push
or
push
mov
cmpsb
xor
fwait
or
and
aas
dec
jns
cmp
sahf
dec
dec
inc
in
stc
cs
inc
push
sti
and
test
loope
int
sahf
loope
mov
mov
dec
leave
push
gs
stos
dec
xlat
push
jne
lock
lods
push
leave
adc
push
nop
sub
push
mov
inc
faddl
les
repnz
sbb
jnp
ja
je
cmp
imul
movsb
scas
mov
pop
adc
mov
and
mov
xorb
sbb
jg
mov
dec
or
cltd
ljmp
cmp
hlt
jae
mov
adc
mov
cmp
pusha
sbb
xor
popa
stc
pop
stc
inc
nop
jae
lret
jb
push
xchg
or
movb
inc
fwait
and
adc
lea
addl
scas
and
sub
mov
sub
mov
adc
js
daa
gs
ficoms
nop
lods
mov
stc
xchg
popa
mov
jg
sub
sbb
and
ror
jne
push
dec
rol
sub
sub
pop
sbb
fimuls
jb
in
adc
fnstenv
lea
mov
movsb
sarl
and
fnstsw
and
mov
mov
int3
out
aam
adc
jg
loop
and
pop
or
jmp
mov
inc
and
fsub
loope
jne
andl
push
pop
add
add
xchg
xor
pop
clc
or
jb
adc
gs
xchg
xchg
fsincos
ljmp
lds
hlt
or
lret
sub
mov
test
mov
pusha
in
and
lods
mov
xor
mov
jno
rcr
popa
jmp
mov
jo
xor
sbb
cmc
sbb
xchg
pop
pop
push
or
lret
push
cmp
lahf
loopne
mov
das
mov
mov
inc
out
mov
pop
out
insb
cmp
and
enter
xchg
and
xchg
lahf
pop
popf
mov
in
cmp
insl
add
fidivs
inc
add
es
faddp
test
notl
sub
ldmxcsr
pop
jmp
sbb
test
rcrl
mov
sti
imul
push
sbb
mov
xor
xlat
cltd
test
dec
add
into
int
or
and
dec
xchg
mov
ret
lret
lds
ret
lret
fiaddl
test
or
jl
xor
xchg
pop
xchg
cmp
cmp
aam
inc
mov
popa
push
or
nop
mov
push
inc
stc
dec
hlt
push
push
adc
push
ret
or
push
xchg
loopne
pop
ds
sub
xor
adc
add
loopne
jge
lret
mov
mov
pop
adc
sub
jge
js
xor
or
pop
test
aad
mov
clc
xchg
push
pop
fwait
es
fsubl
loopne
dec
das
outsb
sbbb
push
cwtl
adc
int
inc
sub
clc
das
rcr
pop
dec
fisttpl
xor
in
popa
das
mov
loop
xchg
out
pop
jns
adc
adcl
lret
scas
movsl
pop
std
out
repz
loopne
sbb
mov
sbb
fsubs
or
inc
mov
das
sub
and
xchg
xor
jo
jnp
cmp
enter
stc
add
mov
cmpsb
sub
outsb
jmp
loop
in
push
popa
cld
scas
xlat
scas
sub
sub
jb
sahf
rcll
scas
rcll
xchg
add
fnstsw
aas
and
add
lds
cs
sbb
xchg
jl
adc
js
inc
in
inc
fistps
push
popw
out
fcomps
mov
mov
mov
and
dec
and
xor
jno
mov
shrl
dec
adc
xor
fadd
sbb
xorl
add
pop
mov
adc
xor
cmpsb
clc
push
mov
leave
rcll
xchg
std
and
test
sbb
pop
aaa
pop
in
xorb
xchg
loop
xorb
ja
xchg
std
mov
test
fists
inc
bound
sub
rol
dec
and
jns
repnz
test
jecxz
mov
repz
test
imul
inc
xlat
into
pushf
pop
rcll
xor
mov
xchg
jno
outsb
adc
mov
inc
and
sub
lcall
xchg
mov
ljmp
push
fwait
inc
subl
ja
inc
fidivrl
pop
popf
cmp
rorb
lahf
xchg
call
shlb
jecxz
fcomip
sbb
jecxz
xchg
xchg
mov
sub
inc
and
mov
add
popf
pop
ret
andl
jge
call
insl
sbb
es
adc
push
pop
add
fldenv
test
pop
clc
scas
hlt
add
icebp
push
and
pop
shl
add
lea
push
mov
mov
inc
mov
xchg
pop
daa
inc
ret
jae
ja
pop
lods
add
mov
cltd
outsb
push
fwait
imul
xor
push
out
dec
rolb
push
pop
add
enter
popa
stos
adc
sbb
sub
das
push
mov
pop
shll
lds
mov
adc
jne
bound
adc
outsb
outsb
or
loope
mov
dec
cmp
cmp
arpl
jno
in
dec
hlt
hlt
int3
inc
aaa
cmpsl
dec
add
cmpb
adc
sub
out
scas
vpbroadcastq
dec
mov
rol
cld
add
cmp
fwait
out
lods
xorl
test
xor
cmp
lods
mov
jbe
and
sbb
leave
lods
ds
fcoms
pop
outsl
pusha
dec
loop
jae
or
aad
dec
add
sarl
xchg
or
test
push
dec
popf
dec
push
outsl
dec
sub
jge
or
add
push
subl
test
ret
call
or
xor
or
dec
mov
pop
and
jmp
bound
aad
into
add
out
mov
pop
pop
fisubs
ret
out
xor
aas
mov
xchg
sbb
cmc
call
xchg
push
jp
xlat
and
mov
sbbl
mov
rclb
jecxz
jge
xchg
xchg
xlat
iret
dec
cli
or
pushf
xlat
jno
clc
pop
pop
test
jle
jbe
std
sarb
jo
push
nop
mov
mov
inc
es
arpl
mov
jge
add
fwait
adc
outsl
insb
cmc
scas
dec
dec
loopne
cmc
lds
imul
mov
fisubl
push
jge
mov
pop
cmpsb
adc
test
mov
mov
xor
push
stos
dec
insl
popa
mov
mov
jb
aaa
xor
mov
sub
push
mov
popf
scas
fucomi
loope
mov
lods
or
lods
xchg
xor
pop
add
adc
imul
pop
vpcmpgtd
lds
mov
sub
push
add
testl
push
adc
mov
or
mov
push
pop
hlt
and
mov
mov
add
addr16
xchg
fdivs
cmpsb
loopne
test
sub
popf
sbb
dec
adc
cmp
push
mov
aam
xchg
ret
sub
push
xlat
mov
sbb
dec
sbb
mov
int
xor
adc
cmpsb
rolb
or
dec
adc
adc
sbb
insl
push
push
add
xchg
orl
jmp
xchg
imulb
xor
hlt
jmp
stc
adc
jg
dec
push
cmp
movsb
pop
ret
push
subb
ja
xchg
test
mov
push
cmpsb
hlt
cmc
sti
inc
out
xchg
aam
test
aad
mov
jne
cmpsl
sbb
insl
js
dec
push
adc
out
push
cwtl
jo
inc
sbb
outsl
xor
fdivrs
ljmp
movsb
in
test
or
adcl
mov
jno
sahf
mov
jbe
lock
push
xorb
stos
jmp
sarl
les
fmulp
das
xchg
test
inc
clc
in
fwait
into
xchg
stos
jmp
jnp
push
call
js
repz
jle
dec
pmullw
cmpsl
mov
mov
jmp
push
dec
and
out
addr16
lods
dec
pop
xor
fbstp
add
push
or
pop
jmp
or
pop
push
cltd
and
inc
dec
imul
mov
mov
mov
ja
iret
sub
sbb
or
xabort
insb
push
ja
dec
mov
jnp
movsl
ret
daa
and
sub
push
dec
mov
sbb
fwait
not
mov
icebp
add
iret
inc
push
clc
push
imul
dec
ss
pusha
cmpsl
sbb
jge
and
or
fistpll
mov
adc
mov
aas
movsl
js
shll
adc
fs
mov
xchg
or
pop
mov
cmpsb
das
and
test
push
jbe
jno
inc
testl
int3
arpl
xorl
cmp
dec
aad
jbe
cltd
or
bound
cmp
hlt
add
or
pushf
mov
dec
xchg
inc
decb
scas
dec
jb
data16
pop
push
push
iret
js
imul
pop
lock
or
lahf
sbb
jmp
jle
and
in
mov
mov
fsts
mov
je
mov
pop
addr16
call
dec
daa
pop
stc
scas
testb
lahf
loop
lahf
mov
rcrl
jnp
mov
test
jmp
ret
xchg
push
sub
scas
adc
adc
jb
fadds
pop
int3
inc
sub
out
dec
mov
je
out
shl
stos
sarb
cmp
pop
xor
xchg
adc
mov
jmp
arpl
mov
mov
adc
push
adc
lds
xchg
push
pop
popa
add
sbbb
insb
push
push
inc
insb
sarl
cmp
dec
jae
xchg
xor
pop
daa
ljmp
test
jl
pop
xlat
mov
xchg
mov
jmp
lock
mov
jge
insb
movsl
xchg
and
mov
stos
mov
push
mov
inc
repnz
mov
lcall
lock
pop
xchg
imul
cmp
jo
clc
inc
xlat
jne
call
ret
mov
mov
call
lahf
cmp
xchg
movsl
cmpsl
data16
gs
enter
dec
inc
paddsw
rorl
aad
mov
test
mov
mov
fnstcw
sub
mov
xchg
leave
and
ja
testb
cmp
cmp
es
sbb
ljmp
add
outsb
inc
cmp
lea
add
and
pop
sbb
add
in
ss
inc
shrb
cs
mov
and
xchg
push
mov
in
jbe
sbb
prefetch
hlt
mov
das
push
stos
or
push
imul
orb
push
mov
and
push
mov
dec
push
gs
mov
xor
cli
inc
scas
scas
push
xchg
iret
scas
gs
bound
pop
xor
cmpsb
lods
inc
aas
adc
enter
outsl
inc
imul
mov
icebp
sbb
es
insb
pop
mov
mov
repz
and
push
stos
mov
pop
mov
repnz
and
arpl
aam
inc
sub
xchg
cmp
inc
ljmp
sbb
mov
jmp
leave
int
aam
adc
fcmovnbe
push
xchg
pop
and
xor
test
dec
sub
jge
and
dec
lea
push
in
or
add
sti
pop
push
sub
and
pop
fcomps
xlat
fdiv
add
push
dec
mov
adc
in
inc
scas
cmc
sbb
push
add
stos
jnp
add
sub
insb
xorb
sahf
adc
aam
jge
cmpsl
pop
loop
xchg
int
imul
cli
es
or
mov
imull
cmp
jo
jge
inc
pop
pop
mov
mov
shll
cmp
pop
out
movsb
sbb
pop
push
mov
xchg
stos
jb
jge
outsl
lcall
js
sbb
aas
in
clc
testb
out
mov
jle
push
push
andb
sti
lret
ret
icebp
dec
push
adc
xor
sbb
jp
pop
movl
out
mov
pop
xchg
push
xchg
ds
je
cmp
sub
add
stos
lods
scas
jo
loope
ds
lock
sti
cmp
scas
mov
sar
fldt
mov
mov
add
out
jns
xchg
cmp
pop
pop
sbb
insl
pop
and
jnp
add
pop
jo
leave
adc
and
push
fcoml
iret
cwtl
sahf
and
xor
mov
aam
fdivrp
inc
xchg
xor
cmp
add
mov
xchg
or
cmp
mov
icebp
call
jge
pop
out
pop
add
sub
adc
push
aam
test
cmp
popa
jg
repz
movsb
test
mov
mov
rcr
cmpl
lods
cmp
mov
cmpsl
popf
xor
scas
clc
mov
dec
xchg
dec
push
inc
pushf
arpl
fildll
or
aam
push
ret
popa
dec
push
xchg
test
xor
lret
out
jle
cs
roll
test
inc
mov
mov
add
ret
mov
add
call
std
aad
or
test
xor
orb
push
mov
pushf
out
add
sti
push
jnp
inc
loop
dec
orb
jle
and
or
aas
std
stos
mov
clc
sarb
shrb
adc
add
mov
mov
sbb
test
sbbb
jmp
rcl
pop
stos
aas
add
dec
enter
adc
xchg
fpatan
ljmp
xchg
test
jbe
aas
and
lret
push
outsb
jno
add
movsb
mov
mov
cmp
sbb
dec
sbb
test
das
push
in
jg
xor
lahf
rorl
rclb
out
xor
sbb
dec
outsl
aad
mov
ljmp
repz
popf
push
cmp
xor
ja
into
inc
mov
mov
jne
shll
mov
shrl
in
sbb
jb
sahf
test
dec
lcall
xorl
jno
aaa
pop
je
mov
sbb
loop
pop
jg
adc
and
popf
mov
lea
push
fmuls
scas
adc
and
mov
xchg
shlb
jmp
jbe
xor
and
xor
xchg
inc
into
stos
xchg
xchg
cmp
jmp
adc
jns
notl
mov
add
int3
sub
inc
arpl
pop
sbb
mov
mov
mov
cmp
mov
mov
mov
push
ret
pop
add
pop
cmp
stc
pusha
mov
mov
out
hlt
test
aam
mov
sub
pop
xchg
push
or
repz
mov
mov
adc
jge
data16
push
add
rcrb
test
jns
push
inc
dec
sub
jns
inc
mov
inc
ss
push
xor
sbb
cmp
and
fucom
xor
inc
jl
or
or
mov
mov
in
mov
adcl
push
inc
aad
bound
xor
pop
and
loopne
mov
loopne
jo
call
ljmp
jmp
sbb
lods
and
inc
mov
mov
scas
and
das
pop
dec
fnstcw
ljmp
lock
inc
adc
push
jnp
icebp
fldl
adc
jg
mov
fsubrs
mov
je
xlat
call
out
push
lret
xchg
xchg
xor
mov
shrb
cmp
fidivrs
jne
aaa
mov
scas
repz
xchg
jg
lock
loope
lret
in
lahf
int3
movsb
fisubl
jo
cltd
or
test
cmp
jae
add
mov
dec
sbb
cmpsl
mov
out
stc
xchg
mov
daa
mov
and
add
and
arpl
push
jp
and
aad
pop
sub
inc
pop
stc
testl
or
or
jmp
pushf
cmc
test
cmp
shr
and
cld
clc
sbb
cltd
sahf
mov
adc
sbb
add
inc
or
adc
or
pushf
push
fldt
das
jmp
push
add
hlt
ss
xor
int3
rcrl
and
test
xchg
lods
cltd
sbb
add
sub
add
fidivs
sarb
jb
rcr
pop
sbb
loope
and
enter
mov
jns
jae
hlt
add
cmp
stos
jmp
lret
add
pop
mov
dec
sbb
dec
outsb
sbb
hlt
cs
movsl
jge
rorb
mov
outsb
out
mov
ds
xchg
inc
cmp
sub
jo
out
cmp
aad
fcmovne
aaa
mov
orb
in
jmp
dec
aaa
lods
dec
popf
mov
add
inc
and
add
addb
jmp
ljmp
jp
int3
or
push
loope
fadds
pop
mov
pop
in
sbb
xchg
test
add
popa
and
es
dec
ret
decl
or
rol
testb
cmp
mov
js
ret
lea
ficompl
jp
ljmp
cmp
daa
test
and
adc
stos
mov
xchg
jb
add
fildll
mov
mov
jmpw
lods
test
int
cmc
add
lahf
in
adc
test
stc
hlt
add
out
sbb
cltd
dec
cmp
lahf
mov
add
xchg
inc
fisttpl
jns
cld
push
xchg
cmc
cmp
push
aam
adc
dec
dec
std
stos
sti
mov
sub
inc
adc
bound
mov
in
mov
add
or
jns
jg
negb
inc
mov
mov
int
fneni(8087
mull
out
xor
cmp
xchg
bound
fcomps
jnp
jge
push
cmc
jp
cwtl
fldenv
xor
aas
jp
and
stc
scas
jo
fadds
jp
iret
lods
mov
and
ds
int
lea
push
push
fcmovnb
inc
cmp
sbb
sbb
bound
imul
insb
ljmp
iret
jl
cmp
out
add
ja
std
mov
xchg
stos
mov
add
pop
in
outsl
inc
fildl
push
xchg
cld
sbb
mov
adc
ret
adc
test
sti
lea
inc
mov
pop
repz
cmpsl
movsb
push
mov
inc
ret
mov
push
sbb
inc
mov
rorl
out
mov
xor
mov
jge
std
push
pop
scas
test
insb
xor
ret
or
addr16
test
cmp
hlt
inc
sub
xchg
cs
jne
movsl
mov
fists
mov
or
lret
test
xchg
loop
and
adc
push
std
out
movsb
dec
jne
cwtl
rol
sahf
add
hlt
aaa
out
ret
jns
pop
jp
pushf
push
sub
fists
mov
lock
xchg
sbb
adc
call
loop
xchg
nop
rclb
sbb
lret
outsl
jnp
popf
inc
popf
std
mov
lds
incl
mov
dec
push
mov
lcall
inc
fstps
dec
sbb
push
out
jns
repz
adc
jge
dec
push
into
test
inc
add
cmp
dec
leave
clc
imul
call
jnp
int3
sahf
jmp
pop
push
add
push
mov
dec
cmp
movsb
push
jp
out
cmpsl
call
iret
loop
xchg
scas
out
mov
mov
bnd
sti
inc
xchg
mov
and
jmp
xor
in
cld
adc
lock
out
mov
sti
push
lock
in
and
lods
das
ss
xor
shrb
in
inc
sbbl
adc
lret
mov
and
lcall
fstpt
jb
push
sbb
clc
rclb
stos
daa
imul
add
movsb
sub
stos
mov
test
sbb
int
jg
jp
outsb
lahf
adc
insb
fildll
cmpsb
lods
int3
std
jecxz
xor
push
dec
enter
imul
jmp
mov
daa
fcompl
lret
daa
cltd
pop
shrb
cmpsl
dec
mov
out
xor
mov
adc
mov
push
int
daa
pop
outsl
push
lea
pop
shl
cmp
cmpsb
mov
push
xchg
jnp
movl
jle
data16
add
insb
adc
cmp
sub
xor
aas
push
push
xchg
mov
dec
cmp
jp
pop
in
mov
andl
ds
fwait
pop
repnz
popf
cmpb
es
in
mov
jmp
repnz
xor
sahf
fucomip
ds
jno
mov
test
loope
jecxz
push
notl
pop
jnp
in
jl
imul
std
pop
insb
adc
call
inc
jo
jae
mov
pop
xor
sub
mov
shl
sahf
mov
movsb
push
shll
arpl
sub
mov
inc
arpl
repz
pop
out
mov
or
pop
mov
jne
xchg
jecxz
je
jmp
push
sub
mov
imul
loope
into
shll
pop
push
jnp
repnz
jmp
or
dec
into
in
sub
repz
aam
sub
test
cld
dec
adc
cmp
push
in
cmp
cmp
out
jp
test
cmp
xchg
sbb
test
mov
ds
jo
pop
and
mov
lods
xor
cli
jg
loopne
jns
mov
test
jl
ret
ds
stc
in
add
mov
jl
pop
pop
jg
mov
jmp
cmp
xchg
dec
mov
fnstenv
ss
adc
jbe
mov
js
lods
repz
gs
mov
jmp
cmp
pop
movsl
cmp
outsl
push
outsb
test
sub
cwtl
insb
fisubrl
jb
sbb
jb
add
sub
enter
dec
dec
pusha
loop
xchg
icebp
out
pop
sahf
scas
xchg
pop
js
pop
or
adc
add
sub
lea
and
and
pusha
das
mov
inc
negl
clc
outsb
les
push
sub
dec
mov
shl
test
cmp
xor
fs
cmc
outsl
push
lods
pusha
jne
inc
les
and
mov
mov
das
adc
gs
repz
cmpsl
inc
movsl
cmp
pop
add
ja
stos
xor
mov
pop
inc
adc
cmp
push
and
enter
xor
adc
cmc
jo
jp
cli
scas
sbb
jns
xchg
arpl
je
add
lcall
shl
ja
rcll
cmp
jecxz
lcall
sub
lahf
testb
testl
icebp
and
cs
cwtl
out
push
sbb
sub
pop
bound
dec
cmp
mov
push
dec
in
pushf
xchg
int3
jge
repz
push
adc
fs
sbb
jle
cmc
or
gs
sbb
sub
in
sbb
pop
cmp
in
lret
or
jle
xor
loope
jnp
rol
pop
das
mov
popa
orb
gs
push
out
imul
ljmp
lods
pop
dec
clc
icebp
add
divl
xor
rorb
test
cmp
mov
clc
mov
lock
fcomip
out
imul
lahf
push
sub
or
popa
mov
dec
shrb
fidivrl
mov
popf
xor
call
cmp
mov
stos
addb
cmc
in
sti
scas
pop
fcompl
jb
loope
fldenv
jns
test
adc
ja
aas
mov
rorb
fwait
xlat
inc
outsl
faddl
cmp
les
scas
ret
jns
idivl
add
push
mov
inc
dec
leave
sti
hlt
addr16
cmp
sahf
shll
inc
lock
cli
sbb
lahf
jmp
sbb
mov
mov
adc
pushl
push
push
jnp
mov
mov
jle
test
mov
adc
ja
mov
decl
addr16
in
sub
xor
ss
out
cmovge
jmp
loope
mov
mov
cltd
sbb
ds
hlt
clc
cmpl
mov
and
fst
out
and
add
jbe
cli
inc
shrl
sbbb
mov
mov
inc
icebp
sbb
mov
lahf
jle
add
mov
fiaddl
jg
into
jmp
pop
lock
mov
xor
in
xchg
mov
inc
cmp
xor
sbb
loopne
ret
cltd
aaa
into
fxch
dec
jbe
lret
dec
lock
scas
scas
in
xchg
fisubrl
xor
cmpsb
shl
ja
inc
icebp
add
mov
stos
vphadduwq
and
daa
pusha
aas
or
push
fdivs
test
mov
mov
sahf
add
mov
xchg
pop
xchg
sub
ret
xor
and
push
cmp
pop
or
jl
ret
jg
jmp
jo
jle
test
and
and
mov
pusha
out
xchg
jle
out
sbb
out
sub
dec
das
adc
jb
sub
and
jns
dec
ret
nop
mov
adc
enter
inc
sub
mov
mov
stos
fsubp
pop
aas
lods
and
out
lahf
jno
vmovdqu
sbb
jnp
and
cli
inc
fisubrs
mov
stos
sub
loop
je
and
pop
xchg
enter
push
jb
xor
std
dec
stos
mov
mov
test
rcr
sub
cwtl
add
mov
or
clc
rcr
cmpsl
bound
adc
jo
dec
sub
das
pop
mov
sar
cmp
jnp
subl
call
lcall
xor
and
push
outsb
push
gs
mov
jno
daa
xchg
xor
and
lds
fldt
sti
adc
icebp
dec
dec
mov
ljmp
das
repnz
jne
cmc
lea
xchg
mov
popf
xor
scas
add
and
cli
or
push
bound
mov
and
movl
xchg
xrstors
xchg
push
insl
mov
in
aas
add
adc
mov
negb
sbb
repnz
repz
xchg
or
and
pop
pusha
loop
xchg
push
roll
cmpb
mov
sbb
jecxz
insl
push
sbb
pop
push
push
jbe
scas
std
out
pop
inc
in
adc
pop
lret
mov
ret
push
addr16
repz
push
dec
jmp
lods
pop
mov
sbb
test
daa
in
or
lods
aam
dec
dec
shr
cmp
push
repz
jp
fsubrs
gs
aam
and
inc
push
movsb
push
fnstsw
push
or
and
aaa
mov
adc
dec
push
xchg
and
cwtl
inc
js
add
xor
push
popa
scas
dec
xor
mov
mov
lock
iret
xor
sub
mov
ds
repnz
sub
loopne
cmp
mov
add
aad
icebp
ret
mov
mov
shll
pop
push
mov
push
movsl
loope
pop
repz
mov
push
repz
fisubrs
mov
clc
jno
xchg
gs
arpl
imul
xchg
int3
jo
xor
leave
dec
insb
sbb
out
mov
mov
and
xchg
or
mov
mov
cmp
sahf
out
mov
dec
or
dec
cmp
add
push
mov
mov
stc
inc
push
lods
testb
icebp
xor
mov
aas
les
inc
pop
ss
outsb
mov
sub
lock
pop
push
outsl
cmp
lds
inc
insl
mov
lea
jne
xlat
iret
mov
or
inc
sbb
cltd
and
orb
xchg
sub
js
clts
ret
ja
mov
stc
dec
stos
xchg
mov
mov
adc
jns
inc
cmp
ss
popa
lock
out
xchg
je
call
andb
inc
int
cmpb
pop
mov
adc
stc
cmp
jg
fucom
jb
cltd
add
faddl
jmp
push
pop
int
jne
cmc
push
lea
mov
popf
sbb
loope
mov
pop
mov
or
rorb
rcrb
mov
je
into
iret
test
das
mov
data16
sti
add
push
xor
mov
scas
adc
pop
push
inc
ds
xlat
push
dec
pop
cmpsl
pop
cwtl
lret
xlat
ret
sub
int
mov
jge
pop
mov
pop
ror
cld
cmp
ret
jmp
dec
xor
out
fwait
mov
xchg
push
jno
rcrb
adc
imul
in
and
add
mov
lcall
ja
mov
or
hlt
rorb
cmp
adc
adc
ljmp
imulb
mov
mov
in
add
mov
outsb
sub
mov
pop
and
movsb
pop
jne
mov
stc
lret
int
rorb
add
fwait
into
cmp
loope
movsl
mov
jge
nop
jecxz
cld
cmpsl
mov
xchg
mov
dec
push
mov
xor
mov
jmp
jecxz
cwtl
adc
aaa
xchg
aam
cmp
sub
or
mov
mov
dec
dec
inc
arpl
push
cmp
mov
outsl
push
pop
jae
adc
mov
loopne
jae
pusha
or
inc
leave
and
sbb
pop
addr16
pop
sub
into
xor
orl
repnz
adc
mov
enter
pusha
sub
or
inc
divb
lahf
sarl
adc
cld
in
push
scas
arpl
cmc
dec
test
xor
jmp
movsb
insb
fiadds
movsl
mov
push
and
cmp
icebp
and
or
pop
mov
or
xor
inc
lcall
je
inc
inc
xor
loop
cmp
mov
scas
jmp
ret
scas
xchg
or
dec
cmp
sarl
mov
xor
pusha
push
dec
jp
push
pop
dec
push
xor
fisubs
popf
cmp
mov
lods
push
xchg
in
cmpsb
add
push
pop
cwtl
xlat
inc
sar
je
and
push
int
pop
data16
popf
lock
xor
cmp
xchg
test
adc
push
das
loope
repnz
ljmp
lea
sub
test
je
ja
pop
test
mov
xor
loope
xor
or
push
enter
jnp
cmpsl
loopne
divl
loope
sub
std
inc
aas
bound
inc
lods
fsts
int3
outsb
jge
mov
stc
out
mov
sbb
sbbb
mov
mov
mov
aam
movsl
mov
enter
cltd
xor
nop
testb
jnp
jle
imul
push
jae
popf
mov
iret
mov
loope
sahf
imul
sub
fidivs
pop
dec
dec
je
mov
dec
dec
fmuls
push
in
sbbb
fcoml
inc
jo
rorl
lea
pop
xchg
inc
icebp
xchg
or
ljmp
mov
fidivrl
xchg
mov
stos
mov
cmc
mov
scas
jns
jmp
pop
addb
outsl
outsl
inc
in
or
jno
sbb
jmp
mov
mov
cmp
addl
int
int3
mov
sub
xchg
pop
cmpxchg
insl
mov
or
push
sub
inc
push
jno
call
loopne
xor
mov
dec
in
add
das
addr16
or
fiaddl
cmpsb
jp
jo
sbb
js
xor
int3
adc
and
mov
cmp
inc
and
gs
mov
push
sub
test
or
shr
test
push
mov
popa
mov
xchg
outsl
mov
xchg
stc
push
subb
das
pop
or
adc
ret
popa
sbb
push
aaa
and
sub
sub
xchg
out
bound
xchg
lock
pop
lods
ja
adc
cmc
je
sub
test
or
jno
insb
and
mov
bound
adc
inc
lahf
fisubs
jae
xor
andb
pop
test
imul
add
outsl
cmp
lods
sub
call
loope
enter
mov
mov
pop
mov
cmp
je
mov
pop
lea
xor
ret
push
rorl
test
mov
pop
sub
xchg
mov
cmpsl
stc
lea
push
test
popa
dec
push
jbe
ljmp
ret
add
pop
jb
dec
cmp
fmul
add
xor
pop
out
xor
out
roll
xlat
cli
cmpsl
or
notl
xchg
ret
fwait
jb
push
cltd
in
jmp
imul
pop
gs
sbb
aaa
sub
inc
imul
addr16
mov
xor
ret
lcall
lods
or
and
ret
add
orb
mov
pushl
fs
inc
icebp
js
mov
add
sbb
mov
cwtl
insl
ja
mov
xchg
mov
fs
mov
int3
cmpsl
add
sub
sub
lcall
fisubrl
mov
sub
test
jo
icebp
push
mov
in
push
jae
dec
fdivr
fwait
out
sahf
inc
xor
add
sbb
int3
mov
mov
or
hlt
cli
or
nop
loop
sub
mov
rol
es
pusha
mov
push
jno
subb
jmp
mov
lret
or
cmp
mov
push
daa
or
push
stos
aaa
jb
stos
insl
pusha
cld
pusha
shr
adc
inc
sub
xchg
subb
loop
stc
xchg
jmp
mov
fisubrl
pushf
push
inc
dec
jle
xchg
pop
dec
fs
ljmp
push
add
addr16
xor
int3
push
sub
es
mov
adc
xchg
ret
jo
xor
or
or
sbb
pusha
ret
mov
sbb
xchg
push
sub
jmp
and
ja
lea
inc
pop
push
push
cmp
fsubl
pop
and
mov
dec
loopne
inc
sahf
xchg
xor
push
mov
loopne
test
push
ljmp
shll
dec
mov
and
sbb
xchg
xchg
stos
mov
inc
push
sbb
je
or
mov
data16
test
push
enter
sbb
lret
js
xchg
mov
lea
inc
enter
cmp
hlt
adc
mov
sbb
cmpsb
lods
lock
pushf
sbb
push
inc
adc
dec
sti
incb
dec
jmp
loopne
loope
sub
adc
nop
js
sub
das
out
sbb
loopne
rcll
mov
iret
leave
jno
fcoms
add
dec
insl
jmp
pop
xchg
test
xchg
inc
sbb
mov
mov
inc
cltd
pop
push
int3
pop
cmp
xor
imul
js
lock
sub
fcoml
push
clc
jl
jp
dec
push
imul
stos
mul
xchg
mov
cmc
or
loop
lret
scas
dec
inc
outsb
data16
jp
mov
and
mov
cli
sub
js
push
bound
roll
das
popf
jne
and
lret
push
jb
bound
test
push
jns
jb
inc
hlt
int
jmp
rcrl
push
inc
mull
mov
xchg
fistpl
sub
daa
jb
test
cmpsb
push
aad
push
pop
test
fistpll
scas
or
iret
int
mov
mov
popa
jle
mov
mov
push
push
mov
cmp
add
daa
xchg
pop
dec
cmp
aaa
lock
adc
inc
or
adc
fs
xlat
inc
lods
push
cmp
outsb
into
mov
xchg
xor
loop
xchg
js
imulb
test
sub
ror
cmp
push
add
data16
add
adc
sbb
mov
cmpsl
out
test
mov
cli
js
lods
mov
mov
in
shll
imul
psubb
sub
mov
add
std
dec
sub
mov
or
jae
jno
mov
mov
inc
jae
fisubrs
push
mov
dec
xor
mov
mov
sbb
cmp
mov
jg
push
cltd
jo
jl
jns
pop
xchg
mov
fnstcw
iret
pop
mov
pop
and
or
sbb
push
pop
loope
xchg
lcall
ret
mov
imul
mov
sti
fsubs
jp
inc
dec
mov
into
inc
movsl
aaa
xor
xor
dec
cmp
testl
cmp
insb
mov
cmp
scas
scas
test
pop
lret
in
jns
mov
or
in
adc
int3
loop
test
inc
dec
outsl
xlat
push
aad
dec
pusha
jecxz
mov
jmp
shlb
fdivrl
push
imul
lea
ficomps
cmp
popf
xchg
jle
pop
pop
inc
add
sbb
mov
jb
imul
add
scas
jb
sbb
cs
and
cwtl
mov
add
jge
add
dec
jge
xchg
pop
inc
in
je
xchg
lods
addr16
pop
adc
sub
mov
push
dec
movsl
cmp
out
popf
lea
mov
les
or
cmp
sub
cmp
mov
popa
cltd
ficoml
pop
pop
xor
pop
sbb
lods
mov
das
pop
sub
lret
pop
out
stos
and
pop
insl
fidivrl
icebp
repz
or
mov
out
or
fwait
push
cmpsb
dec
js
int3
xor
lea
mov
repnz
dec
pop
sbb
push
test
mov
out
repnz
mov
or
lock
xlat
aas
imul
call
dec
pop
mov
test
stos
incl
jo
mov
jae
rclb
or
test
ljmp
popa
inc
mov
ret
xchg
pop
dec
mov
adc
cmp
lds
dec
push
neg
in
mov
es
add
lahf
arpl
xor
aas
mov
inc
adc
adc
out
dec
mov
and
out
outsb
dec
int
mov
add
scas
adc
and
inc
aam
call
test
test
mov
pop
movsl
jns
in
cmc
jmp
and
push
adc
sub
add
mov
andb
mov
mov
int
jmp
movb
test
xor
mov
mov
push
pop
in
jge,pt
pop
test
mov
sbb
repz
popa
add
adc
sbb
lahf
test
inc
sarl
mov
loopne
push
mov
mov
arpl
cwtl
dec
mov
sbb
mov
add
lea
or
imul
jne
inc
push
push
mov
adc
sahf
dec
stos
cmpsl
pushf
scas
cmp
out
adc
imul
push
mov
jle
loopne
shll
int
push
movsl
xchg
insb
cmp
or
out
push
inc
adc
in
mov
outsl
in
int
ret
add
dec
jnp
and
pop
cltd
mov
shrb
mov
ficoms
sub
jecxz,pn
push
stos
adc
mov
divl
fsubrl
mov
xchg
call
jle
popf
pusha
mov
test
out
sti
sub
push
popa
xchg
push
mov
cmp
test
mov
ret
out
add
lret
adc
inc
lcall
jecxz
xlat
stc
fstpl
popa
aam
sub
imul
cmp
cmc
notb
mov
faddp
and
imul
cmp
jbe
mov
mov
jne
dec
mov
jb
out
into
pop
aad
popl
jle
cmp
test
jle
sarb
inc
pop
fidivs
test
andnps
fsub
pop
adc
sub
push
or
sbb
data16
bound
mov
fsts
popf
addr16
cmp
icebp
xchg
fbld
cwtl
xchg
mov
lcall
cmp
mov
sbb
mov
rolb
push
pop
mov
jmp
hlt
xor
int
push
add
addb
lcall
imull
popf
push
aad
test
test
gs
dec
mov
in
mov
sbbl
and
xchg
ss
imul
mov
out
aaa
mov
jns
inc
pop
call
sbb
cmp
shr
and
xchg
arpl
or
lods
test
fwait
xor
lock
jo
aad
int3
insl
and
mov
sti
enter
jmp
sub
xchg
add
push
addr16
jp
xor
inc
pop
inc
and
aad
push
loope
push
adcl
cmp
clc
addr16
add
enter
hlt
fdivs
ss
xchg
bound
pop
push
loope
mov
popf
mov
jmp
cmpsl
cltd
sbb
jnp
and
loopne
xor
ljmp
push
mov
mov
and
rclb
jnp
add
adc
add
bound
xor
insl
jg
in
loope
cmp
inc
mov
mov
pop
dec
loopne
loop
mov
add
scas
add
inc
mov
mov
sbb
push
pop
xchg
mov
aam
push
xchg
jbe
pushf
pop
and
pushf
js
sbb
sub
int3
mov
adc
pop
cmp
movsl
push
cltd
mov
adc
popf
inc
xchg
inc
or
lds
xor
popf
xchg
or
mov
push
mov
loop
and
pop
es
add
test
sbb
adc
movl
fcomip
mov
js
push
push
cmpl
cmp
jbe
mov
mov
xchg
and
leave
imul
popa
xor
in
xchg
mov
push
addl
imulb
nop
mov
fcmovb
push
push
jne
outsl
push
sbb
nop
sbb
sbb
and
test
inc
test
imul
int3
dec
movsl
cwtl
or
add
pop
nop
fs
insb
add
xor
cltd
jge
inc
jo
push
xchg
mov
lahf
pop
ret
mov
shll
hlt
xchg
adc
ljmp
fwait
sarl
clc
loope
xor
nop
je
push
dec
push
cmp
xor
add
mov
insl
daa
bound
sahf
push
mov
add
cmpsb
push
imul
das
sbb
lret
mov
cs
mov
pop
push
shll
add
lods
push
xor
xchg
push
rcll
dec
push
aam
data16
or
les
xor
loopne
inc
dec
jle
ret
mov
aam
aas
push
mov
xor
mov
repnz
jp
sub
pop
sahf
cmp
pop
xor
lahf
dec
sub
mov
out
jmp
sub
loop
mov
dec
inc
lods
inc
fcmovbe
sahf
scas
adc
push
out
imull
add
sub
fbld
js
lods
jae
mov
mov
lock
jle
adc
gs
xchg
push
cmpl
cmc
mov
mov
add
and
ljmp
lret
mov
pop
mov
push
lods
dec
aad
mov
ficoms
jl
pop
aam
xor
cmpsb
sbb
mov
push
inc
jns
mov
push
xchg
or
int
daa
loop
das
pop
pop
cmpsb
inc
pop
leave
mov
dec
sub
test
pop
sub
cmpsl
push
push
out
pop
or
int
aad
int3
out
imul
enter
mov
push
movsl
icebp
std
scas
adc
sub
bound
js
adc
dec
icebp
aad
adc
fistpll
mov
insl
mov
pop
daa
scas
shrl
jmp
pop
daa
popa
cs
mov
out
jg
jno
shrb
and
sub
das
and
test
lods
jns
test
jp
int3
cmp
movsb
xor
push
loope
orb
lock
icebp
pop
addr16
sub
inc
sbb
icebp
ret
gs
jbe
jmp
outsb
fnstsw
jge
aaa
jno
cmp
mov
add
or
test
fildll
pop
insl
cmp
sub
or
sbb
insl
pop
rcrb
out
mov
mov
cmp
test
hlt
and
loop
dec
lods
popf
or
pusha
add
xor
test
das
out
mov
movb
or
jb
xorl
dec
add
jp
dec
hlt
sub
add
xchg
pop
cs
or
lods
add
or
fwait
out
inc
arpl
push
mov
inc
or
mov
add
outsb
fwait
or
shrb
xchg
xchg
idivl
or
cwtl
imul
mov
data16
add
dec
and
call
inc
or
fimull
cmp
cltd
lea
in
or
mov
sbb
dec
inc
jno
mov
cmp
into
or
ret
jnp
adc
push
jmp
insl
les
jecxz
and
jns
jecxz
pop
ja
stc
jg
sbb
xor
add
xchg
dec
xlat
ss
inc
jle
ljmp
inc
mov
fadds
mov
sub
mov
outsl
test
adcb
adc
js
xchg
push
pusha
loope
lea
cmp
out
aas
test
sbb
ret
sbb
sub
inc
and
mov
mov
xlat
jg
mov
and
jg
sub
push
jno
ds
fwait
add
cs
or
iret
loope
fsubs
loope
adc
int3
test
and
xlat
ljmp
pushf
mov
fwait
inc
enter
mov
ret
mov
arpl
in
popa
adc
movsb
lea
xlat
mov
lods
in
push
scas
fstp
popf
aad
outsl
push
jmp
fstpl
loopnew
mov
jl
nop
pop
test
xor
xor
addr16
scas
fdivs
jmp
cmp
mov
adc
jb
ljmpw
adc
mov
bound
add
pop
dec
push
mov
pop
add
add
push
into
jmp
ljmp
mov
iret
data16
push
pop
pusha
xorl
scas
dec
int3
mov
xchg
add
out
add
fistps
sbb
movsb
fnsave
pop
addb
test
mov
xchg
push
insl
div
pop
test
push
loopne
jp
fwait
dec
ljmp
jbe
in
mov
scas
xor
adc
or
outsl
sbb
cmpsl
stos
add
jne
push
hlt
push
pushf
lock
in
or
mul
sbb
dec
inc
push
pop
pop
push
cld
mov
xchg
fdivrl
jg
gs
fadds
cld
ret
daa
enter
test
fstl
inc
dec
jle
clc
jo
xor
cmp
xchg
xor
mull
sub
in
cwtl
jle
pop
cmp
inc
push
fdiv
dec
or
inc
mov
mov
add
ficomps
rep
je
lds
fdivrl
push
incb
pushf
xchg
movsb
fdivrl
sbb
lock
clc
dec
add
mov
notb
adc
mov
jmp
aad
mov
lods
dec
fucomi
int3
iret
sti
leave
sub
and
lahf
cmpsl
fldcw
push
push
jae
sub
pusha
push
mov
jbe
cld
sub
sub
jne
adc
scas
testb
push
outsl
fxch
mov
push
mov
xchg
push
xor
or
push
jp
jg
insl
icebp
sbb
scas
pop
mov
test
scas
xchg
lods
push
push
leave
mov
pop
jmp
pop
pushf
loope
adcb
lods
sar
jecxz
pushf
lods
cmp
mov
jb
ljmp
clc
mov
dec
adc
cmc
outsb
in
jmp
je
mov
add
push
es
dec
int3
out
inc
insl
movsb
jge
sti
popf
xchg
jmp
pop
adc
movb
loope
cmc
dec
pop
or
lea
shl
push
imulb
cld
popa
pop
test
mov
push
push
mov
push
fs
lods
mov
adc
lahf
sbb
mov
push
add
push
jp
ret
ret
sub
mov
out
cmp
xchg
push
or
lds
mov
mov
inc
push
call
cwtl
neg
cli
sbb
adc
push
sbb
lcall
pushf
adc
mov
pushf
cmpsl
sub
push
jg
outsb
movsl
test
mov
out
sbb
popl
ss
aaa
and
xor
sub
inc
flds
shll
dec
dec
xor
jl
mov
mov
or
inc
mov
clc
fstpl
mov
jo
mov
out
loope
jmp
sbb
mov
in
mov
mov
adc
cmpsl
jl
andl
dec
mov
test
add
rorb
and
fmul
rcll
xor
pop
pop
mov
addb
cwtl
clc
sbb
std
sub
pop
flds
mov
stos
jecxz
movsb
in
xchg
lea
jge
xchg
and
lods
mov
icebp
std
shr
dec
mov
test
push
fildll
cmp
lcall
lods
mov
push
add
xor
std
xchg
mov
push
out
test
push
imul
popa
and
or
inc
aas
and
cli
int
loop
pop
mov
adc
add
sbb
inc
xchg
sahf
sbb
mov
mov
shlb
push
int
loopne
mov
jns
adc
pop
shrb
add
ds
pop
popf
mov
xchg
dec
dec
daa
jg
add
or
cmp
fdivrs
in
inc
fistpl
in
out
pop
test
pop
push
loopne
aas
in
inc
es
adc
jnp
sbb
nop
sub
inc
inc
adc
jp
or
jbe
xor
enter
or
adc
or
lods
sti
bound
mov
repz
jbe
sbb
cmp
fwait
push
sub
lods
xchg
push
pop
push
ljmp
sbb
pusha
or
sarb
jg
adc
fildll
ja
push
das
mov
lods
xor
jge
inc
fisttps
pusha
jl
mov
pop
mov
adcl
pop
xor
lods
xlat
jp
cmp
pop
ss
or
push
adcb
dec
xchg
mov
pusha
lea
lds
push
jecxz
push
xchg
adcb
sbb
movsb
mov
cmp
decb
sbb
out
and
mov
fsubrs
js
add
out
xchg
outsl
sbb
mov
push
cmp
add
loope
cwtl
adc
fbld
mov
out
and
call
aad
out
jmp
jecxz
and
mov
ret
stos
and
test
mov
arpl
pop
mov
cltd
mov
dec
lret
repz
dec
xchg
push
nop
lcallw
fs
int
pushf
imul
negl
sub
mov
push
dec
mov
and
lcall
jge
arpl
int
loop
cmp
out
pushf
dec
pop
addr16
cltd
imul
ljmp
fisubl
js
xor
mov
andb
popa
xorb
mov
push
mov
xor
push
xor
dec
xchg
xchg
rcrl
push
sbb
and
mov
sub
aad
std
push
dec
sub
std
lahf
in
rcrl
dec
fcmovne
stos
jnp
fnstsw
iret
pushf
inc
fwait
popa
daa
and
jns
lret
popa
dec
jnp
xor
mov
or
push
faddl
jge
mov
add
lret
ss
insl
stos
sbb
push
sub
ret
jns
leave
or
es
pop
sbb
sti
mov
iret
pop
test
lods
sarb
ss
add
stos
push
out
arpl
fisttps
push
scas
xor
sub
xchg
pop
or
mov
pop
mov
adc
dec
mov
cmpsb
sbb
mov
scas
in
lods
adc
xchg
dec
inc
dec
xor
mov
jl
sub
pop
inc
movsl
aaa
inc
sub
in
std
dec
jne
ds
jg
and
adc
imul
outsb
or
cmp
lock
push
mov
decl
mov
out
mov
subl
cmp
push
movsl
out
stc
hlt
push
add
xor
add
aad
fninit
dec
xchg
dec
mov
sub
sub
pop
addr16
jns
sbb
and
out
cmp
jl
mov
cmp
adcl
sbb
push
popf
jg
int
push
xchg
cli
pop
sub
stos
clc
mov
lock
jle
adc
aas
jne
or
jno
repz
es
out
mov
in
ljmp
or
scas
adc
in
pop
push
mov
scas
daa
testb
pop
xor
test
adc
cmp
pop
mov
jnp
dec
shl
inc
mov
outsb
out
dec
xchg
ficoml
lea
repnz
aas
xchg
xchg
es
push
or
test
push
cs
out
ret
push
dec
xlat
jb
mov
jno
aad
xchg
aaa
es
imul
mov
inc
lahf
in
jnp
js
jg
mov
jecxz
cld
scas
push
out
lret
jae
pop
mov
xchg
sub
popa
mov
cmp
popf
sbb
and
fcomp
leave
xchg
pop
add
dec
push
fwait
mov
ljmpw
icebp
in
add
out
lcall
fbstp
hlt
cmc
mov
mov
jmp
cmp
sarb
jbe
mov
xchg
fldt
shl
lock
xor
loop
lahf
push
lock
jmp
jle
stc
push
daa
adc
sbb
push
lods
xchg
sbb
add
jle
bound
aaa
test
pop
and
addr16
ud2
pop
push
int3
hlt
sbb
inc
je
push
and
lods
fsts
jge
je
ss
leave
cld
xchg
shrb
out
xor
das
push
aam
push
into
adc
movsb
xchg
scas
jne
mov
hlt
sbb
sbb
push
xchg
mov
jno
cmc
ljmp
sbbb
inc
mov
adc
out
xor
movb
jl
pop
lods
dec
pop
mov
into
scas
pop
xor
clc
ss
xchg
sahf
and
cli
add
sub
out
push
fs
or
push
push
pop
xchg
insb
sbb
pop
cltd
xor
inc
insb
rorb
adc
adc
dec
lds
in
xor
mov
mov
cld
out
iret
loope
shll
fnstenv
push
stos
in
loopne
xchg
jecxz
xor
adc
or
repz
aaa
mov
inc
mov
loope
mov
stos
jg
push
and
xchg
jns
mov
lahf
les
sbb
iret
stos
cltd
in
out
push
xchg
shrb
es
addr16
stos
mov
std
hlt
mov
sub
or
dec
sbb
std
adc
mov
mov
paddb
ja
fsubrp
insb
xor
xchg
push
mov
loop
mov
inc
xor
gs
sbb
xlat
inc
add
sbb
mov
ljmp
jle
xor
repz
cmp
fs
inc
inc
hlt
pop
rcrl
and
mov
or
repnz
cmp
lret
lock
imul
mov
sbb
je
stc
out
adc
cmp
mov
nop
jae
iret
bound
fmull
cmp
cmp
add
loop
pop
sbb
sbb
lea
pop
and
mov
outsl
outsl
cmp
xchg
xchg
jnp
out
aaa
sbbb
lret
in
cmpsb
subb
in
sbb
mov
pusha
les
mov
dec
push
in
jo
push
popa
not
dec
cmc
adc
test
fwait
jae
mov
mov
data16
lds
pusha
sarb
fstpt
and
adc
stos
or
in
mov
loopne
push
outsb
je
adc
sbb
xchg
mov
adc
push
sarb
out
repz
mov
xlat
ret
cmpsl
popf
out
mov
add
mov
and
mov
repnz
mov
lock
int3
pop
roll
icebp
std
lock
subb
or
mov
push
mov
roll
mov
sbb
mov
cmpsl
test
daa
xor
jnp
ss
stos
xchg
sub
stc
jg
test
adc
or
pop
fmull
adcb
sub
mov
fmul
mov
push
mov
ss
int
push
ss
or
imul
mov
loope
movsl
addb
cmpsb
sub
dec
mov
cmp
shl
outsl
inc
jmp
cmp
stos
jp
les
mov
adc
jns
pop
or
add
xchg
mov
cmp
lret
pop
add
lcall
dec
cmc
shll
lock
xor
int
xor
dec
lret
inc
jo
jp
push
mov
fstpl
pop
aas
cmp
xchg
jmp
gs
xlat
sbb
outsl
cmp
pop
xchg
add
cmc
mov
sarl
cli
mov
insb
es
or
lods
xchg
pop
push
sbb
imul
lods
mov
xchg
xchg
pushf
adc
and
add
ljmp
push
stos
jne
insb
pop
add
sbb
xor
into
mov
pop
pop
mull
test
pop
movsl
pop
stc
jb
gs
xchg
dec
loopne
cs
negb
push
pop
xor
sti
inc
repnz
scas
mov
gs
mov
xchg
sub
jo
mov
clc
jne
lock
test
dec
sahf
dec
inc
outsl
pop
int3
push
mov
int3
shrb
rclb
pop
call
roll
pop
ret
fdivs
adc
shlb
mov
popa
cmp
mov
aad
popa
sbb
notb
scas
insb
rcrb
dec
pop
insl
lret
pop
jbe
pop
push
fcmovu
ret
movsb
xchg
out
and
mov
outsl
inc
popf
out
outsb
push
ds
push
cli
pop
test
mov
out
xchg
adc
loopne,pt
sbb
or
leave
addr16
mov
adc
xor
push
popa
lds
pop
test
mov
push
testb
decl
hlt
lcall
out
ret
xor
lods
cmpsb
sub
pushf
mov
adc
sbb
repz
dec
jns
and
pusha
addl
cli
inc
lds
mov
or
or
jmp
and
into
pop
jle
or
jge
es
jb
cmpsl
sti
shrd
adc
int3
flds
cld
aad
daa
sub
mov
lcall
test
cmpsb
or
idivl
test
mov
sbb
mov
push
cmpsb
mov
popa
ficoml
and
test
jmp
test
inc
add
scas
pop
nop
mov
lcall
outsb
sbb
insb
cltd
xor
ljmp
ficoml
scas
sti
movsl
cmp
mov
inc
jno
adc
shlb
arpl
push
and
in
insb
test
mov
or
in
popf
lods
insb
ljmp
push
stc
cli
stos
test
mov
je
aam
push
inc
xor
and
dec
jne
cld
and
mov
mov
arpl
pop
subl
insb
inc
je
je
shrb
xchg
mull
fcomip
xor
filds
dec
cmp
pop
imul
adc
mov
or
test
inc
lods
scas
loopne
lds
test
ja
jb
and
pop
aas
mov
mov
outsb
push
pop
mov
pushf
dec
jge
sbb
lock
iret
adc
add
add
and
test
mov
push
out
xchg
cmp
mov
imul
loop
dec
mov
notl
outsl
hlt
out
inc
loopne
aad
and
cmc
inc
dec
or
repnz
sub
push
mov
jge
add
sub
js
rcll
outsb
add
mov
push
insl
cmpsl
and
dec
inc
adc
shl
daa
lds
xchg
lock
cmp
pushf
pop
popa
insl
mov
xchg
jnp
jae
push
pop
int
mov
icebp
in
cmpsl
mov
loope
in
jnp
bound
cld
roll
int3
push
outsl
mov
andb
xchg
adc
std
xor
adc
pop
divl
mov
mov
dec
cwtl
sub
and
adc
xchg
inc
or
adc
jne
dec
mov
ret
in
cmc
ds
rorb
mov
add
cs
and
scas
mov
jno
mov
xchg
inc
xlat
shlb
jb
stos
imul
xchg
sbb
addr16
fmul
push
stos
inc
stc
sbb
js
or
inc
ret
cli
roll
jp
lret
cmp
xor
testl
cli
das
lcall
clc
popf
push
fbld
adc
repz
xlat
cmp
pop
jno
jl
leave
lcall
enter
adc
negb
mov
jno
fwait
shlb
sub
and
test
or
lret
pop
sahf
les
mov
mov
shll
movsb
jb
and
fstpl
dec
push
test
jns
mov
test
lret
adc
cmp
add
call
jl
ds
and
incl
les
cli
and
pop
mov
push
jge
and
std
cld
arpl
sbb
push
inc
scas
cli
push
jl
sbb
shr
or
imul
fimull
imul
mov
lret
add
dec
mov
xor
jae
loope
test
mov
stc
mov
or
xor
adc
in
dec
jl
es
inc
mov
add
jmp
or
rclb
nop
arpl
push
mov
xchg
push
lods
scas
sub
xor
fwait
add
xlat
inc
rclb
movsb
push
cmp
adc
int
jo
idivb
cmpsl
cltd
xorl
push
imul
mov
push
xchg
pop
data16
and
roll
data16
ja
repz
ret
out
xor
inc
sub
shlb
in
add
sti
or
and
inc
icebp
ret
lds
mov
outsl
pop
jge
arpl
push
out
push
cmpsb
mov
or
cmp
subl
stc
xchg
jne
mov
mov
cld
xchg
jl
jo
mov
mov
push
rol
xchg
insl
notl
nop
ja
jle
mov
cmp
or
mov
aad
decl
cwtl
shrb
fistl
std
push
test
push
cld
fildll
and
pushf
cmpsl
sbb
psubusb
mov
lcall
icebp
rcrl
push
inc
pop
cmp
cmc
in
pushf
sarl
lret
and
jae
mulb
cmp
jne
rcll
push
jae
sbb
cmpsl
loope
xor
push
and
jbe
sahf
add
ljmp
sub
popa
ror
push
lahf
and
shlb
les
cld
or
faddp
push
fnsave
xchg
jp
jp
push
ljmp
mov
ret
fcomp
jecxz
and
jbe
mov
cmp
push
jecxz
add
fsqrt
push
xchg
bound
or
cmp
mov
sbb
mov
and
or
mov
add
lret
inc
add
insb
sti
cwtl
jmp
adc
add
sbb
pop
roll
xor
sbb
xchg
mov
mov
rcrb
lret
adc
and
mov
loope
push
in
sar
pop
repnz
sub
lahf
lret
int
jbe
shlb
loopne
movlps
into
mov
addl
test
inc
sbb
test
inc
mov
xor
sub
and
xor
xchg
mov
notb
mov
rorl
push
in
pop
jmp
adc
bound
clc
icebp
roll
out
ljmp
loop
rcrb
cmpsl
insl
and
xor
jno
and
jle
and
mov
fcom
test
xor
fbstp
push
mov
mov
inc
sub
fnstsw
jno
cmc
or
mov
push
pop
cmp
js
shr
mov
out
dec
inc
push
jmp
js
frstor
inc
outsl
add
cmp
mov
cmp
mov
mov
test
cmp
iret
add
shll
fwait
cld
mov
stc
pop
sbb
sbb
les
sbb
jnp
cwtl
ret
mov
sub
ds
cld
and
pop
imul
insb
int
xor
or
pop
mov
leave
sbb
pop
push
xor
neg
negb
add
stc
jg
shlb
test
dec
movsb
outsl
mov
lret
movsb
lret
jmp
les
fdivrl
in
jge
xor
mov
xchg
adc
dec
lret
jge
and
cmpsl
arpl
enter
mov
jp
push
lods
shlb
daa
inc
sbb
or
xchg
pop
and
cli
and
push
add
lret
dec
lds
jecxz
pop
or
fwait
jae
lods
pop
pop
cmp
sbb
int
push
mov
xorb
sti
out
cmp
fimull
dec
jecxz
into
inc
inc
pop
loope
hlt
mov
inc
push
dec
push
sti
jo
sbb
pop
jns
testl
ljmp
cmc
ljmp
sbb
bound
movsl
jbe
cmpsb
lret
jmp
inc
sbb
in
push
xchg
aaa
bound
inc
xorl
mov
shr
out
mov
test
cmp
fistpll
push
mov
adc
jnp
frstor
xlat
mov
xor
sbb
adc
inc
or
or
cmp
enter
mov
xchg
shrl
or
and
jno
adc
out
mov
adc
rcr
lret
lcall
subb
pop
add
enter
fidivs
lret
cld
lods
fs
ljmp
mov
xchg
xchg
pop
test
add
test
push
or
aaa
hlt
imul
or
xor
aad
push
ja
out
ret
pop
imul
xor
xor
mov
inc
test
out
int
mov
leave
pusha
cmp
mov
mov
dec
pop
and
or
lcall
std
sbb
scas
jmp
aaa
dec
mov
frstor
push
lea
lods
xchg
fsubs
mov
mov
popf
cmp
popf
push
test
xchg
nop
int
push
clc
xlat
adc
and
sbb
mov
pop
rcl
pop
cmp
pushf
mov
cmpsb
jmp
setns
cmp
lret
test
sub
fimull
xchg
mov
push
outsb
je
push
out
push
mov
in
adc
shr
cwtl
pop
mov
mov
xor
pushf
mov
fidivl
outsb
push
push
sbb
add
jo
add
inc
cltd
stc
mov
push
push
mov
adc
test
push
xchg
sbb
lds
inc
fistps
push
ds
mov
out
mov
add
push
or
mov
adc
dec
inc
insb
cmp
cltd
adc
lods
cmc
pop
fwait
pop
outsl
cmp
inc
inc
cwtl
and
repz
mov
adc
mov
xchg
inc
mov
cmpsl
in
add
test
shrb
leave
stos
and
popf
scas
rclb
lcall
and
call
mov
dec
push
fstpt
pop
pop
call
dec
sbb
shlb
scas
pusha
stc
adc
jle
lea
cmp
loope
push
sti
adc
mov
shll
inc
and
loopne
mov
sbb
mov
data16
sahf
jl
xor
mov
dec
aam
loope
scas
and
sbb
inc
stos
mov
mov
add
cmpsl
gs
fxch
inc
xchg
add
pop
mov
pushf
cmpb
popa
pop
sbb
push
cli
jno
les
mov
fwait
mov
fcompl
insl
lods
test
fadds
icebp
xor
mov
lods
std
bnd
stc
mov
out
cs
push
or
sbb
jecxz
mov
jne
cmpsb
mov
lret
scas
push
pusha
xchg
aad
jo
xor
lods
xchg
dec
add
push
ja
cmc
scas
add
cmp
mov
mov
inc
sbb
cmp
sti
stos
je
jbe
jno
in
xchg
sbb
in
shl
sub
test
fwait
mov
mov
adc
sub
ffreep
sbb
add
adc
mov
fwait
mov
adc
sarl
ja
loopne
cltd
jecxz
cli
mov
sbb
mov
sahf
dec
subb
cs
cmp
lds
or
xor
sbb
xor
cltd
and
out
mov
jecxz
mov
movsl
jnp
or
xor
cltd
adc
cld
mov
out
subb
pop
call
or
cmp
push
popa
scas
hlt
jmp
pop
sub
add
jns
and
scas
aam
lahf
dec
mov
cld
lods
jp
jnp
aas
stos
loopne
mov
jne
push
adc
mov
or
rolb
jge
cld
mov
ja
pop
gs
arpl
xchg
mov
inc
mov
outsl
ss
ja
insb
mov
sub
pop
hlt
add
inc
jge
cmp
push
jmp
adc
dec
push
dec
xor
and
fs
aad
out
adc
cmp
inc
dec
ss
sub
leave
cmc
mov
mov
cmpsb
push
lea
pop
test
push
jae
or
rol
cmp
cwtl
rorb
jmp
dec
jno
sub
sbb
xor
je
xchg
mov
lods
mov
cltd
push
ljmp
pop
insl
pop
sbb
stos
cmp
xchg
xchg
lret
hlt
pop
addr16
cli
nop
dec
movsb
shrb
cli
addr16
push
test
and
aaa
icebp
out
pop
sub
sbb
das
xor
ret
add
cmp
out
push
or
fsubrl
pop
dec
mov
cmp
adc
mov
jecxz
pushf
rcll
mov
mov
cwtl
pop
cmp
inc
test
fistps
loope
push
xchg
mov
mov
jno
adc
sti
nop
into
jb
and
mov
xchg
mov
push
mov
push
xor
shl
mov
pop
push
mov
or
and
jle
aad
cwtl
pop
aam
popa
push
dec
insb
insb
dec
je
add
and
es
divb
jecxz
inc
mov
cmp
xor
xchg
iret
loop
pop
int
fxch
cmp
pushl
pop
mov
ret
xor
movb
int
mov
dec
xchg
or
int
repnz
sbb
sti
cld
ret
pop
xchg
shrb
cmc
jne
movsl
hlt
loop
lret
add
mov
arpl
jp
cmp
out
inc
mov
out
jmp
xor
xor
ds
and
mov
fists
fdivp
dec
lret
cmp
lea
data16
mov
and
rolb
push
leave
mov
jbe
outsl
mulb
mov
mov
mov
dec
lahf
insl
out
repz
repnz
movsb
out
stos
mov
lret
mov
mov
and
stc
movsl
adc
int
outsb
xor
mov
xchg
fmull
pushf
or
iret
mov
imul
outsl
movsb
test
mov
xchg
cmc
pop
inc
jp
ret
cmpsb
divl
dec
xor
clc
out
mov
aas
adc
mov
loope
jns
adc
push
lea
jnp
sub
push
fwait
mov
lahf
and
sbb
js
rorl
rolb
fdivrl
leave
or
mov
aas
aam
mov
rcrl
jmp
mov
xor
xlat
sbb
fwait
adc
adcb
cmpsl
out
mov
jg
insl
das
imul
mov
pop
mov
test
test
test
in
cmp
and
xchg
jg
and
mov
outsl
enter
sbb
enter
adc
arpl
ret
xchg
mov
lret
sub
out
adc
fdivs
jmp
mov
jo
fwait
bound
mov
fistpl
pop
inc
fwait
add
mov
mov
push
add
test
push
mov
inc
xorb
movsb
scas
sbb
add
and
addr16
push
cs
ficompl
xchg
mov
lock
cltd
push
int3
aas
push
int3
scas
leave
or
pop
into
repnz
test
aaa
mov
push
jmp
cmp
jmp
js
and
es
aad
cmc
mov
mov
mov
outsl
jns
xchg
pop
aas
xchg
or
enter
int3
pop
inc
mov
aas
test
jmp
stc
sti
stos
and
sbb
fsubrs
rolb
or
xor
and
and
fstpl
test
mov
or
pop
push
and
pop
xchg
dec
outsl
and
pop
call
sahf
add
jno
les
ds
sub
insl
xor
sbb
jecxz
jl
xor
sub
in
adc
push
jno
btc
test
in
data16
repnz
lock
lahf
loope
pop
mov
cli
pop
sub
or
and
in
mov
push
push
sbb
cmp
je
dec
mov
pop
out
ss
dec
sub
clc
xor
shll
mov
orl
add
pop
inc
std
clc
icebp
cmp
pop
mov
xchg
popa
lahf
and
inc
mov
mov
mov
insb
lea
add
test
stc
pop
pop
mov
loopne
and
inc
mov
pop
sbb
mov
mov
xorb
in
mov
cmp
enter
mov
pop
xchg
pop
inc
pop
outsl
divl
inc
mov
mov
pop
add
out
mov
jmp
pop
lea
stos
test
sub
cmp
and
dec
pop
rcl
xchg
out
std
inc
in
jge
adc
sti
fldenv
cld
addr16
jno
lret
clc
xor
lods
mov
push
mov
dec
sub
cwtl
jbe
jne
push
add
lods
add
push
pop
bound
push
add
cmp
test
into
les
or
fisubrs
and
pop
inc
hlt
iret
push
sub
addr16
pop
inc
fdivl
and
adc
cmp
outsl
std
xchg
xchg
adc
dec
and
pop
push
bound
push
sbb
add
and
out
mov
lea
mov
push
fsubp
jl
jae
popw
sub
mov
cli
add
call
pop
aas
sbb
push
test
loopne
push
cmp
dec
xor
jmp
xor
add
mov
xlat
pop
mov
gs
cmp
gs
cmp
movsl
mov
cmc
mov
xchg
stos
stos
lea
imul
add
pop
mov
popf
xchg
inc
xchg
fnsave
inc
xlat
jecxz
out
dec
aas
out
mov
aas
jp
test
ret
dec
push
sbb
mov
mov
push
in
cmp
ret
sarl
pop
fnstcw
ss
push
int
sbb
jmp
push
or
push
inc
movsb
arpl
repnz
and
xchg
lahf
pop
les
cli
shlb
push
cmpsb
ss
fidivs
arpl
cmp
maskmovq
pushf
mov
mov
fmull
push
push
xlat
in
adc
push
or
aam
xchg
shrl
outsl
scas
sbbb
fbstp
push
movsb
cmpsb
movsb
scas
popa
sahf
adc
adcb
loopne
popf
xor
adc
lock
stos
sub
rcrb
mull
or
xor
mov
fbld
pop
clc
stc
cmpsl
in
popa
out
int3
mov
mov
cmc
xor
cs
adc
rcrl
mov
inc
xchg
movsb
xchg
ss
pop
mov
add
or
and
cltd
pop
pop
or
or
cmp
mov
test
mov
repz
add
jb
push
push
into
push
xchg
add
cmp
mov
stos
xchg
dec
xchg
into
sbb
inc
adc
ret
daa
clc
test
add
mov
shrl
adc
test
mov
loopne
push
imul
clc
mov
inc
add
scas
fsubrs
mov
test
and
or
or
mov
rcll
nop
pop
adc
inc
xlat
insl
andl
fisttpll
mov
cmc
xchg
mov
cmpsl
cmp
fistl
jg
lahf
sub
pusha
adc
hlt
jno
pop
adc
cmpsb
and
jmp
xchg
aam
jo
subl
mov
pop
add
stos
adc
sub
test
les
xchg
decb
inc
mov
or
ret
push
je
jb
push
mov
scas
add
jecxz
sti
outsl
jle
outsl
add
js
xor
int
adc
in
mov
mov
cmp
dec
pop
pop
lret
shlb
sub
enter
call
pop
jmp
and
inc
testl
lcall
push
movsl
cmpps
ret
test
pop
pop
dec
jae
pushf
cmpsl
push
mov
sub
xlat
pop
sub
stos
loop
sti
test
inc
fwait
mov
ljmp
cmp
outsb
dec
mov
sbb
add
in
jmp
outsb
cmp
into
andl
insl
and
pop
lea
sbb
cmp
lds
cmovs
mov
fadds
jg
loopne
sbb
jecxz
and
and
lret
or
dec
inc
fucompp
test
or
les
sbb
mov
dec
mov
jns
mov
push
mov
aaa
xchg
outsb
sahf
dec
lahf
outsb
int3
sbb
inc
subl
sub
insb
push
xor
adc
push
adc
int
or
test
mov
xchg
adc
inc
in
nop
jo
aam
in
adc
ds
sub
or
mov
clc
pop
lock
jp
mov
push
in
mov
add
fwait
xor
in
xchg
sub
pop
pmuludq
fcoml
das
lea
pop
mov
add
out
push
sbb
roll
pop
sarl
and
mov
mov
sbb
fmulp
inc
jge
and
push
mov
cmp
stos
xchg
add
orl
mov
lods
ret
repnz
xchg
mov
push
jmp
popa
into
fmul
aas
into
adc
inc
pop
sub
fsub
jg
wbinvd
ret
inc
dec
mov
cs
test
pop
ret
jns
or
and
std
loop
ret
xor
xchg
lret
aad
inc
jbe
jne
movsb
pop
cmpsb
jb
pop
inc
xchg
addr16
pop
out
rcrb
jb
hlt
shlb
test
push
adc
sub
ss
cld
sub
cs
jge
xor
jbe
pop
int
popa
xchg
mov
pop
xor
hlt
jb
xchg
imull
adc
insl
test
leave
push
push
dec
or
std
mov
push
add
mov
sub
xor
cmpb
mov
jno
cs
int
repz
aad
sub
jl
fdivs
imul
add
sbb
jecxz
mov
inc
mov
pusha
pop
fldcw
cmp
dec
sub
xchg
ljmp
push
iret
inc
imul
sahf
add
and
rolb
shlb
mov
hlt
rcr
lock
rorb
push
movsl
or
sarl
push
sub
push
aaa
inc
in
sub
out
add
cltd
testl
inc
push
icebp
cmpsl
in
xor
jecxz
dec
adc
mov
stos
pushf
lret
js
aam
stos
jle
aas
cmpsl
mov
es
addr16
iret
adc
xchg
lock
cmc
movsb
pop
adc
shlb
mov
mov
xchg
sbb
les
xchg
incl
rorl
jne
stos
out
inc
mov
bswap
in
shll
incl
daa
jb
adc
inc
bound
repz
cmpsb
xor
pushf
xchg
aad
xor
and
jle
sub
call
lods
or
jmp
xchg
jbe
xlat
xor
mov
nop
push
lods
jbe
dec
jmp
sti
or
testl
repnz
cmpsb
or
mov
je
and
cld
fidivrs
leave
orb
sbb
cmp
mov
push
lock
das
jge
fisubrs
inc
cwtl
pop
inc
mov
imul
mov
push
data16
jg
iret
adc
pop
sarl
das
bound
pop
outsl
int
leave
adc
push
fsubs
inc
adc
lock
push
int
std
hlt
mov
mov
ja
out
test
ficomps
jp
fucomp
lods
sub
mov
inc
test
ret
adc
mov
push
ja
lods
lret
pop
cld
repnz
movsb
test
or
cwtl
sub
mov
cwtl
flds
jne
lock
jle
das
lea
scas
sarb
fwait
pop
xchg
hlt
stos
xchg
mov
push
xor
idivb
inc
push
sub
f2xm1
sub
insl
and
enter
adc
jb
mov
mov
outsl
loop
mov
das
testb
inc
pushf
lods
out
jne
lret
aad
lahf
fistl
test
xor
sub
mov
mov
mov
pop
test
aad
adc
or
icebp
dec
mov
sub
xchg
into
dec
xchg
lcall
and
fcomp
or
out
daa
lahf
add
imull
fcomps
pop
sbb
idiv
pop
mov
cld
dec
push
jmp
xchg
test
dec
sahf
mov
jmp
jecxz
push
sar
push
dec
or
jl
imul
pop
sti
cwtl
pop
dec
inc
push
in
cmp
data16
shlb
inc
push
lret
pop
jl
push
jl
xor
stc
adc
es
int
jo
or
inc
sub
mov
es
push
divb
pcmpgtb
jae
dec
int
aad
rclb
adc
xor
mov
addr16
cmp
jbe
pop
or
inc
sub
es
xchg
pop
adc
andb
lods
test
and
je
mov
pusha
subb
test
sbb
mov
mov
hlt
inc
rolb
cltd
adc
rorb
aam
loope
xchg
jo
popf
mov
dec
xchg
fdivr
mov
es
lret
add
data16
dec
pop
imul
jne
cmp
pop
sbb
mov
iret
dec
ret
in
hlt
icebp
aas
cmc
add
cld
subl
scas
ljmp
lds
je
xchg
mov
ljmp
fcmovbe
dec
out
adc
cmp
mov
adc
cmc
or
pop
add
mov
add
jmp
mov
lret
dec
cmp
stos
jp
fwait
add
jns
and
jae
stos
xor
xor
and
dec
push
pop
inc
jbe
sbb
pop
sti
push
lahf
sbb
call
jns
in
push
andb
int3
add
dec
add
in
pushl
add
dec
aad
cmp
fdivs
dec
dec
sbb
mov
mov
push
jns
mov
out
notl
mov
insl
mov
pop
cmp
movsl
popa
stos
or
mov
xchg
mov
mov
adc
jbe
xchg
sbb
imul
lock
pop
push
mov
test
nop
sbb
push
scas
or
pop
and
pop
mov
push
xchg
loopne
mov
in
mov
std
ror
in
xchg
mov
fstpl
cld
dec
dec
inc
and
inc
jb
sbb
jnp
dec
arpl
or
cmp
jbe
lahf
jno
mov
or
mov
jbe
out
popa
mov
test
scas
in
ljmp
popa
dec
pop
enter
or
lahf
adc
loop
mov
das
fcomp
jecxz
sub
xor
outsl
sbb
or
lock
or
imul
inc
xor
and
add
ljmp
lea
lea
mov
insl
mov
mov
mov
ljmp
leave
enter
push
in
mov
mov
jmp
xor
push
lds
orb
mov
jmp
xor
aas
cmpsb
imul
aam
iret
inc
mov
dec
arpl
push
or
cmp
rorb
fucom
hlt
lds
call
lods
push
or
pop
fsts
mov
xor
pushl
xor
addr16
cmpsb
bound
xchg
test
ret
push
xor
ljmp
jo
insl
loopne
incl
jns
mov
loop
and
and
int3
movsl
popa
sbb
in
sti
push
pop
xchg
add
cmp
pop
jo
clc
dec
dec
and
fcmovb
jmp
in
adc
out
lret
movsl
std
push
and
mov
fwait
inc
les
xchg
pushf
adc
xchg
add
sarl
pushf
fidivl
xor
jno
mov
or
pushf
aad
jmp
test
jb
push
mov
sub
sarl
popa
fimuls
pop
stc
push
rolb
or
scas
pop
mov
pop
xchg
int3
xchg
jmp
mov
mov
add
shr
popa
dec
jmp
je
fstps
sbb
pushf
add
cwtl
push
sub
movsb
leave
jmp
testl
repz
fdivl
inc
inc
adc
aam
ljmp
frstor
push
repnz
pop
fisttpll
dec
xchg
mov
and
fildl
ljmp
lret
push
xchg
jae
inc
sbb
hlt
data16
cmpsb
test
fstpt
popa
outsl
inc
inc
movsl
dec
add
jmp
push
lret
call
test
jmp
pop
mov
pop
int
pop
sub
stc
aaa
xcrypt-ecb
cmpsl
int
dec
sub
scas
push
stos
call
rclb
dec
loop
dec
sbb
xchg
dec
sub
push
jg
pop
aad
or
cld
mov
xor
cmp
pop
subb
rol
dec
xorb
fisubs
jp
iret
jmp
mov
sbb
mov
cli
lcall
test
or
xor
mov
popf
aam
inc
testb
mov
ret
sti
xchg
ja
adc
repz
push
push
sbb
inc
jnp
pushf
cmpsl
sub
add
push
inc
je
fidivrl
pop
xchg
test
jge
fwait
dec
cltd
cmp
iret
jne
push
insl
int
sub
popa
cmp
sub
ss
cs
rolb
fucom
and
rorb
jge
ds
stos
cmp
clc
push
mov
xchg
ja
insb
loopne
aaa
lret
andl
loopne
cmp
int3
mov
dec
or
loopne
inc
cld
pushf
into
mov
ja
inc
shrb
xlat
jp
sub
hlt
add
daa
and
sub
cmc
cmp
imul
mov
cmp
inc
jp
push
sarb
cmp
imul
in
xchg
sub
jmp
test
jmp
or
xchg
repz
jmp
mov
sbb
cmp
cmp
jns
cmpsb
bound
sbb
ja
out
pushf
mov
mov
insb
addr16
hlt
mov
and
xchg
nop
enter
sub
inc
cwtl
push
out
sbb
dec
cmp
lcall
hlt
or
js
lcall
push
push
jns
push
pop
repz
add
push
jnp
rolb
cmp
pop
mov
insl
pop
stos
mov
pop
xchg
ja
fs
and
fdivrs
xchg
addr16
xlat
cmpsl
in
hlt
pusha
mov
ss
sti
pop
jmp
push
pop
sbbl
jo
mov
pop
jbe
sbb
add
mov
push
or
loope
dec
in
aas
jge
jae
pop
sbb
hlt
shlb
and
or
mov
insb
jbe
push
jle
repnz
enter
or
mov
loop
add
push
jle
add
dec
xor
jne
adc
push
mov
outsl
aad
jns
dec
and
or
insl
cmpl
mov
jbe
cs
orl
aaa
cmp
lods
cs
cmp
pop
cmp
arpl
cwtl
icebp
lock
pop
js
ja
ds
inc
scas
xchg
push
dec
fwait
add
scas
ss
or
test
adc
loope
dec
add
mov
mov
cmpsl
repz
mov
jbe
and
popf
mov
pop
jg
cmp
add
mov
ljmp
cwtl
scas
jno
mov
inc
jo,pt
push
loop
iret
pop
das
or
sahf
sub
out
pusha
and
push
xor
xor
push
xlat
pop
fnstenv
xchg
adc
testb
dec
adc
push
xchg
cmp
push
test
testl
test
xchg
pusha
lds
or
in
dec
in
add
inc
adc
cmp
mov
jnp
cmpsb
sbb
sbb
call
adc
xchg
filds
xor
std
out
movsb
xchg
dec
cmp
push
inc
fisttpl
fmul
mov
repnz
cmpsl
sub
int
xor
daa
data16
test
in
xchg
mov
in
fisubrs
jmp
dec
clc
jge
std
insb
and
sub
dec
ffree
dec
cmpsb
mov
shl
adc
int
sbb
lcall
mov
sti
xchg
dec
push
jbe
repz
xchg
inc
in
pop
fdivs
sub
pop
iret
sub
cli
das
xor
dec
loop
sbb
xor
loopne
movl
mov
push
xor
fcoml
lock
jno
cwtl
and
insl
roll
lds
stc
pop
xchg
mov
dec
lds
test
in
sub
int3
rorb
ljmp
and
div
sub
pop
jns
add
loopne
sbb
or
push
nop
or
ret
adc
in
js
idivl
sbb
scas
push
lcall
or
imul
ja
subb
jns
rcll
mov
cld
jecxz
pop
lcall
rcrb
aad
mov
in
inc
cmp
cmp
lds
enter
lcall
lods
dec
cmc
pop
ret
sbb
sub
inc
fsubrl
xchg
test
adc
rcrb
add
clc
shrl
adc
ret
or
out
fisttpl
test
jns
aam
and
mov
je
pop
leave
push
hlt
mov
xor
cmp
imul
sub
inc
mov
mov
push
insl
mov
rorl
push
jne
sub
aad
fists
negb
leave
mov
negb
rol
jp
mov
je
insb
lds
xchg
or
gs
sbb
jns
shlb
mov
or
mov
pop
aam
cmpsl
jl
add
mov
fists
mov
mov
lret
xchg
mov
lock
jmp
out
cmc
int3
pop
cmp
sti
jbe
fiadds
fidivl
jno
mov
dec
rcl
mov
ret
imul
push
mov
js
and
inc
cmp
lds
popa
lods
sub
cmp
or
insb
ss
mov
and
lock
aaa
cwtl
subl
adc
mov
mov
mov
push
mov
xor
iret
stos
movsb
push
mov
add
inc
inc
cltd
ljmp
jg
nop
les
test
jnp
mov
cmp
add
popf
les
inc
test
insb
dec
movsl
mov
push
sti
ss
xchg
xchg
js
xchg
dec
inc
aam
jp
test
add
or
xchg
and
out
xlat
bnd
dec
sti
scas
pop
roll
xchg
mov
cmp
mov
and
sbb
cmp
push
in
aad
or
popa
dec
push
jae
or
sub
sbb
jne
fwait
mov
les
cld
fcmovne
mov
aam
fwait
pop
std
sub
pop
test
sahf
fucomp
sbb
stc
pop
ret
dec
mov
imul
lahf
mov
icebp
movsb
adc
adc
inc
push
faddl
fimull
adc
sbb
push
xchg
aaa
sbb
dec
stos
or
lds
aaa
test
push
fcompl
jns
or
push
stos
xchg
sbb
subl
mov
mov
push
lret
fdivl
or
ljmp
stc
xor
add
mov
pop
and
xlat
jmp
lods
aas
arpl
inc
dec
stc
inc
inc
and
adc
xchg
push
inc
addr16
dec
push
paddb
mov
inc
imul
push
dec
fs
test
shll
adc
jle
sub
fcoml
jmp
sub
mov
insb
push
lret
les
add
jnp
cmpsl
aad
jo
pop
repz
insl
add
in
cltd
je
xchg
lcall
mov
loopne
mov
out
cmp
out
jae
iret
lds
iret
mov
xchg
push
add
les
insb
mov
jmp
cli
popf
les
push
enter
add
mov
hlt
dec
mov
mov
out
orb
fdivs
fs
jno,pt
cli
mov
outsl
cmc
rol
loop
insb
test
sbb
repz
sti
in
out
mov
mov
jb
rcrb
adc
mov
subl
out
aas
into
cmp
lret
and
and
and
mov
clc
jle
ja
movsb
xchg
jg
ds
jp
into
xor
mov
leave
sbb
rorl
add
sti
data16
mov
andb
xchg
add
or
insl
or
lahf
mov
lds
pop
dec
inc
fnsave
or
stc
loopne
add
pop
cmp
outsb
lock
pop
mov
mov
add
ja
push
mov
mov
push
fdivs
jo
sub
incl
mov
lea
xchg
movsb
icebp
sub
addr16
loop
jbe
arpl
loopne
jecxz
filds
mov
dec
jmp
sub
popf
ss
loopne
mov
xchg
pusha
repz
in
icebp
test
js
mov
ja
dec
sub
cld
inc
and
jne
js
jmp
nop
fcmove
not
iret
insb
pop
sahf
dec
fimuls
lahf
mov
lret
xchg
jbe
adc
leave
cld
push
adc
jbe
xchg
adc
pop
es
jns
les
xor
pop
rcr
and
test
cmp
js
repz
or
sbb
xchg
adc
sbb
pusha
sub
dec
push
add
xor
ret
cmpl
pop
or
sbb
and
fs
negl
mov
call
and
test
hlt
pop
jl
jg
jno
jb
outsl
jae
sti
xchg
mov
mov
and
jne
cmp
aas
fidivrl
out
mov
push
sbb
or
in
rorl
push
in
loope
sub
push
aaa
es
adc
mov
and
and
push
cltd
cmp
jae
test
fnstcw
in
fcomps
loope
test
stos
iret
pop
xor
and
andb
call
sti
mov
dec
arpl
pusha
push
pop
mov
out
push
and
shrl
fmull
push
sub
xor
inc
insl
pop
cmpb
div
cmp
pop
mov
ret
aaa
pop
idiv
imul
imul
cs
test
or
xor
adc
cmpsb
out
subl
aam
nop
xchg
push
mov
push
sbb
stos
mov
push
xorl
xchg
test
adc
mov
scas
int3
insl
stos
cs
insb
or
movsl
std
stc
call
int3
jbe
jnp
or
pop
push
pop
cmp
mov
cmp
and
lahf
inc
insb
inc
mov
pop
sub
jp
aam
sbb
push
inc
cltd
movsb
mov
inc
movsl
jmp
add
mov
pushf
push
ret
add
pushf
es
pop
icebp
or
mov
sub
repnz
push
mov
inc
insl
dec
out
inc
out
jae
fbld
dec
cli
cmpl
imul
cwtl
fidivs
popa
jnp
or
fmul
mov
repz
or
and
mov
or
xor
push
sahf
jne
sbb
std
mov
repnz
shll
leave
or
cltd
fildll
int
xorl
push
fs
insb
into
mov
adc
into
gs
xchg
flds
insb
push
dec
scas
ret
test
std
mov
inc
jnp
mov
stos
cmc
mov
fdivl
or
cmp
in
mov
repnz
ret
out
push
inc
dec
cmp
xchg
sbb
fmull
testl
mov
movsl
mov
inc
test
add
xor
fwait
lock
cmp
dec
push
add
pop
push
mov
fmull
pop
jecxz
push
out
or
into
or
dec
xchg
imul
and
pop
mov
js
in
sahf
mov
or
mov
filds
loopne
and
push
adc
push
rcrl
mov
seto
outsb
in
loope
loope
sbb
out
je
mov
int
pop
into
push
mov
pop
add
gs
psllq
cli
sbb
fcmovb
pop
ja
push
pop
dec
pop
xchg
call
mov
aam
imulb
ret
bound
pushf
sub
jnp
and
sbbb
scas
jbe
clc
adc
out
pop
jle
inc
into
xor
and
mov
jne
lods
dec
pop
cmp
stos
jmp
mov
hlt
out
rol
sub
movsl
jbe
sub
mov
stos
sub
lret
sbb
enter
icebp
insb
lret
xor
jmp
cmp
add
cli
mov
int3
fmull
fucom
sbb
sbb
inc
lea
andb
mov
xchg
mov
push
test
popa
adc
push
inc
out
sbb
jl
mov
add
in
popa
xor
jnp
dec
cmp
cmp
push
aam
test
push
add
into
inc
shll
add
sahf
xchg
xchg
push
repnz
data16
adc
in
test
inc
outsl
hlt
pop
mov
call
push
cmp
repz
sarb
mov
ret
sbbl
jne
fs
mov
sbb
pop
and
insb
stos
lds
mov
or
sbb
mov
push
inc
lret
data16
mov
jmp
imul
nop
inc
push
cli
and
mov
test
ljmp
lods
adc
out
loopne
cmp
movsl
cld
cwtl
pop
or
or
and
outsl
lods
insl
insb
mov
push
and
mov
std
xchg
in
dec
xlat
loop
lods
int3
out
in
mov
out
out
mov
jnp
pop
adc
cmp
dec
pop
icebp
insb
sbb
cmpsl
popf
cmp
movsl
inc
addr16
addr16
cmp
pop
sub
mov
jg
push
and
xor
lcall
test
xor
fmul
xor
loop
popf
ds
imul
or
adc
mov
or
dec
aam
jle
mov
decl
jns
dec
das
lea
add
lock
push
add
mov
aas
cmp
sbb
jge
lea
and
cmp
pop
icebp
repnz
push
rcrl
dec
pop
cli
xchg
hlt
gs
push
pop
push
cltd
rorl
pop
xchg
xor
loop
cwtl
jp
sub
mov
mov
stos
pop
or
xor
push
leave
es
fsubrp
ljmp
adcb
cltd
outsl
sub
in
out
add
jge
xchg
pop
pop
imul
loop
push
or
cmpsl
mov
cmp
or
dec
or
lret
std
xor
jl
pop
jge
notl
or
sbb
mov
stos
pop
out
push
sbb
arpl
inc
xor
pop
mov
jle
ret
cmpsl
xor
mov
fbld
dec
aaa
ljmp
iret
cmp
call
jno
pop
xchg
mov
movsb
xchg
pushf
jno
out
outsb
cmp
sbb
cltd
enter
arpl
sub
sub
test
sbb
shll
test
je
aam
mov
mov
cs
or
lods
push
cltd
lds
aam
or
pop
outsl
cli
mov
movsl
pop
pop
mov
xchg
leave
jnp
repz
fimull
mov
in
test
mov
sbb
fisubrs
mov
xchg
fisubrs
rcr
push
or
mov
movsb
xor
or
fistl
in
loope
cli
sub
lock
push
sahf
sub
movsl
cmp
push
mov
clc
and
sub
scas
outsb
mov
das
sbb
lret
add
jmp
lds
dec
loope
repz
rcr
xchg
lcall
ss
int
add
xchg
sbb
sarb
jg
orl
push
jno
xchg
sbb
mov
test
xor
pcmpgtd
inc
xor
mov
sub
inc
fldt
mov
pop
sti
aad
add
xchg
ret
icebp
and
jl
lods
cmp
aam
cld
or
pop
decl
mov
arpl
jl
and
mov
cli
dec
ljmp
xchg
gs
movsb
clc
push
jmp
xor
sub
rcll
jnp
sub
adc
xchg
add
out
fcmovnb
icebp
or
cmpsl
adc
stc
cmp
push
inc
push
mov
in
or
out
fdiv
xor
dec
xor
addl
push
adc
insl
or
dec
jne
sbb
mov
fstp
push
stc
fwait
mov
sarb
bnd
mov
dec
in
das
pop
in
jae
popa
or
lahf
repnz
push
bound
jle
test
outsl
push
mov
mov
arpl
mov
sub
fsts
cltd
cmpsl
inc
mov
outsl
sub
icebp
ret
sti
nop
out
push
ljmp
enter
xchg
lds
lock
jle
ficompl
sub
lcall
mov
jle
mov
jb
rclb
imul
xor
test
hlt
adc
inc
sub
and
cmp
or
dec
mov
rcrb
fcmovne
sahf
inc
jp
push
add
cmp
add
insl
xchg
imul
addb
adc
mov
call
arpl
pop
mov
enter
sub
cmp
inc
or
add
out
fstpl
inc
sub
shll
outsl
lods
sahf
nop
mov
jmp
inc
push
aam
test
cmp
shl
dec
inc
adc
bound
dec
mov
dec
push
mov
and
js
das
lock
out
lods
outsb
aas
mov
andb
cld
cmpb
cld
cmp
and
sub
nop
sarl
or
cmp
icebp
jmp
dec
mov
xor
mov
cmpsl
gs
lret
dec
ret
hlt
mov
ds
add
loopne
outsl
dec
push
in
repz
sub
insl
aam
dec
mov
fidivl
adc
loop
mov
repnz
lret
pop
pop
add
or
sub
sbb
loopne
add
shrb
dec
decl
les
push
sti
in
into
inc
and
pop
xor
pusha
or
mov
mov
push
ret
sub
int3
shrl
inc
int3
dec
cmp
sbb
jge
aas
in
dec
lods
and
push
push
inc
imul
out
sbb
sub
adc
pop
cmpsb
xchg
imul
adc
inc
jnp
mov
mov
dec
int
mov
and
icebp
xor
xor
and
sbb
sahf
std
jl
ja
xchg
into
inc
dec
pop
xchg
popf
les
mov
inc
mov
xor
jecxz
pop
ret
xor
or
inc
push
and
out
inc
dec
addr16
sub
inc
or
pmuludq
mov
mov
lcallw
clc
xor
xorb
roll
cld
pop
int
in
mov
movq
jno
mov
nop
and
push
fiadds
mov
or
outsb
dec
out
mov
movsb
aam
lret
mulb
lcall
aad
mov
test
push
addr16
sbb
pop
out
aas
push
mov
and
aas
lahf
or
adc
icebp
ss
or
mov
loopne
mov
push
and
mov
sbb
add
adc
sbb
xor
mov
scas
mov
je
fs
inc
movsl
jo
lds
stc
cwtl
mov
mov
clc
notb
and
lcall
shrb
xchg
adc
adc
lock
cltd
loopne
test
inc
lret
aad
ret
fcomp
push
sub
add
je
sti
daa
or
outsb
pop
scas
or
arpl
and
inc
mov
sub
ficompl
mov
out
adcb
repz
lock
popf
mov
jae
orl
sbb
add
jne
push
xchg
xor
adc
ret
lds
add
scas
dec
divl
stos
and
mov
mov
sub
mov
mov
iret
dec
pop
jmp
xchg
adc
popa
iret
in
fnstenv
inc
and
push
xchg
sub
sbbb
mov
les
or
inc
mov
adc
leave
iret
sbb
mov
cmp
shrb
stc
pop
jl
jo
das
cmpsl
movsb
aas
inc
push
and
jns
push
jnp
push
leave
subl
cltd
ret
fnstcw
push
sti
test
daa
gs
add
sti
fildl
bound
mov
cmc
fcoml
ret
rorb
test
fsub
and
iret
mov
dec
int3
push
cmc
dec
and
mov
pusha
dec
and
fbstp
outsb
mov
pushf
std
pop
pop
sti
nop
lahf
push
out
lea
mov
loopne
xchg
xor
data16
js
sar
mov
leave
lods
jg
and
cmc
fs
insl
aad
divb
loopne
mov
test
clc
push
mov
push
ds
jo
jecxz,pt
xor
out
cltd
outsl
cmpsl
pop
pusha
scas
nop
outsl
mov
pop
popa
mov
inc
dec
push
pop
jmp
jnp
in
cmc
push
or
cmp
mov
push
inc
cmp
test
and
xchg
in
lret
pop
nop
mov
add
cltd
sbb
sbb
sub
bound
adc
push
sub
sbbl
inc
push
dec
xchg
add
jns
inc
mov
cmc
push
stos
shlb
adc
clc
jno
mov
xchg
scas
mov
out
sub
pop
cmp
mov
clc
pop
inc
mov
int3
add
cmp
add
js
fiaddl
jns
into
dec
xor
sbb
mov
mov
mov
mov
or
sub
pop
loop
xchg
lds
cmpsl
adc
mov
shr
cmp
mov
mov
pop
adc
push
cmp
cmp
mov
pop
popf
lods
adc
dec
mov
sti
add
cwtl
std
and
push
scas
and
xchg
jecxz
mov
push
rorb
lock
scas
lock
out
mov
xchg
popf
cli
mov
push
aaa
push
cmp
mov
rcll
ljmp
ja
mov
mov
leave
xor
fimull
hlt
rcrl
cmp
rcl
pop
loop
mov
mov
adc
push
mov
jle
lds
sub
mov
xchg
jmp
scas
or
stc
insb
pop
pop
push
push
test
dec
mov
int
and
mov
sbb
sub
mov
ficompl
push
xorb
jae
jo
aas
push
cmp
test
xchg
mov
scas
mov
dec
orl
nop
rcl
jge
mov
mov
mov
or
in
sub
inc
inc
cmpsb
push
cmp
fdivl
xor
jbe
adc
or
aaa
in
arpl
mov
lret
xor
es
sarl
xchg
xchg
loope
repz
xorb
std
xchg
cmp
mov
adc
jl
mov
mov
push
cmc
push
mov
ret
mov
and
inc
addl
call
aad
stos
push
fs
shll
mov
adc
xchg
cmp
mov
mov
jecxz
lea
lods
or
xor
mov
lock
mov
int3
imul
test
sub
shll
nop
xor
dec
mov
call
pop
es
mov
cwtl
mov
dec
enter
xor
cmp
add
adc
mov
les
inc
add
cmc
dec
scas
jg
insl
popf
mov
adc
sbb
fwait
addr16
into
pop
and
mov
loopne
xor
jmp
loopne
test
hlt
xor
lret
inc
xchg
jae
popf
sbb
outsb
es
and
adc
test
xlat
lret
cmp
fdivp
mov
push
js
jecxz
das
or
push
out
mov
inc
stos
in
fwait
mov
jle
xor
cmpl
rcll
pinsrw
push
mov
jle
movsb
mov
aad
and
incl
xchg
lea
jo
push
fistpll
mov
pushf
lcall
xor
and
insl
inc
icebp
or
jnp
mov
inc
test
or
fimull
cmp
ljmp
out
insl
lock
ds
incl
pop
in
fcmovu
test
lds
roll
pop
orl
in
adc
mov
sarl
test
mov
push
in
loop
and
xchg
or
mov
mov
ret
imul
mov
jb
adc
out
dec
ror
outsb
test
stos
dec
mov
inc
push
stc
xlat
sbb
dec
sarl
and
jae
and
xchg
mov
inc
mov
mov
data16
lds
psrlq
xchg
adc
stc
vxorps
push
divl
pop
and
jge
xchg
mov
dec
dec
pop
jge
sahf
in
outsl
pop
ret
cmp
inc
clc
or
in
repz
add
dec
jno
mov
pop
imul
pop
rolb
and
sahf
fsubp
sub
ret
cmp
jle
jecxz
insl
push
fisttpll
sbb
xchg
int
sub
xor
aaa
notb
xor
xchg
inc
cmp
sbb
pusha
push
iret
cmp
push
std
ss
rcrl
les
fneni(8087
adc
jp
ds
adc
mov
mov
into
push
adc
sahf
dec
int
int3
movsl
out
sub
push
icebp
scas
push
insl
in
adc
iret
daa
lea
jo
outsb
fldenv
or
sub
push
jbe
jmp
xor
out
insl
mov
inc
aad
ss
pop
pop
iret
das
push
dec
pop
cmp
add
or
adc
sub
mov
js
dec
add
repz
push
jns
push
ret
movsb
sbb
popa
pop
ss
mov
sarb
scas
xor
push
ret
cmp
jp
or
flds
xchg
iret
loop
mov
jno
jp
push
addl
sub
push
icebp
and
sbb
inc
dec
sub
pop
daa
in
sbb
add
icebp
xor
test
idiv
dec
aas
ret
mov
sbb
xchg
imulb
cmp
insb
sub
hlt
sbb
sub
inc
push
in
sbb
mov
ja
aaa
push
bound
scas
imulb
outsb
mov
lret
fcom
test
test
ss
imul
sbb
cmpsb
jl
xchg
add
lock
inc
rclb
jle
imul
inc
mov
adc
push
negb
inc
call
out
mov
sub
popf
dec
ja
push
sub
sub
stc
sbb
data16
aad
hlt
sub
fcmovne
fisubrl
dec
mov
or
shrd
mov
sbb
stc
std
or
loop
loope
pusha
xchg
sbb
inc
add
in
popf
mov
or
jae
push
mov
lret
cwtl
out
int3
gs
adc
push
and
leave
mov
jge
scas
adc
js
mov
pop
ret
sbb
rcrb
push
pop
mov
ss
dec
subb
test
inc
mov
lret
decb
imul
jecxz
push
sub
add
mov
std
xchg
mov
push
pop
lret
jbe
and
or
stc
movq
ss
or
xchg
leave
in
movsb
js
les
mov
or
in
aaa
xchg
inc
stos
sub
push
add
faddl
mov
and
fsubl
repnz
or
scas
push
pop
xchg
in
shrl
lret
shr
cmc
dec
mov
into
dec
adc
shl
sbb
adc
icebp
imul
cmp
mov
sub
sti
fabs
insl
mov
aaa
push
lahf
hlt
mov
arpl
dec
push
and
xor
push
mov
xchg
jg
je
inc
popa
orb
sbb
je
and
cwtl
and
fwait
mov
add
xor
jno
adc
push
mov
ja
dec
push
and
cmp
sbb
fsubp
fcompl
nop
int3
mov
adcb
sbb
inc
stos
inc
dec
orb
inc
mul
mov
adc
jecxz
and
adc
sub
repz
cwtl
xlat
jbe
jo
xor
data16
sbb
xchg
test
test
xor
xor
daa
leave
mov
lea
rorb
sarl
arpl
jb
push
pop
xor
stos
mov
xorl
mov
je
jg
clc
sti
sub
pslld
lods
aad
les
popf
push
out
xlat
in
mov
push
sub
adc
cltd
push
lock
stc
outsb
stc
dec
popf
sub
test
shl
dec
sub
sbb
push
in
pop
adc
cmpsb
or
mov
and
hlt
ret
movl
pushf
jb
sbb
imul
pop
aas
mov
shrl
sbb
lret
dec
xchg
or
mov
xchg
cmc
adcb
sbb
and
sbb
and
sub
sbb
jge
lods
mov
add
sub
and
inc
je
jmp
lods
sarl
inc
ficomps
pop
aad
sub
or
push
aas
mov
or
pop
inc
hlt
inc
cmp
lahf
sar
xor
andb
stos
clc
outsl
fwait
push
ja
sbb
inc
cmpsl
imul
cmp
popf
sbb
ret
bound
testb
cld
sbb
xor
add
idivb
pop
dec
inc
push
dec
stc
or
add
decl
repz
or
inc
or
jmp
mov
pop
rolw
imul
push
roll
jmp
inc
jmp
jb
add
jae
js
adc
mov
and
pop
mov
inc
test
mov
out
sbb
int
aam
decl
sbb
subl
push
mov
push
fwait
mov
jns
jb
or
push
ja
ss
jns
jecxz
push
movsb
jb
fucomip
icebp
cmp
les
dec
jg
jno
xor
inc
sub
imul
push
sub
pop
inc
add
or
xor
test
jg
pop
test
sbb
and
mov
dec
shll
inc
fsubl
sbb
ficoms
pop
xor
bound
and
xchg
jecxz
xor
es
rol
subl
and
out
cmp
fcomps
fnsave
adc
cmp
call
popf
loop
jge
xor
lret
loop
mov
ret
lods
sbb
cmp
mov
subl
cmpsl
push
or
int3
adc
jo
mov
jle
add
mov
sub
cmp
and
in
push
add
icebp
pop
mov
cmp
enter
xchg
jo
pop
fwait
scas
sti
repnz
push
loopne
pop
jo
lahf
into
mov
pushf
mov
pop
rclb
in
adcb
std
lcall
daa
insl
aam
xor
addr16
ret
push
out
mov
repnz
in
add
stos
mov
int3
sub
pusha
out
bound
push
test
in
jmp
sub
pop
adc
add
ds
sbb
out
xor
cmpsb
sub
sbb
mov
sbb
insb
mov
and
jbe
out
test
sbb
or
or
mov
test
mov
mov
sub
out
pop
in
pushf
iret
mov
adc
addr16
mov
sbb
fmulp
mov
jnp
jnp
pushl
push
mov
cwtl
popf
and
test
sub
xchg
fdivs
pop
loope
hlt
mov
and
lea
mov
mov
aad
adcb
pop
xlat
push
jae
sub
pop
cmpsb
xchg
pop
je
out
pop
in
xchg
lret
mov
mov
mov
imul
int3
sbb
jbe
mov
ret
test
test
mov
leave
xor
movsl
js
push
mov
fadd
inc
sahf
movsb
or
ret
mov
outsl
or
or
jge
xchg
rcl
mov
jb
sbb
xor
inc
test
fucomip
or
mov
outsb
jp
ja
jbe
leave
lahf
sub
mov
mov
in
pop
addr16
pop
and
and
stc
cld
mov
push
and
mov
mov
rcl
loope
xlat
repnz
shrl
test
cmp
test
lods
xchg
mov
and
mov
sbb
pop
addr16
xchg
or
adc
int
movsl
in
xchg
add
adc
jns
js
cmpsl
ljmp
aaa
ja
adc
jmp
mov
cld
cmpsl
lods
mov
fwait
jne
and
std
add
dec
jb
lods
aaa
push
test
lcall
lcall
push
mov
xchg
into
jae
sub
push
sub
xchg
mov
mov
movsl
sub
into
add
jge
testb
push
push
gs
mov
xchg
mov
xchg
inc
jo
push
nop
cli
jno
and
into
xor
xchg
fstps
int
ret
jo
xchg
gs
jl
add
enter
aam
adc
sub
lods
push
fwait
jbe
sarl
mov
call
test
jns
add
adc
mov
sbb
lods
mov
jnp
jae
mov
and
xchg
in
adc
clc
pop
aam
add
mov
insb
addl
pop
iret
pop
sbbb
dec
inc
mov
mov
and
mov
dec
ljmp
mov
mov
rcll
push
mov
fmul
outsl
sbb
movsl
pop
cmp
mov
lods
push
arpl
sbbl
movsb
push
in
subb
push
push
aam
jp
addb
xchg
lods
push
jg
xor
xor
mov
mov
sbb
stc
or
or
and
mov
cwtl
imull
shlb
into
pop
jb
repnz
push
nop
test
adc
and
dec
cmp
out
loope
cwtl
cld
call
or
cltd
mov
ss
push
fs
push
scas
and
leave
shlb
cmpl
scas
in
xor
sbb
xor
and
in
fsubs
and
or
sti
push
cs
sub
lods
das
jb
mov
nop
cmc
and
mov
divl
rorl
sbb
fs
bound
fisttpl
mov
daa
jns
into
cmp
push
cmpsb
cli
dec
sbb
repnz
inc
insb
sub
xlat
sub
bound
out
add
mov
mov
and
ret
ror
out
xchg
mov
aad
or
dec
xor
adc
adc
notb
and
imul
dec
out
repnz
out
sub
adc
adc
call
push
cmpsb
inc
movsl
icebp
dec
mov
push
cmp
mov
xor
lret
rolb
test
shl
pop
into
fistps
mov
gs
jb
icebp
lods
cltd
sbb
test
ret
xor
or
adc
imul
mov
roll
sbb
lods
ret
inc
ds
jp
lret
loop
mov
adc
push
mov
daa
inc
mov
rorb
push
ret
lret
sarb
mov
cmp
rcrb
gs
jnp
xchg
fcmovb
mov
dec
sub
xor
dec
subl
mov
or
outsl
add
mov
clc
push
stos
xor
jle
and
idivb
test
inc
push
mov
jae
sub
jge
idivb
sti
or
and
sub
dec
cwtl
pop
cwtl
in
testl
cmp
icebp
xor
mov
xor
pop
enter
fsubp
cmpsb
arpl
jnp
sbb
mov
cltd
adc
dec
orl
ja
arpl
mov
dec
jecxz
add
mov
scas
xor
insl
imul
ror
xor
lods
push
push
xor
pusha
xor
and
fiaddl
sarl
jp
dec
add
cmp
pop
cmc
mov
stc
in
out
call
dec
sub
add
sub
cmc
out
mov
jmp
cmpsl
test
hlt
xor
insb
lret
mov
dec
enter
lock
ficoml
sbb
ucomiss
mov
sub
xor
into
ret
xor
xor
adc
repnz
adc
pop
pop
sub
clc
adc
inc
fdivr
xor
dec
cmpb
and
adc
in
adc
pop
orl
inc
stc
sar
inc
cmc
mov
dec
adc
ficomps
shr
inc
sub
pop
and
in
lcall
pop
ror
cmp
cmp
test
add
mulb
imul
inc
mov
mov
sti
enter
jg
dec
jbe
jns
pop
mov
in
jb
mov
ljmp
pop
cmp
or
fisubrs
mov
into
mov
pop
testl
push
lret
push
outsb
push
and
mov
cmp
sub
adc
pusha
subb
push
sbb
add
push
pop
ret
push
fsubr
idivb
mov
mov
jne
xor
fnstenv
popa
outsb
jecxz
stos
scas
pushf
or
testl
inc
push
stc
data16
pushf
dec
dec
das
mov
stos
dec
or
in
push
pop
imul
aas
push
mov
negl
inc
in
xor
aaa
mov
or
mov
jecxz
mov
hlt
fnsave
mov
fistpll
ljmp
pop
jl
xchg
inc
lcall
xor
jg
pusha
pop
dec
add
cwtl
out
lods
and
icebp
jns
mov
jne
cwtl
movsb
icebp
push
and
or
fistps
test
jne
mov
aam
or
pop
mov
test
push
mov
inc
je
cwtl
mov
adc
out
popl
sub
rorb
pop
loopne
shrb
enter
pop
and
lods
bound
cld
loope
aaa
out
mov
insb
mov
jbe
jne
or
imulb
sti
loope
stc
mov
ret
ret
lret
sbb
adc
sbb
xchg
and
sarl
mov
icebp
adc
sub
clc
xor
cmp
inc
bound
popa
icebp
cmpsb
je
xchg
ja
imul
inc
or
cmpsl
lcall
pushl
push
call
and
inc
push
push
bound
int3
or
cs
mov
pop
call
inc
int
iret
adc
inc
xchg
gs
inc
xchg
adc
ss
pop
repz
inc
xchg
ljmp
dec
ds
xchg
stc
test
scas
lret
cmpl
and
and
sub
outsb
stos
lds
push
push
inc
addr16
lcall
dec
sub
add
adc
pop
in
test
mov
cmp
icebp
movsl
lret
pop
mov
rorl
push
fadds
mov
or
xor
andl
lods
jmp
mov
not
loop
xchg
ljmp
stc
inc
aas
adc
sub
or
mov
xchg
in
arpl
add
push
sbb
test
stos
imul
sahf
fisttps
pop
push
popf
add
inc
and
mov
scas
fwait
test
cmpsl
mov
mov
scas
and
add
sti
iret
lret
in
lcall
lods
bound
pop
in
fists
jbe
xorl
sbb
test
ljmp
out
nop
gs
xchg
cmp
mov
push
xchg
aas
jmp
pop
jp
dec
shll
cltd
movsl
ljmp
adc
sbb
jno
rcr
cmp
mov
pop
test
cli
das
jg
xchg
cmp
imul
fidivl
in
daa
scas
cmpb
jb
scas
sahf
add
inc
into
sub
fisubrs
cmp
out
outsb
cmpl
mov
xor
and
fcomps
mov
xor
mov
xchg
in
rolb
inc
jb
stc
js
pop
cmp
sub
xchg
xchg
daa
je
pop
shlb
pop
adc
scas
sti
ror
jbe
mov
repnz
jbe
enter
mov
sbb
fcoml
aaa
pop
stc
imul
test
or
movsl
dec
aas
cmpsl
sub
inc
pop
sbbb
enter
mov
sbb
or
mov
fmul
adc
push
add
sub
in
or
xchg
dec
adc
lea
out
enter
xor
in
mov
pop
sbb
fwait
scas
cmc
loop
data16
inc
xor
sbb
and
xchg
sbb
ret
cltd
xchg
jo
sbb
out
loopne
test
les
ss
lea
dec
int
push
add
cwtl
add
movlps
or
sub
add
jnp
push
dec
ret
into
pop
pop
jnp
push
cli
fldcw
add
dec
dec
adc
les
mov
mov
and
inc
lods
jae
sbb
sub
jmp
out
add
loop
and
hlt
cltd
xor
xchg
fdivrs
push
icebp
xor
sbb
cmp
mov
rorb
fs
push
adc
test
pop
movsl
pop
add
pushf
movsl
add
pop
mov
addr16
fiadds
mov
xor
pop
repnz
or
sub
jg
movsl
fimull
pop
fistpll
and
push
push
repnz
mov
movsl
popf
adc
outsb
mov
sub
std
loope
add
out
adc
in
pushf
adc
outsl
pop
popf
lea
xchg
icebp
scas
mov
pop
mov
push
leave
rorb
jne
fimull
add
pop
mov
sbb
inc
shrb
push
and
daa
push
mov
repnz
mov
pop
xchg
lods
cmpsl
push
adc
lods
xchg
test
mov
test
xchg
push
push
inc
adc
sbb
push
into
shl
fiaddl
pop
mov
push
mov
test
add
clc
pop
cmp
xchg
pop
mov
xchg
fwait
jns
clc
dec
imul
aad
divb
jle
xchg
fcomps
and
inc
sarb
sub
jb
fadd
fdivs
test
pop
sbb
scas
cli
add
sbb
fisubl
lods
das
mov
xchg
mov
xchg
sub
dec
int
sub
les
jle
jecxz
pop
push
test
push
dec
bound
xlat
fbstp
jle
xchg
or
inc
fmulp
in
dec
adc
in
cwtl
leave
and
aas
mov
movsb
push
add
rorb
sub
and
aad
js
mov
lcall
inc
sub
xor
pop
inc
add
inc
in
cs
jp
jns
pop
xor
jg,pt
js
adc
rclb
xchg
mov
xchg
es
ja
cwtl
jecxz
ds
fiaddl
push
xchg
loopne
push
sub
xor
or
xchg
aam
shll
ja
aaa
jle
nop
jo
xchg
sbb
testl
add
lret
out
add
push
mov
jne
mov
mov
lahf
mov
aas
ja
cmpsl
test
add
push
mov
mov
mov
out
lods
cs
cmp
mov
adc
aad
je
add
inc
or
pop
in
push
aam
push
jmp
addb
cmpsb
jecxz
out
pusha
lds
sbb
leave
nop
sub
dec
ret
add
dec
cltd
leave
xor
rcr
popf
sahf
add
jbe
jmp
cmc
ret
jae
jp
adc
ret
insb
hlt
xchg
add
pop
ss
loope
imul
loope
lahf
pop
idivb
js
cs
mov
jmpw
std
mov
xchg
inc
ret
inc
ds
punpcklbw
add
stc
std
cld
int3
iret
pop
mov
ja
adc
mov
imul
mov
divl
dec
inc
or
xchg
fs
push
rolb
cmpsl
arpl
jp
ds
cmp
and
cmpsl
push
cmpsb
push
cmp
or
popa
mov
fwait
ljmp
sub
and
lods
test
mov
add
and
test
xor
xchg
cltd
enter
sarb
fmulp
jmp
pop
pop
aam
cli
cli
xor
sub
fsubrs
pop
push
mov
lods
pushl
mov
push
cmpsl
xchg
inc
popf
cmp
lret
sbb
mov
push
pop
insl
mov
and
add
fldcw
inc
push
andl
mov
push
mov
into
cltd
arpl
clc
loopne
mov
in
push
or
push
js
inc
jg
andb
jge
out
test
push
fsubrs
adc
sarl
fldcw
mov
loop
insb
and
aad
xor
jb
dec
mov
cmovg
lret
mov
repz
fstpl
push
and
pop
test
push
ss
arpl
mov
leave
and
pop
mov
movsb
xor
ficompl
mov
stos
xchg
sti
cli
inc
andl
aam
gs
mov
xchg
nop
lret
sub
cli
aam
fiadds
out
fucomip
sti
roll
mov
cmc
lds
in
push
jo
rol
cmpsl
mov
cmp
iret
jo
mov
mov
mov
dec
mov
and
cmp
cmpsb
xchg
cmpsl
pop
sbb
scas
ret
insl
add
and
xchg
mov
call
xor
cmp
ljmp
cs
pop
xlat
dec
pop
outsl
cwtl
cwtl
je
xchg
mov
and
jo
or
sub
xlat
insl
xor
imul
xchg
mov
pop
mov
and
mov
fdivl
add
and
add
ljmp
enter
in
sbb
leave
lock
imul
jle
jne
rolb
enter
xchg
orb
lahf
scas
sbb
mov
xchg
xchg
mov
shl
sahf
xchg
adc
shrb
cmpsb
dec
mov
mov
sbb
mov
jecxz
push
jp
mov
mov
repz
xor
jle
xchg
mov
ss
lcall
pop
and
sub
push
sbb
xor
mov
xchg
sahf
mov
les
jle
dec
xor
dec
ss
pop
adc
cmp
fdivrs
notl
jl
sub
repz
xor
movsb
inc
mov
sbb
xchg
ret
mov
negb
adc
add
mov
fcompl
adc
outsl
cwtl
jno
jb
hlt
jne
lahf
orl
mov
xchg
aam
into
ja
dec
aas
jecxz
pop
adc
xchg
inc
daa
mov
or
jmp
adc
mov
lock
mov
xchg
xor
jne
mov
jae
shl
outsb
jb
bts
pop
add
lock
icebp
adc
jae
orb
add
ja
fsub
jns
sub
lods
add
pop
push
test
notl
mov
jnp
movsb
xchg
dec
popa
pop
sahf
sbb
insl
daa
jmp
daa
shll
rcrb
jmp
stos
xchg
push
push
xor
out
or
lret
cmpsb
jecxz
test
jg
adc
shl
mov
inc
cmc
xchg
arpl
ljmp
test
andl
pop
stos
roll
ljmp
test
jmp
cmp
or
xlat
clc
ss
imul
outsb
pop
sub
lret
cltd
test
pop
stc
andb
inc
aad
mov
mov
ret
xchg
call
mov
and
dec
sub
imul
into
je
fistpll
insb
fs
dec
pop
lods
pop
mov
mov
xchg
sub
xchg
push
add
and
add
in
sbb
dec
pop
roll
xlat
jmp
ljmp
adc
test
into
mov
inc
icebp
push
push
shl
clc
mov
xchg
or
add
pop
clc
sbb
sbb
int
mov
ljmp
movups
pop
sti
and
pop
mov
test
or
sub
je
int3
inc
sbb
call
stc
cmp
scas
rcrl
pop
or
jl
push
rorb
nop
xor
stos
add
jmp
inc
mov
ljmp
imul
push
ljmp
xchg
push
inc
mov
icebp
mov
push
mov
sub
jae
jge
movsb
or
fs
dec
imul
adc
push
push
and
push
jne
inc
or
cltd
push
repz
mov
push
adcb
push
sub
and
mov
loop
pop
pop
xor
xchg
push
jae
xor
sbb
mov
jbe
mov
nop
add
aam
mov
rcrb
xor
jbe
sub
outsb
gs
cmp
push
pop
sub
jnp
ds
sub
and
fdivrl
adc
arpl
sbb
xchg
fdivrs
in
into
mov
negl
lcall
inc
mov
mov
lret
scas
mov
in
enter
shlb
jl
push
jl
and
mov
sbb
std
ljmp
and
and
ss
fcmovbe
aas
imul
or
xor
call
fdivp
std
mov
les
jns
lcall
mov
aas
outsb
ds
add
andl
outsb
jnp
inc
cltd
shll
lds
popf
add
and
mov
js
divl
add
mov
movsb
pop
push
int3
or
daa
mov
sbb
sbb
pop
gs
dec
gs
jns
cmp
or
icebp
shlb
sbb
mov
xor
mov
hlt
inc
ljmp
shrb
cwtl
pop
sub
jl
ret
mul
fimuls
mov
dec
push
das
mov
mov
inc
insl
call
cmpsl
leave
sbb
nop
cltd
in
inc
mov
fs
or
fcompl
pop
push
mov
pop
out
pop
add
cmpsb
in
nop
cmpsl
lcall
xchg
jp
sarl
adc
inc
in
test
xchg
and
jecxz
mov
into
pop
pop
cmp
mov
mov
pop
add
cmpsb
andl
push
or
ljmp
mov
pop
fs
cmp
or
or
add
fisttpl
addl
clc
xchg
sbb
loop
xchg
sbb
jmp
addr16
enter
sti
mov
or
cmpsl
repnz
in
lret
mov
jno
pushf
and
cmpl
pusha
pop
jl
je
cmp
mov
insb
adc
add
mov
xchg
inc
adc
pop
dec
pop
outsb
loope
sub
out
imul
in
das
mov
in
mov
xchg
ret
and
push
jmp
cmp
dec
mov
or
dec
dec
dec
out
imull
repnz
into
pop
dec
test
inc
xchg
jmp
es
and
movq
fildll
mov
bound
adc
jg
insl
cmp
pop
icebp
rcr
xchg
or
mov
out
jae
sbb
and
mov
pop
mov
xchg
pop
negl
inc
dec
in
xchg
inc
int
in
les
in
lods
or
sti
sub
sub
hlt
faddp
aam
shll
push
push
xor
and
cld
frstor
jo
stos
jl
aam
push
sbb
cmp
jge
lahf
aad
mov
jns
mov
xchg
int
fcoml
adc
iret
mov
es
inc
and
sbb
add
inc
inc
aaa
faddl
sarb
sub
loop
test
loopne
fstl
leave
and
leave
rolb
cli
loope
pop
sti
inc
mov
push
xchg
in
je
cs
inc
xchg
hlt
popa
push
popf
mov
cmp
or
fwait
mov
daa
aam
aam
ja
jmp
sbb
lahf
push
push
mov
in
ret
nop
movsb
cmp
nop
cld
in
mov
mov
mov
arpl
xorl
frstor
pusha
adc
xchg
adcl
xchg
xor
push
out
lret
mov
jmp
sti
loope
repz
lcall
inc
push
mull
cltd
xor
push
movsl
psubusb
adc
cmp
hlt
mov
fs
hlt
pop
test
pop
cmc
dec
js
sahf
mov
mov
das
push
out
inc
push
xchg
stc
lret
mov
push
je
xor
into
inc
and
das
jae
lcall
inc
add
neg
mov
cmpsb
sbb
js
or
shll
push
cmp
xchg
out
xlat
addl
push
mov
cmp
xor
call
nop
dec
ds
jno
mov
sbb
gs
adc
ret
ret
lock
push
insb
mov
fisubrl
jae
cltd
lock
and
jb
inc
ja
jns
ja
or
imul
shll
hlt
push
pop
push
mov
push
nop
mov
mov
movsl
in
adc
inc
dec
jns
push
clc
hlt
jb
or
testb
inc
mov
jecxz
mov
in
pop
in
and
mov
popa
xor
nop
lret
add
adc
out
jno
mov
inc
jns
pop
sbb
inc
mov
outsl
jno
mov
inc
aad
movsb
test
mov
adc
mov
test
cmp
je
add
mov
inc
push
in
push
loopne
pop
xchg
outsb
inc
lock
pop
dec
add
divl
mov
jmp
or
fwait
lods
bound
adc
clc
aad
call
and
leave
lahf
lock
or
fistps
test
push
loopne
adc
decl
and
or
insb
inc
lcall
push
xor
int3
dec
pop
push
test
mov
test
cli
cltd
sub
xchg
in
push
je
adc
scas
dec
movsl
fdivrs
add
popa
or
mov
push
xchg
push
shlb
add
addr16
or
push
lods
sub
fnstsw
fcmovnbe
push
aam
cmpsb
mov
mov
icebp
imull
lret
enter
sub
xchg
mov
mov
pop
lahf
adc
dec
mov
cmc
aaa
cmp
xchg
das
pop
repnz
inc
jmp
mov
dec
push
ret
out
push
xor
add
int3
outsb
add
mov
mov
inc
cmp
fsubrl
inc
mov
dec
dec
sub
and
inc
dec
aaa
jb
fstl
mov
or
mov
loope
fisubrs
adc
in
jns
jno
push
and
outsl
fimull
push
enter
daa
jge
lcall
add
iret
repnz
push
aad
mov
lahf
fmuls
jnp
dec
sub
or
leave
ja
add
scas
popa
enter
and
adc
inc
pop
repnz
std
xchg
cmp
sub
icebp
sub
scas
cld
addr16
add
sub
push
jns
sub
movsb
push
lfs
xor
in
sbb
sbb
mov
pop
dec
mov
mov
mov
out
and
call
add
mov
push
xor
mov
adc
mov
repz
ss
cmp
testl
je
lods
sbb
jecxz
sub
lods
cmp
lds
out
aad
stos
cld
inc
enter
lret
xlat
add
inc
imul
dec
or
mov
ret
mov
jnp
jb
shl
outsb
es
shlb
cmpsl
sbb
les
xor
jecxz
int
jl
cmp
push
dec
and
leave
sbb
or
shlb
stc
adcl
out
push
fdivrp
loop
inc
fwait
add
in
mov
and
cltd
jnp
bound
in
aas
xchg
inc
add
mov
adc
cmp
add
es
in
orb
inc
mov
mov
sbb
fcom
push
cmpsl
pop
jge
xchg
iret
pop
lcall
ja
in
lahf
mov
lock
pop
je
lock
or
in
inc
ret
and
loope
scas
dec
mov
xchg
mov
leave
int
pushf
or
inc
hlt
shr
inc
cmp
push
enter
dec
lcall
jle
or
cltd
add
sub
into
test
popf
imul
loop
lds
mov
dec
arpl
cmp
and
jge
mov
jns
push
stos
xchg
mov
push
jle
in
fcoml
andb
movsb
mov
inc
jmp
js
sbb
inc
xchg
or
sub
fidivrl
enter
stos
fimull
adc
jg
jno
es
fbld
aas
mov
sub
pushw
out
mov
push
inc
mov
dec
sahf
add
or
jle
repz
in
jp
js
pop
rol
andb
adc
mov
mov
andl
leave
push
jns
hlt
daa
xor
xchg
stos
dec
aam
push
sbb
xor
loop
xchg
and
pop
cli
mov
hlt
scas
push
jns
test
xor
mov
lcall
out
add
das
repz
adc
pusha
sbb
flds
xlat
xchg
push
push
test
xchg
data16
ljmp
dec
xor
fbld
add
pop
push
fstl
pop
mov
cltd
and
daa
sbb
mov
loope
jl
or
cmc
pop
fwait
push
mov
and
jns
pop
dec
jno
jge
test
les
ss
sub
loope
cmp
outsl
cmp
lcall
xchg
jb
and
pop
jge
xor
mov
cli
movsb
inc
mov
lahf
push
pop
push
sub
les
out
in
mulb
push
mov
mov
cmp
sahf
insb
loopne
or
inc
call
arpl
lock
push
jbe
pusha
push
movsl
sub
mov
mov
sub
mov
fwait
or
gs
es
subl
mov
vpunpcklqdq
lock
sub
sbb
and
rcrl
stos
inc
pop
stos
dec
pop
sahf
jb
mov
ret
repz
xchg
mov
adc
test
scas
imul
pop
mov
jbe
xchg
cli
xchg
repnz
int3
imul
sbb
adc
in
loopne
mov
mov
icebp
ljmp
cmp
pushf
push
pop
xorb
cmpb
mov
and
inc
xor
sbb
mov
sbbl
sub
jne
pop
mov
xor
inc
out
cmp
push
xchg
xchg
aaa
dec
inc
fwait
pop
cwtl
xchg
mov
stos
fisubl
pop
orb
sti
jmp
mov
dec
lcall
cmp
xchg
dec
sub
cmpsb
sub
fildl
outsb
xchg
mov
out
rcrl
inc
test
cmp
xchg
jae
out
inc
push
out
cwtl
dec
pushf
cwtl
cltd
sbb
sti
stos
fnstenv
movsl
sbb
xchg
xchg
fcoms
xchg
push
sti
je
adc
xlat
adc
test
aad
inc
push
cwtl
cmp
out
mov
mov
out
icebp
mov
inc
int3
cld
arpl
or
inc
dec
push
aad
clc
dec
dec
lret
arpl
outsl
je
pop
es
addr16
adc
icebp
insl
add
pop
fcomps
test
fdiv
mov
pop
call
or
hlt
mov
cld
mov
fs
mov
std
ljmp
mov
insb
mov
pop
int3
imul
pmaxsw
push
mov
pop
xchg
aad
pop
cld
jg
std
sahf
jns
pop
in
ficomps
ret
popf
out
js
cmp
inc
adc
inc
leave
mov
adc
je
sub
stos
cli
push
jmp
pand
movsb
xor
daa
bound
mov
jmp
daa
fwait
dec
add
pop
xchg
mov
fildl
ss
or
or
sarb
xchg
sub
cwtl
push
pop
jecxz
xchg
or
popf
stos
or
pop
adc
lea
stos
push
push
scas
jae
repnz
add
neg
fcomip
and
fsubrl
or
xchg
jno
aad
test
sbb
fldcw
pop
gs
push
cmpsb
pop
mov
cmp
mov
out
and
lret
pop
in
test
pop
push
mov
cli
xor
adc
scas
jge
je
xor
pop
push
xlat
js
or
mov
sbb
popf
gs
sub
daa
test
mov
les
in
mov
out
rol
dec
sub
mov
movsl
fldt
leave
test
pop
inc
lods
subl
sbb
stos
inc
insb
inc
and
xchg
and
out
xchg
lahf
dec
in
mov
sbb
push
jl
push
fisttpl
dec
and
and
rorb
aaa
popf
je
lahf
sbb
imul
dec
pop
ret
jp
dec
xchg
mov
outsb
ljmp
mov
lea
jno
add
pop
mov
int3
shl
sub
cmc
repz
rol
mov
mov
out
daa
mov
mov
mov
xor
lock
fcomps
dec
sbb
mov
adc
insb
fldt
xchg
jl
jbe
sar
ss
pop
push
xlat
xchg
sbb
bound
inc
aas
and
mov
incl
adc
add
orb
cmp
jg
and
addl
jge
jg
adc
orl
sub
mov
mov
sbb
pop
xchg
push
js
push
into
mov
jmp
mov
test
mov
xchg
insb
ficoms
inc
in
jle
scas
xchg
and
adc
pop
aad
dec
mov
addl
fldl
push
hlt
lock
sub
addr16
sub
cmp
and
cmp
inc
add
call
mov
icebp
adc
add
or
test
sub
aaa
shll
lea
mov
ljmp
stos
outsb
dec
and
stos
inc
pop
sahf
test
inc
mov
jmp
add
sub
and
das
jp
lret
out
or
aam
loope
fldcw
push
and
jg
ficoms
mov
xchg
inc
loop
shlw
push
push
push
add
out
push
push
lret
push
mov
int
xchg
aam
scas
jge
rcr
mov
add
das
cmp
push
lods
inc
dec
or
lcall
ljmp
out
mov
push
repnz
aas
into
or
adc
fwait
dec
and
sarb
call
out
push
and
pop
in
adc
sub
xchg
xchg
push
flds
ret
mov
nop
mov
pop
rorb
adc
mov
fbstp
les
push
mov
or
rorb
adc
mov
mov
outsb
jg
jp
fcmovnb
dec
ljmpw
jl
xchg
push
and
pop
les
fadds
shll
fildl
rorl
xlat
call
xor
mov
cld
xor
xchg
test
jge
ds
push
sarb
repz
outsl
xor
adc
loopne
hlt
pop
pop
push
xor
je
mov
out
xchg
lods
mov
cmp
nop
dec
stc
je
cmp
mov
ret
dec
dec
or
push
mov
sbb
leave
pop
pop
arpl
inc
mov
aad
mov
pop
xorb
fmuls
push
inc
push
pop
cmp
scas
lcall
out
jb
mov
int
sub
xor
sbb
fsubrl
insl
subl
sub
xchg
or
fsts
sub
in
sub
adc
aad
cli
adc
repnz
and
je
insb
repz
imul
and
ja
or
pusha
add
mov
or
mov
int3
push
repnz
cmc
dec
push
mov
std
push
ret
lods
push
push
rcrl
push
push
inc
in
ljmp
mov
adc
fldenv
pop
inc
orb
add
sub
push
fmul
incl
push
xor
fcoms
jb
js
push
mov
rcr
adc
push
sbb
mov
push
lock
aad
sbb
mov
dec
adc
sbb
icebp
inc
sbb
ja
je
pop
mov
test
imul
mov
sar
sbb
test
pop
mov
in
das
int3
ss
lret
into
mov
sub
add
insl
adc
aaa
sub
rorb
pop
inc
fidivs
ds
pop
pop
sub
sbb
dec
cli
xchg
cmp
lock
xor
xchg
cmp
or
scas
orl
pop
movsl
setae
mov
mov
mov
add
lret
test
pop
inc
cltd
inc
mov
int3
lret
addl
push
adc
inc
mov
cmp
push
stc
shr
rclb
inc
dec
and
lret
ror
xchg
mov
decb
add
data16
jg
dec
aam
push
and
inc
lea
cmp
jecxz
pop
imul
add
div
ljmp
inc
inc
fisubrl
sbb
jge
jecxz
mov
out
xor
hlt
sub
loopne
add
aad
or
mov
rorl
adc
mov
add
pop
cli
and
leave
and
jnp
jle
inc
sbb
mov
sbb
outsl
push
mov
dec
clc
adc
jmp
cs
pop
and
inc
stos
es
cwtl
lret
sub
cli
mov
leave
call
dec
cmc
add
or
cmpsl
push
sbb
cli
imul
dec
in
popa
pusha
xchg
xor
and
icebp
xchg
bound
fs
or
xchg
mov
fsubrp
pop
xchg
jp
iret
in
cmpsl
mov
mov
insl
add
xchg
mov
invd
aaa
dec
jnp
sbb
aas
mov
int3
mov
or
stos
xorl
shlb
cvtpi2ps
mov
shlb
sti
repnz
aaa
std
mov
addr16
mov
xor
lcall
mov
scas
sbb
out
lock
imul
cli
pop
xchg
out
ret
sub
shll
xor
f2xm1
in
adc
push
jle
lahf
scas
sub
scas
mov
rol
cmp
lds
lret
xchg
and
imul
repz
dec
lea
lcall
push
aam
mov
adc
fadds
ja
ret
gs
stos
popa
ja
cmp
ret
lods
icebp
out
cs
or
fistpll
sub
sbb
sub
and
cmp
repz
mov
cld
mov
scas
iret
rol
lahf
push
faddl
daa
or
pop
xor
dec
ficompl
loope
xchg
out
dec
test
aas
xchg
xchg
mov
or
adc
add
lea
stos
cmp
sbbl
inc
push
movsb
adc
jo
xor
dec
sub
enter
inc
or
fs
shl
cmp
jg
lldt
xor
dec
mov
lods
xchg
cli
icebp
imul
and
movsb
pop
rcr
mov
mov
and
inc
sbb
add
int3
jo
cmp
xchg
adc
xor
lea
cwtl
xor
pop
pop
jnp
roll
inc
jns
in
lods
push
lret
add
ss
mov
filds
and
aas
je
or
cwtl
xlat
out
jns
fmul
mov
loop
jle
aad
cmp
insl
movsl
adc
push
insb
adc
mov
into
mov
ret
iret
dec
dec
add
mov
mov
inc
jno
js
sbb
push
paddusw
stos
adcb
outsl
aas
jmp
xchg
int
test
lods
test
sbb
mov
inc
fimuls
mov
repnz
dec
mov
push
aaa
sub
enter
aas
icebp
cmp
lea
add
loopne
addr16
jmp
push
dec
test
add
shl
mov
mov
andl
mov
mov
cmpsl
sbb
mov
sbbb
xor
fistpll
mov
ljmp
popf
mov
ret
out
pop
xchg
fisttpll
xchg
scas
mov
xor
dec
nop
add
jmp
fdivrs
push
fmuls
mov
dec
sbb
cmp
test
or
mov
iret
pop
cmp
or
pop
pop
movzwl
jbe
clc
lods
popa
sub
dec
sbb
sub
repnz
lods
in
js
rcrb
repz
stc
pop
negl
ds
ljmp
xchg
add
daa
jne
jl
loop
add
mov
mov
pop
sub
iret
sti
sub
inc
mov
es
xchg
mov
adc
xchg
sarl
decb
mov
out
pop
mov
inc
das
add
adc
dec
dec
mov
arpl
enter
xchg
fwait
and
int3
mov
pop
push
in
jno
rolb
cmp
pop
movsl
inc
andb
jns
xor
imul
icebp
mov
mov
jo
jmp
fs
out
push
das
scas
loopne
jbe
push
les
sbb
sbb
push
xor
stos
jo
decl
lahf
mov
xor
imul
stos
fdivrl
pop
outsb
inc
dec
pop
jo
push
data16
inc
test
ret
or
fwait
test
fcmovbe
xchg
pop
bound
cltd
mov
pop
into
fneni(8087
and
add
repnz
add
cmpsb
fstps
cmp
mov
push
cmp
xlat
sbb
mov
int3
mov
pushf
stc
dec
pop
icebp
fisttpl
adc
lfs
sub
jbe
push
cmp
fsubrs
loope
pop
sbb
add
ss
inc
stos
test
pop
xorl
shll
inc
push
hlt
bndmov
aaa
inc
jmp
repnz
push
cld
xchg
fsubrl
push
test
out
daa
adc
xchg
repz
mul
incb
sbb
jo
inc
and
addr16
lahf
mov
jne
inc
xchg
or
xor
add
test
mov
sti
lock
xor
mov
adc
inc
adc
dec
stos
jmp
or
enter
aad
repz
add
mov
fistpl
or
jmp
test
pop
mov
dec
pop
mov
push
lcall
fadds
ljmp
mov
lahf
xor
sub
test
cltd
mov
arpl
cmp
aaa
or
sub
pop
push
push
xor
fisubrs
mov
hlt
mov
fdivs
daa
add
jae
push
push
pusha
mov
jnp
inc
push
outsl
popf
and
push
push
cmp
sub
pop
mov
jb
in
sarb
cmp
and
outsl
in
push
dec
es
sub
pop
pop
mov
je
mov
dec
call
addr16
shll
daa
adc
hlt
mov
pop
xlat
dec
ret
stc
jbe
pop
dec
sub
dec
les
popf
pause
xchg
and
or
popa
jecxz
sbb
sub
ds
dec
inc
dec
xor
mov
rorl
in
mov
aam
lcall
lock
inc
fnstcw
and
imul
inc
popf
test
lds
push
loop
mov
out
dec
cmp
push
lret
bound
in
adc
jns
xchg
lret
pop
jge
jne
andb
xchg
aaa
add
pop
in
mov
sti
cmovge
in
or
lds
fsubrl
stos
mov
inc
push
mov
jbe
push
add
mov
icebp
sahf
enter
mov
mov
sbb
mov
insl
pushf
sbb
repnz
arpl
test
popl
sahf
or
dec
aad
lahf
sub
and
or
nop
mov
shll
inc
mov
mov
daa
movsl
jb
popf
add
jne
add
jge
imul
repnz
sub
or
gs
adc
testl
out
dec
loope
scas
lret
or
mov
pop
fs
pop
iret
xor
adc
sti
adc
or
mov
hlt
xchg
mov
push
adc
jno
jle
mov
vpsubd
push
fwait
xchg
insl
repnz
cmp
aad
dec
int
loop
psubd
mov
out
lahf
test
push
popf
js
dec
add
fsubrl
dec
shl
andb
dec
pop
loopne
movsb
xlat
sti
stos
jns
pop
ja,pn
pushf
mov
xchg
loop
inc
pop
jge
push
cmpsb
add
iret
and
push
aam
jl
rclb
lods
lret
jmp
scas
mov
adc
push
pushf
rcrb
xchg
iret
imul
add
icebp
data16
or
test
idivb
jle
pop
fildll
xchg
ds
cs
cmp
push
jp
mov
add
repnz
aaa
mov
in
cmp
cmp
pop
repnz
or
fs
xor
shrl
inc
inc
and
mov
mov
sub
sbb
mov
repz
pop
dec
xchg
cld
outsb
xlat
and
xchg
mov
push
cmp
insb
lahf
loope
push
mov
xchg
xchg
mov
add
mov
jecxz
insl
or
scas
inc
movsb
mov
int3
fcoml
jno
jne,pt
mov
test
in
xchg
sarl
icebp
ret
jecxz
or
sub
daa
fidivrl
mov
push
daa
pop
mov
pop
addr16
inc
js
movsl
insl
pop
out
daa
cltd
jb
cmp
cltd
lret
inc
add
push
cmp
data16
in
enter
jecxz
sbb
or
cmp
push
hlt
gs
jb
or
fs
add
mov
mov
pop
fwait
jno
mov
mov
lahf
cli
inc
lahf
push
je
dec
fs
mov
in
orl
pop
jae
in
jle
movsl
insl
nop
test
shl
repz
mov
enter
pop
inc
mov
jmp
aam
fdivl
dec
icebp
lret
dec
cmp
mov
cmpb
push
aam
rorl
push
lds
jl
sbb
es
xor
iret
ds
add
jp
and
push
or
push
stos
sbb
shll
psubsb
push
cmpsl
pop
mov
outsl
jp
jo
xchg
mov
repz
push
test
ret
pop
add
xchg
sub
xchg
jmp
jp
lcall
imul
sub
imul
lods
xchg
in
mov
add
push
test
lods
dec
add
xchg
mov
jb
mov
jge
mov
rcrl
adc
cmpb
adc
sub
mov
fcompl
mov
and
add
aas
sub
movsb
sub
in
mov
cmc
mov
or
pop
mov
mov
jp
testl
jae
lahf
lods
incb
sbb
into
movsb
adc
xchg
mov
or
mov
xchg
mov
jne
xor
jmp
pusha
addr16
outsb
fstpt
fisubrs
dec
fldcw
ljmp
loopne
mov
mov
xchg
ss
mov
mov
aad
nop
cmpsb
mov
xchg
xchg
sub
pop
popf
or
and
sbb
rorb
aam
pop
xorb
cmp
sub
outsl
dec
inc
dec
and
adc
jecxz
jmp
add
scas
push
shll
inc
mov
cmp
add
mov
mov
inc
aas
inc
std
and
push
dec
mov
sahf
shr
lea
dec
inc
cmpsl
push
mov
xor
imul
push
push
arpl
mov
shl
inc
sub
cmp
sbb
pushf
pop
mov
cmp
mov
inc
mov
add
jmp
shll
enter
lds
jbe
inc
push
pushf
xchg
aad
mov
in
dec
pop
dec
lcall
out
test
push
mov
push
mov
hlt
inc
leave
jne
dec
jbe
sbb
jno
into
push
enter
push
shll
or
xchg
push
stos
xorb
pusha
pop
inc
and
inc
out
sub
mov
inc
add
cmp
sub
jp
push
test
out
inc
add
mov
jno
and
mov
jae
sub
ja
sarl
sbb
jle
ss
sbb
or
loopne
fimuls
in
stc
jns
push
test
aas
nop
bound
xchg
pusha
cmp
push
cmp
pop
jp
andb
outsl
sub
sahf
adc
dec
mov
pop
sbb
adc
or
push
mov
sar
pop
loop
mov
ss
popa
outsb
push
adc
inc
pop
jle
int3
pop
jo
or
jge
loopne
pushf
inc
lcall
adc
lock
jl
cli
sub
scas
outsb
mov
mov
sub
jge,pn
cwtl
mov
mov
ret
shr
mov
mov
dec
mov
dec
xor
icebp
sub
cmpsb
xlat
mov
lcall
call
fadd
lea
xchg
fisubl
or
jp
ret
inc
sbb
test
in
and
cs
inc
sarb
clc
xor
and
jnp
pop
subl
add
jo
stc
repz
mov
and
aaa
daa
bound
insb
sbb
sbb
fsubrs
mov
cmp
jns
lods
xor
xor
jo
rolb
pop
mov
sub
lcall
out
hlt
lods
int3
jge
jg
je
insl
test
mov
pop
jbe
cmp
dec
rcrl
ds
fcompl
mov
jg
mov
dec
outsb
flds
or
pop
lret
in
shlb
sbb
cmp
sar
test
xlat
pop
mov
in
stc
repz
cs
adc
pop
mov
scas
inc
pop
pop
mov
cwtl
xor
or
mov
stos
ja
fwait
lods
addr16
push
dec
jb
das
lahf
movsl
ret
mov
sbb
lret
arpl
lcall
add
mov
hlt
cwtl
mov
add
ds
fs
push
les
mov
sbb
inc
dec
dec
in
dec
pop
add
sahf
xchg
rcr
cmc
test
subl
jecxz
mov
movsb
cld
cmp
or
jecxz
es
xor
xchg
xchg
js
and
rorl
loopne
dec
sbb
or
divl
adc
and
or
aas
add
or
ud2
and
dec
and
mov
add
xor
inc
xchg
fdivp
jle
jb
pop
fidivs
push
add
imul
cwtl
push
sbb
ror
jb
push
inc
jb
cmp
push
iret
mov
dec
data16
mov
add
sbb
jbe
shl
add
testb
or
sahf
mov
cmpsb
sahf
repz
fwait
mov
or
test
adc
cld
jno
sub
xlat
lods
xor
adc
cmp
popf
lds
and
bound
idivl
push
out
jge
lods
pop
dec
jle,pn
push
pop
xchg
push
stos
rorb
cld
mov
sbb
fisubrl
hlt
cmpsb
sahf
jns
fwait
pop
mov
mov
or
xchg
or
fucomp
add
repz
add
push
das
mov
mov
sub
dec
out
cmp
fnstcw
mov
outsb
xor
sbb
aam
ja
call
cmc
lods
lea
mov
xchg
ffreep
sahf
xlat
fcoml
mov
mov
lods
popa
cwtl
sahf
or
adc
cmpsb
push
in
xlat
cmp
push
and
outsl
xchg
sbbl
mov
loopne
repz
fs
call
adc
out
adc
or
add
xchg
xchg
inc
and
adc
sub
in
sti
mov
pop
insl
jae
dec
mov
cmpsl
fmull
xor
mov
jne
push
gs
or
mov
jbe
subl
xchg
add
push
test
out
push
cmp
cmpsb
testb
or
cmp
popa
pop
fistpl
dec
xchg
fistpll
int
subb
outsl
sbb
xlat
push
testb
loopne
rcl
mov
sbb
fnstenv
sahf
cmp
loope
mov
es
punpckhdq
in
popa
sub
cmp
mov
dec
int3
pop
or
add
mov
cld
inc
jmp
aad
xchg
iret
inc
pop
sbbb
mov
xlat
jns
leave
mov
add
shl
mov
sub
inc
cwtl
or
cmp
and
inc
cmpsb
sbb
sbb
jne
sub
mov
xor
mov
lock
outsb
mov
push
jp
in
mov
mov
cmp
rcr
mov
add
stos
adc
ret
shll
pop
xor
nop
shll
push
dec
fdivl
fnstsw
cmpsb
pop
scas
idivb
add
mov
cmpsb
pop
addr16
dec
jb
jo
inc
push
or
dec
cmc
and
xor
jne
adc
jnp
cld
xchg
fucomi
inc
fldenv
push
shlb
add
push
dec
mov
sbb
lahf
lock
sti
mov
movsb
fucomp
loop
in
mov
test
pop
pop
push
and
xor
sbb
sub
ret
les
sti
mov
push
adc
cwtl
mov
bound
cmp
mov
fnsave
mov
lcall
add
sbb
fidivrs
call
xchg
cmc
fwait
xchg
cli
pop
inc
cmp
push
cmp
je
incb
jmp
jle
outsb
cmp
fwait
inc
loope
arpl
fstps
sub
add
adc
clc
xlat
in
daa
cli
outsl
push
mov
sti
jne
gs
stc
mov
sub
fstps
push
cmpsb
add
adc
mov
aad
mov
jnp
into
xchg
in
bound
mov
call
sub
aad
and
mov
pop
lods
fimuls
mov
mov
cmp
int
push
clc
cmp
and
in
gs
hlt
jo
lret
sbb
orl
adc
jae
sub
ret
inc
inc
jmp
xrelease
push
mov
cwtl
mov
stos
movsl
mov
scas
shr
add
dec
jbe
dec
mov
fisttpll
lock
dec
jp
pop
negl
ljmp
fcoms
stos
jmp
sbb
outsl
mov
sti
jmp
xchg
in
fwait
mov
pop
loopne
imul
mov
out
imul
fldcw
mov
fldt
push
mov
insl
pop
mov
xchg
outsb
jmp
fnstenv
test
add
je
cld
pop
lahf
popf
pop
aas
test
and
inc
adc
mov
aad
xchg
jp
loop
xor
jl
jns
lahf
jle
mov
ds
lea
movsb
sub
push
mov
mov
mov
mov
fistps
cmc
xchg
inc
lret
adc
mov
loop
or
push
sbbl
xchg
or
xor
adc
mov
mov
jle
inc
dec
jno
loopne
in
dec
pop
rclb
add
or
cmp
in
es
repz
mov
add
and
push
outsl
out
movsb
insb
cli
lods
repz
ds
pop
das
cmp
aas
scas
inc
pusha
pop
or
test
roll
adc
inc
scas
sbb
roll
repnz
xor
dec
pushf
and
jle
ror
mov
imul
scas
les
imul
mov
mov
xchg
mov
fldt
mov
cltd
pop
cmovl
divl
mov
xchg
stos
inc
data16
hlt
sub
jl
fwait
ror
xchg
ret
cmp
daa
stc
ss
das
sub
jno
iret
rcl
dec
inc
push
or
outsb
dec
aas
sti
cmc
jae
mov
pop
inc
in
mov
and
nop
jmp
test
xchg
xchg
in
xlat
cmp
in
test
sub
cli
cmp
xchg
dec
adc
adc
jo
xor
ja
add
fdivr
std
aaa
stos
jb
sub
cli
jno
loopne
lret
cltd
inc
push
ljmp
xchg
addr16
mov
jge
xchg
sub
cmovle
cmpsb
test
mov
mov
dec
mov
addr16
push
in
hlt
ds
push
fwait
std
and
jle
gs
push
stos
xchg
xor
scas
test
jmp
pop
jge
jns
pop
mov
outsl
sub
loope
cmc
shl
add
add
add
orb
les
rcll
sbb
iret
xchg
add
enter
ret
and
mov
jbe
aaa
cmp
nop
lds
clc
push
mov
mov
sub
cmp
xor
sahf
cmp
and
xor
std
lahf
lea
enter
mov
out
push
xchg
cmp
out
xchg
cltd
jmp
jo
imul
shlb
dec
adc
pushf
add
mov
hlt
pop
ljmp
jnp
pop
push
sub
cmc
inc
arpl
insl
sti
cmpsb
pop
pop
sbb
ficoml
loopne
movsb
lcall
daa
push
pop
sarl
cltd
shlb
sti
out
mov
cmp
pop
xchg
fnstsw
out
imul
xchg
ficompl
jnp
mov
push
rcl
cmp
push
mov
cmp
cmp
pop
repz
jecxz
mov
or
lods
or
sub
sub
or
repz
loopne
scas
jecxz
sub
pop
mov
xchg
lods
popf
or
test
fistpl
scas
stos
jnp
mov
inc
imul
cmp
lcall
dec
or
notl
cmp
insb
mov
dec
mov
js
cli
inc
fidivs
mov
pop
xor
cmpb
clc
jle
popa
popf
jl
xchg
mov
outsb
insb
pop
sbb
cs
xlat
test
lods
clc
cmp
cs
add
shlb
xor
jbe
push
movsb
mov
push
jle
dec
xchg
test
in
xor
and
add
or
pop
scas
jae
jmp
adc
fildll
insb
out
xchg
aad
add
iret
cmpsl
ljmp
add
mov
cmp
add
ja
dec
popa
fimull
ljmp
xchg
mov
test
aam
jmp
repz
and
outsb
jns
je
sub
xor
mov
cmp
out
ss
sub
sub
push
in
mov
les
cmp
les
jne
test
scas
shrl
push
jae
and
and
test
add
fsub
inc
inc
mov
mov
add
fistps
jge
xor
test
pushf
sub
daa
inc
push
push
sub
mov
leave
pop
xor
inc
inc
fucom
mov
push
stc
pop
lret
daa
inc
call
fistl
pop
add
pop
inc
mov
testl
mov
mov
outsb
jge
inc
mov
jo
pop
movsl
outsl
cmp
div
and
dec
sbbb
iret
cmp
mov
andl
pop
cmp
push
rcll
mov
cmp
loopne
adcl
shl
mov
popa
mov
mov
add
sarl
inc
je
test
fadds
dec
add
les
lcall
cwtl
mov
mov
lcall
dec
out
push
add
jg
int
aad
scas
push
xchg
sbb
push
loopne,pt
xchg
mov
imul
imul
enter
aaa
and
xchg
mov
fisubrs
sbb
cmpl
cltd
jge
scas
mov
test
call
rcrb
insl
repz
sti
out
push
cmp
push
rolb
mov
clc
jmp
jl
hlt
andb
lar
push
popa
sub
jge
mov
pop
aas
add
mov
xchg
push
js
add
jno
inc
mov
jb
inc
mov
push
or
fimuls
inc
push
std
ret
lret
repz
inc
and
call
push
mov
sbb
cs
push
jae
rcpps
sbb
xchg
or
fwait
add
int3
and
xchg
mov
out
outsb
lock
jns
pop
sbb
in
dec
nop
dec
out
push
mov
inc
mov
pusha
fwait
je
enter
push
fstp
enter
mov
pop
loope
push
inc
xor
fstpt
dec
adc
int
leave
cltd
sti
ss
pop
cmpb
loop
shrl
push
andb
sbb
mov
inc
addr16
sbb
int3
mov
cmpb
cmpsl
enter
or
lret
and
rorl
popa
inc
inc
ds
push
add
add
xchg
add
pop
mov
cmc
jo
pusha
pop
or
out
pop
pushf
fidivrs
mov
inc
lahf
push
sti
push
push
sbb
xor
adc
xchg
cmp
hlt
adc
cmp
std
jno
inc
lret
xchg
jl
sub
sbb
loop
dec
adc
mov
inc
fmul
jo
mov
ljmp
es
add
pop
roll
mov
inc
enter
mov
mov
jmp
and
mov
inc
nop
daa
stos
lock
inc
inc
jae
inc
mov
int
stos
xor
pusha
fstl
sub
cli
or
aaa
inc
lea
push
pop
cld
lret
rep
sar
loop
scas
enter
jge
and
incb
jmp
sbbb
out
insb
dec
ljmp
addl
fistl
pop
xchg
add
xchg
loope
std
sbb
or
or
cwtl
addr16
js
mov
jecxz
insl
leave
call
inc
addr16
mov
inc
nop
lods
pop
lcall
sarl
xor
bound
mov
dec
push
xlat
pop
stos
movsl
xchg
icebp
mov
mov
in
das
lret
outsl
ret
lods
dec
dec
xchg
dec
imul
pop
call
jne
mov
xor
push
xchg
cmpsb
push
mov
popf
xor
cs
or
mov
stos
push
stos
or
and
mov
cmpsl
inc
rcl
or
popf
hlt
cmp
addl
mov
push
mov
jmp
mov
inc
and
add
fcmovnb
ret
cwtl
aad
mov
mov
pop
push
out
sub
mov
fnsave
add
out
cmp
or
rol
aaa
lock
adc
shr
test
or
mov
cmp
adc
lods
push
fldl
push
shlb
sbb
rcl
enter
mov
test
xchg
fs
into
gs
rcrl
push
sub
mov
xchg
das
push
testl
aaa
scas
dec
sar
cmp
push
call
jno
fldcw
mov
mov
adcl
stc
icebp
push
lahf
cli
out
inc
test
out
and
fcoms
add
or
shll
xlat
inc
mov
sahf
lock
test
jns
adc
test
dec
in
inc
movntq
enter
ljmp
sbbl
push
jnp
and
outsl
inc
pushl
cmc
mov
test
das
sbb
mov
fcomps
inc
addb
call
aad
adc
mov
leave
lret
pop
and
dec
jne
shlb
jno
and
add
inc
test
subb
das
adc
int
dec
xor
sbb
pop
repnz
dec
xchg
aas
rcrb
mov
jae
push
out
and
cld
mov
sbb
and
jb
shlb
sbb
sub
adc
add
pop
clc
loopne
jg
mov
or
adc
dec
xchg
sbb
pop
sbb
fisubrl
adc
xchg
pop
sti
mov
inc
test
or
xor
add
cmp
mov
hlt
decb
pop
mov
add
cmp
cmc
les
cltd
adc
dec
sub
pop
sbb
cwtl
mov
mov
repnz
stc
dec
adc
xchg
iret
cmp
xchg
leave
rol
pusha
pop
xor
bound
or
push
pop
or
pop
mov
insb
popa
jno
pop
sbb
xchg
outsb
rcrl
and
nop
lcall
aam
cmp
cwtl
pop
jo
mov
and
es
sti
adc
jns
xor
fmull
cmpsb
add
pop
sbb
push
xchg
cmp
test
dec
daa
pop
roll
push
ja
inc
xor
push
aas
sub
aam
or
add
sarl
pop
stos
pushf
jmp
mov
sbb
add
stos
ds
push
repnz
movsl
mov
sub
dec
cmpsb
and
js
out
mov
inc
mov
das
mov
pushf
das
lds
dec
fnstenv
xchg
out
stc
in
push
and
mov
sub
aaa
idivl
jmp
push
mov
aaa
xor
and
ljmp
and
dec
lock
mov
add
scas
xor
sahf
popw
out
sub
xchg
in
test
mov
cli
jg
push
out
mov
nop
gs
pop
leave
or
shrb
lock
pop
mov
inc
xchg
hlt
push
xchg
rorl
jg
mov
adc
icebp
pop
mov
push
pop
test
mov
sbb
xchg
push
imul
lock
sub
xchg
fimuls
fnstenv
or
cmp
decb
je
fnstcw
mov
add
daa
and
iret
sbb
int3
and
test
mov
rorl
adc
xorl
push
mov
jae
orb
adc
xor
sahf
lock
pop
stc
cmp
aas
nop
es
ljmp
inc
pop
loop
fnstenv
lahf
cs
popf
cmc
add
push
pop
hlt
xor
jns
shrb
lret
pushf
inc
push
and
sbb
sub
sbb
push
aaa
iret
push
test
imul
sbb
dec
adc
fcompl
fidivs
jp
out
int3
pop
ss
insl
mov
cli
sub
adc
xor
dec
lds
lret
sub
push
lret
fwait
cltd
mov
jl
push
sti
pop
adc
pop
loope
sub
pop
xor
icebp
add
imul
jl
lock
dec
jmp
pop
rorl
xchg
mov
fdiv
dec
std
add
adc
pop
ficoms
in
roll
sub
lock
cmp
sub
sub
xor
outsb
pop
aaa
mov
clc
loop
repz
je
mov
xchg
sarl
adcl
xor
and
loopne
mov
dec
push
jb
lret
js
scas
dec
aas
loopne
mov
clc
rorl
pop
sbb
mov
es
mul
mov
orb
xchg
subb
cmp
jge
aaa
lds
movsb
aaa
js
stos
mov
adc
lds
aad
fisttps
mov
xor
sbb
and
mov
add
movsl
push
repnz
popa
mov
xor
fimull
sbb
test
push
dec
std
xchg
push
jae
adc
test
loop
or
out
inc
or
mov
int3
scas
aas
fsubs
xchg
ret
and
je
inc
xor
cld
mov
and
sbb
adc
pop
mov
pop
xor
dec
add
mov
dec
cmp
sub
test
mov
aam
cmpb
int3
ja
pop
in
ja
dec
push
push
nop
push
mov
enter
lds
mov
ja
hlt
or
pusha
jmp
push
push
test
cmp
ss
cld
mov
jb
jo
mov
mov
and
xor
cmpsb
int3
adc
pop
jge
sbb
xor
stos
xlat
daa
ds
mov
leave
lahf
and
inc
mov
mov
add
loope
sub
dec
testb
dec
or
cwtl
sub
mov
jbe
in
leave
cmp
dec
daa
fnsave
les
pop
lret
int
lds
loop
int
sti
aad
stos
pop
mov
inc
jg
stos
adc
mov
sti
out
xchg
test
adc
inc
lcall
mov
fiaddl
sbb
pop
cmp
sub
mov
int3
mov
rorl
lcall
inc
nop
out
mov
aam
shlb
fs
xchg
mov
inc
sbb
ds
out
lea
add
xchg
iret
ss
in
repnz
inc
testl
lret
out
mov
jno
cmp
xor
packssdw
or
push
ret
call
clc
cltd
push
cltd
shll
xchg
sti
or
mov
add
mov
inc
enter
mov
int
jg
ret
mov
leave
xchg
or
cmp
rorb
lcall
mov
push
mov
add
leave
mov
dec
int3
cmc
sahf
jo
jnp
sbb
scas
sub
push
sbb
jno
scas
adc
loop
pop
jns
mov
mov
test
jne
movsb
and
call
xor
adc
sub
sbb
dec
into
idiv
push
rcrl
cld
mov
les
icebp
repz
sbb
jb
push
cmp
pop
roll
mov
cmp
xchg
andb
scas
adc
xchg
cmp
fsubr
xchg
push
lods
dec
pop
cmp
loop
sub
pop
rcrl
jl
fistl
pusha
lea
jb
fincstp
push
mov
mov
das
mov
sub
sbb
gs
push
jbe
jae
fsubrl
aam
bnd
ljmp
add
adc
roll
mov
add
and
in
test
sbb
push
stos
stos
push
stc
pusha
cltd
out
out
sub
mov
inc
xchg
ret
inc
test
hlt
movsb
sub
aam
sbb
pop
clc
jmp
dec
inc
sub
push
mov
out
mov
add
sub
sbb
call
xchg
in
or
mov
pop
mov
fnsave
pop
std
pop
je
xchg
pusha
adc
or
adc
fbstp
addr16
mov
inc
push
jns
dec
pop
lahf
push
jo
out
xor
movsl
inc
stos
pusha
test
data16
push
outsb
inc
aam
adc
sub
cltd
in
test
mov
outsl
xor
inc
sub
mov
pusha
push
mov
mov
xor
in
xchg
inc
iret
adc
mov
das
into
sub
arpl
add
ja
pop
pusha
xor
test
xchg
mov
mov
push
test
push
sbb
xor
movsl
pusha
cltd
inc
mov
into
ja
adc
mov
xchg
push
xor
test
xchg
mov
pop
hlt
lret
mov
lods
addr16
sub
lret
clc
cmp
xlat
daa
push
loopne
loopw,pn
mov
xlat
push
mov
adc
adc
push
test
mov
stos
mov
les
out
gs
sub
mov
ja
jo
cmp
xchg
bound
inc
adc
adc
repz
rcr
ret
sbb
pop
and
outsl
dec
stos
int
imul
loope
movsb
cmp
sbb
sbb
and
ret
xlat
movl
sub
or
out
cmp
sbb
outsb
jns
jno
mov
cmp
in
in
push
imul
add
and
std
popa
int
into
sbb
sub
fldl
les
in
or
xor
fcmovb
fiaddl
pop
adc
pop
fisubrl
push
jle
jmp
pop
call
adc
mov
jge
mov
push
cld
xchg
and
mov
out
mov
add
btc
out
imul
popa
push
fsubr
les
lock
jne
xchg
fcoml
pop
leave
adc
andb
cld
lret
inc
stc
mov
inc
or
pop
mov
push
pop
repz
inc
jl
insl
std
mov
sub
scas
dec
xchg
dec
push
std
push
push
push
insb
js
sbb
jno
loop
ds
or
pop
fwait
push
dec
xchg
push
xchg
push
cs
push
out
mov
sub
sahf
xor
fdivr
cmp
push
rcll
push
pop
mov
cmp
aas
sahf
rorb
scas
push
mov
inc
ja
push
mov
mov
mov
test
js
mov
push
sbb
sub
movsl
movsb
shlb
cmp
js
mov
mov
test
les
sub
loop
mov
adc
orps
scas
sbb
mov
and
orb
dec
fcmovnb
pop
aam
adcb
popa
and
nop
ss
adc
call
lret
pop
pop
gs
adc
jmp
push
divl
mov
aam
cltd
xor
adc
xor
sub
dec
add
pop
inc
mov
imul
lret
popf
sub
popf
cmpsb
imulb
fs
and
outsb
sub
dec
adc
enter
orl
into
jne
pop
xor
inc
int
aad
adc
add
mov
shll
rcrb
mov
lods
push
sbb
jp
fnsave
pushf
push
add
or
scas
test
lea
mov
stos
lods
push
adc
rcrl
loope
aas
dec
arpl
xchg
mov
mov
or
aaa
lret
mov
dec
add
jecxz
ja
mov
cs
sbb
and
js
inc
rorl
adc
mov
mov
es
cwtl
sub
mov
jns
lret
in
loope
fdivs
cs
roll
jo
cli
sbb
xor
inc
fstps
fnstenv
fcomi
push
xor
cltd
mov
ret
clc
je
mov
pushf
or
or
repz
stos
shrl
arpl
movsl
movsl
fisttpll
test
mov
std
cli
repnz
dec
mov
stos
mov
notl
aam
add
pop
jmp
fcompl
jnp
imul
adc
fisubl
jmp
mov
pop
inc
mov
int
daa
daa
and
mov
lret
std
repnz
aam
pop
loopne
sti
jno
mov
imul
or
ret
cld
std
repz
lock
stc
pop
lock
push
add
jge
inc
adc
lahf
mov
aam
ds
jae
cwtl
xchg
movsl
lods
in
lock
sub
sbb
pop
push
push
das
outsb
push
rcrb
jmp
cmpsl
push
jge
leave
les
stos
clc
arpl
idivl
sti
cmp
in
lret
inc
pop
incl
dec
aad
imul
pop
fwait
iret
insl
pop
sub
mov
loope
and
and
shl
idivl
lods
inc
test
push
xor
sbb
icebp
hlt
sar
pop
popf
xchg
loope
subl
cmp
inc
push
hlt
lds
cmp
push
mov
and
out
pusha
pop
dec
inc
movsl
jns
ja
icebp
sub
xor
xchg
add
rcrb
adc
movsl
jmp
add
test
xchg
or
cmp
xchg
inc
mov
add
jp
sub
gs
dec
aas
inc
test
rclb
dec
das
push
push
pop
jae
lret
push
push
scas
lret
xchg
or
stc
mov
rolb
les
sub
mov
push
adc
mov
in
adc
popf
xchg
dec
stos
add
shll
push
add
lock
push
scas
adc
adcl
pause
jp
sahf
push
inc
rorb
xchg
test
inc
add
jp
scas
adc
and
inc
leave
jmp
xor
push
mov
loop
pop
push
scas
dec
cld
imul
sbb
pop
xchg
iret
movsb
pop
mov
inc
test
movsb
loopne
adc
test
insl
push
mov
inc
mov
jo
push
cmp
xchg
stc
or
fwait
xlat
mov
xchg
ret
sub
and
jecxz
inc
js
movsb
sub
mov
add
sbb
pop
dec
imul
inc
mov
popa
and
mov
mov
mov
dec
std
inc
orb
stos
mov
mov
add
shl
sarl
lea
int
adc
add
in
dec
or
out
stos
xor
jb
rorb
mov
mov
mov
scas
mov
lods
mov
decl
mov
daa
xor
cltd
in
mov
jecxz
push
dec
int3
pop
xor
dec
ret
adc
push
test
lret
sbb
ja
shl
enter
pop
push
jp
mov
sti
xorb
inc
or
loope,pn
and
repnz
fists
enter
lds
hlt
dec
add
addr16
aaa
fstpt
rclb
enter
push
loop
inc
icebp
xor
les
incb
mov
xchg
lahf
sbb
insb
leave
sbb
pop
into
add
in
arpl
nop
pop
pushf
jb
subl
movsl
mov
mov
mov
dec
in
int
ljmp
add
and
mov
jne
int3
les
push
iret
clc
ljmp
adc
in
stos
xor
in
adc
bound
aas
inc
sub
lret
lcall
pop
insl
mov
std
andl
jnp
jae
out
inc
xchg
std
lret
mov
jge
lret
xlat
push
setbe
mov
dec
inc
dec
mov
rorb
mov
xchg
mov
push
clc
mov
cli
xor
push
popa
icebp
orl
ret
sub
dec
sub
cmpsl
pop
mov
mov
sbbb
sbb
jne
je
cltd
xor
testl
push
pop
lret
add
cltd
lret
lds
ret
hlt
xchg
test
mov
and
test
sbb
xor
jl
pop
popf
mov
movsb
inc
in
outsl
pop
xchg
add
push
repnz
dec
mov
pop
sahf
push
sbb
stos
mov
or
mov
xchg
cmc
fs
sti
inc
fisttpll
lods
mov
dec
or
adc
fistps
add
jmp
daa
cmpsl
adc
cli
pop
je
cld
push
xchg
dec
dec
push
fs
pop
sbb
or
xchg
test
les
or
stc
mov
repz
push
aas
xlat
pop
pop
notb
shrb
addr16
rcrl
inc
notb
rcrb
icebp
insl
and
test
add
bnd
jb
hlt
cmc
cmpsb
add
xor
fadds
popa
xlat
xchg
mov
rcrl
xor
dec
xor
iret
pop
dec
sbb
mov
pop
addr16
mov
sbb
xchg
mov
add
sub
mov
sbb
push
jae
outsb
add
dec
mov
in
mov
dec
loopne
rorb
sub
cli
sub
adc
pop
ret
adc
ds
clc
inc
mov
jnp
lret
dec
mov
icebp
cmp
adc
pushf
addr16
jae
sbb
fnstcw
xor
fwait
or
aas
ljmp
ja
lods
jnp
pusha
mov
push
subl
sub
push
fwait
repz
call
pop
cltd
fstps
cs
clc
out
mov
push
addr16
mov
xchg
cltd
sbb
dec
loopne
in
dec
cmc
or
or
out
mov
xchg
sub
push
mov
mov
or
call
mov
test
idivl
mov
stos
jbe
and
xchg
stos
add
sub
cltd
xor
adcb
out
fs
mov
xor
add
fs
aas
lods
jle
mov
int
or
mov
add
push
jno
shll
in
mov
mov
loopne
addr16
push
cli
outsw
add
xchg
xor
ljmp
shlb
push
push
movsb
clc
adc
sub
jp
dec
push
lods
add
fcom
movsb
loope
jp
adc
pop
inc
and
dec
and
outsb
mov
inc
fstpl
pop
clc
iret
inc
mov
adc
sub
push
add
add
in
inc
out
jb
sbb
sbb
sub
or
imul
test
cmp
lods
mov
adc
call
or
test
or
and
and
ret
lock
mov
jns
loope
sub
cmp
out
add
and
jns
pop
jns
into
xchg
pop
lods
sub
mov
mov
cmc
call
icebp
xchg
jb
or
inc
ja
push
jae
lock
pop
xchg
mov
mov
xchg
push
or
push
inc
mov
mov
bound
or
add
shl
out
in
mov
sub
cli
xchg
std
pop
xor
add
pop
stos
fs
inc
mov
push
sbb
cwtl
int3
dec
mov
pop
sbb
mov
lock
inc
and
ja
cmc
add
mov
enter
jmp
addr16
ret
adc
mov
dec
jmp
jo
aaa
lds
fwait
ror
pushf
xchg
lock
add
push
sbb
lods
lods
and
insl
mov
dec
test
xchg
lret
jns
inc
rolb
and
imul
in
cmpsl
xchg
ss
notb
jg
sahf
lds
push
cmpsl
movsb
xchg
sbb
cli
mov
les
loope
shr
or
or
push
outsb
push
push
fsubrs
repnz
int
sub
push
insb
add
pop
push
pop
test
jmp
test
pop
pop
clc
xchg
mov
fstl
lret
fnstsw
out
arpl
mov
pop
sbb
and
pop
and
push
pop
push
outsb
ret
test
jno
cwtl
mov
aaa
sbb
dec
inc
repz
pop
and
insb
lcall
adc
pop
sbb
push
adc
push
pop
jae
fisttpl
or
add
andb
xchg
mov
fsubl
pop
data16
xor
out
decb
sbb
rorb
jno
lahf
or
stos
add
jmp
add
adc
jmp
fwait
jge
aad
enter
or
outsb
pop
dec
cmp
movsb
fistpl
lds
test
vpunpckhbw
cmc
mov
repnz
xlat
mov
shll
pop
stos
push
pushf
cwtl
cmpsb
daa
cltd
sbb
clc
js
jecxz
iretw
and
xchg
js
cmpl
outsb
cmp
pop
add
gs
and
in
add
mov
imul
mov
pop
ja
pop
xor
pop
mov
jb
sbb
adc
and
mov
pushl
sti
push
xchg
imul
sti
fldt
js
or
rolb
add
or
or
dec
cmp
lret
leave
shr
or
xor
lret
inc
pop
outsl
icebp
xlat
jbe
aas
inc
ret
daa
xor
mov
jp
leave
test
mov
repnz
dec
sbb
ja
adc
imul
fldl
push
fildl
lock
dec
loopne
pop
mov
div
imul
mov
out
dec
inc
mov
lcall
std
out
mov
call
ficoms
jb
mov
iret
icebp
lods
xchg
in
and
xchg
sub
pusha
bndstx
movl
adcl
adc
and
mov
jecxz
adc
cmp
mov
or
cld
outsl
loopne
insb
shrb
add
jb
cmp
or
cmc
out
pop
fcomp
icebp
xor
in
jl
hlt
push
icebp
out
dec
pop
jns
pop
mov
movb
lods
push
cmp
pop
mov
imul
test
arpl
jle
adc
xchg
fbstp
outsl
popf
add
push
shll
mov
lret
rcrl
lods
test
daa
xor
add
dec
pop
cltd
or
add
mov
cli
mov
cmc
mov
lret
pop
adc
popf
mov
cwtl
int3
ret
xor
pusha
lret
inc
dec
std
daa
std
ror
dec
sahf
push
xlat
cmpsb
cmpsl
mov
or
dec
ljmp
sub
pop
mov
scas
jecxz
jb
in
insl
xor
pop
mov
stos
jle
iret
push
cmp
mov
and
mov
sub
bound
mov
or
xor
fmull
adc
movhps
pop
outsl
jg
inc
out
mov
mov
dec
mov
add
sbb
jns
ss
dec
loop
or
loopne
adc
inc
jp
nop
inc
pop
scas
imul
jbe
add
mov
xchg
rcrl
sub
stc
sub
xor
xor
std
xor
inc
inc
imul
mov
inc
or
add
test
and
es
cmpsl
pushf
fldenv
xor
sbb
add
nop
or
orl
sbb
aas
and
or
mov
out
pop
inc
je
aad
clc
arpl
sub
sbb
add
inc
stos
sub
incl
add
bnd
adc
mov
jne
out
jl
into
mov
and
xchg
pop
mov
mov
aam
ds
aad
iret
notb
xorl
mov
stos
shl
jmp
xor
stos
lods
fmull
adc
sar
arpl
cld
hlt
inc
lods
test
xchg
mov
add
or
ljmp
fwait
shlb
and
pushf
jl
pushf
faddp
inc
out
xchg
xchg
add
mov
mov
lds
insb
loopne
xlat
inc
jb
sarl
mov
rolb
loope
fistps
notb
sbb
rcll
add
cmp
add
and
inc
aad
imul
jnp
in
mov
cld
cs
stc
xor
scas
sub
cli
shrb
clc
clc
mov
xor
cmpsb
aam
std
test
dec
ljmp
arpl
cmp
in
shlb
aaa
mov
sub
pop
sbb
sahf
stc
cli
push
addr16
sbb
and
in
in
mov
loop
pop
addr16
or
and
les
adc
test
jo
adc
pushf
jmp
mov
fsubrl
movsl
in
adc
bound
xchg
sbb
push
cli
dec
aam
mov
mov
inc
add
pushl
add
lret
inc
enter
sarl
mov
adc
pop
lahf
xorl
or
bound
subb
or
cltd
mov
or
out
inc
sub
into
mov
mov
leave
sub
sbb
mov
push
adc
stos
jno
roll
pushf
insb
clc
repnz
stos
sbbl
jo
xchg
mov
add
mov
test
mov
pop
lods
rclb
lahf
in
pop
jg
int
cmpsl
call
xchg
outsl
cmp
ds
mov
mov
loope
pop
test
sbb
lret
fdivrp
mov
add
adc
push
mov
aas
push
cmp
jnp
call
pop
notl
push
sub
and
in
dec
hlt
push
jecxz
or
push
dec
stc
xchg
adc
mov
add
add
aam
or
jg
jb
ret
or
push
jns
clc
mov
jnp
jnp
fwait
jne
mov
dec
jge
push
icebp
int
loop
insb
push
cmp
addr16
aad
mov
int
jnp
loope
ja
jns
mulps
fbld
clc
push
mov
or
jge
mov
and
dec
mov
ss
or
fstps
push
mov
dec
push
testb
mov
jp
inc
test
cmpsl
fs
inc
mov
sbb
dec
mov
arpl
or
out
scas
ud0
sub
sarl
fmuls
and
inc
sub
sbb
loop
sbb
movsb
xchg
cmp
sub
scas
cli
sub
mov
mov
or
or
jb
push
fld
push
xor
loop
push
lods
push
mov
dec
or
outsl
in
sub
xchg
in
mov
mov
mov
pop
in
fmuls
into
ret
out
mov
push
insb
repz
nop
leave
cmpsl
dec
sbb
or
xchg
add
into
lcall
mov
and
add
xchg
xor
cli
jmp
cmp
sbbb
rcrb
mov
pop
fwait
dec
pop
mov
fneni(8087
repnz
adc
pop
dec
sbb
aam
dec
add
push
pop
pop
and
jge
mov
std
call
loop
mov
inc
mov
mov
test
mov
data16
inc
lcall
ret
mov
loope
or
subl
or
leave
fstp
jge
sbb
decl
xor
ret
out
lods
loop
popf
adc
pop
mov
in
in
pop
fcompl
pushf
and
add
add
pusha
fcomps
sarb
push
cmp
sub
movsb
mov
or
jae
stos
lahf
mov
push
lock
lods
mov
popf
xchg
jmp
mov
add
adc
mov
pop
out
mov
movsb
pop
cmc
xchg
adc
aad
inc
ficoms
xor
ljmp
mov
sbb
in
xor
pusha
push
sub
cmp
push
in
mov
pop
jp
clc
lret
and
jg
nop
fisubrl
lret
push
xor
inc
test
and
fisttpll
pop
gs
fidivrs
into
stos
stc
daa
add
sbb
pop
push
jp
lods
mov
sti
les
loope
clc
mov
and
ret
jns
ja
xchg
insl
xchg
sub
in
cmp
stos
pop
imul
xor
xchg
xchg
adc
loope
xchg
js
leave
hlt
loope
dec
adc
cld
adcl
es
testb
mov
mov
dec
jecxz
shlb
fldenv
je
stc
rol
loope
mov
ss
out
jne
xlat
scas
or
mov
fsubr
dec
lock
aas
fistpl
cmpsl
inc
andb
or
mov
xor
ret
divb
jnp
push
sub
and
fucomip
data16
push
dec
ljmp
mov
jno
sub
mov
inc
push
push
gs
add
xor
aad
fmull
cltd
aas
cmpsl
sbb
in
outsb
gs
sbb
push
fbstp
call
push
push
ja
lods
jae
mov
pop
xlat
mov
dec
and
sub
std
dec
pop
cmp
pop
fistps
mov
stos
mov
sub
pop
adc
lods
jg
outsb
pop
sub
ljmp
sub
or
mov
or
jae
mov
xchg
aaa
push
inc
lcall
jno
add
mov
movsl
call
insl
sti
push
addb
mov
aas
dec
push
and
ficoml
jns
mov
jns
cs
pop
or
popf
test
enter
inc
inc
sahf
or
jb
jnp
dec
pop
and
mov
or
sbb
sub
xor
das
dec
adc
ret
jbe
clc
lret
stos
add
sarl
mov
and
lods
popl
sub
fwait
lods
lods
daa
xchg
jle
push
in
cmp
jmp
push
outsb
mov
push
pusha
in
data16
js
sbb
sbb
popa
mov
popa
in
lcall
popf
outsb
mov
into
lds
xor
sbb
imul
pop
clc
cli
std
cltd
sub
cmp
mov
push
inc
fistps
pop
and
jne
hlt
pushf
mov
sub
lock
outsb
jmp
cmpl
mov
mov
mov
lods
mov
ljmp
inc
shrb
ficompl
idivb
stc
sub
ds
and
sti
sub
arpl
ret
sub
xchg
xchg
pop
hlt
iret
xor
fildll
fs
jb
lea
es
xchg
dec
push
ret
mov
out
cltd
and
jb
mov
inc
cmpsl
movsb
inc
and
cs
cmp
adc
ffree
pop
push
mov
rol
popf
movsl
out
pop
aas
push
sub
xor
mov
xchg
orl
mov
xor
out
gs
lds
mov
and
aam
outsb
mov
arpl
xlat
movsb
mov
mov
pcmpeqb
mov
jbe
jae
jmp
fldl
stos
lret
cmp
jbe
dec
jb
arpl
dec
add
gs
jecxz
and
or
or
or
lea
in
or
mov
adc
fst
mov
cmp
push
jge
dec
and
fwait
movsl
mov
xchg
test
lret
inc
sbb
mov
imul
out
repnz
push
cmpsb
add
jnp
jo
cmp
fimull
jbe
jge
movsb
inc
es
and
add
shl
test
in
add
mov
fildl
stos
popa
movsb
outsl
add
jbe
push
push
inc
dec
dec
sub
cmpsl
es
xor
int
push
iret
mov
dec
dec
pusha
sahf
adc
adc
imul
cmp
mov
fwait
xlat
add
jmp
and
mov
push
lret
mov
lret
jmp
out
shll
sub
cmp
stc
mov
daa
jge
jbe
out
xor
movsl
push
pop
ficoml
mov
scas
jp
dec
and
fdivrl
adc
mov
imul
in
mov
mov
pop
dec
lock
cli
lret
add
decl
addr16
xchg
lret
aaa
in
inc
mov
mov
std
inc
rorb
aas
xor
add
pop
addl
sbb
hlt
out
test
lods
daa
add
loopne
dec
jl
xchg
call
loope
and
mov
into
add
mov
pop
push
lret
push
into
sbb
mov
sarl
mov
or
movsb
test
pop
sbb
pop
push
sbb
test
inc
push
cmp
cmp
sub
jne
rcrl
xchg
ss
add
fsubr
ja
imul
dec
mov
mov
fs
push
pop
jb
enter
js
test
mov
addr16
jno
ja
pop
mov
and
je
fcmovnb
sbb
sub
test
cwtl
jbe
sahf
push
cmpsb
or
jb
call
scas
fidivs
shr
loopne
cmpb
out
push
mov
sarl
and
outsl
inc
jmp
lret
pop
pop
repnz
and
xor
cltd
cld
add
rcrl
adc
rclb
arpl
jge
test
imul
inc
mov
cmpsb
mov
xor
in
dec
inc
andl
dec
sbb
rcrl
and
outsb
mov
mov
xchg
jns
mov
and
push
ja
out
test
gs
sub
jl
and
push
push
add
mov
and
loope
rolb
mov
sysret
sbb
mov
daa
xchg
xchg
fisubrs
xor
mov
orb
int3
pop
test
add
and
jecxz
test
dec
cmp
inc
repz
imul
imul
add
xor
lock
gs
xchg
lods
add
xchg
insl
repnz
inc
rorb
or
jp
sbb
push
mov
mov
cwtl
sbb
sub
fs
adc
sub
mov
mov
out
je
xchg
xchg
ds
inc
in
pop
movsb
negb
aad
jb
or
stos
mov
icebp
vpmacsdqh
stos
mov
test
repz
mov
imul
inc
xchg
hlt
aas
mov
cmp
rcr
ret
dec
enter
push
cmp
mov
ret
push
in
lahf
mov
xchg
rolb
ds
xor
cmpsl
push
mov
and
push
andl
or
outsl
add
lock
adc
sti
mov
lock
lret
out
fcmovb
inc
ja
mov
lret
js
jbe
enter
adc
mov
sub
push
sbb
shlb
cmp
pusha
pop
sbb
inc
hlt
scas
into
or
inc
push
cmp
pushf
push
push
sub
shll
push
in
ud2
out
mov
xchg
xor
add
sub
hlt
jbe
or
cmp
call
lret
shrb
subl
call
in
loopne
add
mov
or
test
xchg
mov
orb
orb
inc
or
pusha
out
mov
fldcw
mov
dec
jecxz
mov
ljmp
xorb
fucomp
mov
mov
lds
dec
jbe
test
or
inc
mov
cmc
sub
cmp
mov
bound
imul
cmp
adc
ljmp
jge
loope
das
adc
mov
cwtl
es
sbb
dec
sti
call
xchg
xor
data16
pusha
icebp
mov
sbb
int
cli
loop
dec
mov
ss
lods
in
stos
push
or
xchg
mov
sub
into
repz
aas
cmpsb
decl
push
fwait
les
jno
pop
fwait
movlps
sti
insb
sahf
lea
dec
jbe
xchg
push
push
adc
mov
or
fists
cmp
roll
xor
out
in
jne
push
lret
je
add
and
es
inc
scas
stos
cli
fs
pop
xor
ficoms
ja
push
imul
mov
add
testb
cmp
aad
repnz
and
jle
fabs
sub
push
stos
adc
test
push
pop
subb
pop
or
pop
pushf
jns
out
xor
cwtl
fisubrs
xchg
lods
push
xchg
sub
or
cmp
mov
xchg
insb
pop
rcrl
scas
push
fsubrs
addl
les
mov
test
mov
mov
fdivs
adc
lea
xchg
xlat
out
pop
mov
sub
dec
push
ret
inc
loop
mov
jp
jnp
fdiv
pushf
inc
adc
cmp
scas
inc
lock
cmp
stos
rcll
mov
xor
loope
adc
add
loope
cltd
std
imul
mov
test
mov
add
lds
int
les
lret
sti
push
add
cmp
mov
rcrb
outsb
dec
popf
or
aam
cmp
out
sub
jl
lods
scas
and
ffreep
sti
push
insb
shrb
ds
mov
mov
add
xchg
add
fmuls
lds
leave
outsl
xor
cli
inc
movsl
and
popf
std
add
xchg
lea
int3
ffree
sbb
je
insb
add
ret
pop
mov
fisubrs
xchg
add
mov
stc
leave
pop
mov
pop
cmp
sbb
pop
jle
hlt
jne
lock
jo
dec
cli
iret
mov
in
push
and
inc
mov
jb
pusha
jge
cmp
mov
in
xchg
cmp
mov
int
pop
adc
jno
pop
fsubs
dec
dec
dec
loopne
lea
sub
push
xor
mov
fsubrp
fisubrl
xchg
jo
dec
arpl
aad
sar
add
repz
lock
mov
jp
cli
push
and
ret
scas
pop
or
sbb
adc
pop
jae
jmp
test
jae
packsswb
or
cld
and
inc
scas
ficoml
test
sbb
rcrb
data16
mov
xchg
add
or
test
adc
cmp
cmpsb
adc
loop
push
lock
fimuls
or
or
outsb
in
add
out
mov
xor
ljmp
lock
push
hlt
sub
xor
jmp
stos
mov
cld
inc
ljmp
dec
push
adc
mov
xchg
ret
popa
jb
or
cmpl
inc
xchg
fidivrs
adc
repnz
out
mov
repz
outsb
ret
or
pop
mov
xchg
and
out
pusha
cs
ds
mov
cmp
loop
aas
test
fmuls
cmpsb
or
cs
pushf
jp
jl
insl
aas
cmp
sbb
add
out
mov
xlat
movsl
std
or
inc
mov
sti
mov
add
imul
and
dec
fucomp
ljmp
push
test
sbb
xor
test
push
call
fsubrl
inc
cmp
jmp
and
clc
xchg
or
out
jle
pop
cmpsl
sub
jmp
sub
dec
dec
mulb
mov
es
push
xchg
daa
lds
cmpb
mov
fnstsw
ret
mov
mov
scas
cltd
fnop
fcmovnu
push
imul
outsb
push
mov
xor
rolb
or
xor
mov
sbb
movsb
sub
xchg
jecxz
cmp
sub
jns
sub
dec
pop
aad
push
test
mov
pop
mov
cld
lds
js
filds
std
test
sarl
cmp
pop
gs
push
icebp
clc
xor
in
xor
xchg
and
pop
rcrb
ror
lret
push
xchg
dec
repnz
cmp
push
cli
mov
jp
pop
cmp
dec
xchg
pop
adc
aaa
sbb
bound
adc
out
push
push
sbb
decl
xor
sub
mov
push
inc
adc
outsl
loop
out
fwait
mov
push
jge
xchg
ficomps
adc
jle
inc
mov
arpl
or
aaa
daa
data16
jbe
or
add
pushf
or
out
jge
dec
test
pop
and
mov
add
cmpsb
pop
push
loop
xor
loop
jg
adcl
and
nop
and
mov
test
jecxz
int3
pop
adc
mov
subl
sbb
xchg
cmpb
mov
pop
addb
outsb
inc
aam
dec
cltd
ljmp
jl
das
lds
lea
test
dec
pop
out
add
movsb
sub
mov
cmp
lods
into
sub
cli
sub
push
lds
iret
out
adc
es
push
aad
mov
push
push
cmc
adcl
xchg
mov
rol
mov
call
movsb
sub
daa
andps
in
and
pop
dec
adc
into
bound
insl
sbb
cld
jge
popf
inc
jae
rclb
mov
loopne
and
and
push
clc
pop
adc
and
adc
lods
sub
xchg
inc
adc
clc
fdiv
rclb
sbbb
pusha
fwait
add
cmp
or
sahf
adc
xor
icebp
js
xlat
mov
sbb
popf
mov
push
sub
int
add
int
mov
mov
pop
mov
inc
xchg
test
out
add
push
daa
mov
rcll
es
ficoms
mov
loopne
addl
push
test
mov
pop
int3
pop
inc
lods
inc
xchg
rclb
clc
notl
cmpsl
jmp
xchg
sub
jne
pop
daa
and
jle
mov
cmp
inc
fstp
stos
push
cltd
or
cld
cld
repz
pop
popa
xchg
fisttps
push
mov
mov
jb
aad
add
movsl
adc
cmp
lcall
xchg
add
cmpb
subb
leave
mov
fidivs
xor
mov
sbb
andb
push
pop
test
fs
dec
insb
cmpsb
and
xchg
pop
and
xorb
dec
adc
and
loopne
je
in
loopne
stos
push
inc
fmull
arpl
loop
add
add
jae
dec
pop
popa
mov
pop
fcoms
cmp
adc
xchg
loop
sub
xor
cwtl
xchg
sub
and
inc
jecxz
frstor
icebp
es
call
push
dec
ljmp
and
sbb
xor
sbb
xor
adc
mov
outsb
imul
cli
js
xor
cmc
dec
inc
scas
ss
sbb
ja
or
pop
dec
outsl
pop
loop
insb
fsts
mov
stos
popa
mov
scas
cs
pop
inc
icebp
sub
jae
leave
movsl
sbb
jo
cmp
jge
shlb
lcall
or
notb
test
adc
nop
addl
int3
push
idivl
insl
ret
frstor
sbb
pop
arpl
pushl
jg
call
or
ret
add
or
jbe
mov
xchg
in
sahf
mull
and
aaa
sbb
mov
ret
subl
sub
add
sub
fs
ss
dec
lahf
xlat
jl
sub
cs
arpl
xchg
xchg
push
scas
xchg
clc
iret
mov
fincstp
pop
or
jecxz
inc
push
xor
or
stos
mov
arpl
int3
loop
mov
sbb
adc
lds
outsl
js
xchg
test
cmpsb
lret
and
add
xchg
mov
push
outsl
adcb
xor
in
sub
xlat
jne
jo
js
sbb
repnz
scas
cmpsl
inc
xchg
inc
jmp
dec
push
dec
aaa
sbb
mov
lds
or
aas
adc
or
and
inc
in
movl
test
dec
je
mov
jg
in
loop
sub
cld
sub
mov
lret
out
xchg
fneni(8087
pop
jae
in
enter
sti
jg
sbb
sbb
jp
js
xchg
lods
inc
mov
out
add
fsubs
in
fdivs
add
ja
or
rol
jp
push
jge
lods
xlat
lret
sub
mov
stc
pop
arpl
adc
mov
scas
dec
fs
arpl
sub
es
add
and
jbe
lret
fwait
sub
pusha
lret
jb
and
in
out
addr16
dec
js
call
pop
cmp
adc
fiaddl
shrb
loopne
mov
icebp
lds
stos
dec
jno
sub
iret
inc
lahf
pusha
notb
shr
or
popa
test
ja
clc
fs
add
mov
inc
cmp
mov
rorl
mov
mov
cmpsl
jo
mov
adc
pushf
xchg
inc
cmc
fidivs
sub
and
and
es
lret
cld
addb
sub
adc
sahf
pop
push
jo
adc
test
aad
xchg
aad
or
ret
cmp
dec
push
or
cltd
dec
incl
pusha
jle
pop
jno
ret
mov
mov
jmp
imul
dec
xchg
mov
or
cmp
mov
mov
addl
dec
cmpsl
mov
mov
and
icebp
dec
outsl
in
test
cmpsb
and
mov
shl
lods
jb
and
mov
mov
push
testb
pop
xchg
sub
outsb
add
or
rcll
push
pop
shl
inc
push
mov
fcompl
sub
addb
js
push
fcomps
dec
out
mov
or
lds
sbbb
xchg
test
cmp
shll
mov
push
push
in
and
fadd
and
mov
cwtl
fldcw
or
push
mov
xchg
adc
pop
lods
sbb
loopne
subl
ja
aam
outsb
jbe
mov
or
lds
in
fisttpll
xchg
dec
movsb
bound
mov
clc
or
xchg
fsubs
test
dec
lock
inc
test
mov
fs
cld
sahf
or
xor
popa
dec
cmc
jl
sub
jmp
xor
test
imul
and
mov
movsl
popa
test
jne
or
clc
sahf
pop
mov
shr
mov
cmp
xor
sarb
mov
and
sti
xchg
jmp
es
jge
arpl
les
mov
xchg
popa
dec
dec
mov
xchg
pop
or
pushl
mov
push
and
pop
insl
and
jns
cmpsb
mov
pop
lods
rcrb
or
scas
push
jbe
int
push
hlt
adc
jge
and
mov
ss
iret
adc
mov
pop
std
enter
cmp
pop
je
add
test
js
jne,pt
cmp
imul
int
lcall
cmp
dec
jl
cmp
enter
pop
and
and
pop
in
call
cmp
inc
add
int
sarl
ljmp
out
clc
hlt
sbb
mov
ret
pop
dec
ret
ja
inc
cmp
push
pop
mov
push
dec
fmul
movsb
icebp
inc
push
stos
mov
scas
mov
mov
out
pop
or
inc
pop
sub
popf
mov
or
cmpsb
movsb
ret
outsl
add
shlb
lock
or
repnz
fxch
and
ds
mov
jns
scas
mov
les
cmp
fidivrs
cwtl
bound
sahf
pop
jo
outsb
leave
jg
push
jmp
jbe
ja
stc
adc
push
sbb
lock
adc
inc
mov
ficompl
pop
out
mov
mov
fnstsw
pop
aad
or
cli
mov
or
jno
shrb
jo
jns
insb
shll
adc
jg
and
insl
mov
insl
lods
jle
je
aas
push
fdivrs
fs
outsb
push
imull
or
cmp
movsb
js
out
icebp
xchg
adc
adc
das
jae
adc
pop
pushf
cmp
dec
pop
imul
mov
adc
arpl
shr
push
sub
ljmp
lea
inc
sbb
jmp
sbbl
mov
lcall
mov
jl
gs
iret
mov
and
mov
mov
ret
ficoml
lret
pop
aas
nop
push
insl
jns
sbb
xor
push
mov
mov
xchg
sbb
dec
test
jae
inc
pop
jge
ficoml
sub
inc
notb
rclb
test
inc
ret
or
jg
or
fadd
mov
pop
xor
mov
push
testb
shll
and
in
mov
mov
sbb
xor
repnz
pop
call
push
and
les
pop
mov
mov
push
sbb
pushf
mov
fiaddl
insl
push
jg
jnp
xchg
clc
mov
xchg
jge
mov
mov
fimull
adc
popa
or
pop
add
xlat
enter
pop
fiadds
outsl
out
fs
mov
jmp
inc
jp
adc
stos
paddsb
mov
outsl
dec
jne
in
nop
in
lret
mov
bound
mov
int
push
insl
mov
movsl
sbb
mov
in
movsl
or
jo
jnp
dec
dec
insl
cmp
or
or
jo
and
push
mov
mov
mov
addr16
cmp
mov
pop
sbb
stos
outsb
ja
xor
adc
dec
daa
popa
inc
adc
mov
inc
cli
scas
xor
xchg
cmpsl
and
out
adc
mov
adc
ds
xor
push
clc
push
sub
adc
fldenv
aas
add
cmp
mov
cmp
jmp
out
cmpb
sub
mov
lea
out
mov
test
clc
out
sbb
lock
jnp
and
stos
outsb
mov
mov
outsl
out
ds
bound
xor
pop
mov
cmpsl
push
test
and
and
push
add
test
ss
sub
addr16
adc
push
adc
les
cmp
jnp
lds
int3
push
mov
test
rolb
inc
lcall
loope
or
repz
push
cmpsb
pop
inc
cmp
test
sub
xor
jnp
inc
aaa
insb
push
pop
cmp
rorb
cmpsl
xchg
fsubs
popf
adc
xor
xor
pop
and
scas
addl
cmp
or
dec
int3
js
jle
pop
rorb
jnp
iret
stc
ret
pop
mov
push
fidivrl
cmp
icebp
arpl
dec
fnstsw
xor
adc
inc
test
or
adc
inc
movsl
jae
sbb
loop
movsb
dec
adc
sub
out
fs
das
cs
cmc
sbb
xchg
pop
aas
loope
mov
ss
sbb
out
jl
sbb
sub
aas
fwait
lods
loopne
jle
jl
mov
xchg
inc
loope
lods
leave
out
xchg
clc
push
out
adc
das
add
inc
adc
pusha
lea
sti
stc
add
data16
andl
in
cmpsl
and
jge
sub
sbb
push
add
pop
lret
fldl
repnz
add
pop
stos
pushf
xor
xor
push
jecxz
outsb
popf
notl
rol
fldl
aam
xchg
pop
test
and
dec
mov
push
lock
adc
mov
test
fwait
push
scas
cmp
push
inc
daa
in
repz
loopne
decl
and
jo
loopne
cmp
shrb
add
jae
sahf
jns
stc
lds
jp
scas
or
int3
jo
loope
jle
mov
into
pusha
or
xor
jb
filds
xchg
mov
xchg
adc
xchg
inc
and
fdivl
pop
or
hlt
shrb
clc
stos
lea
dec
into
insl
lret
pop
add
notb
jmp
jno
mov
rolb
addr16
add
jo
sbb
cmp
push
pop
in
pop
ror
push
pop
adc
jl
cmc
out
xor
mov
mov
mov
int
jns
in
jns
xchg
mov
xor
js
push
xchg
sahf
rcrb
sub
pop
jmp
pop
hlt
rcr
and
js
out
iret
mov
xlat
scas
popa
or
xchg
in
dec
add
or
je
int
dec
test
ljmp
out
xchg
xchg
aaa
fdivrp
mov
sbb
mov
mov
std
add
jbe
pop
out
popa
loope
xchg
arpl
inc
sbb
xchg
out
mov
or
flds
int3
jae,pt
dec
mov
cli
cmp
pop
sub
sbb
imul
push
adc
mov
inc
inc
cmc
push
lea
xchg
cmpsb
inc
adc
pop
jns
push
inc
mov
adc
stos
outsb
insl
xlat
imul
push
adc
loop
inc
in
mov
cld
push
nop
jle
out
es
mov
pop
pusha
xchg
pop
bound
lahf
sbb
ret
divl
jno
or
mov
adcb
daa
mov
jmp
fwait
jb
insb
jle
in
xchg
jmp
pop
xchg
mov
shlb
inc
xchg
dec
mov
pusha
pop
scas
pusha
add
hlt
call
sub
push
sarb
or
xchg
cmp
clc
mov
pop
xor
test
fildll
add
repnz
test
test
popf
adc
nop
stos
pushaw
dec
scas
mov
popa
push
loopne
push
mov
cmp
adc
jo
xor
lret
xchg
aam
outsl
pop
fildl
sub
pop
mov
adc
and
xchg
mov
int
lret
in
xchg
mov
pop
pop
dec
dec
cld
xchg
pop
dec
mov
adc
push
stos
xor
dec
jo
insb
dec
cmp
lea
sbb
addl
sub
cmp
inc
pop
rcrb
mov
mov
pop
adc
sbb
cli
cmp
sbb
sbb
and
mov
sahf
dec
sbb
shr
scas
lret
out
hlt
jecxz
or
icebp
clc
cmpsl
pop
dec
mov
lea
adc
aaa
es
mov
inc
pop
pop
xlat
inc
stc
cld
test
adc
repz
stc
test
adc
xlat
int
nop
pop
lods
cmovnp
dec
pop
rcr
pop
adc
push
enter
daa
mov
jbe
xlat
in
sub
mov
negl
inc
das
mov
push
mov
out
and
sub
and
icebp
jbe
loop
movsl
jbe
xor
and
sahf
out
mov
adcl
iret
jl
icebp
push
xor
xor
pushf
cmp
es
clc
sti
stc
fistps
shrb
xor
adc
int3
sarb
sar
adc
mov
xchg
jns
pop
std
mov
outsb
hlt
fsts
pushl
mov
shll
andb
lock
or
mov
fsubr
cmp
jle
mov
addr16
xlat
sbb
sbb
imulb
jo
sub
adc
jb
cld
add
mov
or
aad
push
loop
js
inc
outsb
mov
adc
sub
adc
sbb
ret
and
je
jb
in
push
pop
in
add
stc
push
and
cvtps2pd
pop
cmp
pusha
adc
jl
jecxz
sbb
ud1
or
cmpsb
dec
sbb
mov
xchg
imulb
add
sbb
push
or
inc
push
add
lahf
or
mov
mov
xlat
pop
xor
lret
add
sub
cltd
loop
mov
xor
and
int3
movsb
mov
stos
sbb
xchg
stc
aam
adc
pushf
jno
or
mov
push
dec
xchg
in
xchg
pushf
aaa
or
loopne
inc
push
test
enter
data16
mov
mov
dec
mov
jnp
pop
add
pop
bound
rcrb
push
lds
sbb
stc
mov
icebp
out
add
mov
mov
pop
cmp
mov
call
xchg
movb
push
pop
push
insl
add
mov
test
fisttpl
in
adc
adc
inc
sbb
shlb
jge
xor
cs
xchg
adc
mov
jno
jmp
roll
add
jno
cmc
add
les
and
dec
dec
xchg
lret
or
push
mov
jo
add
shll
sub
push
pusha
cmc
dec
push
xor
in
mov
ret
leave
outsl
push
ret
add
mov
jle
sbbb
pop
arpl
adc
fcompl
fs
fdivrl
aad
loopne
test
popf
mov
cmp
test
dec
es
mov
stos
or
mov
insl
fsubr
rcrb
call
push
jecxz
mov
ja
jae
cmp
outsb
popa
cmpsb
sbb
inc
movsb
or
inc
jmp
cmp
stc
cs
rol
pop
sti
mov
lods
and
xchg
xor
in
aam
mov
mov
xchg
ds
inc
out
cmp
scas
fimull
and
inc
dec
push
adc
enter
lods
in
mov
jnp
lcall
rcr
aam
push
cmc
loopne
sbb
roll
mov
mov
mov
clc
push
sarb
pop
fildll
scas
xor
jbe
ja
dec
sub
test
pusha
leave
shrb
aad
xchg
jbe
cmp
and
add
mov
cmp
push
pushf
sbb
mov
mov
sbb
std
in
sbb
in
or
fisubrl
mov
mov
lock
mov
and
jo
mov
fxch
pop
mov
mov
inc
andl
inc
je
leave
xor
pop
cli
push
cmpsb
mov
in
pop
mov
xor
cmpb
insl
jle
adc
push
lods
es
outsl
shrw
jb
mov
xchg
ret
cmp
sbbb
pop
andb
int
mov
lds
dec
insb
addr16
mov
addr16
xchg
jge
dec
cmp
pop
mov
repnz
mov
decb
cld
std
cmp
inc
scas
add
fstp
test
sbb
jo
sar
jp
ds
ss
rorb
mov
mov
adc
test
ja
nop
pop
es
mov
push
xor
pop
pop
aad
jns
aad
enter
out
rolb
add
add
jbe
xchg
cmp
push
in
iret
std
clc
xchg
and
test
adc
mov
jecxz
mov
pop
popa
and
mov
sub
inc
cmpb
cmc
scas
mov
add
jnp
push
pop
bound
mov
or
pop
jns
or
cmc
pop
cmpsb
ficoms
lret
scas
cmp
push
push
push
jns
cmp
je
xchg
pop
xor
pop
mov
sbb
fs
sbb
mov
mov
clc
in
aaa
out
filds
ja
int3
mov
mov
icebp
int3
inc
mov
jmp
fwait
sbb
jecxz
mov
ljmp
inc
das
and
stc
fs
xchg
mov
cmp
pop
int
lahf
std
inc
aaa
stos
scas
dec
scas
lahf
lea
xchg
inc
mov
test
lcall
sarl
mov
and
mov
pop
pop
clc
pop
and
cmpsb
popa
movsb
cs
inc
sub
adc
inc
pop
in
into
pop
fcomi
test
jnp
stos
jns
or
orl
xor
pop
repnz
cli
xchg
sti
push
ds
sarl
dec
inc
les
push
test
jne
jno
notb
cmp
push
in
cmpsl
mov
mov
sbb
cmp
fldcw
add
dec
mov
push
and
ss
jno
jne
jg
fwait
scas
push
pop
adc
add
sbb
sbb
outsl
pop
rcrl
lret
xchg
adc
lcall
jb
out
sbb
and
push
jg
mov
into
in
in
pushf
bound
jno
arpl
mov
dec
repnz
mov
dec
mov
into
mov
add
jnp
cmpsl
enter
cwtl
mov
scas
and
jg
pop
sub
xchg
sti
or
scas
sub
arpl
jbe
mov
imul
jnp
push
xor
lods
push
rcrl
xor
sarb
push
fdivrs
xchg
cmp
fs
aad
jb
cltd
pop
lods
pusha
fcomi
xchg
sub
ja
stos
frstpm(287
mov
sbb
sbb
jp
outsl
lea
adc
jns
xor
repnz
outsb
xchg
xor
mov
mov
xor
mov
jmp
insl
pop
aaa
jns
and
jle
loopne
add
inc
add
pop
cltd
insb
cmc
mov
int3
adc
pusha
repnz
leave
cli
sub
pop
orl
shll
lret
push
and
push
push
push
or
xor
push
lret
jne
and
sub
arpl
imul
out
fwait
pop
xor
sbb
cmp
test
lahf
xchg
addb
push
jecxz
jg
stc
fimuls
mov
mov
adc
stos
pop
sub
dec
ja
int3
pushf
cmp
xor
pop
std
rcl
fwait
dec
cmp
and
out
in
jb
les
pop
sbb
jo
mov
push
movb
aas
adc
pop
movsl
mov
sub
jnp
clc
int3
add
push
shll
jl
scas
mov
jl
pop
fstl
gs
lahf
xor
test
arpl
sbb
pusha
inc
scas
aam
into
and
mov
jge
adc
add
mov
sbb
pop
add
cs
call
sub
or
nop
inc
adc
or
mov
xorl
fdivr
or
popf
push
sub
lods
mov
cli
mov
test
sub
stc
mov
in
push
push
or
xor
lods
or
icebp
or
mov
cmp
inc
inc
xor
mov
pop
inc
outsl
jge
push
imul
lahf
repz
stos
and
and
mov
aam
std
adc
adc
sub
outsl
and
repnz
push
and
jo
pop
orl
pusha
icebp
push
mov
jp
or
cmp
sbb
jns
jb
adc
pop
test
les
jecxz
repz
cmp
xor
wrmsr
mov
cmpsb
jnp
jo
mov
and
popf
xchg
xchg
mov
push
and
stos
mov
addb
fs
testb
mov
dec
mov
sub
scas
pop
mov
cltd
pop
cmp
mov
test
lds
mov
sbb
nop
insl
pop
xchg
shrb
cmp
cmc
dec
jecxz
jl
fcoml
xchg
inc
into
es
pop
ds
push
hlt
xlat
fwait
or
fstps
inc
stos
add
sbb
xchg
in
stc
mov
pop
xor
pop
insb
or
mov
mov
xor
stos
movsl
dec
mov
push
mov
jmp
add
sbb
insb
adc
push
call
stos
in
and
out
sahf
gs
push
add
xchg
push
inc
ret
test
dec
mov
cmpsb
std
or
mov
cmc
inc
test
mov
sbb
mov
jae
push
cwtl
lcall
je
daa
push
push
lret
pop
mov
outsb
cld
push
leave
pop
test
cwtl
imul
mov
mov
inc
mov
out
fistpll
loopne
cmp
mov
xchg
arpl
lock
jl
or
or
jle
aaa
mov
and
rcr
pop
add
jle
out
push
sbb
std
outsb
pop
divb
xor
add
movsb
push
add
xor
cmp
ljmp
pop
loopne
cmpsl
pop
adc
jl
add
jl
or
inc
out
addb
add
mov
je
ljmp
jbe
movsb
mov
jbe
arpl
call
mov
xor
pop
arpl
jns
repz
and
push
fstp
inc
fsubs
and
incl
xchg
mov
popf
test
mov
sub
sbb
je
cld
adc
add
call
adc
test
and
shll
push
dec
xchg
and
aad
imul
lds
into
sbb
pop
add
mov
and
dec
mov
mov
add
les
jno
cmp
mov
mov
sbb
and
and
pop
pushf
in
push
push
xchg
stc
pop
add
jmp
dec
test
fists
into
aam
call
aas
mov
push
sub
dec
jb
push
mov
mov
add
cmp
popf
sbb
and
and
xchg
sarb
cmp
xchg
dec
push
xor
ljmp
das
pop
sub
lret
aam
mov
loop
ja
shrl
jmp
xchg
or
stos
stos
and
lcall
push
mov
push
push
pop
mov
ja
scas
dec
lret
lea
int
push
push
jnp
adc
cmp
inc
xchg
dec
test
cli
cmpl
sbb
aam
sahf
inc
and
lds
mov
add
andl
mov
cli
inc
pop
mov
jne
and
pop
hlt
mov
mov
pop
inc
inc
and
js
sbb
clc
push
ja
fstpt
jnp
xchg
or
lahf
push
fmull
orl
stos
data16
repnz
call
jmp
cwtl
imul
outsl
and
mov
inc
jl
mov
and
lock
jo
out
in
jecxz
mov
cmc
sar
xor
mov
mov
jge
xchg
ljmp
and
fistps
popl
mov
ss
loope
adc
hlt
cmpsl
icebp
gs
sti
ret
add
sub
hlt
mov
das
cmp
fiadds
or
lret
jmp
inc
push
andb
mov
and
sarl
mov
jge
mov
add
out
loopne
loopne,pt
xchg
add
dec
push
addr16
mov
aaa
dec
push
insb
mov
fbld
and
js
test
lahf
imul
add
xor
and
cmp
mov
aam
mov
mov
mov
lds
mov
mov
mov
jl
xor
sbb
sbb
sbb
out
xchg
cld
xor
inc
sbb
in
lods
xchg
pop
pushf
imul
xor
scas
dec
lods
mov
inc
mov
xor
sahf
inc
loopne
movzwl
dec
jmp
aaa
insl
lods
xor
or
in
mov
add
and
pop
or
into
rcrb
ds
sbb
push
or
enter
cmpsl
inc
test
fs
ds
mov
inc
iret
cmpsl
sbb
push
add
shrl
pop
adc
inc
cmp
and
loope
in
in
jl
adc
inc
sar
jne
xor
call
rol
movsb
mov
adc
or
sbb
out
dec
jne
pop
out
inc
lahf
stc
mov
outsl
adc
scas
xor
push
xor
nop
mov
test
aam
fdiv
mov
les
jl
cmp
inc
xor
dec
movsl
sbb
sbb
repz
lods
ret
cmp
mov
pop
fiaddl
lods
pop
adc
or
popf
jge
test
xlat
dec
mov
cmp
xor
cmp
add
mov
pop
mov
xor
movsl
imul
nop
sti
icebp
xchg
in
dec
add
data16
dec
mov
cltd
mov
sbb
or
test
mov
out
pop
xchg
sahf
movsb
aas
mov
lock
mov
cli
cmp
mov
mov
in
xchg
cmp
cmc
pop
dec
pop
notb
mov
dec
xchg
inc
cltd
pmulhuw
push
insb
loop
insl
mov
data16
push
pop
mov
xchg
ds
lcall
or
lret
xchg
or
and
aam
push
movsb
jno
dec
movsl
mov
sbb
sbbb
decb
mov
gs
mov
fmul
lcall
arpl
aaa
data16
adc
rorl
mov
ret
jo
xchg
jne
clc
movsl
xchg
mov
jno
lcall
mov
ljmp
int
xor
dec
stos
mov
push
test
cmp
sahf
dec
aaa
sub
jns
shr
mov
fisubrs
mov
dec
movsb
mov
ljmp
aam
sub
fdivrs
sbb
outsl
insb
outsb
inc
iret
repz
inc
in
into
xchg
bswap
or
add
xor
fdivs
aaa
stc
mov
add
loope
xor
mov
push
jp
jle
ss
and
jge
pop
rcl
push
stos
pop
mov
jbe
aaa
jbe
inc
popf
and
mov
xchg
inc
lahf
dec
jnp
adc
movsl
call
mov
jne
dec
insb
scas
mov
adc
sti
adc
jle
cmp
cwtl
ljmp
das
loope
sbb
add
aam
sbb
xchg
fistpl
mov
mov
dec
mov
jmp
push
xlat
cmp
mov
enter
mov
push
lods
pop
test
call
cmp
icebp
ds
cmc
divb
mov
movsb
inc
stc
push
inc
mov
sbb
rolb
lcall
mov
stos
rorl
cmp
inc
dec
lcall
or
enter
out
cld
fadd
aaa
scas
sbb
and
xlat
pop
into
inc
push
inc
mov
mov
xchg
lods
mov
sub
mov
or
pop
mov
clc
mov
xchg
test
mov
lcall
jg
jb
aad
cmp
repnz
pop
or
imul
dec
hlt
insb
xchg
lahf
xor
sub
js
repnz
dec
inc
cld
cmpsb
push
jnp
bound
int3
std
mov
or
cs
gs
sub
mov
xchg
cmp
hlt
cmp
shl
push
lcall
sub
xchg
pop
and
clc
inc
inc
out
mov
outsb
sbb
std
mov
xchg
adc
fsubs
push
inc
leave
hlt
insl
jno
and
dec
sub
test
xchg
in
fwait
lret
cmc
mov
jne
xchg
out
push
scas
repz
int3
adc
inc
jmp
adc
out
pusha
out
xor
fistl
andl
push
popf
clc
test
push
push
test
fadd
jae
lcall
sub
jecxz
push
xchg
scas
pop
inc
into
test
xor
mov
dec
jecxz
pusha
lock
push
mov
mov
sbb
push
cmp
les
add
sbb
rcrb
clc
cmp
mul
lods
and
dec
subl
jecxz
inc
int3
cmpl
jb
cs
mov
mov
nop
popa
icebp
in
pusha
xchg
sub
push
sti
adc
mov
mov
or
push
inc
call
cwtl
loopne
cmpsw
lods
int3
sahf
pop
ret
ljmp
rolb
insl
int
pop
mov
adc
xchg
aad
xchg
xchg
sbb
or
mov
inc
mov
lea
cltd
shll
movsb
sahf
in
pop
mov
adcl
pop
xor
mov
pop
and
fcoms
xchg
push
daa
dec
jns
adc
imul
imul
cltd
mov
les
loope
ret
aam
mov
stos
das
push
mov
or
mov
idiv
cmpsl
test
jmp
icebp
xlat
into
xchg
ja
push
es
mov
ficoms
mov
add
mov
sqrtps
dec
mov
jno
pop
mov
jb
push
int3
mov
and
push
push
push
ret
mov
outsb
aas
clc
lock
pop
fdivrl
in
adc
in
mov
cmp
inc
mov
mov
xor
cmc
sub
cmpsb
js
mov
mov
out
int
cld
in
push
mov
mov
sub
and
aad
pop
and
inc
xor
push
jp
aad
js
jo
addr16
sbb
mov
add
push
pusha
xchg
mov
cltd
pushf
push
add
pop
loope
xchg
int3
ficomps
mov
jno
mov
pop
xor
sbb
lret
imul
xor
outsb
jae
jg
popa
icebp
push
dec
aas
popa
xor
jecxz
sub
push
popa
stos
cmpsl
cmp
imul
inc
je
insb
dec
mov
jp
out
mov
xchg
jecxz
push
movb
out
and
lahf
cmpb
xorl
add
stos
dec
mov
pop
mov
int
shlb
sahf
les
sbb
aaa
add
push
loope
cmp
push
mov
call
inc
in
insl
and
xchg
xor
fsubrl
in
lcall
xor
push
xchg
push
xlat
pop
ret
hlt
cltd
push
les
lahf
mov
scas
jns
out
insb
incb
sarb
out
aaa
sahf
cmp
cmpsl
roll
fwait
adc
fildll
and
push
movsb
dec
mov
rcrb
mov
fadds
in
mov
fistl
push
js
sub
dec
fwait
negb
sub
inc
mov
jmp
jo
or
and
scas
lret
push
fcmovbe
ficoms
jno
push
and
hlt
sbb
rorl
inc
jecxz
adc
inc
push
xchg
mov
xchg
inc
push
repnz
cwtl
push
pusha
mov
sub
addr16
dec
ds
mov
xor
mov
mov
gs
cmp
stc
fwait
into
sarl
mov
xorb
pop
push
inc
jne
cs
imul
mov
xchg
inc
pop
ja
repz
cmp
and
dec
dec
mov
inc
mov
xchg
sub
pop
scas
repnz
negb
jne
stc
rolb
push
cmpsl
lock
cmp
jmp
loope
jmp
cli
dec
shl
or
adc
xchg
fwait
sbb
xchg
adc
cmp
lret
mov
out
fwait
sbb
jb
int
pop
in
imul
add
add
sub
push
scas
mov
xchg
dec
mov
jl
in
popa
add
aas
ret
or
push
jae
mov
lock
add
fists
push
jo
in
addb
cli
enter
ss
adcb
add
std
push
xchg
loop
pop
mov
dec
idiv
or
test
inc
xor
shrb
popa
xchg
mov
or
and
push
in
mov
lock
andl
mov
or
call
pop
sub
dec
nop
call
add
lods
or
jl
fwait
jne
inc
push
push
mov
sub
rorw
cmp
ljmp
and
jnp
es
mov
mov
mov
or
pop
mov
inc
adc
and
push
repnz
incb
test
jbe
push
push
push
cmc
mov
fs
push
in
mov
stos
and
out
xchg
lret
xchg
cwtl
cld
mov
pop
mov
mov
imul
push
loopne
xchg
sub
adc
mov
rorb
push
xchg
or
ficoms
aas
pop
test
adc
or
jbe
icebp
mov
or
loop
daa
and
jmp
sub
je
mov
push
inc
es
idivl
jl
mov
inc
bswap
cmp
sbb
and
push
fdivrs
lahf
sti
cmp
cmp
lret
test
push
jge
les
fisttpll
in
aas
mov
inc
or
repnz
mov
inc
addb
sbb
dec
dec
xor
sub
int3
out
jmp
mov
push
mov
xchg
sub
push
cltd
pop
shll
data16
dec
gs
push
mov
mov
iret
mov
sbbl
xchg
xchg
add
adc
pop
and
int3
decl
cltd
cltd
pop
in
aad
leave
xchg
inc
jnp
imul
out
fdivrl
add
pop
mov
out
shlb
cld
fsubs
cli
loop
mov
fidivrl
arpl
cmc
fucomi
mov
popf
sar
jl
enter
mov
or
mov
mov
xlat
hlt
pushf
hlt
adc
sbb
fnstsw
or
and
iret
scas
out
call
push
lahf
outsb
mov
mov
adc
mov
pushf
add
add
inc
inc
test
and
jge
aad
nop
cmpsl
dec
cmp
xor
pop
mov
dec
jecxz
pop
mov
cmpsl
fcomps
sbb
mov
jbe
and
in
fstpl
cli
loop
hlt
add
jl
sub
mov
push
loope
popa
push
dec
roll
inc
push
in
sbbb
in
sub
stos
test
rcrb
lock
lods
jo
mov
mov
push
mov
inc
hlt
jb
sarb
rcrb
cmp
or
mov
cmpsb
add
sbb
jbe
out
clc
rorl
jecxz
mov
fdiv
imul
add
push
mov
lret
loopne
push
fcmove
adcb
push
inc
pop
test
mov
jl
test
les
lods
xchg
sbb
lods
cmp
cltd
adc
mov
ss
push
and
je
repz
adc
dec
mov
mov
sbb
add
mov
sub
mov
arpl
repz
adc
adcl
out
arpl
lahf
xchg
xchg
pop
stos
test
sahf
add
fstl
fwait
mov
inc
clc
gs
dec
sub
jae
sbb
fs
pop
dec
aaa
adc
fsubl
push
cmp
mov
loope
push
sub
jle
shll
push
xchg
mov
sbb
xorb
stc
enter
push
shll
xlat
movsl
popa
jae
mov
int
lea
fcomps
adc
cmp
das
pop
mov
or
ds
add
mov
jbe
xchg
cmpsb
mov
cmpsl
pop
lret
ret
repz
arpl
cmp
mov
add
aad
rcll
scas
scas
jecxz
jmp
test
ljmp
xchg
mov
flds
insl
aam
xchg
data16
cli
dec
into
cmc
lock
outsl
shlb
je
sbb
subb
sub
or
pop
cmp
popl
push
mov
sub
ljmp
loop
push
lea
or
mov
je
sarb
fwait
mov
mov
icebp
sub
sub
pop
movsb
jmp
pop
pushf
or
or
dec
fucomip
lock
xor
mov
std
xchg
push
sub
xchg
test
jg
addr16
cld
jecxz
in
push
fnstsw
pop
sahf
jmp
mov
rclb
faddl
sub
xor
fldl
shrl
mov
pop
xorb
mov
fcomi
xchg
or
jmp
adcb
sub
sbb
xor
mov
adc
sbb
imul
dec
inc
sub
and
daa
sti
sub
movsl
fisttpll
sub
outsl
pop
push
mov
add
mov
daa
xchg
pop
orl
lcall
dec
jb
jge
imul
add
push
xor
fisubrl
xor
mov
mov
jle
sbb
outsb
pop
in
lods
ret
sub
push
popa
cs
sub
scas
js
mov
cmp
dec
call
pusha
xor
adc
push
shll
cli
mov
aaa
and
pop
in
out
loope
pop
movzwl
mov
das
aam
out
ret
ret
adc
lods
ret
or
add
sahf
inc
outsl
jecxz
add
frstor
dec
cmp
ja
hlt
inc
cmp
stc
scas
push
stos
sarb
mov
jbe
shrl
mov
aam
leave
loopne
cmp
dec
adc
inc
icebp
sub
sbb
insb
outsb
inc
fcom
sti
inc
pusha
pop
mov
out
ljmp
xchg
adc
mov
xchg
jo
fildl
jp
inc
andb
in
aaa
jp
imul
cmpsb
icebp
jo
xor
add
pop
orb
stc
daa
jge
not
jmp
icebp
out
sti
inc
pop
mov
out
push
js
ss
mov
cmpsb
jecxz
dec
rclb
scas
and
push
xor
icebp
xor
das
cmpsl
mov
pop
or
out
or
lret
pop
das
sar
xor
js
aad
fcompl
arpl
mov
repz
sbb
xchg
xchg
mov
aam
or
sahf
in
stos
add
ror
loope
jle
inc
hlt
stos
xlat
push
sbb
cmp
test
add
cmpsb
out
mov
js
xchg
shl
shl
sbb
mov
sbb
roll
pop
pop
xchg
shrl
es
mov
push
inc
sarb
fisubs
push
jno
je
dec
in
cpuid
jae
imul
jecxz
jo
xchg
std
in
ror
jg
popa
cmp
pop
dec
inc
push
sbb
scas
mov
push
dec
mov
push
pop
sbb
adc
and
xchg
dec
ficoml
or
xchg
insb
aad
call
insl
sub
call
cwtl
mov
scas
cmp
xchg
add
js
pshufw
xchg
cmp
mov
cmpsl
ret
neg
xor
fs
add
dec
pop
lea
fisubrl
and
mov
xchg
xchg
fidivl
inc
xor
mov
mov
shrb
daa
cmp
cs
iret
arpl
daa
arpl
leave
push
pop
fdiv
shlb
mov
or
outsl
fcmovb
inc
sti
lcall
cmp
mov
fwait
je
bound
stos
jne
cld
xor
push
fdivrp
dec
out
imul
cmp
lcall
jge
cmpsl
aam
cmp
rcrl
xchg
stos
push
int3
xchg
pop
or
adc
dec
rcrb
dec
call
mov
dec
test
popa
and
inc
iret
mov
stos
test
stc
call
mov
jmp
ss
xchg
and
lret
fdivrl
dec
mov
in
mov
out
popa
xchg
call
or
inc
mov
push
mov
test
add
push
fidivs
in
fcompl
loopne
and
addb
mov
mov
jge
xor
xor
addl
sbb
popf
pop
mov
xor
xchg
je
clc
gs
stc
insl
adc
cli
movsl
inc
xchg
cs
push
mov
int3
loop
sub
xchg
in
add
hlt
push
inc
push
pusha
adc
negb
mov
dec
sbb
jge
aas
inc
or
jle
jg
adcl
pusha
mov
jns
insl
fistpll
cmpsl
jo
pop
ja
mov
cltd
mov
and
out
mov
or
pop
cmp
lahf
add
sub
dec
mov
fnsave
daa
xor
aad
jnp
dec
dec
xchg
or
out
je
arpl
in
jmp
cmp
je
pop
push
push
sbb
fcomps
xor
xlat
xor
lock
xor
loopne
pop
shll
push
jl
mov
fwait
add
psllq
and
cli
shrb
popf
dec
mov
and
adcl
and
ljmp
mov
in
jge
into
les
mov
fcompl
dec
mov
inc
popf
jnp
add
jnp
out
int3
repz
aas
push
arpl
adc
bound
and
jg
sub
ror
xchg
std
std
nop
cmp
shl
scas
push
mov
pop
push
nop
imul
cmpsb
cli
outsb
das
aam
xchg
lock
and
push
mov
mov
mov
data16
xor
push
cmp
hlt
stos
xor
std
lea
in
mov
lods
inc
sti
call
fstpl
sub
mov
xorb
mov
into
jmp
loope
rcl
stos
inc
cmpsl
pop
push
mov
or
mov
push
bsr
sub
cmc
adc
int3
daa
jge
add
xchg
fsubl
daa
scas
out
cmp
push
sahf
add
cmp
or
pop
mov
shrl
jno
cmc
pop
mov
test
into
int3
lret
inc
push
les
ffree
cmpsl
xor
pop
push
mov
sub
cmpsb
jbe
bound
in
push
or
jne
int
sub
aaa
mov
mov
xchg
adc
mov
xchg
outsb
mov
test
sbb
popf
adc
lock
leave
fildll
and
push
cwtl
rclb
push
adc
ljmp
test
jecxz
decb
hlt
cs
fcoms
outsb
inc
std
mov
pop
cmpsl
jmp
outsl
enter
cmpsb
and
lods
data16
xchg
cwtl
adc
mov
jp
jmp
lret
xor
hlt
fidivl
sub
hlt
sub
push
xchg
lds
mov
push
shrl
cmp
xchg
pushf
loop
cmp
mov
jge
pop
pop
cmp
xchg
jp
add
lret
and
and
fs
jmp
pop
push
cmp
arpl
fsub
pop
xor
sub
pop
les
loop
lods
js
ficompl
sub
cmp
fisttpl
shlb
cwtl
mov
xchg
pop
rol
adc
adc
xor
mov
inc
push
xchg
shll
xchg
pop
and
lret
dec
inc
cmp
test
imul
stos
mov
flds
jb
cmp
popf
dec
lea
movsl
push
cmp
and
xchg
test
nop
jmp
dec
pop
sbb
sbbb
jae
imul
dec
jecxz
mov
dec
jae
popf
add
jle
outsl
loope
popf
inc
outsl
in
mov
enter
dec
sub
mov
pusha
jg
xchg
and
aaa
mov
pop
testl
popf
faddl
push
adc
iret
int
pop
fcoms
pop
mov
sub
mov
push
lea
mov
clc
popl
lea
mov
jb
stc
sub
sub
dec
mov
xor
icebp
in
js
jmp
lods
push
clc
sahf
call
xchg
mov
and
cmp
rcll
cmp
sbb
lret
in
dec
jb
xor
dec
add
in
and
sbb
les
push
pop
or
out
insl
in
inc
mov
adcb
fisubs
out
push
sahf
pop
pop
cmp
push
ret
mov
or
xor
into
pand
dec
inc
dec
sbb
jb
inc
mov
push
lods
fwait
loope
sbb
ret
inc
pop
sbb
inc
cmpsl
notb
mov
gs
shrl
sbb
cmp
add
push
loop
movsl
scas
jo
scas
cmc
mov
mov
push
testl
add
sub
ds
icebp
cmpsb
mov
cmp
loopne
lds
pop
dec
and
roll
mov
push
cltd
mov
or
outsl
xor
cltd
fistpll
stc
dec
dec
push
mov
inc
push
iret
lea
insb
xor
inc
mov
lea
or
mulb
xchg
shr
fsubp
jo
mov
sbb
push
mov
xchg
and
repnz
jecxz
xor
fs
and
adcl
inc
mov
lods
fistpl
int
pop
icebp
jne
sbb
cmpsb
lds
je
push
mov
add
lahf
xchg
imul
setg
mov
sahf
jne
loopne
push
or
test
jmp
push
adc
jb
xchg
xor
mov
subl
xchg
mov
test
fsubrs
push
movsb
sub
lds
jg
and
jle
sub
push
push
jg
test
add
fs
inc
insb
xchg
cltd
int
out
and
and
mov
scas
pop
dec
push
adc
ss
wrmsr
int
mov
sbb
add
fs
sub
dec
xchg
fldl
jp
movsb
xor
outsb
xchg
push
xchg
push
cmpl
js
mov
arpl
test
cmp
add
fsubs
jnp
insl
sarb
dec
sbb
mov
xor
imul
es
sbb
cmpsl
sub
mov
cli
gs
mov
adc
xchg
sub
inc
mov
or
in
sbb
inc
lret
dec
in
xchg
sub
xor
fisubrs
xchg
out
test
rolb
or
shrb
mov
adc
dec
hlt
jmp
and
daa
jo
movsl
mov
movq
sbb
and
sbb
add
sub
jl
inc
cmp
and
adc
mov
das
pop
xlat
mov
pop
enter
fs
jge
nop
fmull
lret
sub
inc
inc
loope
int3
mov
or
imul
sub
cmc
fdivr
ljmp
mov
int3
add
mov
rcrb
sahf
adc
mov
and
jmp
and
xor
aad
ror
xorl
and
dec
das
pop
daa
fiadds
shlb
or
xchg
mov
fldl
test
loopne
dec
adc
mov
mov
inc
pop
mov
pop
leave
mov
fwait
ljmp
mov
pop
dec
cmc
xor
mov
sub
cltd
sbb
mov
test
xor
jle
dec
stos
inc
js
popf
rolb
mov
cltd
in
inc
scas
stos
xor
loope
push
xchg
mov
xlat
push
sbbb
jno
frstor
fists
stc
loop
loop
pushf
out
mov
fwait
mov
sub
push
scas
punpckhbw
jne
push
push
jnp
xor
mov
shlb
dec
icebp
stos
lret
lods
cmp
ljmp
lods
adc
clc
in
fdivl
scas
mov
js
mov
in
ret
xchg
leave
jae
daa
xor
sub
cld
inc
sub
and
push
inc
outsb
mov
dec
shr
ds
fbld
pop
mov
stc
jb
dec
decl
jb
pop
sbb
xor
mov
mov
stc
sub
sbb
mov
loope
pop
sbb
push
push
or
sbb
insl
mov
outsb
inc
outsb
orl
pop
pop
pop
mulb
add
fnclex
leave
dec
mov
das
je
fmul
icebp
mov
loopne
mov
or
inc
dec
and
pop
neg
data16
cmpsl
rcrl
hlt
add
stos
std
adc
push
call
xchg
pop
xchg
clc
push
rcrl
jl
or
cmp
or
outsl
mov
lcall
xchg
shlb
mov
jl
push
fsubrl
mov
in
xchg
jmp
in
movsb
xor
push
test
mov
lea
ret
aaa
rcrl
mov
xor
push
add
mov
jle
sbbl
push
pop
add
movsb
dec
test
sbb
pop
call
in
in
mov
imul
mov
sbb
stos
xlat
into
mul
add
cmp
jb
jp
dec
insl
sub
fs
sub
mov
lods
test
push
das
mov
mov
inc
frstor
mov
inc
imul
push
sub
hlt
mov
add
insl
jecxz
stos
iret
xchg
cmp
call
mov
and
xor
sub
test
loopne
mov
mov
inc
and
sarb
in
xchg
xor
jbe
jae
sub
sub
mov
and
fdiv
jnp
mov
ss
pusha
dec
ror
in
inc
lock
orl
mov
bnd
mov
out
push
rcrl
mov
add
xor
popa
aas
in
sbb
inc
add
sti
or
sub
pushf
sarb
sahf
pop
dec
shll
cmp
hlt
dec
inc
pop
repz
pop
cmp
xor
loopne
fcmovnu
sahf
stc
shl
test
clc
cmp
lea
cwtl
gs
pop
mov
stos
jo
adc
insb
in
lods
arpl
push
jp
icebp
push
add
xlat
jge
add
jno
das
xchg
xchg
jmp
sub
loop
insb
pop
sub
xor
dec
push
mov
bound
popa
mov
pop
mov
xchg
xchg
lock
mov
xlat
xor
test
jle
insb
adc
cmp
jmp
xor
daa
xor
stos
outsl
push
imul
mov
imul
es
dec
jo
test
xchg
add
mov
pop
mov
mov
pop
mov
push
sbb
cmpsb
jnp
xchg
repz
push
add
cmp
pop
or
rolb
adc
xor
mov
jp
jge
jmp
rclb
xchg
xchg
sbb
mov
cld
sub
notl
cmp
xor
fucomi
mov
jle
sbb
scas
jnp
data16
push
mov
ret
cmp
cs
outsl
sbb
gs
jmp
jp
fld
cmp
push
cwtl
pop
andl
jp
leave
std
fdivl
mov
mov
pop
sub
ljmp
scas
test
sbb
pop
lods
mov
add
sub
mov
call
cmpsb
leave
sub
cmpsb
call
pop
mov
mov
fistpll
dec
sbb
mov
push
pop
mov
mov
rcll
adc
lret
sub
push
adc
jbe
test
cmpsb
ret
inc
pop
dec
sbb
sbb
jno
mov
aad
dec
mov
subl
pop
mov
inc
sbb
xchg
les
pop
xchg
mov
xor
xchg
addr16
dec
pop
or
jae
or
cmp
aaa
and
and
push
fwait
and
or
sbb
xchg
outsb
insl
add
in
inc
add
in
sbb
mov
pop
fldl
adc
sahf
testl
xor
adc
jmp
mov
movsbl
loope
push
adcl
movsl
adc
leave
stos
leave
cmc
or
lods
loop
mov
cmp
mov
lahf
gs
cmpsl
repz
stc
nop
je
mov
push
cmp
dec
and
scas
add
jg
cmc
jns
dec
sub
add
pop
mov
les
xor
sbb
in
jmp
divl
or
pop
cmpsb
clc
roll
pop
scas
pushf
in
testl
sbb
and
push
mov
cmc
lock
insb
adc
cwtl
test
cmpsl
jnp
or
lods
push
mov
popa
jg
movsl
or
dec
movsb
pop
mov
sbb
aas
movsb
cmp
xor
or
sbb
cld
adc
mov
and
sbb
jne
xchg
dec
xchg
pop
mov
push
mov
call
jbe
mov
ret
sti
out
out
mov
sub
add
int
sbb
add
mov
inc
shlb
sub
cltd
sbb
out
call
std
or
mov
lea
daa
shlb
adc
jmp
mov
test
js
punpcklwd
xchg
loop
xor
mov
push
xchg
in
lock
xchg
in
xor
clc
xor
fs
leave
push
inc
cmpsl
in
pop
mov
jge
sbb
push
pusha
mov
sahf
movl
mov
push
push
cmp
pop
out
mov
lea
sub
es
lret
push
or
mov
mov
mov
push
imul
leave
inc
pop
repnz
fwait
loop
rcrb
enter
out
push
adc
or
outsb
lods
dec
inc
std
cmpsl
cmp
out
mov
mov
push
in
push
add
add
movsb
cltd
iret
movsl
lcall
mov
inc
adc
xchg
bound
icebp
sbb
cmpl
fimull
std
pmaxub
sbb
andb
jns
arpl
mov
int
lds
mov
jbe
loopne
mov
mov
ss
loope
xchg
aam
fstpl
jge
jae
push
stos
aam
fsubrs
repz
fbld
loope
dec
mov
and
mov
xchg
sbb
mov
cmpl
fidivrs
xor
sbb
cmc
ss
pop
inc
mov
jp
add
sbb
aas
push
xchg
xor
adc
xor
shrl
test
repz
fisubrl
divb
adc
add
sub
call
push
lods
jmp
notb
dec
ret
sub
cmp
adc
int3
insl
int3
daa
call
movsb
mull
sarl
fnsave
jnp
xlat
incl
add
push
das
cmpsl
xchg
imul
mov
mov
and
rorl
dec
and
xchg
jb
adc
nop
cmp
inc
push
iret
aaa
jp
popa
adc
jl
shr
pop
fists
mov
jb
daa
filds
pop
das
xchg
xchg
and
xor
int
imul
and
inc
stos
aam
sahf
cs
icebp
scas
rclb
inc
lret
xchg
bound
fldenv
testl
add
aad
cld
clc
xor
sbb
push
cmp
lea
loop
stos
inc
push
sub
or
jae
fbstp
mov
lcall
inc
ss
push
lea
cmpsl
and
mov
ficoml
test
mov
or
lcall
popa
lret
cli
loop
inc
jns
sbb
out
xchg
sub
push
enter
or
add
stc
sbb
imul
inc
push
in
push
xchg
xchg
test
cltd
fdivp
std
shrl
imul
add
aam
pop
loope
pop
dec
adc
cmovae
sub
scas
mov
and
cmp
jae
add
cltd
or
mov
aas
lret
inc
shll
fldcw
mov
jmp
mov
inc
lea
pusha
retw
fldpi
xor
icebp
ss
or
jno
movsl
sbb
xor
jmp
std
std
pop
test
jb
pop
xor
in
push
inc
xlat
jmp
adc
fs
lock
sbb
cs
sar
sbb
popl
jns
push
sub
and
jne
shlb
loop
sub
cmp
aas
jmp
xor
inc
pop
xor
xor
mov
mov
shr
pop
dec
addb
mov
mov
jne
aas
jge
repnz
mov
push
lods
mov
lods
xchg
jae
push
mov
mov
ret
js
jp
insl
leave
xchg
dec
jno
call
lods
stos
jmp
rcl
mov
and
aas
loop
sub
popf
outsb
push
mov
arpl
hlt
dec
xchg
in
scas
cmp
rcrl
insb
iret
mov
and
xor
xlat
mov
out
imul
shlb
sub
popf
add
imul
fs
mov
or
stos
movsl
mov
dec
gs
push
ja
hlt
jp
push
push
repz
xchg
add
test
mov
mov
ret
dec
es
dec
loope
imul
enter
gs
mov
xor
cmovp
hlt
mov
adcl
imul
xor
xchg
or
lds
out
cli
sub
sbb
lcall
imul
cmp
les
lock
test
data16
jmp
ficoms
jo
rcrl
add
sub
push
popf
adc
fdivrl
adc
or
sub
leave
push
fs
push
test
jne
sahf
push
fldcw
add
movsw
add
int
je
dec
shr
push
lods
out
ret
pop
sbb
or
stc
enter
mov
call
jnp
rolb
ljmp
call
add
dec
inc
adc
gs
or
shr
mov
insb
adc
mov
aas
cmpsb
mov
insb
call
adc
dec
lock
jl
jecxz
pop
adc
add
js
add
ja
fimull
inc
cld
lds
sbb
call
addl
mull
pop
add
mov
mov
aad
or
ss
jne
sbb
hlt
jecxz
mov
xor
inc
insb
int
xchg
cmc
clc
shll
shl
sbb
jns
and
cmp
sbb
inc
push
mov
sbb
push
test
pop
loope
cmp
or
inc
sub
jmp
test
mov
lds
jmp
cltd
inc
adc
or
lock
das
aad
sbb
mov
testb
push
nop
jb
pop
cmp
mov
icebp
ss
add
mov
xorb
in
adc
mov
fs
mulb
idivl
into
addr16
pushf
inc
add
inc
dec
pop
and
or
mov
mov
adc
mov
adc
inc
cs
or
fmuls
and
nop
addr16
xchg
popa
arpl
sbb
jle
fisubrs
iret
shlb
push
sbb
cmpsb
push
int3
je
xor
aad
lds
jns
xchg
das
sbb
out
mov
jle
int
mov
les
adc
xchg
mov
repnz
loopne
adc
popf
jno
sbbl
mov
cmp
mov
push
adc
das
icebp
pushf
mov
pusha
and
lret
adc
int3
in
inc
leave
fimull
bound
lret
arpl
repnz
sub
fldcw
fwait
ret
mov
sub
add
call
in
movsb
cli
sbb
fcomps
jo
gs
sub
sbb
outsl
push
ds
clc
xchg
ds
mov
lock
jp
sub
imul
mov
imul
mov
xor
in
and
mov
xchg
push
sbb
mov
insb
fistps
dec
int3
insl
adc
mov
jns
rclb
lods
xchg
mov
push
mov
arpl
xchg
xor
or
ljmp
mov
push
daa
fs
rcll
shr
popa
clc
mov
sub
cmp
lds
test
xchg
xchg
sub
sub
xchg
loopne
bound
or
push
cmc
add
mov
lahf
jecxz
sub
mov
push
nop
dec
pop
mov
mov
mov
pop
repz
sub
sti
ljmp
cmp
inc
cmpsb
and
cs
fmul
hlt
dec
ret
aaa
cld
cmpsl
xor
pusha
lret
popf
cltd
cmp
xor
cmc
xchg
inc
push
imul
sarl
xor
jae
insb
sub
idiv
scas
adc
jp
movsb
lret
scas
xor
ljmp
pop
adc
xor
xor
out
std
loopne
bound
cmc
add
ret
inc
fistpl
mov
in
out
xchg
sbb
cmp
loope
xchg
lret
fstl
inc
insl
lret
jl
sti
sub
inc
sub
out
fmuls
jns
xchg
lcall
aaa
jmp
sbb
adc
movsb
fstl
jge
es
mov
xchg
stos
sub
dec
test
shrb
jmp
lods
xor
sbb
or
mov
sbb
stos
cwtl
jg
jb
insb
mov
mov
pusha
pusha
xorb
das
loopne
sub
loope
adc
lret
jecxz
mov
adc
test
xchg
mov
or
ss
clc
pop
popa
addr16
add
lods
andl
adc
mov
pushf
or
ljmp
lahf
pop
push
incl
cmp
xlat
gs
fisttps
mov
sub
jmp
ja
add
sbbl
jnp
repnz
leave
shlb
or
out
lds
jl
mov
dec
xor
add
xlat
mov
mov
mov
cmp
movsb
pop
mov
imul
push
inc
inc
outsb
dec
or
jg
shlb
icebp
xor
dec
lds
sbb
mov
inc
arpl
or
pushf
out
sub
xchg
aam
fwait
rcll
inc
sbb
outsl
cmpb
pop
test
mov
cmp
fistpl
add
xchg
ud0
int3
pop
xlat
sahf
testl
xchg
daa
shl
sbb
cmc
and
daa
stos
mov
mov
sub
adc
jbe
incl
mov
ja
repnz
lcall
mov
cmpsl
sub
mov
sbb
jg
outsb
dec
pop
imull
mov
hlt
push
popf
imul
jo
xor
pop
sbb
fcoml
push
stc
iret
fbstp
pop
jnp
mov
sbb
popf
test
mov
cmp
sbb
inc
pop
out
jno
sub
incl
inc
mov
jne
call
push
gs
pushw
outsb
xor
inc
pop
mov
mov
cmp
fmulp
or
pop
mov
stos
and
add
aam
repnz
into
out
adc
pushf
xchg
bound
jp
lret
ljmp
and
pusha
jb
cmp
fildll
mov
jae
cmp
daa
je
cmpb
aam
pop
popa
scas
add
arpl
daa
call
sysexit
imul
ret
push
xlat
mov
out
mov
into
scas
shlb
push
cli
dec
cmpsl
lcall
fstl
aam
cltd
xchg
and
inc
push
cli
test
add
dec
xchg
mov
pop
sbb
fnstenv
xor
cli
dec
movlps
insl
cmp
in
mov
inc
jle
outsl
xchg
jmp
popf
insb
pop
xchg
adc
push
and
xchg
push
cmc
pop
sbbl
lcall
sub
outsl
or
adcb
pop
add
jnp
sbb
stos
jl
push
lahf
fldt
out
inc
aaa
ds
lock
pushf
test
testl
push
xor
sub
int
mov
jmp
in
mov
fldl
mov
and
clc
insb
xor
je
fwait
aam
sarl
je
and
daa
jbe
out
in
lret
or
je
add
xchg
fimull
add
inc
jae
je
nop
push
push
push
mov
jle
xor
stos
pop
clc
dec
add
out
cmp
jg
jg
in
inc
stc
add
mov
leave
sub
fcomps
punpckhdq
cmp
adc
sub
fs
mov
or
mov
mov
mov
push
sbb
mov
push
or
clc
push
lock
push
xor
jns
pop
mov
lds
aas
stos
mov
inc
sbbb
mov
sbb
popf
int
mov
aad
out
jbe
imul
push
fwait
adc
mov
add
xchg
add
ss
insb
outsl
mov
xor
fisubrl
lret
daa
xchg
daa
lahf
js
inc
and
inc
or
movsb
push
lret
jbe
jne
icebp
xor
mov
mov
and
adc
popf
adc
jg
ret
ljmp
lods
stc
ljmp
sub
cld
lea
cmp
ret
cs
clc
lods
mov
outsl
or
fldt
xchg
mov
sarl
rorb
jnp
pop
push
stos
lock
cmpsb
pushf
pop
andb
mov
sub
loopne
out
cmpsb
xchg
jae
rolb
mov
in
pop
ret
nop
push
xor
push
sub
fstp
add
int
mov
jg
jge
sti
mov
mov
jp
dec
push
jo
aam
mov
jmp
test
insl
sub
lcall
ss
jne
sub
data16
mov
mov
movsl
ja
ficomps
shlb
inc
data16
icebp
pop
lret
mov
adc
imull
shrl
cmc
push
icebp
call
sbb
movsb
out
testl
shlb
lcall
or
xor
mov
mov
jbe
fisttpl
fldlg2
fmul
adc
aam
push
sbb
fisubl
inc
jbe
loop
add
jno
insl
mov
jp
sub
enter
jg
pop
ret
popa
int
mov
jge
int3
jo
mov
cltd
cwtl
add
jae
mov
dec
pop
sbb
sub
mov
sub
jmp
push
cs
pop
stos
adc
sub
and
cmpsb
or
pop
mov
mull
ret
into
shrb
inc
cmp
movsl
xchg
mov
jns
sub
out
movsb
sbb
or
popf
sbb
inc
cmp
ja
pop
push
int
mov
popa
bound
sub
push
insl
mov
mov
ljmp
push
xchg
aam
mov
or
add
loopne
mov
xor
stos
mov
clc
adc
repz
pop
inc
cmp
add
and
or
push
push
push
mov
add
out
js
and
pop
sbbb
push
loopne
jae
and
mov
outsb
mov
mov
frstor
add
shll
xchg
xchg
jae
js
idiv
inc
insl
mov
leave
sub
and
inc
cmpsb
pop
jmp
or
adc
and
in
ret
xchg
mov
sub
ror
dec
push
mov
test
test
daa
aad
bound
inc
adc
rcrl
arpl
sub
mov
mov
aad
das
mov
add
cmp
jecxz
cwtl
adcl
sbb
jb
dec
push
sub
xchg
dec
test
scas
dec
push
mov
mov
test
lret
and
mov
leave
xchg
sub
jp
sub
sti
push
nop
and
pop
mov
aaa
jg
lcall
data16
test
or
lds
lret
movb
lea
insl
clc
mov
pop
cli
gs
das
dec
push
or
ficoml
dec
xor
push
pop
cmpsl
bound
sub
xor
fcompl
add
lods
cmp
add
stos
push
ds
inc
mov
ret
jbe
orb
sbb
jmp
in
add
push
and
fcmovnb
das
jmp
enter
pop
xor
or
mov
loopne
adc
mov
fwait
or
mov
daa
jp
adc
divb
test
pop
pop
bound
and
testb
jnp
stos
pop
mov
mov
mov
icebp
xor
out
lods
das
add
pop
stos
test
stos
mov
aas
cmp
lods
cmp
mov
fistpl
and
add
popf
xor
es
testl
cltd
cwtl
lret
cli
or
rcll
add
pop
fwait
jmp
push
cmp
lds
mov
inc
rolb
lret
ss
xchg
pop
mov
clc
aaa
pop
add
pusha
ja
addr16
pushl
xchg
cmpsl
jo
orb
es
daa
or
mov
mov
loope
ljmp
icebp
stos
popa
pop
cltd
xchg
movsl
sarb
jmp
push
xor
fwait
jbe
loope
orl
movsl
arpl
inc
loopne
dec
rcr
mov
out
add
and
aad
pop
mov
and
jnp
mov
mov
mov
fisttpl
and
xor
inc
mov
fmull
aad
sub
fcompl
jno
jl
mov
mov
call
movsb
push
inc
jmp
push
cld
mov
xchg
mov
decl
call
mov
mov
ds
roll
mov
mov
jae
std
adc
sub
inc
inc
and
pop
call
outsb
xor
mov
push
mov
adcl
inc
sub
add
cmc
xor
ds
inc
lods
xor
nop
and
jmp
enter
add
push
stos
arpl
and
push
inc
sub
inc
imul
roll
mov
cmc
lds
jecxz
out
orb
out
in
into
sbb
cwtl
ja
jns
call
das
hlt
sbb
cmp
mov
scas
dec
mov
xor
js
cmpsb
test
add
or
popf
sbb
or
or
adc
aaa
jmp
mov
scas
pushf
push
push
inc
rorb
cmp
xchg
lods
cmpb
ficompl
and
loope
jbe
fsts
outsb
pop
push
outsl
adc
dec
test
daa
mov
mov
nop
jns
push
mov
inc
inc
push
mov
mov
sub
fadd
out
jge
scas
sub
mov
jae
mov
daa
push
jle
adcl
xlat
push
inc
sbb
xchg
lds
rorl
repz
jb
inc
nop
lcall
int
and
push
out
adc
and
int
mov
add
jl
pop
inc
xchg
mov
adc
std
stos
sbb
loope
fidivrs
xchg
mov
mov
fdivl
mov
hlt
add
jb
int
add
cld
bound
xor
clc
ds
sbb
pop
xor
fwait
addr16
pop
pushf
adc
pop
scas
mov
mov
or
push
sub
or
adc
ficoms
sbb
adc
inc
into
pushl
movsl
inc
or
jecxz
and
bound
sub
pop
add
hlt
stos
push
andl
lods
or
sub
popa
add
push
out
xchg
cs
inc
cmpsl
mov
cli
add
inc
inc
jle,pt
test
jne
pop
push
xchg
xlat
mov
push
adc
jmp
mov
mov
mov
filds
ret
sahf
xor
sub
pop
test
xor
xorl
ss
push
nop
mov
push
aam
es
out
xor
mov
ret
mov
adc
sbb
xor
pop
notb
sbb
xchg
outsb
out
cli
add
es
imul
movsb
loope
mov
loopne
jle
arpl
ficoml
adc
jl
movsb
out
mov
xor
jmp
sub
hlt
xchg
push
mov
cmp
dec
xor
xorl
push
xchg
dec
fstps
rorb
stc
inc
and
outsb
push
inc
inc
fnstenv
es
sbbb
sbb
in
into
xchg
mov
bound
mov
xchg
shll
or
rorl
jp
and
xor
scas
mov
and
insl
pop
bound
fldl
or
loopne
add
xchg
dec
leave
add
aas
popf
add
push
xchg
xor
pop
adc
out
aam
push
sbb
call
enter
inc
ss
repz
jns
mov
cmp
cltd
jno
testb
shll
inc
pushf
adc
mov
mov
sti
stos
scas
je
loopne
jo
pop
sbb
pop
pushf
addr16
mov
pop
ret
push
xchg
lret
aad
inc
mov
add
jle
movsb
fstps
shlb
jae
iret
mov
jge
pop
js
cmp
mov
int
mov
addr16
jb
std
or
je
fcoms
pop
inc
pushf
jp
jnp
mov
subb
push
rclb
xor
in
add
mov
push
pop
add
push
pop
nop
insb
xchg
sbb
mov
pop
ret
outsl
ljmp
mov
mov
and
scas
call
jne
xor
enter
sub
ret
mov
mov
mov
nop
cltd
in
sub
xor
fidivrl
cmp
fbld
out
test
cs
adc
pop
mov
add
mov
addl
dec
les
add
mov
inc
cmpsl
aaa
or
gs
sbb
addr16
in
dec
cltd
inc
mov
xor
test
icebp
mov
cmp
insb
lods
iret
scas
sti
mov
cbtw
js
mov
in
enter
lods
mov
data16
dec
pop
aam
inc
fiadds
sub
lret
movsl
jno
pop
push
out
inc
cltd
hlt
or
xor
test
pop
insl
aas
jne
xchg
iret
clc
mov
pop
inc
neg
arpl
int3
dec
leave
pop
push
repz
bound
and
adc
ret
lahf
xchg
mov
and
out
push
fbstp
test
jge
sub
adc
jecxz
or
scas
and
xor
xchg
arpl
sahf
dec
add
outsb
int
and
jnp
lahf
addb
add
or
cld
jnp
rcr
push
push
pop
or
xchg
iret
mov
jle
push
cmp
ss
fistl
xlat
aas
mov
cmp
inc
mov
stos
in
out
mov
add
cmp
hlt
out
mov
inc
lahf
adc
mov
jbe
aaa
xchg
lret
clc
xor
jp
sbbl
mov
inc
xor
stos
push
movsb
sbb
scas
lret
out
pop
decl
rcl
mov
mov
inc
cwtl
push
scas
cmp
pop
pusha
add
fstpt
mov
push
aas
out
mov
psllw
test
cmp
aas
push
xchg
inc
rcrl
sbb
add
sbb
mov
cmc
ljmp
lds
in
test
fsubrs
jmp
add
jnp
jmp
je
sbb
sbb
inc
pop
rcrl
in
jae
aam
in
pusha
dec
repz
sbb
xchg
fxch
or
stos
std
adc
inc
into
sbb
xchg
push
adc
jle
leave
xor
mov
ficoms
jl
jbe
xchg
mov
lret
xchg
and
cmpw
mov
fcomi
or
subb
jp
mov
mov
ljmp
sbb
push
pop
pop
sbbl
lock
stos
test
pop
adc
shll
shr
in
mov
push
aam
sti
xchg
dec
sub
out
in
nop
test
pop
cmc
in
push
jmp
sub
xchg
adc
cli
push
cltd
ret
adc
sub
mov
andl
out
mov
loope
sub
and
pusha
xchg
addb
icebp
arpl
test
stos
add
aaa
lds
inc
mov
push
loope
cld
insl
dec
xchg
gs
insl
cmp
adc
lea
jne
inc
adc
lock
and
arpl
mov
popf
mov
loop
xchg
adc
xor
xor
jae
jge
dec
outsl
pop
inc
lcall
inc
ret
sbb
pop
and
or
and
fs
aas
push
sahf
mov
dec
sbb
sahf
pop
jl
pop
stc
rep
sbb
xor
cld
jg
xor
xor
lahf
out
int3
int
xorb
xchg
xchg
xor
jl
in
imul
cwtl
mov
and
popa
jo
dec
pop
cmp
xchg
add
movsb
add
mov
lock
push
mov
iret
dec
dec
mov
sbb
or
jno
insl
leave
push
sub
into
adc
adc
push
and
rcrl
sar
cmpsb
cs
repz
neg
inc
xchg
jo
dec
add
or
add
push
pop
mov
jb
sbb
or
dec
xchg
inc
fwait
sbb
nopl
repz
push
out
fwait
in
rorl
mov
jge
lods
and
fildl
popf
push
outsb
push
mov
jp
xchg
pop
add
lret
or
int
cld
mov
daa
inc
push
adc
inc
push
int
lsl
aam
inc
cltd
insb
cmp
scas
xor
inc
cltd
imul
pushf
loope
cmpsl
mov
ficoml
mov
dec
scas
add
pop
lea
orl
sub
mov
cmp
in
js
xchg
sub
inc
and
outsb
xchg
push
xlat
out
mov
inc
inc
jb
popf
xor
lret
inc
adc
psadbw
xchg
fisttpl
mov
jne
nop
push
int
mov
dec
xor
jp
insl
and
add
dec
sbb
movsb
pop
aam
lods
insb
dec
out
mov
test
loopne
adc
cmp
in
leave
cmp
fsubrp
cmpsb
and
jno
xor
push
dec
cwtl
jge
mov
mov
es
dec
xor
mov
mov
lahf
mov
les
hlt
jae
test
scas
sarb
sub
or
jecxz
test
mov
lea
add
sbb
js
sbb
push
and
into
clc
lds
neg
pusha
shll
add
mov
insl
and
insb
cmp
pop
comiss
push
mov
scas
inc
das
loope
testb
push
sub
cmpsb
in
xchg
or
sahf
inc
push
cltd
pop
rorb
adc
test
adc
ja
jl
loope
rorl
jno
inc
add
mov
jmp
out
into
mov
or
shlb
xlat
jg
into
fcmovbe
cli
cli
mov
sbb
or
adc
mov
dec
fbld
je
sub
icebp
rclb
xchg
adc
decb
call
mov
mov
pop
xchg
mov
daa
mov
cli
inc
lcall
mov
mov
xchg
mov
mov
cli
pop
inc
xchg
push
or
iret
jnp
mov
xchg
or
call
ja
loope
sub
insb
sbb
pop
lds
mov
xchg
mov
ja
test
mov
js
scas
lea
and
std
xor
inc
xor
push
pop
xchg
push
out
dec
xor
test
in
jbe
and
rclb
pushf
repz
sbb
imul
cmp
dec
mov
shlb
ficompl
out
sbbl
sub
in
cmp
out
push
or
and
pop
jae
adc
and
ficoml
aad
pop
sbb
nop
jne
mov
insl
push
lret
jbe
loop
lret
mov
test
pop
mov
jbe
test
daa
xorb
jne
jnp,pn
push
fiaddl
clc
and
push
aas
pop
add
xchg
aam
mov
xchg
and
jp
ss
mov
pop
mov
je
mov
notl
bswap
movsl
movsb
jg
aad
add
mov
imul
inc
sbb
repnz
mov
outsb
test
lods
inc
shlb
mov
lea
clc
fcmovnu
iret
mov
and
cltd
pop
dec
test
jl
inc
clc
mov
sub
imul
fildl
cltd
stc
pop
adc
pop
js
in
xchg
or
and
mov
out
lcall
pop
ljmp
sbb
outsl
or
jmp
andl
jle
ja
xchg
dec
dec
xor
rorb
imul
je
mov
and
pop
icebp
push
jmp
in
imull
jmp
mov
jo
jno
pop
movzwl
stos
sar
fs
int3
decb
jp
and
mov
in
add
push
int3
mov
aaa
arpl
cmp
or
or
mov
add
push
or
jns
fisubrs
loope
test
pop
mov
jmp
stos
jle
push
dec
int3
fsubrs
cli
cmp
jns
mov
jnp
in
mov
cmp
lock
lret
mov
lcall
popa
xchg
ds
jmp
cmp
inc
int
imul
rcrl
les
inc
mov
out
mov
jle
arpl
imull
push
repz
leave
dec
jle
mov
lods
cmp
cmp
popa
lahf
fsubs
sbb
mov
lock
int3
shr
mov
ret
sahf
push
mov
sub
inc
stos
mov
sti
imul
jno
loop
xlat
outsb
data16
sbb
fs
daa
and
mov
adc
subb
cmp
pop
mov
inc
and
dec
mov
lahf
push
in
sub
das
insb
dec
lock
pop
js
xchg
in
movsl
pusha
mov
jg
sub
cmp
leave
add
jg
xchg
and
mov
and
mov
sub
mov
adc
xlat
ss
adc
dec
lahf
adc
cmp
test
push
sbb
or
idiv
lea
lret
dec
jbe
adc
push
cmp
xor
jnp
fldt
sete
pop
add
mov
push
ffreep
jb
cmpsb
lods
inc
and
popf
mov
popf
mov
add
adc
test
sub
adc
cli
jmp
xlat
repz
sahf
adc
pop
jo
scas
xchg
or
cmp
das
adc
shll
mov
popf
fnstenv
mov
mov
inc
pushf
push
loop
fsubrs
jmp
iret
and
xorl
inc
xchg
sbb
pop
enter
insl
cmp
push
mov
add
dec
pop
sahf
mov
sbb
xchg
mov
pop
addb
dec
cvtpi2ps
and
lcall
int
sbb
mov
movsb
push
out
mov
pop
jmp
out
inc
arpl
jge
stos
das
mov
or
mov
xchg
or
dec
aas
xor
rcrl
les
mov
xchg
in
pop
inc
pop
xchg
jnp
cs
adc
add
lret
jno
hlt
push
push
aaa
bound
out
sbb
jg
addl
scas
and
cmp
in
cwtl
lods
loopne
xchg
jbe
sbb
nop
dec
inc
pop
inc
pop
inc
pop
dec
mov
xchg
cld
in
scas
mov
or
out
xchg
pop
inc
aaa
les
andl
xchg
add
inc
movsb
mov
dec
clc
dec
shll
into
mov
pop
stc
orl
cmp
lea
add
in
xlat
mulb
push
fs
jns
sub
stc
jns
mov
inc
stos
cmp
sub
pushf
pushf
imul
push
push
mov
jecxz
xorb
scas
in
push
xor
push
mov
insl
dec
jae
push
divl
in
cltd
cltd
stc
insb
cmp
adc
lret
sahf
lods
mov
xchg
outsl
cmp
popl
scas
push
imul
sbb
dec
inc
jl
inc
icebp
and
pushf
adc
xor
xchg
jge
stos
cmp
inc
mov
rcrb
je
xor
push
add
jecxz
pop
fcompl
sub
ja
xorl
shr
adc
or
mov
sub
xchg
or
mov
test
mov
xor
test
dec
ja
pop
fcoms
xorl
cmp
insl
inc
in
mov
stos
shrl
push
mov
adc
insl
xlat
rorl
push
jmp
xor
ficoms
cltd
in
ds
pop
shlb
jle
mov
das
inc
push
enter
or
jbe
jge
dec
dec
and
adc
mov
iret
mov
inc
add
mov
xchg
loop
xchg
stos
add
inc
and
repz
xchg
xchg
pop
adc
pop
je
sahf
mov
jecxz
fwait
ss
mov
mov
iret
test
mov
stos
lahf
std
cs
cmc
or
lcall
pusha
xchg
inc
xor
mov
pop
adc
sub
jno
pop
mov
lret
icebp
pop
mov
cwtl
push
fucomi
repnz
mov
or
sbb
and
hlt
in
outsb
lock
pop
sbb
push
nop
adcl
push
push
xor
cltd
sub
mov
or
stos
mov
xor
inc
sbb
fbstp
mov
adcb
inc
add
cltd
add
imul
outsb
shr
push
mov
sbb
sub
xchg
hlt
mov
push
lcall
data16
mov
dec
sti
cltd
adc
outsl
mov
jae
push
push
js
sbb
loopne
xor
into
lods
sbb
in
pop
pop
or
xor
lahf
sub
xchg
cli
js
jo
data16
lock
inc
imul
adc
dec
and
mov
pop
sti
and
stos
scas
jg
je
inc
fnstcw
stos
inc
push
clc
xor
hlt
pop
jo
movsb
xor
and
xchg
stc
xor
jno
dec
movsb
lods
movsb
inc
repz
out
inc
xor
sub
cmp
inc
aad
int
mov
in
iret
jbe
and
mov
add
shlb
and
clc
lods
pop
test
cmpsb
pop
pop
idivb
mov
imul
enter
xor
and
add
inc
sets
jb
shlb
out
jo
inc
inc
xor
cmp
fcmovnb
jnp
dec
xchg
cmp
mull
xchg
loop
pushf
pop
cltd
or
bound
dec
or
lcall
outsl
dec
leave
ja
lret
add
fs
jecxz
fstpt
add
sti
dec
mov
fxam
mov
jne
subb
scas
dec
mov
repz
ret
ret
in
aas
mov
dec
fnstsw
adc
into
inc
fisttpll
enter
mov
sub
call
cli
movsb
in
jecxz
call
sub
xor
inc
nop
mov
enter
mov
out
sub
test
mov
jne
jb
jg
nop
mov
jae
movsl
rcl
push
push
mov
mov
fnsave
dec
adc
cmpsl
js
out
pusha
jecxz
leave
pop
daa
xchg
popf
std
repnz
pop
sub
movsb
ret
sbb
jno
movhps
fldt
xchg
or
push
push
shll
pop
jp
xor
jb
rorb
push
int3
sbb
pushf
rol
mov
inc
mov
cmp
xor
ja
pop
out
dec
jge
popa
adc
into
rcrb
inc
inc
dec
dec
lret
imul
or
cs
mov
stc
addr16
popa
adc
dec
cltd
aas
int3
jns
in
clc
cmp
subb
mov
test
mov
repnz
gs
mov
scas
mov
and
fsubs
add
es
jle
mov
sbb
inc
daa
scas
xchg
pop
add
test
push
fsubr
push
mov
test
push
pop
xchg
fwait
sbbl
push
dec
adcb
inc
pop
push
and
mov
push
out
dec
and
repz
jmp
jge
movsl
movsb
out
mov
sbb
mov
xor
or
pop
mov
xor
aas
push
cmpsb
push
pushw
adc
dec
cmp
sarl
sub
xchg
addr16
es
mov
inc
add
xor
icebp
js
scas
filds
adc
xchg
cmp
or
jbe
mov
xor
int3
dec
inc
cs
dec
fsubs
addr16
or
dec
or
xchg
lock
out
push
cmp
fmuls
iret
xchg
std
lods
aas
fmul
lahf
xchg
in
insl
mov
inc
repnz
nop
and
jp
pushf
int
pop
cli
mov
cld
push
popf
push
cltd
inc
movb
ret
das
adc
xchg
inc
sbb
pop
andl
pop
mov
imul
mov
dec
mov
daa
xchg
or
aam
mov
call
xchg
int3
rolb
cmpsl
scas
and
push
jmp
mov
movsl
scas
pop
mov
fs
cmp
inc
pushf
into
mov
sti
dec
mov
mov
cmpsl
and
arpl
push
fiadds
and
sub
into
insl
mov
push
mov
mov
and
sub
aas
cmp
push
loop
xlat
jmp
stos
imul
ficomps
fwait
lret
dec
fcmovnbe
cs
ficoml
and
inc
test
xchg
pop
xchg
popf
outsb
jno
jg
add
pop
pop
mov
arpl
or
mov
orl
add
cmc
stos
or
inc
jnp
mov
mov
repz
test
add
cmp
pop
lahf
fdivl
cltd
iret
sarl
nop
jbe
jnp
scas
movsb
addr16
mov
movsb
dec
sti
sbb
enter
sti
add
popf
jae
mov
push
mov
xor
mov
jmp
cltd
mov
sbb
mov
scas
mov
dec
adc
dec
sub
mov
lock
lret
xor
and
mov
pusha
lret
sbb
std
in
fs
fdiv
rorl
mov
xchg
jecxz
lahf
xchg
lret
int
push
or
sub
cmp
sbb
stos
shll
jmp
icebp
xor
lods
mov
cmp
dec
into
enter
push
in
adc
xchg
arpl
mov
cs
mov
nop
and
mov
loopne
lds
nop
cmpxchg
in
imul
stos
sub
xchg
movsb
repnz
das
pop
addr16
sub
jecxz
sbb
cmp
loop
mov
aas
shl
subb
add
fs
mov
sahf
push
jle
pop
dec
mov
xchg
jne
dec
fwait
jle
lcall
and
bndldx
sbb
jae
in
pop
fnsave
xchg
and
jmp
imul
cmp
adc
pop
and
jl
hlt
sahf
das
iret
enter
jmp
and
ror
dec
xor
jge
cltd
pop
dec
add
cmp
push
jg
adc
pop
cwtl
mov
jmp
repz
std
cmc
sub
jmp
mov
mov
stos
rcll
lcall
jno
sarl
es
lret
shl
lahf
lds
sub
clc
into
adc
test
daa
bound
addr16
cmp
mov
ret
sub
sub
into
mov
pop
mov
std
add
loop
pop
rcrl
movsb
inc
inc
out
xchg
mov
and
lea
popf
cmp
out
or
xor
xor
call
push
mov
cmp
int3
dec
xchg
xchg
push
or
xchg
adc
xor
stos
or
inc
fistpl
pushf
addl
mov
add
mov
icebp
sbb
xchg
popf
push
adc
lea
mov
addb
inc
popa
jo
pop
xlat
loope
inc
stos
and
call
xchg
arpl
out
mov
movsl
inc
mov
into
push
mov
dec
mov
in
cmp
push
cltd
sbbb
stos
xor
cmp
push
pop
push
aas
lods
cld
addl
sbb
lret
loop
stos
les
nop
mov
mov
mov
pop
push
pop
sub
xor
iret
leave
inc
cmp
sub
in
xchg
in
imul
dec
icebp
repz
rolb
hlt
dec
repnz
test
adc
stc
les
or
stos
out
jb
mov
push
aaa
pop
inc
fs
pop
mov
push
aas
imul
and
mov
out
pop
adc
loopne
outsb
insb
fcmove
push
sbb
int3
outsb
cwtl
js
js
add
ljmp
mov
stos
fildll
dec
repz
lods
mov
hlt
and
push
sub
out
ljmp
mov
mov
fcoml
fcoml
adc
add
sti
xchg
dec
cmp
and
fdivl
leave
push
jecxz
mov
aam
mov
insb
jge
pop
out
add
data16
adc
out
cwtl
call
xchg
mov
in
out
sub
mov
shll
add
out
push
mov
in
fistpll
xor
inc
add
adcb
scas
movb
jl
outsb
and
fdivl
movsl
stos
add
inc
fwait
aaa
push
and
jg
out
fsubrs
std
jbe
jns
ds
push
sub
push
ja
or
fs
sub
inc
lods
movsl
pop
adc
mov
and
jl
mov
cs
dec
mov
or
jg
mov
mov
iret
mov
movsl
inc
sub
push
lahf
mov
movsb
aaa
xchg
jnp
pop
xor
sbb
sbb
xor
cs
imull
cmp
push
les
loopne
movsb
jbe
popa
into
lcall
ja
inc
imull
xor
ljmp
test
push
mov
insb
fidivs
mov
jp
outsl
adcl
js
pop
insb
icebp
jne
das
cmp
movsl
imul
xor
test
lock
pop
cmp
mov
pop
fcomp
pushl
xchg
xor
sbb
pop
in
add
cmp
fisttpll
lahf
xchg
adc
loop
arpl
test
rolb
mov
xor
out
imul
xor
inc
jg
hlt
scas
je
pop
inc
fstl
in
sbb
out
pop
or
sub
inc
xor
inc
add
bt
popf
clc
cmp
push
inc
loope
xchg
xor
push
pop
or
mov
xor
and
int3
mov
xor
lea
mov
mov
push
lods
js
adc
leave
pushf
pushf
fdivs
repz
fisubs
cmp
shll
add
dec
cs
negb
push
xchg
lahf
push
jae
xchg
cmp
dec
dec
test
xchg
push
loopne
mov
push
lret
movsb
or
in
enter
test
fwait
jbe
sbb
loopne
fstl
xchg
or
push
arpl
pop
out
xchg
jnp
hlt
inc
test
push
jg
add
dec
int3
jecxz
sbb
outsb
je
push
add
jp
pushf
mov
pusha
mov
push
mov
push
xchg
aad
pusha
jle
or
push
addr16
mov
and
inc
or
fisubrs
cwtl
dec
mov
xchg
bound
push
pushl
mov
cmpsl
push
add
or
adc
test
scas
and
cmp
ficoml
sarl
or
xchg
iret
test
lods
cmc
shl
repnz
mov
ljmp
sbb
jae
outsl
mov
push
enter
or
adc
jb
or
xor
inc
xor
cmp
push
insb
jnp
mov
scas
inc
xchg
sahf
add
pop
addr16
adc
fidivrl
dec
inc
inc
pop
cmp
cli
aaa
inc
adcb
ficomps
je
mov
je
shlb
or
adc
or
sar
and
pop
push
push
xchg
ret
rcr
fsubs
mov
inc
or
or
mov
mov
add
mov
pusha
in
pop
push
cmp
aaa
data16
push
jno
nop
jns
inc
and
xor
scas
cmpsl
rcr
enter
jge
push
into
dec
pop
lcall
sub
pop
cmp
mov
add
jecxz
aas
or
rolb
dec
data16
arpl
mov
push
adc
lds
mov
mov
add
mov
xor
sub
test
fsubl
inc
push
lret
add
filds
pushf
cmp
test
cmp
neg
pop
popa
and
int
jne
fsub
pop
cwtl
std
xor
jmp
mov
lock
pop
data16
pop
in
push
mov
hlt
and
lock
mov
cmpsl
xchg
stos
scas
lods
fst
sbb
xchg
or
mov
cld
adcl
mul
sti
jno
lock
mov
push
mov
jbe
pop
cmpb
mov
sbb
les
sbb
in
jnp
inc
jno
pop
stos
pop
test
popf
fwait
mov
jle
or
in
inc
xchg
push
lods
xor
adcl
xorl
xchg
xchg
idivb
dec
leave
cli
or
xchg
xchg
cmp
cltd
iret
dec
push
xchg
xchg
add
and
mov
fldt
inc
int
ss
cld
add
into
lret
repnz
fistpll
cmp
mov
stos
cs
sub
add
jge
mov
aaa
adc
ljmp
jbe
push
pop
decb
xor
jg
and
cmp
call
stos
jp
test
repnz
mov
mov
sbb
imul
ljmp
bound
lret
hlt
fldcw
movsl
jnp
ljmp
xor
or
enter
cmp
daa
jns
xchg
add
xchg
insb
addr16
adc
lahf
ret
cltd
cmc
dec
into
jae
push
sahf
cltd
imul
sahf
out
sub
shll
add
aam
cli
push
jb
mov
inc
mov
mov
movsb
repz
fidivrs
mov
or
outsb
adc
and
outsb
xor
xor
sbb
and
add
push
inc
mov
loopne
popf
test
iret
push
mov
xor
cltd
inc
xor
pop
jmp
je
mov
in
pushf
loopne
int
stos
mov
fdivr
daa
jns
mov
dec
cmpsl
lock
xchg
and
push
jb
mov
and
cli
and
outsb
cld
push
add
jecxz
out
mov
or
jns
in
ja
pop
dec
mov
int
xchg
jecxz
pop
adc
loop
push
mov
mov
loope
cli
xchg
adc
jp
push
or
daa
push
xchg
pop
out
mov
jnp
or
mov
jmp
cltd
arpl
sbb
pusha
push
scas
jb
dec
mov
js
jne
cli
sti
push
inc
adc
and
jg
imul
adc
push
dec
jp
adc
mov
sbb
mov
popf
sbb
mov
inc
inc
ds
push
push
notl
cmpl
mov
lods
push
int3
dec
mov
adc
mov
sbb
jb
repz
mov
add
adc
fstpt
cmp
cltd
push
ljmp
dec
push
call
adc
call
xor
pop
mov
jp
jg
mov
cmpsb
or
lcall
mov
into
or
cld
scas
jbe
arpl
xchg
inc
jne
xchg
icebp
or
jo
and
xchg
add
test
mov
sbb
add
call
push
pusha
sti
aam
sbb
test
jl
mov
testb
jne
jns
xlat
sbb
popa
leave
mov
sahf
out
scas
mov
lds
sub
dec
push
nop
mov
ss
test
dec
pop
out
mov
nop
jecxz
xchg
aas
loopne
jo
scas
sarl
xor
mov
mov
mov
mov
inc
sub
cmp
rcl
ficompl
mov
dec
add
mov
sti
out
mov
jnp
lret
sub
push
jecxz
rorl
ss
adc
repz
mov
mov
push
inc
adc
ds
mov
jle
mov
xor
fnstcw
pop
stos
xor
push
ja
lock
scas
xchg
xchg
mov
in
fcmovu
xchg
scas
es
fs
movsb
aas
mov
sub
fs
xor
pop
gs
imul
rorb
add
test
push
cmp
push
xchg
xchg
push
xlat
test
jl
push
inc
cmp
movsl
adc
shlb
clc
outsb
and
jns
iret
iret
lods
push
and
rcrb
shll
push
or
imul
mov
mov
bound
adc
push
jno
loope
mov
divps
ficompl
xor
js
push
lods
xchg
sahf
sbb
mov
shl
loope
stc
jmp
loop
mov
aad
inc
cmp
xchg
or
inc
inc
jo
loop
aaa
pop
gs
rcrb
test
add
scas
xor
les
or
pusha
xchg
or
lods
adc
xor
test
dec
ret
or
lret
rcr
mov
popf
adc
push
push
fcom
imul
pop
insb
mov
into
sbb
or
hlt
clc
les
or
cmpsl
jnp
pop
icebp
push
rolb
inc
add
sar
jl
fstps
jmp
bound
push
ret
or
jb
mov
shrb
or
mov
mov
out
jns
fsubrl
jecxz
stos
pop
jae
adc
xor
shrl
in
lds
popf
imul
cld
mov
aam
add
push
inc
pop
pushf
and
call
icebp
outsl
pop
jns
imul
lret
xlat
dec
mov
mov
fs
lcall
pop
callw
aas
in
inc
inc
xchg
rol
inc
push
scas
pop
push
push
mov
add
xchg
add
sbb
push
test
dec
stos
cli
adc
push
xor
xor
cmovae
push
repnz
repnz
or
jge
fsubp
aam
sahf
mov
jle
cmc
sti
cltd
add
shr
or
fisttpll
mov
std
pushf
xor
add
xchg
fimuls
jmp
repnz
jae
xchg
jp
sub
or
mov
add
sahf
hlt
test
into
pop
push
insl
mov
out
jno
xchg
cmp
lret
sbb
add
adcb
lret
push
and
pop
adc
lret
cmc
stc
or
dec
adc
or
pop
fs
nop
sbb
jbe
or
rol
xchg
mov
bnd
scas
mov
mov
mov
arpl
lods
repnz
mov
or
xor
lahf
mov
or
jecxz
in
mov
mov
loopne
int3
sub
and
xchg
xchg
lahf
int3
mov
fwait
loope
jecxz
push
push
or
repnz
sub
lahf
cmp
fsubr
jns
dec
imul
sub
push
xor
sub
inc
dec
into
jbe
mov
fimull
and
push
shl
cld
xchg
xchg
mov
sub
cmp
into
sbb
pop
dec
lods
adc
add
dec
hlt
stos
and
popf
mov
cmp
sbb
jnp
sbb
pop
imul
xchg
stos
call
ljmp
mov
je
or
sahf
mov
sbb
push
fldenv
adc
jnp
mov
cwtl
add
cmp
and
sub
arpl
xchg
hlt
mov
or
mov
insl
or
and
mov
or
sti
jle
inc
cmp
dec
frstor
mov
push
in
jp
push
aaa
ret
out
add
ret
push
pop
mov
mov
cmp
sub
jno
pop
sub
cli
push
cmpsb
fistpl
pop
aaa
outsl
rorl
and
out
xchg
dec
int
fmul
jg
jb
aaa
mov
mov
test
push
or
into
ret
add
call
adc
inc
aad
subl
rcl
xor
lds
les
or
push
inc
pop
add
jp
jmp
add
clc
adc
pushf
dec
fs
out
mov
lods
push
xchg
mov
out
mov
lock
adc
out
test
mov
ja
leave
rorb
cmp
cli
cwtl
add
push
adc
sbb
lock
pop
jmp
shlb
mov
jmp
push
sub
jle
pop
push
mov
mov
mov
fidivl
cmp
push
insb
lea
sbb
lret
or
call
adc
adc
dec
mov
sbbb
or
nop
cmpsl
adc
lds
shr
xchg
jp
idiv
hlt
sar
inc
and
add
std
or
add
xchg
sbb
test
int
xchg
add
inc
aaa
aam
pusha
flds
xchg
scas
pushf
mov
insb
dec
dec
rcl
sub
test
adc
cwtl
into
int3
jl
mov
pop
int
mov
mov
xor
aaa
aam
iret
mov
adc
sub
insl
jmp
inc
mov
and
clc
stos
dec
aas
mov
mov
sbb
sbb
mov
and
mov
sbb
push
into
sub
mov
push
add
jnp
addr16
mov
mov
xchg
sub
mov
mov
xchg
sti
or
inc
cmp
iret
xchg
mov
imul
dec
push
add
js
push
dec
sbb
push
sub
loop
repnz
dec
push
dec
ret
lret
inc
dec
scas
test
in
push
out
aad
lcall
pop
add
in
in
inc
lods
jp
dec
xor
rcl
mov
sarl
pop
bound
lret
jecxz
rorl
test
pop
add
mov
xor
addl
mov
sub
jns
push
stos
mov
outsl
jg
adc
pop
lods
add
xor
dec
and
and
jno
push
cld
mov
pop
or
or
and
mov
jmp
mov
shlb
out
out
xchg
ljmp
or
push
mov
mov
imulb
jge
fidivrl
xor
add
or
and
jp
mov
mull
mov
call
int
pop
sbb
mov
dec
mov
push
push
int3
mov
lcall
mov
gs
orl
mov
push
mov
iret
outsb
sbb
out
mov
test
fucomp
inc
xor
jge
push
loopne
repz
pop
decl
adc
mov
stos
orl
dec
xchg
rcr
popf
imul
test
cmp
int
add
pusha
jo
test
test
or
and
fisubrl
adc
mov
bound
fs
or
jne
les
xor
xchg
cmp
scas
mov
insl
es
pop
inc
test
outsb
xlat
jl
arpl
cli
daa
inc
jg
xchg
sub
mov
mov
popa
fdivrl
xchg
subl
sub
shlb
loope
lcall
inc
aad
xorl
mov
in
test
mov
stos
jl
mov
loope
or
insl
mov
push
xor
cwtl
mov
fwait
addr16
jp
das
test
clc
dec
adc
shlb
or
xchg
clc
dec
rclb
nop
daa
cmp
cmp
push
nop
mov
jnp
sarb
sub
xor
aaa
lock
subl
lea
repnz
dec
fistpl
and
lods
sbb
js
and
rcrb
fists
clc
decl
sbb
jnp
xchg
loope
push
mov
fs
mov
fadds
pop
xchg
in
lcall
mov
cltd
incl
sub
add
sub
push
jge
iret
add
sbb
mov
fnsave
pop
sar
pop
sbb
arpl
incl
aas
adc
push
xchg
inc
cld
fwait
push
pop
pop
out
pushf
scas
or
sub
call
and
cmpl
push
popa
inc
adcb
mov
lret
into
jb
mov
push
loop
add
out
pusha
mov
mov
cltd
lods
in
scas
out
push
push
inc
insl
pop
fldt
in
lock
jae
roll
mov
aas
mov
lret
shrl
clc
pop
mov
enter
pop
addr16
mull
push
xor
jo
mov
les
mov
adc
shl
pop
dec
mov
push
stc
lods
jle
iret
fcmovnu
mov
aad
aaa
ret
inc
outsl
insl
sub
pushf
pop
test
or
cmp
stos
les
hlt
inc
mov
data16
and
mov
loopew
sbbb
enter
xchg
add
push
es
xchg
mov
cmp
mov
jbe
sarb
scas
fistpl
adcb
lds
dec
ret
rclb
sub
out
and
loopne
mov
inc
mov
cmc
mov
xor
or
sbb
gs
fwait
inc
es
adc
add
cmp
outsb
pop
addr16
icebp
scas
jbe
and
loope
pushf
into
jb
lret
push
xorl
jmp
leave
cmpsb
mov
dec
xlat
in
dec
cld
pop
pop
inc
ret
iret
insl
xor
out
imul
mov
cltd
hlt
mov
loop
fs
xchg
adc
movsl
add
nop
xor
sub
sbb
push
imul
sbb
or
or
sub
adc
lret
bound
xlat
jp
sub
fdivs
cmp
sbb
subl
mov
inc
cmp
cmp
gs
mov
test
in
je
sbb
push
jp
lock
push
leave
mov
das
insl
xor
dec
enter
inc
repz
jmp
push
add
mov
pop
sub
push
gs
dec
out
lock
rclb
ret
ficoml
push
sub
lret
mov
std
sarl
fstl
leave
andl
xchg
dec
jmp
and
lock
jecxz
mov
mov
mov
add
adc
outsb
arpl
jle
push
cmp
mov
aaa
xchg
jle
sbb
iret
xor
outsb
cmp
inc
roll
lahf
mov
push
ret
push
and
dec
std
jo
jecxz
rcrb
mov
mov
mov
sbb
nop
fcmovu
ljmp
add
mov
dec
stos
cmp
dec
xchg
lds
ficoms
push
jmp
outsl
or
sti
incl
stos
or
cmp
das
rorb
out
add
es
scas
loope
dec
lret
jb
clc
incb
jno
ds
in
pop
into
cmp
mov
lea
adc
into
push
das
ret
aas
xchg
div
lret
icebp
test
xor
je
jge
dec
and
mov
fsubrs
fnstsw
pop
mov
or
dec
xchg
inc
jb
push
xorb
jg
jl
sub
arpl
mov
jne
push
push
sub
clc
xor
rcrl
sbb
hlt
pop
mov
jg
je
add
jnp
push
je
sbb
ja
fldcw
sahf
dec
add
std
notl
push
ljmp
aas
jle
adc
inc
adc
pop
mov
and
inc
fucomip
lds
inc
dec
shll
push
rorl
js
icebp
test
int3
loopne
adc
and
cmpsl
ficoms
andl
cld
mov
push
testb
clc
xchg
adcl
pop
out
imul
and
inc
sbbl
sub
jb
xchg
dec
iret
data16
sub
cmp
pushf
inc
dec
gs
mov
mov
inc
mov
call
fmuls
aas
jmp
sbb
lods
sbb
ss
daa
cs
popf
test
in
inc
jl
xorl
testl
cmp
enter
cmpsl
lock
bound
sub
fucom
sbb
cltd
jne
rcrl
imul
shl
add
pop
movsl
sbb
xchg
fimull
je
add
ja
int
push
fmull
or
enter
and
mov
movsl
sbb
xor
mov
clc
loope
dec
adc
pop
pop
dec
mov
add
lea
push
loopne
jns
jae
push
ret
das
xchg
sub
sbb
or
lea
daa
lds
ret
sbb
dec
lods
and
jae
mov
enter
pop
es
jecxz
mov
adc
and
stos
jle
lock
in
push
or
xchg
xorl
inc
xchg
xchg
xchg
adc
add
pop
iret
cmp
add
xchg
jle
push
pop
xchg
xchg
ss
data16
nop
xchg
push
test
pushf
or
lea
lock
pop
rolb
mov
jmp
or
cmp
cld
nop
hlt
gs
fcoml
out
sbb
fbld
mov
ficompl
in
pop
or
cmpsl
mov
daa
stos
add
mov
jmp
data16
mov
push
fs
stc
fmuls
jo
xlat
sub
arpl
xor
dec
aam
fdivrp
mov
and
repnz
xor
pop
inc
std
movl
push
cmp
cmpsl
dec
and
int3
or
push
cli
btr
add
mov
pop
mov
les
mov
js
adc
xchg
jp
xchg
cld
test
cmp
jg
lahf
or
cli
les
xor
mov
inc
inc
and
add
push
fwait
xor
in
loop
cli
pop
mov
push
outsl
cmpl
push
lcall
xor
jno
xor
std
shrb
hlt
mov
imul
mov
popl
test
xchg
fisubrs
ret
mull
mull
mov
test
mov
mov
xchg
les
lods
pop
or
adc
mov
jb
sarl
test
loop
jge
dec
aad
or
insb
scas
enter
shrd
push
jle
pop
sbb
lret
les
ficomps
orl
adc
pop
pop
push
mov
lret
lock
push
inc
fs
push
movsl
lcall
loope
jb
inc
test
inc
shll
addr16
fsubrs
dec
xor
cmp
or
jmp
cmpsb
testb
mov
jo
sbb
cmpsl
adc
or
aas
sbb
mov
rol
out
in
and
cltd
mov
adc
test
fadds
insb
xor
dec
sbb
and
jb
pushf
pop
sbb
fdivr
ss
dec
add
out
jne
mov
xchg
call
rcr
xor
test
adc
rorb
sbb
xchg
mov
sbb
push
iret
or
cwtl
ss
inc
lds
aaa
lea
pop
dec
add
fwait
push
enter
sbb
mov
mov
lcall
xchg
mov
iret
gs
cmpsl
out
ljmp
enter
test
mov
pop
jl
idivl
sub
repnz
popl
adc
cmp
sub
mov
pop
xor
xchg
push
push
out
out
nop
mov
insl
in
ss
lea
jo
sbb
in
sbb
mov
push
mov
in
dec
dec
xor
and
cmp
les
push
outsb
push
inc
stos
adc
xlat
and
or
cmp
xor
and
mov
test
xchg
fcmovne
imul
outsl
shlb
loop
insl
gs
pop
or
xor
pop
mov
and
add
popa
mov
xor
push
xchg
mov
cli
pop
and
mov
xchg
pop
push
mov
pop
lods
xor
fdivs
mov
es
fldcw
stc
int3
pcmpgtd
cli
dec
icebp
jnp
sbb
aam
inc
lock
sbb
sbb
scas
pop
mov
sarl
call
negb
addr16
imul
pop
xchg
mov
xor
mov
lea
fsubrs
daa
jmp
les
sub
stos
dec
pop
sar
dec
jnp
xchg
xchg
xor
imulb
cmp
in
imul
dec
sub
jl
sbb
mov
mov
das
ljmp
aas
cmp
out
xor
out
push
nop
push
icebp
shrl
loope
adc
push
ret
test
in
and
push
mov
pop
lods
lcall
xchg
ss
pop
adc
ja
cli
out
jp
inc
rclb
mov
insb
push
add
sbb
fwait
mov
jl
mov
imul
xchg
imul
pushf
and
push
es
jns
push
js
cwtl
out
aad
jmp
xor
push
mov
sbb
mov
aas
rolb
insl
decb
je
fidivs
sarb
sahf
cs
sub
jbe
sbb
pop
sti
sbb
sub
adc
inc
adcl
loopne
test
xor
xchg
out
loopne
insl
inc
xchg
cmp
jp
adc
sbb
insb
push
int
sbb
mov
mov
inc
add
test
cmpsl
popf
and
pop
imul
sbb
jo
fisubrs
pop
push
dec
fwait
mov
pop
fdiv
popa
inc
or
gs
out
lods
or
mov
xchg
stos
iret
jbe
pop
inc
sbbl
mov
cmp
ds
int
iret
das
fs
pop
jmp
mov
es
inc
cmpsl
out
inc
cmpsl
push
xor
sub
les
sbb
mov
pushf
cvttps2pi
daa
add
xchg
in
cmp
push
nop
iret
dec
daa
shl
xchg
sbb
dec
jbe
push
sub
sahf
dec
cmp
xchg
sbb
movsb
or
sbb
mull
mov
mov
sarl
add
loopne
xchg
or
inc
xorl
arpl
dec
mov
sub
inc
js
mov
add
es
mov
cmc
xor
movl
xor
jl
add
adc
roll
mov
popf
pop
je
adc
js
lret
jg
test
test
and
jp
sub
dec
int
adc
cmp
in
xchg
add
cli
pop
push
mov
push
mov
pop
jne
in
dec
inc
fwait
xor
fmul
out
aaa
and
icebp
mov
imul
imul
scas
jg
pop
mov
mov
cwtl
fdiv
pushf
sub
inc
xor
subl
or
add
movsb
adcl
xchg
js
dec
xlat
or
adc
inc
adc
pop
mov
test
ljmp
rcrl
mov
imul
je
jns
push
scas
aad
fisttpl
add
cwtl
xor
inc
xlat
mov
or
mov
outsb
loope
shl
dec
movsl
and
and
pop
pop
testl
cmovle
mov
rcl
call
scas
mov
lods
movsl
hlt
loope
cmp
les
jle
push
sub
jnp
mov
and
jl
sbb
ds
inc
sahf
or
mov
push
and
and
and
mov
xor
into
push
and
jb
inc
out
repz
and
in
mov
lock
mov
clc
sti
int
sub
int
inc
pop
shl
pusha
rorb
in
int
inc
in
aas
push
jg
and
push
cs
faddl
leave
fwait
pop
xchg
outsb
popf
mov
lods
dec
pop
or
mov
or
into
pop
mov
jmp
pop
pushf
addr16
icebp
adc
div
dec
push
mov
and
aam
pop
inc
cmp
dec
imul
push
and
jae
xchg
lret
push
dec
jge
inc
add
imull
daa
imul
push
aad
jl
roll
cmpsb
push
xchg
pusha
out
mov
pop
sub
pop
pop
mov
nop
cmp
fsubl
shrb
push
int3
out
mov
adc
xchg
jmp
lods
or
pop
in
and
cs
add
gs
ret
dec
and
xorl
mov
in
sub
sub
lret
mov
addr16
mov
lret
test
or
xchg
scas
pop
pop
push
shr
jno
xor
dec
cltd
xorb
xchg
and
mov
out
fwait
dec
rcll
loopne
xor
repz
push
ret
imulb
jp
push
lret
and
mov
outsb
sub
enter
bound
lahf
aam
pop
clc
loop
std
push
sub
cmp
in
mov
xchg
pop
icebp
mov
mov
test
mov
cmp
imul
pop
xor
insb
adc
and
dec
orb
sub
dec
lods
movsb
add
rclb
push
jns
test
cmpsb
fsubp
xor
stc
mov
js
js
mov
fistpl
aad
lock
loopne
ljmp
ss
xchg
roll
repnz
xor
cmp
stos
add
push
push
arpl
stos
cmp
dec
enter
in
aam
push
popa
hlt
ficomps
addr16
rclb
or
les
jge
aas
pop
in
loope
rcrl
and
lods
xchg
stos
cmp
test
xchg
sbb
jne
push
mov
adc
xor
push
into
int
xchg
addb
pop
call
push
daa
ss
mov
pop
xlat
pop
orl
addr16
pop
jo
js
mov
cmpsb
inc
mov
movsl
add
jp
scas
inc
xchg
test
pop
push
dec
inc
add
repnz
loop
lea
scas
push
and
add
jo
outsb
inc
push
out
inc
cmpsb
jp
cmp
mov
cmpsl
dec
fdivrl
jno
movsl
aaa
loop
inc
cmp
pop
ds
inc
pop
pop
int
inc
push
cli
jecxz
mov
dec
pop
aaa
sbb
xor
dec
mov
jae
outsb
stos
int3
lret
cli
xchg
mov
xchg
jae
cmpsb
add
and
lcall
sbb
into
dec
cmp
jmp
int
aas
cmp
and
push
mov
std
xchg
mov
movsl
icebp
repnz
push
jae
jb
or
jne
rcll
notl
repz
sbb
inc
fs
inc
leave
je
fsubr
add
dec
and
xor
push
icebp
xchg
int
push
push
sbbb
push
shrb
movsb
imul
jnp
cmp
sbb
stos
shrb
push
cmc
std
repnz
mov
adc
jg
and
out
mov
loopne
gs
int3
xor
xchg
add
daa
mov
mov
push
mov
push
lock
lea
jbe
sub
imul
scas
mov
mov
xor
sarb
cmp
push
jle
xchg
aad
pop
fbld
jno
push
pop
stc
in
sarb
sub
aaa
repz
adc
shrl
loope
aas
divb
pusha
in
pop
stos
ljmp
in
cmp
pusha
outsb
insb
ds
insb
notl
clc
sahf
bnd
push
loopne
or
add
js
jge
inc
ds
add
daa
movl
insb
out
test
in
jmp
shll
imul
fcoml
imul
mov
mov
xchg
popf
add
sub
push
jecxz
mov
push
out
pop
add
lods
aad
bound
mov
cwtl
sbb
clc
or
jl
xchg
dec
xchg
mov
xchg
xchg
xor
lds
fbld
mov
sbb
sub
popa
ljmp
in
mov
inc
imulb
aaa
aad
xchg
fsubrl
jne
movsl
outsb
xor
dec
cmp
stc
jmp
mov
inc
jne
lods
xchg
add
mov
lcall
iret
pusha
lock
scas
faddl
dec
or
arpl
pop
bnd
dec
push
stc
orl
or
shlb
lret
rcrl
aam
orl
popa
cmp
jo
sbbl
and
jge
mov
add
fcmovne
lods
push
and
mov
fadd
adc
mov
in
mov
subb
cmp
inc
dec
adc
scas
or
jecxz
mov
pop
jno
jne
xchg
rorb
mov
push
push
call
shrl
sbb
scas
aas
push
stos
adc
inc
and
inc
test
lahf
sub
inc
mov
xchg
mov
aad
pop
js
xor
outsl
sbbb
repnz
inc
add
mov
cmpsl
mov
lock
cld
or
mov
add
cmp
mov
repnz
and
push
xchg
xor
scas
xchg
js
cmpsb
xchg
fs
adc
or
lahf
and
das
add
insb
outsb
repz
gs
out
lcall
fadd
adc
lock
add
or
mov
mov
adc
pop
imul
int3
lahf
or
sbb
test
icebp
mov
dec
cwtl
mov
xchg
jbe
in
ret
lcall
fimuls
es
ficoml
dec
sbb
mov
aaa
push
ljmp
or
out
aam
pop
in
mov
xor
incb
xchg
stos
test
sbb
pop
or
dec
loop
fsubr
stos
pop
outsl
sbb
or
test
aaa
jp
mov
xchg
test
mov
push
pop
fld
push
test
int
push
push
loopne
xchg
jo
outsl
add
fmulp
xchg
dec
push
xor
mov
add
stos
filds
icebp
cltd
in
notb
imul
cli
mov
outsl
out
add
sbb
pop
add
in
scas
push
mov
and
dec
sbb
test
or
and
push
shrl
fidivs
scas
in
cmp
out
shl
aas
aam
pusha
or
sbb
mov
mov
mov
mov
imul
inc
mov
add
js
pop
jno
lret
stc
mov
dec
aad
movsl
gs
mov
cmp
pop
push
pop
mov
arpl
xor
inc
inc
xor
jge,pt
pop
iret
mov
popa
sub
mov
lahf
pop
adc
xchg
adcb
repz
push
add
cwtl
push
sti
sbb
stc
int
lods
pop
popa
mov
xchg
outsl
push
cmp
jbe
loop
jb
out
sbb
loopne
sub
push
cmp
pop
xchg
push
pop
pop
adc
mov
fcmovbe
movsl
pop
nop
ja
mov
mov
repz
mov
ljmp
sbb
mov
sub
sub
mov
fwait
mov
sub
shrb
pop
ds
test
in
xlat
mov
adc
mov
sbbl
adc
or
jle
sub
jae
in
and
roll
mov
cmp
fwait
pop
add
xchg
sahf
into
adcb
fcompl
xchg
mov
loopne
out
shlb
jae
out
call
cmp
cltd
enter
or
aad
mov
js
lods
xor
dec
cs
jge
cmp
inc
pop
mov
int3
inc
jbe
xchg
dec
pop
sbb
clc
adc
mov
out
cmc
in
mov
lods
imul
movl
xor
xor
or
adc
and
out
ljmp
pop
dec
fcmovnb
xor
or
push
mov
and
adc
aaa
sbb
dec
dec
cwtl
cmpsb
outsl
lretw
mov
pushf
test
je
and
in
lret
aam
adc
mov
fstl
stos
fmulp
sahf
add
cmp
cmpsb
test
pop
inc
sti
dec
jmp
bound
popa
ljmp
xchg
or
fisubs
adc
cmp
insb
and
outsl
fwait
loop
loope
bound
mov
pop
mov
pop
cmp
mov
idivl
out
or
add
ret
jbe
mov
mov
xchg
adc
js
lret
in
xchg
and
push
hlt
sub
xor
add
cld
xor
pop
sub
pop
push
cmc
mov
mov
je
ljmp
sti
out
mov
aas
push
icebp
loop
lock
call
mov
arpl
fadds
push
lock
xchg
js
or
cmp
adc
add
jle
mov
pop
sbb
dec
mov
xchg
push
mov
dec
add
fwait
sbb
add
pop
xchg
adc
dec
addr16
mov
sub
mov
pushf
in
xlat
in
in
push
or
mov
shrb
jmp
pop
out
nop
and
lcall
xor
cli
pop
gs
mov
or
xor
push
or
pop
ds
or
aaa
pop
bound
outsl
xor
pop
popf
dec
rcr
jmp
pop
pop
jg
inc
rcr
stc
ja
push
insb
dec
xor
lods
sbb
data16
dec
jmp
mov
jmp
mov
push
mov
aam
hlt
lret
add
or
mov
sbb
mov
jbe
inc
cld
or
ficoml
jl
test
clc
jno
int
sbb
and
push
mov
sub
gs
lock
inc
jmp
push
push
dec
adc
rorb
aad
mov
mov
xor
cmp
mov
mov
inc
push
or
clc
insl
sbb
rcl
push
pop
or
out
adc
lret
daa
push
sbb
xor
ret
ror
or
lahf
imul
mov
fsubrl
xchg
push
rolb
pop
ret
push
mov
adc
inc
dec
adc
sub
inc
lcall
fwait
gs
mov
xchg
push
dec
and
sti
enter
mov
aaa
jne
cmp
adc
push
fidivl
cwtl
cs
and
jle
push
je
out
aad
sub
ret
add
lcall
xlat
ret
ljmp
sbb
enter
dec
stos
test
mov
xchg
lcall
cmpl
icebp
sahf
xlat
xchg
pushf
dec
cmp
cmp
out
test
jmp
adc
mov
adc
notl
movsb
out
mull
push
in
or
fwait
push
lea
push
es
push
mov
mov
sahf
pop
xchg
push
outsl
aaa
pop
cwtl
ret
mov
mov
or
sub
pop
add
pop
lods
sbb
cmp
fs
mov
or
jae
scas
mov
xchg
int
stos
fwait
sub
xchg
lea
outsl
cmp
push
js
push
fisubrl
add
push
mov
cmpsl
pop
push
cld
mov
sbb
lret
adc
cmp
dec
mov
aam
jmp
sbb
pop
xchg
pop
dec
outsl
and
jecxz
loopne
lahf
movsb
fs
mov
aaa
sbb
cwtl
lret
pop
sti
mov
pop
mov
pop
insb
sub
out
mov
out
gs
cmpsb
stc
pop
fwait
jl
sbb
int
mov
lahf
push
daa
in
jns
js
dec
insl
dec
dec
lods
xchg
filds
rclb
xchg
pop
and
jb
movsl
out
inc
pop
sbbl
addl
mov
push
scas
ret
pop
imulb
fcom
fstps
xchg
outsl
int
push
ret
mov
addl
je
mov
mov
gs
outsl
dec
nop
jb
mov
pop
in
xlat
outsl
push
jg
sub
aad
outsl
loop
sub
xor
add
mov
dec
push
inc
push
and
fxch
pop
lcall
in
int
fmuls
repz
jb
xlat
inc
rcrb
xlat
int3
push
fstpl
pusha
mov
add
mov
stc
mov
cmp
inc
cwtl
arpl
fwait
push
ja
xchg
jns
scas
pop
lods
pop
sbb
out
adc
dec
ljmp
mov
inc
jg
inc
pusha
sbb
cs
push
andl
mov
sub
push
sbb
scas
jge
nop
clc
add
out
fadds
mov
in
or
sahf
xchg
lea
fwait
outsl
test
stc
and
jp
push
repz
enter
in
cs
pusha
fsts
sarb
shll
mov
mov
sbb
fstpl
or
sbbb
fwait
xchg
scas
push
imul
mov
pop
mov
arpl
mov
mov
cmp
fstl
fistpl
mov
call
dec
fs
clc
adc
lock
adc
xchg
cmp
dec
mov
pop
mov
add
int
push
mov
imul
jbe
add
popf
es
loope
jne
js
mov
mov
ja
xor
cmpsb
dec
dec
cs
cmpsl
outsb
or
jno
fistpll
mov
aad
fnsave
cmp
add
test
test
in
movsb
hlt
mov
scas
push
out
mov
or
fbstp
aas
dec
push
mov
xlat
adc
insl
push
aam
cmpsl
dec
mulb
jge
inc
stos
popa
loopne
aas
out
rcll
mov
mov
fucomip
cmp
xor
ljmp
xor
jns
inc
add
pop
outsb
fsts
into
lods
insl
aas
and
lahf
in
jmp
add
or
mov
or
push
and
xchg
test
push
pop
idivb
repz
lds
jle
xlat
ds
out
hlt
sahf
mov
pushf
mov
iret
mov
stc
movsb
pop
icebp
pop
cmp
sub
add
cmpsl
pop
xor
mov
mov
sub
dec
shlb
cmp
or
call
pop
dec
fstl
shrd
jo
xchg
dec
push
sub
push
sub
mov
xchg
ret
adc
xlat
pop
mov
mov
mov
add
sub
fstpt
ds
fbld
mov
les
xchg
pushf
aad
mov
in
pop
into
aas
xchg
in
add
mov
mov
test
bound
inc
mov
mov
mov
addl
icebp
femms
mov
xlat
xor
lea
je
outsl
add
sbb
add
mov
cmp
mov
jge
mov
xorl
add
xchg
pop
sbb
fs
pop
shl
dec
mov
mov
push
cmp
mov
jg
in
cltd
inc
xor
popf
mov
int
jge
inc
inc
inc
in
xor
ljmp
std
inc
sub
dec
mov
jmp
ljmp
or
ret
adc
adc
push
cmp
sarb
in
mov
inc
loop
cmpl
imul
push
xor
jecxz
or
pop
push
dec
add
rorl
xor
es
int
push
push
shl
iret
std
lret
mov
xchg
dec
xor
mov
ja
xchg
inc
rolb
cltd
inc
cmp
insb
addl
mov
xchg
fwait
jo
mov
insl
imul
inc
sbb
mov
xchg
pop
aas
cs
sbb
fs
movb
test
xor
popa
movsl
neg
mov
cmc
or
sbb
out
dec
testb
dec
hlt
jmp
dec
or
fstps
mov
inc
movsb
mov
pusha
cld
lds
call
popa
jbe
add
gs
sub
cmp
cmpsl
push
loope
sbb
into
iret
cmc
mov
dec
push
shrd
mov
add
fiadds
mov
mov
inc
clc
sub
jecxz
stos
sti
insb
addl
shrd
mov
loopne
cmp
lock
add
stos
mov
call
mov
dec
mov
sahf
gs
jb
movsl
mov
add
aam
mov
in
xor
xor
mov
push
cmp
aaa
jl
jmp
stos
sbb
and
popf
ret
mov
cmpsl
dec
inc
or
mov
idivb
mulb
xchg
dec
mov
or
ljmp
ret
or
ss
mov
dec
sub
add
xor
add
insb
repnz
popa
fwait
into
in
jne
jae
push
scas
js
push
fdivrs
cli
imul
jge
jae
stos
mov
cmp
push
xor
or
in
aas
imull
or
lods
repnz
addr16
addr16
xor
sahf
psadbw
push
and
rcrl
jno
aad
in
ror
jmp
jg
leave
add
loopne
adc
ficomps
and
mov
mov
stos
jp,pn
ljmp
bound
add
aam
cs
insb
cli
jp
repnz
jl
jle
shlb
sbb
jae
xchg
pushf
imul
pop
or
sub
out
or
mov
xlat
mov
rorl
iret
insl
mov
push
push
push
xchg
pop
push
jmp
sub
jo
das
hlt
movsb
sub
test
addr16
xchg
xor
or
and
ss
xchg
andl
pop
mov
push
cmp
addr16
jns
shr
push
mov
jae
push
add
repz
or
or
mov
push
loope
cwtl
shrl
cld
cwtl
mov
shl
lock
and
testl
cld
and
imul
insl
mov
pop
xchg
lahf
out
jae
icebp
repnz
and
in
ret
dec
inc
xor
add
pop
out
lods
xchg
shlb
sti
outsl
ftst
pop
mov
fldl
fiaddl
mov
add
imul
cmc
imul
outsb
mov
imul
aad
cli
roll
mov
cvtps2pd
movsl
rcl
sbbb
push
pop
inc
cwtl
addr16
pusha
js
pop
fsubs
addb
in
test
jmp
in
adc
cli
push
dec
add
ss
mov
cmp
xchg
js
sub
hlt
mov
hlt
mov
sub
sarl
sti
jnp
nop
rorl
enter
dec
adcl
and
push
dec
fimull
dec
test
dec
cmp
out
sbb
or
out
in
dec
pop
das
inc
dec
andl
outsb
outsl
dec
push
jbe
pmulhw
and
testb
lds
jbe
lods
adc
ja
repnz
movsb
inc
clc
aaa
push
insb
fsubl
jle
or
hlt
loop
cld
stos
and
push
xchg
xor
std
popa
lret
dec
pop
rcrb
je
test
cld
repnz
gs
jae
ljmp
inc
add
xor
jbe
je
sbb
incl
push
mov
dec
insb
jbe
pop
insl
testl
push
cmc
and
push
movsb
pushf
cmp
jp
ss
add
pop
fiadds
add
dec
repz
xchg
dec
imul
adc
stos
dec
add
cs
xchg
fmulp
and
shrl
sub
mov
jns
pop
mov
pop
dec
sbb
xchg
and
push
push
inc
insb
loope
cld
jg
inc
dec
sub
in
ficoml
mov
adc
jle
sub
sbb
jmp
or
lock
adc
shlb
data16
or
es
mov
inc
loopne
xlat
add
ja
xor
insl
pop
jmp
pushf
out
call
int3
jmp
stos
sub
lret
sub
pop
rcll
cmp
push
sarb
xor
add
jne
inc
sub
adc
cmp
imul
add
mov
fildll
mov
in
push
std
mov
xchg
adc
test
and
cld
popf
adc
fistl
xor
lods
dec
sub
stos
shll
and
push
or
mov
push
jg
pop
rcrb
aad
mov
scas
inc
shrb
sbb
popf
cld
xor
in
jne
mov
xlat
xchg
adcb
gs
push
dec
adc
jg
les
out
cli
mov
je
nop
arpl
xchg
rorb
pop
and
aam
repnz
scas
add
repz
sub
inc
jne
test
add
les
mov
lret
std
in
orb
push
les
fprem1
or
xor
scas
arpl
push
add
mov
imul
popf
cmpl
push
adc
imul
sub
xchg
cmp
and
pushf
scas
or
hlt
or
cmp
mov
push
test
dec
or
and
pushf
jp
cmc
cli
stos
js
mul
mov
mov
dec
inc
sbb
sub
xchg
ljmp
adc
inc
mov
and
and
loope
out
rolb
sbb
push
mov
cmpsb
mov
cltd
mov
je
push
xchg
fcoml
lock
stos
mov
ds
popf
cltd
fistps
mulb
cld
mov
fdivs
out
xor
outsl
cmc
mov
dec
mov
cmp
daa
push
jmp
xlat
into
sarb
out
mov
adc
aam
inc
jno
dec
pop
popa
insb
mov
pop
popf
pop
and
pop
loope
xorb
cmp
es
lds
daa
xor
inc
sahf
cs
imul
sub
outsl
dec
jns
loop
div
imul
adc
rcll
out
loope
inc
arpl
clc
repz
icebp
mov
cmp
pop
pop
cld
pop
inc
cmp
in
mov
rorl
adc
sbb
les
into
sahf
pop
test
jp
mov
in
sub
adc
jl
mov
outsb
setbe
xchg
shlb
push
jp
in
movsl
sub
imul
gs
adc
mov
and
flds
rclb
outsl
aas
and
sub
add
jbe
mov
repz
adc
pop
stos
adc
cwtl
lods
sub
stos
rol
std
push
adc
ret
sub
push
mov
in
jae
push
jno
mov
scas
pop
aas
enter
jmp
imul
divl
lds
jbe
xchg
jecxz
and
shrl
mov
out
test
ljmp
xor
inc
insb
call
lahf
xchg
out
mov
insb
xchg
and
inc
lret
loop
fdivrl
jb
push
aas
mov
inc
mov
xor
mov
in
add
push
cld
cmp
sub
xchg
and
xchg
mov
sbb
jge
xor
aam
test
cmp
pop
int3
mov
or
ljmp
adc
sahf
lods
inc
add
jmp
out
ffree
ficomps
add
loop
lret
sbb
xor
das
cmp
aaa
or
stc
jge
nop
cmp
adc
adc
mov
and
lods
inc
xor
sub
ss
pop
enter
mov
aas
shl
ror
adc
cmc
add
int
dec
mov
mov
test
cmp
jmp
out
pop
lods
clts
jge
adc
leave
test
fstl
fnsave
das
push
xor
xchg
and
repnz
cmpsb
cmp
mov
es
outsb
cmpsl
adc
in
add
cmp
push
movsl
ss
ja
jge
scas
mov
leave
outsb
pop
jecxz
movsb
lahf
loope
xlat
add
jne
pop
push
push
xchg
or
pop
mov
push
js
sbb
mov
jmp
jge
push
add
sbb
xor
aas
and
mov
in
or
xlat
movsl
jmp
insl
add
popf
aam
test
cmove
fisttpl
sarb
ret
movsb
jnp
stc
cltd
outsb
xchg
sti
jl
ss
jno
lret
icebp
imul
jg
cld
dec
int
into
cli
orb
add
xchg
mov
loope
or
loop
sub
imul
clc
cmpb
ret
enter
dec
and
xor
lock
xor
dec
shll
orb
test
adc
ljmp
push
out
pop
sbb
subb
xchg
inc
add
mov
mov
adc
ror
insb
add
sti
or
loope
mov
pusha
add
repz
gs
pop
push
int
adc
pushf
shll
and
inc
xor
dec
popf
mov
clc
sti
popa
and
inc
sub
cmc
fadds
daa
sbb
adc
cmp
jle
shr
decb
js
adc
pop
dec
push
loop
mov
xor
sbb
mov
pop
inc
xlat
roll
cs
adc
add
lcall
mov
lcall
cmc
insl
cmpsl
ret
sbb
cmp
mov
mov
sbb
aas
sbb
jne
mov
arpl
jge
cmp
mov
std
push
cmp
xchg
popa
push
in
or
cmp
xor
or
add
pusha
push
pusha
push
ret
sub
pop
push
lds
sbb
cmp
jb
xor
cmpsb
bound
xor
mov
xor
pop
sbb
mov
fiaddl
movsl
int
jo
mov
or
add
ss
notb
mov
add
mov
xchg
cmpsb
and
mov
lcall
cld
mov
mov
cs
daa
cmp
jnp
ret
in
data16
ret
testb
popf
push
lods
in
stos
inc
icebp
push
js
iret
data16
hlt
mov
popf
lret
add
fbld
lea
cmp
imul
pop
cmp
mov
or
lret
stos
or
mov
in
arpl
mov
xor
sub
sub
call
jae
aaa
push
lock
std
loop
inc
out
les
dec
jb
out
jle
mov
das
cwtl
xchg
push
loope
pop
cmp
cwtl
cli
divl
fisubs
leave
pushl
orl
mov
scas
push
cli
sub
push
psllq
lods
pop
nop
pop
xor
mov
mov
jb
mov
sub
cmpsb
xor
jno
mov
icebp
scas
cmpb
cmpsl
out
es
insb
dec
pop
pop
pop
addr16
js
je
lahf
push
iret
xchg
das
inc
inc
push
js
andl
in
fdivrl
hlt
sahf
rolb
xor
or
xlat
xlat
out
ljmp
arpl
or
loop
fsubrp
and
in
fwait
ja
enter
pop
std
lea
inc
push
sarb
adc
imul
bound
pop
incb
rorb
push
adc
lret
out
call
stos
ljmp
outsb
and
pop
scas
push
xor
xchg
scas
loop
ja
in
je
push
loope
repz
lods
mov
insb
dec
sub
mov
inc
bound
sti
cmp
push
mov
bound
cmp
push
mov
cltd
cmp
test
adc
xchg
xchg
pop
imul
sub
lcall
mov
pop
jbe
pop
and
mov
cli
js
insb
and
iret
into
pop
add
add
idiv
sub
jge
mov
cld
sub
pusha
xchg
loop
xor
loop
or
insb
hlt
push
test
jbe
loopne
jae
cmpsb
aaa
pop
xchg
out
pusha
jnp
and
and
push
and
adc
jo
imul
into
fildl
test
mov
add
rorb
cld
fsubr
pop
aas
arpl
xchg
inc
add
fwait
sarl
imul
mov
ds
cld
leave
fldenv
movsb
sti
and
fcmovnb
dec
dec
xor
pusha
mov
inc
mov
iret
mov
mov
mov
inc
fisubrs
sarl
lret
orb
bound
dec
loop
push
inc
sbb
lahf
xor
movsl
adc
mov
pop
ss
test
sub
rcr
outsb
push
out
inc
scas
and
push
jecxz
and
fnsave
call
inc
xor
mov
jmp
mov
mov
repz
xchg
data16
ret
xor
clc
mov
movsb
clc
pop
faddp
jne
mov
aam
mov
fdivl
cmpsl
lret
lret
mov
inc
xchg
mov
aad
ja
add
xor
cld
inc
dec
cmp
and
in
rcrb
call
insl
cmpsb
push
mov
insb
insl
mov
jge
adc
mov
inc
testb
ljmp
mov
pushf
mov
stos
jg
daa
push
mov
jecxz
loop
aas
push
add
loopne
enter
popf
inc
dec
clc
mov
cmpsl
lret
mov
dec
fs
inc
pusha
cmp
pop
ret
mov
adc
outsl
add
pop
mov
fnstcw
fstps
and
xchg
cmpsb
call
das
sub
add
shll
fsubrl
xor
call
pop
fistpl
jl
lds
pop
mov
pop
push
cli
add
mov
push
mov
pop
inc
xchg
setge
sbb
xchg
and
mov
mov
inc
scas
fidivrs
jb
mov
jno
cmp
dec
add
lds
ss
stc
mov
pop
xchg
fdivrs
jae
xchg
test
ja
je
cli
sbb
jns
fsubrs
sarb
icebp
sbb
rclb
push
cmp
rcrb
jae
ja
xchg
push
pusha
xor
loopne
cmp
jne
or
hlt
mov
jl
pop
jns
or
dec
pop
push
jno
and
mov
adc
inc
sbb
pop
dec
mov
jne
jg
dec
adc
mov
cmp
jge
aas
xor
cmp
push
fcoms
data16
push
stc
aaa
mov
inc
fwait
dec
jp
aaa
sahf
xchg
mov
inc
push
int
jecxz
popf
pop
mov
sti
int3
into
pop
xor
add
jecxz
mov
jns
je
sti
cmp
jae
xor
add
add
mov
nop
push
shrl
test
inc
cmpsb
ret
add
xor
jae
xchg
lds
lcall
push
lds
and
ss
pop
sahf
mov
add
in
mov
ret
add
aam
add
inc
test
mov
xor
mov
jo
shrb
xor
sub
shrl
test
sbb
in
mov
outsb
mov
sbb
in
andb
pop
stc
lret
cmpsl
cld
prefetch
std
pop
mov
jge
xchg
and
addr16
imull
inc
cmp
fptan
cli
sub
or
mov
xchg
js
dec
dec
fsubrs
scas
aaa
lock
addl
ss
and
sbb
mov
je
mov
add
xchg
mov
insb
cwtl
jge
shrb
into
shr
or
pushw
test
subl
xlat
cmp
push
insl
push
test
mov
mov
add
test
push
data16
fistpl
sti
in
popa
jno
fimull
pop
ret
imul
fmul
mov
hlt
sbb
add
mov
stos
inc
enter
mov
push
sbb
repz
mov
pushf
add
in
popa
lea
ficomps
pop
add
in
xor
fistpll
ljmp
shll
into
cmp
sti
or
push
sub
pop
push
repz
jae
mov
mov
cltd
sub
pop
inc
dec
cld
jbe
sti
sub
xor
daa
xchg
add
jae
mov
loope
push
test
push
pop
or
jbe
dec
push
fisubl
aad
or
int3
dec
fiadds
sarb
icebp
pop
stos
inc
push
dec
fidivl
addr16
iret
mov
pop
jp
adc
or
repnz
inc
jmp
daa
add
mov
and
cli
mov
cmp
ss
mov
cmp
pop
xchg
cmp
jle
dec
inc
pushl
cmp
sub
or
or
out
mov
jo
cmp
xor
mov
out
jge
es
dec
movsb
sub
dec
mov
push
inc
pop
cltd
test
inc
inc
loopne
xchg
test
jg
adcl
clc
and
sub
mov
dec
xorl
int
mov
imull
sbb
int
sarl
mov
xchg
jecxz
pshufw
pop
xorb
in
mov
pop
aam
pop
js
in
add
cmp
pop
push
or
aas
pusha
arpl
push
dec
jge
push
fisttpll
stos
movsb
sbb
fdivl
lahf
jle
and
cmpsb
inc
cmp
cmpl
dec
inc
adc
dec
xchg
outsl
xchg
into
adc
in
sub
dec
jae
lret
cmp
loop
jmp
xchg
push
and
mov
jge
mov
adc
and
mov
xchg
cmpsl
cmpsb
jecxz
mov
xor
push
adc
call
shll
cmp
into
dec
xor
test
cld
xor
into
rcrl
ffree
or
sub
adc
insb
adc
cld
cld
adc
enter
xchg
adc
cmp
ljmp
pop
dec
xor
xor
int3
out
push
mov
sub
mov
push
jns
ret
movsl
xor
mov
xchg
filds
or
gs
in
mov
sti
dec
imul
out
jmp
mov
das
scas
scas
add
dec
daa
test
xchg
js
add
jecxz
enter
mov
xor
movsb
push
int
jb
int3
mov
dec
push
xchg
add
ss
sarb
fwait
lods
shll
cltd
aad
mov
adc
xor
dec
out
dec
xchg
sub
add
into
inc
filds
inc
push
loopne
adc
adc
add
jmp
sbb
inc
xor
rcrw
xor
xor
dec
mov
out
and
pusha
ficompl
pop
push
std
xor
ss
xor
dec
outsl
inc
ja
pushl
pushf
push
mov
push
cs
rcrb
clc
mov
dec
ljmp
mov
push
xchg
movsb
test
mov
fwait
cld
shrl
cld
inc
loope
lret
or
or
cmp
jecxz
repz
out
mov
imul
xchg
fsubrp
mov
push
js
out
into
in
imul
xchg
jb
mov
xchg
push
addr16
mov
call
loop
or
aas
fsin
lea
mov
jle
xor
inc
lds
add
int3
sbb
movsb
adc
insb
sub
xchg
lret
std
xlat
mov
and
cmc
inc
push
xchg
insl
cs
leave
add
inc
and
sub
dec
xchg
pop
lods
and
test
les
or
sbbb
or
push
outsb
mov
out
das
insl
cmp
ljmp
mov
cmpsb
adc
sub
xor
push
xchg
call
in
sbb
into
divb
mov
jo
movsl
mov
jecxz
cmp
pop
sub
lret
es
and
pop
insl
out
cmc
jnp
xor
pushf
mov
fidivl
fcmovne
cmp
push
iret
push
inc
mov
stos
repnz
inc
jg
decl
mov
sbb
pop
roll
mov
pop
outsl
mov
frndint
popa
pop
inc
push
testb
push
lds
push
ljmp
ficompl
cmovno
push
fidivl
sub
mov
imul
xchg
lock
aam
cmp
cmp
bound
jbe
aam
mov
in
jmp
and
sub
dec
cltd
clc
pushf
pusha
push
ss
mov
loope
clc
sbb
insl
sub
js
ret
fbld
add
int3
clc
fs
fadds
mov
in
push
fstpl
or
lahf
xchg
xchg
pop
add
inc
mov
insb
aad
call
stos
cmp
adc
xchg
sub
sbb
mov
pushf
inc
fst
lcall
insl
jmp
aad
jmp
fimull
imul
addr16
std
mov
jo
mov
sarl
into
inc
fiaddl
mov
cli
ficoms
cmp
imul
mov
adc
lock
lock
rcrb
fbld
jns
jne
fwait
xor
decl
mov
and
stos
push
inc
gs
out
jp,pn
add
test
adc
sub
sub
xor
outsb
sbb
push
icebp
stos
pop
mov
push
js
jmp
test
push
movsb
xchg
jno
push
sbb
movsb
mov
imull
sub
movsb
push
jno
xchg
movsl
sti
int3
jae
mov
mov
pop
jle
jmp
in
clc
push
cwtl
jno
daa
ja
xchg
ret
add
loope
mov
pop
mull
imul
mov
roll
pop
notb
inc
jp
xor
ficompl
ss
mov
add
cmp
aas
and
or
out
jb
fmul
test
jp
xlat
xor
dec
add
or
out
jp
and
mov
loopne
lods
test
jle
sbb
dec
adc
dec
fmul
test
pop
pop
cld
jp
pop
mov
adc
xchg
nop
xor
jp
and
nop
daa
and
movsl
cmc
mov
pop
push
rorl
ret
adc
test
xor
push
enter
cmp
cmc
cs
pop
out
fimuls
mov
adc
or
xorb
insl
push
iret
imul
inc
mov
push
push
inc
jb
mov
aas
jmp
popa
xchg
pop
mov
or
add
cmc
adc
pop
loopne
push
data16
movsb
jmp
jecxz
mov
nop
adc
dec
rolb
lods
mov
mov
fdivs
xor
es
pop
sbb
push
and
push
cmpsb
inc
and
dec
pushf
fs
popa
xor
inc
mov
in
jg
std
nop
fs
test
xor
rorl
out
std
xor
in
movsl
cli
out
lahf
jne
pop
test
into
xor
rolb
cs
sbbb
negb
roll
rcl
push
loopne
mov
les
push
xchg
push
or
mov
mov
cli
je
mov
xor
sbb
xor
mov
shrb
sahf
insl
mov
cmpsb
in
mov
popf
mov
aad
nop
push
movsb
mov
daa
rorl
pusha
jo
mov
sub
fisubs
fists
xchg
scas
and
xchg
outsl
sbb
repnz
outsb
mov
popf
inc
sub
push
xchg
jo
jno
xchg
fldenv
cmpsb
shrb
into
in
and
mov
adc
or
xchg
jp
dec
adc
movsb
in
jge
adc
dec
jae
mov
fdivl
cld
outsl
movsb
cwtl
pop
pop
in
mov
and
loop
aam
mov
js
or
test
loop
dec
shufps
jo
jp
mov
xchg
pop
xor
sbb
imul
dec
dec
mov
sub
cltd
stc
ljmp
push
dec
idivl
mov
clc
outsb
jecxz
mov
and
xor
fdivl
aaa
lret
imul
cmp
push
sub
mov
jmp
rcll
ss
inc
mov
sub
addr16
jae
sti
or
push
test
movsl
pop
jo
xchg
sub
jae
xchg
push
fmuls
and
in
and
add
xlat
or
or
scas
ljmp
adc
popf
sbb
jns
or
jle
out
lcall
je
loopne
stos
sub
jecxz
sti
add
mov
fiaddl
rol
cmp
std
pushl
xor
xchg
xor
cmp
mov
and
gs
das
push
lret
and
pop
cmp
sub
inc
addr16
xchg
aad
xchg
adc
add
pop
icebp
cmp
in
aam
dec
mov
or
sub
fadds
jne
and
xor
cmc
push
mov
xchg
adc
data16
mov
cmp
mov
mov
jnp
mov
mov
push
pop
xchg
and
int
lea
roll
cmp
or
je
pop
push
stos
gs
cmp
mov
ljmp
mov
aad
shr
or
or
sbb
sbbb
insb
das
mov
sqrtps
mov
jne
sbb
pop
adc
sub
pop
cmp
in
sbb
xor
stc
jmp
xchg
sub
pop
sub
std
out
repnz
test
roll
sub
scas
out
pop
mov
addr16
pop
test
rcll
loop
push
loop
fbstp
dec
dec
out
cli
das
xchg
das
lods
arpl
repz
out
pop
loope
movsb
loop
mov
test
hlt
out
push
push
pop
push
test
lret
mov
dec
jb
adc
xchg
adc
dec
and
test
pop
xor
lret
xor
or
inc
mov
and
andb
xchg
mov
jp
dec
cmp
pop
sbb
jecxz
in
xor
rorb
mov
pop
and
in
fldenv
mov
sub
add
rolb
lcall
dec
inc
aad
add
mov
lahf
add
test
outsb
repz
pop
leave
aam
sub
repz
sarb
es
jl
scas
dec
add
mov
mov
lds
jae
push
dec
jns
cmpsw
and
mov
lds
xchg
lahf
mov
inc
xchg
aaa
and
rol
sahf
rcr
add
ret
mov
cmp
push
rcrl
cmp
aad
pushf
rcrb
mov
jae
and
inc
push
sub
push
xor
push
dec
adc
inc
aam
push
mov
jbe
loope
mov
xchg
push
movsb
adc
xchg
jp
and
lret
addr16
mov
xchg
dec
push
xor
decl
movsl
cmp
fmul
mov
adc
aaa
std
push
pop
and
je
pop
pop
mov
mov
out
xor
cli
mov
into
rep
dec
loop
and
pop
mov
xchg
rcll
out
arpl
push
mov
xchg
push
pop
pushl
xor
pop
test
inc
pushf
ss
jb
xor
push
sbb
cmp
andb
inc
ds
inc
pop
cmp
loope
dec
clc
je
jns
push
or
test
pop
js
adc
or
out
and
icebp
mov
pop
in
xor
jno
xchg
ret
dec
adc
push
jg
jecxz
push
lea
fldenv
aam
into
pusha
insb
ss
cmpsl
stc
testb
loop
add
cs
dec
inc
inc
and
jmp
outsl
add
flds
sub
push
mov
out
fsubl
lods
shll
stc
cmp
mov
popf
adc
xchg
push
loop
call
dec
aas
adc
inc
lret
ljmp
sbb
lock
inc
push
jns
stc
adc
inc
aam
pushf
sbb
movsb
pop
lea
push
nop
imulb
mov
sti
sub
mov
push
clc
scas
test
push
and
loope
cld
in
jbe
push
cwtl
imul
mov
push
nop
xchg
cmp
mov
mov
dec
pop
lods
les
fst
clc
pop
and
adc
outsb
fstl
in
dec
lock
or
das
js
mul
cld
sarl
mov
aaa
push
arpl
push
mov
or
int3
jno
in
mov
test
inc
pop
ds
scas
test
or
adc
add
pop
pop
xorps
ret
out
pop
jge
sbb
mov
jo
jno
jno
test
ja
cli
add
adc
inc
imul
lret
pop
test
xchg
sub
insl
test
jne
push
les
xchg
pop
cmp
sbb
fistl
cmp
cwtl
dec
xchg
popf
psubq
xor
lods
push
dec
data16
sub
inc
int3
sbbl
jb
mov
sbb
test
decl
lret
insb
xor
shl
pusha
andl
xor
xor
mov
loop
push
fistpll
leave
dec
lods
scas
jp
adcl
inc
dec
add
jno
mov
mov
movsb
test
jbe
push
pop
adc
push
mov
cmp
ficompl
sub
mov
es
enter
pop
imul
cmp
and
repz
mov
xchg
xlat
mov
inc
sbb
jnp
jecxz
or
pusha
out
cmp
test
js
cmp
mov
clc
pop
fs
lds
push
rorb
hlt
dec
dec
jg
mov
pop
pop
xchg
inc
dec
push
and
int
mov
or
in
fistpll
outsb
lret
inc
mov
insl
fcmovnb
into
nopl
sbb
jne
adc
test
insb
or
add
into
xchg
pop
push
cmp
icebp
and
mov
push
pop
insl
and
stos
mov
subps
pop
popa
fdivl
push
out
ja
sbb
xchg
mov
add
jmp
sbb
imul
dec
cli
jae
leave
outsb
add
lret
ljmp
xchg
pop
pop
mov
adc
mov
inc
sub
dec
cmc
lret
push
movsb
inc
rcr
stos
incb
insl
pop
xchg
arpl
enter
test
sti
push
pcmpeqd
sbb
mov
rol
data16
stos
adc
out
inc
sub
shlb
call
inc
dec
fistl
in
das
bndstx
pop
jns
mov
cmpsl
sbb
sub
pusha
inc
mov
fmull
push
add
mov
pop
test
mov
jg
mov
cmp
cld
fwait
xchg
int
mov
jo
movsl
test
inc
sbb
aad
pop
sarl
int
decl
sbb
push
imul
pop
push
lahf
jmp
or
hlt
jecxz
jns
push
sti
bound
mov
lds
aaa
test
push
inc
iret
inc
mov
inc
ret
sbb
push
sbb
test
cmpsl
orb
aad
sahf
int
fcmovb
mov
nop
popf
les
cmp
aaa
push
pop
shll
mov
jne
sbb
aaa
cli
sub
int3
or
lret
dec
lock
mov
push
mov
inc
pop
or
movsb
popa
push
dec
mov
lods
add
mov
jns
pop
mov
insl
pop
in
repz
aad
subb
or
fmul
xchg
cmp
popl
fisubrs
mov
xchg
and
je
push
call
and
push
jo
push
imul
les
jl
push
ja
xchg
cmpsl
adc
mov
pop
ja
lea
push
pop
inc
lahf
cs
lock
dec
loopne
ret
je
xorl
add
sbb
out
pop
cli
jae
into
test
add
sbb
xchg
ret
push
xor
idivl
in
hlt
hlt
and
xchg
pop
pusha
sub
das
int3
pop
push
add
or
lahf
cmc
sub
and
xchg
cmpsl
sub
and
jecxz
and
xchg
dec
rep
and
and
in
fimuls
adc
test
and
rcll
sti
jae
xor
and
push
mov
jl
shll
inc
shlb
mov
pop
jg
mov
pop
sbb
fwait
rclb
mov
rcll
adc
insl
orl
out
inc
pop
and
gs
cmpsl
mov
out
xchg
sub
push
orb
sbb
and
jecxz
mov
cltd
dec
daa
pop
hlt
dec
cmc
ss
cmp
mov
fwait
mov
scas
daa
push
or
mov
xchg
mov
or
out
mov
sbb
push
scas
xchg
cmpb
adc
push
lea
push
stos
inc
mov
fs
movsl
adc
out
push
outsb
je
fwait
pusha
cld
imul
clc
mov
testl
jne
cmp
dec
adc
xchg
fadd
fcoml
mov
mov
mov
adc
int
mov
mov
inc
sub
out
es
cltd
loopne
jno
in
push
push
stos
xor
hlt
mov
or
xchg
push
sbb
push
sti
sbb
sarb
insl
mov
pop
pop
scas
mov
cli
sbb
fs
shlb
and
jl
or
idivb
dec
lock
mov
shl
movsb
cmc
ds
shlb
incl
adc
and
iret
ds
mov
push
rorb
loopne,pn
cmp
loop
or
cli
dec
popa
inc
pushf
sarl
pop
xor
push
and
lea
push
out
mov
das
push
lret
xchg
lds
mov
fldcw
fs
dec
jno
aad
sti
xchg
je
pop
jnp
scas
scas
inc
mov
push
inc
into
insb
add
jnp
push
negb
ss
sti
mov
call
mov
sahf
mov
lds
lock
je
mov
call
scas
test
ror
cld
mov
sbb
push
jb
repz
sahf
sbb
lea
or
cltd
pusha
lods
jmp
popa
lahf
push
dec
mov
int
test
aaa
jg
add
push
inc
js
sub
jl
add
popa
test
sbb
sub
mov
xchg
ds
jae
xchg
push
cmpsb
insb
jl
add
clc
pushf
mov
mov
call
jle
push
pop
sbb
mov
cli
dec
or
rorl
outsl
xor
jae
pushf
or
adc
and
add
rcr
lods
cmp
scas
sti
test
data16
dec
xor
loopne
lods
xor
mov
mov
sbb
dec
arpl
push
cld
mov
pop
adc
adc
push
loope
push
add
movsb
mov
arpl
push
sub
ljmp
sbb
hlt
in
arpl
add
inc
fadds
scas
ret
cmp
out
mov
nop
add
inc
mov
stc
and
ja
pop
lahf
push
pop
jb
sbb
repz
mov
fcoms
mov
lret
xor
dec
popa
sbb
pop
orl
and
fwait
cmp
pop
mov
data16
jge
rorb
mov
test
xchg
ds
call
or
and
xchg
adc
js
aad
inc
out
insl
out
pop
dec
inc
mov
and
mov
out
lods
jnp
or
pop
fwait
jle
pusha
jb
ds
pop
lea
sbb
xor
jle
push
cmp
rcll
jge
dec
stos
lcall
js
dec
xor
fdivs
inc
cmp
push
jg
cltd
or
push
pop
cltd
cwtl
dec
mov
inc
out
imul
add
pop
mov
in
sbb
xor
adc
dec
sub
adc
repz
out
cwtl
aad
popf
sub
or
mov
sbb
movsl
stos
push
popf
outsl
jb
int3
sub
fimuls
fldenv
bt
xor
or
faddl
cwtl
mov
hlt
mov
dec
js
dec
mov
dec
ljmp
imul
or
xchg
pop
jg
mov
push
adc
mov
out
adc
jbe
mov
iret
xchg
pop
dec
repz
sahf
inc
in
or
andl
std
je
orl
adc
out
sbb
divps
insb
mov
xor
scas
mov
test
fs
testl
stc
inc
outsl
bnd
push
mov
stos
movb
out
inc
das
lcall
or
add
jno
repnz
add
bound
dec
sbb
add
out
push
outsb
data16
xchg
fs
or
dec
adc
inc
dec
mov
push
inc
add
lret
dec
and
fsubrp
lret
outsb
data16
dec
inc
rorl
imul
fwait
pop
rorb
out
mov
out
jae
scas
xchg
out
jecxz
jnp
push
je
jae
pop
je
push
push
movsb
sarl
cmp
mov
aam
push
and
pop
inc
fldt
jg
pop
fsub
xor
fisubs
push
fadds
or
stos
pop
mov
test
cli
imul
sub
dec
or
ljmp
into
and
xor
mov
mov
popf
fldenv
pusha
xor
inc
pop
lods
or
into
sbbb
pop
dec
mov
les
lock
icebp
mov
mov
or
push
sub
add
and
sbb
inc
pop
and
jl
stos
mov
daa
jae
xor
cmp
adc
pop
pop
stos
and
imul
stc
cmpsb
push
insl
imul
pop
fdivl
inc
shrb
pop
test
lock
adc
sub
loopne
lods
movsl
cmpsl
and
aam
pop
and
or
mov
nop
push
roll
mov
add
adc
mov
stc
lods
and
fsincos
out
dec
arpl
inc
sbb
pop
xor
push
mov
push
insb
stc
shll
je
iret
in
call
por
sahf
jnp
jp
rorl
outsl
scas
jge
dec
add
popa
or
test
and
sub
cwtl
aas
mov
mov
jbe
sbb
dec
push
inc
incl
xor
sbb
or
es
cmp
inc
or
xchg
daa
rolb
popa
fiaddl
cmp
pop
testl
xchg
mov
jae
sbb
or
int
bound
loop
sbb
jmp
cld
dec
dec
push
cwtl
add
stos
or
xchg
pop
ret
faddp
lahf
aas
test
jle
sbb
xor
fstps
test
fcomps
xlat
adc
cwtl
lods
mov
mov
mov
xchg
imul
shll
int
mov
add
mov
push
or
into
inc
int
stc
xchg
mov
lret
mov
xchg
xorl
mov
or
int3
adc
shrl
adc
pop
mov
sbbl
fbstp
aam
jmp
xor
shlb
mov
lock
push
dec
sub
int3
dec
mov
jle
xor
scas
push
adcb
popa
inc
jg
arpl
push
ret
mov
jnp
fs
insb
jg
cwtl
mov
test
in
and
pop
jae
cmp
add
and
add
pop
cmpsb
adc
xchg
mov
aas
sub
pop
add
or
dec
jne
mov
lods
xor
int3
sub
in
mov
sub
pushf
pop
sub
aad
push
jmp
jns
ja
inc
popf
dec
fidivs
push
sti
aaa
stos
bound
lods
out
jge
fimuls
push
scas
in
and
in
lret
aam
loope
imull
add
adc
les
fldcw
shll
jb
inc
adc
push
daa
push
inc
jb
sbb
xchg
jp
inc
cmpsb
cmp
out
loope
mov
call
out
xchg
dec
adc
call
shlb
movsw
sti
sub
scas
pop
ljmp
fsts
daa
lods
enter
dec
xor
lods
jmp
cld
outsl
mov
jg
dec
xor
in
fisttpll
and
fiaddl
pop
inc
xchg
test
push
xchg
xor
cmp
test
std
sbb
repz
cmp
fs
jle
hlt
xor
xor
fldt
nop
inc
test
mov
rolb
mov
test
mov
adc
adc
lea
xor
and
cltd
nop
mov
mov
ljmp
jecxz
scas
jae
mov
lea
sub
out
fisubrs
sahf
inc
push
adc
mov
or
adcl
push
cmpsl
pop
lock
cmpsb
xchg
mov
mov
aad
mov
cs
pushf
test
dec
dec
insl
cmp
mov
movsb
jge
adc
dec
adc
mov
mov
push
add
adc
fs
into
mov
cmp
stc
xchg
ljmp
xchg
cmp
inc
sub
shll
scas
aaa
lods
jb
ret
mov
jge
dec
pop
je
es
sub
mov
out
rcr
lret
das
stos
aas
cmpsl
call
pop
sub
pop
stos
sub
fst
jp
push
into
pop
inc
cmp
imul
push
pop
and
enter
repnz
es
aad
push
jle
jmpw
cmc
adc
test
add
sub
pop
in
nop
out
sbb
xor
mov
dec
fisubs
inc
rcrl
fstpl
jb
push
xor
xchg
je
ja
inc
lea
les
lret
dec
movsb
push
sbb
gs
sarb
mov
in
pop
pop
xor
add
xor
pop
jo
lds
mov
push
cmp
sbb
or
xchg
fidivrl
lea
xchg
clc
add
cmp
das
fimull
aas
stos
lods
mov
insb
sub
data16
in
lsl
out
movsb
stos
aad
inc
sub
xchg
js
sarb
or
or
cli
dec
jmp
sbb
inc
jno
dec
in
gs
jb
lahf
mov
scas
daa
mov
mov
setno
jbe
and
aas
cmpxchg
cmp
sahf
les
cmp
aaa
and
adc
std
addb
add
orb
pop
imulb
ja
pop
lea
push
or
add
push
aas
aaa
loope
adc
jecxz
in
popf
cmp
fsubrl
fnsave
loop
dec
dec
and
les
or
std
fadds
popa
das
hlt
jmp
cmp
mov
mov
test
sub
ss
movsb
roll
push
std
dec
or
push
imul
cmp
mov
xor
cmpsb
dec
jo
imul
and
xchg
nop
mov
flds
push
adc
inc
int
lcall
rcrb
pop
add
pusha
sbb
push
push
sbb
shlb
scas
and
enter
xorb
and
inc
xor
cmp
scas
push
inc
scas
sbb
insb
lret
xchg
xor
aas
xor
mov
int3
or
add
lahf
mov
dec
push
pop
and
sarb
cwtl
mov
mov
push
add
mov
lret
and
cs
pop
test
xor
cmc
push
cmp
lret
mov
test
call
test
out
dec
adc
xlat
popa
add
mov
mov
loopne
into
xlat
or
in
xchg
push
add
out
fcomps
cmp
sub
test
loope
dec
push
imull
jbe
mov
mov
cmpb
inc
xor
pop
xchg
cltd
in
test
pop
pop
mov
int3
insb
mov
nop
lcall
or
sbb
ficompl
lret
lret
sbb
mov
mov
sbb
jmp
mov
lods
xchg
inc
push
push
jne
stc
adc
inc
add
cld
insl
jecxz
xchg
inc
add
lock
push
xchg
sbb
lods
sbb
rclb
lds
xchg
push
mov
popa
cmp
test
and
mov
mov
lods
stc
adcl
pushf
dec
push
cmp
mov
insb
xor
jg
dec
xchg
xchg
out
lahf
pop
adc
loope
test
xchg
ss
leave
in
push
scas
or
mov
lahf
pop
and
andb
add
outsl
out
jp
out
jae
jmp
sub
lret
xor
sub
sahf
dec
in
call
fcoms
mov
jne
lods
cs
xchg
pop
mov
imul
das
add
pop
jecxz
lcall
xchg
sub
frstor
in
dec
into
loope
mov
dec
fisubrs
push
inc
std
das
xchg
aam
scas
in
mov
int
mov
sub
andb
push
jb
mov
adc
negb
mov
rorb
or
xchg
ljmp
je
jns
insw
popa
les
inc
repnz
mov
int3
ss
ljmp
int3
daa
xchg
stos
add
lds
jecxz
pop
stos
push
pop
push
pushf
outsb
sub
push
add
cld
outsl
xchg
xchg
sub
sbb
enter
jb
xchg
mov
stos
xchg
mov
xor
pop
mov
inc
es
jo
decl
pop
sbb
push
fs
fstl
push
inc
jmp
sbb
fdiv
aas
insl
add
xchg
movsl
sub
sub
or
int3
xchg
arpl
test
jle
cltd
adc
stos
ljmp
push
push
mov
xchg
pop
cmp
cmp
mov
adc
in
adc
je
out
lds
mov
outsl
rorb
bound
rorl
sbb
pop
mov
mov
std
lcall
mov
ja
jno
inc
inc
mov
add
shl
pop
std
neg
dec
cmp
popa
outsl
adc
idiv
jb
lcall
dec
lahf
mov
dec
scas
nop
xchg
xchg
int3
sbb
jl
sbb
mov
into
or
sub
lods
pop
int
dec
fstl
aas
sbb
lock
aaa
lds
fsubs
pop
push
jae
mov
gs
sub
inc
imul
adc
mov
adc
adc
hlt
adc
and
jmp
dec
jne
xlat
sub
stc
loope
or
or
insl
hlt
pop
jbe
test
mov
and
addr16
in
negb
shlb
loop
lret
adc
push
push
xor
inc
mov
mov
lods
pusha
sbb
hlt
add
fmulp
jle
and
push
cmpsl
cmp
scas
adc
pop
lds
lock
jl
ret
call
push
psubsw
add
pop
lahf
je
stos
clc
push
mov
jo
mov
pusha
xor
mov
dec
dec
in
sti
xchg
mov
repz
cmpb
add
sbb
xchg
lret
xchg
cli
jl
cmc
and
leave
roll
mov
and
mov
inc
ljmp
lea
repnz
mov
sub
in
imul
cs
cmpb
mov
iret
popf
pop
cld
loopne
sarb
imul
push
cmc
iret
inc
dec
cltd
sbb
sub
push
add
pop
aam
hlt
in
sub
jp
mov
adc
add
jl
xor
stos
pop
std
push
popa
add
fcmovnu
sbb
push
movb
mov
adc
movsl
rcrl
loope
xor
enter
dec
pop
pop
ret
push
stos
sbb
fcomps
pop
pop
incb
mov
dec
clc
fdivrl
imul
add
mov
add
dec
sub
add
lods
fmul
lods
mov
xor
sub
push
push
movsl
pop
adc
ret
push
sbb
mov
pop
mov
inc
cmp
pop
jl
int
movsl
das
xor
sti
fstpt
popl
data16
mov
jl
xchg
xchg
subb
xchg
adcl
mov
cmp
mov
sub
lds
int
jmp
sbb
dec
rcr
dec
aad
lahf
arpl
jo
mov
insb
stc
mov
lock
hlt
mov
sub
xchg
sub
xchg
pop
int3
stos
xchg
imul
fs
xchg
sbb
daa
scas
and
jnp
dec
sti
rcll
sbb
out
dec
add
pop
subl
inc
pop
mov
mov
imul
mov
inc
or
out
repz
inc
pop
push
loop
mov
loope
jnp
leave
negb
cmp
je
subb
loope
cld
es
mov
lret
mov
test
movb
push
in
icebp
test
and
in
mov
shr
inc
stc
add
xor
mov
sahf
ja
je
cmp
iret
xor
movsb
imul
mov
cmp
and
fdivl
dec
mov
sub
pop
ss
push
xchg
cmp
mov
pop
inc
jno
mov
mov
ds
mov
popa
pusha
ja
inc
push
jns
addr16
insb
call
mov
mov
or
mov
loope
mov
je
and
in
jbe
lods
jo
fcompl
cld
push
lock
jae
mov
lcall
js
add
les
mov
leave
add
out
insl
arpl
pushf
test
repnz
mov
xchg
sarl
push
xchg
mov
inc
insb
std
incl
inc
ds
mov
popf
xchg
outsl
jg
aam
loopne
movsb
repnz
xor
movsb
add
add
ljmp
mov
push
xor
xchg
and
test
dec
fwait
push
jnp
inc
inc
xchg
in
scas
mov
inc
repz
pop
mov
ja
mov
xchg
add
adc
mov
push
cmp
jo
out
ret
sbb
repz
or
dec
es
cmp
repnz
or
aas
jle
pop
jmp
jl
xorl
cs
jae
mov
jnp
insl
aam
xchg
rcrb
mov
scas
pop
dec
add
push
sub
lds
mov
mov
xchg
xor
add
shrl
push
rolb
xchg
push
dec
xchg
loope
cmpsl
and
aaa
int
cs
mov
frstor
push
or
pop
jle
fmul
or
sbb
shl
jle
mov
push
in
xchg
test
pop
pop
dec
fists
push
pop
xor
sub
icebp
sub
mov
fldenv
xchg
xchg
pop
xchg
and
popf
stos
out
xchg
lret
scas
cltd
add
pop
mov
add
pop
sub
pop
inc
scas
std
mov
scas
pop
push
cmp
scas
lcall
fadd
push
lods
push
test
pop
sub
daa
cwtl
sahf
jae
cmp
push
popa
mov
dec
test
daa
jge
cmp
iret
adc
mov
arpl
mov
mov
adc
fsubs
or
xchg
mov
dec
add
outsl
or
dec
in
fcoms
inc
lock
sub
imul
pushf
stos
xchg
int
bound
in
test
es
out
testl
xchg
sbb
jns
cmp
in
and
jns
addr16
add
cwtl
popl
lds
mov
mov
push
cmp
sub
pop
dec
out
mov
test
mov
push
sbb
add
pop
in
or
adc
jb
mov
out
mov
mov
mov
pop
je
jno
nop
jl
pop
scas
sti
sub
lock
pop
das
mov
ja
into
xchg
jb
sbb
ljmp
mov
sbb
js
or
xchg
mov
stos
stc
jmp
add
xor
mov
cmp
aad
mov
int
nop
ret
jg
cli
lret
jns
fwait
out
scas
and
fsts
xlat
mov
mov
sbb
push
iret
mov
stos
adc
mov
aas
mov
shll
inc
dec
xchg
jmp
push
mov
and
mov
xchg
aad
inc
jo
js
pop
add
and
jo
mov
sbb
lods
sbb
popa
jne
mov
lods
ss
push
dec
lret
in
mov
jmp
pop
insb
mov
push
scas
add
cmpsb
imul
or
push
cmp
mov
negl
bound
sti
loop,pn
or
mov
mov
fstl
pop
loop
pop
mov
pop
fwait
je
xchg
mov
lods
add
adc
jge
decl
xor
test
aaa
jecxz
lock
lds
add
dec
lds
ror
or
ja
pop
push
mov
or
xchg
repnz
cmp
cmp
iret
mov
pushl
lret
outsl
cwtl
ret
cmpsl
loopne
push
xchg
mov
inc
fsubrs
es
sbb
lahf
xor
call
daa
sbb
cmp
pop
and
adc
mov
push
jmp
xor
inc
jb
xlat
sub
sub
mov
push
insb
xchg
aam
ficoms
test
jno
mov
mov
sbb
mov
frstor
xor
mov
jnp
out
lock
push
dec
or
add
jne
inc
add
sbbl
rcll
ds
mov
sub
pop
adc
ljmp
in
mov
mov
xchg
cmp
sti
in
imul
ret
mov
popl
lods
scas
mov
lret
pop
decb
cmc
lret
xchg
and
jnp
int3
push
je
cmp
jp
cmpsb
xchg
lods
cmpsb
cmp
mov
mov
xchg
jne
or
xor
xor
xchg
jne
push
jne
inc
fs
xlat
inc
leave
jns
pop
dec
mov
mov
pop
and
push
mov
jp
and
jno
mov
pop
xchg
leave
xor
add
out
seto
sub
je
and
xchg
dec
and
jle
fstps
xchg
mov
call
sub
pusha
stc
popf
add
xchg
jge
xchg
mov
push
cmc
or
dec
into
iret
fidivrl
int3
faddl
loop
xor
addr16
mov
repz
in
mov
and
mov
cmp
sbb
sub
jo
movsb
in
cmpsb
out
into
mov
popf
push
in
subl
pop
cmp
lods
fsubs
xchg
lods
fists
mov
or
push
adc
test
int3
jae
inc
pop
sbbb
mov
xor
stos
sarb
cmp
ret
mov
mov
add
decb
jecxz
adc
fwait
test
lock
xor
mov
or
sub
cmp
mov
call
jae
adc
push
mov
out
mov
inc
and
rcl
pusha
arpl
les
push
push
repnz
xchg
sub
and
mov
pop
inc
pop
cwtl
jo
out
pop
sahf
xor
sub
jp
aas
or
repnz
test
add
dec
mov
and
jo
sub
pushf
cld
push
ret
outsl
cmpsb
sbb
mov
cmc
cltd
mov
dec
negb
fisttpll
out
sti
push
pop
mov
push
addr16
mov
outsl
aam
testl
ret
repnz
jnp
jb
mov
and
push
pushf
sub
adc
or
shlb
nop
sarl
sbbl
mov
dec
adc
fs
push
lds
out
sbb
sub
jo
pop
sbb
push
pop
xor
sarb
cmp
pop
ret
repz
scas
xchg
push
cmp
jle
loop
mov
inc
mov
ret
jns
adc
test
dec
xor
daa
mov
cmp
and
std
inc
mov
mov
loope
adc
arpl
adc
pop
adc
add
lret
test
dec
cltd
jle
dec
adc
mov
xlat
insb
pusha
insb
data16
daa
cmpsb
lds
mov
adc
cli
and
xchg
mov
std
outsl
enter
inc
mov
cmp
adc
lock
mov
enter
ret
push
jmp
mov
jae
xor
xchg
dec
push
jge
ficoms
ss
icebp
clc
sbb
dec
ret
aaa
mov
jo
mov
fwait
inc
push
cmc
and
repz
xchg
push
jecxz
fucomp
into
in
push
jbe
add
adc
leave
jo
cli
jp
push
pop
dec
mov
scas
dec
loope
rolb
or
js
incl
je
repnz
mov
or
ss
repnz
jno
jl
add
out
popf
or
inc
push
fsubrs
leave
push
stos
daa
xchg
push
mov
and
and
xchg
pop
shll
or
mov
shll
repnz
xor
xor
or
dec
add
xchg
mov
sub
push
add
scas
ja
ss
sbb
mov
out
inc
mov
insl
xchg
cmpsl
inc
out
dec
lock
add
adc
addr16
or
xchg
and
pop
sub
adc
daa
lret
mov
or
mov
mov
add
pop
fisttpl
int3
xor
lea
mov
out
sub
sbb
lret
sbb
sub
push
call
push
ljmp
or
repz
or
pop
jae
popa
sahf
mov
imul
mov
add
cli
aas
out
jge
pop
in
daa
fwait
aad
scas
push
and
jmp
pop
outsb
pop
sub
fidivrs
adcb
sbb
sub
cmp
cmpsb
loopne
fwait
aad
jecxz
add
dec
rclb
out
lods
leave
loope
pop
cld
movsl
rcll
sbb
int3
xchg
mov
push
ret
xchg
jne
cli
addb
add
sub
add
sbb
out
lcall
ficoms
jae
mov
pop
lret
mov
dec
or
dec
or
jne
stc
inc
sti
add
pusha
lock
aad
inc
loope
cmp
es
cmc
je
leave
adc
mov
mov
inc
pop
movsb
xorl
in
xchg
cmpsl
adc
push
shrl
flds
nop
mov
dec
jo
mov
in
imul
arpl
out
sub
je,pn
fwait
les
popa
ficompl
repz
mov
gs
inc
or
aas
push
call
cmpb
es
pop
xor
std
fdivrs
cs
jno
xchg
in
outsl
fnstenv
cmp
imul
out
cmp
leave
cmp
and
test
in
shlb
vmwrite
rclb
ja
lods
sti
mov
xchg
mov
jae
fstps
mov
rcrl
lods
iret
or
push
aaa
bound
ret
push
cmpsb
and
push
mov
mov
sub
shl
mov
and
mov
sbb
cwtl
fisubl
shrl
inc
push
loopne
xchg
es
lret
pop
xchg
xchg
dec
adc
or
fildll
test
cli
dec
push
movsb
std
dec
je
pop
aaa
test
stos
loop
jne
aad
xchg
push
dec
das
push
pop
insl
and
mov
xor
xchg
ss
push
dec
lods
lods
xor
mov
pop
sbb
mov
ret
xchg
mov
aas
out
jnp
sbb
addr16
div
jmp
cld
aam
fistps
mov
pusha
jp
pop
in
lret
jge
inc
pop
pusha
mov
xchg
inc
les
incl
mov
cmp
dec
popl
dec
jnp
xorl
and
setne
cmp
jno
dec
and
jg
push
cmp
xor
push
xchg
mov
cmp
stos
out
out
incl
ret
push
stos
loope
jbe,pn
or
fimuls
mov
clc
notb
mov
pop
cli
decl
push
sub
dec
xor
in
hlt
out
cmp
or
jb
clc
fdivrp
repz
mov
out
push
outsb
cmpsl
jl
inc
jae
dec
movsb
out
push
push
mov
lods
dec
xor
jns
rcr
push
pop
mov
adc
insb
scas
rol
xlat
xor
dec
pop
inc
inc
pop
ret
andb
pop
push
fcmovnu
popf
lea
and
int
xor
and
or
mov
sbb
inc
jno
test
or
inc
sbb
pop
push
xlat
scas
arpl
sbb
in
lock
xchg
sub
fimuls
mov
aaa
clc
sub
pushf
insl
push
push
in
dec
ljmp
mov
push
xlat
push
jo
inc
pop
pop
jno
rorb
enter
shlb
dec
pop
ljmp
je
push
or
es
test
mov
adc
mov
lcall
sbb
or
cmc
pop
out
hlt
hlt
ss
push
push
frstor
pop
mov
hlt
xchg
andl
repnz
mov
andl
sbb
insl
push
mov
cmp
repz
sbb
lret
insb
pusha
jle
subb
pop
push
aas
mov
clc
jp
aaa
fmul
subb
adcl
pushf
and
repnz
xor
shrb
out
jmp
cmpsb
test
imul
pop
push
sarl
jae
xor
dec
jnp
pop
fisubs
mov
cld
lea
inc
cs
insl
xchg
xchg
pop
fstps
jl
out
pusha
data16
or
mov
fstps
sbb
push
cmpb
dec
xor
xor
int
xchg
aas
and
push
mov
dec
jge
adc
mov
scas
jo
divl
mov
fs
xchg
lock
rcr
mov
mov
pop
icebp
mov
jb
mov
cmc
inc
int3
sbb
aam
push
add
in
jnp
imul
jb
jne
mov
js
pop
xchg
sub
fdivrs
push
push
ret
pop
push
inc
scas
push
gs
leave
scas
popa
xchg
lcall
inc
pushf
das
add
pop
hlt
cmp
pop
push
jbe
jle
adc
subl
mov
sub
stc
insw
push
cmpsl
and
sbb
jne
dec
cmp
inc
imul
inc
add
pop
dec
pushf
mov
push
cmp
es
inc
inc
fnstenv
mov
out
sbb
loopne
cmp
push
lock
cmpl
shl
out
dec
jmp
jecxz
mov
in
jl
out
lods
inc
pop
push
divb
ja
cmpsl
xor
lods
cld
sbb
outsl
pop
in
pop
es
and
js
mov
leave
adc
cmp
inc
or
ficompl
cli
jmp
mov
mov
mov
aad
adc
bound
ljmp
add
xor
mov
movsl
and
mov
shlb
mov
bound
push
mov
loopne
mov
cmp
sub
jo
mov
add
fwait
push
inc
pop
gs
pop
cltd
inc
dec
lahf
push
test
inc
push
jg
or
in
inc
hlt
pusha
out
mov
cld
jl
sbb
outsl
sbb
mov
movsb
push
xor
rorb
jecxz
repz
push
enter
fimull
or
inc
cli
inc
and
std
call
jge
adc
aaa
leave
pop
fadds
cmc
mov
mov
xchg
adc
sbb
scas
out
and
rclb
shlb
mov
stos
cmpsb
leave
adc
rcll
mov
outsb
xorl
repz
test
sub
mov
xchg
add
xor
mov
mov
jp
out
jne
pop
cmp
jle,pn
adc
push
jle
incb
imul
daa
push
jge
push
popf
cltd
cwtl
cld
mov
imul
xchg
mov
and
aas
enter
andl
imul
adcb
mov
xchg
push
and
popa
mov
jb
push
jno
scas
sub
cmpsl
jle
push
imul
dec
mov
xor
out
cs
fiadds
mov
andb
fldln2
popa
push
into
inc
stc
xchg
stos
inc
arpl
jbe
adc
sarl
bound
inc
lock
pushf
dec
add
cmpsb
inc
bound
sar
jnp
pusha
mov
sub
mov
pop
lods
push
fdivp
mov
xlat
cmp
test
leave
mov
pop
cmp
stos
mov
mov
into
dec
or
cli
stc
mov
repnz
cwtl
jnp
dec
aas
xchg
lret
push
jp
mov
adc
mov
jno
mov
and
ss
out
out
adc
inc
and
add
xchg
jmp
mov
bound
jge
movsb
xor
inc
push
fwait
enter
stos
sub
or
iret
pushf
mov
mov
insb
aas
dec
fstps
mov
int3
mov
mov
loop
shlb
mov
in
into
arpl
cwtl
in
loopne
or
leave
pop
aad
sub
jmp
push
sbb
leave
ja
and
cmpsb
inc
imul
insb
jb
jnp
das
mov
data16
mov
mulb
sbb
push
push
icebp
pop
mov
jmp
cli
push
daa
xlat
dec
aam
aad
jae
mov
or
mov
pop
lret
dec
int
aas
aam
mov
xor
and
ret
cmp
mov
pop
add
mov
and
popf
movsl
inc
dec
movsl
sahf
mov
aad
lret
cltd
sbb
push
cmpsl
push
insb
jo
inc
xchg
jge
movsl
sbb
mov
inc
stos
and
xchg
in
aaa
add
out
xor
divl
adc
dec
mov
sahf
dec
lret
fs
lea
pop
sti
fwait
sub
pop
and
int
loop
push
jp
es
roll
cmp
sbb
sub
jno
in
in
mov
jle,pt
fsub
jb
popa
cwtl
jae
sbb
clc
mov
push
cli
lahf
xorb
call
arpl
lock
imul
xor
adcb
lcall
inc
sub
sub
das
in
adc
xchg
pop
add
mov
stc
rol
nop
pusha
sbb
push
and
lret
sub
in
jns
pop
push
jb
pushf
into
loop
jg
shrl
ret
leave
rorb
sub
adc
cmp
jo
jmp
lods
fs
loop
inc
outsl
xchg
cltd
out
sarl
int
in
rep
bts
push
push
je
jl
rcrb
repz
push
in
ficompl
addr16
out
mov
rorl
outsb
roll
xchg
jecxz
addr16
mov
movsl
push
xchg
cs
pop
aad
dec
sub
cwtl
fnsave
lret
ljmp
out
mov
inc
hlt
out
ret
div
push
sbb
dec
adc
dec
fst
shll
cmpsb
mov
jle
pop
outsb
mov
jbe
or
in
addb
loop
into
lahf
call
shrb
mov
xchg
mov
fistps
addr16
nop
fcmovnu
rolb
test
push
lea
sub
das
dec
xor
test
lret
fildl
scas
push
mov
daa
push
dec
inc
data16
sub
xchg
dec
push
mov
pop
bound
daa
mov
adc
divl
push
test
sbb
mov
jae
lea
push
jmp
inc
je
out
jne
gs
inc
aam
xlat
jecxz
mov
mov
mov
adc
mov
jl
push
enter
push
xchg
xor
lods
fsubs
in
mov
ret
test
xchg
mov
jno
out
rcrl
jge
jne
enter
ljmp
cmp
sub
mov
shl
add
rclb
adc
repz
mov
cmp
das
cmpsl
dec
shrl
push
out
cmp
pusha
cmp
nop
cmp
or
and
adc
inc
movsl
jle
jg
cwtl
mov
adc
cmp
sbb
adc
fcomi
adc
into
js
sbb
xchg
pop
popa
dec
out
or
or
xchg
out
inc
arpl
imul
pop
inc
addr16
dec
xlat
mov
sbb
jecxz
mov
add
loop
sub
in
movsb
sti
mov
int3
add
ds
push
add
lret
mov
jne
lods
ret
iret
xor
dec
sub
mov
aad
lds
mov
sbbl
pop
mov
mov
and
sub
sbb
bnd
and
or
xchg
stc
jno
inc
sub
mov
cli
mov
xor
aam
lods
sub
popa
sar
mov
stos
dec
fadds
push
and
movsl
and
cs
dec
inc
xchg
rol
mov
ja
cmpsb
das
cmpsb
popa
ds
das
sbb
inc
stos
mov
pop
or
int
xchg
jl
inc
sahf
inc
aas
jno
dec
xlat
or
cmp
push
aam
shrb
adc
mov
adc
int
xor
leave
dec
jle
push
test
and
negl
js
or
jo
repz
xchg
cmpsb
xor
jnp
in
scas
notb
out
sbb
inc
stos
cmp
sub
cwtl
nop
mov
test
pop
lahf
cmp
lods
std
enter
inc
std
add
sahf
xchg
daa
pop
mov
mov
pop
push
outsl
inc
mov
dec
adc
popf
dec
rorl
lahf
push
jae
lret
mov
subb
push
scas
mov
push
into
cmpsl
lret
mov
cmp
xor
cli
cmp
xchg
cmp
mov
addr16
or
inc
pop
fcomi
pop
mov
dec
je
dec
rorl
and
insl
mov
out
lods
outsb
popa
int
sub
sbb
and
add
lock
jnp
xor
dec
dec
and
xchg
jle
and
mov
pop
lods
mov
jns
pop
outsb
xchg
lods
hlt
js
inc
add
cmp
les
sub
aaa
dec
jmp
mov
mov
cld
and
sbb
adc
pop
popa
cltd
sarb
insb
jg
shlb
js
shl
pusha
inc
cld
adc
mov
push
jnp
add
repnz
lret
push
rolb
mov
xchg
pop
push
int
jecxz
loopne
scas
pop
xor
push
add
and
xchg
inc
cmp
push
mov
sbb
sub
pop
push
es
mov
popa
std
mov
ds
mov
ljmp
inc
jns
adc
int3
loope
sub
test
mov
jge
movsl
push
add
push
and
les
daa
xchg
fisttpll
push
test
push
out
push
pop
adcb
and
jl
push
mov
cmc
pop
xor
jb
mov
xlat
out
aam
xchg
mov
sub
imul
lret
xchg
jg
mov
test
cmovge
push
in
out
push
lcall
mov
into
int
cltd
fcoms
or
xchg
enter
out
rorb
push
into
adc
inc
cli
push
fisubrs
les
inc
imul
dec
pop
adc
mov
loopne
sub
loopne
shrb
jb
cwtl
sbb
or
mov
jg
lock
xor
jge
jmp
lods
std
and
lret
ret
les
xchg
xorps
sub
mov
stos
lret
mov
sub
cmc
xlat
sbb
mov
xchg
stc
scas
mov
hlt
enter
jb
sbb
xor
lret
les
punpcklbw
popf
sti
xor
cmp
mov
inc
aaa
jnp
xchg
xlat
mov
mov
pop
xchg
mov
xchg
movsb
loop
mov
and
cld
imul
cwtl
adc
shl
dec
mov
pop
sahf
xorl
xchg
push
cli
pop
cmpsl
sbb
out
pop
fidivl
cmp
pop
fwait
lahf
and
cmp
dec
adc
fwait
arpl
xorb
pop
or
scas
adc
fucomp
jge
jp
dec
rcl
aam
xor
jp
xchg
mov
out
sub
insl
lock
sti
insl
sbb
jl
cmp
daa
das
popf
pushf
jbe
or
xchg
adc
push
in
arpl
add
cmp
nop
jmp
enter
popa
rorb
mov
sbb
movsl
mov
lea
xchg
movsl
dec
inc
cld
ret
test
add
adcl
arpl
sub
ljmp
hlt
cmpsb
sbb
add
mov
cltd
cwtl
stc
call
aad
aaa
xchg
xchg
inc
faddp
mull
fwait
loop
xchg
loope
lods
imull
mov
lods
cli
push
mov
lds
in
fs
out
xor
gs
push
adc
popa
in
insb
mov
sbb
call
fmul
fadds
jbe
fldcw
ret
pop
jg
cs
cld
jmp
loop
ss
inc
jp
add
out
mov
inc
bound
in
sti
out
adc
push
and
aam
ret
xchg
xchg
out
push
xchg
inc
fstps
testl
or
mov
aad
hlt
orb
sti
cwtl
jmp
sahf
dec
inc
mov
pop
and
sub
lret
push
pop
mov
xchg
xor
cmp
lods
xchg
test
aas
stos
xor
mov
mov
sti
aad
out
pop
enter
add
stos
pop
push
rep
mov
adc
aam
sbb
iret
ss
add
je
js
xor
xchg
cmp
adc
or
je
je
imul
jle
jb
adc
arpl
sub
or
rcll
addr16
enter
cmpl
stos
mov
sbb
mov
icebp
xchg
mov
ret
push
test
pop
and
inc
stos
cmp
loope
aad
mov
mov
in
push
lret
js
movsl
cwtl
jo
pop
cli
pop
orl
fs
aam
mov
adc
mov
sub
xchg
jmp
into
movsb
add
xor
rol
xlat
into
xchg
cwtl
aad
jl
arpl
mov
mov
mov
sahf
fst
push
cld
jae
and
add
dec
add
stos
adc
and
cmp
imul
pop
out
sub
add
push
push
rcrl
xchg
add
jbe
movsl
dec
out
pop
pop
jbe
imul
pop
sbb
stc
out
arpl
push
dec
pusha
inc
xchg
mov
sub
xor
xor
inc
cltd
sub
rorb
or
cmp
xchg
pop
jmp
add
shll
inc
mov
cmp
dec
mov
mov
cwtl
scas
or
int
add
mov
xor
js
das
int3
mov
insb
lods
and
addl
and
pop
sub
adc
mov
sahf
jns
mov
cwtl
loope
mov
pop
orb
pop
jbe
or
popa
insb
pushl
popf
dec
push
and
aaa
cmp
push
adc
ret
jbe
xchg
repz
jno
push
cwtl
push
shll
dec
repnz
mov
xchg
and
add
fldcw
xchg
mov
ja
popf
outsb
pop
ss
sbb
or
int
sahf
jno
push
adcl
push
adc
test
pushl
sbb
hlt
leave
iret
cltd
fimull
enter
bnd
and
inc
jae
push
xchg
rolb
xor
mov
outsl
sti
push
mov
add
iret
sbb
pop
mov
aam
addr16
frstor
inc
xor
xchg
mov
and
insl
xor
andl
daa
scas
jno
or
push
jmp
sbb
mov
and
xor
lock
cld
cltd
or
sahf
hlt
mov
bound
mov
into
xchg
dec
iret
ds
xor
mul
shrb
icebp
push
or
rcrl
out
inc
repz
xchg
cmp
test
sbb
xor
inc
add
mov
sub
or
mov
xor
ja
jb
mov
gs
lcall
ss
inc
adc
enter
pop
adc
push
mov
getsec
add
into
fistpl
sub
mov
leave
and
inc
mov
pusha
inc
or
insb
inc
fisttpl
in
fildll
cmp
test
test
sub
shlb
push
pop
mov
sbb
mov
inc
mov
pop
jl
mov
mov
fstpl
inc
mov
mov
adc
sahf
and
loopne
cmp
stos
push
inc
cwtl
cmp
mov
push
jnp
fbld
jecxz
loopne
gs
ret
add
adc
cmp
popf
xchg
in
jo
fsubl
in
ljmp
fs
in
shlb
insb
rolb
jg
fmuls
mov
je
inc
xor
jbe
fbld
loope
test
jle
not
testl
and
js
mov
jg
ret
mov
mov
and
into
arpl
mov
mov
mov
push
mov
outsb
xor
aaa
pop
popa
sbbl
ja
mov
imul
mov
mov
xor
dec
sub
xor
test
repnz
les
inc
sbb
les
xchg
gs
pop
add
push
flds
pop
push
pop
mov
outsl
inc
and
daa
ss
jecxz
cmp
mov
push
add
lds
test
sahf
lea
je
fsubs
cmp
movsb
mov
stos
push
in
addr16
cs
fstpt
pop
gs
mov
xor
std
test
dec
shrl
idivl
dec
decb
mov
cmp
rcll
hlt
pop
cli
or
test
cmp
insl
jecxz
mov
pushf
xor
sub
xor
xchg
push
cmpsb
mov
or
dec
rcr
jle
dec
lods
push
sub
mov
or
inc
sarl
cld
aas
xor
lret
push
mov
aam
xchg
inc
mov
dec
lcall
lcall
int3
ja
aaa
pop
or
xor
lcall
dec
sbb
mov
xchg
mov
push
stos
mov
sub
mov
xor
add
sbb
sbb
xchg
insb
or
jno
stc
fwait
xchg
test
in
mov
push
stc
shr
xchg
scas
push
in
jne
jns
adc
sub
es
xor
and
rclb
push
dec
ja
sbb
inc
popf
mov
jle
ss
les
and
inc
loope
lahf
jp
dec
mov
dec
jmp
insl
cmp
mov
iret
pop
mov
and
cmp
test
test
pop
inc
incb
imul
je
lods
mov
lea
scas
lea
shrl
decl
add
mov
out
sub
mov
cmp
add
inc
adc
jnp
push
lret
xor
fdivr
push
jl
nop
sbb
std
repz
cwtl
lods
aas
sub
dec
add
mov
pop
lret
movsl
roll
movl
es
es
jle
adc
sub
test
mov
mov
push
repz
inc
pusha
imul
add
rcrl
mov
outsl
cmp
push
cmp
lds
mov
aad
decb
sbb
gs
jg
leave
xor
test
out
sar
cld
ds
and
test
stos
xor
push
jmp
shl
xchg
daa
movsl
andl
adc
adcb
cwtl
shrl
jmp
cmp
out
sbb
mov
add
dec
cmc
scas
inc
push
jg
movsb
lods
adc
shlb
add
movsl
dec
sbb
or
das
jp
into
cmp
lret
icebp
xchg
xor
inc
cmp
decl
lods
dec
mov
xchg
movsb
xchg
subl
imul
dec
loope
ficoms
mov
testl
cmp
lahf
pop
inc
push
dec
push
xor
ja
aam
sbb
adc
ja
test
add
aas
je
xchg
jae
cwtl
sub
pop
inc
adc
xchg
loope
sub
dec
sub
fsts
adc
adc
fs
testb
mov
sbb
icebp
pop
sbb
stos
push
in
cmp
mov
inc
imul
cmp
imul
cmp
imul
adc
or
insb
lods
and
lret
xlat
call
cmp
push
rcl
lods
lds
repnz
pop
inc
add
dec
push
lahf
mov
sbb
ljmp
jo
add
inc
mov
shr
in
mov
sub
ret
insb
rcr
iret
enter
dec
jl
mov
sti
mov
jl
adc
inc
sbb
cmp
es
cs
cmpsb
rolb
sahf
pop
lea
loopne
push
loop
add
test
adc
and
sti
xor
je
jecxz
dec
xchg
ja
popf
ss
push
ret
stos
push
lahf
rcrb
movsb
lret
stos
pushf
xchg
cmp
cli
addb
cmp
sub
fwait
cmp
cmpsb
lret
movsl
and
popf
adc
inc
lods
cmp
fs
dec
movl
cmpl
fistps
popa
or
add
ret
out
pop
addb
adcb
inc
or
call
mov
and
ret
jae
ljmp
mov
cmp
mov
mov
out
mov
scas
mov
call
and
fidivs
mulb
int3
ljmp
adc
fs
xor
inc
loopne
ss
js
mov
cmp
dec
loope
shr
sub
jb
incl
fwait
mov
mov
push
lea
fs
fs
popa
pop
jmp
mov
rorl
add
xor
add
adc
pop
xchg
fimull
testl
mov
adc
jle
dec
je
ds
sub
jl
sub
pop
int
sbb
push
nop
jp
out
loopne
bound
testl
andl
and
xlat
xchg
and
rorb
and
mov
pop
cmpsl
sbb
fistpl
or
fwait
dec
cwtl
shrb
fldl
pop
lods
cmp
cmpsl
sub
mov
hlt
enter
lret
push
call
outsl
fsubrl
addr16
lods
sub
and
push
dec
enter
int3
jno
inc
sbb
xchg
mov
out
sarl
mov
jnp
les
dec
jg
sub
add
mov
mov
ret
add
fsub
aaa
or
out
leave
test
dec
or
mov
daa
cmc
jb
icebp
sub
clc
jae
in
mov
sub
add
mov
aas
jle
sbb
dec
js
mov
xchg
push
ds
xchg
sub
mov
and
push
popa
out
imul
xchg
je
insl
sub
mov
lds
pusha
popa
jb
xchg
loope
lods
cmp
mov
insb
jno
cmp
adc
test
lock
add
test
jnp
movsl
outsb
mov
pushf
lds
shl
sbb
sti
xchg
fisttpll
xor
das
aad
outsb
fmuls
jae
data16
add
hlt
mov
push
lret
inc
mov
mov
and
sahf
cmp
es
dec
clc
cmp
cli
lock
in
ds
and
xor
or
push
dec
xchg
sub
pop
cmp
push
repz
lahf
js
out
test
ss
xchg
mov
fmul
mov
adc
vpsubusb
jbe
popa
cmp
xor
ret
cmp
mov
das
xchg
jle
cs
and
ficoml
jns
leave
dec
pop
lods
and
dec
iret
xor
orl
push
loop
push
shlb
mov
sbb
push
shl
sbb
pop
dec
sub
mov
xchg
fcmovnbe
lcall
mov
pop
xchg
xor
add
out
cmp
pop
ja
sbb
pop
test
and
jle
sbb
and
int
inc
jb
sbb
mov
int
xchg
add
pop
dec
jno
xor
repnz
jg
inc
hlt
insl
stos
pop
dec
pop
cmp
outsl
fwait
add
movsb
rorb
and
imul
movsb
mov
inc
addr16
fldt
or
jl
push
pop
leave
pop
inc
je
lea
stos
loop
lcall
shll
data16
xor
and
mov
add
pop
sahf
cs
adc
push
dec
or
adc
adc
insb
pop
arpl
mov
jnp
cmp
mov
and
jbe
dec
sahf
adc
divb
mov
aad
iret
nop
mov
jecxz
sub
and
rcl
or
imull
inc
fcmovnbe
sti
cmc
jge
popf
pushf
mov
ficompl
xor
add
and
popf
jns
cmc
scas
imulb
push
mov
push
sub
push
and
lret
or
mov
mov
add
out
inc
mov
scas
addr16
out
xchg
pop
mov
cmp
adc
xor
mov
lods
data16
pop
mov
insl
fxch
loop
sti
into
rcrl
mov
mov
lds
jne
in
push
imul
and
add
scas
aaa
in
sub
arpl
dec
or
scas
test
jp
bound
mov
adc
or
cmp
ficompl
jb
sbb
xchg
nop
movsb
scas
xchg
rcr
stos
in
xor
das
cmpsb
and
fcomip
ret
pop
testb
push
idivl
add
push
movsl
ljmp
jge
rcrb
aad
cmc
inc
je
into
nop
cmpsb
inc
jl
push
push
fwait
and
push
lds
mov
pop
push
add
clc
nop
mov
out
push
jo
insl
popa
cmc
ret
mov
dec
inc
clc
imulb
repnz
push
xchg
jo
or
cbtw
mov
mov
into
aas
in
daa
out
daa
scas
push
das
scas
sbb
addr16
sub
int
adc
push
push
subb
mov
bound
dec
xor
das
cmpsl
je
pop
xchg
adc
cmpsb
rcrb
andb
dec
and
je
mov
in
pop
imul
push
data16
mov
movsb
jne
es
inc
cltd
fstl
pop
xor
mov
mov
aad
xor
sub
lea
mov
fldt
cmp
dec
add
xor
scas
jo
mov
imul
jp
add
rclb
je
lods
xor
sub
aad
pop
xchg
popf
mov
adc
inc
inc
push
cltd
fnstcw
xchg
push
mov
test
fs
cmp
jecxz
jmp
add
aas
dec
mov
test
les
leave
xlat
xchg
gs
outsl
sti
or
or
or
xchg
jb
popa
enter
xchg
and
andl
xor
outsb
dec
int
mov
adc
push
fsubs
add
or
jne
push
clc
add
insl
or
push
push
dec
sub
xchg
pop
jb
sbb
inc
cmpl
jmp
fdivr
dec
addl
add
mul
dec
imull
add
dec
inc
mov
dec
inc
or
push
pop
adc
push
dec
stc
out
rolb
xor
hlt
xchg
stos
xchg
mov
add
sti
pop
stos
add
cmpsl
jo
jns
lds
les
mov
push
mov
xchg
in
out
stc
loopne
and
popl
pop
sbb
jnp
adc
arpl
xchg
lock
xlat
outsb
movq
icebp
push
mov
outsl
and
sbb
pop
add
and
jge
inc
jge
outsb
std
sub
or
xchg
jg
add
inc
rol
mov
dec
mov
sbb
bound
dec
ja
pop
mov
or
mov
leave
hlt
dec
out
mov
dec
outsb
cmpsl
ds
bound
std
ret
or
jbe
sub
in
sbb
xchg
pop
outsb
js
push
inc
insb
mov
lds
sub
dec
lahf
mov
push
fstpl
insb
nop
insl
xchg
lods
mov
out
fcmovnbe
mov
and
loope
lcall
data16
and
mov
and
in
loop
cltd
and
adc
rcrb
xor
aam
add
xchg
je
pop
mov
repnz
fcmove
mov
out
inc
hlt
mov
cli
sbb
in
add
loope
popf
inc
mov
ret
lea
mov
or
mov
sbb
dec
sbb
xlat
test
push
cmp
xor
fsubr
push
sbb
repnz
repnz
xor
mov
pop
std
popa
clc
movsl
outsb
in
clc
lcall
mov
repnz
mov
les
pop
pop
push
lret
jb
mov
cs
inc
push
lret
inc
imul
lods
imul
ret
rorl
pop
mov
movsb
mov
in
jmp
cmpsb
mov
in
test
inc
jl
pop
ss
push
ret
ficoml
cmp
iret
pop
xchg
add
xchg
jg
dec
sbb
gs
pop
pop
ljmp
call
xchg
jle,pn
add
jmp
xlat
sbb
mov
fisubs
imull
ss
fdivr
rcr
and
sahf
sbb
ss
rcrb
xlat
lahf
scas
movsb
xor
aad
jge
sarb
inc
xchg
or
icebp
aam
fstl
mov
mov
or
mov
xchg
rcrl
jge
fdivrs
inc
and
fsubp
and
outsb
add
inc
andb
out
sbb
adc
out
and
jl
mov
out
mov
sub
aad
jbe
out
xorb
jge
adc
iret
ja
imul
and
push
rol
pop
add
lahf
pop
test
xchg
push
xchg
pop
mov
add
int
lret
fwait
cld
pop
xchg
push
into
insl
mov
idivb
jmp
stos
testb
out
fs
hlt
inc
fnstenv
jo
cmp
test
daa
mov
and
add
cmp
xorl
cmpsl
mov
xchg
fdivp
sbb
lret
xchg
loop
mov
subb
cwtl
pop
cld
dec
aam
dec
mov
sub
stc
jno
pop
lock
jne
or
xchg
inc
mov
loop
xorl
lods
and
insl
adc
mov
push
adc
add
stos
xor
testb
lds
add
mov
cwtl
sahf
test
mov
rcl
and
test
jecxz
in
je
addb
mov
iret
lods
or
mov
cmpl
shlb
add
aaa
aas
sub
mov
mov
lahf
push
push
std
pop
or
in
xchg
jmp
sub
jmp
mov
push
jmp
push
shr
lret
movsl
jl
aaa
testl
idivl
add
xor
mov
add
add
jnp
cmp
shlb
orb
in
jo
inc
cmp
mov
pushf
dec
lea
mul
mov
stos
leave
scas
cmc
sbb
test
das
cmp
mov
fsubl
jbe
sbbl
gs
call
xchg
fnstenv
lcall
sbb
gs
sbb
push
add
aam
push
outsl
ret
pop
sbb
xchg
mov
lahf
dec
mov
cltd
dec
arpl
adc
pop
xchg
xor
mov
sbb
fcomps
scas
cmp
xlat
and
mov
push
xchg
mov
dec
dec
fnstenv
test
jo
aaa
inc
xor
and
xor
push
mov
sub
adc
inc
stos
fucomi
jnp
sub
mov
or
fmulp
or
jecxz
pop
adc
dec
iret
xor
stc
sub
aaa
cmpl
scas
lea
jge
or
dec
data16
inc
jl
inc
addr16
call
neg
movsb
fisubrs
add
mov
xor
dec
add
or
daa
or
sub
repz
cmp
or
cli
arpl
mov
xchg
push
adc
dec
inc
xchg
lds
xchg
xor
je
cmp
dec
xor
popa
mov
mov
jge
test
or
gs
fists
mov
out
or
jno
xchg
cpuid
aaa
and
pushf
insl
adc
add
pop
sbb
adc
cmp
scas
xchg
jo
sbb
and
cli
ss
mov
jbe
dec
fisttpl
mov
cld
sbb
cmp
arpl
xor
sarl
stc
xor
mov
jne
adc
xor
and
mov
dec
je
push
xchg
inc
xor
mov
test
mov
aam
outsl
aas
jge
mov
mov
pop
push
icebp
mov
in
push
aam
daa
sub
cli
pop
jl
sbbb
lea
in
cmp
scas
inc
and
es
incl
insl
mov
sub
fsubrl
in
push
in
sub
xor
pop
sub
mov
fcoml
jg
inc
dec
sbb
sahf
fldcw
repz
sbb
lock
les
fwait
xor
xlat
pop
cmpsl
lods
inc
shll
rcll
sub
cmpsb
repnz
sub
jmp
add
push
xchg
push
in
or
jno
out
arpl
dec
jo
adc
fsts
das
ljmp
cmpl
pushf
push
outsb
aaa
adc
inc
add
inc
pop
cmpsb
or
mov
lea
addr16
jle
out
mov
scas
xorb
loop
adc
gs
xor
push
dec
and
xor
jmp
and
rclb
sbb
adc
inc
bound
ja
data16
jo
sahf
jae
adc
pop
xor
dec
add
jo
and
mov
pop
fwait
jle
jp
pop
sti
arpl
lcall
xor
insb
xor
xor
test
lcall
sub
jno
cs
push
xchg
dec
into
pop
cld
xchg
jns
dec
out
insl
aam
push
jecxz
mov
fwait
mov
outsb
testb
or
mov
or
pop
lods
lahf
hlt
imul
dec
ss
cwtl
fwait
test
dec
addr16
shrb
jo
imul
lock
mov
adcl
out
jne
into
jns
aad
adc
stos
js
pop
push
stos
mov
push
mov
dec
and
sbbb
lret
mov
pop
cmp
paddb
push
mov
lret
stc
ficomps
shl
in
jmp
insb
movsl
cmp
sub
ss
mov
clc
fstl
dec
daa
mov
cmpsb
cmc
test
icebp
fadds
sub
mov
dec
cmp
xchg
ret
lcall
add
into
mov
adc
dec
sbb
xchg
pop
sub
inc
rolb
mov
mov
test
mov
cmp
daa
dec
xchg
pop
lret
aas
int3
cmp
pop
pop
enter
mov
in
xchg
imul
mov
inc
cmp
and
mov
inc
cmp
mov
jmp
cmp
xor
pop
adcl
sbb
dec
push
or
mov
fnsave
inc
jo
mov
push
jecxz
popa
test
and
dec
add
or
dec
test
imul
into
clc
sbb
sbb
mov
mov
mov
mov
lds
pop
lret
pushf
insb
mov
dec
mov
loopne
mov
cmp
inc
ret
aam
or
push
dec
je
lods
lock
dec
inc
fisttpll
cli
push
lret
sbb
cmc
mov
dec
dec
cs
es
std
loope
push
mov
pop
sub
pushf
sbb
filds
stos
loopne
setge
xchg
mov
mulb
add
xor
loopne
mov
pop
xchg
dec
int3
icebp
xchg
jmp
jp
in
mov
or
ret
movsb
mov
cltd
loopne
int
cli
push
mov
leave
setne
pusha
addl
je
pushf
test
mov
dec
cwtl
jno
gs
out
push
xor
add
push
xlat
iret
scas
push
fcomps
sub
jb
cmp
xchg
mov
cltd
lea
lods
adc
sbb
inc
jmp
mov
movsb
pop
pushf
mov
gs
in
cltd
fidivs
loopne
push
xlat
lds
mov
pop
scas
xchg
call
sbb
out
jae
push
inc
xlat
stc
or
sbb
repnz
imul
push
jge
mov
jnp
xor
insb
loope
pop
push
xchg
aas
mov
sbb
sbb
cli
cwtl
lret
or
xchg
fs
or
insb
or
sub
jns
loop
and
mov
aad
aaa
faddp
xor
xchg
mov
pusha
jp
data16
mov
cmp
dec
stos
gs
test
daa
inc
push
pop
and
and
and
shlb
lahf
int
inc
lcall
pop
jns
repnz
outsl
js
add
cmp
inc
aaa
outsb
js
adc
sub
fs
shll
mov
lea
adc
mov
hlt
in
xor
or
sbb
and
mov
inc
pop
mov
jmp
ss
mov
mov
or
popa
aas
sbb
out
test
cmp
mov
test
pushf
dec
je
cmpsl
repnz
pop
orl
dec
add
dec
hlt
push
xchg
jnp
sahf
sbb
mov
push
gs
dec
pop
fadds
inc
jp
fidivs
ret
jo
idivb
dec
xchg
ja
and
dec
ja
cmp
push
cmp
xchg
out
jb
push
or
cmp
loope
mov
fs
cmp
jb
xchg
sbb
lock
sbb
xchg
loopne
aaa
mov
popf
xor
fdiv
outsl
xchg
sbb
push
icebp
jmp
xlat
cmp
insl
lret
iret
mov
mov
push
add
xor
mov
adc
xor
addb
pusha
aaa
xorl
sbb
pop
mov
mov
or
fsts
xor
mov
xchg
mov
inc
inc
adc
stc
in
cmpsb
xchg
mov
addb
mov
int3
sbb
sub
cmova
or
pop
jmp
enter
xlat
test
push
jg
xchg
mov
ja
push
pop
and
popf
fsubrp
je
adcb
je
pop
add
jno
mov
rclb
fwait
daa
jbe
or
push
popa
pop
call
js
ja
pop
pop
mov
push
adc
mov
cltd
dec
test
pop
pushf
xlat
adc
xchg
jb
popf
adc
add
pop
fstl
lcall
mov
jmp
and
movsl
out
xor
nop
xchg
hlt
repnz
daa
sbb
mov
mov
out
lcall
dec
add
mov
mov
sti
loopne
loopne
xor
in
pop
daa
jle
shrb
and
mov
pop
rclb
gs
push
mov
cmpsl
movl
imul
push
and
mov
das
mov
xor
or
xor
iret
xlat
sbb
das
dec
add
cmp
out
and
inc
jge
or
stos
mov
pop
fwait
lods
mov
or
adc
lock
addl
cltd
cmpsb
bnd
fcoms
mov
sbb
jge
mov
and
jnp
out
dec
in
xor
cltd
call
xor
sahf
mov
jnp
add
in
out
out
neg
push
mov
pop
out
pop
sbb
lea
fmuls
mov
fld
mov
jae
cmp
ret
aad
les
in
jp
adc
xor
xchg
test
cmp
jno
test
add
and
mov
loop
add
xor
cs
ret
mov
xchg
xchg
test
repz
inc
adc
iret
mov
ror
inc
rcrb
call
sub
sbb
adcb
sbb
fwait
outsl
pop
xchg
push
pusha
mov
inc
jl
je
repnz
out
subb
push
data16
mov
jle
xchg
mov
mov
adc
test
outsl
jns
aas
aas
in
aaa
jge
adc
dec
fldcw
jmp
ds
xor
dec
cmp
ret
int3
or
test
jmp
jnp
mov
mov
jge
pop
std
aas
fisubrl
inc
mov
std
andl
inc
sub
fsubrs
pop
bound
cmpsl
cmp
cmp
xchg
divl
clc
mov
pop
mov
mov
bound
pusha
mov
jb
jmp
mov
test
test
add
pop
pop
sbb
hlt
pop
mov
and
pop
xor
push
mov
add
mov
repnz
fildl
pop
mov
fists
mov
sub
xchg
cmpsl
popa
lcall
int
sbb
push
pop
and
shlb
xchg
push
ret
fs
push
sub
mov
jg
cld
ss
fadds
sahf
fistpl
sub
fwait
scas
loop
jle
iret
fs
repz
fists
inc
mov
jmp
sub
or
push
pushf
xchg
mov
imul
add
repnz
push
out
mov
mov
sbb
pop
cmp
xor
jle
dec
inc
cmp
call
test
xchg
sbb
dec
xchg
mov
ret
or
mov
xor
adcb
cmp
mov
lock
inc
test
add
mov
bound
aas
cmc
jo
cmp
mov
mov
movsl
pop
push
push
call
mov
sub
in
dec
cltd
enter
into
ljmp
mov
mov
das
orl
mov
mov
idivl
or
xchg
adc
je
mov
sahf
or
imul
push
and
popf
mov
scas
ja
lods
adc
insb
mov
mov
fadds
loope
jo
push
mov
testl
inc
rclb
and
cmp
mov
insb
mov
pop
fldcw
jo
fscale
outsl
aam
push
pop
testl
rolb
mov
cs
add
cli
shlb
mov
sar
outsl
and
loop
jb
in
dec
test
sbb
mov
test
and
loope
mov
push
push
pop
and
jns
test
push
sbb
scas
pushf
jo
int
add
testb
jae
jb
jge
jp
decl
test
dec
or
or
pushl
movsl
dec
stc
add
pop
add
aaa
inc
rcr
scas
push
nop
testl
push
aaa
cmpsl
in
das
data16
mov
mov
aas
push
sbb
mov
shll
stos
add
pop
mov
idiv
imul
sub
rolb
insl
das
aad
xor
mov
or
inc
movb
aaa
mov
inc
stos
mov
lds
nop
les
sub
push
dec
ret
loop
mov
mov
scas
stc
adc
mov
jge
pop
cltd
sbb
push
dec
insb
fsts
mov
je
push
insl
mov
xchg
mov
mov
cmp
mov
xor
les
cmp
mov
fldenv
in
adc
push
icebp
lods
cs
imul
stc
mov
rcl
stos
mov
and
jns
lret
dec
dec
in
into
mov
pop
imul
adc
cmp
loopne
and
xchg
sub
cmp
fmul
jg
loopne
lret
jae
cmp
jl
xorl
xchg
inc
sbb
jg
mov
jmp
add
addb
jnp
or
loop
push
mov
andb
gs
lock
cmp
stos
xor
push
fwait
xor
add
fistps
sub
nop
add
or
cmc
cmp
data16
into
push
xor
pop
scas
int3
jnp
out
aaa
jp
dec
cmp
outsl
popf
mov
call
js
xchg
stc
aas
pop
scas
lods
adc
pushf
add
and
loopne
mov
mov
outsl
jp
dec
ja
fldenv
sub
cmc
js
test
ret
mov
imul
ljmp
add
sbb
nop
test
jmp
xor
inc
ss
xor
xchg
sub
sarb
push
push
sbb
cmp
pop
xchg
mov
enter
les
xor
faddl
push
ljmp
rcll
inc
cld
sub
xchg
or
adc
or
dec
xor
orl
sub
xchg
js
js
jge
jbe
movsb
movsl
mov
add
mov
adc
pop
clc
cmp
cmpsb
shll
lock
ret
lock
sbb
jg
test
sti
jb
fwait
xchg
fs
scas
cmp
fldenv
jno
jbe
inc
pop
repnz
sbb
outsb
cmp
xchg
popf
scas
sbb
sbb
dec
mov
fmuls
sbb
lea
aaa
ljmp
aam
and
shl
sbb
push
xchg
loop
dec
sub
mov
adc
rolb
mov
xlat
out
adc
cmpsb
stos
ret
mov
leave
stos
js
and
jge
imul
pop
dec
adc
lods
lret
jmp
clc
daa
adc
adc
pop
fiadds
and
cmp
or
into
add
or
jbe
lock
movsl
inc
cmc
sarb
push
sub
pop
mov
jns
scas
movsl
fdivs
jae
inc
in
mov
mov
cmpsl
imulb
cmp
dec
dec
ss
into
and
mov
call
arpl
loop
or
dec
sub
dec
and
mov
push
jne
mov
frstor
xor
add
xchg
xor
xor
push
jl
xchg
aam
roll
xchg
or
sbb
push
aam
pop
ss
jne
adc
js,pn
cmp
scas
or
sbb
cmp
mov
xor
ljmp
mov
mov
add
adc
dec
or
mov
gs
dec
mov
enter
sbb
jns
jns
mov
xchg
shlb
pop
push
add
testl
clc
in
sarb
mov
jle
sti
add
ja
add
sub
cmpsb
inc
pusha
stos
cmpsb
addl
mov
mov
xor
cmp
int
jae
mov
adc
adc
mov
pop
mov
scas
test
int
xor
push
aam
fwait
mov
clts
mov
cmp
sti
out
push
das
mov
sub
out
lret
negb
adc
and
scas
jbe
gs
cltd
jge
lods
add
xlat
data16
pop
xor
mov
rcll
cwtl
les
mov
rcrl
add
or
arpl
add
es
fimull
sbb
xor
xor
push
mov
dec
push
dec
add
pop
sbb
dec
add
test
adc
pop
cmp
lods
xlat
cld
xor
shl
mov
in
or
add
adc
jle
js
push
mov
mov
cmpsl
rcrl
push
lret
dec
mov
inc
mov
gs
jg
mov
test
xor
addr16
leave
add
xchg
lods
jbe
add
jne
fadds
mov
call
ja
xor
mov
jmp
or
add
mov
pop
mov
or
sbb
mov
movzwl
adc
popa
aad
cmc
mov
aaa
ds
mov
dec
adc
push
sbb
jmp
ss
jnp
lcall
es
rcrb
cmp
test
mov
dec
xor
punpckhdq
outsb
lret
or
add
fisubrl
jge
add
push
aam
add
jo
pop
jo
xchg
push
ja
insb
out
sbbl
sub
cmpsb
xor
jecxz
lea
stc
lea
shl
pop
pop
aas
add
test
subb
mov
or
and
add
enter
push
mov
fninit
cmpsb
mov
dec
adc
jns
xchg
or
pop
jns
clc
pop
jns
xchg
into
das
jno
mov
or
xlat
pop
push
mov
movsb
out
insb
pop
xor
test
sbb
and
insl
cmp
std
pop
jl
xor
and
mov
sbb
gs
xor
mov
cmp
mov
aad
idiv
mov
and
leave
nop
xchg
mov
lret
rorb
and
out
hlt
push
cs
cmp
lret
jne
lea
and
and
cmpsl
fbstp
and
xchg
insl
or
cmp
sub
fnstenv
sbb
scas
adc
insb
push
mov
inc
jnp
fucomi
xchg
sbb
sbb
cmpsl
dec
pop
test
fcoml
jecxz
cmp
add
jbe
scas
mov
sarl
rorl
lahf
test
fcmovb
jbe
fwait
sbb
pop
es
jmp
pop
lret
adc
mov
out
jecxz
pop
aad
stos
jg
push
push
dec
mov
xchg
rcrb
call
push
stos
imul
fwait
sti
pop
adc
fmull
cmp
pop
leave
je
adc
out
idivl
sub
xchg
test
adc
icebp
pusha
into
sub
adc
push
and
fbld
pop
mov
fwait
cmp
mov
int3
mov
aas
jae
jno
imul
ss
ror
add
xor
leave
fs
push
inc
dec
clc
jbe
cmp
stc
mov
pop
xor
push
int
sbb
shlb
lock
enter
sbbl
dec
dec
test
mov
push
shlb
movsl
es
sbb
cmp
pop
inc
aad
sbbl
insl
jl
pop
and
push
jno
out
inc
sub
out
push
js
and
vpsubsw
adc
mov
loope
or
pushf
jmp
popf
lret
mov
dec
jne
add
cmp
cmp
inc
rolb
andb
ljmp
leave
stos
add
outsb
xor
lret
or
jmp
or
pop
popf
fiadds
outsb
lock
jmp
shlb
push
cmc
sub
xchg
call
arpl
aas
inc
add
not
cmp
sub
ja
jp
cwtl
idivl
jns
bound
aam
pop
hlt
xor
lock
inc
aam
int
sti
jne
mov
or
jge
insl
adc
inc
loopne
jb
fadds
insb
into
out
test
loop
idivl
std
adc
in
sub
cmpsl
push
imul
orb
push
lds
js
cmc
mov
outsb
mov
rcll
lcall
sub
mov
sub
cmp
arpl
ja
ret
add
mov
mov
cmp
loopne
fiadds
xchg
fisttps
fisubl
pop
lock
lea
data16
call
enter
repz
inc
aaa
fildll
dec
lahf
lcall
and
push
cmc
js
inc
inc
cli
jb
mov
lret
xchg
loope
jae
pop
add
mov
jne
sbb
jno
cmp
mov
cs
xor
jp
or
add
mov
mov
mov
test
xorl
jae
es
and
push
roll
sahf
sarl
mov
xor
xchg
or
sbb
mov
addl
inc
pop
mov
scas
in
jl
sbb
aaa
data16
leave
lock
pop
mov
add
cli
dec
adc
loop
mov
aam
loop
mov
or
lret
shl
les
adc
pop
ficoml
xchg
jmp
sbb
daa
loope
jl
popa
jmp
xor
dec
xchg
leave
sub
mov
loopne
lods
push
test
sbb
sub
sti
xor
insb
xor
cld
or
mov
xor
loop
pop
adc
xchg
fcmovb
outsb
fsubrl
andb
clc
inc
popf
outsl
ljmp
xor
adc
sbb
aas
orl
push
cmpsl
xchg
jge
outsb
dec
adc
pop
leave
mov
inc
mov
pop
loop
cmp
stos
push
xor
push
or
pop
mov
cmp
mul
stc
sbb
mov
or
loopne
push
mov
sub
xchg
aaa
aam
movsl
inc
cltd
fbld
int
dec
mov
mov
dec
iret
leave
and
xchg
test
pop
sbb
pop
push
and
imul
lods
inc
jb
mov
sub
and
fmuls
fwait
sbb
add
mov
xor
dec
jns
sub
pop
push
jo
add
mov
in
or
inc
pop
in
mov
jl
das
lea
pop
pop
scas
shll
mov
sarl
sub
mov
mov
and
iret
shrb
dec
xchg
loopne
jae
jl
jne
cmp
jl
xor
push
mov
mov
iret
sti
ficoml
sub
cs
push
aam
lods
arpl
mov
icebp
outsl
mov
xchg
into
add
dec
notb
sar
mov
xor
jae
xchg
mov
mov
pop
sub
mov
ja
and
inc
mov
jns
shl
bound
popa
jae
ret
cmpb
or
sub
in
jae
jmp
addl
jae
jl
inc
out
inc
push
pop
sahf
jl
xor
cwtl
pusha
addr16
mov
push
xlat
jae
les
cli
ljmp
lahf
mov
adc
inc
ret
cmc
xchg
push
faddl
sti
call
pop
lods
outsl
and
mov
mov
add
in
clc
cmp
mov
stos
out
sub
stos
lret
int3
adc
push
cs
xlat
mov
sub
daa
mov
mov
add
shl
jbe
aam
or
js
loopne
daa
push
cmp
shlb
stos
aam
stos
adc
repnz
mov
xchg
mov
lock
and
arpl
fwait
clc
clc
fisubl
das
cs
sbb
add
movsb
or
or
daa
jnp
and
adc
push
aaa
mov
add
add
jmp
push
xlat
adc
movsb
mov
push
and
mov
dec
add
fsts
stos
dec
dec
jb
sub
fstpt
jne
lea
push
pop
ja
mov
inc
and
out
inc
mov
imull
pop
mov
or
test
xor
pushf
repnz
sub
push
iret
lahf
imul
movl
push
pop
cwtl
addr16
cmp
xchg
push
mov
mov
bound
cld
js
xchg
cmovs
cltd
adc
xor
dec
inc
cmp
scas
idiv
push
notb
orb
or
sbb
lods
add
mov
les
sub
mov
gs
pop
pop
sub
dec
push
std
sbb
pop
push
jmp
or
into
in
mov
fstp
ret
cmpsb
mov
sub
mov
mov
sbb
xchg
aam
cwtl
aam
andl
std
xchg
aas
sbb
add
xchg
rorb
pushf
orb
mov
je
mov
sahf
shl
sarb
pop
push
lret
imul
scas
sbb
in
push
xor
rorl
adcb
test
fsubr
not
stos
dec
lea
xchg
inc
dec
sti
test
mov
jg
jb
stos
movsl
in
orb
pop
rol
out
dec
cltd
daa
mov
or
rcr
dec
xor
mov
out
mov
mov
decb
insl
push
adc
dec
mov
pop
jp
stos
pusha
cmp
les
cmpsl
ss
xchg
insb
fnstcw
push
sub
xchg
xor
and
cwtl
lea
jle
mov
push
std
pop
push
jle
mov
lods
add
insl
pop
cmp
loopne
fs
mov
int3
xchg
data16
jle
lods
pusha
xor
push
jno
fists
fucomip
icebp
dec
out
cltd
popf
aaa
fldl
enter
xchg
xchg
das
xor
stos
jp
pause
cwtl
imul
xchg
sub
mov
ljmp
xchg
sbb
testb
jg
add
dec
push
adc
fsubrs
xor
loopne
mov
cmp
inc
lock
aas
mov
pop
cmp
loopne
aad
dec
and
scas
bound
mov
fmul
cmp
call
mov
int
mov
addr16
xchg
jbe
sbb
pop
addr16
popa
out
xchg
pop
cmp
pop
aas
xchg
pop
push
or
nop
lcall
mov
sahf
dec
jmp
loope
pop
jae
movsl
add
stc
and
pop
sub
lcall
fdivl
inc
pcmpeqb
pushf
xchg
mov
sub
insl
sub
xor
fisttpll
imul
ret
xchg
scas
and
inc
cmp
inc
divb
and
lret
out
call
imul
fwait
repz
ret
mov
ret
mov
mov
sar
push
cmp
push
adc
mov
test
fisubrs
add
mov
mov
and
lcall
sub
lcall
cmp
addr16
std
in
mov
popa
fstp
sahf
sti
cltd
jp
sti
mov
out
lock
shrb
mov
leave
xor
pop
lahf
sub
sub
mov
lods
shll
out
sti
lods
fsub
inc
int
fs
and
dec
ja
adc
mov
in
cmp
leave
push
gs
mov
push
sub
add
mull
movsb
and
add
sar
shlb
mov
cmpsb
push
imul
dec
es
dec
dec
aaa
and
je
mov
arpl
pop
lret
add
or
sbb
ds
sbb
dec
push
adc
sub
jecxz
xor
add
loopne
cmp
js
jb
sbb
test
xor
punpckhwd
fdivs
xchg
sbb
fisttps
negb
test
nop
adc
add
das
cs
pop
insl
jmp
jmp
pop
mov
dec
jmp
sbb
leave
xor
dec
add
xor
rclb
adc
add
push
mov
test
pop
enter
xchg
arpl
jp
xchg
mov
cmp
or
pop
and
negb
orl
in
and
jne
sub
mov
inc
xor
imul
mov
loopne
aad
dec
add
mov
rcll
sbb
push
xchg
stos
mov
lods
js
std
xor
inc
je
fisubl
call
stc
add
jle
ss
xchg
aam
xchg
sbb
push
mov
or
fdivs
les
cmp
mov
cmp
fwait
rorb
mov
stc
pusha
fwait
imul
shr
sub
mov
mov
cmp
ret
sahf
and
xchg
mov
imul
push
outsb
lock
pop
mov
sbbl
sub
cmp
jns
pop
aas
or
andb
lahf
xor
sbb
ret
repnz
mov
jns
add
mov
ret
sarl
int
add
mov
xchg
adc
mov
or
mov
imul
cwtl
int
mov
sbb
push
pop
jge
lcall
push
std
clc
incb
shll
mov
je
lret
inc
pop
or
inc
leave
cmp
int3
mov
mov
daa
les
inc
mov
cs
adc
cld
xchg
divb
push
mov
in
sti
inc
push
adc
xchg
sub
push
sub
xchg
jle
imul
push
mov
and
cmp
pop
lret
mov
or
xor
xchg
cwtl
cltd
jb
push
scas
insb
outsl
inc
mov
or
mov
add
cmp
aas
inc
xlat
js
jbe
adcb
jnp
std
sahf
test
loop
mov
test
out
and
data16
mov
pusha
or
ss
repnz
mov
jnp
push
rorb
jmp
dec
push
jo
in
dec
add
stos
in
jge
addb
jne
test
fistpll
clc
in
cmc
add
lret
int
divl
and
popa
xor
pop
jmp
test
ret
aad
cmc
ret
or
mov
cmp
jbe
fisubrl
sbb
pop
adc
mov
or
popa
sub
inc
sub
jle
arpl
fs
mov
lds
scas
stos
mov
repnz
sbb
and
outsl
mov
leave
pop
sub
sahf
in
imul
mov
mov
iret
add
cwtl
stc
push
cmp
xlat
addr16
push
add
outsb
push
inc
pop
lret
outsl
push
and
adc
ljmp
ss
xorb
push
shrb
pop
outsl
or
pop
loope
test
push
dec
jnp
add
xchg
mov
ror
adc
out
test
subb
jl
cs
je
scas
pop
pop
cld
add
sub
mov
test
mov
das
cmp
push
insl
into
test
lods
dec
xchg
fneni(8087
or
rcr
adcl
push
cmpsb
repnz
mov
pop
insl
fidivs
arpl
out
xchg
or
subl
add
movsb
jge
or
add
in
mov
sbb
fs
adc
and
dec
addr16
movsl
ret
sub
mov
aam
imul
sbb
lods
mov
push
dec
aad
lea
pushl
and
imul
adc
call
das
cmp
clc
roll
rcrb
addb
pop
sahf
sbb
and
lahf
xor
test
scas
aas
lods
xchg
mov
daa
test
pusha
stos
or
xchg
not
adc
jbe
xor
add
cvtps2pi
sbb
loopne
stos
mov
enter
and
xor
movsb
inc
push
xor
js
repz
test
or
popa
cld
mov
test
dec
mov
push
inc
orl
lock
xor
inc
add
dec
add
add
std
push
pop
jmp
mov
ret
pop
push
push
pop
dec
out
dec
scas
pop
movsl
adc
push
loop
pop
femms
dec
stos
jnp
jno
filds
xchg
jae
movsl
xchg
mov
pop
jl
fnstsw
and
clc
xchg
add
mov
fstpl
inc
xchg
dec
loop
fsubr
mov
cmc
jno
adc
and
and
int3
and
push
nop
xor
jg
fldt
sar
imul
mov
enter
faddl
and
lods
popf
add
call
imul
inc
push
test
and
hlt
leave
fscale
fisubl
push
add
mov
or
fistl
adc
shll
push
scas
pop
sti
roll
leave
ret
fnstsw
sbb
mov
icebp
subb
test
out
mov
add
xchg
cs
cmp
xor
int3
xchg
pop
xlat
rcrl
cli
outsl
dec
ss
dec
repnz
push
cwtl
pusha
and
xchg
inc
jge
int
into
stos
jp
push
mov
and
lods
into
test
and
fs
outsb
xchg
mov
inc
sub
daa
pop
adc
mov
imul
std
xchg
cmp
xor
sarb
rorb
mov
and
dec
icebp
les
nopl
add
dec
scas
hlt
es
add
mov
fdivl
jge
pop
sub
add
cmp
xorb
mov
mov
lret
dec
cwtl
cmp
repz
cmp
xchg
xchg
pop
inc
test
int
addb
cmpsb
subl
push
add
out
movsb
mov
in
mov
in
jne
dec
jb
ss
in
jnp
ljmp
mov
mov
dec
addr16
pop
xor
out
pop
in
popf
pop
sbb
imul
sti
insb
push
loopne
cld
pop
out
nop
mov
dec
lret
adc
mov
enter
push
xchg
pop
jge
inc
dec
repz
loopne
pushf
xchg
aad
xor
mov
xor
call
jo
scas
cs
mov
int
jns
es
loopne
fdivs
sub
add
aam
add
xor
jmp
ret
cli
cmc
cld
call
cmp
inc
or
xchg
mov
and
sub
and
decb
insl
popf
std
mov
xchg
repz
sbb
mov
iret
shrl
lret
and
into
out
sub
stc
aaa
and
in
pop
mov
adc
lcall
mov
and
sub
jmp
bound
fwait
into
xorb
clc
sbb
sbb
clc
and
repz
and
shl
and
xchg
inc
jo
fsubrl
popf
stos
push
sbb
std
inc
sbb
ja
jl
cmp
int3
ficompl
mov
mov
sti
xor
jg
enter
mov
jmp
add
mov
pop
sti
imul
lahf
divl
inc
ljmp
sub
and
pop
out
lcall
mov
imul
call
xor
andl
mov
lock
adc
sti
frstor
mov
mov
add
ja
xchg
inc
push
jo
adc
mov
mov
cmc
xchg
in
fcompl
out
cmp
movsb
sub
jo
int3
cld
inc
xchg
ljmp
movsb
mov
and
decb
add
or
int
sub
pop
push
push
dec
clc
jmp
adc
pop
dec
stos
jp
jmp
dec
push
ljmp
sti
add
add
jno
lcall
sub
arpl
leave
movsb
loope
mov
out
nop
sbb
dec
cltd
pop
xor
jbe
push
mov
inc
lahf
and
lock
add
in
jl
add
icebp
push
dec
push
jecxz
dec
mov
or
repnz
popf
clc
push
pushl
jle
sub
aaa
push
add
in
js,pn
inc
outsl
push
jl
js
jle
jl
jne
adc
cmp
scas
add
testb
ss
xchg
mov
pop
xchg
adc
movsb
add
xor
inc
scas
adc
push
adc
mov
dec
push
out
popa
aas
sub
aas
cmp
xchg
and
xchg
insb
xor
cmp
push
sbb
or
xor
inc
mov
nop
or
leave
stc
add
jnp
cs
inc
xor
add
das
push
add
sub
add
cmp
xchg
shl
and
popf
ficoml
pop
arpl
dec
cmp
mov
pop
mov
mov
aam
cmc
xchg
inc
sub
adc
mov
and
add
shlb
xchg
xor
scas
jg
in
shrl
fdivl
jo
aad
xor
in
test
fs
fs
lock
arpl
mov
mov
or
stos
jp
icebp
add
pop
shll
clc
out
dec
ds
arpl
add
dec
aas
js
xor
push
xor
fcmovu
xor
lahf
add
sub
add
shll
jge
popf
or
and
push
fdiv
xchg
test
test
roll
add
mov
lds
jb,pn
mov
add
enter
ficoml
or
sub
lret
movsb
mov
enter
adc
cli
repnz
add
push
push
or
jmp
cmp
push
sarl
and
and
inc
sbb
fwait
incl
sbb
decl
js
add
cmp
scas
cwtl
cld
mov
shl
arpl
adc
cwtl
lock
xor
mov
inc
or
lods
rcrl
cmp
das
jne
xor
in
xlat
fdivrs
lahf
out
jle
out
mov
out
pushf
stc
mov
repz
sbb
mov
aas
or
lods
leave
ret
test
inc
add
cmpsl
outsb
call
sti
sarb
bound
fsubp
cmc
sbb
adc
or
push
loop
outsb
sub
cmp
ret
sbb
push
stos
cwtl
jo
add
insl
leave
std
popa
lds
cs
push
mov
dec
inc
insb
inc
imul
dec
cld
cmp
mov
xchg
and
shll
jns
and
fwait
and
fstp
or
lds
sub
shll
cmp
popl
lret
movsl
mov
and
adcb
sub
data16
xor
lret
nop
lods
out
daa
loope
add
mov
cmp
incb
rcrl
adc
push
add
div
add
fbld
and
xor
mov
rcl
cld
add
fistpl
aam
push
int3
daa
or
xor
sbb
pop
adc
xchg
addr16
jle
or
mov
std
or
cld
ret
daa
or
dec
in
mov
push
mov
adc
mov
and
mov
das
push
stos
mov
push
add
daa
mov
dec
and
mov
outsb
cmp
or
mov
or
imul
cmp
sbb
addr16
das
or
and
mov
sub
js
mov
xchg
ret
cmpsl
inc
sahf
fildl
jns
xor
fucomp
mov
icebp
aaa
movsl
sub
xor
dec
xchg
arpl
lcall
push
inc
hlt
mov
push
push
pop
test
daa
fldl
sbb
lods
mov
jl
pop
lods
imul
lds
sahf
mov
dec
push
mov
mov
insl
aas
cmp
jne
aad
xorb
cmp
ja
orb
fsubs
mov
mov
insb
sbb
mov
jg
shrl
in
push
sub
bound
push
cmp
ret
popa
jns
sbb
mov
ds
idivl
xor
pop
mov
cli
xor
add
inc
and
pop
inc
loopne
dec
dec
test
dec
popa
push
pop
mov
push
dec
popf
lahf
xor
mov
cmp
icebp
lods
push
mov
xor
rol
je
imul
adc
out
lods
pop
mov
js
je
imul
movsb
jmp
mov
push
mov
dec
in
jns
out
aaa
leave
mov
inc
imul
shlb
stc
xchg
xchg
xchg
lock
std
mov
xchg
addr16
jns
stc
jo
cmpsb
sbb
mov
and
aaa
or
push
in
movsb
sub
test
hlt
xchg
shll
adc
mov
add
stc
sub
test
test
imul
enter
testl
lret
mov
std
add
nop
fnstcw
inc
sahf
sub
push
stos
jns
stc
xchg
divps
in
push
pop
cld
loope
adc
arpl
push
jnp
dec
aam
add
std
test
adcl
sbb
lret
sub
or
out
push
mov
sbb
dec
push
push
add
notb
insb
lret
add
mov
mov
xor
addr16
lret
addr16
add
or
adc
in
insb
movsb
lods
in
sbb
lret
sub
cmpsb
sub
pop
fisttpl
mov
ret
xchg
jae
and
fucom
ja
jge
cs
or
and
xchg
pop
and
jp
mov
add
and
sahf
movsb
xchg
rol
push
adc
shll
into
repz
xor
rcr
inc
dec
xor
mov
xchg
arpl
imul
push
inc
xchg
aaa
cld
cmc
pop
in
leave
push
es
out
sub
fimuls
sbb
push
and
loopne
sbb
push
rcrl
mov
push
lcall
jo
adc
addl
iret
push
xchg
and
out
adc
add
dec
arpl
repz
lea
mov
shr
das
addr16
aad
push
fdivrl
jle
out
ret
xchg
test
mov
addb
cmpsl
sub
out
pop
jmp
fistl
loop
cmp
test
lock
mov
lods
sub
lods
inc
push
jl
sahf
sub
mov
test
and
insb
sbb
mov
cltd
cmpsl
in
cmp
pop
sub
push
test
or
fwait
hlt
inc
pop
out
push
in
jne
ds
testl
jg
lcall
push
fnstsw
mov
lret
sbb
aam
push
scas
jo
pop
cs
push
inc
xchg
sub
xchg
sub
ds
fcoml
pop
fwait
repz
clc
adc
cmpsb
lea
lret
xchg
call
add
aas
dec
push
testl
imul
mov
mov
xor
add
add
lock
pop
loop
out
mov
push
lds
scas
pop
sbb
push
pushf
fstl
xchg
xchg
das
mov
mov
push
adc
idiv
call
jo
testb
jae
xchg
mov
cmc
jb
leave
ret
sub
cwtl
je
pop
inc
cmp
xchg
jne
fcoms
sbb
sbb
jbe
orl
xchg
xchg
push
lret
call
inc
popa
add
adc
sub
mov
dec
cmc
and
aaa
lds
push
sub
adc
adc
cmpsl
pop
fmuls
pop
cmp
loope
lods
or
or
add
in
or
gs
inc
repz
rcr
or
scas
loop
push
sub
adc
mov
inc
or
push
dec
addr16
jmp
cwtl
xor
sub
push
dec
sbb
shr
rcl
adcl
cs
cli
pop
dec
pop
into
mov
mov
ss
sub
sbb
mov
mov
cmp
out
cmpsl
mov
push
mov
mov
mov
cmp
mov
lret
or
clc
test
loopne
xchg
push
test
sbb
mov
fistl
fnstsw
aam
clc
add
xlat
lahf
daa
int3
jnp
mov
jb
lods
jge
bound
shlb
aas
fimuls
cwtl
mov
test
fistps
mov
repnz
mov
fildll
lret
sbb
adc
sub
ss
adc
lods
mov
hlt
fnsave
js
sub
out
xchg
lds
mov
int3
mov
xor
in
jo
push
add
xor
xchg
in
or
and
lcall
and
popa
cmc
pusha
or
sub
jnp
loop
mov
or
jge
stos
jo
cmp
repnz
or
sarb
pop
mov
jl
ljmp
pop
mov
aas
push
jnp
enter
insb
mov
std
leave
dec
hlt
mov
mov
jmp
and
sbb
mov
imul
inc
loop
andl
jne
sbb
orl
ss
mov
nop
pop
lds
lods
adc
mov
sub
das
stos
add
cmc
clc
jno
dec
out
xchg
fidivrl
clc
inc
cli
faddl
mov
out
fldenv
inc
insb
adc
inc
rorl
inc
outsl
cmpsl
jo
mov
test
pop
adc
xor
stos
jp
fnstcw
add
dec
mov
push
loopne
jle
rolb
test
add
mov
add
fmuls
adc
add
out
sarb
and
loopne
lahf
sbb
mov
or
xor
sbb
mov
fstps
adc
mov
fmuls
popa
js
call
pop
and
call
in
ja
xchg
inc
adc
int
pop
push
pop
adc
jne
lods
test
cwtl
sub
clc
dec
movsb
mov
fisubs
adc
add
inc
mov
mov
mov
jecxz
pusha
cli
xchg
cmp
int
sbb
fiaddl
leave
cli
cmp
div
int3
scas
enter
mov
mov
mov
jp
push
push
test
push
dec
loop
mov
sub
hlt
sub
xchg
movsl
or
cld
xchg
stos
adc
loope
push
push
pop
sub
xchg
cli
dec
or
xchg
dec
mov
lret
sub
mov
mov
pop
hlt
js
stos
dec
dec
pusha
pop
sub
xor
pop
push
jl
sbb
jge
inc
push
repnz
ljmp
loop
and
pop
hlt
fwait
mov
or
mov
jmp
cli
or
hlt
and
pop
adc
shlb
jge
loop
stos
cs
outsl
nop
sub
cli
outsb
push
mov
xor
jl
and
push
mov
or
and
xlat
adc
hlt
and
call
pop
push
out
cmc
xchg
xchg
adc
aaa
btr
xor
lds
icebp
outsb
push
cmpsb
mov
testb
stos
sbbb
mov
lcall
inc
cmc
lock
sbb
mov
sub
push
fadds
xor
push
sbb
push
and
hlt
pop
mov
sub
cmpsb
adc
cmpsb
and
inc
fsincos
mov
sbb
subb
add
mov
call
aam
mov
imul
xchg
mov
push
test
loop
daa
xorb
cli
out
jne
xlat
pop
push
cmp
xchg
adc
loopne
outsb
rorl
sub
bound
stc
fisttps
sbb
mov
dec
xchg
mov
push
inc
cmpsl
adc
dec
out
jmp
lahf
adc
outsl
mov
pop
or
repnz
mov
xchg
loope
mov
popa
adc
push
fisubl
jl
fstp
jne
shl
adc
repz
pop
xor
mov
fidivs
mov
aas
mov
or
scas
mov
clc
push
pop
pop
xorl
repz
and
mov
or
or
repz
xor
inc
cmp
cltd
jne
dec
push
fwait
lods
add
int3
les
push
sub
dec
dec
sub
scas
add
les
dec
inc
jmp
cmp
shlb
push
ljmp
subb
cmp
nop
pusha
mov
and
add
xor
popa
mov
and
movsb
cmpl
adc
add
rcrl
test
ret
adc
addr16
stos
xlat
jge
xor
add
jb
fistpll
sysenter
jl
jbe
repz
out
sbb
imul
cwtl
loopne
mov
cmp
cmp
mov
loop
xor
pop
mov
xchg
pop
daa
int
lds
call
faddl
jecxz
lods
adc
outsb
sub
sub
push
in
sub
dec
int3
lret
mov
std
xlat
push
sub
insl
stc
flds
pop
lods
fstpl
pushf
lds
add
pop
xchg
cld
or
outsw
xor
jns
jno
movsb
xchg
and
pushf
lcall
lcall
mov
cmc
dec
mov
test
dec
roll
mov
xor
jae
sbb
repz
dec
cmc
subb
sbb
pop
xchg
out
jbe
mov
repz
mov
add
fcmovnb
pop
xlat
pushl
ljmp
sub
jecxz
repz
push
mov
ljmp
cmp
imul
fiaddl
push
andb
cmp
xchg
es
aaa
mov
adc
hlt
incl
sub
scas
leave
dec
and
pop
daa
call
xchg
iret
fadd
lds
test
xchg
inc
sbb
scas
xchg
stos
int
xchg
repz
adc
push
cwtl
inc
js
cmpsb
jae
iret
out
sbb
add
cmp
icebp
mov
stos
in
sub
sub
lret
mov
jl
iret
test
movsb
mov
cltd
jbe
inc
stos
ret
inc
push
ljmp
sbb
inc
and
test
push
jae
int3
mov
fs
pop
mov
popf
inc
pop
cmp
mov
and
jg
test
mov
sub
ja
fiaddl
mov
gs
movl
xchg
icebp
cs
iret
scas
testl
dec
cmp
shrl
int
lock
lods
or
mov
dec
inc
fsts
fildll
jb
popf
popf
or
pop
inc
xor
pushaw
push
das
lods
icebp
in
enter
add
xchg
lcall
mov
arpl
xchg
lods
aam
fmulp
xor
mov
cs
lcall
fistpl
daa
add
pop
aad
pop
mov
mov
sbb
movsb
and
int3
test
mov
or
je
mov
xor
dec
out
rolb
lds
xchg
cmp
dec
and
cmp
int
sub
scas
ds
adc
inc
or
les
fistpl
bound
inc
lret
fiaddl
xor
cmp
in
jg
add
outsb
and
sub
gs
push
les
daa
sbb
cmc
pushf
daa
mov
pop
dec
fists
sbb
push
jne
lds
mov
push
push
mov
push
clc
cs
into
add
mov
into
cmp
inc
js
jge
fnsave
push
lcall
stos
xchg
mov
cmpsb
jns
int3
hlt
data16
adc
fildl
add
add
adc
cld
das
pop
hlt
add
aam
imul
jl
mov
push
xor
xchg
jbe
cmp
ss
pop
bound
xchg
sub
add
in
mov
adc
mov
in
xchg
rcrl
jle
arpl
mov
arpl
xor
pop
icebp
add
test
push
cmp
in
lret
inc
stc
int
shlb
dec
dec
or
sbb
xchg
cli
and
mov
std
into
mov
mov
dec
addl
inc
into
xor
xchg
cs
and
xor
call
sbb
divl
pop
sahf
xlat
testl
dec
enter
cmp
in
insl
cli
aam
roll
dec
jo
ss
xor
jnp
pop
mov
lock
cmc
fcompl
outsl
push
mov
fstps
scas
mov
mov
pop
sbb
xor
cmp
cmpsl
pop
push
test
in
nop
cmp
xchg
dec
vminsd
mov
aas
outsl
movsl
adc
loope
jnp
icebp
or
sbb
jecxz
or
scas
je
bound
xor
mov
xchg
push
sbb
or
jne
or
mov
enter
pop
fldt
mov
mov
roll
cmpl
repnz
sub
adc
sub
and
mov
imul
je
mov
aam
jge
cwtl
mov
pop
lods
pop
ret
aas
rcl
inc
ss
outsb
pop
inc
sar
and
fwait
sbb
aaa
out
mov
inc
mov
and
aad
sbb
out
sub
sti
mov
mov
push
or
jle
cmp
hlt
xchg
sbb
xchg
loop
es
add
xlat
inc
mov
pop
mov
pcmpgtw
mov
loopne
pusha
xor
movsb
pop
adc
jo
or
jle
adc
bound
mov
inc
push
in
mov
loope
aad
mov
jbe
dec
add
arpl
mov
push
jg
xchg
mov
loop
lods
lods
mov
leave
adc
outsb
shlb
in
or
mov
jae
push
imul
movsb
mul
adcb
lretw
cmp
or
mov
sub
fidivl
sbb
hlt
and
icebp
push
aas
aas
mov
sbb
call
test
bound
add
gs
push
sbb
es
push
sbb
lahf
mov
addr16
frstor
daa
mov
cmpsl
cmpsl
imul
xchg
sbb
and
shll
mov
subb
push
push
jns
jo
lods
enter
sti
es
inc
loop
pop
inc
mov
mov
or
or
push
loope
push
pusha
mov
xchg
fdivrl
sub
jno
push
jmp
cmp
rcrb
inc
loope
or
mov
test
adc
xor
shrb
push
cmp
ficompl
les
push
mov
dec
rorl
ficoms
lret
jmp
in
gs
adc
mov
cmp
es
rcrb
jo
or
jl
push
add
mov
fldl
push
sbb
out
dec
arpl
addr16
stc
movsl
int
mov
stc
popf
dec
lcall
mov
daa
ds
mov
cmpsl
mov
pop
aaa
nop
jge
push
lea
push
in
add
mov
mov
jmp
xlat
addr16
imul
loopne
dec
cmp
or
int3
ror
jle
lret
out
mov
imul
cmpsl
in
xchg
pop
es
sbb
xor
test
sub
sub
fdivrs
mov
loop
dec
ficompl
sub
enter
cld
pusha
adc
shll
fstl
ficompl
jg
testb
xchg
lea
sub
loope
jo
aam
jle
popf
adc
jmp
mov
fiadds
jg
lret
insb
icebp
mov
cmp
outsb
decl
mov
dec
and
and
add
sub
sub
pop
in
out
add
cmp
fwait
mov
es
cmp
lds
popa
aaa
inc
dec
fs
or
mov
gs
lret
xchg
cmp
dec
mov
sbb
in
dec
loope
sarl
cmpb
pop
negb
ror
adc
movsl
jle
mov
in
xchg
mov
pop
xchg
jmp
push
xchg
out
mov
imul
and
push
and
in
outsb
xchg
xchg
inc
out
aam
arpl
pushf
dec
push
push
call
fsubs
clc
test
sar
mov
and
push
xchg
std
sbb
sub
mov
jbe
in
cld
out
stos
mov
ss
sbbb
scas
leave
jns
xlat
jp
ljmp
adc
out
test
iret
scas
fldcw
mov
or
push
cwtl
mov
sbb
movsb
mov
out
mov
or
push
mov
fnstenv
hlt
lods
adc
cmpsb
pop
mov
push
inc
add
dec
xor
xchg
outsl
je
xchg
add
push
pusha
pop
lods
sub
jo
inc
push
xchg
aam
in
cmp
fwait
loop
movl
mov
push
dec
xorb
fnstenv
imul
inc
pop
lahf
loopne
or
push
pop
outsb
sub
fstps
ja
lds
imul
push
fldt
mov
inc
sbb
mov
xchg
adc
jecxz
pop
xchg
adc
shlb
das
iret
push
addb
sbb
out
jns
movzwl
jns
mov
mov
pop
push
push
or
inc
test
cli
imul
popf
mov
sub
lret
fdivs
pop
dec
pop
lods
pop
fistl
dec
sbb
inc
mov
jp
and
ret
lock
clc
or
lods
sub
idiv
dec
into
lea
cmp
pop
cmpsb
sahf
fwait
mov
je
sub
scas
add
sbb
call
adc
and
pop
daa
add
iret
je
sbb
rcrl
ljmp
mov
sub
seto
pushf
out
jecxz
push
data16
mov
adc
inc
jmp
hlt
jne
xor
fsubrs
or
das
pop
inc
sti
cmp
mov
xchg
inc
sti
push
insb
add
mov
mov
sub
pop
dec
xor
pop
lock
sbb
adc
lret
push
pusha
cmpl
pop
adc
push
cmc
sub
movsl
adcl
add
fdivs
push
mov
jno
aas
sahf
addb
ljmp
add
nop
aam
fmuls
push
push
jns
sub
pop
cltd
ds
in
sbb
fistpl
add
std
iret
mov
dec
add
push
xchg
sbb
mov
arpl
and
sub
pop
adc
call
sbbl
cltd
add
pop
xchg
vminps
lods
push
push
js
icebp
or
inc
push
fmul
cli
push
les
or
adc
cmpsb
sbb
fldl
fnstcw
xor
hlt
aad
sbb
and
sarb
insb
dec
sub
mov
sahf
rolb
mov
lahf
cmp
iret
loope
int
or
sbb
inc
in
popa
jae
jb
cmp
addr16
mov
dec
push
mov
mov
inc
xor
loop
out
dec
mov
cmp
and
sahf
testl
mov
mov
add
les
adc
xor
in
aam
sub
mov
mov
flds
cli
ds
das
shll
push
mov
cmpsb
xchg
jle
xchg
xchg
mov
cmp
clc
push
outsl
popf
mov
lds
inc
adc
cmp
jae
push
or
add
pop
aam
dec
pop
inc
jge
out
or
lahf
and
mov
adc
inc
mov
cld
aad
fsts
push
adc
out
xchg
mov
lcall
cmp
js
roll
jne
mov
daa
mov
push
pop
push
loop,pn
mov
add
sub
pop
in
and
aad
cmpsl
or
jmp
add
pop
lcall
push
sbb
and
add
push
das
pop
ret
jg
in
lock
insl
mov
cli
movsl
shll
fsubs
xchg
or
sbb
cmc
cltd
jbe
imul
inc
jbe
sbb
pop
outsb
shlb
jne
pop
mov
pop
hlt
pop
in
addl
leave
pop
dec
cld
sahf
sbb
data16
arpl
jmp
lahf
out
push
lea
cmpsb
mov
mov
imul
jne
xchg
sub
outsl
xchg
xor
sbb
fdivs
adc
xchg
ret
fisttpll
push
jmp
or
mov
sarl
fcmovnu
xchg
jmp
mov
add
and
or
adc
fisubl
adc
in
mov
mov
sahf
mov
mov
push
fxch
outsb
cmp
jg
cmp
mov
fs
jno
mov
aas
or
jl
cmp
stos
int
das
pop
push
xor
fisubl
jl
inc
jl
sub
lret
shl
inc
mov
jbe
mov
sub
push
xchg
aad
xor
in
add
cmp
test
mov
dec
iret
lcall
sub
jl
stos
sti
or
aas
mov
and
jg
jge
push
cmp
push
fildl
out
xlat
dec
pop
in
xchg
icebp
inc
adc
pop
cmp
add
add
ret
mov
sysret
jnp
sbb
aas
lret
mov
stc
je
and
clc
inc
sub
call
movsb
pushf
shlb
icebp
jp
pop
sahf
bound
jmp
cltd
loop
cld
sbbb
or
cmpsl
or
dec
int
pop
add
in
fisubl
xchg
cmp
cmp
mov
stos
add
mov
je
adc
ss
fs
in
aam
test
xchg
cmp
dec
aaa
sub
ljmp
cmp
lcall
repnz
jge
sbb
mov
icebp
ret
add
adc
jbe
inc
xchg
fists
imul
movsb
jbe
mov
lahf
scas
lds
pop
in
xchg
and
popa
pop
inc
cld
cld
xchg
shrb
imul
inc
fcompl
sub
and
lock
cmp
inc
loopne
pop
lods
aas
rclb
inc
imul
aad
pop
xor
enter
dec
inc
cmp
mov
int
cmp
das
daa
dec
adc
inc
cmp
bound
cmp
rcrl
push
daa
ja
sbb
mov
and
cs
andl
jo
rcl
mov
inc
lods
aaa
out
adc
fcmovnu
jne
dec
lock
push
movsb
test
fsubl
mov
xor
jge
mov
push
hlt
push
mov
ret
xchg
call
iret
stos
jnp
sbb
ss
inc
mov
in
scas
xchg
cli
pop
out
inc
xor
mov
movsb
add
pop
pop
mov
into
or
aas
subl
dec
xchg
inc
push
lds
push
test
mov
xlat
jmp
jge
std
mov
int
sbb
clc
outsl
jp
int
or
mov
aad
imul
cmpl
imul
fwait
leave
or
je
aad
call
mov
rorb
cmp
dec
cmp
ret
shll
xchg
jmp
jmp
scas
sub
jmp
mov
mov
mov
imul
and
mov
add
in
xchg
fsubrl
sub
pop
enter
fists
repz
or
jbe
jecxz
mov
mov
jg
ret
pop
push
outsb
lret
or
fistps
andl
add
cld
es
xrelease
mov
mov
inc
leave
fs
jg
mov
test
gs
push
aaa
call
push
pop
movsl
ret
mov
scas
data16
adc
cli
fisubl
lcall
movsb
xor
mov
push
push
mov
loopne
inc
shlb
mov
scas
xor
and
xchg
cmpsb
cmp
push
addr16
add
inc
push
adc
jno
aaa
loopne
lods
sub
ds
sub
fiaddl
imul
incb
orl
or
or
cltd
movsb
shlb
cltd
jns
push
test
mov
cmp
pop
or
rolb
mov
xor
fs
mov
bound
jo
or
addr16
inc
jns
lods
jne
mov
loopne
sbb
out
loope
sbb
mov
daa
out
out
es
inc
fwait
repnz
xor
cmp
out
push
fnstcw
in
mov
out
sbb
repnz
pop
cltd
out
into
arpl
sub
fstps
ss
and
xor
pop
aas
ret
stc
mov
aaa
add
cmpl
daa
repz
add
jecxz
adc
outsb
dec
jp
xchg
push
aas
fwait
sub
outsb
mov
std
and
aam
scas
lods
int
pop
cmpsb
inc
aaa
dec
pusha
pop
or
jecxz
sub
push
mov
xchg
shl
mull
mov
push
and
add
add
sbb
ret
das
adc
pop
scas
pop
imulb
xor
jg
sbbb
std
lret
jg
or
ret
adc
shl
mov
in
fsub
add
nop
pop
push
imull
icebp
cmp
and
jmp
cld
xchg
das
cmp
cld
pop
mov
dec
rolb
rcll
dec
cmp
mov
pop
cmp
sahf
daa
push
cld
adc
fstpt
xor
adc
push
mov
inc
mov
orb
fdivs
sub
repz
mov
sbbb
mov
cmpsb
fldcw
sbb
repnz
push
mov
xchg
cli
and
out
push
cmpsb
iret
jne
icebp
and
rorb
in
xor
push
pop
sbb
fldl
scas
push
pop
ljmp
jno
call
pop
push
sub
pop
add
mov
pop
leave
push
adc
fcoms
pop
leave
hlt
cmp
aad
cwtl
stos
jle
cmpsb
es
and
inc
lock
shlb
testl
xor
lahf
adc
sub
outsl
dec
cwtl
xchg
xchg
mov
fidivl
fisubrl
mov
repz
cmp
dec
or
mov
pusha
outsl
das
push
lea
aaa
adc
out
add
stos
repz
ret
sub
int3
jmp
add
adc
rorl
or
fisubrl
fstl
lock
fwait
clc
popf
xor
popa
adc
cmp
or
xor
or
fisubrs
out
int3
dec
divl
add
sbb
jmp
jmp
loop
jp
aaa
ud1
das
ljmp
pop
sarl
and
inc
call
mov
int
pop
adcl
pop
enter
pop
inc
mov
xchg
fsubrs
sub
sub
jmp
pop
insb
push
or
sbb
out
xor
xchg
pop
int3
lcall
arpl
fdiv
fs
or
xor
popf
shrb
outsb
lret
int
push
xchg
pushf
ds
pop
aad
sub
pop
sub
mov
popa
inc
sarl
cmc
pop
test
mov
jle
mov
cmp
nop
imul
cmp
scas
adc
das
gs
adc
cmp
push
or
dec
add
adc
inc
jmp
jp
mov
mov
xchg
adc
in
push
fildl
arpl
inc
insb
inc
imul
push
int3
pop
incl
lret
xor
mov
pop
ja
mov
adc
cs
cmpsl
dec
sub
jne
jns
cmp
mov
ret
sbb
out
repz
pop
stos
out
dec
subl
xchg
popa
pop
filds
data16
in
stc
xor
scas
mov
mov
xchg
adc
xlat
hlt
ljmp
clc
xor
and
jo
adc
dec
pop
dec
bnd
adc
js
lcall
cwtl
inc
and
aaa
aad
jno
fbstp
xor
inc
mov
and
lcall
adc
data16
out
std
jo
pop
add
mov
jae,pt
dec
lds
adc
aad
add
sbb
push
stc
out
mov
sbbl
sti
insl
jae
or
mov
cltd
inc
jle
aas
mov
test
in
fistps
ljmp
ret
sbb
lods
push
stos
add
iret
cli
ljmp
shll
int3
push
addr16
ret
cmc
popf
mov
int3
or
mov
scas
xchg
imul
outsb
lahf
sbb
fmull
add
ds
fcoms
stos
or
pop
or
mov
leave
inc
inc
inc
pop
adc
pusha
sbb
stos
pop
jge
loopne
int3
bound
adcl
jmp
mov
popa
shlb
loope
sbb
addr16
pop
mov
aad
loope
or
and
fisttpl
andl
test
xchg
xor
scas
pusha
cmp
ficompl
test
lea
push
repz
mov
loope
add
push
scas
cmp
xor
adc
cs
cmp
lods
fistl
frstor
roll
fsts
clc
push
test
stos
sbb
inc
pop
xor
shll
test
sub
cmp
int
or
or
xor
lds
lahf
jg
ror
jae
imul
idivl
aaa
mov
arpl
aam
test
mov
xchg
pusha
rcl
psrlw
or
cmc
mov
fisubs
xchg
push
xchg
sub
sub
lods
aas
mov
loope
sbb
cwtl
push
stos
in
adc
rclb
jo
mov
negl
fwait
imul
in
out
test
aaa
xor
ss
xor
mov
in
movsb
sbb
fs
dec
pop
push
in
adc
dec
sbb
mov
movsl
inc
into
roll
popf
sbb
cltd
negb
aad
aaa
stos
sbb
mov
jbe
jle
push
pop
addr16
jb
aas
scas
in
mov
jp
mov
nop
jnp,pt
inc
and
xor
cmc
addr16
ret
popf
cmc
rcll
out
cs
mov
push
adc
inc
shl
xchg
rcll
mov
jb
mov
sub
or
jp
shrl
jno
insl
mov
fcomp
cmp
inc
dec
sbb
daa
in
ljmp
les
sbb
sbb
dec
sbb
mov
xor
in
addr16
cmp
cmp
push
xor
mov
add
fnstsw
inc
mov
aas
adc
xor
mov
enter
xor
lahf
sub
add
sbb
orb
inc
sbb
pop
mov
xor
mov
push
mov
sub
add
push
and
loope
mov
mov
dec
jle
add
out
inc
aas
rcrb
lcall
cwtl
inc
pop
adc
cmp
adc
shl
sbb
jns
sbb
push
daa
cmpl
fs
pop
lea
mov
xor
jl
ss
and
push
stos
xor
outsl
lret
imul
popa
mov
xchg
sub
inc
add
sbb
dec
add
xchg
jns
adc
fists
and
push
fcompl
sarb
mov
push
jp
inc
in
addr16
stos
and
pop
push
imul
movsl
leave
lcall
sub
aam
out
stos
adc
js
bound
sub
add
out
leave
xor
ss
cltd
imul
decl
leave
adc
loop
jns
scas
out
je
jne
xor
mov
xor
xchg
call
cmpsl
jle
dec
cli
fstl
addr16
mov
out
in
test
cwtl
push
pop
pop
adc
jle
repnz
xor
push
test
bound
jl
xlat
pop
push
rcrl
push
mov
loopne
cld
ljmp
ror
inc
in
push
mov
cmpsl
movsb
outsb
jae
dec
fimuls
lock
sbb
cld
rcrl
bound
jl
jne
movsl
lcall
push
cmp
or
adc
ljmp
sarl
mov
add
insb
push
xlat
jp
dec
test
sub
cltd
stos
pop
jge
adc
add
addr16
loope
xchg
mov
jl
fwait
pusha
cld
fnstenv
pusha
adc
mov
mov
mov
cmp
ret
jno
stos
inc
mov
push
ds
punpckhdq
jae
mov
xor
push
insb
mov
js
dec
or
cmp
popa
ds
lahf
mov
sub
jns
outsl
in
mov
inc
mov
xchg
inc
add
repnz
or
sti
xlat
sub
mov
aaa
add
xor
hlt
add
fstpl
and
ss
mov
pop
cmp
push
dec
push
xchg
xor
cmpl
pop
cmp
imul
sbb
test
mov
pop
fadds
inc
imul
test
fiadds
movsl
aad
pop
mov
bound
adc
mov
shll
mov
push
inc
out
lcall
jne
jo
pop
dec
push
sub
loop
shrb
mov
jae
jo
lock
mov
fimuls
outsl
mov
dec
jae
ljmp
xor
xor
test
mov
lods
pop
lds
adc
mov
test
mov
mov
out
jge
xchg
in
out
jno
xchg
popf
mov
jge
sub
leave
jnp
mov
or
paddw
addb
inc
jns
mov
fistpl
js
pop
int
or
pop
pop
test
lcall
stos
pop
pop
adcl
sbb
ss
or
les
call
mov
lahf
push
pop
sarb
pop
clc
or
jns
test
jp
and
mov
adc
insl
adc
and
les
repz
out
xchg
add
push
lods
adc
in
cmp
insb
push
xchg
push
inc
cli
dec
popa
or
daa
dec
push
test
loop
jne
lea
pusha
outsl
sub
xor
inc
aad
ret
xor
aas
addb
lods
push
dec
inc
and
pusha
pushf
sub
jecxz
test
out
mov
sbb
rcll
repnz
xchg
lahf
cli
mov
inc
aaa
stc
aam
arpl
jp
jge
int3
cmp
pusha
jle
clc
scas
test
outsl
les
dec
mov
in
dec
aas
subb
imul
or
pushf
fldenv
add
push
fldl
dec
pop
push
jmp
in
mov
xchg
repz
lods
fcmovnb
out
in
loopne
es
jmp
or
jp
cmp
or
push
iret
push
scas
outsl
rorb
mul
repnz
mov
test
xchg
dec
xchg
ljmp
mov
jb
xlat
sbb
dec
mov
jae
ficompl
cltd
nop
mov
aaa
fimuls
pop
ljmp
test
jae
lret
pusha
inc
mov
js
inc
call
mov
mov
scas
jb
push
gs
add
lret
ds
stos
ret
lock
shl
and
outsb
aaa
cs
xchg
out
xchg
and
mov
xchg
idivb
mov
adc
add
push
loope,pn
cmp
push
addb
sbbb
xchg
add
inc
pushf
fmull
xlat
data16
fidivrl
fimull
mov
mov
xor
inc
rorl
cli
jge
lds
ret
inc
ss
mov
add
sarb
pop
or
cmpsl
lret
mulb
mov
aad
inc
notl
push
adc
xor
jmp
shrb
arpl
idivb
cmp
push
aas
push
add
cmc
xchg
mov
jno
jl
inc
inc
test
xchg
push
in
in
and
jl
jp
gs
and
fsubrl
jns
dec
pop
loope
jbe
sbbl
dec
lock
je
std
mov
adc
push
xor
jne
leave
jp
in
insb
ds
add
jp
add
out
jns
div
xchg
xchg
in
enter
lahf
pusha
sub
fs
jle
subl
sbb
mov
testl
fst
or
je
xor
adc
xchg
fucomp
pop
adc
in
insb
cmp
xlat
mov
ror
aas
sbb
xchg
cld
pop
cmpsb
jmp
push
sbb
mov
dec
push
repnz
nop
call
call
mov
popa
in
sbb
std
es
mov
adc
adc
xlat
filds
xor
jmp
pop
test
and
cld
inc
jle
xchg
pop
sub
dec
xor
adc
sub
inc
jecxz
pop
adc
int
rolb
or
outsl
mov
test
aaa
inc
sbb
pusha
mov
les
mov
jle
outsl
testl
ss
push
pop
add
jne
aaa
jl
mov
adc
cmp
lds
ja
pop
jne
scas
xchg
insl
sbb
outsb
fisttpll
pushf
pop
mov
mul
adc
and
xchg
lcall
adc
lahf
xchg
push
pop
faddl
out
xor
imul
gs
jge
fnop
jns
and
jecxz
rcl
iret
xchg
cmp
inc
insl
jle
push
scas
imul
mov
sbb
sbb
xchg
xor
int3
xor
outsb
mov
cld
push
or
xor
mov
xor
aam
xchg
repz
mov
lock
cmpsl
shr
fst
add
lret
lea
or
or
loopne
mov
push
cmc
add
lea
repnz
loopne
into
inc
lock
jb
add
jo
or
outsl
pop
fnsave
bound
mov
bound
int
xchg
mov
loop
js
adc
das
push
cs
insb
jp
xlat
xor
outsb
push
adc
cmp
out
mov
push
fcoml
adc
mov
jne
add
push
test
xchg
popa
fsub
jbe
out
xor
mov
push
outsb
mov
adc
fisttpl
lds
cld
loope
mov
mov
jl
dec
jno
xchg
sub
icebp
sub
inc
sbb
mov
add
sbb
adc
push
mov
adc
xchg
xchg
inc
cmc
ljmp
das
xor
xchg
lcall
push
dec
mov
sbb
mov
and
push
xchg
inc
jns
inc
cli
movsb
aad
fistl
arpl
aaa
or
shl
das
lea
out
icebp
imul
xchg
jae
mov
jp
xor
repnz
shr
lea
call
loope
in
sbbl
fistpl
pop
in
mov
in
jp
aad
ret
out
ret
fs
fidivrl
add
adc
lods
inc
mov
add
mov
jmp
andl
les
jl
jge
dec
inc
loop
lret
xor
lea
push
push
jo
movsl
mov
shrl
adcb
jle
push
cmp
movsb
cmp
push
fincstp
cmp
mov
pop
cmp
pop
xor
jge
imul
sar
dec
pushf
cwtl
mov
jbe
jns
mov
sahf
jae
sub
movsb
cltd
jmp
rorl
adc
dec
mov
xchg
xchg
andl
je
ljmp
mov
adc
dec
pop
inc
xlat
hlt
fidivl
into
mov
rolb
es
jae
outsl
pushf
imul
sub
inc
scas
loope
or
dec
xchg
inc
jg
lahf
xchg
movsl
add
aaa
int
push
test
ret
int
cmp
add
mov
pop
cs
cmp
lcall
sahf
jno
jne
popf
push
mov
scas
push
push
insb
jp
adc
push
call
aas
out
sub
sarl
repnz
sbb
fsubp
fstl
mov
lock
adc
cli
scas
jmp
xor
sbbl
or
sub
insb
mov
adc
loop
inc
call
sahf
sbb
cld
dec
lret
lods
arpl
push
mov
ss
in
jle
mov
xlat
sahf
adcb
push
mov
mov
mov
scas
sbb
sbb
mov
roll
jmp
mov
inc
sub
ror
mov
add
out
sarl
sub
scas
xor
mov
scas
sbb
cld
mov
sub
mov
mov
das
cld
into
jae
jns
adc
cmc
jecxz
out
mov
adc
mov
jle
iret
mov
mov
mov
adc
mov
jno
xchg
loope
lret
add
in
dec
daa
mov
sbb
fstl
icebp
jbe
add
fwait
and
or
call
lahf
sub
sub
adc
pop
mov
inc
xchg
mov
sbb
ficompl
inc
pop
adc
pop
mov
push
fsub
ja
mov
loope
pop
je
mov
add
jge
retw
dec
mov
push
mov
fs
jns
or
inc
jp
js
call
mov
cmp
jecxz
in
cmc
cmp
cmp
les
rorb
sub
inc
add
adc
or
nop
add
lahf
fimull
inc
ret
sbb
cmp
push
pop
cmc
add
vaddsubps
ret
sarl
sbb
fimull
stc
push
push
mov
ss
enter
fdivrs
repnz
in
xlat
imul
in
xor
sbb
out
sbb
push
ljmp
insl
mov
roll
dec
push
unpckhps
mov
xchg
stc
lds
push
pop
adc
cmp
lods
pop
bound
jbe
lret
test
gs
lret
fcmovnu
push
nop
adc
or
sbb
adc
clc
push
mov
add
and
mov
scas
xor
pop
xchg
mov
dec
add
push
or
aad
and
aaa
dec
shlb
add
cmpsb
out
mov
sub
rcrb
mov
sbb
imul
pushf
xor
lds
mov
cmp
es
cli
andl
mov
cmpb
rclb
mov
aas
and
std
hlt
clc
jnp
js
jns
inc
pop
lock
cmp
mov
repnz
mov
ret
jecxz
cmp
mov
loopne
arpl
push
xor
mov
cmpsl
mov
sub
cmp
adcl
shrb
mov
lds
cmp
cmp
add
fdivrp
outsb
ret
inc
or
jns
push
outsl
xchg
ljmp
fwait
lahf
in
cwtl
sbb
lret
mulb
outsl
sbb
mov
jge
out
cmp
std
int3
inc
or
in
bound
jo
and
mov
leave
add
inc
cli
stc
dec
mov
ljmp
inc
lods
inc
push
sbb
mov
lcall
or
mov
das
fistpll
int
jb
sub
cmp
cltd
or
mov
sarb
shlb
loope
add
and
or
pop
out
sbb
enter
fxch
xor
push
shll
mov
push
in
or
fwait
dec
cwtl
jb
lcall
add
jbe
fwait
dec
int3
roll
cmp
mov
mov
movsl
subl
mov
shlb
inc
xchg
stos
xchg
xchg
adc
adc
mov
pop
cmp
push
and
fisttps
loopne
pop
push
test
shlb
sarl
test
mov
clc
xchg
sarb
cmp
and
and
outsb
popf
fs
mov
mov
inc
add
roll
and
sbb
jmp
sbb
mov
or
jmp
jg
int3
pop
aad
mov
pusha
add
dec
push
mov
verr
mov
pop
lods
sahf
in
in
mov
repnz
push
dec
sbb
add
pop
js
inc
jb
filds
mov
test
aad
xlat
lcall
cmpl
mov
jle
inc
out
xor
xchg
clc
int
pop
pop
movsb
sub
jno
or
sbb
rcll
sub
sbb
outsl
adc
call
popf
sahf
cmp
xchg
daa
inc
stos
sti
cld
mulb
adc
int3
mov
pop
dec
or
xlat
cmp
call
stos
mov
test
add
das
scas
adc
push
sub
add
inc
mov
daa
push
fwait
out
dec
cmp
fwait
mov
in
popf
pop
rorl
adc
sub
pop
mov
mov
movsb
dec
in
shlb
and
iret
rcr
xchg
sbb
dec
fcmovb
in
fcoms
jae
jp
insb
imul
fwait
or
movsl
into
inc
stos
lock
sub
int
pop
dec
in
incb
leave
es
mov
cmp
clc
xchg
aad
lea
cmpl
sub
cli
std
and
jne
fisubs
pop
loop
stos
out
jbe
fs
fcompl
arpl
jb
and
push
sbb
push
jbe
in
pushf
xor
sbb
sub
fxch
sub
xchg
pop
ja
xchg
andl
mov
or
xchg
jne
sub
lret
push
inc
jns
rcr
jmp
mov
dec
add
push
lock
in
imul
or
loopne
xchg
xchg
imul
sbb
dec
repz
lods
sub
add
scas
stos
cmp
scas
mov
sub
aam
test
loopne
cmc
stos
dec
push
shlb
ret
mov
dec
lock
dec
addr16
or
adcl
hlt
cmp
sub
or
cmp
pop
int3
pushf
cmp
cld
incb
xchg
jge
xor
mov
pusha
lds
enter
and
cwtl
testb
jo
jnp
testb
arpl
testb
mov
lret
jle
push
xor
aas
fisubs
jns
pop
adc
fldcw
cmp
mov
mov
ja
and
ss
pop
fsubrl
ja
push
imul
jae
inc
and
js
sbb
sti
ds
cmpl
and
xor
adc
ret
sar
call
popf
ss
pop
sub
pop
stos
pop
adcl
subl
push
or
mov
or
pop
mov
fsubr
or
sbb
movsl
cmp
add
xchg
in
cmp
xchg
sbb
pop
fcoml
pushf
xchg
daa
gs
dec
rolb
in
inc
jno
xchg
iret
lods
push
jp
dec
or
add
std
jae
push
fimull
mov
ljmp
lods
in
jle
std
fimull
fwait
mov
sub
adc
fucomp
push
xor
arpl
mov
dec
pop
or
or
jmp
push
stos
outsl
or
jle
mov
les
in
and
mov
sarb
inc
addr16
test
decl
stos
andl
fnsave
hlt
jno
and
lods
xchg
pop
stos
fdiv
scas
sub
cld
mov
rolb
pop
mov
clc
iret
test
orl
cs
xchg
cmp
das
ja
sbbb
mov
mov
or
addr16
popa
sbb
ret
or
scas
movsb
add
cvtpi2ps
scas
or
flds
add
pop
sbb
xchg
iret
fs
fldt
mov
aad
cmp
mov
pop
data16
mov
repnz
enter
clc
test
std
adc
loope
js
addr16
xchg
and
mov
add
adc
sti
inc
jbe
push
ja
jecxz
roll
push
lahf
fnsave
or
inc
jns
mov
enter
icebp
push
jp
addb
movb
or
icebp
xor
out
inc
or
and
xchg
mov
and
loop
sub
in
pushf
xchg
add
sub
out
ss
xlat
lods
sub
decl
stos
aad
repnz
imul
fists
aad
dec
or
lret
cmc
out
fnstsw
rcll
leave
fs
or
scas
cmc
addr16
in
clc
ret
jmp
stos
mov
pusha
adc
out
pop
daa
jecxz
mov
pushl
and
lods
fcmovnbe
xor
cs
shrb
push
test
stc
adc
std
sahf
xchg
bound
jge
scas
xchg
jmp
lahf
jo
push
sbb
push
mov
dec
xchg
loopne
or
fistpl
inc
aaa
iret
mov
or
push
stos
adc
outsb
mov
imul
bound
mov
pop
xchg
mov
int3
pop
xor
adc
mov
xchg
xchg
lahf
test
push
xor
scas
sub
xchg
ss
hlt
negl
movl
sub
ds
sbb
lock
inc
mov
pop
sub
sub
arpl
out
inc
adc
adc
ljmp
or
xor
push
mov
loopne
fdivrs
in
lret
cmp
adc
aad
add
push
mov
jle
cmp
cmovae
sbb
xor
clc
lods
and
and
sub
mov
pop
mov
lods
or
sbb
push
sahf
xor
push
jbe
adc
and
and
fists
sbb
push
add
leave
sub
jo
or
or
or
lcall
rcl
adc
dec
dec
xchg
lods
cmp
add
add
adc
fwait
push
sub
add
adc
sbb
xorb
xchg
push
pushf
jno
mov
out
mov
lods
cpuid
add
mov
imul
shlb
out
or
lods
cld
inc
cmp
xchg
mov
das
sbb
jp
and
xchg
and
or
hlt
cwtl
pop
push
adc
add
aad
mov
stos
in
cmp
add
ljmp
xor
iret
sbb
jae
push
mov
into
repnz
or
les
push
mov
jmp
lea
stos
clc
mov
pop
repnz
or
mov
push
and
xor
xor
les
movsb
gs
sub
movsl
stos
jp
fwait
sbb
pop
xor
mov
add
add
cld
mov
shll
imul
sub
andl
fadd
add
fadds
mov
cld
push
mov
arpl
rcrl
xorb
ljmp
in
inc
insb
jae
sbb
imul
jecxz
push
outsl
jnp
dec
pop
inc
sarb
jno
into
lea
pusha
repnz
jl
sbb
rcr
in
add
jge
in
gs
mov
shrb
arpl
cli
xchg
mov
inc
std
add
xchg
nop
fnstsw
jo
lock
neg
andb
in
inc
mov
add
pop
sub
dec
mov
push
out
mov
and
push
pop
or
in
out
mov
mov
jno
or
clc
int
test
jecxz
jb
or
out
add
shll
leave
popf
add
mov
sbb
jns
xchg
sub
dec
or
inc
aaa
pop
fsts
loopne
mov
repnz
clc
jno
in
dec
xchg
and
cmpsl
lcall
mov
pop
xor
and
lahf
popa
mov
sbb
push
cmc
inc
testb
push
add
push
popa
subl
ljmp
push
cmpsb
aad
add
lds
xor
shl
ret
pop
xlat
rol
int3
rcr
jo
xor
sub
push
pop
sub
mov
cmp
mov
int3
je
sbb
lds
and
scas
inc
jge
and
cltd
arpl
jge
adc
xor
insl
stc
out
cmpsl
adc
mov
stos
adc
pusha
data16
push
aam
inc
dec
jecxz
push
leave
add
inc
mov
gs
mov
sub
add
sub
std
push
cmp
and
or
repnz
mov
pop
cmp
sub
push
and
push
jne
ljmp
pop
dec
addr16
test
push
arpl
popf
adc
pop
lea
sub
inc
fwait
out
dec
or
inc
sti
loopne
hlt
push
shll
inc
xchg
cmp
pop
cmp
jb
enter
mov
jecxz
lret
clc
rorb
push
sarl
pop
cmp
mov
inc
rorb
sbb
sbb
xor
pop
add
dec
dec
clc
adc
push
inc
or
test
addb
test
lea
enter
fmuls
sbb
push
out
das
cmp
sbb
push
rcrl
bound
mov
push
fwait
ret
outsb
xor
jb
fmuls
hlt
stos
push
xchg
cmpsb
cld
scas
xchg
pop
pop
mov
das
xor
je
mov
jbe
clc
mov
jp
sbb
xchg
cs
mov
or
lods
imul
cmp
stos
dec
fstpl
mov
adc
adc
aad
loop
fwait
pop
sub
js
outsb
std
and
aam
cld
cmp
sbb
testl
inc
pop
rcrb
in
arpl
jb
cmp
sbb
lret
or
jnp
cmpsl
out
cmp
dec
push
xor
arpl
mov
fsubl
adc
sbb
addr16
aas
adc
xor
xchg
jp
aas
add
add
stos
mov
out
inc
dec
mov
push
xchg
xchg
int
jle
and
cltd
loopne
pop
mov
cmp
cmp
dec
movsb
rcll
fisubs
jae
loop
lret
inc
loop
cmpxchg
lcall
mov
mov
nop
in
xorl
mov
aad
fisttpll
lods
sbb
dec
jbe
or
push
bsr
lcall
or
xchg
cs
movsl
push
add
faddl
sub
insb
push
jns
and
fdivrs
fs
inc
aaa
lahf
push
cmp
mov
fcomp
testb
inc
scas
je
cmp
test
inc
adc
jo
mov
cli
mov
shrl
int
add
flds
subb
cmp
rcll
in
cwtl
inc
jbe
cwtl
lods
and
xor
sub
xchg
push
std
jb
aas
incl
mov
inc
jge
ret
cmp
inc
test
pop
jb
mov
insb
ret
push
fucom
xor
mov
out
dec
sbb
sbb
xlat
jle
repz
xorb
lods
ret
into
adc
push
ret
adc
add
js
fucomi
mov
test
mov
std
and
xchg
or
push
xchg
mov
stos
mov
push
fs
ss
enter
fistps
mov
jg
ljmp
lods
sub
in
sbb
lret
pop
mov
and
fwait
push
push
xchg
sbb
flds
jmp
and
mov
mov
sub
lock
or
scas
jle
xor
xchg
aaa
pop
xchg
sbb
aam
lods
stos
arpl
ror
jae
or
pop
sbb
sti
xchg
xchg
lds
ss
jp
mov
pusha
mov
xchg
aam
push
push
pop
test
imul
mov
and
cli
mov
sub
negb
mov
and
fadd
push
push
or
sbb
aad
test
fisubrl
or
pop
xchg
inc
cmp
sub
lds
mov
mov
out
adc
loope,pt
nop
adc
scas
loopne,pt
aad
dec
jae
jno
cmovbe
fisubrs
cltd
icebp
fdivs
cltd
aas
inc
inc
pushf
cli
or
jg
scas
aad
loopne
shrl
adc
les
pop
dec
aam
out
add
lods
call
inc
and
pop
test
call
fsubrs
ret
cwtl
add
jecxz
sarl
shrl
mov
mov
pop
xor
or
rcl
cmp
mov
jo
add
stos
cli
mov
es
sbb
cwtl
cmp
sbb
ror
movsl
testb
das
aad
call
shl
mov
adc
int3
mov
or
lret
and
adc
lods
out
add
ja
cmp
push
dec
inc
mov
xor
dec
sub
mov
insb
jmp
and
add
lret
cmpsl
sbb
daa
outsb
jns
xchg
in
arpl
cli
dec
pop
leave
sub
inc
fstpl
or
aad
loopne
dec
mov
and
jne
or
test
xor
sbb
fadds
hlt
lretw
adc
out
icebp
pushf
mov
sahf
inc
imul
cltd
jne
xchg
dec
mov
xchg
cmpsb
pop
xlat
in
movsb
sub
jne
rcll
inc
xor
cmp
inc
jle
test
add
aam
mov
xor
shrb
add
mov
lods
rcrl
push
mov
movsl
jb
sbb
mov
fs
addr16
arpl
ljmp
arpl
aad
es
stos
fistps
fidivl
adc
sub
int3
and
out
fnsave
and
je
add
pop
cli
pop
lcall
cwtl
dec
scas
fstps
cltd
adc
mov
iret
std
dec
mov
sub
add
push
mull
push
mov
sub
lds
adc
leave
fsub
pop
scas
je
add
cmpb
sti
adc
push
inc
jbe
rorb
dec
out
pop
pop
sbb
fs
xchg
push
adc
lea
dec
adc
pop
mov
sbb
aaa
pop
aad
inc
add
push
out
fs
imul
test
jl
lahf
pop
mov
mov
ja
inc
or
daa
adc
clc
shrl
imul
inc
loop
mov
scas
jle
mov
leave
jnp
imul
jecxz,pn
mov
bound
inc
int3
jns
sub
xchg
pushf
mov
mov
pop
scas
mov
inc
add
les
xor
into
and
popa
aam
nop
ja
mov
jmp
ljmp
push
add
mov
mov
ja
and
jmp
sbb
mov
sub
hlt
in
jne
fistps
xlat
dec
push
push
xor
cmp
add
repz
out
rcll
sbb
jo
lea
adc
mov
ss
and
mov
pop
and
imul
cmp
inc
out
pop
mov
inc
sbb
and
fmul
inc
loop
cwtl
jg
jle
loope
pop
jp
push
jp
lcall
aas
inc
jbe
mov
sub
push
and
cmpsb
pop
movsl
es
shll
sub
cmp
test
dec
dec
xchg
dec
outsl
fistps
rcrl
loopne
xchg
mov
mov
dec
ds
out
adc
jb
aam
cwtl
pusha
push
les
mov
sbb
arpl
jmp
jb
or
xchg
test
xchg
lret
mov
jns
jo
inc
sub
and
shll
inc
sub
aas
pushf
nop
int
jo
dec
mov
push
add
mov
in
and
jae
std
push
pushf
scas
push
loopne
push
mov
push
loop
sub
in
in
in
addb
adc
shlb
cmp
mov
jge
fyl2x
sbb
inc
xchg
xor
cmc
pop
sbb
iret
pop
xchg
fcomi
dec
inc
jo
ljmp
jne
mov
dec
stos
adc
outsb
fsts
jb
scas
cmp
int3
xchg
mov
insl
push
mov
jne
sbb
mov
mov
notb
arpl
push
xor
loopne
or
repz
jecxz
aad
mov
pop
movsl
cmp
push
lods
hlt
sbb
lods
scas
push
xor
push
sbb
fsts
mov
sti
out
inc
mov
xchg
lds
sbb
icebp
lret
iret
mov
daa
push
lds
lahf
call
inc
mov
push
lea
int
nop
pop
aaa
clc
shr
pop
sbb
je
add
clc
dec
xor
dec
push
xchg
insb
imull
pop
add
add
sbb
repz
movsb
outsl
dec
add
ds
xorb
xchg
enterw
les
out
popa
sahf
mov
mov
pushf
sbb
sbbb
mov
out
lret
andb
add
jns
xor
jns
mov
mov
cmp
xor
push
fucomip
dec
and
and
cmp
repz
add
xor
int3
or
test
sar
aas
or
jge
fbld
cmpsl
mov
lahf
mov
fwait
stos
pusha
cmp
push
xor
inc
mov
imul
scas
mov
pop
dec
mov
lods
jne
sub
cmp
insb
dec
xor
outsl
inc
inc
rep
das
pop
movsl
xlat
jle
out
in
adc
pusha
mov
dec
sahf
sbb
popl
adc
and
push
mov
fcomp
mov
arpl
cli
xchg
adc
lahf
leave
xchg
into
inc
int3
sub
cli
push
and
pop
jbe
xchg
sarl
xlat
and
sbb
mov
pop
dec
xchg
repnz
loopne
vucomisd
inc
scas
sti
inc
aas
add
into
mov
pop
sbb
cmp
dec
out
subb
les
ret
pop
mov
jae
jnp,pn
adc
fildl
add
sbb
in
std
aas
subb
xlat
enter
mov
jo
nop
dec
inc
movsb
fdivrp
outsb
xchg
clc
andb
pop
sub
iret
jne
sbb
dec
imul
sbb
push
scas
scas
pop
ret
or
mov
push
addr16
dec
lret
xchg
iret
sarl
cwtl
pop
aaa
push
mov
cmp
test
test
inc
sbb
bnd
dec
mov
stos
mov
dec
push
jns
lret
es
sbb
cltd
enter
dec
out
cmp
sti
in
xchg
dec
in
lods
mov
mov
sbb
movsb
mov
mov
sub
jnp
cmp
sub
or
lock
movsb
push
dec
push
in
xor
lds
lret
and
mov
fldenv
pop
lcall
out
insl
std
add
xlat
es
rcll
subl
mov
or
aam
adcb
ds
outsl
scas
hlt
push
xchg
pop
test
cltd
out
cli
dec
jae
insl
insb
sbb
mov
insb
loop
fs
mov
mov
insb
push
push
stos
jnp
push
lret
xor
add
inc
loopne
jecxz
sahf
movsb
mull
je
mov
mov
inc
cltd
ja
incl
sub
cmc
xor
add
aaa
push
or
shlb
xor
mov
xchg
dec
pop
ss
push
lahf
mov
push
bound
outsb
mov
xchg
dec
inc
xor
and
pop
jecxz
push
and
inc
and
jb
mov
sub
sbb
fcmovne
out
dec
mov
sar
sbb
add
es
add
push
lahf
test
shrb
or
sbb
jo
sbb
pop
jbe
xor
sahf
ret
arpl
fnsave
lret
cmp
mov
push
cwtl
or
and
data16
add
aaa
das
mov
loopne
insb
cli
shll
mov
sbb
sbb
adc
sbbb
adc
cmpsl
add
pop
cmp
jne
xor
xchg
popf
pop
push
fs
icebp
cld
clc
insb
repnz
and
dec
das
jg
and
jnp
cmpsl
stc
pusha
fidivrl
add
cli
inc
jge
in
push
inc
xorb
mov
mov
imul
sub
ficoms
jbe
jle
inc
jns
nop
daa
xor
cld
imul
mov
insb
sub
cmpsb
andb
push
pop
inc
sub
cmp
mov
mov
mov
xor
std
adc
cmp
push
lret
adc
iret
mov
inc
int3
in
mov
jmp
mov
leave
jecxz
dec
aad
adc
shl
push
xor
clc
xor
bound
fst
es
cmp
icebp
cltd
adc
adc
gs
fdivr
ficompl
jnp
lods
xlat
stos
mov
rorl
xor
jle
or
mov
fnsave
addr16
pop
ljmp
or
jl
xorb
dec
ss
out
ljmp
icebp
and
adc
mov
jg
scas
fistl
aas
pop
mov
iret
sub
in
pop
cmp
scas
repnz
mov
push
pop
lret
ret
test
and
clc
inc
push
ljmp
xchg
add
cmp
xorb
les
mov
adcb
pop
ja
mov
mov
sub
sub
jle
shl
pop
xor
add
cli
lea
adc
xchg
cmc
mov
fsts
sub
add
push
push
fcmovnu
cld
mov
aas
mov
sub
shrb
xchg
jb
xchg
lret
shlb
bound
jno
mov
out
dec
push
or
mov
mov
rcll
iret
shl
mov
into
call
into
out
mov
cmp
sub
lret
outsb
in
jmp
js
in
inc
je
pop
lock
cs
aam
or
mov
out
push
mov
adc
adc
sub
fisttpl
push
jle
mov
xchg
dec
fwait
or
xor
add
push
leave
nop
pop
ret
add
rolb
add
stos
outsl
mov
lret
imul
scas
cmp
sbb
mov
leave
push
mov
out
std
shlb
mov
cmpsb
inc
icebp
into
test
cmp
push
xchg
testb
lods
mov
aas
xchg
lret
stc
iret
data16
shll
stos
mov
icebp
andb
inc
push
push
push
add
xchg
adc
jl
xor
mov
pop
and
cmpb
inc
mov
popf
mov
ss
mov
sub
mov
xor
fisttpl
and
dec
push
ret
insl
in
shrl
jp
out
xchg
popf
in
sub
mov
pushf
push
xor
mov
pop
add
movsb
sbb
daa
fstps
push
or
cwtl
cwtl
and
cmpb
jl
adc
das
push
mov
jge
jl
ret
push
aad
mov
into
add
add
cld
push
mov
add
test
jo
push
aaa
iret
js
mov
stos
fnsave
cwtl
xor
mov
repnz
lret
and
cmc
xchg
cmpsb
es
jmp
stc
jecxz
stos
and
daa
mov
fbld
div
int3
mov
cli
xlat
loop
js
pusha
sahf
je
xor
xor
in
xchg
sub
fisttpl
aam
lds
outsb
call
ret
insb
sub
rclb
arpl
jo
inc
mov
mov
and
mov
inc
mov
cmpsb
stos
std
clc
das
pop
addr16
jnp
push
addr16
cmp
adc
push
pushf
lock
sub
cmp
sbb
jmp
jbe
or
mov
out
neg
jb
jmp
inc
sti
fwait
jge
adc
shll
movsl
je
dec
push
xor
shrb
pop
cwtl
or
push
pop
jle
in
dec
or
xchg
fdivp
rorb
sub
hlt
add
iret
rol
and
pop
fsubp
and
mov
inc
inc
enter
rsm
adc
hlt
pop
inc
negb
out
fisubs
xor
sbb
pop
mov
mov
pushf
adc
xchg
int3
clc
pop
jo
mov
sub
jo,pt
mov
lahf
or
addr16
fdiv
jle
mov
sub
cmp
inc
rorl
and
ja
adc
aad
sti
aad
in
clc
cmp
fists
fsubrs
test
pop
sbb
xchg
ret
mov
loope
imull
push
mov
push
fisubs
sbb
loopne
push
loop
pop
shrb
push
jle
out
cs
ljmp
cmpsb
add
ss
out
sbb
xorb
inc
in
jecxz
push
and
adc
inc
enter
mov
push
stos
xor
cmp
clc
mov
inc
push
mov
shrl
dec
iret
in
sahf
pushf
lcall
pop
cld
fcomps
mov
cmpb
mov
sub
mulb
jae
out
insl
pushf
outsl
inc
mov
mov
dec
push
out
ja
jecxz
jecxz
xor
negb
add
repz
ljmp
jns
cltd
jo
scas
hlt
mov
cmp
push
add
mov
cld
leave
repz
lds
pop
jl
mov
push
or
sarb
imul
adcb
xor
sbb
orl
jecxz
mov
dec
cmp
loope
ja
sbb
xlat
mov
stc
cmp
cmpsb
adc
fdivrl
in
jae
inc
jo,pt
mov
push
pushf
jbe
lods
test
jle
adc
movsb
repz
pop
dec
repz
adc
lret
fimull
nop
cmp
nopl
fcmovb
add
xor
mov
jmp
jnp
and
xchg
sahf
sub
out
in
das
dec
orb
arpl
lods
cmc
sub
pop
fldenv
dec
lock
int3
mov
dec
push
sahf
icebp
neg
adc
push
mov
adc
mov
mov
cli
stc
jno
or
sti
test
popf
or
loope
or
dec
inc
adc
mov
sub
icebp
pop
adc
jle
cmp
shll
or
mov
sbb
inc
in
pop
pop
dec
pop
aaa
mov
xchg
push
ja
and
jae
mov
shll
inc
mov
sarb
lret
repz
arpl
popa
movsl
test
loop
pop
mov
decl
addr16
stos
popa
pushf
ficoms
sub
idivl
stos
sbb
pop
jle
fs
sbb
mov
mov
nop
mov
ljmp
mov
pop
push
ljmp
dec
adc
xor
push
inc
xchg
aas
add
pop
cmp
xor
lcall
mov
mov
int
aaa
mov
cmpsl
daa
ljmp
push
jb
icebp
push
es
add
dec
xor
rol
sbb
jecxz
push
sub
pop
les
sub
xchg
xchg
pop
loopne
mov
ret
fisubrl
jbe
dec
inc
cmp
fstl
sub
mov
fs
sarb
xor
mov
xchg
sub
or
push
and
cmp
or
sbb
les
jmp
in
mov
mov
xchg
mov
cmp
and
mov
add
lret
add
pop
pop
testl
sub
cmp
xchg
push
or
sahf
test
outsl
mov
push
insb
mov
pop
xchg
test
movd
pop
add
push
pusha
hlt
sub
lods
neg
and
ficoms
cwtl
and
popf
ljmp
cmp
lcall
lret
outsb
adc
cmp
in
fnstcw
fcomi
fwait
pop
dec
repz
push
pop
mov
jo
lock
jp
mov
fbstp
or
pop
gs
ljmp
je
sub
dec
xor
and
sti
pop
pop
mov
mov
repz
repz
mov
add
stos
in
call
xchg
daa
cmp
lret
mov
lds
rol
cmp
es
lods
mov
fcmovnu
fwait
pop
xor
ret
and
mov
popa
mov
int3
pop
scas
std
lea
outsb
ss
divb
lds
in
popl
rorb
push
dec
or
cmpsl
lcall
das
adc
cs
loopne
pop
das
dec
or
ret
push
sub
cmpsl
or
rcrl
shll
sti
shll
dec
test
mov
std
loope
push
movsl
jp
daa
lock
xor
pop
int
mov
or
mov
stos
stc
insb
icebp
xor
or
lret
fsts
loope
jmp
addr16
dec
pop
pop
xor
xor
jns
lcall
dec
stc
std
cmp
fists
xor
idiv
ror
add
add
rcrb
or
ficoms
sbb
lret
mov
fdivp
out
jo
or
sbb
pop
adcl
loopne
lret
push
mov
and
pop
or
fcmovnu
popf
cmpsb
cmp
mov
rcl
push
mov
push
sbb
lcall
mov
rcrb
imul
or
call
mov
jmp
adc
push
lods
jmp
push
adc
pop
push
xchg
loope
mov
ret
xchg
or
out
or
popa
push
out
push
inc
mov
pop
sti
aad
pop
das
pop
jae
out
jb
push
ja
mov
testb
int
cmp
mov
dec
push
xchg
fadd
insb
push
popa
add
mov
add
and
out
fistl
lock
call
jnp
jno
pusha
je
inc
stc
inc
adc
or
mov
int
aaa
outsb
cmp
jl
mov
pushf
cmpsb
xlat
xchg
inc
xchg
fnstcw
sbb
push
addr16
sbb
ja
add
repz
sub
iret
pop
rcll
xchg
repz
push
jbe
pop
out
fcmovnb
pop
cmp
xchg
and
test
cmp
pop
inc
fstp
stc
or
pop
sarb
shrb
divb
mov
dec
nop
pop
lods
pop
xlat
lods
nop
ljmp
inc
fidivrl
add
jge
sub
jmp
mov
mov
pop
dec
cmp
nop
enter
xor
mov
mov
xchg
flds
aas
stos
shlb
out
adc
xlat
ss
xchg
xor
dec
mov
adc
push
rcr
insl
dec
call
push
mov
addr16
xor
xchg
popf
adc
insl
lods
cmc
pop
sbb
jl
xor
iret
fwait
mov
in
add
ja
add
cmp
sarb
sub
push
xchg
fisubs
adc
sbb
inc
fisttps
mov
mov
push
and
xchg
ret
fisttps
or
inc
dec
cs
addl
jl
test
jns
das
mov
mov
iret
stos
sbb
mov
sub
fsubrs
push
jg
std
dec
hlt
shrl
inc
jb
xor
dec
inc
add
mov
lret
mov
dec
jnp
pop
mov
xchg
mov
sub
push
shlb
iret
popf
mov
lret
dec
sbb
or
ror
inc
add
push
mov
jb
std
nop
xor
mov
in
repz
imul
pop
or
roll
aam
inc
daa
push
dec
jno
lea
les
mov
fdiv
cmpsl
mov
fcoml
jnp
out
mov
jmp
cmp
push
push
hlt
imul
ljmp
pop
mov
mov
adc
xor
ret
lcall
lods
cltd
push
adc
jl
call
fs
mov
dec
push
cmp
push
das
mov
sbb
jnp
mov
jne
popf
mov
test
leave
and
jle
andb
jne
faddl
adc
sbb
lret
mov
int3
lret
push
mov
cmpsl
inc
test
jbe
sar
insl
cmpsb
pop
arpl
add
mov
outsb
in
std
sbb
inc
incb
rorl
mov
lret
vmwrite
sbb
sub
je
jbe
xlat
push
dec
and
test
std
and
nop
or
dec
xchg
or
dec
add
pop
addl
mov
pushf
push
repz
jmp
lds
ret
inc
jne
mov
add
lcall
mov
inc
pushf
push
in
jecxz
arpl
cltd
frstor
das
testl
repz
jo
loop
ret
fs
nop
dec
push
xchg
test
repz
dec
push
test
xor
rcrl
lahf
jb
scas
gs
subl
imul
test
das
out
stc
jb
cld
loopne
add
nop
iret
pushf
lock
rcrl
jmp
leave
and
sub
mov
rclb
or
imul
loopne
xor
lock
aas
cmc
das
gs
call
cmp
movsl
mov
mov
popf
fsts
jg
add
adc
dec
mov
andb
lcall
dec
movsb
jl
test
fsub
jle
jne
aaa
mov
dec
sub
clc
notb
addl
int
mov
sub
sahf
mov
imul
dec
arpl
repz
fst
jl
call
movsl
or
xrelease
js
xor
nop
mov
loope
fwait
decb
notl
subl
std
rcrl
mov
xor
movsb
addr16
jl
sbb
mov
mov
xor
inc
ret
push
jnp
mov
adc
das
subb
lea
cmpsl
rcrl
xchg
xor
jae
push
mov
lods
cwtl
xlat
sbb
hlt
mov
rcrb
js
mov
test
xchg
cmp
inc
xchg
jmp
mov
aad
inc
xchg
push
fistl
sti
test
aam
jbe
lock
mov
bound
push
std
cld
outsl
insb
jnp
repz
xchg
aad
imul
inc
inc
arpl
mov
lahf
cltd
roll
clc
push
vunpcklpd
cmp
negl
pop
dec
add
or
sti
out
and
lods
addb
mov
push
test
mov
inc
pop
xchg
push
xor
int
fst
pop
sbb
adc
jecxz
xchg
bound
sbb
mulb
inc
lods
cmp
fdivrp
into
xor
and
xlat
subl
outsl
cld
in
stos
pop
int3
jmp
aaa
xor
pop
xor
aam
xor
ret
rcll
in
dec
seta
nop
dec
inc
out
imul
data16
mov
int
pop
push
xor
lock
push
rcrl
sbb
fsubrs
sbb
mov
scas
cltd
test
mov
cmpsl
sub
test
insl
mov
in
imul
cmpl
xchg
out
test
imul
xchg
xchg
pop
frstor
jl
loopne
or
dec
mov
mov
stos
rcr
or
pop
mov
call
mov
adc
xor
dec
aam
push
pop
cwtl
inc
hlt
adcb
push
popa
mov
std
outsl
adc
push
leave
stc
lahf
mov
and
mov
push
scas
out
dec
dec
rorb
cld
xchg
mov
sub
dec
inc
ja
inc
lahf
ret
in
test
and
mov
dec
inc
scas
lock
arpl
xchg
sbb
sti
ss
ljmp
xor
push
sbbl
iret
repz
imul
repz
pop
mov
pusha
test
dec
adc
pop
fimull
pop
testb
jp
pusha
ljmp
mov
mov
fldl
jne
int
ljmp
push
sbb
sti
and
pop
jne
xor
mov
jecxz
andb
xchg
aaa
cmp
push
push
aam
sub
push
cmp
ja
fists
mov
out
adc
add
fcmovnb
clc
dec
into
push
jp
dec
outsb
mov
nop
fwait
mov
stos
jo
mov
inc
lcall
test
adcl
xorl
subb
or
repz
jno
nop
aam
mov
xchg
push
pop
jle
jb
sbb
and
cmp
jge
push
inc
mov
test
jl
fwait
shl
mov
pop
loope
pop
jo
xadd
daa
shrb
add
aam
push
dec
mov
inc
sub
sbb
in
pop
jns
or
adc
jl
mov
add
mov
push
mov
xchg
push
repnz
cmp
fdivr
into
jmp
mov
mov
sub
setb
mov
pop
or
mov
pop
push
mov
insb
cwtl
mov
fsubl
jmp
and
cmp
mov
rol
pop
fsubrs
pop
jmp
or
mov
bound
stc
mov
pusha
cmp
bound
icebp
test
shrl
negl
daa
into
sbb
test
bound
loopne
jno
addl
xor
scas
inc
cmp
add
jp
xchg
xor
jno
aam
fcmovu
inc
mov
mov
xor
push
adc
mov
xor
jnp
lds
push
pop
sbb
and
aad
jns
adc
fbstp
pop
roll
xor
xor
imul
push
mov
cmc
inc
std
jo
imul
xor
dec
cmc
test
imul
movsl
mov
cmc
adc
iret
shrb
fsubl
jnp
xchg
push
dec
lods
cld
mov
mov
adc
in
pop
subb
jnp
jp
jle
inc
in
ret
adc
imul
dec
xorb
sahf
mov
jae
xlat
clc
cmpsl
je
test
sbb
jne
push
mov
jb
sub
adc
jmp
mov
addr16
ret
and
out
cltd
lea
jne
xor
pop
cmpsw
aam
fcmovbe
lret
movsb
testb
sbb
xchg
jno
decb
imul
jno
fs
je
aam
xchg
lds
mov
push
cmc
xor
and
mov
cmp
push
mov
out
inc
add
fld
mov
push
clc
fdivr
aaa
int3
cmp
pop
jae
sbb
push
lret
adc
mov
mov
orl
arpl
push
leave
icebp
loopne
push
das
in
mull
movsb
pop
sub
out
jns
sub
xor
push
add
push
cmp
inc
in
sub
xchg
addb
mov
sbb
scas
addl
out
repz
lods
pop
xchg
or
sbb
ljmp
popf
insb
call
fidivrs
jno
or
pop
es
addl
adcb
aas
xchg
add
cmp
adc
and
mov
movsl
push
cmp
fcomps
repz
rol
xor
addr16
xchg
mov
stos
stos
xchg
push
sbb
mov
popa
add
xlat
add
es
rclb
inc
dec
test
dec
hlt
jo
cmpsl
ret
lcall
out
outsb
adc
inc
adc
rorl
neg
jle
lock
les
push
ljmp
rcrb
push
int3
xchg
or
fisttpl
mov
scas
cmp
xchg
popf
dec
mov
das
icebp
adc
lret
push
jns
mov
mov
cmp
add
arpl
xchg
daa
cmpsb
xor
mov
aas
fs
out
pop
cmp
jmp
cli
inc
pop
push
xor
or
sbb
out
push
repz
sub
xor
jmp
pop
js
lcall
fisttpll
jo
lret
mov
cmp
iret
inc
jno
jne
inc
and
fwait
add
fdivl
cltd
hlt
rorb
pusha
xchg
out
rcrb
add
sbb
fidivl
shlb
pop
in
test
xchg
sub
xor
push
add
lahf
sub
fisttpl
xor
std
cmp
lret
and
inc
sub
stos
adc
clc
faddl
mov
pop
andl
bnd
cmp
out
pop
mov
cmp
fdivs
repz
dec
xor
cltd
js
push
and
fisubrs
jmp
ljmp
jnp
push
jmp
int3
mov
sahf
les
addr16
imul
enter
cmp
jl
pop
je
mov
push
in
cmp
nop
jno
xor
dec
mov
iretw
mov
push
inc
lret
push
jmp
mov
sub
push
push
and
mov
shll
test
sub
jg
xlat
gs
mov
add
subl
mov
cmp
and
pop
jb
mov
sbb
aas
xchg
dec
dec
add
cmp
ret
push
and
cmp
mov
dec
adc
sbb
imul
jo
loope
or
push
out
cs
js
inc
and
jbe
lock
add
sahf
lcall
stc
rcrl
aaa
lahf
rcrl
ror
aaa
add
jecxz
stc
sub
jecxz
in
inc
dec
outsb
dec
jae
xchg
push
imul
mov
outsb
jae
and
mov
lret
cmc
je
xchg
gs
pop
ficoms
sub
mov
pop
test
jp
cmp
add
cmpsl
fdivrs
cs
and
aas
lret
shlb
adcb
pusha
test
icebp
popa
xchg
inc
push
lret
aaa
pusha
ljmp
loope
addr16
movb
or
lret
insb
sbb
daa
sub
mov
push
and
int
xchg
cmpsl
inc
les
lods
sbb
fisubl
mov
mov
pusha
mov
cld
mov
clc
imul
imul
mov
mov
shlb
mov
xor
jp
cmp
mov
jge
mov
jl
cmpsl
sbb
shrb
popa
outsl
icebp
sbb
jge
xor
pop
cmp
add
push
int3
pop
xchg
lds
xor
and
in
int3
lods
mov
out
lock
es
mov
out
add
call
and
mov
fistpl
push
imul
ret
outsb
lret
pop
pushf
movsb
inc
les
cwtl
cmc
add
enter
mov
loope
jle
mov
sbb
xor
rorl
imul
bound
shrb
fidivl
test
fs
clc
push
xlat
std
mov
leave
xchg
aaa
add
lods
jnp
adc
dec
xor
nop
pusha
ficoms
and
sbb
xor
pusha
jno
cli
dec
and
lahf
gs
dec
dec
xchg
push
out
leave
jg
push
subl
bound
movsb
xor
inc
ljmp
ror
dec
jg
mov
shll
inc
inc
push
ret
and
pusha
ljmp
pop
push
popl
dec
pop
aaa
push
xor
test
fwait
sti
roll
xlat
jecxz
sbb
adc
roll
sbb
notl
movsb
in
sarb
rcrb
pop
fadds
push
nop
sub
call
mov
test
fdivrs
test
and
movsl
inc
and
xor
mov
dec
mov
push
sub
sbb
mov
mov
out
mov
pop
adc
inc
push
mov
mov
gs
xlat
xor
lods
inc
popf
cmpsl
add
ror
js
fwait
setle
jg
jg
in
enter
inc
mov
pop
scas
hlt
jle
or
xor
arpl
js
stos
lea
sbb
test
push
subb
stos
loop
arpl
xor
xchg
test
mov
shrl
mov
mov
test
or
xchg
sbb
and
test
popa
push
out
push
dec
xor
cmp
test
enter
popf
xchg
and
pop
nop
dec
cltd
inc
aaa
pushf
sbbl
testb
cmpsb
insb
cmp
stos
add
xor
int3
sub
decl
popa
aas
adc
cmp
imul
cmp
or
pop
xchg
and
imul
ljmp
add
data16
dec
pop
add
repz
lds
and
dec
jl
inc
jnp
inc
or
aam
mov
ljmp
aaa
mov
jecxz
add
mov
lock
daa
fisttpl
mov
mov
adc
nop
mov
inc
lock
inc
out
repnz
ret
adc
pop
sbb
and
mov
lods
aaa
int3
jnp
adc
fldenv
jne,pn
mov
mov
pop
sub
lods
inc
and
rcrl
clc
mov
sub
fs
das
mov
cwtl
pop
in
inc
les
push
loopne
add
std
pop
inc
xchg
mov
push
cmp
lods
jne
bound
xchg
into
pushf
dec
mov
mov
in
jmp
rorb
pop
xchg
orb
stos
pusha
js
mov
mov
sbb
sbb
inc
mov
rcr
inc
mov
lret
push
pop
pop
std
ds
push
cwtl
icebp
xchg
mov
jae
sub
mov
xlat
rorb
push
inc
inc
sub
test
scas
fwait
jmp
xor
faddl
and
iret
shr
add
nop
lret
aam
push
addr16
push
cmp
mov
sbb
sub
dec
outsl
xchg
test
jbe
out
mov
ljmp
push
cli
sub
and
shll
test
jns
mov
and
test
push
pop
hlt
pop
cmp
xlat
jnp
sub
add
push
dec
scas
sub
pop
xchg
shl
xchg
mov
jae
cmpsl
jg
xor
ljmp
pushf
test
sbb
in
aad
dec
xor
aad
sub
scas
add
mov
cmp
incb
push
cmp
xor
push
push
jns
js
mov
mov
inc
addr16
inc
mov
xor
js
jge
add
rcrb
mov
mov
mov
sbb
mov
shlb
mov
es
jbe
and
jbe
movb
mov
xor
lcall
scas
add
push
mov
jp
inc
jmp
push
loop
pushf
je
xchg
lcall
xor
jmp
int3
cmpsl
mov
mov
scas
scas
mov
cmc
in
and
fmuls
jae
xchg
addr16
loop
mov
daa
add
out
loope
xchg
xchg
mov
icebp
push
inc
orb
andl
xlat
lcall
inc
addl
lahf
pusha
mov
lock
inc
test
pop
fildl
adc
movzbl
sub
adc
push
jmp
imul
std
rcrl
call
imul
cwtl
cmpsb
repnz
je
popa
int3
imul
mov
add
xor
out
fnop
or
dec
push
lods
fdivs
pop
sahf
popf
loop
aas
shll
js
xor
cs
nop
add
mov
mov
push
xor
pop
mov
push
and
icebp
xchg
xchg
jns
addr16
add
ja
xchg
mov
cld
test
xchg
loopne
icebp
out
inc
ds
jg
dec
enter
hlt
adc
inc
mov
gs
fcomps
sub
aad
fs
ret
hlt
mov
insl
test
mov
out
repnz
out
icebp
jno
xor
dec
gs
or
jge
add
push
cmp
mov
lret
repz
rorb
inc
hlt
pop
sub
lds
mov
adc
sbb
jb
call
movsb
ss
jns
dec
in
push
jno
loop
dec
cmpsb
enter
xchg
push
mov
and
into
pushf
repz
in
inc
adc
adc
dec
push
test
sahf
xchg
aam
cwtl
dec
mov
mov
clc
vmovntps
mov
xchg
mov
test
jmp
add
pop
ljmp
xorb
ror
jmp
pop
xorl
xlat
outsb
mov
icebp
jg
mov
mov
jl
jge
cmpb
xchg
mov
cmp
sbb
mov
jbe
pop
sub
sbb
mov
mov
imul
cmpsl
mov
adc
push
sub
insb
cmc
cld
mov
mov
inc
sub
jne
out
in
xor
in
mov
pop
in
add
xor
add
lock
inc
rcrl
ljmp
leave
sbb
jge
js
lods
jmp
jnp
mov
xor
and
cmp
and
ds
dec
jle
mov
roll
insl
and
add
ret
xchg
dec
mov
popf
mov
inc
gs
sub
lret
mov
jge
pushl
out
adc
push
jg
sub
xor
neg
ss
mov
cmp
xor
cmp
jnp
lods
outsb
sbb
push
stos
negl
scas
xchg
movsb
pop
les
shlb
mov
mov
gs
cld
sbb
lret
movsb
ret
push
mov
lahf
push
jmp
lahf
lret
fisubl
xchg
pop
xor
jl
jb
mov
idivb
sbb
repz
fs
dec
sti
addr16
mov
cmp
sub
sbb
mov
lret
dec
pop
arpl
fldl
in
lret
aaa
data16
fstps
dec
mov
test
push
std
xchg
fistpl
jne
cmp
int
dec
pusha
dec
negl
loopne
sub
stos
cwtl
outsl
mov
mov
xor
adc
mov
js
inc
jl
jb
xchg
notl
int
roll
jle
ljmp
pop
shrl
sbb
sbb
mov
adcb
loopne
decb
jo
jg
rcr
clc
in
pop
fidivrl
dec
or
jno
lret
dec
cmp
pop
stos
mov
pop
daa
rcrb
inc
jl
cmpsb
cmp
data16
lea
mov
add
fsubrl
rcrl
fwait
ds
push
cmp
and
clc
push
idiv
xchg
jecxz
out
jmp
cmp
mov
push
negb
mov
pop
mov
pusha
mov
movsb
ja
dec
and
xchg
jno
iret
out
jnp
ret
in
mov
jns
movsb
xor
mov
pop
pop
mov
mov
fimull
pop
push
outsl
sar
xchg
insl
pop
gs
aad
mov
xchg
adc
popa
jo
mov
js
nop
cmp
rol
jl
xlat
pusha
jge
mov
and
adc
in
cmp
mov
shll
cld
and
repnz
and
or
scas
xchg
jecxz
out
sub
mov
mov
pop
icebp
js
gs
fidivl
ss
cmpsb
scas
fwait
repz
arpl
das
mov
mov
es
jl
inc
push
sub
xchg
push
push
nop
cltd
aad
jp
adc
jns
mov
repz
and
aas
cmp
ja
xor
jb
hlt
push
dec
sarb
mov
das
daa
mov
cmp
mov
mov
int3
xchg
mov
xchg
and
dec
das
daa
jmp
aad
pop
push
xchg
shlb
sub
js
mov
push
incb
imul
dec
sbb
lret
cmp
out
roll
fsts
sti
imul
push
ljmp
xchg
fldenv
sub
cmp
mov
test
iret
stos
mov
bound
pop
fwait
aam
push
jge
jo
push
dec
mov
mov
test
scas
lret
cmpsl
or
mov
mov
repnz
jno
outsb
mov
mov
aam
lds
imul
aas
jecxz
inc
sub
pop
sbb
mov
es
into
stc
cltd
ret
int
xor
add
pop
ret
jmp
cmp
mov
gs
pop
pop
xlat
inc
in
fists
fs
pusha
int
out
sbb
pop
dec
add
adc
int3
push
test
xchg
sbb
fstps
push
sbb
cmp
in
pop
dec
mov
push
repz
mov
clc
pushf
adc
dec
adc
or
push
adc
outsb
pushf
cltd
adc
and
xchg
push
push
ljmp
pop
mov
lcall
movsl
mov
out
jmp
mov
mov
fnstsw
and
int
mov
sbb
out
je
mov
and
add
enter
lods
repz
pushl
out
push
sbb
pop
jl
lahf
pop
fidivl
aad
cli
xlat
ret
add
or
daa
stos
testl
sbb
inc
cltd
imul
xor
cmp
xchg
or
mov
and
xchg
nop
and
mov
scas
fdivrl
pop
dec
pop
fsubr
jae
into
xor
cmp
sbb
sub
fwait
mov
push
mov
push
pop
adc
inc
jb
cli
xchg
add
ss
fdivl
mov
push
jge
jb
dec
sbb
test
jne
push
mov
mov
mov
mov
faddl
rcl
fbstp
negb
pop
sbb
sbb
clc
gs
adcl
aaa
xor
icebp
dec
and
int
mov
clc
and
push
or
mov
xchg
lods
lock
pop
mov
jp
movsl
jmp
mov
daa
push
subl
dec
pop
mov
test
xor
cmpsb
outsb
jge
xor
mov
repz
xchg
adc
cld
movsl
xchg
pop
rcrl
and
xor
adc
jno
cmpsb
mov
fistpll
pop
enter
adc
outsl
test
out
xor
dec
jb
mov
sti
inc
inc
add
cwtl
and
movsl
jle
mov
arpl
imul
and
xchg
int3
add
aad
jecxz
pop
addr16
pushf
sub
pop
mov
adc
stos
shrl
movsb
dec
loop
cmp
cmp
push
cs
popf
lock
dec
mov
cli
in
adc
stos
mov
inc
sbb
cwtl
in
xor
push
mov
mov
mov
out
and
add
inc
dec
dec
xchg
scas
out
sub
jb
int
adc
inc
adc
xlat
cmpsb
incl
cmp
inc
push
imul
mov
and
adc
rclb
popf
or
rolb
jmp
sub
rol
adc
int
cmc
data16
mov
sahf
int
lea
inc
cwtl
movsb
push
mov
fimull
shr
jae
dec
dec
jg
adc
lods
stos
or
dec
pop
inc
inc
fisubrs
mov
ss
movsb
adc
lret
clc
push
shl
jns
push
test
divl
and
mov
scas
fsts
pop
arpl
xchg
push
lods
mov
and
daa
mov
pop
ss
jb
cmpsb
dec
shrb
div
fwait
xchg
cmp
movsb
cmc
ljmp
inc
popa
scas
xor
frstor
or
jmp
push
aas
fiadds
ja
dec
inc
ss
pop
out
mov
mov
mov
iret
shll
sbb
das
mov
repz
add
jnp
sub
leave
out
stc
es
fsub
jmp
mov
fidivl
call
in
cmpsl
movb
lahf
ss
mov
adc
aad
sub
lret
dec
pop
mov
xor
in
sub
mov
jl
or
sbb
xor
add
fstpt
nop
push
pop
clc
jp
lock
jp
leave
imul
xchg
lods
cli
in
and
mulb
in
push
test
ror
cli
pop
xor
add
mov
xlat
mov
jns
xor
idivb
or
out
jne
push
in
imul
mov
ds
rolb
adc
pop
loope
hlt
test
and
xor
or
mov
nop
js
ffree
add
outsb
loopne
and
push
imul
out
adc
dec
mov
stc
loope
outsb
sub
aad
jp
mov
inc
mov
mov
insb
mov
lea
stos
outsl
mov
mov
subl
push
jecxz
mov
xor
mov
mov
lahf
jge
in
mov
cmp
enter
cmpsl
popf
nop
xchg
lds
les
xor
jno
add
cli
out
dec
cmpsb
pop
dec
filds
push
aam
filds
cld
push
sahf
out
das
pop
sbb
dec
cs
shrb
lea
pop
pusha
outsb
jmp
adc
cltd
cmpsl
pop
xlat
cli
xor
jl
cmp
cmpsb
ret
movsb
xchg
cmpsl
sbb
jae
inc
push
iret
pop
in
lock
out
aas
dec
cmp
add
or
sbb
or
scas
push
mov
add
mov
fisubrl
js
sub
ret
xchg
loope
gs
mov
cltd
lahf
or
test
mov
cmp
shll
fs
fsubl
dec
sub
clc
push
mov
xor
jo
ret
sub
sbb
inc
jbe
popf
scas
cmp
std
sete
jg
pop
push
fstps
push
cltd
mov
add
xchg
vcvttss2si
es
push
int
xchg
divl
jbe
clc
arpl
scas
sbb
dec
lret
in
sbb
pop
arpl
insb
inc
add
dec
dec
or
adc
jl
cmp
cmc
xor
lret
fstpl
pop
adc
loope
sub
aam
push
inc
mov
fs
ja
xchg
addb
cmp
fisubl
jp
sbb
insb
rolb
fadds
sahf
int
jno
gs
pop
xlat
xor
gs
jne
cmpsl
les
out
push
dec
sub
sbb
lahf
pop
stc
sub
mov
and
push
sub
jg
stc
mov
lock
cmp
fwait
dec
xchg
jmp
push
int3
in
insb
cmpsl
std
ret
sub
call
cld
or
sarl
jae
jmp
add
cld
or
loopne
mov
mov
and
jns
and
insb
jg
std
adc
cmc
repz
pop
mov
cmp
popa
ljmp
sbb
dec
leave
popf
mov
stc
add
pop
or
dec
and
daa
leave
cld
sub
or
push
gs
fisubrs
mov
in
in
sub
sub
ret
mov
push
sti
adc
dec
cmpsl
enter
mov
sbb
adc
mov
xchg
ljmp
cmpsl
inc
nop
or
mov
stos
cmp
cmpsl
dec
mov
imul
push
fdivrl
aas
gs
push
cmpsl
cltd
gs
xlat
or
sbb
mov
dec
mov
call
lcall
les
andl
insb
aam
cmp
movsl
ret
push
fwait
popf
mov
jp
popa
leave
mov
fwait
movsl
out
add
sbb
mov
jns
test
dec
stos
push
sahf
add
mov
lahf
repz
in
mov
insb
ret
mov
or
or
jb
adc
jp
test
insl
ret
push
xchg
movb
outsl
mov
xchg
pop
sub
cmp
call
mov
gs
dec
ljmp
sbb
inc
neg
pushf
enter
ror
sbb
pop
les
pop
sub
jne
int3
jo
add
subps
sahf
stos
stos
mov
repz
jmp
clc
inc
jb
js
mov
mov
jno
sbb
out
mov
add
rorb
cmp
test
sbb
cmpsl
iret
in
push
sub
cld
mov
movsb
je
inc
mov
xchg
les
jmp
data16
adc
mov
sti
fucomi
mov
or
ret
xor
adc
aam
repz
pop
add
icebp
add
mov
je
adc
xor
subb
movsl
loope
outsb
mov
or
stc
pop
test
sbb
bound
fdivrs
ffree
jle
push
push
inc
in
lds
imul
pop
adc
es
add
test
cs
dec
scas
lods
pop
leave
xchg
aas
loopne
pop
fists
loope
push
pop
sbb
loope
push
into
add
fucomip
sub
pop
call
or
stos
fimuls
cmp
inc
lods
movl
and
cmp
cmp
das
fsubs
inc
or
dec
push
subl
dec
pop
fsubr
mov
scas
scas
cltd
das
lds
adc
xor
fldcw
pusha
insl
lods
iret
adc
pop
sub
jecxz
pushf
testb
js
jb
int
dec
leave
pushf
adcb
mov
popf
imul
sbbb
or
push
xchg
push
sub
dec
ret
pop
adc
mov
dec
out
pop
fcomps
sbb
jnp
pop
mov
jno
cmp
cmp
pop
xchg
cs
cmpsb
int3
jns
in
mov
js
movsl
mov
je
push
pop
sub
cld
rcrl
xchg
sub
cmp
adc
cmc
fwait
je
icebp
nop
mov
jo
subb
sub
pop
xchg
dec
rclb
out
mov
or
adc
xchg
imul
test
mov
addl
cmp
mov
fidivrs
add
adc
arpl
movsb
push
mov
aas
pop
outsl
ror
mov
xchg
or
inc
cmp
test
inc
mov
jb
mov
pop
in
xchg
in
jne
outsb
mov
out
fwait
into
pusha
ret
adc
in
in
aad
mov
cld
xchg
outsb
xchg
jecxz
div
loopne
insb
insb
fdivrl
ficomps
xor
sub
test
inc
and
pop
and
in
push
jbe
sbb
add
fdivrl
mov
outsb
xor
adc
in
mov
mov
add
shl
adc
loope
inc
inc
add
out
loopne
add
add
or
mov
shrl
andb
jns
sub
xor
mov
lahf
movsb
std
and
mov
movb
xchg
gs
sbb
and
push
arpl
je
insb
rclb
xchg
sub
dec
sbbl
inc
in
jle
imul
scas
pusha
add
jb
outsl
loopne
inc
adc
xlat
cmpsl
xor
test
inc
out
iret
push
mov
jp
sub
xor
or
push
push
outsl
es
add
cs
xchg
jae
dec
push
gs
insb
or
push
fcom
icebp
xchg
mov
mov
aam
dec
push
xor
jbe
sahf
test
mov
je
rorl
push
sbb
pop
and
cmc
or
andb
scas
mov
jae
cmpsl
lret
push
pop
pusha
andb
ficompl
sbb
mov
ja
inc
mov
je
pop
ja
inc
fcmovnu
in
and
das
xchg
movsb
inc
ret
fwait
cmc
jne
shlb
add
es
pop
lock
pop
rorl
ljmp
xor
mov
pop
push
sub
loope
test
jne
outsb
adc
inc
dec
call
test
mov
xchg
mov
stc
inc
cli
pop
stos
pop
enter
jo
or
insl
cld
inc
insl
nop
repz
ret
pusha
adc
in
cmc
in
pop
adcb
int
test
pop
insb
sbb
shlb
or
pusha
mov
dec
mov
scas
jns
loop
push
int
push
xor
mov
xor
pop
int3
push
std
cmp
push
outsl
mov
shl
jne
sbb
adcb
jb
or
bound
movsb
lods
add
inc
icebp
or
aaa
push
add
gs
fmulp
and
or
mov
or
icebp
cltd
fisttpll
push
xor
add
loopne
dec
sub
cmpsb
mov
pop
scas
jg
clc
filds
jo
push
fistl
sbb
sub
call
in
sbb
mov
mov
and
push
sub
lods
outsl
in
push
sbb
cli
cmp
hlt
test
lahf
jg
stc
jg
popa
xor
sub
and
call
imul
andb
aam
cmp
xor
out
aad
push
cmp
adc
mov
out
movsb
adc
mov
fadd
fcomi
push
mov
inc
dec
fcom
sub
xchg
or
adc
lahf
xchg
jl
repz
jg
mov
adcb
imul
sbb
scas
jmp
movsb
stos
lods
outsl
enter
daa
pop
jbe
mov
adc
sbb
pop
mov
inc
pop
dec
cs
inc
test
jge
ljmp
mov
mov
pop
in
out
push
adc
cmp
test
call
ds
idiv
push
in
lcall
dec
aad
xor
add
cmpsb
add
mov
add
and
cmp
cltd
test
popf
mov
push
add
mov
jg
cmc
int3
inc
lar
pop
jb
xchg
inc
mov
test
cmp
xchg
aad
rcll
cwtd
adc
mov
pop
popa
jo
in
pusha
xlat
sbb
cld
rorb
sbb
pushf
jl
addl
xchg
mov
scas
lcall
cmpsb
mov
sbb
fsubs
out
cmpsb
movsl
add
add
add
mov
push
testb
test
subb
test
int
fiadds
mov
test
adc
xchg
sub
aad
loop
mov
jnp
sarb
clc
mov
sbb
push
in
das
mov
gs
jmp
adc
movsl
shrb
and
pop
bound
repz
insb
sub
repnz
lret
shlb
pusha
adc
adc
in
sub
test
xor
pop
mov
or
sub
cmp
add
call
sub
js
ret
mov
sub
cmc
sarl
inc
out
scas
loopne
pop
aaa
and
mov
rclb
ljmp
and
call
inc
mov
fs
repnz
mov
dec
daa
bnd
adc
cwtl
outsl
nop
push
lret
fs
in
arpl
aas
in
dec
and
ss
fistpll
cmp
jnp
mov
int3
scas
mov
adc
test
add
or
dec
sbb
xchg
test
enter
dec
or
jle
mov
sahf
cli
add
pop
sbb
lcall
jmp
mov
aad
and
rcl
adc
mov
hlt
mov
pop
mov
pop
fnstcw
mov
popf
add
dec
fdiv
scas
add
scas
mov
fmuls
adc
or
push
fiaddl
dec
mov
leave
xor
fstpl
jb
sub
jb
movsb
std
jae
and
sbb
mov
mov
stos
fistpl
sbb
subl
mov
inc
adc
loope
mov
jno
jne
fnsave
push
and
ror
clc
cmpsb
push
popa
dec
shl
jb
mov
inc
movntps
aad
jle
cld
cmc
sbb
mov
enter
push
clc
pop
test
iret
inc
cmpsb
inc
scas
cmc
addr16
cltd
mov
xchg
loop
xchg
sbb
fnsave
cli
dec
sarl
lcall
pop
sub
cmp
adc
or
testb
out
data16
add
cmp
loope
pop
jmp
cmp
ja
in
sahf
loop
inc
xchg
and
mov
sbb
mov
xor
sub
or
xchg
arpl
cmpsl
call
icebp
rcrb
je
andb
adc
inc
push
rcr
push
ficoml
jnp
cltd
pop
out
jp
inc
cmp
adc
mov
aad
lock
and
mov
cmp
sub
pop
pop
pop
adc
insl
xor
pop
or
jb
adc
movsl
jmp
mov
xchg
jg
cmpsl
inc
rcll
xchg
or
or
test
unpcklps
in
cmp
pop
add
cmp
ret
rcl
jl
std
insb
add
out
inc
mov
mov
dec
lds
rcll
xor
and
xchg
pusha
cmpl
cmpsl
pop
rcl
pop
inc
aaa
mov
adc
mov
jns
pushl
ss
sub
jl
cltd
sbb
mov
cmpsl
mov
scas
cmp
or
aad
addr16
or
in
jae
das
decb
ror
jno
rcrl
ljmp
cmp
xor
rcr
mov
add
scas
or
ficomps
sbb
pop
cmpsl
jg
insb
ja
adc
dec
dec
aaa
cmpsb
cmc
push
repnz
push
fisttpl
sub
mov
ljmp
callw
movsl
movsb
loopne
popa
mov
popa
rolb
xchg
push
ret
dec
inc
xor
sarl
cwtl
sub
dec
loop
imul
das
mov
pop
out
push
jle
pop
cmp
aad
iret
ret
sbb
mov
ss
xor
jnp
mov
push
je
inc
ja
dec
in
jnp
mov
icebp
and
xor
subl
or
sbb
mov
inc
xor
cmp
pop
loope
cmc
push
add
pop
xchg
sbb
in
mov
nop
and
fldt
xchg
xchg
jmp
sarb
jnp
shr
fwait
xor
jae
mov
sbb
sahf
and
xsaveopt
stc
cmc
inc
add
lds
sbb
mov
mov
or
scas
dec
lahf
aam
jns
add
xlat
jp
mov
in
mov
jge
mov
or
in
enter
xor
sbb
popa
jnp
add
or
mov
push
jbe
sahf
mov
push
jae
cmp
sbb
call
pop
out
or
test
stos
pop
scas
dec
cmp
stc
mov
sbb
push
xor
inc
xor
xor
repnz
sub
lahf
dec
out
repz
sbb
popa
test
mov
rorl
pop
adc
mov
sahf
imul
push
out
sub
in
jbe
int
aad
imul
jnp
dec
insb
sbb
adc
je
popf
push
xchg
or
pushf
dec
cld
cmpsb
sahf
cld
cmp
stos
fbld
leave
ret
adcl
pop
adc
lods
gs
or
pushf
fstl
adc
ja
mov
mov
adc
dec
movsl
int3
ficoms
ret
jnp
pop
push
xchg
mov
add
cld
pop
sub
mov
ret
stos
add
std
imulb
cmp
scas
pop
cmpsb
add
jnp
lret
lock
ficoml
push
test
or
jecxz
fidivl
insb
jnp
xor
pop
xlat
adc
lahf
lds
arpl
push
ret
push
xor
inc
and
inc
xchg
xor
jg
popf
xor
pop
mov
or
out
push
gs
xor
mov
sub
dec
jbe
sbb
jl
mov
mov
or
jbe
jb
shll
inc
movsb
ljmp
in
adc
lds
mov
dec
jb
stos
jg
daa
ja
subb
sbb
jb
pop
imul
scas
cmp
add
mov
inc
test
lds
test
shrb
fistpll
xchg
test
push
js
lods
popf
or
repz
xchg
or
add
xchg
dec
popf
xchg
cld
inc
jo
call
adc
cli
mov
push
cld
pop
pop
mov
sub
pop
data16
adc
in
scas
int
cltd
pushf
insl
fisubrl
xchg
or
mov
shll
xchg
or
std
out
psubd
sbb
inc
fwait
test
mov
xchg
jnp
loop
mov
cmp
xchg
test
xchg
out
in
out
aad
pop
dec
jecxz
ja
in
shll
into
mov
mov
cmp
jecxz
inc
insl
cmp
lcall
cwtl
ljmp
push
inc
je
sub
push
mov
xor
push
cmp
fsubr
in
lods
daa
aam
ja
push
popa
push
dec
adc
mov
xor
insb
mov
call
inc
push
add
call
test
in
add
mov
or
pop
cwtl
add
mov
xor
xor
js
test
loope
adcl
aas
pusha
mov
jbe
cld
stos
and
pop
fldl2t
push
push
mov
or
jmp
imul
adc
jle
mov
xchg
sub
sub
out
movsl
lock
pop
loop
imul
gs
shll
xchg
shll
pop
add
fisttps
ljmp
negb
ja
sbb
sub
std
arpl
cld
xor
out
xchg
adcl
cltd
mov
cmp
imul
repz
sub
push
xchg
andb
jmp
fsubs
pop
push
in
mov
cmpsl
loope
mov
push
xchg
xchg
stos
mov
addr16
out
push
fcoms
rcrl
jno
push
aas
inc
jnp
pusha
rolb
es
iret
cmp
and
rcl
mov
push
cmp
call
dec
insl
mov
xchg
in
aaa
rcll
repnz
sub
mov
mov
subb
xor
push
out
sub
repnz
cli
mov
mov
cmp
flds
push
clc
out
fs
rol
in
dec
mov
ret
loop
insb
sbb
dec
sub
mov
aaa
xlat
outsl
dec
and
add
or
sbb
ffreep
lock
out
clc
ja
mov
dec
sahf
mov
mov
into
xor
repz
adc
sub
inc
jne
mov
xchg
push
add
aad
js
nop
mov
sbb
pop
andl
pusha
loopne
mov
cmp
xor
nop
ret
sbb
pop
jbe
popa
pop
adc
jnp
cmp
mov
mov
dec
les
pop
out
or
lods
insl
push
xchg
loop
inc
insl
loopw
sub
mov
fiadds
ja
bound
mov
pushf
cmpsl
pop
lahf
push
xchg
mov
adc
push
sysret
hlt
or
or
xor
pop
jge
mov
xchg
mov
out
and
jno
sbb
add
ret
xlat
jp
sbb
std
push
push
lahf
scas
iret
cmp
jecxz
icebp
mov
xchg
fyl2x
cmp
popa
int3
adc
outsb
cmpsb
outsl
lock
stos
test
sub
dec
mov
inc
push
cmpsb
xor
pop
push
xor
fistpll
dec
pop
pop
out
adc
ljmp
inc
daa
sub
add
lds
adc
inc
mov
out
mov
mov
and
shlb
dec
xchg
aas
push
pop
pop
mov
jo
inc
cmpsl
pusha
aaa
dec
nop
scas
stc
xlat
mov
into
mov
sub
outsb
test
pop
stos
fsubp
lret
xchg
popa
cwtl
icebp
std
mov
idivl
das
pushf
xchg
test
jecxz
sbb
imul
sub
pop
xor
test
mov
fldenv
lahf
test
jp
push
adc
ret
test
hlt
arpl
insb
out
daa
mov
xchg
lds
icebp
aas
jb
cli
pop
mov
sbbb
sti
jp
xchg
sub
iret
int3
iret
mov
dec
rclb
jno
add
push
or
iret
cmpsb
stos
lret
pop
sub
push
jp
xchg
enter
cmc
pop
mov
adc
adc
adc
test
xlat
inc
nop
lock
mov
mov
lret
fst
and
mov
movsb
rcrl
mov
pop
push
fnstcw
cmp
push
nop
push
lods
mov
sti
pop
pop
addr16
cmp
jg
mov
mov
aam
int3
sbb
xor
out
imul
pop
or
inc
movsl
into
push
push
repz
jp
loop
lcall
out
adcl
inc
imul
cmp
ja
jge
add
cli
testb
lock
mov
into
inc
xchg
ljmp
subl
jno
stos
adc
pop
mov
push
or
sub
dec
xchg
loop
popa
pusha
iret
mov
mov
in
pop
ljmp
inc
or
push
lds
lret
cmp
adc
sarl
sti
les
mov
cltd
daa
andb
jge
outsb
iret
into
stos
rep
fmulp
ljmp
aaa
out
rcl
lret
or
cmp
pop
mov
cwtl
mov
lock
out
addr16
mov
push
push
cmp
fistpll
gs
mov
cmp
push
jo
push
sub
inc
cmp
enter
inc
aad
cmc
test
leave
mov
inc
xchg
and
xor
xchg
fsubs
stos
je
xor
xchg
fs
outsl
add
dec
test
loopne
xchg
add
mov
ret
gs
mov
and
aam
lea
mov
out
add
stos
scas
pop
fs
ljmp
popf
jge
out
xchg
stos
cmc
jge
addr16
gs
loopne
lret
or
mov
mov
xor
aas
lahf
adc
stos
xchg
push
mov
test
stc
jmp
mov
mov
inc
out
xchg
push
mulb
xchg
scas
push
pop
lcall
xchg
sub
mov
pop
movsb
notl
imul
inc
and
xchg
adc
test
dec
sarb
mov
and
add
fwait
mov
add
lret
xorb
pop
or
or
mov
adc
add
loop
sub
out
inc
lods
or
not
cs
jae
lret
jp
cmp
cmp
sbbb
aas
mov
fsqrt
js
pusha
add
mov
inc
mov
cwtl
rcrb
jg,pn
adc
push
jnp
jl
adc
cmp
adc
xchg
std
dec
dec
clc
mov
inc
jmp
sbb
mov
sub
int3
push
rorl
out
inc
cli
push
add
jge
sahf
xorb
dec
fnstenv
fwait
inc
jle
cmp
jns
int
cwtl
cmp
mov
lds
jno
stos
insl
test
jae
ret
or
cmpsl
mov
loope
insl
sarl
mov
bswap
xchg
sub
jecxz
adc
adc
cltd
push
inc
int3
push
fwait
test
les
das
pop
sbb
cs
fldln2
pop
fildll
adc
ss
add
xchg
movb
jne
mov
pusha
das
xchg
dec
or
imul
cmp
mov
adc
ljmp
inc
sub
loopne
push
mul
jnp
push
push
push
xchg
ret
adc
scas
add
mov
popf
sub
push
stc
scas
les
dec
lds
enter
pop
sbb
inc
pop
xchg
lea
frstor
add
das
sbb
fistpll
pop
mov
jbe
cmpsl
sbb
test
aad
sbb
push
les
sub
jbe
mov
sbb
lods
std
push
das
xor
pop
scas
das
dec
cmp
clc
jbe
xchg
adc
mov
and
cmc
lods
pusha
fistl
sbb
ljmp
adc
out
lods
sbb
hlt
mov
push
pop
sbb
sub
add
push
pushf
mov
lret
adc
push
and
xchg
jne
in
dec
or
inc
pushf
add
bound
insl
repnz
dec
mov
mov
add
daa
ret
push
mov
sbb
xchg
lods
cmp
pop
adc
fiaddl
stos
add
jne
iret
bswap
mov
shrl
mov
sub
rcll
and
andb
jne
push
xchg
inc
push
out
cmp
mov
mov
incl
and
pusha
push
xor
stos
xchg
push
inc
sar
vmwrite
push
bound
and
xchg
jo
ds
adc
xor
mov
jno
sbb
sbb
sub
lahf
pusha
push
jl
mov
leave
add
xchg
xor
pop
clc
xlat
adc
jmp
xor
push
hlt
mov
xor
xchg
loop
jb
scas
roll
adc
push
xchg
sub
pop
jae
call
hlt
lods
das
mov
movsl
push
incb
mov
xchg
or
sub
push
pop
jnp
loopne
fstpl
mov
inc
lret
xchg
int3
loop
fstpl
inc
mov
mov
inc
xchg
and
inc
inc
jle
repnz
jnp
push
cmpsb
cmpsb
mov
test
jp
lds
push
std
andl
cs
jmp
mov
dec
insb
sub
data16
pop
shll
and
xor
mov
xchg
hlt
notl
adc
pop
or
push
sub
out
dec
xchg
inc
mov
sbb
and
mov
dec
js
pop
sbb
xchg
pushf
fidivs
inc
push
cmpsb
test
sbb
fcomps
adc
pop
scas
cmc
sbb
subl
push
xor
mov
xor
inc
in
fdivr
dec
stos
cmpsl
lahf
mov
jmp
cwtl
add
stc
es
push
cwtl
pop
xlat
xor
negl
cld
cmc
push
xchg
dec
xchg
mov
sbb
lcall
push
xor
divl
das
pop
sbb
inc
and
sub
stc
fs
jae
call
xor
cmp
scas
cmp
xchg
ret
cmp
aad
mov
and
add
js
ljmp
push
imul
mov
cmc
mov
add
lcall
push
rcr
outsb
or
xchg
repnz
push
push
popf
dec
je
sub
mov
xor
lock
add
mov
jae
inc
out
dec
cmp
jns
inc
adcl
push
hlt
mov
lahf
mov
out
inc
jmp
jno
nop
in
fisttpll
in
adc
ds
aad
jg
mov
or
cs
out
mov
inc
fadds
adc
jle
cmp
sbb
sbb
cmp
dec
gs
mov
insb
hlt
arpl
inc
push
xchg
mov
popa
mov
out
mov
mov
popf
ss
out
xchg
and
mov
jl
pop
rcpps
mov
jns
adc
test
icebp
fstl
jge
aas
or
sbb
sbb
push
sub
shlb
cltd
xor
bound
subb
ret
popf
fistpll
mov
rcl
and
push
rcrl
cmp
mov
pop
adc
imul
xor
gs
sti
mov
and
imul
outsb
cmpsb
js
cli
pop
pop
fildll
or
jl
pop
fsts
fldenv
inc
hlt
lcall
test
xlat
mov
bound
cmpsl
call
add
fidivl
dec
xlat
rcrl
xchg
mov
push
in
push
xor
nop
cmp
dec
addb
or
ja
pop
cmpsl
xor
pop
into
xorb
call
lret
dec
insb
lret
push
adc
rcrb
outsl
pop
adc
pop
loop
ret
sbb
inc
test
arpl
in
lret
cmp
and
leave
push
mov
scas
and
sub
add
in
loope
test
jp,pt
jl
lods
lds
es
jno
mov
jg
xor
lret
push
pop
das
or
cli
inc
and
mov
sbb
jo
int
sbb
inc
into
aad
adc
dec
inc
sbb
and
cmc
sbb
and
jae
loopne
les
jo
repz
push
fdivl
xchg
xchg
push
je
add
or
push
jae
inc
or
test
jl
or
push
out
adc
ss
xchg
aam
outsb
xor
xor
xchg
dec
inc
dec
ja
jge
mov
inc
add
repnz
in
push
pop
lret
fbstp
ljmp
les
xchg
or
mov
cmp
ret
test
jo
jp
xchg
sub
je
in
adc
jb
out
inc
sbb
in
pushf
sub
pop
dec
inc
arpl
pop
daa
mov
dec
or
xchg
jge
fwait
pusha
mov
nop
addb
sub
outsb
jp
bound
shr
dec
add
out
in
jg
mov
adc
adc
rolb
out
xchg
or
inc
push
push
xchg
imul
pusha
add
sub
repz
or
das
iret
mov
mov
es
in
mov
std
sahf
fdiv
cmp
das
aad
rorb
lcall
aam
or
mov
shlb
and
or
pop
dec
mov
outsl
lods
pop
icebp
cmpsl
mov
dec
jne
mov
push
mov
enter
cmp
cld
pop
push
mov
cmp
lret
mov
inc
pop
push
lcall
sub
and
mov
jns
pushf
jne
aam
cmc
jo
call
xchg
in
push
sbb
cmc
xchg
push
test
and
pusha
sti
jge
test
mov
mov
dec
aad
push
psubsw
addr16
lcall
cltd
popf
cmpsl
pop
test
fisubl
mov
aam
and
repz
cltd
mov
push
sub
inc
data16
push
cmp
mov
xchg
outsb
adc
cmc
incl
inc
or
cmpsl
mov
loop
rclb
jo
dec
xor
dec
jns
cld
push
xor
pushf
sahf
in
iret
add
insb
adcl
ret
or
push
rcrl
ret
xchg
pushf
jl
sub
mov
mov
mov
jg
jge
xor
and
test
jmp
inc
xor
push
or
jmp
aas
mov
sub
jge
leave
cs
add
cli
jbe
cmp
test
mov
fsubrs
mov
or
push
das
jne
inc
into
dec
cmpsl
inc
iret
nop
icebp
sub
cs
cli
test
addl
ret
imul
jnp
imul
add
xchg
fdivr
sahf
cmpb
test
cmp
stc
data16
inc
clc
jbe
xor
or
pop
fcoml
dec
cmp
xchg
and
int
and
cmp
mov
xchg
out
lea
and
call
les
in
cmp
pop
mov
or
dec
xor
int
jns
aam
cli
jb
addb
int3
out
movsb
inc
loop
inc
mov
sub
addr16
cmp
out
xlat
pop
out
sarb
scas
popf
jp
jecxz
sbb
es
insl
and
add
lret
out
clc
push
inc
cmc
scas
inc
scas
into
int3
or
mov
xor
mov
push
mov
adc
mov
in
adc
ljmp
fmulp
cmp
mov
aam
mov
jg
lcall
push
and
pop
imul
push
cmp
xchg
push
push
aam
sub
daa
outsb
ss
pop
fwait
or
addl
mov
repnz
stos
sbb
or
mov
mov
cmp
sub
mov
subl
dec
add
xchg
pop
std
inc
aas
jne
call
mov
stos
ljmp
pop
pop
std
push
aam
xor
dec
xchg
mov
add
cmpsb
mov
sti
jmp
cs
dec
and
inc
mov
aas
jo
hlt
inc
and
ds
cmp
aaa
scas
lcall
dec
pop
in
jl
into
mov
mov
stc
mov
bound
or
fisubl
lret
in
push
mov
sbb
ja
dec
add
movsb
mov
ret
pop
stc
std
mov
cmp
cmp
stos
xchg
ficompl
xor
add
add
roll
sub
mov
pop
movsb
lock
shrl
cwtl
sub
mov
mov
xchg
imul
sbb
insb
inc
push
iret
pop
push
pop
jbe
inc
pusha
sbb
sbb
mov
pop
and
addr16
mov
cmp
imul
mov
push
or
ja
out
fcmovnu
xchg
data16
into
test
sbb
cli
xchg
movsb
sahf
fs
lods
std
cmp
adc
outsb
mov
int3
test
xchg
jns
cmpsl
in
mov
xlat
xchg
add
das
pop
out
push
push
dec
out
fiaddl
fwait
test
pop
lret
test
jle
pop
mov
cmp
inc
jecxz
inc
in
pusha
dec
jmp
out
imul
lds
repnz
fldl
rorb
xchg
fcmovbe
cmp
loop
sub
jle
and
add
cwtl
sub
mov
outsb
imul
out
dec
movsb
add
lods
call
xchg
es
push
jnp
xor
xor
or
jne
jge
mov
popf
push
mov
addr16
roll
popa
imul
push
sbb
push
cmpsb
and
arpl
shlb
push
or
ja
insb
add
ljmp
jnp
stos
hlt
or
adc
sbb
mov
out
cmp
sbb
cmp
push
jg
test
fdecstp
jmp
add
adc
in
jno
add
pushaw
out
mov
add
push
mov
inc
push
push
sahf
push
xor
adc
push
mov
inc
inc
je
movsb
mov
or
xchg
adc
out
add
outsb
xchg
xchg
xchg
imul
into
sub
push
outsl
sub
dec
xor
jns
imul
sbb
neg
sbb
or
jg
or
sahf
push
pop
out
sub
mov
addb
repnz
mov
lret
imul
sbb
pop
popa
ja
jecxz
xor
shlb
fldt
mov
jne
or
jp
xchg
mov
inc
inc
je
std
scas
adc
stc
out
mov
rorb
inc
jne
mov
mov
xchg
fists
mov
sahf
jbe
icebp
ljmp
imul
or
xchg
in
xchg
xor
fs
arpl
hlt
js
pushf
fisttpl
popa
mov
mov
lcall
movsb
push
inc
sti
cmp
mov
imul
jg
inc
loopne
or
push
setge
cmp
push
stos
mov
fnstcw
mov
loop
mov
cmp
mov
cmpsl
sbb
rorl
push
push
lock
sbb
xchg
mov
dec
fwait
out
sub
cmc
cmp
sub
pushf
cmc
or
fbld
mov
mov
inc
pop
and
add
addr16
sub
inc
push
inc
sub
rorl
int
add
sbb
sub
xchg
xor
push
inc
push
mov
int
jge
call
ret
pop
ret
push
mov
xor
mov
mov
cld
adc
xor
out
fwait
cld
shl
fadds
inc
xchg
inc
daa
sbb
outsl
jp
jp
push
mov
stos
cmp
mov
dec
imul
insb
testl
lret
lea
xor
fldl
lret
mov
stos
pop
sbb
int3
scas
cmp
xchg
lahf
jns
sbb
addr16
iret
or
cmc
and
fstps
ficomps
push
or
shrb
cmp
lret
aaa
fisubrl
out
clc
out
addr16
adc
movsl
xor
imul
scas
dec
dec
jnp
push
mov
pop
test
adcl
fildl
je
dec
dec
mulb
adc
fisttpll
outsl
push
pop
fstpl
mov
loopne
jae
xor
lahf
cld
push
pop
xor
inc
inc
push
sbbl
roll
sub
xor
test
in
mov
and
jl
repnz
and
shl
popf
mov
fmulp
pusha
pop
test
adc
jno
das
mov
lahf
les
inc
sub
fs
inc
mov
mov
mov
and
bound
mov
mov
mov
inc
mov
cmp
std
mov
in
cmp
ret
push
adc
inc
sbb
std
mov
sub
add
or
push
sbb
add
add
mov
out
cmp
lods
pop
das
xor
jl
lret
js
aaa
scas
lcall
imulb
loope
fbstp
mov
fstpl
cmp
roll
sbb
jecxz
call
fisubl
push
out
mov
lahf
dec
push
jbe
shll
sub
jne
dec
inc
push
iret
fwait
rclb
sbb
jecxz
xor
out
adc
add
cmp
mov
in
mov
push
pusha
cmp
xor
shrl
sti
das
add
sbb
idivl
mov
cmp
sbb
cmp
dec
sub
fmuls
dec
cmp
cmp
inc
rorl
test
shll
lock
not
jne
movsb
aas
jge
and
lcall
add
push
in
out
dec
sub
xorl
cli
subb
fstl
je
mov
mov
test
xor
mov
mov
pusha
and
pop
movsl
mov
xor
sub
ss
mov
sub
testl
cmp
cmp
jge
push
mov
push
add
jecxz
push
leavew
xchg
add
adc
pop
cmp
out
cmp
or
pop
lret
xor
daa
daa
or
ss
clc
inc
test
fisubl
pop
push
jne
pop
shl
dec
gs
push
jb
mov
cld
movsl
add
or
mov
sarb
ret
jmp
lock
mov
das
mov
sbb
or
inc
sbb
adc
cmp
xor
inc
and
ds
addl
iret
push
fsubr
out
pop
flds
push
cld
mov
iret
std
jbe
cmpsb
and
mov
jg
imul
decb
ret
jo
sbbb
fcmovnbe
sahf
fimull
xchg
loop
cmp
stc
pop
jnp
mul
sub
cmpsb
fisubl
mov
das
int
xorl
out
rorb
mov
xchg
std
mov
ja
in
jae
cs
pop
js
loopne
out
int3
pop
cvtps2pd
insb
jns
xchg
xor
mov
xchg
mov
sub
xor
pop
pusha
xor
mov
mov
loop
mov
inc
inc
das
xor
sbb
fs
fnstenv
enter
nop
push
lods
adc
movsb
adc
mov
gs
jp
mov
pop
scas
mov
arpl
xlat
inc
pop
inc
lahf
je
jnp
test
jg
sbbl
pop
cli
mov
popf
jne
sbb
xor
push
mov
pop
outsl
mov
add
push
cmp
out
out
pop
or
repz
inc
test
push
movsb
sbb
jno
mov
cltd
test
shl
inc
cmp
test
sbb
xor
ret
mov
jp
and
dec
add
pusha
inc
addr16
jg
jecxz
push
addr16
pop
or
xchg
mov
mov
ror
and
xchg
andl
lea
inc
add
cmc
dec
sti
xor
repnz
mov
fwait
xor
inc
add
or
mov
push
data16
mov
lea
lret
jb
sub
movsl
dec
lea
mov
addr16
push
mull
pop
vpminsw
xor
mov
xchg
rcr
in
cmp
lea
mov
stc
dec
fisubrs
dec
mov
fs
in
sub
dec
inc
hlt
dec
ret
xor
out
aad
jne
adc
mov
popa
ret
sub
xchg
lret
and
jnp
lahf
rcr
popa
mov
icebp
or
mov
sar
xor
pop
push
loop
fs
sub
add
int3
mov
xor
test
rorb
xor
push
insb
inc
sbb
fcom
mov
sbbl
pusha
ret
push
or
push
aaa
movsb
push
mov
imul
int3
pop
int3
repnz
lret
pop
loope
pop
dec
dec
lret
push
and
adc
clc
add
and
ret
sbb
mov
jno
sbb
pop
and
dec
cld
rdpmc
jmp
into
sbb
in
mov
je
jbe
lock
fcomps
xchg
nop
sub
icebp
das
push
pop
outsb
pushf
xor
xor
add
adc
jbe
push
inc
push
dec
jno
or
pop
outsl
sub
inc
mov
sti
mov
insb
js
pop
mov
jp
les
pop
add
dec
and
push
lods
loop
cmp
inc
jmp
cmp
les
cmpsb
test
cltd
xchg
mov
jge
pusha
pop
mov
xlat
ljmp
gs
or
shr
fld
sti
push
inc
adc
neg
insb
xchg
mov
movsb
push
xor
lahf
and
sbb
in
jnp
inc
pop
mov
imull
out
cmpsb
out
mov
push
loop
jle
fisubs
cmpsl
mov
jg
jl
xor
jo
into
ret
mov
mov
inc
jnp
adc
insb
mov
pushf
push
ficoms
rcrl
test
xchg
xchg
loopne
call
mov
rcll
cmp
push
std
push
mov
or
out
pmaddwd
packsswb
sbb
xor
shll
movsb
jb
imul
insl
or
into
inc
push
mov
imul
nop
and
mov
add
sti
cltd
push
das
gs
xor
sbbl
push
jbe
inc
pop
add
sub
mov
jp
push
inc
xor
popf
xchg
mov
or
and
xor
xchg
or
mov
dec
xchg
inc
jg
mov
fdivp
sub
lds
pop
push
mov
vminps
shll
mov
pop
int
add
adc
shrb
or
nop
xorb
jle
adc
inc
ds
jmp
stos
hlt
aas
cwtl
fst
mov
sub
std
loopne
dec
xor
test
rolb
and
jmp
and
add
shrb
mov
lods
dec
jle
js
imul
xor
test
into
mov
mov
xchg
fnstsw
mov
mov
out
xchg
ret
out
and
push
movsb
daa
sbb
xchg
mov
mov
jp
fildl
xor
imul
std
ret
push
ljmp
pop
lock
xor
push
mov
into
or
shl
popf
scas
jle
pushf
test
bound
scas
iret
push
mov
xchg
push
push
cmc
xor
sbb
push
jle
in
stos
rcrl
adc
lahf
push
fnstcw
xchg
mov
cmp
mov
fsubrl
not
clc
push
in
mov
jmp
inc
popa
das
push
jb
nop
bnd
in
pop
scas
mov
mov
ja
cmpsl
adc
test
cmp
dec
repz
jbe
xchg
ljmp
inc
mov
vpor
aad
int
pop
sub
negl
fs
ja
fidivl
mov
or
mov
and
xor
jno
sub
scas
fisubs
inc
aad
sbb
adc
call
cmp
adc
mov
mov
mov
call
adc
rcl
cltd
sub
lahf
jno
xchg
ss
or
xor
aas
xchg
push
in
leave
xchg
cmp
xor
jmp
push
jae
cli
xor
cwtl
or
cmp
lret
fsubrl
pop
inc
push
jle
and
icebp
sbb
push
mov
hlt
sbb
mov
cmpb
clc
mov
roll
jbe
cmpsb
nop
rclb
adc
cmc
or
mov
xor
inc
cli
mov
ds
ljmp
and
adc
adc
adcl
ret
lods
adcl
or
push
call
popf
mov
push
shl
hlt
pop
sub
icebp
rol
push
ja
ja
nop
add
cmp
rcll
or
dec
rorl
fsubrl
imul
out
andb
sbb
jne
in
xchg
dec
in
aad
add
xor
and
cs
aad
stos
lea
divl
pop
scas
adc
imul
cmp
std
cmp
sub
jmp
cli
cwtl
lock
fsubl
insb
je
jg
jo
loope
dec
es
xchg
iret
push
lret
jbe
or
dec
insb
dec
xlat
shlb
das
in
shrl
dec
sti
sbbl
adc
xor
arpl
mov
pushf
sbb
mov
xor
cmp
jb
test
sub
dec
test
les
jmp
push
jge
sbb
cs
inc
leave
inc
pop
in
push
lds
mov
imul
pusha
xchg
scas
pushf
xchg
imul
fsubrs
xchg
mov
jno
or
clc
inc
movsb
pop
aas
repz
sbb
dec
dec
popf
lods
shlb
dec
sub
cmpsl
and
cmpsl
shr
and
mov
scas
sbb
and
imul
es
pushw
jge
cmp
fs
push
ret
pop
in
enter
xchg
or
dec
and
sub
cld
mov
inc
mov
and
mov
push
repz
shr
ja
xor
dec
ficomps
lret
inc
add
jg
int3
test
aad
dec
mov
mov
mov
push
ds
cwtl
xchg
pop
push
incl
xchg
call
dec
imul
inc
lods
negb
aad
pop
push
push
pop
xor
pop
and
in
iret
lahf
xor
icebp
icebp
addr16
xor
fwait
xchg
les
mov
mul
movsb
repnz
dec
add
inc
dec
ret
incb
test
inc
cmp
test
sbb
in
push
imul
popf
xchg
xor
int
shll
inc
pop
fstps
or
mov
jns
mov
je
rcrl
hlt
jecxz
ja
inc
pop
adc
test
sbb
popf
adc
push
xchg
mov
mov
jg
out
int
sbbl
cmp
cmc
scas
gs
sbb
mov
jne
mov
xchg
mov
into
inc
cli
in
inc
xchg
daa
push
aad
push
jne
xchg
pop
std
adc
popf
loop
addr16
inc
pop
loopne
xor
and
je
mov
imul
lea
jnp
inc
mov
repnz
mov
ss
mov
lock
sbb
pop
and
arpl
push
add
scas
enter
push
dec
movsb
jmp
js
test
sbb
fs
mov
int
out
ss
mov
lcall
out
repz
outsl
cmpsl
pop
out
test
mov
and
mov
addl
ljmp
cmp
sbb
dec
lods
cli
outsl
cmpsl
std
cli
mov
icebp
ja
inc
add
push
dec
fldcw
pop
sti
adc
in
js
xchg
inc
jnp
inc
lock
push
shlb
mov
dec
pop
insl
sar
nop
popf
xor
and
push
lock
pop
aas
xchg
nop
pop
aam
dec
adc
cmpsb
or
ss
jmp
js
adc
mov
lcall
imul
dec
loope
mov
adc
or
aam
outsl
dec
stos
popa
cmpsl
scas
pop
and
inc
enter
and
xor
jle
test
push
cli
dec
int
sbb
dec
in
movsl
aaa
stc
sbb
outsl
push
cmp
and
loope
in
and
push
nop
push
push
push
mov
adc
adc
mov
fidivrs
pslld
aas
cli
ror
jnp
in
out
das
jne
scas
xchg
sti
fwait
inc
iret
in
and
daa
xor
int
xor
lock
vpunpckhqdq
ret
aam
in
jle
sarl
xchg
aas
mov
in
neg
mov
add
jg
aad
sar
sub
push
pop
iret
xchg
rolb
orl
jb
fists
sub
cmp
jmp
lret
fcompp
int
xorl
outsb
imul
or
adc
loop
pop
fucomip
xchg
pop
sbb
xor
add
insl
sbb
cmp
test
cmpsl
add
outsl
mov
hlt
lret
sub
pop
sbb
mov
push
push
ja
push
push
mov
pop
xor
frstor
pop
cmp
scas
pop
mov
cmc
pop
inc
xchg
icebp
lds
mov
iret
push
xor
cmp
imul
fistps
mov
cmp
out
mov
bound
adcb
femms
jl
jmp
ss
mov
jnp
insl
fmull
movsl
sub
cmpsb
shl
lret
cmpsb
xchg
aaa
cmp
out
cmp
fcmovnu
mull
push
mov
xchg
fwait
adc
stc
lea
push
in
out
mov
sbb
push
adc
frstor
inc
jb
inc
mov
dec
or
add
inc
jb
xchg
adc
clc
pop
mull
notl
shll
call
in
push
cli
aaa
cli
lods
or
bound
mov
ljmp
sbb
ljmp
clc
and
lods
xlat
inc
adc
push
jae
xchg
push
shrl
scas
pop
fs
mov
jecxz
in
jne
iret
xorl
mov
test
jb
stc
imul
mov
rorb
inc
mov
mov
insb
xor
or
je
lahf
push
push
xor
fsubp
es
xchg
addr16
add
int3
adc
sbb
mov
mov
sub
mov
imul
movsl
jecxz
hlt
lea
ljmp
inc
inc
inc
lcall
stc
inc
rclb
add
adc
mov
lahf
lock
push
adc
adc
xchg
pop
cmp
sbb
fldcw
push
scas
cmpl
jp
pop
cld
mov
fucom
lock
aad
and
pop
pop
scas
mov
jle
int
pop
lret
add
imul
std
xlat
adc
lret
jp
add
ljmp
xchg
pop
shrb
push
mov
das
roll
cli
call
negb
mov
dec
add
lods
push
adc
xor
in
faddp
dec
clc
in
stc
pop
jl
mov
add
pop
adc
fnstsw
pusha
push
jle
mov
or
and
shlb
dec
xchg
test
xor
xchg
test
inc
mov
mov
and
iret
enter
in
mov
adc
int3
and
xchg
sbb
outsb
jp
mov
jg
dec
inc
clc
gs
mov
xchg
imull
aaa
int
cmp
dec
in
mov
outsl
sbb
das
sbb
rolb
movntps
das
repnz
push
mov
mov
mov
push
test
clc
inc
lcall
test
mov
pusha
mov
xor
test
and
jne
mov
mov
lods
movsl
out
cmpb
out
xor
add
clc
xchg
dec
orb
pop
push
sub
pop
aas
fsts
inc
mov
call
and
mov
cmp
popa
fists
inc
invd
push
repz
clc
arpl
push
les
adc
cmp
pop
push
mov
mov
cltd
jg
lcall
xchg
cwtl
xchg
xor
lret
test
nop
aaa
pusha
lods
jmp
ret
add
xorb
jae
mov
dec
lea
adcl
sti
fwait
sub
mov
cmp
mov
cs
cmpsb
adcb
and
in
jnp
jno
jl
insl
mov
adc
sub
pop
inc
mov
repnz
xor
mov
cmpsb
aam
add
int3
mov
or
int
pop
add
pusha
xor
dec
bound
je
ja
out
pop
or
mov
popa
push
mov
and
adc
add
inc
test
out
and
enter
fistl
int3
int
sbb
test
inc
fisubrl
cmp
dec
pusha
sbb
call
es
jae
pop
ds
mov
push
cld
push
jmp
sbb
aas
loop
xchg
cld
jecxz
icebp
pop
popa
mov
pop
cmpsl
push
scas
jge
and
and
dec
iret
add
ss
dec
cld
gs
lds
movsl
fwait
jnp
mov
jns
sub
daa
pushl
mov
push
in
sub
outsb
pop
dec
loop
and
sbb
pusha
movsb
in
xor
jp
aam
cmp
adc
imul
inc
mov
nop
cmove
arpl
inc
mov
pop
ret
xchg
xor
or
cltd
ss
pop
xsha256
cmpsb
pop
movsb
fwait
mov
pop
lahf
xchg
pop
and
mov
mov
lock
adc
lahf
add
pop
add
lea
adc
push
adc
jmp
cltd
sahf
add
das
sub
sbb
test
adc
aaa
push
jbe
pop
sub
fs
jge
cmp
ret
stos
test
pop
imul
enter
stos
jb
ds
aaa
shr
xchg
jle
fistps
inc
fsubp
mov
xchg
and
and
xchg
packsswb
ss
inc
rcll
mov
shll
and
or
push
std
jns
add
ljmp
lret
les
add
pop
cld
pop
mov
fadds
out
or
or
push
xchg
test
mov
lcall
out
aaa
jmp
sarb
pop
mov
sbb
stos
shl
stos
out
lret
insl
push
aad
mov
call
dec
cmpb
faddp
add
scas
mov
movsb
pop
cmp
sub
stc
inc
jne
cltd
arpl
lret
push
insb
movsb
lcall
jg
xor
fistpl
inc
xchg
ds
mov
hlt
sub
fisttpl
lock
and
into
add
dec
sti
push
jp
mov
pop
pop
xor
sbb
sbb
xor
rcll
or
jae
push
adc
out
jbe
cmpsl
jb
pop
rcr
je
dec
cld
repnz
lcall
bound
jno
lds
jle
mov
lock
popl
ret
cmp
in
scas
push
das
xor
js
movsl
add
xor
add
mov
xor
pusha
jbe
sub
sbb
ljmp
xor
push
sbb
fwait
mov
into
and
jmp
ficoms
jns
inc
stos
fbstp
sub
int3
les
stos
pop
inc
jl
jl
push
popa
jno
jo
shrb
insl
sarb
sahf
mov
adc
adc
pop
scas
js
roll
push
pop
aas
mov
xor
cmp
xor
jle
adc
add
sub
int3
sub
push
adc
fisubrs
jno
or
fsubrl
dec
mov
lahf
fcomps
dec
push
mov
shll
push
fdiv
push
shrb
xchg
setns
and
push
push
mov
or
sub
mov
jg
scas
mov
sbb
mov
aas
dec
jl
mov
xchg
or
adc
and
es
imul
pop
ret
mov
xchg
out
popf
or
dec
cmc
out
out
xchg
mov
push
outsb
fsubrp
dec
push
push
jmp
or
dec
xor
je
xor
mov
sbb
mov
cs
fdivrl
addl
test
jne
xor
scas
and
jle
es
out
scas
mov
jae
xchg
cli
inc
mov
daa
movsl
enter
mov
mov
push
arpl
xchg
shrl
dec
add
xor
nop
mov
xchg
sub
cwtl
orb
lods
dec
test
js
arpl
push
test
fs
adc
add
les
adc
out
cmp
addr16
filds
daa
mov
insb
outsb
inc
cli
cmpsl
and
or
sub
popa
push
shll
loopne
cwtl
mov
cmp
push
mov
jp
outsl
fwait
test
add
les
and
lods
imul
xor
clc
dec
mov
sub
and
sbb
dec
xor
and
push
or
ret
arpl
stc
mov
loope
in
or
jae
mov
mov
xlat
jnp
or
mov
mov
jmp
sbb
je
dec
lods
or
inc
xor
jne
xchg
orl
movsl
push
xor
jb
rclb
fs
inc
cmp
in
sbb
movsb
pop
xchg
icebp
out
jle
pop
loope
inc
jb
outsl
inc
xchg
add
jle
movl
imul
mov
in
cmp
xchg
dec
xchg
add
fs
sbb
insl
lock
out
jno
data16
jecxz
xor
ss
aaa
cmpl
fs
dec
xchg
or
sub
into
pop
movsl
push
jmp
pop
sbbl
popa
and
dec
jmp
icebp
mov
push
loopne
mov
lods
sbb
pusha
and
stos
and
xchg
outsl
cmpb
fldl
out
sbb
stc
out
imul
inc
cwtl
cmc
addr16
nop
movsl
mov
rcrl
adc
xor
dec
scas
pop
int3
cs
daa
inc
cmp
adc
int
lcall
mov
icebp
mov
mov
aaa
jnp
and
xchg
cmpsb
xor
add
cli
pop
loope
sbb
push
jb
repnz
jmp
jo
push
and
xchg
pop
orb
loopne
adcl
sub
inc
fistpl
pop
fld
inc
test
cmpsl
mov
cwtl
cmp
jnp
and
pop
sbb
test
push
jns
shrl
adcb
imul
subl
jmp
dec
test
repz
cltd
mov
das
out
mov
mov
cmp
or
sub
ds
bound
jne
sbb
imul
inc
and
pop
nop
adc
and
pop
ja
mov
mov
lret
mov
lcall
fmul
or
icebp
clc
pop
xchg
cmp
lods
loop
in
adc
dec
cmp
jo
rclb
stos
adc
xchg
push
pushf
sbb
imul
enter
xchg
jno,pt
loope
in
and
lds
imul
imul
and
jns
mov
inc
pop
mov
pop
mov
mov
sub
lods
sbb
jo
push
clc
movsb
sub
lret
add
fisubrl
adc
xor
stc
mov
mov
cmp
and
outsb
pop
inc
pop
xor
jne
pop
inc
and
pop
mov
cmc
std
pop
adc
adc
fwait
popa
int3
mov
mov
cmpsb
dec
jl
pop
int3
push
out
in
call
mov
imul
or
loope
fwait
das
out
sub
imul
loopne
pop
mov
cli
or
jbe
inc
sub
mov
dec
aam
das
fimull
sub
inc
pop
jne
sub
fisubl
pushl
cmp
in
test
enter
fbld
mov
push
scas
xchg
insl
js
cmpsl
ljmp
cltd
stos
dec
push
rclb
ljmp
daa
cmp
clc
pop
ss
lahf
xor
xchg
jae
mov
push
dec
mov
out
dec
mov
int
ficomps
cmp
das
push
sub
sub
push
mov
les
dec
pusha
sbb
jg
test
dec
mov
jb
jnp
pop
stos
std
ret
into
mov
mov
sbb
arpl
sub
test
lahf
sahf
adc
cmp
dec
sbb
fisttps
dec
loop
mov
scas
pop
loopne
xor
lock
pop
mov
pop
mov
cmc
fwait
in
scas
sarl
mov
cmc
mov
mov
jno
sub
repnz
xor
jae
je
in
mov
jns
cld
aaa
lock
pusha
movsl
or
lock
push
sti
stc
sbb
fs
pop
and
jmp
pusha
or
outsb
sti
cmp
popa
lods
jno
insl
fwait
cmp
gs
rcrb
ja
test
lea
sbb
ja
cwtl
call
mov
xor
in
xor
add
movswl
aaa
test
les
pop
dec
shrb
stos
inc
sub
mov
outsl
movsb
push
jl
bound
and
mov
test
sbb
ficompl
dec
outsb
dec
stos
or
rorb
hlt
xlat
nop
outsb
xchg
out
sahf
cltd
pushf
jo
cmpsb
xor
idivl
addr16
jl
loopne
xchg
inc
jne
xor
movsl
leave
mov
add
xchg
sbb
loop
insl
xchg
sub
enter
or
rcrl
pushf
gs
movsb
mov
out
sub
or
jne
adc
lret
aaa
and
insl
add
test
test
jg
push
inc
or
mov
fcompl
paddsb
cltd
inc
mul
stos
and
fiadds
cld
fists
into
jae
xor
fstpl
stc
rcrl
test
hlt
xlat
mov
xlat
pop
int
adc
out
scas
sbb
push
fwait
xlat
fs
icebp
cmp
mov
fsts
pop
or
cwtl
inc
dec
enter
sahf
out
pop
xor
js
outsb
push
into
push
data16
ja
fldt
push
sbbb
push
jns
scas
das
sti
xor
xlat
mov
pusha
push
jmp
jmp
sub
imul
cmp
icebp
lods
push
jb
mov
loop
mov
or
mov
fisttps
sbb
push
gs
jmp
insl
cmpsb
cwtl
sahf
orl
sbb
adcb
adc
jecxz
scas
push
mov
fs
in
adc
mov
cmc
daa
xor
loopne
cltd
ljmp
imul
shll
mov
adcl
sub
push
mov
sbb
icebp
in
add
xor
and
ss
mov
fnstenv
cli
fimuls
rol
pop
mov
mov
and
sub
das
movsb
push
push
xor
pop
mov
or
stc
incl
push
in
cmp
dec
and
cltd
aad
push
and
mov
movsl
xchg
jae
sub
inc
jno,pt
es
xor
insl
push
add
adc
int
inc
dec
cmpsl
xchg
loope
sahf
xchg
push
and
mov
test
pop
pop
dec
inc
ljmp
stos
daa
push
cltd
subl
enter
cltd
add
mov
push
mov
ficomps
add
popf
push
rcl
push
cmp
mov
cmpsb
test
leave
jbe
nop
or
cmpsl
inc
and
and
cmp
sbb
mov
lret
arpl
cld
sub
pop
jge
pop
pop
inc
addr16
mov
into
dec
pop
xchg
arpl
std
pop
sub
dec
inc
fsub
icebp
movsb
jecxz
sbb
mov
aas
scas
sbb
test
add
dec
cli
daa
add
mov
add
stc
ss
dec
add
or
add
jo
dec
adc
das
cmc
mov
ss
andl
or
mov
clc
inc
jbe
mov
test
jno
fsubl
mov
leave
fisubs
jle
in
mov
mov
xchg
push
ds
dec
mov
popf
mov
imul
lret
rcrl
pop
xchg
lods
fmuls
lds
cmpl
cs
hlt
jg
mov
push
in
cld
xchg
pusha
dec
xchg
and
pop
add
lret
movl
dec
jmp
in
std
mov
cmp
mov
jle
pop
out
cmp
ja
cmp
lret
add
or
stc
pop
push
cwtl
fwait
call
pop
mov
test
mulb
xchg
inc
pop
insb
add
mov
dec
adc
mov
and
adc
jmp
cmp
push
ss
dec
rolb
pop
repz
lret
pop
xchg
sub
hlt
push
or
addr16
subb
push
aas
adc
loop
jmp
decl
fdivl
jb
rcl
adc
cmp
ja
ljmp
daa
test
dec
call
lret
test
cmp
push
xchg
pop
in
movsb
push
std
pop
jb
adc
popf
mov
or
sbb
mov
jp
pop
repz
cs
out
hlt
ret
sub
stc
int
cmp
rol
inc
loop
push
sbb
ret
stos
adc
jae
mov
xchg
inc
xor
jne
or
daa
push
movsb
idivl
push
inc
inc
mov
leave
lds
loopne
or
xchg
call
push
mov
test
cmp
mov
dec
mov
dec
shr
push
mov
push
das
xor
and
and
popf
scas
xor
je
xor
sub
jg
inc
imul
cwtl
cmp
lcall
mov
popa
or
and
mov
sub
dec
jecxz
shll
ja
mov
ljmp
jecxz
movsb
jnp
and
add
push
jg
insb
cmpxchg
mov
or
fwait
idivl
mov
jne
inc
sub
movsb
test
push
push
adc
push
ror
fs
sub
stos
pusha
aas
aad
aaa
neg
pop
inc
test
jnp
jg
mov
dec
pop
jecxz
jno
loope
xchg
testb
testl
les
stos
jno
mov
jns
enter
xchg
xchg
dec
xchg
add
lods
int
fdivs
pop
mov
subl
js
int
pop
ss
add
inc
push
aas
andl
inc
mov
mov
dec
clc
aaa
push
stos
jg
sbb
cs
push
les
push
mov
mov
or
stc
loope
das
sub
sti
xor
in
ja
or
push
pop
lock
mov
fnsave
xor
xchg
sub
pop
addb
popf
mov
sbb
rcll
popf
sub
cmpsl
sub
daa
pop
mov
in
sub
mov
jmp
pop
push
jecxz
adc
xchg
aas
cltd
pop
imul
sub
push
mov
ds
dec
jmp
dec
popf
pusha
mov
pop
or
leave
or
dec
mov
mov
cmp
pop
mov
pop
push
fsubr
mov
hlt
pop
movsb
inc
xorl
mov
out
xor
stc
sbb
xor
push
mov
pop
js
push
pop
or
pop
scas
sub
add
in
lcall
cld
jbe
mov
test
and
cltd
pop
inc
jge
mov
pop
test
fnstenv
xchg
xlat
dec
push
or
dec
jo
sub
jne
xchg
rcrl
jmp
xor
and
pop
leave
rorb
inc
divl
push
mov
mov
dec
in
fiadds
rcl
push
in
push
fists
mov
stos
push
cmp
jg
mov
cmp
mov
mov
or
sub
rorb
ljmp
out
outsb
fs
or
jmp
mov
adc
test
add
int
pop
adc
pop
sti
outsl
outsl
pop
add
xchg
lods
xorl
jbe
ss
dec
inc
push
mov
jecxz
xor
xchg
ficoms
rorl
adc
mov
std
push
mov
xchg
push
testb
leave
xchg
fs
pushf
xchg
and
jne
fadd
das
mov
cmp
dec
adc
scas
icebp
inc
in
fimuls
push
xchg
stc
mov
in
push
adc
xchg
add
lds
popa
cli
aas
adc
sub
xchg
dec
jecxz
cmpsb
loop
jae
lret
imulb
scas
or
add
sub
insl
leave
lods
jg
ja
cmp
mov
pop
adc
rep
cmp
mov
push
add
fsubrs
pop
push
test
sbb
cmp
pop
in
sbb
loopne
inc
decb
dec
pop
pop
ljmp
sub
arpl
push
insl
dec
fs
cwtl
repnz
pop
mov
mov
fistpl
shrl
in
int
jnp
push
or
bound
ljmp
popa
xor
pop
jne
out
xorl
lock
jno
cmp
jg
aas
sbb
arpl
and
jo
inc
rcr
inc
into
repz
jmp
stc
sti
dec
adc
in
push
inc
jmp
xchg
push
xchg
sub
jle
push
xchg
flds
add
subl
fcoms
jbe
add
loopne
in
scas
test
shll
ds
add
add
mov
cmp
sbb
inc
movsl
insb
test
mov
rcll
pop
sbb
es
jns
mov
push
xchg
cmpsb
data16
mov
jno
adc
test
in
xchg
add
fadds
or
dec
cmp
sub
jg
inc
jecxz
fs
xor
cmp
jns
sbb
xor
pop
rcr
mov
fnstsw
hlt
das
nop
daa
insl
push
lahf
out
shrl
cmp
shrl
mov
inc
add
mov
ja
inc
mov
jmp
xchg
jl
jp
jg
xor
scas
jp
mov
stc
fcomi
fimuls
fsubrs
push
addr16
pop
hlt
jo
mov
mov
jecxz
jb
repz
pop
and
sahf
mov
mov
cli
push
rclb
lods
mov
outsb
xor
pop
adc
pop
push
arpl
sub
adc
adc
scas
dec
iret
imul
push
repz
xchg
int
jae
mov
xchg
shrl
fucomp
mov
pop
add
jns
outsl
inc
lcall
push
and
push
pop
mov
push
or
stos
dec
neg
pop
xor
xchg
jo
in
pop
push
push
lds
cmp
outsb
xor
paddsw
pop
orl
out
imul
sub
in
imul
pop
mov
insl
ret
push
xor
mov
pushf
xchg
inc
mov
rcll
test
xor
adc
or
int3
dec
lock
xlat
dec
aaa
lods
mov
xchg
sti
push
adc
push
test
sub
xchg
mov
enter
adc
addr16
adc
inc
mov
cmpl
mov
pushf
loopne
xchg
aad
repz
mov
inc
insb
xchg
sub
jo
sub
pop
pop
sti
dec
cld
data16
lcall
push
int3
jl
pop
adc
dec
repz
fadd
lods
ret
cltd
xchg
loopne
fsub
fildl
cmp
aas
nop
test
push
add
adc
clc
mov
dec
lea
ficoms
mov
sahf
cmpb
ljmp
ret
fs
push
jge
jbe
fidivs
icebp
mov
dec
push
add
sub
push
hlt
cmp
out
xchg
pop
adc
and
fldt
pop
cmp
fsubl
jge
sbb
dec
test
xchg
lcall
fsubp
pushl
insb
shrl
mov
iret
push
xchg
inc
imul
outsl
stos
pop
iret
sub
stos
sub
data16
push
stos
pusha
jecxz
nop
cmp
cmpsl
mov
mov
bound
in
or
in
add
movsl
xor
xor
jne
jle
jmp
sbb
ficomps
fimull
jae
out
inc
sub
mov
fsubrs
mov
push
ss
in
movsb
sub
sbbb
pop
int3
sbb
jecxz
rol
ds
mov
ss
push
cmc
insb
xchg
rorb
cli
lods
js
adc
inc
fcoml
jl
pop
adc
adc
jmp
mov
ds
rol
je
hlt
shrb
cmc
test
imul
mov
jp
cli
cmp
xchg
push
pop
adc
movsl
pop
xchg
int3
setbe
lock
fstpl
addr16
leave
aam
xchg
mov
jg
push
adc
std
cltd
js
aam
sar
scas
adc
push
fisttps
loopne
jmp
add
stos
pop
es
adc
xor
insb
push
lods
mov
inc
inc
add
fwait
shrb
out
mov
cltd
cmp
loope
ja
in
xchg
call
mov
faddl
push
imul
mov
mov
stos
dec
xor
rclb
xchg
add
notb
insb
insl
xlat
and
jge
push
arpl
scas
out
or
adc
sbb
jle
adc
dec
ljmp
dec
rorl
testl
mov
nop
sub
xchg
cmc
mov
in
arpl
frstor
jmp
outsl
cmc
nop
and
clc
lcall
cltd
shll
mov
fcoml
and
dec
popa
jl
push
xchg
ficoms
push
mov
add
lahf
lret
push
dec
pop
das
jbe
add
cmp
xor
jno
xchg
mov
ficomps
pop
or
xchg
adc
jmp
cwtl
je
out
insl
popa
movsb
jp
jnp
dec
lret
mov
adc
leave
cld
mov
and
adc
jp
out
mov
mov
pop
mov
mov
hlt
ret
popf
addb
shlb
cmp
jno
xchg
cmc
mov
inc
in
sbb
adc
mov
cs
push
mov
cmp
lret
dec
mov
inc
inc
imulb
call
mov
or
and
mov
fdivr
jnp
ja
sbb
cmp
pop
jp,pt
cmp
jns
jp
inc
out
inc
mov
jp
mov
dec
and
loope
jge
clc
fiaddl
sbb
ljmp
iret
mov
add
pushf
cmc
lock
xchg
push
int3
or
sbb
cmp
cmp
data16
iret
rorl
jge
lcall
push
pop
inc
mov
or
pop
mov
aad
bound
dec
cmp
pop
fsubs
int
mov
inc
ficomps
adc
and
push
test
add
xor
mov
or
pop
les
dec
aaa
mov
out
daa
int3
rclb
xchg
add
xlat
cli
mov
inc
jno
inc
mov
xchg
sbb
std
insl
add
jle
enter
je
lods
outsl
xor
push
pop
pushf
outsb
push
mov
test
add
cmp
sbb
push
sub
add
inc
pop
mov
pop
add
cltd
and
dec
test
adc
das
xor
std
je
jns
dec
adc
cmpsb
inc
dec
inc
sahf
aas
mov
xchg
inc
xlat
mov
cmp
mov
pop
rolb
cmc
adc
xchg
pop
loope
outsb
into
out
shl
xor
sub
stos
xor
cmp
popa
jbe
adc
xchg
call
pop
icebp
sub
mov
push
sbb
mov
jmp
sbb
out
mov
fwait
mov
lret
sub
sti
enter
andl
fistl
movsb
jmp
test
imul
lock
dec
push
fxch
jmp
dec
ds
dec
out
jns
mov
scas
inc
mov
es
loop
repz
mov
in
cmp
pop
fmull
mov
inc
insl
insb
or
and
xchg
inc
fwait
loope
das
icebp
les
sub
hlt
lock
mov
test
cmp
insb
pop
mov
imul
lods
pop
cmpsb
mov
movsl
daa
mov
add
enter
cmc
add
dec
mov
sbb
jle
popa
add
cmp
jmp
sbb
outsl
sbb
push
loope
mov
push
movsb
out
mov
sbb
clc
push
sub
mov
scas
push
outsb
mov
fadd
cwtl
rclb
mov
or
push
jo
dec
orl
adc
cld
pushf
es
hlt
xchg
push
mov
inc
repz
add
and
mov
test
mov
repz
or
push
mov
cltd
push
subl
push
pop
gs
das
adc
jb
cmp
sbb
sbb
fsubs
iretw
jecxz
lock
mov
enter
or
and
cltd
inc
ret
cmp
test
subb
add
xor
lea
cld
xchg
push
outsb
lods
imul
mov
mov
sub
iret
aam
inc
sub
mov
and
out
inc
aaa
mov
into
push
inc
sbb
ret
fucom
lods
in
je
or
scas
test
daa
adc
in
aas
and
out
jecxz
add
movsl
test
adc
ret
mov
mov
ret
test
and
out
add
cwtl
sbb
test
mov
or
mov
enter
sbb
jnp
adc
sbb
add
cmp
xchg
repnz
lods
fwait
mov
lods
sbb
iret
fs
mov
dec
pop
gs
das
lods
pop
leave
pop
xchg
mov
sub
jbe
mov
ss
outsb
hlt
or
stos
enter
imul
inc
push
sbbl
arpl
dec
pusha
dec
mov
mov
sbb
xchg
xchg
jmp
jecxz
lods
mov
rcl
rclb
ljmp
sbb
push
adc
movsl
shlb
decl
xchg
stc
cltd
xchg
and
sbb
adc
mov
sbb
lods
addr16
popa
and
xchg
sbb
ret
sub
pop
cld
adc
sub
ss
popa
xlat
or
add
sub
call
fwait
ljmp
adc
mov
fs
push
insb
cmpl
sub
aaa
repz
fbstp
jbe
les
movsl
xchg
push
leave
std
jle
jge
je
push
movhps
xchg
or
jge
add
cmpsl
sub
nop
scas
dec
je
push
ror
jne
fdivs
add
lea
aam
or
dec
xchg
inc
sarb
push
add
push
int
movsb
cmp
mov
sarb
or
pop
inc
ret
repnz
out
nop
push
xor
xchg
into
scas
dec
or
xchg
in
add
push
dec
sbb
push
mov
test
push
push
fwait
out
pushf
mov
cmpsl
fildll
mov
scas
addr16
stos
cmc
jmp
and
jb
shrl
sbb
xchg
les
popa
lds
sub
inc
and
push
dec
adc
and
xchg
es
into
rcrl
inc
jl
jl
or
pop
cwtl
cmp
fsubr
and
inc
lods
pop
lret
or
daa
mov
jmp
adc
add
and
inc
imul
sub
dec
xchg
jle
mov
imul
daa
fucomip
rcrb
mov
popf
lock
adc
roll
push
xchg
mov
lret
adc
mov
push
or
push
jl
dec
negb
setb
icebp
xchg
lock
jne
dec
sbbb
mov
inc
xchg
pop
adc
es
cmc
cmp
call
fdivl
je
enterw
aad
xchg
adc
aaa
or
inc
lods
inc
xchg
loop
mov
dec
jne
inc
sarl
roll
jo
pushf
mov
pop
mov
popf
xor
jl
xchg
rcrl
adc
or
insl
push
aam
jnp
jmp
xor
fwait
pop
or
fwait
iret
icebp
pop
inc
or
pop
or
icebp
jge
cwtl
mov
out
jno
inc
push
lods
rclb
add
add
push
sbbl
pop
sbbl
inc
dec
cmovle
enter
xor
dec
push
outsl
aaa
rcrl
push
and
mov
mov
fcmovnbe
int
lcall
xor
imull
inc
in
lahf
cmp
fcoml
or
daa
add
sbb
push
xorl
push
pop
aaa
imulb
nop
dec
cmp
sub
mov
loopne
adc
lret
movsb
xor
sbb
jg
or
fdivr
call
jb
scas
imul
loop
pop
hlt
mov
popf
enter
into
mov
mov
jmp
rcll
mov
mov
jecxz
std
and
xchg
push
sarl
cmc
data16
jle
mov
dec
fcoms
xchg
loop
mov
cwtl
xorl
fildl
inc
sahf
add
hlt
pushf
stos
shll
ljmp
xor
push
jge
stos
mov
inc
xor
inc
jmp
and
cmpsl
mov
push
or
and
jle
aad
inc
pop
popl
pushf
mov
shrb
sub
sti
rol
dec
adc
stos
jge
clc
jge
cmp
loope
lahf
fistpl
sbb
lds
mov
mov
jno
mov
sahf
repnz
clc
shld
xchg
out
push
out
mov
lods
or
pop
mov
mov
shll
and
arpl
jg
mov
adc
cmp
fimull
inc
repz
push
scas
in
stc
lahf
shlb
push
add
shll
cli
pop
mov
pop
inc
ds
xchg
pop
lahf
frstor
mov
sbb
je
negl
cmp
movl
jns
dec
repnz
push
dec
pop
out
pusha
jb
addb
xchg
add
in
setae
popa
pop
dec
mov
push
fildll
cmp
push
sbb
push
cwtl
or
lds
mov
inc
sbb
scas
jmp
stos
xor
mov
loope
mov
rol
std
loopne
fildll
push
and
hlt
iret
sub
mov
jecxz
jmp
and
dec
pop
inc
and
cld
je
xchg
mov
add
insl
mov
adcb
push
and
fistpll
loope
sub
in
fwait
incb
int3
pop
push
mov
jno
idiv
sub
pop
cmpsl
cmp
test
pop
cmp
mov
lds
mov
lret
push
hlt
adc
push
leave
cmpsb
mov
std
aas
sub
mov
cwtl
sti
rolb
imul
xchg
movsb
pop
lret
sbb
ficompl
push
dec
in
xor
add
add
rolb
adc
div
ja
int3
andl
pop
stc
ljmp
push
pop
mov
jb
fsts
hlt
pusha
inc
dec
mov
sbb
or
fmulp
xchg
hlt
mov
push
xchg
cmc
mov
addr16
xchg
outsb
cmpl
mov
lods
pop
scas
aad
insl
mov
adc
xchg
call
mov
mov
dec
sbb
jecxz
leave
mov
stc
movsl
lods
adc
jne
mov
popf
xorb
loopne
xor
and
xchg
clc
lea
xchg
fwait
je
push
imul
int3
cmp
adc
and
aas
xor
icebp
xor
and
jbe
mov
mov
jp
or
test
or
shll
ret
int
adc
stos
sub
inc
add
notl
push
aas
inc
addr16
dec
sbb
dec
pop
pushf
push
in
jbe
in
fisubrl
or
adcb
mov
out
adc
and
mulb
inc
or
cltd
aad
mov
sub
fs
ds
jne
sub
mov
popf
bound
xor
jp
sub
xchg
xchg
mov
mov
push
aad
outsb
sti
inc
je
mov
mov
std
push
push
push
cmp
es
fs
loopne
push
xchg
std
mov
popa
sub
jge
fs
add
call
ja
into
xor
orb
push
fwait
js
repnz
aas
out
xchg
xlat
mov
add
jae
mov
popw
call
cmc
mov
pop
fwait
push
lea
fidivrs
or
hlt
push
gs
shrb
cmc
pop
cmp
mov
adc
shll
pop
fimull
rcrb
gs
addr16
test
adc
cmp
stc
daa
xor
inc
push
xor
cmp
cld
sub
gs
rol
notb
rcl
adc
jne
mov
cmp
inc
cmc
inc
out
xor
sub
int3
sbb
pushf
movaps
shlb
cmp
xchg
mov
sbb
ss
inc
xchg
xchg
and
into
test
jmp
mov
xchg
les
leave
aas
ljmp
jg
maskmovq
negl
adc
push
or
pop
push
clc
fdivs
xor
clc
leave
xor
cmp
adc
dec
adc
pop
out
js
or
xor
mov
mov
add
leave
lea
mov
pop
xchg
addr16
xlat
addr16
std
mov
mov
in
mov
stos
adc
frstor
orb
repnz
adc
lock
lock
arpl
fdivs
sbb
and
mov
xchg
dec
stc
adc
sub
dec
repnz
cmp
sbb
outsl
lea
cmpsb
stos
sub
push
dec
lds
pop
and
pop
cmc
sbb
sub
pop
adcl
cltd
jo
nop
xorl
or
iret
dec
rorl
out
push
in
in
incl
sbb
pop
mov
int3
mov
or
adc
loop
jnp
sbb
rcll
lea
push
mov
push
xlat
pop
pop
popa
std
ds
jo
xchg
inc
dec
je
sub
dec
outsl
mov
dec
out
gs
mov
mov
mov
jbe
lds
xchg
dec
hlt
inc
add
nop
xor
and
pop
jg
jo
test
and
xorb
outsl
stc
sbb
pop
aam
daa
loop
aam
xor
pop
cmp
xchg
push
adc
pop
xchg
inc
sbb
in
push
cmp
data16
cs
sahf
repnz
scas
cmp
and
rolb
xchg
call
add
fdivrs
dec
or
push
shrb
js
inc
icebp
dec
enter
filds
jmp
or
mov
imul
dec
out
mov
scas
add
cmpsl
adc
mov
lea
scas
pop
pop
es
outsl
add
xor
xchg
in
imul
add
lea
clc
nop
sbb
push
push
sbb
mov
adc
pop
and
lods
lea
push
outsb
adc
mov
cmp
int3
xlat
imul
inc
cmp
and
xchg
and
test
jo
jo
cmpsb
and
pusha
cmpsb
cld
inc
movsb
daa
inc
mov
insl
fs
xor
or
sub
add
nop
xor
push
sub
add
mov
idivb
ret
in
dec
loopne
or
cmpsl
pop
mov
xor
sbb
stc
sub
das
push
cmpsb
pop
les
lahf
out
push
in
adc
push
shlb
shlb
movsl
mov
cltd
fisubrs
cmpsb
pop
test
pop
imul
lea
inc
movsl
dec
mov
sarl
insb
lods
pushf
int
jecxz
es
cmc
pop
test
push
xor
sti
adc
aaa
sarb
inc
add
adc
icebp
or
or
xchg
out
mov
call
fsubrl
mov
pop
pop
test
or
insl
xchg
push
in
movsb
insb
xor
mov
pop
push
mov
dec
cltd
lret
and
fadd
lahf
aam
add
icebp
inc
push
sahf
mov
jmp
xorb
lock
outsl
ficomps
or
fstps
sahf
int
add
roll
add
pop
iret
pop
pushf
xchg
movsb
add
ja
jne
das
jle
pop
dec
out
shll
enter
sub
ja
sub
fnstsw
xchg
pop
jp
das
cltd
and
mov
inc
cmc
dec
jno
jmp
mov
rcll
dec
icebp
aam
addr16
jg
in
inc
mov
popf
fnsave
mov
add
enter
pop
or
movsb
std
std
test
mov
lds
xchg
gs
imul
std
mov
in
orb
mov
pop
sub
gs
dec
cmpsl
mov
fildll
dec
in
sti
mov
and
push
ljmp
mov
faddl
mov
xchg
movsb
cld
insl
mov
test
xchg
or
mov
mov
loopne
shlb
fidivl
imul
andb
stos
pop
push
jge
cs
adc
add
pop
ret
dec
cmp
inc
test
jmp
add
arpl
cmp
jg
add
push
xchg
sarl
popf
cmpl
cli
inc
jecxz
lahf
sbb
cmpsl
fstpt
popf
data16
aas
pop
pop
rcll
mov
lea
lahf
nop
cmp
push
test
das
es
jb
inc
xorl
sahf
mov
scas
fiaddl
fistps
mov
mov
std
mov
imul
push
int
mov
pop
xchg
sbb
arpl
and
imul
dec
ffree
imul
add
xor
es
xchg
divl
ret
mov
xchg
sbbb
popf
mov
jbe
and
es
and
cltd
xor
mov
sub
fst
loop
xor
mov
lret
movsb
mov
push
jecxz
adc
and
in
inc
cmp
jne
mov
sbb
andb
fldl
je
out
adc
stc
adc
shl
and
lods
sahf
fcom
sub
pop
sbb
scas
xchg
pop
jae
in
mov
dec
inc
xorl
rcll
push
cwtl
jl
cmp
push
or
pop
and
push
and
insl
cmp
sarl
movsb
insl
jle
mov
icebp
jno
or
push
xor
push
mov
xchg
sub
xchg
test
dec
subl
lock
adc
or
mov
das
lods
leave
push
das
and
dec
cmp
jnp
pop
cmp
fdivrs
enterw
inc
adc
xchg
cmp
lret
clc
inc
pop
fmulp
js
cmpsl
ret
imul
ja
addl
push
cmp
mov
mov
sti
lock
or
cmp
sbb
stc
jmp
data16
mov
iret
ja
and
sbb
enter
inc
jno
es
pop
aad
xchg
push
mov
mov
push
mov
mov
mov
shll
int3
adc
dec
aad
adc
mov
push
lahf
ret
xchg
roll
push
shl
mov
adc
add
out
in
adc
shll
mov
ja
dec
cmpsl
push
js
adc
out
inc
repnz
movsl
push
cmp
clc
push
cli
test
stos
iret
pop
or
push
jnp
pop
cmp
xchg
jg
xchg
adc
shrl
ja
and
mov
sub
fs
cmp
cmpsb
lcall
in
or
lcall
js
int
adc
ljmp
xchg
jbe
and
add
fnstcw
adc
mov
aaa
iret
sub
insb
out
movsl
xor
sbb
xor
es
rclb
dec
jp
faddp
test
adc
add
xor
adc
les
fsubrs
in
mov
mov
icebp
je
mov
mov
outsb
xchg
cwtl
in
int3
lcall
inc
aas
and
sub
popf
les
cmp
jae
dec
xor
sbb
outsl
add
outsb
pop
das
cmp
and
mov
jo
or
dec
cmp
mov
or
out
and
mov
or
faddp
cmpsb
movl
scas
ficoms
jle
movsl
mov
js
jns
add
mov
adc
addr16
jle
push
push
mov
sub
in
testl
pop
fmull
int
add
cli
push
dec
mulps
rclb
mov
mov
dec
pop
push
jge
add
xchg
popf
sub
mov
fcoms
push
or
loop
cmc
repz
das
mov
jno
or
jge
or
sbb
rolb
xchg
test
mov
pop
adc
and
sub
icebp
outsl
mov
int
xchg
push
aad
cmpsl
test
inc
lds
or
push
aaa
pop
in
popa
add
xchg
adc
call
aam
icebp
xor
mov
lret
insl
pushf
ficoml
add
pusha
sarb
xchg
pop
xor
cmp
cmp
inc
sub
out
ret
xchg
push
into
pop
xor
test
mov
push
sbb
mov
pushf
leave
jno
pushf
inc
cmpsl
mov
inc
divb
cld
push
dec
cmp
je
pop
clc
add
cmpsb
adc
fidivl
pushf
jbe
outsl
lahf
rcll
lret
cmp
movsb
test
push
push
dec
ljmp
scas
xchg
mov
mov
rolb
rcrb
or
inc
xor
jnp
rol
push
ret
cs
sub
mov
and
mov
inc
negb
pop
and
loop
inc
or
lock
cld
xchg
out
inc
jmp
loop
cmpsb
mov
loope
test
xorl
mov
pushf
mov
lea
sub
data16
mov
push
mov
xchg
mov
scas
or
and
jg
insl
out
pusha
ror
sbb
test
ror
cmp
xor
add
cmp
mov
adc
lods
push
or
out
shrb
add
outsl
test
pop
cmp
inc
cmc
ss
xchg
and
cld
push
fdivp
insb
and
imul
jg
cmc
pop
mov
divb
lret
aad
pop
adc
loopne
jl
into
test
fnstsw
pop
jne
into
jo
int
rclb
fldt
dec
lods
mov
sahf
mov
cmpb
jne
xchg
add
jo
sti
int3
mov
and
sbb
iret
cmp
sbb
icebp
sahf
inc
push
or
stos
jl
sbb
sahf
push
repz
inc
fbstp
xchg
pusha
dec
scas
cmp
add
out
test
push
inc
repnz
lcall
ds
dec
js
cmp
dec
xor
test
ret
push
jle
mov
cld
push
fcomps
mov
inc
ret
push
jbe
cmp
inc
insl
push
and
pop
lods
and
addr16
sbb
shlb
loopne
ret
movsb
jge
push
add
push
testl
out
jl
outsl
pop
sub
xlat
fmulp
pop
inc
dec
cmovno
shlb
mov
add
in
jae
dec
int
cwtl
sbb
sub
movsl
pop
inc
mov
cltd
mov
std
pusha
scas
in
mov
testb
xchg
leave
out
jge
fmuls
leave
jno
outsl
mov
andl
aad
lahf
xchg
das
movsb
shlb
imul
sub
xor
hlt
inc
lea
fwait
xchg
mov
frstor
xchg
pop
call
xchg
dec
sarb
mov
insl
outsb
into
ror
jno
mov
mov
mov
idivl
add
lods
push
inc
ss
push
hlt
dec
xor
enter
and
cmp
dec
push
movsb
push
mov
add
dec
dec
test
xchg
sub
jg
cmp
into
orb
out
pop
les
or
inc
and
inc
lods
lret
dec
aad
push
add
sub
lock
jns
mov
sub
jl
out
rcrl
cwtl
aad
clts
enter
cmpb
adc
sar
push
mov
adc
cmp
mulb
lods
sub
dec
xchg
or
jle
pop
xor
popf
popf
loope
sub
jmp
add
leave
add
into
dec
comiss
and
imul
jo
arpl
rcr
repnz
cli
es
push
mov
dec
cmp
jmp
lcall
fildl
iret
mov
ljmp
mov
ljmp
push
or
cmp
rol
mov
outsl
repnz
shr
clc
fists
xchg
add
inc
iret
fstl
scas
mov
jle
fidivrl
add
mov
rorl
mov
pop
sbb
or
movsb
scas
jno
adc
cwtl
rclb
call
arpl
or
or
pop
jnp
into
ret
dec
dec
pop
aam
and
mov
push
add
loop
pop
jae
ljmp
and
add
sub
mov
cmp
push
popf
pop
push
jne
cmpl
mov
mov
jmp
hlt
movsb
orl
mov
lret
ljmp
push
add
je
decb
cs
call
dec
and
aas
inc
in
cmpsl
pop
ret
mov
in
lods
fmuls
ds
js
aad
mov
add
fcmovb
push
lods
stos
push
subb
mov
mov
mov
inc
mov
ds
lock
mov
add
inc
ficomps
mov
cld
aas
lret
sbbl
enter
xor
pop
or
movsl
sub
push
cmp
or
ds
xor
mov
ja
and
mov
cmp
pushf
xor
icebp
mov
and
mov
rolb
cld
dec
ret
dec
and
fildll
pusha
sub
jbe
dec
xchg
xor
sbb
sub
mov
ljmp
into
les
shll
out
and
pop
sahf
test
cli
shrb
sbb
or
cmp
dec
push
mov
hlt
push
test
mov
sub
sub
pusha
or
adc
or
sbb
xor
cmp
imul
xor
icebp
icebp
cmp
lret
hlt
je
testb
xor
cwtl
jo
add
fucomi
shll
jge
mov
push
ja
push
mov
fiaddl
pop
sub
inc
hlt
adc
xchg
sbb
lahf
out
mov
push
addr16
out
stos
fdiv
inc
mov
add
sysexit
push
jae
adcb
in
inc
push
sahf
stos
or
mov
lock
mov
sub
lcall
iret
mov
popf
std
jecxz
aad
out
push
inc
andl
mov
inc
cwtl
xchg
add
xor
ret
xchg
lods
enter
daa
cmp
les
dec
and
int
decb
and
pop
das
cmp
out
dec
jecxz
inc
fisttpll
bound
inc
call
gs
push
sub
mov
popa
into
pop
rcr
test
or
shrb
sub
inc
pop
inc
aad
dec
pusha
test
mov
in
push
daa
scas
addr16
add
inc
adc
xlat
ja
and
std
stc
inc
adc
sub
cmp
add
lods
cs
pop
aam
jg
xchg
and
repnz
jne
sbb
dec
sub
sahf
divl
ret
xor
pop
mov
adc
pop
lea
mov
xchg
cwtl
scas
inc
fisubl
gs
in
dec
leave
mov
fsubs
mov
iret
icebp
sbb
pop
imul
movzbl
pop
jbe
pop
call
sub
stos
shr
jg
dec
mov
aas
dec
adc
loope
cmpsb
jo
scas
test
out
mov
int3
ja
inc
je
stos
sbb
inc
lods
cmp
xor
jle
xor
push
inc
pushf
push
fwait
in
nop
mov
fisubrs
subl
or
xchg
cmp
and
clc
lret
lahf
out
pushf
fiaddl
cld
xchg
mov
jmp
insb
cwtl
xchg
dec
mov
out
jl
scas
ds
sub
aad
lret
cltd
sub
mov
xchg
iret
xor
aam
dec
fiaddl
test
daa
mov
cmp
xor
add
cmp
lods
dec
push
leave
lds
mov
icebp
movl
xchg
push
scas
mov
sbb
movsb
or
fistl
in
xor
ss
mov
icebp
xor
aas
adc
push
sar
daa
inc
mov
out
fwait
push
cmp
or
lcall
jno
enter
inc
cmpsl
mov
outsb
and
into
lods
es
inc
pop
loopne
inc
jno
loopne
push
mov
lret
xchg
repz
in
mov
mov
scas
jmp
xchg
dec
test
jno
cmpsb
dec
or
lods
inc
je
dec
push
and
cmpsl
in
in
sbb
pop
adc
xchg
nop
lret
inc
mov
bound
sub
lret
mov
in
sbb
add
push
cmp
pushw
out
and
xchg
outsl
loopne
cli
mov
jecxz
loop
stos
jns
in
int3
ja
ret
in
adc
cmp
jo
std
inc
sbb
sbb
bound
daa
into
adc
push
mov
je
loope
inc
mov
sti
sub
mov
dec
test
add
insb
pop
pop
push
jl
xlat
pushf
ret
push
stos
lret
mov
xor
add
cld
loope
sub
filds
dec
loop
fiaddl
jmp
andb
inc
dec
sub
clc
mov
dec
mov
mov
adc
mov
int3
fwait
pop
imul
fwait
mov
pop
dec
cmp
add
roll
ds
mov
fmuls
lds
xchg
xor
xor
or
jb
mov
repz
and
jl
pop
mov
and
lods
notl
push
in
cmp
sbb
out
mov
jns
push
mov
dec
pop
jnp
pop
sbb
data16
das
adc
popf
mov
sarl
fldl
xor
sti
mov
or
and
xchg
adc
and
pop
pop
out
subl
dec
cmp
ja
mov
push
inc
jae
out
push
sub
scas
mov
xchg
sub
dec
pop
call
sub
into
pop
into
out
imulb
pop
fstpl
fcoml
hlt
push
ret
mov
andl
push
push
iret
es
ljmp
xchg
stos
movzwl
outsl
dec
adc
push
xchg
out
in
test
leave
cmpsl
xchg
xor
call
push
insb
pop
mov
aaa
mov
pushf
pop
in
mov
inc
xchg
mov
mov
ret
pusha
das
xor
pop
in
pop
pusha
movsl
arpl
mov
cmpsl
mov
or
iret
decb
mov
or
ja
jo
mov
xlat
adc
fwait
lret
cltd
aas
jl
pop
jb
or
dec
in
shrl
adcb
xchg
dec
xor
push
in
lods
sbb
jg
pop
insl
ss
icebp
adc
cltd
push
sti
lret
insb
xchg
lahf
pop
adc
inc
inc
sbb
sbb
mov
ds
adc
jbe
lea
pop
pop
lods
inc
sub
add
cmp
push
rclb
bound
loop
aaa
mov
cmpsb
stos
push
sbb
jns
sub
test
test
pusha
push
mov
add
int3
jne
fisubrl
dec
out
inc
lret
loopne
cld
mov
mov
cmpb
enter
out
xchg
stos
gs
cli
add
outsl
aad
mov
mov
or
out
imulb
push
and
jne
aas
xor
out
pop
xor
push
loop
mov
xchg
adc
push
lods
pop
shrb
mov
push
mov
xor
sub
push
jle
inc
out
inc
cmc
clc
cwtl
add
lahf
pop
or
pushf
movsb
pop
jns
pop
jmp
add
xlat
mov
xor
jne
aaa
cmp
cmp
aaa
insb
lahf
sti
jns
push
dec
xchg
mov
inc
fldl
xor
scas
shrl
pop
lods
aaa
rcll
cmp
das
mov
es
adc
cmp
adc
pop
sbb
fs
loope
out
pop
gs
dec
in
xchg
cmp
std
jo
sub
dec
mov
fidivs
push
sbb
xchg
and
push
push
std
jmp
cmpsl
push
imul
pop
dec
and
test
sahf
xchg
daa
cmp
cmc
pop
xchg
iret
jecxz
divb
or
push
repnz
cltd
jb
orb
insl
xor
dec
add
add
in
arpl
sub
pusha
mov
popa
sti
or
lret
push
stc
stc
mov
sbb
movsl
mov
lea
mov
xor
ds
mov
jmp
imul
rclb
dec
std
jae
dec
mov
and
into
cmpsl
dec
mov
adc
gs
bound
push
mov
sbb
cwtl
sbb
in
or
icebp
fstpl
pop
pop
lahf
shll
aas
inc
push
rol
push
push
pusha
add
or
pusha
mov
push
out
xchg
insl
ret
xchg
scas
dec
loop
movsb
pop
sbb
leave
cs
ficompl
roll
xchg
cmpsb
lret
mov
mov
adc
and
daa
fstpt
pop
mov
mov
sarl
cltd
fs
mov
es
add
inc
in
prefetch
or
dec
pop
cmpsl
mov
jb
mov
pushf
push
imull
jnp
int
fucomip
leave
mov
in
cmp
movsl
xchg
cmp
xchg
fsts
shr
stos
push
dec
sbb
xchg
sub
shll
pushf
daa
loopne
push
pop
movl
into
imull
ret
cwtl
out
loopne
cld
popf
and
dec
dec
cmp
loopne
xor
inc
daa
in
ret
shlb
sbb
ljmp
lcall
inc
inc
sub
inc
inc
sahf
repnz
cltd
pop
adc
ljmp
data16
cli
cmp
popa
xlat
push
adc
add
xchg
pushl
imul
cmp
lods
jno
fwait
testb
aad
cmp
mov
ss
aad
inc
cltd
sbb
fcomps
and
cli
pop
fidivrs
outsb
inc
cli
adc
popf
adc
ljmp
cs
testl
mov
mov
shl
loope
outsb
loopne,pn
aaa
shrl
and
mov
pop
dec
and
idivb
js
ss
iret
aaa
jmp
xchg
xchg
popa
sbb
mov
mov
mov
mov
mov
test
push
pop
jns
outsb
xchg
jne
in
push
pop
mov
push
jbe
int
sub
and
push
jnp
data16
push
push
add
scas
pop
mov
mov
sbb
rclb
inc
arpl
scas
or
mov
push
pop
je
rcll
push
cmc
mov
dec
and
sbb
pusha
and
scas
mov
jp
jns
adc
pushf
jnp
js
cmp
std
cld
xchg
cmp
xchg
mov
rcrb
adc
pop
push
fsubrl
sbb
xor
imul
dec
sbb
xchg
imul
inc
adc
ja
sub
int3
into
and
gs
mov
push
jae
in
pop
je
fisttpll
cmp
push
push
out
push
mov
sbb
xor
adc
push
scas
gs
and
dec
shlb
mov
push
push
mov
xchg
movb
out
test
mov
mov
push
hlt
push
or
sbb
mov
js
mov
es
or
xor
imul
cwtl
fwait
mov
sub
xor
mov
add
inc
lahf
gs
enter
mov
out
mov
push
pop
fwait
idivb
jo
lcall
pop
scas
pop
dec
dec
in
cmpsb
jmp
pop
adc
push
ljmp
mov
mov
mov
lcall
xchg
std
mov
cmp
sahf
dec
inc
dec
mov
mov
push
lods
pop
xchg
push
sub
lods
mov
aaa
jge
leave
into
cmp
sbb
in
cwtl
xchg
push
mov
cmp
lds
add
cmp
stc
dec
daa
sbb
pop
int
xlat
lret
orb
notb
mull
loopne
inc
mov
gs
mov
icebp
mov
popa
pop
in
sbb
movsl
push
push
pushf
sub
rclb
sbb
push
outsl
jmp
mov
in
xor
sarb
push
pop
fidivl
cmp
or
cmp
fnstcw
inc
xchg
subb
sub
add
fwait
push
enter
xchg
mov
mov
in
cmp
mov
bound
inc
ja
pop
test
inc
clc
arpl
adc
nop
out
ja
xor
mov
rolb
out
ret
roll
sub
rclb
stos
push
mov
adc
loopne
imul
cvtps2pi
xor
mov
jne
shlb
pop
dec
mov
xor
aam
das
bound
daa
lcall
xchg
dec
jb
sarl
xchg
mulb
test
loopne
je,pn
inc
pop
shrl
jmp
enter
mov
mov
call
sbb
cmp
and
lea
cmp
fs
mov
aaa
add
jecxz,pt
mov
xchg
cltd
pop
mov
pop
loop
addr16
lock
jne
fdivrl
aam
xchg
dec
jle
outsl
inc
inc
stos
sbb
inc
decl
fsub
jne,pn
mov
and
je
stc
push
ljmp
inc
push
push
mov
add
cmp
iret
cwtl
lcall
add
cmp
enter
insb
mov
test
ljmp
push
outsl
sub
xchg
pop
and
loop
loope
cmovns
pushf
pop
sub
xor
outsb
adc
pop
dec
je
or
lcall
mov
mov
adc
sbb
push
rclb
jb,pn
test
dec
push
xor
orb
xor
push
push
mov
rorb
nop
cmpsl
mov
sbb
or
ss
push
flds
sbb
mov
call
cmp
aad
test
mov
and
xchg
mov
inc
cs
jno
jno
mov
stos
mov
lods
push
call
es
pop
push
cmp
pop
cltd
adc
ss
inc
ret
imul
sub
sub
inc
into
and
stos
shll
nop
add
test
fs
xchg
shrl
mov
jne
loopne
mov
mov
mov
stc
cmpsb
movsb
shll
cmp
inc
imul
ret
xchg
ss
hlt
out
dec
fistl
ljmp
fistps
pop
or
lret
pop
cmpsl
cmc
mov
push
cmpsl
jbe
aas
pop
sti
shll
js
sub
out
daa
pop
testb
fsubs
mov
sti
loope
out
push
inc
pusha
aam
call
jo
pop
inc
shll
stos
gs
orl
push
int3
dec
adc
push
push
mov
mov
xchg
adc
cmpsb
outsb
pop
or
push
lock
mov
sbb
jbe
sar
push
pop
popw
push
mov
hlt
dec
mov
repz
scas
mov
popa
mov
aaa
test
ficompl
adc
call
mov
add
mov
push
jbe
xchg
xchg
mov
sbb
xor
push
adc
loopne
push
jl
loope
test
fistpll
aam
adc
mov
ljmp
jns
push
push
lcall
jecxz
cmp
leave
stc
lret
mov
mov
arpl
shlb
jo
push
pushf
dec
pop
mov
add
xchg
repz
stos
icebp
mov
aas
ffreep
stos
loope
ror
mov
js
arpl
mov
test
cmpsb
xor
and
std
or
in
mov
sub
pushf
addr16
test
pop
imul
jne
clc
repz
add
add
imulb
sbb
iret
inc
jl
fcomi
sbb
sub
and
mov
cmp
sbbl
or
push
in
les
or
add
or
and
mov
jbe
mov
inc
add
mov
std
xchg
or
enter
daa
inc
cli
inc
mov
in
mov
mov
lret
aad
adc
mov
mov
inc
dec
push
and
mov
imul
and
icebp
sub
and
push
aaa
cltd
cmp
enter
mov
xchg
mov
mov
xchg
cmp
xchg
push
popf
jno
inc
mov
pop
cmp
bound
std
and
xchg
outsb
xor
and
mov
add
sbb
pop
push
add
stos
lret
jmp
or
jecxz
nopl
ja
in
loopne
je
or
and
rcrl
inc
xor
inc
or
mov
in
mov
push
stc
sbb
adcl
sbbb
test
push
stos
test
or
mov
cmpsl
and
sbb
mov
pop
in
test
cs
pop
dec
int
sbbb
adc
pop
clc
adc
call
mov
push
pop
mov
in
push
daa
push
ja
mov
imul
outsb
mov
call
add
and
sbb
push
jecxz
dec
mov
cltd
or
mov
jnp
mov
cmc
lahf
push
push
and
mov
in
xchg
mov
sub
jecxz
aad
leave
mov
xchg
lret
pop
inc
push
mov
pushf
xchg
fbld
faddl
call
jecxz
loop
pop
mov
faddl
lret
loopne
push
mov
add
inc
xor
mov
loope,pn
push
push
pop
in
lahf
xor
or
in
sbb
fnstenv
test
iret
pop
or
in
pop
in
adc
arpl
add
fwait
push
cmpsb
jg
inc
pop
pushf
repnz
pop
fcomps
scas
scas
lahf
xor
mov
pushf
mov
es
pop
inc
pushf
jno
mov
xchg
mov
xchg
mov
out
iret
fwait
xchg
xorl
stc
pusha
out
bound
decb
pop
mov
fcmovnb
jge
rclb
and
lahf
or
mov
and
mov
popf
les
and
test
add
nop
xor
sbb
xchg
xchg
cmp
int
xor
dec
aas
inc
jmp
or
cwtl
and
imull
rclb
sbb
add
int3
test
adc
arpl
jb
and
pop
sbb
aaa
es
jns
icebp
lahf
stos
out
int3
fcoml
fbld
push
clc
cmp
loopne
out
and
jo
mov
mov
stc
dec
insb
sbb
mov
lock
push
movsb
cwtl
push
push
push
insb
lea
in
sbb
xchg
sahf
xchg
mov
jp
nop
in
sbb
mov
or
in
dec
bswap
cltd
div
popl
xor
loopne
jge
stos
xchg
rcrb
clc
insl
lods
aaa
rorb
stc
xor
cli
inc
xor
lock
add
dec
addb
cmpl
mov
shl
xlat
adc
jp
int3
popf
int3
popa
mov
jp
fs
xchg
bound
mov
popa
mov
stos
sarl
sub
adc
dec
test
pusha
not
arpl
scas
sbb
scas
dec
out
cmpsl
fsubrp
out
sbb
sti
stc
adc
inc
cmc
movsl
xor
jmp
sahf
mov
mov
dec
test
daa
outsl
push
imul
mov
jo
data16
lcall
fiaddl
mov
scas
xchg
in
cmc
adc
inc
xorl
fs
jnp
out
pop
add
push
xchg
mov
or
pop
mov
lcall
jecxz
insl
cmpsl
xor
aas
sbb
jb
xchg
xor
jecxz
inc
lea
daa
inc
add
mov
sbb
cmc
adc
fldenv
jge
jno
fdivs
add
jmp
or
xor
into
sarb
popf
mov
mov
pop
mov
adc
jmp
test
sub
jo
movsl
inc
or
loopne
mov
rorb
mov
stos
pop
and
stc
aad
loope
cs
mov
dec
push
jbe
pusha
jbe
or
mov
loop
sub
push
push
mov
dec
cmp
xor
and
mov
xchg
jae
fwait
sbb
adc
or
sbb
mov
sub
lret
add
mov
gs
jno
push
ja
jl
std
mov
push
out
scas
cmp
hlt
pop
movsb
push
incl
push
dec
test
adc
add
mov
sbb
push
out
xchg
jmp
push
pop
bound
xlat
movsl
push
lods
out
push
lea
dec
push
std
mov
xlat
ljmp
mov
cmp
popa
dec
push
negl
repnz
or
stos
push
mov
and
push
ja
pop
rcr
je
pop
test
push
cmp
mov
inc
xchg
dec
and
push
add
or
outsb
lcall
pushf
push
ficompl
sub
cwtl
outsb
ja
enter
lea
fucomp
in
daa
jmp
dec
test
sbb
cmc
nop
sahf
mov
xchg
leave
imul
pop
enter
loop
jnp
das
inc
nop
mov
jns
in
sti
cmpsl
xor
into
adc
mov
enter
in
push
xlat
shll
cmc
ljmp
cwtl
inc
dec
sbb
or
dec
adc
add
ds
inc
sub
xor
xchg
sti
mov
stc
xchg
or
jnp
cmc
push
jo
add
icebp
cmp
rolb
mov
mov
push
jno
sbb
lods
cs
push
pop
and
mov
jmp
out
int
sbb
xor
aas
popa
cld
jp
push
hlt
repz
mov
aaa
inc
out
je
sbb
out
mov
and
sbb
dec
xchg
rcll
adc
negl
loop
dec
mov
or
rcll
out
cmp
stc
push
clc
cwtl
mov
fidivrs
jb
js
imul
out
fcompl
sbbb
cmpsb
cmc
xor
ficompl
inc
in
push
add
sub
xor
mov
insb
lock
jns
mov
shr
jae
das
dec
fbld
cli
imul
test
int
jnp
out
jne
push
add
lds
add
pop
div
imul
ss
sbb
mov
lcall
push
arpl
push
out
xchg
cmpsb
adc
cmpsl
fistpll
aam
leave
or
add
jle
add
push
addl
repz
arpl
sub
lret
imul
push
pop
add
mov
xor
and
jbe
lods
cmp
xchg
lret
idivb
xor
lret
push
repz
sbb
cli
icebp
stc
cltd
ss
cmpsb
movsb
imul
mov
cmp
shll
sbb
sbb
out
ja
dec
sbb
mov
sbb
jp
js
fidivrl
pop
insb
out
sbb
xchg
sbb
test
cmp
inc
cmp
call
aas
inc
out
adc
inc
push
xchg
cmc
sbb
stos
adc
push
or
mov
push
fldl
jne
inc
iret
cs
mov
mov
rorl
mov
cmp
xchg
jl
adc
int3
enter
int
xchg
in
js
sbb
xchg
insl
jbe
mov
pop
ljmp
addr16
push
movsb
call
test
sbb
mov
add
cmp
scas
sti
outsl
jge
fs
mov
pop
inc
push
arpl
sub
popf
rcr
aas
jg
ret
push
loopne
adc
cmp
mov
dec
push
ret
lods
push
xor
push
cmp
xchg
and
cld
mov
jge
push
arpl
hlt
pushf
arpl
scas
mov
push
cltd
je
add
es
cmp
pop
into
mov
xor
dec
mov
adc
rol
cmp
and
out
popa
enter
rol
fisubrl
in
mov
scas
and
test
jno
and
popa
inc
jae
je
into
test
xor
fs
insb
pop
ja
int
test
mov
nop
lcall
cmp
es
repnz
jle
mov
jno
or
dec
gs
test
cld
aas
sarl
dec
data16
mov
dec
lret
jmp
int3
aam
jmp
popa
movsl
es
pusha
jbe
push
push
prefetcht0
sub
mov
xor
mov
inc
sub
sti
add
or
cmpl
cltd
pop
mov
ss
movsl
cmp
jl
cmpsb
xor
sbb
aaa
stos
sarb
call
dec
fstpl
lret
push
negb
lcall
mov
pop
fsubrs
notb
jecxz
and
ret
xchg
add
scas
or
daa
push
xchg
inc
movsb
push
sahf
xchg
stos
dec
adc
idivl
pusha
sti
int3
cwtl
imul
fnstenv
in
inc
push
push
das
lock
xor
mov
movsl
out
mov
jecxz
pop
cld
movsb
push
pop
sbb
push
xorb
aaa
mov
into
jle
cmp
popf
dec
mov
adc
cmpsl
sbb
leave
in
push
jl
sbb
cwtl
jns
lahf
dec
pop
xchg
rol
xchg
fcompl
jno
jmp
push
and
jge
out
aas
cli
call
leave
dec
inc
int3
mov
push
inc
testb
loopne
xlat
and
mov
clc
out
xor
out
mov
push
shrb
adc
movsb
js
ficoml
cmpl
mov
xchg
mov
pop
mov
fwait
or
pop
xor
jne
cltd
jge
or
cmc
sahf
fisttps
test
subl
or
cld
cmc
sub
cmpsb
mov
daa
add
jo
adc
add
test
movb
pop
adc
int
xor
aas
mov
pop
loop
dec
push
push
repz
mov
push
xchg
add
std
fisttpll
xorl
andb
cmp
jo
out
push
test
out
out
iret
lds
sub
sub
inc
repnz
pop
xchg
aaa
adc
push
adc
cmp
pop
jg
mov
insl
nop
pushw
imul
mull
lret
dec
inc
sub
bound
jp
dec
jae
add
jno
cmp
aas
fcmovbe
inc
test
dec
fcmovnb
or
push
movsb
dec
lret
in
inc
pop
faddp
mov
jo
pop
fisttpl
cmpsl
test
mov
lcall
addr16
jo
mov
mov
cmp
test
out
daa
add
mov
bsr
stos
in
or
nop
push
aas
test
cmp
out
ret
or
pop
mov
arpl
popf
shr
cmp
jb
add
xor
jne
dec
adc
push
sbb
sub
ds
xchg
shlb
xlat
jne
test
xor
cmpsl
mov
add
ret
test
fcomps
mov
sbb
inc
stos
sti
insb
or
jg
test
aaa
and
sbb
sub
and
fdivs
jno
mov
fwait
dec
push
mov
sbb
testb
inc
add
in
imul
lods
push
push
push
dec
mov
add
cmpsb
les
in
mov
mov
stos
ror
inc
sub
or
faddl
ss
js
dec
out
xchg
dec
dec
andb
dec
pop
pop
xor
mov
ja
test
sbb
push
push
mov
inc
jne
mov
push
push
sahf
cmp
jne
lcall
or
sti
pop
dec
add
std
mov
cmp
xchg
add
lret
outsb
shr
imul
pop
add
mov
mov
push
pop
inc
das
and
lds
fwait
push
push
out
push
leave
add
sahf
inc
mov
scas
push
mov
stos
enter
mov
or
testl
movsb
test
arpl
add
cmp
mov
lea
add
loopne
and
add
cwtl
fs
int3
jae
xchg
js
sub
push
and
lea
xchg
test
inc
cltd
into
push
into
fimull
popa
xchg
loope
mov
xchg
lods
inc
insb
add
scas
stos
pop
rclb
lds
add
mov
aas
mov
add
fdivs
jg
scas
xrelease
lea
mov
shlb
adc
xlat
cs
sbb
insb
push
mov
pop
mov
sarl
mov
push
addr16
xor
pop
dec
jl
mov
jbe
mov
xchg
and
sub
das
and
arpl
push
imul
test
into
cmpsb
mov
sbb
cmp
mov
ljmp
cli
scas
and
xor
es
push
fbld
aad
icebp
inc
push
cld
xor
test
lcall
out
sbb
aas
sbb
test
jl
sub
xchg
xchg
arpl
push
sahf
mov
loope
fs
or
jns
sub
pop
jnp
add
xchg
inc
mov
xchg
popl
test
sbb
fwait
mov
sbb
dec
int3
les
test
mov
inc
nop
fbstp
popa
or
jmp
repnz
imull
jne
cli
insb
icebp
cmp
or
test
nop
addl
ljmp
stc
inc
pushf
out
imul
or
int
adc
pop
ret
mov
inc
jge
loope
sub
jmp
stc
xor
sbb
push
and
mov
out
shll
stos
shll
ror
ficoms
stos
push
inc
jae
rorb
jno
mov
cmp
adc
orl
xchg
sti
out
data16
mov
dec
and
push
sbb
sub
repz
pop
mov
filds
pop
cli
imul
sbb
pop
lock
lock
add
int
sbb
int
in
stos
scas
je
push
xchg
jmp
jle
daa
lds
call
cld
xchg
imul
cmp
add
adc
push
sub
cwtl
sarb
cmp
sub
add
arpl
lret
jl
push
cltd
repz
pop
mov
xchg
mov
adc
adc
loope
push
aad
in
out
mov
cmp
pop
sarb
xchg
aaa
mov
pop
test
arpl
rcrl
or
pop
xor
mov
xchg
push
fldt
insl
in
inc
adc
push
jb
test
jp
xchg
xchg
pop
sbb
inc
mov
fbstp
mov
call
outsb
imul
pop
dec
add
rcl
sub
popf
and
push
nop
das
repnz
xchg
and
adc
add
ss
jmp
and
xchg
lahf
cmpsl
ret
adc
testb
and
cmp
lcall
mov
sbb
lret
iret
nop
or
lret
and
test
jae
flds
xchg
and
stos
mov
sahf
loopne
outsl
push
sub
jno
cmpsb
cmpsb
rcrl
xor
rcrl
stc
pop
jge
xor
inc
pop
xchg
rorb
popa
adc
add
or
and
mov
push
shll
out
icebp
pop
out
inc
xchg
sarb
adc
sbb
mov
xorl
cmc
dec
cmc
insl
jne
mov
sub
movsl
cmc
shrb
dec
or
push
mov
sbb
xchg
pop
mov
mov
pusha
jo
je
movsl
insl
dec
jge
enter
or
daa
xlat
xchg
cli
pop
dec
sbb
les
out
test
pop
sub
ds
rcll
push
or
popa
mov
cmp
xchg
rcl
jne
xchg
mov
sub
rcrb
adc
fsubp
cmp
imul
cmp
ja
call
sbb
inc
push
add
jl
jl
cmova
inc
mov
in
mov
sub
les
pop
insl
cli
jbe
ret
and
dec
aad
cltd
repnz
or
sub
xor
outsl
stos
dec
incl
js
hlt
pop
call
lret
hlt
cmpsb
cld
pop
ja
mov
cltd
enter
sbb
sbb
test
jg
dec
inc
cmp
or
adc
sub
dec
adc
sbb
fistpll
into
sbb
push
mov
mov
jecxz
pop
pop
mov
mov
fisttpl
mov
xchg
inc
inc
pop
vminpd
pop
or
adc
adc
or
pop
orps
nop
xor
shrl
test
mov
xor
sbb
out
int3
jmp
ret
push
dec
outsb
jne
fcompl
sbbl
cmp
push
mov
ret
leave
mov
popf
or
adc
push
loopne
pop
pop
psllw
jmp
cld
dec
test
mov
and
out
adcb
inc
out
lock
xchg
jl
test
mov
xchg
test
jnp
clc
aam
dec
into
or
mul
arpl
sarb
mov
xchg
pushf
xchg
jns
repnz
lcall
movsl
fcos
pop
repz
test
jo
cmp
cltd
and
or
inc
dec
jecxz
pusha
mov
scas
bound
xor
pop
not
aas
test
ucomiss
jnp
jo
leave
test
cmpsb
add
lods
pop
jne
insb
adc
lock
sub
fwait
ja
cmpsl
inc
sub
cld
imul
mov
fsubs
inc
mov
dec
rcrb
jne
inc
mov
add
sarb
push
dec
cmpsb
cmp
pushf
mov
fadds
jae
xlat
jno
mov
mov
fistps
xchg
outsb
mov
push
jae
mov
je
popa
sbb
fsubl
lret
jl
dec
cli
imulb
leave
and
scas
pop
dec
cmc
lcall
jg
xchg
arpl
inc
pop
ja
mov
stos
inc
pop
rorl
push
pusha
insl
or
stc
pop
inc
popf
lea
fiaddl
xchg
mov
ds
fists
into
pop
mov
ljmp
and
cs
stos
mov
push
stos
sbb
jae
out
push
fidivrs
cmc
scas
xchg
fdivrs
mov
pcmpgtd
lods
fsub
mov
nop
pop
push
lods
movsb
and
sbb
lods
adc
loop
test
fs
fcmovnu
in
push
test
or
cmp
mov
int3
pop
mov
sahf
jge
pop
mov
sahf
mov
or
xchg
or
jmp
pusha
ret
jecxz
loopne
xor
out
test
roll
dec
xchg
add
xchg
test
adc
push
jae
lock
jno
sahf
dec
addr16
push
imul
lea
shll
jg
jns
lcall
inc
enter
dec
push
jecxz
xchg
push
mov
jp
mov
cmp
and
repnz
adcb
fbstp
lods
xchg
sub
adc
pop
sti
sub
jge
add
inc
xchg
push
sbb
xchg
xor
add
lods
stc
lods
test
add
insb
imul
loope
pop
loope
stc
call
push
lahf
scas
push
sbb
lds
cmp
outsb
dec
or
ljmp
and
mov
aad
daa
cmc
rcrl
in
xchg
inc
in
inc
in
inc
or
cwtl
and
imul
mov
sub
sbb
or
xorl
stc
pop
inc
je
fadd
jb
push
pop
mov
iret
rolb
loope
fneni(8087
dec
push
jl
push
lcall
adc
mov
mov
fwait
cmp
pop
xchg
add
lds
fnstenv
sub
inc
sbb
pop
scas
pop
lods
push
push
and
add
jp
cmp
adc
add
nop
or
push
push
mov
aaa
shll
jg
jo
dec
dec
fwait
sub
sbb
mov
mov
pop
in
or
aas
xchg
in
pop
ja
orl
mov
insb
push
and
aas
aam
cmp
dec
popa
and
cmpb
cmp
clc
cmp
jnp
fdivrs
mov
test
dec
inc
inc
es
stos
adc
sbb
mov
addr16
add
sub
xor
dec
cmp
adc
call
in
test
pop
pop
out
idivl
xchg
pop
pop
fwait
mov
dec
sbb
fildl
fwait
in
add
fcos
push
cld
lock
shlb
and
jbe
aad
mov
mov
aas
pop
hlt
lahf
fwait
sub
jb
add
jns
xor
in
sbb
jle
adc
cmpsl
cltd
mov
das
paddb
arpl
ret
int
test
iret
dec
pop
imul
cwtl
push
pop
adc
push
xlat
fsubrs
jns
or
jne
or
mov
dec
pushf
notb
cltd
dec
test
in
sub
aas
loope
jae
cmp
mov
sub
data16
mov
xchg
repz
pop
sbb
fcoms
fistpl
inc
fidivrs
fstpt
mov
cmp
add
dec
pushf
fadds
arpl
jno
jge
push
popf
inc
sti
xlat
fcmovnbe
ret
xlat
fimull
test
mov
push
fucomp
dec
cmp
nop
xlat
dec
jns
mull
adc
pop
or
cmp
or
adc
mov
fnsave
rolb
cmp
or
or
xchg
and
jle
pop
lods
sub
xchg
testb
clc
inc
pop
incl
dec
lock
dec
das
add
insl
add
cmp
loopne
xor
xchg
stos
jg
xlat
sbb
out
mov
push
iret
add
test
sbb
mov
push
loope
adc
loop
xor
cmp
nop
pop
push
sahf
jns
stos
cs
xor
pop
popa
mov
mov
aad
push
mov
test
in
cmc
mov
push
xor
sub
fnstsw
pushf
nop
lahf
int3
push
mov
pop
add
lcall
pop
lahf
adc
out
or
aas
sbb
pop
pop
outsb
inc
lds
mov
cwtl
xor
xchg
aad
xor
mov
scas
lcall
jl
xchg
int3
mov
mov
ret
push
insb
push
hlt
sti
jecxz
std
sbb
hlt
inc
pop
into
jb
pop
add
mov
cs
jbe
mov
pop
sub
sbb
cmc
ljmp
pushf
mov
frstor
repnz
cmp
mov
mov
add
adc
andl
inc
hlt
xchg
pop
fistl
push
push
aas
xchg
xor
sub
xchg
sub
adc
mov
dec
mov
jnp
mov
push
jnp
pop
scas
or
mov
aad
insb
mov
push
fs
jo
mov
cli
scas
or
cld
loope
mov
icebp
insb
je
sbb
scas
mov
imul
pop
enter
movsb
shll
aad
mov
adc
add
push
cmc
loop
daa
or
aaa
sarb
jno
add
test
aam
lcall
test
jp
lcall
jae,pt
stos
sub
sub
imul
cwtl
js
lahf
xchg
mov
mov
imul
pusha
push
iret
outsl
and
and
push
sarl
std
cltd
repnz
fstpt
loopne
xor
mov
push
sbb
cmp
adc
inc
inc
iret
pop
rcrb
dec
data16
adc
xchg
sub
sub
movsl
test
sbbb
sbb
xor
jmp
mov
scas
xor
dec
das
cmp
push
popa
mov
inc
scas
mull
fwait
push
fnsave
cmp
inc
jl
arpl
leave
test
stos
outsb
xchg
cmp
outsl
push
mov
lahf
mov
sub
xor
movsl
and
sub
movsb
mov
lret
sbb
ds
and
adc
mov
lret
push
pop
or
inc
imul
push
sub
mov
stos
and
cmc
xor
and
mov
icebp
fwait
sbb
jo
sahf
cmp
leave
aaa
mov
in
mov
scas
sarb
stc
inc
inc
inc
je
mov
aad
dec
inc
stc
popf
pop
jge
stos
cmpsb
popf
fdivr
add
dec
xor
std
loopne
cmp
jns
fimuls
test
scas
jmp
adc
fucomip
or
sbb
test
sub
pop
popa
insl
das
xor
cmc
xchg
adc
aam
shlb
test
sbb
or
mov
test
sti
adc
adc
pop
fdivrs
xchg
lsl
push
nop
xlat
sbb
out
push
pusha
push
rorb
das
in
inc
mov
fdivrl
fs
loope
xchg
or
mov
es
in
pop
ss
fisubs
mov
jo
mov
in
xchg
gs
xchg
sub
cmp
mov
add
sub
jmp
icebp
jne
and
fstpl
sbb
jp
mov
lret
ljmp
mov
and
imul
inc
pop
mov
addl
divl
jo
push
mov
jp
jae
cmp
jne
fistpl
dec
popa
xchg
ds
xchg
das
dec
in
sbb
jmp
pop
xchg
mov
jne
or
movsl
xchg
aam
sbb
inc
mov
cmc
mov
pop
pusha
xlat
jno
xchg
shll
and
mov
enter
outsl
shr
test
in
jp
sbb
in
outsb
cmp
sti
inc
sub
aam
les
or
mov
fcoms
push
jp
sbb
jp
test
daa
out
addb
insb
jb
jne
int
in
out
add
and
sub
jnp
xchg
xor
inc
push
stos
and
jle
dec
aas
fldcw
jnp
movsb
lock
aad
popf
adc
cltd
movsl
mov
loopne
pop
cmp
data16
dec
mov
pop
insb
push
bound
and
push
dec
xor
mov
mov
push
mov
aam
lret
add
loop
rcrb
mov
aam
mov
call
sub
lcall
pop
mov
fdivr
and
and
or
jbe
sbbb
adc
add
idiv
mov
sub
cltd
sub
xor
fucomi
dec
outsl
inc
mov
out
and
and
and
ficomps
sub
sbb
mov
or
lock
lcall
bound
addb
jno
add
xor
xor
add
dec
imul
mov
aam
fldt
leave
cs
pop
ja
aaa
into
push
xor
push
push
stos
icebp
cmp
push
or
jns
shlb
or
mov
sub
arpl
mov
ljmp
mov
shrl
mov
xor
inc
std
mov
cmovne
mov
add
fsts
add
mov
inc
out
mov
add
arpl
sub
aad
inc
outsl
mov
adc
lea
out
enter
lret
cld
subl
mov
shrl
add
xchg
mov
rcrl
fadds
inc
inc
fadds
inc
aam
jnp
imul
mov
xchg
cmpsb
mov
pop
in
rcrb
jl
push
cmp
das
arpl
lods
pop
push
cmpsb
and
xadd
ret
jle
ds
in
bswap
das
scas
jns
mov
dec
jo
mov
pop
cwtl
xchg
rcr
shll
push
mov
push
sbb
fdiv
adc
mov
and
enter
mov
lret
xchg
sub
adc
dec
xor
xchg
mov
cs
add
test
out
sbb
or
popa
mov
call
sub
xchg
addb
frstpm(287
mov
mov
xor
xchg
jbe
xorl
stos
inc
pop
out
pushf
js
or
and
faddl
pop
or
inc
jp
add
lret
imul
rcrl
push
cmc
ss
out
fwait
aam
shlb
aam
mov
icebp
loope
pushf
jo
addr16
push
adc
xorb
nop
push
out
test
fbstp
bound
test
or
pop
xchg
mov
lcall
out
sti
or
mov
jne
cmc
sti
mov
clc
jnp
mov
pop
add
aaa
sub
push
mov
mov
xchg
inc
sarl
xchg
out
ret
mov
inc
push
adc
mov
jb
push
test
fimuls
in
add
rol
push
cli
add
cmpsl
in
xchg
lods
xlat
stos
pop
out
filds
jae
imul
fmul
add
cmpsb
loope
push
mov
cmp
mov
lods
sahf
mov
lcall
and
mov
mov
out
in
ljmp
std
jo
push
stc
cmp
pop
loop
nop
arpl
push
mov
push
notb
mov
cwtl
add
xor
dec
dec
pop
and
cmp
pop
daa
jne
and
xor
in
jmp
xchg
scas
aad
mov
into
lods
fstpt
jns
inc
inc
ret
jl
xchg
mov
je
fadds
jnp
bound
dec
sbb
jo
cmp
cs
inc
mov
add
ret
inc
loopne
arpl
mov
mov
jb
mov
or
inc
pop
cmpsb
clc
hlt
in
daa
scas
sub
loop
ss
xchg
adcl
jb
iret
negl
packuswb
mov
and
jmp
int
ja
pop
out
and
sbb
add
lcall
xchg
cld
int
das
popf
xor
push
cltd
mov
push
dec
jnp
sti
pop
repnz
ja
xchg
push
jbe
push
test
pop
ret
jo
and
aam
jmp
mov
repz
cmp
mov
rorb
das
xor
jge
or
clc
dec
xchg
jne
mov
in
mov
mov
sub
push
and
jae
jmp
jle
iret
ds
add
dec
pop
jmp
btr
std
or
mov
icebp
sti
pop
mov
and
popa
mov
adc
xchg
mov
adc
sub
ret
push
aam
inc
test
jecxz
cwtl
loope
daa
mov
sbb
mov
or
dec
mov
dec
jle
xchg
add
cwtl
fdivrl
add
inc
jg
jb
frstor
jne
jo
and
xor
aam
ficoms
inc
mov
xchg
stos
frstor
aam
js
in
mov
addr16
fwait
jbe
inc
lods
sahf
inc
cltd
js
xchg
mov
pop
cld
cmp
sti
outsb
stc
add
xor
jecxz
scas
mov
add
inc
lcall
mov
jg
xchg
stos
push
mov
addr16
ja
out
inc
loop
imul
ja
cmp
loop
sub
ret
hlt
mov
nop
dec
sbb
bound
mov
add
push
outsb
lods
cmp
jp
push
or
lret
xor
pop
sub
add
pop
lock
hlt
mov
addr16
cmc
dec
mov
lock
aaa
or
mov
stos
imul
adc
xchg
inc
and
mov
jns
call
add
sub
adcb
arpl
xchg
dec
jne
jmp
adc
test
sti
out
ret
stos
inc
push
lods
sub
mov
daa
or
adc
les
adc
dec
push
stc
or
nop
add
shrb
mov
push
and
adc
adcl
adc
mov
pop
int
xchg
hlt
and
pop
icebp
and
mov
push
movsl
pop
insb
dec
cmpsb
push
adcb
cmp
out
pusha
cmp
repnz
lahf
push
jl
cmp
inc
iret
jmp
mov
fbld
cwtl
andb
mov
idiv
imul
sbb
sbb
jnp
cmp
sbb
push
stc
mov
dec
push
adc
lods
sbbb
call
movsl
dec
in
and
xlat
lcall
loop
cmp
outsb
cmp
lock
add
pusha
addr16
or
xlat
les
lock
inc
mov
les
cltd
and
lahf
inc
insl
or
loopne
cmpb
sbb
enter
mov
imul
ret
test
push
int
pop
adcl
mov
sub
fnstsw
sub
lcall
loopne
rcrb
aad
pusha
mov
cmp
push
ficompl
sbb
mov
jne
hlt
arpl
sbb
in
dec
lock
icebp
add
int3
cltd
push
movsb
mov
mov
xchg
jecxz
jle
xchg
mov
in
xor
aaa
addl
aas
xchg
fnstcw
outsb
sbb
or
xor
ss
and
es
adc
xorb
cs
pop
add
loop
xchg
inc
xchg
mov
xchg
and
leave
xchg
xor
cmpsb
xor
ficoml
ljmp
scas
sub
daa
pop
inc
jbe
sub
loopne
inc
add
sbbb
leave
xchg
loop
cmp
in
movsb
repz
push
mov
fwait
add
mov
add
cld
cmp
sbb
lods
adc
jmp
jo
add
ret
add
pop
popf
stos
in
inc
fs
mov
in
aad
fadds
cmp
fistpl
adc
shr
aaa
fldcw
push
ljmp
cwtl
rolb
add
scas
cmp
in
xchg
xchg
sahf
xor
mov
and
lods
bound
lret
test
jns
in
sub
das
mov
scas
out
mov
movsl
scas
xor
jne
mov
pop
in
sub
sub
jmp
ret
div
jge
in
fnstsw
scas
dec
notl
fisubl
push
stos
cmp
xchg
pop
sub
add
inc
fstl
sbb
cmp
ret
cmpsb
aaa
cmp
ja
iret
push
add
icebp
ss
cmc
jb
fimull
in
cmpsl
mov
aas
ds
dec
popa
mov
inc
dec
push
lods
cs
and
adc
outsb
imul
and
and
pop
xor
shlb
pop
es
rclb
pop
sahf
rorl
enter
pop
subl
data16
inc
sub
dec
xchg
sbb
and
adc
or
mov
inc
movsb
inc
xchg
daa
push
fcoml
xchg
jns
aad
mov
pop
cmp
add
imul
inc
push
or
loopne
cmpsl
xorl
repnz
into
pop
testb
insb
dec
dec
shll
mov
mov
adc
test
xor
aas
push
mov
pop
fsubs
sbb
mov
and
sahf
pusha
mov
dec
cmpsl
sbb
call
icebp
adc
and
in
jle
pop
sub
rcrl
cltd
notl
mov
or
fstp
pop
in
inc
cld
jmp
sub
mov
hlt
xchg
pop
sbbb
jmp
jnp
add
lods
inc
stc
je
xorl
out
mov
inc
popf
jle
std
adcl
pop
xor
cmp
lods
int
out
pop
arpl
mov
loop
sub
in
cmp
dec
mov
lock
push
sub
cmp
adc
pop
popf
mov
mov
cmpsl
aad
dec
and
js
sub
sub
mov
stc
int3
sub
add
adc
arpl
stos
xor
cmp
lock
sti
pop
mov
dec
and
dec
inc
sbb
jg
sahf
mov
lcall
test
inc
mov
stos
movsl
mov
dec
add
rorb
jbe
andb
flds
movsl
mov
xchg
psubusw
nop
fistpl
leave
stos
dec
movsb
roll
adc
mov
mov
jmp
adc
loop
int3
mov
dec
jb
push
jp
cli
adc
idivb
sti
mov
jge
test
dec
or
xor
xchg
mov
pusha
xchg
movsb
ljmp
daa
add
mov
outsl
inc
hlt
fbld
cmp
sbb
out
fmul
add
pop
mov
xlat
popf
fnsave
push
xor
jno
cli
mov
push
loopne
loop
mov
adc
shr
dec
push
mov
in
js
stos
mov
cwtl
push
inc
iret
adc
clc
lahf
xchg
push
mov
jo
lods
jg
popa
movsb
cmp
fdivs
lcall
xchg
jle
movsb
adc
push
mov
lcall
call
pop
imul
sbb
cmp
mov
clc
cli
stos
mov
cmpsl
adc
rcll
xchg
hlt
add
cmp
pop
mov
mov
ret
or
xor
push
mov
loopne
fnstsw
ja
pop
lock
outsl
add
test
adc
xchg
pop
or
push
mov
test
mov
pop
mov
lret
jae
mov
sbb
outsl
inc
lret
into
add
mov
lods
lods
mov
or
cmp
add
pop
push
nop
cli
shll
mov
mov
rol
fdiv
cmp
ficompl
or
cltd
xchg
jne
jb
push
mov
add
in
testl
push
iret
dec
rcr
push
or
mov
fs
cmp
add
shll
or
dec
mov
and
cld
mov
sahf
lret
js
dec
int3
sub
xchg
add
push
xor
sub
mov
xchg
or
mov
lock
cli
call
sub
xchg
xchg
mov
scas
jae
mov
sbb
mov
jle
or
andl
dec
xor
and
push
jle
in
aam
leave
pop
ja
mov
inc
lock
sub
fistpll
sub
loope
add
scas
rcll
cmp
test
mov
fstl
lcall
stos
nop
push
ret
stos
aam
shlb
aaa
or
adc
mov
mov
cltd
adc
stos
fisubrs
mov
pop
xchg
scas
xor
add
and
push
add
mov
inc
rcll
sbb
inc
jp
mov
mov
lret
popa
cltd
sbb
shrl
test
adc
or
sahf
push
lods
cld
adc
mov
jg
push
inc
scas
mov
sub
ja
sub
xor
push
lahf
lret
movntps
in
outsb
jo
mov
mov
push
bound
dec
bnd
pop
cmp
pop
push
lock
xor
loope
pop
push
incb
out
lret
lods
pop
incl
cmp
cs
ficoml
jle
jno
push
in
xchg
mov
stos
out
sbb
add
ds
jmp
jne
or
inc
push
loop
int
or
xchg
dec
sbb
mov
inc
sub
psllq
lods
inc
repnz
mov
jecxz
out
lret
jecxz
aam
jbe
lret
push
jle
sahf
adc
int3
sub
and
daa
push
and
pushf
push
ret
jecxz,pt
jle
mov
xor
push
andb
pop
push
cltd
jmp
addr16
imul
dec
sub
scas
sbb
push
movsb
leave
mov
jne
push
mov
sbb
int3
inc
push
dec
push
lahf
mov
stos
mov
sbb
jno
sbb
push
fs
popa
ret
mov
fs
inc
and
mov
das
movsb
filds
sbb
push
out
call
loop
addl
mov
mov
in
add
dec
or
mov
xchg
add
sbb
pop
nop
aam
movsl
gs
mov
popf
std
scas
data16
fwait
arpl
pop
mov
mov
lret
and
aam
mov
or
outsb
push
dec
sbb
dec
adc
sahf
insl
pop
jae
pop
xor
test
ret
hlt
jge
inc
xchg
pop
sub
subb
jle
sub
mov
inc
adcl
mov
loop
int
out
insl
cli
cmpsl
pop
or
in
push
test
mov
daa
inc
inc
hlt
aaa
adcl
jno
out
in
inc
sbb
mov
mov
jge
adc
xchg
add
jno
xchg
fstpt
push
push
pop
ret
jge
rolb
xchg
adc
jl
pop
sub
pop
jmp
or
out
insl
ljmp
outsb
clc
aaa
sbb
pop
jmp
stos
pop
mov
push
fsubs
fwait
mov
cmc
pop
repz
or
jns
adc
xchg
or
data16
negl
adcl
adc
mov
outsl
push
push
mov
notb
fcoms
out
xchg
popa
jb
mov
and
fwait
cmp
push
add
sub
mov
push
mov
call
sbb
jnp
std
push
inc
and
dec
inc
push
xor
ja
pop
jb
mov
dec
insl
add
xor
out
xchg
xchg
push
lcall
and
inc
pop
adc
test
call
mov
popa
sub
and
jae
popa
aas
xchg
cs
inc
test
stc
sbb
lods
sti
jns
and
add
jg
mov
pop
and
sub
add
cmp
adc
addl
inc
cmpsb
mov
cwtl
ret
xlat
push
nop
cmp
ss
xchg
into
fidivl
lcall
test
and
das
cmc
xchg
sbb
mov
xchg
push
test
dec
mov
push
loope
cmp
xchg
in
inc
or
ss
nop
insl
imul
and
adc
dec
cmp
int3
int3
add
jno
cmc
xchg
jg
mov
in
pop
fists
inc
lea
adc
loope
sarb
xor
or
or
daa
xor
fidivl
stos
imul
push
jle
adc
hlt
outsb
xor
inc
xchg
add
dec
gs
push
hlt
fwait
adc
xor
add
arpl
add
mov
mov
pop
xchg
mov
lock
xchg
outsb
int3
shl
inc
adc
cmp
sub
mov
xor
int3
mov
jns
loopne
movd
daa
sbb
or
sbb
loopne
pop
aad
sub
roll
jo
bound
dec
mov
call
adc
dec
js
push
pop
aam
mov
mov
fcmovne
mov
mov
cld
xchg
cmp
mov
push
iret
mov
xor
xor
in
repz
xchg
gs
outsl
jg
lret
in
push
jmp
push
aam
adc
jb
loope
mov
jmp
jmp
jg
and
and
dec
sub
pop
mov
pop
enter
js
xchg
sbb
test
pop
sub
and
movsb
lods
insb
and
and
sti
out
mov
push
rorb
cmp
add
popa
cmp
mov
pop
and
jno
les
fadds
popa
addr16
sbb
scas
push
push
je
sarl
jnp
orl
lret
mov
fstpl
ficompl
cmp
fcompl
mov
and
inc
mov
fwait
xchg
popf
arpl
sbb
push
jge
cmp
js
xchg
and
cmpb
fs
and
mov
inc
scas
inc
iret
mov
incl
dec
mov
mov
mov
out
dec
add
inc
jmp
ljmp
sti
jecxz
sbb
or
test
mov
lock
push
lahf
lret
pop
lret
xchg
dec
out
sbb
add
int
mov
fsin
sub
xchg
lods
mov
xchg
add
dec
imul
es
test
xchg
popa
inc
imul
cmpsb
mov
jns
and
popf
xchg
data16
add
stc
cld
fsubrs
jl
mov
sub
adc
popa
pop
cmp
aaa
fdiv
lock
jnp
scas
ja
xor
aam
push
mov
in
frstor
loopne
lcall
add
push
fnstsw
jno
xchg
add
and
ljmp
and
push
and
testl
jne
or
or
repnz
jns
popa
test
test
inc
les
and
loope
sarl
and
fildll
push
inc
out
mov
mov
pop
push
sub
adc
orb
pushf
movsl
pop
cwtl
hlt
xchg
scas
inc
push
xchg
xor
mov
xchg
ja
arpl
cmp
inc
scas
mov
adc
jno
sti
xchg
jge
mov
addb
inc
aad
jns
xor
fwait
xchg
in
jo
out
cmp
jmp
js
decl
cli
call
ljmp
jle
sub
out
stos
xchg
adc
push
xchg
mov
jbe
pusha
inc
lods
or
sbb
mov
xor
dec
sar
cmc
int
xor
dec
pop
rclb
jecxz
and
rep
decl
sti
out
das
jmp
outsl
out
leave
loop
hlt
add
stos
aad
cmovp
mov
je
jbe
aad
hlt
lcall
fcoml
mov
rolb
sbb
aas
inc
pop
fdivl
lret
insb
cld
xlat
out
cwtl
adc
sti
xchg
data16
iret
adc
adc
mov
repnz
jle
add
sub
cmp
adc
jp
std
subb
lcall
mov
add
sahf
stc
and
sub
sbb
xor
loop
push
ljmp
cs
pop
es
mov
mov
stos
xchg
test
cltd
pop
mov
jnp
mov
mov
lret
add
arpl
frstor
scas
add
mov
pop
xchg
xor
xchg
hlt
xor
pop
addl
xor
adc
add
hlt
sbb
imul
ret
cld
imul
pop
dec
add
scas
jbe
push
jmp
mov
ja
push
push
js
fsubs
lds
je
sahf
enter
lret
jae
pop
mov
sbb
fs
add
cmc
inc
inc
add
lds
push
ja
rorb
inc
xchg
xlat
ffree
add
add
test
sahf
cltd
fstpl
mov
xchg
hlt
push
mov
mov
je
push
cmp
stc
mov
and
mov
bt
add
and
mov
in
cld
fsubs
lods
js
sbb
out
dec
mov
lock
push
loop
sahf
fstl
sbb
and
mov
adc
loope
add
not
xchg
jnp
xchg
cwtl
inc
jne
ljmp
stos
sub
add
xchg
call
cmp
leave
push
nop
push
clc
js
pusha
pop
xor
push
sub
add
fiadds
ret
push
lret
fistl
mov
adc
test
in
dec
ss
or
cmp
add
not
push
rcl
test
xchg
cmc
stos
dec
xor
mov
inc
js
pop
shll
dec
cmp
mov
cld
and
fists
add
testl
lret
ficomps
faddl
cltd
ret
jnp
add
cmpsb
shrl
cmp
mov
push
out
inc
sub
shlb
outsb
fcom
xchg
popa
xchg
lahf
or
test
lea
adc
lea
xchg
inc
aas
cwtl
jne
lods
nop
add
shll
cmpsb
mov
adc
outsb
lcall
jl
mov
movsb
pmulhuw
inc
test
pop
mov
push
mov
ds
clc
in
pushf
pop
pop
sbb
mov
int
dec
mov
inc
add
jecxz
mov
out
cmp
sbb
mov
mov
les
fisubs
test
add
test
dec
pop
jae
dec
dec
in
and
pop
cmc
mov
aas
ljmp
cld
adc
sub
test
jecxz
sub
inc
pop
enter
sarl
shl
mov
rcll
sbb
lcall
sbb
add
cmp
dec
or
clc
jo
jo
inc
rcll
xlat
es
xchg
xchg
adc
icebp
adc
push
aad
std
fwait
lret
inc
insb
jbe
mov
dec
sub
int3
in
mov
dec
stos
xchg
rclb
fst
jle
jle
mull
or
jae
rolb
push
pop
inc
jmp
xchg
dec
es
ds
jbe
out
adc
inc
shll
jecxz
fcmovu
xchg
pop
outsl
push
adc
cmp
fwait
adc
cmpsl
sbb
clc
mov
or
pop
sbb
xlat
xor
mov
jnp
jnp
pop
inc
inc
into
inc
pop
shl
cmp
fidivrs
divw
out
stc
in
mov
out
xor
es
push
pop
fidivrs
xchg
popa
fimuls
movsl
mov
mov
icebp
fmul
and
jmp
je
mov
add
inc
jae
js
dec
push
xchg
fmuls
nop
pop
ds
scas
das
cmp
loop
mov
push
jbe
push
inc
dec
add
loopne
nop
inc
cmp
add
repz
push
inc
outsl
cltd
inc
xchg
adc
dec
sahf
aad
xor
pusha
shr
ja
inc
pop
or
das
jg
and
data16
ret
mov
mov
jg
xchg
mov
lods
sub
insb
cmp
push
insl
xchg
cltd
andb
sub
pop
jmp
dec
jg
jne
es
dec
mov
sub
cltd
dec
sub
das
inc
xor
pop
dec
testb
scas
xor
jmp
ror
and
jbe
ret
push
mov
inc
sub
in
insl
es
ret
sub
je
mov
mov
inc
cmc
gs
test
inc
and
pop
lea
mul
dec
adc
mov
add
in
pusha
repnz
jo
dec
push
ret
incl
mov
or
jl
clc
and
cs
dec
xchg
mov
test
cmp
mov
addr16
in
sub
or
xchg
loope
ss
pop
push
lahf
push
aad
mov
pop
push
xlat
mov
mov
push
xchg
in
sub
jmp
mov
roll
jp
or
scas
dec
push
or
jp
in
insl
adc
cmp
lock
popf
sub
mov
insb
sub
xor
inc
cwtl
test
sub
or
ljmp
dec
mov
cmp
pop
sbb
mov
lea
mov
push
adc
and
xchg
mov
sub
and
push
iret
dec
or
loope
dec
icebp
push
imul
daa
lds
push
repz
clc
xor
or
xor
mov
stos
ret
add
mov
test
pop
push
xor
cmp
or
cmpsb
jns
js
push
out
hlt
lds
ja
les
outsb
jle
movb
push
repnz
jle
cltd
in
or
mov
xor
dec
hlt
jae
shlb
and
mov
jp
sbb
out
inc
xchg
push
mov
test
scas
inc
lahf
cmp
and
dec
push
loopne
aas
ds
xlat
jnp
cmpsb
mov
cmp
mov
mov
pop
add
xor
sbb
jl
push
daa
xchg
sbb
andb
outsl
pop
add
cld
pushf
inc
mov
pusha
je
jb
fucomi
jmp
insl
mov
rclb
sub
inc
test
scas
mov
or
cwtl
inc
ret
xor
sbb
pop
popf
movsb
out
cwtl
shr
aam
lcall
dec
cmp
aas
sbb
push
popf
into
loope
lods
push
movsb
bound
dec
lods
loop
xchg
fs
lea
adc
ss
add
out
adc
vmread
or
lock
test
cwtl
test
xchg
nop
jecxz
adc
out
and
jae
or
movsb
xchg
dec
shll
fwait
lea
cmp
cli
enter
pusha
mov
push
fldl
inc
jo
std
sub
jbe
adc
mov
leave
push
push
inc
pop
xchg
push
mov
in
xchg
pop
xchg
and
je
sbb
daa
ljmp
loopne
push
lret
enter
stos
clc
jne
sbb
rorb
lahf
ret
jg
imul
out
xchg
int3
negb
std
aaa
mov
xorl
in
xchg
imul
pop
jl
pop
mov
or
jbe
sti
adc
aam
iret
push
in
mov
frstor
into
xlat
pop
std
mov
and
sub
mov
dec
out
sub
popf
andl
addb
imul
mov
test
mov
aam
cmpsl
scas
and
pop
mov
int3
out
not
pop
ss
clc
rolb
jnp
testl
inc
xchg
scas
push
test
movsb
sarb
stos
xchg
aas
repnz
flds
out
xchg
pop
inc
fistl
fisttpl
xchg
shlb
idivl
push
mov
lock
and
cmc
ret
inc
fs
and
xor
outsl
imul
repz
inc
push
jbe
sub
stc
sbb
in
push
ljmp
xor
jp
dec
pusha
stc
mull
inc
pop
arpl
aad
inc
pop
orb
push
aaa
imul
jmp
negb
je
and
popa
ficoms
or
sbb
les
fcoms
push
sbb
out
add
lods
xor
es
xlat
in
sarb
xchg
push
mov
call
fcomps
ss
pop
and
insb
adc
lods
ds
stc
xor
cwtl
mov
lea
sarl
pop
repz
jecxz
and
push
aam
insb
fcmove
push
roll
xchg
lods
xchg
dec
cmpsb
jle
scas
xor
xchg
jbe
jns
aad
mov
pop
mov
icebp
jl
mov
iret
push
movsb
push
push
js
filds
jne
dec
lock
imul
mov
cwtl
gs
mov
mov
fisubs
fldcw
xor
in
repnz
scas
mov
push
jns
aad
adcl
or
jne
lds
jb
and
loop
cmp
sub
cmp
xor
clc
js
xorb
sbb
nop
inc
sbb
imulb
mov
xor
addr16
add
lcall
mov
fwait
test
out
add
pop
cmp
mov
aas
cmp
data16
lret
and
mov
pop
or
sbb
jl
sub
lcall
shlb
sbb
pop
daa
pop
sub
fwait
inc
and
imul
push
inc
sub
xchg
push
push
cmp
dec
movsb
mov
test
mov
sbb
xor
out
mov
cmpsl
cmp
push
scas
jnp
rcrb
pop
cmp
lods
or
pop
cmp
movsb
testl
fisttps
mov
jp
cmp
mov
dec
push
mov
jle
int3
jecxz
cmpsl
cmp
mov
jae
dec
pop
ret
sub
xchg
movsb
lcall
lcall
adc
fmuls
aas
lods
cmpsb
adc
daa
aad
sub
into
das
xor
sbb
pop
xor
mov
push
cmp
xchg
sbb
movsb
outsl
imul
and
insb
aad
or
test
sbb
push
xchg
stos
mov
shll
mov
add
xchg
mov
xchg
or
imul
or
inc
push
jne
and
jnp
sbb
mov
jmp
add
vandnps
pop
ja
or
shl
xchg
out
xchg
pop
jp
or
incb
incb
out
gs
xchg
xchg
pop
add
ja
pushf
xchg
inc
xchg
lods
adc
incl
sbb
add
jae
orl
ljmp
mov
scas
stos
xchg
test
loope
out
ljmp
loop
lods
mov
mov
pop
and
fsubrp
test
call
add
cltd
fstpl
mov
cmp
xchg
mov
fnstsw
loopne
cmp
js
xor
cmp
xchg
filds
pushf
cmp
dec
filds
sbb
cmp
pusha
adc
imul
xchg
cmp
cmp
test
std
mov
mov
ljmp
xor
out
ja
mov
fs
pop
pusha
out
js
or
jns
cmp
imul
push
clc
jne
inc
pop
sub
pushf
xchg
sbb
fsubrs
and
xchg
jns
jmp
push
add
push
pop
fstpl
xor
and
fsts
frstor
addr16
mov
cmpsb
sub
ljmp
mov
dec
xor
jae
stos
lcall
repz
iret
sbb
sub
test
imul
xor
rcrb
gs
and
cmp
push
scas
dec
orl
testl
xlat
pop
daa
push
or
icebp
jne
lds
or
loop
pusha
mov
mov
mov
cmp
add
mov
xchg
dec
and
outsb
shlb
mov
dec
sbb
jns
pop
int3
test
mov
push
jnp
imul
or
jae
pop
into
pop
leave
and
sub
fldenv
fs
icebp
incl
call
gs
test
int
xor
inc
stc
hlt
mov
mov
cmp
movsb
mov
pop
sbb
pop
sahf
pop
or
call
mov
adc
mov
ljmp
test
inc
add
pop
in
jecxz
icebp
es
push
add
dec
pop
pop
dec
jge
cli
pop
and
mov
sbb
jg
adc
sahf
mov
cli
and
out
push
xchg
lret
jo
xor
ret
push
inc
aas
inc
sbb
int
adc
dec
xlat
add
mov
inc
xchg
push
xor
add
lock
adc
cmp
adc
arpl
dec
imul
pop
dec
mov
mov
fnstcw
adc
out
xchg
and
insl
fst
xorl
rorb
dec
imul
xor
xchg
inc
sub
pop
jge
pop
fists
push
addr16
pop
dec
popf
xchg
aas
stc
lods
sub
pop
inc
inc
cmpsb
and
and
sti
xchg
data16
adc
loopne
fistpl
pop
mov
fdivrl
inc
pop
icebp
scas
jbe
ss
cmpsl
push
fdivrs
aaa
das
push
add
and
dec
adc
adcb
jae
xor
and
fwait
mov
js
imul
insl
or
pop
xlat
or
mov
mov
sarb
push
adc
lds
sbb
cmp
mov
mov
call
sub
inc
insb
add
int
or
sbb
scas
fucomp
jnp
int
in
out
or
mov
aaa
sbb
mov
fwait
je
cmc
jge
dec
out
int3
icebp
cmpsl
mov
lods
jmp
xor
push
shlb
aas
xlat
imul
icebp
lock
mov
cmp
lock
dec
adc
insb
push
scas
clc
cmp
test
negb
mov
push
out
mov
stc
scas
push
push
xchg
dec
mov
jge
jg
lock
outsl
es
adc
or
mov
xchg
xor
cmp
sub
daa
xor
jp
push
icebp
inc
sti
or
mov
and
adc
pop
leave
outsl
xor
ljmp
outsl
imul
pop
sbb
ret
mov
stos
push
int
jmp
cld
mov
std
push
imul
jb
ja
xchg
nop
mov
sub
xor
arpl
out
xor
clc
bound
lret
out
sub
aaa
mov
insb
inc
jl
sahf
sahf
out
dec
repz
imulb
es
ret
cli
lret
js
loop
xchg
out
mov
cmc
pop
pop
mov
xchg
push
inc
mov
mov
sub
ljmp
in
push
mov
loop
lods
es
dec
adc
mov
bnd
mov
xchg
arpl
xor
jl
les
js
rorl
data16
cmpsl
std
jmp
scas
daa
inc
sub
mov
add
adc
mov
test
jecxz
pop
enter
mov
mov
in
lock
fidivl
fldl
stc
xchg
test
add
cs
aad
push
out
adc
mov
int3
rclb
scas
scas
call
cmpsl
je
xor
das
inc
scas
sub
cli
out
lcall
insb
dec
xchg
addr16
sub
mov
push
jo
pop
jb
fisttps
mov
imul
xchg
jmp
xor
mov
out
dec
sbb
std
push
arpl
lret
addr16
and
outsl
and
inc
dec
mov
add
sar
clc
sub
lods
pop
in
xor
stos
jecxz
push
out
cmp
ljmp
push
sarl
popa
mov
cli
jno
fwait
js
shrl
js
jmp
sar
cmp
outsl
mov
int3
outsl
cld
push
jmp
inc
adc
imul
inc
dec
xlat
sahf
leave
mov
jae
iret
movsl
push
out
mov
mov
push
sbb
mov
dec
lods
cld
lods
icebp
int
cmp
cmpsl
cmp
aaa
lcall
ss
and
add
push
ja
ja
cmp
push
sbb
pushf
or
xchg
mov
test
push
hlt
scas
push
jp
les
jl
cltd
dec
mov
addr16
mov
and
mov
popa
aam
stos
movsl
adc
sarb
popa
dec
lret
outsb
ret
xchg
into
sub
lock
fwait
in
dec
dec
test
loopne
adc
jae
loop
xchg
cwtl
xchg
aam
or
xchg
pop
xchg
xor
jns
cmpsb
les
sti
shl
add
pop
mov
push
mov
or
push
sub
jo
fimuls
mov
mov
push
fwait
lret
sbb
push
jno
mov
add
add
fdiv
xor
cmc
rcrl
adc
dec
jne
jle
mov
inc
loopne
sbb
and
inc
arpl
mov
push
ds
sbb
mov
pusha
int
and
adc
xor
lods
jecxz
cmc
cmp
cs
mov
xorl
xchg
jae
es
xor
jp
insb
pop
imul
push
jmp
aam
daa
fs
xchg
xchg
int3
aad
fpatan
lock
jmp
fstl
ret
inc
inc
push
outsl
inc
lcall
xchg
icebp
in
xor
inc
jbe
out
jo
xor
rcrl
jmp
js
mov
and
mov
fsubs
jl
push
ja
pop
xchg
push
pop
mov
dec
movsl
outsb
mov
dec
jge
lahf
fdivrl
xor
repz
adc
inc
sub
js
pop
fistps
fbstp
jb
je
sbb
scas
mov
dec
push
aaa
add
outsb
xor
push
inc
popa
xlat
jno
shll
and
dec
out
sbb
mov
push
xor
pop
xlat
push
test
add
es
pop
fstl
movsb
adcl
cmp
sbb
aas
out
rcrl
xor
dec
aas
insb
addl
lea
fwait
lock
adcl
cmc
imul
out
dec
xchg
ret
fimull
ror
mov
jle
test
push
mov
adc
fdivr
sub
mov
jmp
add
ljmp
cmpsl
pop
call
xchg
inc
sbb
push
arpl
cltd
subl
sbb
cmp
mov
icebp
add
pop
vandps
push
sub
mov
mov
xchg
sbb
sti
fimuls
stc
pop
imul
inc
adc
gs
or
adc
outsl
or
out
mov
mov
add
sbb
stos
fstpl
sbb
sub
in
movsl
fwait
test
loop
sub
mov
cmpsl
push
repnz
sub
movsl
mov
test
inc
pop
out
jmp
shl
in
movsl
sub
loope
jl
insb
lea
xchg
add
stos
push
pop
xchg
push
adc
mov
push
ljmp
iret
bound
idiv
push
ficompl
repz
mov
icebp
in
std
xor
sarb
adc
push
push
xor
scas
jge
lods
mov
sahf
stc
dec
pusha
mov
cmp
out
pop
dec
ja
push
xlat
roll
or
stc
lods
iret
xchg
dec
push
push
fwait
scas
movsb
out
push
xchg
and
push
inc
jnp
aad
sub
lret
out
aam
fimuls
add
loopne
xchg
mov
mov
lds
pusha
or
stos
pushl
test
sbb
dec
pop
adc
mov
sub
xor
mov
jo
or
pushf
test
nop
adc
xchg
les
daa
mov
insb
int3
inc
out
push
inc
and
loopne
iret
mov
or
dec
mov
es
cmp
cld
pcmpgtw
fldenv
stc
imul
lahf
out
fisubl
adc
xor
adc
addb
fmull
js
cltd
or
test
inc
je
addr16
inc
outsb
cmp
sub
or
test
jne
sub
cmp
push
push
dec
dec
popa
pop
mov
cmc
pushf
push
frstor
xchg
iret
mov
adc
test
daa
adc
dec
divl
or
xchg
aas
filds
sub
and
std
xor
rcl
xchg
push
gs
push
push
sbbl
mov
fwait
pop
dec
rcll
jle
jno
cltd
mov
mov
cli
mov
movsl
push
notb
lods
das
push
inc
cmp
mov
shl
and
mov
dec
add
movsl
pop
out
inc
stos
lea
je
sbb
mov
xchg
addr16
mov
push
adc
add
xchg
inc
imul
lds
shll
ficomps
jbe
dec
pop
mov
outsb
mov
jl
outsb
stos
mov
mov
dec
fistpl
ja
xorb
imul
mov
xlat
pop
outsl
jl
ljmp
mov
and
aas
lret
cmc
rolb
jmp
lods
jmp
ffree
jns
cmp
fwait
jl
and
aas
cld
or
sub
dec
lods
imul
outsl
cwtl
hlt
and
sbb
stc
daa
in
jmp
push
fsubrl
popa
ljmp
fwait
cmpsl
fistpll
jg
stc
fists
test
aad
xor
lea
cltd
jle
jo
pop
popa
add
mov
lahf
enter
mov
ret
mov
leave
subb
jg
add
cs
cltd
mov
gs
lahf
sbb
push
inc
cmp
mov
mov
adc
shrl
stos
dec
ljmp
movsl
test
cld
mov
aam
jns
and
out
xor
jge
imul
add
xchg
cmpsb
push
dec
ss
pop
icebp
mov
fs
push
mov
aad
js
push
sarb
call
leave
xchg
sub
push
outsb
test
insb
lea
out
pop
cmpsb
pop
ss
dec
test
or
je
inc
add
fistpll
das
pop
pop
mov
sub
sub
mov
loopne
lods
xchg
push
daa
cmpb
shll
dec
das
pop
push
mov
xor
test
cmc
dec
xchg
fcomi
mov
cld
iret
push
les
int
mov
push
adc
pop
push
in
pcmpgtw
and
into
cli
rolb
cltd
stos
sub
rol
lret
xchg
mov
mov
sbb
dec
jo
dec
and
mov
inc
pusha
insl
cs
push
and
add
std
and
push
cmp
iret
push
out
mov
push
mov
jno
inc
add
mov
sub
dec
cmp
xchg
out
dec
adc
out
ljmp
in
jle
ret
std
fdivrp
clc
cli
mov
or
push
sbb
mov
aaa
lret
add
lret
ficomps
int
inc
add
add
or
inc
rorb
sbb
out
test
jo
lods
push
ss
fcmovb
in
adc
in
push
add
inc
mov
or
push
xor
loopne
mov
jb
lcall
jmp
jno
inc
adc
lret
iret
sqrtps
std
cmpsb
push
cmp
pop
mov
or
repz
loopne
jge
jbe
roll
iret
add
daa
mov
dec
orl
mov
jp
mov
cmp
cltd
mov
pop
cmp
leave
dec
and
out
sub
xor
pop
stc
push
dec
or
add
fistl
inc
xchg
lods
lcall
inc
adc
enter
mov
aaa
xlat
and
fcmovne
push
sub
ja
pop
xchg
cltd
mov
sub
jecxz
or
inc
cmp
push
sub
pop
inc
mov
mov
sbb
mov
sbb
rcrb
out
movsb
and
gs
pop
push
mov
jg
inc
mov
icebp
jle
xor
sahf
xchg
lds
push
subl
mov
int
inc
movsl
mov
pop
fxch
inc
push
outsl
fsqrt
xor
lea
pushl
shrb
sti
cli
inc
loope
fistpl
push
scas
xor
push
fsubl
push
ljmp
pop
andl
adc
orl
imul
pop
or
cmp
jnp,pn
add
or
mov
fisttps
subb
sub
lret
push
sahf
test
nop
data16
push
add
in
mov
mov
das
jae
stos
pop
pushf
push
xadd
push
or
jne
and
repnz
sbb
out
jle
iret
sub
sbb
ja
mov
jmp
stc
test
inc
daa
dec
inc
cli
ficompl
pshufw
mov
mov
scas
xchg
sbb
xor
sbb
lods
in
dec
adc
dec
mov
ljmp
pop
mov
and
hlt
pop
addr16
cmc
call
adc
lret
xchg
fwait
sub
stc
je
sbb
inc
or
pop
jae
fs
aas
cmp
mulb
adc
pop
push
inc
test
negl
outsb
pop
and
pusha
scas
xchg
push
inc
mov
add
sar
jns
mov
fwait
adc
sub
test
mov
and
push
stc
pop
lea
mull
test
mov
xchg
lods
inc
cmpsl
inc
jo
in
inc
cmp
cmpsb
scas
inc
or
adc
xor
into
push
sub
lods
sbb
rol
inc
mov
nop
pop
push
push
pop
jbe
ret
mov
lock
stc
gs
mov
mov
push
std
rorb
leave
scas
add
mov
test
mov
clc
sbb
daa
stc
add
les
xor
fs
xor
push
mov
push
mov
sub
sub
scas
mov
sbb
add
add
ds
lcall
mov
cmc
mov
sbb
mov
stos
mov
push
roll
sahf
int
ss
loop
mov
into
jb
xchg
jne
mov
pop
xchg
push
flds
or
xchg
inc
xor
and
int
cwtl
push
push
int3
loope
mov
lock
inc
or
lretw
cmc
imul
jmp
lods
sahf
add
aad
sbb
popa
sbb
sub
adc
fldcw
in
sub
cmp
leave
jle
scas
aad
inc
or
jecxz
insb
cwtl
jns
jne
out
or
test
push
jns
nop
mov
pusha
xor
pop
shlb
enter
jge
push
or
xor
push
xchg
pop
add
or
sub
pusha
xchg
sar
in
idivb
xchg
sub
xchg
rorb
mov
pop
or
sub
test
adc
icebp
daa
es
pusha
and
sub
xor
es
gs
lea
mov
popa
mov
mov
ret
inc
push
cmp
stos
mov
mov
push
cmpsl
sub
adc
stc
mov
or
or
cmpl
cmpsl
aad
and
jg
daa
sub
ds
icebp
test
cmpb
outsb
xor
jle
and
aam
test
push
fidivs
or
xlat
adc
pop
cmp
cmpsl
sbb
sahf
jns
mov
repnz
cmp
jno
sbb
test
add
stos
adc
sbb
cmp
enter
pop
adc
movsl
scas
add
add
sub
dec
xchg
jno
faddl
sti
dec
and
daa
shr
xor
mov
sub
inc
or
or
arpl
sub
add
lahf
pop
lcall
data16
rcrb
mov
cmp
insb
pop
sbb
pop
in
cmp
ds
lcall
hlt
std
adc
inc
outsb
xchg
imul
xchg
mov
inc
xchg
dec
pop
jg
jp
jp
ret
lret
jne
xlat
jmp
jg
push
xor
sti
sbb
mov
pop
sub
test
dec
xchg
and
iret
xor
enter
xchg
adc
aas
cltd
scas
jo
cmp
pop
mov
adc
xlat
push
push
mov
mov
ljmp
add
aaa
push
sbb
pusha
into
incb
dec
icebp
shrl
pop
and
xchg
push
jae
jle,pn
mov
es
stc
gs
daa
jns
clc
fs
bound
les
jo
cmp
fists
fldenv
jle
lret
jmp
push
stc
mov
int
movsb
in
sbb
or
cmp
gs
pusha
mov
add
jmp
adc
loope
jmp
in
push
stos
shll
mov
ljmp
dec
xchg
pop
daa
pop
jp
ret
out
mov
push
leave
pop
or
sbb
imul
adc
in
sbb
cmpsb
push
enter
popf
and
das
test
jmp
mov
lea
ds
pop
add
pop
dec
sbb
jb
notl
js
push
repnz
testl
imul
decb
lea
pop
adc
cmp
movsl
cmc
cmpsb
push
rclb
insb
jo
mov
mov
jnp
adc
aam
xchg
clc
ret
inc
in
adc
addl
enter
push
iret
and
mov
mov
shlb
in
cltd
das
test
mov
inc
or
test
inc
push
call
in
test
push
lods
into
mov
ficompl
cld
inc
movsb
and
sarl
movsl
sbb
stos
mov
adc
filds
xor
imull
adc
mov
jg
in
mov
bound
in
or
xchg
leave
push
rorl
loop
std
int
inc
push
xchg
jb
adc
call
dec
inc
outsb
adc
arpl
icebp
dec
lds
push
or
outsl
sbb
push
mov
or
xor
out
arpl
ficompl
or
data16
fisubs
adcl
inc
xchg
push
mov
repz
pop
cmp
ljmp
enter
fcoml
xor
shrb
push
mov
sbb
iret
out
inc
mov
cmc
hlt
xlat
roll
cli
dec
jecxz
in
test
mov
cs
pushf
shrl
test
stos
push
sub
jmp
jmp
ja
inc
daa
pop
and
mov
sbb
cmc
cld
pop
cwtl
dec
add
stc
add
gs
in
jbe
inc
in
inc
outsb
jg
sbb
outsb
in
clc
push
les
in
push
push
movsb
sahf
jae
addb
xchg
mov
push
mov
jo
inc
das
sahf
inc
push
push
cmp
scas
or
cmpsl
std
shll
addr16
loopne
fwait
es
mov
mov
push
mov
mov
out
mov
aaa
dec
cmp
and
push
cwtl
fisttpll
mov
adc
test
aad
xor
shrb
lret
repz
bound
outsb
outsl
mov
sbb
movsl
add
sahf
or
adc
jmp
xchg
jnp
pop
loopne
movsl
in
push
shrl
jle
fdivl
and
xor
mov
lods
xchg
pop
repz
sbb
xlat
movsb
push
lock
mov
aad
pop
les
fs
push
add
iret
dec
hlt
push
sti
xchg
mov
lods
mov
inc
push
pop
xor
sub
xchg
iret
xchg
xchg
push
loope
or
xchg
cs
xor
dec
xchg
inc
ljmp
dec
dec
test
mov
aas
xor
in
push
push
pushf
enter
jbe
iret
repz
fidivl
fcmovnbe
test
xor
cmc
test
mov
or
xor
xlat
push
or
int3
ds
enter
icebp
push
idiv
cmp
push
out
mov
pop
and
add
dec
inc
dec
out
adc
outsl
ror
mov
mov
shlb
jae
add
jae
xchg
xchg
cmp
repnz
add
into
ret
stc
mov
mov
and
shll
lahf
jle
xchg
nop
xor
or
mov
out
nop
push
adc
pop
aas
pop
arpl
int
inc
xor
mov
dec
imul
sub
aam
shll
pop
lret
or
add
mov
sti
xchg
mov
pop
nop
sbb
fdivr
pop
mov
data16
movsb
sbb
sub
mov
jge
jl
push
into
aam
icebp
dec
std
add
cmp
inc
cld
rcr
push
xlat
dec
test
lods
shlb
mov
inc
testb
and
je
ds
lods
jp
iret
push
mov
inc
stc
bound
les
mov
outsl
nop
out
mov
sahf
mov
pusha
imul
mov
cmpl
xchg
pop
xor
sbb
mov
psubb
cmp
sub
stos
and
mov
dec
cmpsb
fucomi
jno
mov
mov
jp
rclb
fisubrl
adc
or
mov
mov
xor
xchg
xchg
cmp
pop
lcall
lds
and
mov
push
es
test
enter
dec
add
and
setp
xchg
call
jbe
mov
cmpsb
and
mov
ljmp
fistpl
xor
sti
mulb
jb
lods
rol
cmp
add
push
jge
adc
lcall
pop
aas
lock
xlat
sbb
cld
inc
pop
sub
movsl
mov
clc
mov
mov
gs
mov
cmp
das
adc
inc
test
ret
frstor
lahf
icebp
jge
dec
push
movsb
roll
push
dec
out
cltd
add
inc
mov
push
es
mov
aaa
shlb
and
in
ss
ds
pop
call
mov
fldl
divb
dec
pop
cld
sub
ss
dec
ret
sub
in
and
lea
dec
xchg
test
jb
mov
sahf
lea
adc
xor
jmp
add
sbb
ss
mov
and
arpl
divb
roll
pop
sub
mov
es
cmp
pop
jne
inc
les
mov
lods
xchg
leave
cwtl
and
sbb
sarl
out
fisubrs
or
adc
adc
dec
out
inc
xchg
xchg
and
out
mov
not
das
ljmp
xchg
out
int3
arpl
stc
orl
loop
gs
dec
cmp
mov
xchg
repnz
roll
cmpb
adc
jg
pop
int
jle
add
mov
xchg
clc
lea
pop
fwait
sbbl
pop
add
push
mov
pushf
fistpl
scas
fldt
dec
ret
adc
outsl
dec
mov
push
lds
pop
add
push
sbb
ds
or
outsb
popf
int3
dec
push
mov
and
insl
xor
inc
mov
imul
sbb
mov
and
add
pop
sub
scas
scas
push
lds
jno
cmpb
insl
jge
jb
sbb
push
fnsave
add
push
sbb
add
cmp
dec
push
xchg
ret
lds
xor
push
dec
mov
aas
jno
call
or
les
adc
push
popf
add
mov
push
stos
inc
xor
ds
ret
sub
xchg
pop
mov
mov
dec
pop
daa
nop
aas
addb
or
pushf
lods
inc
sub
loopne
imul
shl
into
sti
inc
in
in
push
leave
lea
fcomi
mov
dec
out
mov
xor
shrb
cmp
imull
jmp
arpl
cmp
mov
push
xchg
lock
je
aaa
pushf
push
pop
test
jge
push
cmp
mov
jne
popf
scas
or
mov
lret
push
or
and
cmpsl
scas
stc
pop
lcall
shll
into
int
inc
stos
cmp
cmp
aad
iret
jecxz
add
pop
aas
push
xchg
xchg
loop
adc
add
pop
movsl
repz
pop
push
fwait
xor
xlat
jp
dec
inc
in
adcb
popa
rcll
pop
dec
call
jo
cmpsl
jae
repz
xchg
jecxz
mov
movsl
daa
dec
clc
cmp
pushf
mov
xchg
fsubrs
jb
repnz
mov
mov
fbstp
rolb
int
test
lcall
loopne
jge
ror
adc
jmp
adc
rorb
or
setb
push
cwtl
arpl
mov
cmp
ror
jmp
mov
mov
jp
adc
stos
cld
push
pop
cs
adc
adc
inc
jns
xchg
call
dec
and
sub
fsts
fisubl
subb
ret
bound
mov
mov
stos
out
xchg
push
pop
or
sub
int
es
repz
pop
call
or
loopne
mov
sub
or
mov
lret
addr16
sub
adc
or
sbb
cli
sub
dec
fimull
sbb
sbb
add
cmp
lcall
and
mov
movsl
mov
push
xor
sti
iret
mov
inc
scas
jl
stos
add
call
and
pop
xor
insl
pop
std
sbb
fcmovnb
adc
das
es
or
sar
push
fwait
dec
mov
js
cld
sbb
mov
xor
inc
adc
cli
call
lds
es
adc
jbe
dec
or
push
xchg
pop
xor
je
sbb
jle
push
int3
rorl
jno
mov
sub
adc
lahf
out
sti
inc
jo
das
lds
and
push
icebp
rolb
test
jg
cwtl
adc
clc
shl
adc
push
scas
mov
mov
pop
mov
xchg
test
mov
iret
lret
or
std
fnsave
sub
dec
dec
inc
or
mov
push
jecxz
bound
pop
add
leave
adc
mov
shll
pop
clc
or
loopne
fbld
mov
jg
jb
adcb
jle
mov
adc
add
movsl
mov
xor
pop
pop
jecxz
ljmp
mov
inc
mov
fnsave
fwait
mov
mov
cmp
xchg
mov
push
mov
adc
gs
mov
popa
lock
xchg
wrmsr
sub
cmp
cs
lock
and
jle
mov
mov
fstps
pop
sbb
or
call
mov
loop
adcl
sbb
or
push
pop
mov
jno
fs
popl
mov
cmp
in
jmp
mov
lods
rcrl
loope
pop
inc
pusha
loop
and
and
or
adcl
adcb
dec
les
jmp
xor
jp
mov
inc
inc
loop
pushf
cmc
data16
cld
sub
cmpsb
add
rcll
and
je
dec
jl
and
test
test
add
cmpsb
push
dec
cwtl
push
and
inc
sub
ja
mov
jge
mov
sbb
cmp
adc
cmp
pop
fsts
popf
pop
add
stos
mov
push
mov
add
pop
pop
pop
dec
sbb
mov
mov
and
push
mov
add
push
add
in
loop
mov
pop
sbb
fisttps
ret
jp
aaa
bound
mov
or
dec
lock
shr
or
push
jl
aas
cmpsb
in
sbb
jmp
ds
test
mov
stos
mov
lret
xor
push
daa
fistpl
fldcw
push
je
stos
push
xchg
insb
daa
and
in
adc
pop
aaa
cmp
add
fs
mov
add
inc
rcl
xor
icebp
sbb
loope
dec
pushf
loop
jo
int3
push
xchg
xor
jbe
adc
subb
mov
gs
cli
scas
ds
pop
in
shl
cld
mov
test
inc
dec
shll
les
les
mov
xchg
adc
mov
inc
pop
jecxz
add
imul
mov
push
sub
add
xchg
inc
xor
pop
cmp
negb
rcrb
cli
enter
bswap
add
adc
push
mov
enter
mov
sar
bound
pop
lret
das
mov
push
xor
sub
mov
lret
xchg
add
push
mov
push
mov
jns
mov
inc
and
mov
mov
mov
pop
xor
sbb
mov
rorl
jne
or
jo
sub
loopne
leave
dec
loop
inc
mov
lahf
sbb
xchg
push
aaa
inc
or
sbb
insl
in
aaa
aam
test
fisttpll
and
mov
jnp
or
fists
aam
adc
mov
xor
mov
adc
inc
pusha
xchg
clc
int
sub
or
or
jge
movsl
push
out
popa
inc
and
cld
scas
mov
push
jl
push
mov
mov
push
mov
pusha
mov
or
pop
add
aam
mov
mov
mov
imul
pop
cltd
fsubr
dec
fnstenv
push
fsubrs
jne
mov
fcmovb
push
sub
mov
aas
jge
mov
mov
fmuls
arpl
cltd
test
xor
or
addr16
ds
ret
pop
repz
mov
inc
adc
shll
daa
rcrl
dec
cmc
xchg
mov
jne
mov
adc
cmp
add
scas
daa
inc
xchg
clc
enter
dec
repz
dec
jno
and
idivl
fimull
xchg
leave
mov
movsl
icebp
mov
jle
in
cltd
cmpsl
pop
mov
das
xlat
add
into
mov
jno
fyl2x
decl
cmp
aas
stos
pop
mov
dec
sbb
inc
dec
inc
push
int
fs
lea
xor
push
mull
or
ljmp
lds
addr16
mov
incl
cli
bound
dec
pop
pop
lea
cmp
ds
je
pop
cwtl
jno
cli
xor
xor
imul
mov
cmp
in
call
enter
shlb
mov
xchg
pop
cmpb
rclb
xchg
dec
test
ltr
lret
jne
cmp
sub
movsb
frstor
mov
and
jmp
adc
fwait
mov
in
outsb
lods
mov
sub
mov
cltd
rol
sahf
dec
sbb
xchg
xor
andl
cmpsl
and
idivl
cld
incb
xchg
and
cmp
shll
mov
jns
clc
xchg
in
bound
ret
mov
sbb
test
shrb
push
outsb
enter
shll
inc
mov
imul
loopne
les
je
pop
push
mov
and
imul
outsb
add
xchg
out
add
mov
cmp
insb
repz
mov
aad
mov
jb
aam
mov
dec
xchg
int
ljmp
pop
sbb
aam
mov
adcb
add
ds
push
dec
cwtl
pushf
xchg
pop
dec
fyl2xp1
push
popa
push
jle
pop
clc
mov
sbb
cwtl
mov
jo
push
mov
add
out
or
mov
xor
lahf
mov
mov
fstpl
addb
mov
in
pop
mov
je
mov
fcmove
test
dec
das
or
bound
mov
jo
arpl
mov
lods
js
jae
adc
hlt
imul
fdivs
dec
push
fsts
outsb
jno
xor
adc
mov
sbb
outsl
add
shrl
xlat
jle
leave
insb
lret
test
mov
pop
sub
push
push
adc
xchg
pop
push
and
jb
ss
imul
push
mov
jp
xchg
inc
ljmp
test
hlt
xorl
imul
jno
sbb
fwait
push
cmp
inc
push
ljmp
xor
jno
add
je
dec
lock
and
and
out
test
adc
lods
cmpsl
cmp
imul
dec
push
mov
add
xchg
sub
movsl
adc
xchg
js
ja
mov
and
or
fsts
or
or
test
jle
and
dec
hlt
mov
mov
pushf
mov
imul
mov
ljmp
repnz
jae,pt
jae
shl
shlb
lods
xchg
or
int
adc
mov
push
dec
loope
fsubrs
cmp
push
pop
mov
push
out
xchg
cmc
out
lods
mov
imul
mov
enter
dec
loopne
mov
dec
icebp
inc
push
das
mov
sub
gs
adc
imul
lds
movsl
stos
push
das
mov
push
push
aas
notb
test
push
jne
pand
shll
loope
add
pop
shlb
mov
mov
lea
dec
adc
sub
mov
mov
pop
or
cmc
lods
aad
test
ja
inc
sbbl
int3
repnz
jge
cmpsl
or
xchg
lods
rol
outsl
mov
test
loopne
pop
in
jmp
adc
xchg
sbb
pop
jo
xchg
xor
ja
add
sub
imul
mov
fxch
dec
cmp
arpl
add
and
inc
fs
cmpsl
mov
fdivl
pop
mov
stos
xchg
and
aam
fistps
data16
scas
mov
out
push
xlat
mov
xor
cmp
out
pop
aas
or
push
inc
shlb
lret
push
scas
stos
ret
mov
mov
int
and
fdivrs
scas
cltd
jbe
mov
xchg
pop
jle
insl
jmp
adc
inc
sbb
test
and
mov
adc
push
dec
shlb
xchg
mov
push
or
mov
jae
popa
cwtl
sub
dec
sbb
cmpsl
sahf
and
mov
add
mov
xchg
and
mov
cli
in
mov
sbb
pop
popfw
xchg
adc
cli
sahf
cs
dec
push
rcll
ret
testb
test
lock
pop
pop
push
iret
pop
repz
jmp
jmp
sbb
and
loopne
cmpsb
mov
loopne
push
aas
xor
lea
dec
es
arpl
loop
xor
sbb
fst
sbb
push
pop
sbb
sub
int
jg
js
xchg
dec
out
fidivs
pop
insl
test
pop
cmp
test
pop
pusha
xor
mov
shll
cwtl
mov
add
out
in
push
aaa
out
mov
rcll
inc
popf
test
mov
movsb
daa
mov
pusha
sub
jle
pop
pop
loop
push
inc
dec
xchg
mov
and
sub
cmp
and
xchg
call
lods
idivb
out
les
popf
or
lcall
lea
mov
jge
or
jp
js
jae
ret
add
out
pop
add
push
xchg
add
div
pusha
nop
pop
out
inc
xchg
mov
js
out
push
hlt
add
add
adc
aas
sahf
aam
adc
push
cli
inc
mov
frstor
mulb
cmpsb
in
scas
cmp
sbbb
stos
push
sbb
push
mov
imul
sbb
sbb
xor
mov
push
scas
pop
and
fadds
pop
loop
aam
or
rcl
sub
shlb
or
cwtl
or
mov
bound
or
fsubr
sub
dec
mov
sti
push
lret
out
in
in
inc
dec
popa
cmp
push
cmp
fs
js
orb
add
inc
mov
sahf
sbb
mov
and
sbb
push
jae
adc
jge
in
jle
movsl
cs
fldt
add
pushf
xor
flds
insb
repnz
pop
fcomip
sahf
movsb
jns
cmpl
setl
mov
shll
imul
lds
lahf
aad
xor
push
lcall
lahf
mov
adc
bound
push
xor
int
daa
aam
arpl
fxam
jb
cltd
test
cld
in
sbb
xor
sbb
xchg
in
mov
cmp
mov
rclb
xlat
push
push
rol
sub
mov
rorl
mov
pop
mov
push
push
enter
and
adc
sbb
push
sbb
inc
and
mov
adc
push
push
fimuls
jmp
or
daa
mov
popf
rorb
or
add
jns
mov
xor
jb
adc
add
mov
inc
sarb
pop
imul
test
dec
cmp
ret
in
movsb
in
xchg
aas
fwait
add
das
dec
cli
cmp
and
inc
mov
pop
fnsave
xchg
dec
enter
and
add
adc
js
xor
in
andl
mov
xchg
push
sahf
jmp
cld
xor
out
jno
mov
jg
mov
cli
or
dec
and
and
mov
jmp
es
stc
push
je
mov
test
mov
pop
add
aad
sub
dec
and
ljmp
movsl
mov
fs
scas
mov
push
arpl
test
outsb
sbb
shll
enter
sahf
pop
or
ljmp
cmc
outsl
imul
movsb
dec
dec
imul
dec
arpl
out
pusha
into
adc
cs
adc
push
xor
into
mov
sub
pop
mov
movsl
fs
adc
sub
jns
inc
xchg
mov
dec
out
fnstenv
test
in
outsl
arpl
lgs
scas
outsb
cwtl
dec
and
push
in
push
jecxz
xor
pop
insl
pop
mov
out
jns
je
shl
js
dec
cli
mov
xor
sbb
add
pop
dec
xchg
and
mov
lahf
dec
nop
popf
popf
out
jle
add
test
xchg
cmp
ret
dec
pop
mov
jo
test
in
and
sub
arpl
mov
ss
das
inc
ret
addb
push
lcall
popa
pop
hlt
adc
pop
fs
mov
das
xor
push
mov
cmp
mov
fstl
inc
gs
ljmp
sbb
inc
adc
sub
sbb
sarl
out
or
sbb
mov
sarl
add
test
xchg
push
clc
leave
inc
out
push
mov
or
rclb
adc
inc
xor
insb
xor
lock
sbb
push
pushf
mov
popf
push
lcall
into
imul
sti
mov
out
jb
mov
xor
dec
add
lahf
add
inc
xchg
and
sti
loop
cmp
pop
jmp
outsl
adc
sub
sub
add
fcmovbe
pop
gs
lods
push
mov
out
test
and
mov
imul
dec
shr
xchg
jmp
mov
pop
inc
cmpl
cltd
insb
aad
les
popa
jnp
lods
pop
xlat
lods
xchg
and
in
add
pop
xor
enter
pop
jmp
cmp
loopne
pop
scas
push
test
cmpsb
jo
ret
jle
lahf
jecxz
cltd
sbbl
and
sbb
adc
dec
pop
inc
push
cli
dec
call
and
jbe
pop
sub
int3
cld
fdivs
out
mov
xchg
inc
test
mov
dec
mov
pop
jo
std
movsb
mov
lock
popf
sbb
pop
mov
mov
aaa
cwtl
xchg
pop
fisubrs
push
in
pusha
mov
movsl
mov
pop
xor
cmp
sub
out
lcall
pusha
push
repz
cmpsl
inc
andl
xchg
or
scas
mov
mov
sub
lock
add
xchg
repnz
pop
lock
or
jb
or
inc
rcrb
fwait
jge
inc
or
mov
pop
sbb
push
push
ja
lock
mov
invd
aad
dec
call
pop
mov
add
mov
test
dec
icebp
lret
push
push
jmp
push
or
mov
fdivs
push
push
mov
ret
test
movsb
stos
int3
xchg
push
ljmp
cmc
rorb
xchg
jl
jnp
jnp
sub
dec
aam
mov
cmp
mov
add
sub
lods
cmp
enter
mov
lcall
nop
xchg
rorl
inc
jl
std
xchg
loop
mov
iret
popa
push
push
pusha
xor
add
enter
aaa
stos
dec
mov
dec
enter
push
fwait
je
dec
sub
xor
jno
jmp
insl
lcall
lods
adc
sub
outsb
jmp
mov
lret
mov
push
sarl
adcb
push
dec
pop
cmpsl
jle
and
rorl
inc
jo
in
jg
sbb
outsl
cmpsb
adc
fsubrs
mov
sbb
fldenv
inc
add
hlt
or
in
outsb
push
cmp
pop
addr16
movsl
fsubrl
jbe
mov
or
mov
mov
xchg
orl
ret
stc
and
pop
clc
push
std
rcr
jl
push
test
cmp
imul
pop
outsb
out
sub
jge
or
and
sbbb
jb
lahf
mov
and
hlt
cs
lahf
push
jbe
stos
pushf
inc
es
je
test
stos
dec
adcb
les
loopne
jmp
mov
cmc
mov
ror
mov
in
popa
daa
sub
mov
xchg
mov
push
aaa
jno
cmpsb
cli
sbb
pop
add
inc
daa
loopne
push
loop
test
filds
sub
xor
adc
pop
ljmp
jle
fninit
cli
add
push
sbb
test
inc
or
and
push
mov
dec
int
pop
sbb
pop
adc
sub
mov
bound
pop
mov
sbb
xchg
cmp
imul
cmp
incl
int3
cli
pop
fs
pop
xor
out
pushf
inc
enter
pop
mov
nop
lahf
xchg
lahf
mov
dec
ret
add
es
add
shrb
jae
loope
xchg
sbb
mov
jecxz
add
jmp
jb
adc
mov
test
movsb
dec
stos
sbb
aas
std
mov
cmp
cld
fs
xchg
pop
mov
cwtl
sbb
pop
pop
sbb
jb
ss
xlat
add
mov
loope
xor
cmp
and
sar
incl
sbb
ljmp
adc
inc
inc
cmp
out
daa
pop
pop
add
xor
pushf
and
roll
add
lcall
lahf
mov
jle
pop
push
cli
lahf
dec
lea
out
pop
jecxz
mov
mov
lods
shrb
mov
insb
mov
int3
pop
test
and
int3
xor
push
fbld
jb
dec
lahf
testb
add
inc
push
adc
insl
in
pop
inc
lds
lods
into
test
in
frstor
push
bound
pop
xchg
push
sub
jno
push
imul
repnz
mov
fimull
or
fs
pop
ss
add
cmpsb
cltd
fstl
insl
inc
lock
pop
inc
pop
or
xchg
popa
jno
cmp
push
outsl
or
mov
and
push
inc
mov
or
fstpl
les
aaa
push
stos
test
out
xchg
dec
addr16
mov
arpl
xlat
rolb
jmp
mov
insl
cmp
inc
and
inc
ds
fstpt
stc
mov
fdivs
xor
xor
hlt
pop
shl
fadds
mov
scas
mov
push
outsl
mov
and
sarb
mov
jmp
mov
pop
xchg
daa
pop
xchg
mov
jp
clc
mov
dec
push
jg
ret
add
lods
jae
aas
subb
popf
fcomps
repnz
sbb
repz
sbb
rclb
pusha
testl
shrl
pusha
mov
data16
pushl
push
cld
push
lea
mov
shl
mov
xor
cmpsl
xor
mov
push
fwait
cmp
lods
dec
cwtl
mov
cmpsl
out
and
xchg
dec
popa
cmp
adc
jb
arpl
test
enter
lods
cmp
xor
adc
les
mov
jo
inc
scas
push
arpl
lea
adc
sahf
cld
fs
inc
mov
stos
jns
gs
mov
push
popa
or
shlb
xor
mov
dec
lahf
push
mull
sbb
out
cmp
cmp
addl
or
pushf
bound
shld
add
push
enter
int3
out
fbstp
sub
xchg
add
cmpsl
aam
dec
repz
cmp
mov
int3
clc
push
inc
add
xchg
test
fmuls
pop
mov
subb
lea
aaa
into
rcr
fwait
dec
xchg
ret
pop
pop
sub
dec
jae
mov
push
pop
aad
cld
cld
jg
mov
insb
fdivs
aad
xchg
out
or
mov
mov
movsb
jnp
and
push
cwtl
push
mov
adc
leave
pop
cmp
mov
xor
pop
pop
push
pop
mov
xchg
push
dec
jb
xor
inc
xchg
mov
pusha
and
xchg
das
idiv
push
aaa
jae
int3
in
adc
sub
mov
pushf
pop
and
add
test
into
mul
ljmp
int3
adc
xchg
and
test
xchg
int3
int3
dec
das
or
cmc
pop
stos
stc
in
push
test
or
ja
jns
mov
cli
fdivp
add
mov
pop
nop
rcrl
shl
sbb
ret
sbb
iret
inc
aas
fidivl
test
aas
mov
icebp
loop
mov
rorb
ds
or
xor
or
rcll
ja
push
dec
dec
test
xor
inc
pop
in
fcom
rcrb
mov
fisubrs
cmp
adc
xchg
scas
shlb
jb
mov
xchg
sub
mov
cltd
js
push
pusha
in
mov
adc
dec
add
imul
mov
clc
jecxz
inc
sbb
loopne
cmc
imul
addb
fdivl
pop
icebp
mov
daa
push
sub
xchg
pop
ds
and
pxor
push
push
sbb
jno
and
popf
or
pop
xor
iret
xchg
lcall
jb
mov
data16
shrb
ficomps
out
std
mov
arpl
aaa
dec
fnstenv
push
lods
mov
mov
jns
adc
test
adc
sbb
les
push
dec
out
sub
push
lret
xor
or
outsl
inc
jno
pop
cld
mov
int3
and
repnz
jle
jl
and
jmp
push
bswap
or
imul
push
jmp
es
and
rclb
mov
add
or
mov
dec
imul
mov
or
mov
add
mov
sti
add
sub
xor
cmpsb
fincstp
in
jp
adc
sbb
lahf
or
cmpsl
inc
das
mov
in
cltd
rep
inc
and
insl
lret
and
push
popa
out
add
add
ret
dec
test
mov
jle
stos
sbbb
push
adc
xchg
jg
fsubr
roll
and
sbb
clc
mov
and
mov
pop
stc
push
inc
jg
pop
daa
inc
adc
add
jae
or
mov
lods
pop
adc
xor
mov
fimull
popf
in
into
sbb
pusha
mov
fnstenv
inc
lods
mov
pop
movsb
xchg
jmp
addr16
push
dec
dec
push
sbb
jno
xchg
sub
imulb
jle
add
push
int
shld
lret
xor
dec
movsl
aaa
in
mov
cmp
call
sbb
mov
inc
js
mulb
movsb
es
jecxz
dec
fisubs
lret
lods
sahf
xor
cmp
mov
mov
xor
repnz
xor
cwtl
testl
fistpll
add
dec
notl
ja
and
sub
or
xchg
mov
and
ja
cmp
leave
cld
and
mov
les
push
sbb
enter
xor
add
les
cli
sbb
in
mov
pop
scas
or
push
add
sbb
orl
xchg
test
call
insl
rorb
mov
push
stos
testl
dec
cmp
into
add
xchg
xor
and
popf
loop
popf
inc
rorb
mov
sbb
pop
jne
out
stos
xchg
mov
adcb
sahf
imul
in
sbb
rorb
cltd
daa
push
xor
iret
repz
mov
outsl
call
pop
out
lret
mov
out
and
lcall
test
dec
movsl
sub
mov
add
lea
xchg
push
inc
pop
adc
and
inc
bound
push
or
mov
add
pop
jb
scas
jbe
mull
fsub
push
push
sub
add
hlt
mov
pop
dec
fimuls
mov
push
mov
dec
imul
xor
mov
cmc
fistl
aas
mov
lret
sbb
ret
ja
cmp
call
xor
fwait
jns
pop
shrl
popf
test
sahf
call
mov
ja
jecxz
adc
jl
arpl
push
xchg
movsw
repnz
loope
adc
pop
movsb
ret
es
pop
mov
push
roll
sub
ret
ja
mov
jp
lret
xlat
pop
inc
xor
imul
insl
insl
adc
pop
movsl
cmp
shrl
in
in
lret
pop
fsub
cmpsl
xor
les
ret
cmc
mov
in
mov
inc
and
mov
pop
bound
jl
cmpb
rorb
sub
xchg
mov
orb
sub
xchg
adc
xor
xchg
push
ljmp
mov
in
insl
xor
push
add
movsl
cltd
int3
sbb
jmp
xchg
adc
fadd
inc
gs
mov
xor
pop
xor
xchg
aam
mov
stos
jne
rcll
mov
dec
enter
repnz
sbb
aas
loopne
sub
pop
pop
add
mov
xor
clc
jno
mov
jbe
pop
ret
and
sbb
roll
mov
in
jg
aaa
jb
repnz
or
roll
aad
idivl
popf
mov
lret
jp
mov
mov
adc
shrb
das
add
inc
std
pop
jmp
out
out
rcrb
sbb
mov
jmp
jl
inc
ficoms
pop
in
inc
leave
push
cmc
cmp
inc
aaa
push
hlt
mov
das
cltd
mov
bnd
push
dec
icebp
push
xor
incb
movb
popf
daa
pop
cmp
rcrb
adc
mov
mov
xchg
mov
mov
or
loopne
cli
pop
aas
mull
sub
rcr
mov
in
scas
inc
sub
dec
outsb
outsb
mov
loopne
jmp
popa
mov
pop
dec
dec
mov
test
imul
rol
jp
cmp
stc
sbb
add
outsl
in
inc
lea
sbbb
test
in
scas
mov
ficompl
or
cld
xor
fcomps
push
dec
inc
dec
inc
mov
call
jp
sbb
xor
ror
push
mov
scas
imul
lods
pop
push
adc
xor
fdivrs
lret
mov
mull
mov
mov
fcomip
mov
push
cmc
xor
dec
ja
insl
xor
pop
cltd
xchg
addb
mov
inc
cmp
fsubrp
sbb
aas
pop
lahf
mov
out
pop
leave
sub
arpl
das
cmp
jmp
adc
push
cmp
dec
fistpll
cmp
dec
adc
std
outsb
jae
push
xchg
and
mov
xchg
push
in
push
cwtl
or
adc
nop
jecxz
mov
stc
popf
jge
dec
adc
and
ret
cmp
pop
fidivrs
lcall
push
pop
jne
cld
cli
mov
shlb
sbb
sub
repnz
fnstsw
outsb
jp
test
int3
push
pop
cli
inc
pop
ret
ficoms
push
jo
sbb
jl
andl
and
xor
loope
sbb
imull
push
cmpsb
xlat
adcb
mov
dec
loop
mov
dec
cmp
jbe
loope
push
subb
and
push
pop
fs
mov
xchg
add
xor
jmp
sub
or
cs
adcl
cmp
pop
orl
push
hlt
idivb
ljmp
sbb
rcrb
cmp
test
jg
ljmp
xor
aas
aam
xor
insb
lret
dec
xor
mov
mov
push
arpl
in
xchg
out
cmp
sub
test
or
dec
pop
iret
into
jne
in
sub
aaa
inc
daa
mov
push
or
sub
jmp
mov
cld
and
and
fidivs
jne
ss
imul
dec
popf
sarb
mov
mov
jae
pop
pop
cltd
stos
sbb
jb
js
add
lcall
jg
std
xlat
xchg
xor
jle
jns
outsb
jb
je
imul
je
add
pop
and
jb
xor
jmp
xchg
ret
dec
push
or
fidivl
adc
gs
or
insb
lahf
adc
and
ljmp
adc
aad
int3
xor
sahf
adc
cs
sub
pop
scas
fldt
stos
cs
hlt
mov
dec
adcb
pop
push
mov
out
mov
dec
sub
mov
sub
aad
dec
test
mov
out
enter
inc
push
in
inc
movsb
lea
in
pop
leave
pop
daa
cld
dec
std
mov
adc
addr16
cwtl
jl
ret
shl
mov
push
ds
push
scas
lock
ljmp
push
shrb
movsl
hlt
push
in
mov
pop
aad
dec
inc
scas
stc
sub
push
das
and
xchg
or
addr16
in
lds
cmp
idivl
dec
jge
andb
out
sub
sub
mov
imul
xchg
popa
mov
inc
add
daa
cwtl
push
outsl
mov
inc
inc
je
sub
and
jge
fmull
jge
popf
sub
inc
mov
mov
cmp
xlat
jmp
sbb
fcmovnb
dec
jl
movsb
or
xchg
xchg
out
out
popa
repz
and
jg
loope
out
mov
jge
push
fldcw
and
pop
push
out
and
mov
push
push
sub
fisttps
jecxz
jne
mov
adc
pop
jg
lods
sub
add
cmp
lcall
rcr
cmp
pop
lcall
or
xchg
cmp
jg
cltd
xchg
push
sub
xchg
out
fimuls
aas
negb
sbb
ja
push
popa
popl
gs
mov
cli
arpl
es
packuswb
cmpsb
sub
scas
push
fstp
rolb
and
cmp
test
dec
mov
and
and
pop
ret
out
inc
sbb
aam
or
mov
cli
xor
sbb
es
xor
mov
add
add
cld
and
imul
mov
leave
cmc
ljmp
pop
cli
xor
imul
outsb
xor
mov
or
test
sub
bswap
je
mov
mov
std
lock
cmpsb
bound
mov
je
xor
divl
outsl
fldl
sarb
push
int3
pop
mov
add
jbe
outsl
aad
sub
nop
in
arpl
mov
push
xor
inc
mov
insl
divl
clc
scas
cmpsb
sub
pushf
sarb
sub
sbb
push
mov
xchg
cmp
xchg
stos
in
jl
pusha
mov
aam
mov
out
in
shlb
jno
mov
call
andb
fsubrs
xchg
ret
cmp
mov
int
les
js
mov
mov
xor
fwait
adcl
test
cmc
in
rorl
out
dec
mov
jne
sbb
sbb
and
jmp
jmp
loopne
mov
mov
jo
mov
mov
adc
sbb
call
shrl
dec
dec
pop
lret
xor
jp
jno
xchg
xchg
icebp
cltd
mov
sbb
push
stos
cmpsl
repnz
or
add
sub
push
cmp
add
jae
cs
xor
cmc
mov
popa
adc
add
add
inc
fs
mov
jp
sub
arpl
push
jmp
bound
movsl
lods
cmp
jecxz
test
mov
dec
sub
ret
mov
cmp
aam
mov
inc
push
pop
les
mov
rdmsr
xchg
pop
inc
addr16
jnp
sbb
adc
push
cmpsb
sahf
inc
jp
adc
add
inc
mov
insl
pop
sbb
lods
xor
pop
shrb
icebp
icebp
pop
push
out
js
in
inc
sti
aaa
push
dec
in
mov
push
adc
sub
roll
int3
mov
roll
or
mov
add
ret
fsubrs
xorb
cmpb
mov
enter
dec
cs
es
add
fs
pop
push
sbb
cmp
movsb
inc
out
xor
repnz
jle
cmc
add
mov
enter
mov
sbb
inc
push
std
aas
not
andl
sub
leave
stos
pop
xchg
out
inc
in
sahf
mov
xchg
and
adc
cmp
jmp
adc
clc
cmp
fcompl
into
mov
sbb
add
cmp
fsubrl
jo
gs
inc
inc
mov
inc
popf
sbb
jo
push
in
insl
pushl
repnz
and
add
sbb
or
sbb
fisttpll
add
stos
outsb
xchg
xchg
mov
mov
subl
pop
mov
xchg
mov
hlt
and
outsb
lahf
and
add
stc
or
adc
xchg
cltd
scas
push
jo
xchg
jnp
js
adc
daa
jno
repz
adc
gs
into
cmp
movsl
lds
sub
addb
bound
push
mov
es
push
mov
mov
cmp
ror
mov
sub
fs
mov
xchg
mov
push
repz
jmp
jmp
cmp
enter
sti
jp
or
sahf
nop
lods
sbbl
xchg
or
mov
jp
aaa
and
mov
aas
mov
push
mov
movsb
not
and
mov
cs
sbb
cmp
sti
pop
dec
notb
mov
jae
mov
divl
mov
lods
cmp
ficoms
jae
repnz
mov
jp
cmpb
mov
or
xchg
mov
pop
dec
xor
inc
push
or
cmp
mov
fadd
sub
mov
mov
scas
js
jge
xchg
aad
xor
jmp
lahf
push
mov
adc
cld
shll
loop
rcll
jb
lret
mov
push
cmp
das
popf
jmp
stos
rolb
movsl
push
addr16
jo
subl
shufps
or
fwait
inc
sti
mov
jo
mov
lret
scas
mov
push
jnp
push
add
loope
jl
adc
cmp
xchg
xlat
dec
cwtl
push
mov
mov
mov
cmp
push
mov
push
add
xchg
xor
test
cmc
shr
cs
cltd
pop
outsl
cmp
bound
adc
sub
jg
enter
pop
xchg
in
adc
mov
xor
or
push
stos
ret
pop
mov
fs
push
adc
xor
cmpsb
jb
cli
in
int3
arpl
fs
sbb
fidivrs
scas
lcall
repz
int
loopne
xor
andb
movsb
xor
pop
mov
pop
lret
aad
or
lods
cmp
addr16
adc
in
js
fs
aad
lods
repnz
and
pushf
outsl
lcall
cmp
sbb
xchg
or
and
aaa
popa
outsb
xor
mov
jmp
les
sub
and
mov
mov
pop
mov
enter
lock
pushf
fistpl
mov
dec
fwait
ret
sbb
sbb
cli
sti
lods
pop
scas
mov
mov
pop
cli
xchg
adc
jmp
fcmovu
js
lcall
cmp
bound
ror
ret
pop
xchg
adc
movsb
orl
mov
fildl
arpl
xchg
pop
loopne
pop
inc
adc
ds
cmp
or
lret
out
push
adc
mov
cld
mov
fs
fdivs
xchg
ret
rcll
xchg
fcoml
cmc
sub
inc
xor
xchg
subl
jle
dec
xchg
add
add
or
lret
fldenv
adc
mov
mov
xlat
inc
mov
adc
xor
mov
push
imul
jbe
mov
insl
lds
dec
jmp
or
stc
shlb
shl
sbb
pushf
rolb
aaa
hlt
or
rcll
in
lea
mov
sbb
lret
cmp
aas
rolb
mov
pushl
ds
cld
pop
out
fs
add
cmp
inc
jp
xchg
sbb
or
dec
stc
fisttpll
jnp
or
shlb
leave
push
push
pushf
negl
inc
xor
push
ljmp
std
dec
jno
sbb
ret
pop
fs
pop
jecxz
std
lods
mov
push
je
jo
xorb
and
sbb
clc
mov
shrb
cmp
imul
cmp
les
xchg
pop
sti
xchg
and
lods
sub
sbb
dec
or
pop
mov
lock
cltd
dec
xchg
push
aam
test
adc
test
jp
lret
sbb
adc
aad
jl
stc
mov
dec
movsl
sbb
dec
lds
dec
jge
pop
push
cmpsl
pop
popf
fxch
loope
add
mov
int
daa
repnz
arpl
ret
in
pushf
add
cmpsb
outsl
leave
fdivl
pop
cmc
hlt
ret
or
add
inc
push
and
repnz
aam
js
mov
adc
push
pop
push
js
adc
stos
lcall
and
hlt
aam
out
cld
std
popa
mov
inc
dec
cmp
adc
cs
aaa
jne
adcb
enter
cli
and
out
xchg
sub
add
mov
es
cmp
jns
mov
hlt
adc
mov
push
hlt
add
push
mov
mov
push
dec
mov
fisubs
push
mov
mov
sbb
mov
cld
mov
inc
in
pop
xor
insb
and
mov
mov
out
aam
adcl
pop
push
and
fsubs
mov
or
push
push
xor
dec
adc
dec
iret
xor
jecxz
xor
lret
sub
adc
int
add
mov
cs
fcoms
in
in
xor
xchg
adc
xor
sbb
insb
loope
pusha
pop
mov
cmc
repz
mov
gs
jb
scas
les
mov
jno
mov
xor
pop
rcll
inc
cmp
test
or
push
push
imul
je
leave
test
add
cmpsl
jmp
push
mov
cmp
adc
fisubs
shlb
fistps
push
leave
xchg
dec
add
pushf
and
jae
mov
dec
push
xor
xor
mov
pop
cmp
stos
sti
movsl
mov
mov
enter
add
inc
outsb
mov
test
xor
or
mov
jbe
dec
cli
sub
and
pop
stos
adc
inc
push
mov
aaa
pop
mov
dec
xchg
repz
dec
push
push
jb,pn
outsb
sbb
divb
sbb
mov
in
push
rcrb
cmovne
cs
mov
cltd
or
inc
cmpsl
imul
jbe
icebp
test
movsb
jg
movsl
test
mov
add
sbb
aas
popf
and
ja
movsl
pop
in
pop
pop
sar
pop
mov
repnz
jp
inc
or
lcall
iret
mov
xor
insl
and
mov
add
test
jbe
sbb
sub
push
jg
lods
push
mov
out
or
out
ss
pop
jo
inc
loopne
jbe
sub
in
ja
inc
test
icebp
mov
dec
sub
mov
jno
pusha
push
or
xchg
dec
adc
adc
and
cmp
add
jb
push
ss
mov
mov
inc
sub
in
mov
imul
je
mov
push
ret
jns
inc
cmp
push
mov
sbb
mov
aas
fwait
pop
xor
aas
scas
adc
lods
cs
mov
aam
mov
cld
sub
add
add
mov
or
push
clc
lods
fistpl
clc
jecxz
mov
aas
out
xchg
stos
sub
inc
cmc
and
loopne
xchg
inc
int3
leave
les
lcall
inc
adc
mov
sti
inc
or
push
mov
sub
std
cwtl
sbb
cmp
iret
daa
aad
push
sahf
js
stc
sbb
into
js
in
iret
repnz
xor
filds
cmp
fwait
mov
mov
dec
jnp
mov
jne
jge
hlt
pop
mov
xchg
in
icebp
xor
or
shll
popf
pop
inc
push
pop
les
xchg
adcb
icebp
add
inc
mov
les
push
in
or
aas
or
mov
inc
jb
mov
popf
or
cli
mov
ret
push
enter
mov
inc
sbbb
mov
fsubl
cmp
mov
repz
std
xlat
leave
movd
sbb
fiaddl
sar
cli
out
push
xor
daa
mov
out
mov
jle
mov
fucom
mov
and
clc
xchg
stos
or
add
and
movsb
inc
adcb
mov
ret
mov
or
ljmp
sub
movsl
outsb
insb
aaa
adc
push
mov
imul
lds
mov
adc
adc
shll
sub
xchg
cmpsb
sbb
arpl
int
shr
lret
mov
inc
arpl
shrl
jg
and
lahf
dec
out
ljmp
jne
add
push
xor
pop
push
add
hlt
xor
cld
mov
sbb
cmp
adc
mov
push
out
sbb
mov
test
xchg
mov
add
cld
dec
scas
pop
daa
fbld
adc
xchg
add
or
leave
scas
cmp
add
sti
jle
add
ror
sbb
movsl
and
dec
or
scas
add
fsubrl
sub
pop
scas
sub
loope
or
jb
mov
and
shrb
mov
inc
data16
icebp
subl
repz
jg
fiaddl
inc
mov
mov
xor
vunpckhpd
mov
cltd
pop
add
dec
jae
call
inc
mov
add
ja
shll
adc
not
jg
call
jae
lock
add
mov
sahf
jne
pop
and
push
insb
pop
sbb
outsl
pop
jle
sbb
loopne
cwtl
lret
cmp
stos
push
or
mov
add
cli
jecxz
div
jg
sub
imul
xchg
test
loop
sub
xchg
out
stos
pop
ret
sub
xor
lahf
or
stc
mov
mov
and
ljmp
sbb
repnz
lret
clc
add
push
or
stos
xchg
pop
add
in
stos
mov
jge
xor
mov
scas
int
fisubrs
imul
xor
or
jbe
daa
adc
inc
in
xchg
jmp
cmp
aad
inc
or
add
cmp
pop
imul
lahf
fcomps
call
ret
in
mov
pop
loop
sbb
in
test
addr16
ss
int3
rep
repnz
orb
out
xchg
jae
mov
mov
ret
or
loope
lea
mov
daa
mov
mov
jge
jbe
add
sbb
or
adc
mov
sbb
ds
dec
push
test
xchg
lods
dec
pop
xor
cs
lea
lret
stos
movsl
stc
mov
mov
subl
out
ret
cmp
out
or
stos
pop
mov
cmp
mov
mov
lcall
rclb
pop
and
int
movsl
mov
mov
cmc
fisubrl
xor
cmp
in
adc
dec
and
shl
test
aam
out
jl
cmp
jnp
nop
mov
cmp
in
imul
cmp
stos
pop
mov
pop
add
inc
xchg
fisubrs
push
lret
add
clc
aam
add
sar
jmp
adcl
inc
jmp
std
cmp
push
mov
aas
ret
sub
adc
inc
xchg
imull
in
add
or
int3
xchg
push
stos
sbb
fcmovnbe
stos
sbb
sub
shlb
in
cld
scas
leave
arpl
lcall
adc
push
addr16
leave
mov
data16
jecxz
testb
push
daa
cs
iret
inc
adc
push
sub
dec
ljmp
jp
insb
sbb
aas
loopne
xor
in
xor
and
pop
lcall
jecxz
mov
cmpsb
push
inc
sahf
loopne
xchg
pop
in
or
dec
lar
inc
or
jb
push
pop
and
arpl
xchg
jo
pop
cmpsl
mov
in
mov
clc
outsl
mov
pop
adc
xchg
scas
nop
movsl
lcall
out
pop
loop
xchg
hlt
cltd
inc
xor
mov
xor
xchg
add
lahf
add
aas
and
into
sbb
xlat
xor
inc
lds
repz
dec
mov
pop
int
sbb
ss
xchg
xchg
mov
add
xor
sbb
jbe
out
pop
cmp
outsb
xchg
pushf
mov
loope
fcomps
cld
jl
arpl
jns
outsb
push
cld
xchg
js
inc
je
push
hlt
or
jl
jns
pop
adc
xor
cmp
clc
mov
xor
sub
jp
or
jae
sahf
imul
in
cmpsl
xchg
xchg
adc
dec
dec
add
and
push
mov
push
sub
ret
xchg
xor
scas
jl
gs
rorl
mov
cmc
test
xchg
dec
fcmovb
cmpsl
add
xor
fwait
pop
cmpsl
jmp
mov
cld
add
push
xchg
shl
movsb
mov
inc
cmp
push
enter
inc
mov
or
xchg
lret
dec
lods
add
and
js
xchg
jae
pop
int
call
adc
mov
and
test
mov
mov
pop
sub
mov
lret
add
test
mov
rol
add
xchg
sbbl
aas
or
cmp
loopne
xor
jmp
lock
test
mov
insl
mov
arpl
sbb
adc
adc
cmpsb
xchg
pop
stos
imul
clc
mov
fstpl
jae
lret
dec
mov
adc
cltd
mov
add
cmp
xchg
add
cmp
in
sahf
fcomps
pop
faddl
cmp
push
sti
aam
lret
cs
pop
call
call
cmp
inc
inc
outsb
cli
shl
fbstp
sbb
aaa
dec
ja
xchg
and
das
push
inc
int3
mov
push
sbb
or
aad
push
test
dec
repnz
out
jbe,pn
mov
cmpl
dec
mov
and
aas
sti
cmp
insl
ljmp
nop
pusha
xor
gs
mov
sahf
mov
scas
aas
shll
daa
jle
pop
repz
out
std
cmpsl
fidivs
inc
xor
and
push
lret
dec
mov
pop
clc
push
xchg
faddl
cmp
lahf
iret
daa
sub
clc
jns
dec
or
pusha
cli
and
shll
add
lds
add
dec
cwtl
cmp
scas
jbe
adc
pop
in
test
popf
add
jne
mov
addl
mov
clc
xor
sbb
repnz
inc
out
sar
inc
sarl
aam
aas
lcall
out
add
sub
or
popw
adc
in
aaa
leave
jne
push
loop
jns
inc
push
mov
sub
or
popl
dec
pop
stc
mov
aaa
arpl
rcrb
in
out
pop
xor
jno
out
call
and
mov
jns
dec
ficomps
mov
loop
jge
add
push
cmp
adc
mov
and
lds
das
fcomip
gs
cltd
pop
push
imull
jno
cmc
test
or
out
les
jnp
shrb
cmc
xchg
xchg
rcrb
fs
sahf
xchg
shll
xchg
aaa
movsl
in
andb
sarl
arpl
jns
into
and
je,pt
cld
mov
xchg
or
mov
rclb
dec
inc
dec
lds
sbb
and
push
inc
cltd
jmp
sbb
icebp
cld
fimuls
sub
outsl
sbb
test
xchg
aam
add
jp
sub
icebp
ret
pushf
sbb
loopne
loopne
mov
dec
divl
leave
cwtl
dec
cli
sbb
popa
loope
rolb
daa
out
and
cmp
pop
mov
mov
and
loop
inc
dec
dec
adc
xorb
mov
lret
push
xor
iret
push
jmp
shlb
xor
add
push
enter
ds
je
xchg
je
sbb
mov
lret
js
in
ret
pop
jp
dec
fwait
testb
sbb
fimull
cs
insb
fs
cmpsb
jge
or
push
int
loop
xor
xchg
lds
sub
lcall
add
pusha
lods
pusha
xchg
lods
mov
in
movsl
push
jae
and
jmp
cli
outsl
sbb
xor
inc
mov
cmp
mov
inc
and
mov
leave
out
shll
loopne
inc
push
pop
in
push
out
mov
mov
fistps
les
jbe
dec
mov
test
adc
in
jbe
xchg
call
jge
testb
aam
iret
scas
shlb
xchg
cmc
xor
push
sub
mov
popf
jle
and
cmpsb
repnz
and
addl
fldcw
xchg
scas
mov
or
mov
add
or
xlat
cld
pop
mov
or
in
pop
je
cld
shl
mov
out
inc
in
fstps
enter
cld
jno
push
inc
cmp
dec
scas
shl
sub
cmpsb
xchg
movsb
jp
inc
pop
jb
inc
rcll
xchg
addr16
lcall
std
push
loopne
scas
push
xor
mov
out
add
or
mov
add
fidivrl
repnz
add
movsb
adcl
jae
lods
repz
stos
xchg
out
ret
jbe
push
mov
pop
mov
daa
mov
jo
insl
fldt
inc
jecxz
cs
mov
fsts
sub
mov
pop
xchg
ret
in
lahf
jge
xchg
enter
stos
fidivrl
je
adc
push
mov
pop
mov
jbe
sbb
lahf
insb
pop
leave
push
stos
mov
mov
sahf
jb
in
push
push
jns
pop
xor
and
adc
test
cmp
mov
jb
test
xor
iret
leave
add
out
outsb
in
mov
sbb
sbb
xchg
inc
aad
lods
stc
test
mov
xor
adc
ret
sbbl
adc
int
xchg
mov
mov
xor
sub
jp
je
dec
stos
pop
lods
inc
pop
xor
loopne
or
subb
leave
pusha
jne
inc
and
xchg
mov
daa
roll
mov
dec
rclb
jne
pop
xlat
and
xor
xchg
addr16
and
add
lea
fsubrl
repz
lcall
rcr
dec
mov
mov
or
stos
sti
pop
xchg
cmp
or
jmp
or
adc
or
stos
mov
ds
jae
ljmp
pop
in
aas
ljmp
loope
sbb
sub
ret
push
js
and
popa
popf
xchg
aaa
pop
and
call
xchg
xchg
mov
jmp
stc
iret
out
inc
cmp
add
inc
xor
shl
out
push
outsl
inc
inc
jo
add
xchg
adc
sbb
add
add
addr16
das
popa
stos
fsub
mov
push
add
out
jg
fstl
in
mov
fmulp
inc
addl
add
cmp
test
inc
iret
pop
rol
les
cld
out
mov
push
mov
rol
mov
outsb
sub
xchg
ja
mov
xor
cmp
imul
cwtl
aad
mov
jo
or
push
mov
test
inc
daa
mov
popl
xchg
stos
fwait
lahf
mov
arpl
cs
mov
pop
cltd
push
sbb
dec
mov
sub
insl
stc
xchg
sbb
inc
cwtl
es
add
mov
leave
jecxz
repnz
ja
mov
or
mov
fsubs
mov
or
out
mov
iret
mov
lcall
cwtl
push
outsl
lock
mov
les
jae
insb
decb
jl
out
into
cmp
sti
addr16
stc
idivb
rorb
push
mov
dec
cmp
jmp
ljmp
jmp
jg
jg
xor
call
push
jb
adc
aaa
inc
out
addr16
outsb
xchg
push
xchg
pop
mov
jmp
arpl
in
push
clc
test
fisubrl
lock
sub
push
movsl
lret
jns
lock
lahf
pop
enter
sbb
sub
and
dec
jl
sti
cwtl
add
jns
lret
pop
in
inc
rorb
push
pop
xlat
push
pop
and
add
jg
ret
push
popa
inc
adc
dec
push
push
push
push
xchg
lcall
mov
cmp
mov
fdivs
mov
cmp
jg
mov
rcrb
cmp
icebp
rcl
subb
sub
jae
dec
cmpsl
and
adc
mov
jae
shlb
push
xchg
je
neg
int3
xor
dec
push
pop
inc
jmp
rcrb
inc
pushf
cmpl
loopne
inc
mov
jecxz
adc
ja
add
mov
loopne
outsb
ret
andb
xorl
adc
pusha
xor
test
out
mov
pop
adc
mov
pop
enter
mov
pop
sbb
sbb
adc
loopne
push
aaa
aaa
pop
movlps
pop
push
add
dec
mov
cli
sbbl
imul
mov
pop
adc
pop
push
inc
sub
std
mov
mov
repz
inc
jns
sbb
sub
xor
pop
test
adc
xchg
dec
loop
mov
pop
mov
dec
sbb
lret
ds
in
or
push
mov
cltd
xor
add
pop
dec
sbb
imul
ds
xchg
clc
or
or
push
or
dec
ret
add
xchg
adc
jl
pop
inc
push
and
cld
sarb
jno
or
rcr
jle
xor
mov
iret
dec
fcmovnb
dec
mov
push
andb
inc
or
lcall
in
pop
inc
mov
lds
imul
hlt
sbb
add
cld
mov
dec
jnp
ljmp
scas
and
les
inc
fiadds
pop
es
sbb
inc
or
ss
jl
imul
jns
inc
ds
fadd
dec
ret
lods
mov
dec
mov
insb
cmpsb
jb
jbe
fadds
push
adc
ljmp
push
mov
cmp
inc
dec
cltd
xchg
or
push
push
pop
mov
nop
pop
sahf
mov
cli
push
fmuls
mov
sbb
clc
out
xor
nop
sarb
jg
sahf
in
pop
jno,pt
cltd
mov
sarl
mov
pop
xchg
test
adc
jae
add
dec
fwait
or
mov
scas
ret
or
jo
out
xchg
out
andb
pop
aad
sahf
aam
dec
mov
movsb
pop
sahf
xor
lcall
dec
movsb
rcrb
ja
cli
dec
lods
jno
and
mov
dec
cmp
sub
cmpsl
pop
add
je
xchg
rcrb
into
test
pushf
cmp
mov
test
shr
ds
adc
mov
test
sub
adc
mov
adc
xchg
pop
cmp
cmp
and
push
ljmp
call
jnp
enter
and
cmp
shrb
xchg
or
divl
mov
cmp
in
out
call
dec
cmp
cwtl
cmpb
leave
add
je
and
dec
xorl
or
mov
add
lahf
movsl
scas
pusha
cmp
mov
ljmp
iret
or
mov
mov
mov
movsl
repz
shrb
mov
jne
popa
dec
stc
in
mov
mov
stos
inc
gs
add
aad
push
sbbl
or
es
pop
or
mov
jb
inc
pop
sbb
mov
push
faddl
sahf
xchg
sbb
push
fwait
sbb
out
mulps
add
cld
lods
aaa
jne
inc
jl
lret
inc
stos
push
jmp
fwait
jle
xchg
cmp
or
les
pop
je
call
dec
std
lahf
inc
fstl
loop
pusha
cli
add
mov
out
and
stc
add
push
dec
inc
inc
adc
inc
mov
aam
outsl
int
psraw
fs
add
pop
cwtl
mov
hlt
jg
shl
mov
mov
cld
jno
xchg
addr16
sbb
loopne
sar
out
popa
lret
or
add
mov
mov
cwtl
rorb
shll
mov
repnz
mov
ljmp
gs
pushw
mov
jecxz
int3
fs
cs
das
stos
mov
jp
clc
sub
fcoml
mov
mov
push
and
cmp
nop
mov
in
ja
mov
inc
jl
jmp
sahf
lahf
pop
push
fisttpl
mov
inc
xchg
pushf
jns
pusha
and
sub
and
out
aaa
out
loope
add
jle,pn
push
jns
push
mov
lret
dec
push
push
stc
jecxz
jg
aaa
je
roll
rolb
fsubl
jmp
stc
push
jecxz
mov
lret
jg
mov
sub
xchg
data16
sahf
xor
loop
push
xor
ret
or
mov
xor
jle
cmpsl
stos
dec
push
lcall
mov
jp
enter
sub
fadds
lret
test
push
nop
divl
into
imulb
dec
push
enter
notl
jle
mov
sub
and
stos
sub
inc
jp
adc
popf
fwait
sbb
jb
fstp
test
test
pop
test
out
inc
add
mov
mov
inc
subb
in
or
enter
adcb
fsts
sbb
jbe
imul
xor
inc
mov
dec
enter
xchg
punpckhwd
jmp
xchg
jp
shrl
mov
std
mov
movsw
imul
add
mov
push
xchg
ficoms
movb
rcll
mov
call
pop
or
pop
adc
inc
ja
push
fsubs
js
imul
lock
add
sbb
ljmp
jb
jbe
push
sub
cltd
ret
cmp
in
es
std
divb
orb
iret
loop
adc
push
mov
test
xchg
fcoms
push
push
xorb
aaa
iret
loop
sub
jg
pop
jae
jbe
jl
push
push
add
jle
pop
inc
mov
lahf
lcall
push
arpl
insl
imul
js
movsl
pusha
ret
mov
push
sbb
lcall
aaa
fwait
cli
lods
xor
aam
out
mov
imul
or
mov
xor
jne
pop
int
mov
ljmp
or
mov
sbbl
insl
sub
mov
pop
cmp
mov
fisttpll
stos
std
ja
inc
mov
mov
inc
movsb
pop
fisubrs
fimull
lock
inc
jge
shll
sub
fadds
jns
test
xchg
and
arpl
cmpsl
sbb
mov
inc
scas
imul
sbb
nop
jbe
icebp
fdivrl
dec
xchg
pop
out
push
dec
pushf
cs
loop
fwait
cmpsb
inc
call
ret
push
lcall
cmp
inc
rorb
sbb
insb
enter
mov
mov
cmp
mov
and
dec
std
xchg
push
nop
push
pushf
mov
cmp
fiadds
gs
add
sbb
sub
loop
cs
fstl
lret
fnstsw
pop
inc
cmp
mov
sbb
arpl
scas
dec
fstl
fildl
stc
add
shr
movsb
add
jmp
insb
mov
sub
jge
faddl
pop
bound
stc
lret
fsubl
jns
adc
sub
test
pushf
sub
and
mov
xlat
sti
mov
jmp
mov
add
ret
pop
scas
sbb
dec
arpl
mov
lahf
in
fnstsw
jp
shl
stos
hlt
std
outsb
je
hlt
inc
add
std
xchg
in
fdiv
cmpsb
out
lds
sar
mov
and
push
pop
inc
out
xor
out
outsl
insb
pusha
sub
lahf
pop
lods
xor
pop
es
push
dec
adc
xchg
fucomp
sahf
ror
inc
js
jae
mull
mov
lret
pusha
orl
pop
jg
jne
jo
sbb
jge
in
adc
dec
sub
push
mov
daa
or
or
lods
pop
push
push
lret
push
lods
push
xlat
push
add
cld
testl
addr16
ja
add
cwtl
jp
jb
test
lock
pusha
shll
push
lret
or
or
int3
cmc
push
dec
cltd
mov
and
popa
fbld
imul
cwtl
popf
sbb
rcrl
push
cmc
add
and
inc
fdivrl
aam
ror
int3
jae
rorl
dec
add
movl
push
cs
adcb
mov
mov
dec
leave
ret
mov
mov
ret
fcoml
push
sbb
ja
or
ljmp
jnp
mov
cmc
push
mov
add
loop
push
insb
out
pop
pop
and
dec
fwait
sti
add
jbe
dec
cmpsl
ja
sub
or
aad
xchg
jle
mov
and
jae
xor
repz
xor
sahf
mov
dec
mov
lret
insl
les
aad
lret
je
daa
sub
add
fildll
sub
std
add
pop
je
repnz
and
repz
sbb
fists
arpl
xor
mov
rcll
mov
add
outsl
scas
fistpll
mov
std
adc
pop
int3
add
out
aas
push
add
pop
andl
jle
add
jmp
mov
xchg
push
add
jne
inc
and
xchg
push
sarl
jne
js
inc
sub
push
inc
lret
xchg
shl
push
rclb
mov
add
nop
and
and
repz
loop
dec
xor
subl
mov
pop
xor
rolb
das
dec
aas
ss
iret
sahf
dec
push
push
test
scas
xchg
push
ror
loop
lcall
outsb
mov
xchg
mov
dec
cwtl
sub
insl
pop
mov
sub
jb
add
or
sbb
jg
std
int
out
lahf
loop
lea
xchg
jecxz
inc
test
sub
cmp
mov
xor
test
xchg
les
out
rcrl
cmpsl
repnz
iret
xor
dec
shlb
ss
test
fldt
pop
cmc
cwtl
xchg
adc
enter
sbb
cmpb
fisttpll
sub
xor
addr16
hlt
lea
dec
push
cld
dec
js
cmp
imul
stos
inc
movsb
clc
frstor
data16
push
jg
inc
mov
cmp
cmp
addr16
xchg
xor
rcrl
sbb
scas
adc
dec
mov
nop
cmpsl
loopne
lock
mov
or
pusha
ret
rcrb
out
lds
xor
shll
xchg
xchg
and
pop
arpl
mov
jecxz
mov
mov
sub
call
stos
outsl
fists
xchg
or
out
or
jne
sbb
lret
mov
sarl
leave
lods
test
imul
inc
jg
add
clc
nop
mov
aaa
sub
jnp
or
jbe
out
dec
jno
pushf
add
fnsave
daa
lcall
flds
in
mov
mov
lods
adc
sub
add
xchg
or
movsb
jp
mov
jge
xor
sahf
adc
and
cwtl
push
adc
pop
push
lret
pop
stos
ffree
rcr
pop
inc
add
lds
ret
lock
int3
sub
add
cli
lds
fs
aas
in
push
les
and
outsl
fbstp
loopnew
ss
and
pop
xor
adc
movsl
mov
cmc
push
out
jge
and
jnp
lods
aam
push
cs
pop
aam
add
gs
or
xchg
in
xor
cli
or
xlat
mov
pusha
push
outsl
mov
arpl
lahf
inc
js
test
push
inc
jl
jle
divb
add
icebp
xor
cwtl
ds
and
ret
xor
cmpsb
push
pop
lidtl
inc
cli
in
inc
repnz
xchg
mov
test
stos
mov
xor
or
test
cmp
fildl
pop
xchg
mov
and
mov
add
fs
bound
aaa
cld
push
mov
pop
or
fwait
lods
and
aam
insb
adc
iret
pop
add
fs
fs
orb
xchg
sbb
cmp
out
sbb
inc
shll
add
out
jp
xchg
push
aaa
pushf
push
scas
xchg
push
xchg
adc
dec
xchg
mov
mov
ficomps
test
dec
int
lcall
jns
xorb
mov
push
movsl
sub
push
outsl
or
in
dec
xchg
push
mov
clc
cli
cs
mov
enter
mov
cmp
push
outsb
jno
sarl
js
daa
loopne
lret
js
loope
lret
pop
push
out
cmp
das
adc
call
scas
and
or
cmp
sbb
mov
mov
xchg
adc
fistps
mov
cmp
es
sti
scas
pmaddwd
inc
mov
and
loop
mov
push
push
inc
es
fs
rolb
fdivrs
jmp
or
inc
cwtl
mov
ss
leave
repz
adc
pop
and
js
and
movsb
movsl
and
mov
xchg
mov
or
gs
repnz
push
cwtl
in
rcrl
sbbl
lock
push
notb
scas
dec
fs
test
ds
cmp
negl
cmc
cltd
hlt
loope
mov
sbb
or
gs
movb
jne
cmp
mov
in
shlb
ret
mov
jle
add
incl
dec
jne
aaa
pop
sarb
lahf
cs
or
mov
pop
outsl
push
adc
jmp
fmull
add
adc
movsl
sahf
xchg
orl
dec
aas
pavgb
pop
add
fs
gs
sbb
bound
adc
push
dec
push
pop
and
aam
jle
cli
and
mov
popa
mov
das
xor
dec
jp
mov
cli
stos
mov
mov
push
sbbb
sub
arpl
push
arpl
dec
sub
hlt
mov
sarl
jecxz
fsubrs
and
in
int
adc
push
jp
test
mov
lret
mov
add
pop
mov
sbb
sub
bound
xor
xor
mov
sbb
shr
xor
lret
push
mov
movsl
loop
jmp
xchg
outsl
sub
push
loope
jecxz
ljmp
fdivl
pop
fdivrs
clc
inc
pop
push
mov
cmpl
add
lea
mov
lds
les
iret
shll
and
inc
mov
sbb
dec
push
rclb
cld
psubb
insb
outsb
adc
and
xor
adc
jne
arpl
adc
in
push
jne
mov
adc
out
xchg
fsubr
jl
pusha
insl
push
dec
dec
jb
lcall
pop
pop
add
enter
out
in
cmp
in
fiaddl
pop
popf
js
lret
rclb
aas
cmpsb
rclb
pop
leave
push
in
inc
cltd
mov
jg
add
mov
inc
or
psraw
cmp
mov
adc
and
inc
and
notl
jge
out
insb
gs
mov
stos
movsb
jmp
sbb
mov
setb
ret
add
leave
mov
repz
xchg
add
xor
adcb
push
out
mov
aad
test
adc
dec
mov
loope
test
jg
aam
lods
dec
jl
sahf
jecxz
mov
fldcw
dec
rcr
cmp
out
dec
and
dec
les
pop
mov
sbb
mov
push
mov
pop
mov
cld
dec
scas
or
push
cmp
outsb
sbb
in
pop
jmp
mov
mov
popf
fisttpl
das
in
push
mov
iret
push
jg
mov
or
inc
loopne
add
out
and
js
hlt
adc
mov
div
mov
sbb
pop
test
xor
mov
xor
cmp
cmp
jge
mov
cmc
push
out
mov
in
sub
sti
mov
ja
or
adc
nop
mov
into
rcl
mov
movsl
mov
jns
fidivs
in
dec
in
sysret
dec
out
leave
xor
imul
add
scas
jle
scas
mov
mov
mov
insb
call
mov
std
sub
cmp
cwtl
pop
jnp
ret
xor
mov
push
mov
mov
out
bnd
jnp
pop
or
add
sub
fcoms
xlat
out
test
pop
lods
aam
cmpsb
sub
aaa
mov
lock
aam
inc
add
dec
int
ds
mov
pushw
mov
ja
or
pop
aam
subb
pop
scas
test
lahf
aas
push
or
push
mov
mov
mov
jge
inc
fisubl
inc
adc
push
inc
add
or
dec
out
jecxz
ja
cmp
dec
sbb
int
jne
lahf
sar
sbb
dec
sbbb
xorl
xor
pop
inc
and
sti
bound
push
jp
sbb
adc
push
jo
cs
pop
cs
xchg
loop
cs
hlt
les
cmp
cmpsb
or
clc
sub
pop
jb
dec
adc
xchg
dec
mov
jno
int
sahf
jne
push
frstor
xor
clc
jbe
or
ss
mov
pushf
call
xchg
mov
les
daa
pop
jge
fstl
leave
and
sub
fwait
pop
in
fcmovnu
mov
clc
ja
negl
adc
jbe
xor
pop
mov
mov
mov
arpl
jo
loop
cmp
or
dec
mov
jg
ret
imul
stos
xchg
xchg
push
mov
mov
cmp
mov
dec
mov
jecxz
cmpb
inc
mov
out
fdivrl
mov
sar
cwtl
fwait
push
pop
pushf
pop
push
roll
ljmp
inc
mov
jae
cld
adc
mov
test
popf
sub
push
dec
xchg
addr16
sbb
fisubrl
pop
mov
adc
popf
dec
pop
cmpsl
scas
cmpsl
mov
pop
push
mov
push
lahf
repz
and
xchg
dec
and
nop
mov
sbb
mov
scas
rcl
lret
leave
jne
xchg
push
sbb
imul
es
mov
cwtl
lods
pusha
sbb
push
popf
jns
jge
inc
fldcw
aad
int
and
mov
mov
ret
and
and
add
es
mull
repnz
popa
ljmp
xor
leave
mov
in
stos
addr16
add
sub
pop
lods
mov
or
call
std
repnz
xor
xlat
in
mov
push
ret
int3
dec
xlat
and
adc
aad
jmp
pop
and
or
movsl
add
ljmp
rorl
jmp
call
stos
and
mov
mov
imul
out
inc
daa
inc
lret
inc
fmuls
and
xor
push
shrb
insb
mov
or
inc
loopne
sti
shl
movsl
mov
cmpsb
out
ficomps
mov
sbb
mov
fdiv
sub
add
mov
sub
push
stos
and
mov
scas
xor
cmc
pop
stc
dec
push
mov
pop
ljmp
cmp
xor
leave
jb
aam
sarl
sbb
push
sarl
xor
rcll
mov
jno
push
inc
inc
sbb
inc
sbb
mov
sub
fistpll
xchg
pusha
call
mov
jnp
mov
push
icebp
repz
test
add
scas
out
xlat
sub
enter
repz
ret
js
pop
and
es
adc
insb
mov
jne
or
stos
stc
bound
sarl
push
pusha
xor
xor
add
popf
push
cmp
or
out
sub
jae
mov
jno
pusha
mov
push
mov
mov
mul
popf
inc
into
inc
mov
in
mov
jle
mov
push
in
fs
xor
sbb
xchg
filds
mov
jl
repz
mov
and
in
mov
sbb
in
outsb
dec
pop
xor
add
xchg
insb
mov
inc
stos
pop
scas
out
sti
mov
and
cli
pop
adc
ja
xchg
dec
inc
or
push
nop
mov
cmp
into
out
cmp
cmp
into
daa
stos
lret
adc
bound
or
jge
sub
or
push
inc
rorl
imul
dec
jb
rclb
cmpsl
call
and
fnsave
jae
mov
popa
ja
or
lods
dec
ds
cmp
lea
adc
pop
out
inc
sbb
or
sub
cmp
cld
out
push
jmp
pop
sub
adc
test
xor
ja
aad
movsb
inc
loop
inc
mov
mov
dec
ljmp
xorb
lea
test
xchg
push
lret
mov
jp
sub
cmp
flds
addl
cwtl
jbe
dec
jl
dec
adc
aaa
out
mov
mov
fildll
bound
loopne
pop
aaa
dec
imul
inc
fs
psrld
das
or
cltd
xchg
pop
jne
and
jg
insb
pop
xchg
jl
and
int
adc
adc
scas
inc
fldcw
sbb
adc
sub
push
iret
xchg
add
out
fstpl
sarl
cmp
add
shl
mov
jno
lret
inc
push
mov
dec
int3
scas
imul
sar
fidivl
inc
ljmp
pmaxub
sub
jp
pusha
cmp
enter
je
jge
icebp
mov
xlat
cmp
push
sub
mov
xchg
sahf
mov
push
or
xchg
mov
dec
inc
jg
mov
add
and
imul
lods
stos
ret
fwait
xchg
ss
fidivrs
sbb
dec
ret
mov
and
pushf
ljmpw
jnp
mov
jno
inc
jo
inc
mov
mov
scas
sub
cmp
out
push
lahf
negl
std
add
leave
inc
jg
rclb
and
rcrl
sbb
in
inc
xor
pusha
decb
xor
push
jmp
xchg
adc
fld
in
mov
push
inc
mov
sub
stos
jb
or
imul
movsb
mov
jo
inc
and
xor
enter
and
mov
daa
leave
mov
mov
cli
xor
cmp
sbb
push
xchg
es
inc
xor
sub
push
add
into
pop
jo
pop
movsl
js
xchg
cmp
xchg
mov
ret
mov
out
push
ja
mov
push
jge
xchg
add
cmp
mov
mov
stos
dec
fidivl
xor
xchg
mov
add
jl
stc
ret
daa
repz
rcl
xchg
xor
dec
sbb
scas
movb
cmpsb
sbb
sub
mov
xchg
jmp
jb
imul
push
setns
pop
ret
push
repz
movsb
loope
ret
popf
popf
jmp
pop
les
mov
xor
stos
mov
add
insl
clc
icebp
loope
and
xchg
sub
pop
inc
addr16
push
pop
mov
repz
and
fcom
scas
push
js
out
push
mov
into
pop
add
and
scas
and
mov
fidivrl
add
lods
int
inc
xor
sub
push
or
mov
push
into
sti
roll
xor
or
add
push
push
loopne
popa
mov
jp
fisubrs
hlt
mov
in
xchg
fbstp
or
jbe
shll
sahf
lods
mov
clc
fnsave
ret
incb
addl
mov
and
dec
insl
sbb
shlb
shr
push
pop
mov
inc
mov
aas
pop
mov
stos
nop
es
mov
push
call
pop
mov
stos
and
movsl
xor
jle
aaa
dec
shlb
mov
jle
xorb
cltd
mov
mov
cmp
out
mov
cmp
mov
add
xchg
mov
cmp
xor
ja
sbb
mov
mulb
out
dec
jo
ret
imul
sub
movsl
popf
es
cli
shl
add
hlt
fildl
orb
mov
imulb
mov
adcl
rolb
push
ss
push
and
mov
jb
push
jl
shrb
push
sub
mov
and
popf
adc
jnp
xor
sbb
sub
jno
xor
enter
mov
rcrb
pop
dec
inc
arpl
and
fbstp
and
mov
xchg
sub
dec
filds
es
and
test
roll
lods
pop
sbb
mov
and
fnstsw
arpl
or
push
lods
push
add
and
cmp
leave
inc
jle
imul
div
or
xlat
sbb
popa
lods
mov
cmp
out
add
repz
gs
push
test
sbb
stos
jb
lods
pop
jae
mov
incl
loope
inc
xchg
jge
outsl
push
lods
cmp
sbbl
aad
pop
fists
aam
jge
pop
sti
xchg
sub
pusha
or
xchg
adc
jbe
mov
sub
xor
rcrb
adc
arpl
cmp
dec
lods
mov
add
xchg
cmc
fists
bound
and
xchg
xchg
xor
mov
sbb
mov
sahf
fcomi
inc
adc
repz
inc
mov
sbb
pusha
loope
inc
push
or
test
int3
pop
mov
add
sarl
push
xor
orl
sbb
cwtl
adc
imul
add
scas
adc
outsl
adc
in
scas
rcll
int
dec
test
push
movsb
fistps
xchg
push
and
inc
inc
test
xor
mov
or
xor
xchg
loop
popa
push
cmp
das
pop
push
int
movsb
loop
cs
repz
test
dec
sub
lods
add
xchg
inc
lods
hlt
push
cld
mov
dec
das
lods
inc
pop
pop
int3
mov
lahf
dec
cltd
mov
dec
xchg
jmp
pop
ret
sbb
mov
stc
jns
fimuls
es
mov
or
mov
sti
call
xchg
sahf
push
mov
sub
sarb
lea
xchg
lea
into
aam
and
xchg
insb
and
enter
mov
dec
mov
cmpsl
shlb
sub
das
push
stos
xchg
add
in
aas
push
test
jae
and
sti
fsubp
loop
stc
movsb
loopne
sbb
ss
sub
sbb
call
and
gs
out
aaa
mov
adc
pop
xor
lea
mov
int3
add
pop
jp
sbb
shll
add
dec
imul
imul
je
lret
test
jmp
es
mov
jno
movsb
push
test
imull
push
mov
fsubr
sub
or
jnp
lods
aaa
fisubrs
daa
fisttpl
stos
inc
inc
adcb
cmp
jbe
fadd
data16
lahf
arpl
inc
cmp
flds
fwait
cmp
adc
jle
xchg
cmp
inc
jge
hlt
sbb
push
xchg
aas
jae
jo
ljmp
jle
xor
dec
jmp
inc
xchg
test
push
or
dec
cmpsl
fdivr
lahf
dec
daa
xor
and
and
push
shll
and
loopne
daa
mov
mov
lahf
ds
sbb
or
das
fcomip
ja
mov
jecxz
xor
lds
or
pop
cld
push
xchg
orb
xchg
in
add
and
or
mov
jo
shlb
xchg
out
mov
mov
loop
inc
xorb
inc
std
hlt
xor
repnz
sqrtps
ss
add
sahf
mov
sub
popa
fstpt
pop
int
fucomi
xor
add
in
out
pop
es
and
rorl
mov
divb
mov
negl
rol
out
jcxz
pop
xor
adc
pop
ss
mov
add
test
stos
clc
movsl
test
or
stos
scas
sub
mov
push
cmp
jl
pusha
xorl
insb
jmp
push
pop
imul
mov
sub
out
std
mov
cmp
pop
xor
and
jg
ret
mov
ljmp
pop
mov
push
cmp
sbb
loop
clc
outsl
enter
mov
xchg
push
ja
or
test
ret
and
xchg
mov
lods
lret
mov
push
xlat
or
dec
out
cmc
sbb
loop
mov
repz
add
xor
push
stos
sti
inc
push
scas
popa
mov
cmpsl
lahf
ds
loop
mov
xor
inc
imul
rol
mov
add
lret
mov
lock
and
fs
gs
shll
jae
outsb
repz
dec
fs
icebp
sub
jl
test
out
mov
test
loope
add
ljmp
rcrb
mov
pop
xor
jp
and
fiadds
shr
testl
loop
add
pop
sub
stos
pop
mov
inc
push
or
adc
ljmp
nop
int
sbb
fwait
sub
jb
adc
adc
addr16
iret
out
mov
fstpl
sbb
jecxz
pop
cli
xorb
hlt
cmpsb
push
lahf
push
mov
in
jp
jle
les
imul
lods
jmp
outsb
cmp
clc
add
pop
sbb
lods
test
in
sbb
sub
jp
ror
js
xchg
mov
xchg
jo
outsb
or
mov
and
push
sub
mov
ljmp
int3
mov
push
insb
and
pop
fsubr
shll
push
gs
pop
lret
in
addb
dec
popa
mov
sub
mov
popf
pop
testl
xor
cmpsb
js
mov
jmp
sbb
sub
jns
mov
stos
es
inc
in
std
xor
or
mov
mov
imul
pop
call
jbe
das
lret
jg
mov
mov
dec
jl
pop
rorl
sbb
jp
jle
add
aad
pusha
mov
lcall
push
cmpsb
dec
add
push
stos
add
push
jb
add
cmp
dec
and
mulb
push
int
mov
add
imulb
bound
add
jge
fs
dec
push
ret
shll
iret
je
or
aam
daa
jmp
and
jne
add
cmpsl
xchg
lahf
cmc
rcr
popa
sarl
test
pushf
xor
dec
sub
mov
fistpl
aam
test
in
add
push
sti
sub
icebp
sbb
cmp
and
push
push
nop
test
cld
repnz
xchg
test
add
sbb
mov
test
jg
adc
mov
sbb
pop
sbb
xchg
jno
and
flds
mov
adc
stc
inc
add
cmp
xchg
scas
mov
aad
sahf
mov
les
mov
xchg
mov
cmp
pop
add
lock
jle
das
xor
jmp
pop
std
test
stos
xchg
int3
inc
sub
push
cs
stc
xor
call
les
xor
cld
stc
dec
in
jp
ror
out
addb
leave
into
rcrb
inc
ds
in
fstl
jle
outsb
cmp
fs
mov
inc
mov
hlt
cwtl
outsl
cmpb
lds
sub
jno
fistpl
cwtl
std
les
movsbl
std
insl
dec
gs
dec
test
das
cli
adc
frstor
fcomps
pop
fs
lock
inc
into
push
sbb
pop
mov
add
lds
sub
jnp
jge
mov
int3
xchg
addr16
or
sub
in
int3
jne
fsubrp
popa
and
xchg
and
xchg
push
jnp
data16
stc
sti
add
inc
sbb
mov
leave
xor
movsl
dec
push
test
mov
mov
sbb
cltd
push
xchg
into
gs
mov
stos
fildll
dec
mov
dec
stc
inc
jl
cmp
sarw
test
pop
mov
cmp
je
sarl
mov
inc
fdivrs
mov
cmc
dec
jns
movsl
imulb
sahf
enter
and
decb
dec
jo
mov
les
mov
push
pop
cmp
mov
movsl
mov
push
lds
nop
packssdw
and
dec
pop
xor
mov
cmp
cld
or
dec
repnz
pop
mov
pop
test
aad
cmp
inc
rclb
jne
cmpsl
dec
lcall
xchg
inc
pop
fldt
je
push
push
aas
dec
or
cmp
stos
jl
stos
movsl
les
jle
inc
mov
xchg
leave
adc
cltd
ss
push
xchg
mov
fimull
insb
jnp
ret
jg
popf
stc
loope
xchg
push
popf
ja
in
clc
jle
mov
add
fistpll
mov
int3
clc
push
pushf
outsl
fbld
mov
and
popf
in
add
popl
ds
leave
mov
movsb
xchg
push
arpl
icebp
seta
call
outsb
push
subl
sbb
adc
adc
xchg
pop
das
shrb
mov
daa
cli
add
aad
sahf
lret
ret
fcompl
mov
jecxz
ret
in
les
adc
or
lret
mov
int
mov
outsb
push
pop
push
andl
and
cwtl
cmp
mov
movsl
jp
test
movsb
clc
std
clc
les
scas
loop
loope
stos
cs
andb
daa
aaa
add
arpl
cmp
call
lods
mov
mov
lret
sub
sub
push
xchg
mov
subl
dec
outsl
sti
pop
xchg
or
mov
mov
sub
out
ffreep
xor
mov
jecxz
mov
mov
nop
jp
mov
sub
fwait
xor
ficoml
mov
push
jbe
xchg
imul
pop
inc
jbe
jg
scas
out
movsb
dec
or
mov
and
sub
push
out
and
pop
cmovb
and
mov
push
sti
jecxz
sub
xor
stos
cmpsb
add
lret
sub
jge
inc
scas
or
adc
xacquire
lock
mov
cmc
xor
adc
dec
and
sbb
mov
in
repnz
lahf
icebp
dec
inc
enter
pushf
xor
fwait
push
sbb
ret
mov
in
rcll
sub
mov
hlt
xlat
jecxz
mov
dec
jae
imul
outsb
push
and
shrl
repz
out
dec
jns
rorl
int3
mov
aaa
dec
lds
add
xor
cmc
adc
xlat
mov
cmp
in
les
rolb
cmc
cmpsl
lret
pop
or
xor
cmpsb
enter
inc
lcall
xchg
das
rol
jmp
jecxz
call
xor
xor
cmp
imul
mov
cli
pop
call
clc
inc
push
cmp
insb
adc
fs
mov
sub
push
and
icebp
jae
stc
xor
sbb
jns
mov
inc
mov
test
jb
push
mov
sarl
stos
jp
bound
or
pop
cs
sbbl
mov
std
jge
sbb
movsb
sbb
mov
pop
ret
ds
mov
pop
sbbl
in
pop
bound
sti
daa
and
bound
jl
stc
fbld
sub
roll
sub
fiadds
fcomps
xlat
aad
les
sbb
cmpsl
shll
xorl
cmp
pusha
loopne
pop
jne
add
mov
ds
fs
lahf
mov
xor
cmp
movsl
xor
mov
mulb
inc
out
mov
xor
movsl
fs
mov
call
xadd
pop
lods
add
rcll
pop
repnz
nop
shr
scas
cmp
sub
and
test
sbb
arpl
aas
not
test
lock
mov
pop
data16
pop
ja
push
dec
dec
mov
jbe
lods
icebp
popf
mov
shrb
jmp
movb
imul
pop
loope
lcall
orb
mov
shl
adc
xchg
aaa
notb
leave
and
jnp
sbb
dec
adc
mov
inc
pop
add
test
xchg
stos
cmp
prefetcht2
sub
add
inc
int
mov
pop
orb
mov
pop
sbb
add
lods
mov
rcr
push
outsl
or
pop
xchg
pop
mulb
out
mov
imul
xchg
xor
and
sub
jge
pop
fwait
cwtl
int
mov
xchg
and
jle
inc
mov
mov
cwtl
mov
out
and
xchg
cmpsl
pop
ja
rorb
outsb
mov
xchg
mov
jp
mov
and
fs
adc
fxch
in
or
or
sub
decb
inc
lods
push
bound
addr16
imul
jmp
inc
jp
push
sbb
adc
add
mov
fcmovne
test
pushf
dec
in
mov
subb
and
adc
sbb
push
loope
dec
popf
lret
test
outsl
fsubl
sub
mov
hlt
or
dec
test
push
inc
ja
jb
xchg
sar
test
daa
loopne
adc
repz
sbb
mov
dec
add
or
dec
xchg
or
imul
push
jae
and
pop
clc
lret
mov
outsl
adc
popa
dec
lock
test
pop
ja
loop
mov
sub
mov
adc
mov
sub
aad
and
jae
popa
call
out
xchg
and
outsl
dec
scas
ficoms
outsl
lret
jp
pop
ljmp
lds
inc
test
push
in
insl
jo
mov
jl
or
pop
cmpsb
aad
enter
and
inc
and
je
jno
inc
hlt
mov
mov
jmp
mov
aam
and
stc
inc
aad
xor
aaa
je
call
sub
andl
xchg
popf
xor
xchg
jmp
mov
out
adc
inc
cmp
jg
jg
push
jecxz
sub
dec
pop
fidivrs
clc
sbb
or
ljmp
mov
icebp
fdivrp
cmp
sbb
and
mov
fimuls
xchg
ds
fldenv
mov
fstpl
movsb
syscall
inc
test
cwtl
in
mov
int3
sub
inc
fwait
sub
xchg
or
fsubrs
sub
cmpb
xor
adc
pop
mov
or
jb
mov
sub
mov
sbb
hlt
lods
jno
mov
push
mov
jo
idivl
sbb
dec
mov
jo
ss
inc
pop
xor
dec
and
mov
iret
push
lea
es
hlt
add
fs
lret
imul
imul
push
cmp
or
insl
mov
inc
out
fistl
sahf
sub
cltd
push
push
jp
cmp
inc
enter
ss
dec
leave
sub
xchg
lock
outsl
sub
adc
dec
add
orb
arpl
popf
incl
xchg
aas
mov
bound
inc
add
sub
jl
push
ja
stos
push
nop
into
into
inc
inc
mov
pop
push
adcl
and
mov
ja
push
push
cmpsb
roll
lock
out
xchg
mov
inc
fwait
popf
inc
push
mov
sbb
shrl
enter
lahf
mov
pop
inc
rolb
push
push
mov
cmc
mov
fcomip
xchg
gs
dec
push
add
sbb
xlat
mov
test
lret
and
jbe
enter
out
push
mov
int
xchg
pop
cltd
pop
pop
inc
add
xchg
jmp
mov
lock
xchg
and
imul
test
sbb
cmp
cmc
pop
or
inc
mov
xor
scas
cmp
std
rol
sub
mov
bound
push
pop
loop
xor
add
dec
in
xchg
or
pop
mov
add
push
stos
mov
jmp
xor
pop
addb
lcall
jns
ja
jge
int3
loop
adc
dec
repnz
dec
cmp
adc
add
cmp
inc
or
and
dec
test
ss
jbe
popf
inc
xchg
nop
cmp
xlat
orb
push
push
lret
push
add
push
pop
fwait
lret
je
lods
aaa
jmp
xchg
mov
sbb
shrb
dec
sbb
cmp
aaa
stos
inc
adc
sbb
dec
xchg
or
push
ds
es
lods
ret
xor
xchg
divl
lods
xchg
mov
cs
push
nop
idivl
mov
xchg
ljmp
mov
dec
adc
jno
test
scas
test
xchg
popf
ljmp
xor
sbb
imul
mov
or
cs
pop
xchg
leave
and
or
stc
jge
shr
add
or
lahf
or
cmp
aam
ss
inc
rol
sbb
adc
and
jo
sbb
test
and
jmp
xchg
mov
push
out
jecxz
mov
test
dec
test
lret
out
fst
jmp
dec
mov
jbe
mov
fstps
movsb
pop
push
std
out
xchg
ljmp
pop
sahf
inc
jnp
mov
sti
pusha
and
nop
push
adc
or
sub
mov
ds
enter
sbb
mov
sbb
pusha
gs
cmpsb
xor
lret
mov
stos
cli
imul
aas
adc
rorb
call
out
cmp
in
push
inc
xchg
dec
cmc
out
dec
sub
imul
xchg
pop
inc
call
int3
inc
jmp
loope
xchg
add
mov
push
xor
push
sbb
roll
sti
inc
fldt
and
and
popa
enter
pop
or
ja
aaa
push
leave
fsin
or
mov
inc
stc
lock
mov
iret
mov
fstpt
insl
fcomi
xchg
push
in
mov
jg
cmpl
add
push
stos
enter
test
insl
inc
jecxz
push
add
shlb
gs
loopne
dec
add
lods
mov
xchg
fiaddl
push
jnp
mov
outsl
push
lret
in
and
xor
out
fsubl
hlt
cli
sbb
push
mov
fidivrs
loope
sub
test
std
faddl
es
mov
cmpsl
or
rcrb
fcompl
sub
mov
fwait
mov
stos
xor
rorb
jge
faddl
add
loope
std
mov
inc
cmp
js
xchg
adc
or
mov
mov
fnstenv
pop
xchg
jo
mov
mov
rcll
xor
imul
jbe
dec
dec
lea
in
aas
or
dec
repz
sbb
sub
stos
test
adc
popf
stc
jl
xchg
into
arpl
mov
fcoms
pop
xchg
loopne
lahf
loopne
arpl
mov
int
dec
shr
inc
and
daa
fldt
sbb
and
or
and
or
pop
push
dec
inc
push
push
xor
loopew
inc
dec
sub
push
mov
lock
repnz
pop
inc
dec
sti
mov
aad
jns
mov
jne
lcall
mov
fsubl
hlt
loop
xor
shrl
ror
lds
lret
sub
lods
imul
into
add
dec
cmpsb
leave
lea
xchg
jb
test
adcl
sbb
and
mov
fildl
lret
dec
dec
and
mov
cmp
out
out
mov
cmp
sbb
sbbb
and
mov
mov
mov
fidivrl
mov
mov
rolb
jecxz
fdivrs
mov
and
nop
ffree
stos
dec
cs
outsl
into
adc
dec
adc
subb
lret
or
jbe
cltd
outsb
movsb
pop
jo
inc
leave
mov
push
int
cmp
mov
mov
add
out
cmp
or
cmp
vunpcklps
sub
repz
loopne
sbb
stos
mov
addb
je
xchg
stc
movnti
hlt
xchg
jecxz
xchg
je
enter
jno
out
mov
sub
std
sbb
cmp
add
xchg
xchg
mov
push
pusha
push
xor
mov
mov
mov
dec
push
insl
jbe
movsl
roll
outsb
jecxz
or
test
shlb
data16
mov
cld
cltd
lahf
outsb
ljmp
shlb
into
sbb
in
inc
clc
int
cmpsl
mov
mov
pop
lret
ljmp
aas
sbb
inc
rorl
ret
mov
jge
dec
stc
pusha
cmp
icebp
loop
inc
cmpsl
addb
lahf
or
ds
or
fcoml
subl
mov
cltd
das
les
jmp
dec
inc
ss
fstl
leave
and
jp
xchg
out
icebp
nop
test
fsubrs
int3
in
clc
stos
rorb
push
test
dec
dec
mov
test
flds
mov
or
insb
mov
inc
xchg
sti
sub
inc
mov
int3
je
and
lcall
adc
mov
aaa
das
mov
dec
enter
and
cld
adc
adc
stc
sub
inc
push
aad
fwait
or
jne
xchg
arpl
pop
add
xchg
cmpsl
enter
push
jnp
mov
stc
daa
pop
xor
cmp
xchg
popa
push
and
mov
iret
lods
mov
add
roll
sub
pop
loope
in
pop
int
push
jmp
pop
clc
loop
cmp
or
lahf
mov
cmc
sub
into
ja
shll
dec
pop
pop
push
movsb
imul
add
andl
pop
pop
sbb
stos
dec
xor
push
add
jnp
cmp
popf
ret
repnz
pop
out
xchg
jmp
les
lea
mov
xchg
xor
mov
ljmp
jmp
loopne
dec
pop
scas
cmpsb
orl
lds
insb
not
das
mov
jns
adc
mov
jo
cmp
lock
mov
mov
out
push
fwait
jbe
and
mov
push
jmp
sub
ficompl
fisttpl
push
into
rcll
ret
popf
movsl
inc
mov
mov
cmpsl
fiadds
fisttpl
cmpsl
dec
or
repnz
adc
mov
mov
enter
mov
cld
bnd
and
lock
mov
enter
or
mov
popf
std
test
adc
ja
dec
and
roll
ljmp
enter
sub
and
and
jbe
pop
out
xor
sahf
push
push
dec
call
jbe
xchg
jb
imul
subl
je
add
cli
adc
mov
mov
ljmp
fidivrl
nop
inc
popf
xchg
call
roll
mov
pop
add
int3
and
xchg
push
mov
pop
ja
pop
lcall
sub
ret
cmp
adc
adc
sub
jb
mov
test
dec
sbb
xchg
in
xor
sub
in
dec
cmp
lret
mov
es
cli
inc
aaa
adc
aad
jg
inc
out
add
popa
scas
add
jae
add
jl
xchg
out
lock
out
aad
xchg
mov
addr16
es
add
mov
inc
jns
sahf
inc
and
mov
insb
dec
adc
xchg
mov
cli
sbb
outsl
pushf
stos
mov
xchg
test
mov
es
leave
xchg
add
and
xchg
or
push
add
or
sbb
outsl
xlat
fwait
xor
roll
into
sub
push
mov
addl
add
inc
inc
ljmp
mov
int3
enter
aad
push
leave
mov
push
sub
add
pop
add
or
aaa
ds
notl
xlat
lret
lods
or
jp
lcall
push
cmpsl
cmpsl
push
test
dec
data16
mov
jmp
xchg
add
imul
fcompl
rclb
icebp
adc
push
insb
test
add
or
mov
add
pop
lret
js
or
push
in
add
je
pop
cmp
std
aas
mov
rcl
dec
xchg
popa
nop
sub
lret
jno
pop
jmp
jecxz
xor
or
in
xchg
roll
jecxz
outsl
data16
cmp
inc
mov
pop
push
xor
aad
xlat
popa
jg
sbb
or
lret
ljmp
xor
cmp
sbb
in
mov
jle
xor
push
scas
jg
mov
into
adc
mov
inc
jae
jns
sbb
or
fwait
bound
xor
cmpsl
push
pop
add
push
push
loope
push
ja
ja
jno
aas
xor
or
sbb
inc
sub
sahf
aam
out
imul
ljmp
sti
sar
push
mov
lds
mov
dec
sahf
sub
pop
xchg
add
cmpsb
xchg
sbb
outsl
imul
push
fisttpll
aam
sbb
push
mov
out
sti
mov
sub
icebp
xorl
add
enter
jg
aas
cwtl
lea
xlat
faddl
mov
pop
fisubl
add
sub
mull
insb
push
sub
or
xchg
fstp
jb
or
adc
inc
sub
mov
cld
add
lods
fstpt
sti
stc
jle
xor
pop
add
mov
stc
sub
pushf
orb
jne
add
xor
lret
leave
jbe
mov
cmp
jp
xchg
popa
ljmp
mov
pusha
aaa
xor
repnz
aad
adc
xchg
repnz
jp
xor
loopne
push
pop
addr16
fld1
pop
sub
jno
cmp
and
gs
adc
cld
ss
neg
test
inc
outsl
outsb
mov
rcrb
stos
arpl
inc
js
xchg
fcompl
mull
jp
push
pop
push
in
cmp
add
or
and
shlb
data16
mov
scas
mov
lock
mov
repnz
icebp
xchg
jb
mov
mov
add
div
pop
leave
movb
fistpll
fwait
dec
cmp
xor
push
ja
adc
ljmp
cmp
pop
mov
pop
nop
les
xchg
cmc
add
cmp
xchg
iret
testb
mov
pop
aaa
in
fldt
shl
dec
mov
stos
lret
push
lret
mov
out
pop
lock
sahf
in
call
es
mov
dec
jle
xlat
dec
test
in
lahf
xchg
cld
push
test
push
jb
sahf
test
sub
int
mov
mov
hlt
cmp
mov
xor
xchg
add
push
rcr
ret
mov
dec
push
sub
fisubl
push
jno
jg
cmp
lock
mov
cs
xchg
pop
mov
ret
xchg
jge
xchg
aaa
jo
mov
sub
lock
add
out
push
add
mov
std
jb
cmp
inc
cs
adc
dec
mov
gs
sti
bound
clc
push
cmp
cmp
sahf
leave
pop
mov
adc
mov
arpl
push
das
addr16
loopne
mov
mov
xor
pop
ret
ret
cli
and
xchg
pop
aad
cmpsb
push
out
jp
jp
push
sbb
xor
lahf
push
adc
outsl
aaa
sub
jecxz
xchg
push
sahf
lods
mov
pop
xor
fsts
xchg
cmp
mov
and
out
or
std
lret
jnp
lretw
sub
pop
or
add
sub
jle
pop
and
mov
in
sbb
push
sub
and
sbb
xor
xchg
mov
ss
sbb
mov
sbb
pop
das
mov
outsb
jns
xor
mov
insb
repz
fwait
cmp
movsb
daa
mov
jno
sbb
ror
out
stos
jle
push
mov
inc
data16
imul
inc
xchg
cmp
ret
clc
push
adc
sub
sub
in
mov
or
push
jge
dec
fiadds
lock
pop
cmc
popa
enter
pop
aas
adc
jp
cmp
sub
sarb
jmp
cmc
dec
inc
sub
fidivrl
push
fs
cmpsb
inc
jle
add
sbb
push
ficoml
or
xchg
dec
addr16
adc
jp
hlt
dec
mov
dec
test
pushf
notb
test
mov
add
jl
adc
inc
mov
lret
sub
std
adc
daa
mov
cs
cltd
cmpsl
rolb
or
jecxz
sub
lods
add
seto
xor
iret
cmp
sbb
aas
inc
imull
push
sbb
push
fstpl
mov
ja
test
lahf
sub
es
pop
mov
jmp
outsb
inc
mov
sub
dec
xchg
pop
daa
cmp
aas
sub
push
inc
pop
xchg
pop
cld
cmpsl
aas
dec
insl
mov
fld
mov
mov
mov
adcb
add
cld
inc
push
push
push
shlb
fisubrs
jno
sbb
fwait
adc
lock
mov
lahf
ret
xchg
mov
lods
sbb
pop
sub
pop
loope
ret
int
imul
inc
dec
pop
out
or
xchg
lcall
fistpl
push
mov
js
mov
nop
fstp
jp
stos
sub
cld
loope
mov
in
movsb
int3
mov
iret
in
ds
sbb
inc
mov
jl
xor
xchg
cld
outsl
in
lcall
mov
out
fldt
cmpsl
loope
jbe
jecxz
cmpsl
or
or
lcall
xchg
lret
and
fistps
aam
mov
mov
mov
xchg
cltd
testb
aad
jnp
int
bound
incb
lods
cmp
cltd
sahf
dec
push
lock
dec
leave
xlat
adc
mov
test
int3
sub
mov
add
fidivs
xor
add
insb
xchg
sbb
mov
aas
int
movb
cmpl
mov
and
imul
inc
aad
adc
sbb
es
xchg
sub
xchg
lods
cmpsl
data16
call
js
push
mov
sbb
fs
out
pop
jmp
or
inc
jb
pop
or
repz
xchg
cmpsb
leave
gs
add
es
xchg
push
arpl
int3
cli
jp
and
fisubl
popf
clc
insb
mov
dec
mov
xchg
xchg
cmp
pop
mov
xchg
sbb
inc
mov
jo
pop
adc
adc
add
mov
mov
iret
jmp
and
mov
push
insb
stos
shlb
cmp
jge
mov
leave
sub
dec
movsl
jae,pt
ljmp
andb
jle
and
inc
scas
mov
je
outsb
hlt
test
daa
fs
stos
and
lret
outsl
mov
mov
out
push
in
mov
aam
cwtl
jns
cmp
sbb
icebp
jns
sarl
fsubrs
mov
aaa
xchg
mov
jmp
aaa
cli
push
jge
jg
cmp
pop
cmp
repnz
je
in
pop
mov
dec
stos
dec
enter
and
inc
int
scas
in
pop
sub
insb
sbb
mov
sub
add
scas
push
sar
lods
in
out
jg
sbb
iret
mov
xchg
hlt
adc
sti
clc
test
je
fcompl
mov
jp
xor
rcll
imul
in
push
dec
and
fwait
and
cmp
insb
fldt
push
les
pop
xchg
out
fbstp
rol
mov
cmp
in
out
fs
and
lahf
push
js
aam
test
cmp
aas
xor
push
mov
js
push
jg
lahf
dec
ss
push
jo
push
lret
fs
push
jno
test
dec
mov
dec
loopne
fcomps
incl
mov
cmpsl
dec
sbb
pop
flds
and
out
int3
clc
jge
out
icebp
out
mov
sbb
pop
test
aad
insb
xchg
call
loop
dec
pop
rcrl
fisttpl
imulb
xor
add
xor
jp
cmpl
jae
xchg
or
sub
or
mov
dec
cmpsb
in
outsl
aaa
sbb
das
inc
mov
stc
pop
cltd
lcall
out
push
jg
adc
or
jle
cmp
loop
stc
sbb
adc
add
mov
adc
cmp
es
jns
xchg
inc
xchg
dec
fistps
es
pop
sub
push
pusha
cmpsb
imul
mov
mov
stos
loop
imul
mov
xlat
and
cbtw
iret
and
cmp
loope
pop
mov
dec
mov
inc
dec
or
xchg
jo
scas
fwait
or
jb
push
out
insl
xlat
and
push
test
inc
test
in
pop
mov
test
mov
daa
sub
jg
mov
xor
daa
rcr
movsl
sub
jb
lret
sbb
add
mov
mov
jge
shl
push
and
call
scas
cmpl
mov
jbe
mov
push
rorb
into
jge
add
scas
pusha
inc
lods
lods
arpl
out
mov
cmpsb
hlt
cld
dec
jne
add
aam
add
pop
cmp
push
sub
mov
push
clc
je
add
outsl
pop
sti
xor
subb
mov
mov
sbb
rcr
lcall
sti
scas
test
jnp
sub
xor
mov
inc
inc
fisttpl
lret
movsl
pop
cmp
orb
pop
add
mov
arpl
add
int3
sub
ret
notb
xor
idivb
gs
or
jg
xchg
add
mov
ffree
mov
mov
and
out
inc
out
out
in
fistpll
jge
pop
test
lret
enter
idiv
cmp
bswap
dec
xor
xchg
adc
aas
arpl
cmp
mov
aas
xchg
pop
std
int
push
cltd
mov
dec
mov
sub
js
js
add
lods
stos
jl
mov
push
ja
inc
sahf
fdivr
pop
dec
jecxz
adc
fsubrl
loop
pop
in
andb
mov
or
and
lcall
jne
push
jle
inc
sbb
jae
mov
test
cld
pop
out
fucomp
jp
mov
or
xchg
or
push
lock
fwait
and
pop
iret
sahf
mov
mov
into
aaa
adc
int3
neg
dec
fadd
das
scas
sbb
lret
roll
daa
sub
aas
loopne
and
mov
and
fld
es
nop
loope
cld
popf
adc
xlat
rcll
test
mov
subl
ret
lret
lret
jge
int3
mov
mov
push
scas
push
pop
push
adc
fbstp
fstpl
push
mov
push
pop
sub
and
in
dec
mov
or
sbb
test
or
mov
test
push
adc
lahf
sti
jmp
add
sub
rolb
aam
or
scas
insl
pop
bound
mov
dec
gs
repz
test
jbe
dec
or
lcall
sbb
daa
andb
stos
xor
add
push
sub
test
in
mov
jl
cmp
pop
mov
test
lock
dec
test
cmp
xchg
add
andl
cli
fstl
push
fists
mov
jmp
loopne
mov
in
mov
xchg
daa
xchg
mov
insl
into
mov
inc
std
hlt
dec
add
push
imul
fdivr
pop
pop
out
sti
or
lods
cwtl
loop
add
arpl
ret
inc
stos
xchg
pop
add
stos
jle
shll
div
jb
sub
out
daa
fnsave
mov
mov
xchg
cmpsl
enter
xor
pop
adc
add
mov
lret
add
push
cmc
push
cmp
adc
imul
mov
icebp
rcrb
lcall
or
adc
dec
or
clc
pop
xchg
scas
dec
pop
call
xor
scas
movsl
jmp
call
inc
lea
repnz
xor
leave
xchg
xchg
int
add
shlb
jle
ljmp
xor
bound
lods
into
imul
mov
ja
out
jb
xor
jmp
jge
push
pop
into
xor
push
add
and
movsl
push
call
fnstcw
idivl
pop
cmp
mov
or
push
imul
test
push
adc
int
mull
stc
mov
lea
cmpsl
mov
xchg
das
adc
push
and
jmp
or
cmp
jnp
lods
mov
mov
shl
mov
lahf
mov
lods
xlat
adc
lock
les
lret
stos
jo
mov
cmp
andl
xchg
push
repz
push
add
add
lods
pop
and
sbb
shll
push
dec
loop
cmp
rcrb
adc
xor
enter
push
cltd
mov
xchg
sar
fstps
insb
rcrl
mov
pusha
outsl
push
in
out
pop
loop
mov
fwait
lea
out
call
in
xchg
mov
push
xchg
ret
and
or
inc
scas
aad
pop
mov
dec
mov
cmp
sbb
cmp
mul
push
push
xor
jp
and
and
pop
sbb
adc
insb
xchg
gs
cmc
inc
mov
add
lcall
js
push
adc
std
mov
cmp
test
movsb
or
in
jmp
filds
scas
or
jmp
cwtl
pop
lcall
xchg
xchg
and
stc
jecxz
fucomi
push
add
dec
jl
and
mov
xchg
xchg
in
mov
sub
xchg
cld
and
xchg
mov
jnp
push
scas
in
loope
loopne
cwtl
adc
mov
das
fstpl
xchg
in
lds
into
mov
out
stos
adc
xor
xor
fldl
add
jb
jecxz
test
mov
in
inc
add
call
cmc
jecxz
fs
add
push
dec
movsb
sbb
loop
ljmp
aad
cpuid
test
das
push
lock
mov
rep
ret
outsb
xor
imul
rorb
inc
and
scas
cld
js
dec
aaa
nop
pop
adc
lcall
sarl
inc
xor
dec
int
in
movsb
push
aam
pusha
or
jl
testl
aas
mov
fadd
adc
test
xor
ret
push
inc
add
cmp
mov
cltd
loope
cmpsb
mov
aaa
inc
test
dec
into
pop
mov
push
push
or
inc
insb
mov
jb
and
insl
icebp
dec
mov
inc
add
ret
push
push
add
jbe
cmpsb
sub
sub
push
pop
arpl
cltd
lret
or
and
movsb
lods
or
hlt
add
cmp
jge
push
sub
push
gs
lods
jmp
and
aad
adc
push
cmc
loop
xchg
mov
sbb
cmpsb
fistps
push
mov
mov
jae
ljmp
xchg
imul
pop
cli
cwtl
xchg
rep
pop
pushf
fwait
xchg
sbb
out
adcb
xor
lret
sub
adc
pop
loop
dec
leave
jmp
pop
lret
lahf
push
shrl
sbb
int3
testl
cld
jne
outsb
das
inc
push
sbbb
fisubl
fidivrs
shrb
inc
inc
jle
js
stos
and
sub
sbbl
or
lock
mov
outsb
bsf
sbb
fdecstp
lahf
mov
movsb
and
xchg
out
ficoms
cmp
cs
adc
lea
push
scas
mov
push
imull
push
fldt
jns
out
cmpsl
lcall
jno
jbe
cltd
fmuls
shlb
dec
jo
je
adc
fsubrl
fisubrs
lds
xchg
mov
pop
in
mull
pusha
iret
or
sub
sbb
xchg
and
mov
adc
aam
mov
add
adc
mov
iret
jmp
lods
loop
jecxz
loopne
pop
mov
movsl
test
dec
fwait
daa
into
push
fimull
enter
inc
pop
inc
out
mov
stc
jns
ret
add
mov
mov
bound
cmpsl
imul
xchg
jns
repnz
cmp
add
lahf
cmp
push
cmc
adc
ret
mov
jl
pop
hlt
jnp
xchg
repnz
adcl
enter
sti
popa
push
stos
mov
dec
mov
daa
cld
xchg
xchg
jae
push
icebp
test
out
mov
call
push
mov
sar
or
adc
xor
xchg
adc
sti
jle
xor
and
leave
mov
hlt
rcrl
cltd
lret
loope
pop
sbb
mov
cld
popa
add
mov
or
or
out
xchg
fwait
ljmp
shl
push
je
outsb
popa
jmp
dec
jmp
scas
mov
jbe
dec
in
xlat
fucomi
and
loop
mov
pop
push
jno
mov
xor
fs
fwait
push
mov
les
mov
ret
aaa
pandn
xor
pop
addr16
jns
cs
pop
fwait
and
enter
test
push
popf
hlt
icebp
ret
push
dec
lcall
fisttps
xchg
push
add
testl
push
jno
mov
dec
pop
call
mov
mov
imul
sete
fmulp
lret
and
mov
fldl
jge
dec
adc
adc
push
sbb
mov
adc
lods
dec
push
jae
daa
out
xchg
das
rclb
push
and
mov
cli
mov
xchg
cmpb
jg
mov
lret
xchg
js
jbe
addr16
jle
mov
scas
or
shll
inc
arpl
xor
adc
insl
pop
icebp
roll
xchg
add
insl
mov
pushf
jb
movsl
or
pushf
sub
lcall
jmp
mov
rolb
add
loope
cld
shrl
mov
in
nop
inc
add
cmp
popa
enter
scas
lods
aas
cli
jmp
iret
outsl
adc
sub
sub
cltd
inc
sbb
jmp
mov
sbb
addr16
mov
jecxz
pop
push
push
pop
or
outsl
jbe
idivl
shlb
inc
test
push
xor
movsb
xor
adc
cmpsb
mov
rcrl
iret
push
pop
mov
js
iret
add
cs
incl
popf
cmc
test
lret
out
icebp
and
pop
test
ljmp
loop
div
in
js
sbb
lret
or
inc
xor
push
jg
negb
iret
sbb
iret
cmp
push
int3
xchg
mov
sbb
push
sub
cmp
movsl
mov
cmp
and
cmc
cmp
jl
xlat
shl
xchg
movsb
pop
or
mov
push
nop
push
cmp
jmp
ret
rcrb
cs
pop
je
mov
cmp
movsl
data16
sbb
mov
popf
loop
mov
lret
mov
adc
cmp
sti
pop
mov
jno
cmp
inc
lahf
scas
fmull
push
les
adc
rorl
mov
dec
xchg
xor
pop
push
icebp
sub
jecxz
test
scas
pop
enter
mov
fstps
fidivrl
cmp
leave
pop
sbb
loopne
jae
pop
out
dec
jge
jne
adc
mov
xchg
popf
jecxz
loope
add
sub
sarl
mov
push
test
sti
dec
scas
or
loop
dec
xchg
mov
popf
dec
push
cmp
ja
lods
inc
shl
mov
inc
fwait
mov
movsl
push
fisubs
mov
inc
mov
sbb
add
cli
jmp
cmp
push
cmpsl
sub
sbb
dec
aaa
clc
mov
mov
lahf
mov
pop
jmp
jl
or
clc
std
adc
pop
aad
xor
push
pop
pop
in
aam
mov
hlt
inc
and
xchg
ds
jmp
jecxz
mov
mov
inc
xlat
divl
pushl
pop
pop
mov
pop
adc
jnp
push
adc
fxch
inc
out
ret
dec
jg
gs
sub
add
mov
lods
in
dec
sub
jns
add
push
or
cmpsb
fnsave
cmpsl
hlt
mov
pop
xchg
enter
adc
xchg
cltd
cmc
aam
and
jae
mov
fwait
mov
pop
ficompl
pop
push
movsb
iret
aad
andl
cmpsb
das
shlb
cmp
imul
lea
lods
mov
pop
pop
mov
shll
push
aas
sub
or
sbb
inc
xchg
sbb
das
jge
iret
pusha
xor
mov
dec
adc
std
lods
bound
outsb
xor
out
call
fisttps
push
pop
xor
ficoml
mov
fidivrs
pop
add
push
jmp
aaa
xorb
lods
test
jb
adc
mov
repnz
jg
jg
sbb
xor
jle
xchg
push
stc
xchg
ss
mov
fdivrp
inc
push
adc
mov
lret
mov
xorl
jb
lret
push
xor
into
xchg
pop
push
lea
push
or
pop
and
or
rep
mov
dec
mov
mov
imul
test
xchg
pop
pop
loope,pn
adc
or
sub
and
mov
call
add
repz
cmp
xor
mov
adc
push
addr16
std
dec
xor
ret
bsf
roll
enter
xor
je
cld
jmp
xchg
out
add
add
fnsave
inc
insl
frstor
xchg
cwtl
loop
cmp
dec
and
adc
aaa
add
arpl
or
in
pop
sub
jle
lret
dec
pop
mov
ret
xchg
adc
test
dec
xchg
and
add
cmc
push
js
mov
jg
fcoms
pop
sti
jge
mov
lds
mov
jl
xor
xchg
or
xor
xchg
jne
popf
xchg
xor
mov
mov
xor
adcl
movsl
fsubl
ss
mov
in
fcomp
cmpb
pop
or
mov
cltd
sbb
xchg
xor
or
xchg
adc
xor
dec
addr16
addr16
cltd
cmp
adc
mov
dec
pop
cmp
jp
xor
xor
xor
jmp
andb
and
cmpsl
cmp
lods
pop
popa
inc
xor
add
mov
jns
pop
movsl
jl
cli
xchg
adc
stos
push
xchg
inc
scas
ds
sub
pop
sbb
fmull
sarb
cmp
in
cmp
mov
push
push
lods
addr16
or
jnp
push
hlt
fiadds
dec
push
or
cmc
sti
in
pushf
sub
dec
or
nop
push
decl
mov
cltd
inc
pop
xchg
push
lret
or
out
insl
pop
mov
sub
popf
sarl
pshufw
inc
push
cmpsb
ret
xor
jg
push
sub
nop
lcall
fadds
scas
inc
addr16
cs
movsb
and
imul
jmp
pop
les
das
and
std
inc
jg
xor
cmpsb
xchg
adc
lret
jb
cmp
push
mov
xchg
call
fcomp
iret
add
negl
push
test
or
inc
icebp
or
sub
jne
lgs
sbb
cmp
test
jae
test
push
or
cli
xor
push
scas
loopne
enter
inc
test
pop
jmp
sahf
xlat
add
fnstcw
or
loopne
mov
ja
adc
pop
push
xchg
hlt
int
sbb
jp
roll
cmovnp
fs
aam
xchg
jae
fwait
xlat
jne
incl
push
jl
shrl
addl
sub
cli
out
xor
imul
stc
dec
mov
bnd
pop
add
shll
sbbb
cmpsb
and
push
lock
and
or
icebp
repnz
movsb
stos
cs
in
mov
add
pop
add
xchg
cwtl
mov
pop
xor
sahf
js
enter
lods
mov
shl
jle
sub
adc
dec
call
push
add
mov
shl
jp
push
sub
inc
ljmp
hlt
outsl
out
arpl
into
or
jle
ljmp
cmc
cmpsb
icebp
bound
icebp
jns
and
or
out
ds
xorb
cmpsb
dec
mov
sbb
mov
pop
mov
scas
sub
jle
cmp
int
dec
and
addr16
xor
add
inc
out
sub
adc
adc
int3
jge
jg
sub
je
xchg
pusha
push
push
inc
pop
rcll
js
jnp
sahf
pop
sub
fldt
in
mov
sub
nop
in
mov
mov
jb
adc
cmp
sbb
mov
vrcpps
lret
loope
cmc
mov
mov
dec
xor
xor
sti
sbb
andl
push
pusha
scas
jnp
sub
xchg
loop
cmp
mov
mov
inc
div
jg
ja
lret
aaa
mov
mov
mov
stc
mov
int3
xchg
dec
mov
mov
das
outsl
into
inc
inc
fs
loope
add
std
ret
cmp
fwait
scas
push
jecxz
inc
inc
sbb
adc
leave
dec
stos
lret
jno
ret
dec
dec
adc
push
dec
dec
xchg
dec
xchg
dec
in
mov
rcrb
and
push
ss
test
es
aas
fucom
xchg
repz
xor
jns
xchg
cli
add
scas
icebp
mov
xor
arpl
xchg
mov
push
mov
xor
mov
dec
ljmp
int
cmp
dec
test
ss
push
mov
mov
call
pop
in
jmp
mov
fdivs
jge
dec
lcall
and
popf
mov
ret
push
mov
js
mov
faddp
popf
xchg
lods
inc
aad
shl
mov
imul
mov
and
dec
inc
xor
jb
je
pop
mov
das
ljmp
dec
mov
lret
pop
daa
xchg
jno
mov
ja
jb
cltd
pop
inc
gs
push
mov
lahf
dec
fistpll
dec
cmp
adc
jne
inc
imul
fdivp
cmp
pop
iret
inc
or
rolb
subb
mov
or
jb
push
or
in
dec
add
add
ds
ja
mov
dec
sub
iret
or
xchg
nop
leave
push
cmp
pop
je
and
push
mov
dec
mov
xchg
arpl
adc
jnp
jle,pn
loop
decl
pop
cmp
dec
int
arpl
rcrl
xor
and
dec
adc
push
lds
xor
mov
push
movsb
mov
fs
adc
es
dec
pop
aad
imul
mov
imul
pop
cwtl
push
hlt
mov
ret
dec
imul
cmpsl
cmp
or
push
xchg
sti
xor
or
dec
sbb
mov
ret
inc
lds
aas
nop
cmp
jb
pop
push
in
and
xchg
xchg
pop
scas
mov
cmp
in
bound
push
out
mov
movsl
test
insb
cmc
adc
cmp
dec
sahf
adc
mov
jg
je
pop
fnstsw
xchg
inc
xchg
xchg
aaa
cmp
cmp
je
push
jne
dec
and
jnp
pop
pop
xchg
mov
scas
or
adc
aaa
fwait
mov
xorb
idivb
xor
pop
adc
mov
popf
mov
mov
xor
jecxz
sahf
cmpsl
std
sbb
jne
in
cmp
fcoml
and
stos
mov
sub
roll
jb
outsl
cli
and
mov
aas
popl
notb
or
add
cmovbe
scas
or
sub
hlt
jecxz
cmp
pop
or
int
lcall
loopne
bnd
xchg
or
jl
mov
pop
pop
mov
jl
xlat
dec
sub
test
xchg
pop
add
outsb
shrl
jmp
stos
lods
inc
push
xchg
test
into
mov
out
gs
sub
std
jbe
stc
in
addr16
add
jns
push
testl
test
mov
std
jne
push
testb
fdivrl
addr16
lret
pop
mov
shrl
dec
insb
das
sarl
adc
and
or
xlat
ficoml
sbb
jne
adc
scas
inc
sub
or
or
test
or
xchg
movsb
imul
stos
cld
rep
lret
push
push
jecxz
dec
cmp
call
adc
pop
pop
and
or
mov
lock
cmp
outsb
loopne
aas
in
dec
pop
push
movsl
inc
pop
dec
jge
cmp
cld
add
mov
xchg
mov
xchg
nop
test
xchg
into
cwtl
push
jb
rol
xchg
stc
mov
fldt
sti
fdivr
mov
jae
mov
add
fstl
jecxz
popf
in
xlat
ret
lret
sub
pop
xchg
push
mov
out
daa
xor
and
pop
pop
xchg
cli
repz
popl
sbb
lcall
dec
sub
mov
outsb
dec
jp
gs
hlt
insb
in
push
xor
sbb
mov
sbb
je
pop
loop
shlb
insl
cmp
cmpsb
mov
fwait
cli
aaa
inc
imul
mov
adc
push
add
test
mov
and
fwait
es
sub
leave
addr16
das
sbb
xchg
add
add
popa
pop
add
cmp
lds
subl
push
nop
into
sub
xchg
pop
inc
cmp
lods
and
stos
lock
jl
inc
and
xchg
push
pushf
and
ficoml
jnp
cli
idiv
xor
test
jo
cmpsl
pop
out
int3
or
test
shr
mov
andl
add
call
fiadds
dec
and
inc
push
sub
mov
insb
nop
push
lret
sti
test
push
jge
cwtl
push
subb
or
pop
dec
sub
jne
xor
fimuls
notl
insb
out
repnz
push
js
mov
dec
out
mov
in
repnz
jno
pop
jge
mov
mov
out
fildl
idiv
in
adc
lds
push
push
stos
mov
inc
xchg
jbe
xchg
pop
jae
hlt
sbb
add
xor
loopne
inc
stc
test
jne
jnp
add
add
mov
repnz
push
sti
sub
or
xor
xchg
pop
roll
push
sbb
out
mulb
test
divl
inc
dec
mov
cltd
inc
dec
into
sub
mov
pop
xchg
rclb
int
in
cmp
in
lds
jno
scas
cltd
mov
jmp
add
cld
fstpt
xchg
fldt
jae
sarb
loop
pop
mov
test
mov
adc
psraw
imul
jl
lcall
mov
pop
mov
dec
sti
lcall
adc
xchg
pop
push
out
stos
std
sub
add
repnz
jl
xchg
bndldx
sub
mov
in
cld
or
push
mov
shlb
incl
xchg
lret
push
xor
sarb
or
repz
subl
mov
jb
fildll
loope
add
push
out
dec
pop
ss
sub
out
and
cmp
mov
mov
mov
xlat
cmpl
cmp
jns
push
das
jecxz
xor
lret
fbld
out
mov
xor
jbe
lods
mov
nop
jl
sbb
mov
xchg
mov
mov
in
mov
subl
cmp
int
iret
inc
loope
jmp
fnsave
sbb
std
addr16
jle
add
adc
inc
jle
cmc
jno
icebp
adcb
aas
xor
imul
ret
stos
loopne
jmp
in
repnz
fisubl
xlat
leave
fisttps
lret
push
cmp
mov
dec
pop
mov
stos
insl
mov
inc
pop
mov
arpl
adc
mov
les
mov
out
rcll
inc
iret
jg
mov
xor
popf
nop
roll
inc
test
pop
pop
jns
pushl
cli
or
jg
sub
out
push
test
lock
cmp
loop
movsb
cmp
add
sub
shll
xor
shlb
imul
inc
adc
push
dec
push
stos
int3
cmpsb
jo
jno
popf
jno
in
mov
lds
or
fsubrs
or
cmc
xchg
mov
ror
stos
xchg
fistpl
or
mov
mov
lcall
push
iret
pop
icebp
nop
lods
mov
lock
and
out
mov
xchg
adc
adc
icebp
lods
mov
xchg
sub
xor
addl
mov
int
hlt
pop
das
xchg
xor
aad
stos
ljmp
loop
rorb
fcompl
rcl
fldt
inc
cmpsl
sar
jmp
pop
lock
shlb
xor
xchg
cmp
xchg
lods
mov
fistpl
add
movsb
outsb
inc
and
push
push
pop
out
xor
fidivrs
sub
sub
pop
adc
cmc
xor
mov
shrl
push
pop
lods
inc
sbb
scas
repz
xchg
xchg
lea
xor
setg
cmp
stc
movsb
pop
xchg
push
pop
nop
add
xlat
cmp
mov
xor
out
cmp
idivb
test
aam
popf
dec
daa
out
das
cmpsb
test
or
push
xor
fcoms
rol
repnz
pushf
xchg
jmp
mov
sti
xchg
push
outsl
cmpsl
hlt
es
push
imul
sbb
lcall
cmp
stos
adc
jmp
mov
dec
lods
pop
jecxz
adc
nop
outsl
sti
lret
jmp
cs
je
cmovg
enter
mov
pop
out
push
push
fistpll
popf
and
and
lahf
cmp
add
xchg
cmp
fidivl
xchg
arpl
adc
cmp
dec
add
lods
mov
fnstsw
mov
rclb
pop
aam
cmp
mov
cmpsb
in
xor
sub
adc
insb
leave
mov
add
xchg
iret
jmp
sbb
call
int
ss
adc
push
testb
mov
xor
sub
push
das
jl
cmc
or
je
daa
data16
pop
mov
cmpsb
sbbl
sub
rol
add
mov
pusha
and
fcmovu
mov
and
stos
outsb
push
imul
sub
push
pop
stos
cmp
add
pop
in
jg
ss
xor
in
cmc
bound
cli
inc
fnstsw
negl
add
xor
jmp
jbe
jb
mov
cmpsb
repnz
scas
push
fimull
sub
lods
decb
sahf
add
sub
sbb
mov
push
mov
addl
cmc
aam
in
daa
adc
xchg
xor
lea
aaa
or
inc
rolb
add
rorl
fimull
xchg
xlat
mov
mov
add
pop
sbb
ja
mov
pop
jecxz
int
and
shr
cmp
lret
fs
cmp
leave
mov
push
and
popf
jl
rcrl
push
leave
cmp
xchg
mov
cwtl
movsl
pop
aaa
jo
repnz
movsb
fsts
xchg
mov
jo
add
and
in
imul
mov
jne
aam
fsubrl
scas
adc
inc
repz
call
cmp
cli
cmp
test
dec
aad
daa
repz
push
pop
divl
imul
push
mov
xchg
aad
mov
mov
xor
jp
ds
cmp
inc
fdivr
inc
lret
cmp
sti
subb
daa
pop
mov
sbb
mov
std
xor
mov
icebp
inc
xchg
mov
gs
add
or
or
test
sbb
push
repz
pushf
popa
dec
movsl
sti
nop
nop
shrl
lods
ffreep
fisttpl
and
lock
fisttpl
jge
mov
bound
mov
cwtl
iret
mov
jb
mov
shll
outsl
mov
mov
hlt
inc
stos
pusha
repnz
cwtl
dec
push
cmp
xor
setae
lods
and
cltd
push
mov
sbb
xor
mov
push
mov
lock
jno
out
xchg
mov
rorl
jecxz
xchg
hlt
cld
out
mov
or
push
add
push
fwait
push
cld
xacquire
dec
gs
arpl
out
xor
and
mov
into
cmp
and
out
das
pxor
lock
dec
and
int
stc
ds
add
test
inc
sub
jo
push
jecxz
das
daa
cmp
pop
jae
mov
push
mov
ss
inc
jmp
or
leave
xchg
mov
push
cs
into
xor
lcall
lods
jle
sbb
add
inc
push
xchg
pop
out
lcall
mov
jnp
fwait
push
and
add
test
shrb
cmp
xchg
fistpll
fs
jnp
in
and
push
cmpsb
clc
mov
xchg
aam
push
leave
mov
pop
test
add
outsb
adc
pop
or
inc
add
and
jno
popf
fnsave
xor
out
mov
test
pop
aad
lods
cld
idivl
iret
jl
ljmp
nop
mov
hlt
mov
xchg
pop
clc
xchg
lods
xchg
add
push
add
ret
inc
lods
out
push
push
cmp
lods
pop
call
aam
mov
sbb
mov
xchg
push
test
jmp
xchg
sub
ror
dec
and
push
mov
cltd
insb
sub
out
dec
nop
jno
movsb
aad
cld
sub
rclb
cmc
iret
xchg
and
in
inc
pop
cmp
xchg
mov
push
push
out
outsb
pusha
xchg
or
xor
mov
icebp
das
push
in
add
jnp
out
cmp
mov
icebp
mov
mov
add
stos
pop
lods
jae
lods
add
enter
into
mov
int3
adc
fwait
dec
test
mov
fidivl
inc
cmp
aam
mov
into
xorl
inc
or
inc
sbb
cmp
pop
jmp
sbb
fisubl
sarl
test
ljmp
aam
lock
jl
mov
inc
rorb
mov
pop
or
roll
jg
push
sub
ljmp
sub
lahf
jno
lret
imul
jmp
test
aam
jmp
bound
add
fs
mov
pop
fidivrs
mov
jno
mov
sub
pop
div
cmp
leave
jb
adcl
fcmovne
sub
subl
cwtl
iret
stos
jo
mov
fbstp
cld
lea
sbb
add
jle
xor
cli
fs
fsts
in
movsl
cmp
adc
sbb
test
into
adc
dec
gs
jge
lahf
repnz
mov
icebp
cmp
fists
int3
hlt
int3
inc
xor
je
mov
xchg
mov
out
jns
andb
fstpl
mov
out
popf
stos
sti
push
test
push
sub
out
and
mov
pop
addr16
scas
lea
mov
test
loop
xchg
jnp
sti
call
cmp
push
mov
xchg
into
hlt
sub
push
jnp
lret
jle
xchg
mov
mov
xchg
lahf
xchg
sub
std
fdivs
jb
or
push
fmull
dec
sub
push
neg
push
fwait
pop
popa
add
ja
js
xor
push
cmpsb
aam
aas
jge
mov
mov
push
jp
push
jmp
iret
mov
sbb
fwait
pop
mov
pop
add
cmp
ja
push
mov
hlt
push
sub
inc
pop
and
push
jno
test
mov
sbbl
or
inc
jo
rcrb
mov
jg
roll
call
adc
clc
jle
aaa
mov
sub
add
ljmp
dec
lods
je
xor
xlat
jge
out
push
dec
lea
int3
and
xor
jno
sbb
sub
mov
sub
mov
daa
dec
inc
test
inc
fs
cmp
dec
les
fs
or
push
addr16
inc
ljmp
ret
pop
push
adc
and
sub
jb
ss
iret
jecxz
mul
xlat
xor
aam
adc
xchg
adc
jnp
pushf
rolb
hlt
pop
lock
cwtl
repnz
lods
jle
hlt
out
jnp
out
in
loope
lahf
pop
hlt
xchg
push
aaa
mov
mov
and
loop
adc
js
popf
pop
enter
sti
arpl
es
push
or
xor
add
int3
and
cmpsl
xchg
fisubl
xorl
stc
and
pusha
lret
test
mov
add
pop
cltd
sub
pop
add
mov
out
fcomps
dec
push
fisttpll
mov
pop
imull
mov
push
adc
mov
cmp
pop
ds
mov
and
in
sub
popf
lahf
in
arpl
jge
shlb
pop
mov
pop
xchg
xchg
out
scas
xchg
adc
sbb
inc
mov
xor
mov
ret
add
inc
outsb
cwtl
inc
and
jo
loop
imul
lock
aad
insl
sub
ja
fs
jo
fisubrl
mov
mov
push
pop
mov
mov
icebp
inc
test
sbb
jb
out
in
jmp
in
adc
mov
mov
stos
int
lahf
inc
and
cmp
pop
adc
add
fisubl
pop
and
movsl
add
popf
insl
lahf
cld
ret
push
pop
test
jnp
lahf
or
das
ja
push
inc
stos
js
test
aas
and
jmp
add
imul
sub
imul
mov
jns
mov
pop
retw
jecxz
mov
adc
jecxz
aad
push
stos
push
fisttpll
jl
adc
pop
cmp
pusha
inc
mov
mov
int3
adc
xor
push
addr16
jge
adc
sub
rolb
movsl
mov
pusha
in
xchg
sbb
movsl
int
push
xchg
nop
or
out
loop
xor
sbb
or
inc
xor
fwait
movsl
ja
jo
add
insl
pop
xchg
jb
sbb
out
mov
in
frstor
ds
and
inc
sti
out
leave
repz
lds
test
punpckhbw
mov
adc
mov
clc
in
xchg
mov
mov
rorl
popa
test
lock
dec
mov
pop
cld
sbb
test
lds
mov
dec
out
push
hlt
jp
dec
or
mov
mov
stc
loope
mov
mov
dec
cmpl
push
push
sbb
mov
jno,pt
cmc
adc
stos
into
mov
aad
stos
dec
add
cmpsl
pop
movsl
add
nop
mov
insl
xor
jge
jl
leave
fmuls
shrl
insb
stos
cmpsl
mov
push
add
mov
loop
pop
sbb
inc
mov
stos
and
testl
xchg
sub
xor
out
sbb
aad
xor
jmp
mov
xchg
sbb
mov
mov
mov
and
and
popf
in
push
xor
push
idivb
xor
repz
cmp
dec
cmp
cmpsl
pop
ja
mov
add
shrb
and
subl
das
iret
loop
int3
cmp
push
call
les
leave
sbb
loopne
jecxz
inc
jno
orl
iret
push
mov
dec
into
fisttpll
sub
adc
dec
testb
mov
call
loop
or
pop
cwtl
ret
inc
pop
mov
mov
stos
outsl
and
sbb
loop
fs
or
adc
mov
mov
dec
xchg
bound
sbb
call
push
bound
jge
mov
cmp
mov
push
push
sbb
repz
push
shll
lret
out
dec
mov
or
es
add
inc
stos
mov
test
sbb
gs
test
mov
frstor
jge
push
mov
sub
or
or
xchg
adc
mov
nop
test
arpl
pop
shr
mov
int3
sub
sbb
pop
and
xor
lds
cwtl
sbb
and
push
leave
loopne
addr16
adcl
add
stos
lock
test
in
es
das
mov
inc
xchg
cmpsb
pop
mov
int3
jnp
repz
out
mov
bound
out
jno
jae
jle
inc
sbb
sbb
iret
adc
pop
pop
jp
bound
dec
xor
ret
adc
push
lcall
cmc
cwtl
std
fstpl
adc
imul
jnp
cs
mov
fdivr
ret
push
push
push
stos
shr
mov
jle
pop
scas
shlb
cwtl
test
rcl
rclb
inc
shl
mov
repnz
jo
hlt
out
cmp
sub
push
adc
sahf
sbb
cmp
inc
cmp
fildl
adc
jmp
in
pop
fisubrl
addr16
xchg
fidivrl
cmp
cmp
imul
cltd
clc
xchg
mov
push
cli
shlb
push
popa
lret
cs
xor
or
adc
ret
call
clc
push
push
xchg
push
out
xchg
xlat
mov
in
and
cmovg
jg
pushf
push
out
aam
in
pop
lahf
out
and
mov
shlb
loope
addr16
dec
in
xchg
pusha
mull
inc
cmpsl
mov
js
push
xadd
call
rcll
jecxz
sbb
dec
data16
adc
cld
inc
mov
out
int
jo
rcr
or
cs
scas
lahf
das
fimuls
lock
and
mov
mov
mov
scas
scas
les
gs
adc
cltd
jnp
ret
pop
dec
jg
xchg
shrb
mov
jno
jmp
in
mov
mov
cld
or
mov
xlat
test
add
cmp
imul
pop
or
mov
popf
outsb
push
rclb
int
inc
jmp
sar
lcall
xor
cwtl
jl,pn
cmp
cmc
in
cmp
sub
insb
sub
push
and
pop
addb
jge
scas
fistl
test
shlb
pop
jge
fistps
add
mov
push
iret
daa
adc
mov
aas
or
fsubs
xor
fsubrs
adc
or
xchg
pop
adc
mov
inc
xlat
andb
test
push
mov
xor
gs
mov
mov
jge
sub
add
jmp
mov
repnz
scas
stc
cwtl
adc
or
mov
sub
fcomps
mov
orb
outsl
ficomps
ja
or
cmp
cmp
and
ret
scas
daa
and
sbb
das
mov
testb
in
mov
and
xchg
cs
pusha
ja
cli
dec
test
dec
adc
imul
push
mov
negb
cmp
and
jecxz
jo
push
adc
pushf
xor
mov
mov
xor
cwtl
lret
push
and
xor
inc
dec
or
push
idivl
sub
sbbb
xor
test
enter
sbb
mov
cmpsl
iret
and
repnz
outsl
xor
add
xor
loopne
xchg
sbb
xchg
ret
cmc
js
xchg
repnz
xchg
mov
xchg
int3
loop
mov
xor
int3
stos
sbb
xchg
add
and
mov
stos
test
lret
xor
xor
mov
pop
adc
sbb
fidivrl
add
fldenv
mov
test
sbb
xchg
add
and
bound
xchg
xchg
enter
inc
loope
sub
mov
and
arpl
std
lret
xchg
jecxz
push
and
add
mov
adc
mov
xchg
pop
sbbb
gs
pop
and
sbb
dec
sub
mov
mov
mov
ja
cmc
movsl
leave
and
int
lods
mov
lret
pop
test
xor
movsb
cmp
mov
push
cmp
push
mov
shl
lcall
movsb
nop
add
adc
cs
and
pop
mov
push
cmp
pop
xchg
jl
dec
or
inc
call
mov
pop
pop
cmp
mov
and
add
pop
mov
push
mov
adc
sub
xchg
dec
sub
cwtl
sbb
jae
scas
popa
iret
daa
test
loopne
ret
or
jbe
fsub
and
push
icebp
scas
pop
mov
stc
add
pop
sub
jne
xor
es
mov
rcr
sahf
xchg
push
cwtl
inc
mov
and
ret
stc
xor
jo
dec
mov
dec
test
lret
in
mov
dec
dec
stc
fcompl
adc
push
js
and
mov
sub
sahf
rorl
jp
mov
mov
jne
fs
sbb
push
cmpsl
ret
xor
mov
xor
pop
xchg
adc
adc
fdivr
cmp
adc
lret
bnd
xchg
adc
jno
pop
jmp
jmp
pop
mov
int
popf
testb
std
in
js
hlt
loope
or
mov
into
xor
popf
std
aad
jp
mov
lock
sbb
mov
mov
mov
sbb
ficoml
insl
call
inc
add
cmp
das
lods
mov
out
loop
xchg
sub
sbb
pop
stos
stos
std
jge
mov
mov
push
jns
sbb
mov
sti
xchg
scas
sahf
jmp
mov
and
inc
push
sub
mov
data16
inc
in
xchg
mov
movb
add
mov
repnz
mov
mov
xchg
jno
fwait
lret
jne
dec
push
and
inc
jge
shlb
das
jbe
inc
lods
push
js
mov
lret
aam
test
xorb
dec
leave
dec
and
mov
adc
dec
mulb
jmp
fwait
in
dec
dec
push
pop
pop
pop
das
mov
pop
jo
mov
xchg
mov
aam
sub
jl
lcall
pop
imul
push
bound
and
and
mov
sbb
mov
inc
push
pop
inc
adc
cmpsl
xchg
mov
lret
jecxz
add
stos
jl
aad
sti
xchg
sub
out
iret
xchg
popf
mov
push
mov
in
mov
adc
xchg
inc
or
push
dec
daa
push
lahf
pop
mov
pop
leave
xor
lods
push
xchg
into
in
mov
cli
xchg
shlb
mov
jno
mov
sub
mov
cwtl
pop
and
stos
aam
mov
jo
cmp
fisttpl
lea
sti
repz
cwtl
sarb
lods
lds
mov
mov
iret
popa
js
gs
negb
adc
sub
add
sub
aas
lcall
and
std
add
add
pop
push
std
jmp
or
sbb
test
out
mov
hlt
sahf
jns
fimuls
mov
lods
out
or
cmp
push
mov
push
ja
dec
cmovge
mov
lods
jmp
or
mov
inc
adc
fidivrl
orl
shlb
in
enter
mov
inc
bswap
js
pop
insb
imul
cld
aam
out
addb
fwait
stos
xor
xchg
mov
addl
mov
pop
add
mov
aam
jae
fs
fisubrl
or
sub
stc
in
daa
or
cmp
daa
xor
mov
cwtl
cmpb
xchg
test
pop
dec
add
or
ffreep
cli
or
dec
xchg
sti
aam
and
xorb
ljmp
sarl
or
jno
xchg
ljmp
stc
and
fbstp
or
aam
std
xlat
push
dec
jle
bound
mov
inc
cli
call
lahf
mov
jne
aas
insb
jecxz
jle
mov
daa
mov
test
pushf
xchg
mov
call
cld
mov
mov
mov
in
repz
lods
roll
fisubrs
push
sahf
test
stos
and
filds
mov
jmp
mov
in
dec
stc
jae
outsb
xchg
xor
xchg
popa
popa
xorl
sub
push
cmp
cmpsl
xor
bound
into
pop
inc
les
jbe
mov
xchg
mov
and
push
jg
xor
stc
addr16
pop
sub
in
je
push
imul
and
cltd
cwtl
inc
mov
test
ds
shr
test
mov
mov
fcomi
push
inc
and
pop
or
pop
int
mov
xorb
jnp
dec
repz
cltd
incl
addr16
inc
divl
pop
push
fs
adcb
aam
pop
andb
cmc
lretw
mov
pop
push
dec
jecxz
cmpsl
and
lock
pop
aaa
dec
and
ja
aam
loopne
aad
xchg
pusha
dec
mov
pop
and
mov
pop
mov
pop
loopne
iret
repnz
or
popa
lret
or
jecxz
push
faddl
cwtl
movl
pop
xchg
mov
and
push
push
pop
cld
stc
cmpsl
cs
xor
cmpl
mov
xor
subb
inc
bswap
stc
mov
cmp
enter
sub
rcl
ret
test
dec
and
mov
jle
aaa
xlat
xchg
lods
gs
cld
outsl
sbb
cs
jp
movsl
lcall
cmp
sub
les
enter
push
lret
mov
jne
les
lods
push
cwtl
pusha
mov
ror
scas
adc
sahf
cmp
jae
loop
pop
inc
pop
popf
jp
movsb
mov
lahf
mov
xchg
outsb
inc
add
pusha
fwait
mov
and
ljmp
loope
mov
pop
dec
push
and
pop
or
pop
loop
inc
enter
int
adc
xchg
ja
mov
push
xor
mov
out
arpl
push
cmc
outsl
push
mov
sbb
adc
dec
mov
icebp
mov
iret
aam
add
add
xchg
mov
dec
or
pop
mov
movsl
mov
cltd
inc
mov
pusha
inc
movsb
or
mov
aas
pusha
cmp
xchg
dec
scas
cmp
add
iret
test
loop
enter
hlt
mov
in
xchg
sbb
enter
lds
mov
inc
xchg
pop
mov
sub
mov
movsb
adc
out
cmpsb
mov
fidivrs
iret
cmpsb
cmp
loope
inc
dec
cmp
jmp
inc
mov
mov
dec
mov
inc
fs
iret
mov
add
enter
push
call
fdivs
pusha
xor
and
jg
int
or
fsubrs
loope
add
sar
cmp
mov
pop
ss
and
inc
adc
pop
push
adc
cs
lds
or
xchg
repnz
fsubrl
pop
sbb
xor
adc
stos
lds
insb
mov
rcrb
adc
add
or
daa
call
or
out
rol
cs
scas
push
cvtps2pd
leave
lret
movsl
out
sbb
lods
outsl
aas
mov
rcrl
cmpsl
sbb
xchg
clc
pop
icebp
mov
cld
ret
mov
pop
int3
stos
xchg
out
add
inc
fsubrs
push
sbbl
fsubrs
xchg
sysret
bound
push
push
push
cmp
inc
push
jmp
mov
jno
mov
mov
cmc
sbb
repnz
aas
inc
mov
and
cld
cs
and
dec
fwait
sbb
sbb
in
mov
test
inc
jecxz
je
pop
mov
mov
test
dec
cmp
mov
lret
mov
faddp
hlt
xor
js
inc
clc
mov
outsb
shlb
push
jg
fwait
jb
shrb
icebp
hlt
cs
cmp
iret
sbb
sahf
add
stc
jnp
lcall
stos
hlt
ljmp
pop
pop
jb
cli
ficompl
mov
std
push
jo
lods
enter
mov
shrl
into
xor
shlb
mov
fs
xchg
mov
cs
mov
mov
jbe
fmuls
popa
sbb
xchg
insb
mov
xor
push
test
loope
incb
inc
and
inc
scas
pop
stos
xor
mov
mov
sbb
sbb
test
pop
das
inc
popl
and
pop
pop
js
pop
fidivrs
js
test
jnp
cmpsb
cmp
adc
test
jl
adc
mov
pusha
sbb
mov
rep
jb
fidivrs
pop
xchg
cmp
lcall
les
mov
mov
cld
xor
xchg
push
xor
or
mov
cmpsb
jno
aam
adc
adc
dec
adc
sub
push
dec
adc
sub
xor
or
inc
mov
mov
sbb
sub
in
add
fwait
inc
dec
sub
repnz
cmp
ss
mov
mov
inc
insl
fisubs
xchg
xchg
sbb
pop
push
push
sahf
jbe
not
inc
cmp
pop
xor
sar
cmp
cmpsb
xchg
add
cmp
jle
pop
lcall
mov
sarb
inc
rcll
sbb
shlb
nop
xlat
lods
lahf
test
hlt
mov
paddb
cmc
jae
movsb
fisubrs
mov
push
das
push
cmp
push
stc
hlt
mov
nop
test
mov
pop
mov
jecxz
dec
sbb
cld
or
mov
fcoms
xor
imul
int
ss
add
cmp
xchg
stos
int3
sub
sub
cmp
ret
loope
lret
inc
or
pop
daa
jl
and
mov
leave
loopne
aas
daa
mov
pop
pop
clc
add
lcall
and
add
in
dec
pop
xchg
pop
insb
test
decl
lret
popf
sbb
movsb
lods
xchg
pop
les
jl
inc
push
int3
loope
aas
jmp
fdivrp
inc
in
xlat
xor
loopne
pusha
jne
addr16
push
sbb
xor
in
fwait
scas
les
jb
test
cltd
adc
push
in
lock
pop
cltd
inc
rcrb
hlt
xchg
mov
cld
sbb
test
subb
negb
outsl
subb
imul
fs
push
sbb
and
xor
clc
lods
jb
xchg
cltd
fldcw
and
xchg
cmp
cmp
test
pop
pop
xor
test
ret
movsb
cmpsl
leave
arpl
jbe
ljmp
push
mov
adc
shll
fbld
cmp
fcomip
out
and
out
scas
movsl
mov
stc
leave
test
cmc
jo
arpl
gs
fs
aad
fucomi
mov
ss
push
mov
int3
dec
add
pop
push
mov
fstps
adc
fdivrl
lock
dec
push
push
xor
push
adc
lret
cli
call
jl
or
arpl
loop
outsl
nop
adc
or
stos
mov
mov
int
mov
mov
aaa
or
fisubrs
xchg
jmp
js
push
cld
jp
stos
dec
mov
and
inc
jg
mov
mov
pmulhuw
sub
or
sahf
fidivrl
or
xchg
sbb
add
mov
insb
fildll
mov
inc
mov
lret
fstps
ds
ret
popf
xor
push
and
jge
sub
adc
mov
jo
xchg
fcompl
cmpsl
aas
rcl
mov
mov
dec
popf
xchg
add
es
cmp
sahf
mov
push
mov
mov
or
sbb
mov
jns
pop
jae
pop
ds
stos
mov
xchg
repz
das
sub
cwtl
push
and
jne
ja
addr16
and
and
inc
mov
lcall
lods
psubusw
and
popf
mov
push
mov
mov
fnstsw
adc
push
mov
mov
or
cltd
pop
adc
cld
jp
test
je
ljmp
push
cmc
pop
pcmpeqd
ss
adc
cmp
push
lock
ss
out
adc
shl
dec
clc
mov
xor
out
jne
pop
and
adc
fsubrl
roll
lods
and
mov
mov
xorb
daa
dec
xor
ds
ret
jne
rolb
xor
sti
jle
popa
aam
jo
orb
int
jle
lock
pop
sbb
mov
adc
pushf
inc
cmp
stc
lods
fxch
je
arpl
cmp
cmp
mov
pop
jle
adc
or
sbb
loop
mov
stos
cmp
jo
xor
fcomps
jnp
adc
sti
cmp
clc
lock
movsb
dec
out
loope
mov
cmpsl
or
mov
and
inc
mov
imul
pop
sub
xchg
hlt
adc
mov
mov
mov
iret
popf
outsb
lds
sti
insb
push
jp
fcmovnb
jbe
mov
sbb
and
xchg
inc
bound
fucomi
mov
add
fsubrl
add
cmpl
or
push
sub
stc
push
mov
sub
sub
push
xor
fxch
and
push
fimuls
sbb
loopne
cmp
xor
push
xor
cmp
adc
inc
inc
lock
ja
or
add
push
hlt
insl
adc
adc
cmpsl
inc
and
dec
in
adc
popa
fs
mov
stos
jmp
lcall
pop
pop
cmp
jle
sub
repnz
jg
adc
adc
stos
into
cli
inc
add
cmp
pop
jne
dec
xor
inc
lds
push
fldcw
cmp
sbb
push
mov
imul
lcall
leave
insb
adc
mov
mov
pop
mov
loop
cmp
sub
imul
xlat
xchg
fcomip
mov
ret
lret
jg
rcrb
cwtl
out
imul
loop
fwait
pop
jmp
jnp
out
jne
enter
testl
mov
mov
sbb
pushf
mov
dec
sub
sub
xchg
inc
test
lea
dec
leave
mov
ret
hlt
cmc
pushf
xchg
inc
in
pop
insb
sub
ret
out
lahf
xchg
dec
xlat
push
cmp
jp
icebp
adc
xchg
test
or
and
fs
jp
inc
push
loopne
and
loope
fcomip
shlb
dec
loop
sbb
jno
rclb
pop
jno
mov
sbb
mov
aaa
sbb
sbb
dec
shr
push
sar
dec
cmpsl
xchg
fadds
sahf
dec
inc
pop
call
push
dec
das
cltd
mov
aad
dec
scas
fnstsw
sbb
js
loop
test
inc
cmp
scas
cwtl
cwtl
or
sub
adc
loop
repz
jns
sbb
es
enter
mov
jbe
daa
call
jae
mov
loop
fdivl
ljmp
cmp
push
mov
lods
shll
lds
pop
sti
mov
jns
out
xchg
push
dec
imul
call
lods
xor
cmp
cmpsb
cmp
sub
sbb
mov
mov
cltd
jnp
mov
outsb
inc
add
jmp
iret
bound
adc
int3
mov
mov
bsf
subb
xchg
movsl
lcall
pop
mov
xchg
xorb
insl
cmpsl
xchg
sub
inc
cmpl
sub
loope
mov
movsb
ret
mov
pop
sbb
inc
cmp
mov
roll
lret
jno
pop
mov
cmp
push
mov
enter
data16
or
pop
mov
lds
mov
mov
loopne
adc
out
inc
fistps
int3
mov
sar
aam
sub
or
xor
xchg
pop
cltd
lcall
sbb
pushl
enter
arpl
scas
xor
push
aas
adc
lret
add
dec
xor
xchg
dec
adc
es
stos
notl
cmp
inc
in
sbb
sahf
arpl
into
outsb
inc
or
add
mov
and
pop
pop
loop
pop
movsb
pop
pop
sti
add
inc
push
adc
mov
mov
repz
jmp
rclb
jne
mov
pop
int3
and
shrb
out
iret
cmp
jl
mov
and
adc
cmp
enter
jge
imul
adc
sahf
aas
dec
pop
add
mov
iret
int
ss
test
push
mov
stos
sahf
or
sbb
clc
mov
sti
dec
call
xor
adc
movsl
je
mov
jne
xlat
loop,pt
add
and
push
ja
sub
xor
je
hlt
in
insb
push
sub
testl
xchg
decb
test
mov
loopne
mov
mov
adc
mov
xchg
adc
xchg
nopl
sbb
out
cmc
pop
or
push
jnp
subl
inc
xchg
divb
cmp
lea
ljmp
pop
sbb
add
push
andb
sarl
cmp
mov
add
sti
add
or
in
daa
ss
int
aas
jb
xchg
call
popf
fistpl
in
iret
popa
shlb
lea
jne
loope
es
loop
dec
mov
xor
shll
or
or
cli
xor
imul
bound
pop
into
push
cs
ljmp
out
add
adc
cmp
add
scas
inc
fsubrl
inc
stos
and
test
insb
xor
xchg
jl
or
loop
jne
adc
adc
mov
or
not
add
dec
ja
fs
jne
mov
out
mov
inc
gs
inc
mov
dec
and
xor
sbb
addr16
sarl
mov
insl
mov
aam
mov
and
add
jle
xchg
aam
or
mov
fcmovnu
adc
sbb
pop
cmp
push
sub
pop
mov
int3
fimuls
cltd
add
je
push
inc
call
rcll
cmp
adc
mov
inc
sbb
jmp
mov
mov
gs
adc
movsb
pop
pop
int
insl
popf
loopne
pusha
mov
in
cltd
inc
in
inc
lret
cltd
mov
sbbb
cwtl
push
sti
and
push
out
xor
test
pop
mov
pop
test
push
xor
push
pop
cld
aam
lcall
outsb
adc
hlt
sbb
pop
cld
xchg
mov
popa
add
push
push
aam
adc
add
sub
xchg
adc
repz
sub
cmpsl
xchg
jae
pop
xor
mov
out
cmc
inc
lock
jb
lahf
shrl
or
shrd
dec
decl
clc
sub
mov
repnz
ret
shrl
or
jns
push
jbe
rorb
cmp
aam
movsl
idiv
and
xor
jns
xchg
out
push
bound
xor
pop
nop
mov
or
shrl
mov
ljmp
in
add
xor
xor
dec
dec
stos
jg
dec
mov
repnz
mov
dec
popf
and
cmc
ret
int
pop
ret
popl
test
shlb
jo
pop
in
push
jno
adc
das
push
mov
das
or
push
out
je
dec
nop
divl
jmp
xchg
scas
sbbb
adc
mov
loope
out
inc
push
pop
lcall
push
scas
call
mov
push
fistl
sbb
je
dec
mov
push
sbb
jo
lret
xor
push
push
pop
jmp
jb
aam
xchg
jl
aam
push
add
test
jb
fsubp
adc
outsb
je
mov
xchg
jle
and
xchg
in
xchg
push
das
sub
decl
xor
lret
sub
inc
daa
or
mov
mov
imul
mov
inc
es
xor
insl
lea
repz
or
test
fistpll
je
repz
xchg
int3
inc
insl
mov
hlt
shl
loope
or
cmp
jae
pop
stos
lods
dec
outsl
mov
inc
repnz
dec
and
jecxz
dec
dec
push
xchg
aaa
shlw
mov
stos
movsl
add
sahf
adcb
cltd
pop
sbb
mov
out
push
and
adc
aam
ja
pop
sub
test
jecxz
cmp
inc
data16
mov
pushf
or
pop
push
in
pop
pop
arpl
jmp
mov
lods
mov
xor
xchg
and
hlt
pop
mov
add
das
fidivrs
sbb
imul
jp
insl
jb
cmp
xchg
mov
mov
cmpl
xor
push
andl
sub
push
cwtl
xorb
insl
add
push
cmp
push
sbb
movsl
mov
dec
cmp
fwait
sbb
loopne
jbe
jne
sti
push
rcl
cmp
cmp
xor
mov
dec
bound
pop
syscall
cltd
mov
xchg
push
lods
add
pop
xchg
movsb
ds
test
jmp
or
cmp
push
test
mov
enter
movb
cmpsb
pop
jecxz
sarb
arpl
push
fstps
xor
sub
test
outsb
test
jo
icebp
sbb
int
xor
xor
mov
or
lret
adc
loopne
scas
mov
xchg
in
cmp
sbb
push
shl
data16
pushf
push
jbe
hlt
lds
stos
imul
cmp
fildl
orb
int3
push
push
push
loopne
mov
cmp
or
xor
mov
ret
cmp
add
nop
sbb
cmp
ljmp
outsb
loope
push
push
or
enter
mov
jbe
mov
iret
pop
mov
out
leave
cmp
ds
das
repz
inc
nop
fnstenv
sbb
or
or
loope
xor
jae
scas
gs
pushf
sete
scas
outsl
enter
xchg
daa
out
sub
sarl
lea
in
testl
cmp
xchg
std
xchg
cmp
ficoms
jae
jbe
mov
iret
loope
and
push
das
mov
addl
mov
aas
imul
stos
inc
ret
outsl
pop
jp
push
mov
mov
xchg
divl
popf
mov
int3
xchg
loopne
mov
pop
stos
push
insb
daa
or
push
je,pt
sub
lahf
add
mov
lret
fldt
jmp
mov
jge
fcoms
das
and
xchg
push
mov
push
jmp
xor
jnp
iret
mov
nop
pop
sub
and
mov
aam
fisttps
mov
xrelease
jns
and
clc
pop
popf
jae
and
int
fcompl
insl
xor
sbb
popf
mov
xchg
into
das
and
int
dec
cmp
xchg
mov
jnp
add
mov
pop
xor
adc
mov
int
fwait
test
dec
push
inc
icebp
jp
mov
call
inc
aas
mov
mov
and
mov
dec
mov
ffreep
loope
inc
jmp
ffree
test
ficompl
loopne
ret
adc
adc
push
sbb
lret
adc
faddl
dec
adc
adc
dec
mov
jnp
adc
shll
mov
clc
or
xchg
pop
and
jl
sub
or
aam
lea
push
push
sahf
add
dec
jge
es
xchg
xor
push
aas
repnz
sahf
mov
mov
cld
inc
pop
xchg
call
ljmp
mov
ret
pop
mov
stos
jae
mov
push
push
mov
push
xchg
ret
mov
add
or
add
mov
addr16
push
sub
enter
push
orl
imul
gs
pushf
or
sub
pushf
dec
xchg
mov
sbb
mov
dec
in
or
enter
lods
push
das
pop
jmp
jb
xlat
and
xchg
fldt
inc
in
add
xchg
ss
push
rcl
clc
adc
scas
inc
iret
es
jo
xchg
or
mov
xor
push
inc
jmp
jmp
repz
inc
push
stos
stos
push
ret
leave
dec
loope
pop
pop
cs
sub
addl
ja
mov
push
lret
in
in
sarl
mov
mov
repz
xor
in
pop
cli
bound
bnd
popf
lret
mov
mov
rclb
xchg
mov
push
stc
dec
rolb
pop
rcrb
scas
push
or
daa
inc
stc
jo
adc
mov
and
enter
in
jmp
je
push
mov
add
icebp
ss
in
sahf
fs
test
lea
jl
lock
sub
aas
in
and
add
xchg
mov
mov
ljmp
adc
xor
fs
out
call
fstl
cmp
adc
add
sbb
aaa
lods
dec
fidivrs
fwait
jne
stos
push
dec
or
adc
add
and
dec
loope
and
or
faddp
popf
push
cli
add
pop
push
inc
mov
push
xorl
sbb
mov
mov
sarb
lret
js
cmp
sahf
sbb
adc
jnp
daa
cli
je
aam
push
lds
testb
imul
push
fidivl
mov
jno
add
mov
aas
std
mov
in
je
fs
rclb
fistps
jge
pop
fcmovnbe
or
jne
mov
add
test
adc
xchg
enter
jmp
les
jns
and
inc
pop
imul
sti
mov
add
out
lods
cld
aad
inc
ljmp
mov
adc
mov
jmp
ret
xor
out
or
cwtl
fstpt
push
inc
xor
jns
adc
outsb
enter
in
jle
add
or
clc
push
cmpsl
popf
stc
xchg
mov
mov
and
add
std
pop
lcall
xchg
and
sbb
and
add
sbb
mov
ss
add
mov
jecxz
movsb
mov
nop
outsb
mov
mov
pop
xchg
hlt
mov
hlt
or
pop
inc
and
pushf
sbb
addr16
add
mov
jle
fbstp
int
inc
je
push
cltd
sub
inc
lret
stos
adc
nop
push
popa
imul
dec
insl
ds
insl
push
frstor
mov
xchg
adc
dec
lahf
sub
cli
adc
sbb
test
jle
and
dec
and
xchg
inc
jg
je
imul
sub
cmp
mov
push
into
sbb
pop
push
fs
mov
int
test
pop
xchg
mov
ret
add
daa
or
insl
icebp
add
dec
push
lret
aas
fs
sbb
cs
stos
jl
daa
mov
mov
pusha
xor
dec
mov
sub
sub
push
std
push
jle
mov
cmp
or
into
push
imul
add
push
pop
jae
push
mov
add
push
data16
in
in
out
les
mov
cmp
add
push
xor
ret
movsb
insl
testb
inc
mov
pop
mov
test
in
push
xor
out
mov
cmp
xor
pop
mov
adc
aas
mov
jb
push
imul
pop
jg
pushf
pop
xchg
and
adc
dec
les
sbb
aaa
jle
stc
stos
jns
fcomps
arpl
mov
dec
dec
lret
insb
decl
xor
cwtl
jl
daa
int3
mov
enter
jl
sbb
pop
pop
std
push
mov
mov
mov
mov
nop
rorl
shl
or
xor
jecxz
and
or
mov
push
sarl
add
test
push
loop
dec
jle
jae
add
mov
out
lods
jne
fcmovu
xchg
push
jne
sub
ret
or
push
dec
decl
testb
data16
mov
imul
gs
mov
lods
dec
call
xchg
insl
aas
inc
loope
pop
mov
and
mov
out
xchg
std
mov
cmpsb
rcll
incl
call
and
cltd
mov
sbb
popa
xchg
mov
cmpl
lods
dec
fs
or
fdivp
cwtl
repnz
jnp
and
or
mov
pop
mov
cli
xor
mov
mov
lods
push
pop
cltd
sbb
aad
mov
fldpi
jge
fwait
movb
adc
or
std
out
data16
cld
push
xchg
sub
add
sub
imulb
jb
insl
jno
imul
push
push
loopne
dec
xor
mov
lret
inc
sbb
jmp
xor
test
xor
push
mov
movsl
push
adcl
aaa
inc
sub
cmpsb
push
ljmp
push
jae
and
mov
bound
xchg
cwtl
ficoms
lods
xor
add
fisubs
shlb
jbe
mov
fdivp
ds
inc
les
pop
cld
and
mov
pop
idivb
mov
sub
mov
mov
repz
push
hlt
adcb
dec
into
push
mov
push
add
loope
xchg
adc
mov
frstor
sahf
inc
ljmp
ret
push
loope
mov
cwtl
jns
dec
xlat
lods
inc
cltd
pop
punpcklbw
cmpsl
das
cmp
or
mov
push
ret
push
push
js
imul
lea
xor
cwtl
cld
pop
lds
inc
sub
sub
push
jge
and
and
enter
out
lret
dec
mov
jb
in
fstl
jae
ja
daa
scas
pop
pop
mov
inc
cmc
cmp
cld
arpl
fbld
clc
insb
dec
inc
push
or
stc
jb
mov
mov
arpl
and
mov
jp
lods
cmc
and
insb
adc
xor
lret
sahf
inc
test
xor
push
push
sahf
jg
lds
sbb
cmpsb
cmp
fs
xchg
test
inc
cmp
mov
inc
je
bnd
xlat
in
icebp
fidivs
sub
sub
adc
and
fwait
mov
leave
lret
adc
ljmp
addb
stos
pushl
sbb
dec
cltd
adc
mov
inc
ljmp
inc
adc
rcll
dec
arpl
jmp
push
pop
cmp
out
ret
ret
pop
sub
imul
notl
arpl
or
imul
jle
adc
in
mov
clc
in
mov
sbb
cld
out
cli
add
push
xchg
in
pop
arpl
jg
sbb
mov
mov
lcall
jns
push
fiadds
or
jne
xchg
mov
adc
jae
inc
sti
sbb
cmp
pop
pop
addr16
nop
jne
stc
push
out
sbb
sub
sbb
xor
das
xor
or
sbb
pop
xchg
lahf
push
mov
xor
add
pop
sbb
rcrb
dec
stc
test
mov
dec
div
int
imul
iret
popa
adc
scas
sbb
push
or
cmpsb
mov
enter
repz
jp
mov
das
lret
xor
push
ss
lret
mov
push
pop
xor
push
outsb
push
shll
into
sbb
add
pop
mov
jnp
mov
in
dec
sub
mov
sub
mov
je
or
pop
out
xchg
int
in
or
js
or
dec
dec
cli
dec
inc
inc
popa
mull
sub
mulb
ret
decl
lds
rcrb
pop
mov
aam
adc
sbb
cmpsl
hlt
and
inc
call
inc
lock
shll
out
clc
bound
xchg
mov
sub
pop
pusha
data16
adc
iret
pushf
cmp
inc
bound
jmp
das
adc
pop
xor
roll
xor
push
lock
rcrb
mov
enter
xlat
jbe
push
inc
leave
test
mov
pop
cmp
mov
sub
mov
and
dec
ss
cmpsb
icebp
mov
push
lea
jbe
imul
cmpsl
or
je
fwait
in
out
inc
mov
jecxz
pop
xchg
out
dec
pop
lcall
inc
inc
pop
stos
inc
jmp
mov
lret
ret
out
jae
das
inc
sbb
fidivl
inc
nop
xchg
mov
out
xor
xchg
adc
stos
lods
out
ss
pop
aam
dec
out
sahf
lret
ret
dec
or
ljmp
cs
insb
inc
mov
pop
pop
fs
adc
adc
xchg
scas
mov
insl
push
shll
pushf
mov
jbe
aam
sub
std
pop
xor
push
fcmovnb
push
mov
mov
lea
cmp
mov
xchg
add
lods
addr16
imul
sub
sbb
lret
test
fnstenv
imul
daa
mov
xor
fs
jge
shll
adcl
jbe
out
inc
fbld
mov
hlt
scas
lret
or
cmpsb
mov
xchg
addr16
cmc
add
aad
mov
xchg
mov
repz
aas
push
out
jmp
or
orb
cmp
xchg
test
mov
adc
repnz
repnz
psubusw
mov
fdivrs
outsl
xor
adc
mov
inc
push
add
sarb
and
jno
sub
call
ljmp
movsb
adc
cmp
pushf
fs
cld
into
sbb
scas
pop
loopne
cmp
mov
cmovno
test
and
mov
add
xchg
daa
and
jne
mov
sahf
dec
dec
ss
fidivs
pop
dec
sbb
pop
pop
addl
inc
ja
out
inc
in
inc
xor
pop
shl
call
imul
push
lock
popf
mov
cli
or
mov
orl
jns
cs
inc
mov
shl
sbb
inc
out
insl
jo
in
dec
sbb
push
aad
adc
mov
xchg
adc
les
mov
fsubrl
add
jae
mov
xchg
cmpsb
rol
xor
inc
and
pushf
pop
imul
push
enter
pop
scas
mov
repz
lea
pop
push
fsubl
pop
dec
sbb
into
sbb
dec
xor
into
pop
dec
js
je
stos
addr16
xchg
cli
adc
js
pop
sbb
jl
imul
das
ljmp
clc
mov
add
or
ljmp
movl
insl
cmpb
inc
sub
jecxz
inc
loopne
popa
xchg
mov
push
mov
push
imul
push
fcmovne
pop
sti
mov
or
mov
rcll
mov
aaa
cmp
loop
push
ja
push
jg
jmp
or
sbb
mov
add
shlb
fidivl
sub
or
in
push
sbb
lret
mov
jae
ror
pop
shrb
nop
add
outsb
and
inc
sbb
jno
popf
test
push
in
jp
jo
jae
jecxz
add
mov
imul
add
cmp
out
sbb
xchg
sub
mov
push
inc
mov
mov
mov
adcb
mov
out
icebp
lcall
mov
out
sti
aad
ss
int
outsb
mov
mov
push
rorl
test
jno
or
movsb
pop
mov
out
cmp
stos
in
in
cmpsb
inc
jecxz
push
sbb
adc
sbb
mov
mov
cmpsl
add
cmpsb
fs
inc
call
pop
cs
push
fs
iret
mov
add
and
subl
ret
cmp
lods
pop
pop
xchg
imul
dec
fdivrl
or
ret
mov
out
in
fstpt
outsl
rorl
incb
movsb
adc
jmp
adc
cltd
dec
push
jge
scas
sbb
xchg
les
adc
xor
rolb
int3
xchg
inc
mov
imul
cld
stc
sbb
lods
pop
mov
rcll
movd
add
push
jp
inc
lock
xchg
mov
arpl
imul
loopne
roll
andb
insb
scas
insl
jmp
into
pop
xor
ret
ret
iret
fwait
aam
dec
imul
add
imul
xor
out
push
scas
arpl
push
hlt
add
scas
mov
das
adc
cmpsb
ret
sarb
adc
xchg
sbb
cmpsb
mov
xor
fldl
call
and
in
repz
pop
test
cmc
and
sub
pop
cltd
clc
push
adc
dec
cmpsl
lock
mov
mov
out
xchg
popf
xchg
leave
call
xchg
xorb
xlat
adc
mov
loope
aaa
push
aas
mov
mov
cmp
pop
sarl
cmpsb
mov
jnp
aaa
arpl
sub
add
dec
addb
cmpsl
jle
es
movsl
adcl
inc
jmp
out
add
pop
or
dec
add
ljmp
loopne
jle
xor
enter
lret
pop
xor
sbb
rcrl
movsb
data16
xor
mov
cwtl
and
daa
jmp
xor
jmp
xchg
jmp
rcl
pop
hlt
adc
fcmove
pop
sub
inc
shlb
dec
jecxz
orl
lea
mov
fs
lock
dec
or
in
inc
call
fsts
and
and
push
jmp
inc
sbb
pushf
xchg
xchg
sub
call
mov
pop
mov
inc
cld
inc
ds
xor
mov
pop
push
clc
jae
das
adc
out
xlat
rolb
push
aam
pop
xor
jmp
enter
or
add
cmp
shlb
sub
cld
js
push
pop
shll
mov
rclb
ja
out
out
jle
lock
iret
loopne
mov
cmp
dec
fisttpll
mov
fistps
stos
dec
mov
pusha
and
dec
cwtl
mov
out
push
insb
push
mov
push
loopne
pop
or
mov
rcrl
mov
pop
jl
lods
cmp
negb
in
pop
sbb
and
mov
test
nop
dec
push
xor
xor
aam
in
xchg
je
mov
insl
shr
inc
ljmp
and
fcoms
pop
adc
mov
mov
rcl
int
sub
xchg
stos
push
xor
leave
fs
in
test
push
gs
sbb
scas
fidivs
in
add
and
mov
sahf
ret
scas
stc
out
icebp
cmp
clc
imul
fsubrs
sub
hlt
fidivs
inc
cmp
adc
lea
xlat
cmp
mov
or
jns
dec
mov
jnp
enter
pushf
lock
push
push
push
cmp
into
adc
push
mov
call
jnp
add
js
xlat
fcomp
push
lds
pop
push
mov
idivb
clc
add
fldenv
inc
mov
lds
addr16
xor
sahf
cmp
mov
movsl
adc
inc
inc
pop
nop
stos
pop
cmc
test
nop
lods
stos
add
mov
mov
test
movsl
push
add
jnp
push
jnp,pt
fidivl
or
enter
lds
fisubs
fcoml
lcall
cmp
filds
sbb
test
or
push
ja
push
sbb
xchg
xor
xor
dec
add
jae
mov
sub
mov
inc
push
jmp
adc
add
mov
xor
aaa
mov
add
imul
jmp
xor
or
inc
add
popa
mov
jno
and
cmp
out
inc
jae
sub
push
cmp
mov
push
mov
add
push
mov
sbb
iret
inc
and
scas
xor
adc
lods
adc
xor
fisttpl
movsb
mov
ds
push
popa
xor
sub
sbb
push
aam
push
les
push
pop
sahf
mov
push
jae
mov
sub
add
sub
in
jge
rolb
mov
xor
stc
shl
lods
adc
outsb
jmp
popa
and
pop
filds
aas
jb
cmp
xor
add
clc
jmp
in
xchg
mov
xchg
cmp
test
cs
push
sub
pushf
mov
pop
ret
lods
jg
adc
dec
sub
push
mov
cmp
sbb
outsw
pop
adc
push
imul
in
data16
jo
pushw
mov
out
shrl
add
add
pusha
pop
decb
jle
dec
iret
jmp
jge
stos
inc
jl
js
inc
sbb
lods
push
dec
jae
xor
and
xchg
ljmp
mov
xchg
test
in
daa
sub
je
pop
je
and
ljmp
cwtl
inc
cltd
pop
pushf
pushf
shrb
sbbb
adc
cmp
jo
ds
cmp
adc
xchg
lret
daa
out
mov
mov
mov
sbb
xchg
insb
call
mov
and
imul
jnp
cmpsb
pop
mov
mov
pop
cmp
loop
mov
aad
dec
ss
clc
push
ss
in
scas
xor
in
lods
shlb
mov
es
mov
adc
push
or
roll
stos
jbe
lahf
pushf
lcall
xchg
xchg
jecxz
mov
xchg
xchg
add
loop
mov
and
es
push
idivl
das
cltd
push
mov
mov
sub
scas
xorl
jp
cmpl
enter
sub
mov
inc
push
sbb
scas
adc
stos
push
mov
fisubl
fwait
iret
sbb
hlt
cmp
roll
lds
rclb
cmp
and
sbb
fstpl
stc
or
outsb
push
inc
xor
fdivs
into
jae
xor
adc
fmuls
sti
or
xor
loope
icebp
pop
lds
scas
adc
or
lock
mov
cmp
or
shlb
or
mov
lret
lods
outsl
addb
mov
mov
loop
xor
lods
int3
jmp
xchg
repz
jg
jge
imul
mov
in
into
xchg
lods
aad
mov
adc
int3
test
dec
mov
fistps
pushf
nop
sbb
mov
into
xor
mov
movsl
bound
add
repnz
imul
mov
aas
pusha
fsub
push
int
lret
mov
sub
mov
fnop
nop
lods
mov
sub
pop
adc
mov
mov
ljmp
push
pop
xchg
cmp
loop
nop
xlat
sub
mov
pushf
mov
cmpl
adc
or
ss
ss
ss
add
add
adc
shll
add
dec
add
les
adc
mov
push
mov
add
add
add
cmp
jne
repz
jmp
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
andl
ret
int3
int3
int3
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
int3
jmp
