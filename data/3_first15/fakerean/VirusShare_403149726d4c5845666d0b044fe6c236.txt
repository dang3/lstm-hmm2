sbb
add
mov
xchg
aam
mov
and
jmp
mov
add
cmp
rcl
xchg
add
sub
shlb
cltd
dec
out
dec
mov
out
fmull
jb
into
out
addr16
adc
ljmp
mov
pop
add
mov
mov
xrelease
and
shll
add
inc
sahf
subl
sbb
jne
xchg
in
inc
das
fldt
and
out
pop
out
dec
jae
mov
imul
insb
inc
sub
pop
jo
sbb
faddl
jo
lret
mov
les
jge
mov
leave
dec
scas
xor
insb
enter
rcrl
pop
jbe,pt
lahf
sbb
test
lret
sub
lods
push
pop
add
fcompl
repz
das
xchg
sti
cmp
mov
mov
xor
fnstenv
or
test
lods
into
aam
push
and
addb
mov
adc
push
insb
inc
test
loop
jnp
cmpsl
rorb
lret
aas
sahf
and
mov
xchg
mov
mov
daa
jmp
dec
stos
sbb
mov
int
inc
mov
repz
nop
jge
fiaddl
mov
fstp
mov
push
push
rorl
push
scas
lcall
xor
inc
or
movsl
xor
idiv
mov
pop
out
pop
adc
push
add
jl
cltd
je
sub
xchg
sub
movsl
and
adc
and
adc
inc
jl
jb
fildll
pushf
ret
mov
dec
test
aas
mov
movsb
xor
jnp
or
out
rolb
add
fs
fucomp
cli
cmp
mov
sahf
sub
sub
cmp
dec
push
ss
xor
icebp
cmc
push
cltd
lret
and
sbb
sarb
push
fwait
xchg
in
xor
adc
jno
and
inc
aaa
and
mov
call
stos
jp
mov
xor
mov
iret
dec
sub
sbb
mov
es
shll
in
dec
fisubs
push
jecxz
movsl
je
inc
pop
xor
mov
fcoms
mov
popa
mov
pop
in
in
lods
aaa
and
popf
arpl
or
adcl
inc
jp
ret
xchg
lea
in
lea
movsl
inc
or
stos
push
test
je
bound
inc
dec
pop
and
add
fcmovbe
out
repz
scas
fs
movsb
shll
push
inc
stc
inc
ds
iret
in
xor
cwtl
or
mov
mov
jg
jns
adc
xlat
outsb
xchg
movsl
clc
mov
mov
mov
sahf
rcll
sub
stos
lret
inc
and
sub
push
cmpsb
push
xorl
inc
inc
jae
inc
ss
js
test
das
imul
pushf
into
and
out
jae
pop
sahf
push
aad
jne
fidivrs
negb
lahf
dec
mov
xlat
les
aas
fisttpl
in
and
dec
mov
add
add
push
jnp
or
mulb
inc
fwait
sub
or
loop
ljmp
lret
or
daa
fdivp
push
testb
sbb
lods
pop
test
and
dec
enter
sub
mov
into
and
mov
repnz
int
push
movsb
addr16
sub
jg
adc
xchg
les
push
ret
in
fists
cmpsb
and
adc
pop
shlb
mov
or
sbb
cmp
add
cmp
loopne
loopne
fldenv
pop
sbb
xchg
ja
gs
outsb
mov
xor
add
xchg
inc
dec
int
xor
jg
fstl
jo
loop
outsb
push
lea
jnp
and
inc
sub
dec
andl
fsubrl
cmp
adc
pop
jmp
cmp
cli
ljmp
add
insl
sbb
push
jns
in
lea
push
xchg
dec
lret
xchg
pop
ret
inc
pop
mov
fcomps
ret
dec
mulb
add
mov
loop
xor
jns
es
je
sub
mov
sub
pop
daa
sub
mov
mov
xchg
lock
imul
xor
add
dec
xlat
ret
jge
cmp
sahf
out
hlt
out
fdivs
inc
ljmp
mov
fimull
or
mov
adc
lahf
pushf
int3
fcoml
mov
xchg
mov
mov
into
mov
push
out
jno
call
stc
in
inc
mov
add
xchg
xor
xor
push
sbb
jl
xlat
je
cmpsl
mov
pop
js
jp
jae
push
into
mov
lret
cli
mov
mov
sti
test
push
rcl
icebp
adc
andb
out
outsl
or
popf
sbb
cmp
stc
outsl
cltd
xchg
mov
xchg
dec
in
les
aaa
leave
inc
les
pop
sub
ss
fstps
jmp
cli
cmpsl
mov
lock
jmp
xlat
ja
cmc
pop
fmull
sbb
sbb
data16
hlt
mov
or
jnp
mov
test
addr16
dec
int
mov
cmc
dec
inc
pushf
sbb
test
sbb
mov
enter
lret
insb
add
inc
mov
and
shrb
cmp
dec
xchg
push
xor
jp
nop
mov
test
insl
addr16
in
aas
aad
arpl
dec
setg
out
push
cmp
ret
xor
pop
jne
repnz
cmp
das
mov
mov
or
jns
mov
test
inc
mov
cltd
mov
insl
jnp
mov
cmp
push
mov
and
in
adc
mov
mov
stc
fistps
stc
xchg
aas
pop
push
cmp
insl
iret
fisttpll
sbb
push
cmp
xchg
shrb
xchg
and
sbb
orl
dec
cli
jo
push
das
cmp
scas
xchg
xor
push
mov
jbe
pop
add
outsl
push
jecxz
xchg
inc
and
repz
mov
mov
xchg
jg
push
mov
popa
ljmp
push
negl
movsb
lds
test
xor
adc
mov
pop
clc
movsl
xlat
daa
mov
xchg
notl
mov
mov
mov
fwait
inc
hlt
cwtl
mov
and
mov
pop
popa
aad
jbe
sarl
adc
rol
inc
mov
pop
mov
out
pop
xchg
stos
mov
and
cmp
call
jo
shll
cmp
push
jmp
jnp
shlb
jge
add
leave
xchg
sub
and
popf
loope
or
and
and
xor
scas
int
shl
pop
sbb
leave
inc
dec
or
inc
or
popa
xor
inc
jno
adc
mov
xor
shll
cmp
mov
add
ljmp
mov
xchg
in
fisttps
fadds
adc
sbb
cmp
jne
cmc
adc
mov
repnz
jno
cltd
in
pusha
dec
pop
add
push
hlt
outsb
mov
xlat
mov
shll
dec
cmp
sub
xchg
pushf
dec
lcall
sub
xlat
adcb
sahf
divb
loop
lock
movsb
mov
pop
mov
pop
out
mov
test
dec
xor
shlb
insb
push
filds
loope
push
sahf
push
and
push
std
xchg
and
jmp
ror
cmpsl
mov
shr
or
mov
lea
add
imul
in
mov
xchg
pop
xchg
xchg
adc
cwtl
ljmp
inc
pop
push
test
jo
sbb
mov
jp
xor
ja
sahf
test
leave
xchg
divl
xchg
jnp
sbb
negl
adc
xchg
shll
mov
nop
daa
ljmp
add
clc
insb
pushf
faddl
push
xchg
xchg
in
sbb
xlat
in
mov
idiv
fwait
push
sub
lcall
xchg
or
mov
jnp
jbe
inc
insl
fs
xchg
xchg
in
mov
mov
faddl
mov
dec
rolb
ljmp
pusha
scas
fistpl
imul
jecxz
sbb
pop
sub
icebp
jb
cmp
jmp
gs
sarb
fldcw
xchg
sub
subb
sub
cmc
sbb
pop
aad
out
cmp
push
pop
pop
xchg
mov
mov
fs
sbb
pop
dec
and
sbb
loop
pop
jns
outsb
or
sbb
bsf
inc
pop
mov
imul
sub
cmp
pop
jp
fildl
pop
sub
ss
inc
xlat
mov
push
addb
jb
push
in
and
cltd
cmp
cmc
mov
mov
mov
xchg
out
push
cltd
xchg
fcoms
mov
int
pushf
sub
mov
pop
inc
mov
test
jecxz
jo
sub
scas
xlat
xlat
jnp
push
sub
and
sbb
sbb
pop
faddl
arpl
ret
xor
add
fiaddl
add
cwtl
mov
inc
ja
idivl
sbb
and
and
iret
dec
push
mov
add
out
imul
popa
cmp
inc
ret
adc
add
dec
mov
mov
and
addr16
mov
clc
imul
data16
sub
call
rcl
jg
pushf
iret
ja
outsl
cmp
cmpsl
jae
mov
fldz
dec
cli
push
mov
out
xchg
mov
test
fldl
cld
pop
xor
adc
adc
ret
add
add
cmp
test
hlt
add
faddl
ror
jg
pusha
fisubrl
insl
mov
cmpsl
inc
mov
jl
dec
out
testl
pop
sbb
pop
and
push
cmp
bnd
add
psrad
dec
sub
xchg
add
shrl
into
dec
inc
xchg
sahf
add
jne
test
inc
push
stos
jns
stc
fldenv
call
mov
or
in
adc
pop
ret
enter
xchg
stos
push
ret
fcomp
mov
add
pop
dec
aam
nop
dec
jmp
addr16
sbb
xchg
stc
adc
inc
inc
pop
jae
test
js
sbb
lock
mov
cmpsl
pop
cmp
pop
call
in
cmp
insl
pop
sub
les
jne
pop
dec
fwait
push
cmpsb
pop
push
mov
cltd
aad
test
inc
ror
pusha
insb
push
jo
sub
add
xor
add
scas
pushf
sub
mov
mov
cli
xchg
jl
mov
mov
inc
or
sbb
inc
push
int
loopne
jne
outsb
popa
mov
je
aaa
nop
lahf
mov
imull
insl
test
repz
lret
mov
aaa
fcompl
stos
sub
dec
xchg
pop
add
shrl
mov
and
and
decb
ss
daa
dec
and
nop
pop
pop
cmp
ja
and
or
stos
push
rclb
dec
aam
shll
dec
xchg
xlat
inc
ljmp
xchg
cmp
sub
add
push
push
lods
mov
loopne
in
mov
xchg
mov
int
and
pop
mov
daa
inc
inc
adc
rorb
lods
push
shll
flds
inc
cmpsb
ret
and
xor
dec
cmpsl
sbb
popf
enter
sub
ljmp
ds
sub
lret
xchg
mov
repz
jle
jnp
jge
ja
mov
inc
cld
push
lret
pop
and
push
test
or
fwait
ret
ds
mov
rcrb
mov
and
mov
sub
int
stc
and
mov
movsl
test
test
cmp
xor
jns
movsl
sbb
jmp
adc
ljmp
mov
xchg
in
aas
lret
push
cmp
arpl
js
and
sub
or
in
dec
subb
fsubs
mov
and
xor
xchg
mov
adc
pop
jge
inc
aas
push
xchg
out
lret
imul
lds
sub
out
or
les
shlb
jp
fnstsw
mov
fdiv
movsl
mov
call
xchg
cmpsb
pop
jns
test
xchg
call
in
inc
inc
pop
sbb
icebp
repz
sub
data16
popa
sbbb
add
push
dec
mul
sbb
cmpsb
outsb
push
aad
sarb
mov
insl
bound
cwtl
fmul
loop
cmp
subb
adc
sbb
xchg
subb
xchg
mov
sub
jmp
mov
sbb
pusha
ss
fdivrs
scas
fwait
lcall
in
out
stos
sar
sarl
out
jp
fdivs
mov
pop
add
jmp
and
in
cmp
and
push
ss
push
fstpt
out
add
loopne
pop
pusha
push
jge
cmp
dec
shrl
stos
ss
daa
xchg
or
sti
jp
ret
call
fwait
int3
neg
insl
ficomps
dec
add
imul
xchg
push
loopne
sbb
test
add
jmp
les
cli
mov
je
push
jp
jg
imul
es
shrb
shl
pop
repz
sbb
roll
shrl
cmp
adc
loop
adc
push
push
cmp
repnz
xchg
push
notl
fneni(8087
jle
xchg
ret
lcall
adc
jl
push
das
mov
push
das
in
mov
sub
jle
pop
or
insl
hlt
mov
sub
inc
lcall
shll
inc
and
jecxz
adc
sub
add
stos
pop
in
and
xlat
loopne
mov
sti
sbb
sub
cltd
add
push
inc
push
jno
cmpl
jo
outsl
add
add
ss
iret
mov
cmp
in
pop
push
sub
pop
outsb
test
out
pop
add
push
aaa
mov
mov
mov
lcall
xchg
in
stc
and
cmpsb
push
test
add
jecxz
mov
and
push
cmp
daa
push
pop
dec
aas
pop
in
addb
mov
lcall
jle
jecxz
imul
xchg
xchg
pushf
jb
or
pusha
or
xor
pop
ja
or
push
repnz
insb
jno
movsb
cltd
popf
lods
aaa
jle
test
xchg
out
and
push
aas
in
lret
cmp
je
cmp
mov
ficompl
jle
inc
mov
mov
loop
push
into
adc
sbb
pop
sarb
cmpsl
sbb
xchg
hlt
leave
iret
sbb
clc
daa
scas
fcompp
fs
and
cmp
mov
test
adc
sub
mov
push
mov
ds
cmp
js
dec
cld
les
xor
push
dec
ret
cwtl
jb
xor
jmp
popf
pop
fnstcw
stos
sbb
pop
mov
ds
jmp
xchg
sub
mov
js
mov
imul
test
sbb
adc
push
out
insl
xchg
in
ljmp
push
leave
xchg
add
sbb
xchg
cmp
inc
cmp
out
xor
adc
xchg
aas
push
add
push
add
mov
cmpb
push
ja
dec
nop
cld
outsb
push
ljmp
cmp
sub
push
out
and
mov
pop
mov
test
movsb
xchg
xor
movsl
add
aas
push
push
cmc
aad
pop
lret
or
out
dec
cmpsb
mov
adc
or
cmpsb
jecxz
lods
in
sub
ja
add
pop
push
insb
cmpsl
int3
inc
ljmp
insb
add
inc
mov
add
iret
cmp
jno
pop
mov
mov
fldl
enter
sbb
lcall
sarb
cmp
jle
cli
mov
cmp
repz
inc
pop
fldcw
ljmp
adc
in
pop
bound
mov
dec
fwait
jae
inc
jmp
cmp
and
cmp
sub
sbb
out
pop
xor
popf
subl
shrb
cmp
mov
and
daa
cmp
and
cmpsl
scas
xor
pop
and
shr
test
xor
rcr
jl
imul
push
mov
stc
pushl
mov
lods
test
jb
push
cwtl
mov
ss
pushf
lods
sub
jb
mov
sahf
cmp
and
nop
pop
psrlq
mov
call
imul
mov
xor
add
pushf
cmp
cmp
in
or
lahf
je,pn
push
push
stc
movsb
cmpsb
stos
mov
lods
xchg
orb
rcrl
adc
mov
mov
add
add
enter
lock
sarl
xchg
sub
inc
xor
idivl
lods
adc
es
lret
repnz
and
pop
xor
adc
xchg
pop
leave
cmpsl
roll
ror
pop
jnp
fildll
push
lods
xchg
repz
fmull
mov
push
lock
cmp
mov
jne
scas
mov
lea
arpl
adc
fstl
aam
push
dec
push
mov
push
negb
mov
mov
jecxz
xor
cli
gs
xchg
mov
add
xor
adc
ret
pop
inc
pop
faddl
leave
aam
jnp
cs
adc
mov
add
jmp
enter
push
cmp
jne
addb
in
sti
mov
fnsave
loop
ret
xlat
pop
xchg
push
call
test
xor
sbb
out
sbb
cmp
cwtl
stos
jl
xor
das
jns
jmp
push
test
fsqrt
ret
pop
fwait
scas
leave
push
mov
jl
jns
sub
shll
mov
cli
and
rcrb
adc
lcall
test
jo
mov
cwtl
outsl
pop
imul
pop
cmp
lock
ljmp
ljmp
push
lea
add
enter
aad
jp
fistpl
pop
nop
cpuid
mov
outsl
and
push
lock
ret
out
shrl
es
dec
fs
xchg
adc
scas
ds
in
ficompl
sbb
xor
and
lahf
cmp
ds
mov
adc
mov
lea
inc
mov
jmp
dec
iret
das
loop,pt
push
pop
loopne
add
ds
mov
aad
pop
add
mov
jmp
push
mov
int
dec
stos
sub
pop
add
jmp
call
adcl
cmp
stos
pop
pushf
nop
mov
xlat
mov
scas
int3
arpl
arpl
fidivrs
sub
cmpb
stc
sarl
jp
and
inc
pop
bound
in
sbb
gs
imul
cmpsb
add
lds
scas
inc
pusha
je
popa
mov
lds
icebp
movsb
ds
incl
adc
popf
bound
dec
in
es
int
xlat
pop
in
notl
mov
rcr
xchg
out
dec
movsl
cli
fstp
inc
mov
adc
push
in
sub
push
adc
sub
je
sbb
jb
in
mov
mov
pop
icebp
notb
jecxz
loope
cmpsb
adc
sub
mov
divb
loopne
pusha
inc
inc
addr16
mov
inc
ss
inc
mov
dec
das
cli
sub
ljmp
cmp
jnp
inc
jecxz
fwait
xchg
xor
push
pop
push
pop
popf
fwait
cmp
imul
pop
and
psrld
fstpl
cld
push
sbb
pop
testl
push
sub
sub
pop
fsts
scas
dec
ret
ret
or
mov
sarl
test
pop
pop
std
xor
fsubrs
insl
insb
aad
ss
das
and
pop
add
inc
pop
inc
pop
outsl
mov
cmp
test
and
je
pop
idivb
adc
ror
ljmp
mov
adc
cmp
popa
cmpsb
rep
mov
lret
or
push
push
mov
lcall
outsl
push
pop
sub
aas
test
pop
imul
add
gs
ds
faddl
push
and
jle
mov
mov
pop
push
pop
or
adc
pushf
cmpsb
jno
out
pop
jne
cs
inc
push
fstpt
ds
push
mov
rcrl
ljmp
call
xor
sub
ja
iret
sub
mov
ret
dec
push
xchg
inc
loopne
out
addb
fs
movsl
js
cmp
inc
cmp
sti
fildl
lds
xchg
cmpl
fsubl
repz
sti
pop
test
push
xor
mov
sarl
test
sbb
adc
std
mov
clc
dec
mov
xor
sub
dec
push
xor
and
adc
test
or
mov
cwtl
pop
push
sbb
xchg
adcl
out
mov
jbe
mov
popa
fwait
mov
and
add
out
mov
and
push
mov
pusha
xchg
xchg
jns
mov
lcall
mov
mov
pop
dec
repnz
cmp
andb
pop
fninit
push
lock
les
inc
jmp
mov
push
mov
bound
dec
movsb
testl
pop
loop
and
dec
adc
xchg
adc
divl
or
and
add
inc
insl
insl
lds
int
aad
sbb
int3
xor
inc
dec
lods
outsl
lods
or
xor
sbb
mov
lcall
ret
xor
mov
adc
cmp
dec
cmp
dec
xor
test
inc
and
cmpsb
adc
lods
fs
sbbb
push
xchg
push
add
test
aaa
hlt
adc
mov
sub
dec
mov
adc
xor
loop
int
mov
xor
iret
cs
pusha
xor
dec
push
arpl
fucomip
pop
test
pop
int
iret
bnd
xchg
arpl
fidivs
xchg
stos
ret
mov
ss
loopne
addr16
pop
sub
mov
orl
cltd
dec
enter
lds
pop
fdivl
mov
shrb
fwait
fs
fidivs
and
jp
in
push
pop
xchg
loop
jg
jg
hlt
mov
movlhps
mov
jns
xor
int
push
and
enter
inc
ljmp
scas
loopne
push
dec
xchg
mov
insl
insb
out
fdivrl
and
mov
scas
imul
lcall
jns
pop
mov
int
jo
dec
lea
iret
mov
or
out
popa
push
sub
xchg
sub
cmp
dec
cmp
stos
loop
ficoml
mov
sbb
adc
push
iret
lret
pop
xor
inc
push
jge
ret
xchg
dec
neg
mov
ja
pop
lahf
pop
sub
cmc
adcl
xchg
jae
pop
mov
adcl
in
cs
lret
push
aaa
pop
mov
out
xchg
sub
lahf
popa
mov
mov
inc
jmp
lock
cmc
ljmp
fmuls
xchg
fstpt
mov
dec
pop
sub
ds
lock
and
add
call
sahf
xchg
scas
nop
in
insb
lcall
push
aam
jne
mov
je
mov
push
daa
les
int3
into
lods
cwtl
sti
pop
fwait
sbb
aam
mov
and
cli
jle,pn
or
outsb
les
hlt
scas
mov
inc
shll
add
movsl
cmpl
mov
and
mov
xor
sbb
stc
sbb
mov
js
mov
jmp
or
stos
shrb
call
sub
cmp
ret
pop
xor
inc
dec
jl
cli
jne
xlat
mov
pushf
stos
lcall
mov
xorb
adc
add
mov
jno
aam
jg
mov
mov
inc
jo
data16
fsts
mov
icebp
xor
int3
cmpsb
mov
jbe
pop
dec
lea
ret
fcoms
dec
lret
fnstenv
xchg
call
inc
mov
into
mov
cmp
push
dec
sbb
and
and
push
sbb
cmp
and
leave
in
mov
stos
scas
call
mov
adc
dec
cs
xlat
or
aas
push
pop
jle
cmp
xchg
arpl
fisttpl
lret
xor
call
and
or
subb
sbb
pop
push
dec
add
mov
pop
ss
icebp
cmp
cltd
mov
gs
ret
ds
push
sub
mov
cli
mov
xchg
pop
iret
test
sbb
and
mov
cmp
out
pop
adc
push
cmp
int
test
jge
mov
cld
inc
ret
stc
repz
xchg
loopne
mov
adc
dec
int
cmpb
dec
push
scas
call
xlat
lock
les
ret
dec
lret
faddl
repz
jae
test
dec
rcl
fildl
iret
sub
add
outsb
les
dec
das
and
aaa
add
mov
push
orl
mov
xchg
pusha
add
pop
pop
add
push
mov
lret
in
mov
cltd
sub
xchg
mov
or
sahf
mulb
dec
sti
data16
leave
lret
aad
inc
es
jo
jmp
mov
addl
icebp
das
cli
sbb
pop
pop
xchg
ljmp
jbe
pop
lcall
aaa
lods
mov
sti
or
dec
movsb
add
fsubrl
xchg
push
rcr
sub
mov
aad
dec
in
cmp
sbb
cmpsl
sti
add
jns
adc
loope
add
fdiv
or
xchg
xchg
mov
in
cmp
adc
ret
dec
insl
jle
mov
mov
xchg
push
jecxz
ja
mov
pop
jbe
stos
popf
mov
push
pop
std
inc
lea
mov
mov
shlb
pop
sbb
imul
push
and
int3
and
sarb
fwait
jne
mov
sbb
push
xor
xor
sub
lcall
movsl
das
dec
repnz
aaa
imulb
sti
test
push
pushf
lock
push
push
jae
sahf
gs
and
mov
dec
dec
orb
mov
add
std
jge
xchg
cmp
cmp
loope
cmc
into
cld
xchg
xchg
mov
das
call
adcl
ja
shll
or
adc
shr
ret
jp
jnp
lret
jp
popa
call
bound
adc
push
ret
or
inc
or
scas
xchg
pop
sbb
outsl
out
test
js
and
push
popa
or
outsl
movsl
out
or
divb
dec
sbb
sbb
mov
in
cmp
call
adc
or
xchg
cmc
push
xchg
ja
shll
stos
outsb
das
pushf
pop
mov
arpl
push
test
sub
sbb
leave
inc
mov
div
push
mov
out
mulb
je
cld
mov
dec
sub
bound
iret
mov
sub
inc
sarl
mov
dec
jmp
inc
pop
jmp
iret
stos
cmp
pop
inc
sub
mov
inc
loopne
sbb
imul
scas
xor
pop
imul
push
call
mov
push
mov
movsb
dec
jne
in
jbe
xor
cwtl
dec
bound
mov
stc
mov
roll
fcompl
adc
gs
push
xchg
add
and
std
sub
int
bound
xchg
sub
cmc
xchg
sbb
pop
or
xchg
inc
gs
cld
rolb
insl
andl
xor
add
push
mov
stos
gs
adc
pop
cmp
or
daa
in
mov
push
lea
imul
and
mov
sbb
imul
lods
jecxz
bound
add
sbb
lcall
fwait
adc
cmp
ret
adcb
push
pop
outsb
dec
cltd
into
inc
adc
jl
mov
outsl
add
or
add
out
test
daa
cli
in
jg
shlb
stos
repnz
fisttpl
xor
pop
push
std
out
sbb
mov
cmp
leave
pop
inc
inc
mov
sub
and
aas
sbb
rcrl
dec
xor
in
or
jmp
inc
mov
in
ds
fcom
or
cld
aam
cmpps
pop
sbb
push
push
rcl
fsubrl
inc
arpl
test
movsl
jp
nop
ret
sbb
jnp
inc
shl
lods
out
mov
mov
pop
js
cmp
adc
int3
insl
cmp
jbe
inc
sbb
push
dec
dec
dec
jge
add
push
andl
xor
sub
out
cmpsl
or
lret
daa
push
pop
adcl
jne
jmp
push
xchg
fldl
iret
sbb
imul
sti
xchg
lret
popf
sub
jns
xchg
scas
xorl
xchg
cld
leave
out
mov
subb
push
ljmp
lret
cwtl
push
les
mov
xchg
push
les
xchg
insl
into
pop
mov
sbb
imul
sub
lret
scas
jge
mulb
sti
adc
xchg
gs
dec
jge
dec
dec
dec
mov
subl
push
in
cmc
fucomip
xchg
inc
pop
adc
cwtl
and
and
add
enter
mov
sbb
push
add
rorb
dec
out
add
xchg
in
pushf
idivl
mov
loop
mov
pop
push
inc
int
xchg
sbb
icebp
loopne
inc
outsl
mov
add
lret
popf
or
sbb
test
cld
jns
jge
rcl
push
mov
fs
testb
inc
cmc
jp
rorl
call
mov
push
and
bound
rorl
add
or
cmp
fldcw
ffree
pop
shl
pop
test
push
jno
daa
fadd
lods
pushf
pusha
dec
lods
push
pop
les
test
cmpsb
sbb
mov
loopne
pusha
ja
les
or
insb
pop
lcall
pop
sbb
sahf
mov
adc
inc
xor
fxch
inc
jmp
leave
pop
jg
dec
pop
leave
xor
inc
and
mov
sahf
leave
sbb
rorb
cmpsl
test
aam
push
scas
ret
cltd
or
sbb
jecxz
ja
pop
dec
test
jp
aaa
ret
mov
insb
loop
out
icebp
add
or
sub
enter
cmpsb
in
or
push
xchg
cld
mov
adc
cli
mov
insb
ljmp
aas
adc
mov
out
or
lea
cmp
dec
ficompl
xor
inc
cmp
sti
adc
das
jns
add
xor
ljmp
gs
push
dec
cmp
int3
in
mov
fisttpl
push
movsb
shrb
js
dec
cmp
ret
es
mov
xchg
inc
xchg
adc
xor
mov
dec
cltd
mov
mov
jno
dec
dec
loope
adc
or
sub
into
test
and
or
popa
scas
adcl
out
scas
je
or
fiaddl
outsl
or
mov
ljmp
repnz
fcompl
paddusw
arpl
inc
mov
test
pop
shlb
sahf
dec
inc
sub
lods
inc
add
mov
mov
and
faddl
rclb
or
pop
pusha
cwtl
and
sub
pusha
jbe
jns
mov
into
ja
and
dec
movsl
jl
and
dec
mov
adc
ja
mov
test
movsb
cmpsl
mov
sub
push
xchg
fisttps
xor
xchg
xor
in
sbb
call
iret
or
js
sub
xlat
cmc
sbb
jne
out
ret
sarl
cld
sar
sub
jge
lret
mov
dec
dec
fcmove
out
xor
sbb
dec
call
aad
fcmovnbe
in
daa
or
arpl
jo
cmpsl
cmpsb
and
push
cs
imul
sub
stos
mov
mov
inc
shlb
sub
mov
scas
jno
push
ds
out
imul
xchg
fcomps
sub
sub
decw
pop
jle
pop
push
xchg
jl,pn
cmp
aas
adc
and
mov
repnz
mov
inc
pop
movsl
nop
cli
sbb
nop
jno
sbb
or
mov
mov
jl
lods
sub
js
lods
pop
jg
xchg
out
ja
scas
inc
lret
inc
or
hlt
and
aad
cmpsb
or
xor
pop
sbb
or
jb
das
fs
sbb
iret
add
sbb
sbbl
fadd
imul
out
pushf
push
lea
sahf
push
pop
stos
cwtl
testb
add
imul
fidivrl
call
jae
rol
mov
setnp
out
add
mov
push
lds
mov
sub
jno
pusha
cmpsl
into
xchg
sub
mov
outsl
pop
inc
mov
pushf
lds
insl
ret
mov
movsl
jmp
dec
xor
addr16
pushf
je
add
stos
faddp
cmp
cli
test
jbe
pop
cmp
mov
inc
cwtl
icebp
loop
test
xor
fld
loop
and
pop
loope
arpl
in
inc
xlat
ret
mov
insb
scas
cmpsb
jp
sbb
repz
and
push
add
add
xchg
in
enter
jb
jg
jecxz
sti
mov
imul
out
cld
mov
inc
and
scas
hlt
adc
outsl
xor
mov
in
adc
xor
mov
adc
std
fistpll
sbb
sbb
neg
cmc
add
insl
mov
cli
test
std
iret
fwait
cwtl
dec
cmc
or
add
sbb
xchg
adc
sti
push
push
leave
xchg
push
addr16
mov
jb
mov
ret
outsb
mov
jmp
push
fbstp
pop
add
or
push
shr
cmc
xchg
out
add
mov
pusha
movsb
hlt
dec
jbe
aaa
xchg
xor
aaa
cs
dec
enter
sbb
xlat
add
jbe
add
subl
xchg
sub
push
jmp
mov
xor
daa
mov
aas
push
xchg
add
sub
push
sub
dec
adc
push
es
xor
aas
inc
fistpll
xchg
dec
xor
mov
sub
rcrb
or
mov
adc
pop
inc
inc
adc
shll
ljmp
pop
cmp
push
push
iret
mov
xlat
in
nop
stc
addb
inc
loop
jns
imul
cmp
sub
leave
xor
push
add
test
mov
add
pop
mov
xchg
sub
data16
loopne
sti
cs
jns
dec
jnp
fsubrs
out
inc
push
mov
std
aas
push
rcrb
and
cmp
push
dec
mov
lods
inc
push
dec
mov
or
sbb
or
repz
and
fldcw
neg
xchg
lock
mov
lcall
xchg
mov
push
xor
sub
popl
cwtl
add
push
jb
dec
aad
xchg
imul
sbbl
mov
jnp
scas
jmp
mov
in
jge
cmc
inc
in
xchg
es
dec
mov
pop
cmp
scas
bound
scas
fldenv
out
push
jge
push
sub
jmp
clc
ret
pop
mov
adc
inc
mov
pop
cmp
out
out
mov
push
jns
mov
outsl
scas
mov
test
ret
cmp
xchg
dec
push
lods
mov
mov
pop
mov
or
fimuls
xchg
add
fidivs
lds
push
rcr
jnp
xor
sub
push
daa
xor
hlt
js
push
and
push
out
jecxz,pt
mov
repnz
les
outsl
cld
push
icebp
das
dec
xchg
adc
cmp
add
sub
insl
into
leave
xor
fwait
mov
mov
add
fwait
iret
dec
dec
mov
push
xchg
fstpt
lods
add
fadds
sbb
pop
jb
xor
aad
sub
cltd
lods
ret
jp
mov
in
repz
push
sbb
nop
leave
scas
mov
xor
pop
sub
movsl
pop
je
adc
aaa
into
sbb
movsl
dec
sbb
in
fcoml
push
test
adc
scas
jecxz
inc
cmp
sahf
sbb
std
cmp
or
lcall
jl
inc
pop
movsl
inc
adc
scas
sub
xlat
inc
ljmp
inc
sub
add
inc
rorl
aam
icebp
adc
jmp
or
pushf
mov
sub
cmpsb
aas
lahf
pop
dec
std
scas
ret
fnstenv
mov
mov
and
adc
jmp
cltd
pop
mov
xchg
xor
popf
xchg
add
dec
sbb
jmp
jle
push
sbb
xor
cltd
jns
mov
out
call
dec
cwtl
pop
sub
xchg
push
outsl
add
out
inc
repz
sbb
test
add
iret
inc
mov
pop
out
cmpb
fdivl
sti
scas
addr16
out
les
negb
fisubrl
iret
mov
decl
dec
adc
mov
insl
jnp
rclb
movsl
cmp
fdivrs
pop
fnstcw
sahf
sbb
mov
movsl
xchg
pusha
xor
and
pushf
adc
pushf
sub
sahf
jno
cltd
adc
add
ret
bound
and
test
jg
mov
xor
mov
add
push
loope
jno
pop
xchg
je
and
mov
in
push
push
cmp
mov
and
lret
push
mov
dec
out
and
jae
lds
cwtl
mov
std
xlat
enter
mov
test
xchg
xor
mov
mov
loopne
fstps
or
dec
sub
dec
call
adc
arpl
call
push
test
xchg
adc
in
xchg
fcompl
cmp
in
aaa
cmc
sarl
lods
cmp
mov
xchg
ss
or
xchg
aam
gs
in
push
outsl
faddl
stos
cmp
repnz
in
jg
adc
mov
push
popa
pop
clc
fs
popa
jnp
add
sbb
imul
dec
jne
push
ja
jl
mov
mov
mov
out
mov
scas
add
and
push
cli
sub
fnstsw
popf
adc
dec
lock
xchg
mov
in
dec
pop
cmpsb
les
pop
fmull
fs
jp
or
jmp
notl
aam
ret
pop
stc
mov
push
repnz
xchg
gs
in
dec
add
sub
das
stc
push
dec
xchg
mov
push
mov
rcrl
or
nop
mov
cli
pop
sbb
insl
int
xchg
mov
frstor
jmp
and
mov
xlat
divb
lods
dec
add
int3
loopne
cmc
test
add
and
into
inc
call
outsl
out
pop
add
pushf
mov
test
push
lahf
sbb
daa
and
movsl
test
mov
movsb
repnz
nop
dec
dec
ret
mov
out
cld
push
rcrl
ret
add
filds
movb
call
rorb
add
mov
inc
xor
jns
dec
shll
pop
in
test
xchg
mov
jmp
and
or
push
test
dec
xor
add
cmpsl
sub
mov
imul
add
push
jge
movsb
je
or
or
and
dec
mov
mov
xor
lods
dec
rorl
aaa
dec
xchg
out
cmp
js
inc
pand
in
outsl
stos
push
xor
push
sub
in
jge
lods
sbb
inc
mov
cld
rcrb
mov
mov
mov
xchg
stos
jl
cmc
das
and
inc
in
jge
notl
sub
xor
inc
or
adc
inc
mov
mov
cmc
inc
lds
mov
push
lret
and
add
push
sbb
or
aaa
data16
cmc
je
rclb
dec
cmp
jbe
addr16
add
ret
aaa
inc
cli
push
add
adc
mov
xlat
cld
push
pop
daa
mov
ret
or
dec
sarl
daa
push
or
imul
inc
sbb
xchg
mov
imul
xchg
call
push
mov
shl
pop
and
inc
mov
test
pop
or
xor
cmp
or
mov
loopne
stos
int
lds
push
inc
test
leave
int
dec
cs
jle
dec
mov
fdivs
mov
imul
sbb
push
or
movsb
xor
or
sub
inc
inc
dec
cmpsb
sbb
mov
or
stos
push
cli
outsl
std
aam
rcl
arpl
adc
test
movb
rcrb
sbb
or
lods
jp
or
mov
aad
dec
inc
push
pop
xor
repnz
jg
test
repz
adc
test
in
sub
jno
sbb
mov
xlat
pop
incl
lahf
sub
not
mov
lods
lahf
and
jns
mov
adc
push
inc
js
outsb
std
and
pop
pop
inc
cwtl
push
clc
mov
cltd
pop
les
push
push
mov
sub
popa
dec
xchg
cwtl
es
xchg
inc
cmp
push
add
sahf
add
cs
aas
push
push
pop
les
subl
xchg
divl
cmpsl
sub
cld
into
mov
adc
daa
jp
sarl
jbe
xor
or
insb
jge
push
pop
lea
pop
mov
ret
cmp
push
loop
popf
cmp
andb
nop
icebp
pop
mov
psrlw
cltd
test
in
pushf
cmp
in
andl
push
in
shll
jecxz
movsb
sub
mov
cmp
push
inc
popf
xchg
dec
loopne
rorb
mov
orl
sbb
or
fcoms
and
test
xchg
jle
scas
or
xchg
rolb
pop
data16
daa
lock
mov
inc
in
lahf
sahf
sahf
in
gs
bnd
insb
cmp
and
ss
test
fdivp
mov
test
mov
xchg
mov
mov
push
not
faddl
ljmp
out
dec
push
scas
pop
cmp
testl
cld
sbb
xor
and
jmp
into
dec
xor
xorb
insl
or
pop
mov
and
jb
cmp
mov
mov
and
insl
push
add
fsub
mov
in
jo
lcall
insl
adc
fdiv
jne
sub
and
test
testb
bound
insl
daa
push
mov
lret
das
jmpw
lcall
sub
and
xor
ficoml
dec
add
mov
or
push
push
mov
outsb
idivb
cmp
adc
arpl
add
mov
jbe
enter
or
add
sbb
lahf
xchg
mov
xchg
push
add
cwtl
sbb
mov
bound
add
jg
sub
xor
shr
insb
addr16
mov
out
push
fdivl
addl
xor
mov
push
sbb
fists
cmpsb
inc
in
idivb
dec
push
pop
cli
aaa
int3
jno
test
aas
pop
andb
and
dec
xorl
mov
in
lock
push
nop
or
mov
and
cmp
cmp
pop
mov
mov
mov
sbb
inc
aas
xor
mov
push
cmp
incb
js,pn
roll
or
inc
mov
xchg
jae
dec
pop
xchg
out
rcr
sbb
test
imul
scas
aaa
sbb
adc
xchg
clc
lret
jmp
xor
jnp
mov
mov
xor
subl
pop
sbb
xor
and
sahf
pop
cmc
dec
push
inc
push
jmp
nop
adc
lahf
xor
sbb
mov
mov
ss
sbb
loopne
clc
lret
lahf
push
inc
sbb
jae
lea
adc
lock
int
std
leave
jns
inc
push
decl
jg
inc
fadd
lods
leave
inc
rcl
xchg
push
test
outsl
hlt
inc
in
das
enter
stos
cmp
sbb
lods
push
xor
aad
ljmp
jo,pn
adc
add
in
xchg
pop
sbb
cld
dec
imul
jae
or
mov
daa
div
iret
push
xchg
popa
sub
and
ljmp
mov
daa
mov
lods
mov
roll
ds
lret
xchg
push
adc
mov
lds
imul
sarb
jp
mov
lret
xor
adc
aad
call
call
adc
dec
shlb
lahf
inc
aam
or
pop
mov
or
adc
cmpl
cli
xchg
add
loopne
ljmp
test
fsubr
adc
cld
out
push
roll
icebp
bound
fs
xor
adc
imul
cs
fmul
cwtl
pop
jo,pn
inc
xchg
jae
pop
jl
sbb
into
in
mov
adc
and
rcrb
addl
inc
or
and
rcrl
shll
sub
xchg
and
mov
inc
mov
in
ja
jcxz
movsl
dec
shll
xor
adcl
mov
mov
mov
mov
ds
inc
xor
mov
mov
lods
scas
dec
pop
sbb
loopne
mov
sarb
or
dec
movsb
repz
and
into
sbb
push
dec
pop
inc
xchg
dec
mov
push
xchg
ds
or
roll
xchg
xchg
ds
xchg
cs
stos
test
cwtl
and
add
ja
pop
les
je
jg
add
push
dec
push
push
dec
sbb
mov
sbb
dec
add
sub
cltd
inc
mov
fistps
sub
push
dec
and
rclb
mov
adc
jne
or
das
cmpsl
adc
add
fwait
rcl
add
loopne
sub
add
test
imul
scas
enter
cmp
js,pn
test
xchg
pop
gs
mov
sbb
or
and
loopne
jo
inc
mov
addr16
jg
imul
inc
jp
mov
dec
clc
sar
add
decl
push
pop
das
aas
lods
cwtl
add
mov
sbb
adc
les
mov
mov
pop
ljmp
sti
roll
ds
std
addl
mov
pop
cltd
xchg
in
scas
cmpsb
fsubs
add
push
in
gs
jo
xchg
and
adc
mov
jmp
dec
adc
outsl
jno
add
push
inc
dec
push
inc
mov
pop
mov
xor
mov
pop
mov
gs
hlt
loop
inc
in
cmp
in
and
in
add
xor
das
or
shl
les
push
cli
lret
fwait
ret
or
mov
jecxz
sub
add
inc
int3
xchg
in
fwait
add
iret
lock
movsl
xchg
repz
and
sahf
cld
pop
pop
fstl
inc
iret
inc
jo
mov
cmp
push
add
cwtl
fsubrl
insl
ljmp
jno
xlat
ds
shlb
and
cmp
and
aad
decb
das
rcrb
mov
cwtl
out
push
pop
sbb
frstor
je
lea
inc
jbe
enter
mov
inc
sub
mov
dec
rclb
cmp
inc
stc
and
stos
fdiv
adc
test
mov
jno
pop
dec
mov
and
inc
pop
xchg
lcall
jns
jae
mov
gs
mov
loope
test
xchg
clc
mov
negl
in
jmp
jle
fsubrl
test
call
xor
cmc
ret
mov
fisubs
js
xor
sbb
test
inc
xchg
mov
cld
popa
roll
clc
test
inc
adc
ss
test
push
add
sbb
pop
aaa
xor
int3
cmp
fldpi
aad
adc
push
cmp
mov
jge
sbbb
push
setae
cmp
push
nop
inc
xchg
rcll
xor
and
or
sub
xchg
ret
outsb
das
sub
js
adc
aad
push
inc
fnstcw
inc
mov
jmp
mov
adc
mov
pop
in
lcall
scas
pop
cli
int3
push
into
pop
jbe
test
inc
mov
xor
fisubs
pop
mov
xor
bound
add
push
and
xlat
mov
push
jg
lods
dec
ljmp
xchg
inc
inc
cmp
cli
mov
aas
std
test
mov
sub
andl
adc
or
mov
in
mov
sub
mov
clc
addr16
xor
dec
inc
sub
rclb
lcall
sub
dec
in
adcl
cmc
push
xchg
adc
iret
xchg
popf
push
mov
lcall
inc
test
push
jmp
lock
addr16
in
push
ret
mov
mov
or
inc
or
pushf
or
clc
dec
push
cli
ljmpw
cmp
sub
mov
cwtl
shrb
cmp
imul
stc
bound
sahf
xchg
leave
xor
sub
lods
in
mov
arpl
cmp
lret
fists
orb
ret
push
in
aad
push
jp
in
pop
stos
ds
mov
jle
sbb
fisubl
adc
cld
cmp
cld
bswap
dec
push
popf
mov
jecxz
fldt
add
fsubl
push
push
add
lods
add
clc
jno
inc
cmp
jp
mov
push
sub
pop
ret
mov
mov
inc
xor
mov
xchg
adc
ret
cwtl
dec
mov
sub
adc
arpl
sub
int3
repz
xor
xchg
jecxz
mov
push
les
add
in
jbe
xor
dec
rcr
add
das
nop
xchg
fadds
cmp
inc
loopne
lret
xchg
jmp
lods
mov
arpl
xchg
jmp
sbb
lret
rclb
xor
jo
fdivrp
dec
xor
jl
in
leave
jne
popf
push
sub
mov
popa
cmc
div
sahf
les
pop
mov
dec
arpl
mov
sti
dec
ret
inc
xchg
xor
cmpsl
inc
cmp
xchg
subb
pop
sbb
movsl
gs
mov
js
jmp
sub
aas
jns
pop
pop
mov
pop
push
shll
fidivs
push
push
jbe
cs
rolb
cld
clc
rcrl
decb
mov
xor
xchg
pop
cs
inc
dec
push
pop
sbb
decl
nop
cwtl
inc
adc
or
sbb
sub
lcall
test
push
and
inc
mov
sbb
fsubrp
push
jae
dec
sti
lock
shlb
push
mov
icebp
dec
mov
xchg
add
js
pop
std
in
sbb
sub
xchg
je
jecxz
cmp
lcall
mov
loopnew
xlat
sbb
dec
inc
sti
ja
ljmp
pop
out
xchg
lock
lahf
stos
je
adcb
xor
inc
cmp
inc
scas
inc
xchg
lods
outsl
mov
pusha
pop
fwait
mov
mov
lahf
lods
in
repnz
jg
mov
das
mov
mov
mov
and
mov
pop
adc
incb
sahf
or
aad
adc
outsl
sub
pop
insb
lods
lock
fwait
mov
in
and
cmp
sub
insb
cmp
sub
xor
inc
push
jno
xchg
mov
mov
xor
mov
fstps
lcall
sbb
lahf
sarl
pop
jg
cmp
jg
mov
mov
pop
in
daa
sti
add
mov
movsl
fdivs
in
rorl
and
xchg
inc
push
out
jge
push
push
sbb
mov
js
fsubs
sub
lods
adc
or
int3
sbb
push
ficoms
xor
inc
xchg
jnp
push
mov
mov
mov
nop
add
pop
cmp
mov
das
js
insb
nop
sub
shrl
das
jl
jmp
test
mov
pop
cli
sub
inc
sti
jle
lea
mov
xchg
ss
js
xchg
mov
push
add
ja
mov
adc
sbb
and
insl
out
shl
cmp
and
cmp
mov
ss
cmp
test
push
jno
and
out
dec
mov
ss
cwtl
dec
int3
mov
sarb
sti
and
mov
lock
sahf
out
push
dec
lret
stos
jp
mov
push
cs
addr16
sub
xchg
fstpt
adc
push
bound
sbb
daa
sbb
xchg
test
xchg
push
int3
and
jg
add
xchg
sub
inc
stos
push
or
ss
ficoml
xchg
outsb
sbb
sbb
int3
subl
hlt
push
pushf
fdivrp
aad
pop
test
icebp
pop
push
sub
pop
or
xchg
fildll
repnz
cmpsl
stc
xchg
lret
stc
dec
jmp
jmp
stos
dec
dec
ret
imul
imul
hlt
cltd
dec
aaa
jl,pt
sub
sbb
into
mov
and
xchg
pop
add
hlt
add
stos
sti
js
push
cmp
aaa
pop
scas
mov
pop
aas
dec
jle
push
or
sub
pop
test
push
mov
movsl
dec
sub
les
pop
cmc
popf
in
out
xchg
push
jecxz
pop
cltd
stos
pop
ja
jle
fwait
les
xchg
pop
pop
aad
lods
jle
jp
xchg
stc
sti
popf
es
adc
test
xor
inc
cmp
je
in
jnp
and
popa
jle
scas
mov
shl
add
sbb
dec
inc
aaa
xor
cs
fcomp
popf
pop
jge
xchg
repnz
orl
sarl
daa
jp
bound
movsb
mov
fists
icebp
test
imull
add
cmp
inc
adc
inc
xor
in
inc
out
jo
jnp
call
rcll
lret
xor
roll
jns
insb
aas
movl
leave
enter
mov
out
aas
sbb
sbb
dec
lds
mov
xor
jno
jp
jo
in
xor
fldt
dec
test
pop
xchg
stc
ds
or
cmp
bound
fwait
shll
in
out
divb
xchg
and
adc
lret
fcoml
cwtl
mov
clc
push
xor
inc
adc
aam
and
mov
loop
jo
in
and
aad
cmp
ds
mov
mov
add
bndldx
aad
lret
insl
sub
inc
xchg
movsl
inc
stos
inc
mov
aad
and
mov
dec
adc
je
sub
adc
sub
js
into
pop
push
push
lds
mov
test
scas
inc
scas
push
sbbb
cmp
mov
push
cmc
or
or
fdivr
mov
pop
pop
mov
jo
fs
dec
mov
xchg
je
jb
lods
add
loopne
inc
cmp
add
movsl
dec
aaa
jae
xchg
pushf
lret
int3
cmp
cmp
mov
sbb
xor
roll
lahf
ja
inc
jne
mov
cmpsb
test
sahf
xchg
lahf
jl
inc
add
stos
getsec
mov
out
push
push
cld
fs
jge
ret
mov
daa
bound
push
cltd
out
xchg
mov
fldenv
pop
mov
nop
das
test
mov
ret
lods
stos
pop
xchg
lods
and
repnz
mov
mov
or
lret
jge
mov
xchg
push
or
xor
gs
sbb
mov
sub
cs
std
outsl
push
in
jmp
xchg
out
outsb
shll
adc
sub
dec
movsl
mov
nop
mov
mov
imul
pop
xor
sub
je
lcall
gs
sub
lahf
flds
in
xor
test
sahf
inc
jno
mov
jns
dec
sub
jb
test
jecxz
lods
jno
stos
pop
rclb
mov
cmpsb
mov
shr
rcll
xchg
cmp
out
cmp
adc
leave
pop
xlat
nop
mov
jns
lea
inc
orb
ss
das
xchg
je
leave
inc
pop
lahf
pop
jo
das
sub
in
js
fwait
out
mov
mov
pop
stc
iret
xchg
cmpb
mov
push
in
pop
movsb
divl
mov
cmc
popf
xor
add
mov
stos
push
or
pop
or
mov
mov
adc
dec
adc
aaa
out
ss
negl
clc
cmp
ret
cs
shll
loopne
leave
icebp
dec
mov
idivb
pop
popf
or
pusha
fs
outsb
ljmp
adc
rolb
dec
in
ret
outsb
movsb
push
lods
std
or
int3
dec
fsubl
mov
ss
xor
mov
rcll
xchg
mov
pop
and
adc
popf
xchg
rcl
loop
stc
out
repz
repnz
cwtl
imul
adcb
pop
test
lods
inc
out
jl
testl
and
sbb
clc
imulb
shl
rorl
into
push
fdivrs
pop
mov
pusha
pop
pop
push
xchg
inc
out
sbbl
xchg
dec
cwtl
push
test
cltd
mov
and
push
cmp
adc
cmpsl
add
xchg
iret
pop
dec
jl
js
bound
push
rcll
ret
xchg
scas
ljmp
jno
icebp
jo
es
cmp
daa
lock
imul
cmpsb
push
imul
dec
das
xchg
sbb
sbb
mov
push
inc
imul
xor
push
cmpsb
adc
addr16
std
inc
cmp
inc
xchg
mov
mov
cmp
xchg
sub
je
xchg
inc
lock
roll
and
dec
pushf
mov
fdivr
sbbl
or
jp
daa
fisubrs
repnz
adcb
cmp
mov
imul
test
adc
mov
jb
je
sbbb
jle
fstl
fnstenv
gs
xor
ret
lea
add
xor
jl
cmpsb
rol
xchg
inc
add
int3
xchg
cltd
inc
push
adcb
jmpw
mov
adc
ljmp
call
pop
push
test
movsb
dec
test
xchg
mov
inc
lock
fstpt
xor
dec
mov
jno
pop
jnp
cmp
pop
or
sbb
ss
dec
ljmp
dec
pop
xchg
mov
addr16
lret
push
push
int
in
decl
fsubl
push
mov
mov
test
divl
jp
mov
nop
stos
test
insb
fsubrs
mov
popa
das
lods
movsb
lcall
jns
aam
repz
sbb
rorl
imul
ja
mov
ja
jno
adc
orb
jnp
sbb
cmp
cli
adc
faddl
pusha
in
mov
jbe
test
int3
xchg
pop
mov
repz
ret
data16
cwtl
test
jne
add
pop
push
addr16
shll
dec
sub
mov
cmpl
or
push
test
fcmovnbe
mov
sahf
or
shll
adc
xchg
aas
shll
icebp
lods
push
dec
sub
fs
repnz
call
ja
jns
mov
sub
pop
pop
sahf
fstps
sbb
es
and
sub
in
cmp
lods
jmp
xor
xchg
sbb
fiadds
shrl
jecxz
dec
xchg
lock
push
push
es
mov
data16
sub
out
int
xor
xchg
fnstsw
xchg
xor
pop
daa
push
dec
int
dec
dec
or
and
push
icebp
jnp
out
cwtl
movsl
and
sbb
arpl
int
add
pop
in
mov
sbb
jl
hlt
push
push
movsb
data16
pop
ret
and
push
lods
add
mov
jns
inc
shll
inc
jle
scas
cmp
mov
or
out
jmp
testl
repz
adc
jmp
xchg
xor
das
fcoms
push
repz
xorb
sbb
cs
adc
mov
lea
ret
scas
jle
push
test
cmc
inc
push
pop
xchg
xchg
mov
mov
adcl
bswap
push
add
mov
shrl
imulb
hlt
popa
rclb
popf
and
xor
push
dec
repnz
ja
lea
fs
shl
xchg
sbb
in
into
jns
mov
sub
out
inc
sub
pushf
xor
dec
sar
fs
adc
adcl
and
and
loop
mov
insb
clc
xor
xchg
sbb
push
imul
sti
das
push
leave
xchg
dec
faddp
aad
das
or
int3
add
lret
and
cwtl
ret
insb
xchg
mov
sarl
push
sbb
and
jae
xor
xor
mov
lods
subb
push
inc
enter
jge
xor
dec
fbld
fs
xor
add
mov
icebp
inc
mov
in
dec
or
jl
shll
and
rcrl
xor
push
jecxz
cmc
xlat
xchg
sbb
imul
sbb
cmp
rorb
or
push
stos
jle
notb
cmp
inc
jecxz
movhps
mov
sahf
in
les
stos
test
sub
jl
adc
and
insb
stc
sub
imul
pop
test
mov
outsl
es
xchg
adc
lahf
pop
out
mov
out
mov
add
cld
xor
lahf
or
jbe
pop
jp
das
out
jmp
ficoms
sbb
xor
mov
mov
mov
or
dec
pushf
jne
test
mov
push
and
lret
add
orl
push
add
jae
push
je
lret
aaa
movsl
aad
pop
mov
movsb
pop
mov
aam
cmpsb
int3
lea
xor
pop
rorb
push
out
test
lcall
push
lret
mov
test
mov
jmp
fistpl
xchg
jecxz
ret
xor
xor
mov
mov
and
rorl
imul
inc
testl
push
inc
mov
jbe
pop
loopne
aam
push
adc
scas
adc
pushf
in
sbb
and
call
int
inc
push
mull
xchg
test
xchg
pop
repz
addl
add
dec
xorl
xchg
mov
movsl
gs
pop
test
push
jecxz
scas
pop
aas
fidivl
xchg
loope
in
ret
imul
or
pop
mov
pop
test
sub
cmp
pop
imul
imul
adc
scas
mov
cmc
imul
xchg
push
pop
fsubl
dec
adc
inc
lods
movsb
iret
mov
mov
and
fcompl
mov
add
jns
add
mov
out
mov
jmp
jg
cltd
outsb
dec
adc
lret
mov
imul
in
enter
fisttpll
fcoms
out
sub
mov
mov
xor
sahf
fsts
std
push
sbb
cli
ljmp
push
gs
inc
rcll
sub
cs
mov
push
dec
fwait
cmp
push
xchg
orl
in
xor
scas
mov
push
xor
pop
lea
or
sub
ja
fwait
cmp
add
xor
popf
mov
dec
jg
mov
and
cmp
ljmp
stos
gs
out
imul
addl
xor
xor
jg
ss
or
rorb
cmc
mov
lcall
enter
stos
or
sbb
je
lret
test
add
adc
insb
addl
adc
push
cmp
in
xchg
xor
mulps
jle
inc
repz
imul
pop
add
push
push
push
xor
stc
daa
pop
out
aam
repnz
call
mov
imul
sub
dec
xchg
insb
sarl
addr16
repnz
cs
shrb
xchg
cli
mov
or
pop
sub
xchg
loope
imul
mov
adc
pop
sbb
and
outsb
out
xchg
sub
cwtl
pop
daa
mov
mov
out
fisubrl
pop
rol
fiadds
dec
lods
clc
aaa
sbb
bnd
mov
insb
enter
xor
lds
clc
pop
lret
aas
enter
sbb
mov
dec
push
ret
push
loopne
sub
js
xor
push
or
ds
mov
xlat
cmc
orl
ss
push
test
add
stos
outsb
das
add
pop
movsb
sbb
sub
xor
int3
ja
fwait
sbb
and
cmp
dec
push
pop
sub
in
ljmp
scas
enter
mov
mov
popa
fstpt
bound
roll
or
cld
clc
ljmp
jne
out
jg
mov
cmp
rcr
sub
cmp
ficoms
cmp
cltd
mov
mov
jecxz
mov
enter
sbb
mov
cmp
outsl
adcb
push
pop
xchg
xchg
or
in
and
push
repnz
mov
andb
push
loope
mov
push
pop
sbb
clc
icebp
mov
aas
mov
aam
add
mov
lock
pushf
pop
in
push
xor
pop
cmovo
imul
or
mov
sbb
add
xor
scas
fisubrl
repz
fidivrl
xchg
stos
insl
push
mov
mov
cmpsb
jl
sub
mov
insb
pop
inc
outsb
push
pop
mov
sub
ljmp
loopne
dec
sub
and
cmpsl
inc
inc
sar
fcoms
and
stos
into
sub
or
outsl
and
mov
sbb
repz
xor
rorb
mov
inc
pminsw
ret
js
mov
add
sti
dec
pop
mov
cmp
cli
adc
shld
fnstcw
xor
jns
shl
pop
int
rol
dec
test
int3
jo
xchg
xchg
xchg
int3
mov
push
rolb
imul
in
cmp
jmp
sbb
mov
rcrl
idiv
pop
or
sub
mov
jo
and
scas
iret
ja
add
daa
jl
aam
mov
out
pop
into
outsl
sub
faddl
dec
fwait
sti
pop
imul
xor
push
xor
adc
jecxz
cwtl
jae
cli
and
mov
mov
out
sbb
mov
cld
push
cli
push
mov
insl
lret
mov
jns
adc
ret
dec
sbb
jmp
outsl
out
mov
imul
dec
adc
sbb
ss
or
jb
xor
pop
xchg
jb
hlt
adc
dec
fiaddl
xlat
pop
fnstcw
lock
scas
out
dec
xchg
negb
mov
pop
jl
lea
fsubs
push
mov
cs
leave
fucomp
nop
int
test
adc
jecxz
push
sar
mov
jns
dec
ret
inc
lret
leave
push
mov
dec
dec
idivb
scas
inc
enter
xchg
int3
shll
sti
ljmp
dec
adc
jnp
dec
adc
fdivrp
testb
and
push
clc
mov
jg
ret
pop
sti
inc
pop
loop
push
rcl
cmp
jns
sub
sbb
jle
addr16
cmpsb
outsl
inc
loopne
in
mov
jmp
pusha
push
push
dec
xor
adc
mov
les
call
dec
scas
fildl
cwtl
xchg
call
loopne
mov
into
or
ljmp
lods
mov
std
inc
dec
movsl
pusha
lods
inc
mov
sar
cmpsl
mov
dec
pop
dec
dec
inc
inc
hlt
loopne
dec
movsb
js
sbb
test
xchg
gs
mov
sub
test
jle
xor
movsb
pop
sti
popa
imul
pop
aaa
in
mov
scas
icebp
cltd
pop
out
fwait
xchg
movsb
or
sub
aad
mov
mov
adc
jns
mov
aaa
test
dec
mov
sbbb
sub
icebp
ret
lds
xchg
divb
xor
mov
mov
arpl
jne
sbb
push
push
push
push
push
ja
sahf
inc
inc
push
jmp
add
fisubrs
out
lods
test
jne
fidivrs
popa
sub
or
stc
flds
jge
aad
mov
inc
imul
ret
leave
jb
xlat
and
int3
in
dec
fbld
std
mov
and
jle
inc
push
cmpsb
int
inc
es
inc
mov
out
sbb
pop
xor
add
push
cmc
dec
jg
das
out
xor
ds
mov
adc
je
in
lods
outsb
cmp
mov
int
sub
adc
and
hlt
js
jg
mov
cwtl
push
popa
mov
les
std
testl
ror
sub
sub
sub
pop
xor
mov
and
mov
movsl
inc
in
sbb
sbb
inc
mov
lret
mov
ret
push
inc
popf
sbbl
pushf
out
test
pop
mov
or
push
ljmp
xor
push
push
jge
ss
mov
pusha
clc
cmp
sbb
outsl
in
lret
cmp
mov
dec
push
xchg
nop
cmc
loope
xor
sbb
lods
dec
sbb
push
add
in
pop
and
sub
add
xor
das
xor
in
sti
das
in
dec
xchg
addr16
jge
fwait
dec
sub
outsb
dec
imul
outsl
adc
mov
int3
sbb
dec
in
sub
inc
push
sahf
adc
jl
movsb
mov
xlat
xor
and
test
hlt
loop
ljmp
mov
xchg
aaa
xor
mov
ljmp
ret
mov
dec
jno
out
mov
push
and
fs
shrl
cmp
fildll
jp
ja
push
fstp
mov
mov
outsb
mov
push
subl
mov
push
popf
or
decl
iret
in
mov
fldlg2
iret
jo
js
aad
stos
into
pop
dec
pop
test
cmp
lret
clc
repnz
xchg
push
dec
add
cmp
roll
lcall
hlt
pop
dec
dec
loope
mov
sub
sub
insb
sbb
and
mov
subb
mov
mov
repz
mov
shr
sti
loope
test
cmp
hlt
gs
std
ljmp
mov
clc
lahf
fadd
lods
push
pop
jl
lahf
sub
rclb
inc
lock
inc
in
in
jl
rolb
inc
adc
in
aaa
lock
lods
stc
adc
stos
push
fcomi
imull
mov
dec
jl
out
jge
mov
fldenv
mov
bound
data16
jnp
xlat
in
repnz
pop
push
push
push
aaa
and
sbb
test
inc
scas
shrb
or
push
xchg
jbe
xor
repnz
pusha
call
cmp
jp
xor
ja
cli
jae
and
add
fmul
pop
and
jne
xchg
rcrb
sti
lahf
addr16
cmp
shlb
jno
call
stos
jns
pusha
mov
inc
std
pop
mov
mov
mov
cmp
out
xor
lahf
outsb
adc
mov
test
test
xor
int3
out
mov
cmp
sub
xor
jle
dec
outsl
xlat
test
jae
fmul
loope
and
pop
sbb
fidivrl
repnz
jbe
movsl
xchg
clc
outsl
popl
sti
sahf
cmp
insb
inc
outsl
aad
and
push
enter
xor
gs
sub
in
dec
dec
jbe
jl
stos
xchg
mov
xchg
lods
in
daa
xor
dec
dec
inc
pop
pop
dec
aam
mov
inc
dec
sahf
pop
sbb
and
inc
inc
lds
jg
hlt
and
stos
pop
xchg
adc
sbb
lods
scas
push
sub
fcmovbe
insl
xor
mov
andl
mov
fwait
shlb
or
sbb
mov
pop
mov
jo
popa
mov
int3
mulb
sbb
push
outsl
rol
cli
mov
daa
push
mul
jo
stos
push
mov
sub
xlat
cld
xchg
mov
and
mov
inc
sbb
sub
out
inc
int3
ret
mov
jae
sbb
cmp
pop
loope
pushf
gs
outsb
sti
cld
xchg
test
jmp
jl
or
sub
inc
movsb
jl
ret
jg
lcall
repz
mov
int
pusha
mov
fisubl
jle
iret
leave
add
push
jmp
sub
cmp
imul
orb
mov
pop
fldenv
xor
or
pop
int3
in
aam
push
call
ds
push
add
pop
jne
ja
xor
scas
pusha
cmp
and
push
dec
dec
stc
test
out
das
sbb
xlat
and
or
mov
sahf
fsubr
out
and
shl
orl
lcall
test
mov
nop
push
nop
test
mov
iret
out
sbb
jp
lods
test
inc
pop
and
push
andl
push
ret
dec
inc
and
and
push
test
xchg
push
mov
xchg
clc
mov
mov
pushf
add
pop
mov
mov
cmc
nop
jne
mov
js
sbb
repnz
mov
mov
sub
movsb
mov
cld
adc
and
sarb
sbb
cmpsb
in
addr16
std
adc
cmpsl
pop
out
addl
sub
mov
outsl
jo
out
cwtl
fbstp
mov
cmpsl
cmpsl
clc
aam
cltd
inc
mov
cmp
data16
pop
mov
pop
hlt
inc
fcoms
in
aam
pop
sbb
jbe
xor
hlt
rorl
aad
call
inc
xchg
das
mov
cmpsb
jl
mov
imul
pop
push
clc
aam
jae
mov
clc
ds
int3
lock
cld
inc
cwtl
xchg
dec
and
test
mov
je
jge
fdivrs
not
std
push
xchg
xchg
fldcw
xchg
aaa
cmp
scas
test
inc
mov
mov
mov
add
sub
inc
cwtl
jne
js
pop
cld
jo
push
sarb
mul
mov
mov
add
rolb
testl
mov
adc
loopne
mov
sub
and
mov
call
cmp
jae
push
cmc
stc
shrl
in
or
repz
nop
inc
jl
add
push
mov
xchg
sub
mov
cs
push
dec
push
decl
mov
push
das
lahf
mov
aas
add
je
inc
and
fistpll
cmp
cmp
sarl
jl
pop
sahf
mov
aam
mov
xlat
ja
psubusb
adc
loop
pusha
sahf
inc
sub
cmpsb
push
xchg
lahf
mov
dec
mov
jbe
push
lods
mov
mov
adc
mov
add
je
push
nop
and
pushf
mov
std
mov
sbb
icebp
enter
fidivl
inc
shr
sahf
mov
jne
inc
aad
add
cld
push
popf
test
sbb
mov
dec
and
push
jp
or
gs
dec
xchg
test
out
jmp
xchg
mov
mov
dec
test
mov
sbb
lret
xor
push
pop
je
inc
pusha
push
or
pushf
xchg
fimuls
mov
dec
mov
std
sti
mov
adc
aaa
faddl
mov
dec
lret
es
hlt
pop
adc
mov
sbb
in
mov
insl
adc
sbb
mov
jbe
sbb
and
les
push
xor
xchg
shrb
pop
push
inc
mov
mov
or
cwtl
xchg
and
mov
cmp
jecxz
test
mov
sbb
daa
cmp
and
cmp
sbb
xchg
aad
nop
jmp
or
sub
xchg
mov
dec
fiadds
cmp
push
dec
jbe
fistpll
inc
dec
sub
repnz
mov
mov
lods
pop
arpl
xor
push
xchg
jmp
testb
ret
mov
jge
in
cwtl
fnsave
push
mov
aaa
cmpsl
xchg
loope
jbe
dec
push
push
popf
pop
mov
jnp
mov
test
mov
sbb
loopne
sub
movsb
loopne
jb
call
int
sub
push
pop
rol
pop
shlb
add
imul
mov
xor
ret
test
adc
push
test
sahf
aas
mov
leave
pop
stos
push
sbb
sub
inc
ret
jl
sbb
jb
fldl
stc
pop
xor
push
push
dec
popa
lods
mov
lods
pop
jbe
scas
dec
cltd
fwait
mov
xchg
jmp
pop
aaa
cmc
and
lods
cmp
inc
fnstenv
pop
xchg
fadds
sub
xor
cwtl
cmp
cmp
and
hlt
mov
int
jns
or
jge
out
dec
inc
sbb
mov
or
push
aad
mov
pop
lods
jmp
in
add
sbb
je
inc
mov
rol
sub
in
adc
inc
or
sub
mov
xchg
sub
mov
les
scas
jl
mov
inc
pop
adc
shrb
imul
imul
xchg
xchg
cmp
imul
dec
cld
out
pop
or
or
inc
mov
daa
call
sbb
or
add
rolb
das
ja
jns
out
lea
push
cmc
xchg
ret
movsb
fsts
insb
jecxz
cld
rcr
out
xlat
cmp
rolb
mov
adcl
xor
rolb
ret
mov
enter
jbe
insb
sbb
mov
stos
add
dec
push
pop
add
mov
out
out
leave
jg
outsl
dec
lret
ljmp
cmpsb
jl
dec
loop
jp
popa
add
lcall
cltd
sub
xchg
icebp
xchg
popf
fisubrs
out
mov
cld
add
inc
jne
sbb
pop
fbstp
pusha
inc
imul
mov
rclb
int
mov
out
push
sub
rcrl
movb
pop
pop
call
mov
or
icebp
aas
fisttpl
jp
int
mov
in
cmp
jns
or
dec
popa
outsl
jge
sbb
mov
pop
movsl
repnz
aas
mov
mov
mov
mov
jnp
cmp
push
ret
mov
mov
cmpb
outsl
or
pop
int
xchg
test
jno
aas
dec
divb
pop
loopne
popf
lret
bound
push
inc
pop
mov
test
lods
fdivp
enter
mov
pushf
outsl
push
fs
pusha
rorb
aam
outsb
add
ret
pop
add
lods
fadds
hlt
aam
jl
das
jecxz
repz
mov
fiaddl
xor
mov
jb
inc
repz
xchg
sbb
xchg
ret
cmp
imul
push
add
jno
add
dec
sbb
sub
jns
dec
loope
mov
sub
mov
scas
add
xchg
pop
mov
inc
or
lea
xchg
cmp
cmp
push
jp
stc
lret
and
int
out
mov
popa
dec
inc
imulb
fnstcw
and
sti
ljmp
cwtl
fucomi
xorb
pop
xor
sbb
icebp
ret
cwtl
xchg
xor
orl
dec
pop
xor
adc
lods
aad
add
jb
lea
mov
aaa
push
repz
fstl
sbb
cmp
sbb
xchg
and
dec
or
leave
xlat
cmpsb
pop
sub
stos
push
mov
mov
cmpb
pop
add
stos
mov
aam
fldt
sub
movsb
pop
fnsave
iret
subl
xlat
insb
aad
loopne
fsubrs
repnz
out
jno
dec
fdivl
xor
jns,pt
fcmovnb
insl
out
mov
lret
or
in
and
iret
enter
std
bnd
sub
jnp
fisubrl
mov
inc
imull
mov
repnz
call
pushf
stos
jle
jmp
cmp
inc
leave
out
inc
cmp
testb
and
cmc
cmp
ss
sub
lds
xor
lret
mov
or
ret
movsl
pop
jae
repz
gs
add
sub
dec
mov
push
or
push
insb
push
sbb
push
cmp
sub
hlt
test
ljmp
aas
ljmp
inc
mov
rcr
or
test
pusha
push
cmp
lods
cli
xor
xor
arpl
sbb
jge
nop
loopne
cwtl
jbe
sahf
jnp
xchg
ret
dec
in
push
lea
das
repnz
ror
xor
movsb
loop
fimuls
push
dec
faddl
fbstp
ret
xor
adc
jns
jae
es
int
xor
inc
imul
jmp
hlt
mov
xor
addr16
clc
mov
lock
cmp
stos
shlb
hlt
cmpsl
ret
mov
and
pop
dec
pop
mov
rolb
or
cld
jae
and
in
loopne
push
js
lods
mov
gs
adcl
shll
cmp
push
mov
fsubrs
addb
movsb
adc
leave
lods
inc
mov
imul
lods
cmpsb
or
imulb
adc
xchg
movsl
lds
nop
push
lea
mov
shl
jle
outsb
mov
push
and
fadds
scas
push
out
insb
stc
aas
add
jnp
loop
and
testb
mov
aam
xchg
sub
lcall
testb
push
repz
icebp
cmpsl
test
sub
out
pushf
pop
enter
xlat
fcmovne
movsb
cmp
xchg
inc
divb
lds
xchg
push
nop
or
or
add
and
add
test
fdivrs
sbb
lahf
data16
push
xchg
xor
adc
out
dec
cwtl
xor
mov
cmp
ds
add
or
loopne
ja
xchg
jp
stc
sarl
lcall
in
push
out
push
cmp
pushf
out
imul
xor
mov
jo
inc
gs
icebp
and
arpl
test
xlat
pop
int3
jmp
loop
sbb
or
xor
shll
push
scas
iret
imul
in
stos
add
enter
mov
cli
out
call
mov
scas
jecxz
and
and
lea
aad
push
scas
add
test
cmc
pusha
jns
hlt
push
movsl
mov
ror
fcom
enter
outsb
test
pop
test
mov
sbb
mov
bound
xchg
test
call
dec
sub
bound
jmp
pushw
nop
lea
xchg
sub
xchg
in
jns
lock
cltd
nop
stc
inc
jge
jmp
out
ret
lret
ret
push
mov
pop
dec
mov
xor
adc
idivl
mov
cmp
cmc
je
push
xchg
inc
sysexit
mov
push
inc
mov
repz
into
push
mov
je
aas
xorl
xchg
xchg
pop
fiadds
sbb
filds
mov
insb
ds
lahf
jnp
xlat
shll
out
mov
fidivl
pop
add
iret
fdivr
daa
call
popf
add
insb
jae
push
mov
pop
not
rcl
addb
pop
xor
or
ds
push
loope
hlt
hlt
lods
enter
mov
gs
lret
clc
or
push
out
and
jo
jp
idivb
cmpsb
mov
pop
xor
jmp
movsl
push
jb
adc
mov
lcall
stos
cld
std
mov
mov
iret
mov
jno
scas
jecxz
out
lea
sbb
pop
jg
inc
imul
loopne
adcl
filds
sar
out
fiadds
test
ret
ret
popa
lret
pop
movsl
adc
outsl
inc
jmp
xchg
jecxz
pushf
dec
popa
dec
fcomp
add
fst
push
xrelease
mov
popf
mov
hlt
pop
imul
ja
add
shlb
shll
xor
cltd
cwtl
dec
repz
je
hlt
das
lds
xchg
mov
test
xchg
inc
sbb
clc
scas
cmp
add
xor
cmp
repz
or
xchg
sbb
mov
popa
jne
pop
lret
push
pop
sbb
clc
mov
sbb
and
stos
pop
cmp
movsl
mov
dec
pusha
stc
sub
lods
adc
sub
fwait
sbb
leave
mov
adc
lahf
mov
pop
in
mov
lea
dec
das
in
cmp
inc
xchg
fistps
les
clc
sbbb
lcall
cmc
sbb
mov
sbb
adc
cmp
mov
shrb
pop
pop
xor
mov
loope
sub
ds
movsl
pop
sub
sub
rcll
mov
pusha
xchg
fwait
push
and
pop
cltd
pusha
xchg
ds
xlat
scas
ss
das
inc
lods
add
fisubs
xor
adc
xchg
jns
jmp
xor
popa
or
outsb
sti
fwait
mov
aad
pushl
or
dec
fucomp
add
ret
push
daa
fidivs
cmp
int
adc
addr16
push
cmpsl
cli
leave
clc
call
add
cmp
add
xchg
dec
push
ja
xchg
out
pop
add
in
jp
lods
add
mov
mov
out
add
in
pop
mov
lret
or
fdivrl
add
les
cmp
int
pop
jl
sbb
jb
sbb
push
mov
xchg
push
mov
test
push
cmpsb
xchg
in
and
or
lcall
jp
xchg
push
mov
push
icebp
pop
adc
xor
ret
and
jle
loopne
dec
push
push
stos
mov
je
fstl
rorb
mov
aad
mov
push
jbe
sbb
lret
int3
inc
inc
je
mov
lret
inc
imul
mov
sbb
or
mov
jbe
mov
mov
jl
std
mov
xchg
lods
in
mov
add
call
stc
mov
cmpsb
ret
push
jns
addr16
mov
cmp
enter
mov
jge
into
sub
imulb
imul
inc
dec
testl
xor
test
jp
jo
sub
imul
push
test
sub
inc
mov
repz
rorb
and
aas
int3
jno
inc
movsb
jmp
mov
and
loop
in
mov
sarb
ljmp
add
mov
lock
cmp
aas
sbb
adc
mov
push
sbb
pop
xor
loop
loopne
jmp
pusha
adc
sti
cs
sarb
jg
push
add
lahf
lods
pop
jo
xchg
mov
outsl
pusha
pop
cmp
xchg
dec
push
sbb
sbb
sub
dec
push
test
pushf
sbb
out
lea
je
divl
mov
inc
mov
mov
push
not
jl
push
mov
lcall
iret
dec
test
scas
movsl
jnp
sub
cmp
jg
fs
loop
test
mov
pop
inc
shlb
cltd
jae
arpl
sub
lock
pop
jp
shr
stos
shll
mov
xchg
insl
and
movsl
nop
xchg
lea
add
jno
inc
out
adc
jno
scas
jne
push
dec
push
lock
mov
adc
shl
insb
pop
push
pop
lds
xchg
in
lcall
cmp
push
push
sbb
xchg
cmp
push
ret
testl
ds
lahf
fmull
mov
cmp
push
add
push
jl
cmpsl
add
pop
sbb
mov
jg
mov
adc
push
jecxz
fisttpl
out
sub
scas
iret
add
sbbl
cmpsl
test
sub
adc
aad
add
sbb
pop
stc
mov
std
push
outsl
pushf
jb
repnz
movsl
jge
push
stc
in
ret
push
repz
pop
pop
mov
fwait
call
imul
adc
in
mov
test
sub
sti
cli
dec
xchg
mov
adc
data16
pop
sub
pop
das
mov
cmp
fildll
pop
sub
leave
icebp
scas
push
leave
repz
jno,pn
test
xlat
fistl
fiadds
loope
sub
push
nop
pop
addr16
es
mov
push
dec
aam
or
cmc
leave
xchg
adc
jmp
push
add
dec
insb
cmp
cmp
pop
or
cmpb
or
xlat
mov
pop
je
xchg
icebp
out
arpl
decl
insb
rcrl
mov
sti
ja
mov
sbb
mov
cmpsb
movsl
icebp
dec
bound
aad
mov
jge
cmpsb
nop
cltd
jl
cltd
push
push
icebp
sbb
dec
outsl
mov
dec
cmp
dec
nop
jge
std
adc
lea
icebp
test
mov
int3
imul
shll
or
std
mov
lcall
push
cmpsb
scas
bound
call
or
push
pushf
popf
mov
adc
cmp
loope
add
jl
rcrb
adcb
repnz
or
leave
or
mov
dec
adcl
aaa
mov
inc
daa
or
xchg
sbb
mov
jle
xchg
movhps
dec
pop
pop
adc
mov
adc
ja
inc
pushf
mov
mov
and
mov
push
dec
mov
idivl
cmpsl
cmpsb
adc
push
imul
aam
fldl
outsl
mov
fisttpll
ret
sub
lods
stos
or
add
push
stc
into
sub
loop
xor
pushf
mov
into
test
aam
push
and
repz
push
jnp
sub
pop
jnp
mov
imul
pop
cmp
add
loope
mov
dec
cli
mov
sbb
inc
xchg
fidivl
jg
imulb
ljmp
xor
adc
mov
divl
int3
out
xchg
sub
and
ss
into
or
test
or
bound
mov
push
aas
xor
popl
cmp
push
sub
ss
add
mov
inc
hlt
sub
arpl
cmp
daa
adc
repnz
int3
aam
cltd
xchg
fwait
adc
loop
cmp
push
faddl
jl
jns
push
push
mov
add
jne
aaa
mov
cmp
outsb
xchg
hlt
pop
inc
and
idivl
shl
scas
inc
int
or
adc
lret
push
fistpl
pop
or
inc
mov
and
jns
andl
popf
lods
fistps
pop
add
popf
cmp
xchg
lahf
call
shl
lcall
std
jo
push
rolb
push
xor
das
in
fsubrs
mov
scas
add
mov
pop
iret
jo
je
lds
sub
sub
xor
jl
xor
icebp
pop
or
stos
push
pop
insb
call
inc
lret
xchg
in
lods
loope
jg
cmp
xchg
sbb
sbb
mov
scas
test
sub
add
testb
mov
jno
jb
adc
jl
jle
fidivrs
fmuls
movsb
out
std
mov
fistpll
clc
jb
pop
pop
lock
mov
xor
ja
xor
jp
int
imul
aam
sub
mov
jne
push
cli
pop
push
lods
ficoml
add
and
jnp
xchg
out
xchg
or
lea
in
iret
cmp
mov
movl
dec
xchg
jmp
or
dec
jne
xor
in
mov
subl
repnz
ficomps
popf
mov
mov
fcoml
fistpll
aaa
jne
mov
loope
shlb
fldenv
cs
xchg
jmp
movsl
in
or
jecxz
mov
jne
sbb
cli
xlat
push
data16
sbb
aas
inc
int3
ret
cmp
out
sub
dec
xchg
sbbb
fisubrl
mov
fwait
into
sub
dec
mov
out
inc
inc
push
push
addb
xor
dec
cltd
inc
cld
fcomp
shl
lret
adc
adc
mov
iret
fwait
ljmp
icebp
add
cmpsb
xchg
lcall
rcll
popa
add
jp
xchg
lret
call
inc
aas
iret
inc
pop
in
jmp
hlt
sti
cmp
out
popf
mov
fidivrs
sub
dec
lret
ja
pop
push
ror
jo
sar
mov
inc
jl
push
adc
bound
xchg
cmp
jg
int3
and
arpl
pop
stos
sbb
fisttps
lds
insl
sarb
jno
adc
fnsave
lods
or
iret
fs
inc
pop
scas
lret
mov
xor
insl
test
mov
sti
repnz
mov
nop
in
sbb
jb
push
scas
cltd
lret
fsubrs
je
xchg
lods
lods
mov
jne
sbb
and
fld
rol
in
sub
in
lret
fimuls
add
scas
and
int3
movsb
and
push
adc
pusha
in
stos
movsl
push
aad
in
movsb
pop
lods
jl
mov
out
inc
mov
imul
pop
mov
adc
repnz
es
test
in
fimuls
sbb
xchg
mov
ljmp
frstor
aaa
mov
jmp
imul
insl
push
xor
mov
push
add
ja
add
fnstsw
stos
mov
xchg
out
xor
test
push
cld
jne
adc
das
rcr
inc
shl
sub
out
ficoms
mov
pop
cmp
jle
add
push
adc
jl
mov
xchg
rorl
cmp
and
std
popf
lods
rolb
sub
dec
pop
mov
rorl
loopne
mov
aam
mov
add
push
iret
xor
popf
pop
dec
lcall
pop
push
inc
mov
vpshab
mov
int3
addr16
movsb
stos
push
xor
scas
or
push
insb
scas
addr16
jmp
mov
movsb
cmpsl
inc
mul
iret
sar
outsl
test
test
out
and
push
xor
addr16
dec
inc
stos
outsb
mov
out
mov
push
cld
or
pop
or
or
push
fsubrl
xchg
pop
mov
shlb
aas
repnz
stos
jmp
inc
pop
inc
dec
hlt
out
ja
leave
ror
mov
push
mov
jae
sahf
clc
fabs
outsb
lock
movsl
xchg
push
scas
repz
inc
and
stc
and
insb
notl
inc
cld
and
jmp
imull
add
add
decb
cmp
pop
lea
fidivl
negb
out
popf
mov
lods
jmp
jmp
cmp
mov
inc
pop
inc
movsl
cmc
or
mov
test
test
mov
lock
xchg
mov
in
jge
in
dec
outsb
and
adc
lret
jge
mov
nop
ss
mov
mov
push
decl
mov
pop
or
add
add
pop
scas
cmp
jp
movhps
fwait
sbb
adc
data16
repz
pop
add
adc
test
icebp
popa
mov
loope
or
fsubl
loope
lret
int3
mov
push
and
cwtl
aad
aad
imul
pop
loopne
lods
inc
subb
or
push
cmp
adc
std
inc
bound
mov
xchg
jg
pop
negb
sbb
mov
int
popf
push
cwtl
adc
sbb
or
cmp
sub
jo
sub
and
scas
inc
add
ja
movsb
xchg
mov
mov
inc
xchg
sub
xorb
dec
in
js
xchg
fsubrl
cmp
xchg
dec
aaa
ljmp
in
mov
dec
cmp
cmpsb
sub
dec
scas
fldenv
or
out
cwtl
cmp
loop
add
insl
addr16
int
das
sbb
imul
xchg
outsl
pop
jle
xor
dec
loop
cmp
and
xchg
insl
or
rcll
mov
mov
xor
mov
shlb
mov
fldenv
scas
sbb
lock
iret
jae
stc
sbb
int
xlat
adc
mov
cld
mov
mov
xchg
mov
and
inc
es
fprem1
add
mov
push
xorl
ret
fisubrl
pop
outsl
movsl
repz
loopne
daa
or
mov
lods
dec
std
cwtl
lods
dec
sub
lret
fisubrl
fists
out
or
mov
inc
xor
movsl
scas
in
rclb
aas
lods
xor
or
sbb
fistpll
jmp
sbb
or
sub
push
dec
xlat
sub
rcrb
icebp
fs
cmp
idivb
xor
push
push
cmp
aam
into
jno
popa
dec
fldenv
mov
ss
xchg
jne
cli
inc
aam
mov
dec
cmpsb
adc
int3
pusha
push
out
pop
mov
scas
cld
call
inc
cmp
insl
lock
popl
int3
jl
jns
adc
pop
xor
xorb
and
ret
mov
shll
pop
imul
lock
mov
fdivr
es
inc
inc
xlat
popf
mov
xor
cmp
dec
sub
mov
push
rolb
test
add
mul
cmp
add
dec
cmova
sub
sbb
in
outsb
or
mov
popf
add
dec
int3
mov
and
cmp
stos
mov
xchg
mov
inc
and
ja
aad
mov
in
in
lret
ret
sarl
sahf
add
push
add
mov
jmp
inc
and
imul
jg
test
fsubs
cmp
imul
daa
jmp
mov
mov
insb
sbb
test
mov
out
xlat
in
pop
mov
rorb
inc
fwait
mov
ret
sub
popa
icebp
inc
xchg
jnp
xchg
xchg
rcrl
fbld
pusha
les
adc
jae
pop
es
adc
aad
cmpsl
cmc
mov
jg
out
dec
mov
mov
adc
pushw
add
int3
adc
xor
dec
lock
add
adc
shll
inc
xor
in
jb
xor
push
dec
jg
mov
ud1
xchg
pop
std
push
call
push
fildll
andl
xchg
sub
push
mov
movsb
and
push
fs
push
jnp
scas
inc
mov
pop
dec
imul
jge
add
add
xchg
jp
sub
and
aaa
adc
dec
jg
scas
jle
adc
sti
std
lcall
adc
xchg
mov
or
cmp
cmc
inc
in
cmp
scas
add
mov
add
lock
test
push
aas
push
jns
mov
shll
aad
xchg
icebp
out
loope
sub
pop
movsb
pusha
mov
pop
andl
push
loop
inc
adc
int
sbb
loopne
cltd
movsl
sub
imul
jge
push
jge
dec
in
xlat
push
fmul
jge
lret
adc
lahf
jmp
push
leave
mov
enter
push
pop
or
movsb
push
repnz
into
jle
fistps
mov
ss
or
jae
mov
xchg
lea
pop
ret
mov
icebp
and
or
insb
popf
fidivl
sub
and
rorb
sti
mov
cmp
fwait
iret
addl
iret
out
and
popl
add
aam
aas
mov
push
in
outsb
mov
movsb
xor
in
jbe
aas
sahf
xchg
ret
dec
lret
lock
sbb
aas
pop
push
ljmp
movsl
add
adc
cld
nop
mov
imul
into
loopne
repnz
jmp
lds
push
cmp
subb
push
cmp
fcoml
add
inc
das
int3
repnz
push
xor
xchg
stc
out
popa
xor
sahf
inc
pop
and
and
ljmp
movsb
jns
jne
mov
rcrb
cs
movsb
fwait
test
push
lods
xchg
add
pop
les
fs
jg
mov
es
or
xchg
ljmp
idiv
and
pop
push
lret
sbb
in
jecxz
jmp
push
cwtl
adc
mov
imul
or
bswap
cmp
jne
or
mov
addr16
mov
fidivs
das
mov
add
leave
in
fcomp
popf
or
push
orb
mov
push
adc
adc
stc
jg
scas
jle
leave
push
out
les
and
lods
divl
insl
das
fbstp
imull
cli
sub
dec
mov
lods
xor
and
jp
push
sbb
and
hlt
add
sub
xor
sbb
bound
jg
mov
in
aas
rcrb
inc
pop
rclb
and
repz
loop
jl
xlat
xchg
dec
les
arpl
and
adc
in
push
aad
push
dec
inc
fiaddl
lahf
pop
fstps
sbb
mov
mov
xchg
stos
loope
xor
cmpb
jae
shl
push
ret
jp
dec
mov
xchg
mov
fnstcw
fsub
xchg
dec
push
mov
incl
jmp
push
imulb
in
arpl
xlat
iret
fistpll
fisttpl
out
push
call
xchg
std
sbb
in
mov
xchg
lea
adc
dec
outsl
js
ret
dec
mov
fnsave
test
frstor
cmc
ret
jb
ss
add
inc
testl
sub
cmp
push
dec
daa
dec
push
and
ljmp
adc
test
cmp
mov
xchg
dec
mov
cli
push
adc
rolb
add
lret
ret
in
arpl
mov
movsl
lahf
fwait
into
or
pop
mov
loopne
jns
inc
lret
ljmp
je
test
add
cmpsb
outsb
jns
push
in
lret
out
pop
ud1
ret
js
add
dec
mov
inc
pop
call
xor
lods
mov
movsb
int
push
out
fwait
xchg
dec
pop
pop
add
outsb
jb
fwait
mov
push
in
ljmp
into
inc
jb
mov
mov
add
dec
adc
mov
out
loop
cli
cmp
scas
or
cmc
mov
dec
push
jg
cmpb
hlt
fucomp
pushf
and
jbe
sarb
sbb
mov
arpl
ljmp
inc
imul
pushf
in
ja
xchg
mov
and
and
mov
insl
or
dec
fadds
insl
test
push
xchg
mov
add
mov
push
int3
aaa
sbb
add
push
and
cmp
xchg
jecxz
mov
and
lods
cmp
jns
fs
xor
xorb
mov
shll
sub
inc
add
inc
rclb
fcom
and
jp
loopne
inc
adc
ret
inc
aam
mov
pop
loop
testl
aas
sub
mov
sarb
cli
jl
pop
ret
mov
repnz
adc
xchg
ffreep
sbb
sbb
js
int3
and
jge
insb
xor
and
faddl
jb
mov
dec
push
push
fsts
adc
jnp
cmp
jae
xchg
test
outsb
rorb
jge
and
pop
pop
jae
mov
in
stos
lcall
stos
das
inc
cli
jb
popf
xor
sbbl
mov
ret
or
pop
and
push
mov
into
scas
cmp
sahf
push
jnp
fldl
push
inc
pop
call
fadd
jmp
pop
push
pop
fwait
and
sbb
sbb
mov
add
mov
jnp
inc
icebp
int
mov
aas
mov
lds
sub
clc
and
cmp
dec
cld
movsb
adc
mov
adc
mov
outsl
mov
int
adc
dec
pushl
xchg
push
icebp
loope
push
cmp
test
dec
cs
cld
adc
stos
les
ds
inc
push
es
dec
ficoms
mov
xor
andl
push
xchg
cltd
push
cwtl
rcll
and
mov
outsl
push
cmc
cli
add
pop
mov
js
scas
jns
out
les
addr16
jnp
pusha
arpl
adc
fldlg2
sahf
jns
pop
or
cs
push
fbstp
adc
mov
aas
adc
dec
pop
jnp
mov
fcmove
mov
out
fcompl
movsb
fcomps
test
sub
mov
repnz
lret
ficomps
fsubs
mov
out
stos
shlb
adc
mov
xchg
cli
sbb
sub
cmp
pop
lea
stos
add
test
and
sub
push
mov
repnz
gs
fadds
sti
out
jp
lahf
jecxz
inc
adc
cmp
pop
lea
cwtl
sub
in
xchg
mov
sar
lea
inc
movsl
sbb
vcmpeq_osss
cmp
jl
ds
add
fwait
mov
lods
fwait
xchg
inc
movsb
sub
ret
add
mov
add
inc
in
leave
xor
xor
mov
daa
xor
push
push
in
cwtl
sub
mov
cmp
cltd
push
fst
in
mov
mov
push
xchg
add
iret
dec
push
dec
js
stos
mov
test
loopne
pop
xor
fsubs
inc
sub
into
into
in
inc
sbb
jmp
out
pop
mov
cmpsb
imul
mov
push
or
jmp
mov
dec
aad
cld
mov
mov
mov
sbb
cli
xor
push
fdivrs
nop
jg
xor
push
pop
cmp
in
popf
in
cmp
loope
daa
xchg
xchg
fstl
test
pusha
add
mov
push
les
imul
sub
popa
outsb
stc
aam
dec
fildll
gs
imul
dec
or
mov
lea
xorl
andl
or
add
adc
dec
xchg
fisubs
lea
mov
arpl
or
bound
mov
ljmp
jns
lahf
mov
popf
jp
fnstenv
sbb
sbb
sbb
cvtpi2ps
pop
sub
add
xor
out
data16
cmp
mov
js
jbe
movsl
idivl
ds
mov
packssdw
add
lret
xchg
aad
bnd
sarb
xor
cli
adc
dec
mov
mov
push
jb
dec
loop
lret
mov
mov
cmpl
test
cwtl
jl
mov
sbb
in
clc
jns
push
jecxz
fildll
jb
xchg
push
inc
push
push
xor
stos
xor
pop
sti
adc
daa
mov
leave
in
fwait
inc
test
jbe
stos
pop
lods
sub
inc
push
and
pop
xor
in
push
sahf
and
fsub
xchg
add
bound
insl
push
fimull
sub
xor
adc
mov
std
aas
movl
jne
and
in
or
sub
and
cmp
push
rorl
pop
cld
jno
xorl
mov
in
mov
das
mov
xor
mov
jecxz
sti
je
push
rolb
mov
xchg
loop
or
adc
sbb
sub
ret
xor
push
clc
sub
lret
or
ss
shlb
mov
xchg
aad
movsb
daa
lahf
das
cmc
or
sahf
xchg
pop
or
add
cmp
lcall
pop
aad
call
mov
sbb
test
inc
call
test
jnp
out
cwtl
mov
ja
ja
add
mov
scas
jne
mov
loopne
mov
out
push
fcmovnu
icebp
pop
pop
mov
iret
inc
sar
inc
mov
xor
mov
enter
lods
and
lds
mov
cmc
shll
lret
fcompl
call
xor
lea
push
mov
jne
ds
loope
ljmp
push
or
sub
sbb
cmp
inc
adc
data16
lret
push
jmp
nop
add
ret
out
in
outsl
movsb
push
into
lcall
push
mov
cltd
xchg
adc
pop
xchg
dec
mov
test
jge
xchg
cmp
call
cmp
jge
dec
sbb
cwtl
int
out
jno
dec
cmp
xorb
jae
sbb
data16
adc
icebp
and
cmp
out
lock
lods
lock
dec
add
sti
jecxz
loope
mov
or
xchg
outsl
neg
std
ret
push
fstps
or
sbb
inc
mov
mov
adc
jecxz
pop
rcll
cmpsb
jecxz
or
rcr
push
cmp
je
mov
pop
ds
push
lcall
std
mov
jno
mov
outsl
in
cli
popf
add
cmpl
aas
xor
arpl
icebp
fnsave
adc
fucom
mov
push
inc
mov
loope
and
mov
pop
rcll
xchg
jns
sbb
idiv
ja
ds
fcompl
xchg
stos
jb
fcmove
negl
sub
xchg
ljmp
mov
xchg
bound
inc
sbb
xor
cltd
push
xlat
mov
std
data16
push
lock
mov
pop
imul
std
inc
xchg
sahf
fidivs
mov
pop
sbb
aam
rcl
test
bound
push
jbe
stc
dec
pop
jb
rolb
sbb
lcall
cmp
cmp
add
adc
mov
stos
repnz
clc
or
or
subb
lods
jmp
cwtl
cmp
mov
out
stos
scas
or
lret
dec
outsb
lahf
into
ret
insb
shlb
fwait
xchg
push
push
test
scas
retw
add
lahf
in
addr16
insb
outsl
push
ret
push
push
out
mov
add
lods
addr16
out
sub
mov
jmp
pop
push
into
adc
fbstp
xlat
jl
cmpsl
cmc
cld
jg
inc
gs
jl
jne
rdtsc
scas
cmp
cs
pop
subb
jl
jmp
mov
data16
popf
jne
test
fidivs
fstl
cltd
jb
mov
cmp
test
jl
add
and
and
mov
xchg
add
lret
push
xor
outsb
fdivrs
sub
rolb
adc
jae
into
pop
insl
push
in
add
popa
mov
enter
fdivs
outsl
js
or
push
push
test
or
dec
sahf
jb
mov
cmp
in
mull
sbb
fs
nop
je
loope
sub
cltd
popf
cmp
mov
cmpsb
and
adc
mov
stos
movsb
fdiv
sbb
jp
and
push
jbe
aaa
loopne
mov
gs
mov
and
jnp
shll
jle
sarb
push
xchg
xchg
js
sti
pop
inc
sbb
test
xchg
popf
sub
roll
pop
push
or
shll
jp
add
or
out
sti
sub
or
fcmovnbe
rcr
xchg
sub
std
mov
push
cwtl
sbb
xor
fwait
xlat
xchg
xor
lock
iret
mov
xchg
dec
mov
outsb
arpl
clc
fldt
orl
lods
shlb
sbb
and
push
add
cmp
or
out
test
and
loope
jp
in
int3
xlat
xchg
sbb
push
fadds
xor
xor
push
mov
ljmp
and
dec
outsb
pop
mov
push
sar
loope
clc
faddl
jb
loopne
adc
dec
pop
adcl
mov
or
data16
cli
loopne
and
sbb
int
cld
cmp
cld
fs
sub
popa
mov
arpl
cli
push
addb
or
sar
dec
test
sub
xchg
sub
bound
ja
fimull
cmp
pop
jae
xor
pop
dec
add
andb
in
xor
dec
out
jmp
and
xchg
adc
bound
push
scas
and
and
push
add
xchg
sbb
cltd
and
in
leave
imul
std
ror
push
xor
rorl
ja
push
nop
out
pop
addr16
add
mov
mov
mov
sbb
sbb
mov
les
mov
nop
sub
leave
out
sbb
outsb
and
es
subl
mov
mov
ret
xchg
rorb
xor
push
xchg
cli
daa
push
or
mov
scas
mov
dec
jb
or
sbb
jge
mov
repnz
in
mov
push
dec
jge
xor
mov
dec
int3
inc
rcr
sarb
arpl
sub
sub
mov
cmp
lret
aam
fimull
or
fiaddl
or
push
xor
fbstp
or
inc
aam
mov
dec
popf
and
adc
aad
mov
sbb
ljmp
add
and
pop
jae
jbe
iret
int3
inc
movl
gs
loope
inc
lret
mov
mov
sub
divps
sbb
xlat
stos
pop
out
jno
pusha
cld
lds
stos
pusha
imul
out
ret
cs
dec
xchg
inc
mov
dec
ds
sbb
lea
dec
out
jae
inc
cmpsl
xor
inc
insl
divb
out
add
xchg
lods
xorl
push
and
shl
inc
mov
and
fists
push
js
inc
jnp
fldt
pop
jp
xor
add
repnz
popf
es
add
lods
int
aad
sbb
in
outsb
or
in
mov
js
dec
inc
sbbl
les
xchg
stos
lahf
dec
andb
sub
xor
ds
mov
jo
and
decb
cli
jmp
std
cld
xor
rorl
xor
mov
adcl
jbe
cmp
jb
ss
dec
in
in
sub
mov
imul
push
mov
hlt
or
mov
pop
fs
pop
stos
fninit
sahf
mov
xchg
arpl
mov
push
inc
jge
lahf
arpl
sub
add
jb
cwtl
adc
insb
mov
lods
fcmovnb
mov
fxch
andb
aaa
fmull
dec
mov
popf
dec
pop
cld
insb
outsl
test
and
hlt
ret
or
mov
shlb
pop
dec
jp
adc
mov
mov
mov
dec
mov
mov
movsl
mov
inc
cltd
push
push
or
loopne
push
mov
push
aad
in
or
xchg
mov
xor
push
inc
call
and
icebp
cwtl
cli
add
rcl
dec
mov
sbb
std
shll
mov
sbbb
push
outsb
sbb
cmc
or
lcall
aad
lods
adc
aas
fwait
out
inc
scas
mov
int3
jge
sub
or
mov
inc
add
push
ret
mov
imul
nop
push
mov
cmp
mov
pop
inc
sub
fsubs
mov
inc
setp
or
sti
jne
cs
stos
mov
cmp
jp
lahf
adc
into
inc
push
push
les
int
insl
mov
es
aaa
cmp
pushf
sti
rcr
jmp
insb
loopne
cmp
fs
cwtl
enter
or
jg
in
test
pop
cmp
lods
xor
inc
jbe
cltd
add
fidivrl
lret
mov
fistl
dec
push
add
mov
xchg
pop
repnz
mov
out
pop
jecxz
mov
mov
inc
in
pop
jnp
scas
sbb
xchg
test
inc
nop
jle
push
dec
xor
jecxz
sti
ror
or
pop
jmp
and
fnstcw
inc
dec
adc
popf
out
ss
sbb
popf
inc
dec
rcr
fwait
dec
cmpb
sub
push
nop
adc
push
mov
cmp
pop
inc
sub
popf
xchg
mov
call
iret
repz
mov
mov
adcb
xchg
pop
ss
inc
sbb
ja
mov
push
lcall
roll
subl
mov
stc
cmp
bound
xlat
dec
sub
mov
popf
shlb
ret
xchg
xor
pop
lock
jo
hlt
inc
and
data16
ret
and
adc
or
mov
mov
idivl
xchg
cmpsl
inc
sbb
pusha
shlb
add
int
aas
jg
ja
movsl
in
cwtl
jmp
insl
lock
loop
pop
mov
imul
ret
insl
cmp
int
rcrb
sub
insl
fstps
xchg
fisttps
xchg
mov
lcall
lahf
jbe
call
jo
pop
push
push
stos
dec
shr
lret
dec
or
jmp
cltd
xlat
push
int
mov
ss
into
sub
cli
pusha
or
sbb
enter
sub
add
out
jge
sbbl
cmp
imul
lods
rorl
sub
sub
in
inc
push
jo
jnp
sub
lds
mov
dec
lods
pop
mov
lret
movb
call
mov
cmp
or
roll
cmp
mov
cmpsl
push
std
mov
and
outsl
jl
xchg
and
aam
push
jp
and
xchg
pop
jg
loope
popa
mov
xor
ds
push
test
mov
xor
xchg
je
lret
cmpsb
mov
push
daa
sbb
mov
clc
shrb
into
push
pop
inc
mov
out
dec
test
inc
dec
in
lds
pushf
cmp
and
idiv
jbe
sub
cmc
fs
pop
lcall
adc
or
popl
xchg
repnz
sbb
push
das
push
sbb
adc
aas
sub
rclb
popa
push
scas
lea
rorl
pop
aam
std
sub
pusha
pop
sarb
in
mov
xor
jae
pop
jmp
out
inc
rcll
dec
or
call
or
adc
jne
stc
xchg
imul
pop
sbb
inc
xchg
outsl
stos
mov
cmp
jge
pusha
cmp
xor
and
mov
mov
cmp
jle
mov
jg
lea
mov
push
es
xchg
movsb
movsb
dec
lods
lahf
pushf
mov
stos
xor
jo
jmp
sub
add
xor
inc
jl
xor
into
ret
ja
jl
mov
and
test
mov
inc
jno
fcompl
data16
arpl
sbb
in
xchg
lahf
xor
mov
scas
shll
mov
fidivl
pusha
sub
dec
mov
jmp
ja
cltd
ja
push
mov
lahf
mov
gs
dec
ljmp
movsl
stc
xor
rorl
mov
xchg
inc
push
leave
push
int3
lods
les
test
in
xchg
icebp
mov
and
fisubrs
imul
stos
pusha
add
inc
add
and
mov
push
cli
cmpsl
xor
pushf
stc
in
xor
push
lcall
loop
fs
cmp
mov
aam
je
add
lds
pop
adcb
push
stos
mov
scas
sbb
lcall
dec
lock
and
fisttps
mov
cmp
std
fists
rorl
and
or
int
mov
adc
cmc
insl
ja
loop
mov
and
nop
mov
fsubrl
pop
lret
cltd
cmp
in
in
jns
adc
negb
inc
jg,pn
in
jne
mov
or
push
add
call
jno
mov
mov
lahf
mov
pop
lret
jnp
sbb
mov
testl
rorl
icebp
xchg
and
pop
fistps
jge
loope
popf
sbb
aam
mov
mov
enter
outsl
jbe
push
fcoms
xor
repz
pop
popa
sarl
movsl
lods
push
arpl
ret
pop
lods
sbb
int3
das
jnp
sub
push
shll
push
cmc
dec
mov
fsubl
or
fstl
stos
sub
mov
inc
ss
into
je
pop
cs
shl
cmp
out
clc
sub
jae
popa
mov
or
jo
jo
sub
and
mov
mov
mov
popa
pop
jecxz
in
out
loop
imul
jne
stos
xchg
or
cmp
sbb
popa
dec
shl
sub
sbb
idivb
test
mov
nop
shl
stos
jge
push
scas
outsb
xor
or
or
scas
test
mov
fstpl
and
pop
cwtl
jmp
lea
test
test
adc
ret
or
aaa
xor
call
jns
fnstcw
push
sti
add
sub
clc
ss
aaa
cld
mov
mov
dec
cltd
jl
mov
dec
lock
inc
cld
push
push
clc
loopne
push
imul
insb
adc
add
lea
cltd
in
faddp
popa
dec
das
into
movsl
repz
subl
pop
in
insb
icebp
enter
push
inc
pop
clc
push
jnp
ss
fucomp
push
push
mov
mov
xor
out
hlt
movsb
jge
hlt
std
mov
inc
xorl
mov
push
pop
sbb
stos
and
mov
aad
dec
lds
mov
cmpsl
ffreep
shlb
movl
imul
mov
and
mov
addb
mov
xor
insb
scas
sbb
pushf
add
clc
subb
dec
pop
divl
test
jns
or
jno
das
std
lcall
in
cmp
pop
add
lahf
sbb
xor
add
jne,pn
add
xchg
ret
push
or
jo
aad
and
push
out
push
fs
fsubs
nop
sti
inc
loop
mov
dec
xor
inc
jo
xlat
insb
shl
fmuls
cmp
or
jbe
inc
xor
sbb
dec
xlat
cmp
xor
add
out
xor
dec
and
push
and
add
adc
cmc
arpl
adc
adc
mov
loop
adc
pop
cmp
add
mov
inc
xchg
gs
xor
jnp
shlb
push
subl
xor
negl
inc
cmpsl
mov
xor
lret
incl
pop
cld
lea
lahf
leave
cmc
shrb
and
aaa
dec
push
push
inc
into
xchg
in
or
pop
lcall
adcl
lods
fidivrl
add
xchg
cmp
cmc
or
inc
sahf
push
imulb
sbb
addr16
out
sbb
xor
lds
popa
xchg
test
and
enter
out
mov
mov
in
test
dec
rorl
adc
sahf
inc
sub
in
rclb
mov
cmp
and
sub
negb
popf
push
cli
fs
or
rcrb
jmp
out
jne
push
push
popa
add
mov
addb
mov
movaps
mov
pop
lods
pusha
xor
pushf
loopne
fdivl
mov
xor
or
mov
jmp
sbb
fadds
mov
inc
test
icebp
fistps
mov
xor
fstps
pop
into
aaa
std
xchg
xchg
mov
sbb
dec
jae
mov
enter
movsb
cmp
xor
mov
jmp
data16
fildll
push
pop
fidivs
push
and
jb
movq
imul
dec
fs
cmc
jecxz
adc
adc
adcl
mov
pushf
orl
add
cwtl
out
xchg
dec
pop
or
push
sbbb
dec
mov
popa
in
bound
ret
mov
pusha
dec
cmp
ljmp
adc
xchg
repz
sti
adc
dec
and
xor
dec
cmp
xchg
sub
mov
aas
cmp
cli
pop
icebp
xlat
xchg
fucomp
and
mov
adc
adc
push
hlt
out
mov
push
or
test
icebp
addb
imul
mov
dec
dec
jmp
out
lret
ficoml
js
dec
pop
orl
out
sbb
lahf
sahf
mov
mov
popf
popf
icebp
inc
andl
insb
test
dec
jo
xorb
loop
fsub
xchg
mov
mov
data16
jae
or
mov
flds
add
aas
sbb
add
xchg
jbe
ja
xor
jl
jo
in
addr16
daa
xor
idivl
or
iret
decb
lea
mov
xchg
mov
and
jnp
popf
iret
mov
fimuls
lods
in
lock
lods
sahf
xlat
jne
xchg
jmp
add
jge
xchg
pushf
xlat
mov
fisubrs
cli
fnstsw
into
push
pop
loope
out
inc
rolb
push
jle
xor
jmp
pop
test
fildll
jg
pop
and
adc
push
inc
mov
jnp
adc
push
sub
outsb
insl
jne
xchg
cltd
mov
in
cs
xchg
and
adc
clc
adc
jnp
ret
sarl
sub
rcll
inc
push
iret
sbb
adc
repz
cmc
pop
pop
or
lods
js
mov
sahf
inc
adc
mov
mov
xchg
add
lods
add
movsb
pop
adc
lods
repnz
dec
and
sti
ret
testb
xchg
es
mov
xchg
lret
xor
jno
notl
es
jecxz
movsb
dec
jmp
push
jae
dec
push
sbb
adc
inc
pop
xor
movsb
jl
and
jg
rcll
fadd
add
vphaddbw
mov
outsl
mov
dec
push
pusha
dec
jp
out
jo
pop
scas
pop
pop
mov
inc
jo
push
lret
cmp
aas
icebp
orb
test
cli
test
in
sub
and
int
and
and
in
sub
ret
loopne
scas
outsl
les
pop
jbe
insl
push
mov
dec
xchg
mov
mov
xchg
dec
add
test
and
mov
aas
into
scas
push
loop
inc
rolb
push
jno
adc
sub
pop
outsl
sbb
xchg
push
std
insb
mov
push
pop
jl
xor
popa
out
int3
dec
in
xor
insl
lock
dec
dec
filds
push
inc
pop
sub
mov
es
add
scas
mov
push
jns
inc
and
jmp
adc
sub
enter
add
orl
mov
imul
test
push
xor
popf
mov
imull
loop
mov
test
xchg
pushw
lcall
xchg
jo
nop
mov
call
sub
or
popf
cli
popf
mov
pop
popa
or
mov
outsl
sub
int3
leave
dec
aas
ss
cmpsb
sub
jns
sub
popf
loopne
hlt
movsb
mov
and
js,pn
mov
add
or
mov
std
ret
mov
aad
sahf
lods
jns
xor
call
pop
aas
or
mov
inc
add
stc
cmp
mov
and
repnz
fnsave
pop
shrb
or
mov
lret
aaa
adc
mov
movnti
xchg
dec
push
xchg
mov
fcmovnu
xor
or
adc
pushf
sbb
jp
lods
idiv
sar
mov
daa
push
sbb
inc
pop
pop
sub
xchg
repnz
scas
int
and
test
and
add
push
inc
jo
aam
sub
clc
les
cld
cmp
iret
jno
insl
pop
pop
dec
int
out
xorl
data16
xor
pop
fs
arpl
nop
jo
sahf
cmpsb
ret
xchg
repz
adc
js
mov
out
repz
xchg
xlat
int3
sbb
bound
loop
lret
daa
mov
xchg
cmpsb
scas
js
aad
inc
mov
inc
push
in
pop
adc
or
das
ljmp
dec
dec
stos
ja
or
adc
jnp
lret
add
das
lds
cmp
int3
and
jg
das
adc
loope
push
dec
movsl
add
push
lret
xchg
push
sbb
pop
dec
mov
jb
imull
je
call
repnz
stos
jmp
mov
add
rcll
push
movsl
pop
jbe
int
xor
addr16
loop
rcrl
adc
add
stos
sbb
mov
jb
popf
or
cld
hlt
mov
xchg
inc
sbb
pop
jp
cltd
pop
mov
clc
out
and
push
ret
bound
mov
rcrl
flds
ljmp
inc
cmp
add
xor
shrb
fidivrs
or
les
int
push
pop
gs
repnz
fstpt
dec
push
mov
hlt
mov
add
push
push
sarb
inc
add
rcl
lret
nop
add
aam
xor
xchg
into
xlat
push
in
test
mov
push
dec
ljmp
bound
outsb
in
push
and
fsub
test
dec
mov
loope
jge
push
mov
push
adc
mov
inc
loop
cmp
sbb
cmp
in
lret
push
popa
out
mov
sub
scas
daa
sub
inc
dec
repnz
cmpsl
mov
jns
mov
fiaddl
mov
ja
xor
leave
xchg
sub
stc
faddl
jp
adc
pop
xlat
xchg
push
pop
xchg
sbb
daa
mov
mov
sub
mov
dec
add
insl
push
in
ror
push
loope
mov
cmp
stos
jnp
dec
mov
iret
sbb
sub
or
sub
adc
dec
add
jl
pop
lock
lock
cld
push
iret
cmpb
adc
push
jle
sbb
imul
mov
test
add
mov
sbb
orl
data16
xor
orb
jle
out
shlb
arpl
lock
sbb
sub
push
fldl
scas
arpl
mov
xor
or
in
int
pop
cld
sti
mov
aaa
mov
jecxz
cmpsb
xor
inc
sbb
shrl
and
sub
lock
std
sub
jp
mov
daa
mov
jp
pop
sti
sub
pop
mov
adc
vpxor
mov
cltd
xor
sbb
in
cli
jb
add
mov
je
call
push
push
or
rcrl
or
adc
imul
jno
pop
add
sub
dec
lret
fldl
xchg
shrl
rol
addr16
mov
adc
ret
mov
lahf
insl
arpl
mov
and
mov
daa
seto
lea
dec
xor
push
inc
rclb
fcoms
ror
stos
pop
sbb
movsb
repz
popa
jg
mov
push
adc
mov
imul
pusha
ja
pushf
push
in
push
or
jbe
aam
sub
repnz
xorl
outsb
scas
subl
xchg
aad
mov
mov
std
and
push
lahf
pop
test
ja
out
dec
into
ljmp
lea
ja
sti
loope
adc
cmp
push
pop
or
or
mov
xlat
xor
shrb
dec
out
lret
testl
sbb
jg
out
inc
adc
imul
hlt
cmp
icebp
dec
fcomp
fwait
shll
jns
or
jecxz
bound
xchg
les
fnstcw
mov
xchg
out
test
jg
lahf
mov
xlat
pushf
mov
pop
inc
inc
sbb
aad
aam
mov
pushf
sarl
mov
outsl
jge
fs
fldenv
inc
enter
rep
shll
hlt
jmp
jae
in
cmp
jae
mov
test
mov
xor
push
scas
and
repnz
cmpsb
push
ja
cli
ljmp
mov
inc
jno
mov
lods
push
pusha
xchg
call
imul
mov
mov
sbb
inc
fdivrp
lds
mov
sbb
out
and
push
pop
test
repz
outsl
test
pusha
iret
adc
add
ljmp
out
ds
add
mov
lds
jb
cmc
sbb
push
inc
pop
dec
mov
addr16
pop
xor
loop
fwait
fwait
std
js
push
push
mov
mov
outsb
daa
mov
push
and
sbb
dec
fucomip
mov
dec
adc
aas
stos
and
shlb
cmp
fnsave
jo
stos
cs
push
mov
push
jmp
dec
sbb
mov
mov
stos
adc
adc
xchg
aad
sub
in
pop
mov
sbb
ret
push
mov
pop
or
out
inc
push
lret
int3
dec
in
sbb
xor
lock
jb
sub
or
loop
inc
add
mov
jns
mov
loop
xchg
sbb
pop
mov
roll
aaa
in
inc
pusha
xchg
addr16
stos
mov
dec
mov
jmp
fldcw
adc
addr16
push
outsb
fsubrl
je
cmp
stos
cltd
add
clc
mov
out
inc
cmp
xchg
cmp
aad
or
adc
add
mov
sub
and
xchg
ljmp
sub
cmpsl
cmp
mov
mov
lea
je
cmpsl
xor
adc
sub
ret
jmp
cmc
clc
pop
jo
les
pushf
sub
mov
sub
rcl
gs
imul
pop
stos
jmp
jl
jle
cltd
xchg
jmp
lock
je
push
inc
popa
xchg
ds
daa
subl
mov
push
jl
lahf
popf
pop
jecxz
testl
div
or
mov
xor
movsb
scas
sub
dec
mov
rcl
inc
ljmp
test
ficoms
jns
push
ja
mov
push
cmp
jecxz
inc
call
lods
popa
jae
add
mov
mov
adc
jle
inc
dec
sub
pop
xchg
outsb
jmp
pop
repz
daa
dec
fidivrs
sbb
shl
cmp
loopne
pop
push
cmp
fistpll
sti
pop
mov
dec
mov
ljmp
out
pop
and
test
xchg
mov
pusha
mov
add
in
mov
pop
enter
testb
test
in
lds
bswap
add
loope
sub
ljmp
cmpl
lcall
xor
insl
ds
lock
pop
push
das
je
lods
jle
jmp
adc
dec
iret
jns
pop
insl
outsb
pop
jp
loope
mov
sub
leave
cmp
add
shlb
mov
lods
mov
lock
pop
xlat
setb
jns
cmp
mov
lods
and
test
mov
lcall
les
jp
sub
sub
adc
mov
xchg
adc
lret
xchg
pop
dec
fwait
imul
mov
jns
aas
push
pushf
add
mov
out
push
rcrb
jae
out
mov
lret
int
ret
sbbl
fs
mov
mov
std
xor
mov
dec
mov
fstps
fbld
arpl
out
sub
das
pop
sub
movsl
lock
adc
jp
rep
outsb
mov
dec
push
fdivrl
jb
cwtl
jne
fwait
ds
mov
and
cmp
testb
or
adcl
and
jbe
into
jge
xor
fcomps
and
adc
sub
cmc
cmpsb
fcompl
in
mov
inc
scas
and
jmp
adc
xchg
movsl
cmp
push
mov
mov
out
sbb
mov
pop
add
inc
out
out
addr16
xchg
cmpsb
push
into
inc
jno
and
adcl
xchg
jbe
jmp
cmp
orb
mov
mov
clc
pushf
fmulp
mov
jnp
cmp
or
mov
xor
stos
pushf
sub
shll
data16
mov
outsb
jle
inc
add
call
mov
les
lods
pop
xor
and
mov
fucomip
das
int3
mov
and
fiadds
or
sbb
add
mov
imul
es
data16
inc
fcompl
out
popa
jmp
imul
inc
fldt
mov
stc
lretw
jnp
lds
add
lea
jge
or
cli
lret
and
sbb
mov
xchg
xor
repz
clc
rcrl
mov
push
or
push
adcl
dec
std
sub
out
sub
cmc
arpl
daa
mov
scas
push
imul
repnz
mov
pushf
ficompl
mov
cltd
das
mov
ja
sarb
loop
pop
movsl
fmuls
add
in
and
out
loopne
lahf
jle
imul
mov
xlat
cmp
add
insb
cld
pcmpgtb
ljmp
xchg
mov
pop
dec
inc
dec
and
pop
dec
push
mov
call
xchg
rcl
inc
mov
sbb
pop
fsubs
loope
and
bound
outsb
aam
sub
or
cmp
jg
cmpl
enter
xor
pop
mov
dec
push
in
and
jb
push
mov
mov
cmpsb
mov
and
imul
jle
cmc
das
cwtl
mov
gs
cmp
ljmp
jne
xor
dec
inc
in
sbb
adc
arpl
cltd
loop
xchg
cmp
pop
fsubrs
dec
dec
cmp
dec
adc
mov
daa
mov
sub
pushf
andl
jb
cld
test
add
add
cmp
out
xlat
loop
mov
push
pushf
xchg
popf
xchg
aad
jnp
fdivrl
cltd
xor
jns
or
sbb
fisubrs
ja
in
test
push
inc
nop
mov
cld
call
jo
sbbl
scas
sub
lret
stos
pop
cmpsb
arpl
les
nop
movsb
mov
dec
inc
into
sbb
repz
aam
lret
outsb
xor
fs
xchg
mov
sarl
idiv
push
stos
sbb
inc
mov
imul
sbb
aaa
pusha
imul
out
push
mov
and
movsl
test
pop
sarl
pop
cmp
mov
mov
sub
sahf
xor
js
push
sbb
mov
imul
or
mov
stc
dec
xor
adc
sbb
pushf
dec
or
pop
mov
or
jno
into
repnz
xchg
and
mov
gs
iret
filds
adc
pusha
sub
push
xchg
les
xlat
ret
xchg
push
mov
js
adc
outsb
mov
mov
pop
push
dec
aas
out
mov
in
and
sub
dec
ffreep
inc
pop
push
in
das
dec
lcall
faddl
inc
cmp
and
xchg
insb
lock
cmp
call
inc
push
mov
popa
adc
scas
addl
sub
test
mov
mov
cltd
mov
loopne
inc
mov
jp
in
cmp
sbb
rolb
sub
adc
aam
subl
jnp
mov
loop
cld
out
rcl
lcall
pop
outsl
jle
nop
orb
popa
jnp
fwait
rcl
lds
out
sti
fisttpll
mov
test
jb
mov
pop
or
cmpb
mov
fistpll
jae
xchg
call
in
inc
pop
add
fdivrs
inc
sub
pop
in
lods
mov
mov
fdivr
mov
cmpb
or
test
sub
mov
in
cmp
rclb
or
sbb
jno
adc
into
scas
push
dec
cmc
cmp
jmp
ds
aam
cmp
and
aaa
fists
out
push
xor
mov
mov
mov
cs
jl
incb
sub
aad
dec
enter
inc
inc
inc
or
cmp
lahf
xchg
aas
subb
out
test
loopne
outsb
lcall
movsb
mov
push
jg
out
jns
lods
sub
adc
push
into
inc
daa
xlat
in
leave
movsb
dec
and
sbb
sti
ret
inc
cmpsl
mov
cmc
cmp
les
test
sti
xchg
and
flds
out
ljmp
mov
mov
jns
rcrb
rcrl
fisubl
fwait
mov
pop
push
fimull
bound
jp
push
pop
push
sbb
dec
jle
cmp
cmpsb
and
pop
pop
out
xchg
sub
int3
int
ja
sub
cmp
call
sbbb
leave
ds
xor
push
decl
cwtl
daa
push
sbb
inc
pop
or
and
adc
fisubs
test
scas
sub
jmp
jb
mov
cmp
ret
xor
fidivl
sub
rolb
cmp
jno
cmpsb
add
arpl
jno
fs
inc
jle
inc
das
fsub
pushf
shlb
mov
and
and
jg
div
inc
cltd
and
and
pop
mov
jecxz
sub
add
sbb
call
imulb
inc
cmpsb
daa
jne
adc
mov
mov
mov
enter
leave
inc
adc
test
dec
and
rcr
imul
rorl
jp
aas
pop
or
icebp
in
lret
mov
test
fbld
push
lock
int
dec
imull
add
pop
inc
orl
or
push
insb
pushf
sti
testb
int3
fs
and
jo
mov
jno
mov
pop
in
jbe
aaa
hlt
insb
test
mov
inc
add
add
addb
cs
or
mov
imul
testl
inc
jbe
pop
repnz
scas
lcall
xor
daa
add
jecxz
inc
cmc
inc
and
daa
mov
aas
loopne
cmp
sub
jg
insb
dec
add
test
adc
arpl
xor
subl
xor
ljmp
jecxz
mov
mov
adc
mov
les
or
mov
out
and
cwtl
jmp
sbb
aam
push
and
pop
ljmp
pop
mov
push
data16
mov
push
inc
mov
out
sub
mov
stc
xor
add
jo
repnz
pusha
adc
fiadds
mov
jae
sub
mov
sti
mov
mov
mov
dec
inc
rcrl
in
mov
das
xlat
iret
add
popf
pop
jmp
push
in
or
mov
movsl
nop
sub
jecxz
out
fsubs
stos
sbb
rcll
imul
adc
jne
loopne
dec
pop
dec
mov
xchg
popa
in
inc
js
imul
sub
data16
in
or
outsb
xor
xorb
loopne
stos
adc
aam
loop
ret
movsl
push
fs
push
cli
cmp
dec
pop
pop
out
pop
cmpsl
mov
pop
pop
xor
loope
mov
lds
mov
test
sub
lret
adc
mov
push
jl
roll
mov
lcall
or
js
repnz
jno
rcrb
inc
dec
mov
jbe
add
push
xor
test
cmp
mov
rcl
pop
fwait
jae
xchg
cmp
aas
pop
shll
mov
and
jo
les
popa
jg
loopne
into
push
negb
or
add
loope
xchg
mov
sbb
dec
sbb
mov
lret
popf
pop
and
adcb
sbb
add
data16
enter
stos
lret
dec
mov
shrl
outsb
sarl
popf
lcall
lahf
lcall
add
mov
test
inc
jmp
inc
insb
inc
test
call
or
leave
mov
push
mov
lret
mov
pop
jnp
jne
andl
and
stos
test
sbb
or
cmc
sub
and
es
sub
xchg
out
icebp
sub
ds
mov
fidivrl
dec
psubq
in
or
call
gs
mov
iret
cmpsb
imul
cmp
or
scas
mov
gs
xor
outsb
imull
ja
mov
add
sub
mov
ret
insl
cmpsb
decl
xor
cwtl
mov
pop
outsl
mov
roll
mov
ret
mov
out
andl
lods
scas
jo
stc
bound
xchg
dec
jp
std
sahf
je
in
jne
sbb
pop
fcomps
sbb
in
inc
add
fwait
cwtl
mov
dec
js
insl
mov
cltd
pop
xchg
stos
jnp
mov
fnstsw
icebp
loope
and
mov
fmuls
cmp
loope
push
xchg
and
sbb
aam
and
mov
cmpl
out
mov
pop
push
jbe
les
adc
jbe
repz
pop
fs
fisttps
mov
push
ret
mov
mov
mov
hlt
lea
std
nop
lahf
ret
adc
sub
pop
out
or
dec
sub
pop
ljmp
mov
scas
inc
ret
pop
mov
pusha
aaa
test
test
sbb
cmp
adc
sub
push
ja
aam
mov
xchg
std
stos
inc
mov
dec
sbb
adc
fmul
mov
dec
cmp
fs
stos
cltd
fnstcw
fsubrl
addl
push
addr16
cmp
ficompl
fists
cmp
mov
fsubrp
lock
cmp
or
lret
pop
rcrl
xor
push
xchg
xor
mov
push
push
dec
jmp
bound
mov
sbb
xor
ret
pop
jge
mov
cmp
xchg
fwait
inc
test
aas
pushf
push
arpl
bound
jbe
push
in
adc
jg
nop
aam
mov
add
xor
cmc
andb
shlb
add
xor
je
pop
int
faddl
xchg
fiadds
xchg
clc
mov
add
pop
sub
jo
fsubrl
cmp
cmp
test
es
add
mov
inc
mov
loop
add
xor
jns
dec
mov
and
or
add
cmpsl
lahf
scas
cmp
mov
lahf
sub
pop
sbbl
and
sbb
adc
inc
insb
mov
int
in
ds
ljmp
mov
cmp
daa
or
imul
inc
inc
xor
xor
xor
dec
stc
pusha
shll
cwtl
adc
add
or
xchg
pop
ljmp
das
sub
jbe
stc
shlb
lods
in
aad
mov
mov
inc
loopne
sbb
mov
stc
pusha
dec
jcxz
fsubs
clc
mov
arpl
pop
je
mov
hlt
cwtl
sub
xor
jg
scas
xchg
cmp
inc
cmpsl
repz
fs
rcrl
mov
xor
push
ljmpw
pop
shll
sub
adc
test
push
popf
out
faddl
or
rcll
addl
lods
test
inc
mov
mov
or
insl
mov
push
push
lock
mov
ss
or
inc
in
aas
inc
jnp
mov
sbb
test
xor
loopne
rdpmc
cmp
lea
push
mov
mov
shlb
mov
nop
pop
xchg
push
enter
or
and
dec
xor
mov
cmp
adc
mov
dec
rclb
sbb
icebp
clc
and
arpl
cmpsb
sub
mov
call
push
sbb
adc
adc
pushf
mov
icebp
mov
sub
push
ss
test
daa
jg
adc
stc
flds
add
out
popa
xchg
xor
ret
push
ror
sbb
cld
popa
daa
out
jge
mov
mov
int
fimuls
xor
adc
xor
adc
xorl
pop
sbb
fcom
inc
aaa
xor
pop
sub
lret
or
jnp
sbb
or
adc
sbb
cmp
test
test
mov
loope
shrb
in
stos
dec
lods
fwait
out
movsb
mov
stos
adc
inc
aas
out
jl
js
add
jmp
pop
jbe
xchg
dec
jmp
jns
xchg
cltd
cmp
hlt
cmc
cs
sbb
mov
xor
rorb
ret
push
mov
dec
std
out
subb
lret
pusha
sbbb
cmp
insb
in
pop
sub
xchg
int
mov
mov
les
negl
push
push
xlat
adc
cmp
jns
pop
push
hlt
mulb
lods
push
xor
adc
or
cmc
xchg
xor
jo
xchg
pop
xor
mov
leave
mov
pop
dec
stos
mov
push
fldt
xchg
dec
loopne
loope
insl
xchg
pop
lcall
jg
push
mov
insl
lods
pushf
das
or
aad
sti
push
jge
cmp
pop
or
je
mov
jne
and
fcomps
outsb
sbbb
sbb
std
sti
aas
mov
lds
lock
push
mov
in
push
je
mov
xor
cs
in
scas
addb
xor
add
das
and
and
xor
adc
and
push
push
mov
sub
mov
or
addr16
scas
mov
aaa
jmp
dec
push
shl
fdivrs
sub
nop
lcall
cmpsb
hlt
xchg
dec
push
jecxz
sbb
inc
xchg
push
sub
xlat
lea
jmp
in
fdivrs
xchg
adc
in
shll
test
add
test
idivl
cwtl
sbb
insl
popa
notl
pop
inc
sti
adc
lods
jg
xchg
cmpsb
outsb
fisttpl
mov
push
int3
insl
add
orl
loop
inc
inc
push
std
xor
xchg
push
repnz
jp
sar
and
jg
call
jne
xchg
push
cmp
xchg
into
add
mov
cltd
pushf
cltd
out
loope
mov
in
ds
or
pop
adc
into
insl
xor
cltd
mov
sub
sub
pop
fiadds
pop
add
adc
mov
cmp
in
in
or
inc
call
and
jno
add
sub
dec
push
rorb
int3
fsubrs
inc
sbb
mov
hlt
mov
aam
icebp
xor
ret
push
lods
xor
push
sub
jne
xor
out
das
lds
dec
mov
mov
pop
push
aas
or
dec
outsb
inc
in
pop
sub
rcr
lock
push
mov
lcall
jo
daa
add
push
rol
movsb
ret
stos
aas
add
jge
pushf
push
jmp
xchg
jl
or
lock
movsl
dec
pop
xorl
dec
ljmp
pop
or
ja
mov
push
mov
in
push
mov
push
push
dec
incl
shll
mov
and
je
jle
add
push
xlat
outsb
jle
mov
xchg
mov
sbb
xor
scas
xchg
call
cmp
or
sub
pusha
pop
rcl
pushf
cmovbe
and
cld
mov
scas
mov
cld
lret
lds
cmp
and
sahf
push
cmc
cmc
sahf
loopne
jo
ret
mov
dec
pop
sub
shlb
mov
in
rcl
scas
mov
or
nop
das
das
mov
push
mov
insb
pusha
lret
pop
jns
pop
cmp
fcoml
xchg
mov
pop
jmp
or
jp
fwait
xchg
mov
mov
ds
inc
jle
adc
sub
xorl
into
jb
inc
mov
dec
adc
mov
push
mov
sub
js
dec
or
stos
mov
fs
subl
in
jl
setnp
in
cwtl
repz
sbb
int
push
imul
pop
cmp
add
push
mov
pop
lret
data16
add
push
and
jne
insl
into
jbe
inc
sub
inc
push
xchg
aas
out
jnp
cmpsl
sbb
lock
call
pop
push
pop
loopne
or
cs
xlat
jle
into
add
push
in
fistpll
and
out
lds
ret
xor
sbb
or
push
pop
cmp
push
xlat
push
js
ss
and
call
dec
dec
jae
dec
je
push
repnz
fs
add
cs
sub
pushf
je
jge
loopne
jbe
ret
cmp
movsl
enter
xlat
mov
sub
jno
dec
leave
or
lea
adc
js
jne
call
insb
jne
aam
pop
dec
cmp
fisttps
dec
sbb
push
cmp
jle
cltd
cmp
subl
cmp
hlt
inc
push
inc
lcall
adc
out
jns
insb
clc
mov
lods
test
add
ss
cmp
fs
mov
mov
sub
dec
xchg
jg
mov
fsubrs
mov
sbb
jecxz
lds
lock
and
insb
imulb
dec
push
mov
xor
push
movsl
jmp
xchg
push
pop
es
cmp
dec
mov
cld
mov
pop
mov
adc
dec
pushf
mov
fisttpll
pop
cmp
sbb
aas
sub
cmc
adc
pushf
mov
lock
lcall
in
push
in
jno
stos
shl
ljmp
fldt
inc
xchg
ja
shl
or
lea
jbe
pushl
and
outsl
aaa
jmp
pop
fsubl
das
pushf
sub
push
add
mov
jns
jmp
fnstsw
jmp
ja
ss
lahf
mov
and
xchg
loopne
jge
lahf
movsl
sub
or
inc
dec
dec
lea
jmp
ljmp
cli
call
mov
rclb
add
ja
stos
fildl
sbb
add
pop
negl
fimull
mov
or
les
inc
into
xor
sub
movsl
mov
mov
pusha
daa
jmp
push
cmp
std
data16
push
add
pop
xchg
sahf
mov
mov
jecxz
sub
clc
out
inc
fwait
jg
dec
js
inc
pop
mov
add
jo
push
jle
movb
mov
arpl
out
jg
cltd
lods
rorb
stos
dec
sti
fsubrs
jnp,pt
adc
xchg
jbe
mov
and
jl
inc
movsb
mov
sbb
push
adc
dec
adc
ret
sbb
xchg
pop
jns
and
mov
jae
jae
call
scas
push
out
cmpb
xor
mov
push
inc
and
outsb
sbb
mov
sbb
cmp
in
arpl
lds
pop
inc
mov
mov
cltd
adc
call
lcall
dec
adc
add
in
push
mov
pop
adc
ja
xor
fiadds
xor
cmc
or
das
enter
add
sbb
mov
movsb
push
sub
inc
mov
ret
adc
fcom
cs
mov
test
jp
sysexit
daa
ret
push
daa
fistps
pusha
test
push
lods
dec
stc
jecxz
push
movsl
repz
push
test
inc
jno
into
adc
ja
fisttps
sbb
jle
add
pop
stc
dec
leave
push
jnp
sub
mov
out
loope
dec
inc
lcall
mov
jmp
shlb
test
repz
mov
in
sbb
enter
mov
pop
push
fdivl
pop
mov
push
inc
int3
mov
insb
inc
mov
insb
sub
test
or
dec
mov
xorb
call
cltd
inc
cmp
cmp
adc
push
xchg
fdivrs
out
lahf
lret
mov
aas
clc
clc
sbb
cmp
jle
pop
xchg
pushl
adc
jno
dec
outsb
gs
aad
in
push
call
icebp
stc
out
mov
push
jbe
outsb
dec
and
or
add
inc
and
jmp
sub
pop
fsts
bound
lcall
jo
fadds
ret
mov
push
push
xchg
subl
xchg
cltd
and
push
pop
xchg
loopne
popa
inc
sbb
add
sub
daa
mov
arpl
cmpsl
cmp
out
dec
sub
stos
jno
ret
rclb
or
mov
mov
mov
pop
call
je
xchg
inc
cmp
sarb
mov
test
cmp
push
dec
ret
mov
andl
iret
dec
sti
add
mov
popf
inc
jmp
cld
iret
in
or
ds
enter
jg
mov
sbb
jne
lahf
dec
xor
in
mov
mov
or
adc
outsb
fdivp
dec
js
mov
es
dec
xor
or
pushl
jb
sub
sarb
pop
scas
mov
fwait
int
cmc
out
movsl
inc
scas
mov
jecxz
cld
aaa
mov
stos
mov
xlat
fimuls
dec
fcomps
pushf
sbbl
mov
mov
xor
sbb
lea
lcall
jle
rcll
hlt
cmc
mov
ds
xchg
cmpsl
inc
adc
inc
jbe
push
fs
inc
adc
pop
pop
sub
aam
dec
gs
mov
fcoml
and
xor
mov
ljmp
push
bound
mov
inc
push
clc
ss
and
inc
push
or
mov
sub
sub
and
mov
sbb
scas
add
and
mov
cwtl
cmpsl
shl
adc
ficoml
cmc
in
mov
xor
cmpsl
div
adc
test
adc
or
stos
xor
popf
jg
das
mov
push
aas
push
in
aas
push
push
lds
mov
sbb
orl
push
in
mov
into
sbb
fwait
mov
xchg
sub
inc
pop
inc
jne
add
cld
push
ljmp
movsb
into
mov
fcompl
and
ss
pop
mov
mov
test
cmpb
and
cltd
adc
fcmovb
cmp
stos
js
xchg
mov
inc
ljmp
cmpsb
call
testb
mov
mov
push
mov
add
mov
push
xor
aas
push
lods
xor
inc
push
lods
int
out
mov
cmp
daa
insb
test
mov
lahf
jmp
dec
mov
inc
dec
or
xchg
inc
outsb
push
sarb
gs
insl
jne
sub
sub
mov
and
fsubrs
shlb
int3
sarb
iret
sar
and
and
and
push
insb
lcall
clc
mov
mov
cmc
es
pop
popa
fwait
das
jae
add
addb
dec
cmp
test
add
mov
sbb
xchg
loope
mov
loop
mov
aas
in
in
mov
test
add
loopne
cs
adc
icebp
mov
out
aam
repz
sub
outsl
bound
mov
mov
lods
mov
imul
sub
dec
into
xlat
jge
rclb
les
in
stos
or
and
lds
jge
popl
testb
cmp
sbbl
movb
mov
mov
popa
jmp
pushf
cmc
xor
imul
aaa
jo
inc
outsb
outsl
jnp
pop
mov
imul
mov
pop
fs
jno
repnz
jle
and
push
enter
cltd
stos
pusha
rcr
adc
or
leave
mov
adc
mov
add
mov
adc
jae
sbb
inc
adc
in
outsb
add
cmp
or
push
sbbl
insb
cmpl
orl
loop
shll
fiaddl
std
pop
cli
stos
loop
cmp
cmp
clc
and
push
call
clc
outsb
pop
mov
push
pop
std
xchg
movsl
inc
xlat
das
testl
pop
insl
cwtl
shlb
test
cmpsl
xchg
lods
mov
push
jns
mov
popa
pushf
jmp
dec
test
jp
popf
stos
in
dec
xchg
xor
mov
sub
scas
jnp
rcrb
mulb
xchg
xchg
pushf
fstpl
pop
fldcw
shrl
sbb
lods
xor
ds
mov
mov
pop
sub
inc
iret
dec
sbb
jns
mov
rolb
sbbl
pop
fnstcw
jp
popl
jb
aas
divl
push
inc
xor
xchg
push
pop
call
mov
xchg
hlt
int
es
lahf
cmpl
loopne
daa
mov
pusha
lea
ficoms
cmp
mov
mov
ljmp
jmp
fnstsw
lret
adc
and
push
test
dec
sub
add
cmp
lahf
push
scas
or
pop
inc
hlt
imulb
pop
out
push
sbb
lahf
jbe
faddl
scas
dec
pop
push
pop
adc
and
mov
dec
mov
repz
sahf
pop
adc
inc
nop
aam
and
sbb
mov
fcomi
cmpsl
dec
xchg
outsb
xor
adc
dec
sbb
fs
sub
scas
jecxz
pop
je
mov
pop
inc
mov
test
jmp
add
data16
pop
xchg
int
sub
mov
sbbl
es
push
repnz
xorl
jo
mov
sub
sub
out
mov
sbb
ss
xchg
shrb
and
mov
repz
adc
popa
push
adcb
popw
add
mov
je
out
and
icebp
mov
call
jmp
cli
dec
leave
or
sbb
pusha
sbb
shll
arpl
popf
jp
les
jo
jle
js
subb
test
xchg
push
insb
cmpsl
lea
ret
sub
stos
inc
fisubl
je
push
xchg
inc
mov
pop
and
push
jns
dec
idivb
jecxz
add
in
push
ss
arpl
test
xchg
and
in
mov
iret
push
lret
jge
test
imul
movsl
scas
xorl
in
ud1
xchg
dec
push
movsl
ficoms
cmp
adc
in
lret
jg
pushf
sbb
mov
mov
jae
fidivrl
jbe
cmp
clc
mov
roll
mov
pop
push
xchg
into
jp
enter
fcom
push
add
pop
inc
subb
orb
gs
sbbl
mov
lcall
js
xor
movsb
inc
dec
outsb
js
iret
inc
fmul
mov
push
int3
mov
popa
lahf
mov
and
adc
sbb
sbbb
or
aaa
nop
hlt
lret
rolb
xchg
lret
inc
cmp
dec
mov
cwtl
xchg
decl
inc
js
cltd
pushf
ja
out
and
mov
inc
scas
es
inc
jl
jae
mov
jmp
ret
mov
mov
lret
nop
dec
enter
cmp
out
lcall
ror
andl
push
popf
gs
cmc
or
sbb
or
and
inc
shr
insb
jecxz
shlb
repnz
dec
push
popf
cmp
sub
popl
icebp
nop
jl
mov
or
push
xchg
fnsave
cli
stos
insb
outsl
repnz
movsb
lock
aam
cmp
jns
add
push
testl
or
js
clc
call
ss
push
xor
into
leave
test
stos
and
or
scas
jb
jle
rcr
push
inc
insb
dec
int3
or
jbe
and
xor
mov
imul
mov
rol
ljmp
mov
lret
ds
sti
push
jmp
testl
repz
dec
adc
mov
dec
sub
xchg
aam
cmp
outsb
and
int
pushf
adc
out
out
in
adc
jcxz
push
clc
stc
pop
hlt
gs
fwait
sbb
jg
fs
lret
jno
jno
push
jle
int
movsl
add
inc
or
movsl
imul
sti
and
shrb
cld
and
imull
insl
add
adc
push
daa
cmp
shrl
dec
mov
dec
rcrl
xor
test
into
rcrb
jns
out
inc
out
or
jp
mov
xor
push
pushl
xchg
popa
and
push
adc
and
inc
ficoml
push
vcmpsd
test
call
stc
pop
and
mov
xchg
push
add
stc
sbb
mov
outsl
sbb
call
mov
cmpsl
pop
js
rcrl
add
mov
sti
pop
scas
neg
push
cmp
aaa
int3
sti
in
addr16
movsb
hlt
mov
lcall
mov
dec
xor
mov
pop
xchg
jno
pop
int
jge
push
imul
ficoms
inc
adc
cmpsb
imul
push
jle
fcmove
scas
or
or
xchg
ljmp
cmp
addb
out
xor
mov
cmp
dec
sub
pusha
lods
iret
fsubl
push
sbb
scas
add
hlt
daa
xchg
scas
lock
adc
mov
jl
lea
add
sbbl
std
dec
cmp
pop
or
pop
push
fimuls
mov
mov
pop
pop
negl
mov
xor
xor
ja
hlt
inc
inc
mov
daa
mov
in
xor
jns
push
stos
xchg
in
adcl
jg
inc
out
cld
ficomps
or
or
aad
pop
icebp
popf
mov
scas
je
sbb
hlt
push
popf
push
call
mov
jl
jno
repz
dec
jmp
popa
or
test
test
cmp
cmpsb
aaa
pop
lret
jp
lea
pop
mov
jae
add
cmpsl
and
ret
icebp
fdivrs
sub
sbb
dec
lea
sub
dec
mov
jg
sbb
cmp
clc
add
out
dec
loope
jne
adc
rcrb
ss
push
into
push
jmpw
mov
pop
dec
cltd
data16
sbb
stos
and
mov
jge
mov
out
dec
lds
add
dec
dec
std
fdiv
jne
or
stos
enter
pushf
xor
iret
lret
cwtl
sbbb
out
stos
push
and
push
mov
cmp
mov
mov
jno
mov
cmp
dec
jge
stos
mov
rcr
cs
fldcw
in
enter
sub
dec
add
push
lret
sahf
aam
test
sarb
scas
clc
mov
int
mov
push
out
mov
jmp
mov
inc
pop
ds
xlat
int3
ret
rclb
lods
push
mov
hlt
into
test
sub
sub
xlat
mov
jno
test
mov
rcr
call
mov
xchg
aad
pop
add
aas
xchg
imul
lahf
cmp
mov
sub
fdivs
cs
imul
movsl
addb
mov
test
jmp
loopne
popf
out
icebp
cltd
jnp
or
jo
or
dec
enter
and
sbb
add
aam
push
test
dec
adc
enter
pop
add
stos
test
inc
pop
sub
rcr
xchg
push
inc
leave
sbb
lock
popf
mov
xchg
decb
lea
call
jle
sti
add
cmc
sbb
xchg
mov
push
mov
xor
std
push
xchg
loope
stc
xlat
mov
ds
dec
data16
or
int3
stos
fists
loop
xor
sbb
fwait
sub
fistpll
push
mov
and
out
aaa
cli
pop
daa
lret
mov
shl
icebp
jb
push
lret
xor
dec
incb
negb
sub
in
xchg
insb
popf
xchg
scas
fucomip
sbb
push
out
imul
test
ljmp
cmp
sbb
iret
cmp
mov
and
jae
test
jo
jg
push
imull
push
push
push
sbb
in
shrb
sub
xor
xor
jecxz
xchg
cmp
in
fcmovu
sub
xlat
push
mov
add
push
cmp
dec
or
iret
or
sbb
and
dec
or
les
lds
ret
loop
xor
push
inc
cmp
mov
and
bound
push
les
sub
lock
pop
repz
jne
xchg
sub
in
inc
or
mov
sub
int3
or
and
daa
mov
pop
push
jmp
xchg
dec
repnz
pop
fistpll
js
push
lret
inc
loopne
popa
push
lret
and
xor
push
lods
push
xchg
addl
or
lret
xchg
xor
jae
movsl
push
int
cli
push
mov
shrl
mov
cmp
add
add
xchg
jae
sub
dec
add
xchg
jmp
mov
inc
cs
pop
jp
fisubrl
mov
dec
jnp
das
in
pop
sbb
leave
jg
cmpsb
andb
jne
pminub
out
jp
push
idivb
test
bound
popl
fsubrs
clc
clc
movsl
xchg
pop
mov
jp
xor
je
pop
addl
xchg
and
pop
mov
test
mov
addr16
scas
adc
negb
mov
in
cltd
jb
inc
mov
and
out
lods
pop
rcll
and
push
push
sbb
inc
or
dec
cmpsb
sub
fwait
out
cld
push
cmp
mov
cwtl
int
inc
ret
dec
jnp
pushf
rorl
inc
imul
add
ret
adc
push
adcb
sub
cwtl
xchg
pop
test
and
pop
daa
and
das
jl
aad
lahf
fstpl
in
scas
test
xchg
fwait
repnz
mov
inc
shrb
cmp
test
xor
data16
xor
fidivrl
xchg
add
inc
pop
mov
sbb
push
mov
cmp
pop
aaa
rorl
cld
aad
xor
pop
rorl
add
fdivl
das
push
or
aaa
gs
and
sub
ss
cmpsb
inc
sub
inc
pop
adc
mov
mov
and
ljmp
repz
int3
jnp
adc
aad
jmp
cmp
mov
sbb
daa
adc
leave
and
xchg
or
mov
addb
sarl
daa
cwtl
push
mov
mov
mul
push
inc
dec
aaa
in
scas
shrl
clc
pushf
mov
movsl
lods
ret
xor
xchg
mov
xor
mov
clc
push
mov
xchg
mov
pusha
jmp
in
sahf
inc
in
mov
mov
aas
daa
lods
jae
movsb
xor
xchg
into
ljmp
pop
loope
cmc
daa
loop
sbb
push
cmpsl
xchg
negb
push
fstpl
mov
xchg
in
adc
xor
fisubl
sbb
inc
scas
lods
imul
mov
dec
iret
push
push
pmulhuw
test
xor
inc
mov
imul
mov
lret
pop
xchg
cmp
push
ret
loope
shll
lds
cmpsl
dec
aas
inc
es
call
sub
dec
push
inc
scas
lret
adcb
push
jg
pop
mov
fidivs
popa
fcmovnu
xchg
push
mov
mov
and
pop
insl
push
dec
into
xchg
mov
sbb
push
cmp
xor
rcll
cld
push
popf
ljmp
test
loope
sbb
inc
outsl
popa
dec
jg
mov
xor
loope
sub
notb
rep
fiadds
in
xor
mov
adc
clc
jb
fildl
xchg
scas
pop
aaa
xchg
outsb
dec
and
orb
push
in
cmp
jnp
std
adc
adc
adc
test
pusha
xor
ret
jmp
test
jo
dec
mov
es
sub
adc
add
sbb
cli
lret
dec
test
lahf
inc
mov
push
mov
in
pop
and
je
push
ja
or
out
mov
aad
imul
xlat
mov
xchg
aas
rorl
mov
jle
outsl
sbb
data16
addr16
sub
or
add
into
aaa
aas
or
aaa
aad
sub
inc
mov
lret
sbb
popa
clc
adc
shrl
scas
aas
fldcw
movsb
mov
outsl
pop
lds
cld
in
sahf
inc
sub
pusha
arpl
adc
and
or
xor
dec
mov
addr16
jecxz
pop
sub
sbb
jae
dec
mov
mov
aas
xchg
movsl
gs
dec
rcl
or
gs
aaa
push
insb
push
sbb
xor
andb
les
loope
dec
fisubl
imull
xor
adc
mov
jmp
test
divl
and
shll
jge
jbe
mov
sub
xor
scas
add
mov
sub
mov
jno
sti
xor
loop
xlat
hlt
std
fadds
push
inc
sub
stos
jg
lock
pop
fcoml
lret
lock
push
push
xchg
jo
inc
mov
insb
sbb
push
rorl
aad
mov
pop
pop
xchg
push
jle
stos
jne
shl
and
subb
push
push
stos
add
xabort
push
lret
and
js
aam
sahf
cwtl
enter
push
dec
dec
test
fnsetpm(287
add
and
pop
push
loopne
jno
xor
xchg
in
cmc
pop
fwait
mov
xchg
inc
std
jbe
sarl
sti
and
inc
mov
cltd
or
movsb
pop
outsb
push
test
jmp
sbb
dec
in
cwtl
decb
xorl
mov
jge
std
sbb
xor
mov
js
xchg
mov
mov
mov
adc
adc
xchg
scas
mov
mov
mov
pop
test
push
xchg
mov
bound
fadds
cmp
inc
dec
mov
pop
lcall
in
mov
pop
push
sub
push
xor
push
push
arpl
xchg
js
scas
push
dec
sbb
pop
mov
xchg
ljmp
aam
das
xor
addr16
sbb
xor
sahf
push
and
adc
push
dec
popf
je
and
sahf
cs
cwtl
add
cs
cmpb
jae
add
out
dec
xchg
sahf
js
movsb
and
insb
inc
dec
sbbl
jecxz
flds
jmp
and
jae
loopne
cld
addl
leave
jbe
inc
repz
pop
xchg
jbe
mov
stc
adc
mov
cltd
pop
imul
push
lods
lods
jae
jno
fimuls
push
roll
pop
mov
lret
fistl
mov
sahf
xchg
bound
or
mov
add
mov
or
mov
jp
push
xor
jge
lds
flds
fldt
adc
ret
xchg
sub
xor
in
rcl
scas
or
sti
inc
mov
or
lods
sbb
add
xor
dec
in
rclb
nop
add
mov
jae
cmpsb
or
mov
mov
sahf
push
pop
or
popa
movsb
fcoms
pop
mov
inc
and
jmp
mov
pop
jae
jb
jno
jecxz
gs
pop
adc
cld
movsb
xor
les
out
inc
jnp
sar
cmp
aaa
les
dec
push
loop
or
jl
pop
cmp
ljmp
enter
fisubs
xor
movl
dec
arpl
add
xchg
lock
addr16
fistl
mov
xchg
test
inc
cwtl
jle
sarl
movsl
dec
adc
mov
lock
xor
xor
inc
out
mov
push
push
fstpl
cmp
jge
push
inc
jge
popa
in
inc
mov
lcall
or
push
xor
xchg
push
into
inc
lock
inc
jo
mov
jno
mov
jb
mov
sbbb
aam
sub
mov
in
push
hlt
pop
jae
shrl
push
jb
jmp
dec
mov
ret
fistl
mul
jae
aad
jae
loopne
cmp
xchg
out
fs
mov
mov
iret
cltd
movsb
cmovp
jle
mov
mov
popf
sub
push
sbb
add
loope
scas
call
ret
call
ret
mov
movsb
pop
xchg
rcrb
pop
flds
xchg
mov
lret
push
mov
inc
mov
dec
in
mov
popl
mov
lock
fld
mov
push
jmp
ja
pop
xor
cwtl
mov
js
stc
dec
iret
or
lret
cs
jl
loop
orb
out
cmp
fisubs
cmp
sbb
stos
call
rorl
mov
push
dec
inc
push
out
std
ljmp
in
int
shl
lods
data16
pop
jmp
xor
lock
sbb
and
sbb
xchg
xor
dec
sub
ja
sti
fldcw
js
jb
pop
sub
sar
loop
shlb
orb
enter
sub
je
aas
cmp
stos
stc
frstor
bound
xchg
ret
mov
add
push
ror
and
fsubrl
adc
cmc
push
sub
sub
cmp
cmpsl
dec
mov
andb
test
fimuls
shlb
out
or
outsl
cs
orb
or
dec
and
dec
dec
bound
or
mov
and
fxch
lock
and
sbb
std
inc
pop
imul
loop
push
loope
scas
pop
aad
in
cmp
jmp
pusha
mov
inc
fdivl
daa
les
pop
mov
in
lods
pop
lds
shll
sub
or
inc
push
std
bound
push
pop
jle
push
movl
jle
fildl
pop
jp
loop
adc
sbb
mov
aam
cmc
mov
jp
pop
sbb
jb
inc
sbb
push
push
mov
inc
ret
sub
inc
pop
push
cmpsb
mov
dec
popa
dec
push
mov
sbb
cmpsl
test
adc
or
lahf
test
cmpb
movsb
push
in
mov
sbb
and
in
jg
es
mov
vminps
cs
cs
roll
xchg
fs
lahf
stc
fistps
in
jo
push
sarb
mov
pop
push
fistpl
leave
insl
out
push
inc
pop
clc
cmp
pop
jns
mov
xchg
adc
cs
xor
mov
cmp
inc
and
les
pop
aam
js
out
fmul
cli
add
test
dec
sub
and
idivb
inc
cmp
add
inc
orl
outsl
stc
cmp
rcll
pusha
mov
xchg
mov
std
push
mov
xchg
outsb
lea
icebp
or
mov
cmp
or
jmp
xchg
dec
cltd
lahf
stos
movsl
cld
mov
mov
mov
inc
std
xchg
xchg
das
mov
jb
mov
mov
sub
sahf
lret
rcr
pop
push
adc
jne
fidivrs
pop
push
repnz
sbb
or
adc
xchg
shll
fdivrl
fadds
xchg
jnp
xchg
dec
jg
push
push
arpl
pop
mov
cmp
sbb
es
cmp
std
adc
xor
out
pop
popf
jmp
pop
pop
imul
js
cmp
test
daa
xchg
sbb
addb
js
sub
mov
xchg
sbb
adc
jg
add
mov
iret
push
clc
outsl
cmp
gs
lock
jb
fmuls
cmp
sub
jns
call
jb
jp
xlat
mov
cmp
xor
sub
rcrl
mov
in
mov
mov
ja
dec
pop
xor
push
loopne
and
sbb
pop
dec
push
rol
add
outsb
jecxz
lcall
pusha
aas
jae
or
add
jecxz
rcrb
push
push
scas
loop
add
sbb
aam
dec
addl
dec
adc
adc
nop
shrb
fdivl
dec
cmc
fwait
or
jbe
pusha
pop
adc
lret
outsl
jp
xchg
pop
hlt
mov
xorl
cmp
enter
push
sbb
psrlq
imull
mov
mov
mov
add
dec
sbb
pop
and
fmul
fmuls
mov
push
inc
push
xchg
lahf
int
out
cmp
lcall
push
push
xchg
stos
stos
call
pusha
faddl
fsubs
insl
pop
call
bound
loop
shlb
xchg
ret
fldt
pop
adc
xchg
daa
cmp
xor
stos
hlt
cltd
insb
jno
popa
adc
mov
mov
add
xchg
shl
or
mov
jle
or
ret
and
inc
std
xor
lods
out
test
adc
repnz
test
aam
push
xlat
mov
pop
jecxz
mov
mov
lods
mov
lahf
xor
test
mov
lock
sahf
pusha
and
pop
bound
aaa
mov
dec
xchg
inc
lea
jg
call
and
or
popa
adc
add
adcl
jp
lret
push
lods
test
cmp
fisubs
add
sbb
mov
or
test
mov
sbb
addr16
in
push
mov
gs
push
jmp
cmc
repz
xor
adc
icebp
pop
cmp
lods
mov
fcmove
mov
dec
clc
jle
and
pop
gs
dec
xchg
pop
jge
in
mov
pop
push
mov
inc
and
into
mov
sti
push
arpl
mov
js
adc
pop
push
mov
sub
loope
sub
and
in
sub
lods
or
insb
clc
push
mov
sbb
shl
cmp
shrb
mov
mov
add
test
inc
repnz
jg
mov
inc
ret
add
jns
mov
pop
dec
fdivp
loop
lock
pushf
mov
and
lds
mov
je
sub
xchg
xor
mov
lahf
xchg
fstps
pop
lea
clc
or
pusha
add
scas
add
xchg
cmp
scas
xchg
clc
mov
mov
jbe
mov
sahf
mov
pop
adc
pop
push
adc
dec
pop
or
inc
hlt
sub
aam
cmpsl
aas
xchg
jle
push
or
imulb
xor
loop
or
gs
dec
sbb
stc
imul
xor
lea
pop
inc
add
lcall
idivl
imul
ret
pop
frstpm(287
mov
mov
orl
mov
lcall
mov
sbb
out
jle
orl
fstps
cmp
notb
jnp
ret
push
cltd
scas
push
rol
dec
mov
mov
dec
or
xor
cmc
inc
mov
add
inc
js
rolb
mov
cmp
sub
sbb
aaa
jne
dec
ljmp
out
add
and
and
ljmp
test
cmpsb
mov
repnz
push
pushf
in
sub
mov
sbb
sbb
jbe
or
repz
call
ja
or
shrl
ja
test
lcall
xor
xorb
xor
mov
pop
jb
outsb
adc
pop
hlt
aad
sub
push
lods
mov
xchg
mov
in
adc
ficoms
lea
mov
mov
into
and
add
rorb
sbb
mov
push
data16
pushw
sub
fimull
jo
mov
push
xchg
fidivs
shrb
cmpl
cs
lea
pop
and
aaa
mov
mov
push
mov
push
pop
repnz
test
lret
cmp
popf
movsb
and
mov
dec
in
into
xchg
jl
sahf
sti
dec
test
cwtl
jmp
insb
xchg
rcrl
call
stos
sbb
sbb
push
in
sub
xor
js
sbb
in
lahf
add
fs
repnz
aas
bound
mov
adc
sub
xor
mov
xchg
jl
cmp
stc
pop
sti
push
lods
pop
mov
dec
lods
insl
sbb
push
pop
mov
xor
xorl
mov
xor
pop
mov
stc
inc
aaa
int3
aaa
shlb
adc
outsb
push
imul
lcall
rclb
cmp
push
pusha
sahf
xchg
push
dec
lods
and
push
fidivl
pop
dec
jg
hlt
mov
pop
je
add
fwait
xchg
mov
pop
sbb
dec
inc
push
lock
sahf
mov
and
or
push
sub
bound
imul
fcomps
sar
dec
hlt
dec
cmpb
sbb
cmpsl
jecxz
xchg
lcall
ds
mov
mov
mov
pop
push
adc
or
inc
inc
cwtl
mov
sbb
mov
dec
cmp
sub
hlt
cwtl
mov
shrl
mov
out
cmp
leave
jl
sub
call
das
mov
sub
and
lahf
mov
icebp
and
in
stos
sti
aad
imul
xor
pushf
movsb
add
adc
fs
rcrb
mov
jne
xor
jl
mov
cmp
or
jns
jp
sub
cmp
mov
cltd
fstpt
mov
test
loop
in
adc
push
imul
xor
jecxz
and
call
mov
mov
mov
inc
xlat
xchg
mov
imulb
ret
adc
into
jo
sub
jge
or
out
shld
cmp
outsl
push
out
inc
cli
in
cmpsl
mov
shrb
cwtl
aaa
out
cmpsb
add
mov
push
stos
out
es
push
jns
in
push
nop
in
cmpsb
adc
jle
int
rcrl
pop
aam
lods
imul
adc
mov
pop
mov
aam
in
pop
and
mov
jae
cmp
jo
mov
inc
fsub
ret
mov
xchg
lret
lret
jecxz
cmp
dec
jns
fwait
sarl
shlb
cli
pushf
into
cmp
inc
jae
fnsave
mov
inc
and
push
pop
cmp
repz
aas
mov
pop
cmp
sbb
ljmp
data16
int
jecxz
sub
lret
aaa
fimull
scas
xor
mov
dec
mov
xor
in
push
mov
dec
adc
imul
xchg
mov
jecxz
rcll
mov
or
inc
adc
adc
or
and
sti
xchg
jle
mov
das
data16
push
flds
sub
insb
push
scas
jbe
jb
sbb
pop
scas
or
cmpl
jecxz
movsl
mov
sub
sub
out
pop
ret
cmp
push
jne
cwtl
pop
xchg
in
jge
rclb
mov
sbb
insl
xchg
pop
xor
into
add
fistps
pop
cmp
and
imulb
fsubrl
imul
jmp
add
xorl
das
sbb
dec
out
adc
jnp
mov
pop
sub
ficomps
je
pushf
pop
jne
xchg
iret
test
jle
mov
jl
jmp
and
dec
test
add
cmpsb
daa
add
mov
add
mov
arpl
mov
push
lea
test
cmp
jb
lahf
or
adc
adc
dec
js
adc
adc
push
daa
rorl
mov
int
shr
test
je
xchg
inc
das
xor
xchg
enter
sbb
cltd
je
ficoms
cmp
and
loope
jl
push
cmc
pop
sbb
stos
pop
cwtl
jb
fisttpl
inc
and
adc
add
int
cmp
stos
test
cltd
mov
fbld
arpl
mov
hlt
mov
test
add
lods
fs
jns
pop
bound
rcrb
stos
push
lds
adc
xor
inc
cli
sbb
mov
leave
scas
xchg
push
jmp
xor
xchg
pop
add
mov
mov
add
sbb
rclb
leave
pop
sub
cmp
or
push
je
push
mov
cltd
xor
cmp
dec
or
lods
pop
loop
fsubrl
js
mov
aad
pop
push
mov
ss
clc
sarl
cwtl
inc
inc
xor
push
out
mov
push
or
cmp
push
clc
loop
cmp
mov
dec
out
int3
push
mov
ret
mov
push
leave
jne
pop
les
cmp
loop
xchg
push
out
aaa
push
scas
cmp
std
dec
mov
into
imul
testb
pop
stos
mov
inc
icebp
mov
xchg
or
pop
add
test
dec
dec
fnstcw
lods
pop
sar
movsl
or
xchg
inc
daa
mov
xor
cmp
loop
push
aam
dec
xor
ljmp
es
pop
push
adc
and
mov
and
sub
cmp
sub
dec
out
mov
jae
jl
test
movsb
adc
adc
adc
aas
mov
mov
ret
xchg
iret
lock
add
loopne
shll
jo
jae
jns
leave
nop
jno
decb
andb
push
push
push
pop
fisubrl
mov
or
ds
test
inc
call
fimull
push
cmp
xor
xchg
lret
and
mov
ja
cmp
push
sahf
sbb
lret
dec
fwait
out
fcomps
add
leave
or
ror
pop
test
and
dec
push
push
and
inc
inc
mov
dec
ja
ret
fwait
jnp
add
cmp
inc
mov
pop
in
or
pop
inc
test
sbb
mov
and
fs
and
pop
sahf
lahf
shlb
xchg
ficompl
in
jg
jg
dec
add
sub
arpl
lea
adc
xlat
jg
aas
orw
xor
push
loope
jne
out
inc
or
xchg
inc
shll
and
lock
int
insb
pop
lret
int
cmp
stos
stc
loopne
xchg
mov
cld
and
sub
inc
xor
jmp
push
in
je
adc
mov
or
xchg
pusha
out
and
ds
leave
cltd
aas
es
test
sub
and
shlb
mov
sbb
mov
dec
and
into
jl
sub
das
xchg
xor
cmp
xlat
fidivs
orb
gs
js
cld
push
scas
pop
jo
in
fimull
push
leave
icebp
scas
arpl
in
cltd
xor
jecxz
push
inc
and
inc
push
sbb
pop
arpl
fnstsw
mov
jg
cmp
popf
cli
push
sbb
xchg
ljmp
jne
cmc
and
xchg
iret
mov
enter
rcrb
mov
pop
mov
push
xor
shlb
lahf
add
sbb
push
and
inc
imul
sbb
push
push
imul
add
btr
popf
stc
sbb
ret
in
mov
lods
scas
push
mov
push
xchg
mov
out
icebp
sbb
ja
mov
sbb
push
test
push
out
push
cmp
push
aam
pop
fdivrl
mov
out
in
xlat
fldt
in
popa
or
mov
out
out
fnstcw
bound
adc
add
inc
and
dec
cmp
and
pop
cmp
adc
pushf
jecxz
int3
in
lock
dec
jne,pn
lret
push
cmp
loope
xchg
mov
loop
xchg
aaa
mov
movsl
xchg
xorb
xchg
icebp
arpl
dec
push
movsb
lock
sub
hlt
adc
movsl
mov
jl
add
or
loopne
inc
sbb
xor
sahf
dec
ja
lock
ret
mov
sub
xorl
xchg
shl
dec
inc
int3
xchg
mov
dec
lods
loop
pop
inc
push
mov
xchg
push
movsb
sets
es
mov
in
or
or
inc
sbb
add
imul
pop
push
inc
out
lock
pop
hlt
fstpt
cmp
lcall
jno
cwtl
inc
loopne
dec
cltd
inc
hlt
das
test
mov
sub
jns
test
popf
jb
sub
xor
cmp
insl
call
imul
cltd
subl
loope
cmp
mov
push
dec
cmp
lcall
jle
pop
ss
loopne
cs
dec
aad
jo
mov
push
mov
scas
jmp
fimuls
inc
mov
sbb
dec
not
inc
nop
sbb
nop
xchg
push
call
push
dec
cmp
out
in
mov
sbb
shl
fwait
stc
fidivs
xchg
add
movsb
and
adc
subl
mov
cwtl
cmp
dec
lea
sub
sub
sub
arpl
lret
or
rorl
arpl
jge
dec
lods
mov
jg
aad
movsb
sbb
dec
inc
gs
enter
and
je
inc
mov
lds
test
mov
stos
in
sbb
daa
sub
sbb
clc
adc
cwtl
sahf
push
mov
outsb
clc
test
sbb
js
aas
test
and
add
sub
clc
icebp
adc
out
inc
jns
addl
pop
outsb
scas
sarl
pop
fdivl
fsub
ljmp
dec
push
aaa
jo
mov
adc
mov
cmovns
cli
cs
dec
daa
aam
jae
je
arpl
add
shrb
enter
dec
out
dec
out
outsl
cltd
and
fxch
mov
pushf
and
lret
pop
push
js
and
or
pushf
jae
pop
cmp
xor
call
cmp
lea
mov
dec
icebp
add
pop
mov
pop
jns
sub
jle
push
sbb
push
cvtps2pi
mov
xchg
or
outsl
lcall
scas
insb
stos
cmp
insb
jb,pn
add
insl
dec
xchg
cs
pop
mov
dec
shlb
lods
fdiv
inc
movsl
arpl
cli
sbb
aam
and
ljmp
xor
pop
loope
mov
and
imul
movsb
out
les
test
or
jnp
xchg
jmp
adc
add
inc
push
inc
pushf
add
stc
inc
lds
jno
mov
jo
jg
popa
mov
test
icebp
cltd
in
push
mov
jle
push
js
daa
push
scas
repz
pop
in
dec
popf
repnz
or
ds
lds
mov
arpl
pop
cli
cmp
fimull
mov
jno
add
sbb
addr16
inc
dec
mov
test
add
xlat
jge
lods
into
xorl
xlat
mov
fidivl
repz
cltd
scas
mov
xor
cmc
mov
pop
jo
lock
lret
adc
mov
or
fwait
loope
insb
dec
add
hlt
cltd
and
fdivrl
pop
outsl
scas
lea
sahf
jp
pusha
mulb
lret
int
test
fmuls
mov
popa
xor
ss
sub
sti
rolb
iret
xchg
aas
mov
or
test
push
cld
test
sahf
outsl
stc
inc
stos
push
popa
push
add
andb
adc
jns
rolb
push
or
out
fs
ja
pop
hlt
cmpsl
mov
lock
mov
pop
subb
leave
mov
das
fstpl
xor
push
jbe
mov
loopne
ret
scas
xchg
jns
fwait
jbe
or
in
icebp
inc
or
aas
outsb
adc
ss
in
dec
outsb
jge
orl
fisttpll
cmpsl
shlb
subl
xchg
xor
stos
aaa
ret
arpl
scas
testl
mov
sbb
stos
cmp
xor
sub
aam
sti
popf
add
adc
enter
dec
cmpsb
in
ss
dec
pop
xlat
and
insl
mov
sbb
outsl
push
and
xchg
repnz
push
mov
cli
or
jb
and
jb
add
xchg
repz
dec
adc
leave
xchg
gs
scas
add
mov
cmc
adc
sub
repz
int3
xchg
jbe
xor
nop
jnp
hlt
mov
or
out
cmp
jne
push
push
dec
jb
repz
cli
out
rcrb
inc
into
dec
mov
adc
cmc
lcall
loop
fadds
add
xchg
xor
cmp
insb
pusha
pop
leave
fcomip
test
sbb
mov
lret
bound
addr16
xor
aas
push
scas
mov
sti
and
dec
xor
stos
addb
gs
clc
orb
sbb
or
mov
ret
insl
cmp
call
push
push
xlat
mov
nop
push
cmp
orb
push
fldl
aaa
xchg
cmpsb
out
push
xchg
mov
fisubrs
xor
mov
lods
psubd
push
sbb
and
shll
cmp
mov
mov
mov
lret
dec
fwait
sub
xor
add
bound
push
jmp
sti
jecxz
imul
sahf
pop
add
cltd
adc
jle
popf
arpl
lods
mov
dec
aam
icebp
out
popa
or
mov
int3
inc
push
mov
arpl
mov
popf
push
pop
shll
dec
sub
jne
scas
push
jg
push
call
pop
ret
dec
push
testl
or
outsb
jbe
jle
pop
push
insl
mov
mov
mov
mov
nop
and
fcomps
aam
xchg
fsubrl
inc
hlt
sbb
push
rcll
mov
adc
icebp
push
adc
into
sti
mov
jbe
pop
push
insl
hlt
add
add
or
or
sub
ja
or
pushf
test
loop
jne
mov
lea
jg
xlat
pop
xchg
fldenv
flds
xor
jae
push
mov
xchg
jge
cmc
std
cmp
loop
mov
push
push
xchg
test
sbbb
inc
add
sub
sbb
mov
sub
pop
cwtl
stc
add
ds
int
jp
repz
mov
fs
jg
sub
les
enter
shlb
mov
into
loopne
dec
push
inc
push
dec
sbb
aaa
push
in
and
or
fdivrs
popa
stos
call
inc
ja
pop
sub
add
stc
iret
fwait
or
dec
dec
add
xchg
test
pop
mov
pop
xor
inc
sbb
xchg
gs
dec
pop
ja
xchg
fistpl
jae
dec
out
jno
cmp
insb
lock
out
jl
inc
or
repnz
rclb
insl
pop
adc
pusha
les
cmp
mov
lea
add
add
sbb
hlt
inc
enter
pop
stos
dec
cmp
loope
jo
mov
sbb
pop
jne
sti
mov
dec
and
stos
jo
imull
fidivrl
jecxz
xchg
fisubrs
and
cmpsb
push
sar
lcall
adc
shld
cmp
pop
inc
mov
int3
pop
insb
jns
mov
icebp
jl
sahf
jge
stos
xor
jmp
sub
insb
add
pop
arpl
inc
lods
inc
lret
push
pop
cmp
je
push
mov
xchg
iret
idivl
jns
xor
pop
xlat
xor
lahf
adcb
out
xchg
ljmp
cs
int
rolb
mov
fsubr
hlt
sub
fs
sub
lds
repz
js
mov
out
or
dec
jb
xchg
es
cmp
jno
mov
pushf
fcmovbe
arpl
inc
pop
sub
popf
shrb
cmp
xchg
jae
jl
push
pop
std
test
imul
xor
lods
push
jbe
or
mov
xlat
jae
and
inc
icebp
push
and
pop
pop
in
inc
scas
sub
push
sub
jp
push
sub
iret
test
lret
pop
ret
mov
cwtl
dec
mov
cli
and
ja
push
or
ljmp
ud2
jbe
fadds
jae
lea
lahf
cmp
loopne
mov
ret
jns
push
lret
stos
sbb
jb
fmul
add
pop
into
xor
jo
aaa
xchg
popa
xor
fucomi
cld
aaa
insl
int3
sub
xorl
sbb
dec
xchg
mov
hlt
mov
test
pop
dec
out
data16
pop
cmp
sub
jg
or
xchg
push
mov
test
shll
rol
scas
xchg
sar
mov
testb
fabs
loopne
push
push
jge
popa
push
leave
mov
or
in
push
lds
cmpsl
fimull
fcompl
push
sbbl
xchg
ds
xchg
sub
cmp
popf
addr16
mov
scas
inc
and
add
push
mov
icebp
cmc
lods
movsl
cmp
aam
shrb
dec
mov
insl
mov
sub
sub
in
pop
mov
int3
outsb
out
rorb
jne
dec
add
je
inc
outsb
and
cmpsl
iret
out
shlb
xchg
or
aad
loope
dec
xlat
xor
in
gs
sub
mov
inc
leave
stos
lock
inc
cmpsl
pop
jne
imul
jle
mov
jg
std
cwtl
xor
xchg
cmp
pop
stc
cmc
out
incb
ljmp
stos
hlt
daa
and
imul
aaa
sub
and
jne
in
cmp
out
cmp
std
movsb
adc
pop
mov
arpl
fwait
sti
call
fldt
mov
mov
daa
and
xchg
mov
je
dec
jmp
outsb
xorb
andb
je
imul
pop
jns
cmc
rolb
js
scas
dec
jb
outsb
call
leave
bound
sub
add
popa
push
fucomip
and
push
out
out
dec
sbb
or
daa
in
rolb
addr16
mov
sbbl
pop
xor
std
mov
repnz
xor
xor
push
fistpl
call
jecxz
or
xlat
adc
xchg
dec
ret
dec
xchg
cmp
fisubrl
xor
add
sbb
pop
jbe
mov
cmpunordps
adc
outsb
and
pushf
in
cli
inc
jg
xchg
hlt
pushf
xchg
aam
xchg
lods
push
cmpsb
aas
pop
push
and
in
cmp
add
lret
pop
fisubrl
xor
pop
in
mov
mov
inc
inc
mov
add
add
aas
inc
ja
enter
jo
sarl
daa
or
push
add
jbe
mov
xor
push
data16
rcrb
sub
pusha
cmpsb
loopne
clc
inc
xchg
xlat
mov
sub
xchg
pushf
stos
popf
mov
insl
cmp
inc
add
ja
xor
in
dec
add
outsb
cli
icebp
sbb
pop
add
mov
sub
adc
test
test
pop
jl
cmc
call
cmc
lcall
ja
testl
xchg
jae
pop
fldenv
inc
mov
add
ret
adc
mov
cmp
sub
movsb
xchg
inc
pop
bound
push
xlat
or
std
orb
movsb
scas
xchg
cmp
jle
into
xchg
cltd
pop
in
pop
xchg
fimull
mov
pop
xorb
push
cmp
xchg
lret
sub
loopne
and
push
std
stos
lods
sbb
dec
or
mov
movsl
mov
lcall
pop
daa
stos
ss
jno
shr
push
pop
mov
cld
sub
mov
in
pop
jbe
mov
out
cmc
aaa
push
sbb
pop
enter
mov
adc
insb
jo
jle
shr
stos
push
adc
lret
push
pop
sub
cli
fnstcw
scas
out
xchg
out
mov
sbb
pop
dec
repz
movsl
jo
sarl
jp
mov
aaa
pop
sti
fnstenv
daa
shr
sarl
push
xchg
clc
ljmp
pop
ret
push
scas
add
inc
fwait
add
shrb
lret
mov
and
jge
sbb
mov
add
mov
ljmp
adc
out
fidivrs
loop
sbb
in
fscale
add
sbb
mov
stos
inc
pop
lcall
pop
loope
mov
jp
xchg
cmp
je
test
jge
mov
jge
cmpsl
or
cmp
add
sub
out
pop
mov
inc
sbb
pop
mov
pop
sbb
adc
fcoms
mov
pushf
sub
popa
xor
and
jno
or
push
cmpsl
or
add
push
mov
dec
test
sbb
lods
dec
sbb
or
push
cli
clc
sbb
cwtl
outsl
nop
cmp
cld
cmp
cmc
movsl
pop
cmp
sub
std
dec
jno
jmp
jle
or
loope
call
pop
inc
orb
sbb
xchg
stos
fxch
push
arpl
aad
test
into
and
xchg
cmp
es
ret
push
rolb
dec
leave
mov
rclb
mov
sub
dec
xor
adc
loopne
push
sub
sahf
sbbb
fadds
push
or
fadds
aam
out
mull
mov
xchg
inc
mov
ficompl
dec
mov
sti
lods
js
enter
add
pop
sbb
das
inc
and
mov
jmp
shrb
mov
insb
dec
repz
mov
xor
and
push
sub
cmp
inc
mov
and
xchg
dec
cmpsb
mov
imul
mov
loop
stos
inc
mov
pop
jae
pop
jg
jecxz
jnp
jecxz
call
sub
fsubrl
cmp
in
daa
mov
enter
dec
sbb
mov
out
data16
push
ss
sub
leave
out
sub
dec
scas
mov
scas
test
xchg
jmp
rorb
inc
pusha
push
push
add
cwtl
pop
cltd
cmpl
inc
loopne
pop
inc
jecxz
mov
and
xlat
cmc
add
les
lods
xor
push
add
cmc
or
mov
mov
enter
pushf
imul
shl
sahf
sub
test
sub
sub
aad
je
test
clc
insb
loop
xchg
ja
xchg
push
cmp
movsl
insb
and
mov
lods
lret
out
mov
jp
js
aaa
hlt
and
lret
mov
dec
insl
mov
ljmp
cmp
pop
insb
ss
je
pop
sub
xor
icebp
pop
xchg
xchg
jge
stc
add
lea
xor
xor
jp
je
mov
rcr
js
xlat
inc
sbb
out
cmpsl
xorb
and
iret
ja
rclb
push
dec
inc
stos
push
adc
sti
push
push
insl
xchg
mov
in
push
cmp
out
fs
addb
cld
leave
pop
push
je
cli
inc
sbb
pop
fadds
pop
add
push
popa
ja
xor
pop
sahf
scas
jmp
and
mov
pop
dec
test
mov
jmp
les
xor
xchg
push
dec
and
sub
push
mov
mov
dec
jecxz
add
mov
jle
jp
xlat
rcrb
inc
int3
iret
xchg
mov
mov
or
mov
imulb
cli
or
movsl
mov
shrl
push
lods
and
dec
movsl
or
inc
les
test
pusha
adcb
or
sub
sbb
pop
clc
addl
dec
out
mov
loop
repz
pop
sbb
sbb
in
adc
and
fmuls
adc
inc
stos
mov
jae
mov
mov
push
push
mov
jle
ss
xor
fistpl
cmp
outsl
les
test
adc
xchg
fdivr
mov
fistl
push
stc
ret
fstps
xchg
adc
mov
nop
mov
add
xchg
roll
mov
mov
inc
enter
and
adc
jmp
sub
movsl
mov
in
inc
push
mov
pop
pop
aam
js
pushf
mov
outsb
push
cmp
jnp
fldt
push
sbb
into
out
mov
hlt
andb
aad
shrl
lahf
jo
mov
iret
mov
sbb
fdivrl
adc
sbb
sub
data16
fs
or
sub
into
inc
jl
les
jo
lea
ljmp
mov
aad
push
das
pusha
push
filds
cmc
imul
ss
call
xlat
pushf
nop
into
call
jl
sub
outsl
mov
xor
enter
mov
ds
jne
sub
pop
cmp
pusha
mov
cmp
orl
scas
movsl
iret
pop
or
sub
loopne
rcrb
in
scas
sub
orl
mov
cmp
std
jno
push
sub
addr16
stos
sub
rcrl
shrl
imul
mov
pusha
clc
and
cs
movsl
mov
xchg
bound
lahf
add
inc
xchg
mov
mov
dec
jl
rcrb
and
out
and
call
fs
push
in
scas
lods
insl
cmp
dec
in
mov
push
rclb
pop
jecxz
inc
pop
imul
cmp
xchg
ja
ficompl
je
nop
push
lret
mov
push
ret
int
sbb
ror
dec
pop
jp
out
ror
xor
out
shr
lret
dec
ljmp
adc
pop
mov
ljmp
in
or
jo
mov
test
cmp
xor
cmp
jb
sub
cmp
cmp
mov
cwtl
xrelease
jnp
inc
dec
lods
leave
sti
shl
adc
jno
inc
fists
jbe
scas
jne
out
out
mov
xchg
cwtl
das
aaa
outsb
fdivrs
fs
adc
icebp
addr16
shr
stc
pop
into
dec
mov
jg
mov
xor
mov
or
cmc
dec
jp
cltd
loope
arpl
icebp
sbb
sbb
ret
xchg
ds
jge
rcrb
cs
mov
sbb
mov
xchg
outsl
sti
mov
push
aaa
imul
cmpsl
loopne
imul
in
and
jne
cwtl
lcall
scas
stos
lock
mov
inc
sbb
mov
xor
cmpl
pop
lock
add
pushl
dec
xchg
add
push
clc
in
cwtl
int
cld
stos
xchg
enter
mov
aas
std
lahf
pop
mov
add
hlt
stos
mov
aam
hlt
pushfw
pop
fisubs
das
dec
pcmpeqb
repnz
into
dec
mov
popa
int
bound
sbb
outsl
in
push
js
mov
and
add
cmovnp
lcall
loop
inc
fcmovb
sub
ror
hlt
stos
icebp
pop
cmp
cwtl
icebp
sub
and
popa
iret
lahf
cmp
cs
push
add
dec
mov
pop
add
ja
dec
jge
movl
xchg
negb
jne
push
insb
ret
adc
clc
inc
in
clc
xor
cmp
popf
icebp
xchg
mov
push
hlt
push
sti
dec
shrl
sahf
jne
lahf
dec
iret
jl
iret
repnz
cmc
mov
jb
dec
addr16
test
fisttpl
push
ficomps
jno
pushf
cmp
mov
mov
sarb
aas
inc
repz
inc
das
push
sub
cmp
call
push
mov
add
mov
in
pop
sti
sbbl
pop
cmpsl
int
mov
or
popa
jl
or
dec
xchg
mov
jmp
pop
jno
lock
add
and
ret
data16
adc
mov
js
add
xor
pop
fidivrl
dec
mov
jns
dec
mov
sub
sub
add
lahf
les
pop
jp
mov
dec
mov
pop
cli
jecxz
inc
mov
push
loope
mov
xchg
xor
add
lods
mov
test
hlt
mov
bound
das
sub
pop
mov
cmc
dec
pop
adcl
rorb
cmp
or
les
pop
push
ret
aaa
cmc
lds
mov
xchg
out
xor
and
pop
test
and
inc
mov
dec
jge
jae
outsl
cmp
mov
adc
scas
cmp
fs
fadds
mov
mov
xchg
push
adc
jno
inc
mov
aaa
lcall
mov
mov
jb
jge
fdivp
pop
sbb
nop
call
cmpsb
adc
aaa
and
addr16
shrb
jae
test
or
sub
scas
imul
xlat
xor
fcomi
jo
inc
sahf
dec
push
dec
rorb
jo
repz
mov
sahf
mov
lret
lret
sbb
aam
mov
nop
sahf
push
sub
adc
jecxz
sbb
jnp
xor
hlt
lahf
sbb
xor
pop
ljmp
into
push
ja
mov
std
inc
test
add
inc
push
cmp
movsb
and
sub
insl
sub
inc
push
sbb
adc
pop
shlb
xor
push
shll
sub
int3
fcompl
hlt
push
sbb
adc
dec
scas
inc
push
ret
inc
adc
sub
sub
mov
mov
stc
pop
out
and
xlat
lret
inc
and
out
cmpsl
xor
test
xor
jae
ss
es
ret
pusha
ja
imul
adc
jb
es
daa
jnp
mov
nop
sbb
or
mov
cmp
adc
dec
pusha
mov
cmp
add
hlt
pop
lahf
test
lret
dec
dec
jmp
je
negb
xchg
push
mov
mov
ss
cmp
lret
sub
mov
and
xlat
push
push
iret
xchg
add
test
jge
aas
fmuls
xor
sub
jno
negb
mov
jno
xchg
pop
inc
or
push
test
xchg
jg
orb
ret
test
inc
jmp
add
add
pop
xlat
fs
sbb
fidivl
mov
adc
aas
test
hlt
lods
imul
repnz
pop
cli
pop
inc
imul
xor
jge
addb
cmp
mov
mov
mov
hlt
xor
xor
mov
movsl
mov
adc
leave
loope
jmp
xchg
pusha
or
loopne
incb
push
std
push
in
xor
negb
sbb
pop
push
or
je
ljmp
inc
push
jae
test
jle
push
les
fs
sub
xchg
pop
int
subb
and
ret
pushf
mov
xchg
and
xchg
cmp
mov
pop
mov
je
and
pop
sub
nop
mov
mov
aad
test
lcall
cwtl
mov
clc
mov
pop
dec
push
push
jecxz
pop
repz
movsl
or
push
lahf
dec
mov
cli
std
shl
sbb
push
or
nop
jbe
in
add
test
std
lods
cmp
sbb
push
inc
rolb
mov
pop
call
mov
out
imul
lods
lahf
cmp
push
xchg
push
jb
roll
add
jge
push
xor
rcrl
mov
flds
sahf
jp
push
xchg
pop
jmp
imul
push
or
mov
push
data16
lea
add
popf
in
repz
rcll
mov
xchg
testb
aaa
ds
ss
hlt
popf
call
test
bnd
xchg
sub
pop
cmp
outsb
or
or
out
cltd
repnz
adcb
addr16
adcl
lahf
out
cmp
les
outsb
roll
ret
std
and
xchg
adc
xor
sbb
push
push
xor
into
add
int
jecxz
sti
push
mov
imul
imul
call
imulb
jo
bound
out
arpl
mov
add
stos
xor
pop
or
pop
xor
push
adc
jp
addl
jnp
out
int
sub
xorl
pop
sub
push
popa
add
insb
xchg
jbe
lock
mov
jne
mov
add
and
pop
dec
jg
icebp
mov
cmp
sbb
les
add
call
daa
in
and
in
arpl
pop
ja
sub
pushf
jg
mov
std
sbb
int
mov
jnp
push
fistpl
pop
mov
cmpl
pop
cli
pop
pop
sbb
mov
pop
xchg
outsl
sbb
xchg
hlt
xchg
lahf
xor
add
push
push
pusha
shrl
xchg
cmp
aam
adc
inc
mov
adcl
loopne
ja
subb
popf
std
ljmp
push
push
test
aaa
mov
xor
fisubrs
daa
jnp
mov
loope
dec
iret
dec
fcmovb
pop
inc
jae
push
je
shr
jp
ret
aam
ss
ss
cwtl
add
mov
xor
jl
test
mov
imulb
mov
fsubrl
dec
inc
xchg
out
mov
movsl
lret
sbb
push
push
sbb
push
ljmp
lock
dec
imul
leave
xor
loope
mov
ficomps
mov
mov
sbb
jle
xchg
sub
inc
mov
test
pop
mov
mov
rorl
cmp
test
mov
cmpsl
or
cmp
xor
mov
mov
lds
mov
loop
mov
push
mov
pop
lods
mov
test
stos
and
jae
clc
popf
out
sarl
adc
mov
jmp
add
add
cmp
ss
divb
add
mov
xchg
mov
cltd
pop
inc
jno,pt
mov
in
inc
cmp
or
outsl
aaa
popa
add
push
sahf
xor
dec
leave
loop
shll
jg
fildl
aas
ss
pop
dec
repnz
mov
cwtl
int3
jecxz
jp
lret
addb
ds
stc
sbb
jb
sbb
cmpsl
jns
les
out
xchg
rcl
xchg
fisttps
and
cmp
sub
dec
mov
pop
cmc
pushf
dec
stos
cmp
xlat
int3
mov
jg
cld
fadds
push
out
sbb
cmpsb
jmp
jne
adc
push
dec
jmp
jae
pop
push
lea
imul
push
mov
sub
pop
loopne
adc
mov
jle
out
shlb
adc
repz
rcl
mov
jb
mov
pushf
dec
les
fstps
jmp
xchg
test
push
je
loope
movsl
lret
push
orl
mov
pop
and
adc
jp
arpl
add
dec
pand
imull
sub
xor
xor
aaa
mov
ret
mov
xor
or
push
or
pop
insl
movb
dec
xchg
jge
addr16
push
jo
or
mov
add
push
aaa
mov
cld
into
mov
dec
push
cmp
aaa
or
dec
iret
stos
negl
aam
jne
ja
and
jbe
lock
lock
inc
out
shlb
sbb
push
jl
inc
xchg
outsb
out
jmp
push
cmp
std
testb
xchg
je
add
sbb
das
xchg
jecxz
decb
inc
sub
mov
inc
shll
adc
jmp
adc
jp
scas
out
or
dec
jg
data16
cmp
jb
cmp
push
sti
rorl
loopne
mov
or
sbb
cmp
xchg
cmp
cmp
popa
cmp
jmp
mov
nop
pop
push
shrb
in
xlat
and
in
add
test
mov
cmp
pop
push
jecxz
dec
imul
stos
sti
or
pop
xlat
sub
mov
sti
lods
fucomp
mov
push
sbb
ret
out
fs
nop
sti
dec
jae
daa
inc
test
mov
mov
xchg
cli
adc
push
in
jne
repz
das
inc
jmp
jp
repz
add
insb
rcll
enter
adc
mov
cmp
fstps
pop
fwait
test
cmp
and
stos
mov
jmp
push
and
mov
mov
sbb
mov
imulb
imul
mov
std
and
xor
enter
xchg
xchg
mov
sbb
jmp
ljmp
jecxz
xchg
in
push
data16
setg
rorb
test
or
lods
push
mov
pop
pmulhuw
negl
jecxz
lods
or
pusha
rolb
negb
test
test
or
xor
and
data16
bound
cli
mov
add
sti
pusha
mov
sbbl
fisttpll
negl
jb
inc
push
lcall
mov
sbb
cld
loopne
lock
xchg
cltd
out
bound
int3
mov
and
jb
js
sub
or
adc
mov
add
add
push
xor
and
pop
sub
mov
add
fnstenv
xor
xor
sbb
cs
sbb
stos
pop
mov
or
lea
sbb
adc
adc
or
push
retw
inc
sub
xor
cmp
aam
popa
mov
cmp
xchg
fbld
enter
cmp
push
sub
mov
sarl
sbb
scas
std
sahf
test
fnstenv
dec
hlt
daa
adc
sub
clc
and
addr16
fwait
orb
adc
xor
sbb
outsb
sahf
or
popa
lcall
rorb
sbb
mov
adc
nop
leave
out
or
mov
mov
xor
arpl
mov
mov
les
inc
std
outsb
mov
lock
into
xchg
xlat
cmp
push
push
push
adc
mov
popa
pop
sbb
sbb
xchg
adc
fdivrs
push
pop
xchg
mov
int3
ss
mov
xchg
cmp
rolb
add
cs
cmpsb
sbbl
int3
out
lcall
adc
mov
or
dec
outsb
rcll
adc
cmpsl
dec
iret
sbb
and
fldenv
imul
popa
pop
mov
pusha
jmp
and
push
cs
and
xchg
xchg
push
xchg
je
push
sub
iret
inc
out
adc
and
inc
aas
bnd
jge
bound
xchg
jle
mov
loope
int3
add
push
mov
aas
jb
divl
mov
cmp
cmp
jb
mov
out
adcb
cli
in
mov
into
xor
je
in
rcll
jge
lods
add
mov
in
sub
mov
xorl
mov
fwait
ds
mov
ds
add
pop
leave
sub
test
jae
rcrb
lahf
inc
ret
cmpl
sub
mov
fldl
cmp
mov
xchg
xlat
pop
mov
jle
mov
fstpl
cld
jge
notl
lock
fwait
stc
aas
dec
pop
je
call
lret
movsb
pop
sti
aam
inc
ljmp
test
fcmovne
push
push
stos
xor
inc
and
sbb
mov
dec
fiadds
xor
push
add
xor
lds
xchg
cmp
outsb
mov
sub
push
pop
push
inc
inc
test
fxch
mov
das
pop
jmp
stos
mov
dec
xchg
mov
cwtl
mov
lds
pop
jg
adcl
fcmovnbe
mov
lods
fcmovnbe
push
shlb
inc
mov
movsl
push
popa
call
popf
mov
test
call
cmp
add
ds
or
stos
sub
jnp
dec
xchg
cmpsl
inc
xchg
sbb
jmp
xor
test
push
fidivs
es
mov
mov
ret
mov
mov
rcr
mov
das
push
insb
sbb
dec
sbb
insb
push
push
cmp
mov
push
adc
rorb
mov
lea
mov
adc
shl
push
inc
adc
jg
sahf
dec
call
filds
mov
pop
dec
pop
outsl
add
jb
push
add
lds
iret
adc
add
add
dec
push
add
lods
xchg
mov
icebp
mov
stos
pop
push
adc
jg
and
scas
mov
adc
pop
int3
push
pop
movsb
ja
mov
clc
inc
xor
dec
cmp
jne
add
push
cmp
push
cmpsl
lret
in
ret
outsb
adc
cltd
aad
jns
or
or
push
inc
sub
push
pop
repz
mov
in
arpl
adc
adc
fdiv
mov
je
dec
ficompl
jno
int
mov
aaa
cltd
adc
jecxz
lcall
or
dec
xchg
or
jnp
aaa
scas
out
push
int3
shl
push
int
mov
sbb
pop
jbe
mov
dec
scas
jae
mov
or
gs
mov
or
add
cld
sub
mov
sbb
test
and
daa
mov
jne
fwait
or
es
pop
inc
mov
cmp
test
int
lret
ror
pop
push
mov
lcall
fwait
dec
sbb
rorb
mov
cmp
imul
mov
aad
pop
cmpsl
mov
out
sbb
and
jmp
xchg
fistps
notb
pop
dec
lods
push
xor
push
mov
jecxz
mov
sbb
aas
jbe
std
cmp
std
xchg
loope
push
xor
push
and
adc
fcoml
or
or
jns
pop
hlt
enter
pop
cmp
inc
cltd
inc
sub
push
or
pop
sbb
notl
sahf
pushf
ljmp
sub
icebp
das
pop
inc
aad
repz
mov
pop
clc
call
ss
mov
testl
push
ss
je
lahf
das
lock
cmp
ds
call
or
push
jbe
mov
fistpl
lret
push
jl
inc
adc
outsl
xlat
movsb
sbb
mov
ljmp
mov
lret
xor
icebp
inc
lea
mov
roll
pmaxsw
lahf
lds
fimull
jno
adc
or
mov
inc
sar
fucomp
int3
jnp
xlat
push
mov
jo
daa
cli
xchg
inc
pop
popf
sbb
add
inc
out
cld
and
and
scas
sub
push
in
inc
aas
or
loope
sub
cmp
adc
dec
inc
push
dec
jno
cmp
fs
maskmovq
idivl
jo
cmpsb
mov
cs
pusha
mov
sub
jo
lret
pop
loop
and
pop
fildll
shrl
push
cld
fcoms
pop
or
inc
cwtl
pop
scas
cltd
dec
or
push
push
push
push
repz
enter
dec
pop
mov
lds
mov
int
iret
pushf
mov
mov
push
mov
outsl
lcall
pop
cli
insb
mov
mov
pop
out
xchg
xor
mov
iret
sbb
sarl
sub
push
leave
mov
mov
into
dec
pop
mov
and
sbb
inc
jnp
cmp
pop
ret
lods
lcall
fnstcw
stc
shll
xchg
jae
fwait
add
test
icebp
test
out
fisubrs
inc
mov
cld
imul
cmp
imul
test
fucom
cli
repz
insl
arpl
pop
cs
mov
ds
sub
loope
enter
shll
mov
sbb
dec
out
out
pusha
sti
inc
jl
xchg
mov
in
cld
icebp
push
fstpl
les
push
test
scas
in
push
ror
sbb
testl
pusha
xor
dec
push
sub
ljmp
iret
out
adc
inc
ds
in
mov
xor
lods
ds
rcll
test
push
in
lret
ret
orb
and
jae
pop
arpl
xchg
mov
push
jo
sbb
pop
ja
jge
pushf
jecxz
cmp
xchg
std
enter
stos
dec
les
cs
pop
adc
push
nop
and
sub
adc
ja
mov
mov
aad
mov
stc
pusha
xorb
push
fildl
mov
cmpsl
mov
push
add
cmp
sub
insb
inc
adc
and
imulb
pop
push
in
insb
iret
ret
and
dec
and
pop
enter
mov
imul
subb
cmp
jge
push
and
inc
cld
jae
popa
pushf
jne
or
mov
sub
lret
mov
sbb
pop
cmpsb
xlat
inc
pushf
fstpt
sbb
ds
mov
xchg
enter
scas
mov
stos
dec
lret
jecxz
insb
jp
popa
cld
lods
jl
push
adc
fildl
sbb
ret
cli
scas
adc
xchg
mov
inc
lods
dec
stos
test
jp
push
add
enter
xor
push
jb
fimull
ret
jmp
testb
push
inc
fisttpl
lret
imul
sbb
mov
imul
and
lcall
adc
call
mov
movsl
ss
jae
push
lahf
mov
aaa
adc
jb
xchg
ffreep
push
dec
adc
push
je
imul
subl
shrb
inc
mov
out
xor
dec
add
pop
xchg
enter
fidivs
int
das
lret
shl
jl
mov
scas
and
test
inc
adc
push
out
inc
shl
loope
pop
mov
ficoml
push
loopne
sbb
inc
mov
clc
inc
call
in
rcll
jmp
mov
dec
sahf
clc
and
mov
push
cmp
jns
jnp
mov
dec
fisubrs
push
jl
cli
adc
push
je
inc
adc
loop
fldcw
push
leave
mov
mov
cmp
cmp
ret
xor
gs
mov
pop
aaa
push
mov
mov
outsb
les
popf
push
fstps
or
ficoml
imull
addr16
lods
sub
inc
cmp
out
adc
dec
adc
sbb
leave
jb
insb
ret
dec
adc
xor
in
jns
mov
jns
call
sub
loop
mov
inc
dec
cmp
mov
rcrl
call
addl
add
lods
jns
stc
jmp
push
dec
jb
xor
or
data16
and
mov
movl
xchg
int
cmp
stc
insb
in
mov
popl
pusha
xchg
ret
sub
cmc
fisubrl
push
popa
and
or
pop
lret
orl
sbb
pop
lret
adc
and
sub
loope
pop
and
icebp
test
in
gs
ret
and
add
loopne
add
dec
sbb
icebp
bound
shlb
xor
or
movsl
test
or
xor
test
les
mov
mov
dec
scas
jns
mov
mov
mov
push
jb
loop
adc
int3
xchg
aad
not
mov
push
jns
sti
dec
out
dec
mov
xchg
cld
dec
xor
rcrl
mov
xchg
out
popa
sbb
pop
push
movsl
testl
roll
push
pop
idiv
lds
sbb
imul
add
push
or
outsl
xchg
sub
adc
push
iret
rorb
pop
stc
popf
mov
mov
xchg
mov
jmp
cltd
test
test
scas
inc
push
test
sub
and
stc
cmp
mov
or
xchg
sbb
adc
ret
hlt
decl
mov
mov
cmp
loope
aad
lds
push
jns
fisttpl
push
jns
out
mov
cmp
ljmp
das
or
cmpsb
inc
cmpsl
adc
jbe
mov
mov
test
xor
jl
test
add
sub
repz
leave
fimull
xor
roll
enter
cmc
arpl
stc
pop
lock
xchg
pop
xchg
fld1
mov
mov
fdivrs
mov
and
sbb
sbb
test
loope
sahf
leave
cmp
jnp
cltd
mov
pop
aam
sbb
xlat
mov
or
addr16
enter
andl
push
lods
pop
inc
into
in
and
add
mov
dec
insb
repz
fcmove
dec
push
xor
in
dec
push
mov
js
loope
dec
dec
mov
mov
pop
cmpsb
mov
in
insb
xchg
pop
fisubl
xor
jns
dec
xchg
loopne
js
xchg
jecxz
adc
push
call
push
stos
outsb
shlb
call
lea
xorb
repnz
mov
cmp
jne
sbb
repnz
les
push
mov
pop
add
and
les
push
xor
int
out
negb
mov
stos
jae
or
lret
shll
movsbl
jnp
add
push
inc
cltd
js
rdtsc
mov
out
ljmp
imul
xchg
loope
sbb
cmp
inc
and
and
jb
xchg
adc
mov
xor
pop
outsl
jge
dec
inc
mov
pop
mov
aam
sbb
pop
cmp
adc
sub
push
mov
in
sbb
dec
jo
mov
push
push
adc
repz
dec
jne
push
dec
mov
push
das
lahf
ljmp
mov
dec
inc
push
xchg
xchg
ds
insb
int3
lds
out
sbb
in
jecxz
add
scas
inc
xchg
fisubs
cmc
lods
fs
lea
les
jmp
push
jo
out
adc
loope
add
rorb
cmpb
fs
ret
jle
popa
mov
repnz
sbb
mov
jnp
mov
sub
sbb
repnz
clc
or
xlat
mov
ret
and
cmp
mov
test
cmp
imul
imul
popf
mov
inc
jns
pop
test
addl
lahf
or
cmp
push
sbb
push
dec
xchg
andw
mov
or
sbb
hlt
loope
lahf
in
cmp
jae
pop
popa
dec
adc
dec
lock
mov
mov
cmpl
test
pop
mov
push
cwtl
jno
mulb
pusha
inc
or
mov
mov
ds
adc
pop
bound
xchg
scas
clc
mov
mov
cmpsb
sbb
sahf
jae
fidivl
clc
mov
ja
mov
push
hlt
cmc
hlt
pop
daa
mov
gs
mov
jmp
jb
outsb
jp
fstps
loope
ja
mov
sub
loopne
icebp
ljmp
stc
call
imul
sbb
fnop
test
stos
xor
or
fstpl
cmp
jl
push
loope
jle
mov
inc
stc
jl
mov
pop
mov
add
mov
repz
das
mov
nop
lahf
xlat
jg
fwait
or
cmp
test
pop
sbb
repnz
mov
and
xor
shlb
shr
pop
aaa
jmp
std
aad
push
lods
rorb
das
cmpsb
mov
shlb
mov
sarl
sbb
std
push
cld
mov
fldt
ret
push
arpl
ljmp
jo
fmulp
cmp
roll
outsb
xchg
or
push
fs
dec
jns
inc
rcrb
pop
lods
in
data16
adc
fildl
cli
out
outsb
iret
lock
or
daa
add
lret
push
inc
inc
int3
in
cs
push
mov
add
adc
jecxz
ret
div
mov
inc
cmp
fildl
jne
or
es
mov
insb
call
nop
add
jb
in
lods
sarl
cmp
shlb
lds
or
adc
aam
xchg
ss
pop
cmp
cmp
push
inc
or
adc
push
pop
out
inc
arpl
mov
int3
mov
or
dec
ficomps
jg
jecxz
add
sub
lods
jbe
out
shr
repz
shrb
push
mov
mov
lods
movsb
fwait
mov
pop
and
jl
xchg
and
push
scas
adc
jnp
mov
mov
fiaddl
dec
cltd
xor
add
jl
mov
mov
lahf
stc
mov
mov
pop
jmp
sbb
insl
leave
pop
sub
jnp
xchg
das
mov
scas
aas
push
dec
mov
cld
adc
ja
loop
in
mov
addr16
push
push
jno
push
popa
lret
mov
or
cld
and
imul
xchg
sti
jo
add
mov
inc
mov
enter
push
outsb
adc
jmpw
out
jnp
in
lea
sub
lds
or
dec
imul
out
shll
pop
out
push
clc
pusha
scas
mov
lods
jmp
xor
add
mov
xorl
dec
repnz
fsubs
std
cmp
stos
dec
inc
jmp
add
or
push
jo
mov
cli
shrb
xor
std
push
or
fnstenv
xchg
or
das
xor
mov
jne
scas
out
test
cmc
pop
pop
jl
and
cmp
cmp
rcl
sti
mov
sbb
bound
scas
rcrb
add
mov
xor
push
in
insb
mov
inc
push
imul
sbb
sbb
insb
sub
add
iret
dec
jecxz
es
out
orl
xor
push
lock
xchg
ret
ds
jp
add
xlat
lock
adc
bound
jo
dec
inc
bound
stos
xchg
jle,pn
lcall
adc
push
adc
jecxz
jno
into
ds
scas
cmc
call
idivl
sbb
lahf
sbb
out
and
pop
data16
lea
inc
push
xchg
xchg
inc
mov
pop
aas
imul
cmp
jecxz
inc
or
jg
push
ret
mov
out
or
pop
arpl
ret
repz
sbb
int
outsl
mov
hlt
add
pop
push
imul
stos
mov
into
sub
sbb
daa
repnz
gs
inc
mov
cs
sbbl
cmpsb
ss
movsb
sub
xor
negl
mov
mov
jno
or
jbe
xchg
mov
mov
pusha
pop
divl
xor
push
stos
and
iret
adc
out
fldcw
in
jbe
stos
sbb
shll
push
lret
idivl
mov
jns
lret
test
fsubrs
jnp
jns
scas
lds
lods
add
pop
inc
movsb
or
adc
adc
hlt
cmc
adc
daa
dec
add
or
inc
inc
mov
cmpsb
xor
mov
ret
mov
xor
lock
xchg
mov
pusha
insl
sarl
ss
and
jp
lcall
mov
notb
jle
sbb
lods
or
mov
xchg
mov
lds
icebp
fdivs
dec
or
and
imul
loope
sti
cmp
gs
repnz
pop
ja
dec
test
jmp
jno
cmc
pop
pop
sub
jp
sbb
xlat
arpl
xchg
jne
pop
or
pusha
mov
xchg
cmp
mov
or
add
adc
fwait
and
mov
sbb
cmp
mov
jmp
push
jnp
sbb
jp
push
mov
mov
gs
xchg
cmp
jb
sbb
insl
mov
test
orl
xor
jl
cmp
addr16
pop
or
lahf
enter
jns
std
xchg
adc
and
push
and
xchg
dec
push
xor
dec
mov
mov
pop
enter
xchg
in
movsb
adc
frstor
pop
push
cld
insb
outsl
lods
sbb
clc
pop
sti
xchg
cmp
push
jle
cmp
sbbl
push
sti
movsl
shrl
mov
mov
je
into
and
scas
adc
or
adc
jecxz
sbb
cmp
enter
nop
hlt
pop
or
sub
nop
mov
sbb
sub
mov
sar
sub
ss
popf
lds
das
js
jp
mov
cli
push
jmp
imul
cli
mov
dec
aaa
add
ret
cli
dec
imul
mov
push
push
jnp
pop
pop
insb
mov
and
push
leave
adc
or
ljmp
mov
or
data16
dec
xor
popf
lods
mov
pop
inc
inc
mov
call
pop
or
cmc
mov
sbb
das
sbb
pop
and
or
repz
outsl
outsb
loope
mov
pop
arpl
cmp
lret
lret
add
mov
adc
cli
mov
daa
pusha
sbb
adc
sahf
mov
je
mov
push
mov
test
in
popf
bound
das
jnp
adc
sub
adc
xor
xor
popa
inc
lret
add
sbb
leave
add
xchg
fcoms
cmpsl
push
shll
movb
fcom
inc
xor
outsb
adcb
xchg
out
lret
arpl
sub
shll
xchg
and
mov
jg
in
dec
rorl
dec
cmpsl
scas
adcb
aad
cmc
out
and
shlb
inc
and
subb
insb
fidivrs
inc
shlb
adc
orl
dec
loopne
jg
insl
push
sbb
dec
adc
pop
jno
rorb
gs
mull
inc
xor
rorb
ja
pop
test
aas
mov
pop
dec
sbb
mov
jp
pop
jb
leave
pusha
dec
pop
mov
mov
mov
push
or
adc
fistl
xchg
sahf
fbstp
shll
loop
sar
mov
xor
jl
sbb
enter
lods
dec
mov
pop
xchg
xor
fs
sub
lock
mov
cmp
or
pop
xchg
mov
sbb
mov
mov
mov
push
and
int
jo
sbb
jno
dec
adc
jns
mov
hlt
shl
ret
jns
notl
or
mov
ficompl
sbb
jg
add
aad
mov
test
sbbb
aas
mov
mov
jno
notl
out
lods
mov
push
out
mov
dec
cltd
cli
fsubr
add
inc
dec
mov
iret
shrl
sahf
loopne
std
addb
sub
lods
adc
mov
and
in
mov
outsb
cmpsb
pop
dec
lds
stos
add
test
or
fmull
cmpl
sar
adc
xchg
sub
or
in
cmp
das
js
mov
jg
loopne
adc
push
mov
into
shll
ds
mov
mov
lret
and
insl
sbb
push
mov
push
mov
mov
out
dec
dec
mov
ljmp
in
inc
cmp
mov
scas
sbb
mov
add
jmp
dec
mov
nop
inc
arpl
rcrl
int
repnz
addr16
jne
clc
or
sbb
inc
mov
or
lods
adc
xor
daa
pusha
pop
mov
fwait
cmp
into
jb
mov
fsubl
fidivrl
scas
or
mov
inc
out
cwtl
dec
xor
das
neg
fimuls
jp
out
jl
jae
sbb
sub
leave
mov
rcrl
or
cmp
test
insb
push
jnp
dec
sub
inc
pop
fdiv
int3
shl
andl
dec
inc
cld
pop
rcrb
add
or
cvtps2pd
out
int
dec
loope
pop
inc
popf
out
sar
test
adc
das
daa
dec
mov
xor
push
sub
inc
mov
in
and
out
test
xor
mov
rcrl
std
xchg
scas
bsf
push
dec
inc
into
sub
loop
xchg
mov
lods
out
stc
mov
rorl
mov
mov
and
scas
mov
xor
in
shrb
das
lds
dec
sub
test
rcrl
cmp
cmc
lock
enter
mov
test
cmp
inc
adc
cmp
jnp,pt
testb
xlat
pop
clc
shl
outsb
repz
xor
cmp
cmp
push
mov
test
xor
cltd
add
adc
or
das
jp
cmp
xchg
fidivrs
inc
jp
out
and
sarl
xor
inc
cwtl
shrl
icebp
cmp
mov
loopne
adc
scas
nop
pop
mov
pusha
stos
int
dec
ljmp
call
xchg
sub
cmp
inc
and
mov
int3
mov
adc
jne
andl
mov
jns
sbbl
mull
repnz
fcmove
es
cs
adc
or
pop
aaa
jecxz
dec
icebp
xor
cmp
iret
neg
movsl
arpl
and
scas
inc
mov
pop
cmp
popa
mov
pop
jmp
jbe
stos
jmp
xor
movsl
loope
and
lods
nop
and
dec
iret
nop
fstpt
test
pop
mov
push
adc
mov
ljmp
loop
jle
std
mov
leave
std
fstl
mov
hlt
aas
out
xor
pusha
les
xlat
and
cmpsb
iret
sub
clc
cltd
lock
xchg
sbb
pop
sti
fwait
ret
out
mov
aad
cmp
lock
mov
daa
popf
dec
add
daa
shr
push
add
dec
add
and
fwait
cmp
mov
clc
push
cld
repnz
inc
lock
lods
sbb
out
pop
sbb
add
testl
decl
pusha
mov
push
push
mov
mov
shll
rcll
cmpsl
mov
push
out
mov
xchg
mov
mov
mov
sbb
fiadds
into
adc
sbb
std
nop
mov
jb
pop
dec
xchg
lahf
scas
mov
adc
push
enter
out
ret
out
je
aas
or
int
scas
xor
int3
dec
push
data16
imul
test
arpl
test
mov
jb
mov
xchg
std
inc
cmpsl
sbb
les
adc
sbb
xlat
jb
cmp
test
and
lds
in
and
andps
je
inc
cli
ja
inc
cmp
rol
cs
sbb
pop
call
adc
loopne
cmp
push
inc
mov
loope
xchg
and
push
das
pop
jge
cmpsb
mov
out
add
pop
push
xchg
or
xchg
std
dec
or
test
daa
xor
add
mov
and
or
orl
xor
sub
mov
xor
mov
mov
xchg
loope
push
mov
aas
dec
std
xchg
add
aam
icebp
lods
sub
xchg
shll
bound
outsb
fidivrs
arpl
fcoml
xor
cld
fstpt
jbe
out
xor
xchg
pusha
jle
adc
leave
sub
inc
das
jnp
or
iret
jbe
inc
cmp
push
mov
xchg
pop
jg
loope
dec
sbbb
add
outsl
dec
clc
push
xlat
lea
das
fs
imul
mull
fistps
dec
movsb
add
xlat
popa
or
or
inc
not
lcall
dec
movsl
pushf
inc
loope
inc
outsl
mov
outsb
fsubl
das
sahf
ret
dec
jne
push
push
adc
and
jnp
ds
mov
mov
xor
cltd
imul
out
mov
pop
cmc
insl
mov
dec
mov
fisttps
out
int3
sub
push
inc
hlt
roll
jp
jp
cmc
fsubrs
mov
xlat
mov
in
sbb
js
dec
sub
sbb
cmp
or
pop
loope
push
push
dec
int3
repnz
and
adc
or
adc
je
mov
dec
adc
mov
daa
fistl
mov
repnz
aas
mov
shrl
pop
add
rolb
hlt
insl
pop
cmp
cmp
ret
inc
or
xchg
aaa
imul
push
fistpll
mov
rorb
pop
add
cmpsb
mov
mov
dec
mov
pop
sub
or
xor
push
stos
sub
imul
js
in
adc
or
push
addr16
ret
adc
mov
ja
sub
loope
loop
stc
stos
in
ljmp
flds
adcl
push
pop
out
pop
fs
mov
fsubs
cmpsb
dec
clc
mov
test
or
lods
imul
xor
loopne
lods
jns
add
lds
lcall
xchg
cltd
leave
dec
lret
in
mov
fiadds
movsb
and
sub
addr16
ljmp
in
repz
andl
enter
jge
aad
cmp
std
mov
inc
test
jmp
inc
clc
rcll
test
mov
ret
pop
fs
adc
dec
out
fs
cmp
cmp
sahf
lds
xor
fsubrp
outsl
pop
roll
ret
adc
popa
xchg
dec
jp
xor
or
push
add
ss
into
addl
mov
jnp
xchg
pop
das
mov
mov
es
push
sub
and
addr16
pop
mov
dec
dec
inc
stc
insl
rcr
push
cmp
mov
aad
inc
sbbb
imul
loop
out
ljmp
xchg
push
adc
and
sbb
ret
adc
add
cmp
rcr
sub
push
adc
dec
pop
sbb
pop
arpl
nop
adc
inc
mov
sbbb
aam
add
adc
mov
add
imul
xchg
loope
or
push
les
inc
movl
cmc
fdivr
jl
pusha
ret
push
push
mov
and
mov
test
imul
jl
mov
into
lahf
add
dec
xchg
xchg
jge
insb
ss
cmc
stc
stc
pop
cmc
mov
cli
adc
mov
mov
aam
xlat
aas
sbb
jnp
cmp
inc
roll
or
sub
push
in
mov
in
outsl
push
cwtl
mov
mov
and
lods
movsb
mov
mov
cmc
or
fwait
adc
and
repz
out
dec
jmp
jnp
fs
in
or
mov
jge
push
push
add
pop
bound
mov
leave
outsb
push
leave
jno
mov
jecxz
in
in
xor
push
fxch
jge
mov
out
fmull
sbb
test
pop
adc
mov
cld
sub
or
add
stos
mov
cmc
fadd
cmc
adc
inc
test
gs
out
call
add
xor
sub
push
inc
repz
int3
repnz
push
sar
sub
push
call
xor
enter
adc
aas
or
test
mov
and
mov
jb
cmp
push
shll
or
std
bound
roll
cmpsb
mov
jp
test
pusha
jnp
push
mov
inc
xchg
les
cmp
xchg
aam
add
and
je
or
fsubs
xchg
adc
mov
inc
mov
xchg
adc
pop
xchg
lahf
test
and
call
scas
dec
sbb
mov
sbb
jnp
cmp
cmpsb
clc
inc
sbb
push
test
pop
fwait
dec
ss
lret
int
int3
add
or
pop
mov
jecxz
hlt
cmp
cmp
cltd
shll
sub
push
pop
mov
mov
arpl
jecxz
add
movsl
jbe
xchg
push
int
test
mov
or
pop
and
out
adc
popa
mov
or
sub
test
push
pop
cmpsb
adc
and
pop
aam
pop
rorl
testb
inc
fdivs
or
data16
cmp
fwait
mov
repnz
nop
sarl
fsts
out
ret
xor
testb
lea
test
cmp
cmp
fidivs
cli
xchg
cmpsl
mov
push
sbb
add
fcmovnb
ja
sahf
adc
cmc
roll
pop
pop
adc
lret
div
add
jg
jl
cs
add
cwtl
insl
mov
xchg
adc
pushf
cld
xchg
pop
xor
orl
sbb
mov
pop
out
xchg
icebp
std
mov
inc
add
scas
push
jge
xor
imul
cmpsb
icebp
inc
lcall
dec
es
hlt
ret
mov
xor
jle
mov
aam
mov
scas
pop
pushf
mov
pop
push
jp
testb
andl
stos
cmpb
push
cmp
lods
fs
mov
inc
and
and
pop
push
mov
adc
sbb
jae
std
xor
es
push
iret
dec
xchg
sub
xchg
mov
add
popa
push
add
lods
sub
push
jae
xchg
out
ljmpw
sbb
lds
imul
movsb
push
lcall
fdiv
dec
insb
and
xor
xchg
das
push
aaa
xchg
jmp
add
mov
mov
xchg
mov
jno
ja
add
push
stc
imul
pop
dec
dec
jl
sub
pop
add
pop
shll
cmp
cmp
xchg
jp
bound
outsb
int
push
or
add
lds
in
mov
lahf
es
aad
cmp
push
xchg
ss
lds
pusha
mov
mov
push
jbe
push
imul
xchg
mov
or
push
cmpl
dec
add
fistps
movsl
jns
lods
jns
call
ljmp
loopne
pop
mov
sbb
mov
dec
and
adc
mov
lock
fsubs
dec
movsb
mov
lea
add
or
cmp
cmc
push
cmp
jle
dec
mov
aas
bound
fbld
pop
jb
rorl
icebp
adc
lret
sub
xchg
lods
testb
aaa
popl
mov
shlb
or
push
sub
xor
cmp
cmpsb
testb
cwtl
test
jbe
mov
arpl
cltd
xchg
mov
or
insl
inc
adcl
nop
push
in
dec
mov
cmp
jns
xor
ljmp
mov
jmp
ljmp
xchg
mov
push
mov
lcall
cmp
push
mov
or
cld
divb
jge
cmpsl
pushf
leave
outsb
aam
cld
ss
aas
xchg
pop
cmp
flds
dec
imull
jne
rorl
es
out
pop
test
fsubr
push
push
xlat
scas
cmp
cmp
mov
aas
pop
shlb
xchg
sbb
mov
lds
adc
xlat
mov
jg
sub
testb
test
repz
cmp
or
loope
test
repz
xor
push
imul
leave
inc
push
adcl
faddl
pop
loopne
in
lods
ss
call
jmp
hlt
divl
icebp
bound
pop
ret
pop
jne
out
adc
scas
fists
mov
jmp
mov
test
sbb
jmp
mov
sti
jmp
xor
fcompl
jnp
xlat
test
fabs
push
cli
sbb
jo
adc
sub
push
inc
out
into
int3
pop
jmp
add
xchg
leave
xchg
mov
xor
inc
lahf
movsl
lahf
jmp
pop
dec
stos
lods
add
ret
and
rol
add
rolb
xchg
clc
roll
popf
mov
or
pop
test
dec
dec
mov
jmp
fnsave
js
jg
sub
xchg
popf
popf
mov
xor
mov
sahf
mov
out
iret
jecxz
mov
xchg
lahf
outsb
aas
shll
mov
xchg
jmp
cmpsb
pop
jno
adc
hlt
rclb
loop
das
pop
jecxz
sub
sarb
xchg
and
adcl
movsl
mov
sub
add
and
and
push
sbb
stos
es
cmp
and
adc
mov
mov
adc
out
sub
mov
jle
push
xor
stc
ds
notb
or
inc
inc
scas
lahf
test
and
icebp
xchg
mov
das
or
add
fs
fcoml
iret
notb
test
mov
imul
cmp
inc
dec
shll
sti
add
insl
inc
lahf
dec
jecxz
imul
mov
inc
pusha
ja
pop
sbb
hlt
lea
pop
xchg
xrelease
push
scas
fstps
enter
into
outsb
xor
es
cmp
pcmpgtd
fidivs
xlat
adc
push
jbe
jb
dec
inc
push
ss
ss
lcall
addr16
jae
jge
cmc
xchg
add
jge
cmp
out
cmp
jb
gs
sub
dec
sti
inc
mov
repnz
pushf
and
mov
push
inc
lret
bound
aam
push
hlt
fstps
xor
and
fwait
mov
inc
lcall
out
jmp
or
inc
xchg
cs
xchg
jns
mov
jg
lahf
inc
and
fistpll
aas
mov
insb
int3
in
push
das
lods
inc
jle
lods
mov
push
sub
inc
in
punpcklwd
lahf
popl
stos
lret
sahf
adc
dec
sbb
gs
and
sbb
insb
imull
and
shrl
xchg
mov
sub
jp
push
mov
aaa
pop
xchg
pop
leave
into
lods
inc
mov
xor
mov
ja
imul
xchg
mov
mov
imul
inc
jg
fnstsw
jbe
fiadds
outsl
inc
dec
clc
clc
xor
cwtl
xor
xchg
lret
cmp
cmp
push
push
dec
rcrl
das
je
addr16
inc
mov
jae
ja
testl
fstps
mov
addr16
pop
popf
enter
add
xchg
lcall
push
fwait
add
test
pop
xor
mov
cmp
mov
fdivrs
cmp
aas
xchg
pop
in
inc
orb
mov
push
cs
and
mov
and
push
add
add
xor
push
fwait
bound
sti
out
lock
sbb
ds
or
cmp
inc
jno
mov
adc
ljmp
add
mov
mov
lahf
push
and
pop
mov
sub
or
fdivl
cmpl
cmovo
fs
pop
lahf
xlat
adc
adc
sbb
addb
lods
loop
jbe
push
outsl
out
ret
mov
lock
jbe
sahf
xor
dec
sti
sarl
mov
pop
jno
sbb
dec
sub
idivl
jg
out
nop
pop
inc
mov
jp
insl
jb
jle
addl
jl
add
pop
aaa
leave
cmpsb
pop
cmc
rorl
inc
mov
xor
pop
mov
sbb
gs
sbb
xchg
inc
cltd
pop
sbb
push
addr16
and
sti
out
out
mov
fstpt
mov
sub
jp
dec
js
and
shll
rcl
mov
insl
xchg
ret
mov
cmpsl
ficoml
or
sub
pop
jnp
stos
inc
pop
dec
cld
push
pusha
xor
mov
arpl
outsb
adc
outsl
xor
hlt
pusha
xor
stc
jo
sbb
mov
jmp
out
push
sbb
pop
cld
loope
push
lahf
scas
cwtl
xchg
and
shlb
test
pop
xchg
gs
ja
lahf
mov
lret
inc
jmp
xchg
lahf
lcall
jmp
lods
cli
out
jbe
jecxz
test
or
push
cmpsl
adc
cli
dec
arpl
subb
loop
dec
pusha
lahf
scas
sbb
sbb
lea
out
out
movsl
and
int
into
movsl
mov
nop
inc
in
xchg
test
inc
enter
in
leave
stc
loope
js
xchg
mov
jo
sbb
sbb
int3
clc
je
daa
xchg
stc
loope
sub
jg
pop
fs
inc
xchg
cmp
scas
mov
xchg
popa
mov
bound
mov
lods
movhps
in
sub
movsl
arpl
outsb
push
adc
jbe
repz
dec
lds
mov
mov
in
cmp
fs
mov
jne
mov
aad
xor
call
imul
mov
xor
sub
sbb
pop
push
movsl
mov
add
sub
and
fstpt
jmp
add
mulb
sbb
lretw
sub
insl
mov
or
mov
sbb
xor
inc
jnp
jl
jp
in
and
xor
or
mov
add
xchg
jbe
inc
jns
mov
and
dec
sti
xor
adc
sbb
out
sbb
movsb
outsl
call
adc
pusha
movsl
stos
and
add
xor
pop
das
mov
and
movsb
jmp
push
lods
cmp
sub
adc
addr16
mov
or
subl
mov
lret
aaa
gs
or
pop
es
push
jns
push
movsl
rcll
outsb
jns
pop
jle
adc
hlt
fisttps
in
data16
inc
pop
call
inc
cwtl
int
pop
sbbb
out
dec
and
dec
fmuls
pushf
addb
cmc
stos
test
or
sub
sbb
inc
mov
adc
xor
ljmp
or
adc
repnz
mov
imul
hlt
dec
xor
jnp
idivl
jne
rcrl
hlt
test
jge
pop
gs
or
dec
pop
mov
xchg
call
pop
hlt
or
sarl
pop
lcall
stos
push
sahf
or
ja
lcall
sbb
movsb
mov
ret
jecxz
pop
pop
jno
jmp
repnz
dec
outsb
into
daa
jmp
push
mov
inc
add
mov
leave
ret
sbb
add
add
mov
mov
push
jnp
pushf
insb
cmpsb
out
mov
xchg
sbbb
jno
or
and
or
adc
cmp
cmp
xor
push
stos
cmp
dec
das
cmp
ljmp
pop
movsb
aad
sbb
adc
xchg
and
sahf
into
arpl
addr16
pusha
scas
xlat
in
stc
js
xor
mov
into
cld
and
mov
push
or
mov
mov
pop
add
push
aas
xor
mov
fs
and
add
xor
cmp
leave
push
dec
sarb
lcall
test
mov
sbb
int3
mov
mov
pop
pop
xchg
flds
test
push
sbb
ljmp
push
das
decl
pop
lock
cld
mov
stos
ss
sahf
sub
and
outsb
popa
mov
aaa
push
xor
sub
mov
cmp
dec
movsl
rcr
inc
xchg
mov
pop
mov
ds
push
xor
loop
dec
push
inc
add
add
and
add
loope
add
sub
jge
lock
or
push
jno
std
mov
cmp
mov
stos
out
mov
scas
mov
pop
mov
push
mov
ljmp
out
sbb
rcrl
mov
icebp
call
adc
pop
push
or
sub
add
filds
xadd
pop
inc
inc
push
cmovo
ja
lock
inc
mov
or
sbb
xor
imul
jle
pop
dec
jg
xor
cmp
leave
or
enter
out
loopne
test
pop
jb
pop
push
cli
popa
xor
rclb
int
and
in
cmc
sti
popl
adc
jb
movsb
fstl
inc
fisubrs
jno
pop
or
xor
dec
in
call
and
pop
inc
lahf
inc
mov
negb
push
xchg
rcl
pop
jae
insl
mov
daa
jge
loopne
inc
shlb
xor
adc
and
add
xchg
int3
cwtl
aaa
jbe
scas
enter
inc
xchg
mov
xchg
movsl
mov
mov
xor
loopne
mov
push
imul
lds
mov
fisubrs
add
inc
xchg
mov
push
and
leave
cmp
lods
sub
aaa
out
jo
push
mov
loop
jp
insb
test
das
out
jo
loopne
addr16
push
stos
lret
dec
pavgb
rol
clc
or
fisubrs
stos
add
lahf
xchg
jecxz
aam
mov
sti
iret
int3
xchg
out
push
jnp
sub
in
push
push
mov
ret
mov
ds
sub
push
jo
and
imul
and
call
notl
test
and
test
or
xchg
sbb
mov
inc
jecxz
adc
movsb
push
ss
roll
push
je
xor
mov
into
das
mov
xchg
nop
adc
sub
or
xor
popf
or
jl
xor
stc
push
adc
lret
lcall
fimuls
mov
and
mov
out
imul
in
mov
sub
mov
xor
push
cwtl
ja
mov
pop
inc
negb
clc
push
loop
bound
jmp
out
xchg
add
fwait
mov
add
mov
sbb
in
sbb
iret
cmpsl
sbb
in
js
aaa
pop
cmp
in
pusha
loopne
out
fstps
and
xlat
addr16
push
leave
insb
loop
loope
sbb
ja
ja
imul
inc
sub
cmc
mov
xchg
add
mov
sub
enter
inc
push
and
addr16
idivl
sbb
es
xor
scas
push
pop
insl
xchg
xor
mov
mov
sbb
sti
rolb
mov
leave
sbb
test
xchg
push
jae
add
rclb
lds
popa
jb
data16
cmpsb
stos
movl
cmpl
lret
ficoms
xchg
jge
cmp
idiv
push
pushf
adc
push
xor
xor
sbb
lock
push
ja
dec
push
mov
mov
adc
fs
pop
inc
rclb
cmpsl
xchg
and
lds
les
loope
sti
andl
pusha
test
cmc
mov
add
ljmp
dec
pop
or
arpl
ss
push
push
cld
cmp
pop
loop
sub
inc
dec
adc
rcl
mov
ja
mov
inc
xor
dec
sbb
pop
xor
cltd
or
out
jo
jecxz
push
mov
mov
mov
loope
dec
mov
stc
xchg
mov
imul
stc
adc
mov
pop
call
add
repz
out
push
jns
mov
leave
and
arpl
jns
popf
pusha
sub
popa
pop
aam
lret
inc
mov
fwait
imul
xor
adc
call
pushf
adc
jl
ret
mov
aaa
inc
xchg
xor
mov
ret
xchg
pop
lods
sbb
cmp
lock
clts
or
mov
xor
mov
inc
cmp
rep
pop
inc
lock
popa
js
jb
ds
adc
vpunpcklbw
aas
rcl
jnp
jl
dec
int3
fisubrl
sbb
ljmp
mov
mov
cltd
push
arpl
test
adc
inc
adc
add
dec
neg
test
ljmp
pop
sarl
ret
xchg
xor
scas
hlt
cwtl
popf
loopne
pop
jecxz
ds
sub
lcall
movb
xchg
push
test
mov
xchg
mov
pop
jmp
xor
pop
cmc
int3
testl
sbb
xlat
mov
add
push
jbe
jmp
iret
insb
cmp
mov
imul
orl
mov
or
dec
sbb
add
inc
scas
rorl
mov
out
sbb
cltd
pushf
dec
mov
inc
dec
mov
or
ss
in
nop
or
adc
sub
and
push
ficoml
test
mov
xchg
cmp
pop
movsl
jns
nop
js
jmp
test
in
sbb
push
jnp
adc
fists
mov
rcl
outsl
ljmp
dec
mov
arpl
dec
cli
loopne
mov
sbb
das
dec
jg
fsubs
fsubrl
loop
and
add
rclb
out
cltd
cli
hlt
out
scas
push
dec
in
jle
inc
push
or
pop
ffree
popf
dec
add
roll
mov
sub
cmp
loopne
repz
xlat
rolb
inc
or
or
pop
add
in
gs
xlat
xor
movsb
shl
sbb
inc
insb
mov
jp
sub
cmp
adc
dec
movsb
adc
lods
add
sahf
push
sbb
jae
mov
or
or
or
add
daa
jno
mov
jecxz
ss
or
ja
mov
dec
push
sub
mov
je
cmp
and
je
sbbl
lods
and
dec
jge
mov
fbld
pop
jnp
call
enter
xchg
xchg
cltd
cmp
jle
pop
mulb
adc
adc
ss
xchg
ret
lret
pushf
fldl
icebp
sti
mov
gs
xchg
jo
mov
es
sar
mov
inc
pop
cmp
xchg
jne
dec
aaa
out
aam
test
inc
adc
bound
xor
jmp
fwait
icebp
adc
vpsubw
pop
add
xor
pushf
mov
sub
add
pop
rcrb
and
pop
mov
test
out
cwtl
and
sub
jb
mov
hlt
cs
fnsave
lods
pushf
or
push
and
mov
push
push
repnz
xchg
inc
fs
cmp
addr16
sbb
and
mov
or
push
mov
adc
sbb
cmp
ja
push
shlb
sub
pop
or
xlat
cs
es
jo
inc
pop
bound
leave
divl
imul
add
rorb
lods
test
pop
test
and
dec
out
jo
stos
inc
and
test
pusha
sbb
in
dec
in
mov
or
xor
insb
insl
cmpsb
mov
leave
imul
das
scas
test
rcrl
clc
xchg
das
dec
test
dec
sti
test
mov
add
enter
pop
idiv
push
xchg
cmp
jae
inc
push
std
test
stos
mov
mov
jo
lds
pop
rclb
jg
pop
je
in
or
cmpsl
testl
dec
imull
jecxz
negl
lahf
cmpsl
mov
jb
popa
ljmp
je
adc
cltd
cmp
test
hlt
incb
outsb
mov
test
repnz
stos
test
inc
cltd
lret
popa
sub
inc
in
popa
loopne
sarl
in
es
inc
inc
fisttps
mov
push
sub
addr16
xor
jae
fs
ss
pop
pop
daa
sub
popa
shrl
mov
clc
mov
pop
ret
and
rcl
dec
incb
xor
mov
insb
fnstcw
inc
xlat
adcb
lods
fwait
dec
push
jl
push
lahf
mov
in
repnz
cli
loope
xor
sub
xlat
outsb
lock
fstps
xor
mov
jge
mov
imul
lock
adc
cli
lock
mov
mov
jo
mov
mov
add
jno
sub
add
int3
mov
hlt
pop
jb
pop
mov
gs
or
mov
xor
jp
mov
fimuls
je
jle
pop
cmp
sti
mov
inc
les
inc
or
aas
out
add
or
jp
push
xchg
cmpsb
mov
jle
sub
xchg
cmp
es
and
clc
dec
xor
cmp
mov
stos
scas
cmp
jp
incb
test
mov
inc
in
and
inc
cmpsb
stos
sbb
or
shl
push
xorb
xchg
push
push
mov
pop
pusha
dec
nop
sub
adc
fdivrl
and
dec
mull
fists
sbb
add
aas
std
xchg
loope
popf
xchg
dec
pop
mov
sbb
loopne
out
mov
fildl
shl
pop
push
in
cld
sbb
pop
mov
decb
add
jb
sar
dec
adc
push
pop
dec
lds
mov
or
pop
xor
loopne
dec
dec
lcall
arpl
sub
mov
jp
or
popf
jns
add
popf
mov
and
adcb
inc
or
xchg
lretw
and
pop
popa
or
shrl
jo
or
xor
cmovl
pop
pop
rorl
mov
out
jb
mov
push
fildl
aad
daa
in
sbb
cmp
push
shll
inc
and
inc
mov
mov
pop
and
xor
pop
xchg
test
in
int
and
iret
xchg
sbbb
pop
cmc
xlat
jno
popf
ljmp
outsl
pop
mov
mov
push
mov
pop
mov
mov
sub
pop
addb
stc
cmp
cmpsb
mov
pop
mov
dec
jnp
fsubl
sbb
popa
xchg
test
daa
std
and
sbb
dec
xchg
or
fs
flds
lock
or
xor
mov
fnstenv
cs
icebp
jae
dec
scas
adc
scas
jb
mov
jle
mov
pop
xchg
xchg
push
notb
xchg
popa
lret
add
cmpsl
mov
mov
pop
repz
dec
aas
mov
mov
add
xorb
push
sbb
repz
adc
cmp
and
or
mov
outsl
mov
test
mov
mov
xor
sahf
push
pop
push
jle
and
push
rol
ret
mov
ds
push
ret
sarb
aaa
pop
dec
dec
stc
xlat
aam
sti
sbb
out
lret
out
mov
or
inc
sbb
divb
nop
out
mov
jge
mov
cmpsb
dec
andb
dec
mov
roll
mov
lcall
xor
pop
je
lret
sub
fldl
test
shll
shl
mov
dec
jg
inc
mov
lret
push
out
fldl
lock
fndisi(8087
sub
test
cmp
mov
sbb
fsubr
mov
xchg
test
mov
aas
adc
in
mov
ret
rolb
outsl
mov
sub
sti
dec
inc
test
xchg
mov
mov
mov
inc
enter
rcrb
fadd
sub
das
enter
popf
cmpsl
xchg
sub
rclb
outsb
add
mov
ffree
shll
arpl
cmpl
xor
adc
cwtl
and
sbb
sub
inc
push
jl
cld
adc
xchg
push
addl
sub
subl
fadd
nop
js
cmpsl
push
into
out
lea
sti
repnz
ficoms
pusha
popa
cmpl
lcall
dec
jmp
in
dec
push
sbb
imul
pop
dec
imul
sahf
add
daa
popf
adc
stos
outsl
dec
and
nop
add
xchg
loop
mov
and
sub
iret
fisubrs
out
out
test
or
push
test
sub
cmp
lods
xchg
mov
ja
pop
add
imul
cltd
daa
in
inc
sub
insb
jns
add
fsubr
jle
in
pop
or
pop
orl
pop
push
lret
mov
lret
cmpsb
loop
popa
stos
jne
jo
aad
idivb
test
iret
cmc
sub
pop
enter
jp
mov
sub
movsl
decb
adc
adcl
sahf
fstp
out
mov
dec
mov
and
leave
bound
gs
test
mov
cmpsl
daa
fucom
fidivl
lahf
pop
dec
xchg
cmpsl
adc
xor
push
inc
mov
jbe
imul
or
sbb
leave
lret
repnz
pop
rorl
gs
add
arpl
xchg
outsb
test
out
scas
and
jb
lcall
push
out
jne
in
xchg
mov
xchg
call
mov
nop
sub
les
sahf
stc
data16
cmp
pop
stc
pusha
jns
popa
and
int3
insl
or
or
push
stos
mov
sti
in
xchg
mov
sar
mov
mov
aad
push
int3
push
jp
jmp
fldenv
add
xchg
add
mov
arpl
sbb
cmp
sti
imul
fwait
add
adc
lahf
loope
aad
inc
lock
jnp
pusha
iret
pop
pop
pop
fucom
cld
pop
imul
mov
and
mov
push
gs
push
xchg
ljmp
add
movsb
push
push
adc
dec
pop
sahf
fmull
xchg
push
xchg
loopne
jno
jle
dec
call
shlb
aaa
pop
out
call
mov
js
lcall
test
xor
and
cld
lds
sbb
pushf
pushl
int
and
sub
sbb
hlt
xor
es
mov
sti
push
cmp
lahf
ficoms
jbe
sbb
push
imul
push
push
mov
dec
inc
stos
lgs
or
stc
mov
loope
sub
mov
jnp
and
aam
jne
fisubs
out
lcall
push
icebp
cmp
imulb
or
sbb
cwtl
and
out
iret
or
mov
rorb
insl
push
or
cmp
dec
and
push
lret
ljmp
jo
popa
pop
add
jno
testl
stos
rcll
rorl
jmp
std
ljmp
xor
cmp
stc
mov
cli
inc
jecxz
call
mov
dec
loope
je
imul
mov
stc
in
loop
dec
jp
test
or
fnstenv
sub
xor
int
sub
xlat
divl
mov
jp
sahf
fldl
adc
test
iret
mov
sub
pusha
and
pop
repnz
sbb
and
jg
inc
xlat
adc
push
inc
and
mov
std
xorl
adc
xchg
pop
arpl
stos
cld
add
push
mov
sti
mov
push
xor
in
xchg
and
mov
sbb
add
gs
or
dec
sbb
cmpsb
jns
addl
and
dec
shl
mov
mov
ljmp
xlat
xchg
push
push
and
lret
lahf
dec
inc
mov
in
push
pop
icebp
gs
sti
jae
xchg
out
cltd
xchg
xchg
inc
mov
jp
jbe
ja
sarb
inc
fwait
in
pop
outsl
nop
jge
pop
mov
jae
fistpl
dec
mov
enter
shl
push
xor
xor
jbe
sub
sbb
fcoml
rcl
or
ss
addb
aam
adc
add
inc
mov
repz
xlat
mov
cmp
cmp
roll
and
repz
dec
js
loopne
ret
bnd
out
dec
nop
and
movsb
sub
inc
test
lods
cmp
jge
and
xor
inc
or
push
test
cli
lea
push
cmp
mov
test
arpl
hlt
dec
inc
jge
rcr
ret
pop
mov
xchg
pusha
or
mov
rcr
call
call
pusha
cmpl
cmp
pop
jno
or
cmpsl
pop
adc
or
and
sbb
sub
xchg
or
imul
fsubl
xor
mov
mov
dec
jae
addr16
adc
sub
call
mov
stc
clc
lcall
stos
popa
mov
popf
pop
pusha
sub
mov
xor
out
push
icebp
dec
mov
aas
enter
sti
sub
imull
test
cmc
outsb
cwtl
and
mov
jno
lock
repnz
das
in
incb
rcll
lcall
jp
int3
nop
nop
cmp
jmp
data16
push
jp
mov
loop
test
shlb
jecxz
cmpsb
mov
lret
dec
nop
cmp
pop
pop
in
bound
test
adc
int
aas
inc
sbb
lcall
push
sbb
pop
xchg
shrl
add
and
repz
pop
pop
and
lock
mov
out
popf
push
pop
adc
sub
mov
or
jne
cmp
cmp
adc
dec
xchg
or
jmp
out
ja
mov
pop
into
fwait
scas
and
mov
bound
popa
lea
icebp
add
rorb
in
loop
xchg
push
add
cmp
pop
aam
lea
ja
push
pushf
xchg
sbb
pop
sub
or
lea
pop
stc
jp
push
out
inc
lcall
xchg
scas
pushf
arpl
push
add
inc
shrl
das
pop
pop
xor
mov
mov
jle
sub
ss
pop
xchg
stos
push
sarb
fstpl
xchg
jecxz
shrb
icebp
or
scas
mov
dec
or
cmpsl
imul
sti
decl
pop
inc
fistpll
jnp
pop
lock
aaa
inc
mov
aad
ja
sbb
mov
mov
lea
mov
cmpsb
adc
mov
adc
mov
and
lea
lock
into
xor
push
fdiv
insl
or
fnstcw
sti
imul
insb
lods
pop
and
dec
mov
mov
pusha
addb
add
mov
dec
push
fmuls
mov
adc
jge
movsl
ror
pop
mov
inc
data16
cmc
pop
test
loop
xchg
cwtl
shlb
fdivs
call
js
push
dec
add
mov
pop
lea
push
cmpsb
add
test
and
js
jmp
sbb
insb
out
ret
dec
dec
adc
sub
dec
sub
data16
xchg
jbe
jmp
sahf
xchg
enter
xchg
mov
xchg
rol
iret
fimull
cmpsl
stos
xchg
nop
push
cmc
inc
or
xor
insb
insl
insb
in
add
add
stos
mov
push
adc
xor
xchg
or
push
mov
es
or
pop
sbb
je
mov
adc
outsb
mov
pop
push
je
in
add
mov
mov
call
fsubl
testl
fdivrl
fidivs
fidivl
stos
loope
rorl
pop
lods
loop
dec
int3
sub
jle
call
xor
mov
test
or
sub
test
mov
xor
clc
iret
xchg
or
popf
pop
iret
mov
sbb
pusha
mov
push
lods
mov
loope
push
mov
mov
xor
xchg
ljmp
outsb
mov
gs
imul
es
adcl
scas
jmp
fwait
into
ja
dec
inc
test
xchg
push
jne
push
in
mov
sub
push
jmp
rorl
inc
cmpsb
mov
and
xchg
test
popf
dec
mov
into
lcall
cmc
movsl
xor
sbb
add
aad
inc
ss
fdivs
dec
xor
inc
test
mov
jne
adc
sub
imul
dec
inc
adc
mov
lea
xchg
dec
jmp
ss
cwtl
sub
ljmp
int
and
test
outsb
mov
cmpsl
jmp
cs
xchg
popf
mov
jb
jbe
aam
add
pop
lea
xchg
lcall
je
xor
lds
mov
pushf
bound
lahf
mov
scas
pop
out
xchg
mov
stos
dec
push
adc
sbb
lcall
lods
sub
lret
loopne
js
adc
cld
pop
lahf
push
popa
in
inc
xor
sbb
in
insb
add
outsl
aam
sbb
mov
out
jb
dec
lcall
rorl
scas
call
xchg
dec
out
pop
push
scas
jns
scas
push
add
aad
nop
cmp
fimuls
test
out
mov
push
sub
push
mov
ja
stos
jno
add
mov
sbb
ret
lods
orl
in
stc
pop
sti
nop
test
xchg
push
adc
inc
add
cltd
xchg
jae
arpl
aad
cltd
inc
enter
cmpsl
xchg
addr16
fisubrs
lock
pop
insl
push
adc
rclb
and
dec
test
testb
dec
andb
sub
jecxz
cmp
and
loop
rorl
loopne
jmp
sbb
adc
jno
fnstsw
stc
mov
sbb
popa
or
fdivl
adc
ljmp
hlt
pop
sbb
sub
aam
stos
cmp
pop
jo
ficomps
cmpsb
mov
pop
subl
sbb
rcll
fistpl
mull
and
addr16
ret
mov
into
pop
pop
fwait
out
push
aad
sahf
sbb
sahf
mov
xor
jo
cltd
and
xor
mov
dec
cmp
bound
inc
mov
jno
fdivrl
fmuls
das
mov
pop
dec
ja
sahf
sti
popa
enter
mov
repnz
mov
nop
pusha
push
stos
pop
pop
rcrb
rcrb
jle
mov
loopne
inc
lahf
fdivrl
mov
cmpsb
ja
frstor
jecxz
adc
jbe
dec
xor
repnz
mov
xor
test
mov
pop
sahf
inc
das
fildl
xor
and
hlt
movsl
sub
jno
xchg
xor
jmp
lret
in
fs
mov
mov
adc
pop
bound
pop
pop
inc
and
mov
push
movsb
inc
test
xor
ljmp
push
or
or
rorb
dec
mov
fildll
imul
mov
loope
cmp
cmp
cmp
inc
cmp
out
and
or
cltd
mov
mov
js
lahf
ja
int
push
pop
xorb
mov
push
cltd
or
cli
loopne
sbb
in
mov
aam
xchg
add
push
stc
cmp
iret
inc
pop
dec
adc
inc
mov
lods
fsubrl
push
jns
fwait
in
push
xor
leave
or
inc
shll
aas
jbe
rcrl
stc
xchg
outsb
pop
jge
js
mov
fidivl
adc
movsl
jge
aas
ret
lret
in
adc
push
lock
fnstenv
pop
iret
shrb
scas
push
jae
cmp
aaa
pusha
push
jae
hlt
out
sbb
jl
lret
dec
leave
dec
repz
adc
and
cmpsw
pop
pushf
xlat
jo
ds
or
cs
call
cs
jl
mov
dec
ficomps
loopne
or
pop
jns
sub
cmpsl
cmpsw
adc
xchg
xchg
jl
cld
aaa
fnstenv
cli
push
xor
imul
adc
pop
arpl
outsl
cmp
fmull
mov
cmp
cmp
dec
repnz
aad
mov
adc
ja
xchg
sub
mov
mov
loope
jg
sti
call
cld
scas
and
icebp
notb
scas
dec
std
cli
in
jbe
push
inc
push
inc
sarb
call
in
dec
test
fisubs
jbe
fld
outsb
dec
or
mov
cmp
mov
les
je
fldcw
xor
rolb
roll
lret
int3
enter
fcmovbe
inc
lock
jecxz
xchg
imull
or
jno
mov
add
adc
loop
lds
push
or
adc
mov
int
mov
add
jne
incb
mov
pop
jge
pop
mov
xor
fstps
mov
mov
mov
in
adc
pop
loop
xor
sub
test
adc
testl
pop
adc
mov
repz
ds
mov
pop
jg
aas
subb
xchg
mov
and
lret
ret
sarb
movsb
arpl
pop
cmpsl
push
repz
sub
jmp
stc
mov
outsl
jmp
shll
outsb
idivb
stos
cmp
mov
mov
and
cmc
stc
xchg
sub
add
xor
mov
sti
outsb
pushf
subl
jno
movsl
xor
mov
ss
jno
in
xor
test
xchg
cmp
mov
cmp
mov
jp
or
pop
dec
ja
mov
cli
ret
push
fwait
loope
movsb
mov
sub
mov
pop
ljmp
or
test
pop
dec
sub
ljmp
pop
insb
adc
fs
int3
xor
jne
movsl
pop
push
push
mov
stc
scas
andb
scas
mov
cli
fistpll
mov
std
jne
cld
mov
popf
jae,pt
shrb
sub
add
test
enter
push
std
clc
or
xor
push
addl
sub
jns
inc
mov
in
pop
and
inc
ss
out
cmpl
and
xor
sub
in
pop
adc
push
js
dec
stos
in
add
mov
xor
movsb
enter
push
lret
pop
push
mov
test
nop
addl
cmp
scas
add
cmpsb
mov
mov
xchg
dec
mov
das
and
test
push
add
mov
add
test
cmpsl
inc
popf
scas
and
cltd
fidivrs
and
inc
je
push
adc
insl
push
mov
dec
xlat
in
and
inc
ret
cwtl
pushl
mov
out
stc
lds
jp
incl
mov
push
or
mov
stos
test
sbb
repz
movsb
xor
out
aam
jecxz
push
dec
je
add
in
mov
jl
cwtl
icebp
ja
jae
cli
push
loope
mov
mov
or
shr
into
cmp
mov
mov
imul
xchg
lea
xorb
or
mov
sub
mov
les
mov
pop
mov
xor
fdivp
stc
or
mov
push
scas
mov
push
jg
stos
xchg
pop
cli
and
adc
outsb
push
iret
and
fmuls
jp
cmp
gs
lret
les
cld
shll
punpckldq
jne
xchg
cmp
jb
imul
icebp
icebp
aam
adc
scas
mov
pop
int3
filds
in
mov
fdivrs
cmpsl
or
in
cmp
xor
add
push
jecxz
jnp
cmpsb
and
mov
das
lods
inc
mov
test
aas
pop
mov
or
adc
cmp
cwtl
scas
mov
pop
pop
or
jno
adc
dec
xchg
out
xchg
movsl
cs
fidivl
movsl
mov
cmpsb
adc
inc
mov
jmp
insl
imul
das
push
repnz
add
mov
and
outsl
jge
jo
notl
nop
xor
pop
sbb
jecxz
inc
cmp
pop
fsubp
push
hlt
mov
push
add
jle
pop
rcl
xor
enter
mov
xor
mov
sbb
or
in
dec
lret
orl
test
or
in
mov
lret
cmp
cs
jg
and
in
adc
xor
pusha
sti
sub
outsb
pop
cmovge
fs
cli
xor
jg
test
aaa
mov
sahf
dec
dec
jnp
inc
shrl
out
dec
cmp
insb
fcoms
add
mov
ja
hlt
xor
mov
test
and
pop
out
adcl
daa
ds
ficoml
es
into
pop
rolb
fcomp
les
xchg
into
sbb
push
loop
add
test
mov
jae
addl
xor
mov
jbe
nop
mov
pop
leave
xlat
sbb
test
add
sub
sbbb
and
sub
xchg
adc
xchg
pop
xchg
daa
ret
adc
cmp
stc
iret
sub
xor
jne
pop
pop
negb
jbe
hlt
mov
daa
ret
stos
pushf
in
dec
inc
xchg
jp
mov
stos
jp
lea
inc
outsl
ds
test
imul
test
xchg
mov
pop
xchg
jo
shll
sbb
data16
or
ja
dec
or
or
push
aam
jl
jae
push
orb
ja
jmp
sub
xor
outsl
jae
es
or
test
pop
xchg
aas
jl
fistl
pop
sar
inc
das
jle
mov
add
push
ds
mov
cmp
aas
dec
dec
outsb
or
cld
lds
jp
xchg
loopne
dec
mov
sahf
adc
movsb
push
in
arpl
mov
jecxz
out
sub
sbb
inc
aaa
inc
pushf
pushf
fwait
bnd
sbb
pop
adc
cmp
ror
inc
pop
or
dec
aaa
add
faddl
and
mov
pop
loop
and
lea
inc
fs
sbb
es
inc
repnz
sub
les
jae
cwtl
mov
test
hlt
mov
jns
sub
pop
sub
cltd
and
popl
popa
xchg
jp
xcrypt-cfb
cmpsl
popa
jne
std
ja
xchg
inc
popa
or
je
in
mov
xor
dec
add
ret
or
xchg
xor
mulb
adc
outsb
xor
mov
jnp
and
aam
push
lods
push
sbb
dec
test
mov
gs
dec
inc
nop
das
lods
testl
pop
mov
xor
adc
xor
clc
int
mov
bnd
push
sub
icebp
mov
dec
arpl
test
add
lahf
ds
pop
mov
push
xchg
loopne
pop
mov
in
or
lock
test
test
test
mov
mov
fiaddl
insb
pop
stc
jg
push
insl
sti
inc
rcll
pop
in
inc
xchg
lods
js
xchg
rclb
lret
aas
pop
popf
bnd
hlt
xor
jg
adc
and
divl
xlat
addr16
jle
pop
out
mov
cmp
clc
shlb
mov
pushf
rcll
dec
mov
jecxz
push
jp
pop
mov
cli
outsl
scas
mov
insl
addr16
push
clc
pusha
ljmp
imul
aas
xchg
dec
lret
aas
adc
mov
fwait
rol
daa
mov
in
xchg
mov
andl
jne
cmpsb
mov
jecxz
mov
and
mov
mov
addl
scas
test
xchg
rcrb
out
iret
insl
jno
test
xor
insl
test
fisubl
ret
lahf
and
negb
scas
outsb
fimuls
dec
dec
sahf
scas
jl
outsb
add
daa
xchg
movsb
dec
clc
mov
xchg
jbe
sbb
jo
insb
sub
int
pusha
add
sarb
push
roll
xorl
xor
adc
jp
jle
mov
ror
or
lcall
or
add
xchg
mov
xor
clc
mov
ret
cmp
and
js
mov
or
mov
popf
int3
xchg
pop
and
lods
lods
fldz
xchg
push
sahf
cmpsl
cmp
or
cmp
xchg
jbe
inc
enter
push
xor
lcall
or
xchg
fnstsw
push
push
aad
pop
rcrb
std
jbe
movsl
fstpt
xchg
push
push
pop
icebp
fcmove
dec
scas
sub
stc
push
adc
mov
stos
jmp
mov
adc
fnstsw
cmpsb
mov
add
lea
lock
adc
push
iret
cmc
sub
sub
in
fisubl
push
inc
icebp
sbb
or
adc
sub
repnz
add
or
js
into
xchg
inc
inc
push
fidivrl
cld
out
jbe
incl
mov
repnz
and
xchg
loopne
xchg
daa
adc
push
ja
loope
cld
and
mov
jecxz
popf
sbb
or
jle
dec
inc
and
fadds
xor
daa
add
je
add
add
mov
xabort
or
cmc
std
aad
lcall
jb
movsb
mov
jae
sub
jl
cmp
push
pop
fldcw
negl
xchg
pop
mov
mov
enter
add
movsl
addr16
int
arpl
movsb
lods
mov
pop
rcrl
ds
mov
out
cmc
adcl
jecxz
mov
stc
sub
fisttps
cli
lods
xorb
jne
mov
enter
push
add
pushf
add
mov
pop
cs
or
in
insb
arpl
iret
push
ljmp
and
into
push
int3
push
xor
ss
pop
cwtl
sbb
stc
and
add
stc
adc
or
xchg
lret
cmp
pop
insl
icebp
jbe
pop
or
push
xchg
sub
cmp
or
andl
mov
dec
mov
stos
mov
and
lods
inc
inc
push
sbb
xor
mov
scas
ret
subl
fidivs
mov
adc
out
aad
xor
cmpl
pop
pop
sub
dec
jns
mov
dec
ret
jle
pushf
lds
lahf
ds
jb
pop
lea
dec
mov
cmp
cs
orl
aam
pusha
iret
push
dec
jnp
test
mov
jns
inc
sbb
push
outsl
adc
lret
call
outsb
pop
or
mov
mov
push
in
aaa
mov
shl
lea
dec
out
or
aad
push
push
lahf
jecxz
add
or
or
and
jbe
hlt
fdivrs
jmp
pusha
test
cmp
jae
lds
in
std
ret
repnz
inc
or
push
mov
mov
adc
out
loope
test
mov
jge
and
add
sbb
cmp
inc
push
sar
nop
clc
mov
fs
out
mov
jecxz
lret
gs
mov
pop
jmp
mov
add
lahf
cmp
imul
sbb
ficoms
aaa
mov
lahf
pop
loope
mov
cwtl
in
cmp
xchg
or
ja
and
pop
jnp
push
xor
jno
cmp
iret
dec
sub
mov
or
imul
leave
je
mov
jo
pop
leave
in
jmp
imul
icebp
sbb
or
out
popf
mov
cltd
sub
psubq
inc
int
les
repnz
lock
in
fisubl
mov
test
out
and
mov
jl
jl
mov
int3
lret
xor
stos
mov
jmp
js
jle
repz
movsb
xlat
mov
sub
cmp
cli
lock
mov
andl
xorl
mov
jns
cmpsl
sbb
test
fcompl
adc
sub
rclb
cmpsb
sar
popa
jl
sub
nop
aam
lock
mov
out
pop
xchg
mov
test
ret
out
lret
fs
out
lahf
insl
add
adc
or
ja
in
test
es
pop
pop
das
stos
stos
inc
cmp
in
fldt
stos
sbb
pop
jo
rorb
pusha
xchg
adc
stc
pop
sub
movsb
int3
pop
jns
xchg
sub
arpl
pop
enter
or
sahf
xor
repz
rclb
jecxz
jae
mov
leave
es
xor
xlat
or
cmp
or
mov
loop
adc
mov
mov
or
sbb
in
jmp
test
mov
fildll
and
mov
mov
add
rorb
loope
aaa
sahf
jb
std
mov
lret
std
sbb
or
cli
cmc
movsl
sbb
insl
ljmp
aam
lcall
push
push
bound
sub
and
repz
pop
xchg
sub
sub
int
lcall
aaa
fsub
dec
pop
jns
ret
add
and
mov
jae
or
call
mull
fnclex
pop
popf
out
mov
xor
xchg
push
and
dec
or
mov
pop
mov
lahf
fstpl
rcll
sub
mov
adc
rcl
loop
mov
cmp
push
add
inc
xorb
hlt
pop
inc
sbb
inc
lods
fwait
testl
scas
xchg
adc
stos
rdtsc
cmc
lcall
jns
mov
outsb
sbbl
sbb
ret
sbb
mov
out
jo
sub
sub
popa
cmp
xor
xchg
or
dec
dec
xchg
into
lahf
loopne
gs
mov
sti
scas
mov
inc
nop
hlt
scas
pop
fstps
adc
sub
lods
ds
stos
bound
repz
sbb
popa
scas
pushf
jle
testl
sbb
ret
fnstcw
es
call
lea
rorb
inc
fwait
call
test
and
adc
sub
nop
sub
jo
xchg
mov
pop
mov
adcl
pop
lret
mov
add
mov
mov
loopne
pushf
loop
je
sarl
pop
arpl
stos
cmp
aam
cmc
cmpsb
pop
sti
orl
ret
mov
or
add
mov
adc
xchg
jle
cmp
divps
adc
jne
sbb
or
out
dec
das
adc
jae
mov
aam
mov
adc
negb
xor
sub
lock
incl
pop
in
sbb
cmpsl
inc
lods
testl
hlt
xchg
and
xchg
fcmovb
pop
pushf
sub
inc
mov
mov
push
shl
divl
iret
ds
jne
inc
leave
sbb
inc
pushf
jnp
push
lds
sub
call
cmp
jo
in
ljmp
arpl
shrb
jge
js
ret
testb
hlt
jle
loopne
pop
sbb
and
fistpll
sub
adcb
mov
rolb
loope
bound
push
stos
repz
dec
movsb
pop
test
push
dec
add
adc
hlt
stc
inc
pushf
sarb
jno
sbbl
and
and
out
les
int3
nop
pop
dec
mov
jmp
loope
andb
push
inc
mov
push
jnp
cld
xorb
pusha
push
mov
mov
scas
stc
movsb
xor
test
repz
adc
mov
out
push
stos
or
lods
lcall
xor
mov
lods
icebp
fwait
jo
aas
jl
arpl
pusha
dec
jnp
inc
mov
js
cltd
dec
fisttps
sbb
pop
fdivs
lock
inc
popf
pop
sbb
dec
inc
nop
and
shll
es
xor
div
popa
jbe
outsb
push
cs
pop
or
iret
les
pop
stos
push
ret
int
subb
lcall
in
ja
div
xor
into
jl
std
inc
inc
mov
xchg
in
mov
mov
call
popf
fistpl
je
mov
mov
shrb
sti
or
outsl
ja
sub
adc
mov
and
addr16
xchg
xor
outsb
mov
push
rclb
add
cltd
incb
mov
mov
imulb
mov
adc
leave
jnp
pop
or
addr16
or
sahf
push
push
cmp
push
jb
push
sub
sub
mov
leave
jp
pop
inc
test
xor
es
pop
adc
pop
int3
sbb
mov
js
stc
pop
dec
sub
leave
stc
call
sbb
dec
das
mov
ds
enter
test
test
dec
dec
push
dec
adc
iret
fsubp
push
inc
insb
fimuls
nop
sub
mov
ret
into
js
movsl
add
mov
sub
mov
out
sbb
cs
push
sbb
xor
lret
stc
mov
cmp
lahf
rep
jns
fstpl
test
mov
push
jno
or
dec
ljmp
arpl
push
push
inc
or
gs
jle
push
gs
push
cmp
ret
add
lods
adc
div
xor
test
mov
enter
stos
mov
xchg
add
ret
sbb
mov
int
adc
movsl
out
stos
push
cmpsl
cwtl
mov
lods
loopne
rcll
cmc
dec
pusha
push
popa
jge
pop
pop
mov
lods
cltd
ret
inc
cmpb
fstps
outsb
flds
or
jmp
or
icebp
xchg
jp
leave
mov
jb
mov
add
ficompl
adc
jno
xchg
push
push
push
insb
mov
mov
mov
addb
aad
dec
mov
lea
arpl
cmp
push
ret
mov
addl
add
xor
into
mov
ja
imul
fsubp
test
mov
xchg
pop
xchg
mov
subb
jg
mov
outsb
pop
push
push
arpl
jo
xchg
adc
mov
inc
lock
sub
jl
jmp
sbb
leave
xchg
mov
pop
rcll
inc
cwtl
cwtl
or
push
popf
int
jle
push
mov
ficomps
pop
push
add
cli
cmp
or
lods
jo
movb
bound
sub
cmp
push
or
in
xchg
mov
jae
mov
dec
je
rcrb
adc
dec
inc
jne
mov
pushf
mov
pop
cmp
shl
sti
add
mov
imul
int
add
adcb
insb
sub
aas
xor
xchg
jo
cld
push
dec
mov
js
or
fs
jne
les
sub
xchg
jo
xrelease
mov
daa
dec
inc
sti
rcll
arpl
sbb
sahf
test
mov
adc
inc
aam
cmp
adc
mov
xchg
inc
out
and
or
cltd
sbb
icebp
out
in
int
mov
stc
mov
inc
jns
js
stos
dec
imul
push
shlb
xor
aam
rclb
cmp
std
test
push
mov
sub
aaa
mov
das
shrb
mov
or
aaa
mov
xchg
cwtl
jle
cmc
mov
jmp
mov
lea
cmp
and
or
and
movsl
dec
cmp
mov
sahf
inc
cmp
insb
pushf
jecxz
out
jno
out
pop
mov
call
iret
imul
jnp
and
add
xor
into
scas
mov
sbb
loope
adc
mov
dec
add
loope
mov
repz
pop
pop
inc
dec
cmp
dec
lods
daa
std
dec
jg
pop
popa
fisubl
mov
add
push
repz
jg
mov
mov
mov
xchg
sub
negl
jns
lock
add
hlt
daa
lcall
pop
clc
fwait
pop
add
push
mov
mov
xchg
imul
inc
out
or
in
rcl
mov
pop
and
xchg
pop
lahf
push
mov
cmc
bound
adc
mov
insb
jno
push
dec
sahf
in
mov
cmp
mov
add
push
fmuls
cmp
jle
xchg
inc
xor
cmp
adc
xchg
pop
pop
mov
sti
int
jle
inc
fs
clc
ficomps
jmp
sar
js
jl
aas
imulb
rol
out
int3
loop
pop
ret
mov
stc
iret
ljmp
sub
movsl
cmp
pushf
or
call
or
ret
std
data16
punpckhwd
cmp
jle
into
imul
fdivr
mov
cmp
lods
cmp
or
pushf
es
mov
in
loope
das
stos
xlat
ds
sahf
xlat
iret
jbe
xor
int
xchg
inc
jo
ja
mov
daa
int3
std
pop
dec
movsl
in
das
lret
mov
sub
imul
fcomps
and
out
push
stos
push
jmp
sbb
add
or
adc
js
incb
sbb
std
jo
fstl
pop
mov
xchg
fidivl
sbbb
xor
fnsave
fs
jno
dec
cltd
test
jle
xchg
inc
pop
xchg
ljmp
mov
cmp
fcompl
aas
cmpsl
push
add
xchg
jecxz
mov
pop
cli
bound
jae
push
icebp
insb
xchg
sbb
ss
das
lcall
dec
aaa
adc
xor
jg
or
icebp
sbb
jecxz
pop
stos
cmp
xor
and
mul
lret
mov
mov
cmc
and
cmp
push
lea
jo
push
mov
popf
inc
cmp
xchg
dec
cltd
mov
lea
hlt
out
push
lds
push
sub
nop
lret
fiadds
xor
pop
cli
lock
ss
mov
ja
cmp
or
adc
pop
cmp
loopne
lret
xor
in
cmc
mov
scas
pop
test
out
push
push
push
cli
pop
mov
cli
add
or
arpl
mov
jne
sbbl
push
xor
cli
push
loope
sub
jl
mov
mov
ficoml
jge
fs
in
lods
push
repz
xchg
sbb
adc
cmp
push
cmp
push
hlt
jae
pusha
rorl
pop
xchg
in
stos
push
sub
fldcw
mov
cmp
mov
mov
out
and
or
push
mov
rcll
lods
jl
sahf
jmp
or
mov
dec
loop
push
stos
xchg
pop
xchg
pop
sbb
mov
xchg
and
mov
sti
out
rcrl
stc
das
fdivp
lods
test
mov
pop
add
out
mov
sbb
adc
jp
mov
push
adc
sti
scas
push
sbbl
fstpt
movsl
jp
adc
ljmp
rcll
inc
lret
pushf
je
or
es
pushf
mov
adc
or
sub
pop
and
cmp
stc
and
out
push
push
fldl
leave
sub
xlat
adc
hlt
inc
fldcw
mov
lcall
movsb
addb
dec
push
xor
pop
stos
cltd
pop
pop
fbstp
addr16
add
fsubrs
lds
jo
test
xchg
popa
mov
push
push
ret
out
mov
leave
loope
negl
xchg
in
loopne
iret
push
inc
or
mov
xchg
push
lahf
les
call
add
lahf
cmp
and
lods
cwtd
mov
jno
sti
push
movd
inc
mov
add
adc
je
rolb
mov
sbb
jae
xchg
mov
dec
pop
xlat
imulb
mov
out
jmp
lret
enter
xchg
sub
imul
xchg
sbb
mov
pop
mov
sarl
ja
movsb
cmp
mov
scas
int
popa
enter
sbbb
pop
stos
call
or
jb
add
and
cmp
add
rclb
leave
mov
aad
les
pop
add
adc
inc
push
lods
pop
xor
mov
std
push
dec
fildl
mov
scas
dec
and
out
cmp
cmp
adcl
notb
test
adc
outsb
cmpsb
xor
cmpsl
cmpsb
in
fldl
mov
insb
insb
jns
xchg
xor
mov
push
xor
dec
jl
pop
or
ja
js
sub
lds
pop
jp
adc
inc
adc
xlat
cwtl
jae
dec
cwtl
mov
add
pop
outsl
jno
ljmp
fimuls
sbb
sub
mov
data16
es
jmp
mov
mov
sbb
cli
and
inc
jb
sahf
xchg
dec
fildl
fwait
sarb
and
or
inc
push
inc
movsl
mov
dec
adcl
and
dec
test
cvtps2pi
addr16
pop
mov
jnp
aas
cs
mov
outsl
inc
mov
push
adc
sbb
sbb
mov
ret
nopl
popa
sub
movsl
test
pop
lock
fsincos
ds
pushf
mov
xor
leave
pop
cld
sti
pushl
ret
xlat
jmp
rorl
inc
imul
xchg
xchg
sub
sbb
cmp
cltd
inc
or
push
dec
or
jne
pop
mov
mov
aam
arpl
cmpsl
xchg
push
inc
jae
push
ja
xchg
inc
dec
or
sar
vunpckhps
fwait
lahf
lea
inc
inc
push
icebp
gs
xchg
shr
leave
and
jae
adc
sub
imul
jo
jge
jnp
outsb
in
xor
push
lods
rcll
clc
push
test
mov
xchg
mov
mov
xor
cld
and
xchg
bound
inc
scas
add
pop
arpl
xlat
insb
into
cmp
sbb
lret
insl
iret
in
push
sbb
xchg
scas
mov
test
test
or
xor
mov
les
jg
mov
pop
outsl
mov
adc
movsb
adc
bound
fdiv
add
adc
xlat
mov
lock
movsb
xor
lahf
inc
mov
xor
inc
mov
lock
sbb
popa
jmp
xlat
test
lods
or
mov
pop
sub
imul
test
mov
push
fldenv
negl
pop
mov
pop
aas
arpl
dec
out
ret
loop
scas
dec
mov
bound
in
popf
add
xor
or
or
mov
adc
lea
imul
addr16
imul
add
test
lods
cmpsl
xchg
lods
sbb
fs
jno
or
sub
jno
out
sub
lods
stc
adc
mov
jge
cmp
fistpl
adc
sub
jae
push
outsl
pop
stos
in
dec
pop
mov
sti
jecxz
fmuls
ret
lret
push
sub
jnp
lahf
stos
lahf
adc
lds
stc
pusha
outsl
mov
dec
inc
ss
pop
ljmp
shrb
xorb
in
jecxz
lods
lcall
sti
mov
repz
call
mov
into
pop
and
aaa
imul
xlat
inc
xor
push
ret
aaa
mov
sbb
aam
sub
cmp
add
imul
push
insl
push
sub
push
data16
mov
pop
xchg
stos
cmp
fidivl
dec
cmc
mov
inc
addr16
rcrb
sarb
jg
stos
lds
cmp
in
xorl
aas
and
lds
cmc
mov
sbb
push
xchg
push
insl
and
sub
sbb
xchg
dec
mov
xor
nop
adc
imul
daa
fs
nop
and
iret
les
or
mov
call
aam
stos
stos
outsl
icebp
cmp
insl
fmull
out
lahf
and
or
jge
cli
mov
rcrl
mov
push
dec
rep
xchg
or
cmpsl
dec
jo
gs
popf
jecxz
mov
std
fs
inc
pop
mov
mov
add
push
mov
xor
adc
cmp
jbe
dec
rorb
gs
scas
inc
mov
inc
mov
mov
repnz
pop
fwait
scas
ficoml
push
cmpsl
cs
pop
loopne
daa
adc
cmc
out
pop
cltd
aaa
loopne
dec
add
mov
scas
xor
in
repnz
sbb
xchg
or
xor
adc
cmp
mov
into
pop
shrl
ja
cmp
adcl
push
cld
out
mov
lret
fcmovb
hlt
mov
mov
std
outsl
sbb
push
pushf
es
mov
push
lret
mov
push
push
out
xchg
fs
rorb
addb
fcomps
jbe
and
push
jns
mov
test
inc
sbb
sbb
mov
pusha
out
nop
pop
gs
or
mov
rorl
test
in
push
outsb
jle
cmp
and
or
pop
sbb
in
and
int
mov
call
inc
cs
dec
sbb
loop
xchg
and
adc
sbb
sub
pusha
popf
and
and
aam
sub
cmpsb
cmp
imul
rolb
xchg
inc
stc
into
out
inc
ds
mov
cmpsl
cmp
test
test
les
pushf
loope
mov
pushf
pop
cmp
xor
jns
pusha
aad
mov
fwait
mov
cmp
push
pop
add
pop
lock
xor
cs
jnp
sbb
xchg
subl
rcrl
inc
mov
out
dec
mov
add
cmp
fstps
inc
jge
sbb
adc
mov
in
add
pop
dec
rolb
jns
mov
pop
jl
pop
arpl
lea
pop
test
push
or
sarl
movsl
cld
flds
xor
mov
jl
and
decl
lcall
xor
jle
aaa
push
dec
aad
pop
iret
pop
shrl
cld
lods
subb
sub
outsl
stos
mov
shll
add
mov
insb
cli
and
mov
lahf
iret
dec
adc
xor
xor
ret
std
mov
in
orl
fwait
add
lods
add
cli
mov
rcrl
sahf
or
add
lods
sub
xor
dec
aam
push
add
jns
inc
je
movsb
mov
sub
adc
push
push
scas
in
dec
jl
ss
cmp
mov
loopne
stos
outsb
mov
inc
jb
push
sbb
test
mov
xchg
mov
add
mov
mov
jp
push
test
cmpsl
and
add
add
cmpsl
jecxz
ljmp
push
pop
mov
stos
pop
and
mov
pop
pop
ljmp
mov
dec
and
xchg
jb
xor
fs
test
dec
ja
jl
sub
lds
into
or
jmp
aam
cmp
jnp
jge
mov
test
pop
cmp
unpcklps
mov
lods
xor
xchg
add
mov
sbb
sbb
ret
imul
push
hlt
xchg
imul
xlat
jle
shll
add
rclb
xchg
das
inc
inc
ss
es
mov
push
fisubrl
jp
stc
fsubrl
mov
in
ss
xor
push
mov
and
jecxz
push
outsb
test
mov
sbbl
test
push
sbb
cmpb
pop
cmp
mov
sbb
sti
loope
shll
push
dec
lret
xor
js
loope
ret
sub
pop
test
bound
out
push
xorb
xchg
mov
jmp
dec
mov
shrl
and
xor
sbb
xor
leave
adc
cltd
pop
roll
popf
jmp
adc
pop
adc
icebp
jge
push
inc
clc
pop
pop
cmp
aas
or
test
cmp
je
pop
out
arpl
inc
rcrb
jp
dec
test
inc
xor
lcall
sbb
and
in
mov
push
lock
mov
inc
sub
pop
fwait
sbb
mov
xor
add
clc
or
cmp
pop
mov
and
push
ficomps
pop
fmul
pop
jge
push
je
push
ljmp
lea
lret
jns
ss
cmp
xchg
dec
cmpl
push
leave
scas
push
jo
inc
fwait
cmp
je
int3
push
mov
xchg
dec
pop
inc
popf
xor
aam
stc
js
sbb
das
cmp
dec
inc
dec
adc
ja
jle
mov
dec
adc
out
out
imul
xor
ja
popf
orl
mov
adc
mov
pop
fwait
dec
mov
push
cld
fcmovbe
mov
mov
decl
scas
jle
dec
gs
lods
push
push
and
in
sub
jecxz
stc
adc
adc
dec
fnstsw
sbb
add
int
adc
out
adc
mov
arpl
xor
pop
aad
mov
test
mov
out
push
shll
rorl
popf
out
sbb
lahf
inc
xchg
fcoms
xor
insb
inc
inc
inc
inc
jg
ljmp
mov
mov
loopne
dec
jae
popa
rol
out
add
dec
xor
ret
or
addr16
jmp
fs
test
mov
mov
push
arpl
adc
jno
ds
jp
push
aam
mov
xstore-rng
jecxz
or
fsubp
sahf
cmp
out
sub
js
out
movsb
push
mov
xor
sbb
sbb
dec
repz
inc
push
clc
mov
jo
subl
aas
mov
daa
les
aad
xchg
cmpsb
in
dec
mov
and
leave
icebp
dec
jno
sub
outsl
cwtl
mov
stc
push
jmp
or
pop
push
jbe
paddusb
or
enter
dec
loop
lret
iret
pop
pop
push
jmp
or
add
xchg
adc
mov
jns
fwait
loop
inc
jge
int3
out
ljmp
es
push
loop
mov
test
add
jl
push
lods
add
jge
sub
notb
xchg
cmp
pop
imul
lahf
push
push
pop
int
leave
jge
imul
int
adc
jl
add
lods
js
inc
dec
adc
pop
pop
pop
and
lods
and
pop
cmpsl
fnsave
and
push
mov
jecxz
shl
or
mov
push
leave
pop
jno
dec
xchg
rcl
jle
xor
dec
sahf
xchg
jecxz
sbb
xor
and
xor
stos
add
push
out
mov
mov
adc
outsl
or
and
lds
push
rclb
or
rcl
bound
sbb
mov
cmpsb
jo
data16
insl
popf
rolb
lea
xchg
fdivrs
mov
sbb
sub
fiaddl
into
out
in
dec
dec
xchg
fs
fdivl
fstpl
cmp
test
scas
xor
cmp
mov
pop
pop
dec
in
movsl
mov
cwtl
cltd
dec
dec
arpl
adc
popa
pop
loope
sub
into
mov
inc
push
lcall
push
ficoml
test
or
shl
out
jbe
data16
repz
js
out
or
mov
cmc
sub
mov
aad
pop
shlb
and
dec
enter
inc
std
lds
sbb
or
sub
fwait
dec
jo
add
or
arpl
cmp
mov
mov
test
negb
and
push
mov
bound
in
js
insb
sub
xchg
repnz
sub
mov
xchg
add
fsts
fsts
nop
icebp
xchg
pop
push
cli
test
or
out
in
or
test
dec
fst
leave
sahf
stos
pop
cmp
cmpsb
je
sub
orl
lods
test
adc
mov
and
pop
inc
jae
andl
loopne
pop
jmp
jecxz
add
movsl
cmp
adc
mov
pushf
inc
cmpsb
jle
jmp
adc
cmpsl
add
addb
push
jmp
jecxz
push
andps
jl
out
mov
repnz
aam
mov
add
ficompl
icebp
mov
in
inc
mov
mov
aad
xor
repz
push
movsl
cli
add
ret
nop
fldenv
dec
pushl
inc
movsl
xchg
xor
iret
inc
pop
sub
movsl
not
lock
mov
sub
xchg
insb
dec
xchg
sbb
mov
jno
popa
aas
push
mov
rcll
push
add
pusha
mov
jp
fcompl
out
pushf
dec
lret
xor
jl
sahf
inc
into
jno
ret
aas
mov
js
lret
ds
xor
push
ja
jmp
sbb
data16
sub
mov
xchg
push
ret
in
jo
int3
mov
mov
out
mov
jb
inc
jecxz
mov
cmp
xchg
sbb
lods
outsb
cmpsb
pushf
inc
in
shll
xchg
or
sbb
mov
in
add
cmpl
loopne
cmp
nop
stc
add
pop
pop
xchg
adc
sbb
jne
add
insb
test
loopne
into
cmp
repz
xchg
test
jmp
fdivrs
cmp
stc
jbe
cmp
adc
push
sbb
mov
in
fcmovbe
cmpsb
in
iret
roll
add
bound
stos
sub
iret
fidivrl
jmp
popf
dec
out
lret
jnp
sub
addr16
mov
add
mov
pop
imul
and
sub
and
dec
sub
jge
repz
adc
lods
enter
mov
cmp
mov
dec
inc
mov
xor
mov
cmpsl
je
jmp
sub
ror
inc
pushf
fimull
mov
adc
out
cmpsb
and
adc
sub
jmp
sbb
ds
data16
and
imul
xchg
lds
mov
aad
fsubrp
mov
inc
rorb
pop
xchg
or
adcl
in
adc
rclb
outsb
cs
mov
aas
sti
pop
dec
inc
bound
popf
jp
inc
jae
out
repz
sub
fists
cmp
cmp
loope
cmp
into
ss
push
mov
sub
and
addr16
daa
xchg
sub
push
sbb
negl
leave
mov
testb
mov
sub
lods
gs
sti
ds
cld
mov
repz
clc
aad
jbe
sbb
sbbb
dec
sbb
imul
xchg
clc
in
xor
pop
hlt
cmp
xchg
or
mov
pop
sub
add
inc
pop
movsb
icebp
jns
rolb
popf
lods
mov
sbb
inc
jne
leave
mov
imul
outsb
pop
sahf
movsb
insb
out
sarb
insb
je
mov
sub
lahf
cs
scas
xchg
xor
mov
stos
ror
leave
lret
fsubrl
movq
cmp
int3
add
xchg
jo
push
adc
or
ficomps
outsl
xor
mov
jmp
sub
mov
cs
add
mov
or
sbb
orl
mov
fadds
out
lcall
add
lea
mov
adc
ja
enter
daa
mov
pop
je
sbb
test
pop
negl
das
add
fildl
add
adc
push
stc
lret
arpl
xchg
adc
bound
xor
test
les
out
je
insb
leave
mov
nop
push
sti
hlt
sbb
cli
cmp
lods
mov
push
push
cmpsb
inc
xor
sbb
and
xchg
add
jo
lcall
cmpb
pop
cli
mov
movsb
mov
cmp
rcrl
stos
push
out
scas
fldcw
xchg
arpl
xchg
jo
cwtl
in
pop
mov
cmpsl
out
cmp
xlat
xchg
andb
jmp
add
push
push
pop
dec
punpckhbw
js
test
push
les
sbb
and
xchg
inc
daa
imul
rolb
aas
scas
dec
push
rorl
pop
repz
dec
adc
push
push
push
mov
nop
pop
adc
enter
xchg
sub
insb
jnp
dec
push
jbe
jle
mov
mov
fldcw
sub
ret
adc
popa
sti
sbb
out
aam
into
addr16
and
sbb
sbb
das
gs
lret
jae
cli
jg
loope
stc
sbb
cli
sub
sbb
mov
mov
lock
sti
fidivrs
fistpll
xchg
mov
scas
pop
sub
dec
push
xchg
mov
push
mov
push
and
sub
loopne
add
lcall
ret
into
outsl
lea
std
pop
test
inc
repz
xchg
sub
jno
push
lahf
sbb
xor
and
ljmp
cs
call
add
mov
lods
daa
mov
pop
mov
sbb
pop
aas
icebp
das
shl
les
sbb
mov
mov
jmp
pop
mov
mov
mov
sti
dec
pop
push
data16
xchg
xlat
fs
or
das
inc
pop
mov
cmc
insb
jbe
testb
das
vpmulld
testb
les
pop
negl
inc
mov
ret
in
ja
inc
testl
ret
negb
test
xchg
jge
enter
jnp
adc
sbb
sbb
dec
mov
dec
lahf
cmc
jb
or
dec
je
mov
mov
js
scas
sbb
lret
ret
into
xor
mov
jge
xor
lcall
in
sub
jne
lret
in
es
fwait
jle
inc
and
into
icebp
adc
push
out
in
push
lea
adc
ja
ljmp
push
mov
in
jnp
mov
dec
sbbb
ja
int3
push
adc
fmuls
pop
clc
adc
scas
hlt
dec
out
xchg
std
xchg
andl
fwait
sbb
and
xor
inc
mov
jp
mov
and
pop
push
push
js
xor
mov
mov
jge
xchg
xlat
stc
in
jb
mov
sbb
ficoml
iret
pop
out
jmp
cmp
push
fdivrl
scas
xor
js
movsb
es
hlt
inc
inc
sub
xchg
xor
out
hlt
mov
lods
lods
jnp
mov
cld
orl
dec
sbb
icebp
mul
repz
pusha
lods
xchg
sbb
push
mov
pushf
sbb
lds
loop
inc
call
bound
pop
xor
jmp
mov
xchg
jmp
ret
and
sbb
mov
lock
movl
and
jecxz,pn
sarl
dec
repnz
push
xor
loopne
pop
jno
shl
dec
xchg
push
or
fadds
addr16
inc
je
popf
xchg
outsl
xor
jecxz
loopne
or
out
xor
and
jmp
dec
test
subl
inc
daa
mov
inc
mov
imul
movb
xor
imul
mov
xchg
jo
loope
js
xor
pop
pop
mov
roll
rcr
inc
fwait
and
mov
add
push
jl
insl
xchg
push
sahf
mulb
mov
xchg
mov
dec
jp
aaa
jno
mov
movsb
sbb
fimull
pushf
lods
and
xchg
lret
xchg
xor
adc
inc
imul
pop
mov
jne
xchg
xchg
adc
rep
fcmovne
mov
fwait
jle
or
neg
dec
ss
divb
loope
mov
jmp
jle
cwtl
or
sub
mov
xor
mov
out
adc
lods
push
xchg
inc
and
inc
loop
leave
mov
popa
xchg
lods
call
popa
ja
cmc
fildl
or
add
xchg
pushf
mov
idivl
gs
pop
popa
mov
or
ljmp
es
mov
adc
dec
sbb
out
sub
gs
sub
pop
sub
xor
stos
int
sbb
jnp
je
scas
and
repnz
add
andl
cltd
push
pop
test
mov
dec
mov
dec
cli
repnz
and
mov
cmp
mov
push
adc
sbb
jne
sub
ds
jb
lea
xchg
mov
popf
mov
sub
mov
mov
repz
jnp
dec
pop
lret
lea
cmp
hlt
xor
and
mov
or
in
cli
pop
shll
or
jge
lock
je
lret
ficoml
mov
sarb
xorl
ret
pop
adc
movsb
jo
cmp
mov
xchg
push
stos
fcoml
lea
xchg
inc
push
roll
mov
add
fwait
mov
hlt
jmp
adc
addr16
ljmp
daa
bound
mov
fstl
nop
pop
cmc
sub
inc
sbb
das
mov
pop
dec
jbe
jbe
xor
jecxz
push
push
cwtl
fimuls
sub
sahf
sbbb
shl
hlt
or
jmp
insl
xchg
hlt
mov
out
xor
daa
xchg
packssdw
ret
jmp
es
pusha
mov
pusha
lret
jmp
les
sbb
clc
out
jno
cld
jb
mov
mov
repz
push
mov
vmptrst
dec
cmc
sahf
movsb
addb
pop
cmp
dec
or
enter
fwait
mov
aad
pop
out
das
sub
std
test
fadds
mov
shrb
cmp
insb
lret
pop
dec
lock
mov
stos
ss
add
test
aad
xchg
aaa
mov
and
icebp
cmp
inc
test
movsb
in
ja
jnp
pushw
sub
adc
ja
fsubp
mov
aaa
add
xchg
inc
outsb
ret
sub
mov
out
int
sbb
jmp
inc
repz
pop
adc
jae
push
jnp
xchg
push
sahf
leave
and
and
adc
lea
push
sti
les
leave
call
push
mov
push
mov
in
ss
sbb
negl
sbb
sahf
mov
fsin
test
pop
lahf
addb
movsb
insl
sbb
xor
lret
mov
cs
sar
xor
call
xchg
iret
out
adc
nop
sahf
mov
mov
mov
xlat
sub
add
push
pusha
std
ficompl
in
dec
pop
jge
mov
les
sub
cmpsb
push
das
ljmp
pusha
mov
mov
out
dec
test
pop
and
aad
wrmsr
jl
xor
push
test
ret
or
push
shll
mov
arpl
js
inc
xor
pop
mov
fisubrs
fcomps
shlb
in
popf
mov
dec
or
push
pop
sub
pop
mov
xchg
mov
les
dec
sbb
dec
adc
xor
fwait
add
mov
aam
dec
test
int
cmp
stos
lds
dec
ds
cmpsl
movsb
fldenv
ja
mov
jmp
or
sbb
in
push
mov
outsl
dec
inc
shrd
mov
sbbl
and
ficomps
xchg
mov
mov
cwtl
test
cmp
cmp
push
xor
push
fisubl
out
xchg
inc
mov
jns
dec
jmp
pop
daa
loopne
das
mov
aas
xchg
xchg
stos
pop
xchg
adc
or
mov
or
mov
pop
stc
out
scas
xorl
and
pop
push
xor
cltd
ficoml
les
clc
adc
fmul
mov
mov
cmp
mov
enter
std
jp
jb
jmp
lods
ds
and
lcall
in
mov
mov
or
fisubrl
imul
gs
push
add
mov
pop
outsl
out
push
and
imul
mov
cmpsb
add
push
andb
mov
test
xor
sbb
rcrl
or
xchg
pushf
aam
js
dec
shrl
sbb
fdivr
popa
js
das
data16
sub
xor
jmp
xchg
and
mov
ljmp
decl
lods
pop
enter
iret
mov
xor
insb
sbb
xchg
rcr
out
jno
mov
cmp
mov
pop
ja
cmp
mov
jmp
out
nop
or
ss
jns
lds
repz
mov
adc
fiaddl
dec
ret
push
pop
iret
inc
aad
and
jo
imulb
mov
jecxz
and
push
sbb
lret
and
mov
dec
pop
mov
pop
cmp
outsb
out
cmpsb
rcrl
call
jge
cmp
push
xor
into
jmp
cmp
inc
jg
lahf
fs
jl
mov
sbb
mov
lahf
aas
cli
xor
rolb
hlt
mov
shl
pop
cmc
jbe
dec
push
inc
in
fiadds
jmp
xchg
aad
cli
jnp
inc
push
pushf
and
scas
cli
lahf
dec
fldenv
mov
and
pop
dec
out
xchg
dec
std
push
mov
call
jae
mov
xchg
pushf
in
xor
rorl
push
mov
lods
imul
push
jge
cmpb
dec
add
rolb
pop
fwait
shlb
sbb
or
push
pop
fnsave
enter
adc
push
mov
dec
sbb
fldt
pop
test
sbb
ret
jge
stos
mov
repz
repz
xor
data16
push
push
mov
cmc
cmp
nop
sarb
or
into
testb
jno
or
ljmp
xor
out
jae
mov
pushf
dec
pushf
sub
repnz
xor
fnstcw
mov
dec
in
fsubl
xchg
test
testl
popa
movsb
jmp
mov
out
scas
cld
xchg
mov
int
je
xor
adc
push
test
pop
fmuls
sub
sub
mov
pusha
xor
sbb
cmpl
mov
test
or
ss
dec
pop
push
ljmpw
pop
dec
loopne
mov
push
in
pop
lods
pop
ret
ror
jecxz
or
les
les
add
push
mov
mov
and
bound
xor
cltd
sbbl
or
or
cmpsb
std
clc
pop
daa
enter
call
into
mov
push
sub
inc
dec
hlt
jle
pop
lock
mov
pop
jl
cmp
andl
xor
mov
mov
sar
jbe
sub
int
or
into
fsubrs
and
ljmp
pop
out
push
ds
add
xchg
cmp
push
sbbb
inc
test
mov
lods
orb
sbb
adc
es
mov
push
je
dec
jmp
js
xor
into
xchg
mov
int
xor
cmp
xlat
inc
jge
inc
add
stos
mov
xrelease
sbbl
add
aaa
test
cmp
stos
mov
xor
jecxz
xchg
inc
add
and
je
stos
jo
fisubrl
and
jno
fs
ljmp
add
cmpsb
pop
xchg
xchg
lcall
fwait
cmp
push
jo
arpl
push
fcmovb
ljmp
int
mov
and
or
mov
lea
add
out
js
ljmp
jne
icebp
inc
jae
push
addb
dec
das
and
sbb
movsb
xchg
frstor
mov
dec
adc
jg
in
lods
or
jo
divl
out
dec
mov
rolb
in
lahf
fdivrl
and
mov
sbb
or
sti
dec
jno
shll
sub
sbb
cmp
and
lds
cmc
push
xor
subps
xchg
clc
lods
pop
mov
les
jmp
sub
loopne
mov
inc
pop
inc
shlb
mov
mov
mov
push
add
mov
sub
lcall
aam
clc
loope
rolb
rorl
jae
cmp
imul
mov
cmp
fstpt
xchg
pushf
jl
movsl
shll
jb
out
xor
popa
jns
mov
sub
arpl
mov
inc
push
fs
mov
cmp
sbb
hlt
test
test
sub
or
popa
cmp
icebp
jle
mov
aad
pushf
sub
cmp
hlt
icebp
cmp
out
out
or
inc
leave
nop
jle
arpl
or
lcall
pushl
push
mov
mov
mov
stos
ret
hlt
scas
test
fs
jle
add
add
addl
dec
push
fwait
ret
pop
daa
fmul
out
out
add
xchg
jae
inc
ss
ficoml
push
lods
cmp
daa
inc
into
push
dec
rcr
addr16
pop
pop
xor
ss
shlb
xchg
sbb
pop
daa
popa
mov
xchg
and
sbb
and
loope
add
js
cmpsl
mov
add
pusha
pop
cmp
add
aam
dec
fwait
mov
incl
daa
test
add
int3
aas
inc
stos
or
jnp
adc
cmp
imul
je
mov
popf
rorb
adcb
xor
rolb
test
scas
sbbl
add
push
push
sbb
movsl
jae
xor
mov
jl
inc
clc
inc
sti
cli
mov
testb
daa
fistps
gs
or
mov
cmp
leave
ljmp
or
out
mov
fldt
subl
hlt
or
lret
adc
sub
in
jle
adc
shll
out
xor
or
or
cmp
and
sbb
sub
mov
jb
cmp
mov
or
inc
dec
bound
jmp
push
or
add
inc
pop
cld
xor
xchg
push
popa
ret
inc
outsl
or
int3
mov
inc
and
mov
repnz
rolb
out
cwtl
add
sbb
or
xorl
inc
xchg
lods
inc
jl
xchg
xchg
sbb
js
dec
mov
rcrl
lahf
sbb
out
add
aas
fmulp
js
sti
and
sub
mov
push
aam
fstpl
int
into
lcall
xor
insb
push
jge
or
mov
cltd
inc
popa
add
lahf
xchg
xchg
nop
jne
jmp
adc
loopne
jl
xor
clc
inc
jne
add
mov
into
adc
int3
daa
jg
mov
imul
movsb
icebp
pusha
ret
iret
scas
popf
push
aaa
push
loopne
fmul
dec
mov
int3
mov
push
and
and
daa
loopne
movsl
inc
dec
out
jno
pusha
cltd
xchg
test
test
int3
lcall
inc
jmp
movsb
movsb
push
imul
leave
inc
pop
into
loopne
clc
gs
adc
ss
andb
fs
adc
pop
jle
and
lret
mov
fcoms
mov
lret
imul
into
dec
adc
enter
movb
std
pop
mov
or
cwtl
lods
sbb
sub
dec
adc
mov
orb
sahf
test
add
jbe
push
rcr
push
stos
mov
lods
test
inc
inc
sub
stc
inc
xchg
push
hlt
mov
add
cld
out
add
enter
lea
test
int
inc
cwtl
fisubrl
test
jne
mov
or
mov
es
dec
pop
inc
mov
xor
lcall
fwait
out
cmp
out
adc
jno
rolb
daa
mov
loope
inc
lahf
cmp
iret
fcomps
fwait
cld
mov
movsl
xor
push
sti
mov
dec
xor
jnp
filds
push
les
idiv
sarb
mov
rol
lds
rolb
lcall
fdiv
loop
aas
dec
pop
inc
idivb
adc
jle
inc
out
mov
sub
adc
lods
xchg
push
addb
cmpsb
pop
out
icebp
lods
add
mov
lea
cmc
xor
outsb
and
mov
imul
sub
fwait
sub
adc
adc
mov
push
inc
fadds
adc
mov
aaa
pop
clc
mov
sub
js
sub
lahf
add
out
shll
pop
aaa
nop
mov
aad
add
arpl
movsl
xchg
mov
cs
mov
inc
jb
add
or
das
cmp
imul
dec
xchg
call
sti
movsb
xchg
adc
andl
outsb
ror
outsb
mov
mov
fdivrs
inc
int
into
ret
es
subl
pop
adc
pop
mov
rcll
loopne
sub
dec
push
in
mov
pop
testb
mov
or
loope
inc
pop
mov
movsb
fwait
jle
testl
pop
pop
insb
mov
jne
stc
xor
aad
pop
xchg
out
inc
sub
inc
mov
jg
mov
or
into
jp
add
mov
dec
lds
sub
imul
adc
stos
push
pop
mov
inc
ljmp
clc
je
cmp
lret
push
hlt
scas
sub
aaa
pop
push
mov
movsl
out
int3
sti
hlt
gs
daa
pop
pop
pop
push
or
push
call
shll
xchg
popf
scas
inc
or
pop
js
mov
xchg
mov
ja,pn
pushf
xor
dec
insl
outsb
sbb
push
mov
test
push
out
adc
and
pop
out
pop
pop
dec
jp
outsl
and
sub
sbb
mov
sub
fsubrs
xchg
cmp
sub
push
arpl
jnp
das
pop
mov
mov
xchg
push
inc
lahf
xchg
fstps
jg
fisttpll
shr
push
pusha
jg
push
pop
and
iret
push
dec
cmpl
jbe
movlps
pop
add
inc
xchg
jae
inc
cltd
cs
ds
lock
in
mov
sub
mov
nop
aad
mov
and
mov
sub
fidivrs
sub
scas
jns
aaa
inc
mov
sub
and
test
cmovl
scas
pshufw
sti
push
arpl
mov
jecxz
xchg
or
cld
call
insb
mov
xor
movl
and
addr16
into
add
pop
push
xor
sbb
cmp
dec
lret
mov
pop
test
mov
or
xorl
daa
sti
fmull
pop
dec
cwtl
out
iret
dec
mov
push
cmp
cmpsl
loope
and
mov
mov
xchg
stos
jp
and
inc
orl
sbb
imul
xchg
mov
mov
mov
xchg
icebp
in
mov
cmp
mov
inc
adc
push
and
jle
or
test
xor
cmpsl
inc
lret
adc
xor
stos
pop
adc
or
es
pushf
push
test
xor
sub
pop
push
repnz
pop
pop
insb
out
lahf
jge
xor
mov
or
add
aad
pop
push
clc
dec
pusha
xor
sbb
fisttpll
mov
mov
adc
and
loop
mov
adc
sbb
jne
push
es
jb
sub
mov
xchg
push
push
cmp
loope
cmpsl
in
jmp
inc
loope
dec
sbb
stos
push
stc
cmp
into
iret
idivl
inc
pop
push
out
popf
in
xchg
jle
stos
je
lods
xchg
sbb
rcll
and
int3
lea
mov
sbb
popl
cs
lock
inc
aaa
mov
pop
inc
mov
nop
fbld
push
test
inc
jle
loopne
movsb
jmp
cmpb
loop
or
lret
lcall
mov
jecxz
mov
xor
push
jl
xor
jns
lahf
mov
jle
push
mov
jecxz
and
das
mov
stos
xchg
inc
cmp
lods
sbb
loopne
rcrb
jns
popf
fstl
mov
sub
ljmp
movsb
and
xchg
sub
push
and
stos
or
clc
push
outsb
dec
jns
ja
lret
sub
in
in
iret
sub
sbb
mov
loopne
shlb
js
ja
mov
mov
adcb
test
test
stc
xor
or
ret
dec
addr16
outsl
mov
mov
negb
pop
cltd
pusha
cmpsl
mov
fwait
lcall
fneni(8087
sub
mov
inc
rclb
inc
cmp
data16
daa
fsts
ret
xchg
mov
and
popa
loope
int3
repnz
and
push
jb
roll
in
out
popf
adc
inc
and
jge
xlat
ss
xor
pop
rcl
fisttpll
xchg
dec
cmpsb
mov
rolb
fwait
rclb
push
mov
les
or
mov
dec
stos
dec
and
dec
push
mov
pop
mov
cmpl
mov
call
or
cmpsl
or
or
nop
pop
movsl
sub
sbb
add
mov
or
push
xchg
xor
std
shll
jbe
xchg
rcll
dec
sbb
mov
popf
pusha
stos
xchg
lret
adc
hlt
lods
sub
xor
movsl
sub
int3
sub
mov
mov
xor
ret
hlt
js
hlt
push
push
sub
add
mov
shrb
dec
out
xlat
adc
add
push
jmp
mov
pop
mov
mov
fwait
or
jle
ja
inc
mul
sub
sub
push
cmp
jl
or
test
enter
pop
mov
xlat
jge
sbbb
lods
mov
sub
imul
push
test
pop
test
imul
jge
pop
rclb
and
ret
push
pop
sbb
in
push
xlat
pop
mov
lahf
inc
inc
mov
dec
push
mov
cmp
sub
mov
aad
pop
pop
push
jl
paddb
pop
xor
jle,pn
imul
insb
inc
insb
and
cmp
movsb
cld
repnz
cmp
mov
in
andnps
mov
out
or
lock
dec
inc
xor
aaa
and
hlt
jns
pop
psubw
ret
push
out
push
xchg
loopne
or
cli
xor
sub
movsb
fwait
adc
addb
mov
jne
mov
test
ds
aam
ret
push
add
jle
loopne
inc
outsb
xchg
imul
out
pop
and
daa
nop
ret
inc
sahf
ret
pop
pop
mov
push
das
pop
arpl
aas
jge
cmp
mov
mov
sahf
pusha
cmp
jo
aas
or
adc
gs
jg
xor
test
scas
lods
cwtl
or
mov
dec
outsl
mov
xchg
mov
pop
js
inc
mov
xor
movsl
or
shll
mov
call
icebp
stc
xor
test
jp
loop
inc
adc
pop
cmp
inc
fs
mov
fisubrs
sub
outsl
mov
xor
dec
jno
xchg
sub
or
out
arpl
addr16
insl
or
fnstenv
adc
sub
in
loope
mov
jo
or
mov
outsl
adc
mov
inc
push
movsb
push
sahf
divb
sub
mov
mov
cwtl
jmp
scas
insl
xor
xchg
mov
xchg
ja
mov
movsb
insb
out
int3
add
lock
lea
cmovns
jo
and
jo
pop
repnz
pop
sti
mov
sub
push
cwtl
mov
push
fimull
jns
push
mov
push
or
ljmp
iret
xchg
cmp
cmp
shrb
mov
jb
scas
in
mov
push
mov
mov
loop,pt
mov
mov
int
inc
adc
outsl
mov
xor
mov
pop
xor
dec
sbb
cwtl
out
mov
push
stos
and
int
xor
xor
aad
mul
test
xor
adc
pop
or
ljmp
lock
mov
dec
xlat
repz
pop
aas
dec
sti
repnz
pop
cmp
popa
clc
fstl
stc
push
adc
add
pop
pop
add
jnp
sti
int3
aad
push
dec
inc
pop
xor
ret
pop
xchg
lock
shlb
popa
sub
lds
daa
roll
xchg
notb
stos
pop
sub
insb
push
hlt
lret
aad
dec
loopne
test
lcall
add
add
cs
clc
jecxz
fadds
or
pop
addr16
mov
push
and
repz
fsubrl
aam
push
int
movsb
cwtl
push
dec
jecxz
pop
dec
dec
les
out
jns
jno
loop
cmp
in
mov
mov
dec
fldl
bound
aaa
add
movsl
movl
jae
cmp
xchg
mov
or
push
sbb
ret
sub
add
or
xchg
cmpsl
in
xchg
xchg
inc
and
adcb
into
add
jae
lahf
std
adc
outsb
and
push
xor
add
adc
cmp
call
cmc
test
sub
icebp
add
stos
sbb
cwtl
insl
stos
add
aas
cmp
jb
enter
fildl
mov
xchg
scas
imul
push
mov
xor
fisttpl
lahf
adc
lahf
addr16
push
aam
inc
pushf
ret
mov
ljmp
xchg
movsl
cmpb
loopne
stos
nop
inc
cwtl
adc
pop
lcall
ret
test
mov
in
jle
pop
sbb
outsb
pop
test
test
dec
pop
fcmovu
ret
rclb
repnz
or
daa
mov
imul
mov
lcall
call
fcmove
mov
fists
cmp
and
mov
into
icebp
js
popf
sub
mov
inc
movsb
icebp
hlt
por
arpl
mov
in
stc
pop
out
mov
sbb
xor
lahf
sub
push
aaa
push
es
mov
test
aaa
or
lods
xchg
bound
addr16
and
ja
xor
andl
pop
and
arpl
xor
sub
iret
in
xor
inc
jns
outsb
cwtl
aaa
pop
adc
jne
sbb
add
dec
cmp
imul
mov
js
iret
push
xchg
loopne
push
out
aam
mov
mov
or
pop
jmp
enter
sbb
push
shlb
pop
fcompl
aas
stos
les
loopne
out
insb
cs
out
lcall
jne
out
xor
sbb
push
and
and
jl
les
jge
push
push
dec
cmp
push
inc
shl
pop
cmp
test
adc
scas
mov
insb
mov
cmp
mov
mov
xor
adcl
ljmp
das
mov
push
rolb
jle
je
pop
int
mov
add
hlt
mov
sarl
insb
mov
daa
inc
into
gs
jg
push
fstps
jno
mov
mov
add
scas
aam
xchg
mov
sbb
and
fidivrs
jg
and
dec
mov
mov
xchg
sbb
lds
jno
ds
push
rcrb
imul
dec
add
cmpsl
mov
loop
mov
enter
insb
add
add
mov
fbstp
scas
mov
js
jge
fistps
xor
cmpsl
int3
divl
lock
js
cmpsb
dec
test
jecxz
xchg
and
xor
and
dec
xor
inc
leave
mov
cltd
mov
imul
mov
movb
mov
out
sbb
mov
insb
fcomps
stos
cmp
pushf
adc
add
sub
add
add
sahf
sub
das
repnz
int
rcll
dec
add
inc
rorb
mov
or
in
mov
inc
xchg
test
jnp
or
jbe
pop
cmc
out
adc
mov
mov
dec
inc
sub
mov
xchg
sbb
mov
push
insb
adc
cld
enter
rcrl
dec
cmpb
negb
push
mov
stos
jg
fbstp
push
lret
xchg
jp
push
push
adc
mov
shll
ror
dec
sbb
dec
pop
dec
push
pop
pop
lret
popa
mov
sub
je
jl
mov
addr16
and
cs
xchg
mov
cwtl
dec
hlt
jno
jo
gs
scas
xchg
xor
cs
fsubrl
lock
xlat
inc
int3
std
sbb
addr16
movsb
dec
jnp
mov
orb
jnp
dec
xor
jns
inc
arpl
pop
add
push
inc
sbb
shrb
or
sub
mov
fldl
jmp
aam
xchg
insb
lcall
imul
mov
aam
cli
pop
mov
lret
cmp
inc
cmp
out
push
jecxz
xor
adc
fsubrl
sidtl
dec
f2xm1
add
loopne
movsl
stc
mov
mov
mov
sub
lds
insl
gs
ror
dec
mov
test
xor
jns
ds
sarl
jge
jns
fs
mov
popa
sub
mov
mov
ja
lret
push
jbe
xor
push
mov
mov
and
sub
inc
sahf
xchg
sbb
adc
inc
mov
pop
push
movsl
repz
xchg
pop
inc
out
aad
mov
cli
pop
push
xchg
pop
jg
mov
mov
rcl
and
sbb
pop
pop
dec
pop
imul
adc
ret
adc
jecxz
ljmp
out
push
repz
jne
sbb
add
jecxz
imul
inc
jmp
xchg
pop
mov
xchg
fsubs
loopne
pushf
out
sbb
push
mov
nop
jo
aad
add
rorl
inc
repz
pop
push
push
pop
pop
pop
ficoml
push
jnp
mov
fistpl
rcrl
xchg
out
xor
mov
imul
movsb
hlt
ret
dec
sbb
xchg
in
pusha
data16
lret
cmp
inc
pop
sub
adc
mov
icebp
and
insb
insb
fsubr
insl
add
jg
enter
out
sub
pop
daa
cmp
dec
out
cmp
popa
add
daa
fadd
dec
inc
dec
loope
iret
adc
gs
test
push
mov
mov
js
dec
mov
mov
jns
or
push
sub
and
hlt
pop
fisttpl
fwait
addb
push
lahf
mov
aad
inc
stc
inc
clc
cmp
mov
inc
mov
sbb
add
pop
jmp
add
cmp
data16
fistpl
lods
test
frstor
jbe
aaa
jle
dec
stos
push
cmp
jp
xor
rcll
add
fwait
jo
bound
dec
jnp
and
aaa
mov
push
add
ficoml
mov
ret
bound
jb
adc
movl
mov
cmpsb
jl
xchg
rol
popf
lcall
decl
lcall
mov
dec
xchg
mov
stos
mov
mov
idivl
cmp
sahf
sbb
neg
movsb
or
into
mov
push
and
push
dec
adc
rorl
inc
or
dec
mov
cmp
das
pop
mov
lods
cmpsl
or
fistl
cmp
stos
fimuls
mov
jae
mov
cmpsb
pop
mov
mov
xor
test
xchg
sub
and
mov
xchg
and
mov
sbb
and
push
test
stos
or
fldt
sub
or
push
stos
sbb
jno
setae
push
sahf
push
mov
mov
xor
push
mov
mov
push
insb
pop
dec
push
sbb
inc
push
movsl
in
hlt
test
xchg
cmp
repnz
mov
push
in
sbb
sub
dec
in
cwtl
push
push
xlat
fstp
push
cmpsb
add
das
jbe
mov
adc
mov
xor
mov
and
repz
xlat
xchg
out
add
dec
xor
push
jo
test
inc
mov
out
bound
cmp
sbb
clc
data16
cs
ret
lods
sub
xchg
cli
loopne
gs
pop
aaa
jne
dec
shll
subb
adc
sub
xchg
sbb
and
pop
xlat
add
gs
out
fcmovnbe
mov
add
sbb
cmp
jne
ss
fbstp
daa
imul
xchg
xor
sahf
adc
xor
out
jg
cmp
jo
ds
fildl
aam
shlb
pop
dec
dec
dec
in
mov
pop
sbb
aas
fwait
sub
or
cwtl
enter
inc
sbb
fistpl
jno
and
pop
pop
mov
scas
daa
pop
insb
lods
aas
add
js
ss
lahf
ret
sbb
aad
mov
inc
push
andl
sbb
rol
dec
nop
dec
ljmp
xchg
les
ret
aam
xor
xorb
xchg
setns
in
jnp
jo
and
int3
leave
push
ljmp
shrl
xor
mov
cmp
xor
sub
mov
pop
loop
mov
das
push
sbb
pop
outsl
iret
and
mov
xchg
push
movsb
fcomp
sbb
jae
inc
cmpsl
add
inc
mov
pushf
jmp
imul
shll
inc
mov
repnz
leave
fs
das
xor
pop
icebp
subl
imul
loop
and
shll
pop
repnz
outsl
insl
nop
adc
sarb
mov
cmpb
scas
mov
cmp
jns
jo
cmp
fwait
mov
in
js
and
lods
push
pusha
pop
arpl
addr16
cmpsb
out
bound
cmp
add
fimull
pop
inc
push
aaa
daa
inc
adc
mov
lds
das
lds
xor
mov
inc
mov
cmp
jne
jo
dec
mov
sbb
mov
xor
add
repz
arpl
scas
xor
popa
dec
sbb
mov
push
sub
xchg
sbb
sbb
pop
cmp
sub
les
mov
push
or
push
test
stos
mov
add
or
clc
stc
pop
aaa
inc
imul
cs
mov
stc
pop
cltd
andl
sbb
and
shlb
sub
cs
into
jo
push
sbb
push
outsl
icebp
sub
mov
lea
push
sub
je
stos
mov
ret
add
scas
add
js
pop
xor
xchg
pop
and
out
push
bound
mov
popa
cmp
or
cmp
sub
push
out
inc
js
outsl
push
ja
dec
xchg
cwtl
sub
or
into
jne
stc
or
push
pop
push
sbb
shrb
and
fidivrl
sahf
dec
jb
mov
mov
pop
push
ret
add
mov
xchg
adc
movsl
fiaddl
inc
mov
and
sbb
shlb
mov
arpl
outsl
pop
mov
fsubr
pop
push
cli
repnz
push
imul
pop
mov
in
jmp
xor
pop
dec
loope
mov
cmc
sbb
cmp
jge
xor
sbb
insb
and
push
jle
popf
pop
cmpsl
stc
loopne
cli
bound
cmp
push
scas
push
jle
out
sbb
pop
loop
test
rcrl
sub
arpl
cmpsb
out
mov
xlat
jae
pop
aad
xlat
loopne
daa
pop
je
mov
pop
dec
sub
jmp
movsl
lahf
jl
and
pop
lods
mov
push
out
cmpsl
push
repz
sti
and
adc
cmpsl
scas
adc
inc
sub
stos
xchg
jmp
add
push
add
rcr
mov
out
clc
lret
mov
dec
pop
jo
push
test
add
mov
push
adc
add
pop
mov
fcoms
sub
negb
dec
lret
sbb
test
insb
or
pop
mov
xor
aad
sbb
pushf
shll
out
mov
das
lock
adc
adc
hlt
inc
inc
cld
push
mov
imul
out
pop
pop
jae
sti
fistl
lcall
push
sbb
loop
mov
dec
aad
out
out
out
lret
inc
xor
sub
lods
sbb
insb
mov
or
sbb
ljmp
or
addr16
inc
xlat
adc
fadds
in
test
aaa
jecxz
cwtl
hlt
and
movsb
stos
xor
mov
xor
xchg
jbe
jne
xlat
mov
xor
inc
hlt
add
xchg
js
aas
xor
cld
and
xor
aas
lods
repnz
leave
cmp
sbb
movb
dec
or
mov
xchg
adc
adc
pop
xchg
cmpsl
fstps
ret
and
and
pop
xchg
adc
xor
xor
hlt
lods
push
adc
enter
and
stc
movsb
in
inc
xchg
daa
pop
rolb
xchg
cmp
mov
jmp
mov
shlb
xchg
ja
xchg
xchg
scas
mov
mov
bound
push
cli
jbe
inc
push
cmpsb
sti
pop
push
test
adc
les
repnz
cmpsl
je
lds
lret
ror
mov
jns
mov
mov
jo
lods
fsubs
sbb
add
pop
cmp
rol
jne
mov
pop
mov
adc
mov
cmpl
push
jo
leave
stos
cmp
pop
lods
nop
pusha
sarb
gs
jns
adc
xchg
adc
je
arpl
test
repnz
cmp
pop
rorl
sub
or
add
test
and
push
inc
imul
pop
xchg
mov
xor
div
lock
jo
cmp
lods
sahf
rcrl
xchg
or
xor
rorb
add
dec
push
popa
push
ljmp
stc
rol
test
out
lods
fwait
js
add
push
jb
pop
repz
xchg
pop
repz
test
insl
add
mov
ljmp
push
and
mov
mov
sub
add
jp
add
mov
and
in
scas
inc
mov
dec
push
and
jae
push
add
push
cltd
insb
fisttpl
dec
cmp
js
inc
xchg
adc
jne
in
push
insl
andw
in
push
lret
sbb
test
cmp
lcall
mov
fistpll
cmp
les
mov
cmpb
test
add
xor
cmp
push
add
mov
outsb
and
ss
xor
sub
int3
leave
int
fisubl
dec
mov
cli
mov
scas
jecxz
int3
sub
int3
pop
addr16
dec
fcomps
mov
or
sti
dec
adc
xor
je
or
push
add
xchg
lea
je
adc
ljmp
movsb
clc
jg,pt
sarl
in
adc
dec
or
ds
sbb
std
sbb
iret
sub
add
mov
jo
loopne
icebp
fisubrl
adc
adc
or
cmc
mov
out
testb
ss
xchg
cmp
stc
cmp
push
dec
dec
sahf
negl
ds
push
mov
push
mov
and
push
xchg
xchg
dec
xchg
inc
or
lods
cmp
leave
xor
out
push
push
shrb
cli
cs
xchg
sub
stos
pop
clc
mov
ret
fdivrl
out
movsl
loope
les
stos
mov
je
or
mov
out
in
sub
dec
pop
sahf
mov
mov
sub
and
movsb
push
stos
mov
cmp
and
jns
lcall
ret
push
clc
imul
xchg
push
jno
mov
xor
lea
inc
repz
fisttpl
popa
addr16
and
adc
adc
sbb
jb
daa
ds
pop
mov
sbb
sbb
lods
mov
mov
fdivrl
out
xchg
stos
stos
sbb
lods
sbb
pop
or
cs
cltd
sub
jmp
pop
les
addr16
lods
sub
sub
inc
lods
xchg
bound
ljmp
xor
adc
outsl
cmp
adc
and
clc
icebp
sbb
mov
les
scas
mov
push
sub
inc
imul
pusha
push
aaa
or
xchg
scas
bound
and
mov
jmp
bound
mov
jmp
mov
sub
ja
sub
push
sbb
sub
jp
xchg
cs
lods
inc
adc
xchg
mov
popf
pop
pop
jmp
xor
ljmp
sbb
aas
dec
sub
cmp
ja
stc
popf
stos
cmp
dec
outsl
outsl
jb
ljmp
mov
in
fldcw
sub
or
jo
lods
andl
pop
cmpb
aad
inc
xchg
adc
rcrl
add
push
jmp
movsl
inc
popa
hlt
push
hlt
aam
sti
xchg
lock
push
mov
das
insl
cmp
mov
shlb
mov
sub
sarl
jns
sarl
xor
pop
inc
loopne
in
into
mov
pop
add
je
jnp
fnsave
orl
pop
pop
ret
mov
arpl
in
in
test
fcoms
sti
lea
inc
outsb
nop
cmp
ret
and
mov
mov
sbb
xor
cltd
mov
sarl
jle
std
ret
mov
arpl
lcall
orl
cmp
mov
or
aas
scas
cmpsb
mov
jp
out
sbb
shll
push
sub
sbbl
imul
xchg
arpl
shll
movsb
mov
push
aas
jbe
cld
test
pop
pop
mov
mov
sub
stos
dec
adc
frstor
int
xchg
mov
dec
and
fdivrs
pop
xor
and
jecxz
push
stos
lcall
arpl
outsb
aas
scas
aad
mov
enter
cmpsl
cmp
imulb
xor
jp
add
icebp
mov
subl
push
push
fdivs
mov
pop
sbb
lea
sub
test
jmp
clc
mov
in
mov
pop
pop
sbb
dec
in
es
mov
mov
ljmp
mov
jne
leave
imulb
pop
jecxz
xor
jg
in
rcll
cmp
mov
mov
add
popa
cwtl
dec
lahf
xlat
aad
mov
imul
cmpsb
jle
pop
inc
sar
push
dec
mov
sub
cmc
test
mov
jne
mov
dec
fdiv
and
push
pusha
ror
cmpb
add
inc
cmc
ljmp
xchg
or
fstpl
test
aam
and
mov
rorb
mov
aad
mov
or
lret
mov
daa
in
call
test
or
or
xchg
dec
mov
popa
dec
in
dec
sub
or
pop
xchg
enter
addl
jbe
aaa
andl
mov
call
mov
jecxz
subb
xchg
stc
mov
lcall
cmp
push
cmpsl
sbb
fwait
movsb
arpl
js
or
inc
xchg
and
cmp
cmp
mov
push
jecxz
inc
arpl
inc
fildl
add
iret
mov
sub
ret
inc
cmc
lcall
sbb
push
inc
xorb
data16
sbb
movsb
push
mov
mov
xor
cmp
mov
sub
cmpsl
push
add
inc
fucomip
dec
jb
cmp
add
cmp
call
movsb
jne
sub
fnstcw
cmp
pop
cwtl
xor
jle
in
mov
jbe
cmp
pushf
push
imul
imul
out
outsb
xor
jno
lods
imul
pop
fisttpl
and
xchg
lret
imul
cmp
movsb
inc
sbbb
sbb
std
push
loopne
test
loopne
and
aas
push
out
outsb
jb
push
shl
movsb
in
adc
or
data16
je
and
mov
fcmovnbe
jb
das
jnp
xchg
shll
xchg
pop
sub
add
add
outsb
dec
push
stos
jg
or
ficomps
mov
pusha
lcall
arpl
mov
sbb
xchg
sbb
imul
cmpb
jno
ret
lds
or
and
xchg
stc
mov
xchg
jno
xor
aas
pushf
jmp
jg
mov
mov
pusha
push
adc
das
outsl
mov
pop
outsb
in
push
and
xor
or
push
cltd
cmpsb
pushf
das
sub
jne
and
nop
out
lods
push
inc
mov
push
sub
add
out
mov
inc
add
sbb
push
in
or
jecxz
sub
insb
sets
aas
lahf
and
pop
stc
sub
fsubrl
test
mov
pop
fisubrl
ja
call
and
hlt
das
cld
mov
enter
jg
cltd
mov
out
cmc
pop
jo
out
inc
and
ffreep
cmpsl
push
out
cmp
mov
roll
lods
cmp
es
lds
mov
add
test
fistpl
int
out
idivl
jge
jae
shlb
mov
xchg
inc
sbb
jne
aad
movsl
outsl
pop
inc
pop
xchg
add
mov
stos
inc
xchg
icebp
pop
dec
aaa
les
mov
and
dec
gs
xchg
xchg
xor
cmp
in
or
pop
mov
iretw
call
sbb
or
into
add
enter
push
push
xor
mov
xor
xchg
mov
sbb
ret
pop
out
push
cmpsb
jl
in
adc
out
push
fistpll
cmp
nop
cmc
cmp
pop
jnp
shll
les
jae
mov
cs
inc
repnz
imul
daa
in
mov
and
mov
pop
lret
shrb
jnp
data16
pop
cmc
rclb
jae
mov
fildll
movsb
fldcw
pop
push
idiv
test
lea
dec
and
mov
lret
out
stc
cmpsl
jg
lock
jl
or
je
mov
fs
imul
jg
int3
sub
outsl
push
push
mov
xor
aaa
xor
pop
cmp
sbb
fidivl
mov
incb
pop
xlat
ss
cmp
pop
jno
sub
in
push
add
and
jne
adc
pushf
cld
mov
xor
and
movsl
aas
sub
cltd
dec
ljmp
xor
sarl
adc
in
xor
mov
stc
sbb
int
int3
push
inc
rep
and
or
lods
and
call
and
aas
adc
mov
jbe
mov
mov
mov
mov
gs
cli
xchg
gs
outsb
fwait
inc
test
idivl
jae
sbb
mov
and
arpl
add
fwait
repz
cmp
outsb
clc
and
fnsave
dec
pop
jne
xchg
lds
sub
adc
pop
cli
sbb
mov
fcoms
sub
and
icebp
push
in
leave
xor
push
adc
inc
pushl
cmp
scas
or
popf
insb
testl
fnstenv
jge
xchg
xchg
repnz
mov
cmp
fcmovnbe
push
push
daa
adc
sub
repnz
stos
lahf
lea
xchg
ds
int3
xchg
mov
push
fsubrl
xor
into
push
repz
xor
xor
out
mov
adc
sbbb
add
fs
cmc
inc
lea
pop
add
mov
movsb
jp
and
fcompl
iret
jmp
pop
outsl
jl
dec
stos
sub
call
ljmp
pop
jns
mov
and
add
mov
mov
mov
aaa
or
xor
push
jne
cmpsl
lret
or
stos
mov
and
sbb
dec
mov
fistl
and
stc
addr16
lock
sub
push
dec
inc
sar
insl
test
sbb
lcall
jae
add
loope
insl
stos
cltd
sub
jno
inc
adc
jae
push
adc
loope
jb
mov
mov
sub
adc
add
mov
push
jns
outsl
lock
push
clc
push
adc
sub
test
push
or
push
pop
xor
fdivs
mov
aaa
jl
ja
pop
mov
clc
stc
pop
clc
mov
sbb
xlat
loopne
fnsave
lds
push
addr16
je
cmp
sub
lods
mov
cmpsl
roll
mov
jbe
scas
push
jnp
arpl
sbb
or
sbb
push
inc
jl
push
out
add
aam
xchg
andb
push
rorl
ljmp
cmc
xor
int
xchg
push
sub
mov
fdivr
loopne
add
mov
clc
mov
add
pop
xor
jg
popf
cmp
or
je
cmp
pop
iret
jle
push
adc
lods
sahf
pop
negb
je
mov
push
push
mov
push
fildl
or
mov
pop
insl
fidivrl
outsb
mov
xor
insl
insb
mov
in
into
pop
in
cli
sub
call
sub
dec
pushf
xchg
jg
or
sbb
daa
hlt
pop
mov
cmpl
fisubrl
cmpsl
push
cmp
mov
add
sub
dec
push
ja
loop
push
and
mov
inc
out
clc
out
js
cmovl
push
cmp
sbb
adc
sbb
je
ds
ja
daa
xchg
mov
adc
lahf
fnstsw
and
call
gs
jmp
jle
aas
push
jle
ja
mov
je,pt
out
cwtl
cmp
push
xor
add
push
mov
rcrl
clc
push
ret
xor
enter
jbe
mov
ja
aaa
xchg
jle
xor
xchg
and
or
xadd
dec
xchg
mov
les
lds
inc
mov
adc
stos
sahf
xorb
dec
and
inc
imul
ljmp
and
mov
mov
sbb
gs
inc
push
mov
fwait
jnp
mov
mov
and
add
add
bound
unpckhps
xchg
xchg
add
in
pop
push
mov
stos
addr16
inc
push
iret
mov
je
inc
int
inc
flds
hlt
mov
std
iret
xchg
in
scas
push
xor
loop
mov
notb
dec
imulb
int
push
dec
js
cmp
pop
lds
aam
enter
and
call
and
sbb
call
jbe
inc
imul
cmpsl
or
insl
and
shll
mov
loopne
inc
ss
adc
add
or
sub
pop
xor
sub
push
jg
andb
out
pop
mov
out
or
push
push
enter
ds
test
sub
cmp
xor
insb
xorb
xor
mov
add
lods
scas
jo
jp
sbb
cli
insl
push
cmp
mov
push
sub
mov
xor
iret
pop
cmp
testb
xor
add
inc
xchg
fcomps
jns
pop
ss
gs
popf
mov
adcl
cli
jns
sbb
rorl
cmp
rcr
xor
aad
daa
sahf
arpl
and
cld
lea
dec
daa
pop
aas
nop
test
jnp
and
add
mov
pop
pop
test
mov
je
jbe
sub
push
shll
adc
or
and
imulb
sarl
dec
mov
mov
inc
stos
or
fwait
xor
mov
jmp
push
enter
push
testb
pop
pop
xchg
mov
xchg
ret
cmp
and
xorb
mov
in
scas
negl
adc
jae
test
jae
xchg
mov
divl
jae
dec
ret
popf
pop
jge
mov
and
ss
cld
mov
outsb
inc
aas
xchg
insb
jecxz
ja
add
sub
outsl
addr16
aam
hlt
push
cs
mov
mov
clc
sbbb
inc
jns
xchg
sub
fimull
xlat
std
lock
fdivrs
cmp
sub
ljmp
rolb
or
test
adc
sub
mov
mov
and
sbb
ret
in
xchg
cld
mov
mov
test
jge
jge
mov
pop
pop
mov
shll
mov
ror
in
sub
pop
loopne
or
mov
ficoms
and
aad
mov
pop
push
or
mov
xchg
mulb
in
xchg
fcomps
push
jl
adc
cmp
pop
mov
repz
adc
sbb
pushl
push
and
cli
out
js
sub
xchg
mov
lret
mov
scas
cli
int3
pop
and
xabort
xor
dec
loope
out
adc
pop
cltd
pop
or
out
shr
inc
xor
dec
sahf
roll
cmpsb
xor
movsb
push
and
mov
mov
cltd
insl
out
call
mov
es
xchg
rclb
imul
mov
into
int3
push
popf
loop
into
pop
scas
mov
sub
nop
popa
pop
insl
out
xor
mov
mov
imul
fidivrs
leave
mov
push
sub
cs
adc
mov
xchg
jae
mov
cmc
push
sbb
fnstcw
jnp
setno
adc
in
je
push
cmp
cmp
outsb
or
sbb
push
fisttpll
lds
cmpsl
cmp
adc
xor
pop
mov
push
and
pop
into
ret
sub
outsl
xchg
sbb
ja
lods
pushf
daa
pop
xchg
out
movsb
inc
pop
push
cmp
and
leave
push
test
xchg
mov
sub
lods
sub
ret
outsl
sub
cwtl
mov
pop
mov
ret
jo
dec
sub
push
data16
dec
mov
mov
ss
xor
xchg
ja
jle
pop
popf
pushf
sbb
lods
sahf
int3
lret
int
dec
or
inc
shll
cmpsl
sub
es
mov
fnstsw
pusha
filds
cmc
mov
jae
push
outsl
cmp
fisubrl
repz
cmc
int
and
fmulp
ret
jge
das
fsub
stos
rcll
cmpsl
inc
sub
add
addr16
cmpsl
push
pop
mov
leave
shrl
movsb
cmp
mov
xor
xor
fldcw
into
jmp
add
fsubl
lds
lcall
and
cltd
jl
dec
adc
mov
sti
stc
jmp
sbb
in
std
push
pop
mov
xchg
dec
xlat
xchg
fwait
or
jb
shll
scas
out
mov
hlt
insb
pushf
add
mov
lahf
mov
push
push
inc
mov
ret
or
sbb
in
stos
ljmp
loop
xchg
outsb
mov
insl
push
addr16
add
and
shll
into
std
jbe
les
or
mov
push
xor
fisubrs
xchg
sbb
jo
xor
jno
xchg
sbb
fmuls
or
les
push
xchg
popa
stc
int3
sub
fdivrl
and
push
mov
push
jne
jl
jge
cmp
or
jne
inc
ret
sub
dec
imul
inc
xchg
lock
mov
cmpb
sub
mov
adc
enter
hlt
lea
dec
adc
push
aam
push
out
adc
mov
jno
mov
cli
mov
gs
inc
stos
xor
push
jp
stc
outsb
and
fldenv
sub
fsubl
inc
insl
jae
jmp
xchg
icebp
inc
shl
dec
push
mov
loop
push
xlat
mov
inc
in
mov
dec
jo
jae
inc
stos
mov
aad
cmpl
out
sub
add
mov
out
mov
movsl
mov
cmpsl
call
repz
jge
pop
and
and
sti
insl
or
popw
scas
out
and
ficompl
int
xchg
xchg
je
inc
xchg
fisubrl
sbb
mov
sbb
inc
jne
dec
ret
popf
testl
mov
sub
mov
mov
sub
pop
lock
sub
arpl
jle
dec
enter
xchg
mov
cmpb
lret
testb
mov
push
cltd
cmp
inc
jo
sub
sub
and
ficoms
ds
test
pop
aaa
nop
xchg
stc
mov
test
xor
idiv
movsb
fisttps
shll
push
popa
or
xor
push
es
imul
xor
push
stos
lcall
pop
jp
xchg
mov
add
mov
inc
cmp
xchg
push
testl
movsl
mov
cwtl
pop
xor
sub
jg
test
icebp
sbb
adc
aas
xchg
movsb
test
add
mov
cmp
adc
lods
cmp
jbe
sub
enter
lret
mov
mov
jb
scas
sub
pop
rcll
int
jp
sub
dec
sbb
push
push
addr16
mov
adc
stc
adc
clc
jae
aaa
mov
cmp
adc
mov
outsb
and
jmp
daa
ret
imul
stos
stos
into
cmp
push
push
aas
mov
rolb
sub
fucomp
roll
out
sbb
cld
pop
mov
mov
mov
sbb
js
mov
daa
push
bound
pop
and
rorb
repz
sub
int
mov
xorl
lods
scas
add
inc
xchg
or
test
cmp
lods
inc
or
mov
xchg
das
cld
scas
arpl
insl
xlat
mov
loopne
dec
loop
fiadds
adc
nop
cmpps
mov
inc
pop
icebp
pop
sbb
push
jmp
es
sub
rcrb
arpl
pushl
xchg
dec
cli
inc
loopne
sahf
mov
or
add
lds
mov
mov
mov
stc
jae
pop
iret
popa
push
jge
sbb
fisttps
mov
popf
mov
scas
pop
sub
ret
rclb
lods
lret
dec
push
in
pop
jmp
jnp
mov
push
jb
adc
dec
das
adc
pop
dec
sbb
ret
ds
test
leave
ds
jp
loop
loopne
sarl
mov
notl
xchg
lcall
test
push
dec
enter
fs
inc
fisubrl
movsl
adc
call
adc
rolb
push
xlat
pop
pusha
add
iret
cwtl
adc
or
call
cmp
push
mov
maxps
sbb
inc
or
imul
dec
outsb
cmp
xor
icebp
into
scas
pop
into
pop
pop
pop
in
jbe
lds
je
cli
dec
xchg
enter
push
pop
pop
mov
mov
in
push
xchg
or
sub
and
cmp
adc
dec
out
loop
arpl
xchg
jge
mov
lret
inc
pop
cmpsl
inc
mov
push
repnz
insb
add
sub
mov
das
daa
into
or
fwait
pop
mov
xor
popl
adc
ss
mov
jle
aas
or
outsb
pop
outsl
jp
es
clc
pop
fdivrl
mov
mov
xor
fdivs
cli
inc
inc
fs
dec
ds
cmp
mov
pop
inc
addr16
addl
scas
cmp
data16
jl
es
sbb
cmpl
sti
dec
dec
mov
mov
aas
sbb
std
movsb
icebp
mov
out
cmp
ljmp
and
fidivs
sbb
jecxz
fidivrs
out
not
or
dec
adcb
lods
mov
or
mov
inc
loope
xchg
dec
push
xchg
sbb
xchg
sub
xor
add
dec
or
pop
cmp
jno
push
push
and
fmull
or
mulb
mov
dec
add
mov
cmp
sti
sub
lds
push
lock
lea
inc
inc
lods
cmp
mov
mov
pop
xor
ret
popa
mov
adc
aad
imul
dec
fistpl
and
cmpl
add
sahf
enter
jo
or
pop
or
xor
sbb
mov
fcomps
fs
mov
xchg
fldenv
sbb
in
clc
repnz
dec
btc
jg
das
cmc
lcall
out
test
push
and
sub
mov
jns
into
xchg
fidivrl
enter
data16
cwtl
movsl
ljmp
pop
dec
jmp
pop
mov
push
push
ret
mov
out
mov
dec
sahf
lcall
enter
sarl
lods
sbb
cs
jl
cli
sbbb
mov
ret
xor
push
xchg
add
addr16
rep
andb
cmp
imul
pop
lret
fwait
adc
call
rorb
jns
xchg
jle
into
add
mov
jmp
push
mov
adc
pushf
push
fbld
cmpsl
sub
mov
and
cld
movsb
mov
sub
sub
int
adc
cmc
sbb
cmp
cwtl
dec
mov
push
xchg
cltd
and
pop
imull
lret
lock
xor
arpl
and
inc
cmp
iret
test
ds
cmp
aas
popa
cmpsl
les
push
nop
sub
nop
mov
rol
mov
data16
cltd
mov
mov
mov
mov
pop
xchg
insb
push
jnp
add
arpl
into
push
push
cmp
mov
fldl
fisubs
iret
cmp
test
adc
psrlq
out
sbb
ds
mov
lods
fbld
insl
fiadds
push
xchg
dec
sbb
xor
fldl
sbb
fdivrs
lock
sbb
jb
lret
jmp
xor
push
xchg
dec
aad
sarb
pushf
daa
and
inc
jle
xchg
pop
call
sbb
mov
adc
ret
pop
and
imul
cmp
dec
adc
jo
cmc
ja
cmp
mov
enterw
xor
into
mov
push
je
adc
adc
or
adc
outsl
ret
sub
push
test
ret
sub
mov
jnp
fcmovne
in
pop
fldcw
repz
mov
ror
add
lahf
sub
jle
pop
cs
dec
pop
mov
mov
imul
insb
int
xchg
aas
push
lahf
js
xor
fists
pop
pop
daa
testl
mov
repz
insl
das
xor
sub
test
aam
call
clc
outsl
rclb
inc
pop
and
mov
jge
xchg
cltd
popa
je
add
pop
hlt
cmpsl
out
fmulp
aad
xor
leave
cmpsb
sbbb
imul
shrl
mov
test
and
fdivrs
ret
jne
sub
imull
icebp
jns
pop
mov
loop
sub
xorl
jp
test
stos
lods
inc
pop
shrb
cmp
cltd
rcrl
xchg
stc
jecxz
fsubr
and
jbe
mov
mov
movsb
imul
mov
scas
inc
mov
lock
cmpb
lahf
and
ret
push
repnz
mov
in
daa
outsl
push
pcmpgtw
jl
push
mov
xchg
xchg
addr16
cs
stos
jne
or
ret
aas
sub
ret
and
add
lret
stc
loop
cmpsb
jne
insl
loopne
test
btr
jo
mov
rolb
push
mov
stos
mov
stc
sub
outsl
sub
iret
sbb
lods
pop
push
xchg
das
test
repz
xchg
divb
dec
mov
push
movsl
xchg
ud1
dec
fsubrl
xchg
jge
or
mov
les
leave
xor
or
jp
in
adc
enter
jl
and
ljmp
insl
aaa
test
jo
inc
xor
inc
shrb
into
shlb
sub
mov
jg
xchg
mov
ja
stc
mov
push
push
insb
jl
in
imul
push
fdivrl
in
jle
mov
ljmp
jmp
movsb
mov
cmp
cmpsb
cmpsb
xchg
mov
add
jle
lods
test
loope
test
mov
xor
scas
mov
push
shrb
int3
cmpl
scas
or
popl
and
mov
sub
mov
cmc
jle
jns
test
mov
and
adc
in
ljmp
es
pop
stos
adc
jo
pop
sti
jp
lds
inc
pop
xor
mov
ror
pop
loopne
test
ljmp
dec
testl
push
in
lret
xchg
dec
mov
repz
out
nop
mov
dec
in
cmp
roll
repz
jmp
loop
ljmp
mov
arpl
lcall
dec
stos
jp
scas
aas
shlb
xor
cmp
jge
inc
xorl
addr16
pop
jp
loop
testl
testb
mov
sub
jecxz
jle
xchg
xchg
mov
clc
add
cmp
pop
dec
cltd
rclb
insl
jns
pop
movsl
call
fcomps
idivl
mov
out
and
and
test
dec
xchg
xchg
jae
xchg
and
stc
stos
ret
std
mov
pop
pop
rclb
sti
jmp
jecxz
push
shlb
sub
push
loope
faddl
or
adc
cmp
js
add
sbb
arpl
insl
lea
iret
sbb
and
in
jl
push
or
xchg
and
popl
lods
dec
or
cmpsl
enter
aad
jno
cmp
mov
scas
movsl
jecxz
aad
cld
ret
xor
mov
and
in
cmp
fadds
cmp
inc
cmp
xchg
mov
xchg
roll
and
and
cmp
popf
leave
add
and
push
mov
out
lahf
not
mov
push
icebp
sbb
mov
shll
andl
pop
lds
inc
lea
rclb
xchg
mov
sbb
rcll
rcr
mov
sub
sbb
fildl
sbb
adc
test
test
in
clc
std
mov
xchg
mov
xchg
and
pop
test
push
mov
jne
das
add
test
lcall
xchg
cmc
cwtl
in
js
sub
jg
movsw
jge
push
cmp
mov
xor
sbb
mov
push
xchg
notb
popf
popf
inc
clc
lods
clc
scas
bound
add
data16
pop
stos
stos
mov
xchg
mov
stos
jmp
mov
cmpsl
dec
xor
sbb
out
orb
mov
ds
cld
and
fxch
xchg
mov
cmp
ret
sub
fistpl
mov
inc
pop
or
adc
pop
in
data16
sahf
or
or
outsb
pop
push
or
rolb
outsb
cs
ret
mov
sbb
pop
pop
dec
dec
icebp
nop
cmpsb
lcall
fimull
mov
pop
jg
xlat
add
ds
xor
sarl
xor
dec
call
mov
mov
or
ret
dec
add
lock
outsl
mov
inc
mov
dec
adc
shlb
scas
lods
pop
popf
jmp
dec
test
scas
fwait
test
push
loope
outsl
push
leave
lcall
mov
dec
jecxz
pop
inc
adc
imul
push
dec
out
ficomps
jl
cmpsb
cmp
adc
fistps
into
push
ss
lret
sub
sbb
fists
into
mov
cmp
sbbl
cmpsb
mov
mov
inc
test
xchg
pop
xchg
call
sub
outsb
repnz
mov
pop
xchg
fisttpll
mov
push
in
xor
jae
insl
add
rcrl
add
xor
adc
pop
idivb
dec
cld
jo
test
stos
push
cmp
movsb
inc
push
dec
clc
and
out
push
in
pushf
sub
pop
es
mov
add
add
mov
add
adc
xor
mov
push
xor
aad
pop
xchg
jbe
xchg
fucompp
data16
or
rclb
or
inc
orb
mov
call
xchg
sub
addb
jmp
add
push
test
jmp
mov
cmp
es
fisttps
dec
xchg
mov
adc
jl
out
pop
fcos
and
add
push
jnp
pop
in
mov
ret
xor
nop
outsb
adc
test
cmp
sahf
es
push
push
mov
adc
rorl
bound
lods
jge
pop
sahf
rcl
sti
mov
inc
dec
mov
cltd
mov
int
orl
adc
mov
dec
xchg
jg
in
sub
adc
cmp
cmp
xchg
gs
test
mov
ja
inc
xchg
fiaddl
cmc
hlt
mov
rorl
cmpsl
fdivrl
mov
mov
mov
into
and
fwait
jle
or
lret
std
repz
mov
mov
cmpsb
setnp
sbb
dec
mov
adc
jl
je
push
cmc
jp
inc
jno
arpl
push
xor
rclb
je
popa
ret
dec
add
dec
nop
test
inc
push
pop
stos
jne
push
jg
add
lahf
divl
push
fidivs
push
js
mov
lock
cmc
sub
jne
dec
inc
mov
xor
cmp
mov
fistpll
lods
in
xor
xor
sti
rcrl
mov
dec
adcl
loopne
xchg
sbb
xchg
jecxz
inc
arpl
cmpl
push
dec
repnz
push
adc
or
enter
sarl
pop
pop
in
or
sbb
js
and
cmp
jmp
push
mov
fdivr
or
or
cli
or
pushf
je
or
ror
js
inc
sub
xor
add
insl
sub
addr16
rcr
inc
add
pop
cmp
xchg
cmc
jmp
insl
push
into
sub
es
subb
push
jb
clc
jnp
ss
and
or
xor
sbb
mov
ss
or
xlat
dec
lcall
addl
jmp
jae
xor
stos
sar
mov
xlat
divb
xor
inc
jl
std
imul
mov
xchg
daa
and
mov
xchg
bound
imul
xchg
push
icebp
pop
mov
and
js
cmp
jl
jbe
lods
mov
bound
lret
push
ds
rclb
adcb
insl
js
lret
ret
sbb
fwait
mov
cmp
cld
or
lea
out
pop
fdivs
in
push
andb
pop
inc
mov
xchg
push
into
aam
aas
add
ja
clc
inc
push
mov
cmpsl
jg
pop
mov
aad
popa
sub
mov
aad
lds
mov
or
lret
std
into
push
or
pop
push
hlt
or
fucomi
ja
dec
test
mov
das
sub
jns
and
rcrl
and
aad
movsl
mov
cli
push
in
xor
mov
add
fadd
cltd
jp
pusha
fbstp
repnz
jge
xchg
mov
xchg
call
sbb
mov
outsb
cmp
sbb
loop
out
pop
push
cmp
sbb
hlt
aad
mov
push
movsl
cmc
pop
cmpsl
inc
les
push
xchg
xchg
sbb
js
jecxz
out
xor
loope
xlat
imul
sbb
lahf
repz
mov
scas
xor
or
das
sbb
add
sbb
test
int3
aad
mov
jb
push
flds
xchg
dec
mov
aas
in
or
push
jmp
mov
xor
cltd
fbstp
mov
jnp
mov
outsl
sub
test
shll
outsl
lods
fiaddl
pop
cmpsb
or
add
xorb
out
push
xchg
jne
in
lock
xchg
push
in
es
mov
cmp
jl
cmpsl
add
icebp
or
push
mov
jnp
sbb
push
aad
fimuls
or
jle
std
ljmp
enterw
adc
cmp
add
jg
fistpl
insl
test
nop
enter
or
pop
pusha
xchg
mov
push
and
mov
cs
add
ds
out
out
lcall
filds
dec
fadds
std
dec
std
sub
mov
rclb
lahf
mov
inc
jb
sti
mov
adc
sbb
cmp
mov
push
sub
xor
sbb
and
popa
xlat
dec
mov
mov
gs
xchg
push
loope
int3
pop
add
adc
lock
sub
sub
lds
fnstcw
in
test
gs
dec
jl
fildll
jmp
and
fsubrs
insb
sub
adc
ljmp
insl
jnp
movsl
test
cmp
out
leave
inc
mov
lea
out
or
mov
push
clc
cmc
scas
shlb
cmpsb
dec
push
in
ficompl
sbb
mov
loopne
test
rcrb
ljmp
lcall
dec
mov
jp
js
dec
into
out
mov
and
xchg
sbb
into
fcompl
mov
movntps
insl
scas
adc
loopne
pop
leave
ficompl
cmp
jns
divl
sarb
repz
mov
repnz
aad
ficoml
pop
dec
or
lcall
scas
push
or
sbb
or
je
popa
pushf
es
es
dec
jnp
mov
add
ja
inc
rcr
loope
mov
test
and
and
addr16
cmpb
mov
ficoms
mov
cmp
data16
fwait
cmpsl
lods
ss
jnp
push
add
mov
sbb
add
mov
inc
outsb
pop
out
scas
adc
dec
in
adc
stos
lret
aam
dec
je
or
inc
adc
xor
test
push
xor
vpminub
or
rcr
inc
add
scas
push
pusha
jne
icebp
inc
or
gs
pop
aas
loop
sub
lock
aaa
cmp
mov
lea
sub
add
pop
add
mov
push
jae
cmc
jo
xchg
fcom
iret
pop
sub
adc
in
jmp
cli
pop
lret
mov
dec
xor
iret
addr16
roll
shlb
add
lods
inc
loop
and
adc
cld
push
repz
dec
in
or
ret
les
fisttps
scas
fldcw
inc
add
stos
push
mov
ret
lahf
pop
mov
repz
xorl
lcall
in
cmc
mov
mov
lds
fnstcw
xchg
sub
movsl
add
mov
mov
inc
or
pop
popa
insl
xchg
cmp
inc
cs
stc
lods
jl
int3
psrlq
in
fnsave
iret
icebp
jae
roll
cld
das
xchg
mov
mov
mov
cmpsb
scas
sub
xorb
cmp
mov
ret
jo
push
xchg
lods
imul
sub
nop
push
ljmp
xor
out
pop
loopne
inc
fldenv
call
jne
xchg
xor
out
cwtl
cmc
mov
mov
outsl
pop
pop
pop
pop
call
scas
lods
add
lods
shll
or
stos
jns
and
loopne
pop
rcrb
pop
mov
ficompl
push
pusha
dec
sahf
cmp
data16
test
sbb
pushf
test
add
jno
inc
ret
xchg
xchg
sarb
xor
dec
sbb
std
jl
icebp
jmp
push
mov
out
ror
cmpsb
mov
jl
stc
dec
into
enter
mov
popf
cmp
sti
dec
out
and
into
or
lods
adc
imul
icebp
add
push
lods
mov
pop
inc
or
popa
iret
nop
jg
cmp
lret
inc
inc
mov
inc
stos
btr
jae
sbb
icebp
push
xlat
jbe
sbb
cmpsl
push
pop
push
push
jmp
dec
insb
dec
enter
xor
xor
stos
sbb
repnz
scas
pop
push
mov
jecxz
add
add
and
push
adc
sahf
cmpb
outsb
scas
jb,pn
dec
jbe
mov
fistps
loope
push
push
ja
push
add
inc
add
xor
leave
or
sbb
and
xchg
mov
stos
xchg
xchg
add
in
cwtl
xchg
imul
call
js
adc
push
cld
mov
pop
ss
aaa
test
adc
lods
es
sarb
into
push
xor
shrl
push
es
and
sub
xor
lea
jae
fs
push
adc
cld
out
rolb
adc
sbbl
xchg
pop
mov
stc
divb
stos
fisubs
sbb
xchg
sarb
xor
fsts
bound
leave
mov
push
icebp
dec
loop
xchg
lahf
mov
pusha
bswap
cmp
inc
loopne
mov
or
out
jno
stc
fstps
mov
hlt
xchg
add
outsl
jb
add
mov
or
mov
sarb
shll
cmpsb
aad
mov
das
sbb
dec
xor
cld
sti
popa
cltd
mov
out
stc
mov
pop
fwait
lock
jge
cmp
push
subl
dec
add
cmc
leave
testb
pop
lret
cmp
loopne
ss
add
popf
sbb
cli
dec
fcomi
gs
ljmp
push
xchg
shll
and
add
xchg
cltd
in
cs
xchg
cmp
cltd
aas
dec
lcall
insl
mov
stc
cmp
call
or
push
lret
push
inc
cmp
nop
pop
inc
jp
xchg
in
xchg
fwait
mov
and
sete
dec
xchg
call
dec
pop
movsl
push
push
testl
inc
mov
jne
and
or
xchg
loopne
nop
mov
mov
std
sbb
lahf
dec
orb
sbbb
inc
push
in
inc
in
ret
enter
jne
popa
push
sti
mov
pop
shl
in
cld
push
in
lds
push
addr16
bound
xor
mov
enter
mov
sbb
mov
clc
testb
mov
sahf
mov
shlb
int
dec
imul
ret
lea
fidivl
jne
imul
out
fwait
xlat
shlb
jmp
fidivrs
xchg
pop
fs
push
pop
fdivl
push
lret
add
sbb
dec
dec
mov
aas
and
mov
add
jg
pop
jae
mull
stos
repz
es
cmp
pop
imul
jno
and
push
xor
cmp
jl
and
or
shlb
adc
insb
xchg
push
rorb
push
bound
dec
and
frstor
jmp
inc
and
mov
inc
dec
mov
xchg
add
push
mov
mov
mov
lahf
dec
jnp
scas
das
or
jae
mov
jno
xor
out
adc
mov
imul
mov
in
repz
out
jnp
xchg
inc
cmpb
or
jne
adc
clc
add
outsb
xchg
mov
pop
fldcw
jmp
push
call
sbb
out
mov
dec
push
sub
stc
mov
sbb
inc
popa
jbe
arpl
loope
addr16
add
dec
dec
mov
jmp
adc
or
outsl
xlat
jge
jne
sub
outsb
xlat
adc
xor
mov
fstpt
pop
movsl
scas
repnz
sbb
lcall
cwtl
lock
repnz
sub
push
or
rcll
rorl
bound
outsb
add
and
mov
ficompl
jl
xchg
addr16
mov
add
lods
inc
pop
ret
fcoms
pop
pop
pop
jge
lret
dec
fsubrl
xor
mov
and
dec
adc
dec
push
lret
lods
fbstp
imul
sahf
or
gs
adc
adc
stos
mov
jae
xor
divl
add
movsl
out
pop
jge
xor
out
inc
adc
rcll
in
repnz
jle
inc
shlb
push
pop
daa
rcll
sub
xlat
jo
xlat
fdiv
xor
fidivs
mov
add
dec
push
add
lds
or
cmp
push
add
push
ret
xor
nop
cmp
mov
lea
movsb
daa
sbb
sub
mov
pause
pop
dec
lods
pusha
cmpsb
clc
vpavgw
out
pop
addl
jb
dec
aaa
movsl
test
and
ss
mov
push
jae
jmp
sub
add
cld
insl
dec
xchg
in
push
cmp
cmp
dec
lcall
jg
ss
repz
int3
add
cmp
ja
test
out
jnp
fstpt
sbb
add
outsl
rcrb
mov
sti
jb
dec
test
sbb
outsb
sub
imul
push
stos
lods
mov
mov
decl
push
cltd
dec
xor
jge
test
iret
pop
inc
xor
sub
mov
xor
sbb
sub
inc
sbb
lods
add
pushf
push
std
jmp
mov
jge
add
ja
lcall
jecxz
mov
xchg
mov
or
das
mov
test
fnstenv
aam
fstpl
mov
cli
cmp
nop
loope
ljmp
adc
ficoms
jmp
or
into
cmp
mov
cli
xchg
fistps
call
dec
cmp
pop
jg
jbe
enter
pusha
outsb
shrl
push
outsl
imul
shlb
jns
dec
xchg
pop
xchg
ficomps
dec
sbb
xor
lock
js
into
xor
int3
testb
lret
aad
pushf
sub
mov
add
mov
loope
xchg
gs
lahf
arpl
bound
xchg
arpl
jle
push
lret
mov
lds
or
and
insl
and
in
lret
jne
bound
fsub
cmpsl
lock
jns
out
and
jno
xchg
inc
nop
and
sub
inc
cmp
xor
call
push
mov
push
out
hlt
mov
push
fsincos
stos
mov
mov
sub
ja
lods
pop
cli
lock
aam
orl
movsb
cmc
in
js
hlt
imul
mov
xor
fwait
add
shr
stos
fldl
cld
sbb
pop
aaa
scas
xchg
nop
pop
lcall
push
imul
mov
je
mov
mov
nop
xchg
sbb
sub
pop
mov
aam
push
or
xchg
mov
mov
out
or
push
pushf
test
and
mov
stos
jno
dec
out
loope
shrb
mov
pop
dec
fldl
imul
fwait
jmp
mulb
inc
cmp
pop
mov
inc
and
mov
bound
das
aaa
sbb
sahf
push
out
shrb
aam
xchg
imul
insb
mov
cltd
pop
push
js
in
dec
lods
or
mov
popa
adc
mov
pop
sub
mov
iret
std
push
rcr
sbb
mov
inc
push
sti
out
iret
mov
jne
bnd
mov
leave
xlat
hlt
fcompl
adcl
aam
xor
sub
xchg
in
out
dec
jns
nop
and
sbb
lods
arpl
and
in
dec
mov
pop
sub
ret
adc
out
mov
fmuls
mov
leave
mov
push
loope
lahf
lea
aas
mov
leave
mov
sahf
test
push
imul
cmp
jecxz
pop
loop
dec
leave
or
fwait
or
das
pusha
fiadds
mov
pop
aas
clc
lock
sub
mov
jmp
pusha
mov
inc
push
pop
jmp
sub
fwait
das
mov
pop
inc
clc
test
jmp
lea
pusha
sbb
pop
lock
cmp
icebp
aaa
stos
adc
out
hlt
aas
in
cmp
addr16
icebp
mov
test
or
mov
das
out
xchg
xchg
fldenv
arpl
stos
mov
mov
ss
mov
out
add
out
and
rcrb
mov
push
jg
bound
sbb
test
adc
popa
mov
sbb
stc
xor
nop
xchg
jp
pop
daa
pusha
dec
cmpsb
outsb
ds
mov
jg,pt
lcall
adcb
movsl
mov
movsl
nop
shl
sbb
shrl
xor
jl
cmp
addr16
xchg
loope
sbb
in
sub
mov
fsubrs
hlt
and
mov
or
lcall
ret
jge
mov
pop
pop
mov
and
add
rclb
int3
mov
jb
mov
mov
cmc
int
dec
xor
xor
outsb
add
mov
jg
js
icebp
rcrb
out
das
xchg
jae
shrl
jb
mov
shll
cld
out
test
inc
fldl
mov
pop
cmp
mov
mov
xlat
mov
ja
cmpsw
cltd
daa
nop
jb
inc
adc
sahf
into
fmul
aam
lcall
jno
push
sti
std
cmpb
push
lret
in
hlt
mov
push
data16
sbb
add
lods
inc
imul
loop
fwait
mov
xchg
movb
cwtl
lahf
jb
stos
popf
cld
cmpl
adc
std
sub
cli
das
jecxz
es
sub
popf
mov
bound
adc
mov
das
rolb
fsubrl
jecxz
imul
push
test
cmp
mov
mov
mov
push
ja
cltd
push
das
es
jg
inc
mov
mov
and
cld
sub
out
inc
fwait
mov
call
inc
push
mov
je
cmpsl
sbb
pop
xor
std
mov
lock
add
add
xchg
jo
or
or
mov
pop
pop
je
mov
mov
sub
mov
dec
or
repz
loopne
mov
es
ds
in
std
push
mov
inc
mov
sub
inc
lret
in
push
cmc
sub
ds
lods
fmuls
cmp
pop
lock
or
loopne
mov
add
push
pop
jo
mov
sub
outsb
scas
xchg
cmpb
aam
in
cmc
xchg
pop
mov
push
leave
mov
mov
stos
cmp
sub
add
nop
push
jnp,pn
jle
js
push
test
dec
inc
shll
push
outsb
jne
cli
mov
ja
push
pop
inc
sti
xor
jo
or
xor
cmpsl
cmpsb
mov
int
lods
sbb
inc
push
insl
xchg
es
gs
xchg
push
jo
ror
test
loop
xchg
and
adc
lea
cmpl
loope
push
fwait
mov
mov
and
into
andb
sub
mov
std
adc
mov
bnd
scas
stc
jno
inc
push
gs
xchg
popf
pop
jl
pop
or
mov
ret
scas
je
or
xchg
xchg
sti
imul
aaa
cltd
imul
ds
js
cmp
pop
ja
inc
and
push
sbb
push
dec
jp
outsb
scas
xor
test
movsl
and
xchg
pop
mov
ds
daa
pop
jmp
pop
xchg
out
cmpsl
inc
in
dec
popa
push
loop
mov
xor
das
sub
adc
push
add
fsts
sbb
fiaddl
pop
inc
daa
mov
fstpl
cmp
dec
mov
push
ljmp
dec
test
gs
and
and
shll
daa
fisubs
mov
sbb
add
inc
enter
nop
fcomi
push
lods
aaa
xor
adc
hlt
pop
stos
aam
xor
call
notl
pop
dec
negl
and
jle
les
mov
stos
inc
jge
mov
das
mov
pop
out
insl
mov
fcomp
adc
jno
test
xor
ror
sub
cmpsl
jge
xchg
lods
lock
in
mov
push
pushf
pop
mov
cmp
ljmp
cmp
subl
dec
dec
or
cmc
xchg
mov
mov
xchg
rcrl
dec
cld
push
pop
and
mov
mov
xchg
imul
in
and
aam
mov
fimull
lds
cmp
cmp
test
bound
lret
dec
fstl
leave
push
inc
pop
pop
fisttpl
jmp
shll
and
call
daa
xor
add
sub
mov
loopne
imul
xchg
dec
add
out
inc
xor
ja
ficoml
push
mov
mov
orl
sub
inc
mov
cmpsl
in
dec
pop
mov
mov
out
repz
add
add
and
jnp,pn
shl
andb
sti
aaa
lods
xor
pop
lret
xchg
scas
lcall
mov
dec
stos
xchg
adc
lds
cmp
mov
mov
mov
fisubrs
mov
adc
aam
xor
aas
lea
inc
test
adc
out
xor
frstor
push
aam
lds
pop
cmp
addr16
jge
cmpsb
outsb
lea
in
ret
stos
xchg
sahf
mov
add
int
into
das
notb
or
mov
jecxz
add
or
iret
ljmp
cltd
pushl
test
lahf
mov
jbe
dec
movsb
gs
lcall
dec
jl
repz
mov
cwtl
ret
aam
fs
jb
dec
cltd
ds
das
fdivrs
push
lock
cmp
xchg
pop
clc
dec
add
cmp
or
sbb
test
dec
lcall
shlb
cmp
inc
mull
sbb
out
das
add
lods
xor
mov
ja
into
pop
and
jl
outsb
fistps
inc
push
jg
adc
mov
jno
ja
icebp
mov
push
dec
mov
out
subl
js
and
mov
leave
test
outsl
or
call
in
pop
cmpsl
pop
mov
xor
stos
push
icebp
decb
js
or
mov
xchg
roll
into
mov
xchg
popf
movsb
mov
je
pop
int3
movsl
add
lds
pop
mov
dec
adc
fsubr
je
lret
nop
mov
fs
mov
xorl
cli
pop
mov
dec
push
pop
dec
ret
fists
and
push
push
mov
mov
or
mov
stos
stos
fstl
xor
mov
fwait
imul
call
xchg
mov
std
loope
xorb
xor
stos
mov
push
sbb
mov
pop
insb
pop
in
cltd
fwait
xor
mov
adcb
std
mov
mov
cmp
lds
cltd
imull
mov
stos
icebp
stos
loop
lods
movsb
pop
stos
xor
stos
outsb
sbb
outsl
lea
stos
xlat
pop
mov
mov
push
xor
scas
stos
enter
cmp
mov
iret
jge
fistpll
xlat
fmull
leave
mov
mov
loopne
movsl
fiaddl
sbb
loopne
dec
ljmp
xchg
sub
jmp
ficompl
mov
ja
lods
inc
cmpsb
and
or
mov
test
outsl
pop
adc
call
fsubrl
mov
cmp
xor
or
mov
xchg
sub
mov
out
std
push
add
leave
stos
pushf
data16
xchg
dec
jg
call
mov
push
sub
dec
cwtl
dec
pop
popf
inc
xchg
pop
icebp
aad
push
movsb
xor
sub
jns
dec
in
and
clc
lahf
in
xor
popa
lret
pop
ja
out
ret
scas
aad
cmp
push
inc
jmp
mov
sbb
loopne
into
pop
sbb
mov
fnsave
adc
aad
mov
les
xor
sbb
je
dec
icebp
pop
inc
pop
pop
and
xchg
negb
mov
repnz
stos
shlb
ljmp
mov
popf
jb
xchg
cli
push
cmpsl
pusha
fwait
ja
and
je
lds
popa
dec
mov
aam
ud1
mov
sub
and
mov
lods
push
mov
shlb
loopne
repz
cmp
imul
cmp
cmpsl
jb
data16
mov
dec
jmp
out
add
jl
push
adc
shrl
xor
cmpsb
push
sbb
mov
jbe
mov
mov
mov
sbb
stos
xor
cmpsb
or
jae
out
es
sub
ds
fcoml
mov
xchg
fldenv
sahf
ja
jno
xor
xchg
cmpsl
push
mov
or
and
ficoml
ret
mov
sub
jmp
movsl
add
or
dec
lcall
out
xchg
xlat
mov
in
mov
scas
jb
into
pop
mov
gs
scas
xchg
in
adcb
adc
mov
fdivrl
andb
popa
adc
into
and
xorl
xor
test
ljmp
pop
test
or
in
es
xchg
or
rol
ds
sub
pop
dec
sbb
cmp
mov
xchg
adc
pop
cld
pop
movsb
lea
push
cmpsl
push
xor
mov
xorb
aas
mov
fmul
sahf
in
ret
push
xchg
cmpsl
sub
mov
xor
and
fsubrs
cmp
loope
xchg
out
add
xchg
pushf
dec
mov
pop
mov
mov
ds
ljmp
dec
mov
xchg
or
mov
loopne
xchg
insb
mov
and
sub
sbb
push
into
fstpt
xchg
scas
push
daa
inc
mov
sub
dec
dec
es
push
mov
push
hlt
stc
in
cwtl
nop
cli
jmp
movsl
mov
or
xor
jge
jne
cwtl
test
and
ror
add
add
ljmp
aad
sub
push
mov
dec
je
jae
stos
mov
xchg
cmp
jp
imul
out
inc
jno
push
lret
and
add
imul
xchg
in
insl
dec
gs
insl
jmp
shll
adc
fwait
push
lret
xchg
xor
mov
insb
cmpsl
xchg
sbb
xor
jle
popa
inc
ljmp
movsl
mov
rcrl
jae
mov
mov
addr16
loopne
push
push
xchg
sbb
lahf
push
shrb
pop
cmpsl
inc
cmp
adc
adc
cmc
xchg
mov
dec
and
mov
pop
stos
mov
gs
jge
dec
mov
test
jmp
adc
ja
scas
aas
daa
cmp
pop
push
enter
pushf
cltd
mov
pop
cltd
icebp
test
pop
mov
jl
or
aad
and
ret
mov
les
add
xchg
loopne
lahf
xorb
out
dec
rcl
and
xor
dec
jmp
sub
cmp
int3
push
mov
or
sbb
rcl
pushf
pop
pusha
xor
out
dec
jg
out
lods
aam
rcll
jb
jle
and
shll
iret
mov
sahf
or
jmp
mov
fisttps
pusha
mov
push
xor
gs
mov
cmc
mov
adc
filds
aad
push
sub
test
sub
add
pop
mov
scas
gs
jge
scas
test
rcl
mov
push
icebp
xchg
mov
pop
fwait
les
imul
enter
cmp
psubd
sbb
out
sub
add
into
jae
insl
mov
test
cmp
push
popl
mov
dec
and
imulb
sub
pop
push
je
pop
stos
add
mov
mov
cmc
std
test
rcll
xor
inc
jno
cld
clc
jge
add
cmpsl
int
pusha
mov
aas
test
xor
aad
das
xor
xchg
outsb
cwtl
xor
cmp
test
or
lock
jl
sub
xor
fisubs
je
and
xchg
cmp
mov
mov
out
loop
mov
mov
clc
fisubrs
mov
mov
in
enter
rcr
cmp
push
or
xor
enter
loop
out
sub
outsb
or
pop
sub
fsubl
scas
pop
add
mov
jg
aad
test
dec
adc
roll
inc
stc
xor
jbe
inc
jecxz
mov
jns
popa
das
leave
rolb
cwtl
hlt
hlt
mov
adc
pop
lahf
cmp
and
sbb
shl
add
or
mov
fnsave
adc
int3
in
and
pop
lret
push
jecxz
inc
mov
rcr
aam
sub
mov
pop
ret
mov
xor
out
std
ljmp
sbb
or
gs
int3
mov
addl
call
into
or
pop
mov
add
popa
and
mov
dec
addr16
adc
imul
mov
ret
enter
movsb
push
or
cmpsl
xor
dec
push
stc
push
movsb
dec
popf
mov
cmc
jne
incl
ret
repz
ret
jg
cmp
pop
rorb
xchg
lods
push
dec
icebp
cmp
or
insl
stos
sub
dec
mov
cmp
dec
outsb
add
jp
pushf
loopne
mov
incb
movsb
mov
popa
out
xchg
fildll
jl
aam
pop
pop
xchg
jne
dec
fildll
into
jp
int
mov
xor
out
mov
jmp
push
aam
rcl
inc
rorb
jp
popa
nop
push
mov
jo
rcrl
pop
repnz
xor
mov
jg
pop
cmpb
orb
js
cli
push
jmp
cltd
xor
inc
push
push
adc
sbb
movsl
pop
push
stc
push
test
xchg
mov
inc
movsl
std
testl
mov
push
test
popw
cs
add
lret
das
lret
aas
sahf
hlt
add
shlb
aad
sti
push
aad
pop
mov
int3
xchg
mov
xor
push
mov
ljmp
jecxz
mov
pop
je
sub
pop
xor
xchg
cmp
into
outsl
test
fdivrl
add
dec
inc
or
add
xchg
adc
mov
scas
sub
and
ds
in
add
push
xlat
mov
jbe,pt
popf
jge
mov
sahf
jge
enter
or
adc
add
pop
pop
push
movsb
insb
mov
dec
dec
xchg
outsl
mov
xor
sbb
mov
jne
addr16
xor
adc
lods
xlat
sbb
pusha
clc
lock
std
mov
sahf
push
jmp
fiadds
mov
popa
add
addr16
mov
dec
arpl
dec
add
test
xor
in
push
xor
add
mov
js
outsb
mov
cmc
pop
jmp
pop
test
pop
rcl
xor
jns
mov
std
lret
push
mov
xor
sbb
pop
in
push
sub
lods
pop
xor
es
xchg
xchg
leave
rorb
movsl
sbb
sub
ja
xchg
xchg
ss
add
pop
cmpsb
xor
push
adc
outsl
lock
dec
and
sub
dec
insl
mov
cmpsb
mov
lret
xor
movsb
mov
pusha
xchg
xlat
int3
mov
aam
fadds
es
mov
aaa
cmpsl
adc
inc
lret
in
xchg
xor
add
sbb
jp
cs
cld
in
jecxz
outsl
testl
sub
inc
cmp
add
lret
jo
call
xchg
movsl
push
loope
dec
rcr
lcall
cmp
fwait
lds
cmp
mov
adc
adc
popf
xor
lods
pushf
xor
jne
lods
icebp
xchg
jl
cmpsb
mov
jg
jecxz
mov
and
es
rcrl
or
mov
dec
lret
pop
gs
daa
xor
ljmp
daa
xor
push
lds
popf
fcomps
sbb
mov
or
cmp
lahf
cmpsl
loope
inc
ret
fiadds
data16
rcrb
outsl
in
test
jmp
pop
aad
dec
mov
jmp
inc
push
jmp
arpl
add
ficoms
fstpt
imul
mov
loop
leave
xchg
dec
fiaddl
pop
push
jg
mov
lods
out
mov
subl
pop
loopne
push
or
mov
ljmp
fs
fcoms
jge
push
and
ret
sub
mov
mov
stos
adc
das
sub
lret
pushf
jg
mov
pop
mov
gs
stos
insb
jb
repz
loop
sbb
arpl
or
and
idivl
aaa
dec
inc
iret
jg
pop
cmp
rcll
sbb
pop
mov
jae
xlat
sarl
pushf
ret
lea
xor
mov
ret
cs
std
adc
xor
inc
popa
sub
fadds
cmp
push
addr16
je
scas
jmp
xchg
add
mov
ret
adc
or
dec
cmp
sbbb
popa
cs
js
dec
out
sbb
mov
jp
jnp
mov
movsb
cmp
clc
xchg
inc
dec
mov
adc
jns
outsb
dec
xor
in
adc
xor
xchg
add
ficompl
lods
int3
hlt
cmpsl
shrb
mov
cld
adc
dec
pop
into
pop
inc
or
in
clc
aas
mov
sub
adc
ss
jae
or
pop
and
mov
fildl
xchg
xchg
jecxz
xchg
and
sbb
loop
ljmp
rcrb
jge
hlt
in
or
js
xchg
mov
aam
jae
ret
repnz
sarl
test
sub
popf
jns
fdivrp
mov
aas
dec
cmpsl
and
adc
jae
push
test
mov
lret
or
mov
adc
add
sbb
inc
out
dec
leave
jo
dec
call
aam
decb
or
cmpsb
inc
push
jecxz
pop
cmovb
mov
fidivs
push
xchg
mov
roll
mov
cltd
cmp
xcrypt-ecb
cmpsl
dec
out
adc
insl
pop
test
xchg
xlat
aas
popf
test
fistpl
cld
add
test
add
mov
xlat
movsl
dec
xchg
sbb
shll
push
imul
mov
scas
aad
les
adc
xor
scas
stos
sbb
pop
test
call
and
mov
xlat
inc
pop
xchg
rcll
or
and
dec
imul
xchg
push
xor
mov
js
pop
les
dec
push
inc
or
and
scas
push
faddl
or
enter
ljmp
jae
nop
in
cmp
fucomip
mov
popa
jo
dec
jecxz
pop
call
mov
xchg
pop
ds
adc
in
movsb
xchg
std
lock
xchg
repz
mov
add
lock
popf
sub
add
in
inc
ret
pop
incb
hlt
sbb
daa
sbb
dec
cmpsl
fstp
aam
sub
adc
jo
pop
ss
fcompl
dec
dec
adc
cmp
dec
adc
repz
aas
es
cs
rcrl
mov
inc
mov
stos
push
push
cmc
ds
cmp
jne
sbbb
ja
fldcw
xor
cltd
push
cmc
int
mov
adc
outsb
jl
imul
jge
xchg
imull
pop
loope
ret
out
push
mov
lret
call
mov
mov
shlb
sarl
lds
cli
gs
roll
repnz
repnz
popa
xchg
xchg
mov
sbb
shll
pop
movsl
mov
push
pop
jo
xor
push
or
enter
aaa
cs
dec
pop
test
iret
pop
stos
xor
ret
je
pop
mov
jmp
inc
or
shll
mov
mov
movsl
rclb
mov
xchg
xor
daa
xor
dec
jmp
xor
imul
stos
cmc
jmp
inc
jmp
repz
hlt
sbb
les
leave
cmpsb
sbb
bnd
enter
cs
lods
push
test
and
mov
mov
jge
mov
fldcw
lret
mov
in
sub
or
sbb
mov
add
mov
int
mov
imul
notb
scas
daa
adc
pop
lret
adc
jae
xchg
int
test
xchg
or
pop
lea
gs
xchg
mov
lds
push
pop
stos
dec
cwtl
pop
and
gs
aad
test
enter
adc
mov
outsb
gs
fldt
jns
dec
sbb
xor
lret
xlat
xor
mov
insl
sub
sub
fcompl
lods
pop
stc
inc
test
xor
mov
ud0
sbb
movsb
mov
jb
jp
xchg
in
pushf
mov
ss
jmp
es
cmpsb
mov
cltd
jns
mov
jns
js
fldt
out
pop
pop
or
dec
inc
pop
xchg
arpl
rorl
jl
adc
cli
adc
mov
mov
fnstenv
fsubl
leave
ftst
pusha
out
mov
hlt
pop
mov
xchg
jecxz
outsb
mov
idivl
cmp
dec
xchg
sub
rcr
mov
mov
push
add
cltd
cwtl
test
movsb
mov
ljmp
adc
fs
jmp
xchg
pusha
int3
stc
and
and
xchg
cmp
mov
add
jae
adc
xchg
cmp
sub
lods
and
jecxz
out
pusha
mov
add
fs
sbbb
mov
mov
addr16
imul
sub
mov
imul
lret
sbbb
xchg
xorb
jae
push
xchg
xor
mov
jge
into
jae
das
movsb
test
sub
pop
int
xchg
push
mov
xchg
mov
into
pop
cmp
xor
adc
scas
push
inc
mov
jge
shlb
aaa
fbstp
mov
pop
ds
xor
mov
and
mov
xchg
stos
arpl
int
ret
fidivrs
push
popa
xor
aad
shl
nop
out
cmpsb
lds
xchg
push
dec
fcomip
xchg
insl
inc
jp
cld
lea
cmpsl
mov
pop
lods
jp
andb
mov
repz
pop
lds
dec
outsl
movsl
mov
sti
dec
adc
cltd
scas
pop
rolb
jae
mov
test
xchg
ret
jae
loop
es
pop
inc
mov
jge
add
xor
loope
or
roll
ja
ja
jb
xchg
cmp
inc
stos
mov
mov
add
loop
jmp
cmp
adc
xor
stos
into
aas
or
dec
adc
gs
pop
mov
mov
std
mov
shrb
aaa
pop
jl
jg
sub
popa
adcb
sbb
pop
jnp
push
push
push
lret
lds
xor
pusha
sub
lret
insb
and
cld
mov
ret
inc
xchg
dec
dec
je
decb
rclb
je
subl
ja
aam
mov
adc
in
fsubs
ficompl
int3
mov
xchg
cmpsl
outsb
movsl
sub
test
bnd
adc
cmp
out
mov
jno
jecxz
mov
fbld
jl
shll
cmc
adc
adc
xor
es
je
sbb
and
mov
inc
mov
lsl
andb
jmp
call
pop
aad
inc
dec
mov
mov
adc
xor
imul
pop
mov
and
push
cltd
loop
das
in
scas
push
mov
jno
js
xor
and
mov
out
mov
sub
xchg
rorl
mov
jo
push
push
fnstsw
dec
movsl
jle
dec
loop
xor
inc
bswap
sub
xor
gs
les
push
jl
orb
jmp
clc
dec
xchg
aas
inc
and
xchg
cltd
mov
or
test
imul
cli
cmc
int
xor
xor
fiaddl
cltd
sbb
pop
inc
mov
stos
jl
push
aas
xchg
jae
cmp
orb
mov
into
lcall
cmp
dec
js
or
fistpll
sbb
data16
ja
pop
push
cwtl
inc
jnp
sub
mov
push
pop
xchg
adc
sub
nop
pop
jb
sbb
leave
mov
mov
lcall
jle
pusha
jge
mov
cmpsb
lret
les
cmp
cli
push
fucomi
pop
orb
lahf
xor
inc
into
ja
cli
je
fmulp
mov
iret
in
push
inc
lea
lds
nop
ret
repnz
mov
bnd
daa
pop
stc
push
in
ret
aas
not
push
scas
outsl
movsl
enter
stos
cmp
and
adc
mov
push
push
and
sub
add
pop
gs
inc
jb
pop
or
pop
lock
loop
dec
insl
aaa
xchg
xchg
test
ljmp
mov
pop
loopne
or
and
iret
push
cmp
xchg
fcomp
pmulhw
and
movsl
test
icebp
lock
paddsb
cmp
les
int
ficompl
and
out
std
pop
scas
push
mov
mov
lock
std
mov
imul
push
lods
stos
jge
jmp
fidivl
inc
lahf
xchg
out
ss
or
repz
test
imul
jne
push
addr16
lret
dec
cld
divl
and
inc
dec
test
xchg
sub
in
sbb
cmp
pop
test
int3
or
and
clc
mov
incb
jge
push
mov
or
pop
sbbb
jb
xchg
jno
mov
into
mov
pushl
ret
xor
in
jmp
in
pop
gs
ss
mov
addr16
cmp
push
xor
les
and
shll
lods
mov
xor
push
idivb
fcmovb
imul
loop
insb
xor
push
xchg
pop
mov
ret
iret
popa
xchg
or
imul
jl
pop
cmp
ficoml
in
push
jbe
mov
jg
lret
cmpsb
in
aam
out
fidivs
dec
roll
popa
pushf
or
jae
mov
fistpl
std
fisubl
sub
ljmp
pop
cmp
add
divb
sbb
mov
aad
jbe
and
out
pop
pop
sub
ficoml
sub
test
sub
in
and
sub
sub
or
inc
shrb
push
mov
pusha
dec
push
sbb
pop
insb
dec
roll
popf
shl
lea
cltd
int
cld
push
jmp
adc
xchg
cmpsl
aaa
js
inc
push
xchg
faddl
inc
subb
mov
js
in
xchg
cli
pusha
mov
out
pop
sbb
insb
in
xor
xchg
sbb
inc
jne
lock
push
mov
mov
fstpt
lds
aam
sbb
inc
mov
dec
ss
ja
push
scas
test
inc
push
or
sbb
inc
mov
xlat
sbb
xlat
pop
popf
jne
inc
outsb
push
xchg
sub
in
fisubl
movb
outsb
out
and
jecxz
ficoms
jmp
roll
dec
ds
test
lahf
leave
adc
push
add
iret
hlt
mov
push
mov
xchg
ret
push
pop
xchg
and
jmp
inc
sub
adc
loop
lods
es
out
outsb
test
push
dec
jmp
sbb
mov
in
cmp
in
loopne
test
out
and
aas
pop
imul
sbb
enter
add
scas
adc
cs
add
loopne
or
insl
fs
sbb
cmp
loope
daa
push
push
dec
test
dec
sbb
dec
xchg
shl
jbe
popa
dec
nop
push
das
jnp
add
jl
les
and
orl
xchg
test
ljmp
outsl
jnp
pusha
cmp
mov
sbb
scas
les
jle
pop
test
xchg
jmp
loope
mov
mov
aaa
add
popf
es
mov
insl
xchg
xchg
xor
aaa
imul
sbb
dec
adc
incb
loopne
outsl
adc
xlat
test
inc
push
inc
dec
lock
dec
fldcw
xlat
loope
mov
aad
imul
jno
mov
outsb
mov
lock
dec
int
int3
or
adc
sbb
mov
push
out
xchg
daa
gs
loop
and
cmp
lods
cld
adc
and
xchg
sub
jo
sub
nop
xchg
pop
sub
xchg
push
cmp
lods
and
loop
xor
in
pop
mov
add
popf
int3
xor
test
jo
leave
fisubrl
sub
ds
cmp
in
dec
push
mov
ret
es
ret
xchg
rcrb
mov
into
cmp
lea
out
loopne
loope
xchg
add
andb
leave
fiadds
out
loopne
pop
mov
add
sbb
jle
or
jo
int
or
sub
inc
stos
dec
rcrb
xchg
xor
rcll
rolb
jno
lds
unpckhps
test
adc
iret
pop
clc
jo
push
loopne
mov
notb
orl
xorb
xchg
jle
dec
sub
jmp
cmp
jbe
and
pop
xchg
mov
les
push
jge
push
psrld
insl
test
sbb
pop
pop
lret
int
pop
adc
adc
ja
xor
mov
sub
dec
outsl
and
sub
std
mov
popa
enter
xor
out
dec
sbb
ficompl
push
jg
xchg
pop
xchg
fwait
int3
iret
enter
pusha
xor
jle
mov
sahf
adc
or
jp
xor
out
cmp
stc
lock
sbb
in
popa
enter
cmp
pushf
scas
add
or
sbb
push
es
popf
adc
sub
mov
dec
outsl
adcb
ss
stc
das
rorb
test
dec
movsl
adc
nop
gs
xchg
add
cmp
push
mov
pop
inc
lock
jmp
jae
inc
test
cmp
andb
jo
dec
mov
jge
std
je
notl
fsubrs
pop
loopne
inc
mov
inc
ds
pop
sbb
xor
test
jg
sbb
lds
icebp
decb
je
mov
out
jnp
lock
test
adc
mov
sbb
fildll
mov
push
jmp
sub
and
fwait
mov
out
inc
cmp
repz
faddp
dec
pop
test
or
and
and
lock
xchg
das
jnp
and
sahf
adc
sub
stos
cmp
xlat
out
xorb
push
pop
gs
stos
push
sub
loope
out
int
in
flds
mov
adc
inc
pop
in
sbb
add
jnp
push
stos
clc
out
fwait
dec
aad
or
movsl
add
test
dec
jle
out
cli
std
xor
aaa
add
push
xchg
pop
and
rcll
ret
adc
mov
stc
inc
and
outsl
or
popf
jle
mov
shlb
pop
push
dec
inc
leave
jecxz
inc
test
mov
sub
cld
pop
xchg
inc
or
lea
cmp
aaa
xchg
add
aaa
inc
cs
mov
mov
mov
mov
pop
mov
stc
ja
hlt
out
loope
and
test
sbb
dec
inc
je
inc
cmp
lret
jecxz
mov
xchg
jl
inc
cmp
cmp
js
pop
mov
pop
addr16
add
roll
xchg
shl
decl
mov
jp
sahf
addb
dec
out
cmpsb
jne
xchg
dec
add
or
jecxz
mov
or
cmova
fisttpll
lock
mov
enter
cmp
cmp
ja
mov
mov
pop
inc
adc
mov
cmp
cmp
arpl
mov
or
loop
sub
jo
sub
or
or
int3
movsl
into
adc
fs
pop
sub
ret
adc
setl
clc
in
leave
dec
fs
push
in
addr16
mov
sbb
and
loop
jb
mov
dec
out
popa
dec
cltd
cmpsb
roll
out
mov
mov
lods
out
fs
fmull
clc
out
fists
icebp
xor
jne
out
inc
mov
daa
mov
jno
jbe
pop
cmp
test
popf
shlb
bound
sub
push
push
pop
add
test
cwtl
mov
mov
nop
out
rcll
push
jns
or
sub
and
xchg
imul
insb
fdivrs
xchg
xchg
lcall
lret
add
cmp
mov
repnz
jle
fs
and
loope,pt
mov
bound
add
ud1
outsl
and
push
push
cmp
rclb
cli
push
shll
stos
inc
fstl
pop
push
test
mov
push
push
jne
out
call
cld
adcb
std
insb
movsb
cmpsb
pushf
jnp
adc
fs
inc
or
mov
roll
mov
jecxz
sub
sub
and
cmp
lods
mov
lods
push
inc
outsl
imul
jo
daa
or
or
sub
or
lods
jnp
xchg
stc
or
xchg
sub
sarl
sub
xor
aas
xchg
adc
hlt
loopne
pop
or
test
hlt
pop
nop
or
adc
and
icebp
jb
js
fildl
in
mov
jmp
cmp
mov
and
loope
divb
dec
jmp
push
sub
mov
push
jmp
mov
and
aaa
and
iret
mov
lds
jno
lcall
adc
adc
in
mov
inc
jnp
repnz
dec
in
push
outsl
mov
stos
das
rcll
shl
mov
fimull
inc
sbb
mov
sbb
xor
fistpll
and
je
jmp
and
xlat
dec
and
repnz
or
jnp,pt
pusha
add
xchg
cmp
ja
push
aaa
rclb
adc
arpl
sarb
jno
xchg
lods
jmp
jo
in
inc
jne
out
jae
pop
mov
pusha
outsl
mov
jg
fistps
test
fsubl
pop
add
push
shlb
push
xor
outsb
jo
repnz
rorl
dec
repz
or
push
xor
push
out
in
push
ret
cltd
jb
sub
loop
test
pop
cs
push
ds
jmp
and
jl
ret
shll
stos
inc
jge
les
sbb
xlat
into
push
call
cwtl
sti
je
movsl
mov
ret
mov
into
jne
ja
push
cmpsl
call
pusha
repnz
mov
mov
inc
cld
arpl
daa
outsb
cmpsb
push
out
ficompl
pop
mov
popa
mov
loop
in
pop
push
iret
lahf
jle
xchg
xchg
jb
data16
loopne
dec
cmp
jno
push
aam
scas
popa
bound
xchg
adc
hlt
xchg
call
lret
fldenv
jp
push
pop
popf
pop
and
push
pop
inc
sub
xor
mov
dec
subb
fimuls
test
cmc
fcmovu
scas
or
dec
lds
sub
divl
jno
push
stc
jae
in
pop
and
aad
adc
pop
cs
in
insl
cmp
mov
stos
out
push
imul
or
fisttps
inc
fdivrl
mov
sub
sbb
outsb
xchg
ret
je
add
mov
xchg
push
push
scas
call
nop
in
loope
push
xchg
mov
dec
or
fnstcw
or
xchg
adc
out
cmp
fidivl
mov
dec
jg
inc
pop
push
fadd
mov
xchg
fs
pop
dec
filds
lret
icebp
movsb
mov
or
sbb
shlb
les
jg
push
fiadds
xor
repz
imul
xchg
imul
sub
mov
je
mov
mov
mov
jae
not
aam
mov
test
aas
out
int3
lcall
pop
in
aam
mov
shl
pop
dec
sub
jne
inc
rcrb
inc
xchg
sbb
sub
mov
push
adc
sbb
mov
pop
addl
add
cmp
lock
lods
dec
pop
xlat
cmp
add
push
daa
mov
dec
xchg
mov
test
mov
in
mov
or
fcomip
pop
mov
jg
mov
cmp
sbbb
xchg
mov
push
lahf
in
shlb
repnz
in
push
sub
decl
pop
xchg
xor
inc
fnstenv
dec
fildll
insb
pop
cmpsl
insl
cmp
fisubl
jge
aam
jmp
pop
mov
jns
movsb
cmpsb
lods
ds
ss
cmc
out
std
icebp
xchg
xor
jl
decb
loop
sub
jbe
jg
adc
mov
dec
add
and
push
out
xlat
push
xchg
jo
sub
sub
sar
cs
push
and
fwait
orb
sarb
push
negl
xchg
mov
repnz
fldcw
adc
aam
lods
vunpckhps
mov
iret
ret
cli
cwtl
and
daa
loope
shr
sub
lea
jo
xor
stc
xchg
out
dec
cli
pop
push
dec
cmp
loop
aam
outsl
xlat
sbb
add
repnz
push
jo
jne
rcr
mov
inc
fidivl
push
cmp
or
in
inc
pop
cmp
pop
dec
outsb
lods
es
xchg
sub
cmp
cs
mov
pop
adc
mov
inc
xchg
pop
pusha
add
or
aad
push
nop
int
std
arpl
loope
cmp
sub
leave
add
les
das
dec
jbe
pop
jg,pt
adc
inc
push
or
sbbb
movsb
and
clc
fnstcw
cwtl
adc
fsub
lahf
jl
sub
leave
mov
adc
cltd
sub
cmp
add
out
nop
push
arpl
mov
adc
inc
imul
imul
and
pop
dec
call
mov
loop
je
sub
sbb
mov
inc
movsl
je
insl
push
jmp
ret
and
mov
add
es
aad
xor
loope
cmp
rolb
sub
or
fstl
or
movsl
outsb
pop
fnstenv
sub
sti
inc
and
mov
push
jne
clc
jb
pop
out
pop
dec
mov
mov
pop
mov
and
jle
mov
xor
hlt
xor
enter
xchg
add
das
or
scas
xchg
fcmovbe
inc
add
pop
sbb
std
fmulp
aam
mov
xor
into
lcall
sbb
xchg
xchg
cmpsb
ljmp
clc
lcall
add
outsb
and
sbb
mov
xor
icebp
add
int
mov
icebp
enter
dec
jle
idiv
push
pusha
and
push
int3
int3
inc
mov
xchg
je
ret
push
push
dec
stos
or
scas
loop
mov
mov
fsts
loopne
adc
push
pop
mov
sbb
inc
js
repz
or
push
and
lds
lcall
xor
sub
or
cmc
and
inc
cmp
jl
dec
fs
sub
inc
das
sbb
mov
icebp
push
decb
leave
sbb
and
inc
sbbl
pop
fs
loop
add
inc
mov
icebp
pop
rorl
sti
imul
movsb
into
gs
leave
stos
mov
cmc
jbe
xor
pop
and
sar
dec
enter
pop
sub
mull
adc
sbb
movsb
xor
mov
cs
mov
jno
dec
mov
inc
xchg
mov
push
cmp
mov
pop
mov
div
mov
scas
jns
stos
push
stos
sub
add
jnp
out
adcl
mov
sbb
std
insb
dec
add
adc
pop
aad
pop
shlb
mov
cmp
pop
push
cld
cli
les
stc
jb
lcall
add
mov
pushf
sub
lret
fadds
inc
jl
pop
pusha
mov
push
ret
sahf
adc
test
add
jne
fs
inc
lcall
xchg
iret
insb
xlat
xchg
addr16
sbb
int3
dec
push
xchg
loopne
and
rcr
push
out
and
mov
in
andb
clc
daa
fadds
std
and
inc
inc
or
add
lcall
jns
gs
imul
mov
sbb
adc
gs
mov
or
dec
stos
sub
dec
fmull
dec
push
inc
loope
testb
xchg
mov
jl
and
mov
out
ja
stos
js
mov
stos
js
mov
cmpsl
add
cmp
lock
and
mov
fstl
dec
sub
fdiv
std
mov
push
dec
js
cltd
add
rcll
ds
nop
gs
add
test
jmp
les
xchg
push
mov
cmpl
cs
aas
les
cmpsl
lods
mov
and
ds
mov
loop
ror
leave
icebp
xlat
aam
out
or
mov
stos
mov
inc
add
aam
jbe
adc
sti
cmpsb
into
jmp
movl
in
insl
or
sub
jmp
sub
sbb
or
rorb
cmpsb
cwtl
add
push
push
lahf
aad
sub
rcrl
sbb
inc
and
add
mov
test
mov
jp
or
xchg
hlt
mov
push
xchg
bound
sub
insb
adc
imul
inc
insl
cld
movsb
shll
je
xchg
jb
loop
sub
pop
or
push
cld
push
xor
fdivrl
adc
insl
and
lock
cmp
rorl
addr16
jecxz
pushf
dec
fldcw
mov
int
outsb
dec
sub
xchg
int
adc
movsl
fiadds
cli
outsl
mov
dec
cwtl
lret
arpl
test
sub
pop
fcoms
mov
push
in
cmp
cmpsb
lea
xchg
lock
test
ret
add
or
inc
mov
add
pop
arpl
stc
xorb
xchg
sub
or
mov
add
jne
jl
inc
or
mov
inc
dec
xor
test
jecxz
add
push
test
sbb
fisttpl
fsubp
xorl
dec
xor
mov
cmc
andl
cwtl
inc
mov
push
fwait
sbb
or
jb
insb
lods
ja
mov
jnp
mov
pcmpgtd
jg
lcall
in
or
test
loop
add
push
and
jns
inc
inc
pop
stos
nop
adc
outsb
dec
dec
mov
dec
xor
push
xlat
cmp
pop
rolb
ret
notb
xor
xor
and
inc
icebp
xchg
movsl
cli
jnp
fs
cli
jne,pt
push
inc
mov
jmp
pop
adc
adc
adc
test
push
clc
mov
mov
xor
inc
enter
ds
inc
sub
cmc
shrb
pop
loopne
xor
sub
fadd
jp
stos
repz
fcmovb
fwait
in
in
push
mov
mov
fwait
dec
xchg
add
xchg
jmp
js
pushf
and
cwtl
jge
xor
push
dec
scas
lods
pop
dec
mov
adc
and
mov
leave
mov
mov
rcr
sti
lods
xchg
adc
lcall
clc
push
adc
nop
stc
inc
inc
test
and
and
lcall
bound
ficomps
scas
stc
in
jg
xor
ss
jge
aaa
pop
sti
cmp
rcr
xor
mov
outsl
mov
dec
sub
movsl
xor
mov
imul
cli
gs
scas
fsubr
cld
leave
pusha
leave
mov
cs
pop
sar
fstp
ja
test
mov
lahf
xchg
add
repnz
xchg
stos
in
xchg
lcall
xchg
fsubrl
icebp
xor
out
test
mov
sbb
jae
mov
push
test
popf
push
mov
push
and
nop
mov
push
outsb
lds
and
mov
pushf
ja
movsl
dec
fildll
out
test
loope
or
ret
enter
and
xor
jge
inc
js
out
cmp
shrl
das
bswap
shl
mov
jne
dec
jl
mov
test
or
scas
jp
push
adc
orb
or
jmp
test
cmp
sub
rcrb
push
adc
pop
test
je
add
jmp
inc
pushl
dec
mov
repz
into
inc
out
repz
push
pop
fimuls
mov
lds
dec
mov
cmp
pop
inc
lods
and
dec
xor
imul
lock
mov
test
jno
xor
rcr
pusha
addr16
sbb
sub
or
sub
inc
pushf
mov
js
aam
push
cmp
and
pop
mov
push
in
add
mov
jns
inc
push
clc
sbb
xchg
pop
cmpsb
andl
jg
nop
pusha
cmp
xchg
sbb
lahf
push
arpl
imul
jecxz
sbb
mov
sbb
std
sti
adc
insl
shlb
mov
push
xchg
cmp
jo
enter
sbb
cmp
adc
fcmovu
xchg
sbb
nop
mov
iret
mov
xor
push
ret
xor
outsl
fists
faddl
and
and
cmpsl
and
jb
ds
or
stos
ss
ret
flds
cwtl
adc
sub
cmpb
xchg
adc
loope
inc
push
xorb
mov
xchg
inc
fldenv
cld
fldl
mov
pop
mov
pop
sub
test
sub
enter
mov
icebp
in
repnz
fistl
hlt
sbb
in
pop
sub
rclb
imul
ret
xchg
dec
stc
nop
ljmp
nop
push
mov
ret
push
leave
mov
inc
or
mov
fwait
hlt
push
mov
in
inc
push
xchg
cs
jge
hlt
pop
loopne
sub
ss
adc
cmp
test
fidivrl
mov
ffreep
cli
js
adc
insb
push
push
pop
imul
subl
cld
shlb
test
mov
inc
pop
aas
mov
fstpl
loope
and
cmp
movsl
lahf
mov
push
jmp
sub
sub
inc
sarb
push
cmp
fidivrs
cld
into
pop
adc
in
int3
loop
rolb
out
outsb
xor
xor
pop
je
cmp
sub
stc
mov
pop
cld
dec
ja
xor
inc
mov
push
loopne
add
hlt
mov
mov
push
sub
mov
xchg
sub
push
xchg
shl
cwtl
push
adc
ret
leave
iret
dec
mov
xor
movsb
pop
lods
dec
cld
mov
lret
cltd
mov
mov
pop
cmp
mov
std
push
push
arpl
mov
or
mov
lods
mov
in
xchg
cmp
clc
std
mov
sti
fisttpll
clc
out
ja
sub
aas
fisttpl
xor
mov
and
mov
pop
cmp
call
cs
cli
mov
cld
add
aaa
mov
fucom
add
cld
or
sti
jne
stos
cs
mov
cmp
ja
enter
stos
test
fldl
ja
inc
fwait
insl
xor
arpl
leave
or
ret
mov
addb
fmulp
stos
aam
jns
stc
out
mov
pusha
mov
fldl2e
icebp
xchg
mov
movsl
jb
inc
cmp
mul
jns
shll
scas
lahf
enter
loop
push
in
je,pn
jg
cltd
sub
cmpsb
jp
jne
push
fs
mov
jbe
jmp
jl
insl
inc
cs
jae
jp
sub
mov
lods
mov
pop
cwtl
scas
dec
mov
mov
pop
or
mov
add
adc
out
push
mov
xchg
push
loopne
cmp
mov
xor
inc
shl
stos
sub
cltd
inc
js
hlt
lods
pop
sub
sub
or
xchg
xchg
push
pop
mov
mov
jg
dec
push
lock
xchg
push
push
jp
scas
cld
lret
inc
mov
push
push
stos
iret
hlt
sub
mov
insl
aas
mov
sti
hlt
xchg
mov
lods
sarb
jbe
insl
xor
pop
pop
push
jmp
ds
in
xor
outsl
or
mov
incl
cmp
push
fcomi
popf
jmp
cmp
or
je
aaa
repz
scas
jl
xchg
test
push
push
hlt
stos
xor
or
mov
cmp
insb
popa
cmp
cmc
xchg
enter
jne
and
mov
adc
mov
mov
mov
insl
inc
xchg
movsl
xchg
adc
fbld
ljmp
jge
sbb
enter
pop
mov
xchg
stos
movsl
mov
dec
outsb
push
lret
cmp
aaa
mov
sub
outsl
sbb
popf
mov
cmp
and
push
add
das
cmp
test
fs
fimull
jbe
push
adc
nop
jge
insl
es
pop
incb
loop
pop
add
sbb
or
mov
aaa
pop
lds
ja
inc
xchg
mov
sub
jecxz
leave
sbb
jl
shrl
loop
xorl
stc
and
outsb
mov
sbb
iret
roll
sub
add
add
cmc
add
or
cmp
adc
mov
scas
inc
xor
test
clc
rcr
xchg
cmp
pop
sbb
imul
insb
xor
rcrl
lods
adc
mov
daa
sub
and
xlat
push
cmp
shlb
notb
or
add
loopne
jne
ljmp
adc
rolb
adc
adc
cli
xchg
lret
cmpsb
loop
lret
stos
jne
inc
mov
add
dec
ds
std
mov
aaa
adc
hlt
test
inc
dec
popf
data16
cmp
pcmpgtb
stos
fs
ret
mull
inc
ja
pop
mov
and
push
pop
adcl
adc
push
sbb
adc
xor
addb
lds
loop
das
pop
outsl
adc
xor
cmp
lahf
enter
sub
das
mov
lods
mov
cltd
add
mov
xchg
jge
mov
gs
mov
add
les
sahf
arpl
in
mov
adc
pop
cs
lret
mov
xor
iret
push
push
std
stos
cmpsb
mov
int
dec
aas
pop
mov
imul
aad
test
call
out
lods
loop
jae
mov
xor
mov
dec
push
add
movl
xchg
sahf
ror
cmp
cmpsl
std
mov
mov
sub
inc
dec
xor
push
scas
mov
push
cmp
cmpl
and
xchg
mov
scas
jo
movsb
mov
loope
cmp
push
orl
lahf
sbb
rorb
fwait
mov
mov
fnstcw
loop
call
sbb
imul
arpl
ret
push
fwait
add
push
arpl
add
sti
nop
imul
sbb
and
imul
adc
test
xchg
inc
outsb
aad
xor
int
xchg
mov
and
incb
sahf
clc
push
enter
push
jae
mov
inc
sarl
cmp
mov
jns
mov
arpl
scas
ss
adc
sub
push
scas
std
and
jnp
js
in
ljmp
test
mov
test
aam
jns
sub
popa
jb
and
rclb
movsl
sbb
nop
decb
std
and
mov
or
xor
pop
rcll
mov
adc
mov
negb
ret
inc
jno
repz
sbb
fistpl
mov
sbb
adcl
adc
fistpl
push
push
add
aaa
or
iret
cmp
dec
icebp
jmp
fs
pop
leave
cltd
arpl
test
push
ds
xor
fldt
mov
pop
inc
xor
pop
int
dec
mov
addb
and
sbb
lea
enter
out
imul
dec
aam
scas
and
mov
sbb
mov
sbb
push
inc
lea
xchg
or
jb
movsb
cltd
shl
lret
xor
cmp
sti
bound
daa
push
inc
cmp
les
test
lret
aas
insl
push
lahf
mov
and
mov
fcmovbe
mov
stc
add
es
fistpl
fistpll
jb
jnp
xor
lods
jge
lahf
pop
dec
cmp
lock
jnp
inc
lea
jo,pn
outsb
mov
ror
pop
sbb
pop
aam
cmp
or
stos
pop
in
push
out
xlat
mov
mov
cs
in
outsb
insl
mov
mov
rcr
ret
subb
sbb
addl
adc
or
mov
rcrb
inc
push
fucomi
es
addr16
cmp
jo
stos
mov
and
mov
pusha
divb
mov
scas
add
shr
jle
push
add
push
test
fstpt
in
pop
fdivs
jmp
sarb
xchg
pop
ss
xchg
jg
mov
jp
xor
test
and
mov
fsubl
test
enter
sbb
les
mov
mov
loope
dec
jle
pop
or
push
icebp
dec
pop
arpl
aas
add
mov
rcrl
pop
arpl
jnp
inc
psubq
push
repz
pop
aad
inc
push
xor
cmp
out
xlat
out
das
add
sub
je
lock
xchg
mov
aad
ja
add
addr16
xchg
divb
push
push
pop
pop
stc
loope
xlat
inc
pushf
pushw
cmpsb
mov
movsb
sbb
dec
cmpl
jo
xchg
dec
mov
cmp
push
sbb
iret
into
push
jae
outsb
push
mov
and
sbb
ja
dec
arpl
ss
push
dec
test
test
outsl
movsl
mov
mov
aas
jmp
stc
dec
or
push
in
out
test
dec
arpl
jno
fldt
hlt
fucomi
push
add
fstpt
icebp
mov
push
dec
xorl
shlb
add
das
inc
pop
sbb
iret
pop
js
fnstsw
mov
push
ljmp
pop
pop
imul
ljmp
imull
xor
and
and
cmpsl
mov
jg
jne
pop
mov
bound
pop
scas
lock
pop
adc
xchg
loope
les
imul
ds
jbe
mov
ret
sub
aaa
inc
outsb
sbb
outsl
mov
lret
aaa
rclb
mov
nop
mov
lods
dec
outsl
adc
add
jnp
pop
mov
mov
fdivrl
add
sbb
idivb
pop
daa
dec
xchg
das
fs
jg
jo
inc
js
add
add
push
pushl
mov
call
lods
xor
cmp
jmp
mov
into
mov
das
cmp
repz
pop
xchg
aad
sbb
xor
test
xlat
mov
inc
fimull
mov
sbb
push
push
mov
dec
idivl
mov
cmp
in
xor
jecxz
ficomps
ror
fwait
loope
push
dec
testl
movsl
ljmp
and
and
outsl
data16
mov
jmp
mov
dec
pop
std
bswap
sub
pop
call
xchg
ja
pop
lahf
mov
aas
xchg
lods
lea
shr
aam
daa
or
add
insl
mov
mov
ds
mov
notl
lcall
xchg
pop
sub
push
dec
ds
rcrl
sbb
in
call
cli
cld
negl
insl
lods
or
dec
mov
sbb
ficomps
mov
push
sub
in
pop
pusha
mov
xchg
rcll
mov
lea
repz
jae
daa
sbb
pop
call
out
add
out
adc
add
push
fstps
and
in
hlt
push
mov
jmp
mov
idivb
clc
inc
mov
xchg
test
cwtl
jle
lret
aad
sahf
pop
pop
icebp
mov
or
sub
leave
push
addr16
sti
jge
aaa
mov
mov
inc
pop
js
push
arpl
lret
mov
movsb
xchg
inc
mov
jecxz
add
jmp
mov
pop
arpl
out
inc
bound
cmpsb
sub
dec
jae
fldcw
jp
ds
scas
ret
lret
vorps
sbb
mov
mov
xor
sti
cwtl
sarb
and
imul
lcall
cmp
ljmp
aaa
stc
jne
xchg
std
pop
xchg
push
and
rcll
and
inc
sti
pop
ds
cmpsb
repnz
adc
int
test
mov
scas
aam
push
ret
cmp
and
lahf
test
lock
pop
faddl
jb
or
aam
mov
test
dec
xor
jmp
mov
sbb
data16
sti
push
xchg
or
adc
xchg
scas
mov
ret
inc
xchg
mov
push
dec
dec
popa
sub
sub
loop
ja
pop
jno
ror
xchg
dec
and
dec
fldt
inc
dec
push
movsl
inc
lods
sub
hlt
movsl
xor
xor
jl
or
xor
push
es
out
scas
into
jp
pop
lahf
arpl
mov
cmc
push
in
int3
jae
pushf
sbb
pop
subl
cmc
iret
arpl
aas
out
mov
cmp
fbstp
ror
lds
ret
mov
sti
outsl
sahf
call
aam
out
mov
add
mov
inc
ss
ljmp
push
data16
fnstsw
and
cmp
adc
adc
hlt
sub
dec
out
insl
lds
icebp
push
mov
add
ja
repz
out
jmp
in
fistps
and
fcoml
sti
pushf
sbbb
outsl
fisttpll
scas
push
sub
scas
sbb
rorb
inc
mov
or
gs
xchg
and
scas
xchg
fisubrl
lret
mov
int
jp
fimuls
sti
adc
stos
aad
inc
xchg
pop
ja
jmp
out
adc
daa
cwtl
adc
push
cmp
adc
test
mov
and
call
fstl
movsl
test
repnz
divb
adcl
or
push
push
scas
push
inc
jo
adc
fistl
pop
or
xchg
mov
imulb
movsl
clc
xchg
mov
lahf
add
adc
sbb
mov
rorl
loope
mov
mov
pop
or
xchg
rcrb
ljmp
xor
push
in
insl
je
mov
inc
loop
in
adc
xchg
mov
jns
push
mov
cmp
push
in
hlt
pop
shlb
addl
std
in
mov
int
xchg
push
add
fsubp
daa
sbb
mov
mov
xor
mov
sub
sti
dec
fsubl
add
pop
adc
xorl
mov
cmp
adc
push
pusha
push
jnp
loopne
and
push
or
cmc
sub
add
pushf
fadds
shrl
xchg
out
sub
add
mov
movsb
add
push
pop
pusha
adc
dec
add
pop
mov
pop
je
jb
stos
lret
pop
in
cmp
outsl
hlt
jle
jbe
xlat
imull
clc
sbb
stos
push
das
mov
test
push
sahf
jge
or
je
mov
xlat
lret
outsl
dec
scas
mov
inc
cmp
mov
jmp
int
clc
dec
mov
int3
cmpsl
enter
mov
cmpl
rolb
push
aad
call
sbb
xchg
inc
jnp
push
cmp
add
cli
push
test
ret
movsl
jmp
mov
sub
mov
pop
sarb
repz
test
out
mov
mov
ret
adc
jnp
test
fisttpl
add
add
fstl
ret
jnp
cld
in
test
pusha
sbbb
push
xchg
mov
out
mov
out
rcrl
jno
and
push
lahf
pop
sbb
fistps
movsb
mov
lds
push
adc
mov
sbb
out
mov
lds
pop
and
pop
or
push
add
testb
add
aaa
cwtl
out
jge
push
jnp
dec
out
sbb
pusha
sahf
sbb
adc
insl
xor
push
mov
cmp
into
out
leave
leave
inc
enter
mov
in
loope
fimull
hlt
rclb
inc
popa
jle
outsl
ficomps
ja
cwtl
imul
push
xchg
mov
mov
xchg
add
mov
sbb
icebp
ret
ficompl
inc
sti
sahf
pop
adc
mov
mov
xor
sbb
inc
aas
in
outsb
cmpsb
dec
scas
sbbb
jo
mov
adcb
push
or
inc
arpl
test
loope
cwtl
fsub
inc
dec
sub
mov
jg
pop
push
sub
in
cmp
dec
push
dec
jns
loope
dec
sub
es
pop
loopne
xor
out
lods
xchg
lahf
xchg
call
aam
sub
add
lret
and
pushf
jecxz
xchg
mov
mov
and
push
out
movsb
mov
mov
in
pop
mov
rclb
adcb
popf
mov
out
cmc
xchg
jno
cmpsb
into
jge
jae
sbb
push
sub
scas
push
das
cs
cmpsb
jne
leave
pop
movsb
adc
in
mov
aas
push
xlat
cli
inc
xchg
int
icebp
cmp
sbb
popa
xlat
pop
jno
or
sti
push
test
int3
jae
xchg
mov
mov
xchg
xlat
rcl
jmp
jmp
push
push
pop
enter
lock
repz
cmpsb
popa
xchg
cmp
mov
add
lds
fsubr
in
out
addl
icebp
int
aaa
xchg
push
rcl
pop
cli
inc
push
sbb
les
adc
push
ljmp
mov
je
jo
mov
mov
in
stc
test
add
test
lods
mov
or
cmc
sub
popa
cltd
mov
cmp
add
jg
sub
dec
fdivrs
jne
pop
sarb
cmp
sahf
lock
outsb
cmpsl
jmp
mov
shlb
and
xchg
xchg
push
popf
xchg
mov
jmp
or
movsl
enter
and
inc
pop
mov
fsub
loopne
rorl
or
test
add
shl
or
int
ja
pusha
cltd
imul
or
jb
mov
int
push
into
ss
inc
mov
jle
mov
inc
xor
mov
jp
jno
fadds
or
shrb
inc
sahf
inc
hlt
or
xlat
cwtl
pop
mov
test
mov
mov
imul
pop
push
adc
les
fwait
leave
xor
and
cmp
or
rorb
in
das
mov
jmp
and
xchg
jp
dec
adc
sbb
aad
scas
add
enter
fs
sub
fcmovne
push
leave
sub
or
std
stos
cmpsl
test
faddl
xor
pop
fucomp
push
ljmp
jne
cmp
jns
inc
stos
sub
icebp
out
sub
lods
stos
pop
mov
mov
sub
jo,pn
dec
es
and
and
in
pop
in
sarb
xor
fs
enter
popf
sahf
mov
dec
or
icebp
movsl
sub
jle
insb
fdivs
insb
sub
push
jle
add
push
and
loope
mov
rolb
mov
push
sti
cli
jecxz
in
ret
jge
pop
or
cmp
pop
xchg
inc
sar
insb
xor
push
shl
xchg
ljmp
xor
jle
sbb
adc
test
sbb
bound
sbbl
cwtl
loope
push
movb
std
out
xchg
mov
out
xchg
pop
xor
outsb
test
aaa
das
mov
inc
pop
xchg
pop
mov
out
fidivrl
adc
mov
sbb
mov
popf
adc
and
leave
inc
gs
sub
fistl
cmc
les
dec
pop
mov
pop
pusha
decl
mov
in
xchg
enter
inc
dec
pop
xor
cmp
pusha
lods
fstps
add
mov
fmulp
mov
je
jecxz
dec
sub
cmp
faddl
inc
jnp
xchg
dec
movsb
xor
inc
fnstcw
cmp
inc
pop
lcall
hlt
leave
xor
popa
cmp
dec
pop
sub
cli
mov
imul
lock
fidivrl
add
jno
lret
adc
and
repnz
inc
icebp
mov
insb
cmc
push
dec
jle
add
sbb
mov
pop
xchg
xor
ret
and
jb
nop
push
jae
fistpll
and
out
mov
or
outsl
cld
sub
or
xor
fdiv
cs
pop
jecxz
mov
mov
pushf
inc
nop
ds
mov
scas
push
ret
cltd
add
mov
sbb
lcall
cmp
mov
dec
inc
loopne
shll
cmp
jg
or
ljmp
and
pushf
push
pop
bound
sbb
or
loop
adc
mov
sub
push
test
testl
push
add
movsl
ffreep
jp
fwait
imul
xchg
incl
imul
cli
pop
loopne
incl
ret
mov
xchg
bswap
repz
rcl
fisubs
imul
cltd
sub
fstps
dec
push
add
into
pop
jo
repz
mov
dec
testb
sub
cmp
maxps
push
scas
jecxz
xchg
leave
push
shlb
and
popa
pop
es
ds
sub
fists
pop
ljmp
dec
dec
ja
enter
inc
mov
int
fwait
sub
sbb
loope
mov
repnz
mov
mov
es
mov
fsts
mov
lods
inc
movsb
std
sbbl
and
mov
xchg
movsb
in
mov
outsb
mov
sbb
scas
inc
ret
enter
filds
out
stos
mov
test
sahf
dec
or
xchg
fiaddl
rcr
pop
lret
jne
scas
dec
jmp
rcrl
adc
in
push
mov
xor
jge
push
jnp
inc
ret
xor
pop
shll
or
sbb
imul
loope
sub
insb
mov
sbbb
shll
enter
ds
sbb
out
push
movsb
add
mov
jecxz
mov
cli
adc
jp
test
icebp
push
enter
and
sbb
cmp
repnz
scas
mov
jecxz
cmp
shl
aaa
add
and
addb
sub
or
sub
sbb
mov
lods
sahf
test
cmp
push
or
adc
push
daa
cltd
mov
xchg
fsubs
lock
ss
add
lret
push
push
inc
pop
adc
pop
push
fcomi
cmp
movsb
data16
xor
mov
add
add
mov
in
loop
imul
xchg
pop
cmp
fstpt
test
test
add
in
outsl
pop
mov
sub
sub
or
les
push
sbb
jle
repz
pop
loop
js
adc
mov
test
cli
lods
loop
mov
insb
into
sbbl
xchg
bound
and
or
jmp
imul
sbb
std
mov
imul
or
ret
mov
or
and
cld
cli
add
repnz
fcompl
xor
ret
andb
mov
add
cli
pop
test
mov
call
aaa
in
push
lahf
fnstenv
xchg
sbb
out
jecxz
call
repnz
cmp
add
imul
dec
xchg
mov
pop
out
iret
mov
adc
pop
lret
rcrl
push
in
je
test
sti
cltd
ja
dec
test
cs
outsb
cmp
jl
insl
dec
test
push
adc
test
lea
pop
lahf
aas
pop
xchg
mov
mov
push
fwait
xor
into
push
xor
add
jne
mov
pushf
jl
jp
and
add
push
jno
or
pop
push
pop
or
data16
sbb
push
sti
jmp
sub
cmp
roll
dec
xor
sti
push
adc
repz
in
xchg
sarl
mov
pushf
rcrb
out
pop
xchg
xor
inc
insl
imull
mov
nop
sahf
add
sub
jae
jnp
and
and
push
pop
cmc
int
dec
clc
add
data16
xor
loopne
lahf
aam
shl
push
subl
mov
negb
popa
mov
sbb
mov
aas
dec
mov
ret
cmp
push
xchg
mov
jp
mov
in
push
out
movsl
push
ret
and
jl
lret
and
or
adc
jmp
fistpll
mov
movsl
rclb
jo
or
les
in
test
adc
lods
xlat
outsb
roll
rcl
mov
jbe
rcrl
scas
sti
scas
movsl
mov
stc
jnp
jg
inc
scas
xchg
mov
push
mov
mov
outsb
mov
jbe
add
aas
jnp
pop
or
xchg
xchg
pop
sbb
lcall
notb
push
js
lret
add
popf
test
xchg
sbb
or
repz
iret
xchg
in
fs
sbb
dec
push
jae
sub
leave
out
movsl
mov
and
mov
jo
and
sub
aam
loopew
xchg
lahf
xchg
push
cmpl
xchg
push
repnz
jns
xchg
ljmp
sarl
je
test
das
roll
sbb
cmp
add
hlt
and
sub
in
bound
inc
fst
pop
leave
test
nop
and
lahf
and
cltd
and
sbb
mull
push
mov
cld
xchg
and
sahf
dec
fs
add
fwait
pop
sahf
iret
or
in
pushf
stos
roll
pop
pop
xchg
inc
addr16
rcr
jp
xor
xorb
cmp
mov
pop
addr16
sub
push
repz
test
call
aas
dec
outsl
push
bound
mov
and
adc
dec
rcrl
mov
jnp
xchg
fimuls
scas
scas
pop
mov
je
or
lods
addr16
inc
inc
cld
out
sub
or
push
outsb
sub
addr16
subl
stos
stos
sbb
sti
jg
sub
push
mov
les
push
mov
pop
pop
mov
sub
jl
or
jp
adc
lods
outsb
lds
es
xchg
cmp
mov
out
mov
sub
pop
or
je
test
and
jl
mov
mov
push
les
orl
mull
sti
jno
or
je
nop
movb
dec
push
cmp
jae
out
int
shrl
mov
push
pop
pop
push
mov
in
cmp
stos
sbb
or
cmp
push
cltd
cmp
push
pop
addb
xlat
lret
test
aad
pop
enter
mov
mov
push
out
clc
pop
andb
push
insb
sbb
js
xor
or
mov
ljmp
adc
xor
mov
movsl
mov
into
arpl
movsl
test
xor
repz
or
adc
test
cmp
out
jge
mov
iret
scas
and
stos
push
mov
adcl
mov
push
mov
outsb
mov
mov
and
jmp
insl
cmpsl
or
pop
repz
loop
pop
xlat
cmp
psraw
xor
mov
xchg
aad
inc
fwait
push
lahf
adc
in
cli
scas
cmp
cwtl
mov
fcomps
fs
xchg
imul
pop
add
pop
out
lret
in
mov
enter
shlb
xor
test
or
push
loope
in
cwtl
enter
sbb
add
jl
data16
inc
push
or
adc
f2xm1
mov
xlat
jge
aaa
call
sbb
adc
pop
jge
and
dec
sahf
pushf
add
sub
and
cmp
fidivrl
jge
out
xor
mov
ljmp
xor
stc
sub
cmc
insl
inc
or
jo
push
push
fisubrl
xor
lds
iret
add
ret
sar
mov
cmp
fwait
jns
push
xor
imul
push
mov
cld
loop
outsl
sbb
mov
insl
xchg
lods
mov
out
int
shlb
and
lea
mov
ret
add
sahf
push
pop
stos
hlt
adc
jg
mov
imul
dec
test
mov
jp
jp
ror
imul
test
inc
shrl
cld
pop
in
loopne
bound
pop
mov
ljmp
mov
ret
jmp
xchg
push
rcrl
outsl
push
pop
push
sub
aaa
or
jnp
or
stc
push
shrl
sub
faddl
loope
mov
into
outsb
and
mov
out
popa
pop
mov
scas
in
insl
negl
lock
insl
mov
sub
enter
es
jmp
outsl
in
push
jnp
jne
mov
or
in
lahf
sub
adc
cli
push
cmp
jecxz
leave
or
nop
jmp
lahf
imul
mov
lret
or
mov
sar
push
ficomps
cmp
lea
jmp
call
fildl
js
arpl
pop
mov
pop
fimull
mov
adc
call
popa
int
insb
es
dec
ljmp
push
add
mov
push
inc
pop
iret
dec
mov
mov
int
loopne
xchg
cmpl
push
popl
mov
mov
push
inc
sbb
dec
fadd
loopne
imul
hlt
test
dec
cli
scas
ret
xchg
push
in
dec
jno
push
cmp
mov
and
jae
pop
mov
test
and
mov
mov
in
inc
sub
adc
add
stos
sub
not
add
push
cmpsb
leave
into
test
subb
jae
xchg
mov
js
adc
sbbl
in
jae
leave
sti
repnz
mov
lea
mov
cmpsb
jae
fimuls
add
mov
lahf
adc
rcrb
push
sbb
inc
repz
pop
xor
outsb
sbb
dec
bound
add
clc
sbb
or
dec
add
outsl
das
es
add
lods
or
and
mov
inc
mov
dec
mov
cmc
dec
hlt
outsb
cltd
in
cmp
pop
or
add
lcall
and
lock
rolb
push
inc
push
popf
adc
cld
add
adc
shl
imul
imul
outsl
pop
pop
in
iret
leave
loopne
pop
popf
stos
cld
filds
jns
sbb
sbb
inc
out
sub
mov
movsb
in
clc
xorb
sti
add
mov
fadd
sbb
mov
adc
shll
xor
rol
jae
bound
inc
mov
adc
fmuls
adc
and
lret
pop
xor
shll
jo
and
xchg
xchg
pop
call
cmc
adc
iret
jge
es
cld
jne
mov
jecxz
jb
push
lods
jp
sbb
or
inc
lock
mov
push
pop
ficomps
cmp
dec
gs
xchg
jnp
jnp
jne
push
call
mov
dec
pop
mov
lret
sbb
and
mov
sub
push
add
shlb
sbb
shr
or
or
dec
ljmp
movb
lods
or
mov
sarl
push
stc
jns
in
sbb
aad
loop
xchg
or
jns
incb
mov
out
testb
push
xor
lock
rorb
rcll
rorl
aas
xchg
sbb
jae
adc
aaa
das
dec
mov
jno
jmp
outsl
push
sbb
cmp
clc
cmp
pop
adc
repz
xchg
ret
push
enter
push
cmp
add
xchg
scas
sub
std
dec
xchg
adc
xchg
jmp
mov
dec
pop
mov
aaa
jp
scas
test
jno
std
mov
xchg
jns
sbb
push
cmpsl
in
and
dec
and
adc
mov
fsubs
xor
lods
push
push
jo
xchg
je
jb
mov
in
add
xor
inc
arpl
out
pop
int3
lret
out
scas
lods
loop
mov
or
push
pop
cmp
ficoms
popa
jb
push
test
xchg
std
sarl
jae
rorl
movsb
sti
cltd
jo
repz
sub
jo
mov
or
addps
loopne
mov
push
xor
pop
negl
rorb
jne
outsb
js
or
movsl
jne
clc
leave
mov
push
mov
sbb
dec
scas
cmp
movsb
stos
jmp
or
aam
icebp
jmp
mov
subb
cmp
or
pushl
pop
popa
pushf
push
fwait
mov
subb
cwtl
sub
cmp
xchg
inc
sub
xchg
adc
dec
fimull
adc
out
jg
fbld
int3
ret
add
repnz
repnz
pop
mov
or
pop
push
mov
aaa
or
hlt
mov
mov
int
enter
inc
adcl
push
sysenter
jle
cmp
je
dec
ret
push
mov
adc
jp
sub
pop
mov
lea
out
in
pop
insl
mov
push
sbb
rclb
pusha
xchg
mul
xchg
mov
loopne
in
mov
dec
jnp
es
xchg
push
bound
cli
rcrb
xchg
imul
xchg
dec
lds
or
xchg
add
loop
adc
mov
sub
dec
sbb
out
or
in
push
jle
pop
les
ret
pop
jp
pop
push
nop
fldpi
movsb
js
xor
sbb
adc
loopne
jnp
jge
xchg
mov
rolb
mov
jmp
sahf
add
add
jo
icebp
push
add
push
mov
push
fadd
notb
adc
daa
lret
xor
int
dec
mov
xchg
mov
insl
dec
in
test
filds
adc
idivl
cwtl
mov
add
cmpsl
int3
jle
cmpsl
ss
mov
adc
rol
sahf
repz
mov
sbb
pop
imul
lods
stos
mov
sarl
mov
mov
or
subb
lea
inc
cld
stos
rcr
push
out
andb
lea
in
cmp
cmp
push
cmp
in
xor
fimull
pop
insl
xchg
inc
fcmove
aaa
iret
loope
inc
data16
sarl
or
rcrb
call
add
mov
ret
or
enter
fstpl
int
faddp
int3
adc
inc
in
or
or
rorb
clc
or
iret
jle
cmp
adc
fldt
pop
lcall
push
sbb
fstpt
xor
lea
dec
xor
loope
dec
xlat
lret
outsl
mov
inc
cmpsl
pop
cmp
arpl
mov
aaa
jno
push
dec
out
mov
outsl
test
scas
int3
repz
sbb
cltd
xor
ja
bound
mov
or
daa
add
sbbb
xor
jnp
lods
lret
sub
mov
js
adc
mov
loop
sbb
inc
jmp
lds
adc
sti
push
lcall
data16
inc
cmp
insl
inc
fucomip
push
pusha
pop
adc
popa
jae
imul
xchg
sbbl
lods
cmpsb
add
outsl
ficoml
iret
pop
aas
pop
cmp
cmc
cmp
and
movb
adc
aaa
mov
jns
xchg
mov
aam
call
test
pop
lcall
aas
int
data16
jge
jbe
scas
stc
rcr
sub
sub
lds
push
sahf
pop
adc
pop
pop
fisttps
sarl
les
dec
xor
les
iret
jmp
out
ds
jecxz
xchg
sub
xor
das
arpl
inc
in
inc
inc
dec
dec
add
jg
mulb
fsubl
mov
fisubrs
adc
mov
cltd
jmp
adc
rorb
xor
and
ja
nop
call
push
mov
sub
leave
adcl
adc
enter
rolb
push
push
xor
xor
jbe
test
cltd
faddl
push
pop
inc
leave
sbb
jg
push
pop
in
in
mov
add
xchg
dec
std
rclb
sub
hlt
lods
add
push
cmp
pusha
in
hlt
pushf
rclb
adc
insb
dec
mov
push
cmc
sub
dec
push
enter
jl
fidivrl
mov
insb
loope
xor
or
or
inc
push
jo
pop
mov
sbb
jmp
pusha
push
jbe
ja
pop
dec
sub
es
inc
adc
lret
dec
jno
ds
sbb
ss
add
mov
addr16
push
fldcw
xor
sub
add
sti
mov
into
in
aad
jp
push
insb
test
cmc
jl
inc
add
lods
jmp
xchg
adc
rolb
xchg
lods
xor
mov
fsubrs
push
std
dec
adc
mov
lcall
inc
pop
cwtl
into
pop
sub
loop
aas
lcall
jne
sub
stos
out
lods
mov
or
adc
xor
cmp
cld
es
fdivrl
in
jl
stc
add
push
xchg
mov
movsb
fs
scas
sbb
adc
xchg
add
sub
hlt
inc
setb
lock
sbb
sbb
pop
sbb
mov
arpl
sbb
jo,pn
stos
inc
jnp
fsubl
imul
adcl
ja
mov
insl
and
pop
adc
ds
adc
push
or
mov
gs
inc
imulb
sbb
aaa
or
lcall
icebp
mov
or
and
in
ret
rolb
push
cmp
mov
movsb
mov
or
cmp
pop
jne
push
push
push
pop
les
call
in
roll
lret
push
data16
sub
mov
add
iret
add
and
call
inc
inc
xchg
and
insb
lahf
push
lds
sahf
nop
mov
or
dec
popf
sbb
dec
sbb
push
jge
cmp
push
adc
sbb
cwtl
subl
pop
xor
jne
or
test
fadds
fcmovnu
lea
dec
inc
sbbl
push
jns
mov
imul
add
movsb
inc
loop
out
mul
mov
icebp
sbb
movsl
jle
out
fcoms
enter
push
ja
mov
and
mov
cwtl
push
stc
fisubs
jg
cmpsl
imul
cs
popf
xor
enter
pop
int
call
add
or
popf
cmpb
dec
adc
addr16
imul
cmp
sbb
xchg
cmpsl
adc
int
mov
mov
add
mov
jae
inc
stc
sub
call
sub
xorl
loopne
test
pop
sub
frstor
test
loop
sbb
add
test
cmp
bound
das
inc
dec
daa
xchg
dec
sti
push
out
sahf
cmp
popf
mov
xchg
ljmp
repnz
out
mov
mov
xchg
push
lods
out
push
mov
leave
or
pop
mov
insb
push
mov
fdivrs
test
xor
jecxz
mov
cltd
lock
cs
test
and
out
in
mov
adc
out
testl
shrb
fwait
mov
sbbl
adc
jmp
or
fs
imul
cld
push
add
dec
fiaddl
mov
in
push
pop
add
in
mov
cmp
sub
xchg
lea
push
dec
mov
cmp
jo
shll
sub
imul
inc
imul
add
pop
aaa
push
xchg
cs
loope
je
fwait
js
aas
or
jle
sbb
push
fdivrl
pusha
ss
mov
jg
clc
pop
mov
sbb
out
insl
popa
xlat
xchg
mov
cmp
adc
mov
testl
sub
imul
inc
stos
insb
jb
mov
xor
jg
pop
cli
subl
jo
fnsave
mov
loop
adc
xchg
mov
and
mov
xor
sbb
xor
mov
andl
push
scas
adc
in
or
or
icebp
fs
dec
adc
ss
lods
push
in
pop
nop
xlat
or
pop
fs
adc
xchg
movd
pop
mov
jns
mov
sbb
xchg
sbb
xchg
pop
cmc
xlat
data16
sbb
and
push
pop
bound
dec
ds
add
push
stos
sbb
fsub
rcr
fnstsw
imul
popf
daa
xor
or
mov
xchg
shll
or
aaa
outsl
adc
push
ss
cmp
sub
lock
pop
pushf
mov
cmp
call
fldcw
jns
pop
mull
adc
inc
call
jae
lcall
cmp
ret
xor
add
loop
inc
sbb
inc
mov
repnz
mov
ds
sub
mov
das
ja
sbb
and
push
popa
lahf
cmp
test
loope
and
sub
mov
dec
dec
aaa
loopne
push
cmp
loopne
sub
es
mov
lcall
mov
ficoms
pop
shrl
cmp
xchg
adc
jb
out
mov
jb
mov
mov
mov
dec
lret
mov
sub
lods
sbb
jmp
mov
movsb
inc
add
and
test
sub
cmc
popf
push
iret
push
jecxz
int3
inc
fimuls
mov
ljmp
pop
push
adc
or
arpl
cmp
jne
dec
inc
loope
and
mov
mov
push
in
mov
xchg
orl
mov
addb
dec
push
aad
jmp
cmpsl
adc
dec
pop
pop
aad
push
iret
xchg
ret
pop
clc
fwait
pushf
adc
in
jmp
flds
push
pop
lds
rcll
cmp
lods
inc
pop
sbb
fidivl
lods
pop
cwtl
xchg
dec
and
test
hlt
add
mov
insl
mov
arpl
test
xor
push
push
in
test
pop
loope
iret
cmp
out
lea
data16
push
pop
mull
jnp
mov
push
lcall
stc
xlat
sub
add
fisubs
mov
jl
dec
ret
inc
add
inc
cmp
mov
and
jle
dec
add
jns
xchg
iret
pop
cmp
into
out
push
fcmovnb
xor
and
fs
aaa
shrl
and
fs
test
daa
xor
inc
lahf
loopne
pop
jmp
mov
imul
in
dec
push
jp
mov
out
lds
shrl
inc
lea
push
in
mov
lcall
mov
cltd
loop
push
test
dec
scas
div
inc
mov
es
aad
roll
js
and
out
fwait
inc
mov
mov
into
jbe
jb
inc
cmp
or
scas
sbb
push
adc
roll
ss
imul
flds
fstl
dec
pushf
mov
jae
sbb
in
adc
pop
cmpsl
cmovne
mov
inc
adc
dec
xchg
add
push
mov
icebp
xor
sub
rolb
mov
es
jae
icebp
jg
bound
and
sar
inc
push
add
clc
dec
xchg
mov
sbb
btr
sub
cmp
stc
cmpsb
repnz
jl
lock
insb
dec
mov
fldl
out
out
add
mov
sbb
add
sub
cwtl
sub
sbb
sub
mov
gs
shrb
loopne
cli
cltd
loopne
inc
sbb
stos
xchg
sbbb
popa
mov
loop
xchg
push
dec
ret
cmp
jae
inc
push
mov
dec
inc
jecxz
lcall
jg
pop
xchg
xchg
cli
les
and
xchg
mov
jle
test
sbb
enter
push
xlat
and
sub
jmp
je
inc
jmp
mov
rcrb
push
je
rclb
int3
rcrb
xchg
hlt
fists
lds
dec
lret
mov
outsb
mov
dec
out
lock
out
jns
test
test
jae
sub
hlt
cmp
sub
mov
mov
mov
or
shrl
ret
jnp
movsb
ret
subb
lods
pop
cmpb
dec
sbb
cltd
clc
mov
fdivl
xchg
data16
aam
sub
push
lods
jne
and
sub
mov
into
mov
imul
nop
aas
fs
or
push
lock
or
sub
hlt
scas
dec
sti
jmp
jmp
imul
dec
test
into
inc
pop
aas
dec
xor
scas
in
cmp
sbb
imul
cmp
mov
decl
mov
xorl
mov
cmc
scas
push
rcll
aas
jecxz
outsl
lret
cmp
aam
inc
sub
iret
or
push
mov
js
inc
xor
into
sbb
adc
ss
xor
sbb
aam
sahf
inc
fldz
cmp
jnp
in
nop
hlt
addr16
stos
addr16
cmpsb
adc
jecxz
fcom
push
fs
inc
outsb
dec
pop
push
outsl
inc
mov
xchg
push
nop
jmp
xor
pop
sub
pusha
sbb
mov
fwait
lret
aas
scas
mov
fisttpl
popf
inc
jae
inc
fsubrp
in
addl
pop
mov
mov
dec
idiv
mov
fsubl
in
lock
mov
orb
lods
dec
in
push
or
xlat
sbb
js
xor
dec
aam
mov
mov
cmp
sbb
cmpsb
das
sbb
and
insl
addr16
push
push
xor
ja
adc
mov
inc
mov
das
cmp
sbb
nop
scas
cmp
rcrb
into
aas
sbb
push
ljmp
stc
cs
jae
dec
shrl
pop
outsl
sbb
je
ret
mov
xchg
enter
or
and
mov
insl
pop
mov
test
adc
rcrl
iret
mov
adc
cmc
mov
xor
rorl
or
jge
cwtl
pop
fmul
hlt
sahf
mov
rolb
pop
cmp
int3
xchg
mov
sub
lahf
push
push
sub
sbb
mov
adc
loope
and
pushf
mov
xchg
jge
jmp
arpl
pop
cmp
stc
push
push
and
cwtl
dec
in
mov
mov
int
call
insl
sbb
cmp
sbb
cwtl
data16
mov
add
push
inc
jno
jl
jmp
jno
enter
out
push
rcll
mov
aaa
push
jg
add
push
jbe
dec
cmp
and
cltd
fdivrl
push
and
inc
xchg
popf
in
mov
xchg
jg
sbb
mov
push
test
pop
mov
mov
xchg
xlat
insl
ss
divb
orb
cltd
sub
repnz
cmp
xchg
xchg
inc
pop
push
cmp
shl
mov
and
add
stc
out
and
movsb
int
fiaddl
inc
aam
xchg
or
sbb
orl
mov
and
mov
repnz
ficomps
mov
movsb
mov
jb
sub
push
orl
cmp
int3
add
incl
mov
cmp
pop
push
into
maskmovq
divl
decl
mov
mov
push
popf
test
push
xor
aaa
jmp
stc
sbb
dec
filds
mov
stos
cld
fsubrl
inc
jno
pop
or
mov
inc
pop
outsb
jg
clc
add
mov
ljmp
mov
push
lods
inc
sbb
movsb
cmp
lret
add
mov
sub
add
xor
lds
push
inc
jb
add
xor
js
xor
jo
aam
ss
lcall
xchg
in
pop
out
leave
and
stos
mov
insb
mov
in
xchg
push
jecxz
add
sbbb
adc
inc
sub
sarb
push
sub
jne
xchg
pop
or
shrl
cmp
out
mov
cld
mov
lret
movsl
mov
sbb
fsubl
xor
cli
xor
movb
dec
or
add
add
jge
cli
mov
insl
pop
push
xchg
push
lcall
ds
mov
ror
mov
xchg
adc
testl
pop
inc
mov
repnz
cmp
cmp
jnp
dec
in
in
pop
out
aam
dec
xorb
jecxz
pop
push
push
or
subl
fnsave
pop
pop
mov
lods
movsl
scas
in
or
push
hlt
add
adc
scas
mov
and
sbb
push
lret
in
jp
cltd
adc
push
arpl
mov
push
or
xor
mov
push
pop
ljmp
clc
aaa
fildll
repz
mov
les
jle
ret
jae
clc
roll
leave
inc
xchg
aaa
pop
push
stc
inc
jp
rolb
push
cmc
sbb
add
sbb
cmp
push
push
lcall
push
sub
xlat
and
pop
lahf
dec
pop
scas
and
pop
cs
sbb
add
push
stc
enter
xor
cmpsl
ss
and
rorl
push
dec
inc
negl
pusha
enter
fldenv
sub
jp
aad
push
fneni(8087
xlat
imul
push
stos
mov
pushf
jp
push
xor
fwait
add
loope
sbb
xchg
pushf
adcl
jo
push
insb
jmp
add
push
into
sbb
sub
aas
pop
xor
xor
mov
in
xor
pop
cmp
gs
push
inc
sbb
or
sbb
pusha
pop
pop
subb
inc
stos
sbb
ss
jo
cmpsl
ds
jle
fistpl
roll
test
mov
and
push
add
add
xchg
leave
pop
ror
adc
or
jnp
test
cmp
jle
decl
jns
inc
mov
inc
sbb
lahf
xchg
jp
cwtl
push
xchg
fdivl
sbb
mov
cli
enter
dec
and
push
fmul
call
gs
daa
mov
mov
shll
xor
sub
jmp
cli
pushl
mov
rolb
adc
sub
cmp
loop
cli
mov
jb
xlat
pop
test
pop
call
xlat
mov
les
xor
pushf
sbb
cmp
and
mov
call
mov
iret
pop
jb
sub
mov
push
es
inc
in
sub
in
cmpsb
mov
mov
pop
jb
xchg
push
inc
mov
inc
pop
pop
insl
ror
sbb
mov
rcrl
leave
cmova
cmp
enter
xorl
test
sub
sbb
jg
sbb
mov
push
decb
xor
pop
in
mov
mov
and
inc
mov
aas
xchg
jb
push
pop
outsb
je
adc
out
rcrb
inc
in
call
in
rcrl
pushf
out
cmp
dec
jbe
xor
mov
and
add
sbb
sbb
sti
lea
cmp
push
rol
daa
test
outsl
sbb
push
fisubrl
cmp
xchg
push
or
fsubrl
xchg
and
dec
cli
push
push
push
lret
popl
aad
or
es
cmp
dec
mov
cmp
stos
sub
mov
outsb
test
inc
fs
sbb
sbbb
in
mov
daa
and
sbb
mov
inc
push
or
adc
pop
xchg
jp
in
imul
inc
sti
js
sub
jbe
pop
ljmp
data16
mov
pop
mov
push
pusha
int3
je
ja
lcall
cmpsb
in
mov
sub
xlat
cmpsl
out
push
imul
in
adc
push
xlat
cmp
ret
adc
sti
lods
dec
mov
sbb
mov
push
xor
fstl
leave
xor
dec
sbb
pop
in
lds
mov
push
xchg
xchg
cmp
xor
xor
add
mov
insb
fistps
daa
mov
bound
xchg
jecxz
cmp
rorl
test
and
push
and
out
sbb
ret
jae
adc
or
sbb
cmc
dec
inc
and
rcr
xor
cmpsl
pusha
add
mov
pushf
cmpsb
xor
negl
adc
cltd
xchg
aad
jg
jl
iret
lock
add
xchg
or
push
sub
in
in
movsb
push
jnp
repnz
loop
cld
push
xlat
sti
jns
enter
repnz
add
xchg
test
xor
inc
jb
mov
mov
push
or
dec
adc
mov
xor
and
addr16
push
jmp
cs
sub
dec
pop
push
ljmp
repnz
insl
adc
ror
mov
mov
inc
fwait
xor
pop
mov
lds
push
sbb
cwtl
cmp
and
xchg
int
xor
fwait
and
and
arpl
push
cs
enter
mov
aad
ret
mov
cltd
push
je
bound
fwait
dec
mov
rorl
sarb
dec
mov
jle
push
fwait
ds
cmp
sbb
in
ss
jb
pop
xor
rorl
test
aas
xor
dec
lret
push
loop
cltd
pop
dec
lods
ret
ret
jo
int
cmp
dec
cld
pop
dec
push
fcomps
arpl
jmp
mov
in
jno
ljmp
outsl
call
mov
xchg
push
jb
mov
and
andb
fsubl
xchg
mov
pushf
fildll
pop
addr16
or
cmpl
shll
fdecstp
in
das
dec
cmp
xor
fisubrl
push
dec
jae
jp
testb
adc
pop
call
cmpsb
sti
xchg
shrb
push
and
sbb
xor
stc
loop
jle
jmp
rorl
sbb
cld
jmpw
jge
fcmovnu
dec
and
mov
xchg
add
adc
cs
leave
ja
push
cmpsb
outsb
outsl
adc
rcrb
addr16
fbstp
pop
jg
notb
cmpsb
and
lea
cmp
daa
loopne
sbb
jno
add
cwtl
scas
stos
loop
mov
mov
mov
scas
movsl
pop
mov
cmc
scas
xchg
push
loopne
xchg
inc
push
jne
xchg
dec
lcall
rolb
or
jle
sub
jp
adc
popf
imul
mov
jb
and
roll
sahf
mov
push
stos
jbe
push
push
mov
out
add
push
pop
dec
jnp
inc
cmp
sub
mov
xor
leave
cli
int3
jno
adc
push
and
dec
dec
scas
icebp
add
mov
inc
popl
mov
adc
xchg
add
stos
pop
rcr
mov
mov
mov
pop
je
lahf
mov
xorl
stos
adc
adc
add
push
gs
pause
add
fwait
pop
adc
jnp
arpl
cmp
jnp
out
scas
rcll
pop
das
xchg
test
xor
jp
scas
lret
pop
mov
inc
sbb
rcll
sbb
repz
pop
jae
pop
sub
add
subb
xorl
mov
pop
mov
insl
inc
push
fld
cmpl
xor
fdiv
jle
popa
pop
and
in
sbb
shlb
call
or
push
cltd
cs
inc
rolb
ds
pushf
cltd
mov
iret
mov
xchg
popf
or
add
adc
inc
cmp
pop
sbbl
scas
lret
adc
adc
outsb
popa
bound
jge
stos
push
push
loope
sub
sub
xchg
xor
in
enter
xchg
jae
cmpsl
xchg
jp
int
and
dec
sbb
sbb
or
lret
daa
sbbl
dec
sbb
sub
lods
xchg
cmpsl
sub
in
dec
lret
and
and
adc
mov
popf
push
sub
push
xchg
mov
int3
cltd
sbb
mov
das
inc
push
cltd
cmp
pop
scas
sub
cs
sub
cs
subb
into
sub
mov
roll
push
rcll
dec
jns
xchg
ss
mov
loopne
mov
repz
mov
addr16
test
mov
xor
pop
or
int3
test
xchg
push
xor
push
adc
push
out
rol
popf
mov
xor
jecxz
and
sub
pop
pushf
shrb
das
push
loop
fdivs
pop
add
mov
or
jmp
shlb
adc
popf
sub
dec
inc
mov
xchg
mov
pop
adc
pusha
mov
mov
mov
lar
jns
popf
add
cmpsl
das
loop
aam
xchg
sbbl
adc
add
sub
in
push
or
xchg
jp
cs
dec
das
push
adc
lea
ss
sub
xor
or
and
pop
out
mov
aas
ja
sahf
lods
push
das
aad
mov
mov
push
jne
or
sub
cmp
and
insl
adc
pop
test
cmp
mov
shr
in
loope
nop
add
adc
inc
add
stos
jnp
int3
cmpsl
mov
jg
aaa
aad
cmp
lret
adc
mov
sub
out
test
pop
sub
xchg
out
adc
jecxz
in
mov
cs
push
xchg
push
adc
jg
subl
inc
pop
mov
fwait
xor
add
cld
sub
sub
aaa
cmp
gs
jmp
pop
adc
sbb
inc
sbb
adc
repnz
lock
inc
leave
std
lods
les
or
shll
mov
je
jmp
xlat
lods
out
inc
lods
scas
mov
ljmp
lods
jae
mov
mov
xchg
out
push
or
shlb
and
data16
mov
js
xorb
div
cmp
test
push
cwtl
mov
int
loopne
test
sbb
inc
sbb
pushf
mov
out
lods
jae
mov
loop
cmp
lea
test
push
lret
sbb
imul
scas
lret
gs
notl
dec
popf
pop
insl
in
inc
jle,pt
cmp
out
push
addr16
xchg
mov
pop
sbb
repnz
kmovd
mov
mov
and
sbb
cs
into
xchg
jg
adc
je
cmp
setp
mov
cmp
mov
push
push
pop
les
cli
sbb
add
sub
pop
sti
adc
jecxz
inc
mov
subb
ss
ret
stos
xchg
dec
push
lds
clc
xchg
pop
mov
jl
shll
mov
adc
loope
icebp
imul
add
push
jne
adc
clc
inc
nop
mov
pop
and
dec
ss
test
jle
ds
pop
bound
pop
inc
or
mov
mov
aam
sub
enter
cmp
imulb
ds
inc
cltd
into
sub
xchg
jb
mov
cwtl
xor
cmp
out
inc
mov
cmp
mov
cs
inc
jne
xor
sbb
inc
clc
sbb
xchg
das
into
arpl
les
lret
dec
pop
mov
xor
sbb
push
movsl
xchg
ds
test
xor
xor
xor
outsb
jnp
cmc
les
or
xorb
push
or
outsl
sbb
call
pop
fdiv
or
loope
xor
nop
int3
add
jbe
mov
push
cmpsl
int3
ss
lahf
cmp
xor
mov
mov
sbb
mov
mov
sbb
scas
les
jno
push
fstpt
dec
push
outsl
test
ja
imul
mov
pop
sub
adc
push
lahf
je
sahf
mov
aaa
fstpl
ret
arpl
fs
lods
fmull
sahf
mov
cmp
or
pop
and
bound
add
aam
jecxz
cmp
arpl
cld
inc
sub
cmp
pop
outsl
cmp
mov
adc
pop
xor
sbbl
adc
and
rolb
xor
push
cmc
andl
mov
jge
int3
inc
cmp
aas
adc
fidivl
std
cmp
jnp
pop
sbbl
jecxz
cmp
xbegin
movsb
add
sbb
sub
mov
cltd
push
aaa
jbe
lret
cmpsl
fistl
sub
push
es
pop
fistpl
leave
add
ficoml
cmp
nop
mov
inc
dec
pop
cmp
inc
ljmp
rcrl
mov
repz
mov
inc
xchg
ja
aaa
and
pushf
jl
jne
inc
xchg
loopne
leave
or
and
lret
sbb
cld
jnp
cli
adc
mov
cltd
push
and
dec
stos
stos
mov
add
sub
loope
cmp
sbb
sbb
arpl
sub
addw
or
mov
loop
or
cwtl
test
mov
out
daa
imul
addr16
cmp
out
rcrb
fisubrl
mov
xchg
inc
inc
mov
das
cmpsl
mov
std
pop
and
stos
jge
jle
fldenv
push
cmpsb
lahf
sbb
cmp
sub
pop
ja
xchg
icebp
xor
cmp
loop
sbb
adcb
popf
jno
int3
sbb
fstpl
insl
and
int
in
pop
fisubs
sarw
and
imul
bnd
mov
push
jns
lret
sbb
xchg
lock
aad
fstpl
or
sub
stos
les
sub
push
and
les
and
pop
icebp
aam
fxch
lret
subb
xchg
shlb
push
sahf
xlat
movb
sub
mov
in
aaa
mov
cli
mov
push
push
into
add
jns
movsl
sub
or
movsb
xor
adc
jge
fwait
movsb
scas
xor
out
mov
ret
adc
pop
sub
cmp
movb
push
les
jge
xchg
push
or
aad
jecxz
lret
cld
pop
aaa
jae
repz
aaa
ret
repz
shl
loopne
inc
insl
fimull
lret
shlb
mov
setbe
cmpsl
lcall
jno
dec
sbb
sbb
pop
rorl
shll
stc
mov
aad
cmp
aas
mov
sub
mov
out
std
shr
pop
jno
sub
or
pop
jle
inc
leave
inc
cs
push
addr16
jb
jbe
ljmp
leave
fistpl
das
orb
lret
scas
psubsw
nop
xchg
cltd
add
iret
and
jecxz
aad
int
and
negl
or
or
and
pop
xchg
pop
xchg
stos
daa
jl
jecxz
sub
add
sbb
add
pop
sub
out
fimuls
ljmp
outsb
cs
mov
push
push
sub
cltd
clc
mov
std
mov
movsb
imul
pop
or
loop
dec
les
push
popf
out
cmp
push
jecxz
fsub
mov
adc
jb
inc
sub
fisubs
sbb
call
xor
xchg
mov
and
adc
cmp
out
hlt
xchg
mov
lret
adc
sbb
cs
frstor
mov
mov
xor
les
adc
hlt
mov
loop
jb
outsb
lock
mov
push
push
dec
out
mov
push
out
cld
punpckhwd
dec
sub
jns
fs
rorl
arpl
xor
pop
pop
aas
js
and
add
add
stos
pop
xor
ja
movb
ret
cld
inc
test
mov
aaa
cmpsl
lret
fcoml
frstor
pop
sbb
jp
hlt
in
aad
shll
orb
adc
mov
out
sbb
mov
dec
in
je
out
add
mov
dec
dec
mov
cs
mov
mov
mov
icebp
fdivl
push
sbb
imul
test
mov
pop
xchg
and
daa
aad
xor
es
inc
cmp
xchg
push
adc
pop
xchg
out
jns
nop
mov
dec
sbb
test
jge
xchg
pop
test
push
lret
sti
xor
fimull
xor
sub
sbb
jns
leave
loope
pop
push
xchg
sbbb
or
out
mov
inc
adc
cmp
sbb
stos
cwtl
xchg
and
xchg
fldt
xor
jne
pop
stos
outsb
repnz
sbb
adc
scas
inc
pop
stos
popf
arpl
dec
fmuls
pop
mov
dec
stos
add
lcall
xchg
sbb
dec
jge
iret
hlt
je
aas
or
shr
int
adc
lods
add
cmp
scas
ret
rol
add
pop
push
add
bound
pusha
push
dec
or
dec
es
test
adc
or
dec
mov
mov
je
nop
sub
dec
push
loope
imull
dec
sbb
ljmp
dec
cmp
leave
mov
lcall
mov
and
add
xlat
in
sbb
and
std
imul
insl
sbbl
loop
decb
leave
or
aam
movsl
cmpsl
inc
hlt
test
jecxz
es
and
cmp
push
mov
pop
xor
or
push
push
dec
cmpl
lret
fnstenv
lcall
xor
push
mov
adc
cmc
and
aad
inc
mov
sbb
pusha
fwait
cmpsb
scas
dec
sarl
sbb
xchg
jb
scas
mov
jo
and
xchg
call
popa
push
in
bswap
popa
je
out
icebp
adc
out
out
rcrb
or
stos
or
les
roll
pop
sbb
enter
sbb
stos
cmp
xchg
std
cmp
insl
pop
xor
jnp
pop
pop
fs
mov
xor
ja
cmp
ss
pop
sbbl
es
mov
cwtl
out
push
or
and
mov
mov
inc
out
or
adc
addr16
test
pusha
rorb
xchg
add
add
jmp
sub
push
test
ret
inc
into
or
mov
lea
movsl
xlat
xchg
iret
roll
pop
gs
sbb
sbb
cmp
arpl
movsl
and
ret
out
les
dec
fisubrl
add
add
push
shl
mov
mov
leave
jbe
dec
out
in
xor
mov
jge
lcall
repnz
dec
mov
jl
dec
mov
inc
xchg
scas
adc
or
das
lods
mov
sub
stc
mov
dec
adc
imul
repnz
in
hlt
mov
test
or
shrl
cmp
cltd
aad
adc
inc
clc
scas
push
arpl
inc
orb
in
pop
arpl
das
push
es
and
cmp
ljmp
and
xchg
sbb
pusha
mov
and
xchg
in
bound
cmc
hlt
and
add
int
xor
mov
xchg
fcomps
lock
dec
mov
shlb
nop
lahf
rcr
es
movsl
shll
in
arpl
cli
pop
dec
es
scas
fmull
sub
jo
mov
mov
inc
xchg
out
mov
mov
ret
push
jecxz
insl
or
mov
mov
xchg
jg
stos
cli
add
add
scas
aaa
and
or
lcall
or
lds
adc
mov
ja
out
mov
outsb
sbb
pop
repz
push
pop
mov
fwait
inc
call
cmp
out
xlat
cmpsl
cmp
dec
je
cltd
mov
jmp
cmp
jle
sbb
adc
inc
add
push
add
mov
in
icebp
jae
jge
mov
sbb
jno
inc
adc
sar
and
rcll
add
iret
dec
sbb
mov
push
insl
mov
pop
pop
mov
cmp
addr16
mov
scas
mov
ja
adc
or
addr16
mov
add
loopne
push
pushf
jle
bound
dec
out
sbb
xlat
fdivrl
mov
in
divl
test
xor
mov
push
icebp
mov
mov
jecxz
sbb
add
insl
test
sub
cmpb
fld
icebp
xor
es
cmp
sti
stos
mov
push
enter
inc
mov
add
call
push
ret
shl
adc
add
mull
dec
ds
daa
imul
and
add
sub
mov
icebp
push
imul
xchg
push
sbb
out
subl
subl
int3
mov
mov
cmp
lea
cmp
xchg
and
push
lcall
pop
jl
mov
cmp
dec
sub
push
xchg
push
cwtl
mov
loopne
adc
nop
popl
cltd
pusha
cmp
mov
dec
cmpl
les
movsb
xchg
xchg
push
add
repz
aaa
imul
sbb
dec
popa
mov
pop
pop
push
inc
stos
js
mov
out
loope
adc
mov
jo
loope
inc
lock
fwait
iret
jno
mov
out
das
scas
fcmovu
push
cli
popf
or
testl
iret
jno
push
jns
xor
sbb
out
lods
adc
test
jmp
iret
xor
push
push
sub
jp
iret
push
rcrb
pop
adc
movsl
or
idivb
data16
push
rcll
jns
add
mov
subl
pop
pushf
icebp
out
xchg
and
pop
inc
sti
cmp
pop
pop
cli
inc
leave
mov
and
loope
scas
push
outsb
scas
inc
xchg
jp
fisubl
push
adc
lcall
sub
dec
data16
js
stos
stos
dec
jnp
es
and
cmp
xchg
iret
mov
jecxz
sti
cmpsb
jb
or
push
je
push
push
mov
push
or
test
addb
mov
or
xchg
pop
adc
xchg
cmpb
sbbl
push
negl
gs
cmp
in
jle
outsb
sub
push
pop
cmp
aam
sbb
sub
push
push
or
loop
xor
pop
push
sbb
push
int
lahf
leave
outsb
scas
or
cmp
fwait
mov
insl
mov
jg
jg
xchg
shrl
mov
pop
lock
mov
sub
bound
int
loop
stos
out
sahf
xchg
mov
lahf
in
sub
xchg
scas
sub
cmp
pop
jle
jg
lea
test
dec
jne
mov
jae
or
mov
fstps
cmp
shl
mov
adc
mov
fstpl
add
pop
cs
es
xor
cmpb
sub
gs
hlt
call
incl
sub
add
test
inc
jle
test
out
add
mov
sub
push
xchg
add
mov
stos
or
bound
imul
sbb
mov
fdivl
mov
insl
repz
inc
testb
mov
ror
daa
out
mov
xchg
adc
pusha
dec
imul
cmpsb
and
stc
movsb
lock
leave
dec
pusha
add
mov
push
stc
xchg
jmp
scas
lahf
sbb
inc
and
sti
scas
loop
fwait
in
sub
fwait
sbb
mov
pusha
scas
xchg
dec
adc
mov
or
sub
cwtl
in
test
test
push
movsl
push
fwait
ja
mov
cld
into
mov
jne
adc
clc
pop
imul
fsub
ljmp
xchg
sub
out
orl
sar
dec
or
clc
mov
mov
push
inc
jae
and
dec
push
xor
mov
push
jbe
dec
cmp
pop
lock
or
sahf
fiaddl
les
cmp
and
fisttps
cmp
loope
dec
sbb
hlt
inc
push
test
add
add
and
pushf
push
loop
mov
xchg
jp
shrb
xchg
dec
xchg
xlat
fcoml
mov
xlat
fdivl
mov
cmp
or
mov
xor
mov
or
ret
lods
adc
mov
inc
rorb
xlat
mov
mov
out
loop
aaa
lds
test
test
shlb
jae
subl
daa
jle
sub
lods
popa
add
fwait
and
repz
and
xor
add
mov
sub
movsl
add
adc
push
adc
push
xor
hlt
jg
or
lcall
lcall
pop
jl,pn
lds
test
sub
dec
jl
sahf
pusha
out
and
push
jp
pop
sbb
stos
or
xchg
shrl
loopne
adc
push
xchg
sub
mov
jge
push
insb
xchg
ret
clc
sbb
daa
mov
push
push
test
jne
mov
pop
test
pusha
dec
dec
jecxz
in
ffree
cli
stos
ret
adc
mov
clc
out
div
xlat
dec
jle
mov
dec
mov
mov
or
cltd
mov
fldt
cmp
push
cs
nop
add
mov
and
cmp
cld
sahf
ljmp
xchg
insl
movsl
ss
mov
fs
jle
aaa
pop
repnz
cli
popa
es
std
outsb
sahf
test
enter
scas
jmp
xchg
nop
fadd
aam
mov
pop
push
mov
jnp
stos
sete
enter
mov
sbb
xchg
cmp
mov
leave
and
xchg
cli
or
fadd
jmp
sbbb
iret
js
flds
leave
shrb
xchg
stos
mov
add
dec
inc
shr
rcl
xchg
mov
test
cmpsl
mov
inc
arpl
and
lods
mov
dec
add
add
mov
dec
in
dec
popf
add
imul
sub
insb
pusha
sbb
pop
out
out
loopne
test
mov
xchg
sbb
stos
sub
mov
sbb
xor
test
icebp
idivb
insl
and
mov
sub
mov
mov
movsl
inc
stc
scas
inc
ss
xchg
rolb
sub
inc
xchg
loopne
jbe
mov
fldcw
inc
arpl
loope
and
testb
or
mov
or
arpl
lock
daa
gs
adc
add
add
cmc
mov
lret
imul
orb
daa
repnz
add
push
rorb
jge
jbe
sbb
jbe
aad
pop
cmp
hlt
cmpsb
outsb
inc
movsl
aam
sub
jns
sbb
xchg
stos
dec
fisubrs
in
xor
pop
pusha
add
mov
jecxz
fsubs
aam
pop
lods
cltd
push
pop
sbb
push
mov
cltd
mov
nop
adc
dec
in
and
mov
pop
or
mov
dec
jb
pop
adc
pop
or
push
cmp
sub
dec
or
mov
lock
cs
add
jecxz
mov
enter
push
jbe
ja
aam
xlat
ret
jnp
cltd
lea
shlb
sub
in
xchg
add
push
xchg
xor
jo
push
mov
sub
mov
ljmp
aas
push
test
cmpsb
pop
jecxz
loop
clc
push
cmp
stc
movsl
call
loope
nop
adc
or
loopne
test
jg
test
or
push
or
add
sbb
fisttpl
adc
hlt
jg
mov
rcrb
lcall
xchg
and
nop
cmpsb
daa
jo
in
sbb
sbb
sub
ljmp
je
aad
jne
nop
test
or
jmp
xchg
xchg
stos
or
pop
or
push
punpcklbw
xorb
xchg
sarl
pushf
icebp
outsb
fimull
add
outsb
xchg
mov
jecxz
push
dec
stos
dec
sbb
fsubl
test
dec
adc
dec
jnp
xchg
mov
adc
ss
aas
cmp
jbe
repnz
xor
dec
fbstp
mov
xchg
cmpsl
jecxz
sub
dec
das
mov
mov
dec
push
sub
jb
bound
xor
fistps
mov
fistl
rolb
add
mov
mov
leave
pop
pop
fcmovu
add
lahf
stc
and
mov
aaa
mov
cmp
pop
inc
push
cs
rclb
into
repnz
cmp
xor
lea
pop
sub
xchg
and
or
nop
cmp
jmp
cmpsb
jmp
clc
mov
adc
jb
adc
lea
and
push
xor
xchg
test
jbe
jge
jae
push
jp
pop
stos
mov
push
ljmp
arpl
xchg
fnstsw
xor
dec
popf
cmp
cs
mov
hlt
ret
in
out
gs
mov
out
pop
mov
dec
test
cmpsb
lret
rclb
or
orl
lock
inc
mov
push
pop
cwtl
xchg
pop
loope
push
inc
into
xor
mov
xor
or
loop
mov
movsl
inc
mov
xorb
imul
decb
arpl
sahf
inc
jl
jns
das
xchg
pop
dec
lahf
lods
mov
fisttps
push
jne
aad
xchg
test
scas
lret
arpl
aad
divl
jae
enter
es
das
push
pop
mov
mov
js
insb
mov
mov
lock
mov
pushf
and
jecxz
lret
adc
xor
push
clc
sti
shll
mov
mov
pop
mov
or
incb
jmp
mov
xor
push
adc
pop
ret
and
stos
dec
and
repnz
je
xchg
aad
arpl
cwtl
mov
insl
xchg
rcrl
mov
sbb
je
cmc
testl
test
xchg
scas
loopne
test
pop
les
dec
jl
jge,pn
out
aas
jge
jae
jecxz
loopne
inc
sahf
out
fcomi
testl
lret
xorb
fiadds
test
cmp
push
js
pop
dec
lods
lock
ja
lahf
cwtl
add
or
mull
pop
xchg
dec
xor
fs
in
insl
ret
jl
sub
int3
lcall
inc
js
outsb
pop
int3
cmc
loope
call
fists
aas
or
ljmp
xchg
mov
and
incb
pop
mov
in
imul
lods
push
inc
mov
out
mov
mov
insl
outsb
icebp
adc
flds
ljmp
into
je
push
cltd
test
ljmp
dec
mov
cmc
in
cmpsl
pop
adc
ret
cmc
xor
xchg
data16
mov
inc
cmp
aaa
jb
mov
inc
std
sar
push
out
subb
xchg
pop
or
adcl
and
mov
jl
push
lret
out
sub
test
test
cwtl
or
add
push
push
or
mov
aas
sbb
and
cld
sbb
cltd
cmp
mov
jecxz
jo
ja
ret
ss
push
dec
mov
xchg
popf
push
mov
sti
mov
and
scas
lcall
mov
fs
sahf
and
pop
inc
loopne
mov
mov
loopne
xchg
or
or
cmp
in
out
aam
or
sub
xchg
movsb
adc
lea
lret
in
iret
rcll
and
arpl
ret
in
out
jo
lock
in
iret
loopne
mov
xchg
cwtl
fsubrl
cs
push
cmpsl
insb
inc
ss
lret
xchg
adc
mov
dec
add
js
add
push
loope
pop
andb
test
mov
adc
jge
arpl
push
ficoms
lods
or
cmp
aaa
adc
jb
cmp
cmc
pop
into
sub
push
aam
loopne
ljmp
add
bound
and
sbb
lods
je
das
push
xchg
xchg
inc
sub
scas
mov
mov
imulb
jae
mov
add
loopne
data16
xchg
cmp
push
mov
xchg
loop
out
adc
mov
pop
and
lret
clc
mov
mov
js
or
ss
fsubs
jge
icebp
ret
mov
pop
sub
jb
fiaddl
arpl
je
cwtl
or
sub
stos
pop
jo
or
xor
es
mov
sbb
sbb
fwait
xchg
std
sbb
and
xor
jne
pop
movsb
test
pop
cli
sahf
mov
aam
cmpsb
test
mov
push
shl
mov
lods
mov
call
adc
jb
leave
mov
cmp
in
push
sub
xor
fnstcw
in
lock
pop
insl
outsb
shl
imul
icebp
cmpsb
lea
dec
push
jo
jo
lahf
cmpb
xchg
mov
mov
and
stos
rclb
stc
inc
inc
stos
fildll
adc
stos
dec
addb
xchg
pop
sub
jno
inc
cld
sbb
cwtl
bound
ds
sar
das
cmpsl
add
inc
dec
mov
hlt
cmp
mov
sbb
cmp
sbb
addr16
bound
sbb
pushl
pop
mov
shlb
dec
pop
inc
push
cmp
popf
adc
cmp
int3
inc
into
iret
xlat
sub
ss
xchg
lods
test
xor
out
in
pop
adc
mov
dec
test
jno
xchg
out
jl
mov
loopne
sub
sub
dec
loopne
sbb
add
xchg
adc
sbb
adc
mov
repz
xor
sub
mov
insb
cwtl
icebp
cmp
cmp
in
in
out
pop
sbb
sub
rorl
xor
in
mov
out
inc
dec
fwait
loope
xchg
cmp
fs
xorb
in
js
mov
jb
push
dec
das
inc
sahf
shr
sbb
leave
fidivrs
loop
repnz
pop
faddl
repz
or
or
les
dec
sub
pop
sti
popa
test
push
jb
in
dec
js
push
jle
rorl
push
mov
or
aas
shrl
sub
nop
int3
xor
mov
testl
fistps
adc
and
push
xor
add
ror
out
push
cmpsb
and
push
xchg
add
fistps
jnp
cwtl
adc
xchg
xchg
es
sbb
push
and
loop
sub
push
ss
jecxz
leave
add
sub
pop
lahf
mov
clc
mov
cmp
mov
cmp
cs
pop
and
movsl
mov
addr16
fiaddl
xor
sbb
inc
inc
add
daa
scas
pop
pop
cmp
clts
shll
xchg
lcall
and
out
int
call
mov
jae
sbb
dec
pushf
xlat
mov
cmp
push
daa
cltd
mov
adc
mov
leave
add
sbb
sahf
stos
daa
out
stos
test
sbb
sub
mov
adc
pop
push
ds
shl
pop
pop
mov
push
xorl
push
pop
ss
mov
cmp
loop
roll
xchg
pop
aaa
mov
nop
shll
and
jbe
fstps
mov
sbb
and
adc
scas
shrl
test
add
cmp
pusha
dec
inc
dec
mov
loope
sub
xchg
dec
testb
mov
pop
daa
lahf
jmp
into
jne
sbb
mov
aas
addl
xchg
mov
stos
shl
loopne
or
dec
ret
dec
sbb
imul
xor
push
cmpsb
inc
mov
ror
ret
shr
add
jl
cs
or
gs
in
jo
outsb
les
cmpsb
lret
shlb
push
mov
xor
inc
mov
mov
push
push
rcll
lock
addr16
inc
mov
ljmp
inc
loope
lds
pop
jae
xor
test
xchg
cmp
pop
dec
dec
gs
out
xchg
or
lret
sub
inc
daa
je
frstor
sbb
and
pop
xchg
xor
xchg
aam
jns
lahf
test
sar
or
iret
pushl
stos
pushf
in
nop
inc
shlb
imull
repz
stc
xor
dec
adc
mov
sar
cmp
test
data16
push
cmp
push
xchg
iret
jg
pop
pop
ljmp
inc
jne
jae
aaa
mov
test
cmp
pop
lret
rcrb
andb
jne
mov
mov
cmp
fmull
mov
xor
adc
mov
push
fsub
ficomps
clc
cmp
sbb
mov
pop
loopne
pop
lcall
inc
aas
ficompl
fisubs
aad
popf
lds
mov
gs
dec
pop
push
rorl
xor
ja
in
mov
xchg
fwait
or
pop
adc
repz
in
cmp
popa
aaa
mov
push
popf
mov
pop
mov
adc
bound
outsl
scas
test
push
cmp
cmp
aaa
dec
repnz
add
es
adc
dec
iret
out
jbe
xor
cmpsl
add
push
adcb
sub
jb
sbb
daa
mov
mov
jge
fdivrl
outsl
movsb
pop
cmp
in
aad
and
adc
insl
jns
call
hlt
std
mov
adc
aaa
xchg
clc
jne
sbb
shl
cs
add
adc
out
lds
imul
fwait
aam
xor
out
sbb
data16
je
lods
mov
loopne
push
enter
call
lcall
jns
popa
jg
int3
ds
loopne
jo
hlt
jae
lea
pop
xchg
mov
lahf
cmpsb
push
ret
outsb
inc
adc
cltd
ljmp
imul
dec
out
pop
repz
and
inc
lret
and
dec
insb
sub
imul
outsl
mov
pop
repz
cmpl
andb
xchg
ret
jp
adcb
loop
outsb
xor
jp
cmpsl
inc
jmp
test
cs
sub
mov
ficoms
lods
dec
push
in
mov
outsl
pop
and
hlt
popa
std
addr16
call
sub
mov
sub
adc
fwait
movl
fcoms
jno
mov
mov
das
ret
shrl
shrb
add
pop
push
mov
out
ss
pop
pop
mov
cltd
incb
xchg
test
in
cwtl
dec
mov
xchg
push
mov
mov
ret
loopne
call
stc
arpl
jno
mov
cmp
into
mov
out
or
in
pop
cmc
cmp
ss
imul
mov
or
stc
aad
std
mov
ret
adc
cmpsb
push
je
imul
mov
adc
rcl
imul
sub
fnstsw
mov
movsb
add
mov
xchg
or
or
xor
daa
test
pop
ljmp
stc
push
and
jne
pop
xchg
es
clc
rcr
mov
jl
sub
dec
fldl
jle
pop
pop
sbb
add
imul
scas
out
mov
jecxz
sub
mov
hlt
push
mov
out
xchg
inc
mov
loop
mov
inc
pop
sub
and
inc
pop
fucomp
loop
or
jmp
stos
dec
jl
rorl
addr16
sbb
adc
xchg
into
outsb
loop
and
test
cmp
dec
mov
ljmp
jge
xor
test
ret
or
rcrl
lcall
int
sbb
ret
out
data16
shll
add
or
mov
divb
leave
nop
mov
mov
jl
mov
xor
jo
ljmp
inc
pop
fcmovb
iret
int3
sbb
sub
add
sbb
shrl
jle
add
mov
lods
dec
inc
fstpl
cmp
test
dec
lock
lret
sbb
std
mov
test
jl
push
pop
dec
ja
sub
sbb
lret
sbb
insb
insl
pop
arpl
push
add
xchg
push
jecxz
out
adc
in
push
pop
and
pop
outsl
pop
jne
je
cmc
clc
xchg
scas
aad
sbb
mov
push
daa
cld
mov
into
cmp
jnp
int3
popa
loop
and
shrb
pop
fistl
divb
xor
inc
pop
sbb
sar
mov
ds
loopne
and
test
pop
jne
in
add
and
inc
add
pop
xchg
add
sbb
jmp
pop
and
xlat
xchg
sarl
xchg
xlat
aaa
and
and
add
push
dec
inc
sbb
fisttpl
pop
stos
icebp
aas
inc
je
sbb
cmpsb
scas
aam
jae
mov
out
adc
pop
movsb
cmpsb
test
in
mov
outsl
xor
xchg
push
fldenv
mov
out
sbb
xchg
mov
sti
sub
sti
pop
enter
out
and
js
imul
cld
scas
xchg
jne
les
ret
pop
jmp
popl
in
sub
mov
es
adc
adc
lret
sbb
adc
sbb
leave
aam
fucomi
xlat
mov
test
dec
mov
faddl
sti
shr
inc
sarb
mov
jae
mov
fstps
lods
cmp
and
pop
int
dec
out
into
addr16
mov
sbb
jg
out
jno
cmp
cmp
inc
cmp
dec
clc
stc
sub
imul
into
mov
push
mov
std
je
bound
mov
or
jl
inc
out
repnz
je
bound
mov
ret
subl
cli
sbb
cmp
loopne
xchg
inc
mov
or
cmp
mov
mov
test
or
cmp
xlat
aam
inc
into
adc
into
adc
scas
popa
jg
jmp
divl
push
xchg
add
mov
mov
push
lea
fcmovnbe
pop
std
add
inc
dec
mov
and
pop
push
sahf
jae
jbe
push
pop
and
inc
int3
aaa
repz
add
inc
pop
jmp
push
aam
jns
fdiv
out
mov
cmc
ret
mov
dec
push
fisubrs
mov
gs
sub
xchg
ja
push
or
mov
push
jnp
push
andb
imul
adc
pop
cmp
das
pause
xchg
test
push
jno
mov
push
imul
gs
scas
jecxz
mov
jecxz
jmp
dec
and
cmp
mov
push
jmp
and
std
push
pop
mov
es
gs
mov
mov
lret
in
imul
sub
in
adc
icebp
andb
loope
cmp
out
imul
cmp
jns
jb
pop
jne
jmp
push
xchg
jp
xor
popf
xor
int
inc
pop
out
mov
ret
sub
mov
sbb
xor
paddusw
inc
sbb
dec
pushf
in
or
push
sbb
lret
stos
pop
push
imul
rcrl
cmp
sbb
push
lahf
cs
ret
in
jle,pt
or
add
daa
sbb
sbb
dec
mov
sub
mov
adc
dec
dec
dec
mov
inc
and
jge
std
inc
rcrb
cwtl
push
or
cmp
scas
scas
jne
hlt
xor
jnp
push
push
dec
jp
adc
dec
xchg
loopne
ret
mov
push
pop
sarb
mov
cmp
mov
faddl
add
fs
sub
xchg
or
dec
xchg
pop
inc
out
ret
adc
push
sub
aaa
dec
inc
popf
lcall
je
pop
sbb
pop
fisttpl
loopne
add
xchg
test
push
mov
dec
dec
xorb
mov
jp
in
push
in
out
sbb
jb
cmc
mov
pop
jl
pop
or
pusha
mov
mov
imul
pop
adc
push
sbb
cmp
push
add
popa
inc
xchg
sub
je
add
adc
push
push
ficoml
push
sbb
or
cld
xor
gs
jecxz
xchg
stc
insb
jmp
lahf
push
mov
jmp
imul
stos
leave
lods
xor
push
jge
push
inc
xor
jge
xchg
push
inc
xorb
jmp
cmp
rorl
mov
rol
lods
fildll
gs
mov
pop
mov
jle
dec
dec
jmp
cmp
xor
aas
in
mov
lcall
mov
pop
roll
fdiv
mov
rcll
popf
xor
ds
icebp
daa
fiadds
fisttps
push
mov
push
xchg
xchg
test
jmp
outsl
xor
push
ret
xlat
rcll
dec
push
popf
push
xchg
sbb
pop
jmp
mov
cmp
cmp
mov
xor
sti
sarl
int3
push
dec
jle
sbb
or
mov
dec
movsl
aaa
xchg
xor
mov
mov
movsl
jp
lds
lahf
orl
negb
push
sub
or
test
aas
sbb
lds
jb
imul
gs
and
mov
inc
mov
jb
insl
xchg
pop
orl
test
xchg
jnp
cli
or
xlat
int3
xchg
sub
sub
adc
subb
repnz
dec
insb
push
stos
ds
js
push
xchg
inc
push
jg
daa
jnp
cli
pop
pushf
jbe
push
lds
shll
push
xor
add
jle
lret
test
dec
fidivrl
sub
inc
push
inc
int3
and
stc
mov
jmp
pop
test
es
faddl
jmp
sub
xchg
xor
mov
nop
stos
jg
hlt
test
leave
sub
imul
icebp
cmpsl
daa
mov
es
adc
sahf
xchg
adc
add
mov
sahf
mov
mov
addr16
cmp
movsb
mov
xor
pop
sbb
xchg
stc
or
addl
pop
xchg
sub
mov
lds
xchg
rcrb
pop
aas
push
js
adc
pop
sbb
cmpsb
js
out
andb
push
gs
jg
fiaddl
repnz
jb
scas
cltd
pop
mov
test
pushl
xor
scas
inc
cltd
sti
test
or
dec
cmp
inc
mov
dec
aad
cli
jns
jne
mov
imul
and
cmpsb
loop
arpl
mov
test
sub
data16
mov
std
nop
and
mov
inc
sbb
in
ljmp
xchg
or
pop
adc
cmp
xorb
cmp
imul
test
scas
sub
inc
and
push
lock
push
loop
xorl
adc
ret
cmc
sbb
mull
orl
mov
sbb
cwtl
sub
mov
mov
adc
xor
loope
aas
sbb
out
enter
inc
negb
jmp
and
idivl
inc
or
mov
push
and
inc
mov
mov
inc
es
pop
mov
sub
mov
aam
or
sub
pop
xchg
sub
dec
jns
xchg
xchg
out
mov
imul
rcrl
dec
mov
sbb
loop
sbb
add
scas
test
push
pop
jno
pop
les
sarb
frstor
push
repz
sbb
iret
push
adcb
jnp
shll
mov
dec
mov
dec
and
and
ror
rcrb
mov
pop
orl
lea
sub
mov
and
dec
pushf
xchg
inc
out
mov
push
imul
sbb
ja
push
add
sbb
icebp
rcrl
or
dec
sbb
lret
and
or
or
stc
jno
pop
inc
and
mov
mov
sbb
add
cltd
jb
stos
dec
bound
jecxz
cmc
add
lahf
cmpsb
mov
mov
es
enter
or
cmpsl
andb
and
jae
bound
data16
jb
adc
jle
xor
shlb
inc
test
and
sub
dec
jmp
dec
stc
adc
sub
lea
cmp
xlat
pop
fcompl
adc
xchg
in
inc
lock
lcall
ret
jp
sbb
push
incb
insl
add
lods
mov
iret
pop
pop
xchg
cli
ss
rcrl
jl
jnp
out
xor
fists
ja
mov
fdiv
negl
pop
pop
fadds
enter
addr16
jbe
fnsave
cltd
lcall
mov
inc
add
mov
push
inc
pop
xchg
out
jp
fisubl
xchg
xchg
mov
outsb
imul
xchg
das
mov
xchg
sub
mov
popf
movsl
mov
jb
adc
lock
xchg
nop
cmp
movsb
jbe
add
xor
or
pushf
nop
aaa
mov
cmp
mov
out
xchg
adc
scas
jge
xlat
mov
xchg
mov
pop
aad
addl
sub
or
and
push
lods
jecxz
movsl
xor
bound
sub
push
jb
shl
xchg
fwait
add
test
sub
lret
xor
mov
movsb
jmp
inc
cmp
push
fadd
ror
push
push
jbe
ljmp
mov
in
negb
out
mov
pushf
sub
mov
pop
cmpl
cmp
popf
adc
sbb
imul
jle
arpl
out
xchg
cmp
push
addr16
pop
xor
loopne
shld
in
dec
mov
push
adc
loopne
add
insl
iret
or
movsb
and
xchg
xor
mov
push
add
cmp
out
sbb
cld
inc
cmpsb
bound
mov
ret
pop
or
mov
ret
rorl
enter
push
in
jg
es
inc
mov
cltd
sbb
sbb
mov
in
pop
imul
jp
and
mov
aaa
into
call
cmpb
mov
mov
imul
in
stc
in
mov
loop
rolb
xchg
xor
popa
inc
out
jb
imul
or
xor
jle
mov
inc
jne
push
mov
mov
ljmp
and
pushf
popf
sub
repnz
bnd
je
adc
mov
stos
jl
mov
int3
cwtl
and
xor
js
repnz
cmp
popa
and
in
mov
icebp
fwait
aad
mov
xchg
push
arpl
sub
es
add
pop
test
and
iret
xchg
fs
cmp
mov
in
aam
fwait
xlat
stos
imul
popf
xchg
clc
mov
fwait
test
mov
inc
test
pop
fwait
or
daa
js
mov
and
ret
nop
testb
xchg
sub
xor
int
mov
rcr
orb
sub
dec
ljmp
jl
sub
pushf
pop
push
dec
push
push
fsubrl
ja
scas
ret
xchg
pop
and
dec
mov
rcrl
inc
inc
cs
pushf
enter
inc
sahf
call
addl
icebp
cmp
mov
sbb
mov
mov
sub
xor
jge
xor
pop
test
inc
push
sub
daa
call
lds
rorl
cmp
pop
xchg
subl
mov
inc
std
movsb
dec
or
stc
shl
pop
cmpsl
jle
push
shll
and
jecxz
mov
or
and
clc
inc
mov
test
mov
mov
insl
insb
cmp
or
jmp
sbb
dec
sbb
scas
int3
pop
scas
mov
xchg
pop
loopne
pop
push
hlt
or
push
mov
je
data16
shr
dec
mov
out
inc
jmp
bnd
es
andb
cmp
movsb
sbb
stc
add
fcoml
stc
adc
sub
pushf
addr16
pusha
and
jo
xchg
jno
call
dec
xchg
sub
jo
hlt
movsb
cmp
sbb
adc
lcall
aad
icebp
cld
cmp
inc
xchg
or
ljmp
insl
icebp
mov
dec
and
adc
add
mov
lods
mov
ja
insb
add
js
les
sti
das
pop
mov
test
sarl
sub
xchg
out
test
rep
add
pushf
and
cltd
and
cmp
and
hlt
sarl
xor
mov
test
xlat
jo
adc
in
rol
push
cli
jns
adc
fdivr
mov
clc
pusha
xchg
sbb
das
das
inc
and
sbb
rol
pusha
pop
fistpll
repz
add
jle
or
out
test
lahf
push
movsl
push
push
sbb
push
outsl
int
add
xchg
jp
fldenv
mov
ret
ja
jno
movsl
out
shll
ret
add
jmp
xchg
loopne
out
lods
dec
andb
scas
push
or
push
arpl
pop
or
hlt
loop
outsb
mov
ljmp
xchg
mov
into
jns
dec
stc
mov
fnstenv
dec
cmp
repnz
cmp
mov
push
jbe
add
mov
xchg
nop
jle
or
into
andl
ljmp
iret
movsl
push
mov
push
jle
adc
movsl
sub
out
cmpsb
in
cmp
out
in
push
mov
xor
rolb
inc
and
xor
xchg
aad
fs
arpl
pop
out
dec
sbb
cwtl
sbb
sarl
push
test
leave
mov
cmp
and
loope
nop
jecxz
out
mov
jecxz
jle
fcomi
daa
jmp
cmp
push
or
nop
adc
pusha
and
pop
arpl
daa
aam
mov
xor
mov
cwtl
daa
and
xor
mov
jns
repnz
cld
xor
data16
adc
mov
popa
int3
es
cmc
mov
shlb
push
insl
cs
sbb
or
inc
push
dec
cmp
and
xor
mov
or
add
dec
mov
xchg
cltd
mov
cmp
sub
adc
je
imul
pop
iret
in
push
outsl
imulb
sbb
movsb
xchg
cmp
rorb
test
mov
jae
or
mov
xor
inc
pop
pop
sti
sbb
push
pop
andl
push
ror
mov
loope
in
nop
mov
stos
adc
cwtl
es
cltd
cltd
mov
movsb
scas
lea
xor
cmp
scas
mov
sub
mov
adc
push
cmp
xor
xchg
loope
popa
xchg
movsl
js
jb
sbbb
sbb
lret
cwtl
aaa
ret
and
fdivrs
xchg
dec
mov
mov
popf
mov
or
jp
cmpsb
orb
aad
adc
fcoms
aad
sbb
mov
push
pushf
sbb
adc
jecxz
lcall
inc
pushf
andl
sbb
xor
flds
int
mov
lock
add
mov
inc
iret
out
out
cmp
push
adc
xchg
pop
stos
jle
shlb
inc
mov
movsb
test
jle
or
cmp
aad
lret
add
jge
cmp
sub
xor
inc
fisttpll
lods
pop
mov
mov
xor
mov
inc
cld
shlb
push
xchg
or
aad
sbb
mov
mov
sbb
dec
in
sbb
pop
cs
fisttpll
sti
pop
fcmovnu
mov
push
mov
in
das
fs
insb
movsl
movsb
cmc
mov
jo
xchg
jecxz
inc
cld
xchg
lods
and
int
xchg
cld
xchg
insl
mov
in
mov
sub
jns
stos
xchg
div
dec
aam
ljmp
xchg
bound
sbb
mov
les
pop
pop
mov
and
mov
stos
inc
xchg
inc
es
lret
xchg
push
push
call
fxch
mov
inc
cmp
push
push
imul
mov
mov
mov
mov
gs
sbbb
push
and
xor
sbb
nop
fisttpl
jecxz
adc
cli
cli
jno
sub
shr
lds
xchg
or
adcl
xor
add
icebp
jecxz
mov
inc
movsb
hlt
push
jp
sbb
or
xor
ss
hlt
loopne
outsb
loopne
leave
in
and
aas
movsb
sub
mov
fstpl
sub
sub
jl
mov
add
adc
sub
mov
arpl
aaa
or
push
mov
sbb
cmp
ds
or
sbb
xor
push
cmp
mov
dec
xchg
jl
fwait
inc
sub
xchg
push
stc
mov
cwtl
adc
mov
mov
mov
cmp
add
xlat
and
lds
dec
pop
daa
mov
out
das
jecxz
js
add
imul
ret
cmp
repz
sbbl
adcb
jno
pop
inc
jno
les
inc
fldt
cmp
and
inc
js
pop
push
inc
movsb
cmp
sbb
and
adc
xchg
add
mov
hlt
add
mov
add
or
sbb
and
or
cmp
shll
xchg
cmp
lods
sbb
or
pop
jne
mov
data16
shr
push
push
scas
mov
clc
xchg
add
stc
test
xchg
pushf
mov
jmp
iret
dec
mov
mov
xchg
xchg
adc
dec
cmp
loopne
imul
push
mov
mov
push
test
lcall
pop
inc
aad
mov
cli
popa
stos
dec
jno
jle
cmp
fnstenv
cmp
aas
jno
sbb
stos
in
cmp
adc
and
pop
cmpsl
add
lahf
adc
mov
shrl
jp
outsb
push
sbb
aaa
loop
dec
inc
orb
lods
dec
fadds
sbb
repnz
cwtl
sub
cmp
repnz
mulb
xor
pop
xchg
adc
add
cmp
repz
call
mov
xchg
or
pop
mov
std
hlt
in
or
xchg
in
mov
cmp
jmp
sarl
push
loopne
jne
enter
xchg
push
adc
xor
xlat
in
add
fcmovu
mov
mov
clc
cmp
mov
pop
sbb
inc
xchg
xor
mov
cmp
fdivrl
in
mov
ficompl
leave
cmp
push
pop
and
lds
jno
xor
pop
jne
arpl
int
aas
jmp
add
ret
push
fcomps
push
mov
imul
lock
cmp
jo
es
out
push
mov
inc
pop
mov
iret
inc
sbbb
dec
xchg
daa
out
and
pop
jb
xchg
cmpl
test
push
xor
jecxz
jnp
aad
push
es
push
popf
and
cmpsb
fcmovnb
adc
insl
das
pop
aas
add
imul
sub
shl
mov
sbb
notl
scas
inc
push
and
pop
fisubrs
jbe
sbb
aaa
repnz
fsts
lds
fimuls
insl
xlat
mov
pop
or
outsl
pushf
loope
std
punpckhdq
cmp
test
push
fs
jecxz
push
outsb
js
push
xchg
into
pop
push
jne
pop
adc
icebp
stc
ficoml
repz
mull
adc
jno
xor
mov
push
mov
sti
pop
pop
mov
mov
cmp
mov
cmove
and
adcb
adc
add
loop
fldl
inc
imul
cmp
ds
mov
test
xlat
fildll
loopne
mov
cwtl
sbb
push
sarl
lahf
sbb
fdivrs
xchg
or
push
inc
bound
and
mov
ljmp
add
push
sbb
cs
dec
test
shrb
incb
xchg
mov
rolb
rorl
push
stc
sbb
lahf
push
mov
or
lods
add
push
mov
mov
sub
imul
pop
and
fadds
and
pop
pushf
pop
imul
pop
push
and
lret
or
mov
cmpsb
mov
mov
ret
mov
in
cmp
mov
popa
pop
sysret
ret
je
jae
pop
mov
ljmp
or
add
push
lahf
cli
lret
movsl
mov
jmp
loope
aas
jnp
xchg
push
addr16
lcall
sub
mov
addr16
fisubrl
dec
je
sbb
in
inc
js
mov
sub
push
cmp
cs
loope
jmp
test
out
leave
fwait
outsl
ja
aaa
aas
xor
xchg
test
pop
dec
fstl
test
insb
loope
or
cwtl
fildll
cmp
sbb
lods
mov
aas
ret
insl
jl
sahf
dec
pusha
mov
dec
and
adc
sbb
pop
sbb
or
shrb
stos
subl
fs
jo
scas
xchg
push
adc
out
mov
mov
into
sbb
hlt
adcl
cltd
call
mov
cmp
ror
push
xchg
xor
adc
pop
xor
add
in
jp
cmpsl
push
mov
shl
push
in
adcb
out
xchg
mov
add
push
pand
pop
repz
cmp
xchg
mov
or
std
pusha
test
loope
shrl
movsl
test
cld
adc
push
adc
adc
push
rep
or
fsubrl
xor
scas
sub
or
mov
mov
in
mov
gs
mov
pop
jg
push
sub
mov
mov
sarl
adc
mov
jp
xor
sub
repz
mov
and
outsb
inc
rcr
push
fs
mov
xchg
mov
ds
int3
pop
call
je
adc
pusha
jl
in
adc
or
movsl
pop
mov
pop
inc
fsubrp
ja
xorb
sub
adc
jno
scas
mov
or
xchg
repz
mov
pushf
orb
call
pop
movsb
dec
stos
lea
mov
xchg
loop
push
add
pop
fcmovu
cmp
aaa
push
push
mov
notl
shlb
push
outsl
mov
xor
sbb
add
sub
mov
push
mov
rcll
mov
inc
push
xor
jbe
dec
lods
jg
rcrb
out
mov
push
lahf
jp
push
imul
ret
popa
push
xor
int
outsb
sbb
in
in
pushl
or
sarl
into
xorl
loope
dec
ficompl
cmpsb
je
insl
adc
in
stos
imul
sti
aam
shrb
inc
cmp
enter
les
push
scas
mov
neg
sbb
pop
insl
pusha
ja
cmp
imul
lcall
ret
mov
mov
test
mov
ljmp
inc
pop
push
shl
je
fisubl
insl
leave
push
xchg
xlat
mov
cs
jecxz
lret
pushf
push
out
scas
movsl
xchg
hlt
jl
pop
lcall
mov
fsubr
lret
lods
adc
fcom
pop
leave
pop
cmp
loope
xor
jb
test
ret
add
shll
dec
in
mov
sahf
outsl
bound
jno
adc
lock
ret
inc
insb
jno
push
ret
out
cmp
sarb
adc
xchg
or
mov
sti
outsb
pop
mov
iret
lret
sbb
outsl
jmp
movl
test
popa
sub
inc
push
mov
mov
jl
inc
mov
push
stos
imul
sbb
loope
and
mov
sub
sub
inc
sti
sahf
movsl
out
lea
fisttpl
iret
loope
dec
cli
add
jb
cltd
sub
sbb
sub
inc
jns
jmp
cmp
sbb
pop
and
out
enter
cltd
jp
push
mov
jb
je
dec
jg
pop
sbb
jl
push
push
cmp
jp
sub
repnz
mov
push
xor
pop
sbb
xchg
pop
and
sbb
inc
push
pop
xchg
in
pop
add
es
out
jmp
push
call
add
pop
outsb
data16
xlat
gs
fistl
lret
mov
push
xchg
in
clts
xchg
mov
insb
mov
pop
pop
and
jg
dec
je
jle
test
jp
in
mov
inc
data16
jge
mov
roll
aas
test
jne
mov
xchg
adc
sub
xchg
xor
test
fnsave
aam
or
lea
jnp
aaa
scas
xchg
aas
jmp
mov
enter
pop
jae
push
pop
push
loop
lock
add
and
aaa
mov
add
out
cs
scas
pop
or
dec
negl
pusha
mov
jge
ds
ljmp
dec
sahf
mov
out
imul
xchg
je
dec
mov
fdivr
push
mov
jp
jno
andb
cld
add
mov
xchg
dec
lds
sub
out
pop
cmp
mov
into
add
popf
call
dec
mov
loop
cld
test
int3
cmp
into
mov
pop
sub
daa
arpl
mov
mov
and
cs
jo
add
sbbl
gs
pop
lret
xchg
jne
sbb
sub
adc
jne
dec
mov
test
xchg
shlb
aaa
in
ret
call
test
cmc
sbb
mov
dec
mov
clc
fidivrs
shlb
movsl
and
push
xchg
and
into
repz
test
push
and
cmp
imul
gs
lahf
pop
adc
xor
jo
out
or
or
fwait
mov
std
icebp
xchg
scas
xchg
stc
sub
push
cmp
shll
fdivr
push
sub
inc
pop
add
popa
jne
loopne
dec
test
push
jo
popf
fwait
mov
mov
pop
fildl
pop
pop
mov
mov
int3
cmp
pushf
ss
lock
jp
lds
leave
cmp
rcrb
lods
mov
popa
xor
xchg
stc
fwait
movsl
fs
jmp
cltd
mov
or
xor
dec
pop
xchg
sub
call
insl
incl
lods
add
mov
les
mov
pop
enter
stos
iret
push
jg
or
call
das
in
and
sub
adcb
inc
push
jp
ret
push
in
ja
nop
lret
es
imul
orb
xlat
sti
adc
mov
and
pop
mov
lock
lods
add
xor
les
lret
sbb
push
lock
aad
xchg
mov
jp
insl
jmp
mov
insl
mov
imul
adc
push
les
jle
in
fsubs
cs
iret
rcl
xor
inc
jae
movswl
push
mov
cwtl
push
jbe
xlat
xor
data16
es
cwtl
mov
xor
inc
xchg
jne
mov
sbb
arpl
lods
ljmp
fisubrs
mov
adc
aaa
adcb
pop
mov
clc
add
sub
jae
pop
movsb
cmpsb
cmp
and
sbb
mov
xor
divb
inc
mov
or
std
mov
hlt
in
dec
sub
daa
xor
das
bound
in
lcall
dec
dec
sub
testb
mov
subb
in
push
xchg
cwtl
lods
push
imul
lcall
fildl
mov
movsl
out
movsb
pop
mov
and
scas
fiadds
in
insl
mov
int3
aad
push
adc
nop
jo
cmp
and
xor
or
rcrl
mov
mov
fwait
test
or
jbe
ja
ror
add
lock
pop
rcrl
cmp
in
andl
sti
clc
and
sub
add
std
and
addr16
and
push
dec
adc
xor
sub
dec
in
push
mov
lret
adc
xchg
mov
push
mov
ja
cltd
movl
in
xor
stos
test
das
add
rclb
mov
out
or
or
jb
jl
pop
in
mov
cli
icebp
push
mov
aad
dec
dec
jmp
push
shrl
cmpsl
push
shl
lret
mov
pop
add
cmp
cmp
pop
in
cltd
pop
and
imul
pushf
fs
xchg
sbb
or
scas
mov
mov
mov
adc
fxch
mov
sbb
lods
pop
fisttpll
cld
hlt
inc
addr16
pusha
arpl
inc
out
shrl
loopne
mov
xchg
js
sbb
sbb
pop
addb
add
cmp
push
mov
ret
lret
or
imul
pusha
jmp
adc
xor
add
xchg
in
arpl
cmp
shrl
cmp
adc
push
fs
jnp
add
and
sub
mov
xchg
mov
cltd
cmp
push
push
scas
push
testl
mov
decl
mov
adc
jnp
mov
bound
mov
ja
gs
inc
cs
repz
popf
mov
lods
call
or
xchg
dec
das
orb
pop
push
ret
jg
cli
mov
ljmp
add
add
ret
rolb
repnz
xchg
xor
mov
insl
jbe
pop
stos
mov
lcall
lds
lds
jne
adc
fcoms
add
hlt
mov
adc
pop
loop
mov
adc
ds
data16
in
loop
nop
lea
test
mov
cmp
in
dec
test
xchg
mov
adc
and
lds
adc
fucomi
jecxz
popf
mov
lock
cmpsb
fstp
push
mov
daa
inc
insb
xor
fimuls
outsl
adcl
test
cmp
rcr
xor
into
dec
push
inc
outsb
ljmp
mov
xchg
dec
cli
hlt
mov
mov
sarb
cmp
dec
xchg
aam
xlat
adc
sti
lods
imull
bound
out
mov
inc
cld
xchg
jecxz
icebp
inc
mov
ljmp
bound
scas
cld
xlat
push
inc
xor
adc
lds
fdivrl
fnstsw
add
cli
and
sub
fnsave
addb
popa
xor
fbld
lock
int
imul
inc
icebp
aas
ljmp
ja
das
mov
jmp
push
inc
loope
xchg
cmc
push
jp
stos
mov
shll
dec
add
pop
pusha
stc
push
push
sbbl
push
cmp
adc
movl
out
loope
dec
jecxz
repz
dec
xor
popf
arpl
in
jl
aas
pop
pusha
cmpsl
das
cmp
adc
fistl
sub
xchg
mov
fwait
cmpsb
adc
nop
cmp
mov
sbb
notl
data16
fdiv
jb
imul
lods
pop
pop
jmp
jns
sbb
imul
call
sbb
fimull
mov
fs
or
mov
push
mov
mov
pop
jecxz
mov
or
popw
push
nop
jns
out
lahf
loop
pop
lea
sub
dec
cmp
leave
sub
inc
pop
push
loopne
adc
adc
and
or
aas
mov
mov
push
adc
inc
insl
scas
out
cli
dec
inc
loope
fdivs
pop
xchg
dec
test
fwait
push
push
arpl
mov
stos
into
sbb
dec
xchg
shll
sahf
sub
nop
insl
xlat
dec
or
or
push
sub
ret
dec
add
mulb
xor
mov
test
pushf
mov
mov
fnsave
inc
mov
pushf
mov
cld
popa
add
outsb
pushf
or
cmp
rorl
pop
push
aad
hlt
push
inc
xor
je
jge
cmpsl
lods
mov
nop
jecxz
or
mov
xor
clc
or
js
sub
mov
mov
xchg
xlat
pop
out
sti
cmpsb
sbbl
imul
pop
addr16
and
repz
in
rcll
dec
fstpl
stos
mov
out
sbb
pop
xchg
and
iret
xor
je
cmc
in
into
ja
mov
movsb
sbb
test
push
push
push
in
jb
inc
test
int
jecxz
int
aam
add
jbe
add
sub
jo
pushf
mov
mov
ss
jle
stos
fwait
push
aam
fisttpl
or
inc
push
mov
data16
cli
fisubl
cmc
bound
mov
pop
cs
and
lds
push
clc
insb
mov
icebp
adc
or
xor
xor
jnp
pop
lret
pop
lret
sahf
sbb
xor
shrb
lret
faddp
jns
scas
int
xchg
adc
jno
inc
or
outsl
cli
aaa
inc
scas
stc
inc
fabs
leave
pop
outsl
or
add
and
stos
lods
scas
xor
add
clc
fldl2t
in
sbbl
cmpsb
das
movsb
enter
push
pop
jmp
jle
lcall
cli
add
and
test
jg
ds
icebp
in
mov
in
sub
push
adc
adc
fcomp
sub
inc
mov
adc
out
dec
adc
mov
daa
add
fdivrl
insl
in
addr16
shll
mov
adc
aas
adc
xlat
mov
mov
icebp
lods
add
jg
out
mov
jge
lock
mov
push
in
mov
pushw
ja
sbb
add
or
rcll
xorb
imul
outsb
jle
jmp
ja
leave
popf
and
sub
and
mov
adc
pop
fistps
push
mov
push
adc
push
fs
and
push
xorl
lds
sbb
in
gs
mov
icebp
pop
in
mov
push
cwtl
and
mov
xchg
aad
fisubs
jl
cmp
outsl
mov
lret
xor
jo
xchg
stc
sbb
xchg
cmc
sbb
cmp
ja
push
push
enter
das
mov
outsl
std
stos
rcrl
test
jl
xchg
pop
pop
pusha
mov
inc
lods
pop
mov
int3
es
mov
enter
xor
popa
test
loopne
test
jno
into
out
das
xor
pop
inc
je
xor
dec
mov
pop
stos
cmp
cmc
addb
out
imul
inc
cmp
adc
inc
iret
jp
pusha
jmp
cmp
mov
mov
imul
add
sub
xchg
add
daa
test
lcall
add
icebp
or
dec
nop
inc
out
lods
pushf
pop
xchg
inc
pop
cmp
sub
movsl
les
xor
and
movsl
pop
sahf
aam
fs
cmpsb
insl
sbb
dec
xor
jge
push
pushf
iret
ljmp
in
bnd
jl
rcrb
jb
mov
cli
fcmovb
inc
stos
in
pop
sarl
pop
ret
es
fsubrs
dec
xor
test
negb
fistpl
sub
sti
jp
test
xchg
and
movsb
cmp
and
pusha
and
pop
loopne
lock
addr16
out
dec
push
xor
adc
insb
loopne
scas
xchg
push
popf
aaa
pushf
adc
sbb
lcall
push
adc
loope
mov
jge
pop
mov
or
mov
int
js
mov
loop
aaa
push
dec
sar
test
sub
xchg
dec
xchg
mov
movsl
fiaddl
cmpsb
adc
dec
cmp
outsl
push
fistpl
mov
ja
js
lods
inc
sbb
int
arpl
rcll
sub
dec
aaa
cmp
or
add
rcl
sbb
pop
push
sub
lcall
ret
sub
push
std
les
cmpsl
mov
and
push
fstps
test
pop
in
xchg
inc
or
mov
add
cmc
popf
fildll
xchg
arpl
adc
pushf
xchg
ds
aad
fisttps
add
outsl
arpl
pop
in
lret
aad
test
mov
shrl
mov
aam
xchg
sub
dec
lds
or
jg
adc
test
aad
adc
dec
sub
pop
push
mov
jne
in
and
push
lods
addr16
inc
in
in
addr16
fs
jb
inc
xchg
pop
daa
push
lock
dec
idivb
jp
push
flds
mov
pusha
mov
dec
jmp
mov
sti
xor
out
pop
imul
mov
cli
sub
lahf
pop
int
lret
sbb
mov
jp
lods
dec
xchg
xchg
add
gs
outsb
test
dec
dec
ret
std
sbb
test
rorb
xor
insl
push
add
int3
mov
test
cwtl
test
inc
pop
fstl
dec
and
push
sbb
mov
cmp
int3
mov
daa
sub
sub
pushf
ds
mov
outsb
push
and
cmp
dec
and
xor
out
flds
bound
lahf
lcall
jno
popa
divl
adc
adc
dec
cmpsb
jmp
stos
fadds
jo
add
out
shl
jb
mov
fdivs
ret
insl
ja
lods
out
sbb
jae
mov
mov
mov
inc
jp
adcb
movsb
outsl
stos
js
dec
mov
mov
jae
dec
or
insb
inc
dec
push
mov
mov
inc
xchg
xchg
xchg
cmp
add
sub
xor
push
sub
jbe
scas
mov
push
icebp
jge
lret
je
sti
mov
in
add
lock
pop
out
mov
lods
into
movsb
daa
dec
sub
pop
ffree
or
rclb
adc
add
mov
cmc
sbb
stos
stos
pusha
cltd
in
aaa
clc
mov
loope
mov
add
dec
add
sbbb
movsl
int3
jb,pn
outsb
idivl
cwtl
mov
mov
js
or
pop
sub
inc
push
and
aaa
jl
in
add
je
hlt
in
lock
push
jo
addb
sbb
jmp
jmp
inc
inc
call
popa
xchg
fsubl
jecxz
sbb
mov
fs
stc
mov
or
mov
sub
mov
in
xor
sub
jge
dec
sbb
movsb
sub
mov
and
or
addr16
xchg
cmpl
xor
inc
and
popa
mov
adc
xchg
idivb
xchg
sbb
pop
call
push
mov
test
addl
jbe
aad
sub
push
fstpl
cld
orl
mov
cmp
cli
jl
lods
and
mov
scas
jle
notl
lcall
fcmovnbe
xor
hlt
xchg
stos
data16
adc
lea
hlt
test
and
repnz
xchg
jne
popf
and
call
cli
in
xchg
pushl
cmpsl
scas
ss
xchg
add
jnp
fisubrs
fistpll
mov
enter
lods
ja
add
or
subb
inc
sahf
hlt
push
out
fildll
dec
loope
mov
test
rclb
xchg
cmp
stos
xchg
mov
xchg
lahf
jge
xor
push
ror
sbb
fisubl
rclb
testl
push
mov
sbbl
jle
mov
jbe
sub
mov
add
push
mov
aad
sub
clc
pop
insl
dec
push
and
rep
ss
movsl
or
mov
ss
cmpsb
xchg
sub
jge
sbb
push
nop
std
aam
stos
daa
xor
inc
es
mov
push
mull
push
pop
or
dec
or
inc
arpl
mov
jae
fldl
mov
push
movsb
outsb
jnp
pop
in
lods
sub
rolb
stc
jnp
add
push
add
popa
test
lcall
add
incl
dec
test
xlat
xor
push
popa
dec
bound
popa
sbb
push
pop
inc
mov
and
lods
jmp
lods
and
das
jae
inc
mov
hlt
jmp
cmp
lods
inc
jl
xchg
fisubl
cli
aas
push
adc
pop
xchg
dec
sub
pop
imul
xor
ja
inc
scas
xchg
shl
adc
ljmp
mov
pop
sub
ljmp
mov
pop
sbb
pop
in
jnp
xor
xor
out
cld
rclb
das
inc
mov
adc
lods
enter
mov
test
orb
faddl
inc
and
or
int3
add
mov
or
push
inc
repnz
add
mov
add
mov
adc
push
mov
cmpsl
mov
out
jnp
ret
imul
shll
adc
mov
lret
jne
into
and
cmp
pop
lahf
adc
add
rolb
xchg
xchg
mov
inc
push
scas
and
mull
mov
call
lods
fcoms
push
and
imul
mov
shl
out
test
mov
mov
sbb
sbb
test
add
ficoml
sahf
ss
scas
adc
stc
ficoml
pop
imul
cmp
sub
pushf
push
into
rorl
imul
das
cld
dec
sahf
xor
fstps
mov
sbb
es
inc
xchg
stc
ret
imul
clc
cli
lods
cmp
mul
js
fbld
pusha
mov
inc
loopne
xor
cmc
clc
arpl
xor
scas
lret
gs
jns
xor
pusha
push
imul
addl
or
ret
xor
int3
pop
or
sub
sbb
pop
adc
lret
gs
loop
sahf
xchg
popa
add
int
pop
scas
mov
dec
mov
sub
test
das
lods
push
push
call
dec
movsb
push
add
jmp
fimull
sbb
and
cmp
and
and
aas
icebp
mov
or
test
push
push
jb
pop
inc
sub
call
mov
imul
mov
and
sub
mov
fstpl
pop
mov
jnp
mov
mov
cmp
push
pop
testl
bound
hlt
inc
sub
cmp
dec
into
test
std
imul
js
cmpsb
jne
xchg
add
mov
pop
lret
pop
adc
pushf
bound
or
shll
addr16
jnp
sarl
loopne
mov
inc
push
cmp
aad
les
adc
out
and
lods
imul
or
cmp
adc
xorb
jno
mov
and
jge
das
pop
js
pop
mov
add
ja
xchg
add
inc
dec
inc
push
mull
aas
ds
adc
mov
ja
and
lret
and
jb
sbb
dec
jo
mov
repnz
push
mov
iret
sbb
cmp
mov
mov
gs
or
mov
push
push
fidivrs
shll
ljmp
cmp
mov
sbb
jae
sub
mov
jle
push
jp
pop
sbb
nop
jns
gs
push
dec
pop
jns
jg
pop
scas
movsl
hlt
mov
pop
jo
jb
push
mov
es
addr16
xor
inc
push
mov
push
push
mov
push
in
ret
adc
in
stc
subl
call
cltd
cmp
mov
rolb
int3
cmp
xchg
jb
or
cmp
lods
jg
outsl
je
test
jno
and
xor
shrb
test
jmp
aas
sbb
push
addr16
dec
icebp
adc
es
sub
in
jnp
insb
adc
mov
mov
jl,pn
adc
pop
or
jae
int3
sahf
btrl
mov
mov
ljmp
xlat
and
stc
cmpsl
dec
iret
inc
xor
cmp
cmpl
jbe
jns
jnp
cmp
or
mov
add
in
mov
xor
fistpl
inc
dec
inc
je
shl
das
dec
push
mov
dec
mov
lcall
test
sbb
pushf
xor
jbe
inc
loope
mov
mov
mov
pop
push
adcb
and
cltd
sbb
test
lcall
pop
push
lds
ret
je
lods
dec
adc
pop
cmp
and
out
and
push
xchg
lock
fs
ja
inc
pop
adc
icebp
outsl
mov
push
out
jge
push
mov
hlt
or
mov
loop
add
inc
pop
roll
add
lcall
xchg
push
sub
in
sarl
movlps
das
inc
dec
xor
and
leave
fists
dec
or
mov
in
pop
stos
dec
call
mulb
popf
jg
xor
push
lock
dec
mov
and
mov
imul
push
jno
xchg
push
call
out
adcb
mov
cmp
imul
incb
mov
push
fldenv
push
lcall
nop
fistl
out
arpl
or
enter
adcb
fistpll
xor
or
nop
aas
in
mov
push
xchg
mov
pop
or
sub
mov
add
fcoms
mov
scas
jne
ds
inc
or
xchg
aam
ljmp
xchg
je
mov
mov
or
mov
out
jl,pn
pop
mov
loop
das
cmp
fnstsw
push
stc
movsl
test
push
push
outsl
xchg
sbb
fdivrs
dec
mov
loopne
notb
popf
mov
or
sub
pop
dec
clc
imul
add
loop
and
lods
test
mov
andl
mov
or
inc
outsb
lea
adc
add
lret
shrb
mov
shlb
leave
les
jns
ud1
or
add
mov
push
fsubp
out
dec
mov
jmp
mov
cmpsl
subb
int
or
out
sub
sbb
add
das
and
xchg
pop
lret
es
xor
test
fidivl
mov
shrl
push
inc
adc
fcmovne
cld
sbb
pop
das
adc
lods
mov
jne
push
clc
mov
leave
popa
push
or
push
xchg
repnz
pop
pop
jecxz
jne
push
jge
stos
aaa
mov
jnp
inc
sbb
test
pop
fidivs
repnz
enter
cmc
popa
xchg
shl
cmp
addr16
out
mov
and
sbb
push
pop
test
mov
les
xlat
adc
sub
mov
jns
addr16
loope
dec
int
iret
subb
pop
pop
push
mov
push
mov
adc
xor
or
clc
mov
popf
ds
call
xor
push
cmp
jp
testb
cmpsl
jns
jg
repz
mov
sub
dec
mov
cltd
inc
icebp
in
jmp
xchg
add
es
push
dec
jecxz
dec
add
cltd
jb
test
pusha
stc
cmpsl
jae
icebp
out
sahf
xchg
add
push
sub
in
dec
xor
call
stc
mov
push
jae
sbb
and
sub
test
adc
sbb
lahf
push
clc
ror
jno
movsb
sbb
shll
enter
mov
push
push
jle
push
pop
lcall
mov
dec
fisubl
xchg
xchg
xchg
repnz
sub
aad
out
sub
testb
lret
icebp
notb
jae
push
popa
mov
stos
pop
mov
lds
lods
pop
imul
fbstp
cld
ret
inc
sbb
lds
pop
inc
call
lods
sbb
push
addr16
fisubrs
adc
aam
mov
inc
mov
jae
push
xor
dec
pop
jmp
repz
mov
std
xchg
xchg
push
out
inc
fiadds
loopne
loop
inc
repnz
stos
les
inc
cmp
mov
ds
inc
and
pop
stos
xchg
xchg
popa
mov
rorb
insl
cmp
and
mov
mov
fildl
xchg
pop
push
jmp
jno
xchg
in
cmp
out
sbb
and
adc
test
test
jae
dec
dec
sub
xchg
fcompp
inc
cltd
jg
xor
jnp
movsl
mov
sbbl
dec
push
fcomps
xchg
mov
pop
or
mov
jmp
lock
loopne
fidivrl
popa
addr16
pop
sub
lahf
and
adc
icebp
loope
jle
xor
or
xor
lcall
icebp
push
push
pop
mov
cmp
mov
add
pop
rcl
dec
cmpsb
mov
rol
repnz
and
dec
stos
andb
dec
cmp
or
cmpsl
fucomp
and
out
clc
ljmp
shl
call
and
loop
ret
push
lods
mov
sub
jbe
cld
test
subl
push
push
sub
lock
mov
sbb
aad
sbb
sub
sub
add
push
ss
adc
ret
pop
adc
std
das
out
clc
mov
inc
into
pop
stos
fbstp
sub
rol
pusha
hlt
mov
xor
or
mov
sub
xor
lods
mov
sub
outsl
mov
cld
stos
sbb
lret
call
pusha
insl
mov
mov
mov
adc
enter
and
inc
movsl
mov
xlat
push
xor
jns
dec
and
push
or
mov
dec
hlt
in
inc
sub
insl
lret
out
push
out
bound
sti
xor
int3
out
in
adc
test
xchg
dec
inc
mov
cld
jb
jmp
daa
sbb
bound
jge
xchg
mov
mov
scas
cltd
xor
enter
fcomps
sbb
mov
scas
out
sub
stos
pop
mov
cmpsb
inc
icebp
movsb
adc
test
pop
mov
int3
and
and
mov
pop
jno
xor
fsubrs
imul
push
in
mov
mov
push
dec
xor
sbb
ret
div
mov
arpl
and
adc
lahf
cmpsl
pusha
pop
inc
aad
sbb
stos
xchg
or
jnp
adc
sbb
sub
xchg
fstpt
aam
stc
stos
arpl
dec
es
add
aam
jno
jge
mov
sar
out
subl
decl
push
or
fistl
jle
sub
incb
int3
mov
movsl
sub
mov
loope
fidivrs
mov
mov
insb
dec
in
xchg
add
jb
mov
push
inc
fisubl
xchg
pop
dec
xchg
xor
pop
mov
xlat
dec
push
js
sbb
pop
fistpll
ret
popa
sub
outsb
out
fisubrl
mov
das
pushf
out
mov
out
push
jnp
in
sub
jmp
pop
test
hlt
fs
loop
mov
fdivs
push
push
mov
cwtl
loope
jno
or
lahf
mov
cmp
pop
stos
mov
imul
adc
sub
sbb
jo
movsl
shrb
cmp
inc
jecxz
aaa
pop
dec
incl
jo
jbe
ja
pop
scas
pushf
fs
and
xor
fldl
fcomps
push
sub
out
mov
imul
sbb
pop
hlt
int3
andl
cltd
mov
lds
outsl
outsl
or
movsl
out
lret
sub
xchg
xor
xchg
cwtl
sti
cli
jmp
orb
inc
repz
jl
jp
xchg
sub
jae
push
add
test
mov
cmpsb
jno
xor
rcr
push
mov
and
lea
ss
call
jbe
pop
cmp
pop
dec
jle
addr16
mov
xadd
inc
fcomps
mov
push
mov
or
aaa
xchg
jp
test
dec
xorl
insl
mov
or
int3
cmp
jo
data16
in
cld
loope
ret
pop
push
and
bound
std
push
sbb
lods
dec
jb
cmp
rcrl
fucom
mov
xor
adc
mov
test
mov
mov
dec
subb
mov
xor
data16
in
into
outsb
lret
mov
shr
cmp
cld
dec
gs
cmp
in
cmp
xlat
in
cs
cmp
jle
call
incb
dec
test
lret
jae
jnp
cs
and
and
adc
je
adcb
sbb
cmp
dec
sbb
xchg
pop
movl
dec
xchg
lret
pop
and
pop
lcall
jle
cmp
jns
sub
and
sub
repnz
push
daa
fsubrl
lock
ds
mov
xor
or
or
shlb
in
imul
inc
or
and
inc
fabs
mov
aad
sbb
movsb
cs
loop
cmc
xchg
add
xor
cltd
int
test
dec
orl
mov
cwtl
pop
mov
adc
xor
inc
jae
cli
into
insb
and
jmp
mov
xchg
sbb
add
xor
cli
dec
out
fistps
adc
mov
jne
scas
lahf
into
mov
mov
cs
adc
mov
push
rep
pusha
and
mov
xor
stos
mov
lods
jge
jb
cwtl
or
outsb
add
ss
rcr
push
sar
pop
xor
mov
xchg
gs
dec
dec
cmp
xchg
pop
out
cmpsb
in
push
or
ss
leave
sub
loop
mov
mov
icebp
mov
adc
jmp
lahf
test
pusha
adcl
andb
xchg
lods
xchg
cmpsl
add
xor
scas
pop
mov
pop
sbb
popa
adc
sti
movsl
pop
ret
fsubl
mov
insb
pusha
dec
dec
stc
inc
out
inc
dec
call
mov
jge
adc
jno
xor
insl
jmp
lods
pop
xorb
scas
pop
xor
int
add
jno
arpl
lds
popf
fwait
xchg
ss
mov
adc
xor
xchg
ror
aad
mov
and
imul
shrl
rorl
pushl
jo
out
mov
xor
ret
or
loope
push
lods
daa
clc
add
es
cli
ds
clc
inc
push
sar
sbb
sbbl
adc
inc
mov
stos
xor
in
add
add
push
xchg
jle
xor
lea
loop
ljmp
pop
mov
add
xchg
jecxz
mulb
insl
mov
stc
sarb
mov
add
push
push
lods
mov
push
and
insb
mov
pushf
push
fs
pop
push
stc
mov
ret
mov
test
test
aaa
ret
mov
aaa
dec
outsb
xchg
or
je
push
iret
pusha
adc
pop
outsl
movsb
cmp
cltd
xor
nop
mov
xchg
push
push
sbb
xor
out
ficomps
in
xor
sar
gs
movsl
outsl
shll
pop
fdivrl
ss
stos
adcl
push
sbb
mov
out
nop
mov
sti
fidivrs
jo
movsb
push
aas
cltd
pop
ljmp
xor
mov
add
sbb
pop
xchg
arpl
dec
pop
mov
int
inc
inc
pop
jp
lods
push
and
and
push
xor
lahf
or
cs
out
or
outsl
mov
pop
inc
and
out
push
push
sbb
ret
mov
aam
cmp
sbbl
xchg
mov
dec
jmp
mov
mov
movsb
xchg
repz
inc
jne
jae
mov
inc
out
hlt
mov
add
jno
cltd
stos
cmp
clc
test
xor
iret
dec
hlt
dec
imull
lcall
test
mov
insl
xor
das
aaa
movsb
loopne
outsl
iret
add
clc
rcrb
xor
or
inc
pop
xchg
xchg
cmp
sbb
notb
imul
adc
clc
pop
cmpsb
inc
and
pop
jecxz
aad
xor
cmp
call
imul
pop
add
cmp
sub
mov
iret
aam
mov
dec
push
xchg
movsb
adc
cld
mov
push
sbb
nop
mov
xchg
pop
insl
pop
mov
and
pop
subb
push
int3
jmp
dec
rcrl
sbb
cmp
dec
mov
add
notb
mov
cmpsl
imul
add
sbb
repnz
fnstenv
fnstenv
popf
sbb
je
in
push
mov
sub
decl
push
or
iret
imul
and
pop
pop
push
fadd
adc
popf
mov
cltd
ljmp
aad
scas
jmp
incl
sub
cmc
daa
pop
cmc
cwtl
sbb
out
push
aad
in
pop
jmp
pop
loope
insb
fcompl
js
aad
daa
cmp
scas
and
push
dec
adc
movsb
in
cmp
in
repz
sub
scas
int3
in
rclb
clc
xchg
sbb
mov
int
pushf
jb
jg
out
cs
xor
or
lcall
dec
lock
cmp
ret
jne
pop
in
icebp
enter
xor
inc
cmpl
cmp
sti
inc
cmp
lcall
jae
cmp
cmp
sub
cmp
add
fnstsw
mov
mov
scas
jno
sbb
pusha
push
ret
jmp
mov
mov
and
sbb
scas
xchg
ficomps
and
cs
popf
or
aad
decb
pusha
dec
aas
nop
and
hlt
into
jne
mov
sub
in
mov
adc
sti
jno
xchg
fiaddl
sbbl
scas
mov
mov
sbb
scas
mov
inc
dec
xor
xchg
loopne
xor
inc
cmp
int
push
cmp
bound
ja
mov
fcomps
fildl
xchg
add
mov
rcr
test
pop
orb
mov
das
data16
mov
int3
or
fwait
loop
mov
pop
cmp
rcrl
add
jo
mov
pop
aas
xchg
pop
clc
mov
mov
dec
pushl
in
test
mov
and
dec
movb
imul
insl
call
iret
push
iret
insl
jmp
mov
in
mov
lea
jb
push
cli
xchg
test
jecxz
adc
andl
xchg
popa
jmp
dec
push
insb
mov
inc
xor
xchg
cmc
pop
fcmovnbe
or
push
mov
gs
lods
mov
xchg
ret
aad
es
dec
jo
outsb
push
inc
pop
or
enter
mov
into
inc
imul
push
sub
mov
adc
jne
ja
fcmovbe
inc
in
inc
aad
fistpl
inc
jne
mov
xchg
xchg
or
lods
pop
mov
mov
lahf
jae
pop
dec
iret
rcrb
les
call
popf
dec
shl
outsb
and
lods
mov
sbb
iret
xor
icebp
outsb
xor
cmc
daa
int3
mov
sahf
cmp
jno
push
test
addl
shlb
adc
add
jge
mov
fwait
pop
sub
das
lea
mov
adc
jbe
jo
fistpll
add
lcall
fiadds
cmpsb
add
cli
lds
clc
or
pop
xchg
mov
mov
out
shlb
in
jns
test
f2xm1
lock
test
dec
xchg
sub
xchg
int3
mov
pslld
ret
std
jle
pop
mov
and
in
imul
int
dec
cmp
sub
jmp
lea
sub
lcall
mov
adc
insb
lret
iret
fs
lods
add
cwtl
sbb
dec
or
push
adc
pusha
mov
rcl
dec
mov
iret
inc
insb
test
test
cmpsb
shll
push
out
or
lods
sbb
mov
mov
lods
fisubl
gs
xlat
xor
mov
pmaddwd
outsb
and
pop
into
insl
bound
out
cmp
push
sub
dec
push
clc
into
and
insl
add
push
bt
dec
fisubrs
sti
fcmovnbe
in
test
jne
push
jnp
pop
adc
cmp
in
sub
push
sub
je
andl
jecxz
stc
xor
xchg
jb
ds
and
and
call
dec
inc
rolb
in
daa
imul
lcall
cmpsb
in
xor
leave
or
cwtl
xchg
and
adc
or
mov
int3
or
or
mov
fwait
cmp
mov
dec
adc
push
popl
jae
inc
jo
icebp
mov
xor
jecxz
leave
mov
and
mov
out
clc
sbb
mov
shll
pop
js
pop
sub
jae
mov
stos
popf
add
jp
cltd
push
sub
dec
imul
sbb
jg
clc
xor
mov
cltd
mov
ljmp
xchg
addl
sbb
sub
test
outsb
shll
cmp
aas
test
mov
mov
xchg
mov
test
mov
call
lret
sbb
shl
ljmp
sahf
test
sbb
js
shll
pop
idiv
jae
cmp
mov
sub
movb
xchg
dec
fisttpl
mov
pop
and
xor
mov
ret
sbb
xor
mov
mov
and
or
cmp
jmp
icebp
js
mov
pop
sbb
jno
add
scas
adc
daa
shlb
shrl
dec
rol
incb
dec
mov
roll
rcrb
pop
mov
pop
scas
jne
rorl
cmp
shrl
cmp
mov
or
sahf
jno
das
fs
push
out
pop
cs
dec
jecxz
pop
and
jb
shlb
vpsubusb
aas
lret
scas
push
jb
stc
in
jg
cltd
shl
cmp
test
dec
lcall
out
lea
add
gs
sbb
lret
xchg
faddl
sbb
mov
nop
je
xor
mov
jns
aam
aaa
outsb
or
lret
jg
enter
inc
pusha
pushl
and
das
fistpl
sub
push
cmpsl
js
sub
mov
sbb
pop
lds
add
inc
ljmp
adcb
aad
jae
outsw
notl
sbb
lcall
in
rep
in
sub
mov
mov
mov
dec
test
xor
jmp
and
add
lea
push
mov
mov
mov
dec
lods
fmuls
call
lahf
in
stos
js
in
inc
add
pop
mov
pop
inc
add
add
imul
mov
test
jno
fucomp
rorl
icebp
idivb
adc
dec
xor
pop
inc
repnz
xchg
jns
mov
mov
cs
sbb
mov
and
movsb
sbb
insb
andb
mov
xor
out
hlt
lods
addr16
in
int3
je
imul
jne
add
loope
cld
out
bnd
aad
jae
mov
push
imul
mov
cmpsb
std
sbb
aaa
pop
xchg
fimuls
push
push
mov
sbb
xor
cli
adc
cli
adc
jo
xor
idivb
inc
pop
mov
inc
mov
fldl
loope
jb
call
leave
push
rclb
mov
ret
mov
add
or
lcall
mov
aam
jmp
inc
and
icebp
das
cmpsl
data16
push
dec
fstpt
push
or
nop
arpl
icebp
aas
mov
jge
add
ljmp
jb
aad
or
push
pop
jecxz
adc
xor
das
orl
mov
mov
test
shll
call
and
jp
fptan
in
lods
ret
in
adc
mov
xor
dec
jecxz
inc
sbb
inc
jne
jl
pop
push
decl
cmp
es
and
cmp
adc
xor
dec
mov
and
cltd
pop
or
xchg
add
adc
push
cmp
push
lods
popa
fidivrl
call
sarb
push
sub
cmpb
cmp
orb
cmp
or
xorb
mov
data16
mov
out
push
jae
push
leave
add
or
fs
xor
xor
test
sbb
sbb
decb
mov
jge
push
cmp
fs
aam
das
out
cmp
je
inc
lahf
xor
mov
sbb
dec
fstpl
and
daa
adc
xor
and
int3
or
push
mov
mov
dec
add
pop
cmpsb
subb
mov
mov
lahf
shll
xchg
xchg
pushf
cmpsl
add
int
jge
jge
sbb
fdivs
cmp
xchg
subb
jne
jp
scas
cbtw
cltd
aaa
movsb
les
out
push
out
mov
cmpsl
pop
cmpsb
aad
cld
add
pop
cmp
out
out
clc
push
adc
push
mov
or
jmp
je
jle
lds
repz
jne
shlb
adc
test
inc
div
icebp
xor
pop
adc
ja
pop
mov
and
stos
cmp
imul
ficoml
jl
and
lods
jae
mull
fnstcw
stos
dec
daa
aad
dec
rolb
mov
pop
ss
pop
or
adcb
mov
daa
sbb
je
dec
mov
or
loopne
test
sub
pop
pop
mov
inc
push
notl
push
xchg
pop
sbb
mov
fnsave
mov
jbe
scas
out
xchg
push
pop
sub
inc
enter
push
cmp
sahf
push
jmp
data16
mov
ds
pusha
add
sbb
inc
inc
test
movups
sub
pop
adc
iret
loope
jp
adc
and
ljmp
loop
rcrb
ja
mov
xlat
call
sets
jb
add
ret
pop
xchg
pop
sub
and
push
mov
out
fstpl
or
jmp
pop
push
movsb
pop
xor
xor
repz
jmp
or
push
adc
call
mov
out
in
adc
mov
sbb
ss
out
out
test
pushf
test
adc
ret
sbb
lcall
test
ljmp
add
push
cmp
push
jo
or
and
pushf
sub
out
frstor
jne
into
fsub
out
jl
mov
inc
jl
mov
xchg
lea
sarb
lock
sub
sub
pop
out
scas
mov
test
stos
dec
cmp
into
jb
dec
lock
adc
or
dec
push
fwait
pop
inc
mov
loopne
sti
or
mov
mov
movsl
call
sub
push
movsb
jno
mov
adc
fstpt
ret
or
es
rorl
sbb
lcall
mov
addr16
je
cmpsl
or
adc
in
lock
xchg
push
scas
push
mov
idivl
test
inc
fadds
sub
test
ljmp
mov
mov
push
incb
ds
fwait
push
push
mov
int3
and
or
xchg
cmpsl
jle
test
pop
aaa
fidivl
jo
push
add
movsb
mov
fwait
pop
testb
popf
and
xor
in
jb
in
pusha
or
daa
jnp
fidivrs
ja
mov
inc
rcrl
add
push
inc
fwait
ret
push
dec
sarb
je
in
mov
aaa
scas
pop
iret
inc
rol
mov
gs
addr16
arpl
push
jecxz
repnz
lods
jmp
sub
loop
fisubrs
fidivl
test
and
aad
sbb
faddl
mov
js
add
scas
mov
and
dec
inc
mov
sbb
jecxz
lcall
out
adc
add
dec
clc
jae
adc
repnz
xchg
push
inc
add
xchg
lock
sbb
pop
cltd
add
mov
arpl
push
dec
test
cmpl
inc
mov
iret
xor
xchg
jmp
nop
jno
shrl
cmp
sti
gs
sbb
jmp
inc
xchg
leave
pusha
repnz
das
cmp
data16
and
sub
mov
and
pop
jo
mov
sbb
mov
pop
nop
je
xor
pop
stc
add
xchg
cmpsb
xchg
push
push
test
jecxz
inc
test
and
xchg
dec
das
mov
push
jbe
iret
jae
lahf
ficoml
fildll
sbb
sbb
lret
std
js
sub
movsb
pop
dec
mov
cmp
sahf
cltd
aad
lock
push
fsubs
mov
cmp
mov
mov
inc
jne
rolb
out
xchg
cltd
clc
jmp
movsl
jno
imul
idivb
or
cmp
pop
adc
jle
je
mov
or
je
and
inc
inc
out
and
mov
out
fwait
jns
and
sbb
popf
lods
or
xor
loop
std
repnz
repnz
ljmp
add
cmp
dec
and
push
mov
or
mov
lcall
int
cmp
aaa
hlt
out
imul
mov
jo
push
fists
test
adc
adc
inc
cmpsl
and
adc
xor
sub
adc
aas
imulb
test
and
psrlw
xchg
or
sti
cltd
mov
pop
sti
xchg
push
test
or
mov
push
inc
xor
ret
or
insl
xor
and
inc
cmp
mov
std
jbe
out
cmp
cld
mov
and
cmp
dec
or
push
xor
int
cmp
xchg
push
or
xor
adc
test
fdivs
enter
inc
pop
int
add
repz
jns
ret
hlt
or
inc
pusha
or
arpl
and
repz
cmp
ja
arpl
movsl
ss
cltd
rcrl
push
fdivs
stos
imul
mov
out
or
cmp
and
mov
fsubrs
lods
inc
sbb
popa
inc
inc
cmp
jmp
loop
cmpsl
scas
mov
fsubs
add
lds
sbb
cmp
jo
cld
fs
shlb
sub
out
xadd
hlt
jmp
xor
mov
js
push
pushf
scas
pop
push
mov
das
cmp
repnz
xchg
jae
jge
push
sbb
mov
int
sbb
or
sbbl
cltd
or
lret
push
push
addps
sbb
cmp
lcall
cmp
rorl
jge
cmc
adc
data16
mull
adcl
sub
mov
sub
adc
sub
inc
mov
repnz
in
ret
push
das
push
ror
fmulp
add
mov
jb
dec
fisttpl
cmp
fwait
mov
push
dec
dec
out
dec
imul
cmc
mov
pop
jnp
pop
or
push
jb
shlb
jb
dec
mov
cmpsl
testb
add
lsl
mov
adc
inc
outsl
int3
rorb
dec
jle
daa
mov
xor
movsb
push
sub
je
inc
mov
and
movsb
lahf
sbb
mov
rcrb
sbb
fsubrs
xor
into
popf
insb
jmp
sbb
out
mov
xchg
cmc
js
mov
inc
xchg
imul
cmpsb
dec
shrb
les
cmpsl
mov
mov
xchg
sahf
lcall
mov
lcall
adc
stc
push
jne
fwait
lock
stc
imul
mov
dec
daa
roll
adcb
fnstenv
stos
pop
mov
adc
scas
mov
dec
jmp
mov
imul
mov
nop
xchg
sbb
add
and
mov
sahf
movsl
mov
cwtl
push
sahf
pop
xor
aas
cmp
enter
mov
mov
and
mov
push
hlt
inc
xchg
imul
push
outsl
dec
fcompl
fs
mov
push
jns
nop
imul
jecxz
inc
ret
xor
sub
int3
mov
lods
dec
in
test
sbb
inc
pop
les
sti
inc
sub
jmp
fldl
ja
aaa
fwait
push
lods
dec
test
fidivrl
xor
negl
xlat
gs
jbe
cmp
cld
inc
xor
movsl
xchg
jmp
jle
pop
and
minps
add
flds
enter
iret
lock
aad
ja
mov
ret
jl
pop
out
xchg
or
repnz
lds
push
fistpll
gs
movsb
fwait
jge
pop
rcr
jecxz
mov
shll
sbb
shrb
push
and
sub
cmp
jb
dec
pop
shll
lods
je
lret
pop
mov
pushf
jne
inc
push
hlt
xchg
mov
lret
scas
mov
xchg
adc
mov
movsl
daa
pushfw
jge
sahf
shrb
jl
jg
or
ljmp
and
stc
stos
add
xchg
jae
fcom
mov
pop
mov
aad
mov
push
mov
pop
xchg
xchg
xor
rorb
sbb
cmp
popf
test
int3
xor
inc
leave
cld
sub
jns
enter
xor
push
pop
xchg
add
jnp
or
pushf
cmp
jns
dec
outsb
mov
sbb
lea
push
cwtl
fildl
sub
add
lods
test
scas
hlt
testl
or
push
js
data16
filds
adc
jo
inc
jne
popf
sub
rcl
lods
pop
sbb
pushf
orl
insb
fists
bound
imul
out
jecxz
scas
pop
mov
out
pop
add
js
fists
clc
add
icebp
push
ret
leave
mov
adc
push
shll
xor
mov
jg
adc
test
dec
out
xor
lret
stc
nop
aad
cs
nop
sarb
or
scas
xor
adc
mov
dec
adc
fsubl
sub
cmpsb
int3
lcall
mov
hlt
sub
sbb
mov
xor
lods
test
movsl
push
les
div
add
sbb
hlt
les
sahf
les
mov
add
or
scas
or
jo
outsb
sahf
or
push
fs
dec
testb
mov
bound
sbb
inc
xlat
inc
xor
push
mov
jnp
adc
jbe
inc
pop
mov
jns
mov
jns
pop
iret
daa
or
dec
imul
jb
repnz
shl
dec
addl
mov
sbb
cwtl
pushf
es
bound
mov
jge
adc
xor
adc
xor
ss
insl
fwait
clc
pop
adc
lahf
das
dec
int3
sub
scas
xchg
xchg
fildl
pushf
mov
dec
mov
shl
int3
stos
mov
imul
inc
pop
das
sub
dec
pop
sub
sbb
dec
or
aam
adc
jnp
pop
data16
push
and
add
xchg
stos
lock
mov
xorl
ss
cmp
retw
mov
lahf
cvtpi2ps
sbb
mov
js
cli
push
test
sbb
and
add
fbld
int
and
daa
jg
test
dec
cmp
jle
lahf
xchg
or
das
push
int3
repz
gs
lret
out
hlt
xchg
pop
and
jnp
rorb
test
add
add
rolb
ss
sbb
pop
test
mov
mov
lods
sbb
sub
lea
out
push
cwtl
iret
idivb
jbe
mov
out
imulb
inc
adc
push
sub
out
or
stc
lock
incb
dec
cmp
addr16
ret
add
ja
xchg
out
jae
push
cmp
lock
ret
push
adc
or
js
insl
dec
mov
xchg
sbb
sub
aaa
popa
loop
in
dec
mov
cmp
cld
and
pusha
add
lea
fisttpl
sub
test
inc
sbb
cmp
les
xor
mov
jp
inc
xchg
sahf
pop
adc
xchg
mov
sub
fsubrs
pusha
mov
and
inc
in
cld
sbb
ja
lret
fsubrp
push
sbb
cs
push
push
stos
add
aaa
sub
mov
push
dec
scas
daa
addr16
lea
xor
inc
andl
jno
hlt
fsubrl
orb
mov
inc
leave
andl
ljmp
add
push
and
in
fimull
ret
dec
or
aad
mov
mov
dec
outsb
mov
repz
dec
push
or
loop
dec
adc
sbb
pop
out
cmp
xchg
clc
leave
dec
xchg
jmp
fnstenv
xchg
and
push
push
pop
xchg
jecxz
imull
cmp
xlat
push
leave
mov
shll
ret
mov
cld
repz
xchg
sub
subb
cltd
mov
push
test
stos
int3
call
jbe
mov
jge
leave
mov
mov
mov
repnz
loope
rcrl
fwait
jb
and
push
pop
and
dec
add
cmp
push
fs
nop
or
loope
xor
inc
sub
inc
loope
ror
pop
cmpsl
sbb
enter
push
push
or
insl
mov
std
arpl
push
xchg
decb
or
movsb
mov
repz
jns
nop
mov
push
in
pop
adc
pop
xlat
mov
mov
or
out
xchg
ss
insl
add
stos
in
test
outsb
das
add
pop
adc
push
xor
inc
sub
and
les
sub
mov
out
and
pmuludq
notl
inc
cmpsl
sub
or
pop
push
mov
lds
leave
mov
testb
arpl
mov
pop
imul
cmp
insb
mov
jns
inc
and
lock
cltd
jo
push
push
jle
std
cmpb
cmp
dec
dec
add
ds
andl
bound
lods
loop
ret
or
sub
sbb
stos
push
add
lcall
sahf
pop
cmp
cmp
popl
mov
cmc
jg
out
or
cwtl
fiadds
cmpsb
jecxz
mov
xchg
xor
cwtl
lea
jno
fistl
aaa
and
mov
std
lahf
repz
inc
fprem
dec
adc
cmpsl
and
and
mov
jecxz
outsb
pop
ficoml
rclw
xchg
pop
jbe
inc
sub
push
insl
or
nop
jno
pop
mov
pop
lock
test
mov
cmpsb
mov
repnz
int3
fstpt
fistpll
bound
movsl
sub
xchg
in
fwait
shll
es
scas
cmc
pusha
mov
pop
es
fwait
jne
xor
in
inc
aaa
fcomps
loope
dec
sarl
mov
mov
push
push
and
subl
sahf
adc
sahf
mov
sub
dec
out
xchg
push
and
scas
cmpsb
mov
popa
out
testb
notb
jns
add
cmp
jl
add
fldt
xchg
xchg
pop
loopne
push
mov
rcll
mov
mov
xor
jns
jo
mov
xlat
mov
jb
enter
out
mov
jp
xlat
sbb
mov
lcall
or
xchg
cmpsb
loop
lret
adc
adc
repz
xor
loop
leave
mov
xlat
push
out
aad
inc
jns
xchg
nop
and
scas
sbb
jo
loop
pop
jae
xor
pop
sti
push
push
xchg
lret
cmpsb
mov
sbb
ret
movsb
jmp
xchg
aaa
cmpsl
scas
sub
outsb
imul
int3
jb
sbb
mov
xlat
adc
jb
adc
jmp
out
ret
insb
dec
xchg
fwait
xchg
add
stc
aaa
add
in
fists
fsubrs
aad
mov
aad
pop
and
jns
or
pop
fs
es
ljmp
fistpl
dec
out
cvtps2pd
adc
xlat
mov
mov
stos
or
dec
hlt
lods
loope
sub
sbb
cmp
mov
sub
rolb
xor
and
inc
mov
and
test
call
fsubrp
movsl
mov
ss
nop
jp
call
cli
jo
ja
pop
jmp
sahf
scas
rcrl
inc
sar
test
push
or
imul
pop
stc
and
lea
mov
mov
mov
cmpsb
lret
and
fsubrl
adc
in
cmpsl
jb
pop
or
mov
fsts
pop
mov
fwait
fwait
xor
and
add
mov
popa
inc
push
ja
jnp
je
and
sub
push
xchg
sbb
int
mov
or
frstor
push
xchg
sti
out
adc
push
imul
test
in
dec
lcall
rcr
mov
aaa
sbb
lret
mov
adc
push
aad
xchg
sahf
and
fidivs
repz
gs
dec
shll
jp
dec
roll
data16
mov
xchg
add
jmp
test
test
cli
cs
jb
aas
cmpsb
dec
in
pop
fldenv
add
pop
dec
cmc
mov
adc
xor
push
data16
push
pop
out
adc
test
mov
data16
shl
fld
mov
sbb
jne
adcl
cmpsb
inc
fwait
xorb
pop
inc
rclb
or
adc
jae
pop
add
cmp
mov
or
out
arpl
sub
imul
sbb
cmpsb
xor
fnsave
fldcw
mov
hlt
mov
ja
addr16
hlt
mov
data16
xchg
or
test
das
adc
loope
mov
ds
sarb
sbb
mov
outsb
fidivs
jp
int
push
mov
fisubrs
push
or
sub
shrb
and
push
icebp
iret
jg
pop
dec
xor
add
push
repz
shll
jp
pop
iret
in
pop
push
scas
dec
enter
mov
fucomp
sbb
movsb
jnp
add
push
in
cmp
sbb
push
jbe
fcomi
popa
or
cmp
mov
mov
push
rcrb
sbb
mov
stc
lods
xor
push
cmp
addl
add
movsb
jp
jbe
scas
leave
push
cmp
jns
mov
add
bound
xor
or
lods
mov
jg
aad
jno
jp
xor
or
pop
and
aaa
cmp
out
shrb
mov
sub
sbb
mov
shrl
and
int
outsb
inc
cmpsb
sbb
jecxz
cmp
mov
fildll
lods
adcb
pop
dec
jae
nop
aaa
sub
fistps
inc
out
in
push
stos
push
pop
cli
inc
cmp
xor
adc
aas
and
int3
push
add
repz
push
popa
push
insb
jae
sub
push
xor
xchg
iret
outsb
cmp
xchg
push
in
sbb
push
fwait
pop
push
mov
xor
int3
ja
xchg
xchg
sub
fidivrs
out
addr16
out
jmp
jne
cmp
cld
icebp
dec
out
sub
out
or
sbb
subl
and
mov
jbe
inc
push
adc
jmp
fistpll
icebp
push
xchg
stos
shrl
mov
shr
and
and
int3
repnz
addb
mov
adcl
pop
negb
fstp
loope
insb
imul
mov
dec
iret
or
lds
ret
cwtl
aas
push
sbb
push
pop
push
mov
mov
push
lods
push
xor
out
add
insb
je
inc
xor
jne
ljmp
cmp
jmp
les
les
clc
pop
or
and
mov
push
stc
xchg
arpl
fistpl
add
jne
lahf
bnd
xor
pop
bound
es
in
cld
add
dec
sbb
ret
sub
daa
cmpsl
xor
xor
push
loop
push
sub
push
pop
in
mov
ss
xchg
lea
mov
jo
rcl
dec
jle
dec
cmc
mov
fimull
cmpsb
outsl
in
mov
repz
inc
ds
push
cmc
xchg
decb
fldl
lcall
push
pushf
sti
mov
icebp
fsubrp
out
bound
cmp
sbb
lods
popa
inc
orb
int3
aaa
popa
xchg
test
loopne
pop
cld
into
xor
cmpsl
lds
jns
sbb
jnp
rcl
mov
mov
mov
xor
mov
push
or
push
inc
lock
cmpsl
imul
stc
les
bound
jg
lret
adc
jb
add
notl
jp,pn
sbb
sti
roll
pop
add
out
imul
lcall
pop
daa
lods
dec
dec
mov
decb
ds
mov
sub
shll
push
lods
push
add
and
push
xchg
scas
hlt
pop
decl
das
xor
inc
test
mov
pop
xor
imulb
je
les
ret
inc
fnstenv
sarb
into
sarl
push
aas
dec
out
mov
ss
add
or
pop
aas
mov
orl
push
out
clc
adc
cmp
or
adc
inc
pop
in
mov
cmp
mov
lret
gs
add
mov
es
icebp
fstps
pushf
sub
jne
stos
mov
test
pop
mov
adc
sbb
sti
rcrl
fidivl
sub
cmp
loope
mov
add
xor
je
into
xor
inc
cs
hlt
or
dec
scas
cmp
push
xchg
iret
mov
push
cmpb
xchg
cld
inc
or
mulb
fistpll
mov
stos
fcmovu
popa
and
pop
xor
xor
dec
out
add
sub
xchg
dec
movsb
lahf
fcomi
pop
sarl
mov
sti
add
or
test
xor
sbb
mov
xchg
mov
int
or
mov
insl
testb
clc
sub
sub
daa
xor
aad
dec
mov
inc
mov
out
int3
out
test
pop
xchg
xchg
test
mov
mov
mov
dec
dec
arpl
push
mov
lret
subb
cmp
div
jecxz
jo
xor
std
adc
lods
into
pop
scas
and
jns
sbb
jno
aam
pop
mov
in
mov
std
pop
mov
stc
in
push
mov
pop
fdivrs
int
xor
and
gs
bound
call
repnz
pop
sti
mov
mov
xchg
cli
aam
lahf
filds
lods
push
hlt
mov
xor
popf
std
push
mov
ljmp
mov
fwait
xorw
sub
js
test
in
xlat
iret
rorb
das
aas
je
shlb
cmp
cmp
push
dec
enter
mov
xchg
ja
jae
test
sbb
mov
es
xor
shl
push
int
jle
aad
fstl
inc
fcompl
add
cli
mov
dec
lahf
dec
hlt
sbb
loop
cmp
ret
arpl
mov
push
sahf
xor
cmp
into
sub
ret
pop
sub
push
gs
or
xchg
inc
and
fsubs
xchg
stos
add
inc
dec
les
lcall
setb
lea
jecxz
pop
cmp
lods
xor
lcall
xor
mov
adc
sub
jnp
ret
sahf
mov
cmp
lea
cmp
push
and
push
sbb
sbb
adc
sbb
push
das
dec
mov
ds
popf
enter
sahf
loope
adc
lcall
cwtl
dec
dec
sub
cmpsb
ljmp
adc
adc
cwtl
insl
out
fsubr
mov
jae
rcrb
mov
inc
int3
jo
and
dec
sahf
adc
jp
push
pop
and
or
subl
fsubl
xchg
mov
sbb
call
mov
shrl
pop
fwait
ret
out
and
cwtl
in
cmpb
or
mov
sub
or
mov
cli
imul
js
jo
pop
pop
and
outsl
push
mov
es
arpl
cmp
ljmp
push
daa
mov
fisubs
jmp
adc
mov
ja
cmp
lcall
add
repnz
cld
push
aas
sub
int
xchg
mov
stc
ret
test
imul
movsl
jp
ljmp
enter
int
add
or
stc
inc
push
shll
jl
mov
out
dec
and
out
inc
push
pop
and
dec
repnz
in
aam
repnz
jnp
mov
icebp
roll
cmpb
frstor
sub
jmp
mov
hlt
xchg
out
cmove
ds
sub
jmp
add
add
loop
sti
imul
or
inc
sbb
xchg
cmpl
fucom
stos
pop
and
push
sub
sub
adc
lods
mov
dec
push
adc
jle
mov
push
rcr
das
mov
adcb
pop
xor
loope
stos
inc
dec
mov
dec
or
adc
arpl
pop
or
add
shufps
add
and
xorl
fwait
out
and
std
shl
adcb
aas
xchg
sbb
add
xchg
adc
xor
jns
aam
sahf
fistpll
sahf
scas
test
pop
orb
jbe
mov
pop
mov
or
or
mov
xchg
and
stc
fiadds
sbb
shlb
or
xor
out
sub
xchg
or
mov
xlat
ret
pop
mov
push
or
ds
push
sub
or
add
pop
push
add
xchg
mov
retw
enter
fdiv
addr16
test
push
mov
and
jnp
xchg
and
dec
imull
in
daa
xchg
sbb
jns
scas
sbb
mov
dec
add
mov
outsb
lds
add
mov
xor
xor
lods
push
sub
xchg
sub
jns
push
hlt
dec
lods
loopne
dec
cmp
out
pop
ret
lahf
sbb
mov
imull
mov
xchg
inc
jecxz
dec
das
shrb
mov
insl
sbbl
jb
cs
movsb
xor
pop
jmp
mov
call
pushl
into
outsb
xchg
lret
ja
push
ret
add
aad
pop
fldl
jl
xchg
testb
inc
sub
pop
into
cmp
mov
inc
mov
adc
push
arpl
data16
cld
add
lret
in
sbb
sarl
popf
scas
mov
mov
xchg
scas
bound
pop
jle
insb
lret
cmp
xchg
xchg
xchg
pop
stos
sbb
mov
or
mov
add
adc
shll
aas
addr16
hlt
mov
sub
pop
js,pn
jge
arpl
xchg
cmp
or
andb
gs
and
lock
mov
adc
pop
inc
add
loopne
and
mov
testb
push
and
add
and
and
mov
lcall
cmp
cli
fwait
pop
xchg
stc
or
es
aaa
dec
xchg
outsb
clc
pop
inc
jle
sti
inc
ja
add
lret
cmp
or
prefetch
mov
ljmp
ret
jbe
fstpl
or
test
movsl
push
adc
out
add
fwait
adc
bound
jl
fisubrs
and
dec
push
xchg
push
jns
inc
js
inc
sti
dec
pop
fcoml
cmpsb
enter
bound
fstpt
push
jbe
mov
mov
mov
jl
insb
sub
xchg
or
cmp
lods
loop
and
sbb
fisubrl
pop
xor
test
add
xchg
add
nop
ret
jge
test
xchg
shl
and
nop
adc
lods
mov
dec
repnz
xor
aas
mov
lcall
push
sahf
call
mov
xchg
out
test
mov
dec
sub
xor
cmp
push
sti
mov
mov
ret
mov
inc
sbb
cmp
mov
pop
aad
push
jmp
loop
add
xchg
popa
jmp
lock
out
mov
ret
xlat
xor
sub
stos
sbb
les
jns
aad
xchg
in
push
out
pop
movsl
add
mov
xor
xchg
test
ficoml
lcall
lret
and
aaa
aaa
stc
xor
nop
inc
leave
out
and
inc
pop
sbb
test
pusha
fcomps
cmc
sub
mov
and
dec
mov
or
outsl
aaa
pop
inc
decl
sti
mov
push
push
movsb
leave
mov
out
test
dec
mov
fwait
or
inc
into
sbb
sti
and
adc
jns
lds
push
mov
test
mov
jbe
jb
imul
cltd
mov
test
mov
mov
and
das
xchg
adc
mov
ja
xchg
sbb
scas
addl
and
test
inc
test
xchg
pop
icebp
test
insb
dec
push
lods
inc
cmc
and
xor
mov
xor
ss
test
push
lret
xor
inc
xchg
jecxz
mov
sbb
lahf
or
dec
insb
mov
dec
es
call
fisttpl
mov
imul
add
adc
shlb
push
adc
push
xchg
xchg
sbb
dec
orb
cmc
dec
add
test
movsb
add
push
cmp
jle
pop
ret
stc
aaa
rcl
imul
adc
mov
insl
xor
pop
insl
mov
xchg
add
dec
and
cwtl
lea
cwtl
pop
and
fmull
outsl
and
xchg
mov
rclb
popa
xchg
cmp
cmp
mov
daa
sti
inc
orb
push
xchg
cli
add
or
in
dec
and
pop
or
fimull
jo
lret
pop
fdivs
push
out
push
cwtl
mov
jne
or
test
loopne
sub
rorl
mov
cmpsb
test
mov
fcmovne
mov
inc
shrl
dec
fidivrl
and
push
insb
movsl
mov
and
ds
daa
add
loope
mov
mov
add
mov
adc
shll
les
mov
pop
outsl
out
daa
loop
push
test
dec
add
outsl
adc
movb
xchg
jle
fsubl
xor
jg
cwtl
and
sub
cmp
jae
mov
inc
adc
push
popf
cmp
test
hlt
movsl
and
and
testb
or
cmpsb
lock
aaa
jge
fcompl
mov
stos
sbb
leave
std
mov
jnp
push
es
sub
arpl
sahf
dec
push
jne
mov
push
xor
jg
dec
adc
lahf
fucomp
inc
rcll
pop
mov
ja
add
lods
int
pop
rep
jle
add
push
sub
ljmp
mov
mov
arpl
and
fistl
loopne
jnp
loopne
stos
je
imul
popa
push
adcl
ret
hlt
sub
jl
xchg
lods
cmpsb
out
cmp
mulb
leave
sub
add
sub
leave
rclb
pop
icebp
jnp
stos
jns
lret
pushl
pop
cld
repnz
or
pop
jl
adc
push
and
add
dec
lahf
inc
xchg
adc
sha256msg1
cmp
out
push
mov
push
or
imul
mov
iret
lods
push
push
add
mov
push
cmp
scas
loop
mov
xchg
test
jnp
test
sub
lahf
xor
dec
cmpsl
repz
xchg
arpl
fldcw
mov
movsl
roll
cmp
jmp
inc
xor
fadd
push
shr
in
push
jns
leave
lock
lds
imul
sti
fwait
mov
xor
mov
cmpl
mov
jle
push
mov
repnz
call
adc
movsl
leave
sbb
loop
in
inc
mov
loope
ljmp
push
xchg
xchg
pop
pop
addl
nop
data16
xchg
sti
xor
or
je
push
jl
and
pop
lock
fs
pop
shrl
push
pop
mov
or
call
sbb
sub
push
push
inc
xor
sbb
loope
cmpsb
cmp
sbb
inc
mov
int
sub
cmc
mov
imul
lods
cmp
cmp
mov
sub
and
sub
xor
xorb
jg
stos
inc
cmp
add
movsl
mov
dec
fstps
mov
sub
sub
xchg
stos
sbb
out
loopne
mov
mov
cltd
daa
pop
call
imul
jge
cltd
adc
mov
js
pop
mov
sbb
es
cmp
jb
sub
sahf
and
out
mov
xchg
stos
sbb
mov
iret
jnp
cmp
mov
cli
push
mov
and
in
mov
shlb
sub
sub
cmp
push
inc
fmull
jo
mov
xchg
cltd
divl
mov
leave
iret
mov
sub
lods
sub
sti
dec
push
fildll
subb
jo
xchg
test
or
rcrl
fldl
pand
leave
pop
or
dec
sub
ss
jp
push
rolb
loope
mov
pop
xchg
in
sbb
repz
cs
push
dec
push
cltd
notl
cmpsl
xorl
std
test
xchg
std
lods
xlat
es
jno
add
arpl
lret
sti
fsubl
mov
ret
popf
ror
ret
in
dec
inc
pop
mov
add
jle
shrb
mov
adc
stos
insb
ffreep
push
mov
mov
roll
mov
pusha
outsb
ret
push
les
xchg
pop
or
jns
and
xchg
push
nop
into
andl
aas
daa
repnz
cmp
int
in
pushf
lock
sub
mov
fidivrl
jns
in
stos
xorl
sbbb
cmp
mov
push
pop
ret
mov
mov
inc
pop
xchg
dec
lods
or
sbb
out
lods
dec
dec
adc
jo
inc
rolb
dec
call
jle
add
dec
fiadds
xor
xlat
jl
adc
cld
aas
mov
mov
fsts
dec
mov
mov
push
insl
mov
lock
dec
adc
mov
and
lea
mov
ret
cmc
imul
mov
js
pop
cli
das
xchg
lods
mov
ja
clc
repnz
mov
push
and
stc
sbb
pop
pop
dec
jno
sbb
jae
dec
sbb
scas
sub
pop
push
or
shrl
aaa
imull
push
inc
push
jge
mov
int3
inc
add
lret
es
mov
imul
test
dec
xchg
sub
aam
sahf
movsb
mov
les
test
rorb
xchg
and
imul
mov
dec
inc
bound
cld
dec
leave
sbb
sub
add
mov
mov
xorl
out
jecxz
sub
pop
adc
loopne
sub
int
lret
jmp
sub
dec
adc
lahf
dec
adc
ror
je
dec
notl
jnp
cmc
xchg
and
inc
movb
notl
in
stc
out
mov
or
and
idivb
mov
and
adc
pop
dec
ljmp
stos
inc
stc
loope
mov
pop
push
pop
sub
xor
stos
inc
pop
mov
pusha
or
pop
mov
adc
xchg
cwtl
pop
mov
pusha
cmp
sub
sub
orb
or
dec
dec
jne
mov
loop
in
loope
pop
ljmp
lahf
mov
loopne
out
bswap
or
inc
pop
jecxz
fs
add
mov
out
sti
dec
aad
mov
mov
test
mull
sbb
xchg
fwait
les
or
scas
test
gs
negb
dec
adc
push
movsb
std
add
dec
xor
add
xor
out
imul
test
jno
dec
add
push
aad
fdivl
enter
xor
push
mov
mov
mov
xlat
das
addr16
mov
or
ljmp
push
inc
or
push
xchg
inc
push
dec
into
cld
inc
sbb
jmp
mov
inc
add
inc
test
test
lret
add
lods
sbb
mov
add
ss
mov
xchg
add
inc
scas
fcompl
imul
xor
push
inc
adc
sbb
or
inc
mov
lds
mov
inc
clc
dec
data16
push
repnz
gs
xlat
cmpsb
inc
cltd
fisubrl
repnz
mov
ljmp
or
add
mov
nop
cli
aas
jnp
aas
scas
jmp
popa
pushf
lcall
mov
sbb
fidivs
mov
xchg
fwait
stos
cmp
test
cmp
iret
xchg
dec
clc
jg
or
mov
loope
test
cmpsb
sub
addb
xor
arpl
aas
fidivrl
addr16
test
and
cwtl
lods
mov
loope
pushf
push
loop
out
hlt
or
addr16
mov
mov
cltd
sti
aad
addr16
mov
test
inc
fs
or
push
je
jb
cmp
pop
xchg
loopne
push
or
xchg
pop
inc
sbb
jmp
xchg
dec
stos
jmp
xchg
adc
iret
out
rcpps
dec
adc
popf
inc
push
dec
sbb
and
outsb
dec
in
lds
mov
inc
sahf
sahf
pop
clc
inc
scas
mov
add
out
jle
add
jo
popa
fildl
pusha
adc
inc
add
push
sub
cltd
push
js
adc
xlat
cmp
mov
xor
pop
scas
jle
stc
aam
and
dec
lret
add
cmpsb
or
mov
sub
mov
movsb
cmp
shl
fisttps
xchg
test
lods
pushf
adc
pop
ss
shr
or
mov
push
aaa
int
aam
pop
test
aam
shrl
add
cld
mov
lds
sbb
rol
cmpb
mov
lods
jne
xchg
jl
push
into
shrb
push
mov
aaa
and
fsubrp
icebp
in
sbb
repz
insb
out
bound
mov
popa
lahf
shrl
cmpsl
cs
and
decl
fs
push
hlt
ficompl
pop
pushf
mov
in
add
movsb
mov
push
cmc
pop
lahf
xor
clc
push
inc
cmp
cmp
jne
pop
cmp
xor
push
inc
push
cltd
fucomp
loope
je
xor
sub
push
jge
movsb
sahf
push
lds
outsl
add
xchg
cli
mov
js
adc
imulb
dec
push
fdivrs
scas
dec
and
lahf
bound
fiadds
jle
loop
jge
ret
test
push
jno
jno
inc
popa
out
mov
cli
popa
sub
cmp
imul
inc
data16
fldcw
scas
call
push
cmc
scas
mov
sbb
xchg
pop
call
xor
lods
dec
out
leave
pushf
xlat
dec
stos
mov
sub
sub
inc
fidivrl
add
pop
fiadds
adcl
or
mov
stc
jmp
xchg
mov
out
push
popa
sahf
jecxz
pop
cmp
rcr
dec
inc
xchg
stos
es
or
inc
aam
push
lods
adc
dec
cmp
cmp
sbb
addr16
pushl
aas
and
push
ficompl
add
xchg
sbb
or
jg
xlat
stos
test
loope
insl
cmc
icebp
mov
add
cmp
aad
inc
aaa
and
movsb
xor
mov
adc
fs
cmpsl
and
ret
or
lods
lcall
dec
dec
push
xchg
adc
sub
outsb
stos
cltd
aas
sub
iret
rcll
pop
jns
or
subb
xchg
xor
mov
sub
ljmp
xorb
cmp
jge
adc
insb
pop
sub
loop
sahf
in
hlt
jns
jg
je
lcall
hlt
stc
dec
add
mov
flds
and
mov
fimull
mov
fnstsw
push
mov
push
adc
outsl
iret
mov
aas
cli
mov
test
pop
scas
push
or
ret
sub
xchg
jge
dec
lahf
jmp
push
enter
xchg
jg
in
pop
pop
xor
addb
shlb
movsl
mov
dec
push
pop
insb
push
cmp
push
or
ljmp
repnz
popf
mov
dec
jnp
mov
in
ja
mov
jg
popl
jl
mov
repz
scas
dec
mov
inc
movsl
pop
nop
out
mov
fsincos
dec
jecxz
pop
pop
pop
mov
sbb
sbb
fsubs
cwtl
cmp
outsb
xchg
lods
xchg
mov
xchg
mov
add
es
sub
aam
icebp
mov
jnp
xlat
mov
mov
mov
sub
pop
fadds
pop
xor
leave
repz
leave
insl
inc
jecxz
jp
pop
jnp
dec
and
mulb
imul
aad
pop
cmp
mov
cwtl
sbb
es
or
aam
out
iret
xor
cltd
loopne
out
call
in
outsb
lock
stc
in
push
shl
mov
push
aas
jmp
maxps
and
pop
fs
imul
jae
cmc
sahf
jmp
pmaxsw
push
out
test
mov
or
jns
in
int
pop
sub
lahf
pop
adc
arpl
out
jge
jle
subb
scas
rolb
orl
mov
mov
loopne
push
mov
jno
jmp
loop
into
xchg
clc
iret
adc
push
fldl
imul
push
sbb
or
outsb
jl
cmpsb
and
in
adc
add
jmp
jl,pn
sbb
xor
nop
sub
movsb
mov
jge
and
loopne
inc
dec
lahf
jge
es
cmp
push
sti
ret
adc
jbe
pop
fistpl
cli
push
js
orb
or
lods
test
add
cmpsb
xor
and
and
icebp
adc
into
ds
rcrl
mov
mov
pop
dec
jne
push
ljmp
pop
cmpb
daa
aaa
xor
pop
or
push
pop
inc
fwait
pop
mov
pop
scas
dec
adc
test
jno
lock
mov
add
lock
cmp
mov
mov
or
dec
jl
scas
inc
jbe
mov
andb
das
pop
imul
test
insb
pop
dec
dec
jno
cmp
mov
test
aad
loop
out
cltd
fwait
sbb
or
dec
cmp
xor
pop
mov
rcrb
push
inc
push
stos
cld
inc
push
sbb
push
push
lods
cmpsl
movsb
adc
cmp
ds
mov
or
or
or
fimull
jecxz
stos
mov
repz
std
jl
push
insl
notl
jle
out
add
int
sub
movsl
es
push
xorb
cmpsl
xor
and
sbb
xor
leave
lahf
sbb
insb
cmp
int3
rorb
fdivrp
ret
rcr
xor
jp
scas
push
mov
fnstsw
fisubl
mov
cmp
push
sub
dec
push
sub
mov
ja
sub
lret
sbb
cmp
out
adc
or
notb
push
xor
sbb
inc
jge
adc
pop
das
xchg
jge
lods
ja
cmp
push
enter
or
mov
inc
jnp
and
rcrl
dec
pushf
fadd
aas
repz
fnsave
sub
jbe
pop
popf
push
cltd
test
jp
lock
add
out
cmp
int
cld
xchg
sti
dec
cli
pop
lods
inc
push
adc
loope
in
std
dec
loope
mulb
cs
fdivl
jb
adc
fmuls
jne
pop
ficoms
js
aaa
or
or
mov
je
lcall
sbb
adc
jg
cmc
std
mov
aaa
mov
lds
xor
lahf
cmp
loope
movsb
mov
rolb
mov
inc
and
lret
icebp
jb
shrb
clc
les
mov
mov
add
inc
inc
adc
add
fildll
scas
iret
lcall
or
nop
pop
jo
ret
sbb
dec
jge
cwtl
pop
jg
imul
inc
xor
pop
xlat
aas
fmull
jo
xchg
imul
pop
mov
mov
je
vmovd
mov
test
dec
sarb
icebp
jns
in
scas
idivl
mov
iret
dec
jmp
dec
jnp
add
ljmp
repnz
cmpsl
rorb
mov
inc
and
xor
jbe
std
sti
call
into
push
fldt
test
imul
add
hlt
add
idivb
lret
int
push
mov
fisubrs
shr
pop
shll
mov
pop
mov
xor
pop
data16
fisubs
dec
or
push
pop
scas
xchg
sti
divb
xor
es
sub
mov
aad
test
clc
sti
out
add
ja
mov
aad
inc
orl
test
cmp
xchg
and
pusha
es
push
and
js
xor
fisttpll
push
sbb
xlat
ficoml
push
jl
lahf
into
sbb
mov
add
out
add
pop
pop
mov
stos
out
xchg
pop
aas
jne
out
fimuls
lret
insb
jp
mov
fisubrs
out
incb
xor
mov
call
mov
mov
pop
mov
dec
pop
push
adc
xlat
shr
ljmp
lcall
int3
cmp
jmp
mov
inc
mov
insl
arpl
clc
in
sub
fwait
push
aam
jmp
imul
pop
pop
outsl
adc
mov
sete
lret
test
jae
jge
ret
iret
pop
mov
and
pop
dec
cltd
and
inc
iret
jle
ret
dec
iret
inc
xchg
dec
out
dec
push
cmp
rcrb
push
add
or
iret
out
stc
in
cmp
sbb
cmp
pop
sub
and
and
movsl
aad
aas
jge
out
lcall
cmp
jg
add
inc
xor
and
loop
je
fstpl
pop
or
scas
sub
jne
es
dec
jne
push
inc
push
stc
and
cltd
xor
loopne
mov
mov
mov
sub
adc
xor
sti
mov
test
or
push
ja
sti
imul
pop
lods
jbe
adc
test
push
push
mov
lea
shl
xchg
mov
leave
jle
and
pop
insl
xor
aad
mov
repnz
cmc
mov
jl
es
out
cli
jmp
ds
gs
je
pop
enter
ljmp
call
addb
ret
xor
and
cli
test
lahf
adc
cmp
gs
cmpsl
pusha
jge
mov
sub
sbb
stos
jb
stc
sahf
mov
movsl
and
out
and
out
pop
cmpsl
jge
mov
xchg
out
leave
pushf
sub
test
daa
and
pusha
xor
sub
and
sbb
sub
test
pop
outsb
mov
xchg
repnz
dec
mov
call
fiadds
cwtl
lods
pusha
dec
inc
sbb
xchg
jae,pn
shll
sahf
mov
push
movsl
jmp
nop
pop
pop
jb
sbb
mov
jecxz
pop
and
inc
into
sub
pop
mov
dec
mov
xor
xor
out
mov
pop
scas
pop
test
pop
cmp
mov
das
mov
pcmpeqw
insb
cltd
jae,pn
adc
in
xor
cli
test
sbb
push
stc
pop
test
int
xor
cld
stc
sub
mov
xchg
mov
pusha
mov
inc
dec
xor
jmp
out
xor
fldl
lret
daa
mov
bound
cmp
adc
pop
mov
jo
ret
nopl
out
add
mov
cmpsl
mov
sub
les
out
clc
cmp
pop
xchg
sub
bound
or
mov
mov
aam
pop
enter
push
adc
cwtl
ja
lods
fstpt
jo
mov
xchg
popa
dec
adc
daa
ret
jnp
xchg
rorl
jmp
in
imul
stc
stos
xchg
pop
insb
lret
push
loopne
and
mov
cmc
jae
or
movsb
push
aam
cwtl
les
popa
loop
pop
jp
jnp
jnp
mov
jbe
pop
add
into
addr16
out
inc
int3
lret
scas
rorb
dec
inc
pop
xor
mov
or
divb
std
nop
out
insb
aas
inc
push
loope
scas
jb
fidivs
fprem
icebp
jp
int3
add
add
mov
adc
sbb
push
mov
sbb
lahf
pop
andl
leave
mov
xchg
aad
jge
cmp
shl
in
dec
add
dec
movsl
fists
es
mov
out
sbbl
jg
test
daa
cwtl
xlat
jae
jae
push
out
je
dec
inc
addl
push
in
mov
cmpl
test
jp
test
push
loope
nop
pusha
pop
dec
jmp
jg
mov
xor
mov
mov
and
gs
call
mov
dec
test
fcompl
pop
cli
lea
xlat
in
ja
mov
mov
mov
push
outsb
ret
sarb
xor
sarb
call
popa
jne
push
mov
stos
in
xchg
sar
dec
pushf
adc
xchg
or
adc
jns,pt
dec
ret
adc
in
dec
sahf
sbb
repz
fisttpl
mov
leave
push
aad
stos
xor
adc
dec
dec
ja
in
sbb
sbb
ret
test
out
sbb
mov
dec
pop
jg
xor
cmp
fmul
push
cli
push
adc
je
mov
cltd
xor
fcoml
sub
push
popf
andb
fdivr
add
ficomps
dec
jmp
add
imul
pop
je
arpl
sbb
imul
mov
clc
leave
shll
daa
lcall
sahf
js
divb
loop
loope
dec
int
cmpsb
loopne
pushf
sbb
jns
ja
loope
in
sbbl
ret
add
dec
or
jb
cmpsl
stos
adc
jle
mov
xchg
leave
jp
out
ret
jmp
adc
xor
pop
shl
sbb
roll
mov
jmp
hlt
cmc
push
jl
xor
cmpsb
rorb
cltd
push
mov
xchg
ss
xchg
cmp
sbb
inc
lds
and
pop
cmp
mov
adc
jl
adc
mov
jno
fbstp
jmp
cltd
inc
jg
mov
cltd
mov
mov
es
mov
in
sbb
mull
loope
jg
loop
nop
adcl
mov
in
fmul
pop
mov
xor
pop
lret
filds
xorl
cs
adc
push
test
test
test
outsl
adc
or
jmp
das
cmp
pop
sbb
and
mov
pop
adc
repz
hlt
aad
ljmp
mov
jmp
aam
mov
ljmp
mov
pushf
aam
insb
xchg
ret
lods
jle
xcrypt-cbc
cmpsl
shl
cmpb
shrw
adcb
stc
sub
xlat
mov
push
mov
ss
aaa
dec
out
subl
repz
adc
xchg
jne
std
adc
cld
mov
aas
ficomps
pop
out
jae
hlt
sti
push
sub
jp
jb
outsl
push
mov
out
push
pushf
xor
jb
push
or
dec
aaa
ret
and
fidivl
add
mov
add
jecxz
test
jo
and
xchg
or
xchg
push
xor
sahf
cs
dec
stos
or
int3
jo
mov
jb
xchg
lods
cli
sahf
out
sar
or
xor
leave
psadbw
mov
push
sbb
cmpsb
inc
cmc
aam
jl
sbb
out
mov
fadds
addr16
cli
cmp
push
cmp
push
test
xchg
cmpl
sahf
dec
insl
xchg
sbb
push
dec
test
xchg
add
push
imul
arpl
push
or
or
lea
movsb
mov
sub
or
mov
lock
and
popf
mov
fldcw
pop
dec
pop
cmp
lea
mov
mov
sbb
sbb
scas
outsb
in
sub
in
mov
js
scas
in
es
xchg
out
push
std
cmc
int3
call
add
addr16
cmp
jns
xchg
jecxz
cmp
lds
push
pop
mov
mov
pop
enter
adcb
insb
cmp
mov
mov
push
ffreep
fists
xor
aam
or
mov
adc
loop
or
xchg
rcll
ror
sub
jb
addl
pop
nop
pop
push
leave
or
jbe
pop
out
imul
clc
lds
add
jmp
xor
popf
xchg
or
ja
aad
loop
repz
stc
mov
push
sbb
jb
jp
dec
mov
cmc
adc
mov
data16
mov
mov
inc
dec
lret
jns
xlat
xorb
test
in
movsb
xchg
mov
in
sarl
add
les
push
pop
dec
mov
push
xchg
mov
fs
xchg
jge
adcb
and
mov
lea
shrl
mov
movl
hlt
xor
add
add
hlt
jbe
gs
imul
sbb
bound
fldenv
adc
xchg
pop
cltd
je
fisubrl
sub
jno
pop
js
sbb
outsl
add
lret
xor
mov
cltd
add
pop
je
jo
mov
sub
les
ret
std
or
jg
mov
sub
add
xor
xchg
or
pop
das
dec
xor
inc
lea
js
mov
icebp
cwtl
and
jge
inc
je
int3
pop
outsb
inc
repz
dec
dec
cltd
inc
cs
ja
cltd
push
sbb
mov
fildl
add
adc
out
cs
sub
mov
bound
outsb
test
cli
in
mov
pop
test
lret
test
jo
add
cmpsl
add
xchg
lods
cwtl
jge
scas
cmovs
or
add
clc
mov
mov
pop
jnp
arpl
leave
stos
lahf
mov
orl
sub
pop
cmp
add
dec
mov
je
push
imul
add
inc
test
lret
sbb
push
orb
cmp
pop
cltd
mov
pop
dec
and
stos
bound
int
je
ja
cwtl
out
test
rorl
xor
outsl
daa
into
add
and
stos
dec
fcompl
inc
cld
jle
leave
sbb
out
clc
xor
push
gs
imul
enter
cmp
test
sbb
adcl
dec
cmp
xor
xchg
cmpsl
out
outsl
or
cmp
clc
mov
jg
pop
sub
les
fimuls
int3
dec
outsl
nop
jg
call
or
fildll
inc
and
xchg
add
add
dec
mov
andb
or
loop
movsl
mov
sub
arpl
ret
loop
push
stc
push
cmp
and
es
std
ss
or
sub
ljmp
mov
sbb
sti
icebp
push
icebp
pusha
mov
mov
dec
sbb
cmp
inc
cmp
jmp
movsb
lds
ds
inc
pushf
lods
lods
pmaxub
imul
iret
jb
int3
sbb
push
and
out
dec
dec
xor
fwait
out
sub
cmp
int3
shlb
and
and
xlat
pop
arpl
jb
sub
insl
add
sbb
mov
mov
pop
es
jge
aam
add
xchg
in
ja
and
fs
clc
mov
in
test
and
add
jmp
loop
jge
icebp
test
lret
adc
lock
push
cmpsb
add
dec
dec
jbe
cmp
test
pop
cmp
adc
inc
dec
pop
aaa
pop
jp
dec
in
jg
adc
in
inc
lea
mov
add
shl
mov
repz
fiaddl
outsl
loope
inc
sub
nop
jecxz
dec
xchg
push
jge
mov
or
rorb
pop
pop
cltd
push
popf
cmp
add
xor
mov
cmpsb
push
xchg
xchg
insb
je
ds
lock
insb
sub
mov
cmpsb
lret
in
ret
cli
push
outsl
push
popa
repnz
dec
les
scas
jo
cmp
rolb
ja
jl
test
and
push
loop
xchg
sbb
pusha
dec
mov
stos
inc
dec
movsb
sti
cwtl
fwait
xchg
test
repz
mov
inc
cwtl
daa
inc
mov
push
mov
sub
cmp
dec
sbb
jo
sahf
add
orb
in
sub
das
data16
xchg
lods
std
mov
rolb
decl
fildl
adc
xlat
sbb
and
pop
push
inc
enter
jbe
popa
insl
mov
stos
lahf
out
push
lock
inc
fildll
inc
xor
push
dec
xlat
js
sarl
or
adc
jle
repnz
and
daa
out
inc
cmp
jo
sub
cmp
inc
aad
adc
xchg
dec
mov
icebp
pop
lahf
push
lret
jge
and
insb
lds
jmp
inc
hlt
sarb
push
push
pop
sbb
push
mov
jae
cmp
movl
push
inc
and
test
je
pop
mov
pextrw
adc
call
popf
or
adc
lds
and
gs
icebp
call
shl
pop
sahf
xchg
lea
jno
mov
test
cmp
adc
outsl
test
ret
xchg
sti
inc
call
adc
lds
jmp
jbe
adc
lret
das
lcall
testl
and
lcall
xor
rolb
pop
int
add
iret
insb
jmp
sub
insl
or
sbbl
sub
stos
frstor
add
clc
lea
and
jg
rorl
mov
mov
in
jge
mov
push
push
jmp
pop
pop
shlb
int3
and
dec
ret
ljmp
lock
lea
cmp
pavgw
jge
cmp
add
mov
lcall
and
sti
data16
in
stos
push
mov
mov
or
stos
aad
inc
scas
and
fdivrs
adc
idivl
sub
into
mov
out
ja
jno
stos
sub
sub
or
rcrl
xlat
clc
jp
dec
mov
pop
hlt
inc
test
stos
adc
std
add
mov
test
iret
adc
cmp
and
adc
push
sbb
dec
pop
mov
mov
and
pop
into
lret
push
iret
xchg
dec
loope
jne
orb
pop
test
jnp
rclb
scas
jecxz
xor
imul
rcll
adc
sub
es
adc
sbb
cmp
pop
out
dec
shrb
dec
pop
and
rolb
push
lods
addr16
adc
pop
pop
pushf
addl
sbb
cmp
fcmovb
cltd
call
mov
xchg
test
pop
int3
mov
xlat
enter
mov
push
and
scas
jno
stc
jo
out
jmp
dec
cmp
jl
les
jp
fs
pop
popl
sbb
sub
les
stc
popf
jbe
iret
imul
mov
mov
jge
pop
outsl
test
mov
inc
add
mov
inc
and
testl
in
roll
mov
push
xchg
out
test
sbb
xor
cmp
sbb
adc
jle
pop
mov
jns
mulb
jae
or
pop
sbb
test
jp
sti
adc
and
cmp
jne
dec
icebp
mov
push
dec
and
ljmp
jno
mov
lret
lea
xchg
push
inc
sbb
in
xor
shrl
jp
mov
push
mov
xor
pop
test
sub
sahf
in
in
inc
test
insl
xor
mov
inc
push
call
loopne
mov
jne
aam
push
push
popa
add
cmc
cmpsl
ljmp
fisubrs
mov
fs
addl
cmp
dec
cltd
data16
jno
push
inc
mov
jge
ret
loope
jo
cli
cld
pop
add
sub
dec
xchg
jmp
add
inc
jle
xlat
outsb
mov
cmpsb
sub
lret
lret
push
repz
or
push
mov
cmp
sub
arpl
icebp
fwait
jne
adc
adc
loopne
scas
inc
xlat
pop
loope
or
xchg
jmp
jmp
pop
and
sub
pop
add
cmpsl
mov
in
mov
mov
and
pop
dec
pop
aad
pop
sub
cli
fimuls
mov
push
mov
popf
addr16
push
push
pop
mov
lahf
cmp
cld
scas
mov
mov
adc
and
mov
push
pop
in
int
cmp
mov
pop
pusha
fwait
in
scas
test
mov
dec
mov
int3
mov
mov
not
mov
jl
xchg
mov
xor
and
out
push
or
es
sbb
fiaddl
faddl
mov
into
jnp
inc
outsb
mov
stos
sbb
adc
mov
pop
nop
in
pop
mov
test
orl
xchg
sub
cmp
jno
mov
sbb
mov
in
bound
aas
stos
or
mov
loopne
out
jo
xchg
cmpsl
inc
mov
leave
stos
std
dec
outsl
lods
idivb
fnstenv
lods
gs
ss
addr16
fidivl
push
outsb
pop
ss
inc
fwait
ja
sub
inc
les
repnz
mov
mov
jo
or
ds
mov
les
daa
mov
scas
fimuls
pop
or
fimuls
dec
and
xchg
repz
iret
or
mov
xchg
and
push
outsl
mov
jecxz
in
jno
out
fnstsw
shrl
jns
pop
and
jle
sub
cltd
cwtl
lret
mov
cmp
push
inc
cmp
js
out
lret
dec
push
add
cmp
adc
mov
ljmp
popa
arpl
sbb
fiadds
je
xchg
push
lea
or
insb
stos
inc
pop
fsts
fistps
sahf
or
cmp
or
jmp
insl
fcmovnb
jne
mov
sti
jl
fstpt
push
jle
outsb
aaa
and
push
adc
fucompp
mov
jg
sub
shlb
lock
push
mov
inc
mov
stc
pushf
shlb
scas
inc
in
dec
or
add
cmp
mov
mov
clc
enter
rclb
ja
addl
mov
movhps
int3
loopne
jbe
cwtl
xor
daa
lcall
or
jbe
mov
movsl
add
sub
negl
rcll
frstor
pop
rclb
jno
daa
je
ffree
cld
jbe
mov
dec
rep
in
lcall
les
in
ja
xchg
loop
jb
xor
test
sbbl
imul
cwtl
or
dec
adc
loop
jae
or
lds
stos
cmpsb
mov
xorb
inc
adc
fbstp
outsb
inc
ja
in
aas
ljmp
push
cld
cwtl
scas
push
enter
mov
pop
int
jae
sbbb
stos
jb
fsubs
mul
hlt
inc
xor
jo
movsl
pushf
cmc
sbb
add
test
ljmp
ss
mov
adc
xchg
mov
add
out
lods
push
push
sub
mov
repz
test
scas
lret
jo
fs
mov
repnz
stos
inc
ss
aad
xor
pop
inc
cmp
repnz
xchg
pop
mov
xchg
shl
fildll
call
dec
jne
cmp
in
aad
addb
inc
dec
sbb
cmpsl
out
push
push
xor
js
fs
cmp
cmc
jns
mov
pusha
mov
dec
pop
addl
pop
adc
push
push
inc
sub
inc
lcall
movl
ljmp
mulb
xchg
dec
xor
jl
jmp
push
cmp
cmp
push
test
scas
cld
lret
cli
in
setge
dec
call
jg
rclb
daa
enter
lahf
outsl
leave
inc
mov
subl
mov
lcall
arpl
push
pop
or
movsl
stos
inc
ret
enter
test
adc
mov
mov
mov
adc
adc
ret
cld
ja
sbb
pop
test
push
stos
mov
mov
clc
fcomi
inc
outsl
push
and
ss
cmp
sar
repz
cltd
mov
outsb
push
add
sub
xchg
out
mov
inc
rclb
adc
aaa
rcll
sbb
mov
inc
test
jg
insl
daa
adc
nop
stc
push
mov
or
add
mov
jbe
cmp
push
pop
int
sbb
push
scas
add
push
cmp
push
push
xor
je
mov
mov
mov
out
inc
sub
imul
pop
in
aas
and
stos
int3
cmpsb
sbb
shlb
jg
xchg
loopne
sub
addr16
iret
int3
xchg
popa
cmp
mov
sbb
in
repnz
pushf
ljmp
push
xor
mov
push
cld
xchg
loopne
xchg
push
outsl
pop
jae
sbb
dec
add
shll
add
jno
mov
fdivs
add
sbb
mov
fwait
and
mov
in
aad
mov
cmpsl
fscale
cmp
test
leave
push
mov
cmp
mov
or
adc
push
dec
mov
iret
adc
incb
or
or
mov
mov
repnz
fwait
sti
jl
addr16
int3
sbb
or
mov
loop
daa
sub
imulb
cwtl
mov
int
or
xchg
loopne
dec
ss
mov
or
mov
fnsave
mov
imul
sub
push
xchg
es
fstps
mov
arpl
sub
faddl
xchg
sahf
xchg
push
nop
call
push
in
lret
aad
add
inc
pop
push
es
push
pop
movsb
push
xlat
cwtl
jge
or
sbb
dec
jbe
ds
pop
mov
mov
icebp
jno
notl
push
das
push
insl
out
mov
cld
jge
into
addr16
inc
ja
mov
jo
nop
xor
ror
sahf
pop
pop
repz
pushl
test
jne
xor
out
and
std
dec
das
inc
lahf
cs
js
pop
push
sub
hlt
pop
inc
in
subb
lahf
xchg
or
sub
popa
cmpsl
pop
fs
jmp
je
mov
in
xor
cmp
loope
sbb
jl
pop
add
push
es
sti
jns
push
aam
sub
jecxz
mov
mov
inc
lahf
je
data16
sub
and
jmp
into
cld
hlt
mov
sbbl
daa
ficoml
xor
push
decb
cmp
shll
xor
shrb
repnz
inc
shl
je
inc
hlt
std
out
clc
out
cld
jne
xor
lock
xlat
stos
std
jae
inc
pop
addr16
xchg
inc
aad
xor
ret
mov
sub
outsb
lds
movd
adcb
xchg
sub
sarl
or
punpckhbw
pop
sti
jg
into
mov
jne
and
dec
and
orb
inc
iret
flds
adc
cmp
pop
sbb
inc
jae
mov
mov
xchg
out
lahf
add
scas
cmpsl
cmp
fcmovnb
or
jbe
mov
adc
dec
or
or
push
xchg
fsubrs
lcall
decb
enter
out
jecxz
jp
rep
mov
outsl
sub
xchg
xor
inc
test
rorb
mov
pop
xchg
pop
rcrb
fwait
movsb
fwait
icebp
mov
lcall
lcall
and
mull
notl
mov
adc
insb
addr16
xor
fmull
jae
insb
insl
ror
shrl
or
lea
mov
fyl2xp1
dec
pop
lret
cmp
ja
and
mov
rorb
pop
loope
outsl
or
dec
sahf
dec
fidivs
add
das
adc
xorl
fs
cmpsl
cs
into
and
xchg
jg
daa
stos
daa
sub
lret
lds
lods
jle
adc
sub
lock
mov
or
add
es
pop
out
and
jp
into
xorl
sbb
test
dec
pop
add
jp
outsb
push
mov
xorb
test
rsqrtps
shr
enter
push
mov
pop
loopne
imul
mov
push
addr16
dec
lock
iret
mov
push
imul
cmp
jle
push
andb
mov
rcll
add
xchg
icebp
enter
push
sub
cli
imul
cmc
add
dec
inc
out
push
ljmp
push
xor
mov
fwait
sbb
sbb
adc
and
mov
and
xor
sub
stos
dec
sarl
sub
cmpsb
outsb
aam
out
js
push
ljmp
dec
pop
mov
inc
loope
pop
pop
fnsave
cmp
jne
xor
xchg
movsb
dec
insb
jecxz
movsb
mov
enter
inc
cmp
dec
push
lods
and
push
xchg
lea
push
lcall
fucomp
dec
jle
cmp
imul
pop
pop
jne
mov
xchg
sbb
and
stc
xchg
xchg
dec
jno
inc
dec
fimull
arpl
cmp
test
or
lret
or
lods
in
and
cmp
pusha
cwtl
push
arpl
mov
mov
sbb
ljmp
fsts
pushf
pop
cmp
aad
std
push
sub
sub
cld
sarb
mov
repnz
add
cmp
inc
fildl
inc
mov
ret
jns
aas
dec
inc
lds
cmc
lahf
subl
icebp
push
movsl
enter
cs
dec
mov
mov
add
pop
ret
ret
leave
or
or
mov
dec
repz
mov
cmp
push
imul
adc
push
gs
aas
into
pop
mov
idiv
dec
negl
imul
lret
lahf
test
arpl
sti
inc
inc
or
stos
fsubr
add
stos
pop
ret
mov
fnstcw
cmc
fwait
pop
ja
js
lock
scas
mov
stc
mov
or
test
ljmp
imul
popf
dec
subl
dec
cli
addr16
in
sti
mov
sbb
outsb
xchg
mov
push
xorb
adc
pop
jg
addr16
cltd
push
fisubs
pop
inc
cld
mov
mov
icebp
mov
push
xlat
jle
mov
ja
movsl
notl
cmp
daa
or
and
sbb
dec
test
xor
test
pop
cld
inc
ja
insb
xor
addr16
mov
aad
inc
frstor
adcb
stos
or
push
push
pop
cmp
adcb
push
imul
cmp
add
cli
sub
dec
das
sbb
mov
jmp
cmp
inc
lcall
cmp
jecxz
xchg
call
iret
and
push
cs
dec
int3
sub
leave
nop
xlat
mov
loop
test
jecxz
pop
mov
in
cmp
repz
jmp
dec
clc
mov
xor
rol
sub
rcll
cmp
push
mov
dec
xchg
cmpsl
or
out
push
insl
cmpsb
ja
das
icebp
leave
push
test
sub
aad
push
lods
push
dec
cld
icebp
iret
repz
ljmp
jmp
xor
and
lods
lret
xchg
jle
sub
mov
xor
je
mov
xor
in
sub
jo
movsl
data16
insb
flds
jg
aad
add
push
sub
mov
lods
jno
incb
or
shlb
cli
cli
mov
stc
jns
mov
xor
test
jg
addr16
in
dec
mull
inc
and
test
out
in
and
jecxz
mov
cmp
loopne
xchg
mov
pop
cmc
and
fidivrs
dec
jbe
adc
pusha
jnp
mov
hlt
sbbl
jae
pop
sysexit
in
pop
lock
scas
add
nop
mov
ja
sahf
ss
mov
inc
mov
push
stc
cmp
adc
xchg
or
lahf
cmp
int3
je
add
jnp
lahf
pop
rclb
inc
rcll
std
and
xlat
sbb
and
xchg
xor
popa
outsb
gs
adc
std
and
sub
push
or
movsl
aam
pop
fdiv
dec
addr16
ret
inc
push
mov
or
mov
icebp
dec
cmpsl
fnsave
mov
mov
mov
mov
or
out
jge
shll
cmp
dec
mov
pop
pop
cltd
aas
outsl
aaa
push
ret
mov
sahf
imul
lahf
sub
in
cmc
cmp
xchg
xchg
fisubs
divl
push
add
jg
sub
shll
ja
push
mov
aam
scas
jecxz
stos
mov
sub
scas
scas
test
xchg
mov
jl
push
add
ja
inc
pusha
dec
sub
sti
push
out
inc
pop
push
sti
push
push
or
ret
xlat
jecxz
and
mov
push
cli
cs
arpl
orb
cltd
movsb
pop
mov
dec
xor
imulb
inc
daa
rol
mov
jbe
shl
jg
into
test
inc
push
shll
push
jnp
bound
inc
aad
scas
mov
jbe
mov
push
iret
in
call
pop
mov
stc
movsl
xchg
out
fldcw
mov
push
in
in
ret
mov
mov
xchg
and
rdmsr
or
jmp
lret
rol
ss
jmp
dec
xchg
mov
mov
pusha
cmp
stc
push
mov
xchg
and
or
cltd
pushf
xor
add
sub
push
jne
lods
test
lcall
xor
stos
es
mov
add
sbb
repnz
mov
cld
in
and
and
adc
xchg
test
pop
test
xchg
xor
xor
cmpsl
in
mov
jb
mov
add
jns
cmp
aas
add
inc
std
lock
cmp
bound
inc
rcrl
das
xor
outsb
mov
add
cmp
insb
rcll
adc
add
mov
jle
adc
jmp
fbstp
fisubrl
loopne
daa
cmp
add
add
dec
inc
xchg
mov
jl
lods
shlb
xchg
cli
pop
loopne
jg
andl
mov
and
shll
sbb
and
loop
in
loope
dec
xchg
filds
or
sbb
and
in
push
mov
bound
stos
dec
add
sub
mov
cmc
jbe
push
push
mov
sub
adc
cmpsl
xor
sbb
inc
ret
jae
les
gs
sbb
test
sub
xchg
sbb
rorb
dec
stos
fwait
sub
and
lret
cmp
inc
flds
mov
and
and
icebp
es
xchg
inc
pop
pushf
mov
cwtl
out
lods
rorl
aaa
dec
pushf
or
mov
and
or
addr16
lock
arpl
in
mov
js
enter
gs
dec
sub
call
sahf
or
xlat
jg
loopnew
int3
push
mov
lock
into
push
notb
repnz
pop
sub
mov
sahf
push
pop
addb
int3
movzwl
push
ds
and
cwtl
dec
mov
cli
stos
push
jg
bound
mov
divb
in
inc
pop
mov
stos
imul
loop
pop
jne
loope
dec
push
adc
shl
notb
xchg
lret
cmc
sbb
sub
ret
sub
cmp
loop
gs
fldcw
fxch
mov
pop
inc
push
call
daa
lock
mov
sbb
pop
out
movsb
outsb
or
xchg
cmp
pop
scas
imul
cmp
repnz
cmp
andb
mov
mov
mov
mov
out
pop
rolb
push
pop
leave
xchg
lock
jg
scas
xor
inc
inc
cmpsl
les
xor
cmp
pop
push
out
fs
pop
mov
jae
lea
out
sub
mov
adc
or
fmull
mov
int3
stc
pop
cmp
xchg
test
add
mov
jb
lret
imul
or
and
pop
fbld
adc
in
adc
mov
insb
shlb
sarb
div
and
cmp
xor
daa
daa
repz
or
in
jmp
cli
mov
in
shrl
inc
jmp
roll
inc
push
arpl
jbe
push
stc
lds
fs
jnp
mov
xchg
pop
xchg
fst
or
loopne
inc
xor
cmpsb
mov
inc
gs
xchg
cli
xchg
jge
ficompl
mov
dec
out
aaa
aam
outsl
cli
cli
in
stc
loope
mov
mov
jg
jp
enter
sahf
xor
jge
repnz
jge
mov
pop
rclb
mov
mov
mov
repz
push
out
repnz
jns,pt
and
cld
add
scas
inc
inc
hlt
ljmp
insb
lods
jle
mov
pop
cmpsb
mull
pop
push
adc
cmp
push
jne
pop
cmp
in
mov
xchg
test
data16
andl
or
shll
mov
loop
out
sub
xchg
or
sub
jl
mov
xchg
jmp
push
ret
mov
and
xchg
inc
icebp
sub
xchg
add
sub
jl
add
xchg
imul
in
jl
ljmp
shlb
movsb
push
idivb
jp
xchg
leave
or
call
cmc
pop
or
cwtl
push
xchg
inc
lahf
add
inc
orb
std
sbb
lahf
stos
ljmp
out
mov
ss
xchg
xchg
or
push
and
push
into
pusha
jle
adc
add
xor
jle
mov
movb
roll
xor
aaa
lods
mov
stos
out
or
addr16
push
jne
iret
enter
jecxz
cmp
mov
push
mov
addr16
sbb
jae
fnstcw
fildll
jbe
data16
push
inc
inc
lods
sbb
jno
sub
out
aad
js
sub
dec
into
mov
das
xchg
rcrl
mov
imul
xchg
jbe
int3
imul
fiaddl
add
jl
xchg
lock
popf
mov
push
adc
mov
mov
mov
cmp
arpl
cmp
insb
jmp
mov
xchg
cmp
xor
outsl
xor
out
jae
sbb
pop
shrl
pop
hlt
xrelease
or
andb
imul
nop
aad
inc
sub
inc
inc
loopw
lcall
pop
inc
dec
lock
mul
mov
inc
xchg
fmuls
rorb
mov
rcll
fbld
ds
sub
sbb
cld
hlt
je
pop
or
mov
rcrl
add
addr16
stc
push
and
cli
dec
roll
inc
mov
dec
fdiv
mov
add
cmpsl
fwait
jecxz
push
jb
sti
or
fstpt
pop
jne
out
ja
push
mov
lcall
aam
jmp
repz
mov
in
ljmp
add
pop
sbb
icebp
rorb
mov
jl
outsb
rorb
aad
ds
daa
lea
aaa
dec
xor
arpl
sbb
fsubs
fists
dec
xchg
sub
mov
xor
cs
mov
mov
dec
scas
loop
sarb
xchg
adc
cmp
push
pminub
int
dec
lret
mov
aas
outsl
pop
jp
rorl
loop
jmp
xchg
sbb
and
rcrb
xlat
push
and
out
cmp
cltd
cwtl
inc
adc
pusha
jb
mov
or
rolb
lahf
int3
cwtl
clc
aad
fwait
inc
sbb
pushf
and
aad
pop
sub
add
arpl
lret
cmp
xor
add
jae
jb
mov
mov
mov
push
mov
pushaw
nop
and
cld
mov
sbb
addr16
adc
clc
roll
jg
addr16
in
ficoms
and
mov
jae
dec
pop
xchg
fadds
lcall
testl
adc
call
inc
loopne
fistps
jle
push
adc
ficoml
lea
sub
lea
mov
aaa
mov
lock
jmp
sbb
mov
pop
dec
mov
push
adc
mov
repz
mov
rorl
lock
outsb
repnz
mov
pusha
loopne
int3
lret
aas
mov
data16
xchg
movsl
mov
out
stos
sbb
in
int
sbb
mov
or
ja
stos
movsb
and
cmpsb
cmp
iret
call
movsb
fnstsw
testl
data16
cwtl
fstl
push
push
mov
mov
adc
filds
mov
sub
aam
shll
cli
pop
adc
sbb
xchg
or
mov
aad
mov
test
mov
adc
mov
pushf
lock
xor
mov
jcxz
cmc
add
dec
push
into
mov
daa
xchg
sahf
cmpsl
xorb
add
fcompl
mov
push
pop
mov
andb
cs
mov
pop
push
push
jp
xor
adc
in
push
jg
jb
mov
loop
outsl
aas
cmp
jb
mov
outsl
ja
ret
push
and
enter
xchg
adc
iret
out
cmp
cld
shrb
push
lahf
cli
adc
in
dec
inc
ret
add
or
push
dec
cld
xchg
or
jmp
mov
mov
loopne
ja
mov
add
jb
push
mov
jae
push
out
pop
sbb
pop
int3
dec
mov
sub
jg
arpl
jae
cmp
or
fwait
xlat
lcall
insl
xor
jmp
xchg
or
add
ss
lcall
aad
out
adc
mov
in
pop
les
outsb
mov
movsb
pop
add
mov
jae
xchg
pop
iret
test
in
push
scas
jne
filds
jg
call
sarl
xlat
lods
adc
cmp
pop
mov
loope
or
jno
mov
add
xchg
mov
cmp
movsb
sub
arpl
cmp
push
mov
iret
pop
scas
jp
sub
fdivrl
sub
mov
mov
faddl
ret
inc
test
loopne
push
adc
rcrb
jge
mov
imul
sub
sub
addr16
or
loopne
leave
les
not
push
loope
notl
and
push
hlt
popf
pop
xor
test
add
sub
enter
adc
lds
ds
in
std
das
sarb
push
push
jecxz
xor
data16
push
loopne
lods
xor
aas
leave
fisttpl
stc
ljmp
mov
or
arpl
mov
leave
lds
movsb
data16
jl
or
mov
testl
fisubrs
sti
fsubr
movsl
xchg
jp,pn
mov
sub
jb
jg
sub
enter
mov
push
cmpsb
adc
xchg
sbb
mov
iret
addr16
int
call
call
jmp
mul
cmp
ljmp
sbb
cmc
adc
sbb
xor
fisttpl
loop
dec
icebp
inc
adc
pop
add
faddl
adc
lds
mov
jmp
inc
test
xor
popa
data16
rcrb
lret
cmp
aaa
mov
ret
cld
xor
call
lret
push
test
fisubrl
loop
and
and
mov
dec
adc
sbb
mulps
out
frstor
lods
adc
mov
mov
sbb
inc
rcr
ds
push
imul
mov
fdivr
mov
mov
xchg
mov
jo
inc
and
stos
lret
mov
adc
adc
lods
dec
mov
imul
pop
cmpsl
sub
aas
dec
pop
sbb
mov
dec
push
xchg
inc
mov
jb
sbb
jns
mov
xchg
shrb
out
imull
aaa
pop
out
aad
fwait
dec
pop
idivb
ss
xchg
adc
sub
addr16
imul
mov
and
loopne
push
pop
jg
int3
push
cmp
rcrb
sub
insl
movsb
jg
outsb
mov
sbb
inc
sub
jle
daa
xor
daa
loopne
mov
push
sbb
or
adc
les
adc
fmul
shrl
mov
rorb
inc
push
xchg
clc
movsb
pushl
fisubl
scas
bound
jns
addr16
in
data16
xchg
mov
xor
sub
xchg
add
pop
mov
pusha
fsub
lcall
lea
daa
mov
dec
ljmp
xchg
ja
jo
into
cltd
sub
dec
imul
pushf
sahf
loopne
aaa
lds
js
adc
jle
sbb
gs
insb
or
jle
addr16
shll
lret
out
inc
enter
loope
lcall
pop
jnp
pop
test
mov
mov
push
inc
sub
addr16
inc
call
arpl
pop
dec
dec
ja
fdivs
mov
rcll
or
cmp
xchg
mov
test
in
xchg
add
inc
sbb
sub
mov
call
cmp
pushl
pushf
out
es
pop
int3
inc
or
push
mov
addr16
push
inc
mov
pop
sub
hlt
push
dec
cmpsb
xor
mov
dec
sbb
xor
jne
scas
rorl
xchg
inc
push
push
mov
int3
dec
mov
push
bound
data16
imul
mov
mov
mov
cmpsb
mov
xchg
ficoml
lods
mov
lcall
push
stos
jl
stc
dec
bsf
adcb
add
ds
push
mov
mov
sbb
xor
or
rcl
jmp
rorb
pop
aaa
int
nop
leave
repz
dec
in
lods
adc
sbb
ficomps
outsb
test
lods
testl
adc
cmc
pop
test
outsl
lahf
scas
xchg
mov
xchg
lret
lahf
pop
mov
xchg
orl
xor
and
mov
arpl
inc
imul
stc
daa
xlat
fistps
xor
sbbb
mov
xchg
stos
out
fildl
outsb
gs
pop
inc
imul
scas
std
push
xchg
sub
sti
adc
mov
sahf
nop
xor
or
int3
cmp
inc
xor
pop
mov
popa
iret
adc
jmp
add
adc
fs
cmpsb
imul
xchg
int
mov
outsl
stc
and
xor
cmc
mov
out
cmpsl
lcall
cmpsb
push
push
jp
xchg
jno
push
loopne
pop
test
or
xor
and
adc
out
mov
mov
negl
sub
jl
repnz
adc
pop
cmpsb
fstpt
lods
in
pop
out
or
jp
loop
lock
pusha
xor
cmp
and
iret
in
test
jbe
in
inc
mov
adc
sti
adcl
and
lds
push
sbb
cmpsl
cmpsb
sub
push
imul
popa
shlb
dec
out
sub
shrl
push
mov
mov
in
add
lock
fldenv
les
fcomi
inc
repz
xor
cmp
int3
add
shlb
inc
add
cs
dec
out
icebp
mov
call
adc
outsl
pop
ret
mov
clc
stos
add
mov
pop
imul
xchg
jae
cli
stos
mov
out
icebp
xchg
jno
imul
lds
loope
add
sbb
xchg
xor
pop
fs
mov
lret
leave
cs
xchg
pop
ljmp
mov
xchg
cwtl
enter
mov
sbb
pop
int3
stos
les
dec
movsl
xor
rcll
dec
pop
orl
xor
push
xor
dec
inc
fstp
stc
mov
cmp
xchg
mov
out
dec
fsubl
stos
nop
jge
mov
mov
mov
mov
mov
xor
testl
iret
or
push
sub
aad
loope
xor
aad
jo
rclb
xlat
cmp
xor
fcoml
fwait
inc
lock
sbb
in
out
inc
mov
cmp
sub
icebp
cmp
jle
mov
add
cmp
inc
and
repz
icebp
mov
or
js
xor
pop
jl
add
inc
sti
in
insb
push
xor
out
incl
sahf
test
xchg
aas
pop
or
jecxz
pop
lret
xor
cmc
add
mov
push
jge
mov
sti
mov
sbb
push
lock
jb
cmp
sarl
lret
aad
loopne
ljmp
outsb
pop
leave
shlb
dec
shrb
sbb
and
adc
addb
call
into
repnz
es
inc
ret
xchg
scas
cltd
or
push
xor
dec
pushl
cmp
xchg
lcall
xor
push
mov
mov
std
icebp
add
pop
inc
sbb
int
xchg
xor
xorl
stos
jo
cmp
cmp
jne
pushf
loope
dec
push
jae
adc
mov
fnstenv
ja
xchg
leave
in
inc
or
push
daa
int
jg
mov
dec
sbb
pop
les
jns
mov
dec
inc
mov
inc
frstor
mov
sub
xlat
dec
mov
arpl
sub
cmp
sub
std
sbb
jno
adc
sbb
dec
xchg
rorb
mov
cmp
std
outsb
test
icebp
rcrb
ds
mov
xor
mov
cmp
xchg
dec
gs
cmpsl
push
pop
jmp
rorb
std
jno
cmp
addl
popf
push
jbe
repz
aaa
jno
test
rcrb
icebp
mov
aam
push
jno
or
push
int3
jo
inc
stc
sub
sbb
lcall
stc
sbb
and
xor
ja
xor
mov
insl
out
jnp
ret
pop
daa
xlat
in
sbb
pop
sbb
cmp
loope
push
or
xor
mov
inc
sarl
push
xchg
mov
push
ds
and
dec
call
rorl
cmp
scas
or
jmp
mov
mov
insl
push
es
scas
js
in
xchg
sbb
repz
stc
push
loop,pn
lds
loope
add
sbb
test
or
stos
lahf
lahf
outsb
xchg
enter
pop
or
mov
pop
popf
neg
pop
inc
mov
jmp
and
mov
fs
leave
test
ljmp
dec
xor
sbb
push
repnz
ja
fwait
mov
add
mov
fcmove
adc
mov
sbb
js
xchg
pop
rorl
jl
js
jo
out
fstl
jae
js
sti
inc
mov
sahf
jle
sub
xor
cwtl
pop
push
pop
popa
xor
jnp
cmpsb
xlat
mov
mov
les
sar
lahf
lea
sti
mov
lret
cld
imul
pop
jno
pop
cmp
pop
ss
jnp
push
xor
jge
loop
insb
daa
cld
lock
sahf
sbb
cmp
sbb
cld
cmp
push
push
xchg
in
pop
mov
sarb
add
repz
lcall
pop
movsl
insb
das
ret
sbb
enter
test
xchg
loop
js
in
fsubrs
dec
sbb
out
int
scas
inc
sub
jo
cltd
loop
std
jle
mov
or
or
cmp
daa
add
cmc
popa
insl
enter
sub
cmp
nop
dec
fidivrs
rol
into
pushf
push
push
push
mov
lret
mov
jecxz
jle
push
out
shrb
leave
xor
mov
enter
ud2
ja
ds
add
push
inc
cs
add
jg
mov
jno
out
hlt
jo
add
add
imul
data16
fisubrs
jmp
inc
cwtl
shrl
jns
adc
pop
arpl
clc
inc
ja
xchg
and
loopne
mov
in
mov
dec
xchg
pop
sub
outsb
or
jp
cmpsb
rcrb
faddp
js
divl
inc
fwait
clc
mov
pop
lods
sub
mov
xchg
push
adc
rcll
push
call
dec
sbb
cmpsl
mov
mov
xor
inc
jmp
xchg
xchg
ret
test
mov
inc
pop
loop
test
loope
out
xchg
and
or
push
mov
sbb
mov
jecxz
icebp
jg
xor
pop
loope
xchg
hlt
mov
mov
cmpsl
xchg
mov
nop
in
bound
ss
call
dec
popf
aam
and
adc
xor
les
adc
pop
enter
rcr
pop
mov
pop
jp
jmp
pusha
mov
stos
pop
aam
gs
int
or
dec
repz
out
push
push
mov
loop
femms
sbb
cmp
enter
lahf
or
xchg
jg
mov
sbb
inc
mov
int3
xchg
cwtl
mov
add
dec
adc
loope
fs
adc
pop
lea
lahf
das
sbb
in
mov
aas
fsubl
and
push
push
fidivs
test
loop
js
stos
cmp
nop
xchg
movsb
sub
adc
xchg
insl
pusha
int3
jne
lret
ds
mov
xor
sahf
call
mov
cli
movsb
sbb
pop
mov
adc
sti
aaa
popf
jl
sub
jle
shlb
adcb
jl
jmp
shrb
push
scas
and
sbb
mov
popa
mov
mov
adc
outsb
cs
jmp
sub
xchg
push
cli
ss
adc
push
inc
or
insb
out
mov
inc
xchg
lret
dec
call
cli
jae
pushf
mov
xor
dec
iret
rclb
cmp
dec
xor
add
jne
lcall
xlat
or
inc
mov
or
cmp
xchg
mov
test
jg
xchg
xchg
fcoms
test
out
pop
push
add
orb
jecxz
aad
cmpsl
imul
sbb
je
fisttpll
sbb
imul
adc
xchg
fisttps
cmpsl
pop
mov
test
je
in
mov
rol
stos
jns
sbb
jl
or
pop
xor
cltd
mov
leave
movsb
sbb
dec
push
mov
insl
ja
push
push
dec
xor
ret
iret
xchg
les
enter
not
scas
pop
push
xor
jmp
mov
adc
cmpsl
jno
cmp
lcall
pop
push
mov
into
add
insb
lock
int
ds
test
or
ja
loop
xchg
sub
sbb
pop
lahf
imul
and
jnp
pop
xor
mov
inc
inc
add
ja
pop
outsb
push
push
and
icebp
xchg
inc
xchg
fdivrl
lock
mov
in
xor
out
jp
and
fld
sarb
gs
xor
or
mov
divb
sar
cmp
fcmovbe
sbb
xsavec
std
mov
or
mov
or
in
sub
lock
in
loopne
scas
lcall
adc
insl
adc
dec
movsb
test
mov
push
inc
dec
lahf
imul
cmpsb
js
lcall
adc
aad
xchg
mov
add
push
test
stos
outsb
icebp
cmp
repz
sub
xchg
or
jmp
and
jns
push
mov
adc
faddp
fmuls
and
push
lds
aad
cmp
adc
neg
inc
scas
mov
jl
in
add
and
pop
mov
sbb
rcr
repz
jmp
push
dec
jae
fdivrl
xchg
add
and
jno
jnp
and
mov
cmp
sbb
popa
xchg
sbb
mov
mov
sub
imul
xchg
inc
push
mov
and
mov
mov
sbb
enter
test
leave
mov
daa
clc
lcall
dec
ficomps
lahf
adc
adc
adc
or
add
js
movsl
inc
add
cmp
hlt
ret
fimuls
mov
lahf
into
cld
pusha
adc
xchg
cmc
mov
and
add
pushf
pusha
popf
mov
sub
xchg
mov
outsl
testl
cmp
mov
fcmovbe
cmpsl
fcmovu
mov
pop
sub
dec
xchg
sbb
imul
add
mov
and
jmp
push
jnp
dec
int3
and
sub
imul
push
sub
enter
sbb
or
gs
jmp
push
xor
xor
loopne
icebp
cmpsb
xor
divb
nop
repz
mov
stc
xchg
clc
jge
js
jno
call
jns
lods
in
jb
mov
stos
xchg
jle
sbb
mov
adc
imul
stos
push
xor
lods
clc
push
cmpsb
xchg
cmp
ret
mov
jno
shll
aad
jl
push
sub
popa
loopne
insb
rcr
adc
cmpsb
sbb
xchg
jp
dec
test
sbb
inc
or
test
lahf
mov
bound
jl
sbb
sti
push
cmc
pop
sub
xor
icebp
mov
and
iret
inc
xlat
dec
jnp
cmp
int3
dec
adc
fxtract
int
cmpsl
mov
in
push
stos
jae
loope
push
out
stc
insl
imul
stos
jbe
and
adc
xchg
jg
push
cld
and
loope
mov
mov
dec
cmp
push
pop
jae
inc
pop
test
add
icebp
loope
daa
pop
sbb
loop
xchg
mov
les
mov
pop
adc
aas
mov
push
outsl
data16
enter
mov
fnstsw
hlt
cwtl
mov
sbb
out
in
dec
ret
rcrb
mov
pop
mov
mov
xlat
sbb
dec
xor
clc
mov
mov
cmp
lea
mov
imul
mov
xor
les
cmp
cltd
fistpll
pushf
iret
inc
movb
jns
or
lret
mov
cmc
pop
add
push
adc
sub
test
cli
aad
xchg
je
add
ret
clc
jge
shll
in
jae
mov
movb
jne
int
push
inc
frstor
mov
aad
cld
fisubrs
xchg
xchg
test
xchg
mov
xor
fisubrs
dec
sbb
push
jle
fdivs
mov
lret
movsl
in
fldpi
mov
lds
into
add
mov
fs
test
pop
mov
sti
out
pop
dec
mov
call
jge
and
stos
shlb
xlat
sahf
cmp
xchg
xor
lods
testl
sbb
call
pop
mov
arpl
mov
sub
push
mov
cmp
jecxz
and
rorb
fwait
mov
add
nop
mov
loope
imul
loopne
jp
nop
push
sbb
lods
pusha
in
jne
or
cwtl
and
or
sub
sub
movsb
je
cltd
ljmp
sub
dec
jg
popa
fildll
imul
insl
push
fs
in
jle
add
icebp
jp
std
pop
xor
cmp
jge
dec
clc
jecxz
mov
cmp
pop
jmp
js
fadd
adcl
ret
es
mov
ficompl
pop
add
fwait
push
in
fdivl
lcall
subl
push
icebp
or
xchg
sbb
cli
shll
pushf
sbb
push
jb
xor
pop
fdivrl
dec
test
inc
cld
inc
push
mov
add
roll
adc
arpl
mov
adc
mov
and
shufps
mov
outsb
pop
sbbb
jp
sbb
fmuls
push
call
lods
subb
push
jnp
mov
jg
xchg
out
insl
and
mov
adc
in
jno
orb
jecxz
add
std
jmp
xor
ja
loop
pop
cmpsb
ss
dec
cs
lret
clc
sub
or
cmpsb
lods
sbb
enter
mov
mov
cltd
daa
xor
xlat
push
loop
jns
inc
dec
mov
pop
or
loopne
push
mov
xchg
jae
jnp
sub
in
xor
cltd
mov
negl
jg
imul
sbb
sbb
cmp
scas
inc
sub
repz
mov
xchg
outsb
jge
mov
mov
cmp
cmpsb
push
sub
adc
pop
xchg
sahf
jns
mull
aaa
insl
sti
mov
pop
sarb
add
mov
cwtl
inc
push
fdivrs
addr16
cmp
sahf
repnz
xchg
push
iret
daa
add
int
cwtl
mov
fistps
clc
sbb
mov
inc
sbb
mov
jmp
pop
sub
out
fs
insb
fwait
call
loopne
push
shll
adcb
movsb
mov
mov
mov
lcall
outsl
sti
push
rclb
push
pop
in
mov
mov
loop
adc
fdecstp
push
and
push
in
xor
insl
dec
push
push
ret
imul
jl
lea
pop
mul
arpl
das
pop
adc
and
div
cmp
div
and
push
loope
and
inc
mov
inc
mov
xchg
jae
bound
bnd
xchg
jg
call
push
push
mov
push
idivb
push
fdiv
shrb
mov
xchg
popa
jne
das
scas
pop
data16
dec
mov
xchg
mov
dec
jg
bound
lock
push
xlat
in
lock
lret
or
mov
pop
inc
pusha
ljmp
inc
cmp
and
mov
hlt
mov
mov
incl
in
fcomps
jp
inc
test
ret
jno
xchg
iret
xchg
sub
mov
xchg
out
and
sub
inc
imul
mov
ss
push
in
mov
jp
pop
xor
dec
jmp
pop
je
xor
pop
add
cs
add
popf
push
call
dec
sbb
nop
outsb
push
sub
aad
jl
push
lret
movsb
lock
call
jecxz
lret
xlat
jle
mov
mov
ja
pop
jge
push
addr16
stos
popa
cmp
sbb
js
or
mov
cmp
mov
jmp
aad
adcl
out
imul
ret
xchg
jecxz
shlb
iret
push
out
nop
dec
cmp
pushf
dec
pop
dec
shlb
cld
ja
xchg
xchg
stos
pop
mov
inc
sbbl
popf
mov
movsl
clc
pop
or
dec
jge
aaa
xor
jae
push
test
cltd
cmp
cmpsb
add
enter
xor
lret
fs
pop
dec
scas
mov
jle
fadds
pop
fwait
mov
leave
or
fimull
mov
test
xor
test
icebp
xchg
lcall
pop
add
or
ret
aas
inc
roll
and
xor
or
lds
lcall
scas
mov
mov
mov
mov
pop
lahf
mov
clc
lea
lods
mov
out
lret
leave
sbb
nop
mov
dec
xchg
xor
lret
sub
jne
dec
xchg
cltd
test
xor
adc
lcall
repnz
lea
int
popf
scas
fs
fmull
scas
push
add
xchg
sarl
int3
lock
div
mov
adc
sub
in
mov
iret
push
aad
leave
inc
arpl
in
xor
lods
in
cmp
inc
popa
sub
js
pop
mov
adc
outsb
jmp
test
movsl
lahf
jge
jge
fistpl
cwtl
adc
out
cld
xchg
insl
les
test
sub
enter
adc
or
mov
push
cmp
xlat
inc
out
aaa
addr16
dec
jecxz
test
and
add
icebp
das
cltd
push
je
adc
notl
lea
and
xchg
test
addb
jge
push
mov
xor
sbb
divb
mov
test
js
es
or
ljmp
sub
jge
mov
mov
mov
enter
popl
mov
jge
nop
ret
xchg
adc
mov
movsl
xor
cli
clc
jbe
xlat
insl
mov
push
ja
jmp
add
jge
cmp
mov
xchg
fs
pop
mov
xchg
cmpb
pop
sub
lods
pop
mov
cmpsl
pop
enter
jmp
enter
leave
aas
sub
cltd
cltd
add
out
ret
mov
jge
or
mull
cs
xchg
pop
inc
and
lods
shlb
xchg
fldl
inc
shr
je
into
jno
xor
test
ret
sbb
shll
mov
add
dec
in
test
xor
and
cmp
xor
jl
xor
movsl
fcomps
or
push
adc
cmpsb
js
jo
inc
daa
xor
mov
push
jp
iret
or
rcl
cmp
xchg
rcrb
addb
notl
xchg
push
sbbl
sti
adc
lods
test
mov
popa
jmp
jne
imul
and
and
shrl
out
jmp
loopne
es
or
aad
mov
push
xchg
xor
mov
xchg
inc
jb
push
jae
jl
mov
aad
adc
push
iret
push
icebp
pop
rorb
je
dec
imul
cltd
cwtl
dec
dec
insl
xchg
xchg
in
push
add
ret
pusha
sbb
std
enter
push
cmp
push
dec
jecxz
inc
adc
add
dec
add
push
arpl
xor
jle
in
cli
mov
jge
lods
jb
push
adc
insb
addr16
enter
test
out
iret
rorb
sbbb
mov
fcmovnb
lods
fdivrs
inc
stos
out
loop
mov
daa
push
popf
mov
mov
sub
lds
cmp
sarl
cld
lahf
dec
stc
mov
aas
ljmp
sbb
xchg
in
jp
repnz
stos
stc
call
cmpsl
mov
sbb
lcall
movsb
xchg
dec
xchg
fldz
aam
ds
sub
mov
mov
loopne
xor
cmp
int
dec
sahf
cmp
jo
repnz
jo
pushf
addr16
lods
icebp
xchg
mov
dec
adc
js
fcoms
int
aam
loope
movb
xor
mov
pop
lcall
data16
cltd
sti
dec
into
pushw
or
and
and
push
mov
jns
xchg
cli
cmpsb
jge
push
aaa
inc
sub
xchg
aaa
mov
and
pop
inc
push
mov
out
lds
mov
movsl
mov
add
sar
fwait
ds
movb
pop
pusha
mov
or
hlt
jo
mov
sub
test
push
xchg
fidivs
mov
xchg
les
cli
out
mov
andl
xor
pop
fs
stos
rolb
fmul
and
scas
mov
cmpsl
dec
mov
cmpsl
sub
insb
scas
xchg
pop
sub
xor
enter
ss
xor
mov
insl
shll
movsb
and
lock
cwtl
xchg
std
cmp
js
scas
gs
adc
jmp
pop
insb
cltd
cli
mov
or
shr
and
popa
dec
es
lods
cli
or
out
icebp
sbb
bound
cmp
and
dec
loope
jbe
mov
dec
and
push
push
adc
fsubrl
jg
cs
shrb
fsubrs
int
in
scas
outsl
fists
ja
ljmp
and
xor
and
or
dec
cli
add
rorb
subl
adc
pushf
stc
dec
jne
cs
sbb
jae
push
pop
cmp
ja
add
ret
insb
pop
and
dec
mov
or
mov
inc
add
or
outsl
lods
adc
rolb
inc
jle
dec
and
add
loopne
out
ja
add
dec
andl
xor
pushl
xor
stc
push
mov
mov
jb
out
gs
mov
xor
add
push
popf
cmpsl
mov
jmp
lods
daa
inc
sbb
and
jg
jbe
adc
mov
and
cltd
mov
inc
xor
insb
aam
mov
ljmp
lock
jne
xor
xchg
pushf
push
lods
aaa
mov
adcb
inc
inc
stos
or
mov
cmp
jae
das
pop
bound
test
aaa
jmp
mov
adc
in
pushf
ss
xchg
shll
mov
lods
mov
and
mov
pop
jns
push
adc
pop
adc
fmuls
shl
es
xchg
addr16
jne
repnz
icebp
es
push
pop
rorb
push
add
iret
out
std
or
ljmp
in
cmp
test
enter
inc
outsb
mov
stos
loope
mov
push
pop
ja
push
sub
aam
inc
aam
inc
dec
pop
xchg
and
dec
xchg
test
fistl
jp
push
cmpsl
in
aam
mov
cmpsb
out
imul
push
inc
mov
push
jp
aaa
shr
lods
lret
clc
jp
imul
js
push
xor
adcb
idivl
in
push
mov
cmpsl
clc
out
stos
inc
sahf
fs
divb
mov
inc
xchg
add
inc
int3
xor
and
push
addb
dec
jmp
xchg
lock
jne
dec
mov
add
inc
or
push
bound
mov
call
push
fs
xchg
add
push
mov
mov
leave
test
sbb
loope
movsb
data16
mov
insb
icebp
lret
cmpsb
es
push
icebp
sbb
rcll
xor
stos
imul
sbb
pop
xor
das
jnp
or
jecxz
das
or
leave
mov
cmpsl
sub
add
adc
xchg
test
mov
or
cs
lock
xchg
pop
xchg
mov
xchg
and
aaa
int
in
jno
adc
inc
fistpl
loop
daa
enter
int
inc
nop
pusha
jnp
mov
lcall
push
sbb
in
inc
sbb
fcmovb
test
inc
dec
mov
ja
sahf
add
add
cld
jp
out
test
outsb
xchg
pop
sbb
sbb
cmp
ret
adc
and
addb
adc
cmp
sub
aaa
negb
xchg
inc
scas
add
adc
pop
push
test
pop
rcrb
fldpi
xor
mov
xchg
jp
test
sbb
leave
jo
out
or
lret
sarl
pop
jmp
ret
or
adc
lahf
pop
dec
push
push
xorb
push
fwait
adc
les
in
push
movsl
adc
xor
bound
fcmovu
hlt
jb
cmpb
leave
mov
loopne
mov
insl
pop
adc
lret
int3
xchg
shl
mov
divl
or
ret
sahf
les
lock
add
pushf
sub
xor
xorb
lods
mov
in
out
dec
push
mov
mov
jmp
aas
mov
sub
lcall
cs
and
cli
arpl
or
inc
push
loopne
shlb
inc
mov
loope
insb
ret
jg
lds
xchg
jl
cltd
mov
add
ret
fsubl
fs
scas
xorb
mov
sbbl
test
xor
push
xchg
cmc
icebp
pop
addr16
adc
xor
dec
ja
lods
pusha
xchg
shrl
mov
bound
rcl
andl
lods
sub
mov
cmp
mov
xchg
mov
jmp
stc
imul
or
and
mov
xchg
adc
orb
and
sub
mov
push
andb
imul
xor
inc
xchg
sahf
test
xchg
jb
pop
test
nop
xor
cli
xchg
cmp
push
ret
xchg
into
adc
add
fucomp
mov
adc
push
mov
cwtl
mov
and
fidivrl
mov
sahf
mov
xor
adc
push
fwait
repnz
xor
dec
pop
fwait
addr16
cmp
and
imul
pusha
xchg
fs
mov
js
dec
sar
xorb
mov
lret
addb
gs
loop
imul
cwtl
dec
enter
mov
imul
mov
sub
rcrl
mov
mov
pop
mov
test
xor
sub
loopne
push
lahf
jg
mov
xor
data16
mov
into
insb
sub
dec
mov
jns
xor
stos
push
cld
mov
lret
mov
lcall
sub
jno
je
popf
aad
lea
jae
in
pop
push
jbe
xchg
loope
mov
leave
lahf
std
mov
push
push
lahf
mov
daa
lds
outsl
fisubrl
dec
ror
ja
into
lahf
xchg
sub
hlt
mov
loop
and
mov
push
inc
adc
cmp
push
std
pushf
movsl
aam
pop
sbb
jae
dec
test
pop
push
sarb
xchg
mov
loope
mov
xchg
hlt
mov
mov
pop
in
pop
ret
sub
fidivs
addr16
jb
je
lods
sub
xor
fsubl
mov
and
mov
stos
and
sbb
loopne
mov
jp
fnstcw
daa
repz
and
es
dec
out
mov
xor
stc
das
pop
mov
fucomip
ret
lret
pop
push
gs
mov
insl
fisubl
inc
call
cmpl
cld
push
out
outsl
movsl
ret
pop
stos
mov
in
and
es
xor
pop
and
sbb
sbb
lret
les
add
adc
loopne
shl
jno
push
lret
xor
cmp
xor
inc
adc
mov
mov
or
imul
fnstcw
lret
xchg
jecxz
adc
fwait
pop
insb
jecxz
push
push
push
or
shll
push
call
jp
xchg
cmp
add
aad
lcall
jmp
mov
test
xor
jbe
sbb
cmp
negl
jbe
push
cmp
arpl
sub
sub
or
jb
mov
out
aam
movsl
mov
test
insl
adc
pusha
and
xlat
dec
je
push
xchg
test
xchg
xchg
lods
idivb
push
jle
sub
inc
movsb
xor
push
cmpsl
add
rorb
and
add
sub
jbe
fs
sbb
test
mov
mov
mov
pop
int3
inc
daa
out
jno
out
inc
mov
loope
imul
js
cmpsl
in
jbe
sahf
jecxz
push
mov
jmp
adc
add
mov
and
lcall
dec
idivl
rcrb
pop
jne
jecxz
jne
dec
dec
stc
pushf
out
jno
sub
mov
iret
adc
pop
mov
sbb
inc
bnd
mov
pop
jb
push
test
xor
dec
test
add
pushf
and
adc
bswap
rcll
sbb
aaa
cwtl
push
repz
mov
mov
mov
cmc
push
inc
flds
inc
pop
add
pop
aaa
daa
add
stos
jne
mov
std
aas
push
or
loopne
mov
popf
loop
test
insl
js
outsl
mov
outsb
loop
arpl
xor
jae
imul
mov
or
and
pop
push
cmp
nop
inc
xor
sbb
xlat
pushf
rcll
test
or
sbb
cmpsb
push
data16
and
jp
and
hlt
mov
test
xor
mov
repz
cmc
mov
xchg
call
pop
xor
ret
aas
dec
dec
dec
sbb
xchg
jns
mov
dec
test
inc
scas
in
push
jns
fildl
insl
mov
shrb
ret
inc
inc
mov
and
cmc
jge
out
test
mov
movsb
rcr
stos
sbb
cli
jmp
mov
cltd
mov
dec
iret
pushf
mov
cwtl
or
pop
jmp
pop
daa
addr16
mov
lcall
pop
inc
pop
add
cmp
pop
adc
push
rorb
cltd
xor
push
mov
js
pop
repz
call
inc
xchg
add
or
cmp
add
jmp
out
mov
mov
mov
xlat
imul
das
mov
xchg
cmp
pop
jecxz
cmp
mov
pop
cmp
mov
sbb
frstor
jb
js
loope
js
nop
push
cmp
pop
ja
icebp
cltd
nop
mov
cltd
xor
or
mov
xor
add
mov
not
pop
jg
mulb
jecxz
adc
scas
test
sbbb
sub
and
rorl
adc
mov
cwtl
aam
cmpsb
inc
sub
jl
test
aaa
pop
int3
push
popf
test
out
xchg
cld
mov
fcoml
popl
out
and
or
add
popf
sbb
fmull
inc
jb
jae
cmpb
hlt
fucomip
pop
sarl
fisttps
inc
out
ss
jp
adcl
sahf
call
test
dec
fwait
or
movsb
aaa
cmpb
mov
mov
cmpsb
aad
add
inc
pop
icebp
stos
mov
xor
mov
sub
push
jmpw
inc
andb
lods
xchg
push
repz
pop
outsb
adc
jnp
lea
pop
idiv
dec
cmpsl
in
mov
inc
mov
outsb
mov
cmp
repz
xorl
jge
loopne
lcall
or
mov
bound
repz
mov
pusha
sub
cmp
loope
daa
push
arpl
mov
inc
sbb
xor
je
cmpsl
pop
and
mov
pop
fidivl
aaa
mov
les
mov
cmc
imul
mov
das
shrd
ficoms
cwtl
in
mov
stos
pop
mov
jmp
mov
and
sbb
test
jecxz
sbb
sti
pop
mov
xchg
cmpsb
ret
call
jecxz
xor
sbb
push
mov
es
jnp
fiaddl
mov
hlt
js
shr
leave
daa
popf
divb
bound
push
lahf
dec
sbb
outsl
gs
insb
icebp
mov
mov
mov
pop
sbbl
aaa
ret
movl
add
or
sub
mov
lahf
jns
inc
xor
jmp
fsts
stos
jne
js
push
adc
mov
add
lods
stos
out
mov
mov
mov
dec
pop
dec
cmpsl
or
fs
inc
sbb
pop
stc
shll
jle
and
mov
hlt
xchg
out
rorl
sub
subl
cwtl
mov
sbb
mov
mov
mov
xor
repz
or
icebp
mov
xchg
int
inc
hlt
call
pusha
popf
outsl
in
loopne
jae
test
into
adc
decl
and
lds
lock
mov
and
aam
mov
and
into
dec
fs
sti
pop
insl
jnp
or
mov
repz
out
inc
out
rorl
push
adc
xor
gs
sti
scas
jle
jb
mov
sub
outsb
dec
pop
call
daa
pushf
popf
xor
icebp
aad
addr16
mov
mov
fsts
and
mov
jno
rcll
add
sub
flds
out
fldenv
stc
add
lods
mov
repz
cltd
push
pop
out
andb
and
dec
bound
fidivrs
pop
adcb
loopnew
cmp
mov
int3
sbb
push
int
fbstp
ss
call
data16
dec
jnp
push
clc
xchg
adcb
inc
fndisi(8087
scas
les
lahf
in
cwtl
mov
subb
mov
lods
test
sar
in
or
mov
clc
aad
or
mov
push
popl
ret
and
jle
cmpsb
outsl
jmp
adc
adc
mov
add
data16
arpl
out
xor
loope
mov
mov
iret
add
mov
fst
and
ret
mov
push
sti
jns
sbb
jmp
ret
ljmp
cmp
dec
into
sbb
sbb
pop
mov
mov
add
lea
cmp
dec
cmp
pop
and
adc
and
call
cmpsl
and
cmp
mov
mov
mov
aad
scas
sahf
scas
or
mov
imul
mov
cwtl
push
mov
mov
push
and
movsb
pop
movsb
mov
jle
loopne
in
cmp
jmp
adc
fs
movsb
clc
ljmp
inc
push
out
push
cmp
lahf
mov
inc
shr
insb
and
out
sbb
clc
inc
add
jae
inc
push
jg
inc
les
insl
fimull
dec
jae
stos
cli
icebp
insb
movsb
loopne
pop
popf
test
fisubs
in
fdivrl
xchg
test
push
sbb
push
mov
mov
stc
push
sbb
jg
wrmsr
jnp
std
roll
mov
addr16
sub
xchg
dec
pop
or
mov
or
inc
popf
xchg
ds
push
and
jne
pop
and
sarl
rorb
cmc
bound
push
aam
mov
repnz
das
aas
js
cmp
mov
es
xor
into
push
je
mov
sbb
sti
xor
gs
xchg
pop
xrelease
add
sbb
mov
mov
mov
into
outsl
adc
stc
sub
roll
les
rcrl
rcrl
mov
xor
leave
mov
pusha
mov
xchg
or
sti
sub
lcall
rcll
hlt
test
mov
sbb
imul
ss
add
lods
xorl
jecxz
mov
xchg
add
and
dec
ret
sahf
jbe
mov
cmp
mov
jge
xchg
add
rorb
in
fidivl
jae
scas
imul
or
dec
xchg
mov
repnz
push
xor
popf
sbb
fsubl
shrb
xchg
inc
lcall
xor
xchg
inc
dec
repnz
loope
mov
pop
inc
push
adc
cs
in
ret
cwtl
and
lahf
out
aas
xor
pushf
dec
test
xor
sbb
add
xor
adc
or
lcall
mov
fmuls
pop
sbb
push
and
jbe
andl
clc
push
lret
aas
orb
hlt
cwtl
mov
dec
mov
in
aad
mov
out
test
out
mov
flds
dec
fisubrl
sub
jecxz
sub
loopne
mov
addr16
pusha
mov
jg
sbb
sbb
fstl
popf
in
in
mov
add
push
inc
cmp
jmp
les
jno
aas
push
loope
bound
scas
inc
hlt
les
sbb
or
fdivrs
mov
and
xchg
ljmp
shll
movsl
mov
subl
add
push
popa
xchg
mov
mov
bound
cltd
stos
enter
test
pop
fisubs
push
xchg
ja
fnstenv
jecxz
cli
or
xchg
js
mov
pop
stos
or
mov
mov
jno
push
lret
hlt
or
in
push
mov
push
mov
mov
cli
gs
imul
fcomi
lret
sub
shrl
cwtl
inc
repnz
sahf
or
push
pushl
pushf
mov
push
cmove
movsl
xor
pop
pop
in
adc
add
jmp
js
mov
cs
or
mov
dec
pmuludq
and
fwait
cwtl
jb
sbb
das
mov
inc
retw
incl
xor
sarb
stc
adc
mov
push
daa
inc
fidivs
js
mov
sub
lret
sahf
aam
jp
xchg
sbb
clc
and
push
les
fisubrs
adc
rcr
xor
push
mov
cmp
ror
mov
jp
push
js
xor
nop
jmp
mov
push
in
or
ret
pop
jbe
call
sbb
in
sti
sbb
fwait
jns
loope
jne
cmp
test
scas
sbb
pop
sbb
mov
jecxz
pop
insl
adc
lods
mov
cmovp
mov
loop
mov
fldenv
insl
fwait
mov
xchg
jmp
fildll
mov
inc
rolb
xchg
rorb
iret
push
xchg
mov
mov
in
out
lods
fildll
jmp
icebp
jl
cltd
and
xchg
lcall
pop
aas
mov
or
mov
stc
ret
mov
push
stc
sbb
add
xchg
cmp
addb
add
or
push
popf
fcomi
rolb
xchg
lods
inc
fadds
jp
cmp
xchg
lahf
cmp
add
cmp
mov
jno
jno
test
int
or
adc
mov
push
inc
out
ret
push
adc
fdivr
mov
orb
popa
lret
sub
das
xchg
mov
and
leave
mov
out
into
out
cld
xchg
andl
dec
cli
icebp
sub
pushf
popf
cld
bound
adc
and
iret
jmp
arpl
mov
sub
push
and
xchg
dec
and
fldenv
cmp
mov
push
lret
adc
sbbb
call
mov
arpl
dec
shlb
fstps
aaa
sbb
and
lret
int3
xor
incl
loop
cmp
daa
push
adc
daa
out
jbe
push
in
loope
jecxz
cmp
shll
stos
add
xlat
mov
ds
and
push
xor
ret
inc
dec
mov
and
sbb
mov
repz
pop
cmp
mov
imul
dec
sbb
out
scas
popa
cmp
mov
mov
ss
sbb
pop
dec
ss
mov
aaa
fistpl
loope
adc
push
imul
jg
aas
sbb
jns
add
out
sbb
ss
mov
cs
outsb
enter
sub
push
in
stos
jae
xor
sbb
dec
jmp
sbb
insl
inc
push
dec
sarb
shrl
or
dec
and
pop
jmp
add
bound
cmp
sub
rcrl
or
mov
mov
xor
or
lods
add
in
lret
xchg
jae
adc
insl
out
and
movsb
xchg
out
cmp
sbb
jae
int3
inc
xchg
aam
je
or
push
cmpsl
out
loop
dec
sbb
push
push
and
fcmovnbe
jne
adc
ret
ret
inc
out
dec
cltd
imul
inc
adc
sbbb
cld
sub
add
add
pusha
inc
in
arpl
pop
leave
les
mov
mov
sbb
sub
aas
push
or
nop
mov
dec
dec
mov
xchg
inc
ljmp
pop
movsl
xchg
mov
test
ja
push
leave
add
shrl
je
xchg
fcmovbe
mov
lods
push
mov
movsb
in
loope
dec
fcoml
int3
jne
outsb
inc
cmpsb
loop
call
rolb
out
mov
and
or
adc
pop
add
dec
shl
inc
mov
jmp
sbb
fisubs
xchg
jae
gs
dec
jno
mov
push
xchg
ret
adcb
mov
mov
insl
xor
xchg
test
in
push
sub
scas
fwait
dec
pop
xchg
mov
fsts
insb
loopne
loop
jns
cmp
adc
jno
lods
stos
and
cmc
imul
mov
mov
sbb
mov
jns
sub
xchg
sbb
push
or
push
jnp
sar
mov
xchg
jmp
adc
mov
leave
rolb
pop
mull
xchg
jnp
mov
lock
inc
or
jae,pn
sti
fld
fldt
js
add
ret
sub
stos
jb
or
popa
mov
movsl
cmp
pop
cmpsb
xor
aas
aad
mov
aad
out
pop
cwtl
lahf
aad
mov
fidivl
mov
xchg
popa
out
push
cld
dec
int3
xchg
adc
xlat
fs
int
jmp
and
xor
pushf
popl
in
pop
pop
frstor
dec
xchg
clc
mov
imul
add
cmp
xlat
loop
sbb
push
xchg
dec
cmp
inc
xlat
inc
shrl
test
mov
outsb
mov
inc
xchg
das
mov
adc
orl
out
mov
les
popa
push
cmp
adc
mov
pop
push
jo
mov
xchg
addr16
add
hlt
jge
leave
jnp
mov
jnp
xor
rolb
ret
lahf
outsl
jae
pop
test
cmpsb
jmp
mov
push
imul
lahf
sbb
inc
cs
out
or
lahf
push
cmp
loope
cmp
cltd
xchg
xchg
xor
pop
sbb
or
sti
bound
popa
pop
ds
xchg
insb
push
xor
insb
in
jg
loop
xorl
inc
lgs
push
sub
sti
scas
push
int
or
pop
mov
test
dec
xor
cmc
cmp
sahf
scas
mov
int
mov
or
rolb
pusha
adc
out
fisubs
movsb
ljmp
outsb
mov
pop
test
test
lods
hlt
in
inc
test
cmp
mov
xor
lds
pusha
push
or
push
xor
in
mov
imul
fistpl
xlat
jnp
push
fisubrl
jo
bnd
sub
add
mov
or
repnz
stc
iret
inc
mov
mov
cmp
cmpb
pop
mov
in
rcrl
gs
and
push
js
cmp
adc
dec
dec
push
mov
mov
aad
pop
mov
xor
jge
adc
sbb
shr
clc
sahf
mov
aad
inc
aaa
sahf
cmp
insb
shrd
js
and
jle
loope
repz
repz
loope
fnstsw
addr16
cmp
push
mov
clc
adc
adc
mov
cmp
push
test
mov
mov
in
dec
adc
js
nop
or
shl
xor
scas
push
add
add
pushf
mov
loopne
and
rolb
push
add
hlt
pop
das
insl
cmpsb
push
adc
ds
and
negl
cmpsb
nop
pop
loope
sti
repz
add
jmp
mov
pop
cvtps2pi
or
xor
lret
daa
insb
cwtl
or
xchg
out
jl
pop
mov
mov
lds
rorb
movsl
xchg
rclb
and
stos
call
popl
mov
fnstenv
xlat
add
jg
sub
lahf
xor
xor
in
xor
xor
scas
inc
cmp
inc
jg
test
xorb
jnp,pn
mov
out
xchg
jg
xchg
out
inc
sub
in
push
xchg
pop
inc
mov
lret
ret
ja
adc
fildl
shl
jnp
idivl
adc
mov
loopne
add
mov
insb
inc
shrb
add
xor
ljmp
ljmp
fcoms
pop
fidivs
sbbl
jp
loopne
add
int
jnp
insb
inc
scas
scas
pop
sbb
mov
data16
pop
mov
cli
mov
inc
add
xchg
and
popf
inc
or
push
hlt
jl
dec
js
popf
psubsb
dec
test
cmc
dec
hlt
mov
xor
jecxz
enter
stos
mov
jle
call
cmc
pop
cmc
pusha
adc
push
inc
insb
mov
adc
aad
lods
sahf
out
push
test
pop
outsb
stc
sbb
pop
lods
lods
rcrl
jg
or
mov
repnz
scas
inc
or
push
jl
lods
mov
outsb
pushf
and
add
nop
jns
rcll
inc
iret
out
adc
fistl
dec
push
frstor
dec
leave
push
jecxz
xchg
lock
xchg
cmpl
jmp
in
negl
in
shl
inc
mov
cmpsl
outsl
xchg
icebp
test
inc
dec
sub
jbe
bound
mov
rorl
pop
or
lcall
in
cmp
inc
mov
addr16
fucomip
repnz
call
imul
hlt
pop
repz
fcmovbe
mov
iret
dec
sub
fildll
xor
pushf
adc
fcompl
pop
mov
dec
xchg
in
out
je
xor
pusha
mov
jno
sbb
aam
push
and
push
push
or
js
decl
jecxz
in
mov
sti
dec
les
cs
jb
imul
dec
adc
cwtl
neg
movsb
sbb
pop
inc
or
bound
sub
cmp
pop
inc
in
mov
sbb
arpl
cs
xor
pop
fidivrl
add
test
xchg
rcll
mov
sahf
xchg
dec
xor
outsb
js
sbb
cmpsl
lds
mov
std
or
hlt
mov
or
sbb
lock
pop
cmp
jne
aad
arpl
lods
push
mov
sbb
adc
mov
pusha
jmp
mov
fs
mov
ss
pop
push
jno
inc
aad
arpl
jae
dec
or
jmp
mov
popa
jp
cltd
pop
push
cmp
ss
dec
je
push
mov
stos
mov
iret
repnz
adc
lcall
stos
sub
and
test
add
mov
sub
testl
mov
iret
add
push
xchg
loopne
jb
and
sub
jae
add
sbb
mov
sub
jle
and
js
sbb
add
mov
adc
lret
mov
fdivr
cmp
mov
xchg
pop
mov
jl
xchg
imul
sbb
ss
pop
and
frstor
incl
lret
fcmovnb
std
stos
sbb
dec
fdivrl
sbb
ja
setne
adc
xchg
pop
bound
mov
data16
or
sbb
outsl
xchg
add
insl
inc
pop
push
mov
inc
das
cmp
int
inc
push
iret
push
push
push
push
ljmp
adc
mov
dec
mov
shlb
mov
push
push
das
sbb
data16
fbld
jo
jo
in
rorl
fldl
mov
xchg
lret
xchg
push
ret
rorb
mov
test
add
insl
outsb
out
jb
iret
adc
push
andl
lock
frstor
add
xor
jb
lret
push
jp
jae
cmc
mov
movsb
sub
jp
mov
jp
repz
jb
insb
rcll
adc
xor
mov
cmc
jge
pop
sub
jl
mov
sub
cmp
repz
mov
ss
adc
jge
mov
lock
fnstcw
in
push
lock
lcall
ficomps
and
arpl
push
xor
push
adc
inc
popa
xor
das
cmpl
push
xchg
mov
lcall
mov
imul
push
ret
lret
lock
daa
test
in
lret
fisttps
push
cmc
push
outsl
int3
mov
mov
ja
outsl
sub
jne
mov
adc
or
and
ret
push
psrld
outsl
mov
and
jle
jbe
xchg
mov
and
lret
xchg
adc
test
jecxz
xor
xchg
xchg
mov
fidivs
jae
or
or
repz
mov
mov
jmp
mov
fstps
test
push
test
outsl
dec
push
dec
lret
push
or
mov
push
movsb
stos
arpl
sub
xor
and
adc
inc
xlat
sbb
xor
mov
shll
and
mov
std
jne
mov
pop
mov
mov
leave
or
adc
add
fwait
pop
fnstsw
jge
lret
and
push
pop
ss
jo
daa
and
ret
and
ljmp
or
nop
popf
psubusb
dec
in
in
imul
pop
add
outsl
ret
arpl
rclw
push
lds
dec
flds
sbb
mov
and
test
pop
jecxz
imul
ret
dec
inc
cmp
sarl
test
xchg
jl
sub
xchg
xor
add
cmp
outsl
out
arpl
mov
inc
and
leave
shr
or
rclb
ficomps
xchg
sub
add
sub
pop
in
pop
data16
mov
arpl
jmp
inc
and
repnz
popf
mov
jne
mov
nop
fisttps
decl
int
testb
mov
ret
ljmp
lds
push
daa
and
in
pop
aaa
fsubrl
mov
ja
out
negb
mov
adc
sub
xchg
jecxz
jg
addr16
leave
push
add
jmp
sbb
mov
fwait
and
or
sbb
int3
push
mov
out
inc
mov
cld
jae
call
clc
cmp
jl
dec
xchg
add
lcall
push
leave
mov
js
xchg
punpcklwd
cli
sub
repz
iret
dec
add
cmpsb
daa
ret
or
dec
pusha
repz
sahf
pop
or
push
cmc
mov
fisubrs
cld
insl
into
outsl
xchg
mov
xchg
cmp
daa
push
sbb
or
out
stos
incb
push
lds
inc
popf
dec
jns
fisttpll
mov
jno
xchg
sbb
or
not
dec
dec
pop
loop
xor
sub
sbb
lods
cld
cmc
aas
cmpsl
sub
pop
and
mov
and
jne
sub
push
adc
mov
sub
and
repnz
sti
mov
popa
ds
adc
or
pop
insl
jl
dec
mov
mov
mov
lds
jle
das
into
mov
mov
dec
mov
loopne
jecxz
enter
imul
xor
xor
loop,pn
jne
das
scas
mov
es
lods
xchg
mov
fistpll
sub
jae
pop
jb
pop
pushf
sbb
sub
xchg
xchg
mov
pop
lcall
shlb
adc
mov
imulb
mov
dec
add
sti
andl
add
pusha
out
out
cmp
mov
data16
adc
adc
addl
hlt
jno
adc
fwait
imul
je
xor
out
addb
ret
sub
stos
mov
mov
push
incl
movb
xchg
les
fstps
mov
arpl
orb
mov
and
scas
cwtl
ret
mull
lcall
adc
jge
dec
sub
sbb
and
adc
test
lds
sbb
loopne
movsb
sti
arpl
daa
mov
or
mov
out
mov
mov
dec
iret
gs
movsb
inc
insl
and
jl
sub
jns
pop
add
cmp
xchg
fildl
sahf
inc
fnstcw
lds
outsl
cmc
xlat
mov
int3
test
pop
lods
dec
jp
test
push
add
iret
pop
int3
push
sub
and
sbb
sbb
sbb
aaa
idivb
movsl
mov
dec
xchg
lock
mov
imul
dec
arpl
lahf
rcl
mov
sub
mov
cmp
inc
mov
mov
ret
scas
inc
sbb
cli
xchg
sub
mov
add
xlat
xrstor
xchg
aas
sahf
fsubrs
inc
iret
mov
fs
aad
andb
or
jb
andl
add
lret
test
jns
dec
mov
pushf
rcl
fs
jmp
ds
jo
cmpsl
shlb
and
in
insb
rorb
popf
xor
aaa
and
aad
jmp
lods
shrl
sbb
adcb
push
fwait
inc
ss
lea
js
adc
test
mov
int
test
dec
gs
xchg
push
mov
add
popf
cmpsl
jg
pop
mov
jne
outsb
xchg
dec
fs
imul
dec
outsl
loop
fsubr
mov
mov
cmp
push
ret
jmp
dec
daa
pop
jns
stos
fistps
push
or
js
imul
aad
pop
jo
mov
sbbb
jmp
or
adc
out
xor
jg
cmp
pop
out
call
push
aad
cltd
test
sarl
or
lcall
inc
pop
enter
outsb
test
cmp
push
std
in
orl
xchg
mov
sahf
push
xor
icebp
xchg
and
mov
push
int
lea
cmpsl
inc
loopne
loop
in
cmpsl
inc
mov
or
mov
out
mov
xchg
bound
mov
pushf
sbb
fwait
cld
xorl
lods
dec
cmc
lea
test
push
lods
jns
push
enter
dec
iret
sbb
push
sbb
cmp
cld
inc
ljmp
pusha
out
xor
scas
pop
inc
mov
test
js
push
and
sbb
xor
outsl
stos
sbb
push
repz
pushf
fcompl
sbb
int
insb
and
fmuls
in
jp
rclb
scas
aad
inc
lahf
jno
enter
mov
js
loopne
mov
jns
mov
mov
cwtl
dec
lar
mov
inc
jp
push
mov
xor
mov
jmp
outsb
lock
xor
dec
mov
jno
or
bound
sahf
in
cmpsb
jmp
stos
pop
lock
push
mov
out
sbb
or
das
mov
mov
aad
xchg
cmpsb
fsubs
pop
jle
xor
xchg
insb
lock
cmp
cmp
imul
cmp
lods
sti
pusha
jbe
ljmp
xor
mov
dec
jge
in
test
jg
shll
add
inc
and
jb
cwtl
dec
push
jp
les
or
jo
add
xor
mov
sbb
adc
lret
popf
lea
pusha
dec
loope
loopne
pop
push
jge
sbb
pop
add
xchg
cmp
sub
out
out
rcll
lret
pushf
push
mov
and
fadds
sarl
orl
fisttpl
jbe
jmp
xchg
jnp
bound
movsb
divl
pop
mov
fsubs
dec
jne
lds
stos
sub
add
push
das
add
mov
lock
daa
and
dec
aaa
stc
xchg
aad
rolb
mov
sbb
jae
pop
jmp
in
push
data16
adc
jbe
pop
aam
movsb
in
ret
mov
int
fs
gs
xchg
pop
xchg
test
enter
mov
mov
addb
and
ret
test
rol
cmpsb
lahf
insb
inc
jb
and
lds
cmc
mov
push
mov
movsl
add
push
mov
popf
or
mov
loop
test
ds
lds
mov
xor
cltd
mov
rcll
mov
sbb
nop
les
lcall
lods
xor
xchg
dec
rcrb
dec
das
ds
imul
pop
sbb
sbbl
leave
add
push
imul
stos
push
adc
xor
xchg
mov
dec
jns
and
jge
xchg
test
das
in
sbb
add
xor
das
ret
es
dec
iret
pop
hlt
jl
adc
fwait
out
fdivl
in
stos
repnz
popa
test
sub
iret
pop
mov
sub
leave
cltd
rolb
or
iret
adc
test
mov
mov
inc
mov
sub
testl
cs
mov
fdivrs
stos
push
enter
popa
dec
stos
mov
xlat
jnp
js
cmpl
sbb
xchg
pop
pop
jecxz
rclb
cmpl
das
jnp
sbb
aad
pop
jg
or
add
inc
adc
xchg
test
inc
test
scas
fisubl
xlat
pop
push
xchg
fmuls
push
loope
imul
sub
jle
adc
dec
je
ss
adcb
neg
cmpsl
inc
lods
adc
in
fists
fisubs
jo
fldl
je
mov
or
or
sub
dec
movsb
xor
xchg
adc
push
jl
int3
es
dec
or
sarl
mov
call
mov
aas
clc
ljmp
sti
dec
mov
or
jne
dec
aad
fstl
sbb
out
adcl
mov
dec
test
mov
jg
arpl
arpl
xchg
mov
mov
arpl
inc
in
jo
mov
inc
adc
jnp
mov
loop
mov
ja
cmpsl
and
adc
icebp
push
jns
movsb
mov
call
lea
shl
ftst
pop
arpl
cmp
mov
push
leave
ds
jle
cmp
mov
push
stos
and
bound
jmp
pop
cmp
pop
xor
adc
push
sbbb
adc
jae
cs
mov
mov
dec
xchg
jl
fisttpll
mov
adc
and
test
mov
mov
lds
popa
push
xor
sub
jle
push
in
xor
cli
pop
aaa
in
inc
sub
lods
and
xor
push
stc
mov
insb
and
aas
sub
adc
sub
fcoms
push
adcb
aas
movsl
pop
shll
mov
int
movb
dec
loopne
pop
inc
sub
je
div
mulb
and
xor
inc
out
cmpsb
xor
mov
mov
aad
mov
popf
cli
xor
push
inc
dec
pop
push
ret
imul
push
repnz
inc
dec
scas
sub
inc
xchg
sbb
outsl
addl
lea
inc
lret
movsl
les
sti
mov
ss
insl
pushf
sbb
xchg
add
dec
sbb
sbb
jmp
pop
stos
test
cld
dec
in
mov
dec
xor
popa
cltd
sbb
xor
xchg
or
jecxz
fisubl
sub
fs
mov
dec
gs
in
fdivr
mov
popa
enter
out
and
popf
sub
nop
in
in
dec
mov
and
ja
lret
gs
push
add
es
popl
push
cmp
int
cmp
iret
out
mov
sub
cld
mov
iret
and
insb
mov
push
add
fs
push
adc
in
pop
shl
roll
push
ljmp
enter
clc
cltd
xor
mov
jecxz
mov
jae
jnp
inc
bound
sbb
loopne
lret
ret
xor
push
arpl
lods
ficomps
add
fldenv
inc
fdivl
xchg
mov
leave
mov
ret
jmp
movsl
mov
xlat
test
add
rorb
or
imul
mov
decb
push
or
xorl
jg
jmp
push
xor
mov
pop
les
sbb
sti
pop
ficompl
push
imul
fsts
jecxz
cs
imul
dec
test
ljmp
test
inc
cmp
add
push
jns
scas
aad
dec
call
into
aad
mov
or
mov
adc
ret
arpl
sub
jo
mov
push
fstpt
mov
stos
ret
cli
data16
jl
add
lods
in
fisttps
sub
ljmp
or
sbb
aam
jbe
mov
mov
xor
push
sub
push
imul
jne
outsl
ror
push
cld
rolb
pushf
pop
cmpsb
punpckhbw
push
pop
xor
fwait
inc
leave
mov
insb
push
xchg
dec
inc
mov
xchg
je
lock
rcrl
iret
jp
fcmovne
mov
fsub
enter
xor
pop
mov
hlt
adc
data16
sbbb
test
int3
xchg
sti
fbld
je
xor
xor
clc
lahf
adc
vmread
in
test
pop
hlt
xor
xlat
jecxz
xor
je
jp
insb
cmp
lahf
in
ss
adc
xchg
nop
or
loope
jle
push
dec
inc
negl
add
push
mov
and
lcall
jno
into
push
pop
mov
and
mov
pop
xchg
dec
xor
fadd
sbb
adc
fs
and
test
in
xchg
mov
xchg
lock
mov
lds
cmp
add
mov
fs
rcll
sahf
jge
std
in
push
bound
xor
jbe
pusha
mov
ljmp
xchg
imul
sub
push
outsb
mov
test
in
insb
adc
adc
push
bnd
outsb
add
insl
mov
out
xor
in
lock
jg
rcrb
movsl
sbb
loope
pop
ret
mov
pop
cltd
test
ss
subl
jge
pop
inc
dec
dec
into
negb
sbb
push
push
call
xchg
jl
lcall
fistps
push
mov
jp
mov
push
jmp
xchg
dec
add
je
loope
inc
insl
fwait
ljmp
push
mov
pop
mov
sub
stc
jg
pop
sub
xchg
mov
dec
dec
mov
pop
pushf
rcll
mov
fisubl
iret
inc
stc
add
jo
jb
xor
jecxz
cmpsb
test
das
mov
enter
mov
stc
push
adc
pushf
sbb
ljmp
sbb
push
jmp
pop
movsb
int3
loope
adc
int
cmc
pusha
push
scas
mov
cld
push
add
push
or
mov
lahf
loope
data16
dec
popf
adc
in
outsb
rorl
push
paddsw
cmp
lods
loop
dec
push
xchg
gs
cmc
lret
lods
adc
test
inc
mov
movsl
cmpsl
add
leave
adc
daa
movsb
add
imul
je
movsl
dec
cmp
adc
inc
insb
sbb
sti
ja
add
cltd
sbb
adc
sbbb
ret
pop
push
cmp
pop
sbb
ret
lret
mov
jge
and
hlt
xlat
push
mov
sbb
sti
dec
mov
inc
roll
insb
vcvtps2dq
out
adc
dec
bound
sub
mov
fildll
sbb
sbb
xchg
dec
mov
jp
mov
out
jo
sub
xchg
fs
jmp
roll
dec
ficoms
mov
mov
shlb
loope
pop
jle
jecxz
add
xchg
sbbl
and
icebp
xlat
or
cmp
jno
faddl
dec
imul
push
insb
inc
scas
bound
sub
push
pop
scas
sbb
rcl
pusha
mov
dec
sbb
pop
loope
jne
jae
dec
sbb
mov
loopne
cmp
cmp
leave
push
xchg
sahf
repz
addr16
dec
clc
push
adc
cs
mov
mov
dec
imul
mov
add
insl
push
cmpb
xchg
mov
outsb
adc
popa
fcmovb
mov
in
add
jmp
repz
pop
push
sbb
inc
enter
cmp
ds
popf
xor
test
outsl
sub
repnz
test
cld
shll
jb
fs
jp
cmpsl
xchg
mov
call
pop
xor
cmp
push
adc
adcb
pop
dec
inc
or
inc
cmpsl
out
push
stc
xchg
movsl
ljmp
sub
les
mov
push
leave
xchg
pop
jmp
sub
movsb
test
out
adc
sub
mov
out
orl
push
sbb
pop
cmp
xchg
xchg
pushf
stos
mov
lret
enter
rcll
das
rcrl
jbe
es
mov
ljmp
pop
sub
add
arpl
inc
cwtl
jae
addr16
leave
lret
addr16
push
mov
das
xor
repz
xchg
into
cmp
jge
in
ror
dec
cltd
ds
dec
lods
jb
pop
and
lret
inc
and
lea
cmp
imul
dec
clc
mov
incb
loope
sbb
add
movb
dec
cmp
into
es
mov
shl
pop
adc
pop
dec
insl
pop
mov
adc
stos
adcb
adc
mov
and
sub
xor
push
xor
mov
or
shll
loope
pop
js
or
int3
movsb
popa
mov
std
mov
pop
out
pop
mov
xchg
xchg
daa
mov
es
mov
inc
adc
cmp
push
int3
ja
jnp
pop
adc
xchg
fidivs
mov
pop
scas
insl
cmp
jp
pop
jno
push
pop
aas
test
dec
pusha
xchg
das
es
jp,pt
adc
pop
or
movsl
add
aad
flds
push
mov
and
and
cmc
fsubrs
mov
arpl
inc
fwait
jl
lret
setl
and
jb
mov
mov
rclb
jl
xchg
sbb
mov
xor
arpl
or
clc
cmpsb
push
es
or
inc
iret
fcmovnu
addr16
cltd
push
lods
jbe
orl
xchg
cmpsl
pop
jge
mov
js
mov
aad
push
dec
shrb
fsubl
mov
test
lahf
pop
out
mov
in
pop
jne
push
dec
mov
or
orl
push
lock
dec
rorl
hlt
push
insb
scas
mov
leave
aas
add
xchg
dec
jns
sbb
dec
push
pusha
push
shlb
stos
cli
outsb
xchg
mov
xchg
aas
insl
mov
push
jge
jmp
dec
std
out
jbe
fs
ror
es
add
jae
add
mov
inc
arpl
das
pop
out
jbe
das
in
push
mov
jl
in
and
xlat
repz
daa
loope
loop
add
sbb
pop
xchg
sar
jle
je
adc
arpl
adc
std
clc
and
scas
in
push
sahf
iret
cmp
std
les
sbb
pop
mov
leave
add
inc
push
mov
loopne
imul
and
xchg
pushf
in
xchg
mov
sbb
stos
sti
fcmovnu
outsb
xor
lcall
sub
xor
jmp
int3
xchg
cmp
mov
mov
roll
add
and
fimuls
sahf
and
into
in
adc
fcmove
fidivrs
mov
mov
fisubrl
aam
push
out
add
xor
cli
clc
mov
fldt
in
dec
push
pop
pop
adc
vcvtdq2pd
arpl
lods
lret
arpl
pop
repz
mov
je
cli
xchg
adc
int
push
jae
mov
mov
and
jo
lods
cmp
stos
je
jp
fs
sub
mov
inc
lcall
int
add
repz
adc
push
mov
icebp
jle
or
gs
push
xor
xchg
pop
les
and
push
test
lods
mov
std
cmc
mov
xchg
mov
jbe
mov
push
sbb
stos
repnz
sub
xchg
filds
jg
scas
mov
jno
out
cmpsb
and
rcll
jb
xor
xchg
sbb
and
and
jbe
jno
cmp
ss
push
mov
arpl
mov
dec
test
sbb
insl
popf
cmp
inc
jg
push
push
insb
rcrl
adc
xor
or
pushf
inc
popa
push
inc
sbb
out
mov
adc
sbb
ljmp
movsb
imul
mov
scas
loopne
lea
pushf
xor
dec
mov
cltd
shlb
bnd
sahf
pop
xchg
jno
test
add
dec
cmpsl
lods
add
jns
push
lds
cmpsl
adc
inc
rorl
jecxz
push
mov
daa
xchg
push
aad
addr16
in
ficoml
repnz
subl
sub
lods
and
sub
lret
call
loope
adc
jns
cmpl
lret
pop
scas
out
fcoms
xor
jb
xchg
leave
mov
mov
mov
xchg
inc
and
nop
filds
mov
xchg
lea
inc
push
push
pop
test
loope
inc
inc
xchg
and
sahf
mov
lods
jb
xchg
or
add
jbe
inc
xchg
sbb
loopne
inc
bound
stos
mov
or
test
insl
imul
jp
sbb
sbb
ljmp
es
mov
popf
cmpsb
mov
sahf
cmp
pop
xchg
mov
lock
out
fwait
mov
fwait
sub
add
das
xchg
fadds
xchg
jecxz
gs
pop
xor
mov
pop
jle
aas
pop
push
stos
das
insb
loope
andl
jns
dec
mov
cmp
mov
sub
pushf
dec
inc
shrl
fidivrs
inc
pop
mov
pop
mov
mov
push
jle
add
dec
cmp
cmp
addr16
scas
into
push
movsb
daa
adc
nop
sbb
mov
push
jae
dec
push
into
fbstp
hlt
dec
das
cmc
mov
push
xor
pop
adc
sub
mov
test
pop
jo
fucomip
pop
mov
repnz
dec
mov
cwtl
or
ss
jecxz
movsb
fwait
sbb
stos
jmp
mov
push
cmp
pop
pop
cmpsb
mov
test
and
dec
mov
lahf
enter
dec
movsb
mov
int3
daa
cmpsb
lret
cltd
or
pop
pushf
in
enter
shrl
js
daa
rcrb
cmovo
mov
jl
xchg
lds
mov
and
push
cmp
popa
repnz
pop
dec
ss
test
jne
lret
leave
mov
pop
jae
sahf
inc
push
jno
frstor
stc
jb
push
and
or
xchg
pop
repnz
mov
push
xchg
out
ds
pop
iret
cli
dec
inc
sti
cmp
enter
mov
jmp
stos
jae
loop
mov
push
stos
xchg
xchg
iret
xchg
rcll
pop
ss
out
mov
mov
addb
pop
push
adc
add
or
loopne
xor
pushf
or
bound
pop
mov
inc
idivb
sahf
dec
dec
adc
sti
insb
dec
mov
and
out
xchg
std
popf
fs
cmpb
jbe
sbb
nop
cmp
les
hlt
mov
stos
pop
push
sub
movsl
jmp
jb
jmp
pop
pop
add
les
and
stc
outsl
out
push
mov
adc
fisttpl
sbb
aas
jle
ja
or
pop
mov
pop
add
popa
ss
xchg
nop
and
adcb
inc
mov
fistpl
or
pop
dec
popa
xchg
stos
scas
ficoml
push
push
mov
ret
jo
pusha
aas
in
inc
cmp
lahf
ret
sbb
mov
inc
push
dec
sub
adc
push
mov
faddp
adc
dec
jg
and
and
dec
lahf
push
repz
imul
icebp
lods
dec
add
hlt
nop
mov
dec
shl
or
adc
lods
and
aaa
dec
lcall
push
ja
push
or
popa
test
xchg
add
lods
lcall
ljmp
stc
inc
jg
mov
mov
sub
or
in
xchg
rcll
dec
out
push
xor
mov
loopne
xchg
push
test
dec
lock
lods
shll
add
xor
in
jnp
std
fbld
in
cs
pusha
jbe
sarl
test
push
imul
mov
sub
mov
mov
fs
and
jl
test
ljmp
insb
xchg
inc
push
in
xchg
cmp
add
inc
lods
movsl
jo
push
ljmp
iret
add
mov
xor
aam
jle
mov
aas
mov
rcl
inc
out
in
dec
sti
xor
xchg
ret
mov
clc
scas
jbe
enter
cmpsb
fdivr
call
js
mov
adc
and
inc
xchg
test
stc
xchg
or
and
leave
shll
mov
sahf
or
sbbb
mov
jae
mov
cmp
cmpsl
xchg
ds
jne
jmp
daa
jbe
xchg
dec
pop
pushf
xchg
push
mov
cld
inc
outsl
mov
xor
xor
adcb
dec
jae
mov
pusha
inc
mov
push
enter
int
pop
cltd
mov
push
fdivr
and
and
xor
adcb
repz
stos
mov
ds
je
adc
les
jb
fs
lods
adc
insl
mov
arpl
xor
xlat
orl
shlb
sbbb
pop
out
push
std
js
inc
or
ljmp
xorl
push
in
int
loope
mov
xchg
lcall
testl
iret
fldcw
jno
sahf
inc
fisubs
aas
arpl
mov
push
jne
xchg
nop
add
mov
in
cmp
lcall
gs
xchg
pop
inc
add
jg
fldt
imul
mov
or
push
adc
sbb
imul
dec
cmp
sub
mov
inc
cltd
cmp
xor
fstpl
gs
push
movsb
and
das
pop
ss
cltd
sbb
fwait
push
roll
jle
push
mov
cmpsb
je
mov
cmp
les
incb
aam
push
cmp
adc
xchg
pmullw
adc
sbb
jne
out
pop
dec
std
cltd
shrb
or
insb
lods
cmp
imul
fdivr
sbb
add
ja
lahf
jns
ret
cmp
fisubrl
pusha
popa
and
pop
rep
dec
xchg
sbb
lods
dec
imul
imul
jl
adc
xchg
les
repnz
mov
xor
and
mov
push
lock
outsl
cmpsb
sub
xor
stos
fwait
sub
lcall
xor
jl
jnp
dec
jmp
jb
adc
ss
test
leave
mov
stos
push
mov
jmp
jg
dec
xor
push
mov
stos
outsb
out
adc
xchg
aaa
loopne
aam
mov
dec
call
mov
pop
add
shll
mov
pop
shr
jle
sbb
and
pushf
push
test
jnp
adc
fldl
push
jbe
xchg
sbbl
in
int3
or
sar
inc
aad
iret
fcos
out
int3
test
js
xor
xchg
fstpt
pop
mov
cmp
xor
mov
cmp
test
loop
fwait
hlt
out
inc
insb
repnz
mov
das
stc
stc
jg
cli
xchg
dec
pop
popf
cmp
shrl
shlb
aaa
insb
xchg
repnz
imul
mull
scas
pop
mov
jge
jno
pop
push
and
pop
fmul
jb
lds
bound
jge
popa
mov
out
bound
fnsave
aas
jbe
jg
jae
push
fidivrl
jbe
inc
dec
push
jb
inc
add
stc
mov
cmpsl
pusha
cmpsb
jne
cltd
inc
out
xor
dec
xor
sarl
adc
xchg
lods
jno
andl
fmul
push
sub
imul
jbe
fildl
add
push
pushw
pop
pushf
push
shl
adc
dec
and
or
adc
xchg
mov
dec
sbb
iret
lds
lock
ja
and
out
test
lret
mov
adc
cmp
outsl
aad
jl
add
filds
cmp
shlb
repz
cld
pop
push
xchg
inc
imul
cmp
es
sub
xchg
ret
adc
bnd
and
or
sbb
cltd
pop
adc
sbb
mov
push
add
stc
call
test
dec
jb
div
mov
jge
push
push
and
mov
mov
lcall
sbb
mov
sub
pop
clc
sub
clc
hlt
repz
inc
or
push
pop
or
imul
or
enter
xchg
out
mov
lods
int3
mov
pop
mov
jnp
mov
pop
sahf
mov
aam
unpckhps
pushf
mov
in
pop
lods
inc
cmc
test
cmp
flds
sarl
pop
std
jno
shlb
xor
xorps
xchg
mov
fstl
push
lret
push
mov
push
imul
push
ljmp
and
jne
daa
shlb
push
push
and
inc
jnp
jg
stc
xlat
ljmp
insb
in
lods
jl
js
jbe
sti
xchg
push
sub
fsubrl
shll
in
or
shll
dec
dec
test
in
cmp
test
xchg
pop
pop
loop
cmpsl
dec
notb
or
leavew
cmp
sub
jae
or
dec
cmp
iret
cmp
adc
and
arpl
lods
ds
pop
js
adc
iret
hlt
push
jae
or
sti
push
repnz
cmp
fst
negb
leave
js
fstp
inc
sub
shll
add
cmpsb
cmp
xchg
xor
test
and
xchg
insb
or
leave
stos
mov
adc
jle
inc
or
fcomps
or
inc
pop
daa
imul
pop
lret
out
lahf
test
paddusw
dec
xor
std
jae
testb
test
inc
lods
into
scas
in
cltd
lods
jmp
dec
mov
xor
dec
mov
lahf
addb
test
pop
xchg
fwait
mov
and
pop
icebp
mov
push
out
test
mov
cmp
xlat
js
pmaxsw
sub
std
xor
out
mov
mov
jne
xor
pop
sub
mov
inc
popa
insb
popf
cmp
inc
imul
cmc
dec
sbb
into
xchg
inc
dec
mov
sub
push
arpl
jb
je
std
adc
pop
imul
pop
inc
adc
jle
sbb
and
jl
mov
inc
mov
fs
mov
lret
mov
aad
cmc
pop
dec
out
mov
mov
fnstsw
in
jle
dec
sti
pusha
push
bound
rcl
pop
popf
inc
shlb
jb
loopne
sub
xchg
pop
mov
repz
sub
or
mov
adc
outsb
bound
jbe
push
leave
jno
push
je
stc
ljmp
mov
fisubs
fsubrl
insb
out
stos
popa
sarl
inc
xor
inc
add
jp
fnstenv
lcall
inc
rcrb
je
sub
stos
rolb
jle
shll
iret
add
outsl
xchg
inc
xchg
mov
push
mov
xchg
jae
test
push
xchg
lods
push
roll
sti
push
insb
sahf
imul
clc
imul
mov
outsl
pop
ja
aas
mov
mov
xchg
cmp
or
out
push
std
push
pusha
cmp
inc
mov
cmp
pushf
or
leave
cltd
cltd
and
mov
inc
lods
dec
mov
push
push
mov
sub
clc
jae
push
das
pop
adc
xor
mov
fstp
loope
push
push
xchg
test
dec
push
ret
test
mov
cs
cmp
dec
incl
sbb
or
dec
outsl
dec
and
add
pop
push
dec
and
pop
fsubrl
ljmp
arpl
add
rorb
inc
les
xor
adc
sub
dec
jmp
xchg
iret
cmpsl
test
mov
cmc
cltd
mov
mov
sub
xchg
mov
fcomps
pop
add
cmc
je
mov
pop
mov
lock
jns
mov
lret
add
aad
sbb
outsb
cmp
mov
fdivl
push
ret
xor
test
add
and
add
mov
sbb
add
das
cmp
outsl
jle
aam
add
jecxz
mov
sbb
fsubrs
in
jae
pop
sbb
stos
lock
cmp
sti
imul
jne
daa
xchg
fwait
scas
lahf
ds
ret
pop
jecxz
or
in
jns
fwait
xorl
test
cmc
lret
and
cmp
mov
lret
iret
dec
mov
mov
pop
inc
jae
push
push
or
leave
loopne
outsl
std
and
push
add
in
mov
imull
and
and
lds
popf
aas
add
ret
cmpsl
cs
rcll
xchg
outsl
sub
ror
and
lcall
fdivl
hlt
and
dec
sti
fsubs
sbbb
bnd
call
inc
and
imul
pop
paddb
enter
dec
mov
les
clc
fwait
mov
bound
adc
insl
lods
fisttps
ja
push
data16
inc
xchg
inc
enter
in
loope
or
mov
repz
hlt
mov
ret
js
cmp
stc
cmp
cwtl
idivl
or
jno
outsb
fwait
enter
add
xor
cs
cli
push
mov
mov
js
xlat
aam
lock
scas
jo
fwait
xchg
bound
int3
adc
and
cmpsl
sub
inc
pop
sbb
sub
hlt
and
lcall
xor
cmp
pop
pop
testl
push
into
rep
call
add
mov
int
lahf
jnp
or
pop
push
and
jbe
adc
loopne
mov
jns
fisttpl
adc
mov
repnz
jns
testb
add
pop
mov
xchg
shll
mov
jmp
push
mov
cmp
fsubs
bsf
xchg
mov
inc
inc
xor
test
mov
lahf
lods
call
mov
out
inc
jl
push
inc
filds
in
rcrb
pushf
clc
call
stc
popf
jbe
enter
xchg
gs
imul
mov
hlt
shrl
dec
sbb
in
aaa
xchg
or
scas
push
daa
in
idiv
lock
mov
leave
pusha
cld
ljmp
popf
push
cmpsl
or
cmpsl
pushf
push
out
mov
or
push
scas
addb
inc
and
arpl
and
fstps
rorl
or
xor
ljmp
daa
in
xchg
or
xor
and
pop
iret
adc
lcall
ret
repz
pop
dec
popf
ficompl
xor
scas
adc
imul
daa
cmp
sub
pop
and
js
sbb
mov
aaa
andb
int
xchg
push
mov
icebp
sti
test
ret
pop
fidivrs
pop
int3
dec
push
call
cmp
int3
subb
repnz
xchg
sti
adc
in
inc
ret
inc
notl
cmc
fidivs
aaa
shr
scas
cmp
nop
jl
pop
fucomp
subb
addl
mov
cmc
dec
inc
push
sub
sub
imul
shr
addr16
bnd
dec
xchg
js
dec
adc
outsl
cmc
mov
xchg
mov
push
mov
in
push
mov
mov
jmp
cmp
jecxz
fistps
je
leave
mov
outsl
cmp
cmp
out
adc
xor
xorb
push
xchg
xrelease
sub
sbb
push
mov
fs
sub
insl
mov
push
jecxz
iret
mov
out
cld
and
pusha
mov
cli
cmpsb
inc
add
cmp
adc
dec
jl
push
imul
adc
dec
jns
adc
jp
mov
aaa
sti
fbld
cmp
sub
jge
inc
push
adc
mov
lds
jae
leave
inc
gs
add
stos
jns
mov
or
fsts
iret
sub
popa
adc
js
mov
mov
movsl
insb
jae
jno
rorb
push
add
test
das
bound
push
or
iret
xor
push
fwait
shlb
cs
xchg
les
loope
pop
std
scas
aad
mov
jno
imull
divl
test
imul
ss
clc
jmp
popf
push
xchg
aas
repz
cmp
mov
lods
fwait
ds
clc
inc
mov
mov
xor
rclb
daa
inc
dec
cmp
stc
dec
adc
fs
push
in
ljmp
xchg
lret
xor
xor
adc
pop
inc
rcrb
push
xchg
and
lods
xlat
lea
cmp
das
lds
ret
lds
mov
hlt
cmp
dec
clc
mov
in
jne
add
ret
cmpsl
and
mov
dec
add
es
aad
push
lds
pop
ljmp
jl
add
outsb
push
lea
fsts
daa
cwtl
lea
xlat
sub
add
xchg
inc
pop
mov
test
inc
inc
cmp
flds
xchg
mov
mov
into
test
push
outsb
dec
push
ljmp
cmp
add
xchg
jle
cs
cmp
jecxz
mov
aam
push
ja
std
in
lret
sbb
aas
std
inc
sahf
repnz
xchg
add
xchg
cmp
rolb
xchg
jmp
divl
xchg
nop
pusha
shll
outsb
xorb
aaa
shll
in
push
fistpl
aaa
xchg
int3
loopne
dec
pop
pop
push
and
out
leave
mov
jge
aad
addr16
popa
movsl
popf
cli
jmp
xchg
mov
imul
sub
fistpll
mov
bound
std
sub
imul
fdivrl
jmp
cwtl
jmp
adc
adc
loopw
filds
inc
loope
int3
add
cmp
mov
add
push
cld
rorl
imul
push
jb
push
jae
cli
xor
cmp
mov
xor
cmp
hlt
and
jae
adc
cltd
adc
dec
pusha
divb
test
lret
aad
lds
mov
test
cmpsb
sbb
pop
iret
xchg
adc
add
lret
push
jmp
sub
stos
mov
push
mov
cmp
lds
mov
test
push
and
shr
movsl
les
outsb
push
and
and
aaa
sbb
dec
test
stos
and
push
mov
hlt
mov
out
cmpsl
cltd
xor
cli
push
xor
and
pop
in
ss
outsb
mov
movsb
repz
or
add
mov
and
out
push
rcrb
sub
movsl
pop
lret
mov
in
je
cli
stos
sarb
inc
mov
mov
pop
decb
dec
pushl
test
addr16
mov
inc
adc
shlb
pop
in
pop
add
lcall
test
rolb
out
push
popf
jge
jge
add
lock
add
add
repnz
mov
mov
xchg
inc
add
mov
fmull
repnz
mov
pop
les
jno
mov
fwait
dec
push
mov
sbb
aad
lock
mov
repnz
es
adc
mov
jo
push
mov
mov
jl
jo
fisubrs
and
push
xchg
pop
adc
push
stos
pop
fmull
or
xorl
test
aaa
dec
dec
ds
adc
adc
dec
mov
pop
addr16
in
data16
add
nop
out
call
xor
inc
test
jp
adc
dec
ds
into
lret
jmp
imul
dec
push
out
or
test
cmpsl
ret
cltd
push
mov
imul
rcll
ret
bound
cwtl
test
out
fsubrl
sahf
jbe
icebp
adc
out
adc
pop
sub
sahf
push
sub
pushf
sbb
dec
cmp
pusha
fdivp
test
imul
pop
and
xlat
in
cwtl
sar
andl
in
xchg
idivb
mov
cld
and
pop
mov
dec
pushl
imul
pop
movsb
dec
dec
test
push
jns
inc
mov
std
jge
ds
rol
dec
mov
xlat
and
or
cmp
pop
lock
in
or
int
fildl
and
push
adc
icebp
push
jmp
rolb
int3
pop
and
arpl
add
jg
push
mov
stos
out
dec
lock
and
out
sti
incb
mov
and
adc
stos
inc
dec
or
xchg
jl
pop
fistps
rcl
jp
lds
dec
scas
or
imul
sub
je
jbe
mov
stos
xchg
or
dec
mov
hlt
mov
cmc
imul
sub
and
lret
leave
mov
stos
or
push
pop
test
pop
enter
data16
rcll
in
sbb
pop
mov
clc
adc
inc
mov
xchg
jns
adc
dec
loope
loopne
loop
cmp
pop
out
sub
or
adc
lods
add
pop
xchg
lahf
cmp
jg
test
sub
mov
sub
in
xchg
push
adc
stos
mov
add
adc
mov
jbe
idiv
lret
push
jno
sahf
adc
push
xor
cmp
mov
enter
imul
or
cmp
shrb
jl
icebp
loope
das
mov
jnp
divb
lods
mov
ja
add
and
xchg
cmp
loope
push
sbb
add
xor
testb
imul
lret
cli
add
sbb
ljmp
lret
jae
mov
adc
inc
lret
sub
push
neg
ljmp
insb
cmp
push
fs
xchg
mov
incl
lcall
fwait
sbb
or
mov
insb
add
jne
pop
ljmp
sbb
shll
iret
lcall
ret
sar
push
movsb
and
pop
mov
inc
mov
arpl
jbe
adc
mov
inc
xor
in
ficompl
mov
xor
imul
testb
push
lods
sbb
dec
dec
leave
cmp
sahf
inc
addr16
sahf
or
aad
pop
cmp
pop
push
mov
fdivrs
inc
repz
mov
repz
enter
iret
sub
pop
and
jns
sbb
dec
mov
clc
pop
test
mov
iret
cli
aam
or
xor
mov
fimull
fneni(8087
rcr
add
or
mov
mov
ljmp
adcb
movsb
out
daa
lret
sub
sbb
mov
sbb
js
adc
and
pop
jns
fistpll
push
stc
fsubrs
ljmp
push
and
add
hlt
aad
cld
inc
in
push
int
testl
mov
xchg
cmp
pop
lods
out
xor
insb
add
cmp
push
lds
adc
mov
jne
gs
dec
jnp
scas
mov
outsl
icebp
loope
arpl
in
cld
adcl
sub
or
jmp
mov
sbb
bound
jecxz
sahf
add
pop
iret
lret
and
loope
fs
or
js
dec
push
mov
sub
subb
adc
setp
mov
adc
shll
add
les
out
push
rcr
mov
in
jmp
cmp
repz
fdivrs
or
loope
bound
push
xchg
repnz
mov
je
sub
repnz
adc
clc
enter
push
fcoms
movsl
sbb
mov
daa
cmpsl
fidivrs
movsb
mov
lods
mov
jecxz
ret
fisttpl
pop
adc
push
adc
aad
movsl
stos
mov
int
inc
cwtl
fnsave
mov
cmp
xorb
push
push
mov
stos
repz
push
loop,pn
xchg
inc
adc
test
cmp
pop
lods
out
movsb
mov
roll
ret
mov
test
push
add
out
mov
cmp
gs
dec
adc
test
sbb
xchg
int3
mov
cli
xchg
add
or
cmc
stos
jp
fisttps
inc
std
std
popl
aad
sub
xlat
and
test
push
cmp
cld
or
inc
out
sbb
sbb
adc
lahf
push
jno
loopne
shll
mov
ljmp
dec
mov
fucomp
shrl
cld
jl
xchg
dec
sbb
xchg
jbe
rcr
adc
fildll
shrb
imul
and
dec
add
jne
lods
sbb
jl
inc
adc
mov
shll
bnd
push
sarb
fwait
mov
sub
movsl
int3
pop
hlt
dec
xchg
xlat
loop
fiaddl
rcr
ja
mov
loop
push
mov
mov
into
cmp
pop
aaa
mov
xlat
push
scas
push
mov
cwtl
shr
and
xchg
xor
add
xor
andl
sbb
push
or
mov
outsl
inc
dec
in
mov
mov
pusha
and
sbb
pslld
jg
mov
cld
sbb
sbb
in
inc
sub
das
in
ja
divl
dec
sbb
bound
adc
ficoml
cs
sahf
fisubl
adc
outsb
enter
inc
jecxz
loop
sub
imul
sub
cmp
or
push
mov
shll
out
aam
into
das
adc
in
fisubrs
cmp
subl
xlat
cli
stos
hlt
stos
aad
fwait
inc
push
push
fucom
cld
xchg
inc
and
mov
pop
or
es
inc
cli
jb
mov
push
outsl
pop
add
jg
pop
jge
dec
sub
je
insl
mov
mov
xor
push
pop
aaa
xor
cmp
lret
mov
lea
jp,pt
and
and
sarl
jmp
add
ffreep
fsts
sbb
sub
popf
mov
cmp
fidivrs
ret
push
shlb
adc
hlt
and
xchg
das
int
xor
dec
bswap
cmc
inc
jp
lcall
mov
inc
jns
lock
fcmovne
clc
jne
cld
loope
jo
add
out
add
sub
ja
test
sbb
ret
push
mov
stos
data16
iret
sbbb
push
mov
mov
xchg
sub
aam
mov
mov
sbbl
jecxz
sub
adc
push
leave
daa
arpl
fidivs
mov
enter
imull
lds
fbstp
jae
xor
sarl
movsb
cwtl
lods
enter
cmp
mov
sbb
shll
gs
sti
daa
pop
push
inc
cmpsb
lods
xor
jp
leave
dec
adc
aam
out
fstl
dec
inc
test
data16
cmpsl
xor
scas
pop
in
test
ljmp
xor
aaa
fucomip
scas
mov
jbe
jb
xchg
fs
das
jl
sbb
adc
test
pop
push
enter
jg
lods
loope
or
mov
or
push
addr16
loop
mov
mov
mov
in
aam
dec
xchg
dec
mov
popf
ljmp
loopne
out
das
scas
aad
or
adc
mov
cmpsl
fsub
pop
jmp
mov
shlb
stos
push
mov
adc
jbe
pusha
pop
sbb
pop
jnp
jns
ret
inc
cmc
mov
fs
shlb
inc
popa
xchg
and
jae
adc
push
jecxz
iret
lret
cld
xchg
mov
imul
or
mov
push
jmp
jb
mov
aad
hlt
lret
jnp
lahf
insb
adc
outsb
in
cld
sbb
jge
fwait
out
popf
push
insb
fsubl
movsb
mov
xorb
bound
pcmpgtb
lcall
ret
aas
out
es
sub
push
sub
adc
icebp
gs
sbb
pop
mov
dec
adc
xchg
and
mov
outsl
sub
and
stos
ja
stos
add
or
adc
loop
out
insl
std
or
idivb
movsl
in
nop
push
adc
mov
sbb
inc
push
inc
into
cmp
mov
insb
fstpt
jbe
clc
aas
rcr
enter
jnp
jne
rcll
outsb
dec
pop
in
xchg
les
fistl
test
inc
add
js
into
or
sub
dec
adc
pop
nop
or
sbb
inc
push
fstpt
inc
lds
ret
xchg
inc
mov
sbbb
mov
mov
push
sub
fwait
in
jb
imul
ljmp
aas
mov
in
js
mov
fimull
jae
gs
lahf
notl
jecxz
adc
data16
nop
adc
cmpsl
ljmp
outsb
dec
outsb
fstpt
cltd
cltd
aad
push
and
inc
cmpsl
cmp
sub
pop
sub
js
lock
jb
cmp
int
push
push
xchg
mov
pop
and
scas
xchg
inc
stc
js
mov
repnz
and
mov
cmp
fists
mov
fwait
xor
add
icebp
xlat
pop
movsb
stos
mov
push
cmp
insb
and
cs
sbb
push
outsb
test
add
pop
std
stos
faddl
add
mov
gs
scas
cltd
dec
push
fdivrs
int3
push
popa
xor
insb
inc
in
xor
sub
or
pop
push
rcrl
or
sub
cmp
out
push
pop
add
lods
pusha
sub
xor
lcall
or
mov
xlat
cmp
push
sahf
or
gs
adc
mov
mov
adc
adc
inc
cli
outsl
fdiv
sub
add
add
jnp
push
std
xlat
mov
popf
push
push
lret
sub
leave
test
imul
aam
popf
outsl
jnp
lahf
rolb
sub
or
hlt
pushf
cmp
pop
aam
imul
jle
fwait
stc
in
inc
fwait
xor
sbb
inc
or
jnp
jne
into
mov
ds
in
es
xchg
add
sub
jle
into
mov
adc
mov
out
lea
inc
lret
cmp
pop
daa
int3
and
andl
movsb
repnz
leave
in
insb
pop
in
stos
rcrl
pushl
sub
mov
pop
push
inc
add
or
pop
push
in
sarb
mov
and
dec
xchg
sub
jb
jne
mov
jo
outsb
push
push
mov
out
jnp
jmp
ret
scas
fld1
mov
insb
sbb
pushf
or
jne
push
cmp
mov
sub
jp
sti
jo
int
push
inc
gs
pop
cmp
mov
sbb
push
divb
jmp
inc
jge
add
mov
clc
mov
out
cmpsl
mov
mov
out
fstl
and
rolb
leave
pop
mov
pop
mov
push
jns
xchg
inc
xchg
sub
ret
in
sub
push
repz
pop
add
cmpsl
push
test
sbb
cmp
mov
xorb
mov
dec
jg
in
inc
jae
sub
sahf
fsub
xchg
inc
fldenv
out
ficompl
inc
fistpll
pop
cltd
inc
push
rorb
add
mov
add
pushf
sahf
and
repz
inc
sub
loopne
or
xor
xor
jnp
xor
pop
cmp
add
pushf
ret
jg
or
enter
rolb
xchg
stc
fldt
in
inc
add
mov
aam
movl
divl
lea
sbb
pop
cmpsl
sbb
inc
add
dec
or
lock
or
mov
sub
lret
cwtl
dec
mov
xchg
int3
mov
adc
aas
stos
iret
xchg
push
ds
inc
js
xchg
scas
adc
mov
ss
pop
pop
loop
xor
test
add
xor
or
and
repnz
dec
pop
cmp
std
fisubrl
push
add
addr16
push
sub
icebp
and
inc
push
mov
dec
sub
ja
test
xor
rcrl
inc
aas
js
lods
xchg
cld
iret
push
inc
xchg
decl
adc
push
lock
stc
idivb
mov
cli
sub
or
add
stos
out
mov
outsl
fdivrp
push
out
imul
sub
push
subl
fwait
std
dec
adc
idiv
pop
or
hlt
jns,pt
in
lret
imulb
orb
xchg
jnp
cltd
repz
out
scas
mov
push
inc
push
and
mov
sub
cmpsb
ds
add
mov
push
xor
mov
adc
or
xchg
jne
bound
pop
test
insl
jno
mov
add
pop
xchg
adc
jle
ret
push
inc
jmp
lcall
push
outsl
pop
rorb
mov
insl
pop
mov
je
inc
push
adc
insb
pushf
hlt
daa
mov
pop
cmp
sub
xor
rorb
aas
adc
cmp
cmp
jno
sahf
in
xorl
mov
arpl
gs
add
stc
mov
sbb
jmp
dec
scas
mov
mov
cmp
sbb
sub
iret
push
jecxz
xor
imul
xchg
sti
pop
movsb
pop
mov
jno
loope
xor
loope
lods
sub
push
pop
stos
xor
mov
call
or
js
outsb
mov
xchg
xor
push
push
sub
or
or
imul
dec
ds
dec
stc
sbb
mov
fildll
fistpl
cli
adc
in
pusha
psubusb
xorl
pop
int
add
iret
mov
out
push
adc
xchg
lea
ja
ja
fidivrs
adc
leave
clc
jnp
pusha
jl
adc
cmp
stc
fsubrl
mov
je
adc
or
mov
or
cmpsl
sbb
in
pop
jmp
ss
mov
mov
push
mov
imul
xorb
jp
dec
add
xchg
rol
mov
jl
add
jae
insl
test
lods
cwtl
jmp
mov
xor
add
loop
int3
and
lret
hlt
lahf
movsb
adc
xchg
loop
xchg
scas
dec
pusha
shll
dec
cs
mov
push
xchg
push
inc
loope
mov
sahf
xor
adc
out
pop
lods
xor
jecxz
cmp
push
inc
inc
das
mov
mov
sub
sub
mov
cmp
xor
in
jl
jp
pop
mov
insl
mulb
repnz
pop
pop
lahf
iret
pop
push
adc
fsubp
mov
leave
idivb
fwait
rolb
sarb
push
dec
adc
test
jge
fucom
xor
pop
arpl
sbb
movsb
sbb
mov
daa
sub
stos
dec
dec
daa
mov
in
ljmp
inc
daa
jb
push
daa
add
xor
repnz
scas
push
les
mov
dec
dec
jo
adc
arpl
jae
iret
xchg
mov
ret
idivl
sbb
jno
fldenv
hlt
jns
add
loope
jl
addr16
std
jae
out
sbb
sbb
xchg
add
scas
cmp
sbb
mov
pop
ljmp
mov
mov
repnz
ret
subl
mov
das
adc
xor
adc
js
decl
lahf
in
inc
inc
imul
test
xchg
daa
adc
jl
dec
loop
fdivs
fcmovnb
mov
lcall
call
lds
lea
orb
sbb
rcl
int
or
in
push
sbb
push
fmuls
sbb
lret
jle
ret
dec
lods
loopne
push
push
xor
repz
adc
fnstsw
imul
mov
or
mov
jb
testb
mov
and
cmpsb
inc
aas
xlat
jnp
pop
dec
sbb
jo
aas
mov
pushf
mov
outsl
call
out
lods
cmp
pop
mov
clc
push
dec
ja
push
dec
ss
jl
or
fwait
sbb
xchg
mov
fadds
addb
jp
sahf
mov
ret
popa
cmp
int
test
imul
repnz
mov
out
stos
sub
cmp
gs
rcl
inc
xor
outsb
sbb
ja
std
hlt
std
mov
jg
adc
push
in
adc
cmpsb
aas
jp
fnsave
jo
test
call
push
pop
mov
lds
aam
xchg
dec
mov
leave
in
out
mov
push
mov
cwtl
movsb
mov
or
ss
push
jge
xor
xor
dec
dec
push
adc
sub
test
jge
call
data16
les
mov
enter
int3
lds
dec
sarb
add
clc
mov
xor
popa
fucom
mov
mov
or
or
xchg
popa
mov
pop
mov
stos
hlt
out
xchg
push
and
xor
push
adc
mov
cmpsl
pop
add
mov
jle
dec
cmpb
mov
stos
mov
popa
cmpl
ret
jnp
push
shlb
js
ret
cwtl
lods
inc
cmp
cmp
shll
stos
cld
clc
sub
inc
inc
fsubrp
or
push
or
pusha
add
cli
xor
das
or
jl
pop
jno
push
mov
out
jb
push
mov
fwait
rcrl
out
gs
sbb
inc
dec
test
inc
pop
aad
mov
mov
ret
push
dec
fwait
addr16
arpl
jle
pop
inc
adc
xor
mov
test
cmp
shl
push
jmp
push
insl
dec
mov
mov
lock
jns
cli
pop
jo
pop
sub
mov
fs
cmp
aad
xor
push
nop
inc
push
dec
ss
adc
cmpsb
mov
cmp
insl
pop
or
cltd
jmp
inc
inc
icebp
daa
mov
fidivs
fnsave
pushf
dec
popl
decl
xchg
notb
xchg
push
cmp
push
or
pop
sbb
and
sbb
or
test
jmp
and
rolb
mov
ret
mov
pushf
pop
sbb
clc
jmp
adc
lret
aaa
repnz
cmp
stos
stos
sbb
cmpsb
loop
fwait
addr16
inc
jnp
int
xchg
outsl
out
xchg
psubsw
push
insb
sub
adc
in
add
mov
xor
push
stos
mov
out
cmp
scas
mov
mov
shlb
mov
or
inc
rclb
lea
inc
lds
pop
scas
inc
std
mov
das
sbb
sbb
dec
lret
push
mov
imul
pop
push
mov
and
movsb
sbb
lahf
mov
cmp
mov
leave
xchg
sbb
pop
mov
pop
mov
mov
cli
pushf
cmp
adc
dec
push
mov
push
daa
call
dec
rcrl
sahf
mov
leave
cmp
adc
mov
int
and
push
push
pop
hlt
inc
rcll
cli
mov
insb
ja
dec
stos
lcall
mov
jns
jns
popa
jbe
pop
lods
xchg
xor
dec
sub
mov
add
ljmp
lcall
roll
pop
test
xor
or
mov
add
test
das
int3
enter
xlat
xchg
jg
data16
lds
mov
shrb
jbe
cmpb
rcll
rorl
lds
mov
call
es
cmp
leave
pop
push
out
hlt
fisubrs
pop
mov
mov
mov
rcrb
push
mov
jno
cs
test
xchg
dec
inc
in
stc
mov
and
fwait
pop
lds
jle
iret
jmp
stc
mov
push
push
xor
iret
mov
sub
lods
dec
sub
stos
mov
or
icebp
mov
cmp
xor
inc
inc
push
out
bound
add
mov
xchg
stos
fidivl
jl
push
orb
mov
jns
mov
mov
dec
insb
mov
mov
jo
test
fwait
add
pop
imul
pop
inc
ds
mov
mov
mov
xlat
daa
adc
pop
cmp
jno
push
movsl
es
push
or
xor
aaa
int3
fstpl
mov
mov
xchg
push
lcall
movsb
ljmp
cmc
cmp
pop
jmp
sub
fists
cmpsb
loopne
adc
and
mov
arpl
add
es
andb
call
mov
iret
push
clc
lret
xor
or
mov
clc
mov
fsts
ret
adc
jns
jne
dec
mov
sub
xchg
cmp
stos
sbb
mov
lods
js
ljmp
loopne
adc
neg
iret
sbb
jno
mov
mov
rorb
inc
in
cltd
adc
inc
icebp
lods
xlat
ds
push
mov
pop
js
add
icebp
pop
hlt
aas
cmp
sbb
dec
xchg
mov
mov
jge
mov
sbb
pusha
sahf
xor
shll
push
lds
out
xchg
sub
jg
out
outsl
inc
add
movsb
int3
je
and
and
loopne
test
cli
mov
mov
mov
pop
loope
push
out
sbb
out
and
dec
sub
cmp
xchg
mov
out
out
pop
xchg
pop
rclb
mov
xor
sbb
xor
jb
push
mov
mov
loop
fs
cvtpi2ps
pop
cmp
push
inc
or
mov
dec
mov
mov
iret
daa
test
pop
push
or
adc
loopne
lock
pop
jb,pn
sbb
test
inc
xor
test
or
call
iret
aaa
not
jo
inc
push
dec
mov
or
dec
add
call
push
in
or
insl
cmp
testb
adc
mov
xchg
cmpsb
xchg
stc
mov
sbb
cmp
mov
sub
push
push
fnstcw
mov
pop
xchg
ljmp
les
outsb
mov
push
mov
pop
aam
xchg
aam
leave
sbb
lcall
and
repnz
push
popf
mov
mov
out
fs
cs
fistps
icebp
inc
cli
sarl
jne
cltd
sub
xor
loopne
roll
sub
lahf
xchg
shll
test
cmp
xchg
in
out
jne
insl
lods
faddl
sub
mov
daa
add
lea
scas
es
xchg
mov
dec
gs
inc
arpl
je
pop
xchg
dec
lods
inc
sub
cmp
in
inc
fcoml
adc
ror
adc
lahf
jp
xor
jo
mov
mov
push
xor
sub
popf
daa
hlt
sub
adc
scas
push
push
mov
xchg
jmp
jecxz
bnd
addr16
jecxz
mov
push
sbb
stos
xor
push
enter
jl
pop
lret
js
or
orl
jge
mov
imul
ds
xor
mov
mov
iret
cmpsl
xchg
mov
add
mov
jle
or
inc
test
xor
fcomip
insb
ljmp
repz
pmaddwd
inc
sbb
incl
out
adc
dec
inc
sub
inc
or
adc
mov
or
pop
push
fnsetpm(287
bound
and
push
lcall
fldt
int
push
call
pop
or
rcr
push
push
ret
outsl
sarl
xor
cmpsl
cmc
lea
sub
outsb
cmp
jnp
addb
ds
pop
shrl
shrl
fcmovbe
cltd
popf
xchg
mov
sbb
dec
push
push
stos
or
cmpl
mov
imul
mov
mov
pop
mov
and
es
mov
test
xchg
mov
dec
dec
int3
and
and
xchg
sub
and
in
jle
out
xchg
mov
ret
fbstp
adc
and
faddp
pop
xchg
adc
out
and
hlt
pop
xchg
pop
xlat
into
xchg
gs
xlat
mov
sub
scas
test
cmp
sub
mov
ret
scas
pusha
cmpsl
cwtl
rol
ds
xor
in
mov
xchg
pop
sub
cmp
xchg
popf
shll
insb
clc
out
push
xor
hlt
lret
scas
pop
js
cmc
sbb
idivl
mov
sub
aas
in
sub
arpl
and
cmp
shll
mov
pop
xchg
sbb
cmp
xchg
sahf
loop
dec
adc
mov
sti
sar
shlb
movsb
test
gs
inc
cmp
cmpsb
movsl
inc
dec
jmp
or
sub
jno
xchg
adc
sarb
out
jne
add
das
mov
or
adc
in
jne
lods
fsubl
rep
subb
ljmp
mov
sti
repnz
leave
ds
les
xchg
call
or
mov
sub
nop
or
jmp
inc
sahf
leave
mov
push
pause
ret
mov
jp
shll
cmpsb
sbb
mov
and
xor
xchg
ss
rcll
notl
repnz
or
xchg
add
pop
pop
out
into
sbb
pop
mov
mov
adc
lahf
aas
je
mov
shrb
xor
xchg
dec
aaa
push
mov
aad
jl,pt
outsb
and
cmpsl
enter
rep
jae
repnz
add
ficompl
xor
int
sarl
dec
insl
jns
push
inc
and
mov
ss
cmp
callw
push
hlt
pushf
std
mov
outsb
push
ds
dec
test
inc
mov
push
iret
leave
mov
mov
ja
sub
inc
rolb
pop
xlat
fnstenv
fisttpl
mov
xchg
aaa
pop
pop
aam
sbbl
jo
arpl
push
or
test
mov
es
dec
outsb
mov
xlat
popf
stos
lds
mov
mov
xor
and
imul
pop
push
add
sahf
adc
xchg
rclb
cmp
xchg
in
ds
out
mov
insl
jge
or
and
pop
mov
fadds
popf
rcl
js
dec
mov
test
rorb
sub
sub
jg
mov
lret
dec
out
dec
lahf
jno
xchg
lcall
outsb
jmp
ja
mov
xchg
lds
test
mov
cmpb
shll
cmp
push
out
push
inc
mov
mulb
test
or
rorb
out
dec
mov
mov
dec
mov
pop
adc
jns
sahf
cmp
mov
test
mov
vpsrlw
fmulp
or
addr16
xchg
adc
das
or
outsl
in
mov
and
jge
push
push
cmp
push
fldcw
or
add
orb
add
push
movsl
hlt
daa
sub
notb
iret
mov
adc
cli
mov
fldl
int
push
xor
xchg
test
sub
xor
mov
out
sub
jo
jbe
enter
pop
sbb
xorb
notb
xor
jle
notb
cmpsb
shr
test
les
outsb
mov
loope
in
sbb
inc
fdivs
inc
dec
leave
adc
jg
lods
aaa
sub
xor
or
mov
bound
mov
jo
pusha
test
push
es
outsl
das
pop
mov
jg
sbb
bound
cltd
dec
mov
adc
sub
mov
dec
pop
lods
in
jo
jae
nop
or
and
pop
inc
int
dec
dec
push
mov
scas
test
xchg
aaa
inc
mov
xchg
xchg
push
or
mov
mov
insl
lds
push
shll
stc
pop
nopl
jle
add
jmp
repz
mov
push
fstl
addr16
bnd
inc
sbb
shrl
cltd
jp
out
mov
pop
testl
push
std
mov
sbb
push
sar
mov
iret
rcrb
mov
sbb
fmuls
sahf
lret
adc
cmp
and
int
push
jns
mov
push
test
sbb
jge
pop
das
jae
rcrl
les
out
xchg
push
js
push
bnd
xchg
ds
not
cmp
cli
leave
push
repnz
es
cwtl
cwtl
sub
addr16
test
cs
push
in
and
add
repnz
aas
pop
mov
js
out
dec
pop
jbe
out
push
sahf
add
jo
jbe
sbb
mov
dec
inc
adc
jbe
pop
mov
test
out
push
jmp
ret
cmpsb
orl
or
dec
pop
jp
aam
cmpb
jmp
test
inc
jnp
mov
in
aam
fstpl
rclb
pop
cltd
scas
jns
popa
push
subl
add
pop
sbb
orl
pop
push
jp
mov
or
je
clc
jge
mov
in
xor
sub
shlb
out
aas
and
mov
into
xchg
add
mov
push
xor
sbb
add
cmp
scas
das
jmp
scas
push
in
imul
jp
mov
pop
rorb
fucomp
lahf
cmpsl
and
mov
pop
push
lahf
in
mov
mov
cltd
out
mov
cvttps2pi
or
sti
sub
repz
insl
xchg
dec
dec
aad
jae
jno
push
dec
fwait
xchg
js
lret
shl
pusha
add
call
jb
mov
dec
lods
sbb
jne
inc
in
push
and
jae
lahf
movsb
lds
jmp
cmpsb
fidivrs
push
scas
mov
sub
and
push
jae
roll
lcall
test
jmp
fstl
loop
mov
add
and
dec
jle
ret
lret
insb
les
or
push
ljmp
aam
cmp
data16
pusha
inc
dec
cmp
dec
pop
sub
aad
mov
hlt
mov
pop
adc
adc
lds
loopne
stos
ret
pushf
psubw
ljmp
xchg
mov
jg
mov
xor
mov
sub
xor
and
aas
idivb
xor
ret
adc
lret
ds
mov
fmul
jae
mov
mov
je
scas
fdivrs
dec
addl
enter
les
pop
and
inc
mov
pop
shlb
loopne
jo
mov
inc
mov
inc
fisttpll
cmpsl
pop
aam
push
cld
enter
in
xor
shlb
and
jb
sbb
loope
xchg
mov
cmp
or
rorl
pop
xor
mov
sti
call
out
into
or
js
jb
pop
not
mov
ror
loope
pop
leave
aas
xchg
ss
into
jmp
fwait
loop
push
iret
push
fs
pop
stc
adc
js
pop
mov
jae
in
mov
jl
or
sbbb
sbb
hlt
or
push
loope
ret
xchg
repnz
xor
pop
mov
pop
mov
mov
adc
fs
push
imul
inc
sbb
dec
in
insb
push
das
fimull
mov
mov
popa
dec
in
cmp
out
mov
xor
push
cltd
popa
setne
mov
adc
xor
subb
scas
dec
nop
call
aas
xchg
sbb
mov
nop
or
lcall
sti
sbb
pushf
jp
icebp
or
arpl
xchg
xor
xchg
popf
fld
inc
cmp
pop
push
mov
push
in
pop
js
cmpsb
mov
push
icebp
mov
inc
rol
push
rcrl
jne
mov
insl
popf
cmp
xor
xor
mov
sbb
sti
add
sub
jp
test
jecxz
xlat
adc
cmpsl
outsb
adc
out
sbb
inc
data16
test
xchg
in
xor
pop
stos
fwait
push
xor
stos
xor
hlt
inc
push
fs
xor
xor
mov
adc
push
mov
cmp
leave
mov
add
lock
lcall
aaa
xchg
les
jmp
mov
stc
ficompl
roll
insb
pop
jns
cmp
jbe
xor
scas
sti
lret
fs
out
adc
xor
pushf
pop
repnz
jecxz
nop
mov
sub
push
pop
in
sti
dec
jnp
ficomps
jne
aaa
push
cmc
pop
inc
inc
push
aas
jge
inc
inc
and
jbe
mov
push
pusha
push
clc
adc
xchg
pop
mov
ret
and
popa
push
and
inc
mov
and
xchg
xor
sbb
movb
mov
mov
in
cmc
push
push
cs
mov
pop
xlat
add
insb
push
repnz
add
dec
mov
sbb
test
xor
pop
ds
jae
cmp
adc
inc
stos
pop
fs
lret
dec
and
pop
imul
cmp
jp
push
mov
xchg
lds
cmpsb
mov
sti
aas
adc
cld
sub
mov
cmp
sub
in
int3
xor
cld
push
push
cs
and
xor
inc
mov
push
out
pop
mov
xchg
jmp
ss
inc
cmc
mov
or
cs
push
hlt
or
out
repnz
mov
int
out
push
ret
stos
push
dec
lds
pusha
and
mov
and
sbb
call
and
loop
decl
push
mov
leave
mov
and
xchg
add
jb
testl
loop
inc
or
push
lods
fldcw
cmpsl
mov
rcrb
orl
popf
pop
dec
mov
sub
dec
sub
sub
clc
roll
push
data16
iret
jmp
push
loope
jbe
xchg
adc
sbb
test
test
and
pop
aas
xchg
cmp
in
dec
inc
ret
push
dec
cmc
xchg
sub
add
clc
push
in
aam
call
addb
and
pop
flds
mov
jb
movsl
dec
scas
out
cmp
psubw
pusha
add
iret
fwait
adc
fstpl
leave
ss
addl
dec
push
andb
jne
jmp
rorb
mov
inc
repnz
pop
div
adc
add
jo
xlat
frndint
and
in
int3
pushf
icebp
fwait
pop
int
pop
lds
push
adc
js
mov
mov
outsl
into
pop
mov
xorl
pop
inc
aas
shlb
data16
mov
sahf
mov
call
adc
push
dec
jbe
aaa
out
adc
out
inc
mov
jno
hlt
adc
and
mov
add
push
push
cmp
out
xor
aam
sub
or
leave
mov
mov
loope
adc
lock
pop
push
xchg
stos
test
pusha
popa
push
inc
popa
xchg
ss
pop
loope
iret
pop
adc
xor
lock
nop
push
ror
dec
sub
or
xor
xchg
movsb
push
loope
fisubrs
dec
mov
mov
xchg
aam
out
inc
hlt
enter
or
js
imul
aas
gs
push
dec
jmp
sub
int
jae
js
and
ret
std
xor
cmp
mov
sti
xchg
cmpsb
int
lcall
jnp
aam
in
xlat
mov
mov
mov
jl
rcll
pop
loopne
outsb
jae
jmp
mov
cmpsl
sub
outsl
sti
cmp
imul
out
fyl2xp1
mov
cli
addb
xchg
iret
xchg
jbe
sbb
xchg
push
enter
js
mov
daa
out
mov
lds
push
test
mov
sub
jecxz
xchg
pop
mov
enter
sbb
inc
subb
orb
mov
out
sbb
and
hlt
in
in
cltd
dec
in
js
cmc
mov
and
and
push
movsb
imulb
loopne
sbb
pop
sbb
push
sub
fsub
pushw
inc
pop
xor
jp
leave
in
sub
push
call
xor
das
inc
sbb
inc
mov
sbb
les
sbb
fistl
lea
mov
inc
sbb
lods
xor
jae
jbe
sbb
lret
stc
test
jns
lahf
xchg
imul
cwtl
jp
mov
cmp
xor
sbb
xor
adc
shr
aas
imul
sar
adc
xlat
rcll
ret
jbe
ret
mov
stos
lds
jg
xchg
fldt
xor
out
cmc
outsb
jmp
inc
je
cmp
mov
jl
cmp
add
loop
mov
outsb
imul
or
sbbb
ret
lods
test
push
lea
in
repz
fstps
mov
pop
repnz
xor
xchg
adc
daa
aad
je
aam
pop
mov
incb
dec
add
mov
adc
faddp
lods
rclb
icebp
bound
mov
int3
pop
inc
call
sbb
arpl
add
jg
mov
mov
test
data16
dec
movl
cld
inc
xchg
int3
mov
mov
sbb
inc
add
pop
pop
pop
bound
mov
push
lods
mov
jns
dec
outsb
ret
in
mov
fstps
outsb
dec
xchg
stc
mov
fnstsw
adc
jne
test
lock
inc
insl
adc
lods
adc
lods
fwait
cwtl
jmp
pop
andl
cmpsl
rorl
out
pop
in
aam
xchg
sub
cli
sub
cwtl
and
xor
sti
mov
push
outsb
sub
add
sahf
push
lds
push
cs
and
das
mov
ud0
adc
pop
mov
outsb
ljmp
sbb
insl
xor
jg
sahf
xor
stos
lret
insb
mov
mov
dec
pop
subl
mov
mov
addr16
loop
sbb
pop
cltd
sub
or
test
mov
cs
aam
aad
ja
dec
mov
lahf
push
roll
xchg
mov
mov
lcall
roll
cmp
in
repnz
jp
and
pmulhuw
lock
adc
stos
daa
dec
int3
sub
les
and
aas
push
jae
int3
inc
and
xor
stos
outsb
negb
jo
xorb
inc
xor
imul
test
inc
divl
into
pusha
data16
mov
adc
cli
xchg
sarl
jmp
xor
aaa
pop
ss
sub
push
call
lret
loop
fldcw
loop
lret
out
ret
cmp
js
push
test
es
nop
sbb
sbbb
pop
inc
fistpll
or
dec
jmp
jne
fldenv
add
stc
icebp
rcrb
jg
aam
adc
xchg
xor
adc
repnz
test
xor
jnp
fcmovu
pop
lcall
push
leave
shlb
sarb
mov
inc
movsb
das
inc
mov
loope
repz
data16
jne
sbb
dec
fisttpl
es
fsubr
and
sbb
aad
sbb
scas
sub
push
aam
psrlw
add
and
pop
cwtl
mov
lcall
inc
adc
enter
mov
jns
les
xchg
std
repz
mov
js
pushf
inc
add
fmulp
xor
jg
lahf
mov
fdivl
sbb
fistpll
lret
cwtl
sbb
push
push
ljmp
icebp
jmp
cmpb
rol
aad
testl
cmpl
stos
cmp
in
jns
popa
pop
adc
mov
js
cmpsl
adc
ljmp
sub
sub
adc
aam
mov
dec
lods
cmp
lret
pop
sub
enter
dec
pop
mov
dec
mov
js
int3
jae
jl
popf
popa
cwtl
mov
jbe
insb
inc
ss
jbe
nop
push
cld
stos
sbb
push
test
test
out
shl
scas
pop
add
out
pop
push
out
pop
inc
sbbb
jne
cmp
cltd
xlat
es
scas
pop
jns
movsl
outsl
push
xchg
enter
jge
shl
cmp
sub
ret
sub
in
js
imul
dec
mull
or
cmc
sub
fnsave
push
pop
test
repz
leave
int
pop
dec
lret
pop
mov
xor
push
pop
mov
lock
std
inc
stos
mov
es
out
pop
lods
pop
sbb
cmpsb
lock
jnp
out
outsb
xchg
sbb
test
aaa
push
jp
ja
out
push
push
dec
scas
imul
gs
jl
insb
repz
shrl
aam
jbe
xor
push
outsb
inc
fiadds
fidivrl
or
mov
xchg
repz
cmpsb
inc
sub
imul
mov
add
inc
mov
stos
add
out
sbb
pop
pop
xchg
imul
mov
mov
pop
jb
push
popa
gs
add
cmpsb
js
cmp
ds
pop
stc
aam
xchg
sub
scas
lea
test
in
nop
add
outsl
sbb
mul
out
je
jno
std
leave
cs
stc
sub
nop
sbb
loop
pop
inc
sbb
sahf
gs
sar
inc
cmc
ds
enter
jae
pop
cmp
out
lahf
mov
testl
fisubs
subl
sbb
dec
sti
mov
sub
lock
xchg
fisttpll
adc
shl
fstps
mov
mov
push
jp
push
pop
xchg
dec
or
inc
push
test
fcmove
loop
xor
adc
inc
mov
add
shrl
inc
addr16
jp
cmp
pop
test
fistl
inc
pop
inc
shrb
push
lcall
ret
push
push
cmp
je
push
cltd
push
push
mov
xor
shl
mov
leave
mov
sbb
pop
out
fiadds
imul
in
add
daa
nop
mov
dec
scas
or
dec
jg
inc
xchg
adc
insl
adc
leave
inc
dec
push
lds
xchg
std
imul
loope
xor
jmp
test
lret
sbbl
and
sub
ds
mov
xor
inc
mov
sbb
ljmp
cmp
in
sub
imul
rolb
push
jecxz
xchg
addr16
or
movsl
pop
fcmovne
mov
mov
subl
push
popf
dec
mov
pop
out
adc
lds
mov
rcl
popf
mov
sbb
fcmovnb
dec
add
xchg
insl
mov
rcrl
mov
mov
xchg
and
dec
aad
sub
sbb
dec
hlt
xchg
xor
ret
test
sbbl
lahf
or
sbb
adc
fwait
in
fcoms
nop
les
mov
scas
lahf
xorb
pop
fsqrt
mov
cli
fsubrl
clc
push
mov
iret
push
xchg
jo
or
sub
movsl
lcall
push
sahf
clc
out
pop
jg
mov
and
mov
mov
mov
xchg
gs
or
push
adc
imul
jg
addr16
ficoms
xchg
mov
sti
adc
cli
repz
and
ja
sarb
dec
cwtl
mov
in
insl
pop
stc
into
arpl
mov
push
xor
adc
sti
dec
add
jl
dec
in
mov
push
xchg
and
xor
dec
add
ss
push
mov
pop
mov
dec
popa
adc
gs
inc
cmp
mov
test
jae
and
or
scas
sbb
xchg
insb
subb
sbb
jmp
cli
inc
pop
jns
mov
scas
fidivl
sbb
xchg
out
call
popf
lahf
xor
rorb
stc
fwait
and
repnz
shlb
mov
test
jle
repnz
mov
cmp
cmp
out
and
push
add
movb
and
enter
call
insb
enter
sbb
cmp
mov
fwait
xchg
pop
add
cmc
dec
cli
sbb
in
push
mov
shr
push
mov
and
nop
out
pop
xchg
and
and
sbb
mov
xor
aas
addr16
and
push
dec
jb
xchg
push
call
dec
lock
xchg
scas
aaa
or
sbb
aas
mov
jns
sub
inc
cmp
cwtl
fdivrp
test
repnz
xchg
mov
loopne
adc
ret
xchg
fcoml
mov
push
adc
mov
adc
adc
lds
repnz
mov
and
mov
call
aaa
add
push
push
orl
jnp
shlb
not
sub
dec
mov
rorl
mov
sarb
test
push
dec
xor
mov
mov
adc
jle
in
inc
dec
mov
mov
adc
sbb
sub
push
push
mov
sbb
add
inc
cmp
jns
es
sahf
xchg
jl
out
insl
sub
or
push
ljmp
push
aam
jno
add
cmp
popf
adc
push
repz
xchg
jno
stos
mov
dec
cmpl
or
jecxz
mov
or
sub
iret
daa
int3
push
push
jne
idivl
cmpsl
dec
fistpl
mov
dec
popf
packsswb
add
call
cmpsb
dec
imul
stos
xor
mov
std
inc
enter
ljmp
iret
fs
repz
add
je
aaa
pop
or
orl
rol
shl
jg
loop
add
pop
inc
in
push
aas
pop
es
int3
or
cs
jne
mov
xchg
rolb
data16
mov
jge
jb
in
cs
into
aad
add
lods
xchg
decl
daa
stos
push
cli
sbb
mov
inc
mov
test
mov
movsl
insl
or
mov
out
cmp
pop
std
mov
lahf
xchg
pop
or
pushf
add
cmp
mov
sbb
outsb
xlat
xor
andl
sbb
adc
test
cmp
jge
jle
push
jmp
push
push
orl
sbb
js
mov
push
jns
mov
jne
stc
fstpl
adc
mov
repz
mov
pop
aas
inc
mov
mov
xchg
pop
or
jg
and
cmc
test
scas
sbb
sbb
movsl
xor
mov
xchg
and
inc
mov
rol
cmp
xchg
or
cmp
into
sbb
jno
aaa
mov
jo
mov
sbb
push
pop
sbb
mov
pop
jae
add
mov
push
cmp
inc
dec
sub
ja
mov
xor
mov
call
enter
rclb
shl
iret
out
cltd
mov
xchg
shr
inc
xchg
push
xchg
adc
cs
ror
xchg
hlt
test
fldt
inc
jge
mov
test
fiaddl
mov
cltd
cmp
sbb
mov
cwtl
push
ret
mov
push
sti
mov
mov
sbb
in
int
push
ja
mov
incl
data16
fists
pop
icebp
out
xchg
clc
push
arpl
pushf
push
fisubrs
popa
cmp
cltd
mov
lds
sbb
fs
pop
in
and
cmpsb
mov
xor
int
sbb
rcrb
daa
out
jge
mov
xchg
lods
std
pop
push
pop
enterw
scas
add
xchg
jb
test
mov
dec
push
ljmp
addr16
or
addl
bound
icebp
ljmp
dec
setl
call
mull
add
movsl
fnstsw
mov
fs
testb
pushf
loope
mov
popa
scas
push
addr16
dec
inc
sti
sub
adc
sbb
ljmp
mov
int3
negl
xchg
adc
rol
mov
pop
dec
iret
add
xor
xor
dec
mov
test
xchg
scas
pop
rorb
cld
into
dec
pop
push
je
mov
arpl
jne
xchg
sub
xor
int
xor
adc
pop
divb
pop
and
lret
xchg
fmul
cmp
pop
or
fwait
or
je
ss
cmc
xlat
mov
push
hlt
shll
and
pop
shrb
jge
sub
popa
xchg
jmp
mov
or
int3
imul
call
enter
das
out
adc
dec
cs
or
cld
cmp
movhps
ficoml
sub
sub
and
lcall
cmpsl
int
xchg
popa
jmp
daa
call
test
adc
cmp
movsl
add
push
mov
je
mov
rcrb
dec
test
nop
insl
sub
jns
faddl
sbb
fistpl
out
orl
lds
dec
jo
pop
test
xchg
ljmp
rorl
insb
sub
lea
mov
or
lock
enter
cmp
daa
cmpsb
repz
push
fstpl
lods
or
jns
mov
mov
fucomip
or
jbe
aad
push
jge
adc
sbbb
or
cmc
push
push
lods
pop
fisubl
mov
shlb
dec
es
test
out
stc
sar
jnp
and
div
cmp
push
imul
loop
aam
lods
pop
fisttps
arpl
les
call
iret
sub
xchg
dec
std
rcll
xchg
cmpsl
jg
and
out
adcb
xor
mov
cmp
flds
orl
repz
jo
sub
adc
mov
jge
adc
shr
jbe
jmp
out
sbb
xchg
cld
data16
sbb
mov
std
ja
mov
push
push
lcall
loop
push
dec
ds
jmp
ret
cmp
push
adc
mov
outsl
mov
movsl
mov
test
mov
pop
dec
add
adc
adc
out
mov
data16
jl
test
xorb
sbb
adc
jb,pn
xor
int
js
int
imul
xor
adc
mov
add
sbb
mov
inc
inc
int
fdivl
push
jno
mov
loop
jecxz
mov
loopne
jnp
test
cmp
mov
pop
adc
xor
fdivrl
inc
dec
aam
dec
leave
stos
fldl
and
xchg
cmp
leave
inc
test
rol
shl
sbb
ja
xchg
adc
mov
sti
cmp
inc
xor
pop
out
lds
out
and
imul
lret
cmpsb
aaa
and
pusha
push
fs
pop
std
mov
adc
dec
adc
dec
mov
mov
outsb
mov
enter
es
sub
icebp
ret
ret
in
add
aad
enter
xor
in
xor
inc
sub
imul
jnp
jmp
cmc
push
add
add
lock
and
sbb
aaa
sub
adc
jae
dec
rclb
rcrl
mov
mov
nop
loopne
jnp
push
scas
or
cmpsb
fldl
fdivl
sub
mov
mov
arpl
rcl
mov
add
ss
les
mov
iret
divl
lahf
jge
inc
mov
mov
sbb
cmp
mov
cwtl
imul
repz
xchg
fstpt
shll
sbb
pop
sbb
adc
aam
pop
sub
rcr
push
sub
out
cmc
mov
mov
jmp
jo
in
cmc
mov
sub
sub
push
jl
imul
sub
pop
addr16
jno
call
sub
xor
out
inc
sbb
in
pop
cmpsl
mov
scas
std
xorb
fsubrs
lahf
cld
sti
xlat
jg
pop
or
fidivs
push
enter
pop
cmp
mov
fsubrs
rol
lock
push
push
jo
jo
inc
add
cwtl
nop
add
inc
push
in
cmpsb
adc
ja
out
mov
icebp
subl
bound
adc
xor
aas
push
jne
jecxz
push
test
popa
dec
jo
adc
lahf
sbb
jecxz
sbb
mov
pop
mov
mov
ret
jne
push
inc
imul
add
mov
mov
ja
lds
js
dec
clc
and
nop
sbb
jle
outsb
in
addr16
sti
aad
dec
sbb
ja
flds
fistl
mov
cmp
fisttpl
xor
flds
ljmp
mov
xchg
and
fninit
cmp
faddl
mov
shr
jmp
push
decl
nop
and
in
mov
sti
jl
adc
sub
popf
push
or
adc
mov
sti
ret
jns
repz
adc
mov
mov
mov
cmp
mov
push
in
xorb
mov
xor
sub
enter
inc
sbb
shrl
xchg
or
notl
rcll
jnp
add
cmp
repnz
ret
into
stos
pop
int
ficoml
xchg
cmp
insb
mov
xor
mov
or
inc
jb
xor
dec
push
insb
jbe
jno
pop
sub
jl
int
out
adc
out
push
nop
dec
push
xchg
cmpsb
jge
mov
push
loop
xor
pop
inc
sbbb
adc
daa
roll
pop
jg
popf
push
jl
xchg
in
pop
sbb
adcl
ret
aam
dec
daa
dec
mov
fildl
dec
xor
adc
and
pop
cmp
mov
jo
roll
dec
push
test
sub
neg
scas
jbe
push
sub
xchg
je
je
inc
xlat
jae
rcrl
push
pushf
adc
jg
mov
add
add
outsb
mov
or
mov
pop
ja
scas
jb
je
daa
jns
ds
std
xchg
push
dec
adc
cmpsb
cltd
inc
cmp
mov
mov
es
imul
loopne
cmp
scas
in
cmpsl
add
push
add
cmc
inc
cmp
push
inc
xor
cmp
push
cvttps2pi
cmp
repz
mov
mov
dec
dec
add
push
std
int3
sub
stc
leave
fwait
sub
test
sub
shll
sti
mov
int3
inc
push
push
push
cmpsl
nop
inc
sbb
xchg
rcr
sbb
adc
mov
shrl
inc
inc
stos
sub
and
loop
shll
int
xchg
sub
loopne
int3
xor
addr16
jae
lcall
mov
cld
int3
cmp
cli
loope
pop
cld
pop
dec
stos
lcall
sti
pusha
cmpsb
std
pop
mov
inc
ret
pop
sub
dec
add
testl
push
inc
adc
xor
mov
imul
mov
movsl
jmp
hlt
mov
sub
add
and
pusha
insb
int
dec
imul
add
jmp
push
icebp
push
or
aam
xchg
es
jg
pop
pop
push
sbb
push
mov
ret
movsl
and
dec
cli
jno
call
sub
push
shrl
and
ret
scas
sbb
imul
sbb
jae
pushf
pop
sbb
pop
jb
bound
mov
mov
adc
mov
mov
jns
ja
mov
rcrl
inc
or
push
inc
ss
push
pop
push
je
jbe
mov
loopne
ljmp
pop
mov
icebp
sarb
ds
xchg
jbe
add
repz
dec
ret
sub
pop
mov
fstpl
push
ret
mov
push
test
jmp
jmp
imul
push
lods
push
cmp
pop
xor
in
xchg
fbld
aad
sti
cmp
dec
fsubrs
sbb
mov
mov
cmpsb
stos
or
negb
push
aas
xor
mov
push
and
mov
cmpsb
mov
mov
cmc
popa
jge
dec
and
xchg
cmp
mov
lret
inc
fucom
outsb
repnz
cmp
cli
and
incb
stos
jle
sbb
gs
call
or
fxch
inc
jo
jae
lret
ret
scas
fbstp
test
or
add
fldt
in
pop
fwait
jo
daa
cmp
and
dec
pop
hlt
adc
dec
inc
pusha
dec
dec
fistl
cltd
fiadds
data16
loop
iret
or
cmp
popa
add
mov
ss
xchg
jb
mov
xchg
ljmp
jmp
mov
sarb
ss
dec
loope
leave
imul
sar
fucomi
xchg
std
mov
cmp
and
aam
xchg
push
add
hlt
lret
mov
jg,pt
mov
jecxz
and
pop
aad
jb
ljmp
jnp
scas
cmp
mov
in
dec
mov
push
jnp
pop
jnp
fldcw
loop
sub
leave
in
sbbb
test
ja
pop
cmp
dec
repz
push
arpl
int
xor
mov
aas
xchg
lock
pop
fscale
negl
add
jp
shrl
and
repnz
cmc
dec
dec
sahf
add
mov
cmpsl
pushf
mov
fadds
repnz
mov
add
stos
dec
jno,pn
fdivr
mov
sbb
inc
fistpl
pop
mov
push
jae
lods
push
add
and
add
bound
cs
or
xor
ficompl
and
push
shrl
mov
clc
fbstp
mov
jecxz
popf
imul
mov
cmp
xorl
pop
dec
pop
inc
xchg
dec
gs
test
xchg
cmp
rolb
shl
push
arpl
repnz
loop
cmp
aas
pop
mov
fdivl
cltd
in
dec
sbb
cmp
push
sbb
jne
push
xor
in
adc
enter
ficoms
pop
lock
sahf
out
jge
adc
cwtl
stos
adc
mov
popf
subl
jno
xor
int3
sahf
pop
cmp
call
mov
rcl
jmp
sbb
ret
fsubr
loopne
roll
sbb
out
mov
fwait
pusha
cli
das
adc
lods
pop
or
mov
sub
add
pop
inc
adc
lahf
test
jp
stos
cltd
jnp
inc
addl
xchg
sbb
jbe
loopne
or
loope
jle
mov
ss
jb
cld
mov
adc
pop
fsubr
scas
in
pop
sti
popa
adc
dec
in
cmp
xchg
aad
fwait
xchg
cs
dec
xorl
je
dec
push
jo
nop
sub
cmp
xchg
lea
mov
rorb
fldt
xchg
sbb
mov
xchg
mov
repz
les
cltd
or
or
stos
ja
movsb
xor
jl
dec
pop
push
stos
rcll
xchg
sub
test
stc
jp
push
push
and
mov
jl
sub
insl
in
mov
add
jge
aam
rcrl
xchg
aad
add
sub
mov
mov
pop
sub
clc
divl
sub
push
aaa
cmp
sub
jg
test
fs
test
inc
push
pop
hlt
inc
push
repz
fcomps
das
inc
mov
xor
shrb
jo
scas
test
jno
addb
je
es
pop
stos
dec
push
mov
lea
push
scas
mov
add
jmp
fisttps
sti
xor
stos
mov
cmpsl
popa
cmc
xor
jp
adc
sub
dec
mull
js
pushf
lods
fisubrl
or
pop
stos
lret
push
fsubl
mov
loope
xchg
data16
and
dec
inc
shll
movsb
out
xchg
inc
push
in
outsb
and
test
pusha
sub
inc
inc
gs
push
into
in
jmp
repz
movsb
or
mov
subb
cld
adc
xor
mov
mov
dec
mov
lods
data16
or
adc
outsl
or
lds
dec
xor
cmp
std
ja
jae
jno
inc
dec
or
pop
shrl
movsl
mov
hlt
or
stos
mov
gs
inc
mov
aad
test
jb
xchg
iret
dec
pop
mov
jae
cmp
mov
xor
cld
shll
xor
test
adc
rclb
mov
shlb
cs
orl
push
mov
xor
cmp
sub
mov
repz
sub
mov
daa
ljmp
mov
inc
pop
aaa
ret
arpl
add
mov
fildll
xlat
add
jbe
imul
jae
ret
mov
dec
add
lds
shll
out
fwait
jns
je
lods
lahf
cltd
enter
cmp
movsb
or
cmpsl
jb
mov
push
push
in
pop
push
repnz
loope
adc
negl
and
fdiv
arpl
ret
mov
xchg
dec
mov
push
inc
or
adc
movsb
inc
cmpsl
mov
mov
and
cmp
xchg
pop
push
push
inc
insb
add
lods
movsb
je
add
pop
adc
pop
adc
dec
cwtl
ss
inc
mov
xchg
jns
xchg
dec
pop
leave
jb
jmp
test
adc
push
xor
iret
xchg
insb
sbb
and
arpl
fnstenv
je
pop
jl
outsb
add
lcall
imul
int3
stos
stos
imul
mov
cmp
sub
pop
cmp
out
mov
sbb
addl
addr16
bound
dec
int3
and
xor
push
xor
call
jle
insb
sbb
call
sub
push
rcrl
push
add
adc
mov
sbb
loop
mov
xor
adcb
shl
sahf
call
or
lcall
std
lahf
lahf
push
jae
mov
xchg
stc
pop
xchg
jnp
or
xor
pop
clc
pop
subb
inc
sub
or
addr16
js
bound
add
mov
cmp
xchg
jbe
mov
out
out
pusha
data16
mov
jp
jbe
dec
jne
jle
lds
rorb
sbb
inc
xor
addr16
es
inc
mov
xchg
push
fwait
push
sbb
dec
sbb
push
das
and
jl
pop
xchg
or
sub
mov
add
dec
xor
movsb
push
xor
imul
xchg
lahf
sub
xchg
or
ret
int3
and
dec
loopne
rcl
xchg
mov
or
adc
xchg
in
lods
add
xchg
loop
mov
clc
mov
popl
dec
mov
adc
fisubrs
sbb
insl
popf
aaa
inc
aaa
mov
cmp
andb
les
test
mov
xor
icebp
add
mov
xchg
test
mov
rolb
fimull
mov
shr
pop
lea
and
push
roll
into
insl
fisttps
jge
mov
iret
scas
in
xchg
movsb
xorb
jnp
stos
arpl
pop
pushf
lcall
mov
push
sbb
mov
sar
mov
roll
jge
iret
fiaddl
cmp
ljmp
jecxz
popa
and
test
cmp
push
cmp
cmpsl
outsl
mov
and
loope
pop
mov
stos
cmpsb
ss
pop
dec
fldt
dec
lcall
dec
sub
xchg
add
imul
cmpsb
loop
loop
stc
sbb
push
sbb
call
sub
cmc
mov
in
lret
xchg
and
loopne
ja
imul
testl
cli
mov
push
mov
int
dec
in
test
andb
mov
adc
imul
cmc
mov
leave
mov
jo
out
dec
fisubrs
test
mov
cmpsb
xchg
repz
pop
fwait
mov
lahf
insl
dec
insb
lds
xor
rcll
out
push
rolb
repz
dec
cmp
jae
xchg
jbe
jecxz
mov
fwait
dec
ret
jae
cmc
repnz
mov
mov
leave
or
in
cld
pop
push
sub
es
in
dec
pop
daa
add
lods
dec
push
imul
pop
aas
in
movsb
das
hlt
orb
shlb
sbb
cld
inc
sub
pop
out
je
out
aam
xor
je,pn
mov
fwait
stos
push
dec
loopne
sbb
sub
cmp
fmull
lret
call
loope
push
sub
and
clc
insb
orb
xor
jo
pushf
jmp
pop
xchg
adc
int3
push
lahf
jne
inc
mov
loopne
xor
in
and
add
xchg
daa
push
push
call
mov
stc
mov
ja
xor
sbb
enter
fs
mov
test
push
inc
fbstp
jb
dec
pop
daa
pop
call
sbb
stos
push
xchg
cmp
fisttpl
cmp
pop
insl
and
sbb
test
lods
jae
cmp
lret
xor
movsl
xlat
or
jge
cmp
fistpl
adc
mov
bound
imul
test
and
sbb
stos
loope
xchg
pop
neg
sub
bound
and
cmc
xlat
fs
ja
pop
arpl
add
sahf
test
jb
test
out
xor
pushf
mov
adc
cltd
push
cmp
adc
and
add
jg
into
mov
and
and
shl
inc
and
xchg
mulb
push
sarb
stc
add
lret
push
inc
cmpsb
sub
cmp
push
xchg
iret
lret
scas
ror
and
or
out
pop
pop
scas
aam
push
pop
mov
movsl
push
cmp
jp
mov
sbb
jge
jl
pop
mov
xor
adc
mov
dec
mov
dec
add
icebp
scas
add
jbe
push
mov
push
ja
mov
xor
jbe
pop
push
int
or
pop
cmpl
push
fstpl
rcrl
movsb
shrb
add
cmc
icebp
mov
add
dec
mov
sahf
cmc
popa
sarb
ffreep
sub
stos
scas
mov
roll
in
sbbl
imul
pop
push
ret
xor
jp
inc
mov
mov
xlat
jb
loope
push
and
jno
push
mov
fildll
inc
cmpsb
pop
mov
jns
scas
mov
leave
scas
cltd
fs
dec
cmpsb
ret
xchg
scas
leave
pop
lods
add
arpl
enter
into
jb
or
sti
loop
or
shr
rol
scas
add
imul
mov
mov
mov
outsl
jnp
inc
iret
data16
add
jp
cltd
cmp
or
inc
mov
shll
rcll
scas
push
xchg
xchg
jl
and
test
push
push
sbb
push
out
sub
jb
push
add
pop
push
mov
mov
fisttpl
jl
std
xor
xchg
sbb
mov
loop
sti
ret
xlat
mov
icebp
push
push
jb
std
adc
aad
out
testb
jne
mov
and
orb
clc
imul
xchg
add
mov
dec
sbb
pusha
mov
movb
sub
adc
or
jnp
jo
daa
bnd
das
stc
fucom
nop
pcmpgtw
fcoms
mov
sub
mov
sti
push
mov
loopne
js
test
inc
jmp
pusha
out
mov
push
sbb
enter
sbb
notb
mov
shll
dec
push
sub
cld
cmp
rorl
dec
ffreep
cmpsl
inc
scas
ret
lods
pop
inc
adc
sti
fisubl
insb
jae
push
popf
ret
sbb
out
dec
in
inc
xchg
mov
rcll
add
pop
loopne
pop
pop
dec
inc
xor
push
sub
dec
cli
dec
inc
add
pop
add
inc
add
pop
lea
lods
pop
mov
xchg
push
ret
hlt
add
push
mov
jp
sbb
mov
and
andl
pop
push
mov
rcrb
dec
sub
mov
pop
lret
mov
movsb
out
shll
rcr
pop
mov
pop
and
iret
or
or
lods
iret
mov
mov
sarl
stos
push
insb
repnz
lods
or
inc
cmpsb
fsubs
push
insl
shr
sbbl
xchg
sbb
adc
sahf
mov
push
lods
push
cmp
addr16
mov
cld
sub
shrl
movsb
loopne
nop
lea
aas
fnstenv
or
fists
loopne
push
in
dec
push
shll
pop
and
cli
jge
adc
lds
cld
xchg
mov
inc
cli
ret
jge
call
cmpsl
sti
push
xchg
sub
popa
sub
out
rcll
dec
aaa
test
ret
paddsb
in
sbb
mov
and
js
mov
adc
sub
cmp
ljmp
lea
popf
test
and
or
mov
jne
leave
push
mov
test
fbld
mov
leave
out
inc
ja
cmp
push
sahf
out
hlt
pop
cmp
dec
out
lret
xchg
lea
popl
sbb
pop
push
jecxz
add
mov
cmc
loop
imul
shrb
mov
mov
daa
and
test
fldenv
stos
icebp
call
insb
cmp
add
cwtl
roll
mov
pop
mov
mov
ds
and
mov
sbb
inc
push
or
and
add
mov
mov
sub
in
inc
or
pop
pop
xchg
pop
sti
in
shl
push
jae
sub
xor
hlt
mov
and
je
cmp
sbb
mov
fimuls
sub
dec
inc
jle
push
adc
fnstsw
pop
shlb
into
inc
std
lcall
outsb
xlat
xchg
jl
push
insl
nop
pop
jge
cmpsl
mov
int
sub
sar
testb
scas
dec
xchg
jg
out
lret
es
xor
sbb
enter
in
sbb
fimuls
and
test
movsb
push
out
inc
jo
mov
add
dec
xor
mov
je
add
rorb
hlt
fsubs
add
stos
or
cltd
mov
add
cmp
sub
cwtl
insb
pop
sub
dec
rorb
mov
sbb
cmp
jg
push
in
out
or
mov
fdivs
lcall
inc
push
cmp
into
jmp
pop
cmp
lods
shl
fwait
push
lock
jb
test
out
xchg
jecxz
push
stos
lret
rcrb
mov
popa
pop
mov
mov
or
insb
idivl
popa
xor
cmp
mov
movsl
lods
add
sbb
mov
icebp
rclb
and
sti
mov
add
mov
xor
in
les
xchg
insb
pop
leave
bound
scas
outsl
into
nop
adc
pop
xchg
loope
test
mov
jns
cmpsb
cmp
add
out
mov
aas
xchg
sahf
xchg
jg
inc
jge
sahf
loopne
mov
dec
repnz
cmpsl
mov
daa
cmp
add
inc
loopne
mov
notb
add
pop
std
jno
sub
scas
call
repnz
cmp
testb
jmp
std
inc
mov
mov
xchg
mov
add
xchg
xor
ljmp
pushf
sahf
fdivl
push
xchg
inc
shl
push
xchg
sarl
sbb
pushf
rcrb
cmpsl
add
add
cmp
movsl
jae
or
lahf
xchg
lods
out
mov
test
add
and
daa
dec
sub
fbstp
js
orl
add
movsb
leave
and
mov
inc
sbb
push
outsb
cmp
xor
ljmp
add
scas
mov
sbbb
dec
push
jb
divb
pop
cmpsl
jae
jmp
mov
aaa
cltd
jmp
jns
ss
les
xchg
dec
mov
addr16
push
imul
enter
daa
mov
and
sbb
inc
adc
nop
jmp
sbb
add
push
add
repz
cmp
insb
mov
jmp
dec
xchg
xchg
pop
hlt
jecxz
mov
in
adc
movsb
fisubrl
mov
xor
out
adc
adc
mov
lret
bound
dec
addr16
ss
xor
sbb
jns
lahf
inc
mov
xchg
test
test
jg
lods
lods
cmp
lock
cmp
mov
fistpl
fistl
sbb
mov
clc
test
test
sbb
add
cmp
jnp
mov
sub
dec
mov
pop
rorl
xor
cmc
add
cmp
cmc
jno
xor
mov
mov
hlt
xlat
add
xchg
into
out
hlt
and
push
orl
repz
pop
fs
xchg
xor
insb
pop
sbb
and
mov
out
dec
sahf
mov
inc
adc
fiadds
hlt
lret
repnz
adc
ss
xor
faddp
mov
xlat
lahf
xchg
push
js
jp
lahf
or
cli
or
or
or
sub
mov
xlat
xchg
xchg
hlt
push
push
push
dec
fidivs
iret
mov
xchg
mulb
adc
push
les
bound
or
pop
sbb
dec
add
pushf
adc
test
sub
shl
jne
sahf
mov
xor
lock
dec
mov
xchg
cmp
ss
out
jle
jbe
push
mov
mov
mov
repnz
mov
sbb
pop
pushf
fucomip
xchg
jbe
loope
enter
scas
fidivrl
leave
ljmp
sub
mov
repnz
push
adcb
loope
adc
jl
sub
cmpsl
mov
pop
cmp
hlt
mov
push
adc
insb
inc
insb
test
cmp
mov
clc
in
out
mov
or
aas
mov
and
lcall
push
vmovupd
rcrl
sub
dec
enter
fcomps
xchg
inc
mov
pop
lods
or
or
fs
xchg
ljmp
das
push
cmp
mov
or
inc
shll
out
mov
leave
jne
stos
int3
push
retw
mov
int3
stc
mov
add
push
inc
ja
jmp
lods
test
push
fdivp
inc
add
call
divl
adc
jae,pn
add
sbb
pop
incb
lret
mov
insb
mov
out
incb
lds
popf
cmp
out
mov
adc
cmova
dec
imul
sbb
mov
mov
pop
mov
xchg
sahf
or
int
adc
cmp
and
hlt
fs
cmpsb
test
ror
scas
mov
xchg
outsl
inc
mov
cwtl
or
pop
cmpsl
jns
mov
jns
fwait
loopne
cltd
ss
lods
mov
clc
ja
daa
outsl
inc
jle
jecxz
jb
sbb
mov
inc
sub
mov
aam
push
cmp
int
xor
call
addr16
mov
sbb
andl
mov
push
mov
pushf
movsl
pop
jle
cmp
cli
sti
daa
imul
fcmovb
icebp
aaa
cmpsl
or
adc
adc
adc
pop
sub
ds
jmp
pop
mov
lahf
xor
or
mov
sbb
out
outsb
dec
mov
and
cli
rcrl
movsb
loop
lret
sahf
les
daa
lahf
js
xlat
pop
xchg
jmp
orb
pop
mov
mov
or
dec
xor
sbb
ds
stc
cltd
pop
lcall
pop
idivl
adc
xchg
jb
in
dec
xchg
push
aad
std
les
xor
dec
dec
push
adc
or
js
sub
ds
or
jo
xchg
iret
pop
outsb
outsb
mov
outsl
outsb
int
pop
imul
notb
rcll
jg
scas
xchg
imul
cmpsl
mov
pushf
loop
in
jle
sbb
test
push
lret
data16
lret
push
sbb
cmpsb
xchg
and
inc
movsl
icebp
xor
mov
repnz
aad
mov
das
popf
bound
mov
scas
aaa
add
and
das
aad
shll
xchg
or
jmp
pop
mov
or
mov
or
ficoml
or
mov
das
testl
fwait
sbb
mov
cvtps2pd
call
inc
dec
push
repz
test
mov
lods
push
gs
cmp
mov
shrb
lret
lahf
and
sbb
push
ja
adc
ret
call
incb
push
push
pop
adc
insl
lock
lods
or
sbb
xchg
mov
sub
loop
pop
mov
aam
dec
jo
cmp
in
pushf
sub
and
sbb
fbld
ja
or
cmp
movsb
push
inc
fs
scas
stc
popf
xorl
popf
aas
and
xchg
sti
fyl2xp1
mov
lret
aas
pop
call
or
lods
xchg
sub
and
rcrb
mov
add
inc
push
aam
sub
cs
mov
pushf
aaa
adc
mov
repz
pop
sbb
and
test
dec
call
sbb
xchg
lret
mov
loope
mov
add
xchg
xlat
imul
jl
ja
jmp
dec
shrb
clc
test
xor
ret
mov
adc
stc
lea
adc
mov
cltd
ret
stos
dec
mov
nop
or
xchg
leave
cmp
jmp
add
mov
cmp
pop
hlt
pop
adc
mov
negl
xor
sub
arpl
sbb
inc
mov
ret
imul
jo
fildll
xlat
insb
js
pop
mov
fistpl
ss
cmpsb
shll
daa
mov
pop
and
sbb
push
mov
stos
dec
mov
mov
mov
add
scas
dec
xor
mov
out
xor
and
movsl
into
imul
inc
sub
adc
jl
cmp
es
popa
mov
aam
rclb
movsl
sti
insl
lcall
out
cmp
push
or
loopne
ret
cmc
xor
or
in
pushf
fwait
setge
xlat
cmpl
fidivrs
inc
aaa
dec
fstpl
push
sahf
push
dec
push
cmp
pop
lock
mov
hlt
sbb
dec
aad
push
mov
inc
bound
xchg
aam
sbb
add
repnz
ljmp
stos
popl
test
sub
xchg
int
lds
push
addl
and
cmp
jnp
sbb
add
cltd
mov
add
push
adc
cmpsb
pop
add
and
push
shlb
aad
jns
mov
xchg
inc
out
xchg
mov
out
out
ss
inc
and
or
xchg
mov
mov
les
pop
int
inc
test
sub
jae
popa
bound
lret
xor
cwtl
icebp
mov
and
stos
jecxz
sub
inc
xchg
in
sub
adc
xchg
loope
xchg
testl
iret
loop
dec
adc
sbb
and
mov
mov
je
mov
push
lea
pop
add
out
test
out
mov
adc
rcll
mov
pop
cs
out
adc
cmpsl
aaa
in
es
popfw
cmp
jne
out
stos
mov
incb
push
outsb
mov
lds
shlb
ret
dec
sbb
cmc
mov
out
jp
cld
cwtl
xchg
mov
aam
jecxz
cltd
adc
mov
push
add
mov
push
imul
push
fs
out
out
stc
dec
das
push
xchg
push
pop
and
std
dec
cmp
add
fs
pop
or
pop
data16
jns
pop
cmc
inc
stc
sbb
sub
mov
mov
or
pusha
add
rcrb
and
mov
inc
mov
adc
push
bswap
jecxz
xchg
push
loope
cmp
fldcw
sub
jne
movsb
sub
test
xchg
xchg
xchg
inc
hlt
cmp
scas
push
pop
ss
add
mov
sub
in
dec
xor
mov
dec
into
les
dec
das
sub
adc
es
ficomps
and
ficomps
mov
or
inc
mov
pusha
mov
mov
xchg
daa
inc
in
fwait
pop
adc
les
mov
mov
push
fisttpll
pusha
lret
cld
cmp
mov
mov
xchg
fstps
mov
mov
or
movb
xchg
jmp
imul
lods
inc
add
inc
movsb
repnz
out
inc
and
out
pop
jg
rorl
dec
inc
enter
subb
cmp
scas
or
and
out
mov
sahf
icebp
push
je
lods
sbb
pop
push
jg
es
insb
mov
or
ds
fnstsw
pop
shl
test
and
imull
mov
jp
xchg
jmp
inc
jmp
jae
fsub
ss
jl
popf
rcrl
mov
shll
dec
sbb
or
sbb
clc
in
inc
fmull
aas
outsl
divl
and
inc
jle
lods
push
fwait
push
push
jmp
fdivr
fldl
into
mov
jmp
lock
jge
mov
add
push
mov
int
mov
push
xor
loope
jb
loopw
addr16
imul
sti
pop
mov
mov
sub
xchg
sub
jp
enter
lcall
dec
jl
mov
popf
adc
repz
push
inc
mov
jno
jmp
nop
cmpsl
lret
ret
pop
push
sbb
dec
push
fsubl
loopne
insl
push
pop
stc
add
int
insb
dec
sarl
push
xor
inc
pop
xchg
mov
std
out
cli
shl
adc
cwtl
xor
jmp
addb
mov
push
adc
lret
outsb
jge
daa
inc
std
or
add
cwtl
std
jo
hlt
mov
mull
or
adc
negl
xor
or
adc
mov
fiadds
loop
divl
js
sti
call
push
sbbb
jno
dec
arpl
lret
inc
jns
loope
rdmsr
insb
cmp
jae
pop
mov
jmp
push
sub
dec
mov
mov
out
cmp
and
xchg
lods
test
adc
lock
icebp
add
inc
lret
jne
inc
add
pop
gs
xor
add
test
jmp
pop
cwtl
insb
insb
divl
dec
icebp
subl
popa
daa
xchg
and
sahf
std
popf
adc
notl
cwtl
jge
jmp
int
testl
inc
in
popf
in
jae
fs
jno
xor
dec
pop
mov
push
sbb
fs
pop
or
inc
xor
inc
cmpsl
std
and
jecxz
and
cmpsl
in
mov
cmc
jo
in
sub
cli
inc
inc
mov
int3
push
mov
sti
idivl
out
dec
filds
or
mov
push
mov
ffreep
stos
call
sub
adc
jmp
in
ljmp
xchg
sub
or
cmc
jmp
fisubl
sbb
in
int3
test
xchg
sarl
loop
inc
mov
xchg
aaa
testb
daa
mov
xor
mov
xchg
in
aad
push
push
lds
lcall
sub
popa
insl
lea
bound
xchg
into
xor
push
or
jb
arpl
ss
into
in
adcl
loop
push
shrl
sub
shll
xor
dec
mov
and
sarl
cmp
cmp
xchg
cmp
adc
lods
sub
or
or
mov
inc
push
adc
xchg
adc
test
pusha
daa
inc
mov
scas
fisubrs
aaa
inc
enter
mov
dec
int3
push
dec
jge
cmp
cmp
xchg
inc
mov
ret
mov
jo
adc
sbb
lods
xchg
loop
loope
loop
inc
mov
imul
shll
pop
and
lret
sbb
inc
outsb
jle
popf
sbb
out
sub
ss
push
pop
push
jp
lock
lahf
in
mov
dec
movsb
jns
or
pop
jp
sub
xchg
push
add
dec
mov
push
jecxz
fcmovnu
pop
xchg
mov
add
test
pop
cmpsb
sub
cmc
ret
mov
ljmp
pop
dec
jns
fnstcw
test
mov
stc
minps
inc
sbb
mov
cwtl
insl
sbb
adc
cmp
mov
xchg
adc
test
push
je
outsl
stos
xlat
fistps
push
dec
mov
pmovmskb
dec
inc
inc
push
xchg
lock
adc
stos
movb
pusha
in
scas
xor
push
ljmp
enter
clc
js
pusha
pop
mov
jle
out
adc
xor
in
lret
dec
sbb
fdivl
push
lock
pop
xor
mov
mull
push
mov
mov
push
dec
xor
inc
aad
jne
xchg
jnp
mov
cmp
or
aaa
test
dec
sarl
sub
or
mul
pop
inc
in
dec
cmpsb
push
shrb
mov
cmp
sub
js
jo
mov
and
cmp
and
jae
xor
mov
mov
push
mov
inc
or
cwtl
ja
rclb
inc
out
push
adc
div
fnstcw
aad
dec
mov
mov
pop
fcomp
out
nopl
ss
xor
and
mov
push
in
orb
sub
sbb
push
outsl
push
in
lea
add
jns
pop
push
dec
mov
push
insb
scas
ret
mov
xlat
ss
data16
clc
int
fldt
jp
cmp
jp
pop
adc
cmp
xchg
out
and
mov
lret
inc
jl
mov
xlat
movb
jmp
std
call
xchg
sub
das
mov
mov
add
inc
adc
scas
xor
inc
lods
int3
and
and
sub
push
mov
xor
iret
mov
test
adc
fsub
ljmp
cmpl
mov
jp
xchg
and
and
movsb
push
insl
sub
pop
mov
dec
sahf
xchg
xchg
pop
lret
add
inc
mov
xchg
int
push
insl
pushl
out
into
call
dec
in
sbb
inc
aad
and
dec
push
mov
push
xlat
or
add
scas
repz
xchg
in
inc
pop
movsb
cli
div
das
sar
jns
gs
in
lahf
and
sub
daa
and
scas
and
cmp
mov
xchg
adc
stos
jno
insl
inc
testl
jo
cmp
sub
repnz
mov
inc
out
js
in
fwait
aas
pop
ljmp
sub
out
push
lds
gs
sbb
fwait
in
lret
sbb
mov
or
pop
and
jg
int3
xor
inc
add
decb
insl
in
pop
pop
js
fldcw
sbb
call
or
mov
and
cmp
mov
addr16
and
adc
jb
divl
add
inc
xchg
das
enter
lds
inc
ljmp
cmp
push
jnp
pop
insb
jge
into
push
inc
stos
ret
mov
incl
fadds
pop
jnp
push
xchg
or
pop
xchg
mov
adc
cmp
lods
inc
ljmp
add
inc
sbb
and
pop
outsb
aad
ja
push
lahf
xchg
popa
es
pop
dec
inc
mov
aam
or
gs
aad
xchg
fidivl
sbb
adc
call
and
fisttpl
insl
ret
add
movb
pop
inc
lods
xchg
adc
imul
movsb
scas
sub
js
xchg
and
pushf
mov
out
fidivrl
inc
and
push
xchg
ret
rcll
mov
pop
push
test
popf
push
mov
mov
sub
ret
adc
jecxz
sub
fldenv
cld
popa
dec
fistpll
push
lret
fwait
arpl
mov
subl
rcrb
pop
das
adcl
sub
ficoml
gs
add
xlat
in
popl
divl
aad
ljmp
pop
mov
in
xchg
pop
mov
sbb
cmp
out
push
jmp
pop
inc
iret
pop
popa
push
mov
dec
add
xchg
jle
xchg
stos
das
ficomps
jbe
ret
jno
jae
fidivrs
outsb
or
and
sahf
fs
or
mov
sbb
test
push
xchg
aad
sbb
nop
lret
aas
lret
and
and
js
cmp
lahf
jns
mov
push
pop
sub
idivl
sbb
shl
pop
push
outsb
cltd
add
and
sbb
imul
mov
cli
mov
in
jle
iret
add
popf
mov
dec
fmuls
mov
cmp
out
div
xlat
xlat
sahf
push
out
xchg
addb
mov
pop
and
xchg
stos
mov
ss
out
ss
mov
mov
mov
push
cmp
and
nop
addr16
fidivrl
dec
cmp
movsl
stos
mov
cwtl
push
out
fisttpl
es
push
sub
call
inc
mov
or
jb
mov
mov
movsl
pushf
dec
aas
sbb
sbb
jle
lods
push
cmc
and
and
sbb
lret
push
lret
inc
push
add
daa
lret
inc
add
pop
inc
xlat
loope
inc
out
inc
adc
outsb
push
mov
mov
icebp
test
and
inc
pushf
nop
sbb
pop
ss
inc
outsb
adc
mov
movsb
cmp
xor
xor
mov
push
jl
rcl
out
out
mov
aad
das
stos
fidivrl
jb
daa
cli
mov
ljmp
sar
gs
inc
adc
xor
inc
and
pop
mov
hlt
fstpl
adc
fwait
add
mov
jno
dec
dec
xor
adc
push
pop
inc
dec
lods
lods
jecxz
daa
cmp
test
stc
jg
mov
rorb
cmp
out
adc
sub
stos
xchg
sahf
repz
mov
pop
hlt
xchg
add
fisubrl
stos
sbb
scas
xor
gs
xor
pop
fwait
pusha
sub
mov
cmpsb
push
or
mov
mov
and
and
scas
inc
xchg
xchg
xchg
jae
lahf
repz
inc
mov
movsb
jb
in
mov
lret
pop
cmc
stos
aaa
lcall
ss
lds
mov
push
inc
cld
push
cmp
cmpsw
push
dec
andb
fnstsw
test
in
or
fsubrl
add
rorl
xchg
sarl
mov
mov
bound
inc
subl
stc
xlat
adc
dec
cmpsl
dec
mov
adc
inc
fsts
adc
out
push
aas
adc
gs
sub
out
push
aas
aad
mov
jno
out
fmuls
jl
push
inc
xor
lods
int
sbb
mov
pop
or
sbbb
int3
xor
cmp
stc
inc
popa
xchg
int3
sti
pop
jmp
scas
jecxz
gs
push
shrb
outsl
xchg
scas
push
sbb
adcb
cmp
gs
pop
mov
or
adc
sub
aam
xor
shr
pop
mov
mov
leave
mov
into
loop
inc
repz
xor
pusha
cmp
mov
pushf
testl
out
loope
int3
adc
add
in
loop
ja
adc
mov
sub
cmp
data16
lds
fiaddl
outsb
push
stos
in
nop
lods
add
lods
daa
lods
cmp
fdivl
pop
xlat
push
lret
and
iret
cmp
push
lods
ret
mov
in
xor
add
inc
push
imul
push
inc
adc
mov
sbb
clc
or
or
out
rcl
jle
dec
mov
scas
lret
mov
mov
dec
push
mov
ljmp
or
push
lahf
jp
xor
xor
test
xor
adcb
sub
out
dec
in
decb
lcall
mov
mov
adc
push
cltd
inc
mov
popa
xchg
dec
addl
mov
push
push
mov
pop
mov
mov
xchg
test
mov
popa
push
jmp
or
std
push
loopne
cmp
sbb
mov
sti
sub
sub
scas
loop
push
xor
cwtl
bnd
dec
out
sbb
and
lret
test
insl
dec
fdivrl
cwtl
jnp
cmpb
or
mov
inc
aas
dec
scas
push
lahf
repnz
or
and
and
cmpsb
sub
int
test
jb
clc
pop
lcall
mov
add
int3
mov
xchg
rorl
leave
cmc
loope
vmovntdq
and
shll
mov
mov
xor
stos
sub
xchg
sbb
add
xchg
push
jne
decl
lock
xlat
mov
outsl
js
mov
push
jo
jno
or
mov
xor
xor
mov
in
mov
xchg
lret
xor
pop
stos
pop
out
push
mov
cmpl
lds
out
mov
push
in
shrb
hlt
jg
dec
adc
ret
div
rcr
dec
aad
sub
mov
call
lods
loop
daa
outsb
push
inc
jne
jb
jg
and
mov
outsb
add
adc
cmpl
cmp
push
out
in
pop
or
dec
std
adc
xor
cwtl
sbbl
mov
clc
gs
add
adc
xor
icebp
inc
cld
leave
jle
cmp
jo
out
pop
in
ret
inc
into
in
leave
mov
jmp
cmp
pop
add
nop
repz
lahf
jb
push
xchg
sbb
mov
rolb
paddusb
mov
or
iret
fcmovnu
dec
push
adc
xor
adc
addl
incb
jle
mov
aam
aad
xchg
ret
movsb
insb
add
cmp
mov
into
jne
stos
lea
sbb
pusha
cmp
daa
inc
fistpl
mov
sahf
xchg
push
clc
pop
and
inc
push
jns
lods
test
loope
fsubs
ss
stc
fidivs
call
dec
push
mov
mov
sbb
ljmp
mov
or
fstpt
scas
cld
addb
sahf
rcrb
cmp
daa
push
cmp
das
clc
or
scas
pop
pop
jmp
out
outsb
cmpsb
repz
ficoms
fcmovnb
xchg
xor
in
lret
cmpl
push
aam
xchg
pushf
leave
js
in
imul
in
mov
sbb
inc
call
rcrl
fldt
fisttpl
mov
sub
jne
cmp
jbe
cmovbe
divl
into
ds
aas
push
outsl
push
mov
xchg
loopne
pushf
push
jns
sbb
jbe
jmp
pop
or
mov
mov
fcmovnb
scas
clc
xor
ds
test
mov
sub
mov
sbb
data16
cmpsb
dec
test
stos
imul
test
movsl
scas
cld
push
rol
jmp
mov
dec
sbb
in
es
lock
imul
mov
sub
stos
cld
fstps
mov
cmp
jne
imul
xor
inc
aad
lret
insb
mov
loop
sub
subl
and
mov
mov
add
push
lahf
adc
ljmp
mov
mov
out
push
or
fldl
pop
jp
aad
cmc
sbb
icebp
add
ret
push
dec
les
cmp
mov
sbb
sbb
fistpl
lret
pop
inc
shl
loopne
mov
sbb
pop
into
arpl
aam
and
loop
inc
mov
push
dec
jne
or
push
insl
out
inc
push
in
jecxz,pn
popf
adc
out
call
and
pand
cs
cltd
cmp
imul
cmp
xor
jb
icebp
inc
sti
sbb
fimuls
mov
addr16
jbe
mov
ds
movsl
outsl
fstl
add
lea
in
ljmp
movsb
adc
push
lcall
lret
insl
gs
imull
push
or
addb
popf
jo
popa
and
test
and
push
jnp
jmp
jnp
xchg
jg
rcrb
cmp
insb
adc
test
test
and
xor
loop
xor
mov
lret
in
scas
sub
mov
ret
idivb
pop
lea
clc
jns
xor
fsub
lods
sub
out
sbb
push
push
dec
add
mov
mov
jno
shr
fistps
push
sar
inc
and
les
imul
dec
cmp
mov
jp
out
adc
movsl
mov
loopne
adc
mov
inc
cmp
pop
cwtl
scas
jnp
lahf
inc
roll
sahf
xor
and
push
ret
mov
outsb
pop
or
repnz
push
or
mov
push
jecxz
lcall
jecxz
push
xor
pop
cmp
mov
add
rcrb
leave
push
out
cmpsl
loope
out
jnp
in
dec
gs
rol
leave
aam
aas
dec
inc
dec
fwait
dec
jb
jns
cmpl
add
or
push
stos
or
xor
push
leave
dec
xor
push
pushf
popa
outsl
jecxz,pn
call
sub
jle
stos
pop
xchg
adc
push
imul
lret
ret
es
lds
ds
sahf
pusha
mov
imull
das
inc
add
loop
sbb
or
setg
push
sub
dec
mov
lea
dec
aad
or
mov
outsb
clc
push
push
xor
outsl
addl
or
dec
mov
jno
push
fnstcw
es
ljmp
sub
arpl
cli
pop
sub
add
mov
mov
xor
ljmp
sub
push
jno
jae
push
jle
ja
dec
mov
cmp
loope
lcall
inc
pop
movl
dec
in
scas
popa
gs
insl
cli
mov
pop
int
jns
push
popf
rcl
push
jbe
mov
rcr
xchg
pop
outsl
mov
fs
mov
push
out
fistpl
ja
push
int
sahf
jno
stc
das
xor
pop
push
pop
xchg
mov
in
outsl
mov
pushf
hlt
mov
mov
in
addr16
cmpsb
and
push
pop
mov
push
imul
in
test
push
sub
xor
daa
push
hlt
adc
cwtl
dec
sti
xchg
push
or
mov
push
ja
mov
call
orl
mov
pop
add
push
ljmp
insb
cli
std
mov
sbb
and
outsl
mull
jnp
fdivrl
sar
lods
rorb
clc
iret
dec
fucomp
ss
adc
push
mov
outsl
cmpsb
imul
dec
mov
mov
insb
mov
outsl
loop
mov
mov
scas
xor
xchg
lods
lock
mov
divl
or
cld
mov
or
lock
dec
popa
cmp
cmp
push
xchg
mov
push
push
movsl
not
fnsave
add
les
bound
adc
mov
push
pop
test
push
stos
shrl
test
nop
cmc
cmp
adc
xchg
push
dec
pop
lods
call
stc
mov
aad
in
cmp
enter
and
push
and
add
imul
mov
mov
mov
call
mov
or
pop
push
rcl
dec
inc
add
mov
adc
pop
flds
mov
ljmp
jecxz
fwait
movsb
xchg
pop
hlt
andl
fwait
idivb
mov
mov
xor
or
or
xchg
mov
clc
cmc
shlb
orl
lret
outsb
cs
pop
xchg
mov
xor
daa
or
pushf
cmpsl
jnp
adc
mov
shrb
xchg
pop
adc
enter
data16
push
aaa
push
and
xchg
outsb
scas
sub
cld
ds
dec
add
xchg
xchg
mov
inc
xor
jno
mov
int
adc
xchg
inc
dec
fwait
ret
jmp
push
mov
push
test
ljmp
cs
pushf
dec
push
push
jl
xlat
adc
dec
pop
pusha
or
xchg
in
out
addr16
push
enter
dec
or
and
mov
mov
das
imul
sub
and
les
cmc
or
adc
push
ret
cmp
mov
scas
xchg
stc
xor
std
sub
xlat
insb
xor
jns
scas
out
and
xchg
fwait
insl
push
push
jmp
push
xor
cmpsl
mov
xchg
out
js
mov
mov
sbb
fldcw
test
or
les
and
movsl
sub
das
orb
dec
mov
jae,pn
sbb
fnstenv
loopne
daa
mov
mov
movb
inc
daa
add
and
data16
push
shll
inc
adcl
icebp
ret
mov
sbb
push
mov
mov
jns
inc
jnp
sbb
jnp
ljmp
inc
pop
or
mov
subl
inc
dec
jno
mov
jmp
jno
rorl
mov
sahf
jne
aas
jnp
subb
xchg
cmp
inc
sbb
cwtl
sub
data16
jp
pusha
iret
mov
xchg
sbb
push
out
lret
adc
pushf
xor
fcos
inc
push
push
mov
sub
sahf
xchg
clc
rorb
fstpt
cli
dec
or
sbb
cmp
mov
add
fldcw
lahf
lods
repz
ret
filds
xchg
jae
std
and
push
mov
mov
pop
insb
pop
pop
stc
jnp
out
outsb
addl
inc
sti
xchg
and
xchg
add
iret
in
inc
mov
dec
xor
xchg
sbb
lods
pop
xchg
mov
mov
sbb
lret
enter
cmp
sub
add
clc
or
aam
jl
push
out
mov
xchg
imul
add
idiv
sub
lock
cmp
les
push
push
mov
test
cmpsl
enter
and
lcall
mov
ds
jo
movsl
or
dec
ret
lock
fldl
mov
sbb
or
daa
push
add
jmp
leave
mov
cmp
mov
jae,pt
aas
hlt
add
mov
out
sub
cmp
test
lods
pop
les
daa
aam
das
stc
ja
mov
aad
pop
arpl
pop
or
bound
jg
mov
and
jmp
pop
outsl
and
sub
jbe
push
push
mov
dec
ficoml
cmc
push
sbb
and
jecxz
mov
push
inc
mov
movsb
movsl
out
cmc
jmp
xchg
mov
push
push
jno,pn
xchg
mov
cmp
call
mov
mov
out
mov
rcll
jns
cli
sub
sahf
pop
lds
sub
xchg
stos
mov
stos
leave
pop
xor
lret
jbe
enter
insb
mov
pushf
dec
test
mov
mov
lods
bswap
sbb
cwtl
push
mov
pop
push
fidivs
cmp
dec
or
in
js
dec
sarb
push
lcall
dec
enter
lret
and
lret
cmp
dec
lods
fwait
sbb
rclb
pop
sbb
bound
mov
stos
and
cmp
xor
mov
out
and
push
lds
lahf
mov
cwtl
or
sub
aas
out
scas
sbb
call
subb
outsb
mov
cltd
outsb
xchg
loop
sub
stos
orb
out
repz
mov
sbb
cwtl
scas
jnp
ud1
mov
mov
pop
or
sbb
xor
adc
dec
adc
cmp
push
stos
cmp
sbb
cmp
dec
shrb
mov
sub
cmp
rclb
xchg
pop
jae
cmp
and
and
jmp
add
add
or
repnz
mov
push
mov
mov
pop
sbb
repnz
sarl
shll
xor
aaa
sbb
repz
xchg
cmp
loopne
into
aad
test
out
and
adc
or
lds
cld
inc
sbb
lea
xlat
cwtl
add
cs
mov
mov
lea
popa
cld
adc
arpl
xchg
cmp
pop
mov
jmp
inc
jmp
add
xor
into
mov
pop
mov
or
pushf
mov
xlat
mov
mov
addr16
dec
sbb
mov
mov
lods
cld
mov
in
or
jno
inc
mov
mov
scas
mov
xchg
dec
jp
scas
les
sub
sbb
out
in
mov
test
xlat
sbb
sarl
and
mov
rclb
popa
fcoms
fisttpl
subl
stos
inc
lea
into
outsl
adc
adcb
cmpsb
and
pusha
jmp
aaa
cmp
inc
jno
cmp
icebp
jmp
mov
xchg
cmp
jae
daa
xor
incl
aas
cmp
add
sar
jl
mov
mov
jmp
xchg
mov
mov
sub
xor
or
push
pop
pop
push
adc
xchg
rclb
add
inc
lods
lock
out
std
fildll
jnp
jp
xchg
push
inc
dec
push
jge
mov
lds
sbb
loopw
ds
rorl
clc
test
addl
push
hlt
inc
dec
dec
js
jne
push
dec
cmc
pop
jp
cmc
cs
ucomiss
popa
jae
cmp
je
cmpsl
pop
lcall
andb
lods
mov
out
xor
pop
inc
pop
shll
inc
push
hlt
fistpll
mov
inc
adc
push
mov
fcmovnu
shlb
mov
jbe
in
gs
inc
mov
ds
xchg
sub
pop
test
insb
test
cmpsb
mov
cmpsb
mov
test
lea
xchg
lds
and
dec
out
inc
xor
sahf
outsb
in
fcmovnb
sub
inc
out
aad
pop
push
popf
aam
sti
pop
pop
and
das
jne
pop
cld
xchg
and
inc
popf
out
aam
push
jle
jg
daa
aam
jl
test
push
insb
shr
sub
dec
mov
fs
lret
cmpsb
rcrl
adc
sbbb
mov
push
mov
jbe
jl
jg
sbb
popa
adc
cltd
loop
inc
cmp
sub
dec
int3
imul
push
mov
test
or
mov
faddl
jge
and
mov
push
jp
hlt
imull
inc
in
sahf
push
pop
call
jp
xor
dec
jmp
cwtl
push
xor
call
xchg
dec
or
insb
fiadds
pushf
jg
clc
inc
jbe,pt
xchg
rcrl
cmp
mov
adc
pop
or
mov
mov
mov
mov
mov
cmpl
add
mov
push
jecxz
jb
fmull
lods
fisubrl
mov
lea
out
test
xor
push
lret
jg
mov
push
pop
jge
outsl
inc
fsub
mov
pop
addr16
jge
cmc
loopne
sbb
stos
or
cmpsb
ja
lcall
movsl
in
dec
lret
xchg
aam
cmp
inc
and
fidivrl
inc
pop
pop
or
sub
lret
repz
inc
jecxz
je
pop
ret
dec
fdivl
fcomp
aam
cld
pop
cs
daa
divb
inc
pop
and
je
pop
leave
xor
pop
les
inc
xlat
inc
leave
jp
add
rol
pop
push
je
xorb
or
adc
lods
jne
add
mov
aam
pop
adc
lock
daa
add
or
fwait
jle
inc
shll
xchg
insl
jp
imul
das
push
lock
mov
xor
fildl
pop
inc
out
cvtdq2ps
pop
lret
fdivr
sbb
cmp
pop
in
jnp
xchg
pop
insb
mov
sub
cmc
cmp
xchg
and
pop
lahf
flds
icebp
cwtl
sarb
jae
fucomip
ja
and
in
cld
mov
mov
es
jg
sbb
out
rorb
cmp
out
push
popa
add
and
nop
xlat
and
push
jns
fwait
adc
jne
inc
negb
sbb
push
mov
xor
jecxz
xor
xor
jbe
xlat
incl
jp
imul
xchg
jb
mov
cwtl
test
dec
inc
mov
test
pop
or
push
popf
cltd
out
loop
mov
xor
dec
or
sbb
cld
pop
jno
jae
jl
push
cmp
mov
mov
or
adc
mov
idivl
lea
hlt
adc
mov
lahf
ret
sti
pop
aas
mov
or
hlt
mov
insl
stc
sbb
and
pop
bound
daa
dec
lock
js
pop
fsubs
out
and
xor
cmp
out
jl
lods
add
in
sbb
cmpsb
add
adc
jmp
movq
sbb
pop
xchg
mov
cmpsb
add
imul
cmp
sbb
bound
out
mov
vmovhps
imull
sbb
repz
mov
call
or
leave
push
sbb
pop
jae
add
push
inc
cs
inc
push
xchg
inc
scas
ja
xor
rcr
mov
aas
test
adc
dec
lods
hlt
imull
add
push
xor
add
pop
out
sub
sbb
jle
jmp
mov
xchg
inc
inc
andb
nop
jnp
lahf
call
push
fs
adc
mov
dec
push
jb
xchg
mov
je
out
push
rcl
cmpsl
cli
push
in
push
ficomps
shll
xchg
cmp
inc
xor
lret
xchg
cmpsl
mov
cltd
and
out
fidivrs
cltd
icebp
loop
mov
popa
inc
test
push
scas
pop
insl
xchg
add
repnz
les
cld
outsl
sub
mov
int3
xlat
cld
addr16
or
iret
cmp
sbb
jns
inc
cld
cmp
in
sbb
mov
or
iret
cmp
mov
dec
cli
inc
gs
cmpsl
or
and
lods
push
aad
loop
cmp
xor
imulb
add
push
add
sub
bound
in
les
mov
out
mov
add
test
mov
fnstcw
out
mov
sar
mov
lret
pop
push
sbbl
adc
cmp
push
add
outsl
dec
cmp
pop
loope
pop
sbb
popf
loopne
das
in
in
call
ljmp
mov
aas
call
fistpll
jmp
lea
into
jp
mov
movsl
sti
lods
inc
or
push
pop
dec
or
enter
mov
aad
mov
movsl
aad
ljmp
and
mov
js
sub
cmpsl
sbb
call
push
or
cmp
or
je
push
sahf
orb
rcr
fs
aas
ja
xor
xor
repnz
mov
scas
int3
jae
ret
divl
lds
xchg
mov
mov
cmpsl
push
out
lcall
dec
mov
cs
pop
jg
mov
inc
loopne
sarb
popa
cmp
test
mov
and
add
dec
xchg
mov
xchg
int3
inc
leave
adcl
les
jbe
sti
sar
addb
or
in
or
enter
div
dec
mov
lock
xor
cmpsb
xor
cwtl
dec
daa
shrl
pop
into
push
shlb
sub
inc
cmp
loopne
mov
filds
inc
xchg
xchg
jg
xor
lds
jle
iret
push
movsb
xor
jp
cmp
and
int
add
push
mov
xchg
inc
out
mov
mov
mov
jle
pop
push
iret
add
lods
lea
dec
addb
jbe
cmp
std
test
push
or
and
in
cmp
or
jbe
add
fwait
pop
cld
fdiv
iret
jno
mov
push
mov
aas
sub
movb
in
jp
or
in
push
cmp
mov
adc
inc
jmp
addl
push
cmpsb
ficoms
test
push
sahf
mov
xor
xchg
dec
mov
mov
test
repz
test
mov
int
bound
divb
lods
mov
ret
mov
into
ret
stos
pop
loope
stos
pushf
gs
sub
outsl
add
adc
ret
fstpt
sbb
inc
mov
jl
es
push
inc
in
cwtl
sub
jle
sub
pushf
jne
jb
or
xchg
ret
xlat
dec
xor
and
push
jg
fucompp
fwait
push
lcall
sub
xor
sub
jmp
jno
inc
in
std
je
arpl
mov
and
cmc
repz
mov
daa
repz
mov
enter
out
and
testl
hlt
mov
fs
push
jo
xor
sub
jge
mov
in
bound
insl
push
pop
in
data16
ficoms
jnp
fcompp
mov
adc
push
sub
or
dec
shll
ret
mov
pop
pop
test
cmpl
mov
push
int3
push
stos
ret
push
xor
clc
or
call
shlb
enter
and
out
adc
stos
les
or
lcall
adc
enter
mov
inc
leave
xchg
arpl
sub
lods
sub
fisubl
dec
rcll
fnstenv
and
sti
xor
aaa
out
cmp
in
leave
ret
xor
mov
mov
or
adc
movsb
pop
enter
sbb
push
test
fiadds
sbb
call
pop
mov
incb
gs
xchg
inc
or
sbb
cli
mov
xlat
test
into
sub
mov
sub
leave
mov
push
xor
cmc
in
xchg
lret
loop
ret
sbb
jl,pt
das
add
inc
movsl
push
loope
xor
pop
adc
push
mov
mov
jo
mov
add
idivl
mov
xor
loope
jae
add
jnp
loopne
sbb
add
adc
jnp
aaa
pushf
xchg
into
sub
or
nop
mov
pop
dec
cmc
in
inc
lcall
pop
cli
inc
test
push
dec
dec
fwait
into
dec
jbe
mov
addr16
inc
popf
adc
ror
icebp
xorl
mov
push
mov
das
sti
push
pop
mov
xor
and
sti
mov
mov
gs
jle
popa
xor
jo
out
push
lret
pop
fxch
sti
xchg
xor
imul
push
or
push
cmc
pop
xchg
xor
push
mov
and
dec
in
or
cmc
lret
mov
mov
inc
aam
dec
or
dec
jne
xchg
cli
decb
push
sub
aas
dec
adc
cmp
sub
sti
jne
dec
fwait
jge
jg
sub
mov
add
loope
cmp
ss
push
jge
daa
push
mov
adc
into
out
push
cltd
stc
inc
cmp
push
sbb
xchg
lock
push
pop
xchg
cli
dec
jge
jge
mov
jg
scas
std
adc
inc
ret
ss
add
cmp
mull
cld
sub
stc
pop
xchg
add
stc
xor
inc
frstor
stc
or
xchg
sub
fwait
lods
insl
test
dec
cli
addr16
lea
sub
xchg
stc
ja
add
sbb
inc
sbb
mov
ja
lahf
sbb
xor
outsl
fwait
std
xchg
in
leave
push
iret
ret
mov
in
loop
stos
mov
sub
lock
stos
push
jno
rorl
push
xchg
lea
ret
aaa
cmc
stos
mov
dec
insb
mov
rcrl
clc
dec
cmp
push
arpl
push
fcmovnb
imul
in
popf
outsb
test
sbb
mov
ret
mov
mov
cmpsl
mov
inc
inc
mov
pushf
andl
pop
ss
jo
mov
fsubl
xor
loopne
cltd
int3
cmpsl
ficoml
aam
pop
or
sub
ljmp
mov
inc
les
inc
aas
xchg
push
dec
daa
pop
out
int
int3
out
orl
mov
jno
clc
out
mov
xor
mov
stos
cmc
sahf
sbb
pop
push
mov
jae
enter
pop
aad
testb
and
jle
mov
vpperm
jmp
cmc
mov
push
int3
iret
cmc
fcmovu
sbb
adc
and
fwait
xor
inc
sbb
jecxz
ret
mov
xlat
in
push
sbb
lods
dec
pop
pop
xchg
iret
enter
cmpl
and
cmp
xor
inc
add
and
or
mov
inc
add
mov
jae
cmpsb
xor
clc
fsub
int3
pushf
cmc
mov
xchg
dec
js
jne
ret
int3
or
xchg
dec
add
and
push
or
push
push
cmp
cs
pop
cmp
dec
mov
je
out
rcrb
xor
push
out
test
mov
mov
lret
iret
and
rcrl
inc
xchg
test
push
inc
inc
ds
sbb
xor
int
outsl
mov
or
jnp
jno
sbb
movsb
jo
repnz
mov
shlb
fisttps
mov
cmp
icebp
icebp
xor
sbb
xchg
inc
mov
insl
cld
push
gs
movsb
jg
outsb
dec
push
es
mov
icebp
add
shlb
lock
mov
mov
sti
aaa
scas
aam
sbb
loope
aam
mov
das
in
fildll
imul
mov
bound
or
jno
cmpl
jne
pushf
rclb
mov
adc
push
jo
stos
sub
push
out
mov
ret
jae
fs
mov
cli
push
sbb
sbb
jecxz
testb
lahf
cmpsl
jb
xor
adc
mov
push
add
int
push
mov
or
mov
add
jle
jae
xor
push
in
mov
mov
bound
pushf
jbe
dec
pop
or
les
ret
sub
fwait
mov
mov
and
lds
adcl
mov
push
sub
sub
fcoml
outsl
add
test
push
pop
mov
push
fdivr
sbb
aaa
jle
cmc
or
mov
xor
sahf
xchg
sub
jge
les
ds
xchg
lods
inc
or
aaa
mov
imul
xlat
mov
or
in
jg
cmc
xor
mov
xchg
mov
subl
test
mov
in
xlat
fldenv
into
addr16
jb
leave
repz
mov
outsb
fildll
mov
mov
or
sub
loop
push
aaa
neg
insl
xchg
repnz
sahf
int3
notl
jae
fwait
fs
cs
cli
jb
data16
adc
in
cmpsb
inc
dec
sub
ror
dec
sub
mov
xor
sarb
jnp
pop
mov
fidivrl
loop
sbb
imul
inc
inc
inc
mov
mov
mov
iret
or
sbb
into
popl
jbe
push
gs
les
adc
inc
mov
cmp
js
inc
push
xchg
loopne
out
push
lock
movsl
subb
pop
fisttpll
adc
hlt
lods
lods
xor
out
adc
loopne
dec
adc
mov
insb
xor
test
add
pop
pop
loope
fs
xor
lock
xor
loopne
ret
cmpsl
in
or
adc
lds
out
test
int3
xor
lcall
fcmovnbe
lahf
int
dec
cwtl
lock
test
int3
pop
scas
mov
clc
mov
loope
mov
aas
cmp
shll
dec
push
mov
or
push
mov
add
jae
inc
lret
addr16
xchg
das
rclb
sub
push
insl
adc
lods
ret
pop
xor
inc
es
shll
daa
jp
int
cvtdq2ps
pop
das
daa
or
fcmovnb
mov
xchg
test
push
mov
rcl
test
sti
xchg
jl
lret
pop
imul
loopne
push
sbb
xchg
mov
in
imul
mov
stc
mull
dec
cltd
push
mov
in
shlb
xchg
mov
pop
in
mov
dec
les
dec
in
push
test
fstps
sub
negb
das
push
sti
pushw
mov
push
jnp
sbbb
orl
sbb
arpl
push
pusha
jnp
jmp
xor
shll
mov
adc
and
mov
dec
cld
movsl
jbe
mov
sar
mov
mov
xchg
int3
pop
dec
or
or
xor
shll
aaa
mov
sub
aas
jg
gs
outsb
push
add
pop
rolb
jnp
aam
mov
mov
dec
in
insl
sbb
std
mov
push
mov
or
lods
xchg
sahf
cs
pop
mov
cmp
mov
enter
add
iret
orb
or
jl
icebp
mov
insl
cmpl
sbb
int3
push
out
mov
and
dec
inc
adc
jle
jmp
shlb
popa
icebp
shlb
dec
call
rcl
pop
sub
jmp
inc
lods
out
fistl
rorl
incb
aas
mov
add
jecxz
pop
push
jae
lret
in
rorl
or
lock
push
adcl
rcrb
js
pop
pop
sub
and
sbb
aaa
dec
mov
push
dec
mov
loop
push
or
popf
push
bound
iret
test
enter
bound
mov
test
jle
sbb
loope
cmp
xor
in
aas
xlat
push
inc
mov
adc
ret
sbb
pop
and
cmp
push
ja
popf
xor
and
scas
sarl
and
int3
xor
ds
fsubl
jle
xchg
outsl
inc
jmp
loope
adcb
es
lret
or
scas
xlat
pushf
and
pop
sub
or
cmc
dec
andl
sbb
dec
xor
in
ja
hlt
mov
push
popf
aaa
jo
rcl
in
and
jmp
test
mov
lock
mov
push
repz
and
mov
mov
mov
lret
xchg
add
or
lahf
fadds
int
mov
push
mov
test
imul
pop
hlt
shrb
es
and
sarl
call
test
imul
push
jecxz
js
mov
and
jmp
mov
push
ss
inc
pop
add
xor
adc
xor
sub
pop
jns
mov
loope
lods
or
ret
sub
es
cld
clc
dec
jae
push
mov
jno
xor
movsb
xchg
scas
cmpsl
lahf
mov
pop
movsb
sahf
in
jno
sub
jo
jae
xor
inc
out
inc
js
xchg
xchg
and
hlt
or
jge
repnz
dec
push
mov
mov
xchg
movsw
sti
out
cmp
test
lock
jne
nop
push
jle
test
jecxz
fisubrs
setbe
ljmp
nop
jbe
popa
cmp
add
imul
cmpb
nop
and
and
ja
inc
imulb
test
pop
lds
ror
add
fs
addr16
and
pop
mov
shlb
std
lods
lret
ljmp
addr16
div
pop
lock
in
add
inc
mov
inc
scas
pop
leave
in
stc
cwtl
shl
or
mov
mov
test
ficompl
sbb
shll
push
out
sbb
sbb
iret
into
add
jle
mov
jp
push
xchg
jge
frstor
daa
loop
jne
or
cwtl
in
push
add
inc
lret
iret
popa
jge
mov
scas
loope
cmp
movsb
inc
pop
pusha
imul
jo
dec
stc
jo
daa
jle
int
add
or
std
cmpsl
mov
mov
popa
inc
fwait
stc
mov
jmp
jno
shrl
jp
imul
push
push
lret
pop
jecxz
aad
mov
shrl
repnz
pop
push
or
call
jle
stos
or
jb
pop
add
and
hlt
fucom
sub
inc
int
fistl
imul
cmpl
lds
sar
mov
cmc
and
popf
sub
sbb
mov
repnz
sub
jo
hlt
xchg
pop
dec
iret
lea
cmpsl
rolb
jle
dec
adcb
jne
push
add
fldenv
inc
les
int
int3
stos
pop
scas
imul
lcall
push
and
mov
addr16
inc
xor
xchg
pop
sub
lds
repnz
mov
fstl
pop
cmp
fucomi
mov
and
xor
aad
dec
lahf
test
add
pop
add
loopne
sub
in
add
add
in
and
xchg
xor
mov
add
or
sub
test
adc
pop
sahf
cmp
push
mov
cmpsl
adc
push
lds
popf
dec
pop
jne
or
adc
pop
xor
ret
push
ds
daa
adc
dec
mov
repnz
sub
les
pop
ljmpw
int3
fdecstp
jbe
jmp
pop
repz
outsb
fs
ret
xlat
and
dec
bound
fsubs
inc
call
std
xor
fcompl
cmc
mov
enter
ret
leave
pop
and
hlt
add
int3
scas
push
cwtl
jne
xor
and
gs
mov
mov
mov
scas
push
push
out
out
xchg
adc
jnp
pop
out
dec
out
sbb
pop
insl
sub
push
fmuls
sahf
push
xor
push
or
push
xor
movsl
jle
addl
imul
fdiv
or
fisttpl
ljmp
insb
mov
mov
shlb
jge
sbb
xchg
push
stos
rcr
popf
je
testl
mov
dec
int3
lds
neg
fstpt
data16
pop
and
jbe
push
int3
and
out
out
addl
pop
pop
fmuls
pop
aas
jmp
out
pop
enter
arpl
jb
out
jmp
mov
sub
test
cmp
sbb
dec
xchg
pop
nop
push
mov
mov
xor
ljmp
dec
mov
mov
push
adc
dec
pop
xor
lret
popf
lahf
inc
mov
xlat
add
movsl
cli
vpshuflw
and
xor
cmp
push
lcall
pop
ss
xchg
add
mov
addr16
jmp
out
rorb
repnz
lcall
mov
mov
enter
icebp
lea
push
jbe
adc
or
adc
insb
test
or
sbb
pop
aaa
pop
pop
imul
cld
stos
scas
dec
ss
scas
stos
jp
jmp
sbb
test
das
aam
inc
push
pop
cltd
xor
outsb
pushf
or
add
push
mov
jbe
out
xlat
fs
pop
cli
mov
ror
dec
sbb
int3
or
cs
sarb
xchg
lret
pop
shlb
jl
loop
stc
jp
adc
push
scas
xchg
mov
mov
xlat
jp
js
imul
cmc
hlt
jae
jae
cwtl
push
cmpsl
push
cmp
xor
dec
inc
adc
imul
mov
xchg
shll
xchg
fs
sbbb
daa
loop
cmp
loop
add
repz
pop
lret
sbb
xor
data16
or
cli
repz
and
push
stos
or
lret
movsb
jns
pop
pop
xor
ds
and
mov
stos
adc
or
sbb
ss
ss
clc
and
adc
push
sbb
hlt
and
cltd
mov
inc
hlt
push
leave
push
xchg
mov
push
loopne
lret
and
cmp
and
stos
jbe
mov
and
in
repnz
stos
imul
inc
cmp
div
lahf
mov
push
jl
xchg
dec
push
pop
ret
pusha
push
xor
jo
decb
xchg
and
push
lods
jl
mov
jmp
push
out
in
xchg
mov
sbb
popa
or
push
pop
mov
push
cmp
mov
ds
dec
sbb
aad
dec
mov
lret
push
pop
push
test
daa
icebp
into
cmp
adc
cmp
icebp
dec
and
xor
mov
ljmp
mov
cmp
in
push
divb
daa
add
imul
or
in
stos
jne
xor
xorl
and
enter
mov
scas
ljmp
mov
push
clc
mov
mov
inc
sbb
dec
push
jmp
xchg
mov
shll
or
jl
pop
mov
shrb
or
movsl
cmpsb
adc
jne
js
pop
aaa
pop
imul
addb
aam
ror
jg
gs
sbb
stos
cwtl
jge
stc
jae,pt
xchg
mov
mov
cmp
ja
mov
sbb
rorb
jge
push
pop
sbb
mov
cmp
push
nop
push
xchg
jg
scas
ret
sbb
push
mov
mov
inc
int
sub
shlb
inc
or
rolb
jp
ljmp
or
pop
lcall
xchg
and
repnz
dec
sub
mov
cwtl
cltd
inc
or
or
mov
test
sahf
movsb
jmp
or
subl
not
dec
lahf
mov
xor
mov
cmp
rcl
dec
popa
jecxz
dec
mov
jle
jecxz
fcmovnu
loope
mov
mov
cmc
xlat
aas
enter
adc
call
popa
pop
adc
aaa
pop
fisttpl
arpl
inc
mov
cmp
data16
movsl
negl
push
ret
leave
lea
dec
leave
jae
lods
in
sbb
lcall
mov
mov
addr16
pushf
insl
and
push
cmp
sti
push
xbegin
cmc
test
xchg
push
hlt
xchg
and
lea
sub
lods
fisubs
inc
int
lods
adc
iret
fbstp
add
addr16
adc
mov
mov
rcrb
loop
mov
and
insl
add
fildll
sar
lock
pop
push
ja
into
loope
scas
leave
add
loopne
loopne
out
jo
sbb
pop
movsl
mov
mov
sarl
ljmp
adcl
shr
add
mov
test
push
add
shlb
xor
fsubl
into
xchg
pop
pushf
rolb
imul
mov
sahf
pop
cltd
fidivrs
lds
nop
xor
jmp
mov
inc
popa
loop
mov
sbb
daa
addr16
sahf
in
fdivrl
out
arpl
fwait
cld
test
iret
push
fucom
and
call
jno
divl
jns
dec
repz
xor
int
lea
jbe
jg
sub
push
arpl
xchg
and
push
dec
cs
mov
imul
fistps
sti
dec
push
mov
sbb
dec
or
aas
fisttps
aaa
loopne
scas
into
test
inc
lods
add
pop
roll
loopne
ret
daa
sahf
mov
push
lock
aad
jnp
inc
push
push
aam
in
mov
icebp
mov
sti
mov
xor
popa
sbb
jl
push
ljmp
std
mov
jae
addr16
cs
cmp
jecxz
stc
xor
add
testl
mov
xchg
in
arpl
mov
push
lret
mov
rcrl
rcr
jle
aad
mov
insb
out
jae
jae
mov
ficompl
jge
fisttps
mov
push
inc
cmpsb
mov
fistps
pop
repz
xor
push
lods
sub
lods
inc
cmc
adc
or
js
dec
sarb
in
push
fs
imul
xor
push
cmpsb
fcoms
dec
int3
fistps
adc
loopne
xor
add
xchg
sbb
popf
int3
aad
repnz
subl
aaa
pop
je
pop
repz
lea
movsl
aam
jp
adc
repz
push
push
pop
inc
lcall
movsb
sub
repz
mov
loop
cmp
inc
jo
incl
and
xchg
inc
mov
lods
shll
inc
fcmove
pusha
add
add
push
pop
xchg
add
stos
mov
or
cmp
scas
jno
loop
scas
sbb
xchg
mov
in
adc
inc
or
jno
mov
cmp
add
pop
stos
bound
shll
xchg
test
xor
fildll
add
dec
inc
mov
mov
pusha
mov
cmp
out
mov
sbb
pop
sti
stos
mov
mov
sbb
loop
pop
dec
icebp
das
add
and
jno
mov
out
dec
test
aas
inc
rol
xor
rclb
pop
rorl
das
xor
aad
push
inc
dec
std
cmpl
sbb
sub
inc
cmp
aam
add
sub
ja
rol
hlt
cmpsl
or
mov
test
sub
in
jbe
jo
jge
out
add
dec
pop
sbb
push
in
push
jnp
push
pop
xor
dec
aaa
pop
pop
sbb
mov
arpl
jb
push
gs
call
xor
pop
test
enter
mov
and
in
xor
aad
fdivr
scas
adc
data16
dec
and
sub
add
push
sbb
jl
jns
imul
ret
neg
push
mov
add
addl
sti
loop
cld
fsubrp
sub
or
inc
test
pop
mov
sbb
dec
and
mov
leave
icebp
out
adc
test
inc
cmp
out
movsl
jnp
jns
push
adc
push
push
cmp
arpl
mov
ss
pop
xchg
or
lret
or
gs
int3
inc
cmp
lcall
mov
adc
dec
jl
fisubrl
add
divl
fisubl
jg
in
sbb
dec
mov
xchg
add
mov
ret
icebp
sahf
cmp
push
add
test
mov
cmc
pop
sbb
lods
out
in
sti
es
test
jns
dec
add
add
gs
add
mov
push
in
inc
push
shrl
icebp
mov
scas
xor
dec
aas
mov
push
xchg
or
mov
cmpsb
fisttps
daa
inc
xchg
inc
cmp
mov
test
pop
test
test
in
pop
xor
inc
imul
insb
fnstcw
fldl
cmp
test
sbb
dec
idivl
sahf
scas
sbb
hlt
xchg
inc
xor
or
dec
scas
fdivrl
pop
jmp
adc
mov
fs
out
clc
and
repz
das
cmp
nop
loope
push
inc
lea
add
rcl
leave
sub
cmpsl
push
dec
jp
fnstsw
inc
mov
adc
push
adc
pop
sahf
dec
nop
stos
insb
jno
int3
lret
cmp
cmc
sbb
add
dec
sub
into
adc
nopl
fnstenv
adc
cmp
and
not
std
xchg
leave
pop
mov
in
loop
mov
nop
and
push
ret
fnsave
xor
sbb
sub
cmp
in
es
scas
add
pop
cltd
rolb
cmp
sbbb
inc
adc
ret
xchg
fxch
pop
cmp
dec
cs
pusha
imul
cmpsl
mov
pop
cmp
ffreep
push
insl
insb
sahf
mov
call
jne
pusha
push
outsl
xchg
insl
dec
js
cs
jno
mov
and
insl
bound
sub
stos
repnz
sahf
in
fmull
fisttpll
push
mov
test
popf
xor
cmc
lods
rorl
pop
sbb
in
pushf
lea
icebp
mov
cmpsb
enter
sbb
lahf
daa
and
push
stc
push
push
add
pop
orb
and
rcrb
and
jb
inc
add
and
cmpsb
dec
lahf
pop
inc
and
leave
aas
push
ds
or
call
dec
inc
mov
push
fsubs
jge
push
sbb
sub
or
loope
mov
mov
dec
cmp
aad
adc
mov
cmpsl
rcll
push
push
mov
pop
jbe
xchg
adc
loope
and
cmpsb
out
xchg
imul
xchg
dec
pop
jmp
addb
mov
movsl
in
rcl
mov
mov
add
and
cltd
or
inc
add
dec
pop
stos
adc
lods
sbb
mov
mov
sbb
mov
dec
cli
sbb
mov
adc
cmp
add
sbb
mov
insl
dec
adc
lods
call
xchg
sub
sub
jnp
int3
cli
sbb
into
and
fs
js
cmp
and
scas
and
loope
mov
xor
mov
movsb
add
pop
add
sbb
push
fsubrl
mov
dec
sub
inc
mov
data16
jmp
push
push
fimull
or
and
out
call
or
sbb
lret
int
mov
jmp
sti
mov
imul
push
pop
adc
int
mov
dec
inc
imul
dec
jb
inc
decl
pop
lcall
add
xchg
push
sbb
inc
jo
pop
mov
sbb
inc
ds
dec
lcall
cmc
or
mov
mov
repnz
dec
not
or
pop
mov
jl
jb
sbb
pop
push
pushf
ds
aad
loop
lds
pop
es
roll
movsb
and
lahf
adc
mov
push
sbb
je
add
lret
cmp
int
pop
sbb
cmp
fimuls
jno
sbbb
rclb
shrb
pop
aad
dec
dec
std
mov
addr16
iret
imul
faddl
es
push
push
or
xorb
and
xlat
dec
cld
sub
js
decb
mov
adc
push
mov
mov
in
in
push
push
and
data16
jecxz
xchg
hlt
aam
arpl
cmpsb
cwtl
adc
xor
aad
les
seto
sarl
popf
inc
inc
jl
lcall
mov
in
inc
sti
dec
xchg
xchg
sub
ss
cmp
mov
loope
xchg
jp
imul
lods
roll
dec
and
aaa
movsl
xchg
mov
push
movsl
adc
sbb
addr16
jne
sub
sbb
adc
sub
movsl
aad
sahf
or
mov
cmp
les
dec
arpl
dec
ds
scas
mov
addr16
call
adc
jne
sbb
push
fwait
mov
seto
mov
lret
fs
add
mov
push
mov
call
cmp
sbb
cmp
insl
ret
and
pop
imul
xlat
add
insl
mov
mov
add
jp
add
out
adc
xor
xchg
push
pop
sub
pop
dec
sbb
inc
notb
popa
xor
cmp
in
daa
shll
test
mov
stos
and
in
dec
fidivrl
push
pop
int3
push
mov
cli
sub
push
insl
adc
test
out
decl
mov
sub
dec
jne
rcr
pushf
fistps
shrl
sti
pop
lret
clc
gs
jne
lods
xchg
mov
jae
inc
cmp
push
xchg
dec
lods
repz
out
pop
out
insl
sub
add
jno
mov
cmp
imul
mov
pusha
jns
pop
scas
ss
inc
icebp
test
xor
cmpsb
xchg
vmovhps
out
ss
sbb
jns
sub
rolb
adc
ficompl
inc
push
inc
jmp
add
gs
leave
imul
pop
movsl
mov
lahf
pop
nop
stc
je
xchg
cmp
add
sbb
icebp
cmp
aas
jo
jl
pop
std
pop
sar
or
jae
popf
mov
xchg
sub
mov
cmp
xlat
mov
out
cwtl
aam
mov
inc
inc
fcoml
cli
xchg
mov
inc
pop
sbb
loop
pop
cmp
pop
fisubrl
mov
push
adc
and
xchg
add
cmp
dec
ret
daa
adc
push
sbb
insb
sub
ffree
cmpsb
aam
add
insl
pop
arpl
mov
pop
cwtl
jnp
and
aaa
andw
and
call
sahf
cmpsl
test
out
xchg
repnz
addb
cmp
es
out
xchg
dec
cld
dec
mov
jb
cwtl
dec
pop
pusha
cmp
mov
cmc
fcoml
mov
add
mov
test
std
push
and
cmpsb
fst
test
dec
popf
aas
pop
mov
mov
adc
cmp
xchg
mov
dec
dec
mov
xchg
bound
xchg
cmp
inc
push
nop
shl
fidivrs
pusha
dec
or
loopne
mov
lods
arpl
pushl
sarb
fwait
das
jbe
outsl
pop
jl
daa
push
mov
mov
pop
fistpll
pop
int3
popa
or
mov
fdivs
lods
popa
jbe
mov
lods
loope
sub
jg
shlb
imul
int3
xor
lods
sub
sahf
insb
sbb
insb
adcb
sub
dec
push
cmp
pop
mov
xor
shll
mov
dec
dec
push
test
ja
fwait
test
add
in
cmc
push
dec
out
sti
add
mov
or
mov
into
xchg
loop
mov
pusha
cmp
fidivs
adc
sbb
into
scas
shll
xor
xor
sub
adc
push
cs
push
cmp
cs
mov
inc
push
lods
out
jmp
imul
shll
leave
fildl
push
repnz
cltd
stc
jbe
iret
popf
ja
pop
mov
sbb
mov
movsb
hlt
adc
mov
pop
add
cmpsb
sahf
xlat
repnz
std
jae
notl
ret
mov
adcb
pop
push
cld
cmpsb
pop
imul
inc
sub
and
shll
test
cmp
mov
nop
into
and
mov
aad
mov
push
push
mulb
hlt
adc
lds
push
jecxz
lret
dec
into
lods
inc
jl
pop
add
xchg
sbb
gs
adc
mov
int3
daa
mov
adc
sub
sti
mov
inc
imul
test
dec
lods
cld
fcomip
cmp
test
pop
dec
popa
jle
rcrb
shlb
xor
out
jo
mov
push
cmp
mov
pop
xor
dec
pop
ja
mov
mov
jecxz
cmp
adc
gs
xor
pop
dec
lds
dec
jnp
test
inc
ja
pop
mov
or
inc
adcl
aad
sub
and
push
push
pop
dec
push
int
aaa
test
inc
out
pushf
sti
sti
imul
sub
pop
ret
inc
cmp
push
cmc
jbe
cmp
inc
aad
pop
xor
test
sbb
lock
fdivl
cmpsb
scas
mov
pop
sarb
in
movsb
or
test
mov
xchg
cmp
dec
jno
sbb
adc
jne
inc
sub
push
adc
lods
add
cmp
jo
push
leave
xor
pop
repnz
aas
shlb
mul
incl
out
or
loopne
mov
and
add
sub
cmc
mov
jae
fdivrl
xor
adc
test
ret
fldenv
cmp
dec
adc
imul
loope
popa
xor
sbb
sub
inc
sbb
hlt
in
mov
push
or
mov
shlb
mov
jp
adc
push
xchg
xlat
xor
lods
jge
add
push
leave
mov
jae
mov
xchg
dec
movsl
loopne
and
mov
mull
mov
mov
insl
icebp
jge
loopne
cmpsl
lcall
mov
fnstsw
jg
fidivl
scas
dec
adc
js
add
or
nop
mov
sbbl
cmp
gs
iret
mov
dec
add
stc
dec
ljmp
mov
ror
or
push
ss
popa
or
ljmp
sub
pop
add
iret
jbe
xlat
pop
shll
mov
fsubrp
movsb
fnstsw
jl
fs
cs
add
mov
pop
mov
sahf
mov
je
jae
cmp
mov
lds
xor
dec
pop
call
sbb
or
dec
dec
rep
xor
ret
push
orl
fistl
jb
jo
xchg
push
xchg
jg
js
das
outsl
add
mov
inc
dec
jb
mov
jg
inc
dec
cmp
jae
xchg
daa
mov
sbb
inc
mov
lock
push
sbb
jns
sti
add
ljmp
fsts
fs
insl
jge
iret
ret
push
int3
jo
adc
xchg
mov
or
sub
mov
and
mov
lock
jmp
pop
lods
pop
ja
call
xchg
movsl
dec
sbb
mov
lods
popf
cmp
mov
pop
ss
dec
cs
xchg
mov
xchg
xchg
pushf
mov
jne
mov
pop
cs
fisubrl
inc
loop
je
push
out
or
sbb
fldcw
dec
scas
sub
mov
gs
daa
jle
aas
mull
or
adc
lea
or
cmp
lret
jnp
iret
adc
icebp
or
pop
inc
push
push
call
fildll
and
mov
rcl
sbb
mov
and
mov
jmp
mov
cmovo
mov
testl
mov
push
jo
lock
insb
dec
mov
cmp
push
xchg
pop
inc
or
jmp
fimull
imul
js
jmp
test
pop
push
outsb
adc
cmp
sub
or
inc
popf
dec
adc
push
sahf
cmp
mov
in
and
adc
ret
sbb
cmp
ss
mov
xor
fdivrl
gs
mov
sub
mov
push
les
dec
ljmp
add
jle
out
nop
inc
outsb
cmp
jae
ds
mov
add
sbb
mov
fs
mov
fstpl
mov
insb
jb
fdivs
aad
fs
cld
push
add
dec
ret
push
ret
fimull
mov
mov
inc
cmp
or
cmp
cmpsb
pop
outsl
fwait
inc
enter
pop
push
xchg
je
sub
insb
push
xchg
dec
sub
jp
shll
push
push
push
or
test
cmp
mov
mov
dec
aas
rcll
sbb
cltd
pop
sub
xchg
lods
roll
es
xchg
dec
xor
into
call
out
je
sbb
popa
das
pop
sbb
pop
fsub
add
add
cmp
mov
mov
out
xchg
cmp
mov
sti
scas
cmpb
sub
loope
pushf
xchg
jge
dec
loopne
or
addl
incl
int3
cmp
mov
hlt
mov
in
icebp
and
and
xor
testb
jbe
in
cs
es
icebp
jmp
jbe
inc
sub
sub
xor
imul
push
pop
sub
mov
push
cmpsl
adc
dec
xor
add
data16
leave
jle
mov
cltd
xchg
and
sub
popf
aad
dec
inc
push
mov
and
test
sub
test
jns
jge
xchg
outsl
leave
or
inc
add
jp
inc
bound
sbb
data16
sbb
cmp
clc
scas
jmp
sti
push
sahf
push
sub
jbe
mov
pop
cli
jnp
pop
aad
outsl
cmp
xchg
or
inc
inc
add
push
test
jne
pop
xor
xor
aaa
pusha
mov
cmp
sbb
sub
iret
and
sub
lock
repz
push
lea
inc
rcll
dec
or
mov
mov
sahf
dec
pop
nop
insb
xlat
inc
fistps
mov
into
pop
lret
adc
cmpsb
das
aaa
and
imull
imul
lret
lcall
into
add
fdivs
jb
sbb
imul
xor
notl
movsl
out
mov
mov
xor
fsubs
mov
pop
jne
jns
imul
push
dec
cld
fistpll
jne
xchg
xor
rcrl
xor
fsubs
out
mov
les
test
cmp
pop
mov
dec
adc
or
adc
dec
jb,pn
mov
inc
daa
sub
push
std
fs
cld
xlat
in
test
int3
push
xchg
dec
push
inc
push
sbbb
test
xor
push
stos
cmp
mov
sub
ret
xchg
jmp
jo
adc
cmpsb
sar
jle
aad
out
cmp
add
jmp
aas
loope
push
repnz
mov
mov
gs
push
add
cmp
movsb
or
xchg
popf
push
push
jg
ljmp
ret
test
push
and
imull
mov
loop
xor
popf
fs
adc
repz
out
mov
imull
xchg
data16
test
add
mov
shll
repnz
sti
stc
mov
out
movsb
inc
mov
ljmp
neg
push
jge
mov
mov
sub
jp
dec
hlt
orb
rol
mov
xchg
pop
pop
sti
mov
pop
xchg
cwtl
mov
jne
fstpt
push
test
xchg
jae
xchg
sbb
outsl
daa
cmp
and
fdivrs
sti
dec
cmc
jg
add
dec
aam
mov
xlat
push
popa
decb
ror
push
rclb
hlt
pusha
mov
popf
repz
jge
mov
push
loopne
mov
or
mov
push
pop
mov
fnsave
jo
cld
jp
mov
out
insb
leave
lret
push
cmp
stos
pop
adc
xchg
sbb
and
jle,pt
test
mov
add
sbb
lret
iret
xor
jmp
xchg
xchg
cltd
je
xchg
loopne
xchg
cs
fsubr
pop
loopne
fldcw
lods
add
daa
cli
arpl
xor
mov
arpl
sbb
loopne
cmp
out
cmpsl
xchg
lods
in
sub
jo
mov
pop
dec
shrb
inc
jmp
inc
xchg
insl
adc
bound
int3
add
jb
std
leave
adc
fidivrs
pusha
mov
xor
fistl
dec
lods
pop
pop
cmc
cmp
push
pop
xor
mov
shlb
cwtl
xor
out
jl
or
call
and
or
pop
stc
outsl
xor
orl
mov
sarb
add
sbb
gs
mov
inc
adc
sub
stos
popa
sub
aaa
sub
xchg
in
mov
push
or
cmc
xchg
aas
mov
stos
mov
push
out
mov
sub
push
mov
scas
dec
push
fsubs
jae
xor
sub
jno
pop
push
mov
ficoml
cld
sbb
outsb
sub
mov
cmp
ja
add
pop
add
sbb
pop
dec
jl
flds
and
inc
sub
push
arpl
gs
inc
jne
adc
ret
pop
in
pop
cmpl
mov
push
mov
sub
inc
and
fdivs
int3
sbb
testl
lods
arpl
shlb
leave
inc
dec
add
jo
xchg
add
fst
int
aam
push
lods
or
lds
push
dec
sbb
push
pop
dec
lcall
adc
lret
mov
jno
paddusw
dec
lods
mov
sub
out
das
clc
sbb
cmpsl
lods
xchg
hlt
sahf
xchg
jbe
pop
sbb
dec
mov
cli
hlt
test
xor
call
pop
mov
xchg
fsubs
loop
push
int3
or
xchg
enter
mov
xor
push
test
hlt
fiadds
imul
fisttps
outsl
and
pusha
push
in
sar
xor
lods
mov
pop
jae
cmp
mov
or
repnz
xor
or
pop
sbb
add
mov
lea
xor
insb
or
pushf
clc
xchg
lret
aaa
inc
push
repnz
push
xor
popf
lea
sub
mov
les
mov
loope
cmp
ljmp
lock
test
std
push
jp
pop
clc
test
dec
add
xchg
dec
jnp
adc
inc
test
jle
div
cmpsl
dec
jle
fs
dec
mov
loopne
push
jnp
cli
nop
jo
pop
lock
jne
mov
scas
sbb
lahf
incb
mov
std
push
lock
notl
add
add
ja
jae
jmp
arpl
mov
dec
inc
pop
xchg
jnp
pop
mov
pop
ret
mov
in
xchg
adc
pop
and
out
add
pop
out
push
pop
or
popa
loop
arpl
andl
mov
dec
sti
mov
push
icebp
imul
push
pop
or
out
out
and
icebp
dec
cld
addb
lret
leave
out
sub
addb
jl
add
sub
or
fcomi
jbe
cmp
stos
xor
cltd
ret
push
movsb
mov
cmpb
cmp
in
sti
arpl
in
movsl
xor
sub
std
dec
mov
jle
xchg
lahf
push
xchg
mov
adc
pop
stc
push
inc
out
stos
cmp
dec
lods
xchg
xchg
clc
loope
fadd
add
xchg
sbb
sbb
decl
push
std
dec
pop
mov
int3
shl
scas
aam
jno
bound
xchg
and
sbb
adcl
das
movsl
sbb
testl
mov
mov
movsb
pop
ljmp
outsl
mov
clc
std
loop
or
repz
jge
repnz
repnz
sti
int
fsubl
sbb
popa
add
inc
jbe
lea
xorb
cmpsb
shll
jmp
add
or
mov
sub
or
or
data16
mov
nop
sti
scas
dec
stos
iret
jne
popf
cld
mov
or
mov
sbb
pusha
out
or
mov
out
imul
iret
ret
sti
data16
flds
mov
nop
cmp
sarl
adc
dec
xchg
or
inc
jl
xchg
and
mov
subb
dec
jmp
xchg
cld
cmp
sbb
cmc
mov
int
add
mov
ret
cltd
divb
lods
or
data16
or
jbe
dec
sub
out
cmpsb
out
mov
shl
pop
adc
insw
aam
or
jecxz
xor
xor
dec
inc
mov
pop
sti
repz
or
sahf
jne
mov
jae
aam
data16
dec
push
and
repnz
mov
das
into
repz
or
stos
lds
test
sub
xchg
jle
cmpsb
inc
sbb
lret
sti
ljmp
fcoms
mov
push
out
or
push
pop
inc
xchg
xor
je
xor
dec
ljmp
inc
jle
mov
and
sbb
movd
xchg
int
jno
mov
out
jae
clc
xchg
lock
add
inc
popf
aas
jns
fs
popa
out
sbb
clc
mov
pop
mov
xchg
fldl
add
sbbl
inc
ficomps
cltd
aad
adc
enter
sub
and
push
test
pop
fsubrl
movsb
jp
sub
sbbl
popf
dec
mov
pop
orl
das
fldenv
in
cld
les
mov
add
adc
mov
mov
or
pop
stc
stos
aas
push
call
mov
mov
sti
lcall
sbb
add
loopne
rorl
test
insb
test
xor
sub
je
scas
inc
loopne
lahf
and
into
fisubs
das
cli
mov
push
xor
imul
push
mov
and
xchg
xchg
sarb
js
movsb
es
xchg
push
pop
lods
adc
ljmp
xlat
bound
lcall
sbb
mov
or
popf
jae
test
psrlw
mov
ljmp
mov
jge
xchg
push
lret
fstl
nop
push
sbb
cmpl
ljmp
test
ljmp
adc
cmp
test
mov
add
ds
out
push
jp
jge
repz
shll
mov
fcompl
and
add
fmul
in
mov
xor
mov
jecxz
or
add
pop
rcrl
cmp
xchg
pop
sub
pop
jecxz
add
and
jb
lds
clc
sahf
xchg
inc
pop
push
xor
xchg
ret
cmpb
repnz
inc
aam
roll
and
push
enter
lret
mov
jo
mov
xchg
mov
popl
cmp
jae
iret
mov
adc
andb
pop
mov
in
mov
jmp
rorb
mov
movsl
jae
fs
adc
shr
lds
push
inc
repz
mov
dec
popa
lock
les
aam
out
mov
mov
push
test
mov
mov
ficoms
iret
xor
mov
sbb
fbstp
push
xor
shl
inc
jle
shrl
jle
jge
leave
frstor
jbe
fldt
and
rcl
std
inc
fxch
and
outsb
mov
push
push
aas
pop
mov
lcall
mov
xchg
mov
mov
mov
pop
clc
mov
mov
xchg
jno
clc
hlt
out
repz
fstl
and
mov
or
xchg
jo,pt
adc
sub
xor
lods
imul
add
les
jp
jb
cmp
insl
push
pop
fisttps
jecxz
inc
mov
mov
jno
mov
mov
inc
int3
add
cmc
dec
test
arpl
lods
add
cmp
outsb
enter
pop
jbe
movsb
sbb
jl
push
cs
push
scas
xorb
mov
dec
in
enter
aaa
push
mov
int3
addr16
inc
mov
orl
popa
outsl
je
or
pop
dec
inc
cmc
jae
dec
xor
std
pop
xchg
fs
out
cmc
jns
out
mov
data16
jmp
pop
sbb
lahf
clc
mov
int3
mov
inc
adcl
in
adc
dec
mov
inc
in
push
xchg
sbb
loop
dec
mov
lea
fstl
xor
push
out
mov
dec
sbb
cmp
rcrl
dec
push
sbb
fwait
cmpsb
mov
mov
push
pop
lcall
hlt
mov
cmp
xchg
pop
shlb
sahf
jge
mov
adc
stos
jecxz
andl
scas
mov
mov
or
scas
ljmp
mov
fnstsw
pushf
inc
mov
sbb
inc
mov
imul
cwtl
imul
mov
inc
pop
add
and
nop
pop
push
jmp
mov
xlat
pop
xlat
inc
leave
outsl
and
mov
mov
cld
sub
hlt
or
movl
sub
test
rolb
repnz
mov
add
inc
sub
jae
lods
bound
inc
or
mov
bound
dec
fwait
arpl
push
xor
cmp
xor
adc
mov
fisttps
sub
imul
icebp
std
and
ja
mov
clc
or
imulb
inc
xlat
inc
and
pop
add
or
fstpl
idivl
jo
cs
jg
insl
jae
xor
mov
outsb
loope
out
xlat
lcall
mov
mull
cmc
jl
fisttpl
xlat
dec
in
mov
and
mov
test
adc
adc
addr16
sarl
fcmovnb
sub
sarl
mov
push
jns
imul
int
sbb
xor
mov
xchg
xchg
popf
adc
push
sub
popf
je
mov
jno
leave
inc
inc
pop
shrb
xchg
jl
xor
jno
jle
lock
std
push
lock
into
outsl
data16
pop
scas
inc
and
int3
cmp
lds
xchg
test
add
jns
fcoms
dec
fs
xor
ret
stos
sbb
cmpsl
clc
jnp
mov
cmpb
sub
shrl
push
dec
scas
jecxz
out
adc
in
jo
daa
mov
mov
push
push
aas
xchg
jo
jae
mov
jnp
push
dec
arpl
iret
subb
push
dec
sub
mov
das
mov
enter
push
add
inc
fsubrl
aaa
lahf
iret
lcall
push
inc
fdivrs
test
pop
and
jmp
sbb
cmc
das
inc
movsl
push
push
bound
cmpsb
fbstp
and
add
sub
mov
and
adc
pop
repz
testb
xor
jno
add
std
push
add
mov
add
inc
cmovnp
add
fistl
sbb
lods
das
fwait
fwait
sub
cmpsl
ret
mov
xchg
stc
fsubs
mov
pop
and
or
cmpsl
fistps
cmc
jnp
scas
mov
aad
or
out
mov
stos
xchg
xchg
and
lea
dec
add
add
pushf
sub
fwait
lods
mov
adc
test
dec
jno
lea
outsb
jbe
jecxz
cmp
outsl
inc
inc
into
xchg
and
mov
add
jl
pop
and
ret
sbb
divl
lret
add
xchg
jp
sub
outsb
dec
aam
repnz
sub
dec
repnz
outsb
lods
test
add
mov
mov
mov
xchg
jge
mov
cmc
inc
call
dec
das
push
push
repz
out
int
xor
add
push
sbb
sbb
out
inc
jmp
scas
push
inc
or
xchg
mov
pop
sub
ja
insb
mov
adc
in
push
and
int
fdivl
cmp
xor
xor
scas
jns
outsb
shll
cmp
int
dec
jns
mov
or
adc
mov
fildl
pop
add
add
pop
jae
scas
cwtl
movsl
gs
bound
xlat
repnz
sbb
pop
sar
setle
mov
sbb
aam
jmp
lea
pop
das
lods
insb
inc
fsubrl
push
sahf
test
push
pop
lea
adc
in
mov
xchg
jmp
out
jle
stos
fidivrs
or
xchg
push
test
fisubrl
add
xchg
pop
pop
adc
mov
pop
and
mov
scas
loop
nop
dec
dec
arpl
mov
fmull
movb
sbb
negl
mov
stos
fwait
repnz
mov
inc
insl
std
sbb
jp
aad
divl
xor
add
cmc
xor
lcall
repz
fldenv
push
xor
pop
aas
cmc
inc
stos
jae
mov
push
es
sti
lods
dec
push
xchg
and
imul
inc
arpl
sbb
jg
push
test
mov
lcall
sarb
pushf
in
dec
and
in
call
push
stc
test
push
jl
sub
in
or
call
cld
decb
dec
shlb
adc
adc
adc
sub
push
ss
loope
imul
cmp
mov
imul
pop
cmp
adc
jae
pop
add
dec
sti
cld
out
cli
cmpsl
aam
xor
addr16
sub
and
xchg
mov
sub
jp
dec
mov
xor
and
lcall
mov
insb
xchg
cwtl
scas
test
push
je
adc
add
ss
xor
cmpsl
testb
jp
les
xchg
jg
inc
sbb
pop
hlt
cmp
lods
mov
xchg
xor
inc
aas
popf
mov
add
xor
jne
pusha
ret
push
fcompl
call
jge
bound
add
iret
jo
xchg
loop
int
adc
mov
out
cmp
outsb
lods
pop
xlat
es
jmp
add
dec
adc
jecxz
shrb
push
mov
jp
inc
inc
cmp
xlat
mov
loopne
insb
loope
mov
rcrl
push
mov
cmc
sub
dec
out
inc
jb
out
xchg
in
dec
jp
or
mov
ret
rol
outsb
adc
cli
xor
fbld
scas
push
cmp
mov
in
mov
jg
and
or
dec
sbb
orb
scas
lock
xor
and
xchg
jmp
ja
insl
lret
sub
sahf
fisttps
push
hlt
std
fcmovbe
fsubrl
jns
fst
xor
mov
cmp
insb
cmp
nop
jbe
sbbl
or
ret
mov
or
xor
xor
out
push
int3
adc
add
jo
loope
ret
jno
sub
jg
push
mov
jno
jne
mov
sbb
mov
movsl
nop
sbb
adc
adc
pushf
mov
jns
ljmp
mov
in
and
jge
ljmp
mov
jns
mov
or
push
mov
fistpll
xor
dec
cld
pop
int
add
aas
sub
arpl
hlt
pop
adc
aad
jnp
test
push
sbb
xchg
outsb
shlb
cmp
insb
sbb
jbe
and
fidivrl
loopne
daa
stos
mov
scas
add
dec
pop
xadd
sahf
mov
mov
aam
daa
or
or
xchg
test
int
dec
mov
dec
cltd
fchs
cmp
cmp
jp
jno
and
adc
sbb
dec
mov
int3
pop
jne
imul
in
inc
movsl
dec
shrl
loopne
scas
mov
repnz
xchg
inc
sbb
or
notl
lret
sbb
sahf
push
mov
cmp
mov
jo
xor
lds
or
xor
xor
dec
jne
out
cwtl
andb
cmp
or
adc
jae
sbb
dec
push
inc
sub
in
sbb
stos
repnz
push
and
imul
push
cmovne
clc
cmpsb
sub
bound
ds
and
jnp
cmpsl
xchg
jo
fcmovb
mov
xchg
sbb
mov
jl
and
xchg
cmp
stos
iret
xor
loop
sbb
ret
ret
jecxz
cs
es
scas
or
mov
movb
movsl
and
mov
out
aad
shr
pop
pop
enter
stos
jb
loope
sbb
pop
pop
pop
fimuls
ljmp
jmp
adc
shll
cmp
pop
and
lods
sbb
pop
mov
adcl
mov
xor
aam
cmp
out
cmp
or
out
jo
mov
pushf
push
add
dec
das
inc
cmc
je
add
cld
xor
out
xor
jne
out
nop
das
pop
addr16
push
cli
cmp
dec
cmp
std
fwait
add
dec
bound
test
mov
and
leave
repnz
scas
mov
loope
add
pop
decl
stos
cmpl
jo
push
fdivs
fisttpll
fs
pushl
pop
fwait
andb
cwtl
push
xchg
add
mov
lods
jno
xchg
popf
cmp
push
push
cld
adc
fstps
mov
add
hlt
roll
lds
int
xor
shlb
fdivrp
xchg
xchg
data16
push
cltd
mov
inc
cld
mov
sbb
add
pop
mov
and
fldl
sti
outsb
int
idivb
ljmp
xor
pop
data16
shrl
jbe
or
pop
rol
int
sbbl
dec
icebp
xchg
out
loop
xchg
xor
cmp
push
ja
xchg
sbb
inc
sbb
pop
insb
mov
and
nop
xlat
fs
cmp
mov
and
inc
ds
jmp
mov
vpaddusb
inc
lock
dec
jb
inc
sbb
and
sub
cmp
mov
or
dec
das
push
push
inc
mov
dec
in
imull
ds
fstpt
jbe
andl
and
int
aas
mov
sub
mov
gs
popa
jg
jb
mov
clc
mov
jl
add
pop
xchg
in
push
pop
ficoml
ret
pushf
add
mov
jbe
insl
sub
cs
idivl
sti
in
dec
je
aas
rcrb
test
sbb
push
sahf
add
stos
push
scas
cmc
mov
cmpsb
mov
jae
adc
popa
stos
adc
icebp
mov
xchg
daa
or
je
sub
lea
push
int
shlb
xchg
and
xchg
dec
ss
or
repnz
js
jmp
mov
adc
xor
jne
icebp
into
ret
jns
sub
fisubs
js
and
or
nop
jae
ljmp
mov
enter
push
decb
pop
ret
mov
in
mov
orb
xchg
mov
mov
push
gs
aad
int3
mov
inc
add
clts
stos
and
sbb
push
jle
push
in
movsl
aam
nop
rcrb
cld
mov
mov
mov
add
push
negl
pop
clc
xor
dec
xor
xchg
sbb
push
xchg
and
pop
jo
decl
mov
adc
out
imul
sbb
pop
adc
cltd
js
test
jmp
mulb
pop
cwtl
cmp
mov
scas
lock
call
push
pop
dec
mov
and
ficoml
cmp
ljmp
adc
xor
push
lea
je
mov
jl,pn
push
ds
data16
pop
xor
movsl
inc
add
xchg
vmovups
pop
cld
inc
xor
pop
fcompl
push
ret
push
shll
push
or
pop
mov
xchg
xor
xchg
xlat
add
shl
inc
sub
clc
sahf
fstl
sahf
loopne
sar
lahf
xor
frstpm(287
jmp
aas
enter
push
shlb
fisttpll
xor
xchg
pop
fstl
test
cwtl
and
sarb
jecxz
sbb
inc
out
iret
mov
jge
cmpsb
add
nop
addr16
repnz
lret
inc
push
mov
inc
cmp
lods
push
add
cmpl
xor
or
ja
mov
das
cmp
ffree
out
fcom
cltd
fldl
pop
mov
addr16
or
xchg
call
sub
mov
pop
push
aam
mov
jno
push
cmp
mov
jmp
addl
xor
inc
lahf
add
out
xchg
push
fistl
mov
inc
sub
pop
push
andb
test
sahf
jne
js
fwait
inc
loope
adc
insl
gs
pushf
decb
nop
sahf
and
and
pusha
ss
ret
sbb
pop
scas
sti
jb
les
sub
ret
jbe
negb
mov
sub
cltd
das
cld
std
push
pop
push
inc
scas
adc
sub
call
or
mov
add
inc
pusha
mov
stos
xchg
out
sub
in
pop
cmpsb
bound
test
insl
cwtl
insb
ret
mov
sbbl
mov
stos
dec
dec
add
sbb
insb
push
pop
cli
mov
sbb
mov
sbb
sub
or
cmp
test
jo
pop
std
xor
imul
pop
shlb
jnp
data16
int
xor
mov
or
adc
les
inc
push
mov
ret
dec
xchg
and
fildl
mov
test
mov
out
loope
or
iret
sti
xchg
or
andb
xchg
lock
jnp
loopne
insb
arpl
aas
nop
stc
pop
mov
imul
sbb
pop
cltd
repnz
test
mov
dec
push
ljmp
adc
inc
aaa
cmpsl
mov
mov
stos
sbb
rcr
aam
call
add
push
jmp
in
rorb
nop
repz
fsubrl
dec
bnd
fidivrl
out
outsb
scas
into
cld
jns
push
ss
adc
icebp
test
outsl
xor
xor
push
in
stos
loope
out
push
add
pop
jecxz
cmp
aas
adc
test
xbegin
stos
mov
and
addr16
or
push
jge
ret
xchg
sahf
pop
adcb
fndisi(8087
rol
inc
jbe
lea
pop
jge
inc
imul
mov
in
pop
cmp
push
mov
jnp
jne
icebp
call
aaa
xchg
add
mov
icebp
jb
iret
push
test
out
xor
mov
add
scas
stc
xor
fwait
mov
mov
loopne
xorl
aas
orb
xor
jno
int3
xor
movl
cltd
push
mov
pop
ss
js
cltd
jnp
test
add
in
mov
lods
fs
sub
clc
dec
mov
and
std
mov
daa
add
mov
test
add
call
pushf
call
in
or
push
push
bound
out
movb
cmp
pop
add
cwtl
fsubrs
jbe
stos
jle
lcall
fsubs
jl
dec
or
fsub
xor
xchg
mov
jmp
roll
adc
add
fnclex
mov
jp
pusha
jnp
mov
repz
loopne
and
push
xchg
mov
inc
jne
dec
xchg
mov
das
test
mov
leave
mov
scas
cmpsl
pop
mov
stos
mov
aas
mov
mov
push
es
je
clc
dec
pop
push
test
test
mov
sbb
inc
xchg
adc
scas
aam
jmp
xchg
stos
inc
push
out
sbb
lret
inc
inc
in
cmp
fsubl
xchg
cld
cmp
sbb
ret
lea
imul
dec
int3
xchg
mov
mov
sub
dec
pop
dec
jne
shrd
pop
xor
pop
mov
inc
pop
sub
test
lods
cmp
mov
or
adc
jl
iret
pop
push
pusha
out
popa
jns
cmp
aas
idiv
out
fdivl
sub
popw
mov
cmpsl
jne
or
lret
mov
dec
xchg
icebp
add
scas
stos
pop
xchg
rorb
xor
or
inc
sub
xlat
popf
mov
push
mov
adc
icebp
push
loopne
pop
mov
je
fstps
jno
inc
jnp
adc
jns
pop
xchg
jle
pop
js
test
mov
mov
add
fcoms
push
push
and
sub
cmp
ret
lcall
and
add
xor
aad
xor
dec
push
sub
sar
xor
in
mov
pop
scas
cmp
or
rorl
loopne
or
cmp
xor
jl
cli
into
dec
pushw
lret
pop
jmp
in
stos
imul
jp
lods
and
lds
test
and
mov
xlat
inc
fwait
add
iret
call
sbb
push
les
bound
cmpsb
ss
lret
in
cmc
dec
adc
xchg
sahf
arpl
pop
in
inc
ds
lahf
in
inc
pusha
mov
sub
dec
dec
push
int3
cmp
cmp
xlat
xchg
cltd
fildl
or
mov
jne
stos
push
dec
sbbb
rcrl
out
setne
test
test
mov
cmp
ret
or
test
scas
lock
inc
sbb
loop
fistpll
repz
mov
adc
vphsubdq
pop
aas
push
adc
mov
arpl
int
and
push
clc
jmp
adc
push
xor
cli
or
data16
addr16
mov
mov
xor
push
int3
push
addr16
add
dec
mov
push
mov
adc
jge
mov
mov
daa
insb
mov
inc
xor
pop
sub
rcr
push
jl
cwtl
jmp
pusha
enter
enter
test
test
mov
movsl
lods
adc
xor
fs
fildl
inc
gs
subl
mov
mov
push
adc
ljmp
std
and
add
push
lock
dec
scas
and
cmp
sar
cmpsb
leave
scas
pop
stc
jb
sub
hlt
fsts
mov
scas
dec
lcall
push
xorl
mov
insb
pop
inc
jae
mov
sub
lret
neg
ja
xor
sti
adc
dec
push
dec
insb
push
rolb
sub
xor
mov
pop
repnz
lret
jbe
js
add
pop
aaa
xor
pop
xor
mov
mov
xchg
mov
addr16
test
pop
and
stos
sub
sub
push
push
mov
sub
mov
jo
mov
rolb
jbe
or
or
int3
xor
push
add
aad
dec
mov
or
ljmp
xor
insb
rorb
mov
lds
ss
jns
mov
mov
mov
jge
lret
and
dec
xchg
in
orb
nop
jl
ss
xor
ljmp
sti
push
push
add
movsb
mov
jge
mov
jnp
push
or
dec
mov
loop
sahf
insl
jmp
ljmp
dec
and
test
dec
incl
into
mov
or
sub
les
sbb
neg
psubd
mov
cwtl
repnz
jb
sbb
test
rcrb
and
push
xchg
out
imul
jno
mov
mov
sbb
mov
out
mov
rcrl
lahf
stos
std
scas
pushf
testb
icebp
clc
add
or
jo
sub
push
pop
fbld
imul
add
mov
xchg
pop
aas
push
jecxz
cmpsl
xor
adc
dec
lcall
movsl
inc
scas
jae
mov
pop
fstps
xchg
call
mov
inc
fisubrl
cwtl
xor
cld
pop
or
jg
mov
push
outsb
sub
outsb
leave
jge
xchg
aad
adc
xor
push
mov
hlt
xchg
jnp
test
push
dec
mov
mov
adc
inc
imulb
dec
push
jne
out
out
sbb
stos
bound
loope
xchg
cmp
jg
pusha
sahf
loop
dec
data16
stc
mov
or
ret
xor
fs
push
test
leave
insb
mov
mov
cmpsb
cmp
fstl
test
std
mov
stos
mov
mov
pusha
cwtl
xor
pop
or
aaa
es
xor
mov
xor
mov
scas
icebp
and
lds
arpl
and
mov
and
lcall
mov
popa
dec
jecxz
mov
sbb
pop
push
fsubl
shlb
xchg
and
adc
mov
or
nop
mov
jle
in
xor
and
jne
loop
bound
or
pop
cmp
pop
push
gs
jle
mov
mov
popf
adc
lahf
aaa
and
sbb
lcall
xchg
jmp
es
mov
stos
test
cmpsl
ljmp
fst
push
mov
int3
dec
rclb
cld
mov
jg
scas
scas
sbb
pop
loope
cli
movsl
dec
pushf
outsl
inc
testl
cs
pop
cmpsb
xlat
push
ret
mov
outsl
adc
bound
mov
hlt
and
incl
outsb
fisubrl
lds
or
cli
add
fwait
push
lcall
sbb
pop
cmp
sub
mov
in
scas
lret
xchg
repnz
mov
add
xor
sub
jge
mov
cwtl
add
fwait
ljmp
mov
fldt
mov
lret
cmpl
sbb
shrl
sub
cmpsl
test
sti
mov
push
jnp
imul
pop
repz
ficoms
icebp
jne
jb
insl
push
pop
outsl
jecxz
loope
pop
sub
and
xchg
daa
cmp
or
jmp
inc
push
daa
movsl
cli
cmpsb
decb
cmp
jb
lret
imul
push
cmc
adc
mov
aad
jb
mov
sarb
dec
subb
ds
mov
cmc
jae
mov
loope
ret
stc
adc
icebp
mov
adc
xor
leave
mov
test
mov
imul
pop
dec
push
pop
sbb
scas
mov
jbe
and
pop
sub
lsl
jb
stos
or
push
outsl
outsb
fs
cmp
add
mov
repz
or
fdivs
xor
cli
pop
sbb
add
xlat
inc
xor
insb
bound
dec
inc
stos
sub
pmaxub
sub
and
ja
stos
dec
push
push
sbb
fsubrp
mov
je
aaa
xchg
jb
adc
push
sbb
stos
lea
icebp
movsb
and
out
jg
dec
test
push
adc
fwait
add
or
cmp
stc
dec
inc
dec
jb
jae
push
jmp
cmp
inc
xchg
test
mov
imul
sbb
sarb
test
daa
pop
and
repnz
mov
dec
add
add
inc
push
sbb
inc
inc
je
es
pusha
or
mov
outsb
in
mov
xor
dec
fsubl
ja
fwait
xlat
xor
in
pop
mov
lock
cmp
sub
or
add
mov
and
adc
pop
cmp
arpl
test
dec
js
lds
cmc
xlat
and
loope
out
xor
imul
sbb
test
pop
pusha
push
add
or
call
popf
and
fwait
addr16
mov
arpl
dec
push
add
sbbl
jae
or
hlt
sahf
lock
adc
ret
mov
cltd
shr
cs
add
out
jne
into
mov
imul
fucomp
mov
cmp
sbbl
or
pop
nop
mov
adc
cmp
push
sub
ss
adc
cwtl
lret
sbb
iret
mov
and
or
stc
mov
mov
inc
fnstsw
sbb
or
int
lds
inc
popf
xchg
push
xchg
mov
add
add
inc
jl
hlt
cwtd
sbb
rolb
add
sub
imul
inc
push
shlb
ss
jb
insl
inc
fs
cmpsb
dec
pusha
ss
or
mov
fnsave
movsb
push
xchg
cmp
imul
fisttpll
movsb
mov
in
mov
sbb
push
push
fildll
fbstp
inc
push
stos
inc
pop
cmp
loopne
incl
cmp
fisubrl
enter
push
fistl
enter
mov
ss
aaa
outsb
xchg
push
push
and
addr16
cmp
pusha
fimull
ret
fistps
popf
xor
mov
sub
fidivl
xor
iret
shrl
mov
iret
in
outsb
cltd
sub
lods
js
mov
mov
jmp
inc
jecxz
pop
pop
test
loopne
xlat
repnz
xor
rcrl
popa
jno
ret
cmp
push
movsl
fwait
ds
or
push
addr16
cmp
shrb
xor
outsb
in
stos
test
sub
add
mov
scas
cmp
pop
lea
fwait
es
jb
push
cmp
sbb
sbb
je
mov
mov
jo
cmpsl
pop
ss
ss
sub
mov
movsl
fwait
lods
xchg
xor
mov
mov
add
adc
fsub
aas
fs
ffreep
cmp
lods
cmpb
xchg
dec
sahf
movsb
add
pusha
push
test
scas
xchg
shll
mov
and
js
cmp
fdivrs
pop
gs
lds
and
popf
push
xchg
mov
into
sbb
mov
lret
inc
sub
pop
mov
sub
cmp
fdivs
mov
out
out
je
jbe
stos
fwait
jecxz,pn
movsb
pop
loopne
fwait
xor
or
xchg
and
in
mov
push
jge
mov
movsl
outsb
mov
xor
decb
jmp
loope
leave
inc
and
iret
out
lahf
inc
dec
dec
ret
mov
pop
jle
dec
push
jno
jo
push
ficomps
xor
mov
mov
jno
pushf
int
jnp
mov
inc
ror
outsw
notl
jg
scas
mov
xor
mov
movb
xchg
in
and
nop
dec
out
mov
inc
insb
jl
pop
sub
pop
inc
mov
in
push
sub
sbb
and
pop
push
jne
adc
adc
pop
lock
lea
xchg
xchg
test
add
je
cmc
or
ss
rcll
lock
push
mov
int3
mov
in
and
lea
xchg
sar
fs
shll
lods
dec
mov
stos
push
jg
xchg
ret
dec
or
shl
adc
dec
push
sub
fadd
cmp
xor
sbb
sti
dec
out
inc
fcoml
or
pop
rcrl
dec
xchg
xchg
pop
repz
shll
pusha
mov
xor
adc
sub
inc
jecxz
out
dec
shlb
idivl
xchg
andl
xchg
leave
fdivr
sub
ss
mov
push
sbb
xlat
into
call
add
ljmp
pop
push
call
xchg
dec
out
roll
popa
divl
jo
outsl
push
add
ret
push
jl
loope
fcmove
cs
flds
cmp
or
idivb
adc
xchg
xchg
in
push
incl
ret
lcall
cmp
sbb
enter
or
rcll
cmp
cmp
int3
xchg
push
xor
cmp
or
add
dec
lahf
mov
mov
pop
xchg
lret
sti
cld
enter
mov
and
aam
pushf
call
mov
lods
sbb
add
mov
adc
negb
pusha
push
mov
mov
pushf
fbstp
lret
add
jmp
inc
mov
push
js
jle
mov
les
cld
enter
adc
xor
add
movsb
sbb
nop
data16
mov
sbb
jne
cli
fwait
test
clc
and
xchg
xor
stos
arpl
fiaddl
lcall
mov
movsb
pop
xchg
test
jns
imul
icebp
mov
mov
fimull
lods
jle
nop
mov
jo
stos
jmp
cs
cltd
inc
into
fiadds
sahf
lock
ret
dec
popl
jl
sbb
xor
cmpl
sbb
out
cmpl
out
imul
inc
movsl
enter
fstps
mov
and
cmp
out
sbb
sti
outsl
xor
scas
xor
mov
xchg
xchg
mov
test
cs
cli
cmp
lea
lds
pop
insb
jae
sbb
adc
mov
nop
push
and
lret
mov
cmc
sti
cmp
mov
int3
push
outsb
gs
in
mov
fists
es
lret
call
jnp
push
test
inc
mov
mov
clc
stos
dec
in
lret
ja
and
test
test
add
adc
lret
ljmp
ret
imul
adc
lcall
xchg
int
and
sbb
or
das
outsl
lods
jo
fldl
outsb
loope
or
pop
aaa
xchg
ja
mov
jbe
lret
mov
les
push
dec
lret
out
call
jbe
in
out
hlt
xchg
jmp
jle
inc
mov
pop
fcomps
inc
push
aad
repz
pop
inc
mov
jmp
repz
out
mov
jns
cmpsb
mov
jmp
jmp
sub
and
xor
push
lahf
pop
xchg
mov
dec
inc
test
jno
repz
jmp
fstpl
repz
notb
jne
jae
xchg
lods
mov
adc
mov
dec
mov
and
mov
jecxz
inc
in
push
test
repz
mov
sti
push
mov
jecxz
or
xchg
jno
in
or
push
mov
shrl
loop
inc
outsl
cmp
lods
sub
adc
and
cwtl
in
in
movsl
lds
mov
adc
pop
aas
mov
jae
in
inc
push
or
icebp
hlt
push
cld
jns
ret
test
xor
xor
xor
fs
xchg
loop
data16
mov
nop
pop
repz
cmp
sub
xchg
lds
push
jl
sub
sub
push
in
mov
out
je
jno
cmp
mov
sub
pusha
xchg
pop
jl
xor
push
shufps
jne
mov
xor
xor
insb
repz
mov
or
insl
push
negb
jno
loopne
mov
cmp
inc
dec
mov
movsb
sub
mov
divb
addl
insl
lret
pop
cld
aam
dec
inc
mov
fistl
mov
in
or
cmp
and
or
mov
sub
dec
popa
cmp
sti
sahf
arpl
out
sub
das
into
fisubl
add
aaa
mov
sarl
lret
mov
pop
ljmp
aas
xchg
mov
adc
or
leave
bound
arpl
sti
sbb
mov
jne
daa
inc
adc
out
cli
and
mov
sbb
call
test
cltd
sub
das
mov
inc
mov
mov
stc
bound
cltd
jg
or
movsb
xlat
test
mov
sti
jg
xor
cli
xchg
fists
dec
not
push
inc
inc
jg
xor
cmpsl
dec
pop
cli
and
jecxz
mov
bt
adc
out
pop
into
nop
pop
stos
inc
in
sbb
in
xchg
jle
lcall
flds
ja
std
in
fwait
inc
adc
mov
sbb
mov
movsb
ret
add
aas
and
push
test
mov
jge
clc
mov
add
add
fucomp
add
adc
dec
xor
enter
je
jbe
insb
addr16
sbb
jbe
jecxz
xchg
jl
loopne
jnp
insb
dec
sarb
cmp
and
daa
movsl
push
mov
mov
ret
mov
mov
inc
xor
adc
data16
js
xor
lea
sbb
pop
adc
and
bound
rclb
cmp
mov
xchg
sub
mov
or
in
aaa
push
scas
lods
inc
cmp
mov
inc
je
shll
les
add
xchg
out
fidivs
mov
test
out
push
es
ja
pop
int3
fidivs
dec
or
pop
icebp
mov
mov
outsl
cld
mov
jge
outsl
mov
xchg
mov
outsb
shl
int
mov
fdivs
insb
fldcw
jl
adc
add
mov
inc
sbb
xchg
in
inc
cmp
je
movsb
scas
mov
mov
inc
insl
or
scas
addr16
push
cmp
out
xor
int
dec
pop
add
lcall
daa
ficoml
cmp
xor
sbb
repz
sub
adc
pop
leave
nop
fisubl
lcall
ja
xor
test
xchg
popf
loopne
out
mov
sub
mov
push
pop
test
lock
lret
clc
or
push
and
xlat
xchg
inc
dec
lods
stos
dec
xor
daa
ja
sti
mov
add
sub
jno
loopne
sbb
cwtl
cmp
rol
lods
or
std
aaa
enter
mov
mov
les
dec
iret
sahf
jle
mov
je
xlat
jno
lahf
fs
ret
push
in
mov
xor
push
loopne
push
cli
xchg
mov
fldl
loope
enter
inc
bound
add
insl
pop
sub
lock
outsl
add
mov
or
sub
in
cmpsb
mov
jmp
leave
rcr
or
xchg
in
jle
sbb
pop
sbb
ljmp
fsubp
xor
add
ss
arpl
or
mov
mov
inc
or
adc
fidivl
xchg
and
loop
loope
rorb
sti
inc
or
mov
in
inc
or
call
std
push
mov
out
sub
testl
mov
pop
dec
or
xor
mov
outsl
ss
mov
mov
call
inc
out
or
jbe
xchg
aas
cmp
rcr
and
jecxz
pop
pop
nop
sti
loopne
adc
jg
sub
lret
shlb
mov
push
hlt
mov
mov
sub
cmp
mov
pop
adc
push
add
fsubl
push
push
cmp
jbe
mov
test
repnz
jo
clc
cmpsb
rcrb
push
mov
imul
das
sub
and
or
dec
xor
jns
out
or
cmp
mov
shll
cmc
ss
fildl
jo
mov
jmp
jb
pop
sbb
sub
inc
movsb
xchg
mov
sti
shlb
bound
jle
mov
ret
imul
lock
xchg
inc
push
scas
pop
fcoms
enter
imul
sub
test
fidivrl
jbe
sbb
es
mov
popf
lret
push
in
cmp
fisttps
movsl
loopne
pop
sti
sbb
or
cld
insl
xlat
dec
stos
or
lcall
mov
dec
sub
lahf
in
xchg
add
shlb
sbb
dec
xor
push
sti
adc
jge
xchg
jmpw
aaa
pop
xchg
sub
add
pop
xor
out
subl
pop
push
hlt
lahf
repnz
push
cli
fbld
ds
dec
jle
sahf
fisttps
xchg
add
sbb
lea
dec
int3
push
xor
ffreep
push
mov
xor
fwait
cli
imul
repnz
add
fmul
repz
es
adc
xor
push
dec
push
imul
add
lret
lea
push
mov
fsub
dec
add
es
and
fnsave
add
mov
dec
inc
cmp
add
je
mov
out
int
or
ja
pop
popf
cmc
or
pop
push
xlat
push
push
fidivs
xchg
cmc
mov
into
andnps
aas
pushl
fwait
cld
push
push
sub
adc
cmpsb
aad
xor
or
xchg
pop
push
and
ja
pop
cmc
fstpt
sbb
imul
leave
loop
leave
sub
jbe
gs
xchg
and
xchg
out
mov
mov
data16
jne
test
sub
out
xchg
pop
dec
es
pusha
xlat
imul
lds
xor
dec
lahf
outsl
mov
out
xlat
outsl
jae
lods
popa
test
pop
cmp
mov
adc
stc
mov
icebp
bound
ret
xor
or
cmpb
push
pop
roll
pusha
jge
sbb
inc
scas
lahf
iret
aam
mov
test
lret
inc
push
or
pop
dec
daa
sbb
jg
push
adc
cmpsb
dec
lods
jno
xor
push
addb
incl
cmp
push
jl
in
pop
dec
cmc
mov
ficoms
pop
jg
add
cmpsl
push
fwait
sbb
mov
loopne
push
xchg
dec
push
and
shr
loop
test
out
cs
sar
daa
pop
adc
ljmp
clc
push
leave
dec
push
inc
xor
lret
xor
sub
je
dec
cwtl
imul
sub
and
push
sbb
or
or
cmp
fadds
push
shrb
add
pop
icebp
jg
lahf
dec
cld
or
fcoms
outsb
xor
fmul
xor
rcrl
xchg
inc
push
cmp
pop
mov
sub
out
jg
xchg
mov
mov
gs
mov
and
inc
xchg
inc
imul
inc
fsubl
fs
jp
subb
fs
cmpsl
fsts
fwait
push
jp
pop
clc
cmp
push
mov
sbb
daa
repnz
das
fwait
jge
and
clc
push
roll
popf
lret
in
add
or
pusha
movsb
add
mov
xor
lock
and
in
inc
cmp
mov
subb
dec
xor
xchg
fcomip
push
mov
gs
add
and
xchg
mulb
and
fnsave
xchg
mov
rcrl
aad
mov
sarb
iret
sub
cmpsl
pushf
stc
aaa
sub
arpl
mov
pop
mov
int3
cltd
gs
insl
sbb
pop
ffreep
cmc
and
es
sahf
stos
or
and
into
ja
shrl
es
clc
hlt
into
call
mov
out
repz
jl
lods
jae
lods
sub
data16
xchg
mov
xor
pop
mov
adc
decl
int3
aas
dec
nop
in
das
mov
sbb
xchg
fs
mov
adc
out
cmp
or
push
test
ret
js
dec
repz
leave
int
mov
add
and
pop
add
cmpsb
test
sub
in
mov
xor
cmp
iret
sahf
mov
push
into
add
das
sbb
cmp
jae
mov
cmp
andb
xchg
xchg
xchg
aam
mov
in
loopne
add
popf
push
add
ljmp
cs
arpl
pop
pop
cmp
pop
mov
sub
push
pop
bound
rcr
adc
ret
cld
sub
insb
fdivrl
sub
je
out
fnstsw
test
and
cmpb
aas
push
push
outsb
xchg
fstpt
scas
mov
push
inc
jnp
lds
mov
sbbl
jmp
je
sub
mov
test
jg
xchg
int
mov
mov
data16
mov
dec
jno
imul
cs
cmp
mov
dec
jmp
sahf
fldenv
mov
sahf
int3
sbb
mov
adc
jl
sub
stos
ss
pushf
int
push
icebp
outsl
xchg
fs
js
pop
imul
loopne
insl
fistl
mov
adc
cmp
insl
lret
pop
mov
sub
repz
mov
js
je
mov
sti
pusha
xchg
adc
loop
push
inc
add
je
sbb
sbb
jecxz
mov
inc
or
adc
test
ret
pop
outsb
mov
out
addb
pop
push
pop
or
test
bound
pop
arpl
mov
ret
shrb
ret
xor
push
pop
faddl
push
int3
addr16
jns
xor
jge
and
and
nop
adc
insb
sbb
icebp
movb
sub
dec
pop
inc
pushf
xor
or
outsl
push
push
adc
cwtl
push
dec
mov
cmp
sbb
imul
and
cmpsl
int3
roll
pushf
sahf
mov
in
movsb
clc
mov
addr16
mov
pop
gs
dec
cmp
xchg
jmp
jmp
icebp
aas
cld
scas
dec
xor
add
std
add
sub
lea
dec
cmp
stc
dec
jl
add
imul
mov
scas
ficoml
inc
cmp
lret
push
fbld
outsb
mov
stc
push
inc
jno
pop
daa
pop
dec
arpl
pop
mov
push
jg
outsl
mov
imul
ljmp
cltd
inc
nop
or
sub
xor
xchg
dec
adc
es
xchg
inc
pop
js
sahf
and
jg
scas
or
iret
xor
jo
mov
dec
pop
jb
or
in
or
je
testb
xchg
push
aas
mov
pop
mov
xor
adc
ror
mov
push
dec
lods
imul
sbb
sub
out
sub
cmp
and
cmp
icebp
and
inc
push
lods
jmp
xchg
ret
inc
rcrl
or
test
jle
or
jg
pop
push
pop
and
enter
adc
js
mov
out
inc
cmp
cmpb
aad
fdivrl
pop
pop
jno
rorb
xor
enter
in
add
xchg
sub
divb
push
sahf
xchg
add
hlt
pop
adc
frstor
ss
lea
xor
lods
pushw
idivl
and
lret
add
fmul
jl
loop
sti
cltd
icebp
stc
outsb
cmpsl
stc
out
xlat
lods
mov
cmp
inc
es
pop
stos
dec
ror
mov
jns
sbb
scas
sbb
inc
test
inc
dec
icebp
push
addr16
lea
mov
ds
jl
mov
xlat
xor
in
ret
inc
push
inc
jbe
cli
add
cs
sub
daa
hlt
xchg
dec
inc
ljmp
mov
shll
orl
mov
lcall
clc
lea
lods
mov
jge
sub
cld
enter
pop
in
mov
rcrl
adc
cltd
pushf
pop
iret
sahf
fstps
jae
data16
mov
arpl
aam
fldl
push
inc
add
and
dec
sub
sbb
insl
loopne
mov
jmp
rolb
std
and
xchg
or
sbb
arpl
dec
in
mov
repz
mov
pop
mov
addr16
mov
test
andl
int
popa
stos
bound
xchg
sub
outsl
fiaddl
xorl
shl
fsubrp
mov
or
sbb
icebp
jp
and
in
or
sub
xchg
or
ljmp
lret
scas
mov
addr16
addr16
push
cmpsb
cmp
inc
pop
lret
mov
cmpsl
and
movsl
mov
inc
push
stc
jmp
mov
testb
sti
outsl
stc
pop
js
int
jo
push
push
add
jnp
cwtl
and
jl
add
inc
mov
xlat
adc
in
dec
or
mov
sbb
jge
repz
mov
push
jnp
out
push
fwait
lds
in
sti
dec
sbb
in
ret
inc
mov
ret
stos
xchg
or
add
sarb
jae
push
jge
xchg
xchg
cltd
aam
movsl
or
push
pop
out
popf
out
dec
or
dec
xchg
outsl
pop
and
das
jo
out
mov
mov
add
jmp
pop
mov
ret
xchg
pop
mov
shll
pop
gs
insb
shlb
mov
push
dec
jns
adc
sub
xchg
movsb
loope
pop
mov
fst
arpl
jge
hlt
inc
push
fmul
or
aaa
jmp
cmpb
sub
add
inc
mov
push
push
push
mov
dec
xchg
xor
jb
pusha
or
fsts
dec
jbe
xor
mulb
adc
xchg
lcall
movsl
pop
fsubp
fs
jp
je
dec
push
lea
aaa
jmp
test
fstp
mov
mov
stos
popa
add
xor
mov
and
loopne
int3
ss
cmp
sub
aaa
push
pushf
mov
in
add
loopne
std
fs
push
mov
fwait
cmp
pop
in
repnz
sub
jge
mov
dec
dec
int
fiadds
dec
dec
add
bound
sub
popa
in
rcll
popf
aas
push
cmp
push
mov
xor
lock
xchg
test
ret
rol
imul
push
adc
add
test
cltd
ljmp
pop
jne
jns
rolb
repnz
push
pop
xchg
dec
pop
push
push
or
imul
mov
leave
xlat
jo
push
adc
aad
xor
inc
cmpsl
rclb
dec
subl
mov
pushf
adc
movsb
lret
mov
lods
inc
dec
sub
mov
andb
push
mov
mov
xor
mov
movsb
pop
or
cs
ja
mov
pop
mov
cwtl
push
pop
xlat
iret
pusha
adc
aas
gs
ret
mov
jmp
dec
pop
sbb
out
jae
shr
push
scas
adc
push
xchg
xchg
bound
mov
push
scas
iret
out
cmp
mov
out
cmpsl
and
nop
sub
pop
mov
adc
cmp
clc
in
mulb
sbb
icebp
cld
pushf
std
adc
add
sbb
bound
int3
add
outsb
iret
pop
inc
sub
int
arpl
pop
pop
imul
jmp
mov
sti
push
test
xor
ror
idiv
adc
or
mov
push
cmpsl
std
mov
mov
jl
cmc
rolb
andb
mov
xlat
sub
mov
movsb
or
cltd
adc
mul
lret
lods
outsb
je
outsl
add
mov
pop
loop
hlt
loopne
aas
sbb
testl
mov
sub
adc
add
aas
dec
scas
mov
push
orl
lret
mov
pusha
fldenv
jl
sahf
inc
pushf
sbb
jecxz
push
jmp
mov
or
xchg
jl
addl
pop
mov
xor
push
int
rcll
push
mov
jne
das
ret
add
mov
int
xlat
lea
subb
or
fistps
ja
xchg
cmp
sbb
lds
xchg
xchg
pop
lret
mov
movsl
sbb
add
push
mov
ljmp
popw
inc
xor
icebp
fs
dec
jb
sarl
push
lahf
loope
dec
and
adc
iret
mulb
mov
cmc
and
test
xchg
lods
pop
sub
push
inc
movsl
xchg
jne
inc
adc
call
mov
dec
popa
add
mov
cmc
pop
pop
mov
pusha
jno
or
jp
icebp
inc
je
mov
mov
add
pop
jae
cmpl
in
fwait
stc
and
add
pop
dec
cltd
xor
shlb
push
and
pop
sarl
into
jno
pop
jp
out
out
bound
mov
loopne
mov
pusha
lret
rcrb
pop
xor
dec
xchg
jl
addr16
mov
add
outsb
or
xchg
cmp
lcall
lods
push
inc
jge
add
fiadds
and
dec
shlb
jecxz
adc
leave
imul
sbbb
pop
lea
movsl
mov
jl
mov
mov
test
or
pop
movsl
xchg
xchg
ja
cwtl
mov
dec
sub
cmp
cmp
mov
mov
std
aaa
icebp
jnp
pop
rcrl
push
or
aaa
mov
dec
repz
push
or
cmpsb
xor
cwtl
in
pushf
icebp
inc
add
pop
xor
jp
push
sarb
fdivrl
add
mov
fisubs
mov
mov
dec
push
lea
add
add
insl
sahf
push
xor
mov
stos
fs
int3
ret
mov
sub
lret
ret
mov
mov
cmpsb
faddl
pop
test
insl
rcll
mov
sub
shl
ljmp
adc
daa
and
sbb
test
xor
xchg
dec
mov
mov
jmp
shr
xchg
jnp
rcrl
imul
in
xchg
pop
xor
or
out
lock
inc
cmp
jmp
test
mov
jg
insl
cmpsl
paddusw
or
cmpsl
sbb
xlat
sub
scas
jp
cwtl
push
popa
inc
fildl
pop
imul
adc
sahf
lods
movsb
sbb
or
int
pop
bound
repz
insb
pop
sti
in
add
stos
movsl
stos
mov
mov
scas
jbe
and
addr16
pop
cld
or
jo
dec
dec
aas
orb
shlb
adc
mov
jne
fnstenv
mov
test
adc
pushf
mov
aas
in
stos
xor
int
xchg
lods
push
fwait
rcrl
dec
xchg
cld
mov
cmp
sbb
jecxz
push
mov
ljmp
and
aaa
inc
js
mov
addr16
jle
jbe
mov
inc
outsl
mov
jns
add
mov
inc
cmp
dec
js
shlb
inc
daa
mov
lds
std
repz
pop
sarl
or
out
push
fnstsw
addr16
popf
shrl
or
in
pop
jo
jbe
add
test
fisubrs
mov
lock
andb
jb
pop
or
mov
fcomp
mov
cmp
cmp
xor
sbb
xlat
mov
test
mov
ret
pop
jno
orl
cmp
lahf
fildl
out
sbb
mov
inc
divb
lcall
and
cmpsl
cmp
mov
or
repz
xor
or
jge
adc
xchg
loopne
gs
hlt
ss
and
pop
jg
enter
push
jae
je
dec
xchg
inc
push
xor
xor
xchg
ja
sbb
lret
adc
ror
int3
leave
imul
ret
sub
jle
xchg
adc
lcall
push
shrl
cmpsl
popa
sbb
xor
mov
imulb
filds
outsl
sbb
adc
loope
or
lock
xlat
test
fsts
xchg
push
push
ss
sub
xchg
dec
lret
fnstenv
jl
cli
xchg
mov
stos
xchg
sbb
cs
inc
jb
ss
jo
mov
in
jl
jmp
sahf
push
push
popf
ret
mov
adc
push
cmpsb
pop
jae
neg
xor
xor
jle
daa
leave
or
test
inc
bound
jnp
push
jbe
inc
in
aad
xor
xlat
lods
jbe
cwtl
sbb
jne
test
clc
xchg
inc
mov
in
and
ljmp
int
es
popa
out
xor
jmp
scas
mov
cli
cmp
cli
mov
jle
test
cmp
arpl
cmp
push
insb
and
mov
std
movsb
popa
add
lods
mov
shlb
stc
es
leave
xor
dec
test
xchg
or
repnz
subb
ds
mov
test
shrl
pop
out
aam
in
cmp
push
xlat
mov
mov
pushf
pop
pop
ret
add
mov
dec
test
fldcw
cmp
pop
dec
sub
cmp
dec
or
dec
mov
lret
pop
or
mov
stos
cli
push
mov
in
fsts
fiaddl
sub
or
pop
dec
fwait
jle
mov
mov
push
inc
repz
cwtl
dec
sahf
loope
sub
inc
leave
subb
and
dec
sbb
je
mov
ljmp
xchg
adc
or
xlat
movsb
lret
and
cmp
push
lock
cmp
adc
jbe
into
mov
jmp
push
sbb
xor
into
inc
cs
mull
jne
aas
mov
cmpl
push
push
out
xorl
pop
shll
gs
push
rclb
pop
push
test
pop
ret
add
shl
jno
or
push
in
and
xchg
loop
sub
inc
or
mov
ljmp
or
rolb
xlat
push
adc
push
rorl
out
xchg
rep
repz
pop
xchg
xchg
push
and
push
sti
int3
pop
mov
and
xchg
adc
sbb
adc
or
and
cli
pop
mov
pop
cmp
xchg
lea
push
pop
mov
inc
push
jmp
mov
push
cmpsl
movsb
scas
jecxz
lcall
cmc
mov
pushf
les
push
mov
lea
into
push
cli
xorb
push
add
adc
adcb
cmpsb
push
push
in
lret
sub
pop
arpl
hlt
pop
sbb
or
jg
xchg
dec
pop
cmc
mov
jmp
pop
inc
or
fldenv
mov
add
je
cmc
xchg
pop
cwtl
cmpsb
ds
cs
imul
xchg
daa
sub
jle
mov
push
sbb
sbb
and
aad
jmp
int3
insl
aad
rclb
lcall
xor
aad
clc
xor
pop
push
mov
sbb
add
add
out
xchg
aam
xchg
icebp
sub
push
in
movsl
leave
out
add
xor
jns
test
xchg
xor
andl
dec
cmp
add
popf
rol
dec
sti
mov
scas
dec
orl
cltd
pop
sahf
xorl
push
leave
mov
out
or
enter
lods
sub
cmp
dec
xchg
xchg
sub
cmp
or
cmp
adc
rcrb
lods
rcrb
cmp
xlat
out
jb
add
fucomip
xor
leave
inc
dec
mov
sub
test
int
push
das
fisttpll
pop
repz
fwait
xchg
cmp
xor
mov
push
push
sub
int3
jne
mov
fcompl
test
mov
fistpll
lret
sub
add
inc
cmpsl
jno
cltd
sub
pop
adc
pop
cmp
movsl
jmp
fldl
popf
stc
test
sub
mov
sub
stc
lcall
loopw
cmp
mov
sub
insl
push
subl
ljmp
pop
and
in
cmp
jge
add
jle
leave
scas
je
sarl
ficoml
pop
in
pushf
out
jecxz
ljmp
neg
cmpsb
mov
add
ss
stc
push
xor
fs
fwait
push
inc
in
jg
and
mov
xor
jmp
cmp
mov
js
adc
or
mov
and
jl
aas
jne
adc
cltd
clc
inc
es
mov
xchg
pusha
fsubrl
rorl
xlat
lods
pop
lea
and
xor
adc
jp
jmp
jmp
jno
jns
xchg
popf
insl
xor
pushf
xchg
or
repz
ret
call
dec
iret
mov
xor
push
add
dec
and
test
pop
mov
dec
into
ja
push
mov
sbb
dec
stos
clc
les
xor
leave
sbb
pop
inc
xchg
jb
and
out
mov
push
sub
int3
jp
pop
push
in
rcl
loope
dec
mov
shlb
xor
test
push
or
dec
das
xlat
stos
clc
insl
and
clc
xor
aaa
pop
cmc
dec
jge
cmpb
add
mov
lds
in
cld
xchg
movsl
xor
mov
lcall
pop
jbe
xchg
push
pop
dec
or
mov
add
xor
cmp
mov
or
mov
mov
clc
mov
mov
iret
cwtl
jns
adc
lret
pusha
sub
pop
jnp
dec
pop
mov
fsubrl
xchg
mov
fildl
sbb
fidivs
jmp
je
mov
xchg
mov
mov
xlat
adc
and
sbb
add
pop
loope
mov
inc
aas
jns
cmp
inc
repnz
test
mov
sarl
add
pop
jg
mov
clc
push
xor
mov
int3
imul
rclb
imul
jb
add
int3
push
mov
arpl
pop
sahf
inc
jmp
int
cmpsl
adc
xchg
jnp
add
mov
test
lcall
fildl
jnp
and
jne
sub
aas
pop
sub
adc
rcll
in
mov
fcmovnu
jg
repnz
sbb
and
jnp
dec
fimull
pop
test
mov
cmp
dec
test
add
add
or
jecxz
imul
xchg
sti
sub
hlt
mov
fnstenv
push
cmc
rcll
movsl
add
int3
icebp
test
xor
mov
xchg
dec
push
sbb
stos
adc
sub
rcll
cmp
hlt
push
test
shll
outsb
xchg
mov
xor
jno
pop
je
in
mov
sbb
mov
dec
sbb
pop
jp
shl
loop
jmp
or
adc
int
xchg
push
mov
negl
sub
adcl
in
mov
stos
jmp
push
mov
ss
es
out
das
sbb
jb
dec
sub
cmp
push
pop
mov
test
les
lock
fwait
inc
jecxz
lret
sbb
push
pusha
adc
or
sub
pop
mov
xchg
push
cmpsb
aas
or
aaa
dec
hlt
ds
sahf
jecxz
stos
cli
fs
push
push
shrb
imul
push
movsb
cmp
movsl
test
add
aam
dec
pushf
mov
jns
mov
lret
jle
push
jge
fadd
sub
lret
movsb
or
stos
imul
lret
mov
push
adc
rcl
lods
cmpsl
and
inc
adc
sub
ds
push
sbb
dec
fnstenv
dec
add
and
add
jb
stos
cmpsb
jmp
xor
mov
push
push
test
pop
adc
sbb
sti
insl
mov
loopne
fs
cmpsl
ljmp
mov
mov
push
scas
fwait
dec
insl
cmpsl
movsb
pop
mov
xchg
cmp
adc
imul
and
mov
xorl
cmpb
xor
pop
imul
ja
xchg
pop
xor
aam
or
in
push
imul
dec
jle
or
sbb
or
sbb
xchg
xlat
sbb
pusha
add
push
sub
cmp
aad
pop
gs
das
in
shll
mov
or
je
out
adc
mov
mul
punpckhdq
imul
mov
movb
arpl
out
fdivr
mov
add
and
lds
fdivp
push
lret
pusha
lcall
pusha
or
insb
arpl
data16
pushf
sub
in
mov
jl
dec
push
mov
enter
enter
pop
mov
into
xchg
das
nop
push
adc
push
cs
sbb
sbb
sbb
stos
add
jb
stos
sti
mov
lds
addl
mov
xchg
sub
insl
loope
xchg
adc
inc
or
sbb
pop
das
mov
inc
jge
dec
fmul
mov
scas
test
js
icebp
jg
mov
mov
or
std
cmp
inc
mov
or
fadd
jnp
xor
sbb
repnz
jmp
add
jecxz
dec
push
jb
cmp
adcb
and
aas
jb
xor
mov
mov
pusha
in
int3
mov
xchg
cltd
fadd
xchg
dec
iret
lahf
xor
push
insl
sub
in
and
aaa
mov
add
repnz
jecxz
in
mov
adc
mov
mov
mov
dec
arpl
inc
imul
mov
out
lods
adc
lea
xchg
loope
xor
xlat
test
hlt
inc
or
xchg
xor
pop
popf
mov
int
in
adc
aas
and
mov
xchg
xlat
lahf
lock
cmp
int
jp
sbb
xlat
lahf
lret
cltd
movsl
popa
mov
xchg
push
push
cmp
lods
cmp
sbb
mov
mov
and
adc
sar
cmp
jns
mov
in
leave
cs
or
mov
dec
testb
jl
gs
cmpl
pop
mov
loope
push
fidivrs
cmpsb
insb
rclb
push
inc
call
mov
jno
insl
dec
inc
into
imull
sbb
mov
das
in
push
pushf
pop
popa
mov
cltd
es
jo
pop
mov
push
mov
mov
push
mov
jmp
shll
pop
jns
lods
xor
adc
add
rorb
popf
sub
les
inc
pop
mov
push
out
mov
cld
fcmovnb
inc
sahf
cmp
pop
mov
movsb
mov
mov
arpl
inc
mov
int3
cmpsl
icebp
mov
fstl
mov
cltd
inc
jns
inc
mov
outsb
bound
mov
daa
test
aad
xor
stc
lock
inc
mov
popa
push
push
or
mov
jp
jle
arpl
test
adc
mov
mov
push
cmp
lret
push
push
das
add
ja
inc
xchg
test
inc
mov
mov
cmp
cltd
nop
jl
lret
enter
fistpl
mov
add
cmp
or
stc
mov
stc
adc
or
out
jmp
mov
xlat
jl
aas
fisubrl
xchg
cli
jp
mov
mov
daa
lds
push
push
stc
loop
cmp
push
mov
pop
ja
hlt
cmp
push
fsubp
lock
mov
mov
mov
jp
mov
push
stos
mov
iret
cmp
jne
mov
xor
scas
stos
and
adc
outsl
cmp
in
push
lds
ja
mov
sbb
pop
mov
jl
in
mov
ret
sarl
xchg
mov
mov
sub
fs
xor
jl
ret
jb
jo
jnp
inc
clc
dec
or
std
add
lea
cmp
mov
rorl
push
jbe
or
idivb
or
loope
mov
mull
lock
fstps
nop
mov
test
mov
push
or
cmpsb
je
cltd
add
mov
cli
dec
inc
mov
shlb
xchg
repnz
fadds
cmp
aas
loopne
sahf
jne
cs
jns
push
inc
loope
xchg
out
cwtl
call
xor
in
pushf
std
inc
out
add
int3
test
loop
imul
mov
adc
sub
and
lods
test
dec
jb
push
add
popa
int
mov
lods
jnp
popf
test
int3
cli
cmp
pop
std
icebp
insb
fcomps
xor
mul
es
dec
xchg
mov
fs
js
dec
ffreep
xchg
jb
sbb
aad
inc
dec
adc
mov
mov
test
xor
xor
shlb
addb
cli
stc
fcmovne
inc
dec
dec
mov
aad
loopne
mov
movsb
or
sub
repz
sub
ret
fmul
les
pusha
xchg
in
clc
xchg
adc
add
lahf
xorl
dec
cmpsl
out
and
sbbl
inc
out
add
subb
and
lods
mov
das
test
inc
push
push
pop
dec
mov
cli
fwait
dec
or
repnz
dec
mov
nop
jno
loope
orb
popa
mov
xlat
mov
ret
sahf
dec
push
lods
lock
int
loop
icebp
fdivrs
sbb
loop
cmp
mov
inc
ret
dec
add
jg
fwait
xor
xchg
cld
push
insl
xchg
enter
xor
cli
mov
mov
rol
xor
fcoms
outsl
cli
sbb
pop
dec
in
stc
and
adc
adc
or
or
shlb
cld
sub
popf
aad
shl
divl
jmp
pop
add
mov
ret
movsb
dec
clc
pop
xor
nop
fistps
movb
insl
and
jmp
add
jno
cmp
mov
cmp
push
jmp
push
rcl
jbe
pop
insb
lds
pop
add
in
xor
mov
movsb
fcmovu
cmp
add
setnp
push
movsb
cmc
mov
aaa
dec
into
aad
dec
inc
mov
mov
inc
mov
mov
lcall
lea
test
lret
icebp
aaa
add
or
jge
ret
aam
rorl
aad
adc
xchg
nop
out
or
rclb
cmp
ljmp
mov
mov
fs
xchg
xchg
add
jl
scas
dec
test
sahf
int
sub
sbb
shlb
daa
inc
jl
out
push
or
mov
jmp
or
and
test
fcmovne
xlat
out
mov
fildl
add
cmp
addr16
int3
loope
loopne
ss
and
insb
adc
mov
int3
mov
add
movsb
push
sub
push
pop
jl
push
and
cli
sti
in
xlat
add
cmp
cltd
mov
fldcw
jb
aas
fidivs
jb
push
cmp
jl
inc
ja
and
movl
mov
in
iret
add
enter
popf
icebp
mov
ret
je
mov
mov
cmc
add
imul
fstpl
pop
je
add
mov
out
mov
lods
dec
pusha
sbb
add
mov
cltd
adc
ljmp
outsb
cmpsb
xchg
loop
jmp
aas
sbb
inc
xor
in
mov
push
lock
and
push
inc
mov
dec
scas
nop
sbb
stc
hlt
adc
ds
movsl
sbb
int
xor
inc
imul
lock
out
cld
dec
sbb
mov
xchg
std
push
jmp
mov
out
dec
or
xor
insl
jge
sub
pop
dec
pop
sar
cwtl
mov
mov
inc
js
pusha
mov
dec
mov
mov
lea
adc
add
and
adc
gs
dec
inc
pop
aaa
sub
pop
mov
loopne
movsb
es
fcoml
pop
nop
ljmp
imul
clc
insb
fwait
cmp
push
stc
jae
pushf
xor
xchg
mov
mov
sbb
imul
mov
lock
pop
imul
push
push
pop
pushf
scas
js
jmp
and
mov
mov
adc
xor
test
mov
xchg
push
mov
sub
dec
test
lds
scas
sub
scas
fnstsw
movsl
lods
xor
mov
jmp
dec
into
pusha
das
or
out
adc
jns
push
nop
add
sbb
cs
mov
and
mov
out
lcall
dec
aaa
daa
or
call
mov
out
jecxz
lcall
jno
imul
cwtl
sqrtps
adc
push
cmp
mov
xor
or
cmp
xchg
lea
xchg
xchg
sub
das
aas
and
popf
fbld
add
les
movsl
ror
jl
and
call
ja
dec
jge
pop
lods
out
imull
fstpl
and
mov
sbbb
sub
xor
enter
mov
adcb
pop
mov
push
cltd
je
mov
push
xor
clc
sbb
inc
loope
sbbb
cmpsl
ds
jecxz
xlat
xor
or
mov
adc
sahf
outsl
cmpsb
repz
int3
cmp
xor
ljmp
ljmp
aam
jle
mov
inc
adc
into
adc
adc
cmpsb
jle
dec
mov
mov
or
jmp
mov
jge
ret
stos
das
fbld
mov
cmp
ja
jnp
iret
repnz
notb
adc
mov
mov
mov
ss
or
je
lret
push
adc
dec
idivb
xor
dec
lods
int
jmp
add
cmp
loop
dec
dec
insb
mov
lock
std
inc
mov
call
adc
mov
ret
cmpsb
lret
test
js
sub
xor
dec
sbb
out
dec
ja
push
shll
mov
and
cmp
movsl
xchg
or
gs
xchg
push
jno
and
xchg
push
xchg
aam
xor
or
sub
rcrb
jo
adc
outsl
add
clc
or
mov
push
sbb
test
enter
cmpsb
mov
sub
dec
sbbl
stos
pop
inc
mov
outsb
roll
lcall
mov
sti
aas
mov
xchg
incl
sbb
mov
push
call
inc
daa
adc
xchg
imul
fldcw
lods
sbb
sub
push
jnp
lock
sbb
test
or
mov
sahf
and
mov
and
neg
leave
mov
xchg
mov
aam
xchg
adc
test
or
push
pop
jnp
scas
fldl
shl
mov
ljmp
jg
mov
push
or
les
mov
loopne
fidivl
lds
push
popa
roll
xchg
mov
inc
ret
inc
add
lret
lds
flds
movsl
sti
std
test
mov
fcmove
or
mov
lea
mov
into
sub
gs
outsl
cs
xor
sahf
sbb
rcl
push
int
dec
push
mov
pushf
cs
pop
pop
insl
mov
fsub
outsb
outsb
rcrb
lods
lahf
aaa
fbld
push
cmc
sbb
pop
adc
cltd
push
imul
lea
inc
adc
cmp
mov
imul
xchg
add
stc
insb
std
mov
jp
or
mov
lods
fsubl
or
inc
idivb
repnz
mov
push
mov
andb
leave
inc
sub
push
cmp
leave
mov
push
imul
lcall
cmp
mov
mov
jg
sbb
sub
ljmp
push
mov
mov
sahf
sub
out
cld
aam
arpl
and
inc
xor
movsl
daa
cmpsl
add
les
or
fistl
fadd
and
sbb
into
std
add
inc
mov
push
out
stos
outsl
pop
xchg
mov
ud1
insb
scas
push
jge
add
fbld
in
stos
std
mov
xor
jne
inc
stos
sub
mov
lret
jo
test
xor
jnp
fmull
scas
mov
sbb
ljmp
cmp
adc
lock
mov
push
and
pop
shlb
test
shrb
push
or
fisubl
dec
pop
xchg
popa
push
adc
xchg
ror
push
mov
outsb
in
inc
sbb
sbb
add
push
inc
adc
cltd
mov
jbe
imul
mov
adc
adc
idivl
mov
mov
adc
or
mov
mov
ss
jmp
insl
movswl
mov
sub
fwait
addr16
mov
xchg
sbb
inc
movsb
orl
outsb
shll
xorb
add
sbb
pop
in
bound
pop
lcall
pusha
into
inc
cmc
les
push
mov
and
xor
xchg
jno
ror
cld
fiaddl
ficomps
cmp
repnz
lods
sub
ljmp
cmp
cmp
pusha
sahf
mov
clc
pushf
rcr
cmp
fiaddl
mov
fsubrs
lahf
xchg
sbb
pop
adc
ss
cs
mov
orb
jge
jnp
inc
xchg
pop
pop
shl
pop
pop
subl
cmpb
sbb
enter
int3
dec
mov
lret
pop
aaa
mov
xchg
scas
out
xor
push
lods
shlb
push
pop
dec
dec
sbb
cli
inc
sti
xchg
pop
je
mov
inc
mov
out
sub
stos
sbb
lahf
mov
jbe
sub
cmp
in
aad
xchg
xchg
fadds
and
cmp
or
inc
lock
xor
push
addb
ret
adc
xchg
sahf
rcll
mov
fsubrs
test
in
mov
jb
mov
aad
pushf
addb
nop
and
rolb
test
or
ret
mov
popf
mov
inc
xchg
xor
cwtl
xchg
insb
setnp
shll
sbb
lcall
mov
stc
xchg
or
rorb
stc
push
dec
popf
jb
std
ja
adc
mov
push
mov
push
mull
pop
lods
adc
sbb
adc
loopne
outsb
jb
pushf
xchg
leave
adc
mov
stos
add
or
and
xchg
rclb
cwtl
sbb
lods
adc
pop
xor
jns
mov
lahf
sarl
push
loop
cmp
fimull
sarb
stos
xor
test
pushl
insb
push
aam
das
movsb
ret
and
mov
gs
mov
mov
lret
adcl
xor
inc
enter
jg
sub
stc
fs
xorl
addr16
mov
mov
sarl
pop
adc
push
mov
xchg
pop
jo
or
jmp
xchg
sub
int3
push
xlat
pop
icebp
pop
add
mov
insb
dec
int
add
inc
rol
mov
fisttpl
push
and
mov
push
insl
lods
pusha
xlat
sarb
repnz
fdivl
jbe
call
cvtpi2ps
lret
pop
dec
adc
mov
lret
std
sbb
jge
add
cmp
jmp
xchg
mov
or
mov
adcl
jae
inc
ror
rcr
mov
outsl
or
xchg
rcrw
js
inc
xchg
test
mov
jecxz
mov
icebp
sub
out
mov
jne
shll
or
loope
imull
mov
xchg
or
sti
push
icebp
cmp
pusha
xchg
push
and
int3
inc
dec
jmp
orl
into
orb
shlb
mov
or
jle
fnstsw
pusha
int
sub
mov
inc
inc
gs
cltd
mov
and
xchg
leave
in
scas
xchg
mov
inc
dec
mov
cmc
sbb
inc
and
aaa
adcl
test
fwait
mov
fcoms
mov
mov
lods
imul
mov
and
daa
jg
cmp
dec
inc
mov
mov
or
ja
mov
pop
insl
mov
mov
pop
inc
and
xor
andb
xor
loopne
fucomp
sbb
leave
pushf
stos
xchg
lret
lea
inc
int3
test
mov
push
stos
loope
test
scas
test
mov
xor
popf
inc
data16
push
sbb
scas
adc
jg
cltd
rol
mov
push
mov
dec
out
sub
push
inc
movsb
jmp
dec
data16
sbb
pop
out
loop
dec
shll
cltd
xchg
dec
and
cwtl
jbe
or
xor
add
push
leave
test
rcrl
into
ret
movsl
xchg
mov
sbb
in
xchg
lahf
sub
scas
test
les
xor
mov
mov
cwtl
mov
jns
rcl
scas
fsubr
mov
pop
imul
jb
lcall
repz
out
cmp
inc
sub
jbe
daa
jns
cmc
popl
push
pop
and
jns
divb
inc
pop
pop
cmovl
ret
lea
in
inc
jg
test
incl
push
adc
test
test
sub
icebp
jecxz
enter
popf
fs
lret
rclb
mov
mov
adc
and
aad
pop
inc
ja
adc
jne
movsl
mov
pop
leave
ljmp
mov
xchg
pushf
imul
mov
xlat
repnz
cmpsb
lret
in
les
push
jmp
jbe
mov
daa
jl
or
ret
outsb
add
dec
jmp
loope
pop
stos
mov
mov
stc
cmc
aam
sub
jne
mov
add
int3
xor
into
in
fsubl
xor
andb
fcoms
and
dec
dec
cltd
push
movsb
popf
arpl
mov
xchg
sub
pushf
and
insb
xlat
insb
into
add
andb
xor
xchg
or
jmp
fldl2t
push
les
jnp
scas
insl
in
or
mov
fldcw
pop
or
lods
nop
push
pop
pop
or
fwait
dec
std
sub
push
ds
mov
iret
cmp
mov
mov
ja
mov
push
loop
mov
cmp
stc
popf
push
test
in
dec
stos
fmull
je
je
sub
clc
xchg
adc
cltd
adc
roll
lods
sub
lea
imul
andl
pop
mov
movsb
fwait
sub
xchg
inc
sbb
in
cmp
jns
jle
shl
pop
repz
icebp
or
push
out
pop
ja
cltd
imul
adc
sub
inc
push
aad
adc
jmp
in
add
mov
lret
test
mov
fcomi
adc
push
rcll
add
pop
je
fcmovb
mov
jmp
inc
jecxz
adcb
lret
call
loope
pop
xchg
or
adc
das
cmp
fistl
jnp
push
je
andl
jno
loopne
adc
insl
lahf
add
inc
mov
das
push
xor
xchg
mov
mov
idivb
stos
sbb
xchg
movsb
fdivp
das
and
decl
out
fimull
je
jae
pusha
loopne
and
imul
push
pop
mov
sbb
mov
ja
ficoms
sbb
aaa
sahf
scas
add
std
mov
and
aam
xor
mov
sarb
xlat
ja
imul
cs
ficompl
mov
mov
cld
lods
push
clc
loope
pop
clc
test
xchg
inc
adc
push
int3
test
icebp
lret
sub
dec
addl
xor
xchg
push
mov
movsb
int
cs
mov
mov
aaa
fimull
adc
sti
lahf
push
ret
ret
push
mov
ss
adc
cmc
gs
cmp
aad
loopne
faddl
sti
gs
lock
loopne
jle
fidivs
mov
arpl
jmp
push
pop
xchg
pop
data16
cs
cmp
ja
shrb
lea
movsb
pop
fnstsw
xchg
adc
mov
and
push
inc
cmpl
cltd
loope
lahf
pop
push
stc
movsb
adc
inc
fwait
popf
mov
mov
dec
je
jo
jns
add
inc
test
or
leave
push
shll
fisubrl
push
or
dec
mov
sbb
les
sub
adc
dec
lret
mov
mov
loop
ljmp
cwtl
out
gs
mov
fistl
ss
sbb
ja
aam
or
addr16
fnstenv
pushf
sbb
cmp
pusha
mov
test
pusha
outsl
pop
add
cmp
sub
push
xor
pushf
mov
shrd
cli
lods
push
xor
sub
hlt
les
sub
or
scas
jne
lcall
pop
movsb
xor
fistps
dec
pop
outsb
mov
rcrl
jo
mov
mov
cld
sbb
push
sbb
adc
aas
int3
ret
dec
xchg
xor
popf
sbbb
in
cli
orl
add
jecxz
mov
sbb
arpl
sahf
ret
mov
fcmovne
sar
push
add
movsl
int
adc
sub
loope,pn
pop
push
loop
mov
ret
cltd
repz
int3
arpl
pop
sbb
push
dec
int3
add
mov
lods
xor
dec
and
in
mov
xchg
cmpsb
bnd
inc
pop
lret
sbb
imul
popa
lds
dec
divb
lock
or
dec
push
mov
dec
jnp
and
and
das
jne
cli
dec
push
dec
push
pop
xchg
int
xchg
push
xor
int3
add
mov
imul
call
push
mov
mov
xchg
clc
sbb
fdivl
sbb
shrl
jne
leave
ds
data16
imul
incb
jo
xor
inc
addr16
nop
sbb
mov
cs
lock
fildl
pop
pop
jo
test
cld
sti
clc
dec
mov
jbe
and
test
push
scas
lock
and
lds
or
xchg
cltd
xor
mov
add
xchg
adc
sub
jg
test
adc
rorl
inc
clc
pop
jne
mov
jle
or
pop
sub
fildll
cmp
add
adc
call
cmpsl
in
pop
jl
arpl
insb
or
xchg
aaa
idivb
add
aaa
sub
and
decb
mov
daa
adc
stos
push
jmp
loopne
sub
or
loope
mov
je
inc
add
inc
add
jle
adc
cmp
imul
adc
or
fisubrs
stos
loop
mov
fwait
adc
mov
push
popf
cmpsl
rorb
movsb
lds
pop
pop
pop
push
lock
leave
popa
stc
arpl
cs
mov
shrb
mov
call
iret
fwait
addr16
enter
pushf
fstp
push
arpl
push
cmp
and
push
add
clc
insb
notb
or
lods
and
int
or
push
ret
jl
xor
mov
add
iret
fdivr
stos
sbb
dec
iret
jbe
pusha
cli
adc
mov
mov
sarb
stc
aad
sbb
cmp
mov
in
pop
push
test
mov
popa
cld
ss
std
test
stos
mov
cmpsb
jne
mov
arpl
call
lea
pop
pop
add
fimull
shrl
loopne
loop
xchg
cmp
mov
or
pop
fidivrs
dec
jbe
mov
mov
cmpsb
jbe
dec
mov
lds
rcll
sbb
add
cmp
jns
mov
adcl
in
daa
insb
lock
and
mov
mov
andl
mov
scas
shrb
jno
cmp
or
mov
dec
loop
xor
pop
mov
fcomps
jg
push
mov
or
ja
ljmp
popa
xor
push
sti
sbb
mov
mulb
fdivrs
adc
iret
adc
lcall
jne
dec
sub
rolb
pop
inc
mov
jle
jmp
orb
xchg
jo
add
fnstenv
addr16
ret
outsb
mov
inc
sahf
stos
sbb
xchg
ljmp
mov
dec
xor
pop
xchg
ret
jbe
mov
test
mov
push
int
jb
call
add
inc
ljmp
in
sbb
push
or
push
jle
cmp
iret
aam
or
mov
into
cwtl
nop
cmp
add
mov
cwtl
test
fcmovu
xor
fdivrl
dec
adc
jb
sti
iret
jl
enter
push
out
xchg
and
inc
sub
int3
sbb
cmp
mov
lods
cli
sub
out
sub
jecxz
ljmp
or
push
jp
loop
lcall
mov
jecxz
mov
push
or
fwait
into
inc
mov
stos
enter
ss
sbb
mov
loope
into
mov
jecxz
cmp
roll
mov
cmp
imul
xor
inc
or
enter
ret
scas
mov
pushf
cmp
scas
mov
mov
outsb
sbb
or
popf
mov
and
pop
aaa
test
sbb
mov
enter
add
sub
inc
dec
xlat
ficompl
pop
cmp
adc
jno
fcomps
pop
lret
mov
mov
sbbl
mov
dec
rcrl
and
sub
outsb
xchg
jge
push
repz
imul
adc
dec
cmp
rcr
fmuls
xchg
jns
xor
je
or
dec
pop
inc
sub
dec
dec
lods
dec
jb
push
jae
imul
call
js
dec
adc
in
adc
gs
push
in
mov
lcall
and
adc
push
fmulp
xchg
in
push
ja
or
adc
outsl
stc
insb
or
sub
ss
out
neg
aaa
bound
rcll
jecxz
sub
mov
aaa
rcl
pushf
shl
and
nop
push
xorb
dec
pushf
dec
in
hlt
out
cmpsl
dec
js
ret
lcall
mov
xor
lcall
lcall
das
in
or
and
dec
dec
xor
adc
pop
movsb
push
cmp
sahf
dec
ficompl
jmp
pusha
push
sbb
lea
in
test
fdiv
add
and
add
ret
dec
cmpsl
xor
mov
sub
mov
push
stos
xor
bound
xchg
mov
pop
mov
jmp
add
jle
push
jae
mov
rclb
push
cmp
adc
std
push
push
sbb
dec
add
pop
cmp
aad
sbb
or
cli
add
enter
icebp
add
fwait
mov
jnp
in
ljmp
xlat
xchg
sahf
adc
sub
inc
test
cwtl
mov
loope
imul
add
mov
or
test
stos
pop
js
mov
popa
xchg
subb
or
sbb
xchg
inc
pop
hlt
dec
outsl
stos
jmp
pop
cmpsb
iret
sub
cmp
fdivrl
dec
insb
and
movsl
pop
mov
pop
pop
xor
or
ret
nop
not
outsl
mull
mov
popa
push
arpl
mov
cmpl
aad
cmpsb
push
xchg
xlat
push
enter
lcall
outsl
out
test
lret
pop
out
je
xor
add
push
cmpsb
or
dec
mov
out
mov
xor
xchg
pop
cmp
add
sub
inc
loopne
dec
loop
pop
pop
les
int
test
into
push
cmc
fisttps
lds
fisttps
cmp
rcrl
adc
add
jmp
cmp
cmp
je
mov
insb
xchg
xchg
push
push
shrb
sbb
outsl
sbb
sub
pop
xor
jecxz
dec
add
push
in
xcrypt-cfb
cmpsl
out
push
sub
jns
ljmp
pop
xlat
jb
mov
orb
mov
jp
xlat
icebp
repnz
xor
dec
jge
loopne
fistpll
out
sub
loope
lock
loop
jp
fbstp
hlt
sbb
mov
clc
int
or
pop
fbld
sub
adc
stos
movsb
mov
dec
int3
adc
rcr
outsl
cmp
lahf
data16
xor
lcall
mov
lcall
xorl
daa
les
ss
ret
adc
push
pop
mov
loopne
mov
mov
decl
cmc
call
sbb
repz
jl
addr16
mov
int
shlb
mov
cltd
iret
aam
subl
ds
es
inc
push
sti
outsb
ja
sub
les
mov
jg
xor
dec
xchg
out
add
nop
xor
adc
sarl
push
aas
sbb
push
jmp
aad
int3
add
mov
icebp
pop
pop
mov
push
cwtl
loope
inc
lret
adc
imul
push
cmpsb
mov
loope
gs
pop
cmp
xchg
loopne
out
inc
movsl
xor
cmpsb
js
and
je
pop
sbbl
sub
scas
mov
aam
sahf
cld
cmpsl
movsb
int3
movsl
xchg
sub
out
scas
cmp
dec
aam
cmp
mov
jmp
daa
sub
or
push
xchg
mov
jle
in
xchg
testl
into
int3
mov
outsb
mov
sbb
or
call
add
int
xchg
mov
aam
lahf
in
je
mov
addr16
mov
adc
xor
cs
je
push
xchg
rcrl
pop
lods
xchg
test
in
psubq
sbb
scas
mov
sbbb
mov
jge
divl
or
ss
jmp
aaa
shrb
cmp
push
cltd
inc
jno
test
dec
mov
scas
jb
mov
das
or
test
popf
adc
mov
data16
dec
jge
adc
cmc
fwait
ss
adc
lcall
andb
mov
mov
rcrb
cmc
outsl
pmaddwd
adc
cmpsl
ss
ficompl
popa
repz
enter
loop
mov
ret
mov
push
sarl
mov
adc
imul
ljmp
and
ficomps
or
iret
adc
outsl
add
pushf
stc
xor
mov
pop
icebp
fisubrs
enter
rcrb
pop
pop
push
sbb
lahf
ss
in
xchg
or
jle
xor
daa
mov
add
addr16
pusha
insb
call
and
mov
and
inc
mov
cmp
or
xchg
xchg
jmp
test
clc
xor
inc
mov
ret
scas
mov
jl
jne
push
xchg
push
faddl
dec
mov
sub
jbe
push
jg
push
xchg
cmp
sub
xor
adc
jge
orl
pop
sbb
sub
loope
movsl
and
jnp
out
add
push
out
pop
dec
jae
push
sub
xor
call
adc
in
mov
or
jge
mov
and
test
inc
push
mov
dec
sahf
push
add
or
mov
push
add
inc
pop
pop
repz
jge
jbe
push
lcall
mov
and
xchg
dec
xor
std
lea
sbb
mov
aam
jmp
add
cmp
inc
cmpsb
jnp
rcll
es
hlt
jl
imul
ja
rol
or
push
inc
cltd
mov
add
sarl
push
sbb
stos
std
jmp
adc
xor
test
xchg
mov
inc
pop
jp
xchg
mov
loop
jbe
lret
mov
or
xchg
pop
inc
bnd
push
imulb
pop
dec
scas
sbb
cmp
lea
outsb
jg
xchg
xchg
out
push
xchg
adcb
mov
rcrl
dec
sbb
dec
cltd
fadd
pminub
in
decl
pusha
xor
das
inc
and
ss
mov
out
mov
dec
or
insb
mov
hlt
push
sti
ljmp
dec
dec
icebp
fistps
push
pop
jns
das
lea
xor
inc
int3
aas
jge,pn
ss
mov
ljmp
inc
or
jne
in
leave
cmp
jb
push
cld
jbe
xchg
lcall
fcmovnb
ss
cwtl
mov
inc
popf
jecxz
je
push
aas
test
xor
mov
rcll
repnz
or
adc
adc
scas
fsts
sub
or
sub
lods
rclb
mov
or
push
lods
mov
sbb
sub
pop
fwait
pop
sti
cmp
enter
lods
or
xchg
inc
int3
sub
xor
mov
jnp
inc
lahf
pop
add
mov
sub
int
mov
mov
sbb
add
adc
shrb
jle
scas
mov
cli
jnp
mov
popf
imul
std
jb
jl
mov
push
bound
das
or
jne
insl
and
cld
xor
ja
fmulp
addr16
and
in
movsb
xchg
and
lret
js
fsubrp
inc
repz
pop
sub
cmp
pop
daa
lea
jne
std
pop
push
ds
in
push
rcrb
jg
jmp
jl
stos
sbb
scas
inc
ljmp
or
int
fidivs
mov
popa
mov
cli
fiadds
mov
xchg
rcrb
pop
push
jle
jnp
arpl
cmp
xor
jmp
ret
pop
xchg
mov
ret
jno
mov
arpl
sub
jle
inc
sbb
cmp
sbb
cmp
out
in
loopne
bound
push
mov
pushw
ljmp
add
in
sahf
xchg
pushf
sbb
sub
sub
jle
or
rolb
gs
adc
jnp
mov
add
jge
add
jmp
sahf
inc
mov
cmp
add
je
pop
xor
lods
pop
xor
in
mov
sub
call
cmc
imul
inc
mov
dec
push
addl
mov
ja
jbe
out
pop
push
cli
test
dec
js
ret
mov
test
sbb
jle
push
clc
fldt
mov
aaa
xchg
jge
ja
xchg
test
or
shll
enter
sbb
fucomip
mov
in
pop
push
sbb
fldt
test
dec
cmpsl
mov
sub
add
loopne
daa
mov
and
sbb
sub
pop
dec
mov
dec
test
cmp
sub
in
jno
adc
ljmp
and
mov
iret
pop
icebp
mov
lods
and
add
mov
cld
mov
movsl
aaa
pop
pop
mov
adc
xor
jb
dec
call
hlt
mov
adc
mov
cmc
sub
bound
icebp
sbb
rcll
jge
ja
mov
lret
loop
adc
sub
push
call
enter
out
lahf
sub
stos
repz
rorl
dec
sti
das
insl
bound
shrb
inc
cli
fcompl
inc
xchg
scas
stos
stc
jb
cmc
repnz
ret
mov
mov
aad
test
dec
pop
sbbb
ret
jnp
cmp
cmp
jge
pop
push
test
pushf
lds
repnz
inc
xchg
mov
and
and
out
leave
pop
lods
and
movsl
hlt
xchg
xchg
xchg
out
jns
insb
dec
es
xor
call
arpl
stos
insb
das
cmpsl
icebp
cmpb
outsl
gs
clc
cli
cld
out
adc
sub
cmpl
icebp
sbb
pop
mov
shr
cmp
sbb
mov
out
scas
xor
push
adc
xchg
sub
daa
aad
clc
rcr
xor
aaa
aam
add
ja
cld
dec
inc
add
call
push
sub
aam
dec
add
sahf
and
dec
mov
iret
aas
enter
repnz
xchg
test
lds
mov
push
pop
adc
dec
testl
mov
iret
std
mov
add
jbe
test
hlt
mul
es
fsubs
out
or
sub
subl
xor
pcmpeqw
cmp
std
in
cmp
pushf
mov
nop
mov
repz
xchg
push
mov
and
add
lods
or
pop
cmp
leave
in
adc
in
ficomps
aam
aad
and
das
adc
cwtl
jb
sbb
vaddps
pushf
add
mov
xor
sub
xor
or
lcall
add
daa
jae
aaa
dec
pusha
sbb
xchg
add
jge
rcrl
or
xor
sub
and
mov
rorb
xor
into
das
aam
xchg
mov
fimull
test
mov
aas
pop
xor
inc
aad
push
sbb
imul
fldt
pusha
shll
xorb
addr16
lods
mov
iret
lcall
les
mov
sbb
adc
aas
dec
scas
iret
icebp
fildl
out
add
xor
sbb
add
mov
sub
lret
jo
rorb
mov
or
out
cmp
mov
inc
xchg
mov
fnstenv
in
adcb
cwtl
sub
inc
sub
pop
nop
popf
loope,pn
popf
test
cli
jae
and
adc
ret
or
inc
fcmovb
lock
out
xchg
fwait
dec
push
stc
je
pop
rorl
and
sbb
fistl
je
cmp
mov
mov
imul
sub
push
xchg
xchg
inc
and
fwait
jmp
scas
push
push
icebp
fldcw
in
jecxz
sbbl
push
xor
ljmp
sub
out
pop
call
mov
shl
out
adc
jp
jecxz
out
lcall
or
icebp
fxtract
jg
xchg
mov
fs
xchg
push
bound
xchg
scas
xchg
dec
push
addr16
sub
int
sub
fsts
loopne
mov
loop
sbb
or
mov
dec
pusha
daa
aaa
in
add
bound
subb
dec
mov
mov
jge
imul
lods
into
sbb
inc
sti
mov
out
je
dec
ret
fabs
repnz
mov
add
ficompl
xchg
enter
add
and
jmp
not
xor
mov
dec
sub
es
lods
aaa
data16
ja
push
and
punpckhbw
aad
jnp
adc
cld
adc
fldcw
iret
ja
jmp
jbe
pop
push
xchg
leave
stos
stos
outsb
xchg
adc
add
mov
push
or
pushf
and
je
into
pusha
adc
cld
lds
adc
shlb
sbb
fldenv
jno
and
jl
sbb
subl
jl
bound
adc
ret
and
ds
add
cltd
shrl
pop
push
xchg
or
cld
icebp
hlt
jns
mov
aad
add
jb
push
fdivs
enter
or
out
sbb
push
sti
lcall
mov
inc
rcl
cmc
lea
jbe
decl
icebp
inc
inc
add
lcall
cmp
xchg
push
lds
mov
or
bnd
xchg
cmp
xor
dec
dec
es
pop
sub
sbb
movsl
jb
adc
in
cmc
inc
cmp
std
out
mov
pop
outsb
sub
mov
orb
out
sbb
fistpll
int3
jle
cmp
iret
pop
sub
sub
rolb
cmpsb
dec
mov
inc
es
jb
sub
mov
rcr
mov
adc
insb
insb
inc
mov
dec
inc
jp
mov
xlat
outsl
xchg
sub
sub
push
adc
int3
and
xor
push
nop
sti
into
dec
xor
daa
test
insl
add
and
je
negb
pop
inc
and
shrl
xchg
xchg
std
fcmovnu
pop
ja
inc
out
cmp
mov
mov
dec
xchg
lahf
lods
cmp
cmp
es
aad
addr16
ficompl
sbb
imul
popa
bound
dec
sbb
push
xlat
xchg
jmp
jecxz
push
dec
xchg
shrl
add
and
dec
repz
mov
pop
mov
cli
cmp
sbb
jp
xchg
xchg
clc
scas
ljmp
jo
sti
movsb
pop
and
stos
loope
sbbl
xchg
insb
stos
jge
dec
in
loope
rorb
setp
jns
pop
aas
mov
sbb
cmpsl
inc
add
push
movsl
call
add
cmp
out
cwtl
mov
sti
xchg
xor
mov
push
iret
mov
stos
mov
cltd
and
inc
mov
or
fcoms
cli
pusha
pushf
mov
lds
pop
cwtl
push
and
push
popf
or
and
jecxz
out
sahf
loope
ds
and
outsl
mov
fmuls
dec
mov
mov
pop
mov
addr16
mov
and
test
arpl
push
lods
dec
movsb
mov
xor
in
xor
push
lcall
fistl
int3
mov
mov
stos
imul
mov
or
push
movsl
jle
adc
push
xchg
bnd
adc
mov
popf
pop
mov
lret
push
in
fs
addr16
rcrb
fstl
push
jne
xor
popf
sub
jnp
push
xchg
or
ja
dec
aaa
jge
pop
pop
pop
jae
addb
add
add
inc
fsubrs
stos
in
in
sbb
xor
xlat
or
mov
flds
int
add
cmp
add
pop
push
lret
rcrb
dec
subb
adc
bound
test
mov
call
xor
fwait
pop
add
xrelease
mov
mov
movlps
pop
pusha
adcb
test
lods
inc
adc
arpl
enter
push
xchg
mov
addb
mov
out
ret
repz
jge
xchg
pop
cmpsb
dec
adc
outsb
jge
and
push
incb
pop
ss
adc
or
adc
out
ficoms
cmp
ds
cltd
mov
jge
mov
mov
and
or
jmp
jle
mov
jg
scas
insb
sub
push
push
in
xor
mov
xlat
xchg
sar
mov
push
add
bound
sbb
js
test
inc
xchg
jno
jmp
lret
push
sbb
stos
mov
outsl
xor
cmp
xor
mov
pop
das
in
xchg
mov
aam
out
add
hlt
sub
sahf
not
xor
ret
add
ss
inc
inc
lds
js
arpl
adc
mov
lret
aad
mov
or
jmp
mov
icebp
aas
sub
scas
std
mov
cmp
sub
fisubl
dec
imul
mov
xor
pop
jecxz
dec
inc
lahf
pushf
insb
jo
push
lods
mov
or
adc
repz
fstps
sub
mov
inc
in
loopne
mov
push
add
adc
aaa
les
mov
push
or
aaa
jp
pushf
in
sahf
pop
jno
sub
aaa
push
mov
lcall
push
xchg
xchg
and
dec
push
js
xchg
shr
push
nop
pop
mov
loope
lret
mov
adc
pop
dec
mov
addr16
ret
mov
sub
cmp
push
out
mov
ljmp
insb
sub
test
data16
lret
sbb
test
adc
insl
pop
out
sub
adc
adc
add
ja
xchg
add
decb
iret
mov
mov
dec
inc
and
pushw
stos
gs
xor
xchg
push
inc
mov
sar
xor
cmp
inc
sub
cmp
lret
outsl
xor
pushf
test
mov
mov
fdivr
or
adc
mov
dec
dec
jmp
test
lock
cmpsb
stos
xor
jle
out
hlt
sbbb
and
loop
jno
ret
add
adc
add
cltd
jge
add
ret
sub
and
dec
mov
adc
data16
rol
lcall
imul
clc
jbe
dec
ja
imul
ds
cmpsl
sahf
setno
adc
xchg
xchg
inc
cmp
je
cmc
test
inc
loop
rorl
xchg
aaa
aas
push
pop
pop
pop
mov
adc
jg
dec
mov
add
repz
adcl
xchg
pop
rcrb
je
cmp
in
xor
sub
mov
scas
mov
in
push
or
jae
xchg
daa
fisubl
push
repnz
out
fldl
cmc
arpl
and
clc
js
xchg
movaps
push
cltd
imul
call
es
sub
jnp
mov
out
aad
je
out
sbb
inc
and
cmp
inc
add
mov
push
dec
xchg
rcr
add
pop
add
mov
iret
fnstenv
cli
sahf
scas
cmp
inc
enter
jle
mov
dec
pushl
xchg
in
fsubp
addr16
sub
stos
mov
inc
adc
push
fldenv
jge
bound
stc
das
fsubrs
mov
and
lea
ja
inc
cli
xchg
xchg
sti
lret
call
or
in
ret
out
out
cs
inc
xchg
loop
lods
jo
mov
jne
gs
push
addr16
sub
inc
mov
mov
imul
sahf
sbb
pop
repnz
arpl
out
xor
xor
xchg
mov
jl
js
or
mov
test
pusha
pop
xchg
mov
sbb
idiv
add
fucomi
dec
cmp
and
adc
cmp
xchg
inc
push
pop
repz
inc
xchg
push
das
cmp
loope
pop
test
addr16
xchg
pop
dec
jbe
sbbl
dec
icebp
push
movsl
sbb
and
lcall
imull
inc
add
das
data16
call
popa
scas
in
lods
jle
cmp
or
incb
ja
in
inc
rcll
bound
outsb
dec
and
dec
adc
cmpl
mov
lret
cmp
call
jp
or
push
out
jno
dec
jae
xor
mov
push
sbb
xor
pop
jnp
xchg
sbb
ja
in
cmc
inc
jmp
int
mov
ret
das
scas
and
test
stos
fcompl
mov
loop
mov
inc
mov
mov
adc
jle
jb
movsb
sbb
mov
dec
adc
insl
mov
push
pop
adcb
dec
je
jl
add
pop
leave
lods
and
jl
imul
shll
cs
mov
mov
dec
mov
push
lret
mov
or
gs
jnp
fxtract
into
pop
pop
mov
loope
inc
sahf
or
lods
cmpsl
sub
cli
add
roll
cmpsl
mov
mov
fbstp
cmp
frstor
jp
add
jg
mov
dec
add
pusha
daa
pop
xchg
xor
je
jle
cmc
notl
stos
sub
cwtl
jmp
shr
repnz
jb
cs
push
ror
out
stc
in
cmc
and
fisubrl
add
sub
dec
int3
push
movsb
in
mov
and
test
repnz
or
nop
xor
bound
add
pop
xchg
cmpsl
mov
push
mulps
push
xchg
fstps
mov
je
jae
cltd
cmp
dec
fisttpl
addl
pop
jbe
popa
xchg
sbb
scas
add
loop
xor
cs
push
cmpsl
mov
adc
pop
aas
cmp
add
fsts
and
fwait
in
jmp
sarl
mov
mov
lret
int3
jle
xchg
sbb
xchg
sarl
cmp
test
jb
sub
sbbl
adc
and
ret
jmp
mov
inc
and
call
inc
and
fistps
add
xchg
pop
cmp
jmp
mov
fcompl
jne
and
inc
xchg
ret
dec
mov
adcl
cmpl
dec
movsl
dec
out
mov
loopne
xor
stos
icebp
das
jns
cmpsb
dec
and
add
jns
mov
mov
or
mov
in
out
shrb
xchg
addr16
jmp
adc
push
inc
or
sbb
roll
dec
inc
cmp
in
rcrb
dec
call
dec
and
int3
int3
jb
lods
and
and
lods
jo
test
iret
cmp
test
push
lcall
cmp
xlat
lds
mov
mov
xchg
push
fidivrs
cli
loop
gs
movsb
das
push
cmc
cmpl
es
loop
add
pop
outsb
aaa
mov
lods
xchg
test
sub
mov
popa
call
xchg
dec
add
adc
inc
mov
pop
mov
cld
pop
in
inc
imul
iret
mov
or
jle
iret
sbb
into
xor
out
sub
push
mov
leave
xchg
xor
or
test
idiv
dec
addr16
pop
loopne
aad
pop
shl
loop
sbb
enter
dec
iret
scas
aam
jle
dec
cmp
pop
xchg
cwtl
inc
jg
cmp
bound
or
pop
mov
movsl
stc
xchg
cmp
jmp
xor
mov
mov
repnz
lds
dec
lret
push
sbbl
int3
icebp
jae
movsb
in
mov
mov
cmpsl
jecxz
or
cmp
add
sub
sub
pusha
inc
data16
data16
jmp
mov
dec
pop
les
popa
lock
inc
xlat
add
sahf
xor
imul
push
mov
lcall
loop
jg
or
dec
jbe
nop
cltd
sbb
imul
cmpsb
dec
fwait
xlat
fs
pop
mov
jge
jno
inc
lock
push
psraw
and
push
push
test
mov
mov
sbb
dec
xlat
fisubs
mov
xchg
push
mov
inc
mov
in
sub
adc
cmpsb
sahf
xchg
roll
adc
pop
cmc
movsl
and
mov
sub
xchg
mov
xor
nop
out
inc
dec
stos
fistl
jecxz
push
push
cmp
inc
rorb
jle
loop
mov
jmp
sub
sbb
scas
pop
and
mov
pushf
dec
clc
cmpsl
std
pop
sub
cmpsb
push
test
dec
stc
cmp
jle
jo
scas
xor
push
dec
ret
inc
pop
dec
enter
xchg
rcrb
inc
imul
lds
lahf
or
jge
stos
add
jg
test
es
cmc
jne
dec
fwait
sbb
cwtl
sti
rcrb
ds
xchg
ljmp
mov
xchg
test
lds
pop
inc
and
rcr
mov
add
mov
cmp
cmp
or
lret
ja
ss
test
imul
jmp
inc
push
std
and
sbb
in
jl
mov
xchg
lret
pop
iret
and
mov
jne
sbb
fnstsw
push
inc
jg
dec
xor
or
push
imul
rolb
mov
jecxz
mov
dec
cld
xor
pop
sbb
sbb
rorl
sbb
adc
sub
mov
xorl
jno
push
xchg
push
push
out
push
inc
jno
mov
test
repz
lods
mov
popf
popa
cltd
ret
inc
std
pop
push
bound
les
jg
add
add
xor
jo
loope
jle
and
orl
cmp
popf
add
mov
sub
cli
mov
mov
or
popf
aam
sub
mov
outsl
std
adc
mov
movsl
fmuls
mov
mov
fstpt
outsl
xchg
imul
rcl
icebp
sub
lods
jmp
and
mov
add
add
sbb
sub
sub
loope
dec
mov
jle
pop
ds
lds
push
test
sbb
rolb
mov
pop
repnz
push
clc
xchg
sub
stos
das
push
popf
fsubrs
cmp
cmp
mov
xchg
fld
lods
mov
insl
dec
and
pop
psrlq
jg
ret
jmp
sbb
scas
dec
sub
push
lcall
adc
sbb
gs
scas
xor
out
push
xorl
push
add
fmull
dec
jbe
xchg
inc
or
pop
movsl
aas
jo
rcrl
cmpsb
arpl
rcrb
or
xchg
out
test
pop
shrb
adc
movl
stos
aad
int
sbb
mov
js
mov
add
xor
ss
sahf
add
jae
test
fcoms
sub
repnz
xor
mov
xlat
stos
pop
pop
pop
sbb
lds
push
subb
cmp
jns
jecxz
sub
popa
cmp
imul
sbb
jno
lret
sub
xchg
adc
je
mov
test
xchg
jge
sahf
sbb
cmpsl
fisttpll
stc
xchg
fdivr
sbb
push
sub
mov
and
imul
push
cmpsb
lea
jl
out
stos
test
mov
mov
jmp
sti
stos
jp
js
daa
leave
fwait
pop
ret
sbb
pop
popl
push
in
pop
je
lcall
pop
jne
cs
cld
mov
xor
sbb
mov
or
add
scas
pop
mov
fisubrs
dec
or
adc
mov
sub
dec
cs
mov
push
xlat
xor
mov
ret
ss
xlat
fcoml
jp
jo
rcll
and
fistpl
test
push
addb
movsb
push
gs
mov
shlb
lret
push
and
push
inc
loopne
test
adc
or
xor
das
cmpsb
mov
out
mov
lret
repz
cmp
data16
imull
imul
mov
pop
add
jle
fidivrs
stos
jge
sbb
outsb
push
adc
mov
insl
jge
lret
fnstenv
loope
lods
mov
add
cmp
aad
sub
rcrb
jne
pop
addl
jne
fsubs
sub
jg
xchg
ljmp
mov
lds
sub
jle
lea
mov
cmp
pop
out
jne
test
mov
lret
shlb
pop
out
loope
jno
jno
gs
enter
ret
cmp
es
sbb
fldl
inc
jno
dec
cmp
add
mov
psrlq
xchg
push
pop
sub
cwtl
or
pop
aam
jo
lods
jg
pop
fucomp
push
inc
shrl
lea
mov
adc
adc
cmp
inc
fcmovu
add
mov
imul
daa
sbb
fwait
jecxz
inc
data16
aam
mov
inc
add
test
in
hlt
mov
and
mov
enter
stc
sti
mov
adc
mov
cli
dec
pop
pushf
ss
adc
shrb
add
mov
fistpl
lahf
das
xchg
push
mov
xor
cmp
sbb
mov
adc
out
pop
sahf
xchg
jae
lret
lock
and
shrb
imul
cld
fisttpll
sbb
sub
aad
sbb
lret
cmpsb
pusha
test
pop
lea
inc
popf
jns
fld
out
rcr
push
and
add
xchg
in
xchg
xchg
or
icebp
xchg
into
push
aas
arpl
scas
or
adc
pop
mov
sbb
add
sarb
daa
mov
lret
out
or
sbb
mov
cltd
mov
mov
dec
pop
rcrl
hlt
inc
mov
loopne
lret
lods
add
mov
pusha
lret
pushf
insl
xchg
js
push
outsb
fs
enter
mov
dec
sub
inc
enter
pop
pop
dec
cld
jmp
call
out
cvttps2pi
mov
dec
add
js
mov
aaa
repz
dec
shlb
lret
xor
mov
mov
jp
pop
ret
xor
sahf
out
jnp
cli
or
in
cli
les
push
and
pop
jge
mov
leave
dec
pop
inc
inc
add
jbe
loop
lock
clc
stos
popf
xchg
pop
jmp
push
push
mov
push
mov
dec
lds
pop
icebp
repz
cmp
loop
and
cmp
mov
mov
fiaddl
divb
rcr
addl
and
push
mov
pusha
adc
shll
and
sub
and
scas
jae
js
mov
inc
or
inc
dec
push
xor
mov
pop
or
lcall
arpl
sub
inc
in
pop
cmp
jo
shlb
mov
pop
iret
jl
pop
push
mov
adc
jl
jne
test
mov
es
fsubrs
lods
jg
in
inc
mov
xchg
fadd
jle
jg
sarb
and
arpl
jns
xchg
out
xor
xor
pop
jmp
mov
int
je
in
dec
aam
cmp
or
call
daa
sbb
orb
stos
fisubl
cmp
lock
aaa
rorb
jge
adc
inc
mov
scas
clc
dec
enter
cld
xchg
into
pop
lods
xchg
add
ret
pop
inc
push
and
mov
jecxz
testb
and
ljmp
inc
adc
imul
arpl
les
or
dec
lock
int
pushf
mov
sub
movsl
cltd
dec
lock
mov
fcompl
push
lds
inc
push
hlt
jb
mov
test
das
adc
jns
xchg
out
pop
cmp
or
enter
pop
adc
push
jne
shr
out
lret
test
cltd
lahf
jp
jg
sub
jne
mov
iret
test
pop
cmp
mov
stc
jbe
gs
lods
mov
ret
and
aaa
add
lods
in
int
jae
inc
add
ljmp
mov
push
test
es
pusha
insb
es
mov
aam
push
rcll
enter
js
mov
lods
ja
lret
xor
ss
imul
sub
inc
dec
lret
stc
out
or
das
fs
and
inc
add
add
fucomp
into
mov
fbstp
fucomi
call
pop
movsb
lock
sbbl
jp
mov
test
cmp
stos
test
mov
and
mov
cltd
push
mov
jns
mull
pop
ss
stc
orl
push
inc
andb
inc
fmul
mov
jne
mov
andl
int
ja
ret
outsb
lret
test
adc
push
out
jne
cli
lcall
xchg
mov
lock
clc
or
emms
xchg
dec
push
and
xchg
movsl
lea
or
sub
popa
in
adc
sub
into
dec
iret
jae
sbbl
jg
push
hlt
xchg
fisubrl
outsl
jecxz
mov
jecxz
jl
adc
jmp
and
aaa
or
jb
push
mov
xchg
sbb
pop
pop
dec
ds
push
lods
jmp
jp
mov
xchg
xor
cmp
in
aaa
psrld
in
dec
shlb
xchg
lds
and
jbe
test
shll
inc
push
mov
jg
xor
or
jg
pop
js
dec
inc
push
scas
inc
stos
imul
pop
mov
xrelease
ds
cli
enter
mov
add
stos
or
inc
cmp
je
sarl
adc
xchg
adc
add
and
call
stos
shlb
push
mull
popf
lcall
fs
adc
cli
shll
sbb
inc
and
lahf
loope
aas
mov
pushf
test
dec
add
inc
fwait
movsb
add
add
test
leave
sbb
lods
jne
movsl
xor
fstpl
add
xchg
pop
mov
stos
movsb
idivb
xor
lea
xor
mov
mov
stos
sahf
pop
addb
negb
sbb
shlb
lret
jbe
cmp
andl
loope
ret
out
push
pusha
pop
sti
iret
adc
mov
test
mov
scas
cltd
mov
jmp
test
fs
ja
and
dec
and
xor
pop
call
rolb
out
dec
pop
call
andb
mov
add
push
lret
gs
lcall
mov
nop
sbb
loope
cmp
push
sahf
js
test
push
xor
in
and
jmp
sbb
add
push
test
mov
imul
mov
out
out
jge
loop
sub
popf
ss
sti
mov
jno
je
lret
mov
xor
and
dec
adc
and
push
mov
push
or
jns
fs
cmpl
aam
cmp
adc
push
sbb
ljmp
bound
popa
stos
movlps
mov
xor
mov
in
les
sub
aad
outsb
iret
push
push
in
adc
jmp
mov
xor
and
sarl
cltd
or
adc
bound
pop
mov
sarl
mov
jns
and
and
stc
test
adc
add
jl
add
aaa
jbe
sahf
and
add
mov
or
or
fwait
repz
int
shl
mov
das
mov
or
dec
into
xor
outsl
push
or
es
mov
lds
jge
pop
xlat
popa
jae
and
push
scas
cld
loopne
or
insl
lret
mov
adc
mov
sbb
jge
inc
mov
and
xchg
jno
push
mov
add
cmp
xor
pop
inc
sub
imul
mov
loope
insb
test
daa
jbe
enter
pop
sub
mov
cmp
imul
call
push
cwtl
cmp
inc
xchg
xchg
mov
xor
idivb
mov
pushf
leave
jge
shll
negl
adc
inc
sahf
idivl
sarl
sbb
push
iret
and
sub
gs
mov
dec
ret
sub
inc
or
mov
jns
xor
lret
and
xor
cmp
cmp
xchg
sbb
mov
xchg
popf
push
sub
in
aad
fnsave
sbb
enter
addl
call
pop
and
cmpsl
ljmp
xor
inc
adc
jecxz
mov
aam
mov
and
lods
call
fsubs
sahf
cmpsb
bound
dec
addr16
out
sbb
into
stos
lods
js
call
adc
push
dec
mov
mulb
fdivs
jno
mov
icebp
aas
xchg
xchg
mov
cmc
jle
pop
mov
pop
lret
sbb
dec
or
cmp
mov
stc
leave
xchg
mov
das
shrb
shlb
sbb
add
add
gs
frstor
aam
test
jbe
mov
mov
mov
or
mov
fisttpll
jne
xor
cmp
xchg
aas
mov
or
jb
repz
jbe
idivb
repz
les
jnp
inc
xchg
pop
fstpt
dec
adc
into
xor
aas
nop
dec
ds
loope
mov
insl
mov
rclb
ret
andnps
je
mov
sbb
idivl
jo
pop
push
mov
xchg
imul
js
add
scas
xlat
adc
adc
xchg
adcb
cmp
push
cwtl
leave
pop
mov
jge
push
xor
inc
push
sub
data16
push
iret
cmp
popf
daa
orb
cmpl
ljmp
mov
lcall
out
fmul
or
jae
xor
mov
dec
inc
cmp
fidivs
sub
mov
mov
jb
pop
jnp
adc
cmp
pop
add
xor
adc
mov
and
adc
daa
sti
mov
push
xchg
inc
rorl
loope
mov
imull
or
mov
addr16
adc
adcl
mov
repnz
loope
arpl
jno
cmovbe
arpl
push
aam
sahf
int3
jne
sahf
sub
mov
ljmp
pop
loopne
ss
push
push
or
clc
data16
cmp
cmp
mov
xchg
and
outsl
int
out
fisubl
repz
data16
xor
inc
cmpsl
xor
add
in
and
inc
jae
in
xchg
nop
subb
sbb
out
sub
fisubrl
pushf
or
adc
cmpsb
mov
mov
int3
cmc
dec
push
add
cmp
js
imul
xchg
scas
ja
hlt
inc
push
cmp
cli
aas
push
das
imul
add
inc
dec
je
xor
lret
add
jbe
cwtl
shlb
adc
mov
bound
sti
dec
data16
push
or
aad
dec
xchg
fimuls
insl
mov
or
mov
sahf
xchg
lods
cwtl
and
push
mov
insl
sub
addl
dec
inc
inc
shrl
xchg
mov
xor
data16
mov
adc
lods
out
dec
sub
insl
sbb
mov
enter
sub
mov
jle
mov
sti
mov
repnz
arpl
daa
sub
cld
shll
and
inc
mov
inc
cmp
paddw
jle
dec
int
out
adc
mov
pop
arpl
sbb
pop
aam
cwtl
scas
out
sbb
jb
mov
mov
rol
pop
xchg
out
xchg
xor
inc
lock
pop
aas
xor
jae
xchg
cmp
xchg
and
mov
or
rcrb
test
and
pmaddwd
fstps
pcmpgtw
xchg
mov
nop
sbb
push
dec
test
clc
jl
loope
or
lret
stc
xor
test
jmp
icebp
mov
cmpsb
xchg
or
xchg
in
push
xor
sbb
pop
push
fiadds
and
and
add
fists
mov
xor
or
mov
mov
stos
inc
cmp
cmpsl
adc
test
push
call
mov
js
jne
pop
pusha
jo
popf
jle
shl
cld
rcl
aam
cs
dec
sbb
mov
mov
and
push
jne
loop
xchg
sub
sub
ss
mov
xchg
adc
pop
jo
adcl
or
paddusw
dec
mov
mov
add
mov
inc
mulb
insl
mov
out
xor
jle
sbb
pop
mov
mov
icebp
nop
push
push
daa
hlt
ljmp
xchg
inc
imul
jbe
mul
inc
xchg
pop
cmc
jecxz
inc
adc
adc
inc
push
cli
and
dec
stos
add
add
jl
xor
jbe
push
push
cmpsl
jne
jmp
lds
jge
adc
ret
clc
mov
pop
fs
jo
fldt
sub
jp
cmp
mov
test
add
push
daa
cmp
add
jbe
dec
neg
xor
xchg
inc
sar
mov
pop
inc
and
pop
inc
cmpsb
add
push
xchg
enter
in
jo
ljmp
and
in
aam
mov
clc
sbb
jb
cld
push
and
xchg
repnz
pop
popl
mov
dec
jo
shrl
ficoms
mov
jl
gs
and
adc
dec
fmull
outsb
lods
xchg
xchg
int3
mov
push
inc
ss
mov
cld
lock
lahf
pop
rcl
hlt
pusha
imul
movb
test
jne
imul
aas
and
ja
jo
add
pop
and
stc
fwait
sub
sbb
adc
xchg
push
dec
jbe
mov
xor
les
ja
mov
movsl
shll
sub
insb
into
fnstenv
orl
or
jge
insb
pop
push
outsl
pop
bswap
shl
jmp
xchg
inc
xor
in
loopne
es
inc
inc
mov
fxch
orl
mov
dec
and
mov
fcmovb
out
fimull
and
sbb
xchg
nop
and
lret
aaa
cld
adc
subb
mov
pop
mov
xchg
enter
aaa
addl
sub
clc
jl
jo
fsubr
sub
stc
cmpl
inc
cmp
int3
or
xor
add
push
lock
xorb
out
test
cmp
hlt
out
pop
sbb
in
xor
cs
pop
cltd
jecxz
inc
cmovle
aam
movsb
in
inc
and
or
jbe
movsl
repz
cltd
test
outsb
dec
sahf
outsl
or
dec
inc
cmpb
push
dec
andl
nop
sub
scas
xor
rorb
lret
and
adc
or
xchg
push
add
mov
xchg
into
ret
test
into
rcl
jg
dec
and
outsb
mov
rcrb
mov
push
fadds
jl
ja
adc
dec
pop
pop
into
scas
mov
mov
xchg
sbb
mov
scas
fmul
mov
xchg
das
mov
in
inc
lods
xchg
sarb
mov
push
outsl
call
in
mov
adc
xchg
mov
cltd
pusha
call
jb
jg
clc
cmp
sbb
sbb
jne
dec
inc
out
mov
lcall
add
aaa
push
mov
pop
loope
out
pop
fwait
cld
clc
sbb
shll
sub
xor
lahf
cmp
and
fidivrl
les
pusha
jg
sub
and
xchg
mov
inc
jnp
inc
std
sub
cmpsl
out
popa
test
cmc
outsl
xlat
sbb
mov
add
ds
pop
sahf
lds
dec
lods
push
and
mov
mov
sbb
mov
ret
loop
pop
aam
push
outsl
std
cmp
loope
shll
inc
inc
inc
jns
repnz
push
xor
imul
mov
add
vpshad
adc
and
shlb
jecxz
cmp
sub
repz
sahf
in
jno
pushf
push
cmpsl
es
sbb
add
sbb
test
clc
inc
inc
xchg
cltd
cmp
jle
mov
pop
sbb
aad
pop
call
lods
sub
or
mov
sub
mov
mov
push
rcr
ficoms
movl
int
adc
or
sbb
jp
pusha
push
inc
enter
mov
xchg
into
or
pop
sbb
ljmp
jns
mov
fdiv
jp
cmp
lret
xchg
imul
bound
daa
lods
in
icebp
pop
jo
sbb
adc
cmp
mov
inc
fistpll
xor
int
in
sub
adc
fwait
inc
mov
inc
insl
aaa
sub
jne
cmp
mov
jnp
inc
arpl
push
jecxz
sti
lods
dec
sar
ljmp
sub
dec
rol
xor
divl
aas
loop
hlt
pop
in
mov
pop
push
in
fistpll
mov
mov
insl
pop
sbb
test
loopne
dec
stos
and
xchg
imul
rcrb
lcall
daa
sbb
lock
cli
push
xchg
push
mov
lea
js
mov
inc
leave
mov
pop
add
loop
bound
pop
pop
or
sub
pop
push
out
mov
inc
and
lea
mov
pop
add
mov
jp
dec
test
es
pop
fcmovbe
pop
dec
mov
pop
les
dec
pop
pop
jl
cmpb
mov
sub
mov
sub
hlt
stos
or
shlb
cs
pop
mov
arpl
data16
in
xor
cs
mov
xlat
push
pop
mov
jns
jne
mov
pop
das
jl
sbb
outsl
xor
jnp,pn
jle
jne
mov
inc
adc
dec
adc
add
add
lock
leave
mov
inc
test
loop
sarb
clc
inc
mov
mov
imul
adc
imull
enter
cmp
lret
pop
cmp
adc
hlt
bnd
and
cmpsb
shlb
adc
lret
pop
cmpsb
sti
sub
ja
jge
pop
cmp
movsl
stos
cmp
nop
out
lcall
push
jne
sub
push
xchg
movsl
inc
add
push
sub
mov
jmp
mov
jge,pt
xor
testl
sbb
mov
pusha
pop
xor
xor
int
andb
sbb
pushf
pop
sub
lcall
push
mov
jnp
jmp
pop
cld
adc
mov
jecxz
enter
in
push
jge
inc
fistpll
pop
stos
mov
mov
sub
pushf
cmpsl
scas
lea
pop
into
xchg
shrl
hlt
stos
jle
fldz
push
add
mov
xchg
repnz
jmp
pop
insb
jne
test
lds
sti
out
push
adc
rorb
lret
push
hlt
imul
add
sbbb
pop
testb
fninit
sahf
jne
xor
push
dec
adc
dec
mov
push
pop
jg
in
inc
and
imul
adc
lret
sub
outsb
xchg
mov
sub
repz
and
sarl
sbb
xchg
repz
shrl
popa
mov
sti
pop
mov
sbb
ficomps
adc
mov
mov
mov
out
in
or
lock
fisubs
and
cmpsl
and
jb
lock
rorb
inc
xchg
sbb
mov
ficoms
fisubl
ffreep
push
js
fwait
mov
insb
cwtl
cmp
inc
out
fildll
xlat
push
pusha
insl
lock
in
sub
jmp
fwait
lcall
push
or
stos
int3
xchg
js
jmp
fs
cs
stos
imul
daa
xchg
cwtl
cmp
es
out
in
cld
jae
push
mov
int
lcall
enter
mov
xchg
rorl
sub
das
push
rcl
loopne
mov
mov
jge
enter
pop
rol
inc
cwtl
into
test
repnz
es
icebp
xchg
pusha
jecxz
xchg
and
inc
ret
sub
mov
pusha
outsb
sub
push
fstps
popfw
mov
mov
sti
stos
cmp
pushf
loop
inc
push
or
or
pop
ret
push
push
stc
pushl
inc
das
or
mov
pushf
insl
jl
mov
loope
cmp
lcall
sbb
loop
daa
dec
sub
mov
icebp
rol
fisubs
mov
fidivl
adc
mov
out
sti
mov
inc
mov
adc
leave
mov
adc
jg
in
push
cmp
das
call
ja
xchg
ficoms
mov
testb
jae
cld
mov
xor
aad
loop
lret
mov
imul
xchg
mov
aaa
movsb
pop
sub
popfw
insl
dec
sti
inc
xchg
mov
ja
mov
popa
lahf
icebp
insb
fisubrl
xor
cwtl
int
inc
add
pop
jge
push
xor
xlat
mov
rorl
adc
cmp
or
iret
xor
shrl
pusha
push
fs
sbb
inc
nop
mov
xchg
jecxz
pop
cmp
outsl
add
in
notb
pop
jb
add
inc
test
cld
movsb
shr
cmp
rorb
inc
pop
jbe
jmp
scas
loope
outsl
mov
into
lods
inc
dec
and
mov
mov
addr16
stos
mov
push
popa
push
jbe
call
std
decl
push
or
dec
jp
nop
adc
mov
jb
data16
inc
frstor
mov
xor
push
fidivl
loope
cmpsb
pop
push
push
sbb
mov
jbe
inc
xchg
xor
push
mov
jmp
fidivrl
lods
lock
fistps
or
and
inc
ret
lcall
jo
pop
idiv
stc
aas
stos
pop
push
movsl
insb
add
mov
hlt
popf
call
fldl
lds
jo
loopne
out
fsubr
test
mov
mov
sti
xchg
mov
inc
scas
push
push
je
call
jmp
out
mov
add
pop
jle
lods
jle
arpl
xor
std
xchg
xor
push
movsb
loopne
xchg
mov
bound
andb
mov
dec
shll
pushf
divb
add
mov
rcl
scas
mov
dec
ja
mov
mov
sbb
adc
sbb
cld
cmp
es
cmp
add
subl
mov
mov
ret
sub
mov
jl
fwait
xchg
dec
sub
mov
insl
and
mov
outsl
inc
jmp
mov
mov
aam
inc
pop
xchg
inc
jne
and
popf
push
fwait
roll
fs
pop
jg
mov
cmpl
push
int
xor
inc
or
out
mov
jp
insb
inc
lods
int3
rcrl
adc
inc
push
push
fmuls
push
scas
add
xchg
xlat
push
imulb
test
rcrl
ficomps
iret
lea
fwait
mov
sbb
sbb
pop
add
xor
xor
mull
mov
adc
cmpsl
push
sbb
xor
xor
sub
push
call
hlt
int3
cli
mov
int
pop
addb
test
and
push
sub
mov
cmp
repnz
pop
vmovntps
jg
xchg
push
or
cld
fcomps
in
outsl
jge
shl
jmp
mov
out
dec
arpl
xchg
inc
push
loop
mov
push
js
cmp
cwtl
std
push
push
rol
cmp
sysret
cmp
cmc
mov
jne
test
lcall
mov
test
fsubr
lret
test
ss
pop
out
lret
loope
repz
sub
add
cmp
mov
mov
out
lret
filds
pop
jle
inc
int3
mov
xor
cwtl
pop
mov
inc
pop
data16
test
sbb
mov
push
dec
movsl
mov
cmp
pop
add
pop
xchg
mov
sarb
fimull
mov
and
out
mov
scas
xchg
or
fcmovnb
mov
push
fildll
hlt
add
inc
jg
rcrb
int
addr16
jno
enter
movsl
repnz
inc
stos
pop
jmp
cmp
aas
mov
lahf
inc
hlt
xchg
ja
int3
repnz
les
cwtl
sub
sbb
lock
sbb
in
sub
idivl
and
adc
aam
lahf
shr
movsb
int3
repnz
cs
ja,pn
jo
mov
insl
ret
xchg
shll
sarl
leave
faddp
inc
xor
aas
ret
inc
loopne
lods
pop
xchg
out
xor
leave
movsb
popl
shl
repz
add
pop
aam
sub
scas
bound
or
cmp
arpl
sbb
dec
inc
aad
test
xlat
fstpl
ss
pusha
lds
es
and
and
in
mov
mov
pop
in
ljmp
andb
cmpsl
es
loopne
or
push
repnz
pop
bound
adc
inc
jb
sti
out
outsb
jle
scas
sbb
and
stos
xor
jno
enter
aam
xor
lahf
jl
addb
fs
mov
push
insb
stos
insb
loop
pop
push
xchg
stos
xchg
add
and
jmp
loop
cmc
sub
mov
jecxz
bound
pop
xor
aam
shll
sbbl
loopne
roll
mov
sbb
idivl
or
in
lock
or
cmp
pop
nop
adc
dec
lea
cmp
stos
mov
push
sahf
sbb
out
leave
or
sbb
lret
pop
imul
mov
mov
decb
in
sub
mov
popf
pop
mov
add
mov
inc
test
fnsave
dec
out
jmp
cmpb
iret
jmp
aad
pop
push
adc
fldcw
push
jecxz
mov
mov
sub
pushf
addr16
and
pop
push
mov
shufps
inc
mov
std
xchg
into
sub
dec
pusha
shl
lahf
in
jl
pop
test
ja
mov
push
out
add
into
pop
int
pop
mov
push
cmp
ret
inc
mov
jno
mov
out
xor
mov
add
mov
test
iret
cwtl
dec
and
clc
icebp
fidivrs
xchg
in
pushf
push
nop
enter
fmuls
or
in
fs
sub
movsl
sahf
arpl
push
sbb
test
jns
loopne
sbb
push
and
jns
inc
lock
pop
mov
sahf
xchg
push
mov
int
insl
orl
dec
cmpb
fdivrl
fsubs
ja
dec
sbb
adc
loope
popa
jp
cmpsb
enter
shrb
xor
mov
shrb
and
mov
test
out
sbb
push
jge
cmpsl
jmp
cli
outsl
sbb
ret
icebp
outsb
mov
jbe
fcoml
sbb
or
fistpll
dec
stos
mov
sti
fadd
insl
aad
dec
pop
jae
shr
cmp
int
and
push
jnp
pop
das
add
cmp
ret
imul
dec
jmp
mov
mov
sub
popa
repnz
testl
std
jae
cli
xchg
xchg
inc
dec
cmp
pusha
push
cmpsb
scas
gs
dec
sub
sub
fcoms
dec
cmpsl
dec
inc
popa
sarl
icebp
sub
inc
jb
int
sahf
inc
or
fisubs
addr16
jo
jle
xor
push
movsl
xchg
xor
and
test
lds
mov
sti
jb
daa
in
int3
repz
sbb
jg
aaa
inc
jmp
inc
enter
mov
lret
lods
lods
clc
negb
pop
mov
add
cwtl
adc
pop
aam
ret
xorb
or
xchg
sbb
xchg
mov
mov
loopne
xor
xchg
mov
xor
xchg
pop
add
add
iret
add
aam
xchg
sbb
mov
test
push
int
das
jp
inc
cwtl
cmpsl
iret
jae
xchg
shrl
sbb
jmp
pop
mov
movsb
and
push
fdivrl
scas
push
mov
sbb
cwtl
mov
lock
xchg
cmpsb
outsb
adcb
int
xlat
mov
hlt
ret
testb
sub
aas
push
xor
push
lahf
push
push
call
push
and
jne
fdivl
or
jp
dec
jnp
pop
pop
xor
pop
mov
push
cmp
jle
mov
inc
lock
loope
cmp
inc
mov
pop
rcl
mov
push
jp
mov
int
int
add
xchg
jo
out
shll
mov
cmp
inc
pop
or
lods
sbb
add
loopne
je
adc
adcl
std
jns
xor
sbb
cmpsb
xor
aas
xchg
cs
add
sbb
call
in
adc
pop
cmp
cmp
in
mov
into
push
out
sbb
add
aam
and
sub
popa
xor
xor
imul
iret
sbb
mov
jns
lret
les
pop
mov
jno
fistps
jl
and
sbb
mov
int3
push
ja
sbbl
push
mov
inc
loope
pusha
fdivl
mov
repz
lret
mov
popl
cmc
pop
rorl
adc
mov
iret
push
lods
jb
aad
xor
cmc
ss
jne
xchg
dec
fcoml
pop
adc
mov
inc
adc
dec
movsb
mov
mov
mov
mov
mov
mov
mov
inc
mov
hlt
sub
jo
sbb
rclb
xchg
popa
and
notb
fiadds
idivb
jb
push
inc
lea
lods
enter
cmp
daa
pop
jae
addl
mov
cmp
push
cltd
pop
sub
and
inc
and
repnz
or
inc
xlat
ljmp
ret
push
xor
sbb
cmp
cmp
je
sbb
sbb
mov
adc
jg
mov
mov
imul
into
inc
jb
and
nop
cmp
std
xor
das
ja
xchg
or
sti
aad
fwait
int
pushf
jne
xchg
mov
shr
xchg
mov
jmp
xchg
mov
xchg
arpl
mov
dec
inc
and
push
iret
xchg
xlat
decl
xchg
repnz
shrl
ljmp
shr
andb
cmp
stos
or
dec
pop
xchg
ss
xchg
push
rcrb
call
mov
adc
xor
mov
out
clc
mov
push
xor
out
icebp
loope
into
add
ljmp
sbb
movsl
push
push
sub
lret
mov
sub
lods
scas
push
mov
add
inc
push
aas
sub
insb
inc
shlb
inc
xchg
pop
jns
and
test
loopne
jnp
xlat
push
fildl
sbb
popa
xchg
inc
sbb
mov
imul
popa
push
inc
sbb
mov
xchg
into
and
js
fdivrl
rclb
jg
sbb
inc
out
arpl
inc
ffree
xchg
add
lods
imul
sbb
jnp
lds
aam
xchg
imul
jecxz
pop
es
xor
xchg
fistpll
dec
xor
imul
sub
cmc
and
popf
or
in
cmp
in
sarl
movb
jno
xchg
sub
pop
sub
xor
dec
push
ret
out
xchg
sti
push
sub
roll
mov
test
push
xchg
cltd
or
sub
add
mov
sub
cli
or
decb
ds
mov
xor
cmp
daa
dec
jb
dec
out
xchg
push
fwait
cld
out
add
pop
mov
fwait
es
and
mov
test
ret
push
push
dec
dec
inc
cli
and
sti
cmp
pop
popf
push
sub
cmp
call
repz
out
imul
mov
dec
add
cmpsb
inc
arpl
xor
mov
push
sub
pop
in
add
jo
pop
shrb
mov
and
ror
xchg
loop
mov
shll
fisubrs
testb
dec
push
fsub
inc
pop
call
and
daa
xor
jnp
jae
pop
push
hlt
rclb
pop
fisubl
scas
repz
int3
and
cmp
pop
jb
cltd
fistpl
insl
lods
pop
mov
mov
dec
mov
fistl
test
or
jle
mov
int
clc
les
cltd
sbb
out
out
push
out
inc
movsl
mov
pop
dec
and
stos
std
inc
or
mov
jbe
js
lret
push
pusha
xor
jne
faddl
shlb
cld
mov
xchg
or
sbb
imul
adc
sahf
push
les
push
arpl
in
out
pop
lret
pop
mov
out
add
inc
cmp
or
pushf
inc
xchg
jae
repz
or
mov
out
or
fisubs
jno
rorl
aam
pop
rclb
imul
outsb
mov
ficoml
loopne
movsb
dec
jp
andb
and
data16
or
out
mov
push
inc
ds
mov
jge
ret
push
and
sub
lods
lods
push
xchg
cli
and
repnz
xchg
xlat
push
das
mov
das
ja
inc
and
xchg
add
push
sbb
mov
je
or
push
mov
push
call
movsl
jmp
add
cmp
jae
adc
repz
pop
leave
insl
mov
popf
into
xor
lret
pop
xor
inc
xchg
jl
sub
mov
xchg
push
adc
xor
jns
sbb
sbb
mov
xchg
popa
pop
push
jne
xchg
pop
sbb
outsb
jne
inc
xchg
mov
mov
and
or
pop
and
jne
jecxz
fsubrs
in
lret
jno
ja
test
sub
push
sbb
sbb
xchg
lea
jno
mov
jns
jge
in
cmc
std
adc
stos
inc
mov
push
in
jecxz
cmp
in
test
xchg
xchg
mov
mov
cmp
xchg
fbld
jp
icebp
dec
xchg
ret
xchg
jmp
out
inc
loope
loopne
fldenv
jmp
mov
daa
pop
xlat
push
dec
les
xor
or
fistpll
dec
mov
lret
and
rclb
int3
in
cli
outsb
jne
scas
into
fstl
fidivrl
xchg
cmp
jbe
dec
pop
orl
fnstsw
or
jae
inc
test
lcall
cltd
stos
dec
sbb
sub
cmp
mov
jno
bound
lods
sub
jo
mov
outsb
jbe
aam
jecxz
mov
popa
pop
test
arpl
mov
ja
sahf
fwait
stos
fisubl
lock
je
repnz
lock
xor
dec
shl
int
lret
xlat
out
filds
neg
add
mov
jg
mov
or
sub
in
mov
xchg
inc
mov
add
lret
push
push
pop
inc
das
inc
jp
xchg
push
lcall
inc
jae
or
popf
sbb
dec
jo
xchg
cmp
mov
and
not
and
sub
pop
mov
xchg
mov
sbb
jae
push
cs
cltd
hlt
imul
imull
or
clc
sbb
inc
mov
lods
jl
xor
ss
les
jns
and
fdivr
mov
push
outsb
movsl
mov
mov
sub
dec
push
rclb
xor
clc
das
mov
add
jge
popf
push
mov
mov
or
push
aad
mov
pop
jb
in
pushf
int3
movsl
pop
idiv
outsb
push
fists
cmc
push
sbb
das
cmp
jne
mov
les
out
xor
or
enter
pop
iret
mov
loopne
sbb
add
cmp
cmp
pop
mov
inc
sarl
pop
enter
push
jmp
test
mov
rcrl
xor
dec
jmp
adc
push
les
jb
repnz
icebp
ret
push
dec
adc
ja
sub
inc
cli
push
push
rclb
je
xor
in
mov
inc
add
push
fidivrs
jmp
movsb
inc
and
mov
movsl
sbb
mov
jle
daa
adcb
pusha
dec
aad
mov
mov
into
cmp
popf
cmp
leave
pop
xor
imul
addr16
sbbb
fadd
mov
ja
aaa
mov
push
dec
in
mov
cmp
es
push
mov
jg
mov
insl
fnsave
pusha
cltd
incb
test
das
mov
rcrl
mov
xor
lret
push
sub
mov
xor
mov
stc
jmp
loopne
cli
sti
dec
scas
push
xor
mov
je
xor
jb
fsubl
push
call
push
or
and
pop
push
test
inc
add
out
pop
test
lcall
and
mov
in
adc
sub
adc
out
lret
or
jno
fcmovb
xchg
ficoml
mov
mov
push
jmp
in
xlat
repz
inc
in
pop
mov
fisttpll
add
pop
pusha
pop
ds
repz
repz
cmp
cltd
cmpsl
fimuls
mov
std
out
lds
xchg
jnp
cmp
cmp
out
cmp
cmp
scas
and
lds
inc
mov
xchg
inc
adc
jno
fs
jno
cmp
pop
mov
ficompl
popf
mov
out
lea
jg
xchg
mov
jbe
sub
jbe
lods
cmp
imul
fdivrs
les
ds
cmpsb
xchg
rorl
cwtl
in
std
iret
jae
xchg
repz
cmp
xchg
pusha
push
pop
imul
ljmp
mov
add
in
pop
icebp
dec
xor
push
push
inc
cmpsl
fiaddl
inc
push
cmp
mov
dec
xor
cmpsb
fstpt
push
sarb
xchg
clc
lcall
pop
in
sbb
and
popf
test
push
push
cs
movsb
jb
lahf
pop
mov
fs
lcall
repz
adc
xchg
adc
lcall
outsl
shll
xor
adc
add
clc
adc
add
dec
ja
xlat
aam
push
aaa
cmpsl
outsb
addr16
in
sub
mov
xchg
repnz
int3
or
rolb
ret
dec
jno
out
cld
filds
mov
andb
jmp
test
dec
pushf
mov
fwait
mov
in
jnp
in
jl
jle
insb
scas
add
js
fs
push
sbb
jo
loope
jecxz
or
std
popf
mov
pushf
push
push
adc
sahf
xchg
stos
or
jg
inc
add
adc
sub
mov
mov
or
push
push
aam
and
enter
pop
cli
in
mov
fsubrs
jns
pop
or
out
mov
xor
aad
in
into
mov
jg
je
ret
mov
adc
lods
flds
rolb
mov
mov
mov
and
jle
lock
adc
jg
mov
jl
xor
and
call
fdivrs
imul
adc
add
xchg
sub
rolb
ror
fwait
sahf
stos
stos
loop
andb
movsl
ja
adc
cs
inc
cmp
and
mov
dec
scas
mov
rcll
xchg
das
mov
xor
pop
mov
shll
int3
jae
pop
insb
cwtl
jae
sub
outsl
inc
mov
ret
sub
sub
scas
pop
test
cwtl
xor
call
sub
mov
idiv
iret
inc
outsl
fwait
xchg
in
dec
jmp
push
adc
jne
push
adc
popa
fwait
in
mov
jg
push
movsb
jl
loope
icebp
shll
and
mov
or
dec
and
sub
dec
xchg
outsb
hlt
in
insb
pop
lods
mov
sbb
sbb
lock
mov
test
mov
pushf
adc
push
xchg
inc
leave
xchg
mov
pushf
pushf
ja
dec
imul
das
aam
out
inc
push
cmpsl
lret
ljmp
out
dec
cmc
movsb
add
lock
es
loop
in
cld
and
filds
out
or
ret
fisttps
mov
jge
in
sbb
in
lret
sbb
insl
and
or
jae
int
add
mov
ffreep
cmp
into
cld
fs
out
mov
test
dec
xchg
sub
sub
sti
dec
shl
mov
addr16
movsb
cmpl
pop
pop
and
xchg
lods
sub
std
jns
mov
sub
push
lds
sbb
imul
jl
xor
sahf
adc
sub
ljmp
ja
inc
scas
jmp
sti
nop
imul
bound
daa
test
mov
into
cs
or
fsts
adc
add
jns
rcll
and
pusha
mov
cmp
cli
test
ljmp
xchg
sub
test
cmp
int
pop
or
mov
mov
testb
in
xlat
hlt
jns
in
lret
and
stos
jg
mov
xchg
rcr
inc
mov
dec
std
xchg
mov
xor
aaa
sub
or
mov
mov
cmp
mov
movsb
sbb
xor
test
adc
insb
push
xlat
cmpsl
lds
mov
lret
je
das
insl
jmp
inc
test
lret
addl
xchg
les
adc
mov
mov
add
aad
fs
je
inc
inc
add
jno
sbb
test
shlb
arpl
in
in
mov
movsb
ds
sub
shl
mov
cmp
js
jp
clc
sbb
push
mov
push
shrb
daa
mov
sahf
pop
iret
xlat
cmc
cmpsb
call
out
push
mov
sbb
inc
outsb
jns
js
mov
xchg
lock
push
inc
fstl
jl
adcl
mov
add
push
inc
leave
in
dec
sbb
outsl
sub
pop
test
pop
jp
ret
movsb
sbb
inc
adc
inc
mov
mov
cs
sub
jmp
cmpsl
fmull
or
mov
or
lcall
and
or
adc
enter
stos
lret
in
cmpb
rcl
inc
out
lods
pop
push
js
outsb
ja
inc
dec
mov
cmpsb
sbb
icebp
jae
testb
mov
push
mov
xchg
pop
lock
icebp
in
fisttpll
or
out
cltd
out
mov
out
jne
lock
mov
fcoms
lds
add
rcrl
aad
cmp
sub
test
aas
stc
dec
loopne
xor
leave
sub
mov
adc
dec
push
adc
cli
mov
mov
imul
push
xchg
dec
or
xor
sbb
mov
stc
dec
loop
lret
xor
adc
popf
cmp
jno
in
dec
adc
ja
fiadds
or
ret
mov
cmp
adc
sbb
ja
shl
mov
xor
or
popf
movsl
loop
adcb
pop
xor
or
jmp
in
xor
mov
inc
insb
fstpt
adc
sbb
xor
jmp
pushf
cmpsb
sahf
xchg
mov
dec
or
jmp
jg
fildl
pop
mov
icebp
imul
add
addl
test
push
sub
addr16
adc
ret
fistps
stos
std
std
push
cmp
cmp
jnp
and
and
sub
call
jae
sbb
xor
leave
mov
pop
mov
xor
stc
cmpsl
push
adc
sub
cmp
push
fisttpl
dec
mov
ja
sbb
sbb
jl
mov
cmp
xor
into
mov
pusha
xor
pop
into
stos
outsb
cmc
fiaddl
scas
adcb
lcall
cwtl
orb
lret
xchg
sub
out
cmp
lret
pop
clc
pushf
jp
daa
xchg
in
add
or
in
popf
dec
ja
in
in
dec
and
push
xor
pop
xchg
mov
mov
push
pushf
cld
out
arpl
push
inc
xor
es
dec
dec
mov
movsb
and
loop
adc
mov
pushf
pop
fsubl
sbb
dec
sub
fs
fwait
hlt
sub
pop
xchg
mov
jmp
dec
xchg
dec
insl
js
xchg
ss
mov
jmp
loope
push
mov
aas
mov
jne
jne
lret
sbb
pushf
in
dec
insl
stc
test
or
inc
xor
pusha
xchg
or
cltd
imul
lret
ljmp
or
popf
mov
enter
shlb
xlat
std
mov
movsb
lock
roll
cli
add
adc
fbld
adc
in
push
jp
xchg
je
fcompl
test
out
mov
cmc
mov
jmp
pop
rolb
leave
jecxz
out
cwtl
push
cmc
jg
pop
into
in
cltd
in
test
outsl
or
mov
andl
ss
xchg
xor
pop
push
xchg
mov
repnz
je
cmpsl
mov
jmp
scas
ljmp
push
arpl
arpl
xchg
or
adc
dec
add
lahf
int3
fstps
xchg
nop
lahf
adc
xchg
or
lret
icebp
test
or
fisttpll
sahf
sbb
adc
jl
in
mov
sahf
je
fdivrs
dec
leave
mov
mov
sbb
pop
test
xchg
jo
or
xchg
in
jmp
push
iret
stos
adc
mov
sbb
popa
iret
lcall
and
xlat
pop
mov
or
xorb
test
movsb
in
fidivl
or
mov
dec
or
lret
xchg
mov
sub
in
add
repnz
jbe,pt
pop
mov
testl
rcrl
xor
adc
mov
inc
inc
int
negl
or
jno
push
push
mov
cmc
cmpsb
lret
test
pop
out
or
in
popa
call
sub
lret
ja
and
shll
ds
fisttps
in
or
dec
shrb
jae
pop
dec
dec
and
les
insl
mov
in
mov
daa
or
call
sub
shlb
pushf
jns
stos
gs
lret
or
add
into
adc
jbe
push
sub
les
push
push
bound
dec
dec
push
mov
insl
repnz
aam
iret
inc
push
mov
insb
fidivs
sub
pop
and
les
dec
cltd
mov
clc
test
dec
mov
outsb
in
fs
int3
adcl
movsl
pop
dec
jb
xchg
xchg
sbb
jle
adc
xor
lret
mov
rolb
add
aad
movsl
cltd
rorb
push
push
js
mov
das
jne
cmpsb
xor
icebp
jb
out
ja
push
dec
xor
push
add
dec
jns
bound
dec
jecxz
pop
cs
ss
out
out
hlt
push
lea
rol
ret
push
push
or
jle
arpl
adc
clc
jns
mov
icebp
mov
sbb
sub
icebp
shrb
movsl
imul
mov
jno
mov
jno
and
mov
fistl
mov
lods
addr16
in
pop
push
mov
push
aas
or
loope
sub
nop
inc
or
jae
jae
mov
nop
mov
lods
jmp
xor
aad
in
cmp
je
popf
cmc
mov
test
and
xchg
mov
mov
in
ss
aas
shll
nop
icebp
mov
push
mov
outsb
aas
add
daa
mov
fsubl
or
mov
aas
lret
dec
xchg
out
lret
pop
iret
push
mov
in
repnz
test
mov
pop
rcr
ret
test
pop
jo
xchg
mov
outsb
les
insl
mov
loop
jp
sbb
aaa
dec
lea
clc
rclb
cli
adc
loope
jns
fldenv
call
sahf
pop
hlt
push
stos
push
pop
inc
jp
lock
dec
xlat
imul
xor
push
and
adc
ds
test
sbb
push
push
inc
add
and
dec
pop
popa
lret
cmp
xor
scas
aas
mov
add
sub
scas
jle
sbb
fimuls
clc
loopne
xchg
test
cli
shrb
sub
xlat
push
sbb
xchg
push
xchg
mov
pop
fs
in
loopne
mov
sub
popa
jmp
test
lods
or
sti
jo
pop
jb
xor
xor
jmp
imul
mov
fs
push
int
sub
ss
sub
inc
aas
or
mov
mov
or
push
ret
mov
pop
fs
jle
enter
push
jbe
fsts
sbb
push
loop
out
xchg
sbb
push
ret
add
das
test
sub
dec
push
out
xchg
push
lock
pop
int3
mov
inc
dec
xchg
xor
lret
lahf
sahf
push
pop
fbstp
loope
jbe
mov
mov
xor
cmpsb
push
jmp
insb
xor
divl
aad
jecxz
int
mov
push
xchg
pop
test
popf
pop
mov
and
jo
jns
dec
nop
inc
sbb
loopne
cmc
scas
push
xchg
dec
mov
mov
pop
in
push
outsb
mov
and
pop
pop
push
sbb
mov
outsl
sbb
iret
dec
ljmp
adc
add
push
fs
dec
arpl
push
cwtl
mov
push
xor
mov
jae
cmpl
int
pushf
pop
push
xchg
xor
xor
mov
pop
adc
push
dec
xchg
mov
jle
sub
movsb
dec
dec
mov
lock
cmp
cmp
call
std
lret
imul
bound
jb
iret
scas
pop
xor
cwtl
ret
xchg
inc
ret
mov
gs
mov
mov
cmp
dec
jle,pn
scas
rclb
and
sbb
jo
mov
out
mov
inc
mov
sub
inc
adc
mov
pop
pop
adc
add
test
sub
push
out
xchg
add
gs
addr16
xor
cmpsb
leave
int
data16
lret
into
je
test
jnp
les
xchg
xor
mov
imul
cld
mov
test
cmovne
jne
cmpsb
scas
cmc
sbbb
int3
cmp
sarl
fsub
repnz
sbb
inc
dec
sbb
das
push
dec
add
cmc
jp
sub
jne
xor
fnstsw
fistl
ficompl
les
mov
dec
int
xchg
data16
push
es
pop
push
pop
das
adc
test
aaa
ds
xor
test
inc
push
mov
ficomps
scas
in
add
or
sub
add
lods
jl
lods
inc
and
push
mov
inc
daa
push
and
mov
out
imul
sti
dec
xchg
mov
or
push
lahf
idivb
xor
cmp
fstl
or
sub
insl
pop
les
repnz
add
cmp
add
or
scas
mov
mov
xor
sub
subl
call
int
sub
test
out
int3
arpl
jecxz
cmp
lock
sub
fisubl
pusha
or
pushf
dec
add
adc
push
repnz
adc
sbb
jp
int3
cld
daa
cmp
push
aam
rcll
mov
lahf
dec
das
pop
jae
xchg
mov
shlb
movsb
cs
adc
push
add
jne
cltd
fwait
call
fs
ljmp
test
pop
dec
cmp
dec
pop
repz
lret
push
mov
shr
out
pop
jns
fsubrs
mov
dec
andb
lods
cmp
cltd
add
cmp
mov
mov
cmc
in
mov
mov
lret
push
add
adc
incb
gs
notb
dec
adc
movsb
pop
dec
mov
xchg
stos
dec
sub
insb
sub
addr16
jbe
add
mov
test
sahf
cmp
shl
call
inc
mov
mov
mov
jno
adc
daa
sbb
xlat
and
sub
ret
cs
xor
sbbl
xor
jmp
mov
fdivrs
out
push
push
cs
and
cmpsl
outsl
and
into
sub
js
mov
or
jno
clc
lods
ja
add
gs
cmc
int
ja
rorb
inc
xor
ja
dec
push
or
mov
xchg
test
mov
cmpsl
pop
jns
sbb
in
fcompl
jnp
es
bound
imul
ja
and
popf
dec
jb
xchg
sahf
pusha
mov
mov
jle
mov
lret
mov
clc
push
aad
xchg
movsl
leave
cmpsb
cltd
xchg
ss
icebp
and
divb
sbb
out
mov
push
hlt
sbb
into
cs
pop
mov
sbb
push
push
add
and
dec
mov
pop
add
sub
ds
push
jg
frstor
repnz
or
dec
or
cmc
or
mov
inc
adc
cltd
adc
rol
mov
or
jae
push
clc
sub
sub
icebp
fistpl
cmpsl
push
sub
add
add
outsb
sub
loop
sti
imul
cwtl
cwtl
test
sbb
cli
fstps
xchg
stos
jne
push
lock
cmp
addr16
mov
inc
mov
xor
ds
sti
out
dec
xchg
repz
paddd
or
cmp
mov
xchg
cli
into
xchg
push
inc
push
lcall
mov
dec
mov
sbb
pop
jne
and
add
adc
push
cmpsl
cmp
pop
daa
lret
out
nop
test
shrb
push
mov
addr16
je
dec
inc
cmp
sbb
cmc
mov
lock
icebp
inc
mov
xchg
or
lret
and
ret
in
or
pop
ljmp
cmpsl
mov
mov
sahf
lods
jmp
scas
fldt
decb
sbb
pusha
lret
xchg
jmp
out
stos
push
lcall
mov
in
jmp
push
fucom
dec
fsubp
call
xchg
mov
test
and
inc
xor
dec
sbb
das
mov
xlat
lret
sub
sti
pop
stc
pop
mov
add
aas
push
dec
jb
fcomip
jns
cmp
lods
out
fsubrl
jg
cmp
insb
dec
adc
in
mov
adc
fdivr
stos
es
xchg
in
ret
popa
imul
or
mov
push
bound
dec
xor
mov
repnz
cmpsl
ja
fildll
call
mov
adcb
mov
sbb
pop
test
push
cs
mov
out
scas
cmp
cmpsl
and
xor
jl
inc
fwait
movsl
push
test
cmp
out
or
clc
stos
lds
int3
fwait
rcrl
adc
test
fcomps
mov
pop
cli
loop
adc
dec
sbb
decb
jp
xor
shlb
repnz
mov
fdivrl
iret
test
pop
test
data16
mov
inc
fs
lret
lods
xchg
in
push
loop
daa
int3
iret
stos
or
cmp
jnp
in
and
jae
or
adc
loop
cmp
xlat
xchg
pop
mov
dec
lret
rclb
pop
repnz
mov
mov
adc
cltd
or
xor
std
adc
into
lea
jmp
icebp
ror
adc
jno
push
in
or
mov
cmp
jbe
adc
push
dec
adc
pop
and
jp
xchg
cmp
inc
test
inc
je
sub
lods
push
xchg
xchg
pop
mov
std
xchg
inc
cmpsl
dec
lods
gs
lods
push
sub
mov
pusha
icebp
in
mov
push
and
insb
insl
mov
rclb
jp
xchg
movsb
mov
pop
mov
add
enter
lea
js
mov
pusha
outsl
stc
cmc
aas
icebp
dec
mov
neg
addr16
outsb
mov
and
out
pop
xor
push
cmp
dec
dec
cmpb
push
daa
cmp
fld
mov
jb
aam
sub
pushf
outsb
cmc
and
out
push
cwtl
push
adc
cli
xchg
pop
lods
sbb
loopne
pop
mov
xchg
rclb
cmp
mov
scas
inc
out
cmp
fnsave
call
xor
and
sbb
in
stos
inc
jl
ret
fwait
and
stos
pop
out
bound
mov
mov
push
fisttps
pop
out
addr16
add
push
mov
mov
jle
pop
pop
fcoms
fwait
push
mov
adc
sarb
outsl
or
lea
cwtl
insl
std
mov
pop
int3
adc
int
lret
xlat
sbbl
sbb
and
enter
stos
pushl
outsb
add
aas
movsl
pop
aam
arpl
fistl
mov
push
xchg
pop
popa
add
idivl
dec
cmp
jle
cmpsb
fcomps
idivl
lea
enter
pop
lret
pusha
cmp
cli
iret
fdivl
test
rorl
push
dec
shll
mov
inc
movl
subb
push
sub
int
fdivrs
ret
jo
pop
subl
cltd
sbb
dec
test
aad
dec
sbb
adc
ss
xchg
in
push
jge
sub
rorl
sbbb
sub
mov
data16
shr
js
es
nop
mov
xor
sub
add
loop
loop
nop
jg
int3
insb
hlt
lret
loop
sub
pop
mov
orb
enter
adc
repnz
sub
add
mov
imul
jg
xor
inc
pushf
pop
sets
jae
xor
xor
lods
lock
imul
sub
outsb
repz
mov
push
mov
daa
or
xchg
and
mov
inc
xchg
hlt
xchg
dec
call
sub
cmp
cmp
in
sbb
sbb
xchg
aaa
xlat
push
inc
jecxz
mov
inc
out
xchg
xchg
ret
push
inc
push
cmp
xchg
fidivrs
std
lock
cmpb
lea
gs
test
push
fnstcw
cmp
xchg
mov
and
mov
adc
xor
int3
outsb
jae
daa
adc
or
mov
and
adc
es
nop
jge
inc
pushl
ret
inc
lret
xor
pop
mov
test
loopne
inc
ret
sarb
mov
mov
int
dec
jl
dec
movsl
pop
rcll
mov
inc
xlat
mov
push
jne
mov
pusha
push
sub
jmp
and
or
and
cmpsl
outsb
cmpsl
mov
int
xor
mov
mov
mov
sub
fdivs
testl
push
jns
les
and
pop
cmpsb
xor
fdivr
scas
mov
inc
add
adc
adc
mov
nop
sbb
neg
xor
add
addr16
lahf
lcall
cli
or
adc
xchg
sub
cmpsb
pop
cmpsb
into
loopne
adc
add
sub
lcall
xchg
loopne
fs
dec
jge
push
add
mov
fmul
push
test
jae
xchg
std
fistl
and
loope
sbb
pop
outsl
mov
pusha
gs
lcall
es
pop
adc
sbb
call
roll
dec
push
add
into
xchg
nop
cmpsl
cmp
xchg
adc
in
lret
pop
inc
cwtl
mov
imul
shlb
xor
mov
lea
and
pop
mov
xor
mov
lods
or
mov
jns
lock
test
sbb
rol
sbb
lea
push
push
popf
cltd
inc
add
cmp
insl
cwtl
cmpsl
fnstcw
push
add
xchg
and
les
mov
jns
out
mull
jno
xor
xorb
fistpl
adc
xor
push
ret
pop
jp
and
fdivs
push
daa
mov
mov
mov
push
xchg
dec
inc
mulb
jp
gs
sub
xor
push
cltd
arpl
xchg
les
xor
add
imull
push
mov
jp
or
iret
xor
mov
iret
sub
pusha
aad
jmp
xchg
sar
shl
sub
lahf
into
icebp
xchg
ljmp
nop
mov
sbb
sub
xchg
mov
scas
mov
lock
sub
sbb
popa
int
mov
xchg
pop
imul
or
jbe
into
mov
push
or
inc
nop
xchg
add
mov
mov
rorl
lods
xchg
repnz
pop
jb
repnz
push
ret
push
sbb
or
mov
jne
mov
and
js
jbe
jno
lahf
sbb
adc
pop
sub
mov
add
cmpb
dec
xlat
dec
insb
clc
pop
popa
and
fbld
fsts
dec
adc
fmull
cwtl
cmpsl
mov
shl
mov
pop
dec
orl
add
pop
or
pop
jb
adc
sbb
orb
and
mov
in
jmp
inc
daa
clc
xchg
sbb
popa
fmul
insl
iret
mov
inc
in
pop
xor
xor
dec
gs
mov
and
stos
xchg
repnz
jb
dec
pop
test
insb
pop
notl
popf
in
je
lcall
dec
adc
jbe
inc
or
icebp
dec
and
imul
fs
xchg
jns
movsb
aam
sbb
push
shll
imul
mov
jnp
nop
cmpsb
jle
ret
inc
cltd
scas
lds
dec
test
xchg
dec
cltd
pop
cld
mov
repnz
aam
xchg
pop
jge
add
mov
imul
seta
xchg
xor
cli
lret
xchg
aas
push
or
push
rcr
hlt
push
xchg
add
dec
rorl
icebp
pushf
jge
sahf
outsl
lds
pop
es
dec
inc
fsubrl
or
dec
mov
ss
mov
add
lret
xor
jns
mov
or
add
rcll
jo
add
cmp
loop
fildl
jne
sbbb
jae
movsb
outsb
adc
scas
das
loop,pn
clc
sub
xor
test
cmpsb
adc
xchg
dec
imul
pop
andb
sahf
mov
pusha
cmp
test
pop
mov
push
cli
cmpsb
push
leave
lret
jne
push
mov
sar
cmp
xor
and
dec
add
or
loope
mov
bound
std
mov
fbstp
pop
xor
inc
add
adcb
xor
sub
lret
out
stos
push
or
sbb
adc
cmp
mov
push
xchg
xor
xchg
inc
push
scas
inc
xchg
mov
push
idivl
lret
mov
arpl
pop
faddl
add
cmc
mov
dec
xchg
clc
sub
rolb
add
pop
rcrb
fmuls
outsl
jno
scas
or
lds
jbe
leave
stos
scas
or
ret
sbb
xor
fwait
inc
add
sbb
push
es
lock
mov
in
rolb
push
nop
hlt
div
sub
in
stc
pushf
ret
sbb
sub
sub
fxch
add
cs
in
pop
xchg
sub
mov
or
inc
adc
dec
or
pop
ds
mov
movsb
push
in
mov
sbb
sub
sbb
lahf
popa
jp
sbb
cltd
mov
ret
pop
adc
and
repz
out
mov
stc
bound
rol
popf
call
jno
hlt
imul
mov
and
adc
and
arpl
fildl
stc
mov
xor
insb
dec
insb
jb
xchg
in
and
mov
jg
rorb
push
add
lcall
lods
cmovl
add
pop
mov
sar
movsb
lret
xchg
mov
fstps
push
or
ds
adc
inc
push
sbb
xor
push
stc
leave
xor
jmp
inc
bound
pop
cmc
push
inc
and
test
popf
movsl
push
pop
out
push
sti
and
iret
daa
ss
pop
xchg
mov
pusha
ds
pop
repnz
and
repnz
jge
xchg
out
shll
test
adc
cwtl
iret
and
jle
fmuls
xor
cli
iret
jp
and
xchg
movsb
dec
add
push
icebp
mov
mov
adc
inc
mov
fdivrs
fs
test
filds
out
add
pop
imul
es
rclb
daa
sub
adc
popl
xchg
jecxz
adc
lcall
push
cltd
adc
es
in
mov
pop
ficompl
repz
pop
push
stc
pop
push
and
mov
pop
mov
sub
daa
dec
push
ret
or
out
xor
push
mov
cmp
xchg
jg
enter
shr
bound
popw
aad
mov
pop
jne
xlat
pop
adc
dec
popf
pusha
fcmovbe
ss
lcall
popf
add
sub
call
jmp
push
js
pop
xchg
das
cmpsl
stos
pop
inc
xor
imul
cmpsb
and
jp
fdiv
cs
dec
sbb
stos
into
push
mov
mov
xlat
je
fistl
sbb
lahf
cmp
mov
imul
inc
mov
jecxz
popa
sub
ss
movsb
jbe
mov
fildl
mov
test
mov
add
xchg
mov
lock
add
int
xor
or
dec
xor
aaa
ds
imulb
mov
icebp
sbb
rcl
push
call
pusha
xchg
jge
sub
ret
xchg
mov
std
shl
push
or
inc
shlb
sbb
jecxz
adc
ret
push
pusha
add
xlat
push
daa
lods
push
jo
shll
outsb
rclb
push
aad
sub
xchg
rorl
add
decl
mov
push
idiv
mov
call
mov
or
xchg
and
xlat
sub
xchg
add
cmp
arpl
mov
ss
sbb
pop
fs
in
ds
out
push
mov
fiaddl
lcall
mov
cmp
jb
stos
add
clc
xor
mov
mov
inc
ljmp
cmp
in
aad
shrl
sbb
lods
movsl
iret
mov
call
or
shlb
es
add
mov
inc
inc
mov
iret
sub
sub
push
int
push
adc
in
out
mov
cmp
lds
cmp
xor
xchg
sbb
addl
push
out
cmp
and
pop
out
fcomps
pop
dec
outsb
push
pop
and
sbb
inc
lds
in
cmp
lods
add
fwait
or
sbb
sbb
ja
and
jb
sbb
mov
mov
cmp
lock
mov
or
xchg
cmp
lea
test
adc
cwtl
addr16
test
repz
mov
lock
lret
faddl
add
dec
or
cltd
ja
inc
xchg
movsl
popa
test
cld
lahf
icebp
fmull
inc
icebp
mov
clc
or
ret
cmpsl
jge
ds
loopne
push
add
cmpsb
fnsave
inc
pop
repz
dec
dec
popf
jo
inc
push
sbb
push
aas
std
clc
adc
lcall
mov
ret
imul
jg
ja
push
fdivrs
push
inc
shrb
mov
sbbb
push
test
les
les
xor
add
out
hlt
push
in
sub
imul
iret
add
mov
repz
out
out
iret
pop
test
imul
fidivl
cs
push
inc
mov
add
fstpl
addr16
xchg
sbb
out
or
mov
ss
cli
sbb
cmp
mov
repz
xor
iret
fwait
lret
push
shr
in
jecxz
addr16
out
std
xor
test
push
outsl
push
andb
rol
cwtl
inc
ret
add
inc
adc
lret
and
push
add
imul
sub
push
mov
cmpsb
icebp
stos
add
fcompl
ja
fstl
jge
fsubl
out
cmp
hlt
push
inc
mov
or
inc
mov
xor
in
xor
cld
adc
xchg
cwtl
ja
push
adc
cmp
sub
movl
ss
lds
push
xchg
pop
cmpsl
xchg
cwtl
test
add
lret
std
jecxz
sti
add
or
mov
fs
jns
cmp
cmp
mov
add
lea
aas
std
fildll
movsb
xchg
xchg
fdivs
pop
and
cmp
push
cmc
pop
mov
jg
popa
adc
jo
sbb
fmul
gs
mov
gs
and
pop
lods
mov
sbb
ror
ret
xorl
cmc
pop
inc
and
mov
repz
es
sarb
mov
into
mov
in
adcb
pop
jmp
ret
mov
push
sbb
icebp
xchg
dec
mov
sti
xor
mov
out
xchg
mov
stos
fnsave
stos
jg
inc
mov
lea
xchg
xor
in
or
push
lret
add
dec
fwait
jge
divb
mov
dec
inc
ljmp
movsb
or
xchg
adc
xor
jae
and
nop
dec
dec
xchg
in
inc
mov
inc
sahf
test
cwtl
arpl
push
mov
ss
and
je
ja
cmp
xor
pop
enter
and
movsb
out
hlt
and
inc
call
adc
sub
lcall
lahf
push
outsb
mov
xchg
jo
aas
iret
jb
mov
sub
push
mov
xor
push
sub
movsb
inc
repz
test
mul
pop
fwait
pop
jae
jne
sub
mov
mov
aam
mov
add
lahf
out
icebp
jae
fsubr
adc
int
into
or
adc
xor
outsl
test
lea
imul
cld
sbb
push
push
test
pop
test
or
jbe
sbbb
test
inc
decb
push
adc
fnsave
sar
in
inc
ficomps
add
test
add
aam
jbe
movsb
add
arpl
repnz
ljmp
sub
dec
mov
out
add
xchg
jne
push
and
in
repz
mov
insb
push
bound
sub
in
dec
cmc
sbb
iret
dec
in
arpl
and
arpl
pop
das
fcompl
push
fisubrs
push
pop
popf
push
sub
movsl
stc
sbb
push
mov
jnp
inc
outsb
push
fcompl
sub
das
rcl
icebp
add
mov
fimull
xchg
jbe
sarl
and
or
jno
cmp
mov
pop
fwait
add
cmpb
pop
xchg
push
movsb
sbb
and
inc
xor
xchg
repz
and
sbbl
adc
cltd
ja
test
shl
pop
jae
dec
cmp
repz
ds
lea
pop
xchg
aas
js
push
or
das
shrb
arpl
xchg
mov
loope
jns
popa
clc
push
insl
cmp
or
lret
pop
fcmovnb
inc
sub
jmp
bound
test
xor
fcmovu
and
add
lcall
je
push
cwtl
sahf
pop
icebp
in
adc
nop
mov
mov
adc
mov
les
mov
test
jns
mov
jno
sub
aaa
mov
int
out
call
pop
dec
adc
ret
mulb
idivl
mov
jbe,pn
jno
lea
inc
nop
inc
cwtl
test
sbbl
xor
pop
push
push
jnp
js
sti
jae
hlt
imul
ficoms
je
ficomps
and
sbb
and
or
int
cmp
test
mov
ret
add
icebp
jbe
cmc
mov
pop
ret
mov
pop
test
push
xchg
cwtl
adc
cwtl
pop
outsb
mov
cmpsl
mov
aam
dec
push
lcall
mov
cmp
pushf
lret
jp
inc
out
push
in
ljmp
cmp
ljmp
push
xor
mov
jno
push
adc
mov
addr16
sub
cmp
fsubl
out
push
iret
push
push
in
dec
in
inc
fmuls
lds
jg
dec
jb
fwait
jne
sbb
repz
ss
je
pop
cs
adc
out
pop
adc
jl
jg
arpl
leave
mov
push
or
aaa
xor
jae
sub
pop
icebp
push
and
rolb
push
xlat
fidivrs
pop
push
mov
sub
lret
test
test
test
inc
daa
into
jnp
hlt
cli
data16
sbb
xor
cld
or
jbe
push
dec
js
jnp
add
aad
xor
ret
inc
fimull
jae
cld
xchg
xchg
jle
mov
jns
call
lcall
pop
fimull
imul
push
fisubl
or
push
stc
cmp
mov
adc
fiaddl
jp
aaa
fcoms
adc
jae
sti
scas
out
aad
mov
loope
lods
push
sub
in
in
lret
int
pushf
pop
cmc
cmp
dec
mov
popf
sub
jnp
and
adc
push
test
add
sub
pop
loope
stc
mov
pop
dec
push
scas
jae
test
dec
icebp
add
dec
popa
data16
jl
push
inc
adc
sti
dec
add
cmc
nop
testb
lahf
cmp
fidivs
mov
xchg
shll
cmp
lock
dec
xchg
xor
jg
out
mov
pop
jle
jp
jl
dec
aas
dec
je
jecxz
sub
push
leave
xor
mov
icebp
mov
mov
xchg
lods
mov
into
ja
cmp
dec
mov
jae
mov
xor
inc
out
cmc
add
sub
cmp
ret
push
sub
fcmovnb
out
mov
xchg
addr16
jp
push
push
push
push
pop
sbb
mov
mov
popa
jbe
shll
mov
stos
inc
iret
in
sub
mov
out
sbbb
sti
shl
divb
int3
jno
push
dec
out
cld
jb
jl
inc
aam
mov
xchg
aas
jb
push
pop
lret
cld
sbb
dec
flds
sub
xor
mov
cwtl
out
cmp
stos
push
xor
imul
pop
aam
gs
sub
mov
bswap
fistpl
adc
test
mov
ds
leave
or
arpl
cld
or
les
aad
outsl
push
mov
sub
pop
push
fisubl
jp
xchg
out
sbb
imul
rclb
or
cmpsb
adc
out
idivl
mov
adcb
ja
into
jp
adc
ss
stos
insl
popa
cmp
nop
lret
bound
adcl
lea
sbb
cs
pop
xchg
enter
cmpsb
mov
shl
jle
pop
imul
push
stos
lds
add
push
sbb
mov
lods
push
out
push
sahf
mov
mov
sbb
loopne
les
pop
and
leave
or
in
mov
lcall
cmp
in
cmp
popf
cmp
rcr
jge
outsl
xor
or
iret
nop
xchg
mov
orl
xchg
cmc
out
pusha
lods
pop
shll
clc
add
jle
lods
and
pop
lret
out
clc
aam
cmp
sbb
xchg
jb
sbbl
push
jo
cmp
ljmp
adc
cwtl
jae
shrb
aad
ja
pop
pop
pop
push
mov
cmc
lods
fs
in
push
addr16
push
icebp
pop
divb
xor
xor
mov
in
in
cs
das
lret
mov
fidivs
jge
mov
cmc
mov
lea
pop
sbb
scas
das
fstl
fsubrl
int
ds
push
lret
adc
mov
and
lahf
mov
and
daa
iret
sub
jae
out
xor
pop
ret
loop
hlt
scas
cmpsl
xchg
adc
or
mov
add
stos
push
mov
mov
fidivl
les
pop
mov
sub
mov
fdivl
fcomps
dec
sbb
and
inc
ficompl
adc
or
cmpb
mov
cmpb
inc
jmp
sub
cmp
lret
push
mov
fwait
sbb
movsl
pushf
push
adc
mov
sar
pop
es
xor
sbb
mov
cmpb
testl
jbe
ja
imul
and
popf
push
push
fsubrs
inc
jbe
test
xor
mov
ficoml
xchg
push
repz
popa
push
dec
fsubrp
and
ja
call
sbbl
pop
cmp
icebp
adc
ja
xchg
jbe
sahf
mov
xchg
sub
pushf
and
fistpl
rclb
jo
out
dec
repz
std
loop
les
jl
ljmp
add
in
nop
cwtl
lock
dec
jns
xchg
xor
inc
or
xor
dec
pop
movsb
push
repz
add
movsl
test
jl
mov
aad
jmp
ds
enter
rolb
mov
in
mov
daa
dec
xlat
mov
inc
neg
jnp
rorl
inc
outsb
bswap
dec
unpckhps
adc
cltd
int
call
es
cmpsl
mulb
leave
inc
jns
fidivs
fmul
mov
fnstsw
mov
jae
mov
inc
mov
and
rol
loope
add
sub
hlt
ds
sbb
jecxz
lock
sub
push
xchg
loop
cld
jecxz
out
mov
dec
xor
xchg
pop
sti
jg
pusha
loop
cmpb
cmpsl
sub
jbe
mov
adcl
mov
arpl
and
mov
jmp
cs
rolb
jbe
loopne
dec
pusha
xchg
add
lods
xor
jns
add
outsl
nop
aaa
push
ss
bound
adc
bnd
loopne
cltd
mov
xchg
fisttpl
aad
jecxz
lea
stos
addr16
inc
test
sahf
jmp
stos
sahf
pushf
fwait
sub
adc
repz
in
dec
mov
movsl
lcall
scas
sti
add
stos
nop
ret
lret
dec
push
dec
add
call
dec
test
repz
adc
out
pop
cmpl
aam
mulb
xchg
push
jg
clc
andl
xchg
xchg
mov
leave
ss
sub
jbe
in
mov
std
sub
lods
movsb
xchg
jl
adc
mov
fld
mov
repz
in
mov
fsubrl
xchg
sbb
lret
add
xchg
and
push
data16
pop
pop
rcrl
and
mov
aaa
les
cmpsb
pushf
mov
xchg
xchg
imul
out
es
mov
xor
cmpb
out
mov
aaa
fs
jle
jno
pop
sbb
mov
lahf
add
sahf
cmc
sub
and
mov
lret
sub
cmp
ja
cmc
inc
movsl
jp
fnstcw
xor
fstpt
lcall
mov
inc
xorl
pop
in
loopne
mov
fyl2xp1
mov
ss
pop
mov
adc
dec
cmpsl
in
pop
sbb
stos
push
ret
les
fstps
or
cmpsl
lret
mov
ret
ds
addr16
xchg
sub
xchg
adc
mov
pop
popf
pop
inc
mov
pop
cld
lahf
xchg
adc
add
stos
pop
pop
jae
mov
in
lods
mov
xlat
xor
inc
arpl
xlat
cli
mov
pop
inc
int
iret
mov
sbb
lds
pushf
mov
aad
daa
sbb
dec
rcll
shl
xchg
mov
pcmpgtb
inc
jb
inc
popa
and
lods
dec
jecxz
pop
mov
xchg
fs
xor
scas
xor
shr
mov
xor
pop
in
pop
fstps
imul
jg
jb
fisttpll
sbb
adc
aad
xorb
fnstenv
js
nop
fnstsw
cs
ss
inc
push
int
fsts
push
rclb
add
mov
add
inc
repz
xchg
fldt
mov
stc
lret
mov
incb
inc
mov
rorb
inc
pushf
movsb
hlt
xchg
jne
mov
xchg
in
push
in
daa
pop
xor
cmp
mov
cmc
cs
sbb
jg
xorl
sbb
test
add
push
adc
or
mov
pop
cs
pop
sbb
cmp
sbb
mov
call
sbb
mov
xchg
mov
test
mov
xchg
shlb
cmpsb
dec
dec
icebp
lock
scas
xor
or
fistpl
movsb
xor
sub
daa
dec
outsl
sbb
sub
cmpsw
cld
sbb
and
cli
push
add
fbld
testb
mov
ja
and
mov
push
add
mov
notb
xchg
sbb
cmp
sbb
movsl
test
fisttps
dec
xchg
imul
cmp
push
out
or
sahf
dec
sub
aad
or
fs
adcl
jge
sbb
mov
push
cmp
add
int3
mov
or
mov
mov
add
jbe
jo
sub
cli
sbb
jns
jb
and
mov
inc
repz
paddusw
daa
mov
movsb
pop
sbb
je
int3
mov
cmp
cltd
sbb
lret
mov
jns
nop
ret
add
loope
fimull
ret
cmc
push
pushl
jnp
xor
mov
xchg
jp
enter
and
cld
test
inc
cli
cltd
mov
add
insl
mov
jbe
pushf
hlt
lret
xor
cmp
inc
mov
push
arpl
add
dec
pop
fisubrs
xchg
inc
fcmovnbe
sbb
pop
enter
outsb
xchg
jns
mov
jle
mov
sti
out
in
mov
pop
in
and
shr
aam
bound
std
push
cmp
mov
cli
movsl
lret
jle
lea
mov
lahf
xchg
mov
out
jmp
dec
mov
sti
pop
cmp
mov
xchg
jae,pn
xor
data16
dec
mov
push
pop
cmp
das
add
pop
push
scas
ljmp
movsb
int3
dec
and
mov
mov
jns
inc
xchg
xchg
dec
out
pop
arpl
movsl
mov
jne
push
fiaddl
dec
xor
dec
data16
test
sub
sub
cs
mov
int
fiadds
rorb
sub
lret
jae
es
aam
or
in
das
pop
jmp
or
imul
mov
bound
lcall
add
aad
adc
mov
lods
xor
jge
popa
fidivrl
cmpsl
imul
out
cmpsb
fnsave
jne
and
std
mov
mov
imul
push
jne
loopne
sub
adc
push
fisubrl
daa
add
adc
sbb
lock
loope
sub
aad
jecxz
cld
lcall
cmpsb
add
mov
rcrb
cmpsb
ror
mov
fistpll
ret
jae
fnstcw
xor
pop
test
and
insb
mov
jbe
mov
adc
xlat
loop
xchg
push
int
mov
aas
nop
loop
fisubl
sub
and
test
imul
adcb
lock
scas
aam
aas
imull
int
sub
str
add
pop
pop
mulb
mov
test
adc
inc
fwait
jae
filds
sar
push
call
rorl
jp
or
pop
je
and
out
mov
xor
les
inc
cmp
rcll
unpcklps
sub
mov
imul
es
xlat
xchg
insb
icebp
gs
decb
sbb
imul
dec
aas
ret
pop
xor
xor
or
xchg
enter
cmp
dec
mov
int3
cbtw
mov
add
pushf
sub
aad
push
mov
xchg
dec
lcall
fwait
mov
pop
scas
fisttpll
sbb
push
enter
bound
ss
mov
xchg
and
cmpsb
int3
lock
inc
and
inc
cmp
fidivrs
pusha
mov
lahf
scas
addl
imul
lods
shl
sbb
jp
xor
pop
imulb
fmulp
adc
or
adc
mov
mov
rcll
sarl
push
mov
xor
mov
fisttps
into
daa
add
fwait
dec
lahf
or
faddl
pop
into
hlt
xchg
daa
mov
adc
xor
jno
adc
adc
jecxz
jbe
jp
sub
ret
call
add
cltd
fistpl
jle
sbb
mov
out
xchg
fwait
out
add
mov
aaa
add
ret
imulb
fldenv
mov
and
ds
dec
outsb
out
pop
add
inc
movsb
push
scas
fcmovbe
add
or
fimuls
inc
lret
sub
adc
clc
imul
mov
loopne
jns
xlat
pushf
scas
cmpsl
push
or
rorb
inc
or
sbb
xchg
jmp
or
add
push
adc
enter
aas
or
fs
cmp
clc
xor
faddl
test
fdivrs
jg
lahf
or
clc
mov
dec
pop
dec
sub
fnstsw
dec
sbb
idivb
data16
xor
popf
test
lods
sarb
adcb
add
xchg
in
add
add
lds
pop
push
sbb
and
call
repz
adc
fstp
stos
nop
or
loop
loop
sbb
xor
dec
aam
fsubl
ja
mov
jne
push
cltd
mov
sbb
and
addr16
inc
insb
int
repnz
inc
cltd
cmp
lcall
push
negl
sub
les
mov
or
pop
aaa
pop
mov
out
pop
jne
pop
ret
xor
push
das
lretw
add
cli
xor
xorb
and
or
dec
testb
dec
adc
inc
pusha
scas
pop
jns
mov
out
mov
push
sbb
pop
adc
mov
jo
scas
mov
xor
shll
cmp
insb
cmpb
jp
jae
ss
call
mov
push
mov
jge
pusha
in
mov
pop
jg
data16
push
mov
subl
cli
mov
cmp
jne
ja
dec
out
in
cltd
add
mov
xchg
leave
mov
mov
adc
fiadds
xor
mov
scas
mov
test
out
scas
bound
jl
cmp
sub
pushf
insl
ret
push
lods
aad
xchg
subb
shrb
call
push
mov
sub
fistps
mov
ficoml
adc
mov
cmp
out
cmp
adc
ljmp
scas
aam
loopne
sub
ds
push
xchg
xor
decb
cmp
out
adc
add
push
les
xor
cmc
imul
repnz
leave
mov
xchg
xchg
sub
push
out
mov
hlt
ds
shr
ret
mov
mov
dec
mov
jle
idivl
xor
enter
cmp
adc
mov
aas
dec
repz
xchg
fisubs
xor
fistpl
mov
push
gs
ficoms
pop
sub
ds
sti
dec
mov
arpl
mov
xor
sub
mov
movsb
lret
idivl
mov
or
call
daa
cld
jmp
ds
std
aaa
rorl
in
test
jmp
andl
stos
xchg
mov
imul
in
in
cs
push
ret
mov
push
rclb
xchg
stos
dec
shl
sub
push
cltd
fs
pop
test
xchg
jmp
test
ds
decb
cmp
inc
mov
out
movsl
shl
cmp
movsb
repz
inc
xor
or
pop
hlt
icebp
testb
mov
popf
jp
add
iret
test
push
ret
inc
cmp
sbb
lea
bound
inc
lods
sbb
xchg
mov
imul
loopne
addr16
sub
popa
cmp
ss
sub
cld
push
test
inc
es
insb
lds
fwait
aad
push
cmp
adc
dec
cltd
in
xchg
stc
and
mov
add
cmpsl
mov
push
xchg
daa
jge
lret
mov
pop
ds
out
sub
jns
das
jnp
sbb
push
cs
mov
dec
xor
fwait
lods
push
mov
dec
jns
test
shl
imul
adc
or
loop
push
add
jge
kmovw
ja
inc
lahf
xchg
loope
cli
push
jo
mov
fiaddl
jbe
test
mov
mov
hlt
sti
sub
in
mov
iret
xchg
out
sar
data16
push
ret
push
sub
pop
movsb
fdivrl
mov
jne
sti
pop
pusha
jb
in
stos
loopne
out
es
or
or
nop
cmpsl
mov
jbe
pop
pop
arpl
xor
rcr
and
mov
fldt
mov
out
fsubrs
push
ljmp
enter
mov
mov
pop
shlb
jne
jg
aas
leave
sar
sub
cld
dec
xchg
in
enter
lods
mov
cmp
push
and
cld
xchg
js
inc
mov
xchg
movsb
clc
cwtl
push
xor
sbb
pop
push
xor
out
scas
adcb
imul
loop
mov
out
inc
imul
mov
cmc
hlt
inc
test
dec
je
sbb
cmp
xor
mov
sbb
pop
dec
xchg
jl
mov
xchg
mov
pop
inc
cmp
dec
mov
push
lahf
cmpsl
clc
xchg
or
outsb
ret
jo
mov
dec
xchg
pop
imul
pop
js
inc
jne
pusha
mov
sbb
fdivrs
pop
add
ds
jl
cmpsb
xor
cmp
or
int
test
cmp
int
sbb
les
mov
pop
orl
and
mov
mov
mov
test
mov
test
bound
ljmp
add
test
daa
and
lods
xorb
cmc
enter
sbb
mov
xor
cmpsl
mov
xorl
aam
std
jno
jno
aaa
clc
pop
sbb
xor
sarb
inc
mov
sub
pop
push
dec
movl
in
imul
mov
cmp
lahf
scas
push
sub
mov
loope
nop
cld
insl
mov
jae
notl
xor
movsl
xchg
test
sbb
pusha
das
inc
mov
push
loope
fcmovnb
push
jnp
xchg
aas
cmc
rcl
sub
push
add
jge
mov
adc
scas
xchg
das
sub
mov
imul
mov
add
and
xor
adc
dec
inc
and
enter
mov
mov
mov
jl
std
jno
cmp
das
and
out
pop
mov
jno
dec
call
pop
pop
mov
add
shrb
push
in
rclb
xchg
adc
or
push
adc
cltd
sbb
sub
or
mov
xlat
xchg
jl
lret
popf
hlt
decl
fidivl
fs
orl
cmp
ficomps
sub
adc
or
inc
or
fucomip
out
adc
dec
mov
add
loope
fdivrp
mov
imul
push
sub
xor
popf
adc
jge
les
mov
xchg
stos
inc
inc
sti
and
inc
inc
stos
xchg
push
stos
mov
push
shlb
pop
roll
rclb
add
add
cwtl
cli
popa
pop
pop
jmp
lods
xchg
mov
cld
jbe
popa
outsl
mov
lock
push
adc
cmp
sbb
mov
adc
in
pop
xor
faddp
lahf
lods
cmp
inc
mov
mov
arpl
or
push
xlat
imul
cs
xchg
pop
hlt
cs
adc
popf
lods
shrl
insl
das
add
aas
mov
pop
mov
lahf
das
mov
out
lcall
icebp
pushw
xchg
decl
push
jp
out
push
test
aas
cmp
cltd
xor
cmp
jecxz
jmp
pop
rcrb
sbb
push
cli
xor
dec
mov
xlat
xchg
ja
arpl
adc
mov
js
loop
xchg
pushl
mov
fsubrs
inc
jns
sub
cltd
xchg
mov
and
sbbb
xchg
daa
push
or
push
inc
adc
mov
faddl
call
xlat
lret
mov
cmpsb
mov
adc
cmc
scas
lds
jp
outsb
rorl
push
pop
imul
add
rcrl
jmp
addr16
scas
sub
fidivs
or
sub
jge
jmp
mov
mov
pop
mov
pop
icebp
test
lahf
push
cwtl
nop
testb
mov
popa
or
adc
test
adc
aam
push
push
mov
clc
sub
ja
dec
mov
cmpsb
movsb
ficompl
cmpsb
idivl
test
xchg
cli
bound
sbb
mov
fs
dec
fstpl
jmp
std
jb
out
jns
mov
repz
cltd
sub
cmp
push
aas
cld
stos
notb
xor
adc
xlat
sbb
outsl
xor
lcall
scas
outsl
repnz
jge
cli
push
jl
aas
into
sbb
lods
dec
fadd
sub
test
push
and
jo
ret
ja
rorb
je
sub
into
in
add
push
cli
dec
fnstcw
cltd
xchg
loope
js
xchg
xchg
push
int3
inc
sbb
dec
jg
imul
mov
push
mov
mov
and
xor
addr16
fnstsw
iret
xor
scas
mov
loope
add
iret
mov
jns
xor
ret
loope
clc
fcoms
mov
mov
outsb
ficoml
push
xchg
lods
xlat
or
xchg
inc
out
icebp
push
mov
push
movl
sbb
lret
push
aaa
jb
mov
or
les
fcmovnb
aaa
pop
rcll
or
in
dec
ljmp
xchg
fildl
push
push
pusha
pop
or
test
test
sub
xchg
adc
xchg
popa
xchg
sahf
cmc
addr16
push
inc
cli
in
xchg
imul
out
mov
jb,pn
nop
add
xor
push
ss
lods
popf
into
and
mov
jle
stos
jmp
aaa
sbb
pop
add
inc
mov
push
aam
stos
jo
xchg
test
cmp
xor
push
xchg
mov
sarb
aaa
adcb
mov
dec
js
idivb
pop
rorb
mov
ds
add
inc
and
stos
aas
cmpl
adc
popf
stc
ret
insb
dec
icebp
or
or
pushf
mov
or
popa
or
jle
mov
jmp
es
test
stos
dec
data16
lds
sub
jb
xchg
mov
jnp
sub
cmc
pop
jmp
ljmp
adc
adc
insb
daa
pop
xor
int
and
sub
int3
add
push
test
push
loop
and
sbb
in
hlt
push
or
xchg
pop
leave
jle
into
mov
in
jmp
loop
in
jl
lock
add
int3
and
cmc
aam
jp
test
xchg
insb
mov
inc
inc
outsl
nop
push
push
clc
out
xchg
sub
mul
shrb
xchg
divl
or
inc
jns
fdivl
stos
cmp
lahf
aas
nop
jmp
jo
leave
push
clc
xchg
mov
imul
jmp
push
enter
inc
mov
mov
jnp
pop
rcrl
cmp
sbb
jae
cmpsb
cmp
push
fldt
cmp
stos
arpl
xchg
xchg
mov
push
lret
shrb
stos
jg
jmp
xor
add
inc
les
negl
daa
jmp
xchg
mov
nop
shlb
leave
mov
sub
and
push
nop
xor
negb
mov
into
inc
adc
shr
push
sub
ror
push
lcall
adc
push
sub
test
push
mov
sbb
aam
in
push
mov
cmpsl
add
mov
sbb
incb
xor
or
cli
cmc
call
mov
ret
xchg
cmpsl
mov
mov
push
inc
sahf
inc
inc
push
inc
sbb
xchg
inc
lret
cmc
negl
inc
xchg
popf
lods
or
popf
mov
fdivl
dec
adc
iret
fisttpl
bnd
nop
cmp
loope
lods
fwait
mov
lods
push
cltd
jne
sbb
jne
addr16
rcr
add
repnz
push
jmp
sti
cmp
xorb
stc
mov
push
add
mov
pop
stc
cs
dec
mov
repnz
cli
push
and
jp
sub
cmp
lea
fdivrl
xorl
xor
lret
mov
xchg
dec
push
xor
test
fwait
pop
fidivs
mov
sti
fldt
and
popf
cmpsl
lret
adc
ja
sbbb
jmp
sbb
cwtl
mov
mov
test
and
fwait
pop
popa
je
stc
xchg
hlt
xor
mov
push
mov
and
std
or
call
stc
mov
mov
bound
jge
aam
xor
jbe
sub
pop
mov
or
bound
cmp
in
mov
sub
add
ret
out
xorl
mov
out
inc
and
fcmovu
push
fistps
jno
inc
rolb
test
inc
adc
lock
divl
testl
outsl
call
fwait
or
adc
xor
jae
test
int
fwait
or
mov
popf
test
jp
addb
add
inc
jb
jae
jecxz
cld
xchg
mov
cmpsb
adc
pop
fmull
xchg
xor
aas
sbb
pop
loope
push
sahf
inc
add
and
or
cli
or
lods
xor
sbb
xor
gs
je
and
fwait
sbb
jl
shlb
pop
stos
mov
loope
pushf
mov
jmp
xor
jle
enter
out
push
inc
in
sahf
jmp
mov
pushf
test
pop
rorl
push
mov
fnstsw
push
mov
jae
push
mov
mov
sbb
mov
orb
jl
push
xor
fsts
insb
aas
jns
cmpsl
jge
cmc
or
pop
sbb
dec
lcall
lcall
sub
xor
adc
popa
push
add
push
mov
mov
mov
jno
mov
inc
iret
xor
sahf
test
or
mov
or
setle
push
sub
push
je
out
push
mov
lods
rorl
lahf
inc
push
in
mov
xchg
or
pop
sbb
sbb
fsubrl
test
pop
enter
mov
xchg
or
into
roll
sub
adcl
rol
out
push
cmpsb
lods
inc
shl
mov
shl
int
lahf
mov
inc
mov
push
xchg
ljmp
or
lret
mov
test
mov
adc
or
jecxz
ret
mov
mov
jae
or
mov
xchg
xor
stos
mov
mov
xchg
cld
cmpsl
mov
out
inc
addr16
mov
and
pop
clc
xchg
outsb
mov
jb
cmpsl
cmp
outsl
sbbl
xor
mov
dec
lods
pop
pusha
les
xchg
pop
aad
dec
cmp
cmpsl
repnz
mov
xchg
mov
in
pop
adc
xor
rcrl
in
scas
add
nop
push
nop
push
aas
fisubs
xor
or
js
mov
dec
cltd
xchg
push
imul
cmc
sahf
fiaddl
or
lea
mov
loopne
xor
ss
sub
push
std
adc
bound
jecxz
mov
jnp
and
push
daa
adc
push
lret
inc
cs
in
dec
cmp
decb
jl
fwait
dec
iret
test
roll
ret
out
inc
mov
ror
push
insb
imul
sbb
pop
orb
push
dec
bswap
ret
mov
cmp
xor
mov
pop
xchg
jle
imul
push
cmp
cmpl
add
out
push
hlt
faddl
movd
xchg
ficoms
outsl
aaa
jg
sahf
jns
or
das
pop
pop
adc
jnp
xor
and
add
fdivrs
inc
push
out
into
mov
sub
xchg
insl
inc
dec
ljmp
repnz
insb
sbb
mov
fstpt
xor
or
sbb
mov
pop
out
psrlq
icebp
dec
dec
ret
pop
adc
inc
sti
mov
ds
data16
adc
aaa
cwtl
sub
inc
or
sub
push
cmpsb
mov
cmc
les
cmp
sub
imul
aaa
jmp
jmp
mov
cmpsb
sub
mov
jg
adc
outsl
addr16
jne
adc
wrmsr
dec
pop
les
jae
jg
nop
add
movsbl
ljmp
out
cltd
cltd
sbb
je
addl
jp
sahf
and
rcl
xchg
sub
mov
fucomi
xchg
inc
ret
ja
xchg
pop
add
arpl
mov
lea
xor
sub
in
ja
sbb
outsl
xorb
sarb
dec
mov
fwait
dec
ret
pusha
jmp
pop
pushl
imul
xlat
fisttps
cmp
push
mov
mov
push
nop
jl
push
xchg
lds
daa
out
push
repnz
mov
cmp
pop
mov
sbb
je
into
mov
or
cmp
cmp
push
data16
mov
sti
stc
fs
lods
mov
pop
ror
mov
xchg
cmp
jae
cmp
ret
leave
or
jno
mov
xchg
push
mov
push
loop
mov
sbb
push
mov
mov
stos
je
xchg
inc
popa
push
push
inc
in
icebp
xchg
js
dec
js
xchg
movsb
lods
mov
rcrl
pop
sbb
movsl
fucom
mov
pop
or
xor
aas
and
test
je
lret
xchg
inc
lret
fdivrl
push
mov
and
out
fbld
addr16
cld
repnz
repz
push
addb
les
shlb
dec
mov
lahf
jo
popf
fsts
popf
push
cltd
fs
je
sub
outsl
ret
jns
mov
int
dec
in
arpl
jnp,pn
or
xor
mov
push
cmp
shrb
das
cmp
popfw
jmp
xchg
stos
les
aas
pop
incb
xchg
sub
fadds
pop
mov
inc
or
fbstp
sub
ss
das
mov
cmpsl
or
inc
mov
daa
test
movsl
and
mov
fiaddl
jbe
out
sub
dec
adc
cmpsb
cmpsl
clc
xchg
imul
add
adc
leave
repnz
leave
loop
push
mov
push
popf
xchg
xor
testb
pusha
dec
sub
xor
inc
hlt
pop
mov
mov
jne
xor
jo
add
and
pop
adcl
clc
mov
ds
and
push
jns
fimuls
loop
jbe
lea
adc
sbb
sub
sbbb
sub
into
in
test
out
cmpsl
scas
xchg
out
std
mov
xchg
or
mov
pushf
lret
adc
dec
test
pop
mov
cmpsb
sbb
or
jg
test
repz
xor
das
fidivrl
push
sbb
enter
shlb
movsl
push
xchg
popf
icebp
dec
and
mov
lods
jbe
inc
mov
sbb
rclb
add
outsl
ficomps
outsl
in
pop
inc
in
addr16
stos
std
insb
add
mov
icebp
push
repnz
outsl
popa
or
test
mov
sub
dec
or
pop
sbb
push
push
lret
mov
or
push
pop
add
cmp
cmp
test
int
xor
or
mov
mov
and
add
xchg
fstps
cmp
inc
pop
sbb
and
fcmovbe
out
xchg
out
test
rcll
add
imul
vpunpckldq
jecxz
and
aaa
xchg
iret
jns
enter
adc
mov
sahf
sbb
cmp
xor
mov
add
add
inc
lcall
ds
fldl
push
adcb
fsubr
jmp
stos
loop
push
std
stos
sub
out
sbb
loop
mov
aaa
or
enter
mov
clc
stos
shlb
adc
fidivs
rcll
or
popf
dec
in
push
test
jo
sbb
mov
mov
add
jno
cli
ljmp
add
add
and
xchg
xchg
mov
jo
mov
addl
out
pushf
mov
imul
repnz
dec
pop
jg
mov
push
mov
inc
sahf
sbbb
ja
movsl
addr16
in
xchg
sbbl
mov
cmp
jl
jnp
ja
ja
adc
jge
xchg
imull
je
lods
jl
gs
popf
pusha
jecxz
mov
xor
fldcw
sub
inc
xchg
lods
rclb
push
jmp
push
nop
or
into
lods
mov
cli
push
fbld
addb
ret
test
ds
call
pop
lahf
xchg
into
mov
shll
adc
cltd
leave
aam
sbb
xchg
push
inc
imul
push
sub
dec
divl
sbb
xchg
test
push
push
sub
pmaxsw
out
mov
sti
iret
stos
cmp
mov
sbb
mov
push
shll
not
pop
int
clc
ret
shlb
lods
mov
push
sub
repnz
adc
push
jg
sar
lcall
and
decb
inc
stos
out
in
insl
in
jnp,pt
mov
shll
addr16
lret
mov
loopne
jb
pop
insb
fildl
mov
das
mov
sbb
shll
pcmpeqw
push
test
arpl
add
lods
je
lock
and
daa
inc
mov
in
cmp
cs
sbb
add
or
jmp
aam
sub
or
aas
arpl
addb
cmp
test
cs
insl
fildll
push
pop
adc
jp
jp
bound
int3
fidivrl
clc
pop
pop
ss
fnstenv
loopne
add
aad
dec
push
sub
rol
pop
cltd
xchg
test
push
inc
cli
xchg
mov
pop
xchg
adc
es
jmp
pushl
and
pushf
hlt
lods
fcmove
loopne
cmp
push
cli
cmpsb
pushf
xor
loop
jp
mov
adc
cmp
push
ljmp
jne
dec
arpl
jmp
inc
pop
test
push
pop
cmpsl
mov
mov
dec
mov
jecxz
add
mov
fdivrl
xor
adc
add
mul
vmovaps
aas
fstpl
mov
cmp
mov
sub
or
loopne
popa
outsl
fidivs
ss
add
inc
pop
inc
in
cmp
and
sbb
sbb
shll
sarl
push
push
jl
mov
aas
mov
mov
ret
test
insb
jecxz
test
into
dec
xchg
mov
daa
pop
test
mov
push
push
imul
jl
or
arpl
mov
push
shll
aas
push
fcom
ficoml
movsl
mov
neg
lret
xchg
out
sbbb
pop
mull
dec
dec
out
add
fists
fnstsw
scas
ds
xchg
sbb
mov
dec
in
pop
push
and
cld
cmp
cmp
inc
lahf
jp
xlat
sbb
repnz
push
addr16
adc
sbb
mov
out
aam
dec
sbb
mov
adc
rclb
es
scas
or
xchg
jmp
and
movsb
and
jns
jp
test
pop
inc
inc
fidivrs
jg
pop
test
push
test
and
bound
adc
test
cmp
addr16
inc
inc
mov
stc
fdivl
xlat
push
adc
insl
mov
mov
fcomps
test
mov
jecxz
inc
stos
dec
aam
scas
clc
mov
push
loopne
pop
or
mov
enter
add
xchg
dec
dec
push
push
cmp
mov
xor
lret
aaa
adc
aad
jecxz
inc
xor
adc
pop
or
subl
std
push
cmp
jnp
hlt
std
sbb
orl
sbb
jne
mov
sub
leave
jno
leave
sub
lcall
out
xchg
jno
or
cmp
pushw
mov
enter
dec
call
cmp
jl
and
inc
cltd
loopne
js
mov
push
inc
cmpsl
ret
flds
jbe
pop
or
out
pop
and
jns
out
sahf
jle
adc
push
movl
mov
or
pop
cmp
xchg
mov
cmp
stos
xchg
xor
push
pop
stos
dec
mov
push
lea
ret
pop
sub
xchg
mov
adc
int3
scas
int3
or
inc
dec
stos
fists
iret
je
cmp
stc
mov
call
or
cmp
aaa
and
jp
in
iret
sub
stos
adcb
xchg
cmp
iret
out
or
notb
jbe
push
pop
mov
arpl
fistl
cmp
push
or
les
outsl
leave
lods
out
jle
sub
mov
je
push
dec
sti
or
out
pop
push
or
arpl
bound
arpl
clc
imull
push
mul
jg
es
lret
add
hlt
shrl
cmp
and
sbb
jb
adc
sbb
dec
icebp
sbb
call
stc
cmp
imul
in
and
roll
fwait
mov
adc
adc
jo
cld
dec
push
jmp
test
das
dec
dec
repz
mov
in
add
rcrl
popf
mov
hlt
add
and
mov
mov
cli
sub
ljmp
push
or
lcall
arpl
sahf
mov
repz
xchg
mov
es
xor
push
test
out
imulb
sub
cli
push
lcall
jns
repnz
mov
lods
dec
xor
xor
sarl
std
adc
mov
es
xchg
loop
rcrl
push
hlt
xchg
fdivrl
xchg
rol
loopne
repnz
aaa
xor
icebp
sbb
sar
push
cmpsl
and
leave
fldcw
and
fnstsw
bound
mov
push
or
cmp
mov
lds
mov
pop
scas
cmp
sbb
repnz
cwtl
in
jp
mov
mov
cld
pusha
rorb
push
mov
jmp
in
ds
xor
xchg
in
mov
shrl
test
sub
rorb
cmpl
or
aam
add
mov
add
sub
pop
sub
out
sub
cmpb
pusha
enter
inc
sbb
sbb
add
or
fxch
mov
loopne
jle
cwtl
dec
adc
daa
orl
jb
pop
jle,pn
cltd
and
and
xor
mov
movsl
stos
hlt
pop
ss
data16
adc
fcomps
sub
pop
in
jno
lods
jl
hlt
pusha
adc
and
adc
xchg
out
adc
frstor
or
mov
cmp
mov
mov
aad
and
jecxz
cmp
jl
jns
inc
push
rcr
out
ds
lea
push
in
aas
ret
mov
adc
ret
sbb
pop
and
pusha
xchg
mov
repz
outsb
pop
xchg
imul
pop
shr
bnd
ret
pushf
mov
mov
jns
and
lcall
scas
js
mov
mov
xor
fbld
mov
mov
jno
into
xchg
jb
pop
mov
cld
mov
xor
inc
mov
jns
jl
push
leave
jg
adc
fimuls
ret
in
inc
mov
in
dec
mov
mov
stos
push
inc
aas
sub
das
sub
xchg
pop
frstor
sbb
addr16
mov
xchg
sbb
add
or
cltd
xor
lods
sub
dec
mov
cld
and
repnz
adc
inc
imul
cmpsl
lock
cltd
mov
icebp
stos
jne
clc
and
fsubrl
test
sahf
sbb
in
sete
call
or
cli
pop
je
or
cmp
cld
stos
fwait
rorb
xchg
xor
cmc
or
inc
scas
cmpsb
in
xor
xor
mov
pop
jmp
sub
lahf
ficomps
adcl
stc
iret
inc
out
sti
aam
sub
xchg
xlat
das
jo
movsb
mov
pop
and
jns
xchg
xorl
shll
pushf
mov
sbb
fbld
jnp
push
sub
popl
mov
mov
jecxz
sub
dec
sbb
sub
addl
enter
pop
lods
pusha
push
es
inc
scas
daa
xor
pop
daa
aas
cld
les
sbb
mov
xchg
sub
pop
push
mov
xchg
jmp
jo
call
mov
jmp
lret
mov
cmp
es
xorb
sub
jo
cwtl
jne
out
fwait
sub
je
push
push
xchg
lods
sbb
lret
jne
add
dec
out
fcompl
cmp
add
ds
jl
or
add
loop
fwait
rcrb
stos
adc
out
or
cwtl
add
cmc
pop
cmpsb
sti
pop
mov
js
sbb
scas
pusha
aaa
aas
cs
mov
and
pop
xor
xchg
js
scas
and
xor
xor
arpl
cmp
inc
mov
orb
dec
dec
sar
cmpsb
cmp
mov
xchg
or
add
enter
jne
insl
lahf
stos
jg
ja
and
sub
push
dec
data16
add
lahf
sarb
jecxz
fldcw
mov
pop
adc
dec
repnz
lret
aam
popf
in
nop
add
insb
jnp
push
scas
gs
xor
outsl
mov
shll
push
nop
iret
inc
push
movsb
cmc
jp
sub
insb
lds
adc
or
mov
xchg
imul
movsb
scas
icebp
push
daa
cmp
dec
std
push
insl
arpl
call
in
mov
pop
les
or
mov
xchg
or
pop
fcoms
aam
sub
mov
ds
das
jle
fisttpl
daa
mov
jne
xor
xchg
in
mov
adc
push
xchg
and
movsb
jo
mov
insl
mov
insl
hlt
mov
cli
shlb
lods
es
bound
and
or
fildll
jb
insb
sbb
leave
popf
rol
or
shrl
adc
xchg
jecxz
gs
cmp
imul
add
sbb
add
pop
cmpsb
jl
sbb
pop
sbb
repnz
test
pop
sbb
xlat
into
pop
push
fs
jmp
xchg
les
leave
mov
xlat
jne
pop
xchg
out
jl
jmp
pop
and
push
add
xchg
cmp
popa
dec
mov
mov
mov
pop
dec
dec
loop
sbb
sbb
clc
cmpsb
addb
xlat
push
das
xchg
adc
lret
pop
jb
xor
mov
cwtl
imul
sub
xchg
inc
cwtl
sahf
mov
lahf
pop
clc
je
scas
leave
jmp
mov
arpl
bound
mov
mov
dec
pop
xchg
and
popa
push
mov
xor
or
pop
loope
es
inc
ds
repnz
and
fadds
fisubrs
add
sbb
ljmp
test
fnsave
aam
cs
lods
cltd
jle
mov
jbe
sub
cmp
cmpsb
pop
mov
pmaddwd
cltd
cmpsl
dec
rcll
and
sub
loope
dec
mov
shrl
cli
dec
push
adc
xchg
ret
cmp
xor
jl
pop
cmp
sbb
mov
jge
jo
or
mov
aas
fdivp
mov
outsl
clc
pop
add
clc
mov
repz
fstpt
mov
adc
es
and
imul
mov
dec
xor
jl
jle
rcll
lret
xor
dec
pop
outsb
sub
sub
cmc
js
out
shll
xchg
and
xlat
add
pushf
scas
ljmp
in
fdivrp
dec
arpl
dec
sub
push
fcoms
jmp
mov
sti
pop
test
sahf
and
sub
gs
aam
cmp
sub
jnp
ror
test
xchg
rclb
pop
mov
in
ds
cmp
inc
push
push
pop
mov
inc
mov
adc
int3
int3
mov
push
test
outsl
loope
jge
inc
fsub
mov
lcall
iret
mov
inc
les
outsb
adcl
jge
bound
sub
and
sub
test
test
jb
jle
scas
xor
and
and
int
ja
xor
std
stos
sub
mov
inc
inc
gs
dec
xchg
and
sbb
push
or
sub
ja
xchg
mov
mov
add
jbe
aaa
cmp
push
jmp
jbe
mov
mov
pop
xor
xchg
cmp
or
std
nop
add
jbe
arpl
mov
aam
scas
popf
xchg
lds
mov
ss
adc
idivl
data16
mov
loop
aaa
mov
subb
sti
cmpsb
xchg
inc
insl
jns
cli
lcall
sub
repnz
cmpsb
cltd
adc
xor
loopne
jp
pushf
scas
imul
pop
adc
and
and
adc
and
xor
arpl
jno
ret
mov
xorl
mov
gs
xchg
mov
adc
sub
push
jae
test
dec
cmc
lahf
fcoms
jge
movl
pushl
push
adc
call
adc
mov
inc
leave
shl
bound
sahf
inc
sub
fldenv
jecxz
bound
push
fs
std
dec
lds
sbb
fmuls
jb
cmp
cli
cmp
add
rolb
dec
ja
sub
xchg
mov
push
mov
jle
je
add
call
cltd
outsl
sbb
sbb
push
call
int3
push
mov
mov
mov
and
cmp
cmp
mov
lds
adcl
mov
repz
repz
das
icebp
mov
cvtpi2ps
sub
dec
lcall
in
cwtl
mov
sti
mov
sub
mov
stos
mov
xchg
xchg
scas
mov
ret
xor
aad
dec
dec
xchg
mov
mov
sbb
test
loope
jecxz
xchg
repz
test
cltd
daa
push
mov
je
imul
dec
aam
jb
add
loopne
dec
jmp
cld
xchg
negl
dec
push
cmpsl
hlt
idivl
mov
dec
xchg
add
adcl
mov
aam
imulb
mov
mov
push
cmp
pop
dec
xor
xchg
jmp
ret
lods
aaa
cwtl
sbb
lods
xchg
and
pop
xchg
inc
cli
inc
jle
ljmp
outsb
inc
push
mull
loop
imul
jo
mov
mov
jle
fistpll
out
arpl
mov
cmc
dec
ljmp
icebp
adc
testb
push
test
xchg
push
lret
dec
jo
mov
mov
mov
push
jno
inc
inc
out
pop
fldcw
ret
in
inc
popf
les
mov
inc
add
shrl
jecxz
stos
push
and
pop
mov
ficomps
pop
pop
sahf
dec
out
fldenv
jno
jo
mov
int
movsb
stos
enter
pop
inc
fldt
call
fwait
lahf
jo
sar
cmp
cmpsl
lahf
int
iret
shlb
mov
lock
mov
ret
adc
sti
adc
loopne
pushf
insb
sbb
or
pop
js
jbe,pt
out
das
mov
inc
mov
shrb
dec
lahf
orl
movsl
out
jno
inc
movsl
adc
jb
fwait
cmp
stos
cmp
push
pusha
fs
push
jae
xor
lock
mov
arpl
mov
sbb
xchg
icebp
add
mov
ss
adc
clc
push
incb
pop
pop
inc
jmp
dec
sub
lahf
or
faddl
mov
aad
xlat
dec
mov
sbb
cmpsl
sbb
mov
out
xor
mov
sbbl
mov
fildll
psllw
insl
adc
and
std
sbb
cltd
lods
mov
inc
sub
jo
cli
arpl
cmp
mov
icebp
xor
push
les
xchg
or
adc
leave
mov
sbb
idivl
lcall
mov
pop
or
xor
jle
sbb
iret
pop
fistpl
or
imul
mov
dec
jo
xor
push
nop
add
fistpll
shl
cmc
mov
mov
inc
call
cltd
cmp
enter
inc
pop
jle
cmp
leave
in
inc
xor
add
push
lret
sbb
loope
pop
sbb
sub
xlat
test
xchg
add
push
lcall
adc
ds
jns
dec
cld
stc
mov
mov
cmc
or
int3
shlb
psubusw
dec
pushf
movsb
lea
pop
scas
sub
adc
adc
pop
insb
pop
iret
repz
pop
ret
jmp
leave
jno
add
adc
inc
mov
orl
mov
sbb
ficompl
adc
out
pop
into
rol
icebp
mov
dec
sub
lcall
xchg
inc
pop
push
xlat
dec
mov
lock
fiadds
add
dec
mov
dec
out
cmp
sahf
cli
push
leave
stos
mov
andb
sub
cmpsb
in
push
or
shlb
std
sub
mov
or
ss
dec
push
adcb
cmpsb
adc
loop
mov
jp
test
loopne
jecxz
cmp
gs
addr16
mov
jmp
xchg
xchg
lret
push
mov
mov
inc
sbb
fadds
fcompl
mov
push
add
sar
sub
and
xchg
es
sbbb
hlt
lock
cs
sub
jle
stc
outsl
and
jg
lds
outsb
int3
cmpsb
icebp
xchg
subl
inc
adc
xchg
mov
lock
mov
jns
dec
in
dec
ja
je
pop
jg
cli
xor
xor
aam
shll
jb
out
inc
sub
int3
mov
and
ja
push
xchg
and
loopne
popf
lcall
nop
cltd
jno
aam
in
je
mov
add
push
stc
adc
jnp
cmp
jmp
jnp
inc
xchg
int3
mov
fsubrp
pop
outsb
std
or
mov
jbe
ja
arpl
jle
push
pusha
in
sbb
in
mov
push
jnp
pusha
inc
jbe
sub
mov
cmp
push
adc
lds
mov
dec
sbb
xor
leave
pop
stc
andl
cmp
test
negb
inc
push
lock
sub
lds
pop
popf
aas
sbb
decb
fadds
pop
out
sbb
adcl
mov
ret
ds
pop
mov
adcl
inc
fcoml
mov
int3
pop
xlat
mov
push
arpl
xchg
aam
jp
fs
enter
in
in
ficomps
ret
mov
lods
daa
cmp
and
je
out
addr16
mov
clc
out
xchg
dec
cwtl
ds
fisubl
lods
dec
add
cmpsb
adc
sub
ficomps
jbe
jp
pop
loop
rcl
push
pop
push
sbb
sub
jo
xchg
popf
xor
xlat
or
adc
and
xchg
gs
aam
lds
cmp
rcr
cld
xchg
out
movsb
mov
mov
scas
orb
out
mov
fbld
cmc
arpl
scas
sub
pause
xchg
dec
stos
jno
fmuls
push
cmp
xor
pushf
in
or
stos
nop
mov
cmp
cmpsl
push
xor
insb
out
int3
ficoms
push
and
loopne
fimull
icebp
fs
push
out
mov
notb
lcall
scas
pop
pusha
jge
sub
xor
add
mov
pop
mov
insb
ljmp
aas
into
ds
pop
hlt
adc
xor
jmp
arpl
xor
repz
movsl
mov
lahf
mov
or
pop
dec
sbb
ljmp
xlat
clc
test
xchg
xlat
mov
sub
outsb
add
outsl
ss
xchg
les
loope
mov
ja
insl
mov
add
jnp
nop
out
fdivr
sbb
cmpsl
sbb
int3
fiadds
stos
inc
add
fs
lcall
ljmp
cli
mov
loopne
popa
sbb
adcl
cltd
stc
push
or
inc
xchg
movsl
enter
mov
mov
call
in
pop
ss
call
sbb
mov
sti
stc
pop
and
movsb
movsl
or
adc
jbe
xchg
and
rol
mov
adc
jle
mov
jb
fimull
shlb
aad
int3
jmp
jns
mov
fwait
mov
sbb
sub
or
lret
sbb
out
xchg
adc
inc
repz
push
push
flds
cmpsl
mov
lcall
js
stos
addl
mov
jmp
add
fdivrs
es
jns
xchg
lret
pop
jno
cld
add
mov
push
sbb
mov
xchg
mov
inc
mov
inc
stos
in
es
testl
pusha
jg
mov
js
xor
add
xchg
dec
mov
fs
sbb
loope
pop
inc
pop
ss
data16
lret
hlt
xchg
xor
fstps
pushf
test
xor
pushf
xor
mov
and
cmp
lods
push
lock
addr16
fs
cli
mov
clflush
stos
push
jbe
pop
xor
shrl
push
xlat
jg
mov
daa
shll
jecxz
or
pusha
int
enter
ljmp
jl
cltd
fcoml
daa
push
inc
sbbb
popf
ret
mov
xchg
movsl
sbb
dec
xor
aas
sub
mov
cmp
cmpsb
inc
inc
lret
or
sub
idivl
mov
pop
lret
test
pop
lret
fsubr
fcmovnbe
xor
icebp
mov
push
mov
push
das
push
dec
mov
cmc
or
outsl
and
call
add
popf
dec
ss
mov
stos
mov
ds
popa
movsb
jne
mov
jns
out
cmp
inc
cmp
mov
jne
sbb
aam
jnp
xchg
nop
sbb
sbb
jns
repz
xor
cli
jnp
jg
mov
dec
push
pop
icebp
sbb
dec
push
mov
dec
pusha
mov
sbb
mov
out
and
push
dec
push
dec
mov
fdivrs
sahf
mov
sub
cmp
imul
cmp
das
inc
push
out
mov
add
int
inc
jp
lahf
push
and
frstor
cmpsb
jbe
add
daa
loop
jp
push
jp
push
lcall
inc
cmp
in
jg
enter
dec
rclb
addps
ret
cmp
add
test
sbb
add
ret
jnp
popf
ds
jle
std
addr16
add
pop
out
mov
sub
sub
inc
clc
cmp
pushf
jb
lods
rorl
jmp
sbb
cmc
divb
popa
orb
out
ljmp
insl
jp
pop
push
dec
xor
dec
pop
inc
inc
fsubrs
push
inc
ds
push
mov
jle
xor
mov
lcall
push
mov
jg
jle
fists
xchg
sub
test
jb
mov
jb
rcrb
inc
xchg
add
jne
adc
decl
or
test
data16
push
cmp
out
push
mov
lcall
fsubs
mov
pop
and
bound
popa
xor
adc
lods
fldl
loop
inc
loop
lret
lcall
imul
cmp
push
jns
mov
shrb
mov
adc
ja
jae
jle
cmp
pop
out
mov
shl
jae
mov
mov
pop
xchg
ss
shll
sbb
in
shlb
mov
pop
dec
cwtl
mov
inc
leave
enter
mov
cmp
push
nop
repz
xorl
mov
xchg
ds
fadds
lcall
add
test
dec
cmpb
cld
dec
maxps
fistps
xchg
adc
test
add
mov
dec
and
in
ficoms
in
xor
xchg
cmp
sbb
adc
mov
mov
sbb
mov
xor
push
rolb
clc
mov
dec
popa
clc
add
sbb
scas
inc
cmp
rolb
lods
or
in
movsb
push
sti
call
in
fimull
lret
data16
aam
cmc
popf
and
add
cmp
ret
inc
das
and
jmp
jmp
fldt
adc
fwait
push
mov
or
test
roll
std
rcl
push
and
lods
cmp
es
inc
divl
mov
movsb
mov
sbb
or
or
bound
stos
jl
into
pusha
inc
repz
lret
rol
adc
mov
sub
add
cmp
xlat
xor
cmpsl
out
mov
jae
push
test
sbb
push
jp
push
cmpsb
or
testl
or
out
repnz
mov
push
inc
into
fwait
leave
pusha
push
jbe
xor
sbb
lods
sbb
shl
clc
mov
pop
and
cmp
cmpsb
sbb
mov
push
xchg
xchg
dec
adc
jne
out
mov
cmpsl
adc
movsl
popf
imul
idivl
cmp
fdivp
shll
pop
dec
xchg
mov
fsubr
insb
aaa
lock
sub
popa
sti
cwtl
cli
jmp
cmc
push
push
xchg
adc
sub
out
push
das
rcr
xchg
and
fstps
std
mov
xchg
in
cmc
icebp
or
sbb
or
int3
mov
test
adc
inc
jne
inc
xorl
icebp
ja
cmc
call
xor
lods
mov
dec
mov
movsl
ret
mov
push
aaa
dec
mov
mov
das
fsubp
aaa
push
int
inc
in
rcrb
jne
push
mov
mov
sub
nop
lret
jg
leave
jl
mov
adc
popa
and
mov
in
mov
lea
je
xchg
orb
stc
pusha
xchg
push
jp
xor
dec
push
adc
stos
arpl
cmp
icebp
mov
test
jg
inc
mov
fdivr
mov
jg
dec
xor
in
mov
fdivr
pushf
testb
sbb
xlat
rol
sarl
icebp
cmpsb
int
shr
jle
mov
leave
push
into
add
xchg
mov
bound
ja
shrl
xchg
sub
test
xchg
rcl
inc
div
xor
cwtl
inc
xor
push
scas
pop
sub
out
inc
cmpl
mov
xor
push
mov
sub
adc
clc
adc
push
sar
pop
inc
test
aad
jg
fldcw
mov
out
lahf
sbb
inc
aad
or
das
add
fimuls
dec
mov
mov
mov
insl
cmpsl
pop
sbb
stc
and
in
fildll
lds
jnp
cmpsl
push
xor
mov
sub
dec
nop
sbb
jne
xchg
mov
xchg
insl
adcl
xchg
stos
xor
movsb
inc
lcall
push
movsb
cmpsl
adc
test
into
adc
nop
adc
ret
iret
jle
cmp
mov
push
mov
aad
pop
cs
cmp
or
mov
test
or
pop
jo
ffree
je
xor
cmp
and
loope
ss
and
cmp
mov
and
les
mov
push
cmp
xchg
arpl
push
mov
lret
rclb
add
cmpsl
testb
aaa
inc
or
int
pop
je
in
ja
ret
rolb
jl
fmul
and
mov
sub
add
jecxz
jb
test
adc
sub
int
sub
repnz
insb
fsub
xor
fadds
mov
xor
xor
pop
lds
mov
std
xor
sbb
bound
sub
mov
jmp
mov
mov
dec
repnz
pop
scas
mov
push
mov
push
dec
xchg
and
repz
sbb
push
nop
iret
insb
lea
pop
movsb
dec
into
cs
subb
popa
mov
dec
mov
add
test
ss
sbb
cmpsl
pop
inc
negl
ret
out
adcb
test
fcoml
cmpsl
sub
dec
fildll
cmp
sbb
clc
jne
inc
repz
push
repnz
rcll
sub
mov
jae
mov
add
out
jns
out
sbb
loop
into
test
mov
add
dec
mov
sahf
jp
insl
out
and
push
jl
pop
xchg
jmp
std
mov
xor
xchg
fdivr
enter
sbb
adc
push
gs
sub
enter
add
xchg
push
pop
out
inc
mov
sub
je
mov
ret
mov
lock
adc
icebp
je
sub
add
movsl
movsl
movsl
dec
or
shl
inc
xor
roll
dec
std
or
gs
mov
or
jb
sub
jecxz
mov
jge
mov
fucomi
and
cmp
jo
xchg
out
dec
dec
or
and
insl
call
push
aad
sbb
xor
clc
mulb
add
out
cwtl
popa
out
inc
adc
push
cmpb
addb
loope
pop
jnp
out
roll
movsb
inc
movsb
lea
jb
inc
xor
call
sbb
int
mov
push
jp
cmpsb
adc
sbb
or
loopne
and
add
or
or
push
test
shl
out
push
cld
jne
mov
push
adcl
repz
fsts
es
adc
push
enter
mov
push
movsb
test
mov
ds
ss
xor
lcall
xchg
mov
gs
add
jae
mov
arpl
xor
insl
sub
mov
sbb
xchg
or
lea
inc
addr16
das
cmpsl
xchg
inc
bnd
out
popa
dec
inc
subb
jl
test
jge
out
push
mov
mov
mov
jne
dec
fnstcw
and
push
bound
addr16
mov
rorb
pop
xor
cli
cmp
and
or
notl
jg
and
xor
sub
cmpsb
mov
stos
int
cli
popf
out
xchg
repz
ss
sbb
pop
push
mov
adc
ret
sub
lds
or
test
scas
jno
xor
imul
daa
test
ljmp
and
xchg
loopne
aam
adc
cmp
test
dec
xchg
xchg
push
dec
mov
fucomip
in
mov
das
lahf
arpl
mov
pop
xchg
adc
xchg
jle
mov
push
cwtl
inc
and
sarb
roll
mov
pushf
mov
xlat
mul
jns
aas
mov
dec
adc
sahf
add
mulb
and
mov
cmp
sahf
dec
push
jg
jmp
sarl
ret
ret
jo
xlat
or
insb
cmpsl
mov
outsb
fs
cld
and
push
push
or
je
leave
xor
scas
xchg
xor
mov
mov
andb
clc
and
outsb
imul
stc
cs
inc
jno
outsl
stos
cwtl
jecxz
add
mov
push
cmpb
arpl
or
cmp
push
rol
sub
cmpsl
pop
call
xchg
mov
push
or
push
mov
fstl
xchg
iret
je
pop
scas
jae
dec
repnz
addr16
insl
sti
js
cmp
sbb
in
scas
inc
mov
sarl
sbb
in
ds
sbb
dec
hlt
cmp
push
fldz
loope
pop
xlat
mov
into
loopne
sub
inc
push
bound
push
xor
cmpsb
dec
lea
jle
cmp
dec
clc
fnstsw
xchg
push
popf
stc
adc
xor
mov
push
pop
pcmpgtd
add
mov
push
push
pop
jp
iret
mov
xchg
push
scas
mov
fnstsw
imul
push
xchg
loope
pop
pop
sti
jnp
sbb
xchg
sub
jl
sbb
addr16
call
nop
shll
mov
mov
push
or
ja
pop
dec
dec
shlb
enter
frstor
xor
adc
mov
test
outsb
mov
popa
add
movsl
je
minps
jae
push
fsubrp
inc
push
add
addr16
outsb
adc
pop
lahf
adc
mov
or
xor
mov
insl
jge
fsub
mov
sbb
andl
push
xor
add
xchg
lea
push
ret
dec
mov
mov
adcb
movsb
or
arpl
loope
jmp
push
stos
ret
mov
add
cmc
cltd
push
xchg
pop
push
fcoms
sub
lds
sub
lods
fidivs
push
and
lcall
xor
les
jge
mov
jo
mov
cmpsb
and
jb
push
enter
xor
xchg
pop
arpl
lods
inc
aaa
sub
loop
mov
push
dec
xor
fnstcw
mov
cli
ljmp
mov
mov
aaa
and
int3
bound
add
insl
imul
into
flds
das
add
and
mov
rcl
popf
xorb
dec
pushf
and
popf
pop
pop
fstl
cld
hlt
mov
jmp
mov
out
scas
dec
mov
and
or
cmp
sub
add
mov
push
test
dec
shll
jmp
stos
frstor
daa
ds
xor
cmp
mov
adc
jns
stc
pop
push
inc
shll
pop
ret
das
or
adc
cmc
inc
popa
add
pop
cmp
xor
cmp
test
mov
lret
imul
mov
push
mov
jae
sbb
loope
xchg
pop
movsl
lcall
out
int3
mov
jg
sub
cmp
imul
cmp
or
sbb
mov
cmpsb
fwait
jmp
mov
pop
aam
push
popf
ficoml
fsubp
mov
add
pop
popa
aam
loope
das
mov
aad
sub
add
push
aas
xchg
outsl
jp
xchg
mov
mov
lret
inc
push
testl
sub
jle
xchg
outsb
outsl
movsl
pop
std
inc
scas
call
jb
sahf
repnz
out
in
fisttpl
push
shl
or
outsl
movsl
inc
mov
out
cmp
iret
hlt
cmp
sub
outsl
pop
out
out
xor
fldcw
xchg
into
ljmp
xchg
mov
sub
aas
in
cmp
push
add
inc
mov
mov
add
loop
or
lahf
push
mov
call
xor
loop
int
stos
add
inc
sbb
jns
cltd
out
lret
movsb
push
mov
mov
jb
mov
xor
inc
rcrl
xchg
lret
imul
rol
jmp
or
fstl
cmpsl
dec
out
sbb
mov
pop
xchg
mov
jo
test
push
fnstenv
lahf
lcall
xchg
push
insl
xchg
and
sub
pop
sbb
int
movsl
roll
rolb
lea
add
inc
sahf
addl
sub
daa
xor
sub
or
push
pusha
cmpsl
sarl
ljmp
pop
iret
gs
sub
lods
out
inc
fstl
xchg
mov
jp
sbb
jnp
adc
sahf
cmpb
je
dec
idiv
push
xor
or
xchg
mov
xchg
ja
arpl
mov
and
or
fistpl
lock
mov
stos
sbb
xor
push
pop
mov
xchg
lods
orb
fisubrs
fdivs
push
add
cmp
psubd
xchg
mov
push
dec
dec
jbe
sti
adc
push
jge
xchg
cmp
push
pop
icebp
sbb
adc
dec
xchg
out
pop
movl
insl
mov
jp
sub
int3
and
pop
dec
add
and
mov
pop
push
jne
nop
loop
inc
xchg
and
xor
sub
addl
jl
sub
or
add
outsb
pop
sub
pop
pop
orl
adc
pop
sarb
loop
mov
aam
inc
stos
iret
fs
ljmp
sub
xchg
stc
xchg
xor
mov
mov
in
and
inc
sub
ret
js
test
fiadds
outsb
pop
cwtl
adc
inc
insb
int
out
pop
aaa
pop
xor
pop
inc
test
dec
out
outsl
mov
int3
ja
insl
push
ficomps
xor
and
bnd
pop
push
sbb
into
in
cli
fists
ljmp
mov
sbb
sbb
call
aaa
pop
popa
outsl
adcl
sub
sbb
mov
popa
add
mov
hlt
mov
xor
or
or
sbb
jb
fidivl
xor
and
loopne
popf
dec
and
pusha
mov
cmp
sbb
adc
pop
shrb
fwait
inc
loope
insb
mov
cs
in
in
leave
stc
insb
sub
dec
xchg
mov
orl
and
cmpl
cmp
fsubrs
and
or
cmp
insb
movsb
test
mov
push
dec
lea
inc
mov
push
inc
jnp
jge
loopne
adc
pop
pop
mov
lahf
push
inc
push
out
sub
fistps
loop
clc
insl
mov
lods
mov
daa
mov
test
fwait
inc
mov
mov
mov
jno
fiadds
xchg
xor
mov
aam
outsl
leave
mulb
pop
and
cmp
sbb
in
fildl
rcrb
popf
dec
shrl
in
inc
clc
push
add
and
mov
push
mov
mov
cs
dec
int3
lahf
or
push
pop
xchg
daa
sti
insb
enter
xchg
add
fsubl
mov
pusha
repz
inc
inc
vminps
je
sbb
roll
out
cmp
popf
jnp
xlat
jo
xor
aas
xchg
inc
fisubs
ss
jg
and
sbb
mov
dec
in
push
shrl
cltd
mov
inc
in
imul
cmp
pop
lods
ds
push
mov
mov
pop
stc
sti
mov
les
inc
mov
mov
out
push
ds
test
movsb
loopne
notb
push
lods
incl
je
clc
jbe
add
cmpsb
and
test
lret
pop
scas
pusha
mov
shrb
jge
adc
cmp
inc
push
movsb
mov
pusha
adc
ret
add
xchg
fnsave
sbb
jae
mov
cmp
fistpl
daa
cmp
jnp
add
fld
adc
mov
das
shlb
orl
cmc
inc
jae
mov
and
dec
mov
sbb
cmpsb
cmp
push
testb
cmp
inc
or
aaa
and
cltd
push
xchg
add
dec
cs
jg
jle
nop
in
and
mov
test
dec
mov
int3
in
sub
xchg
out
jecxz
push
cld
jmp
and
pop
pop
call
ljmp
mov
fdivp
sub
fs
mov
sub
test
cmp
loopne
add
sti
and
cmpsb
leave
push
xor
lahf
add
bnd
dec
cltd
and
loope
mov
subb
pop
out
sahf
decb
pop
xchg
adc
cmp
cmp
cmp
mov
imul
xchg
cmp
cmp
xchg
pop
sbb
andl
imul
aas
insl
daa
lret
lcall
incb
inc
mov
fsubp
fwait
xor
cmp
inc
aaa
mov
sbb
push
cld
or
clc
leave
and
or
fidivl
add
arpl
jns
inc
mov
rcr
xchg
push
in
iret
push
dec
adc
insb
jle
dec
adc
push
andb
rorb
jle
cltd
add
or
adc
sbb
mov
idivb
pop
mov
int3
or
andb
rorl
and
sti
cmp
in
jl
jecxz
cmp
icebp
xchg
ljmp
ret
fcomps
sub
mov
mov
fldlg2
xchg
jno
pop
mov
pop
subl
sbb
lock
mov
jecxz
xorl
fwait
pop
or
jo
jmp
cmp
rorl
lods
sarb
popa
scas
sbb
icebp
je
cmp
or
inc
imul
dec
xor
js
loop
nop
mov
xor
dec
mov
inc
arpl
push
sbb
jne
incl
lea
xchg
movsb
add
lret
cmp
mov
sub
sub
dec
enter
movsl
fldcw
mov
stc
mov
and
pop
mov
adc
ds
decb
out
xchg
mov
mov
push
mov
xor
stc
pop
pop
inc
orl
cmpl
into
push
mov
mov
scas
cmp
xchg
jecxz
in
sbb
jno
xchg
fbld
dec
loop
sub
out
clc
ja
pop
clc
jecxz
scas
adc
mov
push
cli
sub
dec
int3
push
mov
int
jg
sub
mov
hlt
cld
adc
pop
jmp
push
bnd
push
test
nop
movsb
dec
pop
push
lret
sub
mov
test
scas
mull
das
push
clc
jmp
push
jge
ds
jno
scas
notb
cmp
fldcw
dec
and
adc
stos
ret
test
cmp
mov
pop
mov
xchg
test
in
mov
movsl
cmp
sarb
sub
mov
mov
sarl
push
adc
inc
jb
insl
mov
mov
push
mov
lahf
test
cli
insl
sub
sub
in
or
movb
fxch
lcall
popa
fwait
adc
push
mov
nop
dec
ds
lret
lea
call
in
out
inc
faddl
jmp
inc
sbb
jecxz
mov
add
in
push
sahf
cwtl
xor
arpl
jge
or
outsl
mov
jl
int
and
subl
xchg
stos
xor
pop
test
mov
sub
or
call
pop
lret
pop
cmp
dec
jo
and
push
push
pop
adc
cmp
iret
mulb
sbb
add
xchg
jp
cltd
shr
lahf
out
inc
rorb
movsl
fld1
jp
dec
and
mov
ds
mov
movsl
mov
int
and
jmp
lods
fisttpll
mov
mov
cmp
fsubrl
dec
pop
lret
push
out
pop
push
pop
xchg
dec
push
mov
adc
addr16
cwtl
add
cltd
push
sahf
add
push
pop
mov
xchg
lods
xor
cmp
cmp
iret
orb
sbb
or
pushl
cmpsb
xor
add
push
cmp
pop
outsl
icebp
negl
faddl
mov
dec
lret
push
int3
or
sub
pushf
cmc
jae
push
mov
out
ret
xor
sub
mov
xor
and
pop
adc
dec
xchg
out
push
and
lahf
ja
jmp
shll
mov
stos
sahf
sbb
and
lcall
inc
push
pop
dec
lods
std
and
jmp
mov
inc
push
mov
or
xchg
jl
push
inc
dec
mov
test
jge
rorb
jo
shrl
adc
lahf
jno
daa
rclb
mov
push
mov
sub
mov
adc
add
pop
sub
repnz
push
and
test
insb
jecxz
pushaw
lea
and
add
dec
cmp
dec
sub
push
pop
cmp
out
call
mov
arpl
mov
dec
movsb
dec
ret
in
ljmp
in
mov
mov
or
fwait
mov
push
and
and
test
imul
mov
sahf
call
stos
adc
xor
mov
fcomps
mov
ror
dec
out
xchg
outsl
movb
loope
pop
xor
mov
and
int3
cld
sub
ss
add
fnstsw
sti
xchg
stos
hlt
cmp
sbb
pop
xor
iret
and
sbb
mov
insb
loop
mov
fwait
jo
push
sbbl
inc
in
ficompl
mull
call
movsl
inc
cmpsb
fildl
push
mov
dec
mov
inc
adc
adc
sbbl
pop
inc
push
pop
popa
mov
xor
xor
xchg
lea
ja
cmp
js
jbe
mov
sub
iret
xchg
sahf
dec
inc
pop
inc
jns
adc
mov
stos
out
icebp
out
sbb
sub
xor
sbb
mov
xchg
insb
xor
adc
mov
ss
gs
scas
push
ljmp
int
or
notb
and
outsl
fistpl
mov
sbb
out
and
mov
and
mov
sbb
repz
iret
jecxz
pusha
out
jg
dec
mov
jns,pt
es
jg
or
loope
les
xlat
jle
hlt
mov
xchg
inc
mov
fsub
sbb
int
int
or
movsl
dec
in
movb
push
roll
pop
xchg
loopne
sbb
scas
repnz
enter
push
test
push
xor
sbb
js
cmp
mov
jb
arpl
jg
xchg
negl
rorl
and
pop
ret
sbb
add
dec
lods
sti
fstpl
fsts
rcrb
dec
lret
cwtl
inc
lcall
outsl
and
dec
je
add
test
mov
fmuls
aaa
xlat
and
jge
lret
mov
dec
cmp
enter
sahf
cmp
mov
mov
mov
test
pop
popf
and
pop
faddl
cmp
fcmovnbe
or
stos
mov
or
fisttps
cmp
push
xor
or
cmc
cmp
add
lahf
and
pop
aad
xchg
sbb
or
inc
sub
jb
push
popf
mov
cmpsb
mov
cmp
in
jl
push
inc
push
adcb
in
pop
popf
cmp
xor
mov
idivl
repz
out
icebp
enter
or
jno
mov
cmp
cmc
jge
test
imul
mov
ja
movsl
ja
icebp
insl
mov
push
in
test
and
mov
sub
pushf
sbb
pushf
clc
add
es
divl
xchg
ds
hlt
pop
or
repz
test
outsl
inc
sbb
pop
push
adc
test
xchg
rclb
outsl
data16
add
jp
inc
fcoms
jno
push
ljmp
cmp
ret
dec
add
sbb
jp
sub
addr16
or
cmc
stc
aad
test
mov
mov
jl
cmp
sbb
dec
mov
mov
sbb
pop
sbb
and
lcall
sub
sbb
aaa
or
sbb
pop
pusha
addr16
test
pop
sub
lock
repnz
cltd
pop
icebp
test
push
or
fwait
pop
fstpt
cmp
adc
les
enter
fistl
pop
decl
in
push
fsubrl
pop
inc
and
jo
lcall
loopne
fcoml
popf
jl
test
les
pop
jbe
popa
cmp
ss
pop
xor
mov
orl
outsl
aas
insb
mov
add
cmp
sub
cwtl
and
push
rcrl
in
outsb
adc
popf
push
movsb
repz
sub
cmpsb
mov
jle
hlt
pop
adc
or
fs
imul
mov
int
and
cmp
out
push
ljmp
notrack
push
xchg
xor
mov
js
jl
xor
cmpsb
lcall
dec
insb
dec
inc
ret
jmp
into
shl
sbb
xchg
rcrb
push
dec
dec
xor
push
iret
rolb
jecxz
subl
add
sahf
cmp
fsubr
push
loopne
jb
xor
adc
sbb
pop
jecxz
ret
jmp
mov
aas
jg
push
out
inc
insb
fst
pop
iret
mov
je
xchg
or
dec
nop
jl
or
test
in
mov
inc
imul
in
cmc
repnz
add
faddl
and
lock
roll
loopne
mov
pop
mov
mov
or
shll
into
push
sbb
sahf
sub
test
pusha
daa
jnp
insb
sbb
leave
jae
dec
nop
jbe
loopne
pop
loopne
mov
aas
xor
lock
and
pushf
in
inc
xor
pop
sub
mov
incb
test
mov
icebp
dec
jbe
mov
iret
icebp
fdivp
inc
lret
lret
cltd
repz
mov
cltd
jne
movsl
inc
mov
xchg
pop
lods
cmpsb
inc
inc
push
and
imul
mov
or
dec
pop
loop
bnd
jmp
in
sbb
cmp
pop
inc
sbb
test
lock
push
movsl
jmp
fwait
sub
int
sub
jmp
adc
xor
lock
mov
daa
pop
push
nop
test
or
in
jns
insl
jnp
fnsave
les
push
push
test
mov
sahf
ljmp
push
push
jecxz
fdivrl
into
inc
negl
mov
push
mov
pop
push
sbb
inc
mov
ja
cld
xchg
mov
sub
dec
inc
je
sub
mov
nop
int3
cmp
out
cs
notb
adc
push
adc
insb
lret
sub
sbb
add
loope
fwait
shl
cmp
dec
negb
lods
lods
je
pop
sahf
call
dec
movsb
loope
hlt
jecxz
out
ljmp
fadd
push
fiaddl
pop
movsb
sbb
sbb
shrd
cmp
rcll
jnp
inc
mov
sahf
test
jnp
sub
or
push
add
test
jno
or
mov
clc
mov
mov
jne
mov
and
mov
movb
mov
insb
cmp
aaa
pop
sbb
std
test
lods
in
je
dec
arpl
scas
das
in
push
dec
pop
popf
std
dec
sbb
cwtl
mov
subb
mov
dec
sub
inc
xorl
or
fwait
push
xchg
jmp
faddl
lahf
aas
add
sbb
clc
jb
bound
or
mov
sub
xor
arpl
pop
dec
int3
clc
push
mov
xchg
mov
push
hlt
sbb
filds
paddb
pop
bt
loop
fisubrs
or
jmp
cmp
jge
pop
repz
inc
pushf
jae
jg
cmc
outsb
leave
cmp
dec
pop
and
cmpsb
imul
add
dec
jnp
es
in
cld
lcall
mov
xlat
loop
std
loopne
fimuls
inc
lds
gs
cmp
lods
in
mov
iret
or
push
sbb
call
mov
or
and
call
fwait
mulb
jnp
dec
sbb
jb
stc
push
dec
xchg
and
push
mov
sbb
cmp
insl
or
mov
stc
add
and
cs
icebp
int3
cmp
mov
loopne
dec
or
and
inc
mov
push
push
adc
lods
fucomi
in
xor
mov
lds
mov
jl
push
sbb
or
jo
dec
cltd
xchg
jge
femms
xor
sti
mov
iret
dec
cli
dec
icebp
add
popf
xor
popa
cwtl
inc
and
enter
jg
pop
dec
jecxz
cmc
fcoml
push
mov
xchg
stc
xchg
popa
fisttpl
insl
cld
cltd
int3
out
std
test
sbb
stos
pushf
add
mov
repnz
into
mov
int
push
sti
scas
aaa
push
inc
scas
push
test
leave
adcb
ja
cmc
popa
and
sub
sbb
pop
cld
xchg
and
mov
cmp
cmp
xlat
mov
mov
sub
sub
push
sbb
andb
dec
aas
mov
pop
out
mov
daa
pop
cmp
cmp
jl
adc
inc
jp
inc
lods
mov
rcrb
push
pop
mov
gs
jecxz
insl
rcll
in
shrb
cmp
cmp
xor
push
mov
cltd
inc
dec
lods
xor
jp
fidivrl
pop
xchg
jl
inc
xor
xor
dec
nop
xchg
mov
out
pop
stc
sub
xor
adc
leave
mov
call
lea
mov
or
and
mov
push
jmp
mov
in
lock
xchg
xchg
mov
lods
xchg
cwtl
imull
cmp
popf
lea
cwtl
mov
js
cmpl
jb
jns
push
pop
call
push
mov
ss
mov
fldcw
push
divl
sbb
sbb
sbb
inc
xor
insl
into
andb
or
rclb
xchg
jnp
mov
gs
jge
sti
shr
jb
outsl
push
pop
scas
pop
es
xchg
ljmp
or
xchg
ss
call
pop
enter
and
and
dec
cmpsl
jl
jnp
pop
dec
sub
out
add
negl
xchg
add
mov
imul
xor
jp
test
test
dec
push
pop
push
pop
push
pusha
cli
mov
iret
inc
loopne
jns
push
int3
pushf
inc
and
xchg
add
ret
cmp
lahf
lock
jb
int3
stc
inc
dec
pop
js
movsb
mov
fwait
xchg
or
movsb
cmp
sub
inc
fcoml
mov
ja
xlat
cmc
enter
push
enter
ret
loope
hlt
js
scas
xor
inc
push
cmp
sbb
mov
xchg
xlat
fsubrs
or
push
dec
shl
add
sub
push
mov
xor
xor
or
mov
jns
mov
ljmp
sbb
fs
push
addr16
ficomps
mov
pop
ret
pop
sarl
mov
and
lcall
inc
sti
ret
test
std
xor
cltd
stos
inc
cmpb
les
ja
inc
fld
mov
call
and
cmp
scas
stc
inc
xor
lahf
mov
je
adc
andl
jp
inc
jmp
iret
daa
js
lret
lcall
filds
pop
add
test
cmpsb
cmpsb
daa
xlat
loopne
fdivr
fwait
and
stos
xchg
loopne
lcall
arpl
inc
divl
jbe
sub
sahf
sbb
aad
mov
jbe
pop
adc
mov
dec
popa
pusha
lock
push
mov
mov
mov
xor
sbb
fwait
and
mov
fcompl
xor
movsl
loopne
shl
jmp
cmp
test
popf
mov
movsl
pop
or
mov
imul
pop
mov
cwtl
xor
scas
sarb
call
jmp
repz
mov
cmp
mov
sti
dec
push
repz
mov
test
cmpsb
scas
mov
mov
enter
pop
and
movnti
or
js
sbb
and
or
dec
test
push
movsb
lret
push
imul
out
gs
xorb
cwtl
aad
or
mov
cmp
jp
cmp
repnz
push
mov
jp
lret
out
push
pop
imul
dec
lahf
mov
insl
popa
jecxz
cmp
mov
mov
pop
not
or
adc
imul
int3
add
pop
cmpsb
mov
popf
test
adc
xchg
sub
loopne
scas
jne
fbld
test
xlat
xor
mov
mov
lods
xchg
cmp
mov
pop
imulb
mov
push
out
pop
push
cmp
cmp
fnstenv
mov
and
insl
fcoms
sahf
fcomp
xchg
pop
mov
xchg
mov
jae
mov
pop
std
in
frstor
inc
stos
inc
cmp
cmp
pop
inc
mov
cmp
push
out
push
dec
sbbb
aam
xchg
jge
subl
into
add
sbb
cmp
outsl
xchg
in
xchg
xchg
ror
jnp
scas
nop
cmpsl
mov
lret
mov
shlb
push
inc
fwait
rclb
xlat
sub
or
dec
pop
fdivl
jnp
push
cmp
jno
mov
xchg
stos
adc
xchg
jb
hlt
xchg
mov
test
cmp
xor
test
movsb
mov
inc
out
inc
push
pop
cmpsl
xchg
sbb
scas
push
clc
shrb
jmp
push
xor
push
les
lahf
pop
jo
mov
test
das
jecxz
cmpsb
mov
and
inc
nop
mov
push
and
cmpsb
cmpsl
xor
fcomp
pop
xchg
pop
fsincos
testb
int3
mull
dec
add
not
jl
movsb
testb
lods
repz
push
and
and
jmp
pop
xchg
pop
push
sub
jae
lcall
out
ret
mov
xchg
adc
fnstcw
dec
adc
js
pop
cmpsl
lret
pop
xchg
jb
jp
adcl
popa
lret
js
aaa
leave
aad
push
cs
jmp
loop
dec
insb
push
mov
sbb
dec
xor
sub
cmp
loope
out
movsb
mov
jge
icebp
jb
fs
test
cmp
mov
adc
xchg
xlat
jp
in
inc
stos
inc
mov
sub
jle
inc
lret
mov
daa
push
or
xlat
inc
ret
sub
ret
dec
xor
cmpsb
call
ret
loopne
push
arpl
mov
loop
fpatan
adc
or
inc
sbb
out
mov
aam
frstor
inc
and
or
ja
add
outsb
jno
cmp
mov
adc
lcall
lret
add
iret
dec
aas
outsb
in
and
scas
pop
lret
out
ret
cltd
cmp
shrl
inc
jne
pop
es
push
sti
dec
cli
jno
cli
push
test
lods
jne
lds
dec
icebp
push
inc
repnz
popa
pop
aad
pop
xor
shrl
cwtl
dec
aas
test
bound
xlat
xchg
sub
xchg
mov
orl
mov
loopne
int
stc
mov
cmpsl
or
jmp
ljmp
pop
adc
adc
call
repnz
mov
xchg
jno
cmpsl
aad
test
fildl
xchg
mov
adc
lock
insb
data16
movhps
or
and
aam
jno
adc
in
xchg
jg
jnp
lock
mov
sarb
fwait
out
push
push
adc
mov
xchg
mov
ljmp
push
int
sbb
sbb
mov
jle
jl
nop
add
ss
lds
sub
pop
ja
les
jge
push
enter
movsb
enter
pushf
sub
mov
mov
in
lret
jnp
outsb
jl
mov
adc
dec
adc
mov
daa
add
add
data16
loop
dec
and
push
push
dec
xchg
mov
aam
arpl
adc
cltd
jnp
aaa
dec
aad
jmp
mull
xchg
sbb
out
xchg
lods
loopne
xchg
scas
je
mov
adc
rclb
push
xchg
push
es
and
ss
cmp
inc
pushl
mov
daa
ss
sbb
xchg
clc
dec
jne
dec
xchg
mov
push
inc
mov
lret
ret
xor
loopne
push
cmp
mov
mov
xchg
pushl
test
sub
cmp
xor
mov
mov
lds
jmp
mov
jne
sub
gs
loop
loop
in
adcl
in
mov
jb
lcall
push
lret
sbb
cmp
push
fsub
loop
pop
or
inc
sub
scas
dec
jae
push
int3
cmp
fmuls
imul
xor
daa
ret
daa
out
mov
outsl
mov
outsb
cmp
pop
xchg
dec
insl
jns
mov
sarb
dec
das
lods
sub
leave
jne
add
pop
jg
js
iret
enter
xor
push
jle
cmc
or
cli
sahf
aas
mov
sub
aam
inc
fdivs
rorb
lods
dec
jb
mov
cmpsb
push
test
sbb
fwait
jmp
andl
and
adc
mov
sub
stos
loopne
mov
jl
xchg
jmp
cli
and
test
xchg
icebp
test
repz
inc
lds
push
sahf
in
bound
outsb
jmp
sbb
ret
mov
pop
sbb
xchg
cwtl
push
loop
cli
xor
or
ret
scas
dec
mov
xor
jecxz
ss
fdivrl
jg
mov
into
add
add
popa
rol
int3
mov
push
std
cmp
aaa
cmpsl
push
xchg
rorb
cmc
mov
mov
out
lret
cmp
std
adc
jmp
pop
iret
in
mov
cmp
popf
ss
sahf
add
out
mov
in
outsl
rol
ret
cmc
jne
mov
es
lcall
enter
repz
push
mov
movsb
cmp
mov
rcrb
and
pop
out
test
push
jne
xchg
push
jmp
jl
sbb
or
sti
popf
or
or
xor
out
rolb
mov
repnz
mov
xorl
lods
mov
mov
rorl
daa
jge
pop
test
or
aam
xchg
dec
dec
dec
fimuls
xchg
mov
jle
inc
inc
sbb
push
push
xchg
lahf
repz
imul
xlat
jnp
test
les
addb
popf
shrb
xor
or
mov
loope
sbb
sbb
sbb
ljmp
xchg
and
mov
push
lret
inc
mov
adc
push
fdivrs
adc
xchg
call
xor
and
ret
out
cld
lds
push
or
add
inc
shrl
icebp
jge
fwait
xlat
push
in
js
mov
repz
sub
pop
pop
add
pop
loop
cs
adc
mov
push
int3
push
mov
inc
fdivl
jae
jmp
imul
push
xchg
iret
jp
stc
frstpm(287
mov
mov
mov
adc
jl
addr16
xlat
sbb
mov
pop
cmp
mov
pop
aam
rolb
sbb
cmp
sti
xchg
sub
mov
in
hlt
cmp
mov
in
cmpsb
mov
faddl
test
mov
push
and
add
popa
pop
mov
fucomp
push
jl
ficoms
mov
div
in
pop
stos
arpl
mov
paddw
mov
aam
subl
add
dec
sub
aam
outsl
clc
loopne
fsubr
ret
fidivrl
stos
adc
cwtl
add
fisttps
add
xor
mov
mov
lods
inc
jno
mov
ja
push
adc
jle
xor
std
pop
call
stos
std
ljmp
add
daa
mov
pop
pusha
je
adc
movsb
inc
cmpl
je
dec
stc
addr16
dec
xlat
push
dec
js
xorl
xchg
popa
xlat
pop
clc
leave
xchg
pop
cli
inc
push
and
or
xchg
or
add
add
idiv
aaa
mov
mov
cmc
or
pop
sbb
push
lcall
adc
dec
jge
xor
cli
leave
popl
mov
cmp
notb
add
sub
pop
ret
gs
lret
mov
aas
sbb
stos
pop
int
pushf
mov
repnz
inc
and
std
pop
pop
sbb
push
push
inc
push
test
ljmp
mov
mov
jnp
jb
fdivl
mov
sti
xor
and
sbb
or
aad
jae
repz
enter
cmp
and
vgatherqps
inc
addb
jno
insb
stc
and
lret
dec
push
jmp
sar
sbb
push
push
jl
mov
lods
stc
push
dec
dec
out
lea
cmp
ds
xchg
push
out
xorl
jmp
movl
adc
testb
push
icebp
lods
filds
dec
data16
mov
in
mov
shrb
pop
pop
cld
stc
fdivr
xchg
add
mov
xor
mov
cmp
and
rcll
xchg
cli
scas
jl
je
shll
jp
lds
sbb
arpl
lock
out
and
lock
add
stos
pop
and
and
hlt
or
push
testb
pop
pop
inc
std
nop
adc
inc
into
in
push
cmpl
inc
test
or
movsl
mov
cmp
or
enter
cmp
cli
stc
inc
jnp
faddl
push
and
in
xchg
sub
es
idivl
loopne
and
mov
ja
add
sub
pop
fistpl
mov
xchg
or
dec
stc
xchg
jmp
add
cmpsb
push
imul
and
mov
mov
xlat
sbb
daa
dec
jns
addr16
scas
insb
out
or
mov
test
out
push
aad
fldl2t
out
cs
push
aaa
fdivs
insl
mov
and
and
test
sub
shrb
dec
sub
out
sbbb
mov
push
inc
mov
xchg
jp
jne
jp
pop
rol
pop
outsb
mov
cli
out
movsb
arpl
sub
inc
call
xlat
pop
inc
push
mov
sbb
dec
call
popa
jno
jne
aaa
lods
mov
or
test
or
leave
rcll
pop
stos
insl
sti
jl
je
jb
nop
adc
out
mov
mov
jge
xor
int
mov
mov
xchg
dec
mov
jge
sti
mov
cltd
out
fidivs
sub
fidivrl
sahf
shlb
loope
or
mov
jle
fbld
cld
mov
inc
addr16
int
in
int
bound
int3
rorl
sbb
cs
mov
fdivrs
dec
pop
outsb
mov
xorb
mov
lahf
mov
jl
and
jns
cmpsb
adc
ss
in
ret
push
cmp
ret
lock
inc
je
or
lcall
add
mov
sub
mov
cmpsl
mov
lahf
lea
pop
adc
movsl
mov
jns
rolb
int3
push
jp
repnz
stc
jmp
cltd
or
dec
in
sbb
push
and
and
xor
pop
cmp
adc
and
addr16
pop
notb
in
mov
adc
push
fwait
pop
cmp
push
int
mov
xor
mov
adc
inc
add
add
add
dec
cli
call
and
psllq
repnz
aad
roll
fidivs
repz
pusha
jmp
push
mov
movsl
aam
or
inc
xor
imul
iret
int3
fdivs
or
pop
jmp
jnp
ss
xor
xor
lret
inc
add
ds
push
int
ja
jle
pop
sbb
xor
cli
cld
pop
movsl
add
sub
cmp
mov
mov
and
mov
lods
roll
sub
push
rclb
or
jmp
repz
test
mov
test
adc
insb
ret
ljmp
push
mov
jb
pop
movsb
mov
xor
lods
fstl
add
cmpsl
jge
mov
xor
sbb
out
jmp
es
xchg
jo
adc
push
sbb
dec
mov
mov
mov
test
lahf
sbb
pop
mov
lahf
out
lret
iret
stos
lods
cld
and
and
cs
push
data16
cmpsb
sbb
pop
mov
mov
cmp
and
mov
add
and
add
daa
in
mov
pop
xor
shll
enter
inc
divl
daa
stos
xor
sub
ficompl
and
push
sbbl
mov
insb
adc
sbb
or
mov
hlt
mov
testl
push
push
sti
mov
push
imul
xchg
in
and
psllq
mov
sub
add
xor
imull
or
fdivrs
pop
movsb
pop
mov
xchg
out
push
stos
fdivp
js
xchg
jbe
hlt
pop
jo
jecxz
mov
aad
mov
or
test
mov
icebp
cmp
imul
ljmp
int3
into
push
mov
add
leave
ret
mov
and
in
das
jnp
mov
push
dec
cmp
jmp
mov
mov
es
mov
ds
adc
xchg
mov
mov
add
cmp
or
pop
test
xor
xor
fs
xlat
mov
pop
out
sub
fstpt
jmp
sbb
mov
or
or
fs
push
in
repnz
enter
inc
mov
cld
sbb
lahf
xchg
cmpsb
pusha
imul
mull
enter
push
and
cmpsb
je
jns
or
pop
divl
div
or
and
jp
mov
push
adc
lods
imul
jno
loope
xor
add
sbb
xchg
jmp
fs
cmp
xor
cmp
repnz
call
xchg
or
lret
sti
mov
xor
adc
ja
pop
into
add
mov
test
dec
ds
xchg
fnstenv
cmp
aam
push
inc
adc
fistpll
mov
inc
ret
add
xorb
ret
mov
into
push
mov
mov
pushf
les
mov
cld
mov
or
push
add
aaa
xlat
daa
push
or
push
sbb
push
repnz
push
inc
in
push
cmpsl
mov
cltd
notb
sbb
pop
and
fucomip
push
cli
xchg
pop
sarl
mov
popa
push
push
dec
or
lcall
sti
es
shl
cmp
and
xor
cmpsb
shrb
loopne
jo
mov
cmc
jne
xchg
adc
xchg
adc
out
jle
fdivs
in
scas
xchg
dec
dec
je
or
aad
mov
and
scas
test
and
jmp
andl
nop
loope
mov
dec
pop
adc
sarl
por
faddp
sbb
dec
xchg
stos
insb
or
pop
sahf
inc
cwtl
mov
idiv
cld
in
test
sub
ret
mov
inc
push
and
mov
xor
repnz
xor
in
call
movsl
popa
lock
jp
inc
push
lods
mov
adc
jmp
jb
jo
movsl
adc
insb
daa
mov
sbb
pop
jle
adc
orl
adc
pop
aam
arpl
daa
sbb
xor
in
in
aad
pop
dec
repnz
push
aad
aas
mov
sbb
dec
fisubl
lret
mov
call
enter
pushf
fwait
leave
enter
adc
in
movsb
sarb
dec
stc
cmp
mov
repz
inc
pop
push
pop
pop
dec
aad
fstl
mov
pusha
stc
fsubrp
aaa
int3
mov
add
xor
dec
xor
push
loop
scas
cmp
push
dec
jp
mov
jns
xorb
lds
int3
ret
add
ret
inc
dec
dec
int
out
xchg
stos
inc
mov
dec
jl
out
adc
rcll
fstpl
adc
rcrl
jp
push
jo
pop
push
std
repz
inc
out
push
or
mov
jge
rorb
cmpsb
ficoms
jne
ja
cmp
shlb
pop
pop
push
and
in
negb
lods
aad
ds
iret
adc
lds
jecxz
cli
fnstcw
push
enter
outsb
mov
push
nop
ret
mov
jae
jo
inc
hlt
pop
dec
sub
cmpsb
repz
add
mov
adc
or
andl
cmp
fcompl
xchg
sub
lods
xchg
shl
cmp
outsl
fsubrl
adc
push
js
test
sbb
lea
and
or
push
jge
push
xor
xchg
push
icebp
pop
pop
movsl
ja
ds
jnp
mov
push
xchg
dec
or
bnd
fstpt
mov
in
ret
jp
lcall
adc
sti
dec
loope
and
stos
jne
into
pop
mov
sub
cmp
ret
fs
scas
notb
xor
mov
mov
jnp
lods
cmp
in
push
mov
cmpsl
and
fnstcw
cmp
adc
js
fnstcw
pop
lret
lds
test
xor
insl
into
jae
and
push
push
inc
adc
dec
push
xchg
loope
das
jno
leave
lods
inc
sub
inc
push
mov
push
hlt
sub
xor
fsubl
aad
fwait
push
push
ret
scas
cmp
call
arpl
test
push
rol
add
mov
fistpl
pop
aad
outsl
mov
sarb
decl
iret
xchg
outsl
inc
jmp
js
std
inc
sarl
ss
scas
mov
add
into
js
cwtl
pop
adc
insb
mov
bound
push
pop
pop
xchg
adc
mov
sti
fdivrl
dec
xor
ds
fildl
pusha
mov
shl
jle
fdivp
gs
push
sbb
test
fld
outsl
pop
int
inc
enter
mov
lods
push
or
sbb
setbe
push
jmp
loopne
mov
pop
adc
movsl
cli
xlat
jl
ffreep
push
lcall
lret
xlat
lock
movsb
lods
sbb
mov
nop
sbb
inc
fs
sbb
std
jbe
movsl
imul
xor
cwtl
outsb
or
lcall
cmp
clc
bound
scas
je
xor
ds
das
push
or
xor
pop
add
inc
movsb
stc
shll
or
push
sbb
lret
into
xchg
dec
dec
fcomi
sbb
add
jmp
addl
lret
fadds
sbb
divb
and
sub
adc
xchg
fdivrl
sbbb
cmp
mov
mov
outsb
push
cwtl
cltd
xor
mov
mov
cmp
mov
imul
icebp
call
popf
mov
sbb
xchg
inc
out
dec
jmp
or
pushf
into
push
jg
js,pt
mov
lret
or
cmp
frndint
jge
cmp
sti
movsb
lods
pop
sbbl
sti
icebp
and
mov
outsl
fucomi
adc
adc
out
test
imul
add
fmuls
std
call
scas
icebp
cmp
ret
ljmp
jnp
cltd
adc
aad
or
mov
or
jnp
scas
mov
mov
mov
or
mov
fnsave
jns
popa
push
shr
cmp
push
pop
xchg
int
in
js
push
mov
mov
jl
iret
add
and
ror
sub
fcomps
fs
iret
ljmp
and
jo
push
jp
dec
pop
xchg
mov
rorb
cld
movsb
mov
mov
enter
pop
pushf
or
adc
jb
sar
das
cmpsl
out
xlat
sbb
jno
cmpsb
gs
icebp
cmp
test
aad
lret
dec
sbb
fidivs
or
daa
fwait
mov
dec
mov
mov
and
fdiv
mov
mov
xchg
and
adcb
nop
in
or
push
push
sbb
movsl
xor
inc
inc
iret
out
xchg
add
sbb
cmpsl
dec
push
sbb
in
stc
add
call
mov
das
or
je
in
mov
xor
xchg
lds
je
xor
loopne
pushf
mov
add
or
scas
or
leave
das
test
sub
mov
gs
cli
push
inc
pop
sarl
lods
scas
dec
movsb
mov
push
mov
or
enter
mov
mov
fwait
push
out
in
lods
inc
sub
cmp
push
xlat
sbb
movsl
or
mov
dec
outsb
ljmp
popa
fiadds
imul
cmp
dec
daa
addb
mov
dec
frstor
mov
xor
in
jmp
dec
xchg
cli
fucomip
push
cmp
lods
inc
dec
fpatan
das
cmp
enter
fwait
xor
push
fildl
lahf
rcll
cmpsb
enter
shll
fninit
pusha
jo
in
adc
call
orb
sub
pusha
xor
inc
mov
out
push
xchg
enter
mov
jbe
fidivs
dec
jno
dec
call
cmp
ljmp
cmpsb
cld
aas
repnz
cs
popf
xchg
and
das
xor
jb
push
inc
btr
jne
inc
test
pop
fimuls
push
scas
xchg
xchg
jmp
lahf
sbb
pop
test
aaa
mov
xchg
xorb
jl
push
jns
stc
imul
shl
xor
push
add
inc
push
jge
packsswb
out
adc
mov
dec
insl
cmp
in
test
push
in
pop
and
dec
mov
fiaddl
out
ljmp
out
popa
dec
adcb
hlt
push
mov
outsb
pop
or
mov
push
xchg
adc
ficompl
xchg
cli
add
das
pop
push
idivl
int
imul
ljmp
pop
pop
and
ljmp
mov
mov
pop
movsb
inc
in
pop
adc
outsl
cmp
fildll
inc
dec
sub
sub
stc
out
push
out
sub
sbb
fwait
pop
sahf
and
mov
in
cmpl
push
mov
or
or
xor
dec
cmpsl
push
xor
lahf
or
in
cmp
es
in
mov
pop
data16
je
andl
outsl
jns
rorl
push
mov
push
and
fisubrs
jge
sbb
dec
rorl
adc
insl
pop
xor
ret
icebp
imul
imulb
xchg
inc
es
mov
push
aam
and
add
js
jp
cmp
xchg
mov
inc
xor
sub
daa
aad
mov
in
clc
data16
or
iret
and
sub
hlt
xchg
aas
imul
push
jo
mov
mov
loope
add
push
je
and
and
sub
mov
jg
jno
push
shlb
test
into
cmp
out
fstpt
mov
aam
lret
mov
out
sub
lcall
adc
inc
mov
cli
call
aaa
out
aas
insb
aaa
rcrl
clc
incl
or
loopne
testl
or
cwtl
push
pusha
lock
push
sub
leave
test
xchg
cld
xchg
xorb
das
fimuls
xchg
push
movsl
jg
push
sbb
movsl
fcom
jmp
movsb
dec
xor
jle
ljmp
add
sbb
jae
jne
cmp
aas
mov
roll
xchg
out
out
bound
into
push
cld
enter
sahf
jns
lock
psubsw
in
imul
cmc
pop
lahf
aam
fmull
and
dec
sbb
xlat
jg
adc
pop
sub
shrl
cmp
pushf
mov
push
aas
loopne
int
addr16
jle
rclb
mov
sar
out
packssdw
sub
scas
push
cmp
sub
out
lcall
mov
popf
fldl
sbb
imul
jns
pushf
inc
in
scas
sbb
dec
jbe
mov
mov
aam
lcall
rorl
lret
fidivrl
icebp
test
push
icebp
cmpsl
andb
xchg
inc
push
cltd
or
or
add
out
mov
add
iret
out
xchg
stos
sar
in
orb
bound
out
jecxz
push
enter
xor
stos
sub
dec
test
inc
mov
shrl
or
cmp
mov
mov
mov
mov
pushf
push
dec
fimuls
add
mov
daa
clc
gs
sub
icebp
cltd
sbb
cvtps2pd
jbe
lcall
mov
stos
mov
and
hlt
mov
lock
fimuls
inc
push
jno
and
pop
rclb
pop
dec
arpl
add
dec
or
repz
inc
pop
xchg
cmc
jle
push
or
and
mov
lock
movsl
adc
arpl
pop
mov
sub
and
xor
fisubl
push
dec
sub
test
lahf
sbb
movsb
aaa
imul
push
ficoml
mov
mov
sbb
rcr
lods
outsl
push
aaa
ret
mov
mov
aaa
cmp
hlt
in
std
rcl
scas
jae
in
cmc
leave
and
adc
push
loope
jl
or
int
pop
pop
push
popa
fs
mov
jo
adc
dec
addr16
imul
adc
out
cs
mov
add
mov
lods
mov
sub
sbb
xor
add
andl
mov
mov
test
outsl
pop
pop
je
pop
xchg
xchg
into
jns
pop
lods
pop
mov
dec
adc
aad
loop
sahf
int
pop
cwtl
sbb
xchg
sub
push
test
push
loop
test
and
cmp
push
xlat
push
pop
cmp
push
mov
movsl
xchg
cmc
adc
divl
sti
jg
ret
in
sub
js
pop
xor
rcl
jbe
out
push
sbb
movsb
jmp
xor
sub
mov
scas
mov
aaa
adc
insl
into
imul
ret
aaa
sub
xchg
fmuls
stc
mov
repz
lret
repz
fidivrl
jp
shll
add
or
jp
adc
xchg
loope
sahf
sub
push
or
es
push
jecxz
loope
aas
ljmp
cs
lahf
bound
push
das
jne
xchg
movsb
pop
popf
lods
daa
add
fbld
ret
adc
aaa
je
int3
sbb
outsb
loope
push
bound
pop
mov
int3
aad
sub
scas
mov
push
mov
inc
pop
shll
pop
pop
mov
iret
mov
adc
push
js
adc
test
mov
hlt
ret
fcoms
cmpsb
clc
pop
movsb
mov
jo
push
fildll
aad
sbb
mov
mov
jne
popa
fisttps
aam
sub
aas
adc
int3
stos
lock
clc
lods
lcall
mov
lcall
sub
pusha
and
pushf
pushf
cwtl
jle
mov
testb
and
in
shll
scas
ds
cmpsb
xchg
inc
jge
into
mov
sbb
aaa
dec
and
sbb
pop
popa
cs
or
sbbb
fs
stc
hlt
pushf
imul
cwtl
xchg
stos
je
cmp
lcall
mov
lods
jl
nop
dec
dec
and
pop
xchg
lret
pop
cmp
xchg
mov
gs
add
jo
pop
jge
push
pop
ja
mov
in
sbb
sbb
shr
lods
shll
pop
nop
shrl
sbb
frstor
dec
inc
and
mov
or
jg
aaa
xor
mov
mov
sahf
je
mov
loop
fadds
xor
idivb
adc
ret
add
jp
or
loop
cs
jg
jo
insl
push
ja
cmp
sub
pop
ret
aaa
std
pop
pop
xchg
call
in
pusha
testb
push
aam
in
into
cltd
mov
push
adc
movsb
mov
pop
in
cmp
mov
push
mov
shlb
add
int
into
mov
insl
lret
mov
xor
xor
pop
and
cs
push
movsl
jge
cmp
mov
xchg
xor
divl
bound
xor
ficoml
xchg
xor
inc
dec
jge
xchg
jmp
insb
adc
leave
mov
pop
andb
cs
pop
and
dec
aaa
adcb
push
lods
pop
and
push
sub
aad
rol
pop
mov
xchg
jmp
xchg
ret
mov
mov
cmp
mov
mov
int3
scas
cmp
ja
mov
mov
sbb
jg
inc
movsl
pusha
and
sbbb
add
mull
and
xchg
cli
push
imul
rorb
or
sbb
cwtl
out
pop
loopne
add
add
cmpsb
inc
jns
int
daa
call
xchg
je
out
jmp
pop
adc
scas
out
pop
sbb
pop
mov
xlat
jg
out
xor
or
in
inc
push
dec
repz
mov
clc
sbb
movsl
push
popf
imul
push
lret
out
mov
jb
push
inc
rolb
cmp
out
xor
fld
scas
enter
lock
lret
inc
dec
pop
mov
loopne,pn
xchg
stos
pop
testl
arpl
ret
leave
andb
call
pop
fsubr
add
mov
cmp
xchg
adc
mov
pop
mov
dec
xchg
jg
les
clc
out
addb
lahf
fldl
std
sbb
das
movsb
pushf
dec
jecxz
adcb
fisubrl
xchg
cwtl
xor
das
filds
pushf
xchg
cwtl
xchg
push
lods
pop
leave
mov
jo
jge
inc
lret
and
pusha
add
das
dec
out
inc
cmpsb
mulb
push
jne
out
push
mov
mov
or
adc
mov
arpl
sub
js
pop
je
or
insl
inc
sbb
or
mov
notb
xchg
lds
cli
lret
pop
pop
xchg
pushf
pusha
fs
fsubrs
cmp
std
fnstenv
fisubrs
pop
nop
out
pop
jo
mov
mov
fldl
neg
daa
pop
ss
jl
mov
ss
jge
push
dec
out
sub
pop
push
sbb
push
mov
or
data16
leave
push
and
dec
or
xor
in
mov
das
xor
jbe
push
lds
je
xchg
cmp
xor
cmc
out
xchg
push
out
lds
push
pop
dec
mov
jle
outsl
jbe
cwtl
idiv
fisubrl
leave
adc
xorb
mov
jp
idivb
push
out
and
das
lods
outsb
sbb
pop
jge
bound
ret
and
rorl
mov
test
movsl
inc
fisubl
out
xchg
push
push
fs
mov
add
inc
xor
and
jle
movsl
pop
xchg
lcall
cmpsl
xchg
bound
push
dec
inc
mov
sarb
xchg
dec
sbb
andl
add
lds
pop
inc
dec
aam
or
lods
cmp
add
sti
pextrw
popf
jo
dec
out
ficoml
inc
cmpl
or
std
xlat
xorb
cmpsb
pusha
pop
inc
xchg
inc
jmp
xchg
inc
mov
dec
sbb
bound
and
outsl
cmpsb
mov
loope
cmp
cmp
lcall
mov
mov
insl
mov
xchg
mov
lock
fidivrs
fmuls
add
dec
ja
mov
mov
subl
sbb
mov
dec
pop
mov
movsb
aam
movsb
sbb
mov
mov
xchg
jae
lea
push
fbld
fsubs
je
jnp
push
add
cmp
cmp
loop
or
aad
mov
jae
cmpb
test
sub
popf
jg
js
sbb
mov
mov
lret
cltd
pop
add
cmpsl
jmp
sbb
mov
adc
mov
inc
dec
pop
adc
jg
jmp
pop
das
ss
push
xlat
jle
ret
repz
pop
orb
out
or
and
test
rcrl
pop
repnz
stc
in
mov
mov
sbb
push
in
loopne
adc
mov
sub
cli
mov
xchg
mov
shlb
add
pop
aad
pop
cmpsb
or
sub
or
xor
mov
xchg
mov
mov
xchg
lret
fwait
jno
insb
cmpsl
mov
xchg
aad
in
outsl
loopne
lret
out
out
jns
negb
mov
pop
mov
icebp
stos
push
mov
inc
dec
mov
push
mov
movsl
test
jle
mov
xlat
add
xchg
popf
pop
add
xchg
rorb
sub
sbb
mov
cmpsl
pop
xchg
xor
in
call
pop
or
sbb
adc
xor
sub
and
in
add
sbb
inc
fiaddl
dec
popf
push
mov
adc
rclb
cmpsl
test
mov
sub
bnd
jo
ret
dec
mov
pusha
inc
outsl
outsb
mov
sbb
inc
push
lea
outsb
push
stc
test
fwait
xchg
pop
inc
mov
loope
subl
dec
movsb
mov
icebp
inc
mov
and
test
pop
in
in
or
mov
call
pop
push
jle
pop
sti
out
xchg
lods
push
mov
jb
lret
adc
fldcw
inc
ficoml
sbb
sarl
repz
fucomp
sub
pushf
outsl
popa
in
jo
pop
inc
movsb
push
jle
test
lcall
pop
frstor
sbb
ja
leave
sahf
call
jg
xchg
stos
daa
gs
cmpb
jo
iret
stos
gs
or
mov
sub
aad
mov
int
into
leave
add
mov
cmp
dec
sbb
sbb
sub
shl
je
fwait
push
inc
imul
xlat
mov
and
sub
sbb
push
cmp
push
cmp
cltd
inc
add
jle
out
fsubr
int
mov
cwtl
and
out
pop
jmp
shll
into
notb
loope
js
test
cmp
jp
add
outsb
jno,pn
ljmp
scas
mov
xchg
jne
sti
mov
push
mov
or
lods
cli
lret
fsts
lds
mov
jo
pop
arpl
ljmp
scas
xchg
out
push
adc
add
cwtl
ja
nop
adc
leave
lods
push
sbb
pushf
fnstenv
adc
sub
xor
pop
les
add
dec
pop
sbb
cltd
jle
sbb
inc
pop
push
push
leave
dec
adc
add
pop
dec
inc
lods
jmp
xchg
mov
sub
jno
insb
out
add
and
lock
push
das
adc
int3
inc
in
mov
lock
ror
mov
in
push
loopne
push
addr16
jmp
mov
mov
popf
mov
clc
dec
subb
sub
and
test
insl
mov
push
xchg
ret
call
cmp
jo
jns
inc
fdivs
btr
iret
fwait
push
imul
mov
dec
xlat
jnp
push
idivb
movsl
enter
push
inc
fs
and
lods
xor
or
inc
test
or
outsl
ret
mov
stos
roll
jge
cmp
outsl
mov
dec
repz
jb
das
xchg
icebp
imul
movsb
adc
cmc
jge
cmp
lock
xchg
jb
jae
push
leave
scas
out
or
xchg
mov
testl
xor
mov
leave
cmp
fdivl
movsb
pop
inc
jge
scas
fsubs
dec
inc
inc
loopne
imul
mov
mov
cwtl
insl
inc
jno
imull
inc
and
and
adc
cmp
xchg
lock
jl
fldt
xchg
repz
add
nop
cmp
cmp
jge
or
cs
stc
xor
mov
jmp
mov
fwait
testb
push
push
rep
pop
stos
mov
data16
sub
or
mov
mov
decb
scas
ja
fst
bound
das
sbb
xchg
inc
cmc
or
push
lahf
and
stos
dec
cmp
or
inc
xor
add
cmpsl
je
mov
jae
repnz
add
daa
into
pop
cmp
shrl
push
divl
dec
out
cld
icebp
rcrl
imul
fisubrs
adc
pop
inc
mov
nop
mov
dec
lret
xchg
push
sar
sbbb
fucompp
aas
inc
adc
pop
fwait
xor
insb
mov
mov
or
inc
pop
call
cltd
pop
fisttpl
push
dec
inc
sbb
sub
repnz
imulb
mov
inc
mov
sbb
sub
mov
pop
sub
jno
lahf
in
cli
daa
xchg
fldcw
das
mov
es
lret
sub
inc
mov
aad
sub
loope
es
or
fisubrs
cmpsl
insl
aaa
iret
sarl
in
xchg
cmpsb
or
mov
pop
test
mov
cwtl
cli
fidivrl
cmpsb
cwtl
or
pusha
and
cli
enter
sbb
inc
lahf
push
fsubrs
lcall
fldt
xchg
sbb
lahf
dec
mov
cld
jno
add
cmp
jae
mov
lret
leave
mov
ds
iret
xchg
dec
dec
adc
mov
mov
lock
and
dec
shlb
aas
cmpsl
dec
pop
mov
mov
mov
and
adc
mov
psrld
daa
es
stos
xchg
pushf
rcrb
sub
and
jno
mov
out
lcallw
data16
jb
insl
call
xchg
stc
dec
ficoml
jae
adc
aam
lcall
jge
add
mov
push
pop
imul
or
stos
jg
and
xchg
arpl
push
and
fisttpl
adc
lcall
jmp
fsubl
imul
sub
inc
or
popf
inc
push
jg
cld
push
push
mov
cs
mov
sbbl
pop
lds
imul
jmp
loop
dec
out
mov
clc
test
mov
and
rorb
jbe
incl
dec
push
push
dec
pop
mov
xor
jg
jle
push
and
lods
and
test
adc
jb
adc
fdivrp
stos
xchg
mov
ljmp
push
cld
mov
sbb
imul
divl
pop
fidivrl
call
dec
repnz
pop
loopne
testl
mov
lds
imul
fldcw
addb
lret
test
xor
push
push
jae
mov
ds
mov
push
push
push
fdivrl
mov
pusha
cltd
insb
mov
and
aad
lahf
push
negl
jnp
mov
xor
mov
call
stos
sbb
cmc
xor
js
lcall
xchg
xor
movsb
jb
xor
andl
stos
jge
imul
rcll
xor
pop
xchg
xchg
out
cltd
adc
mov
sub
inc
testl
inc
not
std
aam
shlb
pop
or
push
push
fbstp
mov
ret
push
inc
sti
and
mov
stc
mov
mov
lret
add
stos
lock
lahf
add
jae
lret
pop
arpl
stos
fxch
shlb
xor
jmp
scas
adc
inc
stc
inc
fwait
push
sbb
and
mov
pop
xor
push
cmp
cmp
imul
cmp
imul
das
and
leave
repz
fldt
sahf
loope
fiadds
inc
popf
ljmp
out
rclb
out
sti
fnstsw
inc
mov
loopne
jecxz
aas
add
cmpsb
call
ret
movsb
insl
ss
sub
add
inc
std
rorb
daa
adc
arpl
sub
push
mov
push
addb
pop
sbb
popa
cmpsl
fistps
test
gs
aad
insl
cwtl
sbb
lods
ret
jno
pop
push
dec
out
sar
mull
sbb
push
mov
sti
jecxz
jns
test
xchg
xor
lock
insb
addb
mov
inc
push
ja
fisubrl
test
dec
in
or
mov
inc
adc
rol
int3
and
jbe
nop
jmp
jnp
push
mov
inc
dec
mov
lods
or
mov
mov
sbb
mov
and
sbb
pop
in
adc
push
xchg
sub
add
out
pop
mov
sbb
mov
or
jb
mov
inc
negl
jmp
add
mov
lea
fisubs
dec
xchg
dec
aam
push
dec
xchg
xchg
mov
data16
jecxz
int
xchg
mov
ljmp
mov
cwtl
mov
call
cmp
rcrl
pop
insl
jnp
add
add
fdivr
mov
stos
and
rcll
pop
mov
push
fs
push
ds
add
insl
loope
incl
sarb
jae
popa
or
xchg
cli
pop
mov
mov
pop
in
in
repz
stos
xor
adc
insb
rorl
andl
and
xor
imul
inc
ror
sahf
or
lock
adc
sub
sahf
daa
jns
adc
insl
cmp
sbb
sub
loope
bswap
xchg
xchg
push
scas
imul
jg
aas
in
inc
pop
cwtl
in
sbb
push
icebp
xchg
jo
jle
sub
cli
xor
and
rcll
les
xchg
mov
ja
push
mov
fwait
mov
jl
lret
mov
ficoml
push
mov
dec
jge
lahf
ss
sub
cmp
mov
repz
arpl
inc
leave
fdivr
test
cli
xor
jmp
mov
push
mov
out
push
cwtl
mov
psraw
loope
negb
fwait
lods
xor
pushf
cmpsl
xor
ljmp
mov
jae
cmc
subb
insl
cmp
les
jnp
xor
jmp
shll
testb
ret
jge
jmp
xchg
mov
push
jle
xlat
mov
std
sbb
fimuls
mov
push
js
movsb
jecxz
popa
xchg
xor
jns
or
gs
mov
push
cmp
push
pop
sti
cmp
sbb
adc
add
dec
adc
cmp
cmp
cmp
jbe
cmp
mov
push
sbbb
imul
aam
popl
adc
rorb
pop
cltd
lods
in
sub
xor
inc
int3
cmp
jns
mov
es
and
fwait
dec
fwait
ja
dec
or
stc
jmp
mulb
jle
pop
xchg
iret
int3
fsubl
das
ret
out
or
repz
xchg
and
xchg
mov
repz
daa
cltd
mov
and
pop
arpl
pop
sbb
mov
jl
ds
jae
or
jns
enter
push
jp
test
cwtl
outsl
mov
xchg
cld
sbb
xchg
xchg
mov
jno
nop
sbbl
fisubs
loopne
add
pop
int
sbb
and
ficomps
ds
in
test
add
cmova
xchg
jge
xchg
xchg
jg
std
shlb
inc
xor
cmp
shl
push
xor
xor
push
sbb
lret
call
and
dec
movsl
and
int
xchg
xchg
fildll
sbb
mov
pop
lea
and
dec
jg
jbe
push
cmp
test
shr
mov
lcall
jl
or
mov
jno
das
lods
push
movsl
and
outsl
or
and
cli
lods
cmp
roll
sti
loopne
cmpsl
xor
arpl
mov
insb
jmp
fcomps
test
movsb
inc
xor
cmpb
ret
or
push
dec
cmp
ret
ret
push
xchg
ja
pop
dec
addb
adc
cli
and
inc
fmuls
lods
loope
xor
jle
sbb
jge
cmp
in
mov
add
push
push
fs
cmp
mov
mov
addl
mov
pop
jp
mov
push
fs
mov
mov
movsl
lds
jp
xchg
xor
scas
or
ret
dec
cmp
les
push
push
dec
inc
cbtw
push
lods
js
mov
push
inc
ja
mov
or
popa
daa
add
push
jmp
mov
in
lods
or
jp
sub
push
data16
or
xchg
sbb
es
push
insb
add
jb
stc
fldl
cli
std
mov
jle
xchg
leave
mov
popf
cmp
mov
jle
stc
popa
push
int3
pop
aad
test
mov
and
or
shll
pop
push
mov
add
enter
rcll
jmp
shrb
dec
ret
add
scas
add
inc
mov
aam
jle
in
out
cmpsl
cmp
add
jbe
xlat
or
pop
jg
push
xor
into
mov
in
andb
fwait
shrl
scas
clc
setbe
int
inc
loop
mov
ds
stos
jp
mov
out
ja
clc
fldt
xchg
push
cltd
repnz
xor
adc
add
add
stc
dec
idivl
das
xlat
cmpsb
jmp
push
xchg
out
sarl
jle
sub
inc
leave
ret
push
out
enter
or
rcrl
and
add
mov
sbbb
scas
sbb
pusha
mov
fldl
ja
pop
scas
adc
fnstcw
bound
push
aas
movsl
sbb
push
adc
das
lds
cmpsl
or
jmp
cmp
mov
pop
in
nop
mov
mov
aad
inc
mov
in
fwait
mov
sbb
out
sub
ljmp
xchg
xchg
mov
and
sahf
and
leave
jns
pop
mov
shr
cmc
or
add
cmp
stc
ds
inc
jb
ret
mov
imul
inc
es
jne
mov
dec
mov
loop
cwtl
cmp
es
jp
mov
jp
sub
adc
icebp
pushl
imul
cltd
addr16
push
sarb
pop
xchg
cmp
repnz
test
into
push
inc
add
inc
repnz
pop
cmc
or
sbb
ljmp
scas
xor
inc
inc
fildll
jne
fsts
mov
xchg
loop
mov
sbb
sbb
jb
aaa
jo
lods
mov
cmp
adc
mov
lods
dec
sbb
orb
pop
add
push
orl
cmp
nop
stc
clc
pop
into
sbb
lcall
add
mov
mov
stc
movsl
sub
and
inc
mov
mov
pop
jne
insl
dec
outsb
mov
lea
lret
sti
iret
roll
jp
ja
xchg
das
jne
mov
insb
inc
add
jg
mov
push
push
pop
fdivl
jp
mov
pop
xor
enter
je
pushl
lea
dec
dec
pop
mov
mov
call
and
sub
dec
pop
es
xorl
repz
sub
out
pop
adcb
in
dec
mov
sbb
add
dec
mov
arpl
fiadds
add
and
or
sbb
hlt
outsb
mov
lods
mov
xchg
in
pop
test
pop
jno
sbbb
mov
in
imul
icebp
mov
jecxz
movsl
sbb
test
mov
xor
push
jmp
lret
fistpll
loopne
lock
push
jge
imul
lret
shrb
out
test
adc
out
popa
in
pushf
shl
dec
insl
enter
xor
movsl
mov
iret
jl
push
imul
xchg
std
aad
jecxz
ss
divl
and
sub
stos
xchg
xorl
mov
push
stc
dec
stc
and
mov
cwtl
mov
ds
xor
mov
ljmp
adc
push
daa
in
or
dec
into
push
add
orl
jg
fidivs
or
sbb
cld
loop
call
outsb
insl
xchg
shlb
xchg
loop
mov
push
add
int
outsl
mov
sbb
push
gs
out
stos
cmp
lcall
pop
loopne
gs
sbb
or
mov
jb
xchg
ret
ja
sub
push
aaa
in
or
dec
push
rcrl
rorb
xchg
mov
cmc
leave
mov
lods
mov
xchg
dec
shrl
mov
cli
or
sbb
jns
pop
enter
mov
xor
mov
pop
push
lock
jnp
dec
or
dec
and
mov
fsubrl
or
xlat
cmp
pop
daa
mov
out
add
addr16
xor
jne
sbb
add
mov
and
jmp
mov
xor
pop
stc
mov
adc
or
inc
call
fsts
xor
scas
inc
cmp
mov
mov
xor
sahf
ret
test
out
add
inc
and
push
es
and
dec
adc
in
mov
aas
daa
mov
movsl
sbb
or
fwait
cmpsl
lahf
push
sub
mov
cmp
push
and
cmpsb
jl
push
rcrl
jecxz
divb
push
sub
fisttpl
insb
inc
repnz
cmp
add
adcb
cmp
jl
jns
orl
pop
cmp
fimuls
jecxz
cli
lret
pushf
xlat
nop
divb
xchg
cld
ss
add
xchg
loope
in
hlt
xchg
mov
mov
arpl
xchg
data16
hlt
mov
test
pushf
adc
mov
shl
push
xchg
scas
adc
adc
les
and
cli
js
je
idiv
rorb
filds
jb
sub
lds
xchg
mov
mov
ret
out
push
test
mov
and
mov
dec
mov
adc
mov
adc
jns
lock
repz
movsl
xor
mov
loope
mov
mov
or
setnp
mov
pop
lret
dec
out
mov
xchg
mov
rorl
in
add
sub
push
scas
addr16
int3
jp
loope
imul
jo
inc
sarb
jae
push
fcomps
pop
inc
je
sbb
jge
leave
sub
jl
test
jo
push
inc
icebp
jg
jnp
dec
imul
xor
insb
and
xchg
aaa
or
adc
addr16
leave
repz
negb
sub
inc
inc
ljmp
jge
xchg
mov
mov
loope
mov
nop
cli
sbb
out
mov
add
in
rolb
cld
sbb
mov
pop
pop
lods
cld
cld
mov
shll
movsb
push
add
xor
fbld
cmc
push
fdivl
dec
inc
dec
add
cltd
arpl
enter
mov
mov
mov
jl
jmp
insb
fwait
stos
xchg
inc
in
add
mov
iret
sbb
or
in
sub
out
jg
mov
sbb
clc
rorb
js
add
cmp
movb
addr16
xor
das
sub
xlat
aas
and
negb
cmp
mov
inc
outsl
mov
insb
push
or
push
out
hlt
or
xchg
push
lds
mov
push
ds
fsubl
push
movsl
cmc
enter
jge
pop
das
lds
mov
dec
sbb
inc
rclb
xchg
pushf
xchg
jne
and
sub
mov
lods
mov
mov
mov
decb
mov
shlb
mov
test
test
jmp
cs
movl
mov
aaa
jmp
lock
test
pop
push
adc
hlt
into
push
ret
cmp
lods
fisttpll
mov
out
enter
stos
push
jo
cmc
addr16
sahf
pop
pop
xchg
xchg
cld
int
add
pop
imul
icebp
xchg
scas
jnp
in
outsl
xor
lahf
psubq
sar
xorl
adc
sbb
movsl
sbb
mov
xor
shrl
mov
mov
cld
mov
arpl
sbb
out
pusha
lock
cwtl
pop
scas
cmp
loope
xor
or
cmc
sub
iret
or
cmp
or
and
sub
dec
ljmp
lods
popa
insb
hlt
int3
fnstenv
mov
stc
inc
dec
cmp
and
jnp
sub
adc
xor
mov
mov
test
scas
aaa
xchg
mov
sub
xchg
lods
pop
xor
push
push
sub
xor
jge
mov
shlb
sub
sbb
mov
dec
sbb
inc
mov
cmp
add
or
dec
out
jno
rclb
lods
repz
push
enter
aas
rcrl
sbb
into
sbb
and
sbb
rorl
stos
js
push
adc
cs
inc
xor
imul
ljmp
arpl
xchg
xor
cmp
and
js
rcrb
leave
lds
push
inc
push
gs
mov
mov
aad
dec
dec
out
and
jbe
mov
dec
sub
mull
mov
jle
stc
lock
or
push
cmc
jo
inc
fstl
dec
adc
dec
fdivrs
insl
rcrl
fcomip
dec
dec
addr16
mov
out
iret
sub
xchg
adc
and
cmp
test
jb
insb
loop
popa
cmpb
mov
mov
movsl
cmpsl
and
pop
scas
lock
pusha
pop
pop
movb
push
in
jno
push
inc
data16
jecxz
mov
dec
mov
sbb
or
stos
dec
repnz
pusha
cmp
cmp
ret
sbb
and
bound
icebp
mov
jno
test
jmp
notl
sti
ja
mov
sarb
cmc
icebp
jo
bndstx
push
mov
sub
call
xor
mov
sahf
sub
push
inc
xor
add
push
pushf
mov
pop
sbb
xor
sub
mov
fstl
add
xor
adcb
movsl
sub
sarl
inc
dec
inc
mov
add
icebp
jo
mov
xchg
jno
mov
outsl
add
mov
popf
mov
scas
out
push
mov
ret
mov
mov
out
lods
shll
push
shll
mov
jle
test
ret
dec
pusha
test
das
cmovb
pcmpgtb
fildll
pusha
lea
rolb
xlat
mov
inc
adc
pop
adc
and
pop
push
es
cmp
orl
sub
push
jne
popa
fisttpl
jmp
cmp
leave
shll
mov
push
aam
shl
pop
cmp
sbb
test
data16
pop
divl
add
sbb
fiadds
sub
lea
les
jno
adc
movsl
rorl
dec
cmp
cmp
pop
test
test
xchg
mov
mov
hlt
mov
fsubl
dec
ja
adc
sbb
and
lret
and
mov
rclb
xor
insb
lea
fidivs
jp
insb
jae
dec
mov
outsl
or
push
dec
jnp
sub
daa
dec
mov
mov
dec
mov
dec
adc
xor
mov
xchg
imulb
neg
mov
xchg
or
das
fld
ljmp
jbe
out
pop
test
cmp
fwait
hlt
and
rcrb
test
inc
lahf
ljmp
into
scas
mov
add
mov
xchg
xor
mov
ja
pop
adc
scas
inc
insl
or
pop
filds
pop
inc
add
xchg
imul
std
jmp
dec
pop
inc
sub
xchg
xchg
movsl
cmp
xor
stos
sub
cmpsb
sbb
pop
xchg
adc
fildll
pop
fst
pop
jae
dec
shlb
insb
out
mov
lock
mov
add
or
mov
push
add
mov
andb
jl
sub
jecxz
or
repnz
popf
xchg
sbb
das
mov
xchg
mov
xchg
jg
or
nop
lods
mov
enter
inc
fwait
int
rclb
test
cwtl
in
cmc
inc
test
sarb
jg
sub
daa
insl
js
pop
and
jmp
inc
insb
mov
bound
scas
cld
mov
aaa
icebp
aas
or
pop
mov
loop
repz
in
or
xchg
inc
mov
adcb
xor
scas
cmpsl
jl
gs
lds
dec
shl
imul
dec
xor
insb
cmp
es
pop
jg
cli
and
je
repnz
push
xor
das
mov
push
test
insl
mov
pop
xlat
dec
out
and
mov
mov
aaa
scas
daa
lock
push
jns
imul
jecxz
lcall
mov
jae
lods
addr16
fisubs
push
call
push
pop
pop
sahf
outsb
ja
repnz
push
fisubl
sub
aas
and
movsb
mov
lret
jbe
shr
adc
pushf
push
daa
aam
pop
mov
decb
add
push
lahf
inc
adc
into
js
adc
inc
sbb
dec
mov
in
xlat
insl
sbb
mov
mov
rcrb
nop
mov
cld
or
xchg
mov
repnz
loopne
jg
xchg
bound
pop
adc
push
xchg
movsl
out
ds
sub
mov
xlat
push
mov
adc
jecxz
or
jg
std
adcl
dec
add
movsl
sbb
hlt
std
jecxz
ret
loop
push
test
jne
xor
or
mov
shl
addl
loopne
fidivrl
add
loopne
and
push
inc
gs
pushf
push
pop
adc
lea
out
test
cmpsb
jl
shrb
dec
lret
xchg
loope
sub
mov
jbe
xor
iret
call
add
and
cltd
mov
testb
jo
sbb
dec
xor
mov
jp
dec
push
mov
mov
mull
mov
ds
imul
sub
dec
xchg
mov
sahf
mov
mov
mov
int3
push
rorl
das
jae
ficompl
adcb
ret
ss
mov
sbb
stos
call
sbb
jae
loope
xchg
cmp
iret
xor
mov
out
je
push
adc
leave
sub
inc
shl
inc
daa
adc
cmpsl
int
mov
stos
cmp
cmp
ret
jmp
or
push
pop
lods
push
inc
int
loopne
sub
mov
scas
in
dec
xor
jb
jo
push
pop
xchg
or
orl
add
xor
push
push
int3
out
add
xchg
push
mov
aam
shlb
sahf
lcall
lret
pop
shrb
inc
cltd
iret
and
loop
jo
rclb
in
mov
or
cmp
fists
mov
jbe
push
lahf
loop
mov
lret
mov
data16
dec
iret
lods
cmpl
cltd
or
fmuls
xchg
mov
sbb
cmpsl
insb
in
sub
pop
mov
ret
xchg
sub
adc
inc
push
xor
pop
fsubl
or
lods
jecxz
aam
es
or
dec
push
cmp
sysenter
inc
sbb
mov
jecxz
sbb
cmpsl
adc
inc
cmp
add
push
test
add
scas
orb
push
sbb
pop
push
shl
xor
pop
jge
pushf
sahf
jnp
add
mov
and
push
mulb
pop
sbb
call
pop
dec
aaa
sub
jecxz
and
pop
dec
pushf
arpl
fcompl
mov
xchg
fmuls
data16
fmul
push
ja
jnp
sahf
dec
xchg
mov
shll
sti
xchg
add
push
xchg
mov
or
jl
inc
idivb
push
mov
daa
mov
and
dec
add
lock
test
ljmp
jnp
aaa
imul
int3
rcr
repz
frndint
movl
xchg
mov
jge
je
icebp
sbb
inc
js
xchg
sub
and
mov
push
cmp
std
mov
sub
repz
pop
leave
jbe
mov
fildl
push
scas
mov
or
and
popa
fstpt
rcr
jge
test
pop
add
fcomps
xchg
in
daa
xchg
out
dec
push
mulb
gs
jle
mov
scas
popf
ret
lahf
xchg
sbb
popa
inc
add
mov
repz
jge
lea
sbb
mov
fwait
into
pop
sbb
test
add
and
int3
pushf
cmp
push
outsb
cwtl
cmp
popa
notl
adc
shl
cwtl
mov
pop
std
inc
jae
cmp
insb
lds
add
in
cmp
push
sbb
sub
pusha
cmc
repnz
cmp
cmp
inc
ja
dec
push
hlt
sbb
and
xor
pop
push
pop
outsl
fsubp
jae
push
aaa
or
ret
out
adc
xor
xchg
aaa
outsb
imul
adc
arpl
pop
iret
inc
mov
cld
out
sbb
cmpl
xchg
fisubrs
mov
add
shll
fiadds
adc
loope
mov
jns
in
dec
jnp
push
jg
out
sub
push
mov
pop
fwait
xchg
lahf
pop
mov
andb
and
out
insb
pop
shll
lock
faddl
mov
nop
xchg
and
lock
fwait
xchg
adc
pop
xlat
stos
pop
testb
mov
popf
xor
sbb
push
mov
insb
mov
mov
aam
in
movsb
addl
jl
adc
ljmp
pushf
xchg
lock
pusha
insl
dec
cmpsl
jno
mov
outsl
ja
mov
ds
push
sti
push
mov
outsb
push
orb
dec
mov
leave
dec
sbb
hlt
loopne
dec
mov
push
mov
lock
adc
pop
jns
loope
daa
das
dec
rep
test
scas
les
fists
loopne
lods
fnstcw
dec
xchg
hlt
lahf
or
stc
mov
in
mov
es
cmc
add
mov
xchg
sbb
cmp
loopne
mov
xchg
aad
xorl
mov
test
fwait
pop
insl
sti
mov
xor
sub
std
mov
loopne
sbb
dec
jo
add
imul
inc
xchg
mov
adc
mov
adc
in
add
pop
xchg
push
out
or
loopne
and
jl
cmp
cltd
lods
xchg
movsl
jbe
das
jge
dec
addr16
arpl
arpl
or
lds
add
mov
mov
inc
mov
add
and
mov
mov
lock
rolb
or
insb
outsl
and
mov
mov
pusha
out
pop
and
pop
push
add
mov
sbb
wbinvd
int3
fmulp
pop
ds
push
scas
and
cmpsl
dec
add
mov
cmp
and
or
sbb
add
xor
notl
cs
mov
push
jl
adc
xchg
out
in
or
imul
lds
test
loopne
lcall
sbb
scas
lahf
sbb
inc
es
aam
push
push
fistpl
pop
data16
out
xchg
out
push
fsubrp
xlat
jmp
call
hlt
out
xchg
mov
enter
sbb
leave
cmp
rolw
insb
cs
sub
xor
ss
shrl
inc
mov
xchg
xchg
scas
lcall
fildl
shll
ja
fsubrl
nop
nop
mov
cmp
xor
xchg
scas
or
je
add
mov
xchg
ficomps
sbb
mov
pop
cs
jo
test
outsl
xchg
and
jg
or
xor
dec
pop
call
mov
stc
std
mov
shr
jno
mov
aam
xlat
cmp
lret
je
jb
ret
or
xchg
mov
dec
sbb
call
mov
xchg
andnps
adc
pop
mov
sbb
xchg
mov
adc
dec
or
test
ss
out
mov
jne
cmpsl
jae
mov
incb
int3
es
push
test
push
lods
pop
jg
dec
insb
insl
add
pushf
mov
test
xor
dec
pop
xor
cltd
xchg
push
int3
stos
push
mov
test
pop
inc
insb
daa
mov
jns
cmc
int
push
mov
cmp
divb
add
mov
outsb
cmpsl
cs
and
movsl
and
mov
jne
mov
add
jle
fbld
dec
and
pop
fs
iret
imul
dec
stos
xchg
out
xchg
mull
xor
push
aad
sbb
sahf
lret
sbb
jle
outsl
les
repz
mov
xor
mov
lcall
mov
fimuls
enter
ja
sub
mov
push
jnp
jmp
cmc
les
addl
or
test
outsb
ja
clc
inc
insb
test
lds
shll
addr16
xchg
pusha
outsl
and
dec
jge
add
xor
mov
cmpsl
ja
pop
sbb
inc
cmp
jmp
scas
jb
cmpsb
ljmp
jne,pn
mov
test
jnp
rcr
xor
xor
push
js
sahf
rclb
cmp
push
loop
lahf
lahf
in
jb
mov
fnsave
xor
jp
and
scas
cmp
push
dec
mov
jne
mov
shlb
ficomps
addr16
mov
jbe
inc
pop
filds
adc
push
les
mov
test
mov
add
stc
jo
inc
dec
int
outsl
movsb
push
cmp
push
pushf
and
popa
xchg
leave
dec
or
sub
mov
cmp
scas
stc
push
bound
es
ljmp
pop
pusha
stc
xor
push
inc
lahf
pop
or
adc
inc
cmpb
mov
fucomip
jp
aas
scas
pop
mov
jmp
ret
jmp
and
dec
jmp
mov
inc
testb
scas
mov
mov
rorb
stc
mov
sub
orl
lcall
cmp
dec
jae
pop
lret
in
jle
imul
xor
or
imul
pop
rcrb
insl
cmp
nop
inc
roll
cs
hlt
je
jecxz
rcrb
mov
push
out
lods
push
and
xor
testl
imul
push
movsb
pop
cmp
jge
mov
inc
leave
loope
out
or
movsl
movsl
movl
and
adc
into
imul
cmp
jg
shlb
dec
sbb
push
inc
aad
xchg
push
mov
dec
mov
sbb
movl
push
mov
sbb
pushf
jae
pop
out
shrl
mov
push
pop
ja
loop
lret
jno
jmp
xchg
insb
es
xor
fistps
xor
repnz
lcall
mov
pop
jg
cs
divl
fisttps
roll
mov
pusha
leave
insl
mulb
add
cmc
je
aas
jne
push
ss
int3
daa
decb
loopne
mov
sbb
pop
sahf
addr16
out
mov
pop
ret
fmuls
mov
jp
mov
fimuls
fmulp
fisubl
cld
mov
adc
es
sbb
or
call
test
dec
push
std
jg
icebp
mov
jb
insl
rcrb
pop
mov
xlat
dec
push
mov
inc
repnz
popa
pop
xor
xchg
inc
shl
shr
lret
or
push
repnz
dec
sbb
cmpl
mov
shl
mov
mov
das
call
adc
iret
jne
lcall
outsl
lods
sbb
popf
fimuls
push
repnz
xchg
rorb
pop
repnz
adc
cltd
and
rorl
sub
jl
mov
mov
and
fnstenv
outsb
test
inc
out
xor
xchg
push
jecxz
or
lret
pushf
inc
sbb
sbb
outsl
mov
call
or
sarb
jge
leave
mov
gs
das
mov
ds
sahf
call
mov
insb
jle
adc
push
pop
not
mov
repnz
arpl
ret
mov
fsubp
rclb
bnd
test
cmc
and
in
test
clc
add
fiaddl
mov
aaa
xor
pop
imul
or
mov
jne
daa
mov
xsave
push
stos
push
int
xchg
test
fwait
sub
lret
out
push
pop
inc
cmp
test
push
push
test
enter
jl
jg
xchg
dec
jp
xor
push
or
xlat
cmp
iret
ffreep
data16
test
or
and
leave
popa
fimull
in
js
repz
iret
add
mov
int3
xchg
shll
mov
push
ljmp
outsb
and
test
lahf
inc
scas
sahf
ss
sub
mov
lock
and
pushf
in
rol
daa
xchg
ljmp
rorl
in
push
sbb
test
sbb
lret
push
cmc
jmp
sub
shlb
je
icebp
inc
pop
leave
into
insl
jne
mull
std
xchg
cs
insl
mov
enter
dec
pop
out
aas
xor
adc
adc
mov
push
negb
push
and
insb
mov
movsb
inc
mov
stc
pop
sub
cmp
jne
lret
bound
sub
ds
xor
inc
lock
cli
mov
mov
mov
rep
stc
mov
lcall
orb
sahf
iret
icebp
cmpsb
out
push
out
insl
call
inc
mov
pop
jo,pt
jo
xor
push
adc
sbb
pop
bound
loope
es
jno
aas
pop
mov
and
add
jne
out
sub
in
inc
rep
mov
add
fstl
shr
iret
ds
cmpsb
push
cmc
lret
fistps
push
inc
out
xor
add
bndstx
shll
and
xor
pop
jno
call
es
lret
pushf
push
mov
pushf
dec
adc
sahf
fadds
stos
jecxz
or
dec
cmpsb
addr16
push
or
or
fs
stos
xor
subb
imul
mov
cmpsb
movsl
fldenv
add
icebp
es
pop
jp
inc
push
dec
lret
imul
push
stc
bnd
sub
lcall
and
jmp
jp
jns
or
aas
mov
ja
shld
pusha
cli
xor
or
push
and
push
sti
cli
movd
add
sar
xchg
movsb
repnz
js
mov
xchg
cmpsl
cmc
lahf
pusha
xchg
pop
cmp
outsb
into
and
cmp
adc
hlt
adc
cli
pop
adc
shl
xchg
add
loop
ret
in
sahf
lds
das
sub
inc
dec
push
rcll
popl
xor
jle
push
jbe
imul
push
push
inc
iret
cltd
insl
ljmp
and
jmp
mov
cli
fwait
inc
repnz
iret
mov
fdivp
outsl
ss
sbb
adc
or
add
or
aam
das
sub
test
data16
mov
cmpsb
sub
nop
sub
mov
int3
add
div
pop
mov
bound
aaa
shl
push
push
repnz
jb
mov
jno
add
adcb
outsl
sti
xor
add
and
test
clc
insl
pop
cmpsb
mov
idiv
dec
xor
mov
push
gs
xor
mov
push
loope
add
push
arpl
and
fstpl
mov
cmc
out
ret
inc
sbb
sbbb
xchg
pop
jp
mov
in
cld
mov
out
jne
shrl
in
out
call
jge
cmpsb
ret
outsb
xor
xchg
xchg
cmc
sub
xor
out
cmc
xchg
imul
inc
dec
xor
idiv
gs
jo
notb
stos
and
fstps
push
lods
and
cmp
les
lock
repnz
lcall
jp
fwait
rcll
push
mov
and
es
xchg
cmpsb
sub
push
negl
fists
fcomp
mov
psadbw
pushf
outsl
fildll
test
js
ljmp
or
hlt
xchg
add
dec
and
or
in
jae
fldl
loop
leave
pop
mov
jb
loopne
or
dec
ret
lea
daa
inc
movsl
leave
or
mov
xchg
push
inc
js
testl
cltd
mov
les
and
adcl
push
cltd
cmpsb
hlt
inc
in
dec
add
jb
nop
cmpsb
fcmovnu
je
add
jmp
push
imul
add
adcl
js
out
fisubl
shr
jle
xchg
adc
fwait
mov
mov
xchg
nop
push
scas
sbb
and
mov
into
sbb
adc
cli
pop
push
rclb
enter
cli
cltd
ljmp
mov
adc
hlt
push
jge
and
clc
dec
imul
pop
jmp
rcl
iret
cmp
dec
jno
clc
pop
xchg
cmp
hlt
pop
pop
cli
xchg
push
or
pop
daa
shl
ret
stos
sub
nop
xor
jns
fldt
xor
dec
jge
mov
gs
mov
mov
push
sbb
sti
mov
push
js
fadds
add
xchg
sbb
sbb
xchg
mov
stos
in
dec
or
out
jp
shrl
mov
cmp
addr16
and
sbb
sub
cmp
outsb
in
xor
push
push
xor
sub
mov
jp
scas
mov
lods
rol
fstps
loop
aad
addl
sbb
shlb
mov
push
repz
cmp
in
pop
dec
scas
mov
sbb
data16
mov
int3
xchg
dec
aad
into
pop
mov
sbbl
lea
cmp
pop
cmp
lods
push
shrb
push
dec
xchg
pusha
jp
flds
mov
mov
les
adc
jo
aad
insb
jns
mov
push
aaa
jns
push
rcrb
cmp
inc
insb
pop
and
cmp
adc
ror
dec
dec
int3
cmpsb
divl
fisubs
insb
mov
pusha
adc
jbe
les
bound
rolb
cmp
mov
add
push
xchg
fimuls
movsb
call
adc
and
sti
push
jp
adc
cmp
mov
mov
pop
dec
adc
push
inc
orl
mov
push
daa
push
sub
dec
addr16
ljmp
pop
cld
aam
jae
adc
and
enter
push
jnp
xor
jnp
mov
out
and
and
hlt
movsb
push
mov
xchg
ret
and
sub
mov
subb
test
xchg
ror
push
add
mov
fmull
lret
test
test
ja
scas
sahf
add
mov
pushfw
xchg
in
cli
fistpll
je
shlb
fsubrs
popa
xor
loopne
aas
push
aam
jge
sti
mov
or
out
cld
test
shr
cwtl
sarb
pop
addr16
lods
adc
lods
int
filds
leave
xchg
in
push
adc
nop
mov
jle
shll
jl
shrl
cwtl
jo
xchg
shlb
pusha
loop
push
mov
mov
jmp
or
test
sahf
subl
mull
imul
cli
xchg
push
add
jl
mov
xchg
stos
pop
add
xchg
inc
pop
fldenv
int3
pop
cli
rcll
fwait
arpl
jns
not
rolb
cs
inc
inc
jle
mov
clc
sahf
out
pop
mov
sarb
stc
xor
mov
jno
and
clc
addr16
stc
add
or
xor
arpl
mov
dec
push
cli
jb
dec
xlat
jnp
cltd
mov
and
dec
lret
inc
adc
in
inc
fs
pop
push
add
mov
mov
pmovmskb
call
cs
mov
les
or
mov
inc
in
popf
or
mov
sbb
inc
xor
sub
cmpsl
mov
mov
mov
fiaddl
xchg
lret
inc
shrb
add
movsl
insb
and
dec
dec
int3
push
xchg
push
sub
sbb
leave
jle
icebp
loop
and
stos
stos
xchg
ffree
daa
pop
push
pop
adc
ds
into
call
test
push
fcoms
ss
push
xor
jb
sub
cmpb
mov
jp
add
test
and
test
aaa
fcomp
ds
bound
cld
jecxz
jl
xlat
fs
testb
inc
inc
data16
pusha
dec
adc
jne
add
jns
jbe
cmp
cmp
and
pop
leave
xchg
fistpl
outsb
or
outsb
mov
je
aas
or
jecxz
xchg
dec
and
sbb
sahf
pop
xchg
stos
push
mov
lock
lock
mov
imul
mov
or
mov
sub
lret
xchg
xacquire
loope
std
jmp
sahf
push
pop
nop
xchg
lret
pop
jb
aaa
sub
pop
inc
sbbl
xchg
rcrb
push
mov
cmp
lods
dec
nop
mov
jp
out
lock
loop
xor
mov
in
pop
ret
push
lods
jg
bound
jnp
jecxz
add
pop
xor
sub
or
jmp
xchg
or
sbb
push
daa
xchg
pop
test
inc
cmp
add
cmpb
into
jge
roll
out
mov
lcall
loopne
insb
aaa
in
nop
sub
arpl
mov
sti
lahf
arpl
adc
std
add
cmpl
filds
sbb
pop
imul
ja
mov
andb
enter
cmp
xchg
mov
adc
fnstenv
jp
sub
in
nop
add
int3
and
popa
mov
jns
adc
addl
mov
pop
loope
ss
cmp
jle
pop
jmp
mov
rorb
outsl
mov
adc
lahf
mov
push
inc
jp
inc
mov
xlat
push
pop
sbb
gs
jecxz
xchg
push
outsb
call
into
mov
imul
jbe
jle
push
les
xchg
mov
movsl
xor
arpl
pop
jmp
lods
lods
mov
imul
sub
insb
out
mov
mov
and
push
pop
xor
xlat
ret
mov
jl
sub
fsubrs
mov
je
add
icebp
xor
in
and
imul
mov
in
aam
repnz
arpl
into
mov
mov
fistpll
inc
pop
flds
jg,pt
add
mov
mov
ds
jl
mov
fwait
pop
call
adc
inc
mov
iret
xor
dec
ss
xchg
push
ret
fcmove
cmc
adc
rorb
fidivs
jecxz
ljmp
sbb
je
pop
cmp
pop
fisubs
sti
shlb
xchg
cmpsb
in
adc
and
push
cmp
fdivrs
fcoml
fs
inc
jge
pop
cmp
jbe
adc
mov
cmp
lods
xchg
cmp
fstpl
andl
mov
aad
rcr
cmp
add
or
fstps
inc
shlb
add
jmp
jae
in
repnz
add
fimull
ret
jp
or
push
stc
test
jmp
adc
inc
js
lea
das
mov
cmpsb
xor
lcall
stc
mov
sbb
sub
fisubrs
add
mov
sar
in
jmp
pop
popf
mov
adc
mov
inc
outsb
mov
push
lret
sahf
push
into
add
ret
jb
enter
shlb
and
ret
sbb
cld
push
mov
movsb
jnp
mov
adc
mov
xlat
sub
mov
push
dec
pop
sub
adc
mov
mov
dec
iret
jg
or
rcl
sub
mov
inc
and
cli
xchg
popa
and
push
pusha
rclb
and
push
pop
clc
push
mov
cmp
nop
lcall
inc
sub
inc
sub
xchg
iret
jecxz
inc
pop
and
or
push
hlt
xor
pusha
out
pop
das
pusha
cmp
push
push
jle
loope
sbb
add
imul
rclb
or
les
and
push
push
jp
pop
fwait
cld
or
daa
repnz
xor
push
test
cwtl
dec
mov
rolb
jnp
jge
shl
fld
and
cmp
mov
mov
push
hlt
lret
aad
lret
insl
aas
aas
lods
mov
int3
xlat
jg
mov
add
dec
cmpsl
clc
das
scas
xor
mov
inc
sbb
mov
mov
pusha
cmp
cmp
cmp
inc
std
and
test
mov
adc
cmp
rcrb
js
imul
sub
cmpsb
pop
push
inc
sbb
cmp
out
loop
inc
mov
cmp
sub
or
dec
cmp
lock
and
insb
aaa
sub
xchg
mov
fs
xor
ss
jns
or
mov
push
ret
dec
mov
lock
aas
setae
cmp
popf
mov
add
sub
push
fiadds
dec
inc
rol
insb
scas
adc
outsl
sub
enter
add
fnstsw
fimull
cmpsb
out
sbb
imull
add
adcl
xor
sbb
lcall
sub
fldcw
jns
popa
push
js
or
sub
mov
adc
les
into
sub
mov
mov
call
pushf
mov
jmp
aam
push
mov
scas
and
inc
mov
xor
into
pop
jecxz
mov
add
test
cmp
sbb
rorb
mov
imul
xchg
xchg
adc
cmp
sbb
imul
mov
mov
popf
sub
adc
xor
mov
lods
clc
lods
pop
lret
aam
aas
test
jp
stos
add
or
popa
sbb
and
add
pop
pcmpeqd
dec
mov
ret
fldenv
xor
pop
mov
test
pushf
movsb
lea
xlat
sbb
sbb
loopne
cmp
dec
dec
call
mov
inc
inc
mov
loopne
or
addl
fldcw
inc
xor
cs
pop
adc
cmp
or
fimuls
mov
cld
pop
inc
inc
push
imul
dec
stos
cmp
cmp
stos
loopne
sbb
pop
sub
pop
popa
cmp
cli
outsl
pushf
pop
mov
dec
xchg
inc
dec
pusha
push
cmp
dec
jo
and
std
xor
mov
mov
lret
mov
mov
movsb
call
xlat
jnp
adc
adc
dec
dec
mov
out
and
mov
dec
pop
push
mov
aad
pop
inc
popa
lret
push
bound
je
xlat
jo
arpl
movl
cmp
rolb
bound
nop
dec
aaa
sub
jnp
or
mov
pop
pop
dec
imul
iret
and
or
push
jbe
jne
xchg
mov
sbb
push
xlat
mov
inc
scas
xchg
xor
jecxz
shl
adc
jae
pop
clc
in
cltd
mov
dec
xchg
std
mov
test
jae
and
add
cs
pusha
sbb
sbb
dec
mov
adc
aaa
ljmp
mov
cwtl
dec
cmpl
pushf
mov
sahf
in
shl
add
pop
subb
lahf
jbe
mov
movsb
sub
scas
sbb
aaa
push
std
push
dec
popf
sti
mov
xor
mov
jns
mov
pop
sbb
je
push
mov
or
ss
mov
sbb
icebp
push
cs
popa
or
ds
cli
sahf
xor
and
xor
cmp
xchg
imul
rcrl
add
cld
mov
cmc
mov
xor
add
xor
stos
daa
and
sbb
push
sub
and
and
daa
jns
inc
cmp
push
mov
jae
adc
sbb
push
sub
pop
mov
std
sbb
mov
jp
mov
aaa
popa
pop
movsl
mov
mov
mov
xchg
push
cmp
call
jb
jo
leave
testl
push
pop
aaa
and
add
jns
adc
scas
in
nop
mov
add
je
add
add
cli
stc
stc
or
mov
shrb
mov
dec
jb
or
add
jae
idivl
dec
out
dec
in
mov
jbe
jnp
outsb
mov
ss
out
imul
or
dec
inc
dec
sub
jb
fstps
cmp
mov
xor
data16
pop
cmpsb
push
mov
and
dec
popa
call
es
mov
in
jmp
dec
mov
sbb
mov
sub
or
ljmp
cs
mov
out
rorb
scas
push
xlat
jne
add
and
sar
push
aaa
pop
pop
pop
jmp
dec
adc
mov
je
mov
test
in
xor
cld
push
xchg
cmp
leave
int
mov
mov
push
je
movsl
fnstcw
cmpsb
ljmp
stos
mov
movsb
pop
xchg
loopne
frstor
push
call
mov
add
inc
dec
xchg
xor
call
xchg
aam
sub
sbb
mov
dec
xor
push
mov
mov
push
sbb
ret
negl
and
cmc
out
out
shll
shr
pop
xor
or
out
std
mov
pop
jnp
outsl
movsb
cwtl
mov
shr
push
xor
add
add
jbe
cmpsl
mov
aas
ret
mov
mov
test
cmp
testb
test
lock
pushf
les
cmc
into
mov
dec
in
das
fcompl
cmpsb
push
movsl
mov
into
arpl
std
push
jmp
add
int
mov
sub
out
pop
aam
sbb
cmp
inc
shlb
xchg
lods
push
push
rcr
negb
jge
xor
test
sbb
dec
xchg
xor
cmp
test
xor
rclb
add
pop
push
sub
insl
dec
fcmovnb
scas
sub
pop
pop
cmp
inc
jb
xchg
add
mov
js
dec
lret
mov
add
mov
cmc
je
jne
and
cwtl
mov
fxch
and
sbb
mov
pop
add
outsb
xchg
ljmp
rcrb
inc
jecxz
and
out
imul
adc
scas
gs
sbb
into
jmp
and
dec
loope
js
cmp
in
pop
push
out
mov
adc
nop
mov
push
push
pop
sbb
cli
stos
mov
push
es
in
mov
mov
aad
shlb
jb
mov
mov
stos
xchg
jae
jp
aad
je
push
es
lea
mov
fwait
push
out
mov
xchg
pop
cmc
push
int3
add
or
xor
lods
shrb
push
xchg
jnp
fisubrs
push
imul
jbe
cmp
add
test
dec
bound
stos
or
push
rolb
push
hlt
adcb
mov
fsubl
loop
outsl
popa
call
pop
sub
test
sbb
jle
enter
pop
notb
orl
enter
loop
xor
mov
xchg
xchg
lret
and
iret
dec
lcall
and
or
test
lcall
pop
cld
jge
sub
ret
or
movsb
jmp
clc
in
jns
mov
cmp
jne
dec
popa
sbb
and
sar
ja
fistps
adc
xchg
lahf
je
mov
out
xor
jnp
add
xchg
jns
roll
push
xchg
pop
dec
xchg
push
pop
adc
lret
clc
call
push
and
sbb
mov
pop
add
scas
fsubl
ret
in
xchg
and
bound
cwtl
popa
mov
xchg
mov
mov
enter
mov
add
sub
pop
sbb
imul
cltd
addl
mov
add
outsl
jo
arpl
pusha
fwait
ret
je
test
dec
pop
mov
je
or
idivb
popa
sbb
fs
clc
insb
sti
stos
in
push
dec
mov
rcrb
in
stos
jno
and
xor
pop
mov
ss
scas
in
loop
push
mov
xor
xor
cmpb
mov
fbld
push
push
adc
pop
cmp
sub
fwait
jae
cld
and
testl
test
jge
aas
sub
jecxz
adc
jnp
mov
fst
mov
imul
imul
jo
pushf
pop
mov
popf
popl
out
cmp
stos
stos
pop
jnp
and
cmp
mov
nop
mov
scas
jmp
sbb
sbbl
test
mov
jg
jmp
lods
sti
jnp
test
jmp
mov
les
repnz
bnd
push
stc
fmul
dec
int
or
or
pop
inc
push
dec
xor
ds
sbb
hlt
and
xor
in
iret
test
fwait
aaa
incl
jnp
gs
cs
push
inc
add
pop
inc
scas
sub
adcl
mov
and
movsl
and
sbb
pusha
jb,pt
cmpsl
in
jmp
mov
ret
push
push
mov
sub
xor
adc
push
enter
ret
pop
imul
mov
ja
call
xchg
pushf
mov
aaa
mov
sbb
cmp
das
test
stos
adc
es
stos
push
jne
add
out
fwait
sub
sahf
cli
inc
enter
scas
es
fldcw
fwait
stc
stc
pop
mov
jge
xchg
fldl
bound
lock
sub
fisttpl
rcrl
cmpsb
shlb
fcoms
xor
push
jg
cmp
ret
adc
pop
jb
push
jmp
xor
mov
nop
std
loopne
add
insb
sbb
adc
pushf
mov
fs
push
int
jge
push
sbb
sbb
sub
or
dec
les
loopne
shlb
pop
jp
xor
ja
fists
adc
inc
or
mov
pusha
mov
push
stc
not
or
dec
icebp
daa
pop
push
cmp
mov
lock
sti
enter
pop
inc
je
mov
test
adc
testl
dec
jbe
cmp
mov
fldt
xor
loopne
jge
ss
icebp
mov
mov
push
sbb
or
inc
pop
sub
sbb
inc
jns
mov
inc
adc
lds
cmp
push
movaps
scas
dec
xchg
dec
xchg
popa
lahf
pop
adc
and
push
inc
mov
je
pop
mov
fwait
movsb
cmpsl
test
scas
xchg
cwtl
cmp
test
xor
and
pop
mov
adc
lock
or
insb
or
lret
clc
or
mov
cmp
data16
pop
push
vmovaps
popf
push
dec
pop
sbb
loopne
int
cmp
icebp
sbb
test
and
das
adc
and
mov
aam
ret
rolb
jb
mov
ret
adc
scas
btr
lock
ror
pop
cmp
push
sbb
adc
cmp
loop
inc
cli
mov
adc
cmp
xor
movsl
testl
cmp
cmp
add
push
insl
dec
inc
push
test
fildll
ja
mov
sbb
imul
aam
cmpsl
clc
xchg
push
lret
mov
daa
testb
inc
es
mov
xor
outsl
fmul
mov
push
xchg
push
push
push
jmp
add
push
pop
in
inc
cmp
sbb
lret
fcoml
pop
push
adc
jl
inc
mov
adc
push
adc
fcmovnb
mov
cmp
stos
mov
hlt
movsl
mov
scas
adc
push
push
push
popa
movhps
jbe
divb
or
loopne
cmp
push
jb
iret
xor
lea
data16
div
pushf
stos
sub
int3
cmp
jbe
sub
movsb
jle
mov
sub
psadbw
xor
mov
movsb
xor
mulb
ret
jns
inc
mov
lcall
cmp
out
ss
out
pop
faddp
mov
lods
sbb
inc
mov
mov
clc
insl
and
adc
mov
mov
out
lea
inc
add
jo
mov
mov
sbb
lea
push
imul
ja
xor
jecxz
adc
push
pop
scas
mov
out
xor
xor
cmp
mov
loop
andl
rorl
jp
aas
lods
ja
pop
insb
addr16
cli
cmp
or
movl
pop
mov
jl
fucomip
sbb
jecxz
jge
push
sti
mov
sub
mov
pop
mov
std
dec
push
inc
neg
stos
and
stc
aad
push
xor
mov
or
lock
mov
and
test
lret
sbb
adc
xchg
xor
push
xchg
subb
inc
icebp
add
jp
cld
xchg
mov
shrl
dec
push
inc
mov
xor
enter
dec
movntps
inc
jno
jle
pop
push
and
dec
addb
mov
pop
add
clc
inc
jbe
mov
xor
xchg
iret
and
adc
cmp
fs
stos
or
je
push
movsb
inc
cmp
xchg
aam
insl
cli
mov
lods
in
pushf
in
lock
push
or
imul
scas
sbb
mov
inc
add
or
dec
rorl
add
push
lcall
dec
jns
inc
popl
ret
and
sub
fdivl
adc
pop
pop
adc
mov
xchg
mov
or
into
mov
mov
and
dec
xor
add
cmpsb
rclb
jo
xor
insb
inc
xor
jp
add
inc
push
ret
testl
push
movsb
dec
cmp
jg
sbb
xchg
mov
xchg
push
add
xchg
in
push
negl
sub
cmc
sbb
insl
adc
imul
jno
mov
xchg
dec
cli
mov
movsb
addr16
int3
mov
push
add
mov
push
test
jge
pop
jmp
in
jae
jmp
inc
sub
push
loope
xor
gs
dec
mov
test
add
jne
xor
sbb
dec
or
dec
int
ret
inc
jne
cmp
add
mov
dec
hlt
xchg
or
test
mov
pop
ja
pusha
loope
outsl
mov
sahf
lcall
or
leave
mov
test
dec
and
mov
out
push
lds
adc
icebp
push
xlat
lods
and
addr16
std
imul
int3
dec
sbb
dec
mov
call
ljmp
insl
stos
ja
lcall
mov
xor
sub
pop
sbb
or
lahf
mov
cli
jbe
imul
aaa
mov
insb
xchg
stos
adc
out
push
jecxz
hlt
mov
sbb
outsb
cld
cmp
mov
mov
dec
shr
fisubrs
mov
or
les
pushf
mov
aad
cmp
inc
in
ds
push
xchg
icebp
or
femms
fwait
xchg
mov
loopne
mov
data16
je
out
inc
mov
mov
cli
pop
xor
xor
mov
into
add
hlt
or
out
jle
repnz
sbb
leave
sub
shlb
push
adcl
mov
jns
rclb
push
mov
dec
arpl
and
lahf
dec
scas
and
jle
loope
repnz
mov
rcrl
repz
int
and
sub
daa
mov
sbb
mov
mov
stc
dec
sahf
push
scas
sub
popa
rolb
mov
fwait
mov
cmp
xchg
outsl
iret
push
dec
test
dec
lock
sahf
fbstp
pushl
and
pop
out
xor
sub
data16
jmp
push
scas
xor
jo
sti
push
xchg
adc
cmp
lea
jbe
jno
xor
mov
mov
es
jmp
out
imul
inc
mov
insb
pop
push
lds
inc
jp
imulb
jne
movsl
repz
or
mov
xchg
add
sbb
fcoml
jne
call
pop
pop
frstor
shl
and
inc
jmp
xor
push
sbb
adc
sbb
add
sbb
xchg
xor
or
push
popa
cmc
jle
jg
iret
add
or
cmpsb
add
sbb
lret
test
mov
gs
ja
shll
mov
test
pop
jo
mov
jge
adc
push
imul
mov
dec
sbb
and
cmc
xchg
sub
data16
mov
subb
out
pop
ret
push
enter
adc
mov
dec
push
cmp
mov
cmp
in
mov
sbb
movsb
sahf
adc
mov
orl
mov
pop
out
xchg
add
pop
addr16
or
xchg
imul
xchg
mov
mov
out
ljmp
sbb
inc
test
test
xor
ror
test
and
pushf
sbb
into
lahf
mov
adc
pop
sarl
cli
out
or
xlat
out
fwait
jae
addl
adcl
mov
popf
dec
insl
cmp
ja
aam
mov
push
lods
cmp
mov
imul
pop
pop
stc
xor
fstpl
mov
repnz
and
pushf
in
mov
shr
sub
sahf
mov
pmovmskb
fisubrl
shl
fcmovne
repnz
mov
cmp
add
nop
jl
sub
or
push
mov
lcall
pop
mov
dec
sub
js
push
xor
cli
and
hlt
push
and
mov
sbb
test
add
add
mov
add
adc
cmp
and
aad
dec
jnp
cmc
sub
jmp
push
shll
jbe
sub
add
inc
insb
cwtl
loop
jae
out
enter
out
test
dec
jae
mov
adc
jnp
push
aaa
mov
stos
jl
mov
popa
mov
xchg
cli
mov
push
xor
and
dec
sbb
les
mov
adc
adc
add
addr16
push
stos
sbb
cmp
out
neg
nop
pop
mov
mov
mov
inc
iret
loopne
shll
mov
out
inc
nop
mov
add
aam
popa
sbb
out
rcrb
out
call
aas
and
repz
sub
insb
and
sub
jp
clc
mov
mov
inc
mov
fs
sti
sahf
loope
adc
icebp
sub
mov
and
cwtl
sbb
insb
jle
mov
mov
movsb
dec
adc
xor
jecxz
inc
xchg
add
aam
inc
dec
fwait
mov
dec
pop
scas
scas
out
shl
push
fs
les
mov
xlat
cmp
mov
iret
test
test
rcrb
rcrb
jg
int3
fiaddl
idiv
fnsave
icebp
dec
push
fistps
mov
jne
push
mov
int3
test
push
sbb
add
mov
fdivl
js
inc
and
push
cmp
test
iret
mov
in
pop
and
fmull
xchg
push
mov
movsl
cmovs
fcmovu
test
mov
sbb
inc
lcall
push
pop
rcll
xchg
jo
or
movsb
sub
jb
xor
xor
testl
insb
repz
mov
subl
inc
cmc
les
push
pop
out
mov
jg
xor
adc
push
out
dec
jg
mov
lret
das
cmp
jb
fnstcw
subb
ret
in
icebp
imul
rcl
scas
inc
inc
xor
jp
jnp
insl
jae
jbe
aam
sti
data16
pusha
or
xchg
aaa
mov
mov
inc
sti
add
pop
push
pushf
adc
add
cmpsl
idivl
or
inc
lret
in
dec
push
adcb
xchg
push
xchg
xor
test
and
shlb
test
insl
add
add
dec
jb
pop
aas
dec
jmp
push
push
sub
xchg
mov
rolb
mov
or
push
pop
sub
insl
push
leave
push
cwtl
pop
cmpxchg
int
fwait
cs
xor
fistpll
push
sub
or
mov
ljmp
sbb
mov
cmp
pop
aad
mov
out
orl
ss
sbb
in
gs
leave
lea
out
jns
mov
in
popf
mov
mov
movsl
push
pushf
mov
mov
jecxz
mov
arpl
adc
imul
or
lea
in
xor
and
lds
xchg
jecxz
stos
lcall
rol
hlt
xchg
and
xor
add
stc
dec
shlb
pop
adc
xchg
popf
dec
cmpb
rorb
push
pop
or
jnp
cwtl
pop
cmp
push
imull
dec
sbb
adc
pop
push
movl
in
push
add
sub
es
dec
jge
sbb
sub
mov
dec
ret
cmp
mov
add
aaa
push
decl
xor
in
xchg
in
ret
js
fsubs
loopne
xor
fmuls
sub
add
scas
mov
xor
push
pop
orb
xchg
sbb
and
sub
jb
and
cltd
dec
jne
cmp
rcrl
lcall
push
inc
mov
push
mov
inc
notl
test
pop
into
fcoms
sub
sbb
xlat
loopne
or
cld
cmp
cmp
lods
adc
jo
push
adc
inc
jg
xor
cmp
add
push
mov
cmp
les
cmp
ljmp
in
test
loop
dec
gs
imul
cmp
pop
pushf
pushf
or
mulb
mov
test
flds
aad
rcr
adc
hlt
xchg
rorl
outsl
mov
mov
call
fldenv
and
mov
pop
roll
mov
outsb
jmp
sbb
xor
mov
xorl
scas
sbb
ret
aad
jg
test
iret
inc
addr16
sahf
mov
mov
push
or
out
sarb
jp
cmp
xchg
mov
cmp
push
inc
dec
sbb
jp
ret
ss
mov
adc
aaa
repnz
stos
mov
ja
xchg
mov
outsb
aam
push
arpl
mov
lret
and
pop
sub
ja
push
iret
jmp
push
test
negl
pop
cwtl
cmp
pop
mov
nop
lahf
xor
cli
scas
push
push
jbe
into
jge
fbstp
xor
addl
incb
xor
outsb
dec
xor
sub
push
adc
sbb
rorl
sub
xor
repz
add
sbb
sub
pop
inc
sub
fwait
pop
imulb
es
add
sub
adc
lea
dec
xor
add
fbstp
hlt
push
rol
mov
lret
mov
xor
jo
sbb
jmp
test
sbb
fcmovu
jmp
cmpsb
cltd
jo
xchg
sbb
adc
mov
or
xchg
jns
push
and
mov
jmp
insb
jno
insb
xchg
jge
mov
jae
inc
cmp
add
push
sub
and
jo
cmp
out
jbe
pop
jmp
ss
pushl
pop
add
add
cmpsb
push
mov
test
into
push
clc
sti
dec
cmp
push
test
xchg
jg
cmpsb
mov
hlt
ja
pop
cmpsb
push
xchg
fimull
dec
push
rclb
mov
xchg
mov
ret
and
cmp
xor
bnd
push
hlt
maskmovq
notl
and
fmull
inc
in
push
imul
jmp
data16
and
pop
rcrl
inc
adc
inc
dec
cmp
xor
int
add
add
rorl
shl
aad
xchg
test
jnp
ret
dec
adc
pop
sub
movswl
cmp
out
push
cmpsb
test
mov
stos
mov
mov
fistpl
movsl
adc
fisubrl
jae
xchg
pusha
jmp
push
lods
pop
sarl
mov
fimull
jae
orb
jns
add
add
mov
push
jl
pop
js
mov
dec
fwait
andl
jbe
sbb
push
subl
inc
lahf
sahf
data16
jns
sarl
cmp
xor
popa
mov
cmp
cmp
ljmp
xchg
arpl
in
jmp
mov
inc
sti
out
dec
jns
pop
add
xchg
ret
and
push
rcr
xchg
mov
xlat
mov
lods
out
das
pop
and
push
in
sbb
stos
xor
push
popf
fs
scas
dec
dec
jge
fwait
inc
scas
pushf
add
inc
loop
push
aas
in
push
pop
sbb
orb
arpl
jnp
mov
dec
adc
repnz
inc
mov
ljmp
mov
push
and
add
mov
pop
adc
addr16
sub
idiv
push
imul
push
xchg
in
mov
pop
inc
out
cwtl
sbb
add
shlb
adc
dec
mov
mov
lret
pop
icebp
pop
cmp
xchg
notb
jmp
insl
adcb
cmpsb
stos
add
movsl
push
dec
loope
xchg
xor
movsb
cmpsl
cmpsb
or
lret
push
add
aaa
pop
push
adc
stc
inc
cmc
clc
fcoms
lcall
leave
push
ret
dec
imul
jnp
lea
push
ja,pn
cmp
add
aad
lea
in
dec
pop
mov
jo
dec
rolb
xchg
or
pop
dec
cltd
mov
scas
je
cli
and
mov
pop
lret
jmp
mov
aas
dec
push
faddp
loop
daa
aam
dec
lcall
roll
mov
scas
inc
or
mov
call
dec
fs
clc
adc
inc
inc
mov
int3
lcall
jb
icebp
push
out
push
es
roll
inc
cmp
push
jmp
loopne
cmp
and
mov
cmp
lcall
sbb
addb
push
mov
mov
mov
js
pop
jl
push
cmp
std
aam
or
adc
jne
into
push
add
sub
mov
push
xor
cmp
loop
pop
mov
mov
jns
mov
xor
cmpsb
jnp
ficoml
jb
xchg
scas
jbe
pcmpgtw
mov
andl
mov
cltd
arpl
jp
push
stc
daa
insl
pop
mov
imul
cmp
push
jb
mov
enter
sbb
lret
pop
pop
jo
inc
outsb
xorl
cmpsb
jne
lret
enter
jo
and
pushf
pop
cltd
jge
mov
push
lds
out
xor
sbb
mov
pushl
and
mov
push
mov
cmpsb
les
pop
repz
test
push
testl
divb
push
sub
stos
lret
cmp
pusha
andb
bound
out
push
pop
in
enter
jns
repz
aas
cmp
mov
dec
les
arpl
cmp
mov
push
cmp
mov
push
ja
cs
fdivl
add
dec
sub
pop
or
into
clc
jo
inc
jbe
jle
fistps
or
negl
mov
ret
in
sbb
movsl
pop
aas
push
push
push
lds
fcmove
jge
rclb
lahf
xchg
mov
adc
repz
sahf
lea
mov
out
outsb
sub
cld
fiaddl
cltd
mulb
ret
xchg
sbb
add
pop
mov
out
fisubrl
inc
adcl
jl
les
stos
xlat
mov
push
sti
ror
repnz
inc
jns
mov
adc
pop
dec
jne
fidivl
stos
jl
or
cli
imull
cmp
js
js
inc
popa
sub
popl
inc
push
lret
push
and
sub
push
popf
in
add
sbb
cmp
jecxz
fcomi
ds
jmp
es
jl
imul
mul
or
pushf
js
movsb
and
and
addr16
sub
test
adc
lahf
aaa
lret
push
sub
add
xchg
or
mov
fs
fxtract
rcl
inc
sahf
aad
pop
stos
ret
mov
daa
in
pop
clc
rcll
xchg
sbb
push
cmp
sahf
paddd
repnz
aam
arpl
jno
es
lock
ljmp
lods
xchg
xchg
outsb
jnp
rorl
and
fidivrs
mov
xor
xchg
push
jmp
subl
roll
dec
inc
outsb
xchg
fldenv
push
stos
sub
and
xor
in
mov
push
scas
out
cmp
ljmp
xchg
cmp
andl
js
repz
sbb
mov
mov
pop
imul
dec
outsl
lock
bound
xor
test
fs
iret
movsb
out
jp
shrb
jg
imul
mul
orb
dec
std
mov
lea
pop
aaa
mov
inc
popa
cmpxchg8b
into
mov
sbb
dec
adc
enter
mov
cltd
test
rcrb
xchg
clc
insl
and
inc
add
inc
bound
loop
ja
jecxz
push
dec
fs
popf
mov
je
and
mov
jecxz
mov
sbb
andb
gs
lea
or
or
cld
scas
test
mov
mov
add
mov
hlt
aam
and
inc
cmp
and
push
out
mov
insl
adc
and
jne
or
inc
adc
xchg
clc
sarl
imul
fnsave
xchg
push
sbb
dec
or
cmp
neg
mov
nop
and
xchg
mov
inc
imul
cltd
dec
leave
push
popf
jne
jbe
xchg
dec
adc
leave
ret
rorb
dec
mov
int3
mov
out
js
sub
lcall
fs
jnp
xlat
dec
cli
fs
out
fs
adc
out
roll
sbb
inc
or
sub
lret
out
or
xchg
or
inc
insb
movsb
mov
dec
in
cmp
xchg
add
int3
push
lret
mov
sar
add
sti
xor
int3
ljmp
cmp
mov
jne
sub
sarb
adc
cmp
out
xorb
jne
inc
call
ftst
js
cmp
dec
adc
sbb
lahf
mov
inc
ljmp
inc
add
sub
sbb
inc
cmc
test
aas
inc
or
roll
pop
xor
mov
cmp
xchg
xchg
test
mov
mov
inc
mov
jle
mov
sbb
pop
popa
ret
and
aaa
dec
xchg
push
inc
mov
mov
jb
loop
movsl
and
jb
clc
dec
adc
imul
int
xchg
aam
flds
pop
out
in
enter
daa
ss
jle
push
xor
xchg
mov
stos
pop
ja
push
daa
sarb
aad
xchg
arpl
cltd
mov
sbb
mov
clc
mov
lods
mull
lods
lods
fld
dec
out
push
mov
ds
mov
fs
lret
xor
loopne
cltd
leave
xorl
dec
sqrtps
push
ficoms
cmp
jmp
fwait
stc
mov
inc
sbb
lods
cs
imul
iret
mov
sbb
aaa
icebp
cs
gs
pop
or
iret
dec
xor
push
fcomi
addr16
jmp
lret
test
loopne
cs
cld
in
scas
xchg
cs
xlat
xchg
ficomps
seto
xor
pop
and
xchg
or
aas
fwait
push
insb
adc
sbb
fildl
push
add
sbb
dec
in
pop
xchg
jmp
push
lds
pop
xchg
adc
pop
sub
leave
pop
enter
mov
and
movsb
out
dec
add
insl
inc
push
sub
ret
repnz
movsb
ret
cmp
pop
sub
cmp
bound
adc
mov
test
stc
jae
jo
rorb
mov
sub
rclb
ret
jl
xor
sbb
xchg
pop
sbb
rorl
cmp
dec
dec
mov
fwait
mov
nop
mov
mov
mov
mov
rcpps
xchg
lds
cld
xchg
sub
inc
jecxz
popa
das
or
bound
jns
adcl
scas
sbb
cmpsl
in
dec
das
mov
call
xchg
rclb
daa
movsb
popa
std
clc
ds
or
insl
clc
or
pusha
pop
test
mov
lahf
inc
mov
movsl
inc
cld
lahf
cs
pop
inc
in
pop
test
test
xchg
pop
call
out
pop
into
mov
xor
push
jmp
out
je
loopne
mov
xchg
or
mov
dec
test
cmp
inc
sub
sbb
jne
mov
jo
fildll
cmp
sbb
mov
pop
or
xchg
fs
mov
xchg
ret
aam
in
cmp
cltd
cld
sub
adc
dec
std
add
push
addr16
loop
aaa
in
aas
jne
fwait
inc
fwait
mov
and
add
sbb
lret
fcmovb
sar
sub
pushf
mov
jl
cmp
int
fsts
jbe
cmp
inc
xchg
cmp
fwait
cld
xor
add
add
push
arpl
mov
push
sub
xor
clc
mov
cli
sub
inc
mov
mov
cwtl
cmpb
add
jecxz
inc
inc
outsb
cs
icebp
mov
or
pop
shlb
imull
mov
cwtl
aas
rcrl
aam
loopne
and
mov
fsubl
xchg
aas
mov
adc
rorb
jns
pop
lods
cld
adc
dec
dec
stos
cld
fcompl
popa
lods
sar
in
call
add
xor
pop
and
insb
orl
aas
jne
sub
inc
lods
mov
mov
lret
bound
sub
lock
ds
inc
leave
mov
mov
cmp
xlat
push
xor
add
and
and
mov
cltd
lods
jp
jge
in
pop
aaa
pop
decl
bound
shrb
mov
sub
push
jne
les
sbb
mov
jb
sahf
sbb
sub
pop
sub
cmp
arpl
lds
loop
imul
pushl
xchg
frstor
arpl
mov
pop
lret
scas
mov
mov
jp
and
movb
mov
hlt
call
test
xor
int3
push
mov
adc
pop
mov
jmp
cmc
mov
dec
xorl
cmp
pop
mov
mov
jae
test
shlb
jp
mov
dec
xchg
mov
inc
jbe
jp
mov
mov
push
sub
jo
movsl
mov
sbb
lcall
ljmp
lcall
jecxz
enter
inc
enter
xor
xchg
fs
mov
xchg
arpl
push
mov
jnp
dec
mov
xor
add
cmp
lret
movsl
shl
mov
and
or
mov
lods
xor
jmp
icebp
dec
inc
loope
daa
pop
adc
mov
test
jg
pop
mov
xchg
divb
dec
fdivrl
test
mov
push
add
or
popa
push
cs
or
mov
jns
lods
mov
dec
mov
daa
jmp
fbld
push
sub
out
cwtl
fbstp
lret
pop
call
or
mov
mov
je
cmp
cs
shrd
les
jecxz
push
int
add
out
fcomip
or
and
sub
cld
pop
jns
push
xor
cmp
ret
icebp
cmc
mov
popa
mov
enter
jnp
aad
mov
shll
add
into
pop
inc
fcomps
mov
inc
pop
or
mov
aad
jp
pop
inc
jl
inc
jp
ss
add
rclb
inc
repz
sbb
loop
sarb
push
rcrb
jge
rorl
mov
add
xor
mov
cli
shlb
cltd
jle
movsl
and
inc
loopne
sbb
inc
and
xor
sbb
adc
popf
andl
daa
lods
test
mov
xchg
sub
icebp
mov
jae
xchg
xor
pop
hlt
jg
inc
loopne
mov
sbb
jl
fdivrp
and
push
repnz
popf
int3
or
imul
push
aaa
jge
stos
mov
inc
sub
jne
push
repz
lods
inc
data16
lret
in
test
ss
mov
lods
push
outsb
push
js
fs
sbb
test
jae
mov
xor
mov
hlt
test
and
popa
adc
cwtl
hlt
and
ss
pusha
mov
dec
sub
jo
pop
jp
clc
add
add
divl
cmp
gs
insl
rclb
mov
or
pop
loopne
push
jmp
out
jnp
test
inc
stos
popf
rcll
jmp
ljmp
fcompl
negb
hlt
adc
jp
notl
call
mov
rcrb
hlt
ja
daa
pop
ja
daa
ret
cmpsl
jmp
incb
jbe
xchg
jne
mov
popa
jecxz
pop
xor
inc
sti
rolb
cmpsl
xor
mov
cld
data16
out
push
sub
add
mov
jae
mov
les
lret
aaa
mov
or
ret
ficomps
pushf
pop
js
mov
mov
lods
add
mov
and
mov
fwait
xchg
mov
pop
push
js
in
aas
or
pop
add
push
int3
imul
pop
inc
imulb
jno
bnd
ja
insl
movsl
xor
cs
ja
popf
mov
mov
jg,pn
cmpb
imul
mov
scas
mov
and
adc
lcall
add
push
and
inc
xchg
fisttpll
jno
stc
shrl
cmp
jecxz
pushf
and
sbb
lret
mov
mov
ficoms
jne
pop
pusha
aas
fs
and
jo
pop
jl
cmc
xchg
mov
pop
rcrb
adc
scas
push
ljmp
pushf
cltd
lods
in
and
inc
fs
mov
jg
push
fsubs
xor
cmpsl
sbb
push
and
rcrl
call
sbbl
aad
ss
call
out
push
fsts
cmpsb
pushf
andb
or
enter
gs
ss
push
out
outsl
iret
mov
and
stc
inc
or
das
int
add
inc
jmp
iret
sub
mov
mov
mov
stos
cmpsb
xchg
js
aam
pushf
mov
push
xlat
mov
fsubs
adcb
or
cmpsl
xchg
pop
mov
repnz
ja
sub
cmc
inc
cwtl
jnp
int3
and
lods
xorl
stos
lret
fldl
call
or
mov
jle
dec
jle
push
mov
sti
xor
push
sub
stos
je
jae
jge
jnp
mov
call
lock
lret
or
sbb
subl
xchg
out
punpckldq
vhaddpd
out
adc
pop
pop
dec
cltd
aam
test
mov
jl,pn
imul
loopne
adc
ja
not
sub
es
push
pop
cmp
mov
inc
mov
rorb
mov
std
sahf
mov
inc
rclb
add
imul
es
push
xchg
pusha
or
bound
or
sbb
and
aaa
icebp
mov
jbe
or
popa
pop
xlat
bound
inc
pushf
pushf
xchg
push
in
pushf
out
xor
sub
mov
and
xchg
cmp
add
cwtl
ljmp
push
push
bnd
shl
sbb
cmpl
fisubl
cmp
dec
in
push
cltd
scas
jae
rclb
xchg
call
cmp
icebp
jecxz
sub
mov
mov
xor
xor
cmp
jo
pop
mov
cltd
test
pushf
mov
ljmp
int
insb
cli
mov
xor
in
rorb
mov
push
clc
xchg
les
loopne
push
push
xchg
cmp
mov
sbb
cmp
adc
fmuls
xchg
push
ss
dec
cld
dec
sub
mov
cld
xlat
test
aad
lds
pop
sbbl
mov
cmp
dec
push
fstp
jmp
mull
popa
pop
mov
movsb
pop
cmpsb
mov
jecxz
inc
andb
cmp
and
pop
or
inc
jae
push
cmp
mov
mov
fxch
dec
pop
lret
jl
xor
leave
xchg
shrb
adc
mov
fistps
add
loopne
insl
rolb
pushf
enter
pop
push
sub
fimull
jg
cli
clc
pushf
aam
cmp
int3
mov
orb
sub
sarb
adc
and
xchg
popa
mov
xchg
jp
sbb
pop
jl
inc
push
dec
adc
fneni(8087
lods
jle
mov
in
adc
inc
cmp
call
loopne
pop
adc
aas
fiadds
mov
loopne
loope
cld
push
jl
addl
push
data16
cmpsb
aam
sar
xchg
sti
loop
xor
fildl
das
fnstsw
sbb
lods
lods
pop
lahf
shrd
fcompl
aas
icebp
scas
add
je
adc
imull
jecxz
pushf
out
outsl
mov
inc
por
mov
jnp
test
dec
leave
popa
fcomps
pop
and
add
aad
jle
pop
sbb
dec
ficomps
add
jne
ljmp
dec
js
xlat
cltd
cmp
ficoms
jg
jmp
mov
cmp
shlb
xor
in
sub
repz
jnp
sbb
jge
jge
or
add
cmp
jg
test
dec
outsl
data16
push
mov
adc
outsl
inc
mov
call
int3
enter
dec
subl
out
loopne
lahf
ljmp
xchg
fidivrs
cmp
mov
scas
mov
xor
pop
jno
rol
addr16
sub
xchg
xor
enter
aas
iret
rorb
rcrl
mov
sub
sbb
add
push
jne
xchg
inc
cmp
aad
push
scas
add
pop
ljmp
add
pop
sahf
enter
lahf
jb
jge
xorb
dec
ret
pop
and
xlat
sub
mov
xor
mov
push
shl
aaa
cmp
pop
sub
aad
jmp
bound
mov
mov
in
sbb
call
push
fwait
data16
les
out
mov
fstps
cmp
outsl
cmc
mov
xchg
out
data16
xor
xor
adc
lahf
mov
inc
jg
push
insl
mov
dec
loopne
mov
add
out
push
out
fwait
adc
outsl
shr
xchg
ljmp
cli
cld
xchg
or
or
xor
imul
je
popw
push
jge
lret
stos
cli
out
mov
mov
call
jmp
cmp
imulb
mov
add
adc
cmp
popf
outsb
dec
xchg
cld
cmp
push
sub
push
fisubrl
out
mov
mov
in
xor
xchg
in
jle
and
cmp
fadd
iret
or
and
fwait
jg
sub
lahf
test
sub
mov
xchg
pop
mov
sar
jns
stos
jp
sbb
fs
and
add
test
push
mov
test
push
push
xor
inc
aaa
test
fwait
xchg
ja
or
mov
sbb
inc
and
aaa
lods
jp
mov
lock
add
push
jno
dec
mov
mov
fcmovne
xor
loopne
dec
sub
jae
or
sub
push
pop
cmp
pushf
clc
or
loop
dec
neg
nop
inc
xor
jg
cmp
jmp
fidivrl
testl
js
cltd
sti
aam
fcomps
mov
fwait
push
addr16
int3
and
fisttps
mov
and
mov
cmp
sub
pop
repnz
call
xchg
repnz
fsub
movsl
inc
lods
and
adc
pushf
jecxz
inc
mov
mov
sub
jo
fcompl
xchg
lret
inc
mov
push
and
repz
std
jmp
outsb
xlat
daa
das
sahf
mov
push
pop
les
outsl
test
push
mov
popf
sub
add
dec
xchg
rclb
push
mov
xchg
xchg
repnz
mov
and
aas
push
pop
add
pop
or
fbstp
mov
rcll
inc
and
fldenv
pop
xor
shlb
xchg
sarb
xorb
movsl
scas
lods
push
daa
imul
iret
fcmovnbe
mov
test
mov
es
sbb
xchg
jle
xchg
sub
inc
and
mov
sbb
xchg
inc
adc
call
mov
fisttpl
aam
test
lods
cmpl
xchg
sub
lcall
repz
xor
and
xchg
jo
adc
dec
xor
xor
bound
cmpl
push
push
cmp
inc
outsb
arpl
xchg
inc
lret
scas
or
in
adc
pop
cwtl
pop
pop
mov
mov
jg
sub
sub
jns
pop
sbb
cld
xchg
mov
adc
jne
or
push
scas
in
lret
fxch
dec
lret
enter
clc
stos
or
xor
xchg
inc
lods
mov
xor
xchg
cmp
cmp
data16
sbb
xor
lcall
scas
xchg
out
cmpsb
sbb
pop
std
mov
jle
xor
daa
jle
and
sbb
lods
sarl
movsb
inc
ret
out
std
inc
sbbb
add
xchg
dec
xor
push
adcb
add
ja
sahf
movsl
sbb
push
or
lahf
lea
dec
lods
ret
shr
fbld
outsl
dec
subb
jmp
xchg
js
ret
add
out
sbb
sysenter
mov
jle
dec
mov
mov
std
daa
hlt
aam
sub
sub
push
daa
xchg
or
aam
pushl
cli
jno
aad
in
mov
subl
mov
cmp
clc
fldenv
mov
pop
cmpsb
inc
adc
jbe
mov
test
daa
int3
cld
pop
into
jo
shl
out
insl
pop
cmp
add
jbe
mov
sbb
and
xor
scas
or
mov
insb
clc
mov
mov
add
shll
and
jl
orb
xchg
sahf
int
sub
insb
and
sbb
lret
xchg
lock
xchg
out
in
lret
push
popa
std
cwtl
xor
movsb
push
stc
sub
imul
int3
fsubs
sbb
bound
ljmp
outsb
mov
dec
imul
scas
pusha
scas
cmp
ret
push
mov
ret
lcall
or
mov
xlat
pop
xchg
mulb
cmc
mov
jmp
add
sbb
ret
mov
mov
mov
aam
cli
pop
in
outsb
sub
pop
mov
movsl
data16
cmc
dec
addr16
cs
repnz
add
dec
sbb
icebp
fnsave
ret
nop
sub
mov
rol
cmp
mov
ds
lds
or
test
inc
pop
push
push
je
mov
test
sbb
divl
and
mov
imul
enter
adc
pop
mov
mov
jne
enter
mov
leave
or
xchg
in
jne
jle
decl
pop
out
std
add
add
jecxz
orb
pop
cmp
inc
int3
out
mov
cmp
xlat
iret
inc
xor
sarl
int3
call
and
pop
divb
pop
hlt
lret
inc
pop
loope
inc
aas
inc
movl
inc
loope
xchg
mov
cmp
lahf
jge
xchg
fidivrl
fs
std
mov
jnp
inc
jns
dec
pop
inc
jb
fldl
push
add
dec
sti
ja
adc
sarl
scas
sbb
imul
mov
pop
sub
or
in
insl
aad
sbb
addb
shlb
gs
mov
psrlw
lock
popf
addr16
xchg
mov
in
sbb
outsl
mov
test
jno
imul
jne
cs
ficoml
out
add
add
mov
in
mov
cli
loope
sbb
setl
mov
mov
jecxz
xor
push
mov
mov
xchg
push
inc
dec
sbb
jcxz
sbb
cmp
jp
jle
cltd
stos
in
pushf
inc
sbb
inc
outsl
sahf
push
data16
das
jle
xchg
pop
pop
rorl
loopne
pop
stc
sub
or
cmp
mov
aas
lods
iret
lret
icebp
daa
lahf
xor
std
movsb
xchg
and
in
loopne
nopl
mov
mov
jns
fdivrp
xchg
sbb
mov
prefetch
or
mov
and
mov
xor
inc
cmp
jb
and
push
cltd
movsl
push
inc
je
cmp
add
cltd
jb
rep
cmp
lahf
dec
imulb
das
repnz
xor
ss
sub
cltd
xchg
gs
cmp
sub
or
dec
cli
call
mov
and
loopne
jmp
dec
mov
in
mov
pushf
es
cmp
in
mov
jl
mov
cli
or
pop
add
push
add
xchg
xchg
cmpsl
repnz
dec
lds
adc
sub
xor
pop
cli
jbe
rolb
repz
mov
pop
mov
idivb
inc
push
jns
mov
repnz
or
mov
push
fs
insb
dec
dec
out
push
sar
mov
sub
lcall
pusha
outsb
lods
push
lock
mov
adc
adcb
into
in
je
push
jp
jae
lret
xor
cmp
push
orb
jecxz
ja
jbe
sbb
lds
xchg
sbb
imul
aaa
adc
sub
mov
jmp
pop
inc
popa
mov
pop
sub
mov
push
cli
int3
mov
cmpl
mov
insb
lea
dec
push
lahf
and
ror
dec
loop
mov
hlt
push
call
or
mov
xor
push
test
or
cmp
dec
dec
test
hlt
cld
test
xchg
dec
xchg
gs
repz
rol
and
mov
inc
or
enter
add
or
xchg
aad
ds
popa
cmpsl
xchg
xchg
mov
push
cmc
jg
push
stos
mov
lods
xor
js
addb
outsl
cld
imul
ret
adc
ficoms
dec
mov
hlt
inc
js
cld
outsl
stos
push
xchg
adc
std
das
mov
mov
pop
or
stos
js
jno
push
out
and
rorl
out
xchg
sbb
fsubl
leave
int3
pop
pop
outsb
cmc
mov
jl
adc
cs
pop
jno
xor
xchg
aam
iret
sbb
cmp
mov
test
xlat
les
and
cmp
cmp
jge
loopne
fwait
add
xor
leave
out
xlat
icebp
push
xchg
xor
shlb
jmp
lock
repnz
xor
adcl
pusha
xor
imul
sbb
std
jns
mov
scas
inc
pop
cmpb
jl
jle
pop
sahf
aad
ror
popf
push
inc
mov
cmpsl
or
cmp
stc
js
adc
fldenv
out
push
jae
jmp
cmpsb
xchg
mov
pop
push
orl
sbb
cmpsl
xchg
and
sub
cld
lcall
sarb
in
inc
pop
mov
pop
fnstcw
leave
ja
cli
push
jle
sarb
cmp
in
mov
xchg
push
and
push
xchg
adcl
inc
push
mov
mov
add
orl
stc
lods
icebp
jbe
sahf
xchg
fsubrs
repz
loope
fstps
int3
cmp
inc
sub
fistps
lcall
lods
loop
mov
inc
cmp
xchg
nop
mov
xchg
ret
ret
inc
mov
jle
adc
gs
pop
pop
psubusw
mov
xor
outsb
sbb
shl
add
sbb
clc
xchg
xor
xor
repz
repnz
dec
and
mov
cltd
js
int
pop
pusha
outsl
roll
pop
outsb
dec
int
leave
sbb
push
dec
lea
lock
pop
adc
sub
insl
leave
insl
dec
sub
hlt
push
push
pop
sub
adc
dec
push
pusha
imul
sbb
aam
insb
outsb
enter
xchg
loopne
loop
sar
shr
pop
jg
push
add
mov
ret
movsb
dec
or
inc
hlt
movsb
mov
xlat
rcr
cmpsl
aad
daa
jg
dec
pop
mov
jle
test
lahf
sub
jno
incl
fisttpll
and
jge
or
outsb
fcomip
in
cvttps2pi
std
andb
rorl
sub
push
les
xchg
dec
arpl
xchg
outsl
movsl
lods
out
jnp
das
xchg
pop
push
dec
sub
es
mov
pop
mov
or
xor
inc
outsl
in
in
int
mov
pop
pop
shlb
mov
test
mov
push
daa
pusha
bound
cmp
jb
lea
mov
and
push
cmp
ret
pusha
or
out
xchg
imul
xchg
lods
mov
stos
mov
adc
dec
test
movsb
scas
push
enter
outsb
scas
insb
push
aad
jae
sarl
movsl
or
mov
shlb
outsb
int3
js
dec
pop
aam
add
out
and
mov
mov
mov
lock
fmul
inc
cmc
das
mov
xchg
cld
xor
cmp
test
das
sbb
adc
add
imul
add
mov
add
jp
mov
adc
mov
inc
imul
shlb
cmpsl
xchg
inc
hlt
pusha
ds
jne
es
push
and
arpl
lret
sbb
pop
shrb
aam
adc
or
aad
mov
cmp
jge
iret
pusha
aas
fs
adcb
push
or
clc
aaa
and
sahf
xchg
pop
movsb
dec
loopne
xor
xchg
mov
repnz
movsb
stc
cli
cltd
mov
arpl
loop
dec
jecxz
in
pop
sar
out
mov
cmp
je
mov
scas
push
nop
mov
insb
daa
and
mov
cli
inc
insl
test
cwtl
push
push
mov
jl
hlt
js
push
xchg
fildll
inc
clc
xchg
dec
sub
test
inc
add
cmp
cmpb
xchg
and
ret
push
cmp
xor
mov
mov
lcall
pop
ret
cli
xchg
mov
pushf
mov
inc
cmp
cmpsl
push
sbb
sti
out
nop
lahf
jg
or
mov
push
dec
jbe
pushf
jae
and
jno
pop
xchg
and
mov
shll
loopne
sbb
mov
mov
in
loope
and
mov
jp
push
iretw
movsb
mov
xchg
leave
and
rorb
push
mov
jne
xchg
pop
imul
pop
cmp
jne
popa
sbb
cmp
movb
cmp
stos
aam
sarl
xorb
or
adc
cmp
iret
fldcw
and
add
arpl
test
cmp
push
stos
mov
and
dec
fcompl
dec
in
adc
dec
incl
cmp
lods
pop
jl
pop
movsl
pop
aaa
testb
outsl
adc
popl
jle
pop
dec
xor
rolb
mov
inc
adc
cld
and
das
mov
outsb
inc
adc
fnstenv
mov
mov
pop
pop
or
push
sub
in
out
and
mov
mov
jns
or
inc
lds
insb
fld
outsl
test
push
aas
sub
and
popa
cmc
mov
cli
imul
push
pop
jns
stos
in
jbe
add
xchg
push
or
js
xor
inc
jnp
add
mov
js
cltd
adc
sti
jbe
add
ficoms
xchg
xchg
adc
push
jle
ja
pushl
or
xchg
mov
add
mov
adc
vrndscalesd
sbb
out
push
xorb
cmp
outsl
adc
jle
int3
jns
int3
test
inc
mov
je
mov
shl
outsb
xor
jge
fiaddl
mov
daa
call
pop
xchg
fcomps
es
dec
cltd
es
je
sbb
push
sub
shufps
das
push
dec
test
ficoml
mov
lret
xchg
aaa
pcmpeqw
pop
rcrb
xchg
jo
cwtl
add
pop
ss
inc
cmp
cmp
pop
mov
bnd
and
xor
imul
iret
iretw
std
lret
jge
ss
sti
lret
push
aas
divb
push
loopne
push
or
notb
lret
pop
pop
jg
xor
xlat
xchg
jne
scas
sbb
inc
jbe
inc
aaa
jae
push
call
pop
push
mov
aad
icebp
adc
mov
pushf
pop
in
shrb
out
ret
pop
loope
stc
xchg
bound
mov
mov
sub
cmc
call
shl
jb
add
jge,pn
adcl
mov
shrb
cmpsb
sub
or
insb
test
sub
std
pop
cmp
int3
negl
mov
pop
out
xchg
insb
inc
arpl
lret
mov
adc
je
rcl
inc
das
xchg
inc
pop
xor
xor
dec
sbb
sbb
shl
test
cld
lods
std
mov
pop
inc
jbe
in
scas
lahf
jl
cmpsb
inc
sti
insb
push
bound
fcoml
inc
ds
test
pop
aam
stos
cmpsl
and
xorl
out
jae
loopne
test
adc
xor
mov
arpl
aas
sub
jae
xor
push
negl
pop
sbb
jno
andl
xchg
dec
mov
sub
or
mov
repnz
sbb
sbb
mov
mov
push
dec
out
out
dec
mov
aaa
jmp
inc
insl
fadd
add
mov
inc
pop
add
cmpsl
jp
push
pop
or
not
fistps
jle
into
adcb
movsb
lods
mov
in
sub
mov
int
and
in
ds
add
mov
cmpl
fisubl
xchg
mov
lds
daa
jg
adc
sahf
xchg
js
fucomp
pop
sbb
in
xchg
mov
mov
mov
clc
enter
mov
dec
add
or
sub
jo
push
pop
dec
sbb
cmpsb
mov
dec
jne,pt
adc
jbe
pop
xor
int3
mov
enter
fucom
rcrl
xor
inc
movsb
or
sbb
cwtl
addr16
cld
sbb
xchg
fs
insb
jp
ss
mov
jmp
mov
xchg
insl
scas
xor
push
jle
ja
jb
and
loope
add
xor
xor
pop
mov
daa
mov
arpl
cmp
dec
ret
not
mov
push
outsl
data16
pop
and
lcall
adc
test
inc
xchg
sbb
test
mov
sub
jbe
std
popf
mov
mov
ret
mov
lret
push
inc
fsubp
cs
xor
mov
mov
jno
int3
outsl
arpl
adc
mov
xor
sub
sahf
xchg
jnp
insb
inc
mov
sbb
or
das
fistpll
xor
push
aam
inc
inc
push
jmp
lea
jp
hlt
scas
inc
ret
inc
scas
mov
cmc
jbe
dec
stos
pushf
out
lods
icebp
pop
rcl
sub
push
fdivrs
sbb
jle
testb
ret
xor
push
mov
andb
jp
jns
dec
hlt
bound
lahf
mov
loopne
stos
in
scas
sbb
repz
and
cmp
out
rorl
lahf
imul
xorb
cmp
mov
mov
stos
sbb
aam
insb
fisubrl
loope
cmp
ss
inc
mov
icebp
fmull
ficoml
pop
push
cli
jnp
addb
sbb
cltd
jae
pop
pop
cmp
fildll
mov
sti
jne
flds
pop
sar
pusha
mov
sti
and
inc
xor
xchg
sub
ret
arpl
pop
in
xor
pop
pop
cmp
sub
xor
loope
cmc
repnz
fs
ss
pushf
fadds
in
jmp
mov
jae
test
sub
btrl
or
xchg
jne
imulb
andnps
test
pop
mov
mov
and
jns
xor
inc
mov
jecxz
pop
jl
addl
dec
xor
xchg
or
imul
xor
sub
mov
fsubrs
cmp
insb
cmp
xchg
pusha
in
iret
and
jns
mov
scas
and
dec
mov
or
sahf
lcall
push
std
dec
adc
mov
out
pop
cmpl
lcall
je
lock
jmp
ret
pop
repnz
mov
popa
push
cmpsl
or
and
inc
call
push
xchg
movsl
insl
ret
mov
and
mov
dec
rorl
inc
add
mov
push
mov
pop
ja
in
xchg
scas
mov
out
mov
xchg
sub
or
push
cmpsb
inc
in
inc
fs
or
mov
dec
sbb
push
js
imul
xchg
mov
xor
or
pop
add
sub
popa
dec
shr
aam
imul
xor
pop
cmc
inc
mov
test
lods
insb
int3
movsb
in
test
cs
fs
pop
stos
xlat
cmp
mov
push
mov
cmp
fiaddl
mov
stos
lret
push
shrb
in
add
ljmp
cmp
push
pop
mov
sti
insb
sbb
es
test
jae
sahf
xorl
pop
frstor
lock
sub
xchg
fisubrs
xor
shll
insl
and
push
aam
sbb
adc
lea
cmp
xchg
aas
adc
inc
sbb
xchg
pop
mov
jecxz
jne
lret
loope
fld
lret
std
pop
inc
ljmp
adcl
jmp
and
out
xor
daa
xchg
sub
jle
jb
aam
out
and
lret
call
sbb
pop
inc
mov
inc
add
push
shlb
in
into
addr16
popa
cmpb
call
dec
incb
push
xchg
shl
push
leave
les
call
cmp
jl
iret
jl
mov
mov
pop
dec
sbb
aad
iret
or
out
push
adc
shlb
roll
int
loope
sbb
pop
dec
adc
stc
jb
nop
repz
mov
data16
add
sub
cmp
sbb
dec
dec
cmc
inc
or
enter
add
xchg
outsb
jle
inc
mov
push
dec
hlt
flds
or
dec
sbb
cmp
clc
ret
pop
add
and
repz
adc
shll
subl
adc
ljmp
cmp
cmp
mov
xchg
pop
jne
inc
inc
mul
xor
and
jg
sti
jnp
out
subb
push
sub
inc
bound
in
add
dec
xor
outsb
mov
sub
xorl
notl
sub
adc
push
push
mov
pusha
or
cmp
test
xchg
xor
jmp
jle
loope
sub
xchg
xchg
jo
cld
adc
cmp
mov
lock
sub
cmp
inc
sbb
addr16
or
sahf
xchg
rcll
int3
push
pop
pop
adc
and
pop
dec
push
cltd
in
pusha
shrl
ss
cmc
and
icebp
lock
repz
push
stos
push
lea
mov
out
ficompl
cmp
mov
dec
xorb
jmp
jecxz
jb
dec
rolb
jbe
pop
shl
mov
and
into
mov
push
jmp
int
mov
lds
mov
cld
nop
in
lds
lcall
pop
out
and
std
sub
lods
mov
jo
xor
icebp
cli
and
pop
sbb
mov
and
and
jle
cld
add
cmpsb
pop
mov
and
addr16
push
pushf
xchg
fimull
mov
mov
out
lcall
mov
jae
ljmp
ror
int3
xor
test
push
or
js
lret
xchg
outsb
dec
outsb
add
daa
mov
mov
sbb
and
and
test
mov
in
lock
xlat
mov
mov
leave
hlt
dec
xor
mov
sbb
xor
lods
and
sysexit
mov
or
pop
push
mov
inc
adc
notb
fadds
arpl
mov
jno
mov
add
jno
aad
jbe
gs
repnz
xchg
inc
mov
push
xor
mov
adc
adc
test
mov
fsubrl
divb
and
dec
andl
insb
adc
push
test
stos
xor
mov
mov
jge
jns
lock
shrl
sub
sbb
dec
cwtl
stc
jmp
jge
jp
jb
pushf
cmp
dec
mov
cltd
adcb
sti
aad
mov
fdivrl
pushf
pop
inc
je
decl
dec
mov
mov
mov
lods
rolb
ficoml
dec
dec
inc
jp
jge
jne
xor
lods
push
mov
push
mov
loopne
cmp
and
imul
mov
imul
iret
jp
or
pop
cmp
adc
or
pop
xchg
test
cwtl
xlat
pop
mov
dec
into
and
test
xor
fcoml
ret
outsb
rcrb
and
dec
fwait
or
add
jne
push
jno
lcall
fwait
pop
aad
mov
or
sbb
push
insl
and
cltd
lret
adc
js
mov
mov
popf
lods
scas
or
in
xor
test
jns
ret
dec
or
cli
inc
xlat
sbb
shlb
insl
cmpb
push
mov
mov
inc
fdivrp
dec
mov
dec
fldcw
add
movsl
sbb
jg
pop
push
fisttps
push
or
call
idivl
mov
gs
shll
sahf
pop
jmp
push
or
mov
std
testl
imul
xor
aas
stos
push
faddl
xchg
lods
mov
adc
shrb
sbb
xchg
inc
es
sub
xchg
pop
in
leave
repz
or
vmread
insl
mov
shrl
scas
and
jecxz
inc
rorl
es
mov
das
adc
pop
mov
out
mov
pusha
movsb
cmp
xor
cmc
out
out
pop
aaa
outsb
mov
pop
lret
call
sub
stc
xor
sbb
aaa
sbb
mov
push
es
xor
mov
movsb
enter
aaa
fcomps
push
rcll
fnstcw
pop
mov
sahf
mov
ret
int
lcall
in
out
adc
pcmpgtw
lcall
divl
or
int3
cli
push
mov
pushf
lea
popf
push
mov
pop
add
rcrl
fs
pop
in
shlb
pop
sub
das
jle
xor
pusha
pop
push
pop
pop
xlat
pop
rorl
sti
inc
jecxz
adc
inc
lret
iret
add
pop
clc
mov
jo
jno
inc
adc
ret
pop
dec
add
pop
test
ret
popa
mov
or
repz
dec
idivl
lea
icebp
sub
cmpsb
push
adcb
sub
ljmp
scas
and
fsubrl
cmp
enter
dec
nop
sub
bnd
scas
imul
xchg
enter
mov
jns
pop
mov
and
adc
bound
mov
sahf
inc
nop
jb
popa
shl
insl
das
xchg
inc
testl
scas
mov
sub
out
cmp
xchg
xchg
clc
ljmp
cmpsl
jmp
nop
orb
sahf
pop
sbb
icebp
je
fidivl
push
out
or
cmp
je
xor
dec
pushw
sbb
mov
test
mov
insl
cmp
stos
data16
push
faddl
and
repz
jge
mov
add
enter
xchg
inc
xlat
pop
push
inc
js
icebp
and
pop
sbb
push
dec
rcll
in
stos
or
out
outsl
xor
scas
or
lea
adc
mov
push
pop
adc
out
mov
pushf
adc
mov
cmc
inc
iret
xlat
pop
int
jnp
jg
and
repnz
pop
or
push
xorb
xchg
dec
addr16
inc
and
cmp
push
adc
inc
mov
nop
inc
mov
pop
loopne
int
shlb
arpl
fbld
dec
js
mov
bound
jecxz
jbe
and
mov
dec
int
push
mov
sbb
jp
ds
cmpl
outsb
daa
push
cmp
add
sub
pop
stc
sbb
imul
mov
outsb
xchg
xor
jp
inc
loop
pop
xor
aaa
fdiv
aas
cmp
pop
sbbb
outsb
pop
bound
test
mov
negl
and
jno
pop
aad
xchg
sub
dec
jae
nop
cmp
cmc
sub
insl
mov
sub
data16
sub
mov
test
lods
jle
lret
mov
pop
int3
mov
sahf
pop
bound
arpl
inc
xor
lcall
add
fwait
push
stc
frstor
rcrb
add
push
lret
shrb
dec
mov
add
xchg
pop
add
pop
jmp
icebp
cmp
add
lods
cmc
push
sbb
pop
dec
lods
loop
dec
or
push
mov
ljmp
data16
rolb
or
mov
test
icebp
pop
roll
push
pop
into
cmp
sub
jp
adc
mov
add
xchg
cld
les
sarb
mov
sub
pop
pop
mov
cmp
in
cltd
arpl
xchg
fsubl
sub
fabs
stc
aad
test
adc
aam
in
pop
jge
mov
sub
test
mov
test
add
and
dec
sbb
fisubs
andb
cltd
repz
xlat
and
cmp
mov
stos
cltd
mov
xor
sarb
flds
pop
addr16
mov
sbb
fdivrs
andl
xor
rclb
jle
add
pop
mov
lods
sbb
fistpl
lock
js
sub
sub
cwtl
cltd
sub
cld
xchg
or
pop
fildll
cmp
call
ret
adc
rolb
lahf
loope
pop
inc
orb
sbbb
inc
ss
inc
out
std
or
fadd
outsl
cltd
push
pusha
idiv
xchg
into
cmp
fcomip
into
outsb
cmp
cmp
push
insl
rclb
pop
ljmp
lock
shr
gs
mov
lods
popf
imul
ja
mov
daa
add
ffreep
outsl
gs
mov
cmp
call
fidivl
imul
adc
sbbb
fmulp
or
jp
inc
inc
xchg
mov
gs
add
arpl
js
cmp
daa
jns
mov
push
mov
cmpsb
xchg
ret
cwtl
loope
jl
repnz
lcall
pop
xchg
push
sub
or
inc
pop
sub
xor
pusha
scas
fwait
outsl
dec
int3
xchg
mov
xchg
adc
xchg
or
shlb
dec
jmp
pushf
loope
jae
and
fistpl
xchg
js
fcoms
jecxz
pop
sti
mov
add
sbb
xor
imul
negb
pushf
xchg
cmp
je
adc
test
test
adc
stc
popa
mov
cwtl
outsb
sub
call
or
lretw
fs
fildll
or
test
jae
inc
daa
shll
pusha
cmp
mov
xchg
sbb
enter
test
test
out
xor
xor
push
jl
add
int
hlt
or
add
or
jb
sbb
es
fcom
jg
ss
out
or
or
cmp
lds
in
mov
mov
out
lock
iret
cmp
mov
xlat
je
adc
into
xor
fnstsw
hlt
push
cltd
lcall
sahf
aaa
aam
mov
mov
bound
ficompl
dec
mov
sub
insl
mov
jmp
mov
dec
mov
scas
mov
enter
cld
and
push
mov
push
loopne
sub
xchg
je
stos
mov
loop
das
add
adc
dec
lock
leave
inc
and
mov
sub
int3
call
cs
jecxz
xchg
bound
aaa
outsb
adc
add
pop
pushf
test
dec
dec
sub
orb
movsl
dec
test
aas
in
push
push
or
or
mov
in
pusha
shrb
and
lret
push
outsl
dec
mov
movsb
sub
cmp
push
push
cmpl
loope
push
or
dec
mov
sbb
mov
nop
xchg
lahf
les
xor
daa
or
aaa
stc
jns
or
sti
push
vminpd
mov
adc
xchg
int
inc
cmpsb
pop
sub
dec
dec
popf
add
insb
in
adc
push
or
mov
jecxz
lret
mov
sbb
mov
cmpsl
les
add
les
popf
out
cs
in
sbb
xchg
loopne
dec
ss
lret
xchg
adcb
dec
addr16
in
cmc
shll
stos
mov
divb
imul
ficomps
es
sub
cmp
imul
je
and
jne
mov
push
inc
fnstcw
ss
cld
jmp
inc
dec
cmp
cmp
outsl
enter
fsubrs
cmpsl
jg
xor
mov
fwait
xlat
sbb
sahf
cmp
jl
fstpt
imul
inc
cmp
or
call
dec
sbb
or
iret
outsb
js
lret
xor
fdivp
scas
jne
sbb
lahf
sarb
mov
jecxz
cmp
xchg
pop
stc
das
cmp
or
stc
xlat
loop
ja
inc
mov
fwait
lcall
push
or
shll
xor
sarb
ja
pop
inc
ficoml
out
mov
sbb
lods
sbb
and
inc
repnz
pop
mov
and
je
sub
or
adc
stos
sarb
pop
scas
jge
dec
push
decl
push
shrl
xor
outsb
div
cmp
mov
inc
jae
in
xlat
je
pop
or
test
movsl
xchg
out
sbb
movsb
jle
jmp
test
hlt
mov
fidivl
xchg
test
xchg
in
cld
pop
mov
push
shrd
xchg
std
testl
mov
pop
mov
je
pop
sbb
xor
shrb
out
mov
pop
and
mov
pop
xchg
or
xor
movsl
and
stos
mov
cmp
js
insl
mov
jl
lock
mov
bnd
into
nop
ds
aas
into
fldl
stos
pop
sub
mov
jo
fiaddl
aas
xor
pusha
xlat
out
xor
push
add
std
inc
xchg
in
dec
jo
and
adcb
mov
jle
push
mov
jo
sub
loope
movsb
fwait
jnp
inc
dec
ret
enter
repnz
pop
push
cs
rol
push
push
add
jnp
hlt
mov
xchg
cmp
xchg
lea
mov
inc
jg
pop
shlb
and
sarb
dec
fnstsw
outsb
js
jl
push
fisttps
je
and
jno
dec
aaa
lret
in
mov
out
ret
icebp
adc
dec
pop
jg
jp
ss
loop
loope
ljmp
push
and
ss
dec
or
outsb
imul
or
inc
add
ret
in
sub
or
dec
insb
pop
xchg
dec
aad
test
fwait
adc
and
cmp
nop
mov
add
fiadds
loopne
xchg
sahf
int3
jno
sahf
jmp
call
nop
push
rolb
jmp
mov
adc
into
mov
gs
cs
cld
rcrl
lret
adc
pushf
dec
jge
cld
adc
fsubrl
fst
xlat
push
inc
push
xchg
cltd
cmpsl
int
xchg
dec
dec
pop
ss
xor
daa
xchg
mov
pusha
arpl
mov
cmpsb
sub
out
jnp
shlb
test
push
rorb
sbb
cmpsb
in
rol
stos
jp
inc
scas
outsl
ljmp
inc
pop
faddp
fs
rolb
mov
movsl
jae
mov
pop
pop
xchg
jecxz
inc
in
jb
fistpl
push
out
dec
rcll
pop
dec
sbb
maskmovq
idivl
jle
push
out
repnz
in
sbb
js
sub
xor
je
pop
std
clc
fisubrl
adc
lret
cmp
mov
jne
arpl
mov
loope
enter
aas
jp
adc
out
lahf
bnd
inc
repnz
dec
aam
aaa
mov
test
movsb
addr16
notl
int
lods
mov
bound
jo
xchg
jmp
pop
and
into
cltd
subl
cmp
xor
adc
je
and
aad
push
mov
inc
mov
cmp
rorl
mov
push
xchg
dec
mov
sbb
inc
mov
aad
push
push
dec
adc
repnz
push
sub
imul
cmpsb
push
xchg
jnp
xlat
mov
xchg
sahf
rorl
fsub
fstl
pushf
and
pop
adc
mov
mov
les
cmovnp
push
rcrb
jg
sub
faddl
or
sub
imul
push
shll
sub
add
fidivrl
cmp
iret
test
mov
insb
sti
hlt
dec
test
das
dec
push
cmp
gs
addb
leave
lret
and
fwait
cli
jno
jmp
mov
sbb
xchg
dec
xchg
jmp
mov
add
push
add
adc
pop
pop
hlt
loopne
push
inc
jnp
pop
or
out
sub
cmp
jb
push
mov
movsl
sub
orb
insl
xor
adc
mov
jnp
or
push
jae
sub
sub
fidivs
out
lcall
pop
jl
jo
cmp
test
or
test
xor
out
fwait
das
push
xchg
fsubp
cmp
pop
sub
daa
and
imul
cwtl
les
mov
inc
pop
and
in
cli
fstpt
data16
inc
push
imul
lahf
pop
sarl
mov
mov
mov
xchg
testb
lahf
xchg
fidivl
clc
mov
ja
jecxz
xor
ret
mov
clc
ret
inc
add
repz
out
pop
outsl
pusha
sbb
xlat
adc
repnz
jns
stc
or
and
out
inc
repnz
jmp
mov
loope
sbb
in
sbb
icebp
mov
cmp
addr16
mov
lock
push
lret
xor
inc
fldcw
mov
shr
or
mov
and
push
adc
mov
popa
xchg
sub
add
mov
fiadds
cli
pop
xchg
mov
insl
cs
lods
pop
xorl
xor
jecxz
pop
clc
jmp
and
loop
inc
jno
adc
inc
add
mov
dec
fxch
fidivl
pop
or
or
in
pop
and
mov
sahf
mov
and
rcrb
add
fldcw
sbb
or
cmp
push
out
mov
fsubrl
sbb
aas
push
xor
inc
dec
test
pushf
cmp
pop
sub
movsl
mov
mov
js
mov
sbb
lcall
mulb
fadds
inc
lods
dec
inc
fs
jmp
ds
mov
stos
xchg
jp
push
inc
ja
xor
rol
iret
and
inc
fwait
xchg
test
loop
pushf
int3
lret
pusha
xlat
push
add
sahf
rcrl
push
ds
mov
dec
cmp
pop
add
adc
pop
adc
mov
pop
in
xor
outsb
je
das
push
adc
aas
por
rcr
push
mov
cli
cmp
lret
jae
push
xor
gs
fsubl
jle
push
xor
call
or
and
outsl
testb
lcall
push
and
dec
pop
and
and
push
lahf
add
lahf
fiadds
xchg
xrelease
xchg
out
xchg
es
imul
cmpsb
pop
loope
inc
pop
pusha
xchg
fwait
cli
arpl
cli
push
inc
pop
ljmp
dec
pop
xchg
movsl
loopne
and
mov
cld
push
mov
lcall
inc
push
stos
ret
in
adc
aaa
pop
js
push
flds
add
aad
fldenv
imul
bound
inc
mov
inc
stos
stos
mov
dec
xchg
mov
inc
xchg
cmp
and
into
mov
test
aas
xchg
popf
addr16
movl
pop
je
push
loope
push
jle
lcall
orl
orw
push
adc
pop
dec
repz
fdivp
int
ja
cli
movsl
inc
push
fs
jp
inc
pusha
mov
into
add
movsl
ret
addr16
push
stos
xchg
insb
adc
aaa
pop
out
jl
iret
mov
testb
push
nop
cmp
cli
xchg
je
cli
or
imulb
into
popa
pop
js
jmp
int
jb
flds
push
loopne
jmp
shl
xor
fbstp
xchg
inc
xor
or
out
test
sub
aas
fwait
pushf
push
adc
repnz
daa
xor
in
popa
bound
xlat
out
ret
xor
xor
lret
inc
dec
outsl
xor
out
inc
scas
xlat
push
fsubr
loop
scas
xor
xchg
gs
adc
rclb
jecxz
iret
sub
pop
jp
push
test
fstpt
pop
imul
jg
dec
popf
jp
mov
mov
mov
imulb
mov
sbb
dec
js
jae
in
das
scas
call
add
or
outsb
mov
mov
push
insb
js
dec
xchg
lods
mov
cmp
dec
leave
loop
pusha
imul
rorb
lret
xor
jle
jp
mov
sbb
aaa
enter
jecxz
aam
add
mov
jecxz
cwtl
pop
outsb
or
std
stos
mov
pop
sbb
xor
xor
fwait
dec
adc
in
in
add
cmp
inc
jo
out
adc
enter
pop
in
movsb
stc
push
xor
xor
inc
outsl
xor
push
inc
mov
and
in
xor
repz
in
dec
lret
call
fwait
adc
mov
push
xchg
mov
mov
jns
mov
jae
cmpsl
dec
incb
daa
rcrl
xor
lcall
adc
jno
outsb
cmp
in
adc
int
sub
out
cmp
divl
xchg
lret
pop
pop
loope
lds
mov
sti
cwtl
cmpsl
dec
out
xchg
cmp
xor
adc
cmc
pop
mov
imul
mov
push
jl
xor
test
iret
adc
or
test
mov
push
test
adc
rclb
pop
cmpl
mov
fmuls
sub
sbb
ret
pop
not
movsl
fisubrl
jns
test
dec
adc
jge
loop
ja
addl
dec
aam
jae
or
xor
dec
xor
mov
sbb
pop
cmpsl
insl
js
es
outsl
sub
sub
jno
hlt
add
aas
jns
mov
iret
fsubr
jp
out
jmp
roll
adc
sbb
mov
imul
imul
fcoml
pop
and
fsts
pop
out
outsl
xchg
cmpsl
jecxz
mov
popa
mov
rcrl
mov
sub
ret
sti
xchg
aas
cmpsl
push
mov
cmpsl
adc
out
sbb
cmp
js
pop
mov
xchg
test
clc
clc
icebp
clc
sar
mov
push
aad
pop
mulb
inc
hlt
inc
jb
jno
xchg
pop
pop
cmc
pop
inc
iret
notb
mulb
jle
cs
mov
mov
into
ss
lahf
sahf
fisubl
pop
adc
lahf
ret
into
xchg
mov
inc
mov
inc
aad
sub
ret
add
call
xor
xchg
fistpll
hlt
push
lds
insl
jae
repnz
xor
dec
jg
lahf
push
or
ficoml
loop
adc
xchg
aam
cmp
imul
cli
push
imul
sub
loopne
pop
inc
in
xor
sbb
and
in
xchg
xchg
dec
xchg
aas
inc
fwait
out
adc
jbe
mov
push
lcall
ret
nop
cmp
clc
and
mov
xchg
adc
push
adc
push
data16
fdivrs
xor
jle
inc
xchg
push
xor
std
insb
imul
xor
fstl
jl
test
xor
movsb
mov
pop
cld
adc
les
pop
addb
out
adc
js
ds
pop
mov
mov
sbb
pop
push
subl
dec
mov
add
pushf
mov
fcoms
jp
adc
adc
std
sbb
xchg
imulb
mov
repz
fldt
sub
and
in
push
sbb
shll
xorb
les
xchg
xlat
push
scas
lods
add
add
add
lea
outsl
add
sbbb
or
xor
addb
js
in
cmp
stos
int3
cld
push
push
sub
jno
pop
les
push
add
add
test
sbb
imul
inc
insl
pop
adc
cli
cmp
clc
roll
imul
outsb
loopne
add
fisttpl
mov
inc
mov
outsl
aad
pop
shl
mov
sub
push
out
les
lcall
shll
cltd
or
sub
icebp
sub
mov
xchg
pop
pop
test
into
popf
int3
cltd
cmpsl
mov
into
stos
jle
fldln2
imul
stos
cmp
xchg
outsl
sbb
jl
jl
into
pusha
mov
vmovshdup
leave
loopne
mov
dec
out
cmp
push
outsb
dec
in
rcl
rolb
inc
aaa
jne
cmc
rclb
push
dec
int3
fistpll
dec
ficomps
arpl
cmp
push
mov
rol
test
pop
pop
and
push
iret
push
in
xchg
pop
popf
push
mov
dec
jmp
xor
fwait
pop
add
out
xor
lock
cmpl
adc
push
xchg
add
lods
out
mov
adc
pop
inc
sbb
dec
jne
out
pop
add
jge
push
push
sbb
stos
cmc
mov
dec
mov
dec
inc
and
or
pop
bnd
adc
lods
add
mov
xchg
or
adc
hlt
add
lods
hlt
and
xchg
mov
enter
dec
mov
loopne
stos
pop
fdiv
sub
outsb
add
sub
fstl
and
jb
pop
orl
js
dec
imul
sub
mov
xchg
pushl
sti
push
push
adc
cmc
lods
sbb
inc
xlat
js
ror
ja
insl
dec
mov
ss
lods
adc
mov
out
pop
rolb
out
sub
and
fmul
mov
or
cmp
fwait
cmp
pop
in
frstor
xor
jp
or
repnz
test
aam
cmc
mov
pushf
adc
jae
push
and
movb
sbb
sub
std
in
mov
mov
mov
inc
fwait
stos
movsl
or
cmp
hlt
pop
mov
dec
adc
stos
ret
xchg
ja
mov
and
push
and
cltd
sbb
arpl
xor
mov
and
pop
cmpsb
pop
mov
hlt
lock
out
and
pop
out
mov
or
shlb
ljmp
popw
fwait
pushf
fimull
dec
adc
mov
push
or
data16
jnp,pt
xchg
jle
sbb
ljmp
outsb
jae
fnstcw
or
in
sub
mov
mov
cmp
nop
sub
fucomip
jo
adc
mov
icebp
and
mov
ja
sub
test
sahf
fstpt
ret
mov
and
push
or
fwait
dec
cmp
push
repnz
ds
mov
lods
mov
mov
or
pop
xchg
inc
add
cmc
jo
out
add
leave
push
aam
imul
scas
xchg
sbbb
adc
jle
mov
aad
cwtl
fstp
jne
mov
push
jns
push
stos
sbb
xor
fistpl
and
sti
mov
or
sbb
jbe
mov
rol
pop
pop
frstor
add
adc
jle
inc
jae
and
jp
aas
enter
push
mov
add
repz
adc
and
push
mov
push
shll
fsubrl
fisttpl
movsb
lds
rorl
add
adc
jle
lahf
call
push
and
add
sub
sub
popf
aas
in
es
push
jle
and
std
daa
push
dec
out
test
cs
xor
sbb
imul
xorl
repnz
mov
inc
adc
xor
loopne
in
jnp
aaa
xor
movsl
lea
sub
mov
jecxz
push
xor
cmp
inc
add
add
dec
dec
in
xchg
cld
inc
sub
in
xor
pop
fs
popa
in
dec
push
in
aam
add
cwtl
ja
fdivrl
sub
xor
cmp
out
mov
das
mov
es
lret
jge
call
mov
mov
cmp
lods
pusha
loop
adc
sbb
stos
repz
popf
and
js
xchg
or
lods
mov
loope
push
add
cmpsb
sbb
loope,pt
aam
lcall
dec
lret
int
fimuls
imul
addr16
mov
pop
push
lods
filds
stos
jo
jns
push
mov
xlat
add
inc
inc
inc
jl
xchg
lods
and
ljmp
dec
out
xchg
add
sbb
cli
cmpsb
out
pop
adc
sti
mov
out
mov
das
aad
jnp
jl
dec
cs
adc
pop
xor
push
aas
adc
ret
in
mov
xchg
mov
inc
pop
fisubrs
mov
adc
jle
pop
mov
lock
jno
test
sahf
lock
rolb
bound
scas
jb
xchg
dec
in
adc
jbe
lock
into
mov
arpl
dec
dec
test
xor
xor
fistpll
adc
push
cmc
sub
mov
pop
cmp
xchg
rcl
sub
xchg
inc
cmp
out
push
xlat
test
xchg
jb
push
push
and
ret
push
outsl
rol
in
mov
leave
adc
in
jmp
lret
jnp
xchg
mov
test
xor
fcoms
faddl
jp
stos
pop
inc
sbb
sub
mov
lcall
xor
inc
bound
inc
dec
imul
mov
and
push
sbb
dec
jbe
inc
jbe
pushf
and
in
pusha
sbb
sub
mov
and
aaa
mov
ret
pop
sub
mov
js
and
jmp
xchg
mov
jb
inc
aaa
popa
iret
out
dec
pop
subl
mov
xor
arpl
mov
xor
mov
outsb
jns
inc
insb
into
outsb
out
dec
aam
mov
hlt
fwait
dec
xchg
push
jg
rclb
and
or
and
dec
pushf
and
mov
aaa
aam
jmp
hlt
sub
lods
dec
inc
idivb
ret
test
jne
in
shrl
push
nop
add
xchg
jmp
out
data16
repnz
inc
pop
xorl
fsubs
inc
into
in
push
jge
xor
pop
jp
inc
call
add
pushf
das
mov
jmp
xor
add
repz
add
mov
lret
jmp
pusha
sarl
push
mov
bound
repnz
js
dec
es
push
sbb
dec
js
out
mov
dec
loop
frstor
sub
jg
inc
es
subb
addb
sub
push
push
and
or
into
mov
mov
aaa
mov
inc
pop
push
mov
adc
pop
fs
or
add
je
push
dec
xchg
mov
mov
cmpsb
pop
add
xchg
stc
aam
ficoml
shl
mov
fistpll
jl
dec
cs
decb
mov
pushf
mov
movq
mov
pop
add
sarl
fs
mov
or
xchg
into
inc
out
imul
dec
aaa
cmp
lock
push
adc
out
loope
mov
and
cmp
jne
lret
lock
or
loope
testb
in
loop
leave
mov
das
jmp
mov
dec
or
mov
imul
adc
and
das
push
imul
fistl
mov
add
dec
lock
popf
aas
or
sub
push
movsb
jp
pop
xor
push
loop
dec
and
lahf
cld
xchg
ret
jp
jl
and
lahf
les
cmpb
pop
pop
sub
rcrb
inc
dec
jno
out
jb
mov
lods
add
push
fstl
sarl
cmp
daa
mov
movq
iret
sub
or
clc
test
mov
cmovnp
jbe
cld
clc
xor
cmpsl
cltd
rcl
or
cltd
aaa
jle
mov
mov
test
inc
sub
pop
pop
js
fnstcw
mov
repnz
popa
xchg
in
int
ja
cmp
cs
jae
aaa
jecxz
popa
mov
dec
mov
push
fimuls
stc
cmpl
cmp
mov
pop
sbb
xchg
push
aaa
rcll
xor
mov
sahf
xchg
jg
xchg
xchg
or
iret
outsb
dec
subb
fildll
std
or
adc
mov
inc
inc
and
call
mov
sarb
out
pushf
pop
test
lock
cmp
test
xlat
and
adc
cmpsb
adc
add
xor
mov
xor
dec
mov
sub
jle
in
xchg
sub
push
lcall
lret
jmp
repz
ja
push
adc
loope
push
push
shll
jo
scas
sub
in
insb
xor
popf
outsb
and
ljmp
ret
push
das
movsl
add
imul
cmpb
mov
inc
mov
mov
popf
int
mov
sub
js
push
pop
inc
or
or
fldt
xor
mov
fsubl
out
sub
fdivr
pushl
repz
dec
push
pop
jle
out
lcall
sbb
mov
sbb
outsl
inc
sub
repz
outsb
xchg
loopne
ret
or
decb
xchg
lret
mov
test
jae
call
shr
shlb
xchg
push
fidivs
push
mov
dec
pop
fwait
mov
lods
rolb
repnz
js
jl
mov
pop
aas
ds
shrl
push
and
mov
aam
lds
mov
mov
inc
add
cmp
jecxz
mov
sarl
sub
sub
pop
cwtl
test
cmpsb
mov
jmp
push
sbb
push
mov
aam
sub
jmp
dec
aam
xor
mov
pop
pop
push
dec
test
jp
cmp
or
jmp
jge
aad
mov
adcl
aaa
loopne
sbb
sahf
sub
or
mov
xor
push
mov
mov
push
pop
popf
rclb
jmp
xchg
out
mov
es
pop
enter
cs
das
notb
mov
push
addr16
sahf
gs
mov
lods
xchg
push
dec
ds
xlat
add
pop
out
mov
cmp
fwait
leave
cmc
shlb
lock
push
sub
adc
or
cmpsl
std
mov
dec
int3
rol
mov
pop
int3
cs
jae
int
pop
xchg
mov
iret
dec
cli
repz
xlat
fdivr
xor
js
jl
fnstsw
push
sbb
inc
cltd
sbb
insl
push
jo
out
push
cli
xor
loopne
pop
xor
mov
das
repz
mov
inc
xchg
scas
pushf
inc
adc
pop
imul
shrb
pop
add
xchg
mov
iret
mov
insb
pop
lods
adc
pop
loop
in
popl
ljmp
and
shl
cli
or
ja
imul
fisttpl
mov
and
xor
pusha
xchg
leave
inc
ret
bound
cmp
mov
sub
stos
and
push
jg
push
scas
stos
insl
xor
cli
sbb
xchg
xchg
fcomi
subb
in
sub
jne
rcrl
mov
xchg
pop
xor
movsb
jo
push
sarb
dec
sub
fcoms
and
movsb
or
push
repnz
in
insb
out
fwait
out
in
inc
push
lods
fwait
sub
dec
xchg
or
shl
arpl
jp
jno
out
add
arpl
lock
rcrb
jns
jno
mov
test
inc
mov
xor
push
jae
jecxz
mov
clc
lahf
lods
fsubp
mov
jle
xchg
inc
sbb
cltd
adcl
pop
cmp
lret
addl
sbb
mov
data16
or
or
into
jbe
aaa
mov
dec
jb
add
sahf
aad
lret
ja
repnz
and
mov
int3
mov
pop
xchg
aas
repz
pop
or
jb
cmc
popf
inc
mov
out
and
in
jg
test
in
pop
lods
pop
jo
push
loop
and
test
insb
push
xor
subb
iret
sub
jbe
fistl
sub
and
jno
sbb
out
xchg
inc
dec
rcr
sbb
cmc
sub
movsl
push
push
pop
scas
fiadds
and
cmp
rorb
pop
mov
push
mov
jge
aaa
xor
jbe
push
fmuls
pushf
adc
mov
insl
and
fs
adc
fs
sub
adc
int3
in
lods
cli
pop
push
add
push
xor
xchg
mov
mov
enter
orb
mov
nop
in
xchg
mov
mov
lret
iret
mov
jns
jmp
jg
test
popf
out
lock
jp
adc
xchg
jo
push
mov
sbb
xchg
dec
push
negl
add
iret
ss
lds
jno
adc
aaa
push
jne
mov
out
in
test
outsl
popf
inc
or
dec
push
fidivl
lds
adc
fsubl
adc
pop
out
gs
aad
sbb
dec
jns
fdivrs
in
or
sbb
dec
push
pop
jge
adcb
or
stc
sub
dec
dec
or
popf
sub
pop
hlt
cmpb
add
and
inc
push
pop
mov
rcll
clc
adc
adc
movsb
dec
pop
or
xor
cld
imul
cltd
jb
in
mov
loopne
mov
sub
fbstp
xchg
xor
lds
mov
mov
inc
gs
aas
inc
fists
mov
ja
cmp
in
cmp
std
repz
add
inc
and
mov
mov
les
shr
pop
jge
push
sahf
mov
fcoml
xor
jnp
int
outsb
sbb
xor
xlat
imulb
jl
push
dec
xlat
add
mov
sub
adc
adc
inc
push
cli
dec
mov
icebp
push
push
dec
shl
loopne
lret
gs
test
inc
cmp
fisttpl
xchg
out
shrb
sbb
repnz
and
mov
push
add
sbb
dec
sbb
addr16
test
fucomi
lcall
call
inc
xchg
loopne
jbe
pop
sti
jne
sub
and
and
mov
gs
mov
lds
les
jnp
cmpsb
stos
aam
adc
dec
pop
mov
jae
pop
jne
imul
fstps
out
scas
inc
jg
xor
mov
pusha
push
fsubs
out
test
cmp
test
adc
and
sbb
mov
mov
inc
push
pop
pop
sub
mov
jo
daa
rcll
scas
shl
jnp
call
outsb
add
cltd
insl
xchg
xchg
outsb
cld
je
popf
aad
in
bound
mov
inc
adc
add
ret
pop
xchg
mov
insb
cmp
call
jle
aas
lods
pop
pop
dec
icebp
stos
out
cmpsl
xchg
ret
std
inc
aas
mov
shrl
lcall
push
in
jbe
fcoms
adc
push
jae
jno
cld
jns
or
pusha
rol
mov
enter
mov
sub
mov
enter
lods
pop
xchg
mov
or
pop
xor
insb
jge
or
add
cmp
jo
mov
pop
jo
test
lods
mov
jmp
mov
mov
mov
mov
xchg
adc
pop
cmpsl
sub
or
nop
jb
xchg
push
inc
popf
xor
ffree
sbb
das
imul
fprem1
sub
sub
sar
xor
adc
insl
mov
pop
movsl
jae
dec
stc
mov
mov
in
adc
out
mov
testl
cltd
lcall
xor
in
sbb
in
cld
outsb
pop
loope
mov
adc
cwtl
or
es
les
pop
jne
int
jae
push
sahf
push
add
xchg
pushl
lods
or
flds
pop
cmpl
sbb
push
pop
and
pop
sbb
dec
dec
jg
xlat
test
fcompl
pushf
mov
lea
sahf
xor
or
cmp
mov
xor
lret
pop
dec
xchg
gs
mov
pop
insb
lock
test
out
adc
shrb
adc
ja
ja
out
pop
std
add
lock
sub
xchg
loop
loope
int3
lock
movsb
loopne
sbb
fmul
hlt
sbb
mov
mov
and
xlat
and
scas
push
bound
jbe
add
jmp
inc
jae
das
ja
add
inc
psrad
cmp
xchg
jg
ret
dec
and
stos
adc
push
pop
imul
xchg
inc
mov
mov
mov
das
in
negl
mov
pusha
and
call
fsubrs
pop
cmpl
sbb
adc
mov
jo
mov
pop
sbb
sahf
into
mov
add
and
sub
xor
mov
and
push
pushf
mov
cmp
and
xor
repz
push
cltd
fdivl
pop
ds
pop
xchg
imul
jb
addb
dec
rcrl
cmp
bound
cld
cmc
pop
jae
mov
cwtl
xchg
mov
push
push
imul
push
les
fsubrl
sbb
pop
lock
or
adc
xchg
pop
test
jmp
insl
imul
push
sbb
in
mov
std
loop
nop
and
mov
mov
andnps
xor
psubsw
ret
add
xor
jmp
xchg
pop
lret
add
dec
dec
mov
push
inc
lret
scas
or
xchg
sahf
mov
ss
iret
mov
push
idivb
sbb
jg
mov
call
xor
cmp
xchg
ror
sub
js
xchg
adc
gs
or
scas
rorb
sbb
jnp
or
mov
pusha
jle
mov
idivl
ja
cmc
testl
pop
and
popf
js
pop
cli
sub
xchg
pop
add
fwait
mov
imul
sub
rorl
out
pop
arpl
inc
mov
cmpsb
sub
out
out
pop
dec
cld
subl
test
das
ss
xor
cmovge
cmp
push
lods
mov
lret
and
mov
mov
jmp
push
sub
mov
dec
cmpsb
jg
lret
xchg
and
xchg
test
mov
out
les
dec
adc
mov
lret
sub
shll
lret
xchg
flds
shrb
cmp
xlat
xor
mull
cmp
xor
pop
and
out
out
sub
xlat
fidivs
sub
movsb
clc
fildl
add
sub
xchg
in
mov
movsb
gs
sub
add
mov
sahf
movsb
lods
sbb
pop
xor
mov
add
push
movsb
cmp
test
ljmp
loopne
frstors
mov
and
xor
bound
mov
cmp
mov
mov
push
add
xchg
popf
repz
xchg
pop
sub
xchg
jg
stos
dec
pop
das
lahf
je
std
push
push
push
inc
clc
loopne
pop
cmovno
add
daa
fwait
push
daa
add
mov
stos
cmp
leave
pop
scas
jmp
insb
lods
jl
mov
push
insl
cmp
xchg
cli
les
xchg
ret
in
mov
add
xchg
fdivrl
data16
sbb
pop
sbb
outsl
in
test
loop
pop
cmp
mov
cs
fisttpll
inc
adcl
jo
nop
scas
adc
jp
out
xchg
xchg
mov
jb
jo
xchg
xchg
mov
or
dec
xchg
movl
mov
mov
dec
fimull
jo
ret
mov
lock
mov
inc
jbe
fwait
repz
jecxz
and
lcall
adc
fmuls
mov
mov
lret
or
gs
lods
fstps
push
stos
xor
fstpt
outsb
pop
jle
fs
int
fs
ljmp
clc
or
cmpl
inc
mov
cmp
jae
mov
imul
in
inc
out
xchg
xchg
xchg
push
pop
sbb
aas
xor
loopne
add
in
jae
jle
movsb
adc
pop
pusha
repnz
arpl
jl
inc
lret
inc
fstps
es
jno
xor
imul
xor
mov
push
cmp
mov
lods
lds
clc
pop
mov
mov
cld
nop
xor
gs
mov
push
imul
std
das
cltd
xor
stos
adc
inc
icebp
adc
and
dec
loop
scas
in
dec
stos
aas
out
mov
pop
mov
or
adc
stc
gs
shlb
sbb
jp
mov
mov
scas
adc
hlt
movsb
das
dec
cmpsl
add
pop
fidivrl
in
cmp
adc
fstpl
rolb
inc
dec
aas
icebp
pop
cmp
adc
popa
imulb
xor
jnp
lods
xor
bound
sbb
test
mov
fcomip
dec
adc
insb
lret
push
std
test
and
dec
hlt
mov
aad
dec
inc
mov
xor
mov
xor
inc
or
adc
idivl
cmpl
xchg
mov
jp
cld
mov
push
mov
xorb
pusha
test
fmuls
sbb
test
int
es
cld
popf
bound
pop
adc
inc
andb
xchg
call
adc
aaa
stos
fcoms
rclb
mul
xchg
fs
sub
push
out
jmp
int
test
jno
in
fdivrs
mov
ret
xchg
int
outsb
push
mov
xchg
add
popa
xchg
loop
cmp
cs
stos
pop
mov
cmp
jno
insb
cltd
push
inc
dec
shlb
jnp
inc
xorl
lods
push
jecxz
adc
mov
sbb
mov
pop
inc
bound
popa
movb
leave
pushf
push
and
jge
outsb
fidivs
fdivrs
or
mov
dec
outsb
push
addr16
fwait
adc
mov
or
add
inc
outsl
push
xor
leave
sub
mov
dec
js
cmp
out
in
jb
fwait
adc
insl
mov
mov
dec
xchg
or
mov
leave
int3
cmp
mov
nop
lods
in
sbb
add
out
jne
jmp
lret
fldt
lds
push
mov
add
out
lea
scas
jbe
xchg
adc
sub
sub
sub
dec
add
movsb
scas
xor
aas
loopne
leave
push
ds
inc
lods
mov
mov
fwait
dec
incb
pop
inc
test
xchg
cmpsb
sbb
push
push
dec
std
cwtl
clc
jg
test
inc
xor
nop
push
xchg
sahf
push
and
sub
mov
popa
mov
add
or
sbb
inc
shll
sub
dec
dec
scas
sbb
nop
mov
and
ret
testb
add
lret
cltd
add
mov
mov
dec
sub
adc
int3
jbe
dec
pusha
gs
dec
sbb
cltd
in
imul
sub
push
outsl
jp
repz
loop
aas
mov
push
cmp
sub
ret
mov
das
mov
push
pop
xor
mov
cmp
sti
fbld
mov
cmpsl
cmp
mov
push
clc
mov
pop
sbb
mov
push
add
pop
dec
add
mov
cmpb
clc
xchg
push
and
jno
push
jmp
mov
ds
xchg
sti
cmp
mov
call
xor
pop
fdivl
or
insl
jmp
jecxz
fwait
out
rcl
mov
mov
push
cmp
and
jmp
adc
test
nop
nop
int
mov
jbe
std
data16
jge
inc
shlb
xchg
fs
aaa
sahf
mov
rolb
aaa
mov
sahf
push
lret
in
data16
test
sub
xchg
or
sub
jno
adc
leave
pop
mov
gs
cmpsl
jo
or
in
jge
jnp
mov
int3
inc
cltd
sub
sbb
inc
enter
in
cmpsb
loope
pop
aas
neg
add
inc
mov
jge
sub
inc
mov
xchg
sbb
stos
fsubrl
das
pop
lds
mov
xor
test
dec
lods
add
adc
mov
dec
out
mov
mov
in
cld
sbb
stos
push
sub
test
sbb
shll
inc
loope
push
hlt
enter
fildll
je
adc
jo
jns
xchg
sahf
fldenv
in
pop
cld
mov
sahf
sub
jecxz
jmp
inc
xor
cmp
add
mov
mov
mov
out
jne
movl
dec
mov
ljmp
pop
push
es
daa
jb
aaa
scas
in
or
in
test
in
stos
cmp
xchg
xor
subb
jmp
sbb
nop
mul
in
and
cmc
add
inc
test
repnz
mov
xchg
cmpsl
jp
xor
div
push
jl
pop
stos
jae
fs
ljmp
js
std
xor
cwtl
test
jmp
aas
stos
cli
out
dec
in
stos
push
rcll
mov
lahf
in
sti
inc
daa
and
lret
adc
or
cmp
icebp
lret
mov
call
ret
push
test
dec
xorl
and
xor
daa
sbb
sub
cs
inc
ss
push
adcb
jge
jbe
mov
out
jge
gs
fdiv
rcrb
xor
xor
cwtl
out
movsl
insb
test
pop
nop
mov
inc
dec
dec
iret
sub
in
gs
les
fsubrs
test
shll
and
imul
outsb
or
mov
leave
xchg
or
mov
push
mov
add
out
push
roll
dec
out
test
dec
and
pop
idiv
lods
jo
add
mov
cmp
ret
cmp
mov
je
js
mov
daa
add
pop
jne
mov
shrb
add
push
repz
outsl
je
add
pop
or
lret
sbb
nop
mov
test
out
xor
mov
or
and
fwait
jp
repz
push
hlt
psraw
xchg
push
stc
lret
imul
lahf
cmpsb
add
push
adc
out
sub
mov
imull
push
std
and
add
add
adc
fdivl
mov
mov
mov
jecxz
pop
jno
pop
cmp
out
test
xchg
shlb
pop
pop
les
aas
inc
lods
loopne
lret
jge
enter
mov
dec
sub
scas
imul
ffreep
imul
cmpsl
fstl
cmpsl
dec
cmp
mov
xor
mov
ret
xchg
enter
jne
das
fdivrl
add
stos
sarl
fists
mov
cmp
jne
pop
or
jne
push
adc
test
cmp
jnp
out
cmp
aaa
inc
test
xor
jbe,pn
stos
and
popa
cmp
bswap
into
scas
cmp
clc
mov
dec
cmc
mov
push
jns
mov
xor
dec
jp
dec
ja
ja
xchg
icebp
cmc
push
divb
out
adc
repnz
out
shll
mov
push
fdivs
cmp
add
jp
ret
and
ret
mov
inc
rcl
out
mov
ss
fadds
cli
dec
sub
cmp
fnstenv
imul
cmc
pop
jmp
mov
test
into
arpl
lcall
mov
add
mov
or
fs
jmp
mov
sub
and
fcmovbe
sbb
mov
fistpll
dec
xchg
add
sub
or
jmp
and
fmuls
jp
mov
pusha
test
ret
jmp
jge
ret
int
mov
sub
dec
or
repz
les
mov
xor
stos
push
cmp
inc
add
fisttps
push
out
aam
pop
sub
repnz
addr16
imul
lret
add
adc
mov
loopne
je
push
test
in
push
test
xchg
mov
in
push
dec
and
in
popa
fcoml
fcmovne
in
cmp
shll
push
lea
popf
out
pop
into
dec
mov
ja
mov
push
icebp
es
adc
nop
test
jae
aad
push
mov
rcrl
xor
dec
and
jp
outsl
rcll
xchg
testb
sbb
std
out
pop
les
js
lea
cmp
dec
xchg
add
je
dec
cli
jbe
ss
filds
adc
mov
or
test
cli
inc
push
lret
jns
lcall
sbb
in
rcrb
rcll
adc
adc
movsb
xor
and
fbld
shlb
pop
bound
sbb
pop
loopne
mov
or
popf
fnsave
jmp
es
imul
out
mov
jne
cmpsb
jg
adc
pop
idiv
add
pop
js
jae
rcrl
xlat
inc
negl
ljmp
push
jbe
scas
sbb
aaa
pop
call
and
pop
fiaddl
jb
lahf
cmp
loope
lods
mov
shll
jbe
push
loop
sub
fwait
sbb
add
jmp
inc
push
xchg
pop
adc
jl
lcall
push
fdivr
popf
xchg
push
mov
dec
out
xchg
sbb
sbb
xchg
aam
and
mov
rcrl
xor
pop
xlat
stos
jne
lcall
es
fsts
not
lret
loope
addr16
sub
mov
sahf
pop
arpl
push
movsb
xchg
leave
ljmp
clc
or
loop
add
js
scas
mov
push
jl
pop
jp
pop
out
sbb
divl
lret
cmp
ret
movsl
in
sbb
mov
into
and
pop
jecxz
mov
push
pop
dec
pop
push
and
cmp
or
pop
jge
and
mov
addb
mov
stos
imul
inc
xor
je,pn
test
popa
cmp
sbb
push
jb
fs
pop
cltd
rep
jno
xchg
mov
test
xchg
or
sub
mov
mov
jae
shlb
sub
das
push
jle
arpl
mov
icebp
add
jl
fwait
js
mov
andb
sub
xchg
jmp
add
sahf
sbb
fisubrs
sbb
test
stc
sbb
xchg
outsb
test
inc
addr16
mov
mov
inc
or
push
jp
fwait
aam
pusha
hlt
les
add
jne
clts
std
test
gs
xchg
xchg
mov
jnp
sbb
dec
ret
inc
sbb
jg
insl
insb
insl
xchg
rorb
push
fstpl
mov
inc
lods
xchg
out
add
lock
adc
enter
sti
aas
into
pop
addr16
lds
push
insb
dec
jmp
data16
dec
sahf
ret
jl
and
enter
sub
xchg
inc
dec
add
fldcw
push
repnz
fcomps
sbb
push
cmpsb
in
ret
xor
lahf
jecxz
cmpsb
push
test
jmp
jp
repz
lods
mov
call
bound
pushf
fwait
add
mov
daa
cmp
cmp
xor
push
rclb
scas
icebp
adc
mulb
dec
negb
mov
rcrl
lret
mov
je
mov
push
jecxz
sub
mov
in
into
adc
xor
or
addr16
and
dec
cmp
lods
scas
sbb
jmp
mov
jle
mov
adc
mov
insl
test
gs
sub
int
ffreep
movsl
test
add
cmp
xor
jp
xchg
xchg
dec
pop
pop
ret
inc
sbb
loope
ljmp
movsl
xor
cwtl
mov
idivl
add
push
in
int3
xlat
aad
xor
rep
movsl
fists
and
stos
insl
imul
and
push
test
loope
ljmp
ret
inc
popf
shrl
cli
pop
sub
jmpw
mov
push
out
jmp
xchg
sarl
scas
sbb
aaa
dec
orb
push
push
jg
push
mov
xor
insb
push
mov
adc
pop
nop
xor
lret
lods
test
mov
into
cld
lea
xor
mov
fdivrs
mov
add
mov
scas
fwait
jecxz
rorb
jmp
lock
fldenv
lcall
and
fldt
jbe
pop
int
gs
imul
jnp
mov
jb,pn
dec
mov
and
sbb
xchg
outsl
sub
pop
repnz
and
test
enter
dec
pusha
outsb
or
inc
pop
loopne
push
pop
daa
dec
cmp
leave
xor
cltd
inc
fsubs
inc
sbb
es
lea
cmp
pop
mov
cmp
and
sbb
sub
inc
xchg
mov
lea
outsl
mov
xchg
lret
out
scas
adc
or
cmp
pushl
mov
or
fdivl
cmp
dec
push
and
les
repz
cmp
ret
fcomps
sahf
leave
dec
xlat
imul
mov
push
testl
imul
decl
push
jae
xchg
data16
mov
adc
ja
test
cmpsl
and
shll
adc
es
clc
xchg
das
outsl
cmp
shrl
jmp
lahf
push
xor
mov
popf
outsb
gs
stos
aas
or
enter
add
insl
aaa
add
jno
cmp
adc
dec
movl
sbb
mov
pop
or
sbb
sbb
cmc
pop
and
popa
cmpsb
out
push
nop
mov
lcall
dec
sahf
mov
push
jle
mov
push
pop
out
jecxz
add
cmp
fsin
outsb
mov
xlat
jecxz
lret
idivl
imul
lcall
push
jl
or
adc
pop
addr16
inc
aaa
dec
fwait
push
inc
hlt
jle
inc
adcl
in
bound
sbb
or
iret
pop
jae
xor
mov
stos
std
into
xchg
sbb
sub
bound
mov
add
outsl
gs
inc
out
sbb
std
ret
sub
xor
push
sbb
mov
ss
cmp
xor
pop
scas
jmp
push
inc
jo
int
adc
int3
les
xlat
nop
cmp
or
push
sub
push
inc
pop
cld
pop
mov
xor
add
mov
test
cmpsl
pop
fptan
lds
jmp
dec
cmp
lds
popf
pop
pop
js
xchg
std
push
pop
mov
test
cld
xor
popa
cld
fdivrl
das
mov
shlb
ret
popa
xchg
sahf
push
ljmp
push
jl
pusha
in
in
leave
popa
mov
es
popf
sub
sub
xor
repz
insb
jmp
loop
inc
pop
fcomps
dec
jl
ret
push
mov
cmpsb
dec
mov
fucomp
mov
enter
cmp
mov
fstpl
ss
pop
pop
frstor
xchg
lahf
dec
jbe
in
mov
pop
or
lcall
sbb
mov
mov
div
mov
xchg
int3
test
shrb
pop
mov
test
mov
jo
test
ds
push
repz
and
mov
lahf
push
xor
shr
push
clc
push
xchg
clc
pop
fcoml
xchg
mov
pop
scas
pop
pop
out
popa
cmpsb
pop
push
fidivrl
adc
pop
ljmp
iret
call
mov
pop
mov
cld
add
adc
jnp
cmp
inc
mov
es
js
pop
or
imul
dec
fnstcw
je
in
add
test
imul
test
push
mov
ja
pop
dec
lahf
iret
inc
jmp
dec
mov
mov
xor
pop
cmp
jb
or
je
inc
je
and
push
xchg
xor
aad
testl
pop
jecxz
ret
inc
ja
sbb
int
nop
dec
dec
push
pushl
ret
fwait
inc
xor
or
imul
pop
xchg
je
cltd
inc
sti
or
into
imul
cli
cltd
pushf
dec
or
call
xor
jno
or
xchg
out
inc
add
jmp
or
fldt
hlt
pushf
das
insb
mov
imul
fidivs
enter
jbe
cs
push
mov
mov
stc
mov
mov
pavgb
pop
or
rcll
sub
test
xor
leave
pushf
xchg
or
gs
insl
outsl
or
xchg
clc
movsb
fistpll
or
sbb
std
xlat
sub
in
test
loopne
aas
xchg
push
mov
scas
mov
mov
mov
cmc
in
movsl
test
push
push
push
mov
into
push
add
pop
sbb
lds
shl
or
leave
sbb
mov
mov
push
add
fdivs
mov
push
scas
addr16
push
mov
jne
xchg
stc
orb
or
sti
mov
sbb
sub
lods
dec
rcrb
jae
sbb
sub
loopne
lea
mov
test
adc
sbb
sarl
outsl
xchg
fwait
xchg
jae
ds
iret
sub
jbe
push
cwtl
mov
in
fsubl
jl
ret
jae
in
mov
mov
inc
jmp
xchg
jb
ffreep
dec
repnz
mov
and
cmp
push
fnstenv
fiadds
je
and
outsb
fists
xor
stc
stos
jno
repz
pop
ficompl
das
pusha
dec
lds
lods
xorl
in
or
cs
xor
sbb
fwait
icebp
scas
fisubs
mov
add
pushf
loopne
sub
in
shll
dec
jp
add
lods
scas
lcall
mov
enter
sbb
cltd
pop
lret
jg
fimuls
data16
inc
sbb
enter
movsb
mov
aaa
sarb
mov
mov
int3
shlb
mov
cmpsb
sbb
push
out
sbb
dec
cmp
aam
rol
sub
jmp
mov
insl
out
pop
mov
and
sub
idivl
mov
jl
ret
into
xchg
xor
insl
loopne
fxtract
pusha
inc
out
xchg
imull
loopne
mov
pop
gs
adc
in
mov
xchg
jno
pop
pusha
fldt
jns
xchg
arpl
nop
push
sti
cld
mov
mov
inc
setnp
dec
push
adc
lods
daa
lret
or
pop
mov
inc
fdivrs
adc
inc
stc
loop
imul
adcb
pop
movsb
mov
adc
jl
pop
jp
inc
mov
mov
stc
lret
mov
test
xor
inc
sub
dec
popa
or
cmc
sub
testl
stc
pop
mov
movsb
addl
pop
push
push
nop
das
out
loope
mov
popf
push
xchg
xchg
push
fidivrs
bound
lret
mov
aaa
orb
in
ljmp
sub
out
adc
mov
aam
int
movsl
sbb
jns
pop
push
push
leave
ffree
xchg
pop
sbb
push
pop
xchg
push
idiv
xchg
fildll
nop
insl
pop
add
cli
xchg
inc
arpl
lock
lcall
mov
and
jne
test
xor
sub
xchg
mov
enter
scas
pop
aaa
scas
leave
jp
mov
mov
push
lods
fcomi
test
js
test
imul
mov
or
push
mov
add
in
sbb
dec
mov
lds
daa
push
mov
mov
dec
push
mov
imul
std
aas
clc
or
adc
dec
add
fdivrs
dec
mov
into
pop
jp
xor
jne
and
sbb
cmc
sahf
add
inc
pop
imull
sbb
xor
lods
scas
add
icebp
jo
sub
sub
cmpb
pop
pop
fcomip
adc
ss
cld
lahf
push
dec
cmp
ja
sti
cmp
mov
cli
xchg
and
loopne
push
loope
shll
push
insl
stc
je
mov
adc
inc
sub
leave
push
test
jae
mov
lods
xchg
sub
jp
lock
jae
movl
mov
lds
pop
ja
cmpsb
mov
pop
enter
hlt
gs
int3
dec
sub
and
pop
pop
pop
sarb
push
sahf
mov
cs
cmpsl
insl
pop
xor
imul
jno
pop
xor
rcrl
xor
push
fildll
dec
push
scas
xchg
fidivs
repnz
mov
mov
mov
imul
insl
fnstsw
mov
sub
gs
jl
dec
inc
pop
pusha
lea
shll
ss
cwtl
push
sahf
scas
fadd
cwtl
xlat
out
roll
xchg
mov
inc
imul
sti
push
rcll
data16
pusha
mov
and
jns
out
xchg
iret
pop
xchg
cld
pushf
fldenv
outsl
cmp
lock
add
and
ret
popw
xchg
xlat
or
jbe
aas
xor
mov
jp
icebp
sbb
lds
imul
cmpsl
ret
adc
mov
mov
or
xchg
xchg
or
or
xchg
das
pop
mov
or
adc
push
testb
popf
loop
or
data16
cmp
int
inc
insb
jbe
dec
push
in
outsl
xor
mov
in
lods
enter
icebp
mov
faddl
outsl
movsl
mov
add
addr16
imul
push
push
cwtl
sub
sub
aam
lcall
add
cli
iret
sub
xchg
jo
cmp
jle
dec
sub
push
loop
mov
adc
mov
lahf
jecxz
shlb
mov
adc
pop
add
loopne
push
inc
inc
mov
mov
xor
iret
and
pop
or
aas
scas
enter
add
push
and
je
sbb
push
dec
mov
lock
cmp
pushf
inc
xor
xchg
nop
jb
sub
out
lds
dec
mov
mov
jnp
dec
jb
test
into
inc
fildll
jbe
nop
xlat
rcrl
lahf
cwtl
pop
aam
loop
dec
rcrl
add
and
sbb
call
mov
fdivrp
jge
sbb
cmpsl
bound
stos
push
hlt
or
mov
les
inc
xchg
sub
mov
push
imul
ret
rcr
xor
inc
inc
xchg
push
cmpsb
cmpsb
bound
stc
cmpsl
adc
vmptrld
dec
jo
std
sub
xor
sti
mov
adc
lods
sub
shlb
mov
jns
aas
mov
lea
mov
sbb
idivb
push
xor
push
ss
lret
add
cmpsl
jo
pop
rclb
mov
dec
insl
lods
ljmp
movsl
cmpsl
sub
mov
mov
xor
jnp
jl
dec
sbb
inc
shr
mov
in
push
pop
xchg
lods
mov
jmp
mov
jp
or
jg
push
mov
cmpb
pop
and
fnstsw
xor
pop
jns
mov
loop
pop
push
xchg
cmp
and
in
into
lock
lods
mov
cmp
mov
jbe
jb
clc
inc
sub
xchg
aaa
sahf
add
lcall
les
xchg
sub
push
mov
fmul
loopne
in
imul
in
pop
loope
test
or
xor
pop
sub
sub
dec
repz
mov
adc
cmp
jp
jne
mov
in
ljmp
into
ror
int3
pop
and
incl
aas
pop
add
sahf
or
mov
enter
les
aad
sbb
pop
xchg
add
cmp
and
push
xchg
mov
shrl
jne
bound
shll
bswap
movsl
popf
adc
push
cltd
inc
mov
xor
ss
push
xchg
mov
outsl
movl
and
stc
add
inc
cli
xor
xor
loop
mov
cmpsl
push
lcall
cmp
clc
push
jecxz
mov
mov
mov
call
inc
add
jecxz
push
sbb
cld
imul
aad
mov
pxor
cld
mov
mov
stos
stos
jnp
mov
cmp
ret
movsb
insl
push
out
imul
call
add
xchg
std
push
and
and
mov
jmp
shrb
imul
pop
fcomps
fisubl
and
fnstenv
dec
subb
ja
xchg
inc
imul
cmp
lahf
aad
in
dec
scas
sbb
push
cmp
fs
cmp
leave
jno
fwait
popa
insl
jne
test
cs
sbbl
sbb
outsl
out
fwait
jmp
xchg
lods
call
nop
movsl
mov
das
jo
xchg
sub
sub
add
sbb
add
xchg
add
push
xchg
pop
iret
cld
in
jl
int
cmp
mov
jno
pop
mov
push
loopne
xchg
imul
mov
movsb
pop
inc
rcrb
pop
push
add
and
sub
popf
mov
jmp
push
pop
mov
movsl
scas
stos
pop
inc
aad
dec
sbb
adc
xor
adc
arpl
jae
out
lahf
stos
nop
jno
cmpsb
fmuls
mov
cmp
in
test
mov
pop
pop
xor
sbb
fs
push
cmp
es
mov
mov
lcall
fwait
xor
into
lret
pop
mov
inc
cmp
xchg
lock
movsl
outsb
lret
xchg
push
aas
sub
in
lea
xchg
xlat
push
jno
sub
imul
ret
bound
repz
out
or
dec
push
pop
lcall
push
jae
cwtl
int3
cmc
out
fidivs
or
push
cmp
lods
in
sarl
mov
bound
sbb
lret
mov
mov
mov
inc
nop
popa
cmp
cltd
sub
xor
loop
bound
movsb
sarb
jle
ljmp
jle
sbb
js
cmp
bound
and
mov
imul
lcall
lcall
cmp
jnp
xchg
mov
and
cmpsl
std
ljmp
fs
inc
je
in
lcall
lret
in
les
iret
push
loop
pop
cmp
push
jp
fdivl
or
or
aaa
mov
lods
out
and
mov
or
xor
addr16
inc
fisubs
push
cmp
inc
add
lret
adc
push
lods
xchg
andl
cwtl
out
mov
jne
push
ds
sti
loopne
lds
lahf
mov
pop
mov
sub
or
mov
pop
jecxz
dec
dec
and
push
scas
push
in
xor
adc
and
pop
jecxz
and
inc
fmull
add
mov
nop
push
addr16
imul
push
or
std
sub
dec
insb
xlat
gs
scas
mov
test
push
sbb
xchg
dec
mov
and
popa
or
dec
cmp
mov
mov
pop
pop
mov
andb
aad
lcall
roll
mov
adc
decb
adc
jo
mov
xor
out
adc
lret
mov
add
leave
daa
std
sbb
ljmp
popf
cmp
fisttpll
lret
mov
fiadds
adc
ficomps
mov
mov
sbb
jl
in
scas
das
add
dec
ret
data16
sbb
cmp
fmul
fidivl
negl
cmp
add
adc
repz
in
je
mov
in
mov
xchg
inc
fidivrs
pop
mov
jno
sub
leave
and
in
stos
pop
adc
jno
test
js
pop
pop
pop
repz
and
mov
dec
insl
jl
int
loopne
pop
cmp
cmpsb
rorl
and
enter
imul
sbb
rcll
or
add
ret
icebp
push
js
das
mov
bnd
push
in
loopne
inc
imul
stc
mov
pushf
and
mov
jl
cli
aaa
mov
out
test
mulb
cmpsl
outsl
movsl
push
mov
xorl
mov
xchg
test
add
cmc
pushf
adc
lds
popl
lahf
sub
iret
fistl
enter
repz
and
push
in
jae
or
insb
clc
jne
fnstenv
cmpl
leave
pop
inc
rcrb
cmp
sarb
in
jge
jge
shll
add
and
mov
mov
adc
lods
mov
addr16
fsubp
pop
xor
dec
pcmpeqb
mov
adc
nop
addr16
jecxz
push
pop
inc
daa
jle
leave
sbb
nop
dec
outsb
and
scas
insl
push
cltd
or
mov
cli
xor
pop
ss
idivb
jmp
in
xor
js
xor
out
icebp
mov
js
mov
fadds
push
shrl
outsl
pop
xchg
cmpsl
gs
sub
scas
pop
ljmp
rcll
adc
outsl
dec
test
sahf
add
or
jmp
mov
push
lock
and
shrb
mov
pop
xchg
mov
cmp
int3
out
mov
mov
lods
mov
dec
imul
repnz
andb
std
add
lods
scas
test
movsl
stc
repz
idivl
in
pop
ret
add
clc
push
pop
cwtl
add
mov
lret
cwtl
test
add
sti
xor
sahf
leave
or
lods
pusha
shl
stc
mov
out
push
outsb
sbb
mov
fs
ljmp
push
inc
pop
cs
adc
pusha
jne
sbb
leave
lahf
mov
ja
mov
jbe
je
loope
sub
cmpsl
bound
dec
jbe
jbe
xor
or
cwtl
jbe
nop
pop
stos
add
push
hlt
add
pop
daa
jbe
add
stos
inc
xchg
push
das
icebp
and
icebp
lahf
or
int
xor
addr16
push
push
int3
xor
lods
movsb
pushf
imull
mov
pop
mov
or
or
test
ret
out
out
and
xor
aaa
dec
rcrl
adc
xchg
mov
sahf
ret
js
rcl
mov
dec
add
lods
gs
fwait
pusha
fs
lahf
cli
gs
jnp
xlat
mov
jno
outsb
sbb
jb
cld
add
fcmove
sbbl
mov
das
cmp
ds
jl
lods
xlat
iret
add
insl
push
and
push
inc
jno
adcb
sbb
pop
jb
fldenv
adc
aam
jmp
fists
pop
adc
jmp
xchg
sub
xchg
sub
xchg
ja
pop
lret
adc
cmp
movb
cmp
jno
outsl
add
jecxz
test
scas
xor
fs
inc
add
dec
jp
or
shll
rorl
mov
mov
or
mov
test
popf
mov
push
jbe
clc
aas
out
pop
imul
lock
int
jbe
sub
push
sub
fldl
push
clc
jle
dec
test
shrb
leave
mov
dec
shll
fs
mov
ds
enter
dec
popf
ljmp
mov
adc
jl
dec
das
mov
pop
sub
jle
jnp
xor
mov
inc
and
jno
repz
arpl
fwait
adc
popf
sbb
cmp
stc
les
lret
out
mov
int3
jbe
mov
jns
inc
dec
das
andb
push
pop
mov
dec
lret
adc
in
sbb
mov
mov
ficomps
addr16
xchg
movsl
cmp
mov
sbb
dec
cs
stc
pop
int
pop
dec
hlt
add
out
popa
lea
or
iret
inc
mov
xchg
fidivs
add
sub
lea
pop
or
jno
push
scas
jg
adc
fiaddl
mov
loope
addb
jbe
in
adc
aaa
insb
cli
imulb
jo
dec
or
adc
imulb
adc
or
mov
call
scas
sbb
bound
stc
outsl
popf
jb
adcl
inc
daa
push
shl
mov
cmp
fs
or
jo
add
dec
adc
lds
mov
lods
pop
decb
jb,pt
in
ret
shll
jbe
sbb
aas
mov
inc
sub
pop
jns
and
fcmovbe
mov
mov
hlt
iret
cld
call
xor
inc
xor
adc
adcb
imul
movl
cmp
inc
xor
movsl
repz
lcall
cmp
daa
cmp
clc
pop
leave
out
cmp
and
mov
or
jae
aam
or
xor
sub
addr16
lods
pop
dec
inc
pop
sti
fildl
andl
add
ret
add
aam
lret
inc
lret
mov
mov
pop
ret
jp
cmc
xor
inc
mov
sbb
outsb
lret
lock
scas
test
push
xor
dec
fistl
shll
nop
or
adcl
mov
div
mov
lret
das
nop
call
mov
mov
xor
sahf
mov
arpl
test
mov
jp
dec
std
test
mov
sub
add
mov
lret
add
hlt
xchg
jmp
dec
fcmovb
xchg
adc
or
das
jbe
test
pop
nop
xor
add
mov
idiv
cld
adc
and
pusha
add
gs
out
loop
lret
jnp
pop
fadd
outsb
mov
sub
out
outsl
insb
orl
xchg
cmp
sbb
cld
push
mov
lret
xlat
mov
cmp
int
repnz
test
clts
iret
enter
dec
lret
shlb
cli
sti
sbb
mov
aad
mov
test
es
movsb
ret
cmp
or
jbe
enter
sub
nop
mov
repnz
xor
cmc
push
jae
je
aad
adc
pop
or
sahf
repnz
pop
sti
push
sub
xchg
jne
cmpsb
lock
inc
stos
push
ret
aam
inc
dec
inc
test
dec
scas
xchg
xchg
daa
push
mov
xor
sub
das
dec
iret
cmpsb
movsl
lods
divl
and
imul
insl
mov
mov
sbbb
jg
incl
fcompl
add
adcb
fwait
sbb
xor
adcb
aad
inc
gs
pop
int
leave
jbe
jmp
pusha
fstps
ljmp
rorl
aaa
sub
and
leave
sub
mov
jg
add
fmuls
lahf
adc
std
mov
popf
mov
push
pop
ret
loopne
fnsave
xor
icebp
and
sbb
lea
sub
std
scas
and
and
sahf
mov
int3
iret
mov
xchg
pop
fimuls
mov
cmc
jle,pt
mov
fs
push
lock
nop
mov
int3
gs
mov
dec
loop
mov
in
popa
lcall
jns
ret
jl
into
loopne
push
or
jmp
jae
push
fistpl
insb
stos
in
adc
xchg
std
mov
cld
and
pushf
dec
or
mov
lahf
andb
cwtl
mov
rcl
add
mov
in
inc
push
inc
and
mov
andl
sbb
mov
lods
cmp
fidivrs
shlb
popa
call
scas
fmull
or
sbb
xlat
jb
xor
jb
out
inc
mov
push
dec
mov
imul
inc
pusha
and
ss
add
popf
cmpsl
ljmp
dec
fldl
mov
paddusb
jno
mov
dec
mov
adc
pusha
mov
nop
xor
mov
imul
sbb
mov
gs
lea
popf
stc
jp
stc
pop
insl
cs
cmp
mov
push
std
fiaddl
dec
push
xchg
fdivrs
sub
jp
cmp
je
pop
ret
lret
cmpsl
test
mov
loop
mov
mov
sub
dec
pop
fcmovu
mul
inc
cmp
and
loop
and
inc
mov
fsts
ja
pop
and
shll
and
mov
insb
adc
ja
xor
es
lahf
jo
sub
cmc
orl
add
mov
inc
xor
rcll
jecxz
inc
sarl
inc
ss
aas
inc
inc
push
ffree
or
repz
cli
and
test
jo
mov
inc
popa
and
mov
mov
push
jecxz
cmp
push
xor
jg
or
or
adc
inc
jbe
cwtl
pop
je
movsl
pop
int
pusha
loope
jp
mov
shl
pop
dec
mov
cmc
cmpsl
pop
ljmp
mov
sti
xor
test
jg
cmp
insl
lods
out
outsb
jb
sbb
cmp
cmp
xor
mov
gs
mov
inc
dec
negb
lock
rcrb
loop
les
js
out
lock
scas
inc
loope
xor
fwait
pop
aaa
xlat
aam
outsl
or
cmpb
data16
cltd
imul
std
pop
dec
add
push
mov
stos
mov
test
cld
cmp
push
cmp
sub
cld
sub
push
adc
dec
pop
pop
push
popf
fs
sbb
stc
pop
sbb
adc
xor
mov
ja
dec
jle
sub
pop
inc
pushf
add
pop
popa
push
sub
test
inc
outsl
out
push
push
into
movsb
cmp
push
cmpsl
rclb
loop
arpl
jge
jo
cmp
sub
loope
cltd
and
js
push
xor
dec
inc
rcll
aad
xchg
scas
test
movl
sbb
je
shrl
dec
inc
lds
cmp
sub
repnz
mov
jae
mov
or
jns
adc
fidivrl
out
sub
outsl
lcall
or
cmpsb
jp
mov
mov
ret
test
call
mov
divl
xchg
fildll
in
flds
push
sbb
and
push
and
test
std
cmpsb
push
out
sbb
stos
imul
in
jnp
je
ljmp
mov
adc
dec
mov
inc
pusha
cmp
push
sbb
and
push
test
mov
frstor
int3
sub
stos
pop
fmull
frstor
aam
or
dec
jmp
mov
jno
cmp
cmp
inc
mov
xlat
jmp
add
test
push
lea
mov
add
xchg
pop
or
pop
inc
sahf
xchg
cmp
cwtl
mov
sbb
dec
cmp
daa
sbbl
push
popf
out
int
sub
nop
in
mov
mov
loop
insb
leave
mov
js
pushf
ja
or
adc
sarl
lcall
call
rcll
sub
je
nop
fsubrs
jne
test
and
xchg
mov
subl
push
jns
aas
movsl
pop
aam
inc
xchg
test
loope
or
mov
inc
lret
arpl
dec
fldenv
push
jmp
pop
add
mov
outsb
stos
adc
dec
sti
cmp
in
out
sbb
push
sub
xlat
sub
repz
sub
lcall
sub
ds
pop
orb
sbb
pop
jnp
cmp
mov
in
cmp
loope
push
mov
clc
mov
pop
or
fwait
dec
jmp
mov
or
xor
cli
fidivrl
ljmp
fnsave
adc
lods
ficoms
shl
sbb
pop
aaa
clc
rorl
mov
pop
loope
push
int
movb
ljmp
pop
fs
and
ljmp
loope
and
popa
fistps
aam
jle
or
imul
imul
andl
jbe
in
push
dec
ljmp
pop
fisubl
dec
imul
les
jg
fistpll
push
sub
scas
js
jmp
popa
inc
lret
stos
cmp
jo
fldenv
push
pushf
outsb
cmpsl
xchg
stos
insb
outsl
test
int
addr16
les
cmp
cwtl
cmp
pop
fbstp
push
push
lcall
enter
mov
adc
sbb
fwait
add
mov
or
pop
xchg
clc
xchg
ret
orl
in
jg
cwtl
sbb
sub
es
jmp
fdivp
in
fs
ss
imul
sahf
testl
jg
jbe
repz
cmpsb
lods
cmc
push
xor
cmp
paddd
push
lock
ljmp
jne
hlt
fistpl
movsl
pushl
or
daa
or
xchg
fildl
out
outsl
loop
lret
adc
adc
test
imul
dec
insl
stc
lds
loopne
cli
stc
jmp
int
adc
movsl
pop
idiv
stos
push
pusha
cltd
cmp
dec
aad
mov
mov
decl
adc
lahf
cmp
xor
push
mov
xchg
jbe
in
rcll
push
adc
add
jp
bound
push
xchg
dec
or
mov
pop
sbb
xchg
or
sahf
jmp
mov
insl
call
mov
ret
test
and
mov
adc
or
jp
out
add
shlb
cmp
jno
test
dec
add
lret
jo
repnz
xor
inc
inc
and
dec
add
nop
std
mov
ret
push
mov
add
xchg
fwait
mov
adc
adc
in
mov
or
repnz
fs
push
cmp
pop
es
add
push
and
dec
outsl
ret
mov
and
bound
xor
dec
out
mov
inc
scas
lock
jp
push
outsl
aaa
mov
cmpsb
and
imul
cmp
jae
xchg
xchg
jl
lea
add
fnstenv
inc
mov
sub
stos
jmp
loopne
out
lret
loop
sbb
mov
rcl
je
xchg
popf
dec
mov
sbb
mov
orl
adc
lahf
es
xor
fmull
addb
pop
cwtl
or
es
mov
or
andl
sbb
pop
mov
nop
dec
dec
rol
rcrb
pop
dec
out
push
fisubrs
mov
into
mov
pop
cmp
mov
mov
shrl
pop
cli
sub
popa
push
xchg
jmp
mov
icebp
enter
int
pop
xor
pop
inc
movsb
imul
xchg
stc
sbb
mov
or
les
subl
adc
out
jae
push
je
movsl
out
test
push
add
sub
cmp
mov
icebp
or
jl
inc
cmp
stos
std
into
or
or
cmp
pop
and
jecxz
jb
jae
jb
push
stos
cmp
mov
add
and
jecxz
aas
pop
cmp
in
sbb
mov
lods
jnp
pusha
push
sub
stc
pause
xor
xlat
aad
mov
fwait
dec
push
repz
push
or
cld
js
xchg
jmp
loope,pt
shr
int
filds
mov
jge
dec
sbb
scas
imul
mov
xor
push
pop
into
cmp
or
pusha
push
dec
out
gs
cmp
jle
dec
add
mov
ret
movsb
stc
ficoml
aaa
xlat
cmp
in
aas
mov
jae
stos
addb
into
and
les
cwtl
mov
lret
repz
hlt
hlt
fcmovnb
fcmovb
es
push
sbb
mov
push
aam
sub
mov
mov
or
popf
andb
push
sbb
mov
test
push
cmpsb
xchg
or
je
add
mov
fiaddl
outsl
pop
or
sahf
icebp
movsb
adc
mov
jle
xor
aas
test
mov
or
out
pushf
mov
call
popa
rolb
lds
arpl
int3
je
mov
fisubl
sub
out
pop
push
mov
cltd
add
std
dec
mov
adc
mov
aaa
fcoml
jno
pusha
repz
ljmp
into
add
je
pop
adc
xor
adc
jmp
mov
xchg
xlat
ficompl
mov
xchg
jb
jo
mov
int
xor
push
inc
xchg
and
nop
xchg
dec
sbb
les
mov
jle
add
pop
add
dec
adc
movsb
xchg
pop
les
push
xchg
lahf
je
xor
loopne
dec
xchg
jecxz
jns
sbb
dec
push
xchg
push
inc
mov
sbb
jae
hlt
test
add
xor
or
sti
leave
jmp
lea
jge
mov
xchg
ja
mov
pop
xchg
pop
lods
add
out
and
sub
sub
fiadds
std
es
hlt
orb
cmpsl
ret
test
aas
inc
inc
mov
imull
jbe
loop
jg
aam
dec
mov
incb
add
aad
repnz
ljmp
ficompl
leave
incl
push
jle
testb
dec
jne
cmp
and
jno
ret
scas
push
sbb
xrelease
xor
xor
jp
lds
imul
and
xchg
jns
or
stos
int3
mov
sbb
les
rcrl
mov
and
push
icebp
push
cld
pushf
dec
ficomps
scas
add
jns
push
and
xor
and
sub
loope
mov
pop
inc
and
fsubs
ja
mov
fs
bound
cmpb
sub
push
xchg
rcrl
aas
cli
scas
cmpsb
push
mov
dec
aam
icebp
or
cmpsl
mov
jl
lock
dec
inc
int
je
rcll
fdivs
jns
push
dec
shrb
pop
jl
mov
adcb
lea
je
dec
or
rorb
pop
ror
loopne
mov
dec
clc
jmp
cmp
aaa
sub
or
insl
iret
data16
out
mov
rcrb
enter
data16
adc
mov
mov
cli
bound
dec
and
lds
clc
mov
mov
lcall
mov
je,pt
jbe
sbb
mov
lock
sub
push
mov
fistl
sub
inc
clc
fimuls
mov
enter
inc
out
test
xor
lahf
daa
or
jns
std
push
sbb
inc
pop
fwait
cltd
jne
sbb
lods
and
jnp
mov
out
mov
mov
add
andl
sbb
in
mov
xorb
rcrl
sbb
or
lods
sbb
syscall
pop
xor
daa
aad
mov
pop
inc
sbbl
push
add
std
sahf
lahf
mov
inc
inc
fstl
mov
xchg
icebp
sbb
call
push
fcompl
mov
js
shlb
cs
fisubrl
int3
dec
dec
and
jo
adc
pop
jo
ds
mov
inc
fmull
inc
lcall
std
adc
test
push
and
stos
pop
mov
fisubrs
aam
cmp
pop
dec
sub
jno
xor
pop
adc
dec
push
lea
xchg
ret
push
or
mov
loope
pop
cmp
xchg
sub
jne
lock
or
insl
jecxz
sbb
sbb
sbb
and
lahf
mov
pushl
inc
inc
fsubrl
sbb
jnp
fisttpl
mov
pop
jne
sbb
or
pop
popf
ret
jp
xchg
std
leave
mov
xchg
pusha
iret
iret
dec
and
cli
lea
test
xchg
xchg
push
pop
jmp
dec
mov
adc
enter
aam
cmp
loopne
out
lods
mov
daa
mov
sub
mov
mov
adc
push
push
dec
pop
dec
test
inc
jno
lods
insl
andl
xchg
inc
or
popa
in
push
arpl
lds
xor
fdivrl
push
adc
jns
mov
add
cmpsb
pop
pop
test
push
imul
push
mov
loopne
sub
mov
arpl
aas
bound
das
stos
push
scas
dec
or
add
out
and
dec
enter
jecxz
push
rcr
enter
out
sub
loop
fwait
cltd
negl
sub
pusha
sbb
adc
dec
dec
fucomp
pop
pop
xor
pop
insb
test
popa
cld
sub
or
aas
push
or
imul
mov
add
fbld
call
or
mov
or
sti
aam
imul
inc
lcall
xchg
inc
cmp
cwtl
sahf
xchg
pop
cmp
mov
out
sub
shlb
lcall
js
loope
out
sub
call
test
jb
mov
adc
fcmovnu
adc
cmp
test
inc
inc
adc
scas
sbb
lcall
cmc
pushf
jnp
into
sbb
insb
add
or
inc
mov
lock
cmp
xorb
cltd
and
les
movsb
ret
mov
loop
fmul
or
lahf
adc
fnstcw
imul
cmp
pop
jno
push
aaa
xor
psllw
pop
jle
insb
or
add
dec
sub
cs
inc
sbb
ret
cmpsb
cld
adc
xchg
xchg
xchg
mov
call
and
mov
cmpsl
out
xchg
sbb
sub
push
dec
rol
pushf
cmpsb
nop
lods
dec
test
add
xchg
cld
clc
repnz
inc
jb
into
out
push
mov
or
dec
jl
jecxz
jne
daa
push
daa
stc
sbb
adc
mov
enter
push
jne
push
test
cmp
sarl
cwtl
mov
movsb
js
setae
push
jne
divb
or
push
sti
pop
lea
cmpsl
dec
loope
lods
cli
jmp
cmp
fstl
fistpll
adc
jg
push
lret
dec
mov
push
imul
jmp
mov
mov
dec
mov
aam
stos
or
inc
aam
cmp
push
pushf
push
inc
mov
sbb
fwait
ss
enter
mov
js
lahf
mov
cmp
inc
fsts
adc
test
xor
pop
ds
les
push
sub
in
sub
stos
cmp
sbb
fbld
jns
add
in
and
dec
out
pop
insl
in
inc
fdivs
jl
icebp
jle
push
and
adc
stc
out
lock
test
pushf
sbb
cmp
out
enter
repnz
faddp
sub
mov
inc
out
addr16
call
ja
cmpsl
movl
adc
test
pop
andb
sub
push
cmpsb
mov
mov
xchg
push
jo
test
xchg
cmpsb
pop
xchg
into
fwait
sahf
aas
mov
inc
dec
icebp
loope
mov
mov
adc
jmp
lock
cmpsl
pop
add
mov
push
pop
lds
ficompl
adc
lcall
xor
lcall
mov
cmp
scas
pop
jmp
or
lea
and
sub
pop
sub
scas
and
jecxz
cmc
mov
pusha
mov
add
or
pop
ss
fidivrl
stos
nop
int3
mov
push
inc
jno
mov
movsl
push
cmp
outsb
arpl
adc
jge
add
fldenv
cmp
push
movsb
movsl
insb
loope
out
je
inc
movb
test
xchg
je
aaa
add
pop
inc
sahf
ljmp
or
mov
sar
and
test
or
sbbl
sbb
loop
movsl
jmp
xor
or
and
cwtl
test
pop
mov
cwtl
in
movsb
push
inc
je
stos
orw
pop
sub
orl
xor
outsb
mov
cli
ja
enter
pop
pop
jle
jnp
inc
mov
aad
mov
and
xor
inc
add
add
push
loope
cmp
fimull
scas
pop
mov
ss
into
mov
icebp
repz
xor
fiadds
sti
mov
jb
repnz
pop
es
fmuls
lock
je
sub
fsubl
jge,pn
mov
cmp
dec
cmp
ret
push
adc
sub
loop
mov
icebp
ss
rcrl
pusha
repz
dec
test
pusha
xor
and
popf
fdivl
ljmp
inc
pop
xor
loope
aad
nop
inc
xchg
test
popa
mov
pop
mov
or
mov
fwait
js
pushf
push
sbbl
outsb
adc
xor
mov
cmpsb
and
push
add
rcr
rcrb
xor
lcall
or
xchg
xor
xchg
pop
pop
shlb
jo
and
hlt
call
dec
xor
popa
ljmp
jbe
aam
adc
leave
idivl
stos
push
and
imul
and
mov
movsb
pop
sbb
aas
mov
mov
jp
fcom
mov
ficomps
cmpsb
inc
fs
test
mov
cmpsl
in
jle
shr
xor
cmp
pop
or
int
add
mov
sti
fistpll
mov
sub
fdivrl
mov
filds
add
mov
mov
sbb
xor
lcall
lods
inc
mov
xchg
pop
les
ficoms
and
clc
dec
ret
in
cli
imul
sbb
mov
jge
pslld
pop
jge
jmp
jno
fsubs
add
mov
mov
rcll
addr16
hlt
inc
nop
or
adc
lahf
sub
adcl
hlt
lret
roll
fwait
xchg
fiadds
fdivr
and
pop
pop
mov
loop
sbb
add
jmp
and
sub
push
ds
push
pop
ret
insb
dec
sub
xor
adc
jmp
addb
sbb
in
scas
rdmsr
adc
mov
bound
inc
fwait
jbe
xor
jne
pop
pop
lods
and
xchg
xchg
or
repz
orl
cmpsl
shll
clc
mov
bound
call
cmp
fstl
inc
inc
clc
push
pop
xor
adc
test
mov
push
lret
push
and
stc
sub
adc
es
mov
xchg
in
xchg
lods
cmc
fistpl
mov
mov
aaa
adc
loopne
pop
sub
sbb
ljmp
mov
dec
popf
rol
pop
lret
test
es
sbbl
mov
pop
jmp
or
pop
inc
std
sarl
in
pop
inc
fisttpl
into
std
push
rcl
or
stos
loope
mov
mov
adc
xchg
stc
out
je
cmp
cmc
adc
push
mov
dec
iret
aas
lret
pop
neg
pop
jmp
pushf
jmp
std
lock
fs
xchg
push
xor
jo,pn
fnstsw
adc
ret
add
xchg
lea
inc
inc
push
and
leave
pop
mov
repz
dec
fsubl
jbe
insb
jbe
jle
cmp
pop
mov
repz
es
outsl
shl
mov
shll
push
cmc
inc
in
push
jl
pop
test
mov
lods
imul
and
rolb
repz
xor
dec
pop
jno
out
int3
push
push
jge
dec
call
sub
lods
test
sti
adc
mov
and
insb
jmp
mov
addr16
mov
pusha
lods
jp
push
arpl
sub
push
pop
mov
xchg
aas
int3
and
inc
add
xor
adc
aam
pop
pusha
and
jl
pop
inc
mov
cld
xchg
test
jmp
insl
sahf
xchg
xor
xchg
mov
sub
add
lods
jnp
lcall
mov
js
xchg
adc
stos
jmp
stos
mov
xchg
decb
mov
outsb
outsl
int
leave
xchg
push
mov
mov
addl
idivb
and
into
movsl
mov
fwait
mov
adc
cmp
sbb
fnstenv
adc
ljmp
xchg
fisttps
jg
je
dec
xor
sub
pop
stos
xor
enter
add
cmp
js
xchg
xchg
cmp
xchg
pop
xlat
andl
in
adc
adc
jle
enter
data16
push
cltd
push
pop
rorb
cmpsl
pop
mov
push
dec
jno
popa
add
jbe
pop
push
xchg
loop
idiv
xchg
dec
push
sbb
lods
popf
add
lds
dec
pop
ret
adc
pushf
or
in
mov
imul
pop
out
popa
sbb
mov
int3
jge
mov
sub
sti
aam
push
push
std
sbb
mov
xchg
and
cwtl
pop
sub
sbb
inc
push
ja
add
shll
rorl
sbbl
cwtl
je
leave
push
mov
cmp
popf
xlat
mov
rcrl
adc
int3
push
aaa
adc
scas
push
movsl
jae
cli
push
pop
cmp
mov
add
xchg
push
roll
push
arpl
jnp
repz
jno
mov
rcrb
sub
mov
pop
pop
dec
movsl
rcll
xchg
pop
cli
addr16
int3
scas
inc
mov
mov
xor
sbb
imul
je
jge
dec
mov
mov
mov
inc
cmp
or
pop
jno
aad
jo
mov
inc
outsl
xor
bound
inc
nop
jae
popa
jg
roll
or
and
cli
fmuls
mov
dec
sbb
inc
sarl
aam
sbb
fs
push
test
dec
adc
push
fisubrs
sbb
mov
mov
pop
outsb
dec
jmp
ret
jnp
mov
and
shl
xor
movsl
and
jl
sti
in
out
mov
mov
pop
cmpsb
inc
pop
sbb
ret
arpl
mull
pop
or
into
sub
dec
imull
pusha
lods
lcall
mov
sahf
test
pop
xor
mov
nop
outsl
mov
mov
adc
scas
xorl
add
and
cltd
lret
xchg
daa
fs
xchg
push
inc
hlt
inc
fucomp
fldl
mov
test
sti
xchg
sbb
and
sbb
fildl
fbld
dec
dec
ret
push
add
sub
mov
mov
out
push
inc
mov
xor
jle
mov
jl
dec
sub
jno
sub
pushf
or
pop
jno
aaa
bnd
add
jns
xchg
xlat
jno
cmpb
fucomip
sub
inc
sub
mov
and
xor
adc
roll
int
test
cmp
sub
sbb
shrb
dec
stc
mov
movsb
jnp
mov
sub
dec
jp
jne
repnz
out
jmp
or
cmc
fcomi
les
ss
loope
in
test
or
push
daa
fiaddl
mov
add
xor
int3
jp
dec
lds
aaa
je
insl
loope
ds
lahf
shl
or
fdiv
ret
cmp
shr
mov
sbbb
fucomp
addl
jbe
gs
cmp
leave
mov
jne
lahf
stos
mov
inc
roll
movsl
loop
mov
jge
pop
lahf
mov
mov
mov
push
icebp
sub
inc
xchg
insb
or
push
adc
inc
decl
clc
call
sbb
jnp
and
mov
fisttpl
mov
inc
in
addr16
and
add
in
or
lock
mov
rclb
lods
aam
sar
lea
or
mov
mov
insl
scas
xchg
arpl
jle
and
movsl
ret
scas
cld
sub
lea
inc
hlt
movsl
mov
mov
fnsave
mov
ret
jae
pop
fmuls
je
sub
add
jg
sbb
or
out
call
sahf
cli
dec
jnp
pushf
fnsave
test
add
stc
xchg
inc
pop
sbb
jbe
cltd
sbb
insb
sbb
mov
add
and
sbb
stos
shlb
lret
mov
leave
push
dec
dec
in
dec
lret
mov
push
add
leave
cwtl
pop
iret
in
xor
xchg
aad
mov
push
cmp
jle
rcl
jle
repnz
cs
popa
addb
cmpsl
aad
push
jb
adc
ss
and
shll
jns
push
pop
xchg
imul
rorl
loope
push
repz
loop
xchg
fwait
es
pop
fisubs
adc
add
adc
add
repnz
mov
mov
mov
mov
xchg
arpl
pop
sbb
pusha
inc
out
addl
add
roll
imul
mov
arpl
jnp
cmp
xchg
pop
jb
or
or
cmp
sbb
int
adc
arpl
mov
leave
adcb
push
mov
fisttpl
out
gs
mov
xchg
mov
xchg
push
pushf
fucomp
lret
sbb
adcl
mov
mov
inc
push
popa
inc
enter
das
xchg
jns
adc
outsb
data16
cld
popa
pop
shlb
or
rol
adc
std
gs
iret
cli
push
add
push
pop
cmc
push
cld
and
fcmovbe
mov
jg
les
cmpsb
int
fsubrp
std
notl
roll
lods
xor
mov
or
aam
insb
push
das
addr16
pop
rorl
sbb
insl
sub
xchg
testl
bound
and
mov
push
insl
xchg
or
and
dec
movntps
mov
call
push
mov
dec
sbb
lock
mov
pop
into
mov
stos
imul
sbb
iret
jne,pt
loop
fbstp
xlat
in
pcmpgtw
call
test
push
cmp
jmp
loope
adc
gs
mov
bound
inc
sbb
cmp
nop
cmp
sub
mov
mov
fisubrl
sub
cmp
pop
add
clc
jb
std
hlt
pusha
loope
push
and
mov
sbb
jbe
jae
mov
popf
cld
xchg
mov
cmpsb
negl
cmp
push
shlb
jg
jp
repnz
add
sti
fistps
mov
jb
popf
jmp
cmp
std
inc
ficoml
xor
fsubrp
and
fildl
mov
cmp
add
dec
fcomi
or
dec
cmp
push
mov
mov
call
pop
pop
movsb
dec
into
icebp
dec
mov
inc
cmp
inc
aaa
cmpsl
jge
mov
fs
je
out
push
js
ret
cli
push
adc
out
ljmp
cmc
pop
jecxz
adc
insb
push
ja
or
js
cltd
push
inc
data16
xchg
push
xor
pop
test
mov
inc
lret
jbe,pn
push
fwait
sub
in
rcll
inc
daa
outsl
sti
jae
cmpsl
dec
lret
push
pop
sub
adc
xor
scas
xor
jle
shlb
scas
pop
jl
adc
xor
cmp
rolb
aaa
jne
outsb
movsb
les
jmp
xchg
mov
pop
push
sub
pop
rcrb
fwait
bound
inc
fcompl
ljmp
movsb
mov
mov
mov
test
xor
out
ds
sub
jae
pop
jnp
xorb
xchg
filds
xchg
pusha
outsb
movsb
or
jge
out
mov
mov
dec
aaa
arpl
sub
pop
mov
mov
imul
enter
mov
scas
popf
mov
mov
xor
mov
gs
hlt
scas
insl
xchg
pop
testl
test
pop
aam
sbb
jnp
test
cwtl
mov
push
sub
pop
inc
sub
mov
push
adc
cs
push
inc
mul
jmp
sub
push
cmp
xchg
adc
mov
jns
push
pop
xor
push
lcall
ffreep
adc
popf
popa
mov
es
addl
or
sbb
and
jp
mov
fistps
vcomiss
icebp
jne
add
mov
adc
fucom
scas
int3
out
add
jbe
gs
push
inc
mov
out
cmpsb
and
pop
mov
push
xchg
sub
inc
filds
add
inc
ss
mov
cvtdq2pd
popf
or
fldl
mov
jp
or
fcmovnu
insl
mov
mov
jmp
jmp
mov
cmp
push
pop
fiadds
pushf
and
lods
cmp
mov
in
lcall
xor
mov
shlb
bswap
aad
ror
mulb
and
mov
and
loope
test
cltd
pop
mov
int3
lret
mov
cld
or
push
xchg
in
mov
jo
inc
test
add
movsl
push
push
ret
test
push
mov
mov
mov
cli
das
sub
xchg
xchg
fldcw
adcb
inc
fdivl
jns
jnp
xchg
orl
dec
loop
fistps
setne
push
and
insb
pop
fisubs
dec
push
pop
xchg
xchg
cmpsl
cmp
adcl
scas
gs
sbb
pop
xor
in
lods
xor
lods
sub
push
or
jns
xchg
imul
lar
fists
pop
pop
cltd
pop
sub
cmp
mov
fnstenv
scas
and
mov
sti
jle
stos
lret
adc
mov
xchg
or
jo
or
aas
cltd
pop
fsubp
bound
pop
lea
call
add
dec
mov
out
add
int3
out
shl
fbstp
xchg
lds
dec
push
cld
push
mov
fcmovnb
push
mov
js
nop
mov
mov
jae
fnsave
mov
aam
iret
out
mov
insb
insl
adc
add
and
je
or
xchg
xchg
cmp
fs
inc
lds
aam
pop
ret
inc
jno
sar
xorl
insl
push
push
sub
idivb
push
icebp
outsb
stc
push
scas
pop
je
xchg
push
roll
stos
xor
pop
xor
les
mov
cltd
addr16
fists
push
test
jne
roll
jle
jne
adcl
cli
lock
mov
ja
and
jo
xchg
mov
or
sbb
stos
xchg
fisttpll
js
out
sbb
sbb
aaa
mov
out
sub
cmp
lock
test
stc
jbe
clc
cli
adc
fadd
lcall
sub
lcall
and
cmp
push
test
add
out
test
push
mov
fwait
rorb
arpl
dec
std
push
mov
loope
pop
xchg
push
fisubrs
fsubrl
xor
ljmp
cli
xor
orb
fwait
cs
rorl
into
cmp
fsubl
jmp
test
mov
bound
pushf
fsubs
fsincos
push
push
movsl
cmp
pop
mov
jae
scas
lret
xchg
popf
imul
mov
iret
in
sub
ret
clc
mov
push
not
inc
xchg
movsl
push
lods
dec
mov
mov
cmc
push
push
lds
mov
popa
jb
mov
jmp
xchg
pop
ret
add
sbb
cltd
sbb
sbbl
lret
or
xchg
pop
or
inc
mov
mov
out
aam
scas
mov
adc
lods
sarl
dec
loop
inc
scas
jmp
add
shlb
pop
mov
xor
dec
fstpt
imul
sahf
dec
mov
ja
mov
cmpl
repz
mov
imulb
add
bound
ret
sbb
bound
shrb
inc
xor
les
cltd
das
mov
jb
sub
mov
sbb
mov
sbb
adc
xchg
mov
mov
loope
cwtl
jle
adc
add
sbb
adc
mov
push
pop
push
loope
mov
ss
int
cmpsl
or
outsl
push
or
sub
clc
popa
and
sbb
cmp
sbbb
mov
imul
gs
in
iret
inc
mov
cltd
testl
or
push
or
in
mov
fisttpll
add
adc
mov
test
inc
loop
das
in
pop
lock
int
inc
shrb
stc
mov
sbb
pushf
andb
adcl
pop
cltd
or
clc
pop
lahf
sbbl
test
outsl
dec
xor
mov
mov
cmp
add
xchg
push
cld
push
mov
dec
mov
cmp
rorb
push
mov
push
fsubrl
imul
mov
push
in
inc
orl
and
pop
dec
in
test
dec
xchg
mov
mov
outsl
lea
push
divb
xorl
lock
cmp
notl
mov
or
ss
out
mov
inc
fdivr
dec
addl
ja
aad
iret
imulb
fst
rclb
inc
jmp
add
mov
insb
jp
aad
fadd
rcr
mov
outsl
aam
adc
lahf
cmpsb
mov
jne
ss
mov
jbe
or
sub
cmp
je
cmp
pop
aam
aad
ja
in
data16
jge
mov
lds
add
addr16
mov
mov
cld
fildl
dec
and
lods
idivl
rolb
clc
cmp
call
jae
fwait
xchg
cltd
mov
mov
test
cwtl
or
dec
fdivrs
or
fs
lods
pop
fs
and
insl
cmc
jge
test
fadd
vphadduwd
mov
mov
pusha
and
lods
sub
cld
addr16
fisttps
les
sbb
sub
icebp
divb
xor
ret
outsl
xor
nop
rorb
sahf
hlt
jl
sbb
mov
push
shl
fists
rcll
push
call
xchg
in
ds
arpl
and
cmp
sbb
daa
faddl
aam
fwait
dec
and
xchg
clc
jg
add
dec
sbb
sti
cmpsb
sbb
jp
add
add
mov
jne
pop
and
rorl
xchg
sbb
lock
mov
jmp
sub
jae
neg
fmuls
sub
xor
add
ret
repz
rcr
out
out
or
push
xchg
push
hlt
and
push
xchg
jecxz
ja
xchg
mov
xchg
and
cmp
pushf
ja
arpl
call
fwait
insl
adc
aam
divl
add
push
pop
dec
aas
testl
dec
xchg
or
shl
int
add
in
cmpsb
add
sbb
lahf
jbe
dec
add
fistl
loope
or
iret
sbb
mov
cmpsl
and
fs
fcoml
xchg
pop
test
sbb
and
push
fsubr
cmc
movsl
jae
cltd
notb
mov
shl
pushf
mov
adc
pop
push
or
add
mov
mov
bound
mov
adc
or
adc
sahf
push
js
stos
lcall
sub
or
ret
mov
inc
push
mov
lods
enter
xor
pushf
out
jns
push
cwtl
dec
jbe
aas
les
bound
in
mov
jp
push
mov
dec
std
xor
dec
ja
lods
out
fists
addr16
mov
outsl
data16
addl
xchg
dec
xor
and
cmp
adc
xchg
jg
jbe
shrb
cmp
out
pop
adc
xlat
pop
into
fwait
loopne
js
add
inc
test
test
loop
sbb
inc
cmp
cmp
and
fdiv
imul
aam
repnz
dec
dec
inc
loop
xor
sbb
cmp
add
pop
mov
jnp
mov
fisubrs
iret
or
push
sub
fcoms
cmc
and
xchg
in
pop
sub
adc
cld
pop
fprem1
int3
test
and
out
mov
scas
adc
push
ret
scas
call
and
popf
xchg
xor
std
jo
fsubrs
hlt
mov
and
dec
xchg
sbb
in
add
add
fnsave
sub
push
push
add
pushf
adc
sahf
cmpsb
cli
xchg
call
sub
xlat
mov
jne
sti
cmp
pop
jb
sbb
xchg
push
or
lds
inc
pop
cli
aaa
pushf
mov
enter
fidivrs
scas
movsb
mov
ret
pop
leave
or
std
test
outsb
pushf
icebp
test
pop
xor
lret
cmp
push
lret
mov
insb
aam
test
mov
aaa
jae
lock
lahf
popa
ljmp
jae
and
dec
dec
xchg
out
xchg
mov
jb
dec
jmp
pusha
dec
jb
sbb
xchg
sub
pushf
push
cmpsl
ret
rcll
nop
stos
idivl
ds
lret
fwait
in
cwtl
mov
inc
pop
sbb
clc
out
sbb
mov
call
ds
out
push
test
mov
loope
pop
cwtl
mov
mov
mov
fwait
push
dec
mov
jno
jne
or
inc
fdivs
sahf
pop
mov
fiaddl
jg
leave
std
mov
and
jno
hlt
popf
inc
jns
movsb
pop
ds
inc
mov
bound
lock
adc
mov
fsub
nop
and
push
hlt
sbb
aaa
gs
sub
sbb
stos
pop
leave
pushf
sub
sub
or
mov
cmp
dec
rcrb
jne
ljmp
jbe
cmp
lea
cmp
inc
das
int3
add
jno
mov
lock
sub
lahf
inc
imul
push
out
jbe
pop
pusha
push
mov
push
cmp
incl
jae
add
xchg
ljmp
jne
jp
fmul
sti
adc
std
fmuls
jge
cmp
cli
stc
test
ljmp
mov
xor
sahf
stc
ljmp
pop
test
loopne
lahf
les
stc
std
mov
add
sbb
cltd
mov
pop
and
pop
bound
cwtl
filds
ss
shrb
inc
sub
cmpsl
adc
mov
pop
inc
jg
push
loop
mov
xchg
aas
repnz
scas
out
pop
push
aas
lods
js
pop
and
sbb
and
imul
lods
lea
adc
movsl
xor
rolb
adc
jecxz
lods
add
push
push
jle
cmp
test
movsb
xor
fidivs
fisttpl
in
inc
repz
xlat
cmpsb
dec
cld
xchg
hlt
ja
mov
subl
pop
dec
push
mov
xor
sbb
or
imul
lods
iret
push
adc
orb
mov
pop
add
ja
sbb
xchg
and
imul
sbb
xor
movl
outsb
xlat
in
add
and
mov
pop
xor
inc
mov
push
mov
cmpsb
dec
out
aaa
in
loopne
xchg
push
xchg
mov
int
into
dec
push
sbb
or
gs
adc
ret
pushf
cmpsl
push
enter
cltd
rcrl
xlat
push
add
cwtl
aas
pop
adc
cmpsb
mov
lcall
inc
and
fdivrs
fwait
pop
js
add
mov
gs
lds
lods
repz
xchg
push
mov
mov
xor
nop
fwait
cmp
add
bound
repnz
mov
pop
or
dec
icebp
test
int3
and
test
adc
daa
xchg
scas
insl
add
shrb
pop
sbb
push
mov
dec
in
sub
mov
or
fdivrp
aas
sti
jns
dec
lock
xchg
adc
xor
scas
jae
pop
adc
adc
iret
and
hlt
lret
pop
push
sbb
add
push
mov
lods
in
push
mov
xchg
pop
and
leave
push
ret
cwtl
pop
add
hlt
cli
xchg
push
fcmovnbe
jecxz
push
lret
mov
xor
mov
cmc
ret
stos
or
lods
cmp
jae
cmp
mov
rcrb
insb
and
shll
scas
out
jmp
xchg
xor
jae
xor
vpinsrw
sub
inc
dec
sub
pop
lds
imul
and
test
jbe
fcoml
in
xlat
shlb
pop
cmc
bound
in
mov
sub
mov
imul
dec
js
sbb
push
fs
in
outsb
mov
call
stc
pop
pop
movsb
dec
rcl
enter
test
jle
mov
xor
push
push
fmull
scas
jne
in
push
lret
popa
orl
pop
mov
jge
jo
xchg
out
xchg
fdivr
push
inc
ljmp
subb
and
jae
insb
mov
nop
push
push
xor
add
and
lret
lds
mov
sahf
popl
outsb
jge
js
cmp
lods
add
mov
lcall
xor
mov
adc
icebp
xor
and
sbb
std
or
cli
pop
aad
insl
std
cmp
mov
xchg
negl
idivl
adcl
nop
decb
pop
in
add
xchg
sbb
ret
push
dec
mov
push
sbb
in
stos
mov
mov
insb
leave
test
in
xlat
xchg
pop
imul
lret
test
xor
adc
xor
xor
loop
sti
dec
pop
and
sub
xor
dec
inc
or
fcmovbe
push
jmp
push
inc
fs
mov
dec
movsb
mov
xor
pop
loop
mov
cmp
mov
jmp
nop
call
scas
or
push
mov
inc
mov
sub
mov
add
cld
jb
shrb
cmp
std
xchg
sub
sub
inc
loope
std
out
sub
fs
test
push
es
iret
mov
pop
and
push
pop
xor
mov
loope
in
aas
sbbb
sti
fs
std
sahf
dec
cs
jae
push
add
xchg
lea
addl
jo
xor
inc
sbb
sub
insl
cmp
inc
ljmp
mov
dec
dec
lea
adcl
aas
or
push
dec
subl
jnp
cld
ret
andl
insl
sbb
ja
and
push
sub
xchg
push
dec
addr16
out
out
pop
mov
or
xlat
xchg
sub
mov
lcall
sbb
and
cld
or
jno
hlt
mov
mov
fsubl
movsb
pop
cmp
into
mov
int3
jnp
and
insl
add
sub
pop
mov
push
dec
inc
sub
out
test
cmp
adc
inc
shlb
xor
dec
int
or
xlat
fisubrl
outsb
inc
jmp
fwait
sti
and
aas
leave
lods
xchg
jae
fwait
adc
in
call
cmc
push
mov
mov
loope
shll
mov
in
and
mov
or
ljmp
push
dec
adc
aaa
mov
sbb
pop
int3
fcoms
rolb
mov
push
sbb
aad
scas
jo
imulb
ret
xchg
lea
push
or
xor
cmp
jns
dec
and
popf
pop
pop
repnz
insb
jnp
lret
repz
jno
pop
in
push
in
adcb
xlat
out
mov
cmpsl
adcl
popa
xor
out
enter
out
stc
xor
sub
mov
jns
pushf
pushl
scas
or
jno
movsl
push
sti
add
sub
and
pop
inc
xchg
enter
sbb
popf
cmpsl
push
mov
xchg
xchg
xchg
out
jmp
lea
adc
xor
ret
and
dec
mov
inc
pop
cmp
mov
xchg
fsubrl
call
out
lea
ficoms
xchg
clc
shlb
add
xchg
sub
dec
sarb
dec
iret
jmp
dec
insb
in
dec
dec
cmc
xor
mov
jnp
mov
loopne
adc
test
fsubrp
xchg
lret
negb
popa
sbbw
movsl
fldl
pop
ret
or
jns
jb
and
out
out
xchg
push
pusha
test
scas
movsb
shll
hlt
mov
jecxz
push
inc
loopne
sbb
jnp
lret
in
or
sub
xor
lea
or
clc
loope
and
sub
mov
cmpsl
les
xchg
jne
pop
mov
dec
jmp
sub
stos
loope
cmp
push
xchg
jnp
hlt
jno
js
movsl
clc
fdivrp
lods
movl
xchg
pop
inc
aas
loopne
addr16
aaa
mov
je
add
jmp
mov
push
and
test
xchg
pop
call
mov
mov
inc
push
stc
addr16
jge
jnp
mov
mov
push
lods
imul
aaa
icebp
push
bound
or
push
push
mov
dec
cwtl
add
aam
xlat
lods
mov
push
push
add
lea
stos
popa
fstpl
mov
jle
rorl
stos
mov
leave
cmp
repnz
mov
imul
dec
push
cwtl
lds
dec
fstpt
in
inc
cwtl
mov
or
cmp
adc
fisubrs
pop
cs
dec
pop
shl
arpl
adcb
pop
pop
jp
std
imul
push
pop
inc
inc
in
mov
and
mov
mov
outsb
mov
adc
mov
cwtl
hlt
add
icebp
js
testl
dec
roll
xor
insb
cmp
mov
jmp
cmpsb
lea
adcl
dec
push
fadd
inc
cmp
sahf
jbe
shrl
push
insb
xor
lahf
sub
movsl
loopne
cs
mov
push
or
add
lods
push
sub
scas
add
lcall
inc
mov
jg
sbb
sti
push
rol
sti
mov
sbb
rcr
hlt
push
loope
rolb
lret
mov
sub
pop
pop
addl
push
mov
pop
and
mov
dec
sti
pop
orl
pop
jmp
es
inc
add
xchg
pop
cmc
pushf
pop
out
xchg
addb
outsb
add
fs
sub
and
scas
xchg
sub
push
jmp
pop
push
popl
in
inc
push
hlt
adcb
cmpsl
mov
pop
iret
inc
xor
rcrb
mov
jbe
iret
les
xor
sarb
sbb
fistl
and
rclb
fldt
xchg
add
movsb
jle
mov
inc
aaa
push
scas
mov
insl
test
xchg
mov
shrl
rcrl
je
mov
push
ljmp
inc
xchg
xchg
xor
repnz
fwait
repnz
cld
ljmp
pop
mov
mov
inc
pop
setno
loop
lods
addb
inc
in
stos
add
pop
andb
inc
and
push
push
fwait
inc
jno
cmpsl
mulb
xor
insl
hlt
dec
addb
cmp
outsb
out
pop
sub
dec
dec
popa
mov
arpl
add
sub
or
cmc
stc
sti
pop
outsb
addr16
imul
ret
cmpsl
out
mov
pop
adc
xchg
adc
mov
cmp
add
cmpl
mov
jb
rorl
popa
sarb
pop
dec
inc
mov
mov
jbe
addr16
lods
rcll
mov
or
fwait
mov
adc
and
xchg
gs
mov
add
or
fldt
sbb
movb
test
cmpsl
stos
inc
int
push
jl
sub
movw
pop
mov
pop
jge
mov
lea
push
aad
and
lahf
jecxz
cld
cmp
fs
push
test
xchg
push
fidivl
mov
jae
jnp
add
jb
outsb
imul
or
fwait
aas
add
cmp
dec
idivb
jle
jle
shlb
cwtl
adc
ret
aaa
sahf
sbb
jge
pusha
jns
inc
sbb
adc
xor
les
inc
mov
sbb
mov
hlt
in
movsb
or
ljmp
inc
jecxz
xor
orb
das
inc
pop
xor
stos
fcom
adc
xchg
fcoml
cs
push
shrb
ds
es
xchg
mov
imulb
mov
lods
xchg
addr16
adcb
fadds
push
orl
push
aam
mov
adc
push
das
icebp
dec
repz
in
sub
inc
fisttpl
or
cmp
xchg
imul
mov
stos
and
data16
sbb
es
cmp
subl
cld
test
push
repnz
inc
sub
fnsave
fiaddl
call
dec
sarl
int3
sub
fmul
loope
cmp
xchg
std
cmpsl
cmp
sub
mov
jbe
adc
cmp
ja
std
sbb
mov
test
imul
int
xchg
stos
daa
cmc
test
xor
mov
je
inc
mov
mov
mov
mov
jns
adc
stc
imul
lcall
inc
dec
loopne
gs
gs
stc
adc
pop
dec
mov
xchg
jb
cmp
inc
pop
or
jbe
add
in
add
les
jp
mov
mov
jecxz
std
imul
xor
push
pop
stos
mov
jb
cmpsb
jl
decl
jnp
in
fsubrs
insb
pop
sbb
or
mov
lret
iret
out
rcrb
push
dec
sbb
mov
stos
inc
sti
push
adc
and
mov
push
test
pusha
xchg
inc
inc
cmp
adc
daa
adc
leave
sub
inc
imul
orb
mov
iret
fnstenv
dec
push
jnp
push
sub
add
add
leave
pop
test
push
movsb
jl
loop
out
hlt
fmuls
dec
ret
out
cmp
lods
push
jnp
shll
push
fsub
push
dec
adc
scas
xchg
push
popa
ret
mov
sbb
es
push
movb
inc
rcrl
dec
cli
mov
pop
divb
mov
push
je
lahf
inc
xor
mov
imul
sbb
fdiv
arpl
ja
fldenv
sbb
cmpb
push
jae
fbstp
inc
mov
dec
adcl
orl
jne
jo
scas
pop
outsb
lcall
xor
js
cmpsb
into
dec
and
mov
movb
cld
mov
adc
imul
in
fdivrl
aaa
jp
xorb
sub
ss
mov
xchg
mov
inc
xchg
mov
cmp
shll
xchg
lcall
insb
add
add
sub
shlb
cmp
shrl
add
dec
std
std
out
lds
daa
jg
andb
test
sti
xchg
mov
pop
scas
rcll
pop
testl
dec
xor
cld
test
mov
rorl
jge
fdivrl
inc
sahf
repz
out
jmp
push
xor
cld
push
push
add
bound
pusha
or
push
dec
mull
and
fldcw
fdivrl
decb
ljmp
pop
push
mov
aad
inc
jmp
test
shrb
adc
cld
mov
jmp
ss
adc
mov
stos
pop
push
shrl
xchg
or
jecxz
lret
jge
fisubrl
int
xchg
pop
hlt
aaa
push
subl
jo
aaa
jl
mov
sbb
out
in
adc
scas
mov
xlat
jmp
pushf
mov
bound
lods
lock
add
xchg
test
pop
pushf
leave
pop
test
add
push
sub
xchg
adc
leave
test
add
xchg
jo
adc
mulb
mov
popf
fldt
and
pusha
xor
mov
inc
mov
jno
inc
push
mov
pop
ljmp
je
ret
enter
push
mov
jno
sub
ret
pop
or
jbe
dec
cmpsl
insl
or
add
cmp
cmp
pop
cs
jb
inc
jle
push
cmp
push
dec
pusha
rorl
insb
add
mov
lds
pop
bound
push
andl
mov
hlt
ficompl
stos
xchg
sbbb
rorl
mov
mov
inc
add
and
cld
pop
mov
js
push
dec
and
pop
in
mov
and
int
iret
ss
ret
test
mov
mov
ret
lods
rorl
in
popa
in
test
sarl
mov
jns
fsub
lret
aam
push
pop
push
aas
add
or
push
push
inc
mov
add
rcrl
add
das
out
loop
out
test
jne
lods
in
sbb
int
pop
testb
xor
dec
mov
and
adcb
push
call
out
add
and
cmpl
pop
sahf
push
fimuls
jno
sbb
or
roll
mov
inc
test
xchg
or
popf
lcall
sub
fsts
mov
orl
or
jge
test
xchg
out
cmp
iret
shlb
push
adc
or
fdivl
push
dec
add
mov
mov
sub
push
push
add
inc
pushf
mov
mov
scas
and
lds
leave
cmp
pop
ret
xlat
mov
mov
or
push
insl
adc
cli
sub
pop
xlat
cs
cmp
xchg
loopne
push
add
mov
dec
xor
jge
jecxz
cmp
xor
inc
ljmp
mov
xor
pop
les
idivl
out
cmp
and
push
sarl
pop
clc
out
mov
pop
mov
mov
dec
movsl
in
faddl
sti
movsb
div
test
inc
and
aaa
inc
enter
insl
lcall
xchg
xchg
jmp
ljmp
push
sub
adc
push
xorb
into
les
xchg
and
les
insl
push
iret
flds
and
mov
jg
jbe
xchg
push
test
adc
rolb
sbb
xchg
xor
mov
lcall
das
jns
dec
fidivrl
jecxz
jno
pusha
mov
lret
imul
push
pop
push
dec
inc
int
call
push
enter
cmp
enter
jmp
fstpl
pop
iret
jne
mov
sub
mov
out
cmpsb
lods
mov
sti
inc
fistps
add
adc
jl
and
ret
flds
and
lcall
jg
cwtl
mov
mov
es
fistpll
jmp
inc
adc
mov
mov
xlat
adc
mov
pop
mov
cmp
in
cmp
pop
mov
adc
sbb
jb
sahf
cli
push
and
rorl
pop
int
mov
jg
jle
in
cmpsl
push
push
jbe
lock
jb
jbe
or
aas
call
sahf
lds
jecxz
inc
imul
lock
enter
std
inc
xchg
mov
arpl
xchg
adc
push
pop
ficomps
mov
xor
repnz
add
sbb
jecxz
add
dec
pop
andl
cmp
fiaddl
mov
mov
out
mov
add
or
mov
xor
mov
enter
in
sub
mov
inc
movsl
bound
sbb
arpl
std
pop
and
leave
adc
lret
scas
andl
sbb
sbb
repnz
adc
push
call
sbb
push
ficoml
inc
xor
imul
stc
or
push
cmp
lret
sarb
test
int
and
jae
pop
xchg
sbb
jne
movb
movsl
pop
cmp
mov
and
popf
dec
mov
mov
cmc
outsb
js
cwtl
mov
into
or
pop
mov
pop
imul
mov
xlat
adc
jne
xor
cmp
jnp
push
dec
jb
xchg
movsl
jmp
cmpsl
and
sub
stc
mov
pop
in
mov
insb
push
pop
data16
ds
int
adc
sbb
ret
mov
ja
mov
xchg
ror
aaa
jns
popf
das
sub
test
push
xchg
sub
cwtl
arpl
adc
inc
pop
sbb
and
mov
dec
mov
add
jp
xor
test
je
test
pop
sub
add
mov
xchg
rolb
and
inc
inc
imul
movsb
jmp
lcall
push
adc
es
xor
dec
cmp
aad
jp
jp
jb
js,pt
pop
mov
rcrl
inc
cmp
sub
shr
jmp
in
pushl
add
adcb
popf
inc
dec
push
jbe
sbb
xor
test
sub
loop
dec
test
out
iret
dec
sbb
imul
repnz
dec
mov
jle
adc
pop
pop
enter
sub
cwtl
loope
sbb
cmp
sbb
fisttpll
mov
fldl
sbb
add
jl
mov
jl
mov
add
mov
jmp
push
dec
cmp
cmp
fistl
mov
insb
pop
leave
addl
cmpsl
fstpl
bound
popa
push
leave
jg
fdivr
or
arpl
inc
in
mov
push
inc
cmpb
addb
mov
xchg
xchg
adc
xchg
dec
ljmp
arpl
int3
cwtl
movsb
dec
pusha
movsl
enter
gs
mov
es
mov
jbe
repnz
sarl
add
jg
test
sub
xchg
loopne
mov
pusha
aam
hlt
repnz
icebp
sarb
xor
lret
insl
stc
mov
stos
and
mov
cmpl
aam
pop
into
mov
sub
push
push
dec
pop
out
adc
pop
cmpsb
jp
enter
mov
repnz
mov
in
sub
dec
adc
mov
push
test
jle
hlt
dec
adc
xor
mov
pop
xlat
push
fsubs
inc
jbe
mov
cmp
les
fdiv
mull
and
inc
xor
jns
push
push
test
mov
pop
mov
mov
lcall
sub
test
lods
bound
sub
aas
int
dec
fsubrl
lcall
push
in
mov
adc
inc
seta
xchg
jbe
stc
jnp
pop
in
push
push
flds
fwait
xchg
jecxz
std
mov
cmp
js
in
out
lretw
push
push
mov
and
in
or
leave
pusha
addr16
ror
stc
clc
inc
out
mov
jp
cmp
in
pop
adc
dec
hlt
xor
mov
js
add
test
in
jge
add
insl
into
test
jg
lea
daa
mov
sti
pushf
add
push
shrl
loop
mov
clc
lods
pop
out
out
call
jbe
icebp
fisubrl
jb
jg
gs
jge
xor
push
xchg
push
pop
out
insb
in
xlat
fmull
insl
subb
negl
mov
lds
inc
cmp
out
cmp
and
adc
mov
and
lea
xchg
popa
and
into
dec
push
lret
mov
insl
jns
filds
hlt
test
je
rclb
lret
into
test
jle
dec
rcrl
mov
dec
mov
iret
xchg
dec
push
mov
pop
xchg
repnz
inc
cwtl
rcrl
fstpl
add
das
push
js
int3
push
sbb
sahf
icebp
aaa
div
push
int3
stos
les
pop
loopne
and
jb
imul
sti
or
mov
adc
jbe
jg
xor
xchg
addl
cmc
insl
into
pop
shrb
sub
in
mov
das
push
lds
add
std
jno
sub
rcr
mov
add
loopne
pusha
fs
add
inc
push
xchg
jae
sub
in
fsub
mov
insl
bound
jb
mov
test
lcall
sub
or
push
repnz
stos
pop
pop
mul
jp
shrl
call
dec
loope
xor
xor
xchg
sub
mov
jns
cmpsb
and
repz
fs
xchg
addl
bswap
mov
push
lahf
xor
scas
mov
shlb
aad
inc
jmp
xor
and
cmpsl
push
mov
sub
insb
sub
out
add
or
mov
mov
cld
pop
js
inc
sbb
xor
shrl
and
jo
pop
fidivrl
pop
fistpl
mov
xor
in
rol
or
cwtl
popa
cmpsl
fcompl
imul
push
je
or
loop
fnstenv
jecxz
popa
shlb
fildl
rorb
xchg
aaa
seto
out
mov
push
pop
mov
mov
mov
jnp
jmp
mov
outsl
xchg
mov
push
insb
aam
cmp
xchg
xor
push
push
cmp
mov
cmp
bound
or
test
push
dec
loop
lods
or
xchg
xor
fwait
cwtl
mov
push
decb
adc
lods
test
cmp
in
dec
int
mov
push
pop
inc
fs
in
je
frstor
jle
enter
xchg
std
ljmp
inc
jae
popf
xor
sbb
lahf
in
in
pop
repnz
shlb
and
orb
sbb
xor
repnz
test
jno
jmp
mov
or
add
lock
pop
fs
pop
pop
pop
sub
imul
sbb
test
test
pop
lahf
sbb
mov
mov
inc
js
jno
call
mov
dec
sbb
sbb
inc
inc
inc
and
dec
inc
pop
in
push
jmp
adc
mov
cmp
das
xorb
push
mov
lds
push
loope
pushl
hlt
cmp
xchg
inc
aas
or
jl
or
xor
jb
insb
cs
pop
xchg
and
jne
lods
imul
ret
lock
mov
xchg
cmpsb
push
jbe
jmp
sbb
pop
ljmp
push
ret
addr16
enter
inc
cltd
in
subl
inc
push
pop
sahf
imul
out
lds
adc
jnp
add
cld
ds
and
dec
or
pushf
push
daa
jge
popf
daa
loope
xor
lahf
outsl
das
mov
lods
sbb
les
add
push
adc
les
les
ja
pop
rcll
lahf
mov
push
xchg
std
js
shll
mov
loope
jl
data16
js
out
or
mov
mov
movsb
push
daa
lds
aas
adc
add
sub
xchg
push
das
mov
cmp
mov
negl
lds
jb
je
and
or
fs
inc
femms
push
pop
lret
sub
imul
loopne
test
fs
loop
fsubrl
xor
jae
fcoms
jno
sub
fucom
push
cwtl
addb
dec
divl
mov
jne
jmp
pop
pusha
stos
cmp
rolb
fimuls
push
adc
cmp
jecxz
xlat
adc
test
pop
jp
sbb
mov
adc
or
leave
outsl
out
adc
xchg
xchg
mov
xor
in
dec
inc
xlat
xchg
hlt
xor
fwait
mov
push
scas
push
test
out
test
int3
or
fcoms
mov
xchg
sbb
js
out
pop
in
sarl
adc
iret
cmp
cmp
inc
bound
and
sarl
jno
arpl
js
scas
dec
sub
popf
rcr
mov
push
insl
movsb
adc
scas
jle
lds
push
pop
jmp
add
sbb
push
push
fs
clc
xchg
fcoml
lock
jge
lock
fists
repnz
inc
jg
cld
adc
outsl
pop
sub
stc
in
bound
pop
cwtl
mov
mov
jae
inc
xchg
rorb
dec
sbb
pop
ror
jbe
jp
pop
daa
ret
ja
push
popf
ljmp
adc
or
dec
and
mov
fwait
push
jne
ret
jne
lcall
in
jno
clc
jp
movsb
ret
sub
fldl
test
imul
jg
xchg
mov
add
pop
xlat
lock
inc
fimull
popa
loopne
subb
inc
and
inc
mov
nop
cld
inc
js
mov
push
mov
loope
in
adc
inc
jnp
sub
xor
inc
iret
or
cwtl
cwtl
sbb
jbe
cmp
scas
push
mov
inc
icebp
pop
sub
jge
je
outsb
jns
inc
mov
or
ret
mov
faddl
fcomps
inc
fidivs
push
cltd
sbb
out
int
testb
fidivs
sahf
xchg
es
in
xor
mov
inc
jne
fsts
dec
aas
in
fxam
enter
mov
fdivrp
leave
stos
test
pop
sahf
xlat
mov
add
ja
mov
in
fistps
cwtl
sub
push
and
stc
add
faddl
call
enter
adc
stc
insb
jo
and
ljmp
jp
cmp
test
addr16
fsubrs
push
xor
push
push
aam
push
fwait
mov
call
push
cmp
xor
pushf
jb
sti
rolb
xchg
or
pop
sub
cmp
into
and
popf
dec
hlt
mov
les
xchg
lods
push
int
test
pop
inc
sub
int
out
cmp
and
scas
inc
nop
and
mull
shll
xchg
lds
inc
pop
into
adc
mov
ds
leave
test
sbb
adc
imul
sahf
call
fnsave
jnp
jo
sbb
sub
add
aas
xlat
mov
insl
fiaddl
xchg
cmc
js
into
xchg
inc
data16
clc
aad
bound
stos
out
loop
ljmp
lret
dec
es
movsl
xadd
imul
dec
jle
mov
lret
dec
fistl
push
shlb
sub
sahf
daa
insl
sbb
mov
inc
xchg
popf
push
jb
and
xchg
lea
mov
in
jns
cs
mov
sbbl
ret
xchg
shl
movsl
iret
jno
test
leave
jmp
stc
in
lret
dec
inc
xorl
cs
xchg
imul
mov
jne
cmpsl
gs
into
or
insl
xchg
jns
in
cltd
xchg
notl
add
mov
push
enter
mov
faddl
das
in
inc
aad
dec
jge
sub
and
xor
popa
lahf
int
aad
mov
int
stc
pop
sahf
push
push
add
dec
pop
inc
aaa
jbe
clc
je
xor
inc
or
mov
leave
lock
add
cld
mov
push
js
iret
fwait
fs
sti
push
cmova
sub
sub
pop
ljmp
test
and
jne
and
fscale
mov
and
xor
into
mov
jae
scas
push
icebp
xor
push
in
inc
imulb
cmpsl
out
mov
cmp
sbb
xchg
fcoms
fnstsw
imul
push
sbb
jae
ss
les
sbb
mov
pop
jno
sahf
add
adc
daa
int
icebp
ret
setnp
push
not
pop
adc
xchg
aad
ret
imulb
jecxz
into
mov
xor
in
inc
push
jge
push
push
shll
les
cmp
in
lods
ret
insl
and
push
pop
pop
mov
inc
cs
push
cld
dec
stc
sbb
cmp
xor
add
scas
mov
pop
dec
pop
push
mov
sub
xchg
sub
inc
mov
or
sub
sub
jmp
dec
aad
popf
adc
rorb
negb
mov
jl,pt
popa
mov
mov
into
out
in
mov
movsl
sub
inc
cmp
mov
xor
js
ss
cmp
cs
add
les
or
push
popf
cmp
mov
dec
inc
clc
enter
jge
push
xchg
push
loope
lret
imull
movsb
mov
add
cwtl
pop
xchg
add
sbb
pop
enter
sub
ret
ljmp
xlat
inc
mov
lcall
mov
jb
cmpb
lahf
popf
jns
xor
jne
push
mov
test
je
out
lock
cmp
lods
outsb
stos
cltd
and
cmp
dec
stos
fimull
hlt
dec
or
dec
andb
jbe
imul
fisttpl
dec
movsb
pushf
pop
add
cmp
mov
shrl
fadds
iret
out
addb
and
mov
push
mov
sar
inc
fiaddl
push
sub
cmp
dec
add
xchg
mov
in
add
and
inc
jno
clc
and
add
pop
daa
scas
cmp
loop
xchg
movsb
repnz
mov
and
mov
fwait
aam
in
pop
addr16
cli
movsl
dec
push
popf
mov
mov
inc
ret
daa
movsl
loope
nop
mov
ljmp
mov
nop
out
test
xor
mov
adc
leave
insb
mov
or
iret
cmpsl
or
std
stos
divb
cmp
scas
xchg
lock
addr16
lret
add
pop
or
addr16
test
xor
sub
test
xchg
cmp
rolb
fs
into
mov
or
jnp
lods
stc
stos
xchg
adc
jp
data16
add
push
movsl
scas
sub
lods
push
std
mov
out
lods
icebp
cmpsl
cs
loope
sti
inc
cld
adc
jp
sbb
jle
mov
jge
or
gs
jle
or
xchg
and
pop
mov
jmp
cmpsb
sbb
sbb
in
jle
out
into
out
pop
les
xchg
pop
pop
inc
jp
lea
jb
jge
dec
jb
les
cli
push
fcoml
rcrl
jno
scas
jne
js
push
scas
mov
mov
mov
xchg
mov
fdivr
out
mov
outsb
dec
cmp
loopne
xlat
or
mov
sbb
fisttps
test
lcall
pushf
repnz
das
sub
jb
sbb
dec
mov
inc
lret
pushw
push
dec
sub
std
cmp
xor
out
mov
loop
mov
sub
lods
lods
push
test
add
jge
movsb
sbb
aad
pop
lock
dec
xchg
mov
cld
push
lea
jle
push
call
fs
addr16
xchg
xor
mov
and
loop
arpl
add
adc
mov
and
cwtl
mov
inc
das
cwtl
std
sbb
fidivs
into
xchg
xchg
aas
jne
mov
popf
sbb
jge
pop
sub
mov
in
or
movsl
aam
fcmovnu
fdivl
leave
jnp
out
imul
jge
fst
inc
pusha
jo
jbe
xchg
imul
mov
cmp
cmp
pop
dec
addr16
mov
mov
sub
daa
mov
test
and
mov
outsb
sbb
cltd
fidivl
ds
push
sbb
xor
test
adc
dec
out
and
mov
mov
cmp
out
mov
arpl
call
jno
iret
dec
inc
pushf
inc
fmull
jmp
mov
mov
adc
pop
and
pop
mov
fcomps
push
mov
pop
adc
push
sub
cmp
aam
pop
push
fsin
mov
pop
mov
push
and
movl
sti
cmpsl
rcll
out
inc
dec
pop
mov
aam
jns
mov
or
pop
cmp
decb
mov
popf
sub
pushf
pop
cli
in
mov
stos
cmovns
sbb
scas
inc
jle
cwtl
mov
adc
insl
xchg
and
imul
or
xchg
fimuls
subb
test
cmp
xor
jmp
gs
and
cmpsl
sub
lock
aas
push
rorl
cmp
inc
outsl
push
jg
cmp
rorb
cli
add
xor
pop
jnp
or
pop
inc
lgdtl
data16
cmp
cmp
ds
ss
fildll
jg
and
sub
bound
sbb
icebp
mov
hlt
inc
pop
ret
lret
cmp
aad
cld
pusha
popa
icebp
xchg
repz
jg
shll
inc
add
ds
mov
push
push
fdivl
icebp
xchg
push
std
dec
testl
or
inc
xchg
scas
ljmp
inc
add
leave
add
adc
adc
mov
es
sub
sub
out
jle
mov
mov
cltd
imul
or
xchg
push
sub
jne
pop
pop
cmp
out
xlat
xchg
push
inc
jl
test
mov
cmpsb
and
icebp
jge
arpl
jmp
mov
cmc
loop
cs
pusha
callw
push
ror
and
fisttpl
inc
hlt
xchg
push
adc
add
leave
xchg
inc
and
add
jge
int
push
xor
aas
aam
push
or
ret
adc
inc
pop
mov
nop
mov
out
push
aas
in
in
dec
mov
jb
sbb
inc
aam
mov
test
cli
nop
cmpsl
lea
and
and
push
xor
fcoml
fs
pop
sub
pop
jge
jb
inc
repz
sti
cld
fistpl
loope
lcall
pop
xor
lock
mov
ljmp
pop
iret
pop
inc
lahf
xor
in
inc
add
jno
js
ret
sub
mov
mov
xor
jne
mov
add
call
pusha
xchg
mov
mov
xchg
movsl
mov
xchg
imul
mov
fisubrl
pop
dec
push
inc
test
shlb
push
mov
stc
roll
lahf
fsubrp
outsl
adc
std
sub
xor
pop
inc
dec
or
jne
cmp
pushf
jl
add
or
roll
jl
ss
outsb
mov
dec
test
pushf
mov
fidivl
xchg
or
out
or
cbtw
clc
pop
pop
les
std
jle
fistl
push
mov
lock
jnp
xor
jnp
fdivrl
sarb
out
sti
adc
fwait
sub
sbb
sbb
ljmp
call
push
daa
push
lcall
loopne
jp
push
jle
xorl
mov
and
sbb
inc
cmpsl
push
mov
stos
fucomi
sub
movsl
or
and
push
jecxz
out
repz
mov
xchg
popa
push
dec
fists
shrl
jne
sub
push
fnstcw
jge
sub
mov
nop
cmpsb
inc
dec
lds
push
dec
fiaddl
mov
bsf
inc
test
dec
or
je
mov
fwait
ja
fcoml
pushf
cmp
mov
jecxz
js
push
push
nop
pop
xor
mov
pop
xlat
pop
push
in
outsl
std
cwtl
iret
aam
popl
ret
xor
and
nop
pushf
add
std
rcrl
bound
pop
cwtl
and
icebp
pop
jne
lcall
xchg
mov
inc
jnp
stc
and
addr16
ret
xchg
mov
test
les
int3
jmp
stos
jp
sahf
popa
sbb
cli
add
or
or
mov
jbe
sub
sub
ret
sub
lcall
iret
xchg
adc
mov
pushf
mov
jno
mov
inc
jp
add
fcomps
xor
dec
cs
jle
mov
xchg
xchg
push
into
je
lods
xchg
mov
adc
ja
ds
fsubp
xor
sub
gs
and
xchg
hlt
mov
adcb
and
scas
and
cmp
stos
call
arpl
cmp
jp
push
movsb
cmp
repz
notb
jmpw
pushf
mov
call
cmp
pop
rorl
and
cmc
add
push
cmp
jmp
dec
insl
out
je
outsb
and
faddl
or
out
bound
cs
movsl
dec
inc
or
insl
xchg
in
sub
push
xchg
xchg
shll
pop
and
lock
push
out
mov
sub
and
inc
or
inc
sub
mov
shrb
jae
adcb
test
fdiv
stos
rep
pop
les
inc
bound
push
adcb
cltd
bound
and
push
push
jbe
push
inc
adc
xchg
fwait
xor
les
jne
xor
mov
adc
cs
popf
adc
adc
cmc
lods
xchg
imul
jmp
add
imul
push
dec
mov
testl
jmp
sarl
movsl
jne
jae
dec
lahf
ss
cmc
scas
add
fwait
mov
jns
mov
pop
push
pop
bound
or
sbb
call
mov
and
pop
pop
je
mov
dec
sub
clc
and
sub
inc
loopne
shl
popl
adc
loopne
sti
mov
subb
lcall
and
aas
jne
bound
sub
ret
sbb
fadd
mov
adcb
insb
dec
push
mov
dec
repz
pusha
hlt
push
pop
fidivl
xor
les
in
jo
clc
stos
in
test
popf
pop
pusha
lret
mov
fnstenv
pop
adc
mov
push
fyl2x
xor
daa
add
sub
adc
dec
sub
outsl
xor
sbb
loope
lret
js
shl
das
pusha
aas
and
xor
and
ret
stos
mov
jecxz
sti
sbb
arpl
scas
aas
lret
iret
mov
mov
gs
push
in
loop
aam
add
lds
lcall
rcrl
mov
imul
ja
outsl
push
mov
cld
ds
hlt
es
dec
dec
mov
ret
les
arpl
dec
enter
sbb
jp
pop
sbb
sub
lods
push
adc
imul
sub
or
lods
lret
sub
fidivrl
cmp
lds
dec
inc
test
xor
xor
inc
popf
cmp
pushf
sbb
add
inc
negl
test
daa
push
or
push
gs
inc
std
test
xchg
jg
mov
in
rcrb
fbld
pushf
out
test
sub
sub
jmp
enter
lock
movsb
mov
faddl
sbb
ficompl
adc
mov
pop
jp
jl
push
xor
cmp
push
and
lahf
lds
aad
insl
xlat
pop
pop
cltd
insl
jmp
cmp
insl
xchg
fistpl
xchg
out
jg
js
and
pop
xchg
cwtl
subb
and
ret
xor
push
enter
lds
xor
leave
mov
fwait
inc
mov
xor
pop
jl
loopne
pusha
ds
loop
cltd
inc
push
sbb
loope
test
and
test
dec
bound
movsl
xchg
repz
push
test
ss
push
popa
adc
js
shr
adc
lret
and
lea
mov
ljmp
dec
and
clc
adc
in
or
ljmp
es
jmp
xbegin
lods
xchg
pop
mull
mov
iret
out
jg
cld
adc
dec
inc
xor
push
lcall
or
xor
mov
xchg
mov
jb
popa
movsl
and
das
or
bound
mov
push
adc
andl
stc
shll
stc
aad
pop
inc
loopne
jo
mov
mov
mov
or
faddl
mov
xchg
pop
and
lods
dec
popf
aas
or
pop
mov
or
add
jne
dec
lock
dec
in
cmp
cs
pop
push
shrb
xor
pop
add
leave
fstpl
add
popa
shrl
scas
xlat
movntps
fisttpl
mov
mov
ja
lret
mov
mov
inc
movsl
mov
pop
lea
je
dec
adcb
loop
xlat
cli
jb
jle
scas
outsb
and
xor
push
xor
xchg
jg
push
pop
fadds
lcall
or
rcrb
rolb
cwtl
rcl
out
out
clc
pop
pop
push
sbb
iret
jmp
stos
clc
and
jmp
dec
adc
xor
out
mov
sbb
outsl
iret
dec
adcb
cld
mov
bound
movsb
pop
mov
call
mov
adc
and
dec
dec
fwait
or
cld
je
xor
fdivrp
mov
sub
insl
notl
dec
fisttpl
in
xchg
test
xchg
repz
jmp
xchg
or
adc
pop
jl
mov
xor
repnz
xor
adc
minps
xchg
aas
je
inc
sbb
inc
or
mov
jne
icebp
rorl
out
fnstenv
lahf
and
repnz
js
dec
jbe
xchg
adc
mov
sahf
push
out
or
loopne
mov
cmp
sub
insl
push
xchg
jp
mov
push
loope
and
push
pop
fucom
ds
sti
jno
adc
mov
adc
mov
mov
cmp
dec
enter
jge
inc
mov
and
pop
int
ja
adc
cwtl
into
cmc
xor
add
mov
and
test
rclb
in
xor
stos
jne
movsl
shll
push
pusha
sbb
or
sub
cmp
push
push
ljmp
jbe
dec
jecxz
mov
outsl
or
aas
lods
sahf
jmp
inc
jmp
dec
fcompl
lret
dec
js
cli
jmp
push
pop
aas
fwait
addb
int
mov
rcrb
test
mov
pop
stos
push
out
and
xchg
faddl
out
sbb
adc
mov
in
lea
imul
xor
mov
mov
scas
jno
stos
adc
dec
es
adc
lcall
mov
aas
aas
addr16
icebp
cmp
adc
dec
ss
syscall
testl
mov
jns
lea
xor
sbb
pop
and
addps
sbb
and
lahf
xorb
xor
adc
scas
lret
sub
jmp
arpl
mov
mov
dec
dec
rcll
xor
ja
inc
pusha
sbb
mov
stos
cwtl
mov
fld
inc
in
sahf
fcmovne
lea
jae
add
inc
pop
sub
jp
push
sbb
jb
rep
xor
dec
push
lret
adc
push
data16
ljmp
jl
or
mov
repnz
cmp
xor
popf
movl
divb
mov
sub
push
xchg
test
mov
jl
mov
in
cmc
stos
add
push
or
mov
mov
xlat
push
push
movsl
outsl
scas
inc
xchg
mov
mov
mov
ret
sbb
sbb
jo
sbb
fnstenv
push
mov
out
lret
jae
lahf
cmp
mov
andl
mov
movsb
cmpsl
sub
and
daa
repnz
shlb
jne
inc
mov
hlt
or
mov
sub
gs
sbb
add
fwait
ds
pop
mov
fnop
mov
push
stos
inc
add
push
push
or
ljmp
add
xor
mov
push
mov
pop
sub
xchg
outsb
mov
push
push
xor
iret
inc
mov
sub
jb
fildll
cmp
xor
xchg
xchg
mov
cmp
cmc
mov
adc
sub
lods
into
movl
dec
jb
fbld
shll
xchg
testl
fwait
xorb
xchg
or
mov
push
push
stos
jg
cmp
mov
sub
testb
lahf
dec
testl
fistl
mov
mov
mov
test
xor
add
mov
jmp
cmp
sbb
sarb
xorb
test
dec
dec
dec
cld
in
fisubs
dec
jge
cs
div
andb
xor
and
or
rcll
push
shld
clc
icebp
or
add
cs
pop
mov
push
cmp
sub
or
call
loop
inc
mov
adc
adc
pop
outsl
mov
popf
das
fs
pop
lods
dec
cmpsb
sbb
jbe
adcl
cmpsl
push
scas
pop
outsl
mov
cmpsl
aad
pop
aam
push
lods
jae
xor
sub
pop
pop
push
push
dec
jno
sbb
subl
or
push
icebp
loopne
repnz
ret
bound
andb
push
enter
mov
enter
adc
and
pusha
and
xlat
leave
in
adc
in
pop
aas
cltd
mov
sub
mov
mov
andb
testl
inc
inc
aam
es
out
cmp
lret
push
ficompl
jge
imul
add
jmp
in
push
adc
dec
cmpsb
jp
mov
jge
inc
and
filds
pop
xchg
rcll
sbb
xchg
addb
call
mov
sbb
jp
inc
adc
test
mov
repz
in
jp
outsl
aam
lret
mov
or
sbb
loope
aas
rcll
lods
sarb
arpl
xchg
mov
idivb
hlt
cli
xchg
adc
js
push
int3
enter
sbb
push
lcall
push
inc
pop
or
xchg
push
mov
repnz
lret
popa
lods
sbb
fistpll
test
add
push
and
mov
cmp
mov
push
jb
shlb
cmp
mov
aam
daa
movsl
inc
or
mov
mov
pushf
es
and
pop
shll
sbb
adc
ret
cmpsb
in
aad
in
jl
insb
push
lcall
movl
lds
mov
dec
loope
std
xor
mov
sub
sub
xchg
cmp
jmp
pop
dec
fistl
pop
jmp
add
sub
dec
push
out
pop
push
inc
mov
adc
mov
dec
bound
mov
sbb
int3
mov
xlat
xor
pop
mov
pop
repnz
or
icebp
call
cmp
pop
lcall
fistps
insl
push
sbb
xor
sub
jecxz
mov
push
cld
in
pusha
negb
mov
pop
mov
test
movsl
xor
mov
or
dec
cltd
mov
mov
dec
lea
hlt
enter
cmp
and
les
push
and
adc
mov
movsl
movsl
pop
cmp
ljmp
stos
jle
shl
das
fcomi
mov
inc
std
jge
dec
test
daa
xor
repnz
xchg
cmp
push
or
xor
sub
mov
bound
das
sub
adc
mov
in
jno
jmp
mov
xor
sbbb
push
lret
fnstenv
mov
xor
lea
sarl
cmp
jle
ds
repz
lods
mov
fistpll
inc
popf
mov
jnp
fdivs
mov
and
mov
pushl
dec
and
rorl
enter
dec
inc
cld
ss
rcrl
stos
sti
lea
mov
adc
adcl
fisttpl
xor
cmp
push
xlat
cmp
mov
add
mov
imul
ret
sbb
mov
sti
xchg
cli
outsl
push
notb
xor
movsb
push
pop
pushf
ror
xchg
push
inc
dec
btr
clc
cli
push
daa
loop
sbb
ja
inc
mov
xchg
cwtl
inc
mov
push
jae
or
imul
or
mov
jecxz,pn
lret
cs
ds
push
mov
jo
xchg
sub
movsb
pop
sub
insl
mov
cld
dec
loopne
jmp
mov
xchg
inc
rolb
ss
push
sub
adc
dec
mov
xor
test
pop
testb
imul
fmuls
daa
inc
mov
repnz
mov
mov
dec
inc
sti
pop
jo
outsl
les
out
imul
sbb
ljmp
psllw
sub
cmpb
pop
js
in
fisubl
orb
inc
adc
push
jnp
lcall
test
push
cmp
out
std
adc
add
mov
aad
imul
daa
xchg
dec
dec
repz
push
into
jne
andl
repnz
xchg
int
sub
jo
inc
and
into
icebp
dec
ds
testw
inc
dec
cmp
sbb
repz
call
adc
xchg
pop
or
xchg
push
xchg
sub
and
cmp
test
fistpl
test
push
lahf
test
movsl
sbb
jle
xchg
out
sbb
movsl
filds
jno
lea
lcall
inc
push
movsb
repnz
cs
mov
push
icebp
shl
mov
dec
aad
daa
aaa
cmp
stc
daa
xchg
scas
and
sahf
lcall
rcr
popf
and
jnp,pt
pushf
incb
test
ja
xor
mov
inc
sbb
mov
add
jmp
in
rcrl
sub
movsb
push
clc
mov
sub
xchg
inc
dec
cmp
leave
push
pusha
out
in
sbb
subl
mov
jmp
shlb
sub
add
idivb
and
cmp
mov
cli
xor
imul
pushf
cmpsb
cltd
aas
pop
and
mov
jns
mov
lock
icebp
dec
clc
enter
sbb
cmpl
add
jnp
into
push
or
pop
insb
jbe
lock
test
out
xor
repz
mov
jg
push
cmp
ljmp
or
xor
fldt
hlt
or
fisttps
push
gs
jg
dec
xchg
mov
xor
in
lds
dec
repz
das
push
xchg
xchg
lea
test
out
out
dec
cwtl
pushf
out
mov
pusha
arpl
outsl
mov
gs
ja
out
pop
stos
jbe
shrl
mov
sahf
sbb
outsl
sbb
push
aaa
jle
push
add
fiadds
mov
sbb
nop
inc
pusha
sub
sub
adc
inc
inc
add
sbb
mov
cwtl
xchg
push
shlb
or
hlt
pop
mov
or
sub
loopne
lock
popa
and
imul
sub
adc
jae
jp
shrl
inc
out
xchg
mov
lods
add
iret
cmp
sub
dec
dec
rcrl
js
sbb
inc
jmp
and
daa
loop
les
je
std
aam
dec
popa
aad
pop
jl
in
dec
jb
shll
inc
sbb
sub
test
lods
fcmove
xor
adc
push
jne
gs
push
cmp
jae
cmp
inc
jmp
scas
lahf
test
inc
cld
call
sub
or
dec
repnz
adc
js
test
push
out
cltd
clc
mov
push
or
mov
push
ret
arpl
lock
push
cli
mov
adc
and
out
mov
cmpsl
dec
lea
es
cmp
iret
add
mov
inc
add
and
add
sub
insl
adc
ds
pop
sarl
xor
pop
jnp
dec
jmp
imul
add
std
int
dec
mov
mov
sbb
in
jecxz
idivb
pop
sub
or
enter
out
pop
cmp
sbb
imul
ds
pop
stc
mov
push
jmp
dec
dec
xchg
add
pop
mov
push
pop
ficoms
mov
sub
mov
mov
pushf
mov
imul
xchg
scas
fsub
cmp
xchg
or
cmp
xor
xchg
push
insl
js
dec
mov
bound
and
cmp
jge
mov
aaa
mov
add
lods
fs
cld
or
cld
aad
cmp
cmp
dec
pop
data16
inc
in
cwtl
cmp
in
sbbl
sbb
dec
and
xchg
jns
xor
jo
xor
and
xchg
sub
loop
push
and
imul
add
fmuls
shld
pushf
stos
xor
lock
and
or
add
testl
jge
sbb
mov
add
inc
lds
cmp
xchg
pusha
mov
nop
push
test
and
cli
add
inc
out
call
sbb
cmp
push
clc
sbb
sub
mov
jns
addb
mov
and
call
and
cwtl
das
scas
ja
es
fisubl
cli
sub
lock
and
jecxz
jns
pop
adc
mov
lret
xchg
dec
call
call
add
mov
pusha
hlt
pcmpeqb
pop
jmp
es
dec
sbb
and
inc
add
push
ja
in
pop
sahf
stc
pop
popa
imul
mov
add
sbb
xchg
das
sbb
push
pop
pop
fildll
insl
call
pop
clc
mov
loop
jl
bound
arpl
pushf
lret
mov
mov
adc
adc
aas
mov
cmpsb
aaa
and
movsl
int3
pop
inc
lods
sbb
loop
adc
and
ret
xor
test
adc
mov
rorb
pop
adc
sbb
xlat
inc
icebp
in
shrl
mov
incb
in
or
xor
mov
adc
stos
gs
jbe
adcb
jns
pop
les
mov
mov
cld
sub
in
fsubrl
orb
lds
popa
gs
jle
outsl
lods
xor
or
insb
outsl
lcall
mov
mov
inc
les
cli
sub
push
rep
lods
in
gs
jg
leave
dec
adc
sub
jp
pop
dec
clc
sbb
int3
stc
mov
xchg
xchg
rclb
sahf
xchg
fadds
xchg
adc
pop
push
int
push
and
jg
icebp
dec
pop
xlat
sub
jnp
inc
sbb
inc
insl
out
enter
repz
scas
stos
add
mov
shll
outsb
mov
mov
add
das
sub
mov
test
insb
mov
sbb
mov
repnz
push
xchg
mov
inc
push
shll
ja
pushf
mov
inc
or
sbb
add
xor
jle
leavew
mov
cwtl
in
mov
stos
or
cs
inc
dec
jno
mov
out
mov
push
sub
outsb
mov
push
test
cmp
cld
xor
sarl
push
add
dec
rclb
push
mov
sahf
das
gs
mov
shlb
adc
lock
cmp
and
into
sahf
xor
xchg
jmp
mov
in
lea
adc
andb
sbb
sahf
in
xchg
cmp
jmp
mov
jnp
jns
ja
xor
popa
adc
test
add
jb
mov
xchg
or
call
lods
sti
push
ljmp
mov
out
sub
jae
scas
jmp
scas
mov
add
std
nop
arpl
xor
stos
sti
ljmp
cltd
pop
xlat
push
sub
rclb
cmp
and
pop
leavew
int3
or
pusha
pop
xchg
or
mov
mov
hlt
pushf
faddp
pop
mov
mov
iret
decb
xlat
mov
push
rorl
shrb
jmp
sub
xchg
out
push
test
inc
or
pop
sbb
cli
mov
adc
vorps
xor
mov
cmp
mov
and
gs
or
cmp
repnz
ja
xchg
pop
pop
and
mov
or
xchg
xchg
cmp
in
xchg
fisttpll
orb
leave
dec
lea
inc
cmp
xor
inc
cmp
test
dec
imul
mov
movsb
jo
adc
jno
pop
cmp
cmp
not
in
repz
out
cli
mov
loopne
push
add
push
iret
repz
adc
and
jns
sub
pop
inc
mov
les
xchg
jmp
clc
pop
inc
push
int
lcall
xor
out
lea
test
or
rclb
xor
pop
adc
xchg
push
les
and
add
jge
std
mov
ss
sbb
jb
sub
xchg
xchg
daa
xor
imulb
enter
sbb
sub
xchg
outsl
testb
xor
in
fs
stc
or
and
stos
aaa
stos
and
inc
add
cltd
outsb
std
mov
ret
lret
cmp
jo
push
loop
mov
pop
ss
dec
test
dec
add
jecxz
bound
push
rcrb
fnstcw
inc
icebp
out
pop
je
stc
xor
push
in
inc
push
push
push
retw
fwait
pusha
dec
jle
rolb
mov
out
push
call
arpl
jle
mov
sbb
rcrl
sub
imul
dec
mov
and
imul
mov
jns
xchg
das
stc
or
lahf
mov
pop
mov
js
mov
repnz
dec
adc
and
das
jb
cmpsb
mov
cmp
int3
jnp
in
push
adc
xchg
adc
daa
or
jb
mov
arpl
imul
test
jns
aas
ret
pushf
out
adc
sub
repnz
pop
mov
adc
leave
int
cmpsb
jmp
lret
aad
das
fs
or
adc
rcrl
jb
xchg
je
add
mov
pop
mov
out
jbe
sbb
aas
jge
lcall
mov
stos
adc
dec
mov
xchg
inc
out
scas
loope
sbbb
fcomp
hlt
pushl
sub
adc
or
sbb
mov
jo
jmp
cs
aas
in
mov
loop
hlt
inc
mov
mov
loopne
dec
adcb
push
cmp
sub
sbb
pop
movsl
gs
jo
inc
ja
lahf
dec
mov
add
adc
cs
mov
fiadds
dec
lock
lods
and
fwait
mov
adc
or
push
sbb
mov
ret
push
jae
cld
inc
stos
scas
rcll
ficoms
push
add
int3
xchg
and
pop
mov
xchg
cmpsb
insl
roll
jp
xor
adc
addb
adc
pop
fiadds
aad
mov
push
sbb
outsl
dec
push
mov
int3
pop
cltd
icebp
pusha
fwait
rolb
sar
out
sbb
add
fxam
ficoml
or
add
rcrb
sbb
dec
pop
ds
push
pop
mov
push
cmpsb
jge
dec
icebp
inc
cld
xchg
pop
pop
cwtl
inc
daa
fucomp
test
cmp
push
out
xchg
imul
mov
mov
mov
ja
cli
arpl
mov
or
popa
cmpsb
add
cmp
pop
xchg
xor
mov
pop
clc
sbb
je
adc
popf
xchg
loopne
mov
xchg
mov
arpl
push
test
sbb
lret
fldl
ret
cli
or
mov
jo
sub
sub
pop
jl
push
lret
xchg
add
xor
daa
adc
into
push
aam
ja
adc
andb
std
inc
inc
add
clc
imul
mov
std
sub
fistpll
das
xchg
movsb
sub
cmp
add
and
xchg
dec
jo
fadd
cmp
or
neg
xchg
rcrb
xor
cld
dec
jp
addb
dec
mov
or
xchg
jl
xor
xchg
mov
jge
out
or
les
aaa
adc
push
out
fs
pop
cmp
shrb
iret
and
int3
jno
mov
sbb
ret
pop
mov
rcl
nop
add
aas
movl
pop
add
mov
popa
popa
dec
fsubs
xchg
int
add
cmp
data16
lea
add
data16
cltd
and
xor
push
mov
psllw
stos
outsl
out
jle
xchg
sbb
popf
daa
dec
mov
inc
inc
dec
je
lods
adc
daa
mov
test
aam
sti
clc
jns
mov
aad
test
pop
rcrb
sbb
test
mov
cmc
mov
stos
in
cmc
or
push
and
dec
sbb
sbb
cld
pop
inc
and
jmp
ja
enter
xor
fistpll
aad
jnp
cmp
int3
xlat
insb
xchg
pop
lods
dec
imul
lock
pop
adc
push
inc
xor
cs
xchg
scas
inc
leave
out
and
not
cmp
into
lcall
pop
cmpsb
add
lret
jb
jne
xor
std
scas
push
inc
enter
adc
xorl
lods
mov
or
inc
ret
add
dec
jbe
subl
out
adc
daa
fdivrs
mov
cmp
ret
xchg
push
and
adc
cld
dec
mov
repnz
je
insl
into
popf
scas
mov
mul
daa
xorb
jecxz
hlt
push
test
idivb
stc
dec
test
lret
inc
pop
pop
sbbl
lods
dec
push
and
cmc
shll
xchg
gs
das
mov
fists
into
mov
jecxz
and
xor
mov
mov
repz
outsl
mov
int
mov
sbb
jl
int
mov
jle
cmp
fldenv
rorb
inc
or
leave
lahf
sbb
jnp
stos
push
sbb
ficompl
stos
sbb
add
jmp
cwtl
in
ljmp
pop
pop
mov
ljmp
cltd
ss
or
dec
out
xchg
cltd
sar
je
xchg
add
mov
faddl
int
sarl
inc
lds
inc
clc
inc
and
xchg
scas
popf
adc
ss
add
inc
jge
dec
ret
mov
imulb
movsl
mov
aam
mov
xlat
repnz
pop
cmp
ds
inc
push
push
lods
addr16
adc
insb
push
xor
jo
lock
roll
shl
xchg
insl
movl
addr16
ljmp
and
insl
lea
rdtsc
ret
pop
ja
or
enter
test
mov
cli
mov
jmp
jbe
or
push
xchg
out
cli
call
mov
shrb
mov
repz
pop
sub
rol
sti
les
inc
sahf
add
popf
jl
lods
js
push
add
or
pushf
outsl
xor
adc
and
add
xlat
gs
ds
int3
and
push
inc
cli
cs
bound
sbb
std
rcrl
data16
mov
mov
or
loop
in
nop
ja
in
push
mov
sub
sbb
test
popf
adc
jb
gs
inc
aad
je
movsl
daa
rorl
jb
jp
test
sub
aas
int
push
pop
dec
dec
or
adc
jbe
stc
inc
xor
in
mov
xchg
and
arpl
insb
sbb
add
sbb
sbb
inc
dec
adc
or
push
mov
orl
jge
data16
nop
fiaddl
stos
mov
or
cmp
xchg
ds
imul
sbb
xchg
mov
stc
in
xchg
in
mov
mov
add
aaa
pop
adc
mov
push
mov
and
lret
dec
mov
mov
sbb
sbb
int3
aad
imul
push
pop
jecxz
sahf
dec
test
pop
cmpsl
adc
mov
fcomip
mov
add
nop
pop
int3
cmpsb
sub
dec
incb
dec
lahf
js
push
mov
mov
push
or
push
js
or
movsl
das
pop
xchg
inc
cmp
sub
shlb
sbb
movsb
fsubs
aam
fstpt
mov
inc
adc
xor
out
pushf
int
shlb
or
push
adc
insl
mov
xor
mov
rcrl
test
jecxz
jecxz
lret
ret
sub
fstpt
mov
js
cmpsb
pop
fs
aam
inc
cmc
popf
mov
push
lods
push
mov
and
or
push
adc
sub
push
lret
push
stc
push
sbb
out
cmp
dec
xlat
shl
push
pop
mov
mov
mov
outsl
push
adc
mov
movsl
addr16
adc
mov
iret
sbb
push
xrelease
inc
push
filds
cmpsl
pop
jb
mov
lret
mov
sbb
in
jp
xchg
xchg
lret
lret
sarb
mov
jne
xchg
dec
jne
jge
xchg
pop
push
ds
push
dec
sbb
sbbl
mov
in
lock
xorl
mov
loopne
pop
sarb
push
add
add
lcall
and
cli
xor
xchg
or
jno
or
mov
mov
dec
mov
dec
bound
cmp
mov
pop
icebp
mov
cmp
add
lods
sub
xchg
clc
mov
xchg
cmpsb
xor
xor
in
fadd
mov
leave
cmp
rolb
cmpsl
mov
div
inc
cmpl
sbb
orb
xorl
pop
sub
sbb
je
push
mov
stos
mov
mov
or
shrb
ja
push
push
enter
sub
push
pop
int
icebp
sub
cmpsl
in
gs
mov
rolb
mov
inc
mov
xor
sbb
push
push
testb
jmp
imul
subl
push
cli
jnp
fdivrs
dec
popa
hlt
mov
pop
pusha
cmp
pop
push
std
bound
mov
push
pop
ljmp
jl
fidivs
xor
dec
and
mov
test
stc
cmp
xchg
xor
dec
into
ja
leave
movsl
aaa
sahf
mov
std
ret
les
push
xor
aaa
xchg
rcr
js
jg
fsubl
xor
xchg
mov
rolb
sub
push
cwtl
aaa
cmpsl
ja
add
cmc
pop
xchg
je
addb
in
fmuls
fldenv
add
repnz
dec
mov
mov
les
rol
insb
ds
and
jo
lds
dec
jecxz
push
popa
sub
sub
addl
fists
add
fisttpll
imul
mov
sub
mov
rclb
pusha
lds
call
jbe
push
pop
sub
shrl
mov
cld
popa
add
mov
pop
inc
bound
mov
out
xchg
shrb
sti
sub
mulb
xchg
sti
mov
mov
jbe
data16
xchg
jbe
out
out
pop
mov
es
cmc
add
scas
fiadds
add
cli
sbb
xchg
test
nop
mov
icebp
gs
add
fldenv
adc
mov
mov
cmc
add
scas
fldl
cmc
loopne
out
pop
scas
stos
in
and
ror
ficoms
es
gs
les
push
xchg
push
mov
testl
cmp
jl
aaa
ret
jb
pop
stos
rclb
pop
xchg
repz
inc
fidivs
mov
negl
test
push
mov
ret
and
loope
fnstcw
std
test
inc
push
shll
pusha
push
sti
fdivrl
mov
aad
cmp
mov
stos
xor
jge
pop
push
cmpsl
aaa
xor
and
jmp
dec
mov
xchg
mov
jns
subb
mov
sub
jb
mov
aas
bound
shl
push
out
out
je
jmp
xor
call
push
push
pop
sbb
lret
jmp
adc
xchg
cwtl
jg
stc
lds
dec
add
add
nop
and
push
js
mov
cmc
sti
gs
jae
mov
sti
dec
test
out
mov
mov
sbb
mov
dec
into
js
push
cmp
daa
clc
into
xchg
adc
std
xchg
jnp
and
fstpt
fisttpll
outsb
aad
cmp
jle
ds
cld
lock
lret
ds
xchg
mov
xlat
push
pop
movsl
sbbl
mov
iret
xor
xchg
push
sub
dec
lret
es
js
mov
rclb
clc
ficomps
ret
mov
ret
lock
in
outsb
pop
pop
adc
cld
pushf
push
loop
js
jns
jg
fwait
out
xchg
mov
mov
loop
adc
jb
pusha
nop
jb
jbe
adc
mov
mov
clc
mov
outsl
aaa
push
int3
jle
imulb
lcall
mov
and
adc
adc
push
icebp
cwtl
shrb
or
lock
aad
adc
aad
mov
ss
out
fiadds
into
scas
and
mov
push
jge
sub
test
test
scas
fnstenv
add
into
dec
mov
xchg
ljmp
add
sahf
and
and
cli
int3
outsb
neg
dec
xchg
add
mov
lahf
nop
jb
push
add
mov
jl
push
lea
loope
ret
repz
mov
fdivs
sbb
push
mov
pusha
push
cmp
or
xchg
fisttps
bound
dec
mov
jns
hlt
push
jne
push
inc
and
test
out
test
ss
jg
pop
mov
ret
or
sbbb
in
sbb
push
int3
mov
cs
inc
inc
jns
mov
xor
nop
sub
xlat
aam
xchg
mov
es
rcrb
jns
leave
xchg
inc
adc
dec
clc
pop
mov
xchg
xchg
cmp
popf
xchg
pop
mov
aas
aad
aam
dec
mov
cltd
lea
outsl
aam
mov
call
popf
mov
add
out
and
pop
pop
cltd
push
test
loope
ret
sbb
inc
add
inc
xlat
mov
mov
or
cmp
mov
pusha
nop
and
mov
pop
out
cmpsb
xchg
fcomps
jmp
pop
fildll
mov
stos
pop
aaa
fwait
rcll
or
repz
sub
mov
xor
aas
scas
fstp
icebp
ror
add
cmp
pop
sar
xor
and
bsf
mov
sub
xor
push
and
or
aam
scas
pop
mov
shrb
sarl
outsb
mov
cli
jmp
enter
imul
xor
fnstsw
mov
sbb
jne
shl
insl
daa
fadds
js
dec
push
push
xchg
sub
fdivrs
push
cli
push
icebp
notb
pusha
ss
nop
or
mov
mov
xchg
or
mov
dec
push
cwtl
lret
pop
sbb
jp
dec
mov
aaa
repz
lods
push
jbe
inc
fstpt
pop
fwait
add
cmc
in
and
mov
pop
mov
loopne
testl
lret
sub
push
mov
push
jne
out
out
adcb
shrl
shll
push
push
sbb
and
popf
inc
nop
pop
arpl
mov
mov
out
pop
andl
ljmp
fists
das
scas
pop
adc
xchg
popa
dec
aam
dec
scas
xor
aad
pop
pop
push
jns
mov
mov
mov
jg
cli
shll
sbb
rcrl
inc
sub
lahf
mov
push
mov
push
mov
xor
lods
mov
ljmp
fs
push
int3
inc
cmpsl
mov
gs
lods
pop
shll
fists
sti
cmp
jp
dec
gs
pop
lods
mov
in
stos
jp
pmuludq
dec
jg
jnp
jae
and
out
mov
arpl
cmp
repz
inc
push
lock
fdivl
adc
xor
mov
xorl
push
ret
pop
pushf
std
outsb
sub
sbb
xor
jns
nop
sbb
add
lahf
mov
test
rcrl
pop
or
pop
dec
mov
mov
dec
jno,pn
fmulp
pop
scas
and
imul
insl
popf
data16
mov
adc
dec
pop
notb
incl
sub
xlat
jbe
shl
or
loop
push
push
jg
fcmovne
addr16
mov
cmp
in
fldt
sub
push
stos
cltd
mov
sub
aas
enter
ret
clc
movsb
push
out
shrb
and
fisubs
sti
cwtl
sbb
dec
add
xor
stc
mov
cli
imul
xor
lret
mov
and
xchg
inc
adc
gs
movsb
test
dec
push
or
pop
cmc
mov
imul
cltd
in
add
dec
mov
outsl
cmp
in
push
cmp
lea
and
push
lret
sub
icebp
xchg
mov
and
fucom
inc
jl
mov
or
bound
shl
mov
dec
xor
add
ficompl
sbb
inc
hlt
inc
and
pusha
insb
pop
jg
or
push
xor
test
jbe
or
jge
pusha
or
mov
mov
cs
cmpsl
mov
mov
sub
stos
rorl
rcrb
push
test
xchg
jbe
popa
lds
mov
jl
ss
jecxz
pop
and
nop
scas
xor
cwtl
popf
pop
not
scas
mov
pop
loop
mov
xchg
cmp
mov
jle
jb
cmpsl
jp
fcmovbe
pop
mov
mov
lods
icebp
xchg
test
dec
cmp
cld
pushl
addb
adc
sbb
xchg
or
sbb
mov
jns
lods
push
rcll
add
and
xchg
sub
lods
xchg
cmpsl
adc
dec
lea
cmp
mov
mov
jne
adc
test
stc
aam
bound
mov
std
or
jecxz
add
jge
add
mov
and
push
popl
dec
repz
push
dec
inc
stos
sub
pusha
jmp
dec
sti
repnz
call
por
setne
insl
pop
sub
mov
mov
loopne
aaa
or
cmp
sub
cli
orl
mov
add
andb
cmpsl
fcoms
mov
pushf
mov
mov
aad
hlt
inc
and
and
mov
inc
dec
pop
inc
notb
dec
movsb
negb
fidivl
cmp
jl
mov
les
clc
ljmp
int3
lds
adc
rcrl
jns
call
outsb
fistpll
test
andb
sbb
scas
pop
mov
insb
mov
cwtl
cwtl
repz
xor
ret
mov
mov
cli
sbb
push
shrl
lret
cltd
jns
imul
dec
cmp
mov
in
ss
in
jl
pop
add
ret
repnz
aaa
pop
js
repnz
fidivrs
cmp
test
inc
cmpsb
addr16
pop
mov
mov
sahf
fsts
insl
js
pop
push
fsubrs
pop
dec
push
inc
aad
frstor
push
ljmp
mov
inc
mov
and
imull
xor
pop
sbb
jecxz
mov
jp
inc
rol
test
call
sub
ss
inc
or
rorl
int3
fmuls
insb
xchg
nop
xchg
mov
xor
in
fiadds
xor
movsb
mov
lahf
and
push
ret
push
mov
loope
sub
dec
addr16
js
xor
daa
ret
mov
pop
or
rorl
add
push
jecxz
mov
add
ficoms
sbb
popf
inc
leave
jg
imul
hlt
sti
jo
xchg
xchg
fsubl
je
mov
fsubs
jge
pop
pop
push
iret
cwtl
test
lods
and
inc
mov
sub
mov
cmp
popf
sti
inc
push
pop
test
push
and
push
mov
stc
lret
mov
js
div
outsl
clc
in
push
jecxz
enter
cmp
mov
sahf
mov
push
push
xchg
arpl
inc
push
xor
push
mov
adc
jne
mov
enter
aad
pusha
cmp
cmp
dec
push
into
jecxz
fiadds
call
mov
pop
jne
je
push
dec
or
cmp
stos
inc
sbb
adc
dec
pop
mov
sub
ret
xor
scas
cs
hlt
add
adc
dec
dec
mov
out
and
mov
stos
das
jnp
mov
cli
gs
mov
mov
and
ss
sub
andl
cmp
xchg
lods
jae
loopne
repnz
sbb
sbb
jae
mov
ret
cmp
inc
adc
das
pop
adc
pusha
or
xchg
sub
sbb
ss
xor
and
or
bound
lcall
xor
gs
sahf
mov
test
xor
mov
inc
fstpl
leave
lds
inc
sahf
insl
int
cmpsl
pcmpgtb
pop
movsl
xor
adc
filds
pusha
cwtl
leave
jmp
hlt
cmp
push
popa
test
pop
loop
arpl
stc
jp
js
mov
pop
out
lds
test
out
mov
xorb
shr
enter
xchg
mov
mov
call
sahf
ljmp
jg
stos
popf
or
lock
pusha
call
xor
mov
data16
pop
dec
clc
cmp
or
push
pop
lret
icebp
add
push
fdivs
into
push
jbe
in
in
add
cld
cmc
jmp
inc
inc
push
mov
in
add
xorl
mov
test
dec
inc
cltd
add
mov
push
pop
mov
cltd
cld
add
out
fcmovnbe
dec
push
insb
rcll
push
sahf
pop
inc
sar
aam
cmp
xchg
rorl
popf
mulb
fbstp
lds
fdivs
sbb
cmc
loope
fchs
or
mov
js
outsb
daa
sbb
loop
aas
fildl
test
adc
or
xchg
pop
xor
sbb
ja
xlat
scas
daa
push
enter
jecxz
jmp
lahf
xchg
shl
jns
jmp
popa
imul
lods
mov
adc
addr16
rcrb
dec
cmp
call
cld
in
jb
cli
movsl
sub
push
ficoms
mov
jne
pop
rorl
arpl
jne
xchg
xchg
into
and
and
push
ss
jb
mov
popa
insb
sbb
je
push
dec
jge
test
inc
scas
sbb
cltd
addr16
push
mov
adc
and
jp
push
or
push
fistpll
xor
scas
scas
vandnpd
xor
ficoms
mov
xchg
movsb
mov
push
in
sub
xor
subb
lock
mov
mov
add
out
pop
push
sub
inc
rcr
mov
and
xor
sarb
pop
cmpsl
sub
filds
jo
dec
stos
sbb
loopne
xchg
sub
inc
arpl
jmp
jl
popf
mov
mov
inc
or
outsb
das
outsl
roll
jo
sbb
mov
adc
mov
rorl
ljmp
inc
outsl
adc
fiadds
mov
jo
lret
add
loop
jno,pn
inc
out
mov
fdivl
jno
pop
jl
xor
push
adc
mov
push
xor
mov
bound
dec
sahf
mov
add
xchg
xchg
sti
shl
fstl
movsl
call
add
sbb
loop
and
cli
insl
push
fwait
mov
mov
mov
addl
mov
nopl
ss
xor
jnp
jae
jbe
imul
out
fisubrs
lcall
push
mov
fidivrl
dec
mov
test
lods
int
cmp
adc
mov
fisttpl
sub
sarb
fstps
lods
fnstcw
rorb
aam
enter
test
fnstsw
mov
or
je
ss
add
push
fidivs
and
fldcw
jl
jle
adc
dec
shll
notb
pop
dec
cltd
mov
daa
mov
jp
idivb
jns
pop
shlb
xchg
push
arpl
mov
icebp
arpl
je
int
leave
adc
mov
mov
or
mov
dec
push
sbb
insb
xchg
mov
mov
scas
mov
or
xor
lret
mov
or
xchg
test
cmp
aaa
jno
mov
pop
pop
pusha
add
inc
aam
and
jns
xor
les
int
xchg
stos
or
jecxz
int
sub
pop
mov
lret
in
data16
or
dec
jp
xchg
sub
sti
jl
test
or
iret
loopne
adc
and
dec
ja
fmul
push
mov
push
jecxz
or
inc
sbb
loopne
std
xchg
inc
aam
pop
dec
mov
sbb
push
cmp
roll
mov
push
loop
xchg
dec
push
cltd
data16
mov
pop
sbb
pop
inc
mov
negb
xor
jno
test
cmp
mov
jmp
jo
sbb
scas
xchg
push
mov
andb
test
push
inc
jnp
fs
dec
or
mov
sarl
inc
jne
test
lods
cmpsl
movsl
dec
push
mov
mov
dec
pusha
inc
mov
aad
rolb
sbb
movsb
out
out
cmp
mov
incb
loope
nop
xchg
mov
mov
add
push
or
dec
cmpsl
imul
jb
pop
ja
pop
add
out
add
mov
pop
or
push
lcall
xchg
xor
ja
testl
out
cmc
mov
mov
cmp
icebp
mov
stos
stos
lock
inc
fnstenv
inc
aad
add
jg
ficomps
shrb
xor
dec
jl
mov
rcrl
add
push
xor
sbb
dec
mov
ret
sbb
sub
pop
mov
sti
or
xor
cmp
imul
xchg
imul
nop
xchg
dec
jo
mov
push
xor
out
push
dec
push
cmp
inc
nop
lcall
rcll
cmpsl
mov
notb
gs
repnz
jo
adc
shl
push
mov
incb
adc
imul
bound
xchg
push
sub
dec
outsb
pop
nop
stos
adc
out
xchg
sbb
and
loop
inc
int3
sbb
dec
mov
push
iret
cmp
insb
adcb
sub
es
lret
sbbl
mov
or
xchg
xor
idivl
lahf
ljmp
pop
jbe
jg
clc
test
xchg
or
rcrb
xor
mov
xchg
adc
das
cwtl
out
call
jbe
hlt
pop
out
cmpsl
mov
lods
lcall
xor
pop
and
sub
jns
cmp
jp
jg
xor
or
cli
xor
sbb
leave
cli
push
sti
stos
mov
cmp
repz
jecxz
cmc
adc
mov
stc
cmpsb
movsb
cli
pusha
cld
inc
sub
sub
cmp
ljmp
arpl
inc
jns
cltd
cmp
push
into
cmp
and
xchg
mov
rolb
notb
mov
fbstp
jmp
cmp
mul
movsl
fstpt
in
jae
out
mov
loopne
mov
xor
lods
push
test
jo
jno
rol
dec
ja
mov
rorl
push
jg
push
jb
sub
fldcw
xor
cli
scas
jne
out
scas
push
rep
sub
repz
pop
fadd
sbb
aaa
and
ss
std
push
out
int3
in
leave
lahf
jp
scas
push
inc
inc
cmpsb
xor
rolb
jg
sub
inc
aad
xchg
mov
jge
scas
scas
rorl
sbb
arpl
dec
and
pop
sbb
dec
xchg
pop
cmpsl
mov
mov
push
jecxz
dec
inc
ret
cwtl
mov
adc
xchg
in
dec
ljmp
bound
ret
lret
adc
subl
fisubrs
enter
stos
mov
shlb
xor
popf
xchg
or
add
inc
les
inc
imul
sbb
lods
es
pusha
push
les
in
jbe
mov
in
in
pushf
pop
xor
and
dec
in
out
iret
scas
pop
pop
enter
movsb
jbe
aas
jno
ret
inc
shll
push
add
pop
sbb
xlat
pop
pop
push
shrb
pop
fistl
jl
dec
cld
mov
mov
dec
inc
pop
push
adc
push
sub
add
mov
dec
add
idivw
dec
cmp
iret
insl
stc
lock
cmp
dec
pop
repnz
rorb
add
add
stos
lods
ja
loope
loop
mov
mov
in
push
test
je
aaa
fsub
aas
hlt
jle
inc
test
push
and
mov
mov
hlt
and
and
push
adc
call
mov
pop
jmp
adc
std
orb
stc
jmp
aad
sbb
add
dec
scas
pop
shlb
cli
lods
sub
sahf
inc
xchg
mov
xchg
dec
subl
push
dec
leave
cwtl
outsl
loope
push
int3
push
mov
dec
fisubrl
pop
cmpl
imul
or
pop
jb
mov
lcall
and
lds
inc
mov
out
xchg
pop
pop
push
rep
dec
insb
test
add
xor
iret
push
aas
push
jbe
lds
fists
out
pop
jp
jne
mov
push
jo
dec
clc
jmp
add
and
mov
add
pusha
lea
jp
pop
and
dec
jbe
add
loop
cmp
push
shrl
lods
je
adc
test
repz
loopne
pop
imul
data16
and
ljmp
inc
xchg
sbb
mov
outsb
clc
out
jecxz
loopne
fs
jo
popf
popa
pushf
fdiv
mov
pop
in
mov
lods
pmaddwd
cmc
popa
mov
pop
movsb
pop
ret
bound
xor
out
adc
jmp
cmp
sub
clc
sub
lds
ds
push
mov
xor
ds
shlb
outsl
sbb
test
fstpl
and
enter
test
sbb
ljmp
xchg
iret
test
orps
sub
cmpsb
sub
xor
aad
push
mov
adc
stc
xor
sarb
sbb
jecxz
mov
sbb
les
xchg
push
in
adc
mov
sbb
fisubs
mov
mov
enter
xor
mov
push
cltd
push
outsl
lds
pop
shl
cmp
in
cmp
xor
arpl
mov
lds
xchg
loop
add
cmc
notrack
push
hlt
adc
inc
push
inc
inc
adc
insb
dec
loopne
cld
testb
dec
aad
inc
mov
sbb
mov
jo
dec
pushf
sbb
cwtl
inc
xchg
lret
add
xchg
xchg
or
jo
fwait
das
pop
enter
and
push
outsb
out
mov
pop
jge
shrb
jmp
and
mov
out
inc
add
icebp
stos
sbbb
mov
jno
push
pop
jmp
jge
cmc
cmp
rolb
cmp
xchg
dec
ss
xor
outsl
xor
inc
cli
or
inc
into
cwtl
cltd
outsb
mov
jge
inc
clc
xor
fisttpl
xchg
inc
sbb
outsb
scas
dec
add
pop
xchg
bound
fidivrs
mov
outsb
cmp
or
pop
dec
adc
fwait
and
jbe
push
inc
mov
sahf
dec
enter
sub
loope
pop
clc
adc
rolb
pop
jo
icebp
fcmove
call
inc
xchg
lock
or
add
mov
xchg
ljmp
inc
in
dec
aaa
dec
jle
fs
sub
test
push
sti
push
sub
loope
jle
xor
out
xchg
enter
cmp
lods
mov
pop
stos
mov
push
dec
dec
pusha
or
xchg
scas
fists
inc
sarl
lahf
lret
xchg
sub
movsb
mov
nop
lods
das
push
inc
pop
fwait
repz
mov
mov
testl
mov
adc
pop
icebp
repz
in
jmp
aam
cmp
lods
lret
cwtl
stos
lahf
xor
sbb
sbb
push
aas
popa
mov
mov
cmp
mov
jmp
stc
push
das
sbbl
cmp
iret
inc
clc
repnz
imul
inc
mov
xchg
sti
dec
cmp
leave
decl
scas
repz
sti
mov
hlt
into
cmp
mov
xchg
fstp
nop
xchg
test
cld
jl
into
aaa
xor
mov
shlb
push
xchg
push
dec
sbb
cmp
lea
ds
xchg
in
in
pop
mov
insl
dec
mov
push
pop
ss
push
push
mov
mov
aaa
jae
test
mov
stos
mov
mov
cvtpi2ps
mov
add
sub
or
loop
xor
inc
out
aaa
push
jl
push
sub
xchg
push
das
or
repz
fstps
pop
jmp
push
dec
mov
cltd
shrl
mov
fyl2xp1
inc
imul
adc
push
and
pop
imul
fadd
adc
mov
sahf
lcall
jg
mov
test
repnz
push
fcoml
daa
or
popa
xchg
inc
mov
test
test
mov
inc
push
gs
pop
xor
mov
into
cwtl
loope
fstps
pop
aas
sarb
das
out
inc
pop
in
sub
cli
cmp
push
jmp
or
repz
mov
xor
loopne
push
pop
test
clc
adc
in
sbb
iret
mov
aas
add
mov
push
scas
or
sub
arpl
mov
out
or
adc
stos
rcr
cmp
aaa
cmpsl
pop
sub
scas
test
pop
rcl
nop
dec
repnz
test
mov
in
mov
pop
jo
mov
and
jmp
push
add
mov
sbb
sti
push
cwtl
sahf
pop
push
mov
sub
fsubr
push
rcll
mov
idivb
ds
cwtl
or
pop
and
sbb
mov
icebp
into
repnz
adc
adc
add
cmp
les
sbbl
inc
sbb
test
sbbb
out
movsl
inc
push
or
xchg
adc
movlps
sub
or
int
nop
mov
cmp
scas
and
xor
shlb
cmpsl
mov
aam
repz
sub
xchg
mov
mov
mov
iret
sbb
fsubs
lock
sbb
subl
cmp
loop
test
je
cltd
push
loopne
es
add
push
xchg
pop
cmp
sub
inc
in
pop
lret
push
lock
mov
ljmp
or
or
aad
mov
xchg
and
cltd
pop
dec
out
cmc
jmp
imul
test
inc
or
cwtl
icebp
loope
fdivs
pop
dec
or
mov
cli
xchg
xor
xor
inc
jns
xor
xchg
pop
inc
or
and
push
test
aam
sub
into
pop
jl
imul
sub
push
mov
idivl
jmp
jg
int3
add
dec
mov
sahf
jle
mov
insl
jo
sub
out
pop
adc
in
out
push
iret
mov
or
mov
adc
xor
adc
popa
ret
arpl
ja
test
mov
int3
pusha
outsb
xchg
xor
adc
fisubrl
out
cmp
mov
in
fldl
mov
fsubl
popf
fcomi
add
inc
out
xlat
jecxz
push
inc
push
push
shrl
or
fisttpll
je
adc
mov
filds
aaa
mov
stos
pusha
ret
push
mov
outsb
iret
mov
ss
xchg
rol
pop
test
xor
pop
sub
fstpt
pop
sahf
mov
adc
cli
imul
loopne
ja
and
lods
pop
push
popa
rorl
push
push
les
rcrb
loopne
pop
xchg
jne
dec
insl
add
inc
out
and
ret
xor
mov
inc
cmp
dec
mov
les
jnp,pn
jmp
jo
adc
or
jae
enter
imul
or
push
lret
mov
mov
arpl
sub
xchg
adc
mov
pop
sahf
push
push
repnz
aaa
fnstsw
outsb
cmp
cmp
pop
inc
int
pusha
insl
dec
cmpsl
sub
in
sbb
mov
test
fiadds
out
not
faddp
je
out
jo
push
ret
cmp
negl
jmp
jle
test
fcomip
jecxz
ffree
add
mov
test
jp
lret
mov
mov
and
cwtl
inc
pop
pop
pop
or
lret
mov
int
push
inc
out
cmp
insl
repz
shrl
scas
jae
pop
and
pusha
dec
adc
popf
sub
add
jl
xchg
aaa
lods
scas
mov
mov
movsl
fnstenv
loop
xchg
fs
gs
push
loop
sahf
sub
mov
inc
test
es
push
adc
sbb
mov
lods
xchg
jns
dec
jb
rcrb
xchg
shrb
inc
xor
es
xchg
in
inc
sarl
shrl
xchg
push
enter
add
test
fcoml
lcall
repz
pop
out
ljmp
enter
insb
pop
insb
dec
movsb
cli
pushl
in
icebp
pop
lret
push
int3
out
into
gs
mov
xchg
mov
stos
pop
dec
pop
xor
xor
imul
xchg
test
cmp
adcl
or
xlat
aas
lock
test
push
inc
mov
roll
div
xor
ds
cmp
push
cld
es
sbb
xlat
fstps
jb
movsl
addb
cmp
or
insl
xor
aas
cmc
mov
add
decl
test
xlat
jbe
bts
add
cmp
jno
pop
mov
or
xchg
ficoms
iret
pop
inc
jo
stos
dec
dec
jae
push
inc
stos
leave
dec
mov
bswap
xor
gs
xor
xchg
enter
cmpsb
add
insl
pushf
mov
mov
xchg
loope
leave
push
pop
sub
and
daa
sarb
aad
gs
inc
mov
pop
cltd
dec
int3
lret
lods
dec
sbb
mov
mov
mov
movsb
xchg
cmp
xor
cs
ds
fdivs
pop
test
cmp
xchg
cmp
mov
adcb
pop
daa
imul
fwait
rorb
adc
mov
adc
cmp
mov
pop
push
pop
nop
sti
pop
xor
cmovbe
push
and
enter
nop
inc
push
push
jmp
or
jmp
sti
imul
sbb
inc
or
or
push
scas
jne
inc
push
shlb
ret
dec
dec
or
nop
addr16
fmuls
xor
stos
mov
adc
cmpsl
bound
mov
xor
xchg
mov
inc
jno
int
ds
fbstp
dec
pop
mov
add
aad
xor
ds
loopne
into
cld
lods
pop
mov
cmp
or
popl
inc
popa
push
mov
in
out
jecxz
push
jnp
insl
ror
or
jecxz
iret
insl
jns
in
or
lock
dec
ss
dec
and
movsl
outsl
aaa
adc
add
mov
mov
dec
loope
jle
or
ja
je
jge
xchg
inc
sub
les
repz
arpl
nop
dec
mov
stos
subb
xor
cmp
push
cmp
pushf
out
mov
fisubrl
lods
lret
mov
in
aad
cmp
stos
ljmp
ljmp
ret
push
lahf
stos
mov
movsl
pop
pop
xchg
out
fnsave
and
pushf
xchg
shl
ror
adc
pop
push
push
ljmp
or
ds
jns
add
andl
mov
loope
xchg
into
push
enter
dec
cmpsl
jge
push
daa
push
cmp
xchg
in
lds
push
or
lea
and
adc
ret
add
push
xorb
mov
sub
ds
jge
jb
repz
std
out
mov
inc
mov
in
roll
cmp
testb
mov
pop
and
gs
xor
mov
or
push
test
push
xchg
leave
ds
fnsetpm(287
mov
daa
pop
fiadds
dec
adc
xor
mov
cmp
sub
cltd
pop
add
outsb
push
repz
push
icebp
inc
push
adc
or
rcrb
cli
jmp
jle
dec
push
fs
mov
stos
mov
push
lods
fbstp
mov
dec
out
dec
push
adc
shlb
inc
jae
data16
stos
es
dec
cli
aaa
push
sub
ja
xchg
sbb
lds
lock
movsb
js
aam
mulb
mov
cmp
push
mov
movsb
dec
add
iret
dec
xchg
mov
out
orl
xor
or
int
dec
std
lods
cmpsl
inc
loop
rcl
pop
jl
loop
rol
decb
movsb
xlat
xchg
js
jns
inc
iret
rorl
jbe
cmpsb
sbb
jmp
mov
adc
mov
inc
mov
ss
cwtl
push
ja
sub
mov
jnp,pt
arpl
lods
pop
addb
jecxz
mov
and
mov
dec
jno
sub
push
adc
mov
pop
rolb
je
jb
fwait
dec
mov
pop
das
xor
mov
push
adc
jo
lods
in
mov
or
mov
sahf
add
mov
call
test
jp
pop
repz
xor
data16
in
push
add
inc
jbe
in
push
pop
push
xchg
xor
xchg
mov
cmp
mov
arpl
fcoml
sbb
sahf
jl
inc
inc
jp
push
test
or
mov
fldenv
xor
adc
idivb
jg
xlat
arpl
push
xchg
adc
adc
dec
inc
or
mov
jp
popf
fsts
lahf
out
xor
jnp
daa
inc
les
lods
jb
push
fsts
xchg
fbld
loopne
or
shrl
movsl
mov
pop
dec
loopne
dec
outsb
push
fsts
mov
add
and
pop
in
dec
jne
inc
loopne
and
xchg
jne
imul
mov
fstl
xor
call
mov
in
inc
pop
rclb
pop
add
fs
lahf
outsb
aaa
pop
xchg
aaa
sub
jae
cld
sub
mov
insb
mov
je
cld
jno
and
and
mov
out
mov
xorb
jge
jmp
push
loopne
out
lcall
into
sarb
shll
daa
xor
push
adc
aam
xor
cmc
jo
incb
xorl
mov
mov
push
mov
frstor
fwait
andb
push
jae
and
pop
scas
mov
adc
mov
push
mov
mov
xchg
loope
add
add
inc
pop
cmp
aaa
test
inc
lods
sub
or
lret
xchg
sbb
pop
ja
add
loope
out
and
add
jb
aad
mov
movsb
frstor
mov
lahf
pop
movsb
and
xchg
cwtl
add
loop
mov
je
mov
cs
adc
or
addr16
xchg
fisubrl
mov
andb
test
sub
popf
or
dec
sub
and
movsl
adc
sbb
lret
xchg
or
inc
test
testl
xor
mov
hlt
cmp
je
movsl
mov
in
ljmp
xchg
fwait
bnd
push
stos
push
cmpsl
cmpsb
jg
sbb
inc
xchg
xor
fisttps
or
test
int
or
inc
adc
mov
daa
sub
ret
add
mov
mov
mov
mov
pop
xor
fdecstp
in
xor
mov
jbe
xchg
sub
shrl
aad
xchg
mov
add
pop
mov
dec
das
jo
mov
pusha
fdivrs
int
or
jbe
add
loop
add
push
mov
sbb
lock
divb
push
clc
push
cmpsl
cmpl
xor
fsts
inc
addr16
out
mov
outsl
xlat
lock
jne
mov
inc
mov
mov
mov
adc
mov
pop
imul
cmp
sbb
xchg
push
push
or
and
ljmp
out
add
dec
gs
pushf
cmpl
dec
mov
lea
add
lods
sub
mov
ljmp
add
int3
push
jo
jp
repnz
push
rorb
in
fbstp
lea
repnz
ficomps
jae
cmpsb
xor
pop
jb
cmpsl
push
sahf
arpl
inc
inc
adc
out
or
mov
sbb
icebp
mov
inc
ja
mov
in
and
outsb
cmpb
push
lret
jecxz
inc
and
aad
out
cwtl
pop
inc
ret
mov
aam
sbb
and
and
outsl
scas
and
push
mov
and
jl
add
scas
pop
xor
jae
sub
xchg
pop
clc
sub
movsb
push
mov
sbb
stos
and
arpl
dec
cmc
fildl
hlt
add
lahf
mov
test
dec
sahf
test
in
xchg
or
jae
fwait
or
add
xchg
xlat
jmp
xor
cli
pop
mov
jnp
arpl
jo
bound
push
cmpsb
mov
pop
inc
xchg
iret
lods
or
adc
mov
lock
ss
out
inc
mov
int
or
xor
xor
add
jb
out
cmpl
mov
stos
sub
arpl
rcrb
jo
adc
mov
data16
jb
xor
xchg
jns
dec
xor
sub
ljmp
or
push
mov
roll
fidivrs
stc
jmp
movsb
in
pop
mov
pusha
add
pop
in
sub
cmpsb
mov
push
mov
push
lods
jge
daa
mov
stc
stos
push
cmp
and
pop
mov
mov
or
jbe
jle
pop
rol
or
fdivl
inc
rcll
mov
stos
icebp
stc
push
mov
push
ja
pop
jno
mov
mov
data16
enter
cld
aas
loop
sbb
sahf
div
cmp
xor
adc
push
push
fidivl
ja
xor
sbb
inc
jle
cmp
imul
movsb
mov
dec
int
icebp
ja
jl
pop
jle
mov
cmp
inc
mov
dec
or
inc
jne
xchg
int3
cltd
adc
pop
insl
cmpsl
stc
inc
xchg
icebp
aas
jbe
sahf
movsl
lock
in
cltd
jns
add
clc
inc
mov
push
cwtl
dec
mov
rorl
pusha
out
add
aas
lock
dec
enter
sti
je
ss
ss
loopne
gs
das
idivb
lahf
enter
divl
mov
in
add
adc
pop
add
sahf
dec
shlb
and
rol
adc
push
fildll
push
lea
out
jbe
adcb
mov
add
xlat
mov
dec
orb
daa
jb
xchg
mov
sub
addr16
mov
pop
and
jmp
icebp
ss
mov
xor
addr16
sbb
mov
cmp
cwtl
and
out
loope
mov
popa
push
clc
mov
cmpsl
cmp
or
pop
pusha
icebp
stos
jl
inc
daa
in
dec
mov
xchg
test
cmp
dec
mov
jmp
dec
test
dec
int3
and
cld
iret
mov
js
or
jns
push
mov
and
jnp
ret
lods
sub
mov
push
cmpb
das
mov
fmul
add
mov
pop
add
int3
and
sub
in
inc
int
push
mov
pop
add
jle
xchg
mov
pop
inc
jb
mov
data16
mov
inc
sahf
add
call
mov
enter
rorb
scas
cmpb
mov
adc
xor
xchg
arpl
and
stc
jle
push
and
pop
push
sub
mov
ja
push
lods
imulb
stos
scas
enter
shrb
divb
add
inc
push
out
mov
cmpsl
and
mov
add
jne
sahf
shll
and
mov
pop
jbe
jmp
sub
pop
fs
dec
pusha
js
sub
add
adc
loop
or
xacquire
xchg
sbb
adc
or
mov
loop
sub
stc
aas
push
add
movswl
inc
xor
je
hlt
std
adc
adc
mov
jns
cmp
and
sbb
dec
js
aaa
ja
jp
add
out
sub
sbb
adc
xchg
ds
int
out
aad
ret
or
aas
data16
movb
xor
dec
dec
and
bound
xchg
add
nop
shl
ja
inc
enter
and
sahf
icebp
and
mov
ret
fdivp
adc
jmp
jb
dec
outsb
sbb
or
adc
ja
add
or
mov
in
jecxz
repz
into
and
sbb
fildll
into
lods
test
std
push
mov
addb
es
pop
loopne
xor
push
out
mov
test
out
rcl
push
in
repz
jl
not
jge
inc
push
jecxz
bswap
mov
test
fmull
clc
addr16
mov
adc
mov
or
cmc
das
aas
aam
xchg
sub
ljmp
loopne
dec
add
xor
int3
rcl
andps
add
cwtl
imul
mov
xchg
std
faddl
inc
jo
and
clc
dec
mov
inc
inc
mov
pop
xchg
call
jp
jo
mov
sub
ljmp
int3
or
pop
pop
js
mov
mov
xchg
and
cmc
and
test
imul
mov
je
nop
add
shll
ja
jg
das
outsb
inc
mov
and
push
decl
ljmp
sub
and
xlat
imul
lea
negl
mov
or
cmp
and
jno
mov
or
mov
pop
or
push
lcall
inc
and
mov
je
lret
adc
sub
jnp
or
pop
js
stos
das
popf
mov
xor
add
pop
fsubl
mov
sbb
push
into
test
jns
roll
jb,pn
movsl
clc
negl
mov
mov
mov
scas
mov
xchg
dec
enter
repz
cmpb
daa
mov
je
inc
cmp
inc
pusha
loope
sub
jmp
xchg
fucom
call
jg
pop
xor
pop
dec
shr
jmp
or
and
inc
and
mov
pop
dec
or
jo
repnz
into
inc
adc
ret
ljmp
es
std
mov
repnz
and
mov
mov
cmp
push
sbb
lea
imul
fwait
cwtl
and
fnstcw
insl
or
xor
adc
jns
mov
jb
lahf
and
les
data16
cmpsl
add
push
das
pop
fimull
cmp
mov
fstpl
sahf
ret
push
dec
enter
ss
jg
mov
add
mov
adc
mov
addr16
adcb
dec
sbb
es
fistps
aaa
fs
mov
mov
cmp
inc
aam
or
or
faddl
jle
ret
cmp
leave
pop
cmpsb
dec
sbb
fisttpll
jns
dec
outsb
or
notl
dec
jb
push
js
jg
add
mov
lods
adc
aaa
lret
xchg
dec
or
icebp
adc
pop
loopne
mov
xor
xchg
adc
popf
js
xchg
call
in
imul
inc
pop
loopne
outsl
mov
mov
test
rorl
repnz
mov
cmpsl
xor
icebp
test
scas
jmp
inc
rcl
sub
lret
or
andl
notl
and
xor
jns
shrl
inc
mov
push
sbb
lahf
loope
lret
mov
inc
jp
adc
in
jne
lcall
fs
int3
lret
js
inc
jae
bnd
fsts
and
arpl
push
fisubs
insb
sub
iret
or
aam
outsl
push
xchg
lcall
jp
sbb
pop
imul
and
mov
ret
hlt
mov
js
pushl
mov
pusha
jbe
je
fiaddl
and
and
mov
imul
subb
test
inc
pop
test
test
icebp
jne
jmp
out
lahf
arpl
test
adc
cmp
sub
sar
ljmp
adc
aad
or
jo
jp
test
cwtl
mov
imul
imull
in
sbb
and
push
lcall
ficoml
lcall
mov
je
sbb
sbb
push
and
jae
ret
adc
push
inc
jae
mov
mov
xchg
cwtl
cmp
pop
shrl
dec
sbb
mov
push
inc
mov
mov
mov
mov
int
ffreep
pop
or
xor
jecxz
rorl
jns
dec
xor
out
pusha
int
mov
rcll
jb
movsl
mov
push
hlt
inc
sbbb
stos
mov
fsubrs
loop
pop
jmp
outsb
repz
dec
inc
sub
xchg
push
nop
aad
je
adc
popa
negb
fists
mov
mov
adc
dec
mov
rorl
es
sub
divl
mov
jl
mov
fucomp
push
sbb
shlb
xchg
data16
cld
aad
mov
movsl
xchg
data16
add
mov
and
xor
outsb
enter
inc
inc
sbbl
scas
movsb
insl
push
cltd
mov
inc
mov
es
pop
mov
scas
add
out
add
dec
mov
nop
sbb
dec
dec
adc
adc
xor
adcb
sbb
ds
aas
cmp
sti
dec
inc
xor
jp
inc
popa
dec
cmp
sbb
faddl
or
push
sbb
sub
jno
fsubs
add
push
mov
push
cld
stos
in
lea
pop
fldl
xchg
fwait
jno
sti
into
scas
adc
in
inc
push
hlt
scas
jns
aaa
jno
bound
and
mov
imulb
and
push
leave
push
inc
cmpsl
inc
inc
mov
fnsetpm(287
scas
mov
andl
xor
fistps
cwtl
push
jmp
popf
arpl
and
enter
jg
ja
fcomps
pop
out
jae
xchg
daa
in
imulb
push
and
outsl
pop
js
mov
pushf
cld
mov
add
xor
shrl
and
or
jp
cmp
ja
cmpl
xchg
pop
movsl
ficomps
xor
cmp
mov
pop
push
jmp
jae
cmp
aam
into
xor
pop
cli
lods
cmp
mov
lea
ljmp
pushf
pop
ja
fldt
xor
bound
leave
pop
mov
sbb
mov
xor
gs
add
js
sbb
add
push
fidivrs
popf
xor
mov
scas
sahf
es
jnp
inc
xchg
xor
mulb
movsb
ds
jge
shll
inc
outsl
add
pop
test
movsb
mov
push
jo
outsl
enter
in
inc
cmpsl
pop
cmc
push
imul
adc
mov
jns
push
sbb
and
or
adc
jl
das
cld
pop
xchg
inc
ja
arpl
mov
insl
rclb
sbb
mov
shll
xchg
jno
dec
mov
lock
daa
loop
inc
icebp
aam
push
test
or
loope
lcall
pop
add
push
jne
mov
jecxz
pop
stc
ja
inc
aaa
sub
iret
mov
jle
xor
addr16
addr16
in
sbb
sbb
out
js
jb
dec
cmpsb
fiadds
js
int3
dec
cltd
pop
shll
dec
adc
or
cs
jbe
sti
nop
fisubrs
dec
mov
fcom
shll
out
xchg
push
sar
test
out
adc
inc
jge
sarb
mov
inc
dec
sub
adcb
shlb
xchg
add
inc
lea
clc
outsb
cmp
nop
stos
roll
ljmp
sbb
xchg
les
mov
or
pop
js
sbb
cmp
arpl
adc
fmuls
daa
popf
jmp
push
mov
and
pushf
sbb
inc
test
mov
sbb
jge
pop
or
pop
std
iret
push
xor
pop
out
xchg
stos
call
mov
cli
adc
adc
int3
aaa
movsl
mov
cmc
jmp
sti
adc
adc
lods
imul
ljmp
fcoml
mov
jmp
jb
add
shr
mov
mov
sti
jnp
pop
fsubrp
pop
imul
mov
outsl
xor
out
lods
out
mov
or
mov
nop
ljmp
jnp
lret
dec
lea
sub
imul
inc
add
aaa
addr16
mov
and
xchg
insb
xor
ja
mov
and
divl
xchg
cmp
sub
adc
cmpl
lods
cmp
out
hlt
repz
push
mov
and
mov
fsub
pop
sub
xor
add
aam
arpl
shll
push
scas
push
insb
lock
mov
test
out
fsubl
sbb
aas
fsubrs
in
aas
mov
or
popa
inc
cmpsl
pop
xlat
addr16
out
in
add
push
lcall
xorl
rcll
sub
scas
mov
cli
sub
xchg
les
outsl
shlb
int3
sub
std
jb
xlat
push
enter
in
dec
lea
movsl
cmp
lds
test
shll
or
and
outsl
or
xchg
xlat
push
add
pusha
lods
inc
sbb
rorb
inc
mov
pushf
push
shrd
sub
ret
or
pop
insl
dec
stc
fdivs
lock
push
aad
es
cli
daa
shlb
mov
jp
sbb
pop
adc
push
cmpsl
imul
sbb
xchg
int3
cmp
ret
sahf
sub
movups
out
addl
push
clc
mov
popa
sbb
sub
cld
xor
xchg
jbe
icebp
fstps
mov
pusha
jp
push
jns
or
es
sub
aam
ret
lock
rcll
test
cmp
repnz
inc
out
dec
push
loope
jmp
jbe
out
cld
push
stc
mov
fsts
shrl
adc
ja
sbb
rcrb
stc
mov
inc
icebp
cwtl
jbe
test
iret
sbb
inc
cld
or
or
dec
js
mov
mov
adc
popf
xchg
mov
pop
or
inc
mov
cmpsl
daa
lcall
sarb
mov
jmp
out
push
rcrl
in
out
mov
into
xchg
xchg
addr16
ficoml
xchg
std
sub
sub
dec
popa
and
mov
daa
cmp
in
fwait
scas
leave
sub
cmp
repz
mov
mov
xor
dec
add
mov
ljmp
xchg
jmp
push
out
fisttps
pop
pop
or
movsb
xor
cmp
aaa
rcrl
shlb
sub
mov
fsubs
sbb
fsubs
test
iret
rcl
testb
int
insb
loope
add
add
jns
movsb
cld
aaa
fs
xchg
xchg
xlat
xchg
int3
imul
inc
rcrb
and
ja
sbb
jne
arpl
mov
pop
inc
cmp
arpl
ljmp
cltd
xchg
lcall
cmpsb
loopne
clc
xchg
mov
mov
scas
adc
sbb
enter
imul
add
inc
insb
jg
es
xchg
out
push
faddl
sarl
dec
sti
cmpsl
rcr
and
xchg
outsb
mov
fisttpl
xchg
jg
inc
mov
dec
mov
shrl
inc
inc
clc
sub
mov
push
dec
jo
int3
daa
shlb
mov
inc
rol
scas
jmp
jmp
test
mov
and
subl
dec
add
das
add
mov
cmp
loopne
pop
fsubrs
loopne
dec
int
fucomip
cmp
jmp
sub
sbb
or
fstps
scas
fiadds
clc
pusha
insl
add
mov
mov
push
fsubs
into
cmp
mov
xchg
pop
leave
push
mov
mov
and
loope
dec
pop
mov
xchg
lods
lods
addl
mov
mov
xor
sti
ret
negb
ss
daa
shlb
dec
jl
out
pusha
sbb
mov
ljmp
addps
bswap
scas
das
xchg
daa
in
xchg
dec
lcall
add
jno
iret
add
or
cmp
iret
sahf
incl
mov
mov
mov
and
xchg
jge,pt
inc
pop
sarl
cmpsb
out
sbb
nop
sub
xor
sbb
dec
test
push
stos
orb
lods
mov
dec
mov
pop
mov
push
mov
icebp
push
adc
or
xchg
or
incl
fbld
xchg
xchg
pop
xchg
cwtl
cmp
roll
ret
or
std
sti
push
inc
xchg
aam
ret
cli
scas
das
pop
loopne
bound
cmp
jge
cld
out
addr16
pusha
or
idivb
pop
je
lret
cmp
and
dec
cld
test
pop
loopne
jo
add
scas
out
and
and
inc
rolb
or
cmc
outsb
sub
mov
mov
stos
rcr
stos
mov
push
add
cmp
int3
mov
cli
add
xor
adcb
test
jbe
ds
addb
pop
iret
loope
and
xchg
notl
ljmp
aad
movsb
adcb
in
popa
jp
sar
add
rcrl
loop
shrb
pushf
popf
dec
scas
cmp
and
test
lahf
mulb
es
clc
sub
imul
jl
mov
popf
mov
pusha
sbbb
push
dec
jbe
pop
dec
fldcw
xchg
pop
in
sbb
pop
stos
mov
cmp
dec
pop
jb
cmp
loop
inc
mov
xlat
dec
repz
ss
jo
std
sub
cmp
jb
lock
sbb
pushf
insb
pop
xor
stos
shr
jmp
ljmp
inc
mov
sti
pop
je
dec
lea
inc
movsb
xchg
push
scas
jae
stos
cmpsb
push
xor
mov
dec
lret
or
pushf
xchg
scas
jb
cmpl
int
dec
lret
fsts
insb
icebp
arpl
and
inc
mov
push
sbb
push
xchg
nop
insl
aas
jne
mov
lahf
mov
mov
inc
aad
cmpl
xor
pop
inc
fbld
sbb
aaa
push
xchg
jl
push
addr16
leave
and
test
pop
shl
rol
fdivs
pop
adc
cmpsl
sti
aaa
inc
mov
sahf
out
pop
jle
mov
movsl
movsb
test
add
jbe
ds
lret
push
sub
lods
push
dec
push
fstpt
and
jmp
push
adc
push
jmp
out
in
lea
into
pop
mov
popa
cs
popf
filds
dec
jge
xor
incl
loopne
xchg
in
push
movaps
push
add
test
xchg
psubusw
mov
lock
dec
out
cmp
sub
push
pop
sahf
lods
in
mov
or
cmpsl
jg
out
dec
scas
gs
out
repnz
mov
cmp
ficomps
sbb
dec
adc
mov
mov
in
jnp
xchg
or
cwtl
cwtl
mov
mov
sub
jnp
cs
add
clc
sbb
sbb
and
pop
popf
dec
out
mov
popa
adc
ret
push
ret
es
add
add
shl
rolb
pusha
aas
mov
insl
sub
aas
push
insl
mov
inc
subl
movsb
jno
and
adc
imul
loope
fs
jmp
adc
mov
mov
ret
mov
xchg
push
pop
sbb
push
mov
push
and
adc
sub
adc
add
call
fdivs
inc
jae
fcmovu
fwait
dec
fwait
jo
lods
mov
push
cmp
movsb
ret
ds
xor
cmc
xor
outsl
aam
push
cmpsl
xchg
dec
pop
je
aam
hlt
add
jecxz
iret
inc
mov
movsl
das
jo
xchg
scas
xor
lods
jl
inc
xchg
mov
enter
push
xchg
jg
in
rcll
das
mov
aad
sbb
js
jns
or
xlat
out
dec
out
jl
imul
repnz
stc
mov
xchg
fs
mov
xor
mov
push
imul
dec
js
inc
mov
outsl
mov
cmp
add
pop
int3
lret
scas
xor
mov
movsb
notb
cli
cs
adc
mov
jns
mov
leave
mov
int3
rorb
sub
cld
xchg
dec
aas
push
ret
mov
push
mov
xchg
push
std
or
or
push
adc
repz
cmp
pop
cmp
adc
loope
dec
push
add
pop
adc
pop
scas
add
popf
and
pop
and
scas
inc
jp
push
push
push
ret
mov
bound
cli
jmp
push
inc
stc
inc
mov
mov
mov
inc
xor
mov
test
sbb
insb
fmul
ds
aas
lock
das
push
mov
or
mov
jp
cmp
fs
inc
pop
test
mov
mov
pop
mov
cwtl
mov
jle
xor
outsb
mov
mull
fwait
jg
arpl
pop
lea
cmpsl
adc
iret
lret
dec
ss
mov
mov
inc
stos
jge
pop
dec
jg
or
pop
mov
and
mov
cmc
jb
push
stos
mov
repz
jo
repnz
ret
jecxz
jnp
stc
mov
ret
pop
das
sahf
lds
sbb
dec
scas
adc
add
inc
pusha
add
pop
or
push
in
add
jmp
pop
pushl
lcall
mov
mov
test
jecxz
clc
jbe
jbe
imul
dec
fs
pop
aas
into
jnp
or
adc
pop
fistl
fisttpll
enter
arpl
or
sbb
cld
or
out
jmp
xlat
data16
test
aad
dec
loopne
sbb
out
and
movsb
sbb
lock
add
sti
stos
in
adc
repnz
negl
cmpsl
pop
lcall
jb
int3
cmpsb
mov
daa
mov
fwait
mov
xor
fwait
daa
add
mov
mov
incb
imull
loop
jne
inc
adc
leave
xor
xchg
sbb
sarb
sub
daa
jns
sbb
mov
push
fldenv
lret
xorb
xchg
stc
loope
fwait
cmp
sarl
xchg
insl
fwait
repz
lret
fwait
jbe
in
add
add
inc
pop
call
or
subb
adc
test
loope
lret
lea
in
stc
cmp
inc
pop
gs
ss
mov
xor
add
rcrb
sub
rcr
pop
adc
int
dec
dec
sub
fs
jno
mov
popf
outsb
ret
inc
dec
add
jb
add
or
dec
and
sub
adc
mov
sub
adc
pop
enter
pop
cmp
ss
test
sbb
sub
cwtl
inc
mov
and
test
xchg
mov
cmp
out
repnz
push
sbb
les
dec
stc
dec
mov
mov
ret
sbb
pop
dec
les
cmpsl
nop
out
add
outsb
ret
fstpt
xchg
ret
js
test
mov
mov
fsubr
pop
mov
fsubp
mov
sub
lods
sti
cli
mov
mov
into
insb
xor
adc
xchg
outsl
addr16
fisubrs
sbb
push
jp
inc
ret
cli
test
out
lock
or
addr16
sar
sub
xchg
in
stos
fisttps
lret
add
sub
lea
cmpsl
or
cmc
jg
sub
xchg
xchg
or
and
ja
dec
push
leave
mov
xchg
ret
lock
jo
loop
jno
xchg
stc
mov
ja
lcall
xchg
adc
sub
hlt
leave
pusha
movb
inc
cwtl
dec
mov
test
push
call
loopne
dec
mov
cmp
mov
pop
mov
or
and
adc
aas
or
dec
sbb
mov
mov
adc
test
mov
notb
test
add
and
cmp
movsl
mov
push
movsb
imul
fwait
add
sbbb
pop
and
mov
dec
dec
insb
xor
fdivrp
sbb
mov
shll
adc
into
push
nop
jmp
lds
popa
sbb
sbb
and
and
lahf
stos
dec
mov
mov
stc
jno
sbb
push
mov
push
sbb
sarl
xchg
jl
mov
cmp
lods
in
dec
andl
pop
sbb
imul
jge
test
shl
sahf
or
lea
adc
add
sahf
outsl
int
in
aam
xchg
cmp
push
in
jbe
inc
mov
xchg
mov
push
stc
mov
popa
pop
mov
popf
push
cmp
test
ret
or
fs
enter
imul
gs
add
mov
mov
je
fucomip
dec
je
add
and
fdivs
pop
inc
aad
cltd
mov
gs
rclb
mov
inc
loop
jbe
movsl
scas
lds
mov
inc
mov
dec
movsb
mov
lods
jnp
mov
icebp
mov
adc
cmp
add
push
loopne
dec
mov
push
sbb
xor
fnstsw
xorl
mov
in
orb
dec
dec
push
stos
fwait
mov
pop
mov
or
and
fwait
outsl
outsb
ja
jmp
push
rol
xchg
addr16
lcall
jmp
or
dec
mov
push
push
ss
addr16
ret
test
push
fs
adc
mov
jg
stos
cwtl
jb
cmpsb
iret
cli
push
xchg
fadds
sbb
or
test
jge
fldl
or
or
fcomps
mov
push
inc
rcl
adc
fistps
push
lds
cmpsl
ljmp
loopne
push
test
fs
stos
ds
lahf
fidivl
dec
iret
sbb
mov
fmul
sub
cmpsl
push
enter
jnp
addl
cwtd
jo
inc
add
stc
mov
inc
dec
cli
repnz
and
pop
mov
inc
out
dec
add
jae
xor
ret
sbb
repnz
imul
rcrl
repz
mov
jae
test
mov
dec
add
je
push
adc
jne
jnp
push
jnp
fnstcw
jge
cltd
jbe
std
cld
cmp
xlat
cmp
jmp
out
and
in
dec
jae
sub
shll
roll
into
out
mov
jge
outsl
rcrb
je
pop
mov
lds
pop
insb
sbb
push
mov
cld
push
jae
pop
in
and
xor
fiadds
xor
cwtl
mov
xchg
add
or
mov
sub
jge
mov
imul
inc
dec
jmp
lret
clc
cmp
fs
movsl
mov
loope
sbb
adc
nop
mov
pusha
mov
dec
fucomip
imul
inc
cmpsl
inc
into
fcoms
add
pop
push
push
push
popa
test
mov
push
jbe
jmp
shr
mov
test
push
add
sbb
mov
inc
mov
pop
jns
xchg
sub
inc
lods
fistpl
mov
cld
jbe
xlat
lcall
jmp
sub
shlb
xor
repnz
add
inc
jae
push
out
aaa
cmp
pop
mov
inc
mov
or
sub
sub
pusha
sub
loopne
sub
fsubrl
out
lahf
dec
fwait
jns
pusha
or
adc
addl
mov
pop
in
test
lret
test
sahf
inc
or
icebp
jns
ja
addb
jo
ret
subb
and
les
sub
xchg
decl
daa
add
mov
mov
loop
cs
test
or
mov
nop
ficoms
sbb
lock
push
jl
dec
movsb
add
and
jecxz
mov
push
jge
xchg
push
fstpl
sbb
test
mov
mov
mov
pop
enter
out
mov
mov
dec
cmc
xchg
dec
push
jp
inc
mov
sbb
fwait
roll
dec
movsl
pop
cmpl
cmp
ljmp
jle
lods
stc
adc
jl
cmp
in
push
add
pop
mov
push
and
fucomp
ja
mov
and
dec
cmpsb
test
addl
inc
int3
push
push
sbb
loop
aaa
jne
adc
sbb
push
out
lcall
adc
adc
jnp
sub
movsl
cmpsl
stos
sbb
xchg
popf
jl
std
stc
push
outsl
sbb
aaa
add
xor
hlt
mov
jne
jo
mov
aad
sbb
inc
test
mov
xor
cli
jae
mov
movsl
xor
ds
enter
in
xor
adc
mov
sub
inc
adc
xchg
pop
insb
sarl
and
mov
andl
lds
divb
xor
mov
jle
ljmp
adc
dec
into
prefetchw
pop
fildll
ljmp
idiv
jns
fidivrs
mov
fsts
test
sbbb
mov
mov
and
adc
pop
lods
xchg
xchg
ljmp
gs
pop
bound
push
out
aad
sbb
das
dec
fadds
cmp
bound
dec
jne
outsb
sub
sub
adc
xor
je
mov
sub
xchg
loope
pushf
test
mov
jne
cmp
int
movsb
adc
adc
shll
imul
mov
inc
pushf
into
lahf
mov
push
sahf
push
mov
jne
fwait
cli
add
xor
std
jmp
inc
addb
xor
loop
adc
xchg
pop
and
jb
jecxz
cmp
xchg
push
fsubl
je
mov
cmc
outsb
loope
pop
sbbb
icebp
pop
mov
push
add
movsl
xchg
fwait
mov
push
mov
sarb
jl
sub
mov
push
mov
push
add
adc
test
mov
or
cmp
es
push
jae
imul
div
bound
xchg
jl
jne
push
mov
test
loopne
aam
jb
jp
mov
mov
mov
scas
cmpsb
mov
cli
mov
test
xor
xor
cmc
mov
setne
or
adc
fistps
in
pop
pop
outsb
dec
nop
roll
repz
jecxz
fwait
test
outsl
in
mov
or
and
add
cs
and
inc
mov
jmp
jno
sub
roll
push
jb
sbb
outsl
sub
daa
sbb
pop
inc
mov
dec
push
and
add
or
add
and
data16
jnp
into
adc
cmp
adc
mov
sbb
mov
loopne
imul
dec
outsb
add
sbb
adc
mov
das
and
outsb
or
test
jno
cltd
mov
add
cmp
addr16
xchg
fistps
ljmp
add
popf
lcall
inc
leave
sbb
movb
jg
add
add
mov
int3
test
pop
mov
push
push
aaa
add
sarb
call
sub
jl
ja
add
sbb
bound
stos
je
das
adc
das
ds
push
cmp
test
jecxz
notl
sub
call
cmpsl
pop
jg
and
adc
js
test
pop
cmp
push
lcall
jl
jle,pt
idivb
fs
mov
pop
xor
outsl
cmp
fdivrl
cli
cli
add
push
push
or
cs
or
insl
sub
adc
xchg
push
out
dec
and
notb
mov
addr16
and
inc
mov
sbb
cmpl
flds
stc
push
pop
lahf
js
jnp
ja
arpl
xchg
and
outsl
sbb
inc
jp
adc
out
jle
pop
outsb
mov
add
xor
mov
fcoml
scas
mov
rol
push
push
jmp
mov
adc
lds
mov
cwtl
rcll
in
mov
xchg
mov
fwait
int3
mov
mov
adcl
or
clc
clc
call
std
adc
xchg
jo
aas
inc
cmp
push
repz
ljmp
xchg
pop
imul
fsubr
enter
popa
adc
imul
mov
popf
cmpsl
sub
iret
or
xchg
in
sbb
and
mov
aas
dec
insb
push
mov
jl
arpl
xlat
insl
push
js
in
outsl
dec
addr16
mov
xlat
jle
into
mov
dec
pop
dec
jns
add
add
cmp
cmp
pop
cmp
jns
cmp
int3
loopew
adc
pop
lods
xchg
aaa
inc
jp
test
adc
add
sarl
stc
inc
rolb
clc
pop
sub
lods
loopne
and
xor
and
mov
out
test
loop
adc
call
fwait
insb
test
ret
xchg
push
cmp
mov
adc
xorl
popf
inc
je
jmp
nop
dec
cli
xchg
aad
iret
pop
out
daa
jb
icebp
fstpt
mov
adc
ljmp
xor
jns
inc
push
in
mov
jmp
lods
fidivs
jne
fdivrs
repz
mov
aad
add
dec
repz
pop
cmovbe
cli
pop
stos
sahf
aaa
mov
sti
scas
aad
mov
lods
pop
and
cltd
inc
icebp
rorb
push
fnstenv
mov
out
push
cmp
ds
push
rcrl
jp
mov
or
xchg
imul
icebp
shl
xchg
jg
test
ljmp
mov
jge,pn
xor
jl
sub
pop
sub
js
jae
out
cmp
sbb
or
jne
jae
and
fdivs
dec
lcall
iret
push
pop
push
pop
push
cmp
or
dec
dec
imul
cmp
mov
dec
cld
sub
test
or
orl
rorl
sbb
dec
pusha
xchg
xchg
push
in
push
je
test
push
sbbb
pop
xchg
sub
ss
mov
imul
cmpsb
adc
pushf
stc
cwtl
lods
cmc
jae
push
inc
and
push
jne
ret
mov
lcall
xchg
dec
jge
dec
pop
pop
test
mov
inc
cmp
xor
push
scas
mov
add
loopne
das
add
xchg
mov
dec
data16
lahf
jns
ja
arpl
xchg
ss
cmp
sub
pusha
jno
fcompl
inc
loope
push
scas
sub
mov
sbb
bound
rolb
fisubs
mov
push
adc
push
test
sbb
gs
repz
pop
mov
sbb
xorl
lea
dec
sbb
cmpsb
insb
xchg
push
mov
mov
arpl
fcomip
xor
or
sub
xchg
rcrb
jno
cmpsl
icebp
or
cs
pop
adc
loopne
mov
gs
pop
cmp
stc
incl
xor
add
loop
mov
mov
imul
data16
cmpsl
jmp
std
dec
ret
frstor
sbb
push
fcomi
in
iret
push
dec
fstl
xorl
fnsave
or
shl
data16
hlt
rclb
pop
cwtl
std
iret
popa
and
xchg
pusha
mov
jo
nop
dec
push
adc
jne
push
xchg
repnz
dec
ss
mov
or
mov
out
push
iret
inc
popa
xchg
fiadds
outsl
xchg
ss
xor
int
dec
dec
iret
stos
aaa
scas
jmp
sti
lret
dec
mov
data16
or
in
xchg
ret
sub
push
mov
aas
jnp
clc
clc
cmp
cmp
pop
inc
dec
rolb
xchg
pop
scas
das
dec
pop
inc
inc
dec
lahf
mov
pop
movsb
imul
mov
lcall
xor
mov
adc
insl
push
cwtl
cmp
aaa
xchg
xchg
ja
lret
insl
xchg
iret
into
out
stos
cmp
sbb
sti
or
or
jp,pn
out
int3
adcb
testl
adc
adc
leave
pop
or
mov
stc
movl
pusha
push
stos
and
fcmove
wbinvd
cmp
and
jle
lret
jle
dec
dec
mov
push
sub
mov
pop
sbb
ds
lea
lea
mov
sarb
lahf
adc
fidivs
push
aaa
sub
cmp
mov
rorl
xor
mov
popf
lcall
insb
into
and
mov
adc
push
xchg
aad
lods
mov
cmpsb
stos
push
xchg
insl
jmp
pop
gs
jns
fs
int3
xchg
lods
lcall
mov
xor
int3
mov
or
push
dec
xchg
mov
popf
pop
int
inc
push
mov
mov
sti
loop
dec
cmp
out
add
or
stos
gs
mov
adc
xchg
sbb
push
das
jecxz
scas
andb
in
or
push
mov
mov
mov
daa
bound
sub
out
mov
sub
push
push
xorb
int3
rcrb
sub
std
cwtl
dec
adc
loopne
and
adc
cmpsb
push
adc
xchg
lahf
dec
rorl
mov
push
pop
sbb
pop
std
sub
ljmp
sbb
dec
fmull
mov
pop
mov
or
sahf
push
aad
lret
dec
dec
arpl
leave
subb
daa
mov
adc
cmp
jmp
sub
add
int3
shrb
mov
rcll
fmull
loope
aam
sahf
fisubs
fstpt
dec
pop
icebp
adc
add
xchg
imul
xor
lock
jne
xchg
dec
jp
sbb
sub
scas
je
cltd
xor
inc
sbbl
ds
jecxz
dec
mov
adcl
cli
push
hlt
rorl
insb
push
jb
dec
sub
test
lcall
loop
mov
mov
push
adc
stc
mov
out
movsl
or
pushf
aam
rorl
or
imul
faddl
pop
imul
xor
es
mov
push
adc
nop
aad
xchg
or
arpl
sahf
pop
and
imulb
mov
inc
and
xchg
mov
pop
push
sub
jge
ds
divb
dec
jb
or
sbb
shl
pop
mov
lods
inc
push
and
mov
mov
imul
leave
hlt
jp
test
inc
inc
mov
orl
sbb
outsb
or
ret
cmp
jge
call
fs
rolb
pop
bound
adc
jle
sbb
mov
dec
daa
lea
mov
mov
mov
jle
mov
lods
jle
jnp
xor
js
hlt
mov
sub
cmp
inc
pop
pop
xorl
gs
sbb
ret
xchg
sbb
pop
test
mov
das
cmpsb
rclb
dec
les
lahf
dec
xchg
cmp
jae
mov
xchg
mov
pop
pop
adc
ljmp
addr16
pop
icebp
cmp
dec
sbb
jb
dec
xor
cwtl
ucomiss
je
cwtl
push
sbb
ljmp
pop
rolb
pop
fistpll
popf
lods
fs
stos
jmp
cmp
jnp
notb
imul
repz
repz
xchg
cwtl
push
cltd
xor
stc
jle
xchg
pop
in
xor
pop
dec
adcb
and
shlb
xchg
fdivs
sub
and
add
adc
inc
xchg
data16
imul
add
sub
pop
ret
loop
xor
cmp
jnp
in
push
scas
lahf
xor
mov
stos
dec
adcb
xchg
hlt
mov
jbe
mov
and
inc
inc
not
cmp
cmp
or
or
jnp
cwtl
cli
stos
xor
or
pop
add
cltd
mov
sub
sbb
sbb
nop
xchg
push
cwtl
in
roll
pop
cwtl
testb
dec
xchg
pop
idiv
push
imul
push
mov
xchg
cs
js
xor
or
imul
jno
inc
lds
add
lcall
jae
fmuls
mov
mov
add
dec
lock
sub
jmp
sbb
mov
pop
in
mov
cmp
ss
jge
push
ret
mov
and
add
in
testb
sarb
ror
inc
mov
or
push
loope
xor
aas
mov
repz
mov
jb
fiadds
xor
les
xlat
jno
push
push
xor
push
xlat
xchg
fdivl
negl
inc
xor
add
ja
outsb
fstpt
sahf
into
inc
pop
add
mov
scas
out
aaa
push
dec
jecxz
jnp
fs
cld
mov
pop
aaa
pop
dec
mov
mov
ja
fcom
mov
popf
push
xor
fs
sarb
gs
xchg
inc
nop
jbe
mov
push
dec
fcoms
call
add
aaa
mov
sub
adc
lret
aaa
data16
scas
add
hlt
pusha
xchg
outsl
adc
or
pop
in
in
sub
sahf
or
scas
fs
sarl
sbbb
and
ja
or
mov
inc
and
push
lods
sub
mov
fs
inc
out
shl
xor
outsl
lea
pop
movl
inc
repz
in
xchg
inc
jge
sub
sub
xlat
subl
push
sub
and
out
call
cmp
hlt
lcall
test
sub
stos
leave
push
int
jo
dec
mov
pop
out
mov
dec
and
xor
sarb
lds
rorb
fisttpl
outsl
and
xchg
lea
mov
ja
lahf
jle
inc
das
loope
call
icebp
sti
cmp
inc
in
lahf
mov
mov
pushf
inc
repnz
pop
mov
jg
push
xor
out
push
xchg
jbe
xchg
call
mov
fnstsw
mov
sbb
push
lret
addr16
dec
ret
adc
adc
pop
and
repz
mov
icebp
out
fsubrl
popf
bsf
xchg
mov
and
in
pop
xchg
sub
jecxz
ljmp
in
in
xor
test
xchg
popa
fs
cmc
fldenv
ja
fsts
jno
xlat
scas
lahf
sbbb
sub
add
cld
call
mov
inc
push
rorl
imul
stos
jnp
sbb
push
adc
fld
mov
or
adc
sbb
fsubp
mulb
fistpll
inc
ret
fimull
hlt
lret
inc
arpl
stos
jmp
lock
jg
inc
sbb
add
adc
in
add
or
loopne
loope
mov
jo
push
push
dec
inc
lret
pop
xchg
lcall
dec
or
push
xor
jno
xchg
roll
int3
in
fidivrs
push
sbb
jne
push
rorl
push
cli
sbb
rcrl
repz
fldl
ret
mov
add
sub
pop
cmpsl
mov
loop
icebp
dec
out
mov
jp
rorl
lret
scas
cltd
xor
ret
loopne
test
push
sbb
pop
pop
hlt
pusha
xor
std
mov
mov
add
adc
and
inc
ret
shll
push
leave
aas
jb
out
xchg
popa
inc
imul
mov
fildll
sub
pop
popf
or
sub
daa
xor
aaa
mov
inc
mov
mov
ret
xor
fmull
push
mov
js
add
inc
orb
popa
push
aaa
add
lahf
push
push
dec
fbstp
jbe
push
scas
es
xchg
add
in
sub
pushf
push
or
test
add
pop
mov
adc
or
loop
adc
arpl
call
shrl
or
and
jno
imul
add
pop
rolb
pop
test
shrb
cmp
dec
stc
and
addr16
adc
jae
rorl
pop
mov
in
xor
mov
loope
sbb
jns
jno
fwait
add
adc
pop
sbb
nop
add
in
dec
iret
xchg
cli
push
jns
mov
push
loope
stos
push
mov
sub
repnz
loope
aas
je
jp
loope
mov
mov
mov
daa
dec
inc
movsl
cmp
pop
iret
dec
or
cltd
xchg
ljmp
sti
and
movsb
aas
cwtl
pop
mov
in
insl
jmp
and
push
dec
or
out
mov
or
in
not
outsb
push
push
mov
xchg
in
lock
mov
fldcw
push
roll
and
and
aam
xor
ja
lods
and
push
movsb
enter
iret
into
pusha
int
add
or
mov
mov
dec
int3
out
or
sbb
std
scas
fcom
mov
sub
cmp
in
es
movsl
lahf
inc
sbb
or
fistpll
sti
mov
adc
shlb
sub
enter
pop
inc
lcall
and
push
enter
jge
insl
mov
cmpsl
pusha
pop
pop
or
pop
mov
cmc
jno
stos
in
sbbb
sbb
jecxz
add
mov
insb
add
out
sub
mov
jnp
lret
add
pop
mov
add
jp
pusha
mov
add
pusha
jmp
inc
mov
or
in
dec
pop
adcb
push
xchg
das
js
lea
and
mov
js
mov
out
inc
fnstsw
and
stc
int3
andl
incl
icebp
add
cmp
cmp
xchg
aam
in
jb
mov
sub
in
mov
xor
in
and
mov
out
mov
cld
mov
mov
pop
int3
xlat
pop
arpl
push
int
inc
jmp
iret
cltd
mov
xor
bound
sbb
sub
in
out
pushf
mov
cmpsb
inc
mov
mov
fneni(8087
jns
mov
popf
movl
std
cmp
call
inc
jbe
leave
mov
sub
jnp
lahf
sub
sbb
xchg
xor
adc
inc
mov
les
mov
dec
jmp
jmp
dec
and
pop
inc
pop
imulb
jecxz
testl
push
sbb
cmpsl
jp
push
sti
xor
ficoml
test
subb
inc
xchg
dec
sub
add
aad
aam
push
push
bound
out
pop
push
xchg
mov
cmp
cli
cmc
bound
lods
cmpsb
out
fwait
rol
add
icebp
ret
out
or
int
dec
hlt
push
add
dec
test
mov
mov
push
test
mov
jge
push
jp
or
sbb
sar
add
lods
mov
ds
mov
ljmp
shrb
and
jmp
ret
test
movsb
cmpl
pop
and
jb
shr
push
adc
sub
andb
sahf
stos
mov
push
and
idivl
pusha
or
dec
inc
push
cwtl
xchg
test
mov
sahf
ret
adc
test
out
mov
aam
jae
push
test
lods
xor
call
sbb
xor
sbb
ja
pop
addr16
pop
pusha
add
inc
xchg
inc
test
jae
push
daa
sahf
aam
shll
cmp
bound
mov
sti
cltd
test
filds
fisttpl
add
push
push
xor
or
dec
imul
lret
jns
mov
mov
and
leave
pop
push
or
pop
sub
addb
add
jmp
popa
pushf
cmc
adc
push
sub
pop
repz
and
cmp
xor
pushf
cmp
mov
and
aas
rolb
push
insb
xor
insb
fcoml
push
sub
or
mov
mov
lds
pop
xor
jle
jmp
xchg
and
je
push
pop
nop
dec
outsl
idivl
jp
add
push
mov
rorl
call
xchg
jmp
testl
and
lret
and
dec
shll
ja
adc
jo
rorb
add
cmpsl
jno
repnz
insb
inc
pushf
ss
inc
mov
faddl
adc
adc
or
push
jno
rcl
data16
aaa
push
lds
sub
xchg
dec
mov
mov
jmp
stos
arpl
in
ret
rclb
sub
pop
xor
rcr
pop
adc
and
loope
cmp
adc
enter
mov
lods
enter
mov
iret
and
int
data16
adc
jmp
xchg
fldt
xchg
js
shl
mov
mov
rcrl
insb
mov
lds
pop
add
in
xchg
icebp
inc
lret
dec
insb
dec
stos
adc
jns
subw
dec
mov
and
into
jp
mov
lea
cmp
test
dec
outsl
jo
adc
mov
cmpsl
lcall
icebp
lcall
stc
inc
mov
ljmp
inc
add
pop
cld
out
ss
loopne
outsb
shlb
pop
mov
sub
or
cltd
mov
sbb
adc
imul
outsl
pop
sbb
test
xorl
je
loop
sub
jb
and
cli
popa
or
aam
insb
mov
clc
push
and
and
icebp
and
mov
mov
sbbl
pusha
mov
pop
imull
jno
fsubr
and
dec
leave
or
inc
xor
jmp
movsb
xchg
fistps
inc
and
add
lds
pop
das
je
in
mov
test
jge
mov
lds
lds
or
sti
subb
je
fsubrs
jne
dec
pop
sub
jno
clc
in
inc
hlt
add
pop
clc
push
repnz
out
sub
ret
xchg
addl
and
fdivl
repnz
xchg
into
test
repnz
xchg
mov
xor
mov
in
sub
add
std
inc
push
es
mov
leave
cwtl
pop
jp
lea
dec
sub
sbb
add
jb
add
sti
sbb
pushf
fs
inc
dec
mov
cmpsl
mov
cltd
sahf
pop
adc
mov
cmp
mov
lret
push
repnz
cmp
addr16
cmpsl
mov
add
loop
mov
div
push
dec
pop
jp
or
imul
scas
xchg
mov
pop
mov
and
icebp
mov
je
mov
pop
xor
push
rorb
call
andl
xchg
jne
sti
jmp
push
mov
sub
clc
int
mov
into
stos
pop
lea
mov
aaa
imul
ficoms
jbe
jno
imulb
push
addr16
pop
ss
sbb
add
sbb
mov
arpl
sbb
cmpsb
mov
pop
out
jnp
call
or
ljmp
sbb
lock
ret
dec
inc
adc
xchg
dec
mov
mov
dec
cmp
inc
add
cmp
xlat
aam
addr16
mov
js
adc
jg
xchg
mov
pop
push
inc
add
rcl
lahf
adc
stc
mov
sbb
dec
cmp
xchg
pop
sub
es
mov
hlt
sub
in
push
and
cmpsb
int
add
adc
outsb
dec
aam
mov
or
int3
cmp
adc
and
mov
mov
aas
mov
add
or
adc
jbe
add
jp
cmp
data16
inc
mov
nop
test
cwtl
pop
or
sub
mov
nop
fcomps
mov
aaa
lret
sahf
and
ljmp
mov
mov
out
mov
dec
xor
xor
idiv
leave
jmp
xor
lahf
jae
or
push
insb
xorb
cwtl
xchg
out
push
dec
add
imul
add
bound
lds
jge
popf
dec
fldl
push
and
pop
test
mov
cld
js
js
decl
mov
push
push
das
fisttpll
xor
ret
call
bound
sub
int3
push
lret
sbb
sahf
sbb
outsb
in
sub
mov
cmc
lods
xchg
dec
mov
push
mov
add
push
dec
cmp
push
inc
shll
jbe
dec
loop
aam
test
jecxz
rclb
xor
lods
push
test
pop
mov
adcl
retw
cli
cmp
loopne
test
into
sbb
ret
outsb
push
xor
push
out
sahf
and
push
xlat
imul
pop
mov
adc
sti
aas
jo
leave
mov
js
xchg
and
aad
xor
shll
jns
roll
enter
sub
shr
push
enter
cmp
push
mov
inc
mov
repnz
outsl
pusha
add
mov
pop
fldcw
cmp
and
xor
inc
movsl
ror
xor
cltd
mov
imul
pop
mov
sbbb
add
jo
sahf
aaa
mov
mov
jbe
add
rclb
xchg
cmpsb
inc
lods
adc
stos
hlt
cmp
mov
test
divb
xchg
add
xchg
lahf
outsl
test
scas
insb
movsb
add
dec
dec
aas
jbe
mov
roll
leave
in
adc
in
and
sbb
out
mov
jg
push
sub
cmp
dec
test
orb
lods
ret
mov
ss
bound
fsubl
icebp
into
xchg
xchg
jl
in
scas
cwtl
cltd
mov
dec
sbb
out
add
jge
test
lods
and
cmp
aam
ss
push
pop
fistl
cmp
ret
push
es
or
incb
adc
pop
call
insl
daa
add
adc
push
jns
outsl
mov
dec
rcl
in
push
loope
xchg
ljmp
loope
cltd
jbe
cmp
repnz
xchg
aas
adc
push
hlt
inc
sub
jns
adc
out
iret
aaa
insl
mov
dec
sbb
push
cmp
test
inc
icebp
daa
adc
sub
fwait
or
test
jle
cmp
inc
sbb
xor
xchg
ja
mov
sar
mov
popl
add
mov
mov
jmp
es
and
jae
cmp
jno
dec
cmp
shl
xor
mov
mov
lret
jle
xor
mov
das
adc
lock
adc
arpl
bswap
or
cmp
mov
xlat
push
clc
mov
fnsave
mov
dec
imul
imul
mov
and
out
lods
push
mov
fwait
push
push
jo
not
jge
or
fistl
sti
push
add
and
sub
std
ret
xchg
push
dec
mov
fxch
cmp
popa
push
loope
mov
fwait
or
outsb
out
inc
lea
dec
leave
sbb
push
lret
mov
add
cs
clc
push
xchg
sbb
dec
cmpsb
daa
es
lods
lods
mov
dec
ljmp
daa
xchg
fsubrs
fidivrs
stos
mov
lcall
sub
fidivs
mov
jb
ficompl
fcmovbe
push
mov
mov
in
pop
push
lahf
cwtl
xor
movsl
pop
dec
pop
inc
fstpl
out
or
mov
sbb
aad
lea
lock
pop
sbb
mov
sub
getsec
cltd
cmp
and
xchg
nop
es
repz
mov
gs
jo
jne
in
out
inc
pop
imul
inc
daa
es
xchg
imul
add
jl
sub
in
or
imul
jo
or
mov
add
and
push
and
es
xor
rol
into
lret
in
stc
add
mov
loopne
cld
add
insl
xchg
cmc
subb
pop
daa
xor
push
insl
insl
scas
mov
jl
jle
pop
fidivrs
bound
mov
int3
shlb
xor
xchg
jge
mov
ds
cmp
and
mov
lahf
adc
sub
sti
int3
out
das
popa
mov
pop
inc
dec
fucomi
fisubrs
jmp
adc
ss
mov
or
dec
jg
gs
lock
mov
push
sub
add
mov
lret
ret
aaa
out
enter
jge
loope
mov
and
add
pop
mov
sti
sbb
push
int
lea
pop
icebp
shlb
push
xchg
fstl
fwait
test
std
lock
mov
mov
ret
push
adc
out
mov
popa
dec
xor
scas
add
repz
fstpt
in
bound
xchg
jg
mov
test
adc
fwait
xchg
sbb
add
mov
loopne
out
mov
mov
adc
inc
in
jl
lret
mov
testl
inc
clc
sub
addr16
fstpt
insl
cmpsl
pop
xor
in
fwait
loope
mov
mov
mov
mov
aas
popf
enter
push
push
push
nop
jae
mov
adc
jae
subb
outsl
fistps
jle
xor
aaa
add
dec
scas
clc
int
mov
inc
fnstsw
insb
inc
and
daa
pop
sub
sub
mov
lods
add
and
clc
jno
cli
xchg
outsl
jae
daa
in
push
cmc
call
pop
mov
in
jnp
dec
addr16
sub
mov
mov
push
cmpsb
sub
cmpsl
js
mov
push
sbb
and
pop
jbe
and
pusha
add
sbb
lret
sub
in
cltd
repnz
cmp
cmp
cmp
mov
leave
push
hlt
xchg
push
mov
pop
push
shll
out
mov
push
pop
xor
rorb
cmc
xchg
or
or
mov
jp
lods
pop
daa
xchg
push
cmp
cmp
ljmp
mov
clc
cltd
xchg
popf
dec
adcl
pop
sub
dec
and
imul
sub
jnp
fs
push
push
test
mov
push
jge
adc
push
xchg
repz
push
push
add
fs
sahf
xor
cmp
lods
push
lds
and
idivb
test
pop
aaa
icebp
lds
ret
xchg
scas
sbb
mov
mov
jno
add
sub
push
pop
adc
repnz
push
xchg
sub
xor
xchg
xor
incb
cld
test
pop
inc
or
mov
dec
sub
shll
cmc
and
clc
dec
sbb
xchg
adc
fstpt
in
mov
or
orl
out
push
es
or
mov
push
stos
fnstenv
mov
lock
mov
aam
pop
cmp
push
cmp
leave
xchg
sbb
and
jmp
sti
mov
xorl
loope
je
lcall
imul
sbb
rcrb
leave
addr16
hlt
xor
lret
or
ds
lret
push
scas
push
test
rclb
sub
inc
mov
das
cmp
inc
outsb
mov
add
shr
loop
xchg
add
loopne
cmp
mov
mov
dec
pushf
xchg
lahf
aas
mov
add
cmp
ds
cmp
rol
push
decb
xchg
in
int3
and
pop
mov
push
fnstsw
push
stc
cwtl
cwtl
bound
sbb
and
mulb
sbb
add
jne
and
enter
test
xlat
repz
test
jecxz
push
out
scas
sub
int3
call
push
push
aad
scas
push
jp
mov
aaa
popa
stc
nop
cmc
fisubl
pop
scas
iret
push
movsb
popa
mov
jecxz
aaa
cltd
dec
fidivrs
loop
in
mov
sarl
or
lods
inc
cmpsl
or
cmp
ljmp
mov
push
cmp
cmp
nop
insl
inc
popf
ljmp
mov
inc
mov
xchg
out
imul
addb
pushf
pop
subb
adc
outsb
xor
in
inc
roll
adc
sub
push
jns
push
lret
dec
cmpsl
test
popf
lods
add
adc
mov
aam
push
mov
xlat
mulb
adc
jno
imul
out
jnp
in
cs
fists
inc
xor
push
ljmp
xorl
aas
stos
xor
lea
iret
dec
xchg
push
out
js
psrad
inc
push
and
sti
jecxz
adc
sub
xchg
mov
mov
lret
mov
pop
aaa
dec
pop
lahf
push
repnz
leavew
aaa
test
cmpsl
in
movsb
shl
sbb
xchg
cltd
inc
add
inc
xchg
out
loopne
inc
pusha
daa
sub
inc
aaa
push
in
jne
or
mov
or
xlat
ljmp
subb
shlb
scas
xor
mov
mov
push
jl
nop
shrl
je
int3
mov
mov
cmc
xchg
mov
add
addb
cs
stos
push
lods
repz
shlb
mov
mov
cmp
daa
inc
hlt
xchg
xlat
or
lds
xchg
lock
in
push
icebp
out
shrd
mov
pop
push
adc
shlb
mov
cltd
mov
sub
es
lods
subb
shl
jnp
scas
xor
and
push
mov
test
mov
inc
imul
andl
stc
insb
stc
mov
or
mov
aad
cltd
ret
cmpsb
cmp
insl
xchg
stos
es
add
inc
jae
mul
mov
js
pop
ja
loope
scas
jp
aaa
fistpl
sub
xchg
xor
sbb
ja
addl
or
fdivl
jle
rolb
push
int3
add
hlt
cmpsb
shrb
sahf
mov
dec
and
sbb
scas
sbb
and
jmp
dec
clc
or
xchg
pop
push
ljmp
cld
je
cs
and
sbb
xorb
iret
out
lcall
mov
pop
sbb
push
xlat
dec
in
outsb
aad
xchg
xor
sbb
addr16
int3
jg
jmp
lds
inc
cmp
xchg
fldcw
sar
shrb
push
faddl
sbb
mov
and
sub
cltd
cli
loop
add
fistpl
adc
sbb
or
aas
push
ds
and
cli
lock
or
xchg
jmp
aaa
mov
cld
arpl
xor
push
pop
and
push
sub
idivb
mov
mov
je
mov
inc
mov
xlat
or
data16
xchg
mov
in
iret
fxch
movsb
cmpsb
and
sub
mov
adc
sub
add
sbbb
out
add
repnz
in
or
sub
stos
mov
inc
js
sub
leave
loop
mov
sti
fstp
mov
lock
addr16
lods
push
subl
pop
ret
jg
lea
addr16
or
add
cmpb
js
pushf
jle
push
jmp
xor
shrl
jle
in
pop
xchg
push
and
ss
inc
cli
xchg
cmc
pop
adc
mov
mov
mov
inc
sub
bound
insl
mov
dec
inc
mov
jns
pop
jbe
mov
or
ss
jecxz
mov
pushaw
add
imul
shll
insl
cli
or
sbb
jmp
aad
lahf
pop
or
arpl
push
call
hlt
outsl
cli
addr16
add
test
dec
lahf
mov
movsl
lahf
cmc
std
popa
leave
adc
outsl
dec
pusha
je
inc
arpl
aas
cmpsl
out
mov
ror
sub
or
mov
dec
adc
stos
imul
imul
xchg
les
rorl
pop
int
pop
mov
test
fisubs
push
or
shlb
pusha
inc
xor
cmc
jo
sbb
jecxz
mov
sub
sbb
add
lea
sbb
and
sti
inc
mov
rcll
aad
mov
fdivrl
dec
mov
adc
cmpsb
dec
jecxz
sbb
jle
mov
pop
and
dec
push
mov
jmp
lret
xchg
mov
pop
cli
in
mov
imul
pop
xlat
lahf
int
add
lods
xor
lods
pop
sbb
add
dec
lock
cmp
mov
jae
jb
sbb
mov
dec
sub
mov
and
jnp
imul
into
mov
in
rcr
adc
xor
push
cmpsb
mov
mov
outsb
adcb
pop
mov
pop
popf
pop
call
out
stos
inc
cmp
pop
push
pop
sub
mov
aam
jb
push
pop
mov
mov
mov
mov
aam
pusha
pop
shl
sahf
jb
xor
jbe
inc
sbb
xchg
mov
adc
loop
cmpsl
xchg
xchg
mov
cltd
jg
sub
pop
fildll
stc
adc
movsl
mov
mov
sbb
inc
sub
icebp
xlat
cmp
fdivrp
enter
pop
or
hlt
test
pmullw
inc
mov
fst
mov
and
stc
aaa
xor
jp
sub
push
fiaddl
sub
adc
aas
pusha
scas
dec
pushf
fstpl
and
sbb
test
lcall
adc
sbb
ret
out
repz
sub
clc
mov
cmc
lcall
pop
mov
xor
lock
scas
mov
aam
or
das
cmpsl
cmc
je
arpl
pop
nop
jne
out
mov
arpl
shll
mov
insb
ret
cmp
mov
lods
test
call
mov
icebp
push
pop
xchg
sub
call
push
negb
inc
gs
fwait
mov
inc
push
adc
fwait
add
insl
fdivr
imul
rclb
jecxz
cmc
ds
or
es
and
ret
adc
es
lret
push
cmpsl
adc
cmpsl
cmp
xchg
push
sub
ret
aas
mov
or
cmp
int
and
mov
cli
or
push
dec
dec
nop
xchg
mov
mov
jle
outsl
iret
loope
lret
std
stos
lock
add
movsl
xchg
aad
andl
pop
cld
mov
xor
push
aas
cmp
imul
jle
shrb
incb
test
jo
es
sub
xchg
lods
mov
add
loop
and
push
cmp
out
rcrb
sbb
shlb
ss
scas
ss
out
scas
outsb
scas
loop
daa
mov
mov
test
adc
aam
mov
sub
dec
ja
in
jecxz
fs
pusha
dec
pop
orl
lods
mov
xchg
pop
jp
mov
loop
lods
fstpt
mov
dec
in
and
inc
lds
push
es
loop
adc
call
jno
movsb
arpl
fisubl
cltd
xchg
out
mov
fisubrs
cmp
sbbb
dec
add
cmpsb
sub
push
jp
pop
mov
adc
scas
dec
mov
mov
je
hlt
xchg
lds
add
ret
imul
xor
lahf
xor
clc
lods
xor
mov
cmp
pop
jne
stos
call
push
xchg
fstpl
clc
xchg
adc
sahf
inc
test
pop
testb
testb
lock
or
int
add
insl
sbb
test
pop
rolb
sub
test
fistl
mov
lcall
jo
psrlq
push
push
mov
jle
es
and
cmc
push
and
adc
lock
shlb
repz
mov
xchg
outsb
jns
aaa
inc
enter
mov
mov
rcrl
jne
push
imul
repz
data16
jae
aam
sti
jbe
lret
jge
aad
sarb
inc
push
call
dec
mov
pop
cmp
out
lret
das
out
out
cltd
push
cmp
sbb
fdivl
call
mov
out
filds
adc
adc
sbb
into
jmp
add
push
ret
insb
dec
dec
mov
fcoms
jecxz
fmuls
scas
sub
ret
add
clc
pop
add
jle
push
ret
rcrb
fldcw
jle
cmp
lahf
mov
pop
arpl
jle
dec
push
cmp
mov
xor
fstpt
xor
sub
je
push
mov
inc
jns
fsubr
mov
sub
xor
pop
mov
out
sti
leave
sub
cmp
dec
push
pop
xor
daa
imul
jb
xchg
lods
js
pop
lock
fsubrl
movsl
pop
or
loop
inc
inc
cmpsb
lds
mov
jecxz
call
mov
rcrl
cld
lods
fs
mov
testb
sub
imul
loop
or
add
adc
sub
push
push
pop
xor
pop
pop
mov
fcmovbe
push
int
cmp
mov
movsb
mov
dec
repz
cmp
loopne
or
shrb
inc
add
add
scas
pop
add
idivl
and
mov
in
fidivrs
mov
pop
mov
out
adc
mov
adc
int
mov
sti
sub
repz
repnz
mov
xchg
dec
xor
out
fisubl
call
mov
scas
frstpm(287
push
or
scas
pushf
adc
lret
repnz
inc
aas
mov
sahf
jnp
fistpll
mov
push
faddp
mov
insb
sbb
std
dec
push
inc
out
adc
add
loop
sarb
jl
repz
sub
outsl
mov
push
jl
rcrb
sub
pop
mov
std
jmp
sbb
mov
fucomip
sarl
mov
je
jge
shll
cwtl
jns
sti
jno
inc
ds
adc
pop
or
out
push
daa
adc
les
test
cmpsb
iret
les
jbe
xchg
popa
ja
sub
stos
lds
adc
add
and
inc
add
jne
loop
pop
and
out
dec
pop
or
push
test
inc
in
and
and
dec
cmp
fsubrl
mov
fstpt
xchg
sub
mov
ror
in
sub
push
cwtl
push
adc
add
aad
shrb
push
jb
pop
push
dec
ret
or
adc
in
mov
aas
jmp
lock
repnz
dec
rcrl
daa
inc
jns
mov
xchg
mov
mov
sub
iret
sbb
push
sahf
ficomps
hlt
mov
dec
mov
fsubs
or
dec
xor
mov
pop
pusha
xchg
mov
cmp
adc
fwait
test
lret
sbb
mov
add
xchg
mov
movsb
mov
aas
xchg
add
xor
cmp
test
sbb
aaa
push
or
out
dec
push
data16
incl
lock
jmp
notl
pop
or
mov
or
push
mov
add
cld
lret
inc
in
dec
add
push
adc
cwtl
cwtl
xchg
repnz
out
push
push
push
insl
arpl
fcmovb
inc
inc
inc
mov
aas
push
cmp
fisubrl
adc
scas
push
xchg
mov
adc
pusha
cmpsb
js
mov
lahf
ds
push
mov
cli
xor
es
mov
stc
sub
call
inc
dec
cmc
test
xchg
outsb
pop
mov
cmp
hlt
rcrl
aam
pop
movb
or
jns
std
idivl
lods
cmp
xor
push
mov
test
add
jmp
mov
xorb
fs
es
and
adc
lock
adc
xchg
aad
icebp
mov
outsb
adc
std
mov
jnp
loopne
sarb
insl
xchg
fadds
mov
ljmp
cmp
sbb
jmp
xchg
add
lock
mov
inc
scas
out
xor
pop
ljmp
iret
push
push
pop
bound
xchg
lret
inc
in
movsb
xchg
loopne
in
push
xchg
xchg
insl
push
xchg
ret
imul
jle
lcall
std
pop
or
push
inc
movsl
adc
dec
jo
xor
je
xor
imul
pop
dec
pop
mov
xorb
jae
aad
mov
mov
sub
jbe
add
sub
sbb
in
cld
lahf
pop
lods
dec
int
xchg
divb
outsl
mov
stos
roll
dec
cmp
leave
aas
insl
movsl
add
add
insb
dec
fnstsw
mov
push
xchg
or
jmp
loop
aad
add
mov
outsb
add
icebp
xor
adc
mov
push
add
inc
xchg
arpl
xchg
orb
adc
adc
dec
aad
imul
mov
jae
call
lods
and
loopne
cli
jge
xlat
or
int3
rorb
sbb
sahf
pop
jmp
daa
pop
cmpsb
push
mov
dec
mov
xchg
movsb
xchg
sbb
pusha
xor
out
ljmp
ds
fwait
je
pop
xor
cmp
movsl
inc
jle
ds
add
push
iret
dec
dec
stos
or
sub
add
addr16
jne
imul
cmpb
aas
cmp
cmpsb
fidivl
xor
test
sbb
lods
movsb
outsl
shll
dec
std
or
lods
imul
adc
aaa
es
push
movb
jecxz
mov
bound
popa
add
pop
stos
xor
mov
jno
push
xchg
mov
rorb
cmp
incl
jae
in
cwtl
rorl
dec
mov
loope
das
dec
mov
pushl
test
sbb
and
pop
shlb
lock
sub
mov
inc
cmpsl
mov
mov
mov
jo
jae
push
and
mov
sub
jbe
insb
jecxz
cwtl
xor
movsl
movsb
sub
jno
xor
mov
mov
mov
je
les
lret
out
call
cmp
js
in
xor
movsl
fsubp
mov
rcrb
mov
bound
into
sti
or
mov
fistl
insb
jle
popa
xchg
adc
test
lods
push
push
repnz
aam
lret
sub
ret
pop
popf
pusha
add
aam
inc
cltd
inc
xchg
xchg
mov
cwtl
inc
pop
popa
and
out
ret
mov
loop
insl
fsts
aam
daa
jge
xchg
addr16
and
mov
es
lret
mov
mov
scas
les
mov
jmp
pop
in
mov
mov
popf
or
xchg
cmp
lods
aaa
mov
je
mov
inc
orl
jle
lret
lods
jg
sub
lcall
push
out
rolb
cmp
cmp
aas
cmp
call
test
arpl
icebp
push
mov
xor
lds
aam
fmuls
xchg
gs
call
push
inc
movsb
push
mov
push
pop
pop
xlat
adc
out
mov
imul
pop
xchg
cld
out
cmp
retw
xchg
cmovl
aaa
inc
mov
ljmp
cwtl
jle
or
nopl
cmp
mov
imul
push
lock
jl
cmp
sbb
mov
xchg
jg
add
dec
test
fists
lret
mov
gs
test
pop
sub
pop
jno
dec
jle
test
xor
jl
aas
cmp
popa
add
gs
inc
adc
mov
das
jbe
pop
lds
sub
mov
test
dec
mov
ret
xlat
pop
scas
aad
bound
mov
loop
test
mov
mov
inc
xor
mov
mov
adc
mov
cmc
rorl
jno
jg
loopne
outsb
push
lret
int
sub
std
mov
mov
movb
push
add
mov
push
push
adc
dec
xchg
jp
xlat
out
ds
out
and
ret
cmp
jnp
lds
jmp
mov
ljmp
xchg
shrl
js
xchg
sbb
lods
fbstp
lcall
pop
push
btc
sti
pop
js
sbb
outsl
cwtl
fcomps
shll
mov
xor
rcrb
push
cmp
ret
sub
xor
pop
xchg
lds
orl
jge
js
fwait
mov
test
insb
inc
lea
adc
mov
pop
aam
push
sbb
ss
nop
dec
imul
fidivs
lds
cld
out
add
stos
aad
addr16
int3
aas
cs
inc
and
mov
sbb
push
lret
outsb
jl
out
dec
shlb
in
mov
ss
mov
into
test
lahf
into
xchg
aaa
hlt
insb
inc
pop
lret
insb
or
std
imulb
lods
es
mov
pop
stos
mov
idivl
mov
adc
mov
adc
cmp
sub
cmpsb
xor
pop
cli
fiaddl
sbb
xchg
or
daa
mov
sub
or
cs
pop
gs
mov
xchg
jb
dec
dec
dec
mov
fld
adc
sub
mov
into
sub
push
int
mov
test
sbb
adc
sbb
xchg
inc
sbb
pop
mov
pop
ss
es
mov
xchg
xor
call
dec
push
mov
int3
push
stos
hlt
push
lahf
leave
pop
ds
sub
jo
mull
jle
push
out
scas
in
out
xor
fdivl
into
push
xor
popw
push
insb
test
int
fsubrl
ficoms
lock
ss
int3
cmp
pop
jb
shr
mov
xchg
cmp
inc
sub
cmp
mov
push
insb
out
outsb
mov
scas
ss
outsl
pop
je
rcll
jns
cmp
xchg
sub
jg
cmpsl
rorl
or
test
cwtl
imul
jb
mov
mov
test
jp
fldenv
cmpsb
add
pop
stos
xor
xor
iret
std
mov
daa
inc
fdivl
out
jbe
xchg
jno
int
sub
pop
test
mov
int
fdivl
xchg
sbb
dec
insl
test
cmpb
fdivr
mov
mov
add
movsb
test
loop
cmp
fidivl
and
out
repz
pusha
push
mov
add
and
add
decb
cmp
enter
fdivr
lods
ja
sbb
mov
scas
dec
push
jg
movsl
mov
mov
jnp
dec
pop
fwait
mov
fs
or
mov
aaa
inc
mov
push
adc
or
sbb
insb
ja
movsb
rcrb
or
movb
ds
in
pop
aaa
ss
stc
imul
ds
stos
and
call
lret
pusha
mov
aas
mov
insb
inc
xor
jg
stos
jg
std
mov
and
and
cmc
pop
dec
stos
and
std
in
push
mov
push
mov
pop
mov
and
mov
xor
adc
sub
inc
ss
addl
lahf
es
data16
ret
mov
aaa
and
mov
push
das
xchg
sarb
std
dec
xchg
sub
or
jno
push
pop
adc
sbb
lods
mov
push
call
mov
lods
inc
sbb
out
aad
push
aam
xchg
push
subb
dec
jbe
out
aad
lea
add
jne
sub
mov
icebp
pop
jae
xlat
out
sub
ret
pop
test
loop
les
pop
pop
in
xchg
or
xchg
test
push
sub
std
jne
pop
aad
add
jge
mov
out
mov
ss
xor
mov
mov
imul
call
ss
aas
imul
mov
jo
aad
repnz
pop
int
sahf
add
jno
jns
cli
mov
dec
lcall
mov
lock
push
fstps
arpl
in
lahf
push
add
movsl
clc
xchg
notb
and
push
loopne
push
mov
mov
sarb
mov
hlt
mov
outsb
jo
data16
mov
lret
jne
push
pushl
jle
out
mov
stos
and
adcl
insb
xor
imul
test
hlt
stos
incb
mov
fcomi
call
mov
adc
in
sub
cmp
mov
test
cld
es
mov
stc
in
pushf
scas
xor
xchg
xor
fucom
daa
shll
xchg
je
pop
addr16
mov
fwait
dec
in
jne
shlb
lock
dec
jecxz
cmpl
mov
xchg
jne
in
push
push
push
repz
out
pop
xor
push
push
and
lea
inc
ss
inc
mov
jae
mov
not
mov
fbstp
popf
jmp
movsb
jne
inc
je
push
sahf
cmc
cmp
mov
lcall
dec
popf
dec
push
subl
push
scas
push
popf
nop
inc
ss
ret
jge
pop
mov
pop
xchg
in
sti
jae
jp
mov
hlt
icebp
inc
push
mov
iret
mov
insl
into
movsl
mov
test
adc
cmp
jae
pop
orb
outsl
enter
pop
insl
test
adc
and
imul
ret
enter
xor
pop
mov
mov
or
jno
jecxz
dec
inc
ds
fidivs
mov
repz
mov
push
jmp
pop
bound
andl
jne
pop
mulb
mov
push
jns
lods
and
adc
ds
repz
sbb
movsb
push
repnz
xor
pop
and
push
mov
push
jns
in
outsl
shl
cmp
sub
movsb
xchg
adc
cld
dec
jae
xlat
cs
mov
or
cmpb
scas
sub
push
push
iret
and
mov
lods
xor
jp
lcall
stos
cmp
push
int
in
scas
aam
mov
push
and
loop
mov
inc
sarb
scas
jmp
ds
int3
xor
mov
insb
push
cmp
loopne
loopne
stos
test
sbb
and
data16
sbb
loop
xchg
popf
inc
in
or
jecxz
mov
pop
sub
test
mov
test
aas
add
xor
mov
mov
clc
dec
jo
mov
test
add
adc
push
jno
scas
andb
es
cmp
pop
mov
sub
push
outsl
scas
and
subb
std
mov
sub
insb
xor
int3
sbb
add
mov
icebp
out
jb
mov
es
lea
cld
ret
imul
mov
mov
inc
loope
test
and
dec
jle
cmp
sbb
adc
push
nop
xchg
jl
lcall
xchg
add
jg
fcoms
decl
rol
imul
jno
pop
add
mov
adc
arpl
mov
inc
rcrl
dec
add
insl
andl
push
jb
cmp
leave
and
negb
in
mov
add
xchg
call
lret
cwtl
rcll
add
lods
das
pop
shll
test
dec
call
mov
xchg
ret
push
jmp
nop
mov
dec
ss
lods
das
pop
pop
or
ss
outsb
insb
sub
adc
xchg
cmpsl
call
jb
pop
mov
or
les
stos
ret
repnz
pop
or
push
shlb
inc
pushf
inc
push
cmp
fnsave
dec
cmp
mov
sbb
sahf
inc
inc
pop
xor
jb
mov
std
into
andl
mov
insl
mov
cmpsl
cli
mov
loop
jecxz
sbb
inc
shlb
test
es
mov
mov
std
pop
andl
sub
inc
sbb
push
loop
mov
jp
cmc
faddl
push
xchg
xor
sub
inc
fwait
mov
in
cs
addr16
leave
xchg
jmp
dec
pop
push
pop
add
jne
push
xor
mov
sbb
es
cs
rcll
adc
lock
ret
pop
iret
lcall
sbb
inc
pop
scas
lock
test
pushf
fisttps
xchg
adc
dec
pop
test
and
or
or
stos
pop
psrld
sub
lahf
mov
repnz
mov
sahf
sub
je
popa
fbld
sbb
in
testb
aaa
pop
mov
mov
inc
mov
in
bound
adc
mov
rcrl
push
or
and
pop
inc
and
ficomps
mov
jge
ja
cmp
xchg
fidivs
testl
mov
mov
sbb
ret
or
or
xor
sbb
lods
test
test
fisubrs
pop
xlat
pop
dec
fs
cmp
pop
dec
in
popa
pushw
call
adc
cmpsl
rep
and
inc
sub
fistps
hlt
push
xor
cmpsl
or
jp
ret
call
mov
jb
pop
loopne
pop
aas
xchg
push
aam
pop
mov
xchg
imul
pop
adc
cmpsb
idivb
inc
sub
inc
lret
lea
cmpl
or
mov
jno
push
iret
mov
mov
inc
xchg
scas
mov
adc
dec
mov
xchg
xor
nop
repnz
dec
out
pop
inc
ss
jne
sti
insb
and
insl
push
push
push
mov
adcl
xor
rcrl
pop
mov
out
cmp
in
or
dec
popa
cli
jbe
xchg
or
mov
in
shll
lret
jae
sbbl
aam
cmpsl
es
or
leave
pusha
cld
ret
lds
fdivr
add
dec
pop
sub
js
pop
dec
je
data16
aaa
dec
add
sub
mov
mov
fldenv
leave
out
push
scas
movsl
and
enter
pusha
jle
outsl
fbstp
test
xchg
mov
cmc
jle
data16
mov
mov
pop
or
push
pop
clc
fstpt
in
rcr
jl
pop
cltd
xchg
push
cmpsb
mov
repz
in
into
fdivs
inc
pushf
pop
xchg
jne
jne
or
ret
add
fs
insl
mov
in
lret
sbb
fisttpl
test
subps
xchg
jecxz
mov
rorl
adcb
xor
fwait
dec
push
mov
cmp
lock
pop
bound
aaa
push
dec
mov
mov
cmp
lcall
dec
out
dec
lods
adc
mov
out
nop
fidivl
sbb
inc
das
dec
icebp
xchg
mov
fidivl
xchg
sbb
insl
or
lcall
in
lds
mov
imul
cmpsl
rolb
insb
pop
je
mov
add
push
jp
dec
enter
and
mov
or
cmc
out
mov
push
in
and
das
out
in
test
add
adc
sub
ficompl
je
or
inc
dec
shrl
jp
push
push
or
xchg
mov
lahf
xor
sbb
inc
mov
negl
sub
in
mov
cli
movsb
icebp
jl
pop
mov
push
andl
pop
push
xchg
sbb
jne
push
ret
sbb
enter
inc
inc
int
repnz
sbb
mov
xor
jno
movsl
cmp
and
loop
adcb
or
outsb
scas
push
bound
dec
addb
fldcw
sub
xchg
in
divl
push
add
js
xorb
int
out
and
xchg
pop
aad
push
sarb
int
fstp
imul
jno
subl
ret
pop
xchg
mov
xchg
jmp
in
pop
mov
push
lcall
xchg
dec
inc
outsb
xor
daa
push
cmp
pop
pushf
jns
inc
sbb
aad
inc
mov
push
int
inc
cmpsl
add
outsb
divb
mov
loope
sub
test
test
enter
push
fnsave
lods
ljmp
xchg
pop
imul
sbb
sahf
pop
xchg
fdivrs
addr16
push
mov
out
hlt
loop
in
aaa
aad
adc
mov
or
in
popf
adc
cs
insl
adc
ficoml
cli
cwtl
popa
fldt
and
cltd
fwait
mov
popf
jg
push
lea
cmp
imul
jae
add
stc
sub
inc
jne
mov
push
frstor
jp
push
idiv
jmp
xchg
aad
xor
xchg
repnz
lods
loop
out
sahf
push
adc
adc
mov
and
out
mov
movsb
loope
push
ret
xchg
push
dec
mov
sub
pop
jl
popf
xchg
aas
movsl
pop
ret
xchg
lret
add
pop
jle
das
inc
clc
imul
inc
xchg
mov
lods
push
ljmp
xor
pop
jmp
stos
sub
pop
ret
or
add
adc
add
js
lock
lea
pop
ret
jns
sbb
cld
push
stc
popf
xorb
lock
fs
push
dec
lahf
cld
dec
cmp
int3
lret
xlat
rcll
push
fnstcw
rclb
push
fisubrl
loope
clc
push
cmpsb
jle
pusha
clc
fildll
pop
clc
or
sbb
jb
add
jnp
sub
push
ss
in
push
jecxz
repz
in
push
lcall
inc
fcompl
mov
mov
adc
test
mov
jns
jnp
pop
pop
pop
js
adc
cs
mov
lret
into
mov
jge
sbb
push
mov
out
bound
jecxz
mov
jl
ja
mov
sub
push
test
loope
dec
mov
test
or
mov
mov
push
sbb
dec
xor
and
xchg
mov
inc
loopne
inc
cmpsb
jae
fisubrs
jecxz
and
mov
cmp
add
out
mov
pop
cmc
push
sbbb
out
jnp
mov
jecxz
mov
sahf
scas
and
cmp
sub
imul
pop
loop
dec
lcall
jmp
lds
push
cmp
mov
add
push
fldl
aad
test
movsb
pushf
sbbl
cmp
stos
xor
loopne
jg
mov
addr16
out
or
inc
cld
fs
jmp
push
mov
inc
sub
fstpt
cli
aam
adc
mov
pop
loopne
cmpsb
ret
leave
inc
pop
ss
popa
fnstsw
xchg
jle
inc
mov
cmp
ret
sub
rorl
add
push
push
bound
cli
sub
dec
in
add
sub
loope
and
sarl
or
jno
cltd
xor
sbb
call
mov
pushf
in
add
xor
fiaddl
sbb
out
inc
arpl
sub
scas
jnp
lods
adc
sub
or
dec
mov
xchg
aad
add
les
and
jno
mov
push
insb
sbb
lds
lods
out
leave
sub
cmp
bnd
dec
push
pushf
in
cmc
adc
jl
cwtl
xchg
out
lods
and
push
xchg
jg
pop
popf
jno
cmpsl
gs
xchg
jecxz
dec
xchg
fld
mov
repz
jns
sti
adc
ret
mov
sbb
rorb
xor
sbb
jbe
xor
mov
test
dec
pop
outsl
in
popf
aas
int3
add
push
or
xor
loope
sub
jne
dec
mov
lahf
pushf
testl
xor
data16
inc
cld
or
jo
jecxz
jnp
inc
push
stos
in
jecxz
and
dec
pop
xor
inc
insb
inc
inc
or
adc
dec
pop
pop
ds
push
js
and
test
popf
pop
add
loop
ljmp
daa
mov
cmp
xchg
rcll
sub
push
test
or
lret
pushf
addr16
movsb
repz
shr
inc
ret
jle
xchg
in
notl
push
jl
push
stos
inc
sub
sub
sub
mov
jecxz
mov
mov
cmpsb
fnsave
shr
mov
sbb
je
sbb
sub
mov
add
mov
popa
jb
mov
sti
mov
dec
enter
mov
or
mov
test
pop
sbbb
mov
xor
adc
xchg
xchg
cmp
pop
push
sub
lods
or
fisttpll
jl
push
sbb
movsl
push
repnz
frstor
cmp
loope
sub
pop
imul
aas
inc
insl
shrb
inc
sub
out
test
shll
jge
sbb
inc
pop
xchg
inc
sbb
divl
sti
adc
sbb
adc
add
sahf
adc
jb
or
dec
push
jge
mov
out
fisubl
cmp
jbe
test
mov
mov
sub
pop
lahf
jmp
loope
mov
jo
sub
aaa
mov
ret
imul
cmp
dec
out
or
call
dec
xor
in
lcall
xchg
sbb
xor
es
scas
gs
dec
fists
jnp
or
mov
jno
in
mov
adc
pushf
sub
movl
iret
dec
icebp
or
cmp
sub
pop
jo
lret
cmp
out
out
movsb
adc
es
les
push
lock
push
cwtl
cwtl
push
lock
mov
in
mov
cmc
dec
xor
inc
push
jno
imull
jp
aas
cs
push
int
xchg
dec
mov
jne
mov
mov
es
mov
mov
mov
shlb
mov
pop
fidivrs
or
sbb
dec
pop
mov
xchg
dec
fsubp
jns
mov
ja
xlat
fisttpll
daa
mov
xor
push
not
test
jmp
cmp
sbb
notb
pop
pusha
mov
imul
cmp
xor
jae
cmp
adc
jecxz
or
adc
inc
inc
push
popa
sbb
inc
outsl
cmp
jo
sub
pop
test
sbb
ljmp
or
push
dec
hlt
outsb
xor
adc
sbb
jo
xchg
ffreep
sahf
inc
push
and
cmpsb
ret
pop
xor
shld
mov
out
lock
push
clc
sub
pop
out
inc
xchg
faddl
js
rdpmc
jns
call
jae
sbb
test
jns
test
in
add
lret
xor
push
sbb
lods
incl
add
jg
mov
dec
adc
cmpb
jp
mov
pusha
pop
sbb
push
sbb
in
hlt
mov
cmpsb
mov
jae
sbb
rcll
adc
mov
pop
outsl
xchg
mov
push
iret
cmpsl
test
sbb
xor
scas
daa
mov
pusha
adc
sbb
dec
xor
lock
dec
jp
and
mov
lods
cmp
push
and
inc
in
lods
jg
cmpb
sbb
enter
cwtl
push
lods
adcb
imul
sbb
push
repnz
sbbl
pop
pop
add
inc
lods
lcall
xchg
shld
dec
push
cli
roll
pop
push
mov
pop
and
jno
mov
mov
and
out
dec
std
mov
test
push
aad
sub
inc
enter
cmp
xorl
xor
out
push
cmpsb
out
sbbl
lret
xchg
cmpsl
jl
push
lea
aam
jns
out
mov
add
add
and
fisttpl
cld
hlt
mov
popf
jg
test
sub
xchg
add
jmp
fisubrl
pop
xor
lods
cmp
dec
adc
cwtl
push
mov
dec
scas
jecxz
mov
loop
pop
cmpsl
aad
loopne
sub
cmp
jne
aad
imulb
and
dec
fildll
fcoms
popf
mov
lds
or
xchg
cmp
xchg
inc
popa
ss
sub
dec
shll
mov
or
sbb
mov
gs
mov
add
add
or
insl
push
xchg
into
leave
dec
xchg
aad
imul
in
pop
pop
or
inc
icebp
cmpsb
xorl
sbb
adc
ret
ja
cmp
in
cmp
push
scas
pop
scas
mov
aam
sbb
repnz
cmp
jmp
push
mov
or
dec
enter
aas
jns
dec
adc
fs
leave
and
cmp
adc
les
fwait
rol
sbb
ret
cmpsb
xor
add
add
in
ficompl
sbb
xor
adc
dec
outsb
jb
mov
nop
das
add
cwtl
jbe
scas
xchg
rolb
lret
sub
testb
iret
adc
loop
mov
mov
test
pop
stos
in
sub
add
mov
and
pop
mov
sub
lods
jbe
std
pushf
cld
aad
fisubs
xlat
xor
mov
cli
mov
stc
and
cld
fistpll
sti
sti
cmp
movsl
xor
arpl
les
adcb
nop
or
mov
add
shll
int
pop
imul
ficomps
lcall
repnz
cmp
lret
inc
jae
pop
mov
or
data16
pop
andb
clc
movsl
xor
out
je
in
mov
stos
sub
xchg
mov
adc
jb
sbb
iret
dec
mov
jge
inc
xorb
inc
daa
fdivrs
sar
mov
popf
shlb
cs
jecxz
mov
xor
testl
or
std
dec
fdivl
iret
ja
jns
inc
andl
inc
int3
inc
je
push
push
sub
mov
dec
rcrl
xor
xchg
or
pushf
xchg
mov
push
lcall
fs
push
lea
lock
and
lods
pop
xlat
dec
lret
xchg
push
pop
cmpsl
jmp
test
je
lods
mov
fcomp
sub
xor
test
mov
imul
lods
mov
pusha
push
fsub
mov
leave
xor
xchg
iret
lret
stc
mov
scas
scas
sbb
bound
pop
mov
mov
inc
mov
mov
mov
xor
mov
cmpsl
ds
fcmovne
mov
mov
adcl
pop
fistpl
nop
push
leave
hlt
jmp
mov
sahf
lret
dec
mov
pop
xor
fcomp
fcomp
shlb
mov
fldenv
bound
jo
dec
push
adc
or
pop
jno
dec
frstor
rcr
dec
js
scas
mov
hlt
lret
jns
mov
mov
stos
add
nop
iret
cmpsb
inc
arpl
popf
inc
jb
adc
dec
fwait
sbb
das
pop
aam
and
out
push
pusha
dec
mov
mulb
add
nop
push
xchg
mov
add
xchg
into
xlat
flds
xlat
pop
add
or
inc
lea
push
dec
call
scas
pop
pop
push
sub
lods
leave
xchg
cmp
aam
pop
push
or
adc
hlt
xor
cmpsb
dec
das
in
aas
jmp
imul
adcl
pop
push
sbb
pusha
adc
aad
add
inc
out
in
negl
inc
insl
sbb
sub
mov
inc
inc
js
out
jge
popf
fbld
or
jecxz
cmp
insb
sub
cld
popf
fcoms
sub
pop
lds
cmp
addr16
in
cmp
xchg
out
mov
sbb
mov
mov
ds
inc
dec
add
cmp
jecxz
les
cmpsl
xchg
fldt
jbe
jbe
leave
fstpt
andl
out
lods
mov
mov
bound
fadds
in
jmp
xchg
jnp
push
adc
scas
cmc
pushf
xchg
lods
nop
sbb
mov
push
xchg
add
test
jmp
lods
insb
mov
adc
cwtl
cmc
inc
sub
hlt
cld
data16
sub
mov
add
jge
loope
je
shrl
addr16
xlat
outsl
fldt
push
leave
mov
adc
popa
pushl
es
int
dec
imul
pushf
push
outsb
add
xor
in
mov
lock
sahf
mov
cmp
adc
in
or
movsl
inc
lcall
push
mov
adc
jb
sbb
adcb
lea
cmp
push
pop
mov
xor
cmp
rcrb
or
mov
xor
mov
push
aam
jp
addr16
jp
int
sarb
mov
sahf
pop
aam
sub
je
out
xchg
in
rorb
roll
int
pop
and
mov
and
mov
jl
outsb
lds
pop
pop
or
xchg
lret
adc
fwait
xchg
ret
push
add
xchg
sub
mov
fstpt
insl
pop
sbb
cmp
lods
data16
hlt
ss
int3
cmpsb
call
xor
fwait
pop
cs
imul
xchg
repnz
daa
mov
insl
mov
inc
addl
fadd
mov
test
xor
ss
xchg
fcom
adc
adc
inc
jge
xchg
push
jmp
dec
mov
in
cli
adc
push
mov
pop
dec
int3
insb
adc
push
cltd
inc
shrb
mov
mov
lds
shll
loope
mov
push
mov
sub
bound
fdivrs
add
mov
push
jb
into
loope
xchg
add
mov
das
add
mov
sub
cmp
imul
or
loopne
shrb
sarl
mov
fimuls
clc
lahf
mov
mov
lods
pop
mov
push
or
adc
scas
push
pop
sbb
jle
jmp
loope
jmp
mov
testl
mov
in
dec
jg
outsl
jno
ret
and
sub
jne
arpl
sbb
cmp
lret
dec
push
xor
stos
cs
jns
push
scas
xor
popa
mov
xor
pop
adc
icebp
js
sbb
pop
sti
xor
and
mov
xchg
ss
pop
mov
cli
xlat
cmp
push
xchg
cmp
gs
iret
bound
mov
icebp
inc
dec
fsubrl
out
sti
je
in
jno
test
movsb
mov
add
cmc
adc
and
jp
fimull
jg
insb
mov
movsl
mov
jl
fstps
push
outsb
je
mov
adc
or
cmpsl
mov
cli
mov
repnz
test
daa
push
adc
nop
enter
xchg
xchg
sahf
popaw
add
jmp
leave
pop
js
inc
pusha
movsl
jae
out
daa
aam
jmp
sub
jle
pop
out
push
scas
loop
sbb
xchg
lret
xchg
mov
in
inc
filds
sub
adc
adc
push
pop
push
ljmp
stos
adc
dec
and
dec
add
dec
ja
scas
scas
cwtl
subl
addr16
cmp
pop
ds
add
negb
mov
fisttpl
cli
into
jle
icebp
aaa
pop
lret
lret
mov
pop
pop
ret
fldenv
push
sub
mov
cwtl
loope
sbb
xchg
pop
scas
xlat
mov
xlat
fs
stos
das
xchg
push
mov
out
jb
pop
orl
cli
cmpsl
xor
pusha
fildll
repnz
lea
fmuls
or
xor
mov
mov
push
mov
add
dec
sbb
xor
ja
adc
sub
push
mov
jns
outsl
test
adc
add
push
lret
mov
rorb
dec
push
mov
inc
into
outsl
inc
push
xchg
cld
push
subb
clc
mov
inc
pop
popf
bound
mov
jg
and
es
nop
pop
icebp
cld
fisubrl
mov
push
mov
push
dec
sbb
ljmp
or
lcall
loope
sbb
adc
mov
or
daa
ljmp
mov
addl
popf
xor
jb
push
jl
jbe
or
aad
inc
das
call
leave
push
bound
cmpl
xor
insb
shr
push
cli
jle
and
mov
dec
lods
mov
xor
xor
cmp
or
xor
bnd
lret
mov
mov
add
push
sbb
inc
ja
mov
pop
and
stc
popf
out
jne
pop
inc
xor
jge
pop
out
cs
js
outsb
dec
inc
dec
and
push
pop
fmull
pop
int3
movb
mov
cmp
iret
call
xchg
inc
js
lret
test
xchg
fs
ljmp
inc
push
dec
mov
cli
out
mov
std
mov
in
jl
fwait
or
ror
out
sub
scas
xchg
push
inc
jb
dec
hlt
cmp
rol
insb
int3
ljmp
adc
iret
test
rclb
fidivl
and
movsb
xchg
push
mov
clc
xchg
insl
or
jne
ss
xchg
or
loop
fsubrs
and
push
fidivl
push
xchg
outsb
sub
mov
cmc
imul
adc
inc
sub
fcoml
and
in
cmp
int
sub
pop
pop
mov
or
sbb
outsl
cli
cmpsb
xor
cmp
xchg
hlt
and
mov
mov
ds
mov
pop
std
clc
in
rolb
ds
push
cmp
mov
aas
lods
je
push
jecxz
idivb
jb
pop
xchg
pop
push
xlat
dec
aas
gs
jl
jbe
clc
lock
xchg
imulb
fisubl
fwait
wrmsr
into
xor
mov
aad
xchg
mov
add
mov
sbb
pop
mulb
iret
push
dec
cmpsl
inc
and
or
pop
jp
imul
mov
scas
in
jge
push
add
cmp
sbbb
mov
lret
repz
mov
dec
mov
or
jo
jbe
xchg
ja
mov
inc
mov
out
imul
add
inc
loope
cmpb
xorl
stos
mov
lcall
bound
lds
mov
pop
negl
sbb
out
fcmovu
xchg
sub
xlat
adc
push
xchg
sub
shlb
pop
lahf
adc
in
xlat
sbb
cmp
aas
mov
test
cmpsb
outsl
jmp
push
xchg
xor
scas
dec
jecxz
imul
iret
dec
xor
mov
out
lock
adc
not
insl
jno
jl
push
int
push
push
out
adc
xchg
jge
das
jno
in
or
insl
out
mov
aad
das
and
enter
jmp
xchg
pavgw
popl
lret
fldl2e
test
repnz
ss
rcll
cwtl
sub
lret
or
dec
push
mov
mov
pop
out
lds
xor
push
sub
ret
ja
pop
dec
in
fildll
and
and
mov
imul
xchg
notl
out
mov
cwtl
push
adc
ret
in
mov
out
out
pop
mov
xchg
insb
pushf
clc
fnstenv
push
cwtl
iret
xor
mov
and
cwtl
cmp
xchg
ss
pop
cmpsl
mov
inc
mov
sub
mov
lret
xorl
inc
adc
push
or
into
sbb
fdivrs
js
adcl
or
xchg
sub
imul
mov
loopne
sbb
clc
mov
mov
pushf
xchg
push
xchg
stos
mov
inc
sub
mov
mov
fwait
daa
push
jle
dec
mov
sti
cmpl
xchg
add
iret
mov
ja
mov
sbb
mov
pop
add
adc
add
sub
data16
inc
lea
pop
test
ds
pushf
mov
call
mov
sbb
push
xchg
imul
sub
mov
inc
xor
ss
int
xor
adc
adc
inc
out
add
inc
cmpsl
xor
cs
xor
imul
pop
movsl
les
mov
push
and
icebp
cs
mov
sub
sarb
mov
xchg
push
mov
mov
adc
push
imul
add
push
loopne
and
pushf
jno
and
icebp
aad
and
imul
push
cmpsb
xor
push
mov
xchg
imul
pop
jo
jno
rcll
ficomps
mov
clc
mov
aam
inc
push
xchg
sbbb
lahf
mov
dec
jmp
cld
cmp
dec
mov
loopne
adc
sub
je
leave
out
cmpl
cmp
adc
cltd
add
dec
xchg
mov
pusha
les
push
jns
mov
ja
sub
xorb
add
cmp
cmp
aas
popa
mov
add
pushf
jmp
mov
ds
les
rcrb
aas
xchg
shlb
sub
lea
add
mov
aaa
flds
pop
stos
ret
xor
mov
aam
xor
imul
sbb
pusha
data16
mov
scas
arpl
adc
jl
jnp
adc
rcrb
lret
dec
push
test
or
mov
jge
add
inc
pop
ret
mov
push
mov
inc
pop
adc
adc
cli
and
mov
inc
test
dec
loope
jbe
xchg
jg
pop
mov
inc
cmp
sbb
rcr
xor
jb
int
pop
dec
bound
dec
mov
enter
cmpsb
popa
xor
jp
bound
stos
clc
mov
ret
sbbl
mov
xlat
push
flds
sub
shrb
rcrl
pop
jecxz
cmp
cmpsl
imul
mov
mov
scas
cmp
push
test
add
data16
cmp
lock
shll
push
stc
jo
pusha
xchg
inc
ret
mov
jns
insb
stc
jae
fldenv
inc
addl
inc
std
mov
xor
add
xor
in
pop
or
and
jge
mov
cmpsl
imul
sbb
mov
lret
cld
xchg
hlt
or
and
cmpsl
cmp
mov
mov
add
mov
sbb
jg
push
rclb
mov
and
out
lahf
push
mov
mov
xchg
mov
or
and
or
jp
dec
adc
inc
mov
mov
lock
movsb
xchg
dec
loop
xlat
and
inc
cmp
pop
test
stos
sub
cmpsb
int3
cmp
out
cltd
cld
cmp
and
mov
stc
out
gs
out
test
pop
lds
call
cltd
or
fdivrl
inc
popf
and
ret
mov
test
lds
into
in
and
aad
cmp
push
arpl
mov
jle
jmp
andnps
sbb
pop
fistpll
cs
jge
xorl
dec
out
xchg
pop
jp
leave
es
add
xor
jg
mov
in
out
mov
ret
imul
mov
mov
jge
nop
push
push
in
rclb
adc
stos
push
cltd
call
xchg
dec
insb
stos
cmp
insb
and
jae
outsb
jbe
lods
bound
or
push
push
mov
jnp
popf
adc
sub
in
jno
push
lods
and
cmpsb
and
adc
mov
pop
cmpsl
in
jl
cmp
mov
mov
xor
mov
xchg
fmuls
loopne
in
insb
mov
cmp
outsb
adc
mov
fs
popf
cmpsl
cmc
dec
lahf
push
add
jmp
ja
sbb
lea
sbb
or
movsl
and
in
sbb
daa
rorl
mov
add
xlat
push
and
ret
sub
pop
push
shlb
inc
scas
in
cmp
loopne
adc
pop
jb
inc
xor
push
inc
ds
or
imul
gs
mov
into
jnp
dec
jno
daa
cld
or
sbb
fldcw
xor
out
push
push
or
inc
cmp
pop
inc
jbe
xor
inc
rcr
jnp
cmp
jecxz
sbb
sbb
sbb
daa
and
inc
mov
mov
mov
adc
fdivr
ja
push
inc
mov
lret
push
mov
push
sub
xor
mov
inc
shlb
xor
pop
fisttpll
aaa
push
es
mov
lds
push
call
mov
xchg
stos
clc
mov
push
repz
bound
lcall
pop
pop
test
insl
jnp
lock
jne
rcrl
shlb
push
cwtl
je
jne
or
push
mov
pop
lcall
out
jnp
mov
push
clc
ds
loopne
out
jge
adc
mov
ficomps
xlat
rcl
out
adc
mov
sub
jle
xchg
fstps
out
and
and
sbbb
adc
and
out
cmp
stos
or
xor
out
je
cmpsb
es
or
push
xchg
pushf
xchg
cltd
call
jae
mov
add
sub
lret
enter
fs
test
cmpsl
dec
pop
out
and
test
or
gs
push
add
ljmp
inc
fstp
cli
add
iret
insl
stos
hlt
fidivrs
sbb
pop
popf
mov
add
negl
jmp
lds
cmpsl
jge
pop
mov
int3
cmp
fcmove
mov
push
daa
adc
popf
mov
lcall
shlb
iret
fnstenv
push
aas
dec
adcl
nop
sub
mov
jp
xchg
idivb
xor
test
mov
mov
jbe
loop
test
test
stos
out
shlb
in
push
and
xor
pop
ja
and
and
inc
in
stc
xor
cwtl
sub
into
adc
nop
shl
fnstenv
xor
lret
repnz
fst
popf
out
mov
mov
sub
lods
adc
jg
and
loope
aas
rorb
lcall
out
fdivrs
push
scas
lock
in
lcall
push
jb
out
in
jo
aas
call
cmp
insb
popa
data16
icebp
inc
push
dec
orl
jne
inc
xor
dec
cmp
test
jae
mov
cmp
not
cmp
xor
push
movl
pop
arpl
pop
call
je,pt
adc
sub
cmpb
mov
je
push
adc
sub
xlat
and
aas
cli
pshufw
or
outsl
loopne
jbe
inc
popf
sarb
outsl
in
dec
fstps
jae
and
ja,pt
xchg
push
mov
adc
mov
pushf
ja
ds
into
daa
or
cltd
clc
in
fwait
dec
out
sub
lods
mov
mov
xchg
cwtl
les
test
adc
fsubl
adc
push
sahf
mov
dec
inc
mov
sarl
call
cmpsl
xchg
pop
sub
xlat
bound
add
fsubr
xlat
divl
dec
cmp
popa
les
ds
inc
cld
xchg
ja
sub
xlat
js
in
pop
jns
xor
pop
xchg
shrl
or
scas
jmp
das
insb
jmp
or
jp
add
dec
add
cmpsw
sub
notb
ljmp
jmp
mov
or
aas
mov
dec
ret
rcrb
xor
popa
pop
jo
ljmp
cmovge
jmp
dec
sub
cli
insb
test
add
das
cli
inc
sti
je
pushl
push
push
mov
dec
adc
cmpsb
jbe
mov
test
aam
popf
scas
mov
cs
cwtl
fmull
lcall
popa
dec
jns
data16
enter
pop
pop
add
inc
adc
push
mov
stos
icebp
mov
out
pop
jnp
shrb
stc
xchg
dec
in
cld
pop
xchg
mov
sub
pop
mov
or
clc
and
adc
insb
addr16
sbb
into
orl
cmc
fxch
mov
pop
jp
pop
or
xor
jnp
imul
xchg
and
xchg
or
jbe
loopne
mov
sub
xor
dec
iret
sbb
jns
cli
xchg
fneni(8087
or
adcb
scas
gs
stc
mov
push
mov
fisttpll
rolb
outsb
mov
pop
mov
addl
inc
sub
mov
mov
cmpl
inc
mov
stos
in
es
sbb
fdivr
mov
adc
mov
out
mov
and
jne
adc
mov
das
xlat
mov
fisubl
xchg
and
ds
repz
gs
jbe
out
xchg
and
outsl
xor
push
ret
decb
ret
mov
lret
ret
xchg
fwait
push
push
and
cli
jne
sti
cltd
shlb
cmp
hlt
shr
js
inc
cli
outsb
xchg
ret
test
push
xor
xlat
pushf
pmuludq
push
dec
sbb
in
movsb
sub
fs
ljmp
dec
in
mov
leave
dec
xchg
cmp
jg
arpl
mov
dec
test
add
jmp
fs
xor
push
je
jnp
fstpt
xorl
add
mov
mov
inc
cmpxchg
stos
mov
mov
in
lock
mov
dec
adc
and
dec
testl
or
les
push
push
out
std
push
aaa
push
mov
mov
jl
stos
cltd
pop
or
rolb
stc
ror
addr16
mov
lret
movl
xchg
fldl
adc
xor
push
sbb
out
outsl
xor
adc
jge
pop
jb
out
imulb
dec
sub
adc
out
or
mov
movsl
int
cltd
es
adc
push
jne
pop
lods
in
mov
or
dec
pop
movl
outsb
sub
cmp
jp
outsl
adcb
adc
jmp
dec
pop
orl
stos
pop
xchg
push
mov
pmaxub
fs
xlat
sti
mov
mov
ja
stos
in
aas
mov
lret
or
mov
dec
imul
imul
xchg
ljmp
jae
adc
xchg
dec
in
jmp
in
dec
aam
jp
jecxz
enter
adc
jno
ficoms
dec
pop
mov
xchg
mov
aam
cwtl
xchg
lock
arpl
sti
jge
sub
push
add
rclb
dec
or
and
cmpsl
ss
mov
scas
nop
iret
fbld
pushf
adc
xchg
jbe
rorb
mov
aam
push
leave
or
cwtl
test
ja
adc
lcall
sarb
and
mov
xor
sbbl
pop
adc
fmuls
xorb
js
cmp
jno
aad
test
gs
test
jp
rcrl
mov
and
push
jns
jb
aad
scas
xchg
dec
outsb
mov
notl
sahf
jl
in
jb,pt
and
jns
sbb
cmp
dec
dec
subl
and
mov
test
outsl
push
push
or
int
mov
mov
sub
dec
roll
mov
xchg
jbe
call
or
xchg
inc
pusha
fildll
dec
sub
push
imul
pop
mov
mov
dec
ret
std
push
adc
loop
call
imul
xor
insl
ds
repnz
mov
scas
pop
sbb
clc
setns
jb
jg
sub
jle
lock
incl
jmp
loopne
ffree
push
loope
push
sarb
mov
aam
dec
dec
dec
inc
sub
sbb
mov
std
and
adc
hlt
jb
jo
pusha
pop
es
roll
jl
jb
jg
cwtl
xor
xor
or
dec
pop
adc
xchg
xor
filds
cmpsl
add
xchg
stc
ds
sub
push
div
lahf
lret
lret
push
pusha
ja
jl
cli
pusha
mov
dec
sbb
lcall
push
outsb
cmp
sub
xchg
jmp
into
xchg
jae
pusha
mov
inc
sbb
int3
or
in
outsl
orl
dec
roll
faddl
loop
aaa
fildll
fistpll
into
rorl
outsb
jnp
test
fucomp
xchg
out
iret
jp
aam
rcll
xchg
sti
cmpsl
stc
push
sub
sahf
xchg
fldl
outsl
pop
mov
pop
and
clc
push
xor
push
inc
aad
test
fldl
int3
gs
adc
mov
xchg
push
cmp
loope
cmp
leave
lea
pop
mov
push
mov
add
lret
nop
fdiv
mov
pushf
mov
loop
addb
lret
gs
test
inc
int3
xchg
movsl
push
mov
cmp
pop
push
mov
std
mov
aam
xor
inc
xchg
cld
or
sbbb
xchg
ror
fstp
je
sub
xchg
mov
subb
pop
cmp
lahf
popf
cmpsb
jmp
push
sbb
xchg
stc
cmp
fadds
and
sbb
divb
add
fs
mov
test
push
fiaddl
sub
mov
int
adc
cmp
xor
int3
addl
dec
pushl
jno
mov
fisubrl
iret
icebp
mov
enter
add
xchg
mov
rol
mov
xor
shl
cmp
pop
push
push
jns
cmp
test
pop
fists
movsl
jge
jg
inc
mov
mov
mov
push
push
jg
push
js
jo
mov
leave
dec
pop
jns
jne
inc
sbb
imul
call
lcall
push
sbb
adc
lds
pop
mov
mov
lahf
or
pop
pop
push
inc
and
xchg
stos
shll
jae
push
xchg
lods
sahf
addr16
in
and
test
sbb
sub
fldl
faddl
inc
sbb
inc
mov
sarb
mov
in
push
mov
cld
adc
cmpsl
mov
mov
outsl
orps
cmpsb
cmp
hlt
addr16
add
pop
lret
outsl
lret
cmpsb
mov
adc
and
or
negl
loop
mov
repnz
popa
in
imul
stos
dec
cld
push
xor
push
pop
sbb
inc
movaps
jmp
loopne
dec
pop
lods
jge
cmp
inc
mov
pop
inc
or
stos
dec
pusha
or
push
lock
imul
xor
pop
div
es
push
notb
or
les
imul
sbb
out
lret
adc
push
outsl
adc
mov
test
dec
xchg
or
repz
fwait
pop
xlat
mov
out
xchg
and
imul
ja
pop
cmpsb
loopne
adc
notb
push
push
aam
adc
sub
inc
mov
xchg
and
cld
cli
sub
pop
dec
inc
jbe
pop
lea
lahf
stos
add
jno
xlat
in
mov
jnp
test
adc
rcrl
xchg
cs
lds
clc
push
loope
pop
mov
xor
loope
pop
clc
dec
fs
mov
mov
imull
loopne
dec
shrl
aas
mov
je
scas
jnp
test
mov
aam
inc
xor
add
andb
jae
pop
mov
stos
mov
cmp
mov
add
mov
lods
adc
push
pusha
fwait
or
adc
cld
ljmp
xchg
sbb
cmc
sbb
ret
fnstenv
mov
or
arpl
xor
pop
mov
inc
push
push
rolb
jns
je
ret
scas
pushf
and
in
in
or
dec
jg
cld
xchg
push
pop
adc
mov
outsl
sub
les
mov
adc
add
call
sbbl
or
sbb
fsts
xchg
adc
jge
push
adc
xchg
mov
jb
loopne
push
cld
out
mov
ret
and
sti
in
sahf
loopne
mov
test
inc
into
mov
frstor
jmp
daa
insb
dec
push
es
or
int
pop
mov
sbbb
js
fldenv
sub
sub
fbstp
xchg
add
addr16
enter
cli
add
and
add
cmpsl
mov
dec
scas
adc
push
mov
fldl
and
out
mov
cli
dec
sub
test
sahf
cltd
jne
adc
cmpsl
lahf
rclb
mov
mov
shufps
adc
cmp
and
aaa
pop
cmp
cmp
xchg
shrl
pop
insb
adc
fwait
xor
sti
cmp
enter
lods
pushf
idiv
fmull
pop
mov
cmp
icebp
sub
push
loop
mov
ljmp
bound
pop
lcall
aas
add
dec
or
fisubrs
jg
xchg
clc
jb
push
sbb
xor
or
lcall
pop
addr16
jmp
mov
mov
xor
imul
push
jb
lahf
jmp
sbb
out
mov
das
fs
push
jl
pop
sbb
and
repnz
decl
xchg
push
je
lea
dec
daa
adc
in
cmp
inc
in
hlt
enter
push
lcall
jge
pop
adc
mov
and
pop
mov
jb
ljmp
mov
jae
jmp
inc
cmp
fs
mov
aas
push
mov
das
adc
pop
xor
xchg
sub
lcall
push
mulb
mov
mov
cmpsl
js
ljmp
cltd
and
mov
mov
push
xor
xor
dec
xor
repz
adc
movsb
test
shl
sub
fcomp
orl
or
add
sbb
xor
int3
out
xchg
push
in
or
hlt
push
push
add
cmp
sbb
and
cmc
rclb
xchg
lret
cs
mov
pop
jecxz
and
loope
sahf
imul
jge
imul
and
xchg
mov
adc
icebp
and
and
pop
inc
xor
ret
pop
fstps
sub
in
sbb
out
imul
push
mov
jmp
push
roll
es
data16
sbb
ja
sbb
jmp
mov
inc
fisubs
mov
dec
xor
stos
jne
mov
adc
stc
mov
and
idivl
adc
inc
mul
xchg
sub
mov
add
sub
sub
test
inc
lret
dec
fwait
cmp
push
pop
in
push
aam
xchg
jmp
mov
adc
push
pop
xor
icebp
test
test
xchg
test
or
cli
xor
aas
add
in
ret
cli
repnz
fsubl
pop
mov
dec
loope
loop
fcmovb
pop
sbb
push
xor
stc
clc
js
jno
mov
lret
je
push
pusha
jg
lahf
mov
insl
cmp
addl
or
or
xchg
test
mov
cltd
lea
jge
jae
mov
je
mov
pop
sahf
stos
cmpsl
fstp
insb
shl
xchg
repnz
jnp
mov
sbb
pop
jbe
jl
xchg
dec
rcrl
mov
movsl
lret
inc
dec
and
mov
inc
movb
icebp
xor
mov
lret
pmuludq
stc
popl
popf
adc
mov
lea
fsub
or
sub
pop
cmc
sbb
inc
push
cs
fxch
sub
leave
push
push
cmp
sbb
mov
mov
in
std
out
xor
lock
aam
pop
adc
sub
jp
or
sub
pop
xor
push
rcl
jno
jo
mov
in
sbb
int
adc
in
jne
xor
mov
pop
mov
jl
mulb
lods
sahf
and
mov
test
xlat
sub
inc
arpl
push
pop
fwait
add
leave
hlt
fdivrs
push
adc
aas
xchg
pop
push
mov
repz
push
adc
push
iret
jge
pop
loop
mov
xorb
outsb
sahf
jbe
push
push
pop
stos
mov
js
sbb
mov
insb
adc
lds
sub
or
insb
popa
test
jnp
adc
mov
jns
dec
adc
dec
jae
push
cmc
xchg
inc
bound
xlat
push
sub
xor
xlat
adc
mov
mov
imul
push
popl
inc
lods
idiv
xor
ljmp
jg
mov
out
fxch
lods
cs
scas
cwtl
arpl
mov
lea
or
in
xlat
or
cld
mov
mov
lret
cltd
lea
ss
xchg
sbb
mov
push
push
mov
xor
xchg
popa
sbb
loope
mov
dec
mov
pop
mov
inc
pop
cmp
rorl
stos
adc
cmp
loopne
and
xchg
cmp
icebp
mov
jbe
adc
adc
xor
adc
mov
push
pop
add
out
scas
stos
pop
sub
pop
das
in
clc
cmp
mov
cmp
xchg
das
movsb
sbb
jo
xchg
mov
cltd
lea
push
pop
and
dec
test
inc
lods
push
mov
ret
xchg
mov
das
jmp
mov
pop
pop
push
jns
enter
add
sahf
xchg
push
mov
adc
or
out
incl
loop
mov
lods
xchg
push
sbb
inc
xchg
lea
daa
push
jb
xchg
lock
scas
test
and
sti
dec
sti
iret
push
into
data16
scas
inc
adc
ja
add
inc
mov
rolb
dec
movsl
shrl
mov
inc
mov
mov
jo
cmp
lods
xchg
and
cmp
sub
mov
mov
imul
test
sub
rorl
mov
inc
dec
arpl
inc
in
xor
fidivl
enter
pop
xor
ret
sbb
fdivl
enter
jle
jmp
not
cmp
fisttpl
mov
push
loopne
shll
sbb
cmpsl
lret
inc
xor
sbb
rcrb
sub
cwtl
stos
fdivrl
dec
cmp
cmp
insl
sbb
or
sahf
jecxz
out
push
insb
aas
jb
mov
cld
in
add
dec
mov
std
or
mov
es
out
mov
test
popf
movsb
ret
ret
adc
in
jmp
mov
add
pop
and
out
adc
testb
fdivrs
pop
push
cmpsl
dec
mov
sbb
fsubrs
pop
repz
mov
lcall
pop
rep
mov
mov
adc
addr16
xchg
jge
int
lcall
push
dec
sti
cmpsl
jge
movsl
fdivl
or
mov
add
mov
jne
out
mov
cld
lret
cwtl
xor
xor
int3
test
pop
out
aaa
push
in
adcb
adc
lahf
dec
jmp
xchg
jne
xlat
pusha
in
adc
movsb
pusha
out
add
adc
ret
or
inc
mov
jb
push
or
fistpll
int
int3
outsb
lret
fsts
int
das
repz
xchg
repz
shlb
test
int
fnstcw
int
push
xchg
out
insl
fistpl
pop
mov
sarl
jbe
cmpsb
and
aad
sbb
jb
cmpxchg
pop
int
inc
cmc
sbb
sub
add
rol
sbb
icebp
xchg
lea
lea
jbe
scas
cli
and
or
je
push
sub
xchg
mov
mov
push
mov
inc
movsl
popf
in
in
jmp
dec
lods
pop
jl
stc
mov
sub
popf
ss
pop
xchg
mov
or
movsl
movsb
pop
outsl
repz
outsb
cmpsb
jnp
test
int
jecxz
jmp
xchg
fcoml
mov
sahf
loopne
ljmp
fsubrl
mulb
rol
outsl
lds
mov
adc
pop
scas
mov
or
jbe
or
add
mov
sub
jo
das
idivb
pusha
lahf
dec
scas
gs
push
sub
outsb
fldenv
inc
into
mov
testl
and
mov
add
mov
test
mov
push
test
mov
mov
stos
add
and
mov
inc
sbb
popf
data16
inc
and
jle
dec
cmp
jp
inc
iret
in
rcr
lret
jecxz
call
in
xor
jle
sub
pop
subb
xor
out
push
xchg
inc
lret
mov
imul
imul
call
subb
test
inc
inc
mov
xchg
in
mov
mull
andb
mov
push
int3
arpl
cmpsb
movsl
mov
mov
sbb
imul
and
cs
mov
popf
push
cld
popf
fldcw
roll
je
int
push
lods
nop
sahf
mov
je
pop
adc
cmc
xor
fld
inc
add
out
lret
cmp
add
inc
iret
sbb
enter
jns
and
sub
js
xchg
push
cmp
push
mov
lds
pop
jg
stos
cmp
hlt
mov
int3
add
mov
pop
lret
sub
push
sbb
dec
bound
popa
insb
mov
ja
cmpsl
pop
adc
stos
or
xchg
jno
leave
jbe
jp
inc
or
inc
sbb
hlt
mov
push
inc
mov
lds
inc
xor
fisttpl
ss
mov
faddp
sbb
lahf
jo
imul
inc
dec
insl
sahf
jno
xchg
jp
xchg
in
mov
xor
pop
mov
insl
adc
jnp
ds
push
mov
fidivrs
faddp
xchg
enter
xor
cli
cmp
call
cmpsl
lds
rorb
je
mov
and
jl
jecxz
mov
mov
xchg
pop
movsb
jge
push
in
push
mov
xor
popf
cmp
fmull
or
add
and
push
mov
sub
cmp
push
int
and
and
nop
mov
cmp
sub
mov
sbb
dec
lahf
jno
mov
xor
movsb
adc
add
bound
push
ret
cli
dec
xchg
inc
mov
pop
and
popf
adc
xor
adc
mov
jmp
in
arpl
fsubl
outsl
das
shlb
adc
dec
arpl
inc
fs
push
gs
adcl
sar
adc
xchg
jnp
pop
leave
in
test
dec
cmp
mov
dec
sbb
sbb
or
mov
repz
mov
test
jle
pusha
ds
out
insl
sbb
adc
in
nop
lret
inc
xor
sti
cmpsb
out
jnp,pn
adc
mov
jne
loop
mov
popf
test
stos
movsb
les
bound
xchg
lock
addr16
fstpl
cltd
sub
sbb
xchg
cmp
mov
lret
mov
rcr
mov
pop
lds
add
fdivrs
fucom
xor
pop
cmp
incb
jbe
cmp
mov
mov
icebp
in
es
cmp
lds
loopne
test
sub
in
mov
imul
xchg
stos
sub
out
cmp
pop
filds
hlt
dec
stc
mov
xchg
jge
movsl
adc
fwait
aad
out
cmc
test
cmpsl
mov
cmp
call
dec
or
xlat
mov
ds
decb
dec
scas
repz
sub
mov
insl
scas
out
xlat
lds
push
xchg
lods
xor
shll
jl
stc
rcl
popa
ret
out
mov
shll
aad
in
in
cmp
bound
pusha
test
fnstenv
ds
ds
test
jno
inc
adc
repnz
xor
inc
inc
ror
popf
addb
ficoms
aas
adc
sbb
fcomps
out
or
mov
testb
repnz
xchg
loop
mov
lret
sbb
es
jnp
sbb
in
and
out
addr16
ret
dec
sub
mov
rcr
xor
int3
pop
movsl
nop
xchg
sahf
cmp
or
dec
popf
pusha
pop
inc
xor
xlat
int3
sub
lds
pop
ds
aas
xchg
cmpsl
aaa
fsubl
rcrl
lret
xchg
cmp
inc
dec
add
add
adc
push
movsb
jae
sub
fstpl
xor
in
and
std
ja
aaa
cmp
pop
sbb
add
jnp
dec
jge
out
sbb
inc
add
pop
and
aam
pop
inc
imul
and
push
icebp
test
sbb
pop
call
movsl
mov
pop
adc
ljmp
xchg
mov
jno
pop
inc
aam
pop
cmp
rclb
out
mov
repz
xchg
pop
xor
orl
inc
sub
xor
jbe
mov
icebp
adcl
mov
arpl
add
mov
loopne
cmp
fcmovnb
cmp
inc
cltd
insl
fimull
sbb
cmp
movsl
in
das
loope
xchg
sti
sbb
push
xchg
inc
in
dec
call
mov
xchg
or
lds
fnsave
ret
add
and
pop
xchg
popl
nop
cmpsl
pusha
int
cmpsb
jecxz
xchg
pop
aaa
int3
int3
xor
jb
fbld
popf
pop
in
insl
sub
stc
inc
fistpll
idivb
sub
dec
es
enter
cmp
bound
push
scas
jo
std
fcomps
fidivs
jo
cmp
fnsave
leave
les
add
imul
dec
xchg
xor
add
dec
sbb
ss
lock
or
clc
ds
xchg
sbb
and
inc
scas
and
mov
jp
inc
test
loope
in
cmpsl
mov
test
repz
inc
subb
es
movsb
shrl
sub
aas
aas
mov
orl
faddl
fidivrl
sbb
push
insl
mov
and
lahf
push
mov
pushf
lock
xor
pusha
lds
insl
xchg
xlat
ja
das
mov
adc
adcb
adc
dec
popf
enter
add
pop
cmpsl
stos
adc
cmp
inc
loopne
jl
mov
stc
add
mov
leave
xor
mov
lock
insb
push
adc
adc
inc
pop
mov
test
inc
roll
mov
insl
jecxz
xchg
push
loope
sahf
xor
and
outsb
repz
jecxz
int
stos
jecxz
pop
mov
inc
mov
cmpl
loop
test
inc
loope
jbe
adc
dec
xchg
into
mov
jl
sub
cmp
fildll
push
xchg
inc
or
lds
lods
xor
sub
sub
push
add
xor
push
ljmp
and
repnz
lods
and
mov
insb
ret
daa
in
jle
int
xchg
or
push
jbe
loop
pop
testb
lock
mov
leave
insl
adc
mov
and
push
sub
test
cld
dec
scas
and
inc
test
mov
xor
inc
fwait
mov
add
cmp
mov
sub
xor
jp
and
or
mov
movsl
sub
and
jbe
in
pop
test
sub
outsl
ds
or
lock
dec
pop
or
pop
mov
cmp
adc
inc
adc
dec
cmp
outsb
add
jne
cmp
call
xchg
mov
mov
inc
sarb
stos
mov
je
sub
out
push
dec
rorl
int
ret
orb
cld
push
jo
dec
imul
insl
mov
fcoml
je
dec
xor
je
jge
add
cli
jg
jno
cli
push
mov
cmpsl
and
cmp
dec
sub
pop
iret
mov
sbb
inc
testb
cli
lea
es
mov
loope
jo
jle
aas
cli
ljmp
adc
ret
icebp
subb
push
in
daa
shlb
insl
push
fs
jae
imul
inc
cmp
aas
loopne
mov
adc
das
cmp
cmp
dec
cli
scas
pop
addb
fadds
sbb
rcll
and
idivb
xchg
fnstsw
fwait
add
movsb
inc
sub
jg
enter
fistps
xchg
movsb
add
mov
or
cwtl
mov
mov
adc
mov
scas
jmp
pop
jge
test
jnp
ret
jnp
inc
repnz
sub
jle
hlt
jo
fisttpll
sub
pop
ss
mov
adc
xchg
sub
fcoml
xchg
rcr
and
negl
fdivrs
push
push
mov
push
mov
iret
mov
pop
sub
dec
xchg
sbb
push
stc
ret
adc
sub
jo
pop
or
inc
fcompl
push
nop
lcall
fisubrs
sub
call
cmpsb
dec
sbb
xchg
mov
pop
cli
stos
sub
pop
cli
fcoms
mov
in
dec
xorb
and
adc
xchg
out
fnsave
xor
shrl
mov
push
mov
push
fstp
inc
inc
sbb
xor
mov
outsb
jmp
push
jbe
pop
jb
int
in
imul
pop
hlt
mov
jae
adc
push
data16
jg
sbb
inc
jle
add
dec
call
push
dec
inc
into
sub
pop
lds
dec
enter
pop
mov
mov
push
clc
out
add
ds
ss
push
aas
fdivrl
ret
push
or
dec
mov
outsl
ds
sub
jnp
cmc
cmpsb
mov
mov
or
inc
mov
jnp
ljmp
out
mov
adcb
dec
xor
mov
lcall
and
mov
scas
pusha
or
add
xchg
sub
add
xor
and
push
ljmp
dec
std
inc
dec
mov
xchg
cmp
nop
push
rep
out
mov
loope
popf
mov
push
imul
pop
xchg
mov
jns
pop
loope
movsl
aam
push
inc
or
loopne
daa
les
cmp
or
popa
in
loop
or
insl
sub
lds
add
ror
pop
dec
add
xchg
shll
sbb
fildll
adc
mov
aas
lea
or
movsl
push
push
inc
xchg
pop
cmp
xor
mov
ljmp
call
push
inc
mov
add
inc
mov
out
push
data16
das
push
lcall
push
rolb
sbb
sbb
adc
icebp
and
std
cs
lock
jle
push
mov
insb
mov
jnp
push
repz
mov
cmp
lret
lahf
add
jns
push
mov
nop
out
fs
loopne
out
and
adc
call
or
iret
loop
push
mov
shlb
pop
xchg
out
xor
in
xchg
jno
sti
sub
addr16
pop
mov
push
jbe
lods
pusha
dec
xor
mov
push
ret
cmpsl
inc
push
push
xchg
test
inc
adc
or
leave
cmpsb
fdivr
jb
xchg
and
xor
fmull
incl
mov
add
mov
jnp
pop
gs
out
jp
adc
fcmovnb
test
pusha
push
xor
xor
movsb
notb
aam
arpl
cmp
test
cmpl
jbe
jno
inc
je
mov
or
imul
movsl
cltd
loop
out
mov
shrb
push
nop
xchg
nop
out
test
int3
lahf
out
sbb
cmc
insb
mov
dec
or
xchg
jle
enter
push
mov
jg
div
or
loope
in
pushl
inc
cmp
ret
mov
in
call
adc
jecxz
invd
shll
and
into
div
lods
test
cmp
jg
or
and
adc
mov
inc
cmp
dec
sbb
jp
or
push
dec
pop
or
dec
mov
mov
mov
cli
jbe
mov
sarb
mov
ss
pop
inc
fsubrp
or
mov
sub
pop
cwtl
aam
dec
jl
cmp
in
test
mov
and
outsb
mov
notb
dec
in
cmpb
push
repnz
stos
push
cmc
push
or
xor
add
cld
data16
xchg
push
cwtl
sbb
pop
stos
nop
les
sbb
clc
hlt
xchg
sbb
sahf
jl
sub
stc
add
shrl
popf
push
cwtl
gs
lds
xchg
iret
inc
xlat
xor
nop
cmp
ds
addr16
inc
fstps
test
push
mov
shll
jge
push
or
arpl
test
cmp
add
popa
lahf
in
push
dec
or
rclb
mov
addr16
repnz
xchg
dec
fsubl
aad
shll
inc
popf
ja
out
cmpl
clc
stos
aad
pushf
test
xchg
and
scas
icebp
cmc
dec
mov
cltd
and
testb
orl
insl
sub
dec
scas
loopne
mov
inc
fidivrl
ret
cwtl
sti
adc
push
aam
and
sbb
out
adc
lds
push
jle
insl
test
or
cmp
in
mov
xor
aad
movsb
fisttps
dec
imul
subb
and
dec
test
xor
pop
mov
adc
mov
mov
insl
rorl
sti
lea
lea
out
popf
pop
push
adc
hlt
and
call
leave
jp
fmull
mov
xchg
mov
insb
xchg
test
mov
les
inc
mov
out
or
filds
repnz
and
jg
jb
xor
clc
cwtl
add
icebp
jge
mov
lret
xchg
jnp
clc
sbb
sub
arpl
push
into
jns
add
pop
sbb
enter
xchg
mov
je
mov
popf
dec
mov
filds
jb
pop
adc
xor
inc
jl
push
movntps
icebp
sbb
dec
mov
mov
or
gs
leave
daa
or
mov
adc
daa
push
out
outsb
pop
lods
push
xor
xor
pop
fwait
pop
sbb
and
scas
jne
inc
push
shrb
scas
imul
inc
xor
and
xchg
out
push
lods
mov
xchg
and
pop
negb
add
pop
jg
jp
adc
adc
dec
ret
mov
xor
mov
cltd
sbb
loopne
or
cmp
scas
repnz
xor
jmp
insl
mov
mov
aam
vandnpd
in
loop
rolb
mov
popf
test
fisubs
fdivl
call
pop
int3
xchg
sub
in
lods
pop
loopne
test
mov
imul
inc
dec
loop
dec
aaa
imul
add
jmp
sahf
loopne
repz
cwtl
outsb
data16
aas
sub
clc
lret
and
jno
mull
push
rol
adcb
lret
jle
rolb
cmp
rep
jl
cwtl
lods
jl
dec
cmc
insb
pop
pop
xchg
lock
mov
sub
mov
sub
push
pop
mov
jge
into
ret
dec
or
dec
sub
inc
mov
or
jg
push
loopne
cld
add
movsb
dec
add
sbb
loope
adc
ds
push
mov
mov
fistpll
shlb
mov
int3
adc
push
jmp
jg
out
test
jl
pop
mov
int
and
loopne
shll
ror
call
sahf
cmpsb
shlb
adc
loope
pop
cmp
insl
loop
jp
inc
xlat
clc
push
cltd
push
add
out
jnp
mov
cmp
or
dec
dec
and
loope
mov
out
test
push
mov
jl
sbb
fucomi
pop
popf
sbb
add
push
mov
xor
or
out
sbb
mov
and
dec
jmp
test
sub
pushf
stc
test
aaa
mov
sahf
jne
scas
and
xor
cld
out
test
fsubrs
in
push
xchg
lret
jno
cmp
or
lds
arpl
out
sbb
xor
testb
mov
mov
mov
mov
pop
jb
stos
repnz
xchg
or
inc
std
pop
sbb
adc
xlat
add
jns
int
outsl
lods
push
mov
jmp
faddp
and
shll
pop
jg
pop
mov
lahf
and
out
cltd
adc
inc
in
mov
idivb
cmp
stc
jno
inc
repnz
adc
lods
into
push
lods
cwtl
mov
mov
jl
mov
imul
sbb
shll
pushw
add
lret
jp
push
bound
and
xchg
mov
adc
adc
and
movsl
pop
dec
sbb
inc
sbb
outsb
add
mull
stos
jecxz
pop
enter
iret
xor
and
lock
enter
ljmp
lock
stos
or
arpl
cmpsl
mov
mov
fucomip
inc
add
outsb
fmull
mov
jbe
loopne
jmp
stc
fwait
aas
fldcw
in
mov
cli
mov
in
rcr
pusha
es
adc
repz
test
ljmp
push
test
xchg
lock
mov
cld
stos
stos
or
leave
es
in
jecxz
shll
mov
sbb
stos
inc
push
sarb
loop
sbb
add
jl
dec
cmp
test
or
divl
frstor
xchg
mov
cli
gs
shrl
pushf
and
daa
jge
icebp
add
das
ret
idivl
adc
out
in
into
stos
sub
sub
or
xchg
add
mov
test
xor
cltd
sti
xchg
add
shr
sub
mov
jns
test
sbb
hlt
leave
push
scas
pop
lahf
lahf
add
call
flds
ljmp
xchg
mov
mov
lods
inc
or
iret
lods
push
sahf
arpl
fcompl
jmp
push
mov
mov
sub
pop
pop
dec
shr
mov
mov
sub
sub
add
pop
popf
scas
stos
mov
iret
dec
ljmp
sub
sub
testl
cmp
ds
push
jp
or
lock
fimull
jnp
push
cmc
lret
das
rclb
or
fwait
pop
sahf
jmp
addb
or
mov
mov
in
jl
xor
test
out
and
sbb
push
in
cs
lds
sub
xchg
add
dec
pop
mov
mov
popf
stos
and
xchg
lea
dec
dec
fldcw
repz
cmc
pop
ljmp
pop
test
push
pop
dec
xor
mov
test
orl
fsubrs
inc
outsb
mov
js
bound
mov
js
adc
push
jne
push
in
fucom
lock
adc
adc
mov
mov
sbb
pop
adc
sarl
cltd
cmpsl
xlat
shll
jg
jbe
std
js
imul
inc
dec
jle
cmp
and
jmp
mov
lea
addr16
aaa
inc
xor
add
ret
je
stos
jo
push
mov
aad
orb
aam
adc
std
mov
jae
pop
sahf
adc
jae
loop
insl
cli
lret
adc
pop
or
dec
jmp
mov
rorl
pop
xchg
cld
and
xor
mov
and
ds
mov
es
dec
pop
in
leave
jo
cltd
test
mov
jno
xor
nop
xchg
mov
cmpl
xorl
mov
pop
sub
jae
pop
sbb
rcl
adc
or
arpl
push
subb
pop
add
sbb
sub
outsl
and
and
mov
and
cmpl
xchg
je
das
mov
int3
push
mov
loopne
repz
loope
jl
mov
pop
add
pop
dec
stos
ret
sub
xchg
jae
out
xchg
xor
adc
loop
or
es
fsubrp
mov
add
cmp
mov
test
into
popa
pop
xchg
pop
shrl
adc
scas
adc
xchg
jae
js
stos
lcall
repnz
movsb
pop
cmp
and
push
js
mov
in
cmp
das
push
test
enter
out
mov
pop
arpl
je
hlt
mov
ficomps
pop
xchg
add
xchg
push
xchg
adc
xlat
inc
shr
inc
dec
inc
add
mov
stc
dec
mov
mov
imul
leave
cmp
inc
imul
aaa
fwait
aaa
decl
or
lea
cmp
adc
mov
pop
push
shrb
pop
fldcw
sbb
test
mov
add
out
loopne
repnz
rcll
push
pushf
mov
mov
mov
imul
cltd
jge
inc
pcmpeqw
or
mov
leave
lods
sub
repz
inc
ficompl
rcrl
push
add
sarb
les
lahf
js
loope
and
psubq
cmp
in
fisubs
mov
lds
sbb
fs
adc
popf
mov
fistpll
out
push
inc
decl
mov
xor
out
and
pop
fs
outsb
push
roll
cmpsl
jmp
cmp
stos
or
fnstcw
cli
addr16
xor
and
adc
call
arpl
jae
cmp
loope
jecxz
into
scas
je
mov
add
or
sbb
mov
adcl
ret
jle
sarl
mov
xchg
pop
dec
in
jmp
xor
sub
jmp
pop
ret
pop
mov
add
fwait
lcall
imul
cwtl
pop
push
or
fisubl
cltd
fadds
mov
jl
out
stc
imul
mov
mov
jns
les
sbb
popa
inc
addl
push
cmp
imul
addb
pop
adc
add
jno
loope
inc
and
mov
cltd
scas
hlt
out
xchg
adc
fptan
xor
cld
mov
jl
movsl
push
in
rorb
jg
sub
sub
popf
add
adc
jmp
enter
push
jns
pop
stos
call
add
ss
fisubl
adcb
push
bound
adc
add
jo
jge
inc
aas
ret
iret
daa
loopne
pop
adc
inc
cmpsl
loopne
jl
leave
xchg
jge
pop
mov
insl
enter
fadds
nop
shll
add
repz
mov
fnstcw
cs
inc
xchg
arpl
loope
dec
cwtl
sub
add
jg
popf
add
flds
mov
add
hlt
push
jbe
call
xor
cmp
scas
mov
mov
ds
cmp
lret
stos
sub
xlat
push
iret
neg
jbe
aas
faddl
imul
xchg
push
fistps
nop
fwait
add
hlt
push
inc
test
repz
add
mov
icebp
cmp
std
xor
push
dec
pop
adc
jae
ljmp
or
cmc
ret
fnstsw
test
mov
hlt
xchg
ljmp
movl
and
test
adc
sbbb
dec
das
sub
mov
and
int
lahf
stos
rcr
shrb
jmp
jb
sub
filds
out
pusha
in
andl
insb
add
sub
add
shl
loop
xchg
sbb
mov
imul
inc
out
daa
mov
xchg
popf
fisttpl
and
lods
movsl
push
jb
xchg
push
xchg
mov
push
and
hlt
in
cwtl
mov
subb
push
sbb
lds
inc
mov
in
rorb
out
rcll
sarl
inc
dec
aas
jmp
insb
xchg
or
stos
push
shrb
add
push
sub
xchg
push
adc
pop
out
test
push
hlt
sarb
push
mov
movb
jg
jp
xor
push
test
mov
test
inc
or
test
int
jae
cltd
add
int3
xchg
inc
inc
add
inc
mov
hlt
mov
fisubrl
and
lods
je
stos
fs
lds
bound
cld
shrl
rolb
push
push
xor
cmp
sbb
pop
stos
test
dec
push
idivl
lret
xor
push
scas
mov
popa
push
mov
and
nop
ret
test
mov
ficomps
pop
inc
aas
hlt
ret
mov
xchg
fnstenv
pop
push
enter
hlt
fcoms
dec
nop
mov
jecxz
push
dec
ja
ud0
hlt
xchg
into
int3
xor
vpaddd
lods
shrl
cld
pop
pop
inc
cld
test
lods
icebp
cmp
xchg
xor
in
loopne
mov
aaa
inc
dec
enter
cmpsl
push
or
add
cmpl
rorb
cwtl
xor
jle
xor
mov
lock
push
enter
incb
insb
test
fcomp
test
bound
jp
sub
jge
jmp
mov
movl
test
leave
pop
dec
dec
andl
dec
leave
pop
std
adc
xchg
nop
xchg
mov
jmp
std
aad
xorl
fiaddl
cmp
xor
or
lahf
lea
sbb
lret
jb
mov
dec
mov
popf
mov
outsl
fldenv
pop
xor
out
or
fistpl
popa
repnz
mov
xorb
fiadds
lcall
iret
leave
mov
mov
daa
mov
adc
pop
ret
fdiv
push
ret
push
loope
xor
sub
sub
fwait
jg
sub
rcrb
cs
test
fstps
adc
mov
dec
mov
je
out
mov
jge
test
aaa
push
mov
sbb
push
pop
sub
sbb
jns
fwait
inc
push
mov
sub
mov
stos
test
mov
sbb
dec
push
call
pop
cltd
and
imul
ss
adc
insl
pop
adc
add
loope
add
mov
mov
cmc
add
cmc
push
or
mov
out
jb
mov
scas
lahf
fcmovnbe
pushw
jo
addr16
push
mov
fnstenv
arpl
clc
add
xchg
cmp
cwtl
loop
mov
mov
or
es
xor
xchg
jmp
es
push
xchg
and
sub
lods
das
test
out
cwtl
cmp
push
mov
xchg
aaa
mov
divb
mov
add
out
repz
lcall
js
bnd
pop
sub
mov
xchg
lods
xor
movsb
lock
lds
xor
jp
xor
and
xchg
xor
gs
outsb
cltd
jbe
cmp
cs
or
arpl
jbe
cmp
scas
std
shlb
test
leave
mov
pop
push
xor
imul
popa
jl
push
rcll
ss
in
mov
imull
repz
xchg
scas
add
ljmp
push
mov
and
enter
nop
aas
mov
jo
ret
icebp
dec
shlb
mov
mov
mov
xchg
dec
mov
in
or
inc
ss
or
movl
cli
xchg
jmp
and
outsb
xchg
add
fidivl
push
pop
movsb
inc
add
mov
mov
cmp
lods
cmp
aas
arpl
pop
mov
adc
fistps
stos
iret
or
sub
or
push
push
ja
adc
push
or
nop
or
sbb
not
sub
mov
xor
fisubrs
xlat
add
xchg
testl
shlb
push
adc
pop
push
les
sbb
mov
pop
imul
or
testl
cmp
or
push
xchg
cltd
popf
ljmp
xchg
push
dec
stc
stc
ja
mov
cmp
adc
outsb
out
and
or
dec
pop
mov
lahf
ret
jb
lcall
pop
js
add
jl
mov
and
xor
repz
mov
pop
lea
push
shl
sub
test
mov
fwait
push
ja
dec
push
insb
or
mov
int3
cld
lcall
fisubrs
out
mov
jnp
mov
and
inc
jl
mov
cmpsb
aaa
adc
adc
imul
pop
shlb
push
pop
int
imul
adc
mov
popf
pop
out
repnz
data16
sahf
mov
xchg
xchg
mov
cli
or
xor
mov
dec
gs
cwtl
in
xchg
leave
insb
dec
cld
cwtl
out
popf
pop
adc
cmp
push
xchg
xchg
xor
sub
rcll
mov
sete
or
push
aas
into
ljmp
xchg
lock
dec
mov
test
or
jae
xchg
mov
inc
je
je
pop
cmp
stos
clc
add
cld
arpl
fucomi
in
jae
clc
inc
cmp
mulb
into
imul
xor
sub
pop
dec
sti
mov
push
mov
fwait
xchg
mov
mov
adc
add
jo
outsb
mov
push
scas
mov
push
cmp
lret
xchg
add
mov
add
mov
sahf
jp
rorb
jg
in
xchg
xchg
int3
jmp
mov
es
dec
push
fldt
insb
jg
add
or
jmp
rolb
mov
inc
push
stc
adc
xor
nop
sub
daa
mov
dec
jecxz,pt
subl
test
lret
pusha
sbb
addr16
insb
mov
xor
imul
and
jbe
es
int
inc
adc
cmpsb
push
test
lcall
and
mov
inc
bound
add
nop
pop
sub
int3
mov
push
sbb
insl
mov
xchg
adc
and
jo
cmp
or
imull
add
mov
repz
jne
notb
xchg
dec
mov
pushf
cmp
cli
dec
in
or
xor
icebp
push
cmc
dec
std
mov
imul
cltd
or
mov
sbb
push
xchg
fcomps
dec
xor
fcmovu
loop
stc
mov
aas
dec
add
sbb
cwtl
push
ljmp
add
add
mov
cwtl
loopne
mov
or
sbb
repnz
outsl
xor
mov
sub
mov
loop
cmpsb
cmp
sbb
in
gs
aas
loope
je
outsb
dec
pop
mov
adcb
rcll
cmp
cmp
or
addb
bound
push
das
sbb
and
sahf
fisttps
jg
in
push
je
jns
scas
cmpsb
add
pop
xorl
aad
aas
test
mov
dec
sti
pop
addr16
test
lea
jmp
xor
imul
xchg
push
sbb
xchg
cmpsb
cmpsl
test
int
mov
daa
gs
fildl
lret
push
fnstsw
aas
push
repnz
dec
dec
cmp
movsl
mov
scas
test
pop
dec
in
imul
lea
jl
cmpsl
imul
sahf
neg
mov
lret
cmp
push
adc
jne
dec
inc
scas
mov
sti
iret
jg,pn
ret
sbb
dec
cmp
and
cmp
push
aam
data16
leave
sub
push
mov
pop
pop
push
sub
cmpsl
dec
shlb
push
in
mov
jl
insl
ret
push
repnz
dec
xchg
ss
xchg
int
mov
xchg
jae
pusha
dec
mov
inc
jg
aaa
es
out
jl
push
rorl
xlat
mov
xor
xchg
push
cmp
arpl
bound
mov
icebp
cmp
xchg
ret
rcrb
out
sbb
cmpsl
cmp
jo
pusha
and
test
mov
out
std
loopne
push
jmp
xor
push
push
lds
xor
pop
lret
shll
lock
lods
repnz
subb
lds
pop
dec
icebp
jmp
add
dec
int
je
repz
push
in
jp
xchg
xchg
test
jge
push
fiadds
pop
js
ja
out
cmp
jle
pop
mov
xchg
std
shll
jle
add
add
or
dec
outsl
repnz
cmpb
pop
sbb
xchg
jle
jecxz
jns
popa
stos
mov
loop
jg
imul
or
xchg
xlat
daa
mov
push
pop
adc
lret
pop
jl
mov
mov
inc
sbb
bound
cmpsl
sahf
pushf
mov
mov
dec
jg
sahf
xchg
inc
dec
push
push
jns
outsl
dec
arpl
loope
add
outsl
into
sbb
mov
pop
dec
in
add
push
mov
add
fwait
sbb
inc
jle
les
out
pop
data16
test
icebp
mov
ret
lods
lret
lock
push
mov
loopne
xor
push
repnz
push
mov
adc
pop
sub
or
repnz
add
inc
cmpsl
outsb
or
ret
adc
int3
rcll
and
pop
into
xor
dec
fcmovnu
fstpt
xor
loope
push
push
movsl
loope
cmp
icebp
dec
mov
xchg
iret
add
jl
das
aas
test
mov
inc
inc
adc
insb
sub
pop
lcall
lahf
jnp
fidivrs
and
cltd
pop
cmp
or
xor
ficoms
lret
jecxz
mulps
xchg
sti
fimull
jnp
out
mov
and
insl
mov
push
dec
call
mov
jp
pop
leave
jl
push
stc
mov
and
lahf
and
bnd
dec
cli
inc
pop
test
add
pushf
outsl
xorl
test
popf
sbbl
imul
jle
sarl
ljmp
gs
call
fadds
out
xchg
fsubrs
xchg
inc
je
int3
dec
dec
cmpsb
push
aam
xorl
paddsw
es
in
and
in
je
fldt
sub
out
pop
shrb
sub
ret
dec
jbe
push
dec
cmpsl
dec
jno
mov
jecxz
push
popa
scas
pushf
arpl
mov
jns
leave
pop
inc
mov
inc
mov
incb
mov
pop
sti
aam
push
movsl
clc
jge
cmp
and
inc
push
jns
inc
cmp
sbb
jg
scas
cmp
sub
in
in
cmp
gs
mov
push
movsl
dec
sbb
cltd
notb
pop
cld
je
test
and
gs
sti
sub
pushf
cwtl
jmp
in
dec
shrl
popa
loopne
sub
inc
jp
inc
mov
push
cltd
imul
or
jb
nop
and
mov
jp
lret
aad
fistl
xor
scas
test
in
push
daa
movsl
push
inc
xchg
add
nop
into
xchg
jp
mov
add
and
ss
jbe
jmp
loopne
rcrl
push
bnd
mov
xor
fwait
sbb
adc
adc
arpl
inc
jp
push
stos
mov
lds
jle
xor
imul
fwait
aad
outsb
divb
mov
iret
or
hlt
xor
lahf
adc
das
xor
cmpsl
push
arpl
pop
and
pop
mov
jmp
jl
movsl
ja
mov
xlat
loope
cmp
add
add
sti
das
pop
sbb
mov
inc
test
out
mov
cmp
jle
jae
pop
loop
adc
and
call
push
sbb
cmp
lock
cmp
fisubrs
mov
mov
push
fists
adc
loop
mov
jmp
das
mov
stos
repz
mov
jne
je
js
rcll
cmc
and
push
mov
jb
xor
or
arpl
and
lcall
xchg
inc
loop
mov
lds
insb
or
das
filds
add
aas
pop
int
data16
int
out
pushf
shlb
adc
dec
das
negb
xchg
gs
gs
je
std
out
mov
test
xor
lret
test
das
popf
ret
test
jnp
xchg
xchg
add
xor
repz
mov
adc
out
mov
in
or
cmp
ljmp
es
mov
adc
ljmp
notb
adc
leave
inc
jae
gs
ljmp
stos
hlt
sbb
jbe
jb
out
push
clc
je
dec
in
inc
lods
leave
test
ret
and
repnz
jle
fincstp
into
mov
leave
or
jle
push
push
and
cmp
popa
fld
push
sbb
iret
pop
or
dec
call
scas
xchg
stc
xor
rcl
or
sbb
ljmp
aas
sbb
push
cli
or
fldenv
mov
mov
lret
adc
push
inc
icebp
sub
and
ja
ja
jmp
outsb
dec
jle
xor
or
inc
mov
sub
or
fnstenv
ficomps
xchg
inc
push
decb
xor
cld
lds
fcompl
jb
in
mov
xchg
add
mov
dec
pop
push
push
in
pop
inc
bound
lcall
adc
push
jnp
sub
negl
adc
ja
fdivr
jns
jp
jge
push
push
int3
sub
rolb
mov
aas
ja
add
into
cmpsl
push
fldz
lcall
inc
adc
and
push
jle
pop
aad
shlb
cld
fsubp
fistpl
or
mov
lret
repz
inc
fdivrl
leave
adc
aaa
sahf
mov
dec
add
add
shl
shlb
sti
stos
shll
inc
fcomip
dec
iret
jmp
and
jns
aam
das
xor
jne
repz
mov
cmc
sbb
add
add
sti
rcrl
js
and
cmpl
je
or
adcb
repz
mov
andb
sub
lea
lods
bound
mov
mov
inc
mov
pop
sub
xchg
mov
testb
std
xchg
shr
call
inc
or
aas
lret
inc
adc
mov
xchg
lahf
xchg
dec
pop
loopne
rcrb
fwait
and
inc
imul
in
xlat
inc
lods
test
scas
or
mov
rcrb
popf
pop
push
decl
cmp
sarb
dec
inc
in
cs
fdivl
out
aam
jnp
clc
inc
jecxz
outsb
adc
inc
mov
cltd
push
scas
sbb
pop
dec
pop
add
push
loope
mov
popa
xchg
outsb
lahf
pop
aaa
and
rcrl
loop
repnz
ja
pusha
pop
jns
popa
in
sarb
pop
dec
push
xchg
adc
jo
jne
pop
gs
pop
sub
scas
jae
in
and
dec
mov
in
mov
je
repnz
mov
xchg
jmp
cmp
sub
push
pop
cmc
imul
lods
dec
mov
in
push
ret
push
push
repz
std
in
mov
mov
mov
clc
pop
sbb
movsb
cmc
insl
adc
jnp
pop
and
stos
cmp
push
ud2
lds
out
cli
pop
lret
inc
push
ds
and
sub
or
mov
add
stos
stos
nop
or
cltd
cmp
cmc
mov
mov
fists
int3
xor
popf
out
aad
cmc
out
or
data16
push
ficomps
sub
sub
pop
add
dec
mul
push
andl
out
cltd
inc
out
neg
mov
std
mov
push
sbb
xor
lcall
cmp
int3
outsl
loop
mov
das
cltd
jg
sbb
mov
ljmp
adc
push
out
inc
and
jno
adc
stos
sub
movsb
shr
frstor
sahf
out
mov
inc
sahf
pop
add
add
or
leave
add
mov
pop
ret
fimull
xchg
out
stos
movsl
push
and
in
subl
int
jcxz
stos
push
aas
push
inc
dec
arpl
test
lods
sub
mov
cli
rcrl
pop
jns
aam
push
insl
mov
cmp
ja
enter
in
pop
fiaddl
pop
shrb
shlb
test
mov
lahf
cmp
cli
xchg
mov
sub
or
outsb
jle
es
icebp
movsl
mov
shl
repnz
dec
imul
and
ja
and
insb
mov
fimull
loopne
or
pop
dec
add
jg
popf
mull
mov
icebp
std
cmpsb
mov
or
jnp
jnp
xor
mov
movl
cmp
lcall
ficoms
pop
out
mov
lock
pop
mov
js
jg
jmp
aas
enter
cmp
aas
push
push
movsb
mov
push
inc
fs
jbe
out
push
pop
mov
scas
mov
mulb
mov
and
push
cmpsl
test
popf
dec
adc
lret
sbb
mov
js
int
adc
cmp
leave
sbb
out
hlt
out
loope
jg
adc
add
dec
dec
clc
idivl
xlat
enter
inc
ss
mov
stos
jle
pop
inc
out
cmc
fdivrl
xchg
xor
loop
xor
mov
cmp
insl
inc
scas
test
daa
mov
inc
xor
pop
or
dec
pop
int3
adc
lahf
pop
mov
mov
fisttps
sti
mov
imul
mov
and
sub
fs
leave
enter
mov
mov
mov
add
mov
push
add
pop
mov
insl
mov
sbb
jl
xor
push
push
mov
addl
sti
jae
jne
jns
xchg
loop
push
into
out
ret
fcomps
test
xor
fdivs
mov
or
add
andl
and
pop
outsb
push
inc
es
lods
es
test
jp
jbe
mov
pmullw
jno
or
mov
xor
jo
jbe
jecxz
loopne
adc
xchg
shll
vaddsd
sbb
xlat
dec
hlt
xor
xor
adc
repz
fnsetpm(287
mov
xchg
sti
and
divb
lret
hlt
push
push
push
push
pop
ds
test
pop
test
dec
cmp
cmpsl
sbb
mov
out
pop
inc
scas
fxch
sub
loop
and
xchg
les
dec
jge
xchg
jns
dec
mov
std
cltd
xor
out
fisubl
mov
cwtl
sbb
sahf
dec
pushf
adc
lea
pop
cmpsl
lahf
xchg
movsl
pop
lods
popa
repz
dec
mov
adc
cmp
nop
dec
or
test
out
sti
loop
jo
or
in
cld
leave
inc
lahf
sub
jp
cmpsl
adc
pop
pushf
hlt
fisttps
jmp
rclb
in
loop
push
pop
popa
js
cli
popa
sbb
xchg
int
xchg
imul
push
dec
mov
cmpb
push
shll
nop
imul
xchg
roll
push
jns
jg
fsubrl
dec
lods
fdivs
shlb
sub
jp
pop
adc
ja
test
push
mov
ljmp
adc
ss
add
subl
xchg
and
sar
fidivrs
push
add
in
loope
int
xchg
inc
jns
rclb
sbb
push
pop
mov
insl
loopne
or
scas
mov
scas
lret
add
into
jb
ret
push
lret
test
inc
xor
int
test
dec
xor
fwait
mov
pop
cwtl
fdivr
inc
das
jnp
lds
ja
push
mov
push
jae
cmpsl
in
or
out
push
ss
xchg
fisttps
xchg
rclb
push
aaa
std
pop
sub
shlb
fildll
push
push
in
cmp
out
add
pushf
push
and
inc
ds
cwtl
fmul
xchg
and
push
mov
sbb
xor
es
loope
mov
pop
stos
or
sbb
test
push
sub
and
xchg
mov
mov
sub
cmp
rolb
sub
rolb
pop
mov
add
adc
pusha
add
je
add
aaa
dec
mov
roll
adcb
shr
push
xlat
jl
dec
inc
pop
gs
inc
data16
adc
aaa
iret
and
icebp
shl
xor
sbbb
mov
jl
bound
rolb
xor
shl
push
arpl
stc
lea
fs
testl
inc
mov
loope
es
cmpps
cltd
fists
pop
ljmp
std
jl
repnz
mov
cmp
inc
ficoml
push
mov
out
mov
push
and
dec
rcrl
call
pop
jle
test
xchg
inc
sub
lods
arpl
inc
rolb
cld
outsl
adc
mov
mov
addr16
int3
out
je
out
dec
adc
jnp
popf
pushf
mov
repnz
cmp
das
push
or
add
test
outsl
jl
addr16
aas
cmp
push
in
mov
sahf
aad
dec
leave
mov
repnz
mov
adc
mov
idivl
push
lds
addr16
xor
and
mov
sarl
mov
cmp
or
test
sti
pop
shrl
nop
mov
add
mov
or
mov
ficompl
dec
mov
inc
inc
arpl
xchg
xchg
or
scas
fwait
shl
or
cld
fbld
cmp
fs
popf
sbb
xchg
cmp
not
dec
sub
cmp
sbb
paddsb
jle
inc
pop
test
mov
inc
imul
mov
xor
xor
out
cli
fistpll
lods
ss
and
jge
cmp
xorb
call
xor
fdivrs
jge
push
push
cwtl
pop
daa
fldl
pop
imul
push
sub
jle
push
adc
repnz
jg
dec
sub
fldt
push
push
sub
das
out
push
fisubrs
mov
xchg
lock
sbbw
mov
andl
sbb
sbb
ljmp
in
xchg
and
push
loope
push
xchg
imulb
cmpsl
mov
cli
ficomps
adc
add
arpl
push
push
jecxz
push
ret
pusha
xchg
mov
rclb
loope
hlt
sbb
fs
lods
out
add
je
imul
mov
or
xchg
ljmp
jns
adc
in
jo
adc
xchg
sbb
cwtl
repnz
mov
lret
ret
loopne
or
test
orb
mov
add
lret
and
lods
ljmp
leave
or
aam
clc
gs
bound
imul
inc
pop
jmp
jae
mov
mov
or
sub
lea
maxps
rcrb
scas
out
mov
push
data16
cmc
ret
push
or
daa
jbe
or
and
push
stos
jnp
shlb
push
shrl
movsb
mov
sub
mov
jns
adc
in
pop
fs
mov
cmp
into
lret
adcl
push
popa
cmp
movsb
dec
inc
rcr
sbb
aas
push
adc
jno
sbb
xchg
cmovp
dec
out
mov
dec
lods
push
push
cmp
mov
lret
inc
das
mov
pop
data16
fcom
mov
push
or
addl
mov
cli
and
fldt
cmp
movsl
mov
in
push
sub
gs
fneni(8087
mov
xor
mov
fnstsw
sub
or
inc
test
imul
jb
dec
mov
fs
push
adc
or
inc
icebp
dec
mov
imul
xor
movsl
ljmp
arpl
stos
dec
mov
jo
icebp
mov
cmp
fildll
xor
mov
insb
fdivr
sbb
mov
sar
fisubl
test
insl
and
jne
shr
and
cli
movsl
jmp
pop
cmpl
das
sub
lods
push
sbb
lods
fsubr
ja
mov
scas
pusha
add
nop
sub
add
add
inc
or
pusha
push
xlat
addr16
fstpt
ror
cmc
loop
dec
and
jecxz
movsb
add
cmp
jge
gs
in
arpl
sti
out
pop
jg
dec
sarb
inc
adc
sbb
sbb
in
jno
icebp
dec
arpl
call
repnz
popf
pop
rclb
dec
mov
add
movsl
imull
push
bnd
pop
sahf
lahf
mov
sti
sub
clc
popa
mov
xchg
pop
dec
inc
aaa
cli
movsb
pop
iret
and
pop
pop
pop
jno
mov
adc
adc
and
insb
data16
into
lds
scas
stos
xor
test
stos
mov
pop
mov
scas
jb
fldenv
in
push
icebp
push
rcll
cmc
dec
and
clc
repnz
sub
dec
sbb
repz
dec
rorl
cltd
fdiv
and
push
sbb
shl
mov
or
ret
add
mov
pop
lret
push
and
mov
pushf
out
scas
cmp
out
rorl
inc
outsl
subb
inc
inc
mov
push
stos
pop
rcr
stos
int3
mov
jno
xor
fwait
cmp
lret
loope
arpl
cmp
fsub
out
and
sub
mov
mov
sti
les
repnz
mov
rep
pop
aad
loop
xor
xor
and
cwtl
in
add
sarl
push
inc
ljmp
inc
test
adc
test
cmp
idivb
leave
pop
mov
ljmp
sti
fidivrs
clc
aam
es
outsl
mov
lea
fldcw
lcall
dec
mov
clc
push
mov
push
fcmovnbe
mov
mov
loop
fistpl
mov
jg
cs
sar
lock
push
xchg
push
js
clc
jmp
sub
add
in
xchg
je
out
push
pop
sub
inc
mov
pusha
cli
xor
out
push
add
xchg
mov
push
sar
aam
daa
clc
mov
lds
sti
sahf
lcall
mov
inc
enter
aas
mov
gs
xchg
push
jae
pop
sti
xor
cmpsl
cmpsl
xchg
gs
std
pop
repnz
dec
push
imul
xor
stc
cmp
mov
sub
mov
mov
xchg
sbb
or
insl
sub
cmp
negl
enter
test
cmc
rol
aaa
jns
fucomi
test
xor
repz
in
mov
je
jge
pop
les
ljmp
adcl
movsb
cmp
loop
mov
inc
sbb
jecxz
clc
popa
sub
cmp
in
jo
xchg
bnd
ja
divl
mov
iret
popf
dec
dec
shrb
outsb
mov
ss
sbb
or
int
jno
mov
or
xor
inc
inc
adc
mov
mov
les
pop
decb
cwtl
fs
xchg
pop
rolb
push
insb
fistps
das
call
jns
je
or
cmc
test
ds
out
fdivrl
inc
rol
add
pusha
into
push
sbb
pop
stc
and
roll
subl
lock
lock
int3
xchg
sub
icebp
xchg
cmp
data16
pop
xor
in
or
sahf
mov
roll
in
in
add
cmp
add
cld
sahf
pop
adc
mov
jns
mov
mov
inc
xor
mov
cli
dec
rorl
sub
inc
stos
sub
adc
rclb
mov
aam
inc
aaa
das
mov
loopne
aas
and
cmp
jg
pop
inc
cmpsl
jbe
pop
mov
mov
mov
and
mov
aaa
jecxz
adc
pop
lcall
add
or
sbb
adc
xchg
pop
push
sbb
mov
pop
aas
xor
sub
mov
scas
inc
inc
rolb
stc
mov
or
mov
fcmovnb
push
pusha
enter
arpl
sub
xchg
jo
sbb
or
inc
nop
dec
sub
lcall
push
or
stos
movsb
xchg
inc
jb
xchg
jbe
rol
pushf
or
jp
jbe
xchg
inc
fstpl
imul
out
push
stos
mov
loope
sub
inc
fmul
dec
mov
dec
popa
jae
out
mov
imul
outsb
xchg
xchg
mov
sbb
or
cmp
add
mov
and
sub
jo
inc
xchg
fisubs
lret
mov
or
scas
mov
sub
fists
test
enter
mov
mov
mov
and
ret
bound
fs
dec
and
or
pusha
xor
cmc
push
cwtl
fldt
sbb
adc
dec
pop
mov
sti
lods
stc
cltd
pop
cs
push
mov
int
loopne
test
jmp
fdivrl
push
xlat
push
jns
xchg
jne
inc
aas
inc
inc
add
pop
mov
jle
test
imul
mov
sub
inc
mov
push
dec
mov
out
stc
call
xor
mov
sub
fs
int3
fstp
push
aaa
mov
push
out
int
or
je
movsb
inc
sub
mov
in
adc
adc
sahf
cmp
mov
jbe
pusha
inc
test
pop
push
sti
das
pop
out
jg
mov
xor
xor
push
pusha
les
mov
shl
sub
mov
repz
mov
adc
adcb
pop
ret
jmp
push
das
aam
enter
test
mov
xchg
fidivrl
daa
mov
and
xor
add
sub
data16
mov
push
mov
push
mov
fwait
sarl
outsb
cmp
sahf
loope
lea
add
adc
ljmp
cmp
sub
xorb
cltd
push
lret
pop
out
daa
inc
mov
jnp
and
push
orb
test
or
outsb
adc
iret
push
mov
adc
outsl
pop
movsl
clc
loopne
mov
jp
xchg
mov
inc
inc
adc
mov
sub
out
xor
in
insb
and
push
insl
jb
pop
inc
push
data16
mov
xchg
pop
lds
enter
jmp
aaa
arpl
stos
mov
xchg
and
pop
fcompl
addr16
roll
jle
jnp
mov
and
sbb
mov
fxch
ja
mov
push
shlb
xor
in
dec
outsb
cwtl
inc
dec
ds
into
ja,pn
call
dec
sbb
cmp
cmc
inc
lods
add
mov
mov
cld
je
enter
shlw
pop
adc
adc
mov
stos
stos
rcll
cli
shll
ljmp
sub
mov
shl
sarb
stos
sub
ret
jmp
add
loopne
dec
pop
xor
mov
flds
and
pop
adc
push
jmp
xorl
rcl
lret
mov
cmpsl
movb
lea
dec
sub
imul
addb
fisttpll
mov
fisttpll
insl
hlt
testl
loope
pop
dec
mov
or
or
aaa
jbe
pushl
pop
out
mov
test
test
je
inc
lcall
pop
dec
jg
jne
cmp
jl
loop
into
or
orb
xchg
icebp
xor
adc
lcall
jp
and
xchg
push
popa
push
mov
jle
scas
xchg
js
movsb
mov
inc
lret
inc
int3
add
insl
fs
xchg
jns
lahf
adc
lahf
or
or
cmp
jae
lds
jno
xchg
adc
sarb
movsb
xchg
dec
cmp
pop
daa
cltd
adc
out
fnstenv
lahf
mov
inc
es
dec
cmc
inc
adc
dec
push
sahf
loop
push
dec
pop
sbbl
or
fldt
inc
je
add
cmp
imul
xchg
inc
inc
ja
ret
jmp
mov
and
shlb
inc
in
cwtl
imul
fidivrs
mov
or
sub
cmpsl
and
sbb
orl
mov
inc
out
jg
mov
das
xchg
inc
mov
pop
jp
inc
sarl
mov
add
adc
inc
jle
icebp
insb
aam
aam
repz
mov
outsl
xor
and
cmp
outsb
mulb
push
adc
or
in
arpl
pop
inc
and
inc
pop
dec
pusha
pushl
push
mulb
jmp
push
aad
test
push
xchg
mov
adc
outsl
loopne
and
xchg
add
aas
sti
mov
gs
mov
leave
enter
pop
jp
pop
dec
jp
negl
fcmovnu
mov
subb
jg
imul
adc
dec
into
pop
jl
ds
lock
inc
and
inc
or
push
add
lret
mov
and
decb
movsl
xchg
pop
adc
push
xchg
adc
ss
movsb
arpl
or
inc
das
arpl
out
cmc
pop
xor
int
push
push
push
dec
or
dec
mov
std
or
jb
mov
or
jo
push
inc
dec
std
mov
call
pop
push
xor
add
mov
push
in
adc
sub
imul
lret
daa
sub
sar
inc
mov
xchg
cltd
addr16
rcrb
mov
sahf
mov
loopne
pop
xchg
push
fnsave
sbb
xchg
ret
and
adc
jae
add
testl
mov
xchg
movsl
cmpsl
sub
je
push
xchg
jl
push
mov
lcall
ja
or
sarb
jbe
fisttpl
xchg
pop
pop
test
hlt
inc
cmpsb
cmp
incb
lods
and
adc
fcomps
cmc
add
fsub
scas
jg
mov
sub
loope
jecxz
pop
and
pop
add
mov
popa
dec
xor
fbld
mov
xlat
push
out
mov
das
mov
sub
inc
in
or
nop
xchg
push
and
popa
arpl
icebp
mov
mov
inc
sub
int3
mov
mov
push
adc
mov
inc
insb
js
lret
pushf
iret
dec
rorb
into
outsl
mov
movsb
shlb
test
movsl
stos
rcrb
test
push
mov
clc
dec
lods
mov
stc
outsl
out
mov
xor
mov
imul
das
push
mov
inc
dec
loopne
mov
cmp
pop
sub
in
sahf
popf
rol
mov
pop
xor
aaa
mov
xor
std
lock
arpl
pushf
scas
inc
rcll
cmp
adc
fnstsw
aam
mov
mov
ret
mov
fildll
push
lock
xchg
sahf
mov
or
nop
rclb
add
xor
ret
push
ljmp
in
sub
ss
sub
sbb
fwait
jmp
cmp
loopne
divl
xlat
and
and
add
jo
outsl
xchg
push
rolb
sub
add
pop
pop
sbb
xlat
mov
sub
dec
jg
ljmp
gs
pop
cli
add
sarb
lds
mov
les
ret
jp
push
sub
mov
scas
mov
int
push
outsb
and
add
mov
notb
jmp
addl
loope
in
mov
out
mov
xchg
mov
push
js
jns
es
cmp
xor
add
fsubl
jmp
add
test
pushf
outsl
or
pop
movsl
pop
cmc
xor
in
sbb
dec
pushf
daa
jle
sar
pop
cltd
xor
in
cs
mov
sbb
pop
out
test
lods
data16
scas
xor
jge
lds
pop
cltd
sbb
xor
dec
cld
roll
movsb
cmp
repnz
jge
dec
into
add
pop
int3
sbb
out
mov
seta
outsl
stos
lods
xor
dec
add
adc
adc
pop
push
or
int3
inc
push
scas
into
rol
mov
shlb
pop
data16
fbstp
jecxz
sub
mov
cmp
xchg
enter
mov
pop
mov
fistpl
shll
xor
cmc
stc
mov
push
jne
lret
cli
sbb
mov
xor
dec
mov
test
leave
jp
mov
nop
cmp
ja
xchg
jo
sbb
cmp
pop
fld
push
sub
pop
movsb
lcall
xchg
inc
xor
jl
cmc
adc
mov
pop
or
imul
fistpl
sub
cmovl
dec
push
divb
cmp
lods
xor
aam
inc
adc
mov
clc
xchg
jns
jns
pop
fdivr
adc
repz
push
js
mov
inc
push
and
jns
pop
mov
sbb
negl
stc
jp
pop
dec
xor
sahf
fnstcw
xlat
in
mov
pop
mov
dec
xchg
fsts
gs
inc
inc
dec
pop
pop
push
and
daa
jno
jo
mov
inc
rcrb
jno
call
pop
add
mov
das
mov
leave
jg
and
or
push
cmpsb
fildl
addr16
mov
out
test
mov
push
lea
mov
aam
mov
popa
adc
or
ret
pop
cmpsl
aas
inc
daa
push
pop
decb
push
repz
or
incb
neg
fs
xor
pop
push
jb
fsubrs
push
lahf
jg
adc
fists
mov
movsb
jp
push
orl
sarb
sbb
fstps
sub
pop
mov
xor
xchg
and
lock
and
les
repnz
pop
xor
or
cmovno
test
cmp
cmpsb
push
addr16
imul
cmp
xchg
mov
scas
add
repnz
mov
mov
adc
or
lret
add
rcr
les
pop
test
sub
adc
insb
or
push
mov
xchg
bound
imul
pop
js
push
addr16
in
aam
mov
lret
inc
divb
pop
mov
fwait
stc
cmc
xor
andb
dec
in
xchg
fs
xor
stos
jb
sbb
setg
adc
adc
or
out
mov
fxrstor
les
inc
push
mov
pop
mov
cmp
loop
in
cmp
pushf
dec
dec
jmp
ret
xor
pusha
ss
out
clc
adc
aas
sbb
pop
int3
dec
ds
clc
fldcw
sbb
mov
gs
dec
pop
push
xchg
testl
inc
dec
das
dec
pop
ror
ljmp
xlat
pop
lods
int3
mov
push
cmp
aam
out
pusha
dec
mov
mov
mov
ficoms
outsl
cmp
or
adc
aad
fcmovnbe
enter
lds
pop
push
dec
repz
mov
scas
insl
fsubrs
xchg
xor
mov
fsubrs
in
lret
xchg
dec
mov
mov
out
or
sarb
jp
pushf
sub
repnz
cs
cs
push
adc
sub
jp
ss
cmp
repz
inc
cwtl
insl
scas
roll
insl
int3
sbb
flds
jg
xchg
mov
xor
inc
push
xor
cmpl
mov
mov
testl
inc
or
popa
mov
mov
fnsave
pushf
sbb
leave
movhps
pop
shlb
pop
push
fidivrl
mov
add
popf
push
jge
or
xchg
push
pop
mov
repz
sbb
xor
in
and
and
and
ds
inc
test
inc
test
pop
cld
es
les
sub
mov
mov
mov
pop
jg
hlt
ret
imul
mov
lods
sbb
int
dec
jbe
das
xor
and
negb
arpl
pop
aaa
mov
iret
cli
jae
jle
repz
psrad
cmp
fcoms
into
sub
dec
imul
xor
jns
stos
arpl
scas
adc
adc
mov
mov
push
fdecstp
in
inc
cmp
in
or
lahf
pop
sbb
idivb
pusha
mov
xchg
mov
roll
fdivs
cmpb
ret
mov
xchg
sbb
sub
repz
insl
iret
xchg
sub
insb
fwait
mov
stos
dec
sub
mov
sti
vmulpd
scas
mov
lock
nop
cmp
fstps
insl
pop
bswap
xor
pop
inc
dec
mov
js
xor
cmc
idiv
push
movsb
pop
adc
pop
xchg
loopne
mov
aam
and
and
ljmp
or
sub
push
stc
imul
mov
lods
int
inc
sub
clc
lds
dec
cs
in
inc
mov
jl
cmp
fiadds
sbb
xchg
pop
stos
movsl
je
jmp
ds
testb
sbb
push
mov
mov
xchg
or
cwtl
cmp
mov
push
lock
ja
ss
xchg
xlat
sub
call
into
lcall
push
xor
in
or
fcoml
pop
push
fs
adcl
sbb
pusha
aad
jnp
inc
jno
jle
xchg
or
fcomps
xchg
or
ret
xchg
dec
dec
jbe
pop
adc
aam
mov
dec
mov
fwait
shll
jecxz
adc
xlat
inc
push
push
out
jno
mov
xchg
xor
mov
in
xor
or
jno
out
iret
test
aaa
shll
decl
lods
into
xchg
mov
add
add
fists
push
jge
out
rclb
push
xlat
and
adcb
xchg
jl
pop
or
aam
push
mov
mov
add
mov
pop
push
nop
mov
loopne
divl
cmpsl
fidivrs
shlb
pop
dec
xor
lret
sbb
repz
fldcw
dec
cltd
dec
imul
dec
mov
popf
lcall
ja
add
xchg
mov
cs
jae
lods
inc
mov
jne
jp
cmc
pop
pop
fwait
and
call
add
xor
sbb
pop
jg
lock
mov
xchg
cld
stos
mov
jmp
loope
jae
jg
pushf
out
fxch
ret
shll
xchg
movl
test
pop
dec
and
movsl
roll
mov
sbb
or
adc
insb
imul
icebp
xor
into
ds
insl
xor
pop
andl
and
mov
and
and
outsl
and
lahf
or
xor
pop
jl
imul
in
addl
jbe
cmpsb
mov
cmp
out
pop
xchg
popa
nop
push
add
mov
ffree
inc
xchg
scas
mov
nop
sti
push
pop
in
add
inc
cmpsl
adcb
jnp
xlat
imul
in
sub
fstl
mov
pusha
cmpsb
std
push
mov
sbb
xor
pop
jecxz
pop
cld
pop
adc
cmc
and
sbbl
xchg
jmp
pushf
or
xchg
rcrb
out
pushf
cmpsb
xchg
xchg
jge
scas
fld
lret
sub
pop
mov
stc
jb
lds
mov
cld
jo
lcall
insl
std
jp
pop
or
dec
daa
cwtl
pcmpgtb
inc
sbb
jns
cs
fisubl
dec
fldenv
xor
mov
cwtl
add
xor
and
cmc
and
or
adc
lea
and
fistpll
mov
addr16
sub
out
jb
mov
lods
xor
in
scas
cwtl
jecxz
nop
mov
ret
lret
and
pop
shl
jmp
cmp
pop
dec
call
ret
movsb
and
shl
xchg
inc
out
mov
outsb
or
xchg
mov
dec
cmpsl
jo
xor
dec
xchg
xchg
jo
sbb
mov
and
dec
sarl
and
jg
scas
insl
sbb
push
leave
lret
xchg
mov
xchg
xor
push
xchg
inc
jae
jp
dec
aaa
xor
mov
mov
sub
pop
mov
loope
mov
sub
pushf
fmuls
pop
or
xor
shl
lret
fidivrs
imul
popf
mov
add
cmp
lahf
jnp
rorl
sahf
sub
cmp
add
add
enter
in
cs
sbb
js
bound
dec
loopne
pop
cmp
inc
lock
inc
dec
arpl
mov
mov
jne
outsb
sar
fisttps
xor
mov
test
push
lds
or
add
loope
cmpsb
cld
in
sbb
xchg
out
and
lock
adc
inc
xchg
mov
xor
adc
adc
orb
or
lcall
sub
xchg
sub
xchg
sahf
add
adc
jge
mov
pop
adc
int3
mov
cmpxchg
es
jmp
inc
jno
js
sbb
inc
sub
outsb
push
cmovbe
pop
mov
mov
xor
adc
jl
ja
xchg
outsl
fsubrs
push
inc
mov
xlat
fildl
bound
mov
subl
cmpsb
or
sarb
pop
or
cmpb
or
mov
popf
ljmp
nop
daa
into
adcl
add
jl
pop
mov
and
or
cmp
loopne
ja
addb
enter
cmp
repz
inc
mov
mov
xorl
test
mov
pop
mov
loopne
mov
mov
js
mov
outsl
add
pop
mov
cltd
push
popf
dec
aaa
add
in
imul
jne
cmp
lret
scas
xchg
sbb
aad
gs
mov
ret
add
mov
sub
stc
cs
cwtl
out
out
and
pushf
loopne
pusha
imul
mov
adc
add
inc
jge
mov
sbb
and
fimuls
cltd
lret
mov
je
or
pusha
or
pop
cmp
pop
sahf
jp
out
scas
dec
mov
dec
mov
jmp
cli
mov
int3
cmp
inc
pusha
mov
dec
xor
aaa
and
shrl
sbb
mov
movsb
and
adc
mov
mull
dec
push
cmp
por
xchg
mov
inc
xor
mov
rorb
sub
ja
je
adc
cmc
movsl
mov
sub
sbb
lahf
rclb
or
sub
shlb
jg
cmc
bound
aas
jmp
sbb
mov
jmp
lar
xchg
jp
jecxz
sub
js
scas
shlb
push
adc
inc
sbb
sar
jge
rcrb
jecxz
dec
cmp
clc
int
adc
data16
and
int
ficoms
popf
and
or
test
imul
mov
in
sub
xchg
notb
pushf
inc
in
mov
jmp
inc
jmp
and
jb
popf
fwait
int
push
sbb
dec
in
pop
jno
jle
jne
pushf
std
jnp
clc
mov
lret
xchg
in
xchg
push
pand
jg
std
mov
mov
mov
push
imul
xchg
lods
lahf
push
mov
fstp
push
jb
jle
add
push
dec
jns
cmp
adc
xorl
sub
xchg
ss
outsl
mov
push
pop
mov
cltd
jae
dec
int3
fistps
pop
and
pop
ja
adc
dec
mov
and
mov
cmc
icebp
ljmp
test
mov
repz
sbb
out
adc
ficompl
xor
mov
pop
stos
outsb
mov
mov
push
or
roll
sti
sub
and
lret
and
xchg
cmc
jg
rcll
dec
push
movsb
lods
jp
add
popa
xchg
cli
xchg
mov
xchg
ficoms
call
sbb
sub
mov
sub
sbb
pop
xchg
loope
test
push
and
movsl
or
xchg
loop
rcrb
cmp
roll
xchg
mov
mov
ret
sub
cmc
mov
push
xchg
or
mov
rcl
inc
mov
decb
pop
jl
pop
int3
daa
mov
mov
sub
sahf
mov
rolb
leave
fisttps
xchg
cwtl
js
cmp
test
xor
mov
js
in
dec
adc
sbb
and
fsubr
xchg
lret
inc
or
pushf
mov
and
cld
pop
fdivrs
xchg
stos
dec
or
cs
lds
out
cmc
push
jge
imul
jb
js
mov
cmp
cmp
push
xor
movsl
jmp
jnp
ljmp
fs
cwtl
xorl
fs
and
jmp
jo
xor
daa
rcrb
sahf
out
jbe
sbb
lcall
sub
push
mov
pop
fwait
sbb
mov
pushf
jmp
xchg
jle
lds
jne
popf
lods
mov
dec
lret
cmp
inc
flds
fsubrl
xor
mov
aad
dec
pop
push
imul
mov
jge
or
cltd
cmp
push
hlt
sbb
das
cmp
cmpsl
pop
mov
leave
adc
sbb
outsl
xchg
outsl
xchg
mov
xor
dec
sbb
push
icebp
dec
repnz
push
and
add
mov
or
pop
bound
add
push
pop
jo
or
mov
mov
imull
and
dec
and
jns
ja
sbb
push
loop
adc
xor
add
mov
mov
jge
movsb
mov
stc
inc
das
insl
leave
lods
fnsave
dec
cmc
pop
xlat
enter
dec
lcall
dec
push
xor
and
pushf
aaa
jbe
mov
add
jns
test
pop
scas
fisubs
sbb
pop
mov
mov
and
jmp
fmuls
mov
stos
or
icebp
jo
xor
mov
lds
bound
xchg
mov
mov
cmc
sub
scas
add
mov
sub
add
push
pop
psubsb
push
mov
es
jg
inc
jecxz
into
pop
xchg
js
lahf
sbb
shl
jo
mov
repnz
cmp
out
mov
add
dec
ror
out
aam
cmpsl
out
adc
pop
mov
fs
fdivrl
xor
fiadds
inc
inc
sub
popa
adc
mov
jns
sbb
mov
push
ss
jge
lea
fdivrl
lahf
mov
cmp
pop
data16
das
sbb
add
int
push
pop
lds
mov
repnz
mov
lock
jae
adc
bound
cs
dec
push
xor
xchg
into
out
popa
js
js
fsubl
push
imul
xlat
or
arpl
shlb
andb
push
sar
cli
sbb
xchg
test
stc
mov
push
push
mov
push
loope
lock
adc
fnsave
inc
stos
call
push
outsb
cmp
lret
les
ljmp
dec
dec
pop
pop
test
cltd
movsb
lea
push
lret
push
cmp
shr
jmp
les
daa
fwait
jo
loopne
cmpsb
pop
push
or
add
inc
icebp
lea
sbb
mov
push
inc
push
rcll
mov
cmc
arpl
fnstcw
pop
enter
fstl
mov
aam
dec
add
push
popa
mov
sub
std
das
fsts
cmp
mov
inc
adc
lret
mov
sbb
outsl
mov
pop
imul
test
and
adc
loope
testl
jno
xor
shll
movsl
dec
mov
mov
mov
bound
sbb
push
ss
mov
jns
mov
jmp
mov
test
icebp
inc
mov
xor
adc
dec
aam
mov
popa
lret
xor
mov
insb
pop
cwtl
and
push
adc
adc
push
xchg
lods
sbb
jnp
and
iret
imul
xchg
mov
push
sbb
xor
ljmp
adc
orb
pushf
mov
int3
jmp
aaa
nop
addr16
add
push
push
lahf
enter
xchg
jo,pn
or
push
cmp
adc
lret
sub
sahf
aaa
mov
aas
push
sbb
jae
sub
movsb
sti
outsb
and
rolb
pusha
sbb
sub
mov
push
or
dec
cltd
sbb
adc
and
pop
mov
scas
shlb
andb
push
xor
pop
jno,pt
push
leave
pop
fwait
aad
mov
sti
shll
cmovp
mov
shr
cmpsl
push
shll
notb
xchg
mov
mov
outsl
mov
shlb
xchg
add
inc
jns
ja
stos
out
or
loope
arpl
es
fistps
test
test
inc
jge
cltd
leave
jle
stos
out
js
xchg
jae
ss
jno
xchg
inc
sub
pop
pop
mov
adc
jmp
jns
daa
inc
dec
jbe
pop
and
dec
inc
push
mov
dec
push
or
sub
inc
cmp
pop
fwait
icebp
pop
inc
dec
dec
adc
mov
sub
cmp
add
enter
adc
pop
in
stos
loop
and
dec
push
jns
or
push
in
mov
sub
out
repnz
lahf
mov
or
cli
rorl
jg
inc
out
rcrb
mov
and
pop
jnp
xor
mov
arpl
repnz
xchg
pop
mov
call
mov
xlat
mulb
lahf
cltd
shll
addr16
cld
xor
and
jl
sbb
sub
xor
sub
xchg
aas
sahf
or
out
in
fdivl
mov
or
filds
imulb
pop
popa
jb
popa
les
testb
adc
pop
push
scas
cmpsl
pop
int3
les
nop
xor
jne
test
ds
push
pop
cs
ljmp
cmpsb
lock
aad
fistpl
pop
lock
or
mov
inc
cmp
adc
and
loop
jp
push
data16
jecxz
loop
pop
mov
clc
mov
test
jg
mov
cmp
jnp
push
dec
pop
inc
hlt
pusha
std
rcr
adc
dec
popa
mov
outsb
mov
push
dec
js
cmp
mov
pop
mov
dec
mov
xchg
mov
aad
cmpsl
shll
sbb
test
dec
pop
clc
je
xchg
pop
mov
mov
cmc
mov
xor
sub
push
sub
jl
lds
push
inc
jle
imul
pop
lock
das
xor
imul
rorb
fnstenv
rcrb
enter
arpl
pop
xor
push
push
adc
es
es
mov
add
pop
movsb
pop
loop
push
mov
pop
add
cmpl
dec
pushf
dec
adc
out
sub
xlat
call
cmc
pop
push
das
out
addr16
lcall
mov
loopne
cwtl
cmc
and
and
pusha
jae
ror
in
out
ds
sbb
xchg
push
pop
lock
sub
adc
fucomip
movsl
dec
mov
std
or
sub
dec
scas
enter
cmp
sub
add
mov
lods
dec
inc
mov
mov
repz
dec
inc
or
test
mov
arpl
sub
adc
mov
popa
roll
test
ja
mov
shlb
mov
sub
lret
push
lret
dec
dec
jp
push
pop
movsb
stos
lahf
out
shll
ficomps
xor
popa
mov
xchg
sarb
adc
jo
jo,pn
test
push
sub
lahf
shlb
xor
mov
addr16
cs
std
dec
lea
xor
cmc
and
out
cmpsb
pop
test
cmp
mov
inc
sbb
lods
push
fadd
pusha
aad
cmp
pop
jge
or
and
cmp
outsl
push
nop
test
adc
inc
fistpl
jno
jl
test
pop
ja
xor
xor
and
fmuls
outsl
scas
cwtl
ljmp
cmp
pop
int3
cmp
cmp
int
or
andb
mov
std
add
jecxz
scas
pop
imul
jecxz
pop
xchg
inc
push
int
xor
add
ljmp
cli
cmp
ss
jle
push
pop
repnz
lods
mov
leave
push
js
mov
push
mov
rorl
mov
adc
inc
movsl
pop
into
rorb
push
xchg
xlat
inc
adc
pop
fstl
mov
xor
out
sub
iret
mov
push
lret
adc
cmp
scas
mov
push
je
pop
test
inc
cmp
xchg
dec
movsb
adc
pop
fsts
inc
jbe
aad
sub
fnsave
mov
fdivrp
das
cli
mov
adc
xchg
shr
add
jp
xchg
pop
enter
pop
push
insb
jp
jne
in
pop
icebp
in
in
insb
lahf
xor
test
or
mov
aaa
in
rolb
out
negb
xor
loop
out
sbb
add
jecxz
fimull
mov
push
adc
fstpl
nop
mov
cwtl
pop
subb
push
pusha
jge
shlb
inc
loope
orb
dec
in
loop
and
dec
xchg
pushf
aam
dec
push
lods
sub
int
jecxz
insb
sub
or
xor
and
xor
fs
sbb
or
or
push
movsl
pusha
or
lret
pop
out
jb
xor
outsl
cltd
movsl
push
inc
lods
shlb
inc
push
das
cmp
mov
xchg
in
sarl
and
add
mov
and
test
fsubr
or
addr16
dec
xor
jbe
mov
out
xchg
paddusw
jecxz
aaa
pop
cltd
hlt
fists
and
add
lock
push
lahf
cli
js
pop
leave
jmp
mulps
xchg
sub
sbb
sub
inc
test
jge
arpl
pop
xchg
mov
or
sub
mov
jge
xor
add
push
xor
lcall
leave
ss
outsb
pop
das
jo
outsb
sub
mov
ja
sub
mov
cmpsl
jg
xor
fwait
es
add
pinsrw
sbb
popf
pop
shl
cmp
int
lret
xor
and
pop
sub
fcomp
and
sub
loope
aas
push
pop
rcrl
rclb
adc
cli
je
mov
rolb
in
mov
jecxz
dec
orps
sti
add
clc
mov
cmp
or
test
mov
in
push
mov
es
push
add
xor
mov
int
out
jb
push
sbb
lea
lock
test
xchg
cmp
scas
dec
ds
sbb
fimull
adc
adc
popf
outsl
outsb
ss
cld
jle
scas
jle
mov
and
jle
movlps
jge
lcall
jns
es
xchg
or
in
mov
bound
xchg
lock
fsubrl
out
cmp
fwait
mov
push
subl
inc
popa
out
mov
cmp
jl
test
add
mul
ds
and
dec
rclb
lods
push
inc
push
outsb
loop
dec
out
pushf
push
aaa
mov
pop
pop
hlt
hlt
jnp
jmp
add
push
or
iret
rep
pop
pop
add
int
mov
cld
push
lret
dec
incb
jmp
mov
int3
fcoml
mov
mov
fbstp
sahf
and
jb
mov
push
mov
adc
push
rclb
sbb
dec
sub
jo
daa
negl
gs
aas
sbb
xchg
mov
cmp
push
fwait
movsb
imul
mov
ret
cmc
adc
dec
fimuls
aad
adc
adc
and
outsb
jp
add
nop
out
xchg
clc
push
jnp
sbb
sbb
dec
pop
fidivl
cld
lods
loope
jnp
mov
sti
sub
cmpsl
jp
cld
inc
lcall
imul
add
shl
and
adc
sbb
aad
cmp
fcoml
jo
lea
inc
mov
pop
mov
xlat
xchg
imul
jp
out
mov
mov
lods
jecxz
cwtl
dec
mov
push
scas
std
cmp
shl
jecxz
cmp
sub
adc
or
dec
test
xor
push
push
sbb
jge
les
or
psadbw
lods
jl
stos
loopne
insl
popf
scas
adc
into
jns
mov
mov
push
or
mov
mov
jbe
jne
jg
repnz
cmp
mov
adc
push
sub
aas
push
or
sub
mov
mov
ret
sub
xor
ret
out
pop
clc
adc
out
sbb
hlt
popl
addr16
jmp
dec
pushf
inc
sbb
test
adc
add
adc
dec
insb
pop
inc
push
fs
shl
insb
push
and
pop
in
out
and
cmpsb
dec
mov
sub
fmull
add
mov
test
mov
lret
call
scas
daa
jo
lret
mov
lds
push
mov
sbb
inc
cmp
jnp
aaa
or
mov
and
ljmp
ret
fidivs
pop
jne
imul
int3
movsl
adc
add
push
fidivrs
rclb
mov
push
mov
loop
add
sub
stc
pop
sarl
jns
std
xor
adc
divb
push
pop
mov
cmp
dec
leave
test
or
xchg
adc
inc
into
ret
loopne
push
push
test
sbb
aaa
stos
fisubs
repnz
in
or
sub
push
out
sbb
dec
dec
daa
insb
nop
leave
addr16
in
outsl
mov
es
mov
jo
add
test
std
sbb
test
loopne
xor
mov
sbbb
xor
fidivl
arpl
fldt
xchg
mov
insl
test
pop
push
test
mov
daa
fisubl
ljmp
xor
mov
xor
push
out
insb
dec
dec
call
hlt
movsb
sarb
xor
sub
pop
bound
ja
jmp
xor
out
hlt
dec
push
pushf
aad
and
dec
push
jge
jb
nop
inc
mov
sub
xchg
mov
jb
int
pop
inc
aad
fldenv
arpl
jb
movsb
pop
int3
or
mov
pop
mov
out
jnp
jns
inc
testb
icebp
addr16
pop
loop
ljmp
nop
xchg
push
cmp
adcb
xor
or
or
mov
fcomps
mov
dec
xchg
fdivs
sbb
mov
repz
add
pop
xchg
pop
inc
adc
push
out
push
inc
mov
dec
jbe
or
outsb
les
ret
fwait
mov
sbb
sub
adc
xor
out
push
push
inc
xor
pop
dec
adc
mov
lret
inc
nop
aas
xchg
xchg
cmp
call
incl
lock
idivb
xchg
fstl
pop
out
xlat
adc
fmull
ret
pop
sbb
dec
mov
es
std
aas
mov
mov
sti
jns
mov
scas
push
mov
cmc
pop
popa
mov
mov
adc
mov
cmp
fs
mov
dec
fmuls
push
int
leave
roll
mov
xchg
cmpsb
xlat
mov
popf
push
cli
int
jns
mov
push
push
dec
and
stos
fwait
mov
mov
mov
adc
mov
notl
inc
mov
pop
outsl
and
repnz
dec
and
push
scas
out
in
mov
cmpsl
movsb
mov
scas
dec
loop
popa
icebp
pop
sbb
pop
movsl
dec
sahf
adc
pop
in
jecxz
in
sti
push
in
inc
xor
mov
inc
xchg
pop
les
scas
jle
stos
sti
into
adc
mov
ud2
shlb
pop
mov
mov
mov
pusha
jo
xchg
sahf
sbb
mov
xchg
xchg
adc
cltd
or
sbb
cld
push
mov
data16
adc
pop
mov
xor
test
pop
sbb
sar
dec
push
add
push
sbb
pop
es
sub
lods
fs
mov
adc
js
shr
cmpsl
add
dec
cmpsb
sbb
or
rolb
xlat
stc
xchg
gs
xlat
mov
jns
dec
loop
xor
int3
lret
shlb
incb
les
scas
andb
mov
aad
mov
sbb
or
dec
push
sbb
lds
push
dec
and
sub
push
int3
push
aad
jns
dec
push
clc
jl
fldl
xor
add
adc
jns
pushf
dec
cld
dec
out
fisubl
push
rcll
fnstsw
or
rclb
xor
aas
les
lret
pushl
inc
sbb
dec
repz
pushf
clc
iret
mov
pop
push
rolb
ja
and
adc
inc
mov
out
lret
fsubrl
cmp
mov
loopne
call
std
push
imul
std
es
or
lods
in
push
and
orb
mov
pop
sub
ja
std
lods
sub
and
cvttpd2dq
add
jno
jecxz
mov
xlat
mov
dec
popl
mov
dec
push
adc
test
sub
leave
adc
popa
jecxz
in
insb
mov
pop
scas
out
ss
mov
lods
cmp
movsb
push
mov
in
mov
lret
cmp
sbb
imul
jae
pusha
call
push
out
mov
sarb
stc
and
xchg
lods
call
adcl
jo
mov
xchg
enter
test
shl
inc
mull
orb
xor
shl
aas
into
shr
stos
sbb
ja
test
enter
loopne
fmuls
in
fs
rclb
add
iret
popf
lea
add
pop
inc
cmp
or
inc
push
sbb
lcall
fsubr
xchg
xchg
andb
pop
add
test
xor
into
push
fwait
jp
gs
push
xor
gs
pusha
push
jo
stc
mov
cwtl
out
push
adc
stos
test
jb
cli
and
fwait
movl
add
xchg
test
sub
lock
pop
nop
and
call
xchg
mov
aas
addb
push
jmp
dec
pop
lock
sbb
dec
push
stos
in
jb
adc
popf
jge
push
add
push
idivb
jg
mov
and
lods
dec
push
cmp
add
neg
ret
fs
inc
and
fstpl
stos
js
dec
outsb
das
iret
psrlw
mov
testb
stos
xchg
imul
mov
test
push
adc
add
push
icebp
cwtl
enter
subb
sbb
and
cvtdq2ps
fwait
das
lahf
std
pop
jl
mov
and
sbb
fidivrs
push
xor
ror
stos
enter
aad
mov
cli
in
sbb
shrl
mov
lods
outsl
push
lret
adc
push
xor
or
and
insb
mov
dec
mov
mov
fidivs
adc
lea
stos
xchg
mov
ljmp
test
scas
mov
jl
mov
rorl
pop
adc
push
daa
notl
lret
mov
inc
ds
aas
pop
sti
mov
push
loopne
jbe
xor
inc
cmp
lret
cmc
std
xor
add
mov
mov
mov
adc
cmpb
adc
and
clc
push
movsb
mov
stc
repz
sub
xor
shlb
inc
mov
clc
cmpsl
lret
in
arpl
sahf
xchg
inc
idivb
sahf
cltd
cmp
jmp
cmp
adc
push
and
mov
fsubrl
popa
push
lods
decl
int3
sbb
jl
stos
dec
sbbl
or
jnp
arpl
xor
aas
push
out
pop
mov
adcl
test
mov
jl
pop
lahf
dec
pop
inc
in
dec
jae
mov
punpckhbw
pop
adc
lods
loop
shlb
notb
scas
shll
adc
rolb
int3
pushf
jnp
pop
xchg
inc
psubusb
clc
cmp
bound
mov
jnp
cmpsl
mov
repz
push
mov
jno
xor
aaa
or
dec
sti
bound
dec
fistpl
std
clc
jmp
mov
xchg
xor
jmp
xchg
and
test
popa
dec
inc
movsb
and
movsl
mov
adc
aad
add
les
xlat
ljmp
xchg
ret
adc
jno
or
pop
mov
inc
xor
repz
jo
pop
cmp
pushf
mov
scas
in
popa
cmpsb
lret
in
mov
xchg
test
sahf
inc
call
es
mov
out
les
jb
add
stos
dec
ljmp
jb
dec
mov
or
mov
adc
fs
add
rorb
nop
loop
jle
xlat
pop
shll
jae
sub
dec
sti
adc
or
cltd
dec
cmpsl
loope
push
pushf
and
ljmp
ja
xchg
inc
xor
xor
inc
pop
mov
inc
notl
cltd
jl
mov
sbbl
notb
dec
lods
cmpsl
repz
pop
mov
cli
pop
sahf
gs
inc
push
movsb
mov
ds
add
repnz
jmp
xor
or
mov
add
xchg
push
xor
enter
sub
mov
inc
cmc
lock
pop
inc
adc
adc
cmpsl
push
jecxz
je
adc
and
cli
push
fcompl
jae
inc
push
out
dec
notl
pop
inc
mov
inc
pop
dec
pop
and
leave
orl
push
jne
jno
push
adc
test
mov
dec
sbb
es
fs
shl
xchg
mov
out
jbe
lahf
call
rorb
and
cmp
xchg
jl
lods
mov
or
jge
out
dec
jo
test
inc
orl
xchg
sub
or
mov
popa
push
mov
xlat
jno
sbb
push
add
sarl
and
sahf
int
out
jns
cli
lds
in
out
add
ds
and
fnstsw
xchg
aas
cmp
cmc
mov
mov
int3
in
or
sbb
std
je
popf
pop
xchg
test
xchg
dec
xlat
mov
test
andb
mov
dec
cmp
outsl
aaa
or
mov
dec
loope
out
jg
xor
mov
jmp
sub
repnz
dec
stos
lret
leave
push
xor
lahf
in
pop
scas
dec
dec
decl
data16
inc
ficompl
test
or
dec
fcompl
add
out
xchg
dec
xor
sub
and
outsl
into
jne
inc
in
notb
jne
pop
jl
fldl
pop
jge
mov
in
movsb
lret
push
fsubrl
inc
imul
cmpsb
in
xchg
push
and
cmp
push
mov
xor
and
sub
jae
adc
push
in
cwtl
cs
ret
shlb
loop
cwtl
xor
sub
cli
outsl
adc
cmp
ret
mov
mov
scas
lret
nop
hlt
mov
mov
or
inc
push
cmp
andl
roll
jns
inc
adc
jnp
dec
cmp
pusha
pop
sbb
mov
xor
vpunpcklwd
adc
or
rorb
ljmp
ljmp
dec
roll
mov
outsb
cmpsl
mov
inc
ret
push
je
ret
jecxz
mov
mov
or
movsl
cmp
adc
adc
subb
loopne
or
loope
leave
adc
neg
cmpsl
test
pop
lods
mov
xchg
sbb
inc
lahf
sarl
mov
movsl
inc
and
cli
add
inc
push
sahf
lret
dec
cli
xor
dec
lret
mov
cwtl
xchg
add
add
sahf
mov
aas
fdivs
cmpsb
lcall
add
cmp
jmp
test
pop
test
xor
cmpsb
sub
jb
jge
mov
icebp
lods
inc
mov
ss
inc
aad
movsl
int3
fildll
pop
inc
adc
fsts
movb
cli
xor
rcrb
loope
inc
sbb
cmc
and
clc
bound
jl
jmp
jnp
ljmp
inc
mov
sub
clc
mov
stos
shl
nop
jp
inc
mov
sbb
data16
fldenv
hlt
add
je
out
xor
pop
and
shr
cmpsl
dec
int3
jecxz
stc
jmp
testl
sbb
repz
adc
cli
push
pusha
clc
fs
fmull
mov
pop
pop
jae
sbb
sar
cli
inc
cwtl
pushf
jg
mov
fwait
shlb
mov
mov
dec
fistpll
mov
scas
ficoms
mov
rcrb
xor
xor
filds
fcom
pushf
cwtl
adc
add
hlt
dec
fdivl
xor
adc
stos
dec
xchg
jne
sbb
sahf
adc
push
or
cmp
int
orl
mov
aad
jne
dec
pop
sbb
iret
cmp
das
or
xor
push
enter
mov
mov
cli
lods
call
and
subb
jl
adc
add
xchg
loop
idivb
mov
mov
or
je
lretw
std
stos
xchg
add
sahf
std
movsl
nop
dec
es
outsb
add
cmpsb
loopne
clc
xchg
or
dec
inc
gs
jmp
push
jo
fdivrs
jmp
add
loopne
int
jne
fldl
cmp
adc
adc
or
inc
hlt
jg
mov
and
addl
pop
push
sbb
xor
inc
xor
jecxz
pop
pop
ret
sub
inc
outsl
test
gs
comiss
out
xchg
mov
jge
in
nop
jns
imul
cmp
inc
aad
jl
movsb
fildll
bound
pop
add
push
dec
ret
ljmp
aaa
mov
dec
jbe
mov
xchg
inc
pop
dec
daa
xchg
and
mov
mov
out
xchg
lahf
sub
pop
xor
sbb
xor
dec
shlb
lods
mov
xchg
or
lds
arpl
or
hlt
test
push
sbb
add
mov
lret
pushf
jbe
ja
jmp
mov
push
cmp
daa
sarl
sub
push
fwait
jg
jge
daa
data16
jle
push
in
sbb
rcll
fs
lds
mov
in
sub
inc
fisubs
adc
movsl
pop
cltd
jb
outsl
or
mov
loopne
ret
lret
lahf
xor
sub
cs
xchg
into
jg
and
dec
aas
push
fdivs
jne
dec
or
cltd
add
sbb
aam
lahf
cmp
js
sub
fwait
lahf
cmp
out
pop
in
adc
mov
mov
arpl
leave
cltd
aaa
jns
push
pop
or
sbb
push
inc
xchg
lret
hlt
mov
xchg
xlat
ss
stc
jle
inc
imul
dec
lahf
lcall
scas
mov
stos
repnz
dec
xorb
push
movsb
repnz
sbb
push
pop
gs
out
test
dec
mov
insl
xor
scas
pop
dec
pop
mov
popa
insb
outsb
ret
adc
cmc
sbb
pop
stos
sub
out
mov
jmp
ljmp
jg
mov
adc
arpl
sub
or
ja
jle
fwait
sub
hlt
adcb
dec
xchg
lock
xchg
and
stos
lds
or
sub
rclb
arpl
mov
arpl
lds
and
mov
inc
leave
mov
sbb
dec
push
cli
sub
hlt
ds
xor
xchg
or
jo
in
dec
lea
mov
outsl
jge
test
add
scas
cmp
jl
test
leave
mov
outsl
cmp
pop
ljmp
mov
aam
mov
inc
das
adc
lea
lods
fldl
adc
pop
pop
jmp
ljmp
test
pushf
jle
out
jne
push
insl
ljmp
adc
movsbl
cmpl
jb
inc
aaa
inc
and
testl
adc
adc
shll
aad
lods
xchg
in
or
adc
mov
movsb
dec
out
xchg
std
push
lret
push
aas
mov
mov
jb
inc
xor
or
dec
in
daa
or
dec
shll
jmp
hlt
in
or
or
xchg
insl
mov
mov
fistpll
clc
mov
scas
subl
maskmovq
imull
mov
adc
inc
mov
push
pop
shl
aaa
xchg
aam
stc
jg
push
add
insb
into
fadd
jnp
pop
enter
xchg
jne
call
ret
leave
sti
cli
push
sub
fnstcw
and
mov
mov
fisttps
mov
lret
pop
lret
pop
fs
jg
mov
in
mov
push
popa
push
mov
and
or
sbb
xchg
fnstcw
pop
adc
or
or
aaa
fisttps
xor
pusha
fs
mov
cmp
into
ljmp
repnz
cmpsb
xor
dec
jne
add
pop
mov
fists
test
adc
add
repz
test
mov
aam
lret
and
mov
mov
ret
aam
decb
es
mov
sti
fisubrs
cmpsl
xor
mov
xchg
dec
out
testb
js
pop
jno
fadd
lods
sbb
jo
jbe
out
mov
adc
pop
js
adc
jle
cmp
dec
lock
xchg
xlat
lcall
push
testb
sbbl
aam
gs
xchg
stc
push
mov
pop
mov
pop
jno
pop
and
in
jb
rclb
jle
push
out
pusha
dec
pop
je
in
fiadds
mov
mov
int
mov
or
jl
mov
shl
inc
ljmp
mov
add
jno
push
aad
xchg
dec
repz
push
cli
inc
cmp
xchg
cmpl
push
int
xor
and
data16
xchg
outsl
sahf
cs
pop
push
dec
sub
movsb
je
push
push
mov
xchg
inc
sub
jns
mov
sbb
add
jg
daa
jecxz
add
add
ljmp
lea
mov
fxtract
jmp
mov
ljmp
push
fisttps
cmc
jp
clc
loope
xchg
pop
mov
jmp
andb
enter
in
lret
aas
push
cmp
and
xor
dec
andb
xor
mov
data16
xlat
cmpsl
mov
out
test
adc
cmpsb
push
xor
in
xchg
inc
push
divb
xchg
xor
cmc
cmpl
stos
insl
push
inc
js
mov
cld
xchg
dec
pusha
xor
mov
lock
mov
stos
pop
jecxz
sar
mov
push
outsb
xor
xor
mov
test
inc
inc
loope
andb
cmp
xchg
sbb
nop
std
daa
in
pop
sbb
lcall
cmp
sub
pop
inc
jbe
leave
test
push
sbb
xchg
adc
and
pop
add
lret
leave
fnstenv
movsl
cmpsl
lahf
sti
out
lds
push
das
and
mov
pop
std
jge
fnsave
mov
xor
mov
insb
push
mov
enter
loope
mov
int
adc
pop
cmp
outsb
icebp
xchg
xor
int3
push
xchg
fdivl
rorl
adc
fnstenv
je
inc
mov
pop
inc
dec
add
sbb
test
frstor
je
adc
push
push
mov
sbb
jbe
sub
or
sti
lret
int
sbb
xor
push
xchg
and
cld
cld
loopne
push
fnstsw
insb
sbb
stos
out
push
or
fs
jbe
xchg
jecxz
push
lds
inc
dec
mov
sar
es
or
pop
ror
adc
push
jle
cs
pop
pop
mov
in
popl
push
loop
ljmp
pusha
pop
jo
jbe
nop
push
movsl
shll
mov
or
scas
pop
lcall
mov
jmp
icebp
add
es
movsl
sbb
sti
add
mov
xchg
addr16
add
shlb
popf
pop
push
decb
cmpsl
xlat
in
repnz
addb
enter
dec
test
xor
push
adc
add
cmpsl
lcall
clc
mov
cmp
or
test
dec
and
inc
xor
jnp
test
shll
ficoms
push
je
pushf
push
adc
cmpl
ss
xchg
shl
inc
movsl
push
movsb
sbb
mov
mov
lahf
rolb
mov
inc
outsl
jmp
mov
push
repz
mov
jmp
xchg
add
outsb
cmc
push
jl
rcl
push
cld
std
enter
mov
shrb
imull
cmp
mov
aaa
loopne
jp
shlb
data16
adc
dec
rcr
dec
cli
in
test
aas
xchg
dec
mov
add
pusha
cmp
mov
leave
aaa
sub
mov
add
or
jge
fadds
jbe
test
addr16
repz
cmp
add
mov
ja
inc
call
into
and
aas
sbb
xchg
sahf
loope
or
sbb
addb
and
jb
test
pop
leave
ljmp
and
adc
push
mov
push
sub
pop
leave
jne
test
test
xchg
push
daa
xlat
inc
lret
mov
lock
sbb
aaa
dec
mov
rdpmc
or
pusha
sub
std
icebp
sbbl
jp
popa
cmp
add
jb
out
mov
sub
dec
and
pop
sub
iret
push
pop
sub
ficomps
xor
repz
pop
sahf
xchg
in
lahf
fsubrl
adc
addb
and
es
inc
notb
sub
test
jnp
sti
pop
in
cmp
icebp
test
push
or
in
mov
in
outsb
or
inc
mov
mov
out
mov
jp
lods
jl
fnstenv
sbb
je
xchg
pop
push
loop
ja
or
sbb
push
int
mov
les
dec
rorb
mov
pusha
xor
cmpsl
pop
icebp
xchg
jl
push
mov
clc
jne
repnz
movsb
sub
dec
jb
cmp
jmp
jle
je
cltd
and
stos
pushf
iret
jle
repz
jg
lods
lahf
gs
cmp
hlt
lcall
jbe
adc
sbb
rcrb
fucomip
or
in
inc
jp
lcall
push
cmp
push
out
mov
jle
pop
jge
mov
arpl
sahf
push
mov
mov
in
inc
andb
insb
xchg
sub
sub
push
cs
movsl
pop
cmc
popa
dec
sbb
dec
xlat
jmp
rorl
push
std
aas
dec
sbb
cwtl
movl
cmp
xchg
gs
pop
ds
enter
sti
repnz
orl
mov
mov
adc
jno
outsb
bnd
inc
adc
pop
sbb
or
sub
ja
mov
fucomi
inc
fdivrl
push
fdiv
push
pop
pop
push
fdivrp
outsb
decb
xchg
sbb
mov
push
push
xchg
inc
adc
mov
add
sub
xor
fcompl
xchg
loop
sbb
fwait
leave
notb
sbb
mov
mov
jle
bound
mov
sarl
lods
in
arpl
push
gs
fbstp
test
je
mov
mov
lret
or
mov
lret
pop
lret
xor
pop
call
aas
arpl
and
pop
mov
mov
and
stos
popa
sub
dec
loop
or
adc
sub
shrl
shr
mov
data16
dec
sahf
mov
lahf
in
cmp
cmp
loop
and
push
test
sub
hlt
jl
and
das
out
push
insb
dec
mov
lods
and
test
mov
mov
insb
dec
mov
dec
data16
pop
jne
or
aaa
in
mov
add
cmp
or
mov
movsb
xor
and
test
mov
jb
sub
int3
test
testl
cmp
push
push
leave
push
stc
stos
pop
in
mov
xor
push
std
push
negl
dec
xor
sbb
push
push
push
and
sub
shrl
push
jle
lods
dec
adc
arpl
das
mov
into
shlb
repnz
sub
push
pop
pop
test
push
jp
inc
popf
adc
add
mov
sti
pop
sti
or
rolb
cmc
subb
jns
imul
mov
lods
xor
pop
test
rcr
mov
jns
lahf
ffree
orl
xchg
dec
mov
jbe
inc
dec
mov
jge
aad
outsl
fcoms
push
jno
mov
divl
loop
in
cmp
gs
push
xchg
sti
mov
or
outsb
mov
gs
jae
lcall
add
or
push
xor
mov
push
push
or
cmpsl
pop
or
testb
ret
push
stc
add
dec
add
jo
fcomip
bound
aaa
inc
jne
js
push
in
sub
adc
std
lcall
jo
pop
cltd
or
push
cli
sub
jecxz
jge
sub
mov
cmp
scas
inc
xlat
xchg
stos
stos
ss
std
mov
mov
cmpsb
mov
ljmp
ljmp
sbb
fbld
les
icebp
xchg
adc
lds
insb
cmp
sub
movsl
sub
jne
fisttpl
stos
pop
lahf
test
popa
dec
and
sub
cmc
test
scas
cmp
dec
dec
es
or
jbe
pop
jns
cmp
jns
push
xor
inc
and
sub
in
adc
dec
mov
jne
pop
mov
or
lods
jb
iret
fstps
or
shl
std
jo
mov
and
cltd
fwait
inc
stc
xchg
mov
dec
pusha
sub
mov
add
xor
xor
fldcw
outsb
repnz
in
add
inc
sbb
pop
pop
sbb
ljmp
popa
adc
and
sahf
fistps
and
mov
sub
jecxz
stc
das
subb
push
xchg
inc
sbb
inc
or
movsl
movsl
mov
sbb
push
jns
jnp
cmp
bound
xchg
lcall
jns
das
sti
int3
in
push
rol
inc
icebp
cmpsb
pop
out
jne
and
call
pop
sbb
ss
or
inc
push
sub
sahf
pop
lahf
mov
lret
cmp
addl
call
imul
jo
push
adc
gs
push
lock
sbb
xchg
ja
loope
in
lods
add
sub
jo
insl
stos
xchg
outsl
mov
das
outsb
bound
repnz
cmp
mov
loop
inc
jb
arpl
sbb
cwtl
inc
cld
pop
push
mov
stos
push
add
xchg
sbb
orl
pop
out
mov
mov
fbstp
sub
add
sbb
insl
and
roll
inc
or
sub
add
fisubl
pop
sbb
push
xchg
mov
cltd
sti
movsl
push
push
das
and
out
jecxz
jnp
cmp
xor
dec
mov
fisubrs
jl
add
adc
jns
mov
cs
mov
cli
cmpsl
add
push
stc
cli
xor
sub
out
scas
rolb
fistl
stos
scas
dec
aas
dec
mov
sbb
es
xchg
xchg
shrl
faddl
mov
mov
adc
xchg
lcall
xor
push
js
mov
lods
xor
push
orl
loope
mov
cmp
fldenv
jns
jbe
pushf
jns
push
mov
popf
divl
mov
mov
std
lcall
mov
push
cwtl
xor
out
xlat
outsb
ss
adc
jle
lea
mov
nop
mov
test
adc
cmc
fidivl
mov
mov
icebp
je
mov
mov
test
adc
nop
fsubp
mov
and
jmp
int3
lret
inc
inc
mov
add
mov
mov
sbb
cmc
xchg
pop
scas
test
mov
pusha
lods
mov
push
mov
ret
mov
sbb
stc
fisttpll
pop
xorl
sti
xorb
dec
stos
std
jmp
jecxz
push
push
test
call
mov
test
lds
jmp
js
cwtl
movl
cmpsl
ret
and
icebp
xor
xchg
or
jb
loop
cmpsb
rorl
jnp
mov
or
adc
outsl
enter
xchg
sub
mov
in
addr16
popf
pop
fwait
pushw
add
mov
dec
pop
push
rcrb
pop
lea
stc
mov
daa
popa
rcl
mov
outsl
es
pop
jnp
jbe
jecxz
push
cmp
sbb
bound
ror
jnp
cmp
mov
int
xchg
mov
movl
xor
imul
out
xorb
pop
mov
add
and
mov
cli
out
adc
push
xchg
sbb
out
lods
add
test
int3
fiaddl
cs
outsl
or
std
push
add
xor
or
cltd
loop
aaa
repnz
mov
dec
aad
add
and
sub
pop
loope
add
out
outsb
cwtl
xchg
inc
les
pop
jae
cmp
jge
jo
int3
add
repnz
jg
mov
lods
sbb
pop
divl
cmp
push
out
add
mov
mov
mov
and
jg
jmp
imul
push
inc
dec
dec
aas
sbb
mov
mov
sbb
popf
aaa
enter
orb
and
repnz
mov
mov
or
ja
gs
filds
xor
je
loope
dec
pop
mov
xchg
mov
ss
scas
sub
leave
xor
and
cmpsl
fcmove
cmpsb
ss
push
push
pop
jle
push
adc
adc
dec
shrl
fldl
jg
fsts
mov
push
cmpsb
dec
and
fidivrl
pop
insl
cmc
outsl
mov
ret
jle
nopl
repz
lods
jb
shl
cmp
sbb
mov
adc
sbb
cmpsl
lcall
aas
and
cld
mov
sub
rcl
aaa
jmp
pushf
loope
cmp
stc
stos
ret
cmpsb
mov
push
dec
aad
je
test
mov
filds
adc
pop
mov
scas
mov
ret
inc
sub
enter
lahf
mov
lock
aas
call
dec
inc
cmp
cmp
cmc
test
lods
lds
mov
sarb
mov
call
adc
push
xchg
fildl
xchg
mov
mov
push
lods
jecxz
adc
repz
or
inc
ja
mov
or
lcall
add
lcall
cmpl
jmp
aam
adc
out
test
adc
jg
imul
lea
pop
les
arpl
idivb
and
xchg
bound
adc
adc
xor
cld
xor
cltd
inc
add
jo
xchg
in
jno
push
inc
in
cli
dec
ret
out
dec
sub
sbb
jl
xchg
mov
inc
sbb
sub
pop
sub
mov
xchg
insl
mov
mov
jns
cmpsl
xor
xlat
mov
icebp
shr
inc
sub
push
lods
in
lcall
pop
pop
jecxz
data16
aaa
pop
insl
xlat
pop
out
shll
jo
cmp
fistl
clc
hlt
adc
pop
jmp
xchg
mov
es
and
out
les
pop
sub
fdivrl
pop
out
lcall
imul
jnp
sbb
pusha
movb
imul
int3
mov
pop
fnstsw
mov
xor
jb
pop
xor
mov
lea
jge
xchg
rcl
or
xlat
cmp
push
add
aam
mov
sarb
in
pop
add
sbb
sub
mov
sub
pop
cmpsb
int3
push
adc
scas
and
test
fidivrl
xchg
or
or
dec
xorb
sbb
and
push
fnstsw
cltd
xchg
push
mov
mov
inc
mov
inc
mov
inc
xchg
push
shl
xchg
add
shll
fdivs
dec
mov
xchg
jg
jge
out
pop
dec
mov
sub
jnp
cs
call
mov
inc
pop
imull
ret
add
sbb
dec
imul
scas
dec
fiadds
sub
lahf
aad
jl
or
cmp
push
and
arpl
and
sti
adc
lods
push
enter
stos
sub
sub
lret
inc
scas
jmp
fs
notl
dec
lret
lods
push
cmp
push
dec
mov
xchg
push
or
rcrl
fidivrs
mov
lret
sbbb
mov
mov
dec
xadd
shrb
pop
and
pusha
adcl
and
sbb
adc
cld
shlb
fldcw
dec
imul
cwtl
pop
push
mov
orb
je
mov
jno
arpl
push
ds
mov
mov
mulb
mov
and
ss
outsb
std
sbbb
lret
jmp
shll
sub
das
mov
xor
fs
rclb
xchg
mov
int
pop
mov
pop
jecxz
mov
and
pop
lcall
jmp
jb
mov
into
inc
pushf
loopne
mov
adc
push
stos
or
insb
push
add
cs
xchg
jbe
sti
xchg
mov
jp
dec
cmp
jnp
push
sub
call
ljmp
addb
fisttpl
mov
js
mov
mov
jnp
int
mov
lds
inc
and
test
jo
or
inc
pop
xchg
pop
jge
push
in
nop
or
imul
std
sarb
jno
dec
push
out
push
arpl
sub
aad
dec
shll
mov
shll
sbb
cmc
cmpsl
mov
jae
mov
les
add
sub
fsubrs
iret
jg
div
fnstsw
out
adc
fsubs
jle
xorl
fwait
mov
sbb
fnstenv
mov
aam
mov
mov
mov
stc
push
pusha
je
push
dec
orb
loop
and
inc
jno
insl
movsl
mov
ror
fldcw
and
test
pop
add
xor
in
pop
and
adc
lahf
ret
mov
push
add
xor
add
push
test
pushf
insb
pop
enter
fs
mov
and
test
sti
addb
ljmp
sbb
popa
imul
jle
icebp
inc
repnz
rcll
inc
dec
stc
fldenv
imul
mov
fadd
lahf
sbb
pop
and
push
ficompl
stos
mov
sub
lods
adcl
test
subl
sub
jp
aad
pop
loopne
xor
xor
lock
xor
icebp
lds
sbb
sbb
inc
loopne
test
mov
scas
cmp
xchg
cmp
and
repz
les
mov
push
in
movsl
jnp
call
clc
mov
int3
xor
popa
stos
out
inc
sub
xchg
es
bnd
je
pop
test
icebp
push
adc
inc
test
mov
pushf
cwtl
lock
jmp
jbe
mov
hlt
sub
cwtl
mov
jecxz
test
loop
inc
ficoms
jns
lcall
xor
sub
rcpps
lods
push
pop
sbb
cmpsl
inc
leave
cwtl
adc
dec
shlb
shll
lds
repz
lret
pop
mov
push
popf
hlt
shlb
jns
aad
mov
stos
and
xor
rorb
popa
das
insl
imul
sbb
int3
xchg
xor
dec
mov
push
push
mov
mov
js
fwait
je
mov
fcoml
pop
cli
aaa
int3
adc
mov
loope
cli
cmp
dec
mov
or
in
xor
movhps
mov
jns
lods
lahf
mov
push
mov
jge
data16
in
les
call
add
sub
xchg
sbb
cmp
imull
cmp
imul
jb
outsl
xchg
in
mov
in
pop
int3
inc
stos
in
or
ja
jb
push
sahf
sahf
pop
cmc
sahf
mov
insb
pop
imul
mov
mov
insb
fdivrs
out
mov
mov
xlat
mov
notl
fmuls
mov
mov
pop
je
rorl
ja
jg
ret
fisubl
in
lea
jo
rcrl
mov
sbb
clc
icebp
adc
sti
sub
pop
mov
pop
fcoms
gs
icebp
sub
je
sti
fildl
mov
sub
jno
sbb
push
sbb
and
dec
inc
cltd
test
pusha
add
gs
mov
call
sbb
pop
dec
push
pop
ss
mov
jo
or
clc
lods
minps
pop
fiaddl
dec
repz
das
mov
xchg
in
mov
jb
cmp
xchg
loopne
loopne
int3
jge
out
sub
pop
pop
jmp
jge
dec
addb
jae
scas
jp
js
add
nop
inc
in
push
mov
mov
and
pushf
cli
and
cmpsb
hlt
test
std
lods
mov
imul
sub
lcall
xchg
adc
add
fadd
inc
cld
and
mov
fcoml
lds
add
dec
bound
xchg
xchg
xchg
add
mov
mov
dec
cld
push
inc
int
and
shrl
ljmp
cmp
pop
mov
daa
dec
push
int
pop
jae
mov
repnz
ficoms
xchg
test
xor
fwait
xor
shlb
icebp
push
inc
out
xchg
pop
movsl
into
lods
mov
inc
stc
push
nop
in
jne
cmp
xor
ret
sbb
dec
pop
lods
sahf
jb
xor
aam
int
inc
in
imul
sub
mov
add
mov
dec
ret
dec
xorl
ficomps
cld
sbb
leave
arpl
sbb
lock
stos
sbb
fs
sub
push
cwtl
bound
rorb
sub
cltd
cmp
aad
fwait
mull
lods
outsl
pop
sub
add
mov
lgs
daa
dec
ret
push
cmp
sbb
aas
fs
out
sbb
cltd
enter
cmp
cli
jbe
mov
xchg
fcomps
push
add
pusha
mov
stos
fmuls
sub
imul
inc
jnp
inc
push
je
add
jl
inc
and
into
es
jbe
add
lock
dec
cmpsb
xchg
outsl
sbb
xchg
dec
fisttpl
int3
cmpsl
pop
in
sar
mov
mov
sahf
and
jmp
out
popa
xlat
sbb
push
aad
lret
pusha
or
ds
ja
flds
sub
mov
loop
mov
xor
fsubrl
dec
mov
cli
test
push
fdivrs
inc
push
and
repz
push
scas
repz
test
jg
dec
add
sub
mov
or
repz
xchg
inc
gs
sbb
or
test
stos
les
movsb
add
and
call
push
xchg
enter
cmpsb
add
stos
outsb
push
call
dec
cli
pop
int
dec
cmp
mov
ljmp
pop
dec
mov
pop
jmp
and
lret
mov
lret
or
mov
mov
or
fwait
adc
leave
ret
jb
insb
daa
inc
addb
or
or
push
or
add
mov
sahf
xchg
pop
outsl
sub
inc
shl
outsl
lods
ret
jmp
lock
ret
mov
ljmp
mov
pop
ja
mov
sbb
jbe
scas
push
cmc
call
xchg
push
or
xchg
mov
movb
std
scas
je
repnz
xor
jge
xchg
pop
jns
sahf
xor
or
sbb
in
scas
pop
ss
mov
pop
pop
scas
jo
push
and
clc
jecxz
mov
xchg
cmc
out
shrl
mov
jae
push
push
inc
in
pop
inc
decb
addr16
cmpb
mov
pavgb
xor
rolb
shll
xchg
movsb
mov
sub
mov
test
loope
adc
mov
jg
sub
mov
add
mov
xchg
xor
das
xor
out
rclb
push
cli
loope
ljmp
js
jbe
sub
or
es
lods
push
add
xor
loope
mov
repz
out
xchg
jb
out
add
xor
mov
mov
gs
sbb
insl
fnstcw
loop
cs
hlt
push
jb
in
inc
mov
fildl
clc
and
inc
xchg
aad
out
and
jo
sbb
stos
mov
loop
stc
jl
loopne
xchg
push
or
xchg
dec
sub
std
imul
rcll
arpl
outsb
push
icebp
mov
cmpsb
add
lret
mov
sub
jl
mov
lcall
sub
fnstenv
push
data16
dec
hlt
cmp
lret
sub
out
mov
divb
sahf
pop
mov
inc
xor
movsl
add
xor
aas
xor
xor
call
loope
sahf
daa
out
lcall
push
rolb
xchg
add
cli
mov
das
enter
push
aas
clc
insb
cmp
xor
add
pop
push
jge
or
les
jge
and
inc
sbb
je
dec
mov
popl
out
lcall
lret
lahf
test
sbb
mov
or
jp
push
mov
ret
xorb
jmp
pushf
fmul
dec
push
lock
xchg
sub
fcoml
out
jl
mov
outsb
ret
and
pop
andb
cmpsl
sbb
xchg
int
mov
scas
pusha
xlat
xchg
push
scas
test
mov
lods
mov
gs
mov
xlat
pop
imul
repnz
fisttpll
movsl
pop
push
xchg
cwtl
aas
jbe
push
lds
pop
jp
ja
cmp
push
push
ror
push
and
out
adcb
add
dec
or
mov
push
test
les
inc
in
imul
outsl
adc
sahf
orl
aad
and
je
mov
sti
sub
icebp
jne
sbb
mov
test
adc
sbb
push
cmp
sub
fsubrl
pop
out
sub
pusha
dec
add
int3
aam
cltd
pop
loop
insb
call
bound
idivl
xchg
dec
rcrl
filds
xchg
push
lcall
mov
mov
cltd
int3
ds
pop
mov
ljmp
mov
loopne
mov
mov
xchg
cmp
fdivrp
icebp
add
mov
test
mov
daa
test
pusha
jecxz
inc
adc
inc
or
cwtl
insl
js
dec
stos
hlt
and
inc
push
test
jle
xchg
push
or
divb
insb
out
or
shrb
sbb
mov
xchg
call
sub
lods
cmp
adcb
xlat
loope
clc
cld
inc
test
aaa
jle
dec
std
cmp
sub
xchg
mov
aaa
lahf
cmpsb
aas
dec
lods
xchg
ljmp
dec
cs
sbb
test
mov
and
les
cmp
sahf
cli
mov
cwtl
subl
decl
sbb
push
push
or
and
insl
lods
stos
dec
jno
xchg
pop
int
addr16
cmc
movsb
sub
xor
sub
into
loopne
cmc
insb
push
push
jne
xor
lods
ret
iret
repz
inc
dec
cmc
mov
push
in
lahf
ds
stos
in
adcb
incb
stc
lret
mov
cmp
cwtl
pop
lods
xor
cli
std
lods
and
fdivr
adc
xor
xor
fs
or
out
iret
outsb
mov
fsubrs
push
ja
sti
jb
test
pusha
fucomi
cwtl
mov
mov
jge
pop
arpl
inc
or
movsb
push
push
cmp
das
out
adc
jecxz
cmp
jno
call
mov
js
push
xor
mov
sbb
push
rorb
into
xchg
addr16
flds
inc
and
xchg
js
jne
jecxz
xor
insb
add
mov
jbe
mov
xor
gs
insl
and
ljmp
lahf
imul
dec
es
push
and
daa
push
push
sub
aaa
mov
xor
in
shrl
lret
pop
mov
dec
in
imul
cltd
scas
cmp
inc
cwtl
sbb
loope
arpl
mov
inc
sub
lcall
jno
aaa
mov
test
rcrb
push
fstpl
add
sbbl
test
xchg
or
in
popa
outsb
push
movsl
inc
gs
cltd
imul
int
cltd
ljmp
aas
xchg
add
add
adc
movsb
nop
inc
xchg
cmpl
mov
jmp
dec
stc
mov
negb
jo
pop
dec
add
jbe
dec
in
lods
test
push
mov
mov
cmp
dec
mov
add
inc
dec
or
pop
int3
xor
lods
jns
adc
mov
lea
sahf
jbe
jp
aaa
pop
les
jp
ficoms
pop
xchg
push
and
ret
jo
jge
jle
testl
fcmovu
cld
sbb
mov
mov
sub
push
in
push
mov
pop
movsb
jg
adc
and
push
repz
out
mov
sub
sbb
sbb
loop
lds
or
and
repz
int3
lret
push
add
xchg
fwait
cmp
push
bswap
aaa
testl
iret
nop
fmuls
inc
imulb
pop
sub
xor
cltd
and
ret
int
lahf
ja
sahf
into
es
dec
mov
or
jb
fbld
xor
inc
sub
mov
mov
pop
jo
or
int3
rcll
movsl
fldl
cmp
in
jbe
inc
jg
or
fldcw
xchg
stos
addr16
arpl
add
decl
adc
nop
std
mov
push
orl
add
adc
pop
cmp
xor
xor
sub
mov
inc
xchg
fisubrl
inc
mov
dec
adc
mov
xor
ret
jge
push
add
out
cmpsb
sbbb
les
push
push
sub
test
push
mov
mov
dec
fnstsw
clc
cli
int
daa
lock
scas
dec
and
mov
sbb
mul
sub
and
out
lret
int
pusha
jno
add
dec
mov
dec
or
maxps
jo
pop
xor
cmp
sbb
cmp
mov
sbb
ret
mov
xchg
call
push
pop
dec
pop
andl
inc
ret
and
pop
and
or
xchg
shr
push
adc
mov
add
or
push
shrb
and
test
sbb
out
test
je
cmpsl
jo
xchg
or
jp
out
clc
mov
out
cltd
xchg
and
jl
adc
or
cltd
sbb
xchg
jae
popf
add
imul
ss
lds
ja
jge
sub
and
mov
shll
adc
xor
dec
jmp
pop
jp
dec
mov
fsubp
sbb
cmp
mov
pop
lods
cmp
xor
pop
sbb
lret
jge
arpl
int3
push
idivb
jb
pusha
loopne
cld
mov
sub
std
cli
dec
popa
in
xor
sub
mov
pop
mov
rep
popa
mov
sahf
mov
out
cmp
sbb
lds
lret
add
mov
iret
popf
ja
and
mov
cmpsl
loopne
mov
mov
popa
jle
rcl
ja
mov
xchg
mov
scas
repz
aas
das
cmc
xchg
cli
xchg
out
jmp
adc
aad
iret
scas
clc
mov
cmp
pusha
xlat
dec
jno
in
jo
pop
loopne
or
call
sbb
push
addb
out
clc
jnp
leave
and
push
ds
or
ja
and
pop
fisttpll
cmp
adc
lcall
push
aaa
out
add
mov
cltd
jno
add
sahf
stos
iret
dec
mov
push
xchg
lock
sahf
test
aas
pushf
scas
inc
jb
mov
push
aas
or
testl
dec
loop
movsl
aas
in
pop
es
pop
test
cmpsl
int
mov
icebp
ja
sbb
add
outsl
lahf
push
xorb
lods
mov
add
ss
dec
test
dec
out
dec
fnstcw
rolb
cmp
imul
test
orl
jno
dec
cmpsl
ret
ret
pop
sbb
into
sub
sub
insl
and
aas
insl
xor
push
cs
leave
sahf
shr
icebp
mov
mov
sub
and
arpl
inc
mov
jle
cmc
repnz
ja
pop
jmp
pop
fs
and
jns
dec
std
ja
fwait
and
mov
jo
jae
jmp
fwait
mov
pop
mov
add
stos
jl
or
push
mov
je
or
notb
pop
adc
or
inc
sub
jno
dec
test
into
out
int
nop
jecxz
out
xor
fcoms
and
jecxz
call
push
add
ljmp
or
pop
out
sub
je
subl
and
push
pop
outsl
mov
mov
leave
inc
cld
xchg
out
or
xchg
shr
enter
xor
sbb
sbb
lds
sbb
xor
mov
xchg
mov
mov
mov
add
cs
mov
push
neg
lods
xlat
aas
inc
les
in
add
dec
daa
push
ret
jbe
inc
xlat
out
insb
or
lods
rclb
mov
mov
bound
call
or
sbb
and
inc
push
popf
fbld
add
pop
push
js
fs
ret
int
hlt
jae
adc
dec
loope
bound
clc
cmpsb
or
lret
cmp
aaa
xor
jge
adc
push
jo
sbb
mov
inc
add
movsl
es
lahf
adc
les
sub
outsl
ret
add
adc
cmp
push
add
lahf
aaa
std
and
loopne
out
test
aas
int3
fwait
and
bound
movsl
out
push
mov
pop
push
xor
jns
sbb
dec
cmp
or
mov
adc
jecxz,pn
dec
es
adc
lods
cmp
jns
mov
int3
inc
jbe
or
mov
scas
and
dec
xchg
mov
dec
or
lret
xor
push
dec
repnz
movsb
js
mov
cli
sbbl
int
rcrb
js
jne
adc
inc
sub
loop
movsb
and
jp,pn
sub
mov
popa
insl
jns
inc
movl
and
add
test
test
gs
push
cmpsb
jecxz
ffree
into
xchg
and
popf
cli
dec
add
pop
add
outsl
iret
adc
andl
mov
addr16
clc
mov
mov
lahf
jne
in
add
jp
inc
xor
cwtl
scas
daa
lcall
loop
cmp
aad
inc
sub
rolb
jne
ffreep
enter
and
inc
mov
stc
jno
xchg
mov
jmp
sub
sti
adc
mov
xchg
clc
je
test
aam
jmp
popa
and
out
pop
divl
cwtl
iret
xchg
xchg
hlt
testb
mov
pop
cli
iret
sbb
outsl
loope
daa
in
jp
add
bound
ror
jg
into
push
sub
aas
lahf
ret
lds
rcll
xchg
xor
sub
add
in
mov
std
mov
jno
mov
sbb
fs
test
lahf
dec
dec
ret
pop
inc
mov
jo
add
xchg
sti
lock
and
add
cmp
adc
daa
sub
test
addr16
jno
cld
mov
imull
and
ficomps
dec
popf
pop
imul
dec
fisubrl
adc
popa
dec
jbe
xor
mov
cmp
dec
push
popf
pop
nop
mov
lods
dec
inc
inc
addb
sbb
scas
mov
out
loop
sbb
inc
pop
sarb
out
and
pop
inc
pop
popl
inc
add
pop
sub
cmp
xor
xchg
mov
push
pop
cld
sub
and
push
mov
js
mov
das
comiss
cmp
or
push
stos
shr
push
push
dec
arpl
xor
mov
sub
frstor
fstpt
push
mulb
pop
jg
adc
js
or
sti
dec
fldt
cmc
jbe
xor
pushf
shlb
jbe
rorb
std
fisubrl
ficoms
dec
lods
lea
pop
add
in
cmpsl
push
mov
insl
sbb
orb
mov
inc
cmp
mov
aad
inc
or
cmc
cmpl
lds
cmp
popa
testb
jp
movsl
push
dec
adc
and
clts
cwtl
mov
push
roll
out
xchg
push
test
lods
std
xchg
cli
bnd
push
aas
out
xor
nop
sbb
mov
js
es
or
mov
pop
add
insl
leave
movsl
or
dec
sbb
shr
push
sahf
test
out
jns
mov
mov
roll
push
adc
or
dec
dec
sub
lahf
add
mov
cmpb
mov
lret
in
jp
mov
andl
adc
dec
negl
sbb
scas
and
mov
fadds
jno
mov
test
jecxz
or
sub
nop
adcb
mov
sti
orl
xchg
add
sub
lods
incl
push
inc
jg
push
inc
add
hlt
pop
jmp
mov
add
xor
lods
inc
and
cmp
stos
push
ss
push
sti
aam
fcomps
adcl
mov
push
cmc
fdivs
ss
xchg
imul
stos
gs
int3
or
mov
jo
xchg
dec
movsb
inc
dec
push
or
ficoms
pop
cmp
lahf
pop
add
lock
fwait
mov
push
gs
xor
imul
clc
popa
leave
aas
fwait
negl
xor
and
aas
movsl
pop
popa
sub
jmp
cli
push
xchg
xor
or
test
std
movsb
repz
in
insb
fstpl
jb
inc
out
sbb
je
jecxz
xchg
and
sub
ret
fldl
lods
ljmp
repnz
mov
and
mov
lods
sub
and
jnp
or
dec
popf
das
lahf
sbb
mov
mov
jnp
mov
mov
test
loopne
jb
push
and
mov
stc
repnz
mov
js
sahf
pop
sub
cltd
jnp
sub
inc
addr16
inc
cmp
jb
mov
push
mov
pop
or
jae
mov
push
jle
dec
add
pop
shl
ds
jnp
std
add
or
add
sub
repz
push
dec
mov
dec
fistpll
stc
cmp
sub
aaa
mov
pop
aaa
mov
rcr
inc
pop
scas
out
inc
or
mov
ds
outsb
imull
xchg
pushf
mov
adc
jbe
mov
inc
or
xor
mov
adc
lcall
lcall
jle
mov
mov
imul
xlat
shll
push
xchg
xchg
and
in
inc
popa
aaa
mov
xor
mov
call
call
inc
push
dec
pop
jmp
xor
out
lgs
jmp
push
subl
push
xor
js
ja
push
adc
shl
sti
and
mov
mov
out
cwtl
xor
enter
fwait
or
mov
xchg
sbb
fs
adc
mov
test
lea
hlt
jp
mov
sarl
test
scas
ds
pop
imul
shlb
lea
sub
fimuls
pop
push
aas
and
push
pop
jnp
pop
and
cmpsb
mov
ss
in
out
andl
mov
xorb
subb
or
pusha
adc
sub
in
je
or
loopne
imul
mov
xchg
dec
fistl
push
add
shll
push
repnz
cmp
xor
pop
daa
rcrl
mov
sub
jae
cmp
xchg
enter
daa
pusha
mov
inc
cmpb
sbbl
je
sub
and
add
cld
add
push
fdivrl
adc
jp
cmp
mov
dec
std
into
daa
mov
xor
sbb
movsl
bound
iret
inc
mov
addl
call
sar
cmp
test
std
adcb
ss
sbb
jo
test
mov
lea
sub
inc
aas
out
lret
aaa
push
jle
std
mov
dec
push
movsb
pop
mov
ljmp
mov
jbe
hlt
cmp
insb
jle
mov
push
das
dec
in
xchg
sub
jl
loopne
mov
and
push
add
xor
addb
ja
fdivr
jno
pop
adc
stc
lret
adc
mov
subb
jmp
fnstcw
out
and
dec
inc
sub
loop
push
out
add
ss
or
xor
pop
pop
cmp
push
cmp
xchg
and
cld
dec
or
stos
xor
push
or
xchg
mov
add
or
out
mov
imul
lret
aad
ret
mov
dec
loopne
add
jae
xor
lea
mov
mov
adc
test
inc
arpl
lahf
jg
xchg
xor
mov
jge,pn
dec
adc
and
mov
shr
mov
xchg
stos
cltd
push
push
mov
mov
push
retw
fnstcw
push
dec
inc
inc
aam
int
loopne
jp
dec
fwait
dec
dec
stos
cmp
cld
add
or
cwtl
add
addl
add
mov
sti
sub
repz
ja
push
jnp
push
sbb
adc
dec
imul
hlt
and
neg
pushf
sub
cmp
ds
sub
dec
outsb
mov
jl
lcall
mov
jp
mov
pusha
in
add
sub
enter
lahf
cmpsl
adc
adc
cmp
jmp
addr16
add
jl
je
add
pushf
pop
ffreep
ror
out
repz
ret
push
test
loope
dec
fwait
out
inc
roll
mov
xchg
test
xor
jno
int3
into
mov
icebp
lcall
xchg
cli
shll
mov
mov
in
cmp
jbe
scas
idivl
jbe
popa
jne
aam
test
arpl
or
jae
mov
loopne
pop
cli
out
xor
inc
pop
dec
data16
jno,pn
cld
cwtl
jno
les
push
lds
sbb
xchg
inc
mov
ficompl
lret
mov
push
cmpsl
jno
push
ja
clc
loope
das
imul
loope
push
add
push
mov
xlat
jmp
xor
xchg
cld
xchg
popf
out
lock
sub
div
sarl
shll
mov
leave
mov
lret
stos
lar
rcrb
insl
stc
inc
jp
cmpsb
push
xor
mov
out
fstpt
dec
insb
inc
jno
cmc
fcomps
adc
jge
sbb
into
jg
push
sbb
push
cli
mov
cmp
rcrl
jg
cmp
loop
pop
xchg
push
test
dec
ss
jmp
and
xchg
sub
dec
mov
xchg
bound
or
mov
test
sar
jbe
movb
repnz
mov
pop
xchg
or
cmp
push
pop
mov
mov
lds
je
jecxz,pt
mov
shlb
push
mov
les
mov
jge
push
add
xchg
push
js
pop
aas
ret
jnp
nop
push
dec
mov
test
jo
xor
push
sub
cmp
and
mov
xchg
pop
sbb
popa
mov
data16
or
out
sub
jnp
test
sbbb
jge
lret
xor
cmp
mov
lock
daa
loopne
int
push
sub
pop
shrl
mov
ja
mov
scas
aad
cmp
sub
sahf
mov
ret
xor
loopne
jmp
sbb
lods
adc
fidivl
sbb
add
cld
unpcklps
aam
std
add
aaa
pop
loopne
dec
jg
mov
popf
adc
sbb
xchg
sub
es
cli
in
lahf
and
jb
add
xchg
jle
ss
adc
adc
sbb
es
hlt
lods
popl
cmpsb
sub
dec
dec
push
gs
leave
add
call
and
repz
jmp
mov
mov
dec
pop
in
jnp
stc
xchg
test
sub
and
es
dec
adc
shl
mov
jl
xor
sbb
adc
sbb
inc
cmc
cmc
jmp
int
rcr
lds
pop
imul
repnz
xchg
mov
or
jbe
mov
sbb
jmp
ret
sbb
cld
in
je
cmp
das
push
mov
test
inc
icebp
leave
insl
xor
pop
lods
inc
out
gs
inc
les
cmp
push
fisttpl
sbb
arpl
mov
dec
popf
out
fdivr
cli
ret
xchg
mov
push
int3
ror
sahf
add
bound
xchg
dec
xor
imul
outsl
cmpsb
fsubs
loop
jmp
dec
jae
sbb
adc
or
add
sub
ljmp
cmc
push
aad
dec
push
pop
cwtl
std
or
sub
inc
arpl
stc
mov
mov
in
cmp
outsl
imul
jmp
loop
xor
fadds
pop
cli
mov
lret
stos
sahf
sub
xchg
mov
rcrl
push
mov
aam
loopne
int
fidivs
dec
inc
cmp
inc
xchg
jnp
or
cwtl
push
loope
jge
sbb
rcll
leave
xchg
mov
data16
mov
shlb
push
in
adc
lods
sub
xor
jl
lock
or
mov
cmp
sub
or
mov
movsl
repnz
sub
fwait
mov
pop
or
js
and
or
add
insb
adc
mov
or
cmp
daa
das
push
int
xchg
add
bound
mov
jno
sub
jno
es
xchg
mov
outsb
andb
mov
push
jmp
inc
int3
pop
lahf
push
xchg
fisttpll
adc
bound
inc
jbe
sbb
inc
push
mov
cwtl
popf
jnp
sbb
mov
aad
jge
imul
xchg
subb
out
or
jl
mov
jb
iret
js
pop
repz
cmp
dec
lret
ret
out
sbb
ljmp
pushf
inc
aam
mov
lods
lds
push
jl
aad
mov
xchg
das
or
add
das
xor
sbb
aaa
inc
ror
hlt
mov
aam
aad
pusha
push
sub
or
cmp
push
out
cltd
jnp
je
int3
ds
imul
jmp
or
fdivrs
push
jmp
lret
in
push
push
and
aaa
ss
pop
jg
push
cli
stc
mov
xlat
inc
icebp
push
iret
pop
fistpl
xchg
popf
mov
sbb
xlat
xor
and
outsb
mov
fsubl
imul
pop
mov
push
fwait
mov
adc
lret
jbe
out
cmpsl
cmp
jmp
push
ja
add
int3
xchg
pop
jo
movsb
mov
push
hlt
inc
lods
fldenv
daa
pop
pushf
jmp
arpl
and
cs
popa
pop
rcrl
in
sub
xchg
pop
in
xchg
cmc
cwtl
push
scas
sarl
xor
and
or
mov
dec
pop
dec
mov
xchg
add
rcrb
je
pop
cmp
aas
faddl
ljmp
addr16
inc
sbb
stos
or
insl
jo
push
popa
out
mov
xchg
loop
and
inc
fdivl
cmp
pop
leave
icebp
fadd
jp
cwtl
xor
add
push
loop
and
iret
mov
pop
push
fnstcw
mov
sub
test
push
pop
movsl
rcrl
test
sti
adc
and
mov
xchg
nop
xchg
insb
pushl
push
int
lcall
test
ja
mov
jg
dec
test
mov
sub
jecxz
aaa
std
loope
jle
stos
push
pushf
sbb
mov
cmp
stos
xchg
jae
pop
leave
mov
push
pop
call
xchg
xor
pop
jb
and
mov
sbb
inc
add
adc
int
mov
jge
and
aaa
repnz
inc
ret
scas
sub
lahf
mov
inc
jmp
mov
pop
cmp
cmp
push
push
pop
js
and
pop
repnz
cltd
int
mov
xchg
rcrl
jne
addr16
fwait
xor
xorb
ljmp
movsb
cmp
out
mov
movsl
mov
lock
sub
test
jb
shr
scas
dec
adc
pushf
mov
push
inc
push
gs
push
mov
sbb
mov
and
repz
jns
negl
sarl
add
mov
in
pop
xchg
fs
inc
sbb
dec
cmp
mov
mov
pop
test
in
mov
pop
repz
jecxz
dec
dec
add
aaa
bound
adc
inc
sbb
ret
add
js
pop
jge
fiaddl
stos
sbb
lock
and
sbb
repnz
or
out
gs
popf
imul
stos
shlb
mov
mov
push
mov
dec
mov
and
sub
insl
sub
xchg
int
push
cmpsb
test
cmp
hlt
dec
hlt
jne
mov
sbb
jno
pop
addr16
in
xor
add
or
mov
and
test
out
lcall
loope
ja
movsl
int3
mov
shlb
or
test
fldt
or
mov
xchg
cmp
shll
movsb
push
cmp
dec
fnsave
cs
sbb
sarl
or
pusha
ret
mov
mov
push
pop
mov
jecxz
adc
inc
pop
aaa
xor
xchg
in
iret
gs
push
aam
hlt
inc
loop
jge
jne
andl
inc
pop
fsubrl
sbb
and
jp
push
lret
sub
mov
adc
xor
out
sti
or
jae
mov
pusha
push
ret
sbb
cmp
shr
xchg
out
and
mov
and
cmpsb
mov
test
xor
mov
inc
jecxz
push
sbb
js
sahf
jne
in
mov
dec
xlat
popf
loop
mov
loope
cmpl
mov
jo
orb
mov
pop
push
add
pusha
fimuls
pushf
stos
ds
test
fistl
adc
fwait
mov
cld
dec
arpl
out
not
pusha
lds
mov
leave
xor
adc
mov
pop
sarl
test
mov
mov
pushf
mov
es
pop
mov
sub
jge
cmpsb
aaa
add
pop
xchg
in
jnp
inc
cmpsl
inc
inc
pop
sbb
imul
mov
dec
call
sub
gs
pop
add
hlt
lahf
xor
mov
inc
dec
xchg
sbb
jmp
test
push
sahf
scas
cmp
xchg
dec
dec
cmp
lea
cmovs
int3
in
xor
mov
or
subl
cmp
inc
and
lret
jae
out
cwtl
inc
cltd
xor
sub
fildl
push
sub
or
jno
push
out
add
popa
xor
call
aam
popa
dec
repz
arpl
bound
shlb
inc
push
fbstp
rcll
xchg
stos
cmp
push
dec
push
es
fstps
int3
lock
mov
mov
mov
adc
adc
jne
jp
dec
imul
jb
in
cmc
loop
mov
sbb
cmpl
loop
stos
jmp
pusha
leave
sarl
dec
push
repz
fisttps
jnp
adc
mov
dec
enter
lret
fidivrs
daa
sub
inc
rorl
test
mov
jmp
imul
mov
sub
pop
into
mov
fcmovbe
pcmpgtd
enter
and
mov
cmc
and
aad
push
or
and
push
filds
repz
mov
mov
push
jno
ret
call
add
ss
cmp
inc
enter
xchg
pop
xor
insl
jae
and
xor
cs
jnp
clc
jmp
je
bound
jb
and
in
test
mov
mov
stos
or
xchg
call
dec
mov
ret
xrelease
sarb
cs
outsl
imul
shll
xchg
mov
mov
sub
loop
jnp
add
aaa
push
mov
repz
loope
scas
mov
sub
andl
fisubrs
adc
add
je
sar
imul
into
test
cltd
lret
pop
and
inc
cmp
pusha
in
add
cld
sar
cmp
add
or
lret
jae
mov
push
mov
mov
xchg
and
mov
inc
ds
scas
shlb
sub
imul
lods
enter
xor
push
or
out
inc
pushf
and
loope
and
dec
enter
clc
xor
call
insl
out
mov
pop
cs
push
dec
mov
popf
dec
lcall
nop
lock
mov
int
outsl
lock
roll
lret
jo
icebp
in
jae
cs
or
iret
jge
inc
push
jl
pop
inc
pusha
es
lahf
enter
pop
in
inc
test
mov
xor
es
push
fistpl
jo
mov
sbb
fstps
add
cmp
repz
repnz
or
call
sbb
test
cmpl
mov
xor
jl
loope
pop
jb
mov
stos
dec
push
hlt
int3
scas
push
sbb
cli
mov
loop
adc
mov
hlt
xor
jns
in
jae
xor
scas
ret
dec
sbb
leave
sbb
mov
push
insl
pop
mov
cmc
xor
cmpsl
add
test
xchg
aas
notl
jne
jle
cli
jo
mov
push
dec
dec
loop
les
jge
jnp
nop
sub
mov
popa
gs
and
imul
sbb
pop
stos
idivb
test
jl
jg
int3
pop
int
adc
xlat
scas
pop
in
cld
cmp
fisttpl
mov
adc
mov
jle
mull
outsb
imul
pusha
and
pop
xlat
push
cmp
add
lods
pop
xchg
das
or
jecxz
out
andl
insb
sahf
lret
mov
data16
sub
and
add
push
pop
and
mov
mov
lcall
in
sub
jmp
inc
ds
dec
add
pop
jo
out
jns
jmp
insl
or
aam
xlat
inc
in
push
popf
out
push
jecxz
xchg
idivb
cmp
sub
cmp
nop
fwait
or
jae
test
xchg
mov
stos
popa
jp
inc
cmp
inc
cmpsl
and
inc
and
dec
jecxz
xchg
inc
ret
sti
or
lds
add
cmp
call
movsb
es
and
pop
xchg
jne
cmpsb
in
adc
push
add
and
pop
sub
pop
or
sti
push
jo
outsb
inc
or
mov
lret
push
scas
pop
mov
int3
mov
out
sub
repz
testl
mov
imul
push
adc
xor
jno
mov
es
mov
daa
insb
loope
hlt
pshufw
in
daa
icebp
lods
mov
jg
out
add
sub
jo
out
scas
cmp
pop
mov
cmp
fidivrs
cmp
sbb
ljmp
pop
aas
push
repz
lret
test
jb
and
das
push
jle
ficoms
dec
inc
leave
sub
mov
sti
lea
add
xchg
outsl
inc
scas
cmp
iret
pop
inc
aad
orb
mov
rcrl
pop
pop
int3
stos
shrl
cltd
scas
movsb
pop
cmc
out
out
fcomp
xchg
ds
clc
rol
sub
jne
jl
cltd
rcll
outsl
shlb
test
jnp
mov
jo
stos
mov
adc
mov
mov
or
and
push
fnstcw
arpl
in
popf
sbb
xor
test
push
push
out
data16
insl
pop
and
and
inc
loope
aad
xchg
push
out
pop
mov
sbb
sub
test
add
mov
out
mov
inc
and
jne
faddl
cmpsl
mov
sub
add
shll
rcrl
cmp
mov
insb
mov
fisttpll
movmskps
jl
cld
cmp
xchg
addr16
sub
orb
sbb
pop
test
lds
cmpsb
shl
mov
lret
cltd
and
in
lret
xor
jge
sahf
in
ja
jecxz
dec
cmp
jl
cwtl
mov
mov
pop
hlt
outsb
mov
enter
jns
xor
cwtl
push
sub
loope
int
ljmp
out
fucomip
jns
push
popf
pop
and
lods
cmpl
ja
movsb
jbe
stc
in
add
aaa
mov
insl
fsubr
aam
ds
and
jle
xor
pushf
dec
xchg
and
inc
push
pop
mov
jo
mov
push
jl
sub
inc
lea
or
ret
fxch
pop
add
mov
sub
lock
mov
dec
cmp
pop
jns
sub
push
ss
stc
ljmp
out
jl
dec
and
mov
inc
enter
mov
cmpsb
int
push
cmpsl
pusha
add
cmp
sub
ret
popa
pop
outsl
mov
and
gs
sub
or
mov
popa
loope
jno
outsl
in
outsb
mov
mov
data16
inc
lock
mov
ljmp
rorl
out
in
mov
push
ss
push
gs
jnp
lcall
stc
cmp
lea
jle
dec
sti
adc
hlt
hlt
sub
notb
mov
aam
pushf
push
outsb
xor
adc
sub
cmp
mov
mov
lahf
ret
ljmp
hlt
std
add
mov
mov
ljmp
in
pop
icebp
test
cmp
pop
imull
dec
add
cmpsb
pop
cmpsb
mov
lret
sub
out
out
fstpt
sbb
arpl
stc
push
in
dec
out
idiv
and
sbb
adcb
xchg
ret
mov
dec
cltd
cmp
xor
fwait
subl
scas
pop
jle
pop
hlt
sbb
cmc
jne
insb
out
call
test
sbb
xor
sbb
mov
aas
pop
sub
jp
ret
loope
mov
add
lcall
sbb
pop
cmc
outsl
nop
pop
mov
imul
inc
mov
subb
mov
stc
daa
mov
jecxz
sbb
inc
enter
push
ljmp
add
lret
pop
adc
push
pop
ds
mov
scas
add
sbb
mov
aad
out
dec
inc
cmpsl
mov
loopnew
xchg
lcall
inc
inc
sti
sub
lea
pusha
jmp
or
idiv
in
movsl
jae
movsb
and
mov
and
int3
mov
icebp
mov
xchg
push
sahf
mov
mov
pop
jmp
xchg
out
xor
mov
mov
cmpsb
jecxz
mov
imul
xchg
push
inc
mov
lods
add
popa
push
in
rcl
inc
push
ss
mov
pop
push
insb
jno
iret
std
add
cmpb
arpl
jb
xchg
cmc
mov
dec
jnp
out
fsubs
dec
cmp
push
das
xchg
xchg
pop
push
cmp
sub
daa
enter
out
dec
cmpsb
lcall
inc
insb
xchg
jmp
scas
ds
inc
xor
shlb
jmp
jno
icebp
cmc
add
push
pop
push
add
mov
movsl
aaa
jno
sub
jb
and
cmp
and
sub
xlat
push
test
jge
adc
sbb
mov
adcb
inc
push
lods
jge
mov
orb
xor
scas
data16
mov
lods
or
gs
scas
lods
sbb
jp
sub
xchg
int
shl
ds
es
jae
cmp
pop
out
and
pop
mov
sub
shrl
xor
sbb
cmp
sahf
push
lods
es
ret
sahf
jbe
std
out
std
loop
test
inc
xchg
dec
mov
push
adc
notb
fcoml
adc
sbb
gs
sub
lods
adcb
or
es
out
arpl
lds
adc
cmp
daa
sarl
add
lret
rol
int
xor
out
jge
cli
mov
andl
in
pop
cld
xchg
out
gs
mov
push
sub
in
je
imul
cltd
andb
lods
pop
into
mov
repnz
shlb
repnz
cwtl
mov
jmp
or
xchg
test
xor
dec
ret
push
es
push
dec
adc
xchg
aad
xorb
cmpb
push
loope
mov
adc
mov
mov
push
fdivr
sbb
mov
mov
push
mov
scas
adc
outsl
mov
inc
jp
push
ljmp
cmp
mov
iret
or
divb
jae
xchg
and
jae
dec
pop
jmp
dec
inc
sahf
popa
cli
push
jnp
xchg
mov
lods
pop
in
and
mov
jbe
cmp
pop
mov
cmp
jnp
repnz
add
and
mov
mov
mov
sub
scas
dec
sub
or
push
fst
enter
jno
mov
sbb
ret
pusha
cmp
cmp
paddq
sub
jle
cmp
ds
push
mov
out
sbb
inc
pop
adc
push
sarl
ds
jle
fsts
dec
fisubs
sub
lea
jb
insl
aam
mov
dec
mov
inc
pushf
mov
sub
push
cmpsl
push
cmpsb
fstps
pop
lea
sub
mov
lahf
out
mov
das
mov
enter
hlt
dec
fldenv
adc
add
jns
arpl
mov
lea
fisubrl
daa
push
mov
scas
mov
shrb
pop
and
pop
add
ret
push
pushf
inc
mov
movsb
lcall
or
dec
rolb
js
mov
loop
cmp
pop
lods
or
add
sub
daa
sbb
fstpt
push
xchg
lock
adc
pop
cwtl
stos
push
movsl
or
testb
mov
xchg
xchg
loop
add
or
cli
push
push
dec
push
fsubs
push
add
lahf
dec
repnz
xor
out
das
mov
mov
int3
ret
add
jmp
test
out
jae
arpl
xchg
mov
push
push
or
push
js
es
push
andb
inc
nop
sub
loopne
movsb
jno
ja
lcall
sub
scas
stos
bound
mov
call
cli
cmpb
movsl
leave
ret
imul
dec
aaa
ret
hlt
lahf
push
outsl
enter
or
mov
pop
lods
cwtl
hlt
sti
lds
test
ds
aam
aas
push
rclb
int
call
jno
ds
xchg
inc
scas
pop
out
dec
cmpsl
loope
push
pushf
inc
xchg
xchg
sarl
orb
mov
dec
sti
mov
dec
jo
movsl
add
es
add
scas
cltd
bound
add
and
icebp
rep
or
fdivrl
dec
cltd
repz
or
sub
hlt
pop
fldt
or
and
push
xchg
mov
aas
and
dec
fwait
mov
sbb
movsb
pop
insb
ds
in
nop
or
imul
pop
pop
dec
jnp
push
data16
adc
cmpsb
test
add
js
mov
add
sbb
pop
test
in
cmp
mov
fiaddl
or
sbb
inc
insl
jmp
inc
adcb
loope
adc
ret
icebp
pop
mov
xor
scas
pop
aaa
mov
iret
push
dec
int
xchg
lock
orl
or
mov
in
sbb
mov
xchg
or
orl
test
fs
mov
leave
mov
and
push
ftst
dec
xor
mov
jae
jge
dec
cli
pushf
xchg
jecxz
shrb
out
adc
add
iret
out
popf
sbb
mov
pop
test
adc
call
mov
dec
mov
sbb
jmp
cs
and
jmp
jp
aam
sub
xchg
pop
mov
or
cmc
lahf
adc
je
outsb
and
xor
ds
sti
loop,pt
scas
inc
roll
ljmp
cmp
mov
cmp
cmc
outsb
adc
xor
dec
mov
inc
dec
in
cmp
jae
mov
icebp
sub
mov
decl
out
jnp
adc
pop
and
push
daa
fsubl
test
jmp
fucomip
xor
aaa
jmp
out
je
pop
filds
das
push
cmp
sub
daa
aad
andb
sbb
xlat
fisttps
or
push
mov
or
sbb
sub
cmp
adc
xchg
call
mov
mov
inc
sub
shr
fisubs
ror
push
or
outsl
cmp
shll
inc
cli
popa
and
xor
mov
fisubrl
aas
daa
lahf
cwtl
outsl
sbb
dec
dec
cmpsl
shl
adc
lret
fdivl
jne
dec
out
inc
jb
stos
scas
push
rcr
mov
roll
xchg
push
test
fistl
nop
dec
dec
popf
or
adc
sbb
jmp
add
jg
in
push
jge
add
cmp
icebp
adcl
sbb
into
sbb
notl
dec
lea
sub
pop
jmp
jb
cmp
es
call
sub
cld
les
mov
sti
push
sti
adc
test
jge
mov
loopne
add
inc
shll
popw
sbb
loop
sbb
gs
out
test
jg
cmp
sbb
mov
pop
out
stos
mov
cmp
loop
addl
xchg
outsb
mov
enter
cmpsl
adc
js
pop
mov
mov
push
xchg
and
js
inc
bnd
imul
sarl
pop
mov
and
ds
inc
mov
adc
fcoms
jnp
adc
xchg
add
aad
into
outsb
mov
jo
push
sbb
xchg
inc
rclb
mov
insl
movsb
imul
adc
inc
ret
inc
loope
mov
iret
lret
das
push
push
pop
in
and
test
gs
lret
hlt
and
or
mov
cltd
xchg
jns
sbb
xlat
xchg
jl
pop
lock
cwtl
cmpsl
xchg
adc
scas
sub
dec
mov
cmp
push
sti
stos
into
punpckhdq
or
jge
inc
movsl
out
cmp
dec
ds
roll
mov
xor
mov
cmp
xchg
cmp
mov
mov
jns
mov
stos
jo
and
fucomip
sub
mov
out
scas
sbb
cli
shll
ds
push
inc
int3
and
mov
loop
fnstcw
arpl
insb
ds
jbe
in
mov
sbb
imul
and
cld
ja
xor
stc
xchg
mov
bound
push
nop
insl
fdivr
jmp
mov
push
fwait
inc
sbb
mov
xchg
js
lods
xchg
sbb
mov
dec
sub
insb
mov
stos
test
mov
cmp
xor
cwtl
int
jnp
pop
arpl
dec
jl
mov
cmove
icebp
mov
push
push
mov
inc
in
dec
dec
push
outsl
sbb
cmp
adc
xchg
push
cmp
xor
push
imul
dec
lcall
adc
mov
fisubrs
xchg
xchg
cmpsl
loopne
sbb
insl
inc
and
lret
sub
aas
inc
adc
addl
fidivrs
sbb
rolb
mov
or
in
mov
xchg
push
into
mov
jo
les
pop
imul
or
insb
js
fisubrs
ret
mov
add
clts
frstor
call
add
sahf
aad
addr16
sub
mov
mov
and
cld
adc
test
sub
inc
xor
dec
push
push
mov
dec
dec
aas
mov
jp
jle
cli
adc
xchg
mov
jo
aad
xor
daa
rcrb
mov
movb
mov
mov
cmp
inc
int3
add
loop
or
sar
sub
insb
in
inc
mov
cmp
iret
lcall
in
les
in
bnd
lcall
sub
cwtl
mov
or
sti
outsb
pop
cmp
adc
pop
stos
loope
push
imul
iret
cmp
ret
flds
std
addr16
dec
and
fwait
push
dec
jne
iret
nop
pop
cmp
add
shr
push
les
jns
sbb
jl
and
into
fs
cltd
mov
add
mov
push
hlt
jb
add
mov
xchg
dec
iret
leave
and
imul
mov
mov
popf
mov
push
jp
lret
lret
push
add
cmovno
mov
cmp
jns
les
aas
stos
in
insl
push
data16
pusha
shlb
mov
dec
push
pop
pop
cwtl
clc
inc
insb
adc
stos
das
xor
xor
mov
pop
lock
jnp
sbb
cli
sbb
xor
jmp
sbb
sbb
xchg
cli
inc
mov
xchg
in
push
sbb
and
xchg
loopne
adc
jge
gs
xchg
jmp
or
xor
fstpl
xchg
xchg
push
jno
xor
inc
push
and
xor
pop
xchg
mov
xchg
mov
scas
inc
push
push
sbb
fildl
mov
jmp
hlt
cmp
sub
je
dec
inc
test
jbe
fwait
xor
xor
xor
pop
xor
sub
pusha
push
aaa
in
popf
nop
aad
mov
sbb
mov
cmp
pop
push
xor
sub
push
xor
xor
fldenv
or
mov
popf
pop
stc
mov
mov
mov
mov
adc
enter
aaa
jno
movsb
pop
and
mov
mov
lds
xor
mov
jmp
das
cltd
insb
sub
or
or
and
dec
and
movsl
sub
aad
dec
cltd
leave
inc
fucomi
ljmp
subb
push
mov
loopne
push
xchg
leave
fsubrs
gs
mov
cld
repnz
cli
enter
push
bound
lods
xchg
lds
scas
adc
faddl
adc
sub
lds
scas
inc
rol
test
mov
push
stos
xor
mov
sub
cmp
xchg
iret
mov
in
aad
lcall
cmc
jae
mov
repz
pop
dec
or
sbb
sbbb
aas
push
scas
pop
add
aaa
inc
ljmp
mov
cmp
rorb
and
or
adc
lret
lea
jo
jo
jno
dec
add
mov
divl
sbb
arpl
jne
dec
inc
add
repz
in
jl
mov
stc
pop
jecxz
add
pop
sbb
stos
push
stc
ss
js
fsubl
jge
es
sbb
lods
mov
inc
add
or
jne
jecxz
test
icebp
push
decb
cli
movl
mov
push
js
push
push
sub
adcl
push
cmp
pop
dec
xchg
cmpsl
ret
inc
or
cli
mov
jecxz
pushl
pop
nop
inc
rol
stos
pop
lret
sbb
jmp
aas
fnstcw
add
xchg
dec
lds
push
out
add
stos
xlat
out
inc
mov
imull
insb
sbb
push
fbstp
aas
out
or
dec
sbbb
in
repnz
push
dec
fdivrl
sbb
aaa
shll
jmp
shll
popf
test
xorb
inc
or
xchg
rcrb
push
outsl
push
xor
xor
add
and
in
fwait
rcr
pushl
mov
fwait
push
push
sahf
sub
pop
inc
mov
mov
aas
in
xor
mov
int
arpl
xchg
pop
push
hlt
mov
and
scas
lret
pop
ds
aad
stos
ret
xchg
loopne
push
xchg
outsl
pop
std
or
ss
arpl
jp
sti
push
or
jl
mov
je
jl
pop
jnp
xlat
mov
cmp
jnp
push
dec
aad
fimuls
jmp
jl
es
add
insb
push
mov
xchg
adc
ss
sahf
xlat
pop
mov
cmp
aaa
loop
xchg
push
mov
jge
cs
jns
jae
mov
jb
dec
ja
in
pusha
orb
call
out
push
clc
clc
dec
les
cld
cmp
xlat
mov
add
outsb
mov
mov
mov
dec
adc
cld
gs
outsb
mov
lahf
loope
cld
cltd
and
jbe
lods
xchg
add
jl
rcr
fbstp
pop
inc
pop
push
out
mov
leave
cmp
iret
sti
lods
jl
int3
mov
add
xor
out
cmp
arpl
outsb
inc
sbb
pop
xchg
xor
xor
sbb
dec
leave
clc
push
sbb
and
push
out
fs
sub
xor
data16
xor
imul
jle
xchg
loop
mov
addr16
and
or
out
jns
xor
dec
pop
cmp
pop
mov
jne
add
pop
xor
pop
push
xlat
imul
sbb
jg
mov
ss
hlt
scas
and
xlat
imul
dec
xor
xlat
add
cmp
ljmp
inc
or
pusha
push
xchg
sub
mov
jnp
shlb
nop
sbb
loopne
or
test
adc
xchg
dec
mov
dec
mov
sub
lret
dec
bound
push
rolb
outsb
jge
mov
nop
dec
sahf
push
sub
int
lods
mov
sub
cmp
js
std
arpl
aam
ret
dec
imul
adc
inc
pushl
adc
dec
cs
jmp
sbb
xlat
jb
in
cwtl
push
inc
sub
test
pop
add
test
adc
fbld
js
mov
xor
dec
cmc
mov
ljmp
mov
dec
cltd
loope
dec
cld
movsl
inc
shrb
arpl
mov
mov
dec
push
repz
shll
mov
pop
mov
test
scas
dec
or
mov
or
jno
movsb
es
cmp
pop
push
add
movsl
mov
cmpsb
sbb
mov
sub
mov
imul
orl
inc
aaa
aaa
mov
add
cmp
ljmp
aaa
aam
push
shlb
loope
fisubrl
mov
mov
adc
mov
cli
cmp
sbb
insb
pop
xchg
mov
shll
out
imul
dec
out
shl
mov
and
lea
adc
mov
cmp
pop
sub
pop
pop
ficoms
and
sbb
xchg
inc
mov
or
stos
int3
enter
insl
lock
mov
xor
push
or
pop
add
js
jmp
sub
shll
jp
add
repnz
pop
div
cltd
xchg
cmpsl
xchg
gs
loop
ret
xlat
out
cmp
cwtl
sti
aas
lahf
movsl
mov
ret
addr16
popf
jp
xor
mov
dec
dec
icebp
ss
test
outsl
xchg
or
sub
push
add
pop
jge
fidivrl
lods
inc
cmp
pusha
lods
ficomps
inc
mov
fucomp
mov
mov
add
cmp
es
lea
sub
cltd
pop
dec
jmp
popf
aam
shrl
inc
and
cld
inc
scas
mov
in
inc
iret
es
clc
mov
push
sub
ss
sahf
mov
mov
cmp
mov
icebp
adc
icebp
dec
inc
pop
jo
js
addl
enter
je
dec
sbb
out
mov
mov
jae
lcall
lds
je
add
add
inc
stos
pop
push
sahf
xchg
mov
cmpsb
cld
mov
mov
adc
or
int3
incl
outsl
insl
fcomi
xor
fstps
jbe
pop
pop
es
dec
aam
jl
add
stos
test
and
push
pop
and
pop
xor
stos
sahf
push
xchg
ss
xchg
mov
cmp
xchg
mov
pop
je
je
loopnew
inc
popa
xor
mov
sbb
xchg
jns
adc
pusha
add
lods
mov
in
pop
lods
stos
aaa
inc
cltd
sub
inc
loop
mov
mov
jmp
pop
fadds
cmp
stos
inc
outsb
lret
and
lret
xor
mov
fisubrs
mov
sahf
es
inc
inc
iret
mov
mov
dec
jl
inc
push
stos
cltd
add
add
cmp
xor
pushf
sub
fnstcw
xchg
sbb
and
lahf
inc
clc
push
inc
imul
sub
std
into
adc
and
mov
push
add
mov
das
cld
mov
push
inc
ljmp
shlb
xchg
call
imul
imul
lret
adcl
mov
es
cmp
cmp
add
add
sub
mov
scas
test
test
fs
scas
add
add
icebp
lods
fs
sbb
adc
leave
addl
pop
mov
dec
sub
push
and
add
shlb
out
fwait
jns
cmp
mov
and
ret
mov
movsl
jmp
subb
lock
stos
mov
lock
xchg
jne
sbb
jmp
jmp
mov
insl
push
mov
push
sub
iret
mov
lret
dec
outsl
or
aaa
push
mov
sbb
enter
ret
pop
or
movsb
mov
dec
in
xchg
ss
mov
push
ret
or
lods
mov
jns
push
cmp
xchg
mov
jecxz
push
orl
js
in
addr16
push
cmp
dec
in
stos
mov
xor
pop
ret
mov
xchg
fstpt
je
stos
out
push
stc
xor
lahf
jmp
test
mov
shrl
pop
rorb
cmpsl
fisubl
xchg
int3
mov
or
push
xor
scas
out
scas
pop
fisttps
fcmovnbe
cmp
mov
ret
and
nop
cmp
popf
pop
inc
movb
mov
ljmp
adc
jmp
out
mov
movsb
sbb
jg
insl
mov
or
mov
push
loope
mov
sub
sbb
xor
leave
push
and
out
jp
out
and
mov
movsl
out
adc
mov
mov
jno
mov
xchg
xor
outsb
xchg
inc
push
inc
fsubrl
aad
inc
test
xlat
push
or
aad
inc
and
xchg
in
pop
xor
sarb
aad
cmpsb
mov
inc
inc
cmc
sbb
xchg
dec
shrl
cs
jne
jo
mov
mov
push
imul
push
bnd
movsb
add
sub
dec
inc
inc
push
test
and
xor
jns
ss
push
test
cwtl
js
fsubrs
inc
mov
dec
dec
mov
push
pushf
or
sub
push
stos
popa
rcrl
adc
pop
rcll
or
push
cs
push
xchg
inc
cmpsb
lea
dec
mov
jmp
or
mov
iret
subl
cltd
clc
mov
cmp
dec
mov
mov
test
adc
bound
test
mov
clc
push
bound
xchg
test
or
pop
sti
mov
repz
sbb
pop
or
push
xchg
xor
loop
iret
inc
dec
lea
addl
leave
data16
and
cmp
out
mov
clc
pop
cmp
adc
xor
push
mov
loope
jg
jg
clc
jmp
fwait
int
and
mov
xlat
jmp
pushf
int
sbb
sar
scas
and
sti
data16
in
out
iret
sbb
xchg
xchg
jmp
xchg
xor
sets
in
loop
or
lods
cmp
lds
jno
dec
dec
xor
pop
add
jle
push
std
insl
push
pushl
cmp
mov
popf
dec
pop
mov
push
mov
mov
push
int
mov
and
lahf
loope
jbe
bound
mov
sbb
mov
mov
into
icebp
jl
mov
repz
lods
pushf
lea
scas
sbb
and
insb
xchg
jle
imul
lret
cmpsb
jne
int
fcoml
stos
test
xchg
out
cmpsl
loop
mov
iret
dec
add
or
inc
nop
test
mov
jp
into
mov
jae
cld
adc
and
and
rclb
jl
push
pop
mull
sbb
cld
and
mov
data16
add
xchg
and
add
out
jno
mov
pop
movsl
add
fidivrs
jo
repnz
and
int
cmc
lret
push
pop
sub
adcl
sub
and
popa
xchg
xchg
and
cwtl
popa
test
jg
sbbl
out
sub
add
int
lret
sti
pushf
and
in
fstpl
xorb
stos
adc
adcb
pop
jge
mov
scas
scas
stos
pop
and
xor
mov
dec
xor
mov
loopne
sbb
mov
punpcklwd
hlt
lea
jecxz
jb
add
xchg
adc
cmp
scas
dec
stos
sbb
and
xchg
jno
cmpsb
mov
out
std
mov
sbb
in
cmpsl
fisubrs
add
push
insl
push
xor
mov
push
shrb
xor
nop
pop
loopne
jo
mov
add
inc
jl
fsubs
sbb
jl
into
ljmp
mov
ds
ret
out
push
inc
push
out
ljmp
std
xchg
jno
enter
jp,pt
nop
das
xor
pop
stos
fs
cmp
bnd
mov
sub
cmp
pushf
pop
adc
dec
xor
mov
test
add
pushf
fcomip
sub
push
or
or
scas
in
fbld
inc
adc
cmp
mov
sub
cmpsl
inc
in
sub
jns
sbb
cmpsb
outsl
xchg
fadd
push
sub
ja
shll
gs
lock
fnstenv
push
iret
push
cld
popf
adc
cmp
pop
mov
out
pop
out
push
and
mov
xor
mov
je
pop
test
in
push
add
in
inc
outsl
add
jp
movsb
push
or
jg
ljmp
in
xor
fdivrs
pop
mov
xchg
ret
xor
mov
ja
popa
dec
es
setns
lds
inc
mov
rorb
add
jmp
adc
out
dec
xchg
push
adc
mov
in
cmpsl
enter
add
jle
inc
les
scas
jnp
int3
lds
jmp
les
add
add
loopne
push
aad
test
xchg
inc
sub
gs
loop
es
daa
xchg
or
shr
mov
inc
das
or
scas
mov
mov
pop
daa
shlb
jnp
pop
push
push
inc
mov
and
outsb
and
or
adc
shll
mov
lods
sub
pusha
pop
popf
stos
mov
sub
mov
shll
dec
mov
and
fsubrl
cmp
inc
dec
mov
sbb
mov
dec
add
adc
andb
lahf
sahf
out
xchg
fsts
mov
daa
cmpsl
xor
pop
rclb
pop
cmp
xchg
mov
xchg
xor
add
push
inc
shr
imul
cmpsl
push
jmp
add
inc
out
pop
aad
pop
lcall
sub
outsb
push
lret
icebp
test
imul
push
call
stc
fistpll
test
fnsave
dec
popa
add
pop
xchg
ljmp
jmp
bnd
jbe
ja
pop
rcrb
es
inc
or
lods
push
movsb
mov
inc
dec
lods
jle
dec
xchg
cltd
out
rolb
aad
xchg
decb
mulb
add
xchg
aad
inc
pop
push
nop
ret
lea
mov
xor
or
ss
shlb
ret
inc
call
das
test
ss
pop
imul
fdivs
sub
loop
sar
pop
add
ds
pop
fstpl
hlt
push
sti
in
xor
push
lds
fldt
and
jge
stc
in
mov
xchg
adc
adc
out
shrb
cmp
in
in
iret
xchg
loope
jne
insb
dec
ja
outsl
popf
or
or
adc
inc
add
push
outsb
fidivrs
daa
iret
jecxz
cli
cwtl
je
mov
and
rcrb
sti
inc
or
adc
int3
jb
fcmovu
fdivs
shrb
scas
imul
je
repnz
insl
in
inc
adc
sbb
in
movsl
inc
into
cltd
test
lods
jle
or
loope
dec
sbb
or
xlat
sub
insl
jb
insb
leave
cmp
mov
es
jno
aad
push
push
shr
xchg
adc
out
repz
ret
mov
sub
in
fmull
lea
mov
sub
test
xchg
or
std
mov
adc
les
push
xor
clc
lods
ja
insl
inc
xchg
cmpsb
xchg
popa
mov
jbe
scas
push
test
and
ds
pop
push
cmp
dec
imul
lock
xchg
shlb
aam
call
iret
jg
in
jb
sbb
inc
into
xchg
shll
std
shrl
xchg
scas
adc
push
fistps
mov
cmp
ret
cwtl
cmp
popa
sub
dec
shrl
jno
pop
jg
xor
xor
stos
jb
jns
inc
xlat
inc
testb
fcmovu
jno
imul
out
adc
xor
lret
xchg
dec
mov
push
jne
addl
fisttps
and
mov
lock
sub
cld
jne
cld
mov
inc
jle
lods
ret
repz
dec
xor
pop
xchg
std
adc
xor
rorl
adc
mov
fildl
jno
mov
and
test
xor
inc
mov
mov
pop
mov
fwait
mov
fnstenv
inc
push
xchg
outsl
call
arpl
js
sub
stos
pop
cmp
test
out
push
fstpl
jns
jne
inc
inc
rcrl
jp
loopne
ficoms
popf
scas
and
cmpsl
jnp
in
jecxz
pop
dec
ret
cmp
inc
jmp
movb
clc
xchg
jnp
movsb
sahf
and
out
ja
in
fprem1
shlb
sbb
hlt
int
or
insb
mov
lock
enter
mov
test
jmp
push
mov
sub
inc
das
rclb
push
pop
dec
mov
lret
mov
mov
jecxz
sbb
xchg
push
sub
ljmp
insb
test
js
fldcw
in
xchg
les
filds
mov
lods
fists
dec
fcom
outsl
rcr
sbb
fs
push
ljmp
rorb
sub
add
mov
push
cs
in
pop
mov
pop
ret
pop
sbb
repz
pusha
scas
and
into
test
sbb
pop
lods
mov
dec
jmp
mov
jb
cmp
lcall
iret
rolb
rorl
cwtl
leave
or
or
cs
std
aad
mov
and
mov
movsb
addl
in
xchg
cmc
stos
and
or
and
lret
rcll
rcr
adc
and
mov
std
daa
aad
adc
xchg
sub
push
outsb
pop
sbb
daa
mov
add
leave
sahf
addr16
jne
lods
je
dec
sub
cli
and
loopne
push
jle
jno
or
fisubs
lds
mov
xor
pop
clc
icebp
or
shrb
dec
mov
sti
repnz
mov
scas
outsl
pop
popf
cmp
mov
ljmp
jle
ja
add
jmp
dec
cli
lret
xor
jl
sub
push
ss
pop
outsl
adc
mov
shr
pushf
or
or
in
cmp
mov
bound
sbb
repnz
insl
iret
adc
jb
mov
lret
mov
test
scas
xor
sub
sbb
mov
jle
pop
stos
pop
imul
sub
enter
mov
cmp
add
lods
mov
loop
jnp
inc
mov
ljmp
pop
xor
call
mov
jg
or
mov
cld
pop
jne
addr16
aam
pop
clc
cmp
dec
mov
mov
test
jmp
das
pushl
stos
rcrb
stos
mov
jl
clc
imul
ret
sub
mov
push
outsl
or
movsl
cmp
cld
sub
fidivl
lcall
xchg
stos
sbb
pop
sbb
orl
mov
jle
aas
pop
mov
std
in
sub
cli
sbb
mov
subb
and
mov
mov
sarb
ss
dec
fsubrs
vmaxsd
fwait
aaa
mov
xchg
ja
dec
mov
xor
adc
arpl
inc
leave
mov
stos
in
dec
xor
movsb
subb
and
sbb
xchg
cwtl
lea
mov
and
imul
ja
icebp
xchg
aaa
sbb
dec
mov
or
rorl
mov
mov
xor
movsb
inc
push
push
popl
xchg
test
cmp
jle
jne
pop
iret
out
rclb
neg
lret
mov
lahf
int3
and
or
addl
adc
xchg
fimuls
fdivrp
mov
enter
xor
add
mov
cmp
lea
dec
mov
js
mov
cmp
jb
inc
cs
adc
inc
dec
mov
nop
sbb
pop
and
or
shll
ret
stos
cltd
mov
in
out
mov
jmp
push
dec
xlat
in
das
mov
jne
inc
push
inc
fldcw
add
xor
xchg
test
aas
call
dec
xchg
mov
sub
and
add
pusha
into
xor
mulb
push
icebp
sbb
cli
xchg
hlt
rol
shl
pop
push
lahf
shll
das
xor
enter
jae
or
bound
int
lcall
sbb
sbb
and
shlb
mov
adc
fldl
jae
inc
aam
mov
addr16
dec
xchg
icebp
add
arpl
cmpsl
rsm
adc
jb
test
jb
and
movl
lods
stos
test
push
jmp
popf
mov
loopne
pop
test
cmp
in
push
ss
inc
jbe
cmpl
iret
jnp
imul
xor
mov
push
xchg
popa
repz
fistps
out
add
mov
dec
les
in
cmp
lret
aas
out
jecxz
lods
xchg
cmpsl
mov
or
das
jp
ret
xchg
fcmovne
push
xor
cli
jb
repnz
repz
repnz
cmp
xor
dec
xchg
aad
iret
jp
clc
pop
jae
movsb
sbb
xorl
mov
jle
push
ja
push
or
shlb
or
hlt
pop
adc
outsl
mov
jo
rcrb
in
scas
push
mov
vpaddusw
outsb
jnp
sbb
jnp
sub
adc
push
iret
dec
mov
jb
mov
aam
bound
jp
icebp
add
imul
xor
xor
roll
xchg
xchg
xchg
jp
push
outsl
cmpsl
repnz
movsb
repz
imul
mov
aad
sbb
pop
mov
icebp
jmp
sbb
pop
sub
pop
inc
xor
sbb
movsb
push
subb
cs
push
adc
sub
fnstsw
lret
push
pop
inc
sub
arpl
xor
dec
push
mov
inc
arpl
jbe
jp
pop
fiaddl
subl
mov
not
xchg
cmp
dec
push
out
pushf
aam
roll
xor
push
mov
dec
jle
mov
icebp
inc
cmp
mov
jno
jne
xor
int
sbb
shll
into
adc
xchg
pop
mov
sub
mov
in
divl
pop
out
mov
cs
push
mov
call
mov
sub
mov
add
int3
xchg
adc
aam
cmp
sbb
sub
clc
lcall
insl
inc
cmpsl
xor
cmc
test
cli
jb
mov
jge
push
jle
ds
sarl
adc
sbb
fbstp
dec
jg
pop
fidivrs
hlt
pop
out
cwtl
ss
cld
jp
and
testl
sub
inc
inc
fisubs
mov
sarl
loop
andb
sti
sarl
pop
cwtl
cmp
sbb
cmp
add
shrl
inc
ds
dec
sbb
mov
rcl
in
pop
movsl
jge
pop
jg
and
push
sbb
bound
or
sbb
push
loop
ja
mov
xor
mov
push
mov
mov
out
dec
push
nop
and
mov
stc
push
cmp
push
mov
mov
mov
test
ljmp
in
xor
sub
negl
test
xchg
lahf
jmp
or
mov
pop
mov
pop
mov
imul
imul
jno
lret
jns
dec
shll
sub
pop
or
pop
lods
sub
ret
push
inc
adc
iret
mov
add
jns
push
jns
lret
mov
fisubs
adc
xor
add
push
std
sbb
xor
rcll
int
sub
pushf
and
cmc
pushf
int
xchg
fildl
or
add
adc
fwait
mov
rcl
mov
bound
test
sbb
cmc
insl
iret
pop
divb
repnz
iret
sbb
push
ret
cmp
mov
ret
std
or
adc
xchg
cld
jge
mov
clc
ret
shrl
aas
push
sub
sbb
xor
inc
popf
sarl
rolb
lds
popa
push
lods
or
mov
add
in
or
push
lret
add
rcll
mov
js
jle
and
mov
or
mov
fisttpll
into
mov
ja
data16
je
mov
daa
fnstcw
daa
mov
addr16
call
cmc
leave
jo
sub
push
sub
je
int3
sbb
roll
outsl
jne
lcall
ret
and
ret
pushf
add
dec
jne
pop
iret
adc
addb
pushf
divl
push
leave
and
jecxz
and
push
lcall
loopne
popf
shr
jmp
mov
test
xchg
pushf
push
cmp
mov
lds
sbb
shrl
pop
dec
repnz
or
push
movsl
push
cmp
roll
jecxz
xchg
fldenv
xchg
adc
enter
add
sahf
inc
jno
int
iret
out
xchg
xchg
pop
fwait
cmp
icebp
pop
xchg
mov
pop
push
pushf
pop
fisubs
add
mov
xchg
test
mov
sub
xchg
cmp
imul
scas
les
adc
pop
push
inc
lea
aaa
mov
mov
sub
pop
stos
mov
xlat
imul
pop
insl
jb
cmc
subb
and
xchg
xchg
or
call
ret
jae
cmp
sub
cmp
xlat
sti
fnstsw
sbb
incl
mov
es
jg
xchg
stos
push
mov
or
aaa
sub
jno
mov
sahf
aas
scas
addb
inc
pop
fsubl
shll
arpl
add
loop
popf
mov
in
cmpsb
add
jns
int
pop
insb
and
jno
or
pop
loope
inc
in
in
mov
addr16
addb
adc
or
sub
outsb
std
fiaddl
mov
inc
sbb
dec
negb
outsb
cmpsl
or
xor
jae
std
xlat
sahf
aas
dec
loop
imul
jp
insl
pusha
push
sti
aam
cmp
pusha
adcb
pop
mov
or
lods
test
out
dec
pop
push
lds
jecxz
popa
mov
mov
or
adc
push
lock
inc
dec
pop
mov
mov
push
cld
lods
cli
inc
push
lock
and
mov
xchg
inc
lods
sbb
ss
pushl
data16
ds
push
pushf
add
int
es
cli
std
inc
inc
jo
dec
dec
push
mov
aam
push
xor
cli
jbe
ljmp
inc
ds
push
lods
scas
mov
cld
cs
add
rcrl
sbb
or
stc
adc
lret
jne
fiadds
push
call
jp
sub
dec
xor
adcl
popf
aas
push
cmpsb
decl
and
mov
in
add
rolb
in
xlat
imul
cmc
xchg
hlt
and
shrl
out
cwtl
dec
in
imul
fistpll
sbb
or
or
cmpsb
add
add
repnz
mov
jge
aad
iret
mov
ret
cmpsl
pushf
jae
aas
push
repz
sbb
dec
and
jnp
test
test
pop
dec
push
imul
cld
mov
add
test
shll
and
popf
out
and
in
and
pop
push
sbb
fiadds
mov
sbb
inc
push
inc
pop
xchg
mov
xchg
jae
fsubrp
or
sbb
daa
mov
dec
sbb
stos
lret
aad
add
loope
push
enter
jecxz
jbe
addr16
jno
bound
lahf
mov
testb
scas
and
sti
dec
out
std
out
mov
pop
shrb
sbb
mov
subb
lahf
sub
or
loopne
punpckhbw
repnz
imul
incl
pop
fnstenv
inc
outsb
and
pop
inc
je
out
and
sub
dec
pop
dec
mov
test
cltd
jne
stos
or
add
push
sbb
popl
into
aad
ret
testb
pop
mov
aam
out
addr16
inc
aaa
adc
fistpll
and
arpl
popa
fs
sub
push
imul
mov
sub
push
or
dec
jbe
scas
cmp
js
inc
inc
jno
call
pop
aas
aam
push
in
cwtl
rclb
lods
pop
mov
sbb
or
push
xchg
rorb
sub
cmp
adc
jmp
ret
push
jmp
mov
jge
push
jge
test
sbbb
inc
fdivl
out
xchg
or
scas
push
mov
sahf
inc
adc
xchg
adc
popf
xchg
push
lods
cmp
and
imul
lock
inc
mov
ret
jns
xchg
fstpt
push
mov
cmp
mov
cwtl
or
adc
jp
rcll
mov
jecxz
ret
sti
fiaddl
fwait
aas
push
xor
stos
aaa
cmpb
pop
dec
push
cmp
dec
enter
mov
ss
out
mov
or
test
ret
mov
add
pop
xchg
lret
dec
repz
cmc
mov
std
in
pushf
lahf
test
pop
stc
cmp
pop
xor
mov
cmp
test
or
dec
mov
jns
adc
inc
lcall
data16
cwtl
popf
add
inc
jg
pop
mov
xchg
out
mov
repnz
clc
ja
sti
add
arpl
dec
mov
push
push
sahf
xchg
cld
iret
xchg
out
int
subb
popf
popa
leave
popa
cmpsb
clc
jae
push
fcmovnb
lds
push
les
xchg
xor
frstor
xlat
int
nop
sbb
fadds
fidivl
mov
fsub
xor
outsb
push
pop
cmp
add
lcall
scas
test
out
in
sbb
test
xchg
push
popf
js
test
mov
xor
sub
push
into
cld
xchg
jo
inc
xor
xchg
pop
pop
lea
pushf
xchg
inc
or
mov
sub
popf
lods
stc
push
mov
xchg
icebp
rcrb
jae
in
sub
dec
and
cwtl
mov
lcall
add
sti
xchg
cmpb
inc
xor
popf
cmp
cmc
cltd
out
push
cmp
scas
push
sbb
pop
push
lret
iret
sti
shlb
add
inc
or
dec
ret
into
push
inc
mov
out
sub
je
sahf
inc
nop
cs
dec
lea
xor
or
mov
stos
outsb
rol
jno
cmpsl
pop
pop
mov
ret
push
fdivrs
push
popf
xor
mov
push
cmp
daa
jno
cmpsl
in
pusha
test
mov
pop
pop
sub
add
shlb
aas
call
mov
push
add
iret
or
mov
sub
mov
xchg
stos
fldt
add
jle
mov
in
outsb
test
dec
add
jae
scas
stc
push
imull
cmp
xor
loopnew
pop
in
add
or
scas
cmpsl
xchg
icebp
aad
out
sbb
rcrb
add
push
sti
fcompl
mov
sbb
dec
sbb
divl
pop
sbb
or
je
mov
aad
xchg
dec
mov
xchg
dec
repnz
or
stos
xor
pusha
sbb
mov
sbb
ljmp
mov
mov
popf
das
mov
mov
push
or
pop
lcall
mov
ret
outsb
enter
push
push
out
lea
nop
imul
js
ljmp
pop
push
cs
xchg
mov
lods
jo
movsl
scas
popf
outsb
add
xor
add
nop
les
pop
fsubrp
lock
add
incl
xor
rcll
in
xor
add
decl
je
cmpsl
pop
sub
jns
xlat
stos
lahf
push
hlt
lret
cmpsw
mov
cmp
and
iret
leave
push
jecxz
js
mov
jp
decb
push
mov
mov
add
sbb
test
dec
es
jnp
inc
push
inc
pop
xchg
insl
fdivs
mov
cmp
add
push
sbb
push
push
mov
cs
fldcw
daa
repz
ja
iret
pusha
divb
add
movsl
cld
push
dec
js
mov
or
loope
imul
mov
aas
movsl
adc
jmp
lock
stos
pop
in
fbld
je
push
sbbl
sbb
lods
push
test
arpl
sbb
mov
data16
loopne
jo
jmp
push
jae
mov
mov
lods
pusha
das
xor
aas
sub
sub
stos
repz
jecxz
adc
out
scas
js
jmp
lods
add
inc
and
mov
jne
jmp
mov
nopl
divl
mov
pop
jo
aad
inc
inc
hlt
subl
or
add
daa
daa
mov
ja
pop
and
mov
fs
arpl
lret
mov
sbb
add
add
dec
mov
dec
xchg
sbb
imul
cmc
dec
lahf
fbld
xor
jle
mov
dec
or
sbb
pop
jb
scas
test
sub
sahf
in
xchg
test
or
inc
stos
sti
pop
jbe
scas
gs
jae
stos
orl
mov
cwtl
mov
cwtl
mov
aaa
dec
sub
jp
xchg
push
mov
lea
roll
or
test
pop
mov
call
add
outsb
fisubrl
and
and
test
in
iret
mov
dec
sub
mov
enter
int3
push
cmp
ret
daa
fs
ja
dec
bsf
jmp
jp
out
xlat
add
loop
or
rolb
mov
mov
popf
lea
adc
push
inc
xchg
mov
mov
xor
mov
adc
mov
or
ljmp
xor
ret
lret
fnstsw
jae
xchg
and
lock
push
scas
sbb
mov
add
ds
pushf
lods
loopne
cmp
fcomps
movsw
add
popf
das
and
hlt
insl
in
push
xlat
ret
cmpsb
push
xor
pop
add
cltd
push
sbb
adc
lret
clc
pop
imul
aaa
clc
fstpl
dec
xor
sbb
xor
jno
push
jl
out
push
ret
jbe
dec
xor
dec
cmc
into
scas
in
scas
lcall
or
or
ja
sahf
stos
lahf
les
mov
insb
jmp
fbld
enter
jae
jne
es
imul
movl
xchg
les
fdivs
aam
sub
daa
cmc
cli
jae
dec
les
mov
clc
iret
cs
mov
dec
fs
jp
mov
adc
xchg
aas
xchg
sti
and
mov
cli
adc
jmp
mov
fcomp
dec
test
xlat
push
aaa
fsubrs
adc
ja
mov
in
jnp
or
cmp
test
lock
dec
icebp
out
cmp
cmovge
lahf
xchg
pop
mov
cmp
or
jle
lods
mov
sbb
sub
jge
out
xor
lea
test
cli
insb
fiadds
jmp
sub
outsl
out
addl
mov
fwait
mov
call
lds
out
cld
movsl
test
fadd
roll
xor
adc
xor
fisttps
cmp
jl
dec
mov
add
ljmp
mov
xchg
pop
js
inc
das
pop
inc
and
mov
imul
xor
es
loope
sbb
clc
dec
push
sub
push
xchg
outsl
and
push
ret
fdivrl
pop
in
xchg
mov
outsb
outsb
mov
insb
cli
sbb
enter
aaa
je
loop
ss
insl
movsl
inc
mov
aam
lcall
je
or
jmp
add
push
push
pop
ficomps
lock
sub
stos
push
mov
outsb
mov
pop
in
out
add
jle
pop
dec
fcomi
stos
inc
out
call
ja
es
cmpsl
adc
int3
dec
or
inc
les
cmp
bsr
mov
or
int
fdivl
xor
xchg
bound
or
push
pop
mov
jns
repz
ja
jecxz
sbb
loop
cmpl
and
mov
cmp
loopne
jbe
pop
sahf
cs
cmp
pusha
test
cmpsb
ljmp
test
inc
popa
lcall
push
rorb
jbe
in
mov
xor
repnz
or
mov
mov
inc
mov
fisttpl
push
mov
inc
mov
xor
xchg
les
dec
dec
imul
scas
stc
mov
ss
cli
std
lcall
add
add
insb
xchg
out
test
xor
xor
fwait
push
adc
aad
xchg
jle
push
lahf
rolb
jns
lods
addb
inc
jg
xchg
push
and
xor
and
shrb
test
je,pn
cld
jnp
hlt
mov
popa
popf
sub
sahf
xchg
pop
nop
sahf
push
scas
int
clc
push
stos
push
cmp
loope
push
test
test
push
jns
fwait
or
loop
jns
cmp
dec
cltd
pop
das
testl
dec
aad
jecxz
dec
addl
mov
or
jmp
enter
repnz
arpl
adc
out
sub
jmp
xor
mov
ss
dec
out
mov
xchg
lods
insl
pushf
xor
cmp
xor
test
stos
leave
mov
aaa
daa
xor
add
fldl
data16
lods
dec
xadd
ret
sub
enter
jecxz
clc
add
jecxz
scas
pop
jmp
das
icebp
fmull
and
mov
les
xchg
fcomp
pop
movsb
push
imul
dec
mov
fisubrs
xlat
sub
repnz
mov
sub
in
xor
push
jnp
cwtl
es
ficoml
add
in
mov
pop
std
fs
fsts
xor
mov
cmpsb
mov
mov
mov
sarb
mov
mov
jl
jle
jnp
jecxz
add
movsl
push
jl
rcrl
mov
dec
adc
pusha
aas
in
mov
jne
pop
pop
push
sub
stos
sarl
and
out
sbb
push
mov
outsb
les
push
and
or
mov
xchg
jnp
pop
or
rolb
cmpsl
push
push
push
push
cmp
pop
out
cmp
repnz
std
add
jge
stos
xlat
sbb
aas
pop
mov
cs
mov
inc
jg
add
pop
push
xchg
push
jmp
clc
test
or
repz
mov
cltd
sbb
push
mov
movsb
xor
sub
jne
dec
pop
fisttpll
sbbl
mov
movsl
mov
mov
in
jge
add
jg
and
movsb
cltd
leave
mov
les
out
in
push
pusha
push
stc
xchg
lock
inc
jb
test
out
cmp
dec
jp
in
pop
nop
pop
mov
ss
push
in
cmp
shll
or
out
mov
ja
mov
cmp
and
and
sub
cs
das
fsubp
or
dec
stc
push
xchg
mov
test
rol
lods
lods
insl
inc
es
xor
aas
test
xorl
cmp
cmp
leave
adc
sub
jae
sbb
jmp
mov
mov
xor
stos
push
dec
in
repz
jecxz
mov
cwtl
xor
xchg
add
mov
jnp
mov
div
cmp
dec
ret
pushf
push
les
jne
jne
in
adc
cmc
jge
iret
cmp
imul
stos
inc
into
or
pop
xchg
out
sub
xchg
cmp
hlt
xor
popf
insl
stc
imul
mov
lods
xchg
adc
mov
adc
inc
sbb
add
or
cmp
dec
int3
into
jge
sub
xchg
ret
stos
jno
mov
cmp
cld
cmp
out
xor
xchg
bound
mov
push
pop
fldenv
sbb
inc
sub
out
jo
pop
dec
pop
pop
imul
xor
inc
push
lods
es
sub
cli
test
out
ret
stc
loopne
loopne
fwait
mov
shll
and
xchg
push
mov
fstps
imul
mov
enter
inc
mov
xchg
outsl
sbb
fcmove
xchg
out
mov
sbb
mov
pop
sub
daa
jge
popaw
push
add
test
fdivr
sbb
lods
repnz
faddl
cmp
loop
push
pop
int3
mov
add
or
je
dec
nop
not
aaa
pusha
int3
mov
jo
test
dec
jl
scas
inc
lods
pop
sub
mov
jmp
xor
push
test
push
mov
std
adcl
and
pusha
cmp
mov
icebp
push
cli
fisttpll
xchg
dec
xor
add
mov
clc
cli
sahf
pop
lcall
insb
je
jnp
cmpsb
cmc
cwtl
xor
xorl
test
inc
xlat
rcrb
push
jle
inc
das
sbb
in
neg
test
sub
aam
pop
mov
push
mov
pop
bound
cltd
jno
mov
pop
fisttpll
sbb
mov
sub
and
lods
xor
lea
stos
push
pop
cld
xor
add
dec
pop
pop
jno
out
xchg
add
scas
gs
outsl
rcl
cmp
out
pop
inc
add
inc
jp
jnp
ret
repz
jg
cmp
mov
mov
sbbl
xor
and
insl
fs
xor
dec
in
fwait
jo
shr
xchg
sahf
jo
fldl
adc
andl
clc
ds
or
mov
pop
lea
test
into
bound
jno
test
push
jns
out
mov
push
scas
test
jmp
jne
cs
popa
lock
mov
xchg
xchg
cmp
outsb
in
daa
push
out
popf
cmp
int3
cmp
push
add
jae
xlat
insl
out
jnp
pushf
ljmp
dec
jge
leave
and
xor
roll
lds
neg
pop
pusha
and
fnstcw
pop
addb
jmp
scas
enter
testb
mov
aaa
sbb
fistps
xor
pusha
jbe
jg
jns
push
iret
jmp
je
out
mov
fildl
scas
rorl
loope
out
mov
loopne
inc
push
inc
mov
fsubrs
inc
pop
out
in
negl
inc
icebp
movsb
aad
and
fwait
les
mov
daa
fiaddl
sub
addr16
fimuls
dec
push
mov
and
mov
aam
in
sbb
or
jo
outsl
dec
orb
push
sub
and
scas
mov
inc
pop
aad
sub
aad
and
loop
and
mov
and
pop
mov
into
imul
push
icebp
sti
dec
fsubr
push
mov
cmpsl
leave
lahf
mov
dec
cmp
and
in
fidivrl
xchg
fs
mov
fs
sahf
and
sahf
ss
ds
xchg
cltd
ds
adc
pop
dec
dec
insl
push
repnz
adc
push
es
dec
in
in
pushf
sbb
push
lret
xor
addr16
mov
das
in
mov
neg
repnz
or
add
insl
adc
call
rcll
leave
cwtl
ret
adc
add
xor
jg
lret
sbb
or
shrb
shrl
lea
or
push
jo
lea
push
subb
cmc
lret
add
add
push
mov
cwtl
and
mov
sahf
sub
and
push
dec
fcmovbe
mov
cmp
mov
cmp
xor
mov
jo
push
pop
movsb
adc
inc
push
fwait
dec
scas
cs
mov
daa
inc
dec
pop
inc
push
stos
mov
or
mov
enter
adc
sub
cmpsb
mov
out
adc
pop
fcmove
xchg
jne
into
bound
in
shr
mov
dec
push
into
fsubrl
into
xchg
cmpsb
js
inc
cmp
in
fnsave
ljmp
inc
lahf
fldcw
out
sbb
or
andb
xlat
mov
into
fbld
mov
je
mov
int3
aam
and
mov
cmpsl
inc
sub
jae
repnz
ja
xchg
inc
cmp
jo
fldenv
xor
mov
jnp
into
neg
cmpsb
adc
scas
scas
pushf
xchg
ficoml
mov
sbb
xor
mov
xchg
mov
dec
fs
cmpsl
cs
lcall
fsubs
es
loopne
inc
add
out
stos
rolb
add
nop
adc
test
nop
imul
or
arpl
repnz
sbb
or
aas
int3
mov
jmp
adc
cmpsl
ja
or
adc
or
out
pop
mov
add
jge
fstl
rorb
lcall
mov
pop
ret
mov
fwait
enter
cld
or
mov
repz
mov
lea
push
adc
mov
aaa
daa
mull
ret
outsb
xchg
adc
xchg
xor
dec
push
aaa
pusha
pop
mov
cmp
pusha
jnp
aas
inc
jo
lahf
das
mov
push
mov
pushf
push
add
adc
imul
stc
xchg
inc
or
jmp
jmp
xor
inc
cmp
mov
mov
call
and
ja
repz
mov
icebp
mov
jmp
mov
push
cltd
lods
or
adc
call
test
nop
daa
rcrl
mov
das
fnsave
addr16
xor
ds
stos
inc
push
int3
sub
xchg
mov
mov
sahf
stos
pusha
push
test
sahf
jbe
mov
decb
dec
dec
lret
repnz
pop
xchg
sti
jp
sahf
mov
fmull
sbb
adc
adc
xchg
out
cmp
arpl
in
test
lea
mov
cld
jle
in
arpl
jb
push
mov
arpl
popf
sarl
out
push
stc
clc
in
pop
dec
into
shll
inc
jmp
xor
test
pushf
jle
int3
add
mov
pop
sti
jae
cmpb
cmp
jns
das
sbb
pop
mov
push
xlat
jns
insl
xor
ret
xchg
shr
mov
lret
stos
imul
cltd
sti
mov
adc
addr16
in
insb
mov
jecxz
les
flds
sub
push
in
stc
mov
imul
daa
dec
in
pop
addr16
dec
push
es
inc
adc
mov
push
call
or
mul
scas
sahf
lea
cmc
fisubs
scas
dec
jns
leave
lock
xchg
test
ja
rep
xchg
fcomps
rorb
jae
ret
adc
push
dec
inc
rclb
xorl
jg
adc
test
das
push
jae
jecxz
cmp
or
xchg
mov
lds
lcall
out
mov
push
push
xchg
xchg
pushw
js
mov
test
add
pusha
sarl
adc
mov
xchg
roll
sub
daa
test
adc
jb
scas
push
jno
stos
xlat
mov
loopne
lock
mov
adc
cmc
lds
or
sub
xchg
jbe
xor
sbb
push
call
je
sbb
icebp
or
pop
push
or
pop
add
or
or
mov
xchg
mov
sbb
inc
iret
fisttpl
mov
and
push
ss
lods
cwtl
adc
scas
addr16
hlt
jae
shl
inc
test
flds
outsl
mov
and
stos
or
adc
into
push
jno
inc
orl
inc
popf
dec
dec
scas
xchg
ret
mov
push
sub
push
or
mov
test
and
jb
pop
es
sub
bound
xchg
mov
popa
repnz
mov
push
xchg
mov
movsb
das
fdivs
ret
mov
mov
inc
inc
mov
out
xchg
scas
pop
cmp
pop
cwtl
fdivrp
cmp
jecxz
cmp
jmp
cmp
push
inc
jmp
repz
adc
cmpsb
add
xor
daa
cmp
cmp
inc
jg
out
shrb
repnz
and
aaa
out
stos
and
mov
pop
pop
mov
imull
or
js
popf
sub
adc
mov
cs
cmc
xor
mov
sbb
lahf
pushf
inc
ficomps
xchg
push
jno
mov
sbb
cmp
popf
fsubrp
add
outsb
or
xlat
loope,pn
sbb
mov
inc
cmp
jns
or
ja
idivl
add
pushf
outsl
js
mov
or
mov
sarl
repnz
jno
leave
xchg
mov
dec
jle
cmc
cmp
adc
inc
inc
movsl
mov
cmp
ret
pop
flds
int3
nop
inc
xor
mov
or
jbe
ret
rclb
std
sbb
fsubrs
testb
mov
sub
mov
cmp
fucomi
inc
pop
in
imull
cmp
testl
icebp
das
jmp
insl
gs
mov
jnp
in
negl
jle
pop
stos
jns
pusha
push
mov
mov
mov
jl
addb
or
jg
rcl
jge
pop
xor
mov
mov
sub
rorb
imul
adc
cltd
fstl
ret
or
and
mov
mov
cmp
push
add
sbb
arpl
inc
in
jno
mov
inc
pusha
scas
cmp
jg
iret
add
test
or
in
lret
popa
mov
push
mov
lahf
mov
sub
icebp
and
mov
stos
mov
xchg
out
pushf
rorl
stc
mov
inc
jmp
xor
jle
les
mov
and
push
adc
lea
insl
sub
js
mov
scas
mov
xchg
shrl
out
shlw
lods
mov
add
adc
repnz
jmp
jmp
mov
popa
in
mov
dec
push
jns
xor
dec
jle
repz
mov
outsl
mov
lods
add
sub
clc
dec
shlb
jae
or
cmp
ss
rclb
sub
shrl
fwait
jns
gs
dec
sub
sub
mov
mov
xor
test
sbb
das
mov
lods
jmp
fistpl
out
pop
and
jno
imul
sub
jge
xor
das
loope
xor
lret
push
out
lds
sub
sub
mov
insl
in
ret
sub
jge
mov
sbb
cltd
in
lds
ss
les
add
xchg
ret
popf
dec
pop
mov
jne
jp
inc
mov
dec
mov
int
inc
stc
and
jno
into
mov
loopne
das
sub
fsubs
or
dec
dec
shll
push
cmp
jge
xor
fidivl
inc
pop
pop
cmc
jae
test
push
scas
mov
pop
nop
sbb
ret
in
jno
and
nop
movsb
push
addb
fnstcw
fbld
movsb
push
mov
les
cmp
loopne
dec
sub
fcom
mov
jns
gs
add
dec
push
inc
mov
shl
cmpsl
test
jp
popf
fcmovbe
mov
fcomp
mov
mov
jge
and
pop
and
sub
xor
sbb
dec
cltd
out
pop
push
jl
mov
inc
out
push
mov
inc
xchg
insl
rorl
data16
dec
dec
jle
xchg
je
mov
dec
inc
bound
stos
icebp
mov
add
dec
fwait
mov
xlat
and
test
call
lods
das
add
stos
cmp
in
and
loopne
cmpsl
sbb
sub
mov
mov
scas
leave
ret
jmp
rcrb
and
insb
lcall
addr16
out
in
mov
adc
sub
and
jnp
inc
inc
and
and
dec
idivb
in
xchg
andb
cmp
push
cwtl
mov
or
aaa
push
fstpl
mov
mov
mov
mov
or
in
adc
rorl
pushf
sub
or
hlt
mov
xchg
pusha
call
lret
xor
mov
ss
and
push
pop
in
xor
imul
loopne
mov
pusha
pusha
add
ficompl
jb
mov
ljmp
stc
fistps
lds
mov
hlt
cmp
add
push
pusha
lahf
mov
push
rclb
jne
xlat
js
mov
sub
das
push
xor
xchg
in
sub
lds
push
xor
jmp
mov
movsl
rolb
or
fldl
adc
loop
roll
movsb
or
lods
adc
mov
lods
and
scas
push
cmp
dec
mov
out
call
and
and
inc
mov
cmp
fsub
into
test
mov
sbb
fnstsw
sbb
mov
jp
push
cli
popa
sub
push
loope
outsb
rolb
lret
aam
push
sbb
mov
or
movsb
cmp
mov
fwait
or
sbb
xchg
lods
mov
adc
push
call
dec
cwtl
adcl
xchg
jmp
mov
xchg
sbb
sbbl
mov
dec
jmp
insl
jo
jmp
jne
or
mov
xchg
adc
out
adc
adc
pop
mov
pop
mov
outsb
int3
movsb
addr16
dec
das
cltd
arpl
cld
dec
pop
test
orl
xchg
mov
into
lock
daa
shrb
lds
hlt
or
addr16
sbb
lret
sub
imul
or
add
xchg
inc
sahf
nop
mov
adc
mov
xchg
cmp
sub
adc
movsl
adc
int3
ja
in
xchg
inc
aam
call
je
mov
jl
cmp
jne
xor
fwait
pop
xchg
loope
push
gs
mov
leave
or
hlt
dec
inc
mov
cmp
push
stos
ss
js
inc
xchg
xchg
inc
loopne
xor
sbb
cwtl
xchg
xor
sbb
push
inc
add
fisubs
push
and
and
fxch
ljmp
dec
sub
mov
xor
pop
imul
lret
inc
imul
in
mov
add
lods
divl
or
lea
lods
aam
call
inc
and
or
and
or
fwait
loopne
scas
sub
dec
shlb
jp
jne
icebp
mov
inc
out
std
jp
fs
jno
and
sbb
pop
jmp
jns
call
adcb
xlat
inc
mov
arpl
adc
in
call
mov
sarb
dec
sub
or
fwait
pop
aad
imul
cmp
jge
xchg
pop
and
jecxz
xchg
stc
test
sti
dec
mov
outsb
xchg
pusha
mov
aaa
dec
cmpsb
xchg
add
in
shlb
fsubr
adc
ds
fs
idivb
sarb
push
cmp
jp
scas
lcall
jp
ss
push
ficomps
iret
addr16
hlt
addr16
dec
clc
xor
fimull
shl
pop
neg
out
ljmp
sahf
and
pop
fstl
cmp
push
outsb
xchg
out
or
add
jne
jnp
repz
add
xorl
adc
in
mov
repz
mov
jl
push
xor
cmp
loope
adc
and
mov
jne
cmp
jnp
arpl
lret
rcl
cmp
je
push
mov
lahf
or
and
xor
in
cwtl
xchg
sbb
cmp
cli
mov
bnd
cltd
pop
mov
enter
pop
and
jmp
mov
arpl
jae
popf
stc
sbb
xor
fidivl
mov
or
cmp
sub
in
and
dec
cmp
push
pushf
add
jge
jnp
ja
or
loopne
gs
xchg
fwait
decb
pushf
fwait
xor
xor
jg
or
inc
outsl
jns
aas
dec
dec
xchg
pop
pop
mov
jmp
add
notb
lods
fwait
sti
cld
aaa
icebp
add
out
movsl
inc
fsubrs
mov
into
shlb
fistl
sub
jb
fcompl
dec
or
xor
test
sti
inc
mov
mov
mov
push
xchg
outsl
mov
lret
add
icebp
testb
aad
and
mov
imul
dec
or
jge
or
inc
fldt
push
ficompl
or
ljmp
sbb
lret
or
mov
js
out
cmp
clc
sub
je
jo
xor
and
cltd
mov
fcomps
jge
idivb
out
dec
jbe
xor
popf
out
jmp
cmp
outsb
mov
cmp
or
mov
sbb
jmp
mov
loop
std
xor
das
jg
xchg
add
xor
inc
hlt
cmp
xor
xor
fnstcw
outsb
inc
mov
notl
clc
aam
jns
push
xor
sbb
adc
inc
imul
mov
dec
cmp
xchg
cmc
gs
dec
pop
stos
dec
push
and
lock
pushf
popa
imul
sub
hlt
or
gs
xchg
or
shl
inc
mov
dec
cltd
ljmp
pop
xor
mov
push
push
mov
cmpsl
jmp
pop
push
push
lret
inc
xlat
mov
xor
fidivl
cmp
or
sub
outsb
pop
add
dec
xor
jl
lcall
cmc
into
fs
popa
les
xor
xchg
and
cmc
cli
mov
dec
pop
xor
pop
inc
out
das
push
fs
bnd
arpl
jno
sub
pop
adc
mov
mov
jmp
cmpsb
out
sti
xlat
mov
orb
jp,pn
out
popf
pushf
loop
adc
xchg
push
and
roll
insl
cmp
fldcw
push
ror
mov
cli
rclb
or
mov
cmp
mov
mov
cmp
cld
or
scas
mov
out
xorl
das
mov
dec
sub
mov
add
rep
test
xchg
xor
cmpsb
fistl
outsl
loop
push
inc
push
and
adc
pop
ljmp
fwait
xchg
pop
xor
cmp
mov
mov
insb
lock
and
mov
mov
sub
cmpsl
mov
or
push
add
ret
mov
pop
push
je
stos
mov
dec
dec
dec
nop
jno
adc
cmpsl
adc
xor
ds
mov
push
sub
and
es
and
loop
sub
push
decb
addl
xor
jle
jno
rcrb
adc
bswap
gs
xor
mov
sub
int
push
jne
lods
mov
daa
imul
aaa
cwtl
test
out
lcall
roll
sub
pop
pop
fcompl
jle
dec
sahf
stos
sub
push
test
xchg
sub
mov
xor
aaa
cwtl
popa
rcrl
and
popa
imul
mov
add
sahf
das
inc
mov
xor
inc
push
movb
jae
fcompl
and
pop
mov
insl
int
xor
ret
ficomps
xchg
call
in
jle
jo
mov
or
lea
divps
sbb
dec
sub
sub
pop
adc
push
xor
dec
mov
ret
ds
inc
and
repz
popa
push
cmp
cmp
cwtl
jne
leave
jge
or
rolb
mov
fst
inc
or
hlt
pop
mov
pop
adc
pushf
pop
lcall
or
mov
jne
aas
decl
shl
ficoml
add
xchg
pop
jb
pop
adc
push
lds
mov
ficoms
push
call
fwait
xchg
sub
int3
je
and
scas
jle
sbb
jmp
pop
mov
cli
mov
xor
jb
dec
xchg
mov
rorb
das
jp
mov
xchg
push
xchg
lods
popa
mov
pop
int
jmp
mov
popf
add
sub
jb
mov
mov
insb
and
xchg
je
and
sbb
inc
pop
cmp
iret
mov
sahf
pop
sub
add
or
clc
pop
test
rorb
aam
pop
fmull
movntps
mov
or
mov
test
pop
lret
mov
jne
xor
jae
shll
xor
sti
sbb
sub
mov
mov
loopne
mov
or
sahf
out
and
jns
jp
push
out
jae
add
fistpll
pushl
or
jmp
outsb
inc
or
stos
faddl
stc
roll
ds
jge
xor
pop
rcr
ss
xchg
cmp
and
rcr
repz
sbb
iret
inc
mov
push
pusha
outsb
jnp
pop
fcomi
cltd
stos
push
ja
nop
push
push
and
inc
xor
and
dec
mov
rcll
cs
push
xor
imul
mov
lea
add
or
mov
sbb
repz
popa
gs
pop
js
cmpb
and
jae
dec
gs
xchg
repz
movsl
mov
sub
or
pop
dec
jns
cmp
setae
cwtl
mov
mov
push
and
adcb
pop
jb
mov
jl
sub
or
and
shrb
ds
sti
jae
adc
adc
add
pop
cmp
sub
jne
in
in
xchg
or
insb
popf
sbb
push
cmp
mov
jp
pop
shlb
int3
scas
push
or
test
pop
leave
push
sub
aad
stos
dec
inc
xlat
push
xchg
mov
xchg
ficompl
mov
mov
or
int3
sbb
inc
mov
lods
mov
dec
push
or
incl
jge
out
in
or
pushf
add
rorb
imull
add
push
mov
push
icebp
dec
pop
mov
and
pusha
push
rcrl
in
xchg
xchg
bswap
incb
dec
pusha
pop
ss
imul
fwait
lahf
fs
jle
jl
add
cmp
notl
repnz
jns
sub
adc
push
jg
imul
jns
aaa
rep
not
sub
enter
cmpsl
push
lods
and
mov
pop
pop
addr16
xchg
scas
and
lock
sub
out
push
addl
js
mov
xchg
into
or
xchg
pop
xchg
pusha
add
lods
out
mov
pop
popf
mov
cmp
push
fs
sub
ficoms
subps
xchg
push
pushf
and
xchg
arpl
xchg
cmp
mov
outsb
pop
sbb
cmp
mov
and
imulb
lods
xchg
mov
or
jecxz
movsl
negb
sbb
outsl
sarb
or
iret
enter
ja
sti
pop
mov
xchg
loopne
fidivl
jmp
imul
lahf
data16
loop
sub
add
fldl
cmp
and
cld
sbb
bound
pop
mov
add
jae
or
addr16
adc
aaa
or
sub
in
jnp
pop
loope
sub
inc
add
cmpsl
inc
cmpsb
xchg
jge
out
mov
mov
test
stc
dec
jmp
cmp
scas
jmp
nop
or
ja
cwtl
scas
sub
sbb
or
mov
pop
das
mov
push
sbb
mov
jl
cli
mov
mov
repnz
mov
in
push
mov
and
out
aas
pusha
cwtl
or
incl
cmp
mov
or
sub
sub
pop
jmp
xchg
lds
or
aaa
xchg
jbe
imul
dec
les
xor
and
stos
in
dec
or
ret
lods
lret
push
dec
add
insb
arpl
nop
pop
mov
mov
insl
jne
hlt
push
push
ret
rcl
in
pop
testb
jge
push
cld
xchg
mov
js
fisttpl
sub
fxch
test
push
mov
jo
sub
pop
or
push
adc
push
pop
test
xlat
leave
cwtl
mov
push
mov
lods
sbb
cmp
and
stos
mov
sbb
lds
sahf
sbb
push
jb
pop
sti
push
adc
pop
jge
ss
cmc
cmp
lods
push
adc
inc
inc
in
out
dec
pop
and
iret
cmp
sbb
cmpsb
mov
cmpb
or
andl
adc
int3
mov
lahf
mov
fimull
fistps
mov
xchg
repz
fnsave
push
ds
repz
lret
aas
xor
and
in
add
add
mov
xor
mov
pop
loop
xchg
jl
out
mov
xor
fwait
mov
sahf
mov
sub
cmovs
ja
adc
adc
cld
inc
sub
call
push
int
aaa
mov
dec
stc
icebp
sub
lret
mov
jno
pop
in
mov
outsl
xor
jl
sbbb
cmpsl
push
jae
stos
mov
push
jo
cmp
cmc
pop
dec
shlb
sbb
jnp
add
mov
mov
sbb
mull
out
fistpll
xchg
cmp
mov
js
mov
fs
nop
leave
adc
out
cmp
jl
test
inc
pop
cmpb
in
aam
stos
icebp
xchg
jnp
mov
mov
aaa
imul
js
nop
in
iret
lret
adc
clc
mov
or
push
out
push
jg
push
loope
sub
push
mov
mulb
xchg
inc
xchg
frstor
ret
inc
xor
adc
es
mov
mov
lret
int
movsb
adc
xchg
mov
shlb
and
cmp
and
popa
jge
inc
lret
jg
in
pop
dec
fstp
push
mov
and
das
mov
push
mov
mov
sbbb
std
dec
repnz
add
sub
xor
insb
or
push
enter
jb
jne
outsl
pop
jle
cmp
mov
inc
inc
in
jb
xchg
or
daa
stos
jl
cmc
fs
dec
dec
xchg
int3
push
mov
loope
xor
das
xchg
daa
mov
lds
stos
movsb
movsl
popf
incl
sbb
cmc
lods
fildl
mov
out
dec
fsubrl
testl
cli
icebp
jecxz
xchg
jle
dec
jbe
arpl
xorl
push
sub
ret
fisttps
inc
cmovg
push
adc
xchg
mov
and
xchg
sub
aam
adc
jmp
jge
adc
aad
aad
xchg
lcall
dec
sub
out
mov
movsb
push
cmp
sbb
mov
imul
dec
call
icebp
pop
je
pop
roll
sub
dec
xchg
or
pushf
lods
or
sbbl
xchg
pop
loopne
pop
movsl
xchg
xchg
into
lret
std
aam
lods
push
xchg
lea
sub
mov
sub
cmp
or
cwtl
mov
sbb
fimull
imul
and
mov
hlt
in
mov
jle
andl
push
lret
mov
pop
or
inc
mov
jle
cmc
pop
cmp
push
adc
dec
sub
pop
inc
cmp
jl
pop
cmp
arpl
xchg
insl
cld
sahf
mov
pop
mov
data16
inc
and
jecxz
sbb
insl
cmpsb
sub
add
sti
jle
iret
ret
lods
sbb
push
popl
popf
add
test
enter
lea
pop
roll
mov
xor
mov
adc
pop
mov
mov
or
pminub
mov
or
lea
pop
lret
fistpl
sahf
ss
cmp
test
cmp
ficomps
clc
adc
rorb
stos
mov
fmulp
pop
mov
inc
pop
cmpsl
pop
insb
rcll
mov
mov
sbb
mov
int3
in
dec
mov
test
and
push
mov
je
or
or
cltd
inc
push
sub
leave
movb
int
in
and
ds
test
xchg
cwtl
pushl
adc
or
jb
pop
nop
mov
or
or
jbe
out
xchg
cld
fisttps
fldenv
adc
out
cmp
into
push
pop
mov
mov
pop
aam
movsl
pushf
jbe
xchg
pop
xchg
mov
bound
dec
test
outsb
aas
sbb
push
call
xchg
mov
inc
sbb
addr16
mov
popa
sub
andb
imul
push
jl
and
ret
arpl
sahf
mov
mov
jge
and
push
cmp
adc
scas
jns
ret
mov
push
call
push
ds
mov
decl
clc
shrl
dec
jno
outsl
fs
imul
aad
jne
jbe
repnz
sahf
or
pop
cmp
mov
bound
cmp
mov
sbb
rorl
pop
sahf
cltd
cmp
sub
sub
pop
mov
in
pushf
ret
xchg
xchg
rcl
push
sahf
xchg
sbb
push
fisubs
mov
mov
ds
mov
loope
xchg
test
dec
repnz
inc
loopne
xchg
sahf
popa
popa
jne
cmp
or
in
cmp
adc
int3
popf
adc
jg
pop
xchg
fcomps
leave
push
les
and
dec
jne
arpl
popa
cmp
fiaddl
repz
xor
jle
adc
cld
in
dec
xlat
push
cld
add
jo
mov
push
subl
mov
subl
jns
mov
ja
jmp
mov
leave
paddq
dec
lahf
add
cwtl
adcb
loopne
jge
mov
mov
out
imul
mov
data16
mov
xchg
and
mov
into
rclb
dec
mov
add
ljmp
xchg
adc
nop
ljmp
dec
shl
stos
xor
ja
sub
mov
xor
sbb
xchg
dec
jae
sahf
xlat
div
sahf
push
jnp
pusha
mov
loopne
frstor
xchg
outsl
and
cld
into
sub
clc
mov
shlb
push
jp
gs
cmp
xchg
jmp
aam
cwtl
fcompl
jmp
pop
xlat
pop
shlb
mov
gs
shlb
xchg
cmpl
out
lcall
pusha
fs
lods
mov
in
pop
mov
sub
dec
outsb
in
push
aas
pushf
mov
push
adcl
xchg
inc
addr16
cmpb
sub
test
mov
out
ficoms
mov
ja
mov
rcrb
or
aas
mov
dec
fisubrl
sbb
push
sub
jo
pop
push
inc
mov
adc
fchs
js
ja
fldenv
mov
and
push
nop
mov
lret
dec
lret
jge
sub
push
xor
xchg
orb
ret
mov
jae
dec
push
add
outsl
xor
cmp
mov
cwtl
mov
repnz
adcb
pop
jmp
lahf
mov
cli
imul
ja
lds
test
ror
and
ss
out
pop
dec
xor
adc
pop
bound
mov
mov
lret
int
das
pusha
rcll
lret
pop
xchg
aad
jb
dec
cmc
in
mov
ret
add
bound
je
daa
dec
dec
mov
mov
mulb
testb
cwtl
outsl
cmp
sub
pop
dec
add
mov
loopne
and
insb
imul
mov
pop
cmc
test
pushf
mov
outsb
loope
out
data16
lcall
push
mov
xor
and
mov
test
cmpb
lret
sbb
rolb
xor
add
adcb
mov
negl
dec
sti
xchg
addb
inc
shr
push
popf
push
cs
jne
das
pop
inc
mov
stc
ljmp
pop
out
add
ud0
std
push
inc
push
gs
add
out
cld
sub
lcall
fldcw
or
mov
xchg
jecxz
int
arpl
scas
leave
int
pop
add
rolb
add
mov
sbb
sub
mov
js
fneni(8087
imul
xchg
out
sub
jo
fisttpl
loop
dec
bound
pop
inc
xor
push
scas
cld
push
stos
fwait
dec
mov
xchg
rcll
cwtl
repnz
ret
cmp
cmp
in
and
sbb
sahf
dec
pop
xchg
es
std
test
mov
mov
push
push
xlat
fwait
movsb
pop
fimuls
aas
test
test
push
dec
mov
mov
pusha
xchg
test
std
sub
cmpsb
mov
mov
xor
movsb
loopne
or
les
sbb
dec
add
scas
jne
push
js
mov
push
sahf
mov
sbb
sub
dec
fdiv
jg
push
mov
sbb
test
or
push
int
inc
cmc
jl
adc
sbb
dec
in
adc
mov
sub
sbb
add
push
in
sbb
push
dec
aam
and
add
sbb
imul
insl
sub
idiv
inc
fstpt
shrl
dec
add
nop
negl
pop
add
pop
stos
dec
add
xchg
mov
adc
xor
cmpsl
cmp
fmull
mov
or
pop
jbe
inc
inc
hlt
sbb
adc
push
aad
xchg
mov
xchg
or
out
ds
cmp
jne
popl
ficoms
or
mov
roll
jl
xchg
cmpsl
mov
testb
shll
mov
add
inc
or
movsl
nop
push
sub
aas
add
outsb
ds
in
fmuls
push
dec
repz
out
mov
mov
xor
outsb
push
cmc
or
popa
jnp
push
lds
lcall
cmpsb
into
mov
sarl
jno
out
pusha
push
outsl
jb
cmp
loop
cmp
pop
push
jg
aas
pop
or
xor
jbe
fstps
dec
shll
inc
jmp
mov
je
fisubrl
aas
jns
mov
cmp
test
out
sbb
sbb
loopne
test
jecxz
stc
adc
daa
in
jb
push
mov
aas
lock
jno
mov
pop
jnp
adc
sub
test
mov
jbe
mov
add
mov
push
lret
adc
mov
scas
sarb
push
les
xor
std
add
adc
ss
xlat
mov
and
add
xor
adc
mov
popf
cmpsl
mov
shrb
clc
cmc
push
les
cltd
push
or
test
mov
sub
pusha
jae
call
mov
sbb
inc
mov
loope
loope
mov
xchg
sub
out
dec
scas
into
or
mov
shrb
jb
mov
les
and
mov
rolb
mov
divl
incl
mov
add
or
cmp
fmul
sub
enter
into
adc
fstl
lods
repz
pusha
xchg
mov
mov
xchg
mov
aas
movsb
xchg
call
test
cmp
xchg
push
nop
sub
xor
daa
adc
loop
sbb
rorb
push
mov
out
shrl
pop
in
mov
mov
lret
mov
mov
mov
jp
mull
push
mov
std
icebp
jg
fldenv
aad
sbb
inc
pop
sbb
in
jg
mov
mov
subl
popf
dec
mov
fnstenv
or
shl
cwtl
sub
das
jge
les
out
and
rcr
mov
sti
sub
sahf
cs
fcoms
or
and
movsl
adc
popa
xchg
inc
mov
push
aam
imul
data16
fidivrl
cli
in
and
or
ss
ret
mov
movhps
adc
test
sbb
push
push
push
sub
outsl
stos
stos
add
inc
jmp
cs
cmpsb
das
mov
aaa
test
jno
mov
pop
in
dec
ror
movsb
icebp
aad
xchg
xlat
inc
insl
fwait
call
cmp
jnp
pusha
mov
icebp
ret
adc
into
pop
cli
movsl
arpl
mov
cmp
dec
aaa
pop
orl
imul
mov
pop
or
fiadds
jmp
pop
xchg
jae
mov
shl
inc
mov
jns
loope
dec
fsubs
andl
xor
aaa
pop
popf
cli
xchg
inc
movsb
jne
ljmp
shrb
mov
pop
arpl
push
leave
lcall
mov
push
pop
push
or
xchg
rclb
das
push
inc
sbb
inc
sub
int
pop
jb
mov
das
or
idivl
jnp
add
jle
inc
ja
pop
dec
mov
popa
xor
clc
and
cld
xchg
and
dec
lds
leave
lock
divb
cmpsb
xor
pop
out
jecxz
mov
imul
rclb
mov
stc
rorb
cld
dec
jno
adc
pop
je
or
sbb
arpl
enter
subl
add
cmp
je
insl
inc
mov
push
mov
fsubr
mov
es
loop
pop
sahf
pop
sub
inc
or
xorl
ss
cmp
loopne
mov
push
sub
push
pusha
mov
cmpsl
paddusb
inc
xor
loopne
pop
lock
mov
sub
mov
aaa
dec
inc
push
divl
add
xor
and
daa
inc
pop
loope
daa
jecxz
mov
leave
cld
jmp
pop
fwait
sub
xor
mov
mov
lahf
in
inc
addr16
push
jl
sub
insl
mov
and
xor
cmp
add
test
mov
push
aaa
push
xchg
push
scas
jnp
pop
sub
dec
push
inc
loopne
orb
cltd
rcrb
pop
fsubs
test
or
sub
add
push
test
stc
jecxz
push
rcrl
std
xor
and
sbb
cmp
lods
cmp
jecxz
aaa
pushf
cmp
and
cmp
cmp
cmpsl
mov
jge
ret
xchg
mov
insb
jge
sti
lock
in
inc
mov
addr16
push
call
loopne
mov
mov
movsb
xchg
lock
lds
sar
cmc
es
cmc
lret
js
rcl
aaa
rcrb
movsb
sub
sbb
dec
mov
shlb
sub
loope
push
movsb
lock
aad
lods
lds
fimull
cld
shl
cmpsl
js
mov
pushf
dec
frndint
mov
pop
sbb
leave
sbb
loop
int
jns
inc
daa
push
arpl
iret
cmp
cmpsb
fwait
cmp
mov
fmull
mov
rorb
mov
mov
push
outsl
jns
shll
leave
pop
sarb
or
movsl
push
push
add
fildll
jnp
sub
or
dec
jo
jo
fistpll
mov
push
and
pop
pop
jmp
mov
fstpl
jge
lds
test
in
xor
ds
fadd
std
mov
add
and
mov
sti
sub
cld
jmp
jle
fstps
or
or
in
aas
inc
add
popf
in
mov
cmp
cmp
ret
into
inc
and
scas
leave
or
nop
jbe
dec
push
frstor
push
in
lcall
repz
adc
sbb
and
mov
fidivrl
fdivl
pusha
add
mov
loop
mov
shrb
dec
inc
xchg
orl
ret
pop
ror
hlt
out
inc
mov
mov
jbe
add
xchg
test
fistpl
or
xor
cmp
mov
jp,pn
fimull
mov
and
push
xlat
fbld
fwait
insb
push
scas
or
movsl
js
add
stos
push
sbbb
sub
pop
je
xchg
jo
push
push
imull
xor
xchg
and
testl
sti
adc
in
fimull
lcall
outsb
test
xchg
scas
xor
mov
mov
push
jbe
daa
or
cmc
sbbl
lcall
imul
in
push
dec
sub
xor
adc
and
movsb
sub
outsb
lret
popa
les
jae
push
stos
xlat
mov
xor
test
and
insl
sub
adc
je
cmpsl
pop
fnstenv
leave
fidivl
je
add
fld
js
jmp
cld
adc
cmpsl
mov
sbb
pop
nop
outsl
fcomps
ds
xchg
pop
aad
cld
les
movsl
mov
flds
ret
cwtl
insb
lds
es
test
sub
popa
pop
inc
call
ffreep
in
xlat
dec
lock
push
scas
and
outsb
xchg
push
mov
fnstenv
sub
jb
and
xchg
out
mov
jl
jb
xchg
test
cs
aaa
push
dec
int
incl
leave
xchg
jbe
nop
hlt
inc
pop
mov
call
jns
imul
leave
les
xchg
mov
mov
inc
jl
test
addl
xchg
push
xchg
cmp
xlat
adc
rcl
jne
add
dec
cmp
xchg
push
jmp
mov
int
and
ljmp
or
inc
mov
jb
cmp
mov
stos
mov
loopne,pn
sbb
dec
mov
sbb
daa
push
cmp
loop
dec
jae
mov
jo
scas
push
les
call
daa
cmp
mov
addr16
xor
in
and
sbb
jge
lock
sbb
js
jmp
lret
into
xchg
inc
jl
scas
inc
daa
das
adc
in
cmp
fs
in
fwait
mov
xor
cmp
cltd
jl
mov
and
movsl
rcl
addr16
stos
jg
xorb
int
mov
and
add
mov
cmp
mov
mov
rcll
call
movsb
ss
jns
cmp
fists
inc
flds
fistps
cmp
out
sti
ljmp
lret
outsb
sbb
xor
insb
xchg
in
dec
cmp
push
mov
aam
into
pop
in
popa
dec
sahf
in
xor
out
dec
lods
test
pop
jge
cmp
mov
movsb
sub
fistps
in
cmpsl
fnstcw
adc
jge
mov
insb
cli
ds
push
cld
fdivl
adc
add
inc
mov
sbbb
mov
test
aad
call
xchg
mov
adcb
rcl
xor
push
add
or
lea
mov
cmp
or
xchg
arpl
imul
dec
jns
push
insb
loop
dec
out
jecxz
add
out
out
or
repnz
sbb
bound
lahf
loope
ficompl
call
pushf
sbbb
sub
mov
sub
mov
in
dec
adcb
sti
inc
in
nop
jp
cwtl
setno
ds
dec
shll
rolb
adc
sbb
jmp
mov
subl
into
add
dec
or
adc
int3
rcrb
fstpl
mov
repnz
int
divl
imul
cs
mov
les
adc
xchg
in
sbb
push
cwtl
lock
outsl
addb
fsts
aaa
repnz
mov
pop
jle
jnp
ds
cmc
mov
adc
add
pop
in
lret
int3
or
mov
sbb
and
loope
mov
and
pop
mov
dec
sti
push
and
mov
pop
cmp
and
sub
outsb
out
js
outsb
test
jg
jns
leave
ja
fldt
inc
cmp
movsb
sbbl
ret
and
test
mov
mov
ret
inc
imul
jnp
add
or
fimull
mov
imul
push
pop
add
dec
lahf
and
add
xorl
loope
cmc
xor
aaa
push
cmp
sub
in
es
dec
sbb
in
imul
adc
sbb
fisubrs
xchg
test
xor
iret
int
mov
out
flds
mov
flds
push
adc
gs
fcmovne
mov
lret
cmp
xchg
push
je
mov
lahf
popa
sahf
or
movsl
out
add
andb
fstpt
jmp
inc
and
sbb
dec
test
andb
mov
fisttpl
je
add
mov
sbb
cmp
daa
into
sarl
add
iret
adc
add
popa
jle
aas
sbb
jle
xor
push
xor
sub
sti
jg
fwait
das
mov
mov
jle
mov
shlb
mov
mov
cltd
das
movsw
push
mov
inc
push
push
adc
dec
jmp
lahf
shll
gs
test
inc
mov
fmuls
mov
ljmp
inc
lock
das
mov
fildll
dec
rorl
mov
mov
sahf
hlt
dec
add
aas
into
mov
ds
mov
ss
mov
insb
xor
mul
jne
fsin
loope
mov
int3
out
sarb
and
imul
inc
push
cltd
cmp
in
xchg
xchg
adc
xor
shll
dec
jno
movsb
aam
out
inc
aam
adc
decl
lods
addr16
cwtl
jecxz
adc
lret
sbb
xchg
xchg
pop
cmc
dec
adc
cmp
ja
sti
out
add
sbb
sbb
jp
notb
in
pop
aaa
stos
jecxz
lods
pushf
nop
imul
mov
lret
mov
push
adc
in
fisubs
cmpsl
arpl
sbbl
push
iret
pusha
pop
insb
imul
lods
mov
cltd
cmp
pop
data16
in
es
lods
shrl
mov
pop
mov
or
pop
mov
sub
mov
cs
xor
cmpb
jae
and
call
pop
mov
add
repz
cltd
pushf
or
movsl
rorb
xlat
add
sbb
aaa
sbb
cmp
mov
push
aad
jns
int
movsb
xor
das
mov
pop
sub
sub
cmp
cld
test
test
pop
push
es
cwtl
pop
inc
call
dec
or
xor
pop
in
fidivrl
les
add
mov
loop
adc
mov
mov
outsb
sti
stos
cmp
outsl
xor
int3
scas
adc
mov
xchg
outsl
and
cs
ret
outsl
mov
stos
xor
das
mov
ja
scas
pop
or
jo
scas
repnz
cmp
loopne
lret
mov
xor
rorl
pop
xchg
jbe
sbb
lahf
sub
add
decb
mov
and
dec
fbld
mov
pushf
enter
pop
mov
mov
orb
shl
cmpsl
mov
lahf
and
sub
imul
adc
btr
xor
jae
jns
out
or
cld
stos
dec
add
dec
or
fidivs
gs
pop
adc
mov
mov
cmpsl
inc
lds
push
jecxz
repz
ja
adc
xchg
xor
or
outsb
add
cmpsb
loopne
dec
dec
jbe
aad
mov
ret
gs
bound
inc
lock
shll
fistpll
push
sub
dec
fisttpll
outsl
ljmp
inc
jns
enter
sbb
shr
xor
xor
mov
in
dec
or
inc
lds
pop
inc
xor
lds
inc
cmp
enter
inc
sub
or
push
cwtl
arpl
lcall
das
or
dec
push
add
mov
pop
js
mov
aaa
jbe
sbb
jbe
mul
push
cli
push
mov
mov
lret
cmc
xor
or
adc
jb
xor
clc
push
aaa
dec
icebp
cmp
lret
push
mov
or
dec
xor
sbb
xor
xchg
cmp
sti
stos
ljmp
xor
clc
xchg
mov
into
mov
mov
mov
sbb
or
cld
xorb
repnz
push
or
sub
cmp
hlt
mov
or
imul
add
mov
loopne
xor
mov
mov
cli
test
test
scas
xlat
mov
les
fmuls
clc
adc
aam
je
mov
add
mov
loop
mov
xchg
jg
mov
sbb
dec
aaa
sbb
cmp
dec
add
iret
enter
pop
mov
repnz
xchg
add
insl
mov
pop
cltd
xchg
shlb
cmp
sub
xchg
addr16
das
and
popf
jno
sahf
xor
scas
and
repz
pop
ret
sbb
add
xchg
inc
push
pop
adc
into
fstpl
or
pop
pusha
pop
xor
test
ja
loop
mov
in
inc
cltd
test
or
outsb
lret
cmp
cmp
es
cmc
aad
sarl
xor
xor
add
hlt
adc
in
in
cmp
cld
ret
fwait
rcll
jge
cwtl
pop
aas
cmp
and
cmp
mov
repz
test
adc
adc
shl
jmp
xchg
sub
dec
adc
call
cs
iret
insl
loop
dec
xor
jle
sub
push
adc
jbe
in
data16
addl
movsl
cmp
cmp
push
cs
and
data16
jp
daa
jmp
inc
out
fucomi
xorl
xor
out
or
adc
or
movsl
flds
pop
xchg
lret
lret
int
sarl
push
in
je
xchg
add
xor
xlat
fimuls
lret
out
imul
out
push
clc
push
pop
mov
mov
sbb
pop
sub
and
pextrw
fs
inc
xor
sub
add
or
ds
inc
stc
hlt
enter
dec
jne
rol
jmp
aam
ds
xor
pusha
xchg
xchg
mov
xchg
jb
inc
out
xor
mov
ljmp
dec
inc
pop
xchg
jbe
xor
push
xcrypt-cbc
cmpsl
shrl
das
outsl
repz
xchg
inc
add
adc
sub
mov
insb
add
mov
and
xor
fs
or
nop
jp
or
divl
mov
add
in
mov
sub
loop
jmp
addr16
cltd
or
iret
cmp
cwtl
mov
sbb
ss
das
xor
cmp
or
and
lret
dec
fs
and
and
and
sub
inc
aas
and
adc
cmp
div
lock
test
xchg
lods
movsl
pop
addr16
sub
jbe
pop
jne
adc
or
rorl
in
dec
stc
mov
cld
xor
fnsave
and
jo
nop
or
in
and
subb
cmp
ret
test
repnz
sbb
adc
and
mov
sbb
lock
lret
js
pop
iret
jle
sub
fldenv
pop
jp
jae
hlt
inc
mov
mov
xor
adc
cwtl
shr
in
shlb
sbb
in
mov
and
out
gs
cmp
xchg
add
or
xchg
rorl
scas
cmp
fucom
xchg
dec
shlb
inc
repz
ljmp
mov
jecxz
pusha
pushw
mov
inc
cmp
into
shll
ret
aad
xor
out
add
mov
cmp
bndldx
in
ret
xchg
sub
sbb
sahf
inc
bound
cmp
cmp
fdivl
xchg
mov
pop
mov
mov
jb
cwtl
leave
cmp
and
test
inc
fimull
and
push
int3
insb
cmpsb
pushf
out
sub
adc
xchg
cmp
sar
adc
mov
xor
outsl
outsl
bound
push
call
dec
lret
and
lcall
xorl
xor
sahf
fwait
sbb
sti
mov
xor
outsl
xchg
pop
inc
add
shrl
lahf
ss
mov
icebp
test
aaa
add
jae
lds
push
mov
pop
inc
into
xchg
push
sbb
xlat
sbb
outsl
jo
sub
into
jbe
or
add
sub
mov
jbe
jecxz
sub
inc
xor
bswap
pop
into
outsl
sbb
cmp
cwtl
mov
test
inc
lds
in
faddl
std
nop
mov
xor
xor
sub
mov
inc
fsubrs
inc
inc
xor
and
xor
into
push
das
mov
addr16
dec
jno
pop
insl
movsl
mov
jne
add
and
sbb
xchg
xchg
and
test
pop
push
and
add
lret
in
call
sahf
mov
in
imul
js
jne
mov
addr16
lea
cmp
jbe
pop
subl
dec
mov
dec
fistl
or
cmovno
test
push
cld
or
ret
xlat
pop
pushf
jg
lcall
mov
dec
mov
daa
inc
adc
ds
sar
imul
cmc
in
add
jge
or
fisubrs
sub
push
fisttpl
add
cs
or
jb
data16
add
movsl
cmp
bt
sbb
enter
xchg
xchg
push
pop
mov
push
pop
and
imul
pop
mov
inc
aas
daa
inc
cld
mov
aaa
or
push
int3
adc
mov
arpl
insl
cmp
xor
jo
int3
xlat
popa
sahf
rcrb
or
mov
jl
enter
jle
or
les
cmp
test
or
push
xchg
lret
mov
or
lods
in
xor
jno
xchg
sub
pop
mov
test
bound
dec
ret
fstpt
mov
aaa
sarb
outsl
sbbl
fwait
push
xor
shlb
push
mov
mov
add
adc
mov
sub
or
push
mov
andl
sbb
imul
xchg
lds
dec
or
mov
jp
clc
jl
push
jge
ja
clc
insb
in
test
sub
and
ds
xchg
dec
push
mov
out
pop
je
and
mov
les
enter
cmpsl
loopne
xorb
or
roll
mov
add
ja
popf
mov
push
cmpsl
jmp
mov
int3
or
dec
xchg
test
rorb
aaa
test
dec
dec
pop
arpl
iret
xor
imul
ljmp
pop
js
inc
scas
adc
clc
nop
pushf
cmp
jp
xchg
stos
in
cwtl
hlt
mov
or
cmp
push
push
xor
pop
cmpsb
xlat
mov
cltd
pop
adc
mov
lahf
mov
mov
add
jecxz
sub
add
shrl
inc
add
dec
lock
mov
mov
les
lea
call
xchg
and
popf
xchg
pop
jbe
lods
clc
push
fldcw
js
outsb
xchg
add
sahf
jo
push
inc
add
ja
jo
xor
int3
pop
adc
mov
out
dec
add
repnz
cmp
add
sub
or
iret
cmp
subl
fiaddl
test
scas
xchg
nop
and
jnp
jno
je
dec
or
push
or
sbb
add
lret
inc
sbb
dec
lcall
inc
sub
sub
cmpb
cli
cmp
xor
je
movsb
jns
out
cmc
dec
sub
lock
lret
jo
adc
xor
or
rorb
adc
adc
mov
push
std
sbb
out
cmp
add
outsl
mov
inc
xor
xchg
int
mov
jmp
push
cwtl
xor
pushl
add
mov
mov
sub
cmp
add
mov
test
push
adc
lret
ds
ret
mov
cmp
xor
add
jge
or
mov
pop
aas
mov
mov
call
jbe
sub
iret
popa
add
and
pop
xchg
and
icebp
mov
sbb
fxch
orl
in
scas
inc
popw
sub
or
fcmove
sub
notb
xchg
push
dec
lock
int3
gs
mov
mov
dec
sub
test
mov
and
das
dec
js
lds
inc
hlt
mov
loop
faddl
cmp
loopne
das
lret
das
arpl
pushl
pop
xor
mov
es
mull
lods
cmp
mov
out
sub
std
jb
sub
in
mov
xchg
ljmp
bound
fldl
test
sub
movsb
scas
insl
dec
dec
push
loopne
sarl
sbb
adc
inc
das
mov
arpl
out
cmp
push
int3
jae
xchg
inc
lret
stos
pop
xor
fadd
shrl
inc
icebp
push
repz
mov
ljmp
dec
cmp
sbbb
dec
or
jae
gs
out
aaa
in
hlt
adc
dec
mov
sbb
mov
pop
add
insl
gs
lds
xchg
inc
jecxz
dec
iret
xchg
lds
jp
mov
add
fistps
addb
pop
jle
mov
sbb
cli
xchg
rclb
aad
clc
test
jp
adc
sbb
and
decl
icebp
sti
test
jle
dec
lods
xor
hlt
ja
fdivrl
inc
pop
rorl
sub
mov
sbb
testl
sti
test
inc
fistpll
sahf
hlt
pop
or
xor
bound
inc
mov
cmpsl
insl
mov
out
sub
aas
mov
jb
insb
jns
xchg
imul
or
nop
fldt
out
scas
xor
mov
inc
mov
xchg
mov
cmp
push
cmp
sub
jp
sti
mov
dec
out
bound
popa
jmp
push
aaa
fadds
ror
sub
insl
jle
fwait
arpl
lahf
or
rorb
and
fadd
push
cmpsl
pop
sti
or
pop
dec
test
mov
mov
stc
sar
pop
das
sbb
shr
es
mov
orl
fdivr
push
rol
out
testb
in
adc
xor
loop
hlt
sbb
xor
outsb
push
out
mov
xor
and
jo
push
daa
out
mov
pop
xchg
pushl
push
fsubs
mull
jns
and
push
ret
or
test
jecxz
pushf
cmp
test
inc
mov
repz
stos
scas
xchg
cmpsl
push
jp
dec
test
inc
ds
into
fstps
xchg
push
outsl
mov
and
mov
add
es
sub
lahf
mov
adc
cmpsb
push
lds
xchg
xchg
aas
cmpsl
aam
es
mov
dec
enter
sbb
imul
icebp
aad
lods
pop
aaa
mov
push
jno
adc
mov
and
jg
mov
mov
fwait
xor
enter
xor
jns
adc
xor
mov
das
mov
add
movsb
int3
inc
push
cli
or
jge
xchg
testl
push
or
push
sbb
jo
outsl
ljmp
mov
pop
push
sbb
sub
sti
xchg
jne
and
xchg
mov
adc
aad
aad
cmp
add
gs
lret
cli
or
popf
jae
mov
mov
loope
sbb
cmp
mov
cld
pop
out
ljmp
xor
mov
push
jbe
dec
ljmp
sar
outsl
and
push
or
pop
jb
call
mov
mov
pop
fs
xchg
inc
inc
push
jbe
cld
aas
mov
and
movsb
lods
sahf
addb
sarb
lcall
pop
pop
dec
movhps
js
add
cmp
dec
shll
rolb
adc
shll
xor
add
or
mov
or
sbb
add
xlat
dec
icebp
loopne
xchg
sub
add
pop
lock
sub
sbb
ret
and
dec
test
jg
mov
ja
popa
mov
aam
call
pop
cwtl
or
fstp
fisubs
jae
xor
inc
insl
ljmp
mov
mov
fstl
add
cmp
mov
fcompl
mov
rolb
mov
xor
nop
mov
sbb
rcll
out
add
mov
fadds
push
mov
jae
stos
in
jge
cmp
and
repz
jmp
aas
sbb
mov
test
sbb
inc
and
cmp
push
std
sbb
ret
xchg
mov
push
inc
lcall
addr16
mov
adc
bound
mov
mov
aad
or
and
push
fisubrl
pop
outsb
outsl
test
into
fadds
aaa
sbb
iret
out
cmp
in
fwait
testb
sbb
mov
cld
lea
in
dec
test
call
mov
mov
adc
cmpsl
adc
sti
fsubl
add
loope
popa
mov
movsl
push
in
popf
ficoms
add
fldt
mov
fwait
cwtl
xor
jns
leave
rcr
cmp
ret
shlb
test
filds
mov
repnz
xor
in
mov
mov
xor
lret
into
repz
xchg
fsubl
fldl
lds
pushf
cmp
dec
out
lret
cmp
out
je
nop
push
aad
mov
loopne
add
cli
push
or
clc
mov
int
jmp
adc
rorb
xchg
prefetch
or
ret
ss
adc
cmp
or
cmp
lea
jg
sbb
bound
jl
lcall
loop
and
iret
xchg
cmp
sahf
insl
jnp
pop
add
dec
xchg
push
lret
sbb
in
dec
lret
sub
mov
pop
ds
gs
mov
cli
push
in
outsb
lret
mov
subl
mov
push
movsb
test
xchg
xor
lods
sub
or
add
les
ret
mov
pop
pop
leave
add
push
popa
arpl
push
jb
nop
cltd
es
mov
or
mov
icebp
sbb
mov
pop
sar
pop
dec
sub
mov
insb
in
xchg
ja
xor
mov
mov
dec
jmp
push
mov
fisttpll
pop
or
jo
jbe
and
andl
fadd
repnz
iret
pop
jns
sbb
loopne
mov
and
push
pushf
shll
xor
mov
cmc
ljmp
lods
je
add
leave
mov
sbb
mov
xor
pop
dec
lret
repz
sbb
sbb
imul
bndstx
in
cmpb
mov
mov
jns
cmp
sbb
enter
test
out
dec
mov
cmp
inc
aad
arpl
sub
clc
inc
hlt
pop
or
fbld
shlb
fwait
push
aaa
js
popw
int
pop
aad
xchg
sti
xchg
and
jo
shlb
frstor
add
in
mov
push
cltd
adc
sub
rorb
pop
push
daa
mov
aaa
aas
mov
push
rcr
or
stc
fistpll
das
retw
out
pusha
fadds
hlt
sahf
out
xchg
ljmp
cwtl
xchg
out
jle
jno
mov
das
jns
clc
adc
fs
mov
fadds
popf
ret
lods
xchg
mov
icebp
mov
dec
mov
insl
mov
cmp
shrl
mov
mov
inc
push
xchg
push
mov
loop
xor
xchg
aas
pop
mov
jg
mov
fnstcw
jecxz
das
leave
mov
xchg
lret
and
les
push
iret
pop
cmp
adc
repz
pop
jo
inc
int
cmc
xor
xchg
inc
mov
push
mov
add
mov
cli
sub
fsubs
jae
shlb
xor
jle
pop
out
pop
mov
cld
ret
adc
jo
pop
notb
fucomi
inc
or
xor
out
add
mov
xor
arpl
movsb
sub
or
push
mov
int3
jl
pusha
inc
fnstenv
lods
mov
lods
cmpsb
and
fadd
aas
loopne
roll
mov
out
and
cld
lock
stos
lods
sahf
jbe
in
jno
leave
inc
or
add
stc
loopne
mov
inc
in
das
and
data16
xchg
jg
cs
stos
push
adcl
push
mov
and
gs
sub
fdivrl
push
sub
mov
insl
mov
rcr
ljmp
mov
cmp
xor
lret
jns
dec
stc
fs
cmp
mov
fucomi
inc
push
inc
pusha
int
jle
daa
adc
sub
insl
mov
imul
movsb
cmpsb
hlt
ss
lcall
lds
push
stc
xor
adc
std
iret
push
xchg
sub
iret
lds
push
mov
lock
adc
out
insl
mov
scas
sbb
add
scas
push
cmp
adc
add
scas
rolb
sub
xchg
and
jmp
in
push
neg
leave
sbb
pushf
mov
jmp
leave
inc
in
jno
dec
xchg
pop
outsb
dec
movsb
inc
fst
imul
ds
jmp
cmc
outsb
fildl
sub
mov
cmpsl
push
test
js
pop
test
xchg
ja
sbb
adc
sbb
test
pop
hlt
jns
addl
jne
lcall
add
add
stc
inc
mov
fwait
sub
jge
push
loope
jns
lahf
out
xchg
dec
pop
adc
fstl
icebp
or
and
fs
dec
fistl
cld
add
jno
loopne
add
dec
negl
daa
inc
inc
lods
fucomi
or
adc
sahf
loop
fcompl
ja
daa
into
xor
loopne
cld
leave
xor
sub
in
sbb
inc
sub
adc
jmp
ret
js
and
push
or
or
xchg
xchg
int
and
jge
push
into
test
insl
dec
cwtl
adc
adc
fcmovnb
dec
stos
or
fdivl
xchg
sub
xor
push
adc
movsl
clc
mov
pop
imul
mov
cli
mov
fnstenv
xchg
lds
push
cld
jg
adc
add
jae
popf
loope
imul
inc
or
aaa
lret
adc
or
pop
sbb
push
js
repnz
jge
jg
sub
sbb
repz
and
xchg
stos
jne
rcrb
cwtl
aam
add
andl
fstpt
enter
test
repnz
inc
push
sarl
xor
mov
dec
insb
outsl
jb
mov
inc
aaa
loopne
or
xor
je
out
jge
mov
sarb
loopne
sbb
sub
mov
dec
mov
sahf
push
push
mov
sbb
jmp
popf
push
mov
xchg
jecxz
repnz
jecxz
jb
repz
jecxz
pop
iret
sbb
adc
addr16
pop
rorl
cwtl
fbstp
rol
jae
push
cmp
push
pop
outsb
ror
xor
icebp
mov
jo
ljmp
xchg
dec
sbb
lret
repnz
dec
mov
mov
mov
fs
inc
xor
xchg
dec
sbb
xchg
xchg
or
inc
pop
cmp
push
cmp
lcall
shlb
sub
frstor
loopne
push
outsl
pushf
add
jp
clc
addl
loope
loop
jp
mov
xchg
xchg
inc
sub
pop
in
outsl
sub
add
add
jae
mov
popf
mov
mov
mov
ds
hlt
lret
daa
push
aas
test
in
inc
jmp
daa
xchg
movsb
mov
or
aaa
jge
inc
jecxz
scas
mov
add
inc
mov
pusha
sbb
ret
leave
xor
and
mov
popa
jbe
mov
bound
cmpsb
xor
lea
icebp
mov
popa
inc
jo
sbb
push
rcrl
ljmp
pop
lret
pushf
xchg
int3
adc
xchg
sahf
push
fiaddl
pop
mov
popl
inc
and
aas
push
stc
mov
xor
fs
imul
jnp
sbb
jg
adc
loope
add
cmp
xor
add
add
hlt
cmp
xor
inc
sub
in
adc
mov
sub
mov
xor
fnstcw
orl
mov
out
sbb
call
sub
cltd
sbb
test
or
jno
pop
sbb
hlt
mov
jecxz
mov
movsl
jo
lods
fidivrl
fisubrs
mov
outsb
inc
scas
mov
and
lock
jmp
add
pop
repz
add
into
xor
test
sbb
arpl
mov
push
jecxz
mov
xchg
and
popf
push
mov
pop
mov
add
jp
push
mov
js
in
sahf
out
mov
repz
xchg
xchg
fldl
shll
repz
push
pop
push
jmp
movsb
sub
cmp
xor
inc
jge
imul
es
rcrl
push
mov
inc
rorb
out
gs
mov
jge
ja
mov
hlt
cmp
mov
shlb
imul
inc
mov
repnz
jo
mov
inc
add
cmpxchg
push
inc
jmp
push
xchg
jle
dec
mov
xor
les
repz
stos
add
adc
add
xor
aad
sarb
in
sbb
and
popa
sbb
lahf
les
sub
inc
aaa
jno
shl
and
clc
xchg
inc
mov
fstps
popf
popf
arpl
inc
pop
pop
sub
aaa
insb
mov
out
sbb
cmp
mov
int
test
xchg
std
and
cld
adc
imul
enter
sti
pushf
aad
mov
mov
jge
pop
push
xchg
add
scas
test
cmp
add
and
sbb
je
cmpsl
lea
sbb
xor
fsubrl
cmp
sbb
aaa
mov
xor
aam
adc
in
cmp
setae
lahf
sbb
leave
sub
mov
dec
jo
daa
and
adc
mov
adc
aam
loope
or
arpl
gs
add
lcall
push
cmpsl
jo
xor
ds
scas
ret
aas
in
adc
pusha
sbb
sti
sub
imul
call
pop
mov
insb
cld
mov
cltd
repz
leave
je
mov
and
push
push
cmp
xor
ja
xchg
jo
mov
add
testl
aas
mov
xor
scas
sub
jle
pop
stc
das
dec
inc
cld
mov
push
imul
out
sub
scas
jmp
jno
jg
pop
insl
cmp
jge
mov
enter
pop
xor
push
cmp
ljmp
popf
cld
movsb
call
jno
test
push
data16
js
pop
imul
test
sbb
aaa
in
movsb
in
sbb
lods
dec
adc
jno
and
cld
xchg
shrl
xor
addb
loop
cmp
xor
pop
dec
inc
insl
clc
popa
and
out
cmp
popa
fstpl
or
leave
mov
push
in
jno
jg
lods
fnstsw
or
daa
mov
inc
mov
test
imul
mov
cs
pop
aad
pop
loope
cmp
test
lret
push
lds
aaa
jb
subb
pop
out
ror
pop
test
aaa
dec
push
sub
adc
or
add
push
jg
xchg
jge
jle
mov
insl
push
stos
insw
jbe
push
daa
mov
loope
mov
inc
or
std
sub
mov
xor
das
mov
sahf
popf
loop
pop
cltd
pushf
xchg
aaa
pop
divb
and
sbbb
mov
insl
test
jnp
movsb
jecxz
mov
loop
inc
jg
mov
shrl
cld
cmpsl
jmp
outsl
repz
sub
adc
push
jle
jno
jmp
pop
cmp
pop
vpminsw
enter
or
hlt
sub
ret
cmp
fwait
and
cmpsl
add
fsubrp
mov
mov
jmp
int
insb
xchg
jo
dec
xchg
mov
inc
xchg
adc
into
daa
pop
movsl
inc
rolb
shll
fdivr
dec
aad
add
xchg
lret
xchg
mov
mov
std
inc
lea
and
insb
popa
cmpsb
lahf
push
sbb
pop
dec
jns
sbb
xchg
test
xor
cwtl
sbb
out
push
arpl
jno
test
push
shl
push
jae
arpl
jle
lds
mov
lods
sub
dec
arpl
rolb
enter
dec
xor
cmp
fcomi
je
ja
je
adc
cmpb
lcall
mov
pop
jle
xchg
dec
test
sahf
mov
push
inc
lcall
movsb
clc
mov
repnz
negl
sti
aad
push
aam
inc
add
lods
ret
jns
add
xchg
das
fwait
mov
dec
rcrl
aas
xchg
xchg
int
xchg
arpl
xor
pop
aad
rorb
out
mov
push
push
sbb
pop
cld
gs
iret
ss
ret
pop
call
mov
mov
call
stos
xchg
test
lret
into
push
call
and
call
pop
repnz
pop
xchg
mov
neg
mov
sahf
aad
shll
bound
mov
test
cmpsl
jns
mov
clc
sbb
dec
pop
inc
nop
in
cmp
lods
and
jb
cmp
fs
clc
jo
stc
sub
sbb
ds
cmp
dec
nop
add
push
and
addr16
and
lock
jg
lods
dec
iret
dec
dec
add
dec
call
sub
mov
jmp
test
movsl
xchg
jne
cmp
cmpsb
or
xor
dec
mov
push
pop
daa
mov
jg
push
pop
mov
jne
gs
add
int
push
xorl
or
outsl
out
xchg
and
adc
adc
shrl
test
add
push
mov
mov
imul
int
pop
pushf
jg
or
xor
cs
or
and
inc
loopne
mov
repz
in
fdiv
lods
je
and
shll
repz
stos
psubw
mov
mov
arpl
scas
lret
xchg
pop
mov
push
xchg
fsts
cmp
aad
in
jb
xor
aam
jo
adc
pop
ret
add
insl
or
pop
mov
add
and
lcall
lahf
jnp
mov
rclb
daa
cmp
mov
inc
imul
outsb
xorb
add
xor
jnp
scas
es
sbb
pop
mov
int
lock
test
mov
out
ficomps
pop
sahf
dec
into
inc
sbb
mov
call
enter
enter
test
mov
cli
pop
cmp
dec
add
orb
pop
shll
in
loopne
mov
inc
pop
xor
out
repz
pop
adc
xlat
mov
push
outsb
aad
push
test
lock
xor
cltd
loope
int3
or
pop
inc
daa
out
sub
addr16
adc
fsubrl
movsl
pushf
mov
rclb
mov
nop
pusha
xchg
xchg
xor
repnz
roll
mov
mov
aad
mov
jo
pop
sti
xchg
das
push
pop
pop
in
sbb
into
mov
mov
test
jne
lods
outsb
sub
arpl
ja
jp
xchg
sbb
mov
cli
and
inc
cmp
sarb
sti
dec
enter
insl
jno
scas
into
mov
mov
xchg
xor
arpl
mov
mov
pop
aaa
push
adc
pop
mov
fnstsw
xchg
mov
inc
in
jnp
or
sbb
lcall
mov
add
pusha
lods
lcall
add
xor
call
pop
lret
sahf
dec
test
push
push
cld
sbb
push
fdivrp
push
inc
add
dec
add
int
stos
mov
mov
sbb
sbb
and
movsl
repz
jo
dec
es
mov
iret
ficoml
in
insb
dec
aad
lods
cmp
pop
cwtl
push
and
mov
jecxz
cli
pop
xor
stos
mov
fistl
inc
repnz
xchg
dec
add
call
inc
std
pop
ficoms
push
xchg
pop
loope
pop
mov
icebp
mov
outsl
test
xchg
jb
out
xchg
aad
es
stc
mov
and
xchg
in
cmc
stos
fwait
arpl
stos
in
and
mov
es
fiaddl
frstor
and
adc
pminub
and
in
mov
dec
lcall
push
jne,pt
loope
cmp
jnp
inc
inc
xchg
and
lcall
push
jnp
ret
and
push
arpl
inc
xor
lret
pushf
lahf
js
push
cmp
adcl
cmp
sub
add
mov
dec
jbe
daa
sub
scas
dec
xchg
dec
push
sahf
or
loope
adc
jbe
adc
pop
jle
lret
lcall
jmp
mov
mov
mov
jnp
movsl
dec
scas
jp
xor
push
and
sahf
jmp
mov
lcall
mov
xor
jo
adc
sbb
or
outsb
dec
cs
xor
jle
cmc
sahf
out
sbb
gs
pop
sahf
push
xchg
fwait
sbb
icebp
aas
inc
xor
add
jecxz
jno
sbb
call
insl
mov
mov
push
jge
push
js
outsb
sub
loop
jge
jmp
sbb
mov
mov
jnp
add
fisubrl
icebp
push
pop
xchg
ret
sub
popa
and
sub
lret
mov
stos
add
sti
add
mov
xchg
loope
push
outsb
subl
movl
push
stc
addr16
or
stos
jl
mov
ret
xchg
pop
cmp
test
sbb
adc
jle
stc
rorl
add
jae
and
adcb
es
popa
dec
pop
into
std
sbb
mov
std
fwait
and
fisubl
and
das
loop
xor
call
xor
push
pop
xor
je
jb
cmp
mov
cwtl
out
xlat
push
push
pop
pop
jns
mov
out
and
std
lret
loopne
cmp
imul
test
imul
xor
jbe
mov
cwtl
jae
outsb
inc
jge
or
popl
mov
xor
dec
sarb
sahf
popf
sub
aad
mov
pop
cmpsl
push
lahf
xchg
jns
or
enter
in
adc
test
or
cmp
xchg
jns
mov
es
xor
iret
or
ja
mov
sbb
stos
ss
movsl
sub
outsl
repz
xchg
push
fnstcw
popa
int
test
stos
mov
xor
fisubl
std
rolb
mov
dec
push
sbb
call
pop
shl
mov
icebp
punpckhdq
icebp
insb
cmp
pop
pop
mov
fdivrl
inc
scas
subb
fildll
jns
dec
mov
pop
push
lods
sbb
aaa
repnz
movl
push
sarl
inc
fstl
mov
int3
inc
fsts
jne
les
outsb
or
or
div
clc
out
je
xchg
dec
adcb
mov
fmulp
dec
or
dec
loope
loopne
inc
dec
mov
xchg
pop
add
jge
and
add
pop
ret
jb
dec
jbe
lods
xchg
int
xchg
jp
out
mov
jg
inc
cmpsl
mov
inc
jge
pushf
sub
inc
stos
daa
inc
cmp
sub
sub
je
es
cmp
leave
lea
rcrl
dec
sbb
pop
cmpsl
cmp
inc
bnd
lahf
jmp
push
mov
cs
add
and
stc
insb
add
push
fcmovnb
pop
gs
mov
jge
push
inc
pop
mov
into
orb
out
scas
xor
stc
xor
notb
cmp
imul
mov
cmp
mov
daa
popf
or
lret
mov
mov
mov
stos
mov
jb
outsl
jo
or
sahf
xor
fistpll
cmpsl
and
cltd
inc
cmp
fwait
insl
or
inc
int
push
dec
mov
mov
xchg
pop
hlt
push
push
pop
xchg
sbb
push
shlb
sub
xchg
mov
and
das
popa
inc
push
ret
fiaddl
cmc
fisubs
pop
aaa
mov
stc
mov
fldl
xchg
push
and
imul
pop
lea
mov
jmp
rcrl
mov
ret
jmp
adcl
test
xor
pop
mov
inc
push
jne
int3
dec
test
das
enter
fwait
ljmp
scas
loop
popf
inc
mov
sarb
popf
ljmp
popf
insb
sbb
pop
js
jecxz
lahf
out
sbb
adc
mov
push
jnp
pop
xlat
and
inc
dec
repz
aam
fs
sbb
cmpsb
ss
fistpl
icebp
adc
pop
roll
and
icebp
pusha
cmp
int3
or
jb
pop
mull
out
outsl
mov
mov
xor
nop
lret
movd
jns
iret
pop
pop
inc
jecxz
push
lret
sbb
adc
fsts
lods
mov
pop
in
push
xor
or
in
lahf
push
lret
jnp
sub
push
and
ret
test
scas
xchg
push
inc
rorb
adcl
loopne
lea
xchg
xchg
mov
mov
sbb
aad
daa
mov
call
test
mov
jl
and
aad
frstor
and
lds
mov
std
fstps
jne
mov
cmc
adc
mov
les
or
dec
push
xor
aaa
stos
or
rclb
xchg
shlb
jns
or
lods
ret
xchg
push
inc
das
dec
sbb
sbb
dec
push
mov
mov
inc
out
movsl
push
push
cmp
jbe
lgdtl
dec
test
movsl
xchg
adc
mov
push
jo
sahf
mov
in
addr16
mov
cli
repz
int
jge
xor
ret
pushw
sub
dec
cwtl
push
stc
mov
js
add
out
dec
cmp
mov
pop
jge
jg
and
or
loop
dec
mov
sbb
adc
inc
ficoms
dec
inc
jmp
and
adc
and
test
push
repnz
fidivs
shrb
sbb
push
ret
cmp
es
push
dec
into
and
lock
and
stos
and
mov
mov
and
or
push
sub
pop
mov
rorb
out
fmull
std
fwait
mov
lock
subl
and
pop
rolb
mov
pop
sbb
call
mov
lret
cmc
mov
int3
out
shll
sub
xor
sbb
int3
out
sub
xor
add
mov
subps
je
cmp
dec
inc
xor
aas
pop
push
jmp
adc
dec
mov
fldenv
test
popf
dec
in
or
and
test
sub
inc
insb
sbb
repz
inc
mov
mov
arpl
add
mov
and
xor
shrb
scas
or
pop
dec
sbb
jbe
push
lds
sub
int
stos
push
xor
aam
pop
xor
xor
notl
divl
testl
mov
movsl
jo
cld
sub
mov
adc
fdivs
outsl
mov
jns
mov
pop
movb
or
or
sbb
push
xchg
jmp
push
cwtl
xlat
xchg
mov
test
adcl
int
inc
pop
fs
xchg
push
xchg
insb
loop
mov
jle
inc
bound
xchg
xchg
mov
xor
inc
sbb
push
jae
mov
lock
or
mov
repnz
push
sar
test
stos
cwtl
sahf
or
and
and
leave
dec
mov
or
mov
add
inc
pop
pop
mov
aad
push
aam
mov
scas
add
shl
sbb
fwait
outsb
js
jge
mov
xchg
div
jne
fistl
lahf
ja
int
cs
lods
dec
sub
xor
enter
hlt
das
testb
sti
lods
cmp
sub
addr16
getsec
out
push
xchg
dec
cwtl
or
add
stos
jne
jnp
imul
sbb
adc
inc
lock
push
sar
push
sub
inc
pushf
push
and
jb
xchg
and
sti
out
and
dec
xchg
and
push
addr16
cmp
push
ffreep
and
icebp
icebp
push
dec
repnz
rcr
addl
scas
jb
inc
stos
add
mov
add
jecxz
sbb
push
repnz
sbb
popf
fs
cltd
inc
lea
dec
gs
xor
mov
out
fwait
aad
mov
fldenv
int3
and
inc
jb
dec
mov
cmpsb
jne
mov
out
mov
dec
dec
repz
sub
incb
std
rcrb
or
add
mov
add
sbb
movsb
mov
pop
adc
idiv
xor
sbb
xchg
xlat
cmp
and
xchg
fs
and
sahf
add
clc
cmp
xchg
push
cs
mov
clc
sahf
xor
or
cmp
pop
jecxz
aad
je
call
cmc
xchg
movsl
jnp
adc
lcall
sub
adc
xchg
sbb
inc
jbe
call
gs
stos
mov
fnstenv
jne
iret
xlat
cmpsl
lret
je
arpl
xchg
jo
mov
mov
add
and
cmp
test
adc
test
pop
dec
je
sbb
mov
call
cmpsl
rcl
pop
dec
pusha
into
ja
outsb
rcrb
jae
mov
insb
shlb
into
adc
cmpl
enter
and
jge
mov
sbb
outsl
jae
inc
inc
sub
out
shl
insb
sbb
lahf
stos
lds
push
adcb
pop
sub
or
mov
add
fisttpl
mov
and
pushl
pop
xor
mov
and
mov
xor
pushf
jle
push
xor
lock
jp
fcmove
or
in
sbb
lds
loope
mov
cmp
cli
mov
lds
push
loopne
jne
addr16
fcmovnbe
rcll
pushf
mov
lods
iret
pop
mov
movl
or
in
fs
mov
aad
inc
xchg
cwtl
ds
adc
xchg
test
loope
jae
lea
xor
mov
repz
cwtl
loopne
fnstsw
loopne
mov
stc
mov
mov
pop
fdivl
clc
out
and
hlt
and
sbb
xchg
and
sbb
cwtl
jo
mov
xchg
pushf
lret
pop
lcall
push
dec
aas
fimuls
pop
sbb
test
insl
sbb
sbb
xchg
sbb
fcmovnu
jmp
pop
iret
daa
ds
lock
add
ljmp
cmp
pop
out
cs
inc
sbb
test
mov
adc
push
mov
jne
and
dec
lods
xchg
std
jecxz
lock
in
push
jle
dec
fdivp
and
lds
inc
push
stc
jne
push
pop
in
sbbb
mov
pushf
cmpsl
ja
push
and
push
xchg
data16
adcb
xchg
rcl
push
imul
outsb
stos
xor
cmp
add
and
mov
xchg
pop
hlt
jle
mov
push
sbb
pusha
popa
xlat
popf
mov
add
into
pop
dec
icebp
test
push
push
pop
inc
push
jg
loope
icebp
roll
mov
xchg
lahf
in
jne
loopne
mov
in
mov
inc
sbb
dec
cli
les
xchg
mov
xor
aam
inc
addr16
mov
inc
fs
pushf
lock
mov
xor
cmp
sub
cmc
cmpsb
out
pop
mov
jo
jecxz
mov
negb
fmuls
inc
fstps
mov
repz
pop
lret
mov
lcall
jle
push
inc
xchg
mov
cmc
fmuls
dec
neg
lds
cmp
sbb
add
sub
cmp
xchg
mov
add
jle
sti
in
test
xlat
scas
adc
mov
dec
cs
mov
inc
call
gs
cmpsb
rcl
dec
popf
push
nop
xor
and
dec
jo
out
pusha
in
daa
xchg
add
andb
mov
dec
jno
fwait
dec
jo
push
jo
pop
inc
lcall
je
fwait
stos
jg
mov
sbb
gs
mov
imul
or
pop
insb
sub
test
sbb
push
scas
cwtl
roll
inc
out
movsb
call
stos
push
cmp
sbb
ffree
and
push
mov
sub
xor
or
jge
jae
inc
dec
cmpsb
movsb
mov
mov
inc
es
push
fnstcw
cmp
adc
jno
adc
imul
jne
push
daa
lcall
sbb
jge
or
dec
dec
xor
out
enter
mov
or
rorl
subb
mov
sbb
ja
roll
and
sub
push
cwtl
inc
xchg
dec
adc
push
je
xor
xor
lahf
add
sub
in
mov
cmp
mov
xor
xchg
aas
jp
cmc
lea
xor
pop
scas
jmp
shr
test
jns
mov
pop
repz
push
outsl
xchg
sahf
sti
and
lret
popf
cli
dec
pushf
pop
dec
ds
xchg
cmp
pop
lock
repnz
repz
and
push
scas
or
leave
lret
outsb
mov
push
jb
mov
fistl
je
icebp
cmp
mov
cltd
mov
adc
xor
pop
ficoml
mov
xor
lret
inc
push
in
rorb
jmp
das
rcrl
es
ljmp
jl
hlt
adc
xor
inc
or
sbb
cmp
jns
jb
xchg
pop
adc
push
pushf
adc
sub
mov
test
push
fadd
push
add
lods
int
nop
pop
xchg
cmp
mov
ss
into
cmpsb
in
push
cli
xchg
push
popf
ds
add
dec
pop
cmp
leave
mov
sbb
push
pop
sbb
bndldx
mov
adcl
lret
add
add
repnz
and
pushf
loope
or
push
pop
out
or
or
add
orl
dec
cmp
mov
push
jno
push
andb
mov
fdiv
sbb
fadds
mov
lea
test
xlat
adc
and
push
in
xchg
xchg
jne
aaa
or
sbb
popa
jbe
push
adc
sub
jo
outsl
subb
insb
pop
ret
push
push
das
dec
shr
cs
cmpsl
test
adc
jle
popf
scas
clc
lock
xor
in
out
mov
jns
pushf
and
push
xchg
loop
in
xchg
inc
cs
push
add
adc
lods
push
out
aaa
xor
adcl
mov
push
xor
or
sub
int3
lcall
test
data16
sti
insb
test
sbb
sbb
dec
js
push
xor
xchg
or
cmpl
mov
out
jno
or
test
mov
pop
out
pop
push
dec
in
shrl
and
fldenv
cmp
or
add
xchg
jns
adc
pop
aaa
push
enter
and
data16
test
mov
pop
jnp
cs
xor
addb
mov
inc
cmpsl
cmp
or
xchg
push
or
inc
cmp
jno
xchg
push
in
clc
cld
dec
aas
scas
enter
mov
outsb
fstpt
pop
lods
imul
jge
mov
cmp
loop
add
sub
into
mov
arpl
mov
xor
xorb
jecxz
mov
jb
hlt
cld
push
pop
inc
rcl
inc
enter
jge
arpl
lea
lock
bound
adc
popa
mov
ja
push
lahf
push
sbb
xchg
je
lods
cmpsl
pop
shll
mov
icebp
push
pop
sbb
lods
mov
scas
mov
add
mov
imul
adc
xor
push
movsb
push
fcmovbe
lods
mov
inc
mov
pushf
popa
das
pop
fwait
out
mov
adc
shll
inc
icebp
sbbb
jbe
add
mov
push
jb
jp
mov
mov
inc
out
push
icebp
adc
aas
cs
mov
leave
push
cmp
mov
loop
jp
fnstenv
lahf
pop
sbb
aas
cmc
in
test
mov
inc
mov
enter
mov
adcb
jg
dec
orb
xlat
pop
rcl
or
iret
adc
fwait
imulb
pop
mov
adcb
jno
fs
lea
int3
jecxz
adc
in
inc
pop
and
popf
in
fldl
fwait
sarl
and
or
pop
sub
mov
aas
xor
jg
xchg
lods
ljmp
push
adc
scas
fldl
push
lret
sbb
push
inc
add
in
inc
adcb
xchg
sub
cmp
test
push
mov
scas
imul
adc
aas
call
jno
xchg
xor
sbb
divb
inc
nop
lret
popa
adc
cmpsb
adc
jmp
cmpsl
repz
cs
adc
inc
adc
jle
clc
push
xor
sub
jbe
sarb
mov
jne
dec
fs
stc
insl
mov
sbb
pop
jbe
push
push
mov
push
jmp
push
xor
int
sbb
xchg
test
std
std
push
and
rcrb
sbb
pop
in
jmp
sub
jecxz
xor
push
pop
pop
negb
mov
popa
insl
dec
in
and
mov
add
adc
ss
pop
fidivrl
sbb
push
dec
mov
mov
in
dec
fsubr
pusha
cld
or
imul
xchg
imul
jecxz
sbb
or
mov
mov
adc
jns
stos
pop
std
nop
push
pop
rorl
adc
movsl
inc
loope
pop
sbb
xchg
push
or
scas
loopne
out
test
aas
pop
je
je
adc
movsl
cmp
and
fcmovnb
test
pop
xlat
cltd
push
dec
and
mov
jns
sub
fistps
cmp
jmp
mov
jg
test
jnp
jp
add
push
lahf
loope
or
sbb
divb
int3
adc
pushf
lahf
int
sarb
les
fistpll
aad
sub
scas
out
dec
lods
mov
or
fdivr
cs
stos
or
outsb
jns
fs
clc
xor
mov
cmp
add
pop
les
scas
fsts
add
mov
bound
xor
sbb
cmpsb
mov
imul
push
fs
pop
call
jmp
loopne
std
out
repz
shl
hlt
repz
xlat
xchg
loop
pop
mov
dec
xchg
mov
jnp
jns
or
mov
lods
and
adc
xchg
leave
popa
sbb
lret
sub
cmp
out
dec
incl
push
and
cmc
enter
arpl
loopne
mov
and
add
out
imul
lock
push
xchg
daa
xlat
iret
sub
mov
ljmp
mov
push
add
lahf
inc
push
push
mov
cli
sbb
cwtl
fisttpl
loope
ret
fsubrs
adc
mov
pop
or
xor
lods
xchg
xor
ret
dec
jne
gs
cld
cs
push
pop
loope
xor
ficoml
icebp
dec
psubd
pop
clc
lds
or
push
andb
incb
out
jnp
inc
mov
testb
imul
xor
jmp
ss
xchg
test
loop
dec
mov
mov
or
mov
scas
mov
mov
xchg
lods
push
fldt
cs
xchg
sub
pushf
push
loop
call
jmp
int3
adc
sub
js
subl
cli
fmuls
mov
sbb
cwtl
jbe
push
lret
arpl
pop
jbe
push
out
pop
jnp
out
dec
lret
lock
test
or
out
repnz
jge
pop
lea
jp
sub
adcb
adc
mov
inc
fldcw
ficoms
ja
adc
stos
mov
imul
stc
cmp
or
cwtl
inc
js
enter
mov
ja
lock
xchg
mov
or
push
push
pop
dec
shrl
jge
es
mov
jmp
das
xchg
mov
imul
repnz
inc
scas
sub
aas
mov
fcmovbe
les
mul
sbb
and
xor
mov
mov
xor
xchg
cmp
lods
call
jnp
mov
or
xchg
xchg
xor
mov
push
add
mov
pop
test
fidivrs
push
push
pushf
push
sub
addr16
cmp
scas
inc
jecxz
addl
add
jb
mov
loope
push
mov
jmp
xor
sub
decb
ret
xchg
xchg
mov
jne
aam
les
or
das
adcl
add
addr16
or
ljmp
add
pop
sub
sub
mov
lea
shrb
mov
imul
stc
fidivrs
pop
in
sbb
xchg
loope
out
pop
and
mov
ficoms
pop
push
jo
hlt
xchg
aad
sub
jbe
mov
movsb
mov
pop
pop
into
or
leave
pop
lods
xor
addr16
aad
adc
cld
jo
cmpsl
jg
mov
push
lret
push
das
cmp
test
xchg
hlt
arpl
in
loop
push
scas
mov
and
pop
hlt
insl
adc
sub
and
ljmp
enter
popa
jecxz
jne
lds
dec
dec
pushf
mov
into
sub
orb
flds
dec
jnp
pusha
inc
nop
fcom
add
sbb
xor
xor
sbb
lods
sti
bound
in
ljmp
inc
pop
sbb
inc
push
mov
mov
repnz
or
sub
jle
sbb
push
pushf
in
and
inc
lea
nop
fistps
push
sub
call
scas
mov
and
and
shll
pushf
lock
nopl
push
jo
dec
lods
add
and
mov
jnp
loope
popf
dec
adc
hlt
pop
xchg
sbbb
js
mov
mov
push
jne
iret
into
cmpsb
push
adc
mov
and
mov
mov
xchg
js
and
cmp
int3
xor
add
je
cmp
cmp
xor
hlt
and
inc
out
push
je
and
xchg
push
fdivr
xchg
pop
xchg
cwtl
or
in
mov
push
jle
adc
mov
push
sub
into
push
add
mov
int3
mov
mov
testb
add
sbb
mov
pop
pop
xchg
mov
push
push
push
cwtl
sub
aas
leave
jb
scas
jl
xor
mov
fwait
mov
sub
subb
mov
cmp
or
jno
cmp
mov
lahf
sahf
arpl
mov
loop
cmc
dec
das
mov
gs
mov
in
adc
mov
aam
lods
dec
pop
add
outsw
iret
fs
or
test
mov
div
mov
sub
repz
leave
jg
rcll
test
mov
push
push
pop
call
ja
inc
add
or
scas
mov
cmp
test
out
mov
mov
push
mov
popf
inc
sub
in
out
pop
pop
lahf
mov
shll
xchg
mov
and
cltd
iret
mov
xor
orb
cltd
lods
pop
or
sub
andb
nop
scas
out
mov
fisubl
iret
dec
test
cmpsb
pop
lret
loopne
aam
push
sbb
xchg
repnz
popf
fcom
psrld
int
push
rcrl
pusha
loop
data16
sbb
lret
hlt
jb
dec
push
ds
push
aam
pop
mov
mov
pop
ret
push
into
mov
jo
xchg
jmp
mov
in
xor
mov
push
xlat
cmp
imul
mov
add
or
movsb
stos
orb
or
or
lods
dec
fimull
inc
xchg
std
jmp
testb
or
rcrl
ret
xor
push
push
push
cmp
pop
push
or
adc
out
sbb
mov
pop
and
scas
iret
xor
lahf
cmpsl
mov
pop
xor
add
xchg
sbb
je
insl
into
mov
imul
xlat
inc
jbe
insl
xor
out
dec
mov
push
mov
xchg
addr16
fcoms
stc
movsl
loopne,pn
cld
cld
mov
lcall
hlt
cmpsb
adc
inc
or
stos
loope
lahf
stos
idivb
inc
pop
push
jbe
xchg
and
out
dec
mov
fcompl
imull
fs
repnz
in
or
adcb
mov
lock
ja
ss
mov
push
mov
fidivrl
das
jg
mov
adc
dec
je
rol
or
icebp
fwait
test
stos
mov
cli
je
mov
inc
or
and
add
adc
jae
aas
sbb
and
imul
fs
xchg
mov
dec
fs
fldt
or
leave
in
stos
xchg
and
inc
divb
sub
stc
movsl
pusha
and
fcomps
testl
cs
add
pop
stos
ds
dec
gs
xor
inc
cmp
insl
scas
mov
jnp
aaa
sub
jmp
ljmp
ljmp
push
xchg
jp
xchg
adc
icebp
and
cld
mov
inc
stos
into
jb
pop
add
mov
ret
jns,pn
mov
sti
add
insl
out
mov
int
add
lahf
pop
push
mov
mov
push
xor
lds
jne
into
mull
f2xm1
movsl
and
or
mov
pop
rorl
clc
test
lret
scas
push
xchg
aas
in
jmp
cmpb
scas
in
scas
xchg
ret
addr16
enter
push
aam
mov
mov
cmp
mov
sti
addr16
or
sbb
or
push
mov
out
fldl
fisubs
test
add
scas
scas
xchg
and
popa
std
scas
jmp
mull
cmp
push
loopne
jae
in
popa
dec
cwtl
mov
inc
fnstcw
or
andl
add
jne
sbb
mov
in
popa
inc
popf
mov
push
frstor
jne
xchg
jp
aas
out
sbb
gs
sub
mov
int3
pop
stc
lds
and
imul
sbbl
cmp
enter
jp
lock
shl
push
idivb
int
push
jbe
jmp
arpl
push
mov
mov
mov
inc
loope
mov
or
mov
dec
jl
push
int3
push
mov
or
outsb
jno
arpl
cli
xor
mov
or
pop
xor
ds
jnp
incb
mov
loopne
es
pusha
stos
cmp
and
add
mov
xchg
mov
adc
sti
cltd
xchg
inc
int
cmp
adc
jl
clc
sub
inc
push
dec
clc
je
inc
sbb
leave
cltd
xchg
fadds
inc
imul
clc
addl
sti
out
mov
outsl
mov
hlt
cld
inc
xchg
mov
shll
push
out
adc
push
cmpsl
jns
mov
mov
addl
jns
push
rclb
sub
movsl
ret
inc
sub
xchg
pop
push
or
insl
mov
stos
jp
push
sbb
jmp
repnz
add
jmp
sbb
clc
jne
loop
xchg
sbb
aaa
lods
push
popf
mov
insl
sub
fisttpll
cli
loopne
ret
cmp
and
mov
and
jmp
pop
mov
ficoml
xchg
lea
mov
sbbl
aam
lahf
leave
xor
gs
or
lret
fninit
pop
popf
xchg
ljmp
movsb
int3
mov
mov
fwait
popa
sarl
and
orb
mov
cmp
sub
fcoms
dec
mov
pop
repnz
inc
dec
andb
mov
pop
jl
out
sbb
inc
dec
jnp
insb
loopne
shrb
push
push
rolb
pop
scas
cmp
lods
rcr
sbb
icebp
xlat
dec
sbb
adc
repz
out
mov
popf
lcall
or
xchg
data16
and
xchg
jecxz
popa
mov
inc
je
out
pop
repz
mov
imull
cmp
aaa
dec
cmp
stos
test
leave
mov
js
mov
repz
les
dec
loop
pop
pop
mov
pop
or
mov
or
mov
ljmp
mov
roll
stos
jnp
sbb
push
mov
dec
shlb
xchg
lock
inc
dec
int3
push
out
pop
mov
lods
and
xchg
sub
mov
mov
insb
int3
cld
cwtl
out
sbb
mov
aad
pop
push
das
cs
sub
idivl
scas
ret
repnz
and
pop
pop
add
sub
mov
and
shll
lret
or
and
rorl
mov
mov
sbb
enter
push
ds
mov
cmpsl
in
xor
jl
andb
sub
movsb
sbb
dec
mov
fwait
jge
aas
clc
shll
cmp
aad
inc
mov
jne
idiv
ret
shlb
jg
shrl
mov
inc
out
and
cmpsb
cwtl
pop
lret
cmp
cld
cwtl
and
shrb
lcall
xchg
nopl
cmpsl
push
xor
fucomp
lret
xchg
cwtl
outsl
pusha
dec
sub
out
jbe
inc
imul
sahf
fimuls
jge
std
dec
fsubrl
sti
mov
xchg
js
lds
arpl
mov
mov
push
pop
pop
fstpl
shll
hlt
inc
sbb
jnp
push
ja
mov
inc
cmc
dec
adc
aam
in
and
mov
shlb
xorl
in
out
repz
sbb
lods
push
clc
lods
sti
sbb
sahf
mov
push
fsubrl
dec
fst
insl
leave
dec
jo
loope
popa
cli
andl
xchg
jae
orb
out
outsb
xchg
mov
adc
pusha
dec
pop
fwait
addl
xchg
dec
fcmovnu
pop
pop
cmp
mov
jl
mov
jecxz
inc
lds
inc
sahf
sahf
setbe
mov
dec
xor
outsb
outsl
stos
cmp
and
es
jb
sar
insl
mov
cld
or
add
mov
aad
scas
or
repnz
jo
mov
add
push
lea
mov
sahf
pop
lods
jno
stos
mov
int
push
pop
out
add
shl
movsb
mov
aaa
mov
es
es
adc
movl
cli
jne
or
and
sbb
std
mov
dec
rcrl
push
mov
and
bound
sub
pop
xchg
pop
or
in
xchg
jmp
std
sbb
imul
jb
xlat
imul
push
in
shl
mov
mov
cmp
push
or
cli
hlt
ret
push
add
lret
in
push
in
pop
cmc
and
inc
push
imul
xor
popa
imul
or
add
iret
fnstsw
rolb
jns
inc
cmp
or
adcl
pop
and
iret
mov
jne
xchg
rcr
and
sub
out
and
mov
lods
add
aas
jne
es
mov
lock
fwait
pop
icebp
mov
outsl
or
mov
pop
add
mov
adc
jb
push
rol
pop
sub
lret
into
rolb
fcomps
lods
mov
pop
lret
jnp
pop
lock
push
mov
adc
inc
sub
adc
cmp
lea
shlb
xor
repnz
stos
mov
jno
and
std
and
cmp
push
repnz
ljmp
lods
push
pop
mov
jge
cmpsl
movsb
mull
xchg
sub
sbb
lcall
xlat
in
xchg
sbb
lock
dec
ljmp
dec
inc
dec
add
popf
addl
shrl
cmp
lret
cmpsb
add
jo
inc
xchg
pop
ror
dec
mov
das
xor
lea
or
in
leave
sub
and
adc
sbb
xchg
mov
push
inc
jle
cmpsb
and
mov
mov
sub
mov
cmpsl
xor
xchg
inc
les
orb
fldl
jmp
outsl
adc
cltd
add
xchg
jns
sbb
sub
sbb
jg
sbb
idivl
aad
jmp
ja
fnsave
fcoml
adc
jecxz
or
orb
lock
adc
fs
ficomps
lahf
xor
sbb
jp
jp
xor
mov
rolb
mov
and
setl
fildl
andb
sbb
popa
mov
push
movq
cmpsl
nop
dec
sub
adc
jmp
mov
mov
hlt
or
je
frstor
adc
add
sarl
and
jns
jge
xchg
mov
sahf
cwtl
sbb
shrl
mov
xchg
jle
mov
and
cmp
sub
fsubl
insb
lds
adc
dec
xchg
pop
enter
mov
and
adc
mov
in
test
or
cmp
push
leave
add
add
les
xchg
push
insl
adc
ret
push
aad
pushf
xlat
add
mov
insl
mov
andb
mov
arpl
push
out
aas
icebp
push
push
sub
lock
movsl
test
insl
enter
lahf
push
cmp
pusha
sbb
push
mov
ror
sti
or
mov
fstpl
mov
movsb
mov
fneni(8087
xor
ss
push
add
dec
xchg
sub
dec
arpl
lods
lea
mov
pop
mov
cwtl
cmpsl
rorl
ret
cld
push
jne
sarb
mov
cltd
jecxz
jnp
les
rorl
push
inc
mov
ret
mov
hlt
ja
dec
push
cltd
mov
ret
int
loopne
mov
jecxz
dec
out
add
enter
cmp
sbb
pop
inc
mov
xchg
fmull
in
ljmp
enter
loope,pt
ljmp
mov
jns
int
or
insl
push
lock
sahf
mov
cmp
lcall
out
test
fcmovbe
mov
or
jns
je
inc
loope
std
push
cmpsl
fcmovbe
jno
dec
scas
lret
int3
adc
cmpsl
test
jge
or
and
xchg
imul
mov
mov
adc
xor
pop
mov
xor
adc
xor
mov
inc
rcrb
ds
fistps
mov
jg
int
jge
outsb
dec
mov
xor
xor
push
and
push
sahf
mov
add
call
dec
stc
bound
testl
cmpsl
jno
xlat
sahf
addl
xchg
das
mov
arpl
std
inc
push
insb
inc
xchg
jle
pop
cmp
mov
sub
movsb
je
xor
mov
bound
dec
mov
mov
push
andl
loopne
clc
push
mov
mov
xor
push
jo
xchg
cmp
ja
xchg
jecxz
mov
mov
inc
mov
stos
add
iret
jmp
popf
adcb
adc
xlat
addr16
fwait
repz
mov
mov
push
cmp
inc
in
orl
sub
outsb
arpl
jnp
loopne
push
in
imul
repnz
mov
loope
xchg
jmp
std
or
cmp
pushf
push
repnz
cli
mov
pop
hlt
rcrl
cmpsb
push
mov
jge
mov
xor
aaa
fwait
out
xchg
mov
lods
jl
push
push
cmp
mov
roll
shll
pop
inc
and
int3
aam
or
rorl
fmull
sbb
out
push
cli
push
xlat
sub
sbb
into
lcall
sbb
mov
xor
into
mov
in
inc
sub
xchg
cmp
push
sarb
mov
mov
lcall
fstpl
cmp
stc
je
pop
punpcklbw
shrl
cmc
jmp
pop
idivl
cmp
out
xor
mov
or
inc
jo
repz
xchg
jl
loop
jnp
mov
jmp
js
cmpsl
mov
gs
pop
mov
push
xchg
jb
jno
push
lret
mov
scas
scas
adc
adc
popa
incl
xchg
mov
adc
inc
adcb
shll
mov
fldt
xor
mov
stos
or
stos
inc
arpl
dec
sar
sbb
jns
outsb
inc
dec
xor
push
std
jo
out
adc
mov
shl
xchg
push
dec
and
cmpsl
outsb
cmp
mov
jbe
mov
stos
insb
cmpsl
aas
push
inc
jnp
inc
test
fimuls
fistpll
inc
mov
scas
cmpb
int
insl
xor
mov
sahf
jecxz
xor
fstpt
inc
push
adc
sub
test
cmp
stos
xchg
sbb
add
jg
cli
sub
mov
je
cmp
push
sbb
stc
sub
inc
push
pop
dec
adc
rorb
lcall
jmp
adc
and
clc
jmp
pushf
inc
xchg
enter
repz
clc
pop
xchg
lret
push
ljmp
pushf
ja
cmp
es
jp
jp
sub
dec
pop
movsl
inc
stos
ss
lods
mov
sahf
cwtl
add
ret
out
fildll
sbb
ret
int
mov
scas
add
rorl
cmp
or
pusha
mov
ja
sub
outsl
add
dec
movsl
xor
popf
enter
stc
cltd
mov
adc
sbb
cld
adc
shl
pop
ret
stc
sbb
ret
aad
cmc
addl
mov
lcall
daa
clc
mov
mov
aad
sbb
mov
cmp
xchg
xor
xchg
cmp
movsl
fildl
rolb
mov
sub
push
cltd
clc
mov
mov
sti
loop
inc
sti
xchg
dec
stos
inc
add
pop
jae
xchg
push
scas
lds
pop
or
les
jecxz
mov
or
pusha
sbb
jmp
inc
pop
and
inc
in
xor
imul
fisttpl
mov
repnz
out
ss
dec
bound
test
pop
mov
pop
ss
xchg
mov
mov
lods
pop
ficoml
pushf
mov
and
cmp
push
stc
movb
addr16
jne
pop
push
ret
add
movsl
jl
outsb
mov
mov
outsl
xor
mov
mov
add
mov
inc
push
pop
je
sub
mov
les
lods
jbe
cmp
lods
or
lret
xchg
mov
and
dec
lahf
rcll
das
xchg
push
mov
inc
fistl
int
mov
push
cs
out
lds
push
push
ficoml
cmc
notb
pop
push
cltd
sbb
insl
loope
dec
lods
mov
fistpl
stos
int
inc
xchg
int3
push
lods
xchg
mov
out
push
aaa
imul
sbb
into
cli
add
push
xor
std
adc
inc
ja
testl
shll
xchg
jbe
pop
insl
mov
xchg
xor
pop
or
rclb
jns
jnp
and
add
cmpsl
jbe
in
aas
jb
pop
or
addr16
daa
push
push
cld
push
jg
cmp
mov
pop
test
inc
or
cmpsl
jp
xchg
js
xor
mov
push
ret
hlt
push
test
repnz
fdivrl
sub
cmp
das
mov
loop
pop
out
cmpb
lcall
or
ret
movhps
sti
xchg
inc
dec
in
mov
pusha
xchg
push
xchg
push
les
pop
mov
pop
add
cmp
sub
mov
xchg
mov
fisttps
mov
mov
push
cmpsb
movsl
paddb
stos
popf
push
cmp
xchg
or
push
out
cmp
cmp
iret
add
xor
cmp
mov
mov
cmp
cmp
or
ljmp
push
sets
inc
sarb
mov
mov
out
shr
mov
fwait
sub
cltd
daa
test
mov
sbb
pusha
frstor
andb
insl
lods
pop
outsb
gs
out
int3
out
inc
and
and
in
or
fbld
lahf
mov
mov
jne
cmpsb
dec
dec
sub
loope
mov
jecxz
fwait
xchg
mov
mov
aaa
or
in
pop
push
lcall
xor
jg
aad
out
scas
mov
mov
into
mov
push
push
jp
cmp
inc
add
stos
push
popf
pushl
call
ret
sub
xchg
lahf
sub
test
push
out
mov
xor
mov
js
dec
scas
lea
into
cmc
shlb
or
xor
sub
imul
fnstsw
mov
cmpsb
and
cmp
inc
xor
pop
xchg
xchg
call
rol
xchg
addr16
call
inc
jnp
cmp
lret
adc
lcall
xlat
pop
cwtl
xchg
fcmovne
inc
fisubrl
cltd
fwait
jb
jne
fwait
adc
sub
lahf
sbb
iret
sti
xlat
pop
cmpsb
clc
call
ss
ror
adc
fs
mov
inc
lock
cmp
jp
iret
dec
leave
ficompl
cmp
or
mov
mov
lods
xchg
insl
imul
xchg
xchg
into
pusha
sbb
es
cltd
outsl
aas
push
es
and
mov
cmc
in
push
dec
lcall
sbb
bound
shl
nop
push
cmp
xchg
jbe
mov
enter
imul
lods
xlat
test
fwait
arpl
pushf
out
sub
mov
mov
lcall
bound
xlat
adc
sti
iret
mov
sub
stc
js
repz
call
cmp
pop
fadds
cmpb
mov
inc
push
inc
adc
adc
adc
movsl
jns
xlat
fwait
inc
inc
push
or
push
pop
mov
cwtl
add
lea
lret
sbb
or
cmp
push
sub
cmpsb
adc
and
int3
jne
hlt
push
insl
adc
hlt
popa
clc
cmp
das
sub
or
out
jmp
cmp
into
push
int3
add
std
mov
imul
movsb
pop
and
test
sub
cltd
push
mov
idivb
shlb
sbb
jno
and
in
aas
mov
xor
loopne
out
sbb
not
jge
xchg
scas
shll
jge
daa
addb
jl
in
das
pop
jbe
aad
dec
push
lods
ljmp
insb
clc
jl
fwait
shll
add
lods
pop
xchg
out
jmp
cmp
cmpsl
repz
mov
mov
daa
insb
push
inc
daa
andl
and
addl
cmp
cmp
jno
es
sbb
out
dec
stos
and
pop
push
ds
pusha
dec
cmpsb
loopne
cmc
mov
sub
sub
sbb
xchg
outsb
push
inc
push
das
mov
xchg
jle
adc
inc
jne
repnz
mov
sub
sub
adc
imul
loop
sub
mov
mov
cmpsl
aam
or
adc
or
cmp
mov
push
sti
xchg
pusha
mov
fucomp
mov
cltd
push
nop
out
fimull
or
js
arpl
sub
or
adc
ds
lock
insb
add
out
lods
data16
out
mov
add
or
xchg
xor
sub
loope
mov
hlt
mov
xchg
mov
pop
sbb
push
stos
pop
sub
jp
xchg
and
xlat
jne
add
shrl
loop
fwait
hlt
pusha
pop
xchg
fbstp
xchg
pop
inc
lods
dec
repnz
pop
or
in
cs
ret
pop
ss
push
ljmp
dec
mov
push
mov
test
push
outsb
xor
lret
jle
loop
ds
adc
xor
mov
dec
sub
cltd
out
mov
lods
test
cmpb
lds
mov
incl
mov
int3
ja
cmpsl
dec
push
mov
rclb
int
mov
out
aaa
call
pop
scas
pop
test
rolb
xchg
push
push
lret
mov
adc
adc
or
aad
test
into
popf
dec
and
iret
pop
xchg
mov
dec
mov
mov
out
xchg
stos
cmp
push
and
pop
inc
pop
test
out
mov
ret
mov
int3
sub
stc
or
pop
xlat
call
iret
or
jge
adc
mov
push
out
data16
lock
or
pop
pusha
nop
dec
mov
js
xor
out
xchg
pop
nop
or
xchg
rol
jae
and
sbb
dec
dec
movsl
aas
sbb
sarb
push
or
std
adcb
sub
mov
inc
adc
int
fs
adc
sub
ret
adc
cmpb
loope
pop
or
xchg
lret
mov
jp
fwait
sbb
icebp
aad
jo
in
jp
scas
add
jno
clc
test
push
jne
sbb
jp
movsb
adc
sub
enter
cmp
in
fcmovb
inc
leave
stos
push
adc
ja
mov
pop
and
lock
sub
mov
jmp
and
adc
sbb
shl
xor
cwtl
clc
jge
xor
in
jb
call
repnz
add
loopne
das
sahf
add
inc
pop
roll
pop
mov
mov
aad
mov
mov
popf
pop
inc
cwtl
inc
orb
call
inc
decl
cli
cmp
dec
out
jmp
adc
test
jb
dec
into
pop
shll
cwtl
test
testb
lods
pop
cmp
or
insl
fcoml
xchg
daa
les
shlb
lods
inc
fcompl
add
sbb
scas
jb
rcrb
and
in
jo
sub
lret
cs
into
add
mov
shl
arpl
cmc
mov
mov
xor
popl
popa
out
push
add
out
or
xchg
mov
pushf
in
insb
xor
xor
call
les
rcll
daa
sti
pop
sub
sbb
rolb
or
pusha
ds
sbb
insb
add
popf
push
sub
or
shl
fisttps
loopne
or
rol
les
test
push
mov
mov
sbb
pop
or
sbb
incl
push
bound
inc
pushl
xchg
fdivrl
pop
jp
imul
pmulhw
hlt
add
incb
fisubrs
rorb
cmp
dec
jb
pop
push
sub
fwait
pop
mov
or
cld
shl
adc
jmp
int
mov
idivl
lret
fsubl
or
mov
push
xchg
jbe
or
ret
in
xchg
rcll
sub
cmp
inc
test
mov
sbb
add
sar
sarl
push
mov
dec
mov
cmpsb
pop
mov
xchg
cmpsb
mov
push
add
sbb
mov
and
sub
insl
push
or
insb
fistps
fwait
scas
adc
and
adc
adcb
int
jno
out
frstor
mov
dec
gs
cli
xor
mov
jmp
insl
lock
mov
div
pushf
xchg
add
jb
loope
outsl
movsb
and
ss
mov
fistps
aam
out
leave
enter
arpl
daa
out
aad
ffree
fmull
cmp
sbb
fst
sbb
loopne
add
popf
add
mov
in
pop
and
dec
sub
push
xchg
repnz
daa
psrlq
xor
ss
dec
mov
add
sarl
mov
ficompl
popa
mov
fs
stos
fcomps
push
fidivl
push
inc
lret
inc
mov
idivl
iret
dec
xlat
outsb
lcall
sahf
jge
cltd
insb
inc
fdivl
insl
pusha
es
rorl
decl
pop
int3
pop
mov
mov
cmpsl
xchg
sbb
lret
xor
sub
xchg
dec
cwtl
bound
addr16
ret
jmp
xchg
push
fsub
ljmp
insl
sbb
mov
mov
out
test
jnp
push
pushf
imul
cmpsb
pop
pushf
es
mov
xchg
aam
sub
repnz
jmp
mov
xchg
push
test
mov
fldt
bswap
jnp
cmp
jb
xchg
scas
pop
scas
push
adc
icebp
dec
int
and
popa
push
scas
lret
pop
outsl
jmp
je
jae
mov
dec
mov
mov
notl
clc
adc
scas
mov
repnz
aam
fnop
cwtl
cmc
cmp
add
push
jl
jns
jmp
adc
dec
xor
sbb
out
pop
rorb
mov
cmpsl
xchg
jne
mov
mov
aas
pop
js
mov
hlt
sbb
mov
ss
out
add
lret
add
dec
xlat
inc
add
lea
pop
xchg
push
ljmp
add
mov
rcll
mov
repnz
sbb
xchg
or
mov
jnp
mov
mov
sub
into
lret
sbb
mov
add
std
push
dec
fs
jle
lds
push
subl
lods
cmp
inc
add
int
push
das
test
dec
pushf
sub
std
mov
prefetchnta
fsubs
into
jo
pop
mov
lahf
lcall
mov
mov
stos
arpl
cmp
adc
insb
xorl
cwtl
rolb
mov
jg
enter
arpl
sbb
sbb
call
lahf
sbb
mov
mov
mov
xchg
in
inc
pop
mov
gs
loope
pop
or
nop
or
nop
rclb
mov
call
push
incb
divb
mov
xchg
adc
xchg
xchg
ret
inc
in
jbe
into
xor
pop
cld
xlat
fnstcw
int
out
push
inc
bound
pcmpeqb
aaa
lahf
cmc
inc
int
jge
imul
bound
lods
xchg
jecxz
lfs
int
fcmovu
leave
push
pop
push
jg
adc
push
xchg
or
mov
stos
inc
inc
ds
add
nop
movsb
push
adc
mov
push
popl
mov
mov
push
adc
dec
xor
fwait
ds
dec
inc
repz
pop
xor
mov
leave
shll
add
lds
in
inc
nop
scas
out
and
mov
cmp
in
lds
jns
out
pcmpgtb
jbe
iret
and
push
iret
out
cmp
jge
pop
mov
stos
push
les
mov
inc
call
or
or
adc
adc
and
shrl
jnp
negl
es
les
push
stos
data16
xchg
xor
xor
ror
push
shlb
sub
bound
jbe
pop
xor
and
mov
inc
popa
scas
and
dec
orb
push
mov
xchg
cltd
adc
xor
inc
cmc
rcr
aad
enter
icebp
cltd
cmp
aaa
xor
cltd
mov
mov
dec
lock
dec
gs
sub
dec
loopne
shrb
xchg
mov
je
push
fs
movsb
mov
jne
in
sub
xor
out
mov
fisubl
sbb
push
xchg
pusha
imul
xlat
pop
fcoml
sbb
add
dec
inc
xchg
mov
sarl
stos
js
data16
jno
out
outsb
cmpsl
stos
loop
in
mov
sub
adc
scas
adcb
lock
aaa
cmp
out
popa
pop
into
es
adc
sub
push
jge
sti
fwait
jae
jp
push
stc
mov
xchg
adc
adc
inc
lret
xor
sub
arpl
cmp
test
dec
hlt
mov
repnz
add
add
inc
push
int3
sbb
das
or
xor
into
mov
jns
hlt
add
sub
and
xchg
or
sbb
int3
jmp
jno
mov
push
ret
push
aam
adc
ret
leave
sbbl
xchg
push
dec
mov
pop
repnz
cmp
inc
jle
fwait
adc
and
insb
and
icebp
or
fwait
test
ficomps
movsl
rorb
xor
dec
add
push
ffree
sahf
inc
pop
push
mov
add
icebp
add
xor
mov
cmp
aaa
loop
or
imul
pop
xabort
pop
pop
or
pop
popa
jp
scas
fsubr
lea
xchg
fldcw
or
cmpsb
mov
outsl
or
mov
fwait
cmp
adc
add
jg
inc
dec
xchg
aas
mov
nop
jecxz
inc
inc
cmp
insb
movsb
and
dec
mov
pop
outsl
in
repnz
and
xor
push
xor
shll
pop
test
jl
in
fistl
xchg
mov
dec
pop
imull
mov
sbb
push
aaa
inc
aas
and
daa
aas
jge
flds
icebp
sub
xchg
dec
dec
enter
mov
and
sbb
outsb
icebp
test
pop
enter
out
xchg
cld
andb
out
jno,pn
cmpsl
dec
dec
sbb
enter
jp
push
inc
sub
jno
pop
jne
mov
test
loop
pop
aaa
mov
ds
dec
loope
aas
lcall
es
pusha
aaa
in
ja
mov
mov
jbe
pop
xchg
sub
inc
in
mov
jns
mov
add
mov
das
ret
mov
or
not
push
fbld
addr16
out
mov
popa
mov
jb
push
loop
fwait
adc
sarb
ljmp
out
in
mov
jmp
fs
add
mov
sbb
bswap
mov
push
sti
or
sbb
xchg
add
cmp
out
popa
decl
jle
icebp
loop
inc
call
add
adc
cmp
cmp
lret
push
sbb
push
bound
fs
cmc
mov
es
and
hlt
ret
adc
shll
test
das
sarl
pop
and
xor
mov
xchg
xchg
loop
adc
call
sbb
pop
xor
imul
mov
and
push
scas
sbb
jle
or
sub
pop
inc
adc
insl
cli
pop
and
dec
lret
or
mov
sbb
rcrb
sub
cmp
sub
jp
dec
add
rcll
daa
pop
rep
fimuls
or
cmp
jae
mov
aaa
hlt
push
repz
bound
insb
clc
mov
ja
and
inc
or
adc
inc
cs
call
fwait
dec
icebp
testl
jnp
es
push
scas
test
push
jbe,pt
es
outsl
sub
cmp
aas
mov
cmp
pop
stc
jbe
insb
faddl
xor
in
lods
mov
fwait
int
sbb
xchg
popa
xorb
mov
lods
pushf
lods
cmpb
lods
dec
inc
jo
jbe
cld
std
or
cs
out
imul
fstp
roll
jae
push
adc
mov
sbb
ljmp
int3
mov
aaa
call
arpl
dec
insl
jnp
fiadds
mov
or
shl
dec
imul
jp
xor
jo
rcl
or
sahf
outsl
cmp
mov
dec
aad
jmp
nop
inc
adc
cmp
lds
out
loopne
dec
dec
or
clc
enter
cli
adc
dec
mov
sub
adc
pusha
shlb
iret
xorl
mov
out
dec
and
push
sbb
pusha
add
and
pusha
xor
xor
mov
ljmp
test
data16
cmc
rcrb
pusha
lods
imull
xchg
xor
jb
test
or
mov
rclb
add
popa
rorl
xor
jle
or
fisttps
cmpl
mov
jl
add
in
rolb
scas
inc
jo
testb
and
test
sub
call
xor
mov
mov
gs
cmpsl
repz
cltd
adc
aaa
lcall
daa
add
stos
cmpsb
stos
sbb
mov
mov
sarl
push
jo
pop
cs
adc
xor
pusha
dec
jo
push
jmp
int3
inc
or
pop
cwtl
popa
push
add
jp
cmp
and
test
popfw
dec
sub
outsb
int3
into
sub
push
test
test
adc
shl
ss
sbb
mov
aaa
fxch
leave
test
inc
nop
cli
aad
loop
out
mov
cmp
pop
adc
xchg
je
xor
sbb
inc
fnsave
das
mov
push
stos
mov
mov
lock
repnz
fldenv
sub
cmp
in
fidivrs
adc
mov
ret
pop
or
jne
mov
or
dec
xchg
aam
mov
mov
arpl
stos
mov
jbe
movsb
jo
pop
pop
jp
xor
sub
push
push
dec
sti
arpl
add
movsb
fmull
bound
adc
push
mov
sarl
out
mov
push
popa
out
mov
sbb
dec
loope
lret
pusha
xor
mov
lea
lret
ljmp
push
rcll
clc
cmp
loope
sbb
bound
xor
push
mov
mov
cmc
jae
push
adc
ss
scas
fdivrp
stos
daa
pop
sub
mov
mov
mov
mov
ficomps
adc
cmp
gs
jb
mov
and
lcall
xor
add
adc
and
cli
and
mov
pop
xchg
arpl
push
decl
jno
outsl
xorb
mov
inc
pusha
inc
lret
jp
cld
pop
call
daa
or
inc
icebp
xlat
push
mov
mov
cmp
addr16
push
nop
xor
les
mov
mov
loope
mov
sahf
aam
sbb
jmp
push
aas
and
in
dec
and
sahf
stos
cli
adc
pop
insl
sar
scas
cmpsl
sti
fwait
pop
mov
dec
scas
dec
pavgw
mov
and
xor
lcall
dec
and
mov
push
inc
inc
into
data16
subb
pop
hlt
jno
pop
aad
mov
push
imul
repnz
xchg
mov
insb
fxch
out
movsb
out
xor
cwtl
popa
add
pop
pop
mov
out
mov
sti
cmp
fdivrs
shrb
dec
mov
and
cmp
addr16
pushf
call
je
jg
push
jge
ja
gs
insl
and
sbb
sbb
sub
add
mov
pop
fs
mov
out
aas
iret
xchg
dec
dec
or
data16
in
add
jne
dec
in
loopne
cmp
dec
dec
enter
push
push
jecxz
inc
cmpsb
lods
sub
adcb
int3
fcoml
in
jno
jp
xor
xchg
mov
xlat
push
cltd
xchg
xor
and
and
pop
mov
nop
lret
xor
insl
pop
xchg
inc
dec
mov
pusha
loop
xor
out
pusha
mov
ja
dec
daa
inc
push
rclb
insl
cld
pop
push
push
cld
sbb
icebp
subb
jmp
pop
ja
roll
and
mov
fidivrs
pop
rorl
loopne
and
hlt
ret
xor
push
call
fdivl
mov
test
in
inc
add
mov
hlt
movsl
in
mov
dec
shrl
lds
ja
pop
mov
cmp
pop
jnp
lea
push
mov
mov
jne
mov
mov
cmpsb
mov
setns
ljmp
hlt
dec
lret
lret
sub
out
cmp
inc
push
inc
xlat
push
push
nop
daa
repz
call
mov
insb
cmp
lds
push
mov
test
arpl
bound
into
sub
inc
scas
lret
mov
sbb
in
add
pop
mov
hlt
shrl
loope
inc
iret
xor
repz
mov
mov
sub
and
dec
test
in
push
or
mov
and
xchg
inc
iret
jno
or
aaa
jmp
int
cmp
es
and
cs
mov
adc
inc
incb
add
mov
insl
mov
clc
test
mov
fldz
jae
cs
loopne
sbb
out
das
dec
les
sub
sahf
icebp
and
fsubl
xlat
or
and
xchg
xor
rolb
adc
mov
cs
faddp
push
stos
jo
ds
dec
ds
leave
rcr
leave
dec
stos
jb
pop
jae
jle
push
fcompl
shlb
jne
adc
add
inc
dec
adcl
mov
inc
cmpsl
gs
fidivrl
out
in
sbb
mov
outsl
jl
mov
jg
inc
rcl
push
and
push
jecxz
mov
xor
xor
loop
pop
mov
adc
into
xor
fwait
lcall
inc
and
inc
movsl
jg
add
jmp
fcompl
rcrb
cltd
insb
mov
repz
pop
push
repz
mov
xchg
jle
daa
stos
fwait
dec
jle
orl
jle
mov
and
mov
mov
dec
dec
imul
in
repz
xlat
sub
outsl
jl
arpl
lcall
mov
std
mov
add
ret
out
loop
mov
shlb
mov
mov
add
faddl
or
sti
lods
negb
inc
inc
push
rclb
aad
fildll
fs
popa
xchg
cmp
sub
loope
sti
jg
insl
cltd
push
jbe
and
lods
add
push
pmaxsw
ret
enter
pop
cmp
mov
add
inc
aaa
xor
push
xor
cmp
inc
push
add
rep
cmp
roll
xchg
xchg
pop
xor
jo
pop
mov
xchg
add
les
jb
jp
dec
or
fcmovb
mov
dec
lods
stos
inc
sub
sbbb
daa
or
jb
xlat
add
cmp
std
out
pop
mov
mov
add
adc
cmp
subl
mov
int3
jp
outsb
hlt
xchg
add
mov
test
frstor
dec
jmp
addb
dec
lea
push
cmp
mov
mov
xchg
xchg
repnz
lods
enter
sub
out
cmpb
jle
mov
enter
aaa
and
repz
in
sub
mov
push
jle
add
jp
jae
ja
pop
je
stos
mov
pop
loope
xorb
jl
bnd
cltd
mov
ds
rol
fsubl
ljmp
mov
or
mull
int3
out
inc
cwtl
sub
push
jecxz
repnz
xor
shlb
dec
cmp
mov
scas
fs
nop
ja
inc
mov
outsl
pop
movsl
xlat
fildl
sub
subl
xor
pop
and
subl
jnp
xor
aas
lock
jg
cwtl
jb
pushaw
and
cltd
cmp
js
inc
test
sub
rcll
addr16
sysret
xchg
loop
pop
rcl
mov
jl
loopne
jb
movsl
push
lods
repnz
jnp
xchg
mov
lret
push
in
imul
sub
jbe
je
sbb
cld
push
pop
lea
mov
enter
fisubrs
adcl
ret
pop
in
cs
das
push
cmpsl
cs
mov
outsb
pusha
push
push
mov
sahf
xchg
out
pop
mov
inc
inc
mov
cld
add
ja
repz
lods
mov
mov
pop
outsb
scas
andb
sbb
subl
add
cli
gs
push
divl
lea
sahf
cmp
rcrl
jge
cmp
out
dec
mov
mov
inc
lea
xchg
sub
lock
movsl
sub
test
mov
mov
loope
mov
sti
lds
sbb
sbb
add
nopl
jno
rorl
xchg
dec
push
and
cmc
jo
mov
les
or
popf
pushf
lret
hlt
or
add
mov
cmp
push
loopne
sub
xor
pop
jnp
lahf
xor
xchg
jns
xchg
and
stc
lods
cmc
insb
fmul
and
insb
ss
jle
dec
sbb
mov
pop
xchg
cwtl
cs
pop
mov
movsl
and
dec
sub
mov
scas
pushf
shlb
call
mov
push
or
int3
cli
dec
mov
popf
mov
jg
imul
xchg
fwait
adc
lods
data16
lds
cmp
test
push
fstps
out
push
adc
test
repz
aad
xor
xchg
push
xchg
add
sub
sahf
cmp
jge
cmp
in
ljmp
or
dec
les
inc
and
ljmp
xchg
enter
pusha
into
jb
jbe
cmp
mov
mov
aad
xchg
cwtl
outsb
insb
mov
xchg
adc
mov
add
push
loope
jecxz
clc
leave
lods
pusha
inc
icebp
mov
adc
cli
mov
aaa
adc
cwtl
xchg
sbb
cli
cmpsb
cmp
std
test
js
cmp
push
inc
out
xor
or
mov
mov
sub
repnz
rorl
sub
jmp
aas
mov
aaa
les
jnp
mov
stos
rcr
sbb
xor
das
sbb
dec
mov
cwtl
xor
loop
add
test
scas
mov
cmc
jmp
xor
cltd
in
lds
enter
pushl
xor
int3
jge
cmc
rcrl
popa
sbb
cwtl
mov
fs
xor
mov
push
mov
fistl
andb
pusha
insl
outsl
sahf
pop
cmp
fildll
push
ret
enter
sub
mov
sbb
data16
jne
stos
dec
push
mov
cmp
dec
rcrb
fidivs
mov
inc
and
sub
daa
lods
sbb
inc
int3
xchg
jae
mov
test
and
jne
mov
pop
das
ja
jno
bound
xchg
push
jge
and
pop
sub
add
cli
push
or
jecxz
fnstsw
fstp
and
push
pop
cmp
test
divb
sbb
mov
icebp
rcr
pop
adc
inc
jp
sub
data16
mov
add
call
jmp
or
inc
ljmp
ljmp
pop
push
sub
xor
daa
loop
inc
in
xor
pop
xor
ljmp
outsb
jnp
and
or
xor
repnz
push
loope
out
jl
shll
add
test
sub
cmp
out
jmp
dec
js
fadds
xlat
or
xchg
inc
movsb
inc
push
mov
or
faddl
mov
sbb
adc
ds
sbb
dec
adc
mov
leave
mov
or
rcr
daa
bound
pop
sub
rcl
lods
lahf
lds
and
call
pop
sbb
ret
xchg
mov
mov
rcr
cmp
es
mov
cltd
loop
mov
shll
icebp
addl
xchg
pusha
jno
adc
cmp
sti
xor
repz
iret
mov
ret
pop
push
or
xor
inc
mov
or
or
repnz
mov
sahf
popl
jne
dec
mov
stc
inc
mov
aas
repnz
push
jp
push
push
xor
loop
sbb
xor
mov
rcrb
mov
stos
xlat
mov
jl
jne
popf
js
cltd
adc
xor
imul
add
inc
mov
xchg
inc
mull
sahf
push
adc
aad
sub
lock
repnz
jnp
dec
popl
or
std
insl
cmp
mov
mov
adc
push
pop
movsl
xor
push
jmp
xchg
repnz
negl
cmp
les
sar
ljmp
shlb
cli
push
xchg
lods
jmp
push
ljmp
sbb
pusha
bnd
push
idiv
out
imul
clc
cltd
mov
movsl
jne
movsl
xchg
jmp
ret
add
je
dec
lahf
in
mov
dec
add
add
in
neg
mov
or
in
cmp
or
xchg
int
cltd
data16
pop
xlat
repz
or
lahf
lods
inc
call
mov
and
aas
adc
ret
shr
cmp
inc
dec
xchg
stos
adc
jno
mov
sub
lods
jl
js
xor
insl
push
push
mov
ljmp
mov
ljmp
mov
outsb
fcoml
jecxz
loope
fwait
sub
in
xchg
popa
sti
jne
mov
add
mov
mov
jne
sbb
ds
lods
cmc
cmc
ljmp
or
cmp
mov
shlb
fidivl
jb
pop
std
aas
divb
fists
xchg
jp
out
inc
cmpsl
cmc
adc
imul
mov
sbb
imul
in
fs
js
jl
push
insb
loop
cmp
adc
nop
mov
xlat
or
aas
pop
cwtl
mov
jmp
loopne
pop
dec
jl,pn
pusha
inc
outsl
test
xor
adc
lea
mov
sbb
fs
pcmpeqw
les
loop
notl
mov
rclb
test
aad
push
sbb
mov
push
and
cmp
or
test
fisubrl
imul
push
mov
je
enter
xor
xchg
or
cmp
dec
push
popa
aad
cmp
ficoms
mov
repz
xor
mov
and
popa
dec
pop
sub
adc
in
xor
push
add
cmpsb
aam
cs
or
hlt
inc
push
adc
mov
adc
cltd
xor
push
mov
cmpsb
pop
sbb
mov
mov
mov
jle
loope
mov
scas
mov
ds
cli
clc
aaa
jne
fldl2t
ftst
cld
or
pop
loope
fisttps
gs
pop
loopne
cmp
push
jge
xchg
shl
lret
mov
out
imul
dec
push
pushf
divl
mov
loop
jmp
mov
sbb
inc
pop
cmpsb
mov
movsb
mov
cmp
adc
popf
sbb
leave
aam
jmp
mov
inc
out
xchg
fisubs
addr16
add
and
push
adc
mov
cmp
jmp
fidivrs
sub
jne
fxch
dec
and
dec
out
mov
int3
xchg
adc
push
cmpsl
mov
xchg
add
jecxz
mov
pop
sbb
inc
push
cmp
icebp
dec
dec
mov
test
cmp
and
or
stc
je
pop
insb
out
dec
or
sarb
and
hlt
orl
jecxz
cmp
mov
scas
imul
sbb
add
xor
mov
test
icebp
cmpl
mov
fadd
push
mov
dec
add
fwait
sbb
inc
jg
clc
or
scas
addl
xchg
mov
and
std
aas
xchg
or
in
stos
inc
fcom
push
inc
scas
mov
and
jnp
inc
mov
pop
adc
jecxz
sbb
cmp
inc
stos
cmpsb
movsl
add
mov
jns
and
cmp
mov
inc
pusha
mov
std
pop
fnstenv
mov
std
insb
pop
or
pushf
ret
jl
insl
or
or
movsl
jnp
inc
mov
push
in
xor
adc
xchg
test
loopne
jp
sub
fwait
push
push
mov
inc
xchg
push
jmp
pop
clc
lods
inc
mov
pusha
pop
in
mov
jle
cmp
pusha
sbb
sbb
popf
pop
or
xchg
fnstcw
jne
mov
lret
mov
pop
std
dec
xchg
and
pop
inc
repnz
add
pop
roll
lock
or
add
bound
fcmovnu
sub
jmp
fistpl
pop
mov
mov
dec
mov
xchg
cmp
and
sub
cmp
dec
test
mov
and
inc
push
bound
lock
push
jno
mov
jl
add
aam
cmp
test
dec
add
sub
ret
push
lds
pop
jle
dec
inc
pop
pop
outsl
sbb
jecxz
or
gs
mov
out
pop
xchg
ljmp
add
int
insb
dec
cli
pop
cmp
paddq
jmp
ret
sub
aad
sti
and
into
inc
movb
push
pop
cmp
adc
imul
js
jge
sti
jg
scas
fwait
sbb
pop
data16
mov
or
je
in
cmp
add
pop
clc
mov
jne
jg
testb
push
xchg
mov
data16
pop
pop
push
repnz
mov
pop
outsb
xlat
lods
sub
cli
mov
xchg
sahf
testb
repnz
jnp
imul
out
mov
fstps
push
mul
xor
rorb
icebp
xchg
lods
pop
arpl
mov
sub
aam
xchg
mov
mov
push
push
xor
in
hlt
scas
lock
pop
arpl
xor
xchg
sbb
lret
lcall
or
sub
dec
xchg
insb
push
and
mov
dec
icebp
jmp
pop
fcompl
das
iret
arpl
out
sti
push
bound
loope
fldt
lock
scas
or
cltd
test
fdivs
mov
cwtl
or
outsl
xor
ljmp
mov
pop
xchg
add
sub
lahf
movsl
sub
mov
movsl
lods
clc
jmp
pop
mov
shll
mov
pushf
push
repnz
movsb
insl
push
xchg
sub
daa
mov
mov
sbb
out
xor
dec
xor
fisubl
or
pop
cmp
bound
and
sub
fnstsw
push
pop
dec
xor
sarb
cmp
into
push
in
push
fisttpll
pop
jl
push
or
fs
shrl
jge
lds
and
dec
inc
dec
dec
add
imul
insb
push
jns
cmpsl
movsb
fcomps
mov
pop
sbb
jg
je
aas
xor
and
or
and
imul
imul
movsl
test
rorl
dec
adc
pop
inc
xchg
mov
xor
out
iret
add
sub
sub
mov
push
adc
mov
inc
bound
adc
cld
stos
sbb
fs
jl
gs
aaa
push
mov
jmp
pop
sbb
clc
fwait
loopne
mov
sbb
xchg
shll
and
mov
cli
adc
je
and
ret
aam
vpand
push
das
pop
lods
fdivrl
movq
dec
push
jle
fmuls
adc
stos
cld
cmp
mov
mov
mov
mov
mov
jle
mov
mov
cmpsb
push
aas
xor
and
add
sbb
imul
push
jecxz
scas
jecxz
iret
sub
test
ja
mov
pushf
mov
addl
push
cmp
xor
adc
mov
sarw
shlb
insb
mov
jno
loop
and
lods
pushf
push
and
outsl
and
test
pop
imul
pop
pop
stc
mov
je
pop
insl
adc
orb
cmpsl
aas
mov
in
sbb
mov
stc
push
mov
inc
popa
jp
jp
ss
adc
lds
cmp
push
dec
and
loopne
idiv
or
ret
std
out
xchg
jmp
or
sbb
adc
jns
jmp
cmpsl
xchg
inc
xchg
stos
xor
push
push
inc
dec
movsl
xchg
xchg
insb
ss
mov
push
hlt
jno
xchg
jle
nop
pushf
push
xlat
cmpb
roll
rolb
jnp
filds
je
scas
cmp
insl
mov
fcomps
and
or
fimuls
cmpsl
pusha
and
icebp
outsb
jnp
ret
sub
sub
mov
mov
push
sbb
dec
mov
stc
push
add
mov
pusha
dec
jmp
imul
sbb
stos
cli
js
bound
jb
dec
mov
fnstenv
push
or
ljmp
push
icebp
xor
sarb
ja
scas
clc
pushf
fldcw
es
in
jg
mov
and
dec
outsb
out
aad
or
test
xor
and
clc
pop
sub
rorl
pop
mov
in
push
or
cwtl
aas
sarl
cld
loop
outsb
repnz
pop
push
rorb
in
imul
pop
clc
shrb
push
stc
and
push
test
adc
cli
cli
push
sub
cmpsb
ret
or
jmp
adc
or
movsl
xchg
add
jp
and
fwait
lods
stos
sti
mov
inc
push
lock
xchg
loopne
or
pop
mov
jmp
cli
jmp
add
mov
mov
nop
mov
or
in
aad
data16
rolb
sbb
inc
out
sub
ja
and
jge
xor
cmp
mov
sbb
dec
jecxz
out
repz
test
aaa
addr16
pop
mov
in
stos
xor
outsl
pop
sub
roll
pop
pop
push
mov
mov
cmc
pop
jbe
push
cmpsb
lret
cmp
sbb
sbb
in
pop
outsl
mov
jno
out
outsb
loop
les
push
add
dec
jecxz
subl
push
xchg
and
xchg
pop
xor
ss
insl
sbb
icebp
jo
out
pushl
cmp
test
sub
test
fisubrs
clc
jno
inc
xchg
incb
bound
cmp
mov
pop
xor
xchg
sub
xchg
fcoms
mov
rolb
bound
dec
in
jmp
rcl
dec
lods
aas
cmp
push
jo
pop
jb
jo
leave
xchg
jno
inc
jno
seto
lea
addb
xchg
gs
mov
repz
call
inc
movsb
jle
rcrb
cmp
or
push
stos
mov
out
lods
jmp
call
push
cmc
pop
dec
jecxz
test
jb
fisubrs
stos
or
and
outsl
stc
cld
lret
scas
mov
jl
addb
ljmp
pusha
or
mov
sahf
push
cmp
adc
aaa
cmpsl
add
fdivs
sti
out
add
jnp
jg
cli
sbb
pop
out
dec
ljmp
and
adc
insb
xor
push
test
mov
or
dec
lock
or
ds
push
pop
sub
enter
movsl
sub
fldcw
or
jne
lahf
push
pop
rcrl
jmp
pop
and
xchg
fnclex
ficompl
dec
jge
pop
pop
mov
xchg
es
stos
aam
mov
mov
loopne
and
ret
loope
push
shl
ficompl
in
adc
stc
movsl
adc
repz
push
test
imulb
cmpsb
jno
addl
push
mov
cs
jg
sbb
add
add
dec
cmp
or
andb
subl
xorl
or
cmp
ficoml
sub
jecxz
fisubs
and
lods
shll
in
in
mov
subb
cmp
pop
mov
out
mov
daa
inc
sbb
cmp
loop
push
cmp
mov
testb
loop
mov
hlt
subb
xchg
push
aam
adc
pop
adc
int3
and
fcmovnu
pop
fwait
lods
jns
dec
arpl
xor
dec
and
adc
popa
pop
popl
pop
xchg
jo
nop
jb
mov
mov
dec
mov
dec
fsts
add
fcoms
aad
dec
rorb
mov
mov
das
mov
jge
in
js
or
xor
xchg
pop
gs
xchg
insl
addr16
out
sub
or
push
sub
les
dec
mov
ret
or
xlat
pusha
mov
rorb
ret
scas
jecxz
sub
jo
or
add
stos
hlt
leave
je
cltd
sbb
lock
fidivs
ret
or
js
cmpsl
mov
pop
and
xor
fisubrs
xchg
pop
cltd
and
or
outsb
sbb
xor
sbb
stos
and
cs
pop
loop
test
iret
mov
jl
xor
xlat
xchg
sbb
inc
xchg
push
fsts
cmpsb
lahf
decb
das
in
lds
out
push
dec
push
jp
push
test
into
cmpsb
xchg
repnz
jo
icebp
das
sub
nop
shll
xchg
sub
pop
fs
push
xchg
pop
clc
in
pop
pop
out
mov
and
sbb
adc
push
dec
aas
xchg
inc
sbb
sbb
adc
pop
test
inc
cs
or
push
mov
fsubrs
sub
xor
aad
mov
jecxz
push
imul
imul
inc
dec
test
fs
ljmp
mov
adc
pop
mov
xor
sbb
jl
mov
cmc
test
push
inc
jmp
push
add
cwtl
rcr
out
into
cld
test
scas
sub
gs
jmp
movsb
xor
dec
add
sub
insb
jbe
imul
les
bound
sbb
sarl
je
mov
daa
test
repz
rcll
jbe
daa
push
xor
sbb
inc
fists
lret
jecxz
push
xchg
pop
push
inc
jnp
push
xchg
mov
jmp
and
mov
sub
cmp
push
xor
jnp
ljmp
leave
push
imul
or
lret
nop
jmp
dec
mov
jns
dec
xlat
out
scas
dec
push
gs
jmp
cmpsl
popf
fwait
leave
inc
ret
es
inc
lcall
sti
xchg
mov
mov
hlt
mov
into
push
lahf
cmp
dec
pop
iret
in
sbb
fstpt
hlt
mov
and
cmc
pop
xor
lahf
inc
mov
mov
fwait
mov
test
xor
push
pop
scas
shll
mov
lahf
cltd
mov
cmp
inc
out
or
lock
lock
sub
jae
jnp
stc
inc
mov
shrl
or
stos
rcrb
xchg
lcall
ds
xor
inc
movsl
xor
test
aaa
xor
push
add
stos
dec
lds
jnp
xchg
fadd
out
lock
into
jg
mov
mov
inc
pop
es
add
pushf
push
dec
lock
dec
leave
and
fisubl
push
insb
lret
xchg
rorl
repz
push
inc
push
cmc
enter
xor
lds
lcall
lock
xchg
xor
ret
xor
test
and
push
jg
ficomps
in
xchg
jo
in
sub
clc
mov
mov
aas
push
insb
cld
or
xor
iret
jmp
jbe
inc
iret
int
mov
clc
sub
mov
out
stos
jne
mov
lods
les
jo
mov
outsb
aam
lock
mov
shr
imulb
jbe
dec
dec
push
push
mov
sub
not
and
inc
sub
push
fidivrl
test
inc
push
cmp
mov
les
fildll
mov
mov
pushf
in
fwait
pop
jo
call
lahf
mov
add
roll
xor
insl
xorb
xchg
push
aas
ljmp
xor
shl
fdivs
jb
cmp
sub
dec
xor
out
push
inc
add
lret
ds
fisubrs
mov
aaa
lret
out
jl
fistpll
pop
pusha
jp
and
pop
cmp
jne
push
jp
imul
gs
mov
push
cmpsb
call
sarb
insl
add
fwait
outsl
mov
or
pop
cwtl
jge
outsl
dec
orl
or
hlt
add
das
mov
push
in
or
scas
mov
loopne
loop
inc
out
push
es
mov
xor
iret
loope
jp
jb
pusha
outsb
ja
jbe
repz
jp
sub
push
cs
int3
jne
xchg
out
jg
inc
lock
xchg
xchg
roll
cmp
cmp
push
mov
push
hlt
cmp
movl
mov
sbb
dec
cwtl
push
inc
mov
ljmp
add
into
inc
mov
scas
sti
cmp
and
daa
dec
xchg
emms
add
cmpsl
pop
in
xchg
push
add
frstor
push
jmp
jecxz
pop
xor
aam
inc
and
outsl
loope
sbbb
les
mov
iret
mov
notl
jmp
pop
inc
addr16
stc
test
les
push
mov
xchg
sbb
xchg
jmp
iret
ds
je
loope
js
push
mov
pop
stos
repnz
aaa
lret
cmp
ja
fnsave
mov
jle
ljmp
dec
push
pop
fnstcw
outsl
sbb
pop
ljmp
jno
and
test
jle
push
add
int3
fcmovu
xchg
push
bound
or
mov
into
xlat
pop
gs
and
int3
push
or
xor
and
mov
pop
out
cmp
bt
mov
pushf
daa
adc
hlt
jno
xor
scas
pop
lods
addps
scas
je
jae
or
pop
loope
xchg
enter
js
inc
push
das
xchg
and
hlt
mov
cmp
lcall
jmp
cmp
filds
popa
imul
xchg
decb
pop
pop
xchg
jge
nop
jae
sahf
pop
push
mov
sti
push
scas
jns
xor
int
and
fidivrl
test
jnp
popf
fs
cmpsl
insl
inc
push
fcom
in
jge
dec
xor
mov
sbbl
in
mov
jmp
ss
shll
lds
adc
or
push
aaa
arpl
push
int3
gs
dec
add
fidivl
push
cmp
ss
js
mov
mov
push
jbe
push
xchg
pop
cs
insb
test
dec
xor
into
jno
sub
out
in
pop
cwtl
mov
nop
jnp
mov
dec
xchg
test
push
xlat
sbbl
leave
push
pop
lahf
lds
ss
cmp
js
mov
stc
lods
cmpsl
divl
iret
push
mov
mov
mov
inc
movsl
jmp
adc
jg
in
mov
inc
lods
arpl
mov
xor
aad
add
rol
mov
lock
and
jnp
cmpsb
xchg
rcll
sub
imul
sbb
icebp
mov
clc
or
xor
inc
lea
jecxz
adc
push
dec
jge
push
aas
js
and
adc
pop
xchg
mov
fcomip
jl
enter
inc
in
int3
dec
push
xor
dec
xorl
inc
sbb
jb
iret
adc
sarb
lods
jne
and
adc
aam
cmc
or
aaa
mov
dec
js
push
inc
imul
cld
fldl
mov
jl
pop
test
inc
lock
es
sar
sub
pushf
mov
loop
int
and
xchg
add
inc
dec
push
loopne
shll
mov
lds
jg
push
loope
stos
loope
inc
adc
fistpll
cmpsb
mov
jge
jle
lret
iret
pop
call
jmp
or
std
sub
mov
jbe
cmp
dec
xor
pop
ss
pushf
popa
rolb
mov
sub
lahf
adc
pop
outsb
repnz
sbb
jbe
pop
and
cmc
mov
xchg
icebp
or
lahf
fiaddl
xor
sti
mov
xor
cltd
xchg
and
pop
test
jne
loope
sbb
cmp
xchg
or
pop
pop
push
testb
vmread
inc
sub
cmp
pop
and
out
or
mov
mov
cld
push
adc
mov
out
out
inc
cmp
cli
inc
or
loope
insb
sbb
pop
clc
call
dec
adc
jae
push
mov
mov
arpl
pop
aam
lods
xor
cmpsl
int3
and
cmc
and
test
pop
sbb
fcoms
push
pop
lods
fs
jl
add
jmp
and
into
xlat
mov
mov
insb
lds
mov
or
ljmp
dec
or
inc
mov
leave
pop
inc
fstl
fstpl
pop
and
addr16
lahf
or
sub
pop
sbb
and
jl
mov
mov
repz
outsb
push
xchg
test
xor
addr16
dec
adc
daa
nop
mov
fcmovnu
fldcw
xor
enter
sbb
adcl
jmp
mov
cld
xor
push
push
imul
popf
test
nop
dec
jne
jmp
arpl
jg
ret
daa
add
cmp
xlat
int3
mov
fcomps
ss
dec
movsl
aas
enterw
cltd
enter
fistpll
inc
aam
test
jns
mov
adc
jl
mov
imul
jecxz
popf
xor
ljmp
cmc
xchg
repz
mov
push
lahf
dec
jp
adc
cmp
mov
xor
test
jnp
es
cli
sbb
fnstsw
stc
sbb
aaa
mov
adc
mov
call
mov
js
xor
cmc
fistpll
mov
mov
jg
hlt
gs
xor
cmp
mov
mov
in
push
inc
cmc
adcw
xchg
flds
mov
je
popf
add
adc
adc
bound
dec
and
push
push
jg
fidivrl
ret
sti
mov
add
enter
xchg
icebp
fldl2t
xchg
pop
fdivrp
mov
mov
bound
add
mov
repz
stc
loopne
push
cli
jb
and
insb
aad
mov
mov
loope
mov
neg
std
pop
xor
cld
add
xor
std
rclb
jge
and
jl
popa
dec
ds
aas
pop
cmpsb
dec
std
rclb
pop
xor
fwait
pop
mov
cmp
pusha
out
jnp
xchg
stc
adc
cld
adc
jle
icebp
fcoms
jo
xor
test
shll
inc
sti
jb
iret
aad
xlat
mov
jg
xchg
xchg
or
mov
xchg
addr16
pop
dec
cs
jp
test
mov
cmp
movsb
mov
xor
ja
push
mov
jo
aas
push
sti
pop
cmp
movsl
inc
scas
fdiv
lret
nop
xor
pushf
stos
cmp
sub
pop
mov
jae
das
and
bound
lret
xchg
inc
cld
shrb
push
and
enter
cmpsb
mov
mov
xor
rcll
out
pop
mov
inc
and
sub
mov
lret
xor
psrad
mov
jg
mov
into
ljmp
rclb
mov
fsubrs
sbbl
push
fsubs
push
mov
shll
iret
and
sub
fidivrl
add
lret
adc
out
mov
idivl
cmp
add
leave
xchg
sbb
sbb
cmpsb
mov
gs
scas
enter
out
pop
outsb
rcll
pop
sti
sbb
mov
push
adc
jnp
xor
lret
jg
jns
pushf
lret
cmp
xchg
mov
pushf
dec
out
outsl
mov
in
cmp
lock
shr
xor
cli
jbe
repnz
je
mov
push
and
rcrb
in
in
orl
jge
push
push
xchg
jnp
and
lret
aaa
adc
cwtl
cmp
popf
fs
mov
ret
in
popa
test
sbb
jae
jb
add
negl
nop
mov
cli
sbbl
push
ss
rcll
add
mov
testl
out
mov
pop
push
mov
xchg
mov
cmp
mov
ja
and
mov
jp
rcl
sbbb
loop
lret
into
in
sub
pop
out
inc
xchg
xchg
dec
ss
cli
cs
xchg
sbb
lcall
in
lods
mov
add
mov
lret
xor
add
aad
outsb
repz
dec
or
sbb
adc
cli
stc
mov
xor
mov
fisttpll
jmp
add
dec
or
xor
mov
hlt
addr16
mov
inc
hlt
rcll
inc
pop
xlat
jns
jns
repnz
xlat
or
mov
loop
and
mov
xchg
add
xchg
mov
mov
adc
mov
stos
cmc
aam
fsts
bound
or
push
fsubrs
sbb
sub
loop
imul
sub
hlt
jb
repz
pop
push
pop
lock
xor
sbb
inc
pop
arpl
xchg
mov
mov
sub
lahf
adc
dec
dec
lods
nop
movsl
nop
mov
notb
jnp
movsl
cmpsl
rcl
cmp
cmp
in
pop
sub
adc
fisttpll
and
mov
dec
and
push
and
fabs
and
and
sub
or
fsubl
inc
aas
xchg
test
loop
cmp
insl
mov
imul
imul
pop
cmp
pop
cmp
shrb
mov
movsb
mov
or
sbb
adc
dec
pop
icebp
cs
adc
hlt
mov
push
cmp
icebp
insb
fnstenv
mov
jmp
fldt
sahf
sahf
push
in
add
fbld
pmuludq
loope
dec
adc
and
int3
add
js
or
stos
push
movsb
imul
dec
scas
add
and
icebp
mov
js
negl
fs
cltd
shr
jb
sub
jae
in
jno
jl
mov
ret
sbb
dec
add
xchg
and
xor
fwait
mov
inc
pop
int
arpl
es
push
leave
dec
mov
add
xor
sahf
push
into
je
mov
mov
ret
jbe
lea
test
mov
test
frstor
and
and
mov
or
imul
push
stos
ja
jecxz
sbb
inc
int
les
xchg
inc
xor
and
dec
adc
xchg
push
mov
cmp
add
and
ljmp
push
loope
mov
push
jb
lods
iret
imulb
pop
sub
mov
ficomps
iret
out
xlat
inc
mov
xlat
scas
mov
repz
push
mov
xor
nop
ds
addb
push
pop
insb
jno,pt
mov
into
cli
push
jno
jle
xchg
mov
pop
outsb
inc
mov
pop
push
int3
pop
addr16
xor
gs
xchg
pop
lock
ja
xlat
or
add
inc
xor
cmp
dec
insl
mov
pushf
in
jbe
sbb
or
fidivrs
cmp
xchg
bound
xor
ror
fstpl
jnp
dec
arpl
lds
cmp
mov
dec
daa
push
jne
aas
jmp
mov
cmp
mov
or
push
stc
cwtl
imul
rorl
call
adc
subb
jo
sbb
adc
or
sarb
cld
fcoml
sbb
lcall
pop
mov
in
push
test
mov
out
inc
sbb
out
push
iret
and
add
sar
nop
outsb
cmp
add
add
test
sbb
jne
lods
aaa
fildll
aam
cmp
lcall
pop
sub
inc
daa
ja
pop
xor
push
jle
sbb
fdivrs
mov
jb
stos
stc
jno
or
insl
mov
adc
xchg
inc
jmp
jecxz
inc
dec
mov
mov
jno
jno
gs
add
inc
adc
jnp
mov
hlt
movsb
sub
loop
in
rcrb
fstps
and
cli
sbb
icebp
mov
or
out
inc
xlat
hlt
decb
mov
jb
sbb
push
mov
movsb
mov
fwait
loopne
mov
fistpll
enter
pop
aad
or
mov
and
and
stos
negl
xchg
add
out
loopne
jg
sub
lahf
daa
xchg
lahf
mov
leave
fadd
add
sbb
sbb
in
mov
repnz
sbb
xchg
in
repnz
mov
adc
rcr
add
rsqrtps
icebp
data16
stc
repz
insl
ja
aad
mov
sti
aaa
aam
jno
push
cwtl
insl
repz
data16
rclb
fdivs
mov
dec
cld
or
mov
xor
sahf
sbb
adc
push
fdivl
xchg
or
xchg
jmp
jp
test
mov
jb
cmp
dec
ret
jnp
mov
stos
imul
inc
adc
pop
and
in
xor
cmc
dec
mov
sbbl
test
lds
mov
shll
pop
push
imul
pop
stc
aaa
mov
iret
pop
out
jle
jns
mov
cld
cld
loop
dec
xor
jmp
push
mov
movl
pop
scas
mov
int
das
into
insb
add
jg,pn
in
fmul
jb
das
ret
and
push
shlb
and
sub
fmuls
inc
repz
std
sbb
aaa
inc
lods
fildl
sbb
lret
mov
pop
inc
enter
jle
mov
lcall
in
sub
lret
cltd
mov
jae
sbb
pop
ret
pop
rorl
int
cs
dec
pop
and
xor
mov
mov
push
xor
dec
cmovbe
push
cmpsb
test
xlat
mov
mov
pop
xlat
jp
mov
aad
push
das
imul
xor
xchg
jne
mov
cmp
inc
mov
fdivr
fidivrl
addr16
mov
jecxz
cwtl
mov
ds
xchg
arpl
mov
addb
js
in
inc
fistl
cli
imull
scas
fwait
out
push
jmp
or
jnp
iret
cmp
jecxz
mov
jg
inc
and
push
stos
cmpsl
mov
cmp
dec
push
ret
pop
pusha
cltd
jnp
and
leave
sar
call
js,pt
leave
mov
sub
and
stos
je
xor
mov
sbb
sbb
ret
das
test
icebp
lahf
mov
dec
mov
out
adcb
adc
bound
pop
push
movsb
xor
insb
test
inc
add
sbb
push
add
inc
add
icebp
inc
outsb
cld
xor
bsf
fdivrs
fsub
push
arpl
or
into
repnz
cmp
xchg
sbb
es
xorl
inc
inc
fadds
lods
mov
pop
rclb
mov
or
sub
push
test
sub
inc
mov
xchg
in
cmp
jo
and
js
rorb
push
mov
xchg
lahf
fsts
ja
je
aaa
es
test
imul
inc
pusha
jb
push
mov
lods
iret
aaa
cmpsb
xchg
pop
cld
aad
icebp
addr16
add
jb
iret
testb
dec
add
dec
and
push
cmp
mov
pop
xor
mov
lcall
clc
pop
mov
sbb
cwtl
pop
xchg
mov
jbe
push
dec
loopne
push
sbb
mov
ficoms
mov
test
add
inc
repnz
jmp
repnz
and
lahf
aas
aam
mov
pop
ja
out
adc
rorl
dec
push
ret
add
ret
jns
es
fmulp
jnp
jo
or
in
mov
jg
in
push
jae
jne
mov
scas
mov
call
pop
test
sub
roll
rolb
adc
dec
fdivr
jno
sbb
and
pop
dec
fimull
jne
cs
scas
pop
enter
lea
stos
jge
inc
jb
js
mov
outsl
fs
rorl
or
push
cmpl
mov
xchg
shrl
sub
add
push
ret
or
pop
pop
arpl
cmc
imul
cmp
and
fmull
enter
cmc
not
cmpsl
pop
or
stos
ret
add
jecxz
push
mov
in
popf
out
push
push
mov
aas
or
inc
push
jae
icebp
mov
mov
daa
inc
inc
es
lret
test
in
dec
popa
bound
test
lret
pop
in
and
sti
sub
mov
mov
inc
imul
jmp
cld
pop
sub
mov
test
mov
stos
push
or
aam
xchg
push
push
stc
mov
in
dec
mov
sbb
mov
mov
or
lods
shll
repnz
in
repnz
shr
lret
mov
inc
test
cmp
push
aaa
movsb
pusha
sub
scas
cmp
in
mov
mov
push
jne
je
mov
mov
inc
insb
dec
jne
sbb
call
sub
xchg
stc
shll
xchg
dec
int3
pop
mov
xchg
inc
fistps
cmp
je
add
sub
jno
lret
dec
inc
or
sub
movsb
jb
in
fwait
jp
dec
sahf
fstl
out
mov
xchg
xchg
bound
mov
fidivrs
xchg
and
pusha
pushf
sbb
xor
ss
add
scas
jmp
jmp
subb
sub
jns
pop
mov
je
arpl
xchg
leave
pop
aam
push
jmp
scas
scas
sub
js,pn
out
je
lahf
daa
sbb
inc
xor
clc
sub
ljmp
data16
mov
xor
dec
fcompl
dec
mov
loope
sbb
fwait
movsb
stc
push
inc
dec
cmp
insl
in
fisubrl
insl
jg
pushf
pushf
jg
gs
sub
pop
mov
out
mov
popa
faddl
xlat
fnstsw
loopne
or
jo
add
lods
mov
push
push
inc
cmpsl
stos
sub
xor
inc
stos
sbb
mov
xor
lret
xlat
sub
xchg
aad
dec
sbb
out
or
pop
dec
pop
lcall
popaw
sub
jl
sbb
mov
cmp
lret
jne
sub
pop
dec
test
nop
jbe
cwtl
mov
mov
xlat
pop
outsb
pop
es
sbb
in
popa
test
cmp
iret
in
xchg
bnd
jno
mov
dec
mov
ja
shr
mov
pushf
mulb
xor
push
nop
std
popw
and
leave
xor
mov
dec
in
and
pop
shrb
add
mull
push
mov
scas
pop
add
popa
jg
pop
xor
addr16
sub
ja
cmpsl
cmp
jnp
fsub
pop
lcall
mov
adcl
mov
stc
jno
mov
lret
or
sarl
daa
pop
mov
mov
inc
sub
shlb
dec
push
jb
test
dec
jne
shlb
and
les
dec
dec
dec
test
js
scas
jg
shlb
push
test
add
cltd
ljmp
xchg
push
je
jmp
xor
xchg
out
ss
xchg
cltd
roll
es
into
cs
out
icebp
std
imul
jo
jmp
push
ret
pop
in
inc
inc
das
xchg
adc
sbb
out
mov
mov
scas
aas
sub
out
jae
inc
cmp
aaa
in
add
ja
enter
sbb
mov
mov
cmp
je
mov
out
jns
es
fidivl
fstps
scas
jns
call
cmp
jg
pop
adc
imul
cmp
ds
imul
mov
cmp
sub
dec
loope
out
adc
jbe
inc
ss
adc
mov
mov
mov
out
dec
enter
fdivrs
fstpl
das
lcall
push
xchg
ds
pop
push
xacquire
adc
nop
popa
add
inc
pop
sub
movsl
loop
lret
insb
pop
cmp
add
aas
scas
mov
push
cmpsb
cmp
mov
lret
jge
loope
mov
test
fcmovnu
pop
ljmp
sub
sahf
push
cmpsl
xchg
xchg
sbb
mov
imul
push
lds
and
sbb
es
mov
rcrb
bound
mov
xor
arpl
sbb
xchg
push
in
test
and
outsl
scas
and
lahf
xchg
loop
jb
lret
mov
cs
sahf
add
mov
add
cmp
jb
jne
mov
xchg
outsl
pop
push
jns
mov
xor
xor
dec
movsb
jno
ljmp
add
jp
xor
out
mov
mul
cltd
mov
lret
push
xchg
sti
jns
leave
dec
mov
iret
imul
mov
movsb
push
fsubrs
leave
cwtl
pop
mov
jp
pop
adc
jle
jnp
sbb
dec
lock
cmpsb
push
or
pop
push
cmp
xor
or
mov
sahf
jnp
push
or
imul
in
push
dec
cmc
stos
clc
jns
pop
cli
add
ret
mov
lret
jbe
cmc
repnz
shl
push
jno
icebp
lock
flds
mov
es
movsb
int
sub
mov
cmp
pop
imul
lahf
lcall
jo
push
dec
subps
sbb
sar
sahf
pop
fistpl
je
js
jle
popf
sahf
cmp
out
xchg
std
ret
and
sarl
addr16
pop
xor
xchg
jns
xchg
das
jle
or
dec
pop
sbb
adc
fsubl
cld
fistpll
push
std
data16
cmp
daa
sahf
mov
ja
imul
xchg
roll
jne
push
aaa
in
orb
call
adc
and
subl
add
adc
out
clc
leave
push
aam
xor
movsb
pop
or
mov
inc
pop
mov
and
or
fdivrl
aaa
andl
lds
xchg
shld
movsb
fmuls
negb
mov
hlt
dec
push
push
filds
leave
jb
addr16
ljmp
nop
adc
mov
and
cs
dec
ljmp
mov
in
outsl
xor
data16
jecxz
mov
and
mov
sbb
enter
aam
dec
add
out
data16
inc
sub
add
mov
out
xchg
pushf
and
ds
or
gs
pop
sub
imul
shll
sbb
jmp
into
loope
jge
mov
ret
push
and
icebp
mov
test
mov
jl
ljmp
negb
mov
xchg
faddp
add
ret
pop
or
mov
sbb
stos
lret
mov
jnp
cmp
sub
jnp
mov
dec
xchg
in
cmp
xchg
pop
mov
in
fistps
jnp
mov
mov
mov
mov
shlb
xchg
adc
stos
add
out
jb
and
in
mov
pusha
out
cltd
cmp
push
mov
cltd
push
push
lods
jge
xchg
out
pop
stc
sahf
icebp
cmp
mov
mov
dec
inc
pop
inc
or
dec
popa
andl
or
andb
cmpsb
push
or
jp
call
pop
ficomps
sbb
dec
mov
mov
xchg
cmp
cmpsb
inc
dec
sub
enter
mov
add
push
sbb
sub
adc
sbb
jnp
int
movsb
clc
ret
mov
push
pop
das
and
jmp
mov
jle
cmc
inc
pop
fcmovne
je
jo
jns
out
inc
fbstp
clc
and
sub
nop
inc
sbb
sbb
int
adc
imul
lcall
scas
out
mov
push
test
fabs
and
xor
jg
ss
cmc
daa
test
adc
jmp
fsts
mov
jbe
out
inc
jg
fnstenv
and
pop
mov
jge
mov
sub
repz
lds
movsl
sub
rcrl
jmp
fwait
aad
out
in
js
addr16
lds
nop
rol
jl
js
daa
add
cli
cmc
dec
mov
add
jo
xchg
mov
test
es
jns
gs
xchg
sub
xchg
push
dec
repnz
mov
sbb
mov
es
inc
nop
push
leave
jl
stc
data16
mov
mov
dec
dec
cmp
lret
jg
aas
dec
sub
lods
jmp
jg
fbld
add
addr16
ficomps
push
jb
jle
push
pop
cld
inc
outsb
lea
inc
mov
mov
pop
cmc
nop
jge
fadds
sbb
data16
leave
jb
aam
pop
xlat
or
adc
das
sub
fwait
loope
mov
mov
xchg
leave
inc
mov
cmpsb
adc
mov
shll
and
pop
jnp
nop
mov
test
push
add
shrl
sahf
xchg
and
jmp
bound
leave
pop
mov
xchg
fwait
jno
jle
sub
cltd
pop
ljmp
das
xchg
sub
jecxz
icebp
leave
imul
jecxz
icebp
mov
lret
cmpsb
movsb
inc
cltd
add
das
dec
inc
jge
enter
sub
test
dec
xlat
or
pop
add
push
adc
div
stos
stos
xchg
cmp
cmpsl
cltd
aad
shlb
ret
fldt
mov
jmp
and
sub
sti
cmc
bound
sub
popa
xchg
cmp
pop
icebp
ret
mov
gs
jp
add
adc
mov
cltd
xor
loope
push
jnp
outsb
fsub
loope
jmp
fiadds
jne
cmpsl
xor
cmp
mov
xor
sti
andl
pop
adc
sar
mov
or
sub
cmp
xchg
and
adc
xlat
mov
push
push
inc
cs
jmp
mov
popf
xchg
mov
or
movsb
aad
pushf
fs
push
shlb
dec
leave
cmp
dec
out
pushf
xor
int
add
mov
xor
push
fdivrl
icebp
dec
stc
lahf
mov
rcrb
in
pop
mull
pop
mov
and
and
int3
dec
mov
clc
movsb
jae
out
cmp
cmp
inc
jb
lcall
mov
cmp
psllw
mov
test
cmp
lock
pop
in
xor
jl
popf
jge
pop
lcall
sbb
and
jns
popa
das
stc
push
inc
and
jp
fstps
lods
leave
into
cmp
pop
rcrb
jecxz
jnp
fcmovnu
arpl
mov
jmp
insl
or
jp
sbb
scas
or
imul
add
rol
pop
pop
orb
dec
or
push
jp
adc
adc
pop
out
xchg
sbb
in
cmp
mov
inc
es
xchg
test
pop
dec
movsb
repnz
push
mov
mov
ss
sub
sarb
cmpb
lcall
add
or
ret
xchg
mov
push
cld
pop
decl
repnz
pusha
rol
cwtl
dec
dec
lods
sub
fwait
and
mov
insb
outsb
push
call
jno
push
lock
add
int
ss
rcl
mov
popf
lods
or
jne
cli
sub
popf
stc
add
adc
xor
xchg
sub
add
in
jo
jnp
inc
stc
stos
mov
fs
lahf
outsb
mov
mov
in
xlat
pop
pop
fldcw
popf
add
mov
xor
stos
mov
jae
mov
fwait
mov
and
sti
test
lcall
clc
push
int
out
pushf
pop
mov
or
jo
or
mov
inc
inc
push
movsb
std
inc
cmpsl
pop
inc
jb
sti
mov
insl
stos
mov
sub
xor
arpl
into
outsb
repz
inc
outsl
jb
pop
scas
imul
pop
lock
push
mov
mov
sub
or
nop
movsl
jg
cmp
aaa
iret
out
jp
leave
inc
aas
aam
cmp
push
mov
inc
lock
and
inc
sub
xchg
daa
cltd
dec
cmp
push
mov
inc
cmpsb
popa
negb
adc
scas
push
shll
mov
cmp
cltd
lods
push
sub
dec
push
outsl
adc
fiadds
stc
jo
cmpb
dec
push
sbb
mov
movsl
push
rol
cltd
jb
mov
jmp
xchg
cmc
mov
ds
inc
pop
nop
lcall
or
lods
cmpl
dec
bound
sbb
cmp
sbb
inc
roll
mov
xor
mov
or
pop
mov
mov
insl
cmp
lea
notb
cmp
mov
negb
cld
and
xchg
data16
cmp
pop
and
jg
pop
dec
out
test
mov
ret
cmp
js
testb
ljmp
ret
mov
bound
std
adc
xchg
mov
mov
ss
or
shll
jno
xor
repnz
fsts
mov
ljmp
std
cmpsl
int
inc
test
xchg
ds
add
test
or
insl
jae
xchg
push
imul
add
or
mov
sub
xor
add
xchg
fidivrl
leave
jae
iret
push
loop
in
inc
mov
ret
or
fldcw
insb
popa
popa
cld
rcll
ljmp
mov
pop
icebp
shlb
xchg
dec
jne
aas
loope
jne
stc
fsubrl
loope
push
cwtl
lds
dec
cmp
jb
pop
adc
dec
cmp
or
xor
not
leave
out
sub
lcall
lret
rorl
pop
sti
dec
jno
jg
lods
cwtl
test
clc
call
int3
mov
mov
push
inc
iret
push
popf
out
sbb
test
shlb
lcall
push
mov
shr
inc
add
xor
mov
push
in
pop
inc
pop
inc
or
jns
int
std
inc
pop
sbb
out
sbb
adc
insl
xchg
and
dec
push
or
out
xor
xor
push
cmp
inc
jl
mov
mov
lret
mov
xchg
test
out
test
pop
cmpsb
sub
fsubp
xchg
and
push
ljmp
shlb
mov
aam
clc
das
ljmp
test
arpl
xchg
xor
daa
sarl
icebp
inc
outsl
cmpsl
push
mov
sbb
push
mov
mov
xchg
stos
mov
out
mov
and
jo
inc
mov
mov
sbb
push
imul
pop
add
std
in
pusha
imull
or
out
lcall
add
stos
lret
push
sub
lahf
mov
je
mov
adc
nop
jg
add
mov
ret
jne
loop
or
jbe
aas
dec
dec
repz
aas
sbb
sub
xor
dec
popa
insl
sbb
or
ja
mov
sub
jo
adc
stos
jbe
pop
insb
out
movsb
pop
enter
pop
ror
insb
aam
mov
syscall
mov
jmp
cmp
rcl
imul
iret
adc
inc
sbb
loop
in
xchg
nop
and
jo
ds
mov
xor
pop
inc
les
inc
inc
in
add
pop
fs
in
mov
out
and
mov
in
add
out
dec
sbb
or
jecxz
and
sahf
test
es
in
push
fnstenv
scas
cwtl
mov
fs
xchg
mov
pop
iret
cmc
mov
hlt
dec
xlat
sbb
dec
gs
mov
sti
loop
fists
test
loopne
jno
mov
dec
jg
pop
fdiv
mov
push
popl
or
movhlps
out
loop
mov
sub
jmp
dec
daa
jmp
hlt
xchg
shrb
arpl
daa
pusha
jle
scas
dec
jae
adc
sbb
int
xchg
aad
jbe
jmp
dec
aaa
imull
int3
pop
fstps
xchg
cmp
sbb
mov
sub
outsl
icebp
inc
sub
and
mov
mov
ljmp
inc
int3
lret
and
xchg
add
jecxz
xor
jo
outsb
rol
dec
add
pop
pop
insb
cs
xchg
jbe
jmp
mov
mov
subl
test
and
repz
sbbb
insb
dec
adc
popf
xchg
sbb
xor
ret
pop
jns
repz
fsubr
dec
aas
inc
shrl
xchg
addb
fstl
or
data16
andb
imul
adc
and
dec
inc
addr16
nop
test
or
xchg
jge
jg
sbb
add
inc
cmp
stos
push
pop
adc
gs
pop
and
pop
sahf
push
jmp
ljmp
aad
mov
cld
sbb
add
adc
xchg
mov
cmp
cmp
enter
pushf
insb
js
cmp
mov
rorb
pusha
pop
inc
mov
push
mov
stc
loope
mov
adc
or
jnp
mov
push
movsl
add
lahf
aam
repnz
pushf
mov
popf
mov
add
mov
cmp
hlt
mov
aaa
adc
idiv
push
fcoms
sub
or
ss
enter
jae
loopne
xchg
inc
jl
or
mov
sub
xchg
mov
push
leave
sub
in
add
add
in
cmp
fmuls
xor
and
shlb
push
dec
push
pop
adc
stc
mov
cmp
ret
sar
lret
mov
jno
push
inc
push
lahf
repz
bound
mov
cmp
loope
sub
sub
adcl
js
mov
jno
inc
aad
add
push
hlt
fistl
loopne
rclb
icebp
mov
fsubr
fstpl
xchg
inc
mov
out
ficoml
ljmp
fstps
ja
ja
mov
add
push
cli
xor
imul
xchg
xchg
inc
nop
push
rcll
xchg
cmpsl
mov
pop
inc
es
and
xor
std
and
ss
rcrl
fsubs
inc
loop
aaa
and
rolb
cltd
adc
pusha
andb
loop
sbb
pop
mov
sub
mov
frstor
adc
lret
xchg
xor
cld
movsl
je
shrl
dec
add
test
loop
inc
add
cmp
es
and
dec
xlat
fs
cmc
fnstsw
cmp
inc
ud2
int3
and
mov
mov
dec
push
sub
push
mov
cltd
jmp
orb
outsb
test
dec
je
imul
jb
pop
or
mov
cmp
dec
out
jo
mov
dec
fisubrl
aad
jnp
push
jp
scas
xchg
fs
fcoms
pushf
mov
pop
sbb
out
pop
mov
lds
pop
mov
div
cmp
mov
sub
pop
add
imul
aas
cmc
and
and
jmp
mov
out
pop
movsl
movsl
insl
mov
out
sbb
inc
in
jg
or
push
loope
int
rclb
outsl
dec
or
cltd
test
mov
adc
out
jl
lds
inc
cmp
shlb
pop
adc
adc
push
in
pop
xor
dec
cmp
pop
inc
mov
push
test
pop
and
adc
push
mov
and
out
push
movsb
xlat
imul
and
adc
aam
movsl
and
inc
stc
movsl
jnp
mov
lds
cmp
mov
adc
inc
push
outsl
sub
jl
repnz
notl
leave
mov
mov
in
xchg
mov
fucomi
jle
cwtl
mov
push
outsl
dec
in
gs
or
data16
jmp
push
sbb
cmpsb
push
mov
jmp
ret
push
sub
or
pop
sub
adc
inc
ljmp
loopne
aad
inc
clc
mov
into
in
fadds
mov
lret
test
faddl
test
xlat
loop
xor
jg
lea
and
aas
loope
lds
push
sbb
sub
call
sub
jno
jecxz
insb
stc
cli
loop
adc
jb
mov
mov
rolb
imul
lods
mov
jmp
adc
ss
add
int
out
popf
paddw
adc
jecxz
or
jp
mov
sbb
aas
mov
xchg
push
and
in
add
sub
push
jg
incl
jns
enter
sbbl
dec
fnstsw
popa
lods
es
or
idiv
int
push
fwait
mov
pop
adc
arpl
sti
add
jae
roll
roll
fildl
les
rorl
lea
jp
das
xlat
aam
xor
adc
mov
repnz
push
mov
or
push
es
sub
mov
pop
push
mov
lods
or
pop
dec
out
jns
mov
dec
decb
mov
fsubrl
sbb
repz
pop
sub
xor
dec
xchg
fs
adc
cltd
nop
xchg
punpckldq
pop
cwtl
mov
cmp
or
add
pop
repz
repz
adc
ja
jno
lock
sbb
shll
out
es
xchg
dec
in
jmp
mov
out
les
xor
add
inc
push
inc
mov
fistl
mov
jo
jle
jb
je
rorb
fxch
and
bswap
mov
ffreep
and
out
mov
sbb
fiadds
jmp
mov
cltd
xorb
mov
mov
jg
mov
push
cmp
mov
jnp
orb
mov
je
insl
insb
test
sbb
fmuls
aaa
mov
and
cmp
xchg
xchg
or
sub
push
and
adc
fstl
lock
ja
adc
in
sbb
aad
fistl
fldenv
mov
add
mov
adc
or
dec
aaa
rorb
insl
mov
fsubr
push
in
jle
mov
mov
imul
push
lds
push
in
psrad
in
mov
jns
movsl
daa
mov
xchg
lea
jge
fnstenv
pop
in
add
pop
int
rol
pop
jle
adc
fsubrs
jg
xchg
movsb
sub
movsl
xchg
stc
ficompl
movsl
jmp
xchg
test
lret
mov
add
adc
push
pop
imul
dec
shll
in
mov
pop
lods
pop
jecxz
iret
lcall
sahf
pop
aam
add
cmp
aam
cltd
and
daa
stos
inc
jmp
xchg
cmp
shrl
jne
lcall
lcall
add
dec
inc
insb
scas
jns
mov
aam
cmp
push
inc
gs
mov
add
les
mov
outsb
test
mul
and
pop
stos
lret
imul
dec
or
adc
lds
les
in
xor
or
gs
mov
fnop
in
mov
or
iret
mov
cmp
mov
rol
pop
xchg
jae
sbb
mov
fsubr
mov
pop
push
xchg
dec
int
adc
imul
or
arpl
mov
dec
cmpsl
inc
lods
test
fdivrs
or
sahf
mov
xchg
mov
xchg
xchg
test
mov
sub
jge
out
mov
add
mov
sahf
scas
xchg
mov
sti
mov
sbb
sub
ror
lret
fiadds
das
mul
out
sub
inc
ljmp
xchg
inc
stos
jge
leave
xchg
cmpsb
shll
out
cmpsb
dec
mov
pop
mov
mov
pop
mov
repnz
mov
repz
push
pop
mov
fmul
repnz
lahf
iret
int3
lret
adc
test
subl
jg
fwait
aad
pop
adc
jge
sbb
testl
push
sbb
fisubl
xchg
xchg
jp
mov
pop
pop
pop
in
sbb
add
mov
dec
out
xor
test
inc
or
xor
cli
inc
jnp
add
cmp
arpl
outsb
push
daa
push
cli
aad
mov
jo
push
ret
lret
ljmp
jg
addb
movsl
inc
lahf
cmp
orb
push
insb
xchg
cmp
loop
fwait
jno
mov
leave
push
scas
pop
out
jmp
pop
iret
mov
repz
imul
addr16
stos
mov
popf
cld
xor
sub
jmp
xchg
insl
jns
jge
mov
jae
test
sub
test
je
add
sbbb
lock
test
jl
inc
loop
mov
mov
addr16
mov
repz
lahf
ror
xchg
andb
adc
cmpsb
scas
mov
and
mov
xchg
popa
push
sbb
jo
dec
mov
or
shr
in
stos
cmp
in
popa
out
cmpsb
mov
sarb
iret
loopw
xor
xor
xchg
scas
fsub
shrl
inc
push
idivl
aam
cmp
and
out
push
add
mov
lds
dec
aaa
sahf
ret
shl
hlt
and
mov
lods
push
mov
and
inc
pop
jge
push
enter
lods
jno
fisubrs
or
stc
cmp
je
sub
pop
xor
es
mov
jne
xlat
nop
cmp
jo
lea
out
jnp
pop
lahf
jne
adc
loop
fcomip
int3
test
mov
in
dec
mov
mov
loope
ficoml
push
cmc
cmp
sub
cmp
add
push
and
fildll
movsl
js
int3
into
jae
lahf
push
sbbl
hlt
sbb
in
loopne
lcall
in
xor
push
mov
xchg
jo
imul
add
cs
xor
arpl
mov
xor
inc
push
mov
stos
cmc
es
call
je
out
sub
pop
mov
cmc
pop
rorl
cwtl
xchg
push
mov
dec
js
mov
xor
fwait
inc
mov
add
testb
hlt
xlat
loop
iret
fisubs
in
gs
mov
lods
int
fstpt
stos
adc
or
inc
cmc
jb
mov
les
mov
jo
jb
scas
imul
cmp
push
in
je
push
or
jge
decb
jle
add
cwtl
jge
jno
push
or
sbb
xchg
push
sbb
int
lock
bound
lock
pop
inc
add
mov
sti
fsubrs
sbb
ljmp
and
inc
add
add
and
and
arpl
push
jne
movsl
inc
fld
ss
add
mov
lcall
cmpsb
test
jne
mov
cmp
movb
mov
xchg
mov
jl
mov
lds
xchg
lea
mov
lret
shrb
or
pop
pop
rorl
and
dec
arpl
xchg
arpl
jb
push
and
or
mov
test
dec
jg
or
mov
sbb
xor
mov
hlt
lahf
gs
cmp
and
imul
inc
int
xchg
dec
out
inc
or
pop
movsl
or
pop
lcall
or
mov
jmp
popa
cmc
ljmp
imul
pop
test
cld
mov
xchg
or
data16
pop
popa
rclb
inc
call
push
test
push
add
push
sbb
daa
push
lock
test
cmp
rcr
cmp
xchg
popf
ror
jno
mov
adc
test
aas
popa
mov
jbe
mov
dec
repz
sbb
jge
push
inc
iret
jo
and
imul
lea
adc
fwait
shrb
pushf
jle
gs
js
shrb
cmc
je
das
jmp
loopne
fwait
adc
jg
cmp
jnp
dec
mov
clc
xchg
stos
in
xchg
mov
ja
test
cmpsb
jns
dec
adc
arpl
fidivrs
cmp
stos
xor
int
fs
push
mov
adc
and
inc
sbb
bound
inc
mov
mov
aam
xor
cmp
add
inc
mov
jp
idivb
sub
mov
adc
loop
add
dec
mov
add
push
es
sti
out
pop
aam
stos
cli
aad
mov
ret
or
jge
mov
mov
dec
jnp
adc
mov
cmp
mov
pop
xlat
inc
pop
aaa
ret
and
call
xlat
jnp
es
xchg
out
jnp
jmp
sbb
es
cmp
cmp
outsb
and
into
sti
aad
pop
js
mov
setb
lods
pop
mov
jl
inc
fdivrs
test
dec
lret
inc
andl
aad
mov
adcl
or
mov
add
sbb
or
nop
xor
add
popf
add
and
mov
cmp
pop
jmp
sbb
xor
data16
in
out
cwtl
dec
adc
punpckhdq
nop
movsl
in
mov
pop
loope
inc
push
mov
mov
hlt
std
ret
sbb
inc
inc
push
push
das
and
stos
jno
shlb
outsb
frstor
jns
and
insb
xchg
sarl
addb
data16
test
dec
pop
push
cmp
mov
mov
push
enter
leave
sbb
fnstcw
push
sar
cwtl
jb
inc
jns
mov
jo
rorb
inc
leave
pop
fcomps
movw
inc
mov
sbb
fldenv
es
ficoml
int
mov
adc
add
pop
push
mov
sbb
mov
inc
daa
ret
cld
jmp
mov
and
cs
stos
adc
add
jne
bound
push
test
jne
push
mov
int
enter
mov
xchg
in
or
gs
jns
mov
or
repz
popa
out
not
jmp
inc
ds
sub
xchg
xchg
cmc
in
jp
stos
sbb
add
cmc
sbbl
repz
xorb
test
sub
push
or
pop
rclb
mov
and
scas
out
or
ja
mov
xchg
mov
pop
add
scas
es
rorb
adc
sbb
push
mov
xchg
pop
push
mov
aas
jo
repnz
stc
aam
rcll
dec
pop
aam
adc
mov
std
aas
mov
jns
sbb
mov
mov
ja
cmp
push
into
jg
dec
outsl
xor
fidivl
push
ljmp
test
fiaddl
loope
fisubl
outsb
or
jge
cmp
jle
dec
dec
adc
cmpsl
jle
mov
call
jg
push
ret
dec
dec
outsl
fs
pop
test
fsubrl
mov
push
sub
pop
push
daa
fs
ret
test
sub
adc
inc
popf
push
xchg
les
dec
int3
push
push
dec
cltd
pop
sub
enter
mov
stc
xchg
call
loop
or
dec
stc
fidivl
mov
out
popa
in
arpl
loopne
je
xchg
std
loop
loopne
in
or
mov
sbb
shll
pop
push
jbe
and
ret
gs
add
pcmpeqw
rorb
xlat
scas
dec
cmp
push
jo
add
add
xlat
lahf
xchg
sbb
mov
lcall
in
inc
rcll
into
scas
das
add
sub
mov
pop
int
mov
dec
push
adc
sbb
gs
sarl
pop
lods
mov
rcrb
or
mov
movaps
jnp
jge
adc
and
sti
loop
cmpsl
sub
lea
mov
sbbl
std
test
xchg
mov
notb
cmpsl
xlat
outsl
sbb
cld
mov
lods
and
inc
push
dec
scas
fcoms
lret
pop
pop
mov
xor
adc
mov
sbb
jo
sbb
add
lret
lock
jo
jae
fsubr
js
or
pop
out
xchg
xorb
jge
mov
xchg
pop
xor
push
push
pop
insl
lcall
add
jl
dec
dec
gs
mov
cmp
push
push
inc
lea
mov
in
rclb
push
xchg
scas
test
int3
add
icebp
sarb
dec
push
pop
lret
test
insb
cli
cmpsb
adc
dec
mov
inc
mov
adc
or
lea
xchg
cwtl
sbb
aas
rorl
sahf
mov
pop
aad
push
cmpsl
in
inc
sub
mov
fidivrl
xchg
sti
rol
jno
pop
insl
xor
mov
in
inc
sub
jb
pop
jnp
xchg
push
inc
out
sbb
fldl
repnz
xorl
js
pminub
inc
stos
add
mov
insl
adc
push
xchg
scas
mov
xor
xchg
sub
mov
push
test
pop
sub
orl
aad
daa
push
sti
mov
or
push
fildll
das
add
inc
adc
mov
add
pcmpeqw
pusha
mov
sub
out
les
push
addr16
ficompl
pusha
imul
stos
sarl
outsb
sbb
mov
test
aaa
popa
je
xchg
inc
testl
aaa
scas
bound
into
sub
nop
sahf
and
out
adc
jbe
filds
lret
mov
fidivs
out
pusha
data16
loop
pop
stc
aam
add
pop
push
dec
fwait
sub
es
divb
mov
scas
divl
mov
jb
movsl
sub
mov
repz
push
push
test
cmp
jmp
mov
decl
xchg
out
push
mov
gs
iret
lahf
jp
iret
sarb
stos
inc
pop
shll
neg
sub
add
bound
popa
inc
adc
xchg
out
dec
popa
jg
shrb
nop
pop
mov
or
mov
mov
and
gs
out
push
roll
mov
jbe
inc
add
aas
rcrl
adc
or
inc
xchg
mov
pop
add
rorb
lea
stos
cwtl
mov
xor
dec
pop
xlat
cmp
mov
mov
in
mov
scas
add
scas
mov
jge
jmp
mov
mov
rolb
mov
nop
fbld
aam
lods
mov
iret
insl
das
jnp
dec
mov
mov
cmp
ret
psubsb
inc
xchg
loop
lahf
aas
orps
and
andl
ret
fistpll
scas
mov
or
xorb
push
out
and
jnp
call
testl
or
dec
sub
stc
test
add
xchg
in
inc
xor
pop
mov
or
fcompl
cmp
xor
sti
xchg
ret
pop
shlb
in
push
lret
mov
subl
push
sbbl
inc
xor
stc
xor
cmpb
call
decl
sahf
mov
pop
jg
xchg
cmc
mov
inc
pop
inc
mov
fsubrs
out
xchg
fistpll
gs
add
sbb
das
cwtl
mov
ret
sbb
es
bound
push
jp
jecxz
add
scas
mov
and
push
lcall
cmpsl
std
add
mov
inc
xchg
add
inc
and
push
test
dec
xlat
xchg
mov
mov
cmp
movsb
cli
std
and
out
fdivr
pop
or
mov
xor
push
inc
cwtl
xor
test
vpsrlw
pop
push
sub
test
pop
sub
dec
clc
cmc
inc
dec
inc
inc
sahf
sbb
popa
nop
frstor
icebp
jl
ret
repnz
popl
mov
ds
dec
aam
fmuls
ficompl
dec
adc
jbe
jnp
add
pop
push
out
mov
sbb
lcall
ss
ss
sbb
das
push
into
mov
aam
pop
aas
cwtl
or
cmp
insb
sub
sti
mov
push
jns
lret
pop
inc
clts
jae
call
je
mov
lods
sub
sti
les
imul
dec
stos
rolb
pushl
or
cmp
cmpsl
mov
aad
ljmp
dec
mov
cmp
bound
add
jns
hlt
xor
scas
popa
leave
in
and
cmpl
icebp
mov
add
mov
jne
xlat
push
sarl
imul
xor
sbb
sbb
jmp
loope
xchg
stos
mov
out
cmp
add
popf
movsl
inc
outsb
and
adc
sbb
bound
hlt
lcall
insl
mov
rep
es
leave
mov
iret
stc
sub
inc
dec
cmc
ret
cmp
inc
push
push
out
mov
jg
mov
xchg
in
adc
pop
pminsw
jmp
jo
lahf
popa
repnz
loopne
es
push
icebp
adc
mov
mov
ret
mov
mov
jecxz
sbb
bound
repz
out
js
push
mov
movsl
xchg
xor
mov
mov
fs
ret
xchg
xchg
jno
aad
mov
roll
sbb
imul
imul
sub
pop
int3
sub
push
ret
sbb
xlat
jbe
pop
in
mov
cwtl
jns
stc
sti
push
lods
push
out
cmpsl
sti
loop
mov
inc
mov
rcrl
inc
scas
movsl
sub
lods
outsl
adcb
xor
mov
or
loop
int
data16
xor
orl
loop
int3
popf
mov
sbb
aas
ljmp
in
cmp
and
xor
scas
mov
xor
ljmp
repnz
jp
xor
popa
outsl
jnp
jle
push
hlt
std
js
pop
sub
mov
daa
and
and
ss
mov
scas
loope
or
push
lds
jo
xchg
nop
imul
stc
out
xor
mov
cmp
xchg
pop
jle
loop
sbb
mov
pop
cmp
rcrb
test
jle
out
push
in
or
stos
xchg
out
sbb
lods
dec
imul
push
call
xor
cmpb
cmp
inc
sbb
mov
je
sbb
stos
sub
pop
pop
pop
sub
sbb
shlb
jbe
sub
imul
movsb
rcl
mov
push
cmp
imul
das
jge
push
into
je
into
mov
cld
icebp
out
call
imul
dec
aaa
add
push
mov
sub
pop
lcall
jmp
scas
push
jb
jp
xchg
mov
lods
les
insb
fists
sbbl
xor
icebp
dec
push
aaa
negl
pop
xchg
cmc
pop
mov
bound
fadd
dec
and
adc
or
shrl
sarb
in
xor
int3
push
repz
jmp
and
cmp
and
aas
xor
outsl
sub
mov
aad
dec
inc
and
lea
out
shrd
stos
jbe
ja
pop
ret
jae
push
or
lret
fstp
mov
sub
pop
test
add
xchg
loopne
dec
es
out
or
xchg
inc
cmp
cwtl
sti
cmp
jl
enter
xchg
mov
addr16
mov
adc
or
clc
in
sub
cmp
dec
pop
adc
push
retw
mov
pusha
xchg
insl
inc
out
notl
add
mov
pop
cmp
mov
xchg
inc
cwtl
ljmp
imul
jg
scas
jns
jecxz
fstl
mov
xchg
or
mov
cltd
adc
out
sarb
mov
lret
idivl
mov
call
adc
dec
repnz
dec
mov
xlat
stc
lea
in
jge
call
push
fsubrs
fdivrl
dec
rorl
adc
xor
ret
in
xchg
insb
sub
xorl
ficoms
aas
jg
or
cmp
ljmp
pop
loope
adc
cwtl
xor
jnp
and
jmp
repz
or
popa
jge
inc
sbb
xchg
popf
fimull
mov
aad
fs
pop
mov
add
lock
jo
push
dec
inc
add
in
out
add
fcom
repz
into
outsb
pop
mov
rclb
rcr
ror
loop
cmpsl
outsl
mov
mov
sub
test
pop
sub
jne
jnp
and
fbstp
test
jno
test
ret
adc
cld
jae
push
and
in
lcall
xchg
xchg
xchg
outsl
jle
mov
dec
cld
cmp
adc
xorb
mov
push
clc
add
cmp
or
std
sarl
and
sub
fwait
test
stos
icebp
xchg
mov
xchg
sahf
sti
adc
jg
pusha
and
mov
int
rcll
into
ljmp
test
xchg
mov
and
sub
jl
pop
or
loop
jge
das
add
mov
jae
shl
mov
mov
cmp
rcrl
sahf
movsb
mov
out
and
or
mov
stos
iret
and
outsb
movsl
xor
imul
shrb
inc
test
ret
or
xchg
sub
cmp
jae
das
arpl
cmpsl
cmp
sub
cwtl
sub
lcall
rolb
dec
cs
jmp
lahf
mulb
xchg
mov
inc
dec
push
hlt
lock
push
mov
aaa
sti
in
clc
clc
inc
add
cwtl
push
pop
mov
fisubrs
xor
lcall
jge
push
cltd
pop
inc
scas
inc
arpl
mov
lret
test
xchg
pop
push
repnz
add
add
adc
sub
frstor
mov
lret
inc
xchg
ret
push
add
testb
inc
cli
fs
arpl
inc
out
jne
cmp
mov
xor
out
jns
or
xchg
jns
inc
movsl
ror
fnsave
inc
out
aad
inc
test
fldl
inc
test
lea
dec
add
leave
fxch
fistps
in
jbe
rcrl
jo
fwait
mov
push
pop
in
jb
int3
or
ljmp
notl
shlb
mov
popa
ret
add
je
inc
jbe
lods
inc
mov
xor
rorb
pop
add
sub
daa
pop
push
add
push
out
pop
sarb
loop
roll
jo
add
mov
inc
ds
jecxz
inc
movsl
nop
push
cmc
data16
jle
in
scas
cmpxchg
inc
cmp
jle
xchg
loopne
mov
in
in
cwtl
and
pop
mov
pop
ss
in
das
addr16
mov
push
cmpb
std
out
or
mov
push
jl
adc
sub
sub
mov
add
pop
adcb
pop
adc
mov
add
mov
lods
mov
mov
imul
xlat
loop
xor
xchg
outsb
add
divb
mov
jmp
sar
push
sub
adc
jge
out
repz
jne
pop
mov
aad
cmp
xor
mov
xchg
leave
mov
lock
addl
mov
mov
inc
mov
test
out
inc
xor
repz
jl
and
fsubrl
add
mov
es
mov
ficomps
lcall
fldenv
ja
test
mov
repz
push
out
xchg
mov
imul
jmp
xor
shl
mov
daa
pop
pop
mov
add
in
xchg
and
push
mov
dec
mov
adc
mov
loop
aam
das
loope
jo
lods
jae
mov
insl
fs
sbb
idivb
shrb
fmull
rcrb
lcall
jae
pop
insl
in
sbb
mov
stc
stos
into
les
sti
lret
nop
insb
mov
cltd
mov
and
repz
cmp
ficoms
scas
push
subb
xchg
faddl
mov
ret
mov
jbe
je
fs
jge
es
inc
imul
popf
push
push
xchg
jae
push
in
xor
add
icebp
xor
mov
sbb
lods
rol
rolb
repnz
pushw
adc
out
mov
adc
int
mov
fldenv
pop
inc
aad
or
ljmp
adc
popa
iret
cmpsb
mov
jae
xchg
inc
and
sub
sbb
cmp
int
movsb
int
adc
pop
pop
insb
aas
jl
mov
pop
dec
mov
outsb
push
push
pusha
mov
jae
imul
dec
ficompl
inc
les
mov
je
testl
shrb
pop
out
jo
cli
pop
mov
loopne
or
sub
iret
rolb
xchg
jnp
or
fnstcw
jl
pop
push
cmpsb
add
es
ljmp
dec
outsl
xor
xchg
sub
push
adc
mov
lock
pop
cmp
inc
cld
popf
jp
adc
dec
jae
jae
adc
xor
out
stc
gs
or
add
adc
test
and
imul
push
xchg
push
enter
aad
jecxz
add
jb
stos
testb
shll
xchg
movsb
mov
dec
addb
jnp
adc
mov
sbb
rcl
cwtl
iret
std
fildl
aaa
aaa
stos
jmp
inc
mov
pop
xchg
pop
sarl
mov
push
fbld
sti
jns
fisubrs
scas
or
adc
lock
xchg
das
cmp
cmp
mov
mov
xorb
mov
push
lret
pop
sbb
push
je
leave
push
inc
sbb
xchg
dec
mov
test
bound
cltd
add
loopne
add
dec
xchg
incb
mov
arpl
fwait
out
pusha
sahf
mov
out
or
inc
shll
lret
pop
fbld
mov
mov
or
mov
cmpsb
cwtl
and
adcb
pop
out
push
movsb
je
scas
dec
jns
incl
dec
repz
mov
movsl
sub
fnstsw
xor
ljmp
xor
inc
out
sti
sbb
ljmp
dec
mov
push
stos
adc
cmc
shr
push
pop
mov
mov
mov
or
push
jne
dec
cmp
pop
faddl
inc
scas
xor
scas
mov
xchg
ret
dec
inc
lods
scas
jl
mov
testl
inc
orl
lcall
shll
push
popf
mov
push
repnz
in
and
fldl
sbb
insl
cmp
rorb
and
adc
loop
cs
xor
mov
test
mov
notb
cmc
lods
sub
lods
pop
xor
cmp
div
sahf
xor
mov
push
rcll
jge
ljmp
out
xor
or
or
or
mov
add
xor
push
and
hlt
movsb
bound
mov
cwtl
xchg
out
rcr
test
push
mov
mov
lret
ja
shr
nop
xor
loopne
sub
popa
dec
lock
pmaxsw
sbb
inc
incb
push
push
mov
bnd
mov
sahf
lret
xchg
testb
dec
mov
push
data16
mov
sub
std
mov
xor
movsl
sarb
sbb
jle
xchg
or
sarl
pushf
jg
rcll
adc
test
mov
pop
jne
and
jge
int3
xchg
repnz
dec
fdivrl
and
loope
sarb
mov
pushf
ficoml
stos
cmp
cs
ss
stc
loope
fildll
rol
or
mov
pop
adcl
mov
or
or
jns
cmp
gs
arpl
or
imul
mov
scas
xlat
cmpsl
jecxz
cmp
into
pop
out
lods
inc
daa
icebp
cmp
cmp
imul
dec
xor
test
cmp
lods
sbb
mov
ja
rclb
push
rcrb
icebp
cmp
idiv
mov
mov
sub
imul
inc
int
mov
lods
loopne
add
aam
icebp
xchg
in
daa
push
pop
sahf
ret
jmp
bound
mov
or
cmp
lahf
inc
das
xor
push
and
xor
cwtl
pop
jb
nop
lret
fidivs
sbb
outsl
fs
ljmp
push
stc
insb
in
xchg
je
dec
sahf
lahf
enter
cli
mov
in
push
xchg
fldenv
fistpl
pop
stc
mov
sub
jge
jmp
sahf
ljmp
and
dec
popf
sbb
push
fmul
mov
or
xor
mov
out
jo
adc
test
mov
clc
insl
jo
pop
out
mov
or
mov
add
shlb
pop
xchg
rorb
mov
cld
rorl
movsb
add
inc
inc
mov
pop
jne
inc
mov
stos
sbb
mov
sbb
in
hlt
inc
push
mov
loop
mov
pop
jg
push
cmpsb
xor
rol
aas
and
popa
xchg
rcll
xchg
imul
jmp
sub
pop
aaa
xor
cmp
pushl
mov
das
out
adc
mov
mov
inc
imul
mov
test
in
inc
push
inc
mov
add
push
sub
insl
fdivl
mov
cmpsb
xchg
fsub
mov
inc
fwait
lods
pusha
repz
cmpsl
fs
mov
or
fiadds
mov
mov
xchg
jno
out
and
sbb
inc
add
adc
sub
xchg
xchg
les
loope
aas
mov
enter
pop
cld
push
out
int
insl
out
adc
es
out
insl
movl
daa
scas
lret
jbe
xchg
scas
in
push
in
dec
or
add
dec
call
cld
fnsave
cmp
out
dec
inc
fs
arpl
jb
push
aaa
out
cmp
dec
dec
sub
in
push
sbb
popa
mov
mov
int
std
mov
jae
cmp
adc
iret
cwtl
cld
in
les
xor
mov
test
out
pop
sti
mov
xchg
movsl
jnp
bound
enter
dec
adc
push
ret
imul
arpl
xchg
lret
in
aad
dec
xchg
lret
push
xor
sti
loopne
aaa
dec
push
cmpsl
jmp
pop
aad
addr16
stos
dec
inc
xchg
xor
xor
outsl
add
loopne
imul
mov
pusha
mov
out
pop
clc
sbbl
push
jb
in
jns
add
or
push
push
sub
jno
pop
testl
adc
pushf
push
push
fdiv
cmp
inc
call
sar
mov
inc
loop
dec
dec
adc
imul
add
push
cs
lcall
and
icebp
popl
fs
repnz
inc
jno
jl
clc
subl
adc
out
jb
ret
xor
cli
lcall
dec
inc
movsb
or
mov
and
xor
in
pop
mov
xor
and
pop
dec
sub
es
dec
adc
jnp,pn
lock
mov
ja
and
into
push
sub
dec
pop
iret
pop
add
loopne
inc
add
mov
mov
xchg
xor
inc
mov
sbb
fwait
pop
jns
pop
push
pop
daa
push
mov
dec
fidivl
cmp
cwtl
jnp
jecxz
mov
shlb
jnp
cmp
jne
pop
aaa
das
add
stc
loopne
push
pop
adc
in
mov
dec
popa
into
into
jmp
addb
pop
pop
fs
addr16
mov
std
or
inc
inc
push
mov
mov
pop
inc
scas
sbb
call
cld
in
outsl
cs
ljmp
call
cwtl
aam
and
mov
jb
mov
mov
xchg
pop
add
mov
cmpsl
pop
jno
mov
test
xor
andb
iret
scas
lret
out
call
outsb
jp,pt
stc
jle
movsl
es
and
imull
mov
mov
push
repnz
push
out
add
and
je
sbb
mov
sbbb
adcl
js
je
adcl
imull
test
loopne
pusha
insl
and
dec
mov
out
xor
setae
icebp
fnstsw
int3
push
int3
pop
dec
mov
fiadds
in
or
sbb
popf
data16
pop
mov
add
sub
lds
and
pop
xor
inc
pop
out
ljmp
sub
ljmp
stos
in
mov
sbb
cmp
jb
testb
add
stos
pop
aaa
sbb
add
dec
xchg
lahf
jge
lea
cmpsl
mov
jle
add
mov
frstor
je
popa
incl
pop
dec
and
fisubs
push
jmp
dec
idivb
ljmp
dec
cwtl
jmp
jns
jmp
lods
stos
out
and
sahf
or
stos
inc
push
mov
leave
hlt
adc
das
addr16
push
cmpl
ss
and
push
aad
loopne
jns
xor
pushf
stc
push
subb
iret
pop
mov
jbe
cmc
jl
mov
push
add
sub
movsb
dec
inc
std
add
inc
xchg
inc
xchg
pop
jb
dec
ret
lret
xor
mov
mov
dec
scas
add
jno
xchg
movsb
pusha
mov
xchg
ret
and
fidivrs
jp
clc
dec
and
aam
inc
or
cld
adc
lea
and
mov
inc
lahf
adc
cli
loope
xchg
add
pop
xchg
and
je
cs
enter
add
std
jne
and
movhps
pushf
out
insb
stos
cmpsl
ficomps
arpl
test
fwait
stc
xor
aad
and
xchg
and
or
fs
aas
jno
fmul
arpl
pop
push
sub
cmpsb
sti
add
and
push
icebp
je
mov
pop
out
dec
jo
add
cmp
outsl
idivl
mov
enter
sub
gs
inc
pop
pop
sbb
cmp
inc
jae
mov
add
xlat
ds
sbb
test
in
or
mov
daa
inc
and
out
test
adc
or
mov
dec
stos
xchg
cmovs
mov
push
jns
cmc
pop
mov
mov
or
xchg
lcall
decl
mov
imul
adc
addb
mov
iret
cmp
test
and
sbb
xchg
cwtl
inc
movsl
xor
sbbb
sti
sbbl
xchg
jge
adc
negl
mov
cmp
xchg
add
or
add
lock
inc
lods
pusha
fsubrs
bound
mov
pop
fsubl
jp
rorl
xor
sbb
lock
add
das
fldl
pop
mov
cmp
lcall
fisubrs
roll
and
test
sbb
sbb
mov
js
or
xor
jnp
push
xchg
daa
inc
pop
or
inc
cli
fistpll
inc
aam
dec
jg
jmp
mov
push
outsb
push
xchg
shlb
mov
mov
adc
aad
sbb
inc
jle
jbe
xchg
fdivs
pop
xor
js
dec
mov
mov
lock
push
inc
addr16
jl
loop
test
or
into
lods
cwtl
push
cld
pop
add
mov
insl
xor
outsl
mov
add
xor
mov
push
push
test
xor
xor
xor
mov
fisttpll
mov
iret
insl
dec
xor
xor
jle
nop
xchg
mov
pop
pusha
push
sarb
ljmp
add
movsb
lock
adc
xlat
aad
xchg
cmp
xor
and
dec
xlat
xchg
sub
negl
ja
imul
and
popf
push
jl
sub
js
or
daa
and
adc
xor
subl
lock
sbb
sub
repnz
xorb
xchg
icebp
outsl
addr16
inc
adc
mov
sub
push
cmp
pop
lock
fcom
adc
sahf
mov
arpl
mov
jae
mov
push
ficoms
mov
push
mov
lods
rorl
sbb
pop
pop
push
mov
test
mov
xchg
cltd
cmpsl
sub
adc
jmp
mov
mov
dec
aas
xchg
hlt
and
rcr
fisttpl
mov
dec
movsb
insb
lret
pop
cmc
mov
jg
or
jecxz
daa
femms
inc
mov
mov
mov
into
dec
pop
das
xor
lret
xor
mov
cli
in
dec
xchg
or
out
lea
outsb
push
jbe
pushf
data16
add
mov
mov
aam
mov
stc
mov
mov
and
jno
jne
mov
push
xchg
rcrb
cmc
pop
lods
dec
jae
iret
add
or
jmp
mov
hlt
jns
or
mov
xor
leave
sub
lret
or
xchg
sbb
sbb
fcmove
rcl
or
sbb
mull
mov
inc
inc
jl
ficompl
mov
sbb
mov
mov
std
jmp
mov
lcall
fnsave
lock
or
rol
or
aas
popa
out
or
push
jo
cli
cmp
mov
sti
add
fwait
mov
lret
and
jbe
push
rcrl
stos
push
addr16
jmp
pop
fxch
jae
std
mov
mov
fidivl
out
pop
mov
in
rolb
test
iret
cmpsb
xor
test
sahf
jo
mov
sub
pop
das
insb
add
sub
fiaddl
cmp
addr16
push
mov
in
jmp
mov
clc
cs
jg
aad
cmp
jno
data16
mov
cs
push
mov
mov
jno
ss
jo
add
imul
iret
in
repnz
xchg
mov
cmp
inc
lcall
lods
push
push
sub
outsl
fsubr
mov
mov
out
add
jl
or
sub
cltd
aad
jle
jo
mov
filds
ss
cmp
sub
subl
cs
push
add
in
jg
jg
nop
ds
sub
cmc
stos
lea
xor
in
jl
dec
lods
rcrl
dec
jl
or
psubw
pop
push
and
orb
xor
in
pop
test
das
imul
mov
push
cld
mov
jae
adc
cmc
adc
and
dec
pop
fbstp
cltd
pushf
xor
gs
or
push
adc
scas
or
push
jne
out
push
push
mov
mov
xchg
ja
test
daa
test
and
cmp
cli
adc
mov
mov
and
stos
dec
gs
imul
mov
sub
and
jo
pop
orb
push
fs
adc
sub
jb
xchg
rcr
popf
ficoms
and
inc
and
daa
fucomp
inc
cmp
outsb
dec
test
call
jbe
imul
mov
inc
xchg
hlt
dec
enter
outsl
mov
jecxz
xorl
add
mov
dec
push
xchg
out
les
inc
xchg
int3
hlt
lcall
fs
mov
in
lods
cld
lret
push
lods
ret
stos
fwait
adcl
fcmovbe
sub
push
cmp
sbb
adc
jecxz
lret
cmp
sbb
andl
inc
mov
adc
xor
sub
aas
imul
push
lods
xor
adc
sbb
mov
jge
pop
push
inc
leave
add
add
out
mov
shlb
sub
lods
jb
popa
pop
mov
or
aam
pop
and
jbe
jmp
mov
sarl
adc
mov
inc
popf
sbb
enter
push
add
mov
insl
xchg
fmul
mov
adc
cmp
jecxz
adc
add
fcmovb
or
mov
mov
popf
ds
lea
push
xchg
add
ficoms
clc
mov
lods
or
mov
pop
insb
dec
sbb
jne
pop
rol
lock
std
pop
pop
add
pusha
sub
stos
stc
inc
int
movsl
jl
popa
inc
jmp
xor
stos
sbb
sub
mov
or
or
out
dec
icebp
pop
add
jo
popa
inc
cmc
push
mov
mov
or
popa
add
pop
cmp
test
pop
lret
jmp
orl
pusha
cltd
push
pushf
xchg
jmp
mov
inc
aaa
lock
pushf
out
sbb
cmp
rorl
dec
out
cltd
es
cld
pop
bound
jne
loop
mov
mov
and
inc
pop
fs
data16
jmp
jp
xor
push
jns
xchg
pop
pop
sub
inc
add
shlb
push
pop
in
pop
fistpl
mov
or
jge
sbb
mov
and
cwtl
bound
push
shll
insb
pop
push
inc
jno
ret
sbb
mov
nop
or
das
add
sti
fs
mov
lret
xor
call
push
dec
pop
and
mov
divl
inc
lret
aam
ds
repnz
testb
inc
pop
enter
push
cmpsl
push
jne
add
pusha
mov
push
jge
and
adc
mov
insb
and
xor
inc
sub
dec
ja
xor
pop
and
adc
jbe
mov
jmp
loope
adcl
mov
addl
jg
arpl
xor
jno
jmp
xchg
test
xchg
scas
mov
test
jbe
jg
stc
shr
add
cmpsl
addl
aam
dec
ror
pop
pushf
call
outsb
cmc
mov
mov
je
mov
dec
inc
sti
loopne
cs
cmpsl
cwtl
je
inc
fdiv
filds
hlt
dec
shrb
rorl
xor
push
out
lods
mov
mov
cmc
sahf
mov
cli
es
xchg
repz
fidivl
xor
rcl
dec
outsl
mov
jno
test
push
push
dec
push
inc
push
stc
sbb
push
push
adc
out
add
add
adc
popf
push
sbb
xor
add
jg
sub
push
cmp
mov
jge
hlt
jge
sbb
in
aad
push
lods
push
add
inc
mov
add
sarb
add
in
push
inc
in
pop
push
jnp
shl
lahf
xchg
insl
sbbl
jno
in
add
mov
pop
and
push
into
adc
sldt
pushf
cs
sub
add
mov
cltd
mov
adc
adc
push
orb
pop
xchg
shll
dec
imul
xor
ljmp
out
rorl
out
int3
sbb
pop
fldz
js
inc
mov
mov
push
and
add
cwtl
sub
test
mov
addr16
jb
lock
in
test
and
mov
outsl
icebp
into
add
addl
cmp
jge
sub
imul
or
xor
add
cmc
in
or
mov
jecxz
pop
push
vdivpd
add
ret
lcall
or
xchg
xchg
jno
jmp
pop
out
inc
es
inc
add
nop
out
add
in
ret
icebp
insl
sub
test
lea
dec
sbb
std
cmpsb
adc
imul
or
cld
inc
sub
mov
ss
mov
adc
jp
pop
jno
sti
add
lcall
shll
icebp
sub
loope
addr16
jne
sub
mov
icebp
sbb
mov
cmp
scas
mov
and
sub
stos
xor
out
jp
pop
pusha
jo
sbb
adc
pop
jbe
or
adc
and
jne
xchg
mov
jb
and
mov
scas
sbb
pop
pop
mov
out
mov
lcall
mov
pop
incb
mov
inc
sti
xchg
mov
std
lahf
xor
inc
cli
sub
push
jmp
inc
cld
fs
cmpsl
lea
leave
dec
jge
push
pop
adc
lds
int3
out
test
push
popa
sbb
dec
mov
iret
mov
mov
mov
dec
cmp
lea
mov
call
xchg
in
pop
add
push
inc
mov
iret
lods
push
mov
mov
xlat
les
test
loopne
sub
or
neg
mov
adc
or
cmp
or
pop
jl
popa
cmpsb
sbb
sti
xor
js
cwtl
or
dec
and
je
das
xchg
fsts
clc
dec
imul
fwait
cltd
movsb
mov
xchg
and
inc
mov
mov
push
lahf
pushf
pop
ja
push
aas
and
les
adc
insb
pop
gs
lea
outsl
dec
xchg
sbb
cmpl
mov
sub
or
push
sub
adc
hlt
mov
or
mov
xchg
and
xchg
xor
bound
cmp
bound
leave
out
repnz
daa
xchg
jbe
cli
sub
xchg
or
scas
shll
mov
cs
xchg
xor
fdivrp
adc
jae
push
xor
into
add
loopne
loope
dec
loopne
leave
mov
xchg
ds
jl
aam
dec
icebp
xor
shrl
fwait
out
shlb
iret
sub
jecxz
loopne
hlt
push
out
imul
cmpsb
mov
mov
mov
lret
or
add
cmp
fldcw
jns
pop
dec
adc
stos
and
psadbw
leave
aad
loopne
leave
das
jo,pn
mov
adc
lret
bound
vpmulhuw
ss
mov
xchg
fs
mov
or
arpl
adc
and
decl
sti
and
sahf
xchg
cmp
xor
in
ja
xor
mov
sbb
js
mov
xchg
dec
pop
pop
xchg
or
xor
imul
push
push
inc
mov
lods
adc
mov
adc
lea
sub
rolb
sub
mov
cmp
cmpsb
push
popa
ret
outsl
mov
mov
bound
sbb
pop
je
and
sbb
inc
hlt
dec
mov
ja
imul
adc
insl
aam
sub
mov
add
mov
adc
mov
and
xor
fdivrp
fiaddl
call
dec
test
pop
insl
sarb
les
iret
nop
imul
pop
mov
jb
arpl
subb
fidivrl
mov
xor
inc
cld
or
add
les
mov
or
icebp
push
shrl
aam
mov
aaa
rolb
xor
inc
and
popa
imul
je
movsb
cmp
push
mov
push
and
fsub
and
movsl
pop
ja
shrl
push
or
icebp
pop
jbe
aas
popa
loop
shl
mov
cmp
mov
sub
xchg
cwtl
adc
pop
div
pushf
push
es
mov
add
in
mov
outsl
xchg
sub
arpl
ficompl
xchg
mov
or
jl
add
mov
into
mov
mov
pop
fdivrp
daa
jae
sub
sbb
xchg
dec
xchg
sbb
leave
cmpsb
sbb
push
mov
mov
push
jb
sbb
in
or
rclb
loope
sub
dec
cmp
shrb
pop
ja
jge
push
inc
loopne
mov
dec
movsb
and
push
push
inc
mov
sbb
nop
loop
fs
lock
stos
scas
cwtl
daa
lea
dec
hlt
or
mov
mov
lods
xchg
das
jo
aam
cmpsb
inc
mov
mov
cmp
add
sbb
popf
mov
popf
imul
add
mov
add
dec
ljmp
sbb
mov
in
xor
or
cli
push
movsb
inc
push
lea
in
mov
inc
popa
xchg
cmpsb
jnp
cld
pop
imul
in
stc
icebp
or
jnp
mov
ds
sub
mov
jo
dec
mov
and
js
out
mov
mov
das
sbbl
dec
nop
or
xchg
es
sbb
and
mov
test
mov
movsb
xor
in
pop
popf
and
cltd
sahf
sub
and
mov
test
or
sbb
call
ss
cli
shlb
sub
inc
mov
push
sub
test
fwait
push
pop
or
jns
mov
fwait
push
or
mov
stos
sarb
add
pop
fwait
or
jne
pusha
inc
lods
adc
in
xorl
fldenv
mov
mov
push
outsb
xor
mov
loope
aad
insl
out
es
loopne
shll
sub
sub
cmpsl
lahf
out
mov
xchg
xchg
add
fsts
jnp
sub
test
cmc
push
pop
stos
or
mov
cmpsl
or
sarb
dec
aam
adc
sub
movsb
repz
inc
add
call
icebp
mov
mov
je
jo
mov
push
xchg
fistl
mov
lret
or
adc
movsl
pop
inc
out
mov
push
cs
movsl
jns
icebp
adc
adc
add
xor
std
jmp
shlb
sub
inc
scas
push
mov
jl
mov
sub
cmp
dec
push
mov
stc
jmp
cmp
dec
jmp
ret
jge
sbb
pop
and
shll
jnp
adc
mov
shll
insb
fs
std
lods
ljmp
pop
mov
into
pop
jne
mov
push
shll
sahf
movsb
imul
xchg
or
inc
dec
cli
in
into
cmp
push
cmpsb
xlat
jle
dec
rcrb
test
sub
scas
shr
mov
leave
fbstp
testl
inc
arpl
pusha
xlat
aam
gs
rcrl
push
dec
outsl
jnp
dec
add
jmp
dec
pop
mov
xor
inc
pop
mov
das
xchg
mov
sarb
fisubl
rcrb
and
sub
insl
cs
fstps
int3
pop
popa
fidivrl
xlat
in
xchg
sbb
fidivs
push
int3
test
dec
mov
es
mov
mov
xorps
mov
insb
cmc
jne
stos
or
fwait
cmp
test
aam
mov
call
dec
hlt
ret
ljmp
pop
adc
jo
mov
out
aaa
mov
test
test
cmp
dec
pusha
pop
and
cmpl
push
in
push
int
rcll
mov
pop
adc
add
lcall
divl
xor
cli
call
in
xchg
or
mov
fadd
mov
scas
call
inc
jp
dec
hlt
sub
pusha
iret
lods
sub
xor
into
or
popa
dec
jnp
in
outsl
in
dec
dec
jg
push
cmp
aam
lret
inc
out
icebp
pop
scas
mov
cli
jp
jecxz
movsb
pop
stos
add
add
mov
ret
movsb
shll
or
hlt
lock
test
cli
pop
dec
push
frstor
mov
jmp
les
push
fwait
or
dec
aas
add
inc
sub
fwait
pop
jbe
mov
subl
test
dec
xchg
jo
cmp
pop
loopne
xchg
subb
ret
add
or
pop
enter
xor
lret
pop
jmp
hlt
sub
jecxz
stos
and
or
sbb
into
shl
mov
dec
call
jb
push
or
pop
fcompl
dec
pop
add
or
fsts
jne
mov
sahf
aas
add
mov
pop
jae
pop
or
jne
sbb
repz
xor
pop
icebp
ss
fldpi
push
sbb
cmp
in
orl
aas
lock
arpl
xor
jmp
imul
lcall
out
out
inc
cs
pusha
in
pop
jne
jae
or
mov
mov
mov
jnp
xchg
inc
dec
adc
pop
sbb
xorb
or
orl
lcall
mov
loop
ljmp
sbb
mov
or
mov
mov
lret
sbb
das
or
fisttpll
adc
sbb
sub
mov
pop
and
stos
jae
xor
cmpsb
sahf
arpl
sbb
popf
or
inc
pop
into
fs
inc
outsl
cmp
xchg
loope
push
mov
cli
iret
pop
repnz
add
cmc
mov
arpl
lretw
lds
loope
lds
mov
rcr
lret
mov
test
and
xchg
push
dec
sub
movsl
xor
adc
xor
mov
push
stos
ret
imul
fmull
aaa
out
scas
cwtl
les
dec
or
incl
xchg
mov
xchg
leave
dec
inc
or
cltd
test
je
xor
adc
dec
repnz
mov
jb
cmc
pop
in
call
jae
test
sub
pop
pusha
cmp
pop
cwtl
push
xor
add
dec
dec
mov
cli
xchg
xor
insl
xor
inc
jo
lock
sti
mov
popf
mov
in
std
cmp
rorl
fwait
out
aam
popa
mov
repnz
andb
stos
lods
inc
call
cmovbe
push
ficoms
dec
loopne
imulb
testb
xor
sub
lods
push
out
pop
mov
xor
pop
push
xchg
mov
addl
mov
repz
jb
mov
fsubrl
mov
sub
stos
sti
adc
test
xchg
nop
mov
fdivr
mov
ljmp
xchg
inc
mov
dec
iret
pop
sahf
lods
push
test
xchg
popa
mov
movsb
mov
push
nop
movsl
cmpsl
out
aaa
or
mov
dec
cmpsl
pop
sub
data16
dec
add
rorb
testl
xchg
adcb
inc
insb
sbb
pop
cli
jecxz
push
cwtl
pop
stos
ds
cmp
cmp
push
dec
imul
lods
xchg
enter
repnz
lret
inc
lcall
hlt
hlt
repz
and
pop
sub
inc
mov
dec
sti
push
lahf
mov
mov
push
inc
push
dec
je
mov
outsb
dec
push
and
dec
cli
pop
mov
stc
out
ljmp
xor
les
sub
ljmp
push
popf
test
nop
bound
into
fcomip
aas
and
adc
mov
pop
sub
xchg
pusha
add
mov
test
test
mov
je
lret
sub
enter
ret
stc
cmp
inc
test
test
mov
movsl
cmp
sahf
out
jle
lods
aas
fsubrs
fcompp
mov
in
xlat
mov
roll
std
jle
daa
and
xchg
in
or
fnstcw
mov
ljmp
dec
adc
pushf
inc
je
in
add
in
mov
pop
pop
dec
icebp
out
stos
rol
inc
cmp
lret
mov
sub
int3
sbb
sbb
xor
inc
jne
imul
and
nop
xchg
push
and
xor
mov
or
imul
add
test
cmpsb
jno
add
push
in
jp
or
sbb
add
incl
add
cld
lret
in
lret
sbb
pop
pop
lods
xchg
cmp
and
mov
in
out
clc
dec
inc
push
fsubrl
adcb
sahf
lds
jb
mov
loopne
sbb
dec
addr16
test
cmc
and
fwait
loope
xor
rclb
aam
mov
lds
and
cs
scas
jbe
test
push
mov
aam
cmp
add
insb
or
pop
add
fistpl
rcrb
inc
xchg
and
ljmp
sti
xchg
and
or
or
or
fidivs
popf
cmp
fwait
lods
fmul
pop
out
cmp
mov
cmp
lret
mov
fdivrs
mov
pop
or
jns
or
xchg
nop
mov
aad
mov
pushf
call
test
jmp
out
jmp
cli
mov
aad
rclb
sub
mov
cld
loope
mov
imul
sub
lret
sahf
add
xor
dec
aad
in
jge
push
aam
jl
inc
sbb
jp
pop
clc
xchg
cmpsl
scas
mov
sbb
mov
clc
adc
dec
dec
outsb
lahf
je
mov
xor
jno
rclb
rcll
and
ja
jmp
inc
xor
into
or
ret
add
fabs
or
dec
mov
mov
notb
enter
fwait
mov
and
into
pop
push
jo
or
add
bound
sbb
movb
or
cmp
lcall
push
mov
cmp
mov
xchg
orb
xlat
mov
push
inc
xor
mov
orb
fidivrl
push
cmp
adc
iret
push
mov
mov
fwait
or
leave
popf
xor
int
and
add
xchg
xchg
int
jns
faddl
jae
orl
hlt
xor
sbb
mov
inc
lds
outsl
cmpsb
adc
jge
xor
cwtl
xchg
out
insl
adc
jp
out
jmp
neg
jb
pop
and
pusha
or
aad
imul
mov
xor
stc
push
and
pusha
dec
jecxz
out
fs
xlat
fsubrl
pop
adc
movsl
in
lods
sarb
addr16
subb
cmp
lds
mov
test
add
sbb
jge
fnsave
ss
push
and
add
cli
or
pop
push
ljmp
insb
mov
dec
push
mov
leave
fdivl
pop
mov
outsb
out
cmp
clc
mov
or
and
or
in
sbb
int3
and
mov
pop
pop
imulb
mov
jb
sti
mov
pop
jno
xor
inc
or
out
and
iret
leave
mov
push
or
neg
jne
les
pop
xorb
sbb
mov
xchg
cmp
jp
push
xchg
sbb
ljmp
loop
pushf
mov
push
inc
lock
jg
adc
stos
les
sbbl
imul
pop
adc
dec
stos
push
or
lock
push
nop
mov
cld
loope
dec
xlat
and
sub
decb
dec
lods
jge
lcall
test
hlt
jns
or
or
pop
shl
pop
mov
out
cltd
cs
lods
lcall
test
and
and
fst
xor
dec
ret
or
imul
stos
xor
cwtl
mov
xor
pop
push
inc
scas
fisubl
lcall
mov
or
xchg
cs
adc
pushf
xor
or
mov
push
gs
dec
sar
mov
dec
jbe
outsl
and
pop
and
lret
xor
pop
xchg
dec
sbb
lret
filds
cwtl
mov
push
or
jg
sbb
pop
sub
test
xchg
push
or
dec
push
xchg
in
and
sbb
nop
dec
in
sahf
popa
xchg
shll
int
mov
dec
mov
mov
jns
sbb
sbb
inc
pop
in
push
imul
cmp
add
mov
pop
jns
and
jecxz
push
loop
push
iret
jo
sar
cmc
inc
dec
out
sbb
in
and
cmpsb
mov
mov
int3
movsb
xor
jl
int3
stc
cld
clc
xchg
xorl
mov
and
ja
mov
es
cmp
xchg
pop
and
push
mov
and
outsl
leave
arpl
xchg
stc
or
imul
xor
push
xchg
enter
pop
call
sbb
movsb
cmp
imul
add
js
xchg
adc
shll
dec
mov
lds
push
inc
lret
insl
pusha
icebp
ret
push
stos
push
sbbb
mov
test
inc
je
add
fwait
cmp
cs
clc
enter
jmp
push
adc
icebp
push
iret
xchg
cmpsl
movsb
mov
repz
scas
cmp
mov
sbb
mov
lcall
dec
imul
icebp
int
pop
dec
in
adc
push
push
fidivrl
adc
lods
loope
fs
push
bound
add
mov
sbb
ret
cwtl
xchg
fldt
cmp
sbb
repz
jle
sub
loop
fmul
push
adc
dec
xchg
add
xadd
mov
aas
xchg
mov
xor
pop
or
int
sub
push
pop
mov
cmpsb
pusha
xchg
add
imul
or
ret
xchg
inc
add
xchg
test
jbe
add
out
dec
xlat
sbb
push
jb
ja
cmp
push
or
lret
retw
ss
xchg
mov
popf
outsb
cld
adc
ds
push
test
inc
push
gs
in
and
loop
mov
mov
xchg
ds
mov
dec
std
mov
xchg
sbb
push
fdivrl
scas
cmpsl
and
hlt
lcall
mov
xlat
or
jb
mov
lds
out
aad
fnstenv
add
jecxz
or
pop
inc
dec
mov
push
mov
sbb
icebp
or
stos
push
pop
mov
mov
daa
lock
loop
loop
gs
add
jo
add
gs
sub
movsw
inc
das
cmp
or
or
out
into
xchg
inc
sbb
ds
cli
pop
add
cmc
jg
dec
cld
enter
imul
lahf
jbe
hlt
pop
sub
in
push
aaa
pop
xor
out
sbb
cli
cmp
or
out
or
fnstsw
push
js
out
arpl
ror
add
inc
shll
sub
sub
lods
mov
repnz
movsb
in
dec
imul
ret
mov
sti
insl
push
or
xchg
mov
xlat
cmp
push
inc
pop
add
aas
das
ret
or
nop
and
leave
sbb
fisubrl
cltd
popf
push
push
movsl
cmp
pop
xchg
add
mov
lret
sti
add
mov
xor
jle
add
and
inc
outsb
lcall
xchg
adc
pop
sbb
or
and
aam
mov
mov
stos
ja
mov
and
mov
out
jnp
dec
mov
ret
add
cmp
mov
mov
jecxz
test
pop
loopne
pop
popf
pop
lcall
mull
stos
fwait
sub
test
stc
shl
mov
adc
in
add
loopne
in
mov
add
push
in
rcll
popa
mov
mov
and
sub
and
jp
or
sub
mov
add
inc
mov
sbb
jae
cltd
inc
cmp
pop
push
sub
mov
test
out
push
ficoms
push
pop
gs
mov
repz
pop
sahf
cmpsb
lea
push
outsl
dec
push
mov
push
cmp
loopne
add
fistl
daa
in
xchg
js
add
mov
push
pop
lahf
mov
inc
fsubrl
push
cmp
jle
inc
cmp
add
xor
jmp
ret
std
mov
add
dec
pop
mov
scas
adc
not
sbb
in
adc
jb
mov
xor
cli
inc
int
mov
push
xor
test
inc
fdivrp
je
cmp
adc
sar
shrb
imul
adc
mov
cmp
jmp
divl
add
mov
dec
insl
pop
or
shrb
shll
popf
lret
add
imul
dec
arpl
test
fdivrs
stos
out
arpl
in
mov
outsl
lahf
cmpsl
sbb
lret
push
mov
cs
faddl
arpl
sbb
ja
lret
pop
xchg
call
inc
push
lea
mov
js
das
lret
sub
loope
push
jmp
pop
fnstcw
sahf
js
push
fcompl
and
lds
fnsave
mov
mov
sub
push
pop
sub
insl
movsl
ret
mov
pushf
push
pop
push
arpl
negb
mov
mov
and
incl
cmp
lret
sub
sbb
rolb
imul
ja
pop
add
jo
lea
jns
mov
dec
fs
jl
repz
lret
enter
es
in
sub
lds
out
loope
adc
loopne
div
mov
test
clc
pop
lahf
pop
mov
andl
push
xlat
shrl
test
and
jl
mov
sar
inc
inc
into
rcrl
sub
popa
pop
push
add
lahf
jae
lds
mov
adc
mov
add
add
push
pop
fildl
rcrl
aaa
shll
mov
mov
mov
outsl
mov
xchg
dec
out
jno
es
cmp
adc
aam
cmp
jbe
iret
fwait
xchg
lcall
push
adc
call
mov
js
mov
pusha
sub
out
mov
in
dec
add
aam
outsl
sbb
out
and
dec
sbb
cmp
pop
push
imul
loope
jne
jbe
clc
xchg
dec
xchg
push
pop
push
dec
pop
xor
mov
sub
inc
push
in
mov
mov
popa
xchg
jecxz
cmp
sarl
mov
fdivl
test
push
xchg
jle
out
dec
jg
jo
data16
sub
add
jmp
and
xor
inc
loope
xchg
push
addr16
pushf
sti
xchg
lea
ret
dec
arpl
adc
gs
movsl
jno
bound
clc
leave
es
repnz
pop
xorb
aaa
xor
stc
cmp
adc
cmp
mov
push
xchg
inc
xchg
imul
jle
lock
mov
push
sub
mov
gs
clc
sub
push
lret
mov
push
mov
adcb
or
pop
hlt
aaa
test
xchg
out
add
push
cmp
sbb
cs
in
sbb
mov
addr16
lds
add
imul
jo
cld
jns
xchg
mov
movsb
mov
aam
sbbb
sahf
stos
arpl
cmp
cmpl
fidivrl
in
pop
fisubrl
std
mov
outsl
jecxz
and
scas
jo
pop
sti
fisubrs
fldcw
lods
add
jae
sub
xor
mov
clc
pop
movsb
mov
jl
mov
jns
orl
xor
mov
inc
dec
push
iret
test
mul
stc
shlb
loopne
cltd
iret
jns
pop
add
fistpl
lds
mov
test
testl
loopne
dec
lahf
dec
add
pop
cs
sub
ljmp
or
push
sub
jne
add
xchg
cwtl
add
mov
xlat
leave
test
inc
pop
and
pop
pop
add
in
push
inc
push
loope
sbb
jb,pt
in
push
sub
daa
dec
outsb
dec
and
fxch
lea
mov
into
sub
je
mov
stc
int
js
inc
mov
mov
add
cmp
and
mov
xchg
es
mov
es
sub
pop
mov
movsl
les
fstp
cmpsl
in
jns
sub
push
cltd
movsl
arpl
jnp
test
imul
sarl
and
js
dec
pop
fnstenv
and
jno
into
arpl
cmovo
mov
mov
dec
out
add
xchg
call
sub
jg
sbb
fisubrl
popf
dec
cmp
sbb
fidivrs
das
jg
adcb
sbb
xor
add
push
adc
mov
je
js
cltd
pop
test
fcoms
sub
adc
gs
mov
mov
insb
aaa
mov
sbb
iret
daa
pop
out
lds
test
sbb
test
repnz
out
mov
mulb
and
pushf
shr
jns
in
idivl
pop
insl
pushf
adc
aas
fs
mov
sbb
pushf
test
out
or
outsl
outsl
dec
jbe
aam
cmc
scas
xchg
mov
popa
fdivr
imul
xchg
mov
inc
cmc
aaa
sub
mov
ds
jo
sub
leave
call
repz
rol
inc
sub
es
in
xchg
aam
repz
push
ja
scas
push
mov
ficompl
push
pushf
je
jne,pt
movsl
ljmp
jl
adc
push
lcall
xor
dec
in
jge
push
push
je
adc
push
shlb
data16
rolb
sti
pop
cmp
inc
aam
jle
mov
cmp
icebp
cwtl
das
cmp
cmp
inc
mov
int3
in
dec
adc
add
jne
jle
and
icebp
leave
enter
imul
xchg
icebp
sub
or
sub
mov
cmp
and
mov
imul
jmp
loope
add
adc
fbstp
sbb
mov
sub
dec
jmp
and
xchg
xchg
out
int
add
mov
mov
shrl
aaa
cmpb
lret
sub
outsb
les
push
mov
xor
shl
mov
mov
aas
lcall
stos
inc
push
sub
xor
mov
lods
sub
cmp
cwtl
pusha
xlat
jge
hlt
daa
aas
pop
incl
fisttpll
lret
xor
and
stc
sarl
cltd
insl
jb
dec
bound
mov
sbbl
jle
cmp
lret
and
sti
fwait
xchg
mov
push
into
xor
or
inc
sub
push
push
in
sbb
jl
adc
das
push
push
lahf
shr
mov
jp
cmp
adcl
push
mov
push
ficompl
pop
lea
or
adc
arpl
lea
push
cmp
add
sbb
sbb
sbb
repz
cld
movsb
subl
ret
sub
adc
pop
and
bnd
xlat
into
rolb
mov
sub
jo
jns
xor
insl
push
negb
ret
sbb
jge
jg
pop
inc
inc
push
sbb
jp
insb
fildll
mov
out
das
mov
iret
inc
or
lods
rolb
imul
mov
sbb
data16
lock
lcall
inc
push
push
mov
pop
mov
mov
pop
ljmp
xchg
fs
ss
ja
xchg
sahf
sbb
je
lds
aad
out
mov
jl
jle
add
push
pop
or
sbb
test
pop
enter
movsl
ss
mov
add
lds
sub
mov
and
push
fistl
or
es
xor
jnp
mov
enter
dec
or
mov
and
cmp
cs
imul
or
cmp
ret
and
into
jnp
cltd
int3
pop
cmpsb
nop
jmp
cmp
daa
sub
pusha
inc
movb
sub
mov
mov
mov
cmp
popf
imul
fstl
cltd
push
sbb
dec
cmp
test
and
adc
push
push
ret
pop
pusha
addr16
jmp
jae
subl
mov
outsl
xor
fnstcw
dec
cli
ljmp
jle
loop
adc
push
ret
inc
popf
add
mov
mov
push
inc
dec
cmpsb
push
jle
or
xchg
or
js
cmpsl
shll
int
push
add
mov
enter
cld
es
shlb
mov
sub
mov
xchg
js
imul
lds
mov
sahf
arpl
sub
imul
sub
stos
cmp
dec
aam
sbb
jb
mov
xor
inc
sbb
sbb
test
into
mov
les
sti
pop
jo
xor
stos
mov
out
lret
or
bound
pop
cs
mov
into
sub
dec
aam
lock
push
pop
sbb
xor
or
xchg
in
dec
call
pop
or
subb
add
and
mov
mov
pop
push
cmp
xor
out
out
loop
inc
adc
cmp
cmp
sbb
arpl
insb
adc
gs
sub
xor
leave
add
in
inc
enter
mov
push
or
in
mov
je
aaa
jbe
jnp
cmpsb
repnz
push
jmp
add
jmp
iret
mov
push
outsl
mov
xchg
daa
js
jne
adc
add
fistl
out
aas
cmp
fisttpl
mov
fldenv
add
jge
test
mov
lock
mov
test
in
aaa
mov
neg
adc
jmp
or
mov
insb
fistps
adcb
mov
add
cltd
scas
insl
aad
lock
mov
mov
lods
dec
dec
mov
pop
add
xor
mov
and
xlat
adc
pop
daa
in
call
or
shll
aaa
jne
test
mov
inc
fcoms
push
out
push
xor
sub
ds
scas
cltd
call
fldln2
mov
jle
nop
dec
adcl
aaa
cmpsl
jp
es
mov
pop
aad
nop
push
sub
jns
push
popf
mov
notb
mov
xchg
pop
pushf
ljmp
fiadds
inc
jmp
sub
pusha
mov
and
outsb
dec
cmpsb
and
mov
inc
fwait
outsb
cld
test
daa
jns
add
in
insb
mov
ds
and
inc
push
test
es
dec
fnsave
scas
imul
ljmp
adc
iret
rcll
shrb
mov
dec
and
pop
jns
adc
mov
inc
inc
push
jne
mov
js
push
fdivrs
repnz
adc
mov
push
dec
int3
ret
cld
sbbl
enter
jo
push
fdivs
ds
rol
sarb
dec
sub
sti
ja
sub
cli
pop
cmp
mov
sub
dec
sub
js
lret
dec
jbe
sbb
push
rorl
sub
fdivr
repnz
loop
xor
lea
adc
dec
xchg
in
lds
jo
stc
inc
push
xor
nop
xchg
ret
lcall
ret
cmpsb
in
movsb
mov
rorb
fstps
mov
pushf
cltd
mov
dec
nop
mov
cmp
imul
cmp
std
push
imul
popa
in
sbb
xchg
sub
xor
stos
insl
pusha
sub
scas
pop
xor
fcompl
or
mov
inc
in
push
scas
dec
jbe
shrb
lock
mov
je
dec
push
pusha
fistps
decl
data16
ret
popf
xchg
cmp
jnp
mov
lret
loop
dec
lcall
push
jp
and
rorb
icebp
xor
dec
add
adc
xchg
jnp
fisubrs
xor
push
sub
sub
jnp
xchg
popf
add
sbb
jle
cmpsb
data16
or
push
mov
and
mov
inc
cmp
sti
add
repnz
pop
mov
jle
sub
out
xchg
aad
xchg
fadd
sti
and
cli
add
pop
pop
aas
outsl
bound
loope
adc
lcall
dec
rorb
ret
repnz
xor
xor
repz
mov
jl
fnstcw
cmp
into
jl
mov
imul
lret
ljmp
add
lahf
inc
lea
push
aad
jns
xchg
mov
out
popf
and
xchg
push
mov
push
xchg
mov
dec
and
jmp
fs
dec
lret
and
sahf
sub
push
call
inc
sbb
call
scas
push
xor
stos
popa
sbb
xchg
mov
xchg
adc
add
mov
sbb
scas
xchg
sbb
xor
cmpsb
mov
mov
pop
in
mov
mov
sbb
ja
xchg
sbb
push
fs
mov
push
cmp
fucomp
sbb
aas
movsb
jle
mov
insl
pop
mov
enter
cmp
sub
pusha
imul
test
jae
lods
fs
ja
orl
push
into
cwtl
notl
push
rcll
cs
popa
inc
cwtl
cwtl
jg
lods
jmp
sar
sbb
sbb
push
xlat
je
jmp
fadds
cld
or
orb
push
outsb
outsl
int
pop
mov
cld
arpl
in
cltd
mov
pop
pop
mov
add
mov
pop
in
out
test
mul
test
sub
js
mov
es
neg
add
jle
push
push
mov
js
fwait
je
jle
insl
sub
sbb
sti
outsl
rcr
out
int3
repz
jl
mov
movsb
pop
add
jecxz
sbb
ret
add
movsl
outsb
inc
or
stos
jae
mov
cltd
pop
pop
fimuls
cmp
scas
test
xor
movsl
inc
popf
scas
mov
cmp
xchg
ja
pop
push
cmp
add
mov
xor
lock
or
xchg
jmp
and
sti
and
mov
fldenv
jns
mov
int
je
xchg
scas
sbbb
cmp
aas
pop
lahf
insb
jnp
push
repz
and
or
jo
test
xlat
scas
adc
cmp
mov
in
mov
xlat
xchg
cmpsl
adc
pop
je
mov
sub
add
arpl
subl
stos
push
inc
cld
sbb
xorl
pop
xchg
incl
push
fnstenv
mov
xchg
jae
xor
sbb
ljmp
add
dec
pusha
jge
add
jle
pop
flds
jecxz
mov
jns
scas
dec
insl
xlat
cmp
jne
xor
mov
xchg
leave
fs
loopne
ds
add
add
lahf
test
pop
mov
jl
jbe
or
push
bound
mov
jle
push
inc
jp
and
in
lock
push
jbe
push
loopne
jg
pop
je
add
pop
mov
out
clc
iret
pop
sub
inc
mov
mov
inc
pusha
ja
movsb
or
push
and
cli
xor
xchg
xor
add
inc
jp
push
repz
push
xchg
les
xor
rcrb
sbb
stc
ljmp
adc
paddusb
cmp
xchg
sub
insl
dec
xor
inc
pop
pop
mov
test
and
push
xor
cli
push
stos
mov
scas
icebp
insl
je
jne
pop
test
rcrb
pusha
addr16
mov
popa
divl
popa
pusha
mov
pop
aas
dec
or
mov
jmp
add
sbb
xchg
sbb
cltd
cmc
into
lret
rolb
xchg
scas
subl
sbb
mov
cmp
sbb
stos
outsb
xchg
sbb
xchg
popf
addr16
popw
mov
pop
or
mov
mov
mov
subl
push
cmp
mov
xchg
mov
xchg
jb
imul
hlt
push
lret
adc
sub
fistpll
pop
aaa
cs
imul
and
and
and
ljmp
imul
pop
out
ret
pop
int
rorl
inc
inc
adc
cmp
cmp
sbb
idivl
adc
pop
mov
cwtl
mov
xchg
insb
lods
gs
outsb
sub
push
and
or
dec
push
dec
jbe
pop
adcl
movsl
sub
jle
inc
fildll
sbb
xchg
pushf
pop
push
push
stos
adc
dec
jb
jmp
js
in
movsb
mov
mov
in
in
in
sbb
mov
inc
xor
imul
dec
addr16
sub
cmp
dec
xchg
jecxz
jg
and
sub
loope
push
jl
hlt
cmp
mov
scas
jmp
scas
add
ja
inc
cmp
movl
mov
imul
pop
add
jb
or
xor
ret
hlt
dec
cld
ljmp
sbb
mov
shrb
sbb
aam
out
pop
or
lods
xchg
fimull
outsl
mov
mov
arpl
jnp
cltd
sbb
jmp
push
xchg
mov
imul
fxch
mov
loopne
and
fs
je
inc
fdivl
push
add
mov
idivl
jnp
out
sbb
jno
test
adc
xchg
inc
xor
xchg
mov
rclb
lea
inc
fstl
in
cmp
les
inc
push
call
popa
push
push
or
xor
lret
rcr
mov
cmc
movsl
add
jo
push
orb
mov
into
aaa
in
add
sbb
loope
jp
add
nop
mov
adc
pop
stc
adc
jg
or
gs
mov
bswap
add
add
in
xchg
or
dec
repz
outsb
gs
and
sarb
cwtl
loopne
cmovo
fcoms
jno
mov
aaa
or
movsl
scas
push
ret
ret
cmpb
adc
insb
adc
pop
cmp
adc
and
xor
cld
and
jbe
xor
sbb
mov
lret
push
scas
rolb
cltd
xor
ret
imul
lret
movb
fcompl
inc
mov
pop
enter
pop
add
sub
fs
loope
mov
cld
loop
in
lock
mov
stos
xchg
add
mov
pusha
pop
mov
test
pusha
inc
lret
jnp
add
sti
into
or
fcomps
jnp
cltd
jns
gs
rcr
mov
jbe
lock
adc
js
adc
mov
std
sub
push
xchg
mov
adc
fmulp
ret
xlat
imul
and
enter
cmpsl
push
das
lds
popf
inc
iret
aas
adc
je
adc
xchg
lds
outsl
jecxz
mov
inc
fs
mov
je
push
push
xchg
add
dec
out
sbb
hlt
ret
push
std
mov
ret
jmp
jg
orl
push
mov
daa
adc
sbb
mov
shlb
pop
lcall
iret
xor
and
les
jge
std
movsl
ret
pop
push
sahf
loopne
pop
lock
or
jmp
str
out
fisttpl
dec
jecxz
inc
pop
mov
fwait
or
add
push
sbb
cmc
daa
sub
add
jg
addr16
dec
dec
repz
mov
aas
and
inc
pop
or
sub
xchg
adc
out
adc
stos
stos
cwtl
imul
lahf
lock
push
xor
jle
fnstcw
aaa
add
mov
in
inc
or
jmp
out
pushf
ret
sbb
push
xchg
sbb
add
dec
lds
pop
pop
mov
cmp
aaa
fs
mov
ss
shl
add
mov
cmpsl
out
rcr
in
mov
xchg
xor
popa
dec
and
cmc
pop
out
call
stc
lret
xchg
inc
aaa
mov
adc
cltd
push
sub
mov
lret
movsb
lret
jmp
inc
sub
mov
sub
sub
add
jbe
fnstcw
stc
xchg
lods
popa
xchg
mov
aam
or
enter
jbe
test
loop
out
sub
mov
mov
clc
sub
loope
and
lods
in
cli
mov
mov
orl
mov
mov
adc
mov
fs
xor
mov
lods
ljmp
roll
mov
or
das
push
pop
push
lock
test
xchg
dec
ljmp
xor
daa
ja
clc
test
sub
mov
sbb
jo
xchg
mov
lret
dec
xchg
pop
xchg
aaa
and
int3
and
fdivs
xorb
mov
jne
jno
and
sub
mov
ficompl
int
pop
jo,pt
testb
xor
clc
es
stc
sbbl
or
enter
cs
push
scas
movsb
jp
sti
mov
add
nop
mov
cwtl
xchg
mov
incb
icebp
xchg
xchg
mov
loope
loopne
aaa
aam
andl
mov
xor
pop
enter
mov
xlat
and
adc
loopne
add
fldenv
mov
int
pop
je
jo
adc
jns
jne
pusha
in
dec
ficomps
fwait
out
shrb
sahf
push
movsl
sub
dec
cmp
add
fnstenv
adc
xlat
loope
pop
mov
dec
pop
jg
cmp
fcomp
repz
mov
out
aas
push
jle
lret
ret
adc
inc
adc
xor
fucomip
outsb
pop
mov
imul
mov
and
popa
xor
stos
out
cmpsb
add
pop
adc
add
jle
in
ds
mov
pop
cld
lret
jp
push
imul
mov
sarb
xchg
and
cmp
xchg
jno
mov
stos
pusha
mov
test
das
mov
adc
inc
xlat
xor
dec
push
and
mov
fs
dec
mov
sti
cmpsl
rclb
js
mov
dec
nop
add
cmp
scas
fisubrs
adc
add
nop
je
pop
dec
rorl
jecxz
push
sti
mov
mov
and
or
int3
jns
lahf
xor
subl
rdpmc
add
cmp
inc
adc
sub
push
pop
fsts
sub
xchg
cmp
cld
jl
pop
xor
pop
scas
roll
jbe
fidivl
add
std
pop
popf
dec
ja
xlat
or
mov
dec
mov
out
dec
xor
inc
mov
adc
add
add
cmp
mov
int3
jmp
in
ficomps
jne
dec
fldcw
int3
imul
out
mov
push
popf
cmp
xchg
insb
aad
cmp
jp
xchg
push
mov
dec
inc
pop
adc
push
fwait
sub
movl
and
fs
push
mov
leave
int3
movsb
xor
xchg
cmp
add
test
movb
sub
sbb
mov
ret
aaa
psubusw
hlt
cmp
cwtl
and
or
xchg
mov
cmp
test
push
adc
aad
popf
pushf
cmpsl
xchg
int3
dec
out
fnstcw
push
out
lahf
and
in
cmc
jne
xor
sub
lret
loopnew
mov
push
pushf
ljmp
repnz
inc
imul
lea
add
pop
push
orl
insl
std
fs
pop
jl
jae
and
mov
mov
dec
scas
jne
sbb
lahf
mov
or
packsswb
sub
addr16
sar
jo
imul
fwait
xchg
je
mov
stc
popa
mov
repnz
arpl
jb
jbe
mull
pusha
mov
scas
shrl
sub
add
fisubrs
cltd
jl
mov
decl
inc
add
xor
in
or
mov
push
and
pop
ja
insb
xor
test
and
adc
pop
into
sub
pusha
or
mov
push
or
xor
mov
push
xchg
fldlg2
addr16
repz
jno
dec
inc
je
cld
jmp
dec
and
jg
popa
sub
cmp
lods
pop
rclb
add
insb
adc
movsl
mull
pop
jo
pop
pushl
lods
push
jle
out
xor
fiaddl
mov
cmp
dec
es
sbb
mov
push
outsl
mov
fildl
sub
clc
testl
xor
popa
out
dec
inc
cmp
mov
shlb
sub
sbb
jnp
addr16
fnstcw
dec
cltd
xor
sbb
jp
sahf
fistl
jae
nop
fwait
negl
mov
mov
xchg
jl
imul
push
lret
mov
mov
mov
out
aas
adc
mov
bound
pop
or
in
into
cmp
and
push
mov
adc
add
imul
cmp
jns
jns
fnstsw
xor
icebp
mov
mov
ss
sub
cmp
inc
push
imul
out
jb
call
mov
jns
inc
lods
adc
xor
dec
cwtl
mov
sub
repnz
fwait
cmp
lret
push
aad
hlt
lret
adc
push
cmpsl
sti
push
inc
dec
out
jno
cmc
jge
lret
mov
jl
pop
test
xchg
sub
and
sub
aad
dec
push
push
sub
mov
jns
mov
fimull
gs
mov
mov
out
cmp
iret
mov
cmc
test
cmp
sahf
test
in
dec
and
clc
in
xor
mov
inc
dec
pop
rorb
mov
or
hlt
dec
cli
xlat
iret
xchg
cld
inc
in
sbb
ljmp
inc
mov
outsb
aam
sbbl
rcr
cmpsl
rcll
incl
pop
cvttps2pi
das
xor
fs
inc
loopne
or
ljmp
inc
mov
mov
adc
mov
sbb
cltd
sub
out
adc
mov
mov
add
loope
and
outsb
mov
in
push
in
lods
push
mov
movsb
into
sub
imul
jle
push
pop
push
in
xchg
lret
clc
adc
in
xchg
sbb
pop
inc
in
stos
ror
inc
or
mov
movsl
pop
sbb
daa
sub
aaa
aad
fistl
rolb
or
xor
jae
clc
jb
inc
mov
push
adc
adc
shrl
loopne
cmp
or
mov
sbb
cmp
in
jns
dec
iret
dec
xchg
dec
adc
sub
aam
std
imul
repz
lea
cmpl
xchg
lret
mov
push
das
lahf
leave
mov
inc
sub
mov
rorl
pop
inc
je
enter
outsl
shlb
fildl
and
lret
mov
popf
mov
insb
add
jnp
addb
adc
push
test
sbbb
jo
lds
mov
jp
mov
xor
mov
movsl
iret
jmp
popa
jb
call
test
dec
xchg
out
cmpsb
add
out
in
inc
pop
push
mov
jg
in
inc
push
jbe
inc
jb
les
cli
and
dec
rol
adc
jle
and
insb
pop
ss
sti
xor
add
dec
xor
add
loopne
fdiv
popf
hlt
clc
mov
pop
jecxz
xlat
in
add
popa
dec
test
or
lahf
push
xor
and
push
dec
and
ss
faddl
jbe
sti
fcomp
mov
mov
jge
adc
cmc
push
mov
lcall
lret
js
ds
and
inc
addr16
sarl
jg
pop
lret
cmc
int
adc
push
js
sub
in
cmp
lret
add
aad
xlat
jne
and
leave
mov
out
pusha
mov
cmp
mov
sub
push
mov
mov
pushf
xchg
mov
inc
push
pop
into
lea
xchg
jmp
mov
mov
daa
or
ss
mov
pop
xchg
cmp
stc
mov
mov
divb
jl
imul
sbb
push
insb
inc
sub
clc
mov
in
stos
mov
fwait
dec
mov
mov
mov
mov
cltd
cwtl
xchg
jge
xor
pop
repz
insb
decl
adc
mov
or
scas
jle
aad
jbe
out
cmpsb
or
popl
jnp
lock
mov
call
and
push
sarb
pop
leave
mov
and
add
out
enter
or
out
mov
lret
repnz
mov
sahf
int
gs
daa
data16
jb
or
mov
pop
xchg
notb
gs
rcl
pop
mov
xchg
xor
xor
testl
push
data16
push
fdivr
or
push
xchg
aam
imul
dec
test
mov
cli
xchg
and
jns
jge
xor
in
xchg
inc
xor
inc
clc
dec
mov
xchg
dec
enter
mov
cltd
loopne
xchg
adc
inc
insl
ret
push
push
mov
and
mov
dec
and
loop
mov
sub
lret
ret
gs
nop
inc
insl
sub
ret
inc
adc
dec
push
mov
in
mov
mov
in
dec
ss
je
sub
test
mov
out
rcrb
inc
xor
xor
or
enter
jecxz
ds
pop
cmp
in
jns
mov
lea
mov
js
scas
das
in
or
mov
pop
push
enter
fwait
mov
push
lea
mov
or
sub
out
ss
ja
xchg
lock
sbb
mov
es
fisubs
sbb
adc
push
mov
int
cld
in
das
add
adc
movsb
sbb
ret
idivb
sbb
adc
xchg
mov
out
out
mov
and
inc
and
push
cs
adc
fwait
rorb
add
push
movsl
sarb
out
cmc
push
scas
inc
dec
and
cltd
adc
cmp
sub
loop
pusha
lcall
mulb
or
inc
cmpsl
jecxz
adc
cs
roll
pop
repz
notb
ret
pop
cmp
fsubrp
cmpsb
mov
jne
stc
icebp
sub
daa
scas
xchg
xchg
lods
xorb
mov
jne,pn
cltd
pop
jge
mov
ljmp
scas
mov
inc
clc
jnp
cltd
push
mov
mov
push
cltd
cmpsl
je
sub
negl
xlat
xor
lcall
scas
xor
jg
jg
push
push
out
jae
add
lcall
pop
popa
jecxz
imul
xor
mov
sti
ja
jno
and
xchg
add
sub
test
push
sub
jl
and
sub
mov
mov
push
push
and
push
pusha
popa
repz
hlt
cmp
shrl
rcr
test
movsb
mov
es
fisttps
sub
daa
inc
mov
test
cmc
xchg
jle
les
mov
sbb
push
adc
cmpl
cmp
shlb
sbb
aam
sub
mov
xchg
lea
andl
mov
fwait
pop
and
leave
jnp
cmp
pop
inc
shlb
or
lock
das
mov
pop
sbb
push
testl
js
loopne
gs
sbb
int
xchg
push
cli
addr16
or
mov
adc
sbb
paddsb
jmp
fidivl
pop
dec
inc
sahf
dec
adc
mov
movsl
pop
sub
or
sbbb
sub
jl
sbb
ret
jo
dec
mov
xchg
mov
aam
ss
push
sub
sarb
icebp
aas
out
adc
mulb
pop
sbb
cmp
and
filds
aam
pop
subl
dec
sub
dec
push
add
lods
frstor
shlb
inc
push
adcl
xchg
xchg
mov
dec
subl
sub
or
mov
mov
xchg
pop
clc
fnsave
cmc
scas
ljmp
je
xchg
sub
fucomip
pushf
xor
push
mov
fildll
push
mov
xchg
nop
push
les
add
push
shrb
testl
push
into
add
xchg
jmp
ror
mov
jbe
jns
push
add
cld
aad
rclb
lret
sbb
pop
mov
push
sbb
xor
sarl
mov
sub
pop
adc
xchg
lods
inc
iret
shrb
stc
sub
dec
dec
cltd
cmpsb
push
icebp
cmp
lret
mov
sbb
push
sarb
cmp
les
jns
jl
fbld
out
out
dec
xor
xchg
test
pop
push
cmp
sarl
add
addr16
call
sbb
sbbb
fs
jge
push
mov
and
mov
in
push
mov
lahf
jns
xor
push
mov
jge
js
aas
sub
sub
sub
popf
dec
fsts
stos
push
jge
popf
pop
test
sbb
mov
pop
loop
mov
pop
cltd
fldcw
notb
lods
mov
ss
xchg
andl
sbb
push
xchg
int3
iret
inc
mov
ja
mov
and
leave
or
lret
pusha
push
dec
cmp
shrb
dec
lahf
xchg
sahf
dec
clc
aaa
leave
mov
addb
jmp
push
int3
dec
add
adc
mov
aas
enter
xor
adc
aaa
jbe
sub
movsb
add
or
push
cltd
add
mov
xchg
and
mov
dec
icebp
fcompl
xor
dec
movsb
pusha
and
fwait
into
adc
stc
adcl
inc
xchg
movsb
nop
and
ret
mov
sbb
cmp
pusha
mov
lret
dec
loope
repnz
stos
sbb
dec
test
dec
iret
or
stos
sahf
or
xchg
sub
xchg
add
sub
jle
mov
ret
imul
stos
mov
dec
mov
mov
xlat
sub
mov
sbb
jns
jns
pushf
dec
lcall
pop
cld
inc
inc
xchg
lret
ds
out
js
pushf
jo
fsubs
movsl
enter
aam
mov
movsb
jecxz
jg
sti
mov
jb
insb
iret
mov
xchg
dec
xchg
pop
insb
outsb
jb
pop
sbb
fdivl
or
cmpsl
fsubrs
xchg
mov
pop
sbbb
imul
lock
adc
out
into
rorl
in
mov
adc
shrb
fwait
cmp
loope
push
inc
rcll
add
mov
out
cmp
cld
scas
movsl
sbb
dec
addr16
xor
sarl
call
adcb
xor
mov
sbb
hlt
fsubl
fsubs
mov
xchg
adc
and
int3
scas
mov
in
add
cmp
jno
push
pop
jmp
int3
and
addr16
bound
shlb
out
jo
shl
lds
stos
jecxz
mov
repz
adc
arpl
push
rolb
jne
mov
mov
repz
aad
cmp
gs
push
sub
mov
adc
shlb
leave
push
mov
and
sub
in
ret
mov
push
test
jbe
in
or
push
adc
xchg
gs
sti
xor
js
inc
sti
shl
push
dec
test
fisubrs
insl
scas
push
out
push
push
je
add
lret
mov
jb
mov
ficomps
shll
shlb
mov
sub
testl
fwait
mov
add
push
fcomip
lock
mov
fwait
pop
mov
sbb
sub
pop
ror
sarl
idiv
push
leave
jl
pop
mov
xchg
aad
jecxz
xchg
push
pop
mov
in
lea
xchg
ror
mov
pop
mov
mov
shrb
icebp
cmp
cmc
fldl
jl
jae
sbb
popa
aad
pop
xchg
xchg
fsub
cli
int
testl
or
fstps
push
popa
pushf
lock
jmp
in
sbbb
pushf
imul
fwait
dec
xchg
lret
jmp
lods
cwtl
jb
movsb
loopne
push
adc
mov
jnp
mov
fwait
je
outsb
mov
nopl
mov
sub
lods
das
test
xchg
imul
daa
cmp
into
lret
aas
xchg
frstor
pop
and
or
adc
push
shlb
push
inc
ja
lods
insl
stos
xor
addr16
fdivrs
jnp
inc
cltd
loop
adc
sub
mov
lahf
mov
lea
jecxz
hlt
pop
add
push
and
mov
jp
mov
cmpsl
add
sub
mov
jne
mov
repnz
mov
ret
inc
jbe
xor
adc
lods
imul
and
fistpll
pop
mov
or
aas
stos
push
fdivs
xor
daa
negl
mov
sbb
xor
scas
adc
mov
add
addr16
xor
xchg
adc
adc
jecxz
call
sti
cld
js
daa
mov
imul
mov
outsl
jnp
stc
sbb
cmp
xlat
inc
test
xchg
out
adc
xor
jmp
out
pushf
js
pop
out
sbb
lods
push
bound
adc
push
es
out
mov
stos
jp
imul
loop
mov
call
enter
lahf
stos
cmp
cmp
testl
shr
std
shr
dec
or
lock
xor
fnstenv
push
das
jns
arpl
xchg
sub
mov
jae
inc
mov
jg
xor
ds
jae
and
data16
pop
incl
aas
mov
shlb
data16
push
mov
fs
sub
sub
inc
movsb
add
mov
push
adc
imulb
dec
mov
adc
adc
cmpsb
fwait
dec
popf
xchg
outsb
xchg
push
rcll
pusha
mov
lret
ret
iret
and
lcall
pop
psubd
outsb
dec
cmpsl
mov
inc
pop
lcall
dec
and
jg
push
scas
push
out
pop
mov
push
stc
clc
or
sbb
adc
or
fnsave
adc
jo
jp
adc
insb
cmp
push
fs
outsb
outsl
call
aaa
call
aas
call
or
sbb
adc
insb
out
lret
pop
pop
ret
outsl
cmpsl
into
lods
imul
cmp
adc
insb
aaa
sbb
sahf
pop
sbb
in
jmp
add
push
addb
fcoms
or
enter
sub
mov
subl
or
test
jle
clc
mov
loope
and
pshufw
push
mov
div
repz
mov
aad
jle
sub
std
push
fstps
lret
and
xchg
dec
push
pushf
jmp
push
scas
in
das
or
jle
cmp
je
test
mov
shl
stos
inc
lods
xchg
push
sbb
pop
ret
push
sti
into
fsub
nop
mov
cld
dec
xchg
arpl
jl
mov
mov
montmul
cmpsb
test
sbb
pop
or
test
pop
inc
pop
pushf
xchg
jmp
arpl
xor
push
or
fdivrl
aas
inc
daa
mov
sti
jle
rorb
mov
stos
movsl
mov
shrb
push
enter
and
ss
cld
sub
add
push
ss
jae
loopne
inc
pop
out
rolb
repnz
popf
add
aaa
in
add
push
ret
jge
mov
dec
pushf
push
ficompl
std
jb
iret
fsubrs
sub
xorb
or
fucomip
jmp
insl
jle
xlat
mov
stos
inc
jle
dec
cmp
out
mov
jl
sbb
cmp
mov
cli
repz
mov
fwait
add
aad
inc
mov
or
fmulp
push
or
xor
mov
jge
adc
pop
shlb
ss
push
push
into
movsb
and
test
in
adc
dec
xor
sbb
mov
mov
sti
int3
outsb
fidivl
add
jno
inc
lcall
jbe
xchg
sbb
stc
add
enter
loop
fwait
lea
push
loope
mov
dec
cmovs
xchg
xor
pop
sbb
dec
out
xchg
sub
push
je
push
mov
push
push
clc
jbe
imul
add
ds
mov
mov
pusha
loope
mov
pop
imul
jle
push
cltd
lret
mov
roll
jns
inc
mov
xchg
mov
lcall
pop
roll
mov
jge
aam
test
pop
and
sti
add
stc
push
jge
repnz
fildll
and
movsl
jge
movsl
sbb
sbb
adc
push
pusha
mov
push
push
lods
test
add
js
pop
jb
push
loopne
aaa
cmp
in
fsubl
test
clc
cmp
jmp
gs
int
std
add
xchg
and
sub
sub
cmc
sub
rol
jl
adc
inc
sahf
bound
dec
leave
push
mov
int
jle
sub
push
and
and
shll
je
call
cltd
push
adc
ss
mov
pop
xor
scas
xor
cmp
ret
lret
xlat
mov
add
aaa
dec
int3
and
inc
jl
pop
lock
add
sbb
fwait
idiv
pop
jno
sub
ljmp
leave
and
or
jb
mov
push
and
pop
pop
cmp
sarb
or
pop
cld
push
dec
icebp
jnp
jg
xchg
pop
movsb
rorb
mov
out
pop
cmp
lea
pusha
lock
add
mov
loopne
dec
nop
inc
rolb
cmp
inc
test
lret
jnp
movsl
in
ds
push
idiv
dec
stos
cmpl
push
std
in
add
dec
mov
adc
xchg
dec
leave
cmpsw
loopne
inc
lcall
pop
xchg
pop
clc
push
or
mov
pop
and
sbb
ds
push
dec
clc
movsb
push
enter
push
in
aam
xor
js
mov
add
pop
adcb
aaa
lods
addr16
or
xorl
data16
lds
scas
scas
pop
mov
fwait
popa
lahf
arpl
mov
sti
inc
mov
fisttps
dec
pop
inc
idivb
or
mov
call
rolb
lea
adc
out
adc
int3
scas
outsl
inc
lcall
mov
dec
hlt
addr16
dec
add
mov
add
dec
mov
xchg
loop
stos
sub
dec
mov
lods
jns
pusha
push
cmp
pop
clc
mov
pop
pusha
push
imul
mov
inc
icebp
dec
xlat
pop
mov
js
lods
pushf
sub
cmp
and
sbb
enter
sbbb
sub
sbb
xchg
test
xor
popa
enter
negl
cmpb
pop
jl
cmpsb
stc
and
data16
movsl
cltd
leave
scas
addr16
xchg
not
in
js
ljmp
push
mov
bound
inc
aam
pop
adc
lods
pop
xorb
les
mov
sub
lahf
lock
rcll
pop
add
inc
jmp
inc
leave
sbb
andb
xor
lcall
jge
out
sub
addl
fistpl
cli
lcall
push
stos
mov
pop
aad
mov
mov
scas
loope
pushf
icebp
cmc
leave
loopne
mov
movsl
mov
loop
ljmp
aaa
call
mov
inc
and
dec
jmp
out
test
fbld
in
cltd
ret
js
jmp
imul
sbb
jg
sub
push
inc
fld
jno
ja
xchg
add
cwtl
mov
pop
jge
jae
orl
mov
fldt
jmp
loope
push
mov
mov
jns
and
pop
mov
iret
notl
inc
xchg
clc
lds
call
xchg
icebp
mov
jnp
je
fldenv
movsb
and
jle
adc
mov
call
dec
sbb
sbb
xlat
mov
jbe
add
leave
leave
movsb
lret
leave
scas
fsubrl
in
jecxz
sbb
popf
arpl
mov
sarb
out
mov
xchg
dec
and
pop
adc
add
or
out
shl
add
jno
pop
jg
cltd
or
repnz
in
adc
fldl
popa
pushl
rcrl
arpl
je
movsl
lret
jecxz
xlat
in
cmpsb
sysretw
shrb
mov
es
mov
xchg
call
push
dec
dec
nop
leave
sbb
inc
int3
adc
sbb
push
pop
or
push
push
dec
mov
fdivr
inc
jl
loope
lock
cmp
jl
push
add
rolb
cs
ret
fcomps
out
sub
lea
push
mov
jp
cs
xor
xor
popa
pop
mov
nop
mov
in
pop
movsb
mov
cld
fisubrl
mov
aad
and
stc
dec
les
mov
pop
lret
mov
sub
jecxz
cwtl
stc
adcb
idivb
insl
mov
jnp
jb
insl
aaa
jbe
insb
dec
fadd
dec
jmp
pop
cltd
mov
cli
mov
sbb
out
cmp
jge
pop
adc
adc
outsl
sbb
jmp
dec
sub
lods
cmp
aaa
js
inc
fucomip
aam
sahf
repz
cmpsb
mov
cmp
and
lret
sbb
mov
ja
inc
push
xor
lods
out
add
test
cmp
xchg
lods
aas
push
lock
mov
es
enter
rol
adc
push
out
mov
mov
int
test
push
xor
sub
test
idivl
mov
sbb
stos
dec
out
xchg
pop
xor
push
inc
jge
jbe
xor
add
movsl
and
mov
mov
inc
cltd
popf
dec
fmuls
cmc
cli
xchg
push
shrb
or
negl
xchg
cmp
sbb
xor
fidivs
lret
out
aam
sub
or
ret
xchg
push
xchg
mov
call
or
fwait
int3
dec
adc
pushf
inc
dec
data16
mov
pop
adc
lock
push
pop
pop
adc
stc
pop
and
add
jmp
jbe
ret
xchg
ret
mov
push
rcr
in
ss
mov
cmp
icebp
add
int3
jl
cli
aaa
int3
les
pop
cwtl
imul
mov
out
sub
or
jne
xchg
sub
nop
jno
mov
sbb
sbb
pop
push
mov
mov
lret
sbb
push
xchg
xchg
rclb
negl
jo
mov
pop
jns
popa
pop
filds
lret
rol
sbb
out
add
pusha
mov
fisttpll
adc
faddl
sbb
arpl
adc
push
xor
aaa
add
inc
xchg
xor
add
dec
pop
adc
adcl
imul
sub
es
lret
cltd
or
jge
jnp
mov
pop
xor
aas
leave
fs
movsb
aad
mov
xchg
out
dec
and
ffreep
xorl
jnp
dec
adc
loope
mov
and
aad
sub
test
mov
push
lea
xor
loope
push
dec
adc
jae
arpl
adc
cmp
adc
pop
mov
sbb
pop
stos
lea
fadd
insl
fdivrs
inc
sub
aaa
push
mov
mov
in
call
jg
in
dec
mov
sbb
ja
cwtl
push
jl
or
and
cmp
stc
test
call
lods
add
cmp
lods
jge
jne
add
dec
sub
inc
ljmp
out
push
test
ljmp
mov
jge
or
mov
into
icebp
int
add
pop
nop
lcall
scas
nop
push
sub
ljmp
xor
or
mov
enter
imul
jae
imul
dec
out
jl
std
push
jo
cmp
faddl
aaa
fsubl
cmp
xchg
dec
imul
pushf
subl
jle
imul
pop
dec
std
pop
inc
fstp
lods
int3
fcompl
mov
mov
daa
subb
jmp
cmc
nop
inc
in
lds
aas
push
adc
shrb
pop
es
xorb
sarb
fwait
stos
add
repz
adc
push
mov
adc
cmp
inc
inc
inc
fisttpl
sbb
dec
cmc
mov
fstpt
and
sbb
cwtl
inc
icebp
sbb
mov
or
addr16
jno
into
lods
ror
push
dec
in
jecxz
iret
dec
push
and
cmpsb
push
dec
sbb
in
xor
repnz
ret
adcb
xor
push
mov
shl
popf
cmp
lea
lock
pusha
outsb
arpl
mov
stos
mov
xlat
or
aad
dec
cmc
sub
or
cmc
rcrl
fisttps
inc
mov
mov
je
push
das
outsl
sub
les
andb
fadd
pop
out
inc
fcoml
int
outsb
gs
or
stos
or
push
clc
fisttpl
rcrl
rclb
int3
sub
in
push
loopne
mov
repnz
jne
mov
jne
mov
mov
push
xchg
movsb
fistps
outsl
jecxz
fadds
mov
aaa
movsl
in
loopne
xchg
sub
dec
push
mov
add
mov
push
out
cmp
pop
not
mov
push
pop
and
ja
into
mov
pusha
ljmp
loope
push
outsb
sbb
cltd
ljmp
outsl
cli
out
adc
shl
into
nop
iret
mov
pop
ds
or
lds
push
subb
fldt
sbb
shrb
pop
cli
xchg
push
cmp
jb
iret
mov
mov
loope
sbb
in
xchg
loopne
shl
mov
movnti
mov
add
cltd
js
movl
dec
loopne
sti
jno
mov
xor
fiaddl
cmpsl
scas
addr16
or
mov
jl
cld
imul
dec
mov
ret
icebp
add
test
or
rol
pusha
xchg
int
push
jmp
js,pn
aas
cmc
push
mov
add
call
add
dec
inc
add
push
inc
inc
cltd
mov
cmp
out
pop
out
rorb
loopne
repz
into
leave
cmp
jnp
ds
jb
pop
inc
test
divb
mov
xor
sbb
sbb
cli
mov
pop
jp
mov
enter
cmpsl
popf
lea
pop
pushf
or
aam
inc
in
push
arpl
adc
inc
js
sub
in
mov
pusha
loope
cmc
jecxz
movsl
mov
mov
movsl
or
lret
fsubrl
cmpsl
in
rcrl
repnz
sub
adc
jo
cwtl
push
mov
xchg
pop
daa
and
sub
gs
sbb
cmp
xchg
or
mov
sbb
mov
fistpl
arpl
scas
push
rcrl
data16
into
js
adcl
sbb
clc
lea
sahf
testl
jns
int
leave
mov
inc
sbb
lea
xor
clc
dec
sti
lret
jmp
fistpl
adc
or
mov
loopne
lods
fwait
lahf
sub
pop
or
icebp
adc
loop
fldcw
add
insb
sub
sbb
lea
popf
xchg
mov
in
or
adc
in
xor
sub
movsb
lret
scas
test
cmp
jnp
dec
pop
daa
mov
popa
sub
xchg
rcrl
mov
aas
aam
lcall
rcl
lret
ljmp
loop
or
repnz
jg
push
mov
cmpsb
fs
out
xchg
jp
sbb
adc
clc
mov
stos
xchg
sub
pop
popl
cmp
pushf
xor
sbb
and
mov
and
data16
push
sarl
inc
cmp
fmuls
mov
sub
or
les
je
rolb
jbe
shl
cmp
push
xchg
mov
test
movsl
ss
dec
jle
outsl
outsl
in
xor
jno
movlps
out
pop
nop
or
movsb
into
fcoms
and
jb
mov
lret
std
fildl
inc
sub
xor
test
fs
in
xor
inc
or
test
cs
sbb
add
inc
cmp
enter
pop
push
das
cli
std
sub
rcrl
rcrl
lahf
mov
pop
jge
shlb
jp
dec
fstps
mov
pushf
sbbl
push
enter
cltd
jmp
rcrb
mov
jo
dec
bound
cmp
xchg
lock
pop
repnz
inc
push
out
aas
push
adc
out
aad
cmpsb
iret
mov
mov
adcb
mov
inc
dec
xchg
imul
aas
repz
repz
in
das
push
popf
jg
jmp
fldcw
dec
inc
xor
gs
push
cld
mov
nop
mov
or
mov
shlb
dec
cmp
push
mov
sbb
fidivrl
dec
adcb
test
ret
test
outsb
sti
pop
and
dec
adc
std
mov
pop
xor
in
adc
xchg
sub
clc
ror
lock
xchg
sub
lret
pop
mov
les
adc
mov
pop
loopne
mov
and
lret
into
fsubrl
inc
daa
addr16
fimuls
arpl
pop
jo
dec
mov
push
xchg
insb
pop
xor
iret
inc
sbb
fucomp
sbb
jmp
mov
push
mov
jno
mov
cmp
push
adc
mov
or
int
scas
jns
gs
fisubs
and
sbb
popf
sbb
adc
stos
scas
repnz
ss
mov
sti
sub
mov
mov
xchg
cmp
or
push
pop
mov
mov
xchg
gs
mov
shlb
clc
sbb
pop
mov
inc
lahf
mov
cmp
sbb
push
sbb
or
mov
xchg
push
adc
movsb
sbb
add
out
cmpl
movd
jae
ja
rcrb
fsub
ljmp
fwait
xor
push
fstl
push
mov
lods
je
jg
lock
cmp
push
push
dec
sub
ret
mov
sarl
mov
clc
mov
in
jns
lds
jne
in
arpl
insl
mov
add
xor
aad
test
mov
mov
cmp
je
pusha
mov
jne
mov
shrb
lret
sub
lods
sbb
adc
mov
fsubr
inc
shrl
add
nopl
pop
out
jmp
sub
jg
jg
shll
inc
ret
jb
loopne
xchg
cmpsb
arpl
into
pushf
sti
adc
out
xchg
inc
or
cmp
into
jp
push
loop
sub
adc
roll
iret
cmp
xchg
imul
xchg
mov
cmp
stc
int
pmaxsw
sub
outsb
das
imul
inc
inc
mov
mov
jne
cmp
js
std
push
into
mov
sti
jae
and
jmp
rclb
gs
mov
xor
fistpll
dec
jmp
out
and
lods
mov
and
dec
sbb
call
push
adc
iret
add
jmp
mov
andb
test
call
mov
out
in
test
mov
mov
mov
imul
jge
inc
inc
xchg
outsb
icebp
dec
xor
insl
in
aas
and
mov
stc
xor
inc
pusha
adc
push
mov
inc
dec
mov
fidivrl
mov
mov
pop
mov
adc
inc
push
ja
adc
les
ljmp
sarl
xchg
shll
nop
inc
loopne
inc
test
lret
and
jo
ds
sub
mov
mov
int
push
je
push
clc
xchg
cmp
push
jbe
lods
dec
mov
or
cli
jg
je
mov
and
int
out
adc
sti
push
lret
or
loopne
mov
adc
add
cs
sbb
sub
mov
arpl
sbb
push
int
push
or
cmp
fsts
inc
jmp
push
dec
sti
out
mov
or
jnp
cmp
fsts
lcall
ljmp
cmp
int3
cmp
mov
out
sbb
insb
jbe
mov
inc
bswap
jl
lods
scas
or
movsl
mov
adcb
adc
scas
push
and
add
ficompl
xor
cmp
cwtl
jmp
pop
mov
shrb
sti
shrb
fstp
call
xchg
jo
out
inc
lods
mov
xor
stos
fldl
faddp
les
pop
mov
faddl
jae
mov
sub
insb
jmp
mov
adc
adc
fdivr
add
add
push
jg
dec
push
mov
inc
in
xchg
dec
add
into
test
sub
xchg
or
xchg
mov
add
xchg
adc
mov
std
outsl
xor
xchg
jmp
and
mov
aas
fwait
rolb
and
data16
daa
negb
push
lds
shl
add
scas
or
xor
dec
cmp
es
pop
jae
cmpsb
pop
jbe
jmp
loope
fldcw
aam
pop
out
cmp
mov
add
sub
jbe
test
mov
insb
cltd
add
data16
in
xchg
mov
xchg
out
pop
shrb
in
xchg
add
xlat
mov
xchg
adc
sub
lods
mov
test
mov
or
daa
xchg
push
xchg
xchg
iret
mov
xchg
and
cli
xchg
mov
xchg
add
cli
mov
sbb
loopne
lock
sub
inc
xchg
fnstcw
mov
outsl
or
icebp
mov
fildl
push
xlat
popa
mov
lock
cmp
adc
mov
cmp
xor
cs
scas
sbb
lods
popa
mov
mov
sbb
push
xchg
iret
cmpb
mov
xchg
cs
dec
fcmovnbe
mov
fidivrs
sub
cmpsb
sahf
xor
pop
mov
jns
pushf
dec
sbb
call
cli
fbstp
fistpl
mov
ror
in
movsb
and
cmp
lcall
imul
jp
push
inc
sub
pop
pop
mov
dec
enter
mov
aas
jle
es
mov
push
insl
mov
dec
xor
or
mov
and
out
or
sub
xorb
sar
frstor
sub
dec
loope
addr16
adc
movsl
std
mov
fcoms
mov
es
cmp
add
jae
push
scas
les
mov
outsb
pop
or
dec
push
xchg
xchg
test
or
or
popa
es
inc
cmp
add
mov
sub
adc
inc
jnp
sub
sbb
push
mov
sbb
pop
mov
repnz
lahf
xor
adc
pop
movsl
jecxz
rorl
inc
loope
daa
push
xchg
xor
negl
jmp
fsubl
ljmp
cmp
pop
inc
jnp
inc
scas
adc
sub
scas
xchg
mov
or
fcomi
mov
jbe
push
stc
push
cmpsb
pop
aam
add
cs
fildl
les
push
fwait
stos
mov
sbb
add
andb
jns
out
xor
sbb
fnstsw
cmpsb
or
pop
mov
je
sbb
les
ds
and
in
bnd
mov
test
loopne
es
mov
jmp
in
lahf
cmp
jo
stos
xor
scas
push
cmp
inc
mov
mov
sub
or
push
js
shr
push
mov
mov
sub
push
sbb
cmc
test
jp
jmp
jmp
push
lea
xor
inc
pop
lahf
jmp
shrl
ficomps
lea
mov
jno
inc
daa
mov
add
fidivs
pop
sub
fldcw
jle
les
add
fs
sahf
sarl
xchg
mov
xlat
xchg
fsubrl
sub
test
pusha
fwait
cwtl
lock
xchg
fistl
push
ja
mov
pop
pop
imul
fnstcw
and
cmpsl
adc
icebp
sub
out
or
roll
mov
xchg
xchg
psadbw
mov
jo
loop
sbb
mov
and
mov
testl
mov
xor
scas
cmp
loopne
outsl
add
and
lds
subl
cmp
ljmp
inc
mov
movsl
mov
loop
nop
notb
into
imul
adc
nop
jo
cmp
cli
add
jbe,pt
lods
cmpb
ds
fiadds
mov
pop
xlat
jmp
out
mov
imul
push
push
pop
sbb
adc
imul
iret
xor
movsl
sub
mov
loopne
push
xor
push
sbb
push
add
inc
mov
insb
shll
sti
mov
aas
scas
ret
std
hlt
and
popf
dec
push
inc
sbbb
pop
fs
mov
xor
fnstenv
dec
push
into
aam
jo
jle
mov
xor
gs
repz
mov
mov
lcall
sub
clc
call
nop
and
outsl
xchg
fucomp
mov
push
dec
sbb
cmp
and
adc
cmp
in
cli
popf
jle
jp
bswap
flds
fdecstp
adc
insb
shrb
pop
dec
and
test
add
ss
test
cmpb
in
jge
cmp
cmp
insb
jns
pop
push
jns
adc
nop
lahf
stc
cmpsl
adc
mul
scas
or
jns
sbb
pop
push
repz
shll
fisttps
mov
sbb
add
pop
std
cmpsb
lahf
lods
push
paddw
mov
cmpsl
cmp
push
aam
sub
stos
sbb
xor
enter
cmpsl
and
cmpsb
pmulhw
insl
lock
ret
pop
xor
jge
lods
jg
hlt
ficoms
jb
add
and
sete
in
enter
lret
sahf
xchg
inc
jg
mov
xor
call
or
jle
lods
cmc
leave
ret
aaa
xchg
lock
movb
shlb
rorl
xchg
and
mov
rolb
xor
lock
dec
sub
icebp
and
stos
jmp
les
xor
pushf
loopne
adc
sub
dec
clc
pop
nop
repnz
les
or
push
imul
in
mov
and
jmp
mov
push
icebp
xchg
xor
les
cmp
push
aas
sub
jmp
mov
sub
hlt
popa
adc
stos
test
mov
inc
outsl
nop
test
pop
xor
pop
shrl
pusha
jnp
pop
mov
jecxz
add
lahf
pop
ret
outsb
into
stc
and
xchg
sbb
jp
lcall
addr16
jno
dec
push
add
adc
inc
xchg
adc
jbe
sbb
jnp
sarb
push
and
enter
cmc
mov
leave
inc
jae
test
imul
sbb
mov
out
push
test
pusha
xor
and
stos
mov
addl
adc
inc
mov
sub
jmp
add
scas
sti
mov
cmp
xor
dec
into
cmpsl
jmp
test
pop
pop
xchg
jp
or
dec
repnz
and
adc
mov
out
scas
popa
mov
mov
xchg
je
cs
xor
jo
xor
push
fcomi
sahf
stos
xor
mov
mov
scas
sub
jg
mov
ffreep
mov
cmp
pop
mov
cmp
xchg
fcomi
and
subl
lcall
repz
sub
or
lods
repz
and
arpl
xor
lret
sub
out
shll
inc
mov
int3
or
idiv
jnp
mov
jmp
pop
ret
sbb
pop
and
cmp
lcall
fadds
aad
in
and
lods
xchg
adc
incb
cmp
mov
inc
push
sbb
mov
shl
in
ret
xor
loopne
pop
outsl
das
pushf
scas
xchg
popa
and
insl
test
dec
mov
rorb
jp
or
xchg
icebp
and
xchg
lods
repz
lds
call
and
xchg
pusha
icebp
test
insb
cs
or
adc
inc
push
fcompp
jb
out
loope
mov
int
into
pop
cmc
sub
aas
inc
rcl
arpl
inc
push
scas
addl
sbb
pop
sbb
test
dec
xchg
pop
jp
jp
push
inc
mov
xchg
lock
sub
lds
xchg
stos
or
pop
ljmp
cmp
lock
int
xchg
sbb
mov
dec
sbb
mov
pop
rorb
call
and
repz
frstor
cmpb
cli
daa
cmp
lret
cltd
fldt
sub
jp
cld
cmp
je
iret
fsub
adc
dec
cmp
push
jno
xor
enter
psubd
out
sub
dec
data16
push
clc
int3
ds
bound
mov
xchg
mov
cltd
nop
cmp
out
xchg
pop
mov
adc
inc
call
fisttpll
mov
test
inc
lds
loope
xchg
xchg
arpl
cmp
fisttps
in
sbb
push
imul
call
xor
add
movsb
add
sarl
sbbb
and
scas
mov
sbb
adc
cmp
ret
icebp
cmpb
dec
or
aaa
leave
inc
lret
out
in
inc
cmp
lds
xor
out
ss
mov
cwtl
fs
and
push
xchg
out
pushf
faddp
dec
sbb
ret
cmc
sub
lock
repz
cmc
insb
insl
rcl
lds
fldcw
std
out
cld
mov
jp
xchg
mov
mov
arpl
push
test
andb
fsubrs
mov
orb
aas
mov
fwait
mov
dec
in
lret
cmp
pop
add
dec
shrl
icebp
inc
or
jmp
inc
mov
jge
or
dec
aaa
push
cwtl
mov
cmpsl
aam
jne
mov
push
mov
cwtl
aaa
dec
jl
mov
and
movsb
xchg
pop
inc
rclb
aaa
loopne
inc
outsl
push
insb
jns
lret
negb
mov
lods
aad
test
fs
pop
jno
mov
fistpll
inc
stc
cwtl
jecxz
cmp
cltd
flds
es
or
mov
cltd
std
scas
sbb
pop
pop
add
inc
addr16
icebp
inc
mov
lods
movsb
pop
sahf
movsl
int3
mov
mov
push
push
xchg
repnz
jno
loopne
leave
and
in
repz
fs
jmp
mov
xor
cmp
cmp
cmp
movsb
pop
lcall
mov
les
push
mov
pop
roll
push
inc
xchg
sbbb
ret
daa
pop
sub
mov
mov
sub
popa
mov
icebp
scas
addl
xchg
push
repnz
push
mov
sbb
mov
ja
lods
adc
pop
mov
test
pushf
rcrb
sbb
inc
sti
cli
loopne
mov
loope
jno
xchg
dec
mov
shrb
mov
fisubrl
and
pushf
push
cwtl
and
mov
cmovl
decl
adc
cmp
fisubs
mov
dec
dec
jnp
sub
imul
push
fcoms
ljmp
cmp
insb
lahf
orl
popa
es
xchg
ret
mov
sub
test
dec
xchg
inc
mov
add
xchg
es
ds
cwtl
jl
ret
adc
stos
adc
lcall
scas
xchg
push
push
mov
shll
in
dec
xchg
adc
scas
stc
icebp
mov
add
and
mov
in
in
add
pop
ret
jnp
mov
mov
inc
std
in
inc
pop
and
push
or
cltd
cs
mov
pop
es
das
sub
ds
cld
inc
cmp
mov
fs
cmc
pop
shlb
stos
popa
test
push
cmpsb
outsl
pop
cmc
jl
dec
add
or
notl
scas
imul
dec
or
xor
push
push
icebp
add
dec
and
das
pushf
ds
jg
jne
popa
outsl
cmc
xchg
mov
pop
out
push
mov
aad
shl
daa
fcomip
mov
jae
rep
js
daa
xor
outsb
xor
shl
lock
or
leave
xor
or
nop
jecxz
ret
test
pushf
xchg
xchg
sub
xchg
xchg
outsl
lds
dec
and
mov
add
cmp
roll
push
push
cwtl
aam
in
arpl
test
fwait
cmp
arpl
test
push
push
subl
mov
mov
das
aaa
mov
sahf
int3
jg
mov
pop
jbe
rol
ss
push
xchg
shrl
or
jl
shll
and
mov
add
inc
bound
push
jecxz
stos
xchg
jge
cli
jb
je
inc
fisubrs
adc
clc
sbb
adc
mov
cmc
addr16
mov
add
dec
pop
aaa
xlat
aaa
jnp
or
add
jmp
sbb
je
mov
push
hlt
mov
jo
xchg
pop
lock
sbb
loopne
scas
pop
ret
push
aaa
sbb
int3
mov
and
xchg
testb
cld
adc
xlat
aas
dec
pop
jle
insb
pop
push
jae
loopne
enter
lcall
sbb
inc
mov
fiadds
mov
jmp
push
call
mov
in
adc
pop
in
sahf
loope
fs
push
loope
pushf
push
pop
stos
cmp
imul
repz
xchg
push
cli
pop
out
stos
cmp
in
lcall
stos
xchg
xchg
sbb
fwait
inc
xchg
cmp
jnp
lahf
sub
adc
sub
mov
push
lods
xchg
push
andnps
ret
aam
lods
js
cmp
cmp
mov
mov
jecxz
add
out
or
xchg
and
mov
test
add
fiadds
adc
xchg
icebp
jl
and
xchg
pushf
dec
incl
gs
in
lea
cs
icebp
or
cmpb
dec
ss
rol
mov
sbb
mulb
pop
add
das
xchg
push
mov
lock
arpl
sub
pop
outsb
or
lds
cmpsb
add
imul
lods
add
jbe
ja
out
aad
add
test
iret
rclb
dec
loopne
cmpsb
adc
loope
rolb
cmpl
xor
add
mov
add
push
adc
frstor
add
fwait
enter
adc
das
aaa
cmp
mov
in
gs
aam
sbbl
pop
adc
dec
cmc
ficoms
lahf
bound
lret
xor
pop
cmp
in
bound
divb
lods
cmp
mov
hlt
loop
popf
loope
movsl
pop
mov
mov
push
cmpsb
pop
in
je
outsl
movsb
dec
mov
sbb
or
cmp
mov
jle
cmp
mov
cltd
idivb
push
icebp
or
adcl
inc
push
out
or
sbb
pop
lods
cmp
cmp
inc
mov
xor
mov
cwtl
movsl
mov
sub
repnz
ficomps
xor
ds
xor
push
sbb
dec
das
pop
sub
adc
loope
mov
cmp
loopne
push
leave
lahf
mov
lock
ret
lahf
pop
push
fdivl
jl
in
std
ret
jno
lret
sahf
jbe
jl
xor
and
pushf
or
shlb
xchg
xchg
sub
mov
fwait
das
ljmp
imulb
roll
pop
pushf
fists
adc
mov
mov
scas
add
andl
mov
lret
jl
xor
fcmove
jno
pop
repz
or
test
cmc
fs
dec
iret
daa
xor
int
fidivs
cmpsl
or
xchg
iret
movsl
loope
into
repnz
xchg
aas
sahf
inc
gs
bound
dec
scas
mov
pop
ficoml
daa
mov
pop
in
movsb
out
insl
mov
addr16
push
lcall
jmp
enter
mov
cmp
movsb
xor
xor
call
push
jl
sub
lcall
mov
scas
pop
dec
in
pop
loopne
inc
adc
pop
mov
cmp
testb
pushf
loop
jg
mov
ja
out
mov
lret
adc
xor
jmp
cli
push
or
pop
cmp
insl
xchg
mov
popf
lcall
stos
jmp
fmulp
mov
adc
neg
fbstp
mov
pop
std
push
cmpsl
add
pop
popa
xchg
cmp
or
mov
lds
jp
dec
xlat
push
sbb
add
cmp
cmp
jmp
mov
call
pusha
outsb
cmp
mov
mov
sub
add
pop
cmp
mov
adc
cs
mov
cs
jp
inc
js
or
imull
in
lea
lret
dec
push
cmpps
xchg
mov
sbb
or
ret
sub
lahf
cmp
sti
in
popa
cwtl
test
cmp
popf
mov
rolb
dec
sti
cmc
mov
sub
inc
ds
les
inc
jne
decl
aaa
cmp
push
les
xor
mov
ret
xchg
sub
stos
mov
arpl
incl
lds
pop
adc
jge
stc
arpl
icebp
stos
es
cli
loopne
adc
rolb
rcl
jg
mov
push
xor
jb
ffree
push
aad
mov
inc
ljmp
push
and
xlat
add
dec
scas
icebp
das
aas
shll
fsubl
mov
fs
jecxz
sub
sub
dec
sahf
or
frstor
dec
cld
out
sets
hlt
adc
sbb
push
imul
into
push
xchg
sbb
and
dec
lret
popf
shll
pop
testl
lahf
mov
adc
mov
std
jge
out
cltd
sbb
cmp
inc
mov
pushf
lea
roll
pop
or
mov
stos
addr16
push
push
sub
inc
jns
arpl
xchg
push
lcall
lea
ror
add
pop
insb
add
aas
leave
or
mov
jb
in
cmp
jmp
je
xor
jnp
fisubl
into
int
pop
xchg
pusha
ficoms
lret
dec
mov
mov
mov
push
dec
js
ds
xor
dec
pushf
sbb
bndldx
sbb
jge
jle
fidivrs
push
les
dec
pop
sahf
inc
mov
mov
inc
cmpb
push
mov
fildll
mov
dec
out
jmp
cmpsl
movsl
and
iret
jnp
lds
stos
mov
ret
jbe
mov
mov
fsubrl
decb
jo
cmpsl
jmp
lret
ljmp
ret
dec
or
pop
outsb
rclb
in
jl
pushf
cmp
or
outsl
dec
orb
pop
dec
pusha
mov
xor
dec
cmp
repnz
ret
fst
test
mov
test
pop
das
sbb
cmp
xchg
adc
sub
stos
or
repnz
xchg
mov
les
lahf
mov
outsb
cmp
scas
mov
jmp
notb
cwtl
lret
adc
mov
lock
cmp
xchg
xor
stos
pop
pop
push
or
xchg
pushf
adcl
and
push
pop
rclb
cmpsl
aad
xchg
adc
out
inc
jecxz
rorb
adc
cmp
das
sbb
cmp
test
jne
in
sub
mov
mov
pop
adc
inc
repz
dec
xor
xchg
adc
xchg
sbb
aas
add
cmp
ljmp
int
arpl
stos
ja
and
xchg
lahf
cmp
mov
out
ljmp
pop
jb
scas
dec
outsl
adc
push
iret
or
cmp
imulb
popa
pop
push
add
loop
mov
jle
adc
sub
mov
sbb
iret
pop
mov
xor
shll
or
xlat
sbb
imul
xchg
cmp
pop
inc
push
cmp
aad
mov
subb
mov
cltd
push
xchg
mov
mov
xchg
sub
mov
or
dec
lods
mov
pop
sti
jo
data16
frstor
or
mov
cmp
outsl
xor
rclb
jnp
and
cmp
xchg
inc
aad
sbb
add
fwait
xor
andb
or
aad
es
push
add
arpl
test
loope
stc
or
shlb
pusha
xchg
out
lahf
pop
pop
jo
add
sbb
mov
jnp
mov
add
xor
inc
mov
shlb
decb
imul
cmp
dec
adc
aaa
cmpb
subl
and
mov
xor
mov
mov
repnz
add
rorl
mov
in
cmpsb
popf
popf
mov
add
jno
push
sbb
mov
jae
or
mov
inc
pop
sbbl
adcb
mov
call
test
std
xor
lret
lods
mov
jge
sub
inc
in
mov
push
xchg
push
add
sar
cs
sbb
cli
mov
xor
movsb
icebp
cmpsl
xor
andl
jmp
push
dec
sub
inc
xor
cmp
jns
and
cmp
pusha
dec
or
pop
sub
aam
test
add
and
pop
inc
adc
cs
dec
push
mov
iret
sub
xchg
xor
repz
push
push
or
xor
xor
mov
push
pop
clc
inc
inc
inc
loope
mov
add
fistpll
outsb
jge
mov
fs
aam
dec
mov
mov
scas
xchg
inc
fidivs
pop
pop
inc
or
stc
pop
sbb
rcrb
sarb
push
xchg
nop
shlb
les
pop
mov
cmp
jne
jo
mov
sahf
fstpl
pop
push
adc
push
inc
icebp
jg
cmc
pop
lds
imul
or
pop
cmp
cltd
push
xchg
push
pop
shlb
mov
loopne
aaa
jnp
in
pop
sbbb
iret
jmp
push
pop
popf
push
cmc
jns
pushf
or
mov
or
xchg
add
add
adc
lods
adc
pop
inc
push
dec
jecxz
loop
jle
repnz
jae
or
mov
mov
test
mov
push
xchg
aam
push
into
sbb
call
imul
imulb
mov
into
sbb
push
in
lret
add
in
cli
jp
push
popa
bound
shll
mov
mov
std
frstor
in
xchg
mov
mov
sub
sbb
int3
test
pop
inc
imul
inc
std
jnp
fidivs
adc
fbld
jb
xor
dec
sbb
mov
mov
sub
sbb
mov
sub
imul
jmp
inc
ss
lret
mov
add
lds
fidivrs
cmp
mov
daa
adc
enter
and
inc
sbb
and
jge
rdpmc
xchg
pusha
pop
sub
jmp
leave
push
addr16
push
je
cmpsl
sarb
adcl
rcll
pusha
imul
xchg
mov
outsb
andb
sarl
inc
cmp
sub
std
adc
push
xor
push
mov
mov
bound
clc
push
xor
cmc
pop
adc
imul
stos
lcall
shrb
mov
mov
cmp
dec
stc
sub
loop
mov
or
stos
pop
adc
xchg
ret
mov
jns
sbb
in
repz
out
push
lock
fcmove
dec
fiadds
inc
fiaddl
or
loope
and
cmpsb
test
mov
push
or
sbb
lgs
cmp
out
mov
test
adcb
mov
aad
add
loopne
loope
cmp
jmp
in
cmp
inc
mov
add
pxor
out
dec
movsl
pop
sub
flds
test
jp
int
movsb
mov
pushf
and
jp
push
pop
outsb
sub
jg
mov
movsl
or
pop
cmp
add
lret
arpl
jmp
mov
sarb
sbb
incb
and
pop
sarl
and
add
pop
mov
push
push
adc
popf
and
lods
aaa
mov
roll
mov
mov
dec
or
icebp
inc
lea
push
mov
in
insl
jmp
cmpl
inc
xlat
fwait
je
or
jnp
push
mov
ja
jg
inc
cmp
dec
mov
mov
xlat
push
adc
sub
xor
cmc
mov
cmc
mov
adc
adc
sarb
out
nop
inc
xor
cli
cmp
pop
sbb
push
xor
ds
jg
adc
mov
sbb
or
push
test
mov
ljmp
mov
movsb
adc
les
pop
cmp
adc
pandn
aad
fcmovne
sub
adc
int3
lret
imul
jp
mov
insl
es
push
dec
sbb
and
aas
dec
xchg
pop
test
sub
jno
ss
add
pushf
adc
bound
fmull
sahf
cltd
in
jae
push
sbb
dec
outsl
push
push
popf
rolb
jne
aam
fistpl
lcall
and
jmp
push
into
test
dec
fiaddl
fisttps
push
mov
push
pop
test
loop
lea
dec
or
add
push
out
and
repz
ss
cmc
addr16
mov
dec
sub
mov
pop
arpl
mov
xchg
rolb
cwtl
sahf
aas
sahf
and
jmp
popa
or
push
mov
mov
loope
scas
xchg
fisttps
dec
jne
cmp
mov
add
dec
mov
or
inc
ret
sub
cli
lret
icebp
xchg
lods
aad
or
push
push
cmp
push
push
jns
mov
jnp
in
mov
fistl
iret
test
jne
les
mov
adc
scas
lea
mov
push
mov
inc
sar
lcall
rorl
pop
or
adc
xchg
pop
jae
iret
fildll
mov
xlat
push
mov
pop
and
cmc
icebp
pop
mov
mov
adc
lcall
lea
or
xor
xorb
cmp
in
aas
stos
adc
mov
pop
imul
int
dec
aad
leave
sub
lahf
jge
cmpsl
mov
or
adc
jle
sbb
enter
call
addb
adc
push
and
movsl
inc
movsl
xor
mov
scas
int3
aam
dec
pop
lock
xchg
or
inc
push
rolb
lea
pop
outsl
cmp
popa
ljmp
aas
pop
lods
mov
je
inc
out
pop
pushf
shll
pop
jns
push
mov
mov
stos
daa
icebp
cltd
dec
jp
push
pop
push
stc
stc
mov
or
adc
mov
data16
aad
fdiv
out
data16
scas
sbb
push
xchg
inc
cmp
in
popf
sub
mov
or
aad
mov
add
and
mov
adc
test
enter
or
adc
xchg
fldcw
mov
clc
test
sahf
pop
push
xor
mov
jnp
sahf
xchg
or
xchg
inc
sub
in
xchg
frstpm(287
test
ret
call
lcall
test
in
test
mov
jb
and
dec
clc
mov
sbbb
cmc
in
or
sbb
xchg
mov
jno
iret
shll
jo
ds
mov
adc
out
rcll
fcomps
push
push
mov
mov
adc
fldcw
sub
lods
sub
dec
fs
pop
mov
mulb
orb
fwait
sub
cld
ret
sbb
lods
jae
repz
addb
stos
lret
sbb
lds
daa
ret
xchg
mov
ljmp
leave
pop
xchg
jns
pop
lahf
cs
bound
adc
or
cmp
and
cli
cmp
inc
mov
je
adc
lcall
out
fs
das
insb
ja
pop
pop
ficomps
inc
jns
out
adc
insl
sub
cmp
inc
int
into
movsb
or
xchg
and
outsl
outsb
push
cmp
xorb
jno
push
push
push
mov
daa
xchg
pop
fcompl
repnz
dec
ja
pop
mov
lret
push
fmuls
pop
adc
pop
add
sub
jecxz
outsl
xlat
mov
dec
fcmovbe
cmpsl
js
cs
push
push
inc
push
sub
dec
popa
sbb
mov
dec
pop
mov
or
and
test
scas
push
cli
mov
mov
mov
aad
sbb
gs
add
mov
lock
mov
jno
xchg
cs
in
xlat
xor
mov
fwait
inc
mov
cld
cmp
lret
cld
add
in
call
dec
xchg
and
jge
push
ja
mov
inc
jno
jg
stos
or
xchg
sarb
sub
movsl
push
sbb
sahf
loopne
fsub
jle
call
sub
mov
pop
adc
jmp
imul
sbb
sahf
mov
mov
cmp
inc
inc
sub
and
ja
das
mov
jbe
loop
jns
fs
mov
cli
repz
std
jl
lock
movsb
or
sarl
loope
lods
outsl
pop
cld
test
push
inc
jbe
int
dec
dec
and
sub
jno
or
lods
push
clc
jnp
stos
inc
enter
mov
inc
inc
cld
jo
cmp
fs
andl
mov
lcall
sbb
addb
push
xor
push
adc
cs
ret
cmp
mov
pop
ds
bound
or
imul
push
mov
xor
iret
mov
and
int
ret
jnp
sbb
lea
cs
jmp
imul
mov
pushf
rcr
idiv
fs
xor
movsb
repnz
mov
int
rcll
mov
pop
aaa
loope
test
add
xchg
fcmovbe
mov
daa
inc
mov
lret
add
dec
fsubrl
sub
sbb
insl
xchg
stc
cli
aaa
and
cwtl
andb
jne
cmpsl
out
fdivrl
mov
outsl
repz
xor
mov
in
jle
popf
pop
cmp
aas
cmpsb
jno
lret
push
stc
adc
sbb
and
inc
aad
leave
push
push
outsb
xor
xchg
or
push
cmp
mov
lret
testl
js
cli
movsb
fdivr
mov
outsl
sbb
push
pop
fnstenv
push
pop
sub
inc
addr16
pop
fwait
test
inc
lods
or
lahf
and
stos
out
adcb
or
pop
pop
and
jns
adc
jbe
loopne
loop
cwtl
subl
lods
add
jmp
jg
jl
pop
mov
insb
jle
jo
data16
jno
lret
adc
mov
adcb
sbb
lods
or
lret
xor
sub
jp
fistpl
push
push
int3
pop
dec
sbb
push
or
call
fdivrp
or
mov
add
mov
jle
in
cmp
inc
fisubs
xor
stc
mov
loopne
add
daa
decl
dec
xor
in
xor
xchg
pavgw
arpl
inc
pop
mov
sbb
push
das
filds
push
lock
xchg
cmp
lock
or
std
jmp
jns
jle
adc
xor
lcall
add
fmulp
mov
inc
xor
les
lahf
mov
fstl
mov
dec
xlat
or
xor
add
mov
data16
movsb
cmpsl
push
inc
insb
and
or
pop
push
or
sbb
aam
jle,pn
je
fcoms
xchg
lods
popf
and
lock
add
dec
push
mov
xor
mov
adc
push
bound
mov
push
pop
sbbl
notl
cmp
push
cmpsl
ds
sbb
mov
jmp
mov
iret
aad
sub
mov
push
inc
jle
sbb
cmp
push
scas
clc
in
jnp
fcomps
out
test
cs
pushf
xor
jae
into
in
imul
scas
inc
sbb
jae
jbe
xchg
jl
mov
mov
ret
std
cmpsl
add
add
dec
and
or
scas
fldl
adc
push
inc
cmpb
pop
jns
imul
lea
xor
into
inc
dec
sbb
lods
cmpsb
std
out
ss
clc
testb
int
roll
or
sahf
push
jg
in
adc
icebp
inc
sub
xor
pop
test
lds
mov
nop
mov
rcl
pop
clc
in
inc
inc
stos
add
int3
mov
pop
roll
jle
add
adc
push
xor
mov
dec
mov
dec
adc
jmp
decl
mov
int
sbb
cli
pushf
insb
or
std
adc
fistl
push
or
push
enter
or
inc
sbb
mov
mov
mov
leave
pop
popa
bound
mov
jge
push
out
jp
stos
cmc
inc
and
jns
adc
out
lock
dec
cwtl
and
push
sub
cmp
pop
push
lock
jb
stos
imul
pop
xchg
insl
push
outsl
sub
jecxz
lock
cmp
inc
adc
mov
gs
lods
jl
xor
rclb
jp
xlat
sbb
int3
mov
push
jmp
mov
and
inc
roll
iret
add
inc
cli
sti
pop
sub
aam
adc
add
mov
cld
sub
lret
mov
xor
inc
cmp
pop
sub
pop
cmp
add
std
decb
xchg
or
pop
outsl
shl
push
dec
xor
cwtl
repnz
push
cltd
jle
push
sub
fsubrl
cmpsb
retw
mov
in
cli
mov
scas
outsl
out
mov
mov
push
sub
pushf
mov
mov
fmull
rorl
out
addr16
stos
lret
in
sbb
ljmp
inc
int
push
les
xchg
ljmp
fs
shlb
roll
jle
test
cmp
and
pop
popf
mov
jbe
gs
adc
lea
mov
repnz
leave
push
sub
arpl
pushf
es
push
and
pop
dec
xrelease
mov
mov
sbb
cmp
cmc
lods
cmc
std
cmpsb
enter
jmp
sahf
sub
mov
int
mov
sbb
pop
outsl
inc
icebp
in
shll
or
gs
xor
leave
xchg
fs
fistl
aas
xlat
shrl
cmp
sbb
jb
fcomps
adc
push
fbld
dec
sub
fmull
xchg
cwtl
mov
shrb
jl
mov
ret
mov
xor
shr
loope
add
in
inc
popf
mov
fsubp
fsubrs
mov
jnp
add
adc
inc
dec
sarl
sbb
scas
sub
aam
add
stc
out
fwait
je
cmp
push
dec
cmp
in
fsubp
cmp
mov
test
adc
sub
pushf
add
add
stc
pop
mov
xor
ficoms
and
sbb
enter
jle
iret
mov
dec
mulb
imul
int
in
outsl
jge
jmp
push
push
scas
insb
vphaddubd
mov
inc
push
outsb
jns
out
and
sbbb
lret
lret
mov
test
pop
jmp
jmp
push
jo
loopne
xlat
sbb
jmp
pop
lods
dec
in
outsl
xchg
push
lock
sti
imul
add
sub
rcr
inc
jne
test
mov
mov
pushf
cmc
jne
mov
adc
jmp
cvtpi2ps
cmpsl
cmp
jl
xchg
iret
daa
leave
rcr
cmp
fdivrl
jge
rcll
nop
ret
mov
mov
sar
call
add
rorl
jno
fdivrl
pop
lock
xor
mov
xlat
cmc
movsl
in
xor
cmp
cmp
fldcw
inc
inc
xor
mull
roll
pop
test
or
aaa
out
leave
stc
jmp
jb
lock
jg
cli
sbb
add
cli
insl
or
sub
stc
sbb
aad
sbb
fisubrs
push
mov
imul
mov
fcompl
cmp
jns
lret
incl
das
push
xor
and
loope
mov
fimull
and
jecxz
out
mov
dec
jno
mov
bnd
int
jns
cmpb
cmp
jge
lcall
jle
in
mov
repz
cs
stc
test
adc
mov
dec
and
sub
xor
xchg
idivl
cmp
sub
add
adc
mov
in
arpl
ficomps
xchg
jne
fcoms
popa
xchg
popa
pushf
add
cwtl
pop
pop
jmp
mov
addr16
test
push
lcall
adc
addr16
outsl
cmp
sub
xchg
sbb
in
xchg
fadds
sbb
out
addb
jp
sub
add
jecxz
jp
sbb
clc
xor
lds
mov
xchg
and
pop
pop
xor
pop
pop
mov
mov
rolb
mov
fistpll
test
shlb
inc
or
push
xchg
xor
cmp
and
repnz
stc
cwtl
add
mov
jno
and
cmp
pusha
aaa
arpl
es
add
mov
enter
mov
dec
dec
cmpsb
pop
fs
jg
xchg
mov
orl
xchg
pop
add
pop
cld
ret
cwtl
ror
rcll
rolb
cld
jno
fcoml
cs
add
fnstcw
dec
jno
push
sub
xor
out
out
adc
sub
stos
adcl
inc
bound
mov
mov
mov
les
sahf
sti
gs
mov
jp
add
repnz
mov
and
mov
mov
sub
cmp
push
mov
arpl
and
lock
pop
dec
push
shlb
in
mov
jb
or
cmp
data16
mov
aad
mov
xchg
inc
and
test
sub
out
pop
dec
loopne
movsb
outsl
mov
push
or
sbb
jg
adc
test
inc
sbb
pop
sub
adc
test
lea
push
movsb
lock
mov
pop
pop
addl
imul
cmp
int3
fs
repz
or
shr
dec
push
jge
stos
clc
test
and
dec
int
cwtl
sub
jnp
xor
aas
and
int
ss
pop
xor
es
loopne
mov
xor
in
and
enter
dec
dec
mov
orb
gs
movsb
lea
dec
enter
and
sub
mov
mov
sbb
xchg
mov
out
xlat
movsl
mov
cmp
int
lods
pop
insb
ds
lods
inc
outsb
cmc
scas
xchg
rcr
mov
jmp
sbb
in
aam
or
mov
ret
jne
or
out
push
xchg
jo
cmp
push
pop
jmp
add
dec
jo
stc
ds
and
aad
cmp
cld
add
shrl
dec
insb
xor
pop
mov
in
xor
icebp
xchg
int
xorb
rcl
push
es
pop
jp
int3
dec
xchg
mov
xchg
pop
movsb
xchg
mov
lds
push
movsl
ret
xor
mov
lret
into
mov
xlat
sub
jecxz
sbb
inc
in
mov
xchg
popf
mov
mov
or
adc
movsl
out
icebp
sbb
test
cmc
imul
subb
jns
mov
mov
jle
sti
fidivrs
xchg
mov
lcall
out
sbb
pop
dec
inc
leave
xchg
and
inc
push
fwait
mov
jecxz
fwait
jns
imul
rcrb
ljmp
xchg
test
les
jb
sbb
aam
sub
repnz
outsb
or
out
jp
dec
xchg
cli
mov
cwtl
pushf
js
jb
push
add
icebp
mov
imul
in
loopne
inc
add
test
fnstsw
cmpsb
mov
daa
cmp
jbe
jne
add
divl
xlat
fisubl
test
dec
insl
jbe
sbb
andl
fidivl
test
repz
aam
jnp
idivl
insb
addb
cmp
mov
pop
mov
je
inc
or
mov
enter
mov
mov
mov
pop
dec
testb
jge
pop
mov
pop
ss
mov
rcrl
push
add
popa
pusha
lahf
mov
pop
dec
adc
and
fs
inc
or
dec
add
sahf
cmpsb
xlat
popa
push
fiaddl
fs
mov
inc
mov
sbb
mov
lock
mov
aas
daa
int
adc
pop
movsb
pop
add
ss
push
rcll
shlb
sbb
push
popf
loope
stos
outsl
jno
inc
jnp
mov
pop
and
and
dec
pusha
ds
outsb
pop
jp
in
clc
mov
cmp
xchg
pop
xor
ficoms
inc
movsl
fdiv
dec
xchg
push
mov
addb
pop
in
sbb
cmc
lret
outsl
sub
pop
sub
inc
add
cmc
sar
pop
push
fwait
pop
xchg
mov
fldcw
ret
fs
fs
mov
mov
test
addb
les
add
xchg
lods
jne
push
adc
ja
fwait
cmpsl
rcrl
ret
mov
ja
sbb
fdivrs
lret
incl
jecxz
cmpsb
xor
and
push
in
sbb
sarl
mov
not
push
outsb
xor
mov
popf
inc
popf
stos
es
jp
sbbl
stos
addr16
out
push
cmpsl
sub
test
or
xchg
xchg
imul
aaa
xor
inc
push
or
ljmp
pop
mov
sbb
and
add
xor
call
add
divl
das
inc
dec
test
out
bswap
push
scas
push
jle
mov
sarl
xor
pop
ret
in
mov
das
insl
repz
sbb
sub
mov
dec
subb
cmp
and
andl
cmp
inc
insl
mov
pop
int
add
sbb
int3
cwtl
roll
mov
lods
push
test
jb
push
int3
jb
mov
ss
inc
enter
das
xor
inc
lods
jmp
adc
mov
xchg
sub
repz
test
outsb
ja
pop
sbb
add
fimuls
adc
push
mov
pop
jge
jp
mov
cmp
jecxz
jg
mov
notb
les
sub
out
lret
dec
shl
scas
ds
fmul
imull
fmul
push
icebp
inc
or
xchg
mov
test
adc
inc
inc
jmp
mov
scas
and
push
push
out
cmpsl
push
add
ficompl
inc
insl
fwait
xchg
xchg
mov
cmp
jb
mov
mov
and
loope
cltd
rcl
adc
adc
xor
arpl
cmp
xor
mov
das
in
add
jg
push
mov
push
stos
mov
loope
out
cmp
sbb
mov
out
shll
mov
rorb
call
mov
aam
in
xchg
in
mov
in
ds
add
cmp
sbb
adc
or
sbb
lods
push
cs
shrl
int
inc
push
xchg
fsubrs
sbb
cs
mov
dec
out
imul
das
in
movl
std
jo
stc
stos
aas
call
inc
cli
in
cmc
sub
shlb
popa
mov
mov
dec
repz
cmpl
pop
movsl
cmpsb
icebp
pop
cs
adc
mov
in
shrl
cwtl
jmp
sub
js
xlat
mov
insl
jne
popf
cmp
add
pushf
out
or
jmp
imul
das
shll
ja
fldt
xor
pop
das
out
pop
clc
out
stos
loope
scas
jge
testb
shrl
insl
mov
cmc
mov
mov
ljmp
test
inc
out
pop
std
push
jg
sub
fdivl
popa
cmp
xchg
ja
stos
scas
add
ljmp
fcmovnbe
stos
sub
hlt
repnz
rolb
movsb
mov
jae
loope
out
int
inc
stos
sbb
dec
loope
xchg
frstor
add
push
std
push
adc
cmp
mov
in
insb
sub
adc
jne
sbb
iret
mov
or
push
ljmp
lcall
loop
dec
sub
sub
rcll
push
aad
popf
adc
enter
icebp
jno
mov
pop
ljmp
stc
movsl
xchg
jle
outsb
push
stc
sarb
mulb
jb
xchg
das
mov
popf
das
test
sub
adc
cwtl
pop
cmp
cmp
fnsave
addr16
das
xor
mov
mov
xor
pop
mov
outsb
aaa
mov
ljmp
adc
flds
cld
dec
js,pn
sarl
mov
out
add
xor
lock
add
and
cmpsb
outsb
aad
pop
out
inc
xchg
lahf
call
mov
fsubrl
icebp
insb
xor
cmp
jg
outsl
nop
add
adcl
rcrl
pop
jecxz
fwait
inc
pop
xchg
stos
push
sub
adc
popf
movsl
pop
movsb
in
push
call
jmp
test
inc
ficoml
sbb
pushf
pop
mov
and
inc
mov
and
loop
push
push
sub
adc
cmp
addb
cld
mov
das
xchg
adc
mov
fs
ja
xor
mov
push
rol
cwtl
into
sbb
daa
pop
and
out
add
or
testb
jb
xchg
sti
inc
xor
xor
cmc
jge
pop
pop
into
dec
ret
frstor
fsubrl
push
cmp
rcrl
or
xor
jno
repz
dec
lret
dec
pop
mov
rorl
test
popf
icebp
pop
outsl
fstl
sbb
xchg
decl
inc
rcll
mov
cmc
and
dec
cwtl
outsl
repz
cwtl
inc
xlat
or
mov
or
out
int
or
andl
pop
adc
mov
vmulsd
les
jo
xor
stos
scas
test
in
ja
das
je
in
pop
xor
dec
jle
jo
das
pusha
ret
int3
test
mov
mov
adc
mov
mov
movsb
cmp
je
outsl
fistps
and
in
scas
xor
or
inc
inc
pop
inc
sahf
cmp
mov
imul
orl
pop
xchg
fnstenv
mov
mov
pop
mov
mov
inc
repz
stos
jecxz
test
add
adc
lock
push
jl
adc
test
cmc
ret
iret
jp
mov
fidivrl
mov
cs
cmp
es
cltd
cmp
ss
lods
fimuls
sbb
pusha
out
or
mov
jae
fcoml
jmp
add
popf
jne
or
mov
fisubs
inc
mulb
push
or
sub
sub
addr16
imul
loop
cmp
cmp
insb
mov
ja
push
scas
mov
inc
ljmp
les
mov
nop
loopne
ds
call
leave
sub
pop
push
stos
push
mov
cld
pushf
outsl
popf
rcrl
inc
push
pop
clc
cmc
testb
sbb
enter
push
add
fmuls
xlat
jl
outsl
sbb
sahf
cmp
lret
jg
adc
dec
xchg
pop
sub
fisubrs
clc
popa
jle
pop
mov
int3
adc
adc
je
jo
daa
js
fldenv
rol
mov
push
dec
jp
mov
pusha
jecxz
add
xor
dec
in
mov
lea
mov
out
out
mov
xor
push
jne
movsl
adc
mov
loopne
or
icebp
fiaddl
cmc
xor
mov
fcoms
roll
sahf
out
fldl
aaa
test
xlat
pop
cmp
add
jns
iret
xchg
mov
adcl
dec
cmpsb
and
iret
imul
pop
in
xchg
cmp
test
dec
addl
shlb
xor
xor
and
imul
insl
mov
dec
push
push
mov
mov
mulb
lret
jns
ds
int3
mov
lods
xchg
inc
ss
cld
cwtl
test
out
xchg
xchg
int3
fs
push
push
aam
and
dec
lds
insl
test
sbb
and
sbb
pop
gs
cmp
sub
sahf
mov
mov
xlat
push
adc
rcl
popa
clc
xor
gs
sbb
ljmp
rorl
xor
insl
icebp
mov
xchg
jg
jnp
mov
adc
dec
lods
lods
lods
jg
les
in
jg
in
daa
imul
mov
cmpsb
sbb
or
nop
stc
mov
mov
fbld
je
sbb
cmp
shl
bound
inc
mov
lds
jmp
xor
or
das
jmp
adc
and
je
out
stos
out
mov
xor
hlt
mov
js
test
pop
pop
jl
mov
xchg
fisubrs
add
repnz
in
jbe
pop
mov
mov
jmp
cli
dec
pushf
sbb
mov
cmp
imul
adc
pop
in
imul
inc
jnp
iret
clc
loope
push
pop
in
dec
mov
mov
or
mov
pop
adc
subl
enter
push
mov
insl
pop
jne
sbb
mov
add
jae
xchg
cmc
jnp
adc
mov
daa
mov
dec
lret
xchg
inc
repz
jb
mov
cli
push
push
push
mov
aaa
std
sahf
loope
rorl
std
jnp
repz
mulb
pop
sub
adc
out
cmp
ds
leave
jmp
sbb
sbb
mov
test
and
sub
jecxz
outsb
fmuls
sub
repz
lcall
mov
std
push
dec
inc
popa
dec
and
sub
pop
getsec
test
dec
shrb
mov
pop
lahf
icebp
cld
jne
pusha
add
stos
mov
js
clc
imul
mov
or
popf
xlat
dec
in
jns
gs
cli
iret
mov
adc
sbb
shll
adc
call
mov
xchg
in
sub
add
add
xchg
popf
push
inc
cmpsb
outsl
loope
cmp
fistps
fdivp
fs
pop
fnstsw
popa
adc
jecxz
xor
lret
sbb
ds
loope
push
scas
lea
jecxz
femms
imul
insb
and
jmp
sti
std
push
inc
repnz
movsb
cltd
loop
test
jbe,pn
leave
inc
mov
ret
push
pop
jbe
cmc
movsb
pop
jne,pn
push
addr16
gs
inc
leave
xchg
in
lahf
stos
bound
loope
das
add
mov
jne
mov
aad
adc
repz
mov
mov
jge
andl
popf
xchg
popf
cmpsl
xor
pop
mov
jge
xchg
decb
bound
hlt
insb
jo
call
cwtl
cltd
lcall
in
sbb
push
cmp
add
rorb
xchg
mov
fmulp
mov
sub
mov
in
dec
int
jmp
xchg
xchg
push
inc
push
add
lahf
jmp
shrb
xadd
inc
push
mov
lods
push
push
inc
in
sahf
daa
mov
lcall
jecxz
das
int3
aam
xchg
and
xchg
sub
enter
lcall
mov
pop
flds
lret
pop
lcall
gs
xchg
loope
cld
mov
add
inc
xchg
sub
pop
out
int
stos
cmp
add
mov
loope
or
enter
lahf
sbb
jmp
xlat
adc
xchg
decb
xchg
int3
daa
sbb
addr16
ret
addr16
sub
mov
xor
inc
bound
xor
rcrl
ret
sarl
cmp
ret
enter
sub
sbb
push
adc
punpcklwd
lret
ss
fidivrs
adc
pop
out
cli
cmp
jecxz
lahf
cmpsl
test
xchg
and
xorb
rep
and
aad
inc
and
mov
adc
sub
pop
push
push
sbb
lret
cwtl
fucomi
jg
adc
jne
adc
leave
daa
and
adc
mov
pop
nop
push
sub
push
orl
outsb
jmp
mov
mov
xchg
inc
inc
cmp
mov
mov
or
jecxz
neg
dec
scas
pop
add
sbb
loope
mov
lcall
dec
enter
fs
cld
adc
cli
cmp
loope
bound
mov
imul
xchg
shl
cld
push
enter
xchg
data16
mov
jae
or
mov
xchg
xor
push
push
xorb
out
pop
jnp
sub
scas
je
inc
into
pop
lret
dec
mov
bound
xor
ret
jmp
dec
xchg
cltd
mov
dec
mov
sahf
pushf
push
jns
mov
inc
push
mov
call
fcompl
mov
inc
pushf
bound
imulb
insl
popl
and
lods
call
repz
push
pop
nop
mov
std
fadds
fs
adc
outsb
sahf
sub
or
push
dec
or
sub
js
scas
sub
pop
cltd
and
bound
pop
or
push
adc
lods
inc
jne
test
aam
sub
xor
adc
fwait
repnz
popa
and
jmp
enter
scas
cmp
aad
mov
rcl
fisubrl
jno
icebp
xchg
dec
jo
movsb
out
mov
insl
jmp
xor
xchg
mov
lock
popl
mov
cmpsl
push
adcb
sub
add
dec
fidivrl
into
lock
xor
int
int3
mov
scas
jmp
jmp
cmc
cld
pushf
and
shrl
addr16
mov
dec
sarl
in
jge
jnp
dec
add
fsubr
mov
iret
mov
mov
shll
adc
mov
imul
test
sahf
push
pop
jl
add
jno
mov
andb
sbb
mov
sbb
cmpsl
test
int3
push
xchg
cmp
insl
jb
lahf
add
enter
xchg
fidivrs
adc
hlt
data16
and
rcrb
xor
pop
jno
sti
gs
mov
dec
outsl
gs
negl
faddl
in
jmp
dec
mov
fimull
shlb
call
movsb
sub
add
dec
mov
pop
inc
imul
pop
negl
cmc
xor
pop
insb
xor
pushl
lcall
outsb
rorb
inc
xchg
or
pop
data16
popa
push
or
cmc
pop
les
aaa
dec
in
iret
dec
inc
jo
adc
dec
sti
push
loope
jecxz
cwtl
push
lds
pop
mov
fwait
fs
faddl
xor
out
mov
daa
mov
xchg
jmp
cmc
pop
leave
loop
jno
mov
stos
scas
sub
ds
dec
lods
sarl
cltd
std
inc
xchg
push
andb
sti
aas
push
sti
jne
jp,pn
call
iret
jecxz
testl
in
jae
jp
sub
add
jp
mov
int3
mov
xchg
xchg
fists
xor
popa
ret
leave
pop
jbe
cmp
enter
loope
aad
xor
cmp
pop
test
repz
ret
mov
push
add
and
test
out
cwtl
pop
push
or
cmp
ja
outsl
inc
push
jecxz
and
xor
mov
sbb
xchg
cld
jge
imul
das
outsl
outsl
jmp
mov
shrl
popf
pushf
cmc
push
mov
std
cltd
pop
xchg
dec
in
icebp
lcall
in
int
mov
adc
nop
xlat
mov
or
jl
ret
push
arpl
mov
ret
sbb
shlb
mov
or
fs
mov
jae
out
jge
inc
mov
jns
insl
sbb
pop
mov
out
dec
mov
imul
sarl
test
fwait
movsb
and
mov
push
shrl
mov
repz
mov
hlt
mov
rclb
jbe
cmc
aad
stos
dec
stos
jne
fwait
sub
pusha
shr
ret
dec
std
rcr
leave
cmc
xchg
aas
push
lret
nop
into
adc
xchg
shll
add
aad
mov
insl
push
icebp
jle
dec
jmp
cld
push
insb
jbe
sahf
inc
mov
mov
aas
mov
hlt
and
arpl
rolb
xchg
or
xchg
xor
stos
scas
sub
call
rol
repnz
push
mov
enter
inc
cwtl
mov
and
stos
xchg
shr
add
pop
mov
mov
jb
sub
pop
add
es
clc
sbb
test
mov
mov
dec
add
fldenv
pushf
cwtl
cli
lods
xchg
cmp
aaa
jns
in
pop
call
inc
inc
jecxz
xor
int
sub
popa
push
sub
sbb
xchg
bound
or
inc
das
je
push
popa
shr
sti
or
sbb
add
addr16
test
fnsave
sub
pop
xor
mov
loop
jnp
add
dec
jno
push
dec
shl
push
pop
inc
push
movsl
cli
shrl
jl
idivl
pusha
and
jno
loopne
push
js
addr16
xchg
mov
sub
sbb
push
loop
cwtl
jg
test
mov
push
icebp
mov
xor
cld
mull
mov
ja
pusha
pop
xchg
jge
pop
in
in
leave
iret
das
sahf
mov
test
sahf
jmp
push
or
outsb
add
enter
or
xchg
shll
cmp
sbb
out
pop
pop
je
jl
push
outsl
push
mov
ss
aas
ljmp
es
addr16
das
int
movsb
dec
mov
add
pop
or
sbbb
jae
ficoml
push
pop
pushf
xchg
mov
and
sub
insl
fdivp
push
ret
fwait
rorb
in
mov
rcl
cltd
adc
mov
xchg
push
add
sbb
bound
mov
and
cmp
loop
imul
cwtl
xor
int
push
mov
cli
xchg
xchg
inc
int3
dec
test
subl
xor
jle
sub
lahf
sub
mov
aam
xchg
push
leave
adc
arpl
cwtl
xchg
sub
insl
mov
rolb
jl
out
xor
xchg
inc
mov
cmc
xorl
mov
mov
sub
cmc
pop
and
fcompl
push
mov
pop
or
popf
mov
push
xchg
shlb
mov
push
dec
std
mov
add
int
or
push
test
sbb
fistpl
cmpsb
cli
cltd
and
scas
mov
push
mov
outsb
pop
sub
cmp
push
dec
mov
or
aam
aad
inc
imul
jns
bound
cmpsb
lds
fs
dec
sarl
xlat
movsl
pop
xchg
std
out
out
and
sahf
movsb
jb
add
cs
aaa
add
mov
jmp
inc
mov
bswap
insl
add
leave
adc
mov
addl
imul
push
and
fcoml
push
or
jns
adc
push
cmp
bound
fmuls
jl
mov
cmp
xchg
mov
mull
loopne
fistps
cmp
loop
xor
add
push
xchg
mov
cs
popa
cmc
cmp
imul
lock
sub
iret
sbb
imul
sbbl
popa
fnstsw
out
xor
pop
mov
cwtl
mov
shrb
or
loope
ror
jae
ds
add
fisubrl
loop
dec
aaa
cs
cmp
add
mull
dec
adc
xchg
sbb
inc
sub
or
les
mov
rcrl
std
shrl
mov
int3
add
sti
add
xor
in
cli
add
lea
sbb
add
pushf
setne
test
lods
xor
icebp
add
popa
mov
in
push
sbb
mov
sahf
jnp,pn
jl
jno
test
add
into
xchg
out
dec
mov
pusha
mov
sbbb
cmpsb
dec
mov
mov
ljmp
enter
int3
mov
mov
cmp
pop
es
out
jl
xorb
push
xor
mov
stc
mov
dec
gs
add
inc
xor
xor
cmp
adc
insb
xor
xor
sub
push
push
push
push
add
dec
dec
fs
ljmp
dec
or
bound
xor
loope
fs
add
jnp
insl
adc
adc
int
dec
cmp
push
sarl
dec
push
xchg
xchg
inc
sub
xchg
testb
and
sub
inc
mov
sbbl
xchg
sbb
out
pushf
jb,pt
bound
adc
int
mov
push
in
push
dec
jns
sbbb
push
sarl
push
xchg
pushf
ja
xchg
sbb
mov
push
push
test
jmp
mov
inc
or
mov
out
mov
xor
stc
mov
mov
add
std
insb
loopne
std
fildll
pop
outsb
and
in
ja
addl
test
jle
inc
mov
sub
jae
adc
push
mov
pop
scas
jl
push
jnp
sub
lret
pop
ja
testb
cmp
xlat
pop
mov
push
mov
adc
dec
cmpsb
cmc
lds
and
out
popa
mov
mov
sub
xchg
jmp
xchg
pop
add
test
cmp
pop
push
xor
xor
adc
add
mov
movsb
imul
or
or
jns
xchg
iret
cmp
push
or
mov
dec
dec
lret
push
push
dec
dec
xchg
mov
push
adc
call
jp
test
and
adc
enter
fsubs
push
adc
sbb
shll
push
test
and
jmp
jmp
das
push
sub
mov
sete
std
jl
mov
sbb
mov
popf
sbb
and
or
jle
xchg
lret
fbstp
and
insl
jecxz
fildl
loopne
sbb
pop
sub
inc
pop
pop
iret
push
imull
mov
xor
enter
lea
xor
mov
dec
stos
enter
mov
test
ret
mov
int
mov
and
jne
popa
jno
sub
lret
mov
rorl
xchg
in
stos
push
test
lret
ja
mov
in
loopne
and
loope
stc
in
cwtl
mov
cmp
js
inc
jmp
stc
repnz
push
sbb
sar
jbe
fldl
ljmp
add
sahf
adc
push
les
pop
inc
das
inc
aaa
mov
jnp
data16
pop
mov
mov
sbbl
mov
adc
fidivrs
jp
data16
mov
or
adc
cmp
iret
cltd
call
sbb
xlat
lds
cmc
add
scas
xchg
into
mov
pop
ret
rclb
jle
sbb
fadd
aaa
repnz
xor
loopne
cld
cmp
into
inc
fwait
push
mov
inc
in
fadd
pop
aam
aad
sti
sbb
popf
lds
xchg
jecxz
mov
mov
add
and
or
or
mov
mov
dec
xor
popf
notl
push
shlb
std
lcall
mov
pop
aas
jns
loop
cmp
cmp
sti
ss
loop
popa
into
mov
outsl
flds
fnstcw
or
jl
and
iret
out
mov
pop
xchg
sub
and
dec
cwtl
insl
cli
jmp
aam
icebp
lods
cmovno
mov
js
daa
inc
imul
cmp
xchg
int
insb
arpl
bound
aaa
notb
mov
add
xchg
loope
add
sub
shl
dec
fsub
or
das
fidivs
shlb
or
mov
fistpll
pop
push
xor
add
inc
sub
jecxz
push
std
pushf
and
inc
in
in
xbegin
adc
scas
mov
inc
dec
std
add
mov
jns
ss
dec
daa
and
iret
fldt
jmp
dec
push
lds
xchg
test
lock
sahf
mov
popa
add
or
rcrl
icebp
add
push
pop
jecxz
xchg
jb
jne
cmp
dec
jno
dec
mov
mov
xchg
cmc
or
cs
mov
popa
xorl
nop
outsb
inc
loop
out
pop
ret
push
fldt
stos
or
pop
dec
movsb
or
jl
loope
push
cli
cmc
test
test
adc
mov
mov
mov
mov
fnstsw
adc
fnsave
fwait
in
sub
pop
in
lcall
popf
push
ss
icebp
insb
dec
add
dec
loop
andb
hlt
shl
arpl
adc
push
fst
fcmove
mov
cmpsl
cmp
cmp
jb
pop
xchg
les
mov
sub
add
sub
jbe
and
push
push
lods
jl
xchg
inc
inc
jnp
jmp
fbld
dec
adc
movsb
pusha
sti
ja
and
dec
ficoms
and
js
adcl
pop
adc
cmpsb
pop
subl
or
pop
out
add
fisubrl
pop
pop
or
pop
int
repz
mov
shlb
enter
ljmp
dec
cmp
stc
xchg
inc
enter
sti
adc
sarl
rorb
popa
mov
push
cmp
xor
xchg
push
ret
jg
jmp
pop
pop
stc
mov
movb
pop
faddp
roll
ja
repnz
mov
decb
test
dec
movb
cltd
sbb
inc
or
cmp
mov
push
in
faddp
imul
addr16
in
imul
jb
pop
jb
insb
fisubl
sbb
cwtl
hlt
rorb
std
jo
iret
test
cmpsb
push
and
sbb
jbe
mov
xorl
fsubl
add
clc
scas
add
test
out
outsl
std
test
dec
adc
jb
xchg
mov
cmp
out
adc
mov
outsl
inc
js
xchg
adc
mov
pushf
fdivr
xor
aas
xlat
into
mov
and
pop
scas
push
jno
and
addr16
xchg
ss
fiaddl
cmp
pop
jo
sbb
sub
sub
ljmp
jmp
mov
or
push
sahf
clc
cmp
test
xor
test
fsubrs
out
jbe
jg
sahf
popa
les
lods
out
mov
add
orb
cmp
in
mov
fwait
enter
into
sbb
jge
xchg
adc
jne
daa
inc
push
rorl
sbb
inc
outsb
out
and
cld
outsl
jnp
cmp
mov
jg
add
jle
add
pop
jl
push
int3
xchg
jb
enter
or
mov
stos
cmp
in
addr16
sub
push
cli
jle
ja
imul
xchg
inc
in
adc
jmp
dec
int3
js
pop
sbb
push
or
scas
jl
mov
mov
add
inc
push
mov
xor
int
scas
cmpsl
fs
pop
pop
out
frstor
std
or
imul
and
nop
add
push
and
xchg
mov
lods
cmp
arpl
and
mov
mov
outsb
hlt
repnz
push
mov
add
out
test
out
loop
push
push
add
pusha
fs
jge
xchg
stos
sbb
push
icebp
pop
test
mov
aam
sbb
inc
enter
pop
sti
incw
into
cmp
push
pop
fsubl
ljmp
outsl
xor
imul
mov
add
into
and
test
movsl
dec
add
clc
std
scas
loopne
test
fldl
je
das
push
fiadds
push
push
lods
sbb
xchg
mov
lret
lret
lahf
adc
push
js
sarl
scas
popa
icebp
jbe
push
rol
sbb
out
lods
fistpll
push
push
int3
push
test
lock
imul
shlb
mov
icebp
es
jo
mov
sbb
das
fsts
push
rorl
push
pop
lret
pushf
repnz
in
pop
or
add
mov
mov
xor
jecxz
xor
ficompl
loope
cmp
pop
enter
or
sub
xor
das
push
and
lods
sub
test
bound
jnp
xchg
fdivrs
xchg
mov
inc
fcmovnbe
jecxz
je
jl
test
mov
xor
mov
mov
push
aas
mov
add
mov
sub
pop
repnz
xchg
mov
push
add
fistpll
mov
xchg
in
dec
dec
push
seta
callw
dec
cld
jae
test
lahf
add
xor
pop
cmp
adc
movsb
lea
lret
shll
pushf
cmp
iret
call
cmp
icebp
stc
cmpsl
dec
ja
out
mov
fcomi
adc
lock
cmp
int
xchg
stos
nop
mov
jl
push
mov
cmp
insb
mov
cwtl
vmwrite
mov
fnstcw
and
inc
pop
das
out
or
iret
dec
sub
pusha
popf
stos
mov
out
cmp
mov
mov
jg
repnz
int3
and
sbb
and
fcomi
adc
jp
test
lea
popf
shll
add
outsl
mov
cmc
cmp
and
cmp
ljmp
xchg
mov
enter
fistpl
xor
push
pop
sub
mov
ret
push
push
test
dec
pminub
jg
movsl
push
pop
xchg
fbstp
lods
repnz
loop
add
jae
inc
mov
ds
ffree
fnstcw
push
pop
and
mov
cmp
cmp
push
shlb
cmp
ror
mov
inc
std
scas
dec
mov
sub
push
ja
jmp
andb
pop
cld
or
call
rol
add
fwait
or
in
mov
lea
fiadds
aas
adc
ljmp
or
in
xchg
pop
or
jbe
mov
inc
test
sub
or
enter
stc
dec
enter
stos
lea
stos
aam
call
sarb
test
outsl
mov
stos
sbb
neg
jbe
sbb
sti
loopne
sub
dec
push
xor
hlt
inc
and
fstpt
jg
and
repnz
enter
push
push
js
imul
mov
in
pop
pop
fwait
xchg
fidivrs
popa
shlb
mov
lds
arpl
or
dec
das
cli
jmp
xor
add
test
je
mov
rcrb
dec
cwtl
adc
sahf
sub
mov
daa
imul
jg
pop
aas
sub
or
cmp
ret
insl
xlat
fidivl
push
mov
lahf
and
cmpsb
imul
inc
xor
push
mov
pop
lahf
mov
popf
dec
sbb
cwtl
adc
mov
mov
lret
xor
adcb
stos
fwait
into
mov
ja
jmp
add
out
stos
les
adc
push
shlb
pop
and
pop
mov
mov
sbb
imul
xor
movsl
dec
xchg
clc
mov
enter
fsubrs
test
orb
fadds
mov
hlt
jmp
clc
movsl
sbb
fs
ja
or
enter
or
pusha
pop
pop
mov
xchg
pop
ficomps
iret
jp
fcmovb
push
jo
xchg
fstpl
test
mov
and
stos
aas
sub
add
shlb
lret
push
dec
sbb
jecxz
lods
and
pop
aam
leave
sub
adc
aas
push
lahf
sbb
movsb
sbb
adc
mov
sbb
push
dec
ds
xchg
gs
push
xor
mov
xchg
jb
mov
out
scas
xor
dec
sar
mov
into
push
les
inc
dec
incb
add
and
cld
clc
add
sbb
rcrl
and
push
fldl
push
cmpsl
daa
in
rclb
adc
test
call
dec
fdivrp
sub
les
cli
mov
jae
adc
xor
inc
jp
pusha
mov
iret
mov
popf
dec
jns
in
mov
repnz
mov
dec
lds
cli
sbb
mov
aam
data16
nop
cmpb
jno
jb
popf
mov
cwtl
loope
imul
pop
aam
sti
sti
mov
push
btsl
aaa
loope
mov
xchg
in
dec
mov
adc
popf
iret
mov
in
dec
add
add
stc
lret
andb
insb
ljmp
jo
xchg
out
movsb
jo
cld
add
and
sub
outsb
pop
adc
lods
repnz
lahf
popf
adc
push
arpl
loopne
test
es
pop
sub
loope
test
popf
aam
aaa
movsb
popf
rol
out
fs
dec
xor
cmp
push
pop
mov
push
sti
mov
imul
push
cs
insl
jbe
insl
das
mov
dec
dec
das
movsl
jmp
popf
out
sub
mov
add
xchg
push
pop
les
pop
jae
mov
lcall
sub
movsb
pop
sarb
mov
adc
subb
sbb
sbb
shll
sub
roll
jp
fs
push
jbe
jb
push
pop
sahf
jb
jb
pop
sbb
xchg
lret
nop
xor
jb
loopne
pop
jae
pop
pop
dec
sub
jb
pop
push
cmpsl
aas
out
sahf
fldcw
adc
pop
ja
mov
mov
sub
aaa
mov
sub
jbe
adc
adc
test
cld
bound
lret
xchg
mov
sti
repnz
mov
nop
loope
mov
xchg
popf
test
jo
in
add
xchg
stc
add
sub
inc
adc
dec
aam
stc
ss
dec
sbb
cmpsl
cmp
ss
shl
rcll
xchg
pop
gs
mov
sti
imul
scas
mov
or
pop
push
fwait
mov
mov
dec
or
outsb
sti
jno
cmc
bound
popa
push
push
hlt
out
mov
sbb
mov
popf
mov
dec
mov
dec
push
add
dec
out
stc
xor
hlt
mov
jno
sbb
fisubs
pusha
call
repnz
jecxz
cmp
lods
sub
xchg
and
inc
xchg
sbb
test
jl
dec
pushf
sahf
not
mov
aas
pop
adc
jbe
stos
dec
insl
xlat
insb
dec
jmp
add
dec
rcrl
aad
dec
pop
loop
sbb
xor
mov
in
cmpsl
inc
dec
xor
iret
cmpsb
sub
jp
cmp
imul
adc
popf
mov
xchg
adc
sub
mov
add
hlt
iret
or
jno
dec
mov
adc
push
lds
enter
sbb
stc
mov
ss
int3
sub
mov
ds
cmpsb
arpl
dec
sbb
fidivrs
sbb
stos
cmp
lahf
adc
jmp
lcall
in
mov
lock
xor
pusha
hlt
lahf
or
cmp
pop
dec
add
and
shr
xor
push
jp
and
scas
and
nop
das
xchg
pop
nop
iret
push
cmp
ja
push
lcall
or
jb
add
ret
mov
ficomps
rcll
idiv
sbb
pushf
sbb
xor
push
repz
jne
add
mov
mov
sbbb
fcomi
jmp
and
xchg
fmul
testl
mov
lahf
sbb
push
mov
insb
rol
xor
out
pop
cmp
xchg
or
punpcklbw
push
sbb
mov
push
push
xchg
and
sbb
jp
fldenv
icebp
mov
jge
xchg
jl
cmp
popf
mov
xchg
popa
jle
inc
mov
cmc
dec
xchg
jns
jle
fwait
pop
xlat
movb
test
xor
movsl
xchg
lcall
ja
mov
loopne
jnp
xchg
jmp
negl
icebp
inc
dec
int3
inc
aam
xchg
xchg
pushf
cmpsl
inc
shrl
xor
fs
jecxz
xchg
cmp
cmpsl
xchg
push
mov
sbb
xchg
int
sbb
cmpsl
cltd
scas
mov
bnd
cmp
push
sbb
cmpsb
jbe
aam
xchg
ss
sub
sahf
adc
mov
das
adc
stc
cmpsb
cmpl
push
adc
sbb
sub
or
icebp
fwait
dec
mov
push
add
sbb
xorb
or
sarb
adc
ret
in
inc
mov
ficoml
push
loop
stos
mov
gs
xchg
repnz
lahf
mov
outsl
movsb
pop
adc
push
xchg
cmp
xchg
adc
insl
or
xlat
rcrb
and
mov
dec
ljmp
mov
dec
out
jmp
adc
je
mov
cwtl
in
ds
test
cmpsb
test
jmp
jl
xorb
push
adc
loope
add
cmpsl
stos
inc
push
cltd
aam
popa
mov
fmuls
cmp
sub
inc
fists
pop
inc
mov
and
insl
inc
stc
fstps
jge
cmp
jle
clc
lahf
jg
lret
inc
pop
popl
jne
push
mov
test
xchg
mov
ss
inc
stos
adc
cmpsl
xchg
jle
rol
cmpsl
ret
popa
sbb
adc
xor
ret
sub
mov
movsl
fdivrs
stos
addb
pop
je
mov
xor
push
outsl
jl
and
and
inc
aad
cmp
xor
fcompl
push
iret
aaa
push
loope
push
jno
bound
aam
pop
mov
or
cmp
scas
icebp
pop
sbb
dec
mov
pop
hlt
icebp
mov
push
lock
mov
xchg
inc
adc
lock
cltd
mov
xchg
std
mov
mov
scas
fxch
aaa
inc
jne
dec
cmp
insl
xorl
shl
cmp
ja
sbb
jp
in
jge
push
xchg
and
dec
inc
aas
fildl
xor
mov
xor
jecxz
in
fwait
js
xor
scas
loop
lods
outsb
fcoms
inc
ret
movsl
mov
loope
mov
int3
out
movsb
cmpsb
into
jmp
hlt
fisttpl
loopne
aad
arpl
jno
fs
and
jnp
test
test
sub
fstpt
pop
add
imul
xchg
fs
popa
and
iret
push
mov
dec
or
mov
push
cmp
aam
cmp
jle
mov
arpl
cmp
dec
mov
xchg
xor
sbb
ficoms
scas
movsl
addr16
mov
mov
sbb
mov
push
inc
mov
repz
pop
or
ret
sti
ljmp
loopne
outsl
push
adc
dec
pop
lcall
jge
sub
cmp
jne
inc
shl
adc
mov
fwait
outsb
aad
insb
dec
popa
sub
fcoms
cmpsl
and
rorl
mov
cmp
push
adc
sahf
push
sbbl
cmpsb
sub
jl
sarl
mov
push
add
add
movlps
loop
sub
push
push
outsb
pushf
mov
lcall
mov
out
push
push
mov
test
ja
ret
and
gs
mov
int
inc
andb
fdiv
jno
mov
xchg
mov
cltd
mov
into
ljmp
lock
or
dec
xor
clc
sbb
mov
pop
out
dec
dec
jae
out
lahf
mov
std
fsub
sbb
imul
sahf
xchg
pop
jge
imul
out
dec
pop
cltd
repz
repnz
lods
and
aas
pop
ljmp
cltd
cld
sub
testb
jno
clc
fsubrl
pop
pop
pop
mov
std
loop
jo
xchg
aaa
inc
popf
shl
xor
out
xchg
pop
bound
sbb
sbb
in
imulb
sub
cmc
stos
or
lds
rcrl
gs
pop
pop
mov
testl
loope
nop
in
mov
and
xchg
das
or
push
in
cmpsl
and
std
scas
push
mov
cmp
or
ja
cwtl
inc
out
shrl
push
mov
and
test
ficoms
inc
push
cmp
mov
pusha
jno
in
mov
and
cltd
add
divb
pop
or
add
ret
jl
fisubrl
inc
dec
xlat
jb
mov
cmpsb
sbb
std
adc
dec
lods
mov
push
sub
getsec
adc
in
bndldx
in
popa
or
or
mov
std
mov
and
jp
roll
jo
pop
pop
mov
std
sti
cmp
mov
fbld
cli
cmp
hlt
jb
pop
and
sbb
shll
scas
mov
aad
xorl
subl
inc
mov
fisubrl
xchg
sahf
push
sub
cmp
nop
pushf
xchg
jge
mov
test
pop
jbe
jns
incl
adc
ret
cmpsb
ljmp
push
pop
mov
push
and
ret
add
mov
hlt
adc
inc
daa
dec
add
ret
cmc
adc
mov
aas
es
cmp
std
jnp
sbb
test
and
jns
loope
out
push
xor
xor
mov
xor
arpl
fists
xor
jns
mov
loope
cltd
jbe
mov
lods
xor
mov
inc
test
mov
cwtl
ret
xchg
addr16
arpl
adc
cltd
imul
pop
mov
addr16
ret
pop
bound
adc
push
pop
js
jmp
es
push
loope
push
mov
inc
pop
out
or
pushf
outsb
ret
shlb
jnp
dec
aad
adc
enter
jo
lahf
fldt
sub
sub
and
jmp
add
add
adc
ret
sti
mov
pop
inc
push
loopne
push
cmp
int
pop
mov
lcall
add
lret
sahf
leave
inc
decb
loop
gs
lret
jge
lcall
jp
add
loop
sti
dec
stos
mov
xor
jo
xlat
shrb
dec
pop
adc
pusha
lods
repnz
dec
fcomp
cmp
and
mov
xchg
mov
inc
bound
insb
call
sarl
adc
insl
subb
sbb
ja
mov
clc
orb
dec
lds
test
outsl
out
sar
outsb
dec
mov
mov
sbb
test
and
xchg
mov
pop
jno
fisttpl
xor
cmp
test
fsubrl
and
xchg
mov
cwtl
pop
and
fcoml
push
repnz
movsl
sub
lahf
dec
outsb
bound
mov
into
mov
mov
mov
dec
cmp
xchg
mov
jmp
not
push
lret
pop
ret
in
aam
or
das
and
sub
adc
mov
fwait
dec
mov
lods
adc
add
scas
ficomps
cmpsl
pop
jge
test
adc
arpl
jg
push
test
pop
push
out
adc
adc
pusha
fmull
cmp
popa
aam
test
loop
movsl
ljmp
repz
test
jno
cmp
cmc
lret
ret
ds
jge
pop
jl
push
mov
push
pop
xchg
dec
pop
jns
out
xor
mov
lods
mov
imull
sub
insb
aas
cltd
lcall
push
sbb
and
stos
mov
pop
cli
lcall
dec
and
repnz
push
sub
call
and
ret
jecxz
test
jo
cltd
and
push
rcrb
lahf
lods
hlt
add
lea
test
fadds
xchg
xchg
sbb
pop
out
movsl
jae
push
shrb
xchg
mov
dec
add
fldenv
pop
inc
pushf
xorl
fucom
push
repnz
call
ss
icebp
push
mov
pop
jmp
out
jecxz
dec
xchg
mov
xor
mov
gs
mov
lahf
dec
ret
jmp
sub
pop
daa
jns
cmp
frstor
jecxz
insb
mov
xchg
or
jmp
scas
xchg
add
pop
mov
xchg
in
into
int3
fucomi
push
stc
sbb
sub
iret
test
lret
mov
adc
fs
and
rorl
mov
sub
mov
rcr
adc
push
popf
sarb
xor
icebp
or
mov
adc
aas
sub
cwtl
aad
imul
ret
mov
fidivl
fwait
mov
das
rorb
and
fists
inc
or
movsl
and
pop
push
lahf
ret
nop
bound
cmovnp
or
add
imul
ret
in
out
mov
cmpsb
xchg
insl
outsb
cwtl
loopne
or
dec
jo
mov
jl
or
inc
mov
fdivs
cltd
incl
pop
imul
mov
mov
hlt
push
stos
inc
jo
push
lock
push
lret
hlt
mov
repz
inc
imul
in
jnp
mov
adc
outsb
mov
mov
dec
je
cmp
xor
xchg
es
addl
pop
movsb
scas
in
and
stos
out
mov
sbb
push
xor
pusha
cmp
pop
cmp
xchg
or
inc
jg
pop
stos
jmp
adc
push
imul
sbb
pushf
mov
les
sub
cwtl
adc
movsl
rolb
pop
cmp
jle
cwtl
popa
dec
or
jb
sub
je
or
push
dec
stos
subl
xor
lock
jb
int
mov
sbb
cmpsb
sbb
dec
sub
push
fcoms
leave
ret
mov
cwtl
scas
adcl
mov
xchg
xor
movsb
mov
movsl
addl
lock
xchg
or
mov
lret
add
push
jle
or
push
fcomps
ja
push
sub
clc
jecxz
stos
lcall
into
xchg
negl
push
dec
popf
xorl
mov
in
mov
mov
aad
rcrl
and
fcoml
daa
pop
out
sub
imul
pop
and
in
push
mov
loop
lds
cmp
inc
shll
imul
xor
mov
xor
xchg
jb
in
aas
rorb
or
fmuls
fsubs
pop
cs
or
cld
rcrb
loopne
adc
xchg
xchg
inc
mov
pushf
inc
je
add
movsb
pusha
jne
add
xchg
rcrl
out
imul
pop
mov
push
pop
jecxz
or
mov
addb
cmp
rcr
mov
pop
cwtl
or
imul
or
mov
dec
mov
push
add
pop
mov
cli
inc
and
lock
dec
xchg
cmp
mov
movsl
add
fdivrs
jno
lcall
mov
dec
icebp
int
sub
jo
mov
roll
mov
jns
lods
inc
sbb
insb
rcr
es
imul
in
daa
cld
add
repnz
in
arpl
test
pop
nop
sub
les
push
and
push
sahf
xchg
push
or
jle,pn
push
sub
mov
add
dec
add
sub
add
adc
lret
je
stos
xor
push
jo
mov
or
xor
dec
lea
cmp
or
mov
xchg
inc
jae
stc
neg
sub
adc
or
in
lcall
cs
iret
mov
adc
cmpsl
mov
out
in
push
mov
xchg
add
xchg
inc
sbb
lret
nop
or
pusha
js
leave
cmc
out
sub
and
imul
into
in
jecxz
cmpsb
ret
inc
shlb
cmp
push
popf
gs
xlat
mov
je
jge
cmp
pop
mov
sbb
in
dec
aam
adc
xchg
test
js
sbb
roll
cmp
and
mov
sbb
and
test
das
jmp
xlat
and
mov
jle
push
cmc
dec
xchg
sbb
repz
repz
mov
mov
push
es
ret
cmp
or
in
ret
lidtl
xchg
push
dec
js
pop
pop
mov
rcrb
daa
inc
xchg
push
mov
or
mov
cwtl
lods
adc
push
mov
fcomps
xor
jp
sbbl
sbb
add
adc
stc
outsb
sbb
or
icebp
or
and
inc
hlt
mov
cmp
and
mov
jmp
xchg
mov
add
imull
or
sbb
push
sbbl
cmpl
xchg
cmp
imul
or
shlb
gs
lret
test
adcl
adc
fisttpl
out
xchg
and
sub
aad
aam
dec
mov
or
scas
dec
test
outsb
inc
stos
ds
xchg
addl
sbb
stos
mov
jge
enter
jmp
stos
stc
fisubl
aaa
or
xchg
mov
xor
enter
cmc
mov
daa
dec
inc
jg
test
push
cld
fiaddl
jae
fwait
lods
mov
dec
ror
inc
nop
movsb
cmp
nop
cmp
pop
testb
xchg
xchg
and
insb
pop
call
sbb
sarb
mov
fcoml
lods
ss
jle
xchg
enter
push
int
or
xor
and
daa
imul
mov
adc
jg
pop
adc
pop
xor
jae
adc
cltd
cltd
stc
sub
adc
lret
sbb
sub
pushf
iret
mov
jl
sbb
std
dec
movsl
xchg
pop
outsb
insl
or
xchg
fs
cmp
inc
hlt
clc
mov
stos
push
xchg
iret
shrl
pop
push
sub
pusha
mov
punpckhdq
das
arpl
xor
fisttpl
pop
or
imul
mov
imul
js
and
fs
andb
mov
inc
inc
insb
jmp
out
pop
fst
lds
out
or
mov
mov
add
dec
cmp
out
into
idivl
dec
mov
jbe
jp
mov
pop
into
adc
jg
mov
and
xor
jmp
mov
or
sub
adc
pop
add
fcomi
call
cld
mov
jno
cs
mov
dec
push
vunpcklps
cwtl
push
ds
mov
aaa
addr16
imul
ljmp
scas
sbb
loopne
mov
jl
mov
or
or
out
sbb
push
lods
mov
loope
pop
inc
or
cs
xchg
sub
rclb
ss
nop
adc
mov
out
mov
test
pop
mov
push
mov
mov
add
into
movsb
pop
xchg
mov
and
push
fsubrs
xlat
shll
or
sbb
repz
movsb
xchg
cwtl
cmpsl
stos
test
push
mov
movsb
dec
dec
imul
ss
cltd
and
orb
in
cltd
xor
push
cmp
jmp
xor
inc
ret
xchg
in
pop
xchg
aad
add
cmpsl
std
push
or
fldl
mov
clc
imul
xor
fcoms
mov
or
loope
mov
mov
xor
imul
mov
lret
xor
sbb
rol
push
ret
jecxz
cmp
jne
mov
orl
mov
inc
mov
mov
push
iret
inc
xlat
mov
cmc
or
gs
pop
jl
ss
scas
push
clc
jne
push
fistps
call
sbb
sahf
sti
push
mov
sbb
lahf
adc
loope
sbb
pop
test
mov
faddl
sub
pop
cmp
popf
mov
pop
or
loopne
pop
stos
jns
xchg
or
pusha
adc
orb
adc
push
jns
xchg
lods
and
aam
mov
es
test
imul
cmp
jo
cld
enter
push
add
jnp
mov
inc
cmp
sub
fcmovnb
mov
sbb
mov
jmp
cmc
mov
adc
loop
xchg
loop
and
sbb
jae
fiaddl
jge
xchg
sub
mov
pop
idivl
stc
outsl
inc
mov
les
sti
je
into
mov
push
lea
sub
inc
xchg
shlb
ret
mov
shlb
stc
and
outsb
test
in
lea
psllw
into
rcrb
xchg
dec
out
and
idivb
shr
adc
mov
and
call
out
popa
call
mov
xchg
in
cs
or
sub
nop
out
das
nop
daa
push
dec
outsb
dec
stc
inc
call
push
into
mov
push
decl
jb
fwait
pop
xchg
or
adc
movsb
fildl
and
sub
add
mov
mov
test
fiadds
xor
rcrb
idivb
test
dec
decb
sbb
xchg
pop
repz
call
loopne
stos
lahf
xchg
push
xorl
setno
clc
fwait
sbb
xchg
push
cltd
cwtl
icebp
outsb
loop
mov
mov
adcl
sub
in
inc
lods
push
pusha
add
xchg
decb
inc
leave
xchg
push
call
adc
or
mov
dec
jmp
add
jnp
clc
mov
aas
notl
outsb
test
dec
fwait
cmp
pop
xchg
stos
push
iret
pop
xor
sub
push
mov
cmp
dec
lahf
xchg
mov
mov
movsl
filds
aad
insl
addl
outsb
push
imul
pop
inc
imul
stc
lret
fisubrl
je
jp
xchg
fnsave
mov
adc
fs
push
xor
jecxz
imul
enter
mov
loopne
test
fs
mov
mov
jns
lock
xchg
push
sub
inc
popa
cmp
in
jbe
push
fidivl
cmp
push
aad
fcmovu
xor
jp
dec
add
inc
cmp
ja
cmpsl
dec
pop
jae
xchg
nop
out
clc
inc
xchg
xchg
cmp
dec
mov
pop
mov
mov
fwait
int
sar
aad
adc
inc
jl
pop
pop
and
dec
aas
repnz
popf
fucom
or
xor
mov
or
mov
leave
std
or
pushl
loope
pop
int
das
out
gs
mov
xor
add
lods
in
loope
ret
sbb
stos
mov
fldcw
hlt
and
sub
jb
mov
xchg
jge
je
mov
pop
cmp
mov
fs
in
add
mov
repz
dec
bound
xor
pusha
and
jns
jo
ljmp
fwait
mov
mov
fsts
mov
lret
mov
adc
sub
sbb
jnp
push
or
and
push
mov
xchg
nop
ret
mov
outsl
cmp
or
dec
cli
cmp
push
sti
xchg
std
dec
out
test
cmpsb
aam
iret
mov
xor
xlat
jg
inc
adc
mov
xchg
mov
jp
add
out
xlat
ljmp
insl
and
pusha
inc
repz
int3
lods
int3
jge
inc
insl
push
mov
xor
or
dec
mov
cmp
loop
movb
dec
mulb
cltd
lock
push
pop
pop
es
adc
popf
or
add
test
mov
int
xchg
cld
mov
fcoml
in
fisubrs
adc
inc
dec
loop
pop
repz
push
movsb
or
jle
mov
xchg
cmpl
push
mov
mov
mov
mov
sbb
hlt
or
mov
out
call
push
dec
outsb
cmpsl
mov
sahf
loope
fimull
gs
movsb
dec
push
sti
mov
add
jp
cwtl
pop
mov
imul
jg
xchg
rolb
repnz
add
lods
fisttps
jp
pop
ds
test
fcomip
mov
and
push
int3
pop
pcmpeqw
sub
jb
xor
adc
mov
jno
je
or
and
and
or
add
popf
xchg
pop
push
or
ret
push
or
dec
ficompl
mov
xchg
rcl
xchg
aad
pop
sbb
sbb
daa
testl
mov
aaa
xor
popf
lds
adc
lea
into
addr16
scas
jmp
xchg
test
ret
adc
cwtl
adc
test
inc
dec
roll
repz
add
xchg
or
aas
lds
mov
pop
lahf
adc
xchg
push
xchg
ja
stc
sbb
outsl
or
push
test
push
pop
mov
mov
sbb
xchg
sahf
out
scas
xchg
mov
fisubs
test
sub
inc
xor
and
sub
lcall
in
xchg
int
insl
or
xor
and
adc
mov
sbb
adc
sub
rcrb
fmull
push
in
jae
mov
push
pop
mov
movlps
nop
xchg
filds
fists
sbb
cli
xchg
shlb
xchg
int
test
icebp
or
lock
mov
xlat
push
cmc
mov
mov
cmp
std
movsl
jg
add
mov
stos
xchg
jns
inc
pmulhw
shlb
jno
inc
pop
scas
out
mov
idivb
or
lds
mov
adc
add
mov
icebp
inc
jb
loop
fmuls
scas
mov
mov
adc
movsl
aas
sub
test
insb
pop
scas
arpl
stos
pop
or
xchg
stos
faddl
roll
push
sub
bound
es
and
push
out
shrl
in
test
dec
mov
mov
sti
push
je
ljmp
cmp
shl
in
push
and
shll
fdivr
dec
mov
pop
mov
sbb
xchg
push
and
push
sbb
iret
jno
aam
test
xchg
iret
std
outsl
lods
movsl
inc
shl
pusha
add
jg
les
jno
xchg
loopne
xchg
dec
add
js
add
mov
mov
popf
xor
cmc
leave
add
jmp
sub
push
xor
jbe
daa
jae
pop
stos
leave
insb
stos
push
shrb
push
test
xchg
nop
out
xor
or
in
test
jbe
sbb
notl
adcl
jns
popf
xchg
cmp
insl
xchg
in
aaa
movsl
ret
xor
add
daa
enter
mov
sbb
pop
scas
cmp
and
cmovo
xchg
scas
mov
clc
add
add
dec
fistpl
loope
ja
xor
test
mov
call
test
pop
test
inc
cmova
idivl
mov
cmp
jne
mov
jnp
outsb
pop
mov
in
push
mov
mov
adc
inc
pop
pop
adc
add
scas
sub
sbbl
rol
jnp
jne
adc
repz
pop
mov
xor
and
cmp
or
xor
rolb
frstor
add
repz
jmp
lret
repz
rolb
lea
sbb
les
fimull
out
aas
push
sbb
push
test
dec
sahf
stos
cmp
cli
adc
fcoml
cmc
cmp
lret
xchg
sbb
lods
out
sbb
dec
cltd
ficomps
mov
push
and
mov
mov
mov
xchg
push
shr
fildll
mov
adc
mov
adc
scas
ret
xchg
std
insl
dec
nop
sbb
dec
fldenv
test
dec
ds
repnz
xor
cmp
sbb
aad
add
mov
addr16
inc
add
push
pusha
pusha
setae
xlat
inc
dec
or
stc
push
test
sbb
inc
mov
xchg
or
dec
fs
test
and
sbb
xor
push
push
pop
adc
mov
mov
repz
ljmp
hlt
daa
inc
push
mov
xchg
je
repnz
cltd
cs
pushf
into
jle
lahf
rcrl
int
xchg
jbe
fsubrl
mov
add
mov
jmp
xchg
xchg
jge
std
jno
and
xor
pop
sbb
push
sbb
pop
pop
fstpt
mov
outsl
outsl
pop
shlb
adc
test
ljmp
fwait
or
add
leave
pop
or
dec
jmp
xor
cmc
in
ss
mov
icebp
or
cmp
adc
movsl
jb
mov
xchg
addb
push
jb
fisubl
jb
das
adc
sub
mov
pop
jmp
imul
out
test
adc
int
dec
decb
sub
fs
in
xchg
mov
sbb
popa
fiaddl
arpl
iret
aaa
arpl
aam
movsb
test
add
mov
out
mov
push
pop
idivl
sbb
push
add
mov
pop
mov
in
add
leave
or
xchg
push
testb
cmp
cmp
test
jg
xchg
pop
inc
test
xchg
mov
dec
push
insb
xchg
orb
or
adc
dec
push
pop
into
and
mov
into
push
lods
sahf
leave
and
repnz
cs
jo
lds
add
and
and
cltd
push
mov
je
jle
mov
nop
les
xor
scas
push
dec
or
mov
add
or
inc
sub
leave
popa
dec
sub
aaa
or
push
mov
pop
cmc
xlat
pop
dec
clc
pop
push
pop
repz
jns
leave
sbb
testb
sub
mov
out
mov
fcmovnbe
cmpsb
dec
or
and
rclb
jo
fldt
call
pop
shlb
movsb
xchg
add
sub
mov
and
lods
xchg
call
daa
xor
rorb
int3
inc
mov
mov
dec
fs
sti
push
inc
jno
cltd
loop
scas
out
aaa
jb
sbb
das
push
add
andl
pop
fmuls
punpcklwd
cmp
out
xchg
jmp
and
test
call
aaa
and
jne
lock
mov
repnz
cmpb
andl
cmc
xor
ror
or
mov
outsl
dec
pop
fsubrp
mov
filds
xor
push
clc
mov
dec
adc
xorb
cmp
outsb
rcr
psubd
rcrl
xchg
xchg
xor
adc
in
loop
jp
sub
mov
lret
cld
das
sbb
fsubrp
adc
jae
pop
jae
inc
out
adc
adc
ret
or
pop
jle
cltd
enter
lcall
and
or
or
arpl
xlat
pop
icebp
ljmp
lahf
negb
pop
loopne
or
xchg
jae
dec
insb
cs
mov
pop
mov
int3
xchg
hlt
pop
data16
mov
js
xchg
add
mov
and
hlt
mov
fbstp
sub
sub
scas
in
inc
xchg
xlat
test
das
cltd
inc
enter
xchg
inc
xchg
xor
test
mull
push
daa
mov
add
out
std
pushf
imul
xchg
pushf
xor
fwait
test
popf
inc
mov
inc
enter
frstor
xchg
pop
fcmovbe
push
cli
xor
insl
jl
pop
stc
or
push
jne
sub
pop
popa
add
pop
cltd
in
pop
push
mov
cmp
jmp
xchg
sbb
scas
pop
adc
es
pop
push
stos
js
jmp
faddl
adcb
push
ja
mov
jno
mov
and
xlat
outsb
mov
outsb
test
or
sub
adc
clc
jg
leave
orb
mov
inc
push
outsl
daa
xchg
ffree
push
test
or
jle
pop
aas
jl
fists
or
cmp
test
or
movsb
data16
sarl
dec
or
call
movsb
sub
mov
dec
push
outsl
test
enter
mov
xchg
jecxz
push
push
mov
test
out
repnz
pop
ja
jne
rcll
arpl
ljmp
mov
insb
push
outsl
mov
dec
mov
mov
push
xlat
lds
add
push
pop
adc
adc
sub
jns
call
or
xchg
jo
jno
pop
dec
outsb
sbb
cmpsb
fs
les
lret
daa
pop
into
aad
dec
repz
pop
lret
push
enter
sub
mov
jmp
xchg
mov
lock
jle
pushf
popf
test
imul
out
loopne
push
mov
jae
mov
in
in
rorb
aam
sbb
sbb
cli
xorb
add
sbb
and
ljmp
in
mov
imul
cmp
adc
popw
and
cmc
sbb
lds
popa
out
dec
js
scas
call
jmp
fs
fwait
or
test
fs
lahf
xor
mov
call
and
imul
mov
mov
jmp
ds
out
mov
push
dec
xor
aas
aam
aad
jno
cli
into
sub
xchg
in
mov
scas
inc
jmp
and
sub
movsb
push
sub
test
and
pop
fistps
repz
jle
jl
lds
cltd
cmp
xor
fsubr
cltd
xor
push
loop
test
jb
call
pop
fwait
mov
fdiv
sahf
sbb
dec
repnz
or
sahf
es
cli
and
pop
enter
and
enter
aas
adc
movsl
incb
lcall
push
lea
sub
xchg
sbb
shll
call
mov
movsb
cltd
imul
test
ljmp
outsb
out
mov
and
xlat
hlt
and
or
inc
int3
aas
cmpsb
sahf
jae
pusha
dec
adc
test
pop
mov
mov
aam
dec
xchg
cmp
add
adcb
push
faddl
enter
cmp
ljmp
and
xor
and
mov
inc
jnp
mov
insl
hlt
imul
mov
fwait
sbb
jg
je
xor
jb
outsl
dec
movsb
popf
out
hlt
es
lds
mov
aad
mov
and
stos
pop
cs
mov
orl
loop
scas
jne
gs
loopne
je
sbb
or
adc
add
test
xchg
mov
adc
pop
or
sti
xchg
xor
pusha
ja
mov
imul
mov
adc
pop
pop
mov
and
pop
fbstp
mov
sti
out
ss
cmp
push
ja
mov
xchg
aad
push
lahf
push
xchg
inc
xor
mov
cmp
xor
stos
jl
ror
pop
mov
xor
outsl
mov
in
add
xor
sahf
jg
test
das
pop
loope
mov
jne
push
push
add
aaa
rcll
lds
enter
lods
push
cmp
cmpsb
into
or
add
stos
pushf
lds
or
inc
xchg
or
inc
in
imul
or
arpl
addr16
dec
mov
mov
pop
jo
push
add
lock
pushf
cmpsl
pop
mov
mov
das
cmp
add
fsub
push
sub
xor
add
dec
dec
bound
rcl
or
andb
cmp
pop
test
ja
leave
sub
xor
fs
xchg
xchg
mov
pop
das
into
movsb
mov
adc
aad
jb
daa
cmp
arpl
jp
mov
mov
cs
inc
mov
xor
mov
sbb
xchg
inc
je
push
xchg
out
sbb
lahf
addb
scas
xor
shll
insl
inc
mov
loop
pop
jg
jmp
es
out
lcall
loop
ss
les
xchg
pop
dec
dec
dec
fmull
cmp
dec
aad
dec
xlat
pop
js
mov
scas
out
arpl
xchg
dec
rorl
les
mov
into
jns
dec
cmc
and
sub
xor
jnp
mov
mov
jle
push
jnp
add
mov
incb
cld
stos
out
mov
insl
pop
int
or
leave
je
lds
or
pusha
mov
mov
rcll
or
fbstp
fcomp
fchs
jbe
fsubrp
fsubs
jb
clc
and
addr16
xlat
pop
repnz
inc
mov
gs
push
mov
andl
movsl
les
je
or
movl
clc
xlat
ja
dec
sbb
test
jecxz
into
dec
or
xor
ret
mov
dec
addl
dec
negl
lcall
push
iret
in
inc
nop
in
pop
sbb
dec
outsl
and
mov
nop
jo
cmpsl
xor
in
mov
in
mov
lahf
loope
dec
dec
sub
mov
stos
pushf
lret
xchg
dec
lock
outsb
arpl
mov
xchg
movl
push
loopne
xchg
mov
jb
movsb
pop
adc
dec
sbb
lret
xor
adc
pop
sbb
ja,pn
negl
jg
negb
xor
push
jnp
mov
clc
sbb
fdivrl
dec
pop
cmpl
std
rcll
hlt
icebp
jmp
aas
outsl
ficompl
out
insl
pop
gs
push
dec
pusha
das
adc
push
pop
xchg
addr16
lods
and
sarb
outsl
in
into
adc
or
sbb
jbe
test
adc
nop
ficoms
lahf
add
xchg
cmp
jno
and
ret
mov
loopne
pop
loope
xchg
cmp
fistps
das
dec
pusha
mov
in
mov
das
lahf
jnp
mov
cmc
lret
push
test
popf
loopne
iret
subl
jmp
and
and
jp
cmp
daa
repz
xchg
pop
sbb
jmp
or
out
sub
test
lock
jb
or
or
call
mov
dec
xchg
nop
xlat
pop
cmpsl
andb
inc
xor
shlb
add
mov
cmp
jge
jns
in
das
fldcw
outsb
push
ret
not
push
mov
pop
repnz
or
xor
ja
sahf
mov
sbb
push
lahf
pop
inc
dec
in
jb
sbb
lcall
dec
sti
or
sub
cltd
cmpsb
into
mov
pcmpeqb
and
inc
loopne
xchg
rcl
and
lret
mov
ja
fwait
lods
xchg
pop
mov
jb
mov
sbb
insb
decl
mov
scas
into
popa
sti
jne
aam
ret
int
dec
test
ds
push
hlt
push
out
sbb
lock
jbe
pop
aaa
xor
and
popa
lcall
inc
out
dec
pop
cmpsl
sbb
or
inc
adc
lcall
cmpsl
sbb
jge
out
xor
lret
loop
or
pushl
enter
dec
cmp
arpl
or
nop
out
shll
lcall
clc
mov
push
dec
add
movb
mov
ljmp
mov
repz
dec
or
les
or
lret
pop
xchg
cmc
call
push
call
sub
outsl
rcrb
cwtl
ja
push
movsl
adc
ret
aas
ror
mov
xchg
inc
add
add
adc
test
hlt
movsl
out
and
mov
adc
jmp
push
jmp
mov
mov
push
adc
xor
inc
negl
sbb
adc
xor
popl
movl
push
hlt
insl
mov
outsl
cmpsb
mov
adc
push
into
mov
jle
jecxz
mov
jns
cmp
in
pop
sub
or
push
std
cmp
sub
cmc
mov
daa
mov
imul
mov
xor
loope
std
in
and
push
push
xor
roll
mov
scas
insb
test
mov
jmp
and
jge
jmp
and
outsb
dec
pop
outsl
stc
and
push
jae
nop
enter
aaa
lods
jnp
inc
jnp
cmp
pusha
das
or
in
stc
clc
dec
adc
jbe
fimull
out
call
les
and
adc
incl
adc
pop
jg
es
sub
mov
cmp
fisttpl
and
outsb
xchg
inc
jmp
inc
adc
aaa
mov
cmpsb
loope
cld
push
push
das
pop
loop
xor
pop
inc
rclb
bound
outsb
mov
lret
xor
jp
sub
push
adc
shlb
cmp
mov
sti
and
xchg
fistpll
hlt
shll
bound
test
or
or
inc
cld
sarb
fstpl
icebp
das
cli
mov
dec
push
cmp
fidivs
loopne
sbb
mov
push
jno
add
enter
insl
std
cld
mov
in
mov
mov
test
push
and
call
lcall
andl
xor
add
not
sub
das
and
jge
cld
lret
aaa
push
movsb
pop
cmp
insb
add
xchg
imul
mov
cmpsl
jmp
icebp
repz
fnsave
aaa
inc
adc
pop
dec
popa
dec
inc
sub
cmpsb
xor
pusha
in
xchg
sub
add
pmaxsw
out
add
test
push
inc
and
jl
ljmp
outsl
push
movl
fwait
or
xor
or
jecxz
mov
imul
jmp
mov
and
pop
mov
in
pop
ret
or
push
cmp
loop
roll
rcrl
mov
loope
call
jle
add
push
js
cmp
enter
sub
sbb
loope
bound
scas
pop
sub
adcl
adc
xchg
stc
pop
mov
out
dec
int
mov
mov
pop
cmp
and
fsts
sub
cli
or
mov
add
fldcw
sahf
aad
les
repz
ljmp
sub
mov
pop
xchg
out
sahf
pop
mov
push
or
out
inc
sub
sbb
sbbl
popa
sub
mov
mov
test
rcll
clc
mov
adc
pop
ret
aas
in
scas
or
ljmp
cmpsb
push
jp
int
cmp
out
adc
pop
push
movsb
pop
mov
iret
cltd
jp
sbb
mov
cmp
cmpsb
or
push
push
lcall
xlat
arpl
gs
pop
fiadds
push
nop
daa
cmp
lds
mov
iret
aas
cli
sahf
sbb
xlat
pop
popf
push
inc
mov
mov
movsb
ret
mov
jno
pop
xchg
std
sub
and
mov
inc
mov
mov
repz
sahf
pushf
rorl
jo
fists
mov
pop
jbe
dec
jbe
and
or
inc
xchg
pop
jb
sub
insb
nop
in
mov
movsl
add
mov
cmp
mov
rcll
inc
int
cmp
add
adc
cmp
ja
enter
mov
jmp
inc
sbbb
repz
lods
hlt
subl
pop
aas
mov
ret
mov
and
aad
je
sahf
test
pop
movsb
lds
ret
outsl
mov
xchg
dec
insl
imul
hlt
lcall
dec
loope
adc
sub
lea
jno
inc
jmp
lds
mov
aad
jle
mov
ret
or
cld
jg
test
sub
aad
lret
inc
push
mov
push
sub
fnsave
jns
aad
scas
mov
mov
push
lret
jae
pushf
popa
sbb
sub
xchg
lea
mov
push
add
xchg
sub
cli
pushf
ficoml
mov
stc
xchg
xchg
sub
mov
sarl
mov
inc
popa
into
sbb
sub
cli
stc
cmpb
mov
loope
jl
jns
fbld
cmc
and
adc
in
mov
mov
aam
xchg
and
sbb
inc
andps
or
repz
pop
out
cmc
dec
and
sbb
mov
stc
adc
sub
stc
xlat
or
jmp
aaa
outsb
adc
inc
push
or
les
sarb
push
orb
dec
inc
pop
ljmp
adc
cli
inc
ja
xchg
sbb
sarb
cmpsl
xor
sti
jl
icebp
mov
jae
clc
xchg
sbb
dec
xchg
jle
mov
push
jp
repnz
push
test
jne
push
mov
and
add
jmp
lret
adc
movnti
sbb
push
rcll
push
addb
stc
test
stos
inc
hlt
cmp
mov
jecxz
ret
outsb
cwtl
push
into
sbb
in
mov
sub
fidivl
mov
and
jge
out
js
jnp
lock
popf
adc
inc
add
data16
add
xor
addr16
ffreep
cmp
add
mov
adc
jge
outsb
mov
ja
mov
leave
in
adc
xchg
movsb
and
xchg
pushf
dec
mov
push
mov
into
test
dec
pop
fcmovb
pmaddwd
mov
in
xor
inc
mov
jecxz
sbb
sahf
fwait
test
xchg
pop
xchg
or
into
add
pop
sbb
push
mov
cltd
mov
and
test
popf
mov
hlt
pop
push
lahf
or
movsl
mov
iret
mov
push
bound
test
call
les
subl
and
popa
add
xchg
dec
popf
or
jno
pop
popf
mov
pop
data16
mov
jg
enter
and
xchg
mov
sub
pop
ss
mov
ret
lret
je
cmp
out
lret
mov
mov
divl
ds
iret
xchg
sahf
rcr
mov
xchg
notb
addr16
adc
mov
xchg
outsl
push
sub
loopne
sti
aaa
cld
mov
mov
adc
and
std
fcmove
mov
test
ja
cmp
adc
mov
lahf
int
xchg
cmp
and
das
push
xlat
into
les
insb
xor
adc
add
mov
jle
push
lock
pushf
pushf
xlat
cmpl
xabort
push
mov
inc
cmc
ss
add
ficomps
dec
arpl
cmp
mov
iret
lcall
aad
cmp
mov
into
das
ja
not
call
adc
pop
cwtl
jmp
jge
js
or
xor
nop
mov
pop
add
test
les
xor
sub
rcr
sbb
add
push
pop
ret
xchg
sbb
shl
jbe
and
in
cmp
xchg
adc
inc
cltd
jno
jb
xchg
or
cmp
dec
sahf
movsb
and
xor
in
lods
outsl
pop
pushf
inc
inc
mov
dec
jns
in
int
lret
inc
pop
jbe
pusha
pop
add
xchg
iret
xor
jns
clc
mov
mov
push
cs
mov
sbb
mov
outsb
rclb
stos
pushf
mov
psrld
aam
bts
aaa
xlat
and
outsb
jle
into
xchg
push
or
js
inc
push
jmp
lods
mov
imull
jne
mov
sbbl
or
out
dec
sbb
mov
test
push
dec
aad
cltd
fcomip
xor
jl
mov
jns
push
inc
sbb
fwait
mov
mov
jg
mov
lret
imull
push
addr16
jns
mov
in
loope
and
xchg
sub
sub
stos
dec
lds
mov
cmpsb
xor
add
aaa
inc
test
into
mov
scas
pop
inc
imul
sub
jo
pop
repz
xor
add
xor
jmp
out
adc
leave
inc
out
push
mov
inc
mov
pop
daa
pop
sub
push
and
mov
in
cmp
dec
and
inc
xor
and
and
sarl
dec
outsl
cmp
xlat
xlat
xchg
daa
xchg
out
rorb
mov
add
push
pushf
int
lea
unpcklps
xor
and
sub
scas
mov
subl
ffreep
pop
addb
aad
or
sbb
cmp
out
ret
cmpsl
mov
notl
lods
out
ret
inc
out
test
lcall
pop
push
rol
les
daa
leave
jmp
hlt
icebp
or
xor
mul
mov
divb
pop
xor
popa
adc
lods
lods
lds
push
lods
push
adc
xchg
outsb
pop
shr
lea
jne
add
sbbl
push
lcall
rolb
negl
and
sub
nop
inc
out
ficoms
mov
and
add
dec
dec
or
fcmovnbe
adc
movsb
mov
add
in
push
pop
mov
mov
leave
imul
jne
loope
pop
int
sahf
pop
and
fsubl
mov
adc
in
push
adc
mov
loopne
or
call
pop
aad
add
enter
jbe
dec
aam
xchg
dec
jo
jnp
movsb
xchg
cli
jne
popa
sbb
adc
xor
sub
add
call
mov
shrb
iret
cmc
lods
adc
sbb
xlat
jbe
lods
add
popf
push
sub
test
inc
fildl
in
adc
call
and
gs
mov
xchg
mov
sub
ja
sub
in
ret
push
adc
addr16
or
outsb
sbb
cld
leave
jno
test
popf
fwait
and
dec
mov
rcll
xlat
add
add
mov
or
pop
test
push
and
in
mov
int
insb
push
sti
rcr
xchg
repz
ja
add
pop
inc
jbe
sub
enter
pop
ds
loop
les
add
adc
cmp
pushf
test
dec
cmpl
out
push
mov
or
xor
jle
popf
jbe
movsl
sti
mov
loop
cmp
scas
and
decl
push
jbe
pusha
inc
xor
mov
xchg
repnz
pusha
fimuls
dec
addr16
ja
inc
add
jbe
out
push
jl
cs
clc
adc
enter
xor
or
popa
mov
dec
es
cmp
and
mov
js
push
cmp
stc
push
and
push
mov
push
jmp
push
sbb
out
ffree
test
iret
push
pop
sbb
mov
pop
or
mov
ja
add
std
inc
or
dec
or
xlat
lods
push
popa
add
out
bound
shll
fld
enter
jae
add
clc
cmpsb
mov
pop
or
dec
ja
sub
xor
ss
pop
mov
pusha
paddusb
adc
enter
repnz
ds
lret
fbstp
jae
push
sub
loope
jge
jb
jge
pop
xchg
out
mov
loop
mov
lret
inc
cmp
in
insl
sub
imul
test
cmp
movsl
popl
jge
cmp
test
pop
loopne
jmp
loope
incl
mov
mov
mov
shl
jae
and
mov
test
fldt
mov
out
mov
test
cmp
leave
fidivs
sti
mov
pop
ljmp
sub
lret
sbb
pop
cmpsb
lods
pushl
daa
cmp
addr16
xchg
or
push
mov
addr16
xor
cmp
push
jb
xor
push
push
dec
sbb
pand
fsubr
fld
mov
mov
sbbb
jo
xchg
fs
push
iret
push
dec
or
ljmp
mov
add
mov
mov
mov
sbb
inc
out
sub
das
dec
sub
pushf
call
cli
xchg
ds
add
aad
push
ret
push
into
mull
scas
sbb
ja
out
pop
xchg
push
int
xchg
sub
repnz
cmpsl
dec
les
pop
mov
lock
or
add
push
xchg
cld
dec
lret
mov
inc
jnp
push
sub
nop
xlat
push
leave
mov
mov
cmp
push
mov
inc
inc
inc
loope
outsl
jp
sbb
dec
and
imul
inc
mov
pop
sbb
movsb
fs
popf
jmp
mov
jmp
push
sti
push
test
pop
cld
wrmsr
add
sbb
pop
fisubs
bound
cmovns
sub
inc
mov
xor
mov
js
notb
xchg
sahf
hlt
ret
enter
arpl
fdivl
cld
push
enter
sub
cld
sub
mov
repz
fidivl
arpl
add
inc
cmpsb
pop
aas
and
gs
jo
movsl
adc
mov
sbb
inc
rcl
ret
cmpsb
and
xchg
dec
fidivs
cmp
cmp
cmp
inc
call
insb
nop
dec
cli
popf
add
ret
pop
ret
mov
push
int3
loope
cmp
popf
movsb
insb
push
scas
mov
mov
xchg
inc
pop
outsl
aad
mov
cmp
xchg
scas
and
ljmp
push
sarl
inc
inc
mov
inc
cltd
test
icebp
jmp
popa
jb
mov
pop
movsl
adc
or
sbb
pop
shr
sbb
jl
sub
iret
xor
stos
insb
mov
sub
xchg
and
inc
or
clc
mov
sbb
ret
xchg
popf
enter
adc
pop
pop
jecxz
test
ret
aaa
push
loope
popf
xor
es
mov
jnp
mov
sarb
negl
cmp
fs
cmpsl
push
xor
inc
pop
push
pop
sbb
adc
pop
fisubrl
cmpsb
xchg
enter
and
and
adc
mov
sbb
push
add
xchg
lret
aas
or
stc
inc
movsb
jb
into
pop
xor
test
idivl
ret
popf
sub
in
lods
and
xor
mov
and
push
pop
pop
cmp
xor
ds
pop
shrb
test
int3
out
daa
cmpl
inc
call
in
dec
lods
stos
loop
icebp
sub
jnp
ret
aas
test
push
dec
mov
mov
push
sbb
insl
repnz
push
aad
mov
daa
jbe
jge
or
cs
scas
xlat
mov
fmuls
mov
dec
mov
out
push
push
stos
jbe
xchg
mov
pop
pop
jmp
push
les
jbe
mov
out
mov
out
in
jns
fbld
dec
outsb
scas
push
xor
xchg
lret
scas
dec
xor
add
bound
inc
sbb
aaa
jl
push
bound
mov
sbb
pop
xor
js
gs
sbb
jle
test
rdtsc
cmc
ss
rolb
cmp
dec
xor
or
jle
out
adc
xchg
pop
gs
dec
loope
scas
iret
xchg
push
xchg
inc
sub
test
orb
and
push
pop
rcll
inc
outsl
loope
jne
sti
repnz
inc
pop
gs
mov
movsl
mov
sbb
pop
add
lods
call
shrl
call
repz
add
inc
push
and
and
mov
shll
call
inc
sub
push
cmp
mov
pop
arpl
cmp
fsubrs
adc
cli
sub
das
loop
pop
gs
adc
pop
mov
mov
sti
xlat
stos
jb
jle
shlb
sbb
rep
in
and
push
push
dec
push
stos
testl
leave
dec
jle
push
cmp
jbe
cmc
lret
decl
out
fwait
xchg
and
sti
cltd
dec
outsb
arpl
jl
pop
cwtl
sbb
push
mov
mov
loope
push
pop
cltd
jl
notl
adc
fs
push
xor
movsb
fbld
mov
out
push
das
sti
and
dec
jg
cmp
daa
fsubs
sbb
fdivrl
in
pushl
pushf
subb
scas
ja
jo
mov
or
clc
or
icebp
movsb
push
inc
aaa
testl
jbe
hlt
pop
insb
rcrb
pushf
call
cs
dec
xchg
out
xchg
mov
fsubrl
in
push
sub
scas
pop
adc
inc
cmp
fucom
mov
push
scas
clc
imul
and
jb
sbb
xor
sub
mov
mov
ror
adc
adc
push
bound
sub
dec
int3
push
and
stos
push
push
push
push
inc
jecxz
cmp
mov
jne
movsb
xchg
and
in
out
xchg
push
pop
add
repnz
inc
seta
lds
adc
daa
movsb
cmp
cmpsb
mov
aam
mov
mov
test
shll
movsl
flds
repnz
aaa
or
push
lret
insl
xchg
push
and
mov
mov
jmp
sub
inc
out
inc
push
movsl
cld
pop
sub
adc
xchg
gs
lcall
dec
mov
rcrb
ljmp
push
test
jns
cli
ss
mov
dec
sub
mov
pusha
jmp
sub
std
xchg
and
movsb
push
push
mov
push
lret
js
mov
aaa
adc
ds
sub
punpckhbw
lock
push
cli
jle
loopne
jae
cmp
jge
and
pop
pop
sub
mov
ljmp
jbe
out
cmp
cmc
mov
push
sbb
mov
or
push
addb
add
cmp
in
subl
mov
iret
dec
mov
aad
rclb
lahf
popa
pop
outsb
dec
rcl
mov
mov
sub
mov
adc
jmp
jnp
loope
xchg
mov
dec
outsb
pop
icebp
xchg
inc
hlt
int3
test
mov
es
push
popf
rcl
into
add
add
push
dec
jbe
sbb
sub
scas
fs
or
xchg
call
cmpsl
addb
mov
pop
out
sub
jno
fwait
insl
out
dec
xor
xchg
pop
fs
pop
or
dec
mov
cmp
mov
daa
mov
xchg
std
scas
xchg
adc
popf
and
push
mov
cmp
xlat
aaa
ljmp
push
or
in
daa
mov
xchg
loopne
movsb
mulb
and
sub
cmp
dec
cmpsl
dec
inc
push
and
sbb
push
inc
xorl
icebp
cmp
or
cmp
pop
shll
or
inc
jne
jmp
or
mov
xchg
ja
cld
lock
cmp
jge
test
shlb
mov
sbb
jne
lods
mov
fisubrl
call
in
bound
cmp
jl
or
mov
cmpsl
test
sub
or
inc
add
dec
popa
sub
inc
jns
jnp
outsl
xor
test
ljmp
sbb
xor
lret
movsb
lret
mov
cmp
xchg
add
fldt
fs
les
fbstp
int3
or
push
cmp
scas
jecxz
mov
test
stos
pop
and
icebp
out
mov
aam
dec
loopne
call
jno
stc
jo
xchg
nop
mov
push
cltd
mov
jg
fistpl
or
cwtl
push
mov
pop
inc
stc
or
jmp
pusha
jbe
mov
cmp
test
stc
lea
xor
push
push
mov
test
rcrb
roll
push
imul
jecxz
mov
pop
mov
sahf
cwtl
jns
cwtl
sub
lret
xor
sub
cmc
jbe
jp
sarb
cs
mov
mov
leave
in
cmpsl
shlb
jnp
sbb
jge
lahf
sbb
fwait
pop
xor
aam
icebp
sub
fcoml
movsl
push
add
and
jnp
mov
nop
dec
mov
test
jle
xor
sbbl
mov
xor
mov
aas
mov
pop
test
jb
xchg
mov
fwait
mov
xor
cld
imul
fwait
lds
sub
fcmovu
cmp
pop
mov
hlt
inc
or
mov
inc
inc
mov
repnz
add
outsb
xchg
dec
jno
or
xchg
ja
xor
cmpsl
icebp
mull
jg
sbb
dec
cmp
test
mov
aam
out
outsb
xor
lret
sbbl
mov
and
xlat
and
sub
jbe
stos
or
inc
jbe
jnp
mov
or
mov
mov
repz
lea
aam
mov
mov
push
jnp
mov
sbb
add
ds
dec
mov
shr
mov
lret
mov
pusha
push
inc
adc
mov
fcoml
data16
cmc
cli
and
loopne
into
sbb
dec
fists
fildll
xchg
sbb
push
push
cmp
aad
mov
jb
fisttpl
jne
dec
add
sbb
stc
mov
daa
jl
out
sbb
into
fldt
jg
xchg
xchg
cli
pop
lret
or
add
xor
jnp
mov
inc
pop
xchg
cmp
sbb
xchg
mov
push
xchg
xor
or
mov
mov
imul
mov
out
adc
fimull
jl
mov
lahf
pmulhuw
lret
mov
mov
cmp
aas
add
xchg
mov
adc
lods
jge
aam
ss
xchg
cmpsb
loope
aad
mov
adc
sbbl
rorl
cld
fnstsw
pop
xchg
js
cld
std
cltd
loopne
sub
les
mov
xor
das
shll
iret
outsb
mov
mov
fiaddl
mov
andb
fidivs
cwtl
xorl
imul
sbb
pop
leave
jg
cmp
add
ljmp
stc
mov
out
ljmp
pop
inc
dec
xor
mov
cld
jmp
mov
dec
dec
call
outsb
add
push
into
jb
shlb
cmpsl
cmp
pop
xor
ljmp
mov
and
addl
push
iret
mov
mov
shlb
nop
jg
repnz
stos
repnz
push
xchg
jnp
mov
dec
push
jecxz
sti
out
push
inc
inc
in
inc
mov
xchg
movsb
ret
ret
in
and
in
lcall
sub
ds
bound
loopne
std
jbe
and
bound
add
xor
in
insl
mov
dec
xchg
dec
fcompl
icebp
jo
push
sub
shll
popf
inc
inc
or
xor
push
sti
fidivs
push
push
xchg
arpl
test
push
or
inc
jecxz
inc
jge
pop
dec
and
sbb
in
cmc
lret
adc
cli
inc
mov
popf
xor
ror
lods
pop
out
test
out
adc
out
in
lock
xchg
sbb
or
jns
mov
inc
dec
lea
push
inc
lcall
sti
inc
shlb
dec
mov
insl
sub
icebp
cltd
cld
xchg
xchg
add
sbb
inc
jne
push
cwtl
hlt
cmp
dec
aad
shl
lahf
je
sahf
jb
jg
inc
fists
ja
inc
and
mov
test
movsl
por
repnz
repnz
lock
jmp
xchg
insb
pop
hlt
movsl
mov
cltd
enter
out
mov
lcall
mov
std
xlat
imull
and
stc
mov
xchg
jns
test
in
fnsave
or
mov
xor
outsb
pop
ret
adc
outsl
pop
lret
andl
push
mov
fadds
inc
popf
js
sbb
xchg
push
aas
repz
testl
push
dec
into
xor
mov
sahf
cli
mov
fwait
inc
inc
mov
sarb
lds
jmp
in
cwtl
adc
test
and
imull
sahf
jae
or
ss
or
pop
mov
push
stc
ficompl
mov
outsl
imul
sbb
xlat
popa
mov
xchg
dec
jecxz
jbe
mov
xor
loopne
push
test
stc
mov
cld
sbb
mov
jo
sbb
xor
add
push
mov
popa
pmulhuw
xchg
cmc
add
dec
out
enter
in
jge
mov
jne
dec
jecxz
jge
iret
mov
popf
inc
in
xchg
dec
cmp
int
cmp
sahf
sub
out
test
jg
js
lds
fcomps
into
add
or
scas
sbbb
int3
pusha
add
jmp
or
imul
sahf
cwtl
dec
xchg
add
mov
aam
mov
daa
pop
les
push
cmpsb
cli
in
mov
mov
test
das
cmp
jb
xor
lret
pushf
dec
mov
cwtl
lods
out
adc
je
into
fisubl
rorb
scas
pop
imul
xor
mov
sub
mov
leave
imul
dec
push
js
insb
sbb
rcrb
push
and
cmp
cwtl
popa
push
pop
loopne
scas
push
loope
icebp
cmp
pop
cmp
or
in
sub
push
mov
rolb
lahf
dec
rcrl
xor
sbb
cmp
clc
jo
mov
mov
in
sbbl
movsb
sarb
mov
test
push
or
and
test
loopne
sbb
jg
lds
cmpsb
addb
adc
adc
push
jnp
in
sti
or
test
adc
jg
dec
pop
movsb
pop
enter
fldenv
or
insl
loope
xchg
lock
sub
sbb
push
dec
jge
fcmovnbe
aad
imull
js
push
popa
xchg
cmp
stos
sbb
pop
cmpsl
test
dec
push
jl
cmp
pop
mov
loopne
inc
mov
pop
pop
lock
cld
push
sub
xor
jbe
jecxz
jne
orb
xor
jo
cld
pop
call
push
adc
stos
shrl
leave
data16
mov
jle
push
cmpsb
xlat
sub
mov
push
daa
mov
mov
aad
fistpll
in
add
sbb
stos
sub
cwtl
stos
pop
testb
cmp
jmp
outsb
cmp
xchg
das
rcrl
push
rcrb
es
mull
sbb
ja
ret
cmp
fucomip
addr16
mov
sbb
mov
inc
cmp
and
lahf
sub
jns
sbbb
adc
cmpsb
inc
sti
insb
sbb
xlat
jnp
cld
xchg
jle
nop
nop
mov
addr16
mov
inc
fdivs
jne
ret
pop
xor
push
ja
cmp
jl
in
and
leave
pop
popa
dec
and
std
mov
sbb
jae
stos
stc
lret
inc
xorl
sahf
test
cmp
out
shrb
jle
sub
arpl
out
cmp
call
xlat
rep
xchg
mov
scas
stos
cltd
mov
xlat
inc
push
dec
leave
cmc
sbb
call
arpl
imul
dec
adc
dec
mov
add
push
mov
das
adc
or
lods
mov
and
pop
fldcw
je
push
push
repz
add
push
mov
subl
in
mov
icebp
or
xchg
sub
cmp
jbe
pop
pusha
lcall
vmovdqa
int
lcall
test
cltd
jbe
jnp
pop
scas
ss
or
daa
packsswb
dec
lahf
xchg
xchg
and
xchg
pop
rcr
sti
outsl
pop
jle
add
or
shll
fcoms
adc
sub
mov
jae
daa
lea
daa
aaa
pop
push
ret
push
jnp
int
push
sub
popf
ret
rcr
clc
inc
in
test
jno
cmp
test
pop
sbb
add
ljmp
es
out
or
ret
lods
aad
repz
push
int
pop
sbb
pop
pop
dec
push
ffree
mov
mov
sbb
aaa
add
mov
fimuls
sbb
jo,pt
out
int3
or
push
mov
pop
call
pop
xchg
clc
pop
push
outsb
ds
paddusb
rcrl
fcomps
test
mov
test
and
sbb
jp
jno
loop
or
std
cmp
cmp
std
aad
call
mov
push
test
mov
pop
test
loopne
sahf
repz
push
and
testb
jecxz
scas
and
test
mov
ljmp
inc
cmpsb
ljmp
mov
jb
add
cld
es
or
popf
jo
aad
dec
xchg
decl
cs
ret
adc
push
add
test
aas
iret
shl
adc
mov
push
fildll
stos
xchg
add
push
leave
adcb
mov
and
cmpsl
pop
iret
test
dec
jno
in
subl
in
add
sub
adc
mov
dec
std
pop
repz
jo
ja
and
insl
inc
xorb
iret
push
ja
xor
jle
ret
dec
mov
jo
enter
mov
cmpsb
pop
jp
push
add
and
addr16
leave
pop
ljmp
scas
repnz
xchg
pushf
mov
cmp
adc
mov
adc
fistpl
cmpb
arpl
icebp
fildll
out
lret
cmp
icebp
sahf
mov
js
sub
lcall
mov
bound
cmpsb
or
aam
adc
or
xor
js
pop
test
add
test
in
pop
push
sbb
lret
out
loopne
dec
lret
mov
adc
inc
icebp
mov
adc
dec
push
cmpsb
jg
fsubs
dec
sbb
push
cmp
and
stos
xchg
in
or
pop
ret
xor
stos
mov
dec
lea
fldl
inc
jmp
mov
jae
fsts
mov
in
mov
mov
push
aaa
repnz
inc
repnz
or
cli
xchg
cmp
aaa
jle
lret
shll
mov
lock
cmp
jp
mov
dec
or
push
sub
outsl
cmpsb
pcmpeqb
jmp
test
clc
subl
dec
out
int
stos
jnp,pn
sub
mov
mov
lret
out
jb
xor
daa
sbb
push
mov
nop
sbb
pusha
sbb
lcall
and
xor
mov
andl
aam
movl
jp
js
shlb
icebp
out
pop
insl
cli
ret
adc
pop
les
pop
mov
push
lcall
push
sbb
pop
icebp
mov
inc
inc
repnz
and
aam
ret
imul
cli
or
movsb
add
adc
imul
dec
inc
mov
sahf
stos
das
jae
rcrl
stc
imul
icebp
ss
ret
es
push
sbb
mov
bound
daa
inc
loop
mov
xchg
pop
mov
or
mov
xor
jmp
pop
xor
loope
sbb
push
mov
iret
movsl
out
loope
cmp
push
mov
loopne
mov
cmp
insl
push
inc
insb
pop
push
dec
xchg
pop
leave
dec
xor
aas
sub
xor
and
push
mov
adc
inc
fmuls
rcrb
das
adc
mov
ret
fdivrl
mov
movsb
ret
mov
popl
insb
pop
call
push
dec
sahf
iret
stos
adc
in
and
pop
jl
sub
insl
data16
pop
mov
mov
pop
inc
aam
xlat
jne
pop
xlat
mov
lahf
pop
inc
jnp,pt
adc
popf
inc
xchg
icebp
std
sbb
jne
push
ret
mov
insl
fs
data16
gs
jge
inc
je
cmp
mov
mov
mov
push
cmpsb
out
inc
pop
ret
jae
mov
cld
inc
pop
mov
mov
push
cmp
leave
bound
cmovb
xchg
ja
and
pop
push
mov
jecxz
lods
lods
push
or
sbb
loope
iret
cltd
inc
rorb
lea
inc
xor
jb
mov
mov
push
or
and
add
lds
or
xchg
inc
mov
mov
nop
sub
mov
jmp
add
ret
jmp
dec
test
in
pop
sahf
cwtl
add
inc
roll
pop
in
add
out
pop
popf
ret
sbb
int3
sbb
divl
push
inc
xchg
stc
out
and
mov
xorl
add
pop
ret
nop
idiv
test
loopne
add
push
mov
mov
xor
xlat
aas
cmp
jmp
fwait
jp
call
mov
inc
into
ss
fdivs
std
and
test
scas
ds
mov
les
stc
pushf
or
mov
sarl
fmul
scas
xor
jecxz
shlb
lds
pop
mov
or
fcomps
mov
cld
xchg
adc
mov
or
mov
push
push
in
into
push
in
scas
in
stc
push
fisttpl
enter
jge
push
inc
add
bound
mov
popa
adc
push
adc
mov
negb
xor
push
push
mov
aaa
mov
fwait
ds
cmpsb
jnp
push
dec
cmp
mulb
es
sbb
add
icebp
repz
sub
fisubrl
int3
adc
dec
pop
add
shlb
adc
sbb
icebp
adc
repnz
clc
bound
pmaxsw
nop
icebp
or
xchg
mov
icebp
addr16
xchg
stos
call
push
inc
out
cmp
cs
jnp
jl
lret
negb
cmp
mov
inc
or
cwtl
cmp
ljmp
arpl
stos
xchg
and
or
sub
cmp
lcall
sbb
xor
ja
aaa
jg
or
mov
mov
jae
shrl
inc
jo
mov
sti
scas
popa
push
test
pushf
lcall
jmp
insl
loopne
xchg
xor
xchg
pop
mov
ljmp
push
rclb
fwait
jno
fs
cli
sbb
mov
push
push
movl
jbe
fld
and
ret
inc
cmpsl
fistpl
inc
cs
pop
pop
and
mov
adc
test
and
mov
jo
in
shr
and
or
ljmp
mov
push
into
sbb
imul
std
out
bound
sub
mov
push
mov
out
popa
mov
pushf
jns
int3
sahf
bound
mov
scas
jae
incl
movsb
dec
fcmovnb
mul
add
adc
push
lahf
sbb
xchg
imul
mov
jae
sti
add
sub
fwait
hlt
adc
out
cmp
ss
jg
aam
mov
out
pop
push
outsl
mov
sub
pop
push
in
push
jae
jne
push
push
xlat
xchg
xchg
pop
push
jp
pop
stc
shl
lods
sahf
inc
jg
fisubrs
or
hlt
movsb
sahf
jne
lods
loope
pop
int3
add
rolb
pop
mov
pop
xchg
aam
sub
outsb
sub
mov
or
dec
jb
push
fnsave
ret
gs
gs
outsb
add
imul
or
push
xchg
push
sbb
movsl
and
addr16
sbb
cwtl
cld
adc
and
rclb
in
int3
and
repz
test
test
inc
push
sub
iret
bound
adc
test
mov
movsb
sub
lds
adc
fnstsw
pushf
das
xor
imul
mov
rolb
push
jo
scas
cmp
dec
dec
mov
mov
jo
jbe
xchg
cmp
inc
lcall
icebp
les
sbb
lods
mov
in
jns
adc
aam
dec
sahf
inc
neg
mov
mov
insb
jbe
fnop
pop
cmp
xchg
in
sbbl
cmp
sub
cmp
jns
xchg
push
loopne
cmpsb
loope
xchg
roll
adc
fucomi
dec
jns
mov
repnz
xor
jp
das
movsl
dec
fwait
mov
mov
les
xchg
mov
pop
and
mov
sub
fnstcw
mov
popa
jne
fs
lahf
jno
jg
lock
mov
sub
pop
orb
dec
mov
mov
out
pop
or
xor
and
mov
daa
addr16
pop
data16
je
jno
outsb
fs
mov
mov
mov
push
sub
pop
in
mov
and
cmp
xchg
xor
in
inc
dec
xchg
iret
xchg
pushf
in
movsl
xor
xchg
cmc
popf
and
inc
mov
cmc
int
xor
jmp
mov
imul
jns
out
sbb
pop
daa
mov
adc
flds
cmp
mov
ret
je
mov
cmpsl
fstpl
imul
shlb
and
insl
push
into
insb
add
outsl
shrb
or
adc
fisttpll
jp
pop
sbb
lret
mov
sub
push
leave
jae
xchg
and
sti
fnstcw
cmpsl
push
dec
push
in
xchg
hlt
sbb
fnstsw
sahf
call
mov
or
xlat
adc
mulb
fidivs
repz
add
movsl
aas
ljmp
ret
mov
fsts
nop
rorl
sub
sbb
ret
mov
push
fmull
shll
ljmp
mov
xchg
mov
sbb
clc
cld
fldl
ja
adc
and
push
fdivp
lods
mov
pop
test
daa
arpl
imul
roll
pop
lahf
imul
fldcw
jne
mov
push
cmovns
xor
ret
fistl
or
jecxz
or
pushf
and
imul
xlat
sbb
mov
ss
xor
xor
sub
ret
fimuls
in
unpcklps
icebp
xor
nop
jecxz
push
stos
pop
sub
mov
sbb
cs
aad
inc
push
jo
xchg
jb
cmp
jl
add
mov
pop
push
push
ret
mov
jecxz
xchg
jnp
or
mov
jecxz
xchg
out
movsb
mov
int3
xchg
xor
andb
xor
sbb
test
add
sub
ss
data16
sbb
jno
push
fwait
adc
sbb
jmp
in
je
jl
in
dec
inc
push
inc
push
aad
inc
lcall
stos
dec
and
mov
inc
inc
in
arpl
cmp
jae
hlt
out
cli
or
mov
int3
mov
js
sbb
pop
mov
adc
jge
sahf
push
dec
mov
in
adc
or
cmpb
xor
mov
mov
mov
and
ljmp
xchg
dec
xchg
lahf
out
and
call
fcoms
pop
adc
mov
adc
xor
in
dec
jmp
fs
loope
shll
rcll
jns
jbe
xor
jbe
ss
shl
sub
iret
sub
dec
test
sbb
pop
xchg
sbb
adc
adc
lret
mov
pushl
cmp
int3
fimuls
hlt
push
add
push
lea
mov
aam
ss
aad
addr16
int3
jg
addr16
mov
inc
popa
inc
lea
fwait
aaa
push
es
pushf
cltd
mov
sti
mov
xchg
pop
test
lods
pop
xor
push
cltd
lods
jp
in
jle
xchg
movsb
mov
cwtl
mov
add
mov
dec
cltd
dec
in
mov
rcr
pop
test
imul
fiaddl
stos
add
das
sub
fcmovne
pop
jno
ja
pop
sbb
jp
into
sub
daa
jp
dec
adc
shrb
or
mov
sub
dec
mov
mov
lret
jecxz
pop
and
lret
dec
shr
sahf
dec
inc
daa
shlb
mov
jg
push
inc
fcomps
movl
lret
cmp
push
xor
jge
iret
push
lds
jo
aaa
mov
cmp
push
scas
imull
shl
ljmp
popf
and
ss
lods
cld
add
mov
mov
in
mov
inc
or
mov
xlat
mov
or
test
push
pop
jno
mov
imul
lahf
incl
or
and
sub
push
insb
push
lds
push
dec
push
jp
decl
cmp
loopne
ljmp
enter
mov
push
gs
mov
test
push
xlat
push
dec
aad
adc
sbb
sbb
push
cli
inc
and
sbb
and
mov
out
xor
ret
push
add
ficomps
jp
cmp
xchg
xchg
or
scas
dec
int3
addr16
push
mov
dec
sti
rolb
push
std
dec
dec
cltd
loop
lock
mov
push
cmp
xchg
outsl
cmp
xor
adc
mov
dec
ffree
jecxz
fs
mov
jo
xor
adc
loope
add
pop
std
je
repnz
jo
les
xchg
bound
xchg
mov
sbb
test
jb
test
push
lock
dec
lret
dec
std
dec
push
ret
fisubl
pop
loopne
test
orb
jne
aas
stos
pop
adc
mov
dec
xchg
cmp
mov
lret
xchg
jnp
lahf
adcb
mov
adc
sar
stos
adc
or
and
cmc
cltd
imul
xor
cmpsl
jb
sti
and
in
fildll
das
jb
repz
icebp
mov
xor
pop
push
and
mov
xchg
dec
dec
stos
xlat
sahf
in
out
hlt
adc
push
or
and
flds
into
pop
xchg
and
ret
xor
std
inc
stc
and
psrld
add
xor
aam
pusha
frstor
dec
and
adc
movsl
mov
jae
aad
mov
mov
or
pop
in
leave
ret
fldcw
sbb
loope
adc
jno
mov
insl
push
pop
lcall
sub
leave
xor
pushf
dec
xor
fwait
iret
rorb
aam
add
push
mov
or
sub
jg
lds
shrl
sbb
jge
rep
pop
lret
hlt
inc
sub
add
cmp
mov
test
add
xchg
inc
mov
out
cmp
cld
xchg
xor
sbb
mov
jo
push
mov
shlb
mov
inc
das
cmp
add
sub
rcrl
jnp
inc
test
push
fcompl
std
jp
ret
pusha
mov
ja
cmc
lret
scas
push
cmc
adc
leave
adc
imul
push
stc
inc
ss
mov
subb
pop
ds
outsb
cmp
je
add
stos
sti
add
pop
pop
pop
testb
cmp
in
les
int
pop
pushf
shl
pop
mov
negl
inc
fisttpl
xor
cli
cmp
or
mov
lcall
mov
xchg
fcmovbe
pop
out
sub
xor
jb
inc
movsb
leave
jb
push
inc
dec
and
shrb
ss
mov
and
jmp
pop
sbb
adc
cmp
fcom
mov
pop
pop
popf
stos
fwait
pop
xchg
pop
shlb
add
aas
call
lret
lods
inc
push
lret
imul
mov
mov
fimull
inc
sub
cli
call
adc
or
pop
fs
and
xchg
jl
jg
push
mov
jne
insb
sbb
fcoml
adc
lcall
sbb
sub
xchg
add
push
lds
insb
sub
nop
mov
mov
ja
int
lock
mov
fisttpl
mov
scas
and
aaa
and
sub
push
mov
sbb
xchg
or
cmp
pop
mov
ret
ja
in
jge
fwait
imul
in
shr
fwait
xor
pop
add
test
cmp
fsubl
mov
addl
pop
push
xchg
xor
and
ret
jmp
out
test
add
cmp
sub
stos
inc
push
adc
scas
fwait
in
inc
sti
push
in
cwtl
jmp
pop
cmp
int
leave
mov
pushf
addl
ficoml
cltd
insb
fmuls
mov
in
loope
outsb
jmp
js
cmpsb
mov
lods
lcall
je
inc
cwtl
mov
pop
jmp
out
sbb
mov
jmp
jmp
mov
sbb
jmp
and
jle
stos
push
jl
jg
xchg
jae
add
adc
cmp
shr
nop
xchg
mov
or
add
fdivr
imul
sub
stc
and
xor
shrl
mov
mov
fistl
loopne
inc
push
cs
icebp
mov
jmp
shrb
xor
sbb
addr16
sub
mov
arpl
inc
inc
andl
data16
fcomps
inc
adc
outsb
lods
and
pop
popf
or
lidtl
popf
daa
xchg
scas
adc
sti
imul
mov
mov
inc
addb
lods
je
imul
push
movsl
insl
inc
push
mov
dec
scas
mov
adc
int3
lahf
test
jp
lods
in
adc
mov
jbe
dec
push
sti
dec
nop
in
xchg
movsl
mov
xchg
fwait
push
sub
rorl
mov
imull
jp
int
fcmovbe
pop
and
push
cmp
pop
loopne
out
lods
xchg
inc
les
jae
in
das
das
test
dec
icebp
pop
xlat
bound
jmp
pop
mov
pusha
cmp
mov
adcb
stos
jg
jmp
sbb
jmp
lcall
out
xchg
out
inc
xchg
mov
jle
insb
jmp
fadd
inc
cmp
add
lock
insl
cmp
mov
sarb
dec
cmp
or
or
addr16
xchg
lcall
out
inc
in
aam
stos
fildll
test
js
mov
or
mov
sbb
push
mov
mov
dec
push
popf
movsl
ss
pop
inc
xchg
mov
lea
addr16
iret
leave
repz
mov
or
movl
and
cs
mov
add
xchg
xchg
inc
or
out
fstpl
cmp
aad
push
xor
movsl
cmp
jo
add
add
std
hlt
movsb
sbb
hlt
mov
mov
icebp
mov
pop
or
adc
into
test
cmpsl
dec
inc
incb
push
test
sub
adc
outsb
out
mov
repz
dec
les
push
call
push
or
jecxz
popa
in
mov
jo
jmp
test
in
mov
je
outsl
adcb
dec
rcll
decl
es
subl
insl
xchg
jmp
cmc
xchg
call
or
int
cmpsb
adc
push
nop
inc
test
cmp
lds
popf
add
add
adc
adc
cmp
add
out
xchg
test
fs
imul
inc
and
or
loope
inc
or
fcoms
add
pop
pop
bound
mov
push
jnp
mov
add
sbb
mov
mov
bound
jnp
dec
pop
cli
add
pop
enter
lods
cld
cs
mov
or
jne
out
ss
shlb
ret
ret
add
adc
jl
sahf
and
xlat
ret
sahf
pop
in
js
jecxz
imul
dec
inc
xor
cmpl
xor
and
sahf
jle
sub
int
inc
xchg
jb
mov
adc
xor
rcl
aam
cmp
icebp
dec
xor
das
outsl
pop
add
or
xor
sub
and
jle
sbb
mov
ficoms
sahf
or
xchg
push
jbe
jne
mov
loopne
popf
push
out
jb
loopne
js
fnstsw
lahf
cmp
mov
rcrl
stos
sub
in
rorb
sbb
movsb
dec
jbe
jns
cmp
repz
cmc
jno
push
mov
lods
mov
cmpsl
subb
movq
or
data16
and
and
icebp
xor
mov
sti
in
lret
rcrb
mov
cmp
or
jb
stos
das
repnz
pop
hlt
fwait
push
in
pop
hlt
pop
mov
mov
mov
push
aam
cmpsb
add
andl
mov
sbb
jae
cmp
jmp
out
pop
imul
pop
pop
and
insl
inc
sub
push
xchg
hlt
arpl
fmulp
push
mov
add
jp
fmul
cmpsl
push
test
lret
mov
pop
outsb
sarb
jb
shl
ja
and
mov
repz
out
aad
xorl
sub
jno
lods
rep
lock
xor
pop
out
lock
lcall
mov
jno
sbb
xchg
jb
mov
add
iret
or
mov
sbb
int3
pop
and
repz
push
sub
lret
stos
push
push
xor
dec
inc
orl
pop
mov
inc
or
dec
js
aas
nop
push
ret
stos
xchg
test
pushf
in
push
popf
xchg
jp
mov
and
mov
push
xchg
mov
sar
jne
mov
cmp
or
pop
jne
or
popa
shlb
ret
movsl
call
sar
icebp
popa
fstpl
push
xor
repnz
mov
add
inc
and
rorb
psubd
test
pop
imull
filds
mov
in
call
sub
sti
lods
stc
pusha
add
mov
imulb
sub
jl
rcrl
pushf
jg
cmc
fstpl
rcll
cmpb
cmc
aam
out
sahf
shll
jnp
fiadds
leave
xchg
push
repz
int3
mov
mov
lods
cltd
push
imul
fistl
mov
xchg
or
aas
popl
in
cmpsl
jne
out
sub
sbb
gs
pop
and
mov
stc
mov
cmp
mov
das
icebp
adc
aas
xor
adc
adc
sub
dec
test
aam
leave
pop
stc
bound
mov
adc
je
iret
test
insb
add
subl
or
sar
mov
in
sti
ds
mov
imul
mov
cs
lds
int3
and
adc
push
iret
stos
sarl
xchg
push
mov
mov
sbb
inc
push
fdivs
mov
movsl
jo
dec
es
mov
inc
mov
xchg
push
std
testl
loopne
pusha
jae
popf
sahf
sbb
sarl
mov
mov
dec
divb
cmc
lods
push
sub
jl
das
pop
push
icebp
xchg
or
aad
mov
imul
push
arpl
inc
jno
xorl
xchg
xchg
out
cmp
fldl
je
mov
mov
jno
movsb
jae
aas
bound
pop
sub
icebp
add
push
xchg
inc
add
cmp
push
mov
cmp
mov
cltd
push
movsl
sbbl
pop
mov
inc
and
sub
fwait
pop
out
imul
dec
cmc
outsb
stc
test
addb
enter
shll
or
insb
jle
or
lret
pop
fldt
adc
andl
mov
mov
pop
ja
rcrl
mov
pop
inc
insl
cli
push
mov
adc
addr16
icebp
mov
dec
repz
dec
dec
es
into
cld
pop
fcoml
test
nop
cmp
mov
mul
repz
rol
int3
in
call
mov
cltd
push
xor
pop
movsb
cmp
jecxz
jno
mov
scas
aam
cmpsb
adc
jae
pop
fimull
push
adc
cmpsl
xor
xlat
aas
std
iret
pop
into
xchg
jp
dec
lods
inc
lret
cmp
pop
test
icebp
out
pop
sbb
es
es
mulb
xor
enter
in
mov
es
and
dec
clc
mov
int3
xchg
aaa
cmp
pop
mov
aas
notb
push
scas
or
in
or
decl
jbe
sti
jno
jp
xor
lret
mov
or
fisubrl
pop
hlt
cld
cmpsl
inc
xor
lea
xchg
icebp
bound
push
ds
mov
xor
testb
mov
xchg
xor
into
jmp
or
mov
pop
mov
loopne
jg
push
cld
add
fwait
dec
pusha
je
pop
divl
mov
in
clc
xchg
sub
inc
fdiv
rclb
das
mov
push
pslld
imul
and
jmp
scas
call
jo
leave
int3
and
dec
test
repnz
rolb
push
cmp
sbb
push
popf
adcb
sahf
mov
pop
push
ja
fmuls
xchg
push
adc
lock
movsb
mov
push
cmp
mov
loop
mov
jecxz
adc
mov
mov
faddl
pop
mov
dec
mov
jge
dec
rclb
das
xchg
xchg
sub
add
shl
jbe
xor
fistpl
xchg
dec
dec
mov
mov
test
je
inc
cmpsl
test
cmp
int3
inc
imul
lock
ret
jno
jbe
lods
mov
cmp
arpl
or
stos
pop
push
add
rcrl
gs
xor
xor
push
test
xchg
mov
sub
ja
mov
add
adc
lods
mov
cmp
xchg
stc
dec
bound
lea
mov
lahf
cli
xchg
sub
push
jg
lret
jno
xchg
cmp
sub
adc
jnp
mov
sbb
cmp
fidivl
sar
clc
mov
jl
outsb
out
mov
xor
inc
fsubs
ss
fcompl
or
push
jae
mov
mov
out
pop
pop
lods
cwtl
call
lcall
aam
cli
data16
ficoms
addl
repz
adc
imul
cmp
dec
mov
sub
mov
icebp
inc
icebp
loopne
je
mov
std
or
push
stos
sahf
cmpsb
dec
cmp
stc
aas
in
fwait
ljmp
stos
icebp
in
mov
popf
in
test
ficompl
mov
leave
sub
cmp
push
ret
inc
mov
or
subl
shrb
mov
and
roll
fwait
push
pop
lahf
rcrb
inc
movsb
scas
mov
cld
push
sti
pop
cwtl
mov
cwtl
xchg
add
mov
jmp
shrb
jmp
xchg
jge
mov
sbb
push
push
adc
shlb
jns
scas
in
sti
shrl
cmp
push
insl
mov
mov
xor
sbb
xor
pusha
addr16
jae
jae
xchg
dec
or
cmpsl
repnz
je
xchg
mov
adc
pushf
and
ffreep
ja
cmp
lret
stc
cmp
cmp
inc
add
call
int3
stos
lds
daa
mov
mov
cmpsl
adc
mov
fistps
or
mov
add
push
mov
inc
jo
cmpsl
mov
out
inc
loope
int3
in
fmull
leave
jp
sub
push
arpl
adc
stc
out
call
jns
cmp
mov
stos
xor
gs
mov
scas
nop
jecxz
sub
test
into
jle
nop
add
cmp
and
rcrl
dec
xchg
push
sbb
mov
or
inc
xchg
mov
jns
mov
pop
sbb
jae
out
push
fwait
dec
mov
pop
jg
mov
mov
mov
and
jbe
stos
pusha
sbb
mov
cmp
sub
mov
adc
mov
xor
mov
scas
dec
cwtl
jmp
xor
into
dec
xorb
xchg
mov
mov
pop
outsl
arpl
mov
cmpsb
stos
or
ja
in
push
sarb
enter
mov
xchg
add
fisubrl
xchg
test
out
mov
insl
repnz
mov
mov
mov
and
pop
push
pusha
inc
sarl
adc
mov
daa
jne
adc
xor
pop
dec
loope
mov
mov
imul
xchg
push
push
xchg
dec
cmp
and
mov
into
adc
push
jecxz
lods
push
out
inc
mov
orb
jns
cmpsb
insl
adc
or
mov
outsl
xchg
std
loopne
mov
jne
scas
jno
fs
xorb
mov
outsb
or
mov
int3
pop
mov
mov
js
clc
and
xchg
adc
mov
mov
loopne
es
push
xchg
mov
push
xchg
or
jb
fisubrl
xchg
push
ret
xchg
data16
adc
fsubp
push
sub
cmpsb
lcall
dec
or
pop
jge
sti
je
jle,pn
mov
mov
lock
in
xor
test
movsb
addl
jge
ret
mov
lds
push
push
mov
fstl
sub
ljmpw
jo
lds
adc
ds
inc
mov
inc
sahf
mov
jecxz
in
out
xchg
dec
movsl
jecxz
xchg
arpl
aam
dec
jmp
ja
movsl
test
inc
jbe
cwtl
mov
xchg
cmp
add
mov
movsb
pop
cs
les
push
or
and
popa
pop
push
push
cs
mov
arpl
popl
mov
push
call
ds
insb
pop
mov
dec
shr
push
add
mov
and
aad
in
or
addr16
movsl
roll
loopne
jnp
and
movl
idivl
fldcw
testb
jns
inc
add
in
pop
das
xchg
xchg
mov
mov
aas
mov
mov
rcll
in
xchg
add
add
mulb
enter
jne
test
xor
mov
lods
aad
and
or
jno
aad
cltd
jmp
add
fisttpl
leave
dec
xchg
mov
xchg
jge
stc
xor
fildl
cmc
in
mov
scas
mov
dec
mov
cmp
push
xchg
js
in
sar
sub
in
and
xchg
mov
nop
and
push
pop
jb
push
jle
iret
and
pop
out
sar
aaa
mov
xor
cmpsl
dec
test
cmpsl
ljmp
or
subl
or
cltd
in
mov
dec
imul
movsb
pop
js
mov
push
pop
mov
and
dec
sahf
mov
inc
int3
inc
pop
xchg
pop
lret
fldcw
lahf
cmpsb
repz
xor
ss
in
xchg
jo
inc
push
loop
cmp
sub
pop
das
dec
arpl
leave
loope
pop
and
aad
mov
clc
cltd
mov
inc
jg
mov
rorl
mov
cmpsl
push
icebp
ja,pn
cmp
dec
xor
xchg
jmp
mov
into
popa
scas
ja
sar
jl
push
pusha
out
sub
mov
dec
adc
popl
int
xor
dec
stos
and
add
xchg
test
mov
jo
push
sub
mov
sbb
add
add
nop
mov
test
push
leave
adc
loope
loopne
push
fidivl
sub
jmp
dec
adc
or
imulb
sbb
mov
test
cmp
repz
jge
outsl
mov
push
pop
movsl
sbb
scas
push
mov
inc
sub
push
mov
sub
iret
jno
add
push
jae
jmp
jbe
mov
sbb
mov
les
sahf
ss
xchg
in
xor
imul
popa
adc
fs
add
sub
lret
push
dec
mov
inc
mov
xor
sbb
pop
mov
ss
das
xor
jae
xchg
mov
xchg
jbe
mov
fnstenv
push
mov
push
icebp
imul
lahf
add
cs
mov
inc
movsl
xlat
inc
push
and
movsl
xchg
enter
dec
sahf
dec
test
cmp
or
mov
mov
sahf
cld
mov
or
icebp
subb
jge
bound
fmuls
mov
push
inc
xor
jl
inc
lret
sbb
mov
sbb
sub
aaa
fisubs
mov
sbbl
sbb
stos
lahf
dec
adc
mov
adc
push
flds
prefetcht2
jmp
fbstp
inc
repz
jl
fdivl
repnz
push
jge
mov
in
mov
cmp
in
add
jg
mov
int
sbb
imul
or
fsubl
cmp
sub
or
lds
xchg
ds
dec
add
cli
test
jge
sub
and
push
scas
call
ret
mov
sbb
gs
pop
imul
add
pop
xchg
push
or
in
inc
scas
dec
lahf
mov
dec
dec
dec
and
hlt
push
push
les
outsl
repnz
lcall
jecxz
jp
mov
mov
cmpsl
xchg
push
mov
cmp
ficomps
cwtl
inc
insl
cmp
loopne
add
fstpt
dec
fwait
leave
enter
lock
aad
das
jb
orb
xor
mov
inc
xchg
mov
push
iret
adc
insl
jbe
shlb
test
shr
add
test
cld
or
adc
jo
outsb
sub
sub
sbb
xlat
or
addr16
adc
out
cmpsb
dec
mov
add
test
jns
push
pop
nop
repnz
popa
cmpsb
dec
mov
inc
test
mov
mov
jno
xchg
loope
int
call
adc
fldpi
mov
mov
cmp
xchg
dec
pop
aam
mov
dec
mov
movsl
jne
scas
or
int
xchg
jae
adc
jge
pop
mov
cmp
push
aaa
aad
mov
and
and
repz
rcl
ret
dec
pop
nop
jne
sbb
push
adc
pop
cld
insl
push
pop
cmp
repnz
movb
pop
fistl
pop
cmp
cmpsl
cmp
sbb
cs
not
dec
shlb
mov
sbb
out
rcrl
les
jle
scas
xor
scas
daa
fcmovbe
addr16
addr16
cli
out
dec
and
pop
sub
sub
push
jg
and
cwtl
xor
inc
lret
jl
lods
adc
mov
imul
scas
mov
loop
xchg
lds
aas
loopne
inc
push
paddusw
and
test
notl
addb
mov
mov
xchg
push
jecxz
dec
push
mov
add
cwtl
movsl
xchg
gs
dec
mov
sub
stos
push
out
pop
jle
shlb
out
pop
test
jmp
stos
sub
scas
loopne
or
roll
in
mov
xor
mov
test
add
or
dec
add
cwtl
mov
aaa
pushf
fwait
mov
aam
mov
sub
xchg
push
push
add
dec
inc
mov
leave
fisttpll
push
xchg
adc
adc
and
insb
mov
addl
aas
cmp
clc
hlt
push
outsl
ret
fbld
jp
pop
test
and
adc
and
pop
mov
aaa
jmp
mov
add
pop
xchg
or
pop
jl
add
and
outsb
cli
dec
mov
loope
aam
xchg
and
xchg
lods
push
mov
pop
cmp
sub
xor
stos
lds
adc
push
push
or
lock
mov
sub
and
jbe
sub
cmpsl
push
fisttps
ss
jmp
dec
imul
in
dec
push
cmp
clc
lahf
cld
jmp
jb
stos
jmp
fs
sub
pop
add
sahf
stc
mov
jo
ljmp
lahf
add
iret
imull
and
test
les
mov
dec
shrb
mov
lcall
pop
xor
mov
or
jp
bound
xchg
mov
sub
lret
dec
pop
fistpll
cs
mov
lcall
sbb
cmp
dec
adc
jmp
mov
inc
xlat
sbb
test
sub
fistpl
movsl
pop
insl
int3
xor
push
imul
and
popf
mov
add
jb
pusha
dec
out
add
mov
into
xchg
pop
sahf
mov
mov
aam
mov
cmp
xor
subl
xchg
ret
fwait
add
cld
pop
cmp
jmp
call
push
xor
pop
shlb
lret
into
je
scas
into
cld
test
js
jbe
mov
out
outsl
es
test
and
and
pop
mov
mov
cli
xchg
mov
out
iret
es
xor
jle
or
std
dec
mov
shr
ja
pushf
mov
ret
test
and
pop
mov
add
movsb
or
and
mov
mov
call
fs
mov
add
push
xchg
pop
iret
stos
in
push
mov
inc
cwtl
js
or
pop
aam
pop
xor
mov
cltd
in
jmp
add
and
rol
add
cmp
or
adc
test
cmc
out
loopne
add
fisubl
sub
and
jns
jns
xorl
roll
mov
adc
jbe
dec
data16
mov
enter
ret
cmp
push
cwtl
sub
cmp
pusha
in
pop
adc
sub
xor
xlat
mov
jno
hlt
popf
xchg
sbb
xchg
sbb
inc
push
mov
mov
lcall
push
dec
loop
mov
xor
iret
shr
xor
fistps
add
cmpsl
popf
mov
fnstsw
or
inc
mov
outsl
hlt
dec
mov
jb
int3
add
test
xchg
test
test
cmc
clc
mov
sub
incb
int3
mul
cmc
inc
cmp
xor
imul
ret
cmp
repz
jmp
sbb
shrb
push
sub
xor
dec
prefetch
or
divb
and
jae
and
sbb
lods
sub
scas
sbb
cs
call
xchg
jne
lods
fnstenv
testl
xlat
mov
sub
pop
jne
jns
xchg
imul
pop
popf
test
add
and
std
scas
test
mov
stc
aaa
mov
cmpsb
add
aad
leave
jae
xor
mov
or
enter
adc
fwait
imul
jle
adc
lret
sub
mov
lret
or
es
dec
lret
push
icebp
and
popf
add
into
push
pusha
stos
add
mul
xchg
cmp
out
add
sahf
or
nop
into
cmp
loope
cmp
imul
aas
neg
sbb
add
sahf
jg
jg
cmc
stc
aas
stc
add
aas
arpl
int
sbb
sbb
popa
push
jno
call
inc
cmp
xorb
ret
xchg
loope
fistl
sub
es
mov
mov
iret
cmp
lret
cld
rcrb
jl
cmp
push
test
push
aas
inc
ret
mov
adc
scas
stos
xor
inc
mov
push
jle
add
rolb
xlat
mov
or
or
fisttps
out
pop
ljmp
dec
or
jbe
int
lcall
cmp
test
xchg
rcl
rol
cmpsl
repnz
dec
fbstp
mov
es
sarb
or
pop
daa
xchg
inc
pop
loope
enter
xor
jle
pop
mov
mov
and
mov
into
popf
mov
sub
into
mov
lea
orl
xchg
mov
mov
xor
push
movsb
je
testl
inc
dec
ficompl
jmp
push
adc
pusha
jb
mov
lods
call
aaa
sub
ja
cmp
rol
mov
cmp
sub
in
cli
into
shll
jae
push
push
jmp
out
icebp
jae
stc
or
repnz
cmp
lods
mov
mov
cmp
sahf
mov
lds
and
mov
jno
imul
and
popf
mov
les
dec
sub
cmpsl
outsl
fadds
jmp
out
push
cmpsb
loope
pop
ficoms
shll
pop
xchg
cmp
add
mov
mov
dec
lar
bound
sahf
and
sbb
push
or
out
sub
jae
jns
mov
xchg
mov
pop
mov
push
loopne
aam
fimull
pushfw
fimuls
mov
inc
or
fwait
cmp
fldcw
pop
sub
push
inc
pushl
mov
inc
xor
push
jno
fwait
pop
sbb
pop
js
or
cmpsl
cs
mov
loop
arpl
xchg
int3
add
mov
mov
pop
cmpsb
xchg
jo
lods
std
icebp
insl
or
cltd
cmp
jmp
mov
add
dec
mov
xchg
or
cwtl
iret
in
fcoms
jecxz
decl
in
xor
flds
fnstenv
jns
inc
mov
pusha
push
push
xor
fadd
movsl
and
mov
in
sub
mov
xchg
insb
cmp
loop
ret
fdivp
push
lahf
and
dec
adc
test
scas
sti
fst
loop
push
or
das
mov
lcall
dec
cmp
shlb
dec
outsb
sbb
jb
sarb
fdivs
add
arpl
pop
sub
xchg
es
stos
scas
cmp
mov
aad
push
sahf
push
push
loope
add
leave
mov
cmp
ja
sub
mov
andl
pusha
dec
and
fldt
loope
add
iret
in
sti
mov
cmp
ficoms
ret
fcompl
out
movsb
cs
cld
sbb
aas
pop
push
sarl
pop
mov
mov
dec
add
insl
jae
in
sub
orl
mov
pop
mov
cli
or
inc
enter
cmp
pop
aad
mov
clc
aad
xor
adc
or
cmpsl
fcmovbe
mov
mov
xor
aad
mov
shl
in
lock
imul
push
in
lfs
adc
aad
mov
lcall
gs
cmpsl
pop
enter
ds
aad
fs
xchg
mov
sbb
sub
mov
adcb
imul
adc
stos
xchg
mov
sbb
or
add
pop
push
mov
notb
add
adc
inc
push
xor
loopne
pop
icebp
sbb
push
pop
or
lcall
mov
push
lret
inc
pop
jg
mov
cltd
jmp
fistpll
cmp
xor
jge
push
call
aad
rcrl
xor
adc
cltd
inc
fsubrp
inc
and
stos
shlb
pop
cmp
inc
fmuls
fadd
repz
js
mov
js
xchg
inc
in
inc
mov
out
mov
repz
mov
icebp
lods
jmp
into
call
int3
and
add
scas
xchg
iret
shll
mov
roll
xor
ret
sub
fs
xchg
mov
or
repnz
data16
push
cmc
sub
daa
pop
sbb
pop
outsl
repnz
lcall
inc
jl
test
jbe
bound
movsl
inc
stc
in
mov
les
jmp
mov
pop
aas
push
aaa
jbe
inc
sbb
nop
jns
mov
add
xlat
and
cli
repz
push
not
xlat
shrb
inc
inc
sbb
imul
in
icebp
mov
xor
sub
movsl
or
mov
ljmp
js
cmp
pop
inc
lods
pop
test
add
lock
cmp
out
scas
dec
mov
pop
rdtsc
xchg
jg
jg
adc
pushf
ljmp
xor
mov
test
int
sbbl
fsubrs
stos
pop
data16
cmp
inc
jmp
pop
in
fsts
idivb
mov
pop
mov
popa
and
pop
fsubs
fidivrl
scas
arpl
lock
pop
xor
test
mov
fldenv
ret
jno
outsb
inc
push
push
lcall
cwtl
std
sbb
addr16
fldenv
push
adc
adc
arpl
idivb
loope
rcrl
push
fmul
fistpl
adc
iret
cli
rol
mov
fisttpll
clc
pop
mov
leave
jle
xchg
cmp
lcall
fistpl
fldl
iret
pop
sub
icebp
enter
dec
pusha
cmp
leave
out
mov
push
or
mov
xchg
ds
pop
jmp
fdiv
fistps
xor
mov
push
push
xor
lret
jbe
xor
jnp
sbb
pop
test
lcall
cvtps2pi
lea
jmp
fdivs
jmp
das
es
sbb
sub
cmpsl
hlt
lret
outsb
and
pop
in
orl
sub
pop
sub
and
sub
jno
jno
adc
push
jno
add
xlat
lock
sub
inc
push
fbstp
imul
insl
fptan
or
xchg
cld
daa
gs
nop
out
and
sbb
imul
sbb
outsl
push
jl
xor
push
sub
mov
insb
lds
mov
psubsb
setl
or
shlb
xor
cmpsl
cli
adc
arpl
mov
stc
fwait
loope
lret
fsubrs
mov
maskmovq
divl
andb
into
mov
mov
mov
mov
mov
push
mov
aaa
loope
dec
push
movsb
push
movsl
je
dec
xor
ss
mov
add
mov
inc
push
add
shll
sti
fstps
inc
and
pop
inc
jo
sbbl
les
pop
rolb
and
sub
pop
push
push
std
push
cmc
push
loope
subl
push
in
jno
inc
gs
xor
mov
aas
ss
xor
xor
lds
int
mov
push
cmp
add
push
popf
cli
jle
push
adcl
sub
lcall
xchg
fisttps
stc
fnstsw
mov
scas
fdivrs
pusha
std
outsl
out
cli
mov
cmc
cmpsb
sub
jbe
add
and
insl
bound
dec
test
mov
xchg
ds
lock
adc
jg
lds
or
mov
popa
sarl
mov
in
dec
cmp
jecxz
inc
add
stos
ljmp
test
aaa
xorb
and
push
or
clc
fstl
push
xor
push
jg
pop
sub
add
andl
sbb
or
fidivrl
cltd
mov
sbb
mov
mov
mov
lret
adc
push
insl
pusha
outsb
sbb
push
mov
repnz
je
aam
icebp
hlt
push
or
push
mov
mov
or
sti
popa
arpl
mov
inc
sub
idivb
adc
clc
add
jo
cltd
sub
out
scas
add
clc
adcl
pushf
xchg
mov
mov
push
aas
sbb
and
xor
pop
add
leave
into
push
jmp
addr16
ja
out
sti
inc
mov
pop
popf
or
xor
cmpb
loope
test
les
imul
mov
loop
aad
sub
shrl
and
int
std
adc
pop
sbb
cmp
cmp
rcl
push
inc
shrl
xor
pop
xchg
add
mov
or
dec
in
fwait
mov
out
add
jmp
shl
or
mov
test
lods
or
xor
jg
pusha
adc
test
xchg
out
les
pop
push
das
inc
or
cmc
or
cmp
pop
xchg
mov
lea
mov
push
aaa
stos
dec
xlat
dec
push
push
mov
or
add
ja
mov
mov
int3
lods
mov
and
and
lds
cmp
jae
js
add
testb
shrb
lret
jnp
sbb
pop
repz
jno
push
ss
negl
aas
push
pop
mov
ret
out
adc
ss
fsubr
in
cmc
push
xchg
inc
les
js
incl
lret
sbb
cmp
pop
adc
dec
or
cmc
add
xchg
mov
xlat
loope
adc
shrl
data16
add
fidivrs
mov
lea
add
daa
dec
jae
xlat
mov
out
xor
das
nop
and
movsl
push
addr16
push
sbb
fdivl
push
add
sbb
insl
xor
mov
or
or
or
mov
fs
adcb
mov
jb
sub
inc
or
stos
lods
jns
jae
mov
decl
call
aam
adc
mov
pop
jb
test
ja
cwtl
lds
sub
or
clc
out
xor
jns
pop
decb
push
outsb
mov
or
pop
mov
and
out
popa
dec
fdivrl
dec
fwait
sub
sbb
xor
lods
jb
push
adc
lahf
mov
repz
lods
imul
lods
jge
or
hlt
push
jecxz
mov
fnstcw
mov
sbb
out
mov
xchg
push
jo
stos
dec
inc
push
sbb
out
sub
cli
adc
out
in
xchg
adc
jp
mov
lgs
test
lock
and
test
scas
jle
mov
scas
testl
in
inc
pop
scas
std
xor
sub
icebp
push
popf
repnz
push
in
mov
mov
dec
mov
cwtl
mov
mul
loop
push
jns
fidivl
mov
sub
push
add
adc
ss
push
inc
mov
insb
movsb
jp
aaa
xor
push
sub
sub
xchg
lods
dec
pop
repnz
mov
stos
addr16
das
xor
xchg
test
cmp
loope
or
mov
dec
xchg
hlt
mov
jg
inc
ret
das
je
sub
insb
jb
loopne
xchg
inc
inc
insb
and
roll
push
sub
addr16
sub
out
out
daa
xorb
jb
mov
sbb
adc
mov
xchg
push
cmp
shr
adc
loop
addb
shr
adc
test
mov
js
xchg
or
jmp
xlat
aaa
sahf
call
mov
pop
shll
fwait
mov
jns
data16
sbb
add
mov
xchg
push
jo
xchg
push
fnstsw
xor
add
or
es
je
and
shrl
adc
jb
adc
jae
or
sahf
mov
in
out
ror
aaa
mov
push
sub
repz
sub
push
cmpsl
and
inc
inc
mov
mov
insb
xchg
mov
pop
nop
lea
adc
sub
jmp
fdivr
dec
mov
enter
cwtl
and
pop
add
xchg
leave
add
popf
lret
and
xchg
jg
mov
mov
cmp
sbb
sub
xor
cmp
dec
int
or
mov
lds
mov
xor
cld
ficoms
mov
jo
jmp
push
in
rorl
sub
sub
sub
inc
or
orl
push
cmp
xchg
sbb
cmp
push
adc
ljmp
sub
inc
inc
in
sbb
mov
rcll
add
arpl
popf
pusha
les
sub
sub
jle
mov
outsl
and
lret
dec
mov
pop
adc
mov
cli
test
inc
cs
mov
pop
jle
ja
xchg
je
pop
hlt
mov
adcb
mov
loopne
sbb
in
push
rep
into
pop
sarl
and
sti
lods
push
mov
or
stc
mov
shrl
inc
add
mull
jb
adc
mov
sub
inc
pop
sbb
add
data16
jge
imul
mov
les
lret
stos
lods
push
fisubs
xlat
sbb
out
fimull
pop
subb
sbb
addr16
out
rorl
fcoml
loope
add
jge
mov
shlb
shll
push
mov
sub
jae
imul
or
scas
fs
lock
pop
dec
pop
or
inc
xchg
je
lds
or
sub
mov
dec
cld
aam
xchg
movsl
or
mov
out
and
add
push
out
in
rclb
aad
mov
popa
stos
fwait
fs
int3
cmp
cs
and
mov
repnz
push
pop
jle
cwtl
adcl
movsl
orl
imul
cmp
mov
jns
outsb
dec
cmp
jp
ja
and
in
insb
mov
pusha
or
divb
add
jg
icebp
incl
rorb
cmc
fnstsw
rcrl
fs
sub
xor
inc
mov
mov
arpl
or
pop
roll
ds
mov
je
bound
inc
push
lock
push
js
shr
mov
or
fldcw
mov
sub
jle
cmp
dec
out
push
sbb
sub
xchg
ja
iret
jnp
sarb
jb
mov
subb
jns
rcll
dec
movsl
mov
arpl
adcb
cltd
mov
push
movb
aaa
mov
pop
xlat
mov
std
inc
jge
mov
or
loope
xchg
cmpl
jecxz
xor
je
repz
jno
inc
push
inc
push
iret
insl
jg
inc
in
rcrl
cmp
sbb
jle
rorb
push
push
add
mov
mov
int3
sub
adc
push
das
adcl
shl
push
pop
inc
arpl
mov
icebp
inc
push
aas
adc
stos
cwtl
inc
sbb
fsubl
bound
sahf
cld
out
xchg
push
sub
mov
fchs
lea
arpl
push
and
out
xlat
cli
icebp
call
loope
bnd
cmc
pop
mov
imul
lahf
inc
adc
fidivs
xchg
jne
inc
inc
push
outsl
dec
jecxz
jecxz
xchg
dec
jle
mov
sbb
dec
jmp
mov
xorb
mov
js
sbb
clc
xor
test
clc
fwait
push
add
lret
or
sub
cmovo
mov
xchg
les
push
and
sbb
xchg
mov
jmp
pop
arpl
movsl
push
out
pushf
scas
fsubl
js
aaa
mov
push
test
in
xchg
leave
sbb
repnz
fcomp
iret
xchg
mov
test
out
ja
fidivrl
cs
mov
jmp
cmp
adc
enter
pop
fscale
aas
push
popa
inc
imulb
and
pop
mov
pop
mov
sub
xchg
call
rcrb
rorl
pop
dec
sahf
in
or
into
fisttpll
jg
push
int
fisttpl
jbe
pop
aam
mov
inc
jg
clc
push
cmp
ljmp
mov
mov
add
enter
frstor
rorl
stc
test
jo
inc
enter
xchg
subl
popf
cmp
jnp
dec
fs
nopl
les
je
and
insb
cmpsb
scas
fdivrl
loop
out
mov
mov
movsb
add
movsb
jg
jns
in
pusha
faddp
aaa
out
add
adc
or
xor
mov
cmp
ficomps
mov
js
push
cmp
push
push
xchg
sbb
addr16
and
fwait
repz
push
divl
lods
fisubrs
imul
adc
rorb
mov
mov
mov
cmp
outsl
fcmovnbe
je
fisubs
ds
push
lcall
add
popa
mov
mov
int
fs
std
push
jne
mov
popf
mov
cmp
out
or
pop
pop
insl
add
mov
mov
jge
int3
hlt
xchg
int
mov
xchg
mov
test
cld
add
clc
loopne
lret
mov
push
cmp
test
rorb
int3
add
pusha
cmc
cmc
lea
xor
rcr
movsb
out
fisttpl
jb
rcl
add
das
jge
jbe
in
xchg
lods
ror
xchg
jp
mov
jle
imul
mov
and
cmpsb
dec
mov
mov
dec
ds
or
outsb
jnp
es
daa
fcmovu
sbb
mov
pop
sbb
inc
stos
in
loop
sbb
dec
rclb
imul
xchg
in
lret
cmp
sub
icebp
push
xor
mov
xchg
cmp
mov
xchg
test
add
stos
jb
lcall
shll
rcll
scas
jecxz
cmp
sub
mov
push
in
push
add
push
sahf
sub
mov
and
dec
popf
adc
insl
fdivr
push
cmp
lea
lret
cmpb
fists
lcall
push
aam
sbb
jg
jecxz
mov
fstps
lea
sub
mov
and
mov
cwtl
xchg
mov
and
xor
aad
clc
aas
sahf
lock
iret
xchg
push
and
cld
movsb
daa
dec
enter
push
inc
pushf
adc
pop
scas
js
add
dec
inc
push
mov
addr16
sti
fwait
xor
sti
faddl
push
add
cld
and
sbb
or
out
sbb
push
sub
sub
push
lods
mov
movsl
and
out
push
divl
pop
mov
mov
sbb
dec
rcll
je
sbb
push
xchg
push
outsb
idivl
mov
int3
or
lcall
fidivrs
xchg
sbb
pop
test
stc
add
iret
and
sub
xchg
insl
jecxz
pop
cmp
sbb
push
in
mov
popa
push
shlb
aaa
fmul
rolb
mov
cmp
inc
push
sahf
jne
xorb
inc
nop
cld
test
pop
lea
xchg
clc
aas
sbb
jle
gs
sbb
rcrb
cld
sub
and
xchg
sbb
mov
mov
mov
jp
cmpsb
lret
cmpsb
and
and
sbb
mov
cmc
int
mov
fsub
stos
aam
or
out
shrl
xchg
jbe
imul
add
mov
ret
mov
rcrl
lds
ja
jle
and
sti
outsb
cmpb
jbe
cmpsb
add
mov
mov
or
sti
xchg
pop
aam
or
and
push
cmpsl
pop
stc
rolb
pop
sub
jne
lock
test
in
lods
rolb
mov
add
test
nop
int3
enter
lds
jmp
sbb
inc
fs
sbb
lret
xorb
adc
inc
pop
pop
mov
mov
bound
mov
loopne
scas
mov
mov
fs
loopne
push
dec
sbb
mov
push
mov
loope
cmp
fisubs
ss
rcr
pop
fsts
sti
sub
sub
adc
out
cli
xor
dec
shlb
mov
sbb
mov
imul
pop
lock
fmuls
jecxz
mov
movb
dec
mov
es
cmp
lcall
cmpsl
loope
jge
jno
div
aas
xchg
pop
js
fprem
sub
mov
add
mov
out
in
in
pop
insb
jnp
cld
xlat
fs
lods
push
loop
shll
cmp
loope
jle
iret
movsl
scas
mov
out
sbb
cmp
scas
cmp
jge
sti
jp
inc
or
mov
cld
mov
mov
mov
mov
int3
sub
mov
dec
adc
pusha
cmp
pop
gs
jbe
dec
xchg
mov
cmp
pop
scas
orb
pop
pop
sub
push
xchg
and
mov
xor
rcr
cwtl
sub
int
jge
dec
subl
sub
out
mov
add
imul
mov
and
push
dec
and
pop
sti
xor
sub
movsl
inc
pop
push
stos
mov
mov
into
divl
dec
push
sub
movsb
imul
sbb
mov
lea
iret
jecxz
push
xlat
cli
xchg
mov
xchg
mov
cld
xchg
scas
xchg
shrb
pop
xor
mov
les
xchg
mov
push
xchg
add
aad
mov
mov
jns
pop
emms
xchg
mul
test
push
cmpb
popw
dec
pop
dec
loope
cs
arpl
bound
arpl
test
hlt
mov
xchg
sar
cli
outsb
push
test
aad
lcall
jmp
sbb
jmp
xor
outsl
test
or
movb
lock
push
and
cmp
fistpll
ret
add
mov
xchg
sbb
into
pop
push
push
sbb
ret
pop
sub
lcall
scas
mov
pop
jg
daa
cmp
mov
jmp
add
pop
sbb
mov
cmpsb
enter
repz
pop
dec
lods
mov
and
mov
inc
bound
das
dec
mov
dec
addr16
cwtl
jno
jecxz
leave
arpl
out
stc
xchg
and
dec
and
orl
subb
shl
and
or
lahf
popf
stc
int
mov
das
es
dec
outsl
cmp
push
add
add
inc
lret
rcrb
cld
shrl
iret
repz
push
orb
sub
inc
test
mov
rclb
out
je
imul
mov
adc
inc
das
xor
mov
add
xor
adc
icebp
mov
loopne
jnp
dec
jle
gs
jno
lcall
popf
cmpsb
orb
fwait
push
mov
add
cmp
mov
insl
ja
dec
sub
pushf
dec
repz
xor
into
mov
xchg
jae
js
push
cmp
out
pop
mov
movsl
jg
pop
out
cld
cli
mov
cli
xchg
jbe
sub
sub
jb
insb
inc
xchg
in
mov
mov
les
or
out
cmp
mov
cmp
decl
popa
add
rcrb
adc
mov
xchg
inc
push
or
push
push
sub
or
or
sbb
xchg
xchg
fsubrs
fwait
adc
ficomps
out
xor
xchg
inc
ficoms
cmp
cmp
xchg
jmp
fiaddl
and
xchg
sbb
jge
dec
xchg
sub
rcl
push
mov
inc
in
jg
test
pop
shl
std
das
mov
add
cltd
and
inc
lock
mov
or
inc
pop
and
mov
dec
movsl
fs
jnp
mov
out
sahf
mov
push
sbb
adc
mov
xchg
ljmp
aas
sbb
fwait
mov
or
inc
or
les
sti
push
pop
fistpl
sbb
addr16
sbb
pop
mov
mov
nop
lods
push
ret
xchg
adc
lahf
sbb
push
xchg
xchg
ljmpw
ret
add
push
shrb
sub
imul
pop
xor
repz
xchg
jp
add
insb
add
in
mov
pop
mov
mov
sbb
xchg
xchg
jae
std
sbb
cld
pop
mov
popa
inc
xor
jge
mov
add
cmpsl
push
push
gs
pop
jmp
ljmp
adc
inc
scas
rcrb
pop
sarl
mov
pop
push
adc
push
xchg
add
or
paddsb
mov
and
pop
sub
imul
fildl
adc
fst
xchg
sbbb
js
pop
push
xor
mov
mov
insb
push
pop
loop
mov
jecxz
push
mov
push
outsb
pop
xchg
aaa
fcomps
shr
imull
add
repnz
bound
jno
xchg
or
call
inc
repnz
daa
ficoms
or
inc
pop
je
arpl
sbb
mov
jne
pop
aaa
mov
sti
mov
in
movsb
jnp
cmp
dec
ljmp
in
sbb
nop
inc
subl
out
cmp
cwtl
das
xchg
daa
pusha
jmp
push
push
xchg
ret
aaa
jns
and
mov
xor
repnz
jae
ljmp
mov
or
mov
add
fs
and
and
popa
mov
hlt
fidivrl
push
inc
or
testb
pop
inc
cmc
dec
gs
adc
stos
xor
aaa
sub
jg
or
add
xchg
aaa
pop
rorb
mov
xchg
xchg
jns
jnp
sub
sar
xlat
std
mov
cmp
mov
xor
mov
mov
and
push
test
daa
add
test
lods
add
adcl
pop
xor
fdivrs
sbb
js
shrl
ret
das
cmc
mov
xlat
lret
jne
or
pop
xor
inc
add
and
and
scas
int
jl
sbb
sub
push
sbbb
daa
clc
sub
stos
mov
inc
inc
xchg
xchg
and
enter
or
pop
mov
out
adc
lds
mov
cmp
int3
jbe
cs
stos
repz
jmp
enter
dec
loopne
xchg
adc
or
pusha
lods
cmp
push
cmpl
fwait
pushl
shr
jp
ret
lods
es
imul
aaa
mov
mov
xchg
out
push
or
push
lret
pusha
mov
roll
mov
rorb
lods
scas
mov
aam
scas
aaa
jecxz
mov
mov
sarb
jl
ljmp
pop
icebp
mov
mov
xchg
mov
sub
xchg
push
xorb
xchg
and
adc
pop
inc
int
sbb
sti
dec
jns
dec
pushf
jnp
es
pop
dec
or
enter
or
push
in
pushf
mov
mov
jle
pop
aaa
sub
add
jb
pop
jp
jne
outsl
lea
mov
adc
jg
sub
sahf
adc
es
xlat
test
test
mov
sbb
jo
fwait
vmptrld
call
mov
outsl
xchg
imul
dec
xor
add
cmpsb
scas
iret
dec
inc
lods
cmp
mov
adc
sbb
sarl
pop
xor
pop
testl
jmp
out
clc
add
mov
add
lea
rcll
orl
psubw
ljmp
loopne
pop
and
stos
cmp
mov
add
jecxz
daa
dec
je
xchg
lret
movsl
into
cwtl
jp
mov
jl
xlat
jmp
push
nop
mov
inc
sub
imul
xchg
hlt
dec
pop
mov
xchg
loope
sbb
add
xchg
mov
nop
pop
pop
jp
jg
push
inc
jl
mov
test
hlt
out
dec
jp
add
push
subl
pop
shll
jnp
push
push
test
mov
xor
sbb
ret
in
jge
mov
mov
fdivrl
rorb
fisttpl
xchg
lea
in
sub
mov
mov
push
xor
pusha
pop
cwtl
test
sbb
lahf
loope
push
sbb
sbb
adc
int3
seta
out
movsl
das
xor
xor
dec
outsb
mov
enter
das
js
xor
inc
aad
rcll
mov
mov
pop
xor
push
stos
sbb
repnz
and
push
es
icebp
push
jne
push
mov
insl
cmc
xchg
cmp
ljmp
jbe
je
movsl
dec
addr16
pop
movsb
push
mov
xchg
adc
mov
lea
mov
or
sub
push
push
sub
jo
inc
cmpsb
bound
mov
jns
mov
cmpb
add
fwait
lock
subl
push
ror
cmpsb
leave
cmp
aad
in
mov
push
adc
cmc
xor
lret
cs
fdivrs
mov
mov
shrb
cmp
mov
mov
mov
jl
int3
adc
out
rcrl
scas
sub
repz
movsl
push
mov
mov
dec
dec
outsl
push
push
adc
ds
or
bound
lret
gs
testl
dec
mov
push
jmp
or
sbb
xchg
dec
in
sub
scas
xor
mov
push
adc
in
mov
leave
xor
fs
nop
movsl
in
sti
movsb
daa
and
xor
push
pop
inc
mov
inc
mov
stc
jl
xchg
sbb
pop
jg
jge
repnz
adc
fists
leave
sub
arpl
lahf
dec
sub
xchg
adc
cmp
xchg
cmp
icebp
mov
xor
mov
mov
fsubr
or
inc
cmp
inc
ret
and
sub
xchg
lock
dec
pop
xor
data16
pop
adc
jb
mov
lods
mov
inc
mov
loop
jo
sbb
mov
test
jecxz
mov
mov
jecxz
addb
js
mov
mov
fsin
jp
shll
les
mov
sub
or
movsl
push
cmp
add
test
test
sahf
xlat
insl
sub
inc
stc
add
mov
movsb
out
sbbb
pop
pusha
jmp
inc
lods
pop
inc
fldcw
ret
add
mov
mov
in
les
xchg
mov
dec
inc
pop
and
add
or
sub
xor
mov
or
lods
ret
into
cli
ss
sbb
mov
iret
mov
jg
rcrb
mov
mov
cmp
jno
data16
xchg
mov
and
xchg
jmp
loop
pusha
call
divb
jmp
mov
dec
aas
dec
adc
sbb
leave
or
pusha
lock
xor
ret
jns
lods
jne
inc
push
sbb
shrb
loope
cltd
popf
push
scas
cmpsb
jp
popa
inc
aad
lock
adc
rcrb
or
mov
inc
add
aad
js
std
xchg
or
mov
push
adc
es
mov
inc
pop
pop
and
sub
mov
mov
leave
pop
mov
iret
xor
pop
mov
jge
add
sbb
lahf
mov
jb
push
pop
cmpsl
cli
xorb
neg
ja
popf
outsb
cmp
pop
daa
movsb
test
jb
mov
daa
insb
pop
mov
icebp
loope
jb
cltd
adc
cmp
adc
out
cltd
dec
cmp
xor
add
popa
xorl
pushf
adc
aas
jl
ds
push
addr16
pushf
mov
jo
repnz
xor
or
inc
xchg
mov
inc
mov
mov
xchg
push
outsl
cld
mov
dec
push
pop
adc
into
rcrb
out
cs
inc
jno
mov
or
xchg
xchg
icebp
or
push
outsl
mov
jmp
aam
rclb
out
pxor
lahf
push
adc
sbb
loope
sub
mov
lods
in
push
inc
xchg
enter
loop
into
dec
repnz
sbb
dec
mov
dec
out
mov
cmp
sarl
xchg
jb
xchg
jge
jae
mov
ret
test
sub
mov
mov
inc
shll
in
jle
test
mov
pushf
xchg
or
sub
int3
rcrl
mov
mov
xor
ret
inc
jecxz
dec
sti
sub
aam
xchg
adc
lock
repnz
cltd
or
loopne
mov
push
xor
ja
imul
outsb
ds
sbb
or
arpl
pop
int
xchg
int3
adc
push
adc
stc
mov
mov
andb
sarb
mov
aam
mov
push
adc
push
repnz
jl
xlat
lcall
adc
mov
test
sbb
and
not
dec
into
lret
push
fcmovne
mov
or
mov
out
imulb
push
mov
adc
shll
sahf
cmp
xchg
xor
adc
cmc
sub
fldl
cmp
dec
jecxz
add
add
push
test
imul
jmp
inc
aam
cmc
and
dec
add
pop
jl
mov
xchg
call
push
shl
xchg
pushf
xchg
negl
sti
fsubl
lret
lods
movsb
jg
lods
lea
adc
mov
in
inc
xchg
xor
and
dec
push
sub
jp
pop
test
stc
pop
sbb
addr16
xchg
mov
hlt
sti
repnz
or
aaa
rclb
sbb
movsb
std
push
std
lcall
xchg
jl
push
fsub
sub
sbb
inc
out
ret
fldenv
scas
js
je
add
insb
bound
dec
mov
frstor
icebp
call
mov
mov
push
cmpsl
sahf
loopne
mov
leave
arpl
inc
sub
pop
dec
inc
xchg
fisttpl
out
cwtl
cmpsb
dec
js
cmc
mov
mov
lcall
ret
imul
out
repnz
dec
xor
sub
pop
dec
cltd
and
out
hlt
push
lret
mov
adc
mov
jno
ficoml
pop
aad
mov
push
cmp
loopne
call
or
hlt
cmpsl
xchg
imul
adc
and
arpl
or
loopne
mov
and
daa
sub
sbb
xchg
mov
sub
xchg
jmp
inc
ret
or
xchg
push
dec
jo
push
lock
std
cs
cmp
inc
pop
pop
mov
arpl
sub
pop
dec
sbb
inc
lock
mov
xchg
xchg
lods
mov
xchg
ret
sub
testl
loop
and
mov
fdivp
stc
test
xorl
hlt
mov
mov
or
test
imul
pop
jo
inc
push
pop
lcall
test
pop
xchg
push
add
cmp
aas
pop
pop
scas
pop
jae
std
fildll
xor
push
xchg
cli
mov
inc
outsb
add
add
dec
push
out
in
incl
hlt
mov
lret
test
xchg
jo
pushf
clc
ljmp
add
shlb
xchg
pop
xor
cltd
mov
js
pop
aas
iret
inc
fsubrl
leave
sbb
fwait
inc
sbb
sub
loopne
test
sub
adc
in
or
sbb
test
push
cmp
test
fcoms
xlat
lea
adc
dec
sbb
dec
add
clc
inc
bound
into
push
pop
lgs
les
push
arpl
aam
mov
sbb
rolb
mov
mov
call
cmpsl
imul
insl
pop
sarb
insb
loope
xor
push
cmp
push
fcmovb
clc
mov
insl
push
out
xchg
pop
andl
jmp
xchg
fidivrl
dec
stos
adc
pop
fldt
mov
dec
mov
xor
adc
fs
call
jmp
jecxz
out
shlb
lea
add
test
es
sub
mov
pusha
mov
mov
adc
jnp
lcall
je
sub
push
dec
cmc
and
inc
jbe
jne
fists
dec
dec
fcmovb
or
fwait
cmp
adc
int3
sarl
cmp
das
lahf
mov
cmp
adc
sbb
pop
add
ss
adc
fildll
imul
movsb
adc
jle
dec
xchg
sbb
sub
xor
out
scas
movb
jp
mov
and
push
xchg
in
xlat
je
jmp
icebp
sbb
cs
push
addr16
stos
pop
or
add
pop
jae
aaa
iret
ret
mov
rcrl
dec
and
pop
into
clc
xor
clc
push
ds
or
mov
dec
jne
mov
rolb
xor
add
call
test
scas
dec
pop
xchg
and
push
rcrl
fs
add
dec
mov
push
pop
lock
sti
out
inc
add
fsubr
push
mov
aad
inc
ret
push
test
push
inc
int3
inc
ds
pushf
jne
pop
push
jb
dec
sub
faddl
bound
jo
add
xchg
daa
mov
mov
mov
jl
js
cli
pop
lds
or
jecxz
cmpb
or
out
jecxz
jo
sbb
push
andb
pop
mov
jne
aaa
dec
push
dec
mov
inc
data16
loop
cmc
cwtl
mov
daa
int3
jecxz
movsl
jne
inc
mov
jecxz
sbb
adc
popa
xchg
test
mov
push
add
mov
out
adc
popf
jle
aad
dec
sub
sbb
cltd
pop
into
cltd
xor
adc
stc
sub
jno
xor
push
hlt
sub
mov
sub
fs
dec
lret
or
sbb
pop
xrelease
inc
jnp
dec
sub
adc
mov
lret
testl
dec
arpl
cld
jnp
ffree
ret
fsubrl
movsb
es
mov
mov
xorb
pop
dec
in
mov
dec
jg
mulb
xor
push
sahf
scas
orb
sbb
pop
popa
cmp
test
xchg
outsl
insl
insb
sub
and
lret
push
xor
dec
xor
inc
mov
jno
push
hlt
lods
iret
xor
sub
pop
add
adc
mulb
pop
movsb
mov
out
insl
sbb
and
or
imul
cmpsl
sub
pop
sbbb
test
add
push
sbbb
adc
and
jecxz
sbb
iret
addb
dec
or
stos
xor
out
mov
add
pop
xor
lcall
jns
dec
xchg
inc
cmp
ret
jns
inc
adc
jnp
jae
xchg
or
push
xor
stc
ljmp
lahf
sbb
cmp
imul
das
lahf
mov
push
dec
push
jae
aam
or
xchg
je
imul
imul
orl
dec
jmp
mov
add
xchg
adc
punpcklbw
cmp
cmp
aad
scas
out
das
divb
test
and
cwtl
and
out
cmp
out
jmp
pop
push
cmpsl
or
in
cld
out
jns
push
pop
cwtl
add
rclb
jecxz
scas
adc
ljmp
cmpsl
stos
mov
mov
dec
test
mov
mov
sub
sub
aaa
mov
add
call
test
cmp
jae
jbe
fmul
scas
push
pop
xor
push
push
pop
push
in
jae
pop
sub
popf
pop
pusha
jb
scas
out
push
insb
addr16
adcb
xorb
push
sub
mov
adc
push
stc
xchg
repnz
cmp
mov
fwait
mov
clc
add
loopne
xor
lods
lret
push
es
dec
add
push
push
and
leave
pop
mov
addr16
in
bound
xor
mov
icebp
push
or
scas
adcl
mov
inc
cmpsl
or
push
and
xor
mov
xor
lahf
test
in
sub
sti
aas
mov
loopne
adc
mov
insb
clc
sarb
in
icebp
xor
out
and
sbb
mov
cmp
jl
lcall
mov
and
fwait
mov
sbb
jno
xor
lods
iret
fstps
pop
loope
push
mov
testl
jl
dec
xchg
sbb
add
cwtl
fstpl
lea
and
lock
in
mov
xchg
lock
cmp
cmp
and
lods
jecxz
add
dec
in
sub
jnp
cmp
inc
or
mov
sub
inc
lock
jns
adc
subl
rclb
enter
test
in
mov
xchg
out
aam
jne
stos
dec
xchg
and
jle
rcll
or
dec
push
lcall
xchg
cmpsb
jecxz
mov
int3
fbld
popa
es
mov
mov
dec
mov
pusha
in
cmp
aaa
sarl
jl
add
call
jmp
fistpl
cmpb
push
sbbl
ljmp
enter
xor
cmpsl
aam
sbb
add
std
icebp
jno
mov
jbe
cmp
xor
cmpsb
mov
out
cmp
xor
inc
push
push
add
rcl
sar
aam
scas
enter
fdivrl
mov
or
mov
fwait
sub
xchg
aaa
arpl
dec
cmp
sbb
adc
into
mov
cmpsb
jle
lods
pop
xor
data16
inc
movsl
dec
push
jle
mov
pusha
sbb
rcrl
leave
jle
xchg
cli
xchg
arpl
xor
xor
sti
mov
sbb
push
jns
jl
cltd
jb
jp
inc
or
xor
and
lods
dec
lods
mov
mov
pcmpgtw
ja
xlat
xor
jecxz
fiaddl
inc
cmpsb
mov
popf
add
sub
push
xchg
and
xor
cmp
enter
fldl
adc
movsb
aaa
shll
sbb
loopne
xor
enter
minps
ret
jae
or
popf
icebp
unpcklps
cli
xlat
xor
pop
scas
imul
mov
loop
dec
inc
mov
popa
dec
add
pusha
push
pop
lods
cwtl
rorl
arpl
int
repnz
cmp
repnz
mov
sub
loopne
add
cltd
es
movsl
rcr
sbb
cwtl
push
int
sti
aam
dec
jbe
mov
pop
shl
adc
stos
cli
xchg
fildll
mov
imul
jbe
enter
pop
out
push
or
sub
fs
jp
mov
cwtl
xchg
jle
push
push
pop
adc
out
stos
outsl
dec
ja
xor
repnz
xor
fsubrp
jo
cltd
enter
dec
or
mov
in
fldz
iret
es
dec
iret
into
mov
mov
mov
dec
sbb
in
repnz
inc
inc
mov
xor
aad
cmc
rcrb
das
imul
bound
sbb
xor
sbb
and
pop
testl
adc
subb
nop
lea
jnp
arpl
inc
push
push
sub
sub
mov
xlat
mov
jnp
mov
cld
push
je
shll
repz
mov
add
lret
xchg
vmovddup
hlt
mov
pop
ficoml
jmp
push
jp
cmp
mov
lods
pop
xchg
mulb
sbb
mov
pop
sbb
push
mov
adcb
mov
mov
pop
jle
and
sub
ret
xchg
add
and
mov
jnp
ficoms
mov
or
dec
pop
push
gs
inc
scas
repz
pop
xchg
mov
aad
cmp
aam
cmpsl
in
cmp
mov
dec
aas
mov
jge
outsb
movsb
fistl
or
sub
mov
mov
add
sub
jle
adc
add
mov
mov
sbb
push
push
push
jecxz
out
or
pop
inc
adc
fwait
dec
mov
fcoml
jl
dec
lret
jmp
leave
mov
ret
pop
stos
leave
push
inc
mov
jp
pop
lods
xchg
adc
push
outsl
jne
cltd
lret
icebp
gs
aad
push
in
faddl
add
orb
mov
hlt
fisubrs
fdivrs
add
sub
jmp
add
push
xor
push
cmp
scas
pop
or
mov
cld
lret
push
fldenv
cmp
enter
mov
out
stos
inc
jl
push
sub
imul
mov
push
cmp
pop
imul
mov
mov
pop
xor
in
pop
xor
daa
pop
outsb
and
jp
dec
je
cmp
lahf
jecxz
cmc
stos
adc
sbb
xor
sub
lahf
enter
pop
sldt
test
jp
or
ja
arpl
adc
fcmovbe
push
or
imul
and
lcall
sub
push
xchg
int
xor
lea
sti
add
test
cmc
xor
sub
sub
mov
or
int
leave
sahf
adc
divl
push
mov
icebp
sahf
pop
pop
movsb
cli
lods
jae
rorb
add
cmp
mov
and
orl
pop
in
xor
xor
adc
lret
pop
inc
mov
and
pop
aam
xchg
pop
adc
jns
test
dec
mov
xlat
xchg
or
insb
jnp
or
imul
lret
stos
fisubrl
xchg
pop
fs
xor
les
cmp
mov
scas
fdiv
aam
cld
xchg
gs
inc
popf
xor
std
loopne
add
shll
push
je
js
xor
push
mov
movsl
dec
push
stc
push
std
lret
adc
mov
fs
xchg
push
push
pop
outsl
xor
xchg
icebp
mov
insb
jg
pop
insl
outsb
out
add
sarl
ljmp
or
push
loopne
cmp
clc
xor
std
pop
xor
adc
mov
push
dec
sbb
add
cli
outsb
and
addr16
shlb
xor
add
pop
ljmp
pusha
or
and
std
jmp
add
test
sbb
mov
stos
fcoms
push
lock
insl
inc
mov
pop
add
and
pop
xchg
cltd
mov
aas
mov
fdivrs
mov
mov
pusha
mov
enter
fs
popa
mov
push
add
bound
and
mov
cmp
popa
add
imul
push
imul
cli
lret
lcall
pusha
clc
hlt
dec
mov
or
in
mov
dec
notb
push
xchg
push
dec
push
mov
mov
movsl
and
aaa
in
cmp
mov
mov
call
cs
shlb
ret
stc
mov
adc
test
sar
lods
pop
mov
arpl
mov
lret
lret
push
bound
loopne
cs
cmp
jecxz
js
mov
leave
andb
jo
clc
adc
dec
fwait
outsb
cmp
into
pop
scas
pop
lahf
cli
inc
sbb
outsl
pop
xchg
or
mov
pop
daa
imul
repz
inc
add
fidivl
fnstenv
pushf
dec
js
loop
dec
ret
jl
dec
xchg
adc
stc
shl
leave
orb
ljmp
pop
fnsave
sbb
ja
insb
ss
xor
pop
stos
out
push
mov
jge
pop
movsb
ss
cmpsl
pop
mov
data16
push
repnz
negb
test
inc
ficoms
cmp
inc
addr16
dec
test
enter
push
mov
dec
je
in
jbe
mov
jne
mov
xorb
fwait
insl
lret
mov
and
adc
mov
sbbb
cmp
es
xchg
add
inc
or
in
cmp
mov
stc
xchg
mov
lcall
sahf
xor
in
push
push
inc
add
push
adc
pop
es
fxch
mov
sbb
xchg
jge
repz
out
pop
lahf
or
loopne
test
scas
fmuls
push
cmp
adc
mov
sbb
jnp
outsl
jmp
daa
adc
xchg
jmp
adc
push
cmc
scas
xchg
mov
cmc
ret
sub
inc
enter
cmpsb
sar
in
sub
mov
scas
adc
pop
adc
cltd
push
mov
iret
mov
cmp
gs
mov
lahf
push
pop
jb
sub
lcall
xchg
sbb
mov
pop
cmc
out
bound
dec
pop
jp
xchg
xor
ja
cmpl
lret
sbbb
sub
neg
or
test
mov
mov
subl
ss
data16
je
test
rcll
and
add
orl
pop
stos
sub
push
mov
add
leave
mov
cmp
push
sub
and
js
fbstp
pop
loop
push
or
inc
imul
iret
test
sub
mov
pop
in
lods
ret
pop
and
sub
das
adc
add
and
pop
arpl
ljmp
inc
rcr
sub
cmp
fcoms
out
or
xchg
xchg
sub
sub
mov
cmpsl
pusha
xchg
mov
js
arpl
mov
jp,pt
cmpsl
dec
add
xor
mov
ja
mov
mov
dec
push
push
movsl
add
mov
dec
push
fwait
repnz
idivl
lods
push
mov
lret
adc
xor
cmp
push
sbb
sbb
and
jg
pushf
jno
xchg
xor
movsb
sti
loopne
aaa
xor
ficoml
shrb
mov
cmp
aad
dec
loope
or
fwait
subl
pop
je
mov
std
mov
add
pop
mov
push
jp
lds
fwait
scas
imul
add
push
xchg
cli
aam
or
mov
sub
js
rcl
int
je
lods
xchg
sahf
cmp
xor
cmp
cld
lea
adc
iret
pop
sub
pop
cld
outsl
movsb
repnz
pop
gs
std
mov
mov
hlt
sub
xor
adc
pop
mov
add
mov
mov
xchg
movsb
lcall
cmp
sti
stos
cli
jne
jmp
adc
xchg
pop
repnz
lahf
andl
sub
push
in
mov
cltd
fidivrl
sbb
cmc
push
inc
push
inc
das
lcall
cmp
or
sub
mov
push
aaa
aas
bound
xorb
xchg
ret
inc
cmpsb
gs
fcomps
mov
jns
pop
mov
cmp
repz
ret
jno
or
inc
and
fcoml
push
mov
rcrl
lds
mov
pop
dec
pop
and
in
test
mov
jge
push
leave
mov
jae
or
push
leave
cmpsb
and
xchg
pop
inc
or
imul
fsts
inc
mov
cmpl
and
dec
sub
inc
jle
xchg
lahf
xchg
insl
jno
mov
aaa
mov
and
mov
xchg
xor
jecxz
mov
out
arpl
enter
xlat
cs
mov
lea
clc
inc
xor
arpl
mov
sub
loopne
fldl
insb
cmp
xchg
xchg
fdivl
lods
pop
mull
aaa
or
sbb
popa
test
mov
cld
xchg
lret
dec
adc
imul
lret
movsl
pop
inc
jo
lea
mov
push
mov
les
and
sarl
loopne
test
mov
fs
push
ds
dec
fidivl
pop
or
out
dec
sub
inc
jo
shll
dec
nop
movsb
test
fwait
xor
jmp
inc
pop
stos
sub
std
dec
sub
or
pop
lea
pop
test
imul
fwait
loop
sbb
shrl
fsubs
mov
insl
and
sarl
dec
ljmp
xchg
inc
stc
loop
pop
imul
pop
jle
hlt
pushf
push
mov
mov
imul
aas
inc
stos
ret
jne
lea
jnp
jle
add
daa
pop
jl
not
das
nop
popa
mov
sbbb
xchg
or
out
mov
movsl
andl
in
mov
out
rorb
iret
ficoms
xchg
sbb
addr16
andb
push
repz
inc
pop
lea
ljmp
cmp
movb
insb
out
sbb
mov
arpl
lret
jmp
adcl
clc
in
popa
xchg
outsl
test
dec
hlt
push
push
cmp
push
out
mov
int3
push
mul
mov
insb
lcall
push
andl
push
push
cmp
xchg
lds
lea
jns
call
ret
jnp
cmc
repnz
add
jo
dec
mov
cs
jno
cmp
inc
push
clc
inc
mov
pop
jp
cwtl
mov
adc
inc
cmc
mov
mov
adc
in
push
test
pusha
push
push
and
insb
mov
sbb
cmp
push
pushf
cmpsl
cmp
xor
mov
jl
ret
lods
and
imul
sub
dec
mov
cmpb
add
mov
sbb
jg
push
stos
cwtl
push
repnz
pushf
iret
sub
ror
movsb
cmp
or
scas
fistl
out
adc
outsl
dec
sarl
or
xchg
mov
shll
jbe
and
adc
movl
outsl
or
add
pop
push
dec
out
and
pop
pop
rclb
cmp
incl
cmpl
out
push
out
in
cltd
add
movsl
jo
cltd
inc
or
jbe
sbb
dec
les
push
adc
jecxz
mov
sub
popf
fdivs
cmp
stc
push
and
xor
add
dec
scas
test
push
popf
sbb
lods
xor
push
mov
dec
scas
mov
inc
xchg
jecxz
inc
insl
aad
jo
std
jnp
ficompl
inc
sti
data16
insl
jne
int
rcrb
stos
xor
sbb
ret
les
sub
popf
mov
or
das
hlt
daa
and
test
test
cmp
dec
jg
aaa
mov
mov
xchg
test
adc
fmul
je
and
daa
mov
add
sbb
insl
rol
push
shll
cmp
imul
inc
or
sub
and
aam
mov
dec
add
mov
leave
push
sar
jo
popf
popa
hlt
stc
sti
mov
xchg
xchg
mov
inc
cmpsb
dec
add
mov
push
and
or
push
in
sbb
xchg
mov
gs
sti
or
roll
ljmp
jae
dec
jo
xor
adcb
add
push
and
lret
pop
cmp
enter
icebp
push
or
and
sbb
es
or
test
movsb
sarl
out
test
mov
enter
sub
push
inc
dec
mov
add
push
dec
inc
outsb
jl
testb
mov
notl
add
fdivrp
and
sbb
data16
push
xor
mov
int
loop
popa
add
adc
xor
cli
mov
or
push
adc
jb
cmc
in
inc
int3
mov
and
sbb
dec
jno
add
lods
movl
lahf
imul
xchg
call
jp
cmpl
adc
sub
rclb
mov
mov
in
add
out
mov
add
mov
lock
mov
ds
inc
or
out
jno
icebp
lds
fiadds
lock
xchg
mov
mov
sub
icebp
cmp
stos
mov
xchg
push
dec
mov
call
mov
pop
jbe
push
push
jg
addr16
xor
lcall
int
mov
cmp
inc
inc
jns
imul
jp
in
sub
in
jno
jg
jg
orl
ret
mov
in
out
mov
loopne
xchg
jge
add
or
mov
test
or
mov
pop
push
or
repz
repz
testl
inc
sysexit
pop
repnz
gs
sarb
out
sub
dec
addr16
jmp
sub
andl
insb
mov
movsl
addr16
pop
pop
lret
dec
fisubrs
xlat
jb
mov
repnz
test
cmp
pop
js
sub
shll
and
and
scas
dec
gs
rcrb
xlat
and
fcmovb
in
cmp
push
mov
sbb
pop
jl
mov
sbb
cmovns
jns
stos
jecxz
sub
test
mov
outsb
dec
loope
repnz
std
movsl
mov
loope
push
fs
leave
and
leave
sbb
ds
outsb
test
mov
ja
aam
or
lcall
jb
repz
int3
repnz
pop
jg
xchg
pop
push
bound
clc
lea
jnp
aaa
inc
nop
js,pt
sbb
dec
sarb
mov
jno
pop
bound
popa
ret
adc
pop
inc
xchg
adc
out
xchg
sti
call
xor
and
insb
pop
sbb
xchg
fwait
data16
sub
sbb
das
shl
or
movsb
fwait
movsb
mov
cmp
inc
fbld
andb
addr16
imul
fnsave
xlat
jl
push
adc
negb
dec
mov
mov
notl
mov
mov
movsb
into
or
xchg
stos
push
lahf
pop
adc
in
loopne
repnz
push
jb
cmpsb
repnz
sbb
mov
mov
jp
sbb
pop
sarb
sbb
lods
mov
sahf
subl
push
mov
pop
insl
orl
xchg
dec
lret
fnsave
adc
xchg
pop
in
andb
xchg
fcomps
pop
push
int
or
dec
imul
test
int
cmp
jp
and
or
pop
clc
and
jl
int
bound
and
xchg
add
mov
cltd
int3
std
pop
shlb
sbb
add
movsb
and
cmp
test
roll
out
xor
inc
add
jno
loopne
xor
jecxz
cmp
cmpb
lds
popf
mov
fs
or
mov
mov
jmp
mov
xchg
testb
orl
pop
fsub
fwait
shlb
xor
jp
pusha
loopne
pop
adc
jae
jbe
xor
clc
cmp
xchg
aas
pop
sarb
push
mov
outsb
fldl
das
mov
mov
icebp
iret
pop
sub
adc
pop
ds
nop
fisttps
data16
cmpsl
orb
lods
adc
or
mov
ja
repnz
dec
sub
lcall
pusha
xor
pop
add
icebp
cmp
inc
jge
push
mov
push
cwtl
lods
jae
jmp
mov
psubb
aad
mov
adc
test
inc
jp
in
xor
test
outsb
push
push
insl
stc
pop
mov
xchg
addb
repz
inc
int3
sbb
in
push
push
jl
test
push
lret
mov
je
enter
sub
js
pop
insb
into
mov
sbb
loopne
std
cs
shlb
gs
sbb
mov
push
mov
sub
in
cs
pop
sub
iret
fst
dec
xor
idiv
cs
nop
xor
ret
and
rcrb
addr16
mov
aas
dec
std
cmc
push
out
std
orl
mov
xchg
insl
fwait
xchg
out
jmp
fimuls
jle
addr16
repnz
popa
jb
fistl
ret
adc
add
xadd
add
jmp
sub
mov
fwait
push
pop
jo
subps
jnp
cmp
andl
and
inc
rol
repnz
es
pusha
das
and
loopne
mov
sub
add
jg
sti
pushf
add
loop
addr16
mull
xchg
mov
inc
stc
or
repz
inc
mov
fldcw
pop
test
xorl
or
dec
cmp
rcll
fimull
inc
lds
adc
mov
mov
pop
test
movsl
jae,pt
lea
pop
ja
bswap
imul
or
add
fistl
push
sub
inc
jl
cmp
add
xor
fdivp
mov
cmp
push
dec
fnsave
call
mov
push
in
sbb
pop
leave
aad
mov
js
fnstenv
ds
negb
xor
cmp
mov
adc
sub
leave
pop
test
push
jle
mov
inc
inc
mov
mov
movsl
pop
mov
in
and
es
test
push
jb
stc
aam
fwait
sub
cmc
xlat
in
sbb
cmp
add
fiadds
out
movsl
enter
movsl
gs
mov
or
adc
sub
sub
or
js
icebp
cmc
mov
testb
fsubp
jnp
pop
and
into
aam
inc
jg
cmp
inc
sub
mov
mov
and
dec
roll
mov
in
jge
in
sub
inc
shll
enter
fiaddl
sub
push
movsl
insl
out
cmp
fcmovnb
fiadds
imul
jnp
std
dec
push
sbb
sbb
mov
push
adc
mull
ljmp
mov
mov
xlat
jo
xchg
call
dec
sub
in
shll
fdivr
daa
lahf
jg
rorl
imul
sbb
and
pop
fimuls
cmp
fnsave
push
sti
ret
std
and
jne
mov
mov
aam
jmp
lds
pop
call
leave
or
pushf
pop
push
les
ljmp
push
xor
ret
lret
inc
xor
outsl
inc
pop
jb
and
aaa
test
adc
fwait
jle
sub
dec
arpl
int
add
xchg
jmp
inc
or
mov
xor
pop
rcr
repz
and
fsubr
sub
jmp
pusha
cwtl
mov
mov
std
sti
pop
rcrb
dec
mov
fcomp
pop
mov
cli
nop
into
jge
inc
cmp
or
loopne
cmpl
andb
repz
jg
pop
insb
stc
xor
into
cmp
sbb
add
dec
out
mov
or
out
negl
inc
pop
sbb
int3
or
dec
push
arpl
into
stc
or
dec
push
sub
insb
mov
cmc
int
cmp
add
push
arpl
mov
xor
and
add
adc
test
or
popa
popa
push
jne
leave
pop
cmp
xor
pop
popa
pop
cmp
xchg
scas
popa
imul
test
imul
ss
fs
and
lds
dec
add
xchg
int3
cwtl
add
nop
inc
xlat
dec
test
rcr
sbb
test
stos
adc
xor
mov
lret
cli
cs
xor
out
cmp
jmp
mov
loop
sbb
push
pop
ffree
add
mov
popf
xchg
push
jg
mov
sbbl
repz
test
lods
xchg
in
cmpsb
mov
sub
ss
lret
cs
popa
mov
jmp
repnz
push
pop
cmp
sub
in
sub
loop
sub
pop
mov
movsl
data16
pop
jg
cmp
ds
pop
inc
pusha
sbb
xchg
dec
add
daa
out
pop
inc
int
cmp
cmp
add
outsl
outsb
push
lahf
divl
dec
pop
mov
dec
ja
add
jno
mov
sti
scas
je
mov
or
mov
insb
xchg
mov
or
push
negl
scas
mulb
into
and
shll
rcrb
mov
insl
movsb
sbb
sub
orl
repz
mov
inc
les
dec
mov
xchg
inc
xor
mov
xlat
in
pop
jge
mov
lods
fcmovnu
or
out
imul
mov
adc
sub
xchg
hlt
in
sub
jns
loope
out
lods
cmpsb
mov
jno
mov
xchg
jg
inc
mov
outsl
mov
repz
or
ljmp
stos
add
cmp
adc
int3
ss
mov
jb
lcall
mov
aam
sahf
in
pop
shlb
or
lds
into
insl
stc
or
and
fistpll
dec
pop
xlat
mov
in
jle
mov
push
jmp
out
xor
popa
in
cwtl
pushf
fcmovbe
cmp
fmuls
push
cli
fisubl
fiadds
cmp
shll
inc
jl
pop
enter
and
leave
cs
cld
bound
shrb
imul
in
ljmp
in
fisubrs
sub
and
nop
jle
cmp
pushf
add
outsl
add
inc
jnp
repz
cmpsl
dec
clc
or
in
or
es
jg
lcall
ret
jae
inc
mov
addr16
data16
jg
jns
cli
jbe
mov
lcall
iret
call
xchg
xor
sub
cli
mov
mov
andl
cmp
mov
scas
les
push
loope
adc
or
cli
push
adc
ja
mov
and
push
aad
addb
cmp
cltd
adc
dec
pop
popf
adc
enter
daa
repz
std
cld
mov
nop
shll
push
add
negb
push
xchg
adc
imul
lahf
jno
inc
and
icebp
adc
int
sbb
pop
mov
in
stos
gs
dec
sub
xchg
mov
and
out
mov
mov
aaa
xor
xor
loopne
mov
mov
and
divb
pop
shll
dec
sbb
in
sarl
lock
adc
cs
pop
jne
jl
call
dec
cmp
sub
aaa
bound
test
jno
out
rolb
jbe
lea
xchg
lods
inc
roll
inc
ds
fyl2xp1
enter
mov
sub
jl
xchg
xor
jl
adc
int3
iret
mov
popf
push
dec
in
and
out
xchg
jnp
ljmp
pop
mov
xchg
pop
test
test
ds
xor
cmp
lret
jno
arpl
xor
cmp
mov
xor
jnp
test
mov
xchg
mov
mov
mov
pop
movsl
ljmp
dec
push
jb
mov
xchg
sbb
inc
pusha
stos
pop
scas
pop
clc
jg
and
inc
inc
rcl
loop
in
adc
out
pusha
xor
stos
sarb
or
out
cld
sub
add
aad
test
pop
test
mov
roll
adc
cli
cmp
enter
pusha
loope
sbb
sub
xchg
dec
push
rol
leave
bound
inc
lahf
sti
mov
mov
push
je
add
push
and
lock
or
mov
pop
cmp
sbb
push
or
out
test
push
add
jp
ror
xchg
xor
fucomi
pusha
mov
aaa
cmp
ljmp
outsb
dec
pop
xor
test
dec
pop
lret
cmp
sbbl
cmpsl
addr16
pop
sub
arpl
cli
pop
iret
or
xchg
fwait
sbb
shll
scas
out
movsl
int3
sbb
push
xchg
mov
mov
mov
inc
and
jge
int3
outsl
jbe
ljmp
call
in
xor
into
out
adc
in
mov
aam
mov
fucom
sbb
aad
jmp
ljmp
aas
lds
mov
mov
jno
sub
fidivrl
ficomps
push
out
xchg
pop
insb
hlt
pusha
js
pop
or
inc
arpl
out
inc
cmpsl
lret
adc
xchg
fs
push
pushf
and
loope
dec
lret
scas
inc
out
cmp
lret
add
sbb
repnz
or
ret
inc
cmpb
addb
dec
and
push
xchg
shrl
aam
fiaddl
sub
mov
mov
add
cld
dec
das
gs
pop
test
mov
cmp
aad
sub
loopne
in
loop
insl
jle
mov
mov
cmpsb
cmp
loop
adc
hlt
and
cltd
jle
scas
sub
xlat
mov
sub
inc
mov
shlb
xchg
test
mov
int
movsl
mov
cmp
mov
push
inc
cmp
push
and
pusha
loopne
in
rolb
lea
fidivrs
pop
movsb
arpl
insb
pop
daa
xor
aam
xor
xlat
push
repz
das
mov
movsl
lods
jnp
xor
push
std
arpl
cmp
xor
sub
sbb
cmp
fldlg2
mov
or
push
xchg
test
fidivs
jg
rclb
pop
inc
or
push
in
adc
jecxz
dec
adc
pop
and
pop
stos
emms
push
add
unpckhps
jmp
mov
incb
mov
fsubrs
outsb
push
adc
jl
pop
fiaddl
mov
jmp
push
sub
lret
or
mov
lcall
leave
dec
loopne
ret
ds
outsl
sub
insl
pop
sbb
lea
inc
xor
aad
pop
and
jne
xor
add
jne,pn
push
stos
sub
lcall
or
jmp
mulb
jle
mov
jle
push
or
lods
imul
in
add
mov
iret
xor
add
and
adc
lods
ret
fcmovu
cwtl
pop
ret
movsl
adc
es
adc
lcall
aas
pop
dec
pop
pusha
mov
inc
in
push
int
or
jp
adc
xchg
or
lahf
filds
scas
stc
leave
std
jno
pop
sbb
xchg
inc
inc
es
push
lods
or
push
mov
pop
mov
adc
dec
ja
pop
popa
test
lahf
mov
test
fucomip
mov
dec
jns
cmpsl
or
cltd
jbe
adc
in
repz
outsb
push
cmpsb
push
push
mov
sub
or
mov
inc
movsl
inc
out
xlat
dec
xor
push
jg
sub
mov
sub
sub
add
cmp
xor
shl
insl
insl
pop
fcmovb
call
cmp
pop
push
push
in
xor
lods
aam
std
xorb
pop
mov
pop
dec
push
fdivr
movsb
aaa
sahf
and
leave
mov
xor
lret
movsl
sahf
dec
scas
jae
push
ret
hlt
sbb
mov
push
iret
mov
jae
sub
shrb
pop
push
test
pusha
push
imul
out
pop
add
cmp
lock
jp
mov
and
xchg
adc
shr
in
jecxz
shr
les
dec
xor
pop
movsl
aam
icebp
sbb
push
xchg
mov
and
out
popf
rcrl
sub
pandn
sub
inc
sub
lahf
out
dec
jmp
bound
mov
push
jbe
outsb
mov
out
jns
mov
xlat
movl
inc
mov
pop
dec
ja
jbe
pop
or
outsl
push
cmp
lods
adc
cwtl
dec
adc
cs
mov
stos
jb
imul
test
mov
out
adc
inc
lss
jge
aaa
fistpll
and
fisubrs
mov
loope
lock
fwait
aas
insb
xchg
scas
jns
gs
inc
sahf
adc
or
add
sub
mov
out
xchg
das
mov
in
subb
push
popa
out
or
das
jae
inc
sbb
pop
push
mov
adc
mov
jb
lods
xchg
push
adc
or
loopne
cli
mov
adcl
or
mov
aas
loopne
movsl
jge
outsb
in
dec
cmp
loope
inc
imul
stc
fisttpll
outsb
push
mov
lret
loopne
add
jg
cmp
or
test
jb
inc
fidivrl
xlat
xchg
lret
arpl
dec
pusha
xchg
push
test
lods
sub
xor
out
or
mov
pushl
fists
sub
add
iret
sbb
adc
fistps
or
test
fisubl
rcrl
sub
loopne
setns
mov
fmuls
mov
pop
stos
enter
mov
es
sbbb
jo
mov
pushf
push
push
or
sub
cmc
aam
lcall
inc
cltd
test
adc
lods
fadd
jb
or
in
fs
movsb
sbb
ret
and
mov
jae
and
ror
cmp
mov
sti
xchg
rcl
push
mov
in
ja
pop
mov
scas
dec
ret
loopne
iret
aad
cmp
inc
lods
ja
dec
psrad
popf
insb
xor
out
fcmovbe
call
sbb
inc
pop
cmp
push
and
adc
sbb
loope
jp
std
rol
imul
iret
sti
push
nop
fistpll
cmc
sahf
dec
mov
mov
pop
cmp
bswap
pop
ss
xchg
inc
mov
dec
pop
gs
jbe
jecxz
movsb
dec
fdivrs
sbb
and
rorl
mov
mov
insl
jnp
xor
adc
aas
cs
out
jns
jbe
enter
adcl
cmc
mov
dec
inc
testb
and
test
inc
pop
xchg
loop
jns
pop
inc
stc
inc
pop
add
ljmp
mov
push
aaa
inc
lock
jne
and
mov
xor
or
lret
scas
xchg
mov
out
mov
push
sub
rorl
rorb
in
cmp
in
lahf
ljmp
lcall
xchg
jecxz
inc
in
xchg
gs
mov
shlb
movsb
cltd
adc
in
popa
out
push
push
adc
lea
push
mov
int
test
add
fimuls
inc
mov
push
clc
fcoml
shlb
xor
scas
mov
out
lea
push
lds
int3
das
pushf
pop
cmc
pop
push
cmp
jns
mov
out
and
dec
jo
sbb
insl
mov
js
rorb
jl
sbb
stos
loop
fwait
insl
pop
loopne
push
push
push
push
xchg
int3
pop
dec
sti
jno
mov
or
cmc
cmp
in
pop
mov
nop
insl
hlt
pop
fcmovb
dec
loopne
faddl
add
movsl
push
push
cmpsl
xorb
lock
xchg
pushf
mov
mov
push
fwait
mov
xchg
mov
lock
mov
sbbl
outsb
mov
cld
test
or
push
shll
int3
ret
outsl
add
inc
int
mov
in
sarb
aas
xchg
push
cmpsb
and
imul
dec
dec
cmp
flds
pusha
xor
out
inc
mov
repnz
ja
mov
mov
lock
iret
push
out
ja
ret
lea
lods
fwait
pop
mov
imul
mov
or
push
add
stc
jecxz
push
sub
jecxz
fcomps
push
mov
and
scas
mov
ret
mov
sbb
sbb
xchg
push
je
int
pusha
push
test
mov
sbb
push
stos
xchg
xchg
push
xchg
cli
stos
or
pop
iret
and
arpl
pop
mov
fldt
mov
xchg
xor
cld
pop
idivb
xchg
aad
aad
int
add
loope
dec
outsl
pop
sub
jb
js
pop
jb
sub
inc
ja
xor
xchg
push
arpl
bound
sti
cmp
in
cmp
popa
cmpsb
jb
add
mov
push
sti
fdiv
outsb
aam
ret
idivb
push
jns
js
repz
mov
shlb
pop
pop
adc
repnz
imul
jo
shl
mov
jo
lea
in
cli
ljmp
int
sbb
divb
pop
cmpsb
and
movsb
loopne
incl
cmpsb
cmpsb
push
ret
pushf
jae
push
inc
les
mov
sub
incb
xlat
push
pop
test
std
cmp
xchg
cmc
stos
jmp
inc
lods
mov
lods
adc
lods
cwtl
pop
les
outsb
mov
rcrl
stc
lods
in
sti
scas
repz
call
inc
imul
out
mov
xchg
sub
adc
ljmp
call
adc
lds
daa
fcoml
mov
hlt
insl
lods
dec
pop
nop
jns
ja
and
inc
lcall
clc
repz
pop
cmpsl
popf
cwtl
repnz
sbb
mov
xchg
out
mov
int3
xor
cmpsb
jge
jb
or
and
dec
sahf
test
sub
jo
fwait
mov
sti
jp
loopne
mov
pop
sarl
pop
test
aaa
and
pop
rolb
mov
stc
out
roll
jne
jnp
test
out
or
mulb
enter
in
daa
nop
movzwl
push
cmp
push
xchg
and
std
jo
push
cmc
mov
addb
add
and
imul
out
push
or
mov
loopne
movsb
mov
aas
imul
sub
cmpsb
mov
fldt
xchg
cld
lfs
or
mov
icebp
cmp
loopne
sbb
sbb
xchg
mov
scas
mov
xchg
shll
popa
and
shrb
es
sbb
popl
daa
mov
mov
ljmp
xlat
jp
rclb
add
outsb
add
fadd
out
and
adc
aaa
xchg
and
shr
cmp
out
cmpsb
dec
push
stos
scas
ja
sbb
stos
jecxz
imul
ss
push
test
xor
lock
mov
mov
xchg
inc
mov
lea
or
adc
mov
xchg
hlt
lds
sbb
pop
fs
jno
jne
xor
xor
lahf
mulb
in
sub
fwait
lcall
mov
test
mov
aas
jge
gs
push
insb
fisttpl
sbb
pop
mov
sbb
pop
or
loopne
das
xor
jno
push
inc
xchg
push
push
ljmp
mov
cltd
cmp
in
movsl
cmp
in
xor
cmpsl
test
push
pop
or
mov
sbb
add
movsl
mov
inc
inc
pop
aam
sbb
dec
push
pushf
mov
movsl
sub
mov
sbb
or
sub
mov
ds
in
mov
aad
or
ja
jmp
push
jmp
movsl
mov
movsb
lahf
fucomi
xor
mov
mov
and
mov
mov
xchg
pop
into
or
fadd
loop
fcoms
sub
push
invd
sbb
push
add
out
cli
jne
sub
mov
cmpsl
sub
jne
incl
adc
xchg
mov
add
inc
sub
push
loopne
adc
jle
jle
divb
pop
push
add
sub
or
jae
fmuls
inc
or
call
shr
je
cmpxchg
sbb
dec
sarl
mov
cltd
jnp
xchg
aaa
sbb
dec
mov
xor
cmpsb
lock
mov
cli
xorl
adc
clc
call
hlt
testl
and
mov
pop
pop
aaa
cli
pop
sub
lods
cltd
mov
shrb
add
lds
inc
fwait
lahf
jno
outsb
jb
outsl
repnz
sbb
cmp
ss
dec
std
fcompl
mov
xchg
imul
and
lock
xor
in
xchg
dec
dec
cltd
push
mov
in
repz
xor
pop
out
call
leave
mov
inc
mov
repnz
add
adc
fstps
daa
add
fwait
lock
jae
ds
mov
pop
in
inc
aaa
jmp
in
int3
mov
mov
notl
iret
jecxz
enter
shl
das
out
aaa
cmpsl
pop
sub
shlb
hlt
outsl
or
cmpsl
popa
test
pusha
roll
inc
dec
jmp
ret
into
sti
dec
cmp
insb
lock
mulb
int
int3
sete
mov
sub
push
mov
fnstsw
cwtl
fdivr
pop
cmp
jg
sar
push
xor
jl
or
push
jnp
sti
jb
pop
sub
sbbb
sbbb
dec
scas
mov
sub
popf
rclb
push
and
sbb
mov
sub
aaa
imul
movsl
movsb
mov
pop
psllq
add
jl
xor
popa
sbb
pop
cltd
sahf
fildll
addb
sub
in
in
movsl
inc
rorl
shll
sbb
aas
lea
jns
mov
cld
dec
jmpw
sub
pop
push
dec
mov
or
mov
and
pop
scas
ja
pop
das
outsl
add
pushf
push
push
stos
stc
dec
adc
mov
insl
inc
xor
orl
inc
sbbl
or
mov
sahf
sbb
xor
mov
and
jae
mov
dec
dec
pop
adc
push
sub
push
aam
out
aad
shrl
add
hlt
or
mov
xor
jnp
xor
push
push
js
aam
scas
lds
jae
add
ja
imul
cmp
or
xchg
jecxz
fcmovu
xor
mov
sub
xor
mull
dec
lret
mov
ds
fstps
pop
aam
lods
push
icebp
jae
loop
inc
xor
xchg
pop
mov
in
in
pop
mov
mov
adc
or
or
pusha
imul
mov
mov
leave
clc
and
xor
inc
out
cmpsl
popa
push
add
jbe
out
rorb
push
sbb
fsubs
je
adc
mov
mov
mov
cmp
dec
cwtl
js
sub
ja
orb
rclb
pop
jle
sbb
dec
xchg
roll
es
xchg
xorl
dec
sti
movsl
sbb
adc
mov
int3
xor
test
iret
push
aaa
test
push
jo
out
inc
pop
jl
rcll
cli
mov
mov
inc
les
fsts
mov
lods
call
adc
bound
pop
xor
sti
sbb
pop
fwait
rorb
add
jno
aas
and
sbb
dec
xchg
fdivr
movsl
pop
pop
mov
jle
cld
jge
add
scas
fs
loopne
dec
and
outsb
mov
outsl
popa
iret
push
mov
add
mov
lret
xor
xor
mov
xchg
mov
cltd
cmp
dec
stos
ja
or
ds
insl
dec
int
mov
ljmp
cltd
pop
add
cltd
push
add
sahf
add
inc
push
mov
inc
jmp
push
dec
lds
jg
jmp
xor
xor
xor
adc
test
into
sbb
js
push
dec
jp
repnz
fists
shlb
push
add
sti
push
imul
lea
and
cmp
mov
or
cltd
stc
out
int3
enter
inc
inc
ret
mov
mov
mov
divl
or
cmc
sub
fldt
lret
xor
neg
push
ret
aad
inc
stos
pop
arpl
popa
or
sbb
mov
fiadds
cmpl
iret
mov
inc
push
fisubrl
addr16
aad
xlat
inc
and
push
rcll
aad
out
sbb
pop
pusha
sub
sbb
cmp
mov
or
xchg
movsl
cwtl
sbb
loopne
es
bound
iret
sbb
mov
or
pop
movsb
arpl
push
pop
push
lods
mov
cmpl
jno
aaa
jno
lods
jno
mov
sub
add
jg
pop
pop
ss
loop
mov
push
rcl
or
out
sub
cmc
ret
ret
adc
and
jecxz
int3
leave
test
dec
xchg
pop
test
out
mov
std
movsb
cltd
fs
hlt
int
sbb
cmc
js
cld
loope
push
pop
and
icebp
in
mov
xchg
sbb
or
push
cmpsl
shrb
fwait
dec
xchg
sbb
loop
add
xlat
or
sbb
scas
push
test
fmul
stos
push
incb
out
dec
cmp
adc
stc
imul
icebp
fwait
inc
and
shl
scas
aam
dec
lahf
push
and
xchg
jne
loopne
mov
mov
scas
xchg
repnz
pusha
mov
stc
jne
lret
mov
jo
sti
cmp
lock
inc
leave
ss
ljmp
arpl
sub
movsl
push
in
pop
jmp
mov
adc
popa
fucomi
mov
and
jne
and
adc
mov
leave
addr16
adc
cs
cmp
ficomps
jg
sub
push
cmp
clc
in
adc
xor
push
addr16
push
sahf
push
cltd
jmp
sbb
mov
dec
sub
jne
inc
movsb
push
stc
jo
xorb
jge
mov
aam
fdiv
and
dec
int
jbe
stos
outsb
push
clc
pop
pop
out
push
mov
nop
sub
cltd
fisubl
add
jae
sub
xor
out
cmpsb
daa
push
inc
in
cmp
outsb
dec
lea
out
and
inc
scas
xchg
cmp
in
push
push
imul
jae
cmc
jl
out
js
dec
aad
jp
cmpsb
pop
dec
in
in
push
push
adc
inc
inc
mov
and
iret
imul
in
pop
jo
mov
mov
inc
mov
inc
into
push
imul
xchg
or
or
jle
push
mov
jle
std
push
lods
cmp
cld
mov
out
mov
dec
dec
subl
adc
fcomps
js
lea
scas
pop
adc
adc
pop
divl
add
scas
jmp
repnz
test
mov
stos
xchg
inc
pushf
mov
and
fcmovne
clc
inc
jns
stos
push
adc
inc
iret
fs
mov
push
mov
sbb
fyl2x
dec
mov
add
loopne
push
outsl
loopne
dec
add
sbb
lods
sti
and
pop
leave
arpl
add
test
adc
daa
xor
int
movsl
hlt
xor
es
xor
scas
pop
add
cmp
aas
je
out
cmpsl
shll
rclb
lock
mov
jnp
pop
inc
sub
or
leavew
fnstsw
mov
jmp
test
sbb
ds
xchg
cs
imul
jle
inc
pop
mov
sub
bound
pop
xor
icebp
cli
push
insb
test
jns
gs
fstl
test
push
fs
mov
pop
lahf
hlt
dec
jb
fsubrp
inc
je
enter
push
fiadds
and
ficoml
push
lock
sub
cmc
push
mov
cmp
mov
xor
sub
lods
jmp
out
call
jb
or
push
std
cmp
xor
mov
lcall
ret
sbb
lcall
cltd
sub
push
aaa
dec
push
dec
pop
mov
xchg
adc
daa
adc
push
cmp
hlt
dec
sahf
add
mov
inc
mov
mov
movsb
clc
ss
sub
or
ja
dec
jl
lret
mov
adc
xor
rclb
pusha
cmp
adc
dec
addl
cmpb
stc
lea
repz
push
adc
std
and
jl
frstor
or
and
xchg
inc
cli
mov
insb
aam
cwtl
data16
repnz
popf
xchg
xor
out
fildl
nop
push
lods
insb
lahf
inc
pusha
ret
test
mov
sub
lret
cltd
jge
orl
push
mov
lcall
insb
call
dec
out
cli
jns
xchg
out
and
es
aad
and
push
out
notl
int3
inc
inc
rolb
adc
or
xchg
xchg
leave
jae,pn
stos
icebp
lahf
jle
sbb
cmp
pushf
pop
add
cltd
push
inc
mov
mov
dec
sbb
push
mov
lret
int
pop
dec
daa
cmp
insl
fisttps
daa
mov
adc
cmp
lahf
in
or
lock
mov
xor
mov
sahf
xor
sbb
jle
in
sahf
in
add
icebp
cmpsl
or
mov
lahf
push
and
mov
pop
es
mov
sub
cld
or
mov
inc
pop
rcrb
mov
mov
sub
lock
mov
xor
lock
test
in
stos
negl
push
cmc
lea
cld
into
mov
push
pop
imul
cs
xchg
add
inc
sbb
scas
decb
mulb
push
gs
shrb
push
push
mov
and
daa
mov
jge
sbb
in
and
frstor
and
pop
mov
cmc
dec
jle
lret
xchg
repnz
leave
or
add
imull
jle
jmp
fs
mov
fnstcw
testl
xchg
lds
push
test
cli
add
sbb
in
shlb
fucom
push
and
dec
jnp
aad
popa
mov
call
push
pop
stos
push
add
pop
setg
jb
ljmp
mov
test
mov
cmp
lods
scas
into
adc
xchg
xchg
in
dec
bound
sti
cmpsl
addr16
fwait
data16
rolb
shlb
and
sarb
cwtl
dec
lods
inc
xor
subl
mov
inc
movsl
mov
insl
xchg
sub
xor
sub
ja
sbb
add
shll
call
xor
pop
mov
jo
jmp
jmp
xchg
and
test
repnz
fisttpl
nop
mov
lock
jge
pop
add
mov
mov
dec
push
ret
aaa
popf
push
add
aad
daa
out
mov
pusha
and
sbb
fisttps
inc
inc
ds
adc
inc
sahf
cmp
mov
push
sbb
mov
xor
jbe
dec
pop
jb
push
push
adc
imul
mull
xchg
dec
call
push
int
jns
sahf
cmc
pop
sahf
xchg
adc
xchg
dec
xor
cmp
push
jp
dec
icebp
push
out
out
adc
mov
sahf
add
leave
fisubrs
xchg
pop
movsb
lds
sub
cltd
rorb
push
add
test
neg
mov
insb
mov
test
xlat
inc
hlt
imul
pop
call
add
lcall
cmp
divl
js
mov
nop
mov
pusha
push
insb
ljmp
mov
out
pop
mov
daa
pop
mov
js
mov
inc
rorb
mov
daa
add
add
fdivs
fbstp
dec
inc
in
imul
mov
insb
sti
xchg
add
int3
pop
add
orl
scas
adc
inc
lds
sub
mov
add
cmp
cmp
popa
pop
std
lcall
or
mulb
and
push
cmpsb
xchg
adc
jl
sti
mov
in
dec
fimuls
loope
out
pop
jmp
inc
mov
in
ja
mov
int
lret
push
insl
pop
push
xor
sbb
scas
dec
adc
sbb
or
inc
ret
faddl
xchg
cld
std
rcrl
mov
test
fists
test
daa
bound
out
mov
outsl
mov
adc
push
ljmp
fisubs
dec
cmpsb
ja
cmp
lods
movsl
icebp
push
data16
cmpsl
pop
outsl
push
and
add
test
cmc
pop
lods
mov
stc
push
std
dec
lods
roll
mov
inc
test
sbb
jne
mov
cmp
aas
fcompl
jmp
inc
mov
mov
push
xchg
cmp
ljmp
or
pop
pop
sbb
jmp
in
and
xchg
mov
pop
sbb
xor
adc
in
push
lods
lret
adc
pop
inc
test
das
xchg
push
mov
xchg
lcall
adcb
and
mov
loope
adc
cmc
adc
jle
cwtl
push
sub
cmpsl
inc
mov
dec
push
cltd
mov
aam
hlt
and
inc
mov
cmp
mov
std
orb
cmp
xchg
cmpb
icebp
imul
ljmp
adc
sahf
ss
mov
jo
shrl
xchg
insb
add
cs
sahf
jge
jecxz
and
fucom
pop
movsb
iret
scas
movsl
jo
inc
inc
jnp
stos
xor
aad
fwait
mov
pop
mov
pop
inc
stos
jb
sub
loop
ja
pop
ss
inc
bound
mov
stos
rcl
push
inc
stc
cmp
cmp
aas
mov
ss
cmp
test
push
cs
inc
cmp
jmp
add
pop
adc
dec
es
loopne
sbb
sub
mov
ret
leave
fwait
dec
push
sbb
arpl
mov
aas
cmpsl
fldl
mov
adc
pop
or
inc
mov
dec
xchg
or
enter
daa
jg
jno
and
jg
int
xchg
mov
movsl
roll
std
or
jne
imul
xchg
and
test
sar
std
or
das
movsb
mulb
xor
mov
mov
data16
nop
push
pop
push
sbbl
imul
les
dec
imul
cmp
nop
jns
out
stos
sbb
push
add
insb
fcmovbe
ljmp
cmpsb
xchg
sub
andl
jb
cmp
out
jge
pop
lret
mov
out
jnp
adc
add
lds
sbb
pop
icebp
sub
push
ja
rorb
mov
or
jmp
test
aaa
aaa
mov
mov
out
dec
sar
cwtl
adc
lret
push
pushf
addl
movsl
enter
push
pop
and
nop
push
or
test
and
mov
dec
mov
call
adc
pop
psllq
dec
jo
fwait
sub
andb
lods
shrb
dec
test
xchg
sub
ss
push
es
shlb
xor
das
mov
les
orb
xor
or
or
cltd
dec
aam
mov
loope
mov
insb
repz
filds
cmpb
or
aas
out
jo
xchg
aas
decb
clc
dec
push
and
push
pop
sub
xor
inc
nop
adc
cmpsb
ljmp
dec
and
std
xchg
daa
jge
mov
subl
xchg
repnz
mov
loopne
adc
add
arpl
jecxz
hlt
addr16
jbe
pushf
push
push
sahf
insl
push
mov
ret
push
mov
das
lock
push
xlat
es
dec
and
fwait
ret
cmp
dec
jmp
and
ss
cld
mov
cmc
andl
lock
mov
jmp
cmpsl
mov
rorb
sub
into
sbb
sub
mov
pop
cld
scas
push
test
enter
sbb
xor
and
add
inc
cmovae
inc
into
inc
cwtl
or
push
xchg
inc
int3
mov
scas
cwtl
movsl
in
mov
push
mov
out
insl
xchg
add
mov
push
lods
jne
mov
dec
add
mov
push
mov
jmp
std
mov
aaa
push
pop
call
pop
lret
pop
shrl
outsl
inc
out
or
push
sbbl
adc
in
int
adc
mov
and
sti
jle
mov
mov
jmp
pop
incl
mov
mov
pop
dec
cmp
add
mov
fdivl
dec
icebp
pop
sub
push
or
or
inc
mov
jnp
xchg
test
fcoms
rcll
rclb
or
dec
cmp
pop
xchg
push
and
popa
inc
das
mov
push
mov
and
add
push
push
ret
dec
dec
pop
es
in
je
sbb
repnz
and
inc
loop
sbb
gs
xor
jg
nop
cmp
sbb
scas
dec
repz
flds
jbe
inc
push
add
xor
test
xchg
adc
int3
clc
xor
adc
adc
dec
iret
daa
jb
mov
push
push
les
mov
lods
shlb
mov
push
mov
or
btr
jbe
mov
fs
out
jns
fwait
pop
mov
push
push
sti
xchg
fcompl
into
xchg
js
dec
mov
push
add
push
dec
xchg
mov
cmp
inc
pushf
mov
cmp
cltd
lcall
stos
adc
mov
mov
fisubs
fiaddl
adc
icebp
dec
pop
bound
pop
xor
test
mov
in
cld
flds
sti
or
pop
lods
loopne
outsl
in
push
nop
mov
mov
lret
call
cmpl
mov
jno
xchg
cmp
sub
inc
pop
pop
add
push
mov
ljmp
pop
jg
mov
je
pusha
shlw
xchg
cmp
sub
aad
mov
adc
je
xlat
pop
pop
push
lods
jl
pop
xchg
jbe
mov
in
jmp
hlt
adc
xchg
inc
fisubs
out
jno
aam
insl
insb
loopne
pusha
fs
ficoms
pop
mov
lods
mov
jb
clc
mov
rcr
jno
or
sbb
inc
in
cwtl
xor
mov
cmpsb
js
xchg
loopne
push
sti
and
push
je
xchg
faddp
pusha
sub
jb
dec
das
mov
push
mov
jmp
jle
loop
fs
popf
sbb
idivl
xchg
das
jae
jg
sub
call
push
xlat
shrl
mov
add
lret
jns
fidivrs
sbb
ret
outsb
xchg
cmp
push
jle
cmp
ds
sbb
rcrb
loop
test
add
out
jno
push
xor
xchg
or
push
sub
in
cmp
or
subl
push
cmp
outsl
pop
pop
bound
lea
cmpl
rcrl
cmpl
sub
mov
shll
pop
jno
movsl
shl
rcr
lahf
xlat
cmp
daa
imul
or
mov
pusha
lret
enter
and
cmp
xor
pop
shll
ffree
scas
jmp
mov
xchg
lret
adc
clc
jns
xor
dec
jmp
or
nop
fs
jmp
inc
bound
cmp
sbb
and
xlat
jne
scas
pop
push
mov
add
xor
xor
or
adc
xchg
shr
leave
and
jo
daa
push
pushf
push
fisubs
xchg
sbb
arpl
insl
fidivs
gs
cmp
lds
mov
pop
cld
ret
inc
adc
mov
cmp
dec
xchg
rcl
mov
xchg
inc
lea
xchg
push
ja
rcrb
push
jne
repz
mov
imul
hlt
sbb
mov
popa
cmpsb
cmc
xor
fxch
sub
pushf
ja
sub
fsubrp
es
and
xchg
pop
mov
mov
stos
pop
xchg
jo
loop
xor
out
pop
arpl
imul
push
xor
sti
jl
fmul
adc
mov
mov
popf
xorb
test
add
stos
push
dec
push
sub
int
loop
addr16
js
sbb
push
dec
hlt
ds
inc
loopne
mov
pop
xor
scas
pop
shll
and
test
outsb
nop
and
sbb
lea
pop
lock
adc
mov
pop
mov
sub
idivl
jle
dec
push
jp
jp
sbb
and
sub
out
jl
adc
cmp
lgs
jge
xorb
and
mov
fidivrl
cmpsl
jbe
movsb
addb
dec
les
push
dec
test
addr16
xlat
popa
mov
lret
xor
cmp
jl
inc
sarb
xor
adc
jnp
aad
subb
nop
dec
mov
jne
in
ret
aas
push
fstps
or
dec
loop
and
jg
add
in
cmp
jle
sub
mov
sub
sub
push
cmpsb
push
mov
shl
ss
fmul
in
jo
stos
outsl
and
roll
shll
cmp
imul
cld
push
lcall
cmpsb
mov
aad
dec
stos
xor
pop
push
push
ljmp
stos
mov
fnstsw
mov
fnstsw
or
fiadds
adc
ljmp
jmp
mulb
out
cld
imul
enter
push
fsubrl
enter
xor
add
es
push
pushl
leave
add
and
es
repz
dec
icebp
dec
outsb
cmpsb
pop
add
push
dec
and
cli
cmp
das
cmpsb
pop
ja
ja
xor
inc
xor
cmp
cs
lret
call
cmp
ret
lret
in
insl
push
and
rorb
ficoml
adc
push
xchg
xchg
dec
mov
jecxz
and
pushf
rcl
dec
xchg
insb
imul
rcrl
mov
mov
cmp
shl
lds
lcall
push
push
sub
aam
jp
stos
aam
xchg
daa
aad
ret
subb
lock
insl
aas
inc
xchg
inc
les
lea
loopne
outsl
adc
dec
ja
sbb
pop
pop
call
pop
mov
js
test
frstor
adc
mov
pop
xlat
cli
xchg
mov
mov
and
hlt
dec
rol
cli
xor
rcll
pushf
test
mov
imul
mov
pop
movsl
or
jae
inc
jbe
mov
xorb
mov
outsl
cmc
sbb
mov
mov
into
out
cmp
sti
sub
sub
lods
and
cmp
push
mov
aam
daa
ja
push
enter
pushf
add
int3
jl
int3
test
pushf
dec
dec
shrb
mov
cmp
rcll
dec
addr16
xor
clc
filds
inc
xchg
mov
mov
loope
jns
pop
fdivs
mov
imul
int
leave
sti
out
mov
ss
andl
lcall
movups
orl
push
cmp
xlat
mov
test
jp
imul
jb
movsb
call
cli
lods
faddl
sub
sti
mov
pop
sahf
jne
xor
push
jp
push
lret
cltd
fdivr
pop
shrb
pop
add
mov
es
adc
dec
in
pop
scas
enter
es
arpl
push
lods
scas
fldl
mov
js
dec
mov
shlb
mov
mov
adc
xchg
add
mov
and
push
and
xchg
mov
leave
dec
push
ficompl
pop
cmp
pop
loope
adc
ret
cmp
pusha
or
mov
mov
xorps
dec
ljmp
push
sti
mov
ja
lret
stc
push
lret
adc
push
push
loope
pusha
sbb
lods
leave
test
xchg
repnz
daa
add
lods
cli
mov
jle
stc
mov
and
movsl
lods
xchg
inc
daa
cmpb
dec
or
mov
lds
dec
decb
stos
int3
lock
pop
rclb
xchg
adc
loope
arpl
out
pop
in
adc
faddl
adc
imul
cmp
push
lcall
testl
lret
rcrl
or
xchg
or
hlt
push
inc
lcall
sub
push
divb
rcll
test
std
sub
mov
inc
enter
je
cli
test
lcall
jp
test
and
mov
mov
mov
or
or
cmc
aas
mov
xor
push
add
mov
imul
imul
xor
and
fcmovu
add
xchg
push
jbe
adc
lret
into
mov
stos
cmp
sti
sub
data16
rol
rolb
icebp
outsl
dec
and
or
les
insb
push
sub
mov
ljmp
xchg
jbe
pop
in
loopne
pop
and
stos
in
mov
xchg
lock
test
inc
lods
push
test
or
or
xor
mov
sti
pop
rolb
pushf
push
je
rdpmc
mov
aad
fs
lcall
pop
dec
pop
or
icebp
pop
xchg
push
hlt
sub
mov
pop
pop
cmp
push
repz
sbb
pop
push
ficompl
cltd
or
dec
adc
stc
mov
movsb
sbb
in
fdivrl
mov
fbstp
sub
mov
jmp
dec
adc
cmpsl
pop
pop
push
inc
inc
sub
jecxz
shlb
dec
inc
inc
mov
je
jae
and
sub
cmp
popf
cmp
cmp
scas
jno
daa
ljmp
jnp
movsb
mov
mov
shlb
mov
imul
xor
scas
push
push
mov
sbb
push
inc
xchg
int3
jo
pop
inc
cmp
mov
pop
jl
insb
push
insl
add
les
dec
adc
imul
jecxz
test
iret
push
sub
and
xchg
and
insb
lds
and
lret
daa
mov
dec
call
fnstsw
sbb
jno
packuswb
jbe
lock
dec
cmp
and
jge
and
arpl
stos
stos
addr16
mov
xchg
pop
sub
lret
or
fcompl
testl
xchg
adc
in
int3
mov
cmp
ja
xchg
sub
in
stos
jmp
lahf
lea
sbbb
lcall
data16
aam
mov
sub
js
sbb
mov
test
test
push
and
lds
insb
ja
mov
adc
mov
xchg
loopne
cmp
and
dec
movl
adc
fstpl
and
mov
lock
lret
mov
loopne
or
ja
mov
dec
addr16
vmwrite
jecxz
je
js
add
test
loope
or
and
jbe
mov
cmpsb
jg
imul
sarb
fs
das
xchg
imul
add
xorb
mov
shlb
dec
lea
inc
cltd
pop
mov
fcoms
cmpsb
lahf
hlt
repz
mov
cwtl
std
adc
inc
mov
pop
in
xchg
push
test
in
cmc
fsubl
add
push
push
mov
ljmp
mov
xchg
pop
leave
fs
test
popf
mov
dec
sub
and
dec
push
or
inc
sub
mov
mov
enter
mov
mov
add
shrb
inc
iret
shrl
push
or
sub
xchg
bound
lods
push
pushf
xor
shll
psrad
in
scas
gs
jae
test
fs
stc
movsb
cwtl
lds
and
pop
mov
push
sahf
inc
aas
and
gs
sbb
pop
jmp
fimuls
subl
and
mov
gs
adc
mov
sbb
cltd
test
xchg
dec
xor
inc
fs
lds
add
jo
not
in
imul
nop
pop
repz
ljmp
mov
sbb
sub
or
jb
shl
sub
mov
inc
inc
stos
sbb
xor
sub
imul
ret
test
sub
xor
cmp
sub
mov
xchg
rorl
pop
mov
jae
out
add
cli
jecxz
nop
inc
sbb
popa
cli
cwtl
mov
push
push
imul
ss
adc
shll
adc
in
cmpsl
test
in
dec
mov
les
in
cmp
roll
shlb
insl
mov
mov
adc
xchg
rcl
mov
ja
movsb
jp
test
and
inc
mov
stos
cld
divl
je
inc
dec
loope
mov
push
push
mov
ret
dec
adc
and
inc
mov
fmull
xor
fidivrs
jecxz
jne
out
stc
test
mov
xchg
inc
push
adc
fwait
daa
mov
add
mov
insl
inc
test
data16
dec
and
jg
and
mov
es
in
aam
cmp
in
or
aad
jae
lahf
fmul
xchg
in
sub
adc
pop
jge
xchg
add
jl
xchg
xor
aad
bound
pop
add
int3
dec
fcomps
mov
or
mov
and
insl
mov
jns
pop
sti
xor
and
xor
out
test
jge
sub
sub
sbb
mov
cli
mov
jg
das
add
ficompl
pop
add
mov
repz
pop
jge
divl
cmp
xor
pushf
hlt
pop
mov
xchg
insb
fstpl
aam
adc
arpl
pop
pop
jle
jno
sub
pop
sbbb
inc
lret
inc
sub
adc
sbb
lods
in
jge
filds
mov
jp
hlt
dec
dec
sub
movsb
add
push
aam
outsl
xor
cmp
test
out
stos
sbb
icebp
lods
and
mov
xor
mov
mull
sub
jmp
out
outsb
cli
jge
fldenv
xor
rep
into
rolb
jmp
test
add
stos
xorb
pop
or
sub
mov
push
call
mov
sub
jp
sbb
mov
in
pop
jle
xchg
push
jl
push
lret
divl
mov
pop
adc
shrb
aam
jp
out
cwtl
loope
pop
xchg
ss
inc
call
jne
sbb
cld
addl
aam
pop
data16
cmc
sub
push
xchg
sbb
idiv
dec
dec
bound
xchg
setnp
xchg
lret
je
rolb
jle
mov
test
jno
repz
ret
mov
pop
sub
cli
push
xlat
push
out
jp
lea
push
ljmp
hlt
test
jecxz
loope
push
hlt
cwtl
orl
pop
sete
pop
dec
mov
cmp
pop
sarb
xchg
add
push
dec
dec
or
fsubr
sub
sbb
xor
add
sub
xor
int
jns
xor
lahf
xlat
ja
inc
push
into
fisttps
jo
dec
test
scas
add
sbb
jecxz
outsb
push
pop
xchg
cmpsl
push
fstpl
psubusw
repz
jne
int3
inc
sbbb
out
mov
push
xor
mov
add
dec
popf
sub
pop
shrl
jne
neg
cmp
sahf
jno
cmp
mov
push
xor
pop
mov
xchg
fstpt
pop
push
pusha
mov
cmp
inc
adc
adc
sub
lea
cmc
stos
lods
pop
jno
inc
mov
idivb
adc
adc
int3
nop
shrl
arpl
clc
cltd
mov
cmpsb
mov
mov
lahf
ja
mov
or
and
orb
lods
roll
pop
ss
cmova
mov
fstps
jae
cmpsl
xchg
ljmp
mov
pusha
in
jo
jns
inc
or
pusha
push
xchg
in
fcmovbe
insb
push
add
outsl
fisttpll
aam
sar
fisttpl
inc
ljmp
out
add
sub
pop
lret
push
xchg
mov
push
loopw
mov
jns
inc
loope
push
dec
add
pop
icebp
loop
jb
sbb
dec
dec
push
popa
sbb
test
cmp
lcall
cltd
hlt
xchg
aaa
sbb
jmp
push
mov
pop
cmp
das
arpl
mov
stos
data16
nop
imul
pop
and
fcomps
mov
in
cli
mov
imul
jae
fsubl
sub
inc
insb
cli
ja
mov
fs
out
dec
nop
pop
pop
sub
hlt
adc
cmp
lods
in
ljmp
call
adc
ret
stos
jb
out
pop
xlat
iret
add
adc
cmc
out
sub
xchg
inc
jo
xor
sbb
pop
jne
sub
jb
xchg
push
xor
aad
xchg
sub
loope
push
sbb
inc
pop
sbb
push
cmpsb
jno
lea
dec
pop
adc
push
sbb
mov
mov
add
andl
and
dec
imul
ret
add
enter
test
xor
sbbl
or
pop
xor
mov
mov
or
and
aad
or
icebp
push
fnsave
mov
rcr
jne
imul
rcrb
ss
call
test
dec
clc
les
and
mov
ja
pop
inc
and
out
mov
adc
fwait
mov
scas
or
xchg
pop
ljmp
in
jmp
lds
sub
dec
push
inc
ret
mov
enter
and
mov
jo
push
into
and
std
scas
aam
aas
loope
inc
icebp
sbb
fcmovbe
and
lock
out
push
hlt
dec
jmp
dec
pop
and
jge
or
ds
inc
sub
mov
sbb
aam
and
adc
dec
xor
mov
movsb
cmpsb
jno
stc
idivl
mov
pop
xchg
sub
je
pop
sbb
out
insl
jg
mov
int
pop
mov
mov
sub
inc
pop
iret
add
scas
sti
shll
insb
jmp
inc
cld
inc
scas
and
ja
test
sub
dec
mov
add
out
jp
add
popf
dec
push
aam
stc
sub
sbb
movsl
pop
push
adc
pusha
out
add
jo
xchg
arpl
mov
clc
fsubrp
sub
negl
shr
adc
inc
es
popf
jmp
decb
and
cmpsl
lea
inc
rorl
inc
push
xchg
xor
lock
adc
mov
test
lcall
scas
push
ss
push
mov
or
mov
jl
jecxz
jmp
ljmp
pushf
imul
aaa
push
mov
adc
and
loope
xor
rcrl
mov
push
cld
rcl
int
repz
jbe
js
insb
icebp
inc
or
pop
rcrl
mov
add
sbb
ds
mov
lret
shl
push
sub
xor
enter
ret
add
mov
fwait
or
pop
or
dec
pop
mov
push
daa
out
xchg
dec
sbb
andl
mov
stos
pushf
shl
pop
cmp
push
mov
cmp
scas
addb
cltd
cmp
adc
es
adc
fdivs
lahf
xchg
popf
push
fucomp
xchg
inc
mov
push
cs
aam
aas
jns
inc
aad
loope
popa
cmp
jb
leave
inc
enter
mov
insb
roll
in
les
test
shrl
pop
pop
xor
pop
fimull
push
xchg
stc
inc
ds
or
jle
sbb
or
sar
dec
mov
xchg
jecxz
in
mov
inc
lods
sbb
mov
jl
xor
add
call
cmc
stos
xchg
int3
arpl
out
test
push
xor
and
cmp
in
in
push
jns
testb
das
xchg
std
add
jae
jmp
dec
or
in
mov
imul
mov
adc
sub
arpl
or
iret
loop
lret
leave
leave
mov
cmc
jns
jnp
jg
sub
pop
test
push
imul
mov
mov
xchg
sub
cmp
add
test
ret
test
pusha
out
pop
fmul
and
mov
xchg
cli
arpl
dec
sbb
fldenv
push
idivb
and
movsl
sti
in
pusha
cmp
loop
inc
add
rclb
jno
pop
lock
out
out
fsubrl
imul
loop
pop
xor
jecxz
test
sub
mov
mov
insb
push
mov
nop
lods
mov
and
mov
inc
shlb
mov
fisubrl
add
cld
outsb
stos
or
sti
push
add
or
mov
sbb
mov
das
in
inc
ds
push
push
adc
push
and
repz
mov
mov
sub
adc
sub
dec
shrb
add
lahf
sub
lret
mov
pop
lods
inc
sub
or
pop
mov
mov
std
arpl
negb
mov
push
pop
push
fs
test
jbe
mov
inc
cmpsl
ds
aad
lods
test
or
daa
dec
cltd
jecxz
std
fs
mov
loopne
mov
shlb
inc
inc
je
and
pushf
rolb
scas
cmp
mov
pop
mov
cli
and
js
bound
cli
cli
xchg
and
push
jb
jne
push
out
sbb
and
xor
pop
jl
stc
jecxz
cmp
cmp
sbb
sub
addr16
loop
xchg
add
pop
and
cld
loopne
fwait
mov
sahf
inc
fsubl
xchg
fcmovnu
jb
add
add
in
int3
push
mov
jmp
lcall
pop
clc
cmp
lds
push
and
fnstcw
pop
add
xchg
repnz
stc
pop
add
leave
bswap
arpl
ret
lcall
test
xor
pop
mov
outsl
data16
add
or
mov
test
in
and
ret
push
xor
lods
mov
jle
jle
push
mov
sbb
push
cmp
je
xchg
test
mov
mov
pop
inc
sub
fdivrl
in
mov
icebp
inc
movsl
mov
adc
cmp
popa
dec
popf
ja
addl
in
mov
jb
adc
jo
inc
dec
mov
gs
scas
daa
rcll
mov
mov
aam
into
sbb
push
imul
test
push
xor
xchg
add
nop
sbb
and
negl
or
popa
loopne
mov
and
add
gs
cmpl
xchg
mov
mov
frstor
cmpsl
jg
cwtl
and
insl
xor
js
ljmp
lea
push
aam
push
jmp
jnp
jg
out
pop
out
sbb
fisubrl
push
cmp
pop
jmp
lret
mov
bswap
mov
mov
cmp
xor
jo
push
mov
push
daa
inc
fdivrs
mov
movsb
fsubs
in
scas
pop
inc
lea
out
ja
jo
sub
and
std
sbb
mov
stc
pop
notb
fmulp
out
idivl
mov
add
test
cltd
dec
dec
insl
ficompl
bound
mov
xchg
fwait
or
popa
lods
lcall
sbb
adc
ja
inc
push
cmpsb
les
xchg
xor
adc
mov
aas
push
enter
cmpb
inc
std
sub
movsb
sbb
xchg
setp
cmp
outsb
jle
jns
popa
dec
adc
test
mov
jb
pop
arpl
dec
add
icebp
gs
insb
sbb
jo
sbb
imul
xlat
inc
and
rorb
pusha
ljmp
arpl
mov
test
lods
pop
cs
hlt
enter
or
push
pop
push
xchg
roll
lods
jbe
inc
shrb
lds
valignq
neg
push
fwait
mov
fsub
jnp
test
dec
jecxz
push
sub
adc
dec
aas
sbb
int
and
and
cs
test
mov
dec
out
rolb
xlat
lcall
pop
adc
shll
and
shll
ficoms
dec
movsl
or
arpl
pop
rcl
push
cmp
xchg
mov
adc
mov
inc
mov
je
in
dec
jge
jo
push
pop
cmpsb
cmc
sub
sbb
or
push
jp
inc
or
daa
and
or
jp
ja
in
pop
jecxz
sbb
lds
les
xor
insl
jns
addl
mov
data16
jns
cmp
xlat
sbb
jne
sbb
pop
inc
inc
cli
xor
jne
mov
je
sti
filds
ss
ds
dec
enter
or
xchg
jns
mov
adc
or
dec
out
add
outsl
imulb
inc
test
adc
cld
mov
adc
adc
loope
test
cmpb
pop
sub
testb
nop
mov
test
and
sarl
fwait
fs
daa
rcll
aaa
dec
ds
xor
lods
cmc
fs
mov
xchg
ss
inc
mov
mov
xchg
cmp
test
popa
mov
popf
xchg
xchg
and
aad
pop
xchg
shll
scas
mov
inc
and
roll
adc
or
sub
xor
sbb
pushf
xchg
mov
mov
inc
add
in
adc
mov
pop
cli
cmpsb
or
in
cs
mov
mov
sub
addl
orl
idivl
mov
dec
imul
stos
daa
jae
dec
cmp
scas
fnstcw
xor
test
add
mov
or
xor
jo
scas
mov
clc
mov
ret
mov
mov
push
jg
pop
push
xchg
test
cltd
cmpsl
popf
dec
stc
addr16
lea
fimuls
jge
cwtl
mov
mov
stos
and
mov
fisubl
outsb
cmp
mov
mov
mov
xchg
and
mov
add
sbb
pusha
jmp
xor
gs
push
inc
push
stos
in
int
cltd
xchg
addb
mov
push
movsb
mov
jns
stos
lds
adc
push
xor
inc
mov
adcb
lcall
out
jmp
mov
nop
xchg
mov
sub
and
fstps
out
pop
enter
stos
jb
rep
push
and
adc
xchg
insl
ljmp
rcrb
xchg
fstl
push
adc
pop
andb
jbe
dec
xchg
or
push
jp
out
sub
mov
in
mov
adc
jg
fwait
mov
jge
mov
sub
pop
push
or
sub
lods
add
in
test
negb
cmp
push
fwait
and
ja
lahf
jmp
xchg
jge
push
pop
leave
test
inc
pop
xor
mov
mov
loop
stos
and
lret
insl
cmc
out
mov
das
or
sbb
gs
or
pop
jg
or
jae
dec
loopne
daa
pop
jge
inc
inc
and
lods
and
jg
jg
mov
lock
inc
mov
insl
and
add
jp
dec
xchg
fcmovnu
push
adc
mov
ljmp
adc
shrb
pushf
clc
mov
hlt
sub
imul
dec
pop
pop
frstor
jno
cmp
xor
dec
adcl
and
adc
cwtl
cwtl
in
cmpl
xchg
mov
das
and
jo
sub
mov
push
lret
cwtl
dec
test
cs
out
scas
cmpsl
and
lret
cmp
cltd
lock
pop
mov
jle
and
fidivrs
xor
sahf
dec
icebp
ret
inc
iret
xor
lret
jp
scas
pop
lcall
das
xchg
jecxz
or
and
cmc
sbb
addr16
mov
xor
add
push
loopne
cltd
sarl
movsl
movsl
push
dec
or
mov
pop
pushf
loop
mov
or
sub
push
pushf
popf
lret
add
aaa
dec
xchg
xor
jo
arpl
adc
lods
adc
lea
test
dec
ds
dec
inc
push
cmp
stc
into
jo
sbb
dec
xchg
divl
add
fisubrl
andb
fidivrs
jle
jl
lods
mov
or
lods
mov
les
sub
mov
push
icebp
jo
mov
cmp
push
pop
xchg
mov
dec
or
pusha
adc
repz
jnp
popa
lretw
loop
in
jmp
ret
pop
push
push
ret
or
in
int
pushf
xor
dec
or
adc
cwtl
test
pop
shl
pop
add
sbb
imul
fisttpll
addl
rcrb
or
push
inc
sub
dec
mov
mov
das
loop
out
nop
jmp
scas
sub
bound
adc
shr
insl
idivb
mov
inc
adc
fucompp
mov
cmpl
inc
out
stos
pusha
sbb
out
scas
lds
int
mov
in
imul
mov
imul
rcl
int3
xor
popa
xchg
mov
iret
int3
dec
inc
mov
in
das
daa
pop
mov
pop
mov
push
push
imul
cmpsl
icebp
mov
imul
pusha
mov
lret
push
cmp
mov
pop
jbe
cmp
rcrl
sub
std
sbb
xor
fimull
push
test
daa
mov
sbb
inc
adc
sbb
jbe
push
dec
sub
cmp
xchg
or
fs
or
insb
xchg
and
inc
jle
adc
lea
ja,pt
fdivl
cmpsl
cmp
xchg
xchg
jecxz
out
subl
out
mov
scas
incb
add
inc
into
iret
sub
and
scas
sti
push
test
sbb
inc
scas
push
push
mov
scas
mov
mov
fdivl
sahf
inc
pop
inc
outsl
push
cwtl
mov
popf
imul
fs
inc
lds
xor
cltd
push
and
fyl2xp1
nop
in
scas
push
imulb
outsb
cmc
xor
fnstenv
mov
sbb
xchg
ja
sub
les
pop
shrb
xorl
xor
xor
push
jae
in
xchg
les
cmp
push
scas
sub
ds
xor
mov
adc
mov
cli
xor
mov
and
pop
pop
pop
ret
repnz
scas
je
out
inc
in
shll
fmul
testl
sub
das
xorl
in
dec
xor
popl
dec
sarb
mov
ds
mov
or
fidivl
jl
mov
mov
rcrl
inc
xor
pop
imul
mov
push
lea
push
sbb
cmp
loop
sub
in
jb
mov
out
js
adc
les
sbb
insl
pop
lea
in
pop
dec
mov
xor
cwtl
divl
rol
xchg
sub
mov
push
add
dec
sub
add
out
loope
push
pop
jae
fbstp
fisubrs
and
scas
sbbl
rcll
sti
rolb
insl
stc
xchg
xlat
pop
push
in
or
cmp
outsb
xchg
pop
inc
mov
dec
inc
dec
dec
loope
or
pop
cmp
mov
inc
mov
fmull
sahf
push
fcomip
adc
or
js
cs
jl
in
jge
inc
inc
dec
aaa
roll
or
sbb
jae
pop
aam
rcrl
movsb
jle
iret
cmp
je
mov
xchg
push
or
ss
pop
out
insb
lcall
test
test
jmp
icebp
sub
lahf
idivb
mov
sahf
push
and
insb
jnp
je
xorb
dec
jp
inc
dec
fbld
sub
jns
ficompl
sub
jp
gs
imul
xchg
mov
lret
imul
and
add
or
out
lods
nop
sub
xlat
arpl
lock
fiaddl
das
in
add
das
and
xadd
subb
out
adc
lds
out
pop
repnz
stos
aam
imul
fdivs
adc
or
add
xchg
mov
fstp
dec
sbb
sbb
insb
aad
or
add
loopne
cmp
push
pushf
dec
mov
jae
mov
mov
pop
cmp
outsl
enter
dec
int3
dec
cmp
xchg
jns
push
jmp
enter
int
enter
inc
arpl
int
movsb
pop
leave
cmp
cmp
in
push
pusha
dec
and
mov
lahf
ret
pop
aaa
mov
fnsave
test
push
decl
cmp
rorl
cld
ljmp
lods
in
insl
lods
cld
jg
push
push
jg
repnz
inc
inc
mov
add
cs
pushf
sub
pushf
stc
and
inc
pop
adc
loopne
and
out
mov
mov
test
or
and
test
roll
mov
mov
data16
lcall
xor
insb
test
shll
dec
repnz
pop
out
stc
push
les
push
fdivp
btc
xorb
cmpl
incb
mov
pop
dec
test
pop
dec
add
int3
mov
cs
testb
jmp
xchg
pop
mov
test
icebp
push
fsubr
daa
ds
repnz
cmp
pop
mov
mov
shll
push
dec
push
pop
jle
inc
sub
out
movsl
scas
jne
xchg
aaa
test
sbb
cmp
jbe
aas
xor
fnsave
loope
xor
shll
jg
rclb
pop
xlat
dec
inc
mull
es
mov
jo
fs
push
stos
or
mov
iret
fmul
push
fimull
push
lcall
sub
loope
sbb
cmc
or
push
xor
jns
mov
mov
mov
rorb
sahf
sub
jbe
sub
add
dec
push
lret
cmp
inc
mov
insl
rcrl
jbe
sahf
out
int
and
xchg
daa
mov
push
xor
sti
add
icebp
mov
les
mov
lcall
das
mov
and
fistpll
adc
dec
push
sbb
inc
mov
and
rol
ds
daa
ja
stc
xchg
add
mov
fidivrl
sahf
and
vmwrite
js
pop
mov
hlt
and
test
cwtl
jne
pusha
imulb
nop
adc
leave
insl
inc
cmp
push
rcl
jbe
sbb
das
leave
hlt
push
gs
fsts
outsl
nop
sahf
je
std
repnz
rorl
adc
push
dec
jecxz
ljmp
pop
push
in
mov
cli
push
dec
adc
push
cltd
lret
inc
xchg
cmpsb
pop
mov
pop
jp
mov
sub
inc
ja
cmp
pop
cmp
push
dec
pushl
rcrl
dec
jecxz
aas
sub
dec
stc
push
int3
jo
sbb
loop
xchg
add
mov
jnp
or
pop
lret
mov
pushf
mov
jnp
add
gs
test
out
movsl
clc
pop
addr16
xchg
add
sysret
cli
mov
out
jnp
dec
dec
inc
ror
outsl
xor
std
shll
dec
insb
mov
cs
cmc
shll
push
movsl
cmovge
lods
xchg
cld
or
lret
mov
dec
fnstenv
imul
jae
call
movsl
xchg
sub
adc
fdivp
cli
out
push
fstl
or
pop
aaa
sbb
lcall
pavgb
nop
lock
int3
adc
in
xchg
add
jno
and
or
inc
xchg
or
mov
dec
inc
pop
cltd
pop
mov
sub
xchg
data16
in
stos
jns
mov
pushf
cmc
dec
icebp
pushf
inc
push
pop
xchg
push
scas
loope
dec
ret
lods
fwait
js
mov
sub
jp
or
sbb
int
mov
movsl
call
addr16
mov
out
and
addr16
push
and
sbb
mov
cmp
ret
les
pop
pop
push
or
shlb
and
dec
stc
add
loope
adc
lret
push
mov
sub
punpckhdq
xor
add
imul
test
vmread
mov
pop
faddl
pop
cmp
and
fldenv
mov
rcl
fwait
pusha
insl
lcall
xor
and
and
mov
sbb
dec
mov
lods
les
cld
mov
insb
cltd
pop
jno
mov
shrl
inc
cmc
lock
repnz
sub
inc
out
ret
fstp
pop
and
fists
das
add
mov
addb
mov
imul
xchg
cmpsl
lcall
enter
lret
clc
sbbl
iret
inc
daa
enter
cli
mov
arpl
xor
add
stos
add
mov
add
inc
sbb
inc
mov
jl
pop
mov
inc
leave
push
inc
fidivs
aad
inc
and
or
ret
push
push
notw
cmp
mov
stos
ja
push
xor
dec
in
or
lahf
test
push
addr16
notl
out
mov
jmp
push
pop
aas
cmp
mov
pusha
push
cmp
fdiv
jns
add
movsl
repz
sbb
popf
mov
outsl
or
imul
aas
xchg
pusha
mov
fs
clc
mov
jge
movsl
scas
push
movsl
adcl
mov
push
mov
pop
loope
pop
movl
pop
mov
mov
pop
ljmp
lcall
mov
lea
xchg
add
gs
pop
jle
xchg
mov
sahf
jae
xor
inc
cltd
stos
loopne
shlb
cmp
stos
movsb
sarl
pop
xchg
ret
cmpsb
jmp
inc
jecxz
repz
mov
dec
and
insl
push
dec
in
pop
stc
mov
call
sbb
adc
shll
sti
dec
inc
dec
mov
mov
xchg
xchg
pop
mov
push
dec
pop
xor
xchg
add
repz
cltd
xor
mov
sbb
mov
xor
adc
fisttpll
mov
sub
mov
dec
mull
jl
into
iret
jge
in
sarl
mov
add
inc
xlat
stos
test
pop
dec
pop
jl
aaa
aas
movl
inc
xchg
test
imul
rcll
negb
mov
pop
imul
fld
or
gs
add
dec
xchg
jecxz
shrl
pop
push
pop
repz
outsl
sub
aas
and
roll
into
loope
out
in
ret
ficompl
add
ret
sub
icebp
inc
sub
push
fistps
enter
aaa
inc
cmp
jns
mov
mov
jo
and
movsb
imul
inc
xor
pop
into
sbb
hlt
push
dec
test
fsubs
push
mov
shlb
stos
js
pop
cmp
les
mov
push
push
adc
pop
and
inc
mov
popf
cmp
jae
leave
adc
xchg
xchg
xchg
mov
xchg
push
jmp
pushf
mov
imul
and
jp
jno
pusha
or
push
and
mov
pop
adc
movsl
into
mov
jecxz
push
inc
mov
add
inc
rcll
lock
inc
insl
jge
bt
iret
popa
mov
mov
addr16
fstpl
cmc
mov
popf
rcrb
dec
xorb
sbb
push
addr16
xchg
clc
sahf
jge
push
rcrl
cwtl
adc
repz
xor
cwtd
das
xchg
inc
adc
fcmovne
and
cmc
clc
fistpll
addl
rcr
jae
push
js
inc
addr16
lret
jne
jno
mov
lret
pop
adc
inc
jge
mov
sbb
or
cmp
les
mov
repnz
jo
inc
data16
mov
xchg
cmp
inc
fs
jp
js
test
aam
arpl
cmp
xchg
sbb
adc
mov
jge
inc
fists
inc
nop
out
hlt
jg
test
jae
mov
ljmp
ljmp
xchg
jo
movsb
sbb
fisttpl
shrl
andl
scas
loope
mov
xchg
pop
stos
sub
and
cli
dec
sahf
dec
add
adc
push
notl
and
aaa
add
and
sbb
int3
pop
or
imul
or
jno
es
int3
sahf
push
sti
cli
popf
scas
mov
cmp
mov
pusha
clc
ret
sub
ljmp
xchg
sub
dec
cmp
adc
mov
sbb
cmp
sub
mov
pop
imul
pop
cmp
js
pop
in
and
push
cmp
aaa
mov
jmp
xor
jge
shlb
sub
push
jg
cmp
pop
and
pop
mov
bound
push
mov
aaa
push
xlat
mov
jmp
mov
mov
das
int3
lods
mov
xchg
es
xor
mov
pop
jb
cmp
dec
mov
icebp
sub
addr16
add
mov
aaa
sbb
dec
inc
inc
mov
pop
pop
and
enter
je
nop
sub
mov
rcrl
cmp
sbb
mov
or
jle
jb
adc
or
ljmp
pop
out
inc
out
dec
push
fnstsw
adc
xchg
dec
mov
cli
lods
jle
jno
ret
les
xchg
movsb
inc
pop
cmp
fdivr
cmp
leave
pop
in
mul
shrl
imul
aas
and
test
dec
xchg
jno
jo
cmc
pop
inc
xchg
mov
sti
xchg
adcl
mov
jmp
push
popa
int
cli
lea
mov
sar
add
aam
inc
mov
add
pop
mov
movsl
mov
xor
cmp
mov
scas
pop
leave
mov
and
adc
sbb
adc
cmp
rcr
fstl
mov
movsl
cltd
fidivs
or
icebp
mov
xchg
dec
xor
mov
rol
ret
sbb
and
loope
iret
pop
mov
out
sub
lcall
iret
cmp
ret
les
mov
mov
fisttpll
jo
daa
jb
lcall
cmp
loopne
mov
inc
mov
sub
les
sub
xchg
pusha
cs
testl
mov
inc
lods
jnp
imul
push
in
mov
adc
mov
pop
mov
pop
cmp
pop
mov
mov
daa
mov
cmp
enter
sbb
add
mov
push
jp
fsubrp
adc
push
enter
jmp
addb
cmp
movsl
adc
and
das
xor
mov
cmc
inc
inc
out
inc
sar
and
cwtl
aad
out
sub
inc
sbb
jo
sbb
aad
cmp
add
sbb
adc
push
into
movsl
xor
and
mov
jbe
cmp
or
je
jnp
fldcw
stc
movsb
sbb
xlat
ret
sub
stos
cmpsb
sbb
lret
popa
cmp
fsubs
loop
dec
movsl
mov
jns
fnstsw
fsubs
iret
insb
xchg
shrd
jbe
test
xor
mov
ljmp
iret
loopne
pop
inc
mov
pop
adc
jmp
sbb
in
in
ds
imul
out
mov
xlat
jae
pop
das
js
cmc
pop
arpl
loope
mov
inc
mov
mov
push
dec
mov
cmpsb
push
aam
mov
push
pop
imul
adc
mov
push
fs
sub
push
adc
mov
xor
push
mov
lods
data16
sub
jmp
push
add
imul
sub
pusha
fisttps
scas
incw
or
xor
outsl
btr
dec
loope
dec
je
cmp
and
or
sub
dec
out
and
sbb
icebp
xchg
sarl
stos
jl
push
inc
cmc
inc
cmp
lcall
cld
inc
repz
pop
xor
push
ror
pusha
rorl
scas
jne
hlt
jne
stos
in
lcall
in
pusha
mov
adc
jl
fdivs
dec
insb
push
or
or
lahf
and
mov
add
sbb
xchg
in
fnstcw
stc
clc
mov
jl
daa
popf
lret
les
jl
hlt
cmc
lock
test
push
icebp
cmp
int
subb
loopne
sub
xlat
sbb
sbb
mov
sar
jp
psubq
cld
xchg
arpl
out
nop
and
xchg
push
and
and
sarl
test
mov
add
in
movsb
sahf
push
push
cmpsl
out
dec
pop
pop
in
repz
xchg
cmp
xchg
mov
push
lock
insb
gs
lret
or
mov
mov
loopne
ret
xchg
push
push
fimull
insl
sub
repnz
mov
cmc
push
mov
mov
lods
lret
nop
das
and
xor
rcrb
sub
popf
rorl
and
jecxz
mov
ret
xchg
inc
and
xor
fwait
ror
xchg
mov
xor
mov
insb
sub
in
mov
aam
and
add
lea
jge
dec
pop
inc
ds
add
dec
push
js
lods
js
cmc
jmp
pop
mov
push
loop
mov
out
jmp
mulb
lret
dec
ja
sub
xor
xorl
ss
push
cs
cltd
sbb
mov
bound
bound
sarl
cmp
xchg
push
or
cltd
ret
shlb
and
xor
aaa
sub
mov
adc
fs
xchg
adc
ss
std
mov
add
cmp
adc
jae
inc
adc
adc
cwtl
stos
push
jmp
cmp
xlat
in
jo
sub
jo
mov
add
jnp
test
mov
adc
sub
test
int3
push
mov
rorb
aad
ss
pop
lods
cmc
aam
addr16
push
jno
pop
enter
clc
xchg
add
fstl
sbbb
les
es
push
xor
or
xchg
push
or
push
mov
xor
mov
xchg
stos
or
ret
outsb
mov
mov
sub
aam
push
push
xor
pop
pushf
mov
in
cli
dec
inc
rclb
stos
mov
sub
movsb
dec
cmp
push
xchg
push
sbb
cmp
lods
xchg
or
data16
ljmp
xchg
adc
into
out
jle
fstps
and
or
cli
push
cmp
jmp
xor
sbbl
push
xchg
or
jmp
dec
fimuls
and
sbb
call
push
roll
sbb
jp
and
fbld
loop
mov
rclb
rolb
lret
adc
das
inc
inc
stc
adc
sbb
sbb
mov
outsb
sbb
pusha
aas
push
fdivp
shlb
sbb
fldcw
pop
xor
fldcw
and
and
push
cmpsb
lcall
push
pop
lret
daa
in
dec
pop
jne
into
inc
cmp
cmp
aas
cwtl
lret
dec
jge
adc
cmp
adc
sub
clc
lds
sub
sub
mov
aad
dec
ds
inc
test
push
jmp
test
stc
stc
inc
adc
jmp
imulb
pop
stc
push
out
mov
call
sub
testb
mov
imul
sub
cld
stos
push
in
stos
sbb
adc
adc
cmc
in
es
xor
inc
pop
gs
les
sbb
mov
clc
int
in
dec
leave
leave
test
rcrl
sub
cmp
mov
cs
cmp
out
aam
mov
aas
push
sub
push
mov
inc
fldt
les
mov
jo
in
loope
cmpsb
lods
aad
push
sbb
mov
mov
enter
ret
adc
adc
std
sub
or
dec
fs
xor
out
and
push
sbb
inc
ret
xchg
pop
std
or
lock
xor
aaa
out
subb
push
movsl
test
mov
jp
jge
push
nop
and
jp
mov
dec
sbb
mov
mov
push
mov
adc
sbb
das
mov
xor
jecxz
adc
add
insb
fcoms
jecxz
jle
xchg
int3
sbb
add
imul
push
lods
inc
adcb
cmp
and
aam
adc
add
jbe
mov
sbb
jl
xchg
mov
sub
jo
cmpsb
mov
imul
jno
sub
mov
data16
addb
je
roll
or
jae
mov
xor
lock
xor
mov
adc
mov
pop
mov
fnstsw
rcrb
or
in
and
popf
xor
push
push
cmp
imul
add
sub
scas
or
sbb
and
cmc
sbb
imul
cmp
popw
mulb
insb
xorb
cmc
lods
enter
repnz
mov
or
int
imul
aam
lds
push
ss
test
xor
aad
xchg
mov
lret
dec
in
pop
gs
fldz
sub
lods
rorb
stos
mov
mov
jae
mov
inc
cmp
sbb
mov
dec
mov
fsubrs
cmp
lea
cmpsb
xor
stc
mov
les
js
lock
add
out
sbb
sub
je
sbb
daa
xchg
or
jg
xchg
lds
add
stc
jo
dec
sub
call
ljmp
mov
adc
mov
cltd
mov
aas
shufps
and
insb
stos
cld
addr16
loopne
mov
cs
dec
mov
out
leave
jnp
test
cmp
out
add
pop
unpcklps
push
push
test
inc
mov
out
pop
add
icebp
sub
sub
das
inc
call
stos
xchg
jmp
sub
cmc
std
jo
out
or
inc
cli
aam
push
out
cmp
mov
fcmove
in
mov
add
dec
fcomps
imull
jecxz
cltd
cmp
mov
sub
sub
adc
cmp
mov
adc
loopne
fwait
inc
xchg
inc
movsl
rcrb
hlt
or
dec
scas
in
or
fs
test
hlt
dec
aaa
push
cmp
pop
jge
and
inc
or
jnp
cmp
inc
scas
lods
cmpb
in
inc
loopne
sub
xlat
or
adc
sbb
push
and
pop
adc
or
jae
pop
jnp
or
jne
and
jno
or
mov
mov
out
popa
movl
mov
scas
push
int3
pop
sar
lcall
fisttpll
out
mov
adc
inc
adc
ljmp
cwtl
andb
xor
frstor
mov
sub
adc
rol
addl
jns
adc
insb
cmp
or
push
ss
pop
in
insl
rep
inc
stos
clc
jle
in
outsl
out
mov
roll
andl
xchg
aas
fldenv
cs
dec
mov
ljmp
sbb
push
lds
or
aam
mov
in
jbe
mov
les
mov
cld
movsl
dec
xchg
lret
cmpsb
addr16
cmp
aas
cltd
push
movsb
jo
sub
lahf
mov
nop
push
popa
fldt
mov
fldenv
adc
fnstenv
adc
cmpsl
sti
jno
lret
inc
adc
es
adc
out
outsb
dec
fnsave
ud2
sbb
stos
and
xor
push
cmp
xor
jl
dec
idivb
adc
or
mov
add
cld
xchg
add
das
movsl
and
jg
movsl
cs
mov
shl
add
rcrl
sti
clc
jg
jmp
jnp
arpl
jg
dec
jmp
incl
mov
xlat
jb
popw
imul
repz
loopne
enter
lock
mov
popf
jne
cmpsl
sbb
add
int
sub
xor
sbb
lds
mov
mov
jne
arpl
sub
stos
out
je
push
fcompl
cmc
inc
cmp
out
out
subb
fs
or
cmp
dec
push
lcall
xchg
loope
gs
in
mov
mov
fs
rcl
xor
lcall
mov
fistpll
inc
sbb
jle
xor
mov
out
adc
icebp
fdivs
mov
call
pusha
push
inc
jl
popf
adc
push
xor
push
cmp
jmp
dec
cmpsl
jecxz
pusha
lock
mov
popa
or
arpl
xchg
mov
ret
data16
mov
cmp
adc
mov
addr16
push
mov
pushf
sbb
sarl
add
arpl
vpminsw
mov
shrl
stos
cmc
jl
mov
xchg
mov
xchg
ljmp
cmp
sbb
inc
cmp
mov
pshufw
jmp
dec
ret
pop
in
mov
xchg
imul
shll
shll
outsb
cld
adc
cmp
test
dec
push
mov
xor
ficompl
jmp
mov
or
xor
mov
push
sbb
pop
xor
stos
push
insb
scas
push
std
int3
popa
and
add
mov
sbb
cmpsb
push
cli
in
inc
sub
xor
add
sub
ficoml
sahf
stos
pop
inc
lods
leave
imul
mov
pop
outsb
inc
inc
mov
sbb
mov
pop
xchg
js
pop
lret
add
sahf
cmp
or
mov
add
daa
out
mov
mov
add
out
push
sub
push
cmpsb
fwait
pop
out
lods
adc
pop
and
mov
ds
fdivr
or
pop
mov
lea
in
add
test
mov
push
lods
loopne
dec
xchg
popf
inc
bound
push
ja
mov
push
jne
cmp
jg
push
push
mov
push
test
add
ret
push
imul
push
jo
popa
add
insb
std
dec
pop
pop
push
pop
aam
push
cmp
sub
or
sahf
push
std
call
popa
lock
fnsetpm(287
jg
or
adc
fwait
mov
bound
mov
imul
out
sarb
mov
cmp
ficoml
sbb
sbb
lahf
mov
imul
xchg
pop
movsb
sub
sbb
and
dec
rcrl
jmp
mov
fmulp
and
sbb
adc
test
imul
xchg
je
sub
lods
repnz
mov
xchg
mov
das
clc
jg
mov
jb
mov
cmpsb
lcall
pushw
aam
sbb
lods
int3
lods
jbe
loope
mov
ret
adc
cmp
mov
lret
lods
out
jns
sub
add
fwait
sbb
out
cmpsb
roll
mov
xor
imul
dec
push
push
popf
jno
pop
xchg
fbld
pop
adc
jle
fisttpll
pop
imul
sahf
pop
call
pop
aad
subl
adc
sbb
test
xor
outsb
inc
push
test
loop
pop
dec
pushf
sbb
xor
xchg
xorl
sarl
ss
aas
dec
cmp
push
scas
add
sti
mov
mov
xchg
xor
push
bound
pusha
inc
in
sbb
fidivrs
mov
leave
mov
sub
inc
pushf
xchg
mov
pop
lods
inc
sub
mov
popa
lods
rcrl
insl
sub
fucom
xor
push
add
ja
mov
and
mov
jae
ds
push
and
jno
divb
xor
int3
fcomip
mov
xchg
jmp
adc
out
sarl
pop
xchg
dec
push
mov
pop
fimuls
sub
and
or
jge
xor
adc
push
or
xchg
cmp
adc
dec
movsb
mov
cwtl
xor
imul
sub
xchg
pop
insb
push
jg
xorb
push
push
pushf
ret
mov
icebp
sub
add
cs
lods
jecxz
add
and
clc
xor
pop
lcall
test
shl
add
sub
xchg
or
sub
cmp
push
lret
sub
mov
jno
push
xor
scas
andl
sub
jbe
push
iret
js
dec
sub
ja
xchg
imul
stc
test
inc
movsb
sub
out
sbb
lods
push
mov
sbb
or
outsb
mov
mov
rcl
rorb
mov
xchg
add
daa
shl
sbb
bsr
push
sahf
int
cmp
sub
vpcmpeqw
mov
in
das
hlt
cltd
clc
sbb
mov
cmpsb
mov
add
pop
cmp
aaa
xchg
add
cs
aaa
ficomps
ljmp
sbb
aaa
shrl
mov
dec
mov
imul
add
xor
jo
lock
push
call
sub
nop
std
mov
sbbb
loop
mov
jmp
and
daa
push
mov
pop
mov
mov
test
push
push
dec
cmpsl
mov
push
xor
sbb
lahf
jp
cmp
insb
in
dec
xor
push
mov
faddl
ret
int3
les
imul
ficomps
xor
pusha
ret
jge
fimull
fldenv
fwait
fisubs
dec
add
imulb
ja
inc
ds
icebp
push
dec
pop
loop
cvtdq2ps
mov
xlat
call
andb
adc
int
gs
mov
ds
pop
cmp
jbe
sub
fcomps
cld
and
out
jmp
mov
adc
jmp
cli
imul
jle
sbbl
mov
pop
filds
mov
test
push
mov
adc
addb
in
pusha
shrb
xor
es
cmp
pop
jmp
std
repz
adc
lods
js
andb
testl
adc
daa
xchg
sbb
or
and
outsb
mov
fdivl
or
adc
mov
sahf
xchg
dec
dec
adc
add
cld
jle
in
xchg
fcmove
rclb
and
mov
cli
adc
pop
cmpsb
jp
ret
xchg
gs
xchg
roll
adc
stos
sub
mov
and
or
loope
or
xor
test
ljmp
arpl
lret
frstor
mov
lea
push
in
and
bswap
ljmp
cwtl
and
es
xchg
mov
cmp
jb
cmpsl
sub
leave
repnz
imul
loop
sub
inc
mov
or
test
jb
or
mov
filds
xlat
and
or
stos
stc
outsb
add
sbb
aad
arpl
jle
pop
push
sub
ficoms
leave
cltd
and
cwtl
mov
test
xchg
or
in
ret
mov
cld
jbe
dec
cli
xchg
ret
call
ficompl
xor
pop
push
lret
inc
mov
dec
clc
out
iret
bound
outsb
push
sbb
imul
jnp
mov
mov
jae
ljmp
mov
mov
insb
mov
lret
jmp
cmpsl
push
push
aam
mov
xor
adc
and
aas
ljmp
jl
pop
cmp
sahf
add
subb
adc
sahf
jmp
mov
test
mov
jecxz
in
std
lea
xor
stos
xor
test
repz
ret
adc
mov
fistpl
decl
iret
add
sub
adc
sbb
lea
arpl
test
pop
add
xchg
add
mov
int3
or
cmc
push
imul
mov
mov
push
jg
cmpsb
pop
xchg
out
fsubl
cmp
rorl
jle
pop
fdivrs
pop
sub
or
adc
sti
data16
jo
jp
push
pop
pushf
lcall
pop
adc
jns
mov
fsubp
ljmp
add
push
out
and
jns
pop
xor
rsm
xor
sbb
gs
push
fsubrl
mov
bound
jp
aam
push
in
mov
sbb
cmp
or
dec
xor
fsts
rcrb
cwtl
and
xlat
ficomps
cmp
sub
jp
push
in
rcll
cltd
sub
or
jmp
dec
cmp
adc
mov
jge
fsubrs
and
add
add
movl
jmp
je
add
mov
add
out
pop
xchg
jl
dec
sbb
sbb
movsb
inc
rol
mov
leave
pushf
dec
and
in
outsb
cli
lcall
cwtl
inc
sbb
xor
mov
sub
int3
or
in
ret
pop
jmp
push
mov
ljmp
cs
leave
das
xchg
jb
push
sub
ja
adc
clc
fadds
jb
push
mov
xchg
push
push
dec
push
inc
inc
mov
hlt
sti
jp
and
inc
sub
sbb
in
cwtl
inc
loopne
pop
stos
jp
lcall
std
add
mov
loope
mov
pop
repz
mov
mov
icebp
push
out
gs
repz
mov
inc
jge
je
dec
mov
sub
fs
fbld
dec
test
dec
sub
adc
cmp
fstps
cmc
clc
inc
xor
xchg
leave
repz
fisttpl
icebp
xor
fisubs
scas
into
or
sub
arpl
add
dec
test
sbbl
add
add
daa
lahf
pushf
xor
or
sbb
sbb
inc
dec
shr
lods
fnstcw
fnstenv
sub
pop
jbe
fimuls
inc
lods
in
fildll
cmp
pusha
sub
mov
jns
add
mov
push
outsl
loope
hlt
inc
xchg
daa
sbb
jle
sbb
in
inc
in
pop
testb
pop
ds
js
or
inc
cmp
mov
and
xchg
push
test
test
pop
xchg
jb
rcll
fsts
mov
pop
adc
inc
xchg
dec
jo
andl
ljmp
xor
cmp
mov
loop
mov
mov
std
lods
fldl2e
pop
mov
mov
push
xchg
icebp
add
add
adc
jle
jle
xchg
testb
xor
mov
inc
or
lods
dec
in
ds
ljmp
ret
jnp
pusha
adc
mov
stos
mov
or
dec
lcall
notl
jle
int
es
cmc
cmp
push
cmp
jp
or
out
cmp
popf
cmp
lahf
sub
std
jb
add
fidivl
fwait
out
push
jle
jb
add
push
pop
call
jp
shl
iret
out
popl
push
xor
test
aas
ja
hlt
andl
aad
push
push
cmp
sbb
addr16
lahf
sub
fnstcw
jl
dec
in
shrl
shlb
aaa
leave
and
xor
fiaddl
insb
scas
out
lods
bound
ja
inc
mov
sti
repnz
popf
addr16
sbb
popa
xlat
lcall
push
cs
xchg
push
or
dec
leave
leave
hlt
push
or
std
scas
dec
fwait
loope
add
cmp
xchg
hlt
dec
test
insb
push
inc
icebp
mov
lods
repz
repz
add
add
inc
das
int
loopne
imul
jo
mov
shlb
fdivrp
xchg
fs
stos
ss
mov
ss
scas
xchg
fstpl
lret
in
fstpt
add
sbb
add
data16
ss
jo
imul
push
test
shrl
pusha
arpl
mov
in
stos
dec
addr16
mov
fstps
in
mov
dec
divb
call
and
jns
lds
xchg
jbe
push
cmp
inc
imull
dec
repz
mov
push
sbb
sub
sbb
inc
out
pop
xchg
push
outsl
fdiv
cmp
jg
jne
movsl
icebp
push
inc
rorl
and
xchg
arpl
sarl
imul
or
test
add
push
jnp
loop
cld
add
imul
cmp
push
mov
sub
movl
mov
cmc
fldcw
add
mov
pop
pop
nop
jne
mov
pusha
mov
or
mov
mov
test
xor
mov
bound
lea
leave
jno
in
sub
sbb
jnp
push
imul
imull
jg,pt
imull
add
dec
adc
scas
iret
pop
and
mov
adc
xchg
push
scas
out
mov
stos
aas
jns
xchg
cmp
sbb
push
push
cs
pop
js
or
pop
and
dec
imul
sti
sbb
and
pop
inc
and
in
add
orl
adc
fcoms
xchg
fwait
or
mov
outsb
lret
inc
or
mov
jb
insl
or
inc
js
lods
xor
call
push
lret
mov
dec
xchg
in
mov
mov
movsl
lret
fdivs
jl
leave
ror
mov
js
add
insb
fsubl
cli
loopne
push
lea
cmp
jnp
cld
cmp
pop
rol
aam
mov
ret
adc
icebp
repz
sahf
inc
lea
jno
roll
lret
push
in
rcr
les
and
or
lret
ret
and
rolb
hlt
or
je
je
repnz
mov
enter
and
jnp
fiadds
outsl
les
out
dec
pusha
mov
outsl
or
xchg
and
cmp
gs
out
mov
lcall
daa
sarl
mov
xchg
xchg
hlt
test
int
adc
xor
lret
and
bound
push
add
lds
jae
cmp
sbb
aaa
ret
ja
cmpsb
and
fsts
add
movl
or
jns
pop
xchg
xchg
inc
sbb
xchg
cmp
push
xchg
movsb
lahf
xor
das
or
int3
adc
and
and
xchg
push
xor
xchg
sub
jne
and
mov
or
je
cwtl
sub
jo
movsb
and
jle
aad
push
shll
pop
jnp
repnz
dec
push
test
icebp
pushf
jecxz
jle
cmp
jb
mov
sub
enter
cmpsl
lea
out
rclb
scas
or
lahf
shlb
xchg
pop
imul
lcall
push
xchg
mov
in
pop
xor
cmp
lock
lcall
xchg
sbb
sti
jl
cwtl
add
ljmp
hlt
out
and
pop
sti
xchg
adc
out
cmp
das
test
inc
mov
dec
jecxz
call
and
js
loopne
gs
rorl
jo
cmp
hlt
xchg
xor
dec
pop
clc
sbb
and
push
stos
adc
je
movsb
cmp
fcmove
call
adcb
add
sub
addl
inc
outsl
xor
mov
js
and
sbb
movsb
orl
cwtl
xchg
and
aaa
mov
xor
inc
push
mov
push
iret
mov
sub
sub
mov
push
neg
inc
popf
jmp
rcrb
xor
call
fisttps
push
adcl
fsubrs
pushf
xor
out
push
enter
mov
jp
push
or
nop
js
filds
and
ficomps
cmp
movsl
mov
imul
push
clc
les
movb
or
ljmp
outsl
pop
or
js
adc
not
mov
sbb
jbe
jge
sahf
sbb
ljmp
cmc
inc
xor
aaa
ret
imul
das
push
mov
mov
pop
or
aaa
imul
ljmp
mov
and
subl
xor
sbb
repnz
adc
pop
and
sti
xor
insl
adc
inc
mov
jp
int
pop
sbb
popf
mov
orl
push
mov
jno
push
cli
cmc
sti
or
rolb
scas
cmp
in
pop
popf
in
insl
dec
and
xlat
and
mov
dec
cmp
sub
or
scas
pushf
ss
pop
push
or
xchg
add
jae
neg
add
cld
lods
and
dec
aaa
enter
pusha
hlt
lahf
and
mov
stc
jecxz
or
lea
stos
mov
addr16
mov
mov
cvtps2pd
outsl
js
ljmp
xor
dec
add
shr
mov
je
xchg
into
push
into
mov
cmc
push
pop
imul
sbb
jns
call
inc
xchg
lods
sub
push
gs
jecxz
incb
mov
div
sbb
js
mov
pop
xchg
out
pop
xor
in
stos
inc
push
and
cs
inc
inc
xchg
jns
mov
lret
dec
shl
jg
sbb
mov
xor
out
rcr
adc
mov
sbb
xchg
xchg
mov
mov
push
sbb
pop
cmp
fdivrs
lds
pop
outsb
or
jo
mov
mov
lock
out
imul
movsl
insl
dec
mov
cltd
jno
or
mov
xor
out
adc
imul
je
rclb
inc
add
push
hlt
jb
into
cmp
jmp
cli
mov
add
jmp
call
ret
fcomps
int
insl
neg
mov
push
pop
sbbb
xchg
loopne
sub
out
or
pusha
dec
or
push
loope
mov
xor
sub
pusha
sbb
jbe
test
mov
push
movsb
sbb
out
pop
fdivrs
add
packssdw
cmp
and
dec
pop
aas
popa
adc
add
mov
xchg
rcr
push
scas
loop
sub
outsb
out
cwtl
inc
mov
jl
jg
test
push
cmp
adc
jb
rcr
insl
mov
mov
cmpb
stos
scas
repz
dec
cld
xlat
adc
insb
imul
loop
inc
arpl
or
pop
daa
movsl
mov
dec
adcb
xor
mov
std
rcl
xor
addr16
hlt
pop
or
lock
or
enter
or
lahf
xchg
das
jg
mov
mov
or
cmp
xchg
dec
xchg
cmpsl
scas
mov
or
lcall
inc
add
clc
loope
and
movsb
push
cmpl
mov
loopne
subl
mov
sub
shrl
mov
adc
push
gs
xchg
pusha
in
mov
mov
cld
pop
lock
ljmp
mov
fnstsw
sub
in
pusha
incl
xchg
in
inc
test
add
mov
aas
xchg
fdivp
inc
mov
cltd
cmc
fadd
insb
outsb
or
dec
dec
jne
inc
sahf
and
inc
ret
pusha
mov
jmp
adc
add
insl
test
inc
mov
lret
push
in
loopne
and
cs
pop
testl
cmp
adc
cmp
movsb
imul
or
adc
or
inc
js
lock
dec
iret
cmp
clc
loopne
or
dec
or
inc
xchg
xor
arpl
jbe
adc
adc
jl
cmp
lcall
push
lea
adc
aad
mov
xchg
scas
adc
pop
add
fdiv
bound
scas
popf
daa
int3
mov
or
or
sbb
inc
push
xchg
push
clc
inc
sbb
cmpsl
mov
xor
push
stos
push
jl
movl
dec
sub
xchg
insl
mov
ret
xorl
dec
shl
mov
es
cmp
pop
call
mov
int
dec
mov
sub
negl
rorl
aas
pop
mov
je
int3
repz
xchg
mov
mov
pop
repz
fcom
mov
les
fimuls
in
jg
ret
je
fisttpl
push
dec
xchg
push
adc
push
loop
sbb
js
scas
mov
jecxz
adc
in
fmuls
push
dec
fists
sbb
in
mov
lods
adc
ss
cmp
test
mov
test
adc
stos
ja
pop
dec
lea
mov
jmp
shrl
pop
or
cmpsl
addl
cmc
sbb
ss
test
scas
mov
add
cs
pop
ja
cs
fisubl
lea
es
clc
lahf
mov
iret
pop
inc
sbb
fisubl
cs
xor
movsb
pop
sub
cmp
xor
adc
es
repz
stos
add
shld
push
pop
or
loope
sub
scas
ret
sbb
mov
push
roll
ds
loopne
mov
in
nop
leave
outsl
aas
loop
fcom
sbb
push
popa
ja
mov
jb
in
sub
push
fisubs
mov
leave
pop
dec
scas
pop
sahf
aas
jbe
inc
or
ljmp
inc
jge
aam
mov
add
adc
adc
adc
sarb
cltd
or
andl
and
inc
aad
outsb
das
negb
xor
mov
adc
mov
sbb
outsb
push
sti
arpl
adc
mov
fwait
xor
dec
dec
mov
lret
imul
dec
sbb
and
mov
xor
push
sub
je
movb
lods
xchg
cld
movsl
fcmovne
lea
insb
dec
mov
or
xor
push
and
adc
xor
aad
jl
jp
lret
insl
adc
mov
inc
add
or
clc
mov
dec
aad
push
xchg
aad
sbb
in
faddl
iret
push
dec
enter
imul
pop
nop
repz
mov
jmp
add
xchg
cmp
loope
clc
repnz
push
xor
xchg
inc
data16
ret
pushf
cwtl
int3
movsl
lret
push
popf
fcmovu
ficomps
add
loopne
sbb
cmp
jb
fidivl
mov
cmp
or
or
jnp
push
and
push
aad
jmp
arpl
ss
push
dec
leave
push
adc
push
movq
push
and
add
sub
sbbl
je
inc
stos
lcall
fldenv
lods
popf
push
scas
jbe
jecxz
mov
lahf
int
mov
icebp
inc
outsl
dec
jge
mov
mov
ljmp
jge
je
cmp
jle
xor
mov
aad
jae
sahf
push
call
jns
fisubs
cmp
jo
mov
andb
xor
pop
push
push
ret
mov
xchg
ss
inc
mov
fld
cmp
sub
jns
outsb
mov
cmc
test
jb
in
mov
add
adc
scas
scas
and
pop
mov
in
inc
pop
inc
loop
lods
pop
call
sbbl
mov
rcrl
mov
cmpsl
push
pop
inc
and
sbbl
fcomps
gs
or
push
mov
adc
inc
in
insb
repnz
pop
sbb
leave
lea
das
arpl
aam
loope
mov
jb
insl
ljmp
addr16
xchg
add
xchg
inc
sub
data16
push
ret
ds
sbb
push
pushf
xchg
jg
or
scas
in
jnp
mov
add
xchg
rep
popf
hlt
data16
mov
fisubrl
inc
jp
mov
mov
cmpsl
sub
stc
insl
jno
mov
test
cmp
pop
mov
dec
fldt
fldt
mov
add
cld
add
movsb
aas
or
ljmp
popf
test
dec
add
add
and
sub
and
std
jae
daa
cmpsl
enter
xchg
enter
xor
mov
ss
lock
or
sbb
je
add
lret
and
jmp
cmp
shrl
dec
lock
ficomps
mov
pushf
stos
xor
pushl
bound
adc
jge
ss
movsl
inc
dec
ss
inc
iret
fisttpl
out
pop
in
scas
jg
adc
decl
ss
loopne
sub
mov
inc
jb
pop
dec
mov
cmpsl
aad
push
mov
popf
daa
adc
mov
jne
fidivl
xchg
lea
jmp
xchg
lods
fcompl
mov
xchg
jecxz
ret
mov
push
fcomps
je
mov
add
jbe
jb
adc
movb
push
scas
pop
insl
mov
aaa
clc
rcrb
mov
imul
std
xchg
jno
xchg
dec
adc
pusha
xchg
mov
das
orb
ljmp
adc
std
inc
imul
jecxz
push
adc
fstpl
in
cwtl
mov
je
cmp
pop
rorl
push
push
in
leave
fnstcw
popf
incb
ja
push
call
repz
dec
cbtw
jmp
lahf
dec
xchg
sub
jmp
push
sbb
pop
fcoms
fldcw
bound
mov
out
cmp
js
insb
jge
repnz
mov
cld
popaw
push
notb
push
push
jmp
pop
pop
inc
dec
test
cmpsb
rcrl
mov
adc
scas
dec
xor
fsubp
dec
sub
mov
jp
push
xor
fs
gs
push
fsts
dec
arpl
xchg
mov
mov
and
aam
add
pop
sti
mov
mov
and
fdivrp
ret
cltd
mov
sub
mov
mov
ja
xchg
push
iret
aas
sbb
bound
pop
add
pop
cmpsl
je
fadds
inc
push
test
add
lock
push
mov
ljmp
les
cld
cltd
pop
xchg
pop
outsb
pusha
fwait
inc
xor
stos
pop
lea
ja
fwait
xchg
push
ds
and
gs
lock
cs
ja
shlb
cld
xor
cmp
bound
das
xchg
add
push
repz
in
sbb
test
stc
into
sub
jg
adc
adc
mov
adc
inc
or
mov
fdivp
and
addr16
loope
je
xor
inc
push
out
das
xor
mov
mov
cmp
mov
sarl
repz
fcmovu
xchg
mov
add
lds
ret
inc
sub
test
repnz
mov
inc
ret
insl
or
out
cmp
sub
and
dec
adc
mov
mov
add
mov
mov
daa
cmpl
out
icebp
dec
push
out
lahf
add
iret
sbb
je
out
xchg
add
shrl
ds
scas
or
test
loop
cli
pop
insl
push
or
xor
imul
and
fcomip
xor
jle
popa
add
inc
dec
fninit
stos
ret
pop
hlt
icebp
lock
cmp
mov
sub
lahf
in
and
sahf
adc
pusha
mov
xchg
jle
mov
and
fwait
cmc
popa
adc
mov
stos
rorl
add
fiaddl
mov
fidivl
cltd
mov
clc
mov
mov
xchg
nop
outsb
xchg
dec
sbb
xchg
and
mov
pop
cmp
fs
mov
in
add
and
lods
adc
and
mov
xchg
xor
mov
addr16
mov
mov
xchg
repnz
addr16
pop
lods
mov
push
lea
lret
cmpsb
or
push
xchg
scas
cld
jb
mov
mov
jle
test
add
subl
test
sbbb
repnz
andl
dec
sbb
addr16
lods
jle
stos
mov
js
aam
paddq
test
int
mov
lods
ljmp
out
into
aad
daa
fiaddl
test
imul
cmp
inc
fcmovnu
movsb
jae
hlt
or
mov
sub
jecxz
mov
mov
bound
fisubrl
insb
stc
adc
in
pop
sbb
ja
xchg
jne
lret
xor
fcomip
cmpl
sahf
fs
les
jle
pop
lret
mov
lahf
insl
mov
loope
jae
and
cld
addr16
mov
xorb
ss
lock
es
lock
and
fnsave
pushf
ss
shrb
ds
mov
xchg
adc
fnsave
sub
add
sbb
adcl
popa
mov
jno
hlt
pop
adc
mov
insl
test
out
in
push
jle
fidivrl
adcb
inc
cmpl
movsb
inc
push
movsl
shll
jecxz
orb
xchg
pop
mov
inc
repz
scas
mov
clc
pop
jae
js
add
lds
in
jns
lcall
mov
clc
mov
jmp
cli
clc
or
jbe
mov
cmp
inc
push
sub
mov
je
mov
inc
mov
xchg
jl
popa
lret
fbld
mov
mov
push
ja
lret
or
punpckhwd
sub
pop
push
mov
fnstsw
xchg
inc
cmpsb
pop
xor
dec
xchg
mov
stos
mov
cmc
ret
xor
push
inc
sbb
repnz
pop
cmp
lahf
mov
dec
shrb
push
sarb
arpl
cmp
mov
sub
std
cmpsb
cmp
fcoms
push
cmpsb
sbb
dec
add
jge
cmc
inc
int
pop
test
push
insl
in
sbb
sbb
jp
sarb
cs
adc
add
mov
push
iret
fists
adc
jp
notb
loopne
fildl
hlt
addb
adc
ret
mov
sbb
inc
cmp
lds
mov
pop
or
add
jae
clc
pop
xchg
std
aad
rep
inc
shlb
mov
sub
sbb
push
mov
add
in
test
lcall
movsl
cmp
sub
pusha
mov
lea
ja
js
leave
pop
lcall
fnstsw
aas
and
add
and
jbe
roll
ss
push
aaa
out
popl
mov
imul
lods
shlb
mov
cmp
xchg
int
and
xchg
inc
sbb
push
mov
jne
mov
jl
leave
sub
test
jg
lret
add
adc
xchg
cltd
sahf
add
xchg
cli
sahf
outsl
jge
sahf
push
push
dec
pop
sub
cli
fnstsw
movsb
pop
pop
fimuls
sbb
inc
mov
mov
in
inc
adc
repz
pop
jecxz
sbb
das
cmp
cli
icebp
andps
addr16
mov
aas
pusha
mov
test
lea
aad
fmul
and
adc
std
mov
cmc
insb
dec
adc
inc
push
or
lock
imul
mov
push
adc
push
gs
mov
or
daa
es
adc
in
xor
cmc
addr16
sbb
pushl
mov
sete
cmp
xlat
imul
sahf
pop
imul
enter
js
aaa
push
sub
gs
aad
mov
aam
or
insl
inc
jbe
cmpsb
pusha
dec
mov
dec
negl
scas
lods
out
loopne
lret
je
jbe
fcomps
test
lods
das
push
hlt
leave
sbb
divl
out
lods
cmc
and
cmp
mov
inc
rclb
jecxz
cmp
push
or
scas
cmpsl
xor
xchg
adcb
mov
aas
ret
hlt
outsl
js
dec
test
stos
mov
fisubl
mov
jecxz
pop
push
xor
inc
add
setne
jle
jae
inc
lahf
fists
xor
xchg
in
xor
xor
inc
shll
out
or
scas
dec
push
dec
pop
and
add
cmpsl
pop
std
scas
push
mov
mov
jb
jmp
pop
jne
negb
cmc
dec
cmp
xchg
add
adc
out
cmp
push
cmp
or
and
push
stos
out
cwtl
dec
std
sub
aas
xor
xchg
mov
xlat
in
repnz
cmc
out
loop
pop
test
prefetch
mov
push
dec
mov
inc
imul
bound
ret
cmp
or
ljmp
mov
out
adc
pop
sub
lods
mov
push
sti
mov
add
xor
mov
and
test
push
mov
cmpsb
jo
mov
loope
adc
push
jae
cmpsl
mov
lahf
test
call
sti
dec
xchg
sahf
and
xor
outsl
hlt
cltd
adc
or
cmp
je
scas
sbbb
jo
in
inc
sbb
mov
cmp
jbe
mov
aad
std
mov
loopne
inc
popf
jb
iret
inc
out
mov
and
lods
cmpsl
test
sub
in
jne
add
cmp
xlat
data16
mov
jecxz
lods
test
lret
push
cmp
cmp
sbb
repnz
ljmp
xlat
repz
ds
add
jmp
sub
mov
js
cmp
mov
testb
orl
cmpsb
pushf
pop
ja
popf
pop
out
stos
sti
and
out
pop
xor
inc
incl
test
in
pop
ss
test
inc
sub
jno
xlat
test
les
jmp
sub
test
das
fldcw
inc
mov
xchg
loopne
dec
pop
mov
mov
js
dec
cmp
or
sbb
movsl
mov
inc
sbbl
hlt
fisubrs
adc
jl
mov
std
repz
pusha
inc
add
inc
test
movsl
mov
cmc
ss
or
jnp
push
gs
sar
std
xchg
popf
add
mov
pusha
and
mov
xchg
xlat
aam
lahf
or
xor
and
dec
outsb
js
insl
xor
jo
mov
dec
cwtl
fdiv
xchg
outsl
mov
repnz
xchg
fxch
dec
pushf
pop
jne
std
sub
shll
lods
or
mov
jecxz
xor
cwtl
and
mov
gs
test
lahf
inc
dec
cli
jmp
popa
jmp
jl
cmp
stos
cmp
out
jl
cmp
in
test
jge
aad
stc
push
cmpsb
fistl
jp
fwait
lcall
cmp
ja
mov
ljmp
lcall
popf
pop
sbb
in
fildl
push
mov
pushf
jae
sub
pusha
push
std
dec
mov
cmp
aas
jne
sbb
and
mov
stos
js
cltd
lcall
rcrl
dec
jge
ja
xchg
inc
mov
test
jb
das
and
pop
inc
push
and
mov
jle
xchg
add
imul
cltd
or
xor
call
bswap
cmp
xchg
and
lock
fmull
or
rol
sbb
ljmp
add
xor
cwtl
or
addr16
addr16
lods
xor
inc
jo
sub
fnstcw
imull
jae
sub
adc
adc
ds
inc
cmc
divb
int
mov
add
lds
popa
mov
arpl
aas
nop
stc
ffreep
dec
sub
mov
pop
scas
popf
pop
mov
repnz
cmp
adc
bound
pop
stos
scas
scas
mull
mov
js
or
aas
jmp
jae
cmp
adc
popl
loop
inc
sbb
mov
in
sbb
dec
pop
jae
or
jb
fiadds
xor
pushf
fcoml
xchg
in
imul
add
cwtl
push
lods
pop
rcrb
cli
test
xchg
inc
push
cli
movsl
es
cld
jmp
jnp
data16
into
mov
imul
pop
loop
push
lret
scas
mov
and
inc
sbb
push
mov
sbb
push
cld
addr16
xlat
notb
dec
insb
jmp
ss
add
sbb
mov
or
les
jge
adc
mov
jb
or
jbe
xor
jl
mov
jmp
cmp
or
xchg
mov
jb
inc
mov
inc
rolb
sub
xor
inc
js
stos
xchg
mov
scas
jno
aaa
sbb
xor
in
and
adc
jmp
into
or
out
loopne
jmp
sbb
addr16
add
adc
daa
cmpsb
push
lcall
fists
mov
shl
lock
rcrl
jg
xor
adc
clc
dec
push
out
xchg
dec
aam
cmpsb
fdivrl
jno
movsl
es
rolb
or
mov
pop
adc
pop
dec
mull
sbb
inc
bnd
jb
mov
push
stc
ljmp
push
cmp
mov
xchg
xchg
scas
and
mov
lret
jb
push
cmp
cmp
sub
test
dec
push
insl
loopne
cmp
or
mov
xor
add
jl
scas
icebp
adc
adc
into
cmpl
add
test
adc
mov
mov
xor
lret
add
and
adc
jbe
or
dec
les
push
sub
movsb
mov
xor
clc
adc
sbbl
sahf
pop
mov
jg
lods
mov
cmc
or
mov
jno
jbe
jle
cmp
hlt
arpl
cmpl
cmp
lods
sahf
lcall
rcrl
pusha
pop
mov
aas
addr16
rcrl
jmp
mov
cmp
push
add
cmp
adc
push
sub
popf
pop
cli
test
rcrb
shlb
add
insl
and
fidivrs
imulb
mov
jmp
cmpb
sti
or
mov
lock
hlt
push
lret
dec
jne
fucomi
ror
loope
mov
mov
sbb
les
jecxz
mov
shll
popf
pushl
pop
lock
aas
jmp
js
mov
call
loopne
jae
mov
and
lea
xchg
xchg
jl
outsl
add
pushf
cmp
rcrl
xchg
cmpsl
stos
jne
xor
hlt
out
test
xor
xchg
jge
cs
jp
fmull
jge
cmp
ret
mov
outsl
mov
or
sbb
adc
xlat
xor
loop
pop
pop
aam
movsb
mov
pushf
and
fbld
and
and
add
cmpsl
enter
loope
sbb
out
and
mov
lret
pusha
fcomps
in
outsb
into
cmp
pushf
imul
dec
sub
sti
push
mov
cmp
inc
pop
pop
sbb
mov
out
cli
pop
jae
hlt
cli
xor
ss
adc
or
std
add
clc
test
aas
jo
shlb
jecxz
pop
add
roll
fisttps
cmp
dec
sub
cmc
push
out
xor
addr16
mov
jne
mov
dec
dec
insb
pop
dec
lea
mov
sar
xor
jne
iret
jp
or
decb
pop
jbe
das
in
fisubrl
arpl
push
xor
inc
popa
fcoml
divl
test
lods
push
sub
ds
and
enter
stos
mov
mov
dec
sub
clc
jle
push
or
bound
psubusb
mov
pop
sbb
idivb
inc
cs
cmpsb
inc
es
bnd
pop
stos
test
aaa
pop
pop
repz
xchg
push
movsl
push
ds
jl
cmp
mov
sub
xchg
repz
lret
or
ret
push
dec
fwait
test
push
roll
test
loope
iret
aaa
mov
add
or
dec
nop
adc
pop
in
orl
imul
sub
pop
pop
ss
cmpsl
jecxz
adc
outsl
ficompl
jge
movsl
push
pop
aaa
mov
and
fsubs
push
loopne
jge
cmpsb
sub
imul
push
sub
xchg
lods
sub
add
mov
cmp
mov
scas
std
fisttps
jl
or
pop
xchg
aad
clc
lds
jo
sar
aaa
lcall
xchg
mov
dec
mov
and
insb
xorb
lcall
jmp
cmp
xlat
pushl
les
inc
xchg
mov
cmc
dec
addr16
into
in
out
hlt
mov
push
sub
stos
test
dec
push
push
lock
add
es
pop
dec
add
mov
sbb
imul
push
sbb
icebp
cmp
xor
dec
dec
sbb
add
push
loope
or
or
pusha
shr
mov
push
pop
gs
xchg
cmp
inc
jmp
pop
dec
cmp
push
cld
xor
hlt
cmp
aas
aad
pop
jno
mov
push
shrl
mov
idivl
mov
dec
movsb
ljmp
cwtl
push
mov
cmpsl
inc
in
lahf
test
in
jmp
out
je
shlb
call
in
lcall
sbb
mov
xchg
repz
fstpl
lea
xor
dec
addr16
mov
xchg
mov
cmc
out
sbb
jbe
and
push
sub
push
imul
push
stc
pop
and
std
cmp
icebp
dec
test
push
rolb
add
movsl
in
mov
loope
sub
dec
mov
cli
mov
jae
adc
mov
push
leave
dec
inc
sarb
leave
inc
push
lds
and
jne
pop
pop
jns
xchg
pop
push
pushf
xor
add
mov
push
jge
pushf
iret
int3
pop
dec
shrb
cli
xlat
and
jno
aaa
xor
leave
fcos
push
das
mov
sub
cmpsl
pop
lock
jno
jge
mov
add
mov
push
jge
inc
inc
loopne
int3
arpl
sarb
in
orb
outsl
stos
flds
je
mov
and
inc
adc
mov
mov
jno
mov
hlt
fisubs
lods
out
popf
pusha
inc
aas
and
adc
add
lds
leave
push
in
xor
adc
mov
xchg
ljmp
sub
hlt
cvtdq2ps
fwait
sbb
push
sub
lods
cld
jp
sbb
popa
addr16
add
cmp
pop
pop
popf
mov
sbb
inc
push
cli
ror
cmp
mov
xor
cwtl
dec
pop
jecxz
mov
in
cmc
add
cmp
sahf
movsb
das
sbb
push
cmp
imul
in
ret
push
aad
jae
sbb
outsl
add
icebp
leave
repz
mov
push
fldt
inc
fsts
push
jo
cmpsl
and
pushf
das
jns
test
jle
inc
inc
adc
nop
das
scas
adc
cmp
inc
jae
lret
cs
inc
sbb
jo
repz
xor
xchg
aas
pushf
notl
in
bound
shll
lods
into
mov
dec
xlat
lcall
mov
repz
gs
aad
and
push
push
fwait
test
and
ret
out
inc
nop
in
jns
int
xlat
pop
sub
mov
push
sbb
sub
xchg
sub
loope
inc
sub
fcoms
jmp
in
mov
xchg
jg
cs
cli
pop
mov
sbb
xor
iret
mov
mov
xor
cs
js
out
cmpl
pop
ds
sub
add
mov
stos
sub
daa
dec
add
fbstp
xor
scas
popl
in
mov
xor
sub
jmp
adc
daa
xor
pop
xor
sbbb
cmp
jns
icebp
push
dec
sarb
cmp
aam
xchg
lods
iret
or
add
lcall
mov
lret
mov
shlb
test
xor
in
pop
cmp
addr16
mov
mov
lea
pushf
fistl
addl
in
adc
lret
or
sub
jmp
shl
mov
add
fsubs
daa
jl
stos
sbb
mov
pop
xor
push
inc
mov
dec
sub
pop
in
pop
aad
mov
or
repz
xorl
aaa
es
clc
mov
cltd
xchg
repnz
mov
ret
jb
ss
shr
mov
cmc
adc
xlat
mov
mov
aaa
mov
sbb
lahf
mov
js
dec
pop
lahf
xor
fstps
mov
ret
or
mov
pop
imul
mov
in
ljmp
jle
cmpsb
shll
clc
mov
sbb
ds
mov
data16
cltd
stc
cmpl
iret
jo
es
or
stos
xlat
stos
sbb
mov
lahf
fiaddl
push
cltd
outsl
xchg
loope
sub
ficompl
mov
out
cmp
mov
repnz
pop
and
je
xor
xchg
add
cmp
rcrl
cmc
mov
pmullw
push
push
adc
dec
pop
jge
push
popf
or
divl
cli
sub
add
inc
insb
cmp
sub
sub
test
mov
gs
add
mov
lahf
outsl
xor
ja
ficoms
mov
inc
rorl
xlat
test
or
pop
jle
jno
adc
push
int
xor
rclb
mov
stos
mov
icebp
inc
sbb
sti
inc
fwait
mov
stos
stos
xor
int
movsb
inc
sbb
sub
mov
jmp
insb
idivb
jmp
aaa
sbb
lods
fstps
jns
cmpsb
aas
rcrl
je
mov
mov
stos
neg
cmp
lahf
aam
scas
pop
sbb
jo
push
test
adc
jb
xchg
adc
dec
addr16
lods
dec
or
and
mov
inc
and
nop
out
xor
aad
mov
add
mov
adc
pop
mov
dec
xchg
sub
fmulp
cltd
mov
sbb
pusha
in
cmc
cwtl
imul
xor
addl
mov
mov
cmp
hlt
arpl
sarl
adc
mov
mov
pop
sub
stos
lret
add
cmp
xchg
xor
dec
mov
inc
push
aaa
mov
xchg
xchg
push
mov
sbb
jae
xor
cwtl
inc
ja
cmp
fists
inc
aam
in
mov
rclb
lret
sbb
push
icebp
rcll
call
lahf
mov
imul
jne
xor
add
sbb
push
stos
mov
xor
mov
pop
push
push
lds
icebp
bound
sbb
lea
adc
mov
test
or
pop
xorl
insb
imul
push
inc
xor
jb
sbb
or
sbb
inc
testb
sub
shlb
add
mov
mov
sub
jns
cmpl
and
in
dec
fcmovbe
stos
lret
rorl
testb
fwait
push
push
rcll
clc
dec
xor
ds
push
jl
xchg
mov
stc
or
loop
sub
pop
out
or
popa
jns
aas
bound
mov
xchg
and
stos
fwait
mov
jecxz
lods
or
xsha256
cmpsb
push
jmp
mov
enter
test
sub
jle
xorl
jns
stos
incb
mov
pop
aam
dec
jne
insb
pop
jnp
sbb
pop
mov
data16
mov
dec
xor
pop
popa
pop
cld
movsl
fstpt
jge
mov
gs
cmp
xchg
push
inc
mov
das
jmp
cmp
cs
call
jmp
sub
fsubrl
push
push
insb
push
mov
jns
fs
push
pop
mov
and
fildll
clc
pop
adc
sub
mov
or
mov
sub
leave
add
lock
aad
movsb
aam
cwtl
mov
faddl
fiaddl
pop
int
stc
pushf
mov
rcrb
adc
adc
cmp
xchg
inc
sahf
push
loope
out
mov
leave
loope
lds
jl
iret
push
push
pop
xor
add
adc
loopne
cltd
mov
xchg
ret
fstpt
int3
clc
jle
ljmp
xchg
lods
cmpsb
scas
sbb
push
cs
hlt
fstpt
nop
les
out
cltd
popa
jge
xchg
xchg
push
jb
and
inc
cmp
push
mov
repz
jge
cwtl
dec
sbb
sbb
outsb
lea
insb
les
mov
mov
push
fsubs
outsb
addr16
push
les
pusha
pop
add
fisubl
mul
cmp
ucomiss
adc
jle
js
add
adc
insl
push
sbbb
mov
mov
and
gs
loopne
sahf
or
xchg
mov
lock
mov
xor
loopne
jg
xlat
inc
enter
xor
call
fistl
arpl
xchg
out
add
cli
lds
insl
imul
pop
stos
fidivl
jge
sub
inc
push
xchg
es
add
sub
clc
or
outsb
rorb
push
andb
xor
movsl
cmp
js
pop
push
mov
loope
jns
push
inc
leave
mov
aam
mov
ret
into
pop
fmul
sbb
jns
xchg
mov
sbb
pop
mov
ret
xchg
cmp
mov
data16
mov
adc
pop
rcrl
test
pop
push
jmp
ret
into
icebp
stc
mov
andl
sub
movsb
pushf
test
fwait
popa
add
xchg
inc
add
lock
mov
inc
clc
lock
push
outsl
fs
mov
ljmp
xlat
in
adc
shrb
lods
fcoml
gs
or
dec
xchg
inc
add
mov
xchg
push
pushf
pop
fisttpl
loop
gs
add
xor
mov
xchg
imul
out
add
inc
imulb
repnz
aad
adc
cmp
sub
int3
cmp
xlat
insl
into
lret
xchg
fwait
lret
sbb
test
and
jp
pusha
shlb
jge
mov
sahf
mov
inc
sub
jle
xchg
add
repnz
aam
lahf
adc
les
jg
push
outsb
fstl
sub
sbb
and
push
cmp
popf
dec
jl
cs
pop
jb
mov
push
push
aad
jecxz
subl
cwtl
push
fildll
mov
repz
jmp
push
and
outsl
dec
loop
data16
sbb
jle
outsl
and
into
popf
jmp
mov
mov
push
jp
mov
fwait
cltd
test
ss
or
inc
add
dec
mov
insl
jmp
xchg
pusha
dec
cmpsb
push
out
movsb
and
xorb
xlat
ss
cmp
rcl
xor
sbb
dec
fdivrl
pop
inc
lret
xchg
nop
lret
inc
loopne
xchg
outsl
and
dec
sbb
inc
insb
scas
mov
jnp
cmp
xchg
jnp
mov
add
shrl
mov
xor
call
dec
je
cmpsb
xchg
push
cwtl
xor
popf
pusha
inc
pop
xchg
jmp
movsl
popa
xchg
mov
in
xor
stos
lcall
xor
mov
out
mov
adc
mov
cmp
mov
dec
jge
xor
hlt
mov
in
sbb
sti
xchg
out
add
ljmp
push
lea
hlt
sub
and
cmp
push
ss
jmp
ret
jns
clc
push
idivb
jne
xchg
je
sar
cmpsl
jmp
push
push
push
ret
data16
fldl
pop
test
or
sub
dec
or
lea
dec
mov
jb
xor
sbbl
jnp
shl
dec
leave
jmp
les
aaa
leave
sub
pushf
xchg
clc
and
and
fbstp
xchg
jge
push
sbb
repz
divl
add
push
xlat
das
jl
rcrl
addr16
lret
dec
in
jne
sbb
cld
call
divl
addb
fcomi
orb
mov
mov
jnp
adc
loopne
pusha
cmp
or
loop
int3
jg
sbb
sbb
mov
lods
pop
out
pop
push
out
int3
sub
cmpsl
adc
rclb
loop
testl
fmuls
cmp
xor
dec
aad
scas
dec
push
in
mov
inc
or
mov
insb
in
test
mov
jo
add
and
ds
mov
fidivs
xchg
xchg
pop
dec
push
jmp
into
sub
std
push
pop
dec
dec
mov
dec
or
dec
das
mov
cmp
es
push
push
mov
pushf
lret
xchg
mov
fmulp
adc
inc
std
push
das
add
sahf
mov
aad
dec
lds
xchg
frndint
xchg
out
pop
fs
aad
insb
jbe
aas
sub
mov
mov
and
loope
fldl
movsb
xorps
lock
cmp
in
push
inc
mov
fsub
or
lret
sbb
ss
nop
jecxz
inc
test
movsl
mov
dec
idiv
sbb
jmp
jo
daa
and
out
add
lea
sbb
mov
ljmp
fadd
movsb
ja
test
mov
fucom
cmp
ret
push
daa
cmp
adcl
sub
jae
loopne
xchg
push
lcall
jns
fwait
inc
xor
daa
mov
inc
pop
cmp
clc
sub
loopne
out
cmp
insb
inc
lods
or
mov
outsl
out
dec
lock
adc
and
jle
cld
push
dec
idivl
push
xorb
call
or
xchg
pop
aam
into
int
rcrb
icebp
pop
xor
cld
fbstp
xor
jmp
scas
dec
js
xor
mov
fsubs
mov
push
add
mov
les
imul
sub
arpl
fsts
dec
dec
stos
lret
scas
ljmp
xchg
sub
lods
leave
scas
push
dec
mov
jp
mov
inc
lahf
das
or
movsl
mov
xor
sub
and
adc
stos
and
fcoms
maskmovq
testl
call
inc
ret
iret
mov
adc
sbb
dec
mov
aam
xor
jne
lret
insb
adc
cmp
stos
test
into
test
mulb
xor
mov
mov
lods
das
ljmp
mov
sub
jno
pop
sub
add
mov
lcall
push
pop
out
push
jno
inc
or
std
pusha
dec
lret
mov
inc
ret
nop
adc
dec
mov
stc
inc
mov
cmpb
and
push
loopne
jge
out
pop
cltd
js
sarb
xchg
cld
mov
ds
ret
icebp
es
test
add
jg
fidivl
repnz
icebp
loop
ret
xchg
xorb
jg
dec
sbb
jp
mov
outsl
loope
pop
xchg
push
insl
adcl
xchg
inc
dec
pop
mov
filds
sbb
loopne
mov
leave
cli
adc
lea
push
xchg
mov
cmp
adc
shlb
fadd
and
outsl
repnz
addl
cwtl
mov
xor
add
fimuls
mov
nop
movsl
add
and
mov
pusha
jbe
xchg
xchg
pop
adc
sarb
and
stos
imul
pop
push
nop
mov
test
fwait
jle
dec
stc
xor
int
pop
push
and
leave
adc
jl
adc
ss
aaa
les
cmp
jne
daa
and
xor
and
cmpb
or
inc
aaa
fwait
test
nop
push
pop
jl
lcall
aam
pop
mov
sbb
repz
jl
sbb
nop
loop
paddsw
sbb
test
pusha
inc
mov
stos
and
popf
std
xchg
jecxz
mov
mov
xlat
push
iret
pop
jecxz
ja
int3
aam
pop
mov
lods
xor
fstpl
cmc
jbe
adc
and
daa
mov
dec
jne
dec
inc
in
mov
lods
lods
mov
jp
test
xchg
aad
jnp
clc
lods
shr
ds
mov
int3
xor
sbb
call
lret
or
test
push
inc
cmpsl
mov
faddl
cmc
je
rcrb
and
jge
pusha
lcall
cmp
mov
jl
das
mov
mov
sub
pop
mov
mov
lods
in
cmp
es
push
pop
icebp
mov
sbb
lods
pop
or
add
pop
std
outsb
enter
cmp
pop
fdiv
push
loop
dec
push
test
mov
and
cmp
sub
adc
mov
or
cmp
test
bound
jmp
sahf
adc
push
cmp
push
pop
pop
xchg
sbb
jecxz
push
nop
cmc
cmp
leave
add
mov
mov
popa
js
mov
jle
or
pop
push
and
popf
mov
lcall
jne
sahf
rsm
sbb
in
adc
test
pop
push
sti
jp
out
push
add
push
repz
sbb
sbb
sub
test
push
xchg
in
jno
outsb
xchg
lahf
jp
pusha
push
outsb
sbb
ret
xchg
jnp
mov
xchg
ja
inc
cmp
cmp
iret
aad
inc
dec
mov
test
cmp
test
push
movsl
fcompl
lret
pop
sbb
dec
mov
ljmp
or
jb
or
add
inc
push
pop
xchg
push
lock
mov
dec
mov
hlt
push
inc
mov
push
xchg
jnp
sub
jno
repz
pop
popa
inc
jmp
and
jl
sub
sub
xchg
cli
nop
add
arpl
ss
xchg
dec
lret
pop
enter
jnp
pusha
adc
loop
imul
mov
jns
aam
mov
mov
rcll
aas
xorb
sbb
dec
test
mov
shlb
fidivl
sahf
std
cmp
ret
cmp
mov
push
sub
pop
lcall
push
aaa
pop
push
jle
add
push
sbbl
sahf
mov
out
subb
jbe
loopne
or
ret
in
or
and
sub
mov
fwait
push
mov
hlt
cmp
inc
pop
cs
cli
xchg
jecxz
out
pop
add
lods
mov
in
cmp
notb
scas
add
int
insb
sub
jmp
mov
sub
jmp
jle
nop
push
dec
jae
jns
push
int3
jae
cmp
sub
xchg
dec
out
xchg
push
add
xor
ficoml
inc
jp
xor
out
mov
int
jno
ret
xor
push
test
inc
out
mov
ds
dec
jne
fnstsw
jns
push
sahf
test
cmp
sti
jo
enter
dec
movsb
cs
pop
adc
inc
out
arpl
push
push
push
xor
mov
or
jmp
adc
and
enter
adc
pop
and
lahf
aad
jns
fwait
push
push
jg
sbb
sub
imul
bound
jo
jbe
out
int
insl
mov
or
stos
das
dec
jecxz
pop
out
ja
add
repnz
nop
aas
pop
movsb
sahf
cmp
dec
cs
pushf
jbe
in
inc
fldenv
pop
ret
int3
imul
cld
mov
pop
inc
jnp
and
jp
sbb
xchg
dec
mov
xor
inc
pop
pop
dec
push
fisubrl
mov
ja
jns
in
add
xchg
movsb
rcrb
jae
std
cmpsb
incl
xchg
scas
jl
xor
xlat
es
add
adc
ficompl
xor
inc
cmp
xor
out
movsb
outsl
mov
adc
sub
aaa
jg
je
sbb
aam
pop
and
divb
fcmovu
sub
mov
mov
aad
jmp
jmp
outsb
int3
test
stos
sarb
mov
cmc
inc
je
popf
test
pop
out
jg
aad
sar
jecxz
dec
mov
mov
inc
gs
xchg
mov
lret
push
iret
and
lret
pop
push
push
lret
jp
fdivl
das
push
add
and
ds
xchg
pop
aam
mov
adc
movsl
pushf
pusha
mov
push
cli
xor
outsb
mov
xorl
int3
test
dec
xor
jbe
stc
jecxz
fistl
push
cltd
xchg
xchg
stc
pusha
sub
mov
pusha
test
cs
bound
push
cld
pop
pop
mov
stos
iret
push
xchg
push
mov
jbe
sbb
out
inc
fstl
lcall
in
les
dec
lods
and
lods
hlt
mov
popf
test
dec
jne
sub
cli
push
mov
fbstp
cltd
xchg
inc
add
gs
das
mov
jns
loope
loopne
cmpsl
xchg
cmpsb
out
mov
jmp
lahf
pop
jp
les
mov
hlt
into
clc
loop
leave
adc
dec
or
mov
fdivrs
and
adc
adc
jae
jnp
mov
inc
mov
dec
cmc
dec
lret
leave
das
inc
cs
cmpsb
or
mov
cmc
dec
inc
je
inc
enter
gs
mov
inc
ficomps
aad
pop
loopne
dec
bound
add
repz
imul
lock
mov
mov
xchg
adc
dec
mov
lcall
popa
lcall
mov
cmpsb
ss
sub
mov
xchg
jnp
mov
dec
fucomi
leave
nop
jp
xlat
cld
pop
fwait
push
cmp
cmpsl
dec
pop
or
inc
pop
mov
pop
ja
leave
fbstp
sbb
mov
scas
inc
in
andl
lea
xchg
scas
dec
jno
jnp
scas
sbb
cltd
aad
stc
inc
test
repz
dec
mov
mov
inc
sub
pop
or
push
dec
data16
push
mov
mov
mov
jno
jno
adc
leave
push
ret
addb
cmp
push
testb
int
sbb
mov
jbe
add
out
outsl
mov
cmp
sbb
push
sub
mov
nop
mov
jns
fcoml
cmp
sti
pop
addb
enter
fs
sub
nop
or
lods
lods
mov
mov
dec
pop
mov
inc
movsb
mov
rclb
adc
daa
es
push
rclb
loopne
inc
out
mov
push
addb
jbe
fcoml
cmpsl
faddl
mov
pusha
pop
jg
stos
jbe
adc
aad
dec
leave
fsubs
and
inc
pop
leave
lcall
cmp
adc
ja
cmp
mov
sub
mov
lods
fnstsw
cmpsl
les
or
mov
inc
mov
aas
mov
pop
mov
aaa
dec
and
push
imul
push
ret
and
scas
or
xor
fchs
cmp
popf
daa
roll
add
mov
lods
jbe
mov
out
jecxz
shll
mov
jle
inc
xchg
pop
shrl
test
imul
jo
xlat
pop
test
mov
xchg
jne
dec
dec
negb
cs
mov
mov
and
mov
ljmp
out
jmp
jbe
test
popl
xor
and
xchg
shr
add
addr16
xchg
imul
je
push
mov
in
cmp
add
data16
push
mov
xor
push
testb
xchg
movsb
xor
idivb
sti
test
imul
imul
fnstenv
cwtl
jo
loope
lret
flds
jecxz
mov
sbb
adc
xor
outsb
pop
fbstp
fstp
cmpsb
mov
icebp
ret
sub
inc
xlat
mov
mov
cltd
icebp
in
es
out
push
inc
scas
xchg
push
dec
pusha
or
cmp
aas
dec
mov
movsl
add
ds
aad
testl
shll
aam
sti
flds
shlb
pushf
arpl
popa
mov
insl
cmp
iret
pop
mov
outsb
dec
loopne
jae
aaa
push
fisttps
insb
mov
movsb
adc
fisubs
mov
jl
stos
xlat
and
outsb
mov
sub
out
xchg
sub
sub
imul
pop
icebp
xor
and
or
inc
test
inc
ror
mov
insb
or
mov
xor
js
popa
ret
lea
lcall
iret
btcl
test
and
push
adc
or
in
mov
cmp
bound
jne
cmp
dec
das
popf
jl
shl
jle
mov
fiaddl
je
sub
filds
push
inc
loopne
and
ret
inc
outsb
mov
fcoms
cmp
sub
icebp
aam
dec
int
dec
aas
hlt
int
movsb
insb
inc
in
jne
add
out
xchg
scas
jmp
imul
push
mov
cmc
cltd
outsb
or
sbb
lods
dec
cwtl
xor
shll
jle
xchg
scas
jb
shr
and
and
sahf
mov
fninit
loop
mov
sub
stos
dec
pop
out
and
adc
sbb
outsb
cwtl
xchg
popa
enter
hlt
dec
cmpsb
sub
jne
cmpsl
jae
loop
test
lods
sbb
mov
fstpt
sub
xor
mov
ja
inc
daa
je
lds
clc
repz
out
adc
mov
sub
data16
mov
cmp
outsl
into
lahf
and
add
ljmp
mov
xchg
jmp
xor
or
xchg
inc
xor
fwait
pusha
jbe
inc
push
outsb
imul
mov
stos
sub
fnstsw
add
test
mov
imul
adc
iret
xor
sar
movsb
aas
scas
out
jo
push
aad
loope
sub
rcrl
lahf
aas
dec
jp
in
outsb
jmp
loopne
cld
pusha
leave
dec
and
mov
jg
pop
xor
jp
scas
js
cmp
push
xor
adc
clc
stos
mov
dec
cmc
aas
and
loope
inc
jno
ljmp
jg
xchg
mov
xor
xchg
sbb
in
mov
dec
popa
adc
notl
add
mov
test
or
push
sbb
popa
mov
adc
or
sbb
dec
imul
inc
aad
test
mov
repz
cli
pushf
xacquire
dec
fcoms
lock
inc
filds
cltd
test
pop
jle
jl
inc
push
mov
and
insl
in
dec
adc
fidivl
sub
lahf
fwait
adc
mov
pop
mov
mov
push
push
jg
in
fs
add
sub
lahf
jnp
clc
jle
imull
aaa
in
dec
cwtl
gs
add
hlt
fwait
leave
inc
mov
mov
negl
mov
xor
cmp
add
push
ljmp
scas
cmovl
test
xchg
mov
and
call
orl
or
sub
push
cld
pop
fnstsw
jae
jbe
xchg
fs
xchg
mov
fistpll
das
sub
imul
int
enter
in
inc
insb
add
mov
mov
pushl
pop
stos
arpl
xor
std
in
repz
mov
pusha
jmp
dec
ja
addr16
les
subb
and
addl
in
jle
stos
push
out
sub
inc
dec
push
pop
pop
or
cmpsl
shll
mov
sbb
and
and
mov
xchg
mov
sbb
fdivp
mov
mul
lods
pcmpeqw
xchg
cmp
stos
dec
jl
fnstcw
loopne
cmpsl
mov
jmp
xchg
mov
adc
ss
lds
outsl
jp
fwait
sub
sahf
hlt
jnp
jae
add
outsb
test
add
xor
cs
pop
jge
int
cli
cmpsl
mov
sbb
cmovnp
gs
push
mov
pop
pop
std
push
mov
arpl
mov
inc
paddusb
jmp
rolb
movl
in
icebp
fmull
stos
les
or
pop
mov
dec
and
push
jo
fsubl
jp
mov
pop
loope,pn
pusha
push
push
imul
into
cmp
dec
pop
xor
fimull
popa
jge
popf
nopl
sahf
add
sti
mov
push
mov
enter
mov
mov
cmp
and
jmp
xchg
mov
lret
xlat
movsl
sub
daa
test
sbb
push
ljmp
iret
jp
pop
scas
xor
aaa
cmp
push
and
push
sbb
out
jo
loop
cmp
pop
loopne
arpl
push
fs
xor
cwtl
cmpb
jle
ret
outsl
movsl
xlat
pushf
lret
std
dec
outsl
pop
ret
xchg
and
lods
pop
jge
jae
mov
andb
aam
movsl
push
cwtl
loop
pop
fcompl
xchg
mov
dec
je
lock
dec
mov
inc
fildll
add
dec
hlt
jne
test
idivl
leave
mov
aam
cli
fwait
dec
jge
jno
xchg
gs
aam
cmc
inc
add
dec
mov
add
inc
xchg
cmpxchg
loopne
subl
mov
sahf
mov
fistpll
fistps
cmc
aad
cwtl
xchg
lret
test
jo
sub
add
dec
in
mov
sbb
mov
fstpt
add
lods
in
mov
bound
shlb
imul
je
das
xor
pop
adcl
std
sbb
outsl
lret
and
mov
or
int3
aam
jge
jle
hlt
addr16
mov
imul
ja
fs
jge
sub
fimull
mov
stos
scas
push
jmp
xchg
pop
ss
push
cmc
sbb
aam
movsl
jns
call
sub
adc
mov
jb
xchg
int3
jne
sbb
cmc
add
hlt
mov
sti
mov
mov
add
outsb
movsb
jne
jmp
ret
scas
xchg
repnz
mov
ja
push
lcall
stos
pop
test
cmp
mov
jge
int
jp
inc
ds
scas
fwait
stos
lret
mov
pop
fildl
leave
pop
sbb
movsl
mov
es
lcall
dec
pop
stos
pushf
or
in
aaa
loope
jp
clc
jno
jl
mov
popw
fcmovu
and
jno
xchg
movsb
pop
dec
mov
mov
movsl
inc
inc
imul
fistpl
fs
push
pushf
adc
xchg
mov
push
xchg
push
pusha
jmp
addl
xchg
out
dec
push
test
in
pop
mov
mov
xor
std
es
and
in
das
pop
jp
jno
cltd
ds
fmull
aad
popa
push
jnp
inc
xchg
scas
gs
fadds
xchg
ret
or
cmp
cmp
mov
mov
dec
in
aam
aas
mov
xchg
dec
sbb
xor
cli
invd
movsl
xlat
mov
cld
pop
cmc
mov
popf
push
insl
sahf
or
jle
ss
dec
add
popa
aam
jo
push
fsubl
xlat
push
dec
inc
iret
sahf
pop
inc
mov
jae
data16
fwait
cs
gs
ss
add
cmp
mov
pusha
int3
sub
cmpsl
cltd
or
inc
loopne
sub
pop
sahf
xor
int3
dec
sub
pop
sbb
stos
es
stos
lods
jle
ficomps
xchg
mov
mov
mov
ret
push
fwait
stos
push
pop
push
lods
add
push
imul
pop
fsts
arpl
fsubrl
insb
push
mov
xor
arpl
fsubr
dec
mov
mov
mov
mov
clc
sbb
pop
or
bound
loop
add
addr16
pop
leave
jge
adc
pop
test
repz
sub
orb
cmp
iret
push
mov
mov
out
push
sbb
push
lock
ds
fldenv
dec
cld
xchg
pop
in
and
dec
xchg
jg
fstpt
sti
jp
out
sbb
jle
sub
or
int3
out
out
stc
popf
clc
mov
sub
lods
adc
push
xor
popf
addr16
sahf
push
icebp
cmp
shrb
into
push
inc
xchg
lods
mov
sub
dec
das
fsubrs
into
test
fadds
imull
cmpsb
push
fidivrs
cmp
xchg
idivl
aaa
sbbb
rcll
in
cltd
sub
add
enter
fwait
out
sub
dec
adc
roll
add
push
loope
jnp
mov
insl
jae
in
hlt
push
sbb
sub
mov
jmp
out
popa
pop
paddb
lods
push
dec
pushf
pop
dec
or
ficomps
jns
dec
arpl
add
in
adc
fisttpl
test
mov
xor
cmp
out
add
pop
imull
pop
arpl
cli
or
pop
pop
repz
stos
xchg
pop
int
jle
es
mov
repnz
aam
pop
add
mulb
shll
cli
daa
inc
mov
aaa
inc
jge
mov
repnz
sbb
repz
arpl
dec
cli
add
out
push
gs
xchg
pop
out
scas
loopne
ror
jmp
jns
int
or
icebp
cmp
movsl
pop
sub
mov
out
xchg
pop
movl
sti
push
cmp
mov
pop
add
jmp
aad
aas
dec
dec
adc
sbb
sub
imul
imul
fisttps
jae
loopne
xor
xchg
add
repz
stos
into
outsb
sbb
lds
inc
mov
jo
lods
sti
mov
repnz
loope
mov
sahf
mov
push
cs
ljmp
loop
insb
add
stc
pop
dec
dec
xor
into
loopne
dec
andb
repz
xlat
cmp
jmp
sarb
dec
lahf
sahf
orb
mulb
gs
fists
mov
cmp
mov
adc
test
aaa
cmpsb
jp
cmpsl
bound
in
adc
bound
or
inc
imul
popa
hlt
loopne
and
cmp
inc
in
sarb
pushl
aam
lock
daa
out
xor
aam
xor
outsl
xchg
scas
imul
out
push
push
stc
push
mov
sub
cmp
mov
jp
push
ret
inc
lods
cmp
push
sub
mov
push
sub
inc
and
cmp
inc
popa
add
mov
aas
cmpl
aaa
aaa
xchg
dec
mov
or
pop
jbe
xor
sbb
in
jb
arpl
xchg
lret
shl
dec
pusha
jg
cmc
mov
in
jo
mov
lods
push
notl
cmpsb
or
dec
cmp
ja
push
push
aad
mov
scas
fs
fdivl
xor
ret
pusha
xchg
pop
dec
jno
test
ds
rcrl
push
pop
mov
add
jo
mov
mov
int3
ljmp
addr16
fcom
ret
cld
bound
cmp
or
add
sub
sahf
xchg
pop
arpl
stc
scas
pop
or
cmpb
adc
mov
xor
loopne
les
jle
lahf
aaa
sub
pop
dec
fisttps
imul
push
inc
das
jp
xchg
mov
stc
push
and
xchg
or
nop
rol
fs
lods
dec
shll
les
clc
fisttpll
mov
mov
or
sar
je
xlat
arpl
notl
test
shr
rclb
sub
ds
mov
imul
mov
adc
in
or
xor
std
push
imul
fwait
or
ss
rcl
dec
xor
adc
xor
hlt
mov
in
inc
inc
sbb
adc
pop
jecxz
sub
ljmp
pop
jbe
mov
mull
in
mov
scas
stos
arpl
jg
mov
or
or
lret
xchg
push
fucomp
fcmovb
xchg
adc
sti
ss
cmc
mov
sbb
push
dec
ja
xchg
inc
pusha
mov
fs
ljmp
mov
insl
scas
test
aad
loop
sbb
jle
outsl
test
and
bound
sub
mov
xchg
js
jbe
pop
cmp
mov
mov
push
sti
inc
loopne
or
jmp
lods
xchg
mov
daa
mov
imul
testl
dec
push
jb
clc
mov
popf
shlb
in
fucomp
enter
pushf
sub
clc
iret
pop
push
sar
sahf
in
std
shrl
pop
and
imul
ss
mov
repnz
mov
cmp
push
mov
std
popf
mov
loopne
cld
scas
out
stc
xchg
mov
test
xchg
xor
cmp
rorl
test
in
jo
mov
daa
inc
stc
sbb
sbb
test
sub
imul
fcmovnbe
scas
fisttpl
lea
les
shlb
mov
lods
jmp
movsb
jmp
enter
scas
sti
xchg
popaw
push
sub
sahf
mulb
test
addb
outsl
push
mov
cli
pop
mov
jecxz
jmp
lods
xchg
mov
rcl
ljmp
pop
adc
and
adc
loope
pushf
mov
test
cmp
xor
cs
scas
adc
xchg
movsb
aam
ret
add
push
cmpsb
in
xchg
loop
test
mov
dec
push
or
je
sub
pop
or
cmp
movb
xor
mov
mov
rclb
icebp
stos
jge
push
sti
or
out
cmp
push
push
and
xchg
add
dec
test
xor
mov
dec
rol
rcl
test
cmp
ret
aad
mov
jp
mov
mov
xor
std
sub
into
lret
cli
icebp
fs
mov
dec
inc
enter
pop
dec
sub
pop
mov
out
mov
push
aam
das
leave
push
mov
dec
xor
gs
jno
call
jecxz
inc
shll
jae
lods
xchg
sub
and
fmul
mov
jae
and
lock
out
dec
pop
and
lods
rsqrtps
test
sbb
pop
mov
xor
or
xchg
cltd
fs
in
cld
mov
cmp
fnsave
dec
sub
std
jnp
lock
sbbl
mov
cmp
mov
jecxz
and
mov
mov
lods
shr
fmul
push
ret
push
stos
rol
xchg
sbb
xchg
js
cmc
jo
nop
mov
ja
sub
aad
ss
cmpsl
cmp
fmul
jp
adc
lock
mov
out
jno
cmpsl
in
push
aad
daa
gs
lret
or
test
inc
aaa
jecxz
clc
mov
leave
xchg
ret
dec
push
lret
jg
push
sbb
test
jae
mov
mov
std
inc
mov
daa
mov
inc
mov
mov
adc
dec
mov
js
ficoms
notb
std
int3
pop
hlt
jge
dec
gs
or
js
loopne
not
push
mov
xor
shrl
push
dec
cmp
sub
test
or
xchg
pop
jne
pop
insl
aam
bound
test
dec
push
cmp
or
dec
and
dec
xchg
pop
push
mov
fldl
cld
call
call
dec
pusha
jl
loope
cld
and
stos
cmc
stc
out
and
rcrl
pop
std
mov
aas
shrb
fadd
sbb
je
push
or
inc
fs
jb
data16
mov
sbb
imul
pop
cld
hlt
lahf
mov
and
jnp
cwtl
or
push
loopne
fnstcw
popf
dec
xchg
test
fsts
jne
int
and
jp
mov
dec
xor
xor
cwtl
mov
pop
inc
scas
inc
push
ljmp
stc
pop
nop
adc
cmp
cli
ja
push
orl
adc
adc
daa
and
clc
adc
fstpt
fimuls
lods
fwait
imul
bound
cmp
add
and
dec
pop
pop
sbb
cmpsb
pusha
pop
test
mov
cmpsl
into
rcrl
aaa
add
inc
add
mov
pop
xchg
jnp
shll
cwtl
in
pop
stc
or
andl
int
jb
std
ss
xor
push
sbb
ljmp
pop
js
sar
scas
and
inc
sahf
adc
mov
andb
and
jo
scas
add
lods
dec
xor
add
cmp
jg
in
mov
inc
cmp
cmp
xor
sbb
leave
sbb
cmp
je
dec
pop
dec
lods
fisubs
cmp
xchg
inc
pop
or
sti
adc
jecxz
es
push
or
ficomps
pop
push
fs
scas
mov
test
sbb
into
outsl
push
clc
jbe
jle
loop
lock
decb
xchg
push
fisubs
cltd
cmp
leave
loope
leave
decb
lods
shr
fisubs
int3
inc
jp
es
mov
iret
xchg
jecxz
dec
adc
bswap
or
jb
sahf
in
clc
out
cmp
or
test
sbb
pop
repz
xor
gs
pop
jecxz
imul
mov
and
xor
pop
sub
dec
sar
or
movl
test
stos
int
add
dec
push
mov
mov
dec
pusha
jle
or
jne
add
lods
imul
mov
inc
ljmp
clc
imulb
jo
aas
jb
adc
shrb
inc
push
pop
sbb
mov
repz
icebp
lea
add
lahf
popf
push
mov
imul
sbb
cmpsb
fs
pop
pop
scas
sub
mov
bswap
rorl
lds
jbe
xor
leave
push
sbb
pop
mov
pop
sub
and
dec
and
jo
movsb
sub
push
adc
pusha
mov
das
xor
xor
outsb
aam
inc
mov
iret
nop
pop
pop
add
aam
insl
ja
xchg
in
daa
mov
xchg
pop
pop
mov
adc
mov
fmul
cmp
add
push
cmp
repz
pop
xchg
add
incl
push
lcall
pop
std
faddl
inc
cmc
les
mov
and
sahf
and
decl
push
pop
jns
mov
sub
sahf
pop
mov
xchg
test
xchg
inc
cmovbe
mov
jo
push
ljmp
pavgb
pop
hlt
je
pop
repz
adc
adcb
popf
xchg
or
pop
es
rclb
test
or
cmpsl
es
bound
push
xchg
xchg
pop
shlb
add
sub
mov
pop
cmp
xchg
into
push
cmpsb
les
cmp
push
lret
popa
ja
cmpsl
jp
imul
fnstenv
imul
push
stc
imul
das
jmp
push
movsl
sub
clc
and
lret
mov
add
mov
cmp
ret
js
in
sub
mov
outsl
pop
and
out
xor
xor
jbe
test
mov
nop
sti
inc
cmp
popa
jg
inc
mov
xor
dec
adc
adc
dec
inc
int3
lcall
clc
xor
mov
arpl
and
add
jge
clc
shrb
fnsave
add
pop
jecxz
lods
in
cmp
mov
daa
push
mov
ja
jecxz
xadd
xchg
aas
outsl
fcoml
ja
cmpsb
pop
and
ja
imul
lea
cmp
neg
sbb
sahf
adc
loope
cmp
sbb
push
ljmp
add
fwait
outsb
mov
data16
popa
xchg
pop
in
mov
mov
adc
rcr
cmp
or
shll
fld1
out
xchg
push
dec
fsub
mov
test
inc
mov
cmp
mov
je
aad
mov
jnp
cmc
pop
jecxz
add
lods
push
add
add
push
jb
mov
sub
push
cmp
test
sub
cmp
out
mov
pop
in
push
pop
dec
in
jbe
sub
pop
add
scas
in
push
lods
jge,pt
dec
pop
lock
stc
fmulp
pop
xchg
fwait
cli
aad
mov
fnstsw
fnstenv
pop
gs
lret
pushw
dec
and
popa
mov
scas
sub
sbb
out
daa
divl
push
mov
xchg
cmp
mov
mov
aad
std
cmpsl
sub
pop
testb
mov
call
xchg
xchg
jecxz
push
test
lret
bnd
negb
pop
and
mov
xor
mov
add
rcr
shlb
test
mov
mov
adc
xchg
mov
pop
or
orl
test
pop
pop
or
push
push
imul
fdivrs
pop
mov
movsb
cmpsb
pop
lods
inc
pop
iret
add
mov
sbb
and
pop
pop
jg
fistpl
rcl
and
fcmovbe
add
push
cmp
mov
mov
push
xor
imul
rcr
jnp
imul
fcmovnu
and
or
lcall
fwait
xor
into
pop
dec
sbb
xchg
jl
call
mov
push
test
add
cmp
aad
insb
mov
lods
outsb
dec
cltd
ficoms
jmp
jle
sahf
or
xor
int
loope
mov
imul
daa
adc
subl
inc
mov
lret
in
push
xchg
xchg
les
cmp
fadd
ss
fucomp
inc
pop
cltd
xchg
jl
cmp
dec
or
mov
mov
data16
enter
call
lret
or
mov
shlb
dec
mov
xchg
movsb
scas
jp
sub
or
jmp
je
inc
outsb
adc
pop
add
adc
add
out
shl
cmp
xorl
mov
sub
ja
cmp
adc
mov
mov
lods
jbe
jb
xchg
cwtl
mov
fildl
add
xor
mov
addr16
and
cmp
loop
cltd
test
jb
and
les
sbb
add
int
ss
loopne
movsb
pop
add
decl
mov
in
xor
xor
pop
xchg
mov
lock
mov
pop
sti
ss
cmp
and
dec
xor
mov
jl
lods
daa
push
push
shl
icebp
cmp
jge
lea
dec
rclb
push
rcrb
cmc
ds
pop
and
push
ror
imul
popa
inc
fdivr
inc
jbe
movsl
mov
pop
mov
call
sub
xor
pop
mov
jle
mov
pusha
inc
adc
in
xchg
xlat
ss
mov
pop
nop
pop
insb
ret
xchg
adc
xchg
lret
test
js
inc
pop
int
outsl
dec
fsubl
rorl
sahf
fimuls
sub
and
popa
push
stos
pop
mov
jecxz
roll
xchg
and
into
sub
bound
hlt
or
setb
dec
lock
mov
fisttpl
data16
pop
cs
ret
decl
xor
cmp
jg
pop
push
outsl
pop
dec
fsubs
cmp
dec
inc
xchg
sti
or
mov
aad
mov
call
inc
sbb
in
mov
push
xor
and
sub
add
sbb
inc
jg
pop
jne
arpl
insl
push
stc
push
and
cmpl
insl
push
and
xorb
ret
cmp
mov
outsl
dec
or
mov
jecxz
mov
push
fimuls
incl
xor
and
xchg
xchg
push
push
adc
jmp
lods
imul
in
xor
jecxz
jb
dec
repz
lds
jecxz
negb
lds
adc
mov
cli
push
aaa
lret
cmc
repz
pushf
push
push
xchg
fcmove
cmc
add
mov
push
ficoms
fwait
jmp
mov
mov
mov
int
pop
jns
lcall
cs
out
adc
nop
fiaddl
cmp
push
adc
incl
test
les
mov
cs
inc
push
and
cld
jmp
aaa
pusha
mov
ds
mov
add
push
mov
add
sub
xor
xor
fdivrs
inc
test
pop
filds
mov
cmp
stc
push
aam
and
push
push
mov
repz
pushf
inc
cmpsb
push
cltd
sar
pusha
nop
fldt
leave
push
lods
xchg
ret
in
sbb
scas
mov
cmp
mov
add
cltd
imul
loope
pop
sub
push
mov
sub
les
xchg
lcall
push
aad
loop
scas
mov
hlt
add
and
stc
dec
fdivl
or
jno
testl
sbb
outsl
add
adc
mov
push
daa
and
inc
sbb
lcall
xor
jle
jnp
pushf
or
sbb
adc
mov
dec
nop
and
cmp
push
loop
adc
mov
sub
mov
mov
pop
mov
lahf
js
sub
idiv
jnp
mov
adc
mov
push
inc
out
or
mov
stos
ret
cld
shrb
int
sbb
fisttpl
pop
movsl
loop
and
add
or
aaa
call
shrl
push
jle
int3
insl
fistl
pop
pop
mov
sbb
lret
mov
out
out
cmc
aam
add
add
sub
decb
dec
dec
movsb
loop
inc
xchg
mov
mov
scas
sbb
scas
bound
mov
sbb
in
pop
mov
fnstsw
incb
push
orl
push
mov
xstore-rng
cmpsl
test
adc
insb
fists
push
loop
popf
lret
fadd
dec
popf
sbbb
hlt
pop
cmp
and
adc
dec
repnz
pushf
adc
xchg
out
push
pop
cmpsl
dec
push
lods
ds
dec
int
xchg
inc
test
mov
cmpsl
mov
dec
mull
inc
cmp
call
fmull
or
sahf
sub
js
cmp
xor
lock
jge
in
mov
inc
jecxz
out
xor
mov
jb
xchg
fisttpl
dec
inc
mov
sbb
pop
sub
pop
mov
cltd
adc
jb
fistpll
adc
push
jns
add
jl
xchg
cld
mov
stos
pop
adcb
clc
lods
lods
repnz
insl
outsb
sub
jg
loop
aaa
icebp
sub
ret
inc
xchg
mov
lods
popa
mov
inc
add
mov
push
mov
push
pop
inc
dec
repnz
jns
jno
xchg
jno
dec
repz
pop
aas
push
ret
pop
call
jp
pop
enter
int3
scas
xchg
mov
in
mov
dec
mov
push
add
mov
cmp
inc
test
mov
rol
les
pushf
pop
insl
and
out
in
and
mov
jns
les
mov
mov
mov
pusha
sti
mov
jb
and
fsubrs
mov
xorl
mov
push
int3
je
sbb
dec
loope
negb
sahf
pusha
xor
cli
arpl
rolb
push
std
inc
fwait
or
cmp
jp
mov
fs
dec
nop
icebp
pop
mov
push
sub
decb
in
dec
ja
push
mov
push
push
mov
push
push
inc
mov
pop
cmp
jnp
outsl
jg
inc
xchg
xor
adc
pop
pop
aaa
cmp
mov
cwtl
outsl
inc
out
or
cmp
mov
in
push
add
xor
pop
cwtl
mov
xor
mov
hlt
mov
xchg
addb
jnp
in
sub
xor
dec
adcb
xchg
inc
add
fdivrl
lods
ret
xorl
mov
imul
push
std
add
dec
mov
ret
sarb
hlt
add
inc
sbb
lods
cmp
es
ljmp
mov
sub
ror
outsb
jl
inc
aas
sbb
stos
outsl
mov
sbb
push
ret
pop
mov
dec
mov
jmp
mov
add
icebp
repz
daa
lahf
rcrl
inc
nop
repnz
dec
add
pop
nopl
cmp
mov
xlat
aam
mov
stc
shlb
cld
cmpsb
nop
out
lret
adc
fcomip
push
std
sbb
dec
xchg
adc
subl
push
je
adc
fidivrs
sub
push
mov
pop
adc
sahf
fwait
ret
inc
jle
jno
lahf
subb
ljmp
call
xor
jmp
clc
add
push
lahf
lock
lcall
orl
and
daa
inc
test
xlat
rolb
push
sbbl
hlt
imul
xor
mov
cli
xchg
imul
test
testb
sub
add
xor
inc
dec
add
push
ljmp
mov
call
jl
mov
aaa
and
mov
mov
bnd
into
mov
dec
filds
pop
mov
jbe
adc
fwait
es
jg
and
inc
xor
pop
pop
mov
and
xchg
xor
hlt
mov
cmp
icebp
mov
adc
jno
xor
lcall
or
jecxz
jl
scas
popa
adc
mov
mov
sub
ror
scas
movsb
adc
pop
imul
jmp
out
in
aam
sub
pop
jge
add
push
daa
jecxz
mov
test
mov
sti
adc
cli
pop
jmp
dec
sub
je
pop
jmp
inc
idiv
stos
daa
outsb
xor
int3
out
inc
mov
subb
jge
outsl
inc
jmp
push
mov
repnz
shlb
cli
mov
sbb
fcomps
popa
shr
mov
hlt
ja
test
add
pop
dec
imul
fcoms
and
inc
fs
shll
jmp
bound
and
cmp
dec
and
sub
mov
push
sti
std
cwtl
or
xchg
std
mov
ljmp
and
fldz
subb
cld
loope
mov
add
iret
adc
lock
pusha
inc
mov
lock
push
or
adc
sbb
stc
stos
cld
scas
push
mull
add
mov
dec
lcall
cmpl
mov
adc
jb
not
pop
cli
add
sub
test
outsb
or
cmp
xor
xor
xchg
inc
sub
mulb
xchg
or
sub
inc
insb
xor
shl
and
mov
ret
pusha
push
pop
in
cltd
push
ja
test
mov
stc
fsubp
orb
inc
lods
jge
push
jnp
lods
ss
sti
add
inc
dec
bnd
in
jp
add
nop
leave
sbb
adc
inc
mov
pop
cli
int3
lock
loop
or
dec
push
mov
xchg
dec
out
mov
js
mov
jns
adc
cmpsl
sub
mov
jp
shl
test
ret
test
lock
ja
pop
or
popl
mov
in
dec
fldt
push
fs
jmp
aam
mov
lock
int3
cltd
sbb
ret
mov
addl
pop
cmp
and
aaa
fidivrl
inc
add
imul
stos
je
xor
mov
sbbb
inc
sbb
xlat
sbb
test
test
lret
and
push
sti
movsb
out
daa
leave
negl
push
cmp
mov
xchg
cmp
andl
xchg
testb
pop
loope
fwait
rorb
push
xchg
jle
xchg
xchg
data16
pop
mov
fstl
cltd
inc
and
sarb
aaa
and
xor
xlat
push
cmp
cmc
sarb
aam
call
sbb
cmp
cmp
ds
push
dec
daa
pop
xor
sarl
sub
mov
cmp
nop
insb
sub
movsb
cli
scas
mov
xchg
or
in
fldenv
sub
and
add
loop
or
lret
or
les
jbe
test
sti
mov
and
jle
sbb
xchg
dec
shll
jl
test
mov
pop
dec
sub
sbb
rorb
jg
sbb
pop
inc
cmpsl
idivb
fisttps
xchg
mov
dec
test
ret
mov
in
sbb
rclb
lcall
fcomp
ret
cmc
aam
xchg
movsl
adc
inc
insl
ret
mov
mov
cmc
jns
inc
popf
inc
jo
ja
movsb
int3
lods
add
pop
jmp
xchg
pop
jnp
mov
nop
lcall
dec
sub
cmp
pop
mov
or
or
mov
dec
scas
loope
cmovo
jae
stos
adc
sub
insb
mov
shl
push
roll
cmp
fdivrs
mov
call
ret
mov
outsl
sub
cmp
test
insl
xchg
shr
push
scas
sarb
xchg
xchg
rcl
out
ss
sbb
outsl
sbb
push
xlat
sub
mov
mov
stos
add
or
arpl
stos
repz
out
sub
push
fs
aad
push
lcall
mov
scas
ror
inc
sbb
mov
cmc
jmp
loopne
sub
outsb
xchg
xchg
enter
adc
or
test
repnz
js
shrb
jl
mov
stos
movsb
sub
fisubs
sbb
lcall
xorl
sub
aas
jb
imul
inc
fwait
mov
sub
pop
mov
pop
mov
jb
jns
sub
xor
mov
adc
xchg
or
jne
xorb
sahf
outsl
push
sbb
sub
insl
cmp
sar
push
iret
jl
repnz
leave
mov
cmp
or
test
mov
inc
push
cmpsl
pop
add
in
cmpsl
addr16
dec
xor
test
mov
mov
int3
stos
cmp
cmp
pop
popaw
xor
mov
ja
hlt
push
dec
xor
fbstp
lahf
aad
repz
addb
jnp
scas
push
xlat
push
cld
leave
sub
mov
cmp
adc
mov
ret
mov
cmpsl
ja
sub
inc
or
mov
mov
add
xchg
mov
push
outsb
push
stos
jns
push
jp
pushf
or
or
fidivrs
xchg
xor
fwait
push
stos
xlat
stos
cmc
sub
jg
inc
add
cltd
push
addb
and
sbb
iret
jmp
out
lret
stos
cmp
outsb
movlps
pop
xchg
sub
dec
sahf
push
push
push
mov
out
mov
clc
mov
dec
push
mov
hlt
lret
ret
jbe
iret
insl
or
into
in
lahf
mov
cld
je
dec
sbb
test
mov
out
mov
mov
xchg
inc
jp
rclb
xchg
mov
rcll
mov
ss
stc
xchg
fiadds
pop
add
outsb
dec
cmp
sbb
aam
rorb
xlat
sbb
ja
es
jmp
adc
and
pop
pop
inc
mov
xor
fwait
test
lret
int3
adc
divb
addr16
mov
in
jne
or
xchg
sbb
mov
sub
add
add
push
call
aad
fstps
jne
js
mov
jl
movq
in
in
cli
mov
adc
inc
js
in
push
mov
faddl
inc
mov
or
test
sub
scas
sbbb
nop
cmp
rcr
shrl
mov
fwait
loope
jge
arpl
mov
mov
pop
les
cltd
out
lret
lods
push
push
mov
mov
aad
dec
adc
test
jne
lahf
add
int3
shll
jbe
xlat
push
filds
or
jno
inc
and
push
or
xchg
adc
out
data16
sub
lret
jns
sbb
push
sub
inc
in
sub
mov
imul
fidivrs
adc
xchg
sti
imulb
dec
bound
dec
push
into
fldt
xchg
cmpl
mov
outsl
movsl
push
lahf
lret
sti
js
imul
aaa
js
in
sub
pushf
hlt
es
add
stc
iret
in
mov
insb
or
ss
cmpsb
insb
and
pop
popa
pop
adc
or
and
cli
test
cs
lods
mov
push
lahf
mov
jge
mov
mov
fdivs
ficompl
test
xor
imul
or
pop
jb
push
and
lods
cld
mov
loop
mov
pop
cli
lods
lret
cmp
imul
test
xorb
cltd
hlt
ret
xchg
nop
fdivl
sti
rcrb
xchg
mov
jmp
dec
imul
lds
out
mov
jl
push
pop
dec
nopl
cmpsb
sbb
mov
and
add
jecxz
mov
sbb
into
lret
cmpsl
push
mov
movsl
les
std
out
ja
fwait
imul
jg
cmpsb
and
inc
es
test
dec
mov
loopne
mov
shrb
sub
ficompl
adc
outsl
mov
xlat
jne
cmpsb
dec
psadbw
and
jae
xchg
sar
xlat
pop
int
pop
mov
int
mov
dec
insl
fisubrl
mov
loopne
inc
mov
xor
inc
mov
dec
in
je,pn
not
js
pop
fnstcw
dec
or
les
mov
rcll
push
xor
jl
mov
fdivrl
inc
sbb
lods
mov
lret
sub
add
stos
xchg
in
mov
mov
add
mov
mov
dec
cld
xchg
dec
jmp
clc
mov
nop
lret
sbb
push
shlb
sbb
mov
lock
add
and
mov
jmp
cltd
movsl
xor
std
sbb
sarb
fildll
js
repz
mov
or
decb
cli
aas
or
aaa
mov
push
push
scas
rclb
fldt
mov
insb
jae
fsubrs
andl
lods
mov
das
in
mov
push
add
cmpsb
nop
pop
or
and
cmovg
hlt
mov
pop
ja
insl
or
dec
arpl
bound
sbb
insb
mov
mov
jns
or
das
pop
lds
mov
dec
shr
popf
sub
popw
cmpsl
cmp
fwait
in
ljmp
or
aam
push
adc
les
pop
fcmovnu
repnz
out
xchg
out
outsl
pop
inc
mov
out
mov
popa
mov
sub
add
aad
fadds
and
lock
icebp
rcl
push
inc
data16
and
xor
mov
sti
ficoml
imul
or
jp
xor
lods
test
add
jg
jno
or
xchg
testb
sub
ret
or
ja
mov
pop
push
jp
or
push
xor
cltd
jne
inc
sub
cli
inc
jno
dec
and
xor
xor
push
loop,pn
insl
insb
movsl
inc
xchg
cmpl
jns
dec
call
inc
movd
imul
clc
fidivs
lock
xor
inc
scas
cmp
in
into
sbb
inc
mov
and
daa
pop
mov
xchg
mov
ja
xchg
loop
sub
adc
int
nop
mov
sbb
pop
dec
lret
sub
scas
push
icebp
mov
out
aad
sbb
lret
xchg
sbb
shl
pop
jns
mov
icebp
cwtl
clc
popf
mov
and
dec
push
and
xor
adc
cs
enter
dec
mov
addb
cmp
lahf
inc
popf
lcall
in
cmc
push
xor
add
add
lock
std
sbbb
push
in
cmpsl
and
ds
mov
add
clc
dec
sub
ret
sarl
adc
inc
aam
gs
cli
pop
push
inc
sbbl
jbe
mov
lods
sbb
mov
fs
int3
movb
or
xor
jmp
mov
rcrl
and
repnz
les
std
xor
dec
icebp
imul
mov
pop
into
cli
or
mov
fcomp
cld
mov
mov
test
loop
jmp
in
imul
es
jb
mov
out
jbe
pushf
or
mov
mov
xor
or
sub
dec
or
out
arpl
mov
mov
data16
stc
jp
rorb
push
mov
pop
jbe
or
and
test
mov
inc
dec
sbb
pop
cltd
push
js
lds
inc
mov
sbb
lea
or
test
jb
add
ds
clc
xor
shll
popl
inc
add
lods
and
jo
scas
cmp
ljmp
jg
pop
stos
dec
adcl
insl
cltd
sub
je
je
ljmp
nop
int
cmp
insl
add
pop
test
sbb
dec
enter
fbld
xor
or
sub
dec
andb
lret
mov
push
mov
xlat
pop
jo
cmp
decl
and
mov
leave
aaa
daa
cmpsb
jmp
inc
or
cltd
test
and
insl
dec
xchg
pop
lret
adc
and
xchg
mov
xor
xchg
and
loop
jo
clc
lret
pop
and
mov
shlb
cmp
inc
pcmpeqb
xor
xchg
out
ds
mov
inc
push
aaa
xchg
cwtl
ds
pop
cltd
out
jl
movsb
imul
stos
nop
fnstenv
cmpsl
fimuls
jnp
xchg
jg
mov
aad
push
test
mov
out
repnz
ret
and
imull
pop
mov
scas
cmp
rcl
les
pushl
rolb
sbb
in
call
xchg
scas
sub
ja
cwtl
out
pop
dec
fwait
cmc
or
add
inc
fimull
push
xchg
in
push
add
mov
incb
int3
mov
add
adc
lock
xchg
ret
into
scas
mov
fnstcw
xchg
lcall
xchg
pop
imul
in
cs
movsb
fisttpll
and
push
pop
xchg
js
scas
xor
adc
aaa
inc
leave
dec
push
test
mov
cmp
repz
mov
push
add
mov
mov
sbb
ja
daa
inc
outsl
dec
sub
add
dec
dec
ret
loopne
pop
adc
jae
sarb
mov
and
pop
fs
repz
mov
ja
int
movsb
mov
inc
mov
nop
jns
xor
jl
divb
jnp
mov
sbbl
inc
mov
pop
xchg
out
js
dec
cs
popf
dec
and
mov
ficoms
mov
leave
jl
fstpl
or
fdivl
mov
sub
imul
ret
in
mov
es
add
cmpsl
or
mov
cmp
rcrl
sub
mov
mov
dec
dec
cmpsb
dec
mov
push
push
fcmovne
mov
or
inc
xchg
xor
clc
cmpsl
fcoms
or
mov
mov
pop
jns
dec
mov
hlt
push
pop
loope
stos
jecxz
push
fcoms
dec
or
lock
cwtl
js
push
push
cmpsb
adc
mov
cmp
inc
or
loop
aaa
xchg
xor
push
mov
gs
and
inc
xchg
xlat
jb
mov
leave
inc
jns
mov
xor
pop
or
ret
popf
jbe
dec
hlt
cltd
jns
xchg
push
sub
fs
jp
shr
sbb
lret
in
test
fistpl
dec
mov
imul
out
icebp
cmp
sbbl
divl
rorl
lds
jns
clc
sbb
in
test
lds
sub
dec
test
add
popf
adc
pop
sbb
push
cmp
or
add
stos
outsb
adc
jo
xor
sbb
xor
mov
sub
jnp
add
cmpsl
fs
and
dec
stc
and
mov
jne
adc
adc
and
test
adc
or
in
scas
mov
loop
dec
or
imul
lcall
cmp
lea
addl
jne
mov
and
inc
jno
mov
outsl
and
adc
lods
mov
and
rorb
sbb
repnz
mov
imul
xor
pop
imul
mov
xchg
adcb
out
fwait
inc
or
icebp
bound
cmpsb
fdivr
or
xchg
outsl
scas
add
mov
ja
movsb
hlt
rol
daa
in
aam
or
test
pop
or
das
stos
xchg
mov
into
outsl
lcall
xor
ja
leave
jbe
jne
movsl
fistpll
cmp
leave
push
xor
lods
cmp
dec
add
or
mov
inc
daa
insl
out
jp
ret
xchg
jo
sahf
mov
sub
mov
and
int3
scas
push
pop
lea
sbb
dec
sub
and
inc
test
movsb
push
int
jnp
aaa
jle
addr16
aam
add
pushf
mov
xchg
mov
mov
lret
data16
popf
and
faddp
xchg
and
lret
xor
sbb
add
es
into
xchg
and
and
js
xlat
add
lar
and
mov
hlt
xchg
and
pop
xchg
fisubl
mov
mov
mov
popl
cmpsb
and
sbb
aaa
mov
pop
divl
sub
mov
cmp
in
sbb
jns
test
les
imul
call
or
adc
sti
lea
push
lods
fcmovnbe
push
cmc
dec
jo
mov
inc
or
xor
or
mov
add
sbb
dec
pop
aam
mov
mov
in
xor
adc
in
aas
xchg
leave
or
cmp
aam
aam
xor
jbe
pop
pop
lock
movsb
jge
adc
pop
xor
cmp
or
jge
fdivrs
pop
loopne
cmc
sbb
or
jbe
pop
fwait
or
nop
push
loop
rcrb
jnp
mov
or
push
pop
xlat
test
push
inc
test
test
aam
inc
push
sarl
push
mov
xchg
lahf
aas
pushf
adc
in
aas
pusha
or
ret
mov
xlat
pop
cmp
enter
jns
or
xlat
xchg
xchg
mov
dec
adc
loope
cmc
inc
fwait
xchg
jmp
popa
inc
add
leave
xchg
fldenv
iret
imul
enter
dec
lahf
das
dec
mov
dec
xchg
sub
int
jns
std
and
imull
jno
xorl
adc
push
mov
push
xor
dec
add
cmp
in
add
popf
repnz
jge
insl
sbbl
and
sub
mov
push
cmp
ds
inc
pop
dec
push
xchg
fistl
insl
pusha
adc
lock
adc
in
in
xor
lret
ret
dec
rcr
js
pop
shll
pop
lds
std
movsl
sti
ljmp
sub
push
jl
in
scas
lods
lcall
pop
ja
push
xor
cmc
mov
jb
mov
sbb
ja
ljmp
mov
inc
sahf
rcrl
int
mov
rol
xchg
push
mov
hlt
cmp
or
sti
push
lret
int3
dec
nop
xchg
jne
push
movsb
sub
jns
je
xchg
das
pop
jbe
cmp
and
imul
insb
stos
stos
pop
xchg
sub
pushf
xchg
cmp
int
aaa
icebp
sbb
loope
push
dec
dec
pop
lods
jne
inc
inc
ret
movsb
sub
cmc
xor
shrl
dec
xchg
sahf
hlt
jns
pop
pop
or
out
int3
pop
faddl
addl
jb
lea
mov
mov
pop
outsl
xchg
dec
mov
int
and
arpl
pop
and
pop
aam
push
arpl
test
jno
lret
xchg
gs
rcll
les
out
inc
push
shl
and
aas
gs
inc
gs
loop
ficoms
or
pop
jb
lcall
sbb
test
xchg
jne
mov
movsl
and
out
leave
aaa
mov
cmp
add
gs
call
in
sub
pop
aad
pusha
cmpsl
sti
in
cli
xchg
push
movsl
sahf
pop
call
sbb
adc
data16
lods
ja
sbb
loop
jge
cmp
push
xchg
lea
add
faddl
sub
dec
leave
addr16
aas
sbbb
mov
cmpb
in
adc
popf
inc
stc
scas
pop
push
cmp
inc
les
fcmovnbe
xchg
and
add
push
test
push
mov
imul
repz
xor
xor
jmp
pop
pop
cld
fidivs
xor
das
lcall
add
mov
and
push
push
cmp
mov
mov
sub
je
insl
add
cmp
mov
xorl
or
daa
inc
inc
xchg
cli
addr16
inc
and
cld
push
jmp
jecxz
pusha
pop
dec
and
xchg
jno
push
xchg
or
xor
push
int
fs
cld
enter
push
std
cmp
out
dec
cmp
xrelease
ja
mov
test
adcl
sub
xchg
fs
push
cli
mov
test
xlat
ret
xor
pop
jp
or
imul
out
jo
ljmp
test
push
push
or
test
push
dec
cmp
hlt
ret
cmpsl
sbb
data16
repz
jg
fstpt
mov
pop
test
pusha
and
and
pop
addr16
cmp
or
pop
xchg
scas
outsl
jbe
xor
push
sub
inc
loop
and
les
das
jb
cmpsb
jl,pn
cmp
pop
xchg
push
repz
and
int
out
sub
jg
test
fbld
add
xor
fsub
hlt
push
sub
nop
cmp
inc
push
imul
ja
inc
jge
push
or
sarb
pop
adc
pop
arpl
lahf
mov
xor
mov
sbb
test
mov
dec
dec
pusha
nop
test
xchg
sub
dec
mov
pop
sahf
add
imul
lock
cli
lds
jne
gs
xchg
add
add
andb
mov
cmp
out
mov
push
lahf
jno
sub
xchg
jmp
xchg
xchg
js
sbb
adc
push
add
ss
or
mov
sub
jbe
in
insb
sarl
dec
jbe
push
lds
push
pusha
shll
xor
lret
pop
cs
xchg
cli
and
pushf
sub
sarl
xor
cmp
sub
fdivp
ret
imul
and
addl
jmp
mov
dec
xor
xchg
sbb
leave
jns
cmp
fcompl
xor
mov
add
mov
xor
int3
xlat
imul
xchg
fldt
mov
and
xchg
mov
adc
outsl
loopne
inc
sub
shr
adcl
ret
lock
hlt
sti
jg
cmp
pop
fsubrl
test
cmp
pop
inc
jl
adc
fcomps
cs
mov
and
ljmp
inc
test
sahf
pop
hlt
fdivr
push
xchg
stc
pop
mov
cmp
mov
out
push
rolb
adc
sbb
out
roll
popf
pop
incl
outsl
dec
outsb
inc
fdivrl
mov
in
push
and
sub
xor
mov
insl
stos
jo
addl
mov
rcl
mov
mov
and
add
jg
fcmove
rcll
rol
push
dec
xchg
xchg
cs
push
push
faddp
div
aad
fwait
mov
inc
lods
lea
popf
aaa
push
mov
fxch
scas
fs
pop
fsubs
popa
fwait
outsl
dec
dec
or
xor
adc
inc
cmpsl
sahf
xchg
decb
out
mov
loopne
gs
into
xor
xchg
xchg
les
fsubs
lds
aaa
adc
mov
test
out
adc
and
icebp
xchg
in
movsb
sbb
test
cmpl
testb
or
stc
mov
cmp
imul
lret
shll
mov
jle
adc
cmp
pop
into
mov
pop
xor
test
or
iret
or
and
test
daa
ljmp
fisttpl
mov
into
or
int
xchg
cs
xor
aam
xchg
and
int
into
xor
push
inc
and
insb
and
xchg
test
dec
out
mov
prefetcht0
mov
inc
sub
mov
and
scas
cmp
shll
dec
inc
pop
push
negl
cmpsl
jge
sbb
jno
dec
inc
mov
cwtl
test
pop
mov
js
sub
das
fcom
nop
mov
sti
out
stc
setnp
shll
jp
mov
or
arpl
jno
repz
or
loope
test
out
inc
bnd
adc
fldt
imull
lret
scas
sbb
fstpt
mov
out
outsl
add
das
sub
dec
test
stos
push
ds
xchg
mov
in
and
dec
hlt
insb
add
dec
sub
and
lods
sub
inc
and
and
mov
jno
out
push
shrl
pop
popl
cmp
popf
das
mov
jns
and
and
xorb
bound
movsb
hlt
mov
test
dec
scas
daa
int3
sbb
pop
sub
push
and
cmc
sbb
loopne
ret
adc
movsb
pushf
popa
decb
mov
in
xor
mov
push
imul
add
xchg
nop
out
add
mov
mov
push
call
and
xlat
xchg
jge
inc
inc
iret
dec
bound
cltd
bound
filds
mov
ljmp
push
inc
call
leave
jecxz
xchg
jmp
fmull
or
or
lods
inc
xchg
mov
cmp
test
sbb
out
inc
pop
test
outsl
push
xor
test
adc
jg
pusha
and
insb
jbe
nopl
push
aam
mov
or
sahf
jne
push
mov
dec
stos
pop
push
int3
add
in
ljmp
andl
sarl
mov
out
clc
adc
pop
cmp
adc
cmp
push
insl
add
mov
push
cmc
int
xor
mov
mov
lret
pop
lret
xchg
mov
and
ja
dec
lret
lds
xor
stc
jp
insl
adcl
inc
stc
cli
lahf
ss
call
adc
lods
push
adc
popf
jle
shlb
jecxz
repnz
jne
cltd
test
nop
xor
cmp
or
iret
iret
inc
and
hlt
fchs
testb
sbb
adc
mov
bound
xor
jno
jg
add
inc
aas
mov
sbb
enter
inc
ds
mov
mov
jno
jns
popf
and
cwtl
jge
or
cs
pusha
sbb
push
jecxz
dec
and
xlat
aaa
xchg
jg
mov
mov
sbb
push
fistps
jg
gs
outsl
pop
or
icebp
sbb
xor
sbb
test
xlat
sbb
pusha
aam
les
stos
mov
rolb
adc
xor
je
mov
mov
inc
test
mov
push
or
push
aam
push
push
add
dec
pop
cli
mov
sub
push
into
mov
repz
jno
pushf
sub
dec
sbb
ret
jns
out
fs
cmp
mov
push
lea
jb
testb
idivb
mov
dec
jbe
inc
dec
rcll
inc
mov
pop
sub
pushf
test
and
mov
pop
bound
sbb
test
ret
push
mov
push
sbb
adc
imul
or
mov
cmpsb
dec
fistpl
xor
pop
in
ljmp
ret
pop
inc
scas
in
imul
loope
mov
mov
arpl
mov
sahf
test
mov
in
dec
ja
mov
iret
inc
add
pop
xchg
sahf
repz
and
loop
mov
jmp
add
jmp
jae
mov
mov
stos
std
add
ss
sub
push
inc
shll
out
xchg
push
xchg
fisttpll
jb
repz
lcall
lds
pop
daa
cmp
in
push
add
xor
cli
jl
outsl
mov
mov
push
xor
cld
push
popf
push
js
mov
pop
push
mov
hlt
mov
xchg
jl
adc
cmpsb
inc
adc
arpl
xchg
clc
and
xchg
rcll
into
jp
mov
xor
mov
loop
sbb
mov
cmpsb
pop
push
test
inc
lahf
sarl
shll
mov
lods
xor
movb
jbe
push
imul
mov
out
lea
cmp
lahf
lret
xorb
cmp
shlb
les
mov
jbe
rcrb
in
adc
aaa
pop
rclb
push
mov
shll
mov
inc
sbb
cmp
sahf
cmc
push
push
and
rolb
xchg
pop
push
pop
mov
mov
mov
fdivrs
and
and
dec
xor
pop
adc
cmp
fbld
mov
add
data16
pop
sti
mov
inc
fimuls
inc
call
dec
shll
out
fildll
daa
fnstcw
mov
aad
mov
pop
xlat
in
dec
xchg
xchg
dec
dec
cmp
pop
sbb
not
jle
pop
dec
jno
ffree
mov
add
pop
xor
orb
test
cmp
cli
push
cmp
cmp
int
jbe
add
out
test
outsb
cmp
jl
jg
dec
popf
fwait
inc
cmp
sub
xor
in
clc
int
les
pop
push
mov
out
mov
js
or
sub
loope
inc
das
cmc
negb
push
pushf
stos
mov
dec
mov
js
and
je
lock
sahf
shll
insl
mov
xor
xchg
mov
pop
add
dec
push
sub
mov
jnp
mov
rorl
add
negl
fisubrs
push
stos
leave
xor
jecxz
js
jb
add
jne
pop
inc
mov
mov
and
cmp
out
cmp
sub
popf
jns
mov
frstor
sbbl
sahf
add
fptan
pop
dec
sbb
sbb
push
fs
stos
idiv
push
push
push
nop
mov
dec
pop
mov
je
xor
push
add
or
pop
pusha
repnz
adc
pop
fildll
dec
dec
dec
dec
and
into
xor
and
addr16
fimull
cmp
mov
movsl
cmc
jo
sub
movsb
or
out
xchg
into
xor
test
xor
out
sub
or
cwtl
jae
cmp
imul
mov
mov
jb
mov
jae
js
xlat
nop
inc
scas
fisubs
sub
fldenv
imul
adc
adc
pop
pushf
dec
shlb
jbe
sbb
cmpsb
lret
jmp
mov
xor
pop
cs
ljmp
call
xor
jl
test
sub
shll
mov
add
adc
add
inc
mov
or
mov
les
call
jne
lret
dec
fcmovnu
add
out
test
mov
mov
shlb
mov
popf
mov
in
mov
push
mov
push
fmulp
rcll
mov
cmp
push
or
inc
mov
data16
dec
std
inc
les
sbb
pusha
jns
arpl
sub
inc
lods
ja
adc
aad
xor
xchg
aam
lcall
push
jae
xchg
cmpsl
or
jl
mov
insb
sbb
sbb
dec
fwait
inc
cmpsb
cltd
adc
xchg
fsin
ds
test
js
inc
push
loop
mov
cmp
imul
repz
jmp
stos
stos
test
cli
and
inc
and
add
and
mov
mov
lret
ficomps
loop
ror
adc
stc
movsl
ficoms
rcrb
push
cld
fcmovbe
inc
dec
jl
movsb
rep
xor
pop
fldt
adc
add
in
or
and
fdivl
repz
push
sub
or
repnz
nop
sub
push
ficoml
outsl
pop
pop
pop
and
mov
sbb
pop
jbe
sti
mov
icebp
ja
lods
inc
jne
fiadds
and
mov
movsb
setne
and
mov
repz
add
dec
in
push
mov
aam
mov
pop
out
in
fcoml
jbe
jecxz
mov
pop
xchg
inc
shll
xor
ret
rorb
push
xchg
or
lcall
mov
push
mov
imul
adc
cld
push
or
loopne
divl
sbb
insl
jp
mov
push
inc
cwtl
cmp
stos
xchg
sub
outsb
mov
mov
ja
into
adc
cmp
mov
push
pop
mov
lods
and
xchg
dec
sysexit
mov
push
rol
mov
mov
sub
cld
in
mov
mov
sbb
inc
push
mov
cwtl
pop
cltd
sbb
jnp
aas
pop
pop
data16
shll
addb
mov
cs
inc
cmp
repz
add
es
add
dec
lret
mov
fcoms
je
mov
mov
pop
bound
iret
xorb
inc
mov
sti
cmpsb
shr
cli
movsb
das
pop
in
or
mov
mov
xor
scas
lcall
bnd
xor
inc
dec
xchg
test
vcvtsi2sdl
insb
jnp
loop
or
push
mov
cmpb
pop
in
or
sbb
mov
add
inc
ret
inc
aas
mov
insl
push
xor
dec
dec
and
lret
aad
adc
fisubs
xchg
xor
push
push
mov
jb
mov
xchg
fldt
fildll
js
xchg
std
lret
jle
mov
push
loope
stc
and
mov
xchg
test
gs
sahf
test
ds
mov
and
gs
sub
push
outsl
ret
push
push
clc
mov
sbb
sbb
inc
cmpsb
xchg
mov
push
sub
pusha
mov
cmp
add
mov
lea
inc
mov
jns
dec
insb
xchg
pushf
mov
iret
adc
xchg
sbb
mov
out
insb
negl
loop
add
imul
fdivs
les
mov
and
out
into
jb
and
xchg
aad
pop
xchg
mov
xor
add
mov
in
xor
test
mov
xor
jo
fdivs
in
and
dec
adc
sbb
enter
dec
adc
pop
popf
sub
aaa
mov
or
jge
ffreep
pop
ljmp
sbb
imul
mov
sub
adc
shl
insl
mov
add
xchg
lea
data16
xchg
mov
mov
mov
int3
shr
pop
setge
jle
jmp
movsl
xchg
fisubrs
iret
add
mov
shl
in
xchg
fwait
iret
dec
out
enter
aad
pop
aas
adc
xchg
xchg
daa
jne
add
pushf
bound
fsubrs
adc
jecxz
daa
mov
push
scas
iret
les
gs
push
fisttpl
mov
lods
or
inc
pop
inc
clc
mov
pop
push
jne
pop
sbb
aam
mov
adc
xchg
push
sbb
or
xchg
das
dec
js
loopne
push
mov
xor
pop
out
inc
test
add
insb
popf
cwtl
bnd
jno
and
sub
mov
push
mov
jb
pop
adc
jle
movl
push
inc
fs
movsl
icebp
push
pop
or
in
sub
dec
mov
lahf
add
rorl
jnp
leave
jge
xor
shr
mov
fstps
aam
ss
ret
pop
mov
pop
ret
sbb
push
push
and
add
xor
in
fsubs
mov
scas
in
iret
test
ljmp
clc
shl
cmp
pop
flds
push
sub
arpl
cmp
aad
shlb
xchg
jle
in
sbb
push
lahf
das
hlt
pshufhw
mov
fsub
scas
loope
fdivr
es
xor
and
fistpll
cmp
mov
push
pop
std
mov
xchg
xor
add
sbb
xchg
enter
imul
and
rcll
cmc
push
dec
insb
stos
xchg
call
mov
popa
ja
push
enter
mul
lods
lea
stos
add
mov
pushf
dec
adc
or
in
out
push
mov
lret
mov
xchg
mov
push
jno
push
xchg
xlat
push
jp
addl
and
iret
xchg
faddp
pop
in
add
jl
sbb
xchg
fs
leave
in
sbb
std
sub
sti
jne
pop
or
inc
xchg
cmp
push
call
dec
or
sbb
repnz
mov
orb
fs
in
arpl
adcb
arpl
sbb
test
inc
out
jmp
inc
and
xchg
cmp
adcb
add
or
or
jmp
xor
push
fldenv
ret
into
jmp
out
stc
fsts
je
pop
xor
into
outsb
jl
dec
and
repz
scas
lahf
flds
push
mov
pop
push
pop
fists
mov
shr
outsl
lret
cld
cmpsl
push
or
rorl
xchg
shr
into
in
jne
adc
inc
hlt
inc
movsb
sub
fmuls
xchg
jle
aad
push
test
data16
int3
push
dec
ret
popa
ss
je
adc
add
ds
mov
ficoms
movsl
rcrb
into
shlb
add
popw
xorl
mov
dec
cli
jle
mov
fbld
xchg
mov
add
gs
inc
fiaddl
lods
mov
jge
imul
test
mov
imul
mov
or
push
scas
or
inc
ja
cmc
fwait
xchg
mulb
stos
inc
push
and
jmp
and
fdivrs
mov
les
xchg
push
push
xor
aam
push
icebp
inc
cmp
movsl
add
data16
xchg
loope
add
pop
dec
push
scas
or
xor
ret
mov
xlat
pusha
adc
outsb
add
adc
mov
das
sahf
add
xchg
cmp
push
sub
xor
cmp
dec
push
xchg
mov
sub
int
mov
in
add
dec
shlb
lahf
mov
pop
jns
dec
xor
lods
cmp
icebp
mov
call
into
mov
lods
push
mov
cmp
enter
adc
stos
dec
mov
mov
mov
cld
pop
xor
imul
xor
jg
movsl
push
pop
insl
rcrl
mulb
pop
sti
xchg
xor
hlt
out
scas
inc
rcrl
cmp
in
inc
rol
dec
and
xor
cmp
in
daa
imul
out
push
dec
dec
enter
and
sub
and
jne
repz
seta
push
jns
dec
and
jne
mov
xchg
pop
jl
mov
jmp
fidivs
hlt
dec
fs
imul
jge
inc
jae
jns
cmp
out
cmp
mov
into
nop
pop
dec
or
xor
push
adc
and
push
mov
cmp
icebp
jg
sti
loop
sbb
loopne
push
mov
popf
sbb
and
dec
xlat
lods
adc
pop
rcr
andl
mov
xor
ja
mov
inc
scas
push
add
dec
jmp
inc
mov
ror
ret
xor
cmc
in
jns
add
sti
insl
fbld
jo
out
clc
std
or
add
inc
pop
lret
dec
fsubr
loop
aas
mov
mov
lea
push
jb
xchg
dec
stos
xor
push
dec
test
sub
sub
dec
mov
or
adc
shrb
push
xchg
cmc
lods
lods
cmpsl
cmp
inc
cmp
jne
adcb
jnp
push
pop
sbb
xchg
sub
add
mov
fcomp
sahf
pushf
xor
mov
sub
psrlw
fisttpll
stc
push
inc
push
inc
movsb
dec
or
in
xorb
mov
les
xchg
push
dec
enter
outsb
adc
or
pop
inc
fisubrs
movb
out
int3
mov
cmp
fmulp
je
pushf
adc
xchg
je
mov
in
push
les
lods
jle
popf
xor
rclb
enter
jo
negl
popf
mov
push
testl
inc
mov
mov
sub
pop
gs
mov
mov
push
dec
dec
fldcw
fwait
mov
sbb
dec
xor
sbb
mov
mov
mov
out
scas
push
mov
pop
mov
cli
or
jmp
popf
fnstcw
mov
lahf
push
push
clc
es
sahf
fistpll
das
iret
sbb
test
push
jns
stc
cmc
movsb
cli
arpl
das
and
push
in
je
je
test
and
cmp
mov
xchg
ffree
mov
add
jmp
jo
dec
xchg
aam
scas
and
frstor
push
ja
popf
xchg
xor
inc
mov
push
dec
add
outsl
add
mov
adc
dec
scas
push
inc
cld
xor
jp
ds
inc
int
and
sbb
push
loop
ret
push
adc
call
sbb
add
subl
dec
icebp
into
add
nop
jne
push
test
jg
sti
mov
scas
push
shll
rorl
adc
mov
adc
dec
repnz
push
dec
cwtl
pop
pop
cmp
repz
dec
test
mov
psrld
pop
daa
pop
ljmp
or
mov
ss
sti
adc
dec
add
lods
stc
pop
jp
nop
push
jmp
xlat
jmp
lahf
adcl
popf
xchg
cltd
addl
out
pop
ljmp
add
in
cmpsb
dec
fwait
pop
lods
or
vmaxsd
xor
push
add
pop
lods
in
inc
cs
pop
pop
cltd
jo
ljmp
outsb
adc
test
mov
add
and
xor
lret
std
xchg
jmp
icebp
fiadds
inc
push
fsubl
arpl
cmp
pop
sbb
in
xor
add
in
sub
sub
fwait
dec
pop
jae
movsl
push
mov
dec
out
mov
xchg
push
xchg
xchg
in
push
inc
adc
xchg
ficoms
arpl
mov
xchg
cld
adc
xor
sub
shll
dec
movsl
outsl
lods
movsb
std
mov
push
xchg
add
into
sbb
xorb
lock
sub
add
dec
or
popl
xchg
enter
and
mov
aad
mov
inc
arpl
sub
jno
and
mov
imul
lcall
or
fsubrl
hlt
pushf
mov
xor
ret
dec
push
pusha
lret
push
arpl
mov
andb
shrb
jmp
and
inc
add
xchg
xor
notb
out
sbb
jb
sahf
mov
push
dec
jecxz
repnz
sub
sub
jnp
xor
rcll
push
es
adc
pop
mov
andl
ss
xor
dec
jne
inc
repnz
cmp
cltd
aad
insl
pop
aaa
addr16
addr16
jp
dec
sbb
stos
mov
adc
sbb
or
insl
cmp
sbb
push
push
push
and
or
push
pop
orb
lea
repz
orl
cmp
lock
push
divb
cmpsb
and
in
repz
outsb
sbb
dec
push
mov
sbb
not
adc
adc
adcb
ss
sub
hlt
icebp
fldenv
mov
dec
fnstsw
sbb
mov
mov
pop
addl
mov
mov
sub
cmpsb
adc
clc
jmp
outsb
leave
fldl2t
xlat
pop
dec
mov
jp
lret
pop
xchg
test
xor
stc
lret
pusha
test
outsl
aas
cwtl
insb
xchg
repz
bound
adc
outsl
dec
icebp
jo
add
xor
push
cmc
sbb
mov
mov
pop
popa
fldl
ljmp
lock
or
leave
out
xchg
add
loope
insb
adcl
addr16
fldcw
enter
js
les
out
cmpsl
dec
pop
sti
enter
fiaddl
sysexit
test
out
stc
in
cmp
es
into
imul
pop
ss
push
mov
pop
pop
add
jle
out
lea
adc
pushf
inc
dec
jge
inc
jle
mov
imul
inc
ret
jl
mov
inc
adc
lret
or
cmp
enter
mov
adc
cmc
add
lds
cmc
sbb
mov
jle
mov
add
xor
xchg
lret
in
das
xchg
ds
mov
add
pop
xor
lcall
sbb
push
es
scas
cmp
adc
push
sbb
mov
lret
push
sti
ljmp
das
repnz
inc
pop
into
jnp,pt
mov
fidivrl
das
sbb
jecxz
in
and
dec
shl
lcall
test
pop
mov
test
ja
lret
into
cs
stc
incl
xor
mov
pusha
jl
adc
mov
js
adc
pop
cmc
fisttps
imul
fisubs
pop
daa
adc
fcomps
enter
mov
add
leave
adc
pop
lcall
je
int3
adc
loopne
fisubs
mov
jb
stos
arpl
or
out
icebp
xor
xorb
test
dec
push
loopne
faddl
mov
inc
stos
in
outsl
xor
mov
test
hlt
lock
mov
icebp
sbb
xor
push
adc
mov
xlat
mov
negl
cld
inc
inc
pop
push
repnz
out
mov
ss
cli
lea
cmp
pushf
es
push
push
fists
nop
in
push
popa
adc
lods
and
cmp
adc
lock
lret
in
mov
dec
ds
fld
mov
cs
out
fildl
insl
icebp
adcl
xor
fwait
adc
test
loopne
ret
cmp
jle
mov
lret
sbb
jbe
and
xchg
adc
insb
mov
jae
jo
cmp
fcomps
mov
inc
lods
mov
je
cli
inc
loopne
cli
fsts
mov
add
push
iret
fildll
lret
pusha
add
sub
inc
jmp
sbbb
fisubl
add
decl
jns
lds
imul
cld
lahf
mulb
cwtl
daa
push
pop
repz
mul
xchg
lods
mov
jbe
add
jl
ss
lock
imul
pop
jnp
adc
enter
mov
mov
arpl
das
aaa
lret
add
xchg
pop
mov
push
and
jo
cmp
jp
lcall
mov
fs
sub
pop
aaa
sbb
push
std
pusha
push
sbb
loop
imul
jle
cmc
add
push
mov
cmp
shl
pop
pop
es
shlb
sbb
pop
out
cmp
mov
add
cmp
or
out
icebp
xchg
scas
jecxz
test
pop
mov
and
lahf
add
xor
inc
xchg
push
push
outsl
jnp
ljmp
xchg
fcmovnbe
jno
mov
jo
pop
pop
fldt
cmp
add
out
push
ds
sbb
jb
mov
inc
repz
aaa
lret
add
push
lods
fstps
outsb
mov
mov
out
jns
push
dec
insl
inc
mov
pop
xor
sbb
sub
cmp
mov
dec
mov
stos
fstl
and
iret
inc
lahf
fdivs
cmp
inc
idiv
or
sbb
cmc
popa
test
andl
pop
and
push
dec
iret
jmp
pop
mov
pop
and
pop
add
xchg
pop
push
dec
movsb
inc
decb
sbb
jl
mov
jne
dec
cs
jne
push
scas
pop
in
cmpsl
ret
xor
adc
dec
testb
mov
aas
mov
insb
jbe
lret
jb
push
adc
imul
mov
push
pusha
pop
addps
mov
aas
mov
aad
cmp
mov
xor
mov
inc
xor
and
xchg
sub
or
aam
outsb
out
lcall
sarl
ficompl
jo
lods
or
pop
or
pop
pop
scas
dec
aas
xchg
in
sub
xor
in
hlt
push
sub
iret
xor
pop
push
or
outsl
push
lcall
jmp
dec
push
xor
lret
clc
sub
or
test
xor
mov
xor
mov
movsl
push
push
decb
dec
add
stos
hlt
scas
cli
adc
scas
push
stos
add
jb
fadd
lds
sbb
mov
push
jns
mov
cmp
cs
mov
and
ds
xchg
mov
popf
ja
aad
jge
adc
xchg
dec
lret
sbb
inc
outsb
sbb
inc
je
lret
rorb
lahf
decb
lock
aad
pop
mov
in
xor
clc
jmp
js
cs
scas
sbb
das
cmp
jmp
pop
inc
incb
das
shl
scas
mov
jecxz
xchg
jecxz
pushl
shll
sub
xchg
aam
inc
cs
subl
lock
std
fwait
dec
test
lds
sbb
pop
xor
js
jge
mov
xchg
mov
icebp
inc
rcrb
mov
pop
and
ret
sub
dec
and
lods
fwait
call
dec
insl
mov
out
dec
hlt
out
fstpl
and
jecxz
dec
pop
mov
cmpsl
in
push
out
pusha
stos
mov
sub
and
jp
add
fmull
xchg
mov
pop
loop
adc
xlat
mov
xor
pxor
repnz
pop
icebp
ss
cli
icebp
sub
inc
jae
rclb
sbb
inc
pop
leave
dec
and
cmp
mov
sti
fdivs
adc
pusha
or
mov
je
mov
push
add
push
cmp
inc
jbe
lahf
mov
pop
pop
fildll
push
lods
xchg
push
repnz
push
gs
scas
shlb
ds
jb
dec
adc
jne
inc
lock
dec
or
mov
lds
adc
xchg
mov
pop
inc
and
andl
lret
mov
xchg
call
mov
cmp
clc
in
cld
insl
mov
rorl
jl
rcl
out
mov
in
fdivl
ljmp
add
xchg
fadd
xchg
push
notl
mov
sbb
in
push
cmp
mov
cmp
adcb
add
mov
mov
ret
outsl
inc
push
xchg
add
or
push
mov
mov
add
fidivrs
sbb
xchg
data16
ja
aad
jmp
repnz
cmp
sub
mov
insb
mov
xor
mov
sub
cmp
gs
push
fwait
push
push
jae
jge
mov
sbb
jge
cltd
repnz
mov
int3
adc
cmp
cmpsb
mov
outsl
lret
in
data16
push
push
push
iret
je
in
cmp
push
out
xchg
mov
adc
push
xor
sbb
ss
cmc
call
fisttpll
mov
sub
sarl
mov
aas
add
push
test
in
bound
out
sub
and
mov
xsha256
cmpsb
xchg
daa
scas
test
push
push
ljmp
mov
pop
dec
adc
pop
into
lods
mov
lret
xchg
dec
bound
fcomps
icebp
and
add
pop
push
lea
ja
pop
lods
stos
lret
xor
in
into
push
push
imull
into
test
lahf
sarl
out
push
hlt
lea
int
push
xchg
pop
pop
xchg
sub
aad
int3
jl
mov
xchg
cltd
aas
xchg
fmull
in
hlt
lods
adc
lds
dec
imul
push
jo
pop
int3
fnstcw
mov
mov
mov
test
push
pop
loope
out
cmp
sarl
imul
dec
mov
in
std
sub
adc
data16
cmp
jne
lcall
movsb
ds
shl
cmpsl
mov
lods
es
cmp
dec
lods
imul
testb
adc
mull
sub
pop
fincstp
movsb
roll
inc
arpl
popa
cwtl
pop
jae
adc
jb
rcll
or
fmull
js
cmpsl
mov
mov
subps
sbb
and
enter
ljmp
repz
and
mov
mov
push
or
cmc
not
enter
jnp
jg
sub
dec
hlt
or
arpl
push
mov
xor
add
add
pop
mov
push
add
rcrl
sub
jne
ds
adc
mov
xor
adc
fnstenv
sub
mov
jnp
rcr
pop
and
jae
sub
out
push
in
or
das
sti
jae
xchg
leave
repz
in
sbb
out
push
subl
adc
idivl
pop
xchg
rcrb
mov
fcompl
pop
icebp
xchg
cs
pusha
pop
jle
cld
hlt
xor
mov
or
mov
pop
cmc
inc
xchg
jecxz
xlat
mov
iret
push
das
inc
push
add
push
and
out
add
addr16
movsb
push
mov
pop
das
hlt
ljmp
fcmove
and
mov
push
test
sub
aam
xor
and
lods
mov
out
outsb
arpl
dec
dec
mov
test
leave
imul
push
test
movb
in
ss
lock
icebp
paddq
push
dec
out
jmp
jge
lods
dec
bound
lds
cld
les
lods
or
out
or
repnz
movsb
xor
int
rcrb
mov
mov
stos
cli
xchg
out
mov
add
rcll
mov
xorl
dec
push
jmp
sbb
sbb
mov
ret
sub
inc
in
shll
jne
jbe
push
in
and
cmp
lret
mov
jg
fstp
aam
push
lcall
fwait
js
loop
mov
insl
inc
daa
inc
jne
stc
xor
icebp
pop
xorl
mov
scas
cli
loope
loopne
fsubl
cmp
mov
out
push
xchg
popa
jl
les
outsb
sub
ss
adc
sbb
xadd
dec
mov
mov
repz
jl,pt
notb
mov
push
iret
and
cmp
mull
test
popf
pop
shll
push
dec
xlat
fstpl
out
pop
dec
dec
lahf
dec
popf
add
aam
mov
scas
repz
xchg
orb
pop
pop
in
orl
add
nop
inc
loope
sbb
aas
scas
push
jmp
push
fsubs
int3
repz
jl
leave
jge
jbe
cmc
loopne
sub
pop
xor
enter
mov
jge
push
fiaddl
clc
out
and
nop
adc
andb
lret
jp
lret
nop
sub
push
add
jb
lcall
int
std
flds
xlat
adc
lret
icebp
mov
in
repz
stc
cs
or
hlt
nop
arpl
cmp
jecxz
push
jmp
inc
out
gs
push
cmpsb
dec
ret
or
jo
mov
add
or
dec
push
in
xor
int3
or
imul
jge
jle
mov
push
aaa
dec
sbb
or
xor
dec
xor
cwtl
popw
in
push
int3
xorb
das
jmp
inc
sub
incb
pop
fstpl
fnstenv
xor
or
js
inc
mov
nop
insb
sbb
mov
jb
dec
lea
pop
mov
lds
xor
jmp
lcall
and
inc
push
addr16
sahf
push
mov
sti
rolb
dec
test
lret
int
dec
push
or
jo
mov
sbb
movsb
xchg
sbb
js
in
fiaddl
xor
shlb
ret
jmp
jb
sub
out
pop
addb
sbb
std
dec
fisttpl
cld
jno
adc
xor
je
aas
push
fwait
or
xchg
stos
fldt
inc
or
outsl
cli
push
scas
loop
aas
pop
stos
sbb
stos
and
pop
jbe
fsubs
mov
jl
addr16
repz
add
adc
xchg
je
push
mov
hlt
mov
push
ljmp
xchg
xchg
push
addb
mov
scas
jecxz
movsb
mov
clc
or
loopne
fisubs
mov
stc
jge
or
mov
dec
mov
mov
out
cmp
jae
fldcw
in
out
and
lcall
sbb
sub
js
xor
xchg
cli
aam
xlat
jl
ljmp
or
or
pop
fisubrs
xchg
xlat
imul
mull
inc
cmp
fcoms
imull
inc
cmp
cmp
repz
fsubl
mov
sub
push
pop
jmp
ficoms
arpl
int
mov
push
jmp
jno
adc
rorb
test
push
js
ror
dec
sub
rclb
ds
sti
mov
xchg
inc
jns
jecxz
sarb
adc
loop
jo
fcomps
stos
adc
stc
mov
mov
lahf
rcll
stos
iret
shlb
mov
les
int3
outsl
pop
rcrl
mov
pop
add
das
mov
mov
xor
sub
add
bswap
scas
int3
repz
in
nop
pop
pushf
fldcw
ficomps
jl
stc
lods
xor
outsl
mov
mov
sarb
cwtl
mov
jmp
xchg
inc
push
mov
jmp
rcl
data16
fwait
xchg
cmp
idiv
jge
adc
es
mov
sub
nop
xchg
dec
fs
sub
cmp
ret
cs
shrb
pop
les
push
inc
sbbl
hlt
add
adc
adc
sub
sbb
mov
je
jg
data16
aad
adc
xchg
adc
dec
adc
mov
pop
add
nop
push
and
mov
adc
xchg
dec
add
sarb
pop
in
and
add
ljmp
fstps
cmp
sbb
xchg
jns
mov
and
inc
inc
or
sbb
dec
inc
and
pop
sbb
push
enter
out
loop
mov
lods
popf
mov
mov
ljmp
dec
xor
out
mov
cmp
pop
push
inc
rcl
inc
out
jge
cli
push
pop
dec
dec
inc
cmpsl
das
popf
push
or
out
roll
mov
cmpsl
scas
mov
pop
inc
fs
and
ds
bound
mov
push
and
mov
jae
lret
xchg
or
push
andb
sbb
fisubrl
push
or
and
jg
pop
pop
add
xor
xchg
aas
add
push
push
shll
inc
xor
iret
cld
push
es
scas
addl
xchg
mov
push
cmp
mov
aam
fstl
push
rolb
lock
xor
movsl
jnp
idiv
dec
out
mov
shll
mov
mov
bound
jl
pop
push
pushl
and
dec
cmp
pushf
and
ja
mov
aas
enter
ret
cmp
push
cmpsb
xchg
mov
mov
xchg
pop
adc
mov
xor
mov
mov
or
loopne
scas
jns
mov
and
lock
pusha
mov
stos
test
add
outsl
fidivrl
fwait
adcl
inc
aas
jg
lahf
outsb
sti
and
pop
xor
fwait
sub
rol
lea
push
sub
cltd
sub
inc
jmp
stos
loope
push
test
ljmp
dec
xchg
mov
outsb
pop
mov
jo
adc
dec
dec
insl
lcall
jno
dec
jge
stos
in
sub
daa
inc
adc
arpl
inc
mov
icebp
rorl
xchg
loop
xchg
pusha
pop
sub
mov
add
push
jb
sbb
sbb
lds
mov
xor
shl
cmp
add
mov
dec
sub
or
sbb
sub
ret
cli
mov
add
rcl
jnp
adc
filds
mov
cmp
lods
dec
pop
hlt
dec
adc
dec
fstpl
xchg
mov
in
add
sub
adc
orb
lock
jae
insb
cmp
mov
cmc
or
lods
out
ret
cmp
push
dec
and
adc
jno
shl
sbb
xor
popf
pop
push
and
lret
movsl
mov
decl
aad
fidivrs
fdiv
data16
daa
call
das
dec
adc
popf
insl
call
loopne
in
mov
fistpll
popf
sub
add
mov
aam
adc
into
into
addr16
aam
pop
xor
cmpsl
shll
pop
mov
pushl
addr16
outsb
mov
scas
nop
aam
fcoms
daa
pop
push
lods
dec
daa
hlt
mov
iret
and
jne
sub
fcomps
loope
adc
idivb
push
jge
insb
sub
jns
adcl
gs
stos
sub
fisubl
pop
cmp
add
das
insb
cmp
mov
adc
cmp
les
lret
add
test
and
push
jnp
mov
xor
movsb
ljmp
jbe
insb
insb
and
repnz
int3
or
sarb
aas
mov
das
push
imul
sub
pop
pusha
mov
das
aas
inc
sti
inc
gs
loope
ds
fisubrs
flds
movsb
sbb
sub
mov
inc
xlat
sub
pop
dec
xchg
int
fwait
test
pop
adc
add
shlb
cmc
mov
jb
pop
and
xor
sub
gs
lret
push
in
sub
stos
jp
aas
pop
jbe
mov
lds
call
jb
mov
clc
in
jp
adc
xchg
test
sub
cmp
mov
test
mov
je
ret
push
out
mov
pop
dec
sahf
scas
mov
data16
add
mov
mov
mov
inc
mov
or
jle
inc
pop
addr16
cmp
xchg
add
nop
cli
stc
sbb
sub
dec
fidivrl
test
imul
lea
cmp
pushf
or
cmp
jae
or
sidtl
lods
movsb
iret
dec
sti
imul
rorl
aas
push
imul
or
mov
pop
or
xchg
pop
cmp
xchg
test
cmc
pop
insl
fcomps
jecxz
pop
call
mov
dec
movsb
mov
scas
jno
int
push
push
pop
sbb
mov
or
sbb
fmull
xchg
dec
and
fidivs
lods
lock
inc
cwtl
movsb
push
fsubrs
mov
mov
mov
mull
out
push
movsb
sub
pop
outsl
stc
cmc
test
sbb
nop
lods
cli
test
inc
mov
ficomps
mov
push
mov
cmp
out
xchg
imul
mulb
divb
sbb
push
fstps
pop
mov
xor
ljmp
or
and
dec
xchg
sahf
fldt
lods
mov
je
xchg
aad
fstps
fwait
jmp
dec
mov
aam
lahf
lahf
pushf
or
sbb
movsb
scas
movsb
imul
sbb
jl
push
mov
popf
push
mov
lea
notl
movsb
mov
lret
hlt
sbb
mov
push
test
scas
pop
mov
lods
cmpl
das
aam
icebp
test
cltd
cwtl
jmp
sub
fistps
mov
in
into
rorb
sbb
enter
fst
repnz
in
xchg
dec
lds
enter
daa
or
push
pushf
cmp
mov
jle
cmp
mov
mov
in
cmp
jnp
adc
andl
and
dec
jb
in
cli
lret
mull
and
push
in
repnz
mov
mov
fbstp
xlat
decb
sub
fwait
out
xchg
xchg
pop
iret
push
jp
inc
xor
ret
push
jg
in
repnz
mov
xchg
out
mov
mov
test
cmp
cmpsb
mov
sahf
je
jbe
fwait
imul
xchg
loope
fisttpl
fs
sbb
add
xchg
inc
push
mov
test
out
xchg
mov
cld
sub
or
push
cmp
mov
jne
out
cmp
pop
movsb
dec
nop
xor
xchg
add
jp
or
xor
push
stos
adc
xor
jo
inc
xchg
jg
lahf
ret
cmp
scas
cld
fmuls
lahf
fwait
push
pop
pop
outsl
mov
sub
or
inc
ret
sbb
push
jle
cmp
dec
inc
mov
lods
mov
and
mov
cmp
jnp
and
mov
ljmp
and
push
out
jle
pushf
pop
add
lret
fsubrl
pop
mov
pop
mov
mov
xlat
stos
jo
pop
nopl
cmp
cmp
pop
mov
dec
mov
arpl
lods
js
push
ja
xor
and
fimuls
arpl
push
mov
dec
cmpb
cmc
fwait
mov
sbb
and
push
inc
stc
pop
sti
and
loopne
pop
mov
and
sti
lds
lds
dec
push
sahf
repz
push
sbb
pop
xor
clc
or
mov
js
ficomps
cld
stos
cmp
cmp
les
mov
aad
and
xor
popa
inc
pop
shll
repnz
mov
jo
mov
adc
ret
and
test
mov
jecxz
mov
popa
inc
push
mov
cmp
and
test
and
insl
insl
popf
sbb
ljmp
cwtl
xchg
bound
and
test
mov
mov
insb
adc
jae
stos
scas
inc
mov
jno
cmp
xchg
lret
add
add
cli
cmp
pop
xchg
jno
dec
inc
mov
rorb
mov
std
out
mov
int
jmp
stc
repz
aas
sbb
cmp
sub
sbb
outsb
inc
leave
or
leave
mov
aad
cld
mov
pop
pop
adc
and
and
jecxz
inc
sub
hlt
add
and
fwait
and
clc
repnz
addl
je
aas
xchg
xlat
xorb
mov
test
int
lock
pusha
arpl
sbb
or
inc
xchg
test
loopne
and
cmpsb
inc
adc
xchg
popf
inc
inc
and
enter
dec
pusha
mov
xchg
push
arpl
mov
and
push
jge
arpl
js
cltd
dec
push
mov
push
aaa
xor
pop
jo
outsl
test
loopne
pop
jmp
xor
fidivrs
testb
sub
xchg
fsts
pusha
dec
shll
push
int3
call
push
mov
nop
inc
scas
ret
popa
lcall
ret
loop
lds
push
scas
les
mov
xchg
outsb
imul
sub
sahf
mov
ror
inc
roll
push
inc
nop
push
scas
mov
shr
mov
int
mov
sub
jns
mov
fcmovu
adc
inc
cmpb
cltd
mov
cmp
bnd
mov
das
faddl
gs
ficoms
dec
stc
sbb
cmpl
lea
mov
lahf
aad
and
inc
testb
test
xor
sub
mov
pop
insb
insb
mov
lods
sti
addr16
dec
jecxz
je
inc
jb
mov
mov
jecxz
out
pop
jno
popa
divl
loop
mov
enter
sbb
cmpsb
xor
std
lock
stos
push
arpl
pop
mov
sub
daa
jno
mov
dec
outsb
fadds
xchg
rcll
xor
cmpsl
mov
sbb
rclb
test
lcall
or
push
mov
fs
sub
aaa
dec
mov
mov
call
adc
es
xchg
or
movups
pop
stos
xor
and
data16
loopne
test
mov
mov
add
and
pushf
and
loop
fmull
popf
add
adc
in
fstpl
sbb
rcrl
rolb
dec
pop
nop
outsl
int
cmp
fwait
or
inc
iret
dec
test
scas
jns
cmpsl
movsb
add
mov
pop
or
inc
nop
dec
int3
xchg
lcall
cwtl
adc
pop
xor
inc
into
daa
lret
subb
das
rorl
jg
inc
push
xlat
adcb
out
mov
xchg
fdivr
mov
jecxz
dec
std
add
and
jno
cwtl
dec
xchg
sbb
jbe
mov
mov
adc
test
adc
cwtl
pop
cltd
repz
push
adc
push
dec
pop
mov
stos
sbb
push
ret
lods
jle,pn
sub
movsb
adc
or
mov
add
add
sub
mov
jecxz
ret
les
xor
in
dec
fmuls
rcrl
in
mov
mov
pop
jle
pcmpeqw
adc
xor
test
fidivl
xchg
repnz
mov
xchg
daa
mov
fnstsw
lea
push
popa
test
dec
or
add
inc
shll
xchg
xchg
cmpl
and
test
pop
jns
inc
xchg
cmpsl
repnz
hlt
or
xor
test
mov
cmp
iret
lret
shr
xlat
dec
jbe
add
mov
jne
dec
push
lret
dec
push
outsl
stos
nop
lea
ret
mov
jae
cltd
and
cmpsl
sarb
push
inc
loopne
lods
xchg
lret
xchg
xchg
cmp
cld
orl
add
mov
repz
sub
mov
pop
je
cmp
push
sarb
clc
call
sub
xor
test
je
dec
clc
ss
push
pushf
scas
adc
es
outsb
mov
inc
daa
cli
jne
jle
cmpsl
or
mov
aad
daa
cmpsb
outsb
frstor
adc
call
imul
and
xor
cld
adc
insl
mov
sbb
jle
in
lea
add
or
lahf
dec
xchg
sub
hlt
dec
subb
fbstp
inc
rcrl
dec
loope
gs
sti
cmpsl
outsl
push
ja
lret
jmp
xlat
xor
enter
cld
cmp
cmp
lea
lock
or
xchg
fsubrs
test
cwtl
add
divb
repnz
jge
push
xor
mov
xchg
mov
filds
inc
dec
jno
mov
mov
imulb
add
dec
loope
daa
hlt
pop
lods
push
pop
iret
or
fwait
jecxz
mov
inc
mulb
xlat
fmulp
lret
popf
repz
or
sahf
push
sub
sbb
and
shlb
sub
jl
movsl
mov
xchg
sbb
mov
jnp
cmp
popa
out
push
leave
mov
stc
xor
test
sbb
insl
fnstsw
jbe
dec
push
popa
repnz
or
pusha
frstor
addr16
mov
lcall
push
sub
ftst
mov
sbbl
inc
out
jne
in
pop
push
subb
push
xor
aad
scas
sub
inc
aaa
cwtl
xlat
stos
jne
stc
dec
cmp
js
int3
out
pop
xor
lret
lret
mov
or
inc
push
mov
xchg
cmp
mov
jecxz
pop
insl
std
test
test
mov
xchg
mov
mov
fimuls
cmpsl
movsb
movsb
pop
rcl
and
inc
scas
movsb
cmp
adc
sub
fdivr
add
pop
insl
test
leave
pop
stc
add
mov
imul
jae
dec
or
adc
pop
icebp
stos
and
mov
lret
push
mov
cmpsb
cmc
add
cmp
dec
insb
aam
mov
or
clc
sub
sub
xchg
daa
push
dec
dec
je
fcompl
push
adc
pop
mov
mov
pop
fiadds
push
fadds
add
sbb
push
mov
inc
lcall
mov
enter
lcall
xchg
nop
and
sbb
insb
or
test
sahf
fwait
and
cs
mov
outsb
ja,pn
jle
movsb
in
jno
jno
inc
shlb
mov
or
inc
testl
data16
sbb
mov
out
sub
mull
cmp
jno
je
pop
shlb
inc
je
fdivp
aas
mov
sbb
xchg
cmpsl
mov
aas
mov
loop
and
push
loope
xor
fcompl
mov
mov
bound
push
jne
cmc
test
xchg
add
data16
push
adc
insb
mov
insl
sub
jb
xchg
sbb
lcall
call
imul
jbe
sbb
out
cltd
fisubs
pop
mov
repnz
sahf
les
inc
xchg
pop
xchg
jns
mov
int
mov
push
adc
sbb
mov
nop
xchg
jbe
rcr
fildl
inc
mov
lds
push
fisubrs
dec
dec
xchg
cltd
xorb
enter
or
pop
lcall
int3
push
sub
ljmp
adc
adc
aad
jne
lcall
mov
lahf
push
or
pop
fs
in
fldenv
loopne
decb
movsb
jae
lock
pop
jno
je
inc
movntq
pop
leave
push
sbb
iret
cmpl
sbb
push
shll
int
test
fs
inc
mov
ror
push
lds
pop
add
inc
jae
mov
fsubrl
ror
pop
push
xlat
adc
xchg
sub
imul
test
arpl
daa
mov
jbe
jo
sbb
iret
and
lret
inc
lahf
xor
jb
mov
xor
pop
pop
loope
sbb
or
int
sub
outsl
ficoms
test
cmpsl
lret
in
ja
cmp
or
idivl
addl
cltd
fld
pop
loop
add
mov
mov
cmp
add
rorl
lahf
stc
adc
les
inc
fwait
popf
xor
adc
jmp
testb
add
dec
call
cli
push
movsb
cmpsb
jge
mov
dec
jle
clc
inc
aam
jno
push
mov
stos
je
in
mov
and
lret
pop
fisubs
add
mov
push
sbb
mov
hlt
lcall
pop
sar
cli
inc
inc
jbe
stc
mov
xchg
lock
imul
rcll
sarb
adc
cli
paddq
loope
mov
cmp
push
xchg
cwtl
mov
dec
jp
ja
in
iret
jmp
popf
pop
mov
xchg
dec
addb
push
cs
je
dec
xlat
ficoms
divl
lock
sbb
mov
cmpsb
or
sahf
testb
sar
push
aad
mov
mov
mov
clc
fld
out
leave
mov
mov
aaa
xor
cmc
imul
mov
and
jmp
hlt
jecxz
sbb
and
xchg
lea
repz
fisubl
fimuls
push
cmp
enter
mov
test
xor
xor
movsb
fdiv
dec
xor
pop
in
pusha
out
jg
in
sbb
rcrl
inc
lahf
dec
sbb
nop
mov
divb
lods
push
push
cs
push
and
bound
inc
fcomps
std
lcall
lock
pop
sbb
xchg
add
cmp
out
movsb
loope
and
jmp
es
mov
mov
jne
xchg
pop
mov
xor
mov
ljmp
jmp
inc
mov
mov
mov
xchg
test
sahf
test
dec
fidivs
adc
pop
lods
push
xor
iret
mov
test
jns
xchg
mov
sarb
push
scas
dec
sbb
sub
jl
rolb
in
inc
jl
stc
orb
fcomi
push
mov
scas
jle
iret
sub
pop
xchg
jbe
cmp
imul
es
test
icebp
pushf
xor
sbb
push
mov
dec
cmpsl
cltd
daa
repz
push
jae
int3
les
hlt
fwait
test
fwait
mov
leave
fistpll
mov
lahf
pusha
pop
outsb
sarl
popf
orl
sbb
xor
outsb
adc
test
push
cli
xor
lock
or
test
mov
popa
outsb
dec
std
sub
ds
xor
push
aaa
push
daa
mov
or
pop
mov
jl
mov
or
ficomps
mov
xor
lea
cmpsl
and
aam
sbb
mov
push
lcall
dec
xchg
test
lods
sar
dec
in
and
jg
cmp
cmc
outsb
repz
push
in
sub
fcoms
aad
fmuls
jmp
std
popf
fisubl
fisttps
xor
nop
jle
mov
cmpb
inc
aas
cli
inc
mov
popa
jno
movsl
lahf
nop
insl
mov
xchg
inc
xor
mov
pop
int
cli
cmpsb
test
inc
cmp
loopne
xchg
push
mov
pop
incl
pop
mov
pop
inc
mov
inc
notb
cld
xchg
pop
push
outsl
cld
cs
pop
in
out
adc
jo
leave
add
in
xor
shrb
repnz
xchg
in
or
add
xchg
and
fbstp
pop
sub
scas
jp
out
push
call
add
stc
pop
xchg
jp
push
les
pop
mov
push
outsl
insl
popa
std
pop
push
mov
adc
clc
xchg
add
push
in
xchg
cmpsl
je,pn
fadds
les
shl
mov
test
call
jae
aas
xchg
loop
adcb
pavgb
pop
das
cltd
into
or
or
jbe
adc
call
popf
and
xchg
add
xor
xchg
outsb
movsb
xchg
fidivrl
outsb
leave
pop
dec
stc
lcall
pop
inc
mov
xlat
adc
adc
sbb
xchg
xchg
outsb
aas
jae
mov
mov
rcll
aam
cli
jle
pushf
scas
pop
xor
sub
inc
enter
sbb
mulb
dec
jge
mov
xchg
cmp
mov
dec
mov
iret
push
xchg
pop
popa
outsl
jl
in
sub
sbb
pop
inc
data16
je
push
mov
gs
lcall
mov
pop
gs
push
add
or
mov
mov
insl
scas
test
dec
push
and
das
lods
jecxz
jo
pop
jecxz
adc
add
cmp
iret
shrb
sahf
loopne
movsb
inc
jbe
out
nop
movsl
and
out
scas
cmp
xor
fldenv
ret
inc
les
rorb
fidivrs
fidivrl
js
mov
mov
mov
icebp
cmp
in
inc
mov
mov
push
jb
xchg
jp
pop
loopne
addr16
je
js
xchg
and
and
adc
mov
movsb
fcmovbe
fisubs
mov
push
dec
jb
sbb
xor
jecxz,pn
cmpsb
cmc
fcomps
into
ss
adc
fs
xlat
cmp
jp
pop
and
fildl
xchg
push
mov
imul
ja
aaa
pop
enter
pop
cmpsl
test
pusha
inc
fdivrs
cmpsb
ds
pop
push
sub
push
jg
mov
aad
lret
fimull
xor
stos
pop
dec
cmp
rol
push
cwtl
adc
pop
inc
fdivrp
pop
fldt
scas
rolb
and
cmp
mov
mov
xor
out
adc
stos
std
test
inc
and
adc
inc
test
mov
fcmovnb
jae
xor
in
jns
mov
ret
adc
arpl
xor
pushf
xchg
xor
xchg
pop
fcom
shrl
test
sbb
cmp
bound
shl
or
stc
mov
dec
pushf
leave
fwait
ja
cli
in
push
sub
push
jge
sub
pop
lcall
xchg
scas
mov
fistl
inc
mov
imul
push
repz
outsb
or
sbb
mov
push
push
addr16
pop
fbld
adc
mov
push
call
daa
clc
out
mov
in
mov
aaa
fdivl
nop
xor
stc
mov
mov
lcall
loope
or
push
lret
lock
xchg
and
faddl
insl
and
js
jle
mov
sbb
es
lods
adc
repnz
xchg
jmp
jp
mov
dec
jb
adc
or
setp
jp
cmpsb
outsl
push
cld
xchg
xor
mov
inc
inc
mov
sub
imul
adc
imul
adc
dec
xor
push
mov
enter
adc
mov
mov
gs
add
mov
adc
ja
aaa
pop
std
jmp
xor
mov
stc
mov
outsl
cltd
adc
push
into
sahf
sbb
and
xor
aam
aaa
xchg
les
inc
xor
pop
pop
mov
push
scas
lcall
push
aaa
cmp
cmp
add
lds
les
cmp
fs
repnz
fidivrs
mov
rcrb
push
sub
push
imul
cmp
dec
das
repnz
mov
in
push
testl
pop
mov
dec
out
jae
repnz
stos
push
js
jbe
rorb
call
out
mov
nop
test
and
or
fsubrs
or
mov
and
test
push
sbb
in
sub
mov
xchg
mov
sub
pop
aaa
dec
dec
in
call
out
ja
adc
das
inc
add
daa
dec
sub
out
dec
and
jbe
push
adc
add
jmp
ss
ret
xor
cmovbe
xor
sbb
ja
jge
adc
xchg
scas
stos
imul
xor
insl
into
sbb
xchg
cltd
fadd
adc
cli
sti
sbb
cli
jp
dec
mulb
orb
xorb
call
push
add
jno
pop
adc
jmp
gs
pop
ja
test
mov
mov
adc
add
mov
push
jmp
push
imul
jb
out
dec
test
leave
push
call
jge
jl
jle
xor
jp
pop
dec
test
enter
push
ret
xchg
or
add
and
cmpsl
and
sub
push
sub
pop
sahf
mov
shlb
dec
mov
stos
loope
push
leave
pushl
fists
out
arpl
cs
inc
adc
fwait
icebp
in
and
mov
inc
xchg
or
enter
jle
cs
scas
xor
push
pushl
std
jns
pop
inc
jns
fldl
enter
movsl
dec
mov
inc
mov
loopne
dec
and
scas
fwait
out
jne
push
mov
stos
adc
cmp
dec
cmpsl
icebp
xor
into
pop
fcomps
shrb
clc
add
sbb
bnd
xor
dec
push
jl
shl
std
add
xchg
pop
movsw
adc
sahf
xchg
popf
stos
outsb
mov
inc
addr16
adc
insb
adc
jmp
mov
mov
rorb
add
mov
into
sbb
cmpsb
pop
pop
popf
fstpt
push
data16
adc
and
int3
xchg
mov
and
cmp
xchg
nop
lahf
movsl
xlat
or
shll
dec
or
cli
push
sbb
rcr
iret
pushf
inc
inc
call
gs
mov
push
sbb
xchg
mov
gs
xor
mov
sbb
faddl
inc
push
test
rclb
xchg
pop
int3
sbb
inc
sahf
pusha
jecxz
and
test
test
pushf
das
insl
movsl
dec
imul
xchg
sbbl
adc
cmp
ret
jb
push
or
shrb
adc
cmp
and
icebp
mov
loopne
cwtl
sbb
sub
movsb
dec
mov
adc
push
xchg
and
pop
lods
rcrl
dec
sti
stc
shl
fidivl
mov
push
sar
cmp
lea
cwtl
pop
xchg
cmp
xlat
cmpl
push
mov
lock
lods
adc
bound
add
jl
mov
or
mov
inc
xchg
push
test
fcmove
sub
leave
and
ds
push
insb
js
sbb
add
xchg
mov
lods
xor
or
popf
mov
mov
or
out
jmp
cmp
js
pop
dec
xchg
push
jl
ret
push
push
das
cld
js
clc
xor
xor
nop
add
stc
insl
mov
jg
push
add
adc
mov
sahf
aas
inc
lea
mov
sbb
jbe
test
cld
cmp
fdivrl
lods
sbb
jne
adc
out
sti
pop
cmp
mov
pop
pop
hlt
mov
xor
aaa
mov
or
sub
rorl
mov
jae
adc
arpl
dec
inc
inc
dec
insb
xor
push
cmc
and
lcallw
sbb
inc
ret
push
mov
adc
movsb
xchg
incl
call
repnz
pop
xor
loope
movsb
inc
nop
cmc
stc
or
lods
cli
mov
sbb
testb
adcb
aaa
sbb
cmp
mov
rcrb
movsb
sbb
jmp
ss
into
lds
xchg
pop
push
mov
scas
out
sti
add
shrb
out
stc
sbb
xor
xchg
scas
nop
xchg
push
pop
sbb
cmp
add
push
stc
pop
jmp
std
mov
adc
and
pop
sbb
lret
xchg
rol
bound
lods
xchg
mov
dec
ret
arpl
ljmp
les
jg
xchg
pop
mov
jo
out
out
repnz
push
repz
and
bsr
mov
sub
sbb
out
jge
jmp
sti
jle
arpl
ss
xchg
push
loopne
sbb
addr16
inc
or
xchg
imul
mov
xor
das
and
inc
scas
push
push
inc
pop
jnp
lods
or
xor
cmp
enter
lret
loopne
push
cmpl
leave
sahf
jnp
pop
xchg
mov
or
sbb
mov
push
xchg
add
cmp
hlt
mov
mov
loopne
scas
mov
or
js
je
mov
cmp
cmp
push
jl
sbb
xchg
in
int3
mov
jl
sahf
xchg
enter
fucomip
mulb
mov
les
mov
scas
or
xor
jge
cwtl
lock
push
pop
fldt
sub
lock
cld
clc
adc
les
push
mov
xchg
mov
sahf
or
pop
cmp
call
sahf
sub
scas
or
sbb
mov
orl
xchg
test
and
add
mov
xor
addl
aas
lret
lock
jmp
hlt
sti
arpl
push
mov
scas
andb
adc
mov
das
jmp
ret
jns
sbb
mov
enter
mov
push
shlb
outsb
dec
rclb
insl
sbb
lods
icebp
cmp
cs
mov
or
xchg
pop
adc
jne
dec
movb
aas
addr16
movsb
fiadds
sbb
dec
out
iret
int3
popa
insl
push
jmp
sbb
add
cmp
add
pushf
and
cmp
pop
ljmp
test
xchg
dec
outsl
hlt
aas
out
sub
sub
xor
push
leave
stos
lods
das
sbb
loop
sbb
cltd
lahf
add
mov
repz
fdivl
ja
mov
popa
xchg
aad
mov
icebp
repnz
xchg
add
inc
mov
xor
mov
sbb
rolb
fcmovu
sbb
jns
add
mov
popa
and
lcall
ficomps
sub
jns
inc
pop
dec
mov
inc
out
or
mov
cmp
not
mov
jecxz
pop
int3
and
or
jecxz
outsb
std
dec
lock
xchg
sub
scas
loopne
add
shrb
cmp
xor
and
push
lods
jg
sub
test
adc
cmp
add
mov
and
or
and
xchg
mov
push
inc
dec
outsb
enter
das
mov
mov
mov
divb
mov
and
sbb
mov
xchg
mov
add
lea
fcoml
cmp
push
jecxz
pop
insb
mov
test
add
sti
stos
frstor
ja
scas
out
hlt
out
xor
xchg
andb
rcll
adc
pop
aas
xchg
add
sbb
int3
and
jno
test
jle
and
inc
shll
push
test
pushl
lock
fmuls
xchg
sbb
fldcw
inc
sub
mov
push
jmp
cmp
gs
mov
sub
push
sahf
and
cltd
push
das
jb
loopne
adc
or
je
push
ljmp
lret
lret
arpl
xchg
imul
xchg
sub
aaa
fstps
repz
jp
ret
test
movsb
sahf
popf
jae
call
dec
fisttpll
cmp
sbb
xchg
lcall
add
les
aad
ljmp
ja
adc
mov
in
or
mov
outsl
sub
stos
fcoms
sahf
dec
ljmp
cmp
dec
or
pop
rsqrtps
sti
and
popf
lret
leave
popf
xlat
imull
and
dec
in
xor
insl
fldenv
dec
cld
push
insl
push
in
testl
cli
es
dec
cli
cs
cmp
mov
mov
or
mov
pop
scas
or
mov
jle
cwtl
sub
xchg
ds
pop
loop
inc
xor
pop
dec
in
jecxz
dec
dec
or
xchg
sub
loopne
pushf
std
test
mov
fmuls
sub
pusha
sub
sbbb
xor
loope
xor
shlb
in
repnz
pop
mov
push
cmp
pop
xchg
jb
daa
aam
dec
mov
lcall
cltd
add
jo
les
sti
fbld
sub
ljmp
push
push
push
xchg
or
mov
imul
pop
out
jo
mov
das
repz
aad
out
fcmovbe
mov
add
mov
dec
lcall
mov
in
jae
and
mov
sbb
popf
sub
test
andb
mov
inc
jp
mov
lcall
jnp
mov
pop
pop
lds
pop
xor
nop
push
popa
mov
adc
popf
and
mov
pop
jno
pushf
iret
out
cltd
inc
xchg
sbbb
mov
popf
mov
aam
inc
mov
xor
mov
mov
sbb
fists
xor
push
outsb
add
enter
mov
imul
sub
cmp
jae
hlt
neg
dec
xchg
leave
mov
rcr
pop
neg
popa
sbb
fs
nop
in
test
add
xchg
popf
rcr
out
xchg
push
or
ss
mov
mov
ja
scas
lods
pop
jnp
push
push
jle
jmp
jbe
ror
test
sti
nop
inc
pop
mov
loop
xchg
in
jnp
out
xlat
pop
lahf
pop
push
push
dec
dec
pop
sbb
ljmp
push
xchg
xchg
add
dec
add
add
sbb
gs
mov
mov
rorl
add
xor
sbb
cs
pop
sub
mov
inc
mov
sahf
or
lock
iret
andl
jns
adc
mov
push
out
or
cmpsb
int
mov
repnz
adcl
les
adc
mov
cltd
frstor
rclb
in
xchg
and
add
in
pop
sbb
mov
jmp
inc
pop
addr16
cmpsl
jne
rdtsc
outsl
sbb
mov
pop
adc
dec
xchg
data16
es
mov
adc
loopne
mov
jmp
jmp
int3
pop
xor
adc
jp
mov
rorb
mov
mov
pop
ret
pushf
mov
mov
cmpsl
jmp
push
scas
in
pop
jmp
es
cltd
scas
ret
cwtl
fildl
dec
pop
outsb
add
xlat
jp
dec
shlb
gs
aas
repnz
jecxz
scas
scas
jl
sub
cmp
sbb
sahf
pop
scas
sub
shlb
sysret
sbb
mov
gs
xor
sbb
repz
or
push
jbe
mov
mov
pop
inc
leave
xchg
movsl
test
fs
push
mov
mov
jb
or
and
mov
sbb
arpl
lods
imul
scas
mov
lds
loop
xchg
adc
jp
in
out
cmp
or
push
dec
adc
fs
imul
or
push
iret
jbe
push
es
sbb
mov
scas
cmp
add
push
lcall
rorb
add
fbstp
jp
and
xor
xor
fisubrl
add
gs
jmp
scas
or
sbb
fisubl
jmp
outsb
imul
es
pop
pop
cmp
or
pop
movsl
jns
ror
cmp
int3
addr16
push
mov
ds
pop
imul
sbb
or
cld
in
loope
sub
fists
xor
loop
cld
inc
in
stos
lcall
pushf
or
sub
mov
mov
and
ja
xor
int3
roll
xchg
ss
lcall
jae
arpl
cmp
pop
xchg
mov
cmp
scas
xchg
dec
mov
stos
ja
jnp
rorb
sub
push
add
push
lods
insb
mov
xchg
jl
push
std
mov
or
adc
cld
add
jle
adc
imul
mov
fs
inc
lret
mov
cmpb
lds
jns
xchg
mov
ja
bound
lds
fisubrs
ret
mov
mov
adc
adc
les
mov
jae
and
mov
fadds
out
outsb
pop
sub
jp
pop
sarl
jp
sub
inc
lock
fwait
es
jb
jns
shll
outsb
mov
or
cmpsl
js
xchg
mov
jge
rorl
dec
fwait
jecxz
jmp
jns
and
xchg
jno
mov
mov
jp
vmread
outsb
mov
stc
add
xlat
cs
and
loopne
negb
rolb
cs
jl
inc
xor
cltd
bound
push
mov
fadd
cli
mov
mov
jns
sbb
inc
lret
jns
ret
hlt
jns
into
mov
out
jle
es
push
adc
mov
sbb
fs
inc
inc
out
insl
not
push
or
ds
push
sbb
ret
and
inc
or
pop
outsb
or
cmp
lcall
cli
push
cli
imul
mov
insl
test
xor
ss
dec
push
xor
xchg
in
mov
aas
pop
add
repz
ret
jae
jl
cmp
sbb
iret
jae
ret
daa
adc
repz
repz
imul
pop
mov
dec
mov
popf
ret
aaa
fcmovne
test
inc
push
push
inc
js
js
mov
mov
rcll
xorl
pop
and
inc
push
push
ficoms
arpl
mov
popf
repnz
scas
daa
add
ljmp
cld
in
inc
stos
jmp
dec
push
xchg
adc
in
daa
mov
or
jecxz
jle
lods
out
mov
fimuls
push
pmovmskb
pop
add
sbb
mov
mov
cmc
ss
and
std
lds
jmp
or
jge
dec
inc
movl
mov
popa
jmp
mov
mov
sub
jb
scas
jno
mov
mov
popl
stos
adcb
cli
jae
and
cmp
scas
rol
shll
addr16
jle
xor
leave
cmc
pop
mov
test
or
test
push
dec
and
mov
push
arpl
pusha
lock
push
pop
and
jmp
cmc
adc
test
push
fwait
add
push
or
sbb
incl
and
dec
or
stos
jno
adc
cmpsb
cmpsb
push
dec
or
mov
aad
and
pop
pop
and
fiaddl
fstpt
push
in
sbb
lock
nop
mov
sar
lea
sub
stc
add
mov
cli
notl
sub
dec
repz
push
shl
cwtl
stc
dec
mov
push
inc
jle
pop
ds
test
sub
popa
sub
arpl
mov
pusha
scas
lods
enter
test
test
jl
or
lock
push
inc
test
sbb
ficoml
decb
cmp
mov
arpl
clc
cmpsl
test
xchg
pop
rcll
xor
push
mov
or
int3
dec
fwait
adc
idiv
das
sub
loop
scas
sahf
idiv
ret
pushf
push
and
xchg
fdivr
mov
push
faddl
dec
jmp
in
in
aas
stos
jne
mov
mov
nop
xor
cmpb
xor
loop
xor
stos
dec
lahf
jne
clc
loopne
xchg
into
mov
jbe
mov
enter
jno
inc
fnsave
and
mov
push
je
es
xchg
enter
in
jbe
or
fs
push
fincstp
fildll
xchg
sub
cmpsl
sbb
imul
inc
ficomps
sub
dec
repnz
pop
jle
pop
sbb
mov
lea
int
and
xchg
fadds
test
cli
jp
inc
hlt
xor
js
fisubrs
pop
push
cmp
adc
mov
dec
adc
jae
push
stos
xchg
add
aas
mov
hlt
in
lods
push
push
inc
jbe
lea
or
push
xchg
in
push
scas
adc
push
outsl
push
nop
lods
push
jmp
loopne
clc
xor
pop
ja
dec
pusha
mov
sub
in
lret
cmpsl
scas
sub
icebp
or
mov
imul
jbe
rclb
pushf
clc
push
rcll
and
lret
xchg
insb
aas
cwtl
cmp
fsubrs
nop
rorb
inc
cwtl
pushf
xchg
sub
lret
mov
pop
mov
addl
mov
stos
xor
xorl
jge
ljmp
arpl
loopne
mov
cwtl
mov
shufps
das
push
xor
sbb
mov
adcb
stc
push
sahf
ret
xor
pop
push
mov
je
jo
cmpb
mov
ja
jge
xor
loope
jne
push
sub
mov
not
pop
aam
xchg
daa
movsl
hlt
arpl
jp
addr16
cld
sbbl
arpl
add
stos
cmp
mov
adc
int3
add
cmpsl
add
push
dec
pop
testb
xor
in
add
fnsave
loop
dec
jo
push
mov
in
adc
gs
pushf
test
pop
push
xor
or
add
sbb
cli
dec
out
insl
lods
mov
and
mov
push
les
and
push
dec
stc
xor
xor
inc
jne
push
cmpsl
mov
mov
ret
pop
out
loope
stos
or
es
xchg
or
les
jp
je
xchg
lea
out
mov
mov
sub
int
or
out
cmpsl
imul
cmp
push
icebp
pop
xchg
inc
and
cmp
pop
dec
lret
in
out
sbb
aam
jne
push
mov
into
sub
sub
es
push
addl
or
in
jge
pop
lea
add
out
dec
icebp
jno
and
or
sbb
data16
pop
jl
ss
mov
push
push
sub
jl
es
mov
ret
lods
and
int3
mov
jmp
or
xor
dec
icebp
out
adc
shll
xchg
push
out
aaa
lcall
xchg
pop
imul
icebp
bound
cmp
cmpl
jp
push
mov
cmp
mov
sbb
adc
inc
mov
mov
loop
mov
xchg
mov
pop
add
sub
aas
mov
mov
ljmp
rep
pop
push
jne
and
pop
loope
inc
mov
cltd
psadbw
lahf
aam
popf
adc
fimull
sub
aam
lea
scas
std
push
sbb
sti
jmp
in
outsl
popf
aam
pusha
xchg
xchg
xchg
lret
cltd
mov
or
out
aad
dec
cmp
sub
mov
inc
pop
add
call
add
rorb
pop
aad
mov
repnz
push
hlt
jle
mov
jno
xchg
fbld
sub
push
movsb
in
mov
mov
xchg
sbb
addb
daa
pop
add
ljmp
cli
xor
mov
sahf
into
cmp
add
xchg
pop
add
inc
xor
xor
and
dec
xchg
mov
movsl
xchg
scas
in
jp
cmovo
sbb
push
mov
pop
iret
loop
test
and
mov
loopne
sub
jno
out
mov
jo
fiadds
clc
push
push
cltd
add
scas
or
push
sti
pop
jnp
add
pop
je
mov
and
xchg
cli
pop
cwtl
jg
sti
mov
sbb
adc
daa
mov
sahf
or
jp
mov
inc
pop
sub
mov
jbe
lods
add
mov
sub
fld
enter
mov
repnz
xor
jne
aad
in
neg
mov
xchg
jns
stos
xorl
xlat
mov
xor
mov
xchg
xchg
sub
in
push
pop
push
nop
jae
and
jo
outsl
xor
imul
mov
cmp
jne
lock
and
lcall
xor
int
mov
scas
sub
cmpsb
into
gs
insb
jnp
aad
push
mov
mov
jle
popa
aad
dec
cmpsb
xchg
hlt
popa
rorb
iret
jle
mov
jl
sti
inc
cmp
push
ret
sti
xor
inc
fucomi
adc
sbb
add
in
das
cmp
inc
add
push
mov
ja
sub
xchg
ljmp
mov
into
repnz
shlb
xor
push
dec
xchg
ret
test
ds
push
mov
loope
subb
imul
lcall
push
movsl
xchg
cmp
and
mov
jnp
aas
pushf
mov
jl
xor
mov
adc
pop
popa
pop
je
or
add
pop
dec
jb
nop
xlat
xor
adc
sahf
mov
jbe
movsb
dec
repnz
filds
test
rep
lods
inc
mov
or
int
and
sub
mov
ret
fildll
and
mov
mov
mov
dec
scas
fs
popa
add
test
pop
cs
dec
dec
pop
ret
push
jge
xor
in
sub
repnz
fcompl
movsl
dec
pop
jp
add
inc
fidivl
in
and
pushf
sti
add
pushf
pop
cld
inc
in
sub
lcall
jne
xchg
inc
imul
lahf
fsts
push
sbb
insl
pop
dec
aaa
out
sbb
jg
sub
mov
das
cmpsl
and
pop
jno
fadds
sbb
rclb
xchg
ja
jp
jo
push
scas
daa
push
cltd
mov
arpl
inc
imul
xchg
aam
dec
lods
ret
inc
jne
xchg
loop
pop
mov
sub
lock
cmpsb
push
outsl
push
mov
sahf
adc
lods
sub
push
pop
pop
pop
loopne
test
inc
repz
jge
sub
xchg
sbb
push
inc
mov
fidivrs
js
testl
adc
rol
sarl
inc
xchg
adc
sub
inc
les
jo
inc
iret
shlb
popa
cmpsb
sub
out
pop
xchg
sub
mov
je
daa
imul
lret
dec
or
pop
sahf
jae
mov
or
stos
dec
cwtl
outsb
sub
add
fdivrs
xchg
sub
jge
push
dec
cmp
sub
dec
mov
fldenv
push
cld
xchg
sub
push
pop
jnp
nop
lods
out
sub
jg,pn
jns
jbe
mov
and
mov
pop
inc
js
mov
xchg
out
xchg
rol
sbb
aaa
in
les
dec
lods
and
pop
jp
adc
js
mov
jp
mov
lds
shll
pop
pop
ret
ret
addr16
out
add
test
push
xor
xlat
xchg
xchg
call
ljmp
test
cli
sbb
pop
in
dec
jp
out
add
add
lods
or
cli
sti
pop
mov
sub
cmp
sti
dec
jnp
mov
repz
xor
dec
or
pop
cmp
pop
inc
out
aam
and
mov
mov
int
mov
dec
scas
sahf
ret
inc
ljmp
inc
xlat
stos
sbb
push
dec
pop
stos
fs
jae
pusha
jge
enter
lds
sub
scas
jne
xchg
xchg
movsl
repz
ds
lods
test
mov
dec
sbb
lcall
shlb
aaa
ror
sbb
lret
dec
aas
lret
mov
dec
fldt
insb
and
aas
inc
jecxz
cmp
jb
aaa
leave
and
dec
lea
ficoms
cmpsl
mov
cltd
jb
or
outsb
sbb
mov
loope
adc
xor
scas
cli
push
popa
das
cmpsb
out
stos
add
pushf
fcmovne
cwtl
xor
ljmp
mov
sbb
cwtl
aad
xchg
lret
xor
in
adc
aam
add
lcall
pop
push
mov
and
mov
loop
setp
xor
push
dec
xor
sub
xchg
cmp
cmpsl
xor
repnz
and
insl
push
dec
mov
mov
xchg
cmpsb
adc
in
es
or
jbe
aaa
dec
mov
dec
pop
pusha
arpl
loopne
adc
je
popa
mov
loop
push
std
push
cmc
jmp
and
and
pushf
repnz
scas
cmpsb
inc
push
dec
popa
sub
cwtl
fwait
mov
cmp
cld
dec
decb
mov
fdivl
scas
add
addps
mov
add
jno
push
fstpl
les
fisttpl
sbb
inc
push
push
fbstp
js
xchg
inc
out
imul
mov
loope
in
mov
xchg
dec
pop
xor
mov
daa
ficomps
mov
out
fstpt
mov
movsl
or
xchg
inc
enter
xchg
and
adc
inc
fimuls
shlb
xchg
cwtl
shrl
addr16
cwtl
push
bound
adc
push
add
jbe
pop
scas
mov
loopne
mov
jmp
pop
pop
lcall
lods
inc
mov
lahf
pushf
sbb
cld
mov
es
cmp
pop
or
pop
rcrl
mov
aam
lods
loopne
or
xchg
or
loopne
mov
mov
sub
stc
fiadds
mov
jle
jg
mov
dec
mov
push
cmp
ds
xor
xor
enter
movsb
xchg
dec
jae
test
mov
stos
stos
cmp
jge
xchg
repz
scas
xchg
in
stos
cmp
inc
adc
lock
int3
lock
js
xor
sub
movsl
sub
inc
scas
xchg
cltd
ret
mov
stos
int
jecxz
imull
mov
xor
outsb
lods
xchg
or
jge
andl
call
push
dec
out
cmp
cmp
cmp
imul
aad
jno
mov
xor
repz
leave
pop
lods
out
insb
add
rclb
push
cmp
pop
jbe
adc
push
outsb
orl
lcall
popa
cmpsb
pcmpgtd
je
cmp
popf
jo
dec
xchg
jae
sub
sbb
mov
sbb
xchg
rorl
dec
push
sbb
xchg
cli
add
mov
and
leave
mov
ficoml
dec
xchg
into
cmp
jo
cmp
jge
jnp
adc
jp
xchg
adc
lock
daa
jge
out
xchg
loop
in
lahf
jns
lods
dec
and
push
jbe
mov
and
jne
push
mov
je
mov
jo
push
rcr
pop
call
mov
cwtl
mov
iret
jne
xabort
inc
or
test
sub
sub
dec
push
clc
push
dec
pop
fwait
lgs
xor
mov
mov
cmpsb
in
ret
out
sarl
lods
movsb
push
lea
adc
mov
lahf
pushf
jmp
inc
das
jge
mov
push
jb
sbb
cmpsl
cmp
sahf
pop
popa
jecxz
mov
and
push
outsb
inc
lea
call
cli
movsb
xchg
jae
mov
bound
ljmp
xchg
call
or
pop
ret
fnstsw
imul
sub
push
push
pop
fdivp
mov
xchg
mov
repz
sub
adc
push
mov
dec
pop
push
stos
adc
ja
add
call
push
sahf
cmp
icebp
loop
xor
adc
lret
lea
nop
xchg
lcall
adc
int
dec
dec
ret
inc
je
xchg
ret
jle
mov
pop
aas
xor
lahf
movsb
mov
push
mov
cmp
test
mov
add
test
test
jle
aam
xor
sub
data16
pop
sub
aaa
sahf
movsl
jge
shrb
daa
daa
mov
test
jge
imul
xor
aaa
mov
imul
jbe
or
push
pop
push
shll
repnz
jp
mov
pop
jge
loope
loop
mov
push
push
pop
lock
sub
addr16
mov
push
mov
cs
pop
jmp
pushf
fsub
mov
out
lods
int
push
pop
push
xchg
adc
daa
pop
scas
push
xchg
sub
cmp
jae
mov
aam
xchg
adc
leave
rorl
cmp
daa
or
jge
mov
rorb
jle
lock
jmp
fcmove
sbb
inc
mov
mov
mov
lret
in
mov
lea
jle
push
mov
not
mov
aad
push
ss
mov
or
sarl
fistpll
cli
popf
std
sti
lcall
out
arpl
icebp
mov
mov
inc
mov
popa
cwtl
in
out
out
mov
cmp
pop
or
cmc
cs
jl
orb
fwait
leave
fildl
das
das
lret
xchg
cmpsl
adc
pop
popf
sub
je
cltd
adc
jge
mov
iret
stos
dec
xlat
inc
mov
loop
mov
icebp
scas
lods
sub
dec
and
sub
xchg
xchg
xchg
dec
pop
or
int3
das
outsb
stos
and
insb
cmp
push
jno
fcomp
je
jae
clc
js
push
icebp
movsl
in
pop
inc
leave
mov
test
push
mov
je
fimull
xchg
int3
ja
xor
into
jne
cmp
or
loop
aas
mov
or
pop
popa
lods
mov
dec
cmpsl
jno
dec
or
in
ret
push
out
cmp
lret
jle
cmp
sub
lods
scas
into
mov
arpl
ljmp
mov
lret
sti
test
rol
movsb
inc
insl
fldt
add
imul
cmp
in
adc
dec
xchg
xlat
in
shll
in
sub
dec
pop
aaa
ja
dec
aam
adc
jle
xchg
jmp
js
fadds
repnz
hlt
lea
push
je
pop
xchg
pop
stc
sbb
cmp
adc
xchg
sbb
repz
fs
sar
sub
outsb
and
imul
cmpsl
jnp
js
jne
push
xor
int3
js
in
dec
and
ja
mov
push
adc
or
jbe
mov
fwait
inc
xor
xchg
mov
adc
outsl
jmp
xchg
jns
xor
jl
sub
fidivrs
test
sbb
xchg
jmp
jns
out
jnp
mov
mov
enter
jp
and
jmp
cwtl
adc
jb
push
adc
ror
mov
pop
gs
push
orb
jne
ja
scas
cli
cld
lret
xchg
mov
and
enter
or
xchg
dec
in
data16
push
xor
fyl2xp1
adc
add
push
sub
je
and
sbb
fbstp
mov
xchg
push
mov
or
cmpsb
fcoms
push
addr16
and
cli
adc
sbb
sar
or
cli
inc
scas
call
mov
mov
jecxz
ss
movsb
popf
popa
mov
ret
call
jle
cmpsl
mov
xor
stos
cli
enter
xchg
test
and
lcall
and
sbb
mov
in
dec
leave
fisubs
jno
cmc
std
out
lock
mov
xor
xchg
pushf
out
testb
inc
fwait
rcrb
jle
and
push
gs
jp
jnp
adc
enter
inc
shlb
loop
inc
sbb
popa
xchg
ret
sbb
inc
mov
lods
jae
cmpsl
pop
mov
push
mov
iret
arpl
add
jbe
int
mov
dec
iret
fwait
sahf
xchg
mov
rclb
fsubrp
fisttpl
in
cld
cmc
lods
insl
jle
sub
cmp
aam
mov
and
mov
rdpmc
mov
shrl
hlt
xor
loop
push
icebp
add
pop
repz
cwtl
sub
enter
xor
mov
jecxz
filds
test
inc
test
cmp
out
das
lcall
movsb
in
add
jl
mov
div
insl
xor
inc
in
into
push
cmovbe
cwtl
std
mov
adc
leave
cmc
xchg
movsl
pop
and
gs
imul
xchg
push
test
sub
jmp
inc
sbb
add
stos
push
mov
push
pop
inc
jg
mov
xchg
int
inc
mov
dec
in
mov
xchg
test
outsl
cli
dec
or
pop
aaa
pushf
or
xor
cmp
fisubrs
clc
and
sarb
push
ljmp
jo
insl
je
add
xchg
xor
xchg
cld
mov
inc
jge
mov
cmpsl
loopne
push
jne
mov
cwtl
dec
ret
xchg
cmp
jns
mov
and
push
or
push
mov
mov
jl
popf
clc
bound
aaa
or
mov
lcall
sbb
es
mov
sbb
addr16
fstpt
call
int3
enter
lock
cmp
pop
es
jae
and
lock
mov
or
jae
lock
mov
les
lret
addr16
xlat
lods
sbb
adc
sub
dec
xlat
and
lods
jg
int3
mov
jae
sbb
pop
test
sub
fists
fstpt
sub
call
dec
adc
dec
mov
mov
pusha
ds
sbb
insl
sti
cmp
jbe
xor
dec
add
insl
cmp
pop
into
xor
xlat
cltd
lcall
jg
aam
insl
sub
xor
cltd
sub
ss
out
dec
inc
loop
cmpsl
inc
mov
fwait
iret
inc
out
sar
pop
add
or
aad
test
lea
jecxz
cmp
cs
jl
int
jbe
stc
adc
xor
shlb
cld
adc
outsb
push
xor
ja
sbb
mov
mov
jno
mov
push
pop
sahf
mov
aas
shll
imul
sti
pop
pop
ror
jb
cmpsb
pop
lret
push
add
mov
rcrl
inc
or
add
pop
mov
inc
or
xlat
fmull
js
adc
rcrb
shlb
mov
in
jmp
cmpsl
cmp
and
mov
pop
mov
pop
sub
es
fsubrl
popf
dec
aad
mov
adc
cmp
repz
xchg
add
ret
xchg
or
lcall
cmpsl
and
mov
nop
out
loopne
sti
mov
ds
mov
and
xchg
sub
cli
mov
jo
mov
inc
ds
sbb
jl
push
outsb
int
lret
sbb
movb
and
shll
test
test
mov
out
sub
inc
and
cs
xchg
mov
stc
jnp
pop
addr16
jecxz,pn
mov
xor
or
jge
mov
dec
idivb
repnz
or
adc
lock
xchg
mov
lods
push
cmc
in
xchg
add
or
mov
and
movsb
lea
mov
sarb
cmp
int3
test
sbb
pop
icebp
fwait
or
orl
jle
test
jle
mov
stos
or
pop
mov
andl
call
xchg
and
mov
mov
scas
mov
out
sub
lock
scas
cmpsb
jl
mov
or
sbb
fidivl
mov
cmp
mov
cmc
out
jno
inc
outsb
sti
ljmp
cld
mov
mov
lds
push
pop
loop
shrl
fnsave
sbb
push
ror
insl
jae
mov
jnp
dec
ror
mov
out
out
psubusb
scas
cld
popf
push
jge
enter
clc
lcall
outsb
cmpsb
fmuls
add
sbb
imul
ret
push
leave
imul
xor
hlt
dec
mov
mov
cmp
insb
inc
ret
jp
movsb
adc
cmp
push
add
push
push
sahf
push
loopne
cmp
or
out
les
inc
push
or
xor
sbb
mov
pop
xchg
inc
pop
xchg
mov
pop
pop
mov
cmp
mov
test
fimull
into
add
out
fs
in
xchg
fs
pop
cld
mov
inc
xor
jle
dec
pushf
adc
fldcw
mov
sub
inc
addb
push
aaa
leave
aaa
mov
xor
pop
addl
jg
inc
daa
sti
pop
or
test
insb
sbbb
and
mov
sbb
push
inc
and
inc
data16
pop
push
xchg
mov
rcrl
push
lahf
shlb
ljmp
mov
repnz
mov
lret
inc
mov
jle
mov
enter
pop
je
push
xchg
out
sub
or
xchg
movsb
lcall
lods
dec
shld
inc
inc
or
pop
mov
fsubp
flds
xchg
cmp
fmul
push
inc
mov
adcb
into
shlb
lods
sbb
in
push
aas
loopne
push
jmp
mov
pop
push
xor
icebp
pop
popf
mov
adc
dec
adc
fisttps
xor
pop
cmp
pop
dec
mov
gs
scas
mov
mov
mov
aaa
test
pop
xor
sub
aam
and
dec
mov
out
sbb
inc
dec
xor
inc
mulb
cltd
clc
std
push
ljmp
int
ljmp
cmp
mov
out
add
xor
mov
dec
and
lds
pushf
lods
xlat
daa
sbb
sahf
stc
push
adc
sub
out
stc
push
inc
and
outsl
ror
push
ss
pusha
mov
push
pop
cmpb
daa
aad
out
imul
lods
xchg
in
cld
enter
cs
xor
inc
sub
mov
dec
pop
les
mov
xor
pop
icebp
push
and
mov
popa
or
xor
ss
cmp
sbb
testl
rcll
lds
sub
mov
loop
pop
sar
mov
out
inc
pop
andl
xchg
and
and
pop
push
inc
out
jnp
cmpsb
or
nop
stc
in
lods
mov
rolb
rcll
mov
or
sbb
mov
sub
mov
out
and
jnp
push
adc
and
push
add
sbb
dec
inc
mov
pop
pop
push
in
add
push
push
inc
enter
add
cmpb
inc
and
fsubl
jl
insl
pop
insl
adc
idivb
sub
inc
shlb
data16
repnz
xor
jle
addr16
je
cld
stc
mov
and
xchg
aaa
inc
int3
pop
cmp
mov
and
sub
imul
dec
aad
mov
aas
dec
nop
xchg
popf
loope
or
adc
xor
cltd
mov
jb
mov
jmp
push
insb
jno
mov
xchg
mov
jnp
scas
adc
cltd
hlt
inc
in
imul
jne
outsl
adc
push
or
decb
mov
fbstp
or
repz
or
mov
in
es
adcb
outsb
lret
bound
movsl
xchg
loope
popa
jmp
pop
pop
mov
push
jp
imull
pop
sbbb
or
insl
adc
clc
loop
and
in
js
add
xchg
ret
popa
jge
mov
out
imulb
add
hlt
loopne
int
xor
mov
pop
movsb
sub
ret
lcall
enter
mov
inc
pop
in
es
int3
stos
in
mov
jns
xor
xor
mov
sbb
mov
lcall
fiaddl
popf
int
fcomi
out
mov
and
inc
cwtl
mov
rclb
popf
jmp
test
rorb
and
pop
dec
mov
movsb
lods
in
addr16
aaa
scas
cmpsb
fucomip
adc
dec
int
popa
out
push
lods
sub
and
dec
jecxz
sub
orb
mov
imul
dec
test
xchg
and
mov
add
mov
or
mov
xchg
test
mov
repnz
fwait
shl
insb
test
in
cmpsb
popf
ljmp
ljmp
movsb
push
icebp
nop
pop
inc
lret
push
ret
int3
adc
xor
sub
inc
fistpl
jne
nop
jno
scas
push
orb
pop
hlt
pop
insl
adc
into
inc
mov
cmp
lea
add
mov
jmp
cmp
inc
addr16
push
sub
dec
or
pop
push
incl
ja
sbb
jg
aas
aaa
int
test
mov
pop
xchg
cmc
negl
fstps
push
jl
jp
jne
or
add
cmp
push
mov
inc
daa
xchg
sub
ss
push
ret
sbb
test
popf
jno
dec
xlat
in
jle
cmp
inc
mov
test
cmp
jb
in
sbb
inc
rclb
shr
and
iret
mov
orb
test
inc
shlb
mov
les
jns
dec
xchg
and
cs
lret
cmp
pop
and
nop
xchg
sub
fsub
movsb
subb
lock
mov
jg
add
bnd
rorb
sbb
push
arpl
lahf
inc
cmpsb
adc
sti
out
lods
dec
fs
je
dec
in
test
cli
jmp
and
cmp
cmp
subb
or
lcall
arpl
shrl
arpl
rcl
shl
mov
cs
faddp
addr16
mov
mov
orb
sub
outsb
adc
xchg
lret
dec
jle
out
or
fxch
cmc
add
andl
pop
lahf
mov
lods
xchg
add
cmp
xchg
cmp
mov
and
cmpsb
orb
les
inc
lret
sub
or
dec
sahf
jecxz
movsb
xchg
inc
add
adc
and
add
aam
mov
mov
mov
xor
xchg
lret
sbb
rorl
adc
fmull
arpl
test
stc
mov
sub
imul
xchg
lds
orl
mov
movsb
outsb
loopne
test
sbb
movl
out
fldt
aad
mov
jl
pushl
fwait
sbb
ret
dec
sarl
jmp
ss
mov
mov
sbb
iret
iret
cmp
or
or
sub
sbb
mov
pop
sbb
inc
jnp
or
je
jae
out
inc
cmp
cs
inc
movsb
adc
adc
outsb
inc
mov
icebp
bound
adc
mov
push
jae
loope
sub
or
xor
mov
mov
cmp
out
sbb
jo
or
outsb
pop
jg
in
stos
rep
xlat
pop
mov
scas
jge
data16
push
sub
xchg
cmp
dec
add
ret
and
lahf
mov
cmc
xchg
fwait
pusha
cmpsb
xor
loope
xlat
insb
lods
cli
data16
test
pop
sti
sti
fcoms
xor
mov
movsl
test
push
inc
andb
xchg
arpl
stos
ss
or
sub
cmp
lds
std
cmp
mov
in
cmp
test
daa
mov
lret
mov
cmc
inc
cmp
cmp
ljmp
std
pop
ret
out
aas
or
or
fdivl
lret
pop
cmp
scas
iret
insl
push
mov
cmpsb
das
sub
stos
push
aam
xchg
sarl
jl
pop
jns
vandnpd
mov
inc
dec
sbb
push
add
leave
sbb
aas
jo
mov
scas
imulb
andb
aad
push
insl
xchg
jl
cmp
fsub
mov
aam
stos
in
insl
shlb
test
adc
iret
xchg
sahf
pop
jg
xor
adcb
inc
xchg
push
add
dec
scas
dec
nop
inc
sbb
cmc
std
or
push
sbb
wbinvd
add
nop
cmp
push
push
xor
sbb
pop
sub
push
add
addr16
gs
and
mov
iret
adc
in
out
jge
ret
imul
js
fmulp
push
dec
inc
aaa
dec
sti
add
test
mov
xchg
push
imul
adcl
xchg
inc
mov
mov
pusha
and
mov
sbb
cmp
inc
and
js
mov
and
test
jecxz
clc
loop
sbb
loope
mov
dec
ljmp
aaa
cmc
cmp
and
nop
adc
inc
add
add
sbb
jle
jno
in
lods
xor
idivl
mov
and
incb
push
mov
cld
cmc
fs
mov
stc
popa
call
notl
sbb
pop
pop
std
sbb
add
jecxz
addr16
mov
iret
jecxz
inc
push
xchg
xchg
xchg
call
inc
addr16
repz
xchg
push
cld
sahf
imul
adc
movsb
or
aam
push
repnz
or
cli
push
out
xchg
scas
cmc
xchg
enter
xchg
jp
rol
adc
dec
add
and
rcll
and
adc
xchg
xor
cmpsl
xlat
data16
pushf
push
and
xor
jl
dec
mov
pusha
ljmpw
or
sbb
hlt
mov
push
mov
and
sub
inc
std
cmp
xor
dec
dec
lahf
out
lret
lods
xchg
xchg
mov
pop
repz
sbb
leave
test
ret
mov
push
pop
cmp
ljmp
mov
iret
xchg
insb
int
add
add
mov
cmp
jnp
movsl
cld
xor
cmp
push
or
out
aam
mov
rorb
cmp
data16
es
shll
call
fsubs
push
imul
lcall
gs
pop
adcb
or
outsb
sbb
std
dec
jecxz
lret
push
and
sub
xchg
push
dec
add
cmpsl
lret
push
add
mov
imul
movsb
ds
add
jns
inc
je
bound
leave
aas
popf
mov
inc
shrl
cmc
push
inc
imul
cs
adc
out
arpl
arpl
lock
sub
psubd
sbbb
xor
data16
lret
rolb
xchg
and
subl
int3
mov
sub
sahf
mov
les
dec
xchg
jge
mov
mov
xchg
outsl
leave
xchg
mov
add
jl
pop
sub
repnz
push
shll
nop
movl
lahf
jae
push
jb
ds
xlat
adc
ds
add
iret
movsl
stc
aas
jle
incl
imul
arpl
shlb
jmp
mov
mov
cmpsl
jl
cltd
sbb
add
aaa
es
and
mov
push
xchg
cmp
fimull
xchg
sbb
mov
or
ret
out
pop
jae
rol
push
or
fdivl
pop
ljmp
mov
insl
inc
xchg
stc
js
xlat
stos
push
jbe
lcall
imul
push
or
or
fisubs
add
sub
xchg
pop
pop
pop
js
jns
jno
les
ret
inc
enter
imul
xchg
and
ljmp
jp
jmp
xor
sbbl
incb
mov
adc
addb
add
out
addb
ja
pop
xor
mov
lcall
sbb
dec
sub
sbb
lock
hlt
shll
call
mov
xchg
adc
jnp
lahf
jo
sub
cmpsb
mov
sub
xchg
xchg
nop
jae
in
stc
ljmp
icebp
jbe
jae
dec
adcb
sbb
enter
lret
bound
and
sbb
scas
test
out
cmc
das
or
mov
leave
xor
push
imul
sub
mov
cwtl
mov
add
imul
xchg
into
sbb
add
subb
pop
dec
ret
push
cltd
jnp
ret
cld
and
cwtl
sub
pop
les
adc
and
gs
test
and
int
dec
dec
into
pushw
push
shl
das
shll
test
xorl
add
jae
stos
push
shl
gs
xchg
cmpsb
aad
mov
jae
and
fbld
pop
adc
jae
cmp
daa
xchg
aaa
mov
sarb
add
mov
sub
push
ss
jmp
xlat
jmp
jns
mov
lret
inc
pop
roll
mov
mov
xor
or
sub
and
insl
into
pop
popa
dec
sub
aaa
mov
aad
arpl
nop
and
lds
int3
popa
in
jmp
ljmp
or
adc
dec
or
dec
std
sahf
or
js
out
mov
push
shll
add
inc
idivb
scas
les
inc
outsb
jbe
cwtl
xchg
movb
jb
add
pop
sbb
or
scas
sub
inc
pop
jbe
shll
pop
dec
test
in
subb
stos
xchg
push
out
repz
testb
test
mov
fs
fwait
mov
cld
insb
sarl
cwtl
and
loope
arpl
dec
pop
imul
mov
test
push
add
js
rorb
insl
add
cltd
adc
dec
push
test
ss
adc
subb
mov
sbb
dec
inc
loope
xchg
add
sub
adcb
call
scas
frstor
sbb
xlat
shll
xor
icebp
push
int
aam
fcmovnbe
mov
sarb
pop
dec
imul
scas
insb
jecxz
inc
out
rol
cli
aas
jns
je
data16
jle
dec
scas
popa
mov
push
add
adc
sbb
mov
hlt
mov
xchg
add
int
daa
enter
cmp
jmp
dec
ds
das
shrb
scas
inc
pop
mov
cmpsl
pop
lret
aas
ret
and
fs
data16
shr
pop
lcall
fidivs
pop
aas
in
mov
inc
sbb
mov
mov
testl
mov
jmp
lock
sub
fmuls
xchg
sbb
push
fnstcw
mov
out
lret
add
hlt
std
mov
inc
inc
sbbb
adc
push
mov
enter
into
loopne
dec
daa
and
mov
adc
popf
add
dec
scas
mov
imul
mov
xchg
movsb
pextrw
or
mov
sahf
inc
das
jo
xor
pop
rorb
pop
dec
das
xchg
mov
jg
bound
lret
mov
cli
je
in
xor
pop
jp
xchg
rclb
mov
lcall
rcrl
cmc
mov
test
into
mov
push
inc
repnz
ljmp
mov
xor
emms
push
ret
pop
in
shrb
cwtl
cmc
fidivs
jb
mov
or
xor
or
iret
xchg
xchg
fmul
push
inc
enter
or
mov
ds
xor
pop
fwait
xchg
pop
icebp
mov
dec
jmp
cwtl
loop
xchg
pusha
adc
fcmovne
jbe
test
lcall
jne
adc
push
js
aad
sbb
jecxz
or
in
pop
or
inc
hlt
movb
stos
sub
adc
pop
xchg
sar
lea
lds
jl
xor
push
fwait
aas
jmp
xchg
mov
popa
test
xorb
icebp
inc
dec
dec
ret
loopne
outsb
jge
insb
or
dec
adc
and
or
inc
jb
lea
and
subl
mov
dec
push
cmp
lcall
lret
rclb
mov
jmp
lods
push
push
popa
ss
test
test
pop
subb
push
ds
and
xor
dec
mov
imul
inc
aaa
mov
mull
mov
jle
sti
popa
aad
xchg
stc
xchg
dec
xchg
adc
gs
jmp
pop
in
xor
mov
insb
insb
xor
fildll
pusha
push
iret
mov
sub
mov
inc
das
jmp
dec
mov
pop
sub
repz
xor
push
push
xchg
dec
std
sub
adc
xor
inc
negl
lret
push
sahf
pop
jbe
push
ss
icebp
cmc
in
pop
hlt
das
push
mov
jmp
mov
out
repnz
enter
mov
lea
adc
sahf
scas
jl
lret
ljmp
mov
add
aas
add
stc
in
int3
cmpsb
pop
inc
pop
ret
lds
or
xrelease
popa
js
sub
mov
andb
dec
push
lret
inc
mov
xor
movsl
stos
sub
jno
sbb
inc
insl
pop
sti
fs
cltd
pop
fwait
cmpsl
cwtl
cld
in
mov
pop
in
mov
mov
xchg
jle
jns
shlb
cmpsb
push
or
xor
fcompl
pop
pop
int3
std
inc
int3
fadds
jl
mov
jecxz
dec
xchg
inc
dec
out
out
sahf
xor
fisubs
lods
sub
xor
mov
jne
jno
mov
xchg
and
xor
and
aad
mov
shrb
movsl
ret
jo
sbb
dec
add
shr
bound
dec
mov
insb
dec
popa
insb
sub
inc
clc
mov
cmp
mov
inc
ficompl
dec
mov
lea
mov
outsl
pop
lret
jle
jecxz
icebp
jo
insb
mov
xor
xchg
mov
pop
jp
xchg
into
insb
gs
pop
and
jae
rolb
jae
xor
xor
in
mov
out
pop
shlb
pushf
cmp
popa
test
xor
dec
cmp
xor
push
js
push
pop
dec
push
das
aam
dec
add
sbb
push
sahf
stos
daa
lcall
dec
dec
cmp
lcall
mov
mov
push
addr16
cmpsl
mov
sbb
and
in
jbe
xchg
rclb
icebp
sub
add
imul
inc
rcrb
outsb
xor
mov
sbbl
imul
xor
jl
xor
test
mov
das
inc
gs
dec
fwait
sahf
cmc
testl
adc
cli
mov
ss
jne
call
out
cld
add
or
dec
outsb
cwtl
push
mov
test
sub
pusha
leave
inc
data16
or
jg
push
push
jp
aad
fstps
mov
or
cltd
repz
xchg
cmp
xchg
adc
sbb
inc
mov
push
orb
sub
lret
ds
popa
add
dec
adc
mov
and
mov
push
outsb
scas
jnp
sbb
inc
fdiv
xchg
aaa
dec
push
mov
xorl
dec
decl
cmp
addb
jge
ja
mov
lret
loop
lahf
mov
sbb
test
ffreep
lods
andl
xor
outsb
aad
sub
enter
jmp
xor
mov
add
ja
mov
leave
and
sub
fstpt
cli
adc
ret
shr
insb
xchg
fistpl
sbb
push
mov
mov
mov
outsl
push
sub
loopne
add
daa
ss
outsb
jnp
mov
es
pop
jle
dec
push
cmp
call
cmpsb
or
or
mov
jne
clc
jl
sarl
aam
dec
les
dec
into
and
lock
add
cli
inc
xlat
scas
jns
or
lahf
push
lret
lahf
ja
dec
and
add
mov
jl
data16
outsl
or
js
out
stos
scas
cmp
lret
nop
je
add
inc
inc
cwtl
test
pop
neg
push
jnp
jb
les
adc
mov
rolb
shr
mov
loope
add
adc
sub
pop
jae
jne
mov
leave
mov
imul
mov
pop
xchg
cmp
xchg
les
loop
dec
xchg
in
push
jle
insb
sub
lahf
pop
sarb
cmc
jbe
or
popl
add
inc
jle
push
mov
mov
iret
add
inc
enter
dec
and
daa
ficompl
or
rorl
and
and
mov
sub
jmp
adcb
xchg
xor
mov
hlt
movsl
push
ficoms
mov
push
shrb
or
out
xorb
cmp
lahf
sbb
sub
jb
inc
shrl
mov
cmp
xor
xorb
cld
sti
not
sbb
mov
adc
dec
enter
pop
aas
es
cmp
xlat
adc
push
inc
push
sub
sub
lds
lahf
and
in
jecxz
aas
clc
rclb
fsubs
push
mov
lock
sahf
shll
hlt
clc
into
mov
dec
fisttpll
push
adc
push
and
push
stos
cmpsb
lret
aad
outsb
jge
in
sbb
jno
fstpl
scas
mov
stos
pop
fldcw
shll
sub
push
in
or
xchg
repz
mov
mov
in
push
loope
add
mul
xchg
outsl
imul
jae
xor
std
or
movsl
jnp
adc
lods
pop
adc
sbb
mov
fwait
in
mov
aad
pop
into
cwtl
in
adc
and
mov
movsl
dec
insb
jl
dec
add
mov
xchg
out
jp
and
rcl
mov
sbb
add
movsb
fdivrs
pop
movsl
lods
into
jb
sahf
inc
jbe
cltd
mov
mov
mov
xchg
pushf
js
data16
sti
aaa
test
out
adc
jae
mov
mov
mov
dec
push
sub
and
and
rcl
lcall
mov
inc
and
lock
and
xchg
cmp
das
dec
or
lds
adc
mov
insl
or
loopne
add
mov
mov
xor
mov
not
xchg
subb
inc
mov
lret
outsb
dec
and
cltd
mov
repz
and
jns
fnstcw
add
pop
cmc
pop
add
cmpsb
lds
ja
aas
push
and
inc
ds
fisttpll
pop
xchg
or
mov
mov
cltd
scas
test
xor
or
outsl
dec
int
and
enter
loop
rcrb
jbe
loop
mov
add
gs
aaa
and
dec
sub
cmpb
cs
out
stos
xor
pushf
fbld
das
mov
or
stos
aaa
test
mov
loop
lahf
roll
or
out
mov
dec
pushf
and
cmpsl
add
cli
pop
repz
std
push
stos
cmpsb
jg
mov
push
fstpl
lock
jle
inc
jg
inc
xor
test
fildl
imul
pop
shll
in
jg
add
jge
sub
push
sbb
lcall
in
lods
sub
sub
movsl
cwtl
sbb
jo
scas
in
xor
adc
mov
pop
pop
dec
ret
lock
xchg
or
icebp
jl
in
aad
dec
lock
or
or
dec
mov
mov
jne
lods
xlat
add
nop
sub
push
mov
cli
inc
inc
adc
lds
xchg
cmp
jecxz
mov
ficomps
jmp
cmp
aas
xchg
jl
mov
xchg
cmp
scas
push
das
cld
mov
inc
lret
mov
jl
lds
js
js
xor
pop
pop
xchg
jle
jecxz
test
inc
mov
cmp
jb
xchg
lods
rolb
jne
sbb
adc
inc
and
cltd
adc
fs
xchg
dec
and
lret
int
push
and
pop
and
ja
mov
jmp
xchg
arpl
push
xor
js
mov
subl
shl
cwtl
lcall
push
loop
xor
mov
sbb
mov
xor
inc
xchg
add
test
sub
repnz
xchg
inc
dec
mov
mov
aas
loop
loop
test
outsb
and
sbb
in
cmp
push
stos
outsb
adcb
mov
icebp
add
imul
sbb
add
xchg
lock
push
scas
mov
out
pop
dec
mov
sbb
pop
pop
sbb
pop
lcall
call
icebp
push
shlb
add
fbld
out
dec
in
andl
cmp
int
sbb
cmp
fnstcw
pop
into
test
movsl
je
pop
adc
add
leave
push
popa
imul
les
jne
and
jb
sub
int3
sahf
sub
and
es
into
mov
cmpsl
and
leave
lcall
sbb
inc
iret
cs
aam
mov
and
jmp
lods
in
or
inc
addr16
xchg
mov
das
ret
scas
pop
arpl
jns
pop
mov
sbb
rclb
sub
xchg
inc
cmpsb
aad
xchg
pop
or
nop
mov
push
mov
sub
mov
ljmp
xor
mov
push
cmp
cmp
test
iret
mov
lahf
incb
or
or
jmp
lret
inc
decl
ffreep
bound
add
mov
aas
sub
cwtl
shlb
mov
pop
push
sbb
pusha
add
sbb
rcl
dec
mov
mov
sbb
repz
arpl
mov
scas
mov
push
mov
or
sbb
adc
lea
xchg
cwtl
test
push
ljmp
mov
sti
and
repnz
inc
add
hlt
push
and
cmc
sub
jle
repz
clc
push
push
sub
ss
aad
cmp
mull
cmpsb
in
fadds
lods
shll
adc
pop
imul
push
adc
sbb
push
ret
sbb
movsb
andb
push
push
mov
mov
mov
sbb
pop
mov
fldt
fs
mov
cmovs
mov
mov
addr16
stos
lods
arpl
inc
mov
xor
insb
xchg
fwait
xlat
sbb
xchg
cmp
sahf
leave
enter
lock
cmc
fimuls
and
jns
hlt
jb
pushf
add
loopne
pop
dec
xchg
mov
pop
enter
aam
lret
lahf
out
mov
sbb
mov
mov
rol
adc
inc
adc
mov
cmp
movsb
into
rol
rorl
jge
hlt
mov
sub
mov
mov
xor
repnz
mov
dec
push
mov
adc
adc
movsl
pop
xchg
adc
mov
dec
and
mov
mov
mov
xlat
out
cli
mov
bndstx
into
dec
sbb
movntq
out
mov
or
outsl
js
lea
mov
fwait
sub
pushf
out
inc
sub
mov
idivb
or
movsb
push
fstps
mov
rorb
mov
pop
adc
dec
iret
into
fwait
push
jae
lods
xchg
sub
pop
jno
push
scas
fwait
mov
ret
dec
pop
and
mov
iret
cltd
pop
dec
loopne
xchg
sbb
add
or
add
call
sahf
les
xchg
inc
push
cltd
mov
mov
inc
push
dec
or
sub
xchg
sbb
stc
sarb
inc
push
jbe
xchg
into
or
mov
dec
popf
adc
test
sbb
jg
and
push
dec
dec
mov
cs
sbb
push
cmp
push
aas
jp
xor
cmp
xlat
insb
xchg
leave
std
sub
das
sub
addl
cmpsb
xchg
rcrl
test
mov
xor
mov
push
aam
fwait
mov
popf
rorb
pushf
xor
add
inc
adc
out
ljmp
mov
mov
jno
and
stc
daa
sbb
sbb
add
fmull
pop
mov
mov
sahf
xchg
aam
out
jno
ret
das
xchg
pop
sti
in
mov
cs
test
das
imul
loope
push
jae
mov
xchg
mov
icebp
mov
sbb
mov
lret
dec
pop
lret
mov
sub
push
or
mov
fisubl
andb
cmp
imul
mov
inc
jae
ficomps
cmc
cli
lret
mov
out
xchg
adc
repz
loopne
jmp
inc
mov
sbb
push
xchg
mov
mov
sbb
add
leave
rclb
pop
sarl
ss
loopne
je
push
hlt
xchg
repnz
cmc
test
push
xchg
inc
lock
xchg
int3
ja
ja
xchg
mov
and
dec
jae
scas
or
daa
push
call
into
inc
and
and
testl
add
and
mov
xchg
stos
arpl
mov
xor
push
push
mov
fld
fmull
xchg
pop
loope
mov
and
sub
fcmovu
cmc
shlb
je
add
mov
stos
pop
and
xor
dec
repz
shrl
pushf
test
lahf
pop
xchg
push
stos
fnstenv
ss
sbb
jp
sbb
fs
xchg
jmp
mov
mov
jae
xor
dec
mov
cmp
cld
mov
dec
scas
jns
sub
pop
jge
pop
bound
idivl
pop
adc
cmp
dec
mov
data16
and
subb
jl
push
rcrb
dec
out
pusha
mov
or
sub
and
loope
rol
mov
rcll
jmp
jb
jno
enter
xchg
cmp
xchg
mov
cld
adc
leave
cwtl
fwait
out
icebp
pop
imul
xchg
sub
out
repz
test
lock
pop
imul
in
std
jmp
or
mov
jne
fs
insl
mov
arpl
sbb
and
xor
push
fisubs
loope
jg
ljmp
mov
fs
in
or
in
dec
inc
rcrl
mov
js
cmp
jle
ret
push
xor
xchg
mov
mov
xlat
and
stc
push
mov
jbe
mov
inc
and
cmp
dec
jns
test
fwait
mov
jl
in
std
lea
daa
pop
aad
shll
pop
mov
rolb
mov
jmp
je
test
sbb
pop
js
into
xlat
jb
adc
mov
adc
out
ret
mov
loope
sub
mov
pop
jo
and
aas
pop
lret
mov
jle
imul
cmp
sbb
push
mov
mov
xchg
cs
test
xor
daa
imul
loop
repz
pop
cmp
cltd
adc
sub
fdivrl
jecxz
jbe
stc
mov
sub
stos
jae
mov
add
popf
sub
or
xor
sbb
adc
sti
roll
inc
push
pop
or
xorb
leave
test
dec
xchg
sbb
push
fadd
sbb
inc
sahf
mov
xor
and
cmp
pop
inc
push
js
xor
push
sarl
adc
add
dec
push
mov
in
into
add
popf
sti
loop
and
dec
stc
lcall
jbe
pop
dec
adcl
test
gs
cwtl
ja
inc
fisubrl
xchg
packuswb
dec
sub
inc
rcrl
ret
sub
push
sbb
xor
jb
lea
cltd
adc
test
jge
jmp
nop
xor
xchg
scas
fcomps
jnp
mov
popa
mov
sbb
jge
iret
inc
cmp
or
ret
and
push
sbb
idiv
insl
xor
cwtl
imull
mov
js
out
push
outsb
xor
push
cld
mov
aad
dec
idiv
push
mov
ja
inc
les
into
ja
dec
adc
pop
pop
mov
push
jmp
xor
sbb
jo
jmp
mov
movsb
dec
sub
std
sub
fisubrl
subb
mov
les
lods
mov
loopne
test
fs
out
idivl
aas
fnop
push
pushf
mov
adc
dec
xchg
bound
clc
add
cmp
jnp
adc
aas
imul
pop
loopne
mov
les
test
lahf
cmp
test
aad
pushf
push
xchg
mov
fstp
or
mov
inc
or
sahf
sbb
xchg
and
mov
loope
push
xchg
jo
andl
insl
sahf
jl
loope
fsub
dec
movsl
sub
cmc
mov
scas
push
fidivs
fnstenv
bound
sub
xchg
aam
cmp
pop
sti
aam
insl
into
mov
sub
lea
adcl
movsb
push
pop
insb
pop
andl
insb
imul
sbb
xchg
dec
clc
shll
pop
and
or
lret
out
push
fisttpl
xchg
push
test
out
sub
repnz
add
cmpsl
or
insl
dec
push
ds
jge
xchg
mov
lds
add
lock
ret
cld
mov
imul
adc
loopne
jne
adc
sahf
sarb
xchg
fildl
jle
lret
push
add
test
fucomp
push
mov
adcb
push
ja
dec
or
stos
sub
ret
lds
pop
out
sub
xchg
or
pushf
push
dec
sub
sbb
in
out
iret
stos
movntps
xchg
pop
cli
mov
push
jg
jae
in
push
ljmp
push
cld
sub
stos
or
sbbb
xchg
sbb
jb
adc
ret
sbb
lret
daa
xchg
adcl
jle
jae
out
into
jo
add
sti
mov
fbld
ss
lds
fdivl
add
jecxz
sbb
dec
rcr
fcomps
or
bound
push
loop
inc
in
xor
addr16
sbbl
enter
mov
in
mov
add
daa
cwtl
sahf
stos
mov
data16
add
test
iret
sarl
mov
cmpsl
call
mov
mov
jo
repz
aad
push
xor
mov
cli
ss
addr16
push
mov
pop
adc
aas
ret
sbb
pop
out
jg
loope
out
push
enter
and
arpl
test
outsb
es
aam
mov
sarl
push
inc
jno
cmp
adc
shlb
shlb
test
loopne
adc
xchg
xchg
arpl
shll
repz
mov
mov
clc
inc
test
lret
decl
xor
das
out
mov
int3
sbb
mov
test
fidivrs
push
loopne
sti
int3
jg
test
inc
add
insl
push
mov
js
insl
outsb
dec
push
jnp
add
mov
ret
les
adc
in
sub
rorb
mov
int3
pusha
ficoms
xchg
js
out
inc
rcrl
out
sub
leave
out
xchg
add
mov
xchg
out
adc
pop
orb
jb
rclb
loope
daa
sub
outsl
fwait
xor
mov
jl
sbb
sahf
inc
cmp
mov
cld
mov
add
push
adc
in
in
pop
pop
jns
mov
int
push
ror
dec
jnp
loop
inc
out
mov
fndisi(8087
and
sti
cltd
fmul
sub
daa
lods
cmp
xor
and
arpl
arpl
dec
aaa
mulb
sub
and
inc
sub
jns
and
outsl
stos
add
out
cs
add
dec
in
call
mov
adc
jo
cmc
cmp
jnp
popa
cmc
sti
jl
and
aad
in
out
mov
dec
ljmp
push
subl
jbe
and
negb
rclb
mov
jbe
in
les
arpl
jb
jb
mov
inc
dec
cltd
das
add
pop
adc
pop
sti
mov
mov
mov
jge
push
mov
pop
mov
jge
rcrl
enter
fisttpl
test
push
inc
cmp
inc
ss
cmpsb
xchg
jmp
xchg
cmpb
pushl
sub
pushf
cli
xor
inc
enter
lret
mov
dec
ret
cmp
test
dec
cmp
pushf
imul
cwtl
and
add
push
or
out
in
mov
add
mov
ja
push
xchg
mov
sub
scas
lahf
pop
pop
mov
pop
fstpt
fs
inc
and
fwait
in
dec
sub
jmp
jp
push
push
xlat
jge
push
and
dec
add
popf
notl
and
andb
inc
xlat
lds
shlb
push
cmp
dec
add
pusha
pop
cltd
mov
imul
jl
cmp
mov
ds
and
pop
sbb
aas
mov
dec
jb
subl
add
iret
sub
icebp
ds
add
sbb
insb
adc
push
mov
xlat
jns
mov
add
mov
push
mov
bound
imul
mov
or
shrb
ljmp
jmp
shr
mov
or
inc
push
nop
mov
mov
or
lcall
mov
pushf
push
mov
stos
sbb
jp
out
inc
das
sub
mov
test
pop
daa
xchg
adc
cld
pusha
cmp
adc
pop
mov
int
jle
jae
push
shll
in
aaa
push
or
push
aas
pusha
mov
rcll
cli
imul
outsl
xor
push
fldenv
pop
sbb
mov
mov
jnp
mov
mov
jmp
push
jecxz
inc
mov
pop
es
ds
jmp
sbb
iret
push
ud1
pop
ret
dec
xchg
imull
or
imul
add
fcom
sub
std
loopne
int3
jo
pop
movsb
or
jmp
add
cmp
jo
fistps
push
pop
clc
into
lcall
rcr
push
mov
cmp
cmpsl
shlb
jl
and
stc
xchg
push
sbb
fwait
inc
jmp
dec
ss
cmpsb
dec
xor
add
ficompl
ds
cmp
fstpl
push
inc
push
jle
mov
jae
arpl
xchg
fldz
roll
xchg
push
jo
dec
movsl
push
mulb
sub
push
sbbb
testb
mov
arpl
cltd
add
cmc
in
sub
jg
mov
add
xchg
nop
push
sbb
stc
xor
mov
jae
lahf
rclb
add
xchg
pushf
push
lahf
call
call
fisubl
dec
cwtl
dec
fiaddl
xchg
push
xor
jns
repnz
jl
loope
jl,pt
lock
push
popa
lahf
es
lock
roll
sarl
sub
pop
fldl
ret
fwait
jle
add
xchg
clc
and
inc
push
insl
jle
inc
ljmp
dec
lret
jle
cwtl
push
aas
xor
aad
popf
lret
hlt
mov
das
imul
std
arpl
out
pusha
fnsave
or
add
mov
mov
jle
lods
aam
out
lods
mov
iret
outsb
push
mov
xor
and
adc
out
in
xor
jmp
jmp
mov
dec
adcl
aas
dec
mov
fadds
xorb
out
js
shl
cwtl
into
out
je
ss
mov
add
popf
xchg
das
lods
and
and
sti
mov
fidivs
xchg
int3
ret
dec
mov
mov
sub
out
xchg
jnp
into
ret
sbb
scas
inc
icebp
xchg
cmpsb
xchg
or
push
jnp
sub
lods
lds
jmp
pop
pop
pop
in
shll
add
sub
arpl
xor
sbb
lds
jno
xchg
mov
jmp
push
fimuls
jae
ret
fisttps
pop
adc
stc
cmp
or
mov
dec
addl
cmpsl
add
mov
pusha
fisubs
sbb
jp
loopne
lods
test
adc
fidivl
and
mov
mov
fldenv
and
ljmp
enter
stc
aaa
je
in
push
fnstenv
xor
test
mov
call
movsb
mov
or
fimull
jp
pop
fs
ss
inc
pushf
sub
movsb
push
xchg
jno
cmpsb
jnp
mov
inc
testb
fdivl
or
xlat
aam
es
or
test
and
aaa
mov
roll
jecxz
jno
ss
mov
cmp
das
or
je
cld
xor
jecxz
aas
lret
fcomps
lcall
sbb
fnsave
dec
xchg
cmp
dec
adc
or
push
rol
ret
mov
clc
dec
int3
addr16
je
adc
mov
scas
sub
cmpsl
and
xchg
in
mov
cmp
add
sarb
pop
jo
dec
mov
sbb
pusha
add
cmpsl
sarl
lret
xchg
fimull
ss
aam
ret
pop
and
xchg
or
orb
roll
aaa
xchg
dec
shll
repnz
ss
pop
insb
hlt
mov
pop
jp
inc
repnz
pushf
movsl
cmp
mov
loop
xchg
push
xor
scas
mov
pop
insb
cmp
mov
mov
pop
sub
hlt
rcr
addr16
insb
stos
push
cmpsl
or
xlat
add
adc
data16
jle
int
jbe
enter
test
stos
sarl
xor
xchg
cmpsl
inc
scas
sub
aad
cs
clc
out
add
jnp
or
mov
inc
jmp
jmp
push
push
in
leave
in
ret
js
lret
adc
icebp
add
jo
dec
cmp
push
jg
cltd
or
lcall
fisubrs
cmp
mov
aad
xchg
scas
xchg
xor
and
mov
pop
pusha
jo
push
outsl
inc
pop
and
hlt
insb
xchg
test
push
mull
adc
pop
cmp
jne
xchg
dec
sub
sub
xchg
cmp
adc
mov
jb
out
cmc
mov
mov
lret
mov
push
mov
add
mov
fimull
inc
jns
in
test
insl
int
or
xor
test
mov
ja
cld
jbe
out
inc
mov
sti
es
popa
sahf
mov
cltd
nop
fistl
out
and
lea
in
sub
xor
cwtl
pop
inc
pop
sbb
lahf
ficoms
xor
push
sbb
xor
addr16
xchg
push
mov
cmp
push
sub
mov
pushf
insb
jecxz
xlat
and
xchg
mov
les
and
fistps
cmp
cmp
dec
and
sub
aad
out
rol
pop
inc
enter
std
xchg
popa
and
or
gs
mov
or
lret
sub
inc
mov
iret
rolb
cmp
mov
mov
xchg
imul
xor
insb
sahf
pusha
nop
repz
push
addr16
mov
outsl
mov
mov
ret
mov
jns
scas
ss
cmp
dec
scas
dec
int3
cmp
hlt
cmp
cmpsb
push
mov
jecxz
scas
ds
fcomp
push
xor
adc
in
test
adc
out
or
add
and
jne
pushf
dec
jle
xchg
sub
fcoml
xor
dec
sub
shll
inc
sar
lahf
add
adc
or
dec
sbb
int
fstpt
xchg
inc
sbbl
or
mov
fildl
pop
aad
push
mov
enter
cmp
xor
in
iret
mov
or
mov
cmp
mov
out
jb
jecxz
fisttpll
or
xor
pop
and
dec
insb
push
call
aas
push
xor
push
adc
lods
and
mov
loope
and
sahf
fwait
jnp
cwtl
icebp
pop
lds
sbb
mov
mov
inc
mov
xor
lock
ljmp
push
bound
faddl
in
or
test
sbb
or
iret
lock
sub
or
out
or
xchg
jmp
push
stos
push
pop
ret
nop
das
ret
sti
inc
adc
push
mov
loope
mov
mov
push
inc
testb
int3
dec
outsl
sahf
scas
shll
adc
push
dec
dec
insl
mov
or
rorb
pushf
adc
insb
repz
pop
das
fldl
out
pop
out
mov
movsb
jae
repz
sub
mov
mov
sub
lea
pop
sahf
xchg
loop
pop
xchg
cwtl
std
outsb
push
lret
mov
jae
xlat
adc
testl
sbb
inc
and
jle
out
adc
outsl
inc
inc
lret
dec
addr16
mov
xlat
test
adc
jle
xor
in
push
cwtl
jecxz
xor
mov
loopne
imul
and
sub
in
push
int3
xor
int
sub
mov
xor
orb
fisubs
mov
sarl
cli
push
rclb
add
lret
fwait
mov
repz
dec
int
mov
cld
les
test
xchg
dec
out
pop
mov
pop
push
cli
movzbl
clc
xchg
sti
push
cmp
lahf
pop
int
lret
ja
outsl
rcrl
mov
cmovge
or
mov
shrl
out
pop
push
fstpt
subl
sti
shl
ds
push
aad
loop
pop
jmp
xor
mov
jns
nop
mov
popf
mov
or
pop
push
and
sbb
or
dec
shlb
cmp
push
cli
inc
lret
data16
mov
jo
in
adc
inc
fdivrs
jl
jne
incl
stos
fdivrp
ret
or
orb
das
rcrb
dec
xchg
lods
pop
pop
cmp
mov
lock
mov
aaa
push
push
insl
test
pusha
mov
and
popa
jge
lods
jmp
adc
daa
in
loop
call
adc
mov
dec
sbb
into
xor
mov
and
and
in
cmpsl
cmp
and
sub
xchg
push
fdivrs
push
push
movsb
orl
pop
dec
inc
mov
mov
out
mov
or
mov
inc
sub
dec
adc
xchg
icebp
sarb
xchg
cltd
or
aas
cmpl
test
icebp
jg
mov
pop
ror
fcmovbe
inc
xor
sub
sti
jmp
in
push
lcall
pop
data16
ret
pop
je
inc
cmpsb
xchg
mov
adc
popf
cs
ljmp
cli
mov
fstpl
imul
mov
add
lock
add
jae
and
jne
mov
aaa
xor
daa
lods
nop
andl
into
cmp
push
out
stos
outsl
sarl
push
ret
add
push
and
fcom
fstl
in
enter
sahf
mov
mov
cltd
movsl
je
es
loope
xchg
stos
mov
sbb
jbe
bound
cmp
aam
push
jge
adcl
xor
pop
mov
bound
repz
cmpb
pop
cmp
repnz
mov
mov
sub
aad
sub
jmp
pop
push
aam
mov
jne
cmp
dec
xchg
setbe
adc
or
dec
jle
or
mov
fs
xor
rolb
mov
pop
ss
out
ret
enter
sahf
popa
insl
lret
lret
mov
in
out
push
lods
mov
inc
dec
mov
jb
push
fs
jl
into
or
xchg
lcall
cli
push
inc
ljmp
pusha
stos
lcall
push
lock
pop
in
xor
sbb
jecxz
gs
mov
adc
push
xor
jno
dec
mov
or
mov
negb
test
test
jmp
ds
addb
popf
pop
jg
xor
out
nop
lods
mov
outsl
fcoms
mov
out
add
bound
shr
and
mov
movsl
test
xor
fstl
inc
pop
sarl
and
sbb
mov
mov
mov
mov
gs
jmp
orl
call
dec
sbb
dec
out
ds
repnz
daa
imul
push
into
inc
out
push
jne
call
movl
arpl
dec
fidivs
enter
test
js
and
and
into
jmp
add
test
cmc
push
xchg
leave
ja
pop
sub
mov
cld
loopne
pop
fwait
mov
sbb
mov
lcall
test
push
xchg
cmp
ret
mov
sbb
cs
icebp
push
cld
sbb
mov
fisubrs
mov
xor
mov
xor
fisttps
pop
out
pop
mov
in
ror
ss
out
mov
mov
stos
sahf
cmp
pop
test
jmp
cmp
add
jl
std
mov
cld
dec
inc
pop
adc
xchg
pop
repnz
jmp
std
sbb
les
cltd
icebp
test
or
mov
neg
sub
sbb
xchg
das
adc
mull
adcl
mov
mov
orb
pop
lahf
addr16
gs
fsubl
mov
push
mov
addr16
add
loop
mov
jae
imul
lcall
aaa
ret
in
ficomps
ret
enter
add
ds
cmp
popa
ljmp
and
orl
lret
shrl
and
sbb
arpl
pop
mov
mov
stos
sbb
pop
add
sti
cmp
pusha
scas
movsb
fbld
or
jns
in
faddl
ret
jg
in
mov
dec
in
xchg
ret
pushf
add
inc
or
add
pop
js
sbb
mov
and
and
mov
fsubl
sti
insb
test
pop
push
xlat
or
xor
lods
or
outsl
push
mov
inc
dec
scas
dec
std
pusha
loop
rcl
add
verr
dec
or
jge
add
xor
push
sbb
jp
inc
push
xchg
je
rolb
pop
lds
repnz
add
adc
in
xchg
imul
sti
outsl
xchg
std
mov
jo
add
push
push
cmp
sbb
inc
cmp
test
shlb
ror
imul
pop
testb
push
jg
fadds
lea
pop
sub
sbb
daa
inc
fucom
and
aam
jmp
push
sub
orb
ja
fs
popa
daa
test
andb
push
cmpsb
loope
add
ficomps
or
adc
nop
lods
adc
jae
cltd
sbb
xor
mov
or
inc
mov
pop
push
push
sub
mov
out
in
xchg
popa
aad
or
pushl
daa
xor
out
aam
fsubrs
sub
xchg
jbe
imul
test
call
mov
lea
mov
ds
dec
lcall
fidivrs
mov
dec
in
and
xchg
insb
dec
mov
cld
xchg
sub
addr16
fs
out
sub
adc
xchg
cmp
dec
js
aam
lret
mov
add
jae
je
sbb
lret
ljmp
pop
and
aam
fsubrp
call
cmp
mov
aad
fidivrs
inc
test
dec
push
insl
out
test
pop
add
in
mov
xor
lret
sub
and
jae
out
sub
sub
mov
mov
jp
repnz
test
inc
ja
jnp
xor
data16
insb
lea
outsb
rcrl
imul
cwtl
scas
push
mov
ljmp
pop
inc
mov
and
ss
scas
je
mov
add
ljmp
add
call
dec
jae
fadds
dec
pop
in
add
aad
inc
mov
pop
push
and
mov
jge
add
xor
jle
js
movsb
mov
nop
enter
inc
xchg
mov
jno
aaa
mov
popf
mov
cmp
lds
aas
and
dec
sti
push
dec
dec
daa
adc
shl
mov
mov
mov
jp
icebp
lock
into
iret
jg
push
inc
or
ss
jo
xchg
rol
xor
push
cld
push
repz
mov
aaa
jnp
int3
mov
push
rcll
andl
pop
jmp
and
jmp
add
push
outsl
clc
xlat
fs
xchg
andl
jge
mov
xor
pop
cld
div
out
test
fdivrs
and
xchg
jl
rol
rolb
cmp
lret
sub
xchg
icebp
repnz
sub
dec
scas
pop
andl
das
or
xor
mov
xchg
bound
mov
lods
xor
xchg
push
out
sub
mov
sbb
sarl
scas
pop
pop
movl
call
es
cmp
mov
mov
add
imul
in
and
inc
popf
pusha
and
jmp
scas
jne
jb
call
dec
cmp
or
aam
icebp
cmp
out
out
in
jmp
popf
mov
lds
jg
in
push
xor
aas
xor
sbb
jnp
pop
shrb
icebp
xor
shlb
js
or
sbb
cmp
shr
push
dec
xor
dec
add
push
sub
pusha
aas
out
sub
popw
aas
push
cli
cld
test
out
adc
xor
and
add
push
divl
inc
xor
imul
adc
inc
xchg
push
cmp
adc
cmp
xlat
mov
mov
cltd
lcall
mov
inc
stc
sahf
pop
fildll
or
dec
and
adc
sahf
xchg
mov
fimull
ret
cmp
test
inc
incb
dec
lds
out
mov
add
cmp
jmp
rclb
clc
mov
mov
jg
shlb
push
or
sub
daa
jp
test
xchg
dec
jno
imul
test
push
repz
test
inc
jns
xchg
inc
mov
roll
mov
mov
add
scas
pop
sti
sar
cli
aas
pop
push
mov
xchg
mov
jnp
mov
clc
pop
pop
mov
sub
ss
popa
sti
or
loopne
shlb
popa
cmp
xor
int3
pop
pop
inc
mov
popa
andl
lret
push
lret
push
addr16
dec
xor
sbb
ds
cmc
pop
fs
fsts
mov
cmp
mov
or
dec
mov
and
xor
test
jb
jg
mov
fcoml
test
jge
jmp
cmpsl
mov
jp
test
int
sbb
fbld
int
jmp
into
and
xor
jg
adc
adc
pop
mov
fists
xchg
dec
xor
lret
icebp
lret
ss
pop
mov
cmp
jnp
push
or
sub
paddd
lea
and
jmp
mov
push
mov
and
loope
xchg
xor
adc
sbbb
jle
add
mov
rorl
add
data16
aaa
shr
jb
aam
out
ja
insl
jo
roll
sbb
cli
fidivs
sub
movb
push
je
sbb
pop
lock
dec
mov
arpl
test
stos
dec
fdivrl
cmpsl
mov
movsl
ljmp
sbb
fs
add
pop
lcall
les
inc
adc
jge
push
ss
into
mov
call
popa
cwtl
or
stos
inc
shlb
fisttpl
pop
mov
aas
cmpsb
xlat
jo
cli
fistpll
inc
inc
or
xor
mov
cmp
jo
dec
in
mov
pop
insl
push
mov
push
and
mov
lcall
xor
cmp
mov
push
imul
call
outsl
lret
lods
test
xor
inc
inc
add
pop
mov
daa
aam
push
out
xor
sbb
lock
jno
and
push
jp
dec
stos
pop
ss
mov
adc
cmpsb
sti
sbb
fwait
mov
ret
into
loopne
jne
movsl
call
xor
xchg
in
mov
stos
loopne
mov
lcall
and
xor
cld
mov
dec
cmpb
mov
mov
rorb
xor
adc
and
push
mov
popf
pop
in
movb
push
shl
lret
jo
pop
or
lahf
mov
add
push
mov
subb
jp
rclb
inc
mov
dec
test
jae
pop
in
ret
xchg
rcr
mov
subl
sbb
pop
adc
xor
imull
popa
adc
mov
xor
stc
lahf
mov
lods
fisttps
loop
fcomps
cmp
ss
mov
jmp
pop
cmpsl
jns
lock
mov
fdivs
and
mov
xchg
loop
mov
cmp
jns
popa
sub
jg
xor
stc
inc
fmull
bound
insl
cmpsb
and
les
cld
pop
mov
or
in
adc
dec
lahf
fdiv
sbb
in
hlt
fnstenv
or
jecxz
and
inc
push
icebp
pop
shrb
popf
jnp
repnz
fimuls
fdivrl
popf
jmp
loope
orb
mov
sub
push
inc
lods
xor
mov
cmp
mov
and
andb
mov
cltd
aad
add
and
int3
xchg
xchg
lock
push
pop
int
ds
cltd
in
into
mov
fldcw
dec
loopne
sbb
cwtl
mov
cmpsb
popf
sub
pop
loop
imul
mov
jl
jecxz
xchg
clc
les
lock
xor
inc
jecxz
fnstenv
push
loope
pop
imul
cs
fstl
sbb
add
cli
rcrl
movsb
pop
dec
ds
adc
test
std
orb
sub
mov
daa
push
cmp
scas
jge
xchg
outsb
fsubrl
pusha
dec
pop
and
xor
mov
xchg
popf
insb
addb
sbb
cmp
inc
or
movsl
and
and
stc
push
je
push
mov
gs
jbe
sbb
fldenv
repz
xchg
mov
sub
std
xchg
inc
mov
sarl
push
nop
loop
mov
mov
adc
cltd
test
mov
jecxz
out
mov
shll
out
dec
jb
or
inc
fldenv
cltd
jg
repz
lahf
pusha
stc
shlb
mov
jb
push
sarb
sbb
sahf
push
imul
mov
push
add
js
fcompl
jnp
stos
hlt
mov
jne
bsr
cmp
cmp
in
xor
es
lods
clc
daa
push
arpl
enter
lea
test
push
leave
xchg
fimull
in
sbb
insl
push
nopl
sbb
xor
mov
clc
jecxz
dec
inc
nop
jne
mov
aad
inc
pop
push
fwait
stc
in
int
mov
sbb
cltd
add
sbbl
ffreep
imul
push
cmp
cmpsb
cs
xchg
jae
std
sbb
inc
push
inc
sti
pop
mov
cmp
daa
inc
cli
movsl
xor
pusha
das
mov
aam
inc
hlt
cmc
jmp
push
sbb
xor
lahf
cmpsb
aas
inc
outsl
or
out
insl
dec
imulb
imul
mov
push
test
push
cmp
jle
sub
je
sub
insl
adc
dec
fucom
into
popf
or
dec
loopne
add
lds
dec
addb
mov
dec
repnz
and
mov
int
cmp
fwait
cmp
adc
aas
mov
xlat
push
jb
jge
xor
mov
mov
push
or
mov
imul
lret
mov
mov
shl
push
pop
subb
fistpl
aas
or
adc
into
aam
je
ja
inc
negl
fcompl
mov
jb
push
mov
lret
mov
xor
adc
jmp
dec
mov
jl
jns
scas
aas
push
gs
out
cltd
adcb
popa
sub
mov
mov
inc
jo
mov
cmovg
into
xchg
adc
test
iret
adc
out
fwait
std
stos
js
adc
inc
push
fwait
pop
add
pop
sbb
aas
jg
lret
mov
cmp
lret
pop
xchg
mov
sbb
sbb
daa
mov
jecxz
push
xchg
cmp
clc
pop
aas
andl
cmp
cli
mov
sub
xchg
je
insb
adc
jge
pushf
add
fistpl
mov
cld
in
pop
push
outsl
scas
mov
lock
push
mov
sub
icebp
jno
inc
pusha
dec
shll
movsb
add
inc
fcoms
pop
insl
ds
ds
insb
mov
adc
out
fsubl
call
push
mov
cmp
incb
dec
ret
enter
dec
iret
mov
lcall
push
in
lods
pop
cmp
int3
fs
sub
add
and
push
mov
es
imul
push
adc
nop
std
and
cmp
mov
xchg
mov
cmp
ljmp
cmpsl
sub
aad
push
add
enter
nop
mov
push
push
sbb
pop
or
cmp
fldenv
dec
scas
mov
inc
dec
or
push
pop
clc
cmp
mov
push
jge
push
mov
stos
and
mov
jns
and
mov
mov
out
xor
pop
cmp
lds
stos
and
stos
cmpsl
add
cmc
jns
sub
aam
mov
std
sahf
mov
rclb
xor
aam
mov
inc
lods
mov
insl
jb
add
jb
stc
xor
in
add
rol
pop
lret
in
imulb
mov
movsb
repnz
repnz
dec
sub
orl
insb
jl
inc
xor
mov
and
pushf
repz
and
shrb
stos
xor
xor
addr16
aas
in
mov
mov
out
std
lods
lret
leave
sarl
and
call
cwtl
int
repnz
push
and
xor
dec
pop
repz
stc
lret
push
ds
cli
shll
dec
jnp
dec
rcll
dec
push
ret
mov
repnz
ret
mov
inc
mov
xor
mov
iret
push
dec
test
jp
dec
xchg
cmp
outsb
loope
and
dec
pop
jbe
icebp
xchg
fdivs
scas
dec
xor
and
js
lcall
push
xor
sahf
xchg
mov
icebp
cmpsb
inc
push
xchg
mov
adc
and
sar
arpl
jnp
mov
mov
add
cmpb
cltd
mov
mov
sbb
lret
jnp
xchg
inc
xor
mov
or
movsb
xor
fcoms
ror
sbb
mov
clc
inc
mov
mul
lock
mov
inc
mov
push
mov
pop
xchg
hlt
mov
cmp
fcmovnu
add
pop
xor
jg
or
pop
sub
rcll
dec
push
shll
inc
pop
xor
mov
out
jnp
das
mov
sbb
ficoms
inc
ret
xlat
adc
dec
jbe
call
fadds
mov
and
cmp
mov
dec
mov
cmpsw
push
mov
jo
std
jmp
inc
pop
gs
mov
inc
mov
mov
jecxz
xchg
mov
push
jns
in
pop
dec
mov
xor
adcl
inc
adc
inc
and
movsl
into
pushf
test
stos
loopne
stc
jle
pop
mov
out
mov
scas
pop
insb
xchg
cltd
pop
sub
ljmp
push
and
insl
movl
push
xchg
out
add
stos
ljmp
call
imul
imul
out
mov
arpl
xchg
and
push
jl
xchg
fldcw
inc
or
fistps
mov
enter
je
pop
scas
cmp
mov
fsubrp
ljmp
stos
push
xchg
pop
pop
pop
lock
out
les
xchg
jmp
or
imul
popa
std
inc
stos
sub
je
inc
sbb
cmp
pusha
cmp
enter
bound
iret
scas
shr
pop
add
shrb
fsts
stc
stc
push
mov
xchg
outsb
leave
out
sub
cltd
rcrl
gs
shrb
sti
jmp
dec
or
pop
mov
sbb
sbb
lods
loopne
cli
sub
sub
aad
outsl
fidivl
test
vmread
sub
dec
stc
fmull
shlb
bound
pop
stos
in
mov
data16
notb
cs
sti
mov
por
add
push
push
push
aad
lods
adc
loope
or
add
sbb
testl
daa
loop
mov
imul
and
xchg
xchg
mov
hlt
inc
inc
jg
cmp
xchg
shrl
xor
and
lret
dec
mov
imul
pop
pop
add
pop
pop
pop
mov
faddl
cwtl
dec
scas
and
jnp
iret
insl
pop
dec
ret
jbe
lea
dec
add
inc
inc
jge
cmp
in
imul
xchg
jnp
es
jne
inc
lret
lea
push
xorb
push
std
xor
push
and
clc
adc
ss
xchg
jae
fidivl
shlb
in
mov
ljmp
jle
sub
movsb
and
mov
sbb
adc
xchg
mov
jne
xchg
xchg
jmp
dec
sub
adc
test
out
fidivrl
pushfw
repz
jo
aam
movb
add
pop
lods
xor
mov
xchg
cmc
add
sbb
mov
out
int
lcall
xchg
add
cmp
fsts
jo
cmp
fildl
insl
cmp
lds
jle
loope
adc
mov
loope
insl
cmpsb
lret
mov
jb
or
pop
mov
or
pop
fs
ljmp
sub
out
shl
mov
nop
fdivp
dec
cmpsl
push
mov
test
inc
mov
fadd
loop
cmpsl
ffreep
xchg
and
add
into
inc
nop
loope
mov
xchg
insl
mov
sbb
clc
insl
mov
pop
and
scas
mov
jbe
stos
scas
out
testl
lahf
outsb
or
xchg
ret
mov
add
ror
sub
fisubl
dec
pop
xchg
ret
outsl
sub
fcoml
push
aam
dec
movsb
xchg
inc
pusha
xchg
xchg
in
movsl
pop
repz
loop
push
and
ret
cmp
ret
adc
aam
imul
xor
jae
sbb
mov
les
sub
dec
push
int
out
stos
add
dec
hlt
mov
adc
and
push
adc
and
inc
loopnew
popa
or
gs
repnz
and
inc
mov
pop
movq
movsl
iret
sbb
xchg
test
mov
addr16
mov
aad
cmp
stc
sub
add
and
sbb
sbb
fucomp
stos
fidivrl
cli
inc
mov
and
pop
dec
rcll
jge
jp
repz
sub
repz
xchg
jo
aas
sub
adc
pop
jo
ret
xchg
andl
mov
std
popa
fadds
pop
lds
mov
push
sbb
inc
movsb
push
jp
movsw
adc
fisttpl
outsl
mov
and
pop
jns
add
add
stos
scas
iret
xchg
bound
test
jmp
sbb
rcr
add
out
push
sub
movsb
push
popa
pop
add
mov
xor
aam
inc
cmpsb
xor
jg
xchg
sub
js
mov
imulb
sbb
push
pop
adc
ret
jne
lea
push
and
mov
pop
add
das
push
mov
xchg
dec
pop
jae
cli
xchg
out
iret
jno
mov
ss
ret
test
xchg
inc
icebp
jns
test
sbb
xlat
lods
incb
inc
test
xchg
or
nop
xchg
mov
fwait
inc
sub
jne
aaa
addr16
daa
inc
dec
pop
xlat
push
pop
out
js
sbb
jbe
lcall
push
enter
push
and
fwait
std
inc
cmp
xor
movsl
scas
mov
and
adcl
outsb
xor
out
or
daa
clc
mov
pushf
in
inc
aas
mov
popa
inc
scas
jo
sbb
dec
dec
in
mov
xchg
frstor
fdivr
mov
jg
sbb
in
xchg
je
sahf
xor
fidivrl
add
or
mov
pop
push
lahf
inc
mov
fcmovnbe
out
rcrb
add
adc
jp
lret
xchg
les
movsl
addr16
cmp
and
xchg
xor
jnp
dec
mov
shlb
dec
inc
sub
adc
imul
inc
jmp
xlat
ficompl
and
test
fcomip
aam
movl
mov
popa
cmpb
dec
xchg
or
xchg
push
ja
push
jecxz
cmpsl
iret
shrl
mov
lods
pop
jb
aaa
add
popa
sub
daa
fs
pushw
sahf
cs
sbb
push
jns
pop
aaa
dec
fnstsw
shl
inc
fimull
aaa
dec
sbb
test
adc
push
jnp
ficoms
dec
bound
loope
add
negb
push
sbb
jg
sarb
loopne
movsb
lods
inc
fdivrl
insb
pop
into
jmp
lahf
push
adc
dec
pop
lret
cmp
inc
out
mul
out
xchg
pop
inc
adc
rcrl
mov
in
inc
inc
sbb
mov
cltd
in
mov
xchg
je
cwtl
jne
xchg
inc
int3
and
fmul
mov
jge
addr16
mov
lods
addr16
js
bound
push
in
shrb
jge
jb
inc
add
fs
push
sahf
pusha
sub
stos
push
push
lds
inc
jo
inc
push
and
push
scas
or
andb
dec
add
sbb
std
inc
inc
lods
mov
lret
pop
mov
xchg
int3
and
cltd
sbb
fs
pop
adc
pop
dec
sub
and
mov
add
div
xchg
clc
dec
inc
or
lods
inc
mov
push
mov
repnz
mov
xlat
rcrb
int
cltd
ja
lock
push
shlb
jl
loopne
add
pop
dec
pop
xlat
pop
movsb
sub
sbb
mov
lcall
sub
xchg
adc
mov
mov
mov
mov
inc
cmpsb
jns
scas
movsl
pop
aaa
sbb
cltd
add
cld
in
out
std
iret
rcrl
inc
adc
pop
xchg
and
ss
hlt
stos
shl
xchg
aad
inc
outsb
popa
push
es
test
stos
mov
jae
jg
ljmp
daa
rol
jg
cmpsl
jb
fwait
in
leave
imul
dec
inc
repz
xchg
jno
ret
xchg
lahf
jg
mov
notb
mov
xchg
inc
xor
daa
insb
ret
jns
scas
xor
loop
mov
gs
fcmovu
push
lods
fwait
jle
adc
test
sbb
or
lds
aas
sbb
xor
scas
lahf
int
mov
jbe
sti
arpl
aas
mov
scas
test
cmp
stc
sbb
popf
lahf
push
mov
fimuls
xend
pop
mov
mov
xchg
mov
out
ja
inc
xchg
add
lret
int
lock
scas
sbb
jmp
add
sbb
add
ret
xor
xchg
adc
mov
testb
insb
addr16
pushf
mov
out
mov
xor
std
mov
leave
rclb
lret
add
cs
dec
pushf
cmp
pop
adc
fbld
pop
andl
and
ljmp
popa
sbb
cwtl
repnz
ret
icebp
push
xchg
push
mov
sqrtps
stc
push
cmp
inc
push
cld
jne
xchg
pushf
lods
andl
cmc
scas
stc
fcmovu
lods
xchg
fcmovb
inc
cli
mov
mov
sbb
xchg
sbb
fists
das
bound
fsubrs
lret
xchg
adc
or
jno
jg
lds
in
or
and
mov
cltd
mov
mov
push
jg
mov
popa
in
rolb
sub
adcb
xor
decb
jns
and
iret
push
imul
fcomi
arpl
jmp
fwait
dec
jmp
lret
int3
or
mov
inc
sbb
jecxz
cld
std
int3
popa
imul
dec
enter
test
mov
cwtl
ljmp
fmuls
sbb
int
testb
jns
lea
pop
mov
fstps
adc
sar
out
lahf
inc
mov
outsb
or
xor
arpl
pop
push
add
cs
stc
aas
sbb
je
and
negl
test
add
pop
xchg
xchg
jno
sbb
dec
divl
loop
mov
repnz
or
popf
clc
jbe
dec
jg
cltd
jge
mov
ss
popa
or
std
out
fwait
inc
popf
fdivl
sbb
xchg
dec
inc
sahf
mov
jmp
dec
movsb
fnstcw
pusha
movsb
cmpsl
adc
stos
mov
mov
jno
xchg
clc
movsl
test
push
jmp
test
mov
xor
mov
fwait
mov
pusha
jg
mov
xor
pushf
loop
cltd
push
jno
shl
aas
jo
push
mov
roll
jo
ret
jmp
aam
mov
arpl
stos
and
cmp
clc
lea
daa
push
addr16
xchg
aad
es
mov
das
bound
imul
add
lahf
enter
std
pop
scas
icebp
std
ja
call
dec
divb
mov
or
ja
out
mov
push
xor
data16
loopne
cmp
sub
lcall
orb
push
cs
loope
ficomps
jns
mov
inc
lds
pop
pop
aaa
xchg
lahf
notl
and
fisubrs
loop
sbb
test
push
mov
mov
outsl
mov
iret
add
into
xor
mov
shll
cs
rorb
sti
push
inc
mov
in
pusha
push
addr16
aad
orl
icebp
pop
mov
add
pop
in
jg
mov
out
data16
inc
cld
cmp
push
lret
xor
or
and
fistps
in
outsb
xchg
filds
cmpsb
cmpsb
push
ds
inc
repnz
sub
xchg
adc
cmp
mov
dec
lret
inc
jmp
leave
enter
or
pop
iret
popa
js
daa
scas
pop
bound
outsl
call
iret
xchg
insl
lock
int3
cs
pop
mov
push
test
movsb
mov
xchg
cld
mov
lds
push
inc
ficoml
lds
dec
cld
xor
add
xchg
cmpsl
pop
mov
call
push
jp
mov
mov
popa
cmc
adc
sub
mov
xor
pop
xor
or
cmp
loopne
stos
scas
call
sub
sbb
xchg
dec
cli
and
leave
dec
xchg
dec
mov
and
loope
movsl
repnz
jmp
add
orl
les
cmp
adc
pop
push
mov
ss
dec
jecxz
pop
ror
cmp
or
test
sbb
fnstcw
scas
fwait
or
sbb
sti
mov
shl
mulb
mov
push
sbb
push
jae
aam
das
mov
insl
pop
dec
lods
pop
xor
out
cmpsl
fisubrl
pushf
jo
jns
jecxz
cmc
je
push
arpl
and
adc
xchg
into
js
mov
mov
push
sarl
dec
dec
or
sbb
out
movsl
loope
int
mov
iret
data16
lock
jp
mov
or
jb
out
pushf
adc
jmp
lret
add
xchg
and
call
push
add
pop
inc
out
or
icebp
jbe
pop
jle
mov
in
testb
ja
jmp
add
stos
xchg
in
movsl
cmp
bound
stos
cs
leave
jbe
or
jle
pop
aad
add
mov
daa
ss
hlt
jle
jge
loopne
int3
das
jge
push
movsb
pop
cmp
imul
add
in
xor
test
fimuls
es
and
gs
sti
adc
xor
stos
pop
arpl
adc
enter
add
jno
push
popfw
imul
out
outsb
mov
inc
fisubrs
inc
push
sbb
popa
enter
sub
push
mov
add
add
mov
mov
inc
inc
mov
inc
or
push
mov
inc
adc
decl
mov
mov
cmp
movsb
shll
fisubrl
les
test
stos
sar
adc
mov
rclb
enter
xlat
stos
inc
jmp
cwtl
add
pop
inc
or
and
mov
dec
or
pop
xchg
sbb
in
das
adc
cmp
mov
xchg
loop
int3
in
cli
inc
pop
push
mov
mov
pop
out
mov
ja
mov
roll
int
test
stos
daa
and
cmp
pop
addr16
test
mov
jns
jmp
adc
sbb
pop
idivb
add
add
pop
or
dec
fdivs
cmpl
mov
pop
push
sbb
cwtl
sbb
add
sub
rcrl
push
popf
jnp
call
ljmp
or
stos
xchg
fnstcw
mov
add
adc
dec
mov
or
xor
mov
into
js
jne
push
stos
lods
sub
adc
mov
push
mov
inc
repnz
or
dec
jmp
leave
xchg
jbe
dec
add
sarb
push
insl
xchg
stos
sub
mov
sub
lahf
out
imul
add
lcall
push
nop
lea
lea
cltd
and
movsl
mov
push
stos
out
mov
push
sbb
sarl
notl
mov
sbb
sub
push
and
xor
dec
pop
push
cmpsb
mov
mov
xchg
xor
and
add
loop
imul
jnp
mov
mov
push
sub
pop
scas
daa
mov
adc
inc
iret
push
xor
pop
out
pop
pop
out
xor
mov
imul
test
int
cmp
push
and
mov
call
sub
shlb
inc
xchg
int3
jl
dec
jae
aam
cmp
jnp
aam
lock
push
cmpsl
pop
push
test
les
mov
lahf
mov
out
or
pop
jl
pop
adc
adc
int3
popf
and
inc
jle
pop
stos
loope
cwtl
mov
cmpsl
xlat
in
addr16
push
stos
sub
fisubrl
fcomi
jmp
dec
sub
dec
stos
clc
push
hlt
insb
mov
sbbl
repz
sub
je
push
pop
dec
aam
enter
inc
les
iret
cwtl
cli
jae
push
addr16
aas
lret
out
adc
aas
stos
xorb
adc
and
jge
dec
mov
and
lods
pop
mov
test
xchg
fists
mov
in
cmp
dec
inc
push
xchg
xchg
inc
movsb
xchg
inc
lret
cmpsb
hlt
or
or
mov
lea
jp
lods
mov
loopne
loopne
in
cmp
scas
arpl
cmc
xchg
push
lods
xchg
inc
jg
scas
jge
in
fst
sbb
lock
xor
xchg
mov
mov
ja
ja
bound
nop
sbb
mov
dec
jo
std
push
push
outsb
push
stos
add
lods
dec
add
or
out
loope
and
mov
lahf
shrb
sti
xchg
aad
iret
mov
rcrb
addb
xchg
aaa
mov
mov
mov
jg
add
mov
iret
or
enter
mov
xchg
add
lea
pusha
pop
shll
sub
dec
jg
push
mov
pop
pop
mov
enter
sub
lock
sti
or
sub
ja
push
sbb
jmp
jle
lock
or
rcr
ljmp
jmp
gs
and
repnz
mov
jecxz
int3
aas
mov
mov
pop
shlb
sahf
clc
cmpl
insl
push
or
or
cmp
hlt
iret
xor
mov
xor
and
inc
pop
pop
inc
sbb
cmp
nop
jecxz
mov
cmpsl
pop
mov
mov
xor
test
add
loopne
mov
pusha
in
mov
mov
stos
jl
leave
mov
nop
lret
aas
inc
cwtl
push
dec
cmp
stos
lods
and
stc
out
cwtl
outsb
cmp
into
jl
adc
add
gs
shlb
fidivrl
cld
mov
call
test
jne
mov
mov
into
sbb
movsb
or
adc
jne
test
pop
mov
add
js
std
sub
pop
jmp
cmp
jnp
jbe
js
jp
inc
rolb
insl
sub
jmp
adc
push
mov
push
adc
in
outsb
jae
jecxz
jg
insb
cmc
mov
adc
adc
ss
jl
jp
cmp
mov
dec
and
faddl
sbb
pusha
ja
mov
in
iret
je
xchg
popa
or
sbb
xor
lea
call
sub
aad
adcl
lods
fdivrs
das
rcrl
lock
mov
jecxz
sbb
dec
arpl
pop
push
jmp
jne
jno
push
insb
push
add
push
popa
push
dec
mov
fnsave
outsl
adc
cmp
arpl
cltd
fwait
ret
loop
je
and
xor
cmpl
mov
inc
gs
jl
imul
in
xchg
lret
test
mov
sub
sub
push
push
mov
loop
push
loop
jne
fnstcw
lahf
subl
mov
xor
push
aaa
lock
int
cmc
pop
sbb
scas
cmc
inc
mov
xor
jnp
or
or
sahf
aas
cwtl
pop
dec
or
hlt
add
ret
dec
rcrb
dec
insb
pushf
sbb
inc
dec
call
sbb
out
jbe
mov
stos
push
fldt
aas
pop
rcrb
xchg
dec
cli
sbb
dec
iret
sub
mov
sarb
lahf
pop
into
out
pop
push
jo
pop
fildll
sub
mov
xchg
adcl
adc
or
sbb
push
jnp
and
push
pop
vminpd
ret
pop
xchg
cld
fisubrl
fstpl
adc
movsb
pushf
movsb
inc
into
lods
mov
fnstenv
jb
cmc
mov
push
imulb
repz
pop
cmp
mov
mov
inc
popa
je
std
aam
arpl
pop
popa
cmc
outsl
pop
xlat
js
cmp
xor
dec
push
popf
sub
fdivs
leave
aaa
or
or
dec
push
loope
mov
adc
mov
mov
ja
jbe
stc
cwtl
adc
in
dec
jecxz
mov
lcall
or
dec
js
sbb
pushf
out
xor
or
loop
xchg
idivl
fisubrs
or
and
es
sbb
out
xor
add
fbld
jle
call
movsb
jne
and
loopne
mov
iret
mov
sbbl
mov
add
lret
push
cli
mov
mov
loopne
movsl
mov
repz
or
dec
and
jmp
dec
in
sub
pop
cmp
cmpsb
int
jne
adc
cld
je
pop
les
test
mov
icebp
in
std
jecxz
mov
clc
mov
lcall
push
ret
push
and
or
jae
jbe
nop
mov
inc
shl
xchg
jo
shll
inc
rcrl
ljmp
xor
subb
adc
bound
mov
popa
cld
in
into
inc
lods
inc
mov
mov
das
lret
fistl
mov
addr16
data16
adc
cld
mov
fimull
cmp
andb
shlb
in
xor
pop
pop
mov
cmp
xchg
dec
mov
push
call
fdivs
out
out
ret
add
sub
in
enter
xor
jne
sbbl
sub
dec
into
or
and
push
and
mov
add
pop
test
jae
dec
daa
add
jge
cmc
xor
sbb
nop
sub
call
push
js
cli
ret
ret
push
cmp
or
lcall
pop
addr16
lds
inc
incb
dec
sti
insb
inc
mov
nop
cld
mov
mov
addl
push
add
mov
lret
adc
shrl
pop
mov
insb
push
mov
and
adc
mov
popa
movsb
ljmp
cmpps
adc
mov
push
jecxz
mov
xchg
add
sbbb
sbb
mov
inc
sub
mov
das
scas
lcall
dec
imul
xchg
xchg
jecxz
scas
clc
sahf
je
or
inc
or
xorl
push
ljmp
mov
mov
enter
lea
lock
in
mov
inc
out
push
mov
sbb
cmpsl
stos
rorl
pop
sbb
aaa
rclb
sbb
repz
dec
addb
dec
push
rclb
fmuls
mov
outsl
xchg
movsb
xchg
xchg
adc
jecxz
dec
ret
mov
push
push
iret
dec
dec
push
push
mov
or
mov
mov
sub
push
mov
xor
add
mov
mov
fnstsw
sbb
lea
sbb
inc
int
lret
iret
pop
inc
ss
and
xor
loopne
les
add
mov
dec
push
lods
add
sub
push
loopne
xchg
dec
cmp
stos
daa
add
xlat
mov
scas
mov
pop
push
call
fdivrs
pop
or
xchg
mov
or
mov
mov
in
ja
dec
int3
jecxz
xor
fidivl
pop
push
jnp
ret
sbb
ucomiss
inc
mov
lcall
clc
movb
mov
stos
xchg
in
sbb
out
mov
mov
xor
loope
mov
fcoml
insl
or
data16
cld
ret
dec
cmpsl
fisttps
ljmp
ficompl
addr16
fistpl
push
shrb
jp
xchg
fs
adc
repz
stos
insl
push
mov
cmpl
dec
push
adc
xchg
cmp
jge
loopne
fisubrl
inc
insb
pop
mov
push
or
or
jbe
add
insb
add
pusha
mov
ss
mov
add
jmp
pop
stc
out
sub
ja
outsb
repnz
adc
sub
and
xchg
in
sbb
push
sub
mov
aad
xchg
pop
cmp
dec
push
lret
daa
pop
fs
inc
fs
addl
push
hlt
into
pop
es
jo
dec
add
int3
jl
pop
mov
cmp
ja
inc
cltd
outsb
inc
fsubrs
xlat
xlat
std
jb
imul
incb
jbe
stos
jnp
inc
jno
push
mov
push
lock
divl
data16
sbb
add
jb
cmp
daa
mov
jno
mov
arpl
nop
mov
fs
insb
hlt
cmc
das
out
notl
pusha
or
lods
lods
mov
adc
dec
mov
xor
sti
push
ret
out
ss
mov
rcl
insl
outsl
repz
ljmp
xor
nop
or
clc
mov
ret
xorl
fldenv
out
adc
fimuls
es
cli
rcl
movsb
xchg
lods
jecxz
push
inc
sbb
cltd
add
or
jbe
cmp
fsubrl
mov
jp
adc
dec
cmp
jecxz
aam
and
jge
inc
fimuls
mov
pusha
mov
sahf
sub
cmpsl
fidivl
or
sub
fs
nop
int
ret
ss
mov
add
incl
lret
push
dec
sarl
add
incb
insb
push
adc
push
insl
or
jle
sbb
or
xchg
outsl
sbb
sub
xchg
add
cmp
pop
in
fistpl
xchg
dec
xor
dec
cmp
arpl
mov
push
xor
pop
daa
mov
jp
lahf
push
outsl
fcmovnbe
shll
xor
inc
filds
test
xchg
mov
repz
icebp
pop
lods
lea
mull
sbb
movsb
lods
mov
push
xor
jecxz
cmc
fwait
aaa
and
fnstcw
sub
repnz
mov
or
cmpsl
in
ljmp
fidivl
addr16
int
jg
stc
cmpsb
into
fdivrs
loope
jle
sbbl
sub
loopnew
fisttpll
mov
jno
or
bound
fidivrs
imul
or
and
pop
inc
dec
rolb
clc
mov
jno
dec
jbe
push
pop
mov
insb
lock
psubsw
lahf
les
subb
in
stos
shl
push
mov
pop
push
in
xchg
lock
jecxz
xlat
mov
rorb
repnz
rcrl
mov
jecxz
arpl
je
ret
and
xchg
and
inc
sub
out
int
dec
push
mov
adc
jb
push
aad
xor
jns
xorb
dec
fwait
xor
ss
lret
ja
call
or
or
pop
mov
arpl
sbb
cmpsl
or
leave
pop
je
xor
pop
ficoms
add
mov
lahf
mov
pop
lods
leave
and
insb
inc
cltd
out
dec
fidivrl
cmp
push
add
lods
addr16
and
and
add
adc
fnsave
dec
inc
adc
cmpxchg
cmpb
pop
add
sbb
cmp
out
out
inc
gs
hlt
in
xor
adc
xchg
jnp
test
xchg
ret
pop
imul
xchg
imul
insb
sub
test
js
pop
adc
cs
dec
lock
pop
leave
push
lock
mov
dec
cmc
aam
lcall
mov
iret
dec
cmp
outsb
popa
ja
and
or
adc
push
std
push
xchg
popa
dec
mov
pop
jmp
fmulp
push
loopne
lret
cwtl
push
movsb
stos
ja
mov
jns
ja
and
outsl
mov
pop
or
or
bound
cmc
test
push
insb
shll
outsl
xor
or
or
dec
push
lcall
and
xchg
pop
loop
xor
adc
inc
flds
inc
and
sub
inc
roll
jne
and
add
loopne
mov
int3
in
shl
fistps
jns
and
sbb
push
add
sbb
xor
mov
stos
lds
adc
inc
xchg
jns
push
adc
push
lea
jg
push
call
es
xor
bsf
aaa
xor
popa
push
push
push
xor
pusha
xor
adc
mov
add
xor
adc
mov
add
ss
sarl
and
xor
fcompl
hlt
xchg
xor
mov
es
mov
jnp
jb
cmpsb
mov
inc
imul
pop
bts
sahf
mov
pop
mov
mov
cmp
inc
adc
add
pop
xorl
mov
adc
and
out
jno
add
push
shl
test
sub
daa
push
push
cmp
cmp
dec
mov
sahf
jnp
arpl
xchg
sub
lret
pop
out
rcrl
stos
mov
dec
imul
mov
popa
mov
xchg
lds
test
xchg
outsl
mov
shlb
jbe
push
test
mov
loopne
mov
testl
push
sub
sbb
jns
leave
jp
into
enter
lds
push
fwait
pop
inc
ljmp
or
adc
sbb
stc
mov
jae
in
mov
fisttpl
or
xor
xchg
mov
xchg
stos
or
inc
stos
icebp
ss
mov
std
adc
and
or
test
push
fnsave
jne
iret
test
cmpsl
jl
cs
fnstsw
mov
fs
pop
mov
add
lock
stc
rol
xorl
add
rorl
push
leave
fdivp
leave
cwtl
enter
push
xchg
mov
nop
ret
lea
hlt
sub
mov
popf
xchg
pop
popl
inc
in
add
sbb
dec
out
inc
sbb
inc
jnp
loope
xor
xchg
out
stc
call
sti
and
fildll
add
rcrl
jg
add
outsb
ja
inc
inc
lahf
jo
enter
push
lea
mov
lcall
xchg
rcr
and
test
cs
sbb
aad
mov
nopl
aam
adc
mov
push
lds
js
push
mov
or
dec
inc
pop
dec
lea
aaa
mov
icebp
lods
and
cltd
lods
mov
pextrw
adcl
xlat
cld
cmp
ds
pop
xor
jl
push
dec
sbbl
xor
sbb
pop
push
fwait
adc
subl
movsl
lcall
sti
and
mov
imul
divl
ret
xor
jnp
mov
sbb
dec
xor
mov
call
std
aad
fs
push
dec
ss
cli
adc
cli
icebp
xchg
lcall
push
mov
sbb
mov
sub
mov
mov
lret
sbb
cmp
inc
inc
mov
mov
and
xorl
in
scas
or
movups
sbb
xchg
cld
mov
cmp
inc
lods
jle
dec
mov
in
imull
iret
push
lcall
jns
les
mov
pop
xchg
push
not
loopne
or
int3
push
sti
cmp
mov
mov
rorl
lock
cmpsl
adc
lods
je
popf
add
fcoml
in
or
aam
push
loop
aam
lods
rorl
sbb
enter
call
lods
outsl
fists
add
mov
push
fstl
add
inc
xor
inc
or
aas
jge
adc
inc
movsb
fstp
pop
mov
dec
imul
mov
sbb
out
sbb
es
int
out
pop
loopne
andps
in
mov
mov
mov
rcl
popa
xchg
icebp
idivl
mull
divl
decb
lahf
inc
rorl
out
outsl
xor
scas
mov
fs
daa
xlat
out
sbb
jmp
mov
or
dec
sub
fcmovnbe
std
mov
jmp
popf
mov
hlt
enter
fs
inc
jne
mov
mov
loopne
inc
fiaddl
ret
cmp
or
cmp
and
and
mov
add
dec
rcrb
lds
or
or
addr16
mov
stos
mov
xor
int3
mov
popf
cmp
loop
push
add
add
xor
jecxz
aam
push
jae
push
pop
pop
cs
ret
scas
in
sbb
enter
or
dec
push
aas
xor
scas
aam
lret
and
mov
jg
arpl
mov
jne
or
xor
sub
sub
push
repnz
test
or
pop
jge
fs
or
dec
cmp
stos
int
cmp
pop
xchg
jnp
inc
sub
fisubs
add
cmc
xor
test
icebp
cmp
xchg
stc
testl
cmp
cmp
push
pop
push
sbb
sahf
xchg
or
ss
cmp
popf
cmp
inc
or
cld
test
sbb
out
or
cltd
mov
jbe
repz
or
or
add
xchg
jp
mov
fsubrl
mov
test
inc
inc
xlat
imul
jne
test
mov
out
pop
popa
jge
fdivrs
jb
ds
jge
lds
mov
int
xor
adc
inc
jne
dec
loopne
jnp,pn
fisttpll
arpl
push
jle
adc
orb
ret
xor
mov
mov
inc
push
cld
mov
xchg
xor
jmp
int
enter
sub
cmpsb
pop
inc
js
sub
xor
test
out
inc
shll
mov
xchg
xor
lahf
stc
dec
inc
sub
jno
sbb
out
jbe
enter
insb
jg
sub
fcomp
lods
adc
mov
mov
xchg
xchg
push
popa
sub
ret
jnp
or
dec
dec
sub
push
in
jge
inc
push
push
out
pop
loop
jle
sbb
push
js
pop
xor
cmc
add
lahf
inc
test
mov
adc
add
adc
std
ja
mov
jo
push
push
mov
or
xlat
lcall
adc
jne
jecxz
push
xor
into
sub
jmp
nop
stos
int3
xchg
dec
push
test
push
or
arpl
mov
adc
push
sub
and
sub
loope
into
add
loope
and
scas
ja
ret
pop
mov
insl
add
xchg
jne
pop
adcl
mov
cltd
add
add
popa
data16
xchg
sub
cs
adc
cmp
cmp
insb
lods
stos
lea
jno
push
cltd
jno
and
sbb
fcompl
jnp
xchg
icebp
mov
pop
lahf
cmp
test
cs
mov
call
and
jns
out
dec
test
pop
out
sbb
mov
bound
aad
shlb
xchg
insb
inc
cli
mov
adc
dec
sbb
sbb
fstps
cld
fs
test
mov
add
pop
xchg
popf
aas
push
push
in
dec
or
or
push
orl
lahf
nop
filds
sbb
jle
les
callw
lods
dec
scas
clc
hlt
or
mov
mov
dec
jp,pn
inc
push
out
cld
sti
jbe
ljmp
add
cmp
cmp
jecxz
aam
inc
sub
daa
movsb
inc
xchg
xlat
mov
mov
sti
mov
mov
enter
adc
repnz
mov
es
xchg
pop
insb
flds
mov
repz
rclb
idivl
inc
lahf
andl
fsubs
xor
cmp
pop
xchg
cmp
push
stc
mov
outsl
mov
jge
sbb
hlt
xchg
xlat
jecxz
dec
inc
les
mov
in
xor
std
xor
call
daa
push
dec
out
in
fiadds
lods
xchg
fisttpll
cmp
mov
icebp
push
inc
aas
stc
jge
cli
mov
into
sub
mov
cmpsl
daa
jbe
mov
fisttps
mov
or
rolb
cld
notb
in
push
jp
adc
aas
mov
fstpl
cmp
loopne
pop
sbb
xor
sub
pop
push
dec
aas
dec
or
jbe
fildl
inc
out
adc
cmpsl
adc
mov
jns
mov
lret
into
mov
push
xchg
arpl
pop
mov
pop
jl
sub
push
jne
js
pop
int
jge
cmp
add
fisubl
jecxz
repz
addr16
fwait
out
fisttpl
mov
cmpsl
xchg
dec
jbe
xchg
and
outsl
out
mov
push
pop
rcrl
test
add
dec
negb
xor
bound
loope
jmp
bound
je
aaa
xchg
sbb
fs
adc
cmpb
xchg
xor
arpl
cmp
sarl
dec
aam
xchg
jecxz
out
jb
jg
int
dec
enter
lods
lds
sbb
mov
push
xchg
out
add
dec
sbb
adc
mov
mov
push
scas
push
pavgb
pop
xor
mov
test
xor
adc
xlat
jae
movsl
adcl
je
aas
pop
add
iret
leave
jo
push
mov
mov
inc
jae
inc
adc
xor
outsb
mov
cmp
ja
out
cltd
sti
inc
dec
lret
or
push
test
stc
jmp
mov
filds
sub
lods
or
aas
shrb
or
pop
ja
mov
add
imul
sub
jge
in
je
and
int3
mulb
bound
shll
adc
cli
leave
pop
bound
div
or
jae
sub
imul
and
and
std
cmp
nop
or
popf
bound
mov
sbb
pop
bound
sbb
adc
fisttpl
rcrl
xor
loopne
test
mov
xor
jbe
push
addb
cmpb
jnp
mov
scas
mov
jp
mov
sbb
push
mov
stc
leave
and
testb
lahf
stc
movsl
cmp
sub
sbb
cmp
adc
clc
sub
imul
push
lea
ljmp
insl
xor
out
int3
inc
addr16
inc
push
xchg
movsl
pop
sub
inc
push
iret
xor
je
mov
cmp
out
dec
cmp
scas
popa
push
movsl
lret
rolb
mov
mov
jns
int3
add
pushf
push
std
lahf
mov
add
mov
dec
mov
jl
lret
dec
dec
pop
push
imul
insb
jbe
add
add
out
pop
xor
sbb
jb
ret
cmp
pop
or
mov
mov
testl
jg
xchg
add
aas
mov
jle
mov
inc
add
cmp
mov
xchg
ret
repz
xchg
lds
fs
jge
out
sbb
push
divl
es
push
nop
icebp
dec
pop
jle
fs
pusha
dec
cmp
pop
push
push
hlt
faddp
shll
sarl
xchg
mov
cmp
cltd
sti
ret
cli
test
dec
or
xor
mov
mov
sub
mov
inc
xor
mov
shlb
lods
add
shrl
cmp
dec
ds
dec
sbb
cmp
das
les
mov
mov
pop
mov
lea
bnd
dec
ja
jecxz
fldt
out
push
xchg
push
dec
inc
je
jae
nop
fnstcw
mov
es
in
faddl
test
stos
push
lock
and
nop
aam
popf
in
add
jae
add
rcrl
bound
adc
movsb
adc
and
imul
xor
aam
mov
add
lock
mov
stos
cmp
jp
data16
imul
dec
popf
pusha
add
loopne
lock
push
cmp
cmp
adc
scas
mov
cmp
push
inc
xchg
lahf
rcrb
lcall
add
rclb
lret
push
xchg
cmp
jo
or
out
mov
xchg
cmp
jns,pn
in
xor
in
inc
repnz
push
xchg
popf
push
clc
push
out
mov
sbb
inc
sub
adc
add
mov
sbb
jns
jb
iret
dec
ret
dec
sti
xor
lcall
mov
xchg
add
jno
rcrl
repnz
aaa
jnp
loopne
shll
clc
fdivs
or
push
pop
xchg
jp
lods
pop
mov
mov
in
sarb
and
call
fwait
xor
test
inc
mov
or
xlat
mov
inc
int
out
iret
cmp
test
pop
bound
xchg
mov
adc
and
ret
outsb
clc
jmp
in
xor
js
jns
add
int
seta
xor
fidivs
push
cmp
jmp
jne
mov
mov
mov
cmp
jle
inc
push
hlt
aam
mov
mov
ljmp
push
lods
xchg
mov
cmpsb
jno
ja
jmp
lds
in
jmp
sbb
inc
add
sbb
andl
addb
dec
mov
pop
add
cwtl
mov
lcall
push
cmp
xchg
sub
imul
in
pop
fmul
pop
leave
insl
outsb
cmpsb
iret
movsl
add
mov
mov
xchg
xchg
cmpsl
outsb
push
add
fadd
jo
mov
jge
movsb
xchg
sbb
push
add
dec
sahf
or
mov
js
loopne
and
subb
fdivs
jp
add
rcr
andl
and
and
fldl2t
lcall
ds
push
hlt
sub
or
jg
pop
bound
pop
je
push
inc
mov
inc
sahf
adc
mov
lds
inc
movd
or
xor
lret
repz
loop
mov
adc
cmp
add
call
lahf
nop
lret
insb
xor
add
aam
xor
sti
test
cmp
mov
jecxz
ljmp
dec
in
in
cmc
fistps
sahf
clc
std
or
sbb
outsb
lret
call
add
out
or
pop
dec
push
fidivrl
xor
loop
jl
sahf
jb
adc
mov
jp
mov
and
call
test
cmp
ret
add
jmp
push
mov
dec
inc
mov
and
push
jo
mov
push
inc
stos
xchg
mov
lods
mov
fcomps
insb
nop
pop
add
pop
cmp
mov
xor
insb
add
pop
or
add
or
add
lea
push
fwait
push
repnz
arpl
divb
scas
mov
mov
stos
cmc
add
scas
shl
mov
ret
ret
repz
inc
les
jne
dec
sti
fisubrl
fbstp
aas
or
jno
nop
lods
pop
outsl
sub
lds
adc
shrl
dec
fadd
repnz
xor
jae
sahf
xchg
jno
repz
xor
outsl
lret
or
std
cvtps2pi
int3
add
lcall
push
adc
iret
xchg
mov
fisubs
jl
fcoml
aad
jne
mov
jp
xchg
and
mov
mov
mov
adc
and
and
mov
cmp
dec
sub
jl
add
sub
mov
sbb
inc
mov
xchg
mov
xchg
push
mov
and
sbb
pop
mov
and
jae
addr16
movsb
jno
fiaddl
test
stos
sahf
sbb
filds
lods
call
pop
pop
mov
sbb
lahf
xor
push
xor
es
push
test
into
sub
push
loop
inc
jae
jnp
mov
aas
rcll
stos
clc
fcomip
test
imul
pop
push
pop
dec
mov
dec
sub
icebp
add
aaa
mov
sbb
pop
mov
ror
sti
mov
xchg
mov
mov
movsb
pop
mov
mov
inc
adc
adc
pop
adc
lahf
mov
aaa
xchg
adc
lret
sbb
enter
xchg
jns
shrl
cmp
shl
jg
and
mov
push
jmp
test
lcall
popf
addr16
inc
ds
xchg
or
mov
popl
and
data16
jle
in
popf
lods
sbb
cmp
push
pop
jmp
stc
insb
push
sub
ss
fsts
mov
test
xchg
jno
jg
xor
sub
jle
scas
sub
lds
cltd
sti
xor
inc
cmovo
jo
ja
and
jecxz
jne
or
bound
mov
in
jecxz
lretw
cmp
clc
cld
dec
pusha
mov
lcall
rol
pop
dec
dec
push
inc
mov
mov
mov
aas
pop
sub
mov
iret
and
movsb
mov
ret
mov
mov
jb
mov
loope
fisubs
fldt
or
or
sub
add
mov
push
inc
movsl
out
push
mov
fstl
lret
xor
add
rcrb
jne
mov
push
dec
cmpsl
dec
jecxz
sahf
mov
negl
test
cvtdq2ps
dec
repnz
sub
xchg
adc
test
mov
aas
mov
shrl
push
dec
mov
push
or
cmp
pop
sub
adc
out
or
push
mov
in
stos
mov
dec
dec
dec
ss
aam
push
jae
push
push
ljmp
movsb
jp
jno
cmpsl
sub
dec
pusha
inc
sbb
mov
cmp
ja
xor
push
sbb
fidivrl
mov
xor
out
sbb
push
jne
mov
fcoml
orb
cmp
xchg
cld
adc
xlat
lea
lea
test
movlps
loopne
les
in
js
mov
xchg
out
rcr
mov
gs
mov
mov
shrb
rcr
sbb
loope
stos
jge
adc
dec
insl
mov
lock
les
mov
mov
fdiv
addr16
loope
dec
jge,pt
cmpsl
fdivrs
mov
pop
jmp
out
iret
xor
stc
lods
sbb
fst
insl
mov
cld
mov
and
inc
ds
sub
push
loop
test
sbb
push
adcb
xlat
xor
iret
pop
inc
scas
mov
adc
push
lods
mov
fistpll
adc
fldl
ja
in
test
pusha
add
lods
lret
xchg
cmp
jnp
and
stc
in
jg
sub
inc
xor
ds
lea
outsl
xchg
fsubrl
dec
out
gs
inc
cld
mov
ja
pop
dec
sbb
pop
add
sub
ret
mov
sub
test
gs
or
outsl
daa
fcomps
push
je
mov
push
jge
pop
movnti
or
mov
clc
pop
jl
sbb
ror
pop
sub
add
int
lods
out
dec
jp
pop
and
daa
loopne
add
inc
sbb
fs
stos
cwtl
inc
aad
leave
loop
test
rorb
push
add
orl
xchg
inc
or
pop
mov
xor
push
adc
loope
fdivr
mov
sub
aas
sub
and
push
adc
ljmp
popf
xor
gs
jne
das
mov
cmp
shlb
repz
cmc
fstpt
xchg
lea
or
inc
fisubrl
sub
and
loop
out
and
repnz
out
aad
ljmp
into
or
ret
mov
ret
jmp
sbb
push
xor
outsb
dec
aam
dec
mov
pusha
popf
mov
imull
fsubl
pop
xor
cs
or
mov
out
cmp
or
and
xor
mov
add
clc
dec
jbe
inc
adc
cli
lret
mulb
stc
mov
cltd
shll
cld
sbb
sub
shlb
add
ljmp
movsb
enter
pop
xchg
or
or
out
movsb
leave
mov
pop
inc
imul
inc
icebp
cwtl
test
sbb
outsb
mov
adc
je
add
jmp
mov
xchg
xchg
or
mov
fdivr
ficomps
add
in
mov
adc
xchg
ljmp
jne
fsubs
mov
sbb
mov
mov
cmp
fiadds
outsl
iretw
sarl
mov
daa
xor
mov
fstpl
mov
lods
adc
sbb
dec
dec
fistps
ja
in
test
mov
or
in
pop
in
lret
test
stos
aaa
jg
lret
dec
xor
and
fbstp
add
mov
sub
mov
ss
push
cwtl
jb
mov
or
jmp
arpl
mov
lret
cmp
sub
ret
lea
push
push
pusha
jnp
and
or
jmp
gs
stos
dec
cmp
and
fstpt
cmp
js
les
inc
mov
ss
insl
in
ret
adcl
test
aad
mov
add
mov
mov
adc
pop
jno
mov
insl
cmp
add
and
sahf
push
cwtl
add
lret
cwtl
insl
mov
dec
or
and
add
xchg
in
fwait
ljmp
xchg
pop
mov
mov
pop
mov
jmp
inc
les
add
xor
test
push
push
sahf
mov
cs
push
pop
lock
lds
les
iret
fstpl
ss
xchg
std
pushf
dec
incb
aad
sbb
fwait
dec
jb
int3
pop
xchg
sbb
mov
out
pop
xor
mov
mov
movl
leave
pop
inc
jmp
xchg
jno
sub
jmp
sbbl
arpl
repz
movsb
jnp
iret
jns
in
xchg
jmp
xor
cmp
and
pshufw
push
push
aas
jle
stos
lods
repnz
inc
cld
mov
or
scas
sub
dec
addr16
jno
fisubl
out
stos
xchg
lret
ja
sahf
mov
mov
xor
fmul
sbb
out
jb
push
cld
jecxz
jno
std
outsl
scas
out
cmp
cmp
loopne
xor
into
xor
ja
cs
sbb
jnp
jns
cmp
mov
jmp
xchg
xchg
push
fwait
popl
popa
fiaddl
jle
lcall
mov
sbb
test
out
loope
ret
cs
sub
lds
mov
jle
movsl
repz
xor
lret
mov
mov
cmp
icebp
sub
inc
shlb
xor
test
flds
hlt
dec
pop
sbb
adc
sarb
lods
in
stos
pop
lahf
or
das
addl
enter
rol
in
jle
cmovnp
mov
jmp
aad
xchg
iret
add
jne
popf
mov
scas
pop
cmc
cmp
cmp
xchg
les
outsl
pop
stc
fcomps
nop
pusha
xchg
cmp
aaa
mov
jmp
int
js
rcpps
mov
cmpsb
mov
add
dec
mov
and
les
lods
add
test
ds
movb
add
icebp
add
add
jg
jb
cmovo
push
roll
add
mov
adc
ljmp
pop
xor
xor
mov
inc
mov
lods
cmp
movsl
cwtl
adc
mov
pop
push
aad
inc
loopne
dec
js
sarb
lods
fbstp
test
rolb
xchg
jp
roll
daa
add
xor
lods
xor
lcall
cs
test
xor
nop
cmpxchg
and
add
and
dec
imul
scas
sbb
int3
test
loope
mov
inc
inc
and
inc
add
or
xchg
sub
fdivrs
and
and
jmp
jo
std
scas
lcall
mov
inc
notl
push
jae
jns
dec
jno
cmp
pop
out
insb
icebp
lret
sbb
and
push
lret
pop
sub
lahf
dec
push
outsb
cmp
or
adc
mov
mov
fstl
lret
or
xchg
fs
jl
cmp
add
adcb
pushf
in
ss
pop
mov
lock
out
pusha
stos
lock
cmp
repnz
fisubl
add
stc
out
lods
sub
and
in
clc
pop
xor
cmc
fidivrl
add
sahf
dec
nop
mov
sbb
cmp
sbb
dec
push
xchg
cmp
lret
xchg
sub
cld
int3
sbb
pop
into
daa
cmc
insb
mov
sbb
jno
in
out
or
cmp
int
mov
mov
mov
mov
pushf
movsb
sahf
int
das
mov
lcall
daa
xor
mov
add
xchg
add
jne
or
mov
int
fmull
pop
sub
jmp
jmp
inc
dec
andl
call
or
pop
imul
dec
push
pop
xchg
fwait
cld
dec
sub
xor
mov
nop
addr16
repnz
mov
roll
imul
adc
jbe
xor
cmp
inc
aad
and
pop
mov
loop
or
ret
mov
cs
push
push
xor
sub
mov
mov
inc
and
aam
ljmp
adc
cmp
stos
xlat
push
dec
lods
and
int
pop
popa
jmp
in
in
ds
jnp
add
jecxz
pop
lods
xor
dec
jo
in
inc
in
movsb
movsl
rcll
fchs
cmp
sub
push
into
popf
shlb
addr16
mov
lea
mov
fdivrs
jecxz
push
mov
int
shll
loopne
dec
ret
add
cmp
cmp
push
mov
je
loope
xchg
hlt
pop
cmp
mov
dec
jl
aad
movl
jmp
fwait
clc
mov
ret
add
dec
nop
loope
scas
xchg
sbb
mov
and
pusha
loop
lea
cmc
enter
sahf
loopne
lahf
ret
push
cltd
cmpsb
scas
das
ja
jb
popa
push
jo
or
xchg
repnz
xlat
in
dec
testl
mov
popa
lret
inc
pop
stos
or
xor
push
ret
cs
jnp
mov
mov
lret
nop
test
mov
orl
mov
xlat
movsl
rcr
flds
jne
jmp
push
out
outsl
scas
jno
cmp
cmp
inc
stos
push
in
pop
push
loopne
push
jae
incl
ljmp
push
fwait
dec
cmpsl
ljmp
fidivl
xchg
sub
hlt
aaa
jle
pushl
in
inc
lds
sub
mov
je
stc
dec
jbe
mov
adc
mov
dec
icebp
aas
lret
repnz
inc
divl
xchg
and
test
dec
or
push
dec
mov
or
cmpsl
js
dec
lods
cmp
repz
js
cmpsl
inc
cli
cld
in
imul
mov
xor
cmpsl
or
ljmp
not
std
outsl
and
int
pop
mov
add
je
movsb
cwtl
pusha
adc
and
mov
repnz
aam
mov
push
or
repz
mov
cld
loopne
leavew
lods
fisubs
pavgb
scas
imul
cmp
jb
inc
int3
xor
mov
adc
movsb
mov
sbb
mov
loop
je
xchg
out
out
dec
mov
dec
js
mov
jle
bound
test
ljmp
push
fdivs
loop
sahf
inc
ss
sbb
fistps
push
mov
jo
sub
adc
mov
push
clc
ret
adc
jle
jl
pop
push
xchg
sub
dec
xchg
cltd
xchg
or
xchg
xor
mov
cmpsl
cwtl
dec
pop
sbb
sbb
sbbb
les
mov
jnp
xchg
outsb
rolb
or
fwait
test
xor
cmp
adc
jge
call
bound
fwait
dec
rol
enter
lcall
fistpl
jo
jo
push
mov
xor
adc
sub
movsl
bnd
pop
jmp
dec
pop
mov
sbb
add
lods
int
adc
push
sbb
data16
pusha
inc
inc
xchg
mov
and
jne
adc
xchg
jne
shlb
mov
inc
sti
icebp
mov
dec
lods
xchg
mov
sbb
movsb
xchg
mov
jae
scas
push
rcr
repnz
sbb
jle
pusha
mov
xchg
fxch
orb
mov
jmp
mov
mov
pushf
pop
push
pop
cmp
int
mov
ficoml
jo
enter
test
fisubs
jae
pop
mov
je
and
aam
xchg
popa
add
fnstsw
mov
arpl
cltd
mov
sub
xchg
jge
sbb
fs
aam
adc
out
jp
inc
dec
and
mov
stos
pop
pop
mov
ja
popf
push
out
enter
mov
sbb
into
or
lods
imul
inc
jmp
adc
dec
hlt
push
dec
push
out
stos
fcomps
sbb
shrb
mov
cld
jge
cmp
mov
add
stc
mov
and
adc
ror
inc
outsl
pushf
push
stc
outsb
push
push
xchg
fnstenv
imul
loop
subl
insb
sbb
jbe
xlat
fcmovb
mov
shlb
mov
xchg
repz
setno
mov
cmc
lods
mov
lahf
xorl
push
daa
xchg
cmp
xchg
jns
lret
sub
sbb
adc
xchg
cmp
cltd
insb
xor
or
lret
lret
outsl
mov
into
daa
push
imul
jo
jg
call
in
sub
and
xor
jns
mov
cltd
sahf
cmp
and
cmp
pop
sbbb
jg
dec
stos
mov
cmp
cmp
aad
sbb
mov
pop
aad
dec
lret
add
cmpsb
inc
adc
int
xchg
das
pop
cs
scas
int3
les
movsl
push
imul
lret
lret
scas
fwait
pop
xor
scas
mov
cmp
rcrl
pushf
loop
inc
sub
dec
cmp
pushl
push
xchg
stos
adc
mov
les
and
cmp
sub
outsl
xchg
add
cmp
dec
icebp
or
push
lret
shlb
push
xchg
or
push
push
repnz
push
or
mov
xchg
inc
or
dec
push
sbb
mov
jae
pop
jge
jmp
sub
cmp
xlat
mov
enter
mov
es
out
into
jle
ds
xchg
scas
sub
xchg
sahf
jnp
mov
call
stos
fisubl
adc
add
push
and
lahf
sub
les
add
addr16
dec
jp
mov
sbb
or
je
mov
in
mov
sub
fs
xchg
jns
or
xchg
sahf
pop
cmp
in
pop
shll
xor
in
sbb
rorl
ret
rolb
jge
or
xchg
insl
mov
inc
lcall
inc
jmp
adc
ljmp
and
inc
pop
aam
or
mov
xor
nop
mov
or
and
add
idivl
out
xchg
cmp
adc
cmp
sbb
adc
clc
push
daa
hlt
decl
stc
icebp
cld
pop
outsl
in
fmul
lret
xchg
xorl
daa
in
mov
sub
jg
cmpsb
mov
dec
aaa
inc
cmp
loop
push
bts
stc
popa
insl
sub
mov
xor
mov
jb
push
mov
jge
imulb
std
pop
stos
ja
mov
mov
test
scas
cmp
ret
jne
leave
test
add
stos
mov
mov
push
adc
dec
adc
decb
mov
or
ret
rcrl
popa
fisubrs
add
in
lea
into
or
pop
jb
shl
jb
sbb
movsl
leave
sti
mov
arpl
test
xchg
leave
enter
mov
add
addb
and
iret
daa
push
adc
sub
int
pop
mov
dec
out
pop
insl
or
xor
sbb
pushf
movsb
jo
fstps
mov
fstpl
or
pop
jmp
pusha
sbb
cmp
jno
mov
shll
mov
icebp
sti
mov
rcr
into
outsb
add
andl
inc
js
cli
mov
or
dec
les
test
loope
out
mul
out
es
jl
adc
ret
lahf
sahf
iret
mov
xchg
inc
inc
pop
ret
jb,pn
scas
or
into
jns
aad
pop
mov
les
xchg
cmp
sar
stc
ret
jge
jbe
push
sbb
inc
js
lahf
mov
mov
pop
jmp
fbstp
or
or
lret
rclb
xor
sub
enter
test
int3
add
inc
fwait
lret
daa
outsl
mov
jnp
xchg
or
cmpsb
cmp
push
mov
jmp
sbb
sub
hlt
or
mov
or
in
mov
shlb
shlb
xor
je
mov
mov
test
pop
lods
fchs
imul
or
xor
mov
lea
in
adc
ret
rcrb
repnz
jnp
xchg
and
adc
jge
in
xor
inc
jle
inc
in
jnp
arpl
bound
movsl
jecxz
sub
xchg
ffreep
adcb
jecxz
data16
xchg
movsb
stos
sbbl
push
loope
xchg
movsl
pop
xor
cltd
and
mov
dec
jl
jnp
fnstsw
ss
shrl
movsb
fxch
outsb
inc
adc
pushf
cmp
ss
pop
icebp
insl
mov
jecxz
add
jg
push
int
enter
sbb
pushf
rorl
das
sub
ficoms
push
loop
push
xchg
pop
and
sbb
mov
mov
jnp
imul
mov
popf
mov
and
push
cs
xchg
loopne
ret
add
dec
negl
popa
repz
dec
or
mov
mov
in
int3
add
in
mov
pop
add
add
aas
add
and
clc
add
pop
xor
xlat
repz
push
popf
orl
jns
mov
cwtl
jecxz
jecxz
adc
add
hlt
add
jp
movsb
inc
xchg
mov
loopne
insb
xchg
addr16
sbb
sahf
xor
or
xor
rcrl
jbe
jmp
push
aaa
addr16
ret
xor
jecxz
clc
mov
cmp
xor
xor
leave
cmp
stos
dec
jp
cmp
out
pop
push
adc
jecxz
sahf
roll
mov
inc
daa
movsl
das
or
mov
push
stc
cmpl
shl
sub
inc
jb
pop
lock
fs
outsb
cli
std
inc
cltd
mulb
mov
mov
in
push
mov
ljmp
rcr
push
cmp
test
add
popf
jge
add
movsl
js
xchg
repnz
out
cs
push
roll
mov
bound
fstpl
or
dec
subb
pop
pop
mov
rorb
mov
cmp
or
rorl
push
fs
mov
jp
push
mov
push
pop
adc
notl
lds
inc
mov
xchg
out
mov
leave
sbb
adc
insl
mov
ljmp
mov
sbb
cs
add
fiaddl
adc
aaa
movsb
out
sub
xchg
jecxz
jns
sbb
jnp
push
push
lock
jnp
mov
cltd
sahf
push
and
stc
push
aad
cmpl
dec
or
cmpsl
jg
stc
movl
push
adc
test
cmp
rol
pop
pop
jle
bound
adc
movl
xchg
and
bound
addr16
xor
inc
loope
lcall
adc
sub
dec
add
push
adc
mov
dec
adc
mov
or
or
cmpsb
add
mov
or
scas
push
or
sub
xor
and
ljmp
test
pop
pushf
pop
sub
xchg
or
mov
ror
adc
cltd
adc
mov
xor
sbb
pop
in
movsl
sub
repz
daa
leave
das
mov
pop
push
std
push
ret
mov
xor
push
and
stos
pop
jb
stos
insl
mov
fiaddl
out
sub
addr16
out
xchg
fwait
mov
lock
cld
scas
xchg
mov
jecxz
imul
das
ret
pop
stos
call
inc
sbb
aaa
mov
pop
pop
iret
adc
and
shll
xchg
mov
call
lcall
cld
jo
adc
outsl
lret
aam
fmul
jne
mov
jle
int3
out
jnp
xor
inc
add
xchg
loopne
cmp
push
add
adc
mov
add
fnstcw
jg
jecxz
xchg
push
pushl
lds
fisttpll
pop
cmp
divb
mov
call
enter
jo
adc
sbb
push
jg
fwait
cwtl
fistps
iret
xor
outsl
nop
jbe
mov
xchg
in
lock
in
jo
int
and
mov
int3
outsb
dec
movsl
lret
cmpb
loope
dec
enter
xchg
les
hlt
mov
out
add
push
xchg
jb
jge
rcll
fbstp
mov
mov
pop
adc
dec
jno
xchg
xor
daa
sub
rep
lods
mov
push
ret
loope
jno
lods
xor
movaps
pop
je
xchg
adc
fisttpll
mov
mov
or
in
insb
xlat
imul
adc
dec
arpl
ret
and
pop
sub
in
xlat
adc
cltd
cs
xlat
stc
sub
dec
mov
pop
pop
adc
std
mov
mov
jae
dec
push
xchg
adc
mov
dec
lret
push
jne
or
int3
insb
dec
sbb
mov
xchg
dec
mov
xor
cltd
sbb
mov
bound
lret
es
test
push
jno
aaa
fbstp
xchg
sub
push
imul
les
daa
in
pop
mov
rorl
pminsw
push
in
clc
inc
jns
sub
in
sub
inc
insb
mov
out
sbb
pop
adc
in
adc
cwtl
mov
iret
lods
scas
xor
push
pusha
insl
and
mov
fldt
scas
sbb
daa
sub
sti
cmc
sub
out
outsl
testl
orb
cltd
mov
out
mov
mov
stos
popa
adc
cmp
pop
fcoms
and
icebp
or
jle
pusha
pop
sbb
jecxz
xchg
rcrb
mov
xchg
mov
jb
sub
adc
shll
in
sub
or
call
push
lret
mov
fimuls
pop
mov
test
loopne
jne
cmpsb
adc
pop
subl
dec
xchg
pop
sub
jecxz
mov
add
xor
hlt
sub
and
testb
decb
cmp
das
ss
arpl
sbb
jg
adc
insb
cmovge
in
int3
and
ret
daa
in
adc
inc
pop
xor
mov
dec
and
add
push
ljmp
enter
mov
mov
mov
lcall
or
sub
mov
cmp
test
pop
hlt
xchg
in
xlat
jns
lock
xlat
movsl
icebp
addr16
rcll
out
add
and
add
mov
into
cli
outsb
icebp
aam
repz
bound
daa
cmp
and
mov
pop
mov
leave
leave
mov
stos
or
loopne
rolb
std
repz
sub
pop
mov
test
in
in
imul
mov
inc
daa
xor
mov
push
xor
les
push
xor
adc
fldt
mulb
shrb
insl
mov
push
push
and
ljmp
xor
in
mov
push
adc
xor
xchg
ficoml
or
jne
adc
lea
stos
xor
out
jmp
xor
pop
sub
orb
movsb
dec
mov
out
cmp
cmp
or
ljmp
pop
cwtl
insb
jle
adc
cmp
insb
mov
adc
leave
cmp
pop
gs
mov
fsubrl
push
mov
xchg
jmp
dec
andl
push
int
out
mov
pop
dec
jmp
xor
loope
scas
icebp
arpl
and
add
pop
stos
cwtl
push
pop
mov
rorb
pusha
push
mov
decb
leave
pushf
jmp
fs
movsb
jmp
dec
leave
aaa
adc
push
inc
dec
lret
mov
push
jno
clc
mov
xor
stc
rolb
mov
hlt
sahf
pop
insb
mov
bound
fisttpll
pop
notb
fstpt
jle
ret
dec
mov
cwtl
nop
xor
xchg
aam
test
xchg
cmp
outsl
mov
dec
fadds
les
and
fistpl
sub
int
pop
push
mov
jge
fcmovne
adc
lea
or
and
movsl
iret
xchg
flds
inc
movsb
out
lods
sub
xor
sarl
out
mov
in
addl
mov
jnp
adc
mov
mov
adc
testl
imul
bound
sub
mov
ret
gs
loopne
lcall
mov
das
enter
ret
pop
inc
mov
into
adc
das
sub
add
cmp
or
cmpsl
push
outsl
pop
xor
mov
push
mov
or
mov
outsl
stos
or
inc
pusha
out
adc
adc
inc
jne
sbb
sahf
pop
xor
pop
xor
push
sbb
pop
and
push
and
insl
out
inc
mov
arpl
popf
or
jo
cmp
jo
push
test
shll
fistpll
clts
jns
dec
xchg
scas
or
out
mov
imul
popa
cmp
scas
pop
frstor
dec
addr16
xchg
inc
lock
jge
enter
jns
mov
adcb
out
out
scas
mov
nop
cmp
sub
dec
pushf
jbe
int3
push
jmp
dec
repnz
adc
hlt
push
ljmp
stos
push
outsl
ss
out
das
cli
int3
lret
sti
jae
scas
imul
cmp
sub
mov
mov
cmpsl
imul
das
pop
push
insb
mov
andl
xor
mov
popa
mov
or
test
mov
pop
sbbb
cmpsb
cmc
mov
out
divl
out
mov
cli
jl
sub
xlat
mov
jbe
aas
sahf
adc
push
sub
push
cmpsb
test
imul
push
xor
inc
pop
lahf
sbb
mov
push
inc
cmpsb
add
cmp
xchg
daa
xchg
mov
movsl
aam
inc
fidivs
lret
or
sbb
pop
dec
push
xor
inc
je
dec
mov
lahf
fs
add
add
ror
inc
in
rorl
xor
cmpsl
push
xor
stos
sti
int
jmp
data16
xchg
js
cmpsl
movsl
xchg
pop
add
dec
add
imul
rcrl
cli
test
out
cs
jle
dec
je
cmp
out
loope
push
lcall
pop
xchg
xor
in
sub
aaa
mov
cli
jo
inc
adc
popa
add
insb
or
fcoms
push
out
out
jl
mov
mov
sahf
cmp
xchg
xchg
addr16
pop
xchg
movsb
incb
int
or
and
pop
dec
lds
add
mov
pushf
adc
jo
daa
call
lods
jle
add
dec
push
or
out
cltd
xor
sbb
jmp
pop
cmp
jb
out
outsb
mov
push
mov
out
outsl
mov
inc
xchg
repz
ds
pushf
mov
jmp
clc
leave
addr16
popa
sahf
lret
adc
jg
jmp
xchg
sbb
push
and
fists
call
adc
call
sahf
jns
jb
and
adc
imul
popa
jns
fistl
xchg
push
xchg
adc
ret
inc
lret
call
push
xor
jno
ss
sbb
mov
loop
clc
cmpsb
dec
jne
jb
rorb
xor
sub
cmp
in
sub
rorb
fidivl
xchg
push
daa
ljmp
test
in
jne
dec
pop
lods
fs
mov
insb
xor
sbb
leave
pop
repz
mov
xchg
adc
gs
inc
mov
xchg
sarb
scas
push
lds
push
and
js
mov
sub
movl
jns
pushf
push
lret
mov
lret
test
rsqrtps
jle
andb
xchg
adc
pop
add
xor
lahf
dec
adc
popf
mov
cli
mov
cwtl
or
mov
gs
or
add
jl
in
lahf
pop
fbstp
into
adc
mov
push
inc
sbb
out
pushl
ret
xchg
pop
mov
filds
sti
push
sbb
sub
orl
sahf
and
movsb
scas
lods
xorb
cmp
add
hlt
cmp
xor
cmpsl
cmp
ljmp
addl
cli
out
pop
out
inc
loope
jnp
loop
sbb
js
in
add
xor
add
sar
mov
xor
popa
outsl
fidivrl
or
xchg
mov
sub
cmc
adc
mov
xorl
int
mov
adc
movsb
mov
or
leave
mov
movsb
xchg
mov
xchg
scas
call
lock
inc
iret
push
and
pop
outsl
xor
fistps
bound
sub
ljmp
mov
faddl
mov
ret
push
xor
xor
fiadds
test
jno
lahf
cmpsl
cmpsb
sub
in
aas
popa
push
xchg
shlb
mov
pop
aas
push
sar
pop
xchg
sbb
xor
movb
sub
les
push
fsubl
ret
cmp
jg
push
ljmp
push
stos
inc
aad
leave
inc
out
mov
outsl
add
jbe
fwait
mov
cmp
into
xchg
push
adc
clc
xor
jns
fiadds
sub
mov
and
push
cmc
inc
jl
or
adc
ret
aad
dec
push
cmpl
xor
cs
or
gs
jno
into
cmp
pop
mov
xchg
lret
gs
test
xchg
cmp
cmp
push
fldt
sub
adc
lods
cli
in
out
cmp
ficomps
addr16
push
rorb
inc
roll
and
jbe
pop
rorl
jbe
int3
scas
je
jg
cmp
and
incl
mov
mov
hlt
stc
test
push
cmp
pop
mov
leave
scas
cmpsl
subl
cmp
outsl
ret
jp
inc
xor
popf
ja
mov
stc
ret
mov
inc
shlb
fsubs
stc
jg
fisttpl
rcll
imul
mov
mov
jmp
ss
ret
push
sub
push
es
jmp
or
adcb
xor
scas
mov
xor
mov
imul
sbb
mov
push
divb
in
inc
xchg
xchg
ret
push
int3
hlt
inc
repnz
and
xorl
and
dec
sub
pop
loope
daa
or
scas
and
arpl
push
mov
mov
clc
lcall
int
stos
jle
pop
icebp
hlt
jno
sub
imul
mov
jbe
div
jns
cwtl
mov
fsubrs
int
inc
push
cmp
ja
std
pop
or
iret
xor
inc
mov
add
jmp
int3
sbb
mov
ljmp
add
jmp
outsb
clc
or
in
xchg
jl
push
mov
pop
test
cltd
mov
out
lret
push
and
jl
repnz
push
dec
inc
data16
jmp
mov
inc
sub
push
and
push
adc
push
or
lret
lea
clc
int3
jae
hlt
add
mov
ror
pushf
cld
or
cs
call
mov
mov
xchg
dec
or
push
pop
shufps
xchg
and
mov
or
cmpsb
dec
push
enter
xor
les
andl
mov
sub
sub
out
push
fst
pop
test
push
test
jnp
mov
leave
int3
aam
ret
push
sti
js
xor
adc
or
or
stos
imul
xor
inc
dec
ds
insl
cli
xchg
iret
rclb
cli
add
fstps
int
mov
inc
out
stos
xor
inc
mov
iret
push
sbb
out
imul
xchg
in
fstp
ds
jl
cmp
xchg
push
ja
mov
xor
repz
into
push
insl
fadds
incl
nop
jmp
push
mov
sti
mov
icebp
imulb
push
das
push
pushf
mov
lods
xor
test
fwait
mov
mov
and
mov
jmp
mov
sub
popa
xor
fisubs
add
push
sub
subb
sbb
and
iretw
dec
ljmp
stc
mov
enter
jne
dec
cmp
add
pop
sbb
cmp
bound
incb
jno
mov
inc
mov
and
test
jecxz
std
jbe
xor
xchg
push
adc
jns
lret
add
and
push
add
aam
xchg
out
or
daa
xchg
bound
push
xlat
pop
mov
xchg
je
or
push
jmp
jae
xchg
lea
mov
pop
aas
mov
enter
je
popf
push
addr16
sarb
jb
and
xadd
and
test
jo
sbb
in
lds
outsl
dec
pop
xchg
icebp
clc
pop
fldcw
popf
das
push
ds
and
mov
push
sub
outsl
loope
or
xchg
jo
or
inc
pop
jg
cmp
dec
fisubs
call
sbb
movsl
pop
sbb
ret
jecxz
out
dec
pop
xchg
enter
sbb
ss
xor
arpl
cmp
dec
out
sbb
popa
sub
mov
leave
adc
cwtl
mov
cmp
mov
nop
imul
inc
ds
rol
pop
sub
lock
pop
inc
pop
or
jb
aam
outsb
add
and
pop
mov
call
or
jnp
stc
fisttpll
cmp
xchg
xor
inc
popl
test
jno
push
jl
scas
push
data16
pushf
or
enter
das
mov
xchg
pop
mov
adc
push
xor
out
mov
ljmp
xchg
ret
add
nop
push
loop
inc
push
in
mov
and
aad
push
shr
add
add
ret
das
and
pushf
xor
dec
iret
sahf
call
inc
test
cwtl
add
fcom
push
add
leave
sub
jb
call
fsubs
inc
xor
cmp
sbb
mov
mov
adc
and
push
out
mov
xor
aas
lods
cli
push
js
mov
mov
js
test
clc
cmpl
xchg
cmp
dec
jmp
icebp
mov
ds
sub
mov
scas
xchg
shl
leave
mov
cmp
and
in
jns
cmp
mov
orb
jbe
or
inc
mov
movsb
mov
out
xor
out
dec
mov
add
adc
rcrb
mov
add
aam
outsl
cmp
call
in
cltd
pusha
lret
rcrb
mov
inc
inc
hlt
daa
xchg
mov
aam
fstpl
insb
inc
dec
adc
jg
test
pop
stc
ja
sbb
xchg
es
les
les
repz
popa
xor
mov
lret
mov
inc
lret
dec
sub
cmp
loop
fsubrs
jmp
mov
push
mov
dec
pop
adc
daa
int3
jne
inc
jg
pop
arpl
or
pop
and
lcall
jno
add
push
mov
nop
push
xor
in
ss
adc
bound
xor
pop
fdivrl
xchg
lods
and
outsb
lahf
and
cmp
and
out
mov
jo
add
dec
mov
push
mov
mov
and
jns
ss
dec
pop
jl
and
stos
popa
sarl
addr16
xchg
xchg
jne
add
push
pop
sarb
xor
call
xchg
ja
and
mov
push
movsb
xor
mov
ljmp
and
xchg
sub
sysret
jecxz
dec
sub
bound
sbb
dec
jmp
add
sarb
mov
stos
lods
adc
cmpb
or
in
cmp
in
out
nop
pop
jl
inc
xchg
mov
pop
xor
xor
cmpsb
repnz
inc
mov
inc
mov
or
mov
aam
mov
in
xchg
jno
outsb
xchg
test
mov
std
mov
aas
mov
mov
aaa
dec
jb
pop
or
push
int3
cwtl
test
aas
testl
jmp
fwait
mov
jo
mov
jne
xor
fists
fbstp
cmp
dec
lods
leave
xchg
popf
fldcw
mov
out
sbb
repz
jmp
cld
inc
mov
adc
mov
push
xchg
add
inc
fildl
ficomps
into
lcall
xchg
mov
jg
fsubs
popf
jp
inc
xchg
xor
cmc
mov
sarb
sti
xchg
xchg
sti
mov
rcrb
test
cmc
pop
pop
inc
icebp
mov
push
mov
mov
jmp
push
outsb
in
clc
lahf
pop
adc
push
sbb
mov
xorb
pop
mov
int3
icebp
enter
pop
ret
push
aaa
inc
mov
addr16
sub
lds
outsb
lret
outsb
push
xchg
pop
out
mov
out
dec
adc
and
or
xlat
jbe
sbb
adc
dec
ror
and
and
sbbl
mov
mov
sarb
shrl
pop
pop
ret
aad
mov
pop
mov
ds
fistpll
adc
xor
idivl
pop
aas
out
imul
sbb
jae
in
mov
push
std
dec
loope
adc
imul
mov
mov
or
lcall
mov
pop
sub
gs
dec
cmp
and
sub
lds
out
pushf
cli
pop
sub
in
xchg
push
pop
pop
stos
sbb
loopne
scas
out
daa
scas
cmpb
and
repnz
cmpl
div
ds
icebp
xchg
lret
and
cld
pop
std
bound
xchg
sub
jge
mov
cld
jl
xor
cmp
test
ret
loopne
add
lods
mov
fcoms
cmp
cwtl
xchg
jge
insl
std
pop
pop
push
aas
data16
inc
sbb
cli
clc
push
sbb
jge
pop
add
push
cmp
pop
mov
mov
jp
inc
stos
sub
jge
movsl
rclb
fdivrs
cmc
iret
stc
mov
data16
aas
mov
aad
out
cltd
pop
xor
push
inc
cs
adc
ljmp
and
rcl
dec
adc
and
sub
inc
hlt
add
mov
cmp
xor
cmp
or
insb
push
mov
pusha
push
ds
lret
mov
sbb
and
and
add
mov
rol
xchg
lea
jns
add
pop
adcb
scas
sub
sbb
cld
jnp
imul
inc
push
push
inc
inc
pushl
mov
lds
mov
jle
loop
das
mov
xchg
and
subl
pop
fsts
inc
or
aas
lock
dec
push
insl
jle
or
aam
pushf
jp
dec
fdivs
xor
call
mov
mov
adcl
scas
call
jo
xchg
mov
dec
add
add
sub
pop
xor
add
mov
xchg
into
adc
mov
sbb
data16
lock
mov
hlt
sub
lret
repnz
mov
stos
or
fwait
or
jo
and
shlb
sarl
scas
in
repz
xchg
lods
sarl
pop
xlat
push
cltd
movaps
mov
mov
pop
lret
dec
jecxz
inc
mov
jle
mov
mov
adc
addb
add
aad
insl
inc
and
ja
lcall
adc
fisubrs
outsl
adc
orb
out
loope
mov
push
fwait
sahf
xor
out
fstps
adcl
sarb
aad
out
jb
xchg
divl
cmp
cmp
aam
test
ret
mov
mov
aaa
sahf
lcall
cld
loopne
mov
int
cmc
sub
in
or
push
stc
insb
sahf
notb
test
into
add
mov
mov
stos
leave
xor
cld
sbb
sub
jp
xchg
mov
fsts
adc
test
fcomps
daa
mov
ss
pop
adc
outsb
insl
sahf
out
jnp
aaa
inc
rcrl
jno
sub
loope
inc
xchg
aaa
xchg
movsb
cmpsl
out
pop
xchg
dec
inc
in
faddp
pop
out
mov
and
cmp
dec
xor
inc
pop
dec
or
sbb
adcl
sbb
fs
pop
call
das
subl
cmp
push
int3
xor
daa
call
mov
cwtl
scas
push
sbb
inc
jg
or
mov
lea
mov
mov
mov
fists
push
xchg
adc
or
aaa
jmp
adc
xchg
mov
push
pop
push
jae
leave
lret
test
hlt
ja
push
mov
lcall
jnp
xchg
cld
pop
test
or
and
add
lahf
bound
lret
lock
adcl
iret
mov
mov
dec
inc
loop
or
mov
int3
pop
fsubrl
imul
stc
xlat
xchg
sahf
fwait
mov
push
insl
call
test
out
dec
push
call
repz
push
xchg
adc
ret
jg
aad
test
scas
sub
add
das
aaa
inc
scas
pop
decl
add
jo
sti
pop
arpl
xor
push
sbb
mov
adc
jne
repz
iret
xchg
sbbl
mov
js
and
jmp
inc
or
mov
aam
rolb
rclb
xchg
adc
pop
fimuls
cmpl
mov
mov
icebp
mov
dec
jmp
icebp
popa
ljmp
cld
pop
mov
outsl
lods
cltd
cmp
cwtl
xchg
xchg
repnz
stc
shrb
xor
sub
and
outsb
adc
push
cmpsl
in
or
jl
jecxz,pn
mov
dec
sbb
pop
testl
sub
or
shrb
inc
in
jo
mov
or
imull
fnsave
mov
fistps
inc
inc
rclb
push
mov
fstpt
push
cltd
add
dec
scas
mov
xor
cmp
fisubs
pop
or
ret
repz
adc
pop
xor
pop
in
daa
adc
jg
sbbl
scas
mov
sbb
or
add
dec
shlb
divl
dec
std
stos
and
hlt
mov
lock
outsl
enter
jl
aaa
aad
mov
mov
dec
and
inc
xor
and
dec
jbe
pop
nop
or
push
fsubl
les
out
dec
mull
and
xlat
fisubs
loopne
popa
push
mov
in
mov
jecxz
movsb
add
lcall
mov
mov
pop
adc
shrl
fnsave
add
aaa
lahf
mov
les
xchg
loope
or
test
jg
cwtl
and
add
fwait
sub
mov
mov
jp
cmp
jb
test
pop
cltd
scas
daa
push
out
frstor
cmp
js
iret
mov
xlat
xchg
lcall
push
or
and
sbb
pushf
xor
push
scas
out
pusha
and
dec
lret
sbb
hlt
test
cld
add
and
sbb
fidivrl
aad
out
add
fdivl
adc
xchg
in
mov
dec
test
mov
mov
jne
clc
pop
enter
adc
sbb
das
inc
dec
push
sub
divl
dec
aad
in
push
loopne
xchg
add
stos
aas
stc
sub
pop
aaa
repnz
jp
clc
sub
pop
cmp
andb
mov
xchg
enter
gs
xchg
add
test
cmpsl
push
xchg
daa
test
shr
pop
sti
fstps
call
mov
pop
mov
push
jae,pn
mov
dec
stos
ret
add
lret
adc
mov
orl
xchg
sarb
nop
adcl
inc
in
jle
insb
xorl
jecxz
clc
push
stc
adc
pop
jmp
rcrl
inc
leave
in
stos
cmpsb
jmp
in
lea
pop
fcoms
imul
cmp
mov
or
and
sub
and
xchg
and
popa
decb
dec
mov
popa
pop
ds
push
inc
push
lcall
ljmp
lods
adc
sbb
pop
pop
mov
nop
fsubl
pinsrw
and
enter
jle
scas
into
xchg
lret
pop
xchg
jl
sbb
xor
jmp
push
inc
imul
add
int3
outsl
push
into
adc
or
jne
test
loopne
out
imul
xchg
es
aad
push
inc
sbb
test
imul
push
xor
loopne
mov
pop
jmp
mov
push
subl
jge
mov
loopne
cld
mov
adc
dec
mov
popa
test
push
mov
mov
pop
xchg
stos
mov
pop
push
cli
mov
sbb
ror
stos
enter
add
cli
add
mov
sub
out
dec
out
mov
cmpsl
andl
in
push
xor
and
sub
sub
jne
mov
aam
push
fdivl
ja
hlt
test
pop
jns
jge
push
sti
inc
arpl
jecxz
rorb
das
mov
std
lock
fdivl
aaa
and
outsb
xchg
xchg
aaa
add
mov
pop
mov
mov
dec
push
loopne
mov
outsb
aaa
negl
bound
xchg
fs
sti
filds
sbb
jecxz
inc
xchg
sbb
aad
jle
fwait
imul
cmp
cli
sub
push
xor
pop
cmp
pop
test
jnp
lds
cmp
cli
jae
pop
xlat
movsb
nop
mov
fiadds
jae
mov
mov
lea
fs
dec
mov
pop
xor
dec
scas
fidivrl
adc
repz
inc
cmpsb
push
and
add
lea
es
sbb
repz
stos
repz
lods
in
inc
xor
out
stos
andl
push
imul
icebp
arpl
push
push
cmp
dec
sbb
std
or
outsb
and
loop
push
xchg
inc
mov
in
mov
cmp
mov
fdivs
imul
jg
push
jne
ret
nop
sbb
dec
xor
mov
adc
dec
addl
or
xor
adc
shr
out
rcrl
fdivs
mov
cwtl
or
enter
cmpsb
cmp
sbb
inc
out
call
imul
mov
push
jbe
fidivl
aaa
pop
scas
jb
in
test
pop
pop
add
lock
stc
inc
jnp
mov
mov
icebp
inc
cmp
pop
inc
or
adc
das
call
negb
mov
lea
std
nop
fprem1
fadds
xor
mov
repnz
decl
mov
fdivrs
lods
and
cmp
inc
fs
jb
les
or
mov
sbb
gs
sub
xchg
or
mov
pop
stos
sbb
mov
mov
shl
push
cmp
mov
test
xchg
sti
pop
add
cwtl
push
inc
cmpsb
inc
fstps
call
fdivrs
push
bound
iret
mov
test
lret
out
inc
sahf
xchg
leave
lds
jno
push
insb
outsl
mov
or
lods
pop
jno
push
insl
je
and
push
sti
adc
jbe
sbb
add
jnp
xorl
lods
mov
mov
xchg
add
out
aam
jnp
cld
fs
dec
push
xor
xor
xchg
or
push
xor
pop
lock
lock
jbe
dec
mov
jl
xchg
cmp
mov
repnz
mov
jmp
dec
pushf
lret
xchg
push
sahf
adc
outsl
test
and
aad
xor
imul
popf
outsl
jne
xor
mov
xor
je
push
jnp
add
sbb
enter
xchg
mov
and
leave
insl
mul
cmp
adc
sbb
xor
lea
cltd
sbb
aaa
aad
mov
test
adc
mov
jmp
sbb
and
add
leave
loop
in
fisttpll
aas
imul
xchg
sbb
nop
scas
push
jno
cmpsb
loop
xchg
in
test
fdivrl
push
xchg
cmp
sahf
and
shr
lret
jo
ljmp
jmp
mov
sub
mov
ljmp
std
imul
pop
out
mov
or
rcll
cmpsl
jo
dec
lea
mov
jmp
mov
cli
aas
lahf
imul
xor
mov
popa
out
push
jns
pop
sbbl
or
movb
mov
jo
dec
fiadds
dec
adc
and
pop
xchg
or
jle
pop
jae
or
push
outsl
stos
mov
inc
insl
jecxz
cmp
sbb
fnstcw
rorb
fsub
jl
out
pop
call
jecxz
jbe
adc
arpl
lea
jne
stos
and
cmpsl
cmp
mov
insb
and
rclb
lods
loop
mov
dec
jmp
push
lea
or
jl
or
lret
es
stos
mov
jge
mov
dec
cmc
scas
or
nop
push
or
jae
movsl
xchg
cld
les
call
testb
sarb
adc
data16
or
jg
dec
mov
gs
in
jl
mov
pop
in
adc
pop
mov
int3
mov
mov
push
jmp
push
pop
jg
xchg
test
push
sahf
les
test
add
js
mov
movsl
fwait
lahf
out
std
add
leave
sbb
adc
pop
jb
in
dec
mov
sub
xchg
int3
cmp
arpl
cs
icebp
mov
rorb
mov
xchg
popa
in
icebp
out
dec
stos
jmp
add
out
mov
jge
std
mov
sub
dec
std
popf
das
sti
mov
pop
sbb
push
pop
dec
and
push
push
xchg
cmp
addr16
sub
push
dec
jg
fdivl
out
cmp
arpl
inc
je
rorb
mov
lahf
mov
dec
pop
push
pusha
or
push
shrb
loop
loopne
dec
in
mov
push
addr16
pop
out
lods
scas
test
aad
push
cmp
out
xchg
push
push
xchg
popf
push
jbe
xor
inc
jg
das
call
je
scas
sbb
iret
std
popl
mov
sub
and
sbb
push
gs
mov
bound
inc
rcr
rcrl
aad
mov
jnp
movsb
test
movsb
fwait
inc
jns
lea
mov
dec
cltd
cmpsl
pop
sub
jne
pop
jo
inc
pop
xor
lea
test
sub
add
cmp
lcall
inc
add
shll
dec
adc
nop
enter
xlat
pop
cmp
les
cmp
dec
aas
mov
test
inc
ljmp
pop
mov
fldt
pusha
imul
sub
outsl
cmp
mov
sbb
sbb
xor
and
pusha
inc
mov
inc
xor
jo
imul
jl
mov
repnz
clc
add
sbb
lret
movsl
sbb
add
inc
and
nop
les
mov
sub
inc
or
divl
and
jl
pop
add
dec
nopw
aam
bnd
jecxz
repz
nop
out
xor
sbb
lret
and
sti
stos
and
jge
inc
or
lret
jb
dec
and
out
lcall
mov
lods
bound
push
jge
pop
adc
popa
push
push
dec
mov
lahf
leave
std
stc
ljmp
or
ds
cmpb
jo
add
cmpsl
mov
mov
movsl
movsl
dec
int
or
notb
sub
xor
jno
stc
fdivrs
mov
aam
ljmp
pop
pusha
dec
mov
imul
test
xor
popf
sub
pop
lock
push
aaa
int3
dec
call
pop
pop
or
jle
orl
jne
pushf
lahf
mov
xor
es
fxch
sub
js
sub
add
cmpl
mov
ss
cs
sahf
lods
outsb
xchg
rorb
gs
rol
pop
inc
sbb
into
mov
sbb
xor
test
push
cwtl
js
dec
fldl
daa
loop
inc
nop
dec
xor
rorb
scas
xor
push
and
lds
xlat
aam
roll
ret
and
sub
scas
jnp
sub
into
cli
jge
jb
mov
stos
xchg
push
sub
repnz
xor
inc
cld
divb
pop
dec
mov
pop
test
jle
mov
xchg
push
aas
insl
jecxz
lea
nop
mov
push
xchg
mov
cld
icebp
in
pop
and
xchg
lret
icebp
inc
iret
dec
mov
pop
mov
jmp
sbb
dec
movsl
dec
xor
pop
xor
ror
mov
pop
jnp
test
ret
addb
ret
jg
in
adc
cld
hlt
neg
or
pop
outsb
mov
test
fildl
push
and
dec
ja
mov
es
push
sbb
pushf
cmpsb
xchg
jno
cmpsb
jl
add
mov
xchg
mov
fcmovnbe
mov
mov
xchg
xchg
stos
iret
outsl
mov
movsl
jp
inc
adcb
das
les
add
aaa
fcmovb
bound
xor
pop
stos
loop
push
add
jne
sbb
repnz
ja
push
in
push
mov
xor
pop
testl
pop
dec
cltd
inc
cld
nop
mov
test
xchg
inc
inc
xchg
jle
dec
and
mov
addr16
incb
mov
pop
sbb
mov
mov
enter
negb
adc
ja
mov
imul
mov
mov
iret
fidivrl
ss
jmp
push
rclb
mov
cmp
jmp
mov
jge
fimuls
add
sbbl
ret
or
aaa
outsl
iret
pusha
fmull
sarl
je
lds
pop
add
adc
push
mov
push
outsl
notw
fadds
std
sar
fwait
cmp
je
ljmp
or
inc
aad
xchg
loop
mov
sbbb
and
or
or
rorb
push
or
fucomip
cli
sbb
jge
cmc
add
and
enter
lret
cmp
dec
mov
mov
xor
dec
xor
mov
pop
sbbb
mov
gs
push
insb
and
movsl
push
pop
and
aaa
xor
sub
loope
pop
jmp
or
or
sbb
xchg
cmpsl
stos
jnp
push
jl
push
in
jae
pop
xchg
inc
jge
andl
dec
sbb
jo
das
xlat
dec
popa
lock
push
cs
imul
cli
inc
xor
jne
push
fnstenv
out
inc
xor
scas
mov
ljmp
pop
pop
fcompl
icebp
push
lcall
pop
sti
addr16
mov
rol
ret
lahf
cmc
enter
out
push
movsb
or
das
sbb
mov
insl
cmp
subl
jmp
mov
push
mov
movsl
sbb
push
inc
mov
lret
cmc
inc
iret
insb
insl
sub
pop
inc
or
rcrl
cmp
cld
ss
mov
fistps
pusha
int3
pusha
dec
mov
mov
push
fdivl
cld
fnstcw
aas
xor
dec
mov
adc
cmp
lock
je
in
lret
jnp
dec
lcall
add
add
stos
mov
imul
jbe
aaa
and
or
mov
pop
popa
xchg
int
pop
xor
mov
sbb
dec
test
stc
inc
cmp
xchg
mov
xor
push
xor
lret
pop
mov
rol
mov
insb
nop
push
ffree
xlat
xor
leave
xchg
push
sbb
mov
sub
xor
sub
cwtl
mov
rcrb
add
cld
push
dec
pop
mov
rep
push
push
out
mov
jno
cmp
and
in
sbb
outsb
aad
jmp
in
mov
mov
daa
shlb
pop
lods
rcll
mov
notl
pop
dec
dec
andl
sbb
das
ficompl
cmpl
inc
out
push
and
movsl
pop
add
pop
mov
pop
mov
nop
bound
inc
sbb
and
rcll
insb
outsl
mov
mov
arpl
push
mov
mov
sbb
cmp
addr16
jne
pop
inc
jno
cltd
xchg
add
fwait
inc
mov
in
dec
mov
mov
or
imul
cmp
mov
imull
xorl
fcomps
clc
lcall
jl
add
movsl
idivl
ss
push
fisubs
push
dec
fst
fstpl
ja
sarl
lods
jno
js
js
shrb
adcb
xchg
adc
loope
cmp
loop
aas
and
clc
xor
pop
pop
cltd
inc
mov
orb
mov
loop
mov
cli
xor
in
xchg
mov
loop
int
mov
cltd
fisttps
arpl
ss
stos
fistpll
scas
mov
xor
sub
pushf
imul
jne
push
xchg
sbb
sbb
or
scas
cwtl
cmp
aad
cmp
xor
fistpl
js
loop
flds
xchg
sub
mov
and
or
fldenv
pop
dec
inc
ss
mov
xorl
mov
mov
test
movsl
xor
push
fcompl
and
enter
loop
loopne
xchg
sbb
pop
or
lock
adc
cmp
popa
mov
dec
shl
sbb
sbb
shlb
mov
sub
test
fxch
jmp
scas
pusha
and
in
test
sahf
stos
in
xor
mov
mov
cmc
xor
dec
add
cmp
stc
sbb
sti
aaa
inc
stos
mov
adc
and
mov
rcrb
xchg
fstps
sub
subl
cmpl
xchg
roll
xor
inc
push
push
call
xor
cmpsl
in
push
les
xchg
xchg
jecxz
imul
jne
xchg
fmull
movsb
stos
cwtl
jmp
jo
aas
dec
add
push
jo
stos
cltd
xor
mov
sub
lds
pop
mov
insb
stc
bound
fiaddl
cltd
jns
cwtl
test
jno
jp
lods
les
push
ja
inc
call
pop
xchg
inc
popf
push
dec
mov
xchg
fwait
jge
or
push
fisttpll
idivb
sub
hlt
ret
call
push
mov
loopne
outsl
leave
iret
xor
insb
out
or
pop
dec
call
mov
shll
sahf
addl
pop
shr
aaa
cmp
push
lcall
in
lret
fistpll
cmp
mov
sti
add
push
xchg
mov
jbe
pop
je
sbb
jns
scas
adc
pop
das
sti
lods
in
inc
xor
adc
jle
push
leave
mov
fsts
stc
lcall
in
push
or
fcmovne
mov
mov
lock
mov
fwait
insl
mov
scas
xchg
outsl
cmc
sbb
inc
or
jae
loopne
cmpsb
or
mov
sbb
sub
in
mov
inc
lret
lret
lcall
inc
adc
js
or
push
xchg
pop
cmc
aad
std
cmp
and
jns
lret
mov
jl
mov
enter
in
adc
lea
push
in
enter
cwtl
pop
adc
test
jle
in
outsl
mov
insl
push
xchg
cwtl
add
fidivl
dec
sbb
addr16
or
mov
daa
or
aam
xor
inc
mov
cltd
push
jp
pop
xchg
ja
ja
lds
test
mov
cmc
ret
push
sub
xchg
inc
adc
sbb
aad
test
jl
testl
dec
pop
rorb
fdivs
fistl
adc
cmpsb
xchg
inc
decl
popf
sbb
pop
cs
sahf
popf
sub
pop
loop
dec
cmp
sbb
adc
rcll
psubd
shll
test
inc
enter
sti
jle
jns
mov
sub
fidivs
jno
std
pop
mov
icebp
add
ret
daa
outsb
loopne
push
and
icebp
jo
in
dec
inc
inc
clc
sbb
scas
xchg
cli
mov
cld
and
xlat
adc
or
xchg
insb
xchg
jno
jp
mov
outsl
dec
pop
repz
mov
adc
inc
xchg
jno
int
dec
je
std
mov
rcrl
rolb
xor
in
pop
std
in
call
xor
add
jecxz
leave
add
loop
mov
cmp
mov
addr16
repz
in
inc
out
cltd
int
add
mov
cmp
add
xchg
lods
push
xchg
ret
test
dec
mov
add
mov
adc
pop
clc
outsb
xor
pop
dec
adc
nop
hlt
push
stc
cmp
cltd
xor
mov
movsl
adc
movsl
mov
hlt
ja
iret
scas
push
mov
inc
sarl
aaa
mov
inc
and
jb
pop
pusha
and
test
adc
jno
loop
pop
lea
iret
data16
loop
dec
lea
stc
xchg
mov
sbb
frstor
inc
xchg
xor
add
cmp
cmp
call
xor
pop
sbb
insl
ja
add
loope
mov
add
dec
dec
daa
sub
das
jb
ret
adc
cwtl
add
jb
test
cmp
or
mov
daa
xchg
adc
sub
mov
dec
mov
jno
and
fwait
stos
je
jecxz
int3
and
pop
arpl
xor
fisubl
add
fcmovne
fwait
jne
cs
dec
mov
sub
pop
cmpsl
push
inc
or
sbb
or
data16
aad
adc
mov
inc
push
ds
jmp
dec
addb
sbb
std
and
cmp
aam
xchg
shrb
or
nop
jo
jbe
and
mov
jnp
leave
or
mov
movsl
xlat
and
dec
xchg
mov
repz
jl
mov
dec
add
or
jge
push
adc
mov
xor
outsl
adc
and
jecxz
stos
cli
push
ret
xor
mov
arpl
cli
or
jp
inc
shll
xor
or
das
pop
aaa
stc
lds
inc
push
call
imul
mov
mov
aam
dec
push
cmpb
dec
pop
push
repnz
dec
cs
and
push
rol
dec
clc
pmuludq
cmc
jmp
sti
cld
xlat
sahf
ljmp
daa
orl
out
xchg
mov
scas
aad
add
jecxz
mov
aas
hlt
sbb
aam
aad
ficompl
and
cmp
inc
sbb
pop
fnstsw
push
sbb
xchg
aam
jg
add
adc
pop
jae
aad
inc
out
popa
cmp
inc
shrl
mov
ret
dec
cmc
outsl
movsb
rclb
cs
test
add
shll
dec
xchg
push
mov
subl
adc
xor
sbbl
jnp
jns
test
cmp
insb
into
in
cli
add
insb
and
das
jl
xor
fwait
sbb
std
mov
arpl
pop
or
bound
lods
icebp
inc
adc
mov
cmpsb
adc
sub
mov
fcompl
cmp
insb
push
mov
pop
mov
add
add
cmpb
les
inc
mov
push
mov
sbb
sbb
sbb
fsubl
mov
mov
mov
jno
mov
loope
das
adc
mov
popf
or
cmp
bound
xor
cli
or
es
add
sbb
shrb
xchg
add
int
loop
jb
fsubrp
or
dec
and
inc
stos
xor
adc
cmp
ret
orb
mov
iret
stos
jecxz
mov
fdivl
bound
faddp
arpl
scas
sub
and
mov
insl
sub
pop
dec
cld
int3
icebp
bound
push
add
mov
pushw
mov
inc
out
daa
enter
jge
test
sub
and
dec
xorb
jl
ror
pop
mov
and
push
js
icebp
cmpsb
icebp
repnz
or
mov
lahf
out
in
lret
popa
fwait
xor
cmp
push
mov
add
inc
xchg
fcmovne
pop
shlb
dec
repnz
pop
push
or
xor
scas
push
sbb
pop
pusha
mov
push
mov
iret
imul
inc
movsb
dec
cmp
push
mov
inc
xor
movl
sub
sbb
jnp
ror
rorb
ficoml
leave
jo
dec
pop
push
mov
cmp
dec
mov
je
cmp
imul
std
insl
xchg
je
inc
sub
stos
into
push
int3
push
shll
hlt
xchg
rorl
lea
pop
lods
sar
rcrl
cmp
scas
jne
insb
or
icebp
in
test
decb
iret
inc
xlat
xchg
dec
push
mulb
js
dec
inc
sub
jecxz
push
dec
cvtpi2ps
dec
sarb
fsts
mov
mov
outsl
sbb
fbstp
scas
xor
pusha
hlt
imul
pop
push
imul
xchg
or
xchg
test
xchg
push
pop
ficoms
fwait
dec
loopne
clc
mov
sub
gs
rorl
popa
lods
data16
pop
add
int3
mov
insw
or
mov
push
fidivl
divb
push
adc
pop
lock
lcall
xor
data16
sahf
mov
out
rclb
repz
adc
outsb
nop
xlat
xchg
or
pusha
movsb
imul
fdiv
sub
loopne
test
aaa
xor
cmp
adc
lret
mov
sub
not
sbb
mov
shrl
pop
cmpsb
adc
xchg
mov
jbe
mov
add
xor
inc
nop
adcb
inc
das
out
loopne
jns
mov
test
cli
call
ds
cmp
mov
xor
movsl
cltd
cmpsl
dec
and
sahf
in
add
pop
inc
pop
and
push
jns
mov
adc
mov
xor
in
push
out
lea
imul
scas
cmpsl
flds
and
push
outsb
xchg
xchg
enter
divb
inc
addr16
dec
stc
mull
jecxz
mov
addl
pop
fistpll
mov
mov
jmp
nop
cld
aas
jbe
loope
xor
mov
out
movsl
add
cmp
hlt
add
pop
cmp
fiadds
xorb
out
adc
pop
jge
xchg
push
jbe,pn
or
inc
pop
enter
mov
in
loope
or
dec
leave
or
push
repz
std
hlt
iret
mov
add
adc
lds
out
loope
push
popa
push
cmp
dec
sub
sub
push
jecxz
pop
shlb
es
and
mov
and
adc
in
repnz
fdiv
nop
in
jmp
xchg
pop
cmp
push
push
test
lret
xor
cmp
in
pusha
mov
js
inc
pop
cmp
lret
in
adc
cmp
ds
fnsetpm(287
mov
jo
callw
and
mov
sub
jbe
subl
jbe
xor
call
xchg
outsb
std
dec
cmp
lods
aam
ss
mov
insl
loope
and
xlat
pop
mov
or
jl
divl
inc
movsl
cmpsb
jnp
push
das
scas
jecxz
or
add
lret
cmp
int
das
mov
stc
mov
lahf
adc
std
divb
jne
sbb
mov
cmp
ljmp
nop
mov
fstps
sbbb
or
xor
repz
out
cmp
daa
jmp
mov
leave
ds
xchg
ficomps
xor
mov
mov
xchg
adc
push
ret
lret
cmc
jge
add
cwtl
push
sub
fstps
push
scas
add
jecxz
and
push
es
fmuls
mov
addr16
inc
sbb
mov
cmp
add
stos
aaa
inc
jne
dec
xchg
add
arpl
cmp
pop
or
sbb
movsl
mov
inc
insl
lea
fisubrl
push
xchg
jo
pop
jle
sbb
fiadds
jno
xor
out
push
cwtl
push
push
bswap
arpl
fisubl
ja
repz
into
stos
push
xchg
dec
or
pop
adc
je
cli
vmread
lahf
pusha
sbb
fnsave
dec
addr16
clc
sub
dec
dec
sti
push
mov
sub
mov
jnp
add
test
sarl
jb
stc
jb
loopne
sbb
lods
sbb
arpl
mov
mov
sub
or
mov
test
mov
or
outsl
jg
aad
loop
std
movsl
lods
gs
ret
imul
ret
lea
add
inc
fldl
ja
enter
cli
xchg
dec
nop
inc
xchg
jmp
inc
test
stos
mov
pop
cmp
xchg
outsl
xor
cmc
in
in
ret
xchg
out
pop
rorl
sbbl
cmpsl
test
test
dec
mov
cmpsb
fnstcw
loopne
stos
sbb
push
in
push
pop
imul
pop
add
jne
in
bound
sbb
xchg
push
dec
cmp
xor
cmp
or
jg,pt
xchg
call
and
pop
lock
mov
xchg
xchg
sti
inc
out
imul
mov
jo
insl
out
mov
xor
aaa
sbb
pushf
inc
pop
ja
es
fldl
jne
jmp
add
jmp
fcmove
inc
dec
pop
xor
push
jl
ja
mov
cmp
xchg
xchg
mov
inc
xchg
inc
sub
jo
mov
outsl
fldenv
fdiv
mov
pop
sub
mov
imul
push
xchg
in
sub
mov
aad
xor
xchg
in
lcall
mov
loop
push
push
inc
std
push
test
xchg
mov
pop
push
and
enter
call
sbb
repnz
or
mov
daa
push
call
add
pop
sbb
sub
popa
hlt
jnp
out
cmp
inc
pop
hlt
sub
jg
xor
das
jnp
mov
insl
mov
imul
or
push
mov
xor
xchg
addr16
insb
inc
testb
outsl
xor
nop
cmp
dec
inc
stc
jae
fsubp
fwait
lds
ljmp
cs
inc
mov
test
jns
stos
pop
sahf
and
outsl
fisubs
repnz
cmpsl
xor
cmpsb
sarb
push
movsb
fildll
fisubs
add
vmptrst
xor
jp
mov
adc
loopne
in
xchg
jbe
pushf
mov
jno
mov
loope
ds
add
or
adc
add
mov
insl
lods
cli
jo
xor
mov
jmp
push
sub
dec
or
xchg
arpl
pop
out
imul
mov
stc
push
and
inc
pusha
mov
inc
in
adc
cs
sbb
mov
dec
mov
xor
mov
in
adc
not
out
and
insb
test
sbb
adc
pop
orl
loop
adc
push
pop
clc
mov
sbb
lret
xlat
jp
aas
and
adc
imul
pop
js
bnd
ja
in
pop
mov
orl
dec
lock
jge
push
xor
ret
jnp
xchg
adc
jb
push
sub
fidivrl
dec
iret
cmpsb
push
ljmp
jns
cltd
inc
in
sub
pop
add
mov
push
sbb
push
lahf
test
jo
sbb
in
daa
and
js
xchg
lret
setbe
cmp
addr16
nop
cmp
addr16
mov
add
and
mov
fildl
insl
aam
fcomi
push
std
inc
xchg
in
clc
xchg
in
std
mov
mov
and
iret
push
or
cmp
popa
lret
int
fisubrs
mov
imul
mov
cmp
dec
lods
sub
rcrl
and
adc
and
pop
fimuls
hlt
cltd
xlat
add
rorl
lahf
pushf
sub
mov
sub
subl
inc
fisubl
jmp
cli
sbb
pop
sbb
xor
daa
jl
out
and
xchg
xor
sub
dec
dec
lcall
dec
mov
and
imul
call
adc
sub
jl
xor
xchg
pop
cltd
mov
inc
push
xor
push
mov
sub
dec
in
incl
push
inc
or
imul
outsb
enter
sbb
imul
xor
sahf
xor
xchg
insb
je
or
ljmp
pop
dec
pop
xchg
or
xchg
push
cmp
mov
mov
sub
push
push
testl
jp
lds
sbbl
int
cli
push
cwtl
rorl
mov
sbb
mov
add
cmc
imul
lcall
xlat
aam
cmp
loop
pop
lret
push
cmp
inc
or
fstps
mov
clc
xlat
mov
mov
dec
jne
jmp
mov
call
push
aam
pusha
adc
mov
mov
adcl
sbb
push
xor
push
pop
push
adc
outsb
in
arpl
jp
cmpsb
xor
cld
imul
sub
test
mov
push
scas
mov
add
lea
jnp
outsl
lret
loop
arpl
jne
adc
push
cli
pop
rcll
lea
xorb
xchg
sub
rolb
bnd
in
lret
dec
orl
cli
pushf
iret
pop
aam
out
mov
push
ja
subb
pop
cmpsb
pushf
data16
push
xchg
adc
mov
jno
in
pop
push
xchg
mov
push
stos
shlb
push
sub
scas
mov
push
testb
das
aas
mov
dec
dec
pushf
pop
lret
mov
adc
scas
enter
imul
sahf
nop
mov
pop
shrb
repz
and
mov
out
adc
xchg
push
mov
xchg
fisubs
xchg
sahf
xchg
or
mov
dec
sub
inc
inc
ds
stos
sub
sub
mov
cmp
and
jo
and
nop
or
test
int3
lods
mov
add
sbb
adc
add
xlat
dec
jns
movsl
fs
scas
sbb
nop
pop
std
jnp
dec
cmpsb
repnz
inc
mov
cs
and
jns
dec
jnp
inc
dec
into
or
stos
pusha
cld
add
jne
cmp
into
scas
ret
dec
pop
rcrl
loopne
fdiv
ja
xchg
aam
enter
sbb
cmp
mov
lock
xchg
fists
shrb
fildl
mov
xchg
call
and
adc
lret
jne
mov
xor
dec
addr16
mov
or
or
repz
cltd
xchg
js
roll
xor
mov
push
int
outsb
pusha
arpl
or
test
push
xor
sub
or
jmp
aad
and
xor
aaa
add
mov
sub
adcl
xor
mov
frstor
aam
mov
dec
subb
push
mov
dec
sbb
loopne
js
hlt
xchg
jbe
mov
repnz
lahf
and
and
dec
cld
out
sbb
inc
inc
xchg
stos
fldenv
jecxz
push
pop
dec
or
mov
mov
paddusb
orl
or
vmread
mov
aaa
outsl
aaa
jp
adc
cwtl
xchg
jmp
mov
or
dec
inc
dec
inc
push
out
iret
pusha
loopne
sbb
fildl
mov
sbb
inc
mov
jmp
stc
imul
sub
nop
mov
jo
cmp
sub
mov
outsl
xchg
dec
sub
cld
clc
or
mov
dec
in
pushf
nop
xor
out
sbb
inc
stos
out
dec
sub
data16
jbe
and
movsb
out
call
or
jns
sub
add
popf
mov
dec
rcl
movb
fimuls
movsb
xchg
cmp
shll
jo
jge
fisubl
insl
jae
scas
pop
repnz
mov
loope
stos
jle
sub
mov
stos
jle
push
pop
repz
or
negl
cmp
mov
push
mov
fs
mov
mov
stos
gs
and
mov
shlb
arpl
vsubsd
fstl
or
push
scas
inc
arpl
mov
adcb
sbb
sub
xor
clc
inc
sub
push
lret
adc
inc
jmp
sub
ret
mov
lods
and
push
ret
jae
les
pop
mov
xchg
aad
sub
jo
adc
jge
mov
stc
lock
cld
pop
or
repz
push
or
mov
add
mov
test
lret
stos
inc
stos
scas
in
es
mov
or
cs
add
arpl
cld
mov
mov
sub
negb
fcompl
stos
and
pop
bound
lcall
rorb
scas
mov
push
cli
inc
jb
adc
rcpps
cmc
out
or
adc
jo
and
pusha
insl
addr16
sub
aaa
in
ret
adc
xchg
popf
imul
lahf
nop
inc
and
add
dec
imul
jge
pop
insl
cmp
scas
or
cmpb
std
add
enter
xor
cmp
cwtl
ds
ss
popf
mov
lcall
es
jp
and
sub
mov
daa
sbb
or
daa
popl
mov
cld
sbb
lahf
sub
dec
xchg
in
fldcw
std
cmp
test
scas
cli
jo
add
jns
jo
xchg
inc
das
imul
lods
or
mov
sbb
insl
ficoms
adc
jb
mov
inc
dec
lret
dec
xor
jmp
pop
mov
jmp
mov
enter
push
inc
fwait
scas
addl
lock
or
xchg
mov
mov
push
push
call
fcmovb
xchg
mov
lds
lret
cmpsb
sbb
cmp
push
aaa
and
fidivrl
lods
sti
or
cltd
dec
call
adc
push
outsb
cmp
mov
mov
dec
mov
mov
or
adc
imul
fnstenv
out
jmp
and
leave
xchg
loop
xor
iret
int
pop
into
clc
pop
add
cmp
mov
push
xor
shll
imul
sti
iret
or
adc
insb
pop
push
inc
dec
out
in
sbb
leave
in
xor
mov
dec
pop
lock
jg
push
and
imul
test
das
dec
insb
cmp
fdivrl
jg
incb
xor
sbb
cltd
lock
push
dec
les
in
mov
ljmp
cs
lcall
out
mov
gs
cs
and
or
mov
mov
fimuls
or
je
sub
fdivrs
mov
push
ret
insl
in
sbb
and
psllw
mov
clc
loopne
jge
jecxz
lret
mov
mov
dec
ja
divl
iret
xchg
nop
mov
notl
adc
in
test
scas
sub
xlat
sub
outsb
push
int
js
pop
out
aad
imul
scas
fistps
imul
inc
int
push
lret
jb
push
sbb
test
mov
mov
pop
pop
in
jbe
call
jecxz
push
mov
leave
in
cltd
or
and
stc
sub
xchg
lods
xchg
xlat
xchg
and
push
shlb
sbb
nop
mov
jp
sbb
mov
fcmove
test
out
add
mull
jle
ss
mov
and
sub
cmp
test
or
adc
insb
mov
lods
xchg
subb
xchg
jl
adc
pop
add
cld
int3
pop
jo
and
add
scas
test
add
pop
lahf
or
jo
fldl
xchg
mov
in
add
jae
xor
sbb
dec
push
xchg
outsb
dec
in
ljmp
mov
push
bound
ss
dec
cs
ss
fsub
cmp
ret
xor
stos
xor
lods
cltd
adc
outsl
mov
push
shll
or
sbb
ljmp
inc
lret
jbe
push
pop
test
push
sbb
ret
sub
sub
xlat
mov
iret
or
pop
ja
insl
xor
cmc
and
shr
or
ds
xor
and
ds
jae
sub
das
stc
mov
mov
push
push
mov
test
dec
push
mov
or
mov
gs
loop
jno
jmp
hlt
andl
mov
imul
xor
mov
add
dec
sub
int
pop
sbb
orb
je
gs
movsb
and
inc
jle
in
inc
stos
push
es
add
and
dec
jns
ss
popa
mov
aad
mov
dec
bound
xor
push
cmp
or
call
and
fsubrl
mov
xchg
leave
mov
mov
iret
fnstsw
inc
inc
push
sbb
es
fs
xor
movsl
mov
addr16
loopne
call
loop
leave
int
add
xor
pop
pop
adcb
sbb
and
cmp
rclb
and
cmp
xlat
pushl
add
add
xchg
out
nop
shlb
pop
gs
sub
repnz
and
push
shlb
dec
mov
enter
ja
dec
pop
sub
adc
adc
cmp
andl
pop
sub
aam
shl
pop
faddl
stos
mov
cmp
bnd
frstor
insb
pop
inc
add
mov
mov
and
cmp
pop
cli
mov
testb
fwait
std
adc
popl
pusha
push
mov
and
or
cmp
xor
add
orb
sbb
test
sbb
pop
pop
mov
sbb
sub
test
jb
out
fisttpl
out
push
add
xchg
into
int
mov
dec
sar
sbb
dec
lea
and
sub
dec
dec
jl
out
push
mov
repz
mov
es
jne
scas
sbbb
inc
imul
fnstsw
aaa
ja
cld
jbe
les
mov
mov
push
push
xor
lods
and
xor
sub
add
stos
sbb
and
mov
out
dec
lods
xor
lods
lahf
dec
mov
xchg
scas
cltd
movsb
push
jmp
subl
loope
in
mov
out
fwait
jmp
enter
dec
mov
xor
lcall
sbbl
pushf
xchg
mov
stos
jmp
aam
mov
fwait
jno
and
pop
xor
mov
dec
push
mov
mov
sbb
xchg
test
mov
mov
lds
stos
stc
xchg
cmp
bound
mov
out
pop
jg
and
orb
out
sub
jle
imul
dec
jl
jns
and
fisubrl
cmp
stos
hlt
lahf
loopne
and
arpl
inc
out
pusha
mov
mov
push
dec
sar
outsl
and
sti
insl
loope
add
xchg
pop
adc
mov
xchg
loope
cli
inc
jp
push
mov
aam
dec
ficoml
out
sub
push
fdivrs
mov
and
dec
mov
jmp
pop
dec
clc
cmp
or
adc
xchg
xor
sub
or
adc
rcl
mov
push
mov
enter
jae
xor
push
movsl
dec
push
jbe
or
mov
inc
testb
ja
jo
and
mov
xchg
push
ja
sahf
cmp
mov
push
pop
jle
lcall
les
xchg
js
push
aam
push
aaa
dec
sahf
jno
jle
std
insb
in
loop
fisubl
lahf
jno
filds
std
rolb
jbe
scas
lods
dec
inc
jmp
jp
push
add
adc
or
sbb
xor
mov
and
push
cmp
pop
fisubl
cmp
and
es
xorl
cmc
into
lret
mov
push
add
insl
inc
cld
rcll
xor
sub
sub
lock
jo
ljmp
sbb
jl
clc
dec
stc
in
ss
adc
aam
mov
out
mov
mov
je
xchg
xchg
fcomps
loop
out
sub
push
mov
aaa
mov
dec
rclb
cmp
mov
adc
add
jle
inc
es
mov
stos
add
lods
ss
pusha
rolb
jae
loop
ret
jge
test
xchg
loopne
sbb
test
fdivl
or
xor
out
xchg
stc
nop
jne
aas
sub
jle
pop
scas
scas
mov
mov
push
push
mov
shrb
lods
fmull
pop
push
fadd
sbb
mov
jecxz
ret
testl
pop
push
inc
ret
sub
push
leave
add
push
out
aaa
out
mov
add
test
push
mov
lods
jns
outsl
mov
inc
mov
push
jns
mov
mov
cmc
imull
pop
test
add
or
add
popf
inc
imul
cli
add
add
cmpsl
in
lahf
es
stos
fistl
dec
sti
fcmovu
aas
fidivrl
pop
and
jge
jo
shlb
mov
movsb
mov
sbb
inc
jmp
cmp
rcrl
clc
or
adc
fiaddl
call
mov
push
lcallw
or
ror
cmpsb
sbb
mov
jle
lods
jp
mov
cmp
jo
mov
mov
jne
fsubrs
cmc
ret
lods
adc
mov
adc
dec
das
mov
and
jno
xor
sbb
movsb
adc
popl
aas
add
push
lock
sbb
cs
cmp
movsb
sbb
dec
insl
pop
fists
and
test
and
test
adc
add
push
adc
add
xchg
xchg
inc
lea
xor
cld
ja
mov
loope
es
or
sarb
out
xchg
mov
stos
addr16
sub
popf
js
pop
into
fbstp
scas
sub
pop
lea
clc
fdivs
inc
sbb
sahf
insb
je
pminsw
lret
sub
aam
jl
cmp
popa
test
dec
adc
cld
mov
imul
mov
lret
mov
sbb
cmpsb
adc
pop
mov
gs
iret
jge
cmp
push
pop
cmp
mov
sbb
mov
call
jno
es
icebp
dec
push
xchg
xchg
adc
popa
sbb
das
stc
aaa
cmp
pop
test
or
arpl
mov
push
mov
or
jmp
lcall
and
inc
fwait
sahf
inc
daa
jne
jl
loopne
adc
int
movsb
push
scas
push
cld
cmp
add
mov
jge
xor
and
icebp
xor
pushf
shrb
adc
in
mov
stos
dec
in
jge
adc
ret
popf
bound
dec
daa
jbe
jl
inc
or
imul
jle
cmp
mov
leave
clc
mov
inc
inc
push
or
or
stos
push
pop
lret
xor
jmpw
out
daa
repnz
call
mov
lahf
stos
fisubl
mov
loope
lock
je
add
mov
cmp
std
popf
in
inc
push
aam
bound
jo
sbb
and
mov
cld
hlt
lds
push
in
pop
sbb
push
lods
stos
in
pop
push
adc
pop
cltd
les
cmp
and
lods
mov
cli
loopne
les
pop
cmp
neg
jp
inc
fs
fucomi
movsb
lret
ss
push
aam
nop
movsb
fisubrl
adc
out
fcmovnu
rcrb
out
add
test
incl
jnp
jg
jp
jbe
sbb
fsts
inc
jo
lods
out
add
test
lock
dec
nop
mov
fnstcw
ret
jnp
dec
adc
pop
jmp
push
mov
xchg
iret
adc
mov
addr16
dec
addr16
xlat
cmp
fisubrl
inc
iret
cmpsl
mov
or
int3
jbe
pop
dec
xchg
dec
loopne
aas
popa
pop
inc
push
test
sahf
mov
and
pop
frstor
and
cltd
jle
hlt
xor
call
mov
and
ret
int3
xchg
test
test
fdivs
xor
mov
call
and
and
call
pop
add
jmp
add
fwait
addb
adc
out
test
sbb
out
or
xor
sarl
imul
pop
mov
js
sbb
ss
adc
sbb
imul
es
and
cmp
cmp
repnz
decb
push
dec
mov
fdivr
cmpsl
mov
bound
push
and
icebp
in
pushf
and
mov
iret
cltd
bound
mov
push
mov
pop
jbe
xlat
sarb
lea
mov
data16
dec
test
out
icebp
or
mov
lahf
adc
out
pop
lahf
or
mov
pop
lret
int
mov
adc
and
pop
and
push
jl
lock
inc
dec
mov
and
mov
sahf
dec
pop
xchg
or
je
out
rorl
loop
inc
or
sub
sbb
mov
jmp
sbb
pusha
out
in
cmpsl
adc
stos
out
pop
lea
inc
cmp
aaa
sub
mov
out
push
cld
enter
ljmp
add
or
mov
decb
ss
pop
ljmp
jae
call
idivl
jmp
dec
ret
shrb
stos
add
mov
dec
repz
mov
test
bsf
add
pop
and
lahf
lea
push
daa
icebp
cmp
cmp
sbb
push
dec
adc
int3
es
lahf
orb
stos
subl
cmpsl
cmp
ja
hlt
cmc
xchg
loop
loop
xlat
cld
xor
sbb
inc
int
mov
and
arpl
sub
orl
movb
adcb
sbb
aad
and
icebp
cmp
cmc
stos
mov
ljmp
ficomps
ds
jl
aam
cmp
je
pop
mov
dec
sub
add
fidivrl
nopl
pop
and
sahf
leave
mov
scas
push
dec
aam
xor
sbb
aad
data16
repz
cld
popf
rol
jg
out
outsb
inc
add
rorb
addr16
inc
mov
cmc
add
dec
cli
xchg
xor
mov
pushf
cmpsb
push
mov
push
inc
sub
mov
jmp
aad
jnp
dec
cmp
repnz
add
mov
pop
inc
jp
rol
add
mov
movsl
fdivrl
xor
push
push
ljmp
aas
push
sub
sbb
add
fisubs
lret
imul
inc
das
jmp
pop
nop
and
fdivp
and
jo
cmp
in
mov
add
cmp
leave
mov
ss
dec
sub
pop
popa
arpl
ss
jns
jge
push
in
pop
sbb
xor
jmp
xor
lret
out
insl
sub
and
fsubrl
loope
inc
sub
push
mov
inc
cs
es
jo
sbb
aam
push
jb
frstor
sub
mov
dec
lret
pop
mov
mov
ljmp
lods
inc
cmp
xchg
and
aas
xchg
negl
sbb
enter
inc
dec
fildll
dec
test
jecxz
gs
icebp
pop
mov
cmpsl
in
rclb
insb
xchg
call
jl
lcall
addb
push
sti
aam
xchg
fisubl
subl
add
jo
scas
in
test
adc
aaa
xor
or
adc
pop
adc
push
push
mov
xor
adc
out
mov
mul
mov
daa
shlb
or
leave
std
inc
mov
jg
push
adc
cmp
aas
sbb
adc
sub
aas
pusha
stos
adc
aam
bound
lock
pusha
jne
jmp
inc
ficoml
leave
aas
stos
fs
cli
addr16
popf
das
mov
stos
leave
inc
out
dec
test
cmp
leave
inc
hlt
aad
incl
adc
lret
pop
inc
sti
cmp
and
pop
adc
fisttps
scas
mov
jmp
int3
jnp
mov
imul
adc
fs
sub
rol
scas
leave
fs
cmp
scas
xchg
or
xchg
sub
loop
dec
movsl
xchg
push
lret
xchg
pop
roll
je,pn
int3
push
shll
out
test
lret
sub
dec
ret
xor
ja
imul
ljmp
fs
sbb
xchg
jmp
notb
out
in
push
fidivs
call
xlat
in
mov
inc
test
push
cmp
inc
fcomps
in
cmp
xchg
lds
dec
xlat
inc
lds
iret
fcmove
dec
sub
sub
ds
into
jnp
mov
adc
mov
jg
roll
sbb
mov
mov
daa
and
push
cmp
fimuls
and
scas
inc
fdivs
in
setb
jmp
out
ja
jae
jns
popf
xchg
cmp
sub
test
dec
push
mov
cmp
shll
clc
mov
xor
pushf
add
jg
jo
shrl
dec
xlat
cmp
sarl
dec
add
jnp
scas
lea
inc
ficoms
xorl
mov
or
sub
push
cli
out
sahf
mov
mov
lods
dec
cmp
jb
xchg
dec
push
push
mov
cltd
jge
jg
ljmp
ret
mov
and
js
and
sbb
loopne
lret
dec
call
xor
shl
sub
add
sub
nop
notl
sbb
addr16
mov
insb
inc
lret
mov
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
mov
shr
es
sub
in
adc
or
enter
into
jae
aas
xor
lret
xchg
pushl
mov
data16
xchg
pop
aam
pop
dec
jnp
fs
jno
in
mov
lahf
pushf
inc
inc
inc
mov
cmp
dec
fsts
ja
ds
mov
out
divl
inc
inc
in
lcall
pop
sub
inc
dec
and
lock
and
imul
fucom
pop
nop
mov
lea
fdivrl
loope
test
pop
aaa
out
pop
add
call
fwait
dec
filds
jle
clc
jge
daa
lds
shll
mov
inc
jo
sub
inc
test
insl
mov
xchg
sarl
jecxz
imul
jno
push
adc
push
sub
jl
pop
lahf
sarb
jns
roll
jno
rolb
inc
mov
push
inc
push
ret
repnz
sahf
pop
ds
sbbb
lea
scas
jno
les
dec
ret
popa
or
push
jo
adc
push
pop
cmp
jmp
or
dec
lret
xchg
and
mov
sarb
aad
pop
pop
cmp
pop
imul
rcrl
imul
mov
sub
inc
dec
push
push
adcb
into
shll
mov
mov
xor
mov
les
lock
jb
int3
jb
pop
iret
repnz
ret
pop
call
in
or
mov
ja
xchg
cwtl
imull
stc
xor
adc
dec
add
xchg
imul
mov
addr16
xor
adc
xorb
pop
xchg
pusha
icebp
dec
xchg
dec
fcompl
mov
scas
cmc
mov
and
fsubl
xchg
add
dec
cmpsb
adc
dec
mov
loopne
bswap
and
mov
jecxz
mov
repz
push
pop
cld
jb
js
enter
mov
push
out
xor
aas
xchg
and
cmp
sub
out
dec
mov
add
fwait
push
into
inc
data16
sub
hlt
jp
pusha
fwait
mov
mov
xor
push
faddl
imulb
clc
test
inc
cmp
mov
sub
adc
add
jae
ret
xor
lds
imul
dec
ss
add
push
jmp
and
inc
xchg
les
fiaddl
mov
mov
jecxz
rcl
jg
mov
test
cmp
sbb
jecxz
call
jne
dec
inc
icebp
out
enter
fisubrl
dec
cmp
push
mov
ret
aam
sbb
add
in
mov
dec
nop
cmpl
mov
sbb
ja
pop
cmpsb
es
jo
mov
sub
dec
pop
ret
cmp
push
inc
es
into
in
aad
shrl
loopne
faddl
sahf
test
sub
mov
pop
or
sbb
xchg
xchg
pop
dec
clc
mov
loopne
add
aaa
cmp
enter
xchg
popa
std
aad
dec
mov
arpl
xlat
out
xchg
lret
and
xchg
push
ds
mov
clc
and
out
xchg
pop
xor
loopne
cld
aam
dec
arpl
xchg
xlat
decb
add
loope
mov
adc
lods
inc
testl
call
popa
jo
cmp
inc
mov
cltd
xor
pop
mov
and
sbb
pop
in
fidivs
mov
fnstenv
push
pop
and
shlb
xchg
aam
push
mov
je
lea
sbb
adc
movb
out
mov
pusha
jne
cmpsl
pop
loopne
mov
out
inc
cmc
in
and
cmpsb
pop
mov
mov
mov
xor
cmpsl
fdivr
rorl
fdivs
outsl
or
cmc
lods
aaa
lea
fcoml
in
push
iret
push
pusha
imul
ret
in
enter
fisttpl
lahf
movsb
xlat
pushf
jge
test
dec
add
xor
and
sbb
or
xorl
loop
inc
arpl
xchg
sub
ret
mov
dec
jae
xchg
add
int
inc
rcrb
dec
mov
and
mov
fwait
jg
xchg
or
lret
rclb
repz
in
mov
loope
dec
sub
clc
sub
popf
into
push
inc
xor
stos
clc
mov
icebp
scas
out
cmp
inc
ss
fistps
cmpsb
adc
or
daa
sbb
pop
pop
mov
popa
sub
pusha
jae
add
add
xor
xchg
push
js
jl
enter
xor
ss
loopne
loopne
fwait
insl
fsub
fsubrl
fwait
leave
fsubs
and
mov
push
adc
icebp
push
add
arpl
adc
pop
sahf
jge
push
xor
popf
lret
aas
lods
in
mov
push
rcll
ds
repz
imul
adc
sub
pop
clc
jb
test
gs
push
lret
xor
xchg
sbb
push
rcl
pop
mov
insb
pop
xchg
fnstsw
dec
xor
loopne
jne
outsb
dec
aas
arpl
or
movsb
clc
adc
sbbb
sbb
fmul
cs
or
aam
dec
int
in
xor
fidivrl
xchg
hlt
inc
dec
les
push
pop
dec
jmp
and
adc
cld
movsb
xlat
arpl
lret
mov
stos
bound
out
lahf
xchg
push
les
mov
pusha
xor
mov
jns
int3
push
adc
call
and
pop
data16
clc
cmp
push
push
fisubs
dec
xor
cmp
push
inc
shlb
push
jbe
lds
dec
mov
pop
call
jg
inc
pusha
push
std
mov
es
and
aaa
cmpsb
cmp
jno
fsubrs
dec
jbe
lds
cltd
dec
mov
lock
sub
rcll
insb
xor
in
ds
push
pop
adc
dec
mov
in
jmp
sub
xor
or
mov
mov
jno
in
cmpsb
fsub
flds
mov
sub
jno
stos
std
sbb
and
sbb
jecxz
or
cmp
jecxz
mov
fidivrl
mov
test
add
sub
icebp
mov
loop
cltd
cmpsl
and
adc
rcrb
cs
movsl
andl
into
push
mov
fcoml
mov
in
loopne
mov
in
gs
or
push
into
icebp
mov
out
add
adc
jl
adc
lock
jne
ret
sbb
call
mov
and
sbb
addb
jo
cmp
cs
imul
aad
cwtl
aaa
inc
in
add
mov
and
enter
mov
insb
aad
pop
fbld
jnp
xchg
adc
sti
adcb
scas
adc
jg
jg
jb
clc
push
adc
call
movsl
ja
les
and
jo
test
in
pop
xchg
mov
jle
popa
inc
inc
sbb
sbb
in
jmp
insl
and
add
xor
addr16
pop
sti
lret
dec
popa
pop
icebp
and
sub
das
jae
bound
test
lcall
adc
push
cmpsb
test
fwait
shll
mov
xchg
cmp
les
hlt
add
dec
dec
or
adc
mov
rclb
inc
cmp
cld
xor
out
mov
scas
jle
pop
xchg
stc
mov
push
inc
dec
adc
xchg
lret
outsb
xchg
fyl2xp1
pop
shlb
mov
jb
lret
jb
push
fsubr
fcmovu
hlt
push
xchg
and
mov
mov
xchg
rorb
iret
push
repz
pop
dec
into
lea
cmp
push
ret
and
inc
cmpsb
sub
nop
ret
repz
xchg
sub
lds
mov
jle
je
cmp
push
sub
aas
std
push
or
jns
fldt
mov
jb
cli
or
les
ds
xor
fimull
bound
ftst
cmpsl
push
push
jmp
add
adc
jle
jp
push
inc
xor
test
fnstsw
and
adc
clc
sub
leave
mov
sub
in
adc
rcr
mov
mov
sbb
sub
dec
imul
icebp
xchg
shll
enter
cmpsb
push
test
sarl
pop
imul
pop
nop
daa
out
jmp
mov
mov
daa
je
cwtl
adc
ficoml
jecxz
ret
test
jb
mov
mov
je
jno
arpl
out
mov
scas
mov
inc
fs
stos
divb
adc
xchg
ds
fstps
mov
mov
jae
je
push
pop
xor
or
loopne
pusha
jb
stos
adc
mov
cltd
rolb
insl
outsb
stos
fistps
sbb
jp
std
cmp
js
sub
int
jmp
jp
xlat
sub
imul
inc
jge
imul
inc
push
ds
iret
imul
and
in
bound
rclb
cmp
loope
or
hlt
aad
jp
cmp
adc
adc
andb
adc
xor
or
jmp
mov
ret
cs
shl
mov
mov
int3
jne
inc
mov
sub
cli
adc
mov
loopne
add
in
movsb
icebp
jge
out
out
sbb
pop
mov
fs
imul
push
add
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
repnz
jne
mov
sub
add
stos
jmp
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
