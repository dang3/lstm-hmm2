sbb
add
mov
sbb
push
into
mov
mov
stos
dec
push
sub
xchg
rcrl
outsb
cli
popf
mov
cmp
fisubrs
imul
aaa
pop
icebp
mov
dec
dec
mulb
into
mov
and
jl
xor
ror
pop
and
fs
fldt
out
xor
mov
jl
aas
sbb
jne
jo
push
adc
into
xlat
roll
enter
cmp
dec
lahf
and
and
xor
dec
fwait
add
stos
int3
mov
lds
negl
mov
lods
outsl
and
imul
jb
jg
divl
shrw
popa
inc
cld
pushf
in
pop
and
roll
inc
inc
jnp
mov
xchg
cs
test
mov
xor
lock
ret
pop
xchg
mov
lcall
aad
leave
and
xchg
push
push
xchg
scas
daa
aam
and
and
mov
or
ljmp
and
mov
cmpb
mov
out
jae
dec
sbb
adc
push
inc
xor
xor
cmp
xchg
sbb
and
jg
sbbb
call
mov
xor
push
iret
pop
jle
sbb
and
das
add
jmp
xor
insl
pop
pop
mov
sub
jb
icebp
enter
es
in
fwait
aaa
jnp
sbb
in
inc
loope
stos
sbb
xor
in
aas
pop
in
mov
add
dec
mov
lcall
sub
in
xchg
bound
or
cli
lret
sbb
sbb
imul
repz
add
cmp
addr16
test
outsl
add
in
dec
cmpsl
cmp
mov
xor
jae
lret
and
xchg
mov
lds
outsb
ss
movsl
xor
jl
orb
bound
rcl
jo
cmp
inc
lret
in
jne
jns
cmp
xchg
test
xchg
fcom
push
mov
call
cld
mov
mov
jne
pop
pop
sub
jns
cmp
push
inc
into
mov
xchg
jmp
lods
pop
dec
stos
push
sbb
js
adc
iret
mov
std
cmp
or
pop
dec
lods
jns
or
clc
clc
jmp
imul
xchg
sarl
jmp
das
aad
test
arpl
pop
lock
mov
inc
add
fnstcw
fnsave
nop
add
xchg
adc
mov
jg
out
cli
jns
leave
dec
sbb
in
cmp
lods
and
fcomps
outsb
mov
fisubs
xchg
mov
pop
test
mov
sbb
jge
cwtl
add
adc
js
jnp
inc
arpl
push
or
and
dec
push
inc
daa
jg
jle
std
pushf
mov
cmp
jge
shl
or
es
mov
data16
out
andl
scas
mov
xor
std
cmc
xchg
int
test
or
push
mov
mov
lcall
bound
ret
std
aam
jno
and
imul
cli
adc
insb
xor
repnz
into
imul
mov
jns
cmp
cmp
push
hlt
or
lods
dec
dec
jge
mov
mov
fnstenv
std
repnz
btl
and
ret
push
jnp
sbb
movsl
jo
fs
iret
sarb
xor
leave
jb
jg
test
sbb
inc
stos
jmp
mov
sbb
pusha
hlt
cs
js
into
inc
dec
das
push
dec
xchg
mov
icebp
dec
mov
sbb
inc
jno
out
inc
add
aad
mov
addl
mov
xchg
mov
inc
lds
test
and
movsl
or
xchg
shll
cltd
pop
cld
or
and
ja
nop
roll
mov
or
xchg
sbb
fistps
test
lods
or
jae
xor
push
adc
mov
movsl
jns
xchg
mov
jne
xlat
mov
sub
xorb
imul
int3
xor
xlat
sbb
push
int
pop
in
dec
sbb
lahf
popa
jmp
push
jmp
loopne
stos
enter
in
push
dec
dec
clc
bound
adc
xor
inc
xor
cmp
push
dec
mov
jle
rcrb
cmp
ret
cmp
jmp
xor
popa
repz
scas
sbb
pushf
mov
ret
rcrb
inc
mov
and
cmp
or
push
divb
xlat
lret
bound
mov
mov
out
mov
pop
cld
xchg
mov
mov
shrl
rorb
in
sarb
sbb
dec
inc
js
cmpsl
mov
cmp
stc
sahf
arpl
out
and
jle
mov
add
pop
clc
lret
icebp
fsubrl
sbb
gs
jp
push
cwtl
mov
push
imul
in
mov
fwait
sbb
inc
in
arpl
xchg
sti
jmp
xchg
mov
sbb
orl
arpl
ret
mov
fmuls
push
mov
mov
mov
add
test
cld
lods
scas
and
test
push
push
add
insl
aad
mov
cli
in
je
jecxz
loopne
xor
inc
push
rolb
jb
lds
ljmp
mov
test
xlat
mov
cmpsb
dec
ljmp
sbb
pusha
sub
push
push
imul
push
mov
stc
xchg
leave
pop
imul
cmpsl
or
or
cmpsl
fimuls
std
insb
mov
and
pop
inc
bound
dec
sub
mov
test
xchg
inc
insl
add
sbb
lods
iret
icebp
add
rcll
int
add
sbb
mov
mul
cmpb
pusha
pop
jmp
jae
pop
inc
insl
mov
mov
nop
dec
fcomp
sbb
outsl
loop
xchg
dec
rclb
test
stos
inc
lea
push
hlt
lods
stos
jecxz
fwait
xchg
in
or
add
outsb
mov
pop
cld
sahf
ret
imul
je
jns
inc
mov
push
cli
and
and
repnz
in
and
stos
ljmp
pcmpgtb
sbb
jge
mov
sbb
clc
xor
add
outsl
xor
or
jp
and
daa
push
int3
add
fildll
pushf
pop
inc
or
xchg
dec
popf
jnp
fnstsw
cld
flds
inc
ret
imul
stos
faddp
dec
lds
into
cmp
cs
repz
sub
xchg
mov
adc
ja
movsb
mov
cmp
dec
test
sbb
cli
mov
xchg
sti
adcb
mov
inc
mov
xchg
pushf
cmp
or
mov
in
push
rcrb
adc
test
xchg
jb
movb
je
test
dec
push
cmpl
shrl
rolb
jl
cmp
gs
jge
push
xchg
mov
or
push
repz
popa
adc
mov
pop
iret
aas
cmc
pop
sub
mov
ljmp
lock
js
daa
push
add
ret
mov
rolb
mov
dec
add
sub
sub
jno
and
adc
add
int3
incb
sahf
jmp
dec
in
pop
ror
andl
sub
test
fisubrs
jno
xchg
in
lret
push
lods
adc
pop
dec
cmp
iret
fcoml
fnstsw
add
out
mov
or
jae
cmc
scas
xchg
pop
jge
cwtl
pushf
out
subb
or
push
in
sub
mov
mov
adc
fsts
cmpsb
push
mov
push
fiadds
cmp
push
aad
mov
add
xor
or
or
sub
jbe
sub
push
mov
data16
sbb
xchg
or
daa
xchg
hlt
xchg
mov
xchg
jo
inc
add
or
adc
fcoms
lahf
popf
imul
sbb
jae
mov
xchg
shrl
arpl
and
ret
aad
xchg
enter
inc
lcall
push
ss
mov
inc
je
pusha
pop
dec
inc
cmp
xchg
lret
out
repz
mov
xchg
dec
and
jl
lods
icebp
push
sbb
mov
outsb
mov
pop
jb
nop
aaa
add
addl
fcmovnb
lcall
lock
stos
cli
pop
movsb
movsb
call
mov
andb
mov
lods
pop
push
in
les
daa
bnd
mov
lcall
mov
mov
fwait
mov
pop
and
sti
mov
nop
in
push
loopne
cmovae
popa
lcall
lret
cmpsb
movsb
insb
inc
cmpsl
dec
xchg
in
std
pop
jl
pop
or
push
pusha
lds
mov
mov
lahf
push
xchg
into
mov
or
rcrl
fldl2t
adc
push
das
add
dec
test
mov
movsl
sub
jbe
in
inc
orl
into
and
pop
lret
into
push
xchg
stos
jmp
mov
xlat
xor
ljmp
inc
cmp
shll
enter
jp
clc
pop
and
or
push
gs
nop
adc
inc
xchg
xchg
mov
or
cwtl
xchg
mov
ficompl
popa
pop
ja
mov
sub
fcomp
mov
cmp
out
xor
jae
pop
mov
cmp
lods
rorb
jb
insl
mov
push
repnz
fldcw
fs
push
mov
call
xchg
sub
jae
data16
je
push
rolb
data16
jo
test
mov
shlb
dec
jg
jl
shl
inc
xor
sbb
pop
adc
and
es
out
inc
pop
jae
out
aam
pop
sub
xor
or
pushf
pusha
pop
lret
mov
mov
lcall
sahf
ja
ljmp
pop
es
and
add
mov
pop
imul
xchg
add
out
dec
jmp
insl
into
adc
ds
sarb
fdivrs
aas
jg
sar
inc
cwtl
push
pop
dec
and
arpl
inc
in
movb
daa
or
mov
mov
dec
pop
push
pushl
mov
cmpsl
adcb
inc
inc
lods
das
push
adc
bound
notl
cmp
ds
subb
jl
jg
xchg
mov
repz
fstpl
lcall
cwtl
sbb
out
lret
adc
in
mov
mov
pushf
jmp
dec
sub
push
xor
jo
cli
inc
xchg
or
sub
jmp
jmp
sahf
stc
sbb
or
roll
lea
mov
adc
fsub
mov
xchg
dec
ret
sub
mov
jb
push
jae
fdivr
mov
xor
push
mov
cmp
jnp
mov
xor
jmp
add
loopne
out
das
push
adc
and
out
inc
jns
sbb
dec
jg
push
push
push
sub
mov
or
jmp
icebp
xlat
xor
aam
fiadds
sahf
pop
push
int
add
xchg
mulb
mov
dec
inc
pusha
repnz
in
nop
outsb
jmp
les
mov
jp
popf
mov
out
mov
mov
sub
adc
js
sbb
js
jae
mov
ja
gs
movsl
roll
fstpt
adc
in
jbe
sbb
fcompl
cld
clc
scas
add
xchg
dec
push
ret
cmp
out
hlt
xchg
xor
dec
inc
sbb
aam
rcll
jge
jge
adc
pop
adc
pop
push
nop
sub
lods
cwtl
fs
lock
test
dec
jo
insb
adc
test
pop
gs
iret
lds
xchg
adc
in
scas
adc
add
jbe
jmp
int
mov
or
outsl
addr16
sbb
icebp
and
add
or
or
lods
int3
popw
pop
jbe
adcb
mov
js
les
rolb
mov
enter
int
ficompl
popf
push
mov
out
mov
jle
or
es
cld
stc
pop
cltd
loope
jp
dec
sbb
mov
arpl
pop
cli
mov
cmp
out
and
cltd
inc
sub
movsb
iret
adc
push
adc
inc
int
or
sub
ds
mov
ja
cmp
ret
mov
sbb
push
cli
mov
pop
in
mov
into
push
sbb
xor
gs
movsl
mov
aas
fcmovnbe
repz
mov
movsl
cltd
pop
push
fbld
ja
aas
xchg
push
insw
mov
test
nop
in
mov
mov
mov
inc
xorb
mov
push
sub
sub
mov
call
sub
jnp
jb
sahf
dec
out
lea
or
add
jl
pop
leave
jecxz
pop
sbb
adc
sti
mov
gs
mov
mov
daa
cmp
cmp
lret
mov
stos
xchg
and
mov
xchg
movsb
cmc
and
dec
lods
lods
rcrb
pop
jo
sahf
add
fildll
mov
leave
ret
cmp
cmp
pop
setnp
sbb
das
lock
add
adcb
outsl
push
sub
js
dec
push
loopne
mov
xor
stc
icebp
in
stos
lods
dec
js
nop
cmpsl
xor
push
fbld
xor
loopne
outsb
jnp
jae
out
dec
mov
decl
jge
sub
je
cwtl
test
cli
sub
popf
js
jp
loope
fcomip
mov
daa
inc
call
push
test
sub
and
shlb
adc
imul
in
xchg
shr
jbe
rclb
pop
xor
imul
jae
fidivrl
xchg
movsb
cs
fsubrl
sti
and
sbb
mov
sub
inc
mulb
icebp
int
sbb
mov
xor
int
jb
or
mov
xchg
sub
test
gs
xchg
jl
leave
pop
and
aaa
test
rcl
pusha
jg
jmp
cmp
sub
pop
jp
pop
fnstcw
test
popa
pusha
xor
hlt
fcmovnb
push
mul
repnz
jl
in
fprem
mov
test
push
in
sbb
popf
inc
jnp
fs
out
jbe
sbb
inc
in
fwait
mov
mov
call
mov
adc
stc
push
mov
xchg
or
mov
mov
lret
pusha
movsb
arpl
lahf
gs
or
mov
out
push
mov
xor
mov
add
adc
or
pop
fwait
mov
xlat
cwtl
pop
jg
sbb
mov
out
sub
test
stos
mov
int
and
outsb
or
out
pop
ss
and
notb
jne
icebp
lahf
out
dec
shrb
loope
into
into
hlt
outsl
mov
mov
xchg
mov
jle
push
sahf
bound
push
mov
push
mov
add
xchg
and
out
cmp
lea
adc
xor
clc
cmpsl
push
adc
xlat
xchg
push
fldl2t
xchg
mov
mov
cmc
outsb
mov
sbb
fcoms
push
mov
sub
ljmp
push
push
and
dec
addb
dec
testb
fxch
daa
out
xor
cmpb
push
inc
ljmp
jb
sub
mov
mov
adc
repnz
ficomps
das
mov
and
ds
push
xchg
sbb
cwtl
mov
test
xor
sub
fs
push
xor
sub
xor
cmp
movsl
fdivs
xchg
push
xchg
fsubrl
ljmp
dec
pusha
out
imul
subb
lock
aad
pusha
cmpsb
push
enter
imul
loope
pop
sahf
pop
fcmovu
push
mov
lds
and
inc
fildll
sbb
add
sub
pop
mov
mov
inc
test
pop
pop
push
je
adc
jbe
add
pop
add
lock
inc
and
movsl
xchg
push
mov
jecxz
les
xchg
sub
jmp
and
outsl
les
push
scas
stos
ss
cmpsb
lods
mov
popf
sahf
pusha
xchg
insl
xor
jns
fldt
sub
adc
shr
rclb
inc
imul
adc
push
and
adc
je
std
idiv
and
mov
bound
imul
cmp
test
pop
sbb
or
out
insb
rcrb
loop
arpl
push
mov
sarl
je
xor
push
cmp
push
pop
sbb
sbb
xchg
push
std
aam
mov
mov
jmp
inc
cli
add
cmp
pushf
sub
ret
notl
add
das
or
jecxz
push
mov
movsl
pop
cmpsb
xchg
ret
mov
jne
inc
dec
and
dec
iret
pop
dec
nop
in
or
hlt
out
repz
outsb
or
cmp
jecxz
jge
repz
scas
ret
mov
movb
sub
call
sbb
rcrb
gs
jmp
jnp
adc
add
inc
mov
mull
shrb
xlat
lea
rcll
jae
adc
inc
outsb
lds
mov
arpl
les
sarl
xor
dec
cmpl
mov
stc
sub
lock
jno
loopne
jl
adc
nop
lcall
adc
sahf
fstps
add
aas
daa
mov
js
mov
push
mov
mov
pop
inc
hlt
das
jo
and
and
sbb
jg
nop
pop
in
add
cmp
out
inc
dec
push
daa
sub
lds
cmp
mov
hlt
je
mov
pop
dec
bound
leave
aaa
mov
dec
rcrb
rolb
in
pop
dec
add
les
mov
inc
scas
add
arpl
adc
inc
mov
mov
sbb
adc
inc
inc
sub
mov
mov
ja
fcom
and
push
push
pop
dec
testb
ss
fstl
aas
dec
pusha
inc
pop
lret
xchg
shlb
outsb
jp
xchg
sub
mov
pop
loop
pop
outsl
and
push
in
pop
lds
jge
in
cs
pop
cmp
add
repz
mov
inc
int3
mov
or
jae
sbb
adc
pushf
aaa
je
int
aas
adc
xchg
data16
pop
inc
out
pushf
inc
xor
jo
stos
test
insl
fistl
inc
push
sbb
loope
xchg
and
rcrl
popa
loope
ds
decl
pop
gs
add
dec
popf
lcall
leave
addl
push
scas
adc
mov
mov
lret
jne
cmp
rolb
xchg
mov
pop
clc
cmp
push
mov
or
sbb
sbb
jg
jmp
push
movsl
sub
push
push
add
xchg
inc
xchg
out
adc
fwait
dec
inc
lods
repnz
pushf
mov
push
ret
out
and
test
sbb
test
sti
sbb
fistps
sub
mov
and
test
sbb
inc
pushf
shrl
imul
adcb
and
jp
mov
jo
cmp
push
dec
mov
popf
xchg
cmp
shrb
fdivr
pushf
sbb
jl
pop
add
inc
pop
or
cld
and
jne
cmp
cld
aaa
mov
pop
or
aas
fisubs
and
and
push
mov
mov
xchg
pop
and
adc
mov
xlat
cltd
shll
outsl
ret
push
xlat
xor
mov
jbe
mov
ljmp
pusha
xor
test
outsl
add
push
add
std
sahf
mov
push
je
and
push
mov
rorl
stc
je
push
repnz
lahf
lods
adcl
sbb
out
ret
sbb
sbb
xchg
movsb
cwtl
mov
cmp
pop
xchg
shlb
pop
xor
fimull
sbb
pop
jne
xor
std
lds
rclb
dec
fcoml
insb
int
std
pushf
mov
dec
adc
imul
fnsave
cli
sub
test
jnp
mov
loopne
cmp
imul
out
popf
shlb
add
xchg
je
xor
fcomps
movsl
mov
daa
jo
test
insb
pop
out
pop
cmp
mov
xor
xchg
push
pop
cmpsl
scas
int
std
test
push
jns
inc
ret
shlb
and
mov
pop
es
xor
jne
xor
or
fldt
stc
or
adc
cmp
subb
and
sub
and
sub
add
insl
pop
sbb
fmull
insl
ret
xlat
push
push
dec
and
outsb
gs
cmp
mov
sub
add
mov
fldcw
mov
mov
push
lret
push
xchg
mov
xacquire
outsb
pop
pushl
sbb
scas
aad
pop
lds
sub
mov
outsl
mov
mov
inc
ret
xchg
int
aad
outsb
and
xor
xchg
xchg
sbb
lcallw
int
ljmp
movsl
jg
inc
xchg
pusha
out
out
mov
fistpl
xor
jne
hlt
imulb
cld
addr16
sub
cmp
xchg
cmp
out
and
xchg
jmp
jno
sub
fwait
adc
popa
out
stc
jae
shlb
add
ss
scas
scas
mov
sbb
pop
call
and
out
scas
jp
aaa
jge
cmp
mov
movsl
mulb
int
mov
iret
sbb
sub
lea
xchg
ss
mov
jae
je
adcl
imul
stos
sub
dec
pushf
ror
sbb
call
or
sbb
cld
fdivrs
movsl
jne
push
stc
xchg
pop
push
jne
mov
sub
lea
sti
xlat
push
andb
stc
lods
pop
lock
dec
pop
sub
and
cmp
ja
cld
lahf
and
loop
fdivrl
lahf
movsl
in
push
cltd
je
outsb
test
mov
int3
jge
bound
xchg
push
add
lret
mov
mov
or
inc
scas
insb
cmpsl
notl
or
dec
lds
lcall
bound
fdivr
in
push
arpl
ss
je
push
jl
xchg
and
movsb
lret
int
in
and
es
lds
mov
pop
mov
push
cmpsl
mov
jns
inc
jo
cmpsl
inc
dec
cs
setns
fsubr
ss
popf
cwtl
push
jge
dec
sbb
sbb
jns
add
jl
mov
imul
mulb
nop
movsb
mov
mov
push
push
cmpsl
jg
in
xchg
enter
inc
pop
push
mov
jl
mov
mov
push
cli
and
jmp
repz
inc
pop
mov
mov
outsl
xor
push
icebp
add
test
subl
pop
aam
repz
dec
ds
inc
mov
jo
js
lret
rorl
pushf
and
into
cmp
scas
mov
xorl
inc
lahf
xchg
mov
push
push
mov
adcl
imul
stos
rclb
rorb
jl
in
jno
test
int3
loope
or
ss
cwtl
fsts
sahf
enter
lods
cmp
and
jns
lods
imul
add
shrl
aad
sub
sbb
xchg
mov
cli
cmp
push
fdivrl
leave
stc
xchg
mov
xor
xchg
cmp
das
mov
inc
das
mov
sub
outsl
add
bound
notb
cmp
popa
cltd
adc
cs
add
push
cmp
lock
or
mov
push
or
inc
xor
jge
sti
sbb
adc
and
pusha
pop
cltd
mov
test
push
jns
mov
clc
mov
sub
leave
imul
mov
mov
mov
and
jmp
and
sbb
fs
jae
jnp
and
sub
cltd
pop
sub
fsubs
fisubrl
adc
pop
jl
and
incl
xchg
mov
insb
mov
out
adc
fstpl
cmpsb
sbb
lret
pop
push
shr
js
push
fs
push
sti
pop
fists
jp
sub
inc
mov
rcll
xor
mov
mov
mov
out
xor
in
jb
std
mov
mov
jecxz
adc
loope
imul
subl
push
mov
aaa
dec
push
mov
xchg
int3
stc
aad
lcall
sub
inc
in
xor
lcall
mov
push
lea
fucom
shrl
xor
movsb
sti
in
arpl
mov
inc
dec
dec
cwtl
outsb
mov
enter
push
adc
xchg
xchg
decb
push
pop
and
mov
mov
cmpsb
imul
es
mov
les
loop
mul
icebp
lret
sub
pop
mov
lods
int3
sub
fimuls
dec
inc
mov
lret
adc
jno
mov
jmp
pop
xchg
movsl
pop
jo
cmp
orb
in
xor
lcall
jns
add
loop
cmpl
test
add
add
dec
in
jae
iret
lahf
test
mov
nop
orl
mov
enter
mov
or
xchg
mov
punpckldq
push
or
lret
push
out
stos
pop
dec
cltd
rorb
inc
shr
cmp
cld
in
push
daa
lret
fs
pop
roll
das
fimull
adc
jp
jo
jg
pop
dec
pop
inc
leave
jg
out
dec
push
cltd
insl
popf
pop
mov
add
mov
push
mov
insb
mov
jp
mov
xor
movsb
dec
insb
adc
fisubrl
xor
andb
or
push
out
test
outsb
outsb
scas
idivl
sbb
xchg
xchg
repz
outsl
mov
ljmp
orb
push
hlt
inc
xchg
rolb
cmp
mov
pop
movsl
leave
fwait
sub
aam
call
cmp
jp
outsb
cld
push
inc
aas
jecxz
pop
sub
pop
aad
pop
adc
sub
xchg
push
test
rcl
mov
mov
stos
or
mov
or
movsl
imul
stc
mov
pop
xchg
xor
movsl
mov
mov
hlt
xor
inc
cmc
out
xchg
jae
push
les
shll
mov
cmc
lret
popa
rcrb
push
and
mov
dec
testb
and
sub
and
push
pop
je
adc
cli
cmpsb
xchg
add
sbb
bound
sbb
pop
sbb
out
insb
xor
outsb
inc
daa
xor
xlat
xor
roll
dec
sub
bound
cmp
sti
sbb
js
inc
loopne
loopne
adc
dec
pop
mov
cmp
adc
jp
sub
jae
push
sbb
cmpb
push
or
and
loop
push
test
mov
std
xor
addr16
xchg
jmp
inc
fisttpl
mov
icebp
stos
sub
or
push
lcall
fcomi
cmp
pop
mov
adc
adc
leave
aas
push
leave
mov
lcall
xorl
addr16
sub
loop
aam
mov
pop
push
cmpsb
mov
dec
mov
data16
mov
aaa
pop
sbb
in
mov
pop
jne
add
jecxz
push
push
out
test
mov
push
lret
int
cltd
fsubrl
in
pop
imul
mov
sbb
clc
outsb
js
rorl
loop
filds
nop
dec
xchg
stos
mov
inc
jae
jb
pop
cmp
mov
movsb
and
mov
mov
scas
scas
dec
pop
mov
dec
in
and
sub
ss
mov
jge
xchg
scas
xchg
loope
mov
shr
mov
push
or
roll
xchg
mov
mul
ljmp
or
add
and
icebp
add
inc
das
sahf
xchg
push
outsl
imull
fwait
iret
mov
sub
pop
mov
test
sub
dec
in
js
push
mov
lock
hlt
cld
fcomps
lret
fs
mov
je
xchg
inc
fcompl
arpl
dec
lock
mov
sbb
aam
iret
jle
lahf
outsl
jno
xor
ficoms
iret
stos
mov
adc
pusha
out
xor
dec
lods
push
sub
xor
inc
add
xchg
in
mov
rorl
jl
xor
icebp
sub
pop
test
out
jae
inc
xor
xchg
mov
pusha
imul
cld
cmpsl
xor
jne
jp
dec
inc
xor
loop
cwtl
jp
xorb
mov
inc
cmc
pushl
jg
push
xor
jne
sub
es
pop
push
stc
mov
xor
rcrl
sub
xchg
jl
jnp
push
leave
es
or
in
cmp
arpl
fdivrp
xor
pop
or
jp
pop
mov
push
icebp
je
mov
dec
call
lret
stos
pop
test
lods
mov
call
test
push
gs
inc
push
sub
shll
inc
xchg
xor
or
or
ds
and
jb
pusha
gs
sbb
es
mov
out
inc
or
stos
hlt
ret
pop
cmpsb
dec
or
es
ret
lods
cmp
jp
jecxz
bt
adc
repz
popf
dec
xchg
mov
and
out
and
jae
mov
mov
loopne
mov
adc
out
movsb
dec
mov
or
ja
push
mov
lock
xor
inc
add
lcall
push
clc
in
jmp
push
dec
mov
mov
jb
jae
aaa
dec
mov
dec
iret
jle
dec
ss
push
dec
imul
loopne
cmpb
jb
jne
and
mov
cwtl
cmpsl
push
mov
pop
das
icebp
and
sbb
dec
mov
mov
pop
inc
call
daa
mov
cwtl
mov
out
fs
dec
test
fisttpl
lods
popl
push
pop
outsb
clc
jecxz
adc
in
lods
movsb
adc
bound
stos
adc
fprem1
rcr
jge
shll
fwait
adc
cmp
stc
mov
arpl
add
cwtl
pop
outsb
cwtl
loop
or
cmc
cli
and
pop
test
add
jae
in
xchg
jp
push
inc
gs
mov
xor
cmp
cmp
xchg
pop
sysret
cli
dec
jl
fcomps
sub
inc
jne
inc
mov
in
mov
mov
aad
xlat
add
inc
cmpsl
aas
xchg
imul
stos
sarl
not
subl
mov
out
shrl
or
jns
dec
or
mov
xlat
inc
mov
call
mov
les
push
cwtl
sub
dec
mov
out
sbb
frstor
pop
daa
xor
push
sub
test
xor
pop
pop
push
jne
xor
hlt
lahf
jns
mov
inc
mov
mov
lret
jbe
daa
addr16
lret
repz
pop
cld
movsl
jno
inc
aas
cmpsl
sbbb
inc
mov
out
push
mov
xchg
lods
sub
lcall
outsl
xchg
fcoml
adc
cmpsb
and
lods
sbb
int
movsl
out
mov
xchg
pop
jmp
and
loop
imulb
or
inc
inc
jmp
aas
add
xor
pop
sarb
ret
add
fidivs
loope
sub
push
mov
or
jecxz
mov
test
jge
mov
es
and
sub
rolb
sbb
mov
sub
xchg
pop
movsb
add
mov
dec
inc
or
dec
or
or
cmpsb
ret
lcall
mov
shll
or
jbe
add
cmp
rorl
adc
jp
and
pop
notb
mov
popf
addl
push
arpl
mov
or
push
adc
rol
mov
jnp
cmpsb
mov
imul
or
lret
pushf
mov
mov
sbb
mov
cmpsl
pop
fnstsw
xlat
or
sahf
add
xor
jecxz
push
add
jmp
out
cld
nop
ljmp
sbb
lds
inc
xchg
ljmp
scas
stos
push
stos
push
gs
dec
and
mov
sbb
push
xchg
das
sbbb
aam
mov
pop
clc
pushf
test
xchg
aaa
cmp
xchg
xor
andl
pop
mov
cmp
jge
mov
sbb
push
adc
add
aaa
filds
dec
mov
ss
jp
cltd
shll
scas
fs
sub
fisttpll
jg
inc
lods
rclb
cwtl
push
shll
scas
pop
sbb
pop
mov
es
xor
aaa
js
daa
add
sbb
testb
mov
pop
ret
arpl
lea
jmp
subb
gs
cmpsb
cmp
mov
mov
out
mov
sbb
lret
add
pop
repnz
fidivrs
pop
int
repnz
lret
mov
push
cmp
xchg
push
les
sbb
push
add
in
js
das
xor
mov
add
or
lock
and
daa
adc
mov
stc
mov
test
inc
lcall
push
mov
pop
or
sti
pop
pusha
jb
outsl
mov
xchg
sub
sbb
icebp
mov
dec
std
dec
lea
aam
out
fisubs
push
dec
and
jnp
mov
xchg
into
and
hlt
faddl
in
push
js
out
or
jo,pt
fcmovu
and
shr
cs
dec
in
sub
loop
pop
out
xor
int3
pop
lcall
pop
test
mov
scas
jnp
rcrl
gs
mov
lock
inc
push
fwait
lods
std
pop
fdivrl
fbld
sbbb
or
sub
xchg
cmp
adc
xchg
aad
out
mov
sub
lods
out
lods
divl
outsl
xchg
pusha
ror
jno
cmp
aaa
cwtl
ja
xchg
mov
lds
push
mov
pop
mov
adc
mov
mov
loop
push
inc
stos
pop
inc
fistps
jne
jmp
imul
es
add
push
repnz
fstpt
out
rcll
jo
push
jp
inc
call
push
popf
and
into
push
cmp
xchg
xchg
inc
push
popa
fsubp
sub
sub
mov
or
imul
lret
adc
pop
sti
mov
sbb
js
inc
pop
inc
mov
mov
or
mov
mov
push
sub
sub
mov
mov
mov
ficoms
das
push
shll
mov
mov
push
jp
enter
jp
push
lock
jmp
mov
movsl
shrb
xchg
mov
je
in
ljmp
jb
lods
mov
mov
ret
sub
rol
in
lcall
test
xadd
fsts
or
imul
and
or
call
push
sub
iret
mov
lods
cmp
or
dec
lods
loope
insl
cmp
cld
loop
fcoms
pop
push
repnz
shlb
inc
mov
push
mov
outsl
mov
inc
movsb
xor
inc
jo
push
sub
les
jle
adc
lods
fsubrl
dec
mov
and
pop
out
mov
push
and
sub
aas
pushf
pop
cmpsb
aaa
inc
dec
push
rcrl
mov
scas
lcall
jo
mov
push
out
addl
cwtl
xor
adc
int3
push
cmp
jns
std
imul
mov
loope
icebp
cmp
sub
mov
scas
dec
dec
fsubp
lea
pop
mov
imul
bound
lcall
aaa
lret
cwtl
test
cmpsl
cmp
cs
testb
sbb
arpl
xchg
fsubrs
ljmp
test
shll
pop
push
sbb
cmp
std
cld
inc
mulb
movsb
lahf
xor
pusha
xor
data16
xlat
in
pop
dec
mov
xlat
insb
or
out
xchg
int3
jno
in
pop
push
inc
or
xchg
mov
insb
lock
push
popf
pop
sbb
rclb
test
or
ss
inc
and
adc
aam
ret
mov
and
jge
pop
out
dec
in
sbb
jae
leave
arpl
leave
push
out
inc
dec
arpl
pop
insl
mov
int
in
push
mov
cmp
pop
cmp
mov
and
push
mov
lcall
mov
clc
cli
or
paddq
outsb
rcrl
shll
imul
push
leave
jnp
lea
xacquire
fsubs
scas
lcall
add
mov
out
mull
frndint
rol
cmp
push
fcoml
rdtsc
xor
das
repz
add
mov
jno
pop
and
lods
test
insl
mov
xchg
pop
jg
loopne
jns
cld
mov
out
mov
adc
das
loope
js
cmpsl
xor
xchg
mov
push
add
add
xor
std
push
and
loopne
in
pop
push
in
jo
mov
xor
jl
addr16
je
jmp
mov
rcrl
jns
sub
mov
xchg
stc
mov
out
in
int
pop
repnz
jno
cltd
dec
or
fld
inc
int3
in
rcl
and
mov
mov
fwait
out
arpl
mov
sub
cmp
xchg
mov
js
jns
insb
fistpl
mov
mov
stc
add
pop
arpl
dec
out
insb
into
popa
lods
push
add
sub
mov
add
jle
imul
js
dec
pop
sbb
fnstcw
push
dec
lock
test
call
inc
test
inc
push
movsb
out
sar
addr16
xor
sub
push
aad
push
pop
inc
shlb
icebp
jg
pushf
sub
lods
sub
mull
pop
outsb
ss
and
cltd
ds
adc
jl
sbb
icebp
inc
in
inc
add
pusha
mov
xlat
or
push
repz
mov
mov
jecxz
jne
add
jae
xor
out
pop
jecxz
in
lea
shlb
pop
jl
sub
or
test
mov
adc
sarl
mov
icebp
lock
mov
data16
outsb
or
aam
into
iret
rcrb
sub
ret
sbb
cmovp
push
lahf
or
add
cld
dec
aaa
cmp
test
inc
aas
insb
push
pop
inc
pushf
mov
sub
or
sbb
bound
data16
stos
pop
xor
xor
or
jp
pusha
mov
je
sti
lcall
fcomp
mov
sti
nop
fld
jmp
inc
andb
cmp
gs
scas
mov
mov
je
jmp
jmp
pop
mov
lret
pop
mov
adc
or
lods
or
mov
aad
rorl
push
pop
loop
xor
stos
add
mov
mov
int3
repz
xor
enter
mov
in
mov
daa
cmp
pop
es
or
rolb
jmp
pop
rcl
cmp
adc
lods
lds
inc
add
jp
mov
push
push
in
mov
adc
push
push
jp
cwtl
scas
loop
roll
dec
push
stos
ja
push
mov
shl
jmp
out
inc
jg
lret
or
and
sub
popa
jbe
lods
adc
sub
mov
push
adc
stc
pushf
out
ss
cmp
jg
and
add
mov
sbb
mov
xchg
imul
jnp
das
testl
hlt
xchg
sub
cmp
pushf
cmc
das
loop
mov
lds
cs
add
sub
mov
ja
aam
mov
jb
loop
cmp
xor
in
enter
push
rcl
inc
cli
icebp
mov
inc
fimuls
mov
push
imul
mov
cmc
inc
mov
fwait
cwtl
push
call
sti
and
ds
cmpsb
or
jmp
mov
gs
repz
and
les
fcmovnb
cmpsb
push
mov
cwtl
cmp
push
dec
inc
out
outsl
adc
mov
pushf
gs
imul
dec
loope
xchg
sbb
or
and
sahf
lock
sbb
je
repnz
lcall
aam
pop
mov
sub
dec
add
std
repnz
inc
mov
data16
aas
insb
mov
imul
push
fmulp
mov
lret
mov
mov
add
ljmp
jbe
push
and
push
push
mov
lcall
pop
scas
sbb
add
mov
sbb
pop
es
mov
push
inc
jo
ss
daa
pushf
jno
ror
xor
imul
fstpt
in
sub
mov
std
aaa
jns
xchg
add
pop
fs
jle
in
mov
in
push
fdivl
sbb
add
add
xchg
dec
adc
push
cmp
scas
dec
cwtl
mov
imull
jge
xchg
cld
enter
std
or
leave
jo
xor
shlb
jmp
mov
addr16
push
repnz
scas
mov
cwtl
addr16
repz
cmp
or
cmpsl
les
in
ret
push
or
in
lock
loope
sbb
push
mov
fcomp
jbe
loop
adc
out
dec
outsb
mov
lahf
xchg
xlat
xchg
daa
daa
outsb
loop
lds
pusha
je
dec
test
ret
adc
jecxz
pop
add
cltd
lods
fwait
int3
xchg
sbb
xor
xchg
loope
and
push
cmp
adc
out
vunpcklps
xor
je
mov
fs
shr
sub
les
jne
fnstenv
adc
stos
jne
pushf
outsl
mov
sbb
inc
subb
sbb
aam
adc
or
xchg
adc
cmpsl
mov
loop
push
lock
sbbl
sub
cltd
xlat
clc
pop
ret
mov
retw
jecxz
push
mov
xchg
sub
lock
jae
testb
ljmp
aas
ja
sbb
por
shll
ret
pusha
push
jns
sbb
sub
mov
test
mov
aaa
pop
shlw
cmp
pavgw
call
dec
sbb
lcall
js
aad
or
cmpsb
lea
mov
inc
daa
xchg
rcrb
cmp
pop
push
das
pop
jae
cmp
sbb
fisttps
jecxz
mov
jl
mov
lret
add
push
lds
xor
mov
and
rcrb
mov
mov
push
popa
push
pop
xor
fsub
push
out
scas
ds
sub
aas
sbb
mov
adc
mov
or
out
cmpsl
cwtl
adc
push
jg
enter
add
or
push
cltd
lret
ja
inc
pusha
mov
push
test
stos
sub
add
inc
insl
sub
push
pop
add
in
and
loopne
scas
xlat
push
aas
out
xchg
push
clc
mov
sub
shl
outsb
pop
add
or
insl
push
lret
adc
test
xchg
inc
addl
movsl
and
mov
xor
clc
jge
or
incb
inc
cmpsb
mov
repnz
stos
pop
push
sbb
and
or
arpl
mov
test
pop
adc
sbb
ret
pop
add
adc
xchg
cmpsl
movsb
iret
daa
jp
imul
add
xor
xor
cli
mov
inc
icebp
mov
inc
xchg
dec
xchg
push
lods
mov
les
adc
pop
loope
sarb
andl
insb
stc
bnd
ljmp
fcmovbe
dec
in
shll
dec
jl
dec
outsb
sub
xchg
out
lds
add
lock
test
mov
xor
int3
xchg
push
shll
imul
push
das
and
fcmovbe
test
jne
push
scas
icebp
imul
dec
rcll
pop
or
movsb
stos
notb
fists
jge
in
add
push
movsb
cmp
gs
rorb
outsl
dec
lret
sbb
push
xchg
inc
mov
sub
dec
inc
pop
mov
pusha
das
icebp
dec
jle
jno
xor
mov
jo
xchg
daa
cltd
push
shlb
mov
sub
fcoml
jnp
andl
leave
xchg
dec
or
into
mov
in
add
movsl
inc
jno
into
addr16
std
cmc
test
outsl
arpl
std
test
jecxz
mov
mov
mov
nop
fildll
fwait
sub
addr16
addr16
and
sub
push
xor
xor
pop
sbb
hlt
roll
xor
push
fstl
rcrb
jae
sahf
jl
inc
fst
pop
lahf
fiadds
xor
lret
cmc
iret
ror
inc
ljmp
subb
add
outsb
fmull
xor
call
les
cmp
mov
or
xchg
pushf
roll
adc
iret
add
cmpps
add
mov
popf
rorl
inc
int3
xchg
dec
scas
rcr
lret
cmp
jg
pop
sub
es
into
ja
cmpb
xchg
sub
mov
js
pop
xchg
inc
mov
pop
or
andb
cli
sub
sbb
pop
mov
aam
sti
push
in
hlt
jno
pop
adc
dec
cld
sub
or
cmp
sar
loope
test
adc
ss
mov
add
adc
mov
push
repnz
inc
push
dec
rorb
adc
insl
popf
ret
pop
add
mov
test
aas
jl
aad
add
fcomps
dec
add
push
hlt
mov
aam
pop
fstps
sbb
mov
sar
lods
dec
add
int
shlb
sub
js
jo
dec
jecxz
in
bound
dec
cltd
cmp
stos
stos
dec
mov
dec
mov
jnp
stos
mov
popa
jmp
xchg
leave
mov
jecxz
jno
jp
loop
cmp
cs
and
outsb
pop
ret
pop
mov
dec
fs
movsl
push
xchg
stc
mov
ret
dec
fisttps
fbstp
inc
es
out
dec
mov
mov
dec
push
bound
inc
call
pusha
xchg
sbb
arpl
enter
jp
pusha
fdivrp
and
add
and
data16
fsubr
pusha
movsl
mov
add
cmp
stc
pop
adc
jp
fisubrs
adc
push
sbb
mov
jge
adc
add
das
fmull
pop
lock
xor
gs
push
fwait
movsb
inc
pop
xchg
or
fstp
outsb
jo
cs
jl
mov
jae
popf
in
cmpl
xchg
scas
dec
pop
es
sub
fstl
and
in
icebp
mov
sti
std
sbb
imulb
mov
mov
outsl
mov
imul
inc
cld
push
lods
lds
adc
cmp
sbb
js
orb
xor
lea
testb
sarl
mov
shrl
pop
add
mov
aad
hlt
push
dec
mov
ret
arpl
xor
ret
mov
insb
sub
sub
ja
push
daa
push
and
push
stc
int3
bound
sub
in
in
push
push
int3
inc
ss
add
mov
call
rorb
cmp
loop
push
repz
cmp
or
jno
xor
rcrb
inc
jne
sub
and
adc
mov
xor
sbb
mov
fists
outsl
add
loop
cmp
into
xor
ljmp
fmull
mov
xchg
push
hlt
add
sbb
cmp
pop
adc
add
loopne
out
dec
js
mov
push
adc
daa
mov
andl
mov
arpl
pop
pusha
shr
mov
sub
add
shll
inc
mov
cs
dec
mov
lret
popl
cmpsl
pusha
xchg
and
inc
fs
cs
hlt
cwtl
xchg
or
mov
nop
jl
pop
cmpsl
cmp
sub
xchg
clc
sub
jle
aam
inc
or
addb
sub
push
pop
fisubrl
in
leave
cli
cwtl
stos
push
jae
dec
out
int3
mov
and
xor
jne
sbb
push
xor
pop
and
cmpsb
mov
popa
push
pop
rol
dec
jo
loopne
pop
dec
stos
int3
outsl
sbb
imul
lds
push
jb
mov
adc
dec
xchg
inc
test
imulb
lock
jmp
mov
cmp
imul
outsl
fisttpl
addb
or
movl
xchg
in
mov
sahf
mov
rclb
pusha
call
call
inc
adc
cs
bound
xor
lcall
pop
in
lret
pushf
mov
fcoms
dec
inc
scas
and
mov
mov
ror
jl
jg
xchg
adcl
dec
xor
loopne
repnz
outsb
inc
cwtl
jno
add
mov
xlat
test
jae
xchg
xchg
leave
hlt
xlat
mov
jl
out
mov
mov
mov
aas
in
xchg
push
ds
xor
sbb
jmp
or
sti
cmpsb
sub
xchg
fs
pop
shlb
mov
cmpsb
cmpsb
movsl
in
lea
andl
inc
xor
ret
add
in
push
cmpsl
orb
loope
mov
inc
mov
dec
push
and
or
adc
sarb
shr
enter
xchg
sbb
sub
rcr
mov
ret
daa
mov
lods
adc
outsb
pushf
ds
pop
int3
mov
lods
sbb
dec
je
xor
add
rolb
add
sub
pusha
mov
repz
pushf
add
cmpsb
sub
push
and
cwtl
xor
les
xchg
lret
leave
lea
es
loopne
das
nop
cwtl
ret
ficompl
les
les
add
inc
xchg
addl
cmc
cmpb
mov
nop
xor
fcompl
dec
int
sbb
pop
sti
push
ds
rclb
and
aaa
dec
jbe
and
inc
inc
mov
addr16
fs
test
xor
xor
and
jmp
daa
mov
es
cmp
jl
loopne
xchg
outsb
mov
add
pushf
cmpsl
push
daa
icebp
mov
ret
mov
aam
mov
mov
out
sub
cmp
jmp
fldcw
fcoml
and
ret
in
in
or
inc
fs
xchg
ljmp
sub
insb
iret
mov
jno
sub
push
push
shll
mov
pop
xchg
lock
xchg
movsb
out
pusha
in
push
cmp
mov
push
cmpsl
jb
aam
in
mov
les
scas
inc
enter
bound
aam
pop
mov
cltd
xor
mov
add
push
cmp
jae
jmp
jle
movsb
push
cli
clc
jnp
inc
sbb
mov
xor
push
js
ds
sbb
sar
stos
mov
clc
mov
dec
inc
xor
int
sbb
pushf
push
dec
imul
mov
pop
or
mov
arpl
adc
mov
push
lock
stc
js
repz
repz
push
incb
in
cli
adc
and
cmp
out
xor
ret
inc
jmp
cmpsl
and
les
fimull
lock
xor
test
enter
cmp
daa
pop
test
rcr
mov
rcll
das
cmp
mov
insl
aas
adc
push
mov
inc
lahf
lea
cmp
scas
jle
push
js
jle
incb
shll
les
frstor
loop
mov
rol
fwait
xor
adc
xor
adc
inc
sbb
add
js
push
adc
dec
xlat
das
pop
pop
xlat
mov
lret
mov
sub
jg
stos
incb
push
jecxz
mov
sub
sub
push
jle
push
xor
pop
jno
movsb
mov
insl
mov
les
movsb
sub
in
in
sbb
adc
mov
hlt
in
xchg
or
aad
push
fistpll
cmp
or
inc
mov
inc
cmp
fs
jae
fs
cs
push
nopl
mov
or
and
clc
std
es
shrb
mov
add
in
icebp
or
push
xchg
jb
lods
dec
sbb
xorb
and
sbb
in
imull
jg
sub
popf
pop
inc
mov
shll
xchg
push
ficompl
inc
push
inc
punpcklwd
ret
add
pop
pushf
and
and
int
cmc
notb
and
sbb
rclb
or
in
shll
gs
jne
sub
jle
mov
and
adc
ss
ffreep
xor
repz
cmpl
lret
sub
mov
sbb
nop
lock
mov
xchg
jns
enter
rolb
xor
sbb
pop
es
sbb
int3
lret
dec
fisubrs
std
push
lcall
push
jnp
fimuls
pusha
pop
mov
mov
rclb
xchg
jg
xor
outsl
mov
pusha
stos
adc
cmpsl
push
pop
adc
push
push
dec
and
inc
xor
mov
inc
mov
jnp
xor
sub
insl
and
jg
jge
repnz
mov
push
or
je
int3
and
fsubr
cli
push
mov
pop
sub
cmp
hlt
decl
stos
push
fchs
shll
xchg
mov
jnp
ficoml
inc
and
mov
outsl
jns
mov
jae
mov
mov
xlat
xchg
jo
pop
mov
pusha
xchg
cmpsl
pop
das
xlat
test
int
inc
mov
jmp
mov
sub
jb
mov
int
xchg
sbbl
ror
cmp
ret
scas
mov
fcoml
add
mov
pop
sbb
fisttps
das
dec
cmp
mov
loopne
int
rorl
push
pop
jne
dec
repz
in
push
pop
js
out
lods
test
test
add
stos
inc
nop
cmp
popa
inc
mov
loope
inc
movsb
inc
push
int
nop
loope
dec
out
movzbl
out
sbb
out
cltd
and
nop
aad
xorb
pusha
jno
sti
sub
xor
pop
stc
cmp
adc
push
pop
and
mov
stos
mov
sub
cs
sbb
and
cmp
loope
jecxz
lahf
add
faddl
gs
out
rorb
ss
loopne
lods
mov
xor
stos
push
mov
aad
mov
flds
mov
sti
iret
inc
mov
mov
hlt
sub
jno
mov
popf
cmp
xor
add
cltd
ljmp
add
addl
cld
xchg
ret
bound
mov
str
sub
push
movb
add
inc
add
sub
int3
sbb
pop
pushf
addb
int3
sub
xor
pushf
enter
jp
clc
jl
int3
add
pusha
insb
imul
fxch
or
jbe
or
gs
sbb
mov
jle
ret
adc
jb
add
add
xor
js
push
stos
faddl
je
or
adc
jbe
lods
cmp
lods
pop
loope
add
mov
mov
dec
insb
push
inc
stos
jbe
xor
mov
lods
sub
adc
in
gs
lcall
mov
xlat
jo
cmp
push
or
sub
call
mov
pushfw
sbb
push
loope
mov
mov
lret
inc
pop
cmc
sbb
cld
sbb
jl
mov
test
dec
popf
arpl
sbb
and
cwtl
mov
jge
and
and
sbb
mov
sbb
es
adc
xchg
imul
or
insb
xchg
dec
aam
scas
std
testl
aam
sbb
or
pop
pushf
and
mov
aad
jecxz
fwait
and
ret
shlb
pop
add
repnz
test
jno
movl
mov
cmpl
decb
sbb
jle
jg
mov
movsb
inc
lock
and
jne
nop
xor
xchg
fstpl
adc
add
or
mov
cmpsl
repz
pusha
testb
cmp
ret
rol
cmpsl
jnp
fs
lahf
syscall
mov
inc
pop
mov
rol
sbb
xor
lods
ds
xor
push
out
aaa
test
daa
jmp
movsl
sub
pop
stos
in
adc
pop
bnd
aam
pop
movsl
adc
sahf
sub
ljmp
and
sarl
mov
jno
xor
add
ljmp
cli
cmp
or
inc
out
fcoms
mov
test
subl
push
inc
test
jmp
les
push
dec
jne
sub
pop
cmp
leave
es
out
and
je
jbe
int
xchg
add
xchg
dec
or
mov
iret
push
push
sahf
push
jmp
inc
xchg
xchg
jae
rol
out
fsub
rorl
or
adc
shlb
leave
cld
lock
jmp
addb
sti
in
icebp
pop
mov
std
pop
mov
inc
or
int
aam
adcb
outsb
pop
push
cmpsl
ret
data16
xor
fadds
fldl
mov
add
inc
or
mov
test
testl
or
xchg
and
shll
out
mov
lret
and
jne
test
sahf
imul
std
pop
xor
pushf
push
les
movsb
jo
or
cmpsb
cmpsb
jecxz
mov
push
pop
enter
mov
fldenv
data16
mov
cmp
jmp
dec
int3
lods
inc
or
aas
stos
adcb
push
sub
daa
add
xchg
pop
insl
xchg
ret
enter
lods
jle
mov
or
push
mov
ja
inc
gs
xor
push
xor
data16
cli
in
xchg
out
mov
lret
ret
out
out
imul
popf
ret
cmpsl
enter
popf
cmp
sarl
mov
push
dec
dec
or
dec
dec
pop
add
arpl
lret
add
mov
and
add
sbb
jge
test
xor
and
adc
xchg
aam
out
std
mov
inc
loop
out
in
add
or
jmp
dec
push
cmpsl
mov
pop
sbb
dec
xlat
aas
lds
test
adc
sub
ret
and
icebp
xchg
loope
xor
cld
push
pminsw
lret
fidivrl
lds
jle
enter
pop
es
jg
pop
leave
pop
mov
jmp
repz
mov
pop
mov
mov
cmpb
xor
iret
pusha
dec
jne
out
push
sub
dec
cmp
notb
cmpsl
outsb
fdivrs
cld
and
pusha
rolb
push
and
lret
incl
jl
fwait
add
in
fstpt
or
lret
dec
xor
repz
les
sahf
cmp
inc
mov
xor
sahf
xchg
mov
outsl
xchg
jl
int
int
ja
jb
jns
mov
movsb
pop
std
push
aaa
jne
outsb
inc
mov
xor
enter
int3
rcrl
test
bound
lds
cvtpi2ps
and
cmpsl
fists
pop
rcr
mov
icebp
loopne
aad
int3
push
stc
mov
pop
outsb
insl
pop
xor
je
sub
xchg
dec
xchg
pop
daa
dec
cmp
inc
mov
mov
add
mov
aad
outsb
imulb
push
repz
dec
dec
jge
enter
cmpsl
fnstenv
cmpsb
add
mov
outsl
call
adc
les
pop
je
sarb
fsub
nop
jg
ficomps
fcomps
dec
aas
xor
in
test
imul
jp
call
sahf
cmovl
xor
test
mov
mov
int3
push
es
add
lock
and
xchg
in
enter
sbb
jg
inc
cmp
into
dec
std
insl
and
xchg
popf
xor
adc
xchg
add
pop
inc
movsl
or
inc
mov
into
add
scas
fildll
fmull
test
push
push
scas
mov
push
and
jg
push
out
sbb
in
mov
push
or
xchg
cli
mulb
jg
stc
inc
test
xlat
test
push
leave
mov
adc
mov
sub
jp
imul
push
cmp
fstpt
add
sub
and
xchg
mov
jns
pusha
push
inc
les
shrl
les
jno
cmp
ret
jno
add
imulb
xchg
adc
or
sbbb
sub
sbb
cltd
ret
pop
add
push
js
addl
fwait
sub
stos
cltd
and
inc
testb
call
push
aas
xchg
aad
sbb
cmp
inc
cmpsl
aam
sub
xor
outsl
shll
in
outsb
into
xor
ret
mov
mov
sbb
ret
xor
repz
mov
arpl
ljmp
and
movsl
testl
icebp
or
cmp
hlt
pusha
divb
bound
ret
push
call
lds
cltd
shlb
pushf
data16
cmp
call
mov
in
jp
dec
inc
arpl
dec
push
movsl
xchg
jg
test
and
adc
sbb
std
dec
xor
popa
stc
jle
add
loope
mov
out
mov
sti
mov
sbb
out
fstl
cld
add
xor
int3
inc
insl
and
js
testl
cmp
es
mov
int3
xor
sti
inc
clc
push
cmp
xchg
jecxz
std
pop
ss
ret
int3
sub
addb
jo
insl
movsb
lods
das
or
fdivrp
pushf
inc
jl
dec
aad
xor
jmp
adc
jns
icebp
ds
push
add
dec
sbb
data16
test
out
dec
or
movsl
and
mov
into
cmp
mov
fistps
jne
jae
mov
mov
lcall
jmp
data16
aad
repnz
lret
sbb
dec
ja
sbb
jae
xor
test
out
rcll
xor
ficoml
mov
push
aam
add
mov
mov
add
adc
push
ljmp
addb
sbb
je
pusha
into
xchg
mov
add
loopne
jno
and
and
fsts
push
popa
push
sub
es
xor
adc
popa
ret
ret
push
mov
outsl
or
jg
adc
insb
clc
gs
mov
xchg
rcl
repz
pop
sbb
lcall
clc
cmpsb
add
fmul
jg
mov
push
outsb
shll
test
sbb
sub
divb
xchg
pop
les
adc
inc
sti
sbb
jg
loop
mov
fadd
xor
pushf
xchg
or
fiaddl
push
push
lret
mov
addr16
mov
jge
pop
cmp
sbb
push
iret
add
mov
fadds
test
fnstenv
pushf
and
fucomip
cmp
out
out
jge
addr16
mov
and
push
mov
shl
iret
dec
iret
cmc
movsl
in
xlat
jl
sti
mov
push
push
sbb
and
pop
ss
lock
rorl
adc
or
mov
xchg
outsl
aam
sbb
or
js
lock
inc
sbb
jb
aam
jmp
pop
decb
cmp
and
dec
pop
popa
mov
push
pop
in
ja
test
mov
fdiv
inc
and
xchg
shr
add
je
mov
inc
pop
xchg
inc
lods
mov
push
jle
mov
hlt
sub
fsubr
cmc
fwait
fwait
mov
xorl
pusha
jae
popa
sub
mov
and
imul
movsb
adc
out
mov
xchg
jae
jno
mov
jbe
mov
pop
inc
pop
xchg
add
roll
lock
xlat
out
lock
or
movl
push
dec
ja
xchg
fmull
xor
cli
lds
testl
push
jg
sbb
inc
mov
mov
pop
out
dec
inc
or
loopne
pop
mov
pop
push
jmp
lea
mov
das
cltd
insl
lcall
push
adc
cmpl
rcrb
and
and
rol
imul
pop
sbb
pop
jp
sub
push
or
in
es
pop
and
push
mull
fiadds
xchg
jno
inc
test
mov
fdivl
or
inc
aaa
stos
out
adc
je
jo
mov
mov
cli
stc
mov
pop
test
insb
popa
pop
sbb
sbb
or
push
sub
mov
shl
cld
adcl
repz
sbb
xchg
xor
mov
mov
gs
or
xor
cld
push
sub
bound
loope
jge
sbb
insb
incb
mov
sub
loop
test
lcall
stc
dec
out
out
mov
fldl
sub
push
add
xor
push
sti
cmp
shl
pop
sub
push
jecxz
ja
inc
jl
cmpsl
stc
movl
xchg
adc
cmp
shl
adc
sbb
popf
or
loop
adc
iret
cmc
or
pop
mov
inc
loopne
mov
sbbb
cwtl
popa
pop
jo
repz
int3
pushf
mov
jnp
shl
lock
cld
and
sbb
fwait
adc
jg
repz
mov
jl
out
arpl
add
stc
sbb
aad
and
add
add
jne
ja
mov
ret
sub
cmp
out
in
dec
mov
movsl
adc
jg
or
inc
sbb
scas
jbe
sub
insl
dec
cmp
jmp
enter
mov
dec
push
inc
push
ljmp
pop
js
out
nop
mov
cmp
and
pop
or
popf
xchg
dec
adc
push
dec
xor
xchg
jbe
inc
out
cmpsl
sahf
or
aad
mov
mov
js
and
push
rorl
fildl
mov
mov
push
lret
sbb
jne
test
jecxz
sahf
pop
fst
mov
xchg
ret
push
adc
mov
mov
sbb
enter
sbbl
repz
jge
xchg
movsb
lea
rep
push
gs
sub
sub
mov
fadd
pop
shlb
or
loope,pt
mov
ljmp
dec
push
outsb
lods
jnp
fidivl
xor
gs
xlat
dec
rorb
insl
pop
mov
scas
mov
sub
xchg
pop
out
stc
mov
xchg
pop
cmp
xchg
add
std
mov
in
enter
shll
std
sub
rcll
jb
cld
repz
cmpsb
xor
outsb
pop
inc
dec
loopne
pusha
popf
bound
dec
sbb
rol
pop
es
and
mov
ljmp
sbb
out
ss
jecxz
add
push
test
ja
pop
inc
outsl
mov
je
aas
bound
ljmp
adc
stos
jbe
sbb
sbb
popa
leave
imul
in
xchg
jp
stos
mov
xor
push
jno
pop
orb
xor
cltd
add
inc
aad
mov
and
lds
out
out
aaa
dec
pusha
out
and
fisubrl
call
nop
xchg
fldcw
xchg
fsubrs
lock
out
jae
nop
ljmp
out
mov
xorl
dec
jle
fisubrl
lods
add
repz
in
icebp
les
shl
sbb
mov
out
cmp
jo
daa
push
sbb
loope
add
pop
leave
dec
jne
popa
addr16
pop
int3
enter
dec
or
add
repnz
popf
imul
test
stos
fadd
stos
in
ja
inc
xchg
iret
jmp
cmp
inc
and
add
xchg
movsb
aaa
pop
xchg
std
push
jo
dec
outsl
lock
lea
mov
push
and
arpl
fsts
jno
arpl
test
xor
adc
mov
scas
test
jp
add
test
jae
movsl
pop
jae
cmp
je
in
bound
sarb
lods
lret
and
and
rorl
out
add
mov
push
dec
rcll
popa
test
cmc
pop
cwtl
aad
outsb
cmp
sbb
or
dec
sub
arpl
ss
sub
xor
cmp
or
sahf
xor
loopne
jae
js
push
xchg
sbb
pop
adc
inc
mov
js
adc
add
nop
push
scas
sahf
sub
or
mov
push
int3
sbb
mov
insl
adcl
or
xchg
pop
push
sarl
pop
ljmp
lods
sub
pusha
inc
add
outsb
in
push
in
and
test
inc
adc
push
ret
mov
jmp
jmp
out
jo
cli
pop
stos
inc
mov
arpl
jmp
and
adc
xor
inc
insl
lds
xor
aas
test
dec
testl
lahf
jb
mov
cmpsb
popf
popa
mov
test
push
lods
flds
mov
insb
cmp
in
loop
js
mov
andb
lods
add
inc
mov
ja
pop
adc
inc
adc
aad
cmp
sbb
xlat
fsubrp
fbld
xor
mov
cmpl
mov
lods
or
insb
sub
mov
pushf
or
adc
mov
mov
orb
dec
mov
sbb
cmc
pop
push
movsl
cmpsb
xor
gs
cli
pusha
push
dec
daa
xor
sbb
into
add
testb
sbbl
push
jle
xchg
xchg
in
jmp
hlt
loop
shll
in
pushf
jge
popa
int
inc
testb
mov
or
add
ja
cmp
test
inc
imulb
subps
xor
xor
fstl
ja
ret
mov
add
xchg
arpl
es
or
fnstcw
mov
stc
mov
sub
fidivs
jne
test
aas
in
loope
jge
dec
sbb
sbb
sbb
pop
fisttpll
adc
xchg
lods
pop
fwait
adc
leave
andl
inc
fwait
loope
mov
sub
cs
mov
pop
out
pusha
js
jp
sub
stos
adc
sbb
mov
shrb
sahf
mov
adcl
inc
pop
movsb
in
iret
cmp
or
shlb
lock
ret
cmpl
and
jae
fadds
test
cmp
ljmp
out
jo
and
test
adc
mov
sub
repnz
aad
mov
lds
out
les
adcb
imul
jo
lret
mov
jl
jo,pt
insb
inc
mov
mov
fcmovu
mov
and
test
mov
push
mov
or
dec
push
ret
mov
sbb
dec
or
adc
in
push
dec
adc
fs
fldcw
sub
mov
je
push
jne
and
scas
and
ret
mov
and
mov
cli
movsb
sbb
push
push
ret
test
adc
or
in
dec
sbb
inc
pop
or
int
daa
pusha
popa
push
dec
ficomps
xchg
jae
mov
xor
mov
aaa
or
int3
pop
mov
repz
test
add
shlb
fstpt
xchg
into
ljmp
jbe
sbb
push
lock
stc
pop
enter
sub
adc
mov
push
cmc
or
lea
jle
jbe
out
dec
pop
sub
aas
xchg
clc
pop
stc
loope
cmpsb
push
test
hlt
mov
aaa
icebp
pop
and
dec
sub
sbb
mov
mov
icebp
add
push
jb
and
mov
js
sets
lcall
push
jnp
fcoms
xor
dec
popa
push
sbb
movsb
scas
out
hlt
lret
pop
dec
mov
push
or
mov
fdivrs
movsl
cmpsl
jo
pop
cmp
jmp
dec
cs
cs
xor
movsl
ss
xor
pop
and
in
ret
jmpw
nop
ljmp
jno
lret
add
dec
stc
push
cli
loopne
add
jb
xlat
sbbl
imul
cmp
add
stos
lods
sub
loope
into
icebp
out
add
add
pop
pop
out
pop
push
cmpsb
add
xchg
xchg
mov
cmp
mov
scas
cmp
mov
sysret
lods
sti
push
lock
test
lds
int
loop
xor
or
xchg
sarb
pushf
sbb
cmpsb
sbb
pop
mov
sbb
push
jp
mov
lahf
sbb
xor
scas
fldt
push
mov
mov
gs
mov
es
and
xor
fwait
rsqrtps
and
sbb
xchg
cmp
aam
stc
scas
xor
mov
hlt
pop
jmp
or
mov
xor
cmpsl
jecxz
xchg
shlb
push
jo
push
inc
or
int3
xor
fsubrl
stos
int3
or
sbb
cmp
dec
jle
pusha
es
mov
push
rolb
add
sbb
cli
out
jne
mov
cmpsb
lcall
xorb
xchg
pop
loop
mov
cmp
lret
sbbb
cmpsl
push
jno
mov
mov
out
es
mov
cmp
lret
or
fsubl
insl
sub
fsts
das
in
cmp
sub
jmp
pop
jbe
ret
mov
add
ret
mov
push
repz
mov
loop
call
dec
mov
mov
mov
test
loope
test
js,pn
fistps
fs
mov
add
push
jbe
xchg
adc
cli
ret
notl
arpl
xchg
mov
add
repnz
repz
shrb
dec
fdiv
out
inc
push
stc
roll
lret
cmp
mov
popa
inc
mov
enter
addr16
pop
adc
mov
or
xor
loopne
enter
rorl
in
int
ret
push
mov
negl
inc
stc
sbb
ljmp
insb
or
jbe
insb
mov
xor
push
mov
sbb
cmpsb
imul
sti
inc
mov
lods
xchg
fucomip
cmp
pop
pop
ja
stos
dec
fidivrs
andb
pushf
inc
data16
jle
jbe
and
cmp
into
inc
mov
inc
repz
test
lods
adc
mov
dec
cmp
daa
lahf
mov
cmpsb
fidivl
xchg
mov
stos
call
jne
jmp
test
sub
movsl
sarb
cwtl
es
addr16
fnstsw
mov
cmp
jae
xchg
cld
stos
mov
sarb
in
adc
jg
loop
jbe
push
loopne
sbb
outsl
mov
mov
lods
push
ljmp
test
push
cld
outsl
mov
rcrb
inc
movsl
or
sbb
push
xchg
cmp
cmp
push
adc
cmp
outsl
xor
lods
adc
fimuls
bnd
pushf
mov
paddsw
jbe
or
sbb
out
nop
or
sub
das
orb
mov
jge
fst
addb
adc
fidivl
cwtl
stc
mov
mov
or
mov
rcr
mov
jle
out
outsl
shrb
sbb
xlat
daa
insb
stc
push
jno
dec
mov
pop
xor
lea
shl
sub
cmp
in
and
mov
xchg
dec
pusha
movsb
adc
and
mov
jl
lret
cli
and
push
sbb
mov
pop
mov
jne
es
fsubs
sarl
jae
addl
dec
push
out
test
lret
std
xchg
ret
mov
cmp
mov
ds
dec
data16
fistl
sub
test
sbb
sub
mov
aad
rorl
arpl
loope
clc
lods
push
sarb
inc
ss
ja
dec
dec
add
ds
rcr
cltd
loope
aam
lret
dec
bound
mov
clc
fistpl
jle
pop
ret
push
call
call
add
mov
inc
add
nop
aas
xor
andl
add
and
lds
es
ljmp
pop
rcrb
ss
into
into
mov
lock
xchg
xor
pushf
int
jle
cmp
lods
les
iret
mov
xor
xchg
xchg
adc
fisttps
jno
jb
notl
cmp
divps
xor
jmp
xor
xor
imul
ja
mov
mov
jae
test
pushf
inc
int
pop
outsb
or
icebp
push
lea
push
or
sub
jne
daa
inc
ds
mov
pop
or
sahf
cmc
jbe
add
xchg
aam
push
lock
insl
scas
lahf
out
inc
insb
mov
and
mov
jno
out
cmp
push
stos
add
das
add
call
jbe
xlat
mull
lret
lcall
in
push
out
mov
cwtl
or
mov
ljmp
lods
cmp
dec
sub
sahf
sbb
dec
into
insl
rolb
inc
lahf
push
addb
sub
push
scas
xorl
clc
dec
addr16
daa
andb
dec
test
out
jge
adc
movsb
fwait
xor
or
cld
int
aaa
add
cmp
add
fdivl
mov
inc
inc
cmc
and
add
jmp
repz
cmp
cmp
xchg
xor
cltd
aam
push
stos
mov
mov
in
ret
cmc
dec
mov
adc
sti
adc
lods
and
test
inc
imul
jnp
enter
pop
stos
inc
in
cld
pop
out
or
push
adc
in
movsb
sbb
push
int
mov
inc
arpl
mov
addl
mov
xchg
cmp
cmc
gs
pop
addl
adcl
xchg
test
sbb
in
adc
push
andb
clc
xor
push
dec
mov
test
pop
adc
mov
shrl
push
lcall
mov
popl
adc
test
add
push
pop
mov
and
hlt
mov
adc
repz
fisubrs
jge
xor
dec
pushf
xchg
jl
xor
jle
cld
cmc
fstl
and
shlb
push
jmp
jecxz
addb
cmp
push
mov
adc
daa
scas
pop
js
jge
insb
mov
add
push
loopne
lret
cli
dec
mov
sbb
xlat
ud2
mov
add
fidivl
ja
mov
iret
orl
mov
cmp
ljmp
jbe
sbbb
test
pop
test
push
pop
adc
out
sahf
js
fs
jno
pop
out
mov
arpl
icebp
aas
shlb
push
push
aad
add
imul
fiaddl
dec
lock
fstpt
mov
scas
push
pop
mov
pop
xchg
hlt
pop
imulb
push
hlt
orl
mov
jl
stos
std
fstl
lods
mov
scas
pop
sub
pop
jg
xchg
mov
in
jg
subl
adc
add
and
jo
leave
xchg
add
lahf
das
cmp
xor
push
dec
mov
mov
insl
xor
push
push
jmp
jnp
adc
jb
jo
in
adc
nop
inc
aaa
xchg
rolb
adc
or
in
jb
mov
nop
xchg
shl
pop
xor
in
or
dec
mov
push
push
aas
repnz
and
cld
sbb
ljmp
bound
addr16
cmp
out
int
push
xchg
icebp
fimuls
outsl
fbstp
test
cld
leave
mov
jno
push
dec
loopne
dec
xchg
or
mov
pop
sub
mov
jl
jnp
leave
incb
sahf
cmp
cld
mov
mov
filds
jmp
iret
in
clc
and
imul
movsb
stos
gs
jg
or
test
adc
shll
hlt
in
hlt
stos
pushf
jnp
lcall
adc
popa
inc
and
and
outsl
jae
sub
aam
stos
cld
mov
gs
xchg
stos
fistps
pop
shrl
mov
mov
cli
insb
adc
bt
notl
std
andl
dec
mov
push
push
jb
mov
insl
push
cmp
inc
in
fiaddl
mov
pushf
adcl
sub
push
scas
push
jl
fistl
out
ret
call
movsl
aam
cmpsb
call
mov
notb
sub
stos
sbb
xchg
and
cmp
call
bound
outsb
test
mov
pop
lock
mov
outsb
mov
push
icebp
shll
pop
cmp
inc
and
roll
add
pop
sub
and
out
int3
pop
push
repz
cmpsb
cli
out
xor
or
jecxz
movsb
mov
and
sub
mov
outsl
pop
loopne
std
sub
cmp
xlat
xchg
inc
cmp
jmp
dec
lods
andl
sbb
fbld
pop
inc
daa
fs
fwait
lret
cmp
out
stos
leave
mov
push
in
push
push
add
sahf
add
lds
lahf
mov
mov
push
push
scas
jno
daa
iret
aaa
int3
jae
pop
push
pop
xor
lea
outsb
mov
push
adc
jno
jno
popf
dec
jo
movsb
inc
inc
in
mov
sub
jmp
mov
push
cmp
aam
movsl
push
add
cmpb
xor
int
inc
mov
jge
or
jnp
pop
shlb
pop
lods
pop
xchg
add
outsb
dec
dec
inc
jmp
jb
cmc
adc
xor
inc
cli
int3
jg
inc
or
pop
nop
test
cltd
push
adc
mov
adc
popa
out
sti
and
jg
add
adc
inc
frstor
in
xchg
imul
int3
mov
sarl
icebp
sahf
ret
mov
lret
movsl
sbb
inc
xchg
arpl
mov
arpl
xor
lea
icebp
cmp
enter
and
xor
jp
insl
push
ret
jno
test
or
es
imul
clc
mov
adc
stc
mov
js
mov
cmc
gs
addl
popf
lahf
fmull
test
add
xchg
sub
shll
or
inc
std
mov
xor
arpl
stc
lods
call
inc
push
push
fldl
pop
shlb
lods
scas
lea
jmp
arpl
popf
or
xlat
lods
fcmove
mov
add
xor
andb
les
into
xor
add
xchg
or
clc
mov
notl
dec
sub
and
lods
bound
fs
ljmp
pop
stos
jne
daa
inc
push
sub
mov
adc
and
mov
dec
imul
sbbb
daa
test
in
inc
je
xlat
jo
pop
popl
movl
seta
nopl
add
or
adc
and
mov
xchg
bound
scas
mov
into
out
arpl
fs
xor
hlt
xchg
movsl
insl
add
pop
or
mov
cmc
mov
xor
sahf
sub
nop
call
push
into
sbb
sbb
push
dec
push
push
pop
test
addr16
sti
insb
popl
inc
and
or
sbb
jp
ficomps
daa
mov
loopne
xchg
pop
cmp
xchg
sbb
movsl
jae
adc
dec
bound
and
dec
adc
sbb
sub
cmpsb
or
xor
jnp
lea
repnz
xchg
in
test
push
jns
sub
fimuls
dec
icebp
dec
pop
fldl
imul
lock
mov
mov
int3
xchg
pop
jbe
xchg
xor
mov
int3
into
sub
push
cmpsl
xor
stos
and
enter
sub
pop
mov
frndint
xor
loope
dec
xor
adcb
push
adc
mov
push
lret
add
repz
sbb
or
jmp
cmpl
in
mov
sbb
jb
sub
cmc
es
stos
and
xor
dec
leave
push
es
lret
out
in
out
movsl
pop
xchg
mov
cli
sbb
push
add
sarb
pusha
jbe
mov
clc
lods
xorl
mov
xchg
sub
loope
test
mov
xchg
pop
inc
sbb
push
mov
sbb
or
mov
shl
pop
outsb
pusha
insb
inc
aad
jo
popf
xchg
les
inc
outsb
stc
jmp
call
or
mov
add
das
popf
push
jo
pop
xor
xchg
add
pop
mov
lods
fwait
adc
dec
mov
adc
in
xchg
sub
sub
out
out
pop
call
test
std
arpl
mov
and
xchg
xchg
loope
push
push
jmp
iret
test
sub
pushf
ss
pushf
fisubrs
in
movsl
xor
shl
xlat
add
jb
imul
push
std
call
lret
je
mov
inc
adc
inc
mov
or
pop
add
mov
insb
ljmp
fstl
mov
imul
je
into
fmuls
negl
iret
out
adc
jbe
sub
sti
mov
jo
mov
pop
pusha
les
pushf
pusha
push
ret
je
cmp
hlt
or
xorb
scas
adc
jmp
mov
pushf
mov
xchg
lods
repz
cmp
dec
cmpsl
mov
adc
imul
fidivs
test
jb
xchg
mov
out
jnp
sbb
outsb
mov
pushf
sub
pusha
add
lret
shl
sbb
xchg
enter
add
pop
pop
jmp
sub
sub
subl
js
add
push
lcall
mov
or
fistpll
daa
mov
pop
leave
xlat
jmp
inc
jge
pop
pop
fcompl
cmp
nop
mov
jg
stos
scas
push
xor
sar
in
fwait
dec
add
fbld
jmp
jmp
out
cmp
inc
push
jnp
xchg
dec
lcall
fnsave
xor
sub
push
int3
mov
pop
or
lock
push
inc
or
or
xor
jl
hlt
mov
out
fwait
pusha
inc
or
add
sub
sub
je
inc
or
add
xchg
and
mov
pop
fnstenv
push
outsb
sahf
mov
aas
mov
stc
sub
in
sbb
push
xchg
add
cmpsl
sbb
cs
dec
addl
xchg
push
xchg
test
dec
cmp
fisttps
lahf
lds
mov
aaa
andb
jae
push
and
or
inc
xorl
es
add
adc
cmp
xor
ljmp
push
lahf
jb
stos
mov
adc
mov
cmc
jns
jge
cwtl
popf
pop
push
rcrb
add
or
adc
repnz
sub
mov
adc
leave
pop
shl
xor
jb
or
add
xchg
lret
repnz
arpl
ffree
fldcw
insb
sahf
in
inc
xor
es
sub
jae
je
mov
sub
jmp
or
and
mov
mov
sbb
sbb
xchg
iret
or
out
mov
xor
arpl
xor
adc
in
daa
data16
arpl
inc
out
sub
idivl
out
mov
push
pop
mov
je
fbld
adcb
movsl
test
cli
outsb
sub
add
and
call
adc
std
mov
jge
xor
fdivl
aam
popa
inc
jmp
and
ret
jmp
add
push
dec
mov
cmpsl
push
notl
and
inc
push
jb
xchg
imul
stc
jbe
sbb
sbb
jno
and
or
mov
pop
and
lcall
lret
test
stos
push
ret
cmpsb
ret
ja
xchg
and
push
jns
mov
xor
lahf
push
cld
lea
sbb
xchg
sub
hlt
dec
movsl
clc
xchg
add
jbe
sbb
imul
sti
aam
mov
inc
in
in
adc
loope
packsswb
je
aaa
xor
mov
pop
pop
lods
xor
adc
in
push
ret
shll
mov
imul
xchg
adc
movsb
push
test
jns
imul
lods
dec
inc
inc
insb
loope
add
sub
sbb
jg
enter
and
fmull
cmpsb
and
inc
xchg
push
dec
and
shlb
in
stos
ret
xchg
mov
and
out
xchg
inc
jg
dec
add
xchg
movsb
push
jb
ss
mov
add
out
and
jno
out
jb
mov
cltd
pushf
jmp
xor
push
int
or
int
lahf
movsl
xchg
addr16
mov
loop
inc
sbb
popa
rclb
out
pop
mov
pushf
mov
lds
scas
fistl
loopne
add
das
pop
pusha
cltd
cmp
ss
push
pop
jo
dec
jbe
int3
jnp
push
adc
cld
outsl
jne
or
movsb
fdiv
sarb
push
sbbb
or
push
pop
clc
push
into
stc
push
out
push
std
sbb
mov
jge
cmovg
mov
jb
cmc
xor
push
xorl
ss
std
negl
pushf
mov
lahf
cmc
test
or
ret
std
cmp
inc
push
dec
sub
bound
popa
pushf
cltd
cwtl
test
andl
call
mov
jp
lock
les
xor
arpl
int
pop
fistl
out
xorl
push
xchg
mov
adc
out
pop
xor
xchg
cmpsb
sub
mov
jmp
mov
adc
pusha
dec
pop
lds
dec
dec
jo
ja
xor
leave
jb
mov
xlat
pop
add
xor
sahf
aas
arpl
pop
dec
push
mov
inc
sti
mov
and
dec
hlt
add
or
or
mov
xchg
xor
adc
lds
rcl
nop
inc
test
push
lods
dec
pop
and
cmp
jae,pt
orb
bound
mov
xor
mov
push
inc
jecxz
xor
xchg
push
cmpsb
adc
loopne
js
cli
pop
gs
jmp
xchg
mov
or
arpl
fcomi
inc
mov
call
mov
adcl
or
mov
mov
aad
or
ljmp
push
loopne
test
outsl
fildl
pop
and
repnz
lods
mov
or
cmp
and
test
lods
push
fs
xchg
add
das
jp
and
test
push
in
sub
sbb
daa
popa
mov
stc
add
in
add
icebp
mov
psllq
dec
adc
jne
jb
push
nop
mov
ss
test
jbe
rorb
stos
pusha
xchg
sub
or
push
pop
rcr
pop
sub
stos
imul
fisttpl
or
loopne
sub
adc
rcll
into
aad
std
pop
and
cmp
pop
pop
popl
add
sti
or
sbb
das
imul
mov
xlat
xchg
fsubrs
mov
lock
adc
cmp
pop
hlt
jg
xor
mov
push
xor
cmc
cmp
adc
add
inc
lcall
sbb
ret
push
mov
cltd
push
into
pop
in
mov
ljmp
cmp
into
add
hlt
leave
jne
shll
stc
mov
push
sub
pop
ds
lahf
or
stos
int3
push
andl
arpl
fucom
xchg
cwtl
cmpsl
int
mov
sub
jno
push
std
daa
test
adc
loop
adc
jns
in
hlt
mov
fwait
xor
pop
pop
mov
aad
imul
sbb
out
adc
xchg
cmp
ds
mov
aam
lea
cmpsl
jbe
sarl
inc
jo
push
ja
sbb
int3
loope
mov
clc
xor
stos
repnz
insl
add
jb
adc
ja
stos
iret
call
insb
movsl
pop
in
jl
push
sub
and
sahf
out
cmc
ret
fldt
in
data16
int3
cs
xlat
in
and
jns
fmul
sahf
sub
sbb
call
pop
inc
fsubrp
cltd
mov
cwtl
mov
inc
xor
xchg
jne
adc
dec
xor
mov
call
testl
loope
shr
cli
cli
xlat
inc
movsl
jge
cmpb
inc
sbb
xchg
push
jecxz
inc
incb
mov
cltd
outsb
sbbb
jb
jns
dec
imul
push
lods
sub
test
cs
movsb
icebp
ljmp
adc
mov
jns
or
into
jno
fiadds
out
shlb
inc
mov
mov
rcll
fdiv
daa
sub
dec
jmp
pop
adc
movsb
ret
enter
cmp
out
mov
and
pushl
sbb
xor
or
test
gs
faddp
inc
push
inc
jecxz
fdivrs
fiaddl
adc
inc
pop
mov
jno
add
add
mov
dec
fld
inc
aad
ds
fldenv
inc
arpl
sbb
ja
push
mov
dec
sti
push
mov
push
icebp
sub
mov
rcrb
mov
adc
out
jg
sub
mov
sub
cwtd
cmp
les
stc
aad
mov
shlb
and
in
push
mov
cmpsl
int
mov
inc
les
stos
xlat
mov
mov
leave
sub
mov
adc
mov
roll
mov
xchg
cmp
data16
ds
jg
add
jecxz
rorb
mov
fwait
add
aam
addr16
mov
ror
or
jp
sbb
mov
mov
cmp
jp
flds
int
sti
lea
dec
jmp
cli
xchg
xchg
dec
repnz
xor
fsincos
popf
in
mov
movsb
jae
push
rcl
push
push
pushf
xchg
push
mov
push
pop
das
hlt
lret
or
mov
inc
shr
push
push
popf
enter
lahf
fcos
push
and
dec
bound
out
int3
xchg
cwtl
adc
pop
push
sub
mov
insl
and
in
mov
dec
jp
popa
iret
daa
dec
enter
pop
push
sub
popf
xchg
pushf
stos
dec
jp
dec
movsl
jmp
shl
stos
cld
in
or
adc
add
sub
test
xchg
push
nop
xor
andb
sub
cmpb
test
popf
dec
into
movsl
dec
imul
push
pop
int3
xchg
fs
sbb
sbbb
stc
out
adc
fistpl
xchg
dec
push
imul
push
jmp
fisubrl
jbe
jle
sbb
push
lea
sbb
imull
bound
jb
xchg
sbb
fisubrs
mov
cmp
or
xchg
rol
adc
cld
xchg
mov
mov
sbb
xor
push
mov
xchg
dec
movsl
sbb
pushf
dec
mov
fidivs
mov
popf
lods
xor
sub
test
push
scas
insl
mov
jns
inc
cmc
cwtl
jp
es
jno
fnclex
sbb
xchg
clc
xchg
subb
mov
add
test
int
pop
in
mov
out
in
inc
adc
aad
mov
orl
fdivr
pop
jbe
int3
scas
sub
in
test
pushf
dec
inc
hlt
ljmp
push
sbb
jo
je
jae
sub
mov
aaa
ret
sahf
in
push
sub
pop
shrb
or
adc
xchg
das
pop
jb
mov
aam
pop
cmc
rcl
daa
push
cmovs
mov
popa
sbb
enter
push
mov
xor
iret
or
ja
rorb
mov
in
jle
mov
stc
aas
icebp
xchg
add
dec
in
mov
sahf
sub
sub
cltd
sbb
jno,pt
loopne
add
nop
lcall
xor
or
ljmp
lret
in
cwtl
inc
dec
xchg
xchg
test
xor
pop
adc
jg
dec
cmpl
lret
lea
cmp
or
cltd
xchg
dec
fistl
adc
add
cmp
cltd
push
hlt
sbb
mov
popf
icebp
test
sub
xchg
test
stc
cli
add
insb
adc
fs
adc
mov
mov
mov
test
and
mov
rcll
add
test
sub
xchg
lds
lods
xchg
mov
mov
in
mov
push
or
out
scas
xor
xor
sbb
in
and
scas
and
pop
insb
sub
or
and
mov
ficomps
mov
xchg
push
push
cmpb
jno
test
rolb
pop
inc
sbb
push
adc
pop
test
fcmovnu
mov
rorl
mov
js
jnp
les
scas
ljmp
rcll
xchg
jae
cmc
dec
cmp
push
repnz
into
pop
pop
sbb
mov
push
dec
lock
sub
push
jp
sub
jno
add
iret
cld
mov
jb
rorb
lret
pop
jno
scas
jle
pushf
ljmp
cmp
pop
es
or
icebp
pop
dec
sbb
in
loopne
subl
aam
test
fistpll
mov
dec
or
gs
jge
mov
mov
pop
xchg
cld
push
stos
mov
out
sub
jge
loope
mov
xor
fcmovnb
cmp
testb
sbb
jnp
or
insb
popf
out
bound
mov
dec
pop
dec
loope
aam
pushf
xchg
push
push
fucomp
and
test
add
sahf
cmp
xchg
mov
icebp
scas
imul
pop
pop
out
ja
clc
mov
inc
hlt
cmpl
pop
ret
adc
in
adc
xchg
and
movsb
out
jge
mov
ficoms
lods
test
push
mov
or
dec
jbe
push
shrb
cmp
mov
mov
lahf
sahf
ljmp
or
jmp
arpl
mov
mov
add
pop
add
fcomp
mov
mov
cli
push
outsl
and
adc
dec
shl
or
add
rolb
arpl
out
pop
cmpsb
lahf
insb
push
cltd
dec
leave
pop
std
mov
push
aam
rcrl
jge
cltd
jg
add
and
lds
pop
ja
shrl
fmuls
iret
rolb
daa
out
xchg
aad
jge
test
into
movsb
inc
leave
sub
and
aad
filds
mov
aaa
in
mov
dec
mov
xchg
sbb
orl
xor
aam
xchg
repz
test
js
push
sahf
pop
jns
ds
fadds
pop
ret
imul
lret
iret
fildll
mov
out
jns
test
xchg
push
outsb
push
lcall
mov
scas
int3
insb
nop
daa
inc
or
out
out
inc
xor
xor
loope
lret
mov
cs
cmp
fwait
and
sbb
mov
adc
aaa
xchg
daa
adc
and
shrb
dec
and
inc
cmp
push
xor
push
sbb
mov
jp
xor
cmp
mov
dec
sub
cmp
sbb
in
sbb
divl
inc
fcomps
enter
movsl
fsubs
lcall
les
dec
xchg
xchg
fiadds
xchg
ljmp
test
pop
push
gs
emms
or
or
mov
mov
mov
cmp
jge
dec
insb
fcmovnb
or
fidivs
sub
sub
adc
mov
fistps
loopne
loope
jmp
fistpl
je
jo
sbb
sbb
add
in
push
mov
stc
sub
imul
data16
cmp
dec
lahf
or
pop
cmp
jbe
jne
lock
jno
out
stos
adc
jnp
and
in
sbb
jge
aaa
jl
lret
xor
xchg
mov
sub
lock
gs
nop
mov
mov
loop
cmpsb
pop
or
je
mov
inc
or
cmpb
gs
xchg
lcall
jno
icebp
jnp
lods
or
push
repnz
icebp
pop
int3
in
sbb
lret
ficompl
pushf
in
add
push
mov
loope
dec
cmp
mov
inc
xor
add
add
mov
insl
stos
lcall
cwtl
outsb
push
aas
iret
aam
cli
fwait
icebp
clc
push
xor
insb
sub
and
jmp
sti
das
xor
out
lods
cltd
leave
in
divb
ret
mov
aam
je
scas
xchg
ret
dec
cmp
xchg
pop
xchg
mov
mov
movsl
aaa
iret
addr16
cld
rolb
mov
pop
mov
mov
pop
sub
mov
dec
xor
sbb
dec
xchg
mov
into
mov
popf
sarb
leave
into
adc
sub
push
and
sub
jmp
ret
xor
dec
aad
sbb
push
lods
mov
outsl
cmp
dec
cmp
or
mov
in
negl
and
ds
jmp
push
sti
inc
div
inc
ja
addr16
xlat
fistps
ljmp
cmp
sahf
fstps
mov
sub
scas
pop
ret
xor
adcb
pop
mov
mov
cmc
sub
add
std
sti
scas
lock
sub
or
out
ds
adc
push
xchg
mov
push
pop
aaa
adc
cmp
inc
ds
outsb
call
add
dec
push
pop
add
pop
jb
js
shlb
inc
outsb
lcall
sbb
pop
inc
fidivrl
cld
xchg
xlat
sbb
add
xchg
insl
sub
enter
sub
es
ret
bound
in
stos
jge
push
repz
sbb
sub
dec
inc
push
jle
add
push
sarb
inc
cwtl
push
mov
dec
mov
mov
imul
cmp
cli
mov
mov
sbbb
jne
pop
mov
mov
xchg
in
sti
add
cltd
daa
cltd
adc
jmp
in
xor
leave
mov
xchg
push
test
das
xchg
out
arpl
cmp
mov
mov
sub
xchg
cmp
imul
fstpt
cmp
mov
pop
ja
out
lret
pop
push
ss
sbb
xor
mov
xor
cmp
xchg
xchg
mov
rol
mov
inc
hlt
ret
jle
xchg
push
xchg
aad
mov
xchg
jge
gs
fiadds
adc
jp
mov
push
cmp
add
lret
loope
hlt
in
lods
enter
cmp
mov
adc
mov
mov
outsb
mov
add
jns
mov
and
mov
jp,pn
lods
mov
inc
movsl
inc
xchg
cmp
repz
loopne
arpl
inc
inc
cli
lea
xchg
push
and
xor
and
imul
jge
jge
cli
ljmp
xchg
sub
pop
gs
ja
jp
adc
mov
aas
mov
adc
dec
mov
in
test
mov
inc
fwait
aad
mov
dec
mov
adc
pop
inc
adc
pop
xchg
insl
push
jno
xlat
fsubl
pop
sarl
pusha
js
sbb
or
push
cmpsl
xchg
add
dec
das
jbe
cmp
iret
bound
jbe
jns
adc
gs
sub
pop
push
xchg
jl
into
add
ficoml
test
mull
je
in
ds
addb
dec
insb
dec
mov
fisubrl
inc
mov
mov
test
cmp
enter
out
shr
sbb
mov
mov
cli
push
in
add
sbb
sbb
push
sbb
loop
dec
int3
pop
cs
test
xchg
cmp
mov
cmpsb
repnz
mov
jmp
nop
jns
mov
into
push
dec
shlb
fldenv
pushf
push
and
lcall
or
shrb
daa
ds
pop
push
aad
add
xor
push
mov
insb
or
add
sub
and
cmpsb
nop
jo
fimuls
inc
aam
jne
dec
xchg
das
in
pop
and
cld
hlt
inc
test
xchg
mov
adc
movsb
inc
fistl
test
lods
jg
clc
dec
lea
stos
lods
adc
bound
sbbl
fxch
repz
aas
inc
in
test
jnp
and
xor
lret
sub
cmp
arpl
and
cmp
adc
or
stc
sub
orl
fwait
je
enter
inc
or
jecxz
arpl
ret
push
add
popa
cmpsb
push
mov
or
fs
jl
push
mov
jae
mov
mov
mov
mov
std
lret
adc
cmpsb
or
cmp
mov
lahf
inc
out
sar
roll
aaa
push
insb
mov
push
add
fcoml
es
mov
or
pop
mov
fdivrs
sub
dec
pushf
xchg
lahf
idivb
mov
ficoml
mov
sbb
pop
dec
mov
aad
inc
out
imul
sbb
dec
stos
mov
lods
movl
pusha
cltd
flds
add
or
shr
les
imul
pop
push
testl
mov
lds
add
push
pop
push
invd
xchg
iret
push
imulb
and
rorb
add
pusha
sbb
sarb
lods
mov
ja
or
add
cmp
gs
inc
dec
xchg
out
mov
adc
in
or
popf
sub
mov
add
and
mov
cmc
test
and
and
insb
or
pop
xor
movsl
lods
xor
inc
in
push
pop
cld
fs
mov
call
pop
push
lods
loope
mov
ljmp
push
pop
xorl
int
adc
outsb
stos
sub
lcall
dec
jne
push
and
pop
inc
pop
add
cs
dec
shrl
lds
lds
cld
pop
out
add
clc
movsl
insb
or
shll
push
vpslld
daa
int3
or
mov
jae
leave
and
icebp
rorl
clc
cmp
add
pop
aam
ja
daa
outsl
adc
cmp
xchg
mov
call
push
xchg
fisubrl
call
lock
pusha
push
daa
cld
jge
pop
nop
inc
mov
mov
or
adc
mov
push
shr
repnz
sbb
sub
adc
inc
std
push
lret
mov
jno
aaa
and
movsl
adc
add
mov
call
clc
pop
in
gs
arpl
inc
xchg
jle
push
or
pop
mov
aas
mov
imul
mov
ror
leave
pop
jle
mov
mov
imul
add
xor
mov
xchg
push
xor
mov
push
scas
cs
mov
add
les
jmp
pop
push
xchg
add
push
sub
adc
fnstcw
in
mov
seto
pop
fidivrs
add
mov
xlat
lock
push
pop
test
aaa
add
sub
sahf
adcb
addl
std
fs
mov
pusha
push
repnz
push
jmp
mov
mov
xor
jmp
inc
sub
ficoml
xchg
cs
pop
les
xchg
add
dec
jmp
jo
and
push
xchg
mov
and
inc
stos
dec
sub
cmp
xlat
push
stc
inc
cltd
cmp
ret
inc
pop
sub
loop
jecxz
inc
or
or
cli
add
scas
testb
mov
mov
or
ja
insl
jl
inc
insl
hlt
inc
daa
lahf
xor
insb
imul
mov
or
push
mov
dec
mov
outsb
or
push
add
cmp
xchg
lret
and
mov
xchg
outsb
mov
insl
cmp
in
jb
mov
popf
cmp
cmpl
jb
mov
jnp
ss
sbb
adc
cwtl
push
lret
bound
push
test
xchg
paddusb
or
out
test
or
js
cmpsl
jp
xor
sarb
imul
mov
scas
lods
cli
xor
lret
call
test
dec
inc
push
xor
xchg
loop
scas
jg
stos
xchg
mov
pop
sub
in
into
cld
test
ret
scas
push
push
lods
fadd
enter
and
jns
out
jbe
push
cmp
cmpb
addb
aaa
js
push
fnsave
sbb
jns
mov
sarb
pushf
jmp
aam
out
or
insl
gs
lea
ret
aaa
cmpb
hlt
aas
out
mov
aas
es
or
and
ljmp
int3
cltd
adc
xor
adc
dec
cmpsl
ror
cltd
insb
adc
jecxz
int3
fwait
push
stc
mov
jle
test
push
jmp
cmc
shrl
lock
jle
lds
cwtl
data16
pushf
fsubrl
ljmp
add
adc
xor
fs
push
les
add
or
sahf
inc
pusha
pop
inc
add
test
outsb
pop
adc
jne
dec
and
jecxz
jno
mov
add
add
data16
daa
in
pop
jge
mov
adc
bswap
mov
out
pop
xchg
iret
xchg
pop
adc
imul
mov
adc
pop
xchg
sub
and
jnp
sarb
in
lods
lahf
mov
and
and
enter
mov
inc
push
test
sub
call
in
xchg
push
push
sbb
cmp
add
fwait
sub
mov
aas
repnz
mov
jo
call
xchg
std
jl
and
cltd
test
test
into
cltd
xchg
push
fwait
out
fcomp
aad
out
test
xor
sub
loope
add
aas
inc
push
mov
xor
sub
rcll
movsl
mov
iret
fxch
xchg
or
es
xlat
xchg
and
xchg
stos
sub
xchg
mov
sub
cmp
movsl
inc
js
inc
dec
leave
ret
test
adc
into
dec
mov
adc
repz
dec
xchg
mov
in
or
ret
sub
in
jle
in
adc
and
enter
sub
and
lret
negb
fadds
pop
pushf
sbb
jns
aaa
out
out
je
push
mov
push
mov
and
dec
repz
gs
dec
lea
xlat
pop
daa
cld
aam
dec
in
push
xor
insl
mov
dec
jnp
mov
mov
in
mov
inc
in
sub
les
sbb
mov
jno
nop
clc
pop
pop
ret
out
scas
shlb
dec
sbb
arpl
cltd
xor
shll
pop
mov
testb
sahf
fistps
cmp
sbb
gs
add
addb
movsb
outsl
stos
out
mov
mov
scas
lahf
inc
pop
insb
and
xchg
stc
mov
loop
imull
in
rcll
repnz
lcall
stos
pop
mov
mov
fistps
je
repnz
pop
ljmp
pop
es
pop
enter
lahf
xchg
xor
scas
jae
fldt
dec
inc
insb
push
inc
ror
addr16
std
cli
jecxz
inc
sarb
xchg
in
insb
push
cmpsb
jno
and
lcall
leave
add
test
imul
pop
cmp
cmpsb
sub
mov
mov
dec
adc
lea
pop
jp
leave
push
mov
out
sub
lods
mov
or
mov
mov
jmp
mov
xor
xchg
mov
fcomi
cmp
data16
add
popa
aas
jbe
cmc
cltd
ret
pop
pop
adc
addl
iret
test
mov
push
mov
push
aad
cwtl
out
test
xlat
cmp
out
sub
push
mov
cmpsb
sbb
outsb
sbb
ds
pusha
int3
lret
ficomps
lcall
dec
jge
sbb
or
or
ljmp
mov
das
xor
mov
scas
inc
leave
push
shufps
push
sub
xchg
lret
enter
mov
in
scas
cmp
hlt
pop
push
jl
dec
mov
jmp
outsb
aad
or
notb
shrb
fwait
adc
sti
inc
push
lcall
mov
popf
adc
mov
dec
aaa
lds
add
call
push
mul
pushf
dec
fwait
popa
mov
push
jmp
jmp
cwtl
push
in
push
mov
cmpsl
sbb
and
lahf
out
into
sbb
pop
outsl
fwait
leave
mov
xlat
add
addb
addr16
bt
xchg
rorb
mov
pop
insb
lcall
xchg
jmp
outsl
and
jno
test
dec
sti
lock
in
faddl
mov
aaa
sub
push
gs
xor
cmc
or
sub
fmull
insb
mov
ret
aad
fildl
pop
lds
xlat
repnz
cmc
jmp
gs
mov
inc
repnz
jmp
ret
cwtl
inc
xchg
gs
aam
bound
in
leave
pop
stc
stos
mov
mov
das
into
repnz
xchg
sub
bound
fucom
and
pop
add
cltd
leave
pop
fsubrs
jl
sbb
sub
js
cmp
insl
fnsave
dec
xchg
into
popf
gs
das
adcb
rolb
add
in
mov
push
rcrl
fisubrl
fidivs
inc
loope
out
repnz
xor
push
rcrb
mov
pop
repnz
add
fnsave
imul
add
pusha
and
xchg
dec
xlat
sub
fsubl
jecxz
pop
lret
push
sbb
es
mov
jb
jg
xor
and
ja
jb
pop
aas
cmp
cs
sbb
lret
test
mov
cmp
das
or
pop
cmpsb
test
pop
out
dec
or
dec
xchg
mov
inc
scas
cmc
jge
xor
mov
xchg
enter
aaa
aaa
pop
xchg
or
lret
addl
or
sub
and
xadd
popa
addr16
shl
and
addl
data16
dec
cmp
rol
loopne
jmp
mov
xor
xchg
out
fwait
cld
cmpsb
sub
ljmp
mov
adc
adc
mov
mov
popa
and
or
repz
movsl
add
dec
stc
into
fdivp
stos
clc
and
mov
into
lar
sbb
mov
test
sbb
jae
jecxz
xor
dec
orb
and
in
push
mov
push
jmp
push
outsl
cmp
hlt
pop
cmp
pop
cli
mov
jnp
ds
xor
pop
jmp
add
in
mov
sub
cmpl
ljmp
and
xor
pop
in
cmp
adc
aad
push
mov
insb
mov
int3
jl
ss
movsb
push
int
lret
mov
adc
inc
cmp
repnz
xchg
clc
cmpb
adc
mov
jmp
sbb
fisubs
pop
sbb
popa
lahf
stos
int
mov
push
mov
jmp
rcl
outsb
sub
xchg
loopne
loop
rcrl
sub
aam
out
add
jp
xchg
insl
dec
adc
xchg
dec
lea
sbb
sbb
jecxz
ds
xchg
jge
inc
sti
test
jge
popf
ret
std
cmpsl
xchg
xchg
hlt
add
adc
mov
sub
repz
and
add
lods
gs
push
jns
mov
jle
dec
jl
sar
pop
cmpb
fisubs
push
fiadds
movsb
dec
addr16
pop
lock
xor
imul
jl
mov
cmp
cmpsl
pop
xchg
jbe
add
lods
add
pop
in
fcmovu
xchg
fisubl
inc
call
mov
mov
pop
dec
xor
xchg
imul
fwait
jmp
inc
fsts
xchg
push
sbb
inc
push
dec
popf
push
pop
int3
in
jb
add
mov
out
mov
mov
movb
inc
mov
sbb
in
adc
into
mov
fisttpll
ficomps
mov
push
daa
pop
adc
xor
lds
xlat
push
arpl
mov
jb
adc
push
push
push
cmpsl
adc
push
cs
sub
push
push
nop
jae
pop
and
add
jg
loop
lret
jb
fs
cmp
xchg
jge
inc
push
adc
mov
and
je
pop
fiaddl
dec
cmc
pop
ds
cmp
xlat
xchg
xchg
pop
lods
mov
inc
jp
cli
xrelease
inc
lock
testb
fcompl
imul
push
popa
icebp
cmp
xor
add
cmc
xchg
dec
std
fdivs
mov
outsl
insl
in
or
or
repz
pop
lock
jae
xchg
fcoms
add
sbb
shrb
xor
sub
fadds
rclb
mov
push
sub
and
outsb
sub
cmp
mov
xor
and
cli
pop
xchg
push
insb
ret
push
mov
arpl
mov
and
fcompl
ficoml
stc
inc
cs
sti
cli
xor
ror
sub
pop
aaa
pushf
pshufw
add
xor
jge
dec
iret
leave
enter
ljmp
adc
das
lret
sub
aaa
loopne
add
ljmp
fwait
mov
push
push
lahf
cs
out
lea
xor
lods
into
fisttpl
and
inc
fwait
push
add
aad
out
and
cmp
cmp
inc
js
mov
cli
inc
dec
je
jg
sysexit
aad
add
push
insl
daa
sub
shll
jnp
sub
adc
popf
inc
frstor
loop
mov
les
subl
out
xchg
test
pop
fldt
aas
xor
xor
arpl
notl
xchg
nop
leave
icebp
enter
mov
mov
cmpsb
repnz
jle
cld
xchg
aad
pop
pop
sbb
dec
fcoml
je
lcall
sbb
mov
xchg
test
fmull
shlb
mov
sbb
adc
or
leave
inc
inc
sub
and
add
and
pcmpeqb
pop
out
lret
inc
fstps
aam
adc
pushl
aas
mov
jb
ds
stc
mov
aas
shll
stos
enter
arpl
sub
pop
mov
inc
xor
lret
decb
or
adc
addb
fsubr
movsl
repnz
adc
movsb
xchg
cmp
mov
test
lret
out
dec
mov
int
movsb
in
fs
push
mov
push
call
stos
nop
mov
cld
ss
jne
in
repz
jo
outsb
jle
cmpsl
xchg
jno
fists
sahf
and
and
sahf
push
sti
or
push
inc
or
stc
sbb
fstps
cmc
stc
ljmp
mov
adc
add
inc
loopne
adc
xchg
test
sbb
movsl
push
pop
xor
sar
cmpsl
das
add
mov
stc
in
xchg
inc
push
xchg
sub
cmp
pushf
sarb
mov
ljmp
leave
xchg
out
push
jmp
pop
mov
aad
shl
leave
enter
inc
cmp
int
xor
xchg
and
test
mov
pop
inc
aaa
jne
cmp
sub
cli
and
imul
adc
xor
ss
lret
repnz
cmp
lods
cs
ror
fisubl
jl
adc
ret
cmp
test
test
pop
or
push
mov
mov
pusha
stos
sbb
dec
shrb
pop
popf
sub
inc
pushf
inc
adcb
ja
mov
js
push
or
sub
outsb
pop
call
dec
add
xor
cli
insl
mov
cmp
mov
inc
jmp
mov
scas
pop
shrb
inc
adc
cmp
sub
and
cmpsl
dec
into
dec
adc
jle
insl
test
xor
cmpsl
scas
mov
loopne
and
or
cmp
xor
add
gs
add
pop
arpl
jns
test
dec
in
lahf
pop
mov
and
scas
jg
sub
mov
ljmp
inc
je
or
mov
fistpl
testb
enter
fs
dec
adc
xlat
jle
sub
imul
test
es
aaa
add
mov
cmpsb
push
sub
out
test
or
stos
scas
sti
jno
hlt
int3
sbb
xor
mov
ja
mov
sbb
and
lret
int
adc
test
mov
stos
stos
rcrl
test
lahf
inc
scas
xchg
out
scas
test
es
fistpll
xchg
lret
xor
lds
aam
pop
adc
aad
movsb
repz
test
lret
xchg
inc
fnstenv
push
and
or
ljmp
orl
nop
adc
pop
xchg
test
pop
xlat
js
dec
je
jecxz
cmp
add
jo
inc
int3
cmp
popf
ret
les
rcrl
ss
stc
mov
insb
cmpsb
mov
or
adc
xor
sub
in
rcl
push
push
jbe
or
test
les
jnp
jp
mov
call
inc
ret
in
push
jmp
fisubrs
mov
lods
popa
jne
dec
cli
mov
jle
and
sbb
jle
sbb
icebp
inc
icebp
xchg
xor
leave
fwait
cmp
incb
out
data16
sub
pop
push
stc
cmpsl
movsb
and
push
in
dec
shll
xor
sarb
shl
das
push
xor
int3
sti
xchg
cmp
jge
js
jo
aaa
sbb
ja
or
lods
inc
scas
cmovl
mov
es
xor
ss
or
hlt
dec
nop
nop
cmpl
and
pop
pop
cmpsb
leave
loop
mov
pop
mov
hlt
cmc
mov
movsl
aaa
dec
gs
insl
mov
lds
cltd
fcoml
adc
or
aad
fnstcw
cmc
mov
dec
add
jb
jo
lods
dec
and
jne
aas
js
into
cmpsb
mov
add
or
fisubrl
shlb
push
lret
fs
cmp
popf
fcmovnbe
iret
cs
sbb
mov
int3
cmc
sub
aas
lret
sub
mov
insb
fwait
stc
jbe
jge
mov
std
mov
out
pusha
xchg
es
icebp
and
into
pop
mov
sub
push
push
stos
inc
jb
es
dec
fs
pop
pop
loope
dec
and
dec
push
pop
or
jp
push
ja
sub
shlw
stc
mov
loope
push
adc
pop
daa
fldcw
dec
jle
jnp
lods
aad
inc
mov
jb
repnz
jmp
inc
push
jo
addr16
push
or
int3
addr16
mov
jmp
addr16
addr16
divb
fbstp
push
sbb
lods
shl
subl
aad
mov
mov
std
adc
push
inc
aaa
dec
ds
cli
sbb
push
cmp
in
hlt
scas
fisubrl
pop
push
jbe
sbb
xor
loop
mov
sbb
mov
inc
mov
push
push
out
movsl
sbb
leave
xchg
shl
add
aaa
push
mov
test
arpl
lea
lret
sbb
shrb
stos
pop
cs
jmp
outsb
pop
negl
xchg
clc
cli
mov
int
cmpb
jbe
xchg
xorl
pop
lea
lret
ljmp
jl
dec
stos
nop
aad
iret
and
mov
fiadds
pop
arpl
inc
cltd
mov
sarl
shrb
push
aas
xchg
ret
xchg
xchg
adc
add
mov
cltd
lret
mov
iret
push
in
inc
ja
rorb
aas
jl
sub
and
and
push
frstor
stos
pop
pop
data16
cmp
lret
ss
insl
jo
cmp
push
xor
in
inc
daa
sub
rorl
cmc
movsl
stos
mov
test
push
lret
mov
pop
and
lods
sub
rcrw
cltd
stc
mov
aad
dec
sahf
xchg
loope
lods
mov
testl
sbb
mov
sti
add
sub
jae
xor
popf
rolb
fstpt
add
dec
testb
jmp
test
lock
movsb
sahf
fildll
daa
cmp
mov
lds
xchg
dec
mov
mov
gs
loopne
das
sti
xchg
push
push
cmp
outsb
push
mov
push
outsl
mov
adc
inc
mov
sub
into
cs
lods
insb
rcll
jecxz
add
lods
loopne
lea
in
insb
lods
dec
out
mov
pop
cwtl
call
inc
fsubrl
mov
sahf
push
xor
call
push
out
xchg
in
in
dec
lret
jns
add
in
repnz
imul
and
fiadds
dec
aas
adc
das
pushf
xor
bound
test
push
pop
popa
shrb
pop
and
lcall
mov
arpl
cmp
sbb
fidivs
dec
cmpsb
push
mov
and
pushf
or
ss
jl
cmp
outsb
clc
pop
scas
pop
cltd
and
xchg
sub
loopne
push
insb
ret
repz
stos
ret
sub
cmpb
les
clc
xor
add
mov
push
sarb
sbb
inc
mov
test
xchg
push
xor
insl
xlat
sub
fs
popf
dec
jmp
lods
inc
pop
push
ds
add
sbb
mov
pop
push
lock
xor
cld
or
and
cmovs
imul
lods
arpl
movsl
sti
call
les
pop
cmp
and
pop
sub
mov
push
or
add
js
xchg
push
sub
sahf
sbb
push
mov
ds
cmpl
xchg
pusha
xchg
mov
popa
xchg
sahf
jnp
and
sub
cmpsl
outsb
sub
inc
in
negb
movl
paddsb
ficoms
loope
jmp
dec
addb
gs
pop
ja
fidivrs
mov
xor
cwtl
jb
jge
and
cmp
xchg
sbb
sub
jge
outsb
and
lods
sub
cmp
das
jp
push
lret
mov
mov
fcoml
ljmp
add
inc
subb
push
cltd
cmp
sbb
cmp
call
jno
xor
mov
inc
xor
xor
in
lret
jno
push
mov
sti
xor
sbb
xchg
mov
sub
into
and
xchg
or
rol
fs
ss
scas
es
pop
xchg
sub
jae
pop
test
lcall
test
lret
mov
popa
mov
in
jns
sub
pop
outsl
lret
pushf
jp
outsl
cmp
stos
sub
mov
xchg
aam
dec
lods
xor
xchg
loopne
aam
movsl
jne
mov
mov
jle
in
or
pop
sbbb
movsb
stc
xchg
lcall
or
push
xchg
pusha
mov
subl
sbb
xlat
push
push
dec
jg
and
xchg
int3
inc
testb
shrl
dec
cltd
pop
or
pusha
mov
xchg
add
aad
mov
xchg
push
jecxz
imul
ss
cmp
cmp
jp
jae
add
adc
push
xchg
fiadds
pop
and
aad
sbb
xor
in
aas
xlat
nop
cltd
and
inc
call
pop
shl
lds
mov
out
cmc
js
sahf
mov
jp
push
das
sub
mov
ljmp
cli
je
mov
in
xor
addr16
movsb
xor
push
stos
ss
insl
pusha
jmp
and
pop
jmp
push
xchg
cmpsb
jecxz
mov
out
pop
jbe
mov
sub
pop
lret
ja
scas
push
xor
pop
adc
mov
dec
mov
rorl
jbe
push
fisubrs
lret
mov
cmp
cmp
sub
inc
mov
mov
and
cmpsb
mov
sub
roll
divl
dec
mov
movsb
mov
xor
test
icebp
rclb
loopne
outsb
fs
adc
aam
cmp
ss
das
sbb
aaa
scas
add
mov
aas
mov
mov
adc
nop
xadd
testb
rcrl
and
aam
adc
idivb
jle
into
push
push
cs
sub
xchg
inc
orl
pop
mov
fdiv
and
jb
xchg
jo
mov
mov
cmp
cmp
movsb
mov
adc
or
pushf
aaa
fimuls
stos
jbe
jl
movsl
mov
mov
test
push
push
enter
mov
jo
popf
fwait
jle
ja
not
push
out
sti
hlt
out
mov
jmp
bound
in
out
lcall
sub
cltd
add
adc
sub
mov
clc
insb
push
push
out
pop
fdivr
xchg
nop
or
lahf
sbb
nop
cmpxchg
sahf
loop
add
xchg
push
mov
xchg
push
dec
mov
cli
sub
mov
dec
in
insb
lret
adc
inc
sub
add
sbb
pop
sbb
pop
mov
cmc
mov
sahf
sbb
adc
mov
sub
fimull
lahf
je
and
lods
int3
aam
inc
arpl
or
test
mov
pushf
arpl
cmp
xor
or
jg
out
subl
mov
xlat
ret
inc
test
sub
or
jl
loope
call
js
aad
mov
pop
stc
adc
sahf
leave
call
mov
push
pop
out
notl
xor
cltd
pushl
mov
xchg
and
adc
push
mov
arpl
or
push
std
subl
adc
ret
mov
jns
xor
rcrl
ret
mov
test
movsl
lcall
adc
push
cli
repnz
mov
out
cwtl
pop
jo
rolb
insb
adc
inc
in
mov
ret
mov
mov
lcall
push
pop
shl
or
sbbb
fcomps
in
mov
inc
cmp
fs
leave
pop
notb
fdivs
sar
std
add
pop
mov
sub
add
arpl
mov
and
mov
mov
sbb
add
data16
rolb
pop
outsl
xor
xor
ret
mov
adc
jmp
jo
adc
pushf
test
xchg
mov
jno
or
ret
imul
scas
xor
ret
jmp
jns
test
shrl
sbb
repnz
mov
stos
jle
mov
cmp
pop
lret
mov
in
jp
shr
fmulp
rcll
ljmp
adc
add
push
bound
or
fnsave
or
pop
lods
push
jae
xorb
adc
shr
in
iret
sub
std
sub
aad
mov
push
movsl
and
push
and
outsl
mov
aam
ja
xor
dec
mov
lret
cmpsb
icebp
call
jo
push
arpl
cmpsl
out
fs
xor
cli
rolb
push
jne
add
pop
aad
iret
ret
in
cmp
jbe
and
stos
adcl
cli
jmp
jno
in
cli
jge
jg
jae
scas
mov
cmp
fisubrl
aam
mov
xlat
arpl
jb
sbb
lods
fisubrs
inc
loope
push
imul
and
clc
ldmxcsr
test
rclb
in
cltd
das
sarl
sub
xor
in
fidivrs
rcl
addb
lods
gs
inc
into
je
dec
or
repz
out
andb
aas
test
ret
xchg
push
xchg
lods
in
xlat
addr16
push
test
sbb
adc
sub
fistl
jo
add
in
dec
pop
inc
xor
or
jg
insb
xchg
lock
cmpsl
mov
ja
push
push
sbb
mov
xchg
test
push
rcrl
test
cmpsb
cs
ret
mov
sbb
in
jecxz
inc
xchg
cmp
enter
push
ret
test
mov
or
insb
rcrb
aas
xor
mov
mov
or
notb
out
push
or
mov
in
xlat
push
mov
sbb
rclb
inc
cmp
outsb
in
aam
add
push
add
rcr
pop
nop
notb
mov
out
or
mov
in
dec
mov
out
int
jge
insl
or
in
and
test
sbb
arpl
dec
cmpsb
in
pop
lods
cmp
nop
mov
dec
mov
and
daa
adc
push
fistps
in
xchg
ret
jl
rcrl
mov
mov
lret
insl
dec
inc
mov
mov
inc
inc
mov
popf
cmp
jl
mov
sub
mov
aad
repz
mov
sti
movsb
xor
shrb
jo
gs
in
lock
cli
insl
mov
jmp
add
inc
and
add
pop
loopne
mov
push
repz
cmpsb
stos
xor
pop
aas
jmp
in
xchg
xchg
and
mov
les
shlb
add
mov
jecxz
xchg
jl
adc
or
adc
mov
popf
xchg
inc
mov
inc
mov
dec
mov
lret
incb
xchg
cld
sub
and
sub
les
mov
and
mov
and
fcoml
lock
popa
push
scas
xchg
mov
es
mov
lret
xchg
sbb
cmc
sub
xor
hlt
enter
sbb
imul
or
push
and
mov
shll
inc
or
xor
imull
adc
jl,pn
fwait
pusha
out
xchg
fnstsw
xor
jno
pop
pop
imul
ja
pop
mov
imul
outsl
sub
out
jns
jo
fmull
or
jne
xor
cmp
roll
stos
pop
inc
hlt
sub
mov
inc
out
push
dec
dec
jns
fadds
mov
icebp
xchg
xchg
pop
jb
jbe
xchg
rcr
shr
out
xchg
inc
and
cmp
jp
and
jb
or
test
out
pop
lcall
add
arpl
mov
pusha
pop
xchg
push
dec
dec
xchg
movsb
mov
insl
pop
xor
xchg
bound
hlt
mov
iret
ret
inc
into
js
out
clc
push
xlat
loope
pop
mul
popf
jnp
mov
push
filds
std
xchg
jb
rcrb
lock
es
into
int3
cmp
mov
rorb
insb
push
lret
mov
mov
add
and
cmp
mov
cld
push
aad
mov
jp
call
pop
or
push
in
xchg
inc
mov
je
cwtl
jne
xchg
das
pop
sub
stos
mov
and
sbb
mov
mul
out
divb
push
addr16
mov
les
lock
dec
add
icebp
orl
add
mov
cli
iret
pop
sbb
outsl
loopne
push
fwait
cmp
push
push
lods
sbb
and
cmp
mov
sbb
push
js
ds
leave
jnp
das
adc
loop
sub
xor
mov
les
or
call
inc
xor
stos
lret
lret
cmp
adc
mov
enter
orps
adc
je
mov
xchg
push
push
arpl
rolb
mull
shlb
idivl
repnz
adc
jl
cmp
ss
push
sarl
push
jne
inc
jns
pop
insl
in
cmp
jg
mov
fnstenv
or
mov
icebp
mov
aas
xchg
mov
push
inc
shr
add
jae
stc
inc
adc
dec
xchg
sub
je
pop
jge
jnp
push
addr16
rcr
jl
add
cmc
sbb
add
push
dec
bound
xchg
ja
movsl
inc
add
scas
and
mov
jno
into
jmp
mov
sub
dec
adc
cmp
arpl
pop
inc
cs
or
jmp
and
adc
cmp
movb
cltd
mov
and
fsub
pop
jae
add
lods
add
or
sub
enter
sub
gs
jmp
fcmovu
push
sbb
aaa
les
push
fdivr
std
stos
adc
add
cmpsl
xchg
mov
mov
movsb
test
and
push
inc
jb
jle
imul
mov
in
aaa
les
sub
fdivs
xor
xor
adc
les
mov
jbe
lea
pop
repnz
cmpsb
jno
int
jg
push
push
mov
cmp
int
and
lea
movsb
fldenv
adc
fists
and
fdivs
push
xchg
sbb
mov
push
pop
adc
loopne
or
push
jmp
test
fcoms
cld
pop
cmp
add
es
sti
outsl
icebp
sahf
jbe
subb
shl
out
fwait
dec
sbb
notl
push
orb
leave
int
cli
push
and
jl
adc
mov
or
test
mov
mov
jb
xchg
scas
call
inc
test
stos
jb
dec
adc
test
jecxz
mov
push
sub
or
cltd
jo
sahf
cmp
xor
push
cmpsb
mov
xor
aaa
jbe
movsb
aaa
out
in
cmc
add
jl
inc
into
mov
out
in
into
mov
data16
mov
mov
sbb
mov
inc
jns
add
mov
push
inc
testb
xchg
sub
xchg
ja
insb
in
push
mov
cmpsb
push
in
lcall
into
hlt
or
xchg
fstps
scas
mov
adc
rcrl
and
add
mov
loopne
aam
call
call
cs
mov
xchg
and
jnp
push
lea
test
js
jmp
or
inc
mov
and
cltd
or
ret
push
iret
leave
mov
sti
cmp
xchg
outsb
jne
sbb
push
ja
std
xchg
divl
push
mov
scas
add
xchg
sub
sbb
sbb
shll
stc
and
mov
mov
movsl
test
sub
pop
xor
or
outsl
and
and
push
inc
mov
insl
rorb
mov
lds
in
jecxz
jmp
fildll
pop
outsb
add
or
insl
insl
lods
test
icebp
cwtl
xchg
mov
insl
in
mov
lock
out
dec
fimuls
out
jns
mov
add
jge
pop
lods
fildl
push
jmp
mov
xchg
adc
leave
cmp
es
and
les
mov
movsb
in
cmp
lret
inc
cmc
cltd
xor
xchg
xor
push
add
imul
mov
jo
jnp
or
cli
fcoms
dec
push
jl
shl
shrb
lahf
inc
and
mov
cmc
xchg
cmp
jl
inc
testb
pushl
outsl
ror
mulb
jl
mov
lds
jb
jl
mov
mov
mov
xchg
loop
cld
mov
xchg
insl
rclb
lret
xor
adc
stos
mov
jnp
and
mov
bound
adc
mov
repz
fs
adc
or
shrl
cs
dec
movsb
loope,pn
cmp
mov
ret
pop
movsl
clc
scas
jle
loopne
stc
xchg
mov
addr16
xor
in
notl
mov
xlat
push
fwait
sbb
pop
fnstsw
jnp
inc
xor
pop
add
sub
add
xor
fdivr
add
cmpsb
pop
lahf
arpl
jno
rolb
dec
xchg
cmp
jge
push
ja
rol
pop
roll
cmp
or
andl
jmp
push
and
daa
xchg
jne
repnz
adcl
lock
mov
pop
fcmovnbe
test
mov
sbb
xchg
mov
or
fs
ja
sbb
clc
imul
in
cltd
xor
fidivl
mov
cwtl
sbb
xor
sub
sub
addl
sahf
mov
adc
jnp
pop
dec
notb
xchg
movl
mov
inc
arpl
hlt
in
in
in
sub
push
add
cs
aaa
add
jo
sub
fcoml
in
fsubs
lea
shll
cmpsb
dec
loope
lods
add
or
aaa
pop
or
lds
adc
dec
inc
sbb
jge
add
push
pop
pushl
hlt
inc
das
add
sub
outsl
mov
fmull
xlat
cmp
lret
add
cmp
adc
repnz
xchg
dec
or
and
cmp
xchg
pushf
int
lods
mov
je
icebp
iret
xor
dec
mov
fistps
xor
sub
add
jmp
mov
xchg
stos
mov
jb
adc
fcomps
adc
jo
inc
jmp
stos
cltd
test
xchg
dec
jmp
cmc
pop
addr16
inc
sub
lahf
mov
std
jle
mov
sbb
jo
push
adc
jmp
imulb
cmc
cmp
jge
in
push
repz
lret
aam
aad
jle
push
les
or
ja
sub
sbb
xor
cmp
lds
not
sub
sahf
dec
xor
cmpsb
ret
jecxz
dec
pop
bsr
xor
mov
sahf
lahf
cmp
iret
mov
fwait
cmpsb
cmc
mov
mov
into
enter
pop
scas
ja
out
pop
jbe
or
cmp
push
jmp
outsl
icebp
xlat
jge
mov
jo
mov
fs
xor
sub
leave
push
add
in
fprem1
adc
data16
add
jp
jmp
sub
int3
inc
out
jl
loope
aad
cmp
fiaddl
sbb
xchg
push
push
cmpsl
push
push
lds
or
pop
std
jmp
mov
push
jmp
mov
ljmp
add
cltd
xchg
push
add
jl
fdivp
sbb
ljmp
test
mov
nop
lret
filds
push
clc
xlat
jge
into
sbb
out
xchg
mov
lds
lret
dec
jecxz
jb
sbb
in
mov
sub
fldenv
js
roll
inc
mov
xor
in
mov
mov
jmp
js
sbb
push
mull
test
inc
in
xchg
movsl
pop
sub
xor
jl
sub
lea
pop
and
movl
adc
xchg
push
les
fadd
lods
jle
pop
loopne
and
or
lret
push
xor
test
jno
imul
inc
xchg
imul
xor
call
jg
clc
dec
lods
jmp
adc
dec
add
scas
fisubl
das
mov
mov
subb
ljmp
push
or
std
je
push
insb
pop
div
jecxz
pushfw
ds
jp
push
sbb
mov
mov
sbb
call
and
adcb
xor
test
ret
xor
mov
ss
movsb
fstpl
adc
fiadds
inc
pop
and
jmp
dec
sub
pop
imul
xchg
add
pop
jnp
ds
cwtl
and
aam
mov
mov
negb
mov
adc
sbb
lret
sub
xchg
sti
sbb
dec
push
sub
add
cmpsl
lods
mov
out
mov
mov
adc
outsl
lods
inc
testl
jae
adc
adc
loope
ljmp
inc
fistpl
pop
ficoms
imul
ds
adc
fildl
sub
sbb
fs
adc
es
mov
xchg
fwait
aam
nop
in
mov
test
adc
mov
jno
pop
and
or
scas
jo
pushf
dec
jno
icebp
sub
mov
pusha
push
jo
cmp
xchg
enter
xor
dec
sti
add
sub
test
and
rorl
dec
push
mov
fcmovb
push
orb
cmpsb
les
xchg
push
or
pop
mov
fisttps
sbb
daa
subl
dec
pop
cmp
mov
lgs
sbb
int3
and
mov
jge
adc
inc
rcrb
dec
xor
mov
sbb
subb
mov
test
sbbl
out
push
mov
mov
scas
dec
loope
imul
enter
jmp
push
popa
mov
and
push
je
pop
sti
mov
mov
scas
out
pushf
pop
push
int3
inc
mov
or
adcb
add
pop
mov
cwtl
sahf
adc
jmp
xchg
cmp
inc
and
test
inc
gs
mov
subb
push
add
jl
pop
sub
pop
addr16
sub
inc
or
mov
cmp
imul
std
leave
enter
dec
sbb
repz
aam
aas
or
mov
pop
mov
add
push
sub
pop
sub
sbb
mov
jae
sub
adc
out
orl
mov
mov
sahf
mov
pop
xchg
lret
sub
jl
sub
addr16
lret
sbb
aas
jge
lret
jne
jo
mov
repz
es
aaa
cld
dec
lods
dec
gs
enter
fdivrl
xchg
pop
loopne
mov
xchg
int3
mov
xchg
ficomps
push
outsb
in
sub
mov
mov
sbb
std
mov
mov
jae
pop
cmp
sub
fnsetpm(287
daa
pop
dec
shll
pop
decl
jl
or
pusha
loope
aad
inc
sub
fsubs
mov
pop
addr16
pusha
add
ljmp
pop
xchg
mov
dec
dec
xchg
ds
jnp
xor
dec
outsb
rolb
add
xlat
shl
dec
jb
movb
mov
lcall
jb
xor
in
iret
addr16
daa
adc
lret
lds
push
inc
xchg
mov
inc
inc
push
stc
cmp
xchg
cmc
mov
stos
or
fwait
sub
mov
mov
mov
push
mov
xor
xchg
mov
pop
hlt
ret
clc
and
fs
mov
xchg
in
inc
imulb
xor
cli
add
inc
bound
sub
into
jmp
jb
in
push
push
nop
gs
icebp
xlat
xchg
adc
insl
test
les
push
stos
insl
mov
mov
aas
fisubl
mov
sar
into
cwtl
jmp
les
rcrb
inc
or
inc
xchg
cmp
cwtl
test
sub
jecxz
jne
sbb
ficoms
or
lret
and
mov
in
and
ljmp
jno
sbb
insb
scas
and
rolb
subl
stos
mov
push
add
pop
sbb
pop
xchg
in
or
cmpl
movsb
js
mov
fistps
lret
mov
sti
dec
mov
aam
mov
test
fiadds
mov
adc
pop
cmp
sahf
jb
push
in
das
push
pop
out
sub
addl
ret
push
inc
sbb
popa
mov
sbb
dec
xchg
jns
filds
sarb
mov
sti
pop
addb
and
adc
data16
sarb
add
lret
aas
les
mov
cmp
idivb
inc
les
fdivrp
dec
pop
mov
or
roll
mov
xlat
repz
movsl
lcall
push
fadds
and
mov
scas
and
loope
push
xchg
rcrb
aaa
scas
jnp
xchg
sub
jle
jo
mov
leave
cmpsl
dec
pop
mov
xchg
jecxz
xor
xchg
int
add
enter
mov
push
stc
test
pop
dec
or
bound
loopne
xlat
popf
addr16
and
xor
dec
movsb
and
mov
lret
mov
adc
jge
cs
lock
cmp
cmpsl
push
sub
push
cs
mov
fs
xchg
into
or
xchg
jecxz
dec
inc
push
jae
lods
cmp
xchg
jp
sub
inc
mov
xlat
push
jecxz
test
lret
cmp
push
add
pop
xchg
sbb
push
popa
sub
call
sub
push
inc
add
mov
push
inc
stc
clc
ret
or
cli
inc
push
mov
mov
popf
rcrb
pop
adc
out
fistpl
fdiv
fistl
into
or
shll
xchg
add
mov
xor
jg
adc
jns
sbb
and
mov
cli
jge
or
lods
fs
lock
adc
xlat
setnp
inc
pop
sbb
lock
or
push
addl
ds
inc
pop
insb
cmpb
inc
cmp
fldl
and
xor
inc
loopne
cwtl
mov
jmp
fisubl
inc
mov
pop
pop
xor
push
loopne
dec
mov
adc
push
cli
fndisi(8087
loop
aaa
fwait
cld
and
std
loope
shrl
insb
subb
jo
popf
leave
jmp
mov
xchg
push
mov
mov
leave
jne
add
les
mov
mov
outsl
data16
add
sub
ret
insb
iret
add
push
pop
xchg
enter
mov
hlt
jmp
loopne
movsl
lcall
js
fs
jecxz
pop
cld
mov
push
arpl
aas
mov
iret
cld
pop
mov
jle
ljmp
pop
lds
jne
in
pop
mov
cmp
clc
mov
jg
sub
out
in
mov
pop
stc
mov
rcrl
fs
jno
cmpsl
mov
xchg
sbb
popa
jns
jecxz
out
xchg
or
cs
jne
cmp
in
add
negb
add
js
addl
test
cmpsb
shr
and
lea
outsl
leave
fadd
dec
jnp
out
cmpsb
mov
fisttpl
sub
loopne
pop
jno
pop
and
or
lcall
xor
mov
fstp
cld
mov
ror
xor
fstl
stos
dec
xlat
add
popa
loop
test
aad
lcall
and
push
repz
shlb
xchg
pop
aad
test
jo
or
out
lret
mov
movsb
adc
adc
je
mov
jno
outsb
int3
aam
mov
subb
mov
xchg
sbb
sub
nop
xor
fcoml
xchg
mov
pop
xchg
xchg
mov
divl
cmp
ja
mov
jl
push
out
out
fstl
mov
push
fldt
adc
lahf
xchg
dec
xor
loopne
cwtl
xor
sub
push
fidivrl
ret
out
or
mov
je
and
insb
mov
gs
push
xorl
imul
mov
sbb
out
jg
pushf
push
sahf
jp
fs
andb
push
push
mov
enter
out
out
push
cmp
jo
pop
mov
js
insl
lods
pop
cmp
jae
pushl
sub
or
pop
mov
mov
mov
xor
xchg
mov
pushf
repnz
mov
dec
fldenv
pop
stos
xchg
add
xor
xchg
pop
gs
dec
pop
pusha
pop
or
out
mov
jg
popa
pop
push
imul
es
mov
or
loope
push
push
add
mov
pop
int
loopne
or
ss
and
stc
sub
dec
mov
push
add
adc
in
out
mov
push
sbb
dec
rorb
push
mov
mov
adc
les
fwait
repnz
popf
push
lea
dec
je
fdivs
pusha
and
pop
xchg
lea
add
mov
ret
and
call
mov
leave
in
shlb
hlt
pop
pop
mov
repz
jle
jmp
mov
pop
push
into
pop
into
xor
mov
ss
outsl
sbb
mov
pop
sbb
fidivs
inc
das
xchg
mov
adc
xchg
push
mov
out
cmp
das
cmpsl
pop
xor
or
sbb
ret
sbb
xchg
ja
ja
adc
pusha
ret
sbb
adc
cld
sbb
mov
pop
jp
jo
fst
xchg
jno
mov
addr16
nop
mov
sub
mov
xor
aam
scas
sbb
sahf
arpl
lock
stos
xchg
fimuls
loopne
in
fld
and
in
ljmp
stos
les
mov
fsubl
and
icebp
into
pop
sbb
shrl
push
gs
sbbb
popf
adc
ja
or
fldcw
fwait
mov
xor
aad
call
test
mov
les
cmc
je
or
imul
fisttpl
push
pusha
sub
imul
rorb
push
fwait
imul
aam
aaa
movsl
aad
cmp
jne
lea
sbb
cs
scas
lds
inc
sahf
push
fdiv
out
hlt
jge
add
add
je
sbb
popa
jbe
pop
orb
rcrl
mov
pop
test
int
xchg
outsb
cmp
rcrb
mov
icebp
stos
mov
xor
cld
data16
cwtl
sub
lea
xchg
adc
cld
pop
cmp
pop
xchg
push
adc
inc
stc
mov
mov
in
ret
imul
xlat
fcmovne
xchg
sar
cltd
cmpsl
push
enter
mov
mov
pop
stos
jno
push
lcall
adc
cmc
pop
push
sbb
gs
mov
andl
das
sahf
mov
jge
xchg
mov
pushf
jecxz
inc
cmpsl
inc
std
ret
fildl
add
adc
adc
rorl
popa
push
in
int3
popf
push
je
or
xchg
mov
jge
repnz
out
dec
lock
jl
sub
ret
fwait
rcrl
movsl
cmp
push
push
push
sahf
add
imul
shlb
xorb
mov
test
sbb
testb
ret
jnp
in
js
cld
or
dec
and
call
and
jb
fiadds
adc
push
ss
movsl
xor
cmp
dec
sbb
or
mov
in
aam
cmp
mov
mov
dec
cwtl
ds
fsubs
cltd
xchg
and
in
pop
dec
dec
add
push
jecxz
lahf
pop
cmp
repz
inc
push
outsb
xchg
fldl
gs
mov
mov
mov
cmp
jle
dec
inc
xchg
or
jno
jns
pop
pushf
lcall
loope
xchg
or
rorb
nop
jns
loopne
pop
sub
pop
or
fdivrl
jne
bound
hlt
rcl
xchg
mov
xchg
scas
shlb
add
jecxz
sahf
dec
ljmp
jne
or
gs
xor
jb
and
xchg
push
fstpl
dec
stc
and
enter
test
hlt
adc
push
shlb
enter
jge
aad
pop
xchg
sub
dec
negl
mov
in
mov
or
out
imul
test
rolb
and
and
adc
leave
fucomi
lods
xchg
jae
bswap
ret
nop
add
call
jp
movsb
cmp
orl
mov
jl
bound
sub
cltd
xor
fldl
in
pop
cmpsb
push
xchg
std
mov
mov
pop
xor
push
push
pop
std
subb
mov
adc
mov
inc
jge
adc
pusha
push
and
mov
test
imul
test
out
jmp
xchg
sub
lods
fdivr
and
sub
popa
or
sbb
adc
inc
popa
out
divl
mov
fcmovnb
cli
nop
jo
sbbl
lock
inc
fwait
lcall
jl
es
pushf
jae
jge
std
lcall
iret
jns
addr16
pop
outsl
inc
jecxz
lea
shrl
add
shlb
into
fisubs
push
mov
ja
mov
fucomp
cs
xor
push
jecxz
sti
add
mov
push
mov
sub
adc
pop
mov
jecxz
sub
repnz
sub
push
out
jae
mov
inc
pop
popa
aas
or
hlt
adcb
mov
pop
mov
cmp
lret
pop
roll
cltd
in
xchg
jb
and
in
push
mov
addr16
int3
inc
mov
divb
fldenv
sbbl
imul
leave
jg
outsb
out
mov
sbb
in
in
push
and
sbb
add
enter
dec
add
jge
cmpsb
aad
inc
in
mov
jno
scas
inc
inc
hlt
pop
mov
aas
fsubrs
and
lds
jl
sub
orb
xorb
inc
sbb
mov
xchg
shll
mov
mov
bound
cmp
icebp
fcmovu
iret
mov
inc
cmp
or
idivl
int3
inc
dec
and
aam
imul
and
jb
and
push
ret
fcmovnu
cli
adc
jne
xchg
int
push
cmp
loopne
ss
sti
clc
mov
insl
adc
sarl
repnz
call
jno
pop
pop
fisttps
inc
aad
sub
movsb
xlat
mov
je
xor
leave
mov
out
mov
vmwrite
xor
mov
adc
push
mov
outsl
inc
xor
jno
hlt
loop
imul
adc
cmpsb
sbb
icebp
xchg
out
add
sub
in
xchg
leave
push
adc
shl
hlt
sbb
repnz
imul
int3
mov
bound
pop
pop
pusha
ret
repz
jmp
pusha
lret
add
insl
sahf
jl
ret
sub
outsb
dec
imul
mov
inc
cmpsl
mov
sbb
mov
lret
pusha
jecxz
ret
mov
callw
jnp
pusha
cld
fsubs
sti
nop
inc
xchg
pop
cmc
pop
ret
addr16
out
call
popa
inc
mov
xorb
mov
sub
add
out
sbb
in
xchg
cld
mov
iret
jle
pop
push
xchg
mov
jecxz
inc
or
stos
jmp
pop
test
inc
cwtl
pop
lea
cmp
insl
mov
adc
push
icebp
std
xchg
xor
fisubrl
test
jbe
aas
adc
xchg
and
movsb
outsb
pushf
xor
mov
outsl
ss
popl
xor
mov
dec
sub
rcl
and
outsb
sbb
xchg
pop
in
inc
popf
ljmp
daa
mov
in
ja
cmp
sbb
xor
push
out
or
inc
enter
adc
orb
pop
rol
xchg
sub
fs
inc
lea
mov
dec
jbe
pop
lods
insb
aas
inc
xor
inc
jge
mov
cmp
inc
inc
cmpl
les
push
scas
mov
imul
mov
mov
pop
dec
pop
divl
mov
out
xchg
pop
jge
mov
or
dec
movl
mov
and
sarb
frstor
add
sub
add
dec
ror
xor
mov
ss
outsb
imul
pand
xchg
mov
pop
test
dec
int
insb
mov
xor
call
in
jg
sar
push
pop
les
or
outsb
enter
mov
cld
data16
mov
pop
add
add
push
mov
xor
in
imul
nop
mov
ret
jge
cmp
mov
cmp
xor
call
xor
inc
ret
pop
jbe
mov
cs
mov
lret
or
or
xor
mov
into
cwtl
dec
aaa
jno
out
fisubl
pop
push
cs
jl
adc
mov
push
jns
hlt
fsubs
push
aas
xchg
nop
test
lret
or
xor
arpl
push
dec
pop
insb
loopne
dec
push
sbb
push
mov
jnp
dec
cld
into
gs
or
icebp
icebp
and
or
lea
xchg
int
and
cmp
sbb
xchg
jmp
test
sbb
mov
cmp
cs
rolb
and
xor
sbb
jns
mov
or
fmulp
and
mov
pop
mov
push
movsb
add
push
cmp
pop
loop
push
testb
inc
push
sbb
js
rcrl
add
repnz
push
ret
clc
jb
cld
mov
adc
lods
cmp
jno
and
insb
in
scas
jbe
dec
xchg
or
push
push
jae
mov
sbb
jnp
jl
popf
dec
inc
dec
dec
dec
loopne
lea
jne
or
imul
cwtl
nop
dec
mov
dec
push
scas
int3
int
inc
fnstenv
inc
or
nop
fwait
jbe
nop
fcmovu
jle
clc
xor
xor
cmc
movsl
cld
cmpb
sub
push
mov
inc
xchg
and
push
mov
sahf
xchg
adc
mov
jne
out
xor
xor
sub
xor
jnp
lds
cltd
outsl
mov
add
inc
mov
jecxz
sbb
sarb
mov
repnz
adc
cmc
inc
mov
mov
lahf
loopne
fisubl
adc
ljmp
mov
jmp
nop
lcall
arpl
jae
or
stos
stos
jbe
sub
js
ja
dec
xchg
push
or
mov
add
mov
or
fwait
mov
push
test
jmp
in
mov
inc
lret
pop
outsb
cld
mov
test
pop
cmpl
enter
mov
sbb
stos
mov
mov
jno
xchg
mov
xlat
cmp
cmc
lcall
inc
sub
out
in
ficomps
sarb
les
int3
mov
es
cmp
mov
std
jae
fwait
into
and
pop
add
jmp
repz
cli
jae
test
addb
fsub
mov
mov
mov
pop
cmp
pop
inc
pop
dec
outsb
stc
ret
jmp
loopne
push
sub
fsubs
xlat
xor
xor
sahf
pop
arpl
insb
or
inc
es
insb
scas
mov
pop
fwait
xchg
xchg
vpunpckldq
stos
dec
adc
and
ss
test
scas
inc
outsl
lods
shll
add
mov
stos
imull
or
pop
mov
pop
mov
and
pop
sub
mov
loope
pop
push
cwtl
inc
gs
push
dec
ret
xlat
pop
adc
inc
or
bound
or
loope
addr16
push
iret
inc
lods
cmp
pop
jns
cld
add
jle
pop
xor
stos
bound
mov
pop
test
and
inc
sti
aam
loope
xlat
sbb
xor
shll
fbld
fcoml
xor
mov
xor
jge
jne
push
rclb
jp
cmp
cwtl
ret
lock
mov
inc
mov
sti
insb
sub
ficoml
aas
sar
jns
fucom
jp
hlt
in
xor
je
mulb
xchg
xchg
out
inc
dec
movsb
outsb
lret
pop
insb
pushf
push
xlat
cmp
loopne
fists
outsb
push
lods
or
sub
or
add
pop
sti
outsb
pop
pop
rcl
mov
push
les
sub
push
pusha
scas
mov
or
test
mov
inc
lret
add
pop
mov
xor
gs
add
in
sbb
adc
ds
cltd
call
jmp
pop
pop
in
sbb
daa
jns
lret
jns
outsl
lahf
outsb
sub
and
iret
adc
repnz
mov
out
push
sbb
sub
or
lock
fstl
subb
inc
jnp
sbb
arpl
inc
xor
out
hlt
fwait
pop
xchg
sahf
and
or
rorl
jne
jecxz
mov
jne
jbe
cmp
rolb
cwtl
mov
shrb
xchg
cmp
movsl
jge
stos
push
iret
das
sub
imul
roll
mov
out
push
sub
loope
test
repz
aam
xchg
arpl
cmp
into
jg
lret
xchg
scas
lods
pop
adc
fwait
je
roll
mov
shl
imul
cltd
sub
sbb
sub
les
jg
dec
or
subb
xor
xor
scas
add
pop
testb
loop
insl
fldcw
in
mov
int
divb
xor
popf
pop
sub
and
ret
pop
pop
xor
mov
mov
loope
or
cmp
enter
mov
jb
nop
mov
in
out
xchg
daa
loopne
cld
and
sub
cmp
jg
sahf
and
lret
mov
pop
xor
sahf
mov
sbb
sti
mov
add
insb
mov
cltd
cwtl
push
mov
cld
inc
in
xchg
jno
push
dec
inc
mov
dec
xor
cmpsl
jl
mov
sub
xchg
scas
sub
je
jmp
xchg
out
cmp
adc
popf
push
jne
mov
xchg
mov
mov
loop
or
cmp
dec
adc
shr
push
adc
test
xor
dec
or
xor
out
add
je,pt
xchg
pop
push
inc
jnp
xlat
popa
mov
out
ljmp
xor
rcl
insb
xchg
pop
sbb
negl
out
insb
add
scas
test
imul
ret
jne
xchg
push
mov
cmp
sub
jnp
ret
enter
jbe
vshufps
lods
loop
push
fldl
pop
sbb
sahf
add
pop
mov
jns
stos
movsb
xor
inc
sub
push
testl
or
cmp
sarb
aas
les
or
cld
inc
leave
adc
xchg
arpl
push
mov
mov
push
inc
xor
in
add
lds
xchg
or
adc
add
xor
fmulp
jle
enter
inc
stc
mov
push
adc
fdivrl
roll
push
inc
add
or
movsb
sbb
push
mov
das
and
mov
js
clc
movsl
cmpsl
jecxz
or
and
mov
roll
ror
cld
mov
mov
bound
pop
sub
cmp
add
scas
sahf
mov
sbb
mov
jb
faddl
pop
pop
xchg
pop
xchg
and
int3
out
cltd
add
loopne
cmp
enter
or
xchg
mov
inc
add
sub
daa
das
adc
xor
and
mov
jno
sbb
lods
lret
inc
aad
push
jns
mov
push
stos
loope
movsl
js
jns
pop
or
mov
add
insb
int
test
cpuid
adc
sub
dec
jg
jnp
xchg
imul
push
jae
lock
pop
outsl
ljmp
adc
xor
sbbl
xchg
dec
out
lods
jge
cld
dec
add
imul
in
add
mov
out
xor
mov
inc
imul
inc
sub
fildll
sub
int3
lock
xlat
notb
test
lret
lds
add
sub
or
push
push
popf
aas
outsl
out
rcrb
sub
dec
lcall
sub
sub
outsb
mov
dec
imul
loopne
mov
dec
inc
or
pop
mov
loop
inc
add
xor
xchg
loopne
lods
add
or
cli
imul
aad
out
lahf
ja
testl
stos
xor
sub
rorl
mov
je
mov
lock
test
xor
pop
sub
stos
and
dec
xor
push
int3
and
and
xchg
inc
mov
adc
xor
push
xchg
call
pminub
faddl
shlb
fs
and
and
hlt
popa
fstpl
sbb
lea
je
mov
mov
mov
mov
mov
movsb
nop
pusha
rorb
push
pushf
rcrb
mov
and
rorb
je
xor
push
int3
mov
repnz
lock
dec
shrb
inc
pop
outsb
inc
repnz
pop
cmpsl
sub
arpl
cmpsl
fisubl
push
ljmp
add
sub
sub
mov
outsb
pop
cs
mov
sbb
push
leave
iret
cmpsb
enter
mov
push
fimull
rcrl
scas
decl
fcomps
inc
loope
jo
int
mov
vpsubb
shll
mov
push
stos
fisubl
sbb
push
sub
imul
imul
sub
popf
lea
enter
lret
sbb
in
pop
xchg
clc
inc
push
push
pop
inc
fcmovne
pop
bound
scas
add
xchg
inc
lcall
les
repnz
push
loope
push
pop
pusha
push
sbb
mov
dec
stos
pop
std
shll
mov
xchg
ds
cld
arpl
jnp
add
stc
shll
icebp
js
jbe
test
mov
jns
adc
mov
cmp
push
in
mov
jle
push
bnd
pop
lods
inc
inc
jecxz
lods
mov
push
aam
fidivs
je
out
mov
xbegin
push
mov
pop
aam
xor
xchg
pop
and
cltd
adc
movsb
loope
or
sti
stc
clc
adc
into
lret
rol
cmc
inc
and
lret
pop
lret
lret
imul
jb
push
mov
add
inc
dec
sbb
mov
fiadds
xor
and
xchg
pushl
inc
insb
push
mov
shll
imul
cmp
pop
fnstcw
push
loope
mov
pop
cmpsl
push
or
push
test
movsl
mov
pop
dec
iret
or
jbe
cmpsb
cmp
xchg
fcmove
in
inc
hlt
push
mov
mov
xchg
and
cwtl
aam
jb
and
nop
es
shlw
xor
gs
pop
cmp
sti
mov
sub
fnstsw
ds
pusha
ja
mov
push
sub
jae
xchg
cmp
imul
add
or
jns
sub
lea
test
mov
jns
mov
call
mov
lret
mov
xchg
sub
iret
cmp
bts
clc
sub
mov
aaa
addb
lock
ficomps
test
enter
or
fsubs
mov
mov
cmc
cmp
subb
shrl
and
jbe
xchg
sub
mov
xchg
jae
in
fisubl
in
pop
imul
int3
mov
aam
push
test
dec
repz
arpl
insl
add
scas
push
cmp
out
mov
ljmp
outsl
stos
mov
and
xor
push
add
sti
push
mov
icebp
iret
lods
in
mov
leave
sbb
mov
xor
outsl
jnp
jno
jmp
mov
push
xor
or
mov
and
dec
mov
lcall
mov
adc
rorb
inc
dec
xchg
adc
jp
fcoml
push
or
lret
iret
xchg
imul
xchg
inc
xor
sub
cmp
mov
ret
push
xchg
test
inc
mov
sti
std
mov
mov
icebp
mov
xor
cmp
add
jns
mov
in
mov
ds
popf
lahf
mov
ret
xlat
cmc
and
scas
lods
enter
cmova
roll
cmp
cwtl
es
inc
inc
out
jg
add
xor
and
mov
inc
cmp
scas
lock
xor
in
jge
pop
cmp
push
adc
xlat
xor
push
push
ljmp
cmp
arpl
cmp
jle
push
mov
add
adc
sbb
cmpsl
mov
movsb
arpl
js
dec
out
and
jae
and
popf
cmpsl
fdiv
mov
jge
pop
sub
or
lods
ret
sbb
xchg
out
es
sbb
lock
stc
add
bound
test
dec
sbb
push
inc
pop
gs
add
fmul
hlt
push
jnp
loope
jno
lods
mov
dec
jmp
outsb
adc
add
sub
ret
and
xchg
rol
daa
or
outsl
xor
xor
addr16
cmp
mov
scas
arpl
jns
lcall
ljmp
ds
ljmp
jnp
mov
hlt
jmp
lret
je
dec
js
bound
jb
data16
lock
loopne
and
mov
mov
insl
fsubs
push
bound
dec
mov
and
cmp
lock
call
das
jb
insl
cmp
cmp
add
rcl
iret
add
loop
cwtl
dec
sahf
push
adc
cltd
repnz
adc
mov
push
jnp
test
dec
xor
fsubrs
dec
inc
rcll
cmp
ret
pusha
cs
pop
push
jae
pop
sub
je
mul
in
and
add
pop
popa
jmp
mov
jns
shl
jmp
stos
stc
adc
lods
adc
xchg
xor
popa
mov
mov
xchg
pushf
pop
repz
jmp
jo
test
adc
fdiv
pushf
mov
or
add
cmp
pusha
outsl
jnp
lods
pushf
pop
mov
dec
mov
push
leave
inc
or
js
incl
repnz
shl
adc
aam
pusha
leave
movsb
imul
ljmp
dec
lods
pop
sbb
fists
outsl
jae
mov
lock
gs
faddl
dec
mov
bound
shll
out
fs
into
cld
mov
pop
cld
cld
jge
push
xchg
sbb
jge
loopne
in
dec
mov
mov
lret
call
movsl
jne
xchg
pop
xor
mov
mov
mov
cmp
dec
push
adc
sahf
in
xchg
pushf
scas
iret
jge
push
mov
je
jp
scas
repnz
stc
or
jae
mov
in
pushf
xchg
nop
mov
clc
test
and
add
xchg
sti
fisttpl
fcmovb
inc
xchg
adc
mov
das
aad
jbe
dec
sub
pop
ss
mov
xchg
data16
sahf
mov
imull
lods
cmp
mov
sbb
sbb
jle
loopne
xchg
mov
mov
cli
cmp
es
lret
adc
inc
out
sub
push
flds
jle
js
adc
mov
sub
stc
pop
lds
clc
xor
stos
inc
daa
push
fdivrp
adc
jb
jnp
push
testb
pop
call
ja
sub
jp
sahf
sbb
xor
sbb
clc
xchg
xchg
mov
xchg
adcl
pop
cmp
popa
shll
push
or
out
dec
insb
dec
xchg
aas
mov
mov
in
lret
dec
loop
sub
dec
push
mov
inc
cli
jno
pop
and
mov
mov
adcl
pop
push
ljmp
bound
push
ret
push
jb
aaa
jl
addr16
pop
mov
shlb
jae
mov
in
sub
sar
cmp
insl
lcall
pop
jl
mulb
out
xor
movsl
adc
xchg
push
data16
push
aad
movsl
out
pushf
mov
outsb
cmc
addr16
loopne
sbb
sub
loopne
arpl
test
inc
add
std
adc
dec
loope
add
fstps
add
sti
pop
jno
sbb
sbb
mov
mov
sub
push
mov
adcb
jle
cli
jns
lods
xor
xchg
ljmp
loopne
push
pushf
sub
or
pop
mov
push
pop
cld
pop
cmp
clc
mov
jecxz
dec
push
jp
cmp
outsb
lahf
repnz
xchg
pop
imul
inc
pop
in
sbb
adc
repnz
das
push
filds
dec
mov
out
mov
jl
add
jo
xchg
sbb
xor
jl
insb
andb
out
xchg
loop
push
mov
mov
aas
push
inc
cmpl
mov
aaa
in
adc
mov
gs
mov
mov
imul
sbb
sub
xchg
mov
adc
pop
rolb
sub
scas
repz
inc
mov
mov
xchg
mov
sbb
xor
cld
mov
inc
xor
xchg
fdivs
push
jecxz
mov
lahf
inc
jne
loop
inc
sub
test
cmp
fisubs
inc
es
cmpsl
mov
push
mov
nop
jb
enter
aam
mov
std
popf
adcb
js
inc
sub
jp
sub
mov
repnz
jle
mov
jmp
and
sbb
xchg
cli
push
movl
out
and
xchg
pop
lcall
jbe
xlat
cwtl
lahf
rclb
lahf
push
mov
lcall
scas
cs
mov
and
xchg
ficoml
push
jo
mov
push
inc
push
dec
daa
xor
cmp
push
xchg
and
xor
jle
and
xor
inc
lods
loope
sbb
and
push
jp
cmpl
mov
sbb
and
lds
lods
sub
stc
adc
inc
cli
mov
in
or
pop
rcrb
inc
mov
clc
shrl
mov
jg
add
mov
ficompl
push
mov
test
pop
add
fwait
lods
pop
orb
in
sub
pop
xchg
pop
aam
iret
shll
or
cmpl
shlb
daa
or
and
adc
sahf
pushf
imul
pop
fidivrs
hlt
pusha
pop
add
mov
jge
fdivrs
lret
movsl
or
mov
mov
jnp
dec
lcall
sbbl
subb
into
lods
mov
popa
pusha
movsl
pop
mov
outsb
loope
rclb
pusha
lea
and
insb
je
or
mov
ja
ret
dec
into
or
add
jge
push
movsl
scas
cmc
pop
or
ffreep
js
in
ffreep
das
mov
incb
dec
fs
mov
pop
push
lods
mov
adc
mov
enter
in
les
inc
cmp
stc
fs
sbbl
cmp
out
int3
filds
pop
xlat
aad
ret
fdivs
popf
push
jle
dec
push
jle
mov
lcall
adc
jmp
int
test
int
mov
cmp
outsl
pop
adc
sbb
cli
lahf
sete
xor
cmp
pop
aam
cltd
mov
adc
test
pop
imul
repz
or
insb
pop
dec
inc
movsl
mov
sbb
out
into
out
fwait
lock
dec
aam
push
sub
andl
pusha
lds
inc
test
movsl
jge
mov
and
xlat
test
in
pop
lcall
cmp
stos
sub
aam
cmc
push
fidivrl
inc
ss
imul
mov
xchg
cmpsl
fisubs
pushf
push
xorb
jae
lea
bswap
imul
out
add
enter
cmp
fs
mov
je
movsl
arpl
xchg
rcrl
mov
xlat
add
sahf
cli
icebp
out
insl
pop
cmp
jnp
pop
test
in
jmp
pop
imul
test
jns
add
dec
push
clc
pusha
mov
push
in
mov
aaa
into
mov
mov
mov
mov
sub
je
add
xchg
sub
imul
or
call
pop
cmpsl
rorb
cwtl
stc
in
jmp
scas
jl
outsl
inc
or
in
enter
xchg
mov
cmp
pop
ljmp
mov
xchg
adc
test
cwtl
int
mov
in
mov
pop
cmp
das
in
cmp
cs
imul
jne
jns
sub
cmp
in
push
mov
jo
stos
out
cmc
repnz
int3
sub
cltd
sbb
aaa
fldt
sub
movsb
mov
les
add
mov
nop
push
ja
push
xchg
mov
cld
in
adc
mov
push
jg
mov
add
sub
mov
mov
dec
aaa
cmpl
addl
insb
xchg
push
int
fistps
fdivrl
mov
lahf
cld
jle
mov
call
pushf
fsubs
xchg
test
pop
hlt
cs
cmp
sti
fyl2x
lahf
lea
cmpsb
inc
mov
inc
outsl
mov
sub
xchg
sub
add
xchg
sub
or
sub
xchg
pop
incb
sahf
or
or
inc
pop
lds
ja
mov
or
mov
mov
sbb
enter
or
and
jle
cmpsl
mov
xor
fsubr
mov
out
popa
std
fldcw
add
js
jle
push
cli
pop
dec
test
add
cli
test
adc
in
mov
scas
ja
sahf
outsl
mov
mov
sti
pop
adc
stc
jl
pop
mov
sbb
sarl
jmp
mov
and
in
hlt
inc
jg
ja
mov
mov
pop
fstpl
sbb
movsb
mov
enter
mov
xor
int
adc
cli
push
in
outsb
add
ret
movsb
into
jns
inc
jp
fcompl
mov
jge
mov
jbe
and
xor
jns
imul
pushf
fxam
jnp
scas
adc
sub
inc
dec
dec
call
mov
cmpsb
inc
lods
push
push
cmp
xlat
mov
pushf
lds
push
mov
or
sbb
jae
xchg
cmp
call
push
outsl
inc
sub
pop
mov
mov
pop
mov
xlat
icebp
pop
cmp
testb
cmc
cmpsb
stos
out
mov
mov
mov
pop
mov
ss
rcrl
push
in
cli
les
jl
lret
lods
and
bound
mov
sbb
clc
loope
add
out
push
push
popa
icebp
shlb
test
repz
push
leave
jns
dec
cli
mov
cmpsl
xchg
jbe
imul
and
cs
pop
rcl
xchg
mov
cwtl
inc
daa
fwait
sahf
insl
mov
add
adc
dec
xor
test
xchg
push
xor
sub
loopne
out
lock
call
stos
icebp
sbb
or
imul
mov
filds
fldl
sarb
mov
adc
icebp
pop
loop
lcall
add
das
push
js
cli
xor
xchg
or
loope
pop
sbb
sbb
cmp
xor
xlat
cli
cltd
lea
mov
mov
dec
in
xor
outsb
in
cmp
mov
loope
adc
or
cwtl
lahf
mov
pushf
sbb
push
bound
cmp
call
lahf
std
dec
pop
add
xchg
and
push
xor
mov
pop
fisttpll
jno
mov
jae
test
daa
popf
cmp
lea
inc
add
daa
dec
adc
dec
mov
inc
fucom
mov
leave
lret
sbb
adc
mov
hlt
xor
xor
mov
pop
dec
lds
movsl
sbb
in
adcb
xor
xchg
jmp
xlat
sub
sbb
adc
pop
pop
sub
push
dec
js
or
lea
pop
sarl
sbb
lret
hlt
pop
nop
lea
imul
loope
cli
add
xchg
adc
pop
popf
stc
out
ss
inc
int
jne
inc
push
icebp
idiv
cmp
push
clc
and
lret
fnstenv
mov
sub
mov
mov
out
mov
inc
loopne
call
ret
sar
push
in
xchg
in
test
mov
pop
or
add
xor
and
imul
int
pop
push
ja
adc
shll
xchg
xchg
lods
dec
xchg
ss
nop
pop
sbb
arpl
and
mov
fcompl
dec
jae
mov
pop
das
sbb
fistpll
inc
lret
pop
jae
mov
add
mov
je
xor
xor
mov
mov
jo
subb
and
xlat
fidivs
add
aaa
dec
test
out
mov
arpl
dec
pop
inc
and
stc
mov
or
cmpsb
mov
fists
xchg
sbb
inc
arpl
and
fcmovb
test
mov
hlt
or
lock
or
xchg
xor
mov
push
cmp
jecxz
mov
cmp
out
aaa
mov
scas
enter
inc
cmpsb
jmp
enter
add
adc
cld
js
jb
jbe
adc
or
lahf
pop
movzwl
data16
jnp
ret
shr
aam
pop
out
jae
into
jp
ret
std
in
sbb
dec
mov
loope
push
testb
movsl
sub
sub
dec
adc
xlat
cmp
negb
mov
pop
out
lods
stos
push
xor
loopne
fsubrs
testl
mov
sbb
pop
sti
add
xchg
adc
fs
add
xor
push
dec
adc
inc
lcall
adc
jecxz
xor
ss
jmp
sbb
in
lahf
add
inc
mov
iret
dec
jno
mov
loopne
or
and
loop
sarl
call
lea
push
lret
in
dec
arpl
xor
mov
pop
sbb
cmp
pop
xchg
jno
icebp
push
addb
jge
mov
out
ficoml
xchg
movsb
divb
mov
xor
dec
ss
pop
xchg
adc
xor
loop
xchg
dec
popa
mov
repz
fmuls
outsb
adcb
popf
cmp
push
movsl
inc
bndldx
popa
or
rolb
mov
inc
repnz
mov
push
cli
fwait
mov
frstor
iret
sub
sub
mov
xchg
add
push
in
sbb
in
xchg
je
lods
dec
pop
lods
jb
popa
movsl
cmpsl
or
jb
xchg
test
mov
push
enter
mov
hlt
rcrl
xor
sub
lock
xlat
and
jg
add
ret
insl
or
mov
sti
lcall
jae
mov
dec
pop
sub
push
cmpl
jnp
mov
mov
fmuls
add
push
push
pop
inc
pop
out
push
mov
cmp
pop
bound
cwtl
jl
xor
push
sub
cmpsl
es
imul
outsb
xor
mov
icebp
sub
lods
jnp
fcomp
fcomps
repz
mov
fistl
cmpb
orl
mov
mov
inc
push
rclb
inc
add
jg
xchg
inc
mov
cld
sahf
mov
shrb
xorw
hlt
ret
out
adc
in
push
data16
aam
rcr
and
push
aaa
and
inc
jno
add
cmp
repz
push
js
stos
and
lret
mov
or
jne
inc
out
addr16
out
in
popa
fbld
dec
jp
push
loope
inc
sub
adc
and
jbe
mov
std
int
lret
push
push
subb
push
rclb
add
aas
dec
idivl
imul
les
xor
jno
push
out
lahf
jns
js
std
test
ret
das
ficoms
cmc
mov
pop
out
ja
dec
jge
arpl
and
mov
xor
shll
xor
jle
and
mov
sub
lods
push
bound
or
pop
aaa
jno
gs
cmpsb
mov
std
aam
cmp
in
jns
push
in
jb
addr16
int
jbe
fstl
imul
push
xchg
les
dec
fwait
cmc
pop
xor
or
imul
scas
adc
xor
loop
mov
mov
push
in
mov
sbb
jne
fstps
mov
and
sub
cmpsb
addb
inc
cmp
sbb
add
cmp
loop
push
lahf
add
or
vandps
enter
outsl
or
adc
insl
push
add
leave
xchg
jle
icebp
xchg
or
frstor
or
cs
scas
idiv
repnz
inc
inc
and
test
push
xorb
or
sub
xchg
pusha
mov
sub
shll
in
mov
mov
xchg
cmp
push
mov
jecxz
movsl
push
ss
mov
gs
jbe
cmp
pop
daa
popa
push
or
adc
fcoms
pop
ret
xor
xchg
lea
xlat
lock
jmp
mov
pop
popa
aad
sbb
movsl
and
push
stos
mov
mov
je
loope
sar
dec
xchg
pop
inc
stc
pop
popf
add
cmpsl
jp
xchg
and
mov
out
inc
stc
push
lods
test
aas
mov
adc
and
fsubrs
icebp
ja
outsl
jmp
repnz
in
adc
dec
out
mov
add
cmp
xchg
or
xor
sahf
inc
leave
hlt
sahf
adc
xchg
jo
dec
jp
lret
jl
pop
popf
sub
imul
adc
fabs
xchg
mov
cli
sub
xlat
jo
lcall
push
jmp
ficoms
pop
subb
xchg
sub
pop
in
push
jmp
add
xor
and
ss
xchg
push
push
and
jae
insb
dec
lret
add
xchg
loop
xchg
pop
pop
mov
lods
jmp
lods
adc
out
out
rorl
inc
jno
jg
cld
pop
cli
jp
and
or
scas
rcr
push
sbb
rep
decl
jnp
mull
push
push
xchg
sub
aaa
aam
cltd
push
inc
pop
jle
mov
xchg
pop
cltd
test
and
pop
stos
add
cmpsl
imul
ret
xor
adc
je
sahf
push
std
jb
jp
stos
out
pop
pop
push
xchg
cmp
aaa
shrl
pusha
inc
sti
xchg
mov
push
sub
pop
aas
rcrb
push
lds
call
jl
pop
fiaddl
xor
cltd
fstpl
imul
movsb
pop
aam
or
sbb
clc
or
push
loop
and
add
cmp
lcall
mov
stc
mov
dec
gs
sbb
pop
or
jbe
mov
rcrl
pop
sbb
int
es
popa
lahf
adc
mov
ret
xchg
jae
pushf
push
xchg
xor
cmp
xor
sarl
nop
adc
dec
popa
add
mov
sbb
push
mov
dec
and
mov
pop
loop
punpckhdq
dec
mov
add
lcall
loopne
jl
orb
mov
fldenv
mov
pop
cmp
rclb
movsb
inc
imul
add
mov
in
ljmp
jne
push
fdivrl
sub
mov
adc
mov
adc
add
push
dec
daa
push
jmp
movsl
fwait
adc
cmp
or
stos
mov
jae
outsb
sbb
mov
fimull
sahf
dec
jo
ss
stos
or
fcompl
lods
push
test
in
lret
xchg
xchg
imull
add
push
inc
sub
xor
test
and
imul
loop
pop
loopne
bnd
sub
mov
pop
sqrtps
inc
push
addb
lea
mov
and
xlat
xor
sbb
xchg
mov
adc
sub
iret
or
addr16
pop
mov
nop
mov
cli
inc
pusha
mov
dec
int
sub
insb
pop
cltd
push
insb
push
cmc
orl
out
xchg
repnz
mov
add
insl
xor
in
pushf
cmp
movsb
mov
and
mov
dec
stc
xchg
sub
outsb
data16
cmpsl
push
lret
mov
add
out
mov
arpl
dec
jb
and
cmp
mov
add
fsubp
xchg
pushf
jb
mov
popf
sub
and
inc
out
testb
cld
fs
xchg
js
pop
aam
jne
loopne
mov
mov
repnz
push
pop
push
out
sbb
fnstenv
outsl
out
aaa
int3
bound
imul
mov
and
iret
arpl
xchg
mov
pop
push
xor
sbb
push
mov
sub
loop
gs
add
sbb
mov
and
xchg
pmuludq
cmp
dec
insl
mov
add
ja
loopne
popf
push
sar
pop
cmp
pop
xchg
sbb
ret
adc
mov
jg
mov
dec
aaa
pop
or
and
test
aaa
mov
and
xor
xor
jge
jbe
popa
pusha
insb
fistl
mov
movsl
adc
mov
xchg
dec
mov
popw
sub
popa
xor
xor
pop
sbb
cmpsl
jne
out
sbb
out
test
add
fiadds
lods
push
dec
fs
inc
sub
add
adc
into
scas
xchg
mov
mov
xchg
out
inc
adc
mov
dec
movsb
dec
lcall
or
or
gs
ljmp
shll
sti
in
push
xchg
mov
rcl
xlat
clc
and
adc
and
mov
stos
ret
mov
rcrl
mov
dec
adc
bound
push
fnstcw
dec
mov
cmpsl
out
fldenv
adc
mov
xorb
out
jne
test
ficomps
clc
pop
lods
dec
add
into
ret
lret
add
push
cmp
iret
int
dec
daa
enter
jge
test
js
test
sarl
dec
mov
push
cli
dec
pop
test
xchg
inc
js
pop
add
hlt
and
out
fdivr
adc
in
popf
mov
sub
inc
push
adc
fs
cld
inc
into
xchg
dec
mov
mov
call
lock
xor
and
mov
pop
mov
inc
pop
imul
cli
push
mov
dec
add
lcall
sbbb
push
mov
dec
repnz
xor
in
test
mov
arpl
inc
sbb
cmp
xorl
xchg
and
cmc
and
lods
int3
xchg
popa
and
les
out
sbb
shll
lods
test
cli
js
or
adc
dec
scas
or
addr16
cmp
lcall
pushl
xor
shll
scas
cmp
pop
movsb
dec
or
push
out
test
sub
nop
icebp
mov
mov
shll
xchg
mulb
dec
outsb
lea
cli
cmp
mov
das
fucomip
int
dec
lods
jns
xor
ss
and
mov
inc
inc
ror
cmp
mov
shrl
pop
mov
loop
and
and
push
daa
xor
cmp
inc
out
testl
cmp
in
dec
sbbl
pusha
or
fstp
push
add
xor
sbb
lds
lock
shll
ds
lods
dec
xlat
cmp
xor
mov
dec
outsb
sub
and
fucompp
das
mov
das
sbb
mov
jg
cmp
sahf
inc
ss
inc
imul
dec
mov
push
lcall
addr16
psubq
sbbl
and
lcall
dec
fldl
scas
xchg
mov
dec
push
xchg
in
dec
xchg
push
adc
or
rcll
test
sub
shrw
jae
shl
jg
jmp
mov
cmp
lock
ljmp
cmp
and
dec
inc
push
sub
add
pop
shlb
jge
jg
leave
popf
dec
sub
mov
inc
mov
fs
and
inc
push
dec
and
mov
lock
pop
jae
pop
mull
jg
sub
mov
cmp
sahf
pop
push
or
pushf
mov
push
sarl
jbe
clc
mov
mov
mov
cmpb
and
nop
mov
xchg
or
aam
adcb
or
mov
push
or
mov
jo
popa
push
sbb
push
lret
dec
dec
mov
fs
ljmp
and
push
popa
dec
roll
cli
mov
jle
cmp
movb
xor
pop
in
repnz
bound
ss
iret
in
dec
out
les
out
sbb
ljmp
lock
cmp
inc
jle,pt
loopne
aam
in
orl
jmp
andl
ds
enter
ret
adc
mov
mov
mov
pop
jmp
ret
pop
xchg
xchg
mov
and
or
icebp
sbb
xchg
mov
cmp
imul
add
add
leave
ret
out
jg
inc
pusha
jnp
lahf
lea
sti
push
or
fcoml
inc
push
shl
mov
dec
xor
jb
test
cwtl
mov
jecxz
fdiv
pop
dec
pop
xor
xchg
ja
xchg
iret
adc
push
popf
out
aam
push
or
sahf
addr16
movsl
dec
sub
dec
inc
mov
or
mov
aaa
mov
dec
repnz
adc
dec
fwait
xor
sbb
push
dec
adc
lcall
sub
push
pop
shrl
lret
add
xchg
xor
pusha
lock
adc
xorl
rolb
adcl
or
fstpt
shlb
ficompl
data16
xchg
out
insb
xchg
jnp
adc
push
push
sub
rcrl
xchg
ror
addr16
insb
lods
aaa
arpl
cmpsl
sub
inc
xor
aad
inc
dec
ljmp
push
loop
insb
jmp
in
iret
aas
jmp
fmul
sub
push
inc
jne
dec
test
xlat
ds
dec
add
lahf
jne,pn
stc
ret
adc
popf
orb
sbb
xchg
mov
dec
insb
adc
iret
orl
mov
mov
movsl
stos
jnp
loope
ds
movsl
pushl
pop
adc
ficompl
push
in
jmp
insb
mov
inc
rorl
jle
out
adc
sub
pop
inc
shl
xchg
add
out
push
out
sub
mov
or
outsl
push
pop
outsb
adcb
inc
idivl
inc
mov
test
mov
loope
xor
sub
sbb
cli
xchg
lods
sarl
dec
in
flds
mov
fldt
fs
mov
in
xor
xchg
mov
cwtl
aas
push
icebp
mov
out
push
jle
aaa
xor
sbb
ret
fcompl
jle
lret
sub
dec
pop
ficompl
add
out
push
popa
adc
scas
cs
incl
push
sub
sbb
push
mov
rclb
pop
loope
mov
mov
les
loope
mov
and
in
js
aas
mov
ficoms
in
mov
push
mov
pop
cmp
xchg
daa
push
sub
or
repz
cmp
push
xchg
adc
sub
dec
jb
mov
imul
jg
enter
inc
mov
das
xchg
mov
sub
push
leave
push
into
or
out
loop
pop
mov
jne
les
add
xchg
push
sbb
popf
jbe
adc
das
push
xor
pop
jb
ljmp
bound
rcll
call
addr16
stos
repz
ljmp
gs
pop
mov
dec
pop
sub
lret
je
jmp
fbld
mov
jg
not
xchg
xchg
ja
fdivs
shll
mov
pop
lods
repz
inc
add
rcll
repnz
shll
push
leave
pop
lcall
or
xchg
mov
xor
jo
inc
or
jmp
push
xchg
lret
mov
push
mov
or
movsb
or
test
inc
mov
pop
inc
push
jl
xchg
ret
scas
xor
ret
adc
gs
or
rclb
scas
pop
inc
adc
xchg
and
aam
mulb
lods
out
inc
push
scas
icebp
mov
xchg
sbb
leave
mov
mov
sub
aaa
fsubl
mov
sbb
jg
pop
mov
push
push
pop
sub
mov
fiaddl
hlt
mov
lahf
push
xchg
mov
mov
mov
lret
insb
dec
and
cmp
sbb
cmp
cmp
pop
inc
mov
or
icebp
jmp
pushf
rcr
int
sti
fldt
xchg
fld
cs
and
andl
ljmp
movsb
mov
cld
or
mov
or
cmp
cmp
mov
mov
stos
movsl
add
jle
enter
mov
ds
cmpsl
add
fwait
call
jnp
push
gs
int
fcoms
test
idivl
pop
inc
ret
dec
hlt
int
iret
ja
mov
push
push
ljmp
cmpsl
rol
imul
jnp
or
adc
cmp
ret
push
int3
and
jb
test
pop
jmp
sbb
addr16
shl
push
jecxz
loope,pn
dec
pop
pop
and
dec
xlat
jno
adc
cld
xor
lea
lret
xchg
ja
jl
mov
mov
pop
nop
ret
imulb
jne
enter
es
lret
fabs
call
sub
cmpsb
xchg
and
fimuls
jno
xchg
imul
jmp
inc
xlat
or
mov
into
popa
fs
mov
ja
dec
mov
xchg
mov
les
xor
lea
popa
cmpsl
xor
das
sbb
cmp
xchg
imul
xchg
je
xchg
pushf
or
inc
movsl
jns
sub
pop
std
pop
mov
dec
aas
jmp
jns
dec
leave
mov
lret
pop
add
ficoms
mov
cmp
sub
loope
and
jmp
rorl
mov
inc
mov
mov
inc
rclb
out
and
insb
or
cmp
rorb
imul
xchg
cmpsl
xor
loope
sub
aaa
sub
inc
mov
sbb
xor
shrl
or
and
xchg
push
icebp
cmp
dec
daa
cmpsb
adc
ds
fistps
icebp
dec
mov
jecxz
push
jne
or
aaa
sub
add
jo
les
mov
pop
pushf
aas
insl
add
fdivl
sub
pop
das
popa
sbb
aaa
xlat
jnp
int3
jg
push
pop
dec
pop
aas
jne
jo
call
lods
daa
aaa
addr16
dec
cmp
fisubrl
sub
pop
mov
jecxz
mov
pop
pop
dec
in
loop
sbb
push
pop
subb
sbb
dec
lds
les
iret
pop
int3
stc
fldenv
pushf
dec
jns
adc
es
xchg
rcrb
push
xchg
dec
inc
dec
ds
cs
fistps
inc
loop
movzbl
push
mov
jecxz
loopne
in
jle
dec
jb
ficoml
jns
xchg
jg
ret
pusha
and
push
add
dec
inc
xchg
sbbb
pop
rcr
and
lret
xor
movsb
addr16
mov
lret
sub
inc
inc
enter
mov
scas
les
cmp
jb
idiv
inc
and
out
cmp
daa
add
jne
popl
cmp
shlb
bound
popf
imul
push
rolb
dec
push
aaa
add
inc
imul
cmpsl
lea
xchg
sti
pop
xor
add
popf
sub
sbb
dec
sbb
cmp
cs
or
inc
pop
in
mov
mov
shll
mov
ss
jge
and
xlat
jecxz
cmp
mov
lods
rcl
fcomi
movsb
aaa
cmpsl
clc
xchg
outsb
aam
sbb
sbb
sbb
push
push
cltd
stc
push
jecxz
xchg
xor
pop
push
cltd
jmp
dec
and
jns
shll
hlt
insl
out
pop
mov
sahf
jge
mov
rorb
xchg
jge
mov
lods
stc
jnp
dec
aaa
jbe
xorb
push
fdivrl
lea
xor
jecxz
shll
mov
or
inc
lods
add
jns
mov
xchg
pop
adc
mov
mov
ds
shrb
push
xor
push
mov
iret
stc
insl
push
movsb
js
and
mov
fcoml
or
int3
xchg
dec
sbb
outsb
sahf
add
pop
xchg
mov
cli
xor
and
fwait
rcl
inc
daa
adc
sub
popf
jmp
in
hlt
push
and
in
leave
mov
mov
mov
or
cmp
or
mov
add
out
mov
mov
cmp
les
and
dec
inc
mov
cmp
std
mov
repnz
lock
jge
addl
xor
jg
pop
mov
lret
pop
fcompl
xor
imul
cmp
daa
jle
cltd
dec
pusha
sub
xchg
adc
jb
cmp
mov
gs
adc
jmp
xlat
mov
imul
push
outsl
aas
repz
fildll
add
in
js
into
inc
mov
jmp
test
add
cli
jns
sub
jg
pop
cmpsb
mov
and
pop
push
sbb
fisubrs
fdivl
test
push
xor
jns
push
xchg
insb
sub
and
add
mov
repnz
cmp
or
ljmp
mov
mov
xchg
test
cmp
int
mov
ficomps
mov
pusha
jns
imul
test
cmp
movsl
jo
jp
packuswb
mov
pop
fstpl
pop
dec
int
push
int
mov
fucomip
sbb
frstor
cs
sbb
js
nop
and
jns
ret
mov
dec
inc
push
lds
mov
test
and
xor
ss
fisubrl
sub
out
xor
jl
jbe
add
std
fldenv
jmp
inc
pop
rcrl
xor
cs
test
insl
dec
dec
xchg
add
cwtl
ljmp
scas
ss
js
inc
ljmp
inc
pop
sbb
mov
lods
dec
adc
mov
mov
or
push
lret
dec
xor
dec
mov
das
aas
sbb
cltd
enter
cmp
xor
repz
xor
and
push
adc
xor
jmp
scas
or
shr
lds
jae
xor
lea
dec
pushf
mov
adc
cmp
in
out
or
je
jo
lcall
and
xor
mov
sti
dec
lret
test
clc
xchg
dec
inc
dec
xchg
dec
push
and
pop
enter
xor
mov
jl
mov
jecxz
ss
sbb
and
and
ret
mov
test
fdivr
test
in
mov
lods
ss
and
mov
mov
xor
sbb
add
shl
out
cmp
sub
jns
aas
and
sti
jg
mov
jnp
mov
push
or
jno
out
stc
xchg
repnz
jp
xor
lock
inc
inc
subl
push
jo
dec
lcall
popf
cld
scas
cmp
out
mov
push
lds
mov
divb
lret
jno
pop
push
testb
mov
xchg
jo
add
pop
push
fimuls
jl
jo
jmp
mull
cmc
pushf
mov
repnz
cmp
repz
inc
add
fucomip
xchg
lcall
popf
inc
adc
push
sbb
bswap
jp
push
loop
jb
push
dec
aas
push
push
adc
insb
adc
and
sub
shl
in
jbe
and
outsb
sub
jne
xor
mov
shl
push
cmp
pop
mov
dec
addr16
scas
inc
inc
xchg
test
mov
and
mov
std
movsb
out
lods
jl
pop
dec
add
dec
add
jae
test
icebp
inc
add
sub
push
cmpsl
and
mov
repnz
push
jb
or
into
rcrb
ret
shll
push
and
iret
xor
movsl
sub
andb
pop
dec
jecxz
cmpsl
jge
decl
push
ja
adc
imul
repnz
call
or
pop
push
out
inc
cmpsb
push
sahf
test
es
and
jge
xchg
and
push
jno
lea
icebp
cwtl
xor
test
mov
lds
xchg
jns
popa
rolb
xor
cs
mov
insb
jne
push
mov
cltd
xor
dec
aad
sub
inc
add
sub
popa
rcrl
or
mov
xor
inc
ret
dec
aam
gs
push
fdivrp
adc
or
lea
sub
and
pop
cmp
xchg
mov
mov
notb
jae
xchg
inc
xchg
or
or
lds
jmp
inc
fyl2xp1
mov
inc
in
fsts
pop
cmp
sub
out
dec
and
dec
aas
int
insl
nop
mov
pop
jno
mov
mov
out
scas
insl
aad
xor
lea
bound
movsb
and
pushf
inc
fstpl
adc
or
sbb
push
add
jle
or
adc
push
ljmp
and
jmp
and
daa
dec
insb
xchg
arpl
or
jg
adc
ds
dec
xor
add
mov
and
cmp
out
nop
dec
dec
cmpl
fs
fildll
push
stos
adc
inc
les
and
movsl
or
in
or
xor
lds
scas
add
fdivr
punpcklbw
mov
into
loopne
dec
out
mov
cld
jne
addr16
lods
jmp
and
inc
xchg
sub
call
imul
lods
mov
ds
sub
ds
dec
cmpsl
stc
popl
sti
int
mov
int3
xchg
sub
rorb
and
dec
dec
push
popa
mov
mov
mov
shll
mov
decl
jns
mov
mov
push
push
xchg
cs
mov
pop
cmc
mov
enter
push
int
sti
xorl
iret
add
clc
out
stos
cltd
xchg
jns
pop
sbb
sti
push
push
xchg
pop
dec
adc
mov
test
xchg
mov
test
xor
inc
adc
lea
push
adc
mov
shl
ficompl
push
idivl
inc
movsb
xchg
dec
inc
arpl
add
lret
mov
xor
gs
test
cmc
repnz
jmp
out
xchg
out
mov
cmp
sbb
inc
es
mov
sbbl
pusha
fcompl
sbb
notl
and
fnstcw
pop
add
or
popf
add
sub
and
adc
lds
lret
push
pop
pop
jge
push
or
lahf
pushf
stc
cld
les
fxch
lret
sub
pop
add
sahf
lods
jecxz
mov
js
cmpsl
fs
orl
jb
stos
push
rcrl
icebp
fisubl
ja
ret
loope
mov
cld
out
mov
outsl
mov
cmp
subl
or
stos
stos
nop
pop
sbbb
pop
bound
and
in
pop
sbb
sub
xor
jl
and
mov
push
sbb
push
fmuls
arpl
add
sub
lea
stos
scas
scas
scas
gs
data16
add
repz
cmp
xchg
xchg
pop
add
es
movsl
xor
loope
push
out
out
push
lahf
push
into
dec
cmp
mov
push
pop
hlt
push
push
fs
add
popa
push
popf
lock
add
fcomps
ret
movsb
fdivs
fsts
nop
or
jne
xor
in
pushf
dec
sub
mov
add
dec
add
ret
sbb
dec
imul
sub
rcl
inc
stc
gs
jno
fldt
in
lods
testb
sub
popl
xor
shll
jle
xchg
ja
cmp
repz
push
add
inc
or
jmp
addr16
push
orl
push
add
inc
lahf
decl
pushf
das
mov
data16
add
mov
inc
aas
add
sahf
add
dec
fstpl
in
sub
cs
pop
addr16
fwait
mov
sahf
mov
fdivp
inc
icebp
push
xor
loope
lret
and
fwait
xor
mov
mulb
outsb
sbb
add
fstpt
mov
adc
decl
push
fldl
in
fstpl
xor
lcall
movsl
mov
stos
dec
inc
push
aas
pop
mov
push
jge
mov
dec
lcall
mov
dec
push
jo
or
fpatan
jg
sbb
push
rcrl
outsl
jns
stos
scas
loopne
into
xchg
adc
mov
daa
fcom
xlat
mov
mov
adc
insl
push
mov
mov
inc
rcr
pushf
jg
sub
fs
data16
cwtl
out
leave
dec
iret
push
sub
mov
leave
loope
aad
xchg
shlb
pop
and
push
lods
outsb
pop
outsb
test
in
jg
sub
jns
int3
sub
fmuls
in
jge
fwait
in
xchg
mov
por
fcmovnu
dec
adc
lahf
sub
cwtl
mov
test
movsl
jns
mov
inc
or
mov
arpl
cmp
and
repnz
fs
les
lds
xor
mov
fiadds
ljmp
inc
and
nop
xor
sarl
decb
movsl
pusha
dec
into
mov
fstpl
mov
dec
mov
push
jg
out
addl
dec
dec
mov
mov
cmp
mov
subb
cld
adc
and
dec
mov
cld
add
fwait
pop
or
dec
mov
cmp
fistpll
xor
inc
or
sub
outsb
ror
xor
or
push
mov
insl
pop
pushf
out
add
sarb
fcompl
shlb
mov
data16
nopl
xor
mov
fdiv
add
dec
mov
push
lods
popf
mov
gs
mov
xchg
pop
sbb
nop
mov
test
sti
out
lods
sahf
adc
and
hlt
les
push
out
mov
mov
out
enter
cli
push
or
mov
jae
inc
shlb
mov
xor
push
les
sbb
jp
xchg
icebp
andb
ds
jle
add
pusha
pop
and
cmp
jg
inc
mov
sti
sbb
pop
dec
add
cmp
xchg
test
pop
jecxz
out
sbb
js
xor
xchg
pop
inc
jge
incb
out
lret
mov
cli
iret
out
out
xor
xchg
jg
inc
test
call
and
fisubrl
jb
inc
aad
shl
in
jb
shll
pop
cli
cmp
push
call
ret
adc
xchg
addl
sahf
sbb
shll
jg
mov
nop
xor
aam
mov
mov
test
clc
insb
mov
pop
shlb
xchg
fnstenv
jl
xor
nop
shll
add
test
cmp
sbb
jecxz
jl
rcrb
mov
inc
mov
cwtl
jbe
xor
outsb
cli
scas
add
bnd
movsl
push
ficomps
lea
jg
dec
xchg
mov
out
jecxz
jb
mov
mov
mov
cmpsb
push
mov
scas
test
push
jno
xchg
orb
or
lds
push
cmpb
leave
add
outsl
fsubrs
outsb
and
in
fdivp
sub
pop
test
inc
pop
imul
or
loope
lods
cmp
dec
push
shl
mov
int3
xor
adc
xlat
xchg
dec
scas
lret
jns
cmc
jae
lock
dec
sbb
push
jle
mov
ficoms
out
lock
mov
adc
shl
and
incl
add
fwait
pop
into
lds
sti
daa
add
cmpl
mov
test
mov
xchg
lds
add
pop
dec
pop
rcll
mov
mul
lods
jmp
pushf
mov
jbe
fnstsw
xor
mov
inc
and
icebp
test
push
mov
xor
sbb
icebp
loop
pushf
dec
mov
mov
or
bound
daa
mull
push
push
les
pop
sbb
xchg
push
popf
push
jb
inc
xchg
ds
mov
xor
xchg
call
arpl
jns
cld
cmp
dec
cmc
loop
jmp
cmp
mov
leave
je
fldt
pusha
lds
xchg
outsl
test
ret
lea
push
xor
daa
xchg
inc
adc
divb
outsb
mov
jo
push
std
aam
repz
and
and
sbb
xchg
jbe
adc
rolb
jnp
xchg
inc
inc
orb
test
sub
jp
std
ss
idiv
xchg
negb
mov
dec
lds
pop
inc
xor
or
lret
jne
enter
mov
and
mov
pop
loopne
jecxz
mov
out
pop
ret
cmp
outsl
lea
sub
jbe
and
push
test
imul
xchg
lcall
imul
in
mov
push
sbb
cmpsb
jbe
out
pusha
xor
call
inc
push
lcall
cs
in
push
and
test
pop
ret
or
fisubrl
aad
loope
popa
aam
push
pop
je
out
loopne
dec
mov
xor
dec
mov
mov
mov
or
xchg
sti
adc
inc
mov
mov
icebp
mov
aas
nop
out
jb
and
inc
xchg
std
aam
loop
adcl
mov
cmpl
pushf
sti
cld
aad
jb
fdiv
xchg
jge
xchg
filds
arpl
pop
adc
jno
dec
push
pop
push
inc
lock
lcall
mov
out
xor
lcall
xchg
bound
mov
fimull
leave
dec
mov
nop
std
addl
inc
scas
lcall
add
sti
jl
xchg
add
outsb
jl
add
jecxz
or
dec
das
jmp
push
lods
mov
lret
shrl
test
lock
testl
ret
jne
xor
repnz
divl
loop
mov
mov
addr16
ret
adc
adc
or
mov
pop
cmc
in
sbb
or
xor
sbb
fildl
xor
inc
in
call
lcall
jnp
jecxz
lahf
jb
outsb
mov
sbb
fadd
xchg
out
push
test
fbstp
shll
pushf
jecxz
ficomps
test
push
out
bnd
inc
cwtl
hlt
scas
jne
or
lods
stos
decl
mov
pop
mov
pop
or
and
xchg
mov
jb
notb
inc
inc
xchg
push
cmpsl
aas
shll
stos
cmp
xchg
sbbb
stos
pop
xor
sub
mov
xor
xchg
aad
jbe
or
xor
push
icebp
jae
and
rcrb
sahf
push
dec
mov
xchg
movsb
xor
addr16
mov
push
pop
js
cmp
push
leave
fldcw
sbb
push
inc
lahf
xor
cmp
aam
cmp
push
jge
fsubrl
inc
pop
test
jge
inc
lret
ds
xor
mov
push
rcrl
xor
lret
js
cli
xchg
push
out
xchg
sti
mov
jae
xchg
stos
fldt
cmp
mov
bound
mov
in
push
pop
repnz
sub
js
fadd
push
or
shll
mov
sub
jb
pop
frstor
enter
fisubrl
ror
sbb
cmpl
add
push
insl
lea
xchg
cmp
push
dec
pop
sub
aam
mull
inc
fadds
stos
xchg
sahf
mov
fiaddl
data16
xchg
jecxz
mov
xchg
xlat
pop
scas
ljmp
jne
jl
sbb
inc
push
adc
ret
test
addb
pop
xor
lods
or
ss
pop
cmp
push
orl
sarl
pop
mov
out
xor
dec
cld
in
lret
pop
xor
dec
aas
mov
in
push
sub
xchg
cmc
pop
inc
mov
push
int3
int3
cmp
sbb
mov
add
outsl
repz
push
mov
popa
ja
pop
or
jmp
mov
push
mov
sub
out
lret
push
dec
inc
ja
push
pop
das
sbb
adc
sti
loopne
fcmovnbe
dec
dec
push
lcall
mov
sub
in
mov
cmp
push
sub
push
or
aaa
aad
fldenv
je
ret
and
and
inc
repnz
push
jecxz
inc
cmpsl
jbe
pop
addb
rcrb
out
cmp
out
adc
mov
fucomi
mov
jbe
cmpsl
and
pop
cs
jl
mov
repnz
iret
lret
sub
or
mov
mov
cld
in
and
jge
mov
sti
cli
push
movsb
fwait
daa
dec
xorb
in
das
sbb
hlt
pop
dec
addr16
jp
pushf
pop
and
loopne
repnz
leave
clc
cmp
ficompl
lret
cmp
cwtl
jo
leave
or
mov
addr16
dec
dec
adc
andl
cmp
dec
sbb
xchg
push
xchg
cmp
movsb
or
jnp
pop
mov
fisubs
idivl
adc
aaa
in
out
mov
xchg
push
lcall
sub
popa
mov
and
ss
lods
xor
xchg
jbe
cli
mov
pop
lret
inc
imulb
les
testb
push
xchg
adc
pop
push
std
add
test
fildl
dec
mov
ret
push
xchg
fyl2xp1
arpl
cmp
push
inc
popf
push
xchg
test
cltd
arpl
xchg
jg
std
adc
test
mov
std
cli
mov
data16
in
and
mov
or
dec
cld
push
cmp
push
jbe
ja
iret
dec
and
das
es
shrb
sahf
cmpsb
orl
mulb
xchg
aad
repnz
repz
sbb
cmpsl
rolb
mov
outsl
fnsave
jmp
ret
test
stc
dec
icebp
push
mov
xor
dec
aas
mov
pop
cmp
bound
enter
or
pop
outsl
data16
test
sub
cmp
dec
popl
ret
jg
mov
mov
ret
mov
js
test
outsb
mov
test
inc
rolb
cmp
int3
outsl
add
test
insl
nop
mov
pop
adcb
jns
dec
cld
mov
jbe
sub
clc
pop
dec
test
sbb
in
icebp
push
sbb
jmp
insl
xor
xchg
cmc
cli
movsl
ret
mov
cwtl
aaa
pop
mov
scas
test
and
and
inc
pop
cli
xor
cmovge
pop
ret
jle
insl
adc
cmp
xorb
in
out
lock
out
pop
xor
push
test
cwtl
ret
pop
mov
imul
es
add
cltd
icebp
shrl
std
fstpt
outsb
aaa
ret
out
pop
dec
or
out
adc
jle
pusha
dec
push
je
cmpsl
movsb
jle
mov
sarl
insb
and
nop
pop
mov
dec
xor
mov
sbbl
imul
sub
jne
inc
push
out
xchg
push
jmp
pop
inc
adc
outsl
leave
repz
pop
mov
punpckhbw
out
cmpl
dec
xchg
nop
loopne
outsb
xor
test
pop
sbb
push
jb
nop
fsubp
repz
sub
xchg
push
ljmp
cmp
mov
call
out
std
es
push
jno
mov
dec
push
sarb
fnop
xor
fwait
mov
pop
pop
lock
pop
cmpsl
fwait
xor
outsl
in
daa
fcomps
imul
xchg
loope
clc
ret
xchg
adc
add
sub
mov
dec
xor
jle
push
jo
push
and
lods
xor
sub
inc
sbb
lret
add
inc
scas
js
fcomip
aad
xchg
data16
cmp
dec
cmp
les
mov
imul
rcll
das
sbb
mov
imul
sti
test
jl
or
roll
push
sub
xor
xchg
add
push
flds
testl
or
imul
fwait
stos
or
insl
lret
mov
imul
outsb
xchg
add
js
out
shlb
cmp
pop
cmpsb
stos
repz
jle
mov
dec
aas
xor
fdivrs
sub
or
fisttps
leave
cmc
sub
lcall
mov
jne,pt
xchg
or
adc
lods
cmp
inc
and
mov
cli
cs
dec
test
lods
jae
add
pop
pop
inc
mov
test
fildl
shl
sub
insb
shrb
sub
cmp
fdivs
fisubs
mov
mov
roll
repnz
inc
cmp
rolb
inc
jl
xchg
imul
dec
inc
and
mov
xchg
sub
cmp
rcrl
ror
xor
pop
mov
mov
xchg
mov
push
test
or
lods
push
or
xchg
inc
adc
cmp
add
idivl
adc
mov
sub
pop
test
push
lds
test
cmpsl
sahf
and
cmp
mov
mov
mov
lret
lds
mov
pusha
add
mov
daa
and
adc
testb
shll
mov
push
sbb
jnp
fcmove
shl
xchg
sub
pop
orl
push
sub
sub
mov
pusha
add
ret
mov
mov
out
loop
dec
mov
push
iret
loop
xchg
je
adc
mov
inc
sub
fsubs
stc
addr16
icebp
jae
or
stc
jb
bound
into
test
cmpsb
stos
in
cmp
inc
outsb
lahf
sahf
mov
jne
jae
dec
xor
sbb
cwtl
push
lea
in
hlt
loopne
xor
mov
cld
sub
mov
mov
adc
xchg
cwtl
mov
dec
gs
inc
mov
shr
mov
lods
xor
sbb
fldcw
jb
ret
xchg
mov
xchg
lret
bound
insl
mov
dec
aas
mov
dec
gs
fmuls
mov
scas
insb
mov
aad
push
or
xor
test
cmp
dec
xchg
cmp
cld
mov
push
mov
cs
mov
mov
insb
cli
ret
or
mov
lea
inc
add
dec
ficompl
sbb
xchg
inc
pushf
add
test
adc
call
movsb
out
and
mov
xor
movb
les
dec
mov
daa
cli
cmp
sbb
mov
mov
sbb
xchg
sub
xchg
cmpsl
xchg
notb
mov
xchg
xor
shlb
dec
pushf
xchg
in
aas
imul
mov
push
inc
and
fwait
ret
mov
sbb
inc
dec
ret
jbe
stos
mov
sub
inc
sub
sub
rol
int
push
movb
sub
inc
xor
not
push
and
mov
mov
dec
daa
repnz
andb
lcall
cltd
pop
cmp
subl
dec
pop
or
fdivl
push
add
roll
mov
fwait
pop
int
sbb
xchg
pop
lret
into
shlb
and
adc
or
das
and
cmpl
inc
int3
jl
stos
and
call
mov
mov
adc
cmp
scas
sbb
pusha
out
addl
into
or
leave
mov
ret
aam
test
incb
jmp
mov
xor
test
adc
pop
mov
inc
imul
rolb
enter
cmp
inc
jo
arpl
mov
out
in
mov
adc
in
rcr
into
shrb
and
mov
mov
xor
add
xchg
lahf
popa
or
sti
bound
sbb
push
hlt
fdivrs
testb
xchg
mov
andb
mov
lret
mov
push
pusha
int3
es
jbe
and
and
pop
test
sub
add
pop
shl
ja
fdivp
out
and
or
lret
imull
lds
pop
ljmp
jg
cs
and
and
sbb
jl
and
fsubl
jl
sbb
push
sub
sub
je
xchg
cwtl
xor
add
stos
adc
mov
cld
insb
jle
stc
add
negl
push
adc
jns
out
mov
test
aam
inc
jg
sub
and
inc
loopne
xchg
arpl
dec
push
cmp
push
out
ret
scas
sub
imul
outsb
cmpsl
sub
mov
dec
and
push
dec
push
movsb
shll
fbstp
js
xchg
jb
jecxz
push
lss
fcmovnb
push
outsb
pop
cs
sub
in
out
pusha
cwtl
push
jg
in
pop
stc
push
std
push
mov
pushf
popf
xor
lods
jecxz
dec
mov
test
xor
enter
inc
and
push
xor
mov
out
insl
outsl
push
or
xlat
popf
out
das
mov
fstpl
mov
sar
push
adc
test
les
leave
js
or
sub
adc
mov
cs
out
and
nop
lcall
aas
sbb
iret
fidivrs
imull
js
scas
adc
mov
std
pushf
sahf
mov
xchg
jmp
sbb
add
shll
ret
and
loop
fsts
in
jbe
shrb
jl
push
in
fstpl
inc
add
mov
cmpsl
adc
gs
es
incb
jnp
je
xlat
push
sbb
pusha
xor
mov
add
adcb
mov
dec
pop
jne
stc
cmp
mov
sbb
arpl
and
mov
lret
mov
roll
lahf
js
mov
idivb
mov
dec
out
fpatan
dec
mov
add
jp
shll
pushf
jns
mov
xor
mov
into
cmp
movsl
xchg
outsl
dec
icebp
sbb
imul
insb
dec
andb
insb
call
push
lcall
sub
icebp
mov
ss
mov
cmp
rcr
imul
dec
mov
dec
je
mov
dec
fwait
mov
mov
ljmp
adc
dec
adcl
dec
rcrb
stc
mov
imul
mov
or
jbe
fisttpl
jnp
mov
test
and
inc
mov
xor
xchg
jp
fs
enter
arpl
scas
cmp
loope
jne
sbb
jne
cwtl
lods
push
imul
das
pop
mov
jo
flds
loop
mov
lods
es
dec
js
mov
mov
das
or
call
inc
js
dec
bound
xor
push
or
cwtl
cmp
es
mov
jp
mov
sahf
add
flds
cmp
sbb
inc
shlb
lods
sahf
ret
cs
aaa
adc
jnp
or
enter
sub
or
clc
cmc
stos
dec
or
mov
mov
mov
adc
test
push
add
fdivs
xchg
shlb
cmc
aaa
lret
cltd
push
xchg
fldl
cmp
cmp
mov
dec
sbb
add
outsl
jp
pop
push
lahf
pop
icebp
add
xchg
andl
loop
sbb
dec
mov
jl
inc
xor
daa
testl
xchg
sbb
mov
cmp
sbb
mov
insl
jnp
stos
in
or
or
add
jge,pn
dec
lods
or
outsb
fucomi
adc
adc
inc
lcall
sub
in
adc
push
add
mov
inc
mov
ja
adc
or
dec
cmc
fisubs
inc
sub
xor
int
push
in
je
add
inc
int
adc
cmpsl
mov
mov
xor
repz
fildll
dec
jmp
dec
xchg
loopne
iret
sahf
and
cmpsl
cmpsl
and
pop
mov
movsb
lea
std
sbbl
dec
push
jp
jl
jns
aad
andl
inc
gs
lahf
lea
ds
mov
rcrl
arpl
cld
insl
mov
push
sub
addb
mov
rorl
hlt
stos
mov
inc
jle
hlt
cmc
inc
sti
inc
mov
cltd
cmpsb
pop
js
push
xchg
lods
pop
in
and
pop
addl
bnd
dec
jns
faddl
xor
jg
inc
fbld
dec
pushl
push
stos
mov
daa
mov
aam
xchg
push
sarl
loopne
scas
stos
iret
jle
push
jns
sub
orl
leave
cmp
sub
loop
out
push
push
mov
es
mov
aad
lcall
push
jg
pop
shlb
int
into
cmpsb
cmpsb
sbb
pop
out
push
or
dec
or
cmp
mov
mov
mov
fsubrs
pop
clc
sbb
out
pop
xchg
or
or
mov
xchg
scas
nop
pop
and
push
pop
imul
xor
ljmp
inc
test
jg
stos
cmpsl
xchg
call
jo
js
test
rorb
add
lahf
cmp
cmpsl
and
fnstsw
fwait
ret
je
ljmp
pop
imul
cmpsb
xchg
leave
jle
loope
jecxz
aad
cmp
movsb
and
in
mov
push
inc
shll
cmpsb
push
test
mov
sbb
es
mov
add
mov
insb
lea
sar
dec
stos
sub
test
pushf
adc
ds
and
push
fnstenv
lds
sub
mov
dec
sbb
cmp
adc
out
pop
cmp
lret
fs
jmp
int
pop
popf
call
dec
cltd
xchg
pop
xchg
push
push
mov
mov
adcb
pop
dec
test
loop
mov
mov
pop
loope
push
add
stc
in
push
cmp
dec
test
int
push
aaa
call
aad
addr16
jmp
and
xor
fld
arpl
pusha
hlt
repnz
mov
fnstcw
ret
test
sub
icebp
and
sbb
cmpsb
insb
ret
add
lods
inc
movsl
fsub
sbb
mov
out
jb
cmp
push
jle
out
pop
sbb
mov
mov
or
sahf
je
xor
jp
popa
jb
jmp
sets
cli
je
leave
popl
inc
push
inc
in
test
push
mov
jnp
pop
xchg
adc
adc
cmp
jle
aad
sbb
xor
int3
xchg
mov
mov
ret
lea
add
push
lods
xchg
cs
adc
nop
sbb
in
add
enter
mov
rcrl
inc
sub
pop
cmp
xchg
out
inc
lods
repnz
ds
pop
add
or
std
ljmp
daa
push
xor
push
inc
mov
insb
daa
xchg
inc
bound
xchg
cmc
sub
jae
in
mov
pop
dec
mov
das
stc
and
test
into
aaa
dec
push
lret
jo
xchg
xor
add
or
and
mov
adc
mov
lret
pop
mov
or
mov
cmp
aam
mov
rorl
out
cmp
xchg
pop
movsb
jb
mov
jl
inc
outsb
fbstp
rclb
and
sarb
add
push
fdivrs
xchg
and
sub
inc
test
into
xchg
push
out
mov
mov
sub
cld
inc
insl
adc
mov
aaa
dec
dec
mov
sbb
jge
or
push
adc
pop
mov
adc
pop
inc
mov
gs
movsb
add
call
mov
rcrb
jmp
shrb
ret
or
and
je
call
cmpsl
inc
mov
pop
rcrb
fisubs
xchg
arpl
cmc
sub
mov
xchg
imul
or
daa
aas
out
inc
xchg
xor
fwait
adc
mov
es
ficoml
mov
pop
ja
cmc
aad
sub
adc
clc
pop
mov
cmp
or
test
sarl
into
fadd
sbb
push
jmp
sub
cmpsl
ficoml
lods
imul
mov
cmp
mov
cltd
and
mov
mov
sarb
daa
enter
ficompl
ljmp
push
xchg
aas
test
cli
jmp
add
cmp
xchg
xchg
jle
js
repz
insl
outsb
test
jae
or
mov
xor
xchg
pop
and
cwtl
shrb
gs
or
scas
ljmp
mov
xchg
int
add
es
jmp
lret
in
mov
test
dec
xchg
test
mov
jecxz
pusha
addr16
dec
mov
lods
jecxz
mov
aad
lcall
nop
xor
shrl
ror
fisttpl
loope
imul
popa
leave
jl
pop
daa
test
shrb
rorb
mov
jle
inc
fwait
or
ret
inc
loopne
jmp
das
xchg
jecxz
and
pop
mov
aam
ret
mov
movsb
fstps
sti
les
mov
and
xchg
outsb
jg
xlat
mov
mov
imul
push
jl
ficompl
jge
xchg
xchg
jecxz
insl
push
leave
mov
mov
adc
out
js
les
jmp
jmp
jae
lods
das
in
xor
xor
mov
jecxz
subl
daa
movsl
adcl
pusha
ret
out
scas
xor
outsb
addr16
xchg
shrl
outsb
mov
daa
int3
jnp
sbb
popf
data16
mov
mov
xchg
push
sbb
adc
sbb
push
adc
cltd
sti
xor
push
ljmp
jp
aaa
xchg
fisttpll
rolb
mov
lds
loopne
jecxz
jp
sub
xchg
mov
lret
leave
aad
aad
pusha
jae
int3
adc
cmp
cwtl
and
sbb
imul
push
xor
adc
in
mov
hlt
xchg
push
dec
and
sti
sbb
clc
push
ja
lret
cmpsb
xchg
jno
int3
in
cs
lea
icebp
clc
xor
mov
pop
mov
xchg
mov
insb
cmp
xlat
mov
imul
enter
div
sub
adc
in
inc
jl
or
mov
push
add
scas
push
setle
xor
shll
mov
mov
imul
xor
insl
enter
mov
jne
fistpll
or
pop
or
add
cmp
scas
lret
xchg
push
arpl
lock
pushf
iret
or
fwait
mov
jp
pop
xor
mov
dec
mov
call
loop
insl
sub
sbb
adc
jg
daa
xchg
jne
pop
lods
and
testb
jl
mov
paddusb
sbb
cltd
dec
aad
test
fmull
and
mov
or
mov
mov
iret
inc
lods
or
pop
adc
jge
xor
push
or
jg
mov
adc
xorl
inc
xchg
mov
aam
ss
jb
jnp
xchg
pop
jno
ss
std
inc
add
dec
rcrl
fsubl
mov
in
pop
mov
cli
sub
xchg
sbb
int
dec
mov
mov
mov
andb
lock
dec
push
sti
mov
fstps
int
and
int
cmp
pop
jbe
or
and
mov
push
mov
pop
stc
inc
xchg
sbb
add
xchg
cmp
mov
push
or
jp
dec
jae
xlat
mov
mov
bound
clc
adc
mov
pop
lea
jbe
push
dec
xchg
lea
xchg
dec
in
pop
mov
hlt
xchg
data16
add
mov
sub
stc
cmpsb
pop
push
fdivs
add
nop
loop
sbb
iret
lods
cmpsb
hlt
cli
popf
and
mov
jo
dec
call
loope
pop
pop
lret
inc
xchg
xor
bound
fwait
rcrb
or
and
rcl
push
jae
repz
mov
mov
cmpl
insb
push
xor
ja
mov
adc
clc
pushl
dec
movsw
xchg
sub
mov
das
xchg
dec
xor
lret
cmpsl
ljmp
mov
out
add
cli
xchg
test
push
pop
cltd
jno
ret
mov
pop
imul
xlat
popf
push
addb
fs
mov
or
adc
jno
and
adc
mov
or
ja
into
test
xchg
pusha
xchg
daa
mov
xchg
je
sar
mov
ja
add
mov
push
les
mov
xchg
mov
cmpsl
je
xrelease
test
cmc
pop
sbb
movsb
inc
fistpl
or
decb
add
or
rorl
testb
sbb
int
jnp
js
nop
fwait
repnz
inc
adc
pop
jae
mov
lea
fstpt
mov
xlat
or
mov
add
scas
cmp
xor
das
cmpsb
add
inc
adc
sub
inc
cli
dec
mov
out
push
pop
xchg
cmp
push
push
shlb
pusha
lea
std
lcall
into
cmp
jae
xchg
or
insb
xchg
xor
and
inc
add
mov
add
adc
loopne
movsl
les
popf
in
in
test
iret
fsubr
insb
xchg
out
lcall
in
dec
out
pop
xor
add
fstl
pop
push
fmuls
fstpt
or
icebp
loope
xchg
push
cld
mov
or
in
test
push
push
insl
in
cltd
sbb
jecxz
xchg
mov
pop
out
ret
addr16
rcrb
ljmp
dec
subb
mov
clc
cs
or
loope
sarb
arpl
popf
cwtl
add
sbb
mov
xchg
and
addl
dec
cmp
data16
adc
mov
and
dec
jmp
daa
mov
push
cmp
mov
dec
popf
loop
roll
imul
push
cli
dec
sub
addr16
add
loop
pop
ljmp
push
fwait
jae
inc
sbb
xor
scas
and
push
sbb
sbb
inc
jns
mov
mov
movsb
push
rol
iret
push
les
sbb
mov
enter
ja
dec
mov
push
add
xchg
dec
adc
and
addr16
sub
cmpb
fadds
add
pop
and
leave
mov
nop
fisubrl
mov
inc
loop
dec
and
ljmp
xlat
mov
inc
xlat
and
mov
movd
jb
add
cmp
pop
dec
dec
xlat
or
mov
hlt
xchg
pop
test
rorb
lods
js
aas
dec
sbb
ret
mov
add
and
or
popa
loope
pop
imul
fs
inc
xchg
pop
outsb
ret
or
inc
xchg
push
xchg
or
push
mov
add
push
pop
sbbb
and
push
test
or
push
mov
sahf
sbb
pop
inc
imul
ficomps
mov
dec
std
add
xchg
xchg
jbe
push
cmp
insl
mov
lahf
sbb
idivb
mov
ret
mov
into
out
adc
push
int3
adc
or
stc
nop
mov
into
aaa
movsb
mov
into
pusha
xor
dec
jno
adc
hlt
ret
dec
lret
imul
and
sbb
clc
imul
les
rcrb
inc
sub
adc
iret
in
ror
add
mov
enter
in
jmp
sbb
insl
sbb
repz
out
imulb
and
sub
test
inc
out
lcall
sbb
sub
jbe
std
inc
cltd
pop
cmp
fstpt
xchg
sub
shlb
dec
push
jb
push
jbe
les
jmp
iret
xchg
cmc
lea
cmpsl
or
sarl
fcom
and
add
aaa
mov
add
fcomp
leave
jne
in
aam
mov
pop
inc
lods
add
dec
gs
jecxz
ret
ja
outsl
andb
cmp
sbb
out
mov
fs
dec
mov
pop
stos
add
std
adc
xor
leave
pushf
dec
cmp
dec
push
and
cmc
rcrb
xchg
cmp
xchg
mov
mov
pop
jle
sbb
pop
call
cltd
lods
fsub
in
sbb
sub
xor
fmull
pop
jae
scas
and
xor
call
inc
in
or
mov
xor
cmp
fstpl
adc
int3
jae
push
shll
push
xor
inc
mov
xor
mov
jne
scas
stos
adc
or
push
xor
ja
adc
jne
je
sub
insl
lret
cmp
cmp
js
es
xor
sub
xchg
jecxz
xor
roll
cmp
add
or
insl
jl,pn
inc
or
les
pop
aad
xchg
orl
mov
jae
push
das
mov
insl
ret
lea
mov
jp
pop
mov
rolb
out
and
popf
imul
movsb
xchg
and
sbb
pusha
iret
and
scas
not
dec
insb
mov
inc
inc
mov
cs
mov
push
push
shll
test
jle
rolb
fistpl
mov
adc
push
xor
cld
out
pop
push
shlb
jne
fidivl
pop
push
sbb
ljmp
xchg
dec
rclb
pop
out
sub
arpl
dec
out
hlt
fs
sti
js
or
imul
xchg
stos
sbb
neg
test
mov
sahf
inc
decb
pop
pop
pop
dec
cmpsb
mov
ja
xchg
popa
mov
jo
inc
lcall
cmp
and
mov
push
mov
out
mov
iret
push
jb
pop
int3
xor
sahf
mov
xchg
out
scas
lret
in
mov
cmp
orb
sub
lods
in
ret
fxch
outsl
xchg
test
test
push
ret
cs
ret
push
and
jo
inc
cmpsb
orb
and
and
es
xor
cld
cmp
dec
mov
test
rclb
inc
js
inc
jmp
sub
push
and
xorb
ja
stos
movl
popf
fdivr
inc
pop
push
roll
out
test
pop
mov
test
std
divl
sub
shll
push
je
jg
testl
imul
xchg
scas
inc
push
into
insb
push
shrl
xchg
enter
mov
xor
cmc
sbb
sbb
popa
ss
add
inc
mov
sbb
push
and
punpckldq
cmp
push
jae
pusha
mov
mov
adcl
or
cmp
cmp
push
aas
sub
fldl
aas
insb
movsb
ja
cmp
movsb
repz
mov
xchg
and
bound
repnz
xchg
mov
cmovno
sti
cmpsl
sbb
fdivrs
push
popf
cmp
subb
stos
push
scas
in
call
lea
clc
rol
imul
sbb
ficompl
sahf
xchg
and
popa
xlat
jnp
dec
jno
pusha
js
push
pop
jno
lds
adc
fsts
mov
test
shlb
fs
je
jle
inc
add
jno
adc
inc
dec
jns
and
in
jnp
dec
nop
xchg
inc
cmpsb
rcl
rclb
push
iret
repz
iret
in
pop
pushf
test
mov
mov
pop
xor
imull
popa
jns
pop
or
in
test
icebp
stos
je
inc
scas
lods
or
jne
xchg
jle
shlb
mov
je
insb
sub
sub
lds
icebp
push
adc
sub
jb
mov
int3
outsb
pop
fwait
loop
shll
cli
clc
add
repnz
aad
add
add
or
pop
imul
mov
pop
fstl
xor
push
aad
push
mov
push
lahf
std
adc
dec
mov
dec
add
ss
add
int3
dec
jo
xchg
pop
sti
lods
aaa
lcall
out
or
adc
inc
jle
jmp
mov
cmp
aaa
notl
inc
lds
mov
sub
cld
dec
push
dec
and
icebp
mov
push
cs
jnp
ss
cmp
inc
add
enter
and
cltd
lea
clc
push
popf
mov
aaa
shll
das
jmp
ja
jg
push
int3
mov
jo
ss
loop
popa
sarl
shl
enter
xchg
scas
and
lods
loop
aad
idiv
clc
push
mov
test
mov
das
fbld
inc
mov
adc
jecxz
adc
clc
dec
rorb
push
xor
xchg
pop
movsb
jo
jnp
xor
mov
roll
andb
cld
shll
dec
enter
cmp
xor
fiaddl
cmp
les
pusha
xor
adc
aam
jae
and
loop
movsb
mov
mov
add
bound
inc
bound
xchg
nop
xlat
outsb
cmpsl
xor
test
mov
sub
in
mov
aam
outsl
scas
pusha
cld
xchg
mov
add
sub
iret
xor
push
cmp
dec
push
pushf
sbb
add
das
xor
add
ret
orl
pushf
scas
cltd
or
fldenv
pop
fsubrl
pop
nop
add
cltd
imul
mov
mov
outsl
data16
bound
and
inc
mov
std
sti
test
xchg
mov
sbb
add
dec
les
rclb
or
cmp
ljmp
aaa
fnstcw
leave
xor
clc
mov
adc
cli
inc
and
add
add
rclb
inc
xchg
orl
mov
jg
add
add
xor
bound
inc
adc
jbe
lret
add
cmc
dec
xchg
out
movsb
out
in
icebp
cld
xchg
fcoms
sub
mov
lea
pop
jecxz
cmp
fstl
add
in
xor
cwtl
inc
jno
rcrl
jp
loop
sub
and
and
mov
lods
repnz
add
cmp
jecxz
data16
lret
arpl
cmp
add
pop
filds
jb
cmp
out
movsb
testl
add
vunpckhps
jl
imul
jbe
or
aad
fucomp
inc
fsubl
clc
jb
js
mov
mov
mov
or
in
xchg
inc
push
mov
mov
sbb
outsb
xchg
out
lret
test
mov
push
xor
cli
mov
jae
ret
push
js
test
sub
addr16
cli
aad
push
fs
adc
repnz
and
pop
jns
xor
imul
add
mov
gs
pop
imul
xchg
push
nop
jge
pop
ret
loop
loop
jle
enter
iret
fdivrs
dec
andl
push
cmp
pushf
inc
and
cmp
xchg
dec
js
sbb
fiaddl
mov
push
and
jmp
inc
fcmovbe
outsl
xlat
push
cmp
pop
decl
xchg
les
test
leave
pop
mov
and
jo
push
adc
adc
shlb
mov
adc
xor
xchg
ret
jle
fisttps
test
sbb
lds
call
scas
jmp
in
dec
int
setnp
add
dec
sbb
jns
repnz
stc
mov
cmovnp
push
clc
mov
push
imul
mov
dec
add
sti
popa
scas
into
adc
fidivl
popa
mov
mov
pushf
arpl
mov
sub
and
inc
xchg
and
loopne
scas
test
sbb
mov
ror
mov
mov
imul
dec
sbb
add
and
movsb
popf
add
jae
mov
shrl
stc
les
xorl
mov
in
aad
and
repz
outsl
leave
sub
ficoms
leave
push
int
imul
mov
inc
xor
jb
mov
push
cld
xor
imul
and
int3
jl
adc
jp
repz
lahf
leave
mov
or
push
das
or
mov
inc
jmp
test
mov
lods
lods
shrb
dec
jnp
in
ret
and
pop
insl
xchg
or
jp
lcall
jmp
fsubl
test
jmp
ljmp
dec
roll
mov
lcall
jmp
insl
jns
xor
out
inc
sub
or
leave
into
cmp
aaa
jp
aas
std
add
xor
mov
clc
ja
data16
mov
jae
mov
xchg
jnp
mov
lods
mov
add
insb
mov
sub
jb
cwtl
xchg
repz
hlt
cmp
cmp
arpl
fiadds
pushf
push
fildl
gs
mov
inc
jnp
pop
rcrl
leave
pop
xchg
sub
pusha
jl
into
jae
pop
rorb
mov
jecxz
xchg
insb
les
add
ja
or
test
push
mov
outsl
pusha
mov
outsb
call
lods
repz
sbb
lods
lods
cmpb
mov
or
addb
stos
jae
stos
ficoms
cli
mov
insb
in
js
or
add
dec
fwait
shr
mov
loopne
sub
aad
sbb
insb
es
notl
lods
jb
sub
xchg
sbb
lods
rorb
mov
and
idivb
pop
call
mov
les
xchg
and
stc
mov
mov
add
push
loop
jb
arpl
lret
scas
jae
into
inc
fsub
mov
stos
sub
test
jo
je
mov
ss
clc
push
push
and
cwtl
rolb
xor
jns
pushf
adc
into
loopne
dec
cwtl
lcall
sbb
les
sub
popf
cmp
popf
mov
cmp
pop
xchg
into
dec
test
xchg
hlt
stos
iret
icebp
sbb
cmpsl
inc
orb
cmpsl
ret
xor
adc
adc
nop
sub
mov
sub
insb
sub
dec
iret
mov
sub
push
out
add
incb
xchg
mov
xchg
jle
adc
ljmp
or
imul
movsb
aaa
lret
xchg
mov
fldcw
jl
ds
mov
mov
repz
stc
inc
mov
out
dec
cmp
xor
mov
inc
outsl
les
idiv
mov
scas
mov
push
into
jecxz
mov
rclb
sti
or
cmpl
or
push
loopne
std
aas
push
imul
aam
sahf
add
inc
testl
jbe
add
andl
pop
push
mov
mov
enter
jno
cli
cmp
push
lahf
xor
imulb
iret
aas
mov
fdivrp
pushf
call
mov
pushf
test
mov
pop
sub
popf
sbb
add
xor
insb
gs
test
mov
into
mov
cmp
pusha
sub
push
pop
fcompl
jae
xor
cwtl
pop
scas
sbb
push
std
push
aam
mov
lods
mov
mov
xor
hlt
cmp
repz
inc
mov
cmp
push
pop
into
out
pop
test
dec
test
push
xor
push
sbb
into
mov
sbb
mov
rclb
mov
ds
fiaddl
and
icebp
sbb
into
pop
adc
jmp
pop
decb
in
jbe
shlb
cltd
js
aad
pop
outsb
mov
roll
push
mov
data16
inc
push
or
es
data16
xor
lods
mov
sub
clc
jmp
xchg
lret
mov
pop
dec
jnp
pop
loopne
push
aas
sub
jns
fnstsw
testl
dec
inc
pop
xorl
dec
inc
sbb
stos
test
and
pop
fwait
xchg
popa
and
mov
fwait
sub
and
lret
mov
xlat
fldl
or
push
add
test
jge
xchg
xchg
ret
sbb
ds
sti
lock
add
xor
fisttpl
adc
popf
lahf
cmpsb
jae
shll
repz
push
arpl
cmp
dec
iret
mov
jns
pop
sbb
adc
adc
pop
mov
int
cwtl
not
clc
fbstp
adc
lcall
sbb
xchg
mov
push
loopne
xchg
imul
test
into
pusha
std
mov
pop
shlb
es
mov
and
xchg
aam
mov
mov
sub
mov
push
lret
xchg
add
cwtl
or
mov
xor
or
push
imul
push
sbb
and
pusha
sub
orb
std
flds
fs
add
mov
out
jmp
and
jl
into
dec
mov
cmp
ds
inc
xor
jae
div
and
hlt
pop
insl
push
and
fwait
and
add
lea
imul
cltd
cmp
imul
cld
add
loopne
in
pushf
adc
ret
std
sbb
xchg
mov
fs
jge
jo
adc
push
add
xor
shll
fwait
pusha
aad
jle
xchg
inc
xor
inc
call
add
cmp
sbb
sub
sbb
inc
dec
clc
sub
iret
mov
dec
out
sub
push
xchg
or
jl
or
cwtl
aaa
mov
loope
jbe
test
and
sub
ljmp
orb
std
divl
push
outsl
lret
sarb
sti
xor
mov
cmp
inc
jmp
jg
or
out
out
xchg
enter
rclb
sub
mov
sbb
jnp
xchg
decb
mov
scas
and
or
insl
dec
insb
call
dec
xor
bndldx
or
adc
or
in
sbb
imul
popa
sbb
movsb
jo
or
mov
mov
sbb
cmp
pop
cli
mov
sbb
lds
jbe
insl
es
and
xchg
icebp
push
lea
sbb
push
xor
mov
lds
shlb
push
shll
roll
adc
pop
push
mov
xor
sub
dec
test
sub
out
sbb
adc
mov
mov
xchg
fwait
xchg
adcb
mov
add
test
scas
flds
cmp
outsb
jo
mov
jmp
ret
push
and
push
aas
jo
sbb
icebp
sbb
mov
or
fnsave
outsb
mov
sbb
dec
cmpsb
loop
adc
jl
mov
mov
xchg
jge
xchg
xor
fsubr
jg
sbb
adc
fs
icebp
and
jae
mov
mov
jns
push
xchg
loop
test
das
inc
out
jecxz
aaa
nop
jae
lds
adc
sub
jae
push
in
xchg
divl
mov
shlb
clc
jno
jle
and
icebp
dec
stos
xor
push
cwtl
fcompl
or
arpl
inc
mov
fsubr
fcomi
in
outsb
movsl
es
cmp
popa
sub
mov
popf
add
clc
and
scas
jo
jge
pop
inc
pop
popa
cmpsb
sbb
mov
jb
js
ss
dec
stos
scas
inc
or
and
mov
mov
ds
mov
movb
or
arpl
test
inc
in
xor
or
rorb
jmp
fsubrl
shl
sub
test
bound
aad
xchg
mov
enter
push
jo
shr
pop
jns
lods
into
iret
movsb
movsb
mov
shrl
sub
mov
sub
notb
push
les
fucom
inc
fwait
lock
pmullw
mov
pop
cmp
rclb
faddl
and
test
mov
sti
sbb
mov
or
ret
mov
mov
inc
mov
push
jge
dec
lcall
xchg
dec
push
xor
pop
and
and
scas
push
xor
adc
xor
jb
lds
cli
inc
dec
aad
loop
iret
outsb
mov
rcrl
xor
jne
icebp
push
mov
inc
icebp
shrb
jbe
and
stos
jg
hlt
cmp
sbb
pop
mov
mov
sub
and
mov
aaa
stos
movsb
lret
sub
xchg
aas
jge
lea
int3
xchg
or
mov
test
add
mov
sbb
adc
xor
mov
and
bnd
lods
mov
xchg
rcr
and
sub
fistpl
mov
call
insb
mov
xor
fcompp
imul
mov
xlat
xchg
sub
mov
movsb
jmp
pop
test
push
xchg
mov
lock
lea
rorb
in
ds
out
cwtl
into
push
cmpsl
pop
inc
or
packsswb
inc
and
ja
jo
pop
cltd
loop
pop
push
pop
jbe
cld
int3
inc
iret
jne
cs
loope
lcall
pop
mov
pop
bound
ljmp
into
push
ds
ret
in
inc
and
sub
test
dec
lock
cmc
lret
cmp
xchg
fdivl
repz
dec
inc
cmpsb
jnp
popa
mov
shrl
push
pop
in
add
cmp
mov
fs
sbb
or
inc
test
leave
xor
into
leave
fcmovnb
jl
jo
sahf
xor
outsl
pop
lcall
xor
sub
test
addr16
jle
xor
cmp
mov
frstor
jmp
stos
and
out
ret
and
insb
pop
lods
sbb
xchg
loopne
inc
stos
into
fimuls
add
fisubs
dec
add
testb
push
insl
test
cmp
pushf
out
sub
rcr
sti
rcr
jecxz
bound
pusha
jmp
cmp
push
sbb
lcall
mov
xchg
or
fistpll
scas
adc
scas
sbb
jg
movsb
call
pop
sahf
dec
pop
lcall
mov
push
cmpsl
or
dec
lds
lods
or
mov
push
cmp
push
mov
add
mov
aam
pop
outsl
fcoms
ljmp
or
add
xor
imulb
ja
cmp
psraw
or
in
pop
icebp
out
test
pop
mulb
ljmp
hlt
mov
mov
popf
shrl
pop
int
imul
pop
lds
jle
mov
jg
movsl
repz
jne
rcrl
or
in
movsb
repz
out
push
inc
push
scas
rcrb
aaa
pusha
std
sbbl
mov
inc
imul
loope
xchg
pop
cmp
stos
mov
mov
mov
in
inc
leave
ja
data16
mov
lret
roll
lods
pop
rorb
dec
addr16
xchg
jg
aad
jne
dec
inc
push
in
jp
fmulp
cs
mov
cli
push
xorl
ljmp
ljmp
sub
das
loop
fadd
inc
inc
xorb
outsl
xchg
es
sbb
lods
imul
sbb
mov
inc
test
xlat
outsb
aad
je
adc
xor
fldl
roll
sub
sub
lret
push
les
test
out
lods
cmp
push
adc
adc
add
inc
jp
inc
add
cmpsl
cmp
mov
repz
inc
cmpsl
enter
popf
ret
les
xchg
lret
sbb
cmp
inc
xor
push
pushf
adc
aaa
sbb
and
test
inc
xor
dec
cs
shll
js
xor
mov
fistl
js
mov
pop
mov
dec
and
mov
and
and
and
pop
mov
jg
fcmovb
add
movsl
mov
addr16
cld
in
sbb
std
sbb
fstpl
inc
insl
hlt
dec
mulb
cltd
cltd
in
sbb
inc
xchg
iret
sarb
lahf
jno
pushf
sarb
xchg
ret
js
clc
add
xor
adc
insl
mov
cmp
and
mov
adc
popa
mov
mov
push
mov
pop
mov
test
push
out
push
xchg
xor
add
pusha
leave
lock
inc
jg
cmp
fsubr
mov
iret
dec
mov
shrd
nop
ret
aam
outsb
aas
pushf
aam
sahf
jno
repnz
xchg
fcoms
add
ss
mov
stos
int
stc
push
xchg
and
mov
imul
insl
fldl
iret
or
test
add
xchg
add
out
inc
or
pushf
xor
fildl
fnstsw
add
mov
and
sub
arpl
jns
ret
dec
in
mov
sbb
testb
cltd
scas
push
pushf
loope
xor
and
mov
test
pop
mov
insb
sub
xchg
popf
sbb
push
jmp
xor
subb
lea
lods
jl
or
xor
pop
stos
push
sub
scas
push
mov
lods
iret
cmp
jnp
push
mov
mov
bound
inc
adc
in
mov
test
mov
inc
mov
push
lds
adc
xor
rolb
mov
xchg
xor
loop
rcll
sub
mov
or
ret
or
pusha
adc
mov
fsub
repz
cmc
popa
pop
outsl
mov
and
dec
mov
jo
jecxz
add
lock
nop
outsb
inc
into
and
les
mov
jge
or
js
test
xchg
pandn
nop
in
cmp
lea
inc
xchg
jp
inc
out
cmpsl
sbb
sub
jmp
imul
cmc
sbb
test
jnp
les
je
sub
test
cld
adc
jnp
cmp
pop
bound
mov
and
shlb
notl
pop
shlb
imul
lea
pop
mov
enter
inc
enter
jno
stc
push
aaa
sub
cmp
orb
mov
dec
outsl
adc
int
cmp
xchg
lahf
pop
fdivs
incl
loop
xchg
dec
mov
mov
add
cltd
lcall
mov
sahf
xchg
add
xchg
jecxz
call
push
dec
pop
mov
add
add
xor
arpl
push
loope
push
out
xchg
and
out
jne
jbe
lret
icebp
inc
jg
and
lret
cld
cmp
push
jb
cltd
cwtl
outsl
and
xorl
push
decl
pop
cvtpi2ps
push
icebp
push
scas
rcll
lods
cld
outsl
pushf
into
jno
lcall
and
sbb
jns
xor
mov
in
jne
cmp
cmc
cmpsl
mov
out
stos
movsb
ja
nop
loope
jnp
adc
mov
cltd
ss
jge
xor
loop
xchg
pop
pop
call
jmp
jl
jbe
or
mov
jp
shr
sbb
xchg
popl
add
jo
adc
loopne
cmp
or
add
cld
jge
sbb
movsb
pop
popf
push
xor
mov
stos
mov
mov
cmpl
sub
xchg
hlt
roll
adc
cs
les
ret
pop
aad
popf
into
push
lds
dec
jb
enter
sahf
lock
mov
inc
lock
pop
imul
jge
sub
xor
add
inc
ljmp
loop
mov
subl
movsb
nop
xor
mov
mov
xor
push
jo
ret
pusha
xchg
shrb
jno
andl
out
arpl
pop
inc
stc
mov
xor
das
and
inc
stc
sarb
daa
or
pop
xchg
mov
adc
adc
and
mov
mov
inc
stos
xorl
cmp
lods
xor
sub
and
aas
lret
cmp
int
or
adc
shrl
pusha
ret
rcr
clc
dec
jmp
jno
addps
sbb
xchg
jbe
sbb
push
in
xchg
xchg
push
dec
pusha
fadd
in
xor
outsl
mov
cmp
les
and
imul
test
stos
mov
mov
inc
xchg
sbb
jle
inc
jne
sti
or
sbbl
adc
cli
cmpsl
pop
repz
add
cmp
jecxz
sahf
xchg
lret
mov
pushf
iret
loope
aaa
cmpb
aaa
das
fisubrl
hlt
push
mov
jle
out
stos
test
stos
insl
fidivrs
out
cmp
adcl
sbb
clc
cmp
icebp
fwait
enter
js
pop
gs
xchg
jnp
push
dec
enter
sub
fsts
mov
loope
pop
xchg
sbb
std
xchg
shlb
lock
pop
rolb
mov
pushf
pop
mov
ffree
mov
adc
sub
out
dec
mov
adc
dec
sbb
adc
lcall
fiadds
sarl
rcrb
les
mov
mov
cmpsl
subl
or
mov
aam
lock
push
stos
sbb
arpl
xchg
mov
inc
stc
sbb
jnp
popa
or
enter
jb
dec
es
sub
ds
mov
mov
jecxz
xor
jns
inc
inc
in
icebp
fildl
fstps
inc
xchg
out
sahf
cmpsb
sbb
cmc
rolb
sti
test
movl
lcall
adc
aas
icebp
push
bound
sub
adc
stos
and
loop
cwtl
cld
or
jmp
outsl
in
inc
imul
sti
pop
das
pop
jae
dec
and
popf
cwtl
repz
sub
outsb
nop
jmp
add
andl
adc
adc
xor
in
les
insl
add
xor
mov
loop
cld
lea
pop
aad
movsb
mov
icebp
test
jecxz
xchg
mov
loope
nop
cmc
xor
flds
shl
add
cmp
xchg
shrl
clc
int
jg
cltd
add
mov
sub
ljmp
mov
in
mov
push
in
xor
dec
pop
mov
cmpsb
mov
imul
cmp
inc
mov
call
push
sbbl
add
sarb
push
cmp
mov
add
out
mov
jne
mov
or
mov
lahf
outsb
mov
xchg
out
cmp
pop
cwtl
mov
push
mov
xor
scas
lods
and
cmp
cmp
sub
loopne
xchg
movsl
dec
sbb
fwait
outsb
test
or
mov
dec
jne
fnstcw
nop
iret
jg
or
xchg
jo
or
leave
call
leave
cmpl
or
dec
push
xor
pop
xor
mov
pushf
mov
in
dec
xlat
negl
dec
mov
sbb
xor
sbb
inc
pop
push
mov
xchg
cmp
lock
movsb
mov
and
mov
dec
dec
int3
pop
xchg
push
pop
outsb
clc
outsl
std
mov
movsb
add
out
rolb
mov
dec
das
xor
je
in
jg
mov
subl
adc
jb
test
cmp
ja
mov
mov
sahf
jo
mov
xchg
insb
cmc
dec
push
pushf
iret
dec
imul
fidivrl
js
mov
adc
cmp
mov
lods
push
sti
nop
add
adc
xchg
in
fcom
ss
add
adc
out
arpl
mov
in
bound
bound
jbe
ja
xor
cmp
int
or
and
test
sbb
adc
dec
mov
xchg
mov
mov
lret
js
mov
aas
or
je
ret
adc
sub
adc
sahf
arpl
out
pushf
aad
rol
leave
xor
stos
das
push
inc
sti
stos
mov
lds
lcall
ja
loope
dec
push
pusha
xchg
or
scas
adc
mov
in
pop
test
bound
adc
imul
mov
sbb
sbb
dec
sahf
stos
jnp
aad
add
push
adc
jle
inc
dec
cwtl
jo
loope
lods
cmp
push
daa
int
cmp
or
mov
xchg
cs
fwait
scas
jbe
mov
scas
and
push
test
pop
add
push
jns
aad
push
mov
xor
mov
or
or
bnd
movsl
mov
sbbb
mov
or
ljmp
icebp
in
icebp
into
pushf
pop
dec
jp
enter
mov
mov
mov
int
pushf
jno
dec
repz
push
cmp
mov
adc
pop
adc
sub
insl
andb
daa
push
jo
mov
jmp
in
push
inc
mov
arpl
push
xor
mov
out
adcb
cmp
push
mov
mov
pushf
jp
sbb
pop
inc
xchg
xor
xchg
out
stc
or
or
push
out
aaa
ds
mov
hlt
sbb
std
rcrb
arpl
xlat
xor
dec
rcr
mov
adc
cmpsl
sub
xlat
dec
xor
repz
or
lret
mov
cs
fiaddl
mov
movsl
xorl
stos
lea
jp
inc
jno
ret
and
imul
negb
cld
pop
das
lcall
fsubr
sub
sarl
mov
mov
xor
mov
out
in
subb
das
and
pop
mov
shrl
stos
sbb
sub
mov
in
mov
bound
push
pop
out
sahf
negb
decl
in
outsl
add
cmpsb
and
inc
jne
jbe
shrb
inc
cwtl
mov
sub
and
dec
push
scas
or
add
xlat
sti
inc
push
cmp
sbb
lret
aam
sub
xchg
cmpsl
add
fwait
mov
shl
jg
add
add
ljmp
mov
or
pushf
mov
mov
out
sti
push
pusha
add
fwait
and
push
pop
dec
pop
test
dec
jmp
xchg
pop
mov
sbb
test
cld
dec
lcall
pop
jp
sbb
or
movsb
popf
add
sub
jo
add
sub
cli
add
lcall
push
xchg
arpl
or
adc
ljmp
iret
mov
inc
lahf
imul
cwtl
adc
fadd
outsl
aaa
jmp
cmp
sub
sub
mov
push
in
xlat
add
push
dec
mov
movb
add
sub
lahf
aad
lods
ss
std
cmp
push
and
add
adc
sbb
test
add
ljmp
pop
out
and
iret
xchg
in
ljmp
lods
test
push
push
insb
inc
inc
cmc
xchg
inc
lret
mov
stc
xchg
mov
loope
inc
push
lods
sbb
enter
mov
mov
xor
pop
sbb
aam
dec
stc
or
shll
aam
ljmp
push
and
jo
mov
test
mov
adc
sub
ret
pop
ja
dec
andl
adc
jle
fisttpl
or
jb
sahf
ret
or
push
mov
repz
icebp
mov
shlb
lods
hlt
stc
add
xor
sbb
xor
inc
cmpsb
bound
pop
pusha
clc
pop
into
addr16
stos
dec
rorb
jmp
daa
mov
daa
dec
sub
mov
push
imul
call
pop
addr16
cmp
mov
mov
mov
xor
sbb
inc
scas
jp
rcr
push
xor
fsubrl
xchg
addr16
and
mov
mov
cld
cmp
mov
popa
movsl
ljmp
cmp
push
and
loop
test
adc
test
loop
or
pop
ret
dec
stos
jl
mov
cmpsb
jmp
pushf
mov
or
cmp
loopne
gs
adc
fsubl
sbb
xor
mov
mov
lods
or
stos
and
push
push
ret
ror
xor
jno
sbb
jo
jno
rcll
sarl
xlat
xchg
out
cltd
mov
outsb
or
enter
cltd
xchg
push
fwait
adc
dec
out
pop
fdivrp
scas
mov
cmp
in
add
xor
rcrl
es
cmp
xor
dec
and
adc
fdivrl
popa
ljmp
aaa
inc
les
les
shll
nop
pop
xchg
xor
lock
mov
repz
cs
cmp
cli
cmovne
cmp
or
dec
mov
push
mov
out
fbld
add
popa
scas
sub
stos
idivl
push
lods
adc
pop
aas
insl
adc
mov
mov
sarb
lods
sub
lcall
lods
pushf
popf
xchg
popa
sub
dec
or
pop
ss
jle
mov
pop
cltd
cmc
xchg
pusha
mov
into
rorb
hlt
test
mov
cltd
cmpsl
lea
and
pop
push
xorb
shrb
push
arpl
mov
xchg
and
fidivrl
jb
xchg
pop
stos
and
fldcw
jns
lahf
sbb
or
dec
push
cmc
jecxz
outsl
or
inc
jmp
jl
imul
mov
or
fcmovnbe
pop
loopne
xlat
lahf
ret
add
fcompl
or
cs
pushf
daa
cmpsb
aaa
mov
mov
lcall
aad
jns
mov
add
pop
push
push
fnstenv
aad
loopne
icebp
iret
lahf
push
sub
inc
loopne
xchg
add
js
mov
xor
int
adc
pop
jo
or
mov
sti
loope
dec
cmp
jmp
sub
sarl
repnz
les
jb
repz
test
int3
fidivs
or
in
or
fmull
sahf
mov
lods
cmp
sub
and
icebp
push
mov
in
pop
pop
xchg
xor
out
mov
idivl
cmc
push
xor
out
ss
std
in
cmp
mov
xor
std
mov
push
ret
fistps
shlb
call
imul
xchg
xor
stc
add
mov
adc
imul
mov
test
inc
pusha
insw
rcll
jg
and
cmpsb
xor
scas
insl
out
push
fcoml
mov
push
mov
and
or
aam
xchg
jle
bound
dec
inc
add
add
add
sub
fsubl
push
inc
xlat
sub
and
ds
mov
xor
mov
dec
sahf
call
cltd
data16
in
pushf
jnp
xor
scas
add
adc
mov
xor
in
push
incb
loopne
ret
jns
push
ds
ret
push
cmp
test
out
lods
pop
in
call
jns
cltd
cmpsb
add
mov
dec
and
mov
les
pop
jno
mov
rolb
mov
mov
sub
mov
and
add
sti
popf
movsb
or
fcoml
mov
orl
pop
xchg
cmp
inc
addr16
fucom
hlt
in
or
imul
xchg
mov
sub
cmovs
or
adc
jno
sbb
mov
and
and
aad
fcompl
rorb
xor
fsts
aad
dec
fcomps
push
cld
pop
jmp
sub
xchg
pop
jecxz
cmp
es
loop
js
push
mulb
loopne
mov
mov
push
jno
dec
outsb
shll
add
push
les
dec
sub
stos
mov
sub
insl
mov
imul
nop
hlt
rcll
sar
int3
rcrl
ret
shll
or
cltd
je
dec
nop
sbb
add
insb
push
mov
ret
lea
pop
jle
sub
pop
add
ss
xchg
cmp
test
addl
stos
cmc
repnz
sbb
test
cmc
hlt
sbb
sbb
mov
into
lahf
mov
mov
push
mov
aas
or
loope
hlt
sbb
es
iret
push
cmpsb
out
aam
out
jb
rorb
nop
mov
pop
xor
pop
rcrl
xchg
insl
pop
xor
jmp
pushf
add
mov
pop
daa
pop
mov
mov
ret
sub
mov
lods
mov
je
push
mov
pusha
push
xchg
js
add
xor
cltd
int3
in
mov
jmp
cmc
adc
addr16
jp
mov
ljmp
mov
pop
test
and
mov
rorb
repnz
pop
cwtl
cli
fs
mov
fwait
pop
fldenv
ja
ljmp
push
mov
clc
pushf
sub
sub
fdivr
push
inc
rolb
aad
jg
xchg
xor
rol
push
and
mov
stc
fldenv
test
jecxz
pop
xchg
repz
into
mov
mov
data16
pop
mov
pop
jno
ret
rol
push
xlat
andb
mov
xchg
int
sub
push
sbb
mov
into
iret
nop
jo
or
and
imul
gs
cmp
mov
cmp
mov
add
out
hlt
pop
mov
jae
fidivrs
pop
adc
stos
fmuls
push
ds
repnz
call
lcall
repz
in
xchg
lods
sbb
out
cmp
cs
dec
hlt
out
push
lea
mov
data16
test
lcall
push
aas
sbb
pop
mov
push
dec
testb
mov
add
aam
insb
dec
mov
aad
pop
xor
rcrb
push
push
mov
lcall
repnz
shll
inc
leave
or
push
xor
inc
add
mov
shrl
stos
pushf
arpl
jp
stc
sti
popa
sahf
sub
gs
or
js
add
mov
add
xchg
and
sbb
hlt
adc
imul
sti
enter
dec
mov
testl
ja
and
mov
fdivrl
cli
mov
mov
lds
cmp
neg
mov
pushf
aam
and
mov
gs
xchg
jne
stos
mov
dec
sarl
mov
jmp
dec
xor
cmp
popa
loop
into
jb
jecxz
emms
dec
aam
push
push
push
jmp
test
sbb
mov
mov
cmp
dec
adc
jmp
outsb
mov
xchg
sbb
xlat
in
lea
and
es
fisttps
in
push
insl
jg
and
push
dec
icebp
mov
icebp
xor
push
push
test
leave
lock
in
push
int
xlat
movsl
lods
adc
into
sbb
shrl
in
and
inc
xor
dec
test
inc
out
adc
mov
ljmp
dec
faddl
cmp
add
negb
xlat
mov
int3
jecxz
push
lret
lar
test
cmc
fdivrs
rcll
mov
outsl
sub
xor
sbb
iret
stc
pop
shrl
sbb
loope
insl
sub
mov
fyl2x
aas
ret
imul
mov
and
rcrb
inc
mov
sbb
xchg
push
jl
popf
lahf
cltd
adc
mov
pop
insb
scas
je
xchg
dec
adc
dec
cs
enter
pop
and
mov
cmpsl
mov
bound
inc
cmpsl
mov
enter
pop
mov
pop
mov
push
jno
aas
cwtl
in
xlat
or
out
push
inc
shll
ds
in
ss
stos
push
and
lds
push
or
inc
inc
sub
loop
xchg
xor
or
pop
mov
sbb
clc
xchg
push
mov
jg
in
xchg
fidivrs
adc
sahf
dec
jle,pt
dec
test
inc
jp
xchg
pop
scas
das
sub
xchg
mov
leave
pop
jno
pop
sarb
mov
xor
adc
jp
dec
adc
cmpsb
push
pop
leave
das
sub
cmp
inc
inc
hlt
sahf
xchg
ss
scas
sbb
mov
jno
jp
add
or
in
pop
sti
xor
lahf
push
imull
iret
hlt
pop
stos
xor
pop
imul
jnp
xor
xchg
mov
lea
dec
ljmp
jbe
sbbb
dec
outsl
cmp
mov
push
pusha
sub
xor
leave
aaa
push
lods
cli
add
dec
enter
mov
lahf
sbb
inc
inc
repz
bound
push
lds
insb
jle
movsb
adc
mov
add
inc
xor
shl
insb
cmp
cmp
test
dec
dec
or
lahf
mov
jg
test
insb
std
adc
mov
sub
push
cmp
ja
sub
pop
mov
and
sub
mov
cli
rclb
fimuls
mov
xchg
popa
cmpsb
test
jns
and
sbb
sub
push
sti
sub
sub
and
push
xlat
leave
add
mov
hlt
xor
adc
cltd
mov
adcb
sub
rcl
lret
mov
fs
xchg
call
and
pushf
sbb
lret
fnstcw
test
sbb
in
pusha
push
jae
bound
push
daa
fcoms
jns
pavgw
adc
nop
push
pop
popf
sbb
pop
stos
sub
dec
jmp
insb
mov
cmp
push
add
push
outsl
daa
mov
cmp
push
sub
das
gs
cld
push
fdivs
ficomps
jnp
pusha
test
and
rcrl
xchg
sbb
xchg
cmpsb
sbb
scas
add
add
push
dec
fninit
push
in
mov
dec
push
jmp
and
mov
clc
push
adc
add
shrb
push
sub
cwtl
scas
mov
mov
mov
mov
xchg
in
lea
lcall
sub
outsb
xor
call
pop
les
mov
or
xchg
mov
adc
xor
or
dec
sarb
pop
jmp
std
in
add
jae
or
repz
imul
insb
dec
sbb
dec
pushf
insl
jns
add
or
jmp
sbb
rolb
cmc
data16
mov
cmp
inc
dec
adc
wbinvd
out
filds
push
sub
or
cmpsl
loop
mov
inc
mov
scas
inc
test
out
mov
cmp
fs
in
adc
xor
add
xchg
jnp
lea
mov
fs
sub
adc
jno
std
fs
popa
sub
mov
or
push
test
xor
aad
cli
jg
adc
mov
mov
into
movsl
imul
inc
pop
sub
int
ud0
sub
mov
and
mov
cmp
mov
mov
xchg
push
loopne
and
ss
xor
scas
or
and
jb
into
fnsave
rolb
aas
sub
mov
out
ss
xchg
inc
out
mov
out
and
pop
js
jecxz
and
lret
inc
push
popa
loop
cmp
int3
push
or
adc
push
xchg
aad
push
std
dec
in
xchg
cs
mov
test
dec
dec
shll
mov
outsl
cmp
aaa
ljmp
pop
inc
mov
idivb
int
cltd
dec
jae
xor
xlat
lcall
cwtl
push
cmpsb
loopne
int
clc
mov
push
decl
in
sbb
jle
loop
mov
test
popf
jge
mov
test
fdivr
sbb
lock
jns
repnz
xorl
xchg
xchg
andl
sarb
cmp
loopne
sub
fiadds
mov
mov
sbb
inc
shl
iret
addb
mov
lds
sub
mov
int
in
push
pushf
cld
pop
lahf
dec
jns
movsb
cltd
inc
insb
xchg
dec
push
sbb
xchg
test
push
sbb
xchg
les
call
add
and
inc
jle
repz
inc
std
adc
loopne
pextrw
push
mov
fdivs
mov
loopne
cmp
jecxz
xor
notl
popf
pop
fucomi
jmp
mov
jb
dec
jge
rorl
out
testb
ret
rcr
adc
int3
push
ret
scas
sub
leave
sbb
outsb
or
dec
push
lods
aam
mov
in
loopne
dec
cmc
inc
mov
arpl
inc
std
or
fidivs
bound
div
out
out
rcl
sbb
lcall
js
pop
stos
insl
ja
inc
neg
jecxz
sub
and
mov
pop
loopne
mov
aaa
mov
inc
arpl
out
cmp
out
pusha
or
jp
push
enter
fsub
push
pop
or
test
push
xchg
cs
cli
cltd
in
or
push
xchg
add
sbb
xor
add
mov
pop
pop
mov
addr16
jge
pop
mov
out
pop
push
call
lock
push
out
xor
cmpb
mov
insb
mov
fucomp
inc
add
into
jne
maskmovq
xor
je
and
movsb
cmc
xor
mov
add
subb
pop
stos
mov
fwait
xor
shlb
push
push
sbb
ret
cmp
cs
xor
arpl
jmp
sub
dec
test
repnz
jg
movsl
jge
pop
sbb
cmp
imul
cmp
insl
mov
popa
add
test
fcompl
cld
movb
mov
std
mov
popa
out
aaa
jecxz
or
je
sbb
movsb
mov
pop
sbb
aam
int
sbb
mov
incb
or
fnstcw
test
sarl
loopne
adc
pop
mov
push
add
repnz
sbb
ljmp
mov
dec
lods
jne
pushf
jmp
mov
in
lahf
and
push
cmc
jmp
push
adc
outsb
cmpl
sub
aad
inc
add
jle,pn
mov
mov
sub
mov
ret
mov
xchg
mov
int3
pop
pushl
aad
jp
push
inc
imul
aaa
test
lcall
scas
add
cmpsl
cltd
fs
push
sbb
add
fdivs
xor
mov
push
mov
mov
sub
pop
dec
jge
fs
fsubl
adc
cmpl
jle
mov
iret
adc
nop
inc
and
imulb
aad
sbb
bound
inc
inc
pop
inc
inc
xchg
pusha
ss
bound
cmp
mov
pop
bnd
lock
loope
out
fwait
int
cmp
fistpl
or
mov
push
stos
pop
adc
dec
push
cmp
and
sub
ss
sbb
cmc
ret
push
pop
aas
jns
xchg
xchg
add
fsubr
mov
mov
mov
cmp
mov
addr16
cmp
ret
fisubs
mov
clc
adcl
stc
pop
pop
out
popa
outsb
jo
mov
add
mov
push
pop
add
cli
add
shlb
push
adc
mov
loope
sub
mov
mov
in
push
int3
out
mov
dec
mov
and
ss
ret
xchg
dec
mov
ret
jnp
leave
fnstcw
jo
pushw
push
inc
enter
inc
adc
loop
mov
hlt
mov
dec
dec
xor
jg
sub
aaa
cmpsl
cmpsb
push
pop
xchg
pop
sbb
mov
inc
xchg
jp
mov
in
adc
xchg
jne
dec
mov
mov
inc
imul
inc
jmp
movb
out
fisttpll
xor
popf
adc
xchg
mov
push
cmp
pop
push
mov
imulb
ja
pop
dec
cmp
pop
inc
mov
mov
fdivrs
popf
nop
inc
out
add
sbb
cmp
mov
xchg
insl
add
pop
jnp
ja
clc
mov
cmp
ret
sbb
cltd
jle,pt
and
pop
adc
jbe
mov
push
scas
ljmp
sub
sbb
or
xor
std
enter
loope
lods
xchg
fistl
and
adc
lods
fbld
mov
xor
push
test
jo
cmp
call
mov
imul
mov
stos
fs
fdivrs
mov
inc
pusha
and
sbbl
insb
jge
sub
sbb
adc
lahf
sub
add
aad
inc
push
dec
mov
pop
leave
and
pop
daa
jnp
push
pushf
aad
aaa
mov
jecxz
in
and
mov
les
dec
mov
pop
adc
cld
incb
insb
xchg
test
push
xor
and
xor
dec
mov
ficoml
out
inc
sub
mov
cmp
sub
sahf
cld
add
mov
dec
inc
jl
cwtl
aaa
jecxz
pop
mov
mov
sub
push
pusha
mov
mov
shlb
in
nop
pop
inc
jle
orl
and
pop
xorb
cmp
adc
mov
inc
imul
cmp
int
pop
pusha
ja
jle
sti
sbb
icebp
daa
lcall
sbb
and
out
and
aaa
jmp
cmp
daa
push
xchg
loopne
push
hlt
mov
cmpb
sub
std
sti
sti
mov
scas
pop
lds
andb
push
cli
push
jle
test
data16
xor
call
repnz
shll
mov
jbe
outsb
outsb
or
sub
ds
cmp
pop
stos
scas
aaa
insb
and
cmp
inc
push
arpl
xchg
ficoms
aaa
lods
nop
js
fsts
and
add
fcompl
jo
inc
cli
nop
mov
imul
out
or
ds
mov
outsb
mov
in
jle
push
movsl
rcrl
mov
movsl
cmpb
mov
jne
pop
cmpl
daa
jnp
je
icebp
dec
mov
xchg
hlt
subl
push
in
lds
idivl
jge
cld
fs
sub
pop
ret
add
movsb
xchg
insb
ljmp
scas
push
js
jnp
push
jnp
and
shll
pusha
jl
data16
jle
and
shll
mov
pop
dec
inc
push
in
lret
mov
inc
popa
test
add
dec
test
lds
sub
mov
sbb
lock
pop
clc
mov
icebp
sbb
sub
test
leave
push
stc
cltd
mulb
or
sub
sbb
cmp
ss
pop
cld
cld
data16
mov
inc
add
loope
pop
aas
jmp
mov
inc
addl
je
inc
pop
cmpsl
push
mov
icebp
stos
aaa
pop
sbb
lret
sub
jg
int
scas
rol
jecxz
push
and
loopne
cmpsb
mov
test
xchg
add
ja
or
cwtl
jmp
push
jne
or
pop
mov
fdivs
cmp
pusha
subb
add
stc
push
mov
hlt
js
outsb
mov
or
test
sbb
and
shrl
and
sub
adc
mov
inc
lea
in
cmc
mov
push
cmp
mov
xor
pop
jnp
and
jge
push
or
fldt
or
jmp
push
cmp
mov
ret
outsl
int3
push
jl
insb
push
ficoml
adc
aas
push
mov
imul
mov
pop
xor
sub
xchg
movsb
xor
and
xor
in
lock
or
inc
pop
loope
loopne
nop
test
xchg
repz
pop
mov
xlat
popf
mov
cmpsl
loope
pop
lods
cmpl
movsb
mov
pop
xlat
fwait
lods
sarl
adc
push
sbbl
mov
les
dec
dec
repz
pop
cltd
outsb
cmp
mov
inc
rcr
test
adc
push
add
inc
test
mov
pop
jo
inc
lret
and
mov
stos
adc
in
fsts
gs
cltd
adc
fstl
pusha
add
sub
mov
stos
jle
imul
push
pop
xchg
cmpsl
insb
and
in
insl
fistps
les
xchg
mov
dec
mov
cvtps2pd
and
mov
lds
add
xchg
mulb
enter
out
mov
aaa
add
sti
dec
xchg
mov
sub
popf
popf
hlt
pop
sbb
xor
sub
mov
push
cwtl
fisttps
inc
mov
xor
cld
cmpsl
or
jmp
cmp
push
test
pusha
jecxz
loope
movsl
jns
repz
mov
jge
fcomp
popa
pmaxsw
sub
lcall
and
or
inc
aas
mov
popa
sub
sub
cld
outsb
or
pop
push
inc
or
xor
mov
inc
xchg
hlt
push
add
loop
xor
lahf
ror
cmp
mov
loopne
notb
insl
fs
sub
andl
cmpsb
dec
leave
aad
pop
leave
sub
dec
mov
inc
xchg
dec
jno
or
in
xchg
sub
movsl
ret
adc
pop
add
inc
dec
cmp
adc
outsl
sbb
cltd
push
dec
test
rcl
jmp
dec
cwtl
jae
daa
jns
jmp
xlat
push
mov
lret
inc
icebp
push
mov
shlb
sbb
mov
mov
mov
push
shll
jl
push
pop
xchg
sahf
mov
cmp
insb
push
add
fmuls
mov
repnz
jp
push
lcall
mov
cmp
scas
or
stc
mov
dec
sti
hlt
xor
mov
sti
int
push
sub
in
test
in
sbb
and
popa
push
in
in
or
jns
inc
lds
ds
inc
out
cmpsb
sbb
mov
sbb
xchg
push
xchg
mov
sbbb
xchg
sub
xchg
push
push
jnp
sub
iret
mov
ja
mov
dec
mov
mov
shlb
add
jle
adc
fwait
sarb
lcall
ss
or
sbb
sarb
scas
mov
imul
inc
mov
cltd
movsl
loopne
int
push
rcll
popa
jmp
push
xchg
stc
cld
and
js
test
mov
inc
loop
jnp
sar
in
sbb
aas
xchg
add
hlt
int
testl
xor
sti
ret
jo
out
sbb
cld
ss
xchg
xor
ficoml
jns
push
jae
sti
mov
pushf
mov
das
xor
adc
iret
sti
mov
addr16
add
aaa
cmpsl
push
filds
jbe
inc
lods
in
stc
and
shlb
inc
adc
test
repnz
cwtl
xlat
aam
ficomps
mov
pop
call
push
mov
pop
sbb
mov
mov
into
push
inc
ja
outsb
mov
or
popa
xor
cmc
push
in
jmp
gs
test
rolb
pop
mov
mov
sub
cmc
orb
and
nop
mov
loopne
jbe
lcall
adc
xchg
sbb
add
popl
jg
into
dec
xor
addr16
jp
push
push
loope
popf
fildl
push
pushf
insl
ja
sub
test
xor
and
and
shrb
push
mov
ds
mov
cmp
push
ds
adc
sbb
push
sub
and
imul
outsb
cwtl
fstpl
sub
dec
xor
xorb
mov
fucom
enter
push
dec
xor
scas
cmp
dec
mov
cwtl
sub
xor
ljmp
lret
loopne
call
mov
sbb
xchg
pop
aaa
fbstp
sbb
mov
pop
repnz
or
xchg
testb
mov
jge
or
inc
and
push
jge
std
mov
adc
dec
cli
inc
adc
cli
cwtl
arpl
sub
dec
test
pop
dec
in
dec
mov
dec
push
int
loope
fsubrs
mov
cmpsl
sub
mov
push
sti
das
insl
fstl
pushw
adc
test
shlb
mov
outsl
scas
insl
push
and
sahf
int3
movsl
call
out
pop
test
adc
sub
outsb
rolb
or
or
popa
and
sbb
xchg
and
sbb
or
pusha
outsl
adc
fwait
pop
or
pop
pop
in
jo
movsb
inc
sub
cltd
andl
adc
mov
xchg
mov
push
lods
vmovapd
cmp
fdivrl
fs
fsubrl
xor
adc
pusha
mov
insb
jl
adc
xor
movsb
addl
fistpll
push
into
arpl
hlt
shlb
or
mov
xor
xchg
rorl
cmp
inc
mov
inc
sbb
rcrb
push
popf
xor
jge
rcr
mov
adc
cmpsb
push
out
movsl
lret
sbb
popa
insb
popa
mov
js
nop
popl
bound
mov
jge
adc
pop
pop
jns
push
xchg
lcall
outsb
andb
mov
and
cltd
idivb
xchg
ljmp
dec
sub
mov
scas
bound
les
or
cmp
inc
in
ss
movsl
inc
push
subb
lcall
mov
cmp
push
cmpsl
ljmp
outsl
xor
xchg
mov
out
jmp
or
test
sbb
aaa
mov
loope
dec
jmp
xor
xchg
outsl
mov
repnz
push
cmpsl
icebp
iret
cli
and
inc
in
bound
lds
mov
sbb
push
xlat
fs
fdiv
mov
push
insl
push
cs
in
jge
cmp
neg
dec
jp
mov
out
test
jne
pop
fists
fstps
pushf
sub
sub
sar
insb
popa
xor
lds
xor
and
nop
mov
ja
data16
mov
jmp
lods
and
inc
mov
inc
push
push
and
mov
mov
pop
aad
out
add
cmp
dec
pop
jb
bnd
rolb
xchg
stc
pop
out
cmp
pusha
adc
pop
push
adc
add
dec
mov
in
ss
lcall
push
adc
lahf
inc
nop
add
loopne
sbb
push
negb
cmp
xor
jmp
lods
jns
sahf
add
data16
mov
stc
hlt
out
outsb
test
push
test
das
pop
and
push
dec
pop
stos
pslld
mov
cs
jns
push
testb
adc
call
int
fisubrs
mov
out
add
mov
js
mov
add
fadds
stc
hlt
test
aas
and
inc
inc
inc
xchg
sbb
or
insl
call
je
sbb
idivb
rolb
cmpsl
leave
js
mov
rclb
and
sbb
mov
jne
push
and
movsl
outsb
pushf
push
incb
pushf
aaa
xor
mov
outsb
or
lahf
add
addr16
je
frstor
pop
mov
inc
and
stos
loopne
push
and
or
hlt
out
test
push
cltd
mov
sbb
mov
dec
aam
push
xor
iret
jge
push
repnz
aas
ret
sbb
lcall
aaa
rol
das
in
out
ja
fldenv
dec
or
js
add
mov
imul
pop
int
pop
adc
pop
shlb
mov
lds
inc
pop
mov
pop
sbbb
add
lret
sub
fucomp
lahf
jnp
push
push
into
mov
repnz
push
mov
mov
or
das
outsb
dec
shlb
lcall
das
lods
out
sub
sti
ret
cmp
or
imul
sub
xchg
xchg
xlat
adc
xor
mov
add
push
pop
jne
ja
xor
fistpll
clc
inc
sbb
add
mov
sub
dec
inc
cmp
add
xchg
mov
sub
xchg
xor
mov
data16
push
and
jbe
push
mov
out
adc
mov
enter
imul
mov
in
jp
or
cmp
push
fidivrs
jno
mov
mulb
sar
mov
cmp
iret
jno
out
xchg
in
adc
rclb
mov
idiv
icebp
jmp
lods
xchg
cmp
iret
cmp
in
pop
mov
or
inc
sub
out
test
out
xor
fcmovbe
mov
shrb
adc
jl
movsb
sbb
push
xchg
mov
pop
add
inc
inc
dec
movsb
cli
das
sbb
mov
addr16
adcl
jnp
sub
jmp
lock
data16
jo
dec
pop
jmp
xor
int
cwtl
xchg
push
sub
sbb
cltd
arpl
pop
xor
add
out
in
xchg
ret
test
cmp
pop
pop
out
xchg
xchg
xor
test
pop
xchg
and
stos
sub
or
and
jb
jg
jne
shl
into
xchg
add
repz
jl
and
sub
mov
fwait
sub
fstl
loope
push
or
cmp
nop
hlt
loop
mov
cmp
rclb
lods
iret
add
out
xchg
fsts
sub
dec
in
lea
sbb
adcb
lret
loope
call
fldenv
data16
and
xchg
and
push
and
out
dec
mov
and
repnz
sbb
mov
test
jns
push
lods
mov
gs
adc
ss
adc
lds
in
pop
sbb
ret
shlb
cwtl
orl
pop
mov
jmp
outsb
enter
dec
inc
push
scas
lcall
scas
je
xchg
test
jmp
ds
ds
mov
std
push
shrl
aam
dec
inc
pop
lock
dec
imul
mov
ret
mov
sbb
movsb
cmpxchg
mov
add
mov
cmp
jle
jb
dec
imul
in
out
jmp
jnp
pusha
pushf
cmc
fsubp
mov
movsl
xchg
sahf
test
sbb
imul
mov
mov
xchg
mov
mov
mov
pop
dec
ret
aas
adc
movsb
xlat
std
push
cmp
pop
push
popf
adc
test
inc
mov
push
out
xchg
addr16
jae
xchg
testb
js
cmp
jne
ret
fcomps
fsts
ss
leave
jnp
add
sbb
adc
xchg
fsts
sub
push
lods
aaa
fs
scas
cmpsl
sti
xor
inc
xor
mov
out
pop
jge
xchg
sub
add
pushf
cmc
mov
fidivrs
pop
cmp
sub
sbb
ret
mov
das
int3
dec
and
xchg
sahf
inc
push
aad
sub
loopne
ja
dec
cmp
ljmp
subb
xchg
jg
pop
inc
shrb
inc
pop
stc
lret
dec
mov
xor
js
and
test
mov
arpl
mov
cmp
mov
stc
mov
into
jo
leave
add
bound
mov
nop
imul
pop
pop
sbb
ljmp
pop
sub
cmpsb
push
mov
cmp
insl
jge
movsl
cmpsb
sbb
mov
inc
or
out
xchg
xchg
adc
cmp
movb
adc
in
pushl
ljmp
sbb
pop
loop
sub
pop
dec
jl
insl
les
movsb
dec
adc
cmp
sbb
addr16
lods
dec
jae
or
sub
push
sbb
jae
mov
sti
mov
ja
push
inc
data16
or
inc
jecxz
push
daa
outsb
out
clc
jb
jge
xlat
add
and
push
rclb
push
mov
mov
test
adc
pushf
xor
sub
pop
ja
out
mov
sbb
mov
add
pop
mov
scas
pop
sub
xor
mov
dec
ja
movsb
xlat
jae
ret
in
pop
push
subb
xor
adc
fs
sti
pop
inc
gs
cmpsl
clc
xor
sbb
dec
push
xchg
xor
inc
sbb
lret
addr16
xchg
xchg
fisubl
aad
pop
inc
loopne
mov
cmpl
stc
in
push
pusha
test
push
cmp
push
mov
in
pop
xchg
push
xchg
mov
mov
sbb
mov
in
dec
cwtl
test
sbb
aam
or
pop
cmpsl
and
fwait
add
push
mov
sub
lahf
scas
xchg
mov
jb
les
insb
mov
mov
movsb
das
pop
pop
pop
mov
xchg
mov
loopne
jmp
aad
loop
jl
jg
imul
dec
clc
adc
mov
jp
hlt
lock
sbb
mov
jmp
cli
je
pop
inc
ret
ret
mov
and
xchg
ds
rcr
xchg
test
inc
shrb
pop
and
sub
sbb
push
sbb
repnz
jg
push
mov
fs
stos
aad
xchg
aaa
and
fwait
xor
mov
mov
sub
fstpl
shrb
divl
xor
adc
lcall
repnz
lea
and
cmp
jns
jo
insb
inc
or
jne
pop
loope
push
insb
mull
icebp
dec
daa
jmp
daa
jecxz
mov
push
or
xor
xchg
mov
lods
lods
outsb
mov
flds
mov
or
in
je
arpl
es
dec
out
out
xor
repz
aas
sbb
in
xchg
in
leave
insl
dec
xor
leave
ljmp
fs
stos
xchg
fsubrs
mov
enter
mov
xchg
cli
in
js
push
enter
mov
lds
test
push
sbb
xchg
pop
clc
sub
push
cwtl
mov
jno
and
fs
aaa
cmp
pop
cmp
inc
test
jns
jmp
fidivrs
mov
das
leave
neg
push
and
insb
lret
or
push
add
dec
stos
and
outsl
push
or
lds
sub
adc
or
js
jmp
add
movsb
repnz
jl
push
jo
mov
ret
test
jb
cmpsl
xor
add
inc
in
fadd
ljmp
dec
add
mov
call
or
mov
xor
mov
dec
xor
mov
cld
mov
les
ja
jg
in
imul
mov
and
call
mov
popf
sbb
jne
sbb
lods
fwait
inc
pushf
es
mov
pop
fwait
testb
xor
xor
lods
andl
push
adc
add
xor
cmp
push
and
sub
mov
popf
imul
adc
jo
mov
aad
and
fsubr
add
leave
pop
jb
mov
adc
pop
dec
push
movsl
push
push
sbb
cmpb
adc
add
pop
cmp
sub
test
fwait
adc
adc
sub
lcall
fdivl
lea
xchg
inc
jno
sub
jo
mov
fld
aas
jmp
mov
xor
and
jno
xor
mov
pop
adc
sbbl
mov
inc
mov
cmp
fnstenv
out
sbb
xchg
outsl
push
adc
pushf
clc
enter
xchg
jle
movsb
cmp
mov
mov
xchg
mov
adc
imul
sub
or
out
jo
stos
pop
sti
fisubl
xchg
or
lcall
add
and
and
mov
sahf
cmp
cmp
jmp
or
xchg
pop
sub
sub
and
mov
xor
xorb
out
jbe
adc
or
mov
cmp
out
outsl
or
shll
cmp
cmp
mov
ss
incb
lret
ror
add
and
sub
mov
in
xchg
push
in
bnd
repnz
dec
cli
rol
add
mov
fisubrl
fwait
ret
stos
pop
std
push
nop
or
mov
push
lock
jge
bound
scas
add
cltd
sahf
dec
popf
sbb
jg
jp
iret
faddl
scas
stos
aas
hlt
push
or
in
fisubrl
lcall
mov
xor
add
add
int3
xchg
ss
mov
lods
insb
ficoms
dec
call
pop
out
mov
inc
das
sbb
mov
mov
test
jnp
mov
fcomi
cmp
pop
add
xor
jl
lahf
cmp
sub
ja
push
sub
jp
pop
sbb
cltd
nop
xor
jmp
pop
lods
xlat
arpl
inc
add
xchg
das
out
enter
call
inc
mov
imul
stos
pop
dec
sbb
sahf
xchg
shrl
mov
rorl
dec
popf
sbb
push
pusha
inc
cltd
call
inc
inc
call
std
movsb
cmp
pop
inc
movb
mov
aad
push
lock
mov
icebp
xor
idivb
out
pop
mov
mov
sbb
pop
dec
out
cwtl
xchg
and
stos
sub
push
or
cmc
shrl
loope
and
cmp
sub
xor
adc
int3
jle
in
jle
int
js
sub
imull
push
pop
ja
pop
sbb
ja
sahf
scas
mov
sub
dec
ret
pop
mov
xor
sarb
cmp
jno
mov
adc
int
and
fstpt
mov
mov
jl
jne
cmpsb
add
inc
xchg
push
or
jecxz
insb
cmp
insb
iret
aaa
push
iret
xchg
pop
aad
cmc
bnd
test
popf
repz
sub
ljmp
in
xchg
fwait
jb
pop
loop
pop
mov
subl
pusha
add
or
scas
sub
push
daa
fdivl
fwait
sub
xor
das
imull
adc
xchg
pop
mov
fisubs
mov
push
mov
inc
and
rcrl
xchg
clc
push
jno
int
xchg
mov
aad
int
mov
pop
jp
int
mov
aaa
cmp
mov
push
out
inc
call
std
cmp
ljmp
les
and
mov
pop
daa
scas
mov
das
enter
icebp
add
lret
in
add
cmp
mov
in
push
mov
mov
pusha
orb
and
clc
popf
stos
out
test
sbb
xor
or
xlat
mov
fimuls
les
pop
insl
popf
mov
jl
cmp
ds
xchg
ret
push
mov
fisubrl
icebp
repnz
leave
lret
xor
mov
sub
xchg
cmpsb
insb
add
inc
push
add
fnsave
int
fcmovb
movsb
inc
rcrl
call
sbb
mov
jnp
iret
mov
inc
repnz
mov
les
xchg
std
inc
test
lahf
sub
jp
xchg
sub
out
in
in
xchg
xor
in
xor
mov
lods
je
xor
mov
jmp
rorl
fidivrs
mov
jnp
int3
ljmp
mov
sub
inc
lcall
rol
ja
jmp
out
adc
call
cmpsl
decl
pusha
movsl
data16
mov
aas
mov
mov
scas
ret
jo
test
pop
lods
add
and
add
insl
adc
popf
ja
cmp
sti
xchg
xor
xchg
dec
jp
ret
fdivs
mov
push
data16
jns
call
jae
sub
mov
bound
pop
or
lret
loopne
cmpsb
bound
lock
js
inc
sub
es
cmpsl
sti
inc
bound
jge
push
cmp
mov
int3
push
icebp
xor
pop
std
jns
rcrl
pop
adc
cld
mov
cmp
mov
ds
ja
xchg
cmpsl
cli
cld
repnz
leave
push
into
push
xchg
xchg
stos
fsubrs
loope
dec
jns
dec
hlt
aad
or
and
xor
iret
jnp
mov
pop
dec
push
sbb
and
fsubrp
push
sbb
inc
mov
call
sbb
into
or
je
sbb
jne
sarl
xchg
fsubr
popf
movsb
lods
movsl
repz
sbb
fdivrl
daa
sub
pop
int
or
pusha
int
inc
in
push
xor
mov
shrl
or
pop
mov
sbb
dec
repnz
insb
mov
ret
out
inc
inc
out
pop
in
pusha
push
imul
scas
sar
cli
xor
cmp
imul
add
mulb
cmp
add
pop
xchg
test
xor
mov
mov
rcrb
and
pushf
jns
ds
sbb
cmp
outsb
pop
lret
call
sbb
ret
cltd
sbb
cmpsb
je
push
repnz
loop
dec
push
stos
inc
into
and
mov
aad
fwait
xor
out
and
cmp
mov
aas
out
lea
iret
push
popf
in
in
mov
pushf
std
cmp
lea
lds
xor
icebp
jmp
or
es
ds
ror
test
lods
das
in
lods
js
push
es
push
cmpsl
rorb
shrb
cltd
mov
rcl
inc
enter
xchg
jge
cmpsb
fldt
mov
test
add
dec
xor
imul
adc
int
shrl
shrd
mov
fldcw
xor
mov
xchg
xchg
xchg
or
or
xor
jnp
leave
sub
and
or
sub
cmp
fistl
push
adc
xchg
xlat
sbb
mov
loope
or
mov
sub
lock
xchg
idivb
jnp
repnz
xor
ficoms
cmp
repz
subb
js
int3
dec
movsb
mov
pop
mov
out
scas
test
sbb
mov
jno
add
or
rorl
iret
sbb
jnp
loop
and
data16
pop
mov
lods
cmpsb
out
fwait
jae
cmp
testb
movsl
jmp
mov
xlat
stos
arpl
sub
jl
iret
push
mov
pop
push
push
dec
js
mov
out
jno
and
in
cmp
pop
bound
std
and
sub
loop
lds
fimuls
dec
loope
mov
push
or
out
inc
out
out
push
icebp
pop
aaa
adc
add
push
in
roll
test
jecxz
or
or
sub
and
mov
push
outsl
ffreep
test
or
mov
pop
mul
jp
mov
sub
arpl
hlt
pop
push
pop
sub
ja
nop
mov
cmp
es
scas
ds
add
adc
out
out
or
xor
push
pop
mov
mov
inc
mov
daa
mov
xor
sbb
int3
lds
jle
fs
out
mov
jae
dec
push
push
pop
aas
fiadds
int
sahf
je
fmul
orb
leave
pop
inc
mov
stos
mov
sbb
nopl
data16
ror
aad
dec
test
sbb
cwtl
out
xor
xchg
test
and
mov
test
adcb
mov
xchg
xor
or
and
adc
mov
gs
lds
xchg
mov
mov
push
adc
mov
dec
xor
stos
rorb
jnp
repnz
mov
pop
adc
mov
pop
mov
xor
dec
cmpb
xchg
jnp
imull
and
pop
iret
rcl
nop
mov
adc
cwtl
aam
mov
sbb
fstl
stos
jno
sub
ds
leave
outsb
pmaxub
mov
call
inc
adc
cltd
dec
mov
lods
cmc
sbb
pushf
or
addr16
stc
xchg
aas
mov
fisubs
mov
or
push
inc
inc
pop
mov
sbb
test
xchg
jg
sbbl
std
inc
mov
shll
fistpl
inc
xlat
test
lock
outsl
and
push
aas
lods
divl
xchg
shrb
mov
xor
inc
imul
test
sub
fisttpl
xor
mov
xor
push
mov
movsl
repz
sub
loopne
in
scas
mov
jmp
cmp
subb
scas
lret
les
sbb
xor
out
pop
rcrl
les
cmp
test
xor
jp
sti
and
push
mov
sahf
adc
jle
mov
test
stos
jmp
mov
add
cmp
repz
jb
rcl
push
mov
mov
push
jbe
mov
pop
pop
cmc
scas
call
lods
inc
test
mov
dec
outsl
rcll
lods
addr16
add
sub
adc
pop
and
fnstsw
mov
js
cmp
jmp
adc
inc
shrl
loop
inc
push
xchg
shr
movsl
mov
test
or
ss
sbb
jo
jne
mov
loop
add
scas
mov
inc
sub
les
shlb
das
test
in
pusha
jnp
pusha
push
and
ds
mov
jecxz
outsl
inc
pop
cmp
push
sbb
mov
pop
ja
mov
cmp
stos
xor
and
xorb
xchg
lods
xor
jns
aas
cmp
add
pop
insb
negl
bound
insb
movhps
and
xor
jo
ret
popa
adc
cmp
dec
hlt
add
ficoms
ret
mov
push
push
fnstcw
pop
in
fwait
push
shrb
xorl
cmovp
sbb
add
dec
out
inc
cld
mov
pop
loopne
inc
fbstp
out
lahf
test
addr16
leave
movsb
je
cmp
ljmp
mov
dec
adc
dec
hlt
xor
rclb
xchg
lock
addl
mov
clc
lcall
jge
les
das
cli
stc
jg
xchg
cmp
or
mov
mov
or
cs
rcrl
in
cmp
idivl
jns
ss
mov
dec
add
cmp
cltd
jne
lcall
in
pop
sbb
mov
mov
pop
push
ret
adc
cmp
outsl
outsw
adc
test
addr16
test
xchg
out
mov
adc
test
ds
in
add
pop
add
jecxz
stos
rcr
mov
test
mov
ficoms
pusha
xchg
and
push
imul
mov
xchg
movsb
push
lret
arpl
mov
dec
jo
inc
mov
mov
dec
outsl
jae
movl
jb
sbb
push
fdivr
fwait
pop
pop
test
mov
xchg
and
pushf
test
sarb
xchg
sbb
or
lea
rolb
adc
push
mov
xchg
cmpsb
pop
mov
cmp
mov
jecxz
push
in
in
cmp
shrb
int
mov
fwait
jne
adcl
fdivs
insb
jbe
clc
push
out
push
cld
ror
loopne
outsl
add
stos
stc
cmp
or
leave
sar
lahf
push
test
xor
xor
repz
mov
or
mov
jne
xor
fsubrs
loop
and
ret
outsl
icebp
inc
es
aas
lahf
test
jp
imul
scas
push
dec
ljmp
sub
and
mov
inc
aam
push
mov
insb
push
mov
idiv
sbb
shrl
mov
add
adc
cld
popa
jbe
jmp
jne
mov
es
xchg
into
xor
fbld
out
iret
in
int3
and
cmpsl
jmp
pop
mov
jae
es
mov
jl
xchg
lock
addl
addb
cmpsl
out
inc
es
inc
or
jmp
mov
push
mov
ljmp
imul
push
lock
jmp
sub
ret
adc
and
loope
jmp
adc
fwait
paddusw
icebp
aas
push
inc
pop
push
jne
ret
leave
xor
je
sar
outsl
imul
jns
orl
test
cmp
mov
mov
test
jnp
scas
mov
lock
cli
fmuls
fidivs
dec
push
icebp
cmc
aas
rol
std
dec
test
inc
inc
or
lock
or
ds
stos
mov
std
leave
sbb
roll
sbb
mov
stc
std
inc
imul
lahf
pop
push
movsb
rcrb
jno
stos
xor
dec
hlt
adc
cmp
call
mov
push
mov
adc
movsb
sbbb
lret
ljmp
sti
fs
jmp
sub
aas
or
mov
dec
cmp
outsb
pop
xor
xchg
cld
inc
imull
sbb
dec
fldt
rcl
pop
inc
and
scas
inc
mov
loop
mov
loop
mov
inc
jno
inc
jnp
sti
jge
iret
xchg
cltd
ljmp
sbb
push
xlat
adc
jp
enter
inc
push
popf
movsb
sub
adc
xchg
cmpl
xor
add
daa
scas
fucomi
pop
mov
in
fistps
inc
daa
loopne
push
cmp
cmpsb
cltd
mov
add
ss
mov
iret
scas
test
push
shlb
mov
and
pusha
jbe
push
dec
arpl
loope
icebp
jge
pop
pop
mov
or
and
pop
pop
lret
jbe
hlt
addr16
pusha
inc
pusha
loopne
adc
cmp
cmp
push
outsl
mov
fbld
sub
xor
data16
fistl
xor
out
movsb
in
mov
je
push
jecxz
and
lods
jnp
push
jne
lret
ret
das
jle
and
sarb
jbe
add
mov
rcrl
popa
mov
int
sbb
mull
mov
dec
adc
mov
shlb
dec
push
push
and
xchg
int3
testl
es
push
daa
pop
sub
stc
inc
int3
scas
addr16
or
es
jno
rcl
lock
in
mov
mov
push
and
mov
xor
xchg
fnsave
xor
in
stc
fidivrs
add
sbb
push
sub
mov
fmulp
sub
mov
ja
sbbl
jmp
xor
cmp
mov
sub
cwtl
mov
jge
sub
addb
into
test
and
imul
addr16
rorl
jb
sbb
and
popf
dec
inc
out
push
js
enter
sarb
push
out
imul
jb
add
pushl
out
adc
add
adc
pop
jb
xor
shll
jnp
fstl
and
shrb
cmpsb
xor
nop
es
add
sbb
cmp
aad
mull
aad
lds
sbb
fidivl
cmp
adc
adc
lret
sub
hlt
cltd
mov
xchg
xorb
pop
mov
and
arpl
aas
aaa
loope
mov
jne
rorl
cmpsl
mov
adc
sub
mov
outsl
aas
xor
pop
adc
push
push
push
movsl
mov
bound
aam
or
mov
or
cmp
std
mov
mov
js
push
jecxz
rorb
cmp
data16
call
clc
xor
sbb
or
mov
mull
jg
stos
push
sbb
adc
shl
or
in
push
mov
adc
lahf
imul
jae
jnp
sub
jno
dec
jns
xor
popf
inc
sub
sbb
out
mov
sub
adc
pop
sbb
insb
xchg
or
addr16
scas
push
jmp
out
xchg
xor
push
pop
pop
icebp
adc
lahf
push
lret
push
dec
mov
pop
ret
sub
add
jno
imulb
dec
mov
repnz
add
mov
ljmp
jae
add
sarb
cmp
push
mov
mov
test
xchg
cmc
pusha
mov
sbb
subb
cmpsl
sbb
mov
in
out
and
jae
andl
call
add
sahf
ret
mov
mov
push
test
mov
sub
sbb
movsb
subl
add
stc
and
sub
imul
stc
xchg
push
push
stc
mov
mov
mov
and
lret
enter
scas
je
adc
insb
xor
mov
sarb
rcrl
incl
jae
mov
cs
jg
xor
scas
pop
add
xchg
leave
lock
inc
push
push
hlt
test
add
xor
inc
xchg
repnz
or
push
fdivp
xor
mov
je
pop
inc
adc
test
out
jp
pop
or
fwait
sbb
imul
out
lahf
xchg
cmp
push
jne
dec
jb
add
scas
ficomps
xchg
lcall
inc
sbb
xor
push
in
cmp
xor
call
dec
movsb
fisubrs
mov
inc
cmpsl
out
cwtl
iret
leave
ror
ret
sub
and
sahf
movsb
mov
cmc
mov
hlt
jne
inc
mov
rol
and
jmp
mov
faddl
shlb
dec
in
xchg
roll
mov
arpl
cmpsl
mov
pop
icebp
jmp
push
stc
jl
mov
or
outsb
int
pop
inc
xor
and
jmp
ficoms
push
mov
add
pop
movsl
push
cmp
clc
sbb
ficoms
xchg
xor
gs
mov
adc
cmp
pop
xor
push
ds
dec
cltd
in
xor
leave
sbb
inc
iret
sub
mov
ss
mov
pop
mov
mov
lods
xor
sti
xlat
test
in
cmc
aaa
mov
sbbb
xchg
test
loop
cmp
cmp
push
cltd
call
insb
adc
in
push
lds
or
in
sub
xchg
in
pop
fimull
cwtl
inc
sahf
rolb
xlat
outsb
sub
cld
ljmp
cmp
xchg
adc
sbb
mov
das
xor
std
mov
fidivl
and
or
xchg
pop
push
inc
xlat
and
push
mov
add
add
adc
push
mov
or
ret
sbb
mov
and
cs
mov
inc
popa
add
jmp
adc
or
fdivl
dec
clc
pusha
jl
lahf
pop
popa
mov
das
psrad
push
xchg
push
jnp
jb
sbb
mov
xchg
mov
clc
std
ret
sbb
mov
daa
xchg
xchg
je
xchg
fldl
push
mov
lss
xchg
pop
lret
aas
adc
nop
cmp
call
or
push
roll
cmp
xor
stc
cs
jge
mov
pop
push
addr16
jl
jbe
call
inc
or
cmp
cli
stos
adc
dec
in
mov
sub
and
cmp
cmp
dec
dec
arpl
lret
cmpsb
cltd
mov
leave
adc
mov
loopne
push
lds
lret
movsl
arpl
sbb
push
add
mov
in
in
in
jl
mov
pop
mov
adc
out
push
pop
sub
xchg
ret
jge
dec
dec
dec
hlt
enter
adc
add
cmp
daa
jmp
dec
jae
out
lahf
mov
add
cli
lcall
pop
rolb
adc
inc
cltd
mov
ss
adc
sub
pop
mov
pushf
enter
lret
inc
test
stc
sub
pop
test
mov
pop
push
into
mov
xchg
aas
push
scas
stos
mov
push
ljmp
and
data16
ja
int3
inc
sbb
cmp
rol
sbb
in
sub
mov
fwait
dec
js
sbb
xorb
sub
mov
xchg
mov
cmp
scas
in
pop
leave
shll
inc
dec
adc
jmp
lret
gs
lcall
cs
mov
jns
sub
mov
out
and
push
push
imul
icebp
sbb
outsb
cmp
imul
xchg
data16
lods
sub
pushf
repnz
arpl
mov
test
into
aam
js
std
add
inc
loopne
popf
jo
and
mov
popf
ret
add
orb
shrl
jbe
aas
push
ljmp
sti
cmpsb
mov
rorb
sub
or
dec
xor
ja
fldcw
push
loop
sbb
mov
add
loop
js
xchg
sbb
mov
testl
outsb
out
and
xchg
xchg
dec
int
rorl
push
mov
iret
and
pop
std
ja
and
sbb
cmc
leave
cmpl
or
mov
jne
and
jbe
mov
es
or
aaa
jle
jno
xchg
and
enter
adc
lock
pusha
add
dec
je
xchg
repz
fwait
push
cmc
xchg
or
jge
mulps
out
out
add
data16
inc
inc
iret
adc
daa
icebp
inc
int
int3
outsb
arpl
push
lods
push
sub
sub
mov
mov
iret
lret
loopne
sarl
je
dec
sarb
jl
xchg
inc
fimull
fistps
and
or
mov
sbb
sbb
sti
or
adc
xchg
mov
inc
bound
xchg
loop
stc
jl
inc
mov
mov
jb
js
int
sbb
notl
aas
xor
scas
subl
mull
jno
ret
dec
dec
sbb
cmc
pop
loopne
push
mov
and
ja
ljmp
add
mov
rolb
fadds
cld
in
stos
jno
push
scas
or
scas
sub
rsqrtps
mov
xchg
subl
ficoms
adcb
xor
sub
nop
push
popf
cli
push
daa
leave
jbe
or
fcoml
js
jo
dec
pushf
push
inc
stos
lods
sbb
xchg
pop
adc
fisttpll
jmp
icebp
fwait
outsl
add
xchg
push
ja
jge
xchg
dec
xchg
jo
push
repnz
sub
mov
addr16
sti
lret
fdivl
fwait
ds
fldl
movb
imulb
lret
mov
adc
push
negl
test
out
push
jl
pop
rcr
loopne
xchg
sub
jns
pop
sub
movsb
and
dec
add
sahf
dec
icebp
bound
or
mov
imul
xor
cmp
repz
out
addr16
fldl
xor
popf
pop
lea
mov
add
stos
pop
mov
push
mov
sub
bound
rol
inc
xor
and
dec
pop
lret
repz
out
and
ds
push
outsl
push
sub
jg
dec
xchg
jnp
adcl
leave
aas
cmpsb
fists
dec
mov
and
inc
mov
push
hlt
add
cmpsb
pop
rolb
push
jno
jle
scas
or
sti
mov
lds
lcall
lret
lret
mov
push
lods
inc
sbb
scas
les
hlt
dec
mov
mov
xchg
aaa
xchg
sub
fmull
hlt
adc
mov
xchg
loopne
loop
jne
shlb
addb
aad
cwtl
dec
pop
xchg
fisubl
popf
or
std
inc
pop
gs
mov
into
push
aam
jnp
pop
mov
insb
pop
or
lock
or
imul
hlt
or
mov
inc
loop
and
and
hlt
iret
jp
cmp
into
pop
xchg
cli
jle
or
xor
rorb
dec
lock
jge
jp
cmp
add
or
rorl
mov
popf
mov
sub
jae
xchg
loopne
data16
pusha
adc
or
add
pop
imul
scas
bound
and
or
call
xchg
push
sub
iret
insb
dec
sub
nop
cmp
lea
inc
mov
rcr
inc
popa
fwait
sub
daa
repz
push
gs
gs
xlat
push
dec
lea
pop
mov
or
sahf
cmc
out
add
shll
in
xor
mov
fcmove
iret
or
inc
cli
mov
sub
add
xor
push
add
cwtl
pushf
shlb
mov
adc
into
adc
jmp
inc
sahf
xchg
sahf
popa
add
icebp
subl
lock
pop
cmp
push
mov
insb
sbb
sbb
lods
cmp
inc
mov
mov
xchg
lcall
mov
pusha
addr16
leave
scas
test
xchg
jl
popa
mov
lret
inc
inc
bound
mov
movsb
mov
xor
or
movsl
jbe
shlb
aas
sub
mov
jle
movsl
mov
xchg
inc
mov
ljmp
cmp
jb
pop
lods
cltd
inc
cmc
xor
imul
sub
aad
jnp
sub
aam
mov
dec
mov
sbb
xlat
aam
cli
scas
loope
inc
add
loop
push
mov
cmpsb
dec
inc
les
or
xchg
movsb
jne
cmp
dec
test
and
adc
cmp
push
pop
mov
imulb
cmp
daa
add
out
mov
mov
je
pop
adc
or
mov
sbb
out
xchg
sbb
int
sub
pop
jp
mov
xor
imul
mov
jl
movsl
and
push
push
ljmp
enter
jbe
ret
or
xor
adc
jl
push
lahf
int
aaa
popf
fwait
movsb
sub
adc
loope
sub
pop
sub
sbb
jl
aam
or
pop
jno
inc
cmp
lahf
insl
pop
xchg
sub
adc
lods
push
inc
outsl
leave
nop
filds
data16
fsubr
dec
popf
or
mov
mov
sbb
notl
jnp
loop
push
insl
or
popa
xchg
push
stc
push
out
mov
add
mov
xor
push
dec
pop
data16
fdivs
das
sub
dec
mov
fwait
imul
jns
fsubl
mov
jmp
mov
pushf
out
push
cmp
fcomps
jne
adc
mov
in
out
jno
jp
fwait
negl
cmp
aaa
lds
out
or
pop
mov
insl
jl
jnp
hlt
inc
pop
popf
push
out
mov
sub
xchg
cld
adc
xchg
lret
mov
cmp
xor
push
fcomps
jae
in
mov
in
or
fisttps
inc
lahf
call
cmp
mov
push
xor
cld
clc
jne
inc
and
outsl
or
inc
jmp
lds
pop
sub
neg
or
iret
push
dec
sbb
sbb
jb
inc
icebp
cmovno
pop
or
loopne
inc
jl
movl
rcrl
add
jbe
xchg
test
push
outsl
jecxz
xor
push
cmpsl
fwait
pop
iret
mov
in
jno
movsb
sub
insb
sbb
mov
cmp
outsb
sbb
or
lods
mov
xorl
sub
adc
clc
sbb
int
popf
js
adc
mov
add
aas
add
xchg
lahf
jb
jecxz
xor
pop
pop
dec
jp
and
lock
es
mov
xorl
lock
jno
iret
das
fisubs
aas
cmp
out
adc
mov
push
xchg
enter
dec
lcall
lcall
push
outsb
lret
popf
pop
mov
push
mov
out
test
fsubrl
mov
pop
xchg
or
mov
lahf
cmc
jb
xchg
out
sub
insl
push
push
ja
std
dec
cmp
dec
cmp
sub
sbb
leave
push
xor
jp
mov
outsl
fwait
in
cmc
out
jge
or
imul
dec
ljmp
pop
and
popf
push
and
mov
jbe
enter
mov
fstpl
xlat
cmp
lcall
out
lds
jecxz
scas
aaa
and
jl
int
lahf
fstps
dec
pop
mov
adc
dec
sub
mov
adc
mov
mov
and
outsl
outsl
out
ja
aam
out
adc
lock
pushf
jp
pop
or
and
bound
iret
jle
js
pop
cmp
inc
adc
clc
xor
std
out
push
lock
iret
imul
rcll
pop
rorl
mov
fnstsw
je
shlb
xchg
or
dec
xchg
and
adcl
insb
mov
mov
push
call
fbld
pop
push
mov
subb
imul
inc
jo
lcall
out
dec
insl
adc
clc
xchg
loop
lock
int
mov
fbstp
sub
in
test
pop
xchg
out
push
jp
lcall
pop
add
jnp
jns
in
ljmp
bound
mov
ror
mov
pop
repz
jl
and
popf
mov
xor
add
mov
jae
fcomps
aas
dec
cwtl
add
ja
dec
push
or
cmp
pop
mov
cmp
pusha
mov
mov
sub
mov
int
and
lods
mov
xor
aas
pop
fdivl
hlt
mov
and
inc
pushf
inc
aaa
jno
mov
or
or
inc
fld
or
fisubs
and
movsl
xlat
mov
fs
or
jno
adcl
and
orl
mov
push
rorw
sbb
test
xchg
push
xchg
jnp
xchg
stos
pop
cmc
pop
rcrl
aad
add
pop
adc
sahf
add
daa
mov
jns
xchg
out
cltd
push
add
dec
and
xor
shrb
sub
repz
insb
dec
inc
adc
gs
jl
xor
aad
xor
lds
cmc
nop
cwtl
inc
jge
mov
and
cmc
in
cmp
xchg
inc
push
test
cmp
pop
icebp
xor
xchg
sbb
outsb
lret
movsb
scas
or
or
push
mov
sbb
int3
pushf
testb
mov
jl
mov
cmpsl
into
and
pop
jae
cmpsb
jbe
in
xchg
sub
cmp
fs
dec
mov
adc
mov
mov
dec
mov
pop
inc
mov
push
mov
rcrl
xchg
sub
mov
xor
mov
inc
inc
popf
pop
sbb
sub
pop
je
shrb
icebp
xchg
inc
cmpsb
sbb
dec
adc
fs
fldcw
int3
pop
nop
loop
ljmp
cmp
lock
int3
pop
sub
jns
dec
xor
add
and
or
ficoms
jecxz
push
stos
xchg
andl
push
dec
mov
pop
push
mov
cs
addb
ret
int3
stos
mov
movb
sub
rep
call
push
sub
xchg
neg
popf
add
sbb
sub
pop
pop
xor
stc
mov
mov
cwtl
pop
sbb
aas
push
dec
pop
cmp
aam
xor
push
dec
mov
shrb
sbb
jbe
outsb
add
adc
dec
mov
pop
hlt
mov
ds
adc
add
and
es
into
lock
lock
shlb
inc
pop
jb
shrb
xchg
cmpsl
or
xchg
pop
push
adc
add
cmp
enter
aad
out
ror
push
mov
stc
cmpsb
and
mov
das
xor
aas
or
xor
xor
ret
adc
xchg
mov
ret
mov
sahf
cwtl
mov
mov
insb
test
sub
fsubr
das
movsl
jno
inc
adc
mov
adc
lea
sti
push
in
flds
addr16
dec
das
loop
xchg
push
cld
jns
push
push
adc
sbb
and
pop
dec
xchg
test
aas
leave
pushf
fcompl
ljmp
mov
mov
push
cmp
push
rclb
pop
pop
mov
push
ja
fs
cmp
add
outsb
jnp
daa
lds
mov
jmp
sarl
jns
scas
mov
xor
insb
sub
push
comiss
lret
cmp
adc
mov
push
into
icebp
ret
ss
lcall
repz
jge
mov
push
xchg
nop
aas
or
out
jo
insb
jo
inc
repnz
and
ja
mov
mov
aam
add
cltd
loopne
mov
fimuls
cmp
repnz
xchg
movsb
repz
xadd
xor
jl
mov
inc
rcl
xchg
hlt
ret
inc
insl
icebp
pop
xchg
mov
imul
nop
sahf
cmp
mov
mov
jecxz
fstl
jns
and
mov
adc
pop
mov
jns
push
lret
cld
icebp
sub
test
decb
scas
ret
cli
push
jne
jp
aam
out
xchg
rol
cmpsl
mov
and
sbb
pusha
dec
out
mov
push
mov
xor
inc
push
shll
int3
movb
pop
pop
mov
push
jge
xlat
add
jbe
jp
adc
xchg
pop
adc
and
in
dec
or
pop
popf
adc
arpl
mov
lahf
aaa
mov
repnz
cmp
inc
inc
add
mov
aad
data16
in
clc
add
fwait
cmp
lods
mov
fidivrs
cwtl
iret
jge
xchg
or
inc
sbb
xchg
mov
mov
pop
inc
adc
dec
sbb
fadd
inc
jne
test
dec
scas
fsubs
mov
loope
dec
in
sbbl
and
lods
mov
out
pop
js
mov
or
fwait
dec
shl
sahf
sarb
inc
ss
adcb
adc
ret
push
or
lcall
rclb
inc
mov
jne
mov
lret
jns
fwait
add
sbb
mov
cmp
lret
movsb
mov
xor
add
nop
and
jne
imul
dec
lods
jp
stos
mov
dec
inc
jae
sbb
loope
push
outsb
push
mov
sysret
or
dec
sarl
mov
loopne
jl
adc
pusha
and
filds
arpl
cmp
call
fisttpl
add
inc
fs
lods
jnp
ror
push
inc
imul
mov
jge
add
add
cmp
mov
and
jl
aas
cli
mov
roll
outsb
inc
fsubs
in
cmp
adc
push
and
xchg
mov
popa
pushf
mov
mov
sbb
jns
add
sub
mov
adcl
mov
stos
int3
gs
jbe
add
xor
push
insl
pop
xlat
push
scas
lods
out
sub
outsb
push
repnz
ljmp
mov
lahf
and
mov
fisttpl
pop
cli
push
jns
xor
jmp
xorl
sub
xlat
sbbb
leave
sti
mov
jo
lods
imulb
scas
arpl
inc
aaa
inc
dec
sbb
sarl
pop
xor
sub
jns
lret
mov
adc
adc
fisttpl
cmp
jo
int
movsl
arpl
dec
mov
push
sbb
push
and
pop
dec
out
add
aam
out
add
pop
dec
push
xlat
decl
or
hlt
mov
mov
dec
or
push
mov
cmpsb
outsl
mov
popa
mov
les
xlat
fldcw
pushf
stos
jl
leave
in
lahf
sub
loop
xchg
enter
inc
sub
mov
test
inc
sbb
fsubrs
pop
sbb
push
ja
pop
dec
mov
fimuls
pop
sub
xlat
sub
dec
pop
ljmp
insb
dec
iret
shll
mov
loop
dec
xlat
xchg
insb
xchg
add
push
jecxz
jnp
mov
stos
iret
push
sbb
cmp
dec
jns
fimull
push
fsubrs
push
lahf
fisubs
push
sub
mov
fiadds
xchg
popa
dec
dec
lods
add
dec
mov
popa
hlt
pushf
mov
test
push
stc
inc
addr16
in
sbb
push
and
inc
pop
dec
xor
adc
stos
jne
icebp
jg
pop
sbb
and
into
pop
pusha
mov
icebp
lcall
mov
fidivrs
insb
adc
test
imul
int
lret
jge
or
fcompp
cmpl
xor
push
mov
sub
sahf
mov
push
pop
js
aam
dec
jo
or
mov
dec
add
mov
push
rclb
dec
mov
iret
test
pop
das
and
mull
xor
jg
aaa
push
push
lods
and
lods
push
inc
push
clc
xchg
lahf
sarb
pop
daa
mov
out
imul
inc
and
ljmp
fldz
and
mov
sub
jecxz
sub
nop
xor
adc
sub
fisubrs
jle
and
jnp
popl
fs
test
inc
jg
push
xlat
jbe
cmpsb
cmp
fdivrs
and
pop
adc
or
inc
fldt
popa
jo
inc
fldenv
cmpsb
mov
ljmp
and
and
jb
cmp
jne
test
pop
xchg
call
xlat
test
inc
adc
jbe
mov
push
xchg
inc
test
pop
and
imul
and
cmp
mov
push
pop
fnstcw
ret
out
out
dec
jp
clc
cmc
lret
cmp
and
pusha
mov
pop
lret
or
aad
jp
fnsave
push
pop
sub
mov
dec
push
lcall
mov
gs
xchg
inc
xor
dec
add
jl
jb
cmp
inc
jp
enter
mov
movsb
inc
add
mov
dec
mov
cmp
int3
pusha
cmpsb
cld
mov
mov
mov
call
dec
mov
inc
mov
cli
pop
movsl
insb
push
sub
mov
aad
clc
jecxz
dec
pop
movsb
pop
push
cmp
arpl
sub
xchg
cmp
lret
push
dec
mov
cmp
mov
mov
pusha
pop
mov
mul
stc
in
pop
or
dec
pop
adc
dec
add
out
add
enter
test
dec
pop
or
sbb
xchg
ljmpw
mov
dec
imul
mov
mov
pop
mov
add
mov
push
mov
out
mov
fisubs
fmull
and
daa
pushf
or
ret
rcr
fidivrs
addl
cs
fimuls
cmc
mov
int
push
fistpll
fwait
lret
dec
cltd
dec
fistps
or
xor
mov
cmp
outsl
leave
dec
cmc
xlat
dec
aaa
xor
in
sbb
jno
push
insb
inc
loop
mov
test
jge
cmp
scas
hlt
add
movsl
decb
lods
sub
pop
xchg
dec
ds
cltd
cmpsl
loop
inc
xor
movsb
and
xlat
icebp
inc
push
inc
mov
popf
js
pop
lods
out
dec
addb
mov
mov
call
hlt
pop
mov
andl
in
adc
call
and
cmpb
mov
push
in
mov
inc
imul
pop
xchg
in
jbe
aam
stc
push
pushl
divl
inc
movsb
xorl
lcall
outsb
mov
add
mov
sahf
sbb
pop
mov
cmp
icebp
jecxz
jecxz
test
testl
je
shl
pop
lret
jmp
and
add
outsl
loop
xchg
add
jno
inc
mov
dec
iret
or
call
dec
out
cmp
jge
sbb
rcll
mov
push
and
mov
rclb
mov
inc
ret
xchg
sbb
push
dec
dec
cmp
cmpsl
mov
stos
cmpsl
cmp
int
in
daa
les
push
pop
cmpsl
std
pop
pop
call
fs
inc
outsl
mov
es
push
sub
jno
dec
lock
mov
or
jno
xlat
sti
and
inc
iret
pop
das
mov
mov
mov
sbb
and
push
mov
mov
out
lods
out
pop
pop
inc
pop
push
pop
in
mov
sub
jno
in
movsl
mov
xchg
scas
jmp
ror
es
hlt
adc
adc
pop
mov
cmpsb
xchg
shr
das
xchg
fs
or
jbe
xchg
pusha
adc
adc
jp
scas
xlat
mov
dec
cld
and
test
movsl
test
mov
pop
mov
xchg
in
xchg
aaa
fwait
sbb
fidivrs
dec
lea
cs
mov
push
js
outsb
push
jmp
mov
gs
roll
xor
jno
jmp
leave
in
clc
inc
xchg
add
xchg
lahf
imul
test
imull
mov
and
icebp
fisubs
mov
jae
notl
fcomps
mov
lock
inc
sti
adc
add
int
dec
fsts
es
push
subb
test
push
shrl
jl
push
xchg
aad
mov
cmp
sub
test
repnz
aad
les
aad
xchg
es
mov
push
aad
cmp
and
push
aaa
mov
add
stc
andb
test
clc
pop
pop
jp
jp
adc
push
pop
jg
clc
leave
icebp
lahf
push
inc
xor
pop
cld
aaa
mov
fadds
inc
mov
adc
cld
mov
xlat
xor
mov
sbb
ljmp
je
sub
adc
mov
in
popa
cmc
movsb
stos
cs
in
testb
test
inc
push
test
lcall
sbb
testl
sub
imul
das
sbb
cmp
pop
mov
xchg
push
and
jns
cmp
jmp
mov
xchg
sub
fsubl
fprem1
fisttps
or
fidivs
inc
dec
dec
sub
and
mov
mov
add
je
sbb
mov
movsl
pop
out
imul
xchg
jne
sub
xchg
mov
adc
aas
sarl
cmp
jbe
mov
or
es
push
cmp
repz
aad
cld
mov
icebp
gs
rcrb
sbb
test
enter
rorl
jge
clc
push
xor
push
push
cmp
out
jmp
pop
orb
fildl
sarl
sub
jns
les
add
push
lods
jnp
mov
inc
jns
mov
xor
aaa
mov
es
jmp
les
cli
pop
mov
icebp
lods
ss
cmp
aaa
orl
fcmovnu
pop
sar
push
pop
into
mov
hlt
mov
lea
sbb
repz
mov
icebp
mov
test
dec
mov
aad
cmp
pop
dec
lahf
iret
ret
mov
scas
rcll
std
ret
or
and
pop
lods
push
xchg
xor
or
mov
daa
das
sbbl
pop
in
add
mov
mov
sti
sahf
std
rclb
adc
pop
mov
mov
nop
gs
or
or
sbb
pop
js
jg
std
gs
and
mov
lcall
lds
movaps
dec
sbb
ret
pop
and
dec
push
aaa
sub
hlt
inc
and
jmp
out
repnz
adc
push
inc
pusha
jb
sbb
xchg
cltd
mov
lds
mov
sub
cmp
in
fcmovne
ret
xchg
in
add
push
cmpsb
test
repnz
mov
lcall
fimuls
add
sbb
test
cld
iret
sub
mov
movsl
in
adc
shll
lods
pushf
insl
xchg
iret
pop
dec
dec
xchg
fdiv
and
xchg
jg
xor
cmpsl
pop
jmp
hlt
mov
or
pusha
dec
mov
jl
sbb
mov
xchg
xchg
push
lea
pop
insb
imul
xor
movsb
out
jmp
xor
jns
xor
jecxz
lods
lahf
rcr
push
and
cmp
adc
clc
pop
push
cmp
pop
inc
sub
inc
push
xchg
dec
mov
test
pop
mov
dec
xchg
jecxz
clc
sbb
dec
mov
jl
incb
or
push
cmp
shr
loopne
add
gs
mov
lret
push
dec
rolb
aas
cmp
icebp
sub
adc
push
mov
adc
ffree
inc
adc
cwtl
test
jmp
xchg
mov
jg
sbb
out
sar
rcr
cmp
rcrl
mov
rcr
test
pop
aad
or
xchg
mov
pusha
xlat
mov
fdivrp
rcr
outsl
stos
jecxz
push
loope
pop
pop
xchg
lret
out
in
push
rcrl
notl
mov
test
pusha
sahf
jo
hlt
sarb
push
repnz
dec
cmc
dec
cmp
movsb
outsb
mov
jno
lods
xor
mov
test
or
cmp
inc
lret
jbe
inc
pop
inc
mov
faddp
push
enter
sub
jnp
inc
mov
mov
push
lret
imul
push
movsb
stos
cltd
iret
ret
shll
mov
jg
pop
xor
jge
pop
sbbl
das
fisubrs
out
popa
pop
bound
push
out
dec
xchg
or
push
mov
push
add
dec
push
push
insb
and
ret
inc
pop
pop
lret
loopne
test
out
or
inc
je
pop
aam
dec
addb
pop
fsubrs
pop
iret
icebp
dec
into
cmp
repz
pusha
popa
cmpsl
sbb
xchg
jp
jmp
mov
mov
push
push
xor
jg
fstpl
lahf
ss
jbe
loope
dec
add
inc
mov
out
jne
mov
mov
lea
cmc
inc
jo
inc
jno
jl
stos
xchg
sbb
jecxz
mov
sbb
push
loopne
neg
lea
pop
xor
loop
shlb
mov
sub
pop
call
in
rcl
ret
sti
loope
adc
call
and
int3
adc
push
sub
fiaddl
std
jle
adc
mov
push
mov
push
dec
je
movsl
iret
lds
push
jnp
inc
outsb
mov
inc
repz
pop
inc
out
in
inc
jne
arpl
out
push
nop
cmpsl
popf
aam
and
and
and
mov
sbb
mov
mov
sti
or
pop
stos
ds
xchg
cli
addb
or
lock
loopne
cld
cmp
cmc
dec
sub
sbb
cmpsb
mov
lds
sbb
mov
loope
clc
pop
mov
fwait
push
mov
aad
xchg
repnz
xorb
push
addr16
pop
adc
dec
mov
dec
xchg
sbb
xchg
mov
inc
dec
jno
lock
mov
aas
lahf
add
das
dec
movsl
test
aad
inc
outsb
mov
ret
inc
mov
pop
xchg
stc
cmpxchg
loope
pop
loopne
mov
lret
xor
sub
lea
adc
push
push
popf
in
jg
nop
pop
mov
cmpl
sahf
fiaddl
dec
mov
imul
mov
xchg
dec
shl
fucomp
xor
mov
mov
sti
cmp
das
jle
out
and
and
popf
or
xchg
add
xchg
and
ja
fisubrs
rclb
lds
into
pusha
inc
mov
cmpb
movsb
stos
inc
dec
xor
jnp
std
pop
outsb
nop
pop
mov
cmp
mov
and
dec
imul
in
mov
dec
cld
enter
subl
inc
mov
lock
jl
cli
and
icebp
push
ret
or
mov
mov
mov
mov
mov
ret
mov
pop
xor
push
stc
imul
jae
cmp
ret
aad
repz
ret
scas
mov
mov
in
add
cld
fadd
out
adc
das
outsb
jmp
fucom
mov
sbb
adc
mov
ss
shrl
or
dec
insl
test
mov
mov
cltd
pop
mov
xchg
sbb
adc
xchg
jo
jmp
jmp
insl
std
xor
xor
call
adc
inc
add
pop
lea
xacquire
push
mov
cmp
in
les
insl
dec
jle
xor
out
ficoml
and
leave
sbb
fsts
fdivrl
xchg
ss
pushf
mov
fimull
push
das
push
mov
imul
test
movsb
pop
cmc
pop
pop
pushf
mov
add
sub
push
dec
sub
mov
lea
in
call
pop
pop
loope
dec
ljmp
pushf
inc
test
call
cmp
insl
cmp
lret
mov
or
push
mov
lahf
mov
aas
stc
int
div
push
addr16
adc
out
xor
fwait
xchg
loopw
das
scas
ret
scas
lret
mov
cmc
xchg
insl
out
in
mov
es
mov
insb
add
cmp
loop
xchg
mov
push
lods
ss
inc
sub
adc
std
repz
fisubs
mov
adc
lahf
aas
or
xor
sahf
pop
jle
dec
mov
shr
xchg
push
lcall
push
adc
inc
nop
or
inc
leave
jg
or
out
push
add
insb
loope
jecxz
add
outsb
mov
sbb
gs
stc
sahf
xchg
add
sbbl
inc
mov
out
mov
and
addr16
inc
dec
icebp
out
cmp
xor
mov
out
out
xchg
daa
hlt
dec
adc
add
ds
dec
jmp
pop
jge
xlat
add
scas
and
lods
push
inc
sahf
jle
or
or
pop
into
and
lcall
mov
jne
in
ret
faddl
es
jmp
dec
dec
test
mov
cld
adc
cmpsl
add
lret
shrb
pop
push
int
rcrb
cmp
mov
lods
dec
and
pop
pop
das
rcl
and
sbb
jl
jecxz
in
mov
insb
dec
lock
sarl
inc
dec
jne
sub
xor
xlat
add
sahf
push
out
push
stos
sbb
add
jle
cltd
or
stos
mov
adc
rol
ja
ss
pop
xchg
jnp
daa
cmp
jo
repz
jo
jo
cmpsb
pusha
mov
repz
fcoms
dec
xor
les
sbb
or
sub
push
jbe,pn
jecxz
dec
or
sti
sbb
add
daa
cmp
ss
inc
js
cmc
out
jns
inc
clc
pop
push
inc
push
arpl
mov
add
int
mov
or
inc
sub
nop
mov
arpl
inc
adc
test
mov
push
out
mov
lock
out
icebp
add
mov
xlat
das
in
sub
cmp
sub
js
add
stc
push
mov
mov
inc
xchg
je
inc
scas
mov
mov
mov
call
testl
fisttpll
jae
pop
xchg
push
aad
mov
or
cmpsb
je
inc
mov
scas
push
insl
daa
sbb
mov
outsl
imul
fisubrs
jbe
cld
jl
ret
add
dec
out
inc
mov
scas
jbe
fsubrs
scas
xor
cmc
jne
test
push
mov
das
inc
adc
jnp
ds
adc
sahf
or
and
flds
fmuls
sbb
sub
fs
lret
sbb
pop
mov
and
xchg
inc
nop
xchg
iret
fstpl
loop
cld
sbb
outsl
shl
sub
rolb
mov
out
xchg
cmc
outsl
dec
ret
xchg
pop
cmp
test
mov
mov
cmp
xor
dec
ret
mov
aas
mov
cli
and
shl
jb,pn
pop
and
cs
cmp
xor
rcrb
ljmp
loope
rolb
add
xchg
mov
jp
in
leave
rcll
aad
xorb
sbb
fsub
sub
jbe
fildl
mov
outsb
out
sahf
pop
add
xchg
mov
push
or
outsb
stos
cmp
bound
mov
lret
pop
in
xchg
loope
sahf
add
push
mov
push
popf
or
fptan
loop
pop
lret
mov
dec
adc
inc
pop
in
sbb
mov
fs
pop
inc
dec
mov
int3
jae
mov
mov
mov
inc
push
pop
sbb
xor
aaa
loope
jb
cmp
sub
dec
pop
sahf
sarl
xor
adc
in
loop
xchg
je
xor
std
push
dec
jle
aas
loop
xchg
mov
mov
les
push
push
test
mov
inc
test
rorl
dec
cmp
sub
sbb
lods
mov
and
ror
mov
cmpsb
cld
popa
mov
and
outsl
mov
adc
push
push
movsl
or
mov
mov
nop
mov
sub
out
or
xchg
jl
jg
sbb
iret
lods
sbb
outsl
ljmp
popa
lods
mov
sti
mov
jns
stc
cmp
out
lret
dec
mov
mov
sahf
mov
mov
adc
inc
roll
int
repz
arpl
outsl
push
imul
add
mul
mov
pop
outsb
xor
jl
hlt
push
pushf
into
lds
sbbl
aam
lock
mov
cs
push
mov
cmp
jb
mov
xlat
add
xor
ja
cmpsl
pop
xchg
negb
lcall
adc
sub
repnz
xchg
sbb
shlb
stos
rclb
sbbl
enter
je
sub
sub
nop
mov
mov
cmp
jno
cmc
repnz
sbb
cwtl
sahf
xchg
arpl
addr16
loope
pop
sub
mov
rcrl
outsb
push
out
mov
adc
mov
adc
fcmovbe
inc
cli
adc
stos
rcll
jmp
xor
fcmovnu
jne
lret
add
pop
xchg
out
mov
fbld
pop
jns
out
jp
cmpsb
cmpsb
pop
jae
mulb
movsb
ss
arpl
mov
sub
push
sub
mov
cmp
pop
sub
adc
in
and
aaa
iret
mov
cmc
push
mov
movsb
jns
cmp
loopne
dec
sbb
mov
adc
ss
fbld
or
xor
sbb
test
std
cmp
push
mov
xchg
mov
rcl
stos
test
inc
je
push
mov
andb
mov
cmp
cmpsl
aas
jmp
pop
mov
or
arpl
scas
push
mov
lahf
into
mov
cli
adc
rcl
cld
xchg
jge
add
xchg
dec
addr16
push
repnz
sbbl
aaa
pop
jl
mov
stos
jmp
fcompl
mov
fiaddl
sbb
or
pop
popa
jp
adc
xorb
faddp
or
cmp
lds
pop
test
mov
outsl
mov
sub
popa
fisubl
shrl
pop
add
mov
sub
jnp
or
fmull
or
cmpsb
scas
fmuls
jns
fisttps
pop
pop
shlb
movsb
stos
repz
into
ret
loop
mov
pop
cs
mov
cli
cmp
push
pop
mov
sti
xchg
clc
xor
in
enter
mov
fists
cwtl
inc
jg
fisubl
mov
and
xchg
mov
mov
js
jge
jl
pushf
cmp
fistps
pop
lods
aad
push
hlt
mov
dec
jns
adc
mov
push
cltd
scas
jmp
dec
andl
arpl
in
dec
cmp
aam
pop
adc
jno
jmp
in
cmp
dec
xchg
aam
aaa
dec
das
inc
inc
dec
cmp
or
push
stos
iret
sub
test
int3
pop
fildll
and
fs
mov
and
dec
test
fisttps
sbb
xor
jge
inc
add
test
mov
and
add
in
sarb
jno
jmp
nop
inc
jne
cmp
ret
push
mov
mov
js
outsl
xor
std
out
sarl
pop
mov
mov
add
add
xlat
cmp
sahf
lock
daa
mov
outsl
out
inc
mov
mov
hlt
and
cmpsb
sbb
mov
and
or
cmp
mov
inc
js
push
roll
enter
mov
push
pushf
cmpsb
adc
lock
lcall
or
pop
push
ss
ja
loopne
call
lea
mov
lds
mov
jge
arpl
xchg
mov
mov
shll
or
dec
test
cmp
xchg
dec
stos
push
add
outsb
aam
ja
cli
scas
dec
mov
addr16
adc
ret
xor
xchg
xor
jno
sbb
dec
je
mov
pop
movsb
enter
pushf
repz
jbe
pushf
sbb
gs
xor
or
mov
mov
andb
insl
sub
cmp
lahf
jns
pop
inc
xor
movsb
sbbl
jo
add
cmp
jnp
adc
int3
sbb
popa
test
inc
in
mov
enter
out
and
inc
loope
jo
mov
jae
das
sbb
cld
adc
mov
dec
dec
fisubrs
mov
movsl
mov
push
xchg
sar
push
adc
mov
fidivrs
dec
jne
sbb
adc
icebp
shr
xchg
inc
push
mov
fdivl
bnd
pushf
add
add
push
es
or
in
out
repnz
lcall
rcr
loop
push
mov
jge
rcl
mov
jae
rcrb
stc
sub
inc
or
lret
or
js
imul
repz
push
jmp
push
dec
nop
mov
and
inc
pop
mov
test
cltd
push
add
or
push
push
test
rcll
pop
pop
xchg
out
cmpsb
xchg
and
cmpl
mov
stc
sti
mov
add
popf
mov
mov
ficoml
out
xchg
inc
enter
insl
jle
mov
adc
cli
push
sub
outsb
lock
out
test
roll
cmovle
xor
xor
stos
adc
stos
aad
mov
add
std
icebp
push
mov
sub
scas
cld
push
loope
inc
xchg
ds
inc
shll
test
sarb
xchg
fdivr
dec
sahf
repnz
andb
jle
jp
insb
cmp
xor
neg
sbb
loop
push
mov
das
lcall
jmp
dec
mov
negl
inc
les
test
ret
sbb
fisttpll
adc
lea
sbb
rcr
adc
push
pminub
xor
push
fsubp
cmp
add
inc
je
rcrb
gs
pop
mov
pop
enter
inc
ret
lea
fcoml
inc
mov
stc
inc
push
xor
sub
in
lds
enter
pop
mov
shll
cs
sahf
sub
pushf
shrb
aas
sbbb
sub
dec
cmp
push
stos
arpl
dec
add
int3
inc
push
pop
cmpsb
outsb
shlb
sahf
fwait
dec
ret
jg
pop
test
push
dec
sbb
pushf
pop
mov
rcl
dec
shll
xor
cmpsl
cmpsb
addb
enter
inc
pop
push
es
mov
and
movsl
test
rorl
inc
ret
jns
jne
addl
inc
aas
ret
xchg
in
out
enter
jmp
jne
fimuls
test
add
adcl
sbb
data16
movsl
cs
fcom
stc
xor
nop
cmp
mov
add
fmull
imul
insl
enter
roll
rorl
out
negl
pop
mov
clc
das
fsubrp
lret
xchg
xorl
dec
aas
outsl
jmp
gs
lcall
aam
gs
add
aad
mov
lods
pop
xchg
mov
mov
sub
jno
mov
push
jne
push
and
xor
mov
int
xchg
push
inc
cmp
sbb
loop
mov
out
fisttps
xchg
lock
mov
out
cmp
aam
cmp
aam
pop
fs
jo
sub
sbb
lods
jecxz
ljmp
push
ret
enter
pop
leave
test
jnp
out
stc
sbb
mov
fisttpl
insb
jp
pop
push
sarb
test
loop
dec
leave
fdivrs
jo
adc
mov
and
in
or
fcomi
xchg
mov
aaa
in
movsl
cmp
add
call
scas
push
imul
fcomps
in
mov
rorb
jl
push
mov
imul
sub
loope
shl
sbb
in
das
mov
dec
xor
std
mov
fidivl
jnp
test
stos
push
scas
data16
mov
jmp
jb
and
imul
rcl
fldcw
jmp
mov
xchg
repz
bound
cmc
fwait
sti
jg
out
fidivrs
lea
mov
sarb
push
adc
xorl
ljmp
into
cmp
add
jo
sti
stos
fxch
mov
push
cld
jp
add
test
movsb
call
int
scas
and
lea
inc
aad
adc
movsl
notb
aaa
fsub
dec
jae
int3
cld
andb
sbb
cmp
jo
ja
into
add
fcmovnbe
adc
jecxz
mov
and
dec
addb
cltd
lret
xchg
inc
sbb
leave
or
dec
outsl
ja
int
sbb
dec
nop
add
sub
out
mov
loop
mov
sbb
or
lret
sbb
popa
xchg
jg
les
and
movb
mov
lods
xor
jb
jne
pushf
outsb
mov
or
lahf
xor
jp
sbb
or
or
aas
sbb
int
cld
inc
out
sbb
lcall
aad
mov
sub
call
cmpsb
clc
dec
mov
adc
push
or
xorl
adc
sbb
test
in
pop
out
call
xor
sbb
inc
xchg
mov
pop
scas
mov
sub
and
mov
lock
add
nop
ja
sub
xlat
jne
push
cmp
xlat
jg
and
daa
mov
mov
subb
call
les
shrl
shl
in
punpcklwd
sub
inc
xor
popa
inc
inc
outsl
ret
out
or
add
push
lea
add
gs
push
push
cltd
stc
xor
cmpsl
or
mov
mov
mov
inc
sub
sbb
pop
ljmp
xor
in
push
jo
pop
jl
xor
shl
cmp
xor
pop
sbb
stc
xor
jae
ss
pop
mov
jmp
cltd
xor
lds
sub
ret
sbb
mov
stos
icebp
mov
stos
in
jbe
int
fadds
lret
clc
aam
fnstcw
dec
fidivs
cltd
test
pop
out
push
or
rorb
jns
dec
scas
push
pop
scas
add
mov
mov
pop
loop
outsl
jl
movsb
test
cmp
or
leave
xor
repz
cmp
mov
dec
mov
inc
test
jo
dec
lods
and
into
and
sub
xchg
lds
xchg
lcall
punpckhdq
ret
pop
or
mov
push
mov
jg
pop
pop
push
lahf
xchg
add
das
mov
and
lret
outsl
sub
je
sbb
and
stc
xor
xor
lods
dec
cli
jo
jo
mov
jb
add
jp
in
jmp
lock
adc
fs
sub
sarb
std
arpl
test
pop
add
out
outsl
jns
push
arpl
outsb
rcrl
mov
mov
popa
push
or
sbb
mov
or
jb
les
idivb
shr
add
repnz
push
lods
jb
or
xchg
cmpsb
inc
out
sti
clc
test
xchg
fwait
mov
add
or
xchg
test
push
xchg
call
lock
dec
stc
into
mov
mov
adc
clc
inc
cmpsb
ja
cmp
sub
sub
jmp
in
movsb
hlt
dec
add
insb
hlt
adc
in
mov
rorl
out
hlt
insl
movsb
pop
xchg
and
adc
mov
iret
jle
pushf
fstpt
test
sbb
pop
sub
mov
push
push
ja
mov
pop
ror
adc
and
push
hlt
dec
pusha
js
loop
pusha
test
dec
xchg
cmp
stos
insl
test
daa
push
fistl
or
dec
push
xor
sub
jne
sbb
xchg
popa
incl
clc
fwait
repnz
xor
aam
inc
add
aaa
inc
and
mov
ss
push
add
mov
pop
jno
and
outsl
jecxz
sub
sbbb
popf
inc
jmp
add
test
cld
push
jb
movsb
repnz
outsl
iret
add
dec
adc
or
iret
fstl
repz
scas
mov
sets
sub
jb
rol
aad
nop
xchg
bound
lcall
ss
sub
mov
lcall
add
mov
xor
add
jae
push
adc
cmp
jbe
popf
lahf
rorb
insb
mov
das
cmp
mov
pop
dec
test
movsl
rol
mov
fisubs
sbb
and
sub
xchg
shrl
je
or
or
popf
lret
mov
shll
or
aaa
push
js
repnz
push
push
insl
xor
fadds
jae
or
pop
xor
sub
out
shlb
dec
inc
cwtl
int
jge
movsl
mov
xor
lods
outsl
dec
adcb
ret
arpl
imul
pop
pop
test
push
arpl
out
stc
mov
fdivrs
cmp
adc
orl
xorl
add
outsl
sbb
loopne
jg
mov
xor
pop
adc
pop
or
int3
xchg
jns
pop
add
gs
adc
outsb
and
or
jne
sarl
fildll
sbb
gs
cmp
xchg
inc
push
dec
daa
mov
push
into
push
pop
imul
jns
mov
addb
sub
mov
insb
in
xchg
lea
stos
adc
std
adc
nop
outsl
nop
xor
shlb
inc
fs
add
fsubp
xor
dec
push
xchg
inc
out
pushf
movsb
mov
dec
aam
je
or
dec
xchg
sbb
push
fstps
adc
call
cmp
push
insl
xor
fadd
push
mov
ret
jp
imul
lods
inc
or
push
fstpl
pop
test
cmpsl
inc
adc
xchg
out
js
jo
loope
mov
jmp
scas
xor
dec
shlb
jne
scas
jge
lret
insb
int3
ret
add
xor
add
xor
pusha
sahf
cld
idivb
cmp
out
pop
in
int3
push
mov
jge
fmuls
repnz
outsl
je
pop
bnd
daa
mov
int3
cmc
push
xchg
pushf
data16
out
cmc
sbb
enter
mov
pcmpeqb
xchg
je
hlt
addr16
fs
loope
imul
dec
dec
pop
in
mov
cmp
out
add
fstpl
add
test
andb
and
outsb
xchg
test
and
add
ret
mov
adc
xor
adc
inc
mov
mov
add
sbb
aam
cmpsb
xchg
mov
mov
ror
cli
ja
call
jp
das
mov
lock
add
sahf
sahf
pop
jb
sub
mov
fcoml
aaa
daa
inc
fs
mov
or
and
lods
data16
push
mov
jl
dec
ja
inc
lcall
xchg
imul
xchg
lcall
addr16
inc
decl
mov
xor
cltd
pop
cltd
int
xlat
lcall
mov
push
ret
mov
fdiv
xchg
push
cmp
push
sub
shrl
xor
pusha
xchg
dec
idiv
inc
cmp
out
inc
cld
popa
inc
lret
mov
outsl
jae
stos
enter
jge
lret
stos
push
pop
pop
mov
movsl
mov
pusha
push
xor
lods
dec
mov
jns
fisubs
dec
sbb
in
dec
jecxz
jnp
sbb
pop
jbe
push
sbb
xor
test
adc
inc
jmp
je
pop
rolb
add
popa
adc
cmp
and
push
jp
xadd
dec
pop
loope
xchg
popf
shrb
in
pop
adc
jbe
xor
scas
jl
or
jnp
pop
ss
mov
leave
movsb
lret
and
ret
push
push
mov
inc
daa
pop
and
test
les
jbe
mov
addr16
mov
ret
and
test
and
pop
in
dec
lahf
add
fdivrs
mov
inc
aam
push
mov
push
sbb
popf
xor
mov
xlat
add
mov
das
jns
inc
push
adc
inc
nop
rorb
loope
std
jno
imul
cmc
xchg
mov
cmpsb
jbe
push
jl
or
xchg
cmp
cmpsb
xchg
pusha
pop
scas
sahf
cmp
mov
mov
jp
dec
lahf
sbb
jp
dec
add
out
mov
shlb
mov
js
scas
or
dec
gs
mov
shlb
rcl
insl
mov
pop
in
pushf
mov
or
xor
cmpb
bound
ret
pop
outsb
mov
ja
popf
mov
dec
jge
popa
adc
mov
push
push
jo
push
dec
popf
sub
cli
ljmp
andl
test
int
push
test
push
shl
lea
pop
les
pop
add
imul
pop
add
push
bound
dec
lret
jge
jp
jmp
pop
pusha
fildl
setl
pop
and
mov
pop
pushl
stos
mov
pop
inc
xchg
dec
mov
int
add
cli
std
rorl
addr16
insb
pop
insb
add
pop
fnsave
xchg
gs
fidivrs
inc
sbb
lcall
push
es
jge
xor
mov
mov
sbb
mov
popf
cmp
fcompl
adc
ljmp
out
push
test
inc
call
inc
sub
leave
ret
shlb
shll
push
rcrb
add
xlat
lcall
adc
jecxz
hlt
inc
std
push
adc
rcl
push
inc
dec
sbb
out
mov
pop
inc
or
sbb
or
fimuls
adc
ljmp
mov
jmp
mov
xchg
adc
nop
jge
insl
sbb
lret
mov
rcr
dec
jns
mov
mov
sub
cwtl
ja
mov
lahf
popf
enter
xor
in
pop
mov
mov
in
sbb
imul
add
inc
inc
or
fldl
scas
mov
mov
or
les
stos
adc
repnz
mov
xchg
jp
rol
sub
sub
pop
jns
stos
jb
int3
inc
mov
and
add
pusha
push
clc
cmp
push
mov
std
ret
addr16
adc
std
iret
mov
fdivp
push
mov
mov
iret
scas
in
fcoms
jecxz
inc
adc
pusha
or
cmp
mov
xor
mov
mov
xchg
xchg
xor
pop
pop
fistps
push
push
call
daa
xchg
nop
out
popf
push
xchg
jecxz
push
dec
ds
mov
add
mov
popa
mov
adc
insl
imul
sbb
mov
cmpsb
int
scas
or
scas
sahf
push
insl
loopne
jg
ljmp
ret
xor
cld
sub
rcr
bnd
sbb
pop
jae
into
sahf
std
mul
dec
jecxz
jg
sbbl
cmp
add
dec
lods
mov
repnz
mov
fbstp
mov
roll
loopne
inc
jl
and
mov
mov
das
test
xor
adc
jl
xchg
cmp
mov
lea
dec
stos
xchg
xchg
push
cwtl
ret
aam
aaa
lea
lods
popf
mov
sbbl
aas
xrelease
cld
iret
jns
xchg
mov
xor
aam
xchg
pop
enter
xor
pop
and
ss
les
and
fwait
xor
iret
outsl
stos
sub
outsl
adc
pop
mov
sbb
sub
jns
cmp
dec
clc
mov
mov
mov
sbb
jp
js
mov
lret
mov
sti
lahf
imul
mov
ficompl
jl
pusha
cmc
into
mov
out
shr
insl
cld
cwtl
and
mov
jg
clc
mov
rcrb
push
cmp
xchg
fwait
movsb
push
mov
xor
insb
and
xchg
dec
xor
jle
js,pn
fidivl
jno
ljmp
jnp
jbe
pop
jbe
sarl
jmp
and
idivb
int
inc
shlb
sahf
inc
sbb
jl
pop
movl
sub
pushf
sbb
fcmovnb
stos
js
ret
cld
xchg
movsl
icebp
out
das
mov
movsl
sbb
add
add
jb
inc
fiadds
call
mov
out
fcomp
shlb
cmc
mov
mov
jmp
loop
xchg
and
sbb
call
stos
and
pusha
cmc
cmc
pushl
rorb
lods
stos
arpl
and
out
mov
mov
mov
sub
push
aad
pop
in
bound
xchg
push
dec
mov
mov
inc
pop
dec
out
mov
xor
les
dec
aaa
mov
adc
jnp
mov
mov
dec
adc
jle
or
fisubl
das
mov
clc
cmpsb
addr16
xchg
mov
mulb
or
inc
lret
scas
iret
cmp
fiadds
ds
mov
leave
ss
lods
cmp
scas
and
xor
icebp
push
dec
scas
cmp
push
sbb
cmpsl
lods
jne
mov
sbb
add
call
loopne
popa
dec
jno
shlb
sub
push
inc
mov
pop
stc
rorb
out
inc
adc
xor
pop
add
mov
mov
stos
lock
and
out
xor
jl
fcomp
mov
fdivrp
pop
jl
jmp
jl
in
leave
in
sbb
aas
fadds
lods
mov
adc
mov
push
cmp
add
adc
pop
cld
pop
imul
js
cmc
pop
nop
rcrl
out
cs
add
jne
jns
xor
add
out
or
xlat
and
ds
test
fmul
jo
shll
arpl
stc
jae
cmp
jl
std
sbb
lret
aaa
dec
dec
cmp
imul
shrl
or
cmp
inc
orl
xorl
and
mov
call
pop
and
pop
push
in
in
dec
jno
dec
mov
bound
cmp
jns
pop
or
les
in
and
xor
jg
mov
mov
jg
push
mov
sub
out
sbb
shrb
lock
in
testb
and
cmp
leave
in
aam
jno
push
adc
mov
lcall
pop
test
mov
outsl
xchg
adc
mov
gs
xchg
enter
popa
movsb
je
mov
xchg
pop
pop
xor
mov
lock
pushf
jb
test
out
push
andl
xchg
mov
inc
or
imul
lock
lret
leave
push
mov
popa
mov
out
icebp
add
sub
fcompl
ss
repnz
xor
scas
in
jb
aas
fs
in
arpl
push
and
push
dec
pusha
sub
jg
aad
push
shl
add
sub
iret
cmc
push
stos
xor
xchg
sub
pop
dec
or
and
mov
and
jle
xchg
popa
loopne
push
mov
popa
pop
inc
paddsb
into
out
mov
ja
add
adc
outsb
xchg
pop
in
push
test
or
cmpl
cmpsl
imul
lock
or
lret
dec
test
mov
or
out
jnp
mov
out
stos
sbb
test
cmp
jo
dec
jns
cld
cltd
inc
mov
cmpsl
fisttpl
add
xor
mov
bound
xor
stos
dec
inc
cmp
mov
mov
insb
add
sbb
pop
cltd
cmc
imul
jmp
push
mov
rorl
push
pop
fs
pop
push
jns
xchg
xchg
lods
testb
scas
outsl
dec
jle
lahf
cmpsl
es
scas
mov
inc
mov
fadds
data16
mov
adc
arpl
and
addb
pop
inc
and
rcrb
stos
fsub
sub
push
aad
inc
lret
movsb
mov
and
bound
pop
sub
or
mov
test
call
pop
iret
cmp
pop
call
adc
sbb
pop
inc
fwait
push
xor
out
sub
inc
aam
pop
dec
pusha
divl
push
dec
in
push
xor
add
and
pop
inc
sbb
lret
jno
push
mov
mov
lods
mov
push
sbb
add
lods
cmp
xlat
shlb
xchg
mov
jb
imul
js
pusha
mov
cmp
jno
xorb
cmp
sbb
lea
pop
inc
je
and
mov
pop
cmp
xchg
ss
push
mov
xchg
fistpll
add
icebp
lea
addr16
sbb
push
cld
lods
shrb
cwtl
xchg
orb
pop
push
ffree
xor
jne
dec
scas
push
and
cld
cmp
imul
sub
xchg
dec
scas
and
push
pop
lcall
adc
pop
test
in
sub
xor
adc
out
nop
andb
in
inc
cmc
sub
scas
clc
and
jge
dec
dec
cli
fucom
rolb
xor
xchg
mov
push
sub
pop
push
lea
cmpsb
push
inc
lahf
add
lret
loopne
jp
aaa
mov
push
icebp
pop
pushf
ror
std
or
lea
sub
and
cmc
inc
mov
mov
fsubs
lret
ja
cmp
add
stc
aam
fcomip
jge
dec
mov
sub
xor
push
cmp
mov
imul
pop
sbb
sub
dec
sbbl
daa
mov
or
scas
ss
sbb
push
sbb
jecxz
mov
and
jns
mov
test
adc
loope
xchg
jo
jl
and
cld
test
jecxz
scas
xchg
add
arpl
mov
ljmp
dec
cmpb
out
shlb
cmp
mov
test
pop
jno
jno
out
fnstenv
sbb
xchg
mov
mov
cmp
xchg
or
pop
mov
adc
pop
lods
dec
dec
push
sub
test
add
cltd
push
jg
cs
paddd
mov
out
inc
sti
xchg
cltd
add
add
push
pusha
das
add
adc
cmpsl
popa
into
icebp
lds
jp
outsl
sbb
pop
sbb
mov
mov
xor
cmp
xchg
fimuls
pusha
jmp
push
add
pop
inc
popa
cmp
subl
adc
cli
pop
lret
mov
xor
adc
addl
and
int
inc
frstor
adc
test
imul
add
xlat
or
iretw
call
xor
sub
adc
mov
xchg
xchg
cmp
push
pop
sbb
mov
pop
lods
outsl
shrb
test
aaa
cmpsb
fucomi
lea
pop
xlat
les
pusha
fadds
sub
lea
enter
or
lahf
cmpsl
push
sbb
fucomip
xor
jne
adc
mov
rolb
popf
cmp
mov
fcom
pop
into
aas
dec
add
add
inc
adc
mov
std
leave
es
adc
jae
xor
or
pushl
sahf
inc
into
jnp
push
mov
mov
mov
dec
test
pop
pop
ljmp
jb
cmp
stos
mov
dec
pop
sbb
inc
pop
es
and
jmp
pop
lods
ljmp
lret
and
jo
cwtl
xchg
jns
jo
xchg
outsl
mov
mov
xlat
xor
sub
xchg
js
test
lea
mov
cs
ja
cmp
inc
cli
test
test
addb
xchg
faddl
mov
add
cmp
adc
mov
ret
ss
imul
push
and
sbb
xchg
push
insl
pushf
pop
aad
jmp
xchg
aam
mov
push
mov
and
pushf
bound
shrl
push
jb
in
outsb
ds
dec
dec
psubq
mov
jae
into
inc
jno
subb
popf
dec
pop
xor
out
or
mov
mov
jb
pop
push
add
fistl
fcoml
leave
jo
dec
es
cltd
clc
jb
movsb
cwtl
fnstcw
fwait
add
add
pushf
mov
fs
es
mov
mov
cmp
pop
jo
sbb
dec
adc
cwtl
cwtl
add
sub
jne
shl
or
rcr
jecxz
mov
cmpsb
cmpsb
push
js
add
sub
mov
ret
pop
bound
xor
push
shl
fildll
inc
xchg
jge
test
push
sbb
js
sbbl
pusha
push
sub
mov
stos
mov
sbb
cld
cltd
in
inc
push
sbb
aas
je
dec
nop
xchg
aas
mov
pop
repnz
dec
in
pusha
jbe
mov
roll
mov
cltd
mov
std
ret
lahf
into
or
cmpsb
jne
maxps
mov
into
pop
xor
mov
mov
cmp
xchg
xlat
test
cli
fidivrs
out
test
dec
jg
popa
push
cmpl
aaa
frndint
mov
data16
rol
rolb
jo
sub
dec
adc
and
sahf
negl
push
sbb
xchg
xor
or
int3
scas
das
sahf
mov
xor
and
out
pop
dec
mull
out
pop
jb
loopne
mov
icebp
mov
out
push
repnz
cli
push
push
inc
sub
cmc
imul
dec
outsl
enter
push
es
ja
mov
jp
push
repnz
xchg
xor
sar
mov
lock
sbb
fwait
cmp
stos
mov
jecxz
and
scas
repnz
addr16
pop
lret
into
lods
dec
and
mov
xchg
rclb
sub
xchg
test
ret
popa
imul
jns
pop
lds
repz
jb
xchg
xchg
out
outsb
imul
cmp
cmp
adc
push
loope
int
add
jle
test
hlt
ss
lods
push
xor
inc
dec
xlat
pop
sbb
mov
dec
push
dec
xor
add
fsubs
mov
jecxz
cmp
mov
loope
xchg
add
xor
xlat
sub
mov
sbbb
jl
jl
adcb
jle
rorl
fnsave
mov
repnz
icebp
sub
cmpsl
sarb
fs
fs
sbb
add
mov
fadds
add
cmc
and
repz
adc
or
je
and
xor
mov
dec
jb
dec
pop
jg
cmp
push
in
add
and
cmp
push
jnp
mov
sub
sar
testl
xchg
sbb
fnsave
inc
fisttpll
jecxz
repz
pop
cmp
daa
jmp
call
add
cld
push
mov
fisubrs
loope
popf
mov
inc
xchg
mov
stos
mov
push
xchg
fsubr
add
sbb
out
call
enter
cmp
mov
sbb
clc
fiadds
sbb
dec
notb
out
xorl
dec
cmc
dec
shll
mov
jecxz
xchg
push
pop
mov
imul
xchg
adc
and
inc
add
cmpsl
nop
inc
adc
mov
mov
clc
aam
xor
jmp
mov
pop
xchg
mov
sbb
test
scas
add
in
hlt
rcll
mov
push
testb
arpl
xchg
movsb
xchg
pop
int3
xor
dec
mov
enter
xlat
icebp
and
jb
and
test
andb
mov
add
cmp
mov
test
out
inc
cmp
filds
mov
stos
jmp
jp
cmp
add
pop
cmp
pop
or
xchg
xor
ror
pop
movsb
lcall
test
dec
pop
das
ds
cmp
les
ja
lahf
xchg
test
xchg
int3
jle
xor
inc
sbb
imulb
inc
or
test
pusha
inc
inc
adc
in
rorb
adcb
push
jae
mov
push
push
xchg
out
nop
fwait
pop
les
ret
lods
add
dec
mov
xchg
mov
mov
jbe
mov
out
mov
stos
inc
shlb
jle
outsb
lret
lret
sbb
mov
rolb
loop
pop
in
loope
icebp
xor
out
shl
and
push
mov
xor
sub
outsw
push
lods
xchg
andb
jmp
lret
lahf
shll
outsl
jl
sub
jle
pop
iret
pop
test
idivl
movsb
mov
call
and
push
arpl
sbb
leave
cmc
mov
xor
lods
or
sbb
out
add
cmp
pop
inc
mov
mov
mov
xor
xor
ja
in
or
dec
stos
stc
xchg
pop
ss
xchg
push
push
clc
lcall
mov
and
scas
int
pop
sbb
inc
fs
es
aaa
nop
lods
ret
mov
pop
int3
cmp
lret
pop
pop
sub
sbb
pop
scas
leave
mov
cli
popf
js
push
sarl
xchg
pop
inc
out
sti
sbb
loop
inc
mov
pusha
data16
jg
fprem
push
and
cmp
jnp
adc
mov
addr16
scas
push
push
cld
insl
add
and
shrl
jl
aad
lea
jg
ss
mov
adc
cwtl
cmpsl
mov
mov
add
fs
mov
cmp
push
gs
shlb
test
in
stc
out
jle
sar
inc
sarl
xchg
mov
vcvtsi2sdl
rcrl
cmpsb
sub
inc
inc
mov
sbbl
ss
jle
std
sti
mov
clc
add
cmp
jnp
sahf
hlt
std
cwtl
xor
jecxz
frstor
sbb
xor
inc
pop
bound
mov
sti
stc
dec
std
test
icebp
sbb
adc
sub
sbb
mov
push
aaa
scas
sbb
mov
insl
rcrb
jae
pop
and
push
out
lods
sub
cli
or
loope
jp
dec
aaa
shr
test
cmp
sub
add
mov
jecxz
test
and
pop
iret
repz
pop
loope
jl
popa
adc
xchg
adc
scas
sub
cmp
jp
push
lods
xor
cwtl
or
into
mov
jne
lahf
inc
xchg
adc
dec
mov
ret
jb
bndstx
mov
int
jo
dec
and
leave
cmp
repz
arpl
and
xchg
rolb
jnp
sub
shl
inc
push
jb
lods
cmc
outsb
cltd
xchg
sub
sub
rorb
push
stos
shrb
test
mov
scas
aam
rcrb
sahf
ret
aas
call
mov
xchg
cmc
mov
cmpsb
and
in
xor
xchg
push
cwtl
fadds
notl
addb
mov
cmpsl
xor
mov
cmp
stos
imull
aam
mov
jae
lods
xor
adc
pop
loop
adcb
in
add
bound
imul
pop
fwait
cmp
ret
scas
mov
mov
pop
popa
inc
mov
loop
sub
scas
test
lret
jg
sbb
adc
xchg
je
rol
sub
nop
jns
js
fadd
or
jo
xlat
inc
hlt
sbb
repz
xchg
pop
cmpsl
sbb
ret
cs
pop
fistps
and
nop
jg
cmp
test
repz
stc
cld
sub
mov
adc
lcall
sub
fwait
movsb
mov
ror
jnp
clc
mov
rclb
popf
push
and
xchg
fcomps
cmp
adc
xchg
imulb
dec
leave
sbb
cmpb
push
fsubl
ja
dec
mov
je
xchg
cs
jl
ffreep
sbb
nop
and
sti
int
mov
mov
in
pusha
jmp
fistps
test
add
pop
ljmp
sub
iret
fwait
jne
pop
inc
decb
repnz
fidivl
lea
in
test
xchg
sbbl
pop
push
or
ds
or
sub
cmpsl
and
out
xor
cmp
icebp
outsl
or
insl
mov
mov
sub
dec
or
sbb
dec
rcr
adcl
pop
mov
jne
ds
push
push
xor
mov
jnp
push
out
rcr
ret
inc
inc
xchg
adc
icebp
shr
push
sub
aaa
dec
cmp
lahf
mov
sbbb
adcl
in
scas
jo
cmp
xchg
out
fdivs
mov
sub
inc
mov
sub
iret
xor
js
jns
sub
ret
stc
fnsave
sbb
test
nop
bound
mov
mov
ret
dec
popa
or
movsb
loope
mov
fstpl
inc
flds
test
jno
xadd
pop
ljmp
negb
movsl
imul
stos
xorb
je
mov
mov
outsb
cmp
pop
insl
loop
aas
mov
int3
dec
push
adc
mov
icebp
sbb
enter
aaa
sub
push
ret
cmpb
push
lea
push
jnp
inc
or
in
mov
aas
and
hlt
test
adc
in
pop
sub
or
inc
sub
and
add
xchg
xchg
mov
in
push
repz
jo
xor
sub
lret
cmp
fwait
shll
mov
push
push
popf
sbb
fadds
xchg
rcrl
ret
jo
pop
inc
insl
cmpsl
xchg
gs
test
mov
push
or
jno
jecxz
xchg
lods
mov
jle
mov
xor
mov
arpl
push
xor
mov
xor
jg
loop
xchg
cmp
mov
or
mov
mov
insl
stos
add
push
cwtl
dec
xlat
icebp
cld
jns
mov
mov
jne
in
dec
inc
pop
subb
repnz
mov
aad
ret
mov
pushf
loop
push
adc
imulb
mov
mov
mov
test
xorl
cmp
fs
jmp
xchg
add
imul
mov
push
sbb
fdivl
sti
icebp
mov
addr16
sbb
leave
inc
fwait
xchg
xchg
cmp
push
xlat
movsb
jb
repz
out
pop
iret
popa
repnz
sbb
xor
aad
cmp
push
cltd
xchg
out
push
push
nop
out
bound
icebp
es
adc
xlat
sbb
hlt
sbb
test
sub
jne
sub
lret
rcrl
out
xchg
push
push
mov
jge
clc
les
cmp
push
scas
dec
inc
test
sbb
sahf
push
test
dec
out
cltd
dec
gs
mov
loop
bnd
out
shrb
rcrb
sbb
xchg
cmpsb
sub
popf
or
cltd
add
movsb
enter
lea
popa
out
std
xchg
stos
rorl
push
cwtl
xor
jmp
mul
push
imull
mov
pop
push
xor
out
imul
rcl
repnz
dec
out
mov
ret
mov
lea
fistpl
test
mov
cmpsl
xor
pop
dec
cld
cmp
int
cmp
pop
int
adc
sub
jbe
inc
fnstcw
iret
pushl
das
fcmovnbe
shrl
scas
mov
cmc
sub
in
sub
movsl
xor
push
pop
fucom
jb
shr
push
jp
mov
push
cmpsb
xchg
inc
scas
or
rclb
divl
mov
repz
and
mov
and
dec
mov
test
out
cmp
and
inc
adc
mov
adc
int
fsubrl
mov
and
in
mov
mov
xor
sub
loopne
push
int
cmovle
xchg
sti
leave
mov
push
ds
addl
je
mov
int3
inc
jno
push
xchg
mov
fcompl
mov
or
cli
aam
dec
mov
out
popf
pushf
xchg
sub
inc
mov
sub
lcall
in
loope
outsb
jg
lahf
js
dec
pop
test
mov
xor
xchg
ljmp
hlt
mov
int
cwtl
pop
std
cs
in
mov
push
sub
mov
fmuls
inc
lret
and
rcr
mov
jg
not
cmpsl
mov
in
xor
leave
xchg
aad
ljmp
test
cmp
mov
and
xor
sub
cltd
les
cmp
lret
lea
sti
filds
movsb
pop
push
lods
inc
insb
sbb
addr16
fstps
or
arpl
inc
or
ss
cmp
pop
jo
movsb
push
xchg
enter
ret
push
imul
and
inc
xor
daa
imul
cmp
dec
adc
insl
in
push
mov
pop
scas
or
aas
addr16
gs
test
lcall
push
arpl
lods
jns
lcall
cmp
xchg
ret
jbe
inc
dec
repnz
cli
mov
cltd
ret
and
loopne
xchg
cmc
repz
push
outsl
sbb
cltd
outsb
sub
imul
push
mov
mov
add
sub
or
clc
sub
or
inc
inc
mov
faddp
mov
xlat
lds
adc
ficoml
cmp
ret
jne
cmpsb
movsb
jle
jl
lock
and
call
aas
lods
les
jae
mov
and
jecxz
jnp
lahf
in
mov
dec
push
push
hlt
cmpsl
cltd
das
jmp
push
rcll
shl
adc
inc
dec
pop
pop
xor
mov
scas
rcl
sti
add
dec
ret
cmp
lahf
mov
adc
push
cli
push
imul
mov
in
inc
inc
xchg
pushf
jb
fcoml
loopne
test
or
lods
xchg
jecxz
dec
xor
sbb
inc
inc
in
mov
pop
xchg
test
daa
mov
mov
mov
inc
or
xchg
hlt
jno
cmp
ss
fmul
sbb
mov
mov
mov
jb
push
and
fs
ret
ror
outsb
rcl
sub
jmp
jno
jmp
push
pop
dec
mov
mov
fmulp
repz
fwait
pop
aam
pop
int3
and
and
mov
sub
dec
sbb
mov
cwtl
or
inc
ds
inc
dec
fdivp
add
mov
shll
in
lahf
repnz
sbb
push
and
mov
aam
lods
mov
insb
and
adc
sbb
xchg
fxch
jne
or
cwtl
stos
in
push
clc
xchg
aas
and
popf
add
aam
ljmp
and
repz
dec
pop
roll
nop
leave
dec
mov
stos
adc
aam
in
ds
pusha
jno
cwtl
push
cwtl
inc
add
movsl
push
or
out
clc
xchg
rcr
or
notb
test
or
roll
or
loop
inc
lock
in
mov
mov
les
hlt
jle
pop
rorb
lea
loope
test
lcall
push
scas
sbb
add
dec
andl
lret
imul
dec
mov
push
xor
push
cmp
cmpsl
rcrb
lret
add
loopne
cmp
data16
inc
add
jmp
stos
adc
addr16
inc
xor
cmp
jo
popa
dec
cltd
icebp
push
cmp
pop
pushl
lock
pop
aaa
mov
cmpsl
ss
jno
inc
add
iret
jno
fwait
stos
outsb
clc
loop
mov
pop
jg
push
xor
lods
push
adc
insl
daa
stc
pusha
mov
loope
aam
les
js
out
fsts
cli
xchg
lock
fs
xchg
push
ss
xchg
orb
mov
popa
mov
ficomps
jnp
insl
ffree
leave
insl
mov
rolb
shrd
sbb
rolb
inc
jg
lret
adc
repnz
dec
push
mov
pop
mov
int
les
out
adc
or
mov
xchg
sub
sbb
int3
movsl
stos
mov
mov
ret
cmp
jmp
enter
jmp
jp
addl
or
iret
cli
jp
pop
cmp
rcl
jp
jp
xchg
pop
outsb
lcall
sub
std
pop
jmp
xor
cwtl
adc
adc
mov
ss
fsubs
push
xchg
cwtl
repz
test
ss
dec
stos
nop
gs
lahf
cmp
je
mov
xor
fsubs
pop
or
imul
sbb
or
jnp
outsb
push
loop
rol
cs
in
lahf
int
roll
lcall
into
cmp
mov
jnp
dec
popa
add
mov
roll
fistpll
std
inc
and
or
fimull
mov
mov
jecxz
push
mull
fwait
aas
mov
rcrb
cmpsl
xor
sub
insb
mov
insl
int3
dec
mov
std
arpl
mov
pushf
pop
shl
scas
dec
shll
mov
jno
mov
fsts
xchg
addl
fidivs
lcall
ja
jno
sbb
sbb
pop
push
into
dec
out
push
jl
test
and
sbb
sti
adc
nopl
out
scas
outsb
sub
push
sbb
or
mov
inc
jecxz
sti
lret
imul
fsubl
pop
and
pop
sbb
movsb
mov
inc
enter
leave
out
dec
outsb
rorl
mov
scas
or
cs
int
cmp
pushf
adc
out
and
fisttpll
sbb
cmp
in
mov
xchg
testl
push
loope
pop
mov
fdivl
pop
or
inc
leave
or
push
xchg
test
add
loopne
daa
lods
outsl
cli
xor
sub
fisttpl
cmpsb
mov
lock
iret
mov
orl
data16
lock
sbb
sub
pop
mov
pop
or
stos
dec
or
push
test
jne
or
sbb
cli
jp
cmpsl
cmp
shlb
xor
jp
rorb
push
cmp
pop
repnz
leave
ja
and
nop
adc
int
and
in
push
push
add
mov
push
cmp
stc
adc
cmpsl
jp
aam
dec
cmp
aad
sahf
pop
adcb
test
hlt
xchg
inc
mov
push
cmpsb
mov
mov
sar
push
mov
das
enter
out
lds
sub
fdivl
or
adc
out
add
aaa
movsl
xchg
jecxz
add
stos
test
fistpll
sub
subb
loopne
rcll
stc
loopne
mov
mov
xchg
inc
mov
nop
mov
int
fisubrs
out
mov
mov
in
sub
fldl
inc
imulb
testl
pop
xchg
jns
sbb
notb
xchg
shr
mov
push
xor
mov
push
lret
imul
and
daa
sub
sbb
stos
jmp
xor
pop
inc
sub
std
outsb
repz
mov
mov
lea
dec
inc
faddl
and
pushf
add
movzbl
pop
fisubrs
aaa
jecxz
add
mov
cmp
pop
jb
cltd
out
sub
iret
sarb
xchg
mov
sub
cmp
adc
icebp
pop
xlat
ret
pop
arpl
aas
mov
mov
mov
jo
les
push
sbb
call
ss
pusha
imul
inc
adc
in
into
push
xchg
jnp
rorb
icebp
xlat
push
test
out
fdivs
stos
or
jb
dec
loop
xor
sahf
pushf
lcall
cmp
push
cmc
imul
test
dec
xor
xchg
mov
xchg
ret
scas
jbe
std
popa
xor
push
loopne
jg
or
daa
out
out
adc
flds
aam
fcmove
or
sub
shr
or
clc
xchg
lea
add
push
iret
out
add
fwait
mov
adc
jmp
dec
imul
rep
cmp
xchg
cmp
movaps
sub
and
movsl
jp
outsb
mov
out
loop
push
fistl
ffreep
es
mov
das
outsl
fidivl
js
test
xor
aam
push
jmp
hlt
rcll
and
aas
mov
xchg
jno
test
mov
ret
mov
addr16
or
push
push
mov
call
sarb
imul
pop
cmpsl
inc
in
xor
arpl
enter
aas
outsl
insl
mov
outsl
inc
imul
leave
pop
push
xchg
inc
scas
sub
out
cli
inc
data16
add
mov
outsb
jle
add
jb
loopne
push
mov
xor
movsl
sub
out
jp
fadds
xorl
test
xor
xor
mov
movsl
testb
jmp
and
sub
mov
adcl
aas
adc
iret
pop
jge
adc
in
stc
nop
dec
in
adc
pop
ret
sbbb
or
jbe
sub
shl
adc
cmc
inc
fcmovbe
pop
dec
xchg
stc
xlat
xor
cmp
js
sbb
xor
insb
ret
aas
rcll
std
lea
xchg
sbb
adc
mov
std
xchg
js
mov
pop
leave
push
leave
outsl
sub
sarb
lret
jecxz
and
call
mov
into
cmp
lods
outsb
cmpsl
lahf
sbb
sti
out
fadd
dec
imul
call
mov
mov
andb
movsl
xor
dec
inc
mov
mov
and
rorb
xor
inc
aam
sti
movsl
sub
ljmp
fwait
push
outsb
insl
ljmp
cmpsb
fs
ficomps
jnp
hlt
inc
icebp
aaa
mov
xchg
mov
aam
stos
bound
push
and
cmc
cltd
clc
mov
xor
repz
dec
cmc
cli
test
sbb
call
pushf
std
jmp
add
rol
dec
add
loopne
xchg
les
daa
adcl
int3
punpcklbw
push
enter
jecxz
cmp
jae
movsb
nop
sub
sbb
in
cli
bound
ret
sbb
jle
xsaves
push
xchg
xor
and
sub
sbb
mov
lods
ret
scas
repnz
sub
out
mov
adc
repnz
xchg
mov
iret
sub
fwait
inc
outsl
push
loop
ljmp
push
xchg
add
sbb
adcl
pop
push
in
sbb
scas
sub
mov
sub
sub
ret
sbb
jg
sbb
lret
and
fdivp
sti
lcall
xchg
lods
aaa
xchg
and
cltd
pusha
jno
std
test
mov
scas
rcrb
and
mov
movsb
pop
out
mov
jnp
push
inc
nop
sbbb
pop
pop
fcmovu
xchg
dec
loope
jb
mov
fisubrl
lahf
sub
mov
sbb
insl
leave
iret
in
jbe
mov
jmp
pop
lcall
jle
sub
xor
cmp
lods
movsb
pop
jmp
fcmovnbe
jp
cmp
jb
sub
orl
cltd
hlt
dec
std
cmovae
fcmovne
xor
jl
aad
mov
mov
repnz
push
sub
sbbl
popa
xor
or
dec
xchg
fnstsw
sahf
les
xor
bound
sahf
jb
and
dec
push
push
fistps
iret
inc
rclb
std
or
fdivl
rcr
cwtl
cltd
mov
add
sahf
pop
sub
stc
mov
and
jge
mov
rcrl
push
jecxz
out
xchg
mov
push
lea
or
push
stos
stos
mov
adc
cmc
jae
repz
icebp
cmp
fcompl
sub
call
cld
dec
andl
sub
and
mov
jb
movsl
daa
adc
push
mov
outsl
ss
inc
inc
mov
sahf
sub
in
rcrb
jmp
repz
xor
xor
add
sbbb
gs
adc
pusha
sbb
lret
push
flds
nop
pop
shll
pop
iret
mov
sbb
dec
fisubrs
ret
loopne
bound
add
stc
mov
mov
cli
adc
ja
mov
fiadds
lods
cmpsl
cld
mov
xchg
fnsave
out
xchg
shrb
cs
les
pop
and
dec
jge
jle
jo
inc
lret
shll
sbb
inc
xor
sub
leave
popa
cmp
cmp
repnz
mov
fdivrs
sub
inc
mov
mov
or
lret
mov
fisubrl
dec
sbb
hlt
xchg
inc
cmp
xor
insb
icebp
pop
xchg
xchg
pop
in
pop
xchg
data16
and
pop
stos
and
out
fidivs
xor
pop
test
jle
shrb
adc
pop
gs
out
jne
push
pop
hlt
leave
pop
pop
into
jmp
jno
cltd
rcll
daa
std
iret
jge
lds
push
add
or
xchg
outsl
push
stc
pop
jp
jo
mov
or
fnstenv
rcrb
add
adc
mov
xor
dec
lds
mov
xor
inc
add
shlb
jge
jmp
sti
aas
xor
mov
sti
mov
fwait
aaa
xchg
lods
outsl
mov
imul
mov
scas
sub
gs
xorl
and
mov
pop
pop
sbb
arpl
sbb
stc
inc
cmp
outsl
pop
push
xchg
outsb
setle
aas
fistl
dec
pop
xchg
mov
mov
iret
push
jbe
mov
mov
add
xchg
mov
inc
call
data16
mov
movb
cmp
jmp
repnz
add
add
out
xor
xchg
or
clc
out
xor
cmp
xchg
incb
lds
jl
stos
and
jge
mov
and
dec
or
mov
jecxz
add
mov
and
dec
jo
movsb
dec
pop
mov
arpl
data16
in
insl
and
mov
out
pop
mov
cmp
fdivl
mov
jge
popa
mov
push
ds
movsb
sti
xor
rorb
mov
mov
mov
sti
dec
lret
sub
inc
idivl
rorl
lods
in
and
mov
dec
xchg
movsb
imul
add
sbb
in
push
xchg
out
jmp
mov
cmc
cmp
push
loop
dec
jo
out
cmp
sbb
outsl
jne
aam
fdivrl
cmc
cmp
inc
bound
mov
dec
and
stos
repz
pop
mov
cmpsl
in
mov
cmp
sbb
aaa
aaa
repz
mov
or
fwait
inc
ja
scas
fcmovnu
sahf
cmp
and
test
test
arpl
negb
inc
jbe
pop
shll
lods
lock
ja
sub
dec
xchg
in
dec
and
pop
pop
or
mov
addb
inc
cmp
lods
adc
and
cmc
push
out
pop
leave
scas
push
lods
pop
int
sbb
mov
loop
pop
inc
lods
call
cltd
cmpsb
cmpsb
sbbl
popa
add
in
mov
mov
cmp
repnz
xchg
clc
sub
cmp
jp
pop
in
mov
xor
into
xor
popa
sbb
shrl
stc
dec
dec
and
xor
push
das
sub
loop
mov
icebp
stos
imul
mov
jmp
mov
jno
mov
imul
jb
sub
stos
pop
add
cmp
ljmp
dec
pop
pop
sub
iret
jl
push
and
fcmovb
lds
jo
loope
orb
shr
lds
sahf
bound
inc
xchg
push
andl
mov
lcall
aas
sbb
add
sub
into
pop
addr16
popa
popf
icebp
rclb
sbb
fdivrs
sub
add
xor
push
loope
dec
bound
inc
dec
dec
adc
mov
outsb
aam
repz
mov
mov
pop
xchg
nopl
add
stos
pop
in
aaa
dec
ret
inc
push
enter
lret
adc
test
movsl
jecxz
jecxz
icebp
mov
arpl
lock
ss
int3
push
insl
add
ljmp
data16
or
bound
jle
xchg
pop
jmp
mov
in
das
std
rcl
inc
push
jmp
mov
arpl
mov
enter
mov
mov
pop
push
test
push
inc
mov
add
jb
adc
cwtl
sub
add
mov
fldenv
mov
cs
mov
jge
into
push
dec
push
leave
daa
aad
insl
mov
xchg
sub
popa
cmp
mov
inc
adc
inc
stos
call
sbb
cmp
mov
into
xor
jbe
das
add
mov
sar
test
in
enter
lret
sahf
cmp
test
pop
dec
add
fwait
mov
icebp
clc
and
mov
push
das
dec
outsl
adcb
lahf
fistl
xlat
push
leave
in
imul
imul
aam
out
ret
mov
dec
adc
sbb
fiaddl
and
mov
aad
fcoml
cs
insl
xlat
jecxz
std
popf
add
jnp
pusha
pop
cmp
insb
gs
aas
enter
xor
or
xchg
pop
cmpsb
insb
adc
test
pushf
push
inc
aad
and
add
iret
inc
movsb
or
mov
pop
fst
xchg
sub
adc
inc
push
in
fildll
subb
popf
add
out
pop
add
xor
fadds
rol
movsl
xchg
or
cwtl
jno
lods
dec
lret
int
js
and
push
call
inc
mov
xlat
jns
push
cltd
mov
addr16
aad
dec
mov
push
scas
cmp
dec
inc
sahf
sbb
in
mov
mov
mov
adc
mov
cs
mov
pop
das
ja
sarb
loopne
movl
push
test
jnp
lcall
cli
or
popa
cld
add
in
sbb
int3
addr16
sahf
cmpsl
inc
and
dec
mov
sahf
lock
cmpsl
mov
into
lock
dec
cwtl
sbb
cmc
fists
jle
lcall
xor
orb
pop
push
push
lock
outsb
xchg
mov
add
push
inc
aad
test
dec
jae
dec
add
cmpsb
xor
rcrl
pop
pop
ret
add
mov
xchg
aaa
dec
js
adc
mov
jns
ficomps
dec
and
lods
lock
dec
pop
es
in
jnp
add
jo
aad
nop
jg
xor
adc
mov
jmp
cmp
je
push
ljmp
xor
cwtl
jecxz
cmp
sbb
packssdw
mov
cmp
or
sbb
jl
adc
or
jmp
popa
loop
in
fimuls
outsl
idivl
pop
ljmp
pop
lahf
gs
movsl
sahf
cmp
cmpl
pushf
mov
pop
lods
mov
pop
divl
cwtl
sub
mov
pop
xchg
je
add
int
test
cmpl
or
add
ja
inc
jne
movsl
pop
lock
imul
mov
inc
lds
aam
addr16
mov
fldt
and
add
cmpsb
jmp
loopne
push
xchg
aaa
mov
outsb
pusha
lcall
inc
je
mov
mov
shrl
inc
add
and
cmp
ret
and
add
cmpsb
pop
ret
xchg
daa
in
and
dec
mov
lds
imul
inc
sarb
xorl
sti
insl
pop
cmp
mov
ret
pop
sub
fbstp
lock
mov
push
pop
mov
pop
inc
pop
jne
lcall
aaa
out
out
or
ss
pop
fstps
dec
adc
dec
and
mov
iret
add
push
xor
dec
adc
lcall
jae
leave
push
adc
push
mov
cmpsb
popf
mov
mov
out
mov
inc
mov
ret
sub
sti
jg
pop
jnp
movsb
std
add
in
cmpsb
daa
shrl
jle
pushf
xchg
xchg
in
adc
jmp
sbb
in
hlt
sub
cmc
lcall
jb
sbb
fsubr
jbe
cmp
cmp
mov
cld
das
sub
stos
jae
sub
add
stos
adc
pop
in
das
ds
jae
lahf
je
jne
ja
pop
and
adc
leave
xor
xlat
pop
ficoml
inc
dec
push
mov
lods
ljmp
cmp
mov
fwait
or
movsl
pop
stos
clc
or
dec
mov
and
pop
scas
dec
nop
add
dec
pop
dec
jl
mov
iret
mov
imul
dec
mov
js
jno
mov
pop
xchg
js
fmull
and
xor
loop
cwtl
push
jle
or
adc
fidivrl
xchg
cmp
cli
mov
inc
cwtl
mov
sbb
dec
jb
sub
inc
lahf
jnp
int3
fcom
sar
mov
ret
push
rcrl
cwtl
or
push
out
push
mov
clc
movl
mov
and
xchg
add
cmpsb
inc
mov
jp
gs
xchg
or
lahf
inc
ffreep
daa
mov
pop
cmpsb
push
jmp
repnz
test
pop
ljmp
adc
leave
rep
jl
sti
mov
add
sti
clc
addb
sbb
or
sub
xor
clc
out
jae
test
mov
adc
dec
test
ja
mov
xchg
or
sub
pop
xor
xchg
inc
sbb
insl
sbbb
push
dec
push
movb
pop
sub
adc
add
outsl
cld
fisubrl
adc
movsb
xor
mov
jl
jmp
inc
popf
aad
pop
int3
push
jb
sbb
lods
test
xor
pop
popa
and
shlb
jp
lock
shrd
aaa
mov
jg
ret
mov
cmp
add
sbb
cmc
pop
mov
push
adc
iret
mov
sub
mov
sti
scas
inc
jb
out
fisubrl
repnz
sub
mov
push
aad
shl
clc
lock
mov
pop
inc
mov
cmpsb
inc
fisubs
xchg
xor
pop
add
out
testl
ljmp
jno
dec
jno
inc
bound
jp
sbb
outsl
push
lea
js
lods
mov
jge
rorl
cmpsb
xchg
add
inc
xchg
jmp
stos
fisttpl
scas
mov
mov
xchg
xchg
adc
push
pop
inc
add
enter
add
pusha
sbb
enter
jle
mov
adcl
mov
xchg
push
adc
cmp
jne
sub
and
and
mov
ljmp
xor
pop
fs
mov
ret
dec
cmpsb
loop
lods
in
sub
aad
cltd
repnz
push
out
outsb
loop
and
adc
imul
shrb
insb
into
and
and
in
fnstsw
jbe
xchg
dec
sbb
sbb
sub
mov
out
cmpsb
ljmp
dec
mov
lcall
xor
nop
mov
cmp
or
cmpsb
ja
nop
sbb
repnz
bound
aaa
popa
mov
aaa
xor
insl
sahf
repnz
sub
repnz
push
fbld
lea
iret
sahf
cmp
adc
cmp
bound
mov
jl
xor
dec
xchg
rcrl
push
in
pop
or
in
sti
xchg
xor
xchg
jb
dec
xor
lahf
lret
lock
outsb
add
rcr
push
inc
adc
cmp
jnp
or
mov
rclb
in
sub
je
sbb
mov
cs
fistpl
cmp
add
out
inc
addr16
push
jne
dec
fidivrl
mov
cmp
movsl
jnp
cmp
mov
or
adc
pop
adc
push
rcrl
out
cmpsl
popa
or
icebp
mov
sbb
cli
jmp
mov
and
add
or
bound
mov
mov
lcall
ret
aad
lahf
addr16
mov
sbb
out
xor
sub
fld
add
jae
mov
xor
out
inc
jno
cmp
in
push
test
xchg
jp
out
jle
int3
mov
arpl
int
mov
sbb
icebp
jecxz,pn
nop
daa
cmp
sbb
enter
imul
loope
shrb
and
jns
add
cmpsb
lahf
cmp
cmp
xchg
xchg
cmp
sub
out
cmp
jle
fadds
out
hlt
cmpsl
mov
aas
and
mov
fwait
inc
shl
incb
lock
push
jbe
inc
testl
fsts
inc
jge
push
or
je
jns
mov
lcall
sub
cmp
mov
jg
jp
mov
js
aaa
xchg
int
or
into
mov
in
mov
dec
shll
or
sub
jnp
mov
sti
jno
out
stos
pop
push
ret
ja,pt
sbb
fmul
sbb
aam
aaa
cmp
insl
push
push
push
iret
movsb
lret
fimuls
loopne
push
mov
mov
add
repnz
push
mov
gs
sbb
arpl
sbb
mov
out
and
sbb
sub
xchg
mov
sbb
pop
and
rcrb
sarb
pop
and
lock
jns
add
shl
das
push
lret
xchg
shll
aam
inc
stc
jp
xlat
or
mov
and
xor
jecxz
popf
push
popa
xor
or
stos
icebp
jae
sti
out
jge
adc
dec
inc
mov
stc
lea
cmp
mov
cs
push
push
fsubrp
mov
shrb
sbb
xchg
pop
pop
add
add
sub
mov
or
jg
xchg
push
cvtpi2ps
sbb
inc
incb
popa
push
jae
stos
mov
lea
or
mov
adc
xchg
je
sub
out
icebp
mov
mov
add
xchg
sbb
pop
fs
js
sbb
loopne
xchg
movsl
or
inc
push
outsb
push
shll
test
dec
lahf
cld
fwait
pusha
xor
cmp
jg
mov
dec
fsubl
into
cmp
jg
pmaxsw
call
shlb
test
mov
repz
xor
push
cld
jne
and
stos
test
iret
and
and
gs
cmpsb
cmp
push
jg
cltd
fwait
xor
pop
ret
je
adcl
jno
jns
daa
sub
shll
neg
lret
jp
dec
jmp
xor
mov
std
call
jge
mov
or
mov
mov
xchg
lcall
popa
arpl
jne
scas
mov
or
insl
sti
jnp
in
popa
nop
cmp
in
dec
mov
in
cmp
outsb
jb
mov
ret
cmp
mov
insl
movsb
or
cmp
or
in
add
stos
ljmp
xchg
jl
fcmovnbe
mov
ja
jecxz
insb
mov
loope
pusha
mov
inc
mov
bound
mov
cmp
dec
out
or
sub
cltd
lahf
fcoms
push
push
insb
cltd
loopne
mov
ss
cmp
mov
dec
iret
lods
add
hlt
test
popf
fsubrp
cmpsb
ret
decb
mov
enter
stos
sbb
mov
xchg
in
push
frstor
mov
cmp
aaa
mov
xlat
test
xor
fsubs
fbld
rcl
mov
sub
in
pop
test
test
cli
cmpsl
or
mov
pop
sahf
and
jle
mov
mov
ret
mov
fiaddl
les
hlt
ljmp
aam
push
cmp
sub
mov
inc
std
or
mov
outsl
add
insb
or
xor
aas
and
push
dec
push
loop
jno
rorb
mov
push
sub
xchg
cmp
dec
or
mov
push
aas
movsl
xchg
cmp
call
sysret
je
insl
pop
out
lds
sub
addr16
xchg
or
scas
pop
and
ret
lret
xchg
sbb
cmc
or
dec
mov
adc
iret
ja
sarl
out
xchg
xor
add
mov
ja
ljmp
or
stos
jecxz
scas
dec
cmpb
jno
inc
xor
jle
cmp
add
aam
mov
mov
inc
dec
test
int
rorb
push
mov
inc
enter
popfw
mov
adc
sar
stos
imul
cwtl
bnd
addr16
mov
dec
arpl
mov
std
pop
adc
push
ss
out
mov
cwtl
adc
sub
out
sbb
fwait
cmc
scas
pop
jne
inc
inc
ficompl
pushf
mov
and
or
movsb
stos
push
inc
clc
sub
jecxz
push
adc
mov
or
or
mov
cli
cmc
out
push
jno
xchg
testl
fildl
mov
or
xor
mov
sti
mov
ret
jle
sti
push
ret
imul
mov
mov
dec
mov
fmul
insb
dec
outsl
mov
cli
or
ljmp
xchg
mov
stos
cmp
movsl
iret
shlb
dec
mov
xor
rcrl
test
adc
repz
add
lock
hlt
mov
push
cmp
nop/reserved
test
pop
lods
pop
out
xor
sub
mov
loop
icebp
iret
sbb
addr16
jbe
add
xor
add
cmc
xor
aad
mov
sbb
cmp
sub
rorl
orb
adc
inc
es
mov
das
mov
outsb
mov
lahf
pushf
inc
mov
cmp
popa
mov
cwtl
cmp
xor
pop
cwtl
jecxz
out
mov
pop
mov
lods
adc
out
adc
inc
sbb
mov
sub
sub
out
cli
sbb
or
push
add
cmp
jno
mov
xchg
divb
clc
jo
cmpsl
cld
loop
jecxz
jae
jl
jmp
and
cmp
rorl
ret
pop
inc
ret
ror
mov
into
mov
mov
push
in
pop
ljmp
adc
lret
push
outsl
and
clc
cmpb
int3
mov
cwtl
imul
mov
bound
push
daa
xchg
and
cltd
and
pop
cmpsl
inc
enter
fwait
pop
push
jmp
add
mov
push
or
leave
sbb
bound
pop
cli
es
xor
cmp
push
mov
jne
aas
sub
jecxz
std
lods
inc
das
xlat
mov
repnz
pop
loopne
test
mov
fldt
aaa
mov
scas
popf
mov
mov
dec
nop
sbbl
xchg
or
xchg
dec
adc
mov
or
imul
cmp
cmc
out
outsl
mov
jnp
aam
out
sbb
int
adc
adcl
xchg
adc
sub
lahf
cs
lds
cmp
mov
sbb
loope,pn
sub
test
fisubs
loope
fdivrp
mov
or
sbb
sub
mov
aas
jp
dec
rcr
cmp
lds
push
xchg
and
cmp
jg
mov
jge
ja
lcall
aaa
pop
jne
sti
cwtl
std
push
jno
jg
jne
adc
jo
cld
popf
jmp
dec
mov
repz
jg
jae
lock
fimuls
push
lret
lret
push
push
mov
cmpsl
fwait
loopne
xchg
gs
push
push
js
lret
mov
icebp
ds
dec
in
sub
faddl
sarb
pop
mov
xor
arpl
add
pushf
jp
mov
test
cltd
das
aaa
mov
xchg
mov
xchg
imul
mov
test
dec
push
scas
xchg
rclb
movsl
xor
cmp
add
add
and
xlat
mov
cmp
and
out
jbe
cli
push
test
adc
cmp
imul
fidivrl
add
fwait
mov
stc
out
fs
lods
mov
in
mov
and
and
fiaddl
dec
jo
mov
imul
sub
mov
pop
mov
in
adcl
sub
cmc
rclb
ficompl
or
sarl
out
lahf
push
adc
hlt
push
mov
inc
jmp
cmp
dec
sub
aam
imul
clc
gs
inc
call
xchg
mov
ss
dec
cmpsb
sbb
lcall
adc
mov
ss
pop
stos
and
xor
addr16
outsb
sbb
pop
scas
inc
push
jg
enter
sbb
loop
xor
lods
xor
test
push
inc
aad
jo
insl
push
jnp
popaw
ds
hlt
int
outsb
mov
in
xchg
jno
cs
out
pop
cmpsl
scas
mov
sbb
jae
cmpsb
jl
mov
popa
cs
mov
xchg
mov
shll
push
mov
inc
and
stc
jne
sahf
inc
jo
ljmp
fmuls
push
movsl
and
xor
mov
pop
pop
xchg
into
sahf
imul
data16
fildl
jle
dec
cmp
push
pop
xchg
mov
leave
lcall
mov
push
popf
jecxz
testl
jecxz
outsl
mov
and
mov
sbbb
xor
inc
in
push
movsl
loopne
pop
addr16
scas
pushf
xor
xor
dec
enter
repnz
shlb
popf
jecxz
adcb
push
negb
cmp
xchg
and
xchg
lcall
enter
mov
xchg
test
inc
push
in
stos
dec
dec
es
mov
sub
repnz
push
jle
inc
xchg
and
leave
les
test
mov
lods
mov
stos
cmpsb
out
icebp
lods
jge
inc
jge
fmul
sbb
imul
loopne,pt
push
stos
stc
sub
sub
test
js
xchg
loope
lods
mov
jbe
ds
test
mov
hlt
nop
jl
rclb
ja
jg
xchg
inc
stos
dec
popf
data16
sbb
cmp
into
aad
fs
pop
bound
cmp
call
push
pop
sbb
cmp
scas
popa
rcrb
mov
push
dec
and
add
pop
ja
fdiv
cltd
test
test
or
push
cmpsb
push
mov
sbb
movsb
lcall
mov
cli
jb
iret
add
inc
push
push
mov
flds
or
shlb
ss
movsl
lods
push
mov
jg
mov
nop
xor
cmpsb
fistps
cmp
sbb
pop
clc
call
dec
sub
pop
imul
dec
add
inc
push
push
or
fldt
icebp
jne
fisubl
push
or
mov
jp
jae
adc
cwtl
pusha
movsb
enter
enter
ret
insb
lret
jecxz
loop
imul
in
jmp
mov
lcall
imul
push
notl
fsubrl
jecxz
les
sub
mov
push
movsb
iret
test
add
shl
push
lea
jle
pop
cltd
das
movsl
std
scas
and
outsb
imull
push
stos
jae
aad
xor
xor
add
mov
pop
add
icebp
cmpsb
icebp
adc
jp
jmp
or
sbb
jl
int
fnstenv
addb
push
loope
xchg
push
out
fdiv
and
sbb
mov
out
pop
das
repnz
pop
jl,pn
insl
aaa
push
pop
lock
aad
dec
mov
rcll
cwtl
aas
mov
pop
add
movsl
mov
mov
pop
or
testb
pop
lahf
in
pusha
lcall
pop
stos
xchg
inc
enter
sub
push
mov
shl
insl
push
in
loop
fucomip
out
scas
enter
jb
pop
push
lds
mov
shrb
add
mov
xchg
push
frstor
aas
jg
adc
jecxz
outsl
into
fildll
jne
add
xchg
cs
sahf
xchg
sub
cmpsb
xchg
xor
nop
push
or
fsub
pop
in
jle
pop
dec
out
push
cmp
shr
xchg
inc
lods
fildl
and
dec
xchg
jge
fistpl
xchg
jl
push
fdiv
and
inc
clc
addr16
cli
cmp
mov
xor
add
xorb
sub
in
mov
hlt
xchg
jns
jb
cmp
mov
sbb
mov
ja
outsl
insl
inc
sub
sub
popa
int3
mov
out
push
or
imul
test
sbb
jp
int3
adc
cmp
ja
adc
popf
sbb
xchg
lret
repz
in
pop
xchg
mov
mov
jnp
xchg
les
imull
mov
pop
mov
cmc
outsb
es
out
pop
mov
jno
scas
loop
out
repz
fwait
mov
orb
cmpsb
popf
xchg
js
ljmp
mov
lcall
sbb
mov
mov
pop
lret
nop
ja
movsb
xchg
cmc
xor
jnp
fisttpll
mov
adc
mov
mov
jns
sub
cmp
lock
jmp
lods
stc
inc
xor
xchg
sbb
mov
addr16
in
shr
mov
pop
add
mov
inc
scas
mov
adc
fildll
out
push
sti
jl
pop
stos
dec
test
sub
inc
mov
loopne
cmpsl
movb
or
scas
jmp
add
xchg
adc
and
movsb
cmp
and
into
scas
es
pushl
in
sti
mov
cmp
dec
aas
lret
stos
cmpsl
cs
pop
ss
jnp
sub
sub
fsubrl
xchg
sub
adc
mov
cmp
mov
stc
xchg
xor
andb
cmc
imulb
xor
mov
rorb
mov
shll
xchg
ds
push
push
fs
add
inc
mov
addb
outsl
pop
pop
xchg
outsb
pop
xchg
out
adc
pushf
sub
cmp
mov
lock
mov
aad
and
stc
int
sahf
test
icebp
movsl
and
pop
xchg
enter
cmc
cmc
test
jge
lahf
sub
xchg
sbbb
push
sub
mov
pop
nop
sti
les
daa
nop
inc
mov
out
add
jae
lds
pop
jl
inc
cmp
out
ss
jle
and
xor
jl
xor
push
mov
stos
scas
xchg
pop
jne
sub
cli
ss
jmp
aam
sub
mov
lahf
mov
ja
sub
sub
gs
mov
and
jge
scas
sub
das
mov
jle
pop
ret
sub
xchg
outsb
mov
xor
push
mov
enter
adc
int
inc
lds
mov
push
or
pop
leave
lahf
inc
shlb
adc
iret
sub
cmp
addr16
fidivs
lret
adc
adc
mov
lahf
test
bound
sbb
inc
outsb
fwait
rcrl
imul
insb
imul
pop
lret
mov
inc
dec
cmpsl
clc
test
mov
ja
stos
in
outsb
add
pop
pop
scas
fwait
xor
jg
notb
pop
inc
jo
xchg
fadds
mov
lahf
and
ja
jmp
stos
icebp
loop
lock
pop
es
jmp
negl
sbbb
xor
enter
sub
test
fsubrp
daa
int3
stc
adc
dec
cmc
pop
push
cmp
scas
in
push
ret
or
arpl
arpl
addl
test
ja
test
ljmp
fisubrs
push
enter
inc
loope
pop
xor
imul
pop
in
scas
add
adc
add
cmc
jno
js
inc
hlt
push
std
jnp
mov
adc
cli
push
lret
ljmp
push
mov
mov
lret
fninit
inc
fstps
push
data16
scas
pop
add
subl
xchg
nop
shr
jp
idiv
fs
lret
aas
dec
dec
jo
cmc
inc
or
mov
mov
fists
mov
in
cwtl
orl
dec
push
mov
mov
sbb
imul
dec
inc
sbbl
dec
inc
push
xchg
cmp
insb
outsb
xchg
mov
jle
and
adc
xchg
inc
adc
cmp
subl
pop
stos
inc
int
mov
pop
dec
aaa
in
fisttps
sbb
and
mov
in
incl
fsub
add
sub
sub
pop
adcb
lcall
mov
stos
repz
pusha
inc
subb
lods
xor
cmp
shlb
dec
xchg
rol
jl
jl
cmc
pushl
add
cmp
inc
xchg
mov
adc
aam
rorl
addr16
insb
adc
dec
cmp
jp
pop
push
rolb
jno
xchg
in
cmp
adc
adc
cmpsl
xor
pusha
rcll
mov
stos
mov
push
mull
jbe
inc
ds
shlb
jl
aas
in
add
dec
mov
notl
ja
scas
sbb
sub
xor
mov
sub
dec
iret
cltd
mov
pop
addb
scas
adc
inc
iret
inc
movsl
xchg
push
dec
sbb
scas
ror
cmp
in
cli
leave
test
sti
jmp
push
sbb
in
loopne
inc
jb
mov
dec
stos
aad
lds
clc
and
cmp
xor
dec
loope
cs
cmp
dec
cwtl
out
push
pop
push
or
shlb
in
notb
sub
sub
rcll
push
iret
popa
std
inc
jne
imul
inc
cld
adc
mov
jmp
ljmp
dec
sub
pop
mov
xor
cs
xchg
dec
push
sub
jle
lock
jo
emms
push
sbb
popa
inc
mov
das
mov
mov
cmp
call
pop
jp
jecxz
sahf
mov
lret
and
jle
jne
fld1
mov
push
xchg
mov
lret
es
out
sbb
sarb
mov
add
and
loopne
cmp
or
mov
shlb
insl
sbb
adc
ja
iret
fildll
clc
fisubl
sub
popf
roll
sarb
movsl
or
fcmove
push
in
cmp
jb
push
movsb
xchg
mov
insb
sbbl
nop
arpl
mov
push
jmp
imul
inc
andl
push
pop
shl
int
aad
mov
jge
jno
lods
mov
js
add
pop
jg
test
je
sarl
lahf
and
outsl
sahf
mov
ficoms
subl
dec
cmp
fmuls
xchg
sub
fisubrl
ss
ds
xchg
fs
repnz
or
fstpt
inc
pushf
in
lods
daa
insb
xor
cmpsb
ret
mov
filds
xchg
sarl
jge
jl
shr
hlt
xchg
sbb
xchg
jo
xchg
adc
pop
pushf
bound
mov
in
jb
lock
movsl
jbe
cmp
clc
mov
icebp
cmp
mov
iret
cmp
jbe
ret
xor
hlt
cmp
lds
or
jo
leave
outsl
aad
mov
dec
scas
pop
iret
lods
lret
mov
cmp
jecxz
out
and
push
ds
sbb
xchg
mov
dec
pushl
push
cltd
pop
rep
add
mov
xor
data16
add
mov
mov
mov
aas
jecxz
movsl
and
xor
clc
mov
xchg
out
popa
addr16
sub
sarb
loopne
in
dec
std
insl
xchg
or
jecxz
xlat
mov
mov
inc
test
cmp
adc
adc
adc
daa
std
dec
add
into
fldt
pop
fldl
imul
ljmp
int3
test
cltd
nop
aam
lock
jl
jge
fcompl
je
inc
js
das
dec
cmp
into
cwtl
lahf
fldcw
enter
mov
std
lods
sbb
cwtl
mov
enter
mov
repnz
call
pop
aam
sub
xlat
xchg
jge
mov
xor
aaa
pop
add
scas
adc
mov
add
subl
dec
sbb
inc
stos
inc
dec
test
pop
aaa
int3
jp
cltd
stos
and
push
js
jbe
stos
outsl
cmp
jmp
imul
dec
ficompl
sbb
sbb
pop
mov
mov
mov
jns
les
jnp
loope
fcoml
pop
cwtl
push
andb
test
xorb
stos
push
loopne
push
pop
xlat
sbb
mov
or
jmp
mov
jo
pop
aam
sahf
dec
or
aas
int3
sbb
cmpsl
dec
inc
ss
mov
mov
push
lods
aam
cltd
xchg
pop
push
xor
mov
lods
out
push
inc
out
je
fisubrs
imul
mov
add
shll
or
cmp
ds
push
adc
cmpsl
insb
cmpb
ss
je
out
enter
lock
cmp
stc
adc
cmp
mov
cmp
xchg
dec
dec
cld
lret
jbe
push
mov
stc
and
test
mov
xchg
sbb
push
in
sbb
adc
xchg
mov
sbb
sbb
push
xor
shrl
outsl
addr16
js
pop
push
push
aas
fdivrs
jo
push
inc
mov
movsl
dec
or
adc
cmp
push
sar
dec
arpl
push
mov
xchg
fwait
dec
pop
lret
mov
jo
dec
out
jp
or
cld
aaa
fcomps
out
dec
sub
aad
popf
dec
mov
add
xchg
sub
mov
mov
dec
ret
mov
jmp
cmp
test
cld
xlat
dec
sti
pop
jecxz
or
popf
xor
fsts
iret
rcrl
mov
adcl
xchg
das
jg
not
loopne
mov
clc
push
iret
mov
mov
sub
cmp
jae
scas
aas
xor
cmp
cmp
pop
outsb
mov
sbb
xor
pop
dec
in
lock
mov
inc
pop
out
lods
hlt
stc
pop
fwait
inc
fmuls
loop
mov
cmp
add
or
hlt
sbb
sbb
cmpsl
push
sarl
push
push
pop
xchg
sarl
adc
push
ljmp
push
cmp
mov
sub
mov
aam
fnstenv
and
cmpb
repz
jae
and
shll
push
inc
cmp
imul
popf
xchg
xlat
jae
call
test
mov
cmp
test
std
shl
sbb
jno
cmp
pop
inc
adc
jne
jnp
push
idiv
jne
pop
addr16
and
andl
add
into
in
out
arpl
std
pushf
iret
test
mov
stos
push
mov
jle
cld
pop
sub
rolb
mov
mov
movsb
clc
xchg
fdivs
insb
test
push
mov
data16
pop
pop
in
test
movb
nop
sub
jecxz
and
neg
jge
mov
stos
icebp
mov
push
jnp
out
jo
jmp
nop
dec
adcb
mov
bnd
out
les
mov
cmp
sahf
cmp
clc
xor
or
inc
and
cs
out
mov
push
jnp
push
dec
xchg
jne
orb
jp
jb
ds
adc
sbb
mov
inc
nop
push
icebp
stc
enter
enter
ja
add
add
vmptrld
mov
dec
xor
cltd
int3
mov
lds
mov
ja
movsb
push
movsb
jb
or
sub
nop
fwait
cmc
aad
mov
cwtl
movsl
in
cwtl
push
loopne
cmp
mov
bound
inc
lods
jb
sub
sbb
fs
add
shr
int3
xor
mov
mov
scas
in
rcrb
lret
or
outsb
aam
hlt
mov
pop
fucomi
add
sahf
adc
inc
leave
inc
inc
popa
push
sub
xlat
loope
fdivs
popf
xchg
inc
sub
adc
xor
pushf
mov
cmp
xchg
outsl
xchg
mov
push
addr16
xor
incl
add
or
cmpsb
ja
mov
mov
leave
mov
ret
push
dec
add
pop
es
loope
mov
pop
call
insl
xor
mov
or
mov
ror
lahf
fstl
hlt
les
fnstsw
loop
xor
test
xchg
fwait
mov
add
jne
dec
bound
mov
xchg
cld
add
outsb
enter
gs
out
stos
xor
bound
es
push
adc
fcmovne
rcr
xchg
fcoms
pop
lahf
dec
pop
add
fs
out
sub
mov
addr16
push
dec
pop
sub
outsl
aas
cmp
mov
pxor
cmp
hlt
jg
pop
lcall
cmp
push
std
pop
xor
adc
test
jbe
cmpsb
std
push
filds
fcompl
mov
cmp
sti
push
ror
and
push
and
xor
and
mov
inc
cmovo
int
cli
dec
xchg
mov
sub
aas
and
jns
das
lcall
lahf
dec
in
mov
std
pop
pop
sbb
int3
add
mov
data16
adc
pop
outsl
mov
mov
push
xchg
loopne
mov
jmp
jo
imul
adc
mul
mov
mov
movsl
dec
mov
movb
xchg
insb
mov
popf
add
and
js
push
pop
mov
jl
pop
jb
int3
push
cmpsl
xor
aad
lcall
fcmovu
xor
adc
xchg
test
dec
js
lsl
subl
xchg
shl
add
mov
pop
ja
push
stos
push
xchg
xchg
or
dec
imul
xor
gs
mov
adc
inc
rorl
xchg
gs
jno
insb
imul
ljmp
rcrb
cltd
rclb
imul
mov
push
aas
jbe
aad
ss
cmc
rcll
or
fwait
cmp
pop
fldlg2
mov
cltd
popf
jns
add
xor
or
jmp
mov
push
mov
pop
ret
jne
out
cs
jbe
pcmpeqw
leave
mov
mov
cmp
inc
fcmovnu
in
mov
xchg
jns
push
idiv
add
and
scas
inc
pop
rcll
sbb
es
sub
nop
inc
lods
add
dec
or
sub
add
fstps
aas
or
insb
movsb
lcall
sub
imul
or
mov
cmp
mov
push
mov
pop
loop
and
xchg
repnz
repnz
imul
stos
push
pop
push
test
pop
aad
fisubrl
pop
xchg
stos
insl
cli
push
ret
sub
sbb
and
cs
push
test
mov
add
push
adc
fisubs
jle
mov
pop
outsb
repnz
das
jmp
or
push
add
sub
xchg
nop
dec
bound
add
mov
jmp
in
fisubrl
cld
jne
pushf
xor
and
hlt
inc
pop
leave
cld
xor
mov
inc
cltd
hlt
into
lret
roll
pop
cmc
xchg
pop
jo
push
fwait
mov
jle
cmc
pop
mov
pop
push
cmp
nop
push
lds
inc
stos
int
gs
test
xor
and
aas
test
add
pop
cs
inc
cwtl
jae
jecxz
adc
cmp
ja
imul
test
test
mov
xchg
pop
mov
inc
in
cmp
dec
pop
or
add
stos
pop
jne
shl
enter
roll
pop
in
jmp
lds
mov
sarb
xchg
ja
pop
xchg
aam
push
fistl
fistl
or
ljmp
fbld
in
loopne
cmpb
das
pop
fildl
dec
mov
jp
ljmp
push
rcrb
jl
pop
test
pop
addb
sarl
inc
jmp
in
cmc
dec
mov
in
mov
pop
fnstsw
out
mov
mov
cmp
xchg
inc
inc
cmp
sub
rcrl
das
inc
sbb
push
mov
rolb
push
cld
aas
fld
push
jmp
subl
mov
fimuls
inc
ret
inc
rcr
gs
in
stos
rcrb
pop
sbb
xchg
sahf
mov
push
cmp
mov
or
jp
bound
hlt
movb
loope
and
push
orl
in
mov
sti
imul
mov
mov
mov
subb
ret
inc
sub
pop
inc
subl
lret
cmp
push
fwait
mov
ror
jo
pop
mov
push
mov
pop
sbb
cmpb
add
mov
push
inc
mov
mov
add
js
ficoms
jns
lock
inc
pop
es
mov
das
sub
mov
cltd
pop
hlt
rcll
in
sbb
cwtl
inc
jnp
fsubl
jmp
pushf
jae
nop
pop
pop
arpl
add
xor
aaa
dec
pushf
jle
test
mov
mov
pop
inc
movsb
fidivrs
sbb
imul
cmp
cmpsl
enter
fsubl
fwait
insl
ljmp
cmpsb
xchg
cmp
arpl
add
jae
add
mov
and
push
push
loopne
popa
pop
in
push
in
inc
dec
ds
das
cmp
and
mov
sti
pop
inc
jno
add
jecxz
adc
mov
iret
jb
jmp
addl
movntps
cmp
aaa
jo
shlb
push
bound
rcll
aas
imul
incb
dec
out
repz
inc
push
adc
pop
jbe
mov
sub
leave
sub
lcall
std
xchg
and
repz
popa
jecxz
stos
push
shlb
rcll
inc
add
or
int
icebp
mov
adc
pop
and
lea
sub
xor
cmpsl
or
push
inc
cs
push
xor
adc
or
pushf
ds
lods
mov
add
adc
lahf
lahf
and
sub
sub
pusha
lods
and
mov
dec
mov
or
pop
divl
push
cmpsl
out
inc
mov
fisttpll
loop
js
and
std
inc
lock
mov
cli
adc
lea
sub
or
jne
push
je
out
mov
or
fidivs
ds
clc
dec
movsb
pop
daa
mov
inc
pushl
pop
movsl
cmp
sbb
sub
adc
jg
cmpb
mov
popa
jno
xor
jns
adc
data16
subl
xchg
shlb
das
es
aaa
mov
mov
lcall
xor
fwait
cmp
shll
sarl
rorb
sbb
test
xchg
sbb
pop
rcrl
fsubrl
pop
adc
cmp
mov
push
stos
and
pushl
inc
ja
xorb
cmp
mov
or
jae
mov
rolb
mov
mov
xchg
mov
pop
stos
das
mov
inc
xchg
dec
adc
shll
and
cli
popl
std
out
xor
pop
pop
add
mov
jns
xlat
pop
xchg
lret
jg
push
mov
ror
js
arpl
mov
jl
stos
inc
xchg
ds
inc
insl
std
adc
lods
add
dec
xor
enter
pop
lock
mov
ds
mov
mov
pop
sub
mov
jbe
mov
mov
push
sub
dec
push
lds
fwait
mov
add
leave
cmp
loop
mov
jne
arpl
mov
jne
and
int
pop
test
sub
jns
mov
sbb
and
shrb
dec
mov
scas
or
xor
sub
pusha
aas
dec
iret
push
push
and
xchg
or
scas
or
push
push
les
nop
aad
or
ja
dec
sahf
mov
mov
pop
in
fcmovnbe
push
jg
pop
adc
cwtl
fldl
or
cmpsl
inc
push
in
jno
pop
js
aas
add
push
hlt
or
gs
mov
push
pop
cmp
cwtl
cwtl
mov
ljmp
aaa
cwtl
or
mov
in
adc
mov
sub
pop
pop
repz
shr
lds
mov
xlat
xchg
cmc
pusha
iret
xor
pop
mov
ds
std
int
xor
cmp
das
fwait
mov
push
out
ljmp
adc
test
negl
inc
imul
out
push
daa
mov
arpl
das
testl
sbb
fcoml
inc
call
mov
pop
lret
sub
mov
mov
jg
adc
pop
stos
dec
cmc
xor
pop
rep
std
sub
dec
mov
or
pushf
jnp
dec
xor
cmp
int3
mov
cld
dec
dec
jb
jns
mov
iret
fucomp
cmc
jne
sbb
xor
add
adc
xchg
mov
pop
sub
psubsw
loopne
jp
div
jns
pop
and
lods
pop
lahf
adc
orb
dec
insb
aaa
add
loope
je
sub
mov
pop
out
mov
idivl
pop
sub
jb
push
movb
cmp
push
inc
cwtl
icebp
push
push
jno
out
bound
lcall
lods
outsl
mov
xchg
adc
jno
xor
push
cltd
ja
mov
insl
ljmp
insb
pop
int3
fstpt
push
mov
int
popf
repnz
or
adc
out
inc
pop
sbb
out
pop
sub
push
int
shr
fsubs
fimuls
and
andb
mov
sbb
lea
aaa
jbe
fldcw
mov
out
sbb
and
aam
and
push
shrb
xor
fnstenv
sub
mov
sub
inc
jmp
push
inc
cmp
sbb
in
fs
xor
pop
pop
or
int
shrl
pop
out
pop
fs
push
and
xchg
push
fidivrl
insb
ljmp
jns
sub
sbb
or
add
aad
xor
add
mov
inc
jb
adc
or
sub
in
push
movsb
xor
addr16
adc
add
loop
pusha
sbb
cmc
repnz
fwait
cwtl
mov
xchg
lret
cmp
mov
insb
mov
or
xor
mov
repnz
fisubrl
xorb
mov
scas
imul
cmc
jns
dec
dec
lret
inc
push
adc
mov
xchg
mov
out
mov
mov
imul
xor
jne
mov
arpl
out
and
dec
xchg
pop
into
adc
lds
pop
imul
jle
pop
popf
xor
dec
inc
outsl
test
call
ret
sbb
inc
add
fldcw
lea
add
loopne
fisubrl
adcl
dec
sbb
ljmp
fnstsw
in
outsl
adc
cmp
xor
out
and
das
push
imul
test
fmull
fildl
ret
ss
loop
xchg
sub
mov
das
push
in
dec
add
outsb
lds
call
out
outsb
xor
mov
pop
add
je
sbb
mov
cmc
sahf
in
fidivrl
scas
in
jne
hlt
xlat
add
push
out
dec
xchg
enter
cmp
push
push
loopne
jmp
inc
lahf
dec
push
leave
pusha
aas
out
xor
in
lret
sbb
adc
fcomi
es
mov
cmp
in
add
mov
aas
imul
add
out
imul
aam
sub
call
xor
daa
cmp
rorb
insb
mov
pop
push
mov
add
add
scas
imul
mov
or
aad
pop
je
push
push
mov
jbe
sti
jbe
pop
scas
mov
daa
xor
add
aad
add
mov
shlb
nop
addb
add
clc
push
xorb
mov
lds
lds
cmpsl
aaa
lret
stos
xchg
rorb
rorb
push
pop
mov
xchg
sahf
cmp
icebp
add
push
and
or
and
xchg
popf
movsl
sub
fimull
outsl
mov
imul
pop
dec
mov
je
insl
gs
into
fadd
orl
xchg
nop
pop
lds
sti
fwait
or
push
je
sbb
jmp
or
push
das
scas
fildl
iret
jecxz
mov
stos
inc
and
pop
pop
and
es
add
sarl
enter
mov
cmpsb
mov
mov
out
dec
mov
mov
push
dec
andb
sarb
out
out
mov
dec
adc
stc
test
cmp
jle
addr16
orl
and
adc
cmp
fisubrs
lahf
add
daa
lods
or
repz
daa
push
sbb
adc
inc
mov
add
inc
inc
jecxz
xchg
out
es
fisttpll
or
dec
mov
outsl
icebp
adc
cmp
call
sahf
push
mov
mov
daa
or
rolb
xchg
sub
lahf
xchg
sbb
cwtl
in
or
shlb
jb
sub
mov
push
in
movsl
cmp
call
stc
pop
push
inc
cli
sbb
mov
jle
ja
sub
cmp
xchg
jmp
rcr
sahf
lcall
adc
test
push
cld
stos
sbb
mov
adc
in
lret
jne
push
cwtl
inc
lods
dec
and
pop
mov
out
aad
xchg
jge
fildl
pop
test
pop
push
sub
mov
jge
pop
fnstenv
mov
sub
cmpsl
jae
arpl
mov
outsb
xor
imull
adc
in
adc
cmc
mov
and
add
xor
mov
xor
lret
fisubrs
movsl
or
mov
jb
cmp
push
dec
lods
cmp
in
adc
sub
mov
pop
test
shlb
and
push
cwtl
push
outsl
inc
fistl
jle
in
or
fs
mov
out
cmc
pop
fbstp
xorl
mov
jo
daa
adc
xchg
jl
mov
mov
icebp
mov
cmp
ret
add
stc
jecxz
out
xorb
lods
bound
pop
je
jle
cmp
xor
arpl
add
mov
xor
imul
shll
and
test
movsb
outsl
fwait
pop
adcb
mov
or
outsl
roll
mov
out
mov
inc
fiadds
cld
aad
dec
sub
cmp
push
xchg
adc
and
xor
adc
pusha
lcall
mov
loop
add
cwtl
cmc
add
inc
subl
dec
out
sbb
fcomps
fnstenv
fidivs
sbb
in
sbb
aaa
fisttps
mov
cld
jp
pop
push
repz
stc
or
out
mov
mov
pop
in
mov
ret
dec
pusha
ja
adc
inc
mov
and
mov
movsl
lods
xchg
and
jns
loop
mov
sbb
add
inc
data16
sub
stos
push
cmp
movsl
jne
push
in
ds
test
imul
aas
loop
adc
sbb
fmuls
push
loope
push
mov
js
sub
imul
sub
and
aas
mov
paddusb
iret
xchg
jle
loope
add
mov
adc
pop
jg
mov
fisubrl
dec
rcl
sub
cli
leave
push
ja
pusha
and
leave
ret
xor
outsl
sbbl
stc
ja
ret
sahf
fsubrs
test
std
lahf
adc
rorb
dec
cmpsl
ja
dec
ret
inc
mov
xchg
into
loopne
lcall
lea
enter
inc
cmp
jge
test
mov
testl
sub
xchg
xor
xor
pop
adc
decb
sbb
pop
fcoms
cmp
add
sbb
mov
jmp
jae
push
popa
ud0
jnp
jno
push
jge
pop
shlb
lret
jecxz
stos
scas
sbb
lock
scas
inc
adc
push
xlat
int
mov
jns
pop
lcall
push
scas
mov
pop
add
and
and
push
hlt
or
mov
jecxz
clc
arpl
xchg
mov
mov
lahf
lock
push
je
popa
or
cmc
neg
test
pop
int3
sbb
clc
je
flds
sti
and
stc
xor
dec
jo
pop
jecxz
testb
fnstcw
jecxz
int3
aaa
lds
fisttpl
mov
mov
test
sub
lret
es
out
imul
rcrl
jle
lock
jns
cmp
std
inc
dec
inc
lds
dec
in
shll
add
push
insb
leave
popa
fldl
mov
xchg
mov
push
loop
xchg
sbb
pop
pop
add
inc
mov
adc
movsl
xchg
jp
lods
shrb
add
xchg
test
repnz
imul
subb
xchg
jle
add
jmp
or
into
adc
mov
xchg
mov
adc
adc
or
push
jg
dec
shrl
mov
aaa
jbe
mov
or
sbb
lods
inc
int3
loope
or
out
das
push
jns
add
int
sub
mov
mov
or
shlb
sub
cmp
or
test
adc
or
mov
ljmp
lock
or
mov
pop
push
fs
je
sbb
cmpsb
nop
or
and
dec
cli
and
adc
out
jge
mov
sbbl
movsl
mov
fstpt
mov
test
cmc
div
arpl
pop
pop
int
jl
push
cmp
adc
popa
mov
pop
inc
insl
scas
arpl
fcmovnb
call
cs
lret
mov
push
jno
mov
mov
incb
ja
subps
xchg
pop
xchg
cmp
mov
and
out
outsb
cmpsb
cmpsl
shrl
jb
mov
data16
mov
and
pop
gs
sbb
jmp
xchg
idivb
jmp
cmp
mov
sub
lds
push
sub
notl
mov
dec
add
and
sete
cmp
lea
dec
cmp
fmul
inc
xchg
in
xchg
in
adc
inc
adc
aad
fiaddl
je
mov
push
cmpsl
mov
mov
loope
rolb
cmpb
dec
aad
leave
cltd
cmp
lods
int3
add
cmp
pusha
add
mov
outsl
sti
test
and
sub
loope
loope
dec
call
cmp
js
aam
lret
push
pop
cmc
xor
test
add
sahf
lock
cmp
cmp
push
loope
and
aam
rclb
jno
push
adc
lret
add
sub
stos
adcb
jecxz
sbb
movsb
xlat
dec
xor
pop
inc
or
adc
setnp
jl
addb
sbb
jnp
addr16
xor
in
mov
out
rorb
arpl
stos
xchg
divl
or
mov
popa
cmpsb
outsl
lods
dec
sub
sub
or
fsubrl
push
xchg
mov
dec
sub
mov
xor
out
js
push
sub
pop
sub
repz
xlat
sbb
jbe
bound
and
or
jbe
not
xor
sbb
and
lods
insb
aam
lods
pop
insb
lock
mov
dec
in
repnz
scas
and
cwtl
or
je
hlt
push
fistpl
add
test
sub
loope
mov
mov
insl
adc
sbb
sub
dec
dec
xchg
and
jmp
push
xor
jmp
scas
into
sgdtl
dec
lods
push
inc
loopne
enter
cs
pop
imul
sahf
and
xchg
inc
xor
pop
idivb
int3
arpl
push
addr16
daa
sarb
sub
loop
adc
pop
cmp
ficoml
pop
xor
jge
mov
sbb
inc
mov
lcall
sarl
insb
leave
push
or
mov
push
mov
pop
jbe
int3
scas
pop
push
dec
and
inc
mov
shlb
xor
aam
lret
add
mov
jo
pop
mov
or
sub
das
fcompl
loop
lods
movsb
adc
cmpsl
jmp
xor
cli
pop
push
out
mov
jmp
es
js
pop
je
in
mov
cs
loop
ret
iret
jns
jns
or
add
cmp
mov
mov
ljmp
and
jae
xchg
mov
jmp
cmp
rorb
inc
adc
push
call
imul
jp
mov
xacquire
in
add
xchg
cmp
roll
xor
insb
gs
jmp
fdivl
and
lods
lods
inc
inc
add
mov
int
push
xchg
push
adc
sbb
xor
jg
pop
mov
es
lea
inc
cmpsl
adc
jmp
xor
xchg
cs
loop
mov
int
inc
test
cmp
int
clc
pop
cld
fidivrl
xor
arpl
subl
and
xchg
inc
orl
pop
or
aam
inc
scas
push
mov
test
mov
shlb
sti
sbb
and
inc
clc
ss
and
cmp
bound
pop
cli
jno
mov
fsubs
subb
das
fildl
sarl
jno
pop
mov
xchg
aam
inc
pmuludq
mov
mov
adc
roll
call
cli
sub
in
jp
cmp
insb
cwtl
movsb
aaa
sbb
push
rolb
fcomps
push
scas
xchg
stos
cmpsb
enter
mov
aam
test
inc
enter
mov
ds
outsl
cld
lock
or
jbe
arpl
shlb
cmp
jg
mov
pop
iret
sbbb
inc
adc
sbb
xchg
mov
roll
data16
mov
fimuls
aaa
adc
jl
pop
mov
aad
cmp
sbb
loope
lods
sub
sbb
xchg
cmp
add
mov
mov
adc
int3
pop
ret
movsb
imul
imul
cmpl
pop
pop
outsb
fistps
add
jbe
jnp
push
push
sbb
jnp
rorb
lds
sarb
and
test
dec
sub
inc
lahf
cmp
sbb
in
insb
xchg
xchg
cmp
pop
jmp
dec
mov
cld
push
in
jge
sbb
popa
clc
jle
bound
push
loop
push
push
xchg
sub
aas
mov
test
sbb
pop
lea
cs
repz
mov
pop
jae
adc
xchg
cs
jecxz
xchg
adc
pusha
lock
repz
rorl
fwait
pop
fistpl
cmp
flds
int
adc
sub
cs
xorl
push
in
mov
pop
in
xchg
fisubrl
shll
adc
enter
lock
sub
stos
aam
mov
mov
or
subb
dec
cmp
pop
pop
pop
cmp
pusha
xchg
cmpl
iret
int3
cmp
fisubrs
insb
mov
mov
test
sbb
push
mov
inc
fwait
imul
cld
xchg
dec
fnstsw
xor
out
dec
fnstcw
inc
pop
xor
mov
cmp
daa
testb
fsub
sbb
lcall
jg
jae
arpl
out
xchg
rorl
popf
pop
sub
jae
push
mov
xchg
or
jbe
loop
sbb
nop
cmpps
aam
inc
xchg
int3
sbb
or
enter
nop
ss
daa
cld
imul
dec
fcoml
stc
shll
fnsave
addb
inc
cmp
push
out
test
es
std
push
push
mov
add
and
mov
pop
push
iret
mov
adc
sbb
lock
test
xchg
aam
mov
out
arpl
dec
popf
jl
sub
iret
leave
enter
sbb
add
push
movsl
dec
push
imul
sbb
out
lcall
lahf
xchg
leave
into
sbb
dec
push
jmp
call
pop
sbb
sub
fldl
jno
test
mov
jmp
cmpsl
mov
pop
arpl
in
sub
ljmp
cwtl
ss
out
ds
xchg
xor
push
mov
jge
fsubr
xor
mov
flds
mov
sbb
lods
mov
in
cmp
imul
fcompl
sarl
test
push
cmp
inc
pop
les
sbb
adc
orl
mov
push
xor
insb
repnz
xlat
shr
jp
clc
arpl
pushf
test
sub
test
mov
sbb
xlat
or
push
cmpsb
rorl
negb
pushf
fiadds
push
jle
mov
sub
mov
dec
jp
testl
repnz
sub
popa
insb
pop
mov
lea
adc
jle
cs
mov
adc
lds
xor
mov
sahf
adc
clc
dec
into
xchg
aam
inc
lock
pop
insb
mov
inc
and
subb
test
fcoml
nop
cmp
sar
push
pop
mov
push
aaa
dec
and
push
bound
imul
inc
xchg
out
sub
pushf
jp
shlb
fsubl
shrl
or
sub
sqrtps
cli
imul
mov
pop
dec
jo
ja
xchg
pop
lret
adc
dec
fsubrs
inc
adc
push
and
out
daa
sbb
xor
sbb
clc
lds
mov
mov
mov
shrb
xchg
push
outsl
ja
sub
bound
out
mov
fwait
loopne
sbbl
dec
jnp
stos
jae
or
dec
leave
inc
dec
jne
xor
jp
testb
aad
pop
jns
inc
xor
call
dec
adc
loopne
mov
and
cs
and
pop
add
push
in
pop
aaa
icebp
cmc
stc
mov
push
push
jp
adc
rcrl
inc
push
adc
adc
xchg
pop
loopne
addr16
mov
xchg
mov
jle
xlat
into
outsb
lds
fsubrp
lea
js
xor
in
cld
and
shr
xchg
push
mov
pop
out
scas
fdivr
repz
pop
mov
mov
pop
dec
aas
adc
mov
loope
add
lret
les
and
or
rcl
pop
int
out
cmp
sbb
imul
pop
shl
mov
pop
cmp
popa
ss
cmp
scas
sub
scas
sbb
in
daa
mov
xchg
rol
call
dec
sbb
or
mov
in
pop
iret
inc
mov
es
jnp
mov
and
lcall
enter
aaa
lock
cmp
test
ficoms
and
iret
cmp
jl
mov
imul
dec
xchg
mov
sub
shll
sbb
stos
fcom
aas
and
lds
lds
push
cld
xor
xchg
imul
insb
cmpsb
test
cmpsb
imulb
and
fimull
shr
and
test
iret
ss
cltd
or
or
xchg
add
ss
dec
push
lods
in
loope
nop
jnp
insl
addr16
dec
jg
sbb
dec
jb
adc
mov
and
cmc
lds
xchg
push
out
push
jns
mov
mov
xor
dec
sti
mov
sahf
and
roll
xchg
in
mov
sti
xorb
lret
aaa
ljmp
dec
jmp
cmp
pop
or
imul
jbe
xchg
jg
lds
dec
xor
lock
inc
sbb
dec
dec
call
jecxz
sahf
cltd
test
pop
ficoml
push
cmc
loope
xor
mov
xor
clts
std
pop
cltd
jns
ret
icebp
dec
xor
subb
movsb
mov
adc
jle
push
ret
add
add
mov
cmp
adc
cmc
int3
mov
or
test
xor
or
into
and
push
rol
cmpsb
aad
sti
ds
jnp
pop
cmp
mov
enter
cmp
xor
les
test
push
fbstp
mov
jnp
mov
jb
enter
adc
mov
test
jns
and
test
call
mov
fdivl
and
popf
ret
inc
daa
mov
mov
cmp
movsl
popa
mov
or
xor
add
icebp
aas
shl
mov
iret
mov
cli
ljmp
aas
add
mov
int
aas
lea
fiadds
mov
clc
sub
lock
push
sub
inc
mov
cmp
mov
dec
xorl
lds
adc
lea
sbb
or
or
mov
cli
roll
scas
rcrb
mov
dec
div
xchg
imul
mov
xchg
in
pop
adcb
jno
mov
rcrb
and
jg
mov
fidivl
stos
xor
jecxz
xor
in
ss
sar
fidivrs
cmp
loope
cmp
cld
mov
les
fwait
and
pop
jecxz
dec
inc
lea
call
mov
mov
mov
roll
sub
ret
stc
gs
cli
pop
es
inc
xchg
mov
adc
aas
lods
push
addb
shrb
push
pop
mov
test
lret
pushf
ss
and
es
adc
and
hlt
and
ret
mov
pop
out
cmp
aaa
jae
jnp
xchg
pop
mov
das
cmp
jo
scas
dec
cli
xlat
bound
jno
rcrl
sub
xchg
cwtl
fstpt
rep
fstpl
push
xchg
lea
mov
push
push
cmp
jns
push
pop
dec
ret
xor
jno
outsl
lcall
xchg
pop
outsl
clc
adc
sti
push
js
pushf
outsb
aad
dec
or
push
lcall
push
mov
adc
mov
dec
add
push
jbe
sub
jns
xor
push
test
stc
add
bound
adc
dec
idiv
scas
loop
lods
push
in
pop
mov
negl
or
ds
jmp
fcomip
shll
in
imul
jmp
repnz
xor
test
aas
xorl
or
cmc
stos
pop
mov
add
mov
and
sahf
roll
mov
imul
dec
dec
mov
xchg
xor
pop
out
mov
in
jmp
fs
dec
adc
add
mov
mov
and
xor
dec
aas
loope
repz
test
cmpsb
testl
out
clc
fmull
popf
xor
cmp
sbb
jle
popa
mov
aam
in
inc
and
and
xor
jecxz
insl
fcom
cmpsb
aaa
stos
mov
lret
sub
cmpsl
xlat
fidivrs
jecxz
add
cmp
ss
push
imul
xchg
rep
out
and
sbb
adc
in
and
pop
xlat
xchg
pop
gs
mov
faddp
xchg
mov
mov
movsb
inc
inc
stos
js
lahf
add
mov
adc
xor
ljmp
pop
add
stos
mov
pop
test
rolb
mov
push
dec
push
pop
clc
cmp
es
inc
xchg
lds
fsubs
jg
orb
push
cmp
jp
push
xor
loope
call
aam
lods
add
js
and
push
ja
lahf
pop
aaa
jb
outsb
pop
leave
mov
fsubrl
das
jecxz
pop
dec
sbb
outsb
cmpsb
cmp
lock
pop
js
pop
push
adc
add
mov
inc
sbb
pusha
and
mov
push
fs
fidivs
mov
in
push
xorb
sbb
lds
lahf
or
cs
xchg
sbb
stc
rcll
test
fs
aam
rcll
push
jne
cld
insb
xor
mov
jae
adc
xor
mov
lock
insl
sub
xor
cmpl
adc
dec
jnp
idivb
adc
bound
mov
add
mov
jb
inc
loop
xchg
xchg
cmc
mov
cmpsb
sbb
mov
mov
scas
xchg
sbb
cmpsb
loope
jo
lahf
xchg
imul
repnz
push
push
mov
and
loopne
fmuls
push
cmp
pushf
out
fs
cmp
icebp
sub
dec
mov
and
pop
push
ja
adc
add
arpl
mov
sub
fdivl
fstpt
push
lds
pop
xchg
popf
sbb
cmp
and
mov
add
push
jmp
cmp
das
icebp
sti
mov
adc
xor
or
sub
push
jb
mov
gs
jno
stos
loopne
mov
mov
repnz
jmp
insl
pop
sbb
adc
iret
scas
xchg
test
cmp
lods
pop
or
mov
pop
adc
cld
mov
in
dec
loop
jle
xor
std
lock
lret
movsl
shll
iret
cmp
mov
sub
sub
sub
fidivrs
sub
stos
jle
adcb
dec
fldcw
jns
push
xor
out
jg
jg
pop
lret
sar
jge
pop
pop
jp
or
in
fcmovnbe
xor
into
sub
fbstp
out
xchg
cmc
mov
sbb
pop
jnp
mov
mov
sub
sub
mov
mov
je
sahf
add
lret
jo
in
imul
pop
nop
mov
cmc
insb
push
sbb
ss
jg
add
int
out
ret
cmpsl
test
pop
jmp
loop
lock
mov
or
pop
stos
pop
xlat
sub
mov
sti
cmp
pop
repnz
xchg
fnsave
sbb
insb
xor
jle
aas
outsl
int
ljmp
cmpb
mov
mov
inc
push
jb
mov
movsl
inc
mov
ljmp
test
pusha
cmpsb
mov
cli
movsl
mov
add
dec
loopne
int3
cli
add
xchg
cmp
jne
and
mov
push
xor
dec
js
cmp
mov
mov
mov
ss
sub
pop
cmp
add
jb
mov
ljmp
dec
imul
das
fnsave
cli
ret
lret
mov
cwtl
ja
test
lods
push
jne
cli
xor
sub
xor
cmove
cltd
div
in
adc
fs
fildll
and
inc
sub
add
jge
leave
cmp
int3
inc
jb
mov
inc
in
and
clc
lock
ja
mov
add
lods
sbb
ret
rcll
adc
adc
sub
adc
sbb
add
jle
data16
mov
pushf
int3
addr16
out
push
out
sub
inc
in
sbb
xor
and
lret
call
or
cs
add
xchg
adcb
out
cmp
sub
cli
mov
lods
mov
mov
shrl
dec
jns
out
mov
lea
dec
imul
sbb
jnp
js
jle
es
inc
pop
insb
mov
jae
add
sub
fwait
jno
jbe
pop
mov
daa
mov
xchg
adc
and
xchg
aam
dec
mov
mov
lods
cwtl
mov
jp
cmp
push
xor
push
test
lods
xchg
mov
ja
sbb
pop
push
mov
push
ret
imulb
push
xchg
aam
enter
mov
mov
xor
iret
ret
leave
cmova
mov
push
xchg
inc
imulb
pop
xchg
adcb
arpl
loop
lea
gs
outsl
outsb
rol
xchg
dec
sub
sub
nop
repnz
jne
mov
scas
lcall
inc
cmp
es
mov
add
repz
fists
bound
or
into
cwtl
push
sub
sub
push
insl
add
cmp
lds
adc
mov
fldcw
and
mov
xchg
test
xchg
xchg
stc
mov
ds
or
movsl
adc
xor
pushf
in
shrb
xor
pusha
fsubs
js
sbb
stos
inc
fstpl
dec
test
and
fldl
dec
pop
push
sub
add
lock
imul
movsb
mov
add
dec
sbb
dec
cmp
mov
lcall
and
push
mov
pusha
xor
push
das
std
movsl
mov
inc
lods
int
lret
pop
test
jno
leave
jp
pop
inc
popa
jge
aad
fisttps
push
xor
popa
loope
dec
pcmpeqw
or
jle
push
fldt
jnp
mov
jge
cwtl
xchg
data16
cmp
lret
sbb
or
dec
jns
rclb
inc
cld
sarb
push
test
ss
mov
push
or
push
arpl
loope
add
sbb
aaa
pop
xchg
add
inc
daa
cmc
rolb
lods
jmp
sbb
xchg
movsb
xor
jg
cmp
pop
cmpsl
in
insl
add
xlat
pop
popa
arpl
and
sub
add
xor
push
imul
cmc
lds
mov
sub
or
sti
xor
popf
scas
and
push
xchg
mov
lds
sbb
cmp
pop
rolb
outsb
fcmovnb
jp
stc
insl
outsb
xchg
pushw
lods
add
mov
dec
repz
iret
and
cmp
or
in
popa
ja
xchg
out
cmpsb
adc
mov
shr
and
add
fs
mov
or
aam
jmp
pop
jne
cmp
repnz
jno
push
or
stos
adc
mov
push
add
add
ficomps
je
ret
mov
adc
inc
enter
js
out
inc
mov
inc
mov
daa
mov
mov
sub
ds
xchg
out
mov
mov
add
adc
inc
xchg
or
pop
jg
or
fwait
iret
mov
outsl
loop
mov
pop
sbb
cmp
mov
lock
insb
or
sub
pushf
inc
or
cwtl
cmp
int3
sbb
ret
and
mov
test
cmpsl
jns
xor
sti
jbe
mov
add
shl
sub
fdivrs
cmp
push
shll
aad
shl
shrl
inc
arpl
sbb
or
jb
popa
add
mov
call
sbb
xchg
xchg
add
movsl
les
ret
sub
mov
test
daa
pop
fsubrs
sub
mov
jb
out
je
popf
jl
or
insb
dec
nop
dec
into
out
cmp
or
leave
fiadds
ficoms
mov
lds
gs
adc
nop
fistl
push
stos
fistpl
hlt
mov
mov
fists
cmp
push
andb
cmp
scas
mov
stos
jae
push
mov
arpl
cmp
mov
out
test
in
inc
xor
mov
push
outsl
mov
lods
sbb
pushf
mov
pop
jge
cli
mov
ret
push
shlb
bound
xchg
arpl
push
adc
jmp
lds
inc
and
test
pop
xor
pop
repz
add
xchg
fimuls
das
outsl
jle
mov
adc
pop
jbe
mov
or
into
sub
loopne
mov
add
filds
lock
add
and
iret
mov
pushf
push
jne
adc
test
push
mov
stos
xor
cmp
ror
loop
jnp
add
xchg
mov
inc
ror
pop
xchg
dec
inc
add
lods
bnd
jmp
js
nop
mov
hlt
sbb
in
mov
cmpsb
xchg
in
repz
scas
je
xor
inc
xor
out
adc
fs
int3
lods
mov
pop
mov
shrb
jbe
or
aaa
fldt
jb
ja
pop
stos
movsl
cmp
stos
mov
insl
sub
mov
test
insb
dec
cmpb
mov
xchg
jno
and
je
dec
addr16
jno
add
xchg
push
mov
push
lock
jno
out
pop
adc
inc
ja
aam
aas
sub
out
dec
out
fstpl
outsl
mov
les
fimull
fldl
cmp
mov
push
mov
mov
and
rclb
fnstcw
push
stc
mov
sbb
lret
cltd
icebp
das
aas
sahf
cmp
adc
pop
sub
ds
sub
push
adc
xor
call
jae
jg
shrl
mov
pop
push
insl
mov
xor
mov
clc
jg
outsb
sub
cmpsl
add
inc
or
xlat
cltd
jecxz
push
sbb
push
cmp
mov
icebp
mov
icebp
xor
mov
fnsave
lea
xor
test
lret
inc
in
idivb
mov
push
mov
in
and
aaa
xchg
out
mov
and
data16
add
neg
inc
std
adc
adc
fistps
xchg
popa
in
mov
in
xchg
jmp
leave
je
sbb
ljmp
inc
cwtl
dec
cmpsl
inc
jae
lock
bound
cmp
mov
push
sti
js
dec
push
xchg
jae
jmp
jne
mov
xchg
jle
sahf
adc
xchg
xchg
cmp
dec
jo
xchg
jg
scas
adcl
jge
add
cmp
pop
scas
sbb
lods
outsl
jecxz
mov
add
adc
outsb
test
mov
stc
xor
cmpsb
stos
daa
push
fs
push
stc
clc
xchg
orl
ss
fistpll
add
imul
cwtl
jne
inc
mov
sbb
cmp
mov
mov
mov
pop
fmul
lcall
loope
clc
add
adc
mov
add
bound
shll
jg
andb
pop
int3
and
push
adc
fiaddl
mov
xor
adc
mov
ret
lret
pop
ja
or
sbb
scas
ret
jecxz
imul
dec
or
insb
loop
add
loopne
and
xor
inc
ja
cmp
mov
enter
jge
std
pop
pop
shrl
dec
mov
add
inc
cwtl
and
ficomps
mov
sbb
cmp
add
jmp
or
aam
mov
push
fdivl
ja
lods
sbb
sbb
mov
dec
xchg
js
clc
pusha
push
mov
add
mov
adc
jecxz
jmp
movb
jge
shlb
jecxz
xchg
std
lea
js
daa
sub
xor
pop
mov
or
test
nop
std
das
add
int3
or
pop
sti
and
xor
pop
jmp
into
mov
ret
sub
push
pop
cmp
mov
jge
pop
xchg
mov
inc
pop
in
jne
mov
std
and
jns
inc
stc
loope
sbb
mov
push
adc
aaa
stos
in
loope
mov
pop
das
imul
push
push
lcall
inc
xor
pop
ffreep
leave
fists
jo
sbbl
pop
js
pop
cld
pop
sti
andl
cli
and
insl
jle
adc
lock
mov
dec
jle
ja
stc
add
add
int3
scas
mov
adc
loop
popf
lahf
insl
ret
mov
leave
inc
or
mov
dec
popa
mov
fldt
in
jo
and
mov
mov
or
adc
mov
push
xchg
cwtl
int3
lods
test
out
ds
pop
xor
jbe
pushf
stos
in
les
add
adc
mov
push
jecxz
cwtl
dec
cmp
or
addr16
repz
mov
inc
gs
sbb
pop
push
xlat
fimull
inc
push
loopne
icebp
and
dec
icebp
adc
loope
cli
fst
mov
push
repnz
push
jns
test
fcmovbe
mov
push
pop
out
mov
sub
push
pusha
int3
fwait
jmp
cmp
sbb
loope
leave
xchg
ret
xor
mov
cwtl
and
ja
std
sti
loopne
xchg
mov
cmp
xor
movsb
adc
lods
xchg
sub
popa
cmp
icebp
movsb
rorb
pop
push
jnp
add
adc
sbb
sbb
stos
inc
pop
out
sbb
aam
das
insl
test
shl
call
inc
adc
pushf
lret
adc
es
push
mov
dec
ja
push
jg
xor
stos
push
loop
jnp
mov
jns
aaa
jne
add
mov
and
rorb
mov
push
ss
and
jae
xchg
sbbb
inc
xchg
lock
cli
aaa
sub
aas
pop
test
inc
cld
xchg
adc
movsl
int
es
xchg
movups
pop
cmp
popf
filds
pop
lea
hlt
aaa
addr16
shl
insl
daa
inc
fists
adc
jne
aad
fists
mov
pop
cmp
sbb
or
or
sub
pusha
push
fadd
ja
adc
push
xchg
xlat
sbb
int3
add
xchg
popf
jmp
xor
jae
out
psubusw
inc
fcmovnu
mov
loopne
jbe
or
lcall
rorb
add
inc
jmp
xchg
pop
push
idiv
mov
xor
pop
cmpsb
loopne
xor
das
xchg
movsl
mov
loope
int
and
pop
cmp
scas
and
ret
scas
std
lret
negl
jle
sbb
mov
xchg
jp
mov
stos
shlb
add
inc
out
scas
pop
fistl
fdivp
xor
dec
lods
push
sbb
lock
mov
mov
pop
mov
cmpsl
and
into
cmpsb
mov
adc
push
mov
xchg
jp
dec
addr16
hlt
int3
xor
cmp
mov
aad
out
push
or
ret
and
pop
aad
enter
jno
cmpsb
and
mov
inc
and
addr16
sbb
cmc
ljmp
inc
dec
cltd
stos
adc
imul
or
out
mov
ljmp
adc
sub
out
shlw
dec
inc
and
fs
in
faddl
jne
inc
jmp
push
movsb
testl
cltd
loop
mov
nop
push
insl
ret
loop
dec
rolb
lock
sarb
jle
lcall
out
into
jo
test
movsb
shll
fnstcw
aam
jno
mov
gs
add
jae
xchg
jecxz
shll
xor
bound
sub
in
loop
fsubrs
daa
mov
or
sub
stos
mov
cmp
hlt
push
repz
ja
cli
and
lahf
mov
pop
push
jge
sbb
test
insl
jge
xchg
inc
sahf
mov
xchg
xchg
ss
or
mov
jecxz,pn
xlat
cld
add
in
dec
lcall
ljmp
xchg
mov
loopw
sti
jecxz
in
adc
cmc
insl
push
sbb
cs
adc
sub
cs
vpackuswb
shl
dec
nop
adc
int3
lock
and
push
sbb
shrb
xchg
mov
add
inc
dec
outsb
ljmp
pop
je
sub
or
mov
out
stc
jl
jge
scas
mov
cmp
cmpsl
lret
enter
xlat
mov
mov
pop
pop
mov
cmp
cmp
out
cmpsb
out
inc
lahf
cmc
enter
int3
aaa
ss
aaa
imul
cmp
in
jo
inc
test
imul
outsl
fbstp
movsl
decl
or
push
or
adc
push
push
cmp
stc
mov
and
push
in
jbe
lock
out
imul
sub
lds
fldcw
repz
cmp
sti
xor
fildl
out
jmp
ss
repz
sbb
insb
and
and
mov
mov
push
in
pop
iret
cmp
inc
jo
mov
mov
aas
test
jnp
mov
cmc
mov
rol
ret
jecxz
insl
fwait
popf
cmp
or
fildll
mov
mov
jle
sub
packuswb
ljmp
loope
and
inc
out
fstpl
lea
xchg
test
cli
dec
test
cmp
repnz
mov
add
es
pop
shll
repz
in
push
out
lahf
stos
addr16
mov
sbb
xchg
setp
xchg
mov
and
inc
lods
pop
popa
std
pop
repz
inc
dec
sub
insl
inc
push
in
fstpl
inc
inc
mov
cli
jno
mov
jecxz
push
sbb
xor
rorb
stc
fsubrl
push
fisubrl
fisubs
js
jmp
inc
lock
sbbb
push
inc
hlt
dec
mov
inc
cmp
lcall
inc
xchg
add
jbe
pop
in
imul
pop
cwtl
mov
cmp
fstpt
jbe
mov
repz
clc
cmp
addb
xor
adc
cmp
mov
push
and
out
xor
push
clc
dec
add
or
and
push
jo
outsl
fistpll
mov
inc
out
jecxz
pop
mov
adc
push
lea
mov
dec
sar
mov
sbb
sbb
mov
jl
movsb
subl
ret
or
ud0
add
dec
xchg
jg
repnz
push
mov
cmpsl
add
inc
repnz
push
es
cmpsb
xchg
data16
push
pop
scas
out
icebp
loope
clc
sbb
cmp
xchg
push
fsubs
jecxz
movsb
movsl
or
loopne
aad
sub
or
sub
mov
cmpsb
xor
or
fisttps
inc
fwait
mov
insl
adc
cmpsl
jg
out
loop
xchg
int3
push
popa
movsl
pop
mov
jae
mov
pushf
rolb
fs
aas
xchg
jecxz
hlt
adc
mov
popf
rorb
xor
sub
divl
jl
push
mov
push
insl
je
sub
xchg
push
pushf
loopne
nop
sbb
inc
je
dec
inc
sbb
mov
arpl
cltd
stc
mov
push
sub
pop
bound
inc
xchg
jmp
pushl
cmpsl
cmp
cmp
cli
je
mov
test
cli
mov
mov
gs
and
cwtl
les
sar
add
in
inc
mov
outsl
aas
icebp
into
and
or
pop
fwait
jne
mov
mov
push
xchg
ds
rol
not
push
insl
cs
std
mov
and
jl
cmp
pop
ljmp
into
arpl
call
mov
sub
hlt
in
loop
hlt
dec
iret
pop
pop
aam
pop
sbb
mov
shlb
adc
shl
and
movsl
adc
add
sub
jns
subb
cmc
stc
int3
lods
movsl
test
lahf
shrl
leave
pop
clc
mov
repz
xchg
sub
sbb
insl
leave
enter
add
aaa
shll
and
fsub
add
scas
dec
movsb
or
test
ret
xchg
pop
xor
xor
sbb
xor
cmp
adc
dec
add
movsl
or
fcmovnbe
dec
lods
in
mov
xchg
inc
inc
bound
shrb
imul
sub
daa
mov
sub
mov
data16
mov
cmc
pop
sub
call
adc
inc
inc
lret
mov
ret
mov
mov
pop
aad
xlat
int3
xchg
rorl
dec
sbb
and
int3
das
push
hlt
push
lret
pop
cli
lods
and
jne
or
loopne
jbe
leave
or
in
int
hlt
in
add
jmp
mov
push
sbb
cmp
addr16
test
push
arpl
mov
xchg
popa
dec
pop
notb
bound
sbb
bound
rorl
mov
lret
mov
fisubs
out
cltd
mov
xor
sbb
scas
mov
mov
dec
imul
pop
test
iret
xchg
xchg
push
push
inc
add
jle
fmul
aas
mov
cmpl
pusha
mov
adc
push
ret
mov
adc
push
popf
push
ja
rolb
loope
loop
jne
data16
lcall
add
das
mov
and
cltd
in
outsl
adc
cmc
shll
add
xrelease
pop
sub
clc
rclb
jmp
mov
pop
fldl
fxch
sbb
insb
xchg
dec
xchg
clc
repnz
test
pop
mov
sub
sub
lods
popf
sub
testb
xchg
mov
aam
test
imul
in
int3
das
lods
and
fimuls
out
pusha
dec
lock
adc
fdivl
repz
daa
stos
sub
imul
in
loop
mov
or
sbb
sarl
cmpsb
inc
ret
pop
ret
xor
in
data16
sbb
adc
in
adc
rcrb
repz
lock
daa
lret
sahf
jecxz
xor
dec
sbb
das
mov
aad
lcall
scas
movsb
jo
fldcw
inc
push
inc
movsl
and
inc
sbb
jl
add
out
mov
stos
cmp
pusha
pop
push
clc
xchg
mov
inc
cmp
movsb
mov
mov
jle
push
out
jge
daa
push
xchg
sub
mov
or
sbb
pop
and
add
lods
scas
mov
ret
mov
mov
xlat
movsl
mov
clc
testb
outsb
scas
movsl
push
int3
mov
jnp
cmpl
inc
std
cli
dec
popa
lret
aas
aas
stc
clc
sub
out
dec
fistps
adc
mov
xor
mov
dec
push
aas
cmc
insb
mov
sbb
or
add
ljmp
mov
pop
rdtsc
cli
loope
and
mov
lahf
xchg
jg
ljmp
push
mov
aad
addr16
insl
fldt
bound
psubd
mov
mov
push
sbb
dec
popf
mov
xchg
cwtl
je
xchg
mov
lret
int
adc
lret
inc
pop
int
data16
inc
mov
mov
cmp
cmc
and
call
popf
jae
aaa
sub
or
and
movsb
insb
aas
add
cmp
hlt
mov
pop
xchg
xor
fwait
pop
cmp
cmpsb
sbb
ljmp
inc
ret
adc
leave
jl
jbe
xor
fbld
mov
fists
in
loop
jg
sub
fisubrl
ficompl
fisubs
cltd
mov
push
cmpsb
xlat
or
push
inc
leave
lods
test
repz
out
in
mov
pop
xor
dec
cmpsl
rcr
imul
lahf
dec
xchg
data16
fs
leave
lahf
jne
clc
inc
push
jmp
insl
shll
ret
adc
cmp
loop
movsl
push
inc
movsb
and
or
mov
and
add
flds
aam
sub
ret
aas
mov
mov
pusha
inc
fbstp
dec
xchg
out
adc
rolb
and
sbb
mov
cmpsl
in
jle
lcall
shll
mul
or
inc
addl
mov
testl
inc
mov
loop
add
dec
pop
xor
fsubrl
cmp
xor
or
mov
push
ss
fstps
xchg
leave
pop
pop
orb
mov
fdiv
sub
xchg
stos
stc
scas
ljmp
or
vmovshdup
xchg
sub
mov
mov
mov
cmc
adc
sub
mov
mov
mov
jg
imul
cs
cwtl
sub
jae
pop
add
sti
neg
popf
stc
adc
hlt
out
adc
mov
pop
negb
or
pop
jno
pop
stos
mov
shl
mov
cltd
int3
addr16
and
jmp
jnp
mov
ret
dec
jne
mov
movsb
push
jg
add
push
pop
arpl
pop
dec
jp
mov
sbb
or
xchg
mov
cmp
int3
inc
sbb
mov
add
push
stc
test
outsl
insb
pushf
pop
add
arpl
ret
test
add
fs
fs
cltd
xchg
test
and
fcmovnu
lret
push
int
add
and
into
inc
dec
cld
fwait
or
shlb
inc
cld
mov
lods
mov
pop
data16
cli
in
scas
int
add
andl
fs
push
add
xchg
jae
outsb
add
rorl
decl
hlt
or
std
pop
mov
add
mov
arpl
shlb
out
xchg
xor
popf
xor
sbb
loop
push
adc
int
mov
cld
fs
jp
and
add
adc
mov
ret
xchg
pop
ss
clc
mov
lock
stos
enter
mov
jo
rcll
mov
dec
fisubs
dec
adc
je
aam
jo
jmp
sub
dec
jg
sti
xchg
outsb
pop
enter
jecxz
pop
inc
pop
shrl
data16
inc
icebp
adc
pop
iret
out
test
shlb
js
dec
push
in
sarl
mov
dec
jbe
aam
or
std
cmpsl
loop
mov
popf
jl
adc
cmp
jne
jle
aam
lock
jg
into
loope
ret
mov
mov
lret
inc
xor
push
sub
inc
dec
mov
xor
cmp
in
mov
xor
mov
test
cmp
test
sbb
test
mov
sbb
mov
dec
fisubs
mov
cmp
test
leave
orl
pop
xchg
add
repz
cli
in
pop
mov
orb
sub
mov
jl
stc
cmpsl
mov
cmp
fwait
mov
dec
jmp
ret
lret
or
cmp
idivl
mov
jge
jg
jae
dec
loope
inc
mov
adc
mov
and
rorl
xchg
andb
fisttpl
jbe
dec
iret
jl
lea
mov
mov
scas
sbb
lcall
lock
cs
mov
hlt
mov
adcb
out
cmp
aas
sti
fld1
mov
push
jle
call
cmpsb
fwait
mov
test
mov
push
mov
xor
pusha
xchg
inc
or
xchg
leave
test
test
data16
enter
fildll
jg
cmc
jg
inc
dec
pop
xor
xchg
sbb
rolb
pop
xlat
mov
imul
push
in
push
repnz
aad
add
fsub
push
jmp
aas
mov
jb
in
pop
cmpsl
mull
mov
fldlg2
popf
push
sub
inc
nop
movsb
negb
cmp
das
sbb
adc
jnp
rcll
inc
sti
xchg
and
test
ljmp
inc
xlat
xchg
movsl
jg
or
or
lret
mov
mov
cmp
iret
mov
add
lcall
cmpl
push
aas
mov
movsb
aas
rorb
inc
lock
mov
xor
loope
into
xlat
jmp
sub
andb
outsl
aas
xor
rcrl
inc
scas
dec
add
xchg
and
xchg
xchg
mov
cmp
xchg
pop
leave
stc
sti
push
and
popa
rcll
movsb
cmc
stos
mov
sub
inc
jecxz,pt
mov
addr16
xor
jle
pop
jns
stc
lds
fs
lods
daa
mov
adc
jnp
out
adc
lock
xor
cmp
fucom
xorb
fiaddl
es
pop
xchg
subb
loop
fwait
cmc
pop
divps
xorl
test
jbe
jne
fadds
and
js
sbb
icebp
ret
nop
and
pop
xor
inc
push
iret
mov
cwtl
add
int3
pop
arpl
orb
dec
clc
inc
or
dec
mov
and
mov
inc
in
scas
pusha
clc
pop
push
inc
orb
out
call
jno
cmp
jecxz
mov
les
sbb
mov
push
pop
mov
imul
adcl
and
hlt
jb
add
cwtl
xorl
nop
jo
in
mov
inc
in
pop
pop
int
pop
xchg
mov
sub
test
lret
jne
xchg
push
outsb
movsb
outsb
mov
mov
or
lods
fcoml
es
mov
sub
mov
daa
mov
pop
mov
fidivl
in
mov
add
loop
ss
gs
cmp
aad
mov
pop
adc
sarb
insl
mov
jne
cmp
movsl
cwtl
fistpl
push
jl
fisttps
mov
jb
ja
ja
xor
add
je
xchg
sti
movsb
mov
inc
lret
adc
into
test
xor
xchg
mov
mov
pushl
cmp
jl
ja
xchg
test
xor
jno
cmp
je
push
xor
and
sbb
and
test
insb
inc
in
leave
mov
xor
lea
mov
rolb
mov
nop
xchg
and
or
sub
or
dec
cwtl
push
rorb
xchg
dec
push
or
jb
cwtl
ljmp
lock
xchg
xlat
push
pop
fucomi
cmpsl
outsl
jb
dec
or
mov
cmp
popa
inc
pop
test
or
hlt
jae
mov
aaa
jnp
mov
rclb
fisttpl
sbb
sub
popf
in
lods
push
pop
imul
imul
iret
and
mov
test
cmpl
es
int3
icebp
add
scas
lea
mov
loope
mov
xchg
es
mov
xchg
lcall
sti
pop
mov
popf
loop
iret
cmp
dec
aas
jae
pop
test
dec
out
les
mov
sbb
lahf
sub
pop
cmp
push
nop
fnstsw
mov
in
fdivs
enter
inc
dec
stos
add
sub
inc
push
and
xor
sbb
repz
mov
fwait
push
ljmp
ret
or
mov
repnz
out
and
mov
out
daa
inc
mov
dec
or
jb
les
cli
ret
frstor
jb
inc
jae
sarl
cmpl
and
loope
out
pop
sti
push
cmpsb
imul
cli
xchg
jge
pop
bound
in
std
cmp
inc
fs
mov
mov
jg
nop
adc
mov
dec
xor
jg
adc
cmc
push
imul
in
outsl
push
jp
jo
fmull
inc
insl
dec
add
xor
dec
stc
movsb
int3
mov
sub
mov
loop
sub
inc
outsb
sub
std
mov
jbe
xchg
bound
rcrl
jae
push
cmp
ss
xchg
insb
xchg
xchg
add
jle
test
cwtl
pop
cltd
lret
mov
icebp
sub
lods
cmp
orl
mov
jle
out
adc
xlat
mov
dec
sahf
or
sub
lods
inc
iret
xor
pop
movsw
clc
mov
lret
sub
in
jne
pop
adc
lcall
ss
xchg
nop
stc
inc
out
pop
in
in
mov
xchg
mov
cmp
add
mov
inc
push
xchg
fistl
repnz
daa
and
mov
sub
adc
and
mov
sahf
pop
xchg
dec
and
pushf
push
mov
mov
jecxz
stos
xchg
jo
repnz
cmp
inc
inc
fs
bnd
push
mov
mov
out
ljmp
les
mov
add
push
dec
mov
leave
xchg
cmp
mov
jb
xchg
mov
xor
pop
shll
push
jno,pt
lret
sahf
adc
push
into
cmc
bound
xchg
or
sub
xchg
rorb
or
lods
mov
xchg
lcall
push
les
cmc
push
icebp
sbb
pop
stc
jb
dec
in
aaa
pop
int
pushl
int3
push
je
mov
xchg
shrl
mov
xchg
xlat
xchg
cli
pop
std
inc
mov
inc
xchg
bound
mov
inc
jb
mov
mov
pop
lret
aad
jmp
fimuls
in
lock
aaa
cmp
xor
mov
xchg
cwtl
iret
push
inc
lods
ja
cmpsl
rcr
inc
adc
sti
rcr
aam
int
mov
mov
dec
push
jae
sub
pop
or
mov
lods
aas
dec
test
imul
lds
filds
pop
fcomps
jecxz
loopne
xor
maskmovq
testl
jp
clc
insl
cmpsl
mov
aas
lahf
or
jp
out
cltd
pop
sahf
and
roll
push
out
jae
dec
inc
jle
mov
adc
imul
pop
fisubl
ror
ret
dec
ljmp
hlt
test
mov
outsb
adc
mov
lret
adcl
dec
gs
movsb
out
xor
lret
inc
mov
mov
add
mov
scas
lea
pop
cs
rcrl
mov
sbb
mov
rolb
aaa
imul
or
adc
cmp
cmp
push
imulb
int
andb
cmp
cmp
arpl
mov
pushf
xor
jp
addr16
not
inc
lds
imul
pop
jo
and
sahf
jle
out
push
negl
shl
stos
mov
xorl
inc
fstpl
push
and
ret
nop
push
dec
imul
sbb
or
push
test
nop
dec
xchg
xchg
iret
fwait
xor
stc
xor
sub
xchg
cli
mov
fmuls
shlb
imul
aaa
cltd
mov
enter
fdiv
or
jg
jns
lods
lods
lock
push
sahf
xchg
adc
pusha
add
cmp
std
fwait
or
dec
fiadds
inc
shll
mov
icebp
ds
fcoms
test
dec
test
inc
pop
xor
test
arpl
mov
imul
shll
in
into
xor
mov
in
ret
pop
nop
popa
push
cmpsl
jmp
arpl
sti
dec
pop
mov
test
jo
xchg
push
test
rcr
mov
insb
sub
popa
fildl
mov
inc
frstor
sbb
jmp
lret
out
pop
push
pop
or
cmp
popa
movsl
jmp
dec
test
lahf
mov
fldcw
fildll
sbb
hlt
ret
sub
incl
push
shrb
jno
push
ret
mov
mov
andb
push
cmp
js
testb
jae
mov
xor
test
mov
pop
das
lahf
lds
repz
lods
jecxz
mov
and
cmp
ds
mov
inc
leave
addb
test
or
lahf
push
mov
xor
hlt
push
cmp
mov
mov
ss
gs
in
inc
je
mov
xchg
sub
inc
sarl
dec
fwait
lcall
out
push
hlt
jne
loopne
or
shlb
xor
lock
mov
sarb
js
loop
cmpl
cmc
inc
inc
push
js
mov
rorl
pop
cmpsl
mov
stos
call
sahf
imul
mov
pop
cld
iret
dec
test
rclb
jae
js
lods
loopne
lea
ficoms
dec
fwait
add
aam
inc
sti
stos
push
int3
aam
and
sub
unpcklps
cmp
mov
cmp
push
enter
jmp
cmp
je
leave
aam
dec
mov
jmp
jno
xor
xchg
mov
stc
mov
popf
xchg
jp
push
xchg
sub
or
out
gs
and
xchg
mov
cmp
cs
out
pop
loop
cmc
js
pop
or
dec
adc
cmc
sbb
cltd
divb
mov
jns
and
inc
push
dec
mov
aam
pop
lods
mov
rorl
leave
sub
outsl
fwait
pop
test
mov
jecxz
leave
dec
iret
popa
push
mov
stos
cmp
das
dec
int
inc
jle
mov
mov
dec
sarl
mov
inc
shrl
fcmove
sbb
add
push
movsb
dec
into
cmpsl
mov
out
clc
adc
xor
das
jo
cmpsb
les
inc
xchg
xor
pop
cmc
pop
bound
cli
popa
inc
pop
jnp
sub
rcll
fadd
arpl
adc
cmpl
sbb
and
pop
xchg
sbb
fstps
dec
js
test
push
dec
push
ret
dec
and
pusha
add
mov
dec
nop
lret
stos
push
andl
lods
mov
mov
mov
and
mov
jne
outsl
rorl
dec
repnz
mov
inc
or
xor
xchg
xchg
pop
xchg
push
xor
movsb
or
adcl
mov
add
loop
int
daa
imul
jnp
fisubrl
mov
mov
xor
mov
add
pop
shl
aad
jno
into
loopne
imul
or
push
mov
loope
hlt
js
int
sub
mov
aam
inc
sbb
add
mov
add
loope
test
les
sbb
add
xchg
cs
inc
fistpll
and
sti
mov
frndint
fadds
mov
jle
out
pop
pop
outsl
cmp
in
add
xchg
xor
add
adc
mov
xorl
pop
rcll
inc
scas
stos
lock
add
cmp
in
call
mov
or
std
lret
mov
mov
int
test
pop
pop
and
jge
lret
pop
or
bound
lock
cmp
pop
js
sub
jae
aad
das
sbb
cld
xchg
xchg
mov
adc
adc
repnz
int3
add
cmpsl
fcmovbe
jo
sub
pop
test
inc
adcb
dec
mov
movsb
rorb
sbb
and
jmp
sarb
popf
jno
jns
or
stos
push
xchg
adc
in
sub
or
adc
mov
mov
jbe
jp
pop
arpl
push
sbb
add
shll
cmpsb
dec
adc
popa
loope
add
mov
jle
mov
pop
fidivl
imul
mov
shl
ret
or
lret
mov
mov
stos
jge
stos
xlat
jb
sbb
sub
mov
push
cmp
jo
lcall
xchg
xor
sbb
jno
pop
sbb
clc
dec
repnz
push
repz
mov
lcall
adc
out
xor
mov
mov
or
mov
leave
je
sub
mov
jmp
jb
push
loop
and
repnz
test
dec
lcall
or
mov
cmc
js
es
fstl
std
and
lds
dec
into
xchg
cld
lcall
imul
lret
popf
andl
cmpsl
aam
add
stc
lcall
int
leave
or
push
lods
test
mov
test
mov
int3
movsb
pop
xlat
mov
xor
stos
sbb
mov
mov
lods
adc
sub
test
adc
js
pop
adc
icebp
inc
pop
stos
push
lahf
ss
sbb
shrl
je
dec
sbb
popf
sub
mov
outsb
arpl
testb
jns
mov
sbb
pop
test
pop
jge
jno
cmp
dec
mov
mov
popf
add
or
jne
hlt
push
sti
ja
xorb
test
hlt
in
ds
jb
aas
repnz
inc
testl
adc
dec
cmp
dec
mov
sub
pop
jne
pop
pop
jp
popa
push
sbb
nop
adc
adc
inc
cmpsl
ficompl
cmp
adc
not
fcoml
cmc
xlat
and
in
mov
aas
in
xchg
adc
add
seto
jl
addb
or
sbb
xor
in
xor
push
dec
pop
or
jp
lea
sub
adc
sbb
cmp
fldt
test
dec
int
push
mov
fildl
mov
daa
test
inc
cli
sbb
jg
mov
mov
jae
xchg
xor
fsubrp
mov
notb
sbb
push
int
jnp
mov
aam
mov
adc
lahf
cwtl
fcomp
lods
adc
enter
out
jp
dec
push
rol
lock
sahf
rcrl
cmpsb
addr16
addr16
dec
loope
mov
xor
add
test
fsubrs
fld
mov
rorb
mov
xchg
add
pop
push
repnz
in
shlb
cmpsb
or
in
and
cmpsl
out
daa
or
pop
pusha
in
scas
cltd
mov
les
push
nop
testl
out
cwtl
mov
les
std
test
cmc
jle
mov
add
hlt
sub
out
fwait
lods
lcall
pop
xchg
jge
mov
jne
out
test
sub
add
and
pop
mov
loopne
push
adc
imul
cmp
hlt
inc
int
jns
adc
fmull
jns
pop
sub
adc
mov
mov
pop
loop
xor
vcvtss2si
jb
into
push
stos
fisttpll
lcall
sbb
inc
push
pop
test
ret
xchg
adc
xchg
push
cld
pop
lds
xor
add
inc
mov
lahf
sub
loop
in
mov
clc
mov
xchg
jg
sub
jg
bound
rcrl
jo
insl
rorl
shll
mov
es
add
inc
shll
push
arpl
jmp
add
adc
aaa
mov
lods
call
decb
mov
pop
insl
jbe
fnstenv
and
imul
out
adc
adc
dec
mov
int
out
pop
ret
mov
in
xor
and
sub
jo
pop
xor
inc
movsl
push
mov
or
mov
out
and
addb
pop
mov
int
adc
jo
gs
lahf
ret
adc
fisubrl
stos
or
or
inc
push
push
xlat
mov
cltd
jno
push
mov
in
mov
rclb
in
movsl
orl
rcr
push
mov
cs
orb
inc
loopne
or
xlat
mov
sarb
add
xchg
cli
loope
aad
inc
outsb
jmp
aaa
ret
test
rcll
in
popf
sbb
adc
insl
sbbl
jecxz
cmc
push
pushaw
inc
ja
jo
lea
inc
jg
bound
cmpsl
imul
outsb
sar
pop
daa
xchg
push
mov
sub
pop
sbb
pop
mov
xor
dec
cmc
dec
out
ds
xlat
push
xor
out
push
cmp
xchg
and
out
mov
rclb
ret
cmp
mov
ja
das
loop
inc
fwait
outsl
dec
sub
push
loopne
adc
fmul
fsubl
jnp
arpl
jnp
pop
cmpsb
lea
insb
js
mov
cmpsl
push
add
test
stc
mov
inc
test
inc
out
dec
imul
addb
fsubrs
inc
rclb
insl
and
int3
je
stos
push
jno
hlt
mov
stos
pop
inc
xor
pop
rol
jle
in
pop
add
test
lds
add
es
pop
je
shlb
push
stos
arpl
mov
and
stos
adc
push
lahf
mov
adc
repnz
add
cld
orl
sub
scas
mov
movsl
inc
mov
in
dec
fidivs
inc
sbb
sar
jnp
xchg
insb
call
leave
lahf
push
in
mov
push
xor
in
push
outsb
je
js
xchg
int3
hlt
jp
lds
sbb
popf
mov
sbb
adcl
inc
jae
inc
push
pop
jns
stos
pop
test
sti
outsb
loope
cld
and
cs
fildll
xchg
lods
inc
pop
enter
daa
jo
xchg
mov
push
xor
dec
xchg
sbb
cmpsl
sub
in
mov
outsb
orl
lahf
jp
call
call
lea
lods
lahf
lods
and
roll
push
imul
in
fcmovb
lcallw
mov
sbb
loope
rcrl
test
cwtl
popf
mov
mov
and
jl
imul
xor
rcrl
sub
mov
gs
mov
mov
cmp
mov
mov
loope
inc
arpl
or
inc
and
dec
adc
xorl
rcll
js
fwait
mov
mov
inc
std
ret
jnp
mov
pusha
fadds
in
subl
es
jno
pushl
out
jecxz
fiaddl
adc
pop
scas
es
lea
add
mov
pop
push
test
into
adc
inc
cmp
jg
and
or
popf
push
inc
pop
mov
in
int
hlt
in
mov
xor
sub
push
mov
push
jle
stc
lods
subb
xchg
ds
adc
dec
xor
sub
dec
push
xchg
roll
iret
leave
inc
pop
jl
push
clc
pop
mov
ret
repz
push
dec
je
mov
pop
cmpsb
test
out
or
jmp
das
sbb
andl
mov
idivb
fnstcw
pop
xlat
adc
adc
xchg
xor
push
mov
mov
insl
mov
jo
repnz
inc
dec
dec
adc
xchg
imul
test
xchg
sbb
jecxz
out
push
mov
ds
testb
dec
hlt
and
insb
movsb
into
mov
jne
fcomps
movsb
dec
mov
sub
cmp
arpl
inc
mov
push
xor
aas
das
addr16
test
popa
mov
loope
nop
repnz
cmp
in
xchg
mov
lea
mov
mov
mov
mov
pop
add
pop
xorb
push
repnz
lret
push
inc
addr16
movsb
and
out
lea
je
in
jle
lods
mov
cwtl
and
dec
sub
repnz
mov
xor
test
repnz
out
loopne
xor
xchg
add
je
mov
jmp
mov
rcll
xchg
mov
jnp
dec
sub
jbe
xor
dec
or
inc
sti
dec
inc
test
add
filds
ficoms
movsl
in
scas
subl
inc
daa
les
loop
popa
inc
lods
repnz
push
sub
xchg
jbe
push
popf
bound
cmpsb
jo
mov
fwait
jp
mov
cmp
sarb
mov
enter
inc
push
sub
fwait
add
sbb
lods
lods
or
imulb
push
and
into
and
pop
cmpsl
sbb
dec
jae
cmp
mov
or
and
fidivl
push
fstp
iret
rcll
inc
movsl
and
lahf
out
xor
and
xor
imul
add
xchg
pushf
or
icebp
stos
adc
jno
mov
rcr
jge
add
aaa
mov
popa
cltd
mov
mov
xchg
add
pop
daa
ss
aas
dec
imul
pop
jne
inc
jge
jno
scas
push
arpl
test
add
incl
lods
mov
jb
cli
pop
das
cmpl
insb
shll
fnstsw
bound
add
icebp
movsb
cwtl
cmp
dec
cmpsl
or
xchg
test
push
or
add
sub
mov
imul
sbb
fwait
loope
aam
das
pop
push
xchg
repnz
daa
push
fidivl
aam
imul
or
movsb
pop
or
sub
rorb
imul
mov
fwait
add
push
ds
jne
xlat
or
pop
jmp
add
mov
add
mov
pop
das
and
and
es
int3
cmp
inc
insb
bswap
pusha
jg
and
jg
dec
cmp
mov
arpl
rclb
sahf
cmovs
add
inc
lods
cmp
aam
lea
xchg
cmp
clc
dec
repnz
jg
aaa
mov
aaa
jl
inc
leave
in
repnz
scas
fsub
pushf
xor
aas
pop
inc
das
repnz
aad
decl
jne
mov
sub
cmc
sbb
mov
popf
dec
repnz
add
popf
jp
jbe
repz
aas
shll
push
stos
jg
mov
sti
jmp
sub
dec
rcrb
or
dec
sub
pop
jb
scas
or
lcall
jl
adc
cltd
add
nop
js
jg
fistl
mov
fsubrl
in
cmc
xchg
jle
sbb
mov
and
cmp
pop
cmp
pop
jne
xchg
cmc
xchg
repz
fwait
or
subb
dec
and
cmc
cmc
lods
incb
in
int
ljmp
push
movsl
fsts
in
push
enter
inc
xor
in
jle
loop
inc
arpl
cli
add
push
mov
and
xchg
cld
pop
in
xchg
out
das
push
mov
mov
fstl
sbb
gs
in
and
loop
push
lods
cmc
ret
adc
aam
stos
mov
aaa
mov
lcall
lcall
cmpsb
jp
mov
stc
outsb
sti
xor
xor
int3
xlat
ljmp
mov
jno
mov
dec
imul
fs
pushf
xchg
cmp
pop
insb
into
inc
mov
or
fwait
xchg
adc
pop
mov
jecxz
das
sbb
dec
es
out
cld
out
mov
or
out
xchg
repz
jae
cmpsl
sbb
mov
daa
faddl
xchg
add
or
out
rcr
sbbl
pop
lcall
test
sbb
lahf
and
test
insb
lret
add
dec
data16
sbb
ljmp
mov
out
mov
sbb
mov
data16
nop
jbe
pop
jne
xorl
movsb
xchg
xor
cmc
push
sub
push
scas
mov
mov
mov
xor
dec
ret
add
or
clc
sbb
or
sbb
or
mov
cli
lods
inc
and
mov
inc
mov
xor
xor
ljmp
xchg
dec
das
cmpsl
ret
or
test
push
daa
mov
mov
stos
sub
icebp
aam
outsb
cmp
popf
das
jnp
jg
jae
iret
orb
sub
fwait
dec
pop
xor
pop
ret
or
inc
inc
loopne
lods
add
fildll
popl
movsl
mov
xchg
mov
push
mov
mov
push
fstps
in
fstpl
div
xlat
iret
aad
sahf
jnp
pusha
movsl
mov
xor
xchg
std
sahf
cmc
bound
clc
lea
adc
fidivrs
mov
test
and
je
in
fwait
repz
jl
dec
push
aad
dec
xor
and
adc
dec
xor
push
in
aas
or
pop
ficoms
xchg
jge
fisubrs
push
mov
xorps
test
aaa
leave
lcall
adc
mov
fistps
push
lret
mov
test
movsl
cmp
insb
jae
or
sarl
dec
xor
fsubr
movsl
and
mov
mov
mov
pop
or
xchg
push
test
mov
add
sbb
inc
cmpsl
insb
push
jl
mov
icebp
cltd
adc
add
or
mov
and
in
sub
clc
push
xor
sub
test
aas
stc
stos
jbe
xor
data16
enter
sbb
cmp
xor
adc
jecxz
dec
mov
xchg
lret
jg
mov
sarl
in
lods
cmp
mov
jl
aad
enter
push
fistpll
jbe
std
sbb
mov
gs
xchg
and
inc
or
rcrl
xor
sbb
movl
cs
in
fiadds
cltd
pop
ja
lock
pop
add
push
cmp
mov
fpatan
pushf
mov
xlat
pop
out
ffree
outsb
stos
int
fidivl
movsl
fisubrs
mov
or
sbb
mov
push
xor
pop
and
in
imull
outsb
addr16
push
pop
pop
push
pop
add
sbb
and
pop
xchg
clc
inc
testb
mov
shll
fbstp
rcrl
or
std
mov
cltd
aas
push
inc
inc
gs
pop
mov
push
jb
lahf
btc
enter
fs
into
mov
iret
aaa
xchg
repz
pop
jbe
add
xlat
mov
cltd
jmp
adc
cli
adc
mov
ss
xchg
lret
push
dec
inc
sub
mov
les
push
sub
roll
ret
dec
mov
rcl
fidivrl
xchg
mov
lret
dec
fs
adc
sbb
xchg
int
and
fisubl
aam
lcall
add
in
inc
dec
push
sti
inc
dec
jo
stos
xor
dec
push
adcb
imul
mov
lods
leave
test
xor
sbb
jmp
aaa
ss
jno
xor
cmp
lods
dec
fildll
je
pop
in
clc
outsb
pop
sahf
test
mov
xchg
outsl
inc
add
lds
mov
dec
cld
cmpsl
test
loop
fstps
testb
lret
lods
addl
ss
xor
imul
mov
int
dec
pop
add
cmp
mov
cmp
cwtl
shll
daa
aad
inc
mov
out
mov
ljmp
or
mov
cs
mov
in
pop
in
or
xchg
sub
xchg
andb
cmpsb
cmp
out
xlat
punpckldq
lods
push
iret
mov
push
pop
lret
nop
cwtl
jmp
push
call
xchg
int3
jbe
int3
xchg
mov
mov
popf
mov
and
ret
lods
aam
xchg
sarb
mov
mov
push
push
jns
jg
rcll
mov
jne
jmp
xor
dec
js
adc
xlat
leave
cltd
inc
lods
push
fwait
out
ja
ret
cmpsl
cmp
mov
mov
pushf
enter
xchg
dec
outsb
stc
in
outsl
adc
push
pop
sbb
das
pop
lret
int
adcl
inc
aaa
out
pop
push
push
mov
fdivrl
inc
lods
shlb
adc
inc
sub
sub
shrl
pop
fstps
push
push
push
addr16
mov
push
ds
mov
mov
inc
dec
aas
addr16
out
or
add
lock
sbb
cmp
mov
inc
push
clc
les
dec
push
cmp
mov
cwtl
test
dec
lcall
push
out
addr16
fsts
mov
movsb
pushf
loop
and
mov
lret
fsubrl
stos
cld
fldenv
sbb
and
xchg
clc
data16
and
cmp
test
aas
mov
scas
inc
subl
jg
adc
fwait
xchg
sahf
call
movsl
pop
sub
notb
sbb
add
outsl
out
or
out
lds
pop
sbb
mov
xchg
in
pop
test
push
add
rclb
and
xchg
sti
aas
test
and
sahf
ss
lahf
add
repz
mov
lea
fbld
punpckhbw
push
xor
and
test
inc
lea
jmp
mov
add
mov
or
dec
fwait
jne
mov
sub
out
inc
jo
pop
icebp
pop
ret
pop
mov
movsb
dec
dec
je
pop
rcrl
jbe
cmpsb
or
pop
insl
jo
leave
sbb
mov
mov
ffree
dec
fbld
push
inc
sub
loopne
std
imul
mov
cmp
pop
int3
jmp
shl
mov
mov
jmp
push
pop
dec
sub
inc
jmp
js
xchg
das
std
das
adc
pop
cmc
add
test
jae
in
jmp
out
xchg
fwait
cmp
jno
js
loope
pop
jmp
adc
xchg
push
lret
hlt
push
add
xor
or
neg
jecxz
inc
inc
adc
test
int
jne
inc
xchg
add
lret
mov
ror
scas
pop
push
das
ja
repz
in
outsl
pushf
pop
jns
aas
add
fs
shll
sub
cmp
jo
iret
ret
sbb
mov
aad
xlat
mov
loop
push
jge
mov
inc
mov
pushf
inc
add
dec
xchg
js
inc
push
pop
ret
pushf
daa
mov
flds
jne
scas
testl
sub
push
dec
not
jmp
sub
add
insl
sbb
icebp
push
mov
aam
cmp
push
cs
push
adcb
out
or
inc
clc
inc
push
push
lock
adc
test
dec
sbb
fcoms
lahf
stc
sbb
testb
loope
clc
scas
scas
and
lods
xchg
sbb
jle
jg
stos
dec
scas
jg
imul
push
xchg
dec
or
loope
mov
xchg
push
sub
adc
adc
pop
aam
popf
popa
xchg
dec
xchg
repz
in
sub
cmp
in
push
pop
lahf
adc
dec
or
repz
add
dec
aam
dec
mov
ret
ret
mov
sbb
push
cmc
mov
pop
push
cmp
aad
call
mov
sbb
and
fwait
sub
push
inc
insl
lret
adc
jg
js
call
sbb
subb
decb
sub
lock
and
insb
jp
push
fisttpl
je
inc
push
sub
popf
jp
test
cmp
jno
mov
mov
push
sahf
pop
les
imul
cmpl
dec
mov
jecxz
sti
push
inc
inc
cmp
imul
mov
jmp
add
in
mov
scas
cld
test
ds
pop
das
das
dec
sbb
out
mov
dec
in
lret
pop
push
mov
adc
cmp
dec
and
enter
jbe
in
jecxz
js
push
out
push
mov
mov
cmp
mov
repz
out
in
pop
push
inc
imul
ja
push
adc
call
mov
outsl
cmc
xchg
mov
or
push
or
push
add
adc
in
cld
outsl
stos
jmp
jge
pop
xchg
leave
cmc
rclb
and
or
les
xor
or
mov
nop
sarb
xchg
sbb
ja
stos
add
jge
repz
loop
sbb
xor
or
jo
pop
rolb
jge
add
js
scas
mov
push
stos
xsave
iret
icebp
addr16
inc
lahf
xor
scas
fcomp
outsl
or
add
jle
xor
fcom
fstps
cmc
jecxz
or
out
loopne
ljmp
add
shrb
gs
fadds
repnz
jmp
pop
pusha
stc
nop
data16
aam
pusha
neg
mov
sbb
mov
icebp
lods
and
cmp
in
mov
jmp
pusha
gs
movb
mov
int3
inc
or
push
pop
xchg
cwtl
test
in
lcall
fdivrl
jne
mov
fwait
clc
lret
cmpsl
sbb
nop
outsl
test
jae
mov
stc
xchg
inc
push
or
or
cmpsl
cmpsb
in
test
loope
xlat
inc
and
out
sub
mov
add
loopne
pusha
insl
rolb
add
adc
in
jmp
sub
pop
pusha
cmpsb
sti
jle
sub
lret
jecxz
aaa
mov
mov
cld
out
lods
in
outsl
clc
xchg
sbb
popa
imul
mov
sub
ljmp
fbld
jecxz
lret
mulb
sti
add
fcmovnb
lea
xor
sbb
loope
mov
jl
xor
mov
pusha
leave
rcll
dec
push
mov
mov
xchg
or
adc
add
popa
jns
loope
loopne
pop
cmp
imull
pop
imul
xor
icebp
cmp
push
aaa
and
fstp
jmp
insb
cmpsb
cmp
shlb
mov
sbb
sub
push
lods
mov
cmp
popa
and
iret
mov
mov
push
sahf
test
imul
pusha
out
je
mov
enter
dec
aas
mov
adc
hlt
pushf
inc
dec
mov
daa
jno
push
adc
icebp
jle
repnz
pop
push
push
add
pop
addl
jle
cs
daa
push
fwait
cmpsb
rcl
out
sub
in
jp
fistps
inc
adc
adcl
pushf
dec
xor
push
lods
cmp
repz
pop
in
outsl
sub
out
sub
push
inc
add
les
xchg
or
clc
pop
ror
mov
dec
bound
pop
push
push
inc
or
popa
xchg
dec
stc
rorb
stos
es
fwait
hlt
pusha
jecxz
jp
and
xchg
les
orb
xchg
in
rorb
sti
push
adc
icebp
add
push
lahf
push
mov
loop
jb
out
xchg
lret
icebp
xchg
test
cmp
mov
out
sbb
div
pushf
push
cwtl
or
jp
flds
adcb
cli
mov
cltd
gs
pmaxsw
pop
mov
inc
push
fmull
mov
imul
sti
jg
popa
dec
cmp
xor
imulb
and
outsl
and
roll
popf
test
add
sub
ljmp
or
andl
xor
dec
leave
push
mov
dec
sbb
and
jb
arpl
push
add
mov
ljmp
mov
cmpsb
pop
jae
test
divl
lock
mov
pusha
lahf
rcrl
pop
stos
xor
mov
adc
bound
pop
mov
push
sahf
add
cmp
movl
cmovbe
pop
or
jns
negb
mov
sbbb
push
adc
or
pusha
fcomps
mov
in
push
mov
push
cmp
and
repz
pop
cs
insb
es
mov
in
rol
nop
xor
cmpsl
jle
fidivrl
lret
mov
mov
shll
add
fldcw
mov
jno
in
aas
test
loopne
lcall
mov
lock
gs
pop
bound
out
pop
adc
jle
or
loopne
jl
jns
sbb
scas
fs
out
sub
mov
pop
divl
fidivrs
lds
das
mov
btr
popa
xchg
fildll
or
inc
xor
push
adc
lcall
inc
mov
out
adc
sub
mov
push
sub
xor
push
cmp
lods
mov
int3
sub
das
fs
lock
push
xor
mov
dec
rcrb
lods
arpl
pop
jmp
jle
adc
pop
pop
addr16
test
pop
mov
cli
sbb
fildll
loopne
push
lgs
xor
inc
mov
out
shlb
sub
fwait
inc
popa
cmp
mov
push
int
dec
loop
and
testl
xchg
into
push
test
ficompl
pop
xlat
mov
xchg
mov
pop
cli
mov
negb
pop
and
das
jo
xchg
pop
pop
cld
mov
xor
sub
push
gs
xor
push
xor
shlb
mov
adc
hlt
or
lret
pop
daa
cmp
repnz
mov
dec
or
loope
jae
shll
adc
sub
out
jg
insl
mov
cmpsl
popa
aam
pop
push
idiv
xchg
push
stc
sbb
inc
nop
dec
cld
daa
scas
insb
adc
aaa
mov
shlb
inc
mov
repz
imul
in
cmpsl
jp
push
xchg
aad
adcb
mov
mov
loope
or
fdivrs
je
scas
test
mov
ret
jnp
and
ljmp
cmc
aam
scas
enter
adcb
std
les
add
leave
ja
cmp
mov
frstor
popf
push
ror
sub
scas
insl
fs
sti
fistps
mov
imul
pushf
pop
hlt
xchg
push
mov
insl
cwtl
je
xorl
push
push
xlat
jmp
mov
dec
sbb
jae
gs
sub
jb
rorb
dec
sbb
into
ss
pushf
aas
adc
mov
and
fucom
xlat
lahf
mov
xor
std
loop
jo
fwait
dec
adc
mov
lea
adc
dec
dec
add
or
mov
fprem
ret
sbb
in
dec
notl
inc
xor
mov
test
testb
sbb
xor
sahf
adc
addl
cmp
nop
mov
adc
mov
lret
cmp
repz
pop
arpl
int
pop
fcoms
ss
ret
inc
xor
sbb
pop
sbb
or
cld
dec
lods
mov
scas
ret
ret
push
mov
and
shrb
push
pop
jne
sub
jo
lds
shll
enter
loope
outsb
push
orb
repz
stc
pop
outsl
shl
js
loopne
sub
lock
dec
and
sub
cmpsb
sbb
sbb
scas
jo
pop
and
je
add
sub
and
std
xchg
and
scas
iret
pop
xor
les
out
insb
fistpl
ja
sbb
xorl
sbb
push
add
or
data16
int
lds
sbb
sub
add
and
cmpsl
arpl
sub
sti
mov
jecxz
mov
ss
mov
insb
jmp
adc
pop
mov
lods
fistpl
je
sub
jbe
loope
or
repnz
mov
add
xchg
cmpsl
repz
out
mov
cmovae
inc
sub
repnz
rolb
sub
jb
lahf
jno
test
adc
sub
das
insb
jmp
hlt
insb
arpl
insb
xchg
jmp
out
xor
and
add
bnd
stos
xchg
movl
sbb
push
iret
fdivs
les
lods
int
cld
jno
xor
fprem
pop
mov
aas
cmp
sbb
btrl
jg
fimuls
mov
mov
pop
enter
frstor
mov
xor
pop
pop
mov
inc
pop
adc
push
dec
cs
aaa
sbbl
movsl
mov
xchg
mov
sub
inc
jno
mov
pop
sti
xchg
mov
fstpl
xor
std
xchg
push
xor
jmp
cmp
sbb
sbb
rcrl
and
les
stos
sbb
jne
or
push
insl
out
sbb
mov
mov
out
call
mov
stos
stc
ljmp
push
mov
imul
inc
mov
xchg
ljmp
es
fs
stos
jo
icebp
sub
mov
fcomps
lahf
pushf
js
mov
in
sub
inc
mov
pop
pop
negb
or
jge
fwait
sub
push
mov
adc
jno
in
dec
jg
mov
mov
aam
dec
cmpb
rolb
lret
add
push
mov
pusha
enter
neg
mov
test
ret
mov
data16
mov
imul
ljmp
fisttps
or
fbstp
mov
sub
popf
out
xchg
loop
push
arpl
lahf
xchg
adc
or
cs
bound
filds
js
xlat
jns
fistpll
in
xchg
iret
xor
mov
test
and
into
and
inc
in
leave
adc
sbb
shrb
inc
dec
cmp
add
mov
xor
or
iret
aaa
adc
sbb
test
lcall
sbb
adc
xchg
cmc
js
out
and
dec
icebp
lahf
push
stos
nop
insl
into
dec
je
out
xchg
mov
fisubs
ljmp
negb
inc
loopne
movsl
xchg
inc
add
in
push
pop
mov
mov
es
jns
stos
loop
pop
sbb
std
add
dec
jb
xor
cltd
xchg
cmp
pop
imul
popa
xchg
mov
imul
cmp
call
bound
aas
xchg
mov
test
scas
in
pop
mov
mov
rcll
or
add
in
test
inc
test
add
std
and
faddl
mov
stc
adc
xlat
mov
loope
xor
or
pop
or
repnz
xorl
dec
lea
aaa
jns
or
mov
sbb
inc
call
cmp
pop
lahf
mov
sub
mov
inc
in
mov
ljmp
mov
clc
sbb
cmp
mov
add
int
inc
xchg
push
push
jae
push
aad
sahf
mov
ljmp
mov
sub
in
pop
mov
inc
pop
out
faddl
push
icebp
fwait
jl
add
push
cwtl
mov
dec
lds
sub
pop
mov
push
lods
sbb
std
insb
dec
in
iret
pop
fs
sbb
cmc
xchg
leave
xor
addl
in
mov
sbb
idiv
and
js
lds
dec
mov
pop
pop
rclb
add
rol
stos
enter
xchg
loopne
pusha
pop
jge
cmp
mov
stc
neg
inc
mov
jb
fcomip
out
mov
lods
ds
mov
dec
shr
add
mov
mov
idivb
mov
stos
add
loopne
jle
push
imul
or
mov
xchg
in
add
fmul
push
sbbb
test
arpl
loope
add
pop
stos
aam
or
stc
push
sbbb
imulb
xchg
mov
test
push
data16
nop
mov
push
outsb
or
mov
outsb
pop
add
and
xchg
dec
ja
add
and
outsb
cmc
lret
loop
daa
fnsetpm(287
cmp
xor
xor
push
cmp
test
cmp
int3
dec
mov
sbb
add
test
mov
ss
mov
aaa
sub
scas
pshufw
inc
loopne
into
mov
ja
in
sub
stos
or
sti
push
jb
xchg
pusha
inc
lods
outsl
outsl
sub
pop
xchg
cs
test
sub
lods
and
inc
xchg
or
pop
xchg
xchg
addr16
xor
xchg
into
adcl
pop
or
push
aaa
hlt
ret
cmp
mov
bnd
ds
test
mov
icebp
sub
cli
std
jg
cs
inc
inc
and
or
mov
dec
dec
adc
xchg
and
ss
or
test
and
sbb
dec
cmp
ret
scas
pop
popa
daa
mulb
mov
mov
xor
or
pop
lahf
and
dec
mov
push
nop
push
mov
sahf
mov
fiaddl
lds
out
imul
scas
mov
mov
mov
dec
sub
xor
in
fbstp
push
ror
pop
jge
lcall
push
jl
leavew
in
js
jae
bound
cmp
or
hlt
push
mov
or
dec
mov
nop
jb
mov
pop
stos
xlat
out
divl
dec
and
mov
xchg
inc
and
cmc
lods
pop
xor
sub
mov
aaa
inc
and
test
test
xor
dec
arpl
inc
addr16
dec
push
jne
adc
test
js
sbb
js
xchg
bound
and
std
push
loopne
out
push
pop
jno
sub
popa
jmp
inc
jecxz
cwtl
sub
jle
mov
and
rolb
mov
cmpsl
iret
inc
cmp
jnp
cli
shrb
stos
xchg
scas
in
aam
jns
xchg
ret
jge
cli
mov
addr16
pop
xor
pop
arpl
or
pop
iret
sbb
pop
addr16
adc
ja
sbb
mov
mov
or
pop
sbb
push
orl
sub
inc
jge
mov
pop
inc
testl
and
mov
dec
xlat
cli
andb
fnstsw
add
bound
leave
mov
jle
fs
jle
mov
aam
and
cmp
addb
xor
cltd
sbb
fstps
iret
stc
and
pushf
cmp
test
pop
aas
mov
mov
mov
rolb
ljmp
dec
add
adc
aas
push
scas
and
mov
sub
add
lods
mov
je
and
sbb
int3
push
push
aam
mov
aas
inc
cmp
jo
mov
je
mov
add
fisttpl
cmp
aas
mov
out
push
xchg
insb
lcall
push
jge
arpl
inc
inc
hlt
repz
lret
ds
cmpsl
xchg
stos
fidivl
aad
sbb
xorl
mov
xor
mov
xchg
xchg
imul
xor
ds
loop
mov
dec
mov
add
rcrl
push
add
cmp
pop
inc
repnz
cmp
sbb
rolb
lahf
stos
loope
jl
std
fs
cmpsb
adc
gs
add
push
or
add
pop
lahf
and
out
or
mov
jno
dec
pusha
dec
push
cmpsl
add
jnp
pop
sahf
xchg
and
movsl
aaa
sub
adc
mov
fisttpl
mov
mov
int3
sbb
outsl
ror
leave
cmp
enter
inc
and
add
outsl
mov
daa
test
lahf
dec
arpl
lret
into
mov
fisubl
bound
add
lea
lea
ljmp
ljmp
cld
push
ret
adc
push
lret
lahf
mov
inc
sbb
pop
xor
es
scas
mov
sbb
xchg
adc
sti
push
xchg
fiaddl
add
pop
xchg
jmp
stos
and
jo
jmp
ja
add
mov
add
xor
sahf
lea
repnz
mov
mov
cmp
out
aas
test
dec
inc
js
ljmp
ljmp
jecxz
inc
loope
xchg
loope
inc
daa
add
and
cmp
jnp
jae
addl
and
fcomps
inc
movsl
sbb
movsb
int3
fisubrs
xlat
lds
test
out
insb
add
lcall
int3
sarb
movsl
rorb
popf
loop
inc
pop
movb
in
lods
into
mov
shl
adc
js
push
repz
xchg
into
mov
pusha
mov
dec
cs
pop
pop
jns
iret
ud1
hlt
test
adc
inc
stos
and
aam
xchg
arpl
shrl
sbb
dec
test
clc
jnp
jl
fcoms
pop
dec
and
dec
cli
xor
mov
nop
clc
sbb
pop
and
js
pushf
cmp
xlat
enter
mov
mov
lahf
sbb
fs
insb
cli
cmp
mov
mov
mov
cld
mov
insb
mov
jg
sub
cmp
add
jb
leave
sub
pop
subb
movsb
das
fisubrs
cltd
fs
andl
adc
sbb
hlt
inc
dec
mov
inc
leave
xchg
adc
add
xor
jns
lods
cmp
lods
popf
fstps
insl
xchg
dec
pop
xchg
iret
les
add
mov
shlb
pop
fs
mov
popf
sbb
enter
push
mov
ret
popa
dec
nop
cs
stos
or
subl
adc
out
adc
and
dec
xchg
or
pop
daa
push
and
add
test
xchg
imul
cmpsl
in
inc
and
xor
scas
jo
outsb
jnp
pop
add
test
test
lahf
xchg
mov
and
mov
add
add
jmp
cmp
imull
add
ja
testl
stc
jns
imul
cld
adc
xchg
leave
int3
push
adc
cli
insb
mov
xchg
pop
lods
ficomps
je
mov
fiadds
mov
cmp
filds
and
call
push
lds
into
vaddps
fs
mov
push
arpl
dec
leave
mov
pop
clc
jle
jecxz
enter
lods
adc
sub
mov
fdivrs
add
jbe
lcall
inc
out
imul
dec
imul
cmp
imul
xor
push
gs
in
mov
mov
stc
popa
xchg
mov
loope
mov
fistps
cmp
pop
mov
mov
jae
enter
jno
pop
aas
cmpsl
es
pop
mov
adcl
push
jae
xor
adc
fwait
add
pop
cmpsl
dec
int
cmp
lret
lds
pop
icebp
out
jbe
cli
in
or
clc
inc
add
sbb
pop
pop
pop
test
shlb
das
imul
movsl
imulb
sub
xor
pop
daa
sbb
in
and
bound
cmc
mov
push
in
dec
and
gs
shll
or
xchg
call
pop
or
fidivs
icebp
xlat
lds
cmp
pop
push
lcall
cmpsl
cmpsb
pop
and
popa
shrb
xchg
fadds
scas
jmp
je
out
icebp
lret
js
test
in
xlat
mov
enter
insb
out
in
pop
movsl
or
je
cs
pop
lea
mov
mov
mov
jne
jp
inc
add
adc
mov
shll
push
push
adc
mov
jns
sub
add
dec
xor
add
xchg
les
int3
cltd
fists
das
enter
pop
cltd
aas
cltd
cmp
daa
sbb
sub
fmull
dec
inc
jae
dec
hlt
addr16
mov
popa
mov
aaa
mov
xchg
sbb
cwtl
in
ficomps
clc
pop
daa
inc
xchg
lds
aaa
cmp
in
and
or
push
int3
movb
shlb
xchg
dec
mov
push
and
mov
inc
imul
aad
push
pop
notb
pop
jg
jmp
xchg
fstpl
xchg
test
gs
inc
in
mov
add
jecxz
xchg
cld
int3
sti
stc
mov
scas
dec
fistpl
push
ds
and
add
cmp
xor
ret
cli
mov
xchg
int3
ror
cmp
adc
inc
pop
or
xor
pop
cli
aas
xchg
xchg
scas
je
mov
mov
push
icebp
cwtl
adc
scas
mov
push
push
into
dec
add
jno
jnp
js
lods
push
pop
mov
lea
mov
gs
out
in
add
and
push
pop
fldl
lret
add
adc
mov
notl
fimuls
ljmp
sub
and
xor
or
mov
lret
and
loope
decb
dec
es
sbb
cmpsl
rcll
in
xchg
repz
push
test
sahf
mov
ret
xchg
and
ficoml
pop
test
sbb
stos
rclb
xlat
push
fwait
xchg
sbb
xorb
stc
dec
shl
sbb
inc
shrl
jo
mov
pop
sub
push
push
pusha
les
mov
mov
sub
adc
stos
enter
jo
mov
test
imul
dec
mov
xor
leave
addr16
cmp
les
xor
icebp
fsubrl
shr
in
pop
sub
mov
cmpsb
and
out
fimuls
push
fs
test
xchg
xchg
popf
xor
shrb
xchg
lods
in
rclb
int
fcmovnb
mov
cld
imul
push
bnd
ja
lock
stc
sbb
into
jno
shlb
cmp
push
scas
addr16
icebp
and
jge
fsubrp
rolw
add
mov
push
jb
sbb
xor
cmpsb
ljmp
insl
cli
in
sub
inc
andb
bound
pop
adc
out
inc
aas
or
into
shll
fwait
lea
loop
sbb
adc
in
out
test
mov
mov
push
clc
dec
mov
adc
fdivl
push
push
scas
xchg
ljmp
push
sti
adc
aaa
mov
shrb
pop
mov
shrl
sahf
sbb
jne
imul
or
push
mov
cmovbe
adc
or
enter
jle
jmp
shlb
popf
fmuls
mov
mov
push
mov
push
lret
mov
ss
sub
or
or
stos
adc
push
mov
out
jbe
add
adc
outsb
cmp
or
and
aad
xchg
lock
mov
ja
xchg
mov
imul
ss
push
mov
push
add
and
mov
mov
cmp
adc
push
in
cmp
iret
or
mov
fcmovb
aaa
clc
stos
mov
xor
lahf
xor
jo
ficoms
outsb
shrl
mov
jo
pop
push
dec
lods
mov
fimuls
xor
pusha
push
push
xchg
pop
adc
or
sahf
call
sub
push
adc
imul
inc
inc
outsb
and
mov
sub
mov
mov
test
cltd
outsl
out
call
lea
dec
loop
push
andl
push
push
in
adc
add
je
push
cld
imul
testl
jbe
cmc
je
sbb
add
cmpl
jecxz
xchg
jl
ret
popf
push
or
aaa
leave
inc
outsb
imul
mov
xor
cmpsb
repnz
es
jge
daa
bound
cmp
ljmp
cmp
sbb
in
pop
mov
mov
pop
imul
scas
pop
adc
xlat
jno
imul
arpl
cmc
or
insl
lret
addl
mov
cmp
mov
cmpsb
aaa
into
shll
pusha
loope
aad
xchg
mov
shlb
in
jno
cli
addr16
cmp
xchg
mov
ret
xchg
and
repz
addb
fiaddl
test
and
pop
es
mov
mov
add
shl
push
dec
rorl
pop
neg
cmpsb
add
pop
dec
es
rolb
sar
mov
sub
out
fildl
pop
in
aam
fnstsw
testl
jge
aam
mov
ret
sub
aaa
sbb
cmp
mov
pop
and
in
daa
das
push
popf
cli
outsb
call
mov
sub
mov
sbb
pop
divl
adc
lods
loopne
mov
shrb
inc
lahf
xchg
inc
jge
push
pop
push
dec
adc
jge
dec
lods
mov
jbe
jg
pop
les
add
cmp
and
outsl
rcr
leave
or
or
icebp
jb
adc
enter
mov
fdivr
dec
inc
cwtl
jne
and
jb
jp
scas
js
pop
push
and
push
adc
xchg
leave
sub
cli
or
xchg
rep
in
jns
or
xor
push
stos
sbb
and
cmc
cmp
xor
mov
sti
in
movl
add
addr16
dec
call
scas
stos
xor
mov
lods
pop
aad
nop
cmp
xor
sub
fnstenv
int
cli
mov
test
xchg
test
add
inc
mov
dec
jno
lcall
and
aad
xlat
iret
incl
out
xchg
out
xchg
leave
lret
rolb
icebp
cmp
cmp
sub
test
jne
push
jnp
mov
dec
cmpsb
jo
cmpsb
out
xchg
lretw
or
and
bound
sub
pop
adc
mov
js
mov
jnp
push
add
push
cmpsb
pop
out
lcall
call
mov
out
jb
imul
inc
sub
adc
add
mov
fsubr
sub
jp
sbb
in
out
mov
popl
and
fistl
jnp
icebp
je
and
scas
and
mov
stc
pop
push
pop
add
and
lea
outsl
daa
jb
aas
pushf
mov
ds
push
scas
xchg
dec
rcrl
add
fdivr
pop
insl
fwait
mov
pop
cmp
mov
cltd
gs
ljmp
pop
cltd
mov
or
hlt
das
sbb
and
bound
sub
popf
mov
add
xchg
cmc
xor
movsl
cltd
cmpsl
das
loop
loopne
leave
mov
jmp
loope
loop
cmp
jp
cs
cmc
cmc
jmp
push
xor
daa
mul
jl
pop
or
jae
xchg
out
sbb
aad
xchg
ja
add
in
and
aad
pop
mov
nop
shrb
rcrb
pusha
ror
sbb
fincstp
push
pop
imul
inc
sti
mov
mov
loope
es
loopne
mov
jle
push
and
inc
sub
push
daa
mov
xor
icebp
cmp
jmp
jecxz
sar
push
popf
lahf
sbb
movsl
add
dec
sarb
mov
scas
fwait
lock
stc
push
movsl
mov
mov
es
popa
push
mov
mov
ficoms
pop
setg
fs
loopne
xchg
jne
fdivl
into
gs
std
add
ja
mov
out
sbb
cwtl
fs
inc
xor
add
xchg
aam
sub
inc
dec
arpl
pop
mov
out
ljmp
cs
xor
jo
and
mov
insb
inc
cmp
mov
aam
mov
aam
aas
sti
shlb
xchg
aaa
sbbl
scas
loopne
pop
inc
repnz
stc
mov
shlb
js
add
pop
jno
xor
mov
dec
xchg
lret
int
push
push
xchg
out
lahf
addr16
xorl
cmp
arpl
subl
xor
xchg
je
into
jge
aas
hlt
sub
mov
inc
push
push
ret
cmp
xor
shrw
jbe
nop
sbb
pop
push
mov
ret
cmp
push
shl
stc
and
and
mov
in
mov
dec
lock
sub
pop
sti
movb
ror
push
mov
cmpsb
ss
fcmove
pop
int3
xor
xchg
jbe
push
push
add
inc
mov
xchg
loopne
mov
sub
fistpll
jb
les
xlat
sbb
push
sbb
fldl
movsl
sbb
mov
js
jae
sbb
xchg
pop
dec
rorb
das
stos
push
sbb
sbb
and
add
mov
ljmp
inc
xor
mov
popf
fisubrl
adc
xlat
jg
push
xchg
pop
lods
pop
jmp
adc
aam
sbb
test
call
ffreep
fists
loope
loope
jne
adc
xchg
add
mov
in
movb
pop
xor
repz
std
mov
nop
rorb
adc
mov
test
nop
jle
je
dec
lahf
cmc
sbb
mov
jecxz
sub
rol
push
std
insl
fstpl
cmp
cmc
mov
mov
push
jo
cmp
or
jbe
adc
call
mov
sbb
not
jbe
push
daa
loope
push
and
jl
mov
xor
int3
ror
mov
movsl
jecxz
inc
jmp
gs
or
inc
mov
inc
mov
mov
lcall
shrb
push
mov
popa
imul
pop
roll
mov
sbb
out
sub
inc
notb
aam
xor
sbb
xchg
test
xchg
std
lods
nop
push
sub
lea
addl
xor
xor
aaa
jo
cmp
sti
aaa
inc
mov
cld
jecxz
xchg
sbb
dec
movsb
inc
jnp
sub
lahf
mov
test
pop
jnp
cmp
sar
outsl
mov
lea
push
mov
mov
mov
ss
cmp
int3
test
sub
sbb
test
fs
mov
shl
je
in
scas
mov
ret
lods
push
dec
aaa
shrl
add
cmp
ljmp
insl
es
mov
pop
mov
nop
stc
repz
fildl
dec
or
aad
fs
mov
js
ret
fisubs
in
inc
jle
nop
mov
rorl
je
icebp
push
push
pop
mov
inc
adc
mov
dec
push
mov
mov
out
push
dec
scas
lcall
clc
stos
inc
stos
stos
inc
xchg
xchg
mov
je
mov
call
aam
mov
sub
mov
sbb
scas
fistpl
mov
fldenv
fists
xorb
jns
add
xchg
cs
mov
push
mov
movsb
or
lods
sbb
js
shlb
push
cs
dec
inc
mov
out
test
jle
dec
push
push
and
icebp
int
fistpll
sar
jbe
push
jnp
int
pop
out
and
in
adc
or
push
in
imul
cmp
add
xor
dec
push
cld
movsb
popf
imul
fninit
imul
in
or
repnz
lds
icebp
push
xor
ja
dec
cmpsb
push
ret
js
cli
mov
mov
and
je
test
test
fldl
fisubs
lods
push
ret
test
xor
lods
pop
dec
shl
xchg
sbb
stos
push
in
xor
rolb
adc
fbld
jne
xchg
mov
and
push
lods
shlb
mov
sbb
jbe
push
loope
das
push
pop
cli
xchg
mov
xchg
adc
lahf
fxam
cwtl
jbe
ficomps
mov
sbb
dec
jbe
loop
push
ja
and
enter
inc
fiadds
stos
jl,pn
movsw
das
sub
xchg
xor
outsl
faddp
lods
xchg
inc
cwtl
mov
sti
sub
lods
in
imul
pop
repz
sbb
jg
stc
xchg
nop
cmp
dec
mov
pop
mov
add
pop
sub
psrld
adc
xchg
lret
xchg
stos
fistps
das
mov
add
add
int
scas
sbb
jecxz
mov
push
scas
dec
pop
int3
push
push
sarl
adc
sbb
sbb
fdivl
cld
xor
and
adc
imul
imul
cs
adc
jb
mov
outsl
dec
insb
out
jno
lock
sbb
xchg
aas
nop
out
add
or
sar
loope
jle
jb
popa
inc
mov
fcomip
leave
das
stos
lds
imul
jne
mov
add
lock
leave
cmpsb
adc
cmpsb
push
sbb
mov
mov
xchg
scas
xchg
lea
or
inc
pop
cmp
xchg
xchg
mov
test
mov
out
xchg
push
cmpsl
out
pop
sbb
arpl
fldt
std
jecxz
jb
mov
fwait
test
inc
mov
rorl
jle
test
mov
push
ljmp
jl
and
mov
testb
fwait
mov
cmpsb
fldenv
das
add
out
cli
mov
aas
cmp
ret
inc
jle
shlb
xlat
push
int3
and
jmp
xchg
stos
mov
add
fs
lea
sahf
pop
mov
xchg
sti
inc
enter
push
add
sarl
sbb
pop
and
cmp
pop
mov
repnz
in
cwtl
std
mov
repnz
dec
lods
lock
rol
and
repnz
dec
mov
pop
or
add
nopl
mov
into
aam
mov
icebp
cmp
sahf
aaa
popf
pusha
or
dec
hlt
pop
ss
in
cmpsl
xor
aas
push
sub
mov
inc
ss
pusha
mov
iret
mov
movsb
in
in
out
scas
movsb
xchg
ss
sub
mov
sub
testb
cmpsb
sub
cmp
gs
cmp
add
dec
mov
inc
push
mov
test
repnz
sete
xor
scas
push
cmovg
or
adc
push
mov
cmp
jbe
stos
leave
mov
cmpsl
add
inc
and
dec
repz
les
hlt
lock
loope
push
jp
nop
arpl
mov
and
out
pushl
cmc
ljmp
into
and
into
mov
mov
pop
out
fdivrs
rcl
rcrb
pop
adc
dec
dec
arpl
js
inc
mov
dec
push
out
and
sub
lret
mov
or
and
xor
jbe
jb
pop
imulb
into
xor
jne
adc
mov
in
mov
push
test
dec
push
push
xor
lret
movsl
pop
in
test
aad
lds
stos
lods
sahf
mov
xor
and
adc
mov
add
les
mov
gs
add
mov
lds
mov
bound
subb
cmpb
push
xchg
fisttpll
mov
dec
xor
adc
mov
lods
aaa
leave
ss
xor
ljmp
divl
xchg
adc
leave
aam
insb
mov
adc
pushl
js
pop
push
or
xchg
and
mov
int3
sub
cmpsl
lret
mov
mov
jmp
mov
xchg
cmp
aas
cmp
sbb
popl
xor
jp
xchg
and
sbb
push
sahf
roll
mull
shr
fdivrs
inc
jecxz
test
gs
data16
incb
insl
mov
lods
xchg
push
sub
mov
pop
fsubrs
mov
xor
ja
or
dec
test
orb
inc
ror
out
jle
cmpsb
sub
sbb
xchg
jnp
arpl
cltd
inc
add
popl
imul
and
cmc
add
fdivrl
jmp
sbb
enter
or
stos
xlat
xchg
push
pushf
rcll
lds
mov
rorb
pop
cmp
xchg
loopne
sbb
mov
xchg
jo
lret
mov
mov
mov
sar
mov
data16
mov
push
jne
rorl
xor
cld
je
dec
fsub
xchg
xor
iret
sbb
ds
lcall
lret
pop
dec
push
mov
out
mov
sbbb
fcoml
fcoml
int
dec
out
or
bndldx
loope
lock
insl
or
sbb
sbb
stc
jecxz
dec
mov
sub
idivb
and
pop
jb
fsts
aas
sbb
xlat
xor
jae
sbbl
lods
lock
adc
sbbl
jb
shlb
push
jno
jmp
ljmp
mov
fmul
in
mov
fbld
dec
arpl
and
dec
adc
cmpsl
notb
jnp
jecxz
cmp
xchg
cmp
mov
shll
dec
enter
or
jb
jno
mov
aam
inc
je
push
adc
lahf
cmp
pop
mov
sub
jmp
lods
sub
jmp
dec
mov
xchg
sub
test
lret
out
jbe
scas
mov
pop
cwtl
push
dec
lds
push
sub
icebp
cmp
dec
in
mov
pop
ss
inc
jns
rcrl
xchg
dec
pushf
cmpsl
xor
mov
mov
hlt
fnstcw
or
sti
inc
push
pop
imul
and
or
sub
jb
pop
std
and
sahf
cmp
icebp
pop
pop
scas
loope
fbld
das
push
pop
jp
cli
xor
jnp
xor
cmp
push
or
mov
inc
popf
cld
inc
push
pop
cs
sub
and
dec
sbb
movsb
xor
cmp
jmp
mov
mov
adc
out
xchg
test
loope
in
ja
adc
dec
imul
in
pop
gs
push
and
test
mov
jns
xor
pop
mov
inc
push
xchg
ds
inc
cli
and
sub
insl
sub
dec
aas
push
aad
dec
mov
cmp
cmp
lahf
decb
mov
rol
add
dec
push
inc
outsl
imul
ss
jnp
inc
pop
or
nop
fwait
sub
das
add
ret
xchg
out
inc
dec
fnstcw
sti
jge
or
ss
xchg
add
and
sbb
lock
aam
pop
in
xlat
lock
aam
ja
dec
inc
or
jo
xor
xlat
negl
sub
fldl
mov
je
rcrb
jne
cmp
xchg
pusha
inc
pop
xor
jmp
mov
dec
mov
jns
xchg
jmp
sub
push
push
out
hlt
xor
xor
mov
sub
and
daa
xor
add
jb
repz
or
inc
add
stc
outsl
and
inc
ss
mov
insb
insl
and
in
mov
push
mov
inc
je
sbbb
test
ret
rcrb
je
lcall
push
in
loope
xor
jbe
dec
loop
pop
lea
rorl
pushf
lret
test
xor
stc
mov
xchg
arpl
adc
push
clc
movb
and
bound
add
adc
xchg
add
xor
push
mov
lock
xor
dec
dec
push
or
rclb
ljmp
push
dec
inc
add
push
mov
xchg
notl
mov
cs
data16
mov
xor
popa
cmp
js
fnstenv
mov
mulb
addr16
cmp
out
sub
ss
pop
mov
sbb
lcall
test
add
imul
add
lret
popf
stos
xchg
xchg
lds
stc
lods
shlb
push
pop
dec
and
pop
les
push
mov
out
pusha
sbbl
dec
les
shrb
mov
ds
push
int3
or
mov
jg
ret
ljmp
insl
push
xchg
mov
adc
out
das
rorl
mov
inc
bnd
into
mov
outsl
jo
xor
stc
or
or
cli
fsubrs
jmp
pusha
pop
out
jge
or
ss
push
icebp
gs
cmc
ret
cld
push
out
jb
push
xor
in
dec
xor
add
or
not
cltd
xchg
fildl
insb
xor
mov
lock
rol
xchg
dec
jle
mov
inc
jmp
aam
sahf
xor
jecxz
jb
xchg
shlb
mov
inc
mov
fisubs
in
jb
adc
cmp
ljmp
and
cmp
mov
fidivl
and
pop
xchg
xor
movsl
cld
xor
fisttpll
lcall
mov
and
dec
mov
sti
sbb
xor
test
mov
gs
and
rorb
loopne
fs
sbb
test
lds
mov
hlt
sbb
int3
mov
mov
ja
sbb
dec
out
stc
test
sbb
pop
test
rol
add
mov
sub
push
mov
mov
movsl
imul
jo
jecxz
push
lcall
sti
jmp
dec
and
mov
in
cs
mov
jno
jo
cltd
jno
inc
add
mov
int
jmp
adc
inc
cmp
je
mov
jae
inc
call
loop
not
adc
scas
aad
cmp
and
test
fcomps
cmp
cmpsl
push
shlb
imul
sbbl
lds
pop
arpl
dec
jmp
in
xor
in
add
xchg
xchg
lock
jnp
mov
pop
lahf
std
loopne
mov
or
ds
adc
in
push
aaa
lock
jbe
cltd
imul
and
adc
ljmp
pop
lret
inc
ljmp
adc
arpl
jo
pop
inc
sub
cld
lcall
sbb
in
rcl
xchg
or
jb
jne
sbb
mov
mov
dec
cmp
testl
loope
push
fcomp
push
fildll
shlb
stos
push
mov
loopne
mov
gs
mov
ds
pusha
mov
inc
xchg
fildll
or
stos
mov
insb
stos
or
std
pop
inc
xchg
aam
push
daa
out
test
xor
inc
test
pop
enter
xchg
inc
sub
lret
mulb
xor
int3
xchg
and
cmp
pop
test
test
fnstsw
fadd
ret
iret
icebp
adc
ja
and
jmp
sub
mov
add
inc
add
mov
rorb
je
fists
pop
cmp
add
mov
push
inc
int
mov
adc
jno
xchg
imul
push
xor
mov
aad
sti
xchg
xor
rclb
pop
fucomp
shlb
jne
int3
push
sub
cmp
cmc
pop
les
lret
dec
cs
push
out
sbb
xorb
je
daa
sub
mov
pop
in
test
mov
insl
add
sub
adc
mov
adcb
mov
inc
push
push
int
mov
and
sbb
rolb
xchg
aam
fnstsw
xlat
es
je
testl
cwtl
out
jae
cmp
sar
je
pop
ds
add
je
in
cmp
xchg
out
dec
test
mov
repnz
and
inc
ret
incb
rorb
fwait
call
das
js
push
push
inc
jnp
dec
enter
imul
add
adc
mov
sbb
mov
inc
xchg
mov
jl
cmp
mov
loop
pop
mov
mov
lret
or
inc
push
lds
adc
iret
and
repz
mov
sub
or
or
loope
icebp
fwait
add
lcall
insl
jno
push
mov
fiadds
push
and
in
pop
xchg
add
and
mov
pop
sub
rcll
inc
sbb
add
decl
pop
sti
repz
pusha
fcompl
push
pop
iret
lret
push
jle
loop
ficomps
cmp
xchg
and
aas
inc
pop
push
or
mov
dec
xchg
mov
daa
mov
xchg
imul
repnz
sub
mov
xchg
mov
lods
mov
dec
pop
popa
add
das
mov
loope
lods
repnz
mov
sbb
imul
jb
das
adc
rorl
pop
cmp
pop
shlb
dec
cmp
out
dec
or
jl
xchg
loop
scas
inc
sbb
dec
xlat
cli
and
mov
inc
aam
lret
lock
in
mov
aam
dec
bound
xor
fwait
iret
in
in
test
adc
sub
mov
xor
xor
dec
push
daa
movnti
aaa
stos
and
jl
sbb
je
jmp
or
shr
and
cmp
fildll
mov
add
cltd
mov
jmp
cld
daa
xor
add
xor
insb
sahf
ja
dec
rorl
adc
shlb
popf
xchg
push
stos
into
in
push
lret
aaa
pop
test
into
hlt
outsl
fldt
int3
cmp
mov
in
icebp
addr16
shrb
xor
aam
cld
sub
mov
xor
mov
jns
testl
xchg
popf
mov
pop
aaa
subb
and
push
cmp
xor
mov
in
ljmp
mov
add
or
cltd
jecxz
icebp
jge
and
imul
stos
inc
xor
push
lds
repnz
inc
enter
rcl
into
mov
inc
pusha
xchg
stc
xchg
xchg
push
xor
xor
cmp
repnz
ficomps
push
or
imul
sbb
add
scas
pop
mov
sbbb
andl
and
ds
push
loop
cld
and
shlb
fisubl
arpl
fwait
or
pop
call
pop
std
rol
fldt
dec
push
adc
jno
outsb
insl
or
mov
ss
cmc
jae
adc
aas
cli
es
pop
sub
popa
rcrb
aad
dec
and
jo
sub
or
pop
repz
out
sar
fsts
popa
into
fwait
sub
add
adc
inc
notb
mov
andb
inc
push
xor
adc
sahf
sub
lcall
add
andb
or
pslld
daa
mov
and
jp
jle
rcll
inc
aaa
repnz
and
xchg
cmp
aam
sub
mov
rcll
fstp
lds
dec
addb
outsb
dec
cmpsb
push
insl
jecxz
jb
pop
and
mov
rcll
leave
jb
rol
add
sub
fwait
mov
mov
or
repz
pop
adc
in
icebp
inc
push
leave
inc
ja
hlt
stos
adc
jge
adc
mov
fsubs
xchg
add
scas
sbb
lret
stc
or
enter
fdivrl
movsb
pop
inc
and
mov
jge
test
pushf
cmc
mov
add
add
pop
mov
ds
pop
and
mov
loop
dec
mov
or
dec
push
call
adcb
icebp
push
std
fimull
push
test
stc
xchg
js
pop
lods
jmp
xchg
lret
add
xlat
pop
mov
xor
ficoml
es
out
fldenv
adc
add
push
sbb
pop
xchg
mov
popf
imul
add
pop
loop
inc
pop
mov
xchg
aaa
and
mov
cmp
mov
loope
mov
lods
push
add
mov
scas
mov
es
xorl
cmp
sub
add
pusha
mov
pop
in
push
mov
ret
and
jne
jo
int3
jb
inc
out
mov
lcall
test
mov
xchg
and
mov
scas
adc
mov
ret
rcrb
mov
daa
gs
and
push
mov
mov
xor
pop
adc
aas
leave
stc
movsb
mov
mov
int
mov
mov
ja
jbe
jg
xchg
movsl
fisubrs
std
and
mov
lahf
pop
bnd
imul
loope
adc
lret
lods
jle
inc
cmpsb
or
jae
aaa
sbb
ret
add
into
adc
int
jmp
xor
stc
ss
lret
sbb
push
outsb
in
stos
sahf
dec
pop
pop
mov
or
adc
std
repnz
lcall
scas
movsl
xorl
xchg
in
ds
mov
das
test
jae
mov
ja
pop
xchg
mov
loopne
mov
jge
cmpsb
inc
adc
mov
imul
push
adc
mov
xchg
sti
pop
push
jb
xor
mov
loop
scas
inc
xchg
pop
inc
mov
add
mov
fsubrl
pop
stos
hlt
sbb
fs
or
test
negb
out
out
cltd
leave
in
lods
push
outsl
inc
insl
ret
sbbb
out
repz
mov
out
cmp
mov
int
or
push
shlb
xchg
or
mov
jge
jae
xchg
xorb
or
xchg
mov
lods
dec
pop
cs
rcll
add
fidivs
nop
jns
push
sub
pop
pop
and
std
decl
pop
or
shlb
xor
adc
aaa
push
shrl
add
add
xchg
pop
mov
and
mov
xor
mov
dec
aas
pop
add
lds
pushf
mov
adc
mov
clc
xor
jo
ds
sbb
iret
pop
lods
mov
or
jbe
sbb
stc
jae
ret
repnz
pushw
mov
add
fcompl
jnp
aad
frstor
lea
jmp
adc
shll
out
cmp
push
inc
movsl
sub
je
xchg
jb
jle
popa
rclb
jae
xor
test
cmp
sbbl
pop
subl
add
std
and
sub
dec
dec
dec
scas
or
push
push
adc
enter
mov
out
mov
idivl
xchg
in
inc
cmp
lahf
or
lret
bound
fldl
pop
jb
jp
in
pop
and
cmp
push
pop
push
add
dec
fdiv
push
sub
adc
scas
popa
mov
sbb
adc
jg
fdiv
es
mov
jl
xchg
adc
int3
stc
mov
cmp
jb
scas
ja
or
ja
cmp
mov
fidivrs
mov
pop
dec
push
test
pop
into
or
mov
cmp
mov
std
dec
push
ds
mov
pop
imul
nop
testl
rolb
lahf
xchg
fnsave
insl
stc
ret
pop
pop
adcb
sub
loopne
aaa
or
pushf
mov
dec
dec
cld
mov
sbb
pop
pushf
lock
and
into
adc
add
mov
lret
and
sbb
sub
push
test
mov
jno
cmp
xchg
or
fnstenv
mov
cltd
cmpsl
mov
add
fldt
cmc
mov
stos
rorb
mov
fisubs
push
hlt
dec
inc
push
xor
sbb
dec
cmp
cmp
stos
cltd
rcll
adc
and
fwait
in
cmpsl
inc
sbb
push
sahf
cmp
leave
iret
inc
mov
leave
repnz
inc
popa
addl
sbb
dec
or
push
das
adcl
jns
scas
addb
fcmovne
fisttpll
adc
cs
cld
dec
stc
stos
shll
mov
ja
jecxz
mov
xor
pop
mov
out
jae
aad
sbb
cmp
pop
adc
push
sbbb
mov
dec
pop
lahf
dec
sti
dec
mov
adc
jbe
jne
jbe
ret
ja
fs
cmp
sahf
insl
and
push
shrl
dec
push
movsl
aaa
int
cwtl
push
es
pop
cs
mov
mov
jns
rcll
test
out
je
sarb
mov
adc
xor
mov
sub
add
xor
lcall
mov
pop
dec
push
sti
xor
jnp
and
scas
jmp
sti
xchg
in
pop
lret
jl
dec
addr16
mov
mov
push
pop
mov
mov
outsb
lock
xchg
lds
xlat
inc
jae
push
insl
sbb
lahf
cmp
cwtl
sbb
daa
sbb
shl
push
pop
lods
jo
ljmp
hlt
mov
mov
leave
fcmovnu
xor
jmp
mov
and
fwait
sti
mov
cmp
inc
insb
sbb
call
ljmp
cmp
imul
pop
sbb
decb
push
sahf
pop
movsb
addr16
ficoms
mov
inc
mov
xchg
jns
cmpsl
ret
fdivrs
cwtl
sub
mov
out
leave
ret
aam
xchg
or
cmp
imulb
mov
inc
inc
mov
xlat
call
je
out
aad
xlat
imul
and
sahf
sub
xchg
sub
jg
test
pop
mov
stos
ja
or
adc
or
or
ja
subl
sub
int
int
mov
fsub
push
stos
xchg
out
iret
enter
lcall
out
inc
xchg
mov
and
and
dec
mov
xchg
push
leave
pop
xchg
pop
ljmp
insl
dec
js
lcall
stos
insb
insb
adc
call
scas
dec
add
xchg
push
jae
movsl
jmp
cmp
lods
add
int
add
cld
inc
aad
cmp
add
xchg
add
int
add
push
jno
popa
sbb
shlb
mov
mov
in
loopne
mov
in
daa
xchg
ljmp
out
jnp
or
adc
mov
mov
pop
inc
fsubrs
adc
pushf
das
divb
stos
pop
movsl
sub
or
stos
test
adc
rol
xor
in
nop
bound
sub
sub
gs
mov
test
add
jbe
test
sub
sbb
xlat
jo
push
das
sub
push
xchg
pop
adc
mov
sbb
and
jmp
xlat
aaa
pop
das
mov
lds
mov
dec
xorl
mov
dec
fidivl
lock
popl
filds
sub
dec
sbb
pop
adc
mov
sbb
xchg
sub
xchg
cmp
sbb
jo
jo
bound
sbb
out
ret
cmpsb
cmp
pop
das
enter
push
jbe
in
inc
fldenv
lods
fcomps
inc
sbb
dec
ficoml
sbb
ret
movsl
sbb
into
sbb
scas
clc
mov
sub
jno
xchg
sub
jge
xchg
pop
add
inc
inc
mov
sbb
aad
adc
loopne
lret
jo
rcrl
or
fs
push
dec
inc
push
bound
in
mov
in
adc
out
xor
jb
mov
rclb
movl
leave
jno
inc
outsl
cmp
add
nop
push
out
cmp
mov
subl
and
sub
adc
jbe
ja
lret
insb
adc
popa
sbb
mov
pop
fucomip
push
mov
inc
sbb
lds
or
out
mov
cmc
leave
mov
leave
cltd
push
daa
push
mov
incl
popa
int3
and
addr16
movsl
fstl
inc
pop
aad
xchg
jmp
or
xor
add
pop
pop
jb
fsubrl
into
mov
add
xchg
movsb
cwtl
adc
add
ud1
cld
daa
test
mov
into
roll
sub
inc
fstpt
cmpb
mov
mov
outsl
lcall
test
mov
cmc
nop
mov
mov
ret
lahf
cld
sub
fstp
sbb
cmpsl
sbb
and
mulb
jns
repnz
cmpsl
out
ficompl
lock
dec
mov
cmpsb
lret
call
or
testl
and
notl
cmpl
add
jno
fimuls
cmp
jo
adc
in
pushf
loop
jns
jmp
out
imul
push
loop
cli
fiaddl
xchg
pop
inc
adc
cmp
cmp
and
xor
insb
pop
push
imul
pop
and
lret
xchg
ret
adc
jl
fstpt
xor
adc
adc
inc
out
loop
jae
or
lcall
sbb
cmpsb
aas
cmp
pusha
cmp
stc
add
xchg
out
inc
daa
add
inc
add
dec
fcoml
addr16
fcoml
imul
insl
xor
aad
or
mov
inc
arpl
es
xor
fbstp
pop
mov
scas
fldcw
mov
jmp
inc
dec
adc
rclb
mov
or
pop
or
mov
stos
inc
enter
sub
jl
xchg
ljmp
mov
pop
add
iret
lret
cmc
xchg
sarl
sub
scas
gs
in
out
fsubs
repz
stc
gs
into
mov
mov
jns
sub
ret
fildl
pusha
imul
aam
push
xchg
push
mov
arpl
out
loop
enter
aas
and
nop
inc
movsb
pop
jge
mov
scas
xor
push
xor
pushl
push
pop
test
adc
xor
int3
mov
adc
enter
inc
out
fists
push
jae
xchg
scas
inc
gs
mov
xchg
mov
sarl
adc
lods
fxch
cmp
movsb
test
xchg
scas
add
call
pusha
sbb
pop
xlat
in
mov
fcompl
mov
fs
out
jle
mov
sbb
pop
xlat
add
sub
adc
loope
fldl
or
and
sub
lcall
dec
xor
imulb
int3
arpl
lret
pop
cmp
loop
leave
inc
hlt
mov
pop
enter
xchg
mov
jno
mov
inc
mov
xchg
out
xchg
and
mov
push
popf
lods
dec
mov
test
aaa
dec
mov
inc
adc
sahf
cmp
lea
mov
adc
mov
sbb
or
jle
jecxz
outsb
cwtl
and
addr16
add
mov
xor
sar
scas
lret
dec
pop
or
xorl
sbb
call
and
xor
mov
iret
mov
xor
int3
notl
mov
out
and
call
ret
pop
mov
dec
jp
xlat
cmp
incb
jp
shl
push
push
sbb
dec
call
sub
push
xchg
fwait
shlb
dec
mov
mov
xchg
out
push
jno
pop
dec
cmp
imul
lahf
call
pushf
push
mov
icebp
jnp
mov
add
sub
pop
mov
ljmp
xchg
xchg
lea
fsubp
cld
pushf
lock
sub
sub
pop
lock
xor
push
iret
push
rolb
pop
ret
lret
sarb
arpl
lods
xchg
pop
loopne
jae
std
add
adc
push
movsb
repz
adc
sub
adc
in
or
lock
outsb
sahf
inc
gs
mov
pop
jecxz
fwait
mov
in
movsl
lock
loope
sbb
jg
jecxz
idiv
stos
sti
add
dec
loope
pop
xor
out
fsts
sbbb
push
push
xchg
shrb
and
in
movsl
xor
shl
jae
adc
adc
cli
decb
shlb
cmpsl
mov
andb
negb
insl
xlat
pop
xchg
loope
mov
mov
ds
cmp
in
cmp
adc
je
outsb
or
pop
jae
lea
jo
lods
xchg
in
loopne
fs
int3
inc
test
adc
rorl
adc
repnz
dec
call
ret
xchg
mov
test
mov
rcll
aad
pop
xor
in
mov
icebp
adc
xchg
mov
leave
les
jae
adc
add
pop
lret
adc
xor
push
mov
adc
cmpsl
test
cmc
neg
push
ss
fwait
clc
dec
push
adc
daa
gs
jmp
loopne
or
cmp
aam
mov
xchg
mov
gs
scas
mov
bound
outsl
jmp
cmc
pop
pop
mov
xchg
je
or
repz
pop
sti
movsb
xlat
cs
dec
in
jno
add
or
nopl
inc
into
stos
mov
mov
push
jno
loop
in
dec
js
pop
or
rorb
enter
lds
sub
sahf
dec
adc
mov
xlat
adc
iret
test
adc
mov
nop
cmp
scas
mov
fiaddl
push
in
adc
and
jecxz
mov
add
addl
cmp
nop
into
mov
jo
movsb
jbe
inc
mov
jne
shll
fimull
dec
clc
pop
leave
out
fistpll
push
push
and
lret
mov
xlat
mov
sbb
mov
add
cmp
icebp
daa
aam
data16
sbb
out
ficoms
inc
lcall
popa
mov
test
mov
into
dec
mov
mov
xchg
xor
xor
adc
faddl
mov
xor
jne
or
cmp
jge
in
jecxz
mov
and
movsb
xchg
ljmp
mov
add
imul
inc
xchg
xor
aad
aas
popf
fnstenv
cltd
jecxz
notb
mov
xchg
dec
xor
inc
andb
xor
pop
lret
stc
xor
and
test
fisubrs
adc
fldl
and
push
pop
cmp
movsl
sar
leave
call
rolb
cmp
stc
aas
sub
clc
rorl
mov
xchg
xor
iret
ret
in
and
mov
push
rolb
mov
into
js
leave
lods
lret
inc
add
add
test
out
lret
pop
inc
lcall
aaa
and
adcl
mov
test
mov
mov
enter
sbb
or
cmp
test
inc
fdivl
pop
js
sahf
push
mov
ret
mov
jle
pop
pop
out
jmp
xchg
adc
xor
out
insb
rcll
fldt
dec
jno
in
jb
fldln2
xor
int3
adc
sbb
imul
fistl
mov
repz
pop
jmp
icebp
out
hlt
movsl
mov
sbbb
xchg
mov
into
inc
mov
xchg
jg
leave
push
jnp
ret
icebp
xor
and
or
add
lods
rcrb
cli
xor
pop
push
and
cmpsl
push
arpl
negb
fisttps
daa
mov
pusha
jae
loopne
push
cli
sub
enter
imul
stos
lahf
lea
nop
pop
cs
lret
aaa
or
dec
filds
pop
sub
sbb
push
and
xor
push
or
add
fadds
mov
or
mov
mov
and
mul
mov
scas
xor
int3
mov
xchg
fistpll
arpl
xor
sub
xchg
mov
shll
jmp
test
pop
loope
fldcw
lea
mov
and
inc
sbb
sarl
or
test
or
std
inc
in
into
data16
lds
add
inc
iret
inc
sbb
stos
fidivrl
test
xchg
divb
adc
jg
icebp
jmp
push
cld
sbb
sub
lods
adc
fcmovne
or
push
shll
test
push
sbb
scas
das
and
adc
outsl
and
or
insl
mov
ja
cwtl
and
fadds
dec
dec
jmp
in
add
jecxz
scas
scas
jb
mov
and
add
mov
dec
or
jg
mov
jbe
shlb
pop
xor
jge
and
jne
adc
push
jns
mov
cld
bound
sub
inc
lret
dec
mov
push
jl
lret
sub
orl
mov
pusha
dec
mov
sub
mov
sub
xchg
nop
jmp
mov
pop
jae
jno
fnstenv
cmp
pop
add
jl
push
mov
dec
inc
sbb
pop
orb
push
lret
loope
dec
imul
inc
sbb
cmpsb
stos
mov
repz
sbb
mov
xorb
arpl
dec
jp
or
xchg
mov
int3
sub
testb
cmpb
cltd
sbb
mov
lret
and
repnz
and
imulb
cmp
cmpsb
fdivrs
ljmp
lcall
xor
insl
mov
les
cld
sub
sub
add
cmp
dec
pop
cwtl
and
cmc
mov
and
cmp
dec
sub
fbld
push
xor
xchg
fcomps
lcall
jmp
add
sub
and
mov
xor
dec
test
mov
jb
sahf
inc
hlt
jmp
loopne
mov
xchg
cmp
push
ds
pop
int3
mov
pop
sti
std
or
and
xorl
mov
mov
jl
and
or
mov
clc
adcb
loopne
cmp
test
add
xchg
pop
stc
repz
out
cmp
ds
and
or
lea
sub
repnz
cmpsl
ljmp
sti
sub
mov
btl
das
loopne
mov
fcomip
xchg
pop
mov
jp
xor
jmp
and
or
inc
mov
mov
and
xor
test
mov
mov
mov
sbb
sbb
xchg
cmpl
mov
mov
cmpsl
jb
pop
aam
lock
mov
lahf
inc
jns
cwtl
dec
push
mov
mov
int
mov
jae
jo
les
flds
dec
inc
push
pop
mov
mov
sub
in
mov
pop
scas
nop
aad
jb
dec
mov
jl
lods
es
out
sbb
xchg
jg
imul
rcl
pop
cmpsl
fsubl
rcrb
mov
shll
add
inc
xchg
mov
into
int3
shr
cwtl
jecxz
push
sbb
idiv
mov
lds
ja
sbb
mov
jb
lods
ss
ret
mov
fdivrl
jae
pop
xlat
xlat
scas
mov
sub
and
sahf
mov
sub
repnz
lock
and
inc
pop
out
pushf
jae
jmp
shl
mov
mov
in
mov
mov
popf
push
mov
jno
gs
mov
inc
outsb
je
sub
icebp
xchg
dec
xchg
mov
cmp
sti
mov
cwtl
sub
adc
add
repz
or
mov
mov
je
loope
cwtl
in
push
add
stos
out
insl
jecxz
sbb
enter
mulb
insb
out
inc
das
or
or
push
std
scas
mov
test
mov
in
pop
scas
sarl
imulb
iret
inc
outsl
push
lds
and
mov
in
leave
movsb
fsubs
cld
push
andl
mov
scas
loop
test
jmp
dec
dec
mov
inc
incl
ror
scas
stos
loopne
cmp
stos
inc
cmp
push
add
cwtl
inc
cli
and
cmpsb
add
or
push
mov
loop
pop
add
scas
test
stos
push
push
jge
dec
ret
mov
scas
and
cmc
fbld
notb
imul
xchg
jge
enter
pop
popaw
pop
dec
add
jb
xchg
pop
in
dec
xor
cmp
shrl
mov
fwait
aam
js
push
push
push
dec
and
pusha
pushf
cmp
xchg
inc
mov
aam
js
daa
inc
cltd
xor
add
cmp
inc
mov
shll
pop
jbe
std
das
cmc
into
xchg
shl
nop
hlt
cs
and
jb
push
pop
xor
inc
rorb
and
jne
sub
sahf
fbld
cld
out
xor
icebp
ss
ds
cmp
jne
pop
pop
inc
out
xor
cltd
punpckhdq
inc
xchg
mov
lea
in
push
cmpsb
pop
test
add
js
aaa
pushl
inc
mov
cmpsl
or
pop
dec
push
xchg
sti
repnz
jnp
mov
aaa
pop
pop
add
fcmovbe
mov
lahf
xchg
pop
mov
cmpb
cmpsb
neg
add
leave
les
outsb
sbb
orb
subb
jae
dec
push
xchg
push
stc
xchg
push
fsts
cld
outsb
jbe
add
les
push
cmp
adc
mov
mov
pop
int3
test
push
mov
cmp
sbb
dec
test
std
js
mov
scas
mov
popa
mov
xchg
je
xlat
or
je
jne
pop
mov
imul
movsb
lods
dec
mov
xor
negb
inc
sbb
jae
test
les
mov
cli
mov
movsl
enter
jb
cmc
je
mov
leave
push
mov
jae
psubd
or
lret
mov
and
xor
mov
push
ja
cmp
rclb
insl
pop
mov
dec
mov
outsb
fs
jmp
scas
xor
xor
mov
jp
add
mov
push
xchg
add
jno
cmp
pop
jg
mov
das
adc
mov
mov
roll
daa
pop
fisubrs
lds
jle
push
sar
mov
out
add
push
xor
in
scas
cmp
inc
xchg
dec
into
xor
popa
out
dec
aaa
lcall
jp
xor
sub
mov
ds
cmp
ficomps
and
outsb
jecxz
test
and
in
jne
lahf
aaa
ret
imul
insb
popf
sub
and
and
je
outsl
aaa
and
inc
gs
pop
mov
cmp
mov
mov
arpl
sti
icebp
and
sbb
mov
push
dec
outsl
pop
xchg
jno
rcl
inc
or
movsl
adc
test
mov
add
aad
bound
push
lea
push
cmc
icebp
mov
push
fbld
xchg
aad
dec
add
out
jae
std
out
sub
sub
xchg
rorl
in
imul
inc
pop
xor
addr16
mov
call
arpl
lahf
hlt
and
das
mov
cmp
jno
push
lcall
push
fdiv
add
outsb
lret
cli
cmp
pop
sahf
cmp
push
pop
adc
sbb
cli
cmp
addl
mov
scas
int
pop
dec
mov
sub
push
jp
jmp
rcrb
xchg
incb
cmp
cld
mov
or
aaa
icebp
cli
mov
pop
arpl
ljmp
jp
leave
shl
fiaddl
shr
sbb
xchg
loop
fsubs
inc
fidivrl
xchg
xor
and
cmp
leave
or
popf
mov
in
repz
rcrl
dec
push
into
sahf
xor
inc
lret
mov
jg
cmp
into
inc
sub
xchg
scas
sbb
mov
insl
pop
add
dec
enter
pop
jmp
leave
dec
mov
xor
cmc
outsb
out
call
int
test
cwtl
adc
inc
xchg
and
sbb
inc
scas
rclb
and
lahf
addl
pop
ds
mov
adc
lea
inc
push
fdivr
inc
jle
mov
dec
adc
pop
inc
or
jno
mov
push
push
dec
inc
fimuls
xchg
scas
movsb
adc
cmp
dec
fisubrs
and
xor
js
icebp
and
inc
adc
adc
loop
jno
mov
loop
xor
and
test
std
fnsave
ds
popf
mov
mov
dec
adc
jl
cmp
pop
subb
sub
adc
inc
mov
dec
movsb
pop
ret
cs
outsb
mov
add
sarl
push
ss
pop
insl
add
inc
js
lods
addb
aad
pop
sti
mov
mov
dec
mov
xchg
imul
rep
in
dec
mov
push
repnz
mov
je
mov
ds
out
adc
in
icebp
xor
sub
push
cmpsl
fidivs
xchg
or
xor
push
repnz
fnstenv
adc
out
cmp
mov
and
sub
mov
jb
mulb
xor
mov
jle
xchg
and
push
mov
xor
out
dec
rcl
push
mov
sarl
xor
sbb
pop
cltd
movb
std
ret
jbe
or
xor
out
and
lcall
add
push
push
fs
mov
std
cmp
out
ss
jle
jne
jmp
mov
xchg
aaa
negl
or
mov
fwait
and
xor
repz
add
add
sbb
loopne
repnz
sbb
pop
or
int3
es
orl
xchg
loopne
lods
xor
rol
stc
xchg
lea
mov
cmp
insl
cwtl
add
sub
adc
jnp
lea
inc
inc
add
mov
scas
lret
mov
inc
out
int3
insl
mov
xchg
lea
cli
push
jl
add
lock
bnd
add
ror
cmp
lock
enter
inc
cld
sbb
loopne
xchg
jmp
test
pop
inc
jle
xor
mov
mov
mov
in
shr
or
inc
cmc
push
pop
into
and
fmuls
ret
sub
adc
adc
cmp
push
std
sbb
and
mov
mov
mov
fs
mov
cmp
inc
fiaddl
sub
loope
mov
test
arpl
jnp
adc
fldt
repz
cmc
ret
aad
insb
cld
xchg
in
scas
fcomi
into
cmc
mov
cli
cmp
cmp
pop
jecxz
pop
leave
inc
xlat
inc
jg
xchg
inc
decb
sub
adc
int3
int
add
mov
repz
xlat
mov
adc
sub
fstp
mov
sub
lock
sbb
stos
sub
lods
lock
push
sbb
xchg
mov
xchg
shll
jl
mov
std
or
ss
rcr
loope
sahf
sbb
into
mov
jg
inc
inc
adc
insl
fucomp
shll
xor
pushf
sub
insl
mov
mov
adc
dec
movsb
test
adc
fsubs
mov
imul
mov
pusha
into
orb
cld
adc
sarl
inc
inc
push
xchg
cltd
fisubrl
insb
mov
adc
pusha
cmp
xor
adc
popf
xchg
and
jae
mov
stc
shll
jno
inc
dec
js
movsb
push
aaa
jbe
push
loope
xor
movsb
mov
dec
mov
clc
pop
popa
add
pop
push
lods
in
xchg
xor
int3
add
jge
add
cmp
push
imul
das
shlb
aam
outsb
mov
sbbl
jg
jbe
adc
repnz
int
jp
jp
sub
mov
in
adc
pushl
add
in
pop
push
adc
fucom
shrb
pop
movl
mov
aad
cmp
cmpsb
xor
loope
stos
shl
sbb
sub
out
scas
sarb
sbb
cmpsl
xchg
xchg
mov
add
add
fnstcw
int
mov
subl
xor
xor
pop
lock
add
pusha
in
mov
pop
repz
jnp
out
adc
xchg
fisubrl
push
outsb
or
fsubrs
loop
ja
mov
inc
xor
dec
mov
lods
jmp
stc
mov
mov
leave
push
repnz
sub
fs
xchg
mov
push
mov
cs
rorl
pop
or
daa
mov
popa
test
cmpsl
sub
pop
rep
jecxz
popa
stos
mov
lahf
loope
repnz
sbb
ret
or
shlb
imul
sbb
and
shrl
xchg
lret
and
push
push
mov
out
sti
jne
arpl
mov
mov
pop
mov
fildll
push
fmuls
mov
xlat
sub
jo
add
sbb
xor
mov
xlat
pop
mov
aad
test
lret
push
pop
xchg
dec
adc
and
cmpsl
mov
and
xchg
add
add
inc
loop
and
sbb
xor
scas
in
mov
and
or
out
daa
jo
lahf
arpl
dec
decb
cmp
cmpsb
inc
cmp
jg
call
sub
div
pop
pop
push
adc
mov
clc
leave
inc
mov
pop
shrb
nop
mov
push
fidivs
cmpsl
cmpsb
notb
aam
sub
stos
add
cwtl
jp
cs
es
xchg
sahf
adc
mov
outsl
arpl
test
hlt
je
push
jge
inc
or
sub
or
fnstenv
icebp
dec
inc
add
std
arpl
mov
xlat
std
adc
in
sbbb
push
jb
inc
notl
sbb
dec
pop
sti
mov
data16
mov
mov
orb
cmp
in
xchg
out
movsb
leave
pop
add
mov
out
arpl
into
sbb
xchg
lods
push
mov
push
sti
fsubp
lds
add
or
ret
adc
mov
sub
adc
lret
pushf
push
inc
lcall
cmpsb
inc
add
jns
out
jbe
mov
imul
jmp
sub
mov
into
mov
jnp
std
pusha
xor
divb
into
sub
cmpsl
repnz
shrl
out
sbb
ljmp
repz
test
int
mov
ljmp
dec
fs
rcrl
andl
sarl
rcl
cmpsl
std
add
in
out
sbb
or
sbb
enter
cmp
cmpsl
repnz
popa
pusha
cwtl
cmpl
and
pop
xchg
in
pop
xor
adc
outsl
je
rcr
lock
inc
lock
jae
xlat
inc
ljmp
loope
xchg
dec
mov
sub
sub
dec
mov
data16
fdivr
ret
mov
pushf
mov
filds
je
imul
jb
rcrb
add
xchg
in
addl
pop
cmpsb
loop
jp
mov
mov
push
jae
in
lea
ret
out
cld
clc
fcoms
pop
mov
cltd
mov
testl
adc
xor
loop
mov
dec
cmpsb
pop
push
add
xor
jbe
ljmp
enter
lea
adc
dec
pushf
scas
cmp
jle
pop
and
jnp
scas
popa
int3
xchg
push
add
cmpsl
push
daa
cli
xchg
inc
pusha
sarb
jns
and
popf
movsl
fstl
out
fsubs
sarl
loopne
lods
mulb
push
sub
cmp
enter
and
fstp
dec
lcall
sub
dec
ret
dec
daa
mov
negl
sub
call
loop
les
inc
and
movsb
and
dec
repz
pop
ja
test
inc
cltd
mov
cltd
stos
outsb
aad
jae
out
xor
push
and
lahf
punpckhdq
adc
popa
or
loopne
imul
pop
cmp
pop
xor
fs
sub
inc
mov
cmc
push
push
jne
stos
mov
popf
mov
lret
in
xchg
cmc
or
fisttpl
xchg
mov
push
jae
add
or
rcl
sub
test
push
lcall
push
pop
fsubrl
fucompp
or
int3
fsqrt
inc
call
cmp
inc
jb
out
pcmpeqw
and
pop
xchg
add
outsl
mov
xor
jecxz
aaa
pusha
push
jno
pop
jne
cmc
sbb
fsubl
pop
inc
or
gs
int
rcll
push
jb
ja
nop
bnd
jle
fdivr
fsubs
inc
pop
inc
adc
xlat
xchg
or
leave
popf
pop
sub
jo
xor
icebp
add
movsl
xlat
jmp
dec
ret
push
inc
int3
xchg
movsl
mov
lcall
pop
aam
xchg
cmp
xchg
jne
sub
push
mov
adc
mov
mov
or
test
ret
push
push
or
stos
stc
fucomi
jecxz
out
push
stos
gs
push
mov
or
lods
in
mov
sub
push
jb
dec
push
jp
lcall
ljmp
cmpsb
and
xorl
sub
jno
mov
rorl
push
scas
ss
aam
cvtpi2ps
inc
push
mov
lcall
imul
cmp
lret
mov
add
jbe
int3
ds
out
inc
stos
outsl
cmp
in
dec
adc
out
mov
dec
adc
inc
test
add
fsts
and
imul
mov
add
mov
inc
or
or
jge
cmpsb
enter
cwtl
xchg
sub
pop
int
ljmp
hlt
mov
push
jns
packsswb
and
rorb
mov
push
cmp
inc
cmp
mov
dec
pop
and
lds
mov
lcall
femms
sbb
adc
jbe
incl
and
push
pop
imul
jae
cmpsb
and
sbb
adc
mov
push
fbstp
ja
jge
sub
pop
test
push
lods
xchg
xchg
outsb
fsubp
les
push
lds
sub
mov
rolb
lcall
mov
fsub
into
sub
daa
push
cmp
jnp
js
mov
faddl
fdivs
stos
or
adc
call
cmpsl
dec
loopne
mov
cli
adc
rcl
mov
adc
jmp
into
data16
push
push
mov
cs
mov
call
xor
mov
inc
sub
or
lds
xchg
sbbl
mov
dec
xchg
push
incb
in
cwtl
sbb
push
mov
cltd
cmp
dec
push
lds
mov
inc
fsubp
xchg
push
int
mov
movsl
fnstenv
jns
xchg
sbb
out
daa
jecxz
je
xchg
and
shll
pusha
add
divb
lods
mov
mov
cwtl
sub
fs
into
or
outsl
int3
scas
sar
push
cmc
mov
sub
and
aad
pop
push
repz
mov
out
enter
mov
testl
jo
movsl
in
dec
lods
pushf
out
xchg
jle
mov
cld
jmp
pop
and
repz
sub
shl
test
stc
inc
xlat
test
push
xor
aad
and
lcall
sub
div
rcrb
lahf
dec
and
xor
mov
inc
sbb
dec
gs
daa
push
pop
shll
cltd
xor
out
stc
out
cmp
cld
mov
xor
mov
cli
cmp
in
in
in
or
outsl
cli
adc
repnz
push
les
or
jl
xchg
icebp
xchg
add
rorl
xor
adc
mov
jle
push
aam
movsb
jo
mov
jmp
bound
or
push
std
mov
icebp
xchg
mov
jbe
ja
stos
mov
or
dec
das
sub
imul
add
outsl
stc
int3
adc
ret
sub
sbb
lods
mov
popf
xchg
fwait
idivl
sbb
cld
arpl
mov
jle
scas
pop
xchg
cltd
mov
and
dec
das
das
adc
cld
lods
lret
mov
xorl
scas
jg
cs
ret
dec
cmc
test
push
js
sahf
adc
jl
cmp
mov
xchg
pop
jnp
or
aam
add
jecxz
mov
in
push
or
xchg
adc
cmp
mov
pushl
jae
xchg
pop
fisubl
pushf
mov
mov
aam
stc
loope
mov
mov
jns
mov
cmpsl
and
sub
adc
cmp
mov
jg
cmp
jle
iret
fsubrs
and
repz
imul
inc
or
loope
dec
mov
ja
dec
test
stc
push
lods
xor
jmp
jge
push
mov
push
dec
lahf
push
fidivrl
stos
pushf
aad
sbb
scas
movsb
js
or
aam
testb
adc
mov
lret
rcll
pushl
test
in
jmp
dec
inc
pop
push
cmp
inc
scas
adc
test
jb
ret
mov
stos
jmp
iret
idivb
xchg
scas
jae
or
pop
cmp
push
adc
lds
mov
imul
adc
loope
decb
xor
sarl
adc
std
add
in
es
or
xchg
loop
ljmp
dec
jl
gs
xor
push
bound
iret
pusha
mov
and
fisubrs
mov
mov
je
movsl
xor
adc
xchg
and
sub
bound
popa
jns
mov
es
enter
nop
fdiv
outsl
out
jns
nop
arpl
adc
push
loop
fcomp
mov
sub
and
mov
push
cmpsb
mov
add
lahf
cmp
inc
mov
pop
xor
mov
pop
mov
or
movsl
pop
xchg
jne
push
lret
push
xor
daa
sti
pop
lret
movl
arpl
sub
bsr
push
idivb
lcall
and
call
mov
inc
stos
jo
mov
jl
lret
mov
js
xor
adc
popf
sbb
es
repnz
sbb
dec
insb
adc
jae
push
pusha
icebp
xor
hlt
sbb
pop
aaa
pop
xchg
mov
aad
xchg
jge
in
or
pop
pushf
scas
mov
pop
rol
xor
jl
add
negl
dec
push
mov
xor
sbb
inc
testl
adc
and
push
sbb
sarl
sar
jecxz
and
call
adc
mov
mov
pop
dec
cwtl
rorb
int
cmp
jge
scas
loope
mov
stos
lds
out
sub
cmpsl
repz
push
loop
or
mov
lahf
mov
leave
jno
dec
mov
frstor
ja
arpl
xor
xchg
cltd
and
xchg
jns
std
push
rol
ja
test
stc
mov
ret
pop
inc
xor
sti
xor
dec
fimull
push
into
loope
sahf
adcb
push
push
into
and
test
into
sbb
xor
xchg
das
sahf
push
out
mov
gs
inc
popf
dec
dec
bnd
jecxz
bound
repnz
add
xchg
js
int3
sbb
ss
stos
pop
stc
inc
mov
imul
ss
cmc
mov
xor
popf
ret
adc
xlat
and
push
mov
adc
ret
nop
aaa
les
or
add
subb
mov
jnp
fwait
jne
xchg
add
aad
fiaddl
mov
loop
sub
mov
lods
test
pushf
and
mov
sub
shlb
mov
xchg
mov
movsl
mov
jb
jo
add
jecxz
cmp
jl
xchg
rcl
rol
arpl
dec
movsl
push
jmp
mov
push
cmc
lods
push
cltd
scas
sbb
je
mov
fnsave
or
ret
push
sub
fistps
or
jns
xchg
cmpsb
mov
stc
lcall
jns
stc
add
mov
add
xor
add
mov
fcomps
push
mov
pop
pop
fdivl
xor
into
sub
ss
or
outsb
cmp
mov
adc
mov
mov
flds
ja
add
push
std
loop
mov
sbb
stc
dec
sbbl
das
sbb
iret
ret
lret
add
adc
lds
pop
cmpb
cmp
sub
xor
mov
lret
outsl
insl
jge
mov
mov
mov
je
mov
sub
jmp
sbb
mov
jmp
pop
lods
sarl
add
das
stos
out
adc
jns
pop
loop
pop
jp
xchg
xchg
pop
sbb
pop
cmp
rclb
int3
mov
movsl
in
das
or
in
repnz
leave
adc
in
push
mov
scas
sbb
stos
int
add
cwtl
lret
adc
or
xor
lock
dec
push
sub
jg
lcall
cmp
sbb
decl
sub
sub
dec
sub
or
movsb
sbb
adc
stos
jns
cltd
cmpsb
sar
mov
and
push
cld
jno
iret
pop
cs
mov
enter
pop
movsl
sbb
sbb
test
aaa
jno
mov
fcomps
inc
test
pop
xchg
pop
inc
dec
movsl
imul
orl
dec
add
dec
mov
imul
fisttpl
add
and
dec
imul
push
hlt
in
jg
dec
out
dec
cld
pop
stc
xor
push
addr16
cmpb
jge
in
and
adc
push
int
sbb
jp
inc
adc
xor
mov
je
or
dec
jne
cmp
lea
mov
pop
imul
scas
loopne
sbb
xchg
sbb
aad
or
mov
xor
xchg
shrb
dec
push
les
jb
pop
xchg
xchg
cld
push
enter
pop
sbb
xchg
push
pop
dec
cmc
pop
pop
sbb
and
stos
popf
pop
pop
xchg
jge
dec
push
mov
mov
sti
imul
cltd
push
das
mov
pop
scas
addr16
fdivrs
pop
lock
lret
fucomp
mov
out
loopne
loope
stos
nop
pop
jb
lods
popa
adc
in
addr16
add
test
cld
out
outsb
mov
inc
mov
flds
inc
lret
out
sub
out
push
dec
xchg
pop
push
sbb
mov
lods
inc
mov
or
loopne
cwtl
pop
movsl
lods
addr16
nop
insl
mov
xchg
iret
icebp
ret
nop
push
jnp
mov
and
inc
mov
imul
add
sub
negb
push
adc
xchg
or
test
jmp
in
cwtl
dec
inc
mov
mov
int3
scas
and
sub
dec
sub
push
popa
inc
es
call
push
xor
cmp
push
testl
add
imul
mov
mov
mov
xchg
lea
faddl
pop
test
and
scas
cmp
mov
iret
loope
cmp
sarb
das
or
shll
repz
and
xor
mov
int
jge
sub
iret
test
sti
lcall
push
pop
and
and
or
jbe
jge
vpsubb
sar
mov
rorl
sar
push
or
xor
jmp
add
sbb
int3
jae
cld
xor
push
lds
dec
add
mov
cmpsb
mov
pop
loopne
arpl
inc
xchg
cmpsl
mov
lods
push
test
add
outsb
call
jbe
cmpl
add
call
sbb
dec
rcl
stos
cmp
fs
shrb
push
repnz
mulb
gs
lcall
shlb
sub
roll
adc
test
daa
ds
fmul
sub
les
add
or
cmp
sub
adc
mov
rolb
mov
adc
int
push
sub
sbb
aaa
jbe
insl
shl
outsl
repnz
mov
mov
adc
std
pusha
rcrb
xor
xlat
sahf
and
data16
cmp
ss
inc
mov
test
pop
mov
imul
iret
lods
repnz
mov
xlat
xchg
jle
repz
jmp
xor
adc
sbb
pop
push
or
push
xchg
in
sbb
insl
jae
sub
adc
dec
nop
mov
xlat
mov
inc
adc
and
inc
aas
jnp
imul
inc
out
mov
mov
iret
popa
in
dec
subb
and
xor
push
daa
call
push
mov
mov
cs
jl
dec
sub
or
pop
into
orb
or
arpl
jne
push
xchg
mov
mov
or
mov
mov
dec
div
hlt
std
pop
pusha
popf
pop
mov
pusha
int3
push
adc
jl
sarl
loop
jl
jl
push
je
add
pop
test
mov
cmpsl
insl
xchg
mov
leave
ds
sbb
sarl
dec
xchg
mov
sub
popf
shll
pop
out
gs
cmp
mov
sbb
lret
inc
push
add
lods
mov
xchg
or
icebp
outsl
movsb
or
subb
pop
mov
pop
jp
out
dec
lea
loope
out
push
loope
scas
call
rorl
outsb
add
push
cmp
mov
shll
icebp
lods
push
daa
sti
in
add
push
mov
cmp
mov
push
inc
add
pop
js
push
dec
sahf
pushf
mov
stos
jno
pop
jbe
push
sbb
sub
adc
js
add
call
sub
pop
fisubs
cmp
cmc
mov
mov
dec
je
mov
jp
sub
adc
jecxz
or
cmp
adc
jg
testl
jae
test
xchg
cmp
fs
ret
test
test
cs
pusha
xor
jo
mov
jno
pop
enter
and
lret
call
dec
scas
adc
hlt
dec
adc
dec
cmpsl
or
fldt
mov
and
ja
sbb
test
jnp
imul
ss
xor
outsl
ljmp
inc
or
out
push
icebp
aaa
in
pop
push
bound
popa
mov
pop
leave
pop
test
adc
mov
std
pushf
pop
mov
shlb
xchg
fwait
xor
adc
mov
ss
mov
jecxz
pop
movsb
dec
cmpsb
scas
and
ss
pop
repz
dec
clc
addr16
mov
cwtl
repnz
add
mov
adc
pop
push
fstps
adc
in
jle
sub
sbb
inc
pop
sbb
lea
arpl
push
js
hlt
fdivrs
inc
adc
mov
es
test
out
jle
inc
inc
lods
in
fildll
push
test
fwait
leave
fsubl
mov
mov
addr16
jl
movb
xchg
pop
les
jo
add
jae
ja
dec
in
sti
sbbl
cltd
cmp
sub
push
imul
daa
or
outsl
and
mulb
pop
clc
sbb
fmulp
loopne
or
xchg
sbb
sbb
jge
push
mov
add
stc
cmp
adc
sub
add
mov
push
dec
mov
jns
mov
inc
xlat
movsl
stc
int
and
xor
stos
insl
nop
movl
jo
in
fidivl
adc
mov
enter
lods
addr16
cmpsl
cwtl
andl
test
lahf
pop
into
fwait
xchg
loop
outsb
test
push
and
cld
icebp
jno
movsb
sub
aad
sub
dec
xlat
nop
or
cmp
sub
out
call
in
dec
scas
gs
mov
mov
loop
and
stc
mov
push
jecxz
or
outsb
mov
fadds
rcrl
outsb
sbb
hlt
out
jge
push
or
fdivrl
iret
cmc
cmpsl
fldt
push
sub
into
testb
bound
loopne
fcmovnbe
mov
sub
lods
inc
and
lret
shll
lods
dec
jb
mov
xchg
sbb
pop
push
js
clc
sahf
or
das
sbb
jp
lock
and
pushf
push
nop
push
xchg
xor
xor
pusha
shrb
repnz
xchg
cltd
jmp
test
ja
inc
and
pop
mov
int3
jmp
aad
sbb
cmc
rcrl
lcall
and
pop
stc
cmp
neg
and
outsl
in
jb
adc
or
nop
negl
insl
jge
mov
and
push
insl
dec
aas
mov
or
test
sbb
and
dec
ret
push
push
cld
daa
mov
bound
push
adc
orl
in
adc
lret
sbb
mov
lock
ja
xchg
xchg
mov
mov
stc
hlt
inc
lods
mov
cmp
push
lret
mov
loopne
or
out
sbb
inc
sub
or
xor
mov
mov
mov
inc
and
inc
or
xchg
xchg
dec
mov
shrl
mov
xchg
arpl
bound
mov
cmp
mov
fnstsw
pop
push
cmp
iret
inc
ds
adc
dec
pusha
std
stos
cwtl
adc
add
sbb
mov
pop
jecxz
mov
adcb
loope
xchg
mov
insl
cmc
mov
push
mov
adc
and
mov
daa
sub
dec
adc
shr
push
mov
dec
add
out
clc
orl
out
in
dec
in
bound
insl
cmp
test
and
mov
add
fisttpll
push
inc
sahf
cltd
mov
xchg
mov
xchg
and
dec
pop
dec
loopne
jl
xchg
pop
cmp
cli
sarl
sub
adcb
mov
sub
sub
add
jnp
loop
cmc
mov
js
nop
arpl
ja
scas
mov
jno
jp
fcompl
sbb
inc
bnd
std
enter
adc
stc
push
out
xor
xlat
dec
shrb
xchg
jne
nop
pop
sbb
ja
or
nop
cld
iret
lcall
aam
add
clc
inc
cli
xor
cmpsb
lret
push
push
cmp
pop
adc
dec
mov
testb
jnp
imul
int
pop
and
jmp
addr16
push
loop
mov
mov
add
in
arpl
cld
mov
sbb
xor
out
mov
js
push
test
loopne
ret
std
push
push
outsb
cmp
cwtl
je
sub
cmp
sbb
iret
fs
mov
testl
addl
je
divb
add
jo
xor
sbb
cltd
orl
lret
rcr
lods
xchg
gs
xor
les
imull
xor
int3
xor
mov
mov
pop
loop
clc
jb
xchg
xchg
xchg
mov
mov
sub
xchg
or
pop
outsb
inc
xchg
pop
xor
cli
fstps
mov
shll
les
mov
out
lods
xor
lods
sbb
arpl
dec
je
inc
in
in
and
and
mov
push
push
jnp
outsl
push
outsb
movsb
test
pop
sti
insl
mov
scas
xchg
pop
ja
sbb
int3
cmp
jl
and
adc
mov
jno
jne
out
mov
jl
jecxz
das
testb
xor
mov
xorb
lcall
je
sbb
push
test
lods
add
pmulhw
mov
add
rolb
aad
das
push
mov
leave
bound
pop
or
in
cmpb
adc
lcall
sub
or
stos
pop
mov
xor
stc
dec
andb
dec
fstl
fs
imul
int
jae
xlat
loopne
fwait
mov
scas
out
dec
shll
sbb
push
mov
addr16
test
sub
sbb
imul
jl
testb
enter
pop
loop
jle
into
and
pop
inc
mov
jmp
mov
xchg
pop
xor
imul
mov
icebp
mov
repz
mov
jb
inc
in
gs
decl
jecxz
mov
test
or
inc
je
ljmp
insb
push
adc
aas
mov
das
shll
jne
ljmp
cli
sbb
or
mov
cmp
movsb
inc
jecxz
pop
insb
jmp
cmp
push
fbstp
dec
dec
ds
test
mov
loopne
fnsave
and
test
inc
mov
pushf
pop
adc
cli
add
mov
sub
in
addl
sbb
in
mov
icebp
jno
ja
dec
ds
xchg
or
push
adc
mov
xor
push
inc
ds
scas
mov
adc
mov
push
sahf
sbb
cltd
add
pop
adc
jae
cmpsb
pop
or
pop
adc
aad
imul
fsts
movb
or
adc
push
xor
ljmp
cwtl
pop
cmp
cs
icebp
xor
mov
divl
jb
fs
in
shl
pushf
dec
orl
jae
call
pop
out
aad
lcall
push
adc
lret
je
repz
sbb
inc
mov
shll
movsl
test
dec
xchg
push
sub
cmc
pop
rorl
shrl
es
jl
xchg
add
pop
sub
add
mov
stos
inc
push
sub
sbb
adc
mov
negb
movsl
lds
or
inc
popf
cmpb
arpl
rcr
jmp
pusha
mov
sbb
in
push
daa
fwait
ja
dec
mov
rorl
adc
mov
dec
dec
fldl
mov
lock
or
xor
fcomip
push
adc
jno
in
inc
cwtl
xor
fimull
dec
mov
test
or
cmp
dec
into
aas
jmp
mov
aas
scas
call
dec
xchg
loope
aaa
mov
mov
jge
or
aad
xchg
inc
cwtl
add
pop
es
rcl
negb
mov
mov
push
ss
lret
sti
test
add
cmp
mov
mov
data16
push
xchg
mov
pop
inc
mov
xchg
mov
xchg
leave
pop
fs
ja
pop
in
je
sbb
mov
sahf
mov
jle
lcall
repnz
cmp
cwtl
out
in
imul
cmp
adc
rolb
add
cltd
xor
imul
adc
sbb
and
bound
leave
out
pop
or
int
dec
push
scas
xlat
in
push
mov
aad
xchg
sub
in
ficompl
movsl
das
lret
movsb
xor
std
mov
xchg
lcall
test
mov
cltd
jmp
push
daa
cmp
or
loope
nop
mov
jle
sahf
inc
inc
and
xchg
fisubs
into
sbb
sub
inc
insl
and
stc
sbb
jae
xchg
push
das
fwait
sub
cmpsb
cmpsl
xchg
mov
leave
push
jne
xchg
ret
xor
cmp
ds
push
pushf
fwait
mov
nop
or
xchg
xor
xchg
mov
xor
aad
lahf
lea
mov
push
adc
loop
rorl
and
xchg
mov
cmp
mov
inc
es
nop
adc
les
cmp
aaa
ret
aam
arpl
mov
insl
pop
pusha
les
dec
or
test
mov
shrb
int3
inc
ja
push
jecxz
mov
fimuls
ret
ficompl
fists
xorb
pop
or
daa
pop
xchg
cmp
in
jg
aad
sub
adc
bnd
mov
cld
daa
out
sub
es
cmp
in
test
neg
mov
jns
cmp
pop
testb
je
xchg
and
data16
and
jae
and
aaa
lock
mov
push
sbb
fcomi
xchg
mov
iret
sub
dec
mov
std
iret
add
inc
xchg
sbb
mov
hlt
mov
out
pop
mov
jno
scas
or
mov
cwtl
sub
pop
pop
adc
jle
ret
pop
mov
inc
sub
inc
xlat
lcall
jae
mov
lods
test
in
add
into
push
bound
in
push
mov
jb
in
dec
in
outsl
fdivrp
and
in
xchg
outsl
sub
or
mov
adc
inc
pushf
stos
imulb
or
pop
xchg
lea
xchg
push
jne
sahf
dec
gs
xor
xchg
push
cmp
mov
mov
cmp
pop
fwait
insl
push
fcompl
cli
es
scas
sub
push
clc
sarl
push
push
roll
fidivrs
mov
ficoml
loop
cmp
shl
ds
into
faddl
mov
sbb
xchg
xchg
dec
test
add
aam
mov
adc
inc
hlt
dec
insl
adc
std
repz
pop
sarb
mov
rorl
iret
addl
jnp
shr
ficompl
fsubrs
rorl
xchg
out
jno
or
mov
lock
cmpsb
mov
jge
daa
insl
push
ja
sub
pop
pop
les
pslld
xchg
adc
pop
test
cmp
cld
scas
fptan
add
push
mov
xor
lods
mov
push
mov
insb
test
xlat
sbb
rorb
and
pop
into
pop
cmp
fidivrs
in
lcall
fcoms
jmp
scas
movsb
stos
mov
cmp
rcrl
outsl
es
incb
xor
adc
cmp
jae
test
or
dec
dec
sbb
lcall
test
adc
mov
push
out
hlt
or
fildll
jno
inc
rcrl
and
popa
cmpsl
cmovl
leave
dec
hlt
outsb
out
xchg
cs
adc
jl
xor
mov
cwtl
push
jno
and
es
test
sahf
xor
jg
add
scas
inc
insl
out
mov
cmp
cld
shrl
adc
inc
pop
dec
cmp
inc
scas
pop
std
pop
hlt
shr
or
out
mov
stos
roll
push
out
xchg
push
xchg
and
sbb
jno
subl
sub
es
xchg
jne
scas
repz
inc
aas
aad
frstor
filds
sub
orb
fdivl
mov
out
pop
dec
mov
int
jl
cld
jne
xor
lds
xchg
aam
lods
rclb
push
xor
rcrb
fcmovu
inc
and
adc
out
lods
xchg
je
pop
aas
pop
xor
jbe
insb
mov
ds
lea
addr16
jae
mov
mov
test
stos
or
enter
mov
pop
stc
aaa
iret
add
xor
push
inc
xor
pop
enter
dec
pop
mulb
out
inc
push
popa
push
jge
insl
stos
shll
in
mov
or
scas
push
push
pushf
push
add
dec
andb
sbb
fadd
and
clc
notl
iret
push
push
test
jmp
cltd
xchg
es
jle
xchg
sarb
adc
cmpsb
xchg
cmp
xor
sub
nop
lock
adcl
add
iret
mov
loopne
ss
and
sub
and
jg
scas
mov
das
cmp
sarb
mov
lds
jae
sub
lods
scas
adc
shr
cltd
movsb
cld
jecxz
iret
add
push
cmpsb
ja
dec
sub
pop
adc
mov
movsl
mov
ffreep
adc
js
in
dec
cld
sub
add
fcmovnu
jb
xchg
cmpsb
jmp
cltd
push
hlt
outsb
sbb
movl
pop
sbb
dec
and
popa
xchg
and
scas
lods
sub
ss
je
mov
mov
push
push
mov
cmp
pusha
fmulp
daa
dec
shrl
dec
or
andl
cmp
xchg
test
mov
into
lea
das
sahf
cmp
mov
dec
dec
jbe
les
dec
repnz
into
add
mov
int
adc
ja
insb
test
mov
fwait
pop
cmp
aam
xchg
jl
lret
es
into
cld
pop
out
xchg
aad
popa
in
mov
lahf
decl
testl
xlat
in
dec
push
ret
cmpsb
xor
push
xchg
ret
icebp
sub
dec
es
lds
ud1
dec
stc
orl
add
outsl
ljmp
mov
or
and
gs
push
test
adc
push
mov
or
pmulhuw
arpl
ds
dec
xor
sub
xor
hlt
std
dec
cvtdq2ps
pop
fisttps
push
nop
lds
mov
jnp
js
jg
xorl
sub
movsl
les
movsb
test
dec
aad
jno
jo
jne
js
push
pop
jmp
add
in
or
iret
mov
and
add
addb
into
sub
sahf
jbe
repnz
lcall
enter
push
jno
dec
es
jnp
mov
pop
ja
lods
in
cmp
dec
and
fstps
lock
push
sbb
pop
xchg
test
rcll
aad
ljmp
or
insb
fs
push
xor
dec
pop
pop
add
imul
xchg
cmp
dec
call
scas
iret
pop
and
xor
dec
cmp
mov
cli
cmp
fldenv
into
orb
and
sar
xor
mov
hlt
add
ret
dec
outsl
js
in
sahf
imul
in
cld
or
icebp
push
xchg
das
repnz
sbb
jmp
sbb
push
cmp
cmpsb
stc
push
aas
mov
pop
adc
add
es
cwtl
ljmp
cli
fists
push
rolb
pop
cmpsl
mov
cmpsl
jecxz
push
add
in
jne
add
and
add
testb
shlb
cmp
lahf
test
addr16
out
mov
push
mov
push
js
jno
aad
pusha
mov
dec
pop
iret
out
xchg
dec
jae
cwtl
push
addr16
mov
or
dec
fdivrs
jno
xchg
inc
dec
pop
mov
xor
lds
inc
repz
in
cmp
out
mov
pushf
mov
adc
mov
stos
movsl
leave
sbb
push
sti
roll
push
sahf
out
cli
sub
sub
cli
je
int3
pop
in
pop
add
xlat
into
sub
test
xor
mov
loope
mov
cmp
addr16
inc
add
xor
jl
dec
xor
mov
or
rolb
movsl
icebp
test
pop
jmp
lods
jmp
shrb
ss
inc
in
hlt
push
mov
or
sub
add
cmp
cld
fisttpll
flds
mov
cmc
popf
and
inc
nop
lret
mov
mov
les
mov
mov
idiv
dec
push
xchg
add
aaa
sbb
jmp
and
lds
repnz
cmpb
arpl
jns
mov
shlb
sub
ficoms
clc
xchg
cmp
mov
das
in
jbe
sub
mov
pop
mov
sti
inc
mov
loopne
push
jne
and
push
pop
in
pop
sub
imul
push
loopne
dec
or
pop
push
sub
cmc
cmp
jmp
lods
sub
push
lods
decb
das
scas
add
inc
xor
movsb
sub
fidivrl
lret
es
push
dec
dec
pop
add
or
pop
enter
mov
xor
sar
lds
and
cwtl
and
push
and
xor
ljmp
movsl
and
pop
cmpsl
pop
sub
daa
jno
mov
xchg
mov
mov
adc
imul
stc
jnp
jp
test
dec
jns
and
ficompl
fsub
fs
push
cs
sbb
and
cmp
hlt
mov
fcompl
push
enter
xlat
jl
mov
xchg
andb
xor
rcrb
adc
cmp
pop
sti
adc
idiv
jne
dec
push
push
jno
push
fmull
jb
test
sub
leave
lret
mov
cmc
pop
loopne
dec
sarb
pop
rorl
cmpsl
inc
push
push
mov
shrb
aad
mov
aas
mov
pop
loope
aaa
ss
outsl
push
add
dec
fwait
arpl
iret
stos
push
pop
nop
push
out
loopne
rorl
mov
pusha
sarl
cmpsl
ljmp
push
inc
inc
dec
in
sub
aam
xor
out
jb
cmp
fs
cmpsb
and
mov
hlt
mov
icebp
es
pusha
fcmovbe
cwtl
es
arpl
add
mov
nop
xchg
flds
mov
mov
leave
ss
dec
movsb
mov
pop
xchg
push
adc
pop
jle
in
rorl
ja
out
cmp
mov
fwait
call
pop
cmpsl
add
fwait
dec
hlt
out
inc
dec
mov
add
or
xchg
aad
add
add
sbb
aas
icebp
add
arpl
xchg
mov
inc
inc
fsubr
sbb
out
hlt
mov
cwtl
mov
add
imul
adc
scas
stos
movsl
pop
jnp
std
in
xchg
mov
fistps
jns
leave
not
push
xchg
lods
cli
ljmp
push
aam
mov
or
sbbb
loop
or
and
push
pop
orb
std
cmp
pop
shll
push
arpl
cmc
adc
iret
scas
jp
mov
pop
xlat
out
addl
insb
repz
cmpsl
popf
cltd
cmpb
mov
or
pop
xchg
les
or
dec
insl
outsb
xorb
dec
les
jno
jno
xchg
push
popa
jle
pmaddwd
fisttpl
mov
sub
mov
pop
enter
mov
popa
sti
mov
or
outsb
push
sbb
sub
and
imul
pop
mov
jge
aam
nop
and
sarb
mov
push
xchg
inc
lahf
xlat
stos
or
adc
mov
xchg
das
push
jmp
cmp
inc
pop
mov
adc
or
arpl
dec
mov
fcmovbe
pop
jno
repz
popa
inc
negl
dec
stos
into
push
push
pop
ret
and
lods
cmp
cmp
add
mov
es
sub
sub
adc
std
pop
dec
sbbl
xor
out
into
cltd
aad
and
pop
cmpsl
xlat
ja
push
sub
out
sbb
icebp
jg
fldt
xchg
dec
xchg
in
cmpsb
imul
repnz
js
jb
fsts
scas
inc
lahf
fs
dec
mov
pop
stos
iret
cmp
pop
xor
jnp
mov
push
negb
inc
inc
mov
adc
mov
cmp
mov
push
and
adc
mov
mov
sbb
mov
pop
and
call
fcomi
addr16
mov
mov
ret
rorb
hlt
ja
repz
ret
int
adc
inc
in
inc
or
cmp
int
ret
cmpsl
sub
sbb
icebp
jecxz
mov
sbb
dec
stos
int
imulb
cmp
out
xor
pusha
push
push
xchg
inc
pop
mov
arpl
pop
insl
xlat
sbb
pop
lds
lret
sbb
push
pop
jg
sti
ljmp
daa
pop
movsl
out
push
mov
jmp
adc
addr16
and
sub
shlb
sub
out
cmc
inc
mov
jl
push
shll
mov
mov
pop
cs
into
loopne
cmp
inc
jmp
lcall
pop
ja
jbe
push
fsubr
enter
mov
cmp
pop
pusha
rorl
jae
inc
xchg
adc
adc
cli
mov
lret
cld
lcall
mov
jmp
int
das
jnp
sahf
xchg
mov
sub
leave
pop
icebp
adc
xchg
fisubs
in
adc
mov
adc
mov
stc
test
push
fcmovnb
jns
pop
lcall
cwtl
loopne
fsubl
lods
xchg
aas
popa
stos
enter
jbe
fwait
add
fsts
aaa
les
std
pop
sti
gs
pop
sti
push
sub
mov
adc
and
fmull
daa
pop
popf
testl
jbe
fstl
mov
int3
loop
ds
mov
and
mov
jb
xchg
mov
gs
pusha
adc
sbbl
jl
add
adc
inc
xorl
sbb
push
insl
sbb
mov
hlt
pusha
in
imul
mov
dec
sub
cltd
xchg
sahf
ja
fwait
mov
sbb
mov
int3
cmpsb
jmp
jmp
pop
sub
lock
jns
push
shlb
outsl
dec
mov
iret
mov
addb
lret
and
adc
popf
pop
call
or
insb
into
jle
dec
push
or
push
or
cmp
outsl
push
cmp
fwait
mov
loope
inc
pop
test
lahf
hlt
add
inc
pop
repz
dec
push
rcl
bound
add
dec
int
nop
jo
ret
jns
in
jb
push
out
add
push
in
sbb
pop
pusha
mov
push
and
loopne
push
push
mov
push
repz
mov
mov
push
mov
outsb
nop
jbe
mov
dec
lock
fidivrl
dec
mov
mov
push
insl
or
mov
repz
fdivr
sub
add
scas
and
es
mov
sarl
aad
in
sahf
sub
test
jns
inc
roll
dec
mov
adc
jae
inc
push
pop
push
or
call
mov
ficomps
mov
cmp
sahf
lahf
jp
inc
aas
adcl
fprem1
xchg
lds
ss
arpl
jmp
stc
arpl
inc
or
pop
xor
das
pop
hlt
and
outsl
subb
pushl
xchg
pop
pushf
loopne
dec
sahf
pop
loope
loope
jbe
dec
lret
lods
fsts
sub
test
push
ret
push
out
pop
mov
popa
xchg
imul
sub
mov
dec
ret
sub
dec
mov
lret
or
add
je
xchg
adc
outsl
sub
adc
lret
add
sub
in
fs
popl
sbb
or
push
ds
movsl
xor
cmp
push
clc
arpl
shlb
mov
jo
jecxz
push
imull
aam
push
jg
push
out
out
mov
jbe
popf
pop
fs
mov
vmaxsd
rcrl
test
arpl
mov
mov
mov
push
cmpsb
or
add
fsubrp
inc
lods
bswap
inc
cmp
mov
lret
iret
test
cmp
push
repnz
cmp
jns
xchg
stos
jb
loope
mov
cmc
pop
cmp
scas
push
stos
into
push
mov
push
imull
pop
jne
cmp
pop
loopne
cmpl
pushf
or
xchg
lahf
fnsave
or
adc
cmp
test
push
ss
push
aaa
xor
dec
test
push
pop
aad
inc
mov
loop
call
int
addr16
sti
lods
aad
aad
gs
xor
mov
cld
int3
mov
cmp
inc
enter
out
adc
push
mov
jge
jg
inc
or
sub
xor
pop
mov
je
add
xchg
ror
into
lea
inc
jnp
js
out
fsubrl
andb
cmp
inc
sub
jnp
push
lods
xchg
test
out
cmpsb
jbe
ror
xorb
addr16
add
mov
adc
popa
outsl
push
leave
cmpb
push
inc
inc
push
inc
inc
pop
jg
in
out
pop
fistpll
nop
das
mov
orb
mov
sub
test
addr16
adc
jle
fwait
mov
cmc
mov
lds
fcmovnbe
inc
jno
jb
jmp
hlt
jae
sbb
mov
cld
arpl
jae
sbb
adc
in
xorl
outsb
add
mov
adc
cmp
shlb
add
idivl
outsl
inc
mov
pusha
sub
outsl
push
imul
in
in
adc
mov
mov
xchg
and
dec
sub
outsl
mov
stc
out
or
push
stos
shlb
jmp
fstps
push
scas
imul
gs
jb
test
test
pop
outsl
add
sbb
fnstcw
imul
mov
push
out
sar
cli
add
jl
orb
cmc
lock
push
divl
jb
cmp
lods
shlb
sub
mov
in
daa
aad
jae
es
and
push
aas
rcrb
addr16
loopne
jp
test
int3
clc
sarl
sub
dec
adc
ja
test
pop
inc
cli
adc
call
add
mov
jle
out
add
shlb
xchg
lcall
mov
aad
or
dec
sub
and
mov
aad
enter
sub
rcrb
xor
ja
jae
sti
jmp
lahf
movhps
out
inc
dec
jo
mov
enter
aam
adc
loope
xor
xchg
xor
xor
jns
stc
int
add
jp
loop
push
ds
cmp
pop
incl
ret
sbb
nop
xchg
pop
rolb
fldz
push
test
inc
stc
rolb
add
fimuls
adcb
clc
xchg
mov
jb
sbb
rcll
cli
add
or
push
cltd
sbb
call
jp
push
push
xchg
xchg
sbb
pop
mov
lods
cmp
out
mov
js
or
jg
ds
mov
jns
or
fld
dec
pop
ret
adc
daa
add
jns
cld
adc
or
jns
imul
jecxz
fisubs
and
cld
jae
rcrl
jmp
cmc
loop
jbe
sbb
xchg
cwtl
mov
sbb
ret
adc
test
mov
mov
adc
rcr
sub
jecxz
repnz
dec
ret
movsl
rorb
or
cmp
adc
xlat
stc
out
fidivl
and
lock
sub
ror
and
xchg
push
je
jmp
cmpsb
jno
add
or
sub
xorl
cli
dec
mov
ret
and
adc
push
popf
imul
push
imul
dec
sbb
push
sub
or
xor
inc
dec
je
adc
and
xchg
scas
mov
in
or
jbe
fnstsw
mov
inc
fisttpl
xor
mov
xor
loopne
ud0
pop
clc
push
mov
aas
or
fprem1
clc
int
sahf
divl
inc
vandnpd
jecxz
ds
js
inc
sub
js
jle
mov
and
mov
aam
jle
or
addr16
and
pop
mov
add
and
push
mov
push
and
push
test
dec
push
imul
fs
in
cltd
popf
fldenv
pop
push
mov
repnz
gs
in
mov
loop
sti
dec
icebp
test
ja
cwtl
pushf
in
or
insl
fidivl
out
mov
imul
xor
out
imul
insl
mov
insl
out
mov
add
xchg
xor
dec
push
pop
popl
mov
clc
lods
lcall
push
sub
shlb
or
mov
mov
js
lods
outsl
dec
cmpsb
fldcw
pop
mov
pop
xlat
xor
test
hlt
sub
or
sar
xchg
inc
mov
cmp
jno
xor
sbb
pop
jnp
pop
jecxz
loope
and
lods
out
and
scas
push
jne
fisubs
cwtl
jb
pop
data16
dec
inc
call
lret
cmp
xor
sbb
repnz
xlat
mov
out
popl
mov
mov
in
hlt
inc
cld
insb
scas
sti
cld
ja
mov
mov
movsl
dec
dec
repnz
cltd
inc
cld
push
into
and
flds
lock
or
xchg
sub
lret
pop
movsb
mov
mov
xchg
or
mov
pop
adc
and
mov
pop
xor
jae
sbb
xchg
push
mov
add
ds
ss
jne
andl
sub
loopne
int
or
mov
or
mov
lcall
mov
aaa
outsb
cmp
fcomps
scas
outsl
dec
lods
mov
mov
subl
add
xchg
jg
jmp
pop
cmc
sbb
mov
cmp
sbb
xchg
or
adc
sub
into
jmp
iret
cmpsl
xor
mov
loopne
jg
jb
bound
loopne
sbb
or
adc
loopne
cmp
add
jge
in
pop
lock
cmp
mov
mov
lret
adc
arpl
gs
fstps
mov
imul
into
cmp
xchg
cld
stos
aam
outsl
xchg
mov
and
in
xor
xchg
ret
pop
xor
call
xor
int
pop
loope
sub
push
sub
pop
xor
pop
cmp
add
cld
or
aaa
pop
add
sub
sahf
and
mov
or
fyl2xp1
daa
imul
push
gs
xor
jne
cs
repz
push
pop
sub
xchg
mov
lds
push
rclb
sbb
shrl
ret
push
and
sub
or
rol
cmp
mov
je
int
cmpsl
movsb
movsb
addr16
mov
xor
sbb
jne
cmp
sub
push
lock
mov
int3
jmp
xor
dec
mov
repz
adc
mov
add
ds
mov
or
fxch
mov
out
jb
dec
iret
xchg
cmp
dec
hlt
push
fnstcw
popw
in
dec
dec
pop
or
adc
insl
mov
lcall
adc
stos
cld
stos
push
into
aas
push
adcb
std
pop
xor
inc
test
xor
adc
imul
addr16
add
je
pop
sbb
dec
push
jmp
pop
sub
push
xchg
jle
dec
sbb
movntps
and
mov
idivl
inc
lock
std
ds
cmp
fsubrs
xchg
inc
add
adc
arpl
pusha
fldl
cmpsl
xchg
leave
sub
dec
and
sub
push
lahf
xchg
sbb
rcl
lds
and
inc
cmp
inc
pop
mov
jle
fldt
inc
xchg
bound
cmp
pop
cld
push
or
mov
fsubs
and
xor
lods
movsl
push
jmp
pop
jl
pop
push
cmp
repnz
mov
roll
adc
repz
stos
dec
or
xchg
mov
xlat
add
insl
pop
adc
inc
mov
inc
mov
negb
scas
out
inc
jle
repnz
pop
stc
jo
dec
pop
sub
pop
andps
xchg
negb
mov
hlt
fistl
data16
jmp
scas
sbb
dec
sbb
out
push
xlat
int3
inc
fcoml
pop
repz
xor
push
push
jae
leave
add
arpl
lock
aad
js
stc
mov
loope
leave
jp
push
mov
xor
shl
push
sub
adc
mov
data16
ljmp
ret
iret
dec
or
rorl
ret
incb
inc
xchg
push
dec
cwtl
lsl
push
fisubl
jmp
dec
nop
lret
fucomi
stos
cwtl
ret
aad
in
sub
mov
call
aad
mov
lret
out
pop
jle
test
call
mov
loopne
enter
xchg
pushf
rcll
fimull
jbe
mov
icebp
idivl
pop
arpl
xchg
test
mov
lods
clc
inc
mov
pop
xor
fsubs
xchg
dec
subb
jmp
add
mov
loop
xor
sub
add
mov
loopne
fstps
xor
inc
fnsave
jge
xchg
sbb
dec
adc
fwait
popa
loop
lahf
mov
pusha
mov
out
sar
or
mov
fisubrl
or
imul
sub
pusha
in
cmp
mov
test
and
and
aad
pop
sub
scas
loopne
aaa
mov
mov
mov
push
cltd
push
adc
stos
stos
bound
clc
pop
outsl
pushw
xchg
push
add
jecxz
int3
ret
inc
jecxz
or
and
add
and
subb
inc
xor
xchg
lods
mov
adc
imul
add
sub
stc
fmul
mov
imul
lahf
adc
adc
mov
mov
mov
nop
clc
int
and
mov
bound
js
mov
pop
rclb
cltd
and
lahf
roll
clc
and
and
push
icebp
ret
add
fsts
clc
sub
ljmp
inc
xchg
and
or
mov
mov
clc
push
mov
xor
idivl
add
dec
sarb
mov
mov
mov
push
aaa
jmp
inc
push
mov
jecxz
rol
lock
mov
and
addr16
pop
ret
push
stos
xchg
movsb
mov
mov
leave
addr16
loope
sbb
xchg
xchg
xor
mov
sbb
jg
xchg
xlat
cmp
mov
jmp
dec
xchg
gs
fsubl
icebp
fsubrl
scas
stos
adc
aas
mov
inc
pop
add
mov
scas
pop
push
or
jecxz
mov
jb
movsb
jmp
cwtl
push
pop
mov
js
jmp
lea
or
popa
xor
fwait
jle
js
popf
add
jle
fsubrl
jl
pop
insb
int3
mov
andl
mov
cmp
push
inc
jns
mov
push
and
pop
or
clc
mov
mov
sarl
and
pop
dec
add
xchg
xor
pop
add
xcrypt-ecb
cmpsl
lea
xor
inc
mov
mov
or
cwtl
out
xor
movsl
cmp
push
scas
adc
aas
pop
mov
push
ss
nop
jge
in
jbe
stos
mov
outsb
jb
push
sbb
add
inc
mov
cmp
inc
lret
pop
pop
jl
mov
in
orl
xchg
push
aas
cltd
movsl
mov
cmpsl
cmp
mov
rolb
imul
adc
push
push
or
push
aad
push
pop
and
inc
sub
scas
push
nop
out
mov
add
nop
xor
add
aas
pop
test
xor
bound
jecxz
call
jo
hlt
jns
ja
pop
arpl
cmpsb
lods
dec
mov
jecxz
mov
push
in
sbb
cmpl
ljmp
test
jns
ds
xor
push
in
inc
jp
outsl
mov
in
add
stos
jmp
in
mov
dec
insb
sub
movsl
dec
subl
mov
out
ret
into
data16
ljmp
dec
xchg
xchg
push
popl
fld
repz
cmp
into
cmc
mov
and
in
in
movsl
divb
cmp
call
cmp
xorl
jg
lcall
xor
int
sub
jb
lret
ret
shlb
mov
shll
pop
shlb
mov
xchg
add
fdivl
lods
xor
push
jbe
outsb
sbb
ret
int
enter
out
adc
pop
inc
iret
mov
inc
imulb
ljmp
ja
mov
xor
and
jne
inc
cmp
arpl
ret
shrl
xchg
pop
movsl
add
push
cmp
or
push
mov
xor
mov
jp
insb
sbb
loop
insl
and
pop
and
fldl
ret
and
jns
sub
push
andl
push
mov
dec
xor
pushf
mov
xlat
std
es
loop
ret
cmpsl
or
push
lcall
sub
imull
and
and
mov
cmp
lods
pop
cmp
pop
xor
jmp
lods
out
fstpt
pusha
mov
xchg
inc
dec
push
sarl
out
xchg
stc
pushf
mov
ret
clc
inc
xchg
jl
lods
ja
mov
out
and
aas
std
ret
inc
mov
xchg
aas
daa
jmp
mov
xchg
insl
mov
scas
push
jge
xor
jno
adc
mov
popa
insb
scas
insb
mov
sub
and
xchg
data16
add
cltd
pusha
je
ss
rorl
cmpb
xchg
je
inc
fwait
add
sbb
cwtl
sub
inc
push
imul
xor
adc
jae
imul
pop
dec
xchg
xorb
dec
push
sub
adc
cmpsb
aas
xor
aaa
jae
xor
aad
jecxz
stc
fistpl
push
sbb
cmp
insb
push
xchg
mov
jns
mov
push
push
pop
mov
xchg
sar
mov
inc
mov
pop
jo
xchg
movsl
loop
cmpl
jmp
enter
mov
cmpsb
hlt
iret
mov
mov
xlat
inc
sub
and
add
xchg
jnp
lea
test
hlt
hlt
xchg
adc
pop
push
or
mov
in
nop
mov
cld
inc
pop
or
inc
scas
mov
insb
dec
lods
ds
push
push
mov
dec
iret
or
jp
mov
mov
mov
sarb
mov
das
bound
sub
mov
lret
lds
fnsave
jbe
dec
rorb
add
pusha
lods
lods
leave
push
xchg
jns
mov
aam
js
int
xchg
in
jg
sbb
addb
insl
push
fdivs
adc
orb
push
arpl
and
sarb
and
mov
repz
orl
js
lock
js
inc
add
in
mov
xchg
movsb
push
adc
push
shlb
aas
les
xchg
lahf
or
or
xor
mov
fmul
adc
dec
js
scas
insl
cli
cs
or
adc
or
cmp
cmc
cmc
fldt
gs
test
push
inc
into
fwait
lahf
xchg
cmpsb
or
nop
sbb
test
dec
scas
outsl
pop
das
jno
mov
push
es
lahf
push
mov
lahf
fistps
dec
push
mov
std
jge
sub
insb
std
inc
push
test
out
inc
jb
inc
push
sub
stos
hlt
jle
lea
jnp
mov
ret
outsl
lock
sub
nop
lds
or
mov
mov
adc
leave
push
jb
adc
sbb
int3
in
cld
inc
sub
orl
dec
cmpsb
inc
or
dec
aaa
aad
cwtl
hlt
leave
xor
jno
pop
push
stos
stc
mov
movsb
clc
testb
pop
and
pop
fisttpl
and
aad
or
loope
pop
loopne
lcall
shl
testl
dec
inc
ljmp
imulb
inc
scas
cmp
mov
shlb
dec
xor
fldenv
push
popa
mov
pop
rcrb
push
gs
cltd
mov
popf
stc
mov
mov
xor
lods
notl
mov
or
movsl
xor
arpl
in
hlt
data16
push
inc
or
cwtl
mov
rol
and
push
jle
loope
xor
mov
pop
movsl
xchg
daa
mov
mov
sbb
pop
push
ficompl
shrb
scas
stos
lods
or
pushf
push
mov
lds
jae
movsl
ja
cmp
dec
push
sbb
test
push
inc
dec
testb
adc
in
inc
and
into
jecxz
into
jge
inc
sub
jge
mov
xlat
push
jle
nop
sbb
test
icebp
push
sbb
cli
mov
mov
adc
lods
push
shl
icebp
inc
out
out
push
cwtl
cmp
sbb
iret
imul
inc
out
jb
jne
lods
mov
pop
fsubl
insl
mov
lret
push
out
cmpsb
cmp
in
mov
movsb
adc
mov
fs
xchg
jnp
dec
inc
or
and
add
jae
rclb
jl
pushl
adc
cmpb
inc
rorb
rorb
movsl
icebp
push
mov
dec
enter
loopne
jmp
enter
inc
in
xorl
jmp
cmpb
test
fists
nop
nop
xor
mov
push
xchg
lods
sbb
dec
mov
sbb
lea
inc
in
fwait
shll
mov
push
loopne
ljmp
xor
mov
add
out
or
popa
mov
call
or
cmc
fs
push
fwait
pop
andl
arpl
sbb
pusha
add
adc
mov
adcb
xchg
ds
insl
mov
mov
mov
pop
sbb
cmp
xchg
enter
out
mov
adc
insl
ljmp
jecxz
cmp
loopne
cwtl
gs
fdivrl
cmp
sub
push
push
scas
sbb
stos
movsl
addl
xchg
mov
adc
imul
mov
in
inc
mov
lret
in
mov
mov
aas
rep
push
scas
add
add
or
sbb
jnp
lods
lahf
std
sbb
int
xor
insl
push
sub
jno,pt
cmp
mov
mov
xchg
outsb
pop
xchg
lahf
daa
pop
fucomi
je
xchg
jae
mov
push
addr16
subb
mov
mov
push
mov
lea
sbb
ljmp
cltd
jnp
cs
call
push
sbb
dec
out
push
jmp
mov
or
aas
push
leave
mov
dec
sti
xor
or
ja
xorb
xor
jbe
cmp
lret
popf
cmp
jle
dec
xor
roll
and
pushf
xor
xlat
push
cmp
and
cld
rcll
mov
lret
lds
mov
sub
loopne
data16
daa
aad
xchg
jmp
inc
jo
aas
dec
xor
mov
cwtl
sbb
xchg
repnz
imul
mov
mov
pop
mov
subb
fimuls
pop
popa
dec
test
lods
fcoms
jno
add
enter
sahf
inc
adc
pop
and
jb
jge
cmp
sub
push
jns
jae
mov
mov
sbb
lock
jecxz
mov
push
aas
lods
into
cmpb
imull
xor
pop
push
push
mov
rorb
mov
loope
jg
pop
call
mov
or
xchg
es
inc
insb
insb
jge
out
xchg
cmp
xor
addr16
inc
mov
sbbb
int
adc
xlat
clc
aad
out
cmp
enter
mov
push
push
dec
or
rdtsc
pop
cltd
dec
jecxz
in
jp
cltd
mov
lea
xchg
jmp
es
call
xlat
shl
xor
mov
mov
dec
pop
sahf
daa
sar
imul
sub
mov
sub
sub
rol
ficompl
pushf
mov
or
movsb
jecxz
cmp
ficoms
sar
mov
mov
sbb
sub
lods
ja
adc
mov
lahf
cmpsb
hlt
xchg
leave
into
push
push
xchg
imul
out
dec
adc
int3
ss
sbb
ss
in
addr16
loope
shl
fidivl
popf
aaa
mov
cmp
jns
bound
sbb
movsl
imul
pop
jbe
push
movsb
sbb
shll
test
jmp
pop
repnz
sub
jne
and
int
dec
xor
leave
insl
out
and
lret
push
scas
xor
inc
cwtl
sarl
jb
pop
jno
out
xor
push
jecxz
rorb
fsubl
cmp
fidivs
mov
mov
mov
insl
pusha
cltd
push
int
rclb
subl
repnz
inc
ds
add
xchg
cmp
xlat
insl
popa
sub
pop
into
xchg
pop
int3
inc
lret
packssdw
stc
imull
subl
roll
pop
cmpsb
je
mov
lea
fsubr
enter
sar
lret
pop
or
inc
je
mov
in
ljmp
popf
js
gs
int
loop
movsb
push
mov
fcompl
adc
outsl
cmpl
and
cmpsb
adc
jo
push
stos
or
repnz
sbb
outsl
and
roll
icebp
in
cmp
sbb
je
sub
arpl
lret
add
data16
xor
push
shll
push
rol
cmp
xchg
jno
jbe
inc
or
inc
je
pusha
dec
aam
out
dec
add
adc
mov
cmpsb
xchg
pop
adc
sub
or
test
jnp
xor
outsb
add
bound
cwtl
leave
test
push
pop
hlt
in
dec
out
push
jecxz
sbb
mov
fiaddl
std
xor
xchg
inc
out
dec
jle
icebp
sbb
and
fmuls
or
dec
jbe
add
xchg
adcb
fstpt
cmpsb
dec
mov
inc
in
loop
lods
popa
loopne
sbb
cmpb
negb
mov
lret
stc
cmp
adc
or
pop
adc
mov
lds
leave
addl
mov
or
mov
xchg
repnz
inc
jae
sbb
jns
mov
adc
dec
std
rcrl
loop
cs
mov
jecxz
fbstp
lcall
cmpsb
mov
cmp
jne
push
cmpsb
mov
into
adc
test
push
mov
dec
inc
cmc
repz
xor
pop
xor
hlt
sbb
and
movsl
repnz
dec
into
int3
mov
xorb
cmp
repnz
inc
and
mov
out
add
out
mov
unpckhps
pop
lea
test
sbb
bound
dec
pushf
int3
push
popa
fadds
or
mov
imul
nop
icebp
sub
pop
push
popf
arpl
or
sbb
mov
push
out
mov
out
movb
lahf
add
mov
in
or
push
and
sub
gs
imul
test
adc
xchg
loop
sahf
push
nop
xlat
dec
ret
push
xchg
push
push
lods
ljmp
mov
call
pop
and
xor
in
sub
pop
jle
leave
fndisi(8087
adc
dec
lahf
cmp
idivl
inc
daa
cwtl
rol
out
addr16
xorl
icebp
sbbl
dec
push
cld
jns
shrl
inc
stos
push
iret
sahf
pusha
pusha
fsubs
pcmpgtd
fbstp
xor
movsb
fcmovne
sahf
sbb
push
dec
adc
xchg
pop
inc
or
repz
sbb
sbb
hlt
jb
cmpsl
cmp
popf
sbb
cwtl
lea
testl
fadd
mov
cmp
cltd
jno
sub
loope
sub
or
inc
imul
insl
in
cmp
mov
jle
and
xchg
xabort
mov
sahf
rclb
push
dec
js
test
xlat
mov
data16
pop
in
lea
mov
mov
pop
fdivs
jbe
cld
push
mov
mov
in
push
push
stos
sub
fisttpll
test
faddl
popf
jg
mov
notb
pop
xchg
sub
movl
dec
mov
xor
ret
sub
add
lea
and
es
inc
add
stc
jl
inc
mov
shlb
xorl
or
xlat
shlb
mov
js
out
or
aam
fst
xchg
pop
mov
ret
mov
ret
loop
jno
enter
aaa
mov
add
push
mov
adc
push
sti
lock
les
mov
or
out
pop
cmp
loope
dec
xchg
into
rclb
call
or
pop
mov
mov
movsl
lret
jo
lcall
adc
fidivs
adc
call
push
inc
out
or
xchg
outsl
sub
and
dec
xlat
mov
in
cmp
mov
jp
mov
es
adc
test
lahf
stc
and
outsb
sahf
daa
sbb
int3
or
fnstenv
cltd
pushfw
xchg
fldt
inc
jbe
inc
dec
mov
shlb
mov
mov
pop
mov
adc
push
cmp
adc
push
and
xor
jge
imul
mov
cmc
adc
into
inc
stos
out
nop
mov
jl
cmc
cmpsl
push
aad
icebp
lret
jmp
jl
cld
xchg
cmp
aad
testl
int3
ret
mov
aaa
scas
add
sbb
scas
jecxz
int
xor
std
andnps
leave
inc
cmpsb
and
jle
or
popf
cmp
jmp
out
stos
mov
out
inc
mov
insl
pop
sub
lds
bound
popf
sub
out
jb
jo
mov
push
sar
std
lahf
jo
lock
call
sti
jns
xor
lcall
lcall
pop
fs
cli
arpl
inc
fsubrs
jp
sub
sbb
push
shrb
les
xor
sbb
mov
xor
getsec
or
and
std
adc
xchg
or
cld
dec
hlt
push
test
aaa
jo
dec
jecxz
jmp
lea
lods
push
punpcklwd
xlat
adc
sarb
jb
stos
loop
pop
cmp
insl
movsb
mov
xlat
stc
mov
xchg
scas
pop
popa
jo
aam
call
sub
push
push
cmp
js
stc
stc
cmc
test
xchg
lds
dec
in
test
adc
inc
pop
imul
fwait
cmpsb
jp
push
pop
xor
jmp
push
pop
xchg
sbb
cmc
and
xchg
enter
dec
push
je
add
call
jno
jmp
out
mov
jb
sub
aaa
js
add
iret
mov
lcall
into
pop
inc
mov
jecxz
mov
mov
pop
sbb
icebp
scas
test
insl
cs
cli
test
in
daa
je
test
or
test
hlt
aad
in
fsubrl
fisubl
sub
push
inc
sbbl
adc
mov
inc
jb
mov
lea
bound
lods
int3
loopne
xchg
js
into
xor
xchg
xor
movsl
out
test
or
in
dec
aam
jmp
mov
imul
enter
out
pop
cmp
cmp
sti
and
out
loopne
xchg
scas
jo
dec
sub
mov
cmc
jnp
and
and
lea
mov
mov
loope
xor
mull
jp
cmp
filds
cwtl
cmpsl
sbb
arpl
ljmp
push
outsl
sbb
push
push
pop
lods
inc
ja
repnz
addl
imul
ljmp
jmp
mov
or
or
cs
lods
jle
cmp
sbb
xchg
test
or
cmp
pop
nop
pusha
or
jmp
jne
adc
and
cli
pop
enter
push
mov
imul
ljmp
and
das
adc
les
test
daa
ret
scas
mov
or
out
or
icebp
daa
inc
or
inc
cmpsb
add
les
mov
iret
lret
jbe
jo
sahf
pop
mov
imul
adc
gs
sbb
fwait
das
mov
cmp
sub
jmp
mov
scas
xor
sub
popf
arpl
icebp
sti
lods
jl
adc
push
inc
insb
cmp
into
out
dec
out
aad
xchg
xchg
jns
in
jmp
adc
pop
adc
and
test
in
adc
adc
stos
subb
xchg
movl
gs
aad
push
out
fdivs
bound
psubusb
pop
and
ret
fldt
push
dec
mov
icebp
hlt
mov
mov
rcrb
popa
adc
ficompl
pop
mov
or
xchg
add
jecxz
pop
push
test
add
mov
push
shll
daa
in
in
pop
pop
pop
push
fwait
scas
fstp
adc
orl
dec
pushf
sbb
in
inc
mov
dec
add
mov
push
and
adcb
loop
ljmp
jnp
fdivrs
or
fldt
pop
mov
pop
lea
inc
mov
pop
jns
cli
les
mov
orl
xchg
fldenv
shll
add
cmpsb
cmp
scas
sbb
pop
ss
lock
add
add
push
jmp
mov
in
jno
or
inc
xor
pop
push
inc
cmpb
sub
lret
loopne
rcr
cli
inc
lret
mov
sub
pop
inc
mov
xor
shll
xchg
loopne
and
jmp
fadd
mov
iret
cmpsb
test
js
cmp
data16
popf
lds
dec
subl
pushf
adc
cmp
cmp
adc
fs
sbb
dec
cwtl
push
lcall
add
mov
lds
decl
dec
xor
scas
or
into
repnz
adc
std
js
lcall
pop
mov
xchg
and
jmp
mov
pushf
mov
jle
jge
mov
mov
outsl
imul
cwtl
mov
jns
sbb
push
loope
inc
xor
xor
mov
dec
xchg
jns
outsb
addr16
mov
divl
bound
add
push
add
imul
sahf
mov
inc
cwtl
ret
lcall
push
test
adc
sarb
dec
pop
adc
jmp
mov
xchg
movsl
adc
pop
lea
push
adc
xor
es
dec
jg
jecxz
sti
repz
lahf
push
das
into
sti
arpl
inc
sub
jmp
sub
mov
stc
nop
in
mov
adc
push
lret
inc
or
add
or
addr16
push
pop
push
mov
scas
js
inc
lahf
jle
cltd
test
test
and
mov
sahf
or
jns
inc
pop
mov
mov
dec
cmpsb
outsl
add
and
mov
or
cwtl
mov
or
add
cmp
lds
testb
out
xchg
cmp
and
in
pop
cld
cltd
aam
aas
jne
cmp
lods
mov
je
xor
cmp
xchg
xchg
jo
hlt
cmp
mov
cmp
insl
arpl
pop
in
fists
int
pop
jne
in
into
mov
mov
pop
les
out
sub
push
dec
mov
or
mov
jno
inc
and
jbe
xchg
and
jno
jle
sub
gs
outsl
push
jmp
xchg
xor
int3
add
ds
mov
sub
inc
add
int
pop
das
push
jns
mov
jae
mov
sub
cmp
jo
push
aam
popa
jecxz
pop
lods
jno
mov
rcll
enter
xchg
aam
pop
int3
dec
cli
nop
pushfw
in
and
outsb
in
dec
or
mov
scas
xchg
jge
stos
push
and
mov
mulb
adc
or
push
mov
add
insl
push
mov
test
popf
mov
fidivrs
jle
insl
cltd
ret
jno
push
mov
or
add
xchg
or
iret
xchg
cmp
lret
sub
dec
add
push
push
mov
sub
imul
rcrl
test
xchg
jo
notb
icebp
je
mov
mov
mov
xor
and
pop
shl
push
mov
data16
mov
cmp
gs
cmpl
push
sub
mov
movl
repz
xchg
es
cmp
fwait
jge
add
jns
lds
je
add
cmp
out
jg
mov
call
mull
inc
push
xchg
aam
push
daa
mov
mov
scas
xchg
nop
mov
xorl
jecxz
ret
addr16
addr16
pop
int3
sahf
jne
cmpsl
out
iret
push
xchg
inc
in
call
adc
add
add
push
js
pop
xlat
cmp
int
fcmove
sbb
mov
and
mov
mov
push
push
gs
iret
lds
scas
fwait
add
pop
fsts
dec
push
push
or
shll
cmpsl
dec
ja
xchg
mov
push
outsb
jl
push
and
es
mov
sbb
adc
and
mov
push
jg
popa
jne
pop
mov
enter
ljmp
inc
adc
mov
push
leave
ficomps
icebp
movsb
aad
out
or
sub
fldt
sbb
push
inc
sbb
cmp
xchg
fsubrs
xor
arpl
pusha
mov
les
insl
outsl
xor
jno
lret
dec
mov
fwait
enter
scas
fwait
mov
push
jle
stos
adc
adc
mov
popf
inc
les
xor
inc
and
sbb
and
mov
mov
push
add
leave
jnp
xrelease
ficomps
mov
test
js
adc
mov
test
cmp
add
push
xchg
inc
daa
out
cmpsl
roll
push
push
jge
in
mov
cld
jp
mov
nop
aad
das
xchg
mov
mov
mov
test
dec
je
inc
fnstcw
ror
aaa
or
mov
inc
ds
loop
loope
jb
and
push
test
or
push
pop
mov
add
cmp
cmp
insb
pop
xor
adc
leave
fsubr
std
negb
pop
fwait
popf
aas
push
stc
jnp
dec
jg
xchg
stos
push
outsb
mov
call
mov
mov
pop
arpl
xchg
sub
dec
dec
and
adc
xor
scas
inc
jmp
pop
or
push
je
clc
mov
sub
xor
push
mov
and
mov
movsb
aad
add
cmp
mov
cwtl
out
jp
pop
inc
in
cmpsl
pop
inc
pop
push
xchg
mov
inc
sub
lret
stos
js
sub
les
es
lods
xchg
leave
sbb
add
dec
pop
mov
push
sbb
sbb
ss
mov
lahf
lcall
enter
dec
mov
adcb
popf
or
sub
lea
xchg
add
lahf
jae
je
mov
or
fstl
out
outsl
pop
cmpsb
jecxz
jle
imull
aam
cmp
add
and
mov
sbbb
and
hlt
inc
jb
and
cwtl
push
popf
scas
hlt
sub
pop
mov
pop
xor
xor
mov
jl
push
stos
movsl
dec
dec
cld
mov
fdivl
xor
pop
fwait
jnp
lods
inc
dec
jne
or
cs
xlat
lcall
aaa
jge
ret
push
jns
adc
lea
sub
lods
xlat
jae
adc
sub
pushf
movsb
popf
or
call
pop
gs
scas
dec
out
dec
cmp
fsubp
dec
loope
xor
neg
and
icebp
xchg
repz
mov
dec
jge
loopne
les
mov
ficomps
add
pop
sub
cmp
arpl
mov
addb
sti
pushf
mov
cmpsb
add
push
mov
bound
das
outsl
push
fwait
sbb
jb
sbb
xchg
popa
pushf
pushf
pop
je
or
insl
sti
add
mov
call
xchg
mov
or
dec
push
jo
or
out
dec
sarl
mov
jns
jp
cmpsl
cld
pop
pop
pushf
in
inc
shlb
mov
loopne
repz
ss
push
lds
adc
and
dec
mov
sub
push
inc
mov
sub
cmpsb
dec
pop
testl
jb
sub
pusha
adc
aam
stos
mov
lds
dec
stos
data16
ljmp
push
in
mov
shlb
js
in
mov
inc
orl
adc
mov
dec
loopne
pop
add
jnp
inc
les
sarl
repnz
push
cld
sbb
and
or
cmpsl
mov
enter
lret
sub
pop
sbb
cs
scas
cltd
xor
lahf
xor
fildl
mov
sub
bound
jnp
push
nop
or
push
cltd
int3
jb
movntq
jle
lea
in
jbe
mov
sarb
sbb
xchg
or
dec
adc
mov
mov
push
mov
adc
adc
rol
lcall
jp
push
inc
sub
pop
or
pop
xchg
out
addr16
test
adc
jns
jp
inc
in
ret
repnz
push
xor
adc
popf
lret
sbbb
adcl
fbstp
push
dec
mov
jle
mov
data16
mov
scas
orl
and
add
pop
sarl
sarb
xchg
pop
ljmp
adc
out
mov
xorb
sub
addl
test
mov
fwait
mov
mov
popa
enter
mov
movsb
aas
ds
mov
adc
dec
adc
into
xor
mov
xchg
xor
cmp
insb
jle
jne
dec
scas
mov
jmp
mov
jb
fmull
or
push
jno
or
push
xchg
sbb
xor
in
dec
cmp
jle
mov
and
sbb
push
pop
jmp
xchg
sbb
les
call
push
clc
or
movsl
clc
imul
sub
sarb
and
dec
or
mov
loope
or
in
sbb
pop
mov
jg
adc
lahf
inc
push
adc
mov
ja
add
rep
movsbl
mov
aam
loop
incb
xor
fisubl
fists
out
adcb
dec
jge
mov
push
dec
pop
mov
jge
mov
pop
jecxz
inc
sub
arpl
jb
mov
test
clc
repnz
popf
out
mov
sti
and
repnz
push
xor
loopne
call
jp
pop
mov
jl
push
pop
or
addr16
repz
mov
or
jns
mov
orl
jo
push
cltd
or
ja
clc
cmpsb
jns
inc
cmp
jbe
ret
push
out
popa
mov
jmp
pop
rcrb
mov
clc
fdivr
scas
sti
cwtl
mov
cmpsb
sbb
clc
pushf
sub
stos
imul
scas
out
add
jns
scas
sahf
clc
repnz
push
fwait
jge
and
js
push
push
arpl
lods
or
cmc
bound
mov
xor
stc
test
arpl
je
jnp
outsb
addr16
add
loope
and
and
jae
insl
loopne
dec
mov
add
push
xor
fisubs
sub
jns
sub
outsb
ret
cmpl
fmull
xorb
gs
dec
imulb
cs
call
and
js
push
lcall
sarl
mov
xlat
pop
rcr
jg
fbstp
inc
dec
pusha
lahf
outsb
xchg
outsl
jmp
xchg
mov
jns
hlt
and
out
test
js
cmp
lods
mov
adc
mov
fildl
add
mov
mov
cmp
notl
daa
pusha
ret
jl
xor
cmp
cmc
dec
jp
lahf
shrb
jns
je
or
cmp
fs
loopne
sbb
xor
pop
in
jecxz
pop
lcall
rcrl
pusha
or
mov
sub
enter
inc
xchg
inc
daa
push
outsl
inc
out
inc
pop
enter
cmp
dec
out
inc
jmp
sub
imul
or
mov
mov
das
lea
jl
cmpsb
int3
inc
or
jo
mov
pusha
cld
ret
sub
test
fisttpll
cmp
pop
out
xchg
sahf
inc
adc
ficomps
cwtl
lds
rep
lcall
xor
aas
iret
adc
ss
mov
sahf
dec
or
jl
cmp
fwait
adc
push
or
pop
loopne
xchg
or
push
mov
xor
ret
cmp
addl
add
cmp
dec
movsl
bound
outsb
rcrl
dec
cmp
pop
andl
stc
int
dec
xchg
ss
adc
ja
cmpsb
lock
push
mov
aaa
movl
dec
popf
loopne
inc
fldenv
mov
xchg
mov
clc
jg
in
dec
xorb
fdivr
aam
orb
shll
shr
jp
sub
sbb
mov
mov
jecxz
mov
rol
mov
fs
out
int
sub
dec
sbb
dec
or
sbb
shll
das
sub
insb
xchg
push
les
mov
clc
cs
sub
pop
into
cwtl
sbb
movsl
lcall
push
cs
aaa
jge
in
outsl
outsl
sbb
fwait
pop
movsl
jns
ss
fcom
mov
xor
xor
xchg
js
mov
cmp
sbb
lahf
jbe
cmp
movsb
hlt
mov
fmuls
dec
rcrl
cmpsl
int3
cs
cmp
mov
jecxz
ret
lock
dec
jne
push
sbb
in
push
adc
cmpsb
shrb
jge
repnz
dec
mov
pop
shlb
stc
testb
jle
jg
cs
or
bound
mov
dec
or
or
test
dec
loope
insl
shr
adc
sbb
inc
dec
push
push
dec
sub
scas
xor
testb
into
xchg
push
lret
add
in
int3
xchg
push
adc
dec
loopne
lds
pandn
in
push
aad
or
inc
push
pop
mov
jo
xor
insl
dec
iret
outsl
hlt
lods
fisubrl
fidivrl
xchg
imull
fimuls
xor
out
push
lds
cmp
mov
add
ret
and
mov
xchg
adc
xchg
call
push
in
icebp
subl
pop
xor
out
mov
inc
dec
jne
imul
pusha
lahf
int3
cli
dec
dec
xorl
jb
inc
pusha
or
sti
add
add
cmpsl
adc
insl
lahf
jne
or
stc
sub
sub
mov
cmp
mov
ret
mov
xlat
into
cmpsl
daa
mov
mov
mov
push
repz
scas
mov
insl
clc
pop
popa
xor
data16
pop
pop
aam
les
cs
jmp
out
inc
sub
mov
arpl
mov
mov
fidivl
les
or
aaa
lret
mov
dec
xchg
dec
mov
stos
and
sub
fdiv
hlt
mov
cmp
push
sub
jg
fcmovb
leave
outsl
fwait
jle
out
push
daa
adc
imul
sahf
test
lods
inc
mov
insb
mov
cmpsb
jb
jecxz
aaa
pop
push
ds
imul
cld
outsl
aad
jnp
imull
or
push
cmp
sub
rclb
jl
jae
pop
in
xlat
jmp
mov
sbb
ljmp
sti
ja
push
or
test
pushf
jmp
mov
and
pop
or
aam
push
pop
mov
and
enter
and
cmp
mov
sahf
jae
jle
and
add
add
push
lret
fnsave
shrl
adc
pop
sbb
pop
mov
and
rolb
xor
sub
aaa
jb
in
jbe
pushf
dec
nop
fwait
xchg
xchg
jne
adc
test
xor
in
dec
shll
shll
push
cs
imul
adc
fisubrs
cmpsb
outsb
lds
dec
push
sbb
pop
sahf
fnstsw
push
dec
xor
std
xchg
and
loope
push
lret
out
xchg
xor
jno
testb
clc
outsl
popf
int
aas
push
ljmp
hlt
rorl
cmpsl
pop
sahf
call
adc
pusha
xor
cmpsb
jle
push
adc
in
fcmovbe
mov
loopne
loopne
fs
push
mov
mov
insl
lcall
jno
pop
loop
lods
inc
dec
andb
xor
in
movhps
mov
out
loopne
inc
add
in
cmp
jge
scas
inc
dec
hlt
jo
movsb
inc
loop
sub
inc
dec
pop
push
arpl
sub
push
cwtl
add
aam
loope
add
sarb
adc
adc
cmp
or
loope
mov
push
cmp
aas
adc
loopne
lods
pop
aam
js
insb
mov
adc
cmp
dec
aas
add
mov
test
dec
mov
fnstcw
fucomp
fimull
or
pop
cmp
dec
in
or
pop
inc
insb
inc
mov
dec
mov
dec
outsb
add
ror
mov
fdivl
fwait
insb
js
jmp
pop
xlat
push
hlt
and
loope
fcom
push
je
cmp
adc
cltd
add
cmp
fmuls
add
jbe
push
gs
sarl
lcall
xor
xor
mov
dec
mov
add
cs
jbe
mulb
fimull
aaa
pop
loope
lret
gs
pop
or
sbb
fldenv
sbb
pop
xor
cmp
push
mov
out
cmp
inc
out
push
and
test
xor
sub
pop
sbb
ss
es
ja
das
xchg
inc
cmpsl
xor
andl
ss
mov
sub
aaa
push
cmp
jae
cmc
cmpsb
and
sbb
clc
idivl
push
cli
stos
out
pop
cmp
shlb
cmpsb
enter
jl
add
xchg
dec
push
cld
aas
xchg
test
aaa
test
pop
push
imul
int
std
aam
xchg
stos
les
jo
mov
push
adc
shll
dec
xlat
js
std
jne
repz
mov
pop
mov
loop
aaa
and
mov
mov
int3
mov
mov
iret
push
jb
test
dec
xchg
enter
pop
xchg
jg
add
push
rcr
mov
dec
xchg
mov
out
std
dec
pop
stc
xchg
movb
adc
mov
sbb
jle
pop
in
stos
xor
mov
cmp
test
and
jno
cwtl
aad
int
xor
ja
out
into
xor
std
xchg
sub
dec
push
cmp
and
sbb
inc
cmc
testl
jo
leave
add
pop
inc
lcall
mov
dec
sbb
sbb
xor
pop
xchg
xchg
push
call
xchg
pop
mov
inc
cwtl
cmp
shlb
pop
shlb
scas
cmc
xor
pushf
jo
add
faddl
xor
cmp
or
mov
mov
adc
in
sbb
jecxz
xchg
movsb
mov
jno
adc
iret
mov
aad
add
push
xchg
lcall
std
and
rorl
pop
das
movsw
pop
mov
divl
loope
shll
insb
daa
mov
popf
insl
notb
call
mov
fcmovnb
pushf
xchg
scas
adc
cmpsl
or
lock
roll
repnz
sub
fiaddl
inc
inc
ret
cwtl
mov
iret
push
fistl
out
push
bnd
pushf
push
pop
sbb
jge
inc
cmc
add
inc
cli
insb
xor
adc
rol
call
popf
ret
dec
lods
dec
jecxz
fiadds
xlat
jle
into
addr16
xchg
rcrl
stc
push
inc
cmp
ljmp
dec
push
mov
rcrl
pop
push
fsubrl
inc
mov
out
in
jg
or
and
stos
fistps
dec
movsl
inc
loop
pop
dec
pop
stos
mov
push
nop
int3
xor
ret
in
mov
fiaddl
mov
fsubrs
leave
sbb
jbe
stos
pop
punpckhdq
sbb
mov
jo
movsl
int3
roll
cmp
call
insb
cmc
adc
fimuls
or
das
std
popf
push
and
jmp
add
test
cs
rol
add
repnz
push
push
sbb
xor
aaa
imul
jns
mov
push
cmp
xchg
or
pop
sub
ljmp
dec
sub
dec
stos
lea
jmp
push
movsl
test
mov
xchg
imul
movsb
sub
popf
into
aaa
push
gs
jae
add
xor
or
push
dec
outsb
adc
scas
mov
cld
push
int3
jg
sti
jmp
adc
lock
shl
jae
adc
inc
inc
enter
int3
in
lock
aas
test
fstps
dec
xor
lret
pop
sbb
gs
icebp
jo
pusha
xor
mov
or
fists
cmpsl
pop
arpl
mov
jecxz
addr16
push
sahf
jno
xchg
pop
into
int3
insl
sbb
sarb
cmp
or
adc
callw
jnp
test
ret
mov
adc
fidivs
test
ds
je
pop
and
arpl
xchg
mov
out
mov
xchg
mov
adc
push
xchg
jo
ret
jge
xlat
scas
sub
xorb
pop
mov
shrb
aas
fbstp
shl
in
push
mov
or
rol
push
push
rorb
imul
push
adc
sbb
enter
jg
inc
cmc
idivl
out
cld
int
cld
cmp
inc
test
sub
xlat
inc
cmp
lods
ret
ja
jne
stos
inc
rcl
mov
test
mov
mov
in
leave
jle
adc
scas
cmp
je
pop
sub
add
test
ror
xor
sub
pop
lahf
sbb
pop
lahf
adc
ds
xlat
jae
mov
cmp
cmp
das
mov
dec
pop
scas
iret
add
inc
enter
stc
jmp
vmovsd
test
inc
cmp
aas
add
dec
push
inc
lret
sbb
adc
arpl
xchg
dec
addl
inc
std
pop
pop
and
jbe
mov
or
cld
mov
or
inc
das
mov
in
fdivrl
std
adc
fists
dec
out
pop
test
aaa
sbb
aad
das
pushf
je
pop
push
scas
test
lcall
push
imull
lret
xor
mov
and
add
jle
push
push
mov
ret
pop
and
and
sub
dec
adc
fsubl
into
shrb
jo
inc
jo
push
cmpsb
cli
cld
mov
sbb
ret
push
lret
cwtl
scas
sbb
or
xchg
and
lds
push
or
cmp
jge
jmp
lret
aas
subl
and
sbb
lret
out
cmp
cmpsb
aas
dec
lahf
stos
jo
jno
mov
lock
mov
in
lea
repz
dec
inc
aad
jmp
mov
mov
sbb
ss
stos
popf
mov
ret
enter
shl
test
shl
inc
leave
push
push
cmp
rclb
lea
push
lret
push
stos
xor
mov
xchg
sub
mov
cmp
jl
cmp
jmp
stc
in
or
add
mov
push
popf
jmp
sti
jne
sub
push
ljmp
push
mov
test
add
sti
mov
clc
cmp
inc
xchg
inc
adc
xor
mov
push
push
push
add
adc
loop
mov
rorb
or
hlt
jecxz
mov
rol
shll
and
stos
dec
mov
jae
out
push
push
daa
jnp
mov
push
jb
sub
jae
ret
fstp
in
aas
orb
aad
xchg
and
or
xchg
dec
loopne
icebp
jmp
sub
rcll
xor
sub
mov
std
inc
xor
enter
jo
out
xchg
mov
cld
shl
dec
jae
fldt
xchg
push
mov
daa
loope
sbb
xchg
push
jns
in
dec
sbb
idivl
mov
into
outsb
fisubrl
or
fwait
icebp
inc
dec
and
mov
xor
or
cltd
ljmp
cmp
shl
mov
js
sti
mov
mov
pushf
subb
cmc
and
add
push
push
xor
pushf
pop
and
dec
insb
test
ja
push
popa
enter
xchg
mov
and
cmc
jnp
xor
ret
sahf
ret
add
or
xchg
inc
xor
movsb
dec
mov
dec
or
or
jae
call
stc
enter
mov
iret
mov
out
jns
jecxz
ret
cli
jb
andl
jns
ljmp
ret
fdivl
inc
out
sub
add
mov
push
jg
cmp
mov
jmp
nop
xor
insl
or
daa
mov
jecxz
and
xor
and
and
test
sahf
movsl
repz
and
int
dec
inc
in
push
idivl
mov
scas
pushf
sbb
mov
push
out
in
adc
ret
or
and
loope
xchg
out
aas
int
or
mov
test
mov
test
pop
rorb
lods
adc
andl
mov
mov
jno
dec
aad
pop
xchg
orl
enter
shlb
ret
movsl
mov
rcrb
and
cmp
jno
ljmp
sub
imul
cmpsl
jecxz
ret
int3
pop
dec
enter
test
rcll
sbb
dec
dec
mov
xor
subl
dec
or
pop
and
mov
sbb
xchg
in
push
in
inc
xchg
sbb
lret
fwait
dec
fdivs
cwtl
xchg
out
fs
movsb
pop
cli
loopne
outsb
pop
call
xchg
rcrb
out
data16
shll
jns
mov
jecxz
repz
test
cmp
aaa
lods
movsb
push
push
mov
xor
or
push
mov
mov
js
mov
xor
cs
lcall
call
xchg
dec
loope
lods
or
mov
xor
cmpsb
inc
xor
scas
enter
xchg
hlt
xor
pop
outsb
add
aas
mov
cmpsb
outsb
test
xchg
arpl
pop
outsb
pusha
fld
insl
in
jb
fildl
jns
pop
mov
cs
lret
dec
mov
dec
leave
repnz
add
shlb
mov
out
mov
andl
pushl
loopne
lods
lret
or
test
pushf
icebp
leave
push
cmc
lahf
cltd
jnp
sbb
jp
mov
daa
xor
adc
std
ljmp
mov
jbe
or
cltd
lret
adc
push
push
lcall
xor
outsb
mov
outsb
icebp
push
test
jp
mov
xorb
jmp
inc
loop
dec
icebp
push
movsb
cmc
fidivrs
sub
pop
push
daa
gs
popa
mov
push
xor
sbb
push
pop
xchg
pop
hlt
sbb
in
sar
pusha
inc
mov
sbb
int
mov
lahf
xchg
mov
test
mov
sub
pop
insl
aad
adc
pop
mov
pop
sbb
cmp
push
int
imul
or
cmp
out
ret
int3
in
and
int3
jns
xchg
jns
mov
xchg
inc
xchg
xchg
ja
cmpb
sbb
mov
cmp
adc
arpl
jge
ljmp
push
adc
insl
add
adc
pushf
insb
imul
mov
pop
jno
lret
pushf
aad
outsb
ficoml
out
mov
push
nop
pop
mov
pop
arpl
bound
data16
lcall
ja
add
and
sbb
lock
addr16
std
pusha
lods
xlat
stc
negb
movsb
shrb
sub
negb
lret
out
cli
mov
add
pushf
loope
aad
or
mov
cmp
icebp
movsl
out
jno
dec
int
sbb
movsb
pop
cmpsb
xor
test
testl
aam
inc
dec
cmpsl
mov
mov
or
sbb
mov
pop
clc
pop
xchg
add
idivb
mov
imul
jl
aam
push
push
scas
pop
pop
imull
lret
cmpl
lock
lret
adc
cmp
dec
adc
xchg
inc
jle
fisttps
lea
aaa
pusha
clc
jae
fsubrs
sub
out
adc
and
data16
mov
push
daa
jl
les
sahf
hlt
jmp
mov
je
les
mov
push
fwait
push
inc
inc
hlt
push
popf
add
sti
sbb
xchg
addl
cli
sub
xchg
enter
xchg
xchg
jmp
cmp
push
add
js
mov
sbbl
rcrl
push
lods
test
adc
pop
sbb
popl
loop
test
ss
test
mov
ja
out
insb
jmp
jecxz
mov
pop
clc
int
dec
inc
mov
mov
ja
sub
jno
mov
dec
out
jmp
lret
mov
jae
iret
call
sub
sti
test
aaa
imul
movsl
pushf
pop
sbb
push
lds
adc
add
jle
dec
mov
cmp
mov
out
ss
xchg
lods
fwait
and
cli
data16
mov
ficoms
pop
mov
loope
inc
inc
divl
insb
je
aam
mov
cld
push
test
sub
or
adcb
loopne
addr16
jle
jp
cmp
dec
inc
cli
xchg
call
sbb
cmpsl
int
dec
mov
lods
imul
dec
xlat
std
sbb
hlt
int3
and
mov
stos
fcomip
dec
mov
rcrl
lods
fnstcw
out
pop
jae
clc
sub
xor
test
adc
adc
fidivrl
xor
sub
adc
std
jno
mov
sub
scas
cld
sub
int
mov
sbb
and
xor
push
xor
add
in
in
ja
nop
push
xchg
mov
dec
cli
nop
push
cmpsl
sbb
inc
fdivrs
insl
jp
xchg
inc
or
add
dec
mov
imul
add
pushf
inc
pop
in
mov
mov
outsb
js
test
add
xor
push
test
sbb
repz
scas
mov
push
repnz
into
out
and
popf
sbb
ret
pop
mov
sbb
fsubp
aas
sbb
or
push
or
cmp
push
fstps
ret
pop
cld
enter
in
cmp
or
in
xor
jb
push
xor
pop
popa
int
test
insb
cmc
pop
and
daa
int3
push
xchg
loopne
sbb
stos
mov
outsb
nop
addl
lahf
sub
outsl
jns
mov
push
cmp
add
jnp
out
add
int
cmpsb
cmp
test
pusha
mov
icebp
iret
idiv
jmp
jl
mov
dec
mov
cmp
sti
psraw
aaa
sub
pop
mov
mov
xchg
lock
gs
je
sub
dec
imul
fcoms
sub
iret
mov
cli
cmp
push
add
adc
sub
mov
cld
popf
xor
dec
push
push
gs
push
ret
std
outsb
jl
adc
mov
insb
nop
idivl
mov
jne
subl
sbb
dec
mov
repnz
inc
push
add
addr16
iret
adc
push
enter
pop
rolb
jecxz
lock
dec
adc
sub
push
add
and
ror
mov
sbb
xchg
movsb
push
inc
pushf
hlt
cmp
push
and
outsb
sub
lcall
test
subl
xchg
cmpsl
xor
mov
jnp
sarb
pop
xor
fdivrp
popa
aaa
inc
mov
gs
xor
jle
jmp
std
pop
jns
xor
inc
xchg
faddp
cmp
movsb
mov
and
push
mov
fwait
sbb
dec
dec
ret
dec
jo
out
adc
push
vmovupd
xchg
rcll
jp
adc
lea
sub
shl
mov
ret
out
andb
sahf
dec
loope
mov
in
fldl
dec
mov
jl
mov
fdivr
dec
dec
push
fldl
filds
in
adc
xchg
int3
ret
sbb
adc
jns
enter
mov
addb
rorl
mov
insb
lds
xor
pop
shl
pop
xchg
aas
sub
imul
les
sbb
repz
and
ficoml
out
add
aad
shll
mov
testb
jmp
mov
and
push
outsl
push
jmp
and
shlb
mov
xor
fnstsw
mov
in
insb
cmpsl
outsl
cmc
mov
mov
lret
jle
pop
test
shlb
aad
dec
mov
push
out
gs
jb
mov
in
stos
clc
xchg
insl
cld
test
jno
sbb
xchg
cmp
lock
idiv
test
cld
sahf
push
mov
push
popf
cs
adc
fstpt
push
scas
popa
pop
pop
call
cmp
loopne
push
andb
dec
mov
xchg
outsb
dec
or
mov
mov
nop
add
cmpsb
pop
mov
loop
jo
pushf
jp
push
cmc
jge
inc
sbb
clc
mov
adc
jmp
xchg
xor
ret
adc
mov
clc
cmpsb
les
mov
aam
xchg
push
mov
lods
mov
orb
jne
mov
sbb
or
movsl
popa
inc
addr16
cmpsl
shrl
cmp
fs
call
fildll
movsb
mov
xor
mov
xor
or
or
mov
adc
fs
fildll
adc
pop
push
push
ss
pushf
push
sub
out
inc
cs
icebp
pop
push
pop
xchg
push
shlb
add
out
jmp
pop
xchg
out
ds
cwtl
jge
lret
cmc
pop
sub
daa
lahf
dec
mov
sahf
insl
and
dec
jg
pop
lea
jb
pushf
mov
push
and
lcall
mov
in
mov
jge
lahf
ret
inc
bound
aad
cmpsb
xor
or
in
mov
xor
scas
mov
fnstenv
movsl
out
mov
lea
xchg
dec
cwtl
movsl
pop
cld
jns
adc
int
sahf
imul
pop
sahf
movsb
push
push
bnd
dec
xchg
jle
cltd
xor
lahf
mov
jg
sbb
sub
lds
or
stos
xchg
pop
sub
fsubs
pop
add
jle
jle
xor
add
jge
cmp
psubusb
add
and
pop
iret
mov
push
aad
movsl
lock
cmp
cltd
lret
mov
jle
decl
sub
cmc
stos
push
xor
sub
scas
ret
add
pop
xchg
adc
pusha
fcompl
shrb
lret
pop
or
cld
pop
std
jg
xlat
add
fs
add
sbbb
jb
dec
push
inc
add
and
xchg
pop
imul
andb
lock
mov
repz
mov
and
sbb
addr16
cltd
jns
xchg
cli
lcall
repz
xchg
mov
cld
add
stos
notl
cmpsb
out
call
int3
or
stos
jg
pop
arpl
and
mov
rolb
stos
and
and
add
test
xchg
cmpsl
jno
faddl
and
aaa
fwait
call
add
adc
adc
popa
jo
mov
std
enter
int3
ficompl
adc
insl
mov
movsl
not
icebp
sti
cmc
outsl
cmpsb
pop
push
movsl
fidivl
cmp
sub
packssdw
jne
jp
sub
shrl
adc
pushf
jle
dec
repz
inc
mov
adcl
add
icebp
xlat
or
mov
js
inc
mov
rorl
or
scas
sub
mov
jle
jecxz
leave
or
pop
call
or
mov
dec
sbb
ret
ficoml
inc
test
mov
das
jge
dec
lcall
insl
xchg
test
jnp
int
push
shl
push
dec
into
mov
xor
repz
jecxz
push
xor
sbb
xchg
imull
push
out
pop
xchg
stc
jp
push
sub
cmp
insl
and
pop
jno
shlb
daa
pop
xchg
ljmp
loop
jae
hlt
outsl
mov
xor
fwait
hlt
daa
adc
fsubr
mov
out
ljmp
pop
sub
shl
fucomp
and
xor
cltd
jns
cmp
nop
pop
sub
test
into
inc
push
out
notb
inc
push
xchg
jle
dec
xor
dec
pop
jae
filds
adc
add
ja
cmp
shrl
xchg
xchg
out
push
dec
push
in
pop
ret
js
pop
push
or
and
jmp
pusha
xor
ds
pop
push
dec
pusha
push
xchg
cltd
push
jno
push
xor
dec
int3
test
loop
cmpsb
add
icebp
call
into
pop
lock
shl
out
or
outsb
lret
subb
add
or
dec
mov
pop
cmp
adc
and
sti
ret
inc
and
pop
in
xchg
ret
testb
inc
movb
pushf
or
jnp
ret
jbe
fldenv
je
nop
xchg
cmp
std
inc
xchg
loopne
cmp
lret
add
dec
popa
mov
stos
or
mov
sub
cmp
insl
int3
stos
mov
add
iret
mov
sbb
iret
or
cmp
xor
cmp
xor
mov
aam
mov
das
lret
jns
enter
mov
cwtl
fnstenv
xchg
jp
pop
push
ja
fidivrl
mov
test
push
inc
xchg
repnz
stos
push
add
lcall
movsb
arpl
cmp
hlt
ss
andb
leave
pusha
sbb
cmpb
push
loop
xchg
dec
not
add
jo
xchg
sub
stc
fbstp
xchg
loop
imul
jge
cwtl
ret
push
stos
jns
push
mov
out
sarb
shlb
push
lret
pop
rcrl
das
inc
cli
and
xchg
scas
xor
or
push
mov
fwait
xchg
jle
pop
mov
sti
add
jb
mov
insl
bound
add
in
movsb
cltd
and
inc
sbb
aas
xor
ss
xor
mov
sbb
adc
fstl
inc
lret
push
inc
fimuls
sbb
fldenv
dec
mov
ss
or
jl
lret
pop
aam
pop
cwtl
xchg
repnz
stc
lcall
ds
or
mov
xchg
mov
nop
imul
cmp
int
xlat
ret
shl
popf
test
ror
into
push
inc
andl
rorl
out
or
adc
inc
or
pop
test
push
pop
popa
test
xchg
nop
push
cmp
xor
jae
in
add
cmp
fneni(8087
in
loopne
dec
dec
pop
cmp
pop
mov
lahf
mov
xchg
lret
jb
ja
into
push
xlat
adc
fldl
sub
cmp
test
cmp
mov
add
dec
add
pop
jne
scas
rolb
out
dec
arpl
clc
inc
insl
xchg
pop
loop
ds
jl
adc
pusha
adc
je
icebp
ss
enter
out
pop
add
pop
outsb
iret
daa
iret
adc
xchg
mov
test
jno
adc
mov
adcb
lahf
push
inc
cmpsb
cli
xor
inc
dec
leave
inc
scas
cltd
xchg
jbe
and
jge
mov
loopne
cmp
sub
mov
scas
nop
sub
lret
gs
addb
xor
ss
stos
mov
fs
cmp
mov
mov
xchg
in
mov
pop
ljmp
mov
add
or
rorb
pop
fiadds
jno
mov
std
div
or
test
mov
mov
pop
xchg
mov
ljmp
es
cwtl
nop
pusha
lods
clc
arpl
mov
into
cmc
lock
adc
or
scas
mov
nop
mov
mov
shl
pusha
xchg
sbb
jo
or
lods
xchg
pop
mov
adc
fsubr
test
fcmovne
xchg
inc
movsb
push
adc
pop
repz
or
cmc
shr
xchg
mov
loop
add
sub
or
push
dec
jo
fists
jb
movsl
or
popa
sbb
dec
pop
sub
pop
test
in
clc
mov
loope
movsl
mov
vaesenc
jge
push
adc
xbegin
iret
jmp
pusha
fnstcw
add
jecxz
ds
rcl
imul
dec
cmp
ret
add
dec
lcallw
xchg
lods
into
pop
and
sbbl
jns
push
mov
jno
sub
adc
pop
adc
xchg
adc
sbb
lds
cld
xor
in
adc
or
notl
sbb
push
lods
scas
cmc
test
adc
xor
push
xor
or
cmpsb
jl
mov
stos
lods
and
mov
push
movsb
int3
addl
int
cmp
jmp
cmp
popa
ja
cmp
xor
and
xchg
shll
int
mov
daa
in
inc
sbb
push
loope,pt
in
shrl
subl
pop
or
and
cmp
testb
pushf
rcrl
xchg
mull
mov
and
sub
imulb
xchg
pop
cmp
das
pusha
repz
xor
jmp
sub
push
ret
out
dec
sti
lods
dec
and
rclb
subb
sbb
jge
pop
lret
cmc
dec
mov
sbbl
loop
inc
or
pop
add
lea
mov
lds
dec
mov
js
jmp
mov
ds
jmp
add
rcrb
orl
fidivs
cmp
jne
out
es
xor
and
xchg
fistpll
insl
jmp
mov
idivl
cmp
xchg
xchg
andb
cli
stc
xchg
cmp
mov
xchg
or
lods
nop
lods
addr16
pop
jmp
dec
xchg
fdivrl
sbb
sbb
mov
cltd
out
fsts
data16
xchg
or
push
frstor
dec
addr16
xor
pop
jno
push
insb
in
clc
and
in
pop
ja
subb
xchg
roll
lahf
mov
out
fisubrs
movsl
sbb
xor
inc
scas
mov
jae
sbb
mov
rolb
ljmp
hlt
dec
stos
adc
loope
sub
inc
mov
jo
xchg
addr16
sahf
xchg
sahf
out
sbb
push
sbb
dec
arpl
jno
xor
out
imul
pop
stos
jmp
insb
mov
mov
fidivs
orb
sti
out
lret
xchg
inc
daa
cmp
movsl
cmp
scas
loopne
es
daa
in
aad
pusha
sub
sbbb
adc
pop
arpl
or
add
arpl
fimull
mov
lods
lret
mov
inc
pop
rolb
icebp
jae
pop
sub
mov
test
sbb
lods
ret
add
out
sub
pop
sub
icebp
jo
jnp
and
data16
leave
mov
dec
mov
call
nop
fwait
icebp
cs
rorl
sub
loope
jb
cmc
outsb
sahf
fdivrl
loop
add
dec
repnz
sub
pop
ret
lahf
fs
sub
stos
out
pop
mov
pop
aam
add
call
cmp
data16
std
sub
scas
loopne
scas
push
fcomps
and
hlt
xchg
push
dec
ror
std
xchg
inc
sbb
jnp
mov
shrd
xchg
cwtl
pop
sub
bt
imul
sub
popl
xor
test
cmp
scas
cltd
mov
dec
aam
push
orb
jmp
fiaddl
movsl
sub
imull
push
inc
scas
rolb
es
mov
es
inc
out
jns
movsb
ja
push
cmp
inc
xlat
sub
aad
pop
aam
add
lahf
cmpsb
add
cs
mov
mov
les
clc
loop
iret
inc
das
iret
lea
loopne
hlt
jecxz
pop
arpl
pop
ss
adc
push
imul
lods
xlat
or
dec
sbb
xlat
out
mov
and
int
test
or
add
adc
mov
sub
ret
jmp
pop
cld
push
inc
sub
push
sub
xchg
xchg
cwtl
mov
sub
mov
rorl
jmp
and
lds
xor
cs
push
adc
fisubs
pop
in
xor
cmpsl
cmc
add
xor
loop
cmc
push
mov
push
mov
dec
pusha
sub
scas
push
leave
repnz
xchg
push
xchg
cmp
inc
incl
xchg
fildll
mov
ficompl
jb
popf
in
add
int3
sbb
cmp
mulb
jle
xor
aaa
dec
cwtl
rol
dec
dec
fs
xor
lods
dec
inc
xchg
dec
mov
inc
call
mov
ret
cmp
or
xchg
sub
insb
leave
sarb
inc
cmp
lock
mov
mov
adc
pop
add
out
mov
insb
and
xchg
shr
push
bound
add
shrl
sbb
push
gs
sbb
push
jo
test
iret
outsb
cmp
sbb
popa
addb
sub
nop
jp
repz
mov
mov
shr
jg
dec
mov
push
inc
sbb
mov
dec
jmp
add
inc
jne
aas
mov
ds
or
xchg
jge
scas
lods
fdivp
or
cmc
adc
or
int3
xor
xchg
cmp
lea
call
and
and
push
subl
pop
nop
xor
or
das
push
cld
add
xchg
dec
fnsave
push
orb
call
dec
pop
mov
adc
or
out
test
fidivs
orl
cmpsb
dec
mov
mov
mov
xor
cmp
lret
in
mull
nop
mov
dec
in
xchg
inc
scas
call
stc
add
stos
sahf
mov
push
movsb
dec
xor
stos
lret
enter
std
xchg
insb
aas
rcr
insb
pop
add
cld
xchg
bound
inc
mov
cltd
mov
xchg
in
xchg
and
shll
mov
into
sub
and
fdivs
mov
adcb
mov
mov
pop
and
push
adc
lods
aad
ja
jb
push
int
cmp
test
icebp
js
pop
hlt
fwait
adc
ljmp
or
dec
push
sub
add
inc
bound
mov
mov
and
pushf
mov
jno
dec
js
or
push
dec
pop
xchg
inc
std
fistpl
ds
mov
jno
adc
inc
and
sbb
jns
aaa
leave
mov
pop
shl
xchg
xor
add
pop
fdivrl
lea
data16
out
xor
out
mov
mov
inc
pusha
movhps
inc
dec
jg
movsb
iret
pop
pop
push
add
out
jecxz
lds
push
stc
dec
and
jae
test
rclb
mov
inc
jo
inc
inc
dec
xor
mov
daa
sub
sbb
mov
das
push
lock
mov
mov
add
aad
out
cli
xchg
pop
or
push
jecxz
aaa
sbbl
cmp
sub
in
xlat
dec
test
or
in
xchg
add
fisubl
loope
mov
cmp
testl
scas
js
xchg
pmulhuw
stos
pushf
ficoml
xchg
pop
repz
pop
ss
push
rorl
pop
xchg
mov
test
add
or
fisttps
sub
push
pop
fwait
sbb
aad
inc
cmc
jg
enter
inc
pop
sti
psubd
xchg
push
out
les
sbb
xchg
push
jg
push
jmp
xchg
fwait
adc
pushf
pop
hlt
jge
bnd
cmp
ss
les
in
inc
mov
aad
test
pop
data16
push
push
and
pop
fs
mov
mov
aad
repz
loop
in
lret
xchg
pushf
mov
dec
movsl
jmp
jg
loop
mov
mov
gs
and
lock
lret
jle
call
dec
pushf
pusha
shl
inc
dec
in
popf
neg
adc
outsb
mov
mov
jnp
mov
push
cmp
add
stc
jbe
pop
dec
jle
shll
dec
jmp
xchg
push
adc
sbb
sbb
into
mov
lret
stc
push
or
pop
icebp
je
push
mov
sub
jb
pop
mov
mov
mov
pop
mov
icebp
sub
jns
add
lock
pop
mull
dec
repz
outsb
cmp
cs
cmpsl
clc
mov
xchg
popf
aam
int
pop
ret
lea
jo
fildl
pop
shr
daa
jl
mov
and
mov
and
xor
pop
cmp
xchg
cmp
orl
psubw
mov
fadds
mov
stc
inc
push
aas
xor
pop
std
fcomip
adc
inc
in
nop
mov
push
lahf
dec
pop
cmp
ss
gs
scas
cmp
cmp
lods
and
mov
scas
and
add
mov
test
push
push
dec
lret
xchg
cmp
inc
mov
adc
notb
stc
sahf
mov
popl
cmp
adc
mov
inc
cmpsb
or
push
fbstp
mov
fdivr
mov
in
js
std
call
scas
fsubrl
pop
sub
fisttpll
or
imul
ljmp
sub
addr16
push
mov
dec
adc
sub
lea
dec
aam
cmpsb
enter
test
adc
movsb
shl
fbstp
inc
lret
fmuls
mov
stos
jno
and
jmp
popf
clc
add
xchg
jno
inc
pop
mov
pop
nop
icebp
xor
add
jnp
cmp
mov
cmp
inc
cwtl
xchg
mov
pusha
push
iret
jmp
jne
xchg
add
ds
es
out
cmp
inc
out
dec
pushf
cwtl
dec
mov
dec
lret
mov
mov
mov
lahf
sbb
or
fnsave
jnp
cmp
std
lods
pop
inc
dec
sub
out
leave
cld
xor
popf
push
roll
jmp
iret
shrb
mov
mov
mov
mov
cltd
in
cmc
mov
mov
cli
cltd
inc
fwait
popf
mov
pop
sub
testb
dec
jnp
sbb
mov
outsb
xchg
xor
dec
xchg
pop
pop
lret
mov
jecxz
sbb
test
imul
cltd
push
mov
movb
jmp
repnz
call
loope
insl
push
ds
repnz
movsl
mov
jl
scas
pop
fidivs
addr16
fwait
sbb
push
push
mov
test
jl
push
ret
int3
jbe
cmpsl
jle
xchg
sub
cltd
cmp
jecxz
stos
pop
aam
data16
xchg
insl
out
daa
sti
loope
inc
cmpsl
adc
mov
incb
xor
sub
psubd
inc
fsubs
dec
jmp
pop
xchg
xchg
loop
stc
addr16
or
cmp
sbb
pop
mov
out
sti
test
arpl
addb
sbb
aad
iret
mov
jnp
scas
dec
shrb
loope
js
mov
icebp
mov
fisubs
subl
lds
push
cs
lret
jne
xor
dec
dec
xor
mov
inc
pop
dec
push
inc
push
cmp
or
mov
push
repz
data16
out
push
xor
sbb
cmp
movsb
gs
jb
mov
pop
in
iret
popa
dec
call
rolb
loope
dec
dec
fwait
cmc
pop
lds
neg
cmp
sub
xchg
cmp
mov
sbb
das
jl
movsl
mov
and
adc
icebp
mov
mov
push
fnstcw
push
outsl
push
mov
notb
pop
sbb
and
push
in
add
sar
call
leave
loop
mov
xchg
jbe
mov
push
xor
test
hlt
es
adc
nop
cmp
sub
into
sahf
aad
insb
sbb
sti
add
sbb
cmp
arpl
iret
or
lahf
cmp
inc
sub
xchg
mov
or
pop
lds
adc
lahf
pmaddwd
cld
test
xchg
or
cmpsb
jbe
pop
cmp
movsb
push
int
dec
or
jbe
pushf
pop
insb
jge
xchg
dec
stos
jl
pop
sbb
scas
push
ficompl
dec
repz
lods
fs
pop
stos
nop
fs
cmpb
rcr
bound
and
inc
aad
std
fcompl
lds
sub
inc
shlb
cs
cmpps
push
jo
mov
scas
add
ja
ja
aam
pop
pop
pop
stc
stos
movsl
push
adc
push
xor
aas
fwait
add
in
sub
lods
ds
jnp
lcall
jg
mov
test
cmpsl
daa
sti
inc
xchg
pop
repnz
mov
or
dec
dec
dec
and
les
or
push
jl
sbb
xchg
loop
mov
sbb
and
cmpsb
ret
mov
clc
cld
rclb
popa
jno
xlat
scas
fdivs
pop
ljmp
insb
fstl
popf
mov
cld
jge
icebp
pop
fiadds
lahf
cmp
bnd
adc
cwtl
pushf
jle
jo
sbb
cmp
insl
inc
subl
sahf
stc
sub
sbb
push
xchg
xor
mov
jl
inc
out
rolb
movsb
sbb
push
sbb
mov
jle
jbe
add
into
adc
imul
jmp
inc
mov
and
out
in
xchg
pop
icebp
sbb
mov
mov
mov
mov
or
pop
pop
mov
push
jb
ds
jmp
ljmp
scas
and
adc
inc
test
mov
roll
icebp
cmpsl
call
xchg
pop
mov
in
inc
mov
test
out
sbb
sub
xor
outsl
in
loope
or
fwait
sbb
jecxz
mov
mov
addb
rcrl
pop
mov
dec
gs
repnz
gs
outsl
mov
push
shl
pop
adc
push
out
jge
ret
adc
divl
js
mov
jmp
lods
sarb
adc
inc
sbb
sbb
sub
fninit
add
and
out
mov
mull
repnz
lret
jae
in
mov
dec
cmp
scas
push
mov
mov
sub
inc
xorl
jmp
popf
roll
arpl
push
scas
loope
jo
inc
mov
in
jl
lea
jmp
pop
test
pop
outsl
pushf
mov
push
cs
jne
mov
aas
ret
insl
mov
rcrl
int3
fistps
jno
mov
xchg
sbb
add
sbb
popa
jae
cmp
jp
sti
adc
mov
movsb
adc
push
add
mov
aam
cmp
mov
loope
stos
decl
arpl
ljmp
inc
adc
lret
inc
mov
test
jb
push
mov
cmp
inc
adcb
pusha
push
dec
data16
icebp
inc
xor
stc
sbb
aas
adc
cmp
outsl
fcoms
dec
push
add
sbb
sbb
imul
mov
lods
mov
adc
sub
mov
cmp
clc
ss
sub
push
jmp
loopne
jmp
push
cmc
adc
shll
xor
cwtl
mov
lock
mov
mov
mov
sbb
mov
xchg
push
aaa
mov
sahf
add
sub
stos
stos
mov
cmp
loope
imul
sbb
dec
dec
pop
pop
push
ds
ja
add
clc
dec
fs
popf
add
in
js
add
imulb
out
mov
clc
fdivl
inc
daa
mov
push
sub
or
dec
das
xor
aam
enter
lret
daa
pop
ljmp
dec
or
test
jbe
add
dec
mov
pop
sbb
push
mov
fsubrs
cmpsb
loopne
dec
call
adc
lods
jge
xchg
ljmp
dec
push
aaa
xchg
add
jmp
push
xchg
sub
sub
push
inc
cmpsb
popa
sbb
and
pop
push
xchg
addb
fs
sub
pop
insb
test
call
xor
inc
adc
scas
das
pop
add
lea
pop
and
cltd
mov
cmp
or
scas
push
add
adc
lock
fstps
ret
pusha
ja
mov
mov
out
fcomi
les
lret
xlat
mov
xchg
sub
mov
or
mov
dec
mov
insb
jmp
inc
or
fisubs
movsl
rorb
xchg
sarb
in
dec
jge
pop
popa
pop
mov
pop
ret
negb
mov
mov
cmc
lock
not
ret
cmpsb
mov
neg
loopne
cs
lock
or
in
dec
xchg
sti
xchg
mov
inc
idiv
cltd
sub
xor
out
xor
cmp
jp
fldenv
enter
outsb
mov
jnp
loope
faddl
stos
inc
cs
cmp
flds
jns
add
dec
adc
sub
repnz
stc
inc
or
dec
jle
int
and
jg
push
sub
loopne
outsb
cwtl
xchg
imul
xchg
je
dec
xor
pop
das
je
jb
test
enter
lods
mov
pop
push
aas
pop
jno
ljmp
dec
pop
mov
pop
push
std
mov
mov
fdiv
adc
jno
fnstenv
dec
pop
sbb
pop
in
sub
push
mov
cmp
clc
push
imul
sbb
sub
xchg
pop
test
das
jns
jb
scas
cmc
test
orl
fldcw
mov
jg
push
dec
pop
and
sbb
out
xchg
dec
sbb
inc
pop
and
and
sbb
sti
jg
out
cld
fwait
xchg
xchg
or
cmp
out
dec
push
xchg
out
sub
addb
adc
lcall
dec
mov
dec
add
outsl
pop
rcrl
loope
mov
cli
add
adc
lret
cltd
sbb
jg
out
in
mov
stos
xchg
mull
in
mov
mov
in
mov
mov
push
cwtl
adc
pop
xor
sbb
jne
or
adc
jle
cmp
cmpsl
ljmp
adc
std
xchg
xchg
inc
les
arpl
xchg
sub
jae
mov
imul
call
push
xchg
outsl
mov
push
leave
pop
add
inc
sahf
mov
jle
cmp
cltd
lods
inc
adcb
fnstsw
in
inc
das
cmpsb
decl
xchg
imul
or
jb
sub
adc
cld
mov
dec
adc
mov
je
push
cld
jl
mov
sub
sub
pop
loope
cli
sub
mov
shlb
cltd
pop
inc
into
enter
sub
in
push
jp
sbb
cmc
stos
insb
jecxz
idivl
ret
sub
pcmpeqb
notb
jns
lret
rcrb
fwait
sbb
push
mov
out
add
mov
popf
lret
inc
mov
mov
push
jl
cmp
into
pop
and
dec
xlat
and
test
test
cld
mov
sbb
ja
outsb
movsl
lcall
xchg
shlb
xchg
sbb
sbb
out
sahf
jbe
scas
xchg
cwtl
ret
clc
sub
fildl
cmp
fadd
mov
inc
cmp
jmp
pop
test
out
mov
push
cmp
les
scas
rcll
ret
test
sub
jg
pop
bnd
sbb
add
adc
add
dec
jnp
jp
fcomps
sbb
push
call
out
imul
pop
jecxz
sbb
lods
dec
mull
cmp
cmp
data16
cmp
lods
xor
clc
arpl
pop
push
loop
mov
int3
or
xchg
insb
add
arpl
push
insb
icebp
xchg
into
push
mov
cli
mov
shlb
int
dec
in
subl
inc
dec
hlt
inc
lahf
std
add
lock
dec
cmp
movsl
les
gs
cwtl
inc
dec
dec
push
ljmp
aas
ds
gs
and
jo
mov
xor
dec
mov
test
out
and
jno
clc
nop
pop
mov
std
add
lds
int
cmpsb
dec
mov
mov
sub
ret
inc
jmp
out
cmp
cmpl
mov
enter
jge
ret
sbb
cmpsb
mov
pop
int3
lds
insl
xor
adc
cltd
mov
and
gs
movsb
ds
pop
repnz
xchg
and
ljmp
mov
pop
loop
dec
addr16
cmp
sub
pop
xchg
or
shrb
jb
xor
pop
cld
mov
push
fcompl
sub
ret
es
jno
lret
out
enter
push
mov
or
lea
cmpsb
fwait
lds
sti
push
pushf
sti
jl
jl
fwait
insb
dec
fildll
push
jle
mov
into
add
mov
aam
movsl
cmp
out
call
pop
iret
dec
mov
xchg
push
lcall
jge
mov
ljmp
xchg
dec
in
pop
push
mov
or
pop
clc
xchg
in
dec
xchg
pop
push
cld
enter
jecxz
add
jecxz
dec
push
daa
out
lret
test
xchg
inc
icebp
stc
xor
dec
and
push
push
mov
pusha
push
or
mov
jmp
out
xor
push
push
push
mov
decb
ja
sbb
int3
push
jmp
insb
lds
mov
xor
add
pop
pop
lahf
mov
or
stc
lds
pop
mov
stos
imulb
scas
add
mov
adc
jo
loope
xor
fcoml
dec
sbb
rcrl
cmp
data16
jb
loop
ja
dec
pop
sbbl
push
outsb
mov
dec
aad
rclb
imul
sbb
adc
shl
incb
mov
jo
rorl
adc
enter
mov
movsb
mov
pop
pop
outsb
mov
ljmp
icebp
pop
sub
std
ret
pop
imul
stos
lahf
dec
push
lods
xor
cmp
adc
ljmp
rorl
inc
xchg
clc
loop
std
ss
aas
aam
xchg
xchg
mov
clc
mov
orb
cmpsl
loop
or
sub
jnp
js
dec
sbbb
jp
lahf
rorb
das
js
shlb
jae,pt
cmp
xchg
mov
data16
inc
data16
mov
cmpsl
pushl
jne
cld
mov
sbb
inc
inc
xchg
xchg
jae
mov
in
jns
cmp
add
aas
jo
sbb
inc
lods
jg
cmp
xor
pop
add
mov
push
cld
xor
enter
xor
leave
jge
sbbl
pop
mov
mov
jbe
dec
pop
cld
mov
mov
pop
addr16
aas
nop
push
adc
cld
and
repz
adc
hlt
pop
in
icebp
add
xchg
inc
and
dec
mov
andl
inc
shlb
jg
outsb
sbb
mov
fwait
stos
push
mov
jecxz,pt
insb
popf
repz
lods
or
mov
mov
mulb
and
jnp
xor
sbb
or
movsl
mov
mov
xchg
nop
mov
push
jp
dec
add
ja
ss
jecxz
in
or
test
jae
xor
adc
cmp
ja
dec
mov
ss
push
mov
int3
inc
push
dec
jl
stc
xor
dec
pop
xchg
or
mov
cld
xchg
dec
popf
ljmp
xor
aaa
outsl
incb
and
xor
jl
ljmp
inc
adc
xor
mov
mov
repnz
or
lods
pop
arpl
leave
push
loopne
mov
in
daa
scas
inc
movsl
pop
lea
daa
adc
ret
inc
les
xor
mov
stc
ret
and
gs
ds
xor
cmpsl
xor
insl
mov
or
stos
push
ss
imul
fildl
push
mov
mov
dec
lods
push
sub
out
test
outsb
addb
int3
or
aam
push
pop
stos
cwtl
nop
ret
adc
js
xchg
daa
sbb
cmpsb
repnz
adc
popa
adc
xchg
pop
insl
sbbl
push
cwtl
mov
xor
shrb
jae
shll
cmp
sti
cwtl
fxch
lds
stos
xorb
lds
adc
test
outsl
adc
mov
mov
int3
fdivs
arpl
jge
xor
xchg
xchg
sti
outsl
imul
or
mov
sti
add
pop
mov
adc
int3
xor
jnp
sub
fisttpl
into
lcall
movsb
fld1
fmull
lock
jae
sbb
inc
xor
adcl
inc
lods
clc
pop
mov
inc
cwtl
or
outsb
and
xchg
mov
cmp
dec
dec
cli
inc
mov
xchg
cmpsl
inc
xchg
push
outsb
ljmp
mov
icebp
addl
ret
int
ret
call
cmp
andl
pop
adc
pop
jns
sub
les
xlat
dec
xchg
xlat
add
loop
call
cmp
out
push
and
xchg
xchg
lock
lea
aam
repz
jg
sub
cmp
adc
sbb
push
stos
cmpsb
les
add
or
push
sub
jmp
jge
push
adcb
movsb
mov
cmp
mov
push
sub
lds
dec
mov
sti
shl
imul
fstl
rol
test
fisubs
jl
je
mov
mov
inc
dec
stos
call
popa
int
jne
pop
rclb
add
add
mov
fsubrs
sbb
cld
mov
insl
mov
cmp
and
adc
in
pop
jae
je
or
addr16
jns
jl
std
sub
test
divl
cwtl
lahf
mov
lcall
sbb
gs
leave
pop
push
repz
or
in
ljmp
and
ret
adc
fsubs
add
mov
fists
cmpsb
xchg
sbb
addr16
or
cmpsl
or
ss
mov
inc
jle
mov
push
fimull
and
jb,pt
dec
push
jb
push
flds
popl
cmp
mov
jno
outsl
xchg
jg
sbb
int3
mov
int
ja
lret
scas
adc
xchg
push
sbb
push
and
scas
xchg
dec
add
movsl
lahf
push
iret
test
stos
test
lock
push
ljmp
mov
stos
fmull
loopne
sub
stos
mov
rorb
inc
xchg
loope
out
std
lods
lcall
movsl
mov
iret
or
dec
iret
mov
jp
push
mov
jp
ds
sbb
dec
adc
and
mov
aas
mov
inc
mov
movsl
or
ljmp
dec
call
mov
add
mov
dec
push
add
mov
xchg
pop
cmp
cmp
push
int3
push
cmp
inc
cltd
inc
js
cmp
lret
sub
bound
add
sub
cwtl
popf
stos
mov
push
sbb
bound
or
jo
push
or
mov
pop
sub
push
fs
pop
js
xchg
cld
push
orl
std
mov
hlt
add
cmc
or
adc
or
push
loope
data16
andl
push
fstl
ret
mov
cmp
xlat
and
and
rorb
push
mov
test
test
push
mov
repz
sti
pop
inc
daa
out
push
das
lds
or
fdivrs
push
pop
inc
or
add
dec
mov
loopne
xor
bound
fiadds
jmp
in
imul
cmp
or
movsb
ret
jge
mov
xchg
dec
sbb
sbb
js
pop
xor
push
clc
inc
dec
inc
or
cli
mov
dec
loopne
loopne
outsl
pushf
jne
sti
es
jg
arpl
mov
xchg
ds
lea
aam
imulb
leave
xchg
jmp
in
jl
xor
icebp
jge
inc
jno
sub
cmpsl
sbb
inc
icebp
ss
out
xor
in
mov
and
jae
fwait
jge
push
adc
jnp
mov
add
inc
iret
dec
mov
fisubl
sbb
xchg
outsl
lahf
test
or
stc
cmc
cld
into
sbb
mov
cltd
sub
gs
sbb
test
inc
xor
repnz
std
movsb
popf
or
test
rorb
inc
jns
sarl
jne
and
loope
sbb
arpl
jbe
lods
cltd
aam
testl
das
cwtl
jmp
or
mov
sti
xor
loope
mov
clc
jmp
repz
je
int3
incb
push
call
adcl
xchg
in
popa
jecxz
xchg
nop
imul
imul
push
xlat
lahf
cs
aaa
test
adcb
in
pop
arpl
fsubs
mov
mov
dec
push
adc
ja
mov
stos
jne
std
adc
sbb
and
stos
mov
dec
arpl
jle
fwait
aam
xor
lcall
pop
xchg
in
test
adc
daa
imull
and
push
push
xchg
sbb
mov
lods
ss
sub
jno
sub
out
in
xor
scas
imul
mov
or
sub
or
aad
fisubl
xorl
loopne
std
adcl
lcall
addl
mov
inc
jecxz
cli
in
lods
roll
mov
into
and
ret
cmp
jle
fwait
mov
cmc
or
jnp
lods
xchg
mov
sub
les
xchg
xchg
ja
data16
in
dec
inc
xchg
mov
cmp
aaa
cmp
ret
add
fs
cmp
dec
incl
in
pop
push
test
jb
lcall
add
mov
outsb
in
push
mov
fadds
test
adc
mov
xchg
out
mov
lcall
repnz
loop
push
push
dec
leave
aaa
push
pop
popa
or
cmp
xchg
cli
lods
repz
mov
push
in
data16
shrl
mov
mov
mov
int3
test
cld
dec
sbb
fistl
mov
sahf
cmp
lods
inc
scas
cs
adc
mov
inc
imul
add
push
aas
cld
rorb
mov
and
pop
aaa
xchg
mov
and
lods
outsb
xor
lods
add
clc
cmpsb
push
lea
gs
fcomps
rsm
insb
js
xchg
xchg
sar
shrl
movsb
lcall
ret
mov
mov
push
pop
adc
jo
mov
lcall
mov
jle
popf
mov
mov
mov
cmpsb
push
sub
push
sbb
pop
cmp
test
lcall
mull
dec
dec
adc
in
ss
test
adc
mov
sub
rol
mov
mov
shll
xchg
outsl
add
or
or
test
sub
xchg
movaps
mov
iret
xor
mov
jns
mov
insb
add
fists
mov
jb
adc
jns
xor
sahf
jo
mov
mov
arpl
cmpsb
jmp
sub
mov
sbb
stos
mov
cmc
inc
cmp
iret
push
add
std
mov
push
push
ds
aas
dec
cld
pop
cmp
adc
sub
inc
mov
add
out
bnd
outsl
ss
adc
int3
cmpsl
pop
sub
icebp
mov
cltd
push
dec
adc
push
outsl
daa
mov
call
pop
insl
popa
and
jmp
sbb
pop
sbb
inc
cld
xchg
add
aam
fs
mov
dec
repnz
add
mov
cmpsb
call
call
or
std
jae
repz
or
or
jne
jbe
dec
hlt
ds
adc
sahf
test
xchg
loope
cld
cmp
test
addr16
and
jg
jbe
mov
into
not
insb
adc
and
sar
mov
sbb
mov
adc
or
sarb
cmp
mov
subl
xor
xchg
fnstsw
dec
inc
mov
out
inc
lock
inc
ret
xchg
lret
ret
xchg
gs
pop
pop
sub
sbb
std
jle
pop
pop
ja
lret
inc
push
lods
clc
leave
add
faddl
mulb
mov
xchg
pop
stc
in
mov
js
fbld
add
out
mov
testb
test
in
pop
pop
mov
subb
aam
aaa
adc
mov
pop
subl
sbb
mov
mov
out
js
mov
mov
push
fs
adc
fwait
cmp
int3
sub
jns
dec
dec
jge
pop
iret
int
pop
mov
jnp
inc
int
xor
add
fwait
jmp
or
push
loope
inc
nop
xchg
push
clc
out
mov
adc
pop
dec
xchg
sub
mov
sbb
or
sub
push
and
push
pop
jecxz
int3
insb
cmp
repnz
mov
mov
out
jl
jle
xor
popf
bound
lods
icebp
fistpl
add
movsl
lock
jge
push
stos
xor
xor
mov
aam
enter
add
cmpsl
adc
adc
xchg
inc
xor
mov
jecxz
adc
mov
jmp
es
mov
jo
hlt
fsubrl
add
mov
andb
in
sbb
push
leave
fucom
or
in
push
mov
xor
pop
fbstp
or
pop
mov
arpl
or
in
pop
or
jmp
add
jbe
dec
or
loope
rclb
aad
dec
daa
sub
inc
rcll
andb
std
test
or
out
arpl
cli
rcrb
scas
pop
mov
sub
fwait
loope
faddl
das
inc
insb
push
lret
mov
loopne
adc
ljmp
pop
jecxz
jg
stos
jno
nop
mov
int3
test
arpl
stos
and
roll
aam
mov
frstor
aas
les
sbb
xchg
or
dec
mov
and
and
push
and
lods
dec
jns
stc
addr16
or
cmp
add
into
ficoml
repz
js
lea
jbe
subl
push
enter
push
xchg
or
xor
sbb
jbe
fidivl
xor
nop
insb
inc
test
lahf
das
xchg
nop
scas
aam
push
shll
push
mov
push
push
mov
shrl
fisubrs
daa
jno
adcl
cld
sub
jo
movsb
lret
sub
sbb
push
add
ret
in
decl
push
shll
and
ret
adc
and
lds
lods
mov
dec
imul
mov
mov
repnz
mov
ret
mov
stos
imul
mov
lds
adc
xor
int3
or
xor
or
rclb
or
repnz
cwtl
and
mov
mov
sbb
jbe
push
mov
in
stos
movsb
xor
or
adc
lods
dec
loop
and
adc
ss
lcall
xor
out
js
pop
or
sub
jbe,pn
mov
push
add
scas
jno
jns
sub
das
cs
cmc
or
into
in
mov
push
mov
scas
dec
shl
or
outsl
jno
sub
push
mov
adc
adc
les
std
repz
test
mov
and
pop
jb
push
imul
movsl
std
je
xchg
and
bound
lods
addr16
push
xchg
inc
adc
aaa
sub
push
addr16
push
arpl
mov
mov
movsb
mov
jl
cmc
push
sbb
cwtl
inc
out
inc
outsl
mov
test
jle
sbb
sub
jle
bound
lds
or
pop
push
mov
std
and
sbb
and
mov
fwait
push
das
ljmp
jno
sub
xchg
arpl
call
inc
repnz
mov
loope
movsl
lea
cmp
add
mov
xchg
je
inc
shrl
test
xchg
jbe
pop
js
imull
adc
cwtl
xchg
cs
idivl
or
fwait
jnp
cmp
xchg
add
mov
sub
sbb
pushf
cmp
out
and
outsl
repz
inc
xchg
xlat
das
mov
cmp
lret
aad
push
ret
sahf
pop
or
lret
mov
js
cmpsl
xchg
xchg
mov
adc
sub
ret
sbb
inc
andl
or
mov
fdivs
mov
stos
jns
jnp
xchg
popa
push
into
jns
incb
dec
outsl
pop
pop
das
mov
inc
xor
mov
sub
mov
mov
pop
push
cmc
ret
out
push
xchg
push
test
orl
push
xor
jg
jno
dec
jb
repnz
aam
add
sbb
adc
hlt
addb
dec
push
adc
jle
pushf
cmp
lods
sub
inc
jg
daa
add
imul
xor
mov
es
jo
sbb
xchg
mov
mov
or
sbb
push
xchg
cmpl
scas
mov
lea
call
mov
fstpt
adc
data16
imul
push
and
das
jnp
enter
lods
bound
les
xor
fwait
pop
mov
add
inc
div
sub
cmp
test
mov
push
aad
dec
jbe
mov
imul
popf
xchg
pop
inc
mov
lret
or
out
inc
popf
sbb
push
shll
icebp
inc
add
sub
push
mov
into
data16
bound
scas
mov
jg
cmpsb
fwait
lcall
js
fucomip
stos
fdivs
outsb
jnp
xchg
xchg
mov
out
sbb
out
dec
jae
sub
pop
mov
outsl
mov
sbb
mov
mov
jp
xor
out
mov
inc
stos
or
xor
sub
repnz
dec
xchg
movsl
xchg
mov
outsb
ljmp
adc
push
test
jecxz
loopne
scas
jmp
mov
daa
insb
mov
sbbl
mov
jp
imul
into
push
mov
mov
stc
aas
dec
inc
prefetch
mov
movsb
in
and
sbb
mov
sti
daa
nop
xor
pop
adc
out
aaa
inc
mov
xor
test
in
pop
jne
fnstsw
stos
mov
sbbl
pop
lret
daa
or
imul
jl
adcl
repz
mov
inc
ret
push
jns
aad
out
or
xchg
xor
addr16
popa
sub
aas
xchg
loop
bound
and
push
push
ret
loope
clc
popa
test
std
outsb
hlt
or
pop
add
and
call
add
fcmovb
adc
add
daa
stc
adc
ja
push
mov
xor
mov
cmpsb
mov
cmc
std
lods
cli
or
jo
mov
push
pushf
push
mov
mov
mov
repnz
fisttpl
sarl
cmpsb
xor
dec
mov
adc
ljmp
pop
leave
call
lods
or
xchg
mov
xor
xchg
in
xchg
and
and
sbb
cmpsl
movsb
out
out
lret
nop
orl
ds
pop
inc
bound
test
divl
or
cld
pop
push
out
mov
sarl
callw
fidivrs
xlat
imul
fildl
sbb
push
mov
data16
mov
aam
ret
mov
lods
fcoml
fiadds
mov
add
add
in
jg
pop
rol
xor
loope
pop
mov
inc
stos
mov
insl
mov
jae
fdivrp
mov
xorl
and
cld
cld
repz
jno
jno
mov
inc
inc
xor
gs
jle
es
mov
pop
fnstenv
test
aam
stc
jle
mov
xchg
mov
shrb
xor
test
jl
stc
jg
fsubrl
or
or
mov
xchg
push
incb
jae
shrl
jge
movsb
cs
cld
aad
add
cmp
gs
std
shll
insb
xchg
cmp
call
shlb
jl
dec
popf
je
pop
mov
push
bound
xor
dec
es
jg
mov
mov
sub
pusha
jnp
aam
push
fcoms
xlat
data16
popf
add
jecxz
dec
dec
and
fsubs
sub
adc
jno
in
fsubrs
call
mov
andl
lds
loop
pop
ret
fwait
jmp
rolb
adc
fdivr
adc
movsb
mov
add
lret
dec
ror
shll
lret
loopne
jle
fidivrs
imul
jmp
out
inc
insl
xorb
in
adc
popf
sub
mov
adc
testl
lea
cmp
pusha
pop
js
xor
test
push
inc
push
pop
cmp
pop
dec
lea
xor
daa
daa
lret
jne
test
push
rcll
jbe
mov
dec
jb
aas
cmp
in
filds
cmp
push
xchg
inc
cmpsl
xor
sahf
and
or
jmp
mov
notb
insl
inc
or
adc
adc
leave
in
cwtl
ljmp
cmovle
jno
mov
shrb
push
mov
jno
and
int3
notb
fwait
push
ficomps
daa
jae
insl
jae
mov
sbb
loope
cwtl
popf
scas
add
popf
ss
jp
xchg
inc
call
and
mov
movsb
mov
ja
xchg
insl
cli
movsl
pushl
jb
pop
in
aas
hlt
int3
jmp
xchg
mov
mov
out
movsl
xor
ficoms
xor
movsb
cmc
ret
repz
sti
mov
jb
scas
int
sbbb
pop
jge
push
inc
frstor
imul
lods
adc
and
dec
stos
ret
test
and
enter
das
mull
jg
dec
sbb
dec
xchg
inc
push
inc
inc
scas
dec
filds
add
aam
xchg
inc
vpmacsdqh
xchg
sti
andb
and
ss
xchg
mov
repnz
call
stos
test
jecxz
sub
mov
sub
inc
adc
sbb
push
ja
pop
sbb
jno
inc
lahf
mov
loopne
rolb
mov
push
out
sbb
lds
aam
into
mov
movsb
push
enter
dec
int3
cmp
push
add
leave
dec
out
mov
pop
aas
push
cmp
jb
das
scas
xor
xchg
rorl
cmovle
idivl
in
xor
mov
stos
adc
mov
sub
ret
cmp
and
aas
cmp
lds
pop
cmp
sahf
orl
lcall
mov
popa
in
jecxz
outsl
fidivs
jbe
jp
mov
pop
cmp
stc
insl
test
daa
pop
lret
ss
inc
incl
inc
xchg
jae
ret
nop
sti
nop
mov
and
test
inc
mov
pop
mov
out
outsl
lods
xchg
mov
add
xorl
mov
xor
rcrl
and
sub
dec
data16
push
jmp
mov
nop
icebp
ljmp
add
xor
cld
call
gs
outsb
mov
std
lods
inc
pop
adc
sbb
jno
gs
pop
push
cs
lcall
and
jb
insb
adc
or
inc
test
inc
std
jae
xorb
push
imul
lods
push
and
lcall
rcrb
push
xchg
sub
es
out
les
mov
mov
adc
pop
popf
insl
mov
das
cmp
xchg
in
es
xchg
addr16
jge
aas
add
out
fistpl
shr
inc
sahf
adc
mov
mov
into
jbe
inc
jne
adc
std
jo
xor
cli
clc
adc
lods
pop
shl
sbb
dec
stc
mov
mov
shrb
pop
inc
in
sub
fstp
ds
js
and
sbb
fcom
enter
js
dec
aam
lds
push
sbb
idivb
mov
jg
add
inc
jb
push
pop
inc
ret
cmpl
adc
push
int
out
sbb
outsl
fsubs
cmp
jge
inc
loope
mov
ficoml
cs
mov
aad
ja
xor
dec
pop
mov
lds
mov
adc
dec
js
mov
mov
fldcw
outsl
and
sahf
das
or
iret
adc
sub
sbb
inc
dec
daa
xchg
pop
lea
lock
push
adc
cwtl
mov
inc
insl
cmc
fnsave
pop
lds
cmp
push
inc
das
xor
pop
fwait
jp
mov
mov
in
movsb
hlt
jl
pop
data16
push
cmp
es
repnz
jne
jmp
mov
movsb
add
in
iret
mov
scas
jae
mov
dec
inc
xor
sbbl
sbb
dec
pop
adc
sub
cltd
jno
xchg
addr16
xchg
mov
add
xchg
mov
movsb
sub
push
mov
lock
in
and
lds
xchg
dec
jo
mov
jg
push
sbb
pop
adc
pop
cmp
cld
daa
aaa
xchg
add
jecxz
int3
and
idivb
hlt
clc
mov
pop
pushf
mov
pop
jge
push
dec
out
add
dec
cmp
sbb
lea
fs
scas
pop
loop
jno
push
adc
xchg
cmc
repz
cmp
enter
js
mov
jb
icebp
inc
and
ret
cmp
subl
idivl
shlb
xor
mov
cmp
sbbl
gs
out
outsb
cli
pushf
and
ss
add
jo
int3
and
sbb
sbb
les
pushf
mov
nop
inc
inc
inc
popf
je
cmp
out
nop
cmpsb
xchg
lods
and
hlt
xchg
or
aas
cli
add
mov
jno
mov
and
pop
mov
fdivs
add
cmp
and
into
jle
hlt
test
jmp
data16
mov
pop
sarb
stos
xor
lret
xchg
add
push
fmuls
shl
mov
lret
mov
push
lret
cmp
or
in
mov
jge
dec
jecxz
stos
subb
test
enter
push
xlat
dec
xchg
push
out
test
negl
pop
cmpsl
das
popa
add
fs
jb
fs
mov
xchg
movsl
sub
arpl
jecxz
mov
test
mov
fwait
push
hlt
aam
xchg
and
in
in
enter
mov
icebp
cmp
and
aam
test
mov
sbb
xchg
and
add
ss
sbb
daa
pop
mov
xchg
shll
and
call
insb
addr16
jmp
repz
scas
or
hlt
cmp
cmp
sub
xor
ss
movsl
dec
sub
pop
xchg
cld
mov
nop
cmpsl
je
xchg
movsb
outsl
in
iret
lock
and
jbe
xchg
adc
pusha
push
mov
xor
inc
sub
iret
shl
insl
loop
arpl
mov
xchg
jns
push
dec
mov
inc
or
add
clc
cli
inc
out
mov
inc
mov
adc
mov
cmp
adc
and
cmc
xchg
out
xor
xor
cmp
cmp
js
adc
pop
jae
xor
push
fstl
into
movsl
xchg
scas
cwtl
mov
mov
mov
sbb
add
xchg
jns
call
es
ds
xchg
lods
xor
adc
add
cmp
xor
pop
xor
loop
mov
pop
xor
mov
mov
and
shll
and
pop
in
arpl
test
ljmp
mov
or
or
ss
ror
ret
fdivrp
idivl
ljmp
add
sub
rcrl
xor
mov
pop
push
roll
pop
mov
enter
pop
test
mov
xchg
pop
lds
movsl
inc
mov
mov
popf
push
inc
test
ja
push
dec
pop
and
in
loopne
sub
movsb
mov
bound
pusha
adc
arpl
or
push
int
pop
bound
adc
bnd
scas
arpl
mov
and
pop
inc
cmp
push
incl
mov
dec
or
push
push
mov
push
sub
mov
pop
in
mov
dec
jecxz
pusha
dec
movsb
popf
mov
dec
add
in
mov
std
dec
pop
xorl
lcall
jg
incl
add
fwait
dec
sahf
mov
or
rorl
mov
sub
outsb
add
or
sbb
ror
mov
inc
loop
mov
and
das
stos
mov
pop
in
mov
call
push
icebp
fiaddl
cmpsb
out
jecxz
in
shrd
sbb
xor
xor
in
xchg
dec
mov
pop
divb
in
ja
adcb
mov
mov
incb
mov
icebp
cmpsb
inc
pusha
mov
fidivrl
or
popf
push
or
cmc
xchg
stc
push
mov
mov
push
and
cmc
push
fmull
js
lahf
repz
imul
cmp
inc
pop
sahf
adc
dec
rclb
subl
pop
mov
je
out
mov
loope
xchg
xor
push
cmp
pop
jae
in
rorb
lods
mov
mov
pop
rcrb
push
mov
lcall
mov
sub
cmp
rclb
mov
jge
ljmp
aaa
shl
xor
xlat
mov
rorl
jmp
rolb
cwtl
xchg
cld
jg
out
and
int3
imul
mull
nop
jmp
insl
jns
mov
aaa
fists
imul
movsl
push
repz
aaa
lods
jl
mov
fs
loop
or
add
and
xchg
push
and
mov
sbb
bound
aad
insl
dec
pusha
and
sbb
cmp
cwtl
inc
setno
out
pusha
inc
dec
jecxz
or
dec
mov
lods
outsb
out
jecxz
sbb
jnp
jns
mov
andb
divb
xchg
or
ret
popf
dec
mov
pop
lret
xor
jecxz
sub
iret
jmp
inc
int
int3
movsb
push
bound
lods
fmull
push
pop
xchg
and
aaa
adc
jo
mov
dec
mov
mov
jecxz
ret
rolb
xor
imul
daa
xor
notl
lret
aaa
adc
rol
jmp
negl
pushf
push
scas
xchg
mov
mov
adc
test
cmp
outsl
pop
mov
push
cmpsb
inc
fs
imul
push
mov
int
push
fwait
adc
add
push
fsubr
pop
sbbb
jg
pop
shlb
clc
ror
push
cwtl
or
cwtl
ret
int3
mov
ds
jg
aad
das
add
addr16
test
rol
mov
and
jp
xlat
insb
pop
adc
or
not
les
fsts
cmp
dec
fldt
fildl
dec
loopne
push
add
movzwl
inc
cmp
xor
inc
pop
jmp
in
mov
orb
cmp
mov
cwtl
jle
ja
es
inc
lret
test
inc
arpl
nop
aas
movsb
repnz
mov
pop
addr16
bound
out
add
inc
repnz
and
sbbl
or
xor
adc
inc
push
jl
lcall
pop
cmp
dec
leave
sahf
cli
dec
jns
jbe
clc
dec
xor
pop
pop
aad
lahf
dec
shll
pop
inc
xchg
rclb
in
ret
inc
or
add
sbb
loopne
sub
cli
mov
push
pop
mov
jns
filds
sub
sub
out
push
test
pop
daa
scas
xchg
andb
pop
sbb
xor
ret
dec
stos
mov
pop
dec
repnz
filds
mov
call
push
jp
cltd
jle
adc
arpl
test
les
pop
subl
call
xor
and
xor
js
xchg
aas
fimull
mov
int
mov
cs
xlat
jae
cltd
xor
xchg
jecxz
loopne
out
fs
loope
cld
cmpsb
fmull
cltd
loop
inc
mov
adc
inc
test
inc
fists
js
inc
or
cmp
jo
pop
in
cs
jmp
sub
sub
sbb
ss
mov
xchg
inc
popa
movsb
cli
jg
xor
loope
xchg
frstor
xchg
lods
popa
out
jb
push
daa
jne
mov
cli
std
dec
cmp
loope
mov
ljmp
decb
stos
aad
call
cs
adc
and
jmp
mov
mov
dec
fisubl
mov
out
inc
jecxz
aad
sbb
mov
adc
mov
roll
shrl
inc
cli
test
xchg
jb
lret
xlat
out
jle
adc
xchg
icebp
sbb
adc
sti
cltd
punpckhwd
test
jp
or
push
inc
cmpsl
fimull
push
in
daa
out
in
loop
push
aad
lods
adc
push
sbb
jle
cmp
mov
jne
dec
adc
xor
ja
pop
adc
mov
movsb
pop
aas
imul
jmp
icebp
xor
mov
stos
shrl
mov
repz
lahf
jle
stos
mov
jmp
dec
sahf
ficompl
aad
loopne
mov
iret
xor
adc
in
je
adc
repz
adc
add
lahf
ret
daa
mov
mov
ja
scas
movsl
out
add
and
repz
mov
jmp
outsl
jmp
insl
pop
idiv
pop
and
repnz
clc
add
xchg
push
jg
sub
mov
rcll
inc
mov
ret
sub
into
pop
jnp
loope
jecxz
sbb
cmpsb
arpl
aam
repz
ret
in
fmuls
and
xor
sbb
inc
and
jns
dec
lret
repnz
jmp
movsl
jnp
dec
es
push
cwtl
jge
dec
fmull
lcall
inc
mov
dec
enter
pop
leave
sub
add
and
push
ja
out
test
pop
dec
mov
xchg
into
lea
loope
mov
addb
or
stc
cld
sbb
bound
xchg
dec
loope
mov
shlb
push
xor
addr16
add
push
mov
pop
push
add
pop
mov
sub
push
mov
mov
xchg
jge
lods
notb
std
jmp
xor
out
adc
xchg
pop
scas
sar
ljmp
mov
cmp
fdivp
push
scas
ficomps
push
std
sub
sbb
xchg
xor
rcr
xor
stos
mov
enter
and
dec
pop
jne
pushf
repz
leave
or
aaa
cmp
pop
aad
cltd
outsl
call
or
cmc
mov
out
push
test
mov
arpl
lret
scas
push
add
jmp
mov
adc
hlt
nop
xor
dec
mov
xchg
leave
jle
pop
cmc
push
mov
xor
dec
out
lds
mov
andb
adc
dec
repz
cwtl
xchg
aas
lock
enter
aam
test
loope
sbb
addr16
xlat
dec
mov
pop
cmp
inc
dec
fwait
pop
add
mov
jl
xor
push
in
shll
jg
ret
test
and
cmc
cmp
xchg
push
mov
mov
jp
pop
mov
mov
dec
lods
lcall
fidivl
lcall
cmp
xchg
mov
or
fldcw
es
pop
lds
arpl
inc
test
mov
pop
rorb
js
insl
push
pop
jnp
add
test
mov
xchg
lods
xchg
or
insb
dec
lret
and
cltd
and
das
ljmp
pop
xchg
stc
test
jbe
mov
xchg
lock
aam
push
and
jl
les
inc
xchg
andnps
dec
sub
fimuls
xchg
push
scas
jns
push
in
jae
scas
insl
mov
addr16
sbb
sti
dec
and
mov
test
gs
sub
hlt
add
mov
shll
loopne
not
xchg
mov
fistpll
test
push
or
pop
and
ret
or
mov
inc
movsb
mov
jp
cmp
jne
loopne
sarb
negb
mov
jnp
negl
adc
rolb
mov
and
jmp
das
xchg
jle
sbb
pop
sub
add
movsl
div
pop
out
dec
mov
inc
jge
xlat
sub
pop
dec
lods
sbb
push
shlb
sbb
gs
sbb
mov
add
idivb
mov
repz
leavew
leave
jecxz
out
xorb
xchg
nop
and
fldenv
xchg
jne
cltd
dec
ret
test
pop
mov
cmp
rol
inc
sub
inc
les
push
dec
outsb
fistps
mov
iret
jno,pt
or
adc
xchg
mov
int
inc
scas
pop
or
push
daa
cmp
and
div
in
in
cltd
push
mov
cmp
aas
cmp
test
imul
push
xor
iret
xlat
or
jp
add
loope
xchg
out
sbb
jge
inc
out
icebp
cmp
or
cmp
add
lcall
aas
dec
sti
sbb
mov
icebp
out
push
or
loop
call
pop
shlb
inc
pop
mov
rcl
mov
call
xorb
shlb
mov
lret
cmp
inc
or
test
mov
mov
insb
add
insl
push
add
and
lahf
mov
call
leave
out
shlb
ret
ret
adc
arpl
rorb
arpl
cwtl
fisubs
push
or
xchg
icebp
lea
add
repz
cmpsb
xor
dec
je
xchg
lock
add
clc
je
mov
and
dec
leave
or
mov
out
aas
arpl
test
or
mov
jmp
inc
outsl
bound
add
push
fcomps
xchg
jbe
pop
xchg
jbe
xchg
bound
fs
int
loope
test
xchg
jae
cmp
sub
cwtl
leave
aad
inc
mov
scas
cmc
push
mov
imul
xor
inc
pop
into
mov
into
sub
aad
fistl
mov
daa
out
dec
mov
xor
imul
mov
mov
sub
inc
jo
jo
xchg
cltd
pop
fnstsw
dec
mov
pop
dec
repnz
pop
imul
sbb
pop
dec
add
test
pop
fisubrs
adc
notl
add
mov
aam
bnd
and
xchg
xchg
mov
cli
cmp
fistpl
push
hlt
pop
insl
out
xchg
daa
push
add
mov
jle
test
mov
je
sub
gs
nop
push
xor
jnp
into
inc
xchg
js
push
test
ja
mov
push
push
mov
popa
and
fildll
es
pop
mov
int
gs
jl
sub
aaa
adc
jo
or
dec
sbb
and
xor
pop
inc
cmp
sub
adc
loope
sarl
jg
dec
add
jnp
pop
sub
enter
imul
jg
ds
mov
enter
lea
pop
popf
xchg
dec
incl
push
adc
or
push
xchg
loopne
arpl
sbb
mov
xor
push
jbe
movsb
mov
jmp
or
dec
loopne
xchg
out
sahf
push
jae
sbb
rorb
xchg
cmc
das
sub
or
hlt
inc
pop
mov
adc
jns
pop
hlt
mov
pop
add
xchg
push
mov
lret
in
insl
hlt
inc
loopne
cmp
imul
aam
call
xchg
lds
stos
ds
rcll
in
out
ret
push
sbb
inc
mov
mov
mov
movsb
mov
xchg
mov
int3
loop
in
add
jne
push
sbb
stos
test
rcl
bound
fiaddl
out
cmpb
xchg
cltd
fldl
je
daa
mov
outsb
sub
nop
push
loopne
mov
decb
sbb
das
dec
out
push
inc
test
pop
aad
ret
sub
inc
cmpsb
xchg
xor
cld
adc
xor
jnp
mov
mov
orb
loop
sbb
int3
test
pop
xor
jecxz
jmp
pop
mov
leave
sub
or
mov
sub
imul
cltd
aaa
sub
mov
pop
mov
xor
scas
icebp
sbb
add
or
aam
flds
sub
mov
dec
dec
dec
out
and
inc
sahf
out
jb
subl
xor
xchg
movsl
test
push
shlb
xor
dec
popa
sbb
out
movsl
das
imulb
jg
dec
inc
adc
sbb
push
jbe
es
out
push
mov
add
sbb
leave
iret
nop
mov
imul
mov
leave
sbb
cli
push
mov
xchg
sub
pushf
outsl
xor
adc
inc
xchg
out
inc
xor
add
fsubrl
mov
sbb
lock
cmpb
and
cli
pop
pop
xorb
sbb
jmp
or
jo
push
mov
stos
aam
les
pop
mov
das
loope
xor
mov
mov
push
cmp
mov
dec
xchg
jg
test
mov
cli
mov
xorl
faddl
out
fisubs
adc
std
cmp
xor
gs
incb
pop
xor
icebp
sbb
outsl
mov
pop
xor
xchg
fadds
inc
test
xor
testl
adc
inc
dec
sbbb
cmp
ret
ficoml
add
mul
cwtl
aas
shl
push
add
add
jmp
cmp
dec
fucomi
insb
inc
xor
cmp
push
sbb
jo
push
cld
fmull
and
jecxz
mov
stos
jns
cmp
pop
cmpsb
sbb
cwtl
fiaddl
mov
xor
cli
inc
xorl
add
xchg
jle
movsl
xor
daa
sahf
jmp
arpl
sbb
in
fsubl
mov
leave
jecxz
adc
fiaddl
stos
clc
movl
shlb
nop
ss
sub
cmpsb
leave
xchg
lods
push
push
fucompp
lock
inc
cmp
pop
xor
inc
test
pop
out
std
mov
icebp
aaa
inc
pushf
add
aaa
cli
ret
xchg
add
mov
ret
xor
ds
xchg
dec
sub
inc
jge
movsb
aaa
cld
jmp
nop
test
sarl
insb
sbb
dec
gs
and
and
into
movsb
pop
push
dec
iret
cmpsl
cmpsb
movsl
jp
ja
jnp
mov
ljmp
xchg
jns
xor
sahf
lods
adc
fnstcw
lret
lock
mov
add
jg
push
out
jl
pushl
pop
pop
xchg
jl
pusha
sub
pushw
mov
dec
pop
js
insl
popa
daa
push
roll
mov
imul
lcall
shll
xchg
sbb
jbe
lea
xchg
adc
and
mov
add
lret
pushf
or
cmpsb
jbe
sbb
adc
add
inc
or
push
cmpsl
or
fisubs
out
dec
in
and
inc
cmp
stc
fstpt
iret
cmpsb
clc
push
or
mov
xor
sarb
mov
push
push
or
je
inc
pop
pushf
push
cmp
pop
cltd
loop
dec
adc
mov
xchg
push
mov
cmp
xor
mov
add
jg
cmp
inc
mov
jle
push
mov
push
adc
test
mov
call
xor
xor
ud2
cltd
adc
and
aad
and
xchg
rolb
xor
test
inc
mov
push
imull
sub
jg
stc
or
mov
adc
add
fwait
inc
adc
stos
mov
cld
popa
ljmp
cli
adc
or
dec
sub
dec
adc
ret
movsb
rcrb
mov
and
pop
sahf
cmp
adc
mov
push
ret
aam
test
inc
gs
ret
mov
repnz
cltd
cmpsl
arpl
imul
enter
loope
push
dec
push
dec
cmovae
cmpsl
movsl
adc
aad
imul
push
es
mov
and
jecxz
add
push
mov
cmpsb
xchg
push
enter
faddl
xchg
jl
push
lods
inc
sbb
fsts
nop
icebp
dec
sub
cmp
clc
mov
test
inc
ror
bound
or
shrb
sub
out
adc
out
xor
or
mov
arpl
decb
int3
stos
inc
adc
adc
pop
out
cld
imul
stos
xchg
rcl
pop
call
arpl
or
dec
push
divb
and
hlt
das
adc
cmc
les
and
cltd
sahf
jg
adc
mov
icebp
mov
roll
ret
sarl
adc
dec
push
out
xchg
sub
jno
imul
inc
ds
mov
sahf
je
xlat
xchg
push
mov
xchg
pop
repz
jg
and
ret
jl
and
fldcw
popa
jge
cmp
adc
fst
clc
lea
cmp
movsb
cli
cmpsl
daa
call
push
lahf
lock
sbb
inc
pop
subb
cmp
jo
cmp
scas
int
xchg
xor
es
xor
bound
inc
dec
ss
fs
push
dec
mov
sbb
adcb
fimull
cltd
inc
ljmp
arpl
dec
mov
mov
scas
repz
ss
push
lock
addr16
into
cmp
movsb
and
loopne
aaa
jne
or
lea
push
and
jae
loop
dec
inc
mov
aam
sub
xlat
and
faddl
push
testl
and
ja
ret
roll
sbb
push
testl
mov
mov
and
mov
xor
adc
mov
or
popf
mov
inc
add
test
insb
adc
dec
movsl
xor
dec
jecxz
add
or
pop
mov
sbb
rclb
mov
dec
mov
dec
subl
movsb
xchg
int3
xor
or
or
jl
aaa
scas
scas
mov
mov
rcll
repnz
mov
loope
sbb
daa
xchg
mov
push
xchg
add
mov
push
cltd
movsb
xchg
push
mov
icebp
dec
ljmp
push
shll
mov
test
pop
mov
pop
push
mov
and
aas
ficomps
cmp
and
into
rorb
cmp
xlat
xchg
shl
loop
jae
lahf
lahf
adc
fnstsw
sub
shl
hlt
lds
cmp
cmp
aam
jmp
or
sbb
aas
jbe
je
dec
inc
lcall
mov
and
mov
xor
insb
in
lret
lret
movsb
adc
repnz
pop
push
fnstsw
xor
pushf
cmc
mov
lods
aas
cmp
rcr
scas
push
cltd
cmp
xchg
nop
adc
adc
subl
addr16
sti
and
leave
dec
clc
inc
das
nop
inc
pop
mov
ret
xor
inc
fldenv
push
mov
pushf
dec
lods
imul
icebp
sub
inc
cmp
push
push
out
or
hlt
mov
dec
int3
jge
call
loop
rolb
lods
mov
test
test
test
lahf
mov
stos
or
pop
add
add
dec
jge
jne
xchg
out
aad
cmc
dec
pop
dec
cwtl
and
ret
repz
push
add
jle
and
and
mov
imul
out
daa
xor
inc
loop
mov
xchg
fldt
rcrb
xchg
cwtl
bound
xor
jp
jle
xchg
mov
sbb
or
or
sub
cmp
push
and
adc
add
add
pop
fstps
loopne
shrb
or
fbld
enter
mov
inc
lock
and
sbb
jbe
aas
pop
cmpb
arpl
sub
xlat
out
out
mov
mov
scas
popf
dec
in
jmp
sbb
mov
push
imul
pop
add
add
rcrb
xchg
and
jl
in
insb
icebp
push
das
xor
add
dec
lods
inc
arpl
xor
mov
xor
lods
dec
xor
sti
data16
sarb
lods
pop
xchg
pop
mov
or
gs
dec
cld
lods
xchg
enter
out
or
js
jge
lret
inc
shll
dec
aam
je
jp
and
xchg
inc
and
push
es
pop
jp
dec
mov
jge
xchg
mov
fs
dec
and
dec
lods
cmpsl
int
subb
xor
xor
push
shlb
or
add
xchg
and
dec
mov
mov
push
fs
mov
test
dec
out
imul
push
fucom
test
aad
fstpt
out
add
sbb
sahf
shrl
scas
inc
aas
call
in
pmuludq
push
into
add
cmp
xor
js
insl
jge
je
repnz
sti
sbb
jecxz
jo
dec
or
bnd
fimuls
in
jne
popa
dec
stos
es
aas
sub
insl
xchg
icebp
xchg
sbb
mov
mov
cmp
xor
les
jp
insb
xchg
sbb
sbb
push
mov
roll
mov
imul
mov
xor
scas
inc
mov
loop
push
data16
daa
mov
sbb
rolb
subb
int
dec
xchg
inc
mul
call
xor
ss
jle
inc
out
mov
pushf
rcrl
add
lods
imul
stos
push
sub
loope
inc
inc
movsl
mov
mov
inc
and
cmp
shll
jl
or
inc
or
jge
insl
jg
xor
aad
mov
addl
dec
jg
push
pop
outsb
in
leave
or
adc
aas
pop
cmc
scas
dec
adc
xchg
jp
test
cli
or
std
call
jg
push
jne
add
jbe
mov
adc
and
jo
lock
add
mov
jmp
pop
or
cmpl
ja
jl
test
sti
fbstp
and
adcl
pop
faddl
or
les
scas
std
add
lahf
push
adc
loopne
test
shlb
sti
leave
sbb
cmpsl
lret
test
cmp
and
cmp
repz
fxch
pop
sarl
push
xor
push
push
jnp
and
daa
xchg
sub
faddl
adc
xchg
mov
mov
rorb
push
xchg
adc
sub
hlt
inc
dec
arpl
mov
das
xchg
popa
scas
push
sub
xchg
mov
shll
add
jb
add
lret
mov
mov
call
push
scas
out
jecxz
lcall
jne
movsl
in
ds
inc
sbb
sbbl
push
xor
inc
lret
pop
or
cmp
cmp
adc
mov
jb
es
bound
adc
add
add
or
jmp
scas
push
out
xor
inc
in
xchg
outsb
lret
jo
hlt
movsb
stos
mov
rorb
stc
loop
pop
cmpsl
loope
pop
sub
mov
jmp
icebp
sub
add
fisubs
test
ja
lea
xchg
mov
push
xor
dec
idiv
daa
lods
and
add
pop
cmp
mov
repnz
mov
lods
imul
mov
ja
aaa
cmp
paddsb
in
dec
stos
adc
jmp
push
pushf
inc
push
sti
enter
sub
je
and
mov
ljmp
into
mov
dec
add
jg
or
pusha
cmp
dec
mov
daa
sub
outsl
dec
xor
add
rcl
push
fwait
mov
lds
mov
sbbl
pop
aam
outsl
sbb
jge
in
push
outsl
rcl
or
pop
pop
pop
leave
mov
cmp
inc
mov
dec
popf
adc
stos
stc
sub
jg
lcall
mov
xor
mov
aas
xchg
aam
mov
movsb
test
pop
lods
jo
xchg
jns
test
add
inc
push
pop
imul
rol
mov
xor
mov
dec
jge
inc
negl
pop
lcall
fwait
movsb
mov
pop
loopne
bound
enter
shll
setbe
out
xchg
out
movsl
cmp
clc
adc
pop
sbb
shr
nop
dec
adc
mov
dec
or
adc
int
sti
xchg
pop
aad
or
gs
test
aam
mov
shrl
mov
jg
sbb
adc
pop
push
add
xlat
stos
jg
adc
sbb
pushf
mov
nop
je
pop
xor
lods
pop
cmpsl
cmp
pop
fildll
mov
sbb
sub
out
pop
xor
jmp
mov
out
ss
adc
pop
xor
adc
aas
dec
sub
and
jle
and
ljmp
pushf
push
ja
gs
lret
mov
sub
fwait
inc
cwtl
jnp
pop
pop
in
xor
pop
rcrl
test
repz
and
sbb
adc
jo
and
shlb
pop
nop
mov
rolb
add
push
mov
push
or
mov
sub
mov
mov
xor
add
cmc
sub
jnp
lds
mov
fcomps
cmp
mov
and
add
in
mov
inc
mov
cltd
test
mov
imul
in
jmp
mov
cmp
loopne
sub
scas
cmp
xchg
sub
dec
fldenv
out
jo
mov
iret
push
in
add
in
call
mov
fdivp
nop
imul
cs
outsl
adc
adc
movsl
stc
rolb
iret
popf
icebp
mov
pop
cmp
in
ret
jle
insb
mov
lret
lds
inc
sti
scas
dec
and
lahf
adc
pop
xchg
dec
imul
jb
xor
jecxz
push
into
jge
test
into
orb
lret
and
sbb
jecxz
jne
cwtl
and
orb
aas
pop
insl
pop
xchg
testb
loopne
dec
fisubrl
cmp
jae
xchg
mov
jecxz
popa
rcrl
push
hlt
lahf
lds
cmpsb
test
and
in
jg
test
lods
mov
stc
rorl
fldenv
dec
xor
sub
in
push
or
fisubrs
cmp
movsb
inc
and
repz
add
inc
fcomps
call
mov
jecxz
ds
sbb
jnp
ss
lcall
xchg
push
repnz
cmp
dec
or
rorl
repz
leave
xor
lods
push
int
cmp
mov
sahf
jae
jne
cmp
jns
fsubs
cmc
or
push
andb
daa
test
push
jno
pop
push
ficompl
int
mov
cltd
jo
or
sub
add
movsb
inc
lods
push
jg
lock
jnp
dec
push
in
or
mov
jno
or
imul
push
enter
inc
addr16
sub
sbb
pop
mov
jp
cmp
leave
adcl
jecxz
aam
in
test
repz
mov
adc
lock
dec
repnz
push
movsl
roll
test
pop
popa
stos
sbb
push
and
mov
scas
scas
add
stos
inc
pop
daa
shlb
ds
adc
ja
inc
sbb
ret
loop
hlt
pop
cmp
lret
or
loop
jge
dec
mov
xchg
mov
xor
cmc
into
ljmp
outsl
or
push
dec
sub
mov
outsb
jno
pushf
imul
pop
push
mov
add
mov
cmp
fsubrl
cmpb
jge
mov
sub
push
into
dec
ret
jmp
pop
shl
in
out
outsl
push
aad
jg
call
cmp
addb
sbb
in
cmp
das
out
orl
outsb
call
push
cmc
insl
out
xor
jle
mov
ds
mov
loopne
xchg
sub
push
mov
xchg
mov
mov
jbe
das
out
push
cwtl
in
and
pop
popf
pop
popa
add
cltd
scas
xchg
outsl
push
out
repz
xchg
inc
stos
dec
mov
jmp
test
add
xchg
add
mov
or
mov
popf
aas
mov
aaa
fldt
and
inc
mov
mov
sbb
push
mov
or
mov
or
fsubl
fisttpl
xchg
in
dec
and
adc
incb
cltd
popa
and
and
mov
ficompl
lods
idivb
call
xchg
fstp
les
popa
std
jl
push
sbb
andl
mov
jecxz
cmp
lock
mov
xchg
ficoms
xlat
mov
in
cmpsb
scas
add
jns
loopne
mov
gs
push
dec
outsl
test
cmc
mov
shll
cmovne
dec
pop
scas
add
pop
jp
inc
push
mov
pop
movsl
inc
cmp
lahf
std
pop
mov
jge
xchg
or
insl
out
xor
pop
popa
or
cmp
mov
xchg
adc
adc
in
out
nop
inc
loope
cmp
lea
xchg
inc
mov
mul
test
lahf
add
js
pushf
inc
xor
shll
aam
jmp
shrb
xor
mov
mov
in
push
sub
push
dec
jl
mov
inc
lret
movsb
xchg
add
jnp
mov
adc
test
lcall
xchg
mov
xchg
fildll
dec
adc
scas
push
jnp
ja
mov
mov
jo
sti
jb
lock
in
test
ret
icebp
ljmp
sub
cmp
and
pop
pop
enter
push
inc
jns
orl
pop
mov
ret
repz
lea
or
lahf
loopne
jle
mov
rcrb
shrb
push
mov
add
test
mov
repz
cmpsb
pop
adcl
and
xchg
ds
cltd
cmp
and
ljmp
mov
mov
into
adc
pop
mov
push
jne
sub
xor
and
dec
fsubrs
sub
andb
lea
push
xorb
sbb
movsl
lock
lds
sub
lods
cmp
adc
pushf
popa
mov
rorl
and
sub
nop
xor
mov
scas
lret
cmp
ficoml
add
mov
repz
and
jbe
ret
xchg
cli
or
cmp
and
xchg
mov
pop
pop
in
leave
or
xor
push
jnp
imul
mov
fcompl
fldcw
ret
pop
xor
add
pop
inc
and
outsb
and
cmp
jle
mov
jns
adc
shl
jle
jmp
jns
into
lret
sbb
mov
xlat
xchg
xor
addb
in
push
pop
jbe
sbb
mov
pop
pusha
fsubrl
testb
test
cmc
mov
mov
lds
sub
gs
cmp
insl
loopne
jo
pop
mov
movsl
push
lahf
fstpt
pop
test
push
jo
ja
aad
pusha
roll
imul
rcr
or
jge
lock
pushf
rorl
pop
call
cmc
and
mov
test
mov
mov
add
pop
or
pop
sbb
pop
daa
and
inc
std
lret
xor
mov
fwait
add
push
aad
scas
adc
pop
dec
or
cld
popa
add
imul
pop
or
jge
lcall
xchg
fidivl
pop
mov
mov
mov
jg
or
mov
cmc
xchg
sub
mov
vpcmpeqb
cld
popa
sbb
call
aad
sub
mov
dec
and
in
push
mov
mov
or
mov
dec
mov
mov
ss
mov
sbb
adc
lods
inc
les
mov
das
inc
push
je
jp
jb
sbb
adc
jge
add
bound
out
add
incl
mov
repz
nop
cmpsl
pop
movsb
jnp
add
adc
push
scas
add
or
pop
pushf
rolb
push
ljmp
xchg
pop
mov
sub
mov
dec
dec
dec
xchg
mov
sub
lret
xor
mov
push
sub
cmp
movsl
das
cli
mov
jnp
pusha
scas
mov
hlt
outsl
mov
pop
repnz
push
sub
add
sub
or
jl
pop
fucomi
rolb
cmc
scas
out
sub
shl
cmp
lods
lods
push
insb
dec
add
movsb
push
ficompl
enter
push
inc
add
les
test
or
dec
hlt
xchg
sub
cmc
mov
pusha
mov
sbb
sbb
fstpt
mov
xor
add
sub
pop
cmp
xchg
push
mov
or
lahf
dec
fildll
scas
andb
xchg
sahf
cmp
arpl
add
cmc
push
out
and
imul
mov
add
imul
push
or
aaa
stos
xchg
gs
icebp
aad
aas
push
xchg
ja
xchg
jo
lret
shl
scas
mov
out
mov
aam
lret
repz
rdpmc
imull
outsl
pop
dec
jge
xchg
mov
and
pop
dec
aad
pop
mov
sub
and
lcall
lods
shlb
or
lret
lret
cmc
dec
mov
add
sub
pushf
test
mov
stc
jno
lea
imul
ljmp
xlat
lds
test
mov
jbe
mov
outsl
mov
insl
xchg
or
cmp
jo
out
sbb
test
std
inc
test
in
aas
jbe
icebp
pop
jne
clc
pop
outsb
or
sbb
divl
into
call
push
sbb
mov
inc
mov
in
in
xor
sar
dec
mov
and
jns
xor
decb
push
push
fistpl
add
and
imul
loope
loope
stc
rclb
fsubrl
pusha
testb
inc
mov
add
cs
fsub
adc
dec
jecxz
jmp
xchg
mov
sub
mov
ljmp
cmp
xor
mov
ret
imul
call
pop
lods
push
add
cmpsl
lahf
pop
fsts
pop
cwtl
xor
sbb
iret
pop
enter
fs
popf
in
dec
mov
pop
push
rorl
pop
pop
inc
mov
mov
testb
mov
iret
out
ret
fwait
mov
adc
lahf
and
mov
hlt
pop
sbb
sti
jns
pop
add
push
cmp
cmpsl
inc
cs
lock
adc
ret
and
loop
sbb
adc
sub
sahf
jnp
mov
into
push
call
lods
inc
and
push
cmpsb
or
sbb
cld
mov
adc
shll
xchg
ds
sub
movsl
fildll
xchg
enter
mov
push
js
push
jo
push
in
dec
lods
pop
cmp
int
mov
fwait
sub
jbe
mov
gs
mov
imul
xchg
sbb
cltd
fwait
loop
shl
mov
and
mov
add
add
push
push
daa
mov
leave
fdivrs
leave
aad
jmp
inc
inc
push
idiv
stos
mov
and
inc
pop
pop
mov
add
test
inc
or
js
in
movsl
cmp
rolb
aaa
or
loop
gs
into
dec
inc
xor
stos
sub
aad
mov
pop
cwtl
in
or
pop
adc
add
aas
pop
mov
add
negb
jecxz
sub
lret
jns
aas
lea
arpl
outsb
push
dec
cltd
dec
xor
mov
jno
mov
fisubrl
sarb
mov
jne
add
sti
pusha
sub
fnstsw
test
pop
or
lret
jge
cmp
push
adc
ficoms
cmp
cs
inc
push
xor
jae
nop
repz
fnsave
nop
add
adc
jnp
loop
pop
daa
push
cmp
mov
cli
je
cmp
cli
fidivl
push
sbb
sbb
jge
leave
outsl
push
stc
decl
ret
sub
les
adc
popf
lahf
xchg
popa
push
mov
sub
stc
xchg
dec
pop
jns
testb
aad
push
call
daa
mov
rcr
xchg
mov
pop
push
lock
pop
mov
or
and
call
mov
les
or
lret
xor
cld
out
shrl
ret
mulb
rcl
aas
sub
shll
and
jno
cltd
cltd
ljmp
lock
pop
mov
jo
imul
test
iret
xchg
in
pop
out
fiadds
fwait
pop
subb
jb
fildll
push
loopne
mov
cmp
ljmp
pop
push
lods
and
sbb
es
repz
addr16
push
xchg
xchg
or
ljmp
jge
call
lds
pop
orl
mov
aas
lret
cltd
lods
cmp
jns
mov
xor
fiaddl
mov
movsl
cld
xlat
mov
sbb
movsb
push
inc
dec
movsl
out
pusha
pushf
sahf
mov
das
cmp
inc
jmp
adc
and
dec
mov
and
and
andb
jae
pop
xchg
adc
push
and
xor
in
or
data16
inc
dec
and
mov
je
pop
mov
xchg
inc
adc
ja
xor
add
xchg
lds
add
aad
pop
xchg
mov
add
mov
sbb
push
mov
out
and
or
push
stos
shrl
sbb
and
or
cli
and
pop
mov
mov
fwait
pop
ret
xor
dec
xchg
repnz
push
xorl
aaa
mov
mov
inc
mov
stos
jmp
mov
inc
into
pop
icebp
mov
mov
xor
sbb
in
int3
push
clc
imul
push
xor
xchg
popa
movsl
inc
pop
sub
pop
fbld
cmp
dec
push
xchg
movsl
dec
jge
loopne
jmp
jo
dec
dec
call
std
mov
jle
cmp
push
sbb
loope
pop
jmp
lock
idivb
js
lret
ss
test
mov
mov
jmp
mov
sub
xchg
fidivrl
test
insl
pop
js
lahf
popa
daa
push
sbb
bound
lahf
cwtl
xchg
mov
jg
and
mov
lea
shll
xchg
push
sub
lret
fwait
and
cltd
push
xchg
push
popf
cmp
in
push
lods
pop
loop
loope
int
hlt
push
outsl
cwtl
outsl
cmpsl
sbb
adc
arpl
jbe
rcl
je
ds
daa
cmp
mov
jmp
insl
and
push
movsl
jge
cmc
pop
sub
pop
cmp
mov
mov
push
lds
adc
inc
hlt
pop
popf
adc
jp
addb
divl
movsl
xor
psrlw
pushf
fldl
mov
and
pop
cmpsb
ljmp
daa
outsb
sub
mov
mov
push
hlt
das
xchg
jmp
add
pushf
jecxz
sbb
lods
mov
loope
cli
lock
frstor
dec
mov
sbb
xchg
sbb
jbe
hlt
repnz
std
lock
cmp
das
ficompl
xor
jb
xor
fsubrs
leave
or
rorl
mov
push
out
and
ds
lea
out
mov
movsl
sbb
inc
test
sub
jnp
mov
loop
dec
pop
ret
int3
mov
negb
add
xchg
rcrl
mov
fcomp
leave
cld
in
sahf
adc
ss
jg
movsb
aaa
and
pop
das
add
adc
inc
push
pop
lcall
fcmovnbe
and
jecxz
xor
mov
xchg
pop
mov
outsl
les
and
cmp
jb
mov
out
imulb
mov
pusha
fisttpl
test
sub
in
loopne
cmp
mov
repz
lcall
adc
lret
stc
pop
fstpl
xchg
sbb
mov
lock
push
cmpsl
test
and
insl
mov
cli
lock
sbb
jecxz
lock
iret
pop
xchg
mov
in
mov
and
call
and
sub
shrl
pop
sbb
loop
sub
jge
or
cmp
push
or
sti
stc
mov
or
shll
rcrb
mov
fisubs
jl
pop
inc
xlat
mov
inc
add
les
sbb
out
mov
insb
cmovbe
push
push
and
es
xor
subb
mov
jg
fwait
dec
call
iret
out
pop
adc
xor
and
push
out
orb
xor
lret
dec
movsb
out
push
scas
hlt
adc
lcall
nop
inc
popa
lods
or
fmulp
shll
push
or
andb
shrb
jp
xor
sahf
adc
inc
ret
mov
dec
push
xchg
pop
push
or
mov
test
mov
mov
and
push
loopne
sub
iret
gs
add
add
add
lahf
stos
xchg
push
scas
lds
jae
int
sarl
and
lret
jno
stc
push
mov
pop
cmp
sbb
mov
in
cmp
fbld
cld
aad
add
jbe
icebp
neg
aaa
out
jecxz
iret
pop
pop
out
das
lods
movsl
mov
cmp
aam
ficoml
and
int3
sahf
nop
in
cmpsl
pop
xlat
xlat
leave
sbb
mov
outsb
leave
addr16
lret
fdivl
sub
inc
sub
shl
hlt
das
inc
sub
fcmovb
dec
mov
pop
cltd
or
add
movsl
mov
or
push
rolb
js
shlb
nop
orb
clc
icebp
lret
xor
jecxz
inc
aaa
inc
pop
xchg
cld
xor
or
xor
sub
cvttps2pi
xor
stc
roll
push
push
jp
and
dec
push
int
pusha
rcl
xchg
out
test
daa
ljmp
rcrb
movsb
pushf
call
int
fmull
repz
loop
mov
ds
push
lcall
imull
inc
pop
sub
mov
sub
stos
outsl
jno
stos
out
jl
xchg
fcomps
addl
push
adc
or
mov
out
mov
xchg
inc
pusha
and
das
adc
ss
inc
inc
dec
daa
push
jg
movsl
data16
dec
sub
aaa
loop
dec
cld
filds
iret
mov
and
jbe
pop
mov
jle
mov
inc
int3
dec
adc
out
fwait
mov
outsb
test
in
cmpsl
mov
nop
repz
addr16
mov
lcall
cmpl
mov
aam
in
arpl
sti
pushf
jnp
in
movsl
into
gs
pop
push
sbb
fwait
mov
stc
cmp
pop
iret
jbe
fimull
shrb
sbb
mov
nop
adc
lods
ret
inc
rcrb
out
divb
jno
fcomps
pop
sbb
cwtl
fcmovne
inc
movsl
cltd
insb
movsb
mov
xor
or
dec
pop
fcomps
iret
xchg
aad
shll
sbb
pop
and
clc
loop
sbb
pop
subl
xor
cli
inc
cs
jb
out
sbb
and
loopne
outsb
stc
lock
int3
repz
cmp
out
fwait
mov
or
mov
cmpsb
xor
mov
inc
and
add
movsb
or
fimuls
mov
adc
or
fdiv
pop
leave
dec
aas
inc
mov
ja
fmull
fisubrs
in
movsb
stos
xor
xchg
aas
sbb
cmp
or
test
sbb
jo
or
mov
cmc
imul
in
mov
or
ret
lods
test
ljmp
test
push
jno
mov
push
add
inc
gs
mov
mov
divl
ja
out
mov
pushf
sbb
test
stos
xor
jno
dec
insb
add
pop
imul
sti
inc
push
leave
test
push
in
xchg
inc
mov
fldt
int
ret
dec
stc
shrl
adc
xchg
dec
cltd
jle
dec
test
adc
push
aas
lds
jmp
add
cmpsb
in
inc
les
in
or
pop
cli
in
adc
loope
divb
aaa
incl
pop
cs
test
xchg
sub
in
fstpl
adc
pushf
mov
or
in
mov
xchg
adc
mov
or
jno
xor
subl
jno
enter
or
lea
out
xchg
test
outsl
inc
push
mov
test
out
add
inc
nop
aam
lock
sub
movsb
pop
lret
jecxz
gs
cmpb
es
sub
test
shl
clc
push
outsb
vhaddps
sbb
jb
std
jecxz
in
lahf
loope
and
xchg
jl
daa
cmp
filds
adc
or
mov
aad
push
mov
jb
sub
sbb
lods
mov
and
sti
sbb
fdiv
mov
dec
cmp
push
loope
aas
jns
jbe
rcrb
xorb
push
scas
scas
sub
add
ja
push
cmpsl
cs
loopne
jl
add
cwtl
and
cmp
xchg
imul
mov
push
xchg
mov
sub
xlat
int
fmull
push
out
adc
cmp
add
push
data16
pop
dec
incl
xor
push
imul
fstp
sub
into
sarb
mov
or
nop
push
inc
xchg
ds
sub
and
pop
dec
cmp
xchg
pop
pop
scas
mov
push
sub
test
fbld
aaa
aas
dec
and
in
adc
pop
cmp
popf
jns
adc
xchg
lret
lahf
sub
cltd
push
mov
mov
int3
shll
cmpb
push
mov
int
lret
test
loope
lods
sub
xor
pop
cmp
shrb
aas
fildll
jl
pusha
lea
mov
mov
inc
push
dec
arpl
lods
mov
dec
adc
int
or
fld
mov
push
mov
mov
add
pop
rorb
adc
adc
adc
mov
int3
decb
les
ja
mov
or
pop
loopne
call
or
rorl
lret
mov
cmp
lcall
iret
mov
pop
mov
frstor
add
mov
aas
adc
sahf
push
bound
in
mov
lea
inc
jl
cmp
inc
jns
int
xchg
push
scas
pop
sbb
jbe
inc
sub
sub
ret
repz
inc
cmp
push
lods
xor
scas
sti
out
stc
lods
lcall
add
mov
mov
cli
std
cmp
inc
aaa
jae
ja
imul
add
dec
hlt
sbb
xor
or
jae
sub
aam
stos
and
ds
cltd
xor
stos
lea
sub
xor
mov
pop
scas
xor
fcmovu
xchg
int3
cmpsl
fsubl
in
repz
pop
and
mov
or
lret
mov
xchg
cmp
sub
fsubl
mov
inc
mov
inc
ljmp
out
icebp
pusha
lock
dec
or
fistps
inc
pop
add
mov
dec
pushl
pop
or
call
add
pop
mov
sbb
mov
push
mov
jnp
out
outsb
fsubs
lds
lods
sbb
mov
add
shl
fucom
sub
stos
popf
xchg
or
gs
cmpsl
hlt
mov
ljmp
scas
bound
lea
mov
fdiv
mov
mov
out
push
mov
orl
sahf
mov
sbb
ds
in
xor
push
test
sti
jbe
push
jne
sub
outsb
and
adc
mov
inc
pop
ficomps
movsl
mov
rorl
xor
mov
mov
negb
clc
in
mov
pusha
shr
dec
outsb
sub
in
inc
in
cltd
jp
mov
lcallw
sub
icebp
lods
lods
repnz
insl
push
jo
insb
inc
xchg
test
sbb
lods
ret
mov
xchg
inc
inc
je
jns
or
jle
sub
xchg
xor
std
mov
pop
aam
insl
jl
lcall
lods
or
sti
hlt
mov
sti
les
imul
fiadds
mov
push
loope
push
xor
aam
add
add
push
jge
shrl
lods
push
mov
stos
xchg
stc
push
mov
cmp
inc
and
xor
outsl
xchg
add
int
daa
cmpsl
daa
mov
mov
push
sbb
addr16
adc
insb
cli
outsl
adc
test
push
std
icebp
js
lret
and
cmp
add
add
lahf
rclb
fisttpl
imulb
sti
lea
jle
inc
and
test
out
or
fcomps
jno
xchg
mov
and
mov
rcll
push
pop
cmp
mov
mov
imul
dec
shl
dec
fs
test
mov
imul
fisubs
mov
or
ror
mov
lcall
int3
adc
lret
inc
xor
xor
xchg
mov
test
dec
sahf
mov
sub
jmp
sub
push
pop
push
add
xchg
or
out
sbb
xchg
mov
dec
cltd
jle
aad
repnz
mov
push
dec
out
mov
in
call
in
les
mov
das
cmp
sbb
movsl
lahf
insl
sbb
push
jae
inc
call
fsubrp
adc
dec
pop
pushf
lahf
or
xor
sbb
sbb
jne
cwtl
ss
fcomip
nop
and
std
or
sti
mov
xor
shr
in
jle
loopne
iret
je
out
cmp
sub
jmp
xchg
cmp
mov
cli
pop
xor
hlt
cltd
mov
dec
adc
lods
adcb
xchg
xor
push
lahf
cmpsl
lret
leave
push
pop
test
es
cmp
push
or
adc
andb
xor
test
push
adc
imul
sti
fidivrl
pop
stos
jne
mov
test
push
pop
pop
jae
ror
testb
int3
repnz
lahf
cmp
add
mov
fstenv
adc
xchg
fldcw
cs
lods
lea
mov
loope
mov
dec
fisubl
inc
xorb
pushf
in
or
pushf
lret
imul
out
std
or
cmp
movsl
inc
jecxz
loopne
ds
dec
in
adc
ret
push
mov
mov
jb
sbb
stc
sub
cmpsl
dec
rorb
roll
mov
xor
pop
mov
sub
gs
xchg
aam
jbe
and
jbe
loop
sbb
mov
sub
push
pushf
repz
leave
je
hlt
sbb
pop
or
cwtl
push
mov
xor
dec
sbb
sti
subl
repnz
and
cmp
dec
inc
jb
and
or
fstpl
mov
std
xchg
push
rorl
loope
les
mov
xor
popa
stos
add
imul
xchg
inc
push
jg
daa
bound
test
mov
add
jnp
and
in
scas
in
or
dec
sub
ret
roll
adc
cmp
rclb
fidivrs
ss
call
int3
sbb
out
stc
adc
test
dec
mov
mov
pop
cmp
pusha
mov
mov
lcall
push
add
je
pop
repz
aas
mov
int3
dec
movsb
mov
pop
cmp
push
sub
lds
sbb
mov
in
inc
mov
xchg
adc
xor
movsl
jmp
add
and
jge
inc
and
fistps
mov
daa
ds
mov
cmp
outsb
cmp
fwait
sti
insl
jo
jmp
scas
mov
je
jo
push
ret
adc
push
rclb
pushf
pushf
adc
stos
jns
and
hlt
xchg
aam
in
loop
cmc
mov
hlt
adc
dec
mov
mov
mov
cmp
out
dec
cltd
stc
sbbb
stos
push
or
pop
cli
add
mov
bound
jp
push
fwait
into
shlb
andb
dec
divl
cwtl
add
sarl
add
pop
cmp
push
fdivrp
js
fidivs
pop
pop
das
out
pop
add
mov
in
ss
or
clc
push
xor
out
xchg
gs
loopne
loopne
jge
xchg
sbb
lret
or
add
cmpsl
enter
mov
adc
jl
ret
mov
mov
gs
sti
mov
inc
or
xchg
cmpsb
hlt
stos
cli
xor
adc
adc
xor
mov
aaa
call
mov
insb
jo
add
fsubs
push
push
jl
arpl
mov
ss
testb
xchg
pop
mov
popa
in
add
lahf
push
mov
add
es
fyl2x
dec
movsl
test
out
add
out
xchg
es
mov
mov
push
mov
dec
sbb
jmp
xor
push
sahf
xor
in
test
movsl
mov
mov
mov
mov
js
int3
pop
out
xchg
xorl
pop
inc
jbe
mov
inc
into
inc
pop
dec
xor
mov
pushf
lods
add
in
pop
jo
stc
in
fsubrs
test
sti
cmpl
data16
xchg
repnz
mov
test
jo
xchg
xorl
xor
fcoml
inc
subl
pop
imul
mov
pop
or
pop
int3
xchg
out
jmp
std
in
or
jecxz
inc
jmp
add
xchg
inc
dec
fdiv
push
sub
dec
xchg
mov
mov
aaa
daa
mov
in
jg
les
scas
addb
lods
and
jecxz
pop
add
pop
pop
xor
lods
insl
push
imul
inc
loop
inc
shrl
mov
pop
mov
insl
sbb
imul
mov
das
sahf
sbb
addr16
jg
xor
aas
dec
lea
clc
sub
repnz
jae
push
jp
ds
test
bnd
aas
pop
mov
daa
lds
jae
dec
sbb
fdivr
lods
and
daa
add
test
and
pop
out
gs
loop
pop
neg
cmp
mov
fwait
out
push
mov
cmp
push
out
push
out
in
js
cmpsb
push
int3
lcall
shrb
inc
faddl
lods
stc
in
sbb
sub
and
jnp
les
xor
mov
or
addr16
jno
push
inc
mov
int
xor
lock
filds
and
xor
sub
jg
adc
repnz
dec
in
lcall
ljmp
push
dec
jle
lods
pushf
roll
out
jae
out
in
pop
cmp
dec
adc
xchg
ljmp
add
mov
add
add
and
shlb
ljmp
out
sbb
jl
movsl
popf
mov
xchg
ds
inc
push
lods
aas
inc
mov
fnstsw
scas
mov
pop
out
adc
inc
pop
out
inc
adc
xor
xchg
lret
sbb
inc
dec
mov
out
mov
movsb
cmp
add
push
lea
test
and
mov
inc
jns
mov
test
adc
push
cmc
imul
sti
add
imul
cld
mov
sahf
xchg
cmpxchg
mov
cmp
pusha
sahf
loope
lret
data16
xchg
cmpb
or
dec
xor
loope
int
mov
xchg
pop
push
xor
xchg
pop
data16
out
movsl
popf
inc
push
mov
aam
loope
add
lea
sbb
movsl
sti
jb
ljmp
jns
pop
jecxz
rcll
pop
shr
loop
sub
loope
not
mov
sbb
push
leave
xchg
pop
pop
xchg
nop
adc
enter
jb
and
xchg
pop
sub
pop
dec
out
xor
mov
lret
jmp
aam
loopne
sub
dec
cmc
das
adc
popf
push
icebp
repz
aas
dec
jnp
daa
daa
mov
jne
mov
mov
xchg
jmp
xchg
cmp
scas
xor
mov
imul
xchg
mov
arpl
pop
fs
lods
mov
jns
or
adc
and
movsl
out
inc
aaa
cld
scas
je
push
insl
pop
pusha
jge
xchg
in
sub
mov
mov
loope
int3
orb
dec
and
inc
lds
push
mov
mov
popf
sub
mov
mov
dec
in
dec
call
inc
xchg
dec
test
insb
sub
xchg
shrb
sti
lds
arpl
lods
dec
and
cmp
or
aam
inc
outsl
call
mov
or
xor
loopne
sbb
sub
or
or
aas
adc
sub
cltd
mov
or
mov
xchg
cmp
dec
shll
push
mov
pop
sbb
pop
cmp
and
dec
xor
xchg
mov
cmp
hlt
sbb
fisttpl
and
pushf
jns
adc
push
sub
or
in
les
add
mov
dec
mov
xchg
mov
xlat
mov
scas
add
jle
movsl
shr
add
int
icebp
in
xor
pop
out
rcrb
enter
jo
mov
fcoml
mov
and
les
in
std
idivl
jne
sbb
fs
out
sbb
cld
and
ret
repz
fstps
or
in
cmc
addb
mov
testl
insl
jge
popf
leave
jo
lcall
fidivrl
mov
mov
mov
or
push
out
lods
lds
je
idivb
fs
pop
into
pop
test
push
lods
lock
jno
and
cmp
mov
xchg
das
dec
popf
mov
mov
rorl
adc
or
xor
cmp
jnp
push
inc
bound
sti
add
daa
les
jg
and
stos
mov
arpl
shll
ja
repz
addr16
dec
adc
or
test
shll
aaa
aas
movsl
sbb
cmpsb
mov
mov
cmp
cltd
mov
rcr
test
in
scas
sub
mov
sbb
sti
cs
lcall
cmp
je
lahf
iret
jmp
data16
pop
jo
insl
sub
in
in
roll
adc
pop
out
inc
pushf
call
push
lock
cs
stos
stos
jp
and
clc
push
nop
adc
sub
sub
lods
push
pusha
fildll
in
pushf
daa
push
nop
xchg
and
in
push
dec
jns
adc
cmp
xor
jmp
inc
jbe
lcall
sub
jle
movsb
sar
dec
sub
inc
push
pop
sub
jmp
or
inc
xchg
rolb
test
jnp
xlat
imul
out
push
add
xor
enter
rcrb
lret
aad
pop
add
mul
adc
cmpb
lahf
xor
push
aad
imul
lock
stos
jge
lret
out
or
xor
sub
out
mov
std
xchg
popa
insb
in
jmp
xchg
push
das
movsb
pop
add
outsb
mov
mov
scas
fadds
sbb
mov
addr16
mov
fwait
cmpsl
shlb
cmp
push
push
imul
jo
addb
cmc
mov
inc
lret
in
sar
push
in
mov
icebp
push
push
or
ror
pop
pop
pop
push
sahf
mov
push
jecxz
enter
push
inc
and
in
cs
int3
mov
xchg
int
loop
rolb
push
pop
lret
dec
movaps
out
xchg
mov
shlb
andb
ja
jns
mov
adc
sub
mov
mov
test
imul
or
cmovle
das
sub
adc
out
ud1
and
aaa
shll
sbb
lret
dec
incb
mov
xor
add
jb
sub
cmp
jle
fstl
mov
ss
fs
loopne
and
jne
xchg
xchg
mov
add
xchg
cmp
jp
lods
xlat
xchg
bound
ja
sub
rclb
addr16
inc
mov
and
cmp
add
lds
popl
ret
sbb
xor
lock
lret
out
arpl
cmp
push
aaa
arpl
mov
into
xchg
repnz
jnp
inc
cld
cmc
out
push
jmp
cltd
in
pop
ja
mov
push
adc
push
dec
lret
xor
leave
cmp
test
or
in
pop
mov
shll
into
mov
lock
mov
cmpsl
add
mov
mov
scas
sub
push
pop
sub
lods
cmp
mov
xchg
out
arpl
xchg
mov
mov
movsb
mov
enter
stos
jge
cmp
jp
or
or
push
out
repnz
mov
fmulp
pop
or
insb
sub
pop
sbb
insb
mov
pusha
test
jl
jecxz
mov
addl
sbb
fcomps
fsub
stos
lea
mov
callw
cmpb
push
aam
cwtl
repz
mov
les
ret
fdivs
repz
testb
adc
mov
sub
xor
dec
movsl
and
shrb
rcrb
or
cmpsl
push
ja
inc
sbbl
repnz
mov
jle
xor
jl
push
out
and
bound
clc
ds
popa
jno
mov
jg
fisubs
out
pop
add
imul
dec
into
adc
ret
jmp
adc
gs
fidivl
daa
clc
sbb
stc
or
call
movsl
jmp
je
pop
sub
pop
cs
xorl
adc
cmp
sub
imul
pop
pop
and
gs
outsb
mov
mov
jle
lahf
lret
xchg
adcl
js
ds
inc
pop
into
add
xor
fadd
hlt
dec
pop
xor
push
je
or
mov
inc
xchg
push
lret
mov
stos
push
outsl
and
pushf
jecxz
rolb
es
sahf
adc
push
sbb
xchg
fists
sarb
shll
jno
pop
lret
mov
jbe,pt
ret
push
dec
mov
dec
fldcw
add
adc
adcb
pushf
push
loop
sahf
dec
data16
pop
movzbl
inc
inc
div
adc
lds
js
mov
ss
mov
cmp
mov
inc
push
jne
xor
rorb
adc
aaa
das
insl
inc
hlt
and
sbb
xor
push
sub
xchg
dec
mov
cmp
sarb
jg
cwtl
int
out
imulb
cmp
fsubl
xor
inc
out
lds
sbb
fst
xchg
xchg
add
xchg
call
mov
fiadds
cmp
xor
sbb
mov
add
or
mov
xchg
and
mov
pop
push
push
jb
into
std
fildl
xor
dec
stos
xlat
bound
adc
inc
or
inc
fsubrp
rorb
pop
mov
in
xchg
push
psubsw
pop
ja
sub
lods
pop
aaa
mov
xor
xlat
and
mov
sbb
movsb
sbb
aam
and
test
sub
lds
sbb
dec
adc
cmpb
mov
xchg
repnz
dec
int3
mov
in
test
lock
xchg
stos
stos
mov
xor
movsb
aam
jne
popf
mov
adc
lahf
in
pop
jmp
jle
test
outsl
out
pop
mov
rorl
enter
mov
mov
cltd
xor
pop
sti
jmp
shrl
pop
addl
imul
imull
sub
add
cmp
adc
cwtl
mov
jno
lahf
mov
outsl
cs
fsts
pop
clc
insb
ffreep
push
fstp
leave
adc
xlat
inc
mov
loope
cmp
shrl
popa
xlat
sbb
push
lds
std
addr16
sbb
xorb
or
popa
arpl
sbb
aad
mov
pop
pop
cld
dec
inc
or
jns
mov
pop
add
arpl
out
outsb
pop
push
inc
pop
lds
xchg
mov
jo
je
jle
jmp
xchg
int3
shrl
push
adc
dec
lods
stos
mov
and
out
nop
xchg
fldl
mov
arpl
mov
repz
das
cmp
mov
mov
cmp
cwtl
adc
xchg
imul
inc
fcmove
stc
out
pop
push
sbb
movsl
in
int3
cmp
roll
xchg
xor
inc
jne
in
pop
push
and
xchg
lea
xchg
out
pusha
xchg
outsb
jno
clc
add
fildll
ret
mov
out
icebp
cbtw
sub
jl
dec
inc
jge
inc
sub
rolb
inc
xchg
push
jle
sbb
popa
push
sbb
jbe
xchg
in
cmp
lods
adc
cmc
stc
cmp
in
pop
pop
mov
dec
dec
loope
dec
pop
test
jp
push
mov
inc
jns
push
xchg
rolb
outsb
lret
pop
sbb
jno
push
adc
aaa
dec
loope
dec
fs
insb
lcall
or
inc
les
pusha
les
sbb
loopne
jmp
lock
xor
mov
pop
push
jb
and
sbb
enter
cmpsl
sbb
not
xchg
xchg
in
rclb
lret
jae
call
sub
sub
je
fimull
clc
jne
cs
fidivl
adc
std
add
and
push
fs
fwait
cmp
les
sti
push
sub
mov
xchg
sbb
mov
mov
lods
xchg
xchg
or
out
pushf
push
or
pushf
and
fists
or
jo
xchg
in
pop
fnstenv
pop
mov
lahf
les
xchg
imul
iret
fldl
int3
mov
adc
in
sub
cmp
rcrb
and
sarl
mov
cmp
mov
add
sub
cld
into
add
mov
daa
add
cmc
mov
imulb
fisubrs
or
orb
xor
pop
popf
mov
mov
negl
add
add
pop
mov
hlt
pop
xchg
pusha
leave
pop
and
jp
mov
andl
pusha
aaa
enter
xor
lds
in
pop
push
data16
jg
ds
xorl
shll
fldcw
add
xor
int3
push
cmp
lahf
popf
shlb
mov
cwtl
ss
and
push
mov
and
jp
sbb
mov
leave
loopne
scas
jg
in
aad
fistpll
idiv
add
jmp
jo
jo
mov
cmp
jae
pop
into
mov
fs
ss
jo
jmp
sub
loope
leave
sahf
mov
mov
lods
add
int
jbe
xorl
cmp
sbb
out
lock
out
scas
cmp
subb
stc
outsl
xchg
mov
pop
int
add
xchg
outsb
mov
mov
jae
jge
pop
inc
dec
rcl
jbe
adc
inc
adc
shl
ret
cld
jg
pop
sbb
and
cld
cmp
cmpsl
movl
fistl
jge
mov
fs
cmpsl
out
mov
stos
fidivl
adcl
mov
ret
xchg
shlb
xchg
and
mov
clc
imul
fsts
xor
test
prefetch
es
sub
lret
divb
fsubrp
sbb
mov
xor
fwait
sahf
xor
pushf
rcl
sbb
test
loope
ss
cld
jge
nop
mov
push
test
repnz
or
adc
adc
push
xor
cmp
mov
mov
cmp
push
lods
push
pushf
leave
sbb
gs
or
push
andb
push
mov
lods
mov
adc
das
mov
jl
push
xor
test
lea
pusha
lret
cmp
sar
test
sbb
mov
mov
leave
xchg
fs
xchg
mov
jg
add
jge
mov
ret
pop
mov
jnp
sbb
out
mov
imul
out
leave
mov
xchg
mov
fcmovu
cmp
imul
sbb
int
pop
mov
dec
xchg
aas
inc
movsb
test
cmp
stos
jl
sbb
xchg
clc
ret
cmp
jmp
aam
std
rcll
repnz
sbb
in
mov
xlat
jne
rorl
sar
push
aaa
jne
data16
popf
adc
push
cmc
fidivl
add
js
popf
and
jg
xor
mov
xor
out
dec
xchg
sbb
ds
inc
in
jbe
mov
push
dec
fwait
pop
aaa
test
adc
xchg
pusha
ret
cmpsb
imul
mov
lods
jp
or
je
ja
outsb
cmp
mov
mov
xor
rol
xchg
mov
add
das
fisttpl
push
mov
imul
or
sub
insb
mov
push
leave
into
mov
fnstenv
or
mov
push
cmpsl
hlt
pop
cmp
aam
stos
lods
sbb
mov
stc
leave
or
dec
sarb
rcl
dec
cmc
jb
mov
mov
aam
out
cmpsl
ds
cmp
xor
cmp
ret
insl
aam
aam
pop
outsl
fstpl
push
or
and
bound
lahf
lock
mov
loop
out
ret
and
rcrl
aaa
imul
pop
cmp
scas
add
mov
pusha
aas
mov
repz
ret
cld
or
sub
sub
lcall
scas
stc
ffreep
inc
pop
shll
and
pop
fsubp
cs
jmp
xor
cmp
push
in
xor
ljmp
push
in
mov
sbb
outsl
sbbb
sbb
nop
mov
popf
sbb
lods
cmc
or
dec
sub
ss
lods
pop
jnp
sub
add
stos
int3
cmp
dec
hlt
les
jo
clc
lock
pop
sbb
subb
push
and
ja
mov
cltd
cmp
cmp
pop
xor
pop
dec
in
aas
pop
jmp
test
das
invd
push
ljmp
sbb
aas
pop
pop
test
dec
aaa
adc
aaa
scas
sub
adc
adcb
imul
ret
dec
mov
and
mov
das
xchg
cmp
mov
mov
and
jno
lret
dec
out
fs
add
sub
mov
adc
or
je
inc
mov
lock
movsb
jp
mov
insw
jnp
mov
and
inc
incl
and
out
cld
fwait
push
insl
das
dec
rcll
imul
lea
cli
pop
popf
std
dec
inc
or
ficomps
xorl
push
shll
hlt
shl
sbb
lds
mov
dec
dec
test
mov
incl
or
or
pop
mov
push
dec
aas
jns
movsb
mov
mov
inc
mov
rorb
adc
xchg
loop
das
inc
arpl
push
or
pop
push
test
test
push
outsl
icebp
mov
addb
hlt
cwtl
cmp
cmp
daa
inc
pop
dec
pusha
shll
out
mov
das
fiadds
inc
push
add
jmp
mov
das
out
out
add
pushf
inc
lret
daa
dec
popa
mov
insl
fst
call
lahf
cmp
fidivl
out
stc
rolb
mov
jg
push
sahf
test
mov
cmp
xchg
lea
sub
mov
lahf
sbb
dec
es
les
dec
push
aam
in
test
movsl
jnp
mov
stc
fistps
adc
leave
push
pop
inc
jg
nop
lods
jmp
gs
stos
or
dec
loopne
movl
push
test
lods
add
cmp
sbb
pop
loopne
cmp
jp
cltd
mov
ljmp
cmc
sbb
jmp
dec
data16
incl
aam
push
inc
loope
repnz
call
cli
mov
aad
dec
fcomps
jb
mov
popf
xor
pusha
je
ja
xchg
jl
adc
jmp
cmp
js
and
in
push
add
lret
and
popa
lret
mov
les
xor
cmp
pop
out
xor
test
and
mov
rorl
adc
das
xchg
lret
mov
jge
stc
xchg
insl
jecxz
mov
mov
jle
jp
call
xchg
mov
inc
insb
adc
xor
stc
loop
sahf
add
sub
rcll
fmull
cwtl
jns
stc
inc
divb
push
cmpsl
xchg
push
sbb
lods
mov
sbb
neg
lret
xchg
sub
call
mov
dec
pop
jb
icebp
adc
jmp
mov
mov
sahf
cmp
popf
mov
jp
push
xchg
sub
lahf
outsb
loop
int
push
adc
push
std
fadds
cmc
aas
mov
cmp
pop
xor
popa
repnz
pop
mov
insl
add
or
pushf
les
xchg
or
daa
jle
pop
hlt
inc
cwtl
cmc
lret
aam
lods
nop
sub
sbb
hlt
sub
cmp
aas
aas
push
cmp
and
bound
push
lods
jle
and
nop
or
repz
cmp
sub
inc
jnp
xor
dec
mov
sahf
push
outsb
inc
clc
dec
ljmp
pushf
push
or
pop
sbb
sbb
or
insb
lahf
xchg
insb
xlat
arpl
rcr
adc
jnp
insl
das
jne
xor
mov
mov
test
fdivs
adc
and
outsl
jg
adc
pop
outsb
or
vcvtpd2psx
inc
std
stos
and
adc
addr16
push
push
mov
mov
aam
call
cvtdq2ps
pusha
popf
cmp
ficoms
dec
mov
leave
pop
inc
sbb
and
push
pusha
push
repnz
out
das
jl
inc
pop
adc
shll
jne
out
push
mov
rolb
lods
cmp
test
lcall
jnp
into
test
jmp
or
cmpsl
in
push
lods
mov
lea
xor
mov
pop
test
mov
xchg
out
jo
je
movsl
mov
addl
jnp
lret
sbb
iret
dec
rcrl
dec
loopne
rcll
icebp
mov
xchg
imul
push
das
std
cmpsb
sub
adc
add
in
pop
cwtl
repnz
mov
add
mov
fdivl
nop
sbb
fildl
pop
mov
xor
rclb
push
stos
pop
inc
cmp
testl
xchg
repnz
insl
lahf
mov
ret
push
push
push
cli
pop
cli
rcll
aam
nop
fisttpll
aad
testl
dec
mov
notb
aam
mov
and
push
das
rclb
ret
push
push
or
pop
pop
idivl
and
lods
sbb
fcoms
stc
cltd
mov
movsl
add
sub
in
xor
inc
and
test
jge
inc
cmp
or
pushf
adc
push
sbb
jo
js
filds
and
popa
test
pop
mov
push
lods
repnz
sub
js
addl
dec
lds
jnp
adc
push
xor
fsubs
xlat
mov
fidivrl
mov
ror
jle
xchg
mov
push
in
loopne
dec
mov
xor
jle
iret
mov
xchg
pop
notb
movsl
jns
in
or
mov
leave
mov
gs
xchg
icebp
orb
pusha
mov
lret
lock
ja
imul
jno
mov
hlt
fst
xchg
mov
push
push
jge
mov
push
jmp
mov
inc
sub
xlat
xor
inc
xchg
es
xor
adcb
mov
mov
or
mov
es
out
dec
dec
push
inc
iret
push
loop
lods
inc
mov
dec
inc
xor
mov
popf
stos
adc
loop
cs
mov
dec
stc
imul
push
adc
addr16
pop
cmp
mov
std
push
addr16
sahf
mov
dec
dec
or
ss
pop
mov
sub
nop
pusha
mov
mov
jo
jl
inc
stos
xchg
jp
sub
lds
stos
sbb
adc
add
sbb
pop
popa
shrb
inc
push
clc
and
pop
xor
jge
and
pop
mov
int
adc
testl
addl
push
jns
sarl
xchg
xchg
sub
xchg
mov
loopne
add
aad
xor
push
push
scas
adc
inc
pop
mov
and
ret
enter
mov
cmpsb
or
rcrl
and
dec
sbb
jno
mov
jmp
and
xchg
sub
add
int
int3
jno
mov
mov
int
pop
jns
add
jns
les
xor
hlt
mov
sub
lcall
fcomps
and
xchg
scas
sbb
ror
addr16
mov
lea
insl
mov
repnz
ret
jle
and
adc
faddl
ss
push
ret
push
add
sub
idivl
insl
push
jns
inc
loop
adc
mov
mov
xchg
mov
fs
cmpl
mov
test
loopne
in
sub
and
mov
leave
adcl
pop
loope
or
lahf
mov
aas
mov
in
xor
xchg
lea
lods
in
xchg
sti
and
dec
jnp
sahf
icebp
js
xchg
repnz
cltd
add
lds
outsb
sub
aad
arpl
and
inc
adc
jp
popf
fs
jno
int3
push
mov
add
insl
dec
xchg
cmpl
out
adc
loop
leave
mov
adc
in
in
pop
adc
and
nop
jg
movb
cmp
loopne
aad
pop
mov
int
aaa
add
fsubrs
cmpsb
int
jns
je
dec
rorl
nop
push
cbtw
sbb
cmc
xchg
sti
pop
lods
fcomp
and
jl
push
movsl
popf
repz
or
cmp
mov
xchg
inc
lcall
sub
fmull
mov
or
in
fdivrl
jg
adc
fimull
lret
adc
sub
mov
xchg
add
cmp
lahf
dec
shrl
int
xchg
clc
idivb
andl
dec
jne
inc
cmp
popa
jmp
sbb
mov
inc
pop
outsb
popf
cmp
adc
pop
rcll
sbb
je
and
and
xchg
sub
stos
leave
ret
adc
cmp
fnstcw
and
push
int
shlb
sbb
lods
mov
sub
lret
fsts
fwait
mov
out
mov
insb
dec
jp
stc
hlt
push
and
jns
mov
xchg
loope
sahf
aas
outsb
cmp
fmuls
leave
lret
movsb
test
out
xchg
cld
push
addr16
loop
or
pop
hlt
hlt
add
pop
out
imul
repnz
xchg
ljmp
icebp
push
xor
push
lea
push
pop
and
lcall
ljmp
cmpl
mov
insl
ret
and
push
nop
lahf
add
mov
pusha
movsb
outsl
add
push
movsb
into
mov
aad
shl
jp
in
rcll
mov
addr16
arpl
push
out
pop
dec
inc
into
push
xchg
nop
push
sub
fdivrl
out
cltd
testl
cld
aaa
sub
cld
fdiv
test
cvttps2pi
jne
fldcw
in
insl
out
or
shrl
or
jl
mov
loop
cmpsl
insb
pop
cld
sahf
xchg
stos
or
test
cld
or
and
sbb
push
sbb
loopne
push
adc
pop
popl
mov
add
mov
aam
mov
add
movsb
push
in
push
and
mov
ret
push
xor
mov
in
pushf
and
mov
loopne
pop
lods
or
inc
dec
jmp
das
lds
dec
lods
jns
scas
mov
mov
pop
xor
mov
and
les
aad
cltd
lds
pop
negl
sbb
adcb
lret
ja
xlat
dec
repz
xchg
dec
jecxz
lret
testb
ret
jecxz
push
out
inc
movaps
rclb
sarb
mov
lcall
in
std
test
imull
and
cmc
inc
imul
pop
xchg
shll
and
rorl
cmp
mov
jbe
sbb
xchg
es
jbe
imul
out
sar
push
ret
daa
sub
lods
and
mov
repnz
push
lcall
xchg
sahf
shrl
lahf
addr16
idivb
dec
std
adc
inc
cmc
lea
jnp
pop
and
push
ss
xchg
pop
mov
mov
bound
incb
rolb
in
jnp
cmpsb
aad
push
sub
and
neg
xchg
sbb
int3
je
stos
ret
popa
push
jl
jne
scas
ret
jg
adc
xor
ljmp
and
push
dec
push
xor
sbb
pushf
mov
mov
mov
jno
pop
lds
lods
xor
orl
ret
mov
lods
cmpsb
fsubs
rcr
xchg
xor
stos
and
fldenv
lahf
mov
ret
in
inc
ret
mov
fimull
xor
jae
dec
out
popa
mov
repnz
loopne
xor
and
js
in
add
cmpsl
aas
test
push
pop
sbb
in
jecxz
cmpsl
rolb
jbe
dec
sub
negl
inc
cltd
push
push
xchg
aaa
rcrb
and
dec
xor
aas
imul
lret
mov
cltd
pop
mov
icebp
call
pop
cwtl
mov
int3
rol
inc
push
rolb
adc
and
jno
je
push
jb,pt
dec
ljmp
adc
hlt
adc
sub
enter
testb
jae
mov
rcrb
fcmovnu
das
clc
push
add
testl
mov
jmp
inc
add
xchg
lcall
xchg
sub
jno
bound
mov
mov
jge
lds
adc
clc
stc
push
sbb
movb
adc
push
mov
dec
dec
adc
xchg
mov
fisttps
jns
lds
or
enter
ret
sub
inc
xchg
inc
addr16
outsl
scas
lock
js
leave
add
mov
xor
pop
ljmp
sbb
nop
push
inc
jp
movsl
pop
imul
jae
mov
add
test
lret
outsl
mov
popa
das
add
jle
push
xor
push
imul
xor
movsb
aad
in
adc
jae
dec
or
repz
ds
or
mov
mov
dec
jns
fnsave
ret
or
mov
test
int3
sub
test
lods
jne
in
adc
jo
xchg
test
addl
je
pop
mov
leave
fstps
jmp
mov
cli
addr16
pop
adc
cld
jp
inc
add
mov
daa
mov
cwtd
push
jae
leave
imul
jle
imul
pop
cltd
inc
push
jne
or
movsb
gs
sbb
loope
adc
dec
jge
ret
data16
gs
ljmp
or
lods
pushf
pop
cmp
clc
add
xchg
fs
push
jge
xchg
or
mov
push
mov
sahf
ret
icebp
jmp
mov
insl
adc
mov
sbb
hlt
jmp
test
pop
or
je
adc
push
add
jbe
mov
mov
sbb
mov
jecxz
ja
mov
fwait
dec
or
mov
fdivl
dec
shlb
mov
sbb
pusha
hlt
cmp
insl
jno
push
outsl
adc
fstp
ret
mov
divl
mov
cmpsl
call
mov
mov
mov
jae
lock
add
nop
scas
sbb
sub
cmp
sarl
ret
or
mov
sti
push
jnp
addr16
outsl
bound
add
test
scas
test
xor
fisttpl
movsl
aaa
fs
inc
add
lret
fistps
cmpb
insl
fwait
xor
sbbl
inc
or
sub
xor
xchg
mov
mov
add
std
sbb
ljmp
sub
lcall
mov
push
pop
xchg
xor
sub
or
stos
imul
subb
jle
dec
cmc
mov
pop
push
pop
cmp
jg
and
shrl
lock
sbb
mov
cmp
xor
sbb
mov
push
sbb
pop
mov
mov
xor
ret
dec
pop
or
push
jo
daa
outsb
mov
inc
mov
sbb
out
cmp
or
nop
call
cmc
clc
or
push
jae
dec
out
xor
add
mov
mov
dec
imul
xlat
lea
cmp
out
cli
push
xor
ficoms
je
mov
aad
and
arpl
push
cltd
mov
cmp
es
push
xchg
sub
sti
xchg
dec
pop
xchg
lcall
loope
adc
bound
mov
xchg
jne
outsb
push
in
mov
subl
out
xor
popa
sub
fimuls
lds
rorl
dec
pop
inc
push
repz
xlat
and
mov
inc
fistps
imull
pop
in
mov
fwait
add
lods
jne
cs
outsb
and
scas
scas
and
mov
jp
jbe
jmp
shll
idivb
dec
cmp
cmp
int3
push
push
fptan
test
rclb
or
mov
fcmovnb
pop
dec
jne
test
add
mov
iret
aaa
push
ljmp
push
mov
push
mov
xchg
inc
lods
sbb
pop
into
cli
cmp
rorl
xlat
adc
xchg
mov
sbbl
xlat
mov
lods
sbb
cmpsl
and
add
dec
sti
xor
aad
decb
adc
repnz
sbb
jnp
mov
adc
rcr
and
mov
push
inc
ret
dec
add
inc
pop
inc
xor
fcmovnb
pop
cmp
movsb
rcrl
jno
imul
inc
push
pop
rcrl
popf
or
mov
out
pop
or
test
cmp
inc
dec
popf
push
jge
inc
pop
out
inc
add
sbb
dec
cli
cmp
lret
and
das
mov
mov
xchg
outsb
push
shl
cmpb
popf
push
mov
imul
andl
push
xchg
pop
push
pushf
cli
mov
pop
inc
cmpl
sti
cmp
sarl
cli
cli
xor
in
shlb
lahf
test
scas
pop
out
ja
or
add
inc
loope
mov
dec
mov
notl
xchg
lods
or
pop
movsl
ljmp
cmpsb
fnstsw
jecxz
pop
ficomps
xlat
mov
iret
pop
test
movsl
std
movsb
test
gs
mov
dec
cltd
jg
mov
sahf
daa
loopne
mov
in
sub
ficoml
sub
sbb
sub
and
inc
lock
jecxz
int
inc
inc
xor
mov
out
jbe
pop
jp
in
push
xchg
add
jo
xchg
cmp
inc
aas
cmpsb
or
addl
cltd
mov
cli
movsb
repnz
stos
into
xchg
ds
repnz
jl
rcr
outsb
dec
or
inc
sbbb
les
jmp
xor
mov
int
cmc
push
xchg
xlat
int
gs
add
mov
mov
pop
out
mov
jmp
sbb
xchg
mov
outsb
pop
xchg
mov
popf
out
adc
inc
push
dec
in
les
cwtl
gs
pushf
sbb
pop
sbb
unpckhps
inc
push
dec
mov
lret
push
or
std
fcoms
sub
std
jnp
mov
fistpl
rclb
jmp
mov
cwtl
into
inc
sbb
cli
les
adc
pop
fucomi
mov
add
pusha
cmpsl
bound
sub
mov
sub
pop
or
inc
dec
pop
cmpsl
lret
into
and
inc
and
inc
push
or
pushl
movsl
cmp
jne
dec
popa
dec
mov
dec
cwtl
lahf
repnz
cli
xchg
loop
jb
dec
lahf
pop
mov
pop
xchg
xchg
inc
filds
or
into
dec
or
cmpsb
or
mov
pop
sti
push
pop
sub
stos
lret
shlb
adc
aad
movsl
ljmp
xchg
lret
xor
adc
daa
mov
cwtl
sarb
pop
mov
inc
push
fildl
sub
xor
lock
scas
pop
data16
mov
mov
pop
gs
adc
push
xchg
daa
mov
stos
out
dec
xchg
cltd
jns
push
push
inc
adc
push
les
mov
mov
loop
sub
ret
xchg
xchg
arpl
insb
fcmovnbe
cmp
sub
call
sahf
xor
notl
lods
push
cmp
bound
test
jg
int
pop
adc
lea
dec
mov
sub
lret
lahf
xor
mov
push
or
cmp
mov
jle
popf
fmul
mov
adc
push
cmp
xor
cmp
inc
jns
and
or
jmp
push
int
test
add
push
add
inc
adc
aas
or
push
mov
mov
les
xchg
mov
push
mov
bound
or
dec
push
test
in
insb
jne
dec
mov
mov
cmp
jge
cmpsl
jb
mov
testb
in
js
repnz
mov
dec
scas
inc
scas
decb
pop
outsl
cltd
pop
mov
daa
inc
push
jns
and
xchg
ret
jg
xchg
push
pop
cmpsb
sub
insb
adc
pop
clc
xor
movsb
mov
scas
pop
sti
mov
lods
lods
repz
or
jle
add
mov
adcl
xchg
rolb
xchg
rclb
mov
popa
mov
lods
jno
push
ss
mov
fwait
sbb
add
pop
xchg
shll
push
inc
fmull
in
xchg
push
loopne
cli
pushw
es
nop
addr16
pop
outsl
jl
dec
push
hlt
and
or
sub
pusha
rep
push
xchg
jmp
mov
jge
or
lahf
mov
divl
mov
mov
mov
xchg
dec
lds
push
and
es
mov
orb
sti
dec
int3
decl
inc
fabs
fistpl
das
int3
inc
rclb
fmul
push
stos
movsb
jmp
push
cmp
mov
inc
mov
dec
pop
xor
mov
cmp
hlt
adc
aad
packsswb
dec
or
rcrb
icebp
pop
fnstsw
inc
js
xchg
cs
adc
mov
and
inc
dec
xchg
femms
mov
jle
mov
ljmp
decl
and
cmpsb
xor
push
lock
xchg
nop
sbb
jnp
lock
or
xor
jae
idivb
int
test
sub
cld
push
mov
jmp
dec
test
or
or
sti
es
das
xor
inc
cmp
jnp
push
pop
add
add
aaa
add
sbb
push
xor
je
cmpsl
repnz
inc
dec
test
cld
jg
rcll
jno
repz
lock
hlt
in
push
or
sbb
xchg
out
lret
push
xor
lods
push
loope
cmp
sub
aaa
lods
cmp
mov
enter
fistpll
jb
sbb
jb
jno
adc
aam
sub
sub
adc
movsl
aam
int
jp
std
push
sub
iret
orb
inc
fwait
xor
repz
mov
and
fldcw
xchg
and
stc
pop
insl
mov
jp
push
std
inc
jne
jmp
mov
push
es
je
int
lods
push
imul
xor
enter
sub
mov
inc
cmpl
out
cmp
xorl
subl
and
scas
lods
rcrl
push
mov
and
in
and
sbb
iret
lea
loopne
pop
adc
aas
arpl
adc
or
aad
rcrb
jne
adc
sub
cmp
fisubrs
sbb
insb
fnstenv
jbe
insb
std
addr16
cmc
icebp
ret
xchg
out
inc
outsb
test
cmp
mov
rclb
mov
imul
fwait
cli
lea
sub
jo
jecxz
shll
inc
lds
mov
sbb
pop
vmread
mov
ss
or
enter
fwait
add
adc
gs
arpl
sub
inc
sti
jae
xor
or
jne
mov
mov
inc
test
push
es
fcoml
mov
add
xchg
sbb
movsl
cmpsb
sub
adc
test
jmp
lods
and
in
flds
and
jns
dec
mov
mov
pop
mov
sarl
and
push
mov
daa
rcrb
out
push
jg
push
dec
jo
dec
xchg
in
js
cmp
sub
dec
jne
pop
loope
jp
in
popa
adc
lods
int
mov
std
pop
icebp
stc
fsubrl
jae
inc
add
or
leave
imul
ret
aad
lods
and
ret
rep
int
mov
cli
add
ret
cmc
mov
push
fdivrs
add
adc
mov
jle
sub
inc
pop
jmp
push
jb
mov
scas
int3
dec
in
xor
and
shr
setbe
mov
pusha
push
sarb
int
jbe
test
hlt
pop
cmp
fldcw
mov
insl
lcall
cmp
push
jmp
popf
adc
repz
js
in
xchg
ljmp
xor
jmp
or
xchg
lret
shlb
insl
iret
jmp
fsubr
jae
inc
mov
clc
mulb
pop
dec
ja
insl
lds
cmp
xor
cmpsl
xchg
js
arpl
mov
iret
lahf
in
leave
xchg
inc
xchg
ds
enter
cld
jne
inc
mov
fdivr
int3
movl
ficoms
add
push
in
inc
dec
out
shll
out
psrad
sub
cmp
fcomi
pop
fs
push
testl
mov
cmp
sbb
sub
fsubrs
pushf
inc
xchg
shll
pop
jg
test
xchg
test
dec
mov
lahf
inc
jle
paddusb
dec
xchg
int3
daa
xchg
push
mov
xor
mov
mov
and
mov
jge
cmp
lahf
mov
adc
cmpsb
sub
sti
gs
mov
addl
add
pop
adc
ror
adc
int
jo
sti
stos
adc
mov
cwtl
push
mov
ret
daa
add
movsl
or
mov
cmp
int
cmp
lods
mov
pushl
add
fdivl
add
xchg
or
movsl
aad
mov
and
std
sbb
jns
or
shr
or
cmp
xchg
add
in
add
in
lcall
pop
adc
xor
mov
cltd
bound
shr
insb
addr16
sub
and
fimuls
rcl
movsl
xor
bound
push
imull
ja
xor
es
imul
and
mov
jno
and
cmp
pop
xchg
test
push
push
repnz
and
adc
jge
in
mov
icebp
js
mov
mov
test
test
jbe
dec
push
leave
add
xor
arpl
idiv
clc
imul
in
in
inc
inc
jns
mov
dec
scas
bound
ja
js
lock
jecxz
pushf
mov
jecxz
mov
sbb
sbb
jo
add
xor
xor
pop
popa
cli
push
jmp
jecxz
mov
jno
push
in
xchg
nop
or
mov
xchg
xchg
mov
into
mulb
xchg
cmp
add
ficomps
imulb
push
enter
mov
cli
cwtl
mov
adc
inc
and
sub
imul
mov
push
add
mov
repz
push
sub
push
adc
sbb
pop
pop
outsl
xchg
jne
sbb
gs
cli
mov
inc
cmp
loope
leave
aaa
sbb
sbb
jno
push
rorb
in
push
push
stos
stos
in
stc
fmulp
or
bound
cld
and
jae
add
in
and
mov
ja
testl
in
jne
icebp
xchg
in
jecxz
and
dec
inc
enter
out
fsubrl
xchg
test
out
pop
sbb
cmc
rol
arpl
aad
push
ljmp
in
push
mov
mov
addr16
inc
xchg
mov
mov
xchg
inc
nop
pop
sub
outsl
div
rolb
pop
sub
mov
and
dec
mov
push
cmpsl
mov
mov
sub
mov
sub
enter
cmpsl
stc
xchg
pop
bound
aaa
psrad
xchg
push
pop
xchg
cmpsb
dec
cli
and
addr16
push
lret
popa
mov
add
cwtl
lea
dec
in
bound
popf
popl
mov
add
outsl
xor
mov
fsubl
in
adc
mov
push
sbb
ljmp
ja
stos
push
adc
shlb
shl
insb
add
imul
ljmp
aaa
fmuls
cli
addr16
std
cli
xchg
inc
xchg
and
sbb
cmp
sub
jae
out
jbe
je
push
dec
aas
lret
inc
push
sub
sahf
sbb
jmp
addr16
leave
dec
adc
outsb
fnsave
jl
cmp
jmp
out
movb
into
pop
push
repnz
jns
fstpt
sub
mov
lock
adc
lods
add
add
int3
test
push
loop
push
shufps
dec
movsl
aaa
xchg
repnz
mov
sub
pop
das
stos
inc
ret
mov
xor
push
sbb
int
popa
fisubrl
jl
rorb
xchg
mov
and
adc
mov
mov
lods
rcrb
imul
out
add
cli
pop
push
dec
mov
dec
mov
out
cmp
pop
xlat
or
add
loope
mov
or
inc
aas
in
ljmp
mov
add
fisttpll
inc
enter
enter
repz
stos
outsb
push
push
push
imul
lahf
or
popf
sbb
xor
sbb
repnz
push
xorb
or
lea
jle
jge
test
pop
mov
mov
sbb
stc
jmp
jns
pusha
lret
push
pusha
pop
mov
dec
mov
and
sub
dec
or
dec
sub
clc
lret
mov
dec
jbe
scas
sub
mov
imul
ret
test
mov
push
pop
in
xchg
sti
es
pusha
dec
mov
popa
jo
jl
pop
mov
adc
std
les
jo
scas
mov
jg
jg
mov
gs
xchg
out
and
ja
pop
ss
rorl
adc
in
sbb
ficompl
cli
cld
jmp
sub
test
mull
aam
fadds
pop
out
jbe
adc
and
push
lods
sahf
repz
roll
out
cmpsb
mov
push
outsl
xchg
in
test
xchg
icebp
sarl
popa
jb
adc
int3
mov
cmpsl
mov
jae
or
pushf
mov
inc
ret
inc
sahf
or
add
xchg
cmpsb
jle
or
or
in
dec
mov
dec
push
lret
das
xor
out
lahf
mov
pop
in
adc
or
dec
stc
push
es
add
cmp
cmp
mov
inc
sub
push
dec
push
popa
pushf
mov
cmpsb
xor
in
callw
insb
ljmp
mov
mov
fcomi
jbe
test
test
mov
push
xchg
cmpsl
inc
icebp
pop
jge
mov
xor
xor
inc
cmp
xor
in
mov
cmp
cltd
cmpsl
inc
push
sub
xor
test
or
iret
das
jl
ss
pop
call
xchg
stos
dec
aam
scas
lock
xchg
push
jge
into
dec
orb
jl
push
dec
fstl
mov
cmp
pushf
xor
mov
and
dec
and
jge
sbb
jns
mov
rcll
js
lods
aas
mov
pop
sbb
lods
data16
dec
test
sbb
add
cltd
or
std
inc
test
andb
in
movsl
and
movsb
mov
pop
cld
addr16
data16
adc
arpl
fisubrs
test
inc
inc
add
sbb
dec
jbe
inc
lds
jge
test
mov
pop
pop
inc
ret
mov
cs
fidivrs
xchg
jo
movsb
ret
clc
scas
mov
es
cmp
mulb
sbb
dec
jmp
fwait
gs
mov
mov
sub
xchg
fistps
mov
adc
out
dec
dec
jno
cmp
cltd
push
xlat
call
loop
or
xchg
lea
pop
repz
popf
and
ja
aaa
or
idivl
sbb
repz
mov
pop
jno
sub
push
sti
imul
add
jmp
cmp
daa
in
dec
hlt
test
stc
inc
mov
cli
js
jb
inc
ficoms
push
add
adc
mov
cmp
ja
jae
test
hlt
and
insl
jns
and
xchg
fs
sbb
jp
repnz
in
das
shll
sahf
out
mov
fs
lea
js
sahf
insb
out
mov
mov
xor
mov
outsl
subl
lds
and
jp
push
xchg
xchg
jo
ljmp
nop
loope
lea
pop
push
leave
hlt
lea
add
push
subb
and
add
test
sbb
adc
or
pop
leave
cmp
scas
pop
jl
iret
adc
jo
fwait
cmc
jecxz
fdivs
adc
daa
ss
jno
nop
cld
repnz
and
outsl
xor
xchg
lret
cmp
popf
push
push
xor
out
repz
xchg
loopne
mov
xchg
pop
dec
jae
cld
add
adc
xchg
sub
push
jg
fstpl
or
rcr
aas
les
mov
enter
je
jg
fidivl
int3
jl
inc
push
jecxz
sub
or
push
clc
scas
mov
inc
add
lock
sarl
std
fdivrs
imul
outsb
mov
xchg
pop
ret
fistpl
push
xor
les
out
scas
jb
xor
pop
xlat
xor
sub
xor
lret
popa
mov
cltd
repz
les
aas
cld
mov
push
cltd
mov
outsb
ret
push
loop
jb
out
fldt
jle
push
incl
out
scas
fstpl
xchg
rclb
fdiv
fwait
pop
jecxz
dec
adc
pop
out
cwtl
xchg
rolb
sbb
sub
push
push
lahf
outsb
pop
xor
fstl
pop
jle
xor
adc
mov
jns
and
fmuls
xor
sub
mov
loopnew
dec
mov
xchg
xchg
jae
insb
out
or
xchg
cmpsl
mov
pusha
cmc
nop
jmp
scas
inc
push
pushf
into
cltd
out
xor
pop
inc
icebp
xlat
ret
sub
je
jbe
shlb
cmp
iret
and
inc
adc
jnp
xchg
mov
insb
push
mov
iret
imul
test
iret
inc
cwtl
es
cld
mov
movsl
sti
push
and
addl
push
lea
dec
imul
xchg
cmp
xor
dec
sub
shll
xlat
jnp
jge
dec
push
in
lret
mov
dec
in
xor
arpl
xor
insl
xchg
test
xlat
push
pop
ja
adc
mov
cmp
mov
testb
addr16
nop
mov
mov
and
inc
cli
cli
les
mov
lcall
rep
iret
push
mov
addr16
adc
sub
lret
cli
ffreep
stc
inc
into
cmpsl
rcl
mov
sahf
add
fidivs
adc
mov
push
lods
lret
mov
ret
xchg
stos
into
sbb
jbe
dec
pop
jne
push
cmc
xor
fcompp
insb
push
cmp
mov
dec
xlat
enter
imul
jbe
test
mov
push
push
mov
ljmp
iret
mov
xlat
inc
or
push
stos
or
add
lds
inc
pop
or
shlb
fldl
xchg
ss
mov
icebp
jns
mov
jae
pop
jle
das
in
push
mov
mov
cltd
adc
jae
fdivl
notb
dec
dec
mov
dec
jp
inc
sarl
das
mov
bound
mov
jae
aaa
not
ret
push
lahf
or
dec
jmp
add
pop
push
jmp
xchg
icebp
sub
mov
mov
ss
jns
sahf
pushf
gs
sahf
ss
aam
sub
int3
or
pop
sbb
std
cmp
pusha
xchg
mov
scas
push
mov
sub
and
aas
push
xlat
add
int3
and
jae
popf
shlb
xor
push
cmp
xchg
jno
pop
call
inc
hlt
cmpsb
inc
das
and
push
push
mov
subps
int
imulb
aad
movl
pop
jb
ljmp
pop
stc
rcrb
insb
clc
mov
fucomp
negl
jg
adc
scas
adc
mov
dec
gs
xchg
and
push
mov
dec
adc
aas
imul
negl
jb
push
xchg
sub
fists
pusha
pusha
fdivp
xchg
lods
scas
fstpl
call
in
push
fs
fisttps
sub
add
sub
and
scas
scas
dec
jg
push
out
mov
fisubl
mov
inc
subb
cld
test
push
xchg
push
xchg
jae
adc
cli
push
xchg
inc
dec
movsl
pop
mov
or
sub
sbb
mov
xchg
imul
data16
or
add
lret
push
push
les
mov
dec
or
stos
pushf
idiv
fnstcw
in
push
sub
in
add
out
addr16
movb
mov
aam
lock
cwtl
mov
iret
dec
mov
shr
cltd
mov
mov
lods
loopne
add
xchg
adc
mov
xlat
mov
xlat
pop
mov
sahf
in
mov
fwait
add
mulb
daa
movsb
pushf
push
test
lahf
inc
mov
adc
cmp
xchg
jno
jge
mov
pop
repz
lods
ret
push
pusha
add
jae
xor
addr16
sub
fsubrs
not
jne
push
call
das
loopne
add
insl
pop
and
mov
inc
int
or
sbb
push
cmp
xchg
jne
testl
scas
jno
mov
scas
mov
aas
pop
adc
shlb
lods
mov
out
xchg
push
xor
and
adc
inc
inc
dec
fmull
sbb
add
dec
sbb
out
dec
cwtl
sti
mov
dec
and
xchg
dec
jg
outsl
pop
push
add
cmp
adc
bound
out
scas
mov
xor
mov
cmp
jp
mov
popf
pop
jle
cmp
push
mov
mov
imul
adc
pop
xor
adc
xor
faddp
adc
test
sbb
jne
add
adc
popl
addr16
jne
pushf
les
cmp
adc
add
adc
cwtl
sub
loop
pop
inc
fninit
sti
sti
dec
add
sub
lock
dec
stos
aad
clc
jns
jecxz
pop
lock
cmc
xchg
inc
shr
jmp
lahf
jge
dec
loopne
dec
insl
cwtl
data16
push
call
mov
mov
loop
pop
test
or
cmp
in
leave
push
mov
inc
dec
clc
fisttps
divl
lret
jns
mov
inc
inc
mov
cmp
idiv
and
pop
ffree
out
cmp
adc
mov
dec
sti
cmp
lock
stos
jg
pop
mov
xchg
das
xor
cmp
in
out
or
pop
push
ret
iret
cmp
roll
dec
test
sbb
and
mov
xlat
repnz
and
mov
and
ja
pop
fiaddl
mov
arpl
push
jne,pt
cmp
mov
mov
ja
adc
pop
jnp
negb
pop
push
mov
inc
or
and
mov
int
imul
enter
lock
fimuls
rclb
jae
ret
roll
leave
xchg
ss
divb
fwait
adc
popf
dec
call
ret
aam
movb
arpl
cltd
add
imul
mov
inc
arpl
or
mov
xlat
jne
test
push
dec
xor
mov
adc
insl
int
out
jo
das
jl
adc
orb
mov
xor
mov
dec
jns
call
or
or
subl
inc
loopne
push
xchg
stc
mov
imul
mov
dec
pop
cmp
pusha
adc
push
cld
popf
mov
pop
js
or
fidivrs
inc
pop
xchg
inc
lret
push
imul
adc
xor
add
push
bound
stos
jb
dec
xor
mov
stos
jl
fucomip
mov
sbb
stos
or
insl
icebp
xor
dec
sub
test
jae
arpl
mov
push
pop
sbb
stos
mov
mov
and
pop
bound
cmp
inc
xlat
in
or
xchg
pop
sub
inc
mov
sub
stos
or
pop
out
cmc
outsb
push
dec
int
hlt
popf
das
imul
std
enter
mov
jle
movsb
mov
push
jae
push
mov
cmp
shlb
inc
adc
pushf
hlt
mov
fisttpll
dec
sahf
inc
sbb
cmp
add
sub
ficoml
mov
mov
rorb
aam
jge
xor
pushf
insl
jg
push
pop
sub
data16
cmc
adc
push
sahf
aam
cli
sbb
inc
jecxz
sarl
rorl
sbb
inc
cmp
sub
xlat
mov
jbe
add
inc
aaa
mov
lret
shrb
jl
jno
inc
rcll
pop
movsl
sub
test
pop
pop
xchg
push
ret
or
xor
mov
and
xchg
ja
jle
cmp
test
jnp
mov
repz
xor
nop
sub
bound
jae
and
push
stos
jbe
and
hlt
mov
lret
add
sbb
notl
and
mov
popf
enter
pop
mov
adc
mov
adc
xor
call
dec
loopne
jnp
enter
and
jp
and
cwtl
addr16
add
fildl
dec
shrb
enter
inc
pop
push
mov
add
fwait
mov
stos
and
add
cmpsb
dec
xchg
mov
push
daa
out
xlat
sbb
mov
xor
adc
sbb
xor
repnz
in
dec
gs
push
inc
xchg
sub
les
xchg
push
adc
bound
push
lcall
shll
pop
movl
loop
decb
int
jmp
rorb
imul
test
mov
loop
adc
mov
and
pop
sbb
mov
pop
ss
loope
cmp
subb
pop
mov
outsb
sbb
dec
or
ljmp
aas
fwait
je
mov
jns
and
mov
aaa
in
mov
or
sti
mov
sahf
mov
xchg
xor
bnd
sub
mov
jne
push
push
sbb
arpl
dec
imulb
arpl
mov
or
dec
aad
leave
incl
push
aam
inc
xchg
cwtl
mov
in
lcall
add
sub
mov
adcb
or
sbb
mov
arpl
push
mov
stos
cmp
call
xchg
shl
js
out
fcmovne
dec
les
mov
fisttpl
popf
adc
xor
shlb
xchg
mov
in
adc
mov
jmp
xchg
pop
addl
xorb
mov
fdivl
ret
cltd
std
fistpl
push
les
pop
shlb
loop
xor
or
jecxz
bound
pop
daa
xchg
cmp
loope
add
sbb
popf
sub
shl
mov
imul
jns
rcll
mov
test
adc
push
fstps
and
jae
cmp
xor
inc
arpl
imul
sub
xor
xchg
lret
std
iret
pop
cld
adc
fistl
jnp
stos
push
mov
dec
mov
jl
cmp
and
cmp
sub
or
clc
nop
loop
out
cli
ret
je
mov
fimuls
sahf
inc
cli
sub
xchg
mov
sub
dec
hlt
imul
aaa
or
movsl
bound
fs
cmp
cmp
gs
sbb
xchg
loopne,pn
in
and
mov
out
dec
sub
sar
push
or
inc
dec
mov
dec
inc
mov
mov
testl
add
out
test
iret
add
jno
int
pop
cli
push
sub
jg
leave
and
scas
in
sub
inc
mov
sbb
test
outsl
cs
sbb
inc
sub
sub
mov
shrl
mov
pusha
out
clc
dec
xchg
enter
and
or
sub
lods
xchg
mov
xor
push
stos
lods
jne
mov
out
sahf
dec
inc
pop
call
imul
jp
dec
sub
sbb
xor
mov
mov
xor
data16
adc
clc
jne
sbb
mov
pop
loope
inc
lock
push
and
int3
sahf
inc
fwait
in
and
je
pop
test
das
adc
iret
cmp
stos
leave
mov
imul
jle
fbstp
or
shlb
mov
icebp
push
mov
cli
flds
xchg
xor
cmc
mov
outsl
repz
cmp
gs
or
mov
aam
xlat
or
or
xchg
sub
std
sub
in
stc
ficomps
sbbl
je
loopne
inc
cmp
int3
cmp
sbb
or
or
loope
ret
popa
loopne
mov
loope
or
mov
push
adc
cmp
pop
add
push
add
dec
out
lahf
dec
jb
scas
or
pop
push
iret
pop
cltd
jns
and
cmp
cli
outsl
jl
mov
in
fdivl
jbe
mov
bound
xor
jbe
loop
outsb
or
mov
pop
and
iret
mov
js
int3
lahf
jno
pushf
xlat
mov
or
fnsave
addb
in
hlt
mov
mov
sbb
adc
mov
mov
fucom
sti
and
sbb
inc
inc
frstor
xchg
inc
aad
pop
push
jbe
fstl
fimull
mov
jne
inc
inc
iret
jns
icebp
pop
sbb
icebp
in
out
jmp
aad
mov
add
inc
sti
movsb
add
adc
push
lret
or
dec
arpl
daa
test
outsl
loop
inc
scas
data16
lret
call
pop
cmpsl
sbb
pop
jp
inc
cmc
insb
add
xchg
mov
mov
inc
lret
mov
sbb
arpl
lds
in
lods
outsl
dec
or
mov
popf
mov
inc
and
mov
call
fildll
sbb
jg
cmpsb
xorl
subl
fistpll
fwait
mov
push
and
or
xchg
bnd
adc
icebp
mov
or
out
pop
jecxz
arpl
lds
sbb
adc
cmpb
cmpsl
jmp
das
leave
rorl
push
sub
dec
sub
mov
jb
jecxz
dec
dec
push
jmp
dec
jo
clc
lahf
mov
sbb
ss
cmp
call
in
sahf
in
mov
stos
cmpl
fdivs
test
ds
and
outsb
jmp
out
inc
mov
push
leave
xchg
out
inc
xlat
ja
or
jbe
add
lea
xchg
test
inc
sbb
cs
test
xchg
and
jnp
jge
mov
add
mov
pop
cli
dec
cmc
loop
sbb
sbb
mov
cmp
orl
mov
sub
pop
repnz
mov
jle
fsts
in
test
imul
sub
sarb
es
fcomps
pop
sbb
push
rolb
loope
shll
imul
dec
or
mov
insl
js
push
sub
dec
imul
movsl
dec
popf
test
sbb
sub
xor
sbb
xchg
adc
inc
cmp
call
and
movsb
pushf
cmp
ss
pop
mov
sbb
mov
sbb
xchg
mov
mov
aam
dec
xor
sub
jecxz
lds
cli
js
dec
xor
mov
cld
clc
push
cmp
add
inc
xor
stos
bound
sahf
xchg
mov
adc
lcall
jp
push
mov
sbb
jnp
pop
sub
ret
jae
adc
add
cld
pop
aam
lock
push
loopne
pop
push
mov
and
cli
sub
pop
lds
jbe
insl
pusha
cmpsb
dec
mov
cmpl
sarl
loope
mov
sti
cmpsl
cmp
pop
push
or
cld
fnstenv
mov
sarb
or
mov
inc
jbe
int
sarb
fwait
pop
cmp
movsl
jnp
mov
push
cmp
pop
cmp
sub
xchg
hlt
pop
pop
push
dec
imul
ljmp
test
sbb
ret
or
ds
jg
orb
fcomps
adc
movsb
pop
cmp
xchg
and
and
mov
pop
mov
jns
xchg
xchg
xchg
mov
mov
jbe
fadd
clc
lds
aad
insl
in
gs
cmc
xor
imul
cld
dec
inc
xorb
push
shll
cmc
push
add
sub
jnp
das
je
mov
fwait
mov
xor
sahf
lcall
add
loope
cltd
fildl
fwait
jp
mov
push
jg
and
out
add
les
xor
xor
nop
movsb
roll
sahf
mov
test
ret
jno
sub
mov
mov
mov
das
cltd
adc
nop
push
adcl
ss
pop
lods
mov
out
xchg
mov
xchg
rcrl
imul
or
xor
dec
push
in
adc
addr16
loop
jae
push
pop
outsb
pop
mov
lea
and
lcall
jg
scas
dec
adc
ret
cmpsb
popa
cli
clc
mov
roll
leave
pop
test
fwait
test
test
push
loop
xorl
idivl
gs
es
xchg
sbb
pop
adc
fisubrs
or
xchg
or
in
insb
push
test
scas
gs
call
cli
mov
adc
aas
icebp
lret
std
out
lahf
sub
adc
test
fdivrl
xchg
ljmp
bound
es
jae
cmc
fldt
mov
cmp
sar
pop
pop
sbb
cmp
call
shl
xchg
popf
add
scas
iret
mov
xor
mov
mov
ja
pop
or
jb
inc
sbb
hlt
dec
hlt
mov
or
cmp
testb
mov
in
cltd
push
movsl
mov
mov
push
adc
movsb
or
out
or
adc
insl
je
or
inc
fstl
and
imul
add
nop
in
outsl
ret
pop
xor
outsb
or
aad
or
or
movsl
mov
dec
jmp
rcll
jns
xor
xor
imul
fcmovb
test
gs
test
gs
enter
adc
and
outsb
push
lds
and
push
aam
pop
sarl
popl
dec
add
fbld
push
cpuid
bnd
add
xorb
add
and
dec
lods
push
subb
sahf
dec
push
ret
mov
pop
fbstp
cmpb
mov
jae
xchg
inc
es
add
sub
or
xor
jae
fdivs
cmp
inc
inc
adc
shl
dec
cmp
out
inc
cwtl
jge
sbb
sub
adc
rcrb
xchg
pushf
and
mov
sbb
or
movsb
int3
lahf
and
jecxz
mov
adcb
outsb
inc
fldenv
adc
outsl
sbb
jne
jne
punpckldq
pop
in
test
rcr
sbb
push
dec
push
pop
cmp
mov
ds
es
xor
lods
les
add
mov
jecxz
or
push
je
mov
pusha
cmp
sbb
push
add
or
fwait
mov
int3
mov
sbb
sub
fnstenv
sbb
iret
mov
inc
shll
dec
mov
mov
lods
cmpsb
out
sti
sbb
scas
les
mov
jmp
jmp
add
sub
dec
sti
mov
xchg
adcl
jle
lods
lods
xchg
popa
sub
push
sub
add
xchg
pop
push
dec
mov
mov
xor
cli
sub
sub
add
cltd
xchg
pop
inc
icebp
cmp
movsb
inc
mov
rcrb
adc
pop
nop
cmp
fidivl
rorl
pop
sub
test
jne
fstl
test
test
repnz
in
inc
es
mov
scas
leave
lock
movsl
pop
mov
push
mov
je
or
inc
sbb
sub
xchg
imul
repz
mov
sub
inc
das
or
jmp
je
int3
jp
cltd
sub
insl
in
cmp
loope
or
addb
cmc
cmp
mov
testb
xor
loop
ss
pop
sbb
sub
loopne
push
repnz
icebp
das
mov
xchg
movsb
pop
xchg
mov
pop
rorl
lret
add
hlt
mov
hlt
mov
je
cltd
add
nop
or
inc
in
push
push
push
out
or
fdivl
sbb
add
sbb
fwait
cmp
inc
and
das
mov
push
leave
mov
mov
lea
cwtl
fcmovnb
jo
lock
hlt
adc
push
dec
and
hlt
imulb
sbb
mov
mov
fimull
push
mov
or
cs
sarl
mov
orl
or
xor
call
pop
push
cmpsl
popa
or
fcmovnu
aaa
outsb
lods
dec
xor
lret
mov
fnstenv
xor
xchg
or
mov
xchg
in
pop
push
lret
into
or
push
iret
dec
dec
gs
pop
out
sarb
mov
ret
and
out
xchg
xchg
jp
xchg
mov
pop
jmp
fcomip
lcall
inc
push
lahf
or
pop
pop
in
in
mov
sbb
cmp
lea
stos
fs
pusha
push
add
add
add
pop
mov
fsubrs
xchg
mov
inc
or
jmp
je
cmp
xor
stc
int
jno
push
mov
mov
inc
push
psubusw
dec
dec
imul
push
add
fidivs
fidivrs
mov
fs
sbb
stos
popa
scas
test
adc
add
rclb
and
ss
out
cs
cmp
cs
xchg
out
das
mov
jmp
mov
repz
pop
push
mov
pop
push
fnsave
dec
scas
cs
cmp
pop
leave
test
mov
dec
in
or
andl
fs
pusha
popa
or
sbb
cmpsb
pop
loopne
daa
pop
mov
jne,pn
jp
sbb
xor
sbb
push
adc
xor
stc
loope
xchg
fisttpll
icebp
repz
add
stos
xchg
mov
mov
das
out
mov
out
mov
inc
push
sub
pop
inc
int3
lcall
in
lea
pusha
inc
bnd
jle
enter
out
fidivs
hlt
into
mov
je
frstor
inc
pop
xchg
cltd
fwait
add
pop
dec
stos
popa
sub
mov
pop
pop
xchg
mov
aad
data16
addl
div
pop
popa
repz
dec
dec
out
and
push
mov
fnstenv
bsf
stos
test
div
adc
lcall
pop
sub
sahf
cmc
inc
insl
or
add
sbbl
mov
jno
lea
sbb
in
cs
inc
sbb
cmc
or
lret
mov
jnp
in
mov
lock
iret
stos
xchg
pop
inc
cmpsl
loop
orb
ret
pop
sti
test
add
loope,pn
pusha
scas
inc
fstpt
cmpsl
cmpsb
das
xchg
mov
ja
pop
icebp
sbb
cmp
pop
loopne
adc
mov
jecxz
pop
loopne
pop
sub
jl
mov
and
inc
push
dec
cmp
push
stos
int
jl
mov
xchg
inc
inc
xchg
movsl
dec
sub
xor
xchg
inc
in
mov
ljmp
pop
and
ss
inc
pop
add
iret
clc
jo
addr16
xor
xor
mov
aad
dec
sub
ljmp
sub
pop
pop
mov
movsb
sub
mov
into
mov
mov
lahf
jge
stos
xor
cwtl
xor
adc
mov
xor
iret
gs
dec
test
mov
repz
xor
outsl
repz
sbb
pop
enter
adc
fs
dec
and
fsts
sub
push
jns
sahf
and
sbb
xchg
mov
add
jge
sub
mov
cld
sub
shlb
pop
test
fidivrl
and
sbb
mov
aas
cmp
je
ret
js
jmp
aad
and
and
aam
fs
int
inc
subb
ficoms
pusha
pop
push
icebp
stos
pop
icebp
xor
loopne
pop
loope
and
mov
scas
mov
int
push
scas
cmp
adc
aas
loopne
mov
loope
ja
mov
lods
inc
push
inc
fldt
gs
sub
lds
cmp
cwtl
fmull
stc
xchg
mov
cltd
mov
xchg
mov
scas
push
out
in
int
jmp
nop
push
mov
jl
daa
pop
jb
mov
repz
pop
sbb
addr16
das
mov
push
inc
pop
inc
test
ret
xchg
mov
pop
xor
jmp
jge
cmp
sub
or
add
sbb
popa
add
jmp
mov
mov
mov
add
push
ljmp
fiadds
fisubrs
fistps
mov
leave
jae
mov
add
pop
scas
lret
xchg
ljmp
call
out
outsb
cld
dec
aas
jno
aaa
jecxz
out
cmp
sub
addr16
sti
adc
pushl
push
cmp
lds
lods
push
cltd
out
inc
in
repnz
jl
in
and
cmp
xchg
insl
mov
dec
and
mov
movsb
fiaddl
sub
repz
nopl
insl
daa
insl
pop
ljmp
xchg
in
push
mov
mov
add
out
dec
fildl
inc
adc
lahf
arpl
and
xchg
mov
mov
mov
nop
das
or
out
addr16
mov
cmp
mov
fistpll
adc
bound
sub
pop
jne
bound
push
ret
xchg
addr16
and
mull
daa
insl
sbb
into
movsb
fisubrl
shlb
and
js
imul
out
pusha
sbb
incl
xchg
or
lods
je
sarb
push
xchg
in
mov
pop
call
in
sub
pop
lahf
scas
jb
hlt
int
pop
mov
mov
sub
jno
andb
push
ret
rcll
sbb
subl
mov
push
cli
mov
insl
sti
dec
cmp
rorb
pop
mov
cltd
xor
xor
pop
add
cmc
int3
or
pop
sub
push
push
mov
or
addb
sbb
imul
jle
ret
push
daa
aas
pop
mov
dec
out
jle
xchg
out
andl
push
jp
in
gs
stc
lret
pop
fidivrl
popf
jl
fsubrs
inc
sbb
mov
bts
std
int3
popf
adc
push
xor
es
loop
out
and
lret
push
xor
inc
lcall
push
lock
dec
idivb
mov
jne
lcall
ljmp
mov
int
aaa
push
nop
les
movsb
mov
ss
mov
lods
sub
es
mov
cmp
mov
xchg
daa
test
nop
inc
scas
inc
dec
lea
dec
and
pop
loop
cmpb
xchg
jno
lahf
ds
cmp
inc
push
je
aad
xchg
and
rorb
dec
cltd
or
jle
and
pop
jnp
xchg
xor
xchg
cmp
add
sti
or
jecxz
dec
pop
dec
jg
mov
cmpsl
nop
sarl
add
rorl
sub
mov
sub
lods
int
mov
add
rorb
and
scas
mov
add
xchg
insb
jmp
jnp
and
mov
dec
xor
xchg
dec
enter
lcall
fbld
add
mov
inc
jnp
xchg
int
and
int
enter
stos
or
mov
jns
ja
outsl
cmp
lock
cli
ficomps
daa
push
clc
and
std
xchg
add
add
out
mov
stc
int
je
fwait
aas
jle
test
ds
mov
out
mov
sbbb
in
push
mov
test
pop
cli
push
xchg
nop
dec
and
and
negl
arpl
frstor
mov
sbb
cmpl
scas
popa
rcr
lds
imul
sbb
iret
int
mov
xchg
jmp
leave
pop
inc
scas
mov
movsl
adc
or
js
sbb
shrl
sub
mov
int
les
adc
loop
xchg
sbb
push
pand
std
sub
dec
cmp
pusha
add
sub
mov
mov
vpunpcklwd
int
or
xlat
mov
push
or
out
pop
xlat
jb
stc
pop
aas
outsb
cltd
mov
sub
sbb
xchg
je
mov
push
adc
cmpsl
ficoms
mov
int
lret
jle
fmuls
or
aaa
in
repz
in
mov
lods
mov
inc
arpl
in
xor
lock
cld
xchg
xor
into
sbb
inc
mov
pusha
roll
xchg
and
mov
pop
sub
mov
xor
adc
nop
rcll
mov
cmp
and
dec
scas
int
mov
iret
cmpsl
inc
push
dec
or
out
mov
jp
jl
and
stos
loope
cmp
xor
out
adc
mov
jo
je
sti
adc
mov
loopne
mov
lret
adc
cmp
cmpsl
push
mov
lds
mov
or
loope
sahf
lods
mov
cltd
test
mov
stos
mov
jb
adcb
fidivl
add
xor
pop
cmp
jecxz
add
pop
mov
nop
sbbl
mov
popa
je
xchg
sti
scas
fadd
push
add
inc
xchg
pop
rcrl
push
popf
sub
int
jbe
enter
push
cli
xlat
add
pop
adc
aad
div
stos
mov
sbb
push
inc
or
push
outsb
pop
xorb
adc
out
push
lds
aas
xchg
and
movsb
pop
repz
mov
iret
cmp
shrb
sub
hlt
aad
fld
dec
pop
sti
add
push
imul
arpl
sub
cmc
les
stos
xchg
jnp
xchg
or
xchg
mov
ljmp
mov
jnp
cmpsl
inc
rcr
sahf
push
addr16
xlat
dec
cmc
ficoms
shlb
inc
add
pop
aad
inc
sbb
mov
or
xlat
test
into
xchg
loope,pt
cld
fsubrl
adc
jl
mov
mov
cmp
dec
mov
jecxz
cmp
add
packsswb
pop
jno
jle
xchg
or
adc
add
into
loopne
shrl
sbb
test
inc
mov
jbe
aaa
bound
jl
or
mov
push
lret
aaa
push
inc
imul
add
insb
adc
pop
adc
movsl
push
push
adc
scas
cltd
loop
mov
lahf
outsl
dec
inc
mov
inc
shll
sbb
ja
leave
movsb
sbb
jg
jb
gs
xchg
or
push
cmp
cmp
xor
sub
fwait
pop
mov
jmp
inc
inc
and
movsl
in
scas
stc
movsb
cs
nop
jae
cmpsl
pop
fs
inc
imull
clc
clc
jae
lret
shlb
push
mov
sahf
lock
inc
iret
daa
stos
loopne
mov
fnstcw
inc
lea
push
push
mov
popf
stos
repz
and
lahf
add
pop
inc
fidivrl
xchg
mov
add
daa
test
pop
sub
or
adc
das
fidivs
dec
push
andl
stos
or
imul
shlb
hlt
pop
jecxz
mov
bound
ret
aas
add
gs
push
aam
outsb
mov
pushf
mov
push
jle
pop
push
out
xor
ds
loope
shlb
mov
push
aas
daa
xchg
scas
ret
shlb
dec
jb
cmp
movsb
inc
subb
or
adc
jns
sub
std
cltd
adcb
leave
mov
lods
pop
mov
std
cmpsl
pop
lcall
pop
insl
push
mov
dec
jae
mov
test
xchg
dec
xchg
mov
adc
cmp
decb
mov
inc
daa
cs
pop
in
gs
jl
ss
mov
sub
movsb
or
push
mov
push
addr16
jp
inc
sub
sahf
mov
enter
cmpsl
push
cmc
cmp
int
mov
fwait
out
fistpll
cmpsb
mov
mov
loop
pop
xchg
mov
adc
imul
xchg
pop
lahf
outsl
rorl
adc
sub
fwait
push
loop
movsb
sbb
mov
push
arpl
rcll
and
mov
mov
cli
add
shrl
or
in
dec
push
mov
rorl
rcl
mov
or
jno
sti
xorb
jno
xorl
sub
std
stc
in
cs
incb
je
cmp
std
cmp
stos
pop
std
pop
call
sub
mov
or
hlt
xorl
sub
clc
mov
inc
inc
shll
jmp
adcb
daa
and
hlt
xchg
mov
int3
rcl
lds
dec
imul
mov
sbb
addr16
int3
xchg
test
int
jmp
imul
mov
lcall
inc
call
and
mov
icebp
xchg
loop
test
rcr
lea
pop
xchg
test
lret
rcrb
pop
fdivrs
fisttpll
jge
or
pop
stos
xchg
leave
movsl
sbb
or
and
pop
popf
sti
pop
lcall
sbb
pop
fcmovne
or
ss
arpl
mov
adc
test
je
or
mov
test
ret
cmp
or
and
add
mov
std
leave
gs
out
lret
loope
inc
lcall
fucomip
les
xor
outsb
inc
jmp
lea
mov
repnz
enter
lret
mov
push
adcl
test
jg
rcrb
push
xor
inc
test
rorl
fdivrs
negl
xor
subb
mov
in
adc
out
test
dec
rorb
pop
insb
push
mov
jg
scas
mov
lahf
add
fmull
in
aad
inc
les
cmp
mov
testl
mov
out
inc
outsl
add
shlb
push
push
mov
inc
xchg
xchg
jno
pop
mov
cmp
mov
jl
jb
mov
cmp
loop
xlat
mov
cmpsl
mov
fs
nop
xor
fsubr
clc
mov
mov
pusha
mov
jae
mov
enter
loopne
pop
sub
inc
sarl
jbe
hlt
inc
mov
cmpsb
mov
les
and
cmpsb
insb
test
repz
lret
test
es
daa
lret
cld
and
icebp
lea
aas
scas
jnp
int
daa
stos
sti
pop
xor
pushf
stos
xor
leave
jne
cld
call
stc
shrl
dec
push
mov
push
icebp
icebp
cwtl
jb
mov
outsl
and
and
fsubl
pop
cmp
add
inc
adc
insb
idivb
rorl
push
xor
jne
das
jns
lahf
das
inc
sub
and
jp
xor
test
inc
das
js
jle
lahf
xchg
pop
adc
ljmp
daa
xor
push
mov
aad
mov
lret
fs
test
lods
mov
andb
xchg
mov
out
out
ret
mov
insb
addb
out
xchg
jb
or
lock
add
mov
xchg
push
pop
ret
jae
push
or
sub
popa
andb
out
outsb
sub
sbb
scas
faddl
push
add
inc
cmp
movsb
es
rclb
sbb
out
cld
cmp
xor
jp
inc
sbb
cmp
mov
adcb
call
xor
sub
rorl
cltd
cmpsb
jg
xor
mov
sbb
add
call
or
mov
out
icebp
cmp
xor
sub
adc
ret
or
push
jbe
mov
cmp
sbb
test
rol
int3
aas
inc
xor
mulb
pop
fidivs
jle
xchg
dec
or
sbb
lods
scas
mov
xchg
cmp
imul
fnstsw
cmc
popa
and
out
add
push
mov
in
xor
xor
movsl
cmp
sbb
jg
data16
out
add
inc
mov
adc
lcall
xor
fwait
push
mov
jmp
int
scas
xchg
sub
cmpsb
pop
cmp
sbbb
sub
pop
pop
aad
xchg
add
test
and
push
in
dec
jecxz
xchg
stc
daa
icebp
daa
jb
fwait
sub
in
xchg
sbb
xor
das
push
pop
adc
sub
outsb
inc
mov
dec
les
shll
test
xor
inc
lcall
push
inc
jp
daa
divb
sub
dec
sbb
push
push
jne
inc
lds
push
cli
and
popa
jg
imul
es
inc
ret
mov
inc
ret
jg
fwait
movsb
or
scas
or
aad
add
xchg
xchg
addb
inc
mov
bound
subl
push
test
mov
out
jge
insb
test
sub
js
mov
jl
mov
xchg
dec
jge
sbb
aad
lcall
pop
push
enter
les
out
movsb
loopne
ss
mov
stc
mov
cmpsl
and
sbb
orb
cmp
push
push
push
mov
mov
xor
loopne
aad
rorb
add
sbb
imul
adc
jnp
ret
and
cmp
lahf
loope
adc
jecxz
clc
out
jo
sub
push
daa
dec
lcall
adc
adc
outsl
jge
mov
cmp
dec
push
sbb
sbb
sub
enter
push
mov
push
xchg
enter
inc
cmp
jo
mov
stc
data16
out
and
pop
fucomp
stc
ret
jbe
and
or
pusha
ss
fisttpll
xor
mov
jno
mov
jl
stos
xchg
mov
mov
xchg
out
lret
insb
xchg
test
inc
dec
pop
out
xchg
push
lods
cmpsb
xchg
mov
mov
xchg
sub
pop
test
imul
aad
xor
sbb
mov
lret
mov
insl
xchg
push
test
leave
stos
ret
fwait
les
mov
dec
ss
mov
ds
lahf
scas
dec
in
inc
outsl
cmpsb
cmp
and
cmpsl
jns
inc
ss
fstpl
sbb
popa
xor
or
test
and
popf
dec
inc
jmp
xor
dec
inc
xchg
jbe
fcoms
mov
dec
and
clc
sbb
pop
cld
or
pop
les
jb
sub
push
or
ds
fildl
jno
dec
and
mov
pop
cwtl
xor
cmp
sub
mov
sub
mov
and
inc
addr16
cmp
adc
nop
jmp
scas
or
cmc
shlb
mov
fnstsw
adc
mov
jb,pt
push
adc
lcall
and
testb
add
fstl
testb
repz
lods
ljmp
jmp
push
add
lahf
cmpsb
adc
push
push
rorb
xor
out
cld
cltd
movsl
repnz
sub
lret
inc
jg
and
push
test
loop
push
add
inc
ret
insl
cmpsl
xchg
inc
pop
ljmp
test
jl
mov
cmp
addr16
ljmp
cmp
or
shll
and
inc
repnz
fildl
pusha
mov
cmpsb
xchg
test
sub
adc
push
cld
adc
repz
scas
xchg
aam
pcmpeqw
jp
or
sub
adc
and
xchg
lods
insb
mov
add
ds
popa
xor
jg
jns
das
sbb
jecxz
loopne
fildll
test
movsb
aas
and
mov
fstpl
imul
dec
xchg
sahf
fiadds
cmpsl
or
push
xor
dec
imul
jecxz
fisttps
inc
pop
sub
push
mov
popa
jecxz
jp
cltd
out
jge
push
dec
or
ds
jbe
inc
fcompl
or
jne
jns
xchg
xchg
int
push
pop
xor
mov
push
jmp
mov
clc
jge
cmp
mov
mov
int
adc
rorb
sbb
pushf
mov
sub
sahf
icebp
pusha
pop
mov
mov
lret
jae
in
jbe
jl
mov
das
sbb
inc
push
adc
lcall
jl
mov
fcmovbe
daa
xchg
cwtl
sbbl
lds
cltd
mov
ret
dec
xchg
movsl
into
pop
dec
push
movsl
lods
bound
es
dec
iret
cli
lahf
enter
add
adc
out
or
cld
int
xorb
or
pop
sub
fstl
pop
fcmovnbe
jg
minps
cmp
or
repnz
ds
sahf
pop
int3
ljmp
nop
addl
push
push
repz
adc
fimull
mov
mov
flds
movsl
js
mov
ss
add
lcall
or
inc
mov
pop
sub
fiaddl
into
aaa
xchg
hlt
mov
shlb
and
std
cmp
pop
test
adc
push
insb
dec
or
or
faddl
lcall
sbb
pop
xchg
ljmp
mov
mov
mov
jns
xchg
cmc
pop
lods
jns
lret
call
or
js
mov
mov
out
pop
inc
jmp
and
fisubs
mov
gs
or
bound
pop
inc
movsl
leave
scas
aad
addr16
push
scas
in
dec
pop
add
loope
adc
sbb
push
nop
shll
xor
imul
inc
orl
jnp
loop
ds
lret
cmpsl
jne
and
xchg
inc
or
nop
xlat
popf
cmp
xchg
popa
mov
mov
loop
ficomps
lahf
adc
pop
cmpb
int
insb
hlt
shll
in
mov
aaa
and
xchg
ljmp
adc
jecxz,pn
in
cld
mov
or
mov
jne
nop
mov
xor
div
cmp
dec
mov
or
cmp
jno
ja
push
in
lds
xorb
rorl
adc
pop
push
xchg
js
dec
or
sub
jecxz
loope
xor
cmp
push
or
aam
in
lods
or
pop
and
mov
filds
mov
pop
mulb
popa
sub
test
adc
fsubl
fmull
add
push
cmpsl
pavgb
test
push
adc
push
jne
out
push
mov
fs
jns
daa
xlat
sahf
xchg
sub
aam
std
scas
mov
dec
and
loope
lds
repz
pop
sarb
rorl
nop
mov
imul
xchg
xor
lods
jbe
jae
cmp
pop
stc
xorb
dec
pop
es
in
pop
les
xor
pop
or
jno
mov
jl
or
pop
inc
mov
sbb
sahf
shl
xor
dec
xchg
xor
xchg
loopne
lods
je
push
inc
adc
adc
cltd
and
cmp
adc
adc
inc
negb
lahf
mov
add
imul
mov
mov
repz
lret
or
adc
dec
pop
mov
jl
push
outsb
jg
jb
cmp
ljmp
jne
xchg
xchg
orb
addr16
repnz
std
icebp
outsl
lds
xchg
push
sbb
cmp
sbb
mov
cmpsb
out
sub
ret
inc
dec
push
addr16
int3
mov
push
in
xchg
movzwl
movsl
push
mov
ja
jne
loop
push
or
mov
ja
inc
mov
xor
push
mov
push
pop
mov
orl
rorl
lock
pushf
jo
fists
andb
rcrb
cmp
push
movsb
ss
push
jb
stos
push
and
cmp
pop
add
inc
push
mov
sahf
pop
out
mov
xor
insb
daa
ret
jg
inc
sub
pop
add
cld
sbb
out
dec
out
jnp
lea
sub
cmp
xlat
outsb
jne
stc
or
jns
dec
loopne
mov
and
adcl
leave
or
nop
lods
pop
mov
xlat
js
push
pop
js
add
dec
mov
and
das
push
adc
lcall
fsubs
xchg
pushf
je
les
or
mov
stc
arpl
and
fdivr
fsubr
data16
shlb
or
lods
movsl
dec
mov
insl
out
loope
pop
and
jno
mov
jb
cmpsb
aam
test
mov
jnp
push
push
dec
cltd
jl
mov
sbb
or
push
jl
shlb
xchg
mov
icebp
dec
cwtl
pop
lock
aaa
or
inc
adc
mov
lret
mov
sub
aam
xchg
pop
inc
lods
dec
xor
inc
cmovne
andl
push
testl
fstpl
ret
mov
mov
cli
les
mov
or
fcmovbe
leave
ficompl
cmc
rcrb
sub
cmp
pop
aas
pop
insl
mov
push
dec
and
jmp
sub
lods
sahf
das
inc
or
xchg
adc
mov
mov
call
roll
cmp
mov
adc
mov
test
cli
ds
decb
das
or
js
movsl
lods
jge
sahf
mov
add
aad
pop
mov
sub
mov
xor
xchg
aas
add
xchg
jb
inc
mov
xchg
in
andb
push
mov
inc
aam
imul
push
mov
es
std
xor
scas
and
pop
mov
fs
arpl
iret
push
popa
pop
ret
mov
xchg
add
icebp
jbe
add
test
or
inc
cltd
jne
cs
in
mov
mov
mov
icebp
inc
scas
cs
in
mov
sub
xchg
insb
aaa
mov
int
shrl
insl
cmp
and
mov
ss
std
dec
incb
xor
mov
into
dec
jg
jb
nop
div
rclb
jbe
or
mov
insl
push
dec
lahf
lods
test
out
scas
das
jg
pop
out
sub
or
xchg
test
dec
ret
fnstcw
pop
ficomps
and
push
push
ret
adc
push
cs
in
inc
repnz
pop
leave
jo,pn
jo
insl
inc
jg
pop
shll
xchg
mov
cmpsl
movsb
jmp
mov
jne
mov
mov
test
sbb
test
pushl
xchg
push
or
bound
and
sbb
insl
fmull
xlat
and
out
sbb
fdivr
cmc
push
inc
inc
cmp
int
inc
push
cwtl
jle
cmc
add
mov
inc
inc
aad
push
imul
shll
add
dec
mov
lods
sarb
jbe
add
add
inc
dec
pop
jp
and
push
xor
mov
jmp
add
sbb
gs
bound
fsub
js
mov
ret
bound
mulb
or
loopne
jp
icebp
and
adc
mov
push
stc
mov
lods
call
xor
pop
cmp
repz
push
lret
adc
sub
sarb
sub
cmp
fsubp
leave
in
xchg
faddl
iret
repz
adc
inc
adc
fmulp
das
aaa
movsb
inc
stc
inc
scas
or
mov
jno
xor
xor
or
faddl
cmp
cs
nop
add
shll
pop
cmp
frstor
sbbb
inc
shl
fdivl
std
mov
hlt
in
je
ljmp
out
sub
mov
stos
stc
inc
sub
mov
imul
imul
outsb
fsts
add
pop
mov
pop
pop
push
imul
push
or
fcmovb
xorb
fisubs
mov
sbb
jns
lods
xchg
dec
dec
cmp
lahf
adc
lahf
scas
mov
stos
mov
sbb
push
pop
cs
pop
rolb
lds
push
or
xchg
lret
loop
dec
or
lods
cltd
das
mov
scas
cmp
adc
sbb
sub
out
or
repz
or
mov
mov
mov
xor
mov
mov
sub
ja
and
loopne
lock
je
loope
shlb
jge
xor
lods
xor
xchg
mov
pop
addl
push
arpl
pop
mov
sbb
out
aaa
mov
mov
xor
xchg
andb
test
or
jnp
xchg
mov
xchg
xor
lods
movsb
fwait
mov
mov
das
push
repnz
push
fidivl
psrlq
lock
push
aas
xchg
aad
lret
xchg
into
pop
ss
jbe
nop
jno
test
lahf
stc
ja
mov
cmpsl
pop
push
cmp
xor
rcl
popa
sbb
rolb
add
adc
pop
mov
mov
add
sarb
sbb
out
nop
mov
mov
mov
repz
inc
jg
push
sarl
xchg
lahf
fdivp
inc
dec
mov
inc
jmp
mov
arpl
fs
in
lcall
sub
fldenv
ficomps
aam
rclb
mov
add
fnstsw
ret
jecxz
sti
push
outsl
and
adc
insb
movsb
in
out
aaa
insb
das
sti
int
scas
int
dec
mov
xor
and
js
push
mov
jns
popa
lock
fdivrs
mov
je
lret
push
bound
cmpsb
stos
loop
inc
push
rcll
cs
pop
mov
rcl
maskmovq
mull
mov
fdivrl
ds
xor
scas
cmp
jnp
fcompl
in
and
push
into
add
add
dec
mov
jo
bound
frstor
jmp
cs
call
pop
in
fwait
xchg
xor
xchg
movsb
popl
out
mov
in
enter
xlat
xor
mov
fstpl
or
sbb
mov
dec
test
push
dec
sub
jns
push
ds
lods
mov
sbb
paddb
mov
pop
loope
cli
sbb
pusha
fwait
pop
push
lcall
pop
push
dec
dec
adc
mov
mov
pop
lods
xlat
jb
pop
rcrb
add
iret
jle
icebp
cmpsb
out
mov
push
xchg
or
or
fists
dec
and
push
clc
or
inc
add
addb
clc
add
loop
es
sub
and
push
adc
jbe
mov
cwtl
fcomp
or
mov
xchg
fs
inc
int
push
pop
mov
pop
jp
cmc
outsl
cmc
fcmovnb
and
ja
fldt
outsb
sub
adc
outsb
jmp
insb
jmp
adc
cmp
or
outsl
out
inc
mov
inc
sbbb
xchg
lahf
popf
push
pop
sbbl
push
pop
adc
sahf
cltd
ja
mov
in
cmp
scas
push
pop
ja
test
ja
mov
das
sti
stos
inc
aam
lret
pop
add
mov
insb
outsl
sub
mov
push
sbb
mov
jle
mov
dec
jns
pushf
stos
push
in
imul
es
lret
int3
mov
and
pop
icebp
dec
mov
jg
mov
lcall
stos
in
sbb
inc
mov
lret
fwait
or
or
xchg
lea
cmc
mov
add
ficoms
outsl
cmp
test
pop
mov
bound
pop
pop
or
inc
cwtl
loopne
push
daa
mov
bound
inc
sub
mov
sub
lret
fidivl
mov
cmpsl
xchg
das
stc
movsl
cmp
lods
dec
jecxz
ljmp
mov
mov
mov
mov
sarl
push
adc
imul
and
xchg
repnz
shll
ljmp
sbb
jae
shl
lods
loop
and
mov
sbb
lret
bound
add
adc
roll
mov
cs
pushf
popa
sub
rorl
or
loop
mov
cwtl
int
pop
pop
outsl
sub
fcomp
jl
add
push
lcall
imul
xlat
loop
jne
es
insl
int
popa
pop
movsb
mov
hlt
lahf
dec
or
adc
fidivs
cli
cwtl
lret
mov
jns
cmp
and
xor
lods
mov
insb
repnz
fiaddl
cld
in
mov
add
inc
into
adc
mov
pop
std
mov
xor
sub
outsb
pushl
cmp
xlat
or
lock
push
out
jg
mov
pop
jbe
cs
int
cmp
cmp
mov
fsubrp
loop
inc
sti
mov
mov
mov
cltd
ss
xor
or
pusha
fildll
and
sub
addr16
movsb
mov
jg
push
adc
jmp
or
hlt
lret
sarl
or
push
lcall
and
inc
mov
ja
xor
aas
leave
jno
pop
fsubrl
popl
dec
dec
out
cmp
inc
xlat
cmp
or
pushl
dec
jl
es
sub
mov
iret
jmp
imul
rcr
push
insb
cltd
xchg
mov
mov
sub
jge
mov
movsl
fcomps
add
pop
jge
sarb
out
mov
add
dec
sub
insb
inc
imul
cwtl
sbb
adc
push
in
hlt
or
jae
dec
vcvttps2dq
xchg
xchg
jg
mov
mov
xlat
cld
mov
add
cli
mov
bnd
pop
xchg
or
adc
gs
or
lahf
popa
pop
ljmp
bnd
sub
adc
mov
pop
sahf
push
in
cmc
mov
imul
daa
scas
jg
mov
cmp
cld
negl
push
fiadds
pop
pop
dec
aaa
pop
fmuls
xor
scas
xchg
mov
cmpsl
dec
mov
out
push
ss
adc
xor
outsb
xchg
inc
pop
xor
data16
es
loope,pn
inc
stos
mov
xor
jmp
jne
adc
rol
andl
jno
ror
int3
cmpsb
les
in
aas
push
nop
pxor
nop
cmp
sbb
stc
iret
insl
and
jp
adc
aas
jb
pop
cmc
pushf
in
insl
jns
mov
and
outsb
insl
nop
test
pushf
mov
aas
sub
push
mov
mov
cmp
inc
out
fbld
std
jnp
mov
in
adc
icebp
add
jmp
rcrl
dec
and
es
shlb
xor
xchg
shll
inc
xor
push
and
xor
mov
sbb
test
pop
xchg
mov
inc
mov
dec
cmp
icebp
fisubrs
cwtl
xchg
fs
or
pop
add
cmp
pusha
cmp
test
pusha
dec
and
add
mov
out
push
push
out
ret
mov
ret
leave
lret
ds
js
xchg
add
fisttps
and
loop
inc
add
nop
test
inc
das
out
fldcw
sahf
mov
mov
jno
dec
push
movsl
push
fnstcw
dec
jb
add
cmc
adc
loopne
inc
int3
cmp
or
xor
jle
out
lcall
cli
dec
jnp
mov
jp
int
pop
lahf
or
enter
sbb
cwtl
mov
icebp
sbb
pop
ja
std
in
sbb
xchg
sbb
packuswb
mov
stos
and
xchg
cli
ret
jo
insl
cld
sahf
dec
outsl
sti
or
dec
test
xor
nop
les
fidivs
std
rorb
sub
add
imul
stos
pop
nop
and
lret
xor
enter
fdivrp
std
cmp
aaa
call
std
leave
enter
mov
push
rcr
movsb
xchg
jae
pop
jecxz
repnz
add
arpl
mov
arpl
mov
bound
pusha
xor
mov
adc
out
mov
popf
pop
test
mov
jo
inc
outsl
lods
bound
imulb
sahf
nop
dec
pop
inc
insb
mov
push
xor
jl
dec
adc
pop
fcoml
mov
or
lea
inc
and
dec
mov
xchg
daa
cmp
popf
fildl
aaa
xor
repnz
int3
je
inc
pop
movsl
dec
or
in
addb
faddl
fiaddl
sub
cltd
shl
imul
cld
sub
in
and
adc
push
andl
xchg
fneni(8087
test
adc
mov
aas
xor
mov
sbb
mov
ja
xchg
sub
test
rcrl
loopne
mov
lds
push
sbb
and
or
nop
out
out
push
cmpsl
je
jb
aam
push
jge
sub
and
test
repz
pop
ficoms
inc
bnd
out
rcrl
adc
sahf
pop
push
jne
ret
jle
or
and
or
cltd
xchg
sub
imul
leave
cltd
xlat
repz
sti
daa
pop
popf
inc
add
mov
call
mov
or
mov
pusha
in
fadd
jp
mov
mov
mov
xchg
push
mov
mov
test
loop
pop
out
pop
movsl
and
mov
cli
or
int
inc
fadds
and
or
pop
mov
outsb
mov
add
cmp
sbb
add
loop
jl
cmc
cmp
andb
dec
icebp
add
and
adc
es
shll
subb
sahf
pop
push
in
push
jl
mov
js
mov
sub
jae
sub
jg
in
pop
ds
fmull
enter
push
pop
mov
ss
stos
lret
add
repz
jae
fdiv
cmc
fidivrl
mov
jg
mov
sarb
sub
jnp
das
sub
mov
xorl
pop
orb
ret
pop
inc
mov
pop
in
mov
sahf
mov
inc
out
pop
jmp
and
enter
in
cmpsl
idivl
aas
fldz
push
mov
imul
hlt
or
sarb
xchg
add
cwtl
xor
popl
jg
sub
dec
in
add
mov
lcall
fnstcw
sbb
das
stos
loopne
cmc
push
loope
and
push
add
mov
adc
lcall
fbstp
bound
xchg
ret
pop
int3
aad
es
cwtl
inc
negb
jmp
fistps
movsb
dec
outsl
and
bound
dec
fcomp
sarl
mov
leave
loop
sbb
mov
movsl
cmp
fidivs
bound
pop
mov
mov
pusha
inc
pushf
jne
mov
ds
push
cs
and
xchg
gs
inc
lods
call
sbb
jl
cmc
xor
sub
cltd
add
das
aam
dec
pop
cmpsl
jbe
xlat
out
ret
mov
jle
mov
outsb
in
adc
sbb
adc
mov
daa
lock
push
xchg
ficoms
fs
gs
ljmp
test
sbb
jecxz
fsubl
lret
push
and
je
lret
push
mov
mov
dec
jp
push
fwait
cmp
mov
daa
sbb
testb
call
das
cmp
sub
xorb
int3
lcall
pop
jecxz
subl
mov
jle
adc
xor
outsb
test
push
cmc
imul
sbb
inc
push
mov
sbb
dec
in
xorb
out
xchg
mov
mov
or
into
shlb
jb
in
cmpsb
lret
ss
aad
roll
arpl
cmp
sar
mov
sbb
addr16
test
fiadds
icebp
xor
and
gs
xor
andl
pop
aad
fxch
mov
std
xor
aad
xchg
push
nop
push
lret
cmovp
and
outsl
ja
faddl
test
push
ja
xor
cmpsl
fldcw
insl
les
xchg
xor
and
inc
leave
mov
sbb
scas
dec
mov
mov
pusha
pop
sub
cltd
shll
dec
mov
aaa
test
cmp
scas
adc
stos
rclb
mov
xor
test
and
fldl2e
out
rcrl
cmpb
in
pop
pop
fdivp
xchg
cld
cmp
mov
dec
pop
testb
dec
pop
in
mov
cmc
lahf
test
enter
out
inc
ret
pop
sarl
leave
movsl
jle
pop
inc
push
pop
sub
xorps
in
push
mov
xchg
fmuls
jne
jge
dec
cmp
xor
aad
ret
add
xor
inc
mov
adc
rclb
add
bnd
jnp
xor
les
or
push
lea
mov
push
push
in
cwtl
and
push
push
mov
shll
mov
mov
cmp
jo
pop
xchg
sub
pop
fistps
push
xchg
ret
jae
cmp
xchg
xorl
cmp
dec
je
in
ljmp
ss
fsubrl
push
push
sbb
or
xorl
in
cmpsb
insb
mov
and
mov
mov
jnp
enter
inc
xor
mov
cmp
and
pop
dec
adc
inc
push
addr16
sub
add
insb
dec
xchg
jecxz
jmp
dec
inc
test
faddl
shrb
push
cld
mov
jae
push
das
js
mov
mov
sub
mov
pop
xlat
popf
aaa
mov
lret
loop
mov
adc
lret
mov
jns
pop
aam
push
test
adc
xor
lock
xor
dec
inc
cwtl
enter
mov
lods
test
ljmp
psllw
data16
push
inc
ret
lea
lret
stc
jmp
mov
ds
out
sub
pop
les
cwtl
shrl
stc
pop
lods
xchg
push
cmpsb
jl
shl
jbe
adc
or
dec
ret
or
shlb
stos
dec
int3
ficoml
shl
rcrl
push
sbb
xchg
sbb
int
add
ljmp
mov
cmc
add
movsb
and
fldt
mov
add
xor
in
jb
test
fs
or
mov
xchg
lods
je
xor
or
mov
shr
mov
in
adc
push
cmp
cmp
repz
sbb
or
ja
movsb
jge
lret
jae
push
sarb
sbbl
sbb
outsb
int3
xor
scas
cmpsb
and
jo
add
arpl
lock
out
sti
push
lahf
mov
ds
add
addl
pmullw
or
sbb
lods
mov
pop
and
dec
push
repnz
sub
dec
sbb
scas
and
add
cmp
mov
mov
jno
mov
cmpsl
nop
xchg
scas
push
fwait
inc
mov
pop
xorl
jne
jo
jmp
adc
dec
test
cli
push
aam
add
inc
js
aad
push
add
scas
sub
mov
imul
or
cltd
pop
xchg
or
push
in
arpl
test
cmpsl
fs
std
mov
cmc
mov
xchg
cmp
xchg
cmp
cmp
lret
mov
inc
fdivrs
sub
cmp
loop
xchg
icebp
lods
dec
scas
jo
xlat
inc
rclb
in
or
xor
xor
fucom
loopne
ja
int
mov
cmp
xchg
je
iret
jb
sbb
and
movsl
lcall
dec
mov
test
sub
xor
jbe
es
shlb
outsb
call
daa
insb
ret
push
lahf
xchg
fsubp
jg
int
dec
jp
push
cmpsl
xor
ds
push
jge
mov
repnz
cmp
fwait
mov
cli
insl
dec
pushw
or
mov
cmpsb
add
cmp
data16
push
ds
cmp
lcall
sub
inc
add
jecxz
stos
jae
test
mov
fxch
push
fsubrl
ffreep
scas
pushf
inc
inc
mov
jp
pop
adc
int
add
inc
in
shr
inc
scas
push
jg
add
pop
or
cltd
mov
dec
pop
ljmp
mov
push
lret
mulb
xor
arpl
addr16
xor
or
xchg
mov
jp
cmp
cmp
mov
xchg
or
and
mov
cmp
shlb
push
cmp
fbld
shlb
insb
fwait
pop
sub
sub
fdivs
ret
sub
sbb
sbb
insb
sub
outsb
lcall
test
cld
mov
daa
add
outsl
lcall
jno
dec
or
add
push
jecxz
sub
dec
mov
lar
std
mov
mov
fstpl
inc
mov
mov
xor
lahf
sbb
dec
xor
loope
add
pop
cs
inc
add
mov
xchg
mov
sti
mov
test
mov
mov
je
xor
sbb
jb
push
mov
mov
enter
adc
stos
test
cmc
in
mov
cmp
and
push
or
push
ret
fs
lret
call
addl
ret
pop
cmp
xchg
pop
add
lds
test
push
sbb
mov
jo
and
mov
dec
test
xor
insb
mov
gs
and
repz
sbb
lret
sti
arpl
jge
or
iret
call
mov
lock
jmp
lret
xchg
and
rolb
decb
out
mov
ljmp
lret
jno
pop
push
test
jno
outsl
fdivrp
pop
jbe
xor
push
loop
adc
adc
jnp
mov
sti
sbb
or
add
jb
sub
sti
sub
mov
jbe
pop
lea
sbb
es
mov
cmp
inc
push
push
aad
jns
or
pop
into
mov
hlt
mov
push
ret
imul
std
in
stc
mov
push
imul
fisttps
subb
pop
movsb
rcrl
mov
ss
and
stc
insb
in
jmp
mov
or
push
mov
jo
xlat
movsb
mov
cmp
jnp
repz
pop
pop
stos
push
outsl
jmp
add
adc
push
sub
jge
loopne
shrb
mov
push
or
je
push
fmul
push
mov
cld
rep
rcll
fcoms
cltd
popf
mov
jbe
out
movsb
jecxz
xchg
ss
mov
insl
in
arpl
xor
shll
leave
ds
jno
dec
popl
je
pop
push
std
mov
iret
clc
sbb
or
lret
sbb
andb
sti
xchg
mov
mov
pop
aaa
test
pop
cld
inc
xchg
mov
pop
xchg
rcll
popa
jbe
stos
and
icebp
adc
mov
popf
mov
fstl
scas
test
push
daa
test
and
pop
lock
or
inc
dec
and
adc
fs
jbe
repnz
sub
pop
mov
jl
cmp
cli
pop
shll
pop
jg
xchg
dec
push
mov
mov
lock
pop
dec
inc
pop
sbb
std
loop
mov
test
xchg
jmp
adc
test
adc
cs
sbb
sub
push
lcall
roll
lret
fidivl
hlt
pop
cmc
ret
jb
push
js
ja
add
mov
cs
cmpl
lods
jo
dec
inc
mov
aam
movsb
mov
js
push
xchg
add
out
clc
es
cmp
mov
cmp
xor
cmp
fs
stos
call
push
add
dec
test
sarl
cmpl
clc
jno
loopne
mov
inc
fldl
push
and
push
ljmp
pop
mov
lods
add
mov
xor
stc
cli
xor
insb
imul
pop
lods
xor
dec
inc
subb
push
ret
test
mov
mov
test
mov
cld
pop
sbb
or
cmc
fdivrp
sbb
mov
scas
push
xchg
and
outsl
mov
or
int3
dec
loopne
cmp
xor
jge
in
icebp
xchg
add
adc
push
adc
insb
fistpll
xchg
sub
lock
mov
cmp
das
jmp
xor
fidivl
mov
adc
pop
es
add
cmp
sub
jmp
sub
push
xchg
cmp
outsl
lret
and
jns
xlat
pop
add
add
in
push
inc
adc
in
jecxz
mov
dec
xchg
mov
rolb
mov
mov
sbb
les
adc
mov
insl
mov
and
rcr
mov
sbb
mov
or
cmpsl
rcl
in
movntq
jns
dec
jno
mov
sbb
or
arpl
stos
hlt
nop
jp
adc
fs
hlt
in
jno
into
aaa
pop
pop
aas
and
arpl
pusha
jp
adc
cmp
les
out
cmpsl
rolb
in
in
gs
or
mov
dec
push
fcmovnbe
mov
and
loopne
fs
out
jmp
add
dec
loop
adc
and
gs
fwait
aad
xchg
cmp
push
ds
outsb
sub
loop
sub
add
ret
inc
stc
out
mov
lock
insb
ret
jp
xchg
leave
sub
int
dec
and
dec
sti
pop
cs
test
and
xchg
dec
mov
mov
sbb
cmpsb
punpcklbw
and
mov
xlat
adc
cmp
in
cmc
fstpt
cmc
mov
xchg
loopne
iret
inc
aaa
push
stos
test
xchg
test
push
subl
fimuls
fcmovu
je
test
scas
or
loope
mov
and
pop
or
popf
xor
mov
out
or
sub
and
jp
pop
lods
fidivl
xchg
lods
repz
lds
jp
push
jmp
cmovl
loope
mov
pop
cmp
jno
pushf
and
lods
push
pop
test
into
outsl
mov
pop
cltd
leave
test
sbb
aam
sarb
outsl
dec
jg
insb
push
leave
sbb
cli
fidivrs
or
adc
mov
in
rorb
lea
xchg
mov
mov
outsb
lcall
cmp
stos
lret
push
jl
mov
mov
shl
sub
xchg
sbb
fwait
mov
imul
push
pop
sub
jo
mov
std
dec
or
adc
outsb
cmp
jb
lret
gs
add
fwait
fs
xchg
aam
cmp
and
insb
pop
inc
lret
pop
cmp
dec
inc
cs
mov
xor
add
mov
leave
scas
pop
incl
scas
cltd
imul
sbb
mov
add
lcall
adc
addl
lock
adc
sbb
mov
stc
cwtl
stos
insl
push
jp
cmp
push
mov
dec
cmpsb
jl
int
adc
push
cmpsl
cmpsb
repnz
push
iret
dec
scas
xlat
mov
mov
and
inc
ret
ds
stc
pop
cld
out
sub
add
cwtl
decl
pop
inc
loop
push
lods
jmp
mov
mov
lock
fcmovnbe
pop
pusha
andb
lahf
xchg
outsl
test
mov
insb
adc
and
inc
or
icebp
push
test
cmp
repnz
dec
push
dec
inc
rclb
sbb
fs
shrb
sbb
mov
inc
add
cmp
fnstsw
xchg
and
dec
jmp
enter
push
out
into
sbb
push
outsl
xchg
and
xor
push
ret
mov
out
mov
test
hlt
mov
lcall
out
aad
jg
push
imulb
and
lds
sbb
sti
push
jb
js
pop
xchg
in
or
aas
add
cmp
je
das
jno
dec
push
sub
in
cmpsl
xor
jp
dec
jl
es
pop
pop
or
xlat
xchg
xor
dec
mov
popa
lret
pop
mov
mov
scas
in
test
in
sbb
enter
adc
mov
xchg
push
repz
or
inc
fmulp
add
stos
jmp
mov
and
pop
cld
rorl
xor
dec
xor
inc
push
xchg
std
imul
pushf
movsb
loop
fadd
repz
cmp
inc
shll
push
pop
insl
jo
call
js
dec
sbb
xlat
pop
repnz
ret
lods
pop
lock
ret
dec
mov
mov
call
lods
xor
rcr
and
and
pop
test
add
fbstp
and
mov
xor
test
iret
xchg
lahf
push
add
mov
stos
mov
ret
lds
out
sti
into
sub
inc
cltd
fidivrl
rorb
sub
cmpsb
stc
jmp
mov
stos
mov
aas
shrl
cmpsb
dec
jl
subl
cmp
push
xchg
pop
sub
mov
dec
fstpt
hlt
pop
scas
jns
cmp
cmc
pusha
or
sub
add
mov
xor
xor
jns
mov
jmp
adc
mov
shll
dec
mov
pop
sbb
in
sbb
test
and
pop
adc
mov
mov
jmp
psrlw
je
push
pop
cltd
add
sub
push
jae
add
cmpsl
jb
das
sbb
nop
push
out
mov
mov
lods
jbe
aam
out
sub
push
loope
xchg
rcrl
push
out
add
jno
push
mov
inc
mov
mov
movsl
push
aad
in
cmpsb
cmpsl
and
mov
les
cmp
int3
int
push
ja
jl
cld
leave
mov
add
mov
out
inc
mov
mov
outsl
jg
and
mov
push
push
mov
or
mov
or
mov
rcrb
mov
lret
push
outsl
adc
out
aad
push
xor
cmp
outsb
xchg
int3
shl
rcl
or
les
jo
adc
movsl
mov
push
ret
cli
imul
nop
mov
add
and
jmp
imul
pop
xchg
mov
sbb
aad
xchg
mov
or
jo
adc
jge
mov
bound
inc
cli
pop
mov
pop
stc
or
dec
imul
mov
xlat
jge
mov
xchg
sub
cltd
ds
int3
test
ja
out
nop
jge
cmpsl
sbb
inc
stos
aad
addr16
ljmp
pop
mov
sti
mov
ss
add
cltd
inc
inc
ss
fs
adc
mov
aad
pop
fdivl
push
push
ret
jno
jmp
add
or
filds
cli
mov
pop
inc
xlat
mov
pushf
adc
outsl
jns
out
jnp
and
call
mov
inc
push
test
pop
cmp
cmp
in
cmp
mov
nop
shl
mov
addr16
or
push
sub
notl
rolb
dec
dec
push
jns
push
les
je
repz
or
add
push
test
cmp
mov
insl
aaa
das
cld
xor
hlt
js
jno
aam
movsl
pop
xchg
xor
inc
xchg
mov
idivl
xor
stos
push
or
mov
or
cmp
insl
mov
xchg
lds
and
call
pusha
addr16
outsl
idiv
movsl
jnp
in
cmp
insb
aas
mull
aas
insb
negl
ror
mov
imul
test
jbe
js
test
xchg
pop
in
adc
imul
inc
ret
sbb
pop
insl
shll
imul
inc
jae
mov
push
xor
jnp
dec
or
popf
jmp
pop
cmc
insb
pushf
push
and
inc
cmp
insb
sub
loope
and
cmp
xor
iret
gs
and
and
jp
aad
nop
push
loope
push
sarl
mov
dec
mov
aam
xchg
fucomip
mov
push
mov
or
sub
cmp
pop
dec
add
pop
stos
jmp
push
push
fadds
mov
mov
inc
imul
or
jp
xchg
lea
scas
icebp
mov
xor
dec
dec
push
out
mov
or
adc
inc
add
push
stc
fs
nop
repnz
and
div
xor
push
les
jmp
call
mov
adc
int3
push
xor
ja
fistps
fwait
sub
lods
call
inc
adc
pop
cmp
fs
lret
inc
push
mov
mov
lcall
adc
xchg
cld
into
fcompl
jg
inc
dec
in
adc
ficompl
outsb
ficomps
popa
or
sbb
imul
lret
xchg
inc
sbb
pop
in
add
cmpsb
and
pusha
shll
mov
cmc
adc
fdivrl
enter
mov
fsubrs
scas
sbb
sbb
sub
inc
and
gs
lea
enter
cwtl
sbb
xchg
popa
dec
and
sti
sub
data16
arpl
push
and
xor
pop
mul
xchg
push
mov
outsl
leave
jle
lock
loop
notl
fisttpll
fcomi
and
fiadds
cmp
pusha
popf
xor
enter
push
mov
testl
sbb
xchg
clc
lock
or
notb
mov
roll
or
push
lret
outsl
in
jmp
pop
ds
push
mov
scas
imul
mov
push
sub
inc
xchg
int
lock
mov
jmp
push
orl
repz
rorb
mov
and
push
inc
xchg
test
xor
xor
stos
push
cmp
sub
add
adc
mov
jae
dec
out
loopne
ljmp
sbb
leave
xor
add
mov
xor
test
lahf
loopne
cmpsl
add
sbb
mov
pop
loopne
mov
imul
int3
mov
pop
fs
cmp
sbb
sub
push
jg
or
mov
cmp
movsb
dec
dec
subb
clc
pop
subl
cltd
mov
iret
cs
fistl
mov
cwtl
mov
inc
fstl
jns
mov
lods
lahf
int
mov
int
xor
jne
data16
cmc
stc
imul
in
sbb
leave
pushf
out
mov
push
add
lock
fmul
jne
xor
arpl
pop
icebp
cmpsl
dec
jno
shrb
cmc
mov
or
sahf
jmp
jns
cmp
pop
fsubrl
dec
dec
in
mov
lret
ljmp
in
lds
out
and
sub
sti
jno
ja
std
scas
mov
test
roll
lods
push
std
push
in
addl
pop
fisubrl
imul
pushf
sti
dec
movsl
pop
lret
mov
sahf
addl
out
and
push
push
inc
cmc
in
dec
icebp
iret
sarb
cmpsl
arpl
jno
push
test
add
adc
lret
xor
and
push
stos
mov
lret
fsubl
mov
ja
xchg
cmp
popa
or
addr16
out
sub
popa
mov
push
xchg
sahf
adc
fnstcw
inc
mov
loopne
mov
ja
pushf
pop
cmp
pop
cmp
out
gs
arpl
xchg
jne
repz
add
lahf
jmp
cmpsl
sub
add
arpl
adc
jnp
inc
inc
sub
xchg
pop
mov
adc
pop
sbbb
incb
pop
cmpsl
in
movsl
pop
adc
inc
push
in
inc
adc
mov
pushf
lahf
add
sub
inc
movb
iret
push
xor
and
push
fwait
in
in
sarb
loopne
xor
in
hlt
sti
jecxz
pop
es
out
fisubs
out
ret
testl
ret
jle
stc
lcall
cmpsl
setns
movsb
xor
sub
cmp
loope
xlat
mov
xchg
std
leave
cmpsl
fdivrl
fldt
dec
cltd
xlat
xchg
stos
pop
pop
ret
pushf
jg
data16
cmp
jle
clc
test
inc
stc
mov
push
jo
or
fidivrl
and
and
fnstenv
xchg
daa
nop
lds
mov
mov
in
sub
push
jle
mov
inc
mov
rep
sbb
pusha
dec
mov
das
mov
shll
inc
stc
out
and
add
popl
stc
push
pop
cmp
popfw
ret
mov
shrl
outsb
push
cmc
fs
rorb
and
lea
cmp
push
xor
mov
dec
fcos
insl
push
sbb
in
add
orb
test
clc
xchg
flds
or
mov
pmaddwd
mov
mov
arpl
loope
imul
orl
cmovg
pop
loopne
adc
cmp
shrb
add
scas
inc
pop
in
cltd
inc
fdivl
dec
mov
es
enter
fstpt
jg
test
mov
mov
ret
xlat
xchg
add
pop
icebp
adcw
orl
cmp
popa
sbb
xchg
mov
mov
dec
test
jo
xchg
and
add
adc
fwait
or
add
xchg
test
sub
mov
in
adc
jmp
fwait
mov
and
jns
inc
notl
fmuls
lock
js
push
pop
xchg
mov
stos
test
fdivs
lods
test
push
lcall
and
sub
adc
push
or
fwait
mov
push
inc
mov
add
bound
repz
mov
fiadds
adc
test
push
lahf
mov
hlt
outsb
xor
xor
xchg
idivb
cs
into
lock
cmc
push
enter
xor
sub
push
xchg
jne
or
popa
xchg
lret
std
jo
sub
test
movsl
and
in
cmc
push
jb
in
jne
xor
jb
lea
sbb
mov
push
mov
adc
mov
dec
xlat
xchg
cmovp
mov
daa
sub
cmp
hlt
push
aad
cmp
aam
pop
scas
xchg
roll
rcrl
mov
inc
mov
mov
daa
and
dec
inc
fdivp
inc
push
test
mov
je
in
add
arpl
push
lds
inc
or
pop
lcall
mov
xlat
mov
inc
push
out
lock
pop
and
std
es
dec
ljmp
jge
mov
fisubrs
and
push
xor
arpl
data16
cmp
pop
sub
scas
mov
lods
sub
mov
call
jo
test
fwait
pop
dec
pop
outsb
jo
out
and
test
outsb
add
popl
incl
sub
dec
stos
popa
bound
fnsave
popf
fcmovu
pop
jge
mov
push
stos
push
adc
mov
push
jno
add
inc
orb
xchg
arpl
fidivrs
repz
orl
push
or
sbb
cmp
fadds
fiadds
inc
pop
ror
js
cmp
dec
inc
or
outsb
xor
sub
xchg
cli
jle
shrl
into
adc
fiaddl
or
lds
fst
into
dec
jno
cmp
adc
or
scas
pop
cld
aaa
jb
mov
pop
je
or
inc
test
lock
sub
jne
pusha
dec
xchg
pop
out
xor
cli
sub
xchg
ljmp
jno
jg
inc
mov
jmp
stos
adc
add
inc
adc
mov
jb
ret
out
out
je
int
dec
lea
fwait
xlat
pop
mov
inc
mov
jge
adc
xchg
fcoml
cs
aad
addb
js
add
sbb
movsb
xor
hlt
in
or
pop
lods
andl
jns
dec
sti
adc
xchg
insb
jecxz
test
dec
push
out
mov
cs
lret
push
lea
dec
fwait
sub
movsb
rcrb
fadds
dec
movsb
mov
xor
pop
xchg
cld
es
subb
xor
hlt
sbb
add
insl
push
pop
lahf
sbb
orb
clc
xor
cli
add
add
stc
in
add
outsb
stos
out
je
stc
mov
xchg
xchg
sub
mov
mov
data16
repz
call
inc
xchg
mov
add
sbb
repz
mov
out
mov
or
xchg
inc
cltd
movsl
faddl
and
push
push
in
cmp
lret
and
in
sub
push
jp
ret
cltd
mov
aaa
shr
lea
jae
sbb
cmp
cmp
inc
lock
add
int
cwtl
dec
sub
mov
into
jmp
movsl
xor
aas
mov
sti
jle
imul
push
negb
mov
adc
outsl
and
cmpsl
dec
in
rcrl
stc
aaa
xor
push
nop
test
jle
mov
popf
adc
outsl
jmp
outsl
aaa
ss
popf
inc
push
and
push
lahf
iret
xchg
test
ja
push
notl
inc
and
jno
jmp
pop
mov
es
inc
cmpsl
fdiv
pushl
scas
in
cmpsb
repnz
dec
cmp
pop
lods
jge
inc
test
xlat
fidivrl
sbb
inc
or
aam
inc
push
jp
pop
push
inc
aam
xchg
lds
daa
test
sbb
xchg
push
lret
lcall
je
mov
inc
jbe
inc
ja
mov
outsb
movl
stos
jg
jp
jae
jl
mov
pop
scas
mov
sub
mov
aam
fsubr
adc
sub
fsts
mov
js
je
inc
mov
sub
add
aas
pop
shrl
mov
adc
lret
test
dec
xchg
add
adc
dec
imul
push
dec
mov
es
push
scas
mov
mov
lret
insl
adc
mov
mov
fcomi
cmp
inc
bound
sbb
xor
scas
iret
fsub
jno
popa
les
xchg
repnz
mov
inc
inc
add
jge
fucom
in
xchg
push
pushf
push
mov
data16
daa
jp
and
adc
mov
add
cs
or
dec
sbb
dec
xchg
ljmp
push
enter
dec
das
sub
jmp
xorb
mov
lock
incb
push
sub
jp
sub
lock
ja
jae
cmp
inc
jp
jecxz
sub
aad
push
and
jp
test
xlat
sub
pop
add
sbb
push
gs
icebp
adc
mov
cli
xor
movsl
bsf
fwait
sub
push
pop
icebp
hlt
int3
cld
and
inc
testb
adc
hlt
loope
mov
int
loope
addr16
iret
stos
subl
add
or
xchg
cmpb
inc
mov
data16
test
loope
pop
insb
push
cwtl
fbld
mov
js
or
cmp
xchg
int
bound
fcomps
sub
inc
push
lahf
cmc
jg
in
inc
cmp
xchg
push
inc
pop
mov
ror
pop
and
sbb
inc
mov
dec
cmpl
insl
das
js
and
xchg
out
xor
xor
out
xlat
xchg
inc
xor
mov
loopne
inc
movsl
dec
mov
xchg
mov
outsl
ret
mov
lock
ret
push
les
mov
dec
or
iret
lods
jnp
dec
mov
arpl
int
popa
ja
and
mov
ret
xlat
ljmp
mov
out
cwtl
cmp
iret
movsl
jbe
je
dec
xchg
pop
sbb
pop
loope
sahf
dec
push
push
cmp
sarl
insl
std
in
add
fisubrl
xlat
jae
push
shrb
xchg
into
inc
cli
pushf
mov
jb
dec
or
out
and
mov
cli
jle
test
lea
mov
dec
sub
fwait
lock
xorl
adc
cmp
mov
push
cmc
inc
mov
lahf
or
dec
jl
cs
leave
in
pop
push
lret
insb
jne
sti
cmp
pop
push
insb
jmp
repnz
xor
dec
push
sub
ficoms
adcb
out
mov
jo
mov
test
and
adc
jp
jne
or
bswap
imul
addb
inc
dec
push
iret
cmp
sahf
into
xor
and
and
fsubs
cmp
aam
xor
adc
mov
das
lret
int
push
repnz
insb
push
add
das
ret
mov
mov
roll
xchg
sub
sbb
jbe
fstpl
stc
nop
mov
psubusb
cmp
jmp
xor
stos
pop
test
lock
push
jae
lret
dec
or
adc
pushf
outsl
js
add
jb
mov
rorl
cmp
jb
iret
or
mov
icebp
xchg
or
icebp
jne
and
lahf
mov
sub
fcmovnu
cmp
mov
cltd
in
enter
mov
pop
push
mov
xchg
or
js
mov
cmpsb
cmc
cmc
xor
ret
mov
iret
in
add
xchg
dec
ljmp
mov
or
ljmp
stos
and
push
mov
push
jmp
jg
inc
fisubrl
aad
hlt
inc
pminub
adc
gs
xlat
or
sti
xor
sbb
mov
out
mov
subb
hlt
sub
nop
xchg
std
inc
je
stos
das
cwtl
fcoml
xchg
nop
pop
aad
into
mov
jmp
jle
subb
ljmp
inc
fs
aam
pop
cmp
fidivl
es
popa
dec
aad
aad
inc
ja
push
enter
dec
in
ret
mov
adc
push
or
std
icebp
jmp
stos
push
xchg
dec
sub
dec
and
xchg
out
stos
cmp
ja
sbb
xchg
fcmovnb
dec
icebp
jl
add
mov
dec
push
lcall
je
sbb
xchg
or
clc
jl
out
xchg
mulb
mov
mov
hlt
nop
addl
xchg
inc
addr16
pop
lcall
mov
mov
lea
xchg
lds
aad
pop
stos
je
jl
mov
pop
jmp
scas
inc
sbb
mov
jnp
lods
lods
addb
cmp
ror
clc
iret
push
mov
mov
adc
push
dec
lahf
and
jnp
stos
mov
iret
inc
add
cmp
mov
inc
cmp
cmp
sub
div
sbb
add
aam
mov
or
xchg
jecxz
cmp
cli
outsl
mov
cld
xchg
pushf
pop
push
push
out
and
sbb
adc
and
xor
dec
pop
sbb
cmp
jle
ljmp
ss
push
test
ret
push
xor
xor
clc
shl
mov
inc
push
fs
or
jmp
sub
nop
aas
xlat
mov
inc
jmp
lret
or
movb
jne
inc
add
negb
jne
rolb
pop
adc
lret
xchg
imul
jge
out
xchg
insl
daa
add
push
or
push
insb
es
jne
xor
mov
js
or
cmp
enter
cmc
cld
dec
repnz
stos
fmuls
xchg
push
leave
cmp
jl
xor
pop
in
sub
xor
fwait
push
jle
daa
push
js
or
lahf
sub
push
pop
pop
in
xchg
mov
sahf
ret
xor
sbb
dec
cmpsb
push
test
xchg
shr
pop
fsubrl
push
sbb
mov
aaa
inc
pop
rol
enter
xor
mov
xchg
mov
fsubrs
mov
pop
stc
addr16
mov
insb
arpl
pop
into
jmp
cltd
mov
mov
lods
test
push
adc
pop
sbb
out
adc
out
xchg
lods
adc
and
inc
or
into
cwtl
and
add
xchg
outsl
cmc
cmp
daa
fiadds
or
subb
push
add
cmp
and
mov
ret
popf
push
pop
out
pop
sbb
filds
clc
adc
mov
sub
outsb
adc
into
mov
das
das
jmp
rorl
xor
pop
setns
jno
pusha
pusha
or
jo
fisubs
sub
pop
ret
sub
enter
loop
arpl
mov
je
outsb
shl
rclb
xchg
lahf
lds
jecxz
adc
xor
jb
xchg
fisubrs
sub
fadd
cmp
fs
stos
adc
js
stc
sbb
push
sbb
push
imul
mov
inc
or
arpl
mov
rorb
or
cmp
mov
jo
popa
fldl
div
push
enter
hlt
aad
scas
call
loope
jmp
cmp
cmpsl
rol
pop
nop
and
outsl
adc
ss
mov
out
pop
idivb
jl
cmp
stc
lahf
in
dec
adc
testl
xor
xor
or
popa
hlt
std
xchg
dec
movsl
and
mov
or
cltd
lds
and
push
push
jno
js
aas
mov
notb
push
shlb
or
les
sahf
into
add
std
mov
fisubrl
xchg
sahf
std
ficompl
cld
cmc
and
les
pop
xchg
cmp
lea
sub
das
and
into
and
sbb
push
nop
js
push
xchg
pop
mov
mov
push
pop
lahf
jg
call
sbb
loopne
adc
fcomps
sahf
jo
scas
out
jae
movsb
pop
imul
lods
or
lock
mov
shll
arpl
movsl
xor
adc
std
mov
ja
out
popa
and
cmc
into
arpl
and
jne
or
mov
dec
movsb
mov
inc
push
repz
lea
mov
xchg
xlat
jge
mov
sbb
lcall
pop
pop
lods
cs
pop
push
push
xchg
pop
jae
imul
xor
adc
rclb
loope
mov
fistps
mov
xlat
dec
adc
ret
dec
movsb
cli
cld
add
sbb
or
andb
jge
mov
mov
adc
xor
shld
pusha
sub
sub
ds
das
inc
or
sub
test
test
pop
jo
daa
push
test
sub
jae
mov
mov
or
fbstp
cwtl
sub
inc
lea
mov
comiss
pop
mov
cmp
mov
aas
adc
rorb
mov
xor
xor
das
jecxz
ret
mov
aaa
icebp
pop
jo
push
mov
xchg
adcb
mov
xchg
adc
adc
pop
push
jl
jmp
movsl
loopne
mov
mov
mov
je
jnp
mov
xchg
or
mov
mov
mov
pop
ljmp
nop
jmp
dec
mov
cmp
adc
popa
nop
dec
push
roll
sub
xchg
rcrl
imul
clc
outsb
push
outsl
jmp
mov
stc
add
outsb
inc
mov
aas
pusha
iret
into
sub
jecxz
daa
sti
mov
xchg
inc
out
jl
inc
int3
sbb
xchg
and
push
out
insb
mov
lahf
lea
fldcw
stos
test
lds
mov
adc
sbb
mov
inc
pop
pop
sti
sbb
repnz
adc
adc
and
es
cmp
sbb
lret
xor
dec
popf
xor
data16
inc
pop
insl
test
mov
mov
push
and
sti
dec
push
imul
and
addr16
cmp
nop
inc
xchg
outsb
dec
movsl
lea
stc
sti
mov
cli
test
inc
aam
xchg
arpl
icebp
mov
mov
cmp
rcr
jne
clc
xacquire
rcrb
idivl
sti
in
fistl
imul
xchg
ja
sti
leave
out
fcoml
pop
dec
test
loope
test
xchg
je
hlt
lods
out
ljmp
mov
adc
sbb
decb
in
add
xchg
push
ffreep
push
adc
jae
add
popa
mov
dec
push
insl
inc
fadds
fdivrs
mov
orl
subl
mov
inc
push
test
cmpsl
mov
push
jmp
jnp
inc
push
xchg
push
sbb
jbe
xchg
jo
dec
inc
jb
mov
mov
pop
jle
enter
push
mov
adc
xchg
or
adc
idiv
std
ss
repz
pushf
inc
jae
nop
push
out
inc
je
inc
jecxz
out
xor
and
cmp
mov
scas
dec
push
push
shlb
nop
mov
jne
pusha
and
scas
mov
sub
mov
out
sbb
xchg
inc
dec
lcall
mov
xchg
inc
lahf
jmp
sub
sbb
mov
add
shll
push
cld
push
das
stos
sub
push
add
mov
add
push
mov
mov
and
mov
pop
sub
sbb
add
aam
scas
push
and
inc
xor
frstor
repnz
js
ss
scas
cmp
adc
sbb
sbb
and
xchg
int3
inc
inc
inc
mov
and
xchg
mov
or
mov
fiaddl
cmp
lahf
sub
fmulp
add
push
mov
stos
testb
cmp
out
aas
jp
ret
clc
mov
sub
testb
mov
adc
imul
sub
vmulps
and
sbb
andl
mov
push
sbb
fsubrs
in
dec
xchg
and
stos
inc
lds
mov
lret
add
mov
xchg
inc
and
outsl
mov
leave
in
pop
sub
sbb
and
int
int
pop
stc
fbstp
xchg
xor
push
in
jne
arpl
pop
cmp
into
pop
adc
cmp
add
mov
push
fs
xor
xor
jl
filds
mov
cli
or
loop
out
maxps
movsb
or
aad
push
ss
dec
scas
jb
inc
insb
fwait
sub
sbb
jl
mov
pop
jbe
cmpsb
or
sbb
imul
loopne
xor
lods
fsts
adc
xchg
shlb
mov
mov
arpl
xor
lret
dec
jg
je
xor
js
xchg
cli
and
inc
sbb
cmc
inc
mov
adc
mov
ljmp
testb
cmp
and
jmp
push
mov
sub
pop
pop
stc
arpl
lods
adc
loopne
and
fimuls
pop
cmp
cmp
popf
push
xor
push
jg
repnz
mov
inc
fisttpll
xlat
in
mov
lcall
jge
scas
aam
and
test
pop
jno
insl
iret
cmp
or
daa
inc
add
cld
fbld
jne
xlat
lods
enter
fimull
xchg
ss
mov
mov
xor
inc
inc
insb
mov
pop
call
or
mov
xchg
fwait
clc
jne
cli
pop
or
hlt
int3
pop
jns
ljmp
xor
jae
mov
scas
dec
sti
repz
dec
call
mov
xor
cld
aad
push
loope
adc
daa
jecxz
cwtl
jb
cwtl
test
push
mov
int3
add
add
push
push
add
or
mov
inc
out
mov
int
scas
lds
mov
shll
mov
xchg
push
mov
subb
dec
push
dec
mov
cld
cmc
mov
lods
sub
pop
push
dec
mov
push
jle
dec
xor
push
sub
lods
les
test
sub
jmp
add
test
jne
in
jb
push
mov
xchg
mov
pop
mov
frstor
mov
lret
inc
sub
std
xor
cmpsl
push
inc
stos
scas
sub
daa
pusha
xlat
loop
rcrl
je
mov
push
sub
mov
sub
jae
xorb
int
movl
decb
or
xchg
stos
mov
pusha
adc
scas
inc
ljmp
jge
sub
mov
mov
stos
inc
cmpsb
cs
mov
pop
shlb
and
sub
icebp
rcr
lds
adc
jg
je
pop
into
or
xchg
or
sub
add
push
in
and
pushf
cmc
mov
les
lahf
xchg
jmp
mov
xor
js
dec
push
mov
mov
cwtl
iret
add
cmp
xorl
mov
dec
test
cmp
sbb
flds
fsubrl
aaa
add
inc
outsl
jp
sbb
dec
cltd
mov
lea
movsb
rcll
and
pop
xchg
inc
andl
or
fiadds
aad
xchg
jae
stos
push
mov
test
cmp
xor
mov
std
stc
in
enter
add
cmp
push
or
dec
mov
mov
insl
jp
mov
enter
lea
dec
daa
pause
pop
xor
bound
or
lahf
add
test
cli
fmull
loope,pn
mov
push
aas
lret
sub
out
or
adc
lahf
xlat
push
pop
jp
mov
out
or
xlat
lret
and
pop
icebp
daa
sbb
mov
xlat
dec
fisttps
push
aaa
in
in
sub
jbe
and
push
lret
mov
int3
iret
mov
sub
inc
lcall
jno
mov
fnsave
cmp
insb
sub
in
pop
mov
jae
out
sahf
push
inc
xchg
xchg
mov
xor
jecxz
jecxz
adc
and
mov
test
add
push
sbbl
rorb
add
hlt
das
and
push
push
faddl
test
mov
jbe
pop
add
add
pop
mov
ss
add
or
rol
mov
cmc
push
or
stc
and
xchg
int
xor
pop
sub
dec
scas
js
ficoml
adc
add
sub
stc
dec
pop
jp
in
xor
jo
jg
xchg
jecxz
enter
mov
sub
push
test
cltd
cmpsb
div
stos
loop
xchg
in
sub
movsl
aaa
shll
mov
adc
sahf
xor
mov
dec
shr
pop
sub
lahf
cmp
mov
repnz
popf
out
cmp
dec
fdivrs
scas
mov
mov
sub
or
rorl
xor
loopne
dec
outsb
mov
jbe
and
inc
rcll
push
je
pop
mov
xor
scas
mov
xchg
mov
ss
inc
scas
data16
and
dec
xchg
pop
addl
jb
inc
loope
pop
pop
cmp
incl
and
mov
daa
cmc
ss
or
mov
outsl
iret
lock
add
sub
adc
ret
orb
adc
insb
push
testb
lds
add
pop
push
xor
jno
cs
stos
cmp
lahf
fcoml
shll
test
pusha
orl
mov
sub
sbbb
rorb
mov
lret
stc
mov
arpl
mov
sub
pop
or
cltd
ret
mov
iret
adc
je
setbe
ljmp
push
jecxz
jecxz
mov
pop
mov
push
cmc
ljmp
pop
jmp
pop
jo
gs
outsb
hlt
test
faddl
sbb
fisubrl
fiaddl
imul
loop
icebp
daa
sub
movsl
out
sbb
outsl
adc
mov
pop
add
stc
stos
pop
repnz
out
cmp
out
dec
repz
cs
jnp
push
sahf
ret
iret
das
inc
xor
adc
repz
inc
fisttpll
mov
lods
adc
jp
push
sub
lds
enter
loope
cs
mov
mov
cmp
mov
bound
sbb
sahf
mov
add
mov
xchg
imull
aas
pop
dec
pop
mov
lret
das
push
iret
jnp
je
pushf
mov
into
fbld
jle
pop
fstl
fldl
dec
call
mov
pop
xchg
adc
pop
adc
out
shlb
inc
cltd
data16
xor
roll
inc
mov
js
xor
into
scas
pushf
addl
mov
cmp
fildll
rorl
jge
pop
pop
mov
scas
rcr
in
nop
jne
lahf
mov
pop
fldz
imul
aaa
sub
popf
adc
jnp
or
test
popf
cmp
cmp
xchg
add
ja
xor
or
xchg
sbb
mov
dec
xchg
dec
mov
and
jg
loope
mov
das
imul
mulb
adc
pop
cmp
je
clc
test
sub
dec
cmc
pop
mov
sbb
jle
add
aas
cld
fs
xchg
pop
stc
inc
ja
fcmovbe
pusha
mov
or
out
lcall
mov
xor
and
inc
ret
mov
sbb
inc
sub
popf
loope
sahf
mov
in
fdivl
mov
add
mov
fistl
jp
cs
popa
add
test
movsl
sub
in
lahf
imul
or
inc
out
cs
or
pop
cltd
and
clc
push
dec
nop
loopne
incb
mov
sbb
scas
push
stos
mov
pop
mov
sub
sti
xchg
sbb
xor
fmull
aam
out
xchg
jmp
sub
movsl
sarl
cmc
mov
pop
mov
mov
pop
pop
imul
jge
mov
xlat
jge
mov
mov
inc
dec
ja
cmp
xchg
aad
nop
xchg
gs
or
or
adc
jmp
leave
je
std
mov
mov
fdivl
dec
sub
loope
jae
and
scas
push
popa
inc
lret
test
clc
into
pop
jmp
in
cli
aas
xchg
xor
clc
push
ror
jb
dec
shrl
dec
xor
or
or
loopne
xchg
xchg
push
out
xor
shll
adc
or
add
shl
xchg
mov
sub
mov
jge
clc
mov
iret
push
pop
push
add
add
dec
lds
mov
cmp
pop
pcmpgtd
sub
cmpsl
adc
shlb
jle
jbe
adc
fldenv
daa
shl
sbb
and
fists
sbb
in
jne
cmp
xchg
les
popf
std
test
ret
ret
daa
sub
sub
and
in
dec
fs
mov
idivl
push
mov
fs
xchg
jbe
inc
nop
loope
xchg
xchg
je
adc
lret
out
ljmp
aaa
sbb
or
push
andl
pusha
into
pop
xchg
ljmp
out
das
int
lahf
xor
sbb
aam
mov
sbb
pop
punpckldq
fidivrl
hlt
cld
or
adc
rcll
mov
push
pop
push
test
in
sahf
mov
push
shl
pop
pusha
aad
dec
or
insb
ljmp
mov
or
push
shlb
mov
daa
cs
or
inc
jnp
jnp
inc
outsb
sbb
les
xor
pmaxub
mov
mov
add
shld
into
dec
scas
test
movsl
mov
jmp
mov
stc
jnp
insb
mov
mov
mov
inc
enter
ss
sbb
aas
pop
cltd
jecxz
cmc
cmc
rcl
pop
fistpl
push
das
adc
adc
ja
add
mov
notl
mov
mov
mov
inc
add
cmp
lds
nop
add
mov
jge
cmc
cmpsb
cs
or
in
push
xor
les
sub
in
dec
dec
les
outsl
sub
test
dec
ja
aas
jmp
ret
add
icebp
push
stos
addb
push
push
xchg
sbb
nop
aas
jb
repnz
pop
sub
jae
addr16
mov
xor
std
les
cmpsb
fdivrl
pop
cmpsb
jns
mov
inc
cs
mov
lock
cmp
dec
cmp
sub
mov
stos
pop
hlt
shll
stos
ljmp
adc
enter
or
std
subl
or
xor
lods
pop
popa
lods
mov
mov
popf
xor
imull
inc
scas
fwait
mov
insl
shrl
ljmp
mov
sbb
or
out
cmpb
test
pop
push
xchg
cmp
ljmp
movsb
imul
out
or
clc
push
sahf
xor
cs
sbb
mov
lret
pushf
bound
sub
lods
adc
outsl
out
out
dec
inc
dec
add
bound
sarl
movsb
dec
inc
pop
lods
mov
rcrb
mov
pop
ss
ret
ret
pop
ret
cli
jle
in
popl
jmp
roll
scas
divl
adc
cmp
inc
lods
mov
test
adc
sbb
mov
add
icebp
push
mov
cmpsl
scas
cld
sbb
mov
adcb
outsb
mov
cli
jmp
jmp
xor
das
rcrl
or
adc
dec
in
cmp
scas
fwait
leave
call
adc
out
jge
pop
pop
inc
stos
loop
sarl
decl
cmp
loop
xor
cmpsl
ljmp
cli
push
adc
pop
pushl
adc
sbb
ss
pushf
aam
sbbb
cmp
jmp
pop
xor
fiaddl
dec
ss
movsl
pop
and
push
jle
xlat
add
sbb
sub
xor
enter
jae
push
dec
pop
shlb
mov
dec
jne
insb
les
sbb
xchg
mov
push
lods
shrb
lock
ljmp
pop
adc
divb
shlb
outsl
mov
inc
dec
sbb
xchg
in
dec
popf
gs
cmp
negl
push
int3
ljmp
add
js
jmp
xchg
jb
push
mov
sti
pop
adc
push
sbbl
jae
add
inc
xchg
scas
mov
fistl
ja
xchg
fs
test
xor
add
or
cld
mov
pop
inc
ja
in
adc
mov
cltd
arpl
xor
enter
xor
cmp
scas
icebp
xor
push
or
test
jg
xchg
xor
out
cmc
out
dec
mov
mov
std
mov
das
sub
inc
call
xchg
dec
inc
mov
roll
cltd
repnz
push
shll
inc
out
push
inc
repz
or
test
aam
mov
sub
sbb
loope
mov
imul
sub
mov
sti
mov
pusha
into
test
fistpll
pop
daa
cmp
mov
mov
jmp
stc
imul
fistl
mov
imul
aaa
pop
ficompl
scas
mov
cs
inc
rcl
aam
js
je
mov
mov
loopne
pushf
xor
cmp
push
repnz
iret
out
repnz
push
in
push
pop
push
jmp
cld
pop
imul
test
and
pop
xchg
cmpsl
adc
icebp
inc
jle
sbb
jns
sub
inc
sar
icebp
and
into
and
push
mov
jge
mov
xchg
pop
insl
nop
adc
sub
xor
negb
outsl
aaa
mov
mov
enter
or
repnz
fstps
mov
xchg
dec
fs
cmpb
pop
xchg
push
outsl
mov
es
lods
mov
xchg
mov
cld
stos
inc
cli
scas
test
cmp
adc
iret
inc
outsl
push
jno
das
sarl
push
leave
push
bound
adc
adc
stc
inc
jne
fstpt
dec
in
mov
rdtsc
icebp
jae
xor
mov
jmp
aas
push
into
and
clc
push
inc
das
xchg
lods
ljmp
mov
decl
xchg
xlat
fildll
pop
int3
push
push
imul
out
cmpsl
enter
jecxz
test
pop
inc
call
and
and
sub
stos
fldt
xchg
inc
iret
arpl
shrl
add
mov
push
and
shlb
cmpsl
incl
es
mov
lcall
mov
and
mov
fs
jecxz
out
loopne
call
mov
cli
cmp
in
dec
sub
aas
imul
add
mov
jb
add
mov
ljmp
mov
popf
test
cmp
jbe
push
fs
xchg
mov
and
out
pop
addl
ja
and
in
out
xchg
jl
sub
nop
cmp
stc
push
inc
jmp
dec
and
lret
jmp
push
cmp
loope
faddp
dec
fistps
loope
out
mov
aad
push
aas
in
enter
fwait
rorb
pop
lahf
arpl
leave
popf
and
dec
shrl
mov
xor
and
add
mov
fdivrs
std
sbb
pop
arpl
mov
push
jle
inc
lret
shlb
fcomps
loope
je
push
mov
xchg
push
xlat
sbb
adc
sti
cwtl
add
hlt
cmpb
cmova
in
mov
xchg
and
ja
lahf
jecxz
xchg
mov
cmp
repnz
or
jmp
mov
jbe
xlat
rcll
iret
shr
and
test
shll
jmp
sbb
mov
stos
and
pop
xchg
sti
pop
shrl
jl
pop
outsb
sar
mov
test
xchg
lods
lahf
adc
adc
sub
je
xor
and
mov
cmp
pop
in
mov
sbb
scas
cmp
mov
loop
jmp
hlt
jmp
in
or
pop
data16
ss
sahf
add
movsb
ss
cmp
add
mov
or
pop
sahf
iret
lds
loop
aam
mov
dec
in
jns
sub
sti
jle
hlt
ss
scas
dec
push
push
sarb
xor
add
mov
test
rorl
sbb
mov
mov
scas
aaa
mov
es
cmp
test
ja
dec
fidivrl
hlt
imulb
ja
iret
dec
pop
inc
mov
mov
push
push
and
sbb
push
add
lcall
xor
stos
cwtl
push
sbb
xchg
add
pop
pop
test
sahf
inc
sti
xchg
inc
xlat
lret
pop
cli
jecxz
loope
das
dec
cmpsb
ja
fiadds
leave
cmp
mov
rorl
xchg
mov
sbb
cld
imul
push
xchg
fldenv
pop
mov
ds
or
hlt
mov
cmp
es
imul
xchg
lds
cltd
jmp
inc
int3
fidivl
test
cmpb
dec
outsl
loop
mov
inc
pop
dec
pusha
cmp
xchg
push
je
pop
push
ss
mov
fstpl
mov
sbb
jnp
daa
dec
xchg
out
outsb
xchg
dec
sbb
fistpl
das
dec
xchg
push
cmp
ja
lcall
scas
sbb
push
or
loope
sar
mov
movsl
imul
test
test
sbb
iret
adc
cmp
jne
and
je
pop
inc
adc
xor
rcrl
test
push
loop
inc
out
mov
xor
xor
cmc
inc
imul
aam
loope
stos
ror
sarl
mov
jb
pop
gs
mov
data16
pop
mov
rclb
fs
mov
push
les
and
out
add
xor
movsb
mov
call
in
push
std
lock
adc
int
int
cltd
jge
insl
ljmp
adc
mov
div
push
lcall
js
iret
cmp
lret
sub
xchg
imul
leave
sahf
inc
push
add
cs
rorb
xchg
jno
jp
fldt
sbb
mov
pop
lcall
add
or
cmp
outsl
gs
enter
cmp
add
fiaddl
inc
pop
addr16
inc
test
jo
arpl
enter
movsb
test
fprem
inc
jl
divl
mov
jne
pop
pop
lcall
adc
in
jbe
lcall
cmpsb
leave
cltd
insl
mov
enter
ret
lcall
adc
xlat
int
xrelease
stos
out
jl
sbb
mov
cmc
das
gs
xchg
pop
cwtl
das
imul
outsl
mulb
mov
sbb
inc
out
fs
cltd
loop
aas
or
dec
lock
dec
frstpm(287
jbe
sbb
xor
lret
mov
mov
loope
mov
jno
add
adc
pop
mov
shl
out
cmp
jb
scas
push
xchg
xchg
sbb
nop
xchg
shlb
sti
mov
inc
outsb
push
sub
pop
mov
or
pop
mov
fsubrs
test
cmpsb
and
enter
shl
pop
insb
and
movsb
and
es
jle
mov
repz
push
sub
jecxz
or
lds
sbb
cwtl
add
popf
stc
aaa
inc
inc
lret
inc
add
repnz
push
push
mulb
pop
test
add
xchg
movsb
dec
mov
shl
sti
dec
idivb
int
out
ret
add
insb
xchg
mov
xchg
loopne
mov
scas
shl
insb
add
and
sbb
loop
popf
test
mov
clc
out
shll
sub
and
sub
adc
sbb
or
pop
inc
push
xor
lcall
pusha
ret
dec
push
clc
cmp
xlat
ficoml
cli
mov
ret
daa
insl
ret
mov
adc
inc
in
loop
sbb
fistl
xor
sbb
push
mov
shrb
negb
inc
jecxz
xor
inc
fstpt
test
repnz
aaa
xchg
sub
sbb
icebp
lret
cmp
xchg
mov
insl
push
std
fists
push
or
mov
lahf
sbb
pop
inc
mov
add
adc
mov
testl
inc
sub
sbb
aam
xchg
or
jp
pop
fidivl
mov
ds
and
mov
add
imul
mov
sti
or
sbb
xor
repnz
jl
int
icebp
jns
xor
in
std
mov
ljmp
xchg
jle
fsubrs
fsub
jns
and
addr16
xchg
pop
jno
xchg
and
jne
repnz
mov
jmp
ds
and
ret
cmp
xchg
mov
aas
std
lea
xchg
lods
sarb
cs
cmpsb
pop
fsts
movsb
lock
ds
cmpl
pop
dec
call
ror
mov
incl
daa
and
mov
out
xchg
dec
leave
mov
mov
lea
lds
sub
sub
out
push
and
push
movsb
fbstp
in
inc
mull
add
cmc
cmc
cmp
cmp
ret
lcall
inc
push
sub
aas
jo
pop
sub
stc
aas
imul
pop
dec
fs
mov
dec
mov
sbb
xchg
addb
fiaddl
or
outsl
cltd
sarl
or
jmp
add
loopne
lods
inc
pushl
xchg
dec
adc
xor
pop
cmpsl
push
cli
add
xchg
sub
xchg
pop
mov
subl
insb
adc
cmpsb
inc
es
inc
fsubrl
test
ret
lods
shl
xlat
sbb
pop
in
sbb
or
aad
push
rcrb
testl
adc
cmp
out
lahf
scas
push
shlb
mov
jne
mov
sbb
fwait
lea
pop
je
pop
sub
clc
mov
out
in
scas
cmp
cltd
in
dec
inc
rcrb
fcompl
lea
mov
addr16
xchg
push
sahf
mov
cmp
push
imul
loop
xchg
test
mov
cmc
movsb
icebp
popf
test
mov
mov
or
je
mov
push
xor
addr16
push
insb
push
push
test
jge
lods
enter
jb
mov
adc
nop
mov
jne
lahf
mov
xor
add
movsl
nop
cli
push
dec
fwait
or
andb
mov
hlt
out
xchg
cwtl
jns
cli
push
lea
cmc
adc
jo
cmc
or
and
aaa
fwait
jecxz
adc
pop
mov
shl
sub
mov
and
push
in
test
push
add
in
jl
cmp
cmpsl
aam
mov
lds
outsl
jb
scas
inc
stos
sbbl
xchg
mov
pusha
in
mov
add
pushf
and
outsb
stos
cs
mov
adc
sub
mov
out
push
out
js
xor
out
mul
push
popl
or
fsubs
flds
int
insl
add
mov
jbe
dec
loope
out
and
sbb
jne
clc
aad
and
push
je
ja
xchg
pop
lods
pop
mov
lret
adc
insb
and
push
push
xor
jle
fdivrs
test
mov
xor
leave
iret
lea
sub
sbb
aaa
rcrl
test
loope
mov
in
pop
sbb
or
xchg
into
ss
data16
pop
mov
gs
test
out
test
mov
xchg
insb
jno
push
push
outsb
dec
fxam
xchg
out
in
sub
outsl
enter
inc
inc
pop
sti
pushf
sbb
jge
inc
ja
push
mov
notl
dec
inc
lods
out
and
adc
xchg
insb
aas
adc
sbb
adc
pop
cmp
testl
nop
pop
mov
rolb
cmp
cmp
inc
xchg
pop
or
adc
aaa
pop
in
in
jnp
outsb
fcoms
bound
repnz
mov
mov
adc
mov
fnsave
mov
xor
sbb
pop
xchg
test
xor
daa
xchg
mov
xchg
jnp
inc
in
daa
mov
insb
imul
int
jge
lret
xchg
jg
loope
fistpl
sbb
add
and
sbb
dec
dec
inc
mov
mov
jg
sub
js
push
and
mov
jmp
sbb
outsb
aam
sbb
nop
or
mov
adc
subl
xchg
mov
test
movsl
int
loope
jmp
and
cmp
cli
xor
jge
sbb
adc
xchg
push
pop
scas
and
mov
pop
lret
xchg
xchg
and
out
or
daa
add
xchg
pop
in
push
push
mov
jmp
in
mov
push
push
scas
out
jno
clc
inc
sbb
jecxz
test
lret
sub
push
sbb
ja
fadds
lret
add
mov
add
mull
sbb
fstps
mov
push
sahf
mov
popf
clc
add
ja
movsl
mov
roll
push
pop
cmpsl
mov
cmpsb
and
mov
in
xor
jne
imul
insb
outsl
mov
lock
js
imul
nop
out
fwait
sti
test
insl
sub
popl
imul
jl
jns
shrb
ja
and
mov
and
mov
pop
mov
lods
mov
leave
mov
stos
insl
add
adc
shrb
clc
test
jb
mull
sub
and
push
push
test
xor
cmp
dec
sahf
mov
stos
cmpl
mov
subb
jbe
mov
fldl
lcall
xor
and
shl
scas
xlat
push
jg
push
sarb
les
lods
rcrl
and
jns
jg
shr
lcall
push
gs
hlt
lock
sub
jae
bnd
or
fs
xor
into
into
inc
cmpsb
arpl
movsb
mov
xchg
inc
push
jb
repnz
cmpsb
mov
icebp
push
int3
gs
jb
sti
mull
lret
out
jns
and
loope
incb
test
loope
icebp
jle
and
push
xchg
inc
mov
insb
in
pop
mov
sbb
in
xchg
mov
mov
jne
push
push
pop
xor
jb
push
in
out
sub
loope
mov
enter
test
xor
jno
push
test
sub
mov
int
and
popf
mov
leave
ljmp
stos
stos
pop
nop
mov
dec
inc
jp
out
inc
incl
in
into
mov
icebp
add
stos
add
sbb
outsb
imul
negl
jge
addb
push
jecxz
sub
in
orl
dec
jns
aas
dec
pop
leave
add
cmp
pusha
adc
pop
test
movsl
ret
test
xor
pop
xchg
adc
sbb
dec
add
dec
es
cmp
cmp
scas
lcall
repnz
iret
sub
sbb
bound
movsl
mov
pop
dec
and
sti
jbe
and
sub
jge
push
aaa
xchg
repz
out
and
cmp
shrb
mov
cli
inc
div
xchg
dec
sub
mov
jg
inc
jne
leave
adc
mov
mov
dec
xchg
jae
cmp
test
push
mov
mov
and
dec
xchg
and
fisttpl
push
mov
cmp
sbb
adc
rclb
lods
xchg
jo
mov
cmp
shlb
mov
or
push
sub
push
or
and
jmp
adc
cmp
fldl
mov
mov
sub
sbb
jl
shlb
xlat
jb
mov
xchg
lahf
and
jle
nop
or
int3
repz
iret
mov
sbb
aam
jne
pop
jb
in
fildl
mov
lods
mov
imull
sarl
das
or
add
mov
pop
icebp
xor
add
mov
gs
push
dec
repz
mov
or
loope
dec
ljmp
inc
cld
or
les
jmp
adc
cmp
test
inc
push
xor
push
popf
jecxz
pop
xor
mov
sub
adc
fcmove
imul
sub
jmp
cmp
orl
mov
xor
lea
xor
imul
outsb
cmpl
sub
xlat
in
or
sub
fildl
aam
data16
xchg
ljmp
mov
jl
xchg
fdiv
cmp
xor
push
xor
pop
scas
inc
jg
cli
xchg
in
stos
testb
pop
inc
insb
icebp
pop
push
stos
sub
sub
adc
adc
aad
stc
push
sub
pop
sarb
pop
testb
mov
scas
push
sbb
cltd
mov
jbe
lcall
xlat
add
imul
pop
jmp
dec
mov
es
mov
stos
cmp
inc
ljmp
jns
mov
lods
outsl
push
btr
gs
cwtl
fsubrs
jns
in
fiaddl
cltd
cs
push
repnz
push
addl
and
incl
jbe
jecxz
aaa
mov
test
push
xchg
push
mov
pop
pop
mov
mov
mov
out
shlb
or
pop
pop
test
fmull
jp
daa
add
in
xor
sub
mov
fs
push
cli
xchg
dec
outsb
aad
jnp
inc
sub
mov
push
fstpl
into
lret
cmp
and
jecxz
mov
scas
data16
les
push
fsub
insl
imul
push
lods
xchg
dec
cli
in
inc
mov
cmp
dec
mov
rcl
rclb
push
lods
cltd
lods
jnp
aaa
cltd
inc
adcl
fstpl
imul
dec
xchg
xor
loop
sbb
scas
call
cmpsb
clc
jb
mov
insb
pop
sub
scas
jmp
pop
and
add
dec
cmp
cmpsl
xchg
add
cltd
inc
fnstcw
or
in
cli
mov
stos
dec
scas
movsl
push
and
out
dec
mov
scas
aas
mov
pop
pop
lds
jge
or
mov
pop
sbb
add
sub
xchg
and
inc
jae
add
pop
lcall
cltd
fisubs
movsb
stos
mov
pop
pop
cmp
add
shll
lcall
rolb
nop
mov
mov
jo
inc
jns
inc
cmp
fisttps
cmp
pop
mov
jbe
daa
mov
lea
out
pusha
pop
test
jnp
daa
or
fcoms
repnz
clc
push
mov
sbb
imul
fimull
pop
aas
jns
jo
mov
ljmp
mov
mov
sub
aas
xchg
in
and
jecxz
cmpsb
cld
jno
fldcw
mov
add
pop
fdivs
mov
scas
push
push
sti
je
lds
pop
outsb
shrl
pop
stc
jg
xchg
rorb
pusha
pop
fs
mov
std
inc
xor
outsb
and
mov
or
scas
sbb
sub
add
nop
cld
cmp
xbegin
xchg
xchg
fs
popa
pusha
cwtl
cmp
xchg
cmp
xor
outsl
xor
les
adc
pop
push
fcmovb
fistl
rolb
jns
aas
in
daa
in
jle
sbb
cmc
sbb
in
int
mov
push
mov
psubusb
dec
mov
ss
jns
cli
repz
xchg
mov
fcomip
add
aad
movsl
test
jl
mov
mov
and
pop
leave
xor
fsubr
or
inc
decl
cmp
push
dec
out
pop
sbb
or
pushf
fcomps
push
out
mov
clc
mov
sub
mov
fdivrs
ret
xchg
inc
ret
call
mov
sarb
stos
fdivl
lahf
mov
jmp
imul
mov
pop
mov
jo
jmp
add
push
shr
dec
sub
push
pop
rcll
in
das
pop
mov
mov
push
in
xlat
ss
xor
pop
loop
sub
dec
lods
push
and
xchg
sub
pushaw
add
and
inc
jecxz
push
xor
cmp
js
jns
mov
js
mov
xlat
jb
mov
push
or
mov
push
and
hlt
cmpsb
cmpsl
pushf
pushf
sbb
sbb
mov
test
int3
out
iret
lcall
jge
jmp
add
adc
test
and
adc
sahf
stos
mov
mov
push
in
xchg
loop
adc
movsb
lcall
popf
and
and
sub
and
inc
cs
jo
sub
mov
insl
test
cmc
xor
xlat
enter
push
lods
dec
in
and
inc
xchg
cmc
cmp
xor
jge
pusha
out
aam
or
sti
and
mov
xor
dec
arpl
push
cmp
pop
aaa
jae
jb
xor
mov
fsubl
push
xlat
dec
jge
jo
in
scas
pop
add
stc
xchg
xchg
cmp
jo
lock
push
push
sub
mov
xchg
icebp
cmova
add
out
mov
in
arpl
sub
mov
mov
push
mov
or
dec
xor
sahf
loop
repz
add
adc
shlb
data16
movsb
sub
mov
sbb
jecxz
adc
xchg
arpl
out
out
cmp
movsb
pop
fidivrs
arpl
jns
mov
mov
mov
scas
leave
lret
leave
xorb
out
stos
xor
mov
add
das
dec
insl
jle
out
dec
sbb
je
inc
xchg
jle
pop
popf
cltd
inc
cwtl
adc
mov
xor
out
scas
das
xor
insl
arpl
bsr
arpl
sub
sbb
fdiv
xchg
add
insb
bound
sbb
jge
fisubrs
not
mov
push
inc
push
adc
test
adc
jbe
adc
sbb
jecxz
cltd
jmp
ret
sub
push
push
xchg
jbe
ret
or
inc
out
aaa
push
lret
xor
imul
shr
in
lret
outsl
pop
push
arpl
jg
data16
ret
xchg
lea
enter
fstps
add
mov
popf
xor
pop
add
xor
push
xlat
ret
dec
outsl
in
stos
aaa
sarl
mov
popf
cmpsb
pusha
xor
xor
lahf
inc
outsl
add
in
out
pop
mov
stc
jo
aam
mov
fwait
test
mov
shll
adc
mov
es
test
leave
arpl
and
int
mulps
sub
pusha
mov
imul
pop
mov
sub
popf
aaa
jnp
int3
sbb
test
ret
int3
fcomps
cmp
shrb
jp
mov
idivb
out
add
call
in
sbb
sub
js
or
xlat
out
xlat
mov
clc
xchg
or
cmpsb
jnp
sub
stos
shrl
mov
loopne
mov
or
inc
aam
adc
rcll
lret
test
repz
out
or
and
jle
cmp
jns
push
xchg
xchg
or
ret
mov
inc
adc
cmpsb
stc
xchg
pushf
out
ror
in
stos
jne
nop
pop
xor
das
idivl
mov
in
fiaddl
push
pop
or
push
sbb
mov
cmp
lds
add
dec
nop
loope
test
sti
xor
aas
cmpsb
and
adc
mov
ljmp
sub
xor
pop
cmp
ja
sbb
scas
add
pop
or
pop
cld
lock
test
popf
xor
jl
lcall
push
pop
fwait
mov
or
xor
pop
in
fldl
push
int3
ljmp
xchg
jp
fdivl
or
mov
or
gs
in
shll
insb
sub
inc
sub
mov
icebp
mov
in
mov
rorb
mov
mov
mov
test
int3
cltd
push
jne
jne
dec
sbb
mov
sub
dec
xor
pop
xchg
out
push
mov
stos
cmp
lods
cwtl
jb
mov
add
mov
mov
mov
or
aaa
hlt
js
mov
dec
add
adc
mov
jmp
add
cmpb
push
jp
sub
icebp
fsubrp
popf
stos
sahf
sub
popl
jmp
and
inc
aas
orb
push
xor
and
pop
push
or
fwait
add
or
inc
push
stos
dec
ljmp
sub
dec
call
dec
inc
push
aam
cmp
test
es
pop
push
xor
cs
adc
pop
stc
push
cmp
cmp
cmp
inc
jle
mov
jnp
sub
jb
add
adc
idiv
adc
inc
cmc
xchg
sub
sti
imul
pop
fisubs
push
mov
aas
jns
sti
push
inc
sub
dec
or
data16
pop
fnstenv
add
add
and
xchg
adc
int
push
jge
repnz
loope
xchg
ja
dec
mov
lcall
fists
inc
mov
repz
scas
aam
sub
fs
pop
mov
arpl
lods
shll
fucomi
addr16
fstp
mov
inc
pushf
mov
push
inc
xlat
out
mov
mov
pop
cwtl
in
xor
push
out
push
mov
jb
push
int3
mov
adc
insl
ret
sahf
adcb
sub
lret
cmpsl
mov
test
les
add
dec
dec
sbb
jbe
in
push
popa
or
cltd
daa
push
cmpsb
cmp
lret
pop
fnsave
dec
jnp
shl
and
cmc
call
cmp
and
jne
mulb
mov
in
adc
jo
mov
faddl
inc
sbb
mov
out
push
iret
dec
enter
into
loopne
pop
inc
addr16
cmp
xchg
bound
add
leave
decb
mov
fs
stc
pushf
test
pop
lret
cli
xor
cmp
lods
aaa
pop
lahf
int
repnz
push
pop
mov
sbb
out
shll
enter
pop
jo
mov
out
jo
scas
incb
and
or
scas
pop
and
movsb
push
bound
jae
addr16
mov
push
mov
push
testl
nop
test
ja
push
push
inc
mov
mov
loope
sbb
push
rcl
pop
jmp
cmp
jle
and
push
dec
sahf
xchg
mov
ja
scas
pop
push
jbe
sbb
pushf
js
pop
enter
adc
pop
fisttpl
dec
jmp
push
adc
jae
aaa
pop
and
bound
dec
hlt
sahf
sub
inc
daa
out
pop
lock
pop
imul
shll
fs
gs
outsb
sbb
sti
lock
mov
js
or
lods
cmp
inc
mov
aam
mov
das
mov
push
and
push
push
pop
and
hlt
imul
sub
adc
imul
xchg
pop
aaa
int3
in
adc
push
cld
test
cmc
push
inc
imul
mov
rol
add
adc
mov
xchg
push
outsl
cs
add
ret
insl
insl
fwait
mov
testl
mov
clc
lock
std
ret
scas
mov
repnz
imul
stc
mov
mov
push
pop
daa
in
jl
ja
iret
xchg
cltd
ja
mov
mov
pop
sub
lds
push
pushf
or
pop
scas
fs
mov
push
out
addr16
fsubp
jns
data16
test
sub
mov
sbb
test
icebp
testl
in
xchg
add
xchg
nop
mov
cmp
mov
into
lods
mov
cmp
mov
scas
fiadds
push
ss
imul
mov
jecxz
inc
jb
sbb
dec
jne
xor
mov
dec
sarl
cli
mov
aaa
out
push
enter
xor
add
call
cmp
loop
fisttpl
cmp
xchg
xchg
cmp
subl
inc
xchg
repz
fs
xchg
pop
adcl
mov
jae
jns
ss
jno
and
dec
out
mov
loopne
cmp
jg
dec
push
jbe
scas
lds
mov
cmp
cmp
dec
mov
out
or
popa
shl
js
or
sbb
cli
test
add
mov
push
cmp
negl
and
push
enter
mov
mov
adc
arpl
cmpb
stos
out
sahf
fiadds
xchg
mov
repnz
test
add
lcall
popl
sahf
fs
lods
out
xchg
lods
inc
mov
test
bnd
xchg
push
mov
in
movsl
mov
add
cltd
dec
stos
mov
iret
lea
outsb
adc
add
shll
pusha
rcrl
dec
mov
add
push
jmp
nop
popa
popa
jb
outsb
pop
push
push
loop
scas
xchg
insb
push
lahf
cld
repnz
add
xor
mov
xor
stos
lea
inc
jecxz
enter
mov
cltd
xchg
xor
push
js
clc
xchg
mov
shll
fs
adc
add
sbb
outsb
or
repnz
sbb
sti
push
xchg
pop
sbb
popf
movb
lcall
cmp
xchg
ds
mov
sbb
dec
mov
push
mov
xlat
daa
adc
mov
aas
ja
jle
add
inc
mov
cltd
outsl
cmpsb
fisubrl
movsb
push
pusha
lahf
push
sahf
pop
mov
insl
call
cmp
cmpsb
scas
aaa
push
cmp
mov
test
imul
les
iret
sbb
pop
imul
cmp
mov
std
int
movsb
cmp
fld
ret
mov
mov
popf
lret
push
shlb
sbb
inc
cmpsb
mov
pop
dec
xor
ror
cmp
popa
push
pop
xchg
mov
stos
test
cmp
enter
das
pop
testb
jae
xchg
sbb
shlb
fs
sub
sbb
mov
mov
outsl
xor
int
imul
or
push
cmp
inc
sarb
jp
pop
adc
pop
inc
cmp
xchg
sti
sahf
out
and
xor
clc
adc
mov
dec
dec
adcl
push
cmp
dec
pushf
inc
mov
daa
movsb
test
fwait
shll
jp
fidivl
cltd
aas
sbb
dec
jge
adc
rcl
xor
insb
out
call
inc
mov
cmpsb
or
jno
mov
loopne
push
push
add
ja
pop
inc
lret
mov
loop
mov
popa
daa
inc
inc
icebp
or
cwtl
mov
test
jno
push
mov
and
push
cmpsb
ficompl
gs
inc
cmpsl
mov
stc
adc
jle
mov
jecxz
dec
jmp
aad
shll
jae
and
out
daa
popf
push
jo
les
sbb
or
addr16
dec
repnz
mov
rclb
cmp
in
out
add
bnd
loop
fwait
popa
xchg
xchg
in
movsl
push
repnz
xor
les
pop
int3
cs
push
or
mov
pusha
fisttpl
aad
movsl
inc
sbb
fildl
flds
jno
cmp
aas
and
dec
mov
jle
cmp
ds
paddw
call
jb
mov
push
add
jns
leave
les
dec
mov
imul
push
aas
cmp
insb
push
mov
std
cmp
std
loope
cld
sbb
jno
addr16
or
inc
mov
lods
lcall
lret
and
add
cs
jbe
enter
decb
mov
es
sub
sub
cwtl
xor
xor
sarl
mov
rclb
cmc
push
cld
fcmovu
gs
and
test
and
icebp
pop
out
mov
mov
lahf
pop
aad
dec
rcl
sbb
push
jbe
xor
cld
fnsave
xor
lods
xlat
cmp
call
adc
mov
pop
pop
jl
mov
and
arpl
das
cs
in
inc
adc
push
sahf
push
add
fs
lea
jl
mov
dec
sbb
xor
cmp
adc
arpl
into
pusha
sub
js
jecxz
subb
sub
xor
push
xor
jnp
cmp
insb
jnp
xchg
cs
dec
mov
movsb
sbb
hlt
inc
loopne
pop
scas
clc
and
push
pop
mov
add
lock
les
mov
stos
xchg
sub
iret
imul
repz
xor
jmp
hlt
outsb
sbb
es
call
push
mov
sti
add
daa
adc
jge
sbb
outsl
adc
stos
mov
pop
mov
sahf
or
jnp
sbb
add
insl
xor
ja
mov
mov
cmp
je
mov
imul
mov
xor
jecxz
std
sbb
rorb
roll
ljmp
mov
inc
pusha
push
inc
rcrl
adc
dec
dec
sbb
bswap
jg
pushf
jecxz
ds
sub
stos
imul
js
add
pop
shlb
jmp
add
push
pop
into
into
mov
std
movsl
fsub
repnz
sub
push
in
ret
add
or
jb
push
std
mov
es
insl
cmp
xchg
adc
pop
add
xor
decl
insl
popa
adc
test
inc
daa
fbld
je
popf
xor
xorl
std
mov
and
add
lods
arpl
gs
cmp
add
pop
jl
ret
jno
mov
stc
adc
fldt
loop,pt
enter
in
jb
repnz
jae
sbb
pop
cmp
mov
pusha
or
popf
in
out
ljmp
repnz
push
or
lea
mov
pop
push
stos
sub
sub
fdivrl
scas
dec
daa
xchg
js
xor
sti
fsubrl
mov
mov
mov
mov
arpl
mov
in
scas
mov
dec
out
rolb
pop
push
xchg
inc
pop
jne
jp
inc
adc
pop
aam
sub
add
fisubrs
xchg
or
test
and
movsl
xchg
daa
loope
dec
cmpsb
int3
dec
sahf
push
jge
stc
xchg
jmp
sbb
pop
pop
mov
mov
imul
ja
cltd
xor
xor
inc
and
aam
inc
jge
push
insb
xor
jns
mov
test
lds
je
push
mov
pop
sbb
cmpsl
cmpsb
jg
cmpsl
leave
int
cwtl
lcall
gs
into
testb
xchg
sub
outsl
int
pop
je
xchg
cmp
and
mov
gs
xchg
xor
je
jno
int
xchg
cmp
pop
jbe
mov
sub
and
cli
jmp
out
add
inc
lahf
into
mov
mov
int3
cmp
ret
xlat
aam
loopne
adc
pcmpeqd
xchg
int
mov
xchg
fstpl
mov
call
jl
mov
fmull
lcall
pop
lds
in
push
fists
mov
les
jmp
inc
int3
leave
jecxz
xchg
daa
into
xchg
insl
xor
dec
inc
xorl
lods
mov
mov
movups
xor
push
push
lds
cltd
insb
and
adc
inc
xor
stos
scas
outsl
insl
dec
xchg
mov
jae
data16
mov
mov
subl
adc
in
cmp
imul
call
lock
and
in
push
test
pop
push
inc
jo
fsub
xorl
fidivs
gs
shr
mov
pop
mov
inc
roll
cli
jecxz
and
pushf
pusha
lds
stos
xchg
xchg
or
jb
clc
xor
insl
xchg
mov
test
insl
jbe
adc
lds
lock
in
mov
loope
mov
loope
out
shrb
sub
mov
xchg
add
sbbb
add
shlb
mov
fdivrs
aad
rcr
xor
je
sub
add
lea
or
mov
cmp
mov
jb
inc
in
mov
add
icebp
mov
push
jnp
and
sahf
mov
and
mov
sti
push
and
loope
and
lcall
push
lret
add
in
aad
xchg
imul
mov
push
call
pop
sti
aas
je
inc
xchg
outsb
repz
xor
insl
pop
mov
push
add
loop
bound
add
sbb
aas
scas
ret
mov
jmp
xchg
xchg
jmp
pop
push
sahf
push
push
mov
inc
or
repz
cmc
std
mov
out
push
nop
outsb
std
leave
cli
aas
cmpsl
pop
inc
outsl
mov
ss
into
or
repnz
aam
xchg
xchg
jl
ljmp
mov
jp
mov
aad
mov
fisttpll
dec
adc
jp
sub
in
jmp
push
shl
jno
mov
mov
enter
cmpsb
in
jecxz
xchg
xor
out
add
lods
or
popa
std
jle
push
push
ds
jno
test
mov
pop
mov
adc
lods
jmp
push
lds
mov
and
inc
add
imul
rorb
mov
in
xor
aas
aad
cmp
repz
add
scas
adc
loope
pop
neg
pop
popa
lods
enter
sarb
fistl
dec
pop
repz
imul
sub
call
fldl
mov
jg
add
pop
adc
push
mov
mulb
push
pop
dec
jbe
mov
xlat
daa
push
ror
inc
stc
je
pop
xorl
jns
iret
dec
insb
ljmp
lock
scas
add
cmpsl
int3
arpl
out
dec
pushl
movsb
mul
jns
ret
push
mov
dec
mov
ret
test
test
cli
mov
mov
adc
jle
sti
add
pop
out
cltd
jb
popa
adc
movsl
stos
mov
push
test
jge
popa
pop
mov
fcmovu
out
stc
int
dec
std
xor
test
stos
out
ja
cltd
ljmp
call
in
xchg
pop
out
add
das
add
and
mov
push
in
xor
cmpsl
not
sahf
mov
mov
popf
jl
movsb
cwtl
add
sub
pushf
clc
jle
push
leave
in
lods
mov
pop
inc
sbb
sub
lahf
shlb
stc
arpl
js
shlb
insb
lcall
sbb
js
daa
xlat
jge
cmp
push
add
stc
pop
jle
dec
lea
and
jne
mov
lcall
adc
mov
es
mov
loopne
fstps
add
shlb
push
inc
popa
mov
sbb
loope
inc
movsb
lock
inc
push
pushf
jb
inc
sahf
out
pop
mov
mov
fwait
inc
pop
adc
ljmp
lods
xor
pusha
inc
fisubs
push
mov
xchg
mov
mov
adc
dec
nop
shrb
daa
daa
insb
in
out
movsl
jl
clc
and
hlt
movsb
stos
mov
jb
mov
jo
or
out
pop
xchg
sub
mov
dec
test
xchg
jbe
scas
icebp
push
and
movsb
adcl
scas
ret
mov
cmp
sbb
mov
ja
push
bound
push
mov
xchg
test
xchg
outsl
sbb
pop
sahf
inc
push
rcrl
sti
nop
js
pop
add
push
xchg
cmp
fwait
mov
inc
ds
xchg
cmp
jb
cmp
add
repnz
mov
xorb
or
xor
test
xlat
gs
loopne
sbb
outsb
pop
ret
or
lock
sahf
jle
xor
add
xchg
popf
sub
mov
mov
rolb
fimuls
insb
adc
popl
mov
inc
mov
lea
push
adc
push
fnsave
lds
outsw
dec
inc
sbb
decl
ljmp
jns
xchg
xor
outsb
xchg
repz
dec
inc
inc
push
push
mov
ljmp
scas
adc
inc
mov
mov
loopne
in
iret
popf
ja
fsubrs
sbbl
jecxz
addr16
or
jbe
in
and
xchg
cli
jb
mov
push
xchg
lahf
xchg
and
mov
adc
test
mov
and
repz
nop
xchg
xchg
popa
jb
mov
movsb
inc
jp
xchg
xchg
enter
scas
fs
testl
repnz
adc
sarl
mov
js
inc
inc
stos
fidivs
pop
fwait
push
cld
and
or
hlt
lret
cs
andl
dec
jle
cwtl
adc
xchg
jns
jmp
cmp
pop
int
outsb
add
frstor
cli
xlat
mov
push
add
and
jo
iret
inc
gs
add
mov
push
cmc
xchg
nop
inc
push
push
add
push
nop
sub
pushf
sub
pop
and
cmpsl
mov
xor
pop
jge
popf
push
mov
subb
xchg
outsb
and
and
pop
mov
add
ret
mov
cmp
enter
xchg
das
nop
inc
out
cli
fiaddl
mov
inc
pop
or
sbb
mov
cwtl
or
xchg
jmp
and
xor
push
mov
and
and
mov
add
and
pop
lret
or
enter
shlb
into
xchg
or
idivb
sub
mov
divb
mov
insb
xchg
das
insl
ja
jge
in
cmp
arpl
icebp
inc
ret
aaa
pop
out
dec
inc
jg
and
pop
inc
int3
pop
fmull
sbb
add
call
add
cmp
cltd
push
ja
scas
xlat
adc
push
or
push
mov
mov
aaa
cmpl
rcrb
out
pop
cwtl
in
sbb
mov
stos
dec
cmpsb
insl
movsl
fdivrs
in
fsubs
cltd
push
push
sbb
jno
leave
push
lds
iret
pop
or
and
dec
sub
fnstsw
add
cmp
cmp
sub
fstl
or
dec
stos
repz
fs
loopne
push
addr16
and
sub
xchg
or
mov
push
sub
xor
fstpl
fidivrs
mov
insl
cmp
xchg
cli
jns
pop
ficomps
stc
mov
dec
mov
push
adc
push
stc
jle
aas
xor
xchg
or
pop
dec
mov
xor
cmp
bound
mov
jns,pt
shrb
sbb
inc
dec
js
dec
bound
cmovs
movsb
sbb
sub
add
ss
movsb
test
sub
mov
clc
out
mov
outsl
xor
stc
lods
fstp
mov
adc
mov
pop
jne
or
in
inc
push
push
and
clc
shll
lods
and
jae
push
daa
dec
inc
sub
and
roll
imul
dec
mov
xor
pop
sub
inc
lcall
es
push
jns
mov
and
imul
call
xor
inc
mov
sbb
mov
int
and
in
inc
jns
cmp
mov
repz
in
lret
cmpsb
adc
bnd
xor
mov
dec
aas
xchg
sub
inc
xor
mov
sbb
inc
shlb
xor
subl
jp
shll
loopne
test
add
sub
ljmp
jmp
jb
into
das
adc
pushf
outsl
shrb
mov
data16
lods
mov
dec
jae
mov
push
iret
icebp
mov
ss
inc
outsb
inc
inc
rolb
mov
ficomps
jp
std
mov
sbb
pushf
mov
add
lretw
inc
mov
xor
pop
out
movsb
out
addr16
clc
arpl
sbb
fildl
adc
sbb
xchg
sarb
jo
mov
and
dec
jmp
mov
lea
cmp
sti
enter
pushf
movsb
dec
out
xor
repz
add
int3
xor
mov
lods
xchg
inc
shlb
pop
shlb
rcll
sbb
outsb
cli
mov
outsl
mov
popa
push
add
cmp
lcall
sub
xor
into
pop
mov
fcmovnu
add
outsb
lock
mov
dec
out
fcmove
lds
cmp
push
mov
mov
sbb
mov
testl
mov
cmpsl
or
sbb
call
stos
jg
cli
sbb
mov
mov
clc
int3
push
cli
dec
cmp
mov
int3
std
mov
and
mov
sub
mov
sbb
push
push
xor
and
and
cld
dec
jg
push
loop
jp
ds
jp
cs
fldenv
push
xor
cmp
call
es
clc
sbb
ds
cli
push
ja
fsts
lods
add
gs
sahf
fs
mov
movsl
jge
fdivrl
add
lret
xchg
je
ja
fiadds
iret
and
sub
mov
clc
mov
xor
add
mov
pop
jmp
xor
ds
pop
xchg
add
add
jo
sub
mov
mov
fimuls
call
push
and
mov
mov
jmp
pop
or
mov
addl
mov
lcall
mov
cmp
arpl
jecxz
mov
out
pop
push
xchg
mov
cltd
icebp
add
xchg
or
jge
std
cmpsl
insl
scas
inc
ret
aad
dec
ds
or
pusha
bound
mov
in
lret
test
xor
aad
int3
cld
stos
ljmp
adc
xor
arpl
fldl
mov
loopne
and
mov
mov
loope
cmc
cmpsb
inc
push
pop
ss
pop
aad
cld
cmp
mov
xchg
jl
rclb
and
popf
cmc
mov
sbb
mov
inc
mov
adc
hlt
mov
xor
pop
push
push
pop
dec
int
mov
jo
pop
push
dec
mov
imul
sbb
insl
pusha
xchg
mov
imul
es
pop
shl
jnp
cmp
mov
leave
xchg
dec
mov
repz
pushw
push
mov
ljmp
jmp
mov
push
push
leave
shll
dec
int
test
pop
sub
lea
push
sub
jle
aas
test
mov
dec
adc
push
das
hlt
cmp
inc
fldl2t
inc
aad
mov
mov
xchg
add
call
inc
push
sahf
mov
jge
cmpsl
je
pop
adc
icebp
fnstsw
inc
adc
push
xchg
jno
fcoms
mov
mov
call
popf
add
jno
mov
adc
xorb
out
movsl
or
orl
or
aad
es
sarl
bound
movsb
sub
inc
push
mov
enter
mov
ret
pushf
loopne
movsb
outsl
stc
in
adc
arpl
int
iret
mov
ja
dec
orb
xchg
cmpl
add
call
sbb
mov
pusha
aas
pop
shll
jp
jmp
clc
add
andb
aas
or
fstpl
cmp
call
ljmp
push
or
xlat
insb
mov
repnz
mov
cmp
mov
fdivl
pop
lock
and
sub
pop
mov
push
inc
dec
out
lcall
mov
cmp
inc
inc
mov
fdiv
dec
in
inc
push
in
int
lock
addr16
xor
xchg
push
ficoml
repz
mov
mov
lret
mov
jmpw
stos
sub
xadd
test
and
xor
mov
or
mov
pause
jo
dec
jecxz
lea
dec
jp
or
insb
faddl
jp
sub
loope
pop
mov
mov
cli
pop
xor
pushf
les
sub
scas
mov
cmpl
jne
lods
cmpl
call
mov
and
dec
data16
mov
dec
inc
jecxz
lret
xchg
fsubrl
test
cli
and
fiaddl
lock
push
out
xor
ljmp
divb
repnz
add
jge
push
cmp
nop
xor
and
std
stos
adcl
xchg
mov
adc
aad
movsb
cmp
add
insb
xlat
es
fildll
ds
sti
and
add
and
inc
mov
mov
and
sub
scas
fndisi(8087
outsb
inc
mov
rcl
mov
pop
xor
inc
dec
or
sub
jb
pop
in
inc
inc
fld
mov
mov
rcr
leave
mov
push
pop
push
scas
sub
mov
add
xchg
pop
pop
jl
inc
addr16
sub
loop
mov
or
pop
and
int3
push
repz
aas
sub
dec
pop
mov
jg
imul
hlt
cwtl
adc
mov
push
test
lahf
mov
mov
imul
push
sub
sbb
cmp
pop
loopne
xchg
subb
sbb
insl
adc
iret
cli
or
sub
popf
ret
or
shl
int
add
add
neg
test
jmp
xor
inc
sbb
dec
push
xchg
dec
in
ret
lret
aam
stos
stos
ss
js
sbb
stc
lds
xor
cmp
imul
cmc
pop
or
test
and
mov
scas
xchg
int
andl
adc
cmp
rcll
sub
out
fdivs
mov
push
mov
and
test
sbb
jmp
push
xchg
les
inc
and
loopne
push
ret
mov
fsubs
xor
and
popa
les
pop
ret
xchg
push
data16
pop
addr16
jnp
adc
outsb
inc
fiaddl
inc
pop
sub
xor
out
lahf
or
out
jnp
xchg
out
dec
xor
outsb
jmp
nop
push
inc
cltd
mov
push
mov
mov
hlt
add
sub
pop
int
jo,pn
clc
roll
outsl
outsb
lea
test
cmp
mov
dec
or
xchg
repnz
bound
lcall
xchg
push
push
sahf
jecxz
cli
imul
lret
mov
iret
mov
inc
scas
testb
push
cmp
push
or
sub
shld
lcall
and
adc
sbb
lds
in
inc
aaa
mov
out
test
lret
add
lahf
gs
daa
bound
fbstp
push
add
sub
jns
hlt
xor
leave
and
les
ja
roll
jge
les
xor
inc
jnp
adc
inc
cmc
test
in
inc
mov
aad
xlat
stc
outsb
xadd
xlat
mov
dec
push
outsb
jmp
cmpb
outsb
xchg
dec
inc
les
stc
or
dec
pop
jne
leave
cmpl
or
push
stos
sbb
sbb
loop
fistpll
push
xchg
sbb
in
imul
popf
test
jbe
push
daa
adc
daa
divb
dec
les
push
jo
repz
mov
push
fisttps
hlt
sahf
push
mov
mov
push
or
xchg
stc
fmull
sbb
jnp
push
sbb
cmp
pop
pop
and
cmp
test
mov
dec
cmp
cmp
enter
dec
push
mov
cmp
xor
push
xor
mov
into
push
dec
cmp
loop
aam
pop
mov
mov
mov
jp
jae
inc
lahf
ja
sub
icebp
call
cmp
mov
xchg
inc
and
mov
je
adc
sub
lods
out
stos
push
add
mov
dec
inc
negl
and
sub
rorl
sub
mov
mov
pop
cmpb
mov
mov
inc
push
pop
sub
xor
sub
imul
inc
jno
fs
sub
lret
xchg
sti
mov
jle
push
ss
jbe
sbb
adc
cltd
fistps
xlat
dec
or
pushf
mov
movsl
pop
loop
imul
adc
jp
jb
pop
andb
jo
clc
movsl
mov
sbb
ret
mov
in
scas
lahf
dec
addr16
jbe
sub
cli
or
push
mov
mov
int
loopne
cmp
and
fs
gs
adc
xor
push
mov
lods
mov
pop
imul
mov
adc
xchg
sub
add
loop
mov
call
push
adc
mov
fisubrl
jne
mov
and
arpl
dec
mov
not
mov
scas
dec
clc
mov
int
adc
mov
iret
mov
nop
pop
cmp
sahf
sbb
sbb
ret
cmp
movsb
js
in
out
sahf
mov
fcmovne
ret
mov
mov
jecxz
fwait
cmpsl
dec
shl
pop
xchg
ficoms
rol
mov
jo
dec
pushf
mov
cmp
or
push
mov
xchg
and
dec
jge
inc
call
jne
xchg
push
mov
popf
sahf
test
pop
aam
mov
push
adc
enter
cmp
sub
push
cwtl
sub
adc
jecxz
mov
xchg
inc
cmp
jmp
dec
push
mov
incl
mov
movsb
sbb
push
cmc
xor
cltd
cmpsl
fidivrl
push
outsl
nop
aas
jbe
jp
mov
adc
mov
ds
lret
sub
and
outsb
in
mov
rcr
ljmp
pop
fwait
mov
mov
or
call
inc
cwtl
pop
lea
outsl
mov
cmp
mov
inc
sub
push
cmp
lcall
sbb
aam
imul
jbe
cli
sti
insl
cs
xor
repz
into
aad
mov
lods
mov
dec
jle
xor
inc
xor
jmp
lods
stos
xorb
outsb
inc
sub
shrb
dec
add
or
push
aam
mov
inc
rcr
pop
lods
push
fs
ss
mov
fistpll
lock
or
int3
and
leave
rep
inc
ja
push
arpl
add
pop
sbb
add
repz
xchg
sti
or
testb
pop
movsb
cmpb
out
in
xchg
test
aaa
xchg
mov
movl
mov
add
fisubrs
sbb
mov
rcl
add
into
mov
jns
sbb
jmp
int
leave
out
inc
mulb
jns
cmp
cmp
mov
xor
pop
mov
mov
push
xchg
dec
xchg
scas
daa
jle
inc
dec
xor
mov
dec
lcall
jmp
dec
lcall
outsb
mov
cs
jne
out
in
mov
jl
mov
es
mov
add
push
dec
add
pop
imul
adc
mov
in
mov
test
mov
and
in
hlt
xor
imul
jecxz
xor
adc
jmp
push
nop
push
popf
vfmsub231sd
pop
add
repz
sbb
jl
inc
subb
fbstp
fcompl
shll
lock
lcall
jge
lods
imul
out
lock
inc
mov
jl
mov
mov
je
shrb
pop
sub
mov
enter
jg
sub
data16
cmp
and
jl
jae
ret
hlt
cwtl
and
and
xchg
out
movsl
ret
fiadds
iret
ret
imul
pop
xlat
into
adcl
pop
adc
iret
jge
aas
adc
mov
mov
mov
enter
sbb
sub
and
mov
nop
jne
pop
sbb
xchg
ret
scas
mov
fs
cmp
xchg
jmp
outsl
push
neg
pop
mov
sbb
or
xor
cli
sub
nop
mov
add
pop
mov
int3
js
xchg
daa
mov
jge
and
pop
push
gs
loopne
or
mov
pop
or
leave
into
jnp
outsb
sahf
dec
popf
in
inc
jo
sbb
and
int
das
lcall
loopne
sub
sahf
shrl
rep
lcall
outsb
pushf
repnz
pop
cwtl
dec
xchg
int3
cmp
cmovp
hlt
mov
mov
fistl
cmp
jnp
sbb
adc
push
mov
lret
add
add
cld
pop
adc
or
adc
sbb
sub
lods
pop
test
cmp
pop
mov
adc
or
insl
jmp
dec
xor
adc
std
xchg
lret
fs
inc
xor
out
inc
xchg
int3
nop
inc
or
xchg
loope
and
js
push
call
dec
sbb
add
pop
pop
scas
inc
insb
inc
cmp
addr16
xorb
aaa
rol
xchg
cltd
push
test
push
repz
cmc
and
out
loopne
sti
and
stos
push
test
push
fldcw
add
aaa
mov
ss
add
xchg
sahf
mov
push
inc
stos
hlt
xchg
jmp
add
leave
out
mov
mov
fcoml
bound
cltd
enter
ds
xlat
sbb
fmull
cmpsl
lret
stos
aam
fisubs
lds
fsubrs
jecxz
mov
int3
xlat
cld
and
iret
clc
cwtl
fadd
jmp
fnsave
dec
mov
data16
pop
sbb
cmp
pop
sti
sti
fs
aas
adc
mov
cmp
cwtl
adc
fldenv
push
popa
orb
pop
paddusw
jg
or
xor
or
into
fwait
pop
add
pop
ds
div
mov
mov
pop
push
inc
add
pop
inc
lock
bound
test
shrl
xchg
mov
mov
imul
jmp
or
xlat
out
add
push
popl
push
mov
mov
cmp
imul
jnp
fwait
add
ret
aam
sub
dec
or
or
insb
pushf
out
lea
inc
xchg
mov
rorl
mov
push
sbb
adcl
repz
or
std
jle
loop
mov
arpl
adc
jle
inc
cmpsl
cwtl
jmp
pop
mov
adc
add
jns
adc
imul
push
pop
nop
xchg
aad
jmp
jl
add
mov
add
iret
fwait
push
and
out
cmp
push
mov
sahf
sbb
cmpsl
dec
inc
or
outsb
shlb
rclb
inc
pusha
faddl
sbb
mov
or
dec
mov
mov
jle
xor
fcoms
mov
dec
adc
leave
ljmp
into
dec
jmp
imul
pop
jno
push
test
jo
fs
and
sbb
sbb
ljmp
imul
imul
xor
ret
xor
outsb
ret
stos
sarl
adc
push
and
pop
dec
cmp
lcall
js
adc
add
shlb
adc
xor
sbb
jo
cmp
xchg
lahf
cmp
into
push
push
jecxz
mov
loop
movsb
ficoms
lret
adc
and
cmc
xlat
mov
call
int
aaa
mov
ret
scas
mov
cltd
mov
cmp
cld
test
push
push
fcoml
test
cmpb
mov
and
repnz
or
xchg
jne
xchg
push
pop
dec
hlt
sbb
invlpg
mov
or
in
and
xchg
cmpsl
mov
loope
sti
outsl
inc
adc
or
sbb
nop
out
push
jae
inc
outsb
ljmp
xchg
inc
roll
cli
jns
js
gs
inc
mov
popf
outsl
and
sub
jl
sbbb
mov
bound
and
xchg
and
sbb
jbe
and
repz
pop
cmp
int3
mov
insl
jno
or
pushf
mull
mov
add
in
pop
inc
push
xchg
sub
fistps
lea
faddl
adc
sub
dec
xor
nop
push
dec
push
shlb
cmp
cmp
xor
and
push
dec
outsb
incl
cmpsl
xor
cmpsl
mov
leave
out
adc
fwait
lret
xor
enter
cs
mov
xchg
mov
push
das
loopne
jae
sbb
outsl
divl
push
xor
loop
pop
push
pushf
mov
lcall
pop
or
testl
sahf
sbbl
dec
jo
repnz
cmp
sub
outsb
lahf
adc
movsl
mov
shlb
cmp
iret
lcall
mov
inc
enter
sbb
or
inc
jnp
jg
jp
loopne
sbb
bswap
scas
or
inc
rolb
jno
mov
mov
inc
inc
push
mov
shr
imul
std
sbb
adc
jge
cmpl
mov
sub
push
mov
inc
dec
ret
inc
sub
sbb
fsubs
xor
dec
cmpsb
inc
push
and
mov
jl
mov
movsl
fidivs
mov
xor
mov
and
and
jmp
loop
push
add
mov
mov
lds
xchg
subb
cli
ret
push
mov
mov
and
and
jmp
mov
cmp
or
jmp
jb
push
inc
add
xchg
faddl
imul
movsb
mov
lahf
in
mov
jecxz
sahf
insl
xchg
aam
push
add
mov
fs
xor
loopne
pop
jb
es
and
inc
sub
jmp
notrack
mov
pop
mov
outsb
arpl
jae
mov
pushl
cmp
inc
in
test
and
cmp
sbb
cmp
aad
sub
mov
jns
lods
inc
addr16
leave
hlt
fimull
popf
enter
icebp
loopne
add
mov
add
or
xchg
out
add
lock
inc
xchg
loopne
lcall
mov
mov
lea
ss
or
lds
jmp
push
mov
sbb
inc
mov
mov
arpl
sub
imul
loope
int
mov
and
xchg
or
mov
shl
leave
jmp
and
xchg
ds
mov
or
add
in
test
pop
or
sub
mov
fcoms
popf
ret
fdivl
and
call
xor
lods
mov
inc
sub
dec
xchg
subl
sbb
insl
push
jae
cmp
ror
mov
roll
aas
add
std
adc
jmp
mov
cmp
pushf
mov
je
mov
enter
sbb
xor
mov
lcall
push
pop
int
dec
mov
inc
fldenv
sbb
dec
add
inc
xchg
aam
push
and
sbb
int3
sbbl
jp
out
and
rcll
sbb
inc
aas
nop
cmp
jb
push
pop
mov
aas
mov
sti
arpl
inc
inc
jge
nop
pop
inc
repnz
out
insl
stos
dec
movsl
test
movsl
cmp
shlb
sub
scas
fnstcw
jecxz
cmp
inc
rol
add
into
jno
out
inc
cltd
and
lods
out
dec
fwait
aam
in
pop
sti
leave
hlt
mov
cmc
fcomi
adc
sbb
xchg
fldcw
push
mov
mov
rcrl
leave
out
out
and
test
mov
add
loope
cli
add
mov
roll
inc
mov
imul
fsts
xor
xor
pop
cmpsl
jl
loopne
or
imul
fnstsw
leave
dec
pop
sbb
or
jge
cmc
dec
and
lcall
pushf
sub
mov
pop
enter
arpl
xchg
test
mov
fcmove
sahf
outsl
mov
mov
stos
addl
insl
aam
test
nop
pop
dec
mov
cmp
adc
xchg
ret
xchg
xchg
cmp
pop
das
cmc
inc
sahf
clc
test
cmp
fisubrs
add
xchg
mov
sub
fnsave
out
mov
bound
or
sbb
dec
out
xchg
lods
movb
pop
sbb
dec
inc
push
fsubr
aad
mov
mov
add
repnz
cmpsb
ja
mov
pusha
out
mov
fstps
mov
data16
and
in
rclb
mov
enter
push
je
insl
mov
mov
sbb
mov
mov
cmc
in
push
pusha
cs
cmpsb
insb
out
test
pushf
cmp
fisttpl
imul
popa
inc
jecxz
inc
cmc
and
notb
or
cs
fwait
pop
dec
sbb
push
stos
sub
add
cmp
roll
push
iret
sub
cmpsl
in
lret
jle
adc
sbb
and
and
xchg
cmp
sti
sub
push
and
roll
mov
pusha
hlt
mov
dec
mov
pop
std
das
jmp
xchg
into
ljmp
xchg
mov
jo
lock
pop
fwait
sub
mov
push
stos
jnp
sbb
jmp
test
inc
mov
or
or
dec
mov
inc
and
dec
outsb
jecxz
cmp
or
in
pop
xor
sbb
xchg
dec
sbb
fwait
cs
out
out
rcl
stos
cmpxchg
icebp
lahf
aas
mov
loopne
test
scas
dec
jo
lock
and
jne
mov
push
dec
call
add
sbb
hlt
and
adcl
mov
sbb
ret
lods
pop
aaa
mov
test
cmp
es
decl
std
dec
adc
aas
dec
fsubp
push
je
adc
or
les
out
rclb
rorb
sub
into
or
mov
dec
mov
lcall
movsb
out
dec
push
mov
xchg
push
jns
sbb
xchg
imul
dec
ja
insb
repz
ret
loop
lods
subl
mov
xor
popf
addr16
jmp
or
xchg
push
push
mov
push
pop
xor
cmp
shrb
add
stos
insb
cmp
push
mov
dec
aam
dec
cmp
mov
cwtl
sarb
pop
sub
cmp
push
mov
int
stc
lock
push
xlat
in
sbb
or
decb
jg
jp
sub
outsl
push
ja
push
sar
notl
aas
jns
or
add
xchg
jmp
push
test
in
jp
xchg
pop
adc
cld
cmp
adc
cmp
xchg
jl
or
dec
pop
pop
and
dec
adc
xchg
mov
jle
into
dec
scas
call
xor
rclb
push
mov
divb
clc
imul
lock
dec
outsb
cmpsb
cmp
and
test
mov
stos
inc
aad
mov
subl
mov
mov
insl
cmpsl
jecxz
sub
clc
jne
jmp
push
dec
pop
mov
loopne
ds
cmp
sub
gs
mov
cmp
push
mov
aas
test
push
int3
dec
ljmp
mov
or
dec
push
mov
fs
and
push
lret
scas
jp
shrl
mov
pushf
cmp
xchg
and
sub
push
jge
cmp
cmp
cmp
lcall
enter
loope
popf
lock
call
jmp
scas
in
mov
jae
xlat
mov
pop
hlt
aas
cmp
pop
mov
mov
sub
xchg
sub
rcl
loope
fs
dec
and
lods
add
mov
es
sub
movsb
sbb
sub
mov
sub
add
das
addr16
test
sub
add
sub
adc
and
mov
dec
xchg
andl
inc
sub
out
add
fs
ret
ljmp
or
imul
jnp
test
xchg
int
cmpsl
jl
inc
loopne
inc
fiaddl
mov
xorl
jl
aas
test
ja
jg
sub
sub
mov
fdivrl
pop
aad
push
mov
and
xor
sarb
pop
mov
movsb
cwtl
pushf
call
jns
dec
nop
loopne
test
jge
mov
imul
mov
sti
rorl
fwait
loope
cmpsl
popa
shlb
add
sbb
push
ss
xchg
jb
dec
mov
nop
mov
popf
and
pop
ret
push
stos
lret
jae
mov
dec
aaa
fildl
jecxz
arpl
sbb
or
test
lahf
scas
fiadds
mov
ljmp
xchg
cmp
mov
jmp
mov
test
or
daa
xor
negb
add
cwtl
jge
repz
fwait
iret
sbb
sub
fcmovne
jo
pop
sbbl
test
cmpsl
sbb
movsb
adc
mov
aas
daa
ljmp
push
jl
std
or
inc
lea
pop
push
stos
jo
stos
pop
adc
stc
inc
dec
sbbl
pop
pop
lret
clc
mov
das
dec
dec
ja
mov
mov
outsl
push
push
pop
out
mov
das
pop
iret
in
sbb
mov
cwtl
es
or
inc
hlt
inc
sahf
cwtl
data16
bound
je
mov
pop
in
xchg
fwait
and
cmp
fisubrl
ja
int3
stos
outsb
es
mov
insl
repz
xchg
shl
add
decl
icebp
clc
mov
sbb
add
cltd
loop
clc
cmpsl
sbb
jb
dec
icebp
xor
stos
add
popf
xor
iret
cmpl
add
in
add
cli
int
push
inc
push
sti
dec
fistl
fldcw
lcall
mov
cli
pop
and
or
inc
lret
mov
xor
pop
jbe
int
push
in
xor
cmc
adc
rcl
std
inc
sub
fwait
push
push
pop
xor
addr16
inc
bound
mov
adc
iret
ds
pop
in
add
loop
lahf
xchg
mov
cmp
sarl
lods
mov
daa
inc
pop
dec
dec
pop
fwait
lock
mov
cmc
cmp
xchg
nop
test
daa
pop
ret
inc
or
cld
insb
mov
add
test
loopne
fisttpl
dec
call
fnstsw
jns
push
fistpll
mov
int
xchg
inc
fisubrs
xor
cmp
cmp
lock
scas
add
mov
es
adc
out
mov
iret
loop
das
dec
mov
dec
inc
lods
adc
jmp
into
pop
lea
lcall
cmp
xchg
into
mov
and
pop
arpl
jge
and
insb
sti
jg
cs
cmpsb
dec
mov
or
lcall
mov
stos
out
ret
mov
jb
movsl
mov
shll
in
inc
sub
mov
adc
daa
inc
fists
mov
cmp
imull
insb
cwtl
xor
mov
or
lds
jl
cmp
in
shll
jmp
push
rorb
pop
or
mov
lcall
cmp
mov
pop
cs
call
mov
in
lret
jae
fcoml
sub
roll
repz
push
dec
int3
loope
add
in
insl
pop
sbb
mov
pushf
adc
cmc
xor
lods
rcll
mov
cwtl
mov
push
pop
daa
sub
addl
addr16
pop
jle
lds
insb
inc
ficoml
iret
mov
sub
addb
fldlg2
cmp
push
jae
add
jae
xlat
scas
jmp
jge
mov
pop
lods
mov
cmc
shlb
mov
imul
mov
arpl
inc
mov
xchg
xchg
mov
mov
xchg
loop
push
sarb
jnp
lahf
fwait
sbb
ret
and
xchg
mov
les
loopne
push
and
mov
sti
sbb
fdivl
push
push
out
rclb
xor
xchg
or
or
cmp
cmpl
mov
test
lods
push
loop
scas
iret
inc
jge
stos
ficomps
flds
arpl
daa
push
sbb
sbb
shlb
xchg
inc
jb
inc
in
ret
sbb
arpl
mov
pop
fwait
xchg
jle
imul
lcall
sbb
cmpsb
insl
jb
scas
int
test
push
cmp
cltd
xchg
loopne
aam
mov
outsl
mov
and
pop
mov
and
out
add
xor
pushf
and
outsb
sbb
mov
jb
mov
fnstenv
nop
xchg
fnstcw
cmp
mov
fnstcw
jle
aaa
xor
xor
xchg
pop
sub
daa
aas
jle
ficomps
pop
push
rep
pop
in
daa
mov
jmp
cmpsl
lret
mov
dec
lcall
or
xchg
in
sub
pop
sbb
into
adc
sti
int3
xor
bound
sbb
mov
mov
jmp
call
mov
cmp
inc
mov
inc
loope
icebp
mov
sbb
mov
stc
sti
clc
scas
scas
jae
pop
frstor
mov
aas
sub
jmp
adc
in
sbb
mov
stos
xchg
movsb
dec
outsl
imul
sti
jmp
adc
sbb
mov
lds
sbb
cmp
adc
cmp
xchg
test
mov
pop
mov
in
insl
shlb
jmp
jl
mov
mov
pop
sbb
clc
repz
mov
jmp
cld
test
cmp
nop
and
negl
cmp
push
lahf
into
out
dec
inc
cmp
pop
cs
xor
es
jbe
stos
sub
in
in
fisttpll
out
out
sbb
ret
xchg
and
adc
outsb
jp
push
add
dec
lea
mov
sti
add
out
popf
sbb
mov
popl
and
fistpll
mov
xchg
out
loopne
cli
bound
sbb
pop
fstpt
popa
in
ss
mov
std
pop
mov
mov
call
mov
push
scas
xchg
push
fiadds
or
int3
ljmp
xchg
stos
add
out
ss
insl
aad
loope
mov
icebp
pop
mov
pusha
out
pop
fwait
rolb
sahf
fidivl
repz
mov
inc
negl
fsub
push
rcl
ud1
xchg
pusha
jge
lea
mov
mov
mov
push
dec
pop
aaa
push
sbbl
adc
repnz
shrl
cmp
jns
test
pop
aas
mov
xchg
lea
cmp
scas
mov
sub
push
cwtl
subl
add
fs
mov
push
mov
orl
js
repz
mov
adcb
pop
in
hlt
sub
in
or
stos
add
in
iret
push
jns
inc
or
mov
push
sub
sub
fwait
mov
jno,pt
pushf
outsl
sub
mov
imul
mov
pop
xlat
cltd
hlt
dec
dec
mov
sub
arpl
fisttpll
stc
push
sbb
push
add
adc
push
int
imul
mov
outsb
outsb
std
callw
inc
inc
sub
lret
mov
sti
shll
xchg
in
dec
hlt
div
cs
jge
in
push
rorl
mov
mov
andb
and
and
add
ja
jecxz
xor
add
inc
or
sub
add
mov
pop
or
icebp
ljmp
push
dec
adc
icebp
sarb
rol
sarb
mov
ret
mov
ret
xchg
pusha
jo
ja
frstor
lahf
xchg
mov
push
jmp
aam
adc
adc
repnz
gs
lods
cwtl
xchg
mov
cmp
ret
jbe
in
mov
sbb
les
adc
or
dec
sahf
or
pusha
jle
dec
mov
movsl
jno
mov
xrelease
jp
and
stc
xchg
fwait
inc
and
fcmovnb
mov
adc
fcomps
fsubrl
loopne
sub
mov
inc
mov
jb
sbb
cmp
inc
call
pop
pop
pop
add
adc
inc
shlb
jae
or
xor
lret
adc
jb
popa
sbb
lea
pop
jmp
jns
cltd
xchg
push
mov
dec
add
mov
push
jno
fmull
pop
mov
cwtl
into
sahf
sub
pop
sarb
push
popf
dec
aas
daa
std
mov
add
inc
fisttps
sub
inc
test
dec
sahf
jb
daa
lcall
mov
ja
and
add
sbb
movsl
add
lahf
inc
jle,pn
push
aaa
inc
push
and
lods
icebp
mov
mov
rcrb
fbld
pop
dec
mov
and
xor
or
sbbb
adc
sqrtsd
test
rorb
adc
lods
push
aam
dec
data16
int
rcr
daa
shrb
js
or
cmpsl
negb
je
pop
fdivrl
inc
iret
jae
jo
push
loope
shll
int3
jecxz
sbb
pusha
xchg
or
leave
xor
jl
insl
adc
inc
sbb
xor
into
iret
dec
repnz
adc
xchg
sub
sbb
mov
test
neg
sti
test
xchg
jae
pop
std
cmp
je
jbe
cmpsl
sub
test
cmp
lock
imul
out
lods
sti
dec
sbb
sub
std
popf
iret
cmp
aas
or
cltd
fwait
mov
test
in
cmp
xchg
cli
fucom
mov
mov
jl
iret
cmp
mov
lcall
out
in
jo
or
cmp
sbb
pop
inc
mov
dec
pop
mov
pop
sub
and
cld
jnp
fistpl
or
mov
lret
pop
mov
fistpll
pop
jmp
xor
test
xor
xchg
ljmp
mov
add
jmp
fsubrl
cmpsb
jecxz
adc
push
mov
mov
jo
sbb
jno
incb
inc
out
cmp
dec
xchg
adc
test
or
pop
and
inc
adc
inc
or
jecxz
lret
xchg
loopne
daa
dec
daa
add
aaa
cli
sub
mov
sbb
sbb
jmp
shl
xor
xlat
cmpsb
out
test
sub
sbb
icebp
cmpsl
cmp
inc
rol
shrl
ret
push
xlat
cmp
pop
dec
xor
inc
push
sti
push
ret
leave
mov
add
fsubrs
pop
cmp
sub
push
mov
sub
mov
dec
mov
orb
int
or
dec
ret
dec
lret
shll
nop
into
pop
cmp
idivb
push
push
fs
cmpb
addr16
fnstsw
adc
and
xchg
fmuls
testl
jle
push
lea
push
jo
pop
dec
or
fildl
lock
nop
mov
xlat
das
sbb
cmpsb
push
sub
sub
inc
clc
rorl
adc
xor
scas
mov
test
rcrb
mov
decl
xor
mov
into
arpl
call
dec
and
adc
popf
in
repz
and
adc
sarb
out
and
mov
add
mov
jns
popf
cmc
lret
inc
out
aam
sbb
add
and
cmpsl
scas
rclb
imul
movsl
dec
popf
inc
xchg
jo
pop
jge
mov
add
jno
mov
mulb
sti
stos
shrb
aam
es
int
in
cmc
add
orb
lahf
fisttpl
loop
fimuls
mov
sbb
sub
ljmp
fisttpl
imul
rcrl
ss
movsl
push
mov
ds
inc
sub
jb
pop
ss
imull
ret
sub
je
sub
pop
and
repz
mov
inc
sti
dec
je
and
in
cmpsl
mov
fwait
lahf
mov
pop
loope
or
push
sub
xchg
sub
cmp
xor
test
sbb
xor
jl
outsl
cmp
pop
jno
leave
dec
and
push
lret
dec
insl
mov
jg
das
pop
pop
push
fcmove
and
inc
das
dec
jne
daa
pop
data16
xor
cmp
popa
aaa
adc
adc
mov
push
inc
jmp
mov
cs
inc
inc
in
push
fsubs
imul
stc
push
int
add
mov
hlt
fldenv
mov
mov
pusha
pusha
lock
jo
outsb
inc
dec
add
cmp
xchg
mov
push
jl
testl
cmp
sarb
push
adc
aam
je
sarb
test
sbb
ja
lahf
dec
cmpsb
mov
std
and
mov
ret
add
adcl
ffree
jmp
dec
inc
add
mov
ss
push
cmp
imul
mov
push
pop
test
dec
cmp
mov
imul
lods
inc
sbb
xor
into
sbb
in
outsb
or
dec
dec
push
jbe
aad
js
mov
mov
push
out
rclb
xchg
cmpsb
dec
and
inc
push
enter
mov
add
jnp
lock
pushf
imul
shlb
jl
push
cmp
sub
orb
xchg
or
rol
dec
std
xchg
jb
pusha
cmp
test
imul
inc
dec
mov
lret
je
push
lds
stos
push
addr16
aam
mov
add
mov
push
or
inc
adcb
imul
jb
jae
shl
in
lock
aam
test
push
sbb
mov
shlb
outsb
decb
test
js
stos
add
add
int
sbb
fsubs
cmp
cmp
popa
popa
jge
pop
popf
loop
jns
xor
mov
jecxz
pop
jmp
test
mov
fwait
xchg
xchg
cmpsl
sarl
pop
mul
aad
jge
lods
shrb
aam
add
test
pushf
mov
inc
out
pop
ja
movsl
aaa
nop
sbb
mov
pusha
xchg
incl
inc
int3
push
or
pop
fdivrl
adc
adc
mov
sub
outsl
popa
std
push
andb
inc
pop
ja
xchg
mov
mov
sub
mov
fwait
pusha
inc
out
xchg
lds
sub
cltd
xor
test
jmp
push
dec
push
test
mov
xor
adc
inc
call
into
popf
mov
cmp
jl
ljmp
pop
out
sbb
fldcw
pop
test
pop
iret
xchg
jecxz
test
pop
mov
pop
push
inc
cmpsb
inc
fwait
dec
icebp
mov
subl
jnp
aad
ds
jnp
test
push
fists
or
test
sarb
jbe
mov
mov
jbe
pop
jae
lret
ret
nop
call
loope
cld
lods
fidivl
cs
mov
daa
in
sbb
cmp
out
imul
movsl
sbb
cmpsl
outsl
out
push
and
dec
mov
adc
sbb
mov
sbb
bound
mov
cmp
outsl
stc
sahf
or
inc
and
bound
adc
pop
imul
mov
pushf
and
mov
scas
outsl
xchg
mov
roll
icebp
sarl
mov
int
xchg
mov
gs
add
mov
shlb
inc
into
xor
adc
jp
and
mov
sar
xchg
xor
mov
repz
ljmp
lds
add
insb
loopne
orb
dec
aad
ja
fwait
jns
sub
daa
inc
fcoml
inc
sub
dec
mov
lahf
pop
vmovsd
fmulp
test
xchg
push
sub
fnstsw
cs
inc
sub
out
enter
dec
adc
cwtl
push
jecxz
add
cmpsb
pop
fadds
outsb
xchg
hlt
inc
xor
leave
push
jbe
lret
dec
mov
lahf
aas
sub
sbb
movsl
je
hlt
pop
stos
mov
imul
lods
je
js
ds
mov
in
loop
out
imul
pop
lahf
cmpsb
inc
lahf
jae
sbb
js
je
adc
ret
and
mov
lock
add
add
aas
ljmp
push
sub
cwtl
loopne
je
test
gs
jle
sarb
add
rclb
cwtl
mov
and
jns
rcrb
cs
fcompp
xor
test
insb
or
inc
es
in
jne
sub
sbb
dec
inc
adc
xchg
jmp
js
add
jns
dec
cli
xor
mov
mov
push
stc
repnz
cmp
mov
fadd
add
pop
sahf
lcall
movsl
out
lods
movsb
mov
int
imul
ja
pop
xchg
cmpsl
mov
or
dec
and
mov
lock
enter
movsb
testl
xor
jle
mov
and
js
das
outsl
and
xchg
adc
nop
ss
mov
aas
pop
push
lret
out
mov
and
xor
and
adc
xchg
mov
outsb
or
enter
addr16
rorb
jle
lcall
outsb
or
pop
inc
lcall
push
data16
jns
in
add
in
sbb
into
mov
sub
and
cmp
loopne
testl
xor
mov
or
adc
push
mov
and
je
inc
adc
std
mov
dec
shlb
fwait
push
and
ret
out
sub
icebp
or
mov
sub
mov
ret
xchg
xor
dec
iret
mov
rcr
mov
dec
add
adc
imul
jbe
jge
mov
xchg
push
dec
lahf
imul
xchg
adc
popa
cmpsl
jne
out
dec
jae
sbb
clc
jg
pop
addb
in
cmp
push
outsb
mov
cmp
arpl
sub
push
xor
sti
mov
shrb
in
jmp
adc
nop
xchg
xor
and
popf
imul
sub
in
or
lret
imul
jg
scas
sub
inc
popl
int3
in
adc
sti
jmp
arpl
data16
push
out
and
xlat
mov
subl
jo
and
xchg
cmp
push
jbe
mov
jl
outsl
jp
push
cmp
hlt
repnz
movsb
inc
cmpsb
inc
xchg
cld
adc
loop
xchg
pop
add
out
aaa
and
ret
jne
xchg
stc
cli
mov
pop
sub
pop
out
int3
push
pop
aam
pop
fnstcw
push
jb
je
xor
cltd
leave
scas
stc
cmpsb
cmpsl
and
jmp
mov
loop
jp
or
fsubrl
add
sar
in
sbb
loope
mov
pop
dec
xor
or
push
scas
popa
ja
mov
cli
jnp
pop
roll
sti
push
adc
idivl
mulb
mov
lods
mov
notl
sahf
jmp
xchg
dec
enter
cs
xor
push
xchg
add
mov
subb
daa
mov
jae
mov
shr
jne
mov
stos
jmp
out
cli
add
std
adc
mov
insb
sbb
stos
mov
lcall
adc
daa
mov
jg
jle
push
shll
and
mov
pop
imul
and
les
aas
jb
dec
insb
mov
lret
mov
dec
dec
nop
imul
enter
cmp
mov
push
xor
fs
mov
sub
push
xchg
or
into
lods
lods
adc
or
mov
ljmp
mov
lods
and
ret
ud0
cmp
stc
and
push
adc
lds
mov
ftst
push
ret
in
in
mov
cld
cmp
push
fsubr
lods
mov
inc
pop
lcall
ljmp
jge
fidivrs
push
stos
cmc
xchg
cwtl
ret
sub
lcall
jbe
jno
in
adc
cmp
add
cmpsl
arpl
jl
inc
ret
pop
push
aas
push
push
cmp
loopne
rcll
jb
and
inc
cltd
mov
mov
into
jl
hlt
daa
and
cli
gs
fimuls
jnp
dec
or
mov
mov
andl
push
inc
fnsave
aad
ss
mov
int3
rolb
pop
out
push
cld
ja
js
mov
test
jno
lcall
xor
enter
rcr
inc
pop
push
icebp
das
dec
jbe
xlat
mov
test
push
mov
xchg
adc
rorl
pusha
out
pop
dec
jl
int3
cmpsb
jmp
add
push
shl
sti
adc
fsubs
int3
dec
cwtl
sbb
xchg
xchg
push
lods
fdivrl
jmp
idivb
and
repnz
and
ljmp
push
xchg
repnz
xchg
inc
cmc
fcmovnb
cs
in
or
cmp
iret
in
cs
ja
xorl
add
mov
mov
sar
stos
xchg
stos
stos
push
movsb
sbb
push
out
adcb
or
sbb
loop
jmp
lock
and
or
xchg
repz
mov
and
jle
jns
mov
test
or
fcompl
scas
mov
mov
push
je
hlt
mov
jne
dec
sub
in
ret
cmpsb
cs
jg
std
loope
xchg
out
pop
sub
push
xchg
mov
jl
cmpsb
xchg
decb
jp
mov
bound
xor
mov
inc
jb
jbe
inc
sbb
xchg
sub
jne
rolb
jo
fs
stos
jmp
add
cmp
shll
movsb
xor
mov
in
push
lods
pop
sbbl
push
lret
testl
pop
lock
jno
mov
scas
mov
inc
adc
sub
mull
and
dec
cld
mov
mov
sahf
adc
jnp
pop
dec
jno
and
mov
jne
inc
cwtl
jg
adc
xchg
xor
add
push
jle
pop
mov
mov
arpl
xchg
pop
add
sub
mov
mulb
je
js
inc
push
pop
ficomps
pop
cmp
add
inc
test
test
mov
in
mov
addr16
lcall
arpl
inc
sbb
lods
lret
int3
aaa
mov
movsb
and
lods
inc
dec
mov
iret
cmp
call
cmp
in
and
adc
mov
test
push
cmpsb
xchg
insb
gs
pop
mov
push
push
mov
mov
hlt
dec
out
jbe
dec
popf
mov
std
sahf
idivl
mov
enter
xchg
fsubrl
dec
out
aaa
hlt
mov
add
sub
sub
fdivrl
cltd
sbbl
loop
mov
pop
data16
rolb
scas
arpl
dec
outsb
popf
push
xchg
mov
adc
repnz
insb
dec
adc
dec
aaa
in
inc
in
mov
sub
sub
xchg
lahf
fwait
and
inc
mov
insl
add
mov
in
loop
leave
rolb
das
aaa
pop
cmp
fdivrl
xor
cltd
and
and
dec
pop
jl
mov
push
rcl
pop
mov
dec
cmp
lods
addr16
push
mov
mov
xor
and
subl
sti
xchg
add
repz
inc
lds
mov
fildl
in
aaa
mov
je
cmc
lret
sub
push
pop
mov
out
gs
arpl
int
add
dec
and
and
pop
pop
addr16
stos
mov
in
cmpsb
push
push
aaa
inc
insb
notb
inc
fsts
xchg
test
insb
jb
xlat
add
adc
xchg
aas
mov
adc
lret
mov
jb
lret
subb
xchg
popf
ss
test
aas
dec
dec
movsl
sub
call
shlb
pop
ret
lahf
sbb
and
mov
mov
addl
icebp
mov
mov
xor
ret
cmp
stos
sub
cmp
clc
dec
add
stos
jp
imul
or
jae
dec
or
or
pop
ret
sub
clc
xchg
xor
adc
ret
fwait
lods
lea
leave
pop
sbb
xchg
and
sbb
pop
ficoml
push
push
cmp
rcrl
cmpsb
jae
adc
inc
mov
lret
and
js
out
loope
mov
mov
cltd
das
repz
mov
mov
hlt
sbb
out
mov
dec
test
dec
mov
push
mov
adc
xor
sbb
test
fnstenv
ud1
pop
fildll
shrl
shl
imul
mov
fstpt
test
xchg
stos
jg
aas
cmc
mov
mov
push
cwtl
les
ret
leave
or
mov
imul
and
jmp
and
andl
jg
mov
enter
jbe
imul
and
sub
sub
call
inc
out
push
and
aaa
sbb
add
pop
add
out
sbbb
xchg
sti
fldt
adcl
pop
inc
ret
xchg
in
scas
loope
jle
push
or
inc
cmp
aaa
cmp
mov
imul
iret
jns
not
jns
sub
in
push
mov
xchg
nop
ret
enter
aad
mov
dec
sar
mov
aam
out
rcrb
pop
add
mov
icebp
jp
sti
dec
push
jge
sbb
fstps
imul
inc
push
push
daa
xchg
notl
leave
jecxz
push
cld
inc
mov
xchg
or
sub
sub
stos
pop
aaa
pop
xor
sbb
inc
outsl
mov
pop
cltd
pop
or
lods
xchg
jge
js
jle
pop
ret
sar
ss
push
sbb
push
out
inc
out
mov
or
lods
sub
and
in
insl
add
sbb
push
negb
cmp
adc
stos
stc
jle
outsl
xchg
mov
jo
cmp
mov
jl,pt
mov
or
jge
sub
repz
lods
dec
jle
dec
cmovbe
xchg
adc
sbb
pop
xor
pushf
fwait
stc
leave
pusha
popf
jmp
js
mov
lcall
cmpsb
loop
je
and
andl
cmp
adcl
dec
sbb
jae
into
ret
shr
in
icebp
notl
cmpsl
das
mov
outsb
lods
loopne
in
jae
mov
iret
cld
shrl
or
les
pop
mov
push
imul
cmpsl
inc
and
aas
loopne
adc
sbb
mov
inc
test
movsb
sub
dec
pop
sub
inc
xchg
or
fsubs
pop
cmp
add
cmp
mov
xor
mov
cmpsb
sub
xchg
shr
loope
das
mov
fiaddl
clc
fdivrl
addr16
xchg
arpl
movsb
pop
push
dec
js
aaa
cmp
sub
adc
fwait
ja
inc
inc
ss
and
xchg
pop
out
std
lock
xor
jae
rclb
adc
mov
adc
dec
addr16
or
scas
sbb
mov
idiv
lahf
cs
shrb
mov
rcll
imul
xchg
ret
jmp
andl
or
and
push
cmp
lcall
aad
leave
out
jl
push
pop
outsb
in
dec
bndstx
fmuls
rolb
fxtract
push
inc
pop
js
dec
jno
popf
sbb
scas
pop
rol
fistl
push
out
rol
stos
les
and
fistpll
dec
fcoml
push
imul
sub
push
sub
pop
xchg
scas
mov
adc
out
push
jbe
clc
jp
or
scas
lcall
xchg
in
aas
loope
mov
loop
int3
pop
subb
sbb
daa
ret
xchg
dec
loop
lea
adc
cld
add
sub
sbb
xor
add
or
jnp
je
addr16
pop
aam
mov
das
aad
or
xor
xor
mov
in
jo
mov
scas
aam
stc
inc
mov
and
rclb
test
pop
les
push
movsl
add
shrb
adc
push
stos
clc
clc
dec
ds
gs
sub
shll
jle
imul
dec
lods
loope,pt
lods
mov
push
adc
in
pusha
jmp
loopne
xor
adc
popf
cmc
int
xor
jp
pop
sub
adc
clc
out
push
xor
aaa
mov
push
div
or
out
mov
stos
popf
push
or
adc
inc
jnp
sbb
pushf
push
jns
jecxz
adc
cmc
subl
leave
mov
pushf
push
loope
ja
add
fs
stos
insb
shll
or
mov
lret
aam
aam
call
xor
dec
pushf
in
insb
jnp
inc
or
ret
add
or
fisttpll
lea
inc
or
scas
mov
jae
mov
roll
xchg
xor
fstl
frstor
jo
loope
adc
jmp
add
outsl
fidivl
pop
ljmp
push
imul
push
xor
lea
push
pop
or
in
iret
xor
adc
flds
adcl
sar
adc
lea
pushf
ljmp
das
mov
movsl
clc
dec
mov
sub
aas
stc
cmp
sub
test
jae
adc
sub
mov
jle
sahf
jb
mov
cli
imul
dec
nop
negb
fiadds
or
push
pop
in
and
mov
adc
fs
mov
lcall
out
cs
and
repnz
stos
add
test
sbb
xchg
jns
ret
sbb
push
les
dec
xor
iret
lret
shrb
sbb
fwait
sahf
jl
in
and
adc
mov
inc
and
inc
xchg
xchg
mov
push
fistpl
push
pushf
ljmp
bound
inc
or
mov
lea
mov
rep
pop
or
icebp
shll
negl
xor
push
xlat
icebp
test
packssdw
jg
dec
popa
in
lret
fs
das
test
push
das
cmc
dec
jbe
mov
jb
cmp
pop
sbb
jnp
rcrb
lods
mov
clc
sbb
cmpb
jmp
mov
or
pop
in
fs
bound
inc
push
xor
or
xchg
mov
xchg
mov
and
sub
loop
out
jg
jmp
rcll
pusha
fmuls
pop
icebp
push
sub
fimull
imul
scas
popf
mov
ja
add
push
jns
jns
cmp
test
dec
ret
ficompl
es
jp
xchg
leave
sub
mov
insl
jbe
es
lret
and
mov
sbb
mov
mov
popf
pop
out
scas
add
pop
ljmp
push
cli
ds
or
push
rclb
jmp
fst
mov
adc
xchg
xchg
arpl
stc
xchg
add
xchg
mov
cmc
mov
loope
mov
test
in
stc
repz
pop
push
dec
cmp
mov
lea
stc
jae
daa
push
mov
mov
ds
push
push
int
pop
outsl
cltd
insl
sbbb
ret
int3
jg
cmp
add
enter
out
dec
mov
xchg
insl
cmp
daa
aam
sub
and
movsb
and
sbb
inc
mov
dec
stos
add
lods
and
leave
jp
notb
push
mov
add
xchg
add
ds
add
inc
xor
lods
loopne
xlat
and
enter
lods
xor
jmp
or
sub
xlat
shlb
data16
inc
jns
mov
addr16
shll
dec
xor
mov
sbb
mov
or
mov
xor
sbb
in
into
add
lock
jmp
inc
adc
test
call
test
or
bound
push
and
push
cmp
adc
mov
shll
hlt
add
push
test
mov
cmp
inc
mov
rcrb
pop
sbb
cmp
cmp
push
mov
adc
or
sub
sbb
mov
int3
mov
mov
addr16
jae
mov
sahf
test
pinsrw
adc
enter
adc
adc
push
push
mov
adc
stos
sbb
imul
push
loope
adc
cmpb
pusha
push
and
pop
jmp
aas
jae
add
pop
fisubs
mov
repnz
cmp
mov
sbb
xchg
repz
nop
js
fidivrs
arpl
repz
out
adc
leave
mov
imul
sbb
sbb
mov
xchg
sub
xlat
sub
jg
testl
shlb
dec
cld
mov
push
pop
lock
aaa
pop
data16
sub
push
xor
xchg
mov
xchg
aaa
stos
adc
xorl
fisttps
cltd
not
jg
add
sbb
mov
inc
sub
sub
repnz
sub
cwtl
push
dec
ret
cmpl
out
push
inc
mov
sub
iret
push
jmp
mov
and
add
pop
jecxz
xchg
and
loop
jp
jb
fnsave
xchg
shrl
out
adc
inc
int3
ljmp
dec
pop
mov
out
add
jg
lea
dec
jnp
aad
add
xchg
dec
in
and
jl
cli
dec
fiaddl
or
xchg
sub
outsl
fnsave
repz
gs
sub
lret
ret
push
das
clc
xchg
les
out
les
test
prefetchw
or
adc
out
add
into
movsl
or
aaa
movsl
xor
jns
push
xor
inc
cmp
call
int3
xchg
popa
ret
or
jmp
cmc
sbb
and
in
imul
mov
mov
push
jbe
push
es
adc
int
mov
inc
push
data16
pop
lret
push
and
stos
pop
and
call
jbe
and
adc
dec
mov
subb
in
xchg
sub
add
or
mov
pop
test
sub
or
mov
xor
pop
hlt
test
bound
jl
cli
dec
filds
mov
dec
arpl
pop
push
int
dec
mov
dec
jmp
test
mov
js
pop
dec
cmpsb
push
lods
mov
mov
pop
loop
mov
in
sti
mov
les
cmc
jmp
add
dec
xchg
dec
popa
jg
xchg
fistpl
mov
andb
jo
mov
call
and
fadds
fmull
in
repnz
insl
inc
shll
shl
cmpsb
mov
mov
scas
mov
mov
xorl
sahf
ljmp
fwait
cmc
in
add
inc
xor
sub
cmp
lahf
sub
mov
xchg
xchg
cmp
push
sti
sbb
and
xchg
pop
scas
sahf
xor
xor
add
stos
push
or
fadd
jmp
lds
into
push
aam
in
sub
in
sbb
xor
dec
sbb
add
push
pop
lods
push
sbb
sbb
mov
idivb
ja
jg
mov
daa
in
mov
orl
test
fisubl
mov
mov
pop
testb
jmp
or
dec
or
pop
pop
lods
mov
in
repz
xchg
fst
push
call
es
iret
es
push
adc
adc
ret
push
cmc
sub
out
and
xlat
adc
add
sbb
push
or
sbb
orl
jbe
mul
mov
adc
ret
push
cmp
xor
imull
out
cmc
pusha
mov
adc
xchg
inc
mov
cmp
mov
jb
sub
lea
sub
data16
adc
or
je
push
xchg
pop
jecxz
fwait
add
call
mov
divps
fsubl
int
xchg
pop
jmp
or
outsl
mov
mov
sub
add
inc
and
push
movsl
mov
call
inc
lret
aam
les
xchg
in
xor
xchg
ja
in
sbb
in
pusha
jp
dec
addr16
dec
out
cs
push
sbb
pop
fiadds
les
cli
insl
popa
pop
cmpsb
pop
pushf
jl
xor
mov
inc
xchg
out
test
out
dec
les
xchg
mov
movsb
pop
lea
rol
xor
lret
fldcw
mov
push
outsl
imul
dec
cmp
and
cmpsl
push
into
mov
mov
push
or
xchg
aad
rcll
adc
pop
test
outsb
mov
enter
adc
push
jns
shlb
rcl
and
iret
shlb
mov
mov
xor
ret
push
push
fdivrs
into
or
icebp
fs
int
clc
arpl
dec
push
ss
push
jo
test
mulb
cmp
test
xor
stos
fdiv
xchg
cwtl
int3
aaa
sbb
sbb
jno
les
inc
in
jno
mov
lahf
out
lret
cmpb
in
jnp
cwtl
lcall
mov
imul
mov
das
cs
outsl
es
xlat
mov
test
inc
cmc
add
inc
sub
mov
enter
sti
cmc
cmpb
das
lds
push
xchg
add
pop
push
jecxz
fsubrp
fsubs
test
test
repz
into
insl
loop
jne
and
add
rorl
jecxz
ja
insl
rolb
pop
stos
sbb
or
adc
jno
and
add
jecxz
xchg
dec
adc
mov
cmpsb
or
clc
les
or
sahf
mov
add
mov
test
push
xchg
adc
dec
push
les
leave
and
or
dec
daa
jae
movsl
fs
orl
ljmp
sbb
mov
mov
imul
es
lcall
cld
adc
cmp
aad
repz
push
in
and
out
inc
out
add
dec
lea
xchg
push
incl
and
rol
xchg
loope
cmp
cltd
xorb
jb
imul
push
add
mov
in
je
xchg
xchg
lcall
cmp
xchg
jl
cmp
cmp
iret
popa
shrb
mov
jge
mov
movsl
in
test
xchg
push
add
push
outsb
pop
jae
jne
jmp
adc
popa
dec
ss
pusha
and
stos
jg
call
jmp
xlat
clc
sub
inc
jnp
mov
pop
outsl
cmp
push
mov
jle
insb
movsb
js
cld
cmpl
xor
xor
sub
dec
sbb
mov
into
xchg
xor
mov
outsb
in
dec
std
xchg
dec
mov
and
lret
rcrl
mov
push
dec
pop
lahf
aam
out
stc
mov
mov
xor
cmp
lods
roll
js
mov
push
nop
mov
xor
and
sbb
in
sbb
enter
sbb
inc
or
pop
cli
cmp
and
pop
mov
jns
hlt
loope
sti
leave
cmp
mov
popf
jbe
xor
orb
int
mov
aaa
mov
fcoms
repnz
andb
sarl
sub
movsl
mov
and
jnp
mov
call
sbb
outsb
sub
lods
aam
pop
cs
sbb
ffree
fwait
leave
pop
lods
jmp
add
jnp
js
loop
sbb
hlt
ficoms
dec
call
clc
sub
push
sbb
stos
aas
imul
pop
jle
lods
sarl
bt
mov
sub
adc
lcall
dec
jne
mov
loop
push
test
xlat
xchg
fistpl
jle
jb
sbb
sbb
shl
fmulp
jle
mov
and
mov
or
push
or
out
in
push
xchg
mov
cmpsb
pop
adc
sub
sub
pop
sbbl
movsl
ret
xchg
sbb
fs
jmp
cli
aas
push
add
fwait
cs
xchg
adc
out
mov
mov
jo
lret
out
fucompp
lret
and
cmp
mov
std
nop
push
pop
inc
out
outsb
mov
not
jl
imul
in
test
out
int3
fdivrl
mov
icebp
pushf
mov
and
test
pushf
mov
and
push
int3
jmp
aaa
out
lcall
pop
jns
pop
xor
or
loop
mov
roll
in
mov
shll
push
mov
andb
inc
jl
jp
push
cmp
je
gs
push
add
js
adc
cli
inc
and
cmp
insb
sbb
push
xchg
adc
sub
adc
test
mov
sbb
pop
xor
das
inc
popa
dec
inc
jbe
out
cli
ja
lahf
in
sub
movsl
cmp
adc
outsb
popa
jge
sub
dec
xor
data16
and
mov
cs
shrl
stc
rclb
add
add
mov
adcb
into
imul
inc
sbb
or
push
aad
jne
cli
pop
clc
outsb
xor
lret
or
nop
andl
adc
pushf
cli
insl
div
lea
xchg
inc
bound
mov
push
adc
ljmp
jecxz
leave
icebp
icebp
adc
jge
andb
jecxz
mov
cmpsl
push
inc
jl
push
call
or
mov
into
sarb
sub
jge
jbe
xchg
dec
out
push
outsb
add
jbe
es
jle
aam
in
fstl
fwait
js
stos
adc
mov
sbb
imul
mov
arpl
cmp
fwait
out
push
sub
repnz
es
pop
scas
pop
je
mov
pop
pop
xor
mov
sti
paddw
push
fsubrl
insb
mov
dec
rcll
sub
enter
lds
lret
xor
or
add
popa
scas
inc
adc
xor
adc
inc
pop
jecxz
out
cmp
lods
mov
and
cmp
das
ds
outsl
mov
pop
jns,pn
lock
daa
push
stc
inc
jmp
and
mov
arpl
rcrb
sub
hlt
jbe
mov
fwait
imul
xchg
inc
jge
mov
add
jp
dec
mov
xchg
xchg
imul
add
jne
mov
jb
cld
in
sarb
cmpl
xchg
test
cmp
data16
lods
ret
sbb
lock
ret
dec
outsl
cmp
cmpsb
in
test
mov
div
ss
imul
add
std
jl
xor
push
addr16
popf
lea
icebp
stos
mov
lcall
mov
adc
dec
dec
xor
mov
pop
repnz
adc
adc
aad
and
or
std
pop
vroundps
clc
jbe
stos
mov
sbb
adc
shlb
pop
lock
sti
dec
inc
scas
outsl
sbb
fists
in
sbb
stc
fistl
sub
lea
inc
ss
pop
clc
insb
cmpsl
loopne
dec
push
or
in
loop
pop
pop
js
movsb
scas
test
sbb
pusha
push
cwtl
leave
jnp
clc
xchg
stos
xchg
mov
pop
mov
pop
xchg
add
lahf
mov
pusha
jnp
stos
stos
add
sbb
sub
dec
into
mov
cli
pop
jno
cmp
lcall
repnz
and
pop
cli
push
cmc
adc
mov
adcb
adc
icebp
or
ror
mov
sbb
push
or
adc
loope
sahf
add
lcall
xor
and
sahf
std
mov
aam
jo
je
clc
lret
xor
cmp
lret
sub
out
data16
mov
push
mov
xchg
insl
cltd
int
stos
push
aam
mov
adc
cld
cmpb
cltd
lcall
stc
jbe
inc
cmp
nop
and
shufps
mov
sti
arpl
mov
jecxz
cmpsb
cmp
or
aas
sub
mov
mov
gs
xor
test
push
testl
mov
fdiv
pop
mov
xchg
sub
cmpsb
dec
rcl
sub
add
lret
decl
icebp
xor
repz
pop
faddl
sub
xor
inc
mov
adc
inc
cpuid
mov
ret
pushf
hlt
shlb
jle
adcb
jo
imul
cltd
dec
sub
fildll
cs
mov
cltd
shll
cmp
insl
cmpsl
clc
in
mov
aad
nop
subb
and
out
jle
cltd
js
or
sub
push
or
fmuls
inc
adc
xor
cmp
mov
ret
inc
sub
add
nop
push
movsb
pop
cltd
pop
movsl
mov
test
jne
jp
lea
sbb
ror
cmpsl
test
into
adc
shlb
push
inc
in
imul
and
cmpsl
sbb
adc
xchg
cmpsl
rol
cmpsl
lea
imul
loopne
mov
mov
cmp
inc
cmc
popa
loop
and
mov
iret
dec
stos
xlat
mov
mov
dec
pop
and
aaa
push
ret
notb
idivl
or
aam
mov
gs
in
inc
jns
push
jns
movsb
repz
test
std
sarl
mov
mov
lcall
mov
bound
sti
scas
out
jge
cs
inc
mov
out
mov
push
movsb
aad
or
clc
incb
mov
xchg
xchg
sahf
pushf
in
test
ret
sarl
and
loop
sub
test
or
cmp
xchg
fsubrl
ljmp
jp
cmp
mov
lret
sbb
ljmp
into
aaa
jecxz
mov
outsl
call
pop
jle
push
push
jae
add
mov
inc
push
add
add
xchg
mov
xchg
push
outsl
cs
jns
push
repnz
fadds
xchg
iret
stos
mov
fnsave
or
dec
scas
add
pop
in
jecxz
aam
movlps
ljmp
pushf
jo
out
mov
das
push
int
fcmovbe
lds
int3
mov
orb
or
fdivs
mov
cmc
ret
lret
jl
dec
sub
vcvtps2uqq
mov
jmp
xchg
cmpsl
jecxz
stos
movsb
dec
aas
in
adc
ret
sub
cmpsb
mov
shll
scas
ljmp
cltd
jbe
mov
jns
aad
rcll
mov
push
or
insb
lock
lods
lea
clc
int3
aas
xchg
mov
jmp
mov
pop
push
jne
das
add
xchg
or
fcoms
dec
ret
or
mov
and
rorl
push
mov
add
shll
test
fists
mov
add
test
jne
cmp
or
aaa
pop
movntps
or
in
sahf
dec
sub
loopne
pop
hlt
pop
enter
xor
adcb
mov
cmp
test
pop
adc
int
nop
cwtl
test
jmp
stos
mov
adc
lahf
rorb
jo
fstl
cmp
pop
lret
mov
or
cmp
adc
icebp
sub
jnp
out
loop
aam
sar
and
or
jnp
xchg
not
mov
xchg
sub
popf
mov
imul
out
jnp
cltd
or
mov
fcompl
gs
dec
dec
inc
cmpl
out
leave
mov
lret
dec
mov
pop
insb
enter
pop
lcall
push
aam
pop
xchg
in
in
mov
rcrl
mov
outsl
pushf
sub
jne
pop
stos
sub
test
fwait
and
xor
jnp
stos
pushf
and
push
fidivs
pop
pushf
sub
cli
pushf
xor
inc
pop
loop
out
mov
sub
cltd
jne
fnstenv
cmp
pop
pop
and
ret
add
das
xchg
add
xchg
and
aaa
les
jb
mov
cmp
mov
pop
jae
or
subb
cli
lcall
push
add
xor
jnp
rolb
xorl
jno
mov
scas
dec
shrl
into
lods
aad
arpl
adc
fsub
sub
dec
inc
mov
lret
test
fstps
sbb
das
jge
lock
dec
push
adc
push
lcall
mov
sbb
cmp
or
ja
ficoml
dec
jg
jp
rcrl
out
pop
pusha
iret
fistl
in
add
xchg
pushf
fwait
mov
mov
mov
cltd
notl
or
test
lock
lods
js
sub
fimuls
sub
cli
add
push
aam
adc
nop
addr16
in
pop
add
sub
fnstenv
sar
adcl
iret
js
xchg
scas
ret
xbeginw
cmpsl
push
pushf
mov
cmpsl
xor
in
fstl
flds
pop
inc
xchg
mov
call
dec
in
push
mov
outsb
addl
xor
sub
lret
adc
enter
addl
pushf
and
jo
push
pop
adc
sbb
sub
leave
sahf
lahf
pop
jbe
gs
int3
fwait
mov
lds
cmc
dec
jl
enter
lods
repz
in
addr16
dec
call
ds
clc
jnp,pt
stos
mov
mov
loopne
cmpsb
sub
push
sbb
sbb
movsb
stos
fmuls
js
aad
shlb
out
lahf
dec
in
daa
cmpsl
pop
push
push
add
jmp
sbb
ja
cmp
aam
inc
xchg
cmp
cmp
in
int
push
pop
cmp
arpl
cli
stc
dec
adc
jno
loop
ror
stc
push
push
mov
add
les
out
xor
xorb
out
jg
les
call
xor
mov
int3
test
cmp
xor
xchg
push
sub
subl
mov
std
fnsave
jo
das
xchg
bnd
dec
and
mov
je
gs
push
sbb
push
jmp
adc
adc
push
jecxz
inc
inc
movsl
mov
inc
lea
pop
fnstenv
das
lahf
int3
xchg
ret
out
test
push
movl
flds
xchg
enter
enter
push
popf
jno
in
fldcw
pop
fs
xchg
jl
jp
inc
sbb
xlat
insb
cs
push
testb
inc
in
leave
mov
daa
dec
mull
pop
mov
cmp
daa
setl
pop
arpl
test
aaa
icebp
pop
mov
sbb
adc
les
xchg
daa
xor
xor
and
nop
ja
stos
in
fsubl
sarb
lods
xchg
in
lods
ror
xor
mov
roll
or
es
adc
leave
nop
bswap
or
and
fwait
int3
cmc
lcall
ss
add
cmp
dec
shrl
mov
sarl
in
sub
nop
push
mov
neg
outsl
stos
fisubrl
out
out
cmp
inc
cltd
enter
cmc
loop
adc
pop
in
pop
push
adc
jb
dec
popf
outsb
inc
jne
sbb
mov
fidivs
std
xor
ss
rol
fs
mov
ret
dec
dec
aaa
test
pop
loop
sub
jge
loopne
push
test
xchg
popa
outsl
mov
cli
flds
sub
push
fmull
lcall
ss
in
push
popa
or
dec
ret
pop
lods
push
inc
in
roll
cmp
dec
fiaddl
shl
aam
mov
mov
push
rorb
frstor
dec
push
and
dec
fcmovnbe
mov
and
or
shl
ret
pop
mov
hlt
adc
sub
or
jge
push
mov
sbb
push
cmp
iret
jmp
fnstenv
mov
mov
lahf
ds
mov
xor
xor
dec
inc
stos
lea
js
repz
jns
ljmp
leave
or
mov
scas
jle
scas
or
ljmp
jecxz
mov
pop
ss
cmc
mov
iret
sub
add
mov
push
loopne
rorb
mov
sub
jns
jns
ljmp
andl
mov
out
add
lock
fildll
xor
mulb
lret
iret
aaa
into
lea
mov
int3
dec
icebp
push
and
xor
pop
movsb
das
push
xchg
and
sub
push
mov
les
and
lret
mov
cmp
std
cmp
lcall
lret
pop
inc
mov
adc
outsb
das
and
pop
lods
rorb
ds
lret
das
push
pop
lods
enter
mov
stc
lods
test
mov
imul
sub
mov
mov
push
loop
lret
cwtl
push
add
cs
dec
mov
inc
push
into
sti
mov
loop
add
scas
or
push
mov
xchg
xor
mov
sbb
pop
ljmp
sbb
sahf
and
sti
lods
iret
rorb
mov
das
stc
iret
out
popf
push
xchg
sub
daa
mov
push
mov
fcmovnb
push
movsb
fld
loope
out
jae
jmp
xlat
mov
out
cmc
mov
jmp
add
xlat
cwtl
bnd
jbe
sahf
add
imul
push
pop
movb
inc
leave
mov
xor
pop
aas
and
push
cmp
out
shlb
jae
testb
fcomps
out
jae
mov
int3
ret
mov
scas
dec
std
adc
dec
cli
fistps
andl
in
gs
cs
sub
or
or
push
out
sub
inc
cmp
push
inc
divb
adc
les
and
scas
nop
fs
mov
fcoms
jb
shlb
insl
rorb
inc
shll
sbb
scas
inc
pop
cmc
fcmovu
add
sti
sbb
insl
jno
fldln2
push
clc
ds
adc
dec
push
xchg
mov
js
sbb
fmuls
or
push
in
push
stos
stc
imul
in
fs
int3
mov
and
pop
sti
adc
sub
shll
mov
sub
arpl
cmp
xchg
out
scas
pop
ss
jae
repz
out
fs
aaa
fiadds
lahf
xchg
pop
sub
cwtl
mov
inc
fadds
pop
xor
lret
pop
inc
xchg
mov
insb
sbb
pusha
ret
push
loopne
mov
mov
loopne
cmc
outsl
mov
inc
out
loopne
inc
push
addr16
and
and
dec
dec
dec
mov
pop
pop
sbb
push
and
or
jg
rcrl
dec
sbbl
mov
icebp
mov
rcl
hlt
arpl
ja
sarl
push
adc
fnstsw
pusha
fcos
xor
es
ret
sub
insb
lahf
mov
orb
scas
mov
test
pop
xchg
sarl
dec
gs
jl
add
push
jae
cltd
cmpsl
ss
pop
loopne
sti
lods
test
add
mov
mov
inc
sub
js
xor
mov
scas
in
dec
bound
mov
cmpsl
stos
nop
fwait
mov
xor
pop
cmp
int3
aas
cmp
jge
xchg
xchg
in
mov
add
bound
dec
outsl
aad
cwtl
jmp
addr16
xor
cmp
outsl
mov
sbb
dec
scas
cli
rcll
arpl
inc
cwtl
push
sti
mov
dec
pusha
push
and
pop
leave
dec
jge
popl
xchg
add
arpl
add
add
adc
movl
arpl
cmp
test
out
mov
sub
mov
lret
iret
cmc
stos
std
adc
int
and
je
fwait
push
rorb
into
imul
xor
clc
repz
adc
sbb
aaa
mov
adc
lcall
mov
mov
jnp
test
fcmovb
xor
add
stos
sarl
inc
mov
in
fdivl
enter
call
je
xchg
push
addr16
iret
in
cltd
push
lahf
inc
jl
dec
push
gs
imul
inc
and
fldenv
pusha
cmp
and
sub
inc
push
xchg
or
daa
stc
cli
lcall
sub
inc
pop
and
iret
and
jle
or
jle
fdivrs
int
je
adc
cmovle
jns,pt
cmpb
jl
and
fdivl
repnz
sarl
cmc
mov
std
addr16
push
and
jo
jge
inc
scas
mov
das
jp
ret
clc
sub
xor
fildl
pop
sarl
loop
stos
inc
idivl
push
xchg
push
les
inc
xchg
loope
fisttpl
mov
mov
roll
aad
dec
pop
rcrb
out
stos
hlt
adc
fnstenv
xor
jle
cmp
in
xchg
gs
insl
jb
adc
out
std
je
mov
mov
jns
mov
jno
add
dec
and
test
out
test
out
cmpsl
loopne
jb
push
cmc
add
js
jge
jle
cmp
or
dec
test
xlat
dec
cmp
lahf
imul
cmp
ljmp
mulb
fistps
lcall
inc
std
push
mov
inc
inc
aaa
or
cmp
jp
in
mov
jns
xlat
push
push
adc
add
push
sbb
push
pop
mov
mov
and
mov
adc
pop
jecxz
cwtl
js
or
stos
jne
aaa
movb
cltd
xor
adc
aaa
inc
push
or
les
scas
sti
hlt
shlb
mov
push
jmp
shll
clc
cs
movsl
out
mov
xchg
orl
or
pop
outsl
mov
das
adc
scas
lock
xchg
push
test
sbb
shrb
movsb
pop
pop
in
fsubrl
subb
mov
testb
data16
nop
pop
push
jmp
adc
adc
jp
push
sub
cltd
dec
sub
sbb
fwait
test
out
xlat
imul
out
push
add
dec
inc
int
daa
test
dec
into
xor
repnz
cmp
scas
xchg
out
popa
testb
mov
mov
mov
add
adc
popa
push
in
clc
in
inc
jle
gs
mov
mov
sarb
mov
jl
in
add
adc
test
test
push
push
pop
inc
cld
std
daa
add
mov
call
jno
mov
pop
sbb
cli
adc
lods
push
int3
iret
xlat
dec
sbb
fisubl
add
and
xchg
jnp
xlat
imul
daa
push
ret
gs
out
in
mov
popa
shrl
xor
push
xchg
dec
out
inc
dec
leave
idivb
dec
int
movsb
movsb
cmp
xchg
xor
daa
push
ret
mov
out
add
mov
sahf
sub
sbb
mov
or
lret
outsl
pop
aaa
dec
rcll
in
lock
mov
int3
mov
xchg
mov
insl
push
xchg
mov
adc
push
xor
jg
push
push
hlt
js
mov
inc
rcrl
in
jns
add
pop
mov
xchg
arpl
and
or
daa
icebp
add
clc
fisubrl
pusha
loope
cld
shll
dec
dec
std
cmp
movsl
mov
mov
pop
adc
sbb
jp
sbb
cmp
outsl
mov
inc
shlb
push
xor
jb
inc
mov
lahf
testb
lods
xchg
daa
outsb
loope
jno
stos
jle
inc
addb
imul
push
aam
sbb
pusha
addl
or
lock
pop
and
pusha
stc
pusha
cmp
sbbl
test
std
adc
test
sbb
push
xchg
lret
add
fs
aad
fidivs
nop
mov
mov
jbe
ficomps
rorl
push
es
push
mov
mov
gs
lcall
xor
cmp
mov
push
stos
pop
test
outsl
add
sub
sti
pusha
int
lret
sub
sub
pusha
lds
cli
ficoms
xlat
xchg
fs
enter
dec
xchg
sub
inc
xorb
xchg
scas
ljmp
add
bound
stos
mov
fisubrs
mov
xchg
mov
adcb
sti
add
insl
dec
popa
lods
cli
pop
push
ds
cltd
inc
dec
mov
wrmsr
out
sbb
mov
in
pop
add
cmc
sarl
mov
rcrl
std
jb
cmp
fisttpl
call
inc
pop
xor
add
pop
cld
mov
jnp
roll
or
inc
add
jbe
xor
inc
xor
out
jl
mov
call
push
out
aad
das
sbb
add
pop
les
cmpsb
out
jae
sbb
mov
push
jmp
xchg
dec
bnd
cltd
adc
push
orl
mov
movsb
stos
addb
lahf
pop
adc
jnp
dec
test
mov
fwait
daa
and
dec
int
nop
mov
aam
add
and
sti
mov
addps
cmc
loop
push
jmp
call
dec
cld
mul
inc
pop
imul
lods
adc
pop
call
or
jbe
scas
loop
shr
arpl
in
xor
and
testl
xchg
mov
fmuls
dec
int3
push
cld
jg
mov
and
test
aam
dec
das
mov
outsb
jbe
xchg
inc
cmpsb
pop
jg
imul
inc
add
inc
xchg
mov
or
jmp
sbb
inc
stos
mov
sbb
pop
push
and
dec
sbb
dec
movsl
xlat
lods
mov
xchg
into
xchg
pmaxub
push
pop
inc
add
or
pop
or
jae
ret
add
jg
pop
dec
dec
jg
lcall
xor
pop
call
ret
xor
jecxz
lock
pop
ret
mov
stos
into
ret
cld
fsts
mov
xchg
rcl
pop
mov
inc
int
ret
inc
xchg
mov
pushf
push
sbb
aaa
sbb
and
lds
xor
nop
out
mov
push
lock
cmpsl
ror
ret
jge
icebp
push
or
inc
adc
push
sub
popa
loope
stos
aaa
add
inc
test
xchg
aaa
pop
and
out
mov
and
jp
mov
add
cmpsl
inc
pop
cmp
cmpb
add
jmp
or
xor
mulb
imul
cmp
enter
jo
xor
test
dec
add
mov
xor
std
mov
lret
loopne
pop
js
pop
fsub
lahf
jb
cli
push
fidivrl
jns
ja
loope
pop
arpl
loopne
jae
sbb
shlb
rolb
adc
push
cmc
imul
mov
xchg
jae
sbb
jg
pop
mov
or
daa
sahf
push
sbb
imul
aaa
les
or
hlt
mov
cs
or
pop
out
or
aad
mov
loop
cmp
fisttpll
sub
dec
lea
ret
mov
or
pop
insb
jbe
xlat
push
xchg
mov
mov
scas
inc
cltd
xchg
xchg
mov
cmp
mov
inc
bound
cmpsb
fs
popf
cltd
rcrl
xchg
imul
pop
xor
add
xchg
jae
mov
add
mov
push
lret
gs
int3
xor
mov
mov
jmp
add
jmp
test
int3
int3
pop
add
stos
test
repnz
adc
xchg
addr16
jl
and
and
adcl
cmpsb
dec
nop
push
jbe
subb
ja
jmp
xor
faddl
xchg
jg
repz
adc
into
ljmp
xchg
mov
inc
js
mov
cmp
dec
mov
xchg
cld
andl
mov
push
stos
sbb
mov
cmp
cmp
fldenv
outsl
aad
add
ljmp
pop
nop
mov
jo
lahf
ret
imul
outsl
sbb
fwait
rorl
aaa
leave
mov
inc
adc
adc
adc
hlt
mov
pop
loope
outsl
pop
pop
mov
mov
jo
jne
insl
jp
sbb
aaa
pop
cmpsl
iret
xchg
nop
dec
xor
xchg
in
inc
xor
sahf
outsl
lret
lock
xchg
lods
inc
mov
ds
adc
sbb
jmp
pop
push
dec
push
out
mov
jmp
xor
call
xchg
int3
push
shrl
mov
lods
popf
jle
aas
ljmp
mov
out
mov
ret
sbb
std
scas
jg
std
fwait
sahf
rorb
ljmp
xor
pop
lret
mov
imull
add
push
sbb
xchg
pop
call
mov
test
add
pop
movsl
add
mov
faddl
mov
pop
imulb
dec
test
int3
xchg
push
xorb
or
xchg
inc
mov
insb
test
in
shr
xor
jno
outsb
pop
movsb
adc
and
test
out
insb
lret
mov
add
int3
faddl
adc
inc
mov
xor
push
cmp
push
cltd
repnz
inc
sbb
xchg
test
pusha
scas
inc
pop
sub
lea
push
test
mov
mov
sbb
and
xchg
mov
ficomps
xchg
sub
fisubrs
push
scas
xor
sbb
repnz
adc
lock
sbb
jns
push
pusha
fwait
adc
push
inc
sbb
inc
gs
xchg
lcall
inc
ds
notb
sub
adc
add
xchg
and
fistpll
push
sub
and
add
lret
pop
pop
notl
data16
xor
outsl
mov
xchg
popl
inc
cmp
adc
xor
cmp
jb
cli
sbb
enter
xor
and
mov
fsubrs
mov
xor
fcmovb
jg
pop
dec
fcmove
cmp
stos
push
mov
pop
dec
adc
mov
mov
sti
mov
pop
sbb
adc
repz
lret
repnz
loop
sub
jl
mov
lds
pop
xor
add
out
idivb
mov
imul
pushf
sbb
jge
je
jne
mov
and
cmp
sub
jb
mov
mov
xchg
push
jbe
mov
mov
and
jge
xor
mov
adc
cwtl
mov
outsl
xor
ds
ud0
movsl
insl
loope
adc
jle
addr16
repnz
sti
and
jl
xchg
testb
shlb
popa
mov
fsubrl
push
dec
dec
sub
in
push
adc
loop
push
ja
ret
adc
les
bound
lahf
ja
xor
dec
mov
cmp
mov
packssdw
repnz
cmp
sub
popa
pop
cmp
popl
push
adc
mov
outsl
leave
loope
mov
test
inc
mov
data16
sub
test
test
cmp
fisubs
out
aad
xchg
push
jecxz
cmp
xchg
lds
xchg
lret
lock
hlt
mov
stc
adc
xor
add
ja
xchg
dec
pop
sub
data16
movsl
lods
push
movsl
add
xorl
add
mov
hlt
pop
xor
lret
cmp
outsb
xor
dec
sub
mov
ja
scas
mov
outsl
and
inc
adc
and
sub
xchg
push
repnz
mov
arpl
cmp
outsl
shl
pop
nop
add
ss
ja
lret
insb
push
mov
add
xor
cmp
cli
sarl
xor
push
pop
or
push
frstor
shrl
loope
out
cli
mov
jns
push
push
push
mov
dec
movsb
push
into
jecxz
sbb
push
dec
jo
push
test
inc
movsb
mov
cmc
fldl
popf
ror
test
outsl
lret
popa
jp
sub
ljmp
daa
fdivrs
sbb
pop
mov
pop
decl
inc
sub
mov
sahf
xor
mov
insb
aas
mov
push
ds
or
push
ja
pushf
icebp
inc
aad
into
dec
sub
mov
fwait
insl
mov
inc
jp
or
fsubl
cmp
dec
in
cmp
std
pop
inc
fists
xor
test
mov
mov
adc
or
xchg
add
xchg
inc
insb
or
cmp
inc
int
ljmp
sbb
push
loope
in
xchg
pop
add
xor
das
inc
sub
add
pop
cltd
pop
push
pusha
aad
ds
jbe
adc
pushf
push
sbb
push
or
adc
rclb
pop
push
mov
shl
loopne
aas
xor
adc
or
in
cltd
fs
repnz
mov
lea
mov
mov
aas
mov
lret
out
call
sub
inc
in
push
xchg
mov
test
inc
fldt
xor
jg
push
lcall
cmp
dec
imul
mov
xlat
or
fisubrl
xchg
stos
icebp
stos
mov
cmp
mov
pop
jl
dec
inc
xchg
and
pusha
fwait
jnp
sbb
test
test
stos
aad
xchg
add
mov
imul
push
lds
mov
dec
xchg
pushf
inc
xor
cmp
stos
adc
cld
push
sbb
sub
fstl
lcall
inc
jge
adc
stos
icebp
add
pop
lret
push
fldl
sbb
mov
outsl
adc
inc
pop
stos
sub
daa
adc
push
push
repz
pop
push
xchg
lea
add
dec
cmp
mov
and
add
daa
sbb
test
mov
fildl
adc
pop
call
je
dec
call
cld
jl
ficoml
sbb
push
dec
sbb
rclb
mov
jmp
and
cmp
add
adc
dec
push
sub
fisttpll
out
pop
lcall
in
jno
popa
dec
lret
jg
sub
jae
dec
ret
mov
xor
popf
sarb
dec
aad
fadd
je
pop
loopne
nop
cld
fimuls
xchg
mov
xchg
xchg
mov
xchg
lds
loope
or
lods
adcl
lret
stos
in
mov
lret
jl
pop
mov
rcrl
adc
jge
add
jp
push
mov
addr16
shl
shrl
inc
cltd
pop
mov
jo
cmp
ja
sbb
cmpsl
mov
or
mov
adc
push
ret
shll
and
js
testb
mov
sub
or
jo
fmull
aaa
jne
pushf
mov
adc
push
sbb
les
adc
mov
jbe
cmp
test
in
push
pop
dec
je
mov
jecxz
aad
inc
jmp
fld
jne
arpl
rcl
mov
cmp
fisubrl
addl
and
cmpsb
nop
dec
add
gs
xchg
adc
imul
sahf
in
mov
adc
cmp
xchg
xor
jl
cmp
clc
inc
xchg
pop
jmp
int3
cld
dec
ja
jecxz
pop
nop
mov
mov
shlb
adc
xor
call
repnz
push
loopne
clc
in
icebp
sbb
and
aaa
cmp
adc
mov
je
dec
popa
cmp
xchg
out
dec
cmp
xor
xor
ss
in
fiadds
lods
push
xchg
dec
jno
ror
mov
int3
cmp
jnp
outsl
pop
pusha
xlat
ja
xor
xor
mov
and
daa
xor
push
jge
sbb
leave
add
and
pop
sub
insb
mov
inc
mov
xchg
add
loopne
jmp
cli
sub
adc
mov
xchg
sbb
repz
mov
daa
arpl
cmpsb
into
xchg
nop
test
and
pop
or
jecxz
js
dec
lods
test
mov
xor
out
mov
inc
mov
movsb
push
ret
lret
inc
xchg
add
mov
pop
mov
testb
sub
cmpsl
out
imul
cmpsb
push
fisttpl
adc
or
xchg
cld
aas
cltd
push
pop
mov
jno
sahf
push
sub
fwait
pop
outsl
test
cmp
cmp
mov
pop
push
and
mov
ja
dec
sbb
subb
inc
aas
loopne
fstl
out
faddl
mov
push
add
sbb
pushf
and
sub
stc
lahf
aas
mov
xchg
xor
cmp
adc
loope
jns,pn
jno
stos
les
clc
jno
rcll
xchg
lret
or
sub
andb
subb
push
jb
adc
pop
push
add
jns
or
mov
mov
push
loopne
ret
mov
cmp
cmp
lea
mov
cmp
and
cmp
out
aam
jmp
test
jne
push
pop
cltd
je
adc
rolb
popl
push
pop
or
dec
push
jno
dec
pop
mul
sbb
in
jge
repnz
fwait
xchg
inc
dec
scas
cld
mov
pop
pop
mov
add
std
into
out
mov
xor
sbb
lahf
add
jns
adc
stc
out
divb
test
sbb
outsl
popa
cmp
scas
xor
adc
push
mov
shl
imul
add
add
leave
jb
xchg
inc
xor
rcll
test
mov
mov
add
test
cmp
movsb
fstp
popf
clc
ret
jo
mov
cmp
inc
in
xor
sbb
test
ss
fistpl
fbld
hlt
rolb
jbe
test
rcl
loop
add
cmp
in
mov
cmp
push
adc
repz
sub
xchg
or
jb
xor
xorl
fisubrs
push
fyl2x
mov
xor
ss
es
das
inc
lods
adc
mov
scas
xor
sub
sub
push
dec
or
cltd
aad
ljmp
pop
or
idiv
sahf
les
cmp
incb
push
rorb
cli
adc
xchg
lods
push
loop
sbb
fcoms
enter
cmp
xchg
mov
lcall
cld
lods
stos
mov
repz
mov
push
lea
into
xchg
sbb
mov
lahf
cld
inc
push
std
fistpl
movsb
jo
call
push
push
scas
push
mov
out
addb
sarb
pop
xchg
lds
sub
insl
aam
pop
fistpll
aad
lock
sahf
sbb
cs
jae
dec
sub
pushf
sbb
jb
in
push
xchg
push
sbbl
hlt
daa
mov
ret
add
jb
sbb
or
aad
test
hlt
int3
in
inc
gs
inc
inc
and
rolb
inc
or
inc
cltd
stos
pop
pop
xor
ljmp
addr16
nop
addr16
jecxz
mov
mov
xchg
mov
repnz
sbbb
addr16
mov
sbb
cmp
cmp
ficomps
push
cmpsb
fwait
inc
cmpsb
sub
into
and
push
mov
jae
push
test
stos
sar
xchg
cltd
adc
js
add
add
push
loope
add
orl
arpl
rcrl
bound
push
add
loopne
loopne
fwait
movsl
mov
in
push
int
jb
fs
stos
mov
push
cwtl
cmp
jae
mov
xchg
inc
call
cmc
or
or
scas
sbb
addr16
xor
decb
ret
cmpsb
pop
mov
cmp
daa
cmp
insl
sub
xor
jbe
imul
movsb
inc
pop
popf
mov
xchg
xchg
data16
sbb
stos
cs
popf
hlt
stc
dec
iret
cld
arpl
cs
nop
shrb
fstl
fs
aad
mov
test
lods
lret
shlb
inc
dec
push
sub
rcrl
add
in
fsubs
cmpsb
aaa
mov
dec
and
stos
ror
fldt
cli
cli
ret
mov
and
loop
ds
pop
xchg
push
fdivl
and
mov
std
scas
cmp
cmpsb
inc
sub
sub
inc
xor
test
enter
in
adc
clc
lods
xchg
notb
sar
aas
inc
repz
mov
dec
stos
add
mov
pop
adc
or
testl
adc
push
sub
push
adc
xlat
lret
mov
xchg
out
mov
push
fmuls
into
xor
faddl
movsl
push
imul
jg
adc
fmuls
roll
xlat
je
int
aaa
add
dec
push
and
movsbl
pusha
scas
insl
aad
xchg
sub
int3
mov
insb
in
jbe
lods
cltd
xchg
add
push
pop
xor
lock
dec
push
xchg
loope
not
dec
xor
pop
cmp
jb,pn
jl
je
enter
leave
jecxz
pop
xchg
adc
mov
push
inc
repnz
shrb
incl
mov
popa
lret
mov
cmp
and
cmpsb
push
nop
sar
jp
jmp
cli
jp
add
mov
mov
cli
imul
push
into
inc
jb
jae
jne
test
mov
mov
jne
mov
sbb
dec
pop
push
fstps
loope
push
outsl
in
push
xor
mov
mov
cmp
add
xchg
mov
sbb
sbb
cmp
rclb
push
sbb
and
xchg
outsb
inc
lret
in
jb
mov
test
lds
xchg
push
mov
sbb
xchg
nop
cmc
sbb
add
mov
push
scas
sbb
push
incb
sub
mov
sar
sbb
mov
mov
fwait
and
orb
sbb
xor
scas
push
push
leave
xchg
jns
int
lcall
cld
lock
pop
cmc
lods
push
inc
jb
jl
xor
jns
xor
xor
or
into
imul
fnstsw
cmp
sub
adc
dec
adc
pushf
scas
movl
push
sub
add
and
or
jge
or
xor
ljmp
cmpsb
mov
lret
cmp
pop
add
popa
sub
mov
mov
cmpb
pop
inc
out
iret
mov
movsb
movsb
sbb
pusha
jo
push
movsl
push
insb
adc
pop
sub
stos
fnsave
push
mov
mov
es
stc
sub
clc
xor
sub
pop
repnz
idivb
jae
int
pop
add
sub
and
inc
adc
sub
in
ss
btr
rolb
adcl
imul
jne
aam
lds
addr16
mov
xchg
std
pop
movl
rorl
dec
in
out
xor
push
pusha
fisttps
out
pop
or
outsl
rcrb
fildll
gs
xor
push
hlt
inc
mov
sbb
loopne
test
stc
lcall
imul
cmp
test
inc
ja
sbb
aaa
inc
in
jmp
pop
pop
push
dec
xchg
push
pop
mov
mov
adc
int
or
pop
jne
je
mov
enter
orb
mov
dec
loope
loop
xor
dec
frstor
ljmp
stc
out
jno
cmpsb
enter
popa
aaa
jmp
out
adc
rcr
loop
pop
xchg
sub
sbb
mov
int
sbb
pop
mov
dec
movsl
sub
xchg
lahf
xchg
pop
add
iret
out
daa
xchg
sahf
xchg
sahf
in
cmp
dec
outsb
sub
inc
fmul
ds
sbb
cmc
xorl
ret
and
aas
add
les
lret
rcr
cmpsl
cmp
fcoms
cmp
lahf
inc
lds
push
mov
shll
xchg
cmp
push
sbb
out
add
xchg
and
icebp
inc
cltd
push
out
cmp
fisubrl
jl
xor
pop
dec
and
pop
test
xchg
pop
dec
call
fbstp
pop
inc
in
dec
inc
leave
outsl
and
scas
lahf
leave
mov
cmp
idivl
mov
out
adc
adc
mov
pop
sub
cmc
cmp
call
cmp
stc
aad
arpl
icebp
pop
jo
mov
fidivrl
push
and
push
movsb
sub
cwtl
sub
or
aaa
jle
jmp
inc
mov
sahf
je
cmove
xchg
mov
sbb
gs
test
mov
sbb
fldl
std
outsl
daa
pusha
fcoms
out
repz
push
mov
ret
cmpb
mov
cwtl
mov
cmp
les
inc
inc
push
cmpl
and
inc
in
enter
cmp
cmp
fdivl
add
cmp
popf
xchg
push
push
std
fcompl
push
jne
jb
fsubs
xchg
je
out
or
es
mov
shr
int3
in
out
jl
cmp
outsb
add
mov
incl
mov
icebp
popf
cltd
rcll
dec
xchg
js
call
cli
leave
fs
rclb
lret
fdivrl
push
and
mov
shll
cmpsl
mov
out
mov
or
fimuls
and
loopne
lahf
xchg
pushf
push
push
sbb
iret
nop
sub
sub
pop
xor
cwtl
enter
mov
fucom
push
xchg
mov
movsl
movb
xchg
sub
pop
mov
repz
adc
mov
imul
xchg
xchg
xor
dec
dec
sbb
lds
icebp
outsb
add
jmp
fcoms
testl
cmp
inc
dec
hlt
lock
push
adc
mov
cmp
mov
andl
adc
xor
pop
out
inc
dec
fisubrs
or
out
mov
mov
adc
sbb
inc
adc
fldl
push
and
rcll
lods
cs
into
and
cmpsb
sahf
out
mov
xlat
pop
jne
sub
iret
sbb
adc
mov
adc
and
lods
pop
cmp
jmp
push
cli
cli
test
repz
neg
dec
cld
sub
sub
push
adc
icebp
add
mov
cmp
pop
sub
mov
push
inc
jge
data16
scas
test
sbb
test
popa
mov
pop
xor
bound
cmpsl
sub
pop
xor
sarl
cld
fcoml
lock
mov
mov
movsb
lea
sti
push
push
inc
loope
push
push
cmpsl
xchg
jae
jecxz
dec
aas
das
mov
icebp
inc
pop
mov
in
sub
xchg
das
mov
loop
cs
sub
sub
xor
nop
adc
pop
mov
loope
lods
cmp
fyl2x
mov
jns
or
jmp
push
shl
jg
sbb
aas
outsl
xchg
xchg
pop
ljmp
and
xchg
xchg
je
sbb
sti
out
scas
add
and
or
out
lds
scas
cmc
add
fndisi(8087
xor
int3
xchg
ret
sub
dec
dec
ds
pop
sub
pop
dec
mov
xchg
mov
adc
mov
into
cwtl
and
mov
pop
js
movb
mov
imul
aam
mov
sub
jbe
repnz
sub
les
mov
aad
mov
bound
and
bound
bound
sbb
sbb
lods
lret
outsb
das
js
es
pop
mov
call
xchg
pop
jbe
and
int3
push
cld
jb
shrb
jmp
cld
inc
lods
mov
inc
adc
pop
or
divb
icebp
mov
inc
sbb
xchg
sbb
inc
aaa
jno
mov
clc
mov
inc
mov
adc
xor
jmp
dec
adc
xor
addr16
inc
sbb
mov
push
xor
popa
push
jo
pop
lea
mov
movsl
fmull
jp
aam
xor
lods
mul
scas
jnp
cmp
out
pop
xchg
dec
scas
push
sbb
stos
xchg
imul
lods
push
subps
popf
mov
pop
mov
sub
adc
sbbb
push
mov
push
lock
mov
lret
adc
adc
lock
sbb
in
fidivrl
repz
add
or
out
lds
inc
mov
dec
in
mov
hlt
loop
inc
mov
pop
subl
pop
ljmp
push
mov
daa
sahf
xchg
bound
sbb
pop
adc
imul
lea
add
dec
mov
test
mov
fsubl
adc
iret
pop
cwtl
adc
sub
adc
mov
dec
push
fildl
add
xor
add
ljmp
into
and
dec
lret
cld
cld
lret
jnp
sbb
push
xchg
xor
rclb
jecxz
push
fcom
dec
cmp
shl
fucomi
iret
out
jmp
dec
dec
mov
rcrl
add
sbb
push
mov
xor
rcl
push
mov
xchg
jp
mov
dec
xor
cltd
arpl
adc
popa
repnz
or
aas
sub
iret
jle
adc
data16
adc
and
lods
jno
sbb
and
fsubl
add
lods
mov
push
or
cmpsl
push
scas
cs
and
xor
adc
mov
xchg
es
or
adc
jmp
xchg
cmpsb
and
orl
aas
and
xchg
ds
mov
mov
aam
fdivl
pop
stos
cmp
push
pushf
movsb
out
dec
shll
push
jno
add
and
out
fwait
jl
scas
mov
test
out
mov
cmc
pop
xor
add
xchg
and
vunpcklps
nopl
fldcw
push
adc
add
mov
ret
lea
mov
fmuls
idivl
adc
subl
inc
sbb
fs
lock
pop
jg
inc
out
or
mov
outsl
inc
lahf
incl
inc
mov
jp
imul
rcl
ja
stc
sbb
shl
mov
mov
mov
shlb
sub
daa
out
xor
nop
call
push
xor
sar
lods
or
xchg
xchg
xchg
lock
out
in
dec
les
xchg
ret
in
sbb
sub
ret
or
repz
jae
fimull
movsb
fisubrs
adc
mov
cs
test
jle
cwtl
notl
dec
pop
in
int
cmpsb
jne
movsl
icebp
mov
mov
loope
gs
push
add
shrl
and
mov
adcl
shlb
mov
pop
xorl
mov
sti
mov
popf
enter
rcll
add
pop
lcall
cmp
aam
push
out
inc
pop
push
mov
iret
lahf
xor
cmp
lret
insl
std
and
jl,pn
add
imul
aad
fcomip
stos
jo
jl
je
cmp
pop
pop
lock
dec
mov
hlt
sahf
setnp
movsl
fistpll
inc
jge
sub
jle
pop
and
mov
and
call
xor
loop
call
xchg
fbstp
sbb
out
fcom
sub
jno
dec
enter
push
sub
mov
xor
imulb
rorl
add
xchg
mov
fdivrs
jae
les
push
sbb
pop
xor
add
je
mov
inc
push
fcomps
pop
les
and
mov
test
jae
test
insl
jecxz
loopne
dec
add
cmp
push
add
fdivs
and
leave
cmp
aad
jne
mov
repnz
call
push
push
loopne
push
repnz
pop
in
nop
mov
aas
dec
popf
popa
arpl
cld
loope
mov
xor
jo
imul
xor
lods
jmp
outsl
xchg
sub
xchg
loope
mov
jle
cwtl
nop
data16
ret
mov
arpl
icebp
xchg
adc
popf
test
cmpsb
iret
es
jecxz
fwait
addl
xchg
adc
test
in
push
out
ljmp
insl
push
movsl
jae
dec
mov
or
enter
cmp
mov
xchg
cmp
loope
add
mov
popf
data16
sahf
enter
rcl
push
cmp
sub
inc
mov
pop
add
mov
add
jmp
adcl
add
mov
dec
sub
mov
test
add
data16
jns
outsl
aad
popa
jae
sbb
add
insl
cbtw
mov
ror
nop
jb
mov
andb
pop
incb
dec
bound
and
mov
jb
mov
adc
rcll
out
mov
or
jle
fs
jb
rorl
sub
dec
mov
out
jnp
rcll
pop
fs
mov
mov
out
dec
adc
push
dec
fisubs
xchg
xorl
cmpsb
xlat
and
push
mov
jnp
xchg
pusha
mov
aas
subb
adc
inc
aam
mov
fcomps
push
push
daa
add
call
xchg
jp
xor
leave
pop
shrb
shrb
push
push
pop
call
ss
xchg
push
cwtl
inc
pop
push
xor
jb
adc
fs
xor
fs
inc
mov
movsb
aas
in
mov
xor
clc
mov
sbb
mov
aam
ljmp
jg
dec
ds
mov
shlb
dec
out
adc
cmp
push
test
aad
sub
mov
adc
shll
out
shl
hlt
lahf
xchg
inc
xor
mov
or
decl
cmp
mov
mov
das
sahf
add
mov
bound
movsl
sbb
push
pop
daa
lret
pop
sub
popf
adc
loop
fdivrs
mov
dec
lea
lret
and
icebp
inc
inc
clc
sbb
push
dec
pop
adc
orl
xchg
outsl
iret
lahf
fs
lea
adc
xor
and
jbe
les
loop
mov
adc
fchs
pop
mov
lock
lea
lock
push
push
stos
mov
adc
sbb
dec
pop
popf
bound
add
sahf
shll
mov
xchg
push
xchg
cmp
iret
and
shrb
push
icebp
stos
xchg
pop
pop
test
adc
insl
imul
adc
xor
out
insl
xor
sub
xchg
test
push
shrb
ret
jmp
test
mov
outsb
mov
testl
sbb
mov
lock
pop
orl
or
and
sbb
ret
dec
popa
pop
dec
cmpsb
shl
dec
movsl
pop
pushf
fldt
and
mov
mov
adc
dec
ds
stos
jae
add
push
mov
mov
in
stos
fldl
gs
xchg
test
addr16
or
test
loopne
sub
mul
das
lods
idivl
push
std
je
ds
test
fsubl
stos
pop
jae
mov
cmp
sahf
fisubs
shr
pop
aas
ss
daa
andl
mov
call
in
sbb
add
dec
push
add
sahf
test
xchg
adc
mov
push
cs
pop
cmp
sub
dec
test
pusha
in
cmpsl
out
stos
xlat
jmp
fbstp
lods
cmp
sub
sbb
ret
dec
mov
mov
lcall
add
mov
ds
mov
push
stos
xchg
std
loop
scas
mov
enter
inc
inc
sar
push
push
push
enter
int3
xchg
cmpsb
cld
sbb
inc
lret
mov
lds
xchg
dec
and
mov
dec
je
lock
ljmp
push
jmp
pop
add
std
or
lret
or
sub
cmp
insl
daa
cmc
js
loop
stc
xor
xor
fidivrs
cmpsb
cmpb
and
xor
or
ds
mov
mov
out
add
loope
add
push
scas
sub
mov
testb
xchg
nop
inc
into
loope
cmpl
sub
mov
leave
xchg
mov
or
js
jmp
pop
shll
pop
inc
std
adc
aad
mov
cmp
inc
scas
enter
or
pop
lods
dec
lret
jmp
pushl
test
xor
sbb
pop
sbb
lods
fsubr
mov
push
negb
test
cmp
mov
mov
jl
xchg
inc
lea
insl
adc
xchg
push
test
sub
pop
clc
cmp
xchg
inc
imul
push
fistpll
in
xchg
add
pop
sbb
cmpsb
insl
xchg
jle
jnp
cmp
push
dec
mov
pop
fisttpl
test
or
jl
push
out
jle
sahf
leave
aas
mov
jo
gs
sbb
shrb
lods
jecxz
or
dec
imul
jg
cmc
jp
inc
cmp
pop
mov
sbb
xchg
ja
addr16
xchg
sub
or
push
and
cmp
jl
int
js
lds
fstps
push
jbe
inc
inc
cli
daa
popa
sahf
iret
inc
frstor
das
scas
lahf
mov
cmp
cmpsl
xchg
notb
lea
cmpsb
movsl
adc
iret
jae
pushf
mov
xchg
jmp
push
stc
fdiv
int
stc
clc
and
inc
cld
sahf
sub
ffreep
rorl
adc
mov
or
pop
into
movsb
shll
stc
cwtl
pop
pushf
stc
dec
std
xor
mov
add
inc
loop
or
jp
xchg
insb
sub
push
cmp
adc
and
insl
mov
divb
add
mov
dec
pop
pop
out
aad
inc
adc
cmp
sub
xor
mov
sbb
call
jns
or
push
push
shl
mov
roll
dec
mov
adc
std
lods
xor
xor
add
shlb
ljmp
ficoml
add
aam
jmp
mov
js
push
dec
inc
in
push
mov
mov
aaa
lea
push
mov
xor
push
test
jmp
dec
and
dec
xchg
xor
and
stos
out
pop
bound
push
test
repz
aam
sub
pop
sub
dec
xor
adc
cli
fcompl
daa
cmp
pop
jae
push
rcrl
cld
pushl
orl
push
add
imul
fimuls
repz
scas
sub
fistpll
or
push
lret
sub
mov
sbb
mov
sbb
jge
jecxz
or
xchg
mov
jbe
mov
fsubp
lock
frstor
sub
mov
jo
decb
mov
in
das
mov
gs
jnp
pop
shrb
add
cli
das
xchg
or
dec
sub
or
addl
jae
jp
outsb
mov
test
fists
inc
fcomps
dec
xchg
mov
xchg
cmp
jbe
aad
in
imul
adc
movsb
repnz
and
sbb
adc
mov
nop
push
sub
jg
lock
movsl
xchg
rolb
out
test
or
mov
dec
sbb
jnp
sbb
inc
push
leave
mov
jnp
jae
mov
cli
mov
fldenv
or
mov
inc
hlt
sbb
nop
xor
xchg
pop
sbb
jg
loopne
lahf
pop
pop
pusha
add
xchg
call
xor
mov
in
pop
xchg
adc
jo
mov
sbb
and
shlb
push
fs
add
loopne
hlt
loopne
aaa
xor
add
jb
cmp
sub
xor
pushf
push
or
sbb
mov
pop
lods
sbb
lret
aas
loope
xor
mov
xor
rorb
add
dec
mov
lods
ret
pop
adc
inc
es
jle
xchg
in
fwait
ret
xchg
mov
lret
lods
jmp
lret
dec
xor
inc
mov
cmp
ds
fwait
pushf
enter
pushf
xchg
push
jl
jge
cmp
movsb
fwait
insb
mov
cmc
leave
lods
add
xchg
push
cmp
mov
mov
rcl
push
clc
push
push
push
push
negl
bndstx
scas
push
mov
test
or
orb
stos
pop
outsl
pop
fcoms
out
inc
sti
je
sub
adc
sbb
add
inc
push
gs
mov
jb
xchg
das
imul
mov
fisubrs
mov
pushf
add
fcomps
int3
pop
ret
xor
call
in
xorb
jns
shlb
cmp
mov
test
mov
popa
cmpsb
out
lret
add
in
cltd
and
xchg
mov
jae
fdivp
sbbb
clc
pop
into
jb
fs
and
das
push
mov
lods
cmpb
lret
pop
push
mov
xchg
idivl
mov
leave
repnz
movsb
notl
arpl
pusha
push
mov
sub
cmp
mov
imul
ss
fdivl
sbb
out
pop
test
mov
in
mov
jg
les
fs
mov
lods
loop
shlb
cmc
inc
cmp
ss
jb
ficoml
cmp
add
jmp
movsb
leave
xchg
test
or
mov
jno
pop
adc
mov
bound
cmp
xor
xchg
jge
nop
add
lods
mov
or
dec
jno
mov
shll
mov
lahf
pusha
ss
xor
pop
sub
push
add
sbb
xor
mov
add
fs
inc
frstor
mov
mov
or
negl
popf
cmc
xchg
dec
pop
mov
repz
nop
or
test
pop
pop
mov
arpl
xor
loop
mov
push
loop
xchg
cmp
push
lret
int
in
xchg
xor
or
add
jmp
mov
push
jp
jb
inc
repz
fwait
mov
aas
cmp
pushf
push
add
push
or
ds
dec
daa
cmc
mov
lods
mov
decl
out
sahf
xchg
daa
mov
jns
pop
daa
test
xor
aad
in
test
cmpsb
push
in
in
cltd
lahf
cli
icebp
fwait
mov
jmp
lods
mov
fbld
lcall
pop
mov
mov
sbb
mov
stos
addb
imul
sbb
jp
repnz
jmp
cmpsb
add
inc
stos
movsl
add
adc
push
fistpl
sti
insl
pop
push
inc
mov
jns
pop
mov
fldl
mov
lcall
and
xor
cmpl
or
lahf
or
jge
rolb
inc
mov
rol
rclb
dec
xchg
fcomps
mov
cwtl
mov
mov
sub
xor
push
push
jl
jl
in
jmp
jp
shr
sub
dec
fimuls
sub
pop
bound
rolb
sbb
cmp
loope
test
lods
in
pop
inc
jae
lret
je
loopne
popf
sbb
sarl
loopnew
daa
fidivs
lret
rorl
popf
je
xchg
xchg
or
cmc
sbb
dec
inc
popa
data16
dec
shrl
xor
into
push
xchg
subb
xchg
shll
or
xor
in
or
add
xchg
adc
mov
add
jp
mov
lcall
adc
or
push
hlt
loop
loopne
in
xorl
push
pusha
push
jecxz
mov
das
hlt
nop
mov
xor
notb
adc
lods
push
add
jnp
cmp
cltd
jge
mov
pushw
pop
lds
int3
clc
aas
lret
push
jle
mov
in
gs
cmpxchg8b
int3
push
add
shrl
xchg
in
out
pop
jle
cmp
cmpsb
push
sbb
xor
mov
dec
lret
pop
jae
or
cmp
dec
scas
leave
andl
mov
dec
test
jmp
adc
jbe
iret
fstps
inc
mov
ret
movsb
ret
inc
xchg
push
and
or
jl
fidivs
iret
mov
dec
punpckhdq
arpl
lds
frstor
mov
mov
andb
dec
mov
sbb
pop
sub
test
insb
scas
mov
mov
stc
xor
xor
xor
adc
clc
mov
mov
out
or
scas
inc
or
push
inc
out
push
jp
jns
prefetch
test
aad
jae
push
and
ss
mov
inc
mov
pop
into
inc
adc
dec
mov
adc
ja
cmp
mov
cmp
adc
sub
ja
or
dec
mov
nop
push
scas
ss
imul
in
add
lock
or
inc
pushf
xor
out
jo
jl
movsb
fwait
outsb
xchg
pop
push
add
cltd
lea
add
add
hlt
hlt
ficomps
push
or
inc
mov
mov
mov
jo
mov
outsl
or
xchg
enter
mov
cmp
test
jle
mov
sahf
xor
outsl
inc
outsb
subb
add
fstpl
or
jb
mov
mov
jno
xor
add
cs
mov
push
xchg
or
xor
orl
xchg
arpl
mov
popf
jecxz
xchg
pop
popf
cmp
cld
pushf
mov
add
mov
pushf
jecxz
gs
jns
and
adc
cmpsb
jb
xchg
testb
ret
cli
mov
mov
fxch
push
dec
fisttps
inc
cmp
push
add
xorb
push
xchg
jno
repnz
loop
stc
loope
pop
adc
pop
and
sarl
clc
cmpsb
lret
xor
mov
and
mov
adc
lret
movsl
sub
pop
decl
sub
sti
movsl
ret
xor
push
jmp
aas
loop
sub
ljmp
dec
fs
mov
inc
push
pop
pushf
xchg
test
xchg
xchg
stos
mov
sub
test
and
subl
xchg
cs
xchg
lods
xor
push
jge
pushf
adc
aaa
dec
mov
mov
lcall
fldt
addr16
fidivrs
lods
mov
cmp
cld
cli
or
stos
aad
shr
int
jecxz
xlat
xlat
cmc
dec
adc
sti
push
lcall
mov
out
orb
mov
nop
sub
cmp
mov
and
insb
repz
lds
add
std
lahf
pop
int3
xlat
mov
rcl
lea
mov
lock
push
scas
sbb
xchg
xor
pop
arpl
sbb
aas
jmp
mov
xchg
ror
xchg
pop
loope
cmp
pop
icebp
cmp
push
mov
sub
in
jno
lods
fsubl
test
shll
push
popl
rep
mov
xor
pop
mov
out
push
jg
inc
pusha
test
insl
jge
mov
leave
lret
xchg
imul
push
popa
fisttpll
inc
xchg
stos
fbstp
mov
clc
pusha
mov
xchg
or
dec
ret
cltd
xor
sbb
sub
jmp
popf
inc
cmp
call
push
mov
jmp
out
mov
imul
inc
lretw
cli
ja
push
outsl
inc
pop
and
jecxz
jg
stos
mov
mov
or
push
daa
xchg
sub
cmpsb
mov
mov
xchg
inc
in
ficoms
inc
out
and
dec
data16
in
addl
pop
push
dec
mov
or
mov
fstp
movaps
in
lret
mov
push
idiv
lods
mov
mov
sbb
pop
in
js
adc
call
cmpsb
enter
out
push
mov
int
mov
loope
lea
mov
loop
mov
adc
xor
imul
rolb
mov
jae
add
cltd
bound
cmp
cmpsl
cmp
filds
fsts
bnd
inc
push
push
pop
or
fwait
aam
ja,pn
cmp
cmp
and
lcall
sahf
add
mov
pop
jbe
add
jae
aas
dec
xor
lcall
adc
jne
inc
mov
pop
cwtl
xor
xchg
fwait
mov
add
imul
inc
push
adc
adc
or
cmp
in
pop
push
dec
fprem
popf
and
dec
sub
aam
test
ret
xlat
scas
insb
inc
call
cs
mov
leave
cmc
pop
fnstsw
mov
cs
iret
mov
pop
inc
add
or
or
psraw
out
adc
rcl
out
rorb
jmp
aam
push
mov
int3
sahf
push
add
add
push
popf
mov
inc
cmp
mov
dec
pop
pushf
dec
sar
test
adc
shrb
movsl
aad
repz
add
jle
clc
loope
pop
mov
xor
scas
adc
push
in
jecxz
sbb
fidivs
cmp
and
sub
mov
aas
mov
lea
xchg
dec
fcoml
sub
mov
outsb
jo
cld
and
es
fisttps
movsb
ds
sti
aas
sub
imul
jne
sbb
add
in
lds
push
sbb
push
push
cwtl
sbb
mov
push
std
and
add
in
mov
xor
push
and
push
add
fs
dec
or
xlat
xorl
sahf
mov
jb
jl
fimuls
in
aaa
out
adc
inc
mov
dec
les
sar
scas
cwtl
xor
or
inc
and
fidivl
inc
and
test
mov
mov
xchg
adc
test
jmp
stos
push
test
lods
sbb
xchg
repz
jl
test
lock
cmc
aam
xchg
push
andb
mov
jle
clc
sbb
lods
cmp
popf
mov
pop
mov
push
sahf
add
repz
dec
shll
daa
jl
mov
test
fisubs
xor
jle
mov
shl
cltd
pushf
push
repz
mov
das
test
inc
popa
sahf
add
add
jae
or
mov
mov
xchg
loop
adcb
xchg
mov
in
pop
nopl
jecxz
fiadds
lcall
add
mov
lock
sti
mov
into
loope
mov
test
adcb
sub
adc
jae
repnz
jl
add
sub
mov
scas
xchg
push
outsb
clc
cs
popf
jno
orb
mov
test
int
aaa
sbb
es
and
int
sbb
inc
xchg
repnz
out
xchg
push
cmp
pop
sub
cmpsb
fdivrp
dec
inc
loope
in
and
jmp
stos
lods
hlt
out
cmc
nop
lods
out
dec
in
mov
jnp
xchg
cmc
mov
lods
loope
out
fst
sub
int
cli
adcl
mov
mov
aaa
popf
dec
gs
add
push
or
sahf
xor
mov
mov
push
pusha
pop
dec
dec
pusha
push
cmp
mov
sub
repnz
lea
shll
cmp
mov
add
pop
cmp
iret
je
or
sub
sbb
inc
mov
inc
or
jae
sbb
inc
jb
sti
rcl
mov
and
mov
xor
dec
mov
jbe
sbb
inc
mov
inc
out
adc
or
std
mov
ja
bound
loop
sub
jb
jl
inc
xchg
jae
aad
cmp
cwtl
jnp
fmull
adc
scas
and
clc
loop
out
mov
lock
and
cltd
jge
sbb
mov
jns
sahf
sbb
addr16
xlat
xor
pop
leave
aad
push
shlb
dec
ds
jecxz
pushf
idivb
pop
in
cmp
cltd
dec
test
jo
cmpsl
fldt
cmovne
cmpsl
add
and
add
ss
repnz
movsl
xchg
pop
sti
pop
inc
sarl
inc
push
push
and
loopne
std
sti
rclb
cmc
and
or
inc
dec
out
push
fs
stc
inc
fistpll
arpl
insb
pop
lahf
mov
lcall
orb
lcall
in
in
adc
pop
out
cmpsl
fildll
jmp
lahf
jg
stc
jmp
jl
movsl
ja
ret
test
lods
or
cwtl
adc
adc
push
cwtl
jb
movsl
movsb
sbb
stc
ret
push
test
adc
and
outsl
jne
fs
sub
push
iret
jmp
mov
cmp
loope
dec
xchg
inc
std
das
je
in
sbb
jg
int3
fdecstp
jne
fstps
sub
jmp
pusha
popa
inc
push
xchg
add
mov
push
mov
push
cmp
movsb
push
xor
repnz
loop
popl
mov
cmpsb
aaa
pop
sbb
in
add
mov
jbe
sbb
cmp
xchg
ja
fwait
and
fcompp
xor
in
sub
add
xchg
mov
mul
rorb
test
sub
or
addr16
jae
inc
push
mov
mov
jne
mov
lret
in
repz
test
mov
pop
nop
cmc
in
in
xlat
addr16
loop
loop
mov
inc
fiadds
negl
cwtl
pop
mov
addr16
int3
pushf
dec
stos
mov
or
jns
jnp
sub
movsl
rcrb
push
xchg
imul
arpl
adc
arpl
loop
pop
into
jl
stos
das
jne
fldcw
cmpsl
mov
in
fnstsw
adc
ljmp
sub
dec
cltd
lods
push
je
pop
shll
mov
stc
inc
rcl
add
adc
push
and
testl
imul
shr
jmp
dec
or
jp
push
icebp
and
push
hlt
aas
xchg
leave
sti
cmp
jne
jp
mov
std
push
xchg
adc
adc
test
fiadds
lds
jne
cwtl
xchg
cmp
in
hlt
out
inc
ds
repz
mov
pop
dec
add
rolb
js
int3
inc
push
jno
inc
or
sar
adc
pop
rcll
les
or
addr16
iret
cmp
bound
rcrl
sarl
mov
push
aaa
mov
mov
add
mov
or
scas
cmpsb
rcl
cltd
push
dec
aas
outsb
mov
mov
shl
add
mov
inc
add
shlb
inc
mov
movsl
sub
int
insb
popf
mov
insl
mov
cmp
outsb
sbb
pop
ljmp
push
cwtl
and
out
xchg
lea
jge
dec
loopne
pop
mov
dec
pop
addr16
popf
sarl
lock
mov
adc
into
fucomp
cld
ds
jmp
inc
int
add
pop
jnp
mov
mov
lods
adc
cmp
cmpsb
test
pop
imul
sub
or
test
insl
decb
cli
into
pop
enter
cltd
jl
or
movsb
iret
xor
fbstp
mov
mov
inc
out
lods
leave
dec
sub
rol
fdivr
xchg
hlt
movsb
or
aaa
cli
mov
fsub
cmp
and
idivl
repnz
jmp
inc
xchg
mov
aad
cmp
scas
xor
scas
or
pusha
sar
out
push
inc
xorb
mov
out
adc
cmp
pusha
fistpll
iret
push
and
cmpsl
sub
cmp
xchg
leave
loope
pop
dec
mov
lret
pop
xchg
mov
sub
dec
and
dec
mov
mov
enter
lods
loop
fstpt
js
stc
mov
cmp
dec
jmp
pop
sti
push
xchg
hlt
in
xor
cli
sub
push
cmp
lds
ret
leave
sbb
std
hlt
dec
xchg
inc
pop
bound
test
sbb
inc
lea
xchg
sti
ret
xor
lret
fstpt
jmp
sbb
pop
cwtl
sahf
xor
in
aas
mov
jo
mov
inc
inc
adcl
jmp
pusha
lods
mov
imul
lahf
ret
call
fistpl
jbe
cmp
out
rolb
lds
std
ficoms
xchg
aad
sbb
imul
fists
int
push
lcall
sub
pop
xlat
psllw
mov
jmp
xchg
mov
cmp
sub
pop
jns
cmp
mov
movsl
push
shlb
cmp
mov
or
aaa
adc
mov
push
push
sub
mov
sahf
inc
imul
scas
push
jno
test
xchg
sbb
dec
fmull
or
fldt
cmp
popf
out
sbb
mov
sub
lods
out
lds
hlt
data16
adcb
cwtl
xlat
mov
outsb
jmp
lds
scas
xor
aas
data16
ds
scas
jg
out
je
dec
jl
cmpsb
inc
xor
sub
imull
pop
mov
idivl
jne
ud1
dec
push
outsl
sub
test
pushf
or
ja
dec
xchg
dec
mov
lret
jmp
or
stos
sub
jle
mov
rolb
lods
xor
out
rcrb
inc
lds
je
mov
mov
ds
in
sub
cmc
outsl
pushaw
lock
jns
addr16
push
dec
mov
jge
inc
dec
clc
or
jbe
mov
gs
sbb
outsl
fs
sub
dec
inc
or
mov
and
pushf
stos
out
xchg
pop
jno
or
fdivs
clc
mov
and
clc
sub
fsubl
dec
icebp
in
xor
cmp
outsl
inc
repz
mov
sbb
cltd
call
roll
mov
pushf
dec
loope
xor
or
xor
jmp
pop
cltd
adc
or
rcrb
hlt
test
pop
mov
xchg
mov
push
jno
into
xchg
je
push
rorl
xchg
fldcw
scas
mov
cmpsb
inc
adc
add
nop
nop
mov
cmp
rorb
jo
test
rdmsr
repz
pop
mov
adc
lods
in
lods
das
scas
and
xchg
int
mov
ja
in
cwtl
cmp
inc
add
fisttpl
push
push
and
xchg
imul
add
xchg
mov
call
adc
bound
jp
movsl
mov
sub
pop
shll
popf
xor
or
addr16
out
fdivrp
sahf
ljmp
xchg
jne
sbb
iret
fcmovnu
cmp
or
and
pop
xor
add
shlb
inc
push
es
xor
xchg
cli
xchg
xor
jae
in
mov
xchg
jl
adc
mov
icebp
rcrl
mov
sbb
negb
jnp
mov
jle
mov
stc
pusha
out
xor
mov
aas
inc
std
mov
repz
xlat
pop
into
sub
mov
jmp
ss
call
out
and
xor
xchg
fs
add
inc
and
ds
inc
imul
arpl
mov
mov
in
and
adc
repnz
or
icebp
lret
inc
jp
sbb
mov
jb
pop
mov
or
stc
or
stc
push
insb
mov
out
xchg
xchg
xchg
lret
jl
xor
sub
punpckhbw
movsb
imul
imul
pop
push
jo
scas
push
adc
stos
jae
leave
jp
test
mov
sub
pop
punpcklbw
add
test
mov
xchg
sub
cli
std
fcomip
inc
and
or
loopne
jmp
popa
lock
jmp
and
lea
xor
rcl
push
or
xor
jnp
jg
mov
popf
mov
sub
scas
cmp
mov
sub
daa
sti
pop
div
xchg
push
or
mov
xchg
push
adc
ret
pusha
popf
scas
aam
mov
mov
jmp
push
imul
insb
mov
sbb
pop
jnp
xchg
std
test
push
push
popf
dec
push
arpl
jg
movsl
push
mov
adc
sub
daa
rcll
xchg
sbb
lock
add
sub
sbb
mov
adc
dec
cmc
lods
adc
sbb
stc
pop
pop
lock
out
out
fisttpl
mov
bound
test
fnsave
cmpsb
lcall
sahf
inc
xchg
cmp
test
mov
test
shll
push
ficoms
in
lea
std
jbe
stos
lock
push
xchg
ret
pop
and
and
sub
cs
mov
jnp
pop
add
mov
sbb
pop
cwtl
mov
adc
pop
and
int3
lret
sbb
push
xor
out
out
or
push
mov
mov
out
cmpsl
jbe
jmp
lods
fsubrs
cwtl
jmp
cmpsb
sub
outsl
add
jge
outsb
mov
cmpsl
inc
pop
pop
jge
in
cmp
gs
pop
rol
popf
and
aam
popf
mov
mov
push
not
ja
stos
xor
adc
push
dec
add
es
pop
aam
sbb
inc
cmp
cmpsb
mov
jl
or
xchg
popa
adc
addb
jo
rcr
and
js
into
aaa
lret
mov
cld
adc
rcll
jbe
lods
sarb
adc
cld
cmp
icebp
loop
jg
stc
jg
and
sbb
cmp
les
lea
mov
divl
shrb
jp
or
shll
sarb
enter
hlt
je
inc
pop
mov
and
xchg
hlt
pop
insb
xor
je
mov
and
movsb
cli
sbb
jg
sub
jle
sbb
mov
sbb
int
out
mov
ds
mov
pop
imul
jmp
in
daa
dec
das
dec
loop
jne
call
pop
push
sarl
loop
hlt
jge,pn
sub
jge
jno
pop
cmp
cmpsl
cmp
adc
mov
xchg
push
imul
lods
cld
push
rolb
into
sub
cmp
mov
movsb
int3
adc
or
add
outsl
out
and
add
dec
dec
and
xor
bnd
sahf
sub
xchg
dec
or
mov
enter
sbb
mov
pop
fldcw
push
xchg
jp
push
fildll
cs
movsb
dec
xor
std
int
test
xor
ljmp
test
cmp
sahf
and
jg
push
inc
stc
sub
push
jb
jno
lods
mov
jno
mov
push
in
and
ss
divl
insb
dec
mov
add
mov
cld
outsl
cmc
xchg
sub
mov
ja
scas
sbb
mov
pop
sbb
shrb
mov
loopne
add
sub
mov
jbe
pop
and
cli
lock
push
push
or
sub
scas
dec
xchg
pop
mov
js
or
pusha
pop
bound
frstor
rclb
xchg
jnp
mov
repnz
leave
fadd
scas
adc
pop
add
ljmp
mov
lock
shrb
test
cmp
mov
or
adc
nop
mov
test
lock
mov
push
pop
xchg
pop
pop
daa
bound
and
scas
mov
rcll
mov
jmp
push
rol
mov
das
das
pop
lret
mov
jbe
shrb
nop
iret
fwait
dec
sbb
imul
xchg
adcb
aam
cmp
add
in
in
loope
sbb
cmpsb
leave
inc
repnz
data16
add
push
lea
lret
cmp
sahf
les
andl
add
push
push
loop
testb
mov
shll
loopne
jp
sbb
sub
stos
fdivrs
adc
pop
or
xor
cli
sub
ds
fdivrs
sbb
mov
mov
jo
cmp
popw
mov
add
jl
mov
daa
inc
into
push
sub
in
sbb
mov
lock
mov
pushl
jbe
lods
dec
pop
sub
outsb
or
mov
daa
and
lret
clc
mov
and
das
mov
cmp
mov
jns
sti
in
push
xor
inc
mov
les
loopne
scas
mov
je
push
mov
fsubrl
lock
leave
sahf
dec
inc
push
add
lods
xchg
lret
jbe
ret
push
add
and
mov
cmp
jns
rclb
out
adc
push
cmp
sbb
pop
inc
nop
test
sti
push
pop
in
mov
aam
ss
push
andb
lahf
mov
cmp
adc
sbb
xchg
mov
mov
fcmovnb
pop
mov
push
movsb
xchg
std
addr16
jno
dec
shrb
cmp
cld
push
mov
ret
dec
popf
push
shll
pop
cmc
xor
test
mov
stos
pop
cmpsb
cltd
incl
lret
inc
cmpsl
jae
xchg
repnz
or
sbb
and
xor
les
jl
orl
mov
clc
js
jmp
pushf
lret
addr16
cld
push
adc
dec
inc
cmp
xor
loope
ficompl
in
pop
adc
fistpll
cmp
ret
xchg
iret
or
outsb
push
and
xor
pusha
add
add
das
mov
cmp
pop
xchg
movsb
fbld
pop
mov
loope
loop
add
push
xchg
xor
xchg
outsb
stos
sub
xor
jle
rcll
xchg
lea
loop
push
fsubs
pop
cmp
or
in
xchg
add
lea
out
dec
inc
inc
and
push
xor
ljmp
orl
rorb
push
push
leave
pop
add
add
mov
idivb
and
adc
or
xchg
fisubl
pop
add
add
add
mov
aaa
sbb
mov
mov
dec
pop
jne
and
scas
sbb
ja
dec
lods
cmp
nop
jo
popf
pop
lcall
cltd
xor
dec
sbb
sarl
in
enter
jg
or
inc
sti
arpl
sbb
push
das
or
pop
stos
xchg
dec
pop
xor
pop
jg
and
push
neg
in
dec
out
shlb
mov
out
add
adc
addl
mov
subl
fs
lock
pop
sti
mov
mov
lahf
and
push
lret
pop
in
out
arpl
xlat
mov
jbe
add
mov
push
test
gs
leave
and
mov
inc
sub
inc
sub
fisttpll
inc
sbb
stos
fsubrs
repnz
mov
int
js
adcl
xchg
mov
mov
or
fmul
outsb
push
fsts
je
mov
pop
rol
cld
xchg
iret
incl
inc
iret
pop
call
pushf
push
outsl
addr16
mov
daa
loopne
nop
inc
call
mov
pusha
mov
dec
push
push
ds
js
sub
loop
sarl
xor
test
mov
sbb
mov
shrl
jecxz
int3
mov
gs
push
insl
cltd
pop
add
mov
add
mov
arpl
xor
inc
and
or
jmp
repnz
testl
test
mov
imul
dec
xchg
xchg
cmpb
xchg
gs
adc
push
or
lods
inc
lds
sbb
sahf
fucomp
jnp
or
out
lods
mov
iret
sti
sbb
insb
nop
xchg
push
mull
or
mov
data16
insb
fistpll
pushl
in
jo
or
movsl
xor
std
xor
lods
add
test
out
mov
dec
sbb
jp
aas
aam
scas
shll
fldcw
add
push
rcrb
pop
lods
push
adc
outsb
pop
repnz
lahf
push
push
xor
and
rcrb
shll
ret
pop
scas
xchg
subb
push
jmp
in
mov
push
imul
clc
repnz
or
push
mov
push
xor
adc
push
fdivl
scas
ds
push
and
movb
jmp
fnsave
pop
in
xor
cmp
cmp
sbb
inc
lret
shr
popa
clc
fidivrl
push
das
outsl
in
rcr
shrb
mov
cltd
cmpsb
sbb
push
test
xor
fwait
push
inc
cmp
push
out
adcb
aam
popf
out
ja
jge
ss
movsb
lret
sbb
dec
xor
stos
xchg
mov
sbb
push
stos
arpl
pop
dec
mov
xchg
push
pop
ss
mov
loope
or
fldt
dec
lcallw
pop
or
xlat
adc
sti
fs
add
adc
xorl
cmpsb
add
divb
pop
loopne
or
fs
mov
bound
cmp
push
cwtl
push
sbb
mov
shlb
enter
testl
add
cmp
inc
fisttpll
inc
mov
pusha
lahf
mov
sahf
movsl
cmp
sbbl
or
cmp
dec
jmp
cmp
call
mov
shrl
sbb
jl
or
jb
xchg
fdivr
cmp
xlat
mov
leave
add
dec
sarb
mov
sbb
mov
out
cmc
jl
int3
adc
fidivl
jmp
cmpsl
cmp
sbb
dec
add
lods
pop
mov
and
mov
into
imul
aas
xlat
in
fcoms
stos
adc
mov
push
roll
add
mov
cmp
imul
xlat
push
sbb
add
shr
and
jmp
xchg
test
push
or
push
les
lea
xor
inc
inc
xchg
subb
mov
jecxz
mov
lods
or
push
repz
jno
in
mov
out
clc
fwait
ljmp
lock
orb
mull
inc
push
xchg
rcr
in
imul
push
lds
pop
xor
dec
les
das
movsb
cmpsb
and
jae
jnp
cmpsb
iret
sbb
sub
jecxz
pop
in
dec
jle
and
aas
xchg
sub
jne
xchg
and
add
add
scas
fstps
xor
movsl
adc
arpl
pop
and
inc
pop
cmp
dec
cltd
jmp
insl
xor
jecxz
retw
add
fdivr
in
sbb
fldl
add
cmp
mov
xorl
jo
jp
out
push
push
movsl
inc
mov
sub
adc
call
and
sub
call
inc
int
add
fbstp
sub
and
xor
scas
jmp
loopne
jl
sub
mov
jbe
push
pushf
adc
xlat
fistl
or
push
js
xor
pop
fldenv
int
imulb
insb
rol
lock
cmp
and
cmp
push
or
test
ds
jmp
outsb
repnz
mov
jecxz
stos
sub
add
and
sub
out
cld
push
cmp
jae
shlb
inc
cmp
mov
mov
test
push
test
sbb
inc
mov
push
ds
add
leave
mov
and
lds
ret
sbb
mov
jne
shll
stos
js
push
mov
je
cmpsl
add
add
and
lock
fiadds
adc
xchg
addb
aam
and
inc
stc
cmp
adc
das
lcall
pop
aaa
movsl
mov
sub
inc
fcmovb
lock
mov
negl
lock
jecxz,pt
mulb
mov
imul
pop
fisubs
push
call
push
enter
imul
or
in
cmp
push
stc
cli
mov
sbb
aam
sub
push
dec
sub
pop
loop
fsts
aas
sbb
test
dec
outsb
xchg
xor
ljmp
pop
into
cltd
add
pushf
imul
sub
mov
mov
lock
divb
cmp
xor
and
dec
int3
pop
jmp
stos
pop
mov
or
into
sub
mov
jnp
ret
lods
leave
push
shld
add
nop
fcmovne
push
in
sahf
cli
pop
iret
and
jge
push
insl
lods
push
lds
add
fists
pop
fincstp
andl
mov
push
outsl
pop
pop
nop
and
imul
into
xchg
outsl
add
mov
rcr
jb
testb
jge
pop
pop
or
fnstenv
out
cld
lahf
push
xor
sub
jo
adc
cmc
out
fistl
leave
xchg
mov
mov
xchg
pop
daa
xchg
jns
ss
push
adc
mov
imul
jmp
sar
int
add
adc
xchg
adc
popf
mov
cli
test
or
push
idivl
addr16
lret
push
mov
loope
pop
push
mov
divl
aaa
sub
push
jb
dec
push
mov
jmp
push
stc
test
aaa
in
je
int3
push
fadds
add
sbb
jb
orl
cmp
push
xchg
xor
mov
adc
aaa
cld
test
loope
cltd
cmc
aaa
insb
cmp
mulb
mov
cmp
idiv
loopne
stos
out
enter
subb
push
out
mov
push
aad
cmpsl
jne
sub
push
adc
push
mov
pop
dec
add
mov
es
out
push
xchg
sub
data16
mov
jp
stos
lret
adc
adc
cmpsl
movsb
sub
fwait
pushf
inc
movsl
std
dec
xor
lret
sbb
xor
pop
push
test
lldt
add
jge
jb
dec
into
xchg
xor
fdivrl
rcll
and
repz
imul
stos
or
mov
fcom
sub
sbb
push
xacquire
imul
xor
or
jp
xchg
loop
dec
daa
dec
push
out
repnz
addb
enter
jo
test
inc
and
imul
jg
xor
cld
xchg
leave
hlt
mov
ljmp
test
mov
stc
add
lds
lcall
mov
pop
lock
push
iret
loop
iret
fs
pushf
fs
aas
lcall
frndint
cmc
push
sbb
push
jnp
jle
xchg
xchg
sub
aad
xor
xchg
mov
cmp
shl
inc
cltd
push
and
add
pop
jno
cld
movsl
mov
mov
pop
mov
lods
jecxz
dec
xchg
out
repnz
stc
addr16
fs
xor
adc
stos
push
popa
mov
xor
mov
or
jp
pop
inc
push
in
sub
aas
insb
cli
fisttpl
call
jg
addl
mov
mov
mov
dec
movsl
add
movq
lods
sub
cmp
dec
leave
and
pushf
or
dec
addr16
push
fs
ret
dec
xor
mov
mov
push
sub
dec
sub
sub
jp
mov
fs
dec
pop
hlt
shr
fsts
fs
cmp
fadd
nop
cmp
mov
xchg
cmpsb
cli
mov
pop
pop
fdivr
cld
mov
lahf
scas
movsl
into
mov
fs
addb
fimull
sbb
push
pop
ljmp
insb
cmp
lret
scas
push
test
xchg
in
iret
dec
imul
das
xchg
xchg
cld
push
sbb
cli
clc
sbb
fiaddl
arpl
add
push
iret
das
push
mov
stc
mov
and
sbb
and
stos
aas
in
xor
movsl
popf
or
mov
out
out
mov
jnp
sbb
jbe
mov
inc
daa
repz
mov
mov
and
pop
push
lret
xor
push
push
into
or
fcoms
ss
lcall
loope
adc
shlb
lods
outsb
iret
xor
nop
mov
push
popa
dec
int3
or
push
cmc
mov
pop
mov
das
inc
or
fptan
aad
imul
pop
mov
into
ds
mov
add
xchg
xchg
cmpsl
testl
inc
testl
and
rolb
and
xchg
imul
adc
aam
lret
call
outsb
push
mov
test
pop
mov
mov
jae
and
ret
cmp
ss
mov
cmovne
fs
and
in
sbb
add
insb
movb
inc
cmp
add
xlat
pusha
push
ljmp
fcoms
push
out
andl
cmpsl
push
cmp
insb
dec
inc
xor
scas
sub
aam
cmp
shll
lea
xorl
movsb
pop
and
pop
das
jne
push
or
out
adc
xor
add
and
dec
jp,pn
clc
cmpsb
mov
stos
loopne
jle
jno
xchg
pop
mov
pop
mov
mov
pushf
xor
fidivl
or
or
jae
cmp
push
mov
int
or
xchg
aad
sahf
sbb
out
pop
sahf
adc
mov
sub
jb
inc
fwait
ja
mov
jg
xlat
addr16
shll
mov
adc
lds
xor
outsl
mov
and
inc
into
dec
inc
mov
call
cmp
fiadds
mov
sbbb
loopne
and
xchg
icebp
jno
cmp
ret
xchg
adc
rcll
sbb
outsb
insl
sub
outsl
mov
mov
push
out
mov
push
pop
push
jge
add
cmp
insl
cmp
mov
cmpsl
mov
ja
inc
sub
mov
jnp
sub
ficoms
jns
mov
ds
jb
mov
cmp
inc
decb
lcall
or
gs
rcrl
popa
int3
inc
pusha
jns
out
js
jo
inc
adc
inc
dec
outsl
add
jne
add
fs
mov
sbb
xor
stos
lcall
xchg
jl
lret
pop
mov
xchg
jmp
cmp
cwtl
jbe
leave
shlb
ja
and
fs
jne
rcll
movsl
fdivl
mov
dec
ss
lods
xchg
test
xchg
xchg
call
and
or
mov
mov
pusha
lods
stos
pop
mov
add
cld
in
shl
add
pop
cmpsl
push
ss
cmp
adcb
js
dec
pop
ficoms
and
das
rcll
and
int3
xor
add
and
ljmp
and
jnp
add
imul
cvtdq2ps
aas
sbbl
pop
fsubs
sbb
fs
fwait
icebp
out
scas
bound
outsl
repz
jo
mov
fwait
int
mov
xchg
mov
add
enter
xor
adc
pop
std
mov
fcmovnbe
aas
and
lods
cwtl
and
mov
cmpsl
divl
jnp
and
aam
adc
sub
test
pusha
ret
je
mov
mov
adcb
mov
pop
fbstp
mov
stos
inc
xor
cmc
stc
pop
fcomps
jns
icebp
aam
pusha
lock
popf
or
int
insl
mov
pop
daa
movsl
jle
fidivs
pop
ds
dec
jge
jmp
xor
test
mov
jo
pop
in
and
or
sarl
cmpb
adc
cmc
popa
ss
inc
dec
cltd
repnz
aam
insl
cmc
test
sub
pop
aam
lret
test
xchg
xchg
mov
mov
sub
push
aad
xchg
shll
nop
arpl
cwtl
ja
adc
loop
inc
inc
pop
cltd
cli
test
adc
das
aas
in
mov
lods
imulb
push
aam
pop
les
mov
movsl
aaa
ss
lds
fcoms
inc
cmp
notl
lods
lahf
add
fistpl
test
lret
stos
cmpsb
mov
pop
lret
fbstp
in
icebp
add
aas
cmp
frstor
sbb
adc
fcompl
dec
into
and
dec
push
mov
push
pop
in
sti
mov
sbb
leave
push
jg
gs
add
push
clc
shr
das
ret
jl
jmp
xor
adc
cmp
bound
push
popf
and
cmc
pusha
je
sub
into
pop
data16
and
dec
lahf
imul
test
cmp
jno
int
push
add
lcall
pop
push
mov
sti
inc
mov
mov
test
xor
adc
add
mov
jmp
push
nopl
push
jecxz
jns
jno
or
sub
out
cltd
daa
jecxz
pop
in
movsbl
cmpl
and
adc
and
and
dec
jl
mov
jmp
aam
testl
imul
jp
cld
pop
mov
int3
xchg
lods
mov
cmp
mov
cs
mov
or
sbb
sub
out
adc
inc
sub
adc
fwait
aad
or
lds
jne
mov
sbb
dec
adc
mov
pop
rclb
sub
mov
cmp
call
addl
mov
mov
inc
sbb
mov
or
lret
not
js
mov
adc
mov
pop
test
lea
jnp
xchg
sarb
out
or
mov
jecxz
mov
loope
add
dec
lcall
cmc
int
in
jo
nop
and
cmp
push
push
inc
mov
outsl
rcrl
clc
cmpsl
leave
inc
sub
repnz
test
pop
mov
in
sbb
jg
pop
mov
push
sbb
clc
xchg
movsb
test
nop
xchg
loop
and
std
or
and
and
imulb
clc
pop
ja
shl
out
lods
pop
xchg
mov
in
mul
mov
clc
jne
inc
test
dec
gs
adc
mov
inc
jmp
pop
or
aad
mov
mov
jl
out
xor
add
aad
sti
xor
xchg
popf
push
mov
push
repz
push
add
mov
mov
jb
addl
lods
mov
nop
pushf
lret
inc
sti
cmp
repz
pusha
frstor
sub
int
pop
fadds
or
cmp
int
lcall
adc
movl
inc
mov
out
dec
je
mov
popf
and
pop
cmp
or
pop
repz
push
ja
xor
cmp
adc
ret
scas
inc
inc
les
clc
leave
xchg
push
cmovg
xchg
pop
stos
scas
mov
dec
in
mov
and
xchg
imul
adc
popf
gs
cmpsb
inc
dec
daa
test
ret
in
sub
pop
mov
pop
les
int3
pop
outsb
arpl
shr
test
fwait
popa
aaa
sbb
dec
es
fcoms
or
jo
movsl
dec
and
adc
ret
sub
fiadds
insl
jne
lds
in
jb
stos
adc
sub
adc
out
jmp
cld
popf
or
cmp
add
lahf
inc
test
dec
pop
and
and
cmp
mov
xchg
repnz
into
cmp
test
stos
imul
fdivr
imul
test
leave
push
mov
fdivl
adc
dec
jb
cmp
dec
mov
aad
jnp
jns
mov
sub
mov
jmp
fdivrl
movsb
ljmp
sub
jae
pop
add
imul
lock
xor
sub
jecxz
jno
arpl
pop
sbb
sub
jmp
push
in
fstp
jns
mov
add
imul
inc
shll
sub
ss
dec
xor
mov
mov
arpl
jne
call
adc
cmp
ljmp
dec
stos
mov
sub
sub
fstl
test
push
popa
gs
inc
and
sti
mov
adc
call
mov
rcll
or
cmc
sub
pop
cwtl
out
jnp
xchg
test
pusha
hlt
cld
rorb
ds
push
push
xlat
add
xor
les
mov
mov
and
ds
pop
aad
lea
inc
add
cli
cwtl
jle
sbb
daa
lcall
mov
nop
pushf
subl
xlat
addr16
cld
dec
xchg
xchg
fs
or
bnd
jno
pop
add
not
xor
push
rcll
fildl
add
mov
push
push
xchg
loope
mov
cmp
sbb
dec
cltd
push
dec
mov
test
jmp
xchg
out
adc
jbe
sahf
fsub
out
xor
test
xchg
pop
fdivrl
out
out
dec
cmpsl
ud2
cmp
sbb
jecxz
pop
rolb
xlat
fnstsw
sbb
cmp
and
push
cli
scas
dec
cwtl
in
xchg
jl
sub
adc
sub
aas
loopne
loopne
fistps
pop
lods
cli
fmulp
mov
xor
out
cld
das
lret
pop
addr16
adc
jnp
insl
ja
enter
xlat
fsts
and
mov
dec
push
or
jbe
lcall
inc
or
adcb
mov
sbb
in
sbb
adc
leave
stc
mov
mov
adc
je
sbbb
outsb
in
shll
ds
dec
jg
insb
ror
or
test
pop
xchg
outsl
adc
lds
rorb
jmp
addr16
mov
mov
pushl
not
mov
or
cmp
sbb
cmp
mov
aas
inc
push
andb
imul
std
outsb
inc
mov
and
out
mov
rcrb
je
jb
insb
dec
repnz
xchg
iret
cwtl
arpl
lock
cmpsl
sub
pop
nop
sub
push
outsb
enter
pusha
fcoml
clc
mov
sbb
mov
in
aas
shrl
std
loopne
stos
cmp
loopne
fs
or
js
xor
lds
cltd
dec
ja
incb
add
sub
fldl
loop
movsl
clc
andl
dec
mov
arpl
push
xchg
mov
adc
pop
mov
leave
adc
insb
and
jmp
in
push
popf
loop
xor
insl
mov
xlat
mov
in
sub
cltd
mov
negb
add
dec
mov
repz
mov
or
into
sub
jp
sbb
out
fs
inc
inc
repz
and
shr
out
sub
int3
ja
test
fisubs
mov
pop
xor
or
ret
mov
and
xor
repz
in
jmp
das
pop
sub
pop
mov
cmp
das
jb
xchg
mov
push
imul
pop
lea
add
roll
xor
test
leave
gs
cmpl
lods
push
adc
pop
and
and
cmp
mov
fcoms
fstpl
outsl
pop
lahf
shl
sbb
inc
lcall
xchg
out
pop
mov
jb
mov
testl
push
sub
push
and
xor
xchg
add
loopne
mov
lods
in
in
cwtl
loopne
mov
push
mov
inc
sub
mov
cwtl
aas
in
jg
mov
std
and
sbb
sbb
hlt
xorb
and
or
add
xchg
lret
fimuls
pop
popa
imul
jbe
cmpsb
jge
mov
xor
inc
add
out
aad
js
or
scas
pop
pushw
sbbb
out
cmp
arpl
cltd
mov
ret
dec
inc
fstp
in
cmp
add
sub
jae
jge
test
add
lods
rcl
xchg
jb
shl
pop
mov
cld
es
inc
sbb
iret
sahf
hlt
vpmullw
or
and
mov
fmul
mov
int3
cmp
enter
fbstp
outsl
lods
and
jnp
inc
inc
lds
and
pop
mov
inc
enter
loopne
imul
xor
sbb
addb
out
xor
push
scas
pop
or
gs
aad
xchg
test
or
out
jl
outsl
and
jns
mov
stos
xchg
jnp
and
test
add
imul
movsb
das
loopne
pop
or
push
dec
push
adc
std
jg
mov
iret
jo
stos
adc
frstpm(287
rcr
mov
xor
xchg
aas
out
je
and
sub
stos
cmp
pop
xchg
xchg
in
in
repnz
fstps
popa
jne
imul
cltd
xchg
mov
enter
mov
mov
adc
add
pop
addr16
loopne
jbe
leave
or
ret
dec
imul
idiv
xor
hlt
push
lea
test
int
cltd
and
xor
out
xor
add
and
nop
or
ja
repnz
stos
fnstenv
jge
xchg
cmpsl
shll
mov
xor
mov
adc
ret
iret
push
or
stos
xchg
sub
sti
sbb
fimull
ljmp
sub
pop
cmp
pushf
cmpsl
or
inc
and
pop
pop
divl
aad
inc
pop
aad
inc
cmp
mov
or
ja
fwait
jl
mov
adc
pushf
xor
inc
cmpb
aad
dec
jae
xor
ds
sub
xor
jg
adc
sbb
mov
insl
pop
negb
scas
movsl
jb
test
shrl
lock
out
fdivrs
inc
lea
xor
pusha
add
ds
mov
push
hlt
inc
and
mov
push
in
test
fadd
cwtl
sub
pop
bound
xor
insb
mov
and
sub
ss
addr16
sbb
cmpsb
xor
ficoms
arpl
inc
and
xor
jae
mulb
or
out
shlb
cmc
pop
pop
sbb
mov
lret
or
cmp
push
sti
ret
xor
jbe
insl
sub
pop
jge
adc
inc
and
mov
aad
cmpsb
pop
jno
ficoms
jb
mov
mov
ljmp
mov
jl
loop
mov
mov
lods
push
sbb
mov
inc
mov
and
jmp
test
movb
les
jne
aas
idivl
sti
popa
cmpsb
leave
dec
ret
mov
xor
js
ds
sbb
je
sahf
loopne
subl
inc
repz
mov
cwtl
xorb
mov
orb
pop
pop
pop
jb
fisubl
add
jae
cmp
cmp
insb
pop
je
mov
fsts
jl
aam
add
push
and
xorb
mov
ret
arpl
dec
lods
mov
adc
aam
mov
into
jbe
filds
mov
ds
push
call
pop
shrl
jbe
fisubs
pusha
ficomps
jg
add
push
ja
iret
jl
fcmovnu
scas
fimuls
shlb
jmp
lahf
sbb
push
aad
loope
jle
ret
lret
mov
mov
inc
inc
dec
call
loop
testb
add
xchg
fwait
mov
stos
sbb
outsl
and
pop
ret
fistl
in
test
loope
dec
test
lods
into
add
jl
insb
frstor
jecxz
sbb
dec
loop
aaa
dec
push
roll
and
jnp
or
jnp
xor
xor
jne
addl
or
xchg
insl
ss
ffree
outsb
call
pop
es
cmp
mov
ret
push
int3
and
fidivs
and
sbb
push
imul
xchg
sub
and
and
jmp
push
sub
and
xor
xor
shlb
sub
mov
popa
xor
fstpl
xchg
addr16
push
add
sbb
repz
add
sub
jmp
pop
sti
pop
inc
mov
repnz
and
mov
mov
xor
cli
clc
mov
cld
xchg
sbb
cmp
cmovle
ja
icebp
arpl
bound
loop
xor
and
fmull
xchg
jno
fwait
lcall
icebp
push
pusha
fnsave
addr16
and
adc
outsl
ss
rolb
cmp
mov
mov
jne
jle
fldenv
aad
mov
mov
jb
or
inc
loopne
das
es
mov
inc
jne
mov
leave
sbb
xchg
jle
pop
pop
push
andl
pop
das
int3
jbe
movsl
cmpsb
out
lret
cmp
imul
repz
xchg
les
nop
push
fiadds
add
repnz
lds
or
sub
fs
sbb
xor
imul
push
and
push
movsb
jmp
mov
mov
out
movsl
mov
dec
aam
cmp
xlat
cmpsl
or
mov
add
inc
adc
and
push
stos
sub
dec
xlat
and
add
jbe
push
out
push
push
sarl
mov
out
and
hlt
push
push
mov
fnstenv
jnp
lods
mov
lahf
dec
xor
inc
sub
sub
je
dec
and
mov
adc
dec
inc
daa
dec
stc
lds
cld
and
stos
loope
add
mov
dec
ljmp
loop
adc
and
sub
popf
hlt
repz
add
into
lods
dec
add
mov
mov
rcr
out
xchg
xchg
lods
pop
inc
mov
outsb
push
mov
sahf
push
xchg
rclb
shll
or
loope
dec
arpl
scas
and
cld
cmp
xchg
pop
or
jle
test
daa
mov
sbb
fxch
inc
jnp
roll
or
jle
iret
xchg
sub
test
in
pop
loopne
or
je
and
mov
xchg
subb
sarb
bound
pop
xor
cltd
in
inc
loope
add
mov
sti
sahf
fcomps
and
xor
sub
mov
subl
fs
adc
push
les
dec
xor
dec
cmpsb
jb
sub
shrl
mov
xchg
cli
xchg
jl
lcall
in
mov
into
or
jge
adc
dec
mov
mov
daa
sahf
lds
sbb
ja
sbb
xchg
stos
xchg
hlt
xchg
push
xchg
lock
xlat
mov
mov
test
adc
dec
sbb
lea
jnp
frstor
jbe
les
das
data16
cmp
push
add
andl
cmc
jb
sbb
xor
test
ret
xor
aam
fldt
jge
cmp
push
frstor
mov
add
cmp
adc
outsl
and
mov
mov
sub
pop
and
lds
push
shlb
cmpsb
sahf
gs
dec
dec
jo
jge
adcl
push
adc
arpl
enter
rcrb
movsl
call
ss
push
or
mov
sub
mov
add
or
inc
movsb
aaa
shll
jl
or
mov
scas
add
addl
into
cwtl
adc
dec
in
sbb
and
xchg
mov
loope
mov
dec
mov
movsb
add
ret
push
cmp
lock
mov
or
rcll
sbb
pop
sbb
pop
or
addb
je
pop
cli
and
in
push
je
cmp
pusha
daa
sbb
push
popf
stc
xchg
dec
repnz
loop
pop
mov
xchg
iret
lahf
stos
cmp
add
loopne
xchg
adc
and
mov
imul
mov
shll
lea
or
mov
xor
loope
out
jle
push
jno
aam
shlb
int
lea
mov
pop
outsb
push
pop
or
push
pop
and
push
xor
rcrl
std
dec
jae
sub
imul
jmp
jecxz
orl
push
sub
enter
cmpsb
ret
out
fistl
arpl
in
shll
jbe
push
adc
push
dec
xchg
or
mov
fdivrs
jecxz
test
mov
shrb
cld
inc
insl
aad
xor
rcll
sub
jp
loope
gs
out
repnz
jbe
jge
jl
add
clc
dec
inc
mov
push
sub
xlat
cmp
mov
fisubs
lods
lret
lods
dec
ss
in
mov
sub
xor
mov
push
mov
cli
neg
pop
fiaddl
sahf
sbb
xchg
lahf
mov
shlb
xchg
jecxz
das
aad
popa
sti
mov
mov
cmpsl
pushf
fstpl
aad
inc
push
outsb
aas
sbb
fiaddl
jne
and
mov
push
xor
cmp
ss
sbb
js
cmp
pop
ret
cmp
enter
loope
pop
inc
xor
inc
cmp
sbb
das
cmp
aad
pushf
lret
stc
cwtl
dec
ret
sbb
loopne
xchg
xlat
mov
or
je
and
stos
push
xchg
fsubrp
iret
pop
lret
adc
into
or
cld
xor
loope
arpl
lahf
inc
cmp
pop
sarb
leave
xchg
mov
ficompl
jle
orl
cmp
cmc
dec
pop
push
mov
fisubrs
dec
xlat
adc
out
leave
lret
add
cmpsb
pop
push
repz
sbb
jne
mov
fdivrl
push
out
data16
outsl
jbe
push
add
mov
insb
adc
adc
push
divb
and
test
test
lret
lret
out
fldl
inc
lods
cmp
xchg
fiaddl
xor
dec
push
xlat
sub
ja
lret
jns
icebp
jmp
mov
stos
aam
shl
stc
push
push
push
loope
scas
jge
popa
hlt
pop
and
xor
ret
call
sub
lods
filds
es
shlb
sahf
out
popf
mov
je
popl
mov
subb
jns
iret
movsl
sub
sub
mov
mov
stos
add
push
cltd
faddl
dec
stos
into
mov
inc
or
cli
daa
test
out
pop
dec
dec
mov
lods
mov
jbe
or
addr16
add
push
xchg
jmp
add
repnz
pop
xchg
adc
ficomps
xor
and
jle
lds
pop
pop
lret
cwtl
cmp
dec
out
jge
add
jmp
enterw
movsl
xchg
out
xchg
add
test
add
cmp
push
adc
pminub
les
xchg
cmpsb
pop
pop
xor
and
lea
ds
xchg
lods
inc
cld
dec
xchg
mov
sahf
jno
in
push
insl
pop
in
xor
icebp
test
out
pop
xor
lret
pushf
pop
sbb
mov
loopne
mov
stos
push
adc
xor
inc
aas
dec
lretw
jae
aad
dec
push
push
fbstp
mov
pop
sub
insl
pop
cmp
lahf
les
test
push
lcall
mov
inc
push
mov
adc
dec
enter
hlt
mov
bndstx
out
mov
xor
jae
lock
iret
sbb
jns
push
xlat
push
ds
push
inc
or
fs
mov
subb
pop
scas
push
or
lcall
sbb
push
mov
lea
fdiv
ds
mov
mov
scas
lahf
sub
inc
inc
add
test
enter
pushl
jns
sbb
popa
jge
and
jo
jbe
xchg
pop
scas
and
mov
outsl
ret
inc
xorl
test
pop
mov
xorb
inc
sbb
xor
incb
pop
or
add
jno
fwait
adc
jle
push
push
mov
int
fldenv
jnp
mov
ret
dec
xchg
xchg
pop
pop
ret
rorb
cmp
mov
daa
outsb
sub
jne
shll
popf
movsw
mov
lds
repnz
inc
ja
imul
inc
sub
sub
insl
adc
jbe
inc
repz
call
sub
into
push
mov
lcall
rcrb
sub
sbb
fiaddl
mov
xchg
cltd
sbb
mov
scas
jecxz
shl
jle
xor
mov
sub
cmc
and
in
rcrl
xor
lahf
mov
sub
pusha
outsl
lea
push
lret
sub
jb
insb
inc
push
cmc
mov
push
lea
xchg
cmp
shlb
push
movsl
sahf
fidivrl
jmp
pushf
out
xor
sbb
repz
mov
fdivl
mov
sbb
jecxz
cmp
lods
cld
js
mov
mov
jl
sbb
mov
push
jge
dec
fstpt
add
inc
stos
lret
mov
xchg
adc
andps
int3
loop
int
mov
mov
repz
xchg
mov
insb
out
xor
daa
loopne
jge
test
int3
out
notl
fwait
mov
pop
loop
adc
dec
jns
mov
cs
adc
push
mov
cltd
fistpl
pop
dec
add
popa
fs
sbb
scas
mov
lea
cld
nop
push
js
and
cli
movb
xchg
inc
dec
cmp
lcall
movsb
daa
push
jmp
pop
jbe
add
adc
movsb
mov
pop
cmp
call
mov
jle
jle
cwtl
xchg
jmp
test
pop
ja
xor
lods
push
mov
aaa
or
xor
or
mov
xchg
ret
sbb
cmp
daa
sbb
ljmp
push
pop
cli
test
mov
push
xor
push
lcall
outsb
test
xor
loope
fcom
jb
inc
pop
js
stos
push
sarb
addl
xchg
mov
mov
leave
imul
fimuls
or
xchg
inc
int3
xchg
rolb
lret
xchg
test
cmp
dec
inc
aam
jge
sbb
and
or
mov
arpl
and
cmp
lods
mov
imul
jae
loope
xchg
dec
cmpsl
cmpsb
int3
or
adc
test
xchg
lock
das
push
pop
push
jge
xchg
stc
rorl
add
cltd
jo
test
pop
pop
rclb
xor
in
dec
movsb
jecxz
in
adc
cmp
mov
aaa
mov
out
push
jne
lret
and
in
mov
mov
mov
inc
int3
jno
pop
adcb
or
mov
out
mov
bound
hlt
sub
push
jp
adc
ja
sti
jl
lcall
rol
mov
sub
cmpsb
adc
outsb
in
dec
sbb
adc
sarb
mov
xchg
mov
data16
pop
push
stos
lods
gs
xchg
cli
int3
cmp
mov
loop
out
mov
orb
sti
add
aad
cwtl
xchg
lahf
mov
js
push
add
sub
inc
mov
xor
cmp
mov
rclb
das
adc
in
int3
sub
test
add
jle
arpl
leave
or
mov
mov
sbb
cs
mov
test
adc
adc
es
cmp
fildl
movsb
pop
fsubr
push
clc
mov
jp
and
mov
cmp
insl
dec
dec
pop
inc
test
into
or
adc
das
aam
mov
divl
mov
dec
in
cmovl
divb
jecxz
jecxz
addr16
das
dec
pop
pop
cwtl
cmp
pushf
pop
dec
xchg
or
cmp
in
popf
push
lods
mov
sub
test
mov
sub
leave
pop
xchg
add
lret
jno
sub
mov
push
push
mov
push
stc
cmp
stc
xchg
mov
movsb
scas
xor
ja
test
adc
out
mov
repnz
mov
lcall
in
es
scas
dec
test
inc
stos
sub
inc
popa
cs
add
out
test
mov
inc
dec
adc
movsl
loop
mov
and
xor
inc
cs
out
inc
aam
out
not
dec
inc
fstl
push
jo
lds
aad
aam
xchg
nop
andb
bound
lret
aas
jnp
sbb
imul
scas
bound
cmpsl
jp
rcl
mov
jbe
je
push
push
outsl
jnp
stc
jnp
mov
not
xor
cmp
pushf
xchg
or
gs
repnz
jge
mov
mov
mov
sub
je
mov
mov
pop
mov
sbb
lcall
cli
push
ja
enter
jo
lds
imul
lea
lock
es
push
ret
jns
jecxz
ljmp
int3
add
lea
dec
inc
shlb
sub
or
fwait
into
add
push
or
mov
mov
decl
das
aad
adc
cli
xchg
popa
sub
mov
cmp
inc
ret
ret
test
ss
jle
imul
sti
push
pop
pushf
sbb
cmp
mov
dec
int3
jge
je
jg
outsb
inc
xchg
lahf
popf
sub
cmpsb
rorl
add
pop
sbb
lret
loopne
mov
sarb
and
std
or
cmp
repnz
cltd
pop
addr16
test
cld
enter
fidivrs
xchg
loop
out
pop
out
lds
and
div
xlat
idivb
daa
cli
adcl
jg
add
or
dec
add
or
mov
ljmp
aad
inc
in
sbb
scas
test
out
je
cmpsb
in
pop
out
leave
loope
mov
lods
mov
loope
lahf
dec
mov
push
scas
js
push
lea
push
sbb
repz
orl
popl
sahf
bnd
xor
shlb
mov
sbb
pop
outsl
jno
xor
int
call
mov
addr16
or
and
sub
mov
adc
xor
daa
or
into
frstor
push
les
out
out
das
aam
jmp
jmp
jg
pop
pop
jle
repnz
je
xor
mov
and
jp,pt
rcrb
push
adc
addb
mov
push
sbb
mov
repnz
scas
cwtl
xchg
inc
std
lods
mov
jle
repnz
inc
xlat
adc
mov
fldcw
icebp
sbb
add
sbb
ds
adc
pop
pop
cwtl
inc
push
xlat
mov
sahf
jmp
cmp
mov
cmpl
mov
cmp
enter
add
test
xchg
aas
in
sbbb
push
bound
push
sbb
inc
cmp
in
ja
mov
dec
das
mov
lret
jae
comiss
movsl
outsl
pop
in
or
mov
xchg
lcallw
pop
insb
ja
inc
and
push
loop
and
ret
ss
cmp
push
lcall
out
in
mov
mov
sub
xor
lret
fisttps
xchg
aad
lea
cmp
je
pop
aaa
dec
aam
mov
mov
push
pushf
pop
cld
lret
test
insl
mov
mov
add
lcall
ret
fwait
jg
xchg
inc
rcr
xchg
test
data16
sub
mov
cmp
and
xchg
fs
daa
mov
xor
xchg
xchg
sub
xchg
cmpsb
out
leave
pop
shrb
adc
mov
or
cmpl
push
stos
imulb
test
rol
adc
lret
sbb
xchg
arpl
cmp
mov
lods
mov
pop
mov
xor
mov
imul
test
stc
rcrl
shlb
int
mulb
testb
push
pusha
push
scas
data16
orb
subl
jns
mov
cmp
into
ficomps
aaa
sbb
inc
mov
xchg
or
cmp
sub
je
push
jl
arpl
add
das
call
ss
and
push
pop
dec
push
mov
adc
mov
push
pop
mov
repz
shr
sbb
fwait
inc
xchg
or
lds
xchg
pop
mov
push
mov
lcall
inc
jecxz
scas
fiadds
pop
xchg
add
pop
insl
stos
or
mov
mov
stos
jae
fisubrl
sub
adc
das
cmp
mov
sbb
jo
lods
inc
dec
test
or
jb
lret
rolb
xlat
fstpl
cmpsb
mov
xchg
push
fs
js
int3
sbb
xchg
jns
inc
sub
je
fistps
add
inc
in
pop
push
xchg
lret
fistpll
mov
xchg
popf
lds
mov
inc
or
dec
das
inc
pop
cld
pop
xor
cmc
push
or
sbb
and
inc
cmp
jae
outsl
pop
cli
lods
push
pop
pop
cmp
push
cmp
xchg
xor
jg
lods
pushf
lcall
iret
mov
icebp
les
cs
xchg
cld
mov
pop
outsb
fldcw
jae
pop
jl
lods
repnz
leave
mov
or
bound
and
or
aad
push
jmp
pop
fisubrs
ror
sub
mov
xchg
nop
sarb
inc
fwait
adc
mov
int
sbb
loope
pop
ja
inc
lcall
push
push
mov
push
push
in
cmp
xor
sbb
cmc
inc
sbb
xor
pop
in
mov
pop
push
xor
imul
test
bound
dec
mov
lods
mov
xchg
push
fidivs
jmp
inc
loopne
jg
fs
ss
aas
xor
xor
lret
cmp
cmp
arpl
scas
dec
mov
cmp
into
mov
std
sbb
mov
fwait
popa
or
lret
idivb
rcll
outsl
lods
xchg
add
or
sarb
mov
pop
in
hlt
loope
fdivp
sbb
rcrb
sub
mov
movsb
jb
or
and
sbb
pop
orl
add
push
sahf
testl
cwtl
add
divb
xchg
lret
insl
push
iret
adc
aam
sbb
shll
sahf
aad
lock
das
les
movsb
sub
popf
sbb
pop
jmp
fisttpll
jle
addr16
hlt
xchg
in
jae
mov
dec
sti
or
loop
xor
or
arpl
aaa
inc
pop
dec
pop
sbb
push
mov
pushf
mov
pushf
mov
pop
dec
xchg
cmpsb
add
xchg
dec
mov
pusha
addr16
push
andb
sub
jmp
xchg
lods
dec
clc
subl
lret
push
pop
outsb
inc
in
pop
pushf
arpl
mov
sub
mov
hlt
mov
stc
divl
dec
dec
pop
push
adc
pop
xor
mov
fld
pop
out
inc
cmp
mov
pop
or
adc
scas
push
and
int
and
lea
xor
push
adc
push
sbb
or
cmp
sbb
mov
add
or
mov
sti
push
out
mov
clc
jg
xchg
or
arpl
adc
sbb
fldcw
cmp
jbe
sub
mov
fidivrs
push
push
adcl
scas
outsl
lcall
jl
cmpsb
xorb
xor
sbb
or
xchg
jne
add
or
jle
ljmp
sub
xlat
mov
std
sub
cmp
cmp
ds
icebp
cmp
jecxz
adc
add
xor
mov
cmpsb
lahf
enter
sub
dec
xchg
loope
test
jae
or
or
scas
adc
adc
popf
dec
lock
or
shll
mov
and
sbb
jecxz
cmp
mov
cmp
jmp
ficomps
lret
aam
cwtl
push
adcb
mov
imul
inc
sbb
xchg
call
xchg
movsb
mov
fistps
test
mov
push
pop
cmp
cltd
mov
cmp
sub
ljmp
stos
mov
dec
xchg
jbe
push
addr16
aam
push
jno
xchg
push
adc
enter
push
clc
cmp
cmp
add
out
or
imul
mov
add
scas
jl
mov
pop
stc
xor
cmpsl
jg
rolb
or
insl
sbb
cwtl
pop
imul
inc
jb
js
push
jmp
mov
lods
movsl
pop
outsb
or
sub
inc
or
mov
inc
fstpl
lds
cmp
mov
jne
mov
xor
ret
xchg
jge
sbb
icebp
or
aas
gs
or
cmc
push
and
adc
adc
cmp
inc
push
jnp
and
xchg
cmp
hlt
push
leave
imul
or
xchg
inc
lahf
mov
xchg
dec
nop
sti
jbe
pop
push
lea
mov
rep
in
or
rorb
push
inc
jno
adc
push
hlt
mov
in
xchg
insl
add
or
out
add
shll
sbb
push
cmpsl
jmp
jb
mov
sbb
in
lret
fldenv
sbb
dec
sub
dec
xchg
aas
movsb
int
jmp
out
or
imul
push
out
and
mov
or
mov
xchg
push
mov
and
rcr
arpl
or
inc
cltd
aam
rcrb
sbb
in
mov
icebp
inc
pop
add
into
sbb
jmp
sub
popf
xor
ret
jno
test
xor
mov
out
adc
jno
inc
insl
dec
ljmp
cmp
fsub
sub
jl
insl
xor
aad
fldl
lret
add
into
pop
lock
mov
ss
out
ja
mov
popa
mov
xor
dec
stos
clc
scas
aas
in
sbb
cltd
xchg
dec
inc
add
xor
bnd
inc
fsts
outsl
adc
gs
fdivrs
lods
fstl
jb
xchg
stos
dec
leave
repz
xchg
adc
add
nop
repnz
insb
rcr
call
ja
rorl
and
lods
loopne
or
xchg
xchg
in
jle
insl
pop
sub
ss
xchg
cmp
shrb
fstl
pop
arpl
mov
lods
mov
pop
jnp
out
data16
out
mov
pop
lock
aad
adc
xor
add
add
enter
cmp
adc
mov
call
mov
adc
fyl2x
mov
mov
xchg
xchg
movsb
dec
aas
mov
xor
sub
add
daa
fidivs
pop
or
pop
aas
mov
scas
mov
xor
mov
pusha
pop
mov
int
hlt
jnp
sbb
mov
shr
jl
push
decb
xchg
mov
jb
xor
or
gs
clc
adc
shll
sub
andl
cld
lods
add
or
adc
out
xchg
test
pop
mov
adc
jl
rcl
call
xor
and
push
fists
aaa
movsb
inc
sub
or
lods
out
push
push
sbb
fdiv
cmc
mov
pop
jno
decb
lea
lret
pop
das
pushf
roll
xor
pop
sub
leave
or
hlt
sbb
pushf
add
mov
mov
roll
xchg
mov
aad
pop
std
lahf
adcl
push
stos
sub
mov
xor
sarl
xchg
rclb
scas
enter
ss
dec
sbb
lret
and
int3
movsb
mov
add
add
add
and
mov
push
adc
pop
cmpl
out
out
lds
mov
test
xchg
push
in
xchg
xor
in
leave
f2xm1
fsubr
shll
ss
call
mov
les
xchg
pusha
push
mov
jp
adc
mov
mov
dec
cmpsb
sub
data16
idivl
ja
repz
cmpsl
and
adc
hlt
mov
xchg
imul
jmp
cmp
pop
pushf
pop
popf
jp
lock
lcall
testl
data16
cltd
xchg
shl
clc
rcll
push
and
xchg
repz
xlat
jo
frstor
or
mov
call
push
and
mov
mov
mov
lret
loop
fwait
sbbb
adc
rclb
int3
fcmovb
bound
cmpsl
dec
shr
pop
and
in
insl
leave
int
cmpsb
xchg
sbb
rcll
in
add
inc
ret
cmpsl
mov
jl
pop
cmp
fistpl
xor
int3
jae
int
xchg
add
lock
fidivl
inc
sub
leave
push
add
mov
fcmovne
lods
jno
popa
popf
jne
jae
mov
inc
orb
cmp
cmp
jnp
inc
jge
inc
leave
test
xchg
pop
sti
sbb
jl
test
pop
jno
xlat
test
outsb
outsb
imul
fbstp
inc
mov
std
xchg
arpl
mov
jmp
jns
mov
test
pop
shr
andl
jne
popf
mov
lahf
into
mov
pop
sbb
icebp
mov
mov
test
loop
call
lock
dec
dec
jne
les
push
inc
mov
jnp
shll
xlat
inc
and
and
push
or
push
cs
push
clc
and
sbb
fs
pushfw
pop
mov
icebp
cmp
decl
cwtl
fisubrl
jg
addr16
lcall
mov
push
sbb
imul
aad
and
pusha
add
dec
jecxz
hlt
add
jmp
push
xchg
aaa
and
and
shrl
and
in
mov
int3
cmpl
push
aaa
lcall
jg
xor
xchg
inc
sub
and
scas
pop
push
adc
xchg
mov
pushf
adc
or
int3
inc
xchg
insb
popa
xor
cmp
add
shll
pop
icebp
fisubrl
inc
mov
jbe
negl
lret
mov
sahf
jo
xchg
pop
mov
test
mov
sbb
adc
push
aas
out
movsb
cmp
addr16
stc
and
add
repnz
cmp
enter
pop
ljmp
cwtl
je
int
mov
add
cmp
clc
ljmp
sbbb
adc
cmp
jmp
cmp
data16
ss
ret
push
out
pop
mov
int
into
ja
mov
sbb
scas
idivb
pop
sbb
mov
mov
pop
fstps
mov
inc
imul
in
mov
adc
and
or
jle
and
inc
ds
sub
in
add
sbb
imul
hlt
pushf
push
shrb
xchg
js
jp
push
cmp
add
push
addr16
sti
xor
mov
hlt
les
inc
insl
fmul
pop
cli
fists
scas
mov
dec
pop
cmpb
xchg
hlt
xor
dec
sahf
add
cltd
aas
dec
push
xchg
nop
dec
ss
sbbb
mov
or
mov
scas
sbb
mov
cmp
imul
enter
and
cmp
mov
sahf
lock
sub
or
lret
cwtl
push
mov
xchg
dec
jae
test
loopne
lock
mov
ja
push
mov
lea
cmpsl
in
sub
push
movsl
mov
mov
arpl
xchg
rcr
pushf
dec
cs
sub
and
stos
cs
or
movsb
add
sub
adc
sbbb
test
fs
enter
scas
fcoms
outsl
cs
pop
push
in
mov
add
cmp
xlat
fdivrl
xchg
mov
out
insb
adc
bound
jge
inc
out
int3
mov
cltd
push
cmpsl
inc
call
test
jle
jns
cmpsb
adc
dec
push
mov
sbb
jle
xchg
sub
jb
xchg
mov
jnp
push
dec
and
and
dec
ficoml
aam
sbb
lea
cmpsl
mov
adcb
rcll
addr16
mov
jo
cltd
cmp
ljmp
orl
scas
jnp
mov
pop
bound
xchg
sub
mov
cmp
popf
and
fisttpll
ja
adc
adc
or
mov
pop
jno
leave
or
mov
and
add
mov
xchg
jmp
es
mov
mov
jg
idiv
cwtl
cltd
iret
jbe
mov
lret
subb
mov
rcrb
jle
inc
jno
out
rcrb
rolb
es
mov
add
movsb
lods
loop
inc
cld
hlt
shlb
lods
push
pop
popa
in
in
pop
pop
dec
jle
cli
mov
addr16
pop
lea
pop
ljmp
shll
xchg
repz
mov
aad
enter
out
xchg
mov
mov
dec
ficoms
inc
addr16
sub
inc
lret
movsl
dec
jle
xor
fisubrl
aas
mov
push
cwtl
iret
fnstenv
aaa
outsl
shrl
inc
xor
jbe
jae
push
jmp
rcr
mov
xlat
xchg
mov
sub
sbb
je
loop
jp
mov
or
clc
adc
xor
xchg
add
leave
sub
dec
add
add
stc
bound
adc
mov
jnp
test
push
jnp
hlt
repnz
insb
and
mov
adc
jno
sbb
or
lret
mov
pop
cmp
or
add
mov
cmpsb
imul
jge
xlat
lretw
xchg
cld
mov
mov
mov
push
xor
xorb
adc
dec
add
or
loop
dec
popl
lock
mov
lahf
and
out
loop
inc
faddp
cmp
xor
into
mov
and
jb
orb
pop
cwtl
xchg
xchg
in
stc
mov
ds
dec
pop
mov
mov
mov
cmpl
cli
mov
clc
push
or
push
int
cmpsb
fldenv
std
cs
les
in
and
cwtl
das
xorl
jmp
xlat
repz
dec
lock
sbb
jnp
repz
or
int3
adc
pushf
repz
jnp
mov
xorl
aaa
insl
add
fwait
leave
arpl
jge
mov
sbbl
push
dec
loop
mov
jae
mov
repnz
mov
xchg
aam
rcr
outsb
mov
outsb
fnsave
dec
or
fwait
movsl
roll
xchg
push
xchg
stos
push
out
xchg
mov
push
xchg
mov
push
ljmp
dec
jns
xor
add
xor
xchg
push
xchg
or
xchg
inc
jp
jb
push
mov
jbe
cmpsl
push
sbb
lock
das
mov
das
xchg
test
sahf
cmp
sahf
bnd
pop
and
aad
lods
ss
or
pop
inc
push
mov
adc
lods
push
xchg
cwtl
sti
dec
mov
jo,pt
mov
push
cmp
insb
cltd
das
lea
pop
aaa
scas
cwtl
mov
and
cmpb
cmpsb
mov
add
mov
stc
jns
add
lret
xor
and
add
mov
lahf
pop
and
xchg
xor
adcl
in
jo
mov
mov
or
xchg
movsb
mov
mov
cltd
add
or
out
cs
xor
xchg
fisubs
nop
xorl
fstpl
mov
xchg
cs
dec
xor
in
out
sub
dec
insb
pushf
sbb
dec
arpl
ret
in
jmp
mov
std
and
xchg
insl
insb
add
mov
gs
lods
push
pop
pop
mov
popf
or
sbb
cmpsb
pop
lret
xor
xchg
dec
popf
fists
rolb
sub
movsb
push
lea
das
pop
pop
cmp
imul
test
es
ret
lcall
sbb
shl
nop
daa
sbb
enter
jmp
popa
inc
xchg
aas
fidivs
dec
sbb
icebp
mov
jge
xor
ficoml
cmp
cs
rol
lods
xor
jae
fs
add
mov
add
jmp
and
jecxz
dec
ljmp
pop
jbe
call
es
adc
movsl
dec
fistps
bound
pop
aaa
add
je
xor
test
jmp
xchg
sub
insl
ljmp
stos
jbe
lds
ret
in
xchg
push
inc
cltd
dec
sub
sbb
outsb
adc
jle
sarl
mov
fwait
mov
add
jns
gs
ja
scas
jb
stos
pop
mov
and
sub
loop
insl
arpl
pop
aas
arpl
das
or
fs
xor
pop
xor
cs
xchg
mov
je
in
insb
mov
inc
stos
ret
out
out
stc
mov
enter
out
rcr
bound
lods
repnz
ljmp
pop
sahf
je
andl
inc
and
pop
mov
xchg
movntps
jne
in
jbe
xchg
mov
scas
cld
mov
mov
inc
and
inc
xchg
lcall
hlt
add
jo
in
daa
cmc
or
dec
xchg
sub
sub
mov
out
sub
pop
xchg
ds
hlt
fists
sbb
sub
and
mov
cld
loop
ret
mov
mov
repz
inc
cmc
cltd
push
mov
fcomps
cmp
mov
and
data16
adc
in
add
and
inc
fldl
mov
cmp
mov
jo
cmp
jns
js
out
dec
popa
add
fldpi
mov
sti
add
pop
mov
dec
pop
outsl
cmp
adcl
sbb
push
lea
push
dec
mov
xor
mov
add
sub
sbb
mov
lahf
lcall
inc
ja
jmp
out
dec
out
or
test
aad
and
sbbb
repz
or
mov
xor
insl
dec
sub
es
xor
outsb
sahf
test
sub
aas
cmp
dec
and
inc
push
cmp
mov
iret
rorl
push
sbb
add
fcoms
lahf
daa
add
push
mov
cmp
push
fistl
jle
mov
dec
aad
mov
dec
push
pop
xlat
jg
dec
add
scas
sbb
and
jp
in
out
shrl
stc
shrb
lds
add
mov
cvtps2pi
lret
sarl
cmp
sbb
jge
in
mov
mov
rclb
pop
and
daa
out
or
lods
ret
push
cmp
xchg
cmp
mov
mov
add
and
test
mov
fs
js
jo
mov
cmp
call
movsb
mov
adc
movsl
fistpl
push
inc
push
pop
mov
fs
aaa
add
cmp
sbb
sbb
shl
adc
es
ret
adc
adc
and
xchg
sar
jb
xchg
lcall
push
imul
cltd
repz
mov
inc
sub
jg
ss
pop
test
jmp
je
loopne
push
aas
and
rorl
pop
pop
test
addr16
loop
sbb
sbb
das
in
mulb
jg
fidivs
lods
shrl
mov
fadds
loope
out
notb
pop
push
std
add
push
or
test
mov
xlat
add
dec
ja
movsb
scas
dec
jns
and
cmpsb
inc
pop
adc
cmp
xchg
vcvtsi2sdl
adcb
imul
sarl
rolb
add
pop
sti
push
aam
mov
loop
gs
lea
pop
in
pop
lea
push
les
sbb
pop
fwait
add
rcl
add
jb
push
sti
cli
push
xor
mov
adc
mov
inc
and
and
mov
inc
pop
int
outsl
inc
sahf
xor
mov
lcall
dec
outsl
cmpsl
repnz
pop
cmpsb
cltd
lea
lcall
lock
pop
mov
sbb
fistpll
gs
adc
out
add
mov
push
jl
call
loop
ljmp
lds
jmp
movsb
repz
loopne
popa
adc
mov
push
inc
jmp
test
pop
cmpsl
add
hlt
mov
cmp
and
xchg
cmp
xor
jg
sti
mov
das
sub
jmp
adc
pmulhw
in
mov
cmp
adc
mov
lock
fmulp
pop
jge
xor
mov
mov
jbe
sti
mov
clc
mov
push
movb
sbb
mov
push
push
jns
ret
xchg
out
sar
inc
scas
cmpsb
outsb
cmp
fwait
cmpsl
sbb
mov
jmp
int
adc
xor
cmc
fdivrl
lods
loop
lods
test
roll
sub
xor
in
mov
push
inc
sbb
sbb
xchg
sti
mul
aas
fisttpll
xor
fldenv
orl
icebp
cmp
inc
mov
inc
mov
fisttpl
icebp
hlt
adc
inc
jp
mov
adc
xorb
lcall
test
xlat
xor
std
or
mov
xor
rcrl
bound
sbb
fwait
mov
sarl
out
fmul
xor
aad
jno
inc
test
cmp
lock
ret
mov
mov
sbb
loop
add
movsl
sub
jno
and
inc
mov
jnp
fbld
inc
adc
fildll
dec
bound
mov
aas
insb
add
scas
pop
lret
cmpsb
inc
inc
xor
push
jnp
sbb
cli
jmp
cmpsl
fistps
arpl
int
ja
test
xchg
rcrb
mov
lea
mull
jae
loop
jnp
sarl
in
push
scas
or
xchg
xor
xchg
and
iret
and
and
adc
call
outsb
jno
cltd
stos
mov
aaa
inc
or
push
jl
mov
fcoml
and
pusha
repnz
pop
movsb
adc
repz
push
jl
ljmp
daa
sbb
or
jbe
ficompl
mov
lods
cmc
sub
nop
cmp
out
mov
stos
xchg
lret
inc
movsb
dec
leave
adc
mov
outsl
mov
push
mov
addr16
xor
int3
fisubrl
aaa
mov
xchg
cltd
lods
in
mov
xor
mov
mov
jmp
ds
inc
xchg
jbe
stos
cmpsb
mov
push
mov
sar
outsb
sbb
adc
fidivrl
push
mov
cmp
xor
imul
lds
fnstsw
sub
bnd
shll
sub
repnz
xor
popf
enter
out
mov
dec
mov
pop
add
add
in
dec
rorb
iret
dec
push
sbb
adc
mov
in
or
pop
xchg
pop
pop
test
sbb
sbb
inc
and
lcall
push
sub
dec
stos
xor
sbb
mov
dec
test
out
mov
jns
dec
aam
xlat
clc
testb
iret
inc
int
cmp
test
push
xlat
shl
mov
adc
mov
or
xor
shr
add
and
cmpsl
add
nop
xchg
insb
int3
test
movsl
cmpsb
inc
push
cmp
cltd
outsl
shlb
cli
cmpsb
inc
or
popf
jae
jl
mov
fldt
sbb
adc
lds
pusha
mov
mov
or
add
movsb
lret
and
push
rclb
mov
inc
push
ret
gs
mov
aas
push
lds
cmp
add
outsb
or
mov
loop
ret
insl
imulb
dec
mov
sub
inc
inc
inc
fdivrp
inc
sub
cmp
out
popa
xor
and
fists
dec
pusha
lcall
inc
hlt
dec
fnstsw
mov
lahf
test
or
add
cmpsl
and
cmc
cmp
mov
mov
rclb
clc
ja
add
push
imul
fsts
mov
repnz
add
outsl
adc
ret
sub
push
test
jae
add
pop
stos
subl
xor
sbb
dec
jp
rcll
fidivs
lock
ret
mov
mov
clc
ret
popf
rcl
ret
mov
sub
dec
dec
push
outsl
add
mov
add
test
lock
lcall
loop
lea
xchg
mov
les
fisubrl
dec
fldenv
mov
adc
mov
sub
sarl
and
jnp
fadds
dec
sbb
inc
push
pop
pop
jl
adc
jns
or
lcall
pop
adc
aas
or
ds
sub
adc
xchg
fcomps
jecxz
or
mov
push
cmp
and
mov
bound
push
insl
fcomp
les
icebp
fadds
arpl
jns
mov
mov
rcll
cmp
xchg
jno
xor
xor
jb
sub
cmpsl
shl
movsl
inc
mov
inc
cmc
lretw
sub
push
pop
popa
loope
repnz
loop
add
in
popf
xchg
push
push
ja
jo
in
lock
push
nop
js
cmc
loop
mov
xchg
add
in
js
cmp
add
fsubs
sub
adc
out
sbb
ficomps
jae
lret
shll
fdivrs
xchg
insb
stos
jne
sbb
jl
jge
aam
lock
adc
in
mov
or
mov
pop
rcrb
pop
scas
push
mov
add
test
mov
in
test
in
xchg
sbb
sbb
cltd
dec
inc
mov
fnstsw
loopne
jg
sahf
outsb
pop
out
xchg
or
scas
mov
ss
js
mov
cmpsb
and
pusha
aam
push
outsb
andl
dec
scas
dec
mov
cmc
cmp
pushf
sbb
fldt
outsb
inc
xor
sub
xchg
mov
xor
das
aad
mov
pop
pop
sub
repnz
mov
and
daa
std
mov
sbb
sub
call
icebp
cmp
mov
sbbb
xchg
pushf
inc
stos
jnp
pop
and
jg
mull
test
push
push
pop
mov
dec
dec
mov
imul
cli
cli
movsl
mov
mov
lods
mov
stos
pop
mov
cli
pop
lds
ficomps
pop
xchg
cmp
leave
adcb
add
fimuls
inc
fldt
or
push
fcoms
shll
xchg
jl
insb
ss
test
icebp
psubw
xor
outsb
mov
lds
push
outsb
sti
mov
insb
les
add
clc
ret
andb
dec
push
sub
in
lock
mov
rcrl
xor
in
inc
loope
push
dec
jmp
repnz
outsb
push
test
fdivr
aam
call
add
imul
fwait
or
sub
mov
adc
fnsave
sub
into
pop
in
sbb
je
outsb
or
sarl
cli
in
iret
and
outsb
mov
cld
pop
sub
mov
sbb
pop
rclb
pop
or
jne
push
int3
and
aam
pop
fisttpl
rcr
pop
movb
testl
jno
and
adc
mov
fs
and
rcll
iret
jno
mov
pusha
ret
inc
mov
ret
int
xor
ljmp
add
and
mov
mov
lret
xor
dec
repnz
add
push
pop
sbb
stos
dec
movsl
cmp
std
push
adc
mov
xchg
icebp
inc
add
adcb
push
cli
adc
sub
push
daa
xor
pop
mov
in
push
ss
stc
jae
sub
sub
xor
jnp
sbb
mov
lods
gs
jl
out
cltd
fdivr
mov
add
sbb
loopne
sbb
dec
bound
push
psubq
or
das
nop
dec
mov
iret
jle
sbb
dec
adcl
addb
inc
mov
pop
stos
stos
jb
fnstcw
jnp
mov
dec
xchg
int3
in
test
loopne
aas
cwtl
rcr
aas
adc
shlb
sbb
adc
add
in
or
jb
imul
ret
popa
iret
test
clc
adc
push
out
loope
push
imul
push
fildll
or
cmp
insb
cmp
and
pop
aaa
lret
xchg
or
je
aad
sbb
add
add
jne
sbb
pushf
movsb
xorl
add
add
clc
jmp
lret
int3
push
pop
mov
and
mov
pushf
lcall
xchg
inc
divl
mov
sub
lret
aas
mov
ljmp
in
or
jno
xchg
loop
pop
lret
orb
dec
push
adc
loope
mov
push
fucom
inc
in
iret
cld
mov
test
jmp
xchg
xchg
decl
pop
mov
cmp
cmp
or
mov
add
out
pop
pusha
imul
pop
aad
aad
psubusw
mov
xchg
push
pop
int
dec
dec
xlat
xor
lods
gs
and
aad
fwait
and
cmp
cltd
add
xor
jg
dec
add
sub
dec
sbb
dec
xchg
add
cmp
jle
sbb
jno
aam
pop
xchg
pop
cmpsb
pminsw
fisubs
mov
fwait
mov
inc
and
jle
bound
lret
pop
adc
es
pushf
cmp
xchg
insb
jb
into
subl
inc
repz
adc
jmp
enter
mov
dec
dec
lea
xor
cld
es
xor
push
cs
xchg
jge
ret
ret
mov
test
jl
jl
es
lods
or
shr
fstps
sbb
sti
sub
and
pop
out
push
pop
push
jno
cld
inc
mov
jbe
jo
imul
ret
xorb
int
xor
add
out
enter
sbb
mov
dec
jne
jle
sbb
stos
xchg
pop
jo
mov
jnp
mov
push
repnz
adc
push
loope
pop
ss
push
nop
sti
mov
jmp
fldl
jne
jle
lock
inc
neg
sbb
mov
fistpll
pop
cs
adc
rcll
dec
or
jbe
mov
xchg
or
fldenv
call
nop
jbe
loop
pop
jecxz
pop
push
jle
jno
shrb
push
popf
ja
push
jmp
std
and
xor
push
out
clc
enter
cmp
adc
push
loope
loope
in
mov
mov
mov
mov
in
xor
cmp
push
push
mov
jmp
push
add
int
ja
popa
jmp
sahf
add
xor
xchg
or
out
xchg
mov
aaa
fidivrl
or
icebp
mov
sahf
xchg
sti
push
andl
imul
cmc
inc
dec
scas
mov
sahf
pushf
xchg
jb
cmp
inc
jbe
sbb
fs
not
adc
pushf
repnz
or
or
push
xchg
aaa
ds
jg
inc
push
fwait
dec
xchg
enter
jl
cld
pop
imul
neg
rol
sbb
gs
push
dec
jnp
lds
pop
mov
dec
movsl
mov
sub
and
gs
and
or
jge
mov
dec
adc
pop
lods
aaa
sti
aam
xor
mov
cmp
inc
arpl
out
sti
sub
inc
lods
scas
adc
add
mov
repz
aad
ja
test
mov
xor
push
adc
mov
inc
or
lds
sbb
xchg
mov
fimuls
xor
mov
push
sub
adc
sbb
movsb
test
sub
add
push
out
jp
mov
sarb
push
xchg
sbb
pop
xor
sbb
rorl
mov
arpl
push
jle
cmpl
cmc
bound
in
test
jbe
sub
or
test
mov
inc
andl
cmp
rcr
or
push
pop
inc
inc
shrb
cwtl
and
push
mov
pop
bound
mov
les
push
pop
pushf
fcompl
sbb
inc
mov
insl
push
scas
mov
or
jmp
repnz
xor
popf
shrb
mov
lret
out
test
notb
jl
add
lret
sub
or
lahf
mov
repz
mov
frstor
retw
pushf
xor
pop
mov
dec
nop
cmp
pop
add
popa
sarb
daa
xor
sbb
daa
mov
punpckldq
or
xor
lods
sbb
iret
sub
ss
in
scas
push
mov
pop
inc
inc
test
adc
jg
fsubrs
mov
pushl
movsl
mov
movsl
call
inc
cmp
sbb
test
imul
or
rcrl
xchg
mov
ss
popl
lods
fcoml
xor
out
push
movsb
mov
xor
push
outsl
inc
cmp
sbb
cld
fnstenv
xchg
cmpsb
mov
movsl
shll
fwait
jmp
pop
sbb
mov
inc
ljmp
jecxz
roll
inc
pop
sahf
cwtl
lock
imul
rolb
js
sarb
lret
out
stos
bound
int
arpl
pop
mov
mov
jb
shl
stos
mov
jg
sbb
push
push
in
cmc
cmp
faddp
daa
aas
loope
scas
jg
dec
push
aaa
fdivrs
aas
roll
add
and
clc
jns
jno
scas
jb
sbb
sarb
add
leave
sbb
dec
je
pop
je
ljmp
mov
repnz
clc
cmc
fisttpll
insl
dec
fldt
loop
adc
xor
sub
aad
in
loop
pop
cmpsb
or
addl
test
mov
dec
ss
or
popf
test
call
xor
mov
sub
cltd
sahf
mov
ret
mov
inc
inc
test
shl
lock
mov
mov
xor
mov
fwait
pop
push
ficompl
mov
fistpll
or
mov
movsl
xlat
es
std
sbbb
jg
jo
hlt
arpl
or
inc
mov
cmp
sbb
jmp
inc
sbb
sbb
mov
push
ja
push
fnstenv
nop
arpl
int3
popa
pop
in
and
fistpll
icebp
rcll
or
clc
cmp
and
mov
push
dec
fildl
outsb
and
add
fucomip
jmp
xor
push
shlb
jmp
jl
add
sbb
nop
mov
or
test
cmp
cltd
movsl
push
mov
pop
or
lcall
mov
mov
aam
rol
pop
add
xor
popa
mov
mov
mov
adc
fnstsw
and
push
adc
xchg
jno
cli
pop
pop
je
test
stc
xor
repz
jno
insl
shlb
mov
sbb
jg
xchg
bound
ret
and
shl
jno
bound
mov
shll
scas
lret
in
or
les
xchg
es
aaa
lret
pop
es
dec
inc
aas
imul
stc
jnp
jb
jecxz
lock
jnp
jno
jbe
mov
push
lahf
dec
dec
add
loop
idiv
lahf
or
fists
lcall
and
xor
cmp
js
test
mov
xchg
cmp
mov
pop
lock
test
popa
insl
mov
sub
das
je
sbb
gs
pop
fisubrs
cmp
xlat
mov
jecxz
dec
leave
mov
cmp
std
push
addr16
mov
andl
js
ljmp
test
push
sbb
fwait
dec
xchg
adc
shrb
dec
mov
mov
popa
stos
std
mov
adc
scas
xchg
into
jmp
repnz
lods
push
mov
std
dec
mov
notb
mov
lahf
andl
mov
out
sbb
and
ljmp
mov
push
icebp
dec
fs
push
push
xchg
scas
shll
xlat
cmpsl
add
or
repnz
xor
mov
aas
jle
push
and
stos
push
daa
js
leave
icebp
std
add
jno
and
xchg
outsb
gs
and
fimull
mov
mov
and
mov
out
push
repz
mov
fidivrs
mov
push
xor
loop
das
add
int
mov
call
mov
sub
fadds
dec
notl
fstpt
mov
les
out
mov
imulb
cmp
or
leave
pop
aam
sub
cmp
lds
mov
cwtl
nop
call
pop
mov
dec
pop
pop
mov
sub
dec
es
popl
add
rolb
dec
inc
mov
aaa
or
out
out
outsl
pop
add
arpl
aas
sub
push
mov
pop
int3
adc
cltd
push
std
adc
fimuls
xor
not
mov
pop
xchg
nop
insb
sub
sbb
mov
sbb
ljmp
data16
sub
pop
jb
pusha
out
jg
xchg
pop
test
lret
push
je
loope
or
jae
push
sub
stos
or
stos
mov
cmc
ret
sub
adc
jle
and
in
dec
dec
mov
cmp
lock
ficomps
stos
ja
decb
out
cmp
lea
cmp
mov
fwait
dec
xchg
stos
movsl
fbstp
sahf
popa
mov
negl
lods
outsl
xchg
adc
js
mov
adc
mov
es
sbb
fbld
in
lock
aam
scas
lahf
loopne
jnp
cs
out
gs
daa
mov
dec
aam
nop
imul
or
int
stos
jg
sar
addr16
stos
lcall
jae
loope
mov
sbb
rcl
fisttpll
dec
xor
and
mov
movsb
fldl
xchg
cmp
xchg
sbb
jo
ret
push
std
or
or
cltd
or
pop
pusha
stos
ljmp
fwait
pop
mov
lds
pop
dec
iret
xor
insl
jns
push
dec
insb
std
mov
and
jae
xor
stos
jo
adc
dec
test
ljmp
cmp
sbb
or
clc
fcmovbe
out
jmp
mov
enter
outsb
inc
push
push
mov
popa
cwtl
xchg
fs
add
enter
iret
mov
fists
sbb
sub
jmp
inc
pop
out
faddp
sbb
adc
add
adc
inc
cmpsl
dec
mov
daa
ret
sar
ret
into
es
fadd
push
and
lret
ljmp
in
cli
jb
xor
mov
out
mov
fidivrl
mov
imul
dec
sahf
das
jmp
out
xchg
in
jb
or
xchg
loopne
lods
sbb
xor
leave
push
subl
lds
cmp
jno
push
out
cld
inc
inc
pop
push
loop
cmp
enter
pextrw
iret
hlt
hlt
fisubrl
push
dec
int
adc
in
jmp
mov
push
mov
jae
loopne
and
scas
and
lret
xchg
mov
mov
ss
inc
cmc
cmp
in
or
push
add
ret
mov
mov
mov
das
or
ficompl
cmp
movsb
icebp
or
lret
sbb
and
inc
cmp
mov
repnz
stc
and
sbb
out
dec
push
fstps
std
scas
aaa
ljmp
sub
xor
push
jl
shrb
or
mov
idivb
in
fsubrp
pop
mov
loopne
aas
cwtl
imulb
ret
stos
xchg
adc
repz
js
sub
call
pop
mov
test
in
arpl
movsb
scas
sbb
lret
sub
mov
dec
out
out
sub
pop
push
popa
push
shl
mov
loop
aad
sub
push
enter
inc
fnstsw
outsl
mov
inc
test
sbb
mov
and
adc
inc
leave
insl
js
clc
xor
sub
pop
push
ds
mov
pop
ret
or
les
stos
rclb
or
cmp
call
cmp
nop
mov
in
addr16
dec
mov
ds
aas
sbb
gs
push
sub
jns
insb
daa
pop
and
sub
aaa
jge
data16
es
mov
mov
pop
test
push
mov
dec
lods
scas
aad
outsl
cltd
pop
pusha
push
fadds
jb
sbb
pop
imul
xlat
and
in
roll
popf
in
pop
jb
adc
jnp
scas
test
add
pop
mov
pop
js
mov
idivb
or
stos
push
inc
mull
lahf
movsl
dec
add
loop
out
mov
mov
or
inc
add
xor
pop
mov
cmp
sub
mov
pop
ffree
xlat
pop
fbstp
adc
cmpsb
les
sbb
sbb
dec
fisubl
fdivs
dec
cmpsb
mov
pop
orl
jge
arpl
push
fldl
inc
mov
insb
xor
jns
push
out
out
divl
repz
cmp
mov
sub
jno
xor
into
stc
rorb
push
push
cmc
mov
cmpl
mov
pop
iret
sbb
cmc
notl
and
or
mov
mov
in
sarl
hlt
xor
inc
aaa
and
mov
pusha
jmp
je
dec
xchg
cmp
sub
jp
hlt
xor
fistps
loopne
xor
jbe
cmp
add
int3
iret
in
push
out
rorl
pop
push
dec
cltd
or
xchg
mov
call
sbb
aaa
cmp
stc
and
rcrl
cmp
pop
sub
and
in
xchg
adc
fcoms
cltd
mov
aaa
jmp
jmp
cmpl
or
es
inc
inc
fsubrl
or
mov
cmp
lcall
or
test
outsb
aad
into
dec
lcall
test
lock
jnp
cli
enter
pop
fildl
xor
out
mov
pop
aaa
sbb
lea
jecxz
or
xor
call
push
call
sbb
xchg
mov
add
mov
xor
sub
xlat
sbb
into
add
cmp
enter
sbb
fdiv
cli
cmp
push
in
jmp
sbb
fstp
repnz
mov
mov
jnp
inc
cmp
push
roll
js
es
pop
int
mov
aad
fdivs
lods
popf
roll
das
jae
mov
add
xor
mov
push
lods
fcmovu
outsb
mov
loope
mov
lea
push
ss
adc
xchg
icebp
out
inc
aam
test
mov
rorl
jmp
or
int
les
icebp
dec
mov
adc
daa
lea
sub
sahf
dec
popf
jle
and
jecxz
mov
adc
fisubrl
and
in
sbb
mov
pop
cmpsb
cmp
movsb
add
test
mov
out
push
ret
jnp
lods
clc
cmp
push
dec
or
mov
leave
xchg
scas
movsl
push
xchg
in
lcall
shrl
call
mov
aam
adc
std
or
sub
daa
xchg
scas
add
xor
lods
repz
out
jno
adc
mov
mov
mov
outsl
jecxz
mov
int3
inc
mov
je
mov
sbb
jne
sbb
xor
icebp
push
push
lret
jbe
or
dec
es
test
repnz
dec
and
outsb
pushl
std
and
add
fs
daa
addr16
sub
and
or
pop
gs
out
insl
cs
test
movsb
lods
or
lods
mov
or
out
ror
cmp
leave
and
je
test
jae
movsl
pop
xor
addr16
dec
loop
or
lods
adc
xchg
adc
shrl
lods
adc
lea
pop
fdivrl
sti
orb
jp
mov
push
shl
lock
cmp
xor
das
sti
jnp
je
int3
aaa
sahf
shrl
pushf
dec
inc
mov
fdivrp
testb
rcr
push
mov
in
out
jne
adc
pop
inc
movb
mov
clc
rclb
out
adc
sub
out
sub
imul
pop
cmp
scas
jecxz
push
lret
test
inc
mov
add
and
mov
fs
in
pop
arpl
adc
les
push
xchg
jae
loope
test
cmp
rcl
xchg
push
add
jg
out
push
dec
in
or
and
hlt
adc
jo
cmp
jmp
insb
dec
cmp
aam
negl
mov
inc
mov
push
push
pop
mov
repnz
sub
aas
cs
outsb
and
mov
jnp
mov
xor
and
mov
jge
es
out
sti
fistpll
mov
dec
pop
addr16
push
jae
xorb
push
nop
cmp
push
mov
cmpsl
out
lcall
push
ficomps
mov
mov
or
xchg
add
cmp
movsl
xor
pop
and
xchg
pop
push
dec
fldenv
imul
std
aas
sbb
fnstsw
adc
jecxz
jbe
das
fsubl
inc
lods
sub
in
test
lcall
ja
nop
lcall
fs
xlat
push
xlat
xchg
or
jb
adc
jp
gs
mov
mov
fcmovu
popf
loope
je
push
stos
push
stc
sub
out
push
lcall
jl
add
push
enter
cs
sarl
xor
jg
js
xor
jp
sub
sub
cmp
js
adc
hlt
xchg
cltd
bound
mov
xor
loop
notl
or
repnz
dec
lahf
cwtl
ja
push
xlat
mov
pop
sub
into
hlt
sbb
mov
pop
dec
fisttpll
iret
rcrl
jmp
sub
sub
jno
cmpsb
in
pop
mov
jb
daa
xor
pop
jp
mov
cli
and
mov
scas
lods
fwait
mov
mov
xor
loope
call
test
lock
xlat
xchg
sub
leave
xor
enter
out
sahf
fists
lds
iret
lcall
cmp
mov
test
xor
xchg
ss
fwait
or
push
xor
push
scas
fldenv
jae
into
ret
sahf
dec
fisubl
lock
adc
sarb
jmp
xchg
roll
jno
scas
inc
mov
jns
inc
dec
mov
add
sti
das
int
mov
icebp
rclb
xchg
out
and
push
rorl
mov
mov
daa
pop
call
xchg
hlt
fildll
mov
rolb
outsl
lods
hlt
jno
push
mov
xchg
dec
leave
lret
push
push
imul
sahf
outsl
mov
fidivl
lods
stos
pop
imul
loop
or
pusha
call
test
lcall
sahf
cltd
es
popa
nop
mov
mov
and
dec
sbb
sbb
xor
dec
inc
lahf
jge
daa
or
lods
mov
iret
sbb
int
stc
cmpsl
and
stos
add
mov
mov
lahf
jnp
cmpsl
jecxz
and
pop
and
adc
sbb
int
stos
add
pusha
mov
push
push
call
xchg
pop
lods
xorb
push
pop
mov
sti
imull
in
jg
mov
insl
ss
test
sub
push
pop
punpckldq
mov
fs
jg
fsubs
mov
inc
push
xchg
dec
xor
lahf
ss
test
push
push
fists
repz
push
subl
shlb
mov
loop
sub
movsb
xchg
leave
aas
popf
inc
or
test
lock
dec
cmp
mov
mov
push
mov
addr16
cmp
jle
in
shll
mov
lfs
rcrl
xlat
pop
adc
cmpxchg8b
cmp
xchg
dec
pop
loope
cltd
inc
inc
mov
test
imul
jb
insb
insl
popa
cli
sbb
insb
add
fsubp
dec
sbb
mov
popa
sub
jne
cld
int3
xchg
xchg
push
mov
cmp
in
sub
xor
sbbb
mov
sub
pop
or
fidivrs
stos
xchg
jns
mov
je
pushf
repnz
imul
jae
mov
inc
dec
lret
daa
cmp
psubw
dec
sub
lcall
mov
das
out
ret
int
pushf
cmp
out
negl
mov
ret
xchg
adc
and
movsb
push
or
bound
jne
imul
insb
cmp
sbbl
adc
jns
add
rep
scas
das
fs
stc
mov
jle
fs
xor
mov
icebp
hlt
faddl
rolb
mov
stos
xchg
push
push
and
jle
loopne
test
cs
mov
idivb
cltd
and
aas
popf
scas
loopne
jbe
sub
mov
fwait
dec
sarl
xchg
inc
fsts
sub
jge
call
in
sub
sarb
push
enter
jb
xor
popa
popa
dec
and
test
sub
arpl
test
jp
cld
nop
pop
cmpsb
pushf
mov
rorl
inc
adc
or
pop
mov
mov
lcall
cmpsl
sbb
sub
mov
xor
sbb
xor
hlt
stos
cmpsb
dec
mov
fsts
loope
jecxz
dec
in
sub
insl
call
xchg
jle
adc
xor
int
pushf
clc
rorb
loopne
xchg
xor
cs
jg
daa
mov
lds
iret
sbb
inc
xchg
pusha
ficomps
jge
int
lock
arpl
and
movsl
popf
jp
adc
xor
fwait
or
mov
xor
sub
and
jp
ret
ss
addb
jle
pop
std
push
pop
inc
das
adc
out
popf
fimuls
mov
test
adc
xor
pop
movq
lods
push
or
std
ja
fwait
out
lret
int
xor
mov
imul
mov
inc
mov
push
sbbb
dec
xchg
mov
cmp
mov
icebp
cwtl
imul
xchg
jg
cmp
mov
shrb
arpl
xor
nop
cmc
mov
ljmp
enter
scas
push
rcll
cmp
sub
shlb
sbb
int3
leave
cmp
jnp
or
icebp
int
mov
sbb
push
fwait
xchg
into
adc
inc
jecxz
or
adc
aad
iretw
or
xchg
jmp
adcl
icebp
jmp
mov
stos
push
js
or
adc
lods
icebp
les
aas
and
cmp
stos
jae
sub
popf
adc
xor
xchg
lret
xor
mov
fcomps
clc
rcll
mov
cmp
mov
inc
jl
and
fimull
mov
or
mov
sbb
xchg
shl
icebp
xchg
data16
sub
pop
sar
les
test
and
push
dec
incl
and
or
lods
cmp
and
test
xor
xchg
outsl
cld
sbb
ja
jmp
add
mov
dec
mov
not
pop
fucomip
xchg
es
adc
lods
stos
cmp
lret
lcall
cmp
pop
push
scas
fwait
jg
jbe
sub
mov
cli
jmp
xchg
jl
inc
and
out
dec
dec
inc
aas
sahf
stos
adc
out
jle
push
jl
scas
imul
or
ret
push
dec
add
adc
mov
loopw
mov
shrl
addr16
mov
movsl
adc
jns
and
ret
in
insl
lcall
cwtl
mov
nop
mov
mov
adc
add
sub
scas
stos
lea
jmp
and
repz
insl
sahf
mov
or
mov
dec
enter
dec
punpckhbw
mov
push
xchg
and
fstl
mov
push
mov
jae
push
cmp
sbb
clc
popf
addr16
mov
nop
mulb
aaa
test
cli
loopne
aad
xor
lea
mov
xchg
pop
loopne
lds
pusha
shrl
or
add
aad
mov
das
inc
lret
pop
aas
out
cmp
adc
ss
sub
int
loopne
test
or
hlt
lods
or
movb
cmp
aad
fisttpll
xor
pop
enter
pop
mov
mov
jle
sbb
cmpsl
sbb
int
xchg
sub
leave
rorl
mov
ds
and
out
xor
sbb
fwait
push
jmp
or
mov
mov
loope
call
dec
mov
or
push
lock
stos
lea
mov
cltd
aad
lea
cmp
sub
cmpsl
sbb
jae
lods
daa
jle
jae
sub
movsb
mov
dec
mov
outsb
xor
addr16
adc
push
pop
popa
sbb
sarl
addr16
testb
test
xchg
mov
pop
push
scas
cmpsl
xchg
idivl
inc
mov
fists
mov
xchg
push
xor
sahf
push
inc
aam
into
and
mov
lds
and
xchg
jnp
push
lock
push
inc
std
cld
xlat
mov
dec
push
mov
jge
xchg
sbb
pop
xchg
sub
xchg
jno
push
mov
lods
sub
test
adc
lea
js
push
dec
in
in
xor
and
push
xchg
xor
shrb
outsl
adc
push
or
cmpsb
jg
xor
mov
cwtl
nop
mov
fwait
jnp
xlat
adc
lds
in
mov
push
jnp
rolb
insb
out
mov
out
dec
mov
ret
cltd
int3
mov
insb
repz
jmp
push
sbb
and
xchg
scas
cmpsl
psrld
iret
mov
fdivrs
sub
mov
pop
insl
or
std
push
push
imul
inc
or
push
dec
cmp
jnp
in
scas
sbb
jb
or
lahf
sti
fmulp
movsl
add
jge
cmp
xchg
and
mov
add
push
dec
sbb
fisubrl
movsl
fisttps
xchg
test
adc
xchg
xchg
movsb
das
xor
roll
pop
xchg
jmp
jecxz
mov
fsubrp
push
leave
aas
int
loope
iret
and
add
dec
jmp
jle
push
and
jg
push
sbb
insl
pop
add
and
mov
fs
jbe
loop
imul
jno
xor
xor
jge
aam
or
inc
pop
mov
cltd
int
outsl
mov
icebp
aad
ret
cmpsb
dec
xchg
push
xor
mov
pushf
call
adc
cli
mov
hlt
addr16
or
push
aad
movsb
dec
mov
mov
sahf
inc
jns
stos
repz
mov
mov
push
sub
mov
mov
call
push
xchg
aam
data16
jmp
popf
inc
pop
mov
daa
pushf
scas
out
push
aad
mov
dec
inc
jnp
push
std
mov
cltd
pop
leave
mov
push
mov
rolb
push
test
test
cmc
andb
push
shlb
mov
arpl
jp
in
mov
repz
sbb
cmpb
cli
insb
addr16
roll
push
push
stos
imul
push
test
pusha
mov
add
mov
orl
ffree
cltd
add
xor
insb
mov
adc
sbbb
fistps
dec
imul
xor
pop
fidivl
shl
icebp
pop
std
cmpb
mov
rorl
or
pop
cwtl
mov
or
dec
mov
leave
in
pop
add
jb
mov
imul
shlb
js
cltd
mov
xor
xor
push
lahf
nop
frstor
imul
cmc
cmp
cmp
call
aaa
insl
and
outsl
jbe
pusha
xor
push
xor
ds
push
mov
jp
imul
fisubl
adc
and
mov
dec
add
jmp
inc
adc
outsb
pushf
pop
bndldx
jmp
out
sub
icebp
in
mov
xchg
inc
mov
and
push
pop
pop
inc
or
pop
icebp
subb
fmulp
ret
bound
cmp
addr16
nop
ds
icebp
scas
mov
fistpl
enter
jo
push
xor
cwtl
je
add
imul
pop
pop
test
jp
icebp
push
cmp
sub
xor
fidivs
aas
test
xchg
roll
test
movsb
jb
adcl
jp
add
fisubl
adc
pop
aas
mov
cmp
fsubs
jbe
inc
xor
mov
xlat
jne
sub
jge
xor
aad
mov
and
fdivrs
cmp
hlt
aas
cmp
mov
xchg
add
xor
pop
pop
clc
mov
clc
sub
into
sub
push
mov
xor
jb
pop
repz
inc
mov
mov
sti
pop
aas
and
jle
leave
cmp
sbb
fst
push
dec
xor
jae
mov
pop
addr16
pop
movsl
jae
and
icebp
fiaddl
mov
mov
js
daa
mov
jg
sbb
fucomi
int3
pop
mov
cmpsl
dec
popa
xchg
roll
rcll
call
sub
out
xchg
popf
xor
add
pop
pop
adc
in
into
inc
push
outsl
xchg
enter
inc
fcmovu
cmp
aas
testl
jg
sbb
jle
mov
inc
shr
ret
inc
dec
das
addr16
out
lahf
fdivl
inc
adc
testb
lea
pop
mov
fistps
lret
pop
push
mov
in
xor
cmp
xchg
nop
push
stos
cld
sti
movsl
jle
test
call
cmp
das
lock
das
repz
or
mov
add
fs
push
sub
xchg
jae
dec
xchg
bound
or
jnp
sub
and
jle
in
int3
mov
inc
ds
xchg
ja
or
std
xlat
stos
adcl
out
xchg
jno
jg
cmc
mov
or
or
iret
ljmp
jge
cmp
mov
mov
hlt
dec
mov
mov
sbb
int3
int3
adc
mov
adc
inc
push
inc
daa
int3
in
mov
or
inc
imul
rcrl
lret
inc
lret
pop
insb
lds
call
lcall
pop
add
ss
lahf
mov
jmp
mov
jno
push
movsl
imul
or
jecxz
fdiv
push
mov
inc
inc
cmp
or
xor
jecxz
dec
inc
jecxz
and
dec
mov
jae
dec
sub
cmp
mov
mov
pop
pop
mov
lret
and
adc
push
push
push
rcrb
push
xchg
pop
lods
rcl
inc
pop
mov
sbb
xchg
mov
out
jo
stc
dec
or
movsb
imul
lret
lahf
cmp
out
ja
jb
cltd
out
adc
jmp
das
add
push
mov
mov
push
es
loopne
sub
scas
jmp
ret
inc
lcall
fistpll
test
mov
inc
insl
lods
fwait
inc
shl
adc
mov
iret
push
enter
es
icebp
dec
subb
xchg
xchg
sub
out
adc
in
rorl
movsb
push
movsl
sub
jne
jo
sub
imul
cmpsb
jbe
dec
lret
addb
dec
int
cli
dec
sub
loop
cmp
hlt
jmp
lods
ds
subb
mov
push
testl
cmc
cmc
pop
or
sti
mov
js
in
or
shlb
and
vucomisd
in
fldenv
test
or
popf
lods
test
loopne
popl
dec
daa
inc
test
popf
adc
mov
fisttpl
inc
mov
fs
out
jle
xchg
dec
sub
mov
testl
mull
or
mov
adc
pop
in
lahf
xor
pop
ficompl
cld
sub
and
enter
mov
fwait
inc
sbb
xor
ss
sbb
add
arpl
push
je
daa
mov
and
xchg
nop
mov
insl
iret
test
xlat
fstpl
xchg
push
push
repz
mov
outsb
xchg
subl
add
pop
mov
add
xchg
jbe
ficomps
es
clc
lods
adc
adc
and
xor
xchg
cmp
mov
jbe
fsubp
lret
mov
jecxz
das
enter
cmpsl
inc
mov
lahf
sbb
dec
icebp
notl
and
dec
call
push
int
cmpsl
mov
dec
cmp
push
jle
sub
mov
mov
inc
mov
inc
push
les
shr
jle
int3
out
pop
and
ds
pop
pop
addr16
loop
mov
xchg
lret
pop
inc
jbe
inc
cwtl
mov
pop
rcr
adc
movsl
pop
idivb
push
and
mov
cwtl
inc
jno
shll
adc
shll
mov
fcomps
adc
jne
fbld
test
sbb
data16
jmp
ror
pop
pop
xchg
push
pop
sahf
mov
pop
push
xor
mov
mov
dec
sbb
mov
ret
mov
imul
push
xchg
aaa
in
xor
addb
add
mov
mov
cwtl
jp
sbb
out
insl
mov
adc
in
and
int
hlt
rclb
je
data16
cmc
mov
dec
not
xchg
fwait
negb
and
jle
push
jmp
mov
rcll
mov
lds
pcmpgtb
shrl
sub
sub
push
and
out
jp
je
lods
add
and
xchg
jbe
jnp
push
and
inc
push
lret
movsl
dec
adc
ds
mov
out
fimuls
pusha
cs
cmp
mov
out
in
ja
sub
xor
jae
scas
mov
xor
sbb
or
add
das
les
pop
sub
push
lcall
sub
es
pusha
dec
add
mov
push
cmc
inc
push
xchg
idivb
pop
push
int3
push
sti
mov
jecxz
or
xorl
stos
push
orl
push
lahf
push
out
jns
mov
fisttps
repnz
mov
orl
mov
jmp
cmp
dec
inc
fistpl
dec
sti
std
arpl
jnp
xchg
mov
add
push
imul
xchg
pusha
arpl
sarl
stos
mov
das
lods
jae
cmp
inc
add
mov
cmp
jg
inc
bound
mov
addl
xchg
aam
add
ret
jg
pop
aad
faddl
into
and
sub
andb
xchg
int
xor
pop
inc
jae
pusha
pop
dec
cmp
push
and
mov
and
xor
fmuls
ficoms
mov
std
xor
scas
mov
mov
sub
cmp
rcrl
xchg
outsl
roll
push
mov
sar
or
dec
mov
dec
je
scas
and
pop
jecxz
icebp
pop
mov
cmp
daa
mov
ds
sarb
ljmp
push
mov
inc
mov
adc
xor
push
cmp
jne
leave
mov
ss
daa
push
mov
mov
gs
fstpl
inc
ss
add
jnp
mov
outsb
mov
mov
or
xor
and
pop
fwait
add
imul
lcall
scas
or
xchg
hlt
jae
les
out
mov
adc
push
scas
test
in
cmpsl
jp
add
add
lock
mov
lea
and
ss
sbb
test
movsl
mov
adc
xlat
fidivrl
or
inc
out
fsubrs
in
sbb
add
inc
push
xchg
cld
sti
xchg
repz
mov
roll
daa
mov
mov
sbb
jo
and
icebp
xchg
cmp
jmp
ret
inc
xchg
inc
div
call
sub
outsl
cli
adc
test
loopne
mov
mov
mov
flds
cld
fimuls
stc
cltd
lahf
mov
sbb
mov
loopne
mov
pop
lods
std
xchg
sbb
in
inc
jp
scas
mov
cmpsl
xchg
je
sub
scas
in
pop
pop
int
cmc
mov
mov
or
push
mov
out
ret
data16
ss
sbb
cmp
repz
xchg
bound
pop
leave
jl
aas
fisttpll
xor
arpl
enter
loope
fwait
nop
arpl
in
pop
inc
inc
add
cwtl
loope
push
lock
sub
pshufw
mov
les
shl
sti
stos
lret
movl
scas
and
push
pop
jle
cs
mov
xchg
out
push
lods
sub
popf
iret
cmp
xor
loopne
aaa
out
mov
mov
jmp
addr16
cwtl
add
clc
into
push
cmp
stos
cld
test
mov
stos
dec
imul
stos
adc
mov
stc
dec
jae
sarl
outsb
pop
inc
repz
mov
adc
xchg
push
jnp
cs
repz
or
dec
cs
das
pop
mov
sub
jno
or
push
or
movsl
out
dec
bound
insb
lods
push
mov
fisttpll
or
push
cld
and
insb
pop
adc
andl
iret
xor
mov
lods
adc
xor
push
add
test
std
pop
sbb
lahf
push
dec
fsubr
xor
shr
mov
cmpsl
jns
scas
mov
jae
lea
je
xor
push
pcmpgtw
jne
pop
cmpsl
arpl
inc
fsub
and
ss
out
xor
aam
sbb
mov
ficompl
xor
ret
arpl
fimull
in
addr16
fcmovne
ret
fistl
xchg
dec
push
ret
into
mov
and
sti
insl
notl
dec
frstpm(287
bsr
nop
lahf
addr16
fnsave
adc
sub
stc
adc
sti
dec
pushf
and
fst
insl
push
std
in
sbb
mov
stc
jb
shlb
sahf
push
rcrb
cmp
into
sub
sti
and
add
xchg
mov
clc
test
data16
sahf
stos
and
ja
jp
lock
inc
outsb
jae
or
ljmp
repnz
fnclex
jae
mov
push
mov
fnstenv
neg
jnp
gs
js
push
mov
push
inc
or
ret
roll
mov
xchg
sub
dec
or
push
bound
aam
cmp
pushf
sub
nop
insl
and
pushf
aaa
and
repnz
into
clc
adc
ficompl
add
les
lcall
dec
int
mov
lret
lods
repz
or
cmpb
sbbb
xorl
out
sub
add
sub
mov
mov
inc
jmp
dec
xchg
mov
stos
xchg
ljmp
loopne
xchg
cmp
add
aas
sarl
cmp
inc
js
cmp
sbb
fstps
int3
mov
cmc
arpl
add
or
lret
imul
cmp
ret
adc
nop
add
pop
loopne
dec
sbb
mov
jae
pop
jge
loope
and
das
push
scas
adc
and
pop
cmp
lcall
dec
add
xchg
aas
in
into
and
test
and
shlb
mov
and
jg
ds
mov
jmp
lcall
xlat
out
adc
ds
cmp
sbb
repnz
les
mov
ljmp
pop
aam
pop
out
insb
adcl
xchg
add
push
dec
mov
xchg
dec
lea
cmpl
dec
adc
mov
cmp
outsl
adc
out
jle
inc
imul
mov
xor
test
fldt
xchg
cltd
rcrb
add
jecxz
enter
arpl
push
lret
add
cmp
pusha
xchg
testl
pop
pcmpgtd
icebp
mov
sarb
inc
outsl
into
xchg
and
mov
lahf
mov
pop
mov
inc
xchg
dec
lahf
repz
xchg
add
popf
mov
pop
mov
notl
ljmp
xor
or
mov
adc
icebp
push
ja
outsb
xchg
lret
inc
xor
jae
push
adc
mov
stos
push
mov
or
nop
xchg
and
sbb
nop
xchg
and
das
fxam
jno
adc
fildl
xlat
mov
fsubrs
add
or
xchg
movsb
and
into
push
pushf
das
movsb
or
mov
xchg
outsl
test
in
pop
icebp
ret
jno
fsubrs
adc
imul
fs
push
dec
out
in
leave
bt
out
sbb
xchg
shr
mov
or
imul
push
popa
mov
aad
arpl
clc
jp
out
add
lods
cmp
fwait
push
imul
lret
mov
xchg
push
es
sub
mov
add
dec
sub
mov
cmpl
out
shlb
ljmp
cwtl
stos
int
mov
sbb
pusha
push
out
jne
xchg
and
or
mov
int3
movsl
pop
movsb
gs
push
mov
mov
xchg
std
xor
jmp
fwait
add
push
mov
sub
push
inc
cltd
fistl
xchg
sahf
inc
jp
push
mov
or
popf
ds
lahf
pop
pop
mov
lods
mov
push
orb
cmp
loop
jp
pop
jge
push
loopne
push
push
push
cld
cli
pop
xchg
jge
es
cmpsl
cmp
stos
inc
outsb
add
icebp
clc
pop
push
fwait
imul
jge
aad
sahf
jmp
jmp
xor
dec
arpl
add
xor
xor
das
dec
pop
sub
adc
dec
cmp
shll
cmp
adc
out
incb
fnstenv
mov
ljmp
dec
aad
adc
leave
aaa
adc
or
into
pop
adc
inc
repz
pop
push
dec
rclb
inc
lods
loopne
into
adc
or
adc
push
test
fstpl
gs
sbb
mov
lea
stos
popf
imul
or
push
inc
pop
xchg
mov
lods
jmp
xor
stos
pop
divb
mov
cmpsb
lahf
xor
loop
leave
inc
aad
cmp
stc
dec
xor
xor
pop
call
adc
xchg
sbb
lods
je
stos
jecxz
out
mov
daa
jae
addr16
int3
cmp
dec
fwait
cmp
push
ja
ret
xchg
and
and
lret
dec
testb
cmp
pop
mov
add
int3
cmp
mov
stos
xchg
xchg
inc
push
pop
sbb
cmp
into
das
cmp
popa
xchg
push
xor
movsl
psubsw
push
fsubr
test
das
inc
mov
lods
adc
ja
icebp
xchg
out
add
xor
lds
mov
and
sbb
push
push
loop
popf
idiv
jle
cwtl
pop
and
lods
mov
inc
xchg
fdivl
pop
lods
adc
sub
sub
and
xchg
or
cltd
xchg
xchg
cwtl
out
push
push
ret
inc
mov
jne
dec
adc
dec
fcmovb
push
push
lcall
adc
out
stos
into
mov
mov
sahf
mov
add
pop
and
sbb
jp
mov
aas
rep
cmp
lds
repz
or
fldenv
push
mov
cmovle
dec
test
enter
adc
out
arpl
adc
add
dec
jge
pop
cmp
rorb
fldenv
push
fimull
loopne
mov
leave
jge
adc
movsb
xor
mov
inc
mov
adc
mov
rclb
mov
jp
and
into
xchg
jle
fisubrs
mov
add
add
imul
sub
test
sarl
lret
in
imul
out
not
cmp
mov
jp
mov
out
popf
jle
mov
xor
cs
out
addb
lods
jo
sub
jecxz
xor
in
xor
push
orb
cmp
dec
jns
mov
fucomp
inc
movb
mov
jmp
or
jp
in
imul
mov
aas
daa
enter
mov
jnp
fstl
out
cmp
add
or
or
and
movsb
push
push
fstsw
in
popf
inc
test
sub
dec
mov
in
shrl
popf
xor
push
pop
cmp
inc
jno
iret
jl
inc
fucomp
mov
jb
nop
sti
mov
subb
cmc
nop
repnz
test
bnd
jmp
mull
fiadds
add
std
pushf
cmc
jbe
arpl
add
fisttpl
ljmp
mov
in
jmp
sbb
xor
and
adc
leave
pop
mov
cmp
fidivrl
insl
fsubl
mov
xor
sbb
stos
add
or
daa
or
jo
push
shll
and
gs
fisubrl
imul
mov
lds
flds
lods
jecxz
lock
pop
and
sbb
pusha
jmp
pop
or
pop
jge
and
push
cmp
and
test
sub
ljmp
cmpsl
aaa
adc
sub
jg
xor
lahf
lea
es
aaa
sub
xor
inc
dec
sub
imul
pop
cmp
cmp
cmpsl
mov
pop
into
push
jl
dec
ss
or
mov
dec
jne
adc
adc
stc
mov
and
mov
fistl
jns
xchg
out
cmp
je
pop
push
push
adc
stos
in
adc
push
ret
sub
outsl
es
push
cltd
pop
dec
test
xor
out
xchg
in
movb
sahf
or
lcall
les
inc
sbb
mov
cmp
std
pop
push
bound
and
pop
sbb
jg
jmp
outsb
test
stos
addr16
ss
rcrb
out
pop
repz
jmp
in
lock
lret
movsb
pushf
outsl
dec
call
shr
dec
add
jns
push
testl
and
test
popa
xchg
or
cmpsl
jo
ljmp
add
cs
fcomps
jmp
and
inc
xchg
subb
dec
jecxz
xchg
cmp
cwtl
aam
push
dec
cmp
pop
inc
shl
or
nop
adc
icebp
push
repz
sbb
stc
jno
aad
adc
movb
xlat
dec
fcoms
mov
sub
push
inc
sbb
xchg
push
jo
add
out
mov
dec
fistl
pop
jecxz
daa
orb
pop
or
xor
inc
enter
mov
pop
xchg
adcl
sub
fsubrp
pusha
hlt
jp
pop
sbb
jl
xlat
call
xor
jge
rorb
stos
std
sbb
daa
in
fnstcw
mov
daa
pop
mov
inc
dec
xchg
fnstsw
out
pop
mov
mov
mov
pop
mov
pop
and
cmp
xchg
mov
arpl
addl
into
cmpsb
dec
add
pop
or
lret
push
xchg
mov
sbb
in
ds
in
pop
lret
das
lcall
dec
movsl
repnz
xchg
sbb
jo
mov
add
leave
pop
das
jl
or
lcall
jecxz
dec
lahf
mov
cmp
stos
sub
in
mov
fidivrl
mov
insb
lahf
cmp
xchg
loope
insl
jo
loope
mov
xchg
iret
leave
sarb
fwait
add
adc
xchg
mov
push
mov
mov
insb
idivl
cmp
fdiv
ljmp
adc
xchg
jg
add
and
test
fwait
cwtl
adc
mov
sub
int3
je
pop
es
lods
add
mov
insl
pop
lods
lock
loope
das
xor
push
add
sbb
es
jo
pusha
aad
push
push
fwait
ror
dec
pop
mov
inc
pushf
mov
jns
imul
outsl
xor
sub
fwait
jle
mull
sti
addr16
mov
inc
xchg
or
imul
push
adc
les
xchg
leave
push
xchg
push
and
lcall
inc
rcr
mov
push
dec
out
std
jbe
je
insb
cmpsl
lea
sub
mov
cmp
lods
mov
push
dec
xchg
stc
pop
sbb
jae
jbe
adc
xchg
mov
sti
mov
stc
and
in
add
mov
pushf
mov
outsl
mov
sbb
adc
xchg
xor
mov
sub
and
std
fwait
push
popf
popa
add
pusha
mov
xor
clc
pop
lods
pop
xchg
and
pushf
sub
mov
in
rcrb
push
jno
inc
das
add
xchg
aam
aaa
les
stos
cmp
mov
pop
in
cltd
jo
inc
add
std
les
fisttpl
test
imul
mov
dec
repnz
and
lcall
das
and
mov
mov
cmp
mov
inc
cmp
icebp
pop
add
jmp
sbb
lea
mov
in
and
sbb
mov
pop
fs
jae
cmp
test
dec
adc
xor
xchg
scas
out
mov
push
or
cwtl
or
out
adc
rorl
fists
dec
out
aam
or
test
rcll
pop
movsb
cwtl
push
in
popl
add
sbb
rcll
jge
xchg
rol
sub
enter
mov
cmp
push
or
ljmp
arpl
add
cs
out
dec
das
es
xchg
ret
dec
inc
lcall
add
fstpt
data16
call
mov
xchg
in
xor
test
adc
inc
sub
xor
inc
enter
aas
arpl
xor
je
scas
inc
push
addl
in
fisttpl
xchg
push
ret
out
mov
mov
add
cltd
jmp
or
mov
icebp
and
adc
notl
bound
and
add
mov
ret
into
mov
add
hlt
sub
xor
fidivrl
or
int3
adc
jmp
push
jle
popf
push
fstpl
or
nop
xor
lods
or
sub
xchg
xchg
mov
daa
ljmp
cmp
int3
pop
je
movsb
jae
lock
out
jmp
cmc
in
dec
push
pop
and
outsl
cmp
icebp
rcr
hlt
mov
pushf
pop
jp
mov
loop
cmc
or
mov
xchg
aam
jno
jae
mov
and
test
pop
js
dec
cmp
mov
pop
adc
push
imul
mov
xchg
adc
xchg
add
mov
mov
cwtl
data16
mov
mull
xor
bound
imul
lcall
pop
rorb
mov
add
add
bswap
xor
jns
push
aam
aam
mov
scas
cmp
pushl
and
leave
mov
outsb
mov
xor
push
pop
xchg
cmp
push
inc
or
jne
rolb
cs
sub
jle
stos
lcall
test
and
pushf
lahf
and
mov
jge
in
jae
fcoml
clc
pusha
test
dec
mov
push
lahf
cmp
das
jmp
in
dec
adc
inc
loope
clc
imul
pop
lea
jecxz
inc
test
add
pop
in
arpl
sub
mov
jg
adcl
arpl
ljmp
test
jns
sub
mov
aaa
imul
stos
and
lods
movsl
jmp
sbb
lods
add
jg
test
jle
inc
loop
scas
xchg
sbb
stc
repnz
daa
sbb
cli
in
sahf
imul
push
or
mov
sbb
jmp
roll
mov
inc
mov
and
cli
xchg
sti
push
pushf
mov
xorb
sub
ja
inc
xchg
aas
mov
add
ror
cwtl
sbb
push
cmpsb
rolb
and
xchg
cmp
push
jbe
push
std
stc
mov
or
mov
fmul
xor
int3
add
leave
gs
pop
mov
orl
push
pop
jl
cmp
lock
lods
and
or
loop
idivb
sti
xchg
and
movsl
movsl
out
fld
lock
in
shlb
cmp
adc
add
nop
xor
adc
lock
push
daa
shll
pop
insl
inc
cmp
push
aad
inc
in
jo
cmp
hlt
and
mov
popf
loop
test
jecxz
ljmp
and
je
or
pop
dec
ds
outsl
ficoml
sbb
mov
add
fidivrl
iret
jl
enter
rorl
inc
fildl
rorl
outsl
jno
divl
mov
in
dec
shl
sbb
ror
lahf
dec
xchg
ss
sti
orl
into
arpl
adc
mov
icebp
jecxz
pop
stos
sub
mov
test
bound
hlt
sbb
addr16
fstpl
mov
jmp
jb
dec
in
shll
mov
xor
or
cs
pop
in
mov
fs
pop
fxch
or
dec
cwtl
or
lret
adc
loopne
ja
rcl
test
xor
clc
lret
cmpsl
nop
ljmp
dec
es
fs
sub
jb
aaa
or
insb
xchg
movsb
mov
adc
xchg
pop
shlb
fdivr
xchg
jl
out
cltd
in
movsb
stos
fistps
or
cmp
je
sub
jg
xchg
mov
mov
jno
cmp
fstp
mov
pop
mov
sahf
adc
aas
testl
xchg
push
roll
movsl
xchg
loop
out
insl
aaa
inc
mov
mov
mov
jb
sbb
push
jmp
fsubrl
push
mov
pop
or
push
test
in
mov
jp
jae
jns
mov
and
cmp
fmull
adc
dec
ret
sti
cmp
mov
inc
mov
pop
sbb
bound
and
pop
stc
pop
lods
pop
scas
fdivrs
inc
xor
mov
ds
pop
adc
jo
bound
ret
addr16
test
cmp
int3
int3
les
je
mov
je
xor
add
add
adc
sub
popa
xor
mov
cmp
cmp
pop
fdivs
push
and
lds
mov
dec
sbb
lea
std
jg
push
push
cmp
mov
out
test
dec
enter
pop
imul
cmp
lcall
js
shll
dec
add
movsb
ret
xlat
jns
sbb
leave
int
enter
bnd
xlat
xor
push
fsub
and
push
mov
dec
add
cwtl
mov
cmp
xchg
push
jnp
call
mov
cmpsl
das
sti
repz
dec
inc
cwtl
sub
mov
sbb
push
jle
cmp
pusha
ret
and
lock
int3
pop
dec
ljmp
mov
lea
shrl
push
gs
or
jnp
nop
mov
mov
push
insb
push
mov
sbb
fdivp
gs
and
pavgw
sbb
popf
imul
mov
push
dec
subl
or
ret
addr16
pop
mov
call
cmp
je
insl
daa
addr16
stos
mov
adc
loopne
jnp
jne
mov
and
mov
cmpsl
mov
push
insb
pop
mov
testb
xor
ja
cmc
loopne
or
movsb
push
push
clc
sbb
mov
lds
orl
movsl
ffree
rorl
enter
cmpl
mul
inc
push
ret
rcrl
push
adc
jg
mov
jo
jo
jnp
push
mov
int3
pop
in
push
sbb
call
pop
inc
add
mov
in
shl
outsl
lret
cwtl
push
adc
adc
scas
cwtl
or
jbe
mov
iret
xor
mov
dec
pushf
xchg
sbb
cmpsb
shl
dec
stos
ljmp
adc
shr
cmpsl
clc
push
test
lds
and
stos
insl
popa
push
xchg
jp
mov
and
sub
idivb
adc
push
mov
aam
ret
mov
inc
idivl
call
pop
push
add
fucomip
into
xchg
je
fwait
and
daa
mov
insl
aam
fdivrl
fwait
pop
mov
je
cli
dec
cmp
jno
out
adc
arpl
test
ja
xor
cmc
or
pop
push
nop
mov
cmp
shlb
xlat
loopne
xor
outsb
xlat
mov
rorl
jecxz
push
or
movb
jmp
rclb
outsb
fwait
lock
int3
emms
pushf
cmp
arpl
movsl
sub
xor
scas
push
stos
mov
push
mov
inc
push
lret
in
dec
es
sbb
mov
divl
push
adc
adc
mov
addr16
ret
ret
cwtl
repz
fdivl
xchg
js
movsb
rcll
rclb
dec
sti
aas
mov
push
jg
clc
pusha
das
pop
push
jle,pn
or
lods
push
pop
xlat
outsl
or
pop
cmp
pop
ljmp
pop
popf
clc
or
mov
call
bound
or
repnz
add
gs
adc
enter
aad
popf
jg
add
in
and
dec
not
jae
adc
dec
fsubl
stos
cltd
dec
jmp
xchg
inc
fstps
call
inc
loope
adc
sbb
mov
and
xor
andl
fistl
and
imul
xchg
mov
jo
cmp
clc
jmp
cld
out
push
in
mov
jbe
adc
out
lahf
test
rcl
bound
ret
insb
inc
sub
loopne
pop
or
mov
sbb
data16
push
dec
and
cmpsl
lock
xor
jecxz
jns
iret
xor
hlt
iret
ret
hlt
mov
pop
mov
jae
std
int
call
test
int3
push
imul
dec
dec
dec
sarb
out
stc
xor
ficompl
into
lret
pusha
cmp
and
repz
cmp
pop
cmp
or
mov
mov
fbld
repz
mov
xchg
insb
inc
cmp
jne
sbb
lahf
mov
sti
dec
mov
notl
pusha
xor
pop
jmp
pop
mov
sbb
testl
dec
lret
pushf
mov
daa
enter
fisubs
lret
out
es
pop
in
add
inc
js
mov
cld
push
mov
and
cwtl
cwtl
out
dec
mov
pop
leave
jbe
cli
cltd
cmp
scas
dec
inc
sub
and
scas
sub
pop
loope
dec
es
mov
repz
lea
mov
arpl
loope
pop
xor
nop
out
cli
popf
fidivs
jne
sub
add
sub
cmp
sub
into
pop
cltd
and
ret
add
adc
pop
jecxz
rcll
xchg
mov
cmpsl
ret
subb
orb
cmp
dec
and
sub
jns
test
jne
push
mov
cli
mov
adc
mov
fmuls
mov
lds
ret
cmp
pop
daa
push
pop
and
test
and
mov
mov
ljmp
jp
inc
sub
stos
test
mov
dec
fdivr
lcall
jle
aaa
sub
push
out
mov
dec
aad
pop
mov
lds
cli
jecxz
popl
sahf
push
test
test
and
adc
cmp
jns
adc
enter
push
ja
cltd
sarb
and
test
add
je
sub
je
movsl
cltd
inc
out
push
inc
xchg
jle
into
shrb
mov
nop
nop
test
loop
cmpb
xchg
pop
mov
cmp
jae
mov
push
mov
cmpsb
or
and
sub
arpl
ja
test
lret
rcr
sub
pop
or
adc
add
dec
mov
and
and
sbb
lea
incb
adc
out
enter
ljmp
dec
push
jns
pop
mov
or
insb
je
cmpsl
xchg
push
mov
mov
data16
xchg
daa
lods
sub
cld
mov
add
push
mov
out
lock
imul
sbb
in
inc
hlt
aaa
arpl
stos
and
inc
xchg
jecxz
in
jb
outsb
push
or
dec
iret
sbb
cmpl
out
in
xor
in
cli
mov
mov
rclb
pop
cmpb
lret
jne
jns
push
out
sarb
sahf
add
iret
and
scas
jmp
cwtl
cmpsl
and
sub
imul
das
xchg
fdiv
int
cmp
pop
test
fcmovnbe
ss
repnz
mov
inc
sahf
rcrb
ret
cmp
cmp
aad
popf
ffreep
lods
aas
mov
rorb
int3
cmpsb
adc
sub
das
fst
adc
lds
jecxz
dec
movb
xchg
inc
outsb
and
scas
inc
dec
insb
jle
addr16
sub
fadd
enter
je
fsub
por
jecxz
dec
fs
fnstenv
and
data16
pop
or
aad
jl
adc
mov
insl
jmp
xchg
jle
push
push
jmp
loope
mov
mov
pop
xor
test
inc
cmpsb
test
sub
pop
add
xlat
gs
cltd
cli
sahf
aas
adc
xchg
or
xor
cmpb
mov
cwtl
rorl
shrb
cmp
inc
aad
daa
sub
ret
fists
jno
add
movsb
mov
ret
mov
push
mov
push
pop
cld
push
int3
cld
add
mov
mov
xchg
outsl
cld
rol
incl
sbb
out
sbb
add
addr16
popf
repnz
lret
cmp
loope
cld
dec
jns
dec
and
cmp
xchg
out
and
mov
mov
and
mov
pop
mov
sbb
jge
or
imul
fwait
cwtl
lcall
pop
xor
mov
and
stc
mov
pop
leave
sbb
or
fs
xchg
fcmovnb
mov
xchg
cli
popf
sub
adc
cld
lock
and
pop
sti
shrb
bound
fcmovb
sbb
push
jge
pushf
nop
in
jmp
mov
cmpsl
sbb
mov
cmp
push
push
or
subb
scas
fcmovne
add
or
mov
push
cmpb
cmp
push
xor
mov
stos
xor
jge
out
adc
loope
mov
push
or
push
lahf
insl
mov
xchg
es
test
jle
roll
fs
fcoms
sub
lds
sub
iret
aas
ljmp
adc
cmp
and
xor
push
or
push
movsl
xchg
bound
sub
push
sbb
jnp
dec
inc
inc
mov
add
jnp
pop
mov
or
dec
in
cli
sbb
push
sbbb
inc
iret
pop
push
mov
ret
xchg
adc
adc
xchg
int3
leave
mov
icebp
lds
rcll
inc
jle
push
mov
or
or
lcall
dec
sub
into
jb
push
jno
push
loop
pusha
push
icebp
imul
mov
jnp
jl
sub
popf
adc
arpl
jmp
dec
add
push
dec
adc
lods
movsb
and
mov
rcrl
add
std
or
cmc
loop
rcrb
pop
or
cld
xor
dec
stos
jge
sbb
cs
loop
insl
shl
mov
push
scas
xchg
fmull
rcl
gs
or
or
mov
fisubs
in
dec
in
adc
ret
mov
imul
mov
adc
rcr
mov
rorl
roll
cmp
cwtl
leave
mov
mov
lods
xchg
stc
out
cmc
dec
xor
xchg
mov
out
xor
cmc
sbb
pop
lods
pop
sbb
jmp
dec
out
lret
sub
mov
push
mov
add
sub
ds
mov
add
mov
sub
fimuls
xor
fcoms
adc
mov
aad
or
mov
fdivrl
dec
movsb
in
fdivp
jnp
push
les
lods
inc
mov
xor
cs
and
sbb
cmc
outsb
je
mov
popa
pop
aas
or
pop
adc
inc
xchg
leave
adc
scas
sbb
push
rcrl
arpl
jle
stc
dec
inc
cmp
add
sub
insb
sub
jmp
popa
adc
and
nop
adc
jp
xchg
orb
pop
jno
mov
in
add
cmp
and
pop
push
sub
push
sti
fs
mov
push
xchg
pop
call
out
outsl
lods
in
rcll
dec
mov
xlat
mov
sub
shlb
xor
imul
jne
push
insb
dec
insl
adc
mov
leave
pushf
callw
push
push
push
mov
dec
popa
clc
hlt
add
nop
and
loope
sbb
or
adc
xchg
or
fnstenv
stc
adc
popa
scas
or
test
jge
add
inc
testb
inc
cld
jmp
in
aas
outsl
lea
dec
jo
cmp
xor
repnz
mov
adc
fistpl
mov
in
lret
jge
lock
in
xor
cmpsl
adc
addr16
xchg
and
and
pop
xadd
mov
xor
pop
in
out
pop
stos
jo
sbb
xchg
mov
mov
mov
push
fistpll
ret
test
mov
hlt
pop
icebp
mov
cli
fstpt
dec
cli
out
stc
stos
pop
aas
fisubrs
push
jno
stos
cmp
notl
xchg
xor
inc
shrb
push
enter
movsl
syscall
inc
jne
cltd
inc
cmpsb
dec
aas
push
pop
dec
sbb
or
mov
cmc
jle
popf
aam
sbb
cmpsl
out
cmp
sbb
imul
fldl
test
sub
jne
adc
movsl
fistpl
sub
daa
ds
ret
mov
mov
xchg
out
jmp
dec
mov
push
xchg
in
add
jle
mov
sarl
pushf
push
or
push
sbb
jg
push
popa
adc
and
xor
fidivs
and
mov
adc
and
add
mov
fsts
pop
addr16
int
add
dec
outsb
or
ja
pusha
lahf
fs
arpl
xchg
test
mov
adc
sub
mov
nop
popf
fstl
loopne
push
xchg
push
adc
leave
cmp
pop
sahf
leave
xor
ds
cld
cmp
push
jns
inc
out
nop
dec
or
or
inc
dec
sti
inc
popa
mov
insb
jo
inc
call
ja
mov
addr16
loop
add
mov
add
pop
xor
enter
int3
mov
mov
or
push
in
jmp
jge
lcall
lock
mov
pusha
dec
push
sahf
cmc
cs
push
and
shrb
pop
sbb
sub
and
pushf
callw
inc
imulb
mov
daa
sub
add
xchg
and
nopl
decl
popf
aam
cmc
push
ja
cmp
test
adc
and
scas
inc
and
sub
xchg
push
lret
mov
jb
jmp
xlat
insb
ljmp
std
cmc
mov
es
orl
inc
add
jle
inc
jno
mov
lock
ret
ffree
cmp
je
mov
aas
sub
popa
or
pop
mov
mov
ret
clc
mov
xor
in
kortestw
fistl
and
fistpll
ss
testl
push
xor
mov
cltd
jne
and
into
add
dec
push
xor
xor
cmp
daa
cmp
xor
insl
add
jl
xchg
repz
pop
into
mov
xchg
pop
adc
adc
frstor
clc
in
mov
adc
imul
jg
shl
cmp
sbb
daa
jnp
loope
push
out
xlat
lods
insb
pushl
adc
sbb
insb
jno
mov
add
sub
add
sub
add
mov
rorl
mov
lock
jns
aas
sbb
xchg
jmp
out
add
cmpsl
add
jo
cmpsl
push
shr
add
scas
mov
mov
mov
or
add
popf
and
fwait
push
in
mov
sub
dec
test
push
js
pop
adc
cwtl
cmp
adc
in
lahf
adc
jl
pop
lds
iret
cmp
jmp
cmp
fcmove
cmp
cs
xchg
xchg
cmp
ja
loope
pop
pushf
pop
sbb
inc
dec
xlat
push
pop
add
push
das
sahf
lcall
jae
sbb
mov
adc
adc
adc
test
mov
sub
out
scas
cld
rolb
jg
es
or
lea
pop
xor
movsb
xchg
fnstsw
dec
mov
ljmp
push
xor
sbb
lcall
sub
shrl
test
fwait
add
mov
mov
push
adc
push
nop
and
call
mov
out
ret
sbb
xchg
loope
xor
dec
adc
sub
pop
mov
std
inc
in
push
push
mov
xor
lods
inc
out
adc
daa
aas
arpl
repnz
outsb
fsubs
jg,pt
cmp
push
and
push
jno
mov
rsqrtps
into
mov
adcl
jo
cmpl
bound
pop
pop
xchg
aas
stos
sar
std
mov
push
pop
jo
or
dec
insl
mov
nop
call
ret
mov
mov
xor
lret
bound
rep
xchg
nop
mov
iret
sbb
stc
cmc
lret
jl
jge
and
arpl
int3
and
push
ret
popf
xorl
dec
into
xchg
dec
xchg
shll
fidivrl
push
aaa
jmp
jno
push
shlb
aam
dec
xchg
fs
jno
mov
and
in
push
push
ret
rcr
push
int
cs
and
dec
and
loopne
es
mov
xor
test
sub
xlat
push
cmpsl
lahf
adc
pushf
dec
sbb
movsb
outsb
jae
push
cmp
and
es
mov
rclb
ljmpw
out
jmp
inc
sub
aam
lahf
adc
push
push
shll
loopne
xor
dec
dec
out
xor
inc
cmp
ss
xchg
cmp
mov
xor
jns
push
orl
lret
popa
or
push
loopne
sar
mov
nop
movsb
je
add
push
jnp
sbb
mov
das
xchg
notl
rcl
push
pop
stos
fidivs
aad
pushf
shl
sbb
xchg
sbb
push
in
lret
test
jle
or
leave
loopne
call
mov
jle
cmpsl
aaa
jbe
sub
add
push
adc
push
push
int
stos
sbb
push
push
sbb
jno
mov
jl
out
mov
sub
test
mov
scas
adc
call
jmp
es
cmc
push
dec
cli
jge
aad
push
js
xchg
shl
and
push
dec
xor
and
mov
sub
dec
stc
rcrb
push
cmp
sbb
and
les
push
lahf
pop
cmpl
sbb
pop
cmp
addr16
scas
add
sub
push
inc
out
xlat
ja
stos
adc
stc
ljmp
js
outsb
or
push
xchg
mov
cmp
out
stc
and
push
push
icebp
orl
adcl
outsl
inc
push
lods
fnstenv
cwtl
xchg
call
or
mov
lods
xchg
xchg
stos
jle
jmp
sti
add
ret
in
inc
xor
jno
pop
je
mov
xor
fiadds
jns
je
cld
lret
lahf
and
and
outsl
iret
xchg
mov
pop
mov
stos
sub
fcomip
cmpsb
xchg
pop
ljmp
loop
popf
test
mov
sbb
add
fwait
push
dec
cli
dec
lods
fcmovne
int
inc
je
rol
fbld
jg
mov
dec
push
mov
fsts
or
loopne
jo
lea
fsts
mov
mov
mov
aad
and
lea
lret
sbb
out
lock
jnp
mov
xchg
push
int3
sub
mov
inc
js
pop
xchg
call
into
jno
in
out
lds
cmp
jmp
pop
clc
ret
enter
jmp
in
push
in
push
xlat
xchg
aaa
mov
and
cltd
cwtl
push
pop
repz
ret
clc
or
outsb
push
cmpsb
mov
cmp
cld
test
pop
lock
loope
adc
push
pop
movsl
popa
push
adc
cmp
pop
shll
dec
push
cmp
and
or
xchg
mov
mov
or
jne
int
dec
pop
adc
filds
inc
stos
pop
dec
adc
ljmp
pop
jmp
dec
fldenv
add
std
push
sub
jge
sub
xor
xor
aas
add
add
add
jmp
dec
and
sub
ljmp
fildl
jmp
mov
and
clc
xchg
pop
inc
adc
pop
pop
aas
sbb
aaa
and
nop
inc
xor
popa
out
fcompl
push
inc
leave
sbb
fisubl
xchg
sub
inc
sub
loope
data16
xchg
ja
aas
les
in
cmp
xchg
dec
push
jp
mov
sub
inc
jg
repnz
mov
test
push
or
cs
jecxz
pop
add
mov
xor
cmp
pop
stos
hlt
xor
out
fistps
pop
mov
fisttps
icebp
addl
xchg
stos
iret
scas
sahf
or
enter
pop
vmovlps
gs
scas
popl
dec
vmovshdup
jno,pt
mov
in
loopne
test
je
popf
lea
or
enter
mov
xlat
les
or
cmpsb
divb
push
fxch
pop
push
cmp
outsb
push
cmp
testl
jp
ljmp
push
loope
in
mov
push
xchg
cmp
ret
jl
xadd
mov
imul
and
jne
ret
flds
inc
movsb
jae
pop
cmpsb
nop
dec
in
mov
push
scas
dec
add
dec
push
rclb
std
scas
xchg
dec
ds
subl
nop
sub
mov
ret
pop
dec
jno
mov
sub
cmp
mov
popf
test
cmpsb
out
cmpsl
and
jle
mov
popa
pushl
cld
shrb
lds
xor
mov
int3
mov
enter
jp
mov
sbb
lds
sbb
cld
pop
cs
rcrl
test
js
test
pop
push
jmp
mov
jno
inc
cmp
and
jl
movsb
pop
sbb
add
repnz
les
mov
insb
sti
test
popf
push
sahf
pusha
popf
jo
rcrb
and
test
shl
xor
push
fistpl
cli
out
push
add
movsl
push
jmp
jae
jle
push
incb
push
dec
adc
push
push
cmp
inc
mov
mov
in
mov
cmpsb
cmp
outsb
push
int3
cld
sbb
sub
ret
test
lret
push
and
mov
mov
fcmove
insl
jmp
out
stos
pop
add
sbbb
fdivs
ljmp
pushf
bnd
adc
xchg
xchg
in
fdivrs
mov
in
xor
fwait
subb
pop
shrl
push
pop
ja
mov
jb
leave
jge
inc
mov
enter
mov
fbld
js
sbb
sarb
loope
stc
cld
pushf
inc
popa
jl
push
lahf
movsl
es
inc
add
insl
fcomps
scas
fstpt
lods
sti
hlt
stc
inc
sub
mov
int
js
stc
xchg
scas
orb
in
fstl
repz
cmp
inc
pop
inc
xchg
call
sbb
fildl
jg
fidivl
lret
mov
cwtl
mov
lods
int3
fwait
jb
movups
sub
lods
les
mov
mov
and
repz
push
and
int3
pop
cli
lcall
ret
imul
out
and
add
sahf
sub
sbb
ss
xchg
mov
gs
loopne
js
hlt
or
mov
dec
dec
stc
lds
pop
gs
xchg
mov
cmc
dec
enter
ja
test
sbb
jge
inc
inc
js
add
cmp
push
insb
cmp
jp
fisubrl
mov
rcr
mov
sub
lea
lods
out
hlt
and
call
push
out
cmpsb
xchg
adc
jl
cmpsl
dec
sbb
xor
mov
xchg
js
or
xor
sub
ret
jge
pop
pop
or
lea
xor
jl
leave
mov
cld
cmp
mov
dec
xchg
inc
and
pop
cmpsl
clc
out
add
test
icebp
test
lea
jg
imul
jns
xlat
pop
dec
lahf
pop
push
or
in
test
cmc
xor
jmp
mov
popf
in
int
ljmp
ljmp
fisttpl
add
lret
pushf
ret
and
and
sbb
clc
in
cmp
xchg
popa
push
les
loope
jbe
xor
in
sbb
push
sbb
cmp
mov
xor
jg
lret
dec
push
xchg
mov
test
jge
mov
lret
push
int3
cmc
cs
mov
push
addb
test
sahf
jae
sbb
ljmp
lods
xchg
dec
roll
mov
sbb
popw
or
dec
inc
out
xor
mov
setl
mov
daa
xchg
fstpt
gs
and
imulb
dec
mov
sbb
stos
clc
mov
cli
inc
lods
jge
addl
and
sub
jmp
sahf
dec
and
imul
int
pushf
cmp
pop
loopne
dec
mov
dec
or
imul
mov
mov
inc
sub
sub
push
pushf
or
fldt
mov
adc
or
jl
sbb
mov
jp
pop
addr16
adc
lea
xor
cmp
mov
or
aaa
and
xchg
sbb
jle
pop
inc
pop
ret
pop
es
or
mov
adc
scas
push
daa
push
pop
pop
or
movsb
and
add
lock
aaa
pop
ret
test
add
or
iret
inc
mov
sub
shrb
aaa
mov
int3
cld
jo
addr16
jno
add
jecxz
je
mov
mov
mov
xchg
movsb
fsubp
insl
xor
vmovntdq
mov
std
mov
aaa
lods
lods
push
mov
pop
xor
or
jmp
lods
fildl
jg
dec
dec
or
std
adc
or
dec
lea
sbb
in
dec
sti
or
add
pushl
jg
ret
shr
xchg
push
mov
jnp
push
jge
lods
push
mov
loope
cmpsl
mov
jmp
pop
loop
or
movsb
inc
or
pop
aad
popa
test
rcl
pop
add
mov
mov
jno
xchg
cmp
push
lahf
sub
push
mov
xchg
sub
fadd
sub
push
bound
adc
pop
cmc
sub
into
jg
sbb
xor
push
push
scas
adc
notb
or
ss
rolb
lds
mov
shr
push
or
sbb
add
aaa
adc
pop
add
addl
cmc
rcll
xchg
adc
sbb
roll
loope
imul
xchg
fwait
ss
test
ja
xor
adc
je
sbb
out
add
push
adc
push
loope
pop
leave
xor
inc
subb
mov
adc
xor
pop
mov
or
movsl
pop
sub
ret
mov
icebp
or
xorps
pushl
or
add
fldl
cltd
adc
xchg
popa
dec
xchg
mov
fstp
mov
bswap
dec
sbb
enter
test
push
shl
mov
scas
sbb
jmp
into
gs
aas
ret
enter
cmc
cltd
imul
inc
sbb
jecxz
pop
and
cmp
push
iret
gs
push
aam
arpl
sub
push
sbb
mov
popa
inc
cmpsb
xchg
and
jge
stos
xchg
clc
inc
mov
mov
cs
xchg
jl
pop
xorb
adc
inc
push
aas
cmp
cmp
insb
inc
adc
xchg
xchg
mov
pop
mov
xor
xor
pop
fisttpll
ljmp
test
enter
insl
add
and
push
fcmovu
ss
mov
call
sbb
scas
dec
int3
cmpb
push
mov
dec
sahf
fs
aas
mov
inc
lahf
xor
xchg
or
cmp
and
pusha
mov
lret
add
call
sub
arpl
sahf
sub
mov
sub
jbe
loopne
jnp
jecxz
imul
fsubs
dec
in
je
ljmp
pusha
std
push
sti
clc
das
jg
sub
or
adc
add
lock
and
lret
inc
ficomps
sbb
dec
or
hlt
aad
add
pop
fisubl
lock
sub
or
mov
insb
inc
insb
xor
push
fisubs
sahf
inc
fcoml
jnp
jle
xchg
or
test
test
les
lds
cmp
pop
inc
leave
idivl
cmpsl
inc
lahf
xchg
xchg
mov
pop
mov
mov
das
push
cmp
push
cmp
adc
mov
es
dec
add
popl
int
and
jnp
jl
add
ret
test
push
cmp
mov
lods
pop
out
aam
pop
iret
das
sub
inc
mov
mov
in
push
mov
cmc
out
mov
bnd
xchg
push
clc
movsb
adc
dec
imul
aam
ret
arpl
jle
inc
cmp
lret
and
xlat
mov
pop
pop
push
mov
scas
movsl
popf
or
mov
bound
mov
dec
cmc
popf
fs
or
xor
movb
daa
adc
xchg
mov
shrb
js
inc
push
jb
call
lock
dec
adcl
loop
in
cmp
jge
fisttps
sub
inc
std
or
shr
into
js
push
lahf
inc
mov
aam
sub
ficoml
jge
cmp
jbe
popf
ljmp
dec
jecxz
xchg
xor
mov
out
mov
mov
mov
push
and
scas
adc
sbbb
cmpsl
movsb
sbb
mov
cmp
add
or
out
sub
push
and
negb
imul
ja
cwtl
xor
mul
stos
mov
and
jnp
push
cmp
sub
pop
cltd
repnz
lods
movsl
sbb
dec
aad
xchg
mov
mov
movsb
cmp
std
cmp
inc
test
roll
xchg
mov
mov
clc
pop
into
sbb
orl
mov
insb
xchg
shll
sbb
push
clc
jb
or
cmp
cmp
pop
xchg
ret
hlt
dec
mov
daa
cmp
mov
les
ja
shrb
cld
mov
and
ljmp
outsl
pusha
and
int
cmc
fldpi
cmp
loop
push
popf
test
jbe
stc
xchg
mov
adc
cltd
inc
pop
pop
das
mov
mov
or
inc
imul
mov
inc
ret
xchg
test
adc
or
shl
and
mov
rorb
jnp
stc
outsl
mov
mov
out
and
arpl
pop
and
jmp
push
test
addr16
sub
ds
jl
xor
jne
mov
insb
or
pop
xor
or
pushf
pop
push
hlt
out
and
adc
sbb
shll
xor
inc
lds
loope
jge
enter
insb
jo
jbe
push
fiaddl
mov
repnz
aaa
mov
jae
aad
and
or
imul
ret
dec
inc
push
lret
gs
sub
cmp
jns
dec
add
ret
push
dec
and
ficomps
mov
or
aad
nop
add
in
es
lahf
xchg
mov
sub
xor
fisubrl
arpl
cs
mov
ret
in
push
push
imul
xchg
push
jb
pushl
dec
out
inc
movsb
bts
cmp
ficoms
add
mov
push
sub
cmc
pop
pop
ss
push
in
mov
nop
scas
xchg
and
adc
mov
and
gs
mov
jp
rcll
cmp
or
ret
dec
in
in
out
push
push
fwait
neg
xor
scas
js
pop
insl
or
add
into
mov
test
and
push
sub
mov
add
add
add
and
pop
lock
cmp
xchg
mov
jno
adc
xor
push
sbb
jge
mov
mov
enter
call
sbb
out
push
ret
popf
idivl
mov
test
shll
sub
inc
pop
lods
insb
mov
inc
sbb
push
mov
out
enter
and
ds
frstor
mov
gs
mov
test
loopne
icebp
les
outsl
add
cmp
push
cwtl
push
mov
push
or
scas
das
loopne
lahf
loope
sub
pop
dec
add
pop
fistpl
mov
test
push
es
mov
insb
dec
pop
or
and
mov
out
push
hlt
mov
push
sub
xchg
lods
loop
fiaddl
fscale
add
enter
xchg
xor
push
ljmp
mov
out
push
adc
loope
in
call
js
jne
inc
jb
rorb
cltd
mov
sub
mov
hlt
movl
incb
aaa
sbb
mov
mov
mov
ljmp
in
mov
inc
rcl
inc
movsl
notb
push
scas
jl
or
fs
jmp
loope
mov
mov
pop
xor
dec
lahf
xor
pop
push
xor
adc
stos
cwtl
cmp
sti
add
and
adc
add
mov
mov
in
mov
dec
fcmovne
push
pop
loopne
sub
cmp
and
xchg
stc
jle
in
icebp
jge
imul
cmp
loopne
out
ljmp
mov
out
fldl
mov
nop
mov
in
xor
loopne
std
into
cmpsl
inc
insb
sti
or
mov
mov
outsb
pop
out
cli
lret
mov
lcall
test
inc
loop,pn
pop
sbb
sahf
pop
xor
sahf
cmp
dec
xor
jg
out
xor
sbb
cmpsb
lods
or
sbb
push
xor
pop
lods
imul
cmp
jg
push
or
dec
out
adc
sbb
imul
enter
mov
movsl
rcrl
daa
cmpsl
and
sub
xlat
std
and
xchg
aaa
lds
push
inc
and
js
mov
or
adc
pushf
sbb
xor
add
stc
cmpsb
movsb
outsb
sti
mov
out
cwtl
imul
adc
xchg
inc
scas
in
adc
xor
lods
mov
mov
pop
cmpsb
cmp
hlt
mov
push
test
jl,pt
repz
js
add
imul
lock
aas
and
sub
xor
sbb
inc
pusha
jp
or
sbb
or
push
mov
lret
test
inc
sbb
stos
sahf
inc
scas
add
mov
mov
jae
mov
pushf
and
mov
das
inc
add
cmc
movsb
jecxz
repz
dec
inc
cli
adc
aam
loope
insb
out
bound
sbb
add
xor
jns
adc
pop
mov
adc
sti
dec
fisttpll
jmp
push
aas
ret
test
fnstsw
fsts
test
push
sub
ja
daa
push
cmpsb
ficoms
outsl
addl
stos
cmp
into
add
leave
in
nop
fwait
push
jae
push
xchg
lods
inc
push
ficoml
pusha
add
fs
int3
mov
inc
sarl
mov
jge
fidivrs
dec
and
dec
adcl
lods
stos
xor
mov
xor
mov
fstp
and
inc
mov
mov
je
push
scas
cmp
sub
movntq
mov
mov
je
push
jle
jb
sub
aaa
sbb
in
dec
shrl
fmull
cmc
imul
or
push
xchg
pop
and
lcall
pop
stc
adc
xchg
mov
cmp
mov
push
dec
jecxz
subl
jnp
out
insl
mov
fistps
pop
adc
mov
rclb
test
scas
loopne
jnp
shr
movb
pop
pop
xor
mov
arpl
adc
push
repz
xor
jbe
sub
sbb
lods
cld
das
lret
rcrb
test
test
shll
int
push
xchg
sbb
dec
xchg
xchg
addr16
insb
repnz
lods
jecxz
sub
cmp
jecxz
push
adc
repz
in
push
pop
add
adc
test
jecxz
fisubs
cmp
sbb
cmp
add
lods
js
jns
and
jp
add
push
jnp
popw
mov
cmp
aam
cmp
icebp
fadds
lock
outsb
pop
fs
jbe
jo
jmp
cmpsl
or
ret
cwtl
es
push
loop
lods
jecxz
push
data16
jno
mov
aas
repnz
cltd
repz
movsl
in
xor
popa
gs
sub
add
inc
jne
pop
or
das
pushf
ja
xor
add
pop
adc
add
pop
enter
cmp
cmpsl
inc
arpl
or
jo
jo
mov
in
adc
pop
mov
jne
lods
push
cmp
fimuls
adc
add
pop
mov
adc
mov
int
pusha
out
dec
mov
or
sub
mov
cmp
rcrb
cmp
pop
xchg
ss
jle
in
add
cmpsb
leave
out
adc
in
adc
xor
bound
pop
sub
add
xor
sbb
call
dec
sti
cmp
and
adc
xchg
gs
sbb
push
push
mov
jne
mov
js
stos
jo
or
xor
imul
and
push
xchg
xor
inc
cmp
mov
ficompl
mov
test
aam
mov
vmovdqu
insb
aaa
mov
stc
filds
adc
shrb
jmp
xchg
pop
pushf
loop
ret
fnstcw
daa
sub
enter
loope
sbb
pushf
jle
push
imul
adc
shlb
lahf
jecxz
stc
lahf
mov
rcll
xchg
jb
into
movsb
lock
fidivl
aas
mov
loopne
out
xlat
je
int
xchg
test
mov
pusha
add
movsl
lcall
pop
inc
idivb
mov
xor
cmc
test
in
push
push
mov
insl
jmp
or
push
shl
push
xchg
test
lret
ss
std
cmp
sbb
dec
ucomiss
xchg
in
adc
outsb
mull
push
shlb
in
pop
cltd
fbstp
mov
xchg
push
xchg
or
in
xchg
mov
mov
push
or
repnz
xabort
mov
dec
bound
cmp
inc
sti
icebp
outsb
xor
mov
cmpsl
sbb
ss
out
scas
mov
jno
mov
scas
xchg
sbb
jmp
xchg
or
loopne
mov
sub
pop
idiv
cs
dec
push
or
leave
aas
scas
int
xchg
cmp
sbb
cmp
push
jae
push
add
jmp
dec
jp
cmpsl
shll
in
and
loop
movsb
repz
in
shll
and
es
or
test
sub
icebp
pop
sbb
jnp
mov
push
das
push
shll
fisttpll
int
pushf
xlat
mov
popf
dec
lock
cmpl
push
es
pop
lods
or
push
data16
push
testb
adc
push
scas
test
cmp
cld
push
call
mov
pop
pushf
add
testl
pop
adcb
xchg
push
test
xlat
je
rcrb
lds
imul
xor
push
stc
mov
mov
lods
pop
xchg
mov
and
jne
ds
add
cmp
imul
mov
fisttps
xor
in
orb
stos
cmp
inc
sub
sbb
into
inc
and
lds
orb
adc
stc
out
test
movsl
and
jg
stc
inc
add
adc
lods
repz
xchg
jnp
mov
and
data16
add
xchg
leave
mov
inc
inc
xchg
jns
adc
push
pop
jo
pop
mov
pop
push
cmp
mov
fisubs
sbb
cltd
cmp
mov
scas
jg
std
aas
xor
cmp
scas
add
in
or
and
mov
mov
xor
nop
negb
pop
pop
packssdw
ljmp
pop
push
and
mov
jnp
pop
adc
das
cld
js
rcl
cmpsb
enter
stc
jo
leave
notb
outsl
add
dec
sti
jnp
jmp
dec
cmp
mov
adc
dec
fdivrl
rclb
addr16
inc
or
gs
out
inc
orl
lahf
sub
cmpb
stos
and
cwtl
or
mov
movsb
sbb
filds
dec
test
scas
in
imulb
daa
ret
and
lret
insl
shrb
mov
mov
sub
nop
adc
mov
push
loop
aaa
cmp
xchg
ficoml
mov
pop
pop
in
cld
jp
pusha
push
lea
out
mov
add
mov
jle
cmp
pop
cwtl
jg
xor
xchg
pushf
sub
ret
add
out
xchg
lcallw
inc
sbb
push
cmpl
cmpl
xlat
dec
and
shrl
outsl
inc
addb
xor
jb
repnz
cmp
mov
in
or
xchg
xorl
call
mov
sub
cltd
int
sbb
div
daa
nop
int
fwait
cmp
repnz
and
dec
mov
adc
add
test
dec
jbe
mov
popf
cli
in
pop
iret
sub
mov
loopne
and
add
imul
gs
push
jmp
and
or
out
xor
lds
jbe
loope
insb
dec
push
pop
inc
mov
dec
mov
sub
test
nop
adc
in
rorb
adc
leave
mov
dec
sbb
xor
xor
es
bound
movsl
xor
mov
scas
jecxz
add
sbb
mov
es
and
ljmp
push
push
insl
mov
pop
lret
nop
xchg
dec
out
pop
mov
pop
aam
mov
inc
cld
mov
add
pop
mov
stos
cmc
sub
popa
add
out
cwtl
jo
outsb
adc
in
pop
jmp
int
mov
imul
xchg
loopne
mov
mov
out
test
push
jmp
cmp
dec
shr
insb
pop
out
and
gs
pop
test
adc
and
and
mov
std
inc
and
push
pop
push
xchg
push
xchg
or
xchg
mov
cwtl
push
xchg
aas
adc
cwtl
push
adc
shl
fistpll
xchg
sub
in
mov
xchg
xor
inc
cmc
and
sbb
and
or
jb
pop
xchg
or
int3
cmc
xchg
mov
xor
pusha
sarl
xor
jl
cmp
popa
add
bound
in
dec
adc
xor
cwtl
xor
adc
mov
and
aaa
add
dec
jne
mov
test
fs
lods
mov
scas
gs
xchg
pmullw
imul
xchg
mov
cmpsb
sub
dec
add
ret
pop
call
ficoml
loope
pop
jae
insb
testb
sbb
stos
jmp
inc
or
cli
lods
sbb
mov
ret
cld
bound
test
add
fcoml
inc
loopne
mov
addr16
adc
xorb
pop
jg
adc
rorl
xchg
ficompl
inc
xchg
out
ljmp
sub
pop
or
or
notl
negl
xchg
rorl
das
call
xchg
test
pop
add
inc
sti
data16
jne
mov
mov
insl
adc
out
ss
outsl
pop
jle
shrb
mov
jp
ss
jmp
push
add
les
pop
xchg
jecxz
inc
xor
aam
mov
cmpsl
loop
inc
add
mov
test
int3
xchg
loope
mov
inc
pop
xchg
or
decb
cwtl
int3
dec
fndisi(8087
xor
xor
bound
int3
sub
inc
xchg
push
lcall
jle
loope
jns
mov
outsl
push
aam
pop
sbb
dec
xor
pushf
mov
pop
scas
fldl
mov
jns
pop
fisubrl
sbb
adc
aaa
lock
mov
scas
std
data16
loope
subb
push
lods
sub
daa
fmull
jp
loope
aas
hlt
loopne
add
pop
jo
orl
add
xchg
mov
adc
mov
and
imull
push
int3
lcall
incb
sahf
fs
fwait
mov
mov
int3
cwtl
or
movsl
int
jae
cmp
outsl
les
cmp
movsl
into
loopne
lock
insb
push
or
imul
add
mov
lock
push
test
pop
aas
mov
jb
movsb
inc
jmp
jle
loop
pop
mov
mov
sub
cmp
int3
jecxz
fstpl
mov
jecxz
push
push
aad
int
pushf
sub
pop
aas
dec
inc
test
cli
movsb
cmp
inc
imul
daa
cld
insb
fnsave
pop
fs
sbb
xchg
lret
sbb
xchg
hlt
enter
pop
outsb
inc
mov
pop
std
fdivrl
xchg
inc
or
and
arpl
mov
shr
fdivrs
jo
push
dec
ret
lds
aas
and
imul
mov
imul
pusha
jge
dec
adc
scas
jns
fstp
sbb
lods
mov
push
les
dec
lods
cmpxchg8b
lds
movsl
inc
clc
add
dec
mov
aam
adc
lahf
ret
or
outsb
cmp
jb
into
inc
loope
addl
xchg
imul
lret
mov
push
mov
dec
cli
sub
test
bound
cltd
aas
adc
stos
cmp
jge
fistps
cmp
sar
inc
scas
jbe
fnstsw
sub
ja
xor
ret
cmp
rclb
fmuls
pop
pop
jle
lods
and
add
adc
jl
fldl2e
sbb
imul
sub
imul
pushf
inc
xor
imul
xchg
jmp
inc
or
aam
pop
popa
jno
sub
mov
xchg
jg
out
incl
and
test
xor
das
loope
xchg
push
dec
or
pushf
ds
les
cmp
cltd
popa
xchg
rorl
test
into
inc
ja
movl
mov
test
inc
sub
sti
and
dec
shll
push
add
xchg
push
lret
jmp
cmp
mov
sub
ret
js
adc
jl
jle
jbe
mov
iret
es
clc
mov
mov
mov
or
add
and
jno
mov
movsb
jge
ljmp
push
icebp
lcall
cmc
div
mov
jg
mov
push
add
orl
or
out
lahf
call
push
movsb
and
es
and
dec
mov
jl
repz
push
jl
jae
fcom
dec
adc
shrl
jbe
xchg
sbb
xlat
jb
xchg
push
stos
nop
fcomps
mov
scas
xchg
in
shll
ret
test
mov
dec
sub
scas
cld
pop
or
or
add
dec
cmpsb
ja
sbb
dec
push
mov
xor
repz
adc
stos
sbb
xchg
ljmp
dec
adc
push
or
lock
mull
sbb
adc
sub
pop
jecxz
dec
pop
jg
and
xchg
cmpl
adc
cmc
aam
dec
or
les
and
shl
sbb
lahf
in
int3
jecxz
fildl
out
cmp
icebp
outsb
xor
mov
rclb
xlat
dec
dec
xchg
outsl
icebp
pop
inc
pop
ds
cmpsb
push
cs
inc
mov
mov
lods
adc
dec
and
or
push
pop
mov
test
je
jge
inc
lods
xor
xchg
cmp
cmp
clc
or
mov
aad
inc
sbb
jle
xchg
jo
ja
sub
ljmp
mov
imul
addr16
leave
or
aam
jbe
test
jae
push
sbb
mov
jmp
sti
into
or
scas
imul
in
outsl
sbb
adc
add
sbb
mov
xchg
inc
push
inc
popa
ficoms
nop
cmp
into
outsl
rclb
mov
pop
cmc
mov
hlt
push
cltd
mov
pushf
xchg
cmpsl
inc
pop
imul
jge
inc
sbb
xlat
and
dec
or
rorb
mov
in
dec
dec
enter
xchg
and
idivb
test
iret
mov
add
adc
in
jns
and
pop
mov
sahf
pop
lcall
repnz
jg
push
inc
insl
sub
test
mov
xor
mov
cmp
or
ds
out
lods
add
pop
sbb
rorb
pop
ja
test
pop
adc
arpl
dec
pop
xor
xchg
cmp
pop
hlt
mov
mov
fistpll
repz
roll
xchg
mov
cmp
sbb
xchg
cmp
stc
ss
stos
and
sub
and
outsb
hlt
addr16
out
dec
mov
cmp
add
pop
fsts
dec
or
aaa
in
mov
pop
cli
mov
fs
push
mov
pop
or
xchg
push
adc
push
lods
or
out
lock
ds
xorl
pause
negl
jnp
adc
adc
jg
and
int
mov
xor
test
pusha
pop
ss
xchg
sub
or
pop
or
nop
xchg
adc
les
andl
popa
xor
cs
das
sarb
addl
push
inc
or
shrb
lea
xchg
xchg
ret
jno
dec
mov
mov
push
inc
rorl
mov
sub
in
out
fs
lea
dec
xor
test
sub
xor
sub
lods
mov
pop
lock
cmc
xor
ss
cmp
push
fdiv
scas
outsb
cmpsl
jge
add
inc
cmp
add
popa
adc
lret
pop
sub
ret
std
cmpsl
jne
and
scas
test
mov
jge
fcoms
inc
outsl
sahf
or
clc
dec
xchg
sbb
push
and
mov
adc
jecxz
xchg
mov
aam
or
add
dec
out
mov
out
sub
ds
cmp
mov
daa
daa
mov
pop
imul
loopne
lahf
test
add
adc
in
icebp
fs
mov
cs
stc
mov
ja
xlat
push
lret
mov
xor
rcr
aaa
lret
pop
sub
lods
stc
call
sub
addb
mov
push
loop
xor
xchg
push
push
in
das
xor
add
out
or
jno
inc
rclb
pop
rcrb
cs
pop
loopne
mov
mov
insl
mov
pop
add
sub
je
xor
test
inc
jecxz
mov
adc
mov
pop
sahf
xchg
jo
insl
sbb
xlat
mov
push
sbb
cmp
in
jg
pop
mov
xor
xchg
lret
inc
repnz
inc
sub
inc
sbb
inc
mov
pusha
cmpsb
out
sub
fwait
xor
jbe
jno
imulb
xchg
out
adcl
dec
dec
sub
mov
xchg
dec
pop
call
mov
shlb
xor
and
mov
xchg
das
jge
add
pop
popa
cmp
push
jl
cli
jg
push
shl
inc
xor
mov
test
xor
adc
movsb
dec
inc
insb
int3
mov
inc
xchg
dec
xor
xchg
inc
adc
push
or
pop
sbb
add
push
int3
imul
cmp
lock
xlat
mov
sahf
fisubrs
xchg
push
test
gs
xchg
lret
sbb
scas
push
xor
xor
xor
ss
push
out
mov
mov
clc
jp
inc
clc
mov
adc
into
fcoms
ljmp
add
andl
fimuls
dec
pop
inc
jle
mov
int3
dec
adc
fsubrs
call
mov
fstl
xchg
or
in
cmp
xor
cmp
fcoml
incb
mov
push
ja
in
cmp
jo
arpl
xor
les
push
lds
jb
jne
add
mov
sub
mov
push
dec
mov
enter
int
push
push
enterw
loop
sbb
popa
or
data16
or
xchg
xor
jo
rcll
mov
adc
insb
leave
push
mov
cmp
aaa
add
or
test
js
dec
dec
push
dec
fwait
mov
ja
adc
pusha
mov
mov
lods
jp
hlt
data16
cld
je
jno
xchg
loopne
mov
pop
mov
rorl
push
sbb
jb
dec
pop
pop
mov
outsl
jb
icebp
pop
mov
sarb
outsb
push
inc
add
in
int
inc
icebp
and
ds
cmp
ffree
pop
enter
repnz
and
mov
dec
mov
or
xchg
xchg
push
pop
adc
pop
lret
mov
xor
or
mov
xor
push
sub
outsb
sti
pusha
mov
in
xchg
gs
mov
orl
push
clc
pop
orb
jno
sub
pop
ss
js
shlb
test
fsub
mov
lahf
or
bound
sbb
or
pop
ljmp
pop
lahf
sub
or
fimuls
fildl
gs
adc
stos
das
iret
cmp
xor
add
mov
insb
sbb
addr16
mov
dec
in
data16
in
out
in
cld
les
push
inc
and
push
sti
dec
fildll
inc
icebp
fnstenv
jbe
push
jle
dec
insb
and
sub
xor
and
popf
call
and
negl
xor
jge
jo
and
sbb
fidivrl
testb
stos
inc
pop
jbe
cmp
xchg
sti
push
inc
insb
jne
pop
dec
sub
push
out
jno
add
fstpt
arpl
movsb
jge
xchg
daa
xor
es
loopne
ss
int
lds
or
mov
lods
push
adc
stc
jl
enter
jp
aas
es
pop
jns
pop
out
mov
das
movsb
stc
jb
rcrl
pusha
pop
and
aam
push
inc
add
dec
bound
add
pop
mov
fldl
fldenv
dec
push
mov
fnsave
fcomps
jbe
scas
test
test
cs
fcoms
dec
outsb
insb
mov
pop
ljmp
jne
cmp
add
test
cmpsl
jns
pop
jecxz
into
mov
rol
jl
jne
into
leave
pmaddwd
xor
push
imul
mov
jecxz,pn
xchg
fxch
xor
inc
push
adc
inc
xchg
popf
push
inc
pop
or
lcall
movsl
xor
xor
add
jecxz
push
cmc
xchg
cpuid
mov
addr16
pop
pop
in
incb
movsl
out
cmpsl
sub
inc
mov
mov
and
or
push
ja
jecxz
push
add
xor
stos
dec
repz
adc
shll
idivb
or
sub
lods
and
push
fidivrs
mov
mov
add
in
ljmp
xchg
lahf
mov
mov
es
cmpsl
xchg
pusha
lods
sbb
cli
sbb
inc
jnp
sub
xchg
cmc
and
orb
add
jns
fwait
jbe
je
and
xchg
fadd
call
inc
and
push
sbb
shl
repz
fldenv
inc
mov
mov
out
mov
cmp
nop
push
into
mov
add
shl
mov
std
or
xor
sub
and
sbb
dec
movsl
pop
orl
adc
mov
test
add
pop
subb
fadds
pop
and
mov
ss
aam
jecxz,pn
gs
sarb
js
mov
jl
mov
push
mov
pusha
mov
inc
xor
mov
xor
dec
ret
stos
inc
decl
jno
mov
out
into
mov
push
jae
mov
cmp
jae
lock
jle
test
push
inc
cltd
add
xchg
mov
jecxz
repz
sar
adc
inc
jne
and
mov
fidivrl
pop
iret
aas
test
rclb
test
icebp
call
hlt
outsb
aam
aam
pop
fbld
scas
test
push
mov
ja
xor
in
xchg
xor
cmp
sbb
sub
sub
out
and
sbb
int3
insl
sbb
repnz
test
mov
fs
mov
and
jno
aaa
fisubrs
sarb
adc
test
push
aam
test
jnp
call
je
mov
pop
push
add
orb
adc
and
scas
sbb
sti
pop
inc
inc
jae
push
enter
pop
lcall
push
rcl
sbb
push
scas
and
fucomp
jnp
sarb
pop
mov
mov
int3
aas
sbb
adc
loopne
xor
je
pop
test
out
nop
es
xchg
jp
int3
push
dec
notb
test
pop
cmc
gs
jae
pop
mov
dec
fwait
adc
leave
cli
adc
gs
inc
shl
sbb
js
inc
aas
cltd
jbe
dec
popf
sub
daa
or
ds
loop
das
arpl
jno
jno
dec
mov
xor
mov
fisubs
mov
cwtl
xchg
jg
adc
mov
sbbb
fadd
pop
frstor
in
clc
sub
rcll
lea
les
xchg
cmp
sbb
xchg
ja
nop
lcall
stos
dec
invd
outsb
mov
jle
push
movsl
xchg
dec
xor
adcb
loope
and
sub
adc
mov
stos
cli
jnp
mov
repz
adc
push
xchg
adc
pop
out
es
cmp
xchg
and
mov
jge
adc
stos
jle
cmp
xor
jbe
inc
loope
cmpl
cmpsl
aaa
push
add
cmp
dec
aad
into
nop
insl
push
add
push
mov
imul
fwait
mov
pop
imul
movsl
jnp
lcall
into
pushf
rcrb
ret
lock
aaa
mov
inc
push
out
adc
xor
inc
push
sbb
sbb
jle
rorb
movsl
sbb
fisubrl
sti
inc
jb
por
mov
and
pop
lea
pop
inc
push
add
sti
das
mov
test
jg
lret
mov
jne
clc
es
nop
fs
das
add
adc
loope
and
sub
push
in
jns
popa
add
inc
and
aad
daa
arpl
jns
push
sarl
repz
mov
jecxz
pusha
cmp
mov
es
mov
sarb
pusha
scas
out
leave
das
rclb
popa
inc
out
leave
jle
in
ret
popl
lods
cli
xor
jnp
mov
or
cmp
jecxz
icebp
lret
aaa
out
xchg
or
sbbb
imul
je
jmp
orb
aaa
dec
xchg
or
push
and
rol
xlat
dec
cmpb
loope
xchg
je
xor
mov
outsb
push
test
iret
push
xchg
jmp
nop
cmp
or
pop
std
lret
cwtl
fs
hlt
pop
xlat
inc
in
fstpl
push
sub
pop
mov
stos
cmp
sub
dec
pop
andb
pop
divl
mov
or
push
loop
sub
pop
cmpsb
inc
xor
mov
nop
gs
lea
fidivrs
jmp
inc
push
inc
add
cmp
xor
stos
in
sub
stos
fadds
in
ret
mov
mov
icebp
and
ret
lcall
xor
xchg
mov
mov
shrl
sub
decl
rcll
aad
xor
add
jo
xor
stc
push
mov
inc
push
mov
sub
cmp
dec
int3
popf
mov
mov
xchg
jne
jle
and
stc
pop
dec
lds
adcb
mov
mov
scas
lahf
mov
mov
icebp
frstor
mov
xchg
fwait
cwtl
inc
pop
out
aas
jg
push
push
jle
sbb
js
in
xlat
ja
xchg
outsb
xor
bound
or
push
cmp
xchg
jo
adc
out
or
xchg
pop
add
pop
out
addr16
dec
scas
ljmp
jle
dec
mov
push
cltd
in
sub
lret
push
cmp
cmc
sbb
cmpsl
xchg
cmp
inc
xor
sbb
or
rcr
mov
shr
jo
mov
pop
jmp
xor
or
add
std
ret
mov
sub
and
addl
mov
push
rorb
movsb
loope
faddl
sbb
mov
pop
mov
mov
stc
jne
std
mov
test
adc
inc
dec
mov
push
mov
mov
pop
loope
out
or
sub
push
push
fcompl
aad
fwait
xchg
sbb
loope
sbb
push
sbb
mov
ror
pop
sbb
mov
mov
xchg
xchg
lea
daa
rcll
mov
into
jb
mov
push
push
lret
jbe
repnz
test
int
lds
push
cmp
scas
call
add
xor
sub
xchg
fdivr
push
push
dec
sahf
ds
push
mov
fnop
jmp
adc
inc
mov
push
push
test
inc
aam
stos
test
pop
ret
ficompl
movsl
inc
stos
jbe
jl
loop
jge
cmc
loope
push
mov
pop
add
push
add
fwait
or
scas
stc
or
sbb
push
fidivs
push
mov
pop
fistps
sarl
adc
xchg
adc
dec
outsl
leave
pop
jp
outsl
push
outsl
iret
pushf
icebp
dec
xor
pop
je
fisubrs
mov
mov
jl
mov
jle
xor
and
jp
cmp
push
mov
sbb
sub
std
rcr
xchg
jl
pop
imul
ja
rcrl
xor
out
push
movsb
adc
and
jp
sahf
std
sbb
push
dec
cmp
xlat
cwtl
mov
jl
js
jno
mov
jns
repnz
repz
sub
aad
sarb
fnstcw
test
mov
rol
cwtl
cmp
mov
in
mov
jb
movsl
in
xor
inc
filds
jbe
test
mov
aaa
xchg
shrl
inc
jg
outsb
sub
iret
and
and
ds
xor
jnp
sti
mov
jp
stc
push
je
cld
push
pusha
cmpsl
sbb
cmp
lock
imul
gs
add
shl
ja
call
lods
xchg
cmp
cwtl
pop
pop
repz
negb
mov
ljmp
mov
sub
call
and
push
call
pushf
aam
pop
and
mov
bound
mov
mov
fldt
pop
pop
enter
out
push
pop
adcl
cmc
jp
ss
add
stc
mov
insb
pop
inc
fcomps
dec
in
sbb
or
cli
les
gs
xor
jge
mov
rcrb
popf
mov
imul
stos
das
mov
aas
sub
xchg
in
movsl
dec
jbe
xchg
xor
sub
std
movsl
xchg
out
cwtl
mov
dec
in
test
mov
lds
enter
aas
cmp
fbld
push
std
xchg
cwtl
jl
in
sub
push
jo
and
pop
pop
add
ljmp
es
inc
xlat
push
xchg
int
or
ds
int
mov
nop
or
cmp
rcrl
and
pop
out
je
and
xchg
pop
jmp
mov
ret
cmpl
and
jecxz
jl
lcall
jp
dec
or
push
cmc
pop
shl
or
sbb
movsb
push
push
pop
scas
and
mov
pop
add
dec
sub
bound
sub
jno
loop
repz
mov
push
pop
insl
cmc
testl
inc
ja
scas
dec
mov
icebp
cmpsl
out
jecxz
and
mov
dec
jg
pushw
push
sub
mov
in
fiadds
adc
mov
lods
add
leave
push
adc
push
cmc
pop
mov
lcall
lret
adc
jns
cmp
ljmp
cli
cmp
js
jnp
lea
lods
jl
cli
mov
dec
mov
shlb
cwtl
xchg
pop
or
xorb
jle
xchg
or
pop
adc
aam
mov
roll
pop
mov
lahf
in
enter
and
loope
das
jno
in
or
sub
dec
jne
mov
dec
shl
fwait
and
sub
rcrl
pop
cmp
movsl
dec
out
popf
rclb
sbb
mov
lea
push
push
rol
movsb
mov
jae
cmp
ret
test
push
sub
push
jp
add
cmp
daa
pushl
pushf
push
mov
xorl
adc
test
mov
and
fsincos
xchg
lcall
cmp
std
sarl
int
jns
adc
or
cmc
mov
xchg
shll
fcomp
dec
push
mov
pop
mov
mov
ror
lret
scas
ret
popf
dec
std
mov
sbb
testl
iret
lods
out
negl
nop
adc
repz
mov
cs
lea
jl
add
ret
cmc
mov
sbb
sarb
push
sti
adc
dec
mov
pop
out
mov
push
fistpl
cmpsb
push
sbb
sub
mov
push
test
mov
push
and
sbb
mov
xchg
insl
push
int3
fdivrs
ficoml
pusha
pop
push
push
aad
pop
aad
cmp
outsl
mov
inc
lock
out
outsl
pop
xchg
icebp
cmp
scas
dec
mov
xchg
add
mov
dec
cltd
sar
ds
mov
adc
jmp
adc
mov
ss
jle
shrl
dec
sbb
mov
jo
push
sbb
jns
ror
pop
mov
jne
inc
lods
mov
pop
and
adc
aaa
push
sbb
mov
fsub
pop
jae
cmp
push
pop
mov
lods
mov
or
and
test
xchg
sbb
ljmp
xor
pop
les
lcall
xchg
cltd
in
mov
mov
btr
repnz
push
xchg
sti
das
lahf
lods
mov
dec
ret
and
jl
idivl
js
add
inc
jle
or
mov
sub
pop
test
rcrl
mov
xchg
je
or
xlat
push
lcall
mov
out
fs
ret
ja
jge
push
stos
push
les
movsl
mov
sbb
in
mov
rcll
or
or
mov
outsl
sbb
jno
pop
lods
enter
popf
dec
shrb
lret
addr16
mov
out
clc
xor
pusha
xchg
xor
ret
sbb
sbb
pusha
or
jae
loope
setp
and
jecxz
mov
xchg
les
push
adc
popa
push
mov
test
push
scas
mov
adc
pop
aam
inc
sbb
jmp
mov
cmp
mov
or
insb
addr16
pusha
out
jno
enter
mov
cs
sub
xchg
mov
adc
cmp
scas
into
je
mov
pop
addr16
ss
jmp
or
mov
int
cmpsl
jle
xor
popf
push
xchg
daa
jo
hlt
lret
jbe
fs
mov
les
push
push
stos
push
sahf
mov
negl
in
mov
inc
enter
es
push
es
cmp
cmp
xor
fldenv
sti
sbb
cmp
sbb
push
xor
arpl
mov
or
jne
mov
test
sbb
dec
or
cli
jns
aas
jle
imul
arpl
subb
sbb
movsl
push
mov
sysret
jb
or
mov
movsl
lds
icebp
mov
mov
inc
insb
xor
dec
xor
inc
xor
in
fisttpl
mov
dec
inc
push
imul
hlt
jnp
cwtl
dec
fbld
sbb
and
outsb
sbb
lods
and
inc
clc
add
pop
popf
pushf
leave
aad
push
mov
cld
into
cmp
rcll
pop
sbb
mov
jb
add
cld
mov
mov
loope
pusha
inc
jp
push
sbb
and
dec
sub
mov
movaps
dec
rclb
adc
cmp
dec
add
cmp
mov
sub
mov
repnz
std
sti
pop
imul
xchg
outsb
xor
movsl
repnz
cmp
xchg
mov
outsl
stos
into
and
insl
ds
mov
sbb
leave
jns
fsts
jae
fdivs
mov
mov
pop
sbb
inc
push
or
fsts
lock
and
js
mov
xor
inc
sbb
pushf
mov
inc
icebp
lcall
fwait
push
cs
inc
aad
jecxz
decl
mov
subl
sbb
push
dec
dec
xchg
jne
mov
movl
add
inc
jb
hlt
out
sar
and
insb
mov
cmp
xchg
pushf
lods
push
or
rolb
ljmp
mov
aas
sub
fcomip
adc
rolb
inc
jnp
mov
adc
and
in
out
cli
dec
outsb
rorb
mov
or
push
pop
mov
stos
sbbl
pop
mov
jnp
in
repz
push
test
jbe
jbe
inc
sub
clc
pop
sbb
fs
lret
lret
aas
cli
mov
iret
add
mov
roll
push
fldcw
jo
mov
loop
pop
jns
ret
pusha
sub
es
leave
pop
iret
and
pop
addr16
jne
inc
push
subb
lcall
xor
rcrl
clc
fidivrs
pop
xorb
jb
jnp
scas
faddl
xchg
or
or
mov
test
jecxz
pminub
sub
adc
cld
xor
stos
adc
and
xchg
mov
ja
int
mov
sub
sti
adcb
pusha
jbe
aas
sbb
aam
test
leave
sbb
xor
andl
push
dec
mov
sti
adc
xor
xchg
lods
push
mov
movb
push
imul
mov
iret
cld
icebp
mov
bswap
pop
or
xor
mov
testb
stos
push
adc
or
shlb
push
dec
scas
pop
ja
pop
inc
mov
test
dec
xchg
lods
mov
mov
sub
pushf
cmpsb
cmp
insl
mov
pop
imul
jae
loop
push
std
rorl
ss
sbb
hlt
movl
fld
jae
aad
iret
lods
mov
jae
pop
pop
outsl
adc
in
cmpsl
adc
and
nop
js
sbb
js
mov
dec
push
and
insl
lods
sub
or
cmpsb
and
xor
fnstenv
dec
jecxz
aaa
cmpsb
mov
call
sub
inc
dec
xor
push
mov
xor
in
out
fprem
xor
push
repz
popa
mov
in
and
push
fsts
jle
ljmp
sub
push
and
xchg
inc
push
fdivrp
sub
sbb
dec
aad
test
je
add
int3
pop
cmp
push
addb
dec
arpl
mov
add
jge
xchg
addr16
jmp
loope
pop
adc
addr16
inc
sbb
imul
cmp
inc
sahf
pop
xor
adc
xor
push
cmpsl
cld
xchg
daa
gs
adc
sub
push
lcall
mov
iret
and
stc
dec
pop
das
rcl
push
adc
dec
movsb
pop
or
mov
pop
jg
out
arpl
inc
in
ds
push
inc
dec
pop
insb
cwtl
movsb
test
data16
cs
push
lahf
loop
sub
fmull
aas
cltd
sub
push
mov
mov
cld
mov
ljmp
inc
sbb
mov
jp
mov
jno
mov
iret
dec
sub
push
mov
out
and
daa
ds
insl
mov
cmp
stos
stos
pusha
pop
mov
xor
in
inc
stos
repz
cli
xchg
mov
mov
and
pop
sub
not
jle
es
cli
cmc
or
out
sbb
mov
negb
sub
testl
je
pop
dec
xchg
pop
and
mov
in
inc
into
cmpl
cmp
popf
mov
add
mov
push
inc
sti
mov
sbbl
dec
es
xor
cmp
mov
popf
cltd
or
or
adc
xlat
aad
xchg
dec
mov
stc
stos
jge
pop
rcl
jnp
popf
es
ret
bound
xor
adc
add
call
or
jo
ret
loop
mov
add
sub
inc
out
ret
pop
push
in
cld
mov
inc
jmp
fisubrs
dec
cmp
stc
outsb
cmpsl
or
fwait
test
outsl
les
dec
push
and
mov
sbb
xlat
push
lret
das
fcomps
outsl
jg
mov
or
jo,pt
sbb
out
inc
mov
dec
mov
ds
jbe
hlt
inc
xchg
testb
add
sub
fs
fildll
and
jb
inc
out
in
enter
sub
push
xor
add
fs
sarb
mov
or
jb
adc
mov
cld
ss
fisubrs
ss
push
cli
pop
divb
lods
fldl
fsubrl
movsb
cmc
mov
gs
sub
pop
xchg
xchg
shll
lret
adcl
out
stc
cld
jns
jecxz
mov
xchg
iret
fidivrs
popf
scas
cltd
js
ja
loope
adc
jno
lds
mov
inc
or
jle
je
scas
rcll
in
dec
add
gs
test
dec
mov
or
pop
push
adc
fstl
jbe
aaa
pushf
fs
mov
ds
push
sbb
stos
and
icebp
data16
jnp
add
imul
int3
out
ret
xchg
pop
pop
mov
repnz
adc
mov
pop
push
lock
cmpl
sub
ror
sahf
pusha
fs
push
push
cwtl
insb
inc
js
pop
ja
mov
mov
in
lock
push
call
bound
xchg
or
mov
cli
outsl
test
aad
repnz
outsl
or
call
mov
dec
mov
js
fdivrs
pusha
bnd
lret
or
enterw
jnp
adc
xchg
mov
adc
ret
aad
imul
insb
decb
gs
jg
repnz
mov
mov
out
es
jl
rcr
sbb
cmp
mov
mov
cmpsl
shll
cs
jmp
je
int
adc
mov
push
push
iret
mov
add
pop
ss
aad
popf
jecxz
in
inc
shl
mov
dec
dec
add
decl
pop
cmp
dec
adc
mov
jmp
xchg
lea
cmpsl
push
les
pop
fs
rcrl
dec
sub
add
sbb
mov
stc
sbb
pop
repnz
cltd
mov
mov
and
and
mov
fisttpll
sbb
pushf
push
inc
push
pop
les
inc
jnp
mov
inc
enter
push
stc
stos
lahf
or
nop
and
fwait
int3
mov
int
push
mov
cmpsb
fidivrs
xor
es
add
sub
idivb
movl
in
or
filds
aas
mov
ficompl
into
pop
or
pop
sbb
leave
xor
fnstsw
fwait
cmp
in
pop
cld
pusha
lret
push
ja
out
xchg
mov
xchg
push
adcb
into
push
jae
ss
jle
mov
jle
mov
sti
adc
imul
jns
xchg
shll
loope
inc
mov
adc
sbb
lock
fsts
movsl
loope
sub
jnp
xor
repz
mov
js
inc
mov
dec
and
adc
fwait
sub
mov
push
sbb
cmp
xchg
mov
inc
and
lret
ret
jmp
test
inc
nop
xor
rolb
xchg
inc
loop
inc
pop
mov
lret
imul
aam
mov
mov
adc
or
fcoml
bound
sub
and
cs
sub
shlb
adc
je
rol
cmp
xor
sub
in
and
cmovbe
pop
inc
fbstp
hlt
out
ret
mov
mov
inc
test
les
xchg
mov
inc
xchg
repnz
outsl
mov
add
mov
xchg
mov
rorb
xchg
imul
and
or
push
fmuls
out
push
push
mov
inc
rcrb
notb
mul
fnsave
mov
jnp
add
mov
lods
fwait
mov
cmp
push
lahf
cmp
mov
fs
out
fbstp
int3
mov
pop
lea
cmp
clc
sbbb
fisubl
jg
fcompl
mov
mov
push
push
aam
ficomps
push
mov
in
push
lds
cs
cltd
std
adc
int3
inc
or
in
lcall
mov
out
lahf
rcll
sbb
es
jecxz
mov
adc
cmpb
cmp
gs
fwait
pop
mov
jno
in
cmc
fisttpl
push
cmp
aaa
dec
xchg
jb
jne
loop
or
inc
in
ss
pop
dec
xchg
in
mov
sub
adc
adc
jne
push
fcompl
push
or
jmp
lods
jg
js
fisttps
addr16
ss
xor
inc
mov
ret
sbb
push
jno
out
mov
push
inc
mov
pop
push
mul
icebp
ds
jp
dec
negb
pop
inc
jp
test
cmp
addr16
sahf
leave
cwtl
lret
lods
test
fs
sub
mov
mov
jmp
shrl
hlt
std
mov
js
insl
sub
push
ds
dec
fldenv
testb
gs
mov
or
inc
or
rclb
cmp
lret
cli
lea
out
xchg
out
out
xchg
push
jl
test
ljmp
mov
fcoms
push
mov
aad
adc
sub
cmc
jo
jno
addb
and
push
mov
push
aaa
lds
dec
pushf
mov
out
xor
jae
hlt
cmpsb
sahf
arpl
je
orl
cltd
fmul
cmp
imull
sbb
icebp
jo
xor
fists
call
int3
jmp
cltd
push
adc
sub
fldenv
gs
mov
inc
jp
test
dec
jae
hlt
lcall
sbb
lds
lahf
push
scas
scas
push
cmpsb
adc
les
into
les
aam
pop
inc
rolb
inc
stc
enter
aad
mov
lods
jle
pop
mov
or
lds
arpl
inc
rclb
lds
pop
push
aas
popf
scas
out
movsl
adc
pop
ljmp
adc
push
test
add
xchg
or
into
cltd
in
call
in
pop
and
aam
out
jmp
xor
mov
lret
aas
or
imul
push
jns
in
adc
push
cmp
aaa
loopne
loop
into
pop
and
rclb
stc
add
adc
push
jns
outsb
jp
repnz
daa
lcall
jnp
jae
inc
dec
cmp
mov
in
insl
loope
or
into
jle
lods
xchg
daa
pop
dec
call
cld
icebp
cmp
cltd
jns
inc
push
inc
leave
stc
scas
popa
imul
adc
pop
or
sbb
icebp
add
movsb
jbe
sub
jp
xchg
mov
sub
and
leave
sarb
adc
fucom
mov
into
in
and
sbb
cmc
aad
push
xchg
shrl
xchg
pushf
loop
or
lods
je
push
sub
pop
cmp
xchg
loopne
loopne
push
ja
pusha
enter
js
push
pop
fbld
scas
dec
enter
into
xchg
je
xchg
cmpb
cwtl
jb
push
div
fwait
leave
push
sub
shrb
or
add
add
mov
fisubl
iret
dec
xchg
cltd
sbb
mov
pop
lcall
popf
mov
ret
aad
and
nop
out
daa
scas
clc
ljmp
xchg
pop
add
shrl
mov
adc
iret
mov
or
pop
bound
sub
and
add
test
leave
fstpt
shl
xor
cmp
lea
inc
sbb
sub
jnp
aad
cld
je
pop
arpl
iret
or
lcall
dec
sbb
fsubs
xchg
sbb
sbb
mov
xor
scas
int
pop
sbb
es
hlt
and
xchg
test
popf
add
xchg
push
jp
out
stos
leave
xchg
and
adc
mov
lret
aas
cwtl
mov
dec
int
pop
mov
xlat
xor
add
ds
ds
xchg
push
loopne
sti
dec
cmpsl
sub
loopne
iret
jae
int3
movsb
xchg
xchg
cltd
adc
adc
aad
inc
mov
and
ret
xor
xchg
data16
dec
pop
inc
jmp
cmp
mov
rcl
call
scas
fstl
cmp
test
daa
sbb
nop
cld
sub
jecxz
xchg
mov
leave
push
fmull
xor
mov
or
inc
mov
popf
adc
stc
jns
clc
rcrb
mov
sbb
fildl
sti
mov
lcall
and
sbb
adc
mov
stos
daa
rcl
jge
jl
sbb
lret
sub
sbb
or
pop
fwait
and
cmp
adc
shrb
arpl
inc
imul
xor
shlb
mov
add
cmp
dec
xlat
ljmp
test
jge
sbb
jp
adc
and
test
cmpsl
xchg
xor
int
jo
adc
pop
repnz
jl
push
scas
fs
dec
pop
ret
inc
lret
sti
and
sbb
ljmp
insl
out
sarl
sbb
movsl
adc
inc
cmpsl
movsb
inc
push
aaa
jno
jge
jo
leave
leave
xchg
mov
ret
mov
or
arpl
push
mov
push
test
sub
inc
repnz
mov
into
rclb
mov
jmp
js
sub
mov
cmp
test
mov
pop
ret
test
aam
pop
loopne
cmpsb
std
jle
sub
ja
sti
dec
pop
cmp
xor
roll
push
sbb
mov
and
xor
xor
and
lea
jae
sbb
add
ss
adc
push
rolb
mov
cmp
mov
popa
out
pop
add
xchg
js
inc
ret
mov
cmp
mov
jae
jno
outsb
mov
sbb
movsb
addr16
es
sbb
jge
jmp
pop
pop
add
push
pop
pop
and
sbb
ja
sub
mov
lock
dec
into
test
sub
mov
addb
push
xchg
push
sub
jmp
scas
jo
mov
nop
pop
sbb
popa
dec
mov
sbbl
mov
jmp
jo
cs
mov
pusha
push
aam
xor
fs
pop
mov
sbb
adc
lea
ja
mov
dec
jle
cs
test
push
or
mov
fisubs
inc
jle
cmp
inc
mov
scas
xchg
cmp
bswap
sub
out
stos
sub
and
bound
xor
incl
mov
sahf
sbb
fbld
ljmp
fistpll
pushf
shrl
mov
dec
aad
fsubs
int
iret
insl
push
add
pop
mov
mov
std
popf
shl
testb
int3
shlb
into
pop
mov
sub
jno
mov
cmp
or
mov
sub
shlb
adc
push
mov
add
inc
or
cmc
mov
in
jge
sub
enter
fisubrs
pop
fcmovu
push
rorl
mov
sub
bswap
push
das
es
insl
lock
jb
sahf
inc
pop
mov
push
jmp
push
xchg
mov
call
pop
pop
dec
loop
sbb
jp
jecxz
sub
jb
fs
cs
pop
xchg
movsl
leave
adc
pop
enter
pop
lret
cmpsl
cli
mov
cwtl
addr16
inc
pushf
or
in
test
lods
rorb
negl
fisttpll
xchg
test
ret
adc
fucomi
fs
mov
inc
sbb
arpl
lods
cltd
repnz
push
leave
push
jae
scas
xchg
iret
loop
movsb
xchg
shll
setnp
inc
xor
jmp
lods
stos
cs
add
mov
adc
and
sbb
cmpsl
add
ljmp
and
insb
add
xchg
push
js
out
xchg
cltd
mov
adc
xchg
inc
inc
xor
imul
into
pop
fadds
add
clc
nop
pop
cwtl
loopne
inc
mov
cmpsl
sub
sub
mov
jmp
in
fimull
and
aaa
out
mov
fcomi
push
scas
pop
les
data16
add
out
sub
dec
xchg
push
ljmp
xor
idivb
shl
shrb
lods
loopne
push
push
es
aad
add
adc
sub
xchg
push
xchg
pop
cmpsb
icebp
je
mov
xor
les
mov
xchg
js
mov
cmp
ret
mov
movl
cmp
push
mov
imul
cmp
pop
stos
call
rolb
insl
adcl
sbb
mov
stos
jmp
jle
hlt
or
sub
cltd
repz
call
cli
push
xor
mov
shrl
rcrb
pop
sub
ficoml
pop
adc
or
lahf
mov
in
cld
push
sub
mov
scas
fildl
dec
dec
push
mov
fucomip
into
test
jge
mov
pop
loopne
mov
jno
xchg
icebp
pop
notb
sbb
es
aad
adc
push
add
lret
or
loope
cmp
fcmovnb
mov
pop
loope
or
jno
xchg
stos
fmul
lods
xor
jp
xchg
decb
mov
lahf
dec
stos
repnz
cld
xchg
and
sub
mov
outsb
push
dec
idiv
stc
dec
pop
scas
push
sub
cmc
pop
cmpsl
loopne
hlt
jge
sub
nop
mov
sub
and
xchg
scas
popf
rcll
or
stos
mov
cltd
adc
mov
loope
xor
aas
sbbl
inc
popa
shlb
decb
mov
ret
ret
fwait
das
cs
inc
fcmovne
cmp
andl
push
leave
sbb
xor
insl
lock
push
sarb
in
fnstcw
and
push
sbb
cmp
push
push
jge
push
or
es
pop
jbe
aad
pop
mov
sub
fcoms
fs
pop
mov
xchg
cltd
negb
add
aaa
mov
push
addl
out
unpckhps
inc
inc
jnp
mov
dec
push
push
cmp
push
into
cltd
aas
jecxz
popf
xor
pop
xor
arpl
wrmsr
mov
add
and
std
mov
sub
test
dec
inc
sbb
addr16
push
add
pop
or
dec
lods
or
push
sbb
icebp
sbb
xchg
mov
adc
bnd
or
cmpsl
push
inc
jb
mov
inc
aas
sbb
test
jmp
repnz
cmp
inc
repnz
or
push
mov
sbb
cmp
xchg
mov
add
mov
xchg
push
xchg
pop
adc
roll
inc
cmp
jmp
dec
clc
repz
loopne
mov
mov
xchg
in
rol
in
repnz
fcmovnbe
or
test
mov
or
cmp
and
arpl
les
cmp
in
cmp
cmp
jl
jmp
push
sbb
popf
pop
pushf
add
nop
fldt
cli
cld
mov
lock
jmp
insb
push
and
jns
inc
inc
mov
mov
enter
mov
icebp
rcll
jl
or
mov
or
call
les
out
inc
stos
cwtl
push
jp
jp
sbb
pop
shrl
cwtl
outsb
repz
jnp
xchg
mov
lret
and
or
pop
stos
ficompl
mov
lock
das
xchg
imul
cmc
cs
dec
lea
adc
xchg
clc
shl
add
jbe
sar
dec
loope
ja
or
scas
mov
jle
lcall
mov
clc
xorl
or
push
fistpl
movsb
mov
ret
mov
ret
fwait
mov
dec
jge
mov
loopne
sub
lcall
daa
loopne
gs
out
cs
test
mov
push
repz
add
imul
jecxz
mov
xor
fs
aaa
jbe
out
pushf
call
inc
out
mov
insl
pop
sahf
insb
pop
or
test
in
mov
jmp
movsb
negb
jl
les
loop
pop
xor
sbb
nop
shlb
cmp
rclb
enter
cld
mov
shrl
jnp
mov
xchg
test
xor
push
cmpsl
es
jae
lret
lock
std
xor
jp
hlt
and
sbb
jmp
xor
inc
cli
or
in
ret
xor
test
int3
scas
mov
xchg
repz
push
sub
push
jne
and
iret
adc
xor
mov
push
inc
ds
adc
pop
xchg
repnz
cmp
int3
in
jg
xor
jne
sub
add
outsb
inc
adc
jns
push
adc
fwait
mov
inc
adc
sub
lret
loopne
stos
in
dec
imul
stc
ja
scas
cmp
xchg
xchg
fs
sub
pusha
jno
mov
jb
push
add
stos
fsub
push
out
js
adcb
push
mov
pusha
lods
mov
inc
push
ret
xor
add
dec
test
pop
mov
dec
jmp
sarl
pop
mov
shrd
mov
js
sbb
fwait
dec
popf
inc
pop
daa
adc
gs
ja
ss
push
nop
dec
sub
cmpsl
das
ret
add
push
sbb
vzeroupper
push
adc
mov
jns
outsb
pop
dec
rcrl
xchg
mov
dec
cmp
dec
gs
int3
push
adc
in
stc
lea
repz
lods
jge
inc
inc
xchg
pushf
std
aad
pop
add
sub
ret
data16
dec
xchg
xchg
call
mov
pop
xchg
test
int3
mov
jb
in
adc
mov
sbb
sbb
dec
adc
ret
fidivrl
daa
std
xchg
cmp
sahf
and
cmp
mov
cmp
loope
mov
inc
in
cs
lcall
mov
mov
fistl
cmp
insl
jo
leave
aam
xor
and
stc
sbb
add
hlt
or
dec
dec
push
add
out
xor
out
jl
cltd
out
roll
loopne
mov
mov
xlat
popa
sub
sbb
addl
and
mov
jnp
pushf
faddl
out
or
loopne
xchg
mov
adc
cmpsb
cmp
repnz
mov
out
xchg
jle
mov
jmp
fstp
jmp
fisubrs
pop
fs
into
cmc
sbb
sbb
add
sub
fs
xchg
roll
scas
add
gs
ja
fwait
xchg
lods
addr16
push
add
data16
fcomps
ja
or
cmc
jno
pop
jp
push
in
rolb
cltd
cs
daa
call
ljmp
iret
mov
xor
xchg
pop
cmp
add
sub
sub
les
lea
pop
adc
push
sub
cld
popa
sub
inc
xlat
ds
xchg
orl
and
mov
shrl
sbb
addr16
in
outsl
popa
daa
xor
pop
mov
ret
jb
and
rclb
sti
out
cmp
adc
cmpsl
lods
jne
sub
fs
mov
movsb
jmp
scas
xchg
lret
add
sbb
dec
fldl
adc
mov
sub
adc
js,pn
mov
mov
iret
and
mov
mov
aad
insl
pushf
add
or
fwait
call
in
fdivp
xchg
mov
cmp
or
or
sub
movsl
lret
std
int3
movaps
xor
lcall
addr16
ficomps
ss
mov
cmp
inc
outsl
sar
fs
cli
daa
sub
iret
pop
mov
inc
fcompl
or
rorb
and
pop
je
inc
adc
fimull
and
jle
fsubrl
gs
cmp
or
sub
test
and
test
enter
fst
mov
in
xor
push
bound
mov
outsl
push
jmp
stos
dec
rcrb
cs
jnp
out
inc
fldcw
mov
or
stc
clc
cmpsl
cmpsb
mov
mov
xchg
xor
cmc
test
stos
testb
aas
int
lahf
in
fistps
adc
hlt
pop
das
pusha
aam
jecxz
or
and
mov
push
shrb
xor
push
ds
stos
or
and
mov
std
movsb
adc
add
cli
add
sbb
inc
mov
lret
xlat
xor
add
je
addr16
sti
clc
in
in
mov
in
loopne
imul
int3
add
filds
push
bound
inc
inc
das
aad
cld
pop
cmc
push
dec
xchg
scas
ljmp
dec
push
push
xchg
or
outsb
or
or
mov
jo
loope
stos
cmp
mov
sbbb
xchg
sbb
out
and
inc
outsl
adc
inc
or
fsts
add
push
adc
test
ljmp
xor
imul
aas
lea
push
adc
imul
push
or
aas
lods
cmp
xchg
loope
xor
clc
arpl
xor
repz
hlt
push
pop
cmp
xlat
inc
ficoms
adc
lret
lret
cmp
stos
lea
clc
lock
adc
aaa
inc
sbb
inc
shll
ljmp
pop
mov
dec
inc
jno
in
jle
in
cmp
cmpsl
dec
push
cwtl
in
lahf
inc
add
ljmp
inc
mul
pop
mov
pop
in
and
inc
icebp
pop
add
out
fwait
das
pop
repnz
inc
cmp
sub
ja
sbb
inc
popa
xor
jns
xor
pop
sbb
addr16
testb
sbbb
mov
icebp
rolb
icebp
adcl
mov
sti
pop
or
imul
push
sbb
stos
mov
jno
cmp
sub
xchg
in
loop
xor
mov
dec
popf
js
dec
push
lods
test
in
nop
push
lcall
mov
inc
dec
dec
rcr
call
out
outsl
push
push
or
or
in
inc
add
or
inc
outsb
mov
jp
mov
mov
cmp
cmp
cmp
mov
push
imul
pusha
stc
mov
inc
xchg
or
test
stc
out
xchg
adc
loop
enter
cs
arpl
test
jle
dec
jbe
je
adc
outsl
sti
fwait
jmp
xor
inc
inc
jmp
mov
mov
notb
push
push
mov
in
dec
and
pop
stos
ljmp
xor
iret
hlt
sub
ja
fdiv
xor
dec
imul
xchg
mov
cmp
icebp
adc
mov
gs
cmc
and
sahf
stos
mov
inc
cld
xchg
pop
push
pop
cmp
and
sub
aas
out
push
scas
inc
pushf
add
xchg
fidivrs
pop
xor
mov
jne
shr
test
nop
dec
sub
adc
inc
mov
xor
outsb
cmc
mov
in
inc
das
inc
insb
mov
xor
testl
sahf
xchg
and
adc
insl
je
mov
imul
mov
jp
test
push
inc
sub
jle
cmc
rclb
jl
push
dec
in
mov
test
xor
nop
jno
adc
loop
or
mov
test
cmpsl
mov
mov
mov
mov
mov
in
mov
mov
pop
add
cwtl
int
test
mov
push
adc
les
mov
add
and
aas
push
test
dec
insl
dec
inc
or
add
xchg
push
jle
in
sahf
inc
cmp
ret
aad
mov
mov
jo
inc
jge
pop
cmpl
xchg
aaa
jo
add
or
xchg
add
mov
mov
in
loope
rclb
mov
repz
pop
pop
shl
ljmp
push
mov
jne
cmp
movsb
ret
sbb
dec
in
out
jmp
sub
insb
xor
sbb
lock
jns
jo
cmp
pop
mov
test
jnp
test
jno
xchg
jbe
enter
hlt
xchg
push
enter
adc
addr16
adc
outsl
jbe
mov
loope
cli
jg
outsb
jbe
add
notl
rcll
mov
ret
pop
sub
cmp
clc
popa
out
xlat
lret
xchg
cmp
nop
sub
adc
pop
push
ja
and
imul
mov
out
push
arpl
push
cli
in
push
adc
push
mov
mov
out
xchg
ret
jmp
or
inc
pop
or
call
and
inc
and
hlt
insb
jle
push
imul
lods
inc
dec
lcall
and
repnz
in
xor
outsb
incw
push
dec
jno
mov
sahf
pop
daa
cs
mov
adc
es
shlb
inc
or
sub
pop
add
popa
adc
inc
cmc
cmp
insl
add
sahf
int
mov
or
xor
jle
fdivr
idivl
je
out
shlb
les
push
pop
xchg
inc
xchg
shr
cmpl
std
and
pop
pop
xor
out
xchg
cmpb
in
dec
lea
sbb
mov
insb
pop
jne
dec
mov
test
jno
and
mov
es
inc
cld
or
add
ret
cmp
lods
mov
pop
or
inc
xchg
das
imul
sub
push
and
adc
lock
cmc
test
adc
adcb
mov
cmpsb
dec
push
fbstp
jmp
bound
nop
mov
pop
adc
jp
je
sub
adc
mulb
push
or
lock
sti
out
or
cmp
inc
add
jg
lock
mov
mov
mov
mov
aad
add
aam
lock
push
movsl
mov
lods
and
fdivrl
mov
pop
xor
jns
fadds
fsubrs
adc
test
test
and
test
dec
jle
mov
cld
and
adc
fildll
repz
xchg
sahf
aad
push
mov
iret
add
inc
pop
lret
or
sub
pop
aam
and
push
lock
push
lea
jl
adc
cmc
aaa
and
dec
jbe
and
jo
fstps
fdivl
mov
js
fsubrs
jmp
add
mov
push
xor
cmp
xchg
fimull
iret
jae
cs
clc
and
sub
mov
dec
fstl
ljmp
repz
loop
xchg
jecxz
or
inc
xchg
addl
in
lods
stc
and
mov
push
dec
jnp
dec
in
dec
pop
shrb
mov
leave
lock
rol
adc
sbb
sub
call
inc
jecxz
fmul
push
dec
test
cmc
push
adc
xor
fs
mov
add
mov
dec
pop
repz
add
mov
xchg
mov
inc
mov
rcrb
ljmp
hlt
hlt
xchg
sub
pusha
ror
push
xor
pop
add
jmp
loope
dec
sbb
notb
fidivrs
mov
dec
xor
xor
cmc
sbb
sub
ja
les
cmpsl
repz
pusha
ja
fstpt
mov
dec
ret
sti
dec
mov
movsb
movsb
sahf
imul
pushf
out
sub
andl
ds
lds
jg
mov
xchg
shll
pop
rorl
xchg
mov
add
fistl
push
mov
ret
mov
inc
xchg
jmp
inc
pop
cmp
or
dec
int3
stos
sub
sbb
xchg
push
or
or
orl
lds
jne
pop
mov
dec
add
sub
loopne
push
adc
negb
pop
std
aad
mov
adc
fistpll
pop
mov
enter
mov
pop
inc
jmp
jbe
pop
ror
jg
push
je
pop
sub
test
out
dec
push
repz
xor
inc
add
rcll
xchg
mov
sub
sub
push
and
jl
sbb
sti
aam
sbb
and
call
add
adc
push
sbb
mov
popf
jge
pop
and
pop
frstpm(287
pop
inc
scas
pop
andl
xlat
rcrb
xchg
cltd
ds
insb
ljmp
imul
int3
pop
scas
in
ja
scas
iret
adcl
mov
cmp
jno
or
jno
push
movsl
outsl
loop
out
in
mov
xchg
jb
insl
iret
push
sti
lds
mov
pushf
and
mov
mov
xor
icebp
push
xchg
call
mov
cmc
in
push
inc
ret
cmpsb
adc
idivb
mov
push
jae
rcrl
enter
call
cltd
pop
push
push
pop
out
nop
sub
jle
stos
je
pop
mov
ret
or
call
lahf
inc
cli
in
push
ret
jg
and
loop
mov
pop
in
push
fbld
das
mov
xorb
clc
adc
stos
sbb
push
ret
test
jl
xchg
pop
mov
mov
stos
xchg
jge
jns
cltd
push
and
aaa
cmpsl
sbb
jp
inc
sbb
xchg
sbb
repz
ret
pushf
cmp
imul
mov
mov
sub
std
arpl
or
jnp
mov
jb
lods
hlt
adc
insb
inc
sarl
cmp
and
je
inc
es
fsubl
dec
ja
add
inc
pop
dec
cwtl
test
pop
mov
sub
and
push
adc
fcoml
xor
cs
lahf
sbb
clc
out
push
sbb
jnp
cs
in
mov
mov
fildl
and
sbbb
xlat
add
in
repnz
push
dec
cmpsl
scas
jl
or
movsl
push
pop
vfmsub231ss
mov
adc
push
dec
inc
mov
sbb
lods
add
scas
dec
iret
loopne
das
js
adc
mov
jbe
ljmp
iret
ficoms
addr16
sbbb
in
and
mov
jge
ds
push
or
rorb
loopne
mov
push
popa
movsl
inc
out
aam
mov
popf
xchg
fistpl
jp
add
rcrl
lods
mov
popf
sbb
mov
scas
or
aaa
mov
mov
fwait
and
ret
in
jae
mov
int
imul
mov
cli
xchg
add
dec
pop
insb
inc
add
cmp
push
in
xchg
add
mov
out
sub
lret
mov
int
sub
pop
scas
or
popa
or
inc
jg
rcr
ret
pop
sub
ret
mov
call
shll
pop
add
cmpsl
aaa
pop
mov
add
ret
data16
sti
loope
notl
imul
fadd
out
sbb
or
test
lret
sbb
adc
fnstsw
xlat
cmc
cmp
add
add
lds
dec
mov
les
or
push
dec
mov
adc
sar
negl
fstps
sbb
test
xor
call
xor
push
pop
lahf
imul
loopne
mov
jle
data16
cmp
fcomp
push
and
or
add
sub
xchg
ret
cmpsl
add
add
push
mov
dec
in
push
push
lret
sbbl
and
add
imul
xor
cmp
push
mov
mov
pop
pop
test
pop
sub
and
add
pop
pop
cmp
das
push
xor
arpl
jne
enter
adc
jmp
fldt
cmp
rorb
fnstenv
hlt
clc
mov
sbb
test
cmp
jg
push
int3
mov
aas
das
pavgb
jge
adc
fcomp
pop
add
xor
into
push
test
in
add
aad
sar
pop
xor
ret
inc
push
pop
notb
rclb
inc
pop
jbe
mov
adc
adcb
insl
imul
inc
xchg
cs
lds
cs
gs
addr16
inc
sub
nop
pop
ss
dec
mov
sub
cmp
ds
repz
xor
imul
sub
daa
and
je
mov
xchg
push
jns
xor
adc
mov
mov
inc
pop
or
xor
mov
cmp
push
shll
sbb
fists
pop
popa
das
xorl
ja
xor
ret
enter
or
jae
sbb
and
push
push
cs
jb
pop
jg
in
stos
xor
cmp
sub
push
cmpsb
jbe
mov
jecxz
push
add
sbb
hlt
sbb
pop
push
subl
xchg
pushf
ja
or
mov
ret
nop
push
xor
repz
mov
sbb
mov
add
out
jne
popl
mov
adc
add
cmp
sbb
adcb
cmp
std
xor
inc
adc
or
data16
push
xlat
add
inc
clc
and
sub
sub
push
sbb
xchg
scas
sub
push
std
xlat
jl
imul
adc
or
mov
sar
and
stos
cltd
rcll
lea
dec
test
adc
fwait
xor
stc
dec
mov
iret
test
push
bound
lea
cli
dec
sti
cmp
sub
lock
ret
aad
fisubrl
fsubrl
mov
dec
adc
sub
int
inc
sub
or
dec
pop
int
jle
shrl
push
cmp
sbb
inc
xor
or
loopne
test
in
cmp
adc
cld
sub
enter
or
push
pop
lds
mov
jbe
pop
andb
movsl
xor
mov
pop
mov
leave
mov
or
shlb
or
xchg
lea
loope
popf
jg
fidivl
cmc
pop
or
adc
add
xlat
sahf
push
scas
mov
jns
cmpsl
mov
ret
cmpsb
dec
out
rol
push
inc
rcrb
mov
pop
push
pop
cmp
xor
lahf
mov
jg
mov
repz
ds
sbb
add
icebp
mov
jb
lock
lods
push
jp
test
inc
mov
inc
pop
insl
push
mov
jl
sub
mov
lahf
pushf
mov
add
jae
push
push
fsts
lret
jge
add
xor
cld
lcall
xor
add
pop
mov
xor
mov
push
gs
pop
jmp
int3
xchg
sub
aad
cwtl
xchg
mov
adc
data16
mov
cmp
pop
pop
dec
hlt
mov
mov
dec
adc
sbb
cli
aas
cmp
outsl
xchg
jecxz
add
xchg
ss
into
cmpsb
pop
push
dec
bound
imul
cltd
and
xor
bound
fldl
mull
or
add
jno
jno
mov
pop
cltd
popf
jmp
test
sub
stos
in
mov
and
mov
xchg
out
shll
push
gs
mov
push
adc
push
dec
outsb
push
aad
roll
loope
jle
dec
push
or
lahf
mov
cmp
cwtl
fistps
fcoml
cmp
adc
xchg
popa
pop
movb
sub
in
imul
imul
xor
ljmp
sarl
mov
and
fidivl
fadd
pop
cmp
leave
rol
fildll
xor
ss
out
inc
mov
cmp
jle
pusha
lahf
sub
out
push
dec
std
jb
or
mov
shrl
xor
pop
mov
ja
cmp
jb
mov
scas
and
add
lret
sbb
into
sarb
into
pop
jb
pop
in
mov
jmp
xchg
mov
inc
shll
mov
push
test
cmp
xchg
cmp
jae
shlb
add
je
insb
sbb
xor
ret
xor
mov
cmp
scas
fdivs
int3
addl
pushf
hlt
mov
inc
div
inc
mov
addb
mov
in
ss
in
or
lods
lret
aad
mov
mov
jae
jp
js
sbb
push
sbb
rcrl
leave
sub
xor
ljmp
sub
call
pop
loopne
mov
fadds
sbb
cmp
or
pushf
pop
xchg
jb
jmp
movsb
lods
adc
sub
mov
jnp
mov
imul
fwait
add
pop
popa
stos
std
daa
inc
jno
lcall
ljmp
push
xchg
ds
jmp
and
push
loopne
lods
daa
jbe
addb
arpl
roll
in
test
ret
loopne
or
es
cs
add
adc
inc
inc
subl
adc
push
sbb
out
fcmovne
ds
jb
inc
popa
sbb
cmp
mov
xor
aaa
fwait
cld
daa
in
pop
mov
in
data16
fadd
jno
cld
mov
sbb
imul
sbb
test
or
leave
jne
sub
lods
pop
les
cmp
rcrl
jmp
mov
lret
jmp
mov
leave
enter
outsb
fstpt
mov
aaa
dec
add
test
adc
sbb
mov
jb
mov
adc
enter
mov
sbb
loope
and
pop
xchg
push
jecxz
bound
es
sbb
push
mov
repz
and
mov
pop
shlb
cld
dec
inc
sbb
adc
adc
leave
mov
test
inc
and
mov
mov
sti
fisttps
daa
jle
test
rorl
addr16
push
push
fstpl
sbb
jns
lea
adc
or
jbe
pop
jo
add
out
xchg
mov
cli
ffreep
dec
sub
push
cld
imul
jns
shl
test
jo
mov
test
jg
mov
gs
hlt
xchg
out
push
lret
into
mov
cmp
fucomp
in
ds
add
shlb
mov
loope
jmp
jno
add
adc
cli
insl
fsubs
or
adc
mov
push
push
cltd
jecxz
mov
call
sahf
push
pop
frstor
nop
add
nop
push
shrl
popf
ret
mov
int3
cmpsl
lds
shlb
gs
mov
push
pop
and
std
pusha
in
adc
subb
xchg
int3
jge
stos
fmuls
xchg
enter
cmc
mov
aaa
in
lret
dec
stos
subb
aas
imul
mov
jne
ret
xor
pop
sti
xchg
rcrb
iret
test
cld
scas
jecxz
loope
aaa
popa
ret
stos
jle
adc
lock
push
fxtract
pop
cmp
inc
dec
scas
sbb
jb
pusha
loop
aam
fistpll
loop
ror
scas
dec
test
mov
sahf
jne
pop
mov
test
pop
cmpsl
xlat
popa
lea
mov
mov
mov
daa
repz
arpl
mov
lods
ds
dec
je
cltd
cwtl
fisubrs
stos
pop
dec
out
pop
push
cmp
add
adc
in
push
inc
lcall
data16
cmp
sarb
fs
add
orb
inc
enter
jo
test
fisttpll
xor
insl
mov
add
icebp
jg
out
addr16
sub
push
lret
fisttpll
inc
std
add
mov
xor
push
xor
ret
fsts
inc
scas
xchg
out
sbb
inc
push
insb
inc
lods
mov
cmpsb
xchg
inc
mov
stos
adc
sub
pop
lret
lea
pop
ret
push
nop
mov
nop
jae
sub
stos
js
xchg
mov
and
sub
xchg
sbb
sub
inc
adc
and
or
push
add
xor
sbb
or
xchg
dec
loope
adc
std
mov
jns
je
inc
and
dec
fcompl
ret
xor
aad
push
cmp
lahf
popf
and
add
adc
lret
sbb
ja
daa
jae
fsubrp
jmp
inc
out
in
jae
ds
mov
mov
cmpsb
xor
fdivs
dec
and
push
inc
inc
pop
push
push
sub
inc
lods
sub
int
jmp
divl
xor
ficoml
or
loop
mov
sub
insb
pushf
sahf
not
push
inc
jae
add
jmp
jnp
mov
pop
push
jle
stos
das
mov
jne
adc
mov
push
cmp
out
fwait
xlat
cmc
inc
ret
xor
in
mov
mov
mov
add
fsubp
mov
add
sub
jns
in
cmp
mov
sbb
das
lock
lret
lahf
loopne
addr16
mov
dec
call
jecxz
sbb
dec
test
pop
push
fnstcw
mov
adc
and
xor
mov
int3
fmull
testb
in
inc
das
xor
dec
or
rcr
cwtl
popf
loope
leave
arpl
fistl
jbe
cmp
pop
js
mov
lods
pop
jle
lret
mov
shr
add
jle
sahf
imul
dec
stc
dec
pop
mov
call
popf
scas
adc
fdivrs
pusha
scas
mov
adc
mov
or
testb
nop
fsubp
add
jbe
add
mov
sbb
test
push
call
out
jo
test
clc
xor
imul
adc
call
push
jae
lret
lea
test
fiaddl
cwtl
push
movsb
add
and
jl
mov
xchg
mov
icebp
mov
jecxz
movsb
sahf
pop
stos
outsl
push
jns
test
aaa
mov
rcll
xor
insl
das
cmp
jge
lock
push
test
mov
mov
movsl
popf
into
sbb
mov
add
xor
fdivp
and
stos
fstpt
rolb
sub
jg
nop
sahf
xor
pop
adc
ds
leave
scas
mov
sahf
sbb
pop
ret
xor
in
push
mov
sbb
fisttps
mov
dec
in
mov
aam
mov
or
push
xchg
subb
out
repnz
pop
fs
adc
jo
mov
inc
jecxz
lds
sbb
sahf
xor
jecxz
or
jns
push
pop
mov
pop
pop
pop
cmpb
notb
cwtl
mov
sub
nop
mov
inc
jp
xchg
dec
leave
pop
mov
cld
xor
lods
inc
shrb
dec
cs
ret
and
rcrl
and
sbb
fldt
mov
cmp
mov
inc
test
imul
cli
xchg
sbb
in
pop
aaa
stos
mov
push
outsl
xlat
and
inc
div
out
cmp
test
push
cld
test
push
push
incb
aas
inc
insl
cmp
sub
int
push
fwait
pop
daa
cmc
aad
shll
popa
daa
pop
test
inc
lods
mov
dec
test
push
push
adc
pushf
inc
incl
dec
pop
lcall
cmp
and
push
lods
cmp
sbb
imul
fists
mov
gs
or
mov
push
pop
insb
sub
push
hlt
gs
jae
mov
or
jbe
pop
ja
adc
popf
out
int
out
or
cmp
pusha
and
mov
ja
mov
mov
outsl
push
mov
mov
and
xchg
lds
dec
push
add
mov
lcall
push
bound
mov
pop
and
out
out
add
push
shrl
pop
hlt
fs
and
fldenv
pop
dec
out
inc
inc
pop
and
es
mov
int
les
mov
xchg
jp
sub
movsl
sbb
rolb
cld
add
sub
movsb
cmp
cld
jl
outsl
loopne
fstps
fldl
ret
cmpb
in
xor
imul
es
or
jbe
jo
adc
xchg
ficompl
mov
and
lret
mov
lahf
jno
cmp
iret
orl
push
sbb
divb
ja
movsb
fs
ss
pop
xchg
lahf
mov
fildl
jae
jle
dec
mov
arpl
icebp
pop
test
aad
ret
rcrb
push
ficoml
cmp
fs
cmc
push
add
imul
push
or
mov
xor
mov
in
push
je
vsubpd
ret
mov
dec
or
mov
fldl
test
ja
inc
int3
add
js
dec
mov
pusha
in
cmp
pop
arpl
mov
fldcw
adc
xchg
lock
popl
idivl
cmp
and
mov
sub
xlat
push
cmp
jp
and
js
xorl
std
clc
decb
loope
xchg
pop
xor
jmp
cmp
data16
cmp
push
sbb
dec
add
mov
and
jo
sarl
or
pusha
repnz
mov
mov
jo
sti
movmskps
out
lock
mov
jg
jo
push
fwait
add
mov
daa
add
inc
stos
mov
out
push
mov
fiadds
loopne
mov
int3
inc
push
push
inc
inc
jp
and
mov
push
mov
movsl
xchg
push
add
sbb
insl
scas
pop
mov
ds
cmpsb
mov
es
scas
stos
icebp
sub
pop
ret
mov
push
orb
jne
lods
jle
jecxz
cmpsl
jbe
cld
adc
lds
xlat
in
loopne
mov
and
dec
popa
jmp
stc
nop
mov
fdivr
jbe,pn
cmpsl
pop
jae
aaa
pusha
ret
push
xor
int
mov
int3
inc
xchg
into
or
je
push
aam
fcmovnu
pop
es
aaa
movsl
mov
call
jp
sti
sbb
pusha
cmpsl
mov
cmpsb
dec
jmp
notl
jmp
add
gs
icebp
inc
scas
add
adc
jle
imulb
inc
cmc
jp
sub
cmp
out
sbbl
pop
pminub
add
pop
jecxz
inc
hlt
hlt
jmp
cmpl
xchg
mov
jb
loop
aas
inc
push
push
xor
cmp
pop
test
sub
sub
inc
push
cmp
jmp
pushf
mov
cld
pop
les
shl
mov
out
pop
jp
shll
inc
or
mov
pop
add
stc
mov
scas
orl
test
sti
in
mov
push
popf
daa
sub
clc
jnp,pt
jb
pop
cmpsb
das
xchg
sub
mov
inc
test
cmp
addr16
int
shll
pusha
push
jp
dec
fildll
insb
xlat
adc
jle
aam
push
outsb
nop
insb
mov
cmpsb
insb
mov
adc
or
or
int
stos
clc
sub
ret
clc
cmc
cmpb
aas
mov
mov
paddsw
xchg
mov
xorb
iret
jl
enter
xlat
imul
ret
out
jmp
ljmp
stos
jmp
or
inc
shlb
push
ret
faddp
addr16
pop
push
push
out
std
mov
std
pushf
movsl
bnd
jae
mov
sub
or
fmul
mov
in
cmp
in
cmp
loop
xchg
sub
out
push
sbb
shlb
jmp
addr16
cwtl
dec
sbb
mov
repnz
sbb
dec
dec
mov
in
push
pop
out
sub
ret
mov
stos
push
inc
testb
stc
out
jecxz
pop
bound
cmp
pusha
xchg
push
or
pushf
in
subl
pusha
jns
mov
push
out
jmp
sub
iret
mov
test
popa
push
push
sub
add
or
mov
call
and
addr16
dec
inc
daa
add
js
ja
jne
jnp
inc
pusha
lcall
xor
rcll
sti
shl
pop
add
pop
in
cmpsb
mov
push
sarb
scas
cmp
fistl
cmp
addl
xchg
xor
jmp
js
mov
push
rcrb
xchg
sbbl
xor
mov
pop
mov
stos
push
mov
xchg
pop
push
sbb
stc
out
adc
aas
lcall
lods
pop
lret
push
in
or
pop
fdivs
xlat
inc
dec
push
repz
sbb
in
inc
std
and
and
or
pushf
lcall
leave
iret
jmp
popl
jg
shl
lea
ret
mov
dec
mov
sti
inc
rcrl
fildll
fbstp
pop
xchg
mov
bound
mov
fsts
xchg
ret
pop
dec
pop
sub
mov
lea
in
pop
loopne
add
fs
pop
push
mov
inc
bnd
hlt
in
mov
xchg
push
mov
std
in
xor
xchg
xlat
or
xor
adc
xor
aaa
enter
pushf
or
fiaddl
xchg
mov
and
or
stos
into
sub
test
add
lock
pop
aas
xor
push
out
and
and
imul
xchg
cwtl
push
jae
xchg
out
or
fwait
std
xlat
jae
pushf
cmovp
mov
popf
cmp
imul
push
dec
scas
pop
xchg
mov
adc
faddl
push
addr16
mov
jg
cltd
scas
push
mov
push
pop
add
jo
lahf
sub
out
xchg
data16
jno
cmp
bound
dec
mov
mov
es
push
imul
xor
pusha
lcall
dec
and
fldenv
push
push
fstpt
dec
or
loopne
in
fdivl
mov
in
mov
das
jmp
cmpsl
int3
aaa
lock
mov
sahf
imul
pop
mov
aaa
mov
mov
data16
mov
adc
outsb
aam
in
dec
jbe
shlb
jle
lods
daa
push
mov
xor
xchg
dec
loop
mov
adc
or
mov
push
jns
outsb
push
js
cmp
stos
fistps
xchg
cli
imul
sub
adc
pop
mov
int
mov
cwtl
adc
pop
punpckhdq
push
mov
aaa
aad
mov
pusha
xchg
cmp
jns
loopne
pop
lcall
sbb
div
pop
dec
and
sub
sbb
data16
icebp
sbb
sbb
xchg
add
inc
fnstcw
pop
mov
das
mov
inc
lds
mov
enter
popf
adc
push
adc
ja
jecxz
in
rcrb
stos
sub
mov
fiadds
adc
dec
cmpsl
je
cmp
arpl
int3
mov
nop
sti
in
or
jmp
fisubrl
lods
jmp
push
lods
jl
sbb
in
iret
rorb
loope
fcompl
xor
aam
loop
dec
test
dec
mov
push
hlt
adc
cwtl
xor
mov
cmp
stos
xchg
jno
mov
pop
or
xchg
sub
sarl
sub
add
or
jno
shrl
aad
aad
repz
subb
lahf
inc
xchg
xchg
movsl
mov
push
cli
push
jp
imul
mov
jbe
fwait
push
into
nop
pop
fimuls
fndisi(8087
mov
fwait
sarb
xorb
outsl
js
movsb
sbb
dec
push
fisttpl
and
jmp
xchg
mov
adc
xchg
out
or
mov
arpl
adc
addr16
or
int3
ja
js
inc
movsb
das
lea
shr
add
push
jno
sub
ficoms
dec
xchg
fst
mov
ss
or
add
pop
nop
xchg
xchg
push
in
iret
mov
inc
test
movsb
lods
push
lcall
rorl
pop
fsubrs
cli
scas
andb
fdivs
push
sbb
outsb
cmp
cmp
stc
popa
enter
cmp
mov
cmp
outsl
mov
cmp
xchg
mov
dec
insl
pop
in
dec
and
push
fisttps
nop
repnz
shll
jge
popf
aad
icebp
cmpsl
idivl
mov
and
lcall
pop
push
pop
roll
test
mov
jbe
ret
idivb
leave
pop
sub
and
lock
not
mov
cmp
add
arpl
or
xchg
jno
imul
xor
jp
push
push
inc
ret
ljmp
cmp
mov
push
xchg
inc
stos
dec
sub
pop
dec
pmuludq
mov
out
add
stos
pop
xchg
dec
out
lds
aam
scas
test
fsubrs
mov
lea
repz
fwait
jnp
xor
push
mov
jp
hlt
pop
iret
adc
gs
add
mov
dec
leave
xchg
cmpsl
or
add
mov
movsb
xchg
rcl
xchg
outsb
repnz
pop
inc
test
shlb
cmp
cmpxchg
mov
test
or
insb
jecxz
mov
lods
pusha
mov
in
icebp
in
mov
pop
mov
adc
and
sar
das
add
sbb
movsl
in
jb
es
daa
inc
xchg
ds
and
fidivrs
shrl
js
mov
mov
inc
cmp
cmp
test
jns
rorl
cld
adc
fdecstp
dec
mov
call
stos
loop
mov
sahf
xchg
cli
pusha
imul
mov
loopne
dec
jo
rol
jo
jg
inc
push
nop
push
or
xchg
jno
inc
or
sub
call
push
loope
mov
inc
mov
cltd
fiadds
addr16
or
and
hlt
call
cmp
sbb
push
jle
test
cli
dec
js
adc
jle
stos
cwtl
mov
add
cs
daa
inc
in
dec
sbb
cmp
fadd
pop
shlb
sub
shlb
pop
loope
rcr
sub
sub
sahf
xlat
test
mov
adc
fs
je
daa
ljmp
in
adc
add
xor
and
xor
jg
test
cmp
mov
das
repz
push
in
mov
in
mov
inc
imul
lahf
mov
sahf
jnp
pop
movsl
aas
fiaddl
cmp
repnz
stos
push
dec
and
mov
xchg
testl
stos
pushf
out
inc
aas
cmpsb
pop
cmp
cs
push
adc
xchg
sub
jmp
jb
bound
in
and
inc
or
xlat
mov
inc
mov
stc
test
clc
aad
scas
dec
scas
icebp
pop
cli
or
stc
lret
fisubrl
mov
pop
int
push
adc
add
xor
mov
shlb
lds
lea
mov
mov
cmp
add
or
jl
loope
addr16
jb
scas
jb
jecxz
sar
fistpll
outsl
out
popf
into
push
and
dec
xor
fildll
jae
je
push
xor
lahf
xlat
ja
mov
dec
cld
js
std
dec
mov
sub
int3
ds
jmp
popa
push
ja
lahf
lea
xchg
push
int
add
push
dec
xchg
aaa
inc
popa
lods
mov
fdivs
popa
xchg
or
inc
and
jmp
mov
sbb
mov
mov
ret
loopne
fdivl
cltd
icebp
jp
enter
cwtl
cltd
jp
out
xor
mov
mov
loope
popf
loopne
sub
xor
testl
fs
in
icebp
mov
mov
out
das
jp
bound
ja
inc
ret
pop
xor
dec
sub
ret
fiaddl
int
into
cs
xor
push
leave
cmpsb
push
sar
xor
dec
dec
test
call
mov
jae
xchg
push
pop
adc
cmp
lock
insl
repnz
mov
add
lcall
xchg
push
test
popf
daa
cmp
es
fcomp
jge
negl
push
fsub
outsl
dec
mov
xchg
mov
jno
push
loop
jg
add
pop
das
arpl
jne
lea
mov
jmp
shll
or
jo
pop
rcr
js
cltd
clc
fistpll
nop
sti
and
and
in
ss
cmp
xor
xor
dec
leave
xor
in
lods
push
cmp
pushf
pop
stos
sarl
jp
pusha
xchg
insl
ss
xor
jbe
stc
xchg
je
or
outsb
int3
add
std
mov
cmp
fstpt
xor
addr16
jb
xchg
outsl
jge
pop
aaa
int
nop
mov
inc
roll
xor
dec
adc
insl
hlt
jbe
lea
ficoml
adc
cmp
sarl
push
or
jo
pop
and
stos
or
out
push
xchg
xor
or
push
mov
loopne
into
dec
mov
cwtl
sub
nop
xlat
imul
jb
lock
bound
addr16
xor
test
leave
adc
or
or
add
sbb
push
mov
in
xchg
insb
mov
adcl
or
stos
pushl
subl
aas
mov
mov
push
jns
push
cmp
jnp
mov
ss
notl
aas
jnp
sub
jnp
adc
mov
sbb
cwtl
push
dec
aad
int
test
xor
mov
and
inc
sbb
push
or
xor
insl
or
mov
hlt
jne
int
and
pop
dec
pop
pop
rolb
mov
xchg
xlat
push
lcall
and
test
xor
mov
push
jge
test
mov
sub
cmp
mov
jae
sub
mov
jl
adc
ljmp
adc
mov
mov
imul
jg
sub
cmp
jg
scas
fnsave
test
cmp
imul
lods
fstl
fsubrs
jg
add
inc
xor
mov
cmp
mov
mov
setae
jmp
repnz
loop
jnp
cld
mov
lret
call
inc
dec
dec
mov
dec
xlat
pusha
ja
xor
mov
lods
fcoml
fwait
dec
adc
and
in
pop
pop
xor
dec
xchg
lods
aam
mov
adc
mov
sub
sbb
ss
pop
pop
push
adc
rorl
pop
pop
pop
movsl
ja
add
dec
cmpsb
cmp
outsb
fcomp
insb
fdivr
movsb
cmc
dec
ss
rclb
loope
sti
sub
sub
dec
adc
inc
gs
cmpsl
lcall
xchg
jle
mov
cmp
pop
sti
and
nop
pop
inc
lock
push
dec
cmp
jge
push
je
pop
scas
jno
or
pop
imul
push
repz
loope
rcrb
mov
jg
ficomps
mov
sub
dec
lods
cmp
fldl
lahf
push
outsl
push
xor
pop
jbe
or
mov
sub
pop
ljmp
ret
mov
nop
mov
add
arpl
sub
dec
adc
dec
int3
inc
jmp
popa
sbb
fidivrs
inc
cmp
test
xchg
lock
out
and
mov
movsb
jnp
je
sarl
xor
ja
sarl
pop
cmp
sub
fistpll
out
xor
repz
or
pop
aas
xchg
pop
push
outsl
inc
sub
sahf
int
clc
test
or
mov
aam
push
ss
movsl
das
mov
mov
push
dec
inc
idiv
lret
lahf
jns
loope
inc
pop
xor
mov
shr
jbe
mov
push
divb
and
mov
and
shr
mov
ret
lds
jae
pop
sub
ljmp
push
pop
stos
in
hlt
addr16
jbe
imul
lock
in
insl
xlat
hlt
test
mov
push
add
mov
in
xchg
out
dec
mov
dec
jge
fisubrs
cmp
add
cmp
enter
lret
cmp
dec
ljmp
cmpsb
ja
mov
push
inc
icebp
sbb
mov
inc
push
adc
sarb
xchg
out
sbb
loop
inc
mov
or
aas
loope
inc
aaa
icebp
insb
add
or
scas
xorb
shl
and
jae
inc
jnp
ja
cmp
sub
repz
fdiv
mulb
inc
jb
cmp
insb
inc
sbb
jle
jmp
shl
mov
mov
fistps
xchg
adc
push
js
dec
adc
sti
mov
jecxz
popa
xchg
mov
nopl
sbb
sub
mov
daa
pop
mov
loop
shrl
pop
inc
sti
jecxz
fwait
aas
cmp
inc
gs
pop
sti
xorb
loopne
and
mov
sti
fisubs
pop
loopne
dec
xchg
mov
dec
outsb
dec
sub
cli
xchg
jo
and
lods
fidivrl
test
sub
pop
xchg
rcl
xchg
push
test
add
mov
insl
js
notb
add
or
out
stos
push
pop
lock
xorb
fcomi
dec
pop
leave
add
xor
popa
rclb
add
pop
or
test
je
subl
add
enter
insl
rcll
mov
out
ret
roll
cmpsb
fs
shrl
sahf
lahf
in
inc
sbb
aad
sbb
xor
test
mov
and
dec
mov
out
pop
lock
jbe
jg
jge
add
jmp
cli
add
fsub
subl
icebp
push
xor
icebp
mov
xchg
imul
outsb
test
fstpl
mov
dec
adc
cltd
pushf
mov
lods
xchg
sub
jg
mov
out
mov
inc
test
and
in
push
mov
addr16
out
into
nop
or
es
jecxz
add
lcall
mov
nop
or
movsl
addr16
sub
mov
divl
mov
aad
xlat
push
cmp
mov
jle
ljmp
inc
add
jmp
cmpsl
cmp
out
sbb
mov
fisubs
jge
and
popa
test
inc
lods
xchg
mov
stc
cmp
leave
ss
mov
test
mov
ret
adc
mov
mov
in
loope
notb
cltd
push
mov
or
push
inc
imul
xlat
sbb
lock
cwtl
lahf
cmp
and
mov
lret
hlt
mov
adc
mulb
in
js
cld
imul
or
ljmp
sbb
out
sbb
or
cld
and
xor
sub
iret
mov
cmp
push
mov
pop
aas
inc
inc
ficompl
jo
fadds
adc
cmc
mov
fs
pop
call
js
sbb
xor
jge
repnz
addr16
mov
loope
mov
aam
cmp
lcall
sbb
hlt
xchg
push
and
hlt
mov
mov
nop
call
pop
lods
or
add
insl
cmp
dec
fisttpll
adc
test
fisubs
mov
cmp
hlt
cmp
pop
mov
scas
ficoml
jns
repz
dec
add
push
filds
leave
mov
das
ret
or
insb
dec
sbb
fcmove
push
push
sub
fcmovnb
mov
movsl
enter
aam
ret
inc
clc
push
fimuls
cli
push
ret
fnstcw
pop
stc
test
lods
xchg
popf
outsl
mov
stos
adc
pop
mov
jae
jl
sbb
dec
sbb
push
ret
xlat
inc
dec
dec
adc
sbb
adc
imul
pop
int3
inc
out
or
xchg
mov
pop
adc
lret
add
test
jnp,pt
fucomip
ljmp
sub
and
ds
adcb
in
xchg
push
cmp
or
xor
cwtl
xorl
fs
jno
dec
pop
inc
shll
sbb
out
out
mov
xor
fstps
cmp
dec
jns
out
and
dec
out
movsb
aas
test
rorb
out
push
fwait
rcrb
icebp
mov
jo
or
outsl
js
push
mov
imul
jl
cmp
xor
or
mov
hlt
add
cwtl
int
jbe
insl
and
lock
cmp
jne
out
negb
jmp
mov
push
pop
repnz
mov
xchg
sbb
sub
out
cwtl
stos
push
adc
mov
fs
sahf
sbb
scas
out
shl
jg
in
in
adc
jecxz
scas
outsb
mov
cli
or
xchg
lret
or
std
aam
call
pushf
daa
je
ret
mov
xchg
push
jnp
xchg
stos
jo
xor
inc
arpl
into
dec
scas
push
ret
cld
cmp
fsts
mov
mov
movsb
cmpsl
fadd
cmp
mov
pop
pop
ret
ss
sub
aas
addr16
xlat
dec
push
cmc
lea
stc
xor
push
or
add
popf
insl
nop
inc
adc
sbb
pop
dec
cwtl
adc
lds
std
popa
mov
push
fildl
loope
cmp
aaa
jp
xchg
or
imul
jg
sbb
jns
fisttpl
popf
popa
arpl
pop
in
mov
mov
fists
add
mov
xchg
inc
lret
add
pop
mov
outsb
fisubl
adc
pop
test
sti
mov
cmpsl
inc
cmpsb
mov
inc
xchg
sbb
pop
ja
add
push
movhps
outsl
movsl
adc
xlat
push
lds
pop
fs
and
movsl
mov
enter
cli
cmpsb
fs
je
push
popf
xchg
cmpb
sti
xchg
fistps
aas
rorb
dec
pop
loope
mov
scas
out
fcomps
xor
xor
out
xor
xlat
movsl
pop
pop
inc
and
repnz
mov
fnstcw
push
push
int3
dec
jle
sub
cwtl
in
rdmsr
lret
outsb
mov
cli
stc
xor
pushf
xor
sbb
sti
shrb
and
pop
pusha
into
xchg
inc
pop
fcoml
jle
adc
or
mov
es
fiadds
xlat
xchg
pop
lcall
orl
push
push
loopne
sbb
call
div
pop
jae
mov
dec
mov
les
inc
add
mov
pop
mov
sub
loopne
icebp
mov
fistpl
and
fnstsw
add
xchg
dec
adc
out
jmp
insl
lea
mov
xchg
xor
adcb
add
pushf
js
es
insl
cmc
mov
dec
pusha
mov
andl
and
pop
fstps
or
inc
inc
dec
mov
sbb
add
pop
push
cmc
cmp
xchg
xlat
mov
pop
mov
dec
scas
jno
shrb
jmp
cmp
mov
fidivl
lock
xchg
and
out
icebp
js
and
cmp
lds
out
mov
jmp
enter
repz
rolb
mov
mov
pop
jns
out
scas
leave
mov
subl
mov
push
pop
sbb
jg
push
lock
loopw
lea
jb
sbb
mov
nop
mov
pushl
mov
pop
loopne
call
push
negl
aad
mov
imul
bswap
roll
mov
mov
sbb
mov
add
dec
movsl
sbb
inc
jns
and
sbb
adc
call
cmpsb
popa
and
outsl
jno
jge
and
ja
js
es
hlt
mov
jns
les
popa
adc
push
scas
jno
int3
fs
xor
push
cmpb
jns
inc
adc
fisttpl
cli
lods
xchg
or
nop
dec
pop
out
test
scas
add
inc
movsl
cs
inc
jge
add
mov
cmp
addr16
pop
mov
cmp
cld
cmp
add
lods
xor
add
add
aas
fcompl
shll
js
jge
in
push
pushf
stos
xor
scas
jmp
mov
and
mov
sbb
jo
orb
pop
fcoms
or
adc
cmp
mov
jecxz
jecxz
imul
incl
push
mov
in
and
add
mov
add
xor
inc
lods
jb
mov
push
add
or
scas
repnz
stos
and
daa
imul
xor
add
cmp
setns
sbb
lock
int
clc
xchg
push
and
adc
scas
dec
xchg
xchg
les
pushl
jno
sbb
sbb
sarb
or
movsb
xlat
fsubl
repz
rcl
dec
jae
test
dec
xorl
mov
fwait
xor
ljmp
push
sbb
in
inc
leave
xor
in
int
push
mov
das
fdivp
test
cmp
fldenv
push
lcall
clc
nop
pop
xchg
pop
cs
dec
repz
jecxz
shr
out
mov
testb
adc
fcmovnb
jecxz
ret
push
cbtw
push
pop
or
add
nop
ror
es
cmpsb
push
xchg
xchg
mov
sub
push
inc
or
data16
jg
test
ja
mov
in
fnstenv
sub
popf
inc
mov
dec
mov
dec
shll
pop
ja
or
mov
mov
insb
xchg
aad
adc
insb
pop
push
ret
push
das
das
push
test
jne
js
ss
out
sbb
daa
movsl
pushf
sbb
jnp
xchg
mull
idiv
lcall
scas
repnz
es
mul
jl
fnstcw
push
and
sbb
add
icebp
xchg
xor
push
pushl
jmp
lods
cli
mov
movsl
jg
inc
mov
mov
je
jmp
les
stos
test
ja
mov
mov
lods
or
jns
add
push
aad
sub
imul
sub
insb
loope
je
imul
test
out
jae
mov
popa
dec
test
sub
cwtl
push
adc
dec
out
cmpsb
out
xchg
push
mov
movsl
outsl
cmp
pop
xor
jle
in
mov
cmpsl
lods
ret
jl
push
mov
js
cwtl
xchg
int3
xor
test
sbb
in
push
in
sub
out
pop
dec
mov
movsl
xor
adcb
and
push
sub
call
xchg
sbb
int3
push
mov
or
out
mov
xchg
add
inc
loopne
sarb
pop
jmp
sbb
das
jne
sti
jge
in
jmp
mov
sbb
enter
andb
sub
mov
cmp
shll
sti
mov
mov
fstpt
xchg
mov
subl
pop
mov
jmp
sbb
sub
sbb
mov
xchg
jnp
fidivs
in
add
add
shll
notb
jae
push
test
pop
xor
mov
das
sub
jne
jle
stos
mov
shll
leave
xchg
mov
inc
jns
push
cltd
iret
cli
mov
rcrb
dec
divl
negb
andb
xchg
lret
hlt
and
fstl
dec
sub
jae
mov
sub
push
rcrl
inc
aaa
sbbb
cwtl
fwait
inc
mov
jnp
je
loopne
or
or
sbb
lret
mov
or
adc
sbb
mov
pusha
push
popf
push
cmc
sub
or
xchg
aad
inc
fistl
fcmovnbe
cltd
push
xor
push
add
inc
in
inc
out
mov
sahf
add
lret
cmpsb
add
cmc
rcl
jno
andl
pop
xchg
in
mov
mov
pop
mov
test
mov
ljmp
cmc
mov
lcall
push
pop
add
xchg
in
jl
sub
cwtl
mov
lret
pop
sahf
adc
sbb
jno
arpl
sub
sbb
push
sub
cmpsb
popa
cmpsb
gs
push
cwtl
pop
cltd
out
cmp
mov
stc
and
adc
add
and
pusha
aad
sub
cmc
xor
xchg
insb
sub
mov
das
ja
cwtl
push
jmp
imul
icebp
les
jg
inc
js
cmpsl
inc
sub
add
jns
cmp
xor
ljmp
inc
out
es
jecxz
aad
pop
data16
or
sti
les
jnp
xor
or
xor
adc
sbb
cmpsl
or
inc
rcl
je
rclb
in
or
xor
aaa
xchg
xchg
pop
add
mov
insl
sti
sbb
aad
imul
popa
int3
mov
fstl
cwtl
cld
fstpt
ret
mov
cmpl
sbb
mov
ror
ljmp
test
rorl
cltd
mov
fsubs
lret
mov
xor
or
dec
dec
mov
cmpsb
repz
inc
movb
jbe
sub
in
icebp
insl
jmp
sub
sbb
int3
aad
enter
lods
sub
aas
sbb
lock
or
scas
adc
push
inc
shrb
push
sbb
add
add
pop
push
cs
cmp
cld
sbb
add
mov
sti
stc
jl
dec
push
stos
int
mov
lock
xor
or
es
push
mov
sub
or
pushf
mov
add
jae
jg
dec
popf
insl
inc
ret
pop
loope
inc
jb
xchg
sbb
push
add
loope
aam
insl
push
arpl
inc
jne
inc
imul
mov
xchg
imul
loopne
dec
cmp
jno
or
pop
inc
out
rcll
inc
xchg
jg
xchg
push
dec
jno
aas
xorb
fcomp
not
iret
pop
ljmp
hlt
cmc
inc
sbb
scas
roll
popa
popa
cmp
pop
push
push
cmc
sub
pop
aaa
int
push
jge
inc
movsl
lret
pushf
mov
sbb
push
loop
fsub
adc
jno
push
daa
in
xchg
sbb
int3
lock
sbb
les
mov
inc
ds
xchg
lods
out
push
add
out
pushl
xor
aam
outsl
rcrb
pop
and
xchg
adc
cmc
outsl
mov
cmp
pop
adc
cmp
mov
cmp
inc
xor
test
scas
lret
cmp
imul
pop
in
add
stos
dec
mov
push
and
je
push
es
pop
in
adc
push
out
lret
inc
jbe
push
push
inc
aaa
mov
rol
xor
push
movsl
adc
sbb
cmp
ss
push
xor
inc
test
pop
shrb
mov
pop
sahf
xchg
loopne
cmpsb
mov
push
adc
push
aas
add
cmpl
mov
dec
dec
pop
pop
aaa
loopne
popf
add
pop
popa
jmp
xchg
stc
lds
or
dec
ret
leave
mov
adc
add
jo
outsb
rorb
inc
mov
xor
dec
movsb
and
mov
add
push
pop
dec
repnz
outsl
inc
push
loope
and
outsb
add
mov
test
inc
sub
mov
adc
arpl
dec
cmp
push
insl
ret
mov
in
fucomip
pop
push
ds
scas
lods
dec
jne
movsl
sbb
inc
icebp
pop
in
iret
bound
outsb
cmovs
inc
scas
mov
aas
pop
sub
adc
enter
sub
jno
and
pop
insb
adc
aaa
dec
xor
lcall
shll
repnz
jge
dec
lcall
scas
dec
xchg
or
out
dec
mov
pushf
in
add
jg
xor
sub
xchg
adc
inc
fcompl
mov
sub
mov
xchg
sub
xor
lods
scas
clc
shrb
jae
js
mov
inc
inc
dec
add
xchg
pushf
inc
sti
xchg
lock
daa
xor
ds
clc
sbb
jbe
jo
prefetch
or
iret
ret
inc
int3
inc
cmp
adc
xchg
addr16
bound
or
mov
mov
xor
lods
jg
lods
push
and
fildll
dec
cwtl
pop
in
jbe
add
addl
call
mov
pushf
and
mov
lods
loope
mov
xor
fsubp
movsb
jne
cmc
mov
dec
mov
push
push
stos
mov
stos
adc
mov
push
bound
push
cmpsl
popf
push
test
fdiv
repz
adcl
jmp
cld
mov
sbb
mov
fs
pop
aaa
sub
adc
and
push
push
cmp
cmp
stc
subl
and
inc
mov
cwtl
sbb
and
mov
jecxz
push
loopne
jb
lret
fwait
mov
insl
mov
in
jp
out
imul
call
cmp
pop
cmpsl
and
sbb
loop
fsubl
jne
sbb
call
dec
out
aas
inc
jnp
shrb
inc
dec
cmp
les
daa
xchg
jns
roll
cwtl
cld
data16
pop
das
ficoml
dec
ret
hlt
or
pop
stos
jmp
loopne
fisttpl
cmpsb
jmp
imul
mov
dec
test
std
push
leave
arpl
imul
jbe
loop
enter
mov
xorl
pop
push
adc
leave
jno
lret
xor
mov
adc
cli
push
stc
sbb
mov
lds
data16
and
cli
xchg
add
lahf
xchg
jmp
rol
mov
jl
cmpsl
js
mov
or
je
mov
repz
loopne
roll
and
ja
xchg
pop
int
bound
lods
jb
cmp
xor
rol
enter
movsl
cmp
insl
push
add
pop
add
inc
test
push
cmpb
ljmp
and
cmp
int3
iret
je
pop
pop
mov
orb
ds
jecxz
mov
xor
insl
xorb
mov
rorl
xchg
xchg
cs
sub
dec
lods
mov
rcrb
xchg
xchg
jo
fstpt
sub
xor
inc
mov
rclb
dec
xchg
xchg
sbb
pop
test
iret
jne
inc
jg
ljmp
adc
cld
mov
test
dec
jne
add
push
enter
cmp
inc
dec
in
add
gs
sahf
cmpsl
sar
daa
mov
push
sahf
mov
stos
sub
cmpsb
mov
push
pop
pushf
push
scas
imul
or
adc
jb
arpl
xor
ds
gs
cmp
dec
mov
add
pop
xorl
jmp
mov
mov
push
or
push
sub
xchg
and
sub
dec
fdivrs
rcll
cs
cmp
xor
divl
mov
mov
or
insb
and
ljmp
das
in
cmc
or
das
popf
push
inc
push
cmp
outsl
lods
push
mov
pop
mov
in
mov
call
adc
jo
ds
sbb
cltd
or
iret
jns
fs
mov
loopne
push
dec
dec
jne
inc
mov
cmc
nop
rcll
mov
xchg
dec
or
fwait
and
xchg
mov
jp
mov
pop
int3
dec
sbb
push
cmp
dec
ret
or
and
hlt
dec
ds
or
pop
ret
xchg
fs
daa
cmpsl
sbb
lret
cmp
push
enter
popa
sbb
mov
aas
jbe
cli
or
mov
fildll
add
push
les
cmp
inc
lahf
pop
arpl
mov
call
repnz
mov
inc
out
sub
dec
imul
xor
mov
sbb
jnp
in
dec
in
mov
outsl
out
movsb
push
out
shll
jp
add
out
xchg
fsubr
xchg
out
inc
sbb
arpl
mov
inc
mov
je
dec
inc
jg
inc
in
jp
scas
cmp
je
mov
jg
and
sarl
dec
in
mov
test
lods
adc
mov
xchg
mov
nop
outsl
jns
xor
sub
adc
mov
stos
jbe
fidivrs
dec
flds
out
mov
jge
mov
cs
cwtl
jg
flds
push
dec
inc
arpl
pushf
aaa
push
inc
hlt
inc
add
inc
mov
mov
pop
sbb
inc
jo
add
xchg
pop
nop
and
imul
inc
test
bound
add
repz
shl
insb
pop
adc
test
mov
push
outsb
stc
xchg
fdivs
cmpsl
xor
loop
jno
cld
xor
hlt
xchg
cli
xor
and
mov
ds
rcrb
xor
test
jl
fsubr
sub
adc
mov
mov
jnp
sub
jae
stc
xchg
movsl
lock
mov
cmp
sub
pop
and
xlat
into
xchg
push
cmpb
insl
cmp
fistps
pop
mov
jae
inc
jg
mov
dec
mov
adc
adc
mov
mov
or
push
arpl
sub
inc
xchg
cmp
pusha
mov
fsubr
dec
inc
push
mov
inc
rorb
pop
mov
in
mov
in
pop
dec
or
pop
or
add
std
xchg
mov
sahf
lcall
stos
lret
mov
das
repz
mov
repz
dec
jo
dec
mov
repz
iret
lea
hlt
lahf
fisubs
sub
adc
and
add
adc
cmp
mov
mov
adc
fstps
mov
les
dec
movsl
test
hlt
or
iret
into
sbb
jp
xor
xchg
cmp
push
adc
clc
das
in
ret
dec
iret
jge
fcmove
mov
enter
pop
int3
jae
testb
inc
inc
cmc
mov
cwtl
push
inc
pop
mov
push
mov
leave
xor
inc
pop
jl
or
leave
iret
ss
or
xchg
mov
adc
pop
les
enter
jbe
clc
sbb
and
or
xchg
pop
fcmovnb
repz
popf
rcll
negb
daa
imull
negl
cmp
mov
out
cmc
pop
xchg
dec
mov
mov
test
pop
sbb
push
xchg
jg
add
and
sub
cmp
mov
cmpsb
mov
and
pop
add
push
sbbl
subl
dec
dec
xor
cwtl
xchg
xor
mov
pop
pop
mov
pop
xchg
inc
andb
cmp
lret
aad
mov
jae
in
add
sub
ljmp
fs
aas
pop
and
into
cs
dec
test
fwait
inc
cld
adc
xor
adc
jo
add
xor
and
xor
andl
and
xchg
imul
cmpsl
insl
jmp
imul
shll
push
xor
cld
xchg
push
in
cmpsb
push
dec
test
lods
pop
ja
push
inc
cli
out
inc
test
fs
pop
stos
inc
inc
pop
adc
inc
xchg
cmpsl
jg
arpl
cld
sub
mov
xor
ljmp
push
adc
pop
mov
jnp
sbbb
push
mov
inc
adc
pop
inc
xor
push
jmp
push
mov
mov
cmpsl
cmp
xor
push
mov
xor
int3
popf
adc
insl
aas
jp
cld
sbb
and
rcl
and
scas
push
mov
jae
xchg
xchg
jno
loope
add
lcall
jb
mov
idivl
pusha
xchg
mov
pop
lahf
fldcw
inc
pop
dec
fildll
in
mov
movsl
adc
sbb
mov
ret
pop
movsb
and
mov
xchg
cli
mov
bound
mov
sub
inc
insb
jae
stc
shll
xchg
sub
jae
mov
xor
sub
gs
out
sub
xchg
add
int
stc
mov
xorl
sbb
mov
daa
jbe
xlat
or
jmp
jmp
icebp
and
add
lock
lret
gs
out
xlat
fbstp
cmpsl
sub
sub
cmpsb
adc
test
and
push
ss
pop
repz
mov
and
popf
mov
push
scas
mov
stc
scas
dec
and
hlt
pop
aam
sbb
sub
movsl
and
movsb
mov
adc
mov
sbb
mov
out
lret
mov
xlat
push
fidivrs
pop
pop
es
push
enter
stos
xchg
sub
inc
dec
or
mov
jl
out
cmp
mov
rcr
out
scas
dec
xor
adc
adc
lcall
fwait
icebp
int3
fisttpl
xlat
xchg
mov
or
mov
dec
mov
mov
dec
adc
push
insb
aam
stos
cmp
push
jl
fiadds
imul
adc
xchg
adc
mov
or
fxch
movsb
push
rorl
and
ffreep
inc
push
mov
sbb
gs
and
sub
xchg
xor
data16
mov
lock
mov
add
cltd
adc
jmp
test
jecxz
addr16
aas
daa
mov
and
pop
jo
push
and
addb
loop
adc
gs
xchg
jno
lds
aad
mov
jp
mov
push
hlt
sti
stc
clc
out
dec
mov
mov
and
notl
sub
data16
sbb
les
ret
xchg
aaa
outsb
jmp
in
or
xchg
or
mov
out
js
push
push
out
push
xchg
push
jp
xorb
xor
call
add
mulb
je
fstpl
scas
jle
ret
jge
sbb
shrb
xor
jne
sbb
out
pusha
stc
cmp
mov
into
jo
mov
mov
or
jae
pop
xor
leave
lahf
push
aas
subl
ljmp
sub
int
xor
jnp
inc
xor
inc
outsb
ja
add
adc
jb
or
lock
sbb
aaa
in
mov
sub
sbbl
mov
sbb
cmp
cmc
roll
js
in
dec
xor
sub
sbb
mov
aam
lock
loope
mov
dec
lret
cmp
mov
dec
fdivrs
nop
lods
jmp
add
enter
loop
xor
pop
mov
xchg
ljmp
ret
enter
jmp
and
pushf
fnstsw
pushf
jb
test
fcoms
stos
fcom
mov
pop
inc
popf
mov
xlat
jl
imul
mov
mov
nop
mov
or
rcl
stc
cltd
add
pop
les
out
mov
push
int3
inc
mov
push
push
mov
jmp
lcall
cmp
out
push
testb
stos
mov
sub
inc
push
cld
push
fstps
inc
js
or
movsl
xchg
xchg
and
xchg
add
shll
add
stc
and
push
cmpsl
cmp
xor
movq
xchg
clc
ja
sub
and
xor
cmp
addr16
cmpsb
pop
dec
fwait
out
shl
fisttpll
fcoms
push
mov
xchg
or
mov
icebp
push
cmpsb
or
je
push
lret
in
cmp
pop
mov
mov
jmp
xlat
out
add
fildll
or
dec
add
scas
addr16
pop
cltd
stos
arpl
fistl
mov
sbb
adcl
repz
add
push
gs
out
cmp
pusha
daa
iret
test
test
in
rorl
add
jg
aaa
sbb
push
jbe
clc
push
sbb
nop
inc
loopne
push
inc
dec
or
xor
push
imul
cmp
ss
and
xor
dec
cmp
int3
lcall
mulb
test
ficomps
push
push
test
adc
dec
xchg
mov
xchg
in
and
lret
or
hlt
mov
enter
cmpsb
push
and
test
push
cli
es
notl
or
adc
xorl
xchg
leave
or
dec
popf
out
xor
cwtl
jle
and
mov
ss
add
add
ljmp
leave
imul
insl
addl
aaa
mov
pop
mov
push
rcrb
cmp
xchg
lcall
mov
add
cmc
dec
sub
cmp
ret
lods
mov
ds
jp
int
inc
cmp
or
pop
sarb
icebp
fwait
inc
loope
repz
xor
fwait
xchg
test
scas
jecxz
push
xchg
sub
in
xor
sub
jo
sbb
arpl
rol
cmp
cmp
js
aaa
popa
adc
fst
mov
pop
inc
rorb
mov
mov
xchg
outsb
xor
outsl
clc
sti
imul
fsubl
dec
xchg
loop
push
add
nop
and
or
out
push
sub
fdivr
icebp
sub
and
scas
shl
lods
shl
pop
or
daa
shll
insl
sub
pushf
nop
jnp
adc
sub
push
fstps
or
xor
mov
popa
shl
in
push
shrl
jae
adc
cwtl
cmp
pop
pop
pop
stc
jle
inc
insb
fiaddl
sbb
stc
rolb
lea
cmpsb
addb
mov
loopne
call
sbb
lcall
xchg
es
pop
sub
jle
mov
mov
push
lcall
call
ficoms
lods
adc
pusha
or
out
cmp
out
aas
enter
and
out
in
jmp
push
mov
mov
in
jns
jmp
or
sub
adc
inc
cmpsb
mov
loopne
sbb
push
test
aad
adc
loope
push
xchg
pop
sahf
ds
aaa
cld
inc
ret
ljmp
xchg
cmc
repnz
leave
repnz
or
fcmovnbe
lret
pusha
pop
popa
pop
cmp
inc
repz
inc
std
push
sbb
mov
add
push
dec
xor
icebp
fnstcw
mov
gs
pop
mov
or
aas
ja
cmp
cli
xchg
icebp
dec
adc
repnz
in
add
aam
mov
fdivrl
aad
jle
aas
push
pop
sbb
cwtl
cli
jecxz
mov
mov
inc
cmp
pop
fnstenv
push
jnp
faddp
ret
cmpsb
out
ffreep
loop
js
test
test
aad
push
rolb
push
gs
push
sbb
sti
pop
jno
mov
out
dec
or
xorl
out
je
jmp
sub
push
sub
jae
cmp
and
mov
test
pop
xchg
lret
xor
lock
cmp
cmp
xor
inc
xchg
testb
mov
cmpsl
leave
push
test
data16
and
addl
fsubr
ficoms
sbb
mov
sahf
adc
push
sbb
xchg
scas
icebp
adc
jno
sbb
test
cltd
rorl
mov
jge
or
mov
and
xor
outsb
jge,pt
fisubs
jg
mov
pop
aad
insb
lret
mov
mov
test
gs
inc
popa
cmp
ja
fwait
xor
ds
and
lcall
and
sub
push
mov
outsl
sti
arpl
mov
and
jae
mov
sbb
out
mov
jmp
lds
push
jl
sbb
add
pop
lret
jge
push
mov
cmpsl
pop
dec
xchg
jnp
and
clc
movsb
dec
ss
cmc
les
testb
icebp
shl
ret
popl
fmulp
movsl
je
outsb
mov
gs
stos
mov
fsubl
addr16
push
test
cmp
sbb
icebp
mov
nop
in
pop
mov
mov
cmp
pop
lock
rorb
jl
cmp
jb
push
imul
jl
ljmp
dec
adc
mov
and
pop
push
cmp
insb
or
add
movsb
movsl
jns
out
inc
insl
int
out
push
insb
fbstp
les
push
fwait
sub
jno
push
addb
and
je
iret
test
mov
jmp
cmp
push
cmp
jb
loop
xchg
and
shlb
xchg
dec
imul
jo
jmp
addl
es
movsb
dec
mov
repnz
mov
push
aas
dec
xor
negb
push
pop
xor
in
xchg
mov
xchg
dec
mov
add
fcmove
aaa
jb
sub
pop
cmpsl
inc
not
clc
aad
pop
sub
ret
sarb
lea
int3
xor
rcrb
ja
push
xchg
dec
roll
inc
outsl
out
popa
call
mov
cmp
insl
sbb
orl
cmp
orl
cs
or
inc
scas
aas
mov
insl
in
or
inc
push
cwtl
cmc
daa
xlat
xchg
mov
out
mov
inc
in
xchg
ret
stc
sbb
cmp
dec
sub
fadds
push
and
int
pop
sub
hlt
xor
dec
sub
leave
or
jl
outsb
jp
cmp
push
into
es
popa
dec
pop
into
mov
adc
repnz
int
or
or
sub
fsubs
or
push
sbb
ljmp
dec
insl
test
hlt
dec
into
dec
dec
jno
jle
xor
fmull
mov
nop
aad
lcall
adc
xchg
fwait
mov
cmp
xchg
lea
cmp
inc
cmp
push
mov
aam
sbb
nop
cmp
movsl
mov
pop
mov
in
in
mov
js
scas
lret
sub
and
cmp
jb
cmp
lcall
mov
std
mov
mov
xchg
pop
and
mov
loope
xor
movsl
popa
dec
dec
push
add
call
aad
push
je
stos
adc
loopne
out
add
arpl
adc
fistpll
mov
pusha
sub
andl
jecxz
ret
cmp
lods
roll
jbe
dec
xor
pop
jmp
xor
sarb
push
adc
mov
out
adc
xor
mov
sbb
decb
mov
aaa
push
out
lcall
pop
and
sub
ret
shlb
xchg
fsubl
xlat
leave
jne
dec
dec
jmp
and
mov
mov
fldl
adc
insl
dec
insl
push
fldenv
and
mov
jbe
paddq
cmp
fidivrl
das
mov
adc
pop
aad
das
mov
inc
dec
fildl
mov
mov
adc
addb
outsl
pop
jbe
mov
lds
test
testb
mov
mov
push
pushf
mov
dec
pop
fs
iret
and
add
and
data16
fsub
cmp
lods
loop
jae
inc
inc
ja
pop
pop
dec
sbb
pop
dec
xorl
cld
mov
sub
xchg
sbb
out
push
jl
insl
push
sbb
mov
stos
lock
add
test
ljmp
fmulp
mov
insb
sbb
adc
mov
dec
or
sbb
pop
dec
fnsave
xor
ret
adc
sbb
shll
push
pusha
mov
sbb
mov
cmpsb
insb
sbb
cmp
mov
movsl
cmc
std
es
outsl
push
and
mov
fdivrs
ss
pusha
inc
lods
jle
jnp
jb
fidivrl
stos
cmp
push
scas
inc
dec
pusha
mov
nop
add
jl
sub
xor
bound
xchg
ds
pop
sub
movsl
mov
dec
adc
mov
pop
cmpsb
inc
jo
ljmp
ds
fst
xchg
xlat
ja
mov
call
outsb
call
push
dec
ds
test
repnz
lds
das
add
adc
loopne
pop
or
or
pop
jbe
mov
cld
mov
rolb
adc
mov
or
imul
add
je
push
mov
stos
bound
es
cmp
stos
inc
repz
outsl
out
scas
outsl
insl
mov
add
mov
mov
push
enter
and
xchg
xor
bound
sbb
lret
jp
push
adc
adcl
sub
daa
scas
push
outsb
jno
dec
cwtl
inc
mov
sub
insb
mov
jmp
jmp
lds
shll
outsl
mov
add
andl
push
and
bound
sahf
push
sub
xchg
add
stos
out
mov
lds
fldt
sbb
arpl
cmp
inc
outsl
mov
xor
jae
mov
push
mov
ds
int3
aam
repz
pop
xor
cmp
adc
mov
pusha
mov
xchg
jle
mov
test
jecxz
ret
nop
xchg
sub
aam
xor
fcmovbe
jl
sbb
mov
rcr
or
cmc
jp
outsl
outsb
aas
pop
movsl
add
iret
cmp
nop
mov
inc
loopne
push
lds
gs
xlat
mov
mov
leave
gs
nop
popa
in
je
mov
push
icebp
nop
ficompl
je
js
ds
push
test
cld
in
mov
es
dec
push
movsb
mov
jne
xor
dec
loope
and
data16
xchg
inc
iret
xchg
jbe
cmp
mov
jg
fnstcw
stos
out
scas
lahf
icebp
inc
xchg
adc
xor
pushf
mov
xor
sub
adc
hlt
sbb
inc
inc
outsl
add
push
push
and
pop
mov
dec
in
inc
mov
loope
xchg
xchg
pop
movsl
xlat
mov
or
lea
stc
pop
mov
out
out
fcmovb
leave
nop
pop
mov
ret
sbb
inc
ret
mov
ds
dec
cmp
pop
outsb
movsb
mov
pop
mov
icebp
mov
adc
fwait
repnz
mov
daa
stos
mov
add
inc
xor
gs
fstps
xor
cmp
jmp
adc
jle
shrl
jo
mov
sbb
inc
xchg
test
pop
in
cmc
dec
lret
cmpsl
aad
adc
adc
mov
push
lea
fs
hlt
or
mov
sub
mov
mov
cmp
xchg
cmpsl
cmpsb
mov
inc
mov
in
cmpsl
lret
or
cmpsl
jae
std
andl
sbb
inc
clc
pusha
fldt
andl
dec
and
lea
js
jecxz
or
pop
loop
mov
xchg
idiv
mov
aaa
xor
sub
mov
jecxz
mov
sub
rcrb
and
add
adc
and
and
or
stc
lcall
testb
jno
xorb
add
jg
inc
and
enter
cmp
xchg
aad
lods
and
cmpsl
int
pushf
jo
popa
mov
int
push
icebp
cmp
xor
inc
dec
les
or
arpl
xor
add
aam
sub
or
mov
rolb
stc
gs
mov
sbb
iret
and
sub
xchg
pop
ss
sbb
std
pop
lret
push
ret
das
cmpb
add
mov
dec
cmpsb
mov
in
xchg
jb
adc
in
popf
and
pop
cmp
outsb
jne
sbb
push
dec
hlt
sahf
data16
lret
pop
sub
push
jbe
clc
and
add
out
cltd
mov
push
aas
pop
stos
or
push
add
sbb
cmp
mov
test
add
dec
clc
in
cmp
adc
jb
lock
ja
jecxz
in
mov
fiadds
push
out
loope
testl
xchg
cs
mov
cmp
cmp
push
sbb
js
stos
test
lds
ret
out
clc
outsl
adc
cmp
ficoml
push
mov
stc
sbb
rol
fistl
idivl
fcomip
aas
jmp
dec
xchg
movsl
int
adc
push
js
mov
cmp
dec
nop
add
icebp
pop
fldt
cmpsl
xchg
pop
cmpsb
pop
aad
ret
out
inc
jge
clc
out
pusha
lahf
in
and
pop
cmpsb
sbbl
cli
inc
push
mov
sbb
enter
xchg
lret
bound
push
or
mov
flds
js
pop
mov
jae
add
sbb
ficompl
pop
mov
sub
pushf
mov
mov
push
shrl
mov
cmp
flds
shll
mov
adc
imul
leave
pop
push
add
and
pop
rolb
ds
in
mov
mov
hlt
jmp
fsub
sub
addr16
aad
or
fidivs
fsts
stos
popf
xchg
bound
mov
mov
mov
mov
and
adc
sub
and
and
in
out
daa
fstpl
xor
jg
imul
rcrb
cmp
add
ds
fbstp
mov
lret
push
je
movsb
xor
repnz
jns
leave
mov
dec
cmpsl
xor
dec
fdivr
mull
adc
pop
int3
lret
or
pop
mov
loope
fwait
rolb
cwtl
adc
mov
pop
adcb
repnz
cltd
mov
cmp
jns
faddl
out
jbe
xchg
aad
jns
mov
pop
push
sub
les
test
mov
jno
pop
or
sarb
mov
fildll
mov
cwtl
scas
fsts
inc
adcl
int
cmp
adc
mov
adc
repnz
imul
xor
std
movsl
push
sti
aad
push
outsb
xchg
jecxz
fistps
mov
xor
loop
xor
sbb
jns
lea
xchg
xor
popa
lea
dec
movsl
jge
jae
xor
sarb
shrd
gs
mov
push
inc
sahf
dec
test
or
jne
and
cmp
ficoml
bnd
push
sbb
sbb
adc
out
jg
push
mov
fstl
popl
add
inc
ss
insl
adc
mov
add
shll
mov
cmp
sbb
std
aas
push
in
pop
nop
jle
gs
test
pop
loopne
push
xor
test
das
neg
jle,pt
xchg
ja
sub
outsl
xchg
and
push
mov
sub
stos
sub
push
mull
aad
xor
stc
pop
mov
mov
fldenv
in
xchg
arpl
push
adc
outsl
je
xor
xchg
popf
dec
fisubrs
mov
adc
dec
rorl
mov
push
push
loope
mov
adc
mov
adc
fnstsw
ljmp
cwtl
rol
lods
mov
jbe
push
aaa
loopne
icebp
outsl
je
dec
movsb
loopne
push
add
sub
ss
icebp
cmp
xchg
rcrb
roll
adc
fs
jnp
mov
data16
xorl
hlt
int
cmpsl
iret
es
stos
data16
mov
dec
out
xchg
mov
shl
scas
inc
ficompl
imul
dec
inc
push
sti
mov
mov
jne
jle
loopne
ficoml
mov
pavgw
pop
cltd
test
int
mov
mov
push
mov
sbbl
mov
fdivr
sub
adc
sub
imul
les
xor
push
movsb
repnz
aad
mov
lcall
out
sahf
std
outsb
lret
jmp
pop
mov
loope,pn
imul
icebp
cltd
mov
xchg
aas
dec
mov
sub
aam
or
leave
arpl
xor
outsl
inc
out
out
stc
mov
mov
and
pop
inc
dec
insb
mov
mov
mov
inc
insl
mov
and
cmp
in
jo
popa
sub
cwtl
scas
leave
adc
pop
cld
lods
mov
adc
pop
dec
pushf
test
bound
rcrl
mov
cmp
aas
mov
xor
xchg
fidivrl
repnz
insb
mov
push
mov
and
loope
push
fldenv
cltd
jmp
add
lods
imul
inc
loope
pop
mov
arpl
sub
adc
rclb
out
jne
fimuls
cltd
outsl
insb
aad
fsub
out
into
stc
and
mov
mov
loop
push
orb
jp
mov
pop
movsb
mov
xor
sbb
push
ja
jne
dec
jno
push
rcrb
pop
int3
outsb
or
add
push
stos
aaa
sub
adc
xchg
mov
icebp
adc
or
inc
and
lret
das
repz
mov
dec
sbb
cli
daa
mov
mov
aaa
repz
or
incl
mov
cltd
and
cmp
and
sbb
sub
arpl
mulb
sbb
or
mov
xchg
aas
cli
adc
and
loopne
call
and
xchg
dec
push
jae
std
dec
mov
shr
pop
mov
int3
stos
xchg
sti
add
test
pop
add
jge
sbb
movsl
jbe
pusha
xchg
hlt
jae
inc
mov
leave
pop
sub
aas
in
mov
add
iret
and
dec
xor
sub
cmp
ret
std
gs
gs
mov
xchg
cmp
fcomps
lret
mov
test
cmp
test
je
popa
cmp
mulb
clc
data16
iret
xchg
outsb
bound
sti
mov
loope
out
cwtl
mov
shll
in
hlt
ret
and
les
sbb
lcall
sub
inc
frstor
mov
dec
loope
fstl
outsl
jo
fwait
xor
bound
push
add
mov
mov
popa
stos
popw
cmc
sub
in
out
pop
inc
jbe
and
stc
lock
jne
hlt
xor
shl
sub
test
nop
hlt
mov
inc
out
roll
into
mov
mov
sbbb
aas
ja
es
cmc
pop
and
xor
sub
jnp
dec
mov
int
mov
sub
subl
addb
jnp
imul
sbb
stc
push
cmpsl
movsb
push
jo
pushf
and
jg
adc
dec
push
cli
sub
sub
iret
jnp
sti
dec
lods
rorl
adc
daa
inc
xchg
in
sbb
hlt
cmp
inc
xor
cli
rol
adc
or
push
mov
fcoms
mov
loop
sbb
aam
push
fidivrs
clc
addr16
rcrb
fldcw
sbb
je
sub
gs
cli
mov
rorb
mov
in
mov
into
and
dec
adc
dec
pushf
rcrl
in
mov
mov
fldenv
cmc
stos
in
and
adc
jmp
xchg
xchg
pop
cmpsl
in
mov
and
pop
imul
sub
pop
mov
xchg
pop
mov
insl
test
xchg
imul
dec
outsl
lock
fsubr
mov
inc
jge
cmp
cwtl
popa
lods
or
in
fisttpll
jge
ret
stc
jo
or
push
mov
jno
ja
ja
jmp
lods
pop
leave
xor
js
insl
inc
or
sbb
in
jo
pop
divb
jne
maskmovq
testl
out
les
popa
mov
dec
rol
sub
mov
lea
cmp
jo
mov
into
pushf
and
sub
sbb
xor
cmp
jle
lods
js
insl
popf
mov
cld
cmc
inc
mov
loope
mov
and
imul
loop
add
les
in
movsl
jge
mov
orl
cmpsb
xchg
xor
jne
cwtl
loopne
lock
pop
lret
hlt
and
jno
bound
cmpsb
mov
arpl
push
add
cltd
sbb
loope
mov
cmpsb
enter
and
outsb
sbb
sub
scas
cld
sar
stos
cli
jo
jb
inc
dec
push
test
xor
jecxz
jle
fmull
test
insl
cmp
add
push
cmp
test
add
push
cmc
imul
std
mov
add
mov
mov
in
stc
lret
sbb
imul
push
xorl
adc
dec
mov
test
inc
loope
and
dec
mov
cwtl
pop
jg
sub
shl
mov
movsl
lret
cwtl
jle
xchg
int3
or
pop
inc
xchg
dec
push
cmp
outsl
sbb
pop
jae
xchg
jp
xor
scas
and
xchg
and
inc
pop
xchg
mov
mov
jb
dec
push
lock
lahf
fstpl
jl
stos
fwait
mov
jecxz
hlt
sbb
mov
and
lods
lret
pop
mov
pop
into
loop
pusha
cmp
mov
jp
cmpsl
sub
xor
popf
xchg
dec
xchg
add
push
out
call
ds
cltd
sub
mov
or
lcall
rcrb
fistpll
enter
jg
add
push
inc
jnp
xchg
mov
pusha
add
je
in
dec
mov
lods
repz
in
cmp
jns
arpl
je
lock
cld
and
pop
idiv
jo
aas
xor
mov
iret
adc
outsb
arpl
clc
rcrb
dec
and
pushf
gs
mov
sbb
xor
sub
inc
dec
std
aad
test
jne
xor
dec
cmpl
xchg
pop
stc
pop
mov
ss
push
aas
sub
inc
outsb
shlb
sti
test
adc
xchg
pop
cmp
sarl
mov
cwtl
adc
adc
push
mov
sbbl
adc
mov
push
aad
test
scas
nop
mov
ljmp
and
lods
adc
pop
jmp
mov
fs
rclb
lret
frndint
and
notb
pop
rorb
jae
lods
ljmp
jg
scas
xchg
rcr
fldcw
test
push
fisubrs
mov
dec
lret
cmpsb
addl
repz
and
pop
mov
cmc
call
int3
jb
inc
sbb
leave
hlt
or
outsb
nop
in
rol
add
pop
sbb
mov
inc
sbb
dec
int
lcall
mov
mov
inc
rcr
movsl
adc
push
addr16
mov
push
mov
js
orl
out
xchg
pusha
loopne
cli
xor
cwtl
add
jae
inc
and
shlb
xlat
arpl
jl
or
fs
adc
push
ret
sbb
inc
push
scas
mov
pop
push
iret
lock
outsl
xchg
scas
sbb
dec
cmp
scas
fdivrl
rcrl
test
test
jmp
std
mov
scas
add
inc
das
out
adc
push
xchg
xchg
test
hlt
rol
lret
shrb
adc
fsubl
dec
mov
scas
loopne
shld
or
sub
fisubrs
popf
lcall
enter
pop
jle
cmpsl
or
dec
adc
fwait
cbtw
ss
push
mov
pop
loopne
das
xor
jge
loope
xor
shrb
fldt
or
inc
push
mull
repz
ret
cmp
pop
addl
daa
add
dec
aaa
daa
daa
jbe
mull
iret
nop
pop
loope
movsb
popl
in
jnp
or
xor
hlt
adc
shlb
xchg
xchg
idiv
pop
inc
or
xchg
push
int
xchg
je
sub
lods
cmp
jmp
inc
mov
sbb
hlt
jmp
outsl
mov
inc
bound
in
mov
add
fs
lea
movsl
jne
pop
adc
push
pop
xchg
call
inc
into
jae
lods
loop
scas
dec
lret
sbb
pop
hlt
addl
mov
nop
stos
mov
arpl
popa
add
out
add
push
inc
mov
pop
daa
jnp
push
push
or
stos
mov
push
inc
xor
imul
loopne
movsl
pop
inc
ja
cmp
push
xor
or
punpcklwd
dec
mov
lea
js
pop
cmp
out
mov
pop
loope
jl
add
and
sub
es
sarb
cld
sbb
mov
xor
sub
sbb
in
mov
xor
xchg
pop
inc
fistpll
dec
aam
mov
rcrb
movl
popf
or
insl
cld
lcall
pop
call
dec
shll
cmp
movsb
loopne
mov
adc
ss
xchg
or
imul
int3
dec
insl
into
pop
mov
jle
cmp
cmpsb
sub
ror
in
sahf
xchg
inc
lods
test
fiadds
std
daa
gs
dec
adc
iret
loopne
fisubs
int
mov
or
pop
sysexit
sbb
in
out
mov
mov
scas
das
sub
popf
aas
lahf
cvtps2pd
aam
mov
popf
mov
data16
or
popf
dec
jno
adc
mov
inc
cltd
mov
gs
test
sbb
pushf
jbe
sub
insl
fwait
mov
xchg
xchg
mov
adc
or
dec
xor
push
xlat
shll
and
imul
test
dec
pop
pusha
insl
adc
mov
inc
jbe
ja
arpl
push
push
aas
xor
mov
inc
rclb
xor
fimuls
lcall
pusha
xchg
faddl
daa
in
add
ret
pusha
lahf
out
mov
pop
fsubrp
mov
xchg
imul
jne
dec
lret
addr16
mov
movsb
mov
lret
mov
sbb
clc
mov
xchg
rcl
pop
das
int
hlt
cld
mov
push
add
repz
ror
test
lret
call
in
dec
int3
adcb
jmp
mov
cmp
movsl
pop
mov
push
mov
xchg
jmp
test
sbb
in
mov
pop
xor
adc
mov
fnstenv
mov
repnz
cmp
pop
rol
pop
sub
jge
push
sub
xchg
aaa
push
psubq
add
mov
add
xor
movsl
movsl
sub
addb
jmp
iret
js
jg
sub
jae
ret
adc
roll
fildl
shll
sbb
mov
push
test
push
add
pop
push
test
mov
fstpl
mov
jns
adc
or
xorb
lret
mov
rclb
scas
jg
xor
mov
outsb
lea
out
jecxz
xor
js
or
mov
mov
hlt
shrb
iret
cltd
add
rcrb
adc
jle
shr
sub
or
adc
add
repz
jns
xor
inc
jae
inc
cwtl
mov
pop
push
leave
or
adc
and
popf
fstl
push
iret
jno
push
sub
or
dec
cmp
dec
shll
mov
xchg
test
jle
add
fisubl
sbb
roll
push
in
loopne
fst
ljmp
lea
sub
imul
xchg
rcrl
sub
cmp
cmpsb
fs
inc
mov
mov
push
add
push
mov
filds
shr
sbb
mov
ret
or
ljmp
add
jge
push
stos
stos
rcrb
push
imul
fcmovbe
sbb
push
jle
jno
xchg
ja
les
jb
andb
xor
xor
jae
add
sbb
fiadds
add
mov
jns
test
lds
xchg
jecxz
outsb
cltd
andl
cmp
inc
fbstp
in
push
les
outsl
and
daa
lret
pop
and
mov
outsl
xchg
inc
imul
in
pop
mov
fisttps
es
hlt
lahf
mov
test
out
jo
push
xchg
fucomp
fmul
aas
xchg
sub
mov
mov
adc
add
adc
lahf
cmp
cmpsl
leave
ficoml
and
add
dec
jbe
or
sahf
push
push
mov
out
sub
lds
andb
inc
out
lods
dec
mov
jo
sub
xchg
and
stos
jmp
inc
push
test
jge
lcall
imul
xchg
mov
cmp
fs
xchg
mov
inc
lcall
icebp
gs
pop
addr16
sarl
fwait
mov
cltd
mov
pop
lahf
icebp
std
mov
adc
sub
mov
xor
add
pop
or
fiaddl
pop
cli
cmpsb
mov
sub
pop
sub
clc
pop
sbb
push
xor
icebp
push
loope
sbb
mov
cmp
mov
vpor
shll
out
cltd
mov
push
aad
pop
cmp
lea
popf
mov
lock
xor
cmp
and
inc
sub
dec
fldl
mov
in
les
pop
mov
mov
cmp
cmp
outsb
rcll
cmp
push
loope
js
xchg
xor
scas
ljmp
or
call
pop
xor
xchg
jo
mov
or
movsl
cli
jnp
mov
test
dec
stos
inc
clc
mov
addr16
and
or
and
popf
rorb
cmpsl
pop
push
andl
dec
ret
mov
mov
mov
cld
jae
mov
into
test
sbb
add
push
movsl
fisubl
nop
pop
jl
pop
sub
out
out
mov
mov
lods
dec
xlat
inc
movups
sub
cmc
xchg
push
xor
fcmove
adcb
jle
out
dec
xchg
fnstsw
xor
sbb
rcll
mov
push
outsl
mov
sub
pop
inc
pop
fsub
cmp
das
mov
adc
test
mov
iret
rcr
lret
nop
cmp
add
mov
movsb
jnp
data16
es
inc
xchg
rorb
xor
lods
rcl
shll
mov
inc
stos
cs
pop
shrb
inc
inc
mov
clc
lock
xchg
mov
mov
daa
into
call
jl
insl
in
sbb
push
mov
xlat
inc
jge
mov
dec
xchg
and
push
adc
push
xchg
psubw
cs
mov
lea
push
jmp
push
jmp
xor
mov
add
jp
rorl
inc
mov
cmp
mov
dec
mov
ret
repz
bound
xchg
in
or
xchg
xchg
sarl
or
into
in
or
lock
jg
xchg
add
cmpsl
es
stc
adc
in
pusha
sbb
xlat
push
pop
xchg
pop
clc
mov
dec
in
dec
inc
mov
pop
je
stos
hlt
jle
lods
push
fldenv
or
repnz
test
pusha
dec
scas
push
or
sbb
ret
push
mov
adc
mov
inc
outsl
insb
jle
scas
mov
mov
test
iret
dec
inc
out
dec
and
inc
scas
pop
test
push
stos
sub
xchg
push
out
pop
cmp
lods
stos
mov
bound
test
xor
add
adc
cmp
rep
jg
add
adc
push
push
shl
call
out
punpckhbw
mull
jbe
loopne
ret
dec
mov
out
jl
mov
imul
sub
sub
jg
dec
sub
outsb
repnz
fdivr
lods
pop
mov
mov
xchg
and
ficomps
dec
std
xchg
sub
mov
pop
dec
mov
rolb
push
sbb
in
xchg
push
or
adcb
fistpl
pop
add
jmp
cmp
jb
and
xor
pushf
cli
into
xor
ror
mov
inc
insb
fcomps
hlt
pop
rorb
adc
jbe
nop
shlb
fstpt
in
pop
push
cld
sub
jno
dec
dec
fisttps
xchg
or
pop
jb
and
inc
leave
in
pop
xor
outsb
mov
xchg
lret
jo
in
xchg
rclb
sub
lods
test
dec
add
xor
dec
inc
mov
push
mov
ss
in
and
push
dec
push
xlat
and
jns
cwtl
mov
inc
ja
jo
adc
sub
cmpb
sub
adcl
orb
mov
out
mov
xchg
mov
insl
mov
cltd
fs
out
inc
sbb
ret
test
ret
or
mov
lahf
das
mov
fmul
insb
popf
ret
rcrb
fisttpll
sbb
mov
lret
dec
cli
imul
aam
push
mov
repnz
aas
ja
lahf
jge
pop
sbb
cmp
jo
push
cld
mov
movsbl
push
mov
mov
lods
cmp
and
insl
imul
mov
cli
dec
pusha
push
clc
call
int
mov
insl
xor
repz
cli
lret
gs
pop
cmc
dec
mov
sbb
cmpb
sbb
popa
xchg
pop
pop
xor
push
push
in
add
imul
mov
test
aas
sbb
xchg
iret
lahf
outsb
insb
xchg
mov
jle
dec
or
and
notl
shrb
scas
scas
popa
pop
loop
jbe
test
aaa
mov
adc
jbe
sti
jbe
insl
push
push
flds
and
ja
int
mov
push
sub
sub
int
gs
inc
mov
es
int3
cmpsb
sub
mov
lods
movsb
lds
add
in
imul
sub
dec
mov
mov
fwait
sub
in
lret
cmp
adc
rolb
cmpl
cmp
mov
lods
in
inc
push
pop
push
repz
ret
mov
test
xchg
jb
testb
cli
pop
mov
mov
out
addb
xlat
clc
arpl
inc
add
push
cld
out
xor
iret
mov
xchg
imul
mov
outsb
std
pop
inc
jmp
fs
ficoms
jg
pusha
xchg
jmp
cmpsb
inc
shrl
mov
aad
cld
test
add
xor
imul
mov
cmpsb
std
sub
out
mov
and
negb
std
sbb
jp
out
lahf
jbe
notb
sbb
or
xchg
jl
pop
stos
js
call
fbld
jnp
mov
lahf
std
test
in
movl
iret
fsubr
stos
into
nop
xchg
push
lock
cwtl
pop
pop
mov
es
pop
and
lock
andl
push
in
mov
out
ret
mov
sti
adc
mov
mov
popa
pop
rorl
pusha
ss
cld
cmp
and
lret
pop
sti
pop
das
inc
js
pushf
fstpt
jne
sbb
and
pushf
icebp
xor
sub
imul
mov
mov
xor
fsub
imul
xchg
mov
adc
daa
arpl
mov
mov
push
cld
mov
sub
mov
xor
cmc
pusha
or
inc
jl
daa
jmp
movsb
adc
loope
movl
test
jae
cli
sub
inc
and
dec
lods
mov
pop
lds
adc
dec
test
outsl
jl
in
mov
dec
mov
jns
mov
pop
add
mov
in
mov
sarl
dec
loopne
jne
loop
push
push
int
cmpsb
dec
clc
xchg
pop
div
mov
lds
orl
mov
sbb
mov
inc
int
xchg
int3
push
add
insl
sbb
int3
or
jbe
imull
sbb
movsb
mov
cld
ds
daa
pusha
jle
dec
inc
mov
test
fisubrl
ja
jne
inc
popa
loopne
ret
push
adc
add
lea
pusha
rcll
pusha
xchg
mov
int
cli
enter
jmp
dec
xchg
mov
mov
stos
pop
clc
in
lahf
push
lcall
or
adc
push
mov
shlb
sub
lods
hlt
or
or
cmpsl
mov
int3
lods
lods
jb
pop
xchg
les
test
testb
les
adc
or
repnz
movsl
movsb
fs
or
sub
xchg
mov
cwtl
sub
ljmp
jl
cmc
push
mov
mov
push
jb
ret
mov
dec
jp
dec
daa
push
jns
mov
pusha
insb
cmp
jo
data16
cli
test
push
add
pop
pop
or
movsb
ljmp
fmull
outsb
lahf
push
sarl
std
push
inc
and
inc
std
mov
clc
jl
jne
jns
test
mov
pop
sahf
in
sub
jbe
lds
rcrb
push
movmskps
flds
pop
scas
sub
bound
jge
xor
push
cs
subl
mov
mov
lcall
mov
inc
std
adc
xor
jecxz
pusha
mov
imul
stos
mov
mov
or
inc
clc
fmul
and
cmp
sub
inc
cmpsl
inc
lds
stc
test
jmp
scas
pop
stc
xchg
sbb
pop
mov
jp
out
bnd
scas
pop
aad
arpl
test
pop
sarb
inc
pop
pop
repz
jnp
inc
or
daa
adc
test
xor
in
lock
jge
mov
mov
bound
leave
cmc
adc
inc
xchg
add
ja
cli
inc
inc
sub
push
xchg
mov
sbb
jb
es
xor
sub
cwtl
cmc
inc
mov
insb
jp
lds
popa
enter
adc
cmp
pop
push
clc
fs
lahf
and
mov
sub
cmp
push
xchg
mov
sbb
push
iret
adc
or
xlat
jnp
add
xor
pushf
push
mov
cmpb
mov
push
jns
cmp
jl
pop
adc
ja
xchg
jle
or
out
adc
pop
aas
push
pop
jnp
gs
cmpsl
dec
lret
je
push
lea
daa
lret
mov
insb
jge
pop
and
stos
mov
and
in
scas
nop
xor
cmp
xor
cmpb
jle
mov
std
lahf
sbb
cmpsl
mov
nop
clc
jo
fcmovbe
mov
ficomps
es
mov
mov
adc
flds
nop
adc
jge
jmp
enter
in
or
jecxz
pop
shrl
fiaddl
out
mov
jge
push
cltd
push
mov
mov
sbb
mov
or
xlat
repnz
insb
pop
ret
xchg
dec
xchg
or
aas
les
dec
mov
or
and
loop
adc
test
fucomi
stos
dec
std
xor
sti
addb
das
pop
out
xchg
lret
lcall
pop
mov
xor
jae
mov
lahf
mov
xchg
push
cwtl
pop
mov
movsl
ret
push
sbb
cmp
mov
mov
ficoms
fsubl
pusha
sbb
or
sub
dec
or
ret
fs
push
cmpsb
ret
in
in
divl
scas
fisubs
scas
inc
fwait
sbb
mov
xor
and
sbb
imul
mov
add
pop
jecxz
ds
loop
mov
push
aaa
daa
shlb
outsl
push
adc
jne
icebp
icebp
adc
jnp
adc
pop
clc
push
sahf
xorb
push
cmp
fwait
xor
or
and
and
sub
inc
loop
inc
sub
cmp
xor
adc
push
push
push
fists
sub
fwait
arpl
sarl
mov
scas
sahf
mov
fiaddl
inc
jnp
xchg
adc
std
inc
lods
in
or
dec
inc
cltd
xchg
pushf
adc
enter
ss
mov
add
push
or
inc
cmpb
mov
sarl
sub
cli
adc
pop
sbb
jno
sub
js
icebp
mov
pop
xor
adc
cmpsl
pusha
xchg
sar
add
pop
out
push
shll
pop
xchg
das
adcb
xchg
loope
sbb
and
arpl
inc
mov
inc
leave
enter
pusha
stos
xchg
dec
out
and
jo
scas
pop
sahf
ja
call
outsl
int
aam
ja
in
shlb
mov
and
adcl
hlt
pop
stos
test
popa
sahf
outsl
inc
das
push
mov
jl
js
loopne
mov
adc
jns
call
jae
fcomip
dec
scas
hlt
adcb
or
inc
les
ret
lods
push
sbb
nop
cs
daa
aaa
test
outsl
andl
into
outsl
push
test
jl
popf
mov
and
ds
pop
sbb
ljmp
add
jmp
mov
xchg
out
call
cmp
cld
cmp
insb
aam
andl
pop
or
daa
es
xchg
mov
adc
jle
pop
ret
inc
pop
out
jne
and
mov
inc
lahf
lea
jbe
ds
xchg
push
dec
xchg
mov
fnstcw
hlt
stos
cmp
outsb
mov
out
aad
movsl
pop
mov
xor
lret
scas
arpl
push
aaa
sub
push
and
inc
jnp
fwait
dec
or
and
pop
movsl
push
popf
and
inc
andl
and
sarb
mov
mov
mov
push
sbb
ljmp
movhps
cmp
and
cmp
mov
icebp
pop
sbb
mov
in
jl
mov
pop
xchg
icebp
xchg
les
ljmp
lods
push
push
bound
cmpl
mov
fidivl
das
cmp
js
movsb
jne
fmul
insl
mov
out
pop
push
and
rol
dec
or
movsl
pushf
sbb
jb
subl
push
repz
inc
inc
aam
xchg
xchg
mov
mov
negl
adc
fidivrs
fs
mov
dec
loop
mov
imulb
nopl
jbe
bound
add
imul
leave
mov
mov
jle
test
ficoms
js
inc
lea
stos
imul
rorl
push
jno
cmp
imul
arpl
cmpsb
push
push
add
repnz
push
xchg
push
mov
push
out
test
inc
pop
or
repnz
int
jae
mov
pop
pop
lret
fs
lods
int3
push
inc
incl
repz
push
adc
sub
in
pop
jl
lods
cmp
outsb
mov
push
mov
iret
or
ds
sub
or
arpl
std
mov
movsb
jnp
xor
cmp
lret
imul
push
arpl
addr16
jae
mov
fwait
loop
sbbl
xor
inc
and
movsl
testb
out
bound
mov
mov
mov
inc
loope
insl
sbb
icebp
push
mov
fadds
mov
xor
sub
xchg
lea
jae
notb
mov
mov
sub
cmp
push
xchg
xchg
xchg
mov
ror
stc
jmp
cltd
push
xor
add
fwait
adc
inc
ds
mulb
ret
jl
sbb
xchg
cltd
mov
aas
xchg
pop
popa
xchg
cli
xchg
ljmp
push
xchg
fs
mov
icebp
mov
push
mov
xchg
push
sub
or
sub
inc
fadd
pop
int3
mov
sbb
sub
imul
and
mov
test
sbb
xor
addr16
ficoms
inc
rcpps
lods
mov
xchg
lds
pop
xchg
dec
dec
xchg
adc
lods
jecxz
ret
insb
dec
xor
daa
imul
fsubs
imul
jb
push
ja
xor
dec
jl
out
jb
gs
xor
jp
mov
rcl
iret
and
jbe
lret
andb
mov
pusha
mov
cmp
shlb
jns
icebp
out
xchg
fildll
fimull
cmp
add
es
push
push
and
lods
sarl
dec
pop
dec
sarb
leave
xor
inc
sbb
pushf
pop
aaa
adc
xor
mov
ljmp
cli
inc
shlb
out
pop
in
sbb
ret
adc
fnstsw
add
adc
jbe
std
add
sti
stos
fst
cmp
add
push
push
lock
mov
mov
mov
js
pop
mov
fs
inc
mov
stc
stos
shr
sbb
fwait
sub
scas
jp
fs
mov
insb
pop
je
xor
pop
xchg
jns,pt
mov
mov
push
jmp
mov
pop
push
mov
cmp
mov
cs
and
daa
pop
dec
dec
mov
xor
lahf
loopne
jae
loopne
cmc
inc
rcr
and
rcrl
pop
lret
xlat
out
aam
adcb
cs
test
hlt
inc
lods
popa
mov
notl
sbb
stos
inc
fsts
movsb
sbb
movb
or
mov
push
sbb
arpl
sahf
xor
sbb
mov
cmpsl
dec
in
fnstcw
cli
push
cwtl
jb
imul
and
mov
or
adc
insl
imul
or
call
sub
cmp
ja
movsl
jl
jp
ficomps
lret
rclb
mov
fcoml
js
imul
fimuls
or
scas
pop
push
inc
push
mov
mov
cltd
lret
jecxz
iret
sbb
push
jb
data16
bound
movsl
lret
into
sub
ja
imul
scas
cmp
loopne
pminsw
scas
mov
cli
xlat
popf
sub
sbb
daa
cli
insl
aaa
mov
mov
ss
mov
lcall
lock
pop
pushf
popa
ret
sbb
subb
xchg
push
adc
mov
mov
dec
push
sub
aam
cmp
jmp
pop
imul
out
sub
ret
rorb
xchg
xchg
inc
jmp
xchg
pop
sti
cli
lods
and
aaa
or
cmp
js
ret
mov
scas
fs
mov
adc
pop
pusha
sub
ret
jae
test
cwtl
dec
and
cmp
mov
or
int
dec
lock
ret
in
mov
cltd
loop
fucomip
int
and
mov
subb
mov
xchg
aaa
sub
jmp
cmp
add
stos
add
and
cs
aaa
inc
cmc
or
sub
jno
mov
je
dec
or
adc
or
xchg
mov
mov
ss
pop
clc
js
inc
mov
sarb
jl
cld
mov
cmp
fldt
aad
pusha
int
test
jmp
lea
sbb
lods
cli
iret
dec
ljmp
punpckhwd
popf
xlat
add
add
cs
fsubs
loope
jle
adc
sti
and
mov
jp
inc
add
std
and
pop
lcall
mov
jne
not
dec
movsl
aas
ja
fs
iret
jbe
lahf
jae
xlat
popa
xchg
fiadds
shl
mov
adc
cmp
and
pop
sahf
cmp
in
push
out
pop
xlat
or
dec
lods
pop
cs
mov
push
imul
je
inc
mov
aaa
rcr
cmovo
mov
testb
mov
jnp
aas
jmp
mov
inc
xchg
mov
andl
add
add
in
inc
stc
es
and
int
or
popa
xor
jge
mov
aas
mov
movsl
lret
js
mov
je
imul
inc
loopne
jmp
or
mov
test
mov
jle
int
hlt
js
xchg
sbb
in
jmp
mov
mov
rclb
repz
fimuls
fdivrs
imul
aas
xchg
test
mov
test
popf
sarl
pop
je
mov
sbb
sar
pop
in
out
push
jmp
loopne
icebp
xor
xor
pusha
or
push
bound
jno
out
fisubs
and
mov
fnstcw
cmp
les
mov
sbb
mov
xlat
movsl
jnp
pop
inc
scas
insb
lock
loop
mov
sbb
mov
je
fadd
in
sti
inc
and
push
sarb
scas
mov
cwtl
push
push
sub
ljmp
inc
dec
inc
jb
dec
fiadds
negl
cmp
sub
xchg
cmp
and
mov
fmull
lcall
jg
sub
xchg
sbb
mov
and
xchg
add
dec
into
sub
push
fnstsw
fcoml
into
cmpsl
into
sub
or
out
push
subl
pop
sbb
xlat
adc
bound
jmp
and
xor
test
test
xor
and
test
or
enter
sub
aaa
test
test
testl
add
sbb
imul
xor
jbe
pop
mov
ljmp
inc
mov
push
addl
fcmovbe
push
in
loope
cmpsb
jge
ffree
pop
mov
aad
and
dec
dec
jnp
and
loop
out
cmc
lea
ljmp
into
inc
out
adc
lret
imul
outsb
pop
push
xor
mov
mov
je
gs
lds
adc
dec
notl
insl
repnz
push
aad
adc
test
cmc
je
cmpb
lods
jb
sbb
fisubs
fimull
insb
cmp
pusha
psubb
lahf
sbb
mov
movsb
movsl
mov
sbb
bound
cmp
sub
mov
jne
adc
mov
loopew
pop
test
xor
xor
ret
fs
scas
loop
jg
popf
sti
xchg
cmp
addr16
dec
mov
les
inc
int3
mov
or
pop
xchg
xor
inc
sbb
lret
out
scas
loope
inc
cmc
std
mov
mov
bnd
subl
mov
out
add
sub
data16
dec
add
push
fdiv
rorb
lods
nop
or
jo
mov
inc
pusha
sahf
xlat
test
imul
sbb
cmpsl
adcb
dec
adc
sub
adc
cmp
xor
fistpl
rol
pop
rcll
fcmovu
fwait
xor
xchg
jns
imul
mov
xor
test
fmuls
jae
hlt
sbb
lahf
sub
icebp
push
shll
pop
xchg
push
out
sbb
int3
sub
fadds
insl
xor
push
lds
xor
xor
xor
nop
shlb
in
mov
das
pop
ljmp
in
jae
mov
loop
mov
test
cs
ror
cmc
or
in
push
jg
rcrb
jg
cmp
hlt
aas
jg
adc
add
jnp
jl
movsl
push
xchg
mov
sar
nop
jecxz
iret
call
add
xor
inc
xlat
cmpsb
aaa
lds
cmp
mov
ret
push
or
lret
xchg
mov
sbbl
sbb
mov
mov
icebp
dec
or
and
cltd
add
mov
inc
shr
xchg
push
ja
jb
sub
cmp
sub
aaa
pop
out
or
shrb
ss
enter
adc
jno
rcrb
jecxz
insl
add
hlt
dec
jns
sbb
cltd
and
cmc
push
sub
cmpb
pop
lds
xor
std
movsl
pop
test
jb
xlat
pop
enter
les
lcall
jmp
dec
sub
outsb
mov
cmp
ds
inc
inc
divl
pushf
and
pop
push
movsl
int3
insl
out
cmp
adc
les
lret
data16
pop
adc
dec
mov
out
movsb
cmp
inc
and
and
jae
bound
outsb
sub
inc
in
and
add
cltd
jge
jecxz
mov
dec
aad
mov
sbb
sbbl
mov
push
fimull
int3
pop
gs
jb
sub
and
lcall
cltd
sub
push
add
movsb
jno
scas
pop
fildl
sbb
hlt
push
jp
js
push
sbb
sub
rcl
jg
push
pop
fwait
cmpsl
mov
jne
mov
push
mov
inc
incb
lods
mov
mov
mov
andb
dec
and
shll
cmp
cld
mov
mov
ret
cmp
insb
les
mov
and
adc
lods
xchg
pop
outsb
jl
jo
cmc
inc
stos
mov
or
and
dec
pop
xchg
xor
and
mov
sbb
xchg
add
mov
xchg
loop
pop
stos
fisubl
dec
lods
dec
and
jb
add
pop
jp
cs
xor
stos
sbb
inc
stos
aam
insl
xchg
ss
loope
loopne
or
paddusb
les
out
mov
pop
cli
sub
aam
and
adc
dec
jge
cmpsb
movsb
andb
adc
sbb
jmp
enter
mov
dec
push
in
scas
fimuls
add
add
or
pop
outsl
xor
scas
jae
push
or
push
jae
or
cmp
cmp
and
lcall
es
jne
in
insb
arpl
gs
arpl
cmpl
lods
mov
popa
pop
shlb
or
shrb
or
scas
aas
push
leave
cmc
sbb
mov
pusha
bound
jns
xchg
inc
aaa
repnz
sbb
cmp
cs
jecxz
pop
imul
dec
aam
testl
insl
mov
mov
jl
mov
mov
lcall
pop
mov
cmpsb
jae
xchg
xor
push
jecxz
sbb
cwtl
xchg
xchg
ret
pop
mov
scas
push
push
lcall
shrl
or
jmp
push
outsb
fstpt
inc
cmp
jge
xchg
fdiv
cmp
orb
mov
xchg
stos
call
popf
fwait
es
movsl
mov
stos
sbb
and
lods
and
lea
sub
jle
jl
in
imul
test
push
jae
pushf
mov
dec
pop
push
insl
int3
cmpsl
pusha
pop
sub
inc
mov
rcll
jg
cli
enter
and
lcall
imul
xchg
loop
mov
jge
in
pushf
in
sbb
movsl
add
pop
push
jne
jmp
adc
bnd
dec
ljmp
divl
aaa
push
hlt
popf
lret
mov
and
cmp
popa
push
sti
adc
push
dec
pusha
push
add
add
xor
xchg
pop
xor
lahf
sbb
int3
das
add
inc
stos
lret
aas
inc
mov
rcrb
add
xor
inc
adc
js
adc
xchg
mov
icebp
pop
push
shrl
ss
mov
insl
cmpsl
cmpsl
imul
add
pop
inc
inc
je
jb
sbb
test
dec
insb
cld
sahf
loop
and
add
popa
adc
dec
scas
mov
dec
lods
mov
bound
in
lock
popa
jno
add
cli
stc
sbb
cmp
mov
fbstp
jge
jmp
xchg
shl
ret
cmp
push
scas
cltd
lods
sub
push
lea
cmp
inc
cmp
xchg
testl
xlat
inc
aad
sahf
jle
repz
add
popa
scas
jmp
outsl
jno
sub
inc
jl
test
ds
cltd
lret
push
add
cmpsb
jmp
and
xor
movsl
push
dec
cltd
call
push
and
dec
lea
sbb
int3
jnp
xorl
stos
or
push
xor
add
lock
push
ds
sbb
enter
adc
and
dec
lret
int
and
mov
cli
xor
jo
cmp
jle
in
dec
shrb
mov
pop
fisubrl
add
paddsb
mov
jl
lret
mov
mov
rcrb
lcall
test
mov
and
or
jb
sub
testl
or
jno
frstor
push
lods
mov
lret
ljmp
stos
hlt
enter
ljmp
mov
mov
xor
pusha
inc
mov
fidivl
lcall
stc
jg
movsl
push
sbb
clc
js
cmp
xchg
sub
cmc
rcl
xlat
mov
xchg
les
inc
out
sbb
cmp
shl
iret
mov
shrb
inc
mov
cmp
fstps
or
lods
adc
push
pop
rclb
jb
inc
in
fsts
xchg
and
repnz
arpl
or
leave
enter
xchg
sub
stc
popf
jecxz
sbb
lcall
mov
ret
stc
mov
xor
push
iret
mov
cmp
or
ja
or
sbb
test
inc
cmpsl
inc
daa
xchg
fstp
sbb
mov
xchg
pop
repz
cmpsb
sbb
mov
fisttpll
dec
out
pop
jbe
call
daa
out
iret
dec
push
loope
out
lock
sarb
lds
fists
iret
dec
stos
mov
cmc
push
mov
push
xchg
cmp
es
and
cli
pop
inc
inc
lahf
xor
add
mov
cmp
xchg
pop
mov
ss
mov
push
imul
sub
inc
sub
pop
imul
xor
mov
fadds
popf
stos
and
jecxz
dec
outsl
leave
add
sub
fwait
mov
cmp
sub
ja
roll
cmp
lods
lds
sti
jmp
cltd
jnp
invd
pusha
or
jbe
test
shrb
out
das
inc
loopne
xor
sbb
mov
or
mov
rcll
fwait
adc
mov
xchg
insl
pop
sub
lods
lahf
pop
addb
ds
xorl
rorb
push
mov
js,pn
push
int3
mov
adc
inc
adc
mov
mov
je
daa
cmp
jg
shlb
xchg
out
adc
sbb
sbb
sub
push
movsb
das
jne
lea
aaa
fadds
mov
in
xchg
data16
dec
shll
push
rcl
mov
sub
adc
test
mov
add
sub
cli
stc
in
shr
and
insb
fadds
mov
out
ljmp
test
stc
jbe
pop
push
pop
mov
outsl
jnp
dec
pop
xor
scas
scas
push
lret
fwait
and
and
ja
nop
sub
adc
fildll
enter
rcl
cmpsb
inc
sub
aaa
fisubrs
sbb
fstpt
call
and
adc
jmp
adc
insl
fwait
xchg
push
std
push
xor
push
mov
or
nop
movb
jo
ss
mov
jbe
sub
jnp
lret
dec
dec
movsl
jae
adc
daa
es
popa
stos
pop
mov
fimull
cld
ds
repnz
mov
adc
repnz
sub
mov
and
ljmp
cmp
jo
mov
fidivs
lods
pop
imul
push
xchg
addr16
fucomp
into
hlt
test
mov
stc
dec
add
ss
aaa
mov
push
sti
std
push
xor
imul
divps
jp
cmp
pop
rcrl
dec
mov
std
fimull
repz
xchg
das
out
sub
pop
lods
sub
sub
aas
imulb
pop
pop
or
xor
push
xor
sub
les
mov
dec
sbb
or
lods
sub
insl
pop
addr16
clc
jl
xor
shrb
mov
nop
movsl
dec
and
stos
jae
lret
sarl
or
dec
xor
aam
adc
icebp
jno
cmp
shl
pop
cmp
lahf
outsb
sti
mov
sub
jg
es
add
arpl
push
int3
lcall
aad
gs
adc
jns
mov
mov
ss
jmp
adc
jmp
cltd
xchg
xchg
xchg
les
xor
jae
add
add
addb
inc
je
add
or
loope
out
iret
popa
ja
gs
loop
in
lret
jb
mov
mov
pushf
nop
mov
push
mov
push
test
aas
pop
iret
xor
sbb
mov
jmp
sub
hlt
pop
mov
adc
jbe
adc
push
test
les
daa
mov
adc
scas
sbb
pop
shr
outsl
aas
in
pop
dec
dec
andb
mov
and
ljmp
mov
mov
stos
jbe
cs
ljmp
push
jo
sub
adc
incb
mov
fidivrs
imul
pushf
daa
add
hlt
lahf
pushf
bound
xorl
sbb
push
ljmp
jg
enter
push
testl
mov
xor
sti
shll
fwait
pop
cmp
pop
pop
icebp
pop
test
out
notl
xorb
adc
mov
repnz
jnp
mov
inc
xor
repnz
sbb
lcall
cmp
fisttps
and
pop
cmpsb
jne
cmpsl
pop
fsub
lret
sar
fdivrs
jae
xchg
or
hlt
ret
push
inc
pop
and
insl
cltd
rsm
sarb
outsl
xchg
cmc
add
repnz
stos
ret
sahf
dec
xorb
jp
adc
sbb
push
orl
push
mov
sbb
push
sbb
adc
xor
cld
jo
out
cmpsl
repnz
test
adc
cmp
daa
in
push
in
and
sub
addl
aaa
dec
lea
test
lret
cmpsb
imul
test
cli
in
jle
xor
fdivrl
pop
mov
popf
mov
jle
loop
fsubl
addr16
xchg
pop
or
mov
clc
outsb
mov
outsb
and
in
gs
data16
add
mov
repnz
jecxz
lret
bound
in
lret
sbb
mov
xchg
test
adc
out
addr16
adcl
push
in
test
pop
or
stos
mov
repz
sbb
inc
adc
mov
in
add
stos
popf
cmp
out
fnstenv
clc
mov
out
rorl
dec
xchg
adc
jge
fcmovnb
lcall
ret
mov
sub
and
pop
sbb
outsl
add
arpl
movsb
lahf
lahf
xchg
int
dec
xchg
adc
mov
pop
xchg
mov
mov
xchg
xor
andb
es
pop
adc
ljmp
les
imul
es
out
push
mov
fstps
sahf
inc
mov
stos
daa
ja
xor
xorb
leave
cmp
cmp
mov
aad
jg
movsb
test
dec
lds
jo
test
xor
repz
cmc
xchg
adc
repz
or
xchg
mov
imul
sub
daa
ret
shll
std
inc
or
inc
cmpsl
adc
fcmovnu
dec
push
add
dec
add
test
push
aad
lret
lds
imul
loop
clc
jmp
mov
xchg
jge
scas
adc
fcmovnb
adc
jno
xchg
xchg
and
fdivrl
adc
mov
fidivs
gs
shlb
enter
and
enter
push
or
in
adc
ja
or
push
es
inc
in
rorb
popa
sbb
lock
fimuls
mov
rcr
lcall
push
cli
ds
jecxz
dec
das
test
and
pop
fimull
or
inc
mov
cmp
pop
in
sbb
cld
jle
mov
cmp
push
call
fs
jecxz
cmp
pop
inc
loop
cmp
mov
xchg
xlat
es
push
in
sub
mov
ss
xchg
and
xor
mov
popa
addr16
lcall
dec
mov
cmp
jl
xchg
mov
pop
mov
pop
insl
js
sbb
adc
add
sub
mov
mov
mov
add
jno
jle
movsl
cmp
aaa
jge
push
mov
in
mov
into
and
stos
in
inc
es
cmp
jb
mov
outsb
cli
mov
addl
sbb
sub
or
pop
aad
xchg
and
mov
insl
pusha
repz
ret
aad
add
and
insl
shr
sub
jp
pop
les
pop
pop
mov
test
std
dec
sub
repnz
inc
pop
or
cmpsb
xchg
out
stos
inc
xor
jecxz
xchg
sbbb
jp
xor
jle
inc
rorl
incl
call
les
xchg
mov
fcomip
add
cmpsb
ret
and
dec
sbb
mov
push
fistl
lea
push
imul
adc
dec
mov
in
sbb
imul
mov
aaa
in
mov
inc
and
sti
pop
call
jge
aas
adc
lahf
neg
ret
repnz
xor
int3
xchg
inc
mov
insl
fidivrs
mov
icebp
mov
jne
lods
lret
push
mov
movsl
movsl
outsb
xchg
test
dec
or
xor
push
sub
rclb
cmp
jns,pn
leave
mov
aad
and
inc
sbb
sbbl
xor
test
cld
jp
int3
push
hlt
lahf
sbb
lock
mov
in
addb
xchg
mov
das
push
or
jns
push
inc
push
mov
add
sub
cltd
insl
push
inc
mov
ja
jbe
sbb
push
pop
test
and
decl
cmp
xchg
and
cmp
adc
mov
ds
jns
in
sbb
xor
fstps
daa
and
out
inc
cmpl
rcrb
fimuls
push
dec
fsubrl
push
pop
outsb
or
stc
or
nop
sbb
iret
popa
push
stos
int3
cwtl
sub
push
sahf
push
pusha
push
push
roll
mov
ljmp
add
and
or
mov
inc
outsl
je
into
inc
js
outsl
add
pop
mov
or
sub
mov
test
insl
jl
ror
mov
idivl
push
movsb
xchg
sbb
xor
adcl
sbb
cmc
lret
ljmp
push
sbb
push
mov
cmp
clc
shlb
stos
sarl
outsl
dec
dec
daa
sbb
mov
addr16
or
mov
push
xor
loopne
xchg
xchg
cmc
stos
jl
loopne
repnz
adc
ss
jmp
and
mov
bound
stc
sub
sub
dec
cmp
into
mov
in
adc
arpl
imul
or
fdivrs
xchg
daa
shrl
scas
jmpw
enter
enter
stc
imul
pop
xor
inc
sub
xchg
cs
xor
imul
mov
sbb
mov
sub
cmp
pop
and
dec
inc
in
repnz
test
ficoml
lods
cmp
jge
clc
divl
loop
inc
mov
lret
mov
in
push
pushf
or
xchg
adc
or
mov
in
les
addr16
inc
fistl
xchg
and
cmpsb
push
mov
test
mov
mov
pop
mov
in
push
jb
popf
jb
cmp
push
fwait
push
dec
push
push
ss
cmpsl
push
sbb
test
mov
stos
sbb
arpl
rclb
add
or
dec
pop
divl
jp
cmpsl
jg
imul
pop
pop
fnstsw
orb
js
in
adc
mov
xor
popf
adc
cli
mov
cmp
mov
lret
mov
jb
cmp
xor
rcll
lret
stc
movsl
daa
jle
push
sub
cmpb
or
rclb
mov
jns
adc
adc
pop
pop
inc
lret
test
jl
mov
stos
jo
dec
jl
fucom
add
lret
call
daa
mov
mov
or
dec
fisubrl
inc
imul
ret
and
scas
inc
rclb
add
out
int
shll
mov
mov
mov
sahf
daa
dec
jp
int
mov
nop
adc
dec
adc
pop
movb
adc
push
and
adc
mov
sub
cs
pop
pop
lea
mov
popa
fs
leavew
xchg
out
jl
imull
cmpsb
in
fsub
sbb
xor
sti
out
xor
mov
push
mov
mov
scas
mov
xchg
xchg
out
cmp
pop
arpl
sub
sti
jle
push
cwtl
sbb
mov
fisubrs
fidivl
add
sahf
data16
push
insb
outsb
pop
bound
repnz
mov
int3
jbe
adc
fcomps
mov
or
mov
gs
or
jecxz
pop
xchg
mov
test
cmp
mov
mov
cmpsl
inc
cmp
xor
pop
out
into
out
cmp
and
scas
lret
mov
mov
adcl
sub
xchg
and
sbb
andl
adcl
loop
inc
fiadds
lock
add
sbb
fcomps
xor
int
fsubrl
mov
push
call
cmpsl
or
add
dec
aaa
test
insl
adc
je
repz
add
mov
pop
inc
jo
ror
test
push
sbb
dec
sub
mov
lret
cmp
mov
or
mov
leave
sbb
fwait
inc
push
push
cmp
xor
imul
int
xchg
pop
jecxz
push
cmpsb
pop
movsl
xchg
push
flds
dec
inc
pop
sbb
mov
insb
or
dec
mov
mov
dec
jle
inc
mov
and
dec
jmp
lcall
into
xchg
sub
lret
push
push
fsts
es
pop
adc
mov
xchg
test
inc
daa
sub
inc
shll
push
mov
cmpsl
xchg
lcall
push
pop
mov
mov
int3
insb
mov
sub
lret
fcomps
push
mov
push
data16
jecxz
mov
xor
mov
mov
rorb
push
aad
sbb
shlb
ret
jl
lahf
in
insl
xchg
nop
push
or
mov
dec
lock
mov
insl
cmc
mov
mov
faddl
push
lcall
xor
xchg
cmp
push
lock
jge
loope
mov
lods
or
out
mov
and
insl
pop
push
dec
add
jnp
cli
out
cmpsb
and
sbb
add
xor
cltd
sub
outsb
lahf
gs
xor
sub
out
cmp
test
pop
insl
xchg
outsl
popf
fstpl
inc
adc
mov
mov
or
xchg
mov
cwtl
dec
jb
and
loope
push
adc
es
pop
cltd
inc
push
or
addr16
cli
stos
nop
jnp
int
mov
and
add
xlat
pop
adc
jb
sub
jnp
pusha
clc
les
pop
cld
and
aaa
jle
imul
fistl
nop
bound
mov
xor
mov
mov
sub
gs
pop
pop
xor
mov
and
pop
iret
nop
test
push
call
out
imull
mov
in
in
cmp
xchg
or
test
lock
arpl
hlt
push
sbb
ljmp
or
and
mov
ds
jae
jp
stc
xor
loop
xchg
loopne
outsl
mov
jmp
shll
leave
add
xchg
iret
lret
rcrb
mov
movb
movsb
aas
loopne
aas
pop
iret
dec
push
fists
cmp
lret
cmp
popf
out
insl
dec
leave
mov
sahf
mov
in
sbb
ja
mov
pop
mov
leave
ret
pop
mov
mov
outsl
sbb
pop
fsubl
jg
sub
arpl
add
push
mov
outsb
mov
loope
enter
fimuls
enter
mov
repnz
push
mov
xor
and
adc
adc
out
addr16
push
and
insl
daa
sbb
cmp
push
je
mov
cwtl
add
xchg
cmp
jo
sub
dec
jns
test
dec
push
outsb
cmpsb
cmp
sbb
or
leave
clc
insb
cmp
dec
mov
movsl
xor
adc
dec
mov
insl
clc
push
add
mov
fstpl
xchg
xor
stos
mov
das
jmp
mov
dec
sub
or
aaa
stos
jo
adc
hlt
pop
pop
push
orb
insl
int
movsb
mov
inc
jg
dec
test
test
push
insb
or
loopne
xor
pop
stos
push
pop
jmp
cmp
jecxz
loope,pn
cmp
bound
test
cmpsl
pop
test
test
fidivrl
jge
out
xor
dec
add
leave
fnstsw
cltd
out
pop
fsubr
and
addb
movsb
arpl
mov
ret
xchg
lret
dec
dec
in
xchg
iret
arpl
mov
jne
hlt
imul
jge
test
mov
das
mov
sbb
jmp
mov
test
xor
pushf
shlb
xchg
dec
lret
mov
dec
js
loope
rclb
sub
aas
and
jae
sbb
adc
or
scas
out
jecxz
lods
imul
dec
lock
imul
les
lods
pop
push
stc
rcrl
xchg
je,pn
stos
jno
adc
push
inc
mov
inc
xchg
sahf
lods
arpl
lods
aad
add
xor
push
xchg
mov
xchg
orb
fcmovne
dec
cmpsb
sub
cs
lods
sbb
cs
mov
imul
js
jnp
test
adc
mov
jno
and
movsb
push
mov
sbb
lret
mov
rorl
pop
push
fisttpll
lods
sub
daa
js
xlat
pop
pop
jbe
addr16
in
test
outsl
mov
xor
bnd
inc
sub
add
cmp
cli
imul
jp
adc
aam
fucomp
in
xchg
sbb
xor
clc
fcmovnbe
or
shrb
test
cmp
jb
jnp
inc
lcall
inc
mov
jnp
in
inc
xchg
aad
jno
and
cmp
pop
dec
daa
inc
insb
dec
adc
lahf
sbb
mov
jae
mov
notl
adc
stc
out
stc
stos
inc
xor
lcall
rcr
mov
stc
lods
lea
ljmp
aad
pop
mov
cmp
lea
lea
out
mov
lahf
dec
stc
movsb
adc
push
jbe
leave
js
das
loopne
or
xor
stos
fiaddl
sbb
xchg
pop
fs
adc
call
shr
xchg
sbb
mov
add
push
cmpsb
pop
dec
xor
int3
lret
push
xchg
fmuls
mov
out
and
int
xchg
mov
mov
outsb
mov
in
ds
dec
loopne
lret
jo
mov
pop
fs
and
mov
mov
aas
dec
cmp
and
xchg
xchg
adc
pop
les
cmp
out
test
incb
test
dec
popf
sarb
fxch
mov
pop
in
in
cmpsb
xchg
jbe
in
mov
xchg
sbbl
int3
adc
cmp
lcall
sub
adc
cmp
in
es
int3
nop
add
lods
xchg
or
inc
push
mov
fsubs
ja
mov
push
rcrb
push
pop
jge
lret
cltd
jle
jp
and
negb
sti
xor
loop
push
cld
in
push
into
lock
outsl
jl
sbb
jae
cmpsb
add
xchg
out
mov
jl
cmpsl
push
jnp
inc
imul
stc
push
pusha
push
ds
loop
loop
push
int
popa
je
mov
mov
pop
ret
outsb
fdivp
out
push
aad
cmc
loope
dec
sbb
adc
mov
out
dec
add
dec
pusha
push
mov
or
loop
out
cmp
and
sarb
cmp
jmp
jns
mov
popa
xor
mov
inc
pop
sbb
pusha
mov
pop
fisttpl
sub
cmp
daa
or
outsb
mov
push
fincstp
xchg
movsb
cltd
dec
pop
push
fsubrs
in
jecxz
xor
mov
leave
add
push
inc
cmp
les
enter
xchg
es
les
test
xchg
call
in
or
xchg
inc
in
hlt
fisubl
sub
inc
sti
inc
repnz
sub
xor
cmp
xor
outsb
sub
bound
lret
lret
mov
sub
inc
dec
out
jmp
dec
inc
lret
or
cli
lret
aad
insl
icebp
test
data16
es
lods
mov
mov
ja
and
enter
add
pusha
dec
in
mov
imul
popa
cmp
mov
orb
dec
or
xchg
adc
jae
test
inc
cli
xchg
adcl
push
rorb
jb
sti
cmp
xor
ret
ss
sub
rclb
xchg
fdivs
fnstsw
mov
adc
in
cmp
sub
adc
fistpl
nop
push
int3
mov
lret
test
mov
hlt
add
push
fwait
cwtl
orb
xchg
pop
lcall
and
dec
jns
in
xor
jmp
ret
mov
cmp
loopne
mov
push
push
mov
adc
mulb
testl
mov
ds
pop
adc
jbe
insb
cmp
adc
fiaddl
js
push
push
mov
mov
fimull
sbb
jns
pop
mov
dec
pop
mov
push
es
mov
xchg
push
lret
sarb
nop
insb
test
inc
cli
lahf
mov
push
cmpsl
mov
pop
pop
xor
cmp
in
ds
mov
sbb
test
bound
mov
repz
mov
jge
lods
icebp
adc
mov
std
lock
and
jg
or
mov
outsl
stos
cs
daa
push
int
enter
sbb
inc
adc
pop
ret
cmp
in
sub
ret
xchg
mov
mov
mov
in
and
and
cmpsb
or
jb
std
add
movsb
jo
outsb
lds
mov
jg
cmpsb
outsl
cwtl
jle
mov
sbb
xchg
mov
cmp
sub
mov
adc
jno
add
lods
in
mov
xchg
push
mov
bound
vfnmadd132ps
sbb
lods
popa
pop
pop
popa
and
push
or
push
shll
fiadds
hlt
xor
pusha
sahf
mov
fdivrl
stc
dec
push
je
sahf
or
sbbb
pop
mov
scas
call
mov
mul
adc
cld
imul
daa
hlt
add
lret
das
addr16
add
clc
xor
ror
sbb
push
sbb
push
push
pop
adc
and
xor
and
popa
mov
pop
je
add
data16
jecxz
cmpsl
ss
rolb
je
xor
mov
insl
lret
cmp
stos
mov
sbb
adc
sbb
hlt
mov
jno
pop
sar
xchg
lods
xlat
loop
int
jae
and
xchg
or
mov
repnz
push
pop
jbe
add
mov
arpl
xlat
decl
insl
out
dec
js
ficoms
out
lret
xchg
pop
inc
inc
xlat
and
mov
lret
subb
in
outsl
mov
xorb
and
lds
sub
xor
rolb
ljmp
mov
aad
add
stos
std
mov
mov
imull
jp
and
pop
pop
or
push
ss
int
rcll
add
inc
mov
xor
lock
adc
daa
test
fistpll
mov
mov
mov
movsb
dec
or
sarl
inc
inc
push
rcll
jmp
sarl
ret
sub
push
jae
xor
jg
test
sub
jb
xchg
scas
incl
loop
pop
mov
add
lods
cmc
fcomps
xor
icebp
gs
adc
cmp
jb
mov
cltd
sbb
data16
pop
into
test
cmp
jg
jp
xchg
rolb
or
jbe
mov
lcall
std
jmp
push
xor
sbb
push
and
inc
cltd
add
punpckldq
push
mov
mov
sub
test
sti
stos
das
jns
mov
repz
inc
pushf
xor
js
mov
sub
stos
stos
int3
int3
sarb
pop
xchg
push
xlat
add
idiv
iret
fildll
rcrl
jns
adc
sub
add
sahf
in
pop
xor
ret
mov
imul
cs
leave
jg
push
fwait
inc
jbe
add
daa
add
mov
and
jae
xor
adc
test
jae
xor
lahf
cli
es
out
inc
aas
mov
inc
add
pusha
fidivrl
jg
push
imul
inc
xchg
pop
cmpsb
stos
movsl
dec
sub
repnz
andl
cwtl
pusha
sbbb
andl
in
ljmp
stos
jg
dec
jns
nop
sbb
movb
orb
fstps
enter
mov
into
push
dec
popl
and
sti
or
push
ljmp
movsl
cmpsl
pop
fcoms
xchg
aad
ret
sbb
imul
add
mov
mov
jns
xchg
ja
mov
mov
js
ds
pop
aad
cli
notb
pop
or
push
mov
int3
scas
adc
jmp
mov
dec
mov
jl
movsl
xchg
pop
jne
cmp
push
test
je
neg
xchg
or
aam
test
pop
into
inc
in
xchg
jmp
jno
adc
inc
stos
loope
repz
test
aam
xor
add
ret
insl
lret
repnz
xchg
cwtl
into
jbe
dec
jl
ljmp
pop
cs
pop
sub
test
mov
roll
fmull
adc
inc
adc
cmp
loopne
testl
mov
jmp
mov
lret
fistl
mov
out
ret
mov
int3
out
xor
cmp
gs
and
sub
jmp
out
lahf
jne
movsl
sub
sbb
mov
ret
mov
pop
sub
push
push
jns
inc
cmpsb
cmpsl
push
roll
jae
fdiv
ja
and
es
jno
add
ja
mov
mov
movb
add
pop
icebp
adc
lock
adc
aam
xchg
push
int
fbstp
pop
push
in
xor
and
push
in
call
mov
cmpsl
adc
addr16
add
jnp
and
loop
addr16
mov
test
rol
push
mov
add
push
dec
cmp
jo
mov
cmp
xor
rolb
les
les
lock
cltd
pop
shrb
pop
push
std
sbb
scas
inc
mov
js
pop
xor
lock
aam
roll
or
xor
and
shl
decl
test
add
fadds
cmp
cli
fs
mov
mov
in
mov
cmp
repnz
push
dec
pop
fisubl
mov
lret
push
fs
cmpsl
pop
push
cli
mov
mov
insb
test
shrb
rorb
dec
and
pop
stos
add
repnz
xchg
cmp
lcall
mov
or
sub
mov
adc
xor
or
sarb
repz
adc
stos
mov
adc
adc
jns
adc
loopne
les
add
mov
gs
int
mov
mov
out
fcoml
mov
mov
add
sarb
daa
push
iret
aaa
sbb
out
xchg
adc
movsl
jp
jae,pn
or
aaa
inc
and
ja
jmp
fcmovnb
push
shrb
dec
and
mov
pop
fwait
mov
dec
mov
dec
iret
imul
outsl
jnp
sub
test
imul
push
sbb
dec
add
fwait
ret
shll
inc
addl
sbbb
test
fcoms
inc
mov
in
sbb
dec
fstpl
mov
sahf
jno
cltd
out
ss
xor
leave
rol
fimuls
gs
mov
cmp
and
add
cmpsb
push
mov
push
ret
sub
cli
sbb
les
rorb
mov
pop
pop
adc
mov
xchg
loopne
pop
loope
pop
js
adc
adc
sub
add
pop
sub
pusha
add
dec
fs
cmc
fldz
lcall
repnz
dec
sbb
mov
ljmp
aad
sub
sbb
ja
push
mov
fs
push
outsb
into
adc
jg
rcrb
push
mov
lds
mov
iret
dec
add
scas
ficoml
out
in
lahf
adc
dec
jle
mov
mov
sub
jno
lods
ror
sub
in
sti
test
add
fistps
std
pop
into
fcomps
mov
adc
test
mov
aaa
xor
dec
inc
loope
jbe
xor
insb
lock
arpl
ja
or
sub
aad
bnd
dec
test
add
sbb
adc
inc
rorl
pop
mov
rcll
scas
lret
lahf
movsl
xor
cli
mov
loop
icebp
mov
cmp
rorb
outsl
mov
aas
and
mov
pop
outsb
rcll
enter
clc
mov
addr16
popf
mov
add
mov
jne
pop
push
push
mov
dec
sahf
popa
insl
push
sub
shlb
stos
xchg
lret
data16
pusha
and
ret
cld
and
int3
jl
xchg
mov
hlt
pushf
loop
scas
push
clc
mov
daa
cltd
and
rclb
fimuls
mov
cmpsb
mov
jmp
addb
and
rorb
les
and
out
xor
enter
sub
mov
fucompp
push
test
mov
repnz
bound
shl
mov
xchg
std
xchg
hlt
rclb
std
fstl
jl
psrlq
xchg
jle
out
and
xchg
mov
bound
out
jg
push
mov
repnz
lea
and
mov
mov
imul
fucomp
sub
xchg
cmp
mov
or
sub
sub
cmpsl
leave
loope
adc
imul
cs
adc
or
mov
inc
call
mov
loope
or
cmp
mov
sub
mov
push
push
xchg
or
fimull
push
dec
out
in
in
and
xchg
and
nop
out
xchg
rolb
hlt
cltd
js
add
lret
ljmp
clc
dec
sub
lds
inc
and
sti
scas
push
lock
mov
xor
inc
cmp
into
jmp
jbe
cltd
pop
xchg
fldl
aas
in
dec
sarb
pop
adc
sbb
dec
arpl
andb
popf
cmpsb
jae
outsl
data16
pop
and
mov
cmp
pop
inc
cmp
or
outsb
xor
pop
cmp
sub
aas
sti
test
lret
and
inc
inc
andl
xlat
sbb
inc
popf
hlt
jae
pop
daa
jne
cmp
xor
xchg
es
scas
sbb
dec
xor
dec
lods
push
into
and
jmp
mov
sub
dec
add
iret
mov
jo
pop
arpl
sbb
stos
test
shll
and
dec
ret
sahf
push
jle
and
sbb
imul
sti
mov
scas
lods
or
jae
cmpsb
push
adcl
push
pop
lds
xlat
inc
mul
sbb
dec
sbb
aad
scas
stc
jbe
pop
mov
and
cld
stc
or
jno
fimuls
fnsave
and
jnp
outsb
or
clc
aas
les
cli
sbb
push
shrl
adc
jp
arpl
cwtl
mov
xor
mov
jne
fsubrs
orb
sbb
xor
roll
push
pop
sti
bound
lds
fdivs
pop
bound
xchg
pop
out
mov
ljmp
jnp
es
or
daa
cld
add
pop
mov
popl
pop
dec
xchg
bound
adc
pop
xchg
xchg
adc
mov
leave
test
cmpsl
push
das
into
lahf
hlt
cmpsb
inc
or
push
lock
stos
dec
clc
dec
pusha
and
cmp
popa
push
inc
arpl
xchg
or
bound
out
or
and
dec
es
pop
insb
cmc
mov
cmp
test
sbb
add
push
rolb
loop
adc
lahf
add
in
push
movb
xchg
pusha
mov
adc
lock
nop
stos
cmp
test
sub
cmp
cmp
test
daa
popa
jmp
roll
or
mov
fistpl
mov
jns
mov
pop
xlat
or
hlt
pushf
jo
aad
hlt
pop
and
aad
std
sbb
cmp
jp
aam
aas
cmp
jae
into
pop
outsb
test
adc
cmpsl
outsb
sarl
or
jp
push
lds
mov
add
pop
jg
mov
mov
push
scas
insb
leave
jp
push
testb
test
mov
sub
sub
roll
into
enter
xchg
dec
dec
push
cmp
fimuls
int
popf
push
pop
mov
and
push
sahf
inc
ret
adc
and
pop
out
adcb
stc
and
shrb
or
cmp
repz
mov
pop
add
sti
xor
adc
addb
clc
sub
mov
je
dec
pushf
out
sub
scas
ljmp
dec
popa
fucomi
out
or
sbb
cmpsb
in
jmp
xor
imul
dec
ret
repnz
push
testl
mov
pop
fwait
cmpsl
push
xchg
sbb
cmpsl
xor
xchg
dec
pop
outsl
jl
xchg
subb
sbb
adc
pop
mov
lods
xor
mov
mov
lret
loopne
mov
or
mov
ret
js
negb
testb
mov
mov
das
dec
das
inc
mov
sub
ss
push
dec
aad
push
icebp
adc
pop
in
xchg
push
xchg
outsb
lret
aas
popa
insb
mov
sbb
and
shlb
imul
mov
inc
and
dec
mov
xchg
dec
mov
int
mov
sahf
or
sbb
pop
ret
inc
out
sbb
dec
cmp
cli
mov
dec
inc
add
into
and
or
inc
int
loop
jp
adc
sahf
cli
cli
xchg
sbb
cmpsb
into
pop
mov
sarb
sub
cld
in
cs
outsl
inc
pop
in
pop
and
adc
aad
std
mov
dec
gs
jo
cld
push
insb
mov
mov
mov
jecxz
add
into
fidivl
imul
push
mov
dec
xchg
pop
lret
loopne
sub
mov
pop
stos
jns
mov
aam
sar
mov
jb
pop
mov
jbe
add
call
icebp
in
gs
sbb
pusha
cld
das
icebp
mov
pop
ficoml
xor
sub
addr16
cmpsl
test
mov
jg
push
roll
ss
hlt
xchg
push
dec
mov
adcb
or
pop
jmp
jl
int3
cmpsb
les
pushf
push
and
stc
out
cmc
aas
enter
mov
ljmp
andb
in
sbb
inc
cmpsb
mov
jae
in
jno,pn
xlat
lea
adc
dec
pop
dec
cmp
push
imul
out
cmp
xchg
mov
inc
mov
das
movsl
pop
mov
call
popf
movsb
mov
cwtl
mov
test
dec
adc
aas
push
pusha
aaa
pop
mov
mov
testb
xor
mov
rclb
cmpsl
mov
cltd
push
lret
push
cwtl
cs
pusha
scas
pop
cltd
imul
push
rcrb
inc
jl
add
movsl
shll
into
add
xchg
outsl
test
int3
ds
adc
mov
das
push
fs
mov
and
xchg
repnz
stos
clc
std
fsubl
ja
lea
pop
pop
lds
sub
xchg
and
inc
mov
or
test
mov
sarb
jbe
mov
cli
movsl
push
mov
or
icebp
xchg
int3
fs
jo
negl
je
adc
and
adc
cmovbe
cld
dec
dec
sbb
enter
xor
mov
adc
dec
int3
or
dec
and
mov
pop
cwtl
daa
dec
imul
mov
xchg
cmp
scas
dec
dec
es
arpl
add
outsl
addl
out
addr16
sbb
fsubrl
aam
cmpl
mov
inc
decl
pushf
jecxz
daa
mov
pop
push
hlt
loop
std
scas
fadd
arpl
nop
jmp
xchg
mov
icebp
lret
ret
insb
mov
xchg
xchg
push
divb
sbb
xorl
adc
pop
andl
jl
test
stc
mov
jle
fcompl
lcall
jnp
push
sub
icebp
jnp
and
push
push
xor
add
or
sbb
push
das
movsl
sub
jecxz
loope
pop
adc
in
divl
inc
sbb
test
ror
imul
repz
dec
arpl
out
xor
cltd
das
jne
add
lahf
fwait
add
stc
sti
push
and
fnstsw
ds
and
mov
jnp
dec
mov
add
int3
lcall
iret
into
jns
mov
aam
push
xchg
pop
fdivrs
pop
sub
sbb
mov
test
jp
jnp
outsl
jno
in
add
mov
call
fcom
dec
cltd
data16
mov
push
pop
inc
scas
and
enter
fstpt
mov
mov
leave
dec
dec
dec
cmp
inc
push
pop
cli
jnp
repnz
js
add
xchg
movsl
fmull
test
ljmp
sbbb
enter
mov
mov
push
push
popf
cmp
push
inc
jns
loopne
pusha
nop
cwtl
pusha
fbld
shlb
push
fldl2t
sti
or
xor
insb
fwait
pop
iret
pop
add
in
mov
adc
mov
fadd
jg
aas
lea
inc
cmpsl
and
je
sub
fwait
mov
cmp
mov
pushf
sub
xor
mov
mov
mov
es
movsl
dec
sbb
lods
and
and
xor
xor
xor
push
ror
fwait
pop
imul
icebp
inc
cmp
push
jl
ja
dec
xor
das
stos
mov
jb
movsl
cmp
dec
cltd
fidivl
cmp
iret
clc
mov
aam
fisubl
pop
xchg
sarw
jbe
jae
pop
fiaddl
pusha
cmp
daa
and
cmc
mov
in
loope
jge
shrb
jnp
jl
inc
lea
and
mov
dec
ds
test
push
lret
add
and
xor
in
cld
sahf
rdmsr
sbb
repz
sbb
jne
dec
adc
cmc
addl
dec
cmp
jo
xor
push
sub
cmp
loop
xchg
mov
repz
in
mov
dec
xchg
pop
xchg
movsl
lcall
sbb
or
add
mov
jnp
fldenv
mov
pop
dec
mov
adc
je
xchg
push
xor
sarl
call
dec
pop
cmp
push
lods
dec
test
mov
rcrb
cmp
xchg
and
icebp
testl
sub
add
xchg
int
imul
jl
pop
pop
cmp
mov
sbb
lret
dec
jmp
push
xlat
push
adc
std
stc
xchg
or
mov
or
hlt
repz
aam
aaa
gs
dec
mov
mov
mov
add
les
inc
xchg
mov
jnp
jae
notl
cmp
xchg
mov
and
leave
fsubl
test
and
push
popl
push
and
iret
shll
dec
leave
ficoms
jg
scas
out
icebp
in
aaa
dec
mov
add
les
xchg
and
inc
aaa
xor
xor
add
mov
rcrb
adc
push
addr16
mov
iret
adc
out
cltd
mov
std
push
adc
xchg
cmpsb
pop
or
int
pusha
fnsave
repnz
clc
lock
inc
mov
xor
aaa
jb
dec
ja
xchg
pop
arpl
jg
cmp
mov
dec
dec
addr16
jmp
sbb
or
outsb
negl
mov
call
fs
xchg
mul
jmp
dec
sbb
lock
mov
xchg
add
cltd
fsubs
add
add
enter
mov
popf
cmc
push
mov
stc
push
or
movsb
je
out
cmp
ret
addr16
lcall
into
push
cmp
lret
in
pop
pop
test
imul
call
adc
out
stc
lcall
add
orb
mov
mov
leave
call
sbb
sub
xchg
insl
mov
cmpsl
mov
aas
iret
xchg
add
pop
pop
xor
or
cwtl
int3
insl
jne
mov
icebp
cmpsl
pop
xlat
sbb
mov
dec
lds
cmp
mov
negl
adc
leave
jbe
or
outsl
fbld
push
mov
dec
xor
xchg
sub
and
int3
and
cmp
inc
fldt
shlb
repz
pop
pop
rcll
decb
stos
push
fcmovu
add
arpl
lret
jns
pop
xor
insl
pop
mov
xor
outsb
pop
jmp
pushf
and
xor
xchg
cmp
pusha
push
xchg
nop
or
test
stos
or
jge
rorl
test
mov
std
call
mov
stos
les
cltd
sub
pop
insb
cmp
pop
mov
xchg
cwtl
cmp
into
mov
aaa
mov
das
repz
dec
bound
pop
nop
and
add
and
std
jbe
leave
imul
lea
and
leave
sahf
popf
bound
inc
or
mov
sub
jnp
imul
stos
stos
repz
inc
mov
xor
scas
out
rcrl
or
and
aad
js
xor
andl
mov
fdivrs
xchg
outsl
loope
sbb
xor
jg
out
adc
mov
clc
mov
inc
mov
xchg
ja
in
rclb
xchg
add
add
mov
cmp
cmpsl
je
xchg
pop
ds
enter
add
outsb
ret
mov
pop
mov
dec
loopne
jae
cwtl
loop
cs
lret
jae
push
fidivs
clc
inc
mov
divb
mov
das
xchg
int
movsb
push
xchg
jmp
scas
ja
jmp
cmp
shlb
ret
jp
into
pop
cmp
xor
movsl
xor
mov
push
sbb
in
fstps
push
gs
mov
jne
stc
loope
aad
and
inc
push
out
dec
stos
and
fistpl
sub
or
frstor
dec
mov
cmp
inc
cli
repnz
mov
icebp
movsl
pop
notl
adc
sti
cmp
xchg
xchg
pop
fsubrp
cli
in
mov
lods
xor
bound
sbb
scas
pop
cmp
mov
lret
mov
cs
add
cmp
or
mov
mov
pop
sti
lcall
lea
xchg
jl
adc
imul
notl
cmpl
add
in
andps
test
arpl
jmp
push
mov
js
mov
cmp
aam
cmp
enter
es
or
add
fstpl
adc
scas
mov
lahf
inc
les
out
out
and
js
lret
adc
xor
sbb
push
lea
aam
pushf
or
sbb
dec
mov
add
sub
and
mov
fsubl
mov
and
pop
cmp
pop
mov
shr
in
sbb
jns
lret
xor
daa
loope
mov
xchg
rcll
cmp
cmc
lahf
pop
adc
inc
pop
push
mov
aam
adc
ljmp
xchg
sub
movsl
jb
and
push
notb
frstor
mov
ret
xchg
add
cmp
js
xor
in
adc
jbe
mov
xor
or
idiv
push
test
sub
cmp
dec
in
gs
add
add
dec
sub
push
xchg
int3
sub
xor
cmp
push
push
pop
and
sbb
ljmp
push
lahf
jnp
push
icebp
lock
imull
das
mov
pop
inc
shll
cmp
dec
fisubrs
rorl
dec
sbb
in
lret
rcll
mov
add
lret
in
add
or
js
adcl
in
mov
cmpsb
pusha
iret
mov
jne
fistpll
movsb
int
dec
hlt
xchg
xchg
pop
insl
mov
ss
mov
push
jo
icebp
xchg
int
sub
pop
dec
pusha
out
cmpsb
and
imulb
sbb
cs
xor
sub
sub
movl
scas
push
jecxz
fmulp
idivb
imul
dec
xor
add
jmp
lods
imul
int3
xorl
adc
enter
adc
xchg
call
fs
jmp
mov
mov
and
mov
ja
inc
fwait
pop
fcmovb
popa
mov
lret
fwait
or
sbb
fnstcw
or
dec
cmpsl
mov
mov
fbld
sub
andb
test
inc
sbb
jns
aas
mov
sub
jecxz
pop
movsl
and
sbb
lds
dec
mov
movl
shrl
mov
cmp
outsb
push
call
cmpsb
test
lds
test
faddl
jge
mov
add
shll
jmp
xchg
pop
or
xor
inc
leave
add
repnz
jbe
cmp
sbb
or
notl
jmp
push
dec
mov
sub
scas
mov
and
pop
das
mov
rcrb
and
js
push
aam
mov
out
lret
push
daa
mulb
fwait
mov
fadds
inc
je
xor
add
out
pop
add
test
jne
aaa
mov
adc
xchg
jnp
lods
inc
out
or
test
cli
les
xor
xor
sbb
mov
mov
wbinvd
ficoms
cltd
cmp
rcl
repz
cwtl
xchg
add
dec
lods
test
sbb
mov
push
outsl
insb
rorl
sub
out
gs
sbb
jbe
sub
std
enter
inc
nop
xchg
and
ret
jg
cmpsl
lock
cmp
adc
into
sbb
push
pop
add
test
inc
push
sub
sti
jo
adc
mov
sbb
jnp
dec
cmp
cmp
cli
mov
fisttpl
inc
jg
loop
bound
sbb
lods
push
loope
mov
or
adc
jl
or
iret
inc
popa
ljmp
push
iret
sbb
cld
scas
cli
cmc
pop
ss
jl
mov
push
xor
mov
sub
call
insb
mov
ja
jb
pusha
cmp
mov
xor
adcl
add
xchg
out
mov
jae
fildll
and
push
push
subb
mov
inc
sub
jge
sbb
testl
fs
mov
gs
xchg
ds
in
enter
shll
sub
push
rorl
cmp
fcomps
aaa
inc
scas
sub
jb
mov
mov
pop
cmpsl
fwait
aam
lret
call
stos
inc
bound
out
and
shll
mov
ljmp
or
lret
bound
ret
in
inc
mov
dec
addl
out
mov
pushf
incl
and
jg
mov
dec
daa
out
das
mov
xor
in
jp
mov
outsb
aam
fs
cmc
jae
jg
mov
xchg
xchg
sbb
leave
mov
movl
repnz
test
je
cmp
jg
addr16
push
pop
and
sarl
notl
xchg
jno
lea
out
push
cmp
inc
and
add
iret
dec
xchg
mov
dec
pop
xchg
mov
popf
xor
and
mulb
push
push
testb
shl
or
xorl
test
cld
push
lret
icebp
addr16
adc
mov
mov
pushf
loope
sub
cmp
xchg
mov
outsb
rcll
fwait
lds
mov
or
je
mov
aam
push
pushf
mov
out
popa
mov
lahf
mov
insb
push
mov
push
or
ret
sbb
push
mov
jae
sbbl
je
std
push
icebp
ficoms
fdivrs
inc
int
push
ds
jno
movl
popf
dec
mov
inc
mov
es
out
sub
jecxz
pop
add
adc
mov
xchg
pop
and
mov
and
cmc
mov
fdivl
int
iret
cmp
sub
aam
mov
inc
cmpsb
pop
bswap
stos
push
mov
inc
subb
cld
nop
mov
mov
jmp
loop
mov
pop
ret
stc
ds
cmpsb
cmp
and
in
push
sbb
mov
mov
push
leave
inc
and
in
call
push
add
cmp
dec
frstor
jo
js
clc
push
ss
mov
in
in
das
lods
clc
out
xor
popa
shll
xchg
add
xorl
or
xchg
mov
arpl
xlat
xor
sbb
movsb
xor
sbb
push
icebp
adc
push
add
sarl
sahf
int
leave
repnz
jo
adcb
mov
fidivrl
inc
stos
in
lret
add
mov
mov
push
sub
gs
in
outsl
push
jns
fs
in
mov
test
mov
mov
cmp
push
out
pop
sbb
add
jge
add
sub
mov
sti
test
push
insb
inc
or
or
iret
jns
pop
xor
ret
and
incb
sbb
movsb
mov
or
inc
popf
jp
daa
pop
add
jns
lea
rorl
loope
xchg
inc
dec
mov
push
inc
jae
jae
dec
in
fiadds
pop
imul
int
sub
jecxz
jae
push
jb
push
fistpll
mov
subl
jle
mov
xor
dec
adc
imul
sbb
into
and
add
mov
add
pop
sub
cmp
cmp
mulb
leave
std
loopne
mov
aad
fxch
and
pop
stos
mov
ret
pop
fs
arpl
pop
xchg
out
test
clc
xchg
dec
jbe
sub
dec
shlb
push
repz
mov
imulb
cld
stos
xor
repnz
cmc
shlb
push
mov
loopne
pop
mov
lea
jnp
push
xor
loop
shl
fisubl
and
dec
outsb
xchg
xchg
sub
sbb
dec
stc
sbbb
jecxz
inc
jge
mov
cmpsb
inc
add
outsb
call
out
or
das
add
scas
fwait
in
cwtl
int3
sub
jmp
cmpsl
aaa
sbb
scas
push
xchg
inc
sbb
adc
xor
push
outsb
in
out
add
insl
clc
and
xor
push
push
aaa
sahf
fstl
ret
test
jmp
movl
mov
lock
mov
negb
in
mov
sbb
cmp
popf
int3
loop
fnop
or
pop
inc
mov
test
hlt
xchg
std
cmpl
roll
jmp
or
sub
pop
imul
fistps
imul
push
movsl
inc
cmp
lahf
xlat
stos
dec
repnz
fsubrp
popa
xchg
imull
jbe
test
adc
test
fsub
xlat
icebp
fdivrs
ret
push
pop
aad
repnz
adc
pop
inc
mov
stos
fwait
or
scas
inc
lahf
hlt
insl
and
pop
cmpl
rcrl
shrl
pop
cmpsb
push
mov
js
xchg
imul
xor
and
xchg
icebp
xor
mov
cmpsb
aad
mov
inc
mov
das
or
mov
fidivs
test
in
mov
shrb
icebp
adc
aam
loop
and
pop
lret
jp
push
pop
xchg
xor
pop
stc
fdivl
xchg
aad
dec
test
adc
inc
loop
mov
xchg
add
pop
xlat
sbb
repz
mov
add
ret
ss
or
jg
xor
sub
jne
push
dec
das
dec
adc
aas
jmp
lcall
dec
pop
push
and
and
ret
xchg
paddsb
adc
lahf
and
pusha
mov
pop
jne
cltd
jge
xchg
add
pop
loopne
cmc
rorb
mov
or
mov
jbe
in
stc
or
fstpl
cmpsl
aaa
shll
xchg
dec
or
cltd
push
je
xor
scas
xor
les
sar
xchg
mov
fs
mov
ret
jb
jl
pop
mov
fildl
scas
mov
loop
outsl
ss
adc
and
dec
aaa
test
loopne
movsl
cmp
test
pusha
pop
mov
mov
xorb
jmp
xlat
lahf
idivl
adc
das
rcrb
pop
pop
int
ljmp
or
rorb
and
mov
call
out
mov
add
enter
stc
mov
lods
jnp
push
adc
ljmp
xor
cmp
cmp
into
push
lds
rcrb
jl
ja
loope
pop
dec
dec
xchg
lret
pop
mov
stos
das
sbbl
push
or
aaa
enter
pop
xor
popf
imul
cwtl
cmc
xor
xor
mov
adc
or
mov
or
rclb
iret
in
in
setp
ret
pop
insb
cmp
jmp
cwtl
repnz
cmp
dec
ljmp
stos
movsl
incb
push
mov
and
adc
subl
dec
xchg
jo
or
ljmp
pop
mov
lret
in
xor
cs
ss
mov
cmpb
push
pop
and
lret
nop
cmp
int3
rorl
test
outsb
xchg
mov
jno
fistl
sub
or
push
jbe
lret
cmc
aam
adc
test
sbb
push
jbe
mov
mov
aas
daa
dec
pop
notl
push
cmp
stos
insl
out
dec
sbb
pop
cs
or
imul
icebp
or
fucom
push
sbb
enter
mov
in
jg
and
xchg
mov
filds
sbb
inc
cwtl
iret
aas
aaa
cmp
pop
mov
cwtl
loopne
and
addr16
and
int3
mov
xorps
or
aas
inc
scas
pop
push
sub
clc
out
fstl
xlat
lret
add
xchg
hlt
mov
inc
arpl
lock
xchg
inc
fsubs
arpl
fsubr
mov
popf
imul
cmp
or
jns
and
leave
loope
pop
add
inc
sub
mov
push
mov
imul
add
pushf
xchg
fs
push
push
int3
stos
loope
hlt
xlat
and
and
in
jg
adc
or
scas
adc
inc
or
pop
dec
push
rorb
into
pop
enter
sub
xchg
int3
cmp
adc
popf
repz
flds
xor
sub
mull
inc
loopne,pt
out
add
mov
mov
idivl
xor
push
hlt
mov
xchg
adc
pop
or
sub
fucomp
or
hlt
pop
pop
add
or
jno
mov
lcall
ljmp
jle
sbb
and
aad
inc
jle
jne
cwtl
mov
cmp
fildl
lret
jo
jg
lods
ja
add
inc
fidivl
pop
fbstp
cmp
inc
sbb
cmpsb
push
push
dec
and
xchg
xor
out
cmpsb
lahf
pusha
mov
mov
fcmovnb
add
notb
mov
cmp
mov
mov
jp
popa
xor
negl
gs
addr16
sub
xor
mov
mov
lret
dec
mov
and
cwtl
pop
sti
pop
mov
pop
test
sub
xchg
aad
push
mov
fs
aaa
pop
dec
insb
je
add
rcrb
or
xchg
jg
xor
xchg
add
nop
in
arpl
orl
bound
mov
loopne
mov
out
xor
cmp
xchg
loope
lahf
andb
inc
sub
push
stos
and
sub
incb
pop
fs
dec
ds
inc
les
adc
in
ja
mov
mov
aaa
mov
sbb
jle
mov
jmp
pop
out
mov
inc
add
jecxz
enter
fld
shr
mov
jmp
sub
into
lds
and
sbb
mov
inc
pop
xor
dec
addr16
stc
jecxz
fsubs
and
scas
pop
xchg
or
jp
inc
outsb
adc
lea
cltd
or
mov
jae
or
les
cwtl
les
test
cmp
scas
push
mov
jmp
pop
dec
negl
mov
into
clc
fwait
nop
das
jmp
cmpl
and
push
pop
mov
dec
xlat
push
imul
aas
stos
push
popa
sbb
jno
mov
pop
adc
mov
add
pop
dec
jg
add
jbe
fsubs
cmp
lea
das
das
lods
shrb
lret
xchg
jg
insl
dec
mov
push
jl
jmp
insb
add
lea
test
pusha
mov
popa
repnz
sbb
ss
and
iret
or
call
mov
imul
sbb
or
and
push
lahf
push
hlt
lahf
leave
ljmp
out
push
add
aaa
or
into
xchg
ja
addb
mov
cmp
lea
divb
xchg
or
aas
mov
mov
inc
adc
adc
adc
repz
mov
pop
insl
inc
imul
jge
imul
push
pop
stos
cmpsl
xchg
xchg
dec
int3
push
hlt
mov
andnps
fdivl
imul
xchg
sbb
xor
pop
cmpsl
rcrb
and
push
leave
add
fcmovbe
cwtl
mov
sbb
rcrl
jnp
dec
adc
sbb
cmp
mov
sub
mov
dec
into
add
repz
shrl
pop
inc
clc
jmp
movb
jge
xchg
sahf
xor
test
fists
mov
lcall
cs
insl
jae
xchg
mov
sbb
rcrl
jmp
mov
jmp
cld
xchg
inc
cltd
mov
push
adc
cmpsb
je
xor
mov
in
xor
shrb
lcall
clc
jmp
cmpsl
push
rorl
ret
jp
xchg
int3
lcall
jo
stos
sub
pusha
sub
aam
dec
icebp
and
mov
popf
cmpb
sub
pop
xchg
cmc
sbb
incb
sbb
push
cmp
cmp
jl
pop
xor
es
jbe
and
xor
mov
or
xchg
ss
aas
lret
jo
jmp
xorl
xchg
jecxz
pop
mov
pop
hlt
sub
ja
lret
mov
popa
mov
jecxz
icebp
and
stos
push
jb
ss
xchg
scas
lcall
xchg
movsl
inc
mov
cld
ja
sbb
test
inc
fs
jp
ud1
icebp
dec
hlt
cwtl
mov
and
aaa
cmpsl
lods
int
sahf
fnstenv
pop
inc
aam
movsb
or
xor
or
dec
inc
jge
repz
dec
or
mov
imul
gs
jnp
leave
fisubs
inc
pop
lret
mov
fbld
hlt
cmp
fistpll
ss
pop
addr16
mov
cmpsl
clc
popa
sbb
mov
icebp
inc
aaa
and
sub
es
xlat
stos
pop
mov
fbstp
dec
fiadds
gs
lock
pop
mov
outsb
jbe
shrl
mov
decl
sarl
inc
mov
ffree
fcoms
int
and
and
mov
xchg
ret
mov
mov
and
ret
dec
lcall
outsb
sub
imul
mov
call
mov
jns
repnz
jl
jae
aad
lods
cli
mov
bswap
sbb
mov
mov
out
ret
push
mov
mov
xor
mov
sub
shll
dec
mov
clc
out
jbe
sbb
shll
xchg
dec
xor
fdivl
lds
out
pop
mov
push
sbb
fisttps
test
jp
in
iret
test
cmp
fwait
jo
mov
loopne
negb
shlb
stos
adc
xorb
loope
mov
add
push
jbe
add
lds
mov
mov
mov
or
lret
jg
lret
and
sti
sbb
pop
xor
xchg
add
pop
cmpsl
push
dec
pop
sbb
shrl
aas
sti
pushf
cvttps2pi
push
popf
aas
push
pop
xor
or
sbb
je
sbb
xchg
sbb
or
clc
or
ds
add
sbb
mov
roll
insb
cmp
addl
cmpsl
push
mov
test
or
mov
mov
nop
stos
clc
repnz
xor
movsl
jo
sub
xor
fcoms
adc
outsb
lret
sub
cmp
sub
enter
mov
xor
jae
fs
nop
add
add
pop
dec
adc
fstpt
fimull
repz
add
loope
sub
mov
dec
inc
scas
ss
fcomp
inc
fisubrs
jp
jb
push
push
dec
xor
lcall
outsl
gs
faddp
js
stc
mov
pusha
outsb
lock
xchg
mulb
int3
popa
inc
jns
frstor
jg
xchg
je
lgs
nop
cltd
iret
fbld
mov
mov
shll
dec
dec
jg
xor
sbb
mov
jge
sti
movsb
pop
jae
xchg
xchg
pop
incb
inc
cs
push
mov
into
fxch
xchg
mov
dec
jbe
cwtl
testl
push
enter
pop
mov
sbb
data16
mov
mov
push
fsubrl
fnstsw
sub
pop
into
xchg
iret
incb
adc
movsb
out
or
xchg
mov
jns
cmpsl
and
outsb
loop
xchg
xchg
push
mov
inc
das
inc
lret
aam
leave
ret
stos
das
mov
enter
jp
mov
mov
mov
mov
std
sbb
or
xchg
shll
shrb
adc
jmp
cmc
imul
imull
iret
rorl
mov
mov
mov
or
push
xor
push
das
push
mov
sbb
mov
addr16
jmp
test
jmp
stos
jns
mov
push
xor
mov
mov
lods
cmpsl
push
xor
aam
xor
xlat
inc
js
das
or
pusha
xlat
adc
repz
xchg
ds
insl
dec
insl
test
sahf
jl
xchg
in
stos
inc
xchg
in
je
or
inc
mov
adc
xor
ss
aaa
out
stos
out
test
fnsave
mov
fwait
test
enter
jge
pop
mov
insl
fcmovu
fucomi
out
jo
fsubrs
loop
mov
sub
stc
out
push
xchg
mov
mov
ss
int
dec
adc
sahf
jmp
vpmovsxwq
lods
sbbl
cmp
loop
fsubrl
mov
arpl
inc
jge
in
mov
sub
in
sub
mov
js
push
xchg
imul
push
das
push
fs
bound
pop
sar
stc
pop
imull
adc
mov
or
pop
sub
int3
cmp
xor
in
mov
cmpsb
xor
adc
and
lret
pushf
push
mov
jl
std
mov
jle
shll
jecxz
inc
xor
pop
cmpsl
dec
mov
clc
mov
jo
mov
jmp
aad
pop
mov
mov
or
dec
sub
lahf
loopne
outsb
jns
xchg
into
sub
xchg
lock
gs
inc
cmp
add
cld
js
and
cmp
adc
cli
sub
andl
mov
xchg
push
rclb
outsl
fcmovnbe
in
idivb
jle
and
ret
hlt
and
lahf
fwait
cmp
filds
dec
ss
jle
mov
xorb
lds
pop
fsubl
mov
or
sub
bound
mov
xchg
ret
subb
pop
jecxz
out
xchg
hlt
negl
mov
mov
inc
cs
add
aad
inc
mov
xchg
movsb
mov
jno
fwait
insb
sub
call
int3
push
sahf
aas
inc
jbe
xchg
adc
dec
mov
sbb
out
pop
jo
pop
inc
roll
rcrl
push
mov
jo
mov
in
lds
mov
repnz
dec
ss
scas
jp
push
push
bound
add
mov
in
pop
gs
enter
add
inc
clc
ficoms
dec
inc
fwait
popa
pop
and
push
popa
call
cli
std
adc
adc
cltd
jbe
mov
out
add
sub
lret
pop
sub
sub
outsb
inc
fcomps
lock
sti
ret
loope
aad
adc
mov
adc
cmp
lods
lods
bound
jge
mov
out
mov
inc
xor
cmc
sar
jl
dec
insl
stos
imul
push
push
fucomip
lods
xor
mov
mov
pop
addb
out
xchg
subb
shrl
xlat
pop
pop
cmp
pop
mov
mov
sub
xor
bsr
jg
lahf
xchg
andnps
sub
insl
movsb
xor
ja
sub
call
cmp
xchg
mov
jl
js
popf
nop
aas
or
mov
fwait
sbb
in
aad
jbe
shll
jno
dec
or
add
mov
pop
shl
add
add
inc
rclb
pop
nop
push
rorl
mov
int3
subl
out
loop
dec
sub
mov
cmc
inc
inc
mov
cmp
pop
pop
and
adc
push
xchg
mov
frstor
ror
fldcw
push
cmp
out
push
xchg
ss
js
clc
ja
mov
dec
cmp
ret
ds
stos
lock
xor
shl
inc
movsb
insl
pop
nop
cs
inc
cmpb
shlb
hlt
testl
int3
repz
dec
dec
cs
idivl
push
sub
xchg
addr16
dec
push
pushf
push
fwait
inc
shrl
in
push
mov
cwtl
in
ret
mov
fwait
std
out
jo
xchg
cmpsb
xchg
xlat
and
loop
and
mov
sub
lods
sbb
lcall
pop
and
lods
cwtl
push
mov
movsl
jle
in
inc
icebp
push
mov
pusha
jp
out
inc
push
dec
loope
in
mov
dec
mov
out
ljmp
popf
scas
mov
mov
cmc
bound
imul
cmp
cmp
add
sub
sub
dec
outsb
hlt
ret
cmp
push
int3
dec
push
mov
pop
sub
call
insb
aam
in
sub
jno
and
cmp
xchg
inc
xchg
in
clc
pop
push
nop
lahf
xorl
fiaddl
xor
add
jbe
dec
cltd
push
xor
int3
imull
aad
xlat
jmp
mov
push
or
ficomps
loopne
les
xchg
ret
inc
xchg
lret
sub
mov
ret
scas
dec
test
sub
sbb
cmp
mov
aam
inc
adc
mov
pushf
mov
in
jmp
hlt
popf
ljmp
mov
cmpsb
mov
mov
add
mov
push
ret
xor
push
ja
xchg
ss
test
push
in
cmp
dec
je
les
test
flds
cltd
dec
in
add
movl
mov
mov
xchg
sub
jno
cmp
add
mov
fwait
daa
fsubs
scas
out
movb
push
lahf
xchg
fcompl
mov
ss
pop
cmp
hlt
push
jp
scas
mov
repz
mov
ss
pushf
xor
stos
pop
cmp
cmp
mov
outsl
jo
add
cmc
inc
es
push
pop
pop
imul
inc
in
jecxz
lods
xor
add
stos
sbb
pop
jno
mov
int
pushf
xchg
xor
adc
dec
mov
push
shrl
add
in
and
mov
and
inc
addr16
mov
leave
lret
data16
push
pushf
push
mov
xchg
or
mov
xor
adc
std
mov
push
in
and
ss
jecxz
pop
xchg
add
int3
pop
add
bound
ja
cmp
adc
pop
mov
jns
mov
cmp
lods
add
inc
push
mov
dec
adc
ljmp
sbb
nop
mov
inc
xorl
jae
adc
scas
dec
push
mov
js
mov
bts
inc
adc
sbb
decb
fcoms
shll
mov
insb
jbe
hlt
mov
lds
cmpsb
mov
ss
push
pop
inc
adc
imul
push
arpl
mov
stos
sub
or
add
in
add
sbb
fchs
out
lods
inc
sub
pop
jle
add
test
jno
clc
aas
or
nop
xchg
dec
pop
sub
fucom
and
mov
and
fimuls
sub
and
int3
cmc
dec
and
gs
adc
or
ficoml
mov
sub
sub
stos
outsb
adc
movsl
jb
push
outsw
adc
xor
lret
and
int
insl
mov
cmp
cmp
dec
xor
movsl
sub
inc
rorb
sub
fcoms
sbbb
cmp
inc
cmp
xlat
cmpsb
sub
icebp
sbb
lea
or
add
mov
enter
jmp
lcall
fldenv
ss
arpl
insb
mov
popl
imul
lods
sub
adc
lcall
dec
out
xor
or
lret
add
pop
pop
sub
cmpsb
xchg
sbb
mov
push
fcoml
pop
pcmpgtd
pushf
push
notb
mov
sbb
sub
arpl
xor
cwtl
cwtl
pop
adc
js
add
pop
imul
fldl
ljmp
inc
mov
ss
xor
mov
cmp
xor
lret
inc
leave
ljmp
sbb
lods
dec
mov
dec
cs
lock
dec
cmpl
pop
fsts
adc
jmp
ds
xor
or
aam
mov
mov
pop
sbb
out
les
xor
cmp
cmpl
cmp
rolb
lods
sbb
cmpsb
and
adc
pop
inc
loop
xor
push
mov
fst
mov
mov
sbb
data16
movsl
jnp
and
repnz
jnp
andb
pop
jp
push
ds
lock
insb
fstpl
es
mov
pop
and
push
sub
add
add
jae
mov
xor
cmc
gs
clc
icebp
sub
sbbb
int
in
add
xchg
movsl
cs
xchg
cmp
push
inc
in
sub
mov
xor
and
xchg
or
aam
xchg
pop
shll
ja
push
sub
push
les
lods
and
testl
je
pusha
ficoml
mov
mov
and
adc
xlat
sub
pushf
adc
push
mov
sub
xlat
sbb
cli
test
movsb
scas
insl
sub
pushf
js
jo
xchg
xor
int3
stc
xchg
xor
pop
out
mov
fwait
jle
mov
jmp
jl
sbb
cld
cld
inc
xchg
ret
mov
ret
fmuls
int
dec
inc
dec
xlat
mov
sbb
add
add
xorb
sub
adc
dec
or
jb
test
mov
sub
data16
xorb
popf
or
cmc
cmp
movsl
dec
lahf
sub
push
cmp
inc
lods
rcll
and
dec
or
inc
inc
dec
cmp
add
push
or
push
xor
leave
icebp
or
in
ret
stc
add
mov
arpl
pushw
sub
sub
mov
int3
adc
or
xchg
push
loop
stos
out
and
inc
adc
jo
fisubs
lret
aas
xchg
js
int
pop
mov
arpl
mov
jno
sub
pusha
fidivs
std
fnstenv
add
mov
in
sbb
sbb
and
mov
push
fldcw
push
jp
daa
ret
leave
or
in
mov
push
int3
sbb
xchg
adc
inc
xor
filds
sub
mov
std
pop
in
pop
cwtl
stc
xor
jecxz
xor
dec
dec
inc
les
fldenv
mov
paddsb
int
push
int
push
xchg
mov
or
cmp
mov
sbb
andl
cmpsl
sarl
in
mov
or
sbb
push
cld
movsl
daa
inc
lock
pop
lcall
and
outsb
dec
adc
arpl
pop
jo
fstpl
int
adc
mull
repnz
cmc
in
punpckhdq
mov
scas
jge,pt
mull
add
es
sbb
out
pop
inc
int
stc
lret
mov
shl
xchg
lret
mov
cmp
nop
push
sbb
cmpb
pop
and
mov
stos
mov
mov
shl
xchg
cwtl
aas
fadds
das
outsb
mov
adc
popa
pop
hlt
js
or
xchg
mov
sbb
mov
xlat
push
pop
inc
push
xor
mov
sti
pusha
jo
push
jmp
mov
mov
dec
cltd
loop
add
into
lock
jmp
jns
divb
sbb
mov
or
sbb
jmp
out
push
sub
sbb
arpl
cmp
xor
dec
jmp
hlt
pop
cmp
std
imul
xor
lret
push
ds
mov
pop
out
faddl
mov
and
dec
jle
les
push
jl
xchg
and
sbb
inc
ljmp
movsb
mov
fs
jle
mov
addr16
mov
arpl
call
sub
xchg
and
pop
orl
sbb
call
mov
out
mov
push
lahf
jl
cwtl
fiaddl
icebp
idivl
out
xor
jp
leave
fdivrs
test
xchg
dec
add
mov
scas
mov
ss
sub
push
and
mov
mov
clc
sub
shr
jge
pushf
adc
dec
aam
lock
push
enter
dec
stc
inc
jge
push
sbb
dec
push
aas
push
enter
jbe
sbb
add
ret
push
sbb
arpl
mov
inc
jl
jbe
xchg
cmp
roll
adc
add
mov
xor
pop
ficoms
push
mulb
lret
not
mov
cmc
test
jge
hlt
pusha
jae
add
outsb
jbe
lret
adc
pop
dec
sub
push
ds
dec
vmovups
mov
and
icebp
mov
xchg
mov
or
inc
loopne
adc
lahf
cmc
push
jbe
sbb
and
jp
inc
ja,pt
adc
out
call
outsl
in
fcoml
ud1
mov
pop
jne
loope
cwtl
mov
cmpsb
pop
sub
loop
mov
out
push
lret
in
inc
pop
dec
leave
xor
mov
mov
pusha
xor
ljmp
stos
mov
xchg
aaa
scas
cmpsb
dec
jbe
push
fsts
mov
sti
mov
xchg
lods
pop
in
and
loop
clc
and
je
pop
jecxz
xchg
pop
push
test
and
clc
inc
subb
sub
cwtl
decl
les
mov
xor
repz
fs
data16
push
xor
out
pusha
jo
inc
pop
pop
and
adc
mov
lcall
scas
repz
dec
jae
gs
push
lret
lods
mov
repnz
push
sar
lea
stc
ss
mov
jne
cs
sbb
xor
cltd
mov
push
cmpsb
and
mov
out
and
in
lock
sbb
dec
cli
adc
int
sub
dec
cltd
shrb
fadds
lret
repz
jo
popf
fs
testl
test
jbe
jl
dec
fs
sub
add
outsb
push
xchg
movsb
or
xchg
sbb
mov
jnp
fs
pop
ret
loope
xor
adc
lods
adc
arpl
mov
rcr
mov
jb
loope
out
js
cmp
fbstp
push
scas
jle
stos
xchg
adc
dec
rorl
ljmp
dec
pop
mov
lcall
rcrl
mov
sub
inc
hlt
xor
out
jae
mov
call
inc
aaa
mov
test
movsb
icebp
fimull
negb
in
mov
push
mov
push
adc
sub
xchg
test
fidivrl
pop
loop
sbb
dec
add
ret
sbb
pop
pushf
shll
lcall
xlat
or
sbb
xchg
and
sbb
in
jb
movsb
ret
lahf
popf
insb
aam
or
sub
fimull
pop
das
mov
dec
dec
and
mov
int3
fwait
jle
mov
dec
push
cwtl
mov
lods
ss
out
jne
inc
jns
leave
sub
jb
sub
add
jg
les
fcom
lods
sbb
aad
pop
stc
orl
movsb
pop
stc
daa
insb
jg
adc
adc
fidivrl
dec
jle
or
cwtl
sub
sbb
outsl
and
fcomps
dec
repz
cmp
mov
cmp
es
xlat
xchg
or
repnz
shr
or
popa
sub
pop
repnz
push
outsl
in
iret
mov
movsb
push
jo
xor
fcoml
jne
mov
leave
mov
mov
and
faddl
dec
xchg
les
add
mov
push
xor
jno
mov
subb
jo
push
push
cmp
mov
xor
int
js
lahf
ficoms
xchg
popa
jle
pop
cmp
std
sbb
aas
inc
rolb
in
pop
in
fisttpl
cmp
test
push
adc
test
ds
dec
sub
and
inc
js
rcll
adc
cmpsl
leave
lds
xlat
dec
fucomp
popa
lahf
ror
fsubl
les
push
rorb
inc
sub
sub
xchg
add
xor
xchg
sub
ret
pop
mov
push
rol
mov
add
fnstsw
test
jne
pop
pop
sbb
xor
push
aam
gs
mov
mov
lcall
jl
pop
sbbb
mov
sbb
mov
sub
inc
data16
jmp
push
cmp
sub
repz
lds
pop
in
lret
jnp
test
fcmovne
popa
int3
cmp
pop
sub
jmp
pop
xor
push
sub
jl
fstp
and
mov
jge
add
mov
and
imul
int3
pop
iret
arpl
pop
xchg
popf
mov
pop
leave
pusha
inc
mov
mov
jo
rorb
jae
lock
mov
scas
jle
and
push
imul
leave
push
adc
cli
xlat
jge
sar
xor
inc
inc
or
mov
fistl
cmp
in
int
lods
cmpsb
sbb
outsb
cmc
iret
xor
or
xchg
cld
xchg
mov
loop
inc
es
or
pusha
roll
adc
cmpsl
jge
xor
lods
dec
mov
testl
add
pop
das
inc
cltd
xchg
inc
xchg
lret
popa
push
xchg
pop
packssdw
xchg
pop
mov
inc
enter
pushf
aad
jg
loope
int3
js
mov
fsubl
xchg
fwait
rcrl
fwait
outsb
pop
xchg
dec
popa
push
les
push
cmp
scas
mov
mov
mov
or
add
loope
mov
movsb
mov
sbb
pop
movsb
jb
mov
add
push
xor
jo
bound
xchg
lods
orb
cmpsb
fistl
int3
adc
test
je
test
adc
movsb
sahf
add
cmpsl
ja
inc
xchg
adc
push
jb
and
rep
mov
call
lret
insl
jo
orl
push
fcoms
inc
mov
ret
or
test
jg,pt
fsubrs
int
shll
lea
jns
lds
clc
lods
add
xchg
pop
movsb
mov
add
push
push
cmp
pop
inc
cli
inc
stos
mov
jp
fmuls
adc
push
xchg
lock
xchg
jecxz
frndint
daa
rcrl
mov
sarl
pop
pop
fcom
cs
test
rcrb
mov
adc
outsb
ljmp
pop
mov
inc
loope
dec
dec
outsb
push
outsl
and
adc
hlt
adc
leave
pop
fwait
loop
out
push
cltd
xchg
icebp
mov
mov
test
daa
adc
js
js
scas
mov
outsl
sbb
shlb
cmpsb
rcrb
fsubrp
call
pop
sahf
movsl
sbb
mov
mov
into
call
pop
dec
cmp
lret
add
rorl
cmp
inc
push
pop
les
ret
add
test
sahf
fisttps
and
repnz
fsubl
shl
cmp
lods
mov
jbe
jge
lret
stc
mulb
shll
xchg
ret
movsb
das
and
push
cmpsb
xor
cmp
jbe
add
or
sbb
mov
call
sub
inc
mov
loope
into
add
dec
fs
fdivl
xchg
in
js
packsswb
outsb
or
insl
adc
aad
ljmp
out
adcb
xor
ret
jnp
mov
adcl
add
jo
push
aas
into
loope
push
add
jle
in
fsubs
jmp
jle
push
outsl
insl
mov
shll
add
xor
mov
jmp
jmp
popa
filds
repnz
mov
sub
add
pop
lea
pop
push
mov
jecxz
shl
lahf
jb
inc
push
xchg
inc
cmp
sbbl
mov
psrad
clc
dec
adc
cmp
pop
pop
mov
ficoml
pop
pop
push
stos
cmpsb
ss
push
jmp
mov
cmp
subl
adc
cmpsb
incl
stos
fmuls
out
sbb
cmpsb
add
insl
addr16
mov
xchg
jmp
lods
iret
mov
mov
rcrb
outsb
sub
mov
mov
xchg
inc
jae
sbb
sbb
out
aam
cmp
outsb
ds
roll
add
out
test
aam
sub
iret
xchg
sti
aas
jge
xchg
xor
pop
cmc
or
inc
mov
cmp
stos
adc
dec
and
hlt
mov
mov
mov
test
xor
stos
sub
stc
js
ja
stos
or
sahf
enter
inc
and
or
fcomps
push
cmc
stos
stc
push
sub
and
loope
cmp
mov
stos
fst
out
fwait
adc
aam
pop
movsl
mov
das
gs
pop
jnp
mov
sarb
dec
cmp
dec
out
push
push
jl
jns
mov
ret
add
outsb
jmp
mov
mov
jnp
mov
mov
push
repnz
stc
jl
dec
les
push
fildll
push
fists
push
and
and
iret
jl
jmp
push
and
fcompl
out
outsb
push
sub
add
call
and
ljmp
lods
or
es
sbb
xchg
gs
mov
push
fs
xchg
jp
adc
add
pop
pop
ret
sti
xchg
fisubrs
mov
mov
lock
mov
add
cmpb
sbb
ficoml
cmp
aad
scas
clc
or
mov
scas
pop
pop
mov
pop
mov
mov
pop
es
lods
push
jnp
jb
xchg
jbe
push
ds
int3
mov
pop
fwait
inc
enter
inc
mov
add
cmp
add
xchg
lret
imul
loop
push
sbb
out
pop
cmpsl
int3
mov
jle
push
std
push
lret
pop
sbb
iret
xchg
imul
into
adc
jl
pop
jle
pop
fs
pop
ret
shll
cmp
inc
pop
jl
sarb
sub
popa
ds
cmpsb
push
mov
enter
dec
dec
movsb
add
cwtl
int3
add
and
pop
jge
incl
add
sbb
dec
dec
mov
add
lcall
dec
out
sbb
ljmp
pop
scas
push
jl
out
shll
lret
mov
cmp
dec
test
mov
mov
addr16
cmpsb
test
sbb
mov
cmpsb
sub
add
mov
dec
cmp
daa
mov
cmp
ret
pop
test
mov
or
ja
cmpsb
out
adc
adc
adc
xchg
shll
cld
addl
dec
xor
push
repnz
sbb
mov
push
push
aaa
mov
jp
loopne
repz
xlat
cwtl
mov
adc
lcall
arpl
rolb
int3
loope
adc
sub
movsb
sbb
into
inc
lds
inc
mov
push
imul
jb
cmp
lds
loopne
leave
fistpl
leave
jl
mov
and
int
pop
jp
cmp
xchg
or
cmp
lods
sahf
mov
mov
xchg
loop
in
adc
xchg
pushf
std
push
insl
dec
xchg
cmp
je
dec
addb
xor
mov
scas
jg
imul
add
pusha
imul
inc
fstpt
addr16
fiadds
mov
push
mov
iret
add
lahf
shlb
xor
mov
mov
sahf
ret
scas
adc
jns
mov
push
cmp
shll
xor
sub
cmp
and
stc
mov
dec
xor
into
pushf
mov
cld
mov
or
adcl
mov
shll
push
pop
lds
jb
xchg
jge
sub
push
in
call
out
xchg
icebp
aaa
pop
adc
into
dec
out
mull
jnp
xor
pop
loopne
pop
ret
mov
mov
icebp
pop
notl
cli
cwtl
sbb
cmp
in
jmp
add
xor
jg
mov
pushf
pop
inc
pop
cmp
lcall
mov
pop
mov
insl
xchg
xlat
xorl
adc
scas
jnp
cld
push
add
lds
inc
out
xchg
out
test
pop
fstps
or
jl
adc
out
movsl
xor
stos
jl
mov
dec
pop
dec
icebp
dec
mov
stos
loope
xchg
test
je
sub
xchg
adc
popa
sub
cmp
or
jae
sbb
mov
cwtl
jb
mov
imul
inc
xchg
jnp
sahf
sbb
add
aam
jmp
mov
cmp
mov
lea
bound
fbld
mov
and
mov
loopne
xor
mov
lds
fldenv
cld
outsl
push
inc
pop
push
mov
das
push
sbb
and
xchg
movsb
divl
xchg
jmp
or
and
push
mov
adc
sbb
inc
cli
test
xor
push
xor
lahf
fwait
fwait
addr16
int
mov
sbb
std
cmpsl
push
inc
clc
cmp
dec
inc
sub
pop
pop
pop
data16
mov
cmc
jge
and
movsl
dec
add
dec
scas
pushf
mov
call
mov
out
push
and
cltd
cwtl
or
addr16
shr
push
pusha
cld
adc
filds
daa
pop
jmp
mov
icebp
or
sbb
or
and
mov
push
nop
sub
lds
ds
insb
mov
sbb
in
xor
fstpt
pop
adc
cmp
arpl
jnp
aaa
pop
out
sbb
clc
icebp
sub
mov
sbb
scas
outsl
push
adc
jae
jne
pop
fsubr
and
mov
insb
jo
idiv
sbb
jo
add
dec
push
movsl
sub
fidivl
jle
and
dec
lret
daa
loopne
dec
mov
ficoml
in
mov
loopne
cld
push
push
or
movsl
aaa
je
push
shr
pop
xlat
inc
rorl
pop
xor
or
sub
lahf
cmp
mov
mov
in
fistpll
fdivrs
sbb
fmuls
inc
into
or
push
imul
scas
inc
gs
repnz
xchg
scas
jbe
nop
pop
and
loope
pusha
push
jg
jnp
leave
jle
add
push
cld
sub
lea
pop
pusha
in
shlb
arpl
xchg
push
fmull
arpl
add
mov
xchg
lret
pop
inc
sub
pop
mov
xor
add
sub
jb
adc
mov
xchg
push
inc
cltd
lods
inc
cwtl
ret
or
rcr
movsb
icebp
in
sbb
cmpsb
push
xlat
out
xor
out
mov
out
aaa
int
cmp
xor
push
inc
fadds
jge
dec
int
add
adc
andb
pop
inc
pop
nop
inc
add
mov
cmp
xchg
push
xchg
movsl
daa
mov
movsb
jmp
push
sahf
cmp
iret
scas
xor
add
es
sub
jns
cmp
movsb
sbb
iret
dec
loope
scas
cltd
sbb
in
pop
push
fldt
push
and
mov
inc
cmp
test
pop
out
fbld
test
xor
adc
in
xchg
enter
cvtdq2ps
and
es
das
sbb
cmp
push
pushf
ret
mulb
in
xchg
xchg
add
or
fucom
add
xor
dec
addr16
imul
mov
or
movsb
mov
pop
add
add
jnp
ss
mov
movsb
mov
shlb
out
out
dec
cltd
fisttpl
fimull
sub
or
fists
push
adc
cmp
cwtl
aad
dec
cmp
aaa
jl
nop
push
pop
jle
adc
sbb
scas
mov
aam
inc
mov
pop
in
and
or
test
mov
mov
xchg
push
mov
and
push
ja
pop
sahf
aad
int3
call
cwtl
xlat
ret
mov
in
neg
pop
xchg
mov
cmp
cmp
in
and
inc
imul
in
in
mov
mov
ret
push
cmp
and
test
sti
idiv
xor
mov
sti
popf
xchg
lret
dec
loopne
sub
jmp
jg
add
xchg
jecxz
cmp
dec
or
subl
call
ja
mov
mov
sbb
mov
xchg
mov
mov
or
jne
xchg
cmp
mov
scas
push
pop
shlb
loopne
lods
sbb
rep
mov
je
mov
xchg
mov
cltd
sub
pop
mov
sub
cwtl
daa
repz
mov
mov
nop
pop
fs
bound
pop
or
add
xchg
push
xchg
jle
iret
cmc
jne
outsl
jle
call
xor
stos
lcall
pushf
jbe
mov
fs
cld
bound
out
mov
fists
add
iret
es
in
add
sarb
notl
test
cmpsl
inc
out
ds
mov
rol
dec
fisttpl
add
xchg
mov
jae
or
imul
lods
mov
push
arpl
or
mov
cmpsb
inc
sbb
fucomi
xor
xchg
stos
filds
cmp
int3
lds
push
xor
xchg
adc
push
scas
mov
xor
or
push
dec
or
and
inc
insb
cli
rcr
gs
arpl
add
add
rcrl
xchg
jp
fs
push
mul
mov
ljmpw
fisttpll
andb
ds
sbb
xchg
cmp
adc
data16
int
in
xchg
clc
icebp
and
shll
movsb
pop
mov
mov
loop
loopw
xchg
pop
mov
stos
or
nopl
jo
aas
aad
jmp
adc
enter
loopne
sbb
and
lret
pop
pop
cmpsl
sub
sub
imul
cmpsb
pop
xchg
repnz
lds
inc
orb
push
inc
int3
sbb
mov
sbb
adc
int
jb
pop
shl
jp
popa
cmp
ja
cmp
stc
push
cwtl
sbb
nop
movsl
inc
dec
subl
dec
cmp
ja
mov
fldenv
rcr
cmp
jecxz
aas
cli
add
or
and
cli
sti
ja
neg
mov
mov
scas
pop
gs
or
imul
aaa
mov
js
out
mov
out
inc
addr16
test
int
mov
insb
iret
xchg
cmp
insb
push
imull
xor
roll
and
dec
xchg
call
xchg
imul
push
mov
push
mov
test
dec
fidivrl
xchg
cmp
int3
stc
push
jge
adc
dec
add
dec
mov
add
push
xchg
dec
ret
das
imul
jns
ds
sbb
cmpsl
mov
dec
cltd
push
inc
push
fmull
push
pop
jl
xlat
mov
out
ret
icebp
pop
or
scas
ret
ss
inc
xchg
dec
sbb
push
pushf
mov
push
sahf
leave
scas
cmp
test
xor
insl
cmp
cmp
imul
int3
test
push
call
addr16
mov
call
xchg
mov
cmc
or
xor
lods
jp
jne
xchg
jecxz
test
mov
cwtl
sub
ljmp
push
inc
inc
pop
sub
push
push
test
xor
fucom
iret
hlt
push
pop
andl
movsb
mul
rcr
enter
sahf
push
in
adc
push
jmp
push
inc
jnp
mov
int
xchg
xchg
les
fimull
filds
add
jbe
pop
push
jbe
imul
ja
loopne
pop
ljmp
push
not
xorl
mov
mov
fisttpll
and
push
sub
sbb
rcl
jnp
dec
fs
or
jo
int3
mov
mov
mov
in
and
inc
mov
jl
jg
movsb
hlt
jge
mov
call
int
sbb
cmp
mov
mov
cmp
push
lcall
cmp
cwtl
mov
insl
sbb
jb
mov
je
aad
xchg
mov
cmpsl
bound
lock
cmp
and
adc
cmp
imul
cmpsb
mov
sub
stc
jge
sbb
mov
loope
test
arpl
or
xchg
rcll
mov
sbb
xor
aaa
cmp
fucomi
jge
aam
jp
arpl
pop
rorl
mov
and
push
outsl
pop
enter
jge
cwtl
shl
cmp
dec
scas
mov
mov
outsb
out
dec
ret
cmp
push
clc
pop
cmpsb
ret
push
dec
xchg
xor
cmp
mov
mov
sbbb
jne
dec
xchg
add
sbb
sbbl
mov
adc
xchg
jae
aas
loope
ja
mov
mov
and
inc
push
and
adc
and
add
sahf
lcall
dec
dec
or
movsl
sub
fdiv
mov
sbb
mov
popf
jle
mov
ror
and
incl
xchg
ljmp
subl
dec
enter
and
cld
out
push
sub
outsb
push
sbb
push
cltd
or
adc
jecxz
pop
sti
push
sbb
add
mov
xchg
dec
pop
inc
hlt
push
mov
sbb
lods
rcrl
pushf
ss
fisttpl
add
cmp
cmpsl
hlt
dec
xchg
stc
dec
push
dec
mov
cmp
xor
dec
push
dec
cli
ss
or
lea
jns
mov
lock
dec
ljmp
cmp
push
mov
mov
fwait
adc
jmp
dec
or
mov
lret
pop
icebp
scas
mov
imul
movl
push
addl
mov
mov
test
or
or
adc
scas
mov
dec
mov
xor
fisubrs
stos
repnz
mov
add
lret
cwtl
aam
aas
jne
lret
inc
les
sbb
les
pop
ret
sub
ljmp
cmc
jae
mov
xchg
push
mov
push
outsl
movl
mov
add
lcall
mov
insl
or
cmp
popa
xchg
ss
fstl
jmp
jp
lds
mov
mov
loope
push
xchg
xor
push
push
lea
lret
jg
dec
sbb
mov
xchg
push
mov
fsubp
xchg
jns
inc
test
inc
xor
mov
mov
and
cwtl
fsubl
andb
mov
mov
inc
movsl
add
popf
pusha
loopne
push
mov
mov
mov
stos
sbb
adc
lods
cltd
out
out
mov
push
jmp
popa
daa
out
repnz
idivl
cmp
call
mov
add
xor
jnp
push
inc
xor
popf
test
hlt
adc
mov
mov
sub
mov
sub
pop
inc
sub
jno
push
sub
add
rcrb
xchg
mov
inc
push
mov
cli
cmc
jae
push
cmovl
fnstcw
cld
adc
popa
cwtl
rol
stc
dec
sbb
in
movsl
xchg
pop
gs
inc
jns,pn
iret
add
cmp
cwtl
cs
jnp
mov
mov
imul
pop
enter
test
xchg
or
pop
jo
jge
push
fcmovnbe
fdivs
mov
scas
lea
ror
dec
mov
dec
js
cmpsb
mov
xor
mov
cmp
mov
xchg
xchg
xchg
xor
out
js
rcll
push
jns
mov
and
inc
pop
mov
adcb
mov
lods
and
mov
xor
jnp
inc
adc
push
test
jo
lods
push
enter
mov
lret
cmp
adc
dec
pop
repz
aas
or
jb
mov
ss
outsl
jmp
mov
or
outsl
pop
and
daa
mov
inc
push
and
mov
mov
lods
mov
cmp
xchg
pop
sbb
xor
cmpsb
mov
push
mov
sti
adc
push
and
xlat
mov
push
mov
inc
daa
mov
pop
loopne
hlt
stos
inc
jae
xchg
mov
outsl
cmp
jp
adc
call
lcall
das
pop
sar
sahf
xlat
xor
mov
mov
or
data16
sub
out
jbe
aaa
sarl
push
stos
cmp
mov
mov
jmp
repz
cmpsb
push
sub
lea
pop
add
js
cmp
in
scas
leave
push
aad
out
lock
jbe
pop
outsb
shll
mov
mov
not
outsl
cmpsb
pop
adc
in
sub
repnz
xchg
cwtl
or
pop
inc
das
sbb
fwait
or
add
and
push
add
pop
dec
mov
cmpsl
in
dec
iret
cmpsb
fsubr
jnp
shll
mov
dec
mov
call
push
mov
fwait
and
sub
and
sti
sti
dec
mov
or
cmp
dec
inc
gs
pop
dec
push
pop
add
sbb
sbb
cld
cmp
push
xor
pop
les
insb
add
mov
je
fs
xlat
pop
cltd
xchg
push
mov
outsl
add
in
xchg
icebp
inc
cltd
add
add
xor
mov
pop
mov
out
or
decl
and
mov
mov
orl
or
push
outsl
popf
add
push
in
push
xchg
add
jnp
cmp
adc
dec
push
sbb
cmp
push
xor
mov
int3
out
mov
inc
loope
mov
aaa
add
decb
mov
imul
xacquire
out
xor
test
jg
repnz
push
xchg
xor
xor
mov
lret
pop
mov
cmp
imul
or
mov
push
sahf
inc
add
add
mov
data16
mov
and
das
test
mov
pop
movsb
jmp
imul
fidivs
push
scas
jns
aas
mov
fs
or
cwtl
dec
sbb
pcmpeqb
popf
loopne
xlat
sahf
jo
ud0
ja
insb
mov
fwait
sbb
scas
test
pushf
cmc
and
inc
mov
fcmovu
mov
insb
adc
ds
pop
mov
dec
or
rol
sbb
inc
outsl
pop
leave
ljmp
imul
adc
es
sahf
cmc
push
push
sbb
pop
add
pop
rclb
mov
hlt
cmpsl
inc
lds
int
cmpl
movsl
jmp
cs
jge
mov
repnz
outsl
gs
pusha
inc
push
xchg
sti
inc
cmp
mov
or
into
and
add
dec
shlb
in
mov
mov
mov
iret
jmp
xchg
insl
mov
sub
mov
sbb
and
idivb
enter
notb
mov
mov
xor
daa
sbb
cmc
shrl
cmp
movsb
sub
xchg
xorl
inc
scas
movsb
and
pop
or
test
cmp
push
inc
pop
jge
and
pop
add
push
test
push
dec
cs
imul
sub
push
sub
in
and
pop
and
add
push
or
cli
lret
test
mov
cmp
loopne
sbb
or
mov
jge
fiadds
pop
lods
popf
std
inc
idivl
add
leave
lods
xchg
popa
cmp
dec
fdivl
push
aas
jmp
aaa
fsubrp
cmp
popf
movsl
sbb
cwtl
je
add
adc
scas
cltd
add
orb
push
out
add
mov
and
push
sbb
scas
mov
shlb
mov
in
mov
jo
mov
shrb
rcrb
or
mov
push
ret
jo
lret
lds
adc
push
ficomps
jne
shll
push
int3
loop
xchg
in
into
jno
mov
adc
out
repz
cmpsb
jp
add
dec
in
call
sub
stc
test
cs
negl
dec
fiaddl
sub
mov
sbb
inc
shrl
push
imul
push
cmc
pushf
fsubrl
jle
jl
je
mov
xor
fdivl
loop
mov
xchg
loop
jl
mov
icebp
jns
cmp
mov
xor
test
imul
test
fistpll
jg
in
js
outsb
mov
add
jno
mov
sub
xchg
sahf
sub
lds
cmp
xor
and
pop
out
cwtl
bound
sub
cltd
pop
mov
push
xor
mov
cltd
jl
jecxz
faddp
rcr
push
mov
jmp
pop
or
push
scas
xchg
jns
mov
pushf
xchg
into
test
jmp
pop
mov
ja
rcrl
push
cmp
into
imul
int
dec
adc
add
inc
dec
ss
cs
loop
sarb
cmp
push
arpl
xor
cmp
push
mov
xchg
out
pop
push
popa
imulb
add
sarb
sbb
jge
jmp
out
lahf
and
outsb
aas
arpl
pop
mov
mov
das
or
fstl
sub
stos
das
mov
test
clc
imul
mov
js
out
dec
push
xor
lods
xchg
mov
fmuls
sbb
lds
arpl
push
and
ss
lcall
lcall
ss
and
lcall
dec
lds
ss
gs
sbb
das
std
mov
sbb
jbe
mov
loopne
ljmp
or
inc
out
xchg
sti
inc
inc
mov
ljmp
lret
push
pop
int
test
inc
xchg
jno
or
int
lods
or
and
adcb
jns
push
pop
mov
and
out
sahf
aam
clc
jl
fwait
dec
sub
xlat
push
popf
loop
inc
adc
aam
xor
sub
mov
jg
or
mov
jmp
mov
xor
in
repz
cltd
xchg
imul
add
adc
xchg
test
jg
xchg
lcall
mov
and
sbb
int
dec
sub
xor
adc
in
mov
dec
stos
icebp
xorl
je
mov
cltd
jo
lahf
lret
adc
nop
and
xor
ret
push
faddl
stos
mov
cmp
iret
lods
and
mov
call
mov
xchg
in
jg
inc
jno
movsl
add
sbb
sbb
mov
xchg
and
inc
dec
pop
or
out
popf
mov
adc
test
cmp
stos
pop
dec
adc
enter
subl
cmp
inc
out
pop
cmpl
aaa
sarb
fisttpl
jne
xchg
sub
aad
push
lock
cmc
pusha
je
out
outsb
push
xchg
fildll
je
push
daa
fdivrl
mov
stc
out
jb
mov
mov
ucomiss
jl
mov
jne
add
fildl
push
jo
mov
mov
ljmp
sbb
enter
push
sti
pop
cmp
popa
mov
mov
xor
pop
aaa
cld
out
mov
aam
push
rol
ret
int
and
addr16
jle
jl
addr16
mov
mov
gs
cmp
out
pop
dec
fwait
push
mov
mov
adc
jmp
push
pusha
mov
jbe
dec
ljmp
daa
pop
inc
push
pusha
cmp
adc
push
jle
clc
or
or
insb
aaa
jno
sub
sub
repnz
cld
popf
scas
fsubrl
das
js
aas
mov
pop
lret
rorb
test
push
push
mov
std
cmp
lock
xlat
aaa
mov
mov
inc
ds
mov
xor
mov
or
test
imul
lahf
fwait
cmpsl
mov
cmc
std
pop
xchg
ja
repz
sti
jmp
mull
fsubp
ja
fs
xor
inc
pop
jge
testl
adc
cld
inc
lahf
andb
js
sub
aaa
add
push
insl
test
jo
out
popf
push
fwait
push
test
mov
nop
dec
ret
pop
jl
lods
and
cmp
and
ljmp
cli
dec
mov
xchg
movsl
cmp
ss
dec
aam
les
adc
mov
push
arpl
push
xchg
mov
push
jae
inc
mov
test
jb
es
sub
mov
pop
jbe
xchg
sub
cmp
xor
lret
ss
fidivs
inc
fmuls
mov
or
pop
repnz
add
add
ret
fcom
and
mov
arpl
add
pop
push
in
out
push
mov
mov
adc
out
and
popf
and
filds
loopne
or
push
testb
xor
fs
aaa
das
data16
or
das
inc
jecxz
adc
xor
dec
xor
movsb
scas
in
push
lods
or
fwait
push
aas
aam
decl
bound
pop
stos
fsub
mov
adc
and
jle
mov
pop
enter
or
ss
or
mov
xor
outsl
outsl
cli
jmp
adc
cs
test
dec
daa
jp
js
arpl
sbb
andl
arpl
nop
pop
adc
inc
add
mov
push
pop
mov
push
outsl
stos
cmp
jl
push
or
in
pusha
clc
int
pop
sbb
ror
and
jne
xor
or
jbe
jae
je
xchg
loopne
jb
pushf
mov
and
ret
jmp
add
insb
push
mov
int
fidivrl
pushf
push
mov
fst
push
outsb
inc
cmp
cmp
inc
popa
push
push
sub
sbb
aam
test
pushf
jecxz
pop
mov
fnstenv
in
test
dec
hlt
push
test
jae
pop
loope
fisubrs
add
mov
cmpsb
movsb
pop
xchg
mov
sub
or
stos
ja
je
dec
in
js
sahf
filds
rcll
jg
jns
cli
mov
jnp
pop
xchg
aad
cwtl
outsl
shrl
pushf
xchg
cli
bound
pop
pop
fisubl
adc
loopne
dec
mov
or
sbb
call
movsl
jae
inc
mov
mov
ret
cmc
stos
mov
fwait
lea
dec
dec
mov
iret
cmpsl
adc
enter
mov
dec
mov
pop
test
mov
in
and
addl
pop
adc
in
mov
or
movsb
ja
mov
and
dec
pop
hlt
shlb
push
pop
sub
out
scas
ss
shrl
mov
pop
subl
adc
rclw
pusha
jg
mov
xlat
shlb
roll
sub
iret
jmp
fsubrs
pop
adc
int3
mov
in
mov
pop
sbb
int3
clc
cmp
jne
add
xchg
and
scas
add
cmpsb
dec
negl
sahf
lds
cmp
mov
mov
cmp
xchg
pop
test
xchg
cmpsl
sub
push
cli
jg
or
mov
lock
mov
popa
lret
pop
add
mov
callw
lcall
add
ret
stos
rcrb
insb
idiv
mov
xor
rcl
inc
adc
ds
outsl
xchg
sbb
cmp
not
cs
mov
and
pop
fucomip
rcrb
aam
repz
lods
or
inc
adc
addr16
inc
les
adc
bswap
daa
into
mov
sbb
scas
push
jg
or
cmp
xor
scas
stc
pop
rol
fldenv
xor
arpl
pop
nop
push
pop
xchg
dec
mov
jb
sbb
lds
pop
sub
mov
mov
cmp
sbbl
out
pop
jno
mov
push
xchg
mov
out
outsl
jno
inc
adc
in
scas
scas
pop
jae,pn
aam
mov
sub
adc
shl
xor
stc
out
adc
push
lret
pop
mov
sbb
or
les
popa
mov
call
aad
xorb
dec
int
frstor
imul
bound
cs
stos
stc
xor
shll
aas
dec
and
push
rol
add
add
xchg
cmpsb
jmp
stos
add
adc
ret
xchg
jnp
rolb
imul
mov
stc
push
push
enter
adc
push
or
mov
mov
jae
ljmp
inc
mov
pop
clc
mov
jbe
push
insl
add
push
test
pop
lea
mov
mov
cmp
cmpl
test
fistpl
cmp
dec
mov
mov
pop
in
xor
hlt
mov
add
dec
fwait
push
sub
pusha
mov
cs
push
mov
add
clc
adc
xor
mov
and
jmp
jl
push
les
cmp
or
movsl
mov
aad
dec
dec
fwait
and
int3
xchg
fcom
cmp
inc
pop
cmp
cwtl
stos
cwtl
inc
std
cmp
jae
mov
push
fists
imul
xchg
adc
add
in
xchg
push
xchg
mov
in
sub
lock
scas
lea
imul
sahf
ja
xchg
pushf
pop
movsl
stos
push
ret
sub
mov
ss
push
pop
and
call
jmp
into
cmp
sbb
inc
xchg
roll
sub
pop
in
rcr
push
mov
lds
shrb
inc
sbb
and
mov
lret
inc
cltd
jl
mov
inc
cmp
cltd
push
pop
xchg
ljmp
ds
stc
mov
mov
inc
ss
inc
sub
inc
mov
jle
hlt
ljmp
dec
mov
adc
cmp
in
mov
push
sub
movsl
repz
mov
lret
adcl
shrl
outsb
sahf
aam
in
inc
pushf
push
or
xlat
aam
fwait
clc
cmp
cltd
rcl
rorb
loope
and
std
jle
inc
clc
sahf
sbb
sbb
sbb
pushf
cltd
or
adc
pop
pop
movsl
mov
ja
imul
cmp
imul
jo
sbb
mov
notb
pop
adc
xor
in
sbb
push
jl
xchg
fisubrl
jle
xchg
sub
das
jb
dec
dec
out
stos
push
loope
popf
cmovae
adc
sbb
leave
daa
xor
sub
dec
sahf
scas
cltd
pop
jl
imul
fdivl
sub
mov
mulb
xchg
popa
jo
sbb
test
icebp
cwtl
sbb
sbb
cmpsl
nop
leave
leave
movsl
sub
mov
and
sbb
ret
sahf
push
jno
and
arpl
adc
and
sub
jge
jae
xchg
jge
hlt
movb
ja
xchg
lds
jae
cmp
cmpsl
dec
repz
add
adc
mov
jp
sbb
ljmp
mov
fwait
js
icebp
stc
bound
jbe
pushf
mov
xor
popa
xchg
dec
nop
pop
call
enter
jge
sahf
mov
imul
daa
aam
idiv
push
pop
mov
fstps
xchg
lcall
and
in
mov
outsl
rol
cmp
sbb
pop
fidivrl
addb
pop
sbb
inc
sub
cmp
sbb
push
mov
leave
mov
hlt
jbe
and
shlb
dec
notb
mov
pop
xorb
push
out
adc
xor
rorl
pop
fs
sbb
faddl
fldenv
dec
shl
sbb
mov
cmp
rep
jns
int
jle
add
sbb
pusha
jo
ss
js
xchg
scas
jbe
xor
inc
mov
mov
jns
mov
jge
ror
dec
push
test
hlt
out
mov
xchg
mov
scas
js
mov
int3
adc
jo
cwtl
add
sbb
mov
mov
dec
into
xor
add
add
aaa
aas
testb
and
xor
loop
add
sbbb
nop
jno
xorl
mov
insb
loopne
or
lds
add
out
aas
pop
leave
xchg
jg
add
sbb
test
jge
iret
inc
jne
inc
push
daa
cltd
xor
pop
xor
or
pop
xor
mov
sub
lock
xor
sub
cld
imull
mov
pop
xor
lods
and
dec
push
sbb
xchg
jbe
inc
mov
adc
insl
mov
es
mov
cli
add
pop
sahf
repnz
adc
xor
cwtl
lods
stc
dec
jmp
add
das
int3
daa
mov
ljmp
xchg
mov
pop
jo
mov
int
or
inc
pop
and
pop
hlt
ret
popa
vpsubusb
push
clc
mov
mov
fldcw
leave
loopne
pop
sbb
mov
sub
in
mov
scas
sahf
pop
pop
pusha
push
pusha
sbb
cmp
mov
mov
out
xchg
pop
jge
xchg
xchg
loop
jp
cmp
out
adc
add
clc
rorl
sub
fs
test
inc
fucomip
xchg
scas
jmp
ret
pop
std
push
xchg
sar
add
cmc
cli
rcrl
xlat
shll
push
rcrl
adc
xor
fisttps
cmp
sbb
or
andb
icebp
ja
jmp
add
aaa
orl
incl
or
mov
outsb
mov
jns
inc
movsl
loopne
and
adc
jge
push
jo
test
adc
sub
sbb
fldenv
sub
sbb
out
mov
and
mov
mov
fsubrs
ret
loope
fcoms
inc
or
das
xchg
int3
add
arpl
pop
add
jp
xor
inc
ja
and
sbb
jecxz
fwait
in
jae
mov
outsl
sbb
push
or
inc
mov
jecxz
call
xchg
outsb
jns
sub
rcll
fiadds
add
pop
mov
in
jmp
add
cld
repnz
in
push
xor
popa
stos
icebp
or
cwtl
and
or
inc
lret
lds
add
pop
or
push
push
push
rolb
jns
jl
adc
repnz
cmp
pop
or
mov
mov
cmp
xchg
cmp
iret
jae
testb
xor
mov
mov
stos
add
cld
cmc
pop
dec
mov
mov
inc
push
mov
enter
cmp
das
mov
int
sbb
mov
fwait
inc
sbb
xchg
sub
sbb
cmove
adc
or
sub
mov
sbb
mov
in
in
cltd
out
shr
adc
iret
add
outsb
flds
repz
or
add
xchg
sbb
sti
fdivr
movsl
mov
sbb
or
cld
push
jmp
das
and
and
les
jb
sub
out
pause
jae
cli
lret
push
clc
sub
cmp
xchg
shlb
cmp
cmc
call
pop
and
push
insb
outsb
gs
das
cmp
mov
push
lods
ror
mov
jmp
ja
pop
outsb
lds
ds
pushw
fisttpll
aaa
adc
loopne
stos
in
rorb
into
repnz
js
jmp
in
pop
sub
cwtl
mov
out
hlt
dec
xchg
lcall
in
xchg
jg
sub
pop
push
cmp
or
and
dec
pusha
into
push
or
jb
int
scas
inc
mov
ljmp
popa
cld
xorb
call
push
in
cmp
addr16
or
fs
and
adc
and
xlat
add
push
mov
push
and
aas
sub
lock
mov
movsb
aas
shlb
xchg
adc
and
sub
sbb
inc
mov
arpl
scas
or
shl
aad
jae
out
in
add
xor
push
insb
fwait
stos
xchg
cmp
push
push
repz
inc
insb
pcmpgtw
push
cmp
shl
fbstp
xchg
lret
je
mov
mov
cmp
xor
cmpsb
test
push
adc
ret
xor
push
ret
push
or
xor
imul
test
push
cwtl
ss
hlt
aas
jne
jmp
push
out
pop
mov
lea
lock
sub
or
and
pop
jge
sub
ror
or
mov
mov
and
xchg
stos
mov
icebp
es
sub
push
out
inc
out
test
stos
push
arpl
add
repz
mov
aad
pop
sbb
mov
lcall
rcrb
xorb
lods
aaa
mov
fcmovbe
dec
ret
dec
add
xchg
ja
data16
dec
sete
jmp
adc
shlb
pop
add
lods
push
pop
lahf
dec
outsb
mov
mov
fsubrs
ror
fsub
divb
push
fdivs
gs
or
scas
icebp
hlt
push
pop
sahf
sub
rorb
lds
mov
lea
rcll
lock
mov
in
cmc
sti
push
jg
fisttpll
popa
in
pop
push
xor
pop
mov
dec
cmpsb
in
aas
or
cmp
jns
inc
shll
mov
int
das
adc
loopne
subb
mov
xor
and
pop
lret
jg
sbb
push
cmp
ja
pop
mov
outsb
or
std
lcall
add
loopne
stos
add
jg
mov
movsl
mov
sub
push
imul
adcl
js
dec
stc
xor
or
rclb
adc
cmp
popa
push
cmp
arpl
adc
xlat
sarl
stos
js
xlat
mov
jp
inc
test
sbb
insb
xor
inc
cs
cltd
xchg
or
jae
aaa
out
jle
stos
loopne
mov
xchg
loope
out
and
out
mov
xor
arpl
ss
mov
pop
je
insl
cltd
pop
jae
cmp
data16
cmp
int
bound
mov
inc
sub
push
shrb
outsl
adc
mov
cld
repz
and
and
lcall
shlb
and
adc
stc
pushf
sbb
imul
cltd
or
in
xlat
popf
popa
mov
jp
or
idivl
xor
outsb
xor
shll
pop
aaa
cmp
or
lds
adcl
call
jge
addr16
mov
in
mov
je
sub
iret
fnstcw
fidivl
jg
ljmp
iret
loop
push
insb
jp
pop
rcll
mov
sub
stos
mov
jmp
lods
inc
push
je
popl
rcl
mov
subl
repz
mov
pop
or
mov
add
test
inc
aam
jnp
adc
cli
lcall
jge
pop
xchg
xor
ja
jne
add
jbe
fs
sbb
imul
iret
adc
mov
inc
loop
int3
adc
xor
add
push
sub
outsl
and
rclb
inc
jb
clc
leave
cmp
jl
fdivrs
jb
xchg
xchg
adc
xor
arpl
mov
lcall
pop
out
mov
mov
hlt
jne
mov
and
orl
ds
outsb
sbb
xor
rcl
cmp
lock
xchg
cmp
push
loopne
stc
gs
aas
mov
or
push
stos
ja
fstps
or
test
adc
adc
mov
cmp
cmp
mov
testb
stc
inc
cmpsl
jae
mov
jecxz
jge
pop
mov
inc
cs
call
dec
push
xlat
loopne
stc
dec
dec
sbb
insb
ds
add
fcoms
mov
xor
fildll
jns
sub
sbb
jns
gs
gs
push
xchg
push
mov
lods
xchg
rclb
cmp
stos
fisubrs
jl
lods
cs
std
scas
es
js
dec
fs
lock
mov
xchg
push
inc
clc
xchg
loop
adcl
int3
test
rcrl
cmc
cmp
inc
push
push
jne
xchg
shr
daa
add
mov
adc
ficoml
inc
in
xlat
sbb
cmp
ss
lods
sbb
hlt
in
lock
cs
inc
adc
mov
loope
adc
or
out
repz
xchg
sbb
inc
je
mov
jecxz
mov
lret
cmpsb
dec
inc
sbb
push
sbb
ja
mov
mov
add
inc
aam
test
sub
jns
or
push
repz
xchg
mov
shl
sbb
sub
push
inc
aaa
push
add
lahf
inc
ja
adc
in
xchg
dec
dec
ds
mov
xchg
in
jle
stos
loope
pop
pop
imul
push
lret
lahf
xor
dec
shlb
add
loopne
mov
jbe
mov
mov
cmp
lds
jecxz
sub
outsb
mov
cmp
call
or
movsl
sahf
push
nop
movsl
adc
and
pop
add
loope
pop
out
xchg
xor
ja
xor
shl
cmp
push
pop
pop
test
adc
or
dec
and
inc
jnp
idivl
pop
mov
or
int3
lea
jae
mov
xchg
into
daa
into
and
aas
sbb
into
rol
pop
cltd
mov
movsl
xchg
testl
mov
cmp
lock
push
sub
in
sub
inc
pop
mov
out
push
popf
pop
pop
mov
popa
mov
jne
add
pop
enter
insl
mov
jb
in
pop
xlat
fwait
aas
inc
mov
scas
sbb
jnp
dec
xchg
add
in
out
clc
push
mulb
pop
ljmp
test
imul
cli
notl
xchg
mov
xchg
pop
push
popf
js
in
mov
inc
rorb
mov
cmp
rolb
or
push
xchg
xchg
jecxz
sbb
sbb
lret
clc
outsl
adc
pop
push
or
cwtl
push
xchg
cmpsb
and
sub
mov
push
fstpl
cwtl
jne
add
cmpsl
out
call
push
pop
xchg
mov
adc
lds
retw
in
mov
mov
push
aad
fcompl
shl
lcall
out
dec
add
mov
or
cli
mov
incb
jo
mov
or
adc
dec
adc
dec
fwait
or
sub
sbb
sbb
mov
mov
into
dec
lock
aas
into
data16
lods
icebp
mov
stos
lahf
sbb
lcall
repz
adc
das
fdivp
loope
enter
push
jo
add
loop
xchg
fistl
movsl
mov
cmp
sbb
sub
push
dec
fnstsw
lods
jb
add
cmp
call
lods
std
test
test
ja
add
subb
xchg
or
and
into
adc
xchg
add
scas
rcr
notb
mov
out
jmp
pop
das
loope
scas
and
aad
jbe
je
and
xchg
xchg
jno
inc
xchg
iret
inc
mov
pop
xorl
outsl
mov
repnz
mov
rcr
xor
test
test
jl
mov
inc
mov
add
push
popa
jmp
and
sub
insl
daa
push
fcoml
xor
out
ret
or
lret
rolb
fdivl
inc
in
fcmovb
bound
jne
inc
mov
pushf
ja
jae,pt
jmp
sub
lret
mov
lea
pop
scas
mov
stos
sbb
mov
int3
std
mov
xchg
iret
cmp
js
sbb
rcll
subl
call
fbld
xchg
xchg
daa
testb
data16
add
dec
out
mov
mov
pop
aad
icebp
jle
test
imul
scas
fstps
mov
push
ret
inc
mov
or
test
iret
cmp
aad
out
pop
cwtl
call
or
pop
mov
pop
lret
or
mov
outsl
popf
arpl
and
iret
cmp
rclb
cmp
push
ss
lcall
loopne
mov
aad
sub
cmc
rclb
add
out
rorb
sub
cwtl
pushf
adc
mov
dec
and
jmp
js
cmpb
mov
mov
jge
pop
movsl
repz
fisttps
mov
in
mov
jae
sbb
enter
lret
cmp
adc
mov
cmp
push
fs
push
mov
or
cmpsl
popa
insl
jecxz
mov
xor
add
inc
cmp
inc
xor
mov
jl
lahf
cwtl
or
fidivs
dec
jle
fdiv
pop
cltd
add
repnz
outsb
adc
pop
rcll
call
xchg
lods
push
xor
sbb
sahf
add
std
xor
push
jl
mov
jmp
add
and
sbb
inc
mov
add
push
mov
add
cmp
jae
pop
mov
dec
into
push
inc
ja
lods
push
push
or
addb
sub
dec
aas
push
movsb
in
mov
add
xchg
imul
inc
pop
iret
iret
and
in
mov
insb
rcl
ljmp
lds
ljmp
and
shlb
mov
pop
adc
mov
fwait
mov
jle
in
push
lods
jle
mov
cld
rol
sti
flds
loop
mov
sbb
fldenv
fists
sbbl
adc
sbb
outsb
mov
xlat
adc
popf
out
inc
lods
notl
gs
pop
ja
add
mov
and
xor
push
mov
jb
andb
pop
xchg
pusha
cmp
sbb
sbb
popa
outsl
in
push
scas
push
pop
leave
push
mov
out
sbb
or
ret
test
dec
inc
mov
mov
dec
mov
xorl
std
push
lock
dec
sub
rorb
popf
aaa
mov
jb
xor
jae
subl
sbb
xlat
repnz
stc
and
mov
inc
push
bound
sub
xor
and
jne
dec
sbb
fdivl
and
push
daa
outsl
aad
pop
mull
pop
rclb
or
fcoms
dec
das
jae
lock
int
fwait
sbb
addr16
mov
out
add
movl
mov
mov
xor
test
and
mov
in
jg
add
adc
sub
xlat
adc
pop
enter
out
add
sbb
imul
insl
dec
movsl
push
lds
lds
xchg
push
dec
mov
mov
rcl
push
and
push
lea
iret
icebp
addr16
jb
clc
adc
pusha
jnp
in
dec
rorl
push
loop
std
inc
dec
pop
xchg
popa
cld
xchg
add
movb
call
lods
ret
js
sbb
pop
add
movsb
cmp
sbb
inc
lret
insl
scas
loopne
ficoms
sbbl
and
pop
je
bound
flds
lods
data16
in
jmp
push
cltd
lods
inc
sbb
push
mov
popl
dec
and
mov
jne
outsb
and
mov
roll
mov
fidivs
repz
and
idivl
inc
stos
sub
add
rcrb
je
enter
std
lahf
scas
gs
js
cmp
lcall
adc
ljmp
leave
hlt
mov
jne
inc
xor
out
in
loopne
jbe
leave
js
pop
pusha
les
sbb
add
arpl
cmp
push
adc
in
xor
ficoms
fmull
int
fwait
les
movsb
mov
lcall
lds
push
mov
xchg
insb
out
std
push
ret
and
xchg
push
push
cmp
adc
push
adc
dec
mov
dec
mov
lcall
mov
or
cmp
push
sbb
in
ss
lret
xchg
jbe
daa
fsubrl
sub
mov
cwtl
pusha
loop
or
mov
sbb
pop
movsl
adc
mov
mov
dec
test
and
pop
or
in
sbb
push
dec
out
mov
rolb
jbe
or
enter
shld
or
xor
cmp
inc
xchg
insl
dec
cmp
pushf
mov
jae
jge
sahf
dec
test
sbb
jmp
jb
inc
test
stc
fwait
inc
iret
ret
das
mov
or
filds
int
shrb
cmp
xor
mov
inc
mov
test
add
jns
dec
repz
sbb
cmc
inc
xchg
and
inc
jl
ror
and
add
pop
in
mov
or
insb
das
mov
and
pusha
popf
mov
leave
out
dec
add
and
stc
mov
outsb
xchg
lea
out
sbb
stc
scas
imul
xchg
in
inc
sub
cmpsb
gs
shll
mov
lret
les
icebp
outsb
and
icebp
push
aas
jge
inc
push
jg
push
or
cltd
push
loope
fadds
push
and
xchg
into
push
fnstsw
mov
inc
jecxz
mov
std
scas
and
in
dec
pop
pop
and
fs
inc
adcb
cmpsb
es
add
test
movsl
repnz
adc
repz
sbb
ljmp
inc
dec
insb
adc
pushf
push
push
push
cmp
sub
icebp
test
mov
gs
movsb
jns
jg
jl
jne
in
pop
jo
out
sub
push
xor
imul
mov
lea
xchg
ficoml
nop
jbe
adc
sbb
adc
in
add
aaa
mov
xchg
jmp
insb
adc
xchg
cld
add
cmpsb
std
adc
inc
mov
cmpsl
push
dec
jno
add
mov
dec
jnp
movsl
jecxz
int3
imul
push
enter
rclb
lds
adc
dec
das
aas
mov
mov
push
cmp
adc
nop
push
pop
push
jns
std
cmp
sub
jae
inc
inc
pop
hlt
ds
es
repnz
mov
mov
pop
cmpsb
ficoms
xchg
pop
das
ljmp
push
notl
mov
mov
pop
lret
mov
sarl
aam
insb
adc
pop
mov
mov
ficoms
cmp
mov
lcall
jl
call
sub
gs
cltd
call
fcomip
sub
xor
cld
loopne
cmp
pop
call
sbb
inc
lret
xchg
jns
sahf
fcomps
jg
adc
fs
shlb
add
std
pop
imul
cmpsl
mov
repz
out
adc
das
pop
push
push
mov
mov
loop
fs
aad
cli
and
cmpsl
je
ror
mov
les
mov
xor
adc
aad
jo
fldenv
adc
dec
outsl
mov
and
add
jnp
aas
or
sahf
sahf
test
in
arpl
and
hlt
stos
in
clc
out
test
sbb
test
jb
add
jle
jne
pop
cmp
scas
outsl
jmp
js
xlat
xor
aaa
outsl
loopne
mov
lods
fimuls
inc
pop
hlt
ret
push
xchg
dec
adc
fcoms
subb
frstor
cmp
sbb
cmpsl
pop
add
adc
pop
sysret
mov
push
flds
and
mov
jo
inc
push
cli
mov
push
jge
out
mov
add
fbld
movsb
scas
inc
sbb
sub
sub
test
mov
xor
inc
fidivrs
sti
das
add
adc
jecxz
incb
sbb
hlt
cs
ret
loop
rcl
mov
jae
aad
mov
sahf
sti
inc
fmulp
jb
push
pop
aas
aad
jo
iret
jg
add
xchg
dec
test
fdivrp
lods
adc
push
mov
pushf
mov
sub
xchg
dec
mov
fisubs
pop
xor
lcall
gs
es
loop
inc
imul
and
push
xor
mov
jns
pop
jmp
xchg
or
adc
adc
jbe
cs
inc
cli
and
mov
mov
fistps
xor
ds
sub
pop
push
mov
std
cmpb
ja
mov
sbb
movsb
mov
xor
nop
xor
stc
stc
sbb
aad
xchg
cli
icebp
test
pop
inc
sahf
fs
je
sarb
xor
insl
adc
insb
add
fnstenv
fsubr
mov
inc
mov
add
lods
or
mov
and
cmc
and
fmull
xor
lret
or
jle
and
cli
push
clc
and
fwait
movsb
fldl
int
andb
sahf
xadd
sub
sbbb
push
add
clc
je
pushf
rorb
mov
sbb
ror
bswap
push
ja
arpl
insl
mov
or
or
jecxz
outsb
pop
notb
je
cli
mov
jle,pn
and
jns
ljmp
inc
xor
or
add
test
sub
lds
jge
dec
adc
sbb
cmpsl
imul
lahf
fsubrl
adc
or
lods
inc
xor
add
fcomi
in
mov
sbb
test
jne
cwtl
aas
mov
sub
jp
dec
mov
cwtl
xor
jne,pn
adc
les
xchg
or
rorb
fxam
je
inc
jb
inc
mov
jecxz
push
dec
cmpsl
nop
cli
pushf
xchg
or
sarb
dec
je
xchg
jnp
enter
arpl
mov
in
ret
mov
outsl
les
pop
lcallw
push
ficoms
cmc
mov
fwait
xlat
rorb
dec
sarb
lock
out
out
adc
repz
lock
into
push
bound
add
ja
shrl
dec
cltd
jne
neg
sbb
or
xchg
pop
push
push
insl
sbb
data16
push
ret
clc
pop
mov
mov
les
cs
pop
and
out
and
repnz
sbb
add
push
jne
out
shll
and
ss
jne
pop
fisubs
pop
dec
add
sub
cmp
call
ret
daa
mov
jbe
dec
cmp
mov
push
xlat
mov
mov
adc
outsb
aad
scas
and
push
xor
lds
pop
dec
and
out
int
dec
rdmsr
push
jbe
repnz
mov
addr16
pop
insb
jl
insb
cmp
lock
dec
std
addl
fwait
jo
lcall
addr16
loopne
cmp
cmp
mov
or
xchg
pop
in
xchg
mov
inc
push
cmp
mov
inc
fcmovbe
dec
mov
test
jp
shll
cmpsb
sub
test
rolb
inc
andl
xor
push
mov
sub
test
sbb
in
adc
mov
xchg
add
push
cld
data16
popf
fsubrl
rclb
mov
dec
xorl
daa
dec
and
leave
dec
pop
test
adc
dec
imull
cmp
mov
imul
pop
dec
mov
insl
lahf
push
les
cmc
pop
sti
inc
push
scas
repz
xchg
xor
fs
xchg
mov
mov
popa
imul
adc
nop
jns
imul
seta
ljmp
inc
sbb
dec
pop
push
fistpll
lea
adc
add
jmp
adc
pop
mov
fptan
loop
iret
sbb
and
mov
dec
inc
sarb
push
and
mov
lock
stos
daa
std
ret
xchg
xchg
mov
xchg
aaa
sbb
or
fistpl
fcompl
dec
js
aad
mov
and
mov
inc
or
add
icebp
loope
clc
sub
mov
push
mov
in
pop
fcomi
scas
mov
test
popf
push
es
test
movsl
outsb
ja
ss
movsl
add
pop
aaa
aaa
ljmp
jo
loop
jns
orl
insl
jb
shrb
mov
or
xor
jmp
cld
lret
inc
in
xchg
xchg
and
mov
add
sbb
lea
ret
or
cmp
pushf
and
jb
mov
test
test
inc
add
ja
xchg
out
adc
cmp
cmp
inc
incl
dec
fcoms
dec
fsubs
pushf
inc
popf
in
and
bound
cmp
jl
test
and
lods
cmp
inc
pop
cmc
in
mov
jbe
sbb
subb
cli
movsb
cmp
int
fimull
int3
push
out
push
adc
pop
aad
or
mov
call
jo
and
cmp
imul
adc
aad
je
pop
mov
mov
outsb
jge
mov
cmp
pop
in
sbb
xchg
rorb
rcrb
mov
xchg
ss
pop
adcb
test
inc
imul
mov
leave
lcall
jmp
in
add
sti
add
scas
pop
addr16
pusha
inc
inc
into
outsl
jo
mov
popa
sbb
mov
call
fbstp
imul
cld
cmp
xor
push
jmp
cwtl
jb
xor
xor
lds
inc
ljmp
dec
pop
dec
push
cwtl
jbe
mov
gs
imul
xor
sub
mov
rcrl
out
fistpl
pop
xchg
pop
repnz
cli
cmp
or
mov
jnp
scas
sbb
cld
and
test
dec
mov
aas
sub
cld
int
pop
scas
cmp
mov
aas
xchg
jmp
inc
loope
stos
test
mov
inc
sub
lods
xor
cmp
es
push
call
shll
dec
mov
mov
aas
push
adc
decb
cmp
xor
js
enter
xor
repz
xchg
jp
rcrl
lret
and
cli
xchg
inc
inc
mov
xor
das
add
test
and
cltd
inc
pop
adc
inc
mov
stc
mov
or
je
push
loope
mov
rcrl
push
push
fstl
xor
int
dec
imul
mov
sub
movsl
shlb
mov
das
dec
inc
aas
insl
outsb
lret
sarl
cmc
xor
cmpsl
jno
mov
jmp
pop
repnz
and
scas
pushl
xchg
test
fcomps
bound
hlt
sbb
pop
xlat
pop
int3
and
aas
das
fmul
mov
inc
dec
mov
mov
push
arpl
jae
sub
cwtl
lret
movsb
mov
jecxz
es
fiadds
aas
and
jnp
cmp
adc
sub
adc
int3
xlat
aad
mov
pop
rorl
add
xlat
arpl
push
and
pushf
jnp
inc
pop
mov
rcrb
lods
aaa
dec
xor
pushf
icebp
jne
in
push
je
aad
fisubs
flds
adc
cltd
or
adc
dec
inc
lret
lods
sub
dec
mov
sub
arpl
inc
and
pop
xchg
out
and
sub
jmp
jp
sahf
cmp
mov
lock
cmc
cmpsb
imul
lcall
or
mov
pushf
fsubl
and
sub
stos
sbb
aam
xor
lret
or
arpl
jle
or
pusha
push
daa
cmp
sub
jae
std
inc
pop
add
cmp
sub
roll
sti
dec
pop
and
xor
or
movsl
ret
ja
lods
mov
or
scas
pop
push
pusha
ret
mov
mov
popf
pop
mov
nop
adc
and
xchg
ds
xor
loop
jo
mov
mov
push
or
xchg
add
cmp
jo
pushf
sub
jge
out
jge
std
scas
movsb
push
or
jns
mov
push
xchg
out
jbe
shlb
mov
jbe
js
sahf
pop
cmp
icebp
sub
adc
jnp
lahf
jbe
push
sub
popa
xchg
ret
pop
fwait
mov
adc
push
aas
les
jo
adc
push
push
mov
mov
stc
lods
jmp
fbstp
or
hlt
ss
inc
inc
mov
add
scas
aaa
and
jg
call
sbb
mov
sbb
ss
rcrb
jge
mov
lea
mov
int
jns
and
push
mov
imul
movsl
loope
cmpsl
pop
push
sbbb
clc
lret
pop
jns
inc
mov
dec
jge
pop
xchg
aam
in
rorl
inc
imul
int3
mov
mov
jb
out
pop
jnp
inc
push
outsb
es
repnz
loope
clc
and
jbe
rcr
mov
mov
fs
repnz
stos
out
inc
jbe
mov
dec
mov
xor
pop
jae
lret
push
and
jne
leave
ds
int
mov
lahf
ds
pop
in
and
dec
jb
sbb
mov
inc
push
call
jle
lods
mov
fstpt
insb
js
push
ret
xchg
push
jl
jae
cmpl
dec
mov
jns
mov
jbe
insl
gs
mov
ss
mov
xor
adc
and
push
sub
scas
cmp
in
mov
add
test
lea
imul
cmp
adc
pop
lds
add
jmp
or
movl
pop
scas
stos
inc
mov
sbb
xor
dec
lea
je
xor
mov
xchg
in
mov
mov
inc
andb
in
add
mov
cmp
inc
mov
mov
test
mov
ds
ljmp
std
xchg
arpl
sarb
push
pop
arpl
ljmp
aam
jl
jne
dec
cld
inc
push
iret
in
xchg
push
cmp
int
sbb
enter
lods
cmc
xlat
lea
xor
pop
sbb
add
mov
xor
jbe
bound
add
jmp
jge
int
adc
loopne
pusha
data16
or
sub
outsl
pop
dec
ss
jnp
mov
xchg
push
lea
sub
cmc
loope
iret
and
adc
jne
jae
sbb
fildl
sbb
inc
imull
push
fs
cli
xchg
dec
sbb
add
es
inc
jge
idivb
test
fsubrl
andb
xor
cmp
adc
mov
hlt
out
cmp
inc
mov
add
ss
and
xchg
in
out
enter
xor
inc
out
movsl
xchg
jmp
pop
stos
or
cmp
repnz
jnp
sahf
insb
cmp
and
cwtl
ret
dec
mov
xor
inc
adc
inc
pop
lret
out
add
aad
call
add
nop
jl
lahf
leave
cmp
sub
or
mov
test
nop
movsl
push
and
js
mov
es
pop
inc
add
ja
lock
cli
mov
or
mov
push
xchg
cltd
add
jne
aaa
test
js
insl
mov
testl
ret
mov
mov
inc
xor
mov
adc
mov
sti
pop
bswap
rcrl
pop
xchg
mov
push
sub
int3
scas
jle
push
xlat
sub
mov
cwtl
or
xchg
or
dec
cmp
je
mov
jmp
pop
push
lods
inc
cld
mov
sub
negb
call
sbb
ret
cltd
or
pop
aad
fistpll
mov
popf
lods
or
pop
pop
sub
mov
cmpsb
dec
out
jmp
sbb
stc
dec
inc
pop
outsb
xor
mov
xor
lds
push
lock
lods
lds
popa
mov
repz
inc
xchg
test
push
imul
mov
adc
cmpsb
scas
in
jp
shrl
testb
xchg
dec
adc
test
xchg
cld
movsl
cmp
jo
cmp
mov
xchg
pushf
in
pushf
sti
pop
std
adc
jge
pop
ret
add
jle
fdivrs
jp
adc
adc
out
and
lock
mov
push
sub
popa
mov
fnstenv
movsb
cld
stc
rcr
mov
mov
add
repnz
andb
mov
rol
dec
ljmp
enter
mov
mov
pusha
mov
push
and
dec
jl
mov
jl
xor
dec
lret
mov
or
fisubrl
jle
cmp
mov
in
test
mov
xchg
loope
lods
mov
shlb
sbb
insb
mull
ret
je
loope
mov
imul
xchg
ficoms
xor
fisubl
hlt
push
dec
in
adc
inc
xchg
mov
and
fldl2t
cmp
cmp
sub
call
add
dec
repz
lods
fistpl
ret
lea
in
in
mov
xchg
aaa
les
sbb
inc
sbb
sbb
out
sbb
neg
cmp
push
loop
sbb
popf
ret
jne
notb
mov
inc
sbb
sbb
pop
mov
add
sub
push
imul
add
sar
inc
test
adc
out
dec
push
or
pop
mov
cmp
adc
es
xor
sarl
and
mov
push
push
fmuls
ss
icebp
xchg
pavgw
fcmovne
pop
clc
js
outsl
mov
lods
out
into
adc
add
imul
scas
insb
xor
pop
xchg
sub
push
das
repnz
dec
movsl
jge
or
dec
push
xor
mov
jl
pop
fwait
gs
insb
cld
lret
sub
mov
mov
stos
pop
inc
repnz
dec
jl
adc
in
jecxz
imul
xor
or
pop
push
daa
push
lret
ret
push
cld
lods
dec
stos
call
jnp
pop
imul
jae
out
fsub
mov
aam
outsb
leave
int3
mov
push
add
repnz
shlb
and
mov
push
or
xchg
jle
push
lret
out
mov
cwtl
sbb
adc
jbe
cmp
clc
aas
rol
cmpsb
inc
lea
jle
or
push
pusha
jne
cmp
ret
mov
xlat
jmp
xlat
pusha
outsl
lret
lock
and
inc
cltd
andb
jl
sub
jns
adc
mov
sbb
sub
cs
jno
inc
sahf
aas
jne
pop
cmpsb
imul
repnz
add
adc
sub
aaa
adc
mov
lcall
push
scas
lods
mov
and
mov
fnclex
dec
xchg
sbbb
aas
add
sbb
rcrb
arpl
cwtl
jge
jae
push
cmpsb
mov
gs
jne
fadds
mov
mov
jbe
fwait
mov
lret
xlat
or
sbb
inc
fistl
and
push
clc
pop
mov
rol
arpl
adc
out
and
fcomp
add
mov
jbe
outsl
pop
add
shll
aas
cmpsl
addb
mov
xchg
es
push
mov
adc
clc
cmp
mov
or
adc
adc
popf
sbb
outsb
inc
scas
ss
aad
movsl
aad
enter
fmull
push
iret
repnz
mov
lock
fwait
insb
xchg
mov
hlt
pusha
cmp
or
imul
cld
cmp
scas
xor
in
out
adc
xlat
xor
out
subb
dec
insl
jno
add
xor
adc
sbb
lcall
fwait
mov
pushf
mov
je
lock
subb
jmp
lret
mov
loop
out
or
lods
push
cmp
mov
pop
in
jl
xlat
into
pop
je
add
xchg
sbb
test
push
jecxz
xor
adc
add
out
lds
lock
lret
or
rcr
xchg
push
pop
popf
or
lret
test
pop
scas
idiv
not
or
inc
bound
inc
xor
repz
in
jno
rorb
lds
xlat
in
clc
repnz
orl
loope
xor
loope
or
adc
xlat
xor
out
add
popf
stos
cmp
dec
cmp
mov
push
push
mov
jno
mov
popf
lret
cmpsl
ds
es
and
jb
sbb
bound
fwait
mov
call
adc
repz
or
and
mov
cld
or
or
xchg
mov
add
nop
cld
outsl
pop
mov
sub
mov
and
jg
adc
xchg
mov
iret
mov
push
in
pop
push
rorb
mov
xor
fwait
call
adc
ffree
inc
xchg
xchg
in
pop
or
cwtl
pop
shl
sbb
insb
adc
fistpl
xchg
adc
ret
bound
test
dec
inc
push
pop
dec
jns
cmp
inc
popa
add
cmp
lret
data16
mov
jecxz
sub
lret
lcall
mov
hlt
popl
add
call
xchg
sbb
or
adc
xlat
and
mov
xchg
test
mov
data16
test
adc
pop
fnstcw
andb
loope
hlt
push
in
push
insb
cmpsl
inc
xchg
mov
mov
sbb
or
stc
in
mov
insl
fistpll
bnd
scas
jo
mov
outsl
das
push
cmp
sti
rorl
pushf
mov
xor
xor
sarl
inc
lcall
cmpsl
in
jg
in
pop
mov
xchg
filds
lods
das
cld
and
xchg
fwait
rcl
sahf
adc
stc
dec
or
stos
fdivl
insl
cmp
cmp
jne
cmp
sbbl
ja
add
cmp
fmull
cmpsl
push
addr16
cmp
and
cmp
pop
mov
std
sti
jl
stos
gs
cmpsl
insb
lea
hlt
sahf
sbb
idiv
hlt
cltd
jge
ljmp
lcallw
data16
xchg
push
fiadds
int3
mov
jmp
pop
sub
pop
cld
jle
pop
push
dec
pusha
push
mov
mov
xlat
dec
int
cmp
cmp
inc
push
mov
rcr
movsb
xor
push
inc
movsl
push
into
push
cmp
add
pop
loop
push
push
xor
and
out
push
filds
add
insb
lcall
imul
imul
adc
es
in
jp
imul
fsubs
lea
shl
punpckldq
mov
xadd
dec
jb
add
int3
sahf
stc
sar
push
into
inc
call
inc
scas
jmp
mov
pop
pop
jl
pushf
jno
leave
inc
mov
call
cmp
inc
notl
mov
mov
outsb
and
fwait
ja
in
ja
cwtl
int3
call
popa
repnz
jp
inc
insl
popf
inc
out
mov
insl
push
fisubrs
dec
das
stos
or
push
js
lahf
out
sbb
mov
dec
inc
frstor
push
jmp
test
lea
add
insb
into
mov
cmc
cmp
mov
push
mov
pop
add
push
jbe
mov
mov
sahf
cmp
int3
push
mov
out
bndstx
repnz
lds
in
mov
insb
cltd
adc
push
pushf
mov
mov
ret
fs
mov
ret
mov
inc
inc
dec
idivl
mov
clc
push
sub
stos
mov
addr16
mov
adcb
enter
add
ja
pop
cmp
pusha
push
js
sbbb
movsb
dec
mov
hlt
add
cli
lahf
jb
fstps
lods
and
sub
inc
mov
in
testb
or
lahf
bound
pop
mov
mov
cmp
push
aaa
popa
sub
popf
mov
push
pop
adc
addr16
out
xchg
dec
sti
xlat
mov
movsl
xchg
sahf
pop
sub
incl
pop
mov
jb
cli
fcomps
arpl
sahf
jge,pt
jo
rcrb
fstps
pop
sbb
lahf
testl
cmp
jb
inc
testl
lods
push
jmp
push
loopne
clc
sbb
adc
mov
xchg
cmp
fwait
int3
dec
mov
js
push
or
sahf
jp
sbb
sti
xorl
ss
stos
js
xchg
dec
mov
adc
in
lds
pop
xor
adc
loop
pop
in
fcomps
fwait
imul
gs
jbe
dec
movsb
push
arpl
leave
insl
sbb
xchg
addb
addr16
mov
test
aam
mov
dec
sbb
lcall
or
mov
sub
js
mov
out
andb
fsubl
jns
roll
scas
aas
xor
sbb
jmp
scas
clc
lahf
or
push
movsb
sub
in
ret
inc
cmp
aam
and
lods
add
adc
xlat
enter
mov
out
ss
movsb
mov
loope
testl
mov
mov
stos
push
cwtl
sbb
nop
add
bound
and
inc
sbbl
mov
mov
stos
pextrw
clc
add
stc
cmp
mov
je
popf
arpl
pop
lods
cmp
mov
leave
loop
sbb
xor
mov
adc
in
scas
roll
jl
and
test
xlat
mov
or
dec
dec
pop
into
sub
mov
leave
movsl
sti
add
das
xchg
mov
jecxz
mov
scas
in
mov
cmp
push
xor
fcmovnb
or
dec
dec
xor
int3
dec
dec
into
hlt
sti
cld
mov
xchg
xor
loope
push
inc
loopne
adc
sub
xchg
movsb
mov
push
xchg
pop
jno
sub
lods
sbb
stos
mov
rcrb
push
jmp
mov
aam
push
sub
push
pop
and
xor
xor
xchg
data16
fmuls
or
push
test
adc
cltd
out
sub
fsubl
push
rolb
outsb
insb
psrlq
shll
orl
cmp
cmp
sbb
add
dec
aaa
stos
cwtl
cld
pop
test
fistl
es
adc
arpl
shlb
sbb
mov
int3
fwait
andb
mov
fldt
int
add
xchg
dec
hlt
shrl
add
xchg
or
mov
es
and
inc
call
cmc
adc
fldcw
sbb
inc
stos
repnz
jle
movsb
add
loopne
mov
add
push
std
xchg
jb
pop
adc
dec
mov
push
cmp
push
fyl2xp1
push
outsl
roll
test
pop
sub
imul
push
mull
out
jmp
or
dec
jno
aas
mov
jno
cmp
sub
cmp
dec
arpl
mov
clc
jp
std
ja
add
xchg
dec
pop
add
lahf
test
lods
scas
mov
jo
xor
xchg
in
cmc
cli
add
imul
aaa
and
and
lds
ret
test
loope
imul
div
cwtl
push
push
mov
mov
and
mov
jle
popf
mov
xchg
pop
lahf
mov
pop
dec
insl
testb
sbb
sbbl
mov
mov
iret
jne
jle
stos
popl
roll
mov
fstpt
mov
mov
loop
mov
mov
in
add
jg
push
xchg
out
xor
stos
adcb
sub
scas
mov
out
imul
ret
and
pusha
fdivl
fldcw
xor
sub
jp
pop
movsb
cs
int
mov
imull
inc
scas
jnp
mov
inc
rolb
xor
xlat
int
sub
testl
and
gs
jp
pushf
pusha
xchg
inc
ss
je
arpl
rcll
daa
jmp
lcall
xchg
insl
cmpsb
sar
les
aam
and
stos
ret
icebp
push
sti
jne
cld
sub
xor
dec
dec
xchg
cli
popa
xor
fwait
cltd
push
and
mov
push
inc
inc
in
or
es
sti
fcmovb
sub
adc
out
dec
lahf
notl
pop
enter
in
mov
outsl
mov
push
adc
jno
dec
enter
in
mov
push
pushf
adc
push
test
and
nop
pop
cmp
stos
repz
out
andb
sub
xchg
jle
xchg
cmp
pop
adc
add
xor
jae
mov
enter
in
pop
inc
cmpb
fwait
pop
sbb
cmp
cld
cmp
aaa
idivl
lock
out
jo
pop
sbb
inc
xchg
sarb
arpl
jns
cmp
lock
aas
pop
das
idivl
lea
add
mov
std
jl
add
pop
push
aad
inc
mov
fisttpl
idivb
or
xor
lods
xchg
jns
hlt
out
mov
xchg
arpl
dec
xchg
test
xlat
call
push
shr
adc
sbb
aam
lahf
enter
xor
cmpsl
or
jns
mov
pop
adc
or
shll
cmpsl
lret
fmul
sub
subb
inc
fldt
mov
jp
fcmovne
fsubs
push
dec
addr16
or
and
arpl
xchg
and
adc
adc
mov
pushf
push
test
add
inc
cmp
or
aaa
scas
ret
rorl
xchg
fsub
cld
mov
pushl
fnsave
std
push
scas
bound
iret
cmp
mov
aaa
xor
jne
aam
call
jns
leave
jno
push
mov
test
iret
xchg
cltd
push
pusha
dec
or
cmc
push
push
add
rolb
jp
mov
xchg
xor
adcl
lods
stc
jmp
dec
ret
arpl
jb
dec
sub
insb
popa
inc
and
dec
cwtl
add
pop
cmp
push
push
aas
aas
ss
cmp
mov
into
cwtl
dec
xchg
fmull
dec
inc
inc
ja
jbe
inc
sub
loope
cmp
outsl
mov
mov
adc
xor
nop
test
imull
fcomip
movb
loop
icebp
aad
nop
inc
into
int3
jecxz
push
lahf
aad
pop
mov
test
negl
adc
jl
divb
jbe
jb
outsl
ljmp
mov
push
sub
adc
jbe
out
cmp
out
pushf
pop
repnz
loop,pn
movsl
dec
adcl
mov
dec
or
adc
call
and
popa
loopne
xor
pop
xor
jle
shll
pop
scas
and
imul
sub
xchg
pusha
ljmp
adc
clc
mov
sbbl
aas
add
test
test
in
xor
pusha
cwtl
aaa
dec
mov
sub
sahf
pop
or
cmp
adc
pop
cld
or
jno
sbb
pop
sbb
inc
in
insl
mov
mov
xorl
daa
cmc
pop
xchg
mov
inc
scas
test
icebp
sub
and
shll
shl
xchg
into
cwtl
dec
adcb
aad
or
sti
dec
jb
pop
je
inc
shll
aas
xchg
dec
in
add
addr16
push
leave
cld
adc
lahf
inc
mov
ljmp
stos
add
sahf
pop
subb
idivb
mov
movzwl
sub
aas
popl
push
cmp
test
cmp
js
sbb
test
pusha
into
or
inc
mov
aaa
hlt
in
jmp
shll
les
jns
gs
dec
sbb
aaa
jge
push
data16
pop
fs
pop
call
dec
mov
dec
or
dec
push
out
add
shll
pop
mov
iret
insb
into
adc
jns
fwait
loope
mov
sbb
movsb
lahf
fwait
jbe
or
mov
dec
js
div
enter
lods
mov
adc
test
cltd
push
pmaddwd
cmpsb
arpl
or
in
xchg
int3
mov
stos
sub
testl
out
mov
imul
xchg
xor
push
sub
mov
shrl
test
xchg
adc
jg
cltd
mov
aaa
sub
cmpsl
das
sarl
aaa
cmc
xchg
pop
aaa
fcomps
nop
jbe
cmpsb
fimull
loope
xchg
push
mov
dec
jg
js
in
jne
push
push
xchg
ds
in
lret
jp
fisubrl
mov
in
dec
jo
fcomps
test
in
aad
js
scas
mov
loop
dec
cmpsl
mov
cmpsl
gs
cmpsb
xor
push
mov
jl
pop
jnp
jl
cmpl
dec
and
inc
push
and
cmp
jnp
add
cmc
cmp
and
sahf
and
dec
rolb
rorb
push
les
mov
jg
test
cmp
into
jnp
ja
or
mov
cltd
ss
hlt
push
jne
mov
sahf
lret
ljmp
sarb
dec
add
leave
in
lea
lods
loopne
fwait
add
ret
xchg
pop
mov
mov
xor
mov
into
add
jnp
jno
rcrb
sub
iret
xor
stc
imul
outsb
fwait
xchg
xchg
mov
adc
mov
arpl
loopne
jne
xor
dec
xchg
mov
push
shrl
dec
mov
xchg
pop
push
movsb
xor
sarb
push
push
mov
stos
test
xor
adc
mov
adc
push
mov
sub
in
adc
mov
jnp
cmp
add
jb
rolb
sub
mov
and
imul
lea
fistl
mov
das
test
bound
mov
cmpl
nop
pop
push
cmp
icebp
orb
mov
mov
arpl
mov
in
clc
fsubrs
cmp
mov
push
dec
sub
scas
in
mov
aad
fimull
push
cltd
or
pusha
add
dec
mov
imul
pop
dec
mov
adc
mov
dec
test
sahf
mov
and
sub
inc
xlat
repnz
int
jmp
fldl2t
push
jle
dec
sbb
int3
lcall
xchg
xor
fimuls
mov
jnp
in
jo
iret
push
insb
sbb
pop
and
xchg
shrb
xor
ss
mov
and
pop
imul
outsl
inc
push
mov
adc
push
adc
addr16
or
xlat
adc
sahf
adc
addr16
and
js
pop
push
dec
pop
cmpsl
cwtl
sbb
cltd
xor
inc
xor
xlat
fcmove
sbb
test
xchg
aaa
dec
pop
push
and
pop
pop
mov
lock
jg
xchg
adc
dec
inc
fidivrs
push
nop
imul
loopne
out
fidivl
sub
in
movsl
dec
inc
jle
leave
sub
das
scas
imul
xchg
cmc
fiaddl
les
jle
pop
mov
ret
pop
lods
pusha
mov
push
rcrl
dec
add
xor
gs
lret
sahf
dec
cmpb
mov
mov
jno
xlat
repnz
stos
frstor
mov
in
jmp
mov
arpl
mov
stc
push
pop
iret
nop
sub
or
sub
mov
mov
stos
push
pop
nop
jne
and
aaa
or
dec
push
xor
je
outsb
sub
jp
int3
fwait
in
rcll
mov
pop
lret
push
repz
lcall
gs
and
mov
or
push
cmp
stos
jmp
arpl
cwtl
stos
lock
mov
pop
pop
adc
xchg
and
out
add
iret
ret
icebp
or
cld
xorl
into
in
sbb
imul
mov
push
iret
sub
xor
xor
adc
out
jmp
stos
and
inc
pusha
adc
jo
cmpsl
sbb
js
fisubrs
xchg
in
dec
add
inc
pop
mov
mov
dec
fstps
and
dec
xchg
fsts
lret
xlat
mov
enter
int3
movsb
loop
mov
push
lahf
movsl
jl
insb
xchg
sub
dec
enter
push
mov
out
add
shrb
xchg
jmp
mov
mov
fsts
fists
dec
lret
fs
rclb
psubusb
call
out
push
jle
cmp
sub
and
shrb
sahf
mov
call
fisttps
lret
xchg
in
inc
or
mov
pop
mov
movb
fs
dec
or
mov
sub
hlt
xor
lret
mov
sbb
push
test
inc
jnp
cmp
test
jecxz
test
test
test
outsl
xor
in
std
fistpll
loopne,pn
insl
fimull
jl
xor
test
out
into
add
out
add
mov
cmpsb
fnstenv
or
sarb
mov
and
push
loop
mov
adc
lock
add
xor
ret
jle
push
push
into
jo
addl
loop
sbb
aaa
mov
inc
cld
sub
out
rclb
lret
gs
inc
pusha
pop
in
mov
dec
adc
sahf
adc
mov
cmp
and
test
into
out
or
jne
mov
jne
je
xchg
loope
not
or
lahf
mulb
pop
stc
cmpl
je
std
xlat
addr16
xchg
or
cmc
mov
xchg
mov
rol
add
cmp
sbb
push
sub
xorl
xchg
mov
fildll
fs
sub
sbb
lahf
inc
jp
add
cmp
cld
adc
std
stos
sbb
pop
in
lea
jo
dec
bound
add
loopne
leave
xor
fcomps
jg
jl
jno
fisttpll
les
ret
adc
pusha
ficoml
outsl
pop
cmp
jp
ljmp
addl
cmp
loop
fmull
loopne
dec
mov
or
dec
mov
cli
push
adc
loop
hlt
mov
aaa
cmp
pop
inc
rorl
fwait
rcll
jae
test
shll
pop
divl
aad
xor
mov
mov
hlt
add
jecxz
cmp
mov
inc
xchg
cli
sbb
mov
insl
push
repz
add
daa
orl
dec
pop
xor
xor
xchg
js
in
cmpsl
fsubl
pop
sti
add
push
mov
jle
outsb
js
fildl
scas
insl
sti
lods
leave
add
es
mov
loopne
and
mov
adc
loop
fnstenv
mov
push
mov
test
mov
and
cs
inc
dec
arpl
jo
cmp
into
fs
fimull
dec
lods
roll
xchg
lcall
test
push
xchg
sarb
inc
add
in
rolb
xor
rorl
dec
adc
pop
or
fwait
test
iret
gs
cmp
xchg
xchg
test
jp
orl
mov
lcall
addl
insb
xchg
ret
and
or
or
stos
mov
lds
pop
adc
xor
push
add
xchg
in
mov
push
sti
sub
cmp
sbb
aam
test
xchg
xor
fdivrl
mov
add
cltd
push
stc
mov
aaa
dec
xchg
adc
nop
mov
jecxz
push
sub
or
ret
xor
jle
pop
rol
sub
xchg
adc
add
arpl
push
cmp
je
mov
fadds
rclb
lret
pop
filds
mov
jp
push
shll
adc
inc
ret
test
imul
mov
dec
add
push
lret
mov
inc
out
fadds
fimull
pop
lock
sbb
lock
and
push
mov
icebp
clc
sbb
mov
clc
sub
ljmp
or
jne
sub
rcrl
repnz
int3
mov
mov
cld
cmp
xchg
es
scas
push
in
push
scas
jne
dec
cmp
jecxz
and
cmpsl
mov
mov
jmp
or
or
fadd
mov
fbld
pop
ss
mov
ljmp
pop
rcll
fisttpl
stc
popf
aad
push
test
mov
dec
sbb
xor
jle
jnp
cmpsl
ja
and
push
xchg
push
xlat
daa
je
mov
cmp
or
jle
test
lret
adc
push
rcrb
sbb
cmp
popa
xor
add
pop
lret
cmp
cmp
jb
popf
arpl
xchg
ret
mov
fucompp
inc
jb
div
ret
jb
int
mov
inc
mov
cld
aas
pop
or
lea
cmp
popa
ss
sahf
aaa
jno
loop
mov
mov
or
lock
mov
rcll
or
andl
leave
jl
neg
loopne
add
sbb
lahf
mov
sbb
imul
mov
in
dec
dec
cmp
jmp
and
mov
sti
rcrl
xlat
iret
inc
outsb
jo
lods
aad
adc
inc
jge
loope
test
mov
inc
mov
les
loope
jnp
rclb
into
mov
fcomip
cmc
mov
or
shll
call
adc
jns
xchg
icebp
mov
add
imul
addl
push
cmp
out
sub
into
fidivs
es
test
in
in
lcall
xchg
sahf
repz
in
popf
or
jmp
enter
icebp
dec
push
out
scas
incl
jp
gs
aaa
ss
lods
test
stos
inc
cltd
mov
loopne
xor
test
pushf
ja
ret
sub
mov
mov
lcall
addr16
arpl
xor
aam
scas
xor
fs
cwtl
adc
fnstenv
addr16
sub
lret
mov
orl
fcoms
adc
add
lods
xlat
inc
dec
flds
test
or
into
sti
cmpsb
sbb
pop
mov
push
sub
fiaddl
mov
cmc
mov
insb
es
fdivl
out
out
leave
push
in
insb
mov
mov
call
inc
jg
mov
pop
cs
arpl
sahf
fucom
pop
aam
loopne
inc
xchg
pop
clc
mov
les
add
fnstenv
jge
hlt
repnz
dec
push
pop
or
inc
test
mov
jnp
ja
ret
adc
int
inc
popa
sub
daa
xlat
pop
xor
movsb
rcrl
mov
dec
popf
xor
cld
cmpsb
stos
movsl
push
and
std
stc
sbb
inc
mov
out
inc
lods
jl
arpl
pop
cmp
lea
jae
dec
xchg
add
inc
xor
and
leave
fsubrl
ds
cltd
aas
adc
test
divb
or
lock
fistpll
add
inc
addr16
test
sbb
xor
movsb
gs
pop
pop
cmp
mov
and
rcrb
push
stc
lahf
pop
out
mov
push
mov
popa
loopne
daa
pop
pop
mov
pop
push
popa
sub
int
popa
hlt
nop
cmc
ret
sbb
cmpsb
rolb
mov
cli
cmpsb
xlat
les
add
sahf
gs
jmp
push
aam
in
addr16
cltd
test
shrb
dec
daa
push
push
mov
mov
push
repz
fnsetpm(287
and
mov
xchg
pop
jne
add
leave
leave
bound
aad
pop
sar
xlat
cmp
inc
cmp
andb
jmp
in
xchg
test
mov
and
stos
mov
adc
repnz
add
fwait
cwtl
lods
sub
and
or
cmp
cwtl
mov
adc
in
adc
lds
inc
and
push
push
cld
movb
mov
scas
pop
lret
adc
add
into
mov
mov
stc
shr
popa
jmp
outsb
adc
jge
xchg
xlat
xchg
and
es
mov
sub
pusha
push
pop
ljmp
stos
sbb
mov
out
jo
mov
aad
idivl
xlat
xchg
jp
aas
scas
jmp
mov
sahf
xchg
and
stos
js
xchg
and
aaa
dec
sbb
xor
mov
insl
pop
addl
lods
subl
xor
mov
dec
jno
stos
xchg
loope
insl
fsts
pop
mov
jb
jno
test
mov
lds
jmp
aam
pop
imul
rolb
insl
call
scas
xor
out
aas
pop
mov
scas
andl
lds
inc
inc
ja
shrb
repnz
pop
rcll
push
test
xor
lahf
mov
inc
xorps
xor
not
sub
dec
mov
adc
or
mov
adc
sub
or
stos
sbb
or
rolb
jl
lock
or
mov
sbb
repz
lcall
or
fwait
dec
cli
into
inc
mov
lret
or
push
pop
and
xchg
inc
cmp
and
xor
inc
cltd
outsl
gs
mov
aas
cmp
bound
mov
add
add
push
sbb
repz
jge
lds
in
lcall
les
dec
loope
cmp
sti
inc
push
inc
lcall
test
jg
scas
scas
sbb
push
fs
in
dec
aam
mov
and
and
sub
testl
inc
ss
cmpsl
sbb
push
inc
cmp
dec
pop
rorb
aad
xor
mov
jecxz
fcomps
std
push
xchg
mov
jge
inc
sub
inc
call
jmp
mov
jne
mov
xor
sti
mov
loope
mov
inc
lret
add
ljmp
dec
push
stos
push
cmpsb
push
or
jne
xorb
lods
push
and
lock
jge
inc
leave
aaa
inc
sub
mov
add
lock
xor
sbbb
add
pop
fldcw
dec
insb
ljmp
ficoms
xor
fwait
push
mov
adc
adc
add
fwait
or
imul
or
push
mov
imull
out
test
inc
mov
shll
flds
movsb
nop
xorb
mov
ror
jle
stos
pop
arpl
mov
adc
aam
and
push
jecxz
sti
mov
call
movb
lods
jl
ljmp
es
cs
mov
jmp
pop
xchg
lods
mov
jp
cmpsb
mov
mov
and
pop
adc
inc
xor
jmp
fstpt
xor
inc
fs
call
jbe
cmc
mov
iret
aaa
std
mov
xor
xor
mov
nop
enter
in
mov
dec
mov
mov
pushf
push
insl
rcrl
insl
in
xor
lock
jmp
inc
mov
ret
push
jns
xor
call
cmp
jmp
xchg
add
inc
mov
in
jns
in
and
hlt
icebp
fistpl
enter
jg
mov
mov
xlat
and
cmp
sar
xor
movsl
and
adc
aas
sub
fwait
scas
sbb
test
xlat
adc
jmp
cs
repz
outsb
negb
mov
cmp
sub
mov
dec
push
cmpb
dec
mov
mov
cmp
add
xor
adc
jne
lds
shlb
sub
cmp
cltd
int
sbb
dec
mov
mov
mov
ds
sbb
push
mov
sub
in
mov
push
scas
cli
lea
repnz
xor
add
mov
hlt
or
in
mov
jmp
jo
mov
adc
and
popa
push
mov
ficomps
lds
pop
adc
out
lds
push
mov
cmovle
jmp
in
cs
and
dec
loope
test
fwait
imul
cli
aas
sbb
cwtl
ret
out
lock
clc
inc
mov
xchg
arpl
inc
sub
sub
and
movb
aas
shll
dec
sub
mov
push
adc
mov
jge
lret
leave
xchg
ret
mov
lahf
pop
pminsw
mov
ds
cmp
stos
pop
xor
dec
xorb
fs
jne
fucomi
movb
aas
jge
push
push
rcrb
out
addr16
mov
sbb
and
mov
push
lahf
adc
pcmpgtw
popl
xor
fstpl
movsl
roll
cmp
pop
cltd
cld
fstl
outsb
je
and
adc
sbb
push
and
loopne
xchg
and
stc
gs
sub
and
lcall
ljmp
ret
ljmp
pop
sub
sbb
cmc
lret
cmp
lret
ja
xchg
cmp
add
int
outsb
mov
sub
lods
push
lods
repnz
mov
pop
push
mov
cli
lret
xor
outsb
jno
rclb
into
leave
pop
cmp
inc
add
aad
ss
rol
std
sbb
ret
cs
xchg
loop
leave
stos
pop
jecxz
mov
dec
and
mov
xchg
dec
cmp
sbb
in
ret
test
pushl
inc
jmp
lock
cwtl
dec
sbb
pop
aad
test
xchg
mov
pop
pushf
std
mov
xor
in
mov
out
fmull
push
test
xor
aaa
adc
into
and
jne
popa
mov
bound
int
shll
pop
mov
scas
xchg
inc
popa
adc
frstor
adc
sbbl
push
cmpsb
jl
cld
adc
lretw
in
loop
mov
mov
and
lret
cld
push
inc
mov
push
or
xchg
sbb
adc
xchg
vmaskmovdqu
jmp
dec
mov
mov
mov
dec
xchg
lods
pop
jge
adc
stos
sbb
jmp
jle
jo
subb
insl
sahf
xor
mov
push
xchg
xlat
add
popa
lcall
loope
aad
xchg
lret
iret
mov
jbe
mov
addr16
clc
push
jo
pushf
and
mov
sub
repz
push
jo
fwait
jecxz
test
inc
mov
into
ret
sub
mov
inc
or
inc
xor
movsl
fcomps
inc
popf
fucomp
inc
nop
testb
mov
or
mov
push
xchg
mov
pop
mov
fdivr
xor
ret
xchg
or
sti
xor
mov
sub
in
jne
jnp
xchg
call
lock
testl
test
hlt
sub
mov
enter
inc
clc
jl
xchg
mov
add
cmp
dec
mov
das
jp
jno
mov
jp
jge
xor
dec
scas
mov
fisttpll
out
mov
mov
adc
add
dec
int
test
jns
and
stc
push
pop
pusha
jmp
push
iret
enter
lock
mov
and
mov
clc
fiaddl
xchg
push
sub
push
mov
add
imul
pusha
pop
mov
mov
leave
mov
aaa
int
push
xchg
xor
xchg
shrb
shll
and
pop
mov
rcl
mov
in
dec
jmp
cs
sub
shll
fdivrs
and
arpl
in
mov
loope
and
lods
cwtl
push
cs
push
fldenv
leave
or
int
stc
pushf
lahf
jo
shlb
jmp
adc
scas
xchg
inc
and
adc
orl
mov
aaa
sub
out
ja
aad
xchg
jae
sbb
pusha
cltd
stos
dec
inc
outsb
inc
mov
outsb
mov
jmp
xor
add
mov
mov
leave
add
fcomps
fmulp
call
cmp
push
push
push
pop
outsl
adc
test
popa
dec
pop
andl
adc
andb
cmc
lcall
sbb
dec
dec
aaa
sub
loopne
stc
mov
push
xor
dec
mov
sti
fistps
andl
mov
pop
repz
or
mov
mov
les
das
setge
hlt
mov
sub
call
inc
add
lret
mov
out
adc
pop
sub
and
pop
pop
pop
mov
cmpsl
test
iret
cmp
les
pusha
out
rcrb
push
shlb
pop
ja
enter
or
ret
dec
insb
xchg
das
call
inc
cwtl
mov
cmp
fwait
unpcklps
popf
cwtl
xor
xchg
mov
stc
icebp
mov
popf
dec
fsts
lods
lods
mov
insb
loopne
stos
mov
fsubrs
jno
adc
lods
xor
jecxz
je
xchg
and
das
jnp
aad
inc
adc
in
sub
mov
mov
jl,pn
sub
sub
xchg
popf
aaa
cmpsb
adc
inc
pop
jl
adc
sahf
xchg
or
std
mov
sbb
jg
lcall
imul
scas
xchg
ds
nop
push
sarb
in
jae
jl
psrad
aam
outsb
dec
mov
xor
in
daa
data16
xchg
nop
sbb
jg
xor
fbld
leave
testb
outsl
scas
in
in
and
outsb
lock
popa
pop
sbb
imul
jae
push
inc
and
cs
lods
dec
aad
or
in
in
fistpl
cmp
in
xchg
push
mov
rcrb
jecxz
dec
andb
push
sub
ficomps
xchg
dec
inc
ret
cmp
mov
pop
mov
lret
roll
cmpsb
mov
mov
mov
mov
add
fildll
push
lcall
pop
cltd
mov
mov
push
addr16
scas
xor
push
fildl
cld
or
jecxz
je
scas
stc
arpl
jbe
or
push
stos
iret
cmc
jl
sbb
sbb
and
cli
sbb
sbb
sub
jns
mov
sub
loope
sub
push
adc
ret
pop
add
fst
leave
inc
fcmovu
subl
mov
inc
arpl
cmp
mov
arpl
lds
jl
push
mov
fcomps
xchg
test
sub
icebp
cmp
pop
sahf
fistpl
jle
sub
pop
stos
ljmp
mov
lds
adcb
test
mov
fwait
mov
cmc
mov
mov
aam
and
sti
dec
and
stc
roll
in
push
dec
xor
or
push
into
cmp
sahf
add
xorb
pop
into
dec
add
sub
sti
int
pop
js
pop
dec
cli
inc
imul
add
jp
mov
sbb
bound
sub
push
and
pop
mov
daa
jmp
int3
bound
jecxz
and
push
bound
insl
cld
xor
mov
lea
push
test
dec
jbe
sbb
xchg
mov
mov
jno
cmp
fdivs
lea
xchg
into
add
mov
fsubp
ljmp
cs
out
xchg
lahf
insl
outsb
cs
cs
push
sub
fwait
jge
lret
xlat
inc
mov
mov
out
mov
dec
ret
sbb
inc
mov
dec
mov
mov
ljmp
cmpsb
movl
mov
popa
or
inc
jle
loope
adc
jg
outsl
test
mov
xlat
ljmp
rcrb
rolb
and
in
sarl
mov
out
mov
inc
and
dec
mov
xchg
test
dec
mov
adc
xchg
xchg
mov
fadds
push
fildll
inc
mov
mov
dec
xchg
push
push
leave
push
adc
cmp
add
dec
mov
cmc
clc
dec
stos
xchg
call
cmp
jg
aam
mov
cld
dec
lods
adcb
xor
pop
and
mov
jge
loop
fisubs
adc
out
jo
scas
out
push
cld
arpl
push
cmp
adc
les
xchg
or
xor
ljmp
cli
mov
or
andl
popf
or
sti
movsb
in
lret
test
test
mov
mov
or
inc
adc
std
jb
movaps
sarl
outsw
inc
cmp
repz
adc
in
shr
lret
andb
addr16
cli
add
out
loopne
rorl
in
clc
cs
les
push
xchg
ret
cmp
es
mov
mov
out
or
inc
adc
imul
les
sub
mov
inc
xchg
jecxz
and
shll
outsb
mov
xchg
jl
adc
mov
and
pop
lret
sar
mov
inc
xchg
mov
xor
rorb
mov
mov
mov
add
frstor
push
popa
cmp
movb
fbld
cmp
sbb
or
jbe
out
sub
adc
nop
mov
loopne
les
adc
add
dec
ret
push
mov
fs
jmp
into
repnz
leave
sbb
adc
pop
inc
push
lret
pop
cltd
mov
fists
xchg
out
xchg
pop
or
cld
repnz
cli
mov
mov
xchg
add
jb
push
jnp
adc
and
fstp
fsubl
out
push
movsb
cld
insb
nop
les
imul
not
jo
sub
jmp
fistpll
inc
mov
pop
addl
addl
shll
call
sahf
dec
adc
outsb
mov
push
inc
hlt
xor
cmp
in
or
push
add
fisttpll
ja
mov
arpl
ljmp
jmp
orb
gs
lcall
stos
adc
cwtl
dec
mov
pop
and
fbstp
push
push
or
push
push
mov
xor
mov
push
jecxz
mov
incl
out
test
pop
imul
pop
and
sbb
orb
add
sub
dec
ja
leave
pop
sub
or
push
xor
mov
add
shrb
xchg
fdivrl
cmpsb
dec
orl
xor
loopne
andl
mul
push
faddl
push
push
push
adc
jb
into
out
out
push
mov
jl
lcall
jnp
out
lods
mov
test
xchg
jg
daa
jbe
aam
test
shlb
pop
inc
pop
cwtl
out
pop
int
mov
imul
jp
aad
loopne
outsb
lret
stc
adcb
movsl
dec
popf
xor
insb
test
mov
inc
or
pop
jmp
lods
aam
loop
xchg
or
test
xchg
xchg
push
push
sbb
push
mov
sbb
mov
or
les
fistpll
cli
dec
test
cmpsl
push
in
test
sub
mov
repz
loopne
xchg
mov
test
jg
aad
test
insl
xchg
fsts
movsb
pop
dec
dec
mov
and
jp
std
sbb
stos
idivb
aas
mov
mov
nop
and
test
ror
sbb
sub
add
pop
int3
and
lahf
jo
mov
bound
inc
imul
int
je
dec
sub
xchg
enter
sbbl
leave
lcall
add
mov
in
cmp
sub
dec
jecxz
sbb
pop
stos
sub
scas
pop
or
ljmp
pop
xchg
push
stos
push
mov
sbb
xchg
aas
pop
add
lcall
je
inc
stos
mov
sti
ret
movsb
lds
pop
lcall
pop
sti
xchg
out
bound
getsec
pop
mov
out
jbe
xlat
fistpl
sub
or
dec
xorl
mov
jg
andl
dec
pop
push
test
and
fwait
xorb
xchg
ss
xor
pop
out
mov
cwtl
dec
into
into
push
mov
cltd
cltd
clc
in
bound
lret
fcomps
cwtl
jo
adcl
movsl
loop
xchg
cmc
xor
add
push
js
jmp
and
jmp
fwait
pop
lcall
mov
inc
and
add
mov
mov
outsb
mov
imul
sbb
pop
lcall
dec
jecxz
ljmp
lock
shlb
shrl
icebp
lea
in
dec
jmp
cmp
mov
arpl
pop
dec
cmp
ss
xchg
pusha
into
cld
mov
shlb
popf
sahf
aas
rcrb
jbe
sbb
and
pop
xor
mov
adc
and
repnz
mov
push
and
enter
jo
lods
cmp
sbb
push
mov
adc
jl
insb
adc
cs
out
int3
aas
es
pop
mov
popl
sub
in
shl
xorl
popw
or
jo
push
out
jns
pop
jbe
cmp
cmp
call
mov
lock
mov
ljmp
fwait
out
add
mov
orl
das
bound
popl
lock
fwait
push
mov
mov
mov
pop
sbb
popfw
cmp
test
xor
mov
xchg
lods
xchg
sbb
pusha
jnp
mov
push
fcoml
and
push
andb
aas
vmovups
push
sahf
pop
xor
mov
pusha
or
outsl
push
into
mov
scas
add
sbb
jp
xchg
inc
xor
jle
mov
cli
out
mov
lret
mov
jge
mov
mov
fnstenv
jae
xor
jmp
ljmp
lret
mov
movsb
lock
sub
andb
dec
roll
test
push
leave
sbb
loopne
sub
add
cli
cmp
add
xchg
mov
push
in
add
movsl
dec
sahf
fdivs
ret
imul
test
jp
loope
or
xor
mov
fstl
int
dec
jmp
cmp
js
xchg
or
sbb
lcall
sbb
pop
lahf
cmp
xchg
ror
push
aaa
xchg
pop
jecxz
dec
mov
sbb
pop
inc
fdivr
sub
pop
fisttps
es
mov
scas
push
and
xchg
jle
js
clc
or
xchg
dec
push
add
mov
dec
stos
out
bound
inc
jbe
jne
arpl
lcall
clc
mov
push
sbb
sbb
jecxz
sbb
cwtl
scas
sub
ljmp
push
add
aad
les
adc
lret
je
adc
dec
cwtl
jmp
add
cmpsl
pop
dec
fwait
ds
je
xchg
mov
pop
fdivs
fidivrl
fisubrs
in
jle
mov
dec
mov
outsl
jg
je
mov
jmp
inc
fwait
je
jne
call
add
adc
push
jecxz
xorb
cmp
nop
inc
fildl
stos
xchg
xlat
dec
xlat
pop
stos
ret
jb
dec
test
movsb
xchg
push
or
or
cmpl
and
mov
adc
pop
cli
and
cmpsb
rolb
das
push
pop
xor
shr
xor
and
cmp
mov
xchg
mov
push
leave
jae
xor
test
cmp
xchg
xchg
adc
stos
nop
in
addl
inc
and
mov
cmp
sub
or
inc
jnp
ret
bound
stos
jb
inc
mov
cli
cltd
stc
lret
xchg
in
inc
ret
xchg
in
lcall
insl
cli
popa
mov
enter
jne
pop
out
jnp
out
jo
mov
push
clc
test
test
push
and
mov
lret
es
inc
pop
in
pop
jb
loop
jle
jmp
xchg
xor
aas
sti
in
mov
jg
jne
ret
push
and
jge
aad
adc
push
jp
movhlps
dec
repz
cltd
fsubrp
rol
jnp
mov
adcl
dec
or
ss
fstpl
mov
pop
addr16
imul
dec
push
insb
cmpsb
sub
pop
sbb
fistl
scas
js
mov
pop
stos
js
mov
or
hlt
mov
rorl
mov
outsl
xor
fisubs
xchg
fidivl
repz
stc
daa
xchg
les
sbb
aas
popa
push
ds
sub
repz
daa
mov
mov
fcmovbe
bswap
clc
test
out
mov
faddl
inc
adc
mov
and
cmp
lods
insl
addl
push
add
gs
inc
adc
pop
mov
push
js
imul
addr16
inc
int3
into
int3
movsl
pop
imul
or
mov
mov
leave
call
and
xor
fisubrs
and
repnz
sbb
inc
xchg
cmpsb
testl
mov
sbb
sbb
or
xchg
mov
into
or
push
outsb
adc
sub
lods
imul
jne
pop
imul
xorl
out
mov
pop
push
sub
imulb
pop
std
inc
into
insl
cmp
insb
insl
inc
neg
sub
dec
mov
sub
test
sbb
sbb
push
stos
pop
adc
dec
pusha
push
cmpsb
mov
out
or
or
jmp
lds
movsb
jle
lret
out
pop
and
rcll
jge
addl
push
fidivs
dec
stc
in
mov
pop
jne
inc
adcb
pop
scas
stos
ret
sbb
and
jb
repz
add
mov
pop
adc
xchg
ja
mov
cmp
jb
sbb
adc
and
or
push
fsubrp
fdivl
lcall
push
pop
cli
pusha
mov
xor
cmpsb
mov
mov
scas
decl
test
mov
pop
or
inc
fidivrs
cld
jl
ja
or
jbe
mov
push
and
ljmp
sub
sbb
fimull
xchg
into
add
aam
sbb
js
sub
jle
push
mov
push
ja
ljmp
or
std
ret
stos
cld
xor
mov
mov
jno
imul
sbb
cmp
push
and
pop
mov
and
les
pop
mov
xchg
mov
subl
scas
adc
nop
jb
out
sub
and
jmp
aam
mov
popl
mov
hlt
pop
mov
mov
or
pop
add
jmp
cmp
jg
jo
inc
adc
faddl
in
fcoml
fldenv
jbe
sbb
repnz
mov
jno
scas
clc
mov
movsb
xchg
sub
aam
push
aad
add
sub
bound
xor
adc
mov
sbb
cltd
lahf
mov
xor
test
fdivrs
jno
gs
mov
mov
aad
enter
lds
cmpsl
insl
push
fstpt
push
pop
fs
pop
mov
fstpl
lods
pop
jno
scas
jge
inc
cmp
xchg
pop
cmp
jne
gs
ficoms
dec
imul
fsub
or
mov
cwtl
in
in
mov
popa
aaa
popf
dec
dec
ror
fdivrl
pop
push
out
xchg
sub
dec
push
aam
sbb
out
movsl
mov
test
fiadds
enter
les
dec
popf
daa
lods
test
loop
js
mov
or
rcl
push
jmp
xchg
nop
int
jo
xchg
push
add
mov
cmp
push
pop
ds
lods
xchg
popa
jae
mov
xor
pop
add
sbb
sbb
cld
cltd
lods
inc
rcrl
das
insl
mov
jle
out
aam
aad
mov
nop
mov
push
mov
pop
pop
sub
out
lret
and
mov
dec
mov
xchg
int3
pop
pop
and
loopne
ret
mov
add
rclb
arpl
lret
dec
xor
push
lret
mov
imul
popf
out
xchg
inc
fsubr
sub
fisubs
aam
cmp
pop
notl
mov
mov
push
shll
add
mov
inc
lret
out
sub
fwait
mov
es
popa
shlb
cwtl
inc
aaa
aad
rcrb
xchg
or
xchg
pop
push
mov
pop
popf
lret
pop
scas
mov
std
xchg
sbb
mov
mov
mov
xorl
xchg
push
int
test
jo
and
daa
jno
and
call
sbb
push
das
pop
je
push
ss
sub
aas
outsl
shlb
popa
adc
adc
push
mov
pop
mov
outsb
ljmp
dec
std
push
or
push
shl
cmpsb
jno
mov
lea
in
lret
dec
sbb
jb
sub
mov
sub
call
cmp
int3
pop
mov
mov
shl
jb
inc
sub
mov
hlt
addr16
scas
arpl
js
in
mov
mov
inc
sub
fstl
cs
in
mov
movl
xlat
sbb
lcall
jae
xor
jbe
jo
mov
mov
icebp
out
fcoms
cmp
inc
mov
stos
aas
jge
stos
xor
cmpsb
ja
or
push
xchg
in
leave
xchg
loopne
test
daa
loopne
dec
loopne
data16
pop
leave
mov
mov
pop
imul
and
ds
cmp
jns
add
loop
push
jecxz
jg
inc
fbld
cltd
sbb
dec
repz
sbb
jo
pop
sub
or
push
mov
scas
mov
imul
shrb
inc
lods
insl
add
mov
and
shrl
dec
sbb
push
addr16
aas
mov
enter
sbbl
mov
push
stc
cld
popa
add
stos
arpl
arpl
lods
add
push
fisubl
sub
ss
aas
arpl
jecxz
mov
and
imul
outsl
inc
xchg
adc
ds
in
jb
jbe
mov
jbe
push
add
jb
pop
sbb
jne
fmul
in
jae
sbbl
xor
orps
push
push
jns
daa
add
cmp
xchg
int
pop
cmp
pop
or
xor
xchg
pop
pop
mov
xorl
pusha
cmp
pop
pop
jge
orb
or
rcrl
mov
cmp
mov
fistpll
jbe
data16
lret
cmp
dec
mov
add
and
or
out
cld
mov
jg,pn
push
stos
xor
jp
int
dec
push
mov
cld
outsb
mov
inc
jne
mov
clc
stos
or
or
pop
lods
shll
add
xor
xlat
jmp
jmp
or
jp
push
nop
std
cwtl
xor
aad
mov
out
cmp
cmpsb
js
ja
push
rclb
leave
arpl
std
push
mov
es
dec
push
sub
adc
mov
pop
mov
add
jmp
sti
enter
add
aam
push
roll
mov
jmp
xchg
iret
mov
dec
jmp
xor
stos
fcmovbe
push
clc
mov
adc
into
xchg
mov
enter
dec
push
adc
push
mov
push
cltd
xchg
mov
push
iret
int3
mov
cltd
xchg
push
inc
sub
jmp
ret
push
fxtract
jns
cmp
jecxz
xchg
add
loope
pusha
cmp
adc
jne
or
sub
clc
inc
lahf
mov
mov
and
pop
inc
mov
shll
push
inc
enter
fcomp
cmpsb
mov
data16
je
mov
jle
adc
xchg
rorl
imul
repnz
mov
pusha
out
or
sub
xor
inc
hlt
inc
pop
lea
or
dec
xchg
mov
notl
mov
aas
dec
fnstcw
scas
push
cmp
lods
les
add
cwtl
scas
jnp
inc
mov
hlt
sub
jmp
repz
xchg
addr16
and
add
out
clc
test
push
mov
push
mov
mov
inc
rcrb
add
cli
sbb
inc
shrl
aam
xor
dec
pop
and
ret
cmpsl
mov
push
out
sahf
pop
subl
arpl
mov
push
mov
inc
and
pop
fwait
ret
jge
cmp
je
cmp
hlt
lahf
int3
mov
pop
inc
roll
cmc
fsubl
out
mov
and
mov
repz
pop
cmp
scas
push
pop
lods
mov
push
dec
rcll
das
dec
fldl
out
enter
add
pop
lahf
adc
pop
inc
cmpsb
xchg
adc
stc
add
inc
xor
xchg
orl
inc
es
or
sbb
inc
into
lea
test
test
mov
jb
sbb
ja
mov
inc
loope
ss
out
aad
cli
or
adc
or
push
xor
xor
int
mov
arpl
mov
lcall
add
in
lret
mov
xchg
xchg
notl
arpl
out
xor
push
ja
cmp
fadds
fsts
or
jle
xchg
sub
mov
je
push
mov
ds
sbb
jle
subb
fmull
addr16
dec
pop
sub
stc
mov
adc
mov
mov
in
cmp
jmp
ret
xchg
mov
rcll
push
popf
push
and
mov
iret
jecxz
dec
push
ret
shrb
pop
add
jp
xlat
arpl
xor
mov
push
pusha
push
pop
pushf
and
dec
call
mov
jg
mov
jb
subb
pop
xchg
cld
mov
pop
jge
cmp
dec
and
cli
cmpsl
xchg
adc
dec
jle
dec
out
dec
cmp
je
cmpsl
popf
add
mov
sbb
inc
aam
pushf
rorb
popa
inc
repz
imul
or
stc
push
or
icebp
ud0
xor
dec
nop
and
push
mov
push
cmpsl
mov
xchg
cmc
xchg
std
pop
cld
push
jo
and
and
jle
fldenv
jmp
int3
mov
aam
and
test
jmp
and
push
mov
pop
xchg
adc
dec
push
rorl
imulb
dec
jmp
shll
mov
sbb
rcll
mov
or
push
cmpsb
and
fxch
aaa
lods
mov
xor
ds
mov
jbe
out
jecxz
inc
clc
cmpsl
lret
adcl
adc
dec
mov
xor
dec
push
fiadds
inc
in
push
xchg
adc
loop
xchg
call
xchg
fwait
in
mov
dec
enter
inc
mov
aaa
test
xor
cmp
movsb
mov
cmpsl
lret
mov
mov
ss
pushf
andl
lahf
int
ds
lcall
push
out
aaa
add
inc
lcall
out
add
inc
jno
and
mov
mov
mov
stc
dec
lock
fcomip
nop
fisubrs
add
stc
aas
jno
popf
sub
pop
out
les
or
pusha
pop
cs
repz
xor
pop
and
add
in
push
in
mov
dec
pop
xchg
push
cltd
adc
xor
push
lahf
cmp
lcall
out
cld
xorl
shl
js
mov
in
jns
dec
sbb
mov
clc
notl
fsts
iret
popf
enter
inc
mov
jp
inc
mov
jne
jge
dec
mov
sub
sub
add
dec
mov
mov
jb,pt
and
add
mov
inc
stos
ret
leave
jmp
and
insl
and
pop
and
ds
and
adc
cwtl
sar
loop
fcompl
sti
push
sbb
fldenv
mov
jb
sbb
cmpb
hlt
pop
sub
xor
xlat
inc
lds
imul
inc
hlt
mov
or
push
stc
or
dec
aaa
aaa
mov
mov
scas
push
pushf
add
push
mov
fcmovne
xor
fs
cli
push
aaa
aam
jbe
and
add
test
mov
mov
mov
adc
sub
out
mov
sbb
mov
xor
ja
rolb
into
ret
and
lcall
dec
mov
andl
jge
dec
arpl
repz
jle
out
sbb
xorb
mov
or
gs
ja
lcall
xchg
xchg
lahf
fnsave
ret
rcrb
xlat
ret
inc
xor
xor
sbb
mov
push
jmp
push
mov
pop
imul
mul
cmp
cli
pop
sbb
inc
outsl
gs
jae
jb
bound
arpl
xchg
fadd
cmc
mov
test
mov
mov
les
mov
adc
mov
popa
push
lret
popl
pop
test
in
sub
sti
pop
sahf
es
xchg
jbe
mov
addb
jecxz
call
jmp
push
xor
adc
loop
mov
insl
test
outsl
insl
pusha
push
stos
or
lods
jg
out
or
push
movsl
push
mov
shll
and
repnz
or
or
pop
push
or
test
cmpsb
mov
fldcw
push
mov
cmp
daa
aaa
fimuls
sti
mov
push
lret
xlat
xor
rol
data16
outsl
cmp
fsub
outsl
negb
push
mov
sub
push
mov
inc
addr16
into
loope
and
fnsave
sarl
jle
mov
mov
scas
xor
cld
cltd
les
testl
jo
jl
adc
cs
push
push
mov
lahf
adc
sub
mov
jle
test
sub
add
inc
sbb
int
xchg
cwtl
sar
add
mov
push
jle
aaa
cmpsb
imulb
sbb
lods
mov
mov
neg
movsb
and
pop
ds
or
insl
stc
outsb
scas
cmp
imul
jmp
out
adc
fcoml
lcall
repnz
cld
adc
mov
out
cmp
call
adc
subb
pop
cmp
pop
inc
xchg
inc
lret
imulb
sbb
fmuls
daa
sbb
jle
nop
add
int3
rcrb
xchg
ja
mov
stc
das
xchg
jmp
pop
mov
pop
in
push
lods
bound
out
enter
data16
pop
adc
push
ljmp
fs
sbb
pop
sub
jp
push
cli
ja
xor
lock
ja
scas
inc
jnp
sti
pop
loope
repz
js
mov
gs
push
sbb
hlt
ficoml
mov
adc
jns
hlt
rclb
popa
xor
push
jb
cmp
fisubrs
push
pusha
cmp
cmp
push
mov
cmpsl
mov
xchg
mov
adc
sahf
decl
pop
out
cmp
mov
out
xor
xor
mov
imul
mov
pop
cmp
pop
or
pushf
scas
pop
inc
fisubs
mov
iret
add
into
addr16
rorb
and
add
pop
out
xor
dec
xchg
xor
out
mov
mov
inc
mov
push
add
jbe
xchg
lods
sbb
lcall
mov
inc
dec
xlat
rorb
leave
mulps
out
inc
mov
push
add
push
or
adc
pop
out
and
iret
jo
mov
mov
fs
daa
iret
ret
sarb
xor
ds
popa
mov
faddl
lock
mov
xchg
push
cmc
inc
test
repnz
pop
pop
ljmp
shll
cmp
in
jp
xor
aaa
scas
aaa
jo
xor
ljmp
pop
mov
gs
jmp
pop
push
mov
push
jmp
ret
adc
xor
cld
jns
push
das
je
and
mov
fdivl
mov
xor
mov
sbb
pop
hlt
enter
pushf
jbe
mov
mov
enter
rcll
sahf
push
and
std
in
xchg
adc
mov
add
adc
mov
jl
addr16
jg
addr16
jle
jns
jnp
sbb
cmp
daa
push
pop
mov
iret
or
movsb
decl
xlat
jbe
sub
cmp
cmp
mov
xchg
or
int3
cmp
gs
stc
jecxz
mov
pop
ret
outsb
dec
rcl
pop
adc
xchg
xchg
int
dec
clc
or
xchg
inc
imul
and
and
sbb
fcmovnu
push
or
xor
imul
inc
pop
ret
repz
mov
lret
pushl
inc
inc
mov
ja
fcomp
xor
sub
std
stos
xchg
sahf
lea
or
pushf
inc
sbb
fcomp
pop
pop
mov
data16
sub
and
push
mov
cmp
test
mov
iret
cmp
ror
das
add
cmp
test
adc
ret
mov
dec
xchg
out
pop
clc
shrb
int
aam
cmp
xchg
pop
andb
sub
ss
shrb
inc
jl
jae
mov
xor
jecxz
mov
je
lret
and
sub
inc
cmp
dec
fnsave
mov
lods
mov
dec
add
test
lock
in
jns
stos
sbb
xor
jle
and
ret
sub
jbe
jns
rclb
xabort
push
cmp
adc
adc
jecxz
iret
test
sahf
jl
cmp
and
int
jbe
icebp
cltd
cmp
xchg
sbb
fisttps
in
cmpsb
mov
pop
lods
leave
sar
fidivl
mov
into
insb
xchg
push
imul
dec
cmp
lods
into
cmp
ror
or
lods
cwtl
cmc
pop
rorb
outsl
scas
push
push
sbb
dec
mov
fdivrl
jmp
xchg
repnz
dec
rcrb
hlt
mov
int3
inc
std
outsb
xor
cmc
enter
jecxz
sar
xchg
xchg
test
lret
mov
pop
mov
je
stc
mov
mov
popa
pop
lds
pop
xlat
es
lea
aas
imul
loop
jae
sbb
mov
ret
pushl
mov
pop
add
jmp
test
or
cmp
cmc
lods
and
push
add
xor
fstpl
mov
inc
imul
ficompl
ret
lock
aad
dec
cltd
xchg
sarl
stos
out
stos
add
xchg
xchg
add
mov
jnp
xchg
cmp
jne
loopne
and
add
cmp
popf
mov
add
sbb
inc
stc
xlat
sahf
and
sub
sub
dec
cli
jne
push
sub
mov
adc
nop
mov
xor
mov
cld
pop
mov
adc
or
daa
insb
cltd
adc
clc
int
xlat
mov
xlat
rcll
test
fs
in
test
andl
aad
scas
insb
adc
push
or
outsb
scas
mov
mov
add
mov
cli
add
into
xchg
xchg
xchg
dec
jle
inc
mov
mov
fnstsw
xor
dec
mov
inc
bound
je
pusha
insl
mov
dec
sub
dec
ja
loop
mov
push
sub
push
sbb
pop
int3
inc
lret
mov
aaa
sub
xor
sub
scas
dec
lcall
bound
scas
or
sahf
sub
sub
add
fnstcw
adc
test
add
add
pop
mov
add
hlt
jae
cmpsl
inc
dec
jo
cmp
add
in
cmp
lret
ret
jne
dec
adc
int
lcall
push
lahf
or
cltd
mov
mov
je
mov
lret
popa
inc
mov
sbb
xchg
mov
xchg
mov
xchg
inc
in
xchg
lea
loope
mov
stos
shll
cmpl
push
int
jbe
inc
movsb
dec
outsl
or
repnz
ds
and
jp
inc
sysenter
mov
dec
pop
cmpsl
fwait
jmp
mov
loopne
jns
rcrl
outsb
dec
mov
pop
faddp
mov
adc
mov
mov
stos
mov
jae
sbb
pop
pop
xchg
sbb
icebp
into
int3
mov
cmpsb
negb
data16
push
mov
outsl
fs
inc
or
imul
push
mov
nop
je
jge
cmpsl
repz
stos
data16
loope
ret
lea
movsl
sar
orl
jle
int3
cs
cmpsl
mov
add
sub
iret
sbb
imul
shl
dec
jecxz
xlat
adc
sahf
in
hlt
mov
xchg
jmp
in
cmpsb
in
push
xchg
popa
ret
in
push
lock
dec
xchg
push
jmp
nop
jne
aas
enter
movsl
scas
xor
pop
jb
imul
dec
fs
xor
mov
and
les
pop
out
pop
sub
sub
inc
jo
rclb
in
xchg
loopne
leave
jle
cwtl
push
cmp
call
icebp
not
fwait
adc
pop
mov
add
or
cmp
insb
jecxz
mov
movsb
dec
arpl
popf
mov
dec
xchg
daa
adcl
scas
test
pop
movb
lds
int3
mov
mov
js
lods
aas
pop
mov
pop
mov
push
dec
iret
sub
jnp
cmp
pop
mov
aas
push
push
mov
pop
test
testl
xchg
sbb
nop
cmpsb
mov
jbe
lahf
pusha
mov
push
dec
inc
sub
xchg
xor
xor
or
addr16
add
sbb
fldenv
add
sbb
lcall
cmp
loopne
mov
daa
rcll
xor
pop
xor
clc
mov
xor
cs
sbb
icebp
orl
adc
or
mov
aad
sub
cltd
movsl
das
mov
lods
mov
and
ret
adc
xchg
lret
fwait
or
mov
inc
rcrb
jne
jmp
mov
mov
mov
jmp
sub
je
xchg
inc
stc
dec
push
in
loope
dec
in
int3
testl
imul
in
jbe
push
jmp
or
sbb
insb
ds
movsb
dec
push
pop
mov
lret
mov
insb
cs
xchg
bound
test
xchg
sub
adc
dec
xor
je
bound
or
mov
cmpsl
push
out
mov
sarb
xor
mov
nop
sbb
adc
lret
xor
dec
aaa
enter
mov
mov
inc
sbb
pop
or
out
nop
loope
mov
xorl
add
lret
stc
mov
gs
cltd
das
int3
or
sub
mov
mov
pop
xor
mov
xor
cmpsl
and
movsl
mov
push
repz
or
sub
jg
cmp
push
sbb
jbe
call
sbb
xchg
add
std
cmpsl
imul
or
pusha
xchg
roll
ds
mov
sahf
lret
mov
fmull
in
std
insb
int3
insl
sbb
addr16
dec
cli
push
mov
jle
push
inc
and
dec
fsubrl
pop
add
pop
scas
ret
ss
das
sbb
addl
dec
mov
fcmove
jle
mov
push
lock
xchg
scas
and
sub
clc
clc
mov
rorb
mov
insb
push
rcll
xor
jp
aam
in
push
add
push
pop
pop
mov
rcll
xor
enter
les
pop
or
push
fcmovbe
cmp
gs
aam
mov
xchg
lock
mov
sbb
xor
ljmp
fs
dec
mov
sbb
push
jno
dec
jne
repz
push
jle
adc
repz
xor
xchg
loope
lock
fmull
push
mov
push
notl
bound
icebp
xchg
idivb
loope
daa
inc
sbb
adc
stc
sub
mov
or
rolb
test
mov
or
cmp
dec
mov
movsb
sbb
dec
clc
or
cmpsb
pop
roll
cwtl
cmp
rcll
jmp
mov
lock
fimull
fneni(8087
inc
test
jmp
mov
dec
jecxz
jbe
inc
or
mov
xor
or
faddl
cmpl
push
mov
jno
mov
dec
cmp
jbe
mov
cltd
adc
pop
xchg
stos
jecxz
or
or
adcb
es
fimull
mov
add
orb
push
lret
adcl
xor
stos
std
or
sti
shrl
xor
jp
outsl
call
call
pop
mov
xor
push
movsl
insb
imul
jge
xor
pusha
add
jge
cli
inc
jb
ljmp
dec
dec
jecxz
mov
or
inc
mov
jl
jmp
arpl
fisubrs
stos
cmp
andl
adc
dec
int
sbb
adc
sub
aam
or
pop
push
mov
cmp
push
gs
add
in
jnp
mov
cmc
mov
jno
scas
mov
iret
mov
sbb
in
enter
js
neg
jge
mov
or
loop
xchg
cli
mov
hlt
jg
stos
cmpsl
fs
mov
and
cmpsb
xchg
xor
inc
daa
ja
pop
mov
outsb
outsb
mov
pusha
xchg
cmc
pop
in
push
mov
mov
cs
pop
lcall
dec
pop
loopne
orb
lcall
inc
pop
push
cwtl
push
dec
jns
and
into
aad
lcall
cmp
and
test
lea
mov
xchg
cmp
loopne
outsb
mov
jmp
mov
cmpsl
push
mov
call
ret
cltd
repz
push
mov
loope
rcrl
jmp
xchg
call
pop
jno
imul
daa
out
in
iret
leave
xor
cwtl
cmp
jl
ljmp
or
cmp
clc
rcrl
aam
lods
ret
mov
ret
cltd
jl
mov
js
cmp
add
aam
pusha
adc
xchg
xchg
aad
pop
dec
sbb
push
jno
fs
or
mov
shrb
add
dec
call
mov
in
add
loope
or
int3
inc
pop
mov
mov
icebp
pushl
scas
lods
aam
out
mov
es
rcrb
shr
jp
push
ror
cli
jp
lods
sarb
xor
xchg
test
fwait
mov
rorl
push
mov
xor
popa
jecxz
cmp
add
out
pusha
icebp
stc
popa
test
xchg
xor
jbe
test
cli
xchg
pop
aam
outsb
fs
lods
mov
sub
cmp
lahf
scas
dec
lods
mov
sahf
or
mov
insb
sub
loope
divl
mov
push
push
jp
fs
pop
sahf
int
cs
xor
fsubrl
sub
cwtl
xor
cmp
fwait
popf
inc
xor
or
ret
test
adc
inc
es
ja
inc
sti
test
cmp
inc
stos
or
pop
das
mov
cmp
xchg
xchg
orb
add
imul
mov
xchg
push
movsl
leave
xor
incl
data16
inc
lea
pusha
lcall
fwait
adcb
insb
fimull
cmp
pop
pop
jno
fisubrl
call
jbe
mov
out
mov
and
jbe
or
shl
sub
stos
jo
fsubrl
fnstenv
out
movsb
pop
out
enter
inc
movsl
popf
aaa
dec
pop
mov
sbb
inc
mov
or
das
filds
inc
inc
sbb
pop
fsubl
std
pop
adc
or
mov
dec
test
lret
mov
or
sub
pop
leave
imul
shrl
loopne
rcrl
add
daa
outsb
pop
mov
dec
shll
iret
sbb
add
and
lahf
push
popf
insl
and
fbstp
out
push
std
xor
lahf
mov
pop
ds
cwtl
loopne
mov
jns
sbb
icebp
imul
jmp
adc
int3
mov
data16
out
adc
add
ja
dec
add
xor
cs
scas
mov
push
cmp
je
sbb
cvtpi2ps
xchg
and
outsl
sub
loop
and
sbb
dec
sti
push
dec
push
mov
mov
and
mov
pop
fidivs
jp
cmpsb
mov
mov
pop
outsl
add
fs
pop
cmpsb
xchg
mov
jg
js
push
gs
popa
jmp
hlt
cmp
jbe
add
push
jmp
push
push
adc
dec
ror
dec
pop
xorl
fdivp
js
int
add
shll
ja
loop
ss
pop
call
or
push
xchg
mov
jecxz
movswl
jno
adc
push
and
test
mov
mov
cli
pop
mov
movsb
imul
push
mov
mov
xor
popa
cmp
adc
xor
sarl
sub
dec
call
cltd
jmp
mov
hlt
jne
and
out
in
ljmp
xchg
nop
dec
add
mov
inc
pop
lcall
nop
add
or
mov
ret
inc
or
push
sti
ss
and
pop
xchg
pop
aas
adc
xchg
jle
jne
in
jmp
and
mov
adc
clc
inc
test
fs
pop
adc
cld
or
sahf
repz
fs
sbb
mov
sub
aad
les
push
push
fsts
imul
insl
lahf
jecxz
loope
jle
les
mov
sub
xor
or
call
adc
push
xor
jae
dec
lods
cmc
mov
jmp
ss
jg
shlb
sub
push
push
pop
fdivrl
sbb
or
hlt
mov
xor
pop
and
mov
incl
sbb
mov
andl
adc
stos
push
push
push
cwtl
inc
in
mov
outsb
mov
je
test
dec
inc
xchg
out
cmp
mov
std
push
pop
mov
jb
sub
push
notl
xchg
mov
push
or
pop
mov
and
add
jp
ljmp
test
popa
aad
or
dec
jno
mov
test
sub
in
shlb
cmp
dec
in
adc
xchg
mov
push
jp
and
or
sbb
cwtl
aaa
lcall
mov
loopne
pop
cmpsl
loope
add
and
scas
mov
rorb
stos
fildll
cmpsl
test
shlb
sahf
cltd
jnp
mov
popa
mov
mov
mov
pop
and
das
sbb
les
sbb
xchg
call
inc
xchg
subb
mov
test
mov
xchg
pop
push
xor
mov
stos
pop
test
xchg
or
jmp
lods
decb
pop
decb
stos
jp
sbb
out
dec
lods
and
cmp
xor
dec
jmp
fcomps
mov
add
xor
push
fmul
enter
jno
ret
gs
dec
sbb
ja
inc
and
mov
cld
addb
lods
int3
push
bound
outsl
stos
xor
imulb
jne
add
enter
cld
xchg
mov
xchg
mov
xchg
push
mov
xor
dec
pop
in
jne
sbb
aad
arpl
or
push
mov
lahf
call
gs
dec
push
inc
dec
jmp
cmpsb
jp
push
ja
lods
pop
stc
mov
mov
jp
mov
into
sub
gs
adc
sub
and
lret
jge
fnstenv
adc
and
xchg
gs
repz
out
cli
mov
mov
push
jge
mov
mov
call
xlat
mov
ror
enter
pop
dec
mov
mov
or
adc
xlat
xorb
add
jmp
adc
mov
lret
inc
xor
lcall
pop
lret
shrb
int3
out
sti
sbb
xchg
fildl
test
jae
repz
pop
cmp
mov
imul
fstps
xchg
dec
lret
dec
out
xchg
add
test
addb
or
mov
aas
hlt
inc
cmp
xchg
bound
xor
testb
mov
push
enter
jge
sub
cli
imull
fadds
std
cmc
stos
pusha
and
ret
std
dec
xchg
cmp
int
dec
mov
es
jg
int3
inc
stc
pop
mov
js
sbb
xlat
loopne
mov
push
aad
call
inc
adc
aad
mov
cltd
xchg
jmp
add
adc
push
pushf
imul
inc
and
cmp
rolb
push
xor
lcall
ds
fsubrp
adc
or
add
mov
jecxz
inc
lods
insb
adc
cmpsl
popf
movsb
pop
cmp
lea
lret
repnz
imul
enter
sub
mov
scas
inc
sbb
and
cld
push
fistl
shl
jecxz
sbb
movsl
cmp
sub
jl
pop
mov
pop
out
and
push
dec
or
or
in
inc
mov
loope
sahf
or
popf
sbb
or
push
sbb
fsubs
rcrl
cmp
rcrl
dec
loop
add
inc
dec
dec
sub
ret
dec
push
push
mov
inc
ficoml
pushf
or
or
mov
mov
sti
std
mov
mov
pop
add
sbb
jmp
scas
mov
or
lret
inc
xchg
pop
out
adc
adc
cmp
dec
adc
sub
repz
test
dec
test
sub
jle
mov
lret
int
push
movsb
push
push
xchg
pop
or
out
pop
into
mov
lret
pop
lods
pop
shll
xchg
std
xchg
push
repz
dec
mov
xor
mov
jecxz
mov
clc
cmpsb
cmp
push
or
ja
xchg
scas
lock
and
lods
lds
hlt
xor
push
es
inc
cmc
push
pop
push
or
xor
mov
pop
push
mov
inc
addr16
jae
in
idivl
inc
jmp
cwtl
add
jae
test
aaa
pop
ljmp
jno
idivb
aad
pop
in
pop
sbb
mov
loopne
adc
mov
out
ror
sti
push
jge
mov
ret
push
mov
or
inc
movsb
add
sbb
test
outsl
pushf
lret
pop
js
bound
inc
fisttpll
dec
and
shlb
clc
jne
cmpsb
cwtl
inc
call
or
in
iret
fdivrs
addb
mov
mov
push
rol
adc
addr16
jmp
pop
loope
stos
test
mov
loopne
stc
jp
fmuls
int3
jb
sub
lahf
add
sub
daa
fldcw
cmc
pop
enter
daa
inc
and
and
or
cmp
mov
lock
pop
adc
ret
sub
xor
xor
mov
push
jbe
mov
ret
pop
repz
das
rol
imul
adc
add
lret
sar
in
push
mov
sbb
cli
inc
mov
js
lret
or
sbb
fdivl
arpl
mov
xchg
jp
es
cmp
xchg
imul
aaa
test
sysenter
leave
testl
incb
lods
cld
out
or
das
sti
xchg
fidivrs
lcall
xchg
lods
out
or
pop
pop
test
fiaddl
mov
xor
or
push
jne
push
loop
or
rolb
mov
sbb
mov
sti
cmp
rorl
daa
sahf
mov
sub
into
cmp
js
je
out
and
xchg
pusha
cmc
pop
aas
js
xchg
push
inc
pop
icebp
mov
cmp
sahf
xchg
xchg
pushf
gs
or
daa
pop
sti
aam
pushl
push
cmc
test
xor
test
fistpll
mov
imulb
sbb
xchg
xchg
sub
inc
popa
push
and
icebp
jge
insb
repnz
or
ret
ror
cltd
and
jae
fwait
insl
adc
out
ja
mov
adc
sbb
iret
loopne
cmc
out
ret
cwtl
arpl
fs
or
pop
movsb
push
xchg
and
fcmovnbe
jg
inc
push
out
sbb
jmp
imul
mov
add
jbe
add
add
cld
arpl
daa
int
je
shll
dec
stos
lock
and
jbe
pop
sbb
xor
movsl
hlt
out
shlb
adc
push
mov
cltd
gs
push
mov
inc
cmpsb
mull
mov
dec
in
fidivl
out
sbb
mov
or
icebp
roll
fimuls
ja
out
mov
sti
lods
adc
stc
mov
jbe
cld
jnp
sbb
lahf
scas
pop
mov
into
loop
fnstsw
mov
andb
incb
pop
xor
mov
mov
cs
xchg
loopne
bound
ret
adc
out
mov
jecxz
shlb
loop
nop
sub
push
cmpsl
jecxz
pop
fwait
mov
jbe
sbb
fisubrl
mov
mov
jbe
mov
inc
into
cmp
add
js
adc
mul
pop
xchg
cmp
jl
jmp
inc
out
mov
daa
adc
sahf
addr16
and
sbb
out
pop
stc
sub
and
add
xchg
jo
sbb
xor
pop
nop
mov
cmpsb
andl
pop
or
icebp
jne
jg
mov
test
and
pop
out
ficompl
mull
xchg
movsb
xchg
adc
sbbl
add
mov
inc
inc
in
test
mov
jne
lods
mov
fidivs
jae
arpl
mov
mov
jl
arpl
je
out
scas
inc
mov
xchg
decl
pop
popa
addr16
out
mov
das
movsb
fisubs
bound
mov
xlat
fprem
das
jmp
cmp
mov
test
clc
xchg
stos
and
loop
jnp
mov
stos
cmp
out
adc
or
iret
cs
fnstenv
out
xor
sbb
nop
rclb
jl
push
adc
in
cld
rolb
mov
dec
loop
repz
icebp
xchg
aam
xchg
test
cmp
xchg
xor
and
mov
in
rolb
adc
lret
or
cli
inc
scas
rorb
ljmp
out
cltd
mov
into
or
lds
cmp
add
inc
sahf
inc
stos
xchg
inc
dec
out
xchg
fcomi
mov
ja
stos
cltd
dec
lods
sub
pop
out
jle
mov
push
les
lcall
fsts
nop
scas
cs
pop
andl
and
loope
push
mov
ret
adc
xchg
mov
xor
or
cmp
or
lret
ss
insb
std
sub
sbb
test
aaa
sub
into
xor
das
imul
aad
inc
pop
cmp
lcall
cli
push
and
ss
push
xor
adc
fwait
out
adc
int
push
or
stos
add
lea
inc
es
push
insb
xchg
or
xchg
and
mov
and
nop
out
push
fdivl
push
adc
clc
sub
imul
je
in
and
push
fnstenv
xchg
imul
sub
sbb
jp
lods
inc
cld
or
inc
push
dec
push
scas
fcomi
data16
rcrb
fwait
jbe
xchg
lods
add
enter
dec
aaa
xchg
xor
das
jp
and
sbbl
add
in
out
out
sti
cmp
addr16
mov
cmp
dec
aad
lds
and
repz
imul
xor
pop
out
xor
jmp
out
fcmovnb
scas
dec
inc
das
mov
mov
cmp
rcl
ret
and
ret
stos
popf
push
loopne
aad
nop
into
rclb
mov
fwait
repnz
sti
jp
xor
lret
mov
stos
pop
jge
inc
or
ljmp
sbb
sub
and
jbe
in
int3
stos
mov
into
mov
pop
imul
pop
ds
sbb
and
inc
jge
dec
adc
jp
iret
fwait
out
push
pop
das
sbb
push
xlat
and
data16
push
fsubl
dec
xchg
test
and
cmp
mov
das
out
mov
mov
and
scas
xchg
xchg
mov
sbb
mov
divl
lahf
xor
mov
or
pop
popa
int3
outsl
mov
js
xchg
push
pop
inc
sarl
xor
test
xor
dec
icebp
stos
adc
lods
push
xor
loopne
imul
push
dec
enter
xchg
mov
ljmp
sub
add
dec
push
sbb
andl
sub
outsl
sbb
cmp
rorl
adc
scas
dec
shlb
add
jno
mov
xchg
dec
cli
frstor
out
shlb
lods
jmp
dec
jle
fdiv
fnsave
add
ss
mov
mov
push
or
or
xchg
pop
mov
out
add
out
rcll
arpl
int3
adc
mov
push
push
cld
jge
xor
sub
add
xchg
pop
movd
xchg
lock
inc
sarl
mov
lret
out
or
int
sahf
mov
jl
jo
xor
mov
dec
adc
sarl
nop
test
jb
das
dec
mov
iret
adc
push
push
jp
clc
jl
cmpsb
mov
cmc
mov
stc
into
shrb
jp
jmp
adc
jg
in
pop
repnz
xchg
and
jns
pushf
xor
push
sar
push
mov
mov
cmpsb
pop
imul
shl
outsl
and
adc
arpl
or
ljmp
cs
rol
fiadds
jo
pop
dec
cwtl
xor
clc
out
mov
lcall
vzeroupper
cmp
mov
sub
mov
and
insb
xor
inc
mov
or
fisttpll
idivb
dec
mov
scas
pop
xchg
enter
add
js
iret
into
mov
mov
insl
add
lret
ss
jb
jmp
cmp
movzwl
mov
xorl
scas
aam
push
cli
mov
pushf
jo
scas
jp
loop
insl
sub
adc
cmp
aaa
scas
cmp
pushf
stos
pop
or
jle
stc
mov
lea
rcrl
jmp
jg
in
dec
mov
xor
insb
sub
and
jge
test
mov
negl
xchg
shll
in
and
pop
orl
add
stos
mov
push
fisttpll
loopne
sti
mov
lcall
xlat
dec
add
jmp
jl
int
out
push
imull
sar
adc
push
mov
dec
sub
jp
jmp
xchg
push
add
jb
faddl
pop
xlat
xchg
imulb
lods
in
aam
std
xor
pop
insb
push
inc
lods
in
das
ret
arpl
pusha
push
pop
into
inc
mull
ja
cmp
adc
push
mov
add
xchg
cmp
inc
add
jg
or
fcoms
xchg
pop
ss
out
mov
sbb
xchg
dec
lock
jl
jge
int3
and
mov
sbb
iret
jge
mov
sarb
adc
or
or
push
pop
jno
fsts
sbb
fsubrl
subb
sahf
pop
sub
jmp
out
testl
jbe
adc
add
mov
fwait
pop
das
movsb
shr
mov
xchg
les
ret
mov
std
push
fs
paddusb
xchg
adc
addr16
dec
pop
pop
adc
dec
add
cmp
call
repnz
fstl
mov
arpl
mov
test
jecxz
sub
ds
mov
repnz
push
sub
sub
dec
lahf
adc
add
pop
sub
mov
mov
add
jecxz
and
dec
mov
fcoms
jns
mov
pop
sahf
lods
loope
and
andb
jno
jge
pop
in
popf
cmp
pop
pop
mov
inc
leave
addl
jl
inc
sub
stos
scas
adc
inc
xor
cs
shlb
push
outsb
pop
faddl
adc
das
ljmp
mov
add
jnp
mov
inc
add
call
cld
shll
mov
add
xor
fdiv
cmc
inc
aas
test
shl
sbb
push
or
pop
mov
lahf
ja
lea
xchg
movsb
mov
enter
fidivl
icebp
in
mov
ss
and
lcall
ficompl
loop
and
mov
sub
std
jl
mov
fcoml
movsb
leave
sbb
mov
mov
pushf
mov
sub
jnp
lret
lret
jmp
fadds
add
cmp
jno
adc
cltd
sbb
dec
rclb
subl
loope
movsb
std
aad
xlat
popa
mov
xchg
mov
xor
or
imul
and
pop
mov
jno
dec
fst
mov
push
mov
lret
inc
ror
daa
and
pop
fsubs
cmpsb
sub
and
mov
mov
xor
inc
movsb
cmp
sarb
xchg
loopne
pop
sahf
add
adc
shl
filds
mov
addr16
in
lcall
or
out
xchg
arpl
xchg
jmp
xorb
cmp
mov
dec
loop
mov
push
mov
enter
push
cwtl
dec
pop
mov
dec
lret
insl
iret
shll
inc
mov
jns
mov
outsb
mov
roll
cmpsl
std
or
jns
adc
push
xchg
dec
lcall
lret
faddl
dec
jb
sub
enter
aaa
aaa
mov
ja
pop
roll
test
xchg
pop
jns
aaa
add
subl
icebp
outsb
cmp
sbb
inc
not
fwait
mov
pop
add
mov
sahf
cmp
jmp
jl
dec
add
and
mov
lcall
mov
push
push
add
sti
insb
pop
fisubl
mov
out
in
stc
lock
adc
mov
add
pop
xor
push
sub
xor
out
mov
test
rol
fistpl
push
pop
idivb
inc
mov
sub
sub
mov
mov
lock
dec
xor
fisubs
sub
dec
mov
imul
xor
mov
addr16
es
sub
pop
push
pop
stos
bound
mov
imul
repz
dec
or
mov
and
jge
mov
mulb
cs
sub
lcall
push
push
fisubl
fwait
sbb
jge
pop
lods
xchg
add
push
sbbl
cmp
lea
sbb
mov
stos
ret
sub
call
mov
sub
fldenv
rep
lods
adc
adc
out
cmp
mov
mov
push
ljmp
fs
pushf
inc
mov
mov
add
push
mov
push
or
ret
dec
lahf
loop
and
shl
and
inc
loopne
mov
add
sbb
int
pop
aas
mov
loope
cmpl
xchg
loopne
push
xchg
pop
push
xchg
cs
and
lea
sub
xchg
mov
jle
mov
outsb
mov
cmp
shll
arpl
adc
inc
fisubrs
sub
xchg
xor
hlt
xor
data16
les
mov
les
jne
mov
test
mov
xor
testb
hlt
shlb
or
inc
lahf
mov
xchg
xchg
lods
filds
jmp
cmp
daa
inc
ficoms
ds
icebp
mov
or
into
shrb
pop
and
mov
sar
loop
and
out
enter
sbb
mov
adc
pop
bound
push
das
pop
xchg
js
jae
stc
fldenv
jbe
or
xorb
int
xor
mov
push
inc
push
cli
subl
push
lahf
or
loop
mov
push
and
or
add
out
mov
sahf
add
adc
add
dec
xor
int
mov
pop
insb
pop
into
adc
jbe
sub
ja
out
ds
pop
inc
pushf
shll
imul
ljmp
ljmp
jle
clc
jb
loopne
inc
fs
xor
js
shrb
sbb
inc
adc
xlat
outsb
mov
out
mov
mov
dec
cltd
test
push
push
xor
xor
cwtl
cmpsl
sbb
std
xor
push
dec
out
arpl
ja
add
pop
cltd
sbbl
mov
mov
pop
mov
push
std
cmp
mov
pop
mov
lods
ss
test
mov
pop
inc
or
ss
mov
mov
mov
out
pop
jmp
incl
inc
and
cmp
dec
and
lret
jmp
icebp
shrl
or
dec
mov
fcmovne
clc
sbb
dec
inc
jle
cmp
cmp
shlb
sbb
push
mov
mov
mov
pushf
xchg
ljmp
lock
xchg
jbe
inc
cmpl
jbe
xchg
inc
ja
aaa
je
test
jle
jb
fs
movsl
andl
dec
mov
fwait
push
xlat
mov
out
pop
sarl
lea
mov
dec
pop
outsl
str
mov
pushf
and
jle
std
cmp
mov
mov
sbb
insb
jl
mov
dec
sub
lds
testb
jg
inc
dec
jne
hlt
or
in
mov
mov
ss
add
mov
adc
iret
or
pop
fisubs
int3
test
mov
mov
cmp
jecxz
loopne
xlat
sub
mov
cwtl
aas
pop
fisttpll
cmp
pushf
mov
ja
sub
out
xchg
dec
adc
mov
aaa
enter
lahf
jecxz
mov
js
ja
ret
xchg
dec
stos
ds
pop
negb
dec
sahf
imul
cwtl
or
icebp
or
mov
sbb
pop
mov
pop
lret
xor
add
lahf
cmpsb
fsubl
adc
pop
push
mov
loope
mov
mov
aam
push
sub
movsl
sbb
pop
sbb
sbb
and
aad
pusha
dec
je
xor
popa
add
cmp
push
add
xchg
xchg
int
in
push
movsl
and
cmp
scas
sub
hlt
loopne
jo
cs
sbb
mov
xchg
jmp
mov
cmp
push
inc
jb
mulb
pop
jge
xrelease
int
inc
ret
push
dec
push
cmpsl
cmpsl
popf
decb
mov
adc
pop
mov
fxch
or
mov
push
gs
lcall
dec
mov
mov
jecxz
sbb
inc
and
jb
bound
xor
mov
enter
jnp
jmp
mov
out
cmpsb
sti
fsubrl
nop
mov
test
dec
imul
test
call
adcb
dec
gs
and
dec
das
adc
sub
xor
xlat
xchg
popf
mov
dec
popa
in
fnstsw
xchg
sbb
adc
xchg
sbb
xor
adc
mov
cltd
sahf
jp
int3
mov
pop
sbb
rcll
mov
mov
cmp
lock
pusha
dec
int
sub
xorl
orb
jge
repnz
jmp
in
xor
mov
test
cli
es
adc
mov
jle
cld
xchg
cld
or
mov
pop
pop
push
add
sti
cmp
sbb
aaa
sbb
push
cmp
in
jb
in
int3
sbb
stos
xchg
das
test
test
pushf
sbb
pop
dec
xor
jmp
push
insl
cld
pushf
imul
push
lods
lods
in
mov
addr16
push
mov
stos
ds
jmp
jbe
incl
test
cld
mov
cmp
fsubrs
arpl
rclb
jbe
jp
inc
pop
pop
jnp
sub
or
lret
mov
test
xor
mov
push
iret
dec
sbb
rclb
add
sti
xor
mov
or
les
jge
cwtl
mov
cmp
aas
nop
jmp
mov
push
dec
pop
test
mov
pop
lahf
loop
jmp
push
repnz
ljmp
mov
mov
fisubs
sub
mov
pop
or
and
push
outsl
and
adc
adc
pop
out
jo
dec
mov
push
mov
mov
maskmovq
divl
adc
daa
sbb
cmpsl
dec
sti
std
jecxz
jno
mov
add
rclb
xor
out
adc
xor
add
movaps
std
bound
inc
cmpl
xchg
push
mov
out
and
and
out
rol
je
cmp
add
add
data16
addb
mov
mov
imul
sbb
pop
hlt
jmp
mov
xchg
cmp
add
prefetcht1
xor
bound
xor
sbb
adc
mov
jl
xchg
lahf
pop
jbe
jae
rolb
test
and
idiv
fiaddl
arpl
xor
add
pop
sub
test
test
pop
inc
push
lahf
daa
sbb
sub
movsb
rclb
ret
jae
stos
mov
xor
jmp
lret
testl
mov
fisubs
mov
jmp
jo
pusha
loopne
lods
inc
rorb
sub
mov
pop
out
scas
rcrb
stos
ficompl
jne
push
dec
or
jg
mov
and
mov
jg,pn
lods
sub
bound
sub
outsb
lock
sub
jae
lods
into
mov
pop
in
push
imull
lods
outsl
stos
popf
push
inc
mov
push
in
mov
mov
mov
scas
shr
adc
jl
stos
jmp
leave
repnz
and
test
mov
arpl
mov
bound
pop
test
repz
push
dec
and
shl
das
pop
mov
and
jg
mov
mov
stos
add
cmc
jecxz
mov
outsl
loop
sti
jne
movsl
aas
and
xor
sub
pusha
mov
int3
lods
scas
sbb
aaa
and
into
dec
sub
sbb
enter
into
dec
das
xlat
aas
xor
pop
dec
ja
jle
inc
sub
sub
stos
insl
jae
sbb
lds
fs
xlat
jns
inc
and
xor
xchg
repz
sbb
or
mov
insb
push
arpl
xor
std
sbb
push
lea
in
aas
lret
fs
cli
ljmp
push
icebp
or
mov
push
pop
jb
pop
or
dec
or
cmp
sub
sarb
ret
mov
test
add
or
or
mov
jno
jne
xor
inc
inc
sbb
sbb
icebp
popf
add
cld
and
push
in
insl
inc
int
leave
cmp
add
sbb
xchg
xor
mov
cmc
loop
aam
xchg
sahf
xchg
dec
int
cmc
jno
sbb
std
adc
jbe
push
stc
js
mov
call
lahf
fisttpl
adc
fiadds
xchg
push
imul
xchg
mov
push
push
xchg
jne
andb
push
jl,pt
sbb
test
movsl
mov
and
inc
repz
std
add
pop
fildll
add
and
push
or
inc
sub
out
push
or
out
pushf
inc
fwait
lock
stos
es
xchg
rcrb
mov
mov
repnz
arpl
lods
shrl
cmp
std
inc
jl
mov
jl
pop
cmp
filds
test
movsl
pop
out
mov
frstor
dec
flds
jo
in
in
dec
fsubrp
xlat
pop
xchg
cmp
mov
dec
and
imul
sub
cmp
fs
and
test
fldln2
rorl
pop
sub
fidivs
pop
ret
repz
push
sub
sub
cmp
mov
lods
enter
cmpsb
adc
xor
add
sbb
cwtl
and
into
test
inc
and
es
push
jbe
data16
jmp
test
jmp
adc
daa
cmp
xor
cmc
movsl
cmc
loope
and
mov
mov
mov
orb
or
inc
sub
ds
out
jnp
fxtract
dec
push
jle
inc
mov
sahf
aas
add
cmp
daa
pop
xchg
mov
icebp
mov
jmp
jge
lock
mov
mov
enter
mov
add
mov
out
mov
xchg
and
pushl
movsb
aaa
xchg
inc
adc
fstps
in
or
push
pop
mov
cmpsl
mov
mov
mov
mov
dec
nop
jmp
inc
rcr
push
inc
movsl
cltd
rol
sub
fnsave
in
pop
out
jg
add
fnstenv
sti
inc
ljmp
mov
push
imul
in
ret
xchg
roll
outsl
iret
and
stos
sub
lods
imul
push
das
mov
xorl
test
test
sbb
dec
cmp
imul
in
pop
lret
idivl
mov
aam
pop
arpl
lock
mov
aam
rcrl
ja
push
push
mov
lds
test
ret
sub
cltd
xorl
psubusw
ret
push
xor
add
add
cmp
sarb
js
fadds
adc
je
dec
imul
sub
sub
movsb
jp
mov
xchg
xchg
jecxz
mov
bound
mov
mov
jge
dec
fnstsw
iret
mov
xchg
divb
ljmp
sbb
push
cmpsb
imul
jge
sub
test
sbb
lret
sbb
dec
xor
pop
mov
push
fcoml
push
sub
lret
leave
add
xlat
dec
and
mov
add
dec
mov
in
jp
je
xor
jg
mov
sub
adc
daa
adc
cmp
sub
sbb
cmp
int3
jne
sub
cmpsb
xchg
inc
cmpsb
inc
xchg
fcmovnbe
add
int3
push
movsl
fwait
insb
jne
ljmp
fldl
inc
inc
int3
sbb
std
lods
testl
mov
insb
aad
fprem1
cld
cmpsl
out
sub
mov
jns
cmc
outsl
lods
mov
mov
popf
int3
je
cmp
cmp
mov
jge
fisubs
imulb
lcall
mov
push
jbe
and
jno
and
mov
mov
pop
aas
push
insl
ds
bnd
fucom
insl
js
movsb
push
ljmp
dec
jmp
loope
and
andb
mov
or
stc
jmp
outsl
jbe
jl
xchg
mov
stos
loop
icebp
shrb
sahf
movsb
sbb
adc
jecxz
xor
xor
leave
cmpsl
cmpsl
mov
repnz
stos
cmp
add
xor
ss
jecxz
je
lret
fcompl
cmp
cs
icebp
or
push
jmp
xchg
mov
inc
push
push
lds
dec
shlb
xchg
or
pop
enter
push
sahf
negb
mov
mulb
mov
fstps
jae
lret
xchg
ljmp
push
push
and
movsl
add
nop
fldenv
stos
sbb
in
insl
inc
mov
cs
test
icebp
ja
jbe
dec
sub
xor
outsb
adc
and
xchg
dec
sbb
sbb
jb
add
push
or
out
out
std
push
push
cltd
pop
sti
pop
insl
aas
sbb
fistpl
mov
mov
leave
cs
lret
sub
roll
js
aaa
mov
testl
outsl
sti
mov
fildl
les
test
xchg
sbb
mov
push
adcb
insl
push
cmp
add
adc
mov
cwtl
bound
orb
enter
int3
in
enter
mov
pop
test
fsubs
mov
jle
dec
cmpsb
in
mov
xchg
imul
xor
push
push
mov
loopne
mov
sub
and
jb
push
jb
xchg
mov
sub
sub
les
ja
pop
or
stc
fmull
fistl
outsl
mov
in
sbb
pop
cmp
mov
lret
mov
push
mov
rclb
roll
push
imul
jl
imul
xchg
mov
sub
jp
js
xchg
shrb
test
test
pop
jl
and
pop
int
ljmp
jbe
push
stos
xchg
cltd
and
mov
dec
jmp
push
sub
mov
add
jns
enter
adc
mov
xchg
add
fs
mov
shl
mov
stc
cwtl
mov
dec
and
insb
mov
std
pusha
dec
inc
jnp
xor
out
and
call
mov
cld
sbb
div
loope
cs
cwtl
pop
mov
cmp
inc
int
cmp
add
and
ja
and
jae
inc
fisttps
loop
fldcw
pop
cli
xchg
stos
cmp
xorb
aam
and
in
add
xor
fiaddl
das
xchg
addr16
adc
js
push
mov
aad
push
loop
int
xchg
pop
inc
stc
stos
sti
xor
hlt
xchg
in
repz
push
and
xchg
jb
add
xor
mov
insl
adcl
mov
ret
pop
jl
push
cs
sbb
lret
xchg
dec
adc
adc
rorb
ror
cmpsl
cwtl
jb
nop
mov
sbb
jg
push
sbb
mov
daa
dec
pop
roll
out
leave
imul
xchg
cltd
inc
pop
mov
mov
gs
cli
out
cmc
ror
jb
inc
mov
xlat
adc
cmp
xor
push
xchg
roll
mov
ret
cmp
stos
out
cld
adc
ds
mov
pop
aaa
mov
or
xor
call
jp
daa
jae
xor
mov
add
add
scas
popa
mov
sbb
mov
push
cltd
pop
lods
jmp
loopne
sbb
sbb
adc
sti
pop
mov
dec
shll
xchg
mov
and
xlat
cli
lret
jo
jno
loope
in
xchg
arpl
mov
jmp
xlat
and
jo
jmp
ja
or
cmpsb
out
push
push
rcll
and
dec
mov
cwtl
in
push
fstpt
repz
lcall
je
es
leave
pop
popa
punpcklbw
lret
inc
add
rol
sbb
repz
negl
push
scas
addr16
ljmp
in
jle
mov
addr16
adc
push
icebp
xchg
ret
push
cmc
or
mov
or
mov
je
out
push
enter
inc
and
add
sub
adc
mov
ds
cltd
mov
cmpsl
mov
lea
fcomps
xchg
lds
cmp
test
js
jg
xchg
test
imul
pop
sbb
mov
mov
sbb
dec
loope
push
decl
mov
xchg
fdivl
int3
mov
call
xlat
sbb
ds
xchg
lock
dec
lock
mov
enter
ret
lret
repnz
fisttpl
adc
cmp
mov
daa
mov
mov
mov
mov
cld
dec
and
cmp
mov
inc
pop
pop
sub
pop
xor
insb
sub
stc
adc
fst
aaa
adc
sti
cmp
js
lock
shll
push
push
or
fiadds
cmp
fwait
mov
dec
cmpsb
mov
mov
xor
pop
rclb
xor
addr16
mov
test
adc
outsl
push
jae
js
jae
mov
out
jne
mov
dec
and
cmp
leave
lock
jnp
insb
dec
sub
push
cmp
mov
cwtl
pop
test
stos
in
add
test
mov
mov
popa
jmp
repz
lods
popf
jmp
push
and
cltd
adc
scas
push
xchg
data16
and
iret
lock
inc
or
jle
mov
mov
mov
cli
ficoms
xor
adc
mov
pop
loop
and
mov
stos
das
scas
repnz
lret
lock
lea
fs
je
mov
push
leave
push
lock
push
cmp
adcb
stos
in
jo
add
add
fwait
aad
cmc
mov
sbb
mov
call
dec
stos
cltd
sub
test
and
push
addl
sub
test
add
push
sub
adc
jl
fistl
aad
push
dec
stos
mov
mov
cmp
outsb
into
int3
pop
leave
jae
in
inc
cmp
xchg
in
divl
clc
orl
neg
outsl
mov
lret
sub
shrl
sbb
xchg
or
inc
adc
pop
sub
lods
movsb
lock
lds
push
jmp
pop
cmp
cld
pop
test
repz
cltd
fmul
or
pop
mov
xor
in
in
enter
pop
dec
adc
add
popf
mov
push
sbb
bound
cmp
and
mov
stos
add
xchg
cmp
pushf
dec
cltd
cmp
inc
clc
cvtpi2ps
sbb
inc
ljmp
inc
xor
mov
inc
in
das
and
mov
and
lods
jl
clc
mov
mov
sub
ds
inc
pop
daa
jge
gs
popf
jp
mov
pop
add
stos
or
pop
fnstcw
xchg
mov
push
mov
pop
in
lahf
bound
or
fdivl
pop
mov
sbb
pop
pop
jle
inc
test
push
lret
mov
insb
mov
cwtl
inc
int3
inc
clc
xor
pop
inc
pop
shlb
jp
xchg
inc
sub
scas
cltd
sub
mov
lcall
jp
pop
push
push
sub
or
out
pop
jecxz
or
pop
sub
add
mov
lock
sub
and
xchg
adc
lods
sbb
stos
cmpsl
sbb
adc
mov
push
std
ss
mov
es
insl
and
rorb
mov
imul
into
loopne
in
jno
loopne
lret
dec
or
mov
and
orps
out
orb
cmc
mov
add
fsubrl
sub
cld
push
bound
lods
fisttpll
rcrl
std
ret
inc
cli
mov
gs
shl
inc
fsubrp
sub
sbb
cmp
jo
cmc
pushf
mov
xor
push
xchg
and
lea
cmp
sbb
cmpsb
jp
or
push
out
push
pop
mov
nop
les
cmp
xlat
xor
popa
pushf
fisubrs
dec
ja
mov
call
jecxz
call
mov
mov
test
pusha
dec
enter
rcl
lahf
std
fsts
test
sbb
xor
xor
std
loopne
push
pop
xlat
adc
test
xor
cmpsl
mov
jmp
std
pop
fdivrs
push
call
outsl
jg
in
push
orb
xor
add
push
jne
movsl
hlt
push
sahf
movsb
add
mov
test
ja
iret
lods
mov
lret
cmp
in
mov
xchg
sub
adc
add
jne
fcoml
and
ss
dec
es
pop
adc
inc
and
jbe
pusha
push
sarb
adc
cld
sbb
and
loopne
jae
test
sub
dec
es
dec
mov
pop
sub
mov
ds
or
mov
push
dec
sub
mov
icebp
aam
adc
divb
xchg
sarb
imul
sub
mov
in
jecxz
imul
hlt
jp
ja
mov
push
fs
aad
xor
mov
rcrb
or
adc
sti
mov
cs
jecxz
rclb
dec
mov
sahf
lret
xchg
mov
arpl
aam
dec
inc
popa
dec
inc
imulb
mov
jl
int
in
pop
sbb
outsl
and
push
bound
xor
cmp
repnz
in
pop
fidivrl
pop
mov
dec
push
inc
and
mov
repz
aaa
popf
jno
icebp
sbbb
adc
imul
add
mov
add
push
cmc
fstl
xlat
or
mov
cld
add
cmp
add
fistl
ret
loop
daa
cltd
xor
in
xor
addr16
push
ss
cmpb
xchg
outsl
dec
fstpl
hlt
jmp
push
mov
pop
ret
iret
mov
xchg
xchg
push
dec
js
mov
mov
sti
fs
inc
pop
mov
popa
call
jmp
stos
inc
js
sub
xlat
mov
inc
frstor
dec
lcall
pop
insb
das
test
fisubl
cwtl
movsb
pop
outsb
out
fcmovb
xor
push
cwtl
push
in
xchg
loop
stc
ljmp
fdivl
inc
dec
mov
or
imul
dec
subb
outsl
add
loope
or
and
sti
repz
adc
data16
push
nopl
icebp
repz
jl
sti
and
call
insb
dec
pop
jo
into
cmp
pop
je
xchg
sub
inc
call
popf
fdiv
mov
xor
mov
add
dec
sbb
mov
mov
xchg
lds
adc
pop
push
outsb
fdivrl
jnp
cmp
inc
fmul
int
orl
jo
push
add
push
addr16
pop
dec
and
fucompp
lahf
mov
adc
rol
cmp
dec
xchg
data16
cmp
out
rol
roll
jp
mov
mov
xor
andl
test
xchg
loope
movsl
jo
xchg
ss
cmp
and
fwait
cmp
in
cmp
mov
xchg
mov
mov
xchg
daa
mov
push
inc
xlat
jo
mov
mov
xchg
repz
push
push
dec
repz
jo
jg
xchg
leave
loop
imul
add
scas
cs
jae
mov
in
fisttpl
mov
popf
sbb
cwtl
push
pop
pop
dec
xor
sbb
add
mov
cmp
sarl
div
push
mov
int3
xor
xlat
enter
hlt
lods
inc
and
out
mov
rcl
sbb
addb
in
ret
fistps
sbb
dec
mov
mov
fsubs
aaa
iret
adc
cmp
or
adc
mov
dec
and
cld
jmp
movb
addl
lock
xchg
or
sti
out
mov
mov
outsl
add
mov
mov
or
rclw
in
mov
and
xchg
jne
xor
inc
mov
mov
mov
out
daa
sub
and
adc
xor
test
pop
mov
ret
aas
lret
xor
jle
fcmovnbe
xchg
filds
pop
cmp
cmp
call
out
and
add
xor
jp
add
popf
notl
push
rorl
imul
addr16
mov
shrb
sahf
js
pop
into
fmulp
into
mov
sbb
cmp
mov
inc
mov
jae
xor
pop
lret
and
add
in
out
rcr
addr16
leave
aad
jnp
daa
mov
add
mov
push
cmp
ss
jge
push
cmp
das
dec
inc
aad
loope
mov
mov
enter
sbb
out
sarl
inc
or
xor
cmpsl
sbb
push
sti
pmulhw
add
imul
int
pop
mov
pop
and
test
mov
pop
lret
pop
jno
inc
dec
test
ror
stc
int
mov
inc
mov
sub
pushf
mov
mov
movsl
test
xor
push
mov
mov
push
int
icebp
sbb
mov
dec
call
sub
adc
or
std
xor
scas
dec
int3
pop
jecxz
fstpt
daa
inc
mov
or
xor
bound
jnp
mov
mov
cmp
inc
pop
cmp
les
lods
mov
cmp
sbb
mov
lcall
cmpsl
lods
jle
movsl
mov
repnz
push
mov
cmp
xor
mov
mov
add
out
lods
mov
mov
pop
adc
fwait
inc
std
push
iret
pop
flds
add
imul
ret
cmpsl
push
popa
in
sbb
push
daa
adc
sbb
jb
mov
inc
sub
shrb
pop
into
ds
jge
cli
ja
push
ds
jecxz
mov
stos
mov
pushl
imul
mov
mov
loope
daa
inc
xchg
negb
push
cltd
mov
sbbb
or
sbb
xorb
iret
iret
push
dec
leave
test
out
cltd
mov
mov
scas
mov
mov
test
test
sti
and
xchg
fs
lcall
daa
xchg
dec
fmull
ret
xchg
lcall
adc
das
vpavgb
repz
outsl
add
jmp
imul
mov
dec
pop
mov
mov
dec
mov
inc
popa
outsl
movsb
push
out
pop
dec
repz
imul
or
mov
lret
and
cmpsl
and
or
sbb
push
aad
mov
pop
inc
xor
or
lcall
sbb
lret
out
sub
movsb
cs
push
dec
push
mov
inc
insl
cmp
loop
das
cld
push
adc
enter
or
repz
stc
bound
dec
sbbl
insb
cwtl
and
rcll
loopne
mov
call
scas
fisubs
mov
scas
sub
in
ficomps
and
jmp
dec
lds
enter
into
addr16
shr
out
mov
cld
mov
popa
loop
mov
mov
sar
je
mov
adc
sub
lods
cmp
mov
pop
cltd
dec
inc
mov
add
cmp
cs
xchg
dec
cltd
xor
es
push
pop
aaa
fidivrl
aam
repz
mov
cmc
dec
adc
adc
sub
xchg
xchg
inc
cltd
adc
dec
mov
rorl
ret
jnp
fs
fisttpl
xor
cmc
repnz
addr16
ss
movb
inc
adc
pop
in
xor
add
pop
jae
xor
cld
movsb
mov
icebp
mov
aaa
aaa
mov
js
push
add
sub
push
cwtl
pop
xchg
cmp
push
pop
rcr
jle
pop
aad
xchg
push
hlt
xlat
ja
xchg
jle
add
pop
xchg
and
scas
sbb
and
nop
or
xor
mov
vpaddsb
out
fmul
mov
enter
aam
ret
cld
sbb
xor
push
xchg
xor
mov
sub
std
xor
rolb
insl
enter
pop
mov
push
inc
mov
mov
int3
pop
cmpb
mov
fucomp
jecxz
cmpsb
xchg
jbe
xor
mov
push
mov
or
rcll
dec
stos
jno
into
adcb
adc
mov
xchg
dec
push
pusha
cmp
aam
pop
filds
lcall
adc
pop
jbe
add
sub
or
mov
sub
out
xor
mov
mov
leave
push
push
sub
or
adc
enter
popf
sbbb
push
push
jle
out
popl
push
push
mov
out
jns
or
pop
jmp
pop
cli
sbb
xchg
sti
cmp
outsb
gs
lock
mov
cmpsb
lds
and
xchg
test
addb
std
popa
fsubr
dec
or
push
and
scas
sbb
sub
add
push
lret
pop
push
int3
test
mov
inc
xchg
dec
pop
mov
loope
xchg
dec
or
repnz
outsb
shrl
fucomi
fidivrs
stc
add
aam
mov
jmp
lret
xor
loope
out
cmp
jnp
lods
lret
jbe
cwtl
adc
mov
iret
dec
insb
sub
xor
and
jge
and
sub
leave
sbb
mov
adc
scas
aam
mov
out
mov
imul
sub
mov
mov
xchg
adc
dec
push
int
xor
call
bound
das
ret
test
lock
mov
call
js
mov
sub
and
loope
sub
lods
mov
mov
loopne
push
in
mov
test
into
in
shrl
fcmove
rcl
shll
pop
adc
sbb
and
cld
ret
fnstenv
adc
xchg
add
inc
fists
fs
push
mov
cwtl
jl
pusha
or
int
mov
add
iret
xchg
mov
aad
cmpsl
stos
push
xor
jp
cmpsb
icebp
lds
mov
pop
sahf
js
jecxz
adc
jb
dec
js
test
bound
test
lahf
mov
dec
mov
leave
repnz
arpl
lods
cmc
mov
jno
push
mov
or
mov
orb
add
lret
mov
ja
clc
adc
pop
xor
in
dec
roll
xchg
dec
nop
addr16
and
add
insb
inc
addr16
leave
stos
out
enter
mov
out
or
stc
push
dec
stc
outsb
xchg
jnp
ror
mov
xlat
push
fdivr
repnz
push
imul
popa
subl
lret
ds
pop
or
jl
xchg
clc
and
enter
cld
jo
scas
fcompl
fs
popa
push
imul
xor
cltd
pop
outsb
out
js
ret
into
test
mov
ret
scas
pushf
or
pushf
pushf
xor
adc
pop
mov
aam
ficoml
int
orl
jns
int
jp
sub
sub
and
test
lods
into
pushf
push
and
cmpl
ljmp
pop
mov
dec
dec
adc
mov
push
push
add
xor
outsb
sbb
jmp
dec
cmp
mov
test
movl
pushf
pushf
je
xchg
xchg
aam
sbb
mov
and
add
push
test
loope
mov
ret
aaa
mov
shll
ljmp
fnstenv
inc
adcb
mov
enter
dec
and
sarl
jae
or
adc
les
inc
push
mov
leave
cmp
mov
into
repnz
cld
pop
mov
insl
es
pop
and
mov
sbb
sbb
out
mov
xor
adc
in
movsl
add
scas
cmpl
xor
mov
mov
cmpsb
iret
dec
call
fs
in
outsl
mov
xchg
test
mov
enter
mov
std
loope
out
into
adc
mov
add
aad
mov
mov
sub
or
add
int3
add
mov
les
cmc
inc
movsl
pop
push
stos
xlat
in
js
sti
xor
push
jbe
scas
jle
daa
nop
cmp
dec
ss
icebp
dec
hlt
cltd
loop
push
mov
mov
sbb
movsl
mulps
testb
sub
enter
aas
sbb
dec
cmpsb
xchg
cmp
and
add
jne
insb
and
mov
add
sti
and
sti
cltd
inc
je
cmpsl
cmp
push
push
lcall
fsub
mov
xor
aam
fsubrs
push
imul
or
movsb
pusha
mov
mov
mov
movsb
xchg
fimuls
inc
ret
jmp
sbb
mov
sub
hlt
out
sbb
or
jno
sub
pop
cmp
or
and
mov
and
adc
orb
jno
mov
mov
in
movsl
sbb
mov
add
enter
jo
push
sbb
pop
sbb
and
fistpll
std
pop
pop
addb
pusha
xchg
mov
sub
xor
scas
lods
dec
in
lods
cld
aam
je
or
out
mov
addb
test
aaa
dec
mov
out
shll
sub
das
fimull
pop
or
or
jle
scas
cltd
lds
add
xor
add
fs
lret
push
jmp
scas
ret
bound
fmull
push
push
inc
and
js
sti
pop
mov
cmp
imul
adc
loope
and
push
clc
mov
sbb
or
jmp
mov
paddusw
inc
or
sub
hlt
mov
add
jle
lods
fisubrl
ss
jecxz
mov
or
sarl
movsl
or
iret
mov
cmovp
lock
jecxz
movsb
ljmp
and
data16
imul
push
jp
push
loope
jp
pop
shlb
push
and
cmpsl
inc
insb
inc
jnp
xchg
push
pusha
movsl
std
ljmp
cmp
test
dec
pop
mov
xchg
jnp
cmp
iret
lods
or
js
sub
dec
push
sbb
jmp
insl
test
out
mov
sbb
or
fsubl
jo
sub
push
je
ds
jecxz
roll
int3
int
mov
cmp
sbb
imul
add
cmp
inc
pusha
sub
sbb
push
ja
loopne
ss
fwait
or
lret
or
in
mov
aad
mov
adc
lds
pop
mov
loopne
jnp
call
andl
fxch
dec
repnz
dec
mov
cwtl
xor
xchg
mov
cmp
aas
xor
pop
push
aam
loope
fildll
mov
clc
out
mov
daa
dec
outsb
aam
push
popa
inc
and
pop
adc
insb
cmpsl
cltd
mov
loop
lret
fisubrs
fs
dec
aam
pop
scas
adc
jb
aaa
cmp
jno
cmpsl
adc
jo
add
icebp
leave
fisubl
mov
mulb
popf
ljmp
dec
mov
dec
roll
or
mov
roll
sub
xor
add
add
lds
or
inc
mov
cwtl
fistpl
testb
or
movsl
adc
das
pop
xor
repz
inc
mov
and
cmp
xchg
jmp
fnsave
jmp
lahf
lods
xor
and
iret
dec
jo
sub
fistpl
jb
test
push
and
dec
int3
push
paddusb
ds
sbb
push
inc
xlat
and
inc
adc
cld
mov
enter
push
sarb
shrb
mov
add
xchg
imul
mov
lods
int
mov
outsl
popf
jecxz
int
mov
xchg
sub
pop
or
mov
pop
aad
sti
xor
ret
test
pop
loope
andl
stos
popl
add
adc
mov
or
leave
outsb
mov
bound
and
pusha
pop
fisttps
cmc
insb
pop
pop
int
aaa
ret
push
push
sahf
inc
adc
in
sti
jb
icebp
mov
aas
xchg
and
jne
clc
aaa
nop
push
push
iret
mov
sub
or
test
xchg
pop
mov
pop
gs
pop
pushf
daa
es
stos
xchg
adc
sub
sbb
push
dec
sarl
hlt
mov
loope
dec
lods
loopne
sbb
lods
add
jns
ds
cld
or
dec
insl
jmp
flds
push
enter
movsb
xor
fimuls
cmc
cli
dec
jne
xor
or
mov
sti
cmp
pop
jmp
xor
mov
sbb
in
xor
mov
jg
insb
addl
lret
es
jecxz
inc
iret
or
dec
cmpb
jecxz
lret
je
xor
rolb
cwtl
pop
scas
jmp
lods
push
or
pmullw
cmp
push
xchg
test
loop
push
gs
cmpl
add
icebp
cmp
std
adcl
mov
mov
cld
mov
dec
inc
scas
push
gs
test
popf
adc
xchg
call
roll
mov
int3
aaa
test
xchg
fcoml
lcall
les
rolb
sub
or
and
into
pop
mov
inc
mov
imul
add
push
in
in
mov
cs
test
shl
push
mov
loopne
xchg
push
outsl
in
lds
or
ss
and
mov
aam
gs
mov
push
pushf
fistpl
sub
add
cmpsb
cmp
mov
daa
int3
mov
mov
sub
adc
dec
inc
dec
mov
sarb
arpl
lahf
data16
push
cmpsl
xor
loopne
scas
cmp
out
insl
dec
pop
fnstcw
xchg
lods
mov
xchg
bound
mov
jmp
inc
out
mull
push
xchg
mov
jmp
lds
adc
mov
sbb
es
xor
arpl
lods
mov
add
push
push
xchg
xor
add
xchg
xchg
mov
icebp
sbb
cs
pop
adc
inc
pop
mov
jg
pop
push
xor
push
mov
xor
pop
int3
jge
repz
lcall
inc
mov
and
push
inc
adc
sbb
cwtl
leave
call
rolb
test
dec
cltd
lea
pushf
push
out
inc
pop
xorl
outsb
mov
sub
ds
sbb
lock
jg
enter
and
cli
mov
push
fstp
mov
pop
sbb
mov
add
out
shl
xorb
movsb
cmc
sbbl
add
or
pushf
repz
cld
mov
ret
mov
xchg
inc
arpl
imul
jns
out
imul
mov
andl
mov
imul
adc
xor
xlat
mov
xor
mov
rclb
enter
lea
insb
push
aas
call
stos
call
adc
lcall
cltd
push
test
or
in
push
loope
jns
push
popf
popf
out
xor
adc
pushf
stc
xor
loop
sti
xchg
mov
fldt
xlat
scas
lock
mov
jno
testl
fwait
je
jne
dec
ja
cmp
mov
psubsb
mov
mov
push
mov
mov
inc
and
cmp
and
out
push
xchg
or
xlat
ds
mov
shl
inc
dec
or
leave
lret
lahf
mov
fstpl
push
not
pop
mov
mov
lods
popf
jg
outsb
orb
xor
jne
aas
and
fnsave
cmp
popf
xchg
cmp
push
xchg
test
push
pusha
int3
mov
jbe
rol
mov
or
pop
leave
mov
mov
pop
dec
pop
fbld
cmc
js
cmp
dec
xor
pop
and
adc
dec
decb
fwait
mov
push
add
jo
stos
and
cmp
mov
sbb
add
loop
cltd
inc
push
popl
out
in
or
dec
shll
mov
push
orl
jno
icebp
pusha
cs
popf
insb
fistpll
xor
cmpsb
xchg
and
fistps
xchg
push
dec
lods
fcmovu
lods
inc
sub
dec
shl
and
add
scas
mov
push
cmp
pop
dec
inc
inc
mov
cmp
in
std
and
test
neg
int3
and
or
push
clc
pop
mov
addr16
pop
shll
cmp
mov
push
leave
mov
sub
out
scas
sbb
out
data16
mov
add
jecxz
sbb
pop
mov
mov
mov
and
sbb
loope
jbe
ja
clc
cld
inc
lahf
jmp
cmp
inc
mov
repnz
cmp
fwait
push
pop
pop
cmc
mov
mov
or
loopne
mov
mov
into
nop
xchg
ds
mov
ret
in
pop
cmp
mov
movsl
push
sbb
mov
mov
jns
test
dec
sbb
rcrl
mov
rcrl
push
fnsave
jmp
mov
gs
dec
inc
js
mov
jno
xchg
jmp
cmp
mov
pushf
mov
mov
pop
xrelease
cmp
and
shrb
mov
pop
xchg
mov
mov
xor
mov
push
aad
xor
mov
dec
inc
scas
insl
jno
scas
lret
icebp
lea
jae
sti
or
adc
sub
sti
in
dec
add
sarl
ret
insl
adc
test
ljmp
lods
jae
push
fsubs
call
inc
xchg
cli
ret
int3
mov
loop
rcll
in
fwait
in
arpl
bound
or
cmp
mov
mov
fisubl
ds
xor
dec
dec
push
mov
addb
add
inc
out
mov
out
outsl
fdivs
jmp
or
aad
inc
cmp
dec
jg
rcrb
mov
xchg
fs
stos
dec
aam
mov
movsl
jbe
sti
or
mov
leave
pop
shl
fsubrs
adc
sarb
andl
cwtl
jecxz
loope
bound
adc
sub
das
mov
cmpsb
inc
mov
xchg
sti
movb
lock
shll
inc
mov
adc
dec
and
jbe
dec
push
push
sbb
in
jge
cli
movsl
xchg
sbb
mov
addl
dec
adc
sbb
and
or
add
add
adc
add
fstp
aas
pop
or
test
test
aas
std
mov
cmp
loope
mov
mov
or
add
xor
ds
adc
push
out
shll
adc
cmp
sub
jmp
xchg
push
push
xor
mov
mov
loop
sub
adc
cmp
pop
jecxz
lret
dec
jns
push
jmp
jne
test
adc
leave
adc
hlt
or
je
ja
inc
out
mov
cmp
mov
cmpsb
outsl
es
mov
iret
xchg
dec
mov
add
sub
sbb
std
andl
lahf
inc
mov
jae
icebp
jge
mov
jno
pop
popa
push
insl
xor
rcll
pop
cmp
pop
mov
xchg
dec
and
ret
jbe
int
dec
in
daa
pop
add
cmp
shlb
sub
xor
xor
in
icebp
xlat
test
fisubs
lods
jae
faddl
cld
dec
sbb
or
cs
rclb
movsl
je
ss
xor
out
pushf
nop
mov
jae
mov
xchg
in
inc
aam
inc
mov
jl
mull
sub
push
out
popa
inc
mov
incl
sbb
dec
xorl
repnz
movsl
mov
or
xchg
in
sahf
outsl
bound
icebp
mov
or
jnp
mov
or
icebp
xchg
js
push
inc
faddp
xchg
xlat
les
imul
loopne
or
mov
sti
cmp
addb
xor
int
negl
out
xchg
fsubrp
sbb
mov
xchg
insl
sub
fdivs
repnz
jle
cmpb
shlb
movsb
jnp
inc
adc
pop
mov
popf
adc
test
mov
imul
das
ja
fistpl
pop
ret
outsl
adc
mov
js
stos
popa
les
xchg
xor
ffreep
roll
mov
lods
divl
cltd
adc
jecxz
pop
xchg
aas
outsb
mov
or
xor
cmp
and
shll
loope
adc
mov
push
sarb
mov
fcmovnb
sub
xchg
mov
mov
pop
fcoms
out
sahf
add
movsl
xor
int3
aas
jae
movsb
out
popf
fwait
or
pop
pop
and
xchg
stos
mov
aam
push
mov
mov
xor
adc
add
push
xchg
lods
mov
adc
push
icebp
mov
lea
push
pop
mov
sub
cmp
push
inc
in
ja
popf
inc
mov
mov
jo
xchg
int3
insl
xor
sub
les
xor
pushf
push
or
mov
push
out
lret
mov
movsb
enter
pop
jg
popl
lds
jae
mov
push
xchg
jmp
lahf
bound
stos
inc
pop
imul
mov
cmpsl
mov
scas
mov
pop
les
lahf
push
mov
jmp
or
test
cwtl
pop
adc
popa
xchg
push
addr16
dec
fsts
or
bound
aam
test
adc
pop
inc
cwtl
ss
enter
cmc
ret
pop
jnp
fadds
jmp
in
fnstcw
in
pushw
mov
jl
ret
cmp
lea
test
bound
inc
jmp
mov
xor
mov
jbe
mov
cmc
dec
dec
jae
mov
mov
fisttps
jnp
fcmovnbe
mov
pop
push
push
and
mov
scas
rcrl
pop
movsb
or
hlt
clc
jb
out
and
jle
movsl
xor
jp
xchg
in
frstor
out
arpl
aas
sub
or
jmp
sub
lods
adc
cmpsl
in
mov
ficompl
aas
or
push
icebp
loopne
dec
lcall
adc
call
insb
adc
repz
std
ret
idivb
sub
jge
dec
cmpsl
lods
dec
imul
inc
sbb
or
pop
push
mov
adc
mov
lret
xor
inc
mov
mov
mov
xchg
xchg
dec
call
xor
ja
mov
xor
nop
mov
ss
xchg
es
cwtl
lods
fnstenv
nop
mov
test
jl
pop
cmpsl
aaa
push
aas
mov
sbb
mov
xor
pop
pop
ror
sub
and
shll
inc
leave
fdivrs
outsl
aam
or
xor
movsb
mov
cmp
sbb
imull
mov
or
cmpsl
addl
js
push
sti
mov
gs
addr16
jns
sbb
into
sub
stos
push
push
test
fmull
fwait
stos
fs
in
sbb
icebp
jne
rorl
or
dec
lea
cmpsb
sub
mov
repnz
fistps
and
xor
hlt
push
stc
push
dec
inc
jecxz
inc
pop
mov
push
fstl
and
pop
cmp
push
das
ljmp
lcall
add
stc
jns
mov
or
or
loop
sarl
cmpb
aad
or
fwait
mov
push
jge
mov
mov
ret
jp
sarl
subb
test
dec
dec
lcall
push
mov
jbe
xchg
test
cmp
push
fs
mov
flds
stc
movsl
adc
imul
pop
imul
insb
in
xor
pop
fbld
insb
aaa
push
mov
insb
push
in
mov
mov
addr16
adc
not
adc
in
inc
sub
mov
filds
test
fiaddl
xlat
jl
iret
lcall
inc
xor
sbb
or
loopne
xchg
roll
push
mov
xor
movsl
shl
xor
ljmp
jno
imul
push
xchg
push
lcall
push
lret
mov
lock
add
xor
ja
pushf
cli
test
ret
xchg
aad
jp
pop
xchg
mov
outsl
pop
jle
jae
imul
cmp
jmp
adc
cmp
dec
pop
mov
movsl
cmp
cltd
iret
inc
dec
stos
pop
adc
rcl
in
outsl
ret
jne
and
shll
cmp
sbb
mov
test
outsl
adc
inc
pusha
addr16
adcl
jge
lds
jns
sbb
xlat
outsl
pop
repz
adcl
sbb
adc
or
jecxz
fs
cltd
or
and
mov
fnstcw
insl
notb
push
fdivrs
jnp
xlat
nop
push
outsl
xor
sbb
mov
ret
jmp
or
rol
mov
cmp
leave
std
fucom
insl
nop
test
aaa
es
ret
sub
into
ds
fcom
shlb
popf
sbb
mov
es
and
mov
cmp
icebp
sbb
cltd
cli
jmp
adc
fnsave
outsl
sub
lret
cs
dec
lea
adcl
sub
out
adc
scas
sub
adc
push
jae
mov
inc
jne
cmp
mov
jmp
lock
push
mov
sarl
cs
jp
or
dec
pop
add
mov
cltd
xor
add
add
fstps
mov
mov
pushf
in
ds
ss
dec
mov
data16
xor
inc
repz
sahf
pusha
je
stc
outsl
ja
fs
inc
sub
int
out
stos
rorl
nop
cwtl
imul
aam
sub
loopne
xchg
lcall
cld
mov
or
mov
pop
mov
xor
xor
gs
jno
je
jne
in
fdiv
les
or
shll
pop
fcoms
in
bound
mov
xchg
iret
xor
fwait
int3
or
pop
jnp
mov
mov
jle
mov
das
or
cmp
jbe
fisttpl
sbb
fsubrl
repnz
jnp
dec
mov
mov
or
aad
mov
ret
in
ljmp
daa
imul
inc
inc
or
outsl
push
fistpll
or
lcall
add
jl,pn
push
xlat
adc
and
jnp
rcr
sub
or
ss
idivl
je
mov
pop
loope
ror
stos
jb
sbb
cmp
stos
in
pop
cmpsl
out
dec
xchg
sub
pop
lods
in
inc
in
inc
lods
or
push
or
mov
push
push
push
fwait
dec
xchg
push
cwtl
roll
or
fwait
mov
scas
add
es
mov
ret
sbb
inc
inc
jmp
mov
xor
mov
mov
cwtl
sub
stos
test
out
out
dec
negb
stc
xor
xchg
clc
sbb
mov
sbb
xchg
pop
push
std
push
lea
les
repz
pop
fists
jno
dec
lods
in
push
out
shrb
push
iret
lret
push
iret
imul
xchg
fld
inc
mov
xchg
mov
imul
lret
sti
test
shrb
sub
jns
mov
fisttpll
or
int
sarb
pusha
pop
ja
adc
lock
popf
hlt
jmp
int3
pop
addb
lods
arpl
xchg
hlt
cmpsl
add
rorl
aaa
loop
stc
dec
arpl
xor
fwait
dec
jge
pop
push
ds
jg
or
xor
add
cmp
in
inc
in
push
cmp
adc
sar
lcall
imul
fistl
mov
dec
add
ret
test
xor
dec
popf
fstpl
mov
push
pop
jmp
pop
ret
jns
je
cli
cmp
in
pop
incb
xchg
fstpt
jmp
push
jge
movsl
and
cmp
fadds
cmp
cli
mov
mov
je
push
leave
jb
in
lcall
sar
loope
mov
sub
iret
movsb
ficomps
cmp
pop
cld
imul
mov
push
dec
sub
dec
aaa
push
pusha
aaa
mov
divl
cmp
or
mov
outsb
push
dec
pop
jb
jne
lret
jne
std
gs
pop
out
xchg
push
imul
xor
adc
add
sbb
fldenv
or
aam
sbb
dec
sub
add
cmp
mov
push
mov
inc
lock
push
ljmp
and
mov
mov
xchg
pop
adc
sarb
lock
pop
ret
ror
push
test
lock
cmp
cmovbe
cmp
xchg
mov
push
shlb
aam
and
cmp
push
add
adc
pop
cmpsb
jg
scas
jb
xor
adc
mov
adc
fildl
mov
push
lret
adc
sub
lcall
fcomp
sub
jae
xchg
and
and
cmp
mov
call
sub
fidivrs
out
mov
sub
and
xchg
test
ds
cmp
imul
add
mov
xchg
inc
arpl
mov
arpl
adc
cwtl
daa
mov
loope
add
dec
aad
mov
negl
add
lcall
adc
test
mov
clc
addb
addr16
mov
and
mov
popf
lds
inc
and
stos
adc
andl
mov
idivb
xor
cwtl
sub
dec
or
clc
cmpsl
dec
and
icebp
rcrl
jb
xchg
cmp
adc
shrb
mov
cmp
push
std
mov
mov
adc
mov
stos
mov
mov
addr16
clc
fadds
pop
pop
xor
sar
aad
sbb
xor
lahf
cmovns
mov
jle
aas
dec
bound
popf
xchg
aas
mov
shrl
push
stos
dec
inc
cwtl
xchg
dec
sub
mov
dec
mov
mov
push
xchg
or
sub
push
repnz
stc
cmpsb
fidivrs
or
adc
movsl
or
sub
scas
imulb
pusha
dec
add
rolb
push
cwtl
mov
dec
push
and
cmp
pop
sbb
test
or
xchg
popf
cs
push
je
nop
xchg
aas
in
mulb
sub
adc
xor
pop
xor
fildll
notl
shll
or
or
sbbb
cmp
subl
push
dec
ljmp
push
mov
loopne
or
subb
out
jecxz
jns
es
jge
rcl
lds
in
push
jmp
mov
loop
pop
pop
stos
pop
inc
or
es
js
xchg
jecxz
push
sub
jb
pop
shlb
inc
xchg
lret
mov
imul
mov
inc
dec
push
aas
popa
cltd
push
adc
outsl
lods
aad
cmc
sub
xor
dec
pop
es
pusha
pop
add
xlat
call
cmp
xchg
inc
xor
mov
movsl
call
iret
cmp
lods
mov
sub
xchg
jp
cmp
scas
gs
mov
fldenv
push
rcr
pop
mov
add
cmp
outsl
adcb
push
mov
or
aas
add
xchg
push
push
pmaddwd
cmp
or
add
push
jae
jmp
call
in
xor
int
or
bound
mov
inc
ret
aam
push
and
xor
aad
pop
adc
lret
push
add
cld
cmp
fwait
das
xor
lea
cwtl
mov
cltd
fwait
call
sub
mov
hlt
jecxz
sub
cmp
shll
inc
mov
mov
negb
sbb
fidivrs
scas
dec
daa
scas
add
mov
sub
repnz
cli
cmp
cwtl
mov
adc
cli
sbb
sbb
test
push
add
dec
loopne
dec
push
icebp
stc
jge
js
std
mov
jmp
xchg
out
les
jg
outsl
cmp
dec
mov
mov
popa
push
mov
sub
xchg
jnp
sub
cmp
push
scas
out
jb
scas
push
xor
mov
mov
adc
adc
mov
mov
sbb
mov
jb
inc
hlt
sub
les
pop
push
ficoml
movsl
lret
cmp
roll
movsb
mov
xor
fdivrs
mov
push
adc
mov
outsl
fmuls
sbb
loope
fs
mov
mov
adc
cmpsl
ja
sarl
jbe
xor
pop
jge
mov
lock
int
and
imul
push
jne
mov
xchg
jmp
jg
pop
xchg
out
loopne
ljmp
inc
mov
faddl
mov
rcrl
mov
decb
outsb
insb
mov
rorl
cmp
ret
jbe
setg
imul
movsl
ss
les
mov
push
outsb
fildl
pop
cmpb
fistps
xchg
push
cmp
mov
xchg
jg
push
jne
fisubs
or
mov
rorl
xchg
call
pop
cmp
mov
and
cmpsb
mov
stos
sub
sbbl
mov
or
mov
jno
dec
push
adc
lret
adc
mov
leave
pop
add
stos
xchg
xor
ljmp
outsl
decl
cmp
outsl
push
cli
mov
adc
cld
lds
inc
aas
add
iret
push
mov
or
mov
outsb
stos
push
clc
mov
lcall
pushl
push
mov
sbb
mov
mov
sbb
pushf
cs
into
imul
mov
push
xchg
jl
and
pop
fiaddl
cwtl
push
das
sarl
mov
cmp
mov
push
flds
xor
roll
sbb
psubd
inc
and
icebp
fstpt
xchg
inc
jb
outsl
xor
je
das
into
fistpll
gs
pop
inc
or
mov
lods
add
jb
aam
mov
lock
fcmovnb
aad
inc
sbb
fdivl
and
sub
inc
ja
fidivs
sbb
lahf
pusha
dec
jge
aas
ror
stos
cmp
movsb
fs
daa
jae
dec
mov
mov
std
push
push
mov
push
out
sbbb
mov
cli
movb
xchg
icebp
fnstcw
lds
cltd
sub
scas
mov
aas
cld
mov
std
sti
jae
or
sub
scas
lds
sbb
cmpsl
test
xor
inc
roll
xor
pop
cmp
ja
pop
stos
stos
call
sub
pop
inc
xchg
jmp
cmp
adc
imul
push
cs
repnz
push
rol
rol
mov
sub
popa
jo
fimull
lods
xchg
cs
incl
sub
movsb
xchg
rorw
push
clc
test
sub
cmp
adc
neg
sbb
xchg
add
mov
add
cmpsb
movsb
inc
push
inc
cmp
cmpsb
lods
add
fsubrs
jl
push
push
pop
out
ja
sbb
xor
rcl
mov
ret
stos
mov
lea
movsb
aas
fdivrs
hlt
dec
mov
push
push
jb
inc
ret
push
xlat
repnz
adcl
mov
lds
sbbb
jl
pusha
jb
xchg
fists
sub
sub
roll
lods
inc
cs
xchg
sti
sbb
jecxz
jo
mov
dec
xchg
rcrb
mov
pop
lret
mov
sbb
in
dec
or
xchg
add
sbb
ja
sbb
mov
jg
pop
jg
adc
and
subb
mov
mov
dec
ficoms
push
mov
cwtl
or
pop
movsb
sub
sarw
movsb
sub
loop
pop
movsl
add
push
sbb
popa
inc
mov
push
mov
ja
adc
jno
xchg
loop
inc
into
fucom
into
loopne
mov
call
xor
sub
daa
or
lret
add
daa
data16
xchg
popf
dec
jne
mov
cld
inc
push
test
sbb
test
mov
sub
pop
xor
fisttpl
pop
pop
ret
outsl
imul
fisubs
sbb
into
imul
add
xlat
gs
stc
insb
add
xor
mov
sti
xor
sbb
sbb
clc
or
jge
mov
popa
repz
inc
sbb
xchg
cmp
insl
pop
pop
in
and
mov
mov
cmp
xchg
in
mov
jecxz
push
lahf
sahf
mov
repz
adc
imul
lret
fistpl
test
push
pop
test
push
cmp
outsl
xchg
sahf
loope
dec
rclb
ljmp
push
popa
fdivrl
mov
aam
push
jmp
repnz
sbb
out
push
sub
cli
ret
push
inc
lret
mov
loope
xchg
xor
mov
sbb
jne
movsl
inc
adc
add
pop
pop
or
repnz
fistl
cld
pop
jmp
push
adc
sub
fsubrp
int
fsub
ds
add
xor
pop
inc
cmp
les
out
mov
adc
rcrb
repnz
iret
cs
cwtl
add
ds
lcall
mov
nop
mov
jge
mov
das
lcall
daa
sbb
aad
or
jecxz
mov
imul
int3
fwait
jbe
cmc
scas
int
fs
out
idivl
mov
inc
nop
cmp
arpl
daa
sbb
push
pop
call
fmuls
sahf
mov
sub
mov
mov
pop
mov
push
mov
loop
mov
jb
cld
jnp
inc
xor
xor
iret
cmp
andb
stc
xor
sub
mov
xchg
pusha
out
xlat
jle
or
fldenv
rcrb
shlb
mov
pop
fldl
inc
inc
jns
push
sub
xlat
into
outsl
push
int
sub
push
sub
lds
push
mov
leave
popf
mov
sub
test
xchg
jnp
dec
mov
sbb
adc
dec
cmp
xor
inc
loop
adc
xor
mov
push
or
nop
ds
notb
mov
imul
insl
lock
add
push
lods
or
hlt
xchg
call
mov
les
jle
jg
loope
inc
pop
push
cmpsl
mov
pop
xor
insl
adc
cwtl
ret
add
rcr
jle
or
add
push
int3
lret
out
das
fistps
ss
push
xor
jns
ljmp
cmpsb
push
stos
inc
push
adc
jmp
mov
testb
mov
adc
pop
push
sub
jg
rorl
scas
jmp
sbb
mov
dec
mov
jecxz
sbb
mov
mov
jnp
sbb
jle
sub
inc
push
stos
mov
xchg
pop
xor
sahf
xchg
dec
dec
loope
jno
dec
inc
fdecstp
or
lock
mov
push
shrl
mov
test
xor
out
cmp
insl
cmpsb
and
fucomp
pop
test
fidivrs
push
sbbb
js
pop
cli
pop
out
or
mov
and
fs
sbb
subl
push
xor
cs
cmpl
sub
lret
fwait
xchg
inc
jne
fisttps
xorl
imul
fistpll
push
push
xchg
and
jl
push
fimull
pop
lock
scas
sbb
xor
xor
jl
mov
xor
scas
sbb
xchg
imulb
imul
adc
nop
sbb
inc
mov
jg
int
sub
scas
and
pop
ljmp
or
jle
out
fcmovnbe
adc
out
mov
adc
fwait
mov
and
dec
mov
daa
movsb
andb
dec
shrl
aaa
rcll
jl
stc
adc
cltd
and
cmpsl
addr16
pop
test
adc
cmp
out
popa
jnp
rcll
nop
ficomps
pop
push
cmc
jbe
pop
xor
test
push
stos
add
push
or
cmp
sbb
add
ds
adc
les
cltd
lret
jns
xlat
add
int3
jle
mov
inc
mov
sbb
stos
rcl
in
std
pop
mov
outsb
lret
ljmp
cmp
pop
cwtl
sarb
and
mov
data16
jmp
xchg
pop
lea
inc
mov
cli
mov
xchg
push
fbld
int3
adc
sub
xchg
fiaddl
adc
pop
and
xchg
pop
outsl
mov
aaa
popa
cmp
iret
iret
mov
in
aam
push
movsl
cmp
ret
rcr
jecxz
stos
pop
test
fdiv
push
popf
mov
push
push
sub
repnz
push
imull
shll
mov
cld
push
pop
xor
je
pop
mov
test
and
in
cld
xchg
mov
cmp
jb
test
shll
mov
test
inc
jns
fwait
mov
jg
mov
push
iret
out
push
nop
stos
adc
stc
sub
inc
je
leave
push
std
push
icebp
dec
shrb
mov
test
int
and
inc
cmpsb
cld
jbe
popf
mov
dec
mov
and
or
in
or
pop
ds
or
pusha
imul
pop
icebp
stc
inc
addb
rol
mov
scas
push
stc
aad
out
aad
pop
xor
clc
lahf
in
sub
aas
adc
jae
fwait
addr16
mov
std
mov
lret
jge
fisubrl
and
mov
insl
cmp
mov
cmc
jae
cmpsl
or
cmpsb
push
xchg
mov
imul
cld
inc
bnd
sti
inc
ret
or
subl
xchg
into
xor
push
in
push
and
or
flds
bound
sbb
nop
lret
xchg
nop
xchg
pop
dec
adc
test
ror
cli
iretw
and
into
jecxz
push
push
xchg
dec
fnstenv
add
sti
add
cs
xchg
and
fstl
mov
inc
bnd
mov
test
push
pop
stc
add
fs
je
out
dec
cmpsl
push
jnp
orl
jbe
cmp
das
int
pop
call
pop
adc
sbb
out
jle
lret
arpl
and
mov
out
adcb
addb
push
lcall
adc
arpl
mov
std
xor
ret
xchg
inc
cmpsl
arpl
push
jbe
inc
fisttps
in
xor
sub
inc
mov
cs
lea
add
dec
mov
pop
or
cld
inc
out
add
iret
iret
dec
popa
lds
cmp
adc
dec
dec
test
add
jp
es
jnp
bound
mov
fwait
xlat
jnp
lret
test
mov
insl
push
out
sbb
sub
push
adc
jb
dec
mov
rcrb
subl
popf
adc
test
mov
pop
orb
scas
lcall
add
out
lods
bound
imul
cmp
sbb
fdiv
repnz
shll
pop
cmpsb
js
jnp
mov
insl
bts
lods
daa
pop
pop
push
ret
call
cs
pop
cmc
mov
jne
sub
fwait
mov
cltd
fsubrl
and
dec
int3
daa
mov
pop
jp
inc
in
adcl
es
cwtl
ret
sti
mov
jne
adc
call
js
mov
sbb
lock
aam
ret
push
andb
rorb
pop
cwtl
mov
orb
je
hlt
add
daa
jle
roll
mull
out
dec
sub
and
sbb
sbb
jecxz
arpl
test
les
ljmp
movsb
lods
xchg
xchg
xchg
leave
sbb
lea
or
fwait
aad
sar
cmp
test
outsl
push
cmpsl
rcr
pop
push
addr16
inc
cmp
ja
jge
shll
or
shlb
sbb
sub
pop
std
adc
ret
dec
xchg
mov
xchg
ja
jp
inc
pushf
aad
lods
les
lret
stos
jns
and
xor
inc
cmpsb
sbb
fisttps
cmp
and
xor
or
ror
xor
addr16
icebp
pop
fsubrl
scas
xor
out
dec
dec
dec
adc
push
aas
adc
inc
xor
mov
pop
adcl
push
leave
sbb
cs
icebp
arpl
push
sbbb
popf
xorb
sbb
inc
push
aas
cmp
or
shlb
test
test
pop
xor
sbbl
mov
lods
pop
adc
insb
jae
call
mov
jns
xchg
test
xchg
sbb
and
stos
lcall
out
push
aaa
pop
or
enter
or
or
aad
cmc
mov
mov
lods
push
mov
sbb
sub
mov
xorb
nop
adc
movl
sub
dec
sbb
fdivrs
xor
mov
xor
jmp
lret
xorb
stos
fstpt
xlat
scas
je
les
lods
out
or
aad
fucom
mov
sar
jbe
or
push
add
dec
dec
xchg
aam
pop
cltd
aad
in
mov
imul
jno
xchg
xchg
insl
rcr
dec
les
call
icebp
push
jge
mov
jg
jns
loope
aaa
xchg
fs
in
lret
mov
add
pop
and
lahf
sar
out
int3
sbbb
sub
mov
pusha
mov
out
cltd
add
and
lods
fucomip
pop
mov
sbb
js
push
push
stos
jl
mov
shll
out
in
out
sahf
insb
add
lods
dec
mov
mov
roll
xchg
pop
mov
dec
cs
ror
dec
xchg
xchg
adc
adc
jle
push
into
sub
aas
adc
push
sub
stos
mov
xchg
loop
mov
sbb
add
fpatan
pop
clc
cltd
xor
fidivs
mov
jg
sahf
or
fisubrl
push
in
shl
aam
mov
pop
stc
mov
test
out
fldcw
xchg
in
mov
pop
dec
dec
popa
jnp
adc
stos
inc
xorb
popl
aad
rcll
mov
jle
xchg
das
adc
int
mov
fcompl
mov
stos
lcall
adc
lds
mov
repnz
mov
add
mov
leave
rcpps
ret
decb
imul
test
loope
mov
mov
jne
mov
ret
dec
inc
int3
rcl
dec
pop
adc
mov
sub
push
lahf
dec
out
ljmp
das
cmp
les
rcll
repz
lods
push
adc
out
mov
in
jne
call
jge
mov
stos
mov
rclb
outsb
roll
mov
sbb
sbb
lea
inc
dec
mov
and
xchg
out
out
andl
arpl
push
dec
pop
testl
add
push
pop
inc
fldcw
dec
mov
xor
jnp
add
sub
adc
ss
push
sub
imul
jne
xor
jmp
jg
inc
add
mov
aaa
add
pop
xor
iret
inc
sub
jge
faddl
stos
popf
jne
sub
out
shlb
sti
leave
in
je
sub
sub
int3
jecxz
hlt
and
cld
mov
in
dec
stc
mov
jge
sahf
scas
and
imul
loope
and
repz
testl
jmp
in
ds
cmp
pusha
rcr
orl
ljmp
inc
das
jg
movsl
scas
cmpsb
fcoml
mov
outsb
adc
adc
fwait
lods
add
inc
inc
inc
scas
mov
ret
and
ficoms
sbb
cltd
rcr
jmp
xchg
pop
insl
ljmp
ret
stos
push
cwtl
sub
pop
in
jae
jle
xlat
sbb
cltd
add
inc
clc
addr16
lea
sbbl
sarl
or
mov
cwtl
dec
lods
scas
mov
fildl
cmc
sub
aas
rolb
xchg
test
ja
and
test
ljmp
mov
cli
ja
jecxz
push
outsb
jb
mov
or
push
pusha
out
test
sbb
movsl
pop
lret
push
pop
or
in
push
sub
repz
mov
nop
ss
movsb
push
add
ljmp
roll
cmpsl
inc
sub
push
jne
rep
mov
in
mov
outsb
pop
push
push
adc
int3
fsubp
mov
add
xor
pop
shl
push
jo
adc
mov
mov
ds
fcoml
iret
dec
cmc
in
mov
jbe
loopne
nop
jle
xor
push
jae
cmp
int
or
inc
sub
xor
lods
rcll
int
and
xchg
mov
jb
nop
fs
in
js
pop
jbe
sub
xchg
xor
and
inc
out
inc
xlat
or
push
ret
pop
jno
or
out
adc
mov
loope
mov
push
clc
hlt
mov
push
and
sub
push
xchg
in
lods
jne,pt
mov
sbb
scas
into
xor
push
xchg
outsb
out
outsb
xchg
mov
mov
pop
xor
stos
movsb
test
mov
inc
jmp
xchg
insb
ljmp
inc
mov
jbe
jo
out
sub
in
add
outsl
cmpsb
nop
or
xchg
xor
mov
subb
pushl
mov
mov
popa
popf
fiaddl
test
xor
outsb
xchg
test
dec
pop
cltd
push
jg
jle
decl
and
dec
movb
adc
mov
mov
pop
jno
pop
mov
jg
jp
and
rorl
outsb
daa
test
lods
stc
dec
push
imull
pop
loopne
cld
fcmovu
out
xchg
cmp
mov
inc
mov
mov
cltd
add
inc
outsb
xchg
scas
into
mov
rcl
sub
lock
jae
and
jp
or
dec
int3
aaa
movsl
sbb
dec
mov
jnp
dec
pop
dec
cmc
mov
mov
mulb
imull
or
xor
lret
adc
out
inc
dec
or
shrl
jge
lcall
cmc
jl
xlat
rorl
test
wbinvd
sub
out
mov
stos
sahf
pop
int3
inc
loop
and
stos
mov
lock
adc
push
cld
xchg
movsl
shlb
shlb
adcb
fbstp
mov
lea
jp
insb
jl
pop
mov
cmp
fidivrl
pop
mov
pop
xlat
scas
pop
ds
cmc
sahf
sub
iret
inc
mov
loop
jecxz
roll
fwait
and
pushf
iret
mov
mov
movsl
cmp
jbe
add
inc
faddp
add
daa
jp
dec
push
aas
cli
cmp
int
cmp
adc
ljmp
sbb
xchg
ds
pop
push
cmp
repnz
mov
lods
jo
aas
xchg
push
inc
lea
jno
or
mov
lcall
and
jne
fadd
dec
mov
daa
das
pop
outsb
ss
jns
ja
scas
sbb
fwait
ret
push
jl
mov
dec
lret
mov
mov
lods
sub
loope
adc
jmp
mov
xlat
push
fldt
cmpb
insl
sub
test
jo
push
out
xor
inc
push
out
mov
repz
test
cmc
fldcw
sub
pop
fnsetpm(287
or
jl
cs
sbb
push
pop
insl
and
pop
fisubs
fcmovnb
xchg
pop
mov
inc
cmp
ljmp
cmc
rcl
pop
nop
cwtl
sbbb
xor
mov
push
insl
add
mov
rcr
adc
mov
mov
adc
mov
fmulp
fs
pop
scas
xchg
pop
and
jg
xchg
mov
xor
lcall
les
sbb
pop
mov
fnstsw
out
xchg
daa
mov
and
mov
cmp
mov
jmp
xchg
jne
ds
lret
inc
push
repz
testb
pop
mov
div
mov
or
cmpsl
loope
push
in
cltd
pop
hlt
pop
pop
in
add
outsl
sub
stos
mov
sub
fisttpl
jge
scas
test
ret
gs
scas
sbb
stos
das
stc
ret
xchg
addr16
cmp
in
add
xchg
shl
jbe
imul
clc
movsl
shrl
iret
jecxz
and
xchg
or
movsl
cli
mov
push
jbe
shlb
adc
sti
lods
fs
mov
pop
mov
fstpl
sbb
pusha
mov
jno
loopne
scas
dec
ljmp
jo
or
insl
ret
xor
xor
lcall
xor
leave
sub
stos
movsb
sbb
pop
movl
sbb
hlt
das
xor
call
mulb
cmp
popf
ret
mov
jle
jae
push
fwait
mov
daa
out
fs
sbb
movsl
lock
lcall
xchg
or
push
aaa
shl
stos
add
inc
jle
push
cmp
insl
dec
repz
mov
push
mov
addr16
fldcw
shll
gs
daa
in
push
dec
cmpsl
sbb
inc
lds
mov
xor
adc
mov
movsl
adc
insl
xchg
adc
lods
hlt
push
or
test
sub
popa
test
jb
dec
xor
ss
lcall
popf
mov
xchg
adc
push
js
mov
lret
mov
push
test
push
jg
cmp
dec
sbb
xor
out
mov
inc
mov
shll
adc
andl
dec
mov
push
jl
or
sahf
pop
movd
add
mov
dec
pushf
pop
aam
push
dec
mov
js
icebp
xchg
mov
js
out
outsb
repnz
in
sti
stc
idiv
mov
mull
out
lcall
inc
dec
test
hlt
repnz
fistpll
bnd
sarb
xchg
sbb
scas
in
pop
ret
push
jle
dec
lods
inc
dec
ficompl
fisttpll
pop
xor
loop
sbb
pop
imul
push
fistpl
ds
mov
shl
idivl
sub
out
jo
insl
pop
test
mov
mov
inc
pop
in
sar
sbb
loopne
pop
add
mov
lahf
push
jge
int
adc
cmpsl
fsubl
stos
add
and
push
adc
cmpsb
add
or
into
jne
pop
in
mov
or
or
sub
das
push
insl
add
scas
fcoml
shlb
inc
mov
flds
jg
mov
arpl
dec
outsb
bound
imul
rcrb
jle
sub
lds
popa
or
push
outsb
or
adc
lea
inc
sti
xor
lods
sub
and
dec
push
shr
dec
add
jmp
arpl
or
dec
jns
push
imul
xchg
adc
xor
pushf
stc
imul
adc
mov
cmp
jp
jmp
loopne
out
or
xor
sbb
sub
mov
pop
or
push
jp
sbb
push
out
mov
icebp
xchg
dec
xchg
mov
sbb
arpl
push
andb
test
inc
ret
xor
sbb
in
cltd
xchg
dec
cmpsl
fmuls
sub
rol
jmp
jmp
aad
hlt
sbb
sub
daa
mov
xlat
mov
cmp
cmp
push
dec
xchg
mov
cli
push
adc
inc
or
xchg
inc
xchg
fs
mulb
cwtl
int3
dec
xor
jl
adc
dec
jo
cltd
dec
out
pusha
push
xchg
cld
cmp
xor
test
js
pusha
int
mov
cmpsb
inc
xchg
je
lcall
sub
pop
sub
outsl
test
addr16
xor
lret
inc
sahf
pop
pop
inc
and
or
test
insl
in
sti
fsubrp
inc
outsl
lahf
xchg
lock
mov
ret
pushf
fldl
push
test
pusha
lret
cmp
add
cmpsb
jl
inc
ret
xor
xor
loope
xchg
ret
pop
push
addb
in
sti
icebp
cmp
dec
jns
aaa
adc
pop
int
loopne
dec
int3
inc
xchg
xor
lds
popf
inc
mov
add
pop
mov
mov
rcr
cltd
test
outsl
out
rcl
lret
push
lods
jo
xchg
ss
lea
pop
pop
cmpsl
ss
lahf
insb
dec
aad
int
push
push
xchg
imul
test
in
das
inc
stos
pop
jb
pop
mov
adc
mov
icebp
and
aad
or
fdivrl
push
outsl
cmp
leave
int3
data16
xchg
imul
push
adc
sti
fistpl
ret
push
fdivp
out
stos
xlat
cmp
dec
sti
pop
or
mov
and
xchg
mov
adc
sbb
lcall
out
rcl
cli
push
xchg
xchg
push
les
andb
ret
int
sbbb
imul
sub
cmp
xchg
dec
push
sahf
add
fxch
xchg
mov
cmp
je
sbb
js
loop
rorl
dec
dec
aaa
arpl
mov
fcomps
sti
mov
mov
add
jle
pusha
cmp
imul
aaa
popa
sbb
or
push
pushf
jns
pop
fdiv
dec
sbb
lret
in
and
loop
inc
addr16
orl
cmpsl
sub
mov
das
inc
repnz
pop
lcall
jp
aas
sbb
and
cmp
aaa
rorl
rcll
data16
leave
sub
popa
test
mov
jno
inc
mov
jp
pusha
push
xchg
sahf
jbe
int
mov
loop
outsl
lea
loope
iret
sbb
pop
and
bound
scas
sti
push
adc
inc
leave
test
repz
and
add
je
xor
iret
fucomp
sub
pop
xchg
xchg
mov
test
jb
movsl
jbe
xchg
lods
adc
add
add
push
xor
int3
lods
shrb
pop
mov
and
jmp
xor
ret
jg
sub
sbb
pop
jno
and
or
in
mov
mov
call
dec
fldt
popa
push
mov
fidivrs
cmp
sti
mov
jmp
ret
inc
daa
xchg
inc
mov
push
cmp
jb
xor
out
pop
cmp
loopne
cmp
mov
pop
inc
pushf
xchg
cmpsl
lret
jno
in
adc
add
lcall
ss
fimuls
cltd
add
lods
lock
inc
jle
pop
adc
dec
stos
mov
cs
fisubl
leave
jno
loopne
into
rcrb
inc
imul
ljmp
mov
mov
dec
adc
jecxz
inc
pop
cmpsl
sub
stc
fstpl
cmp
push
ljmp
pop
icebp
push
add
cltd
rcl
int
clc
push
and
test
mov
jmp
mov
pusha
cmp
jp
jle
add
xor
adc
gs
push
sbb
pop
push
js
mov
xchg
jns
mov
jbe
rcrb
xor
or
or
add
mov
dec
cmpsb
iret
loope
push
or
ja
cmc
sub
and
xchg
push
cmpsl
dec
enter
leave
lods
lea
outsl
push
shl
add
test
cs
inc
out
push
jecxz
xlat
enter
shlb
or
movb
xor
shrb
add
xlat
loopne
cmpsl
xor
jmp
sbb
xchg
mov
test
insl
rcr
dec
cmp
pop
xchg
sbb
aas
cwtl
mov
xor
mov
xor
shrb
stos
xchg
je
lret
ud1
leave
dec
test
pusha
cltd
sbb
fcoms
mov
push
pop
dec
lods
fiadds
iret
mov
push
pop
xchg
mov
push
jge
outsl
pop
out
sub
pop
jno
rcll
aam
xchg
ret
jo
popf
int
pop
sbb
xchg
mov
mov
dec
in
inc
mov
push
cli
es
cmp
add
jl
out
dec
lret
lret
xor
aam
adc
out
test
aam
aas
mov
and
mov
fadd
pop
cmpsl
push
pop
rol
push
lret
sbb
movsl
mov
dec
mov
pop
test
xchg
outsb
xchg
fcoms
scas
mov
mov
mov
sahf
int
mulb
test
sub
insb
int
mov
inc
in
add
das
jno
addl
mov
cmp
mov
add
jno
xchg
addr16
xor
xor
stos
call
xchg
scas
outsl
cs
out
push
cld
js
lods
lds
lock
nop
push
mov
inc
stos
adc
es
adc
invd
test
dec
jnp
dec
out
roll
lods
pop
das
or
jne
mov
lcall
in
sub
pop
iret
pop
sbb
adc
add
nop
pop
mov
mov
popa
jbe
dec
mov
or
fmuls
pop
insl
insl
mov
mov
mov
mov
pop
fwait
jmp
int
loopne
hlt
dec
leave
dec
pushf
std
cmp
push
jmp
in
outsl
rol
clc
movsl
ljmp
sbb
aad
imul
js
mov
adc
mov
or
rcrb
daa
pop
adc
sub
out
or
fnsave
in
in
outsb
stos
test
inc
popa
daa
jecxz
mov
das
jmp
fisubrl
xchg
jecxz
sahf
jp
cmc
out
pop
adc
insb
ljmp
and
jmp
lcall
inc
push
push
adc
add
gs
pop
leave
pop
mov
cwtl
mov
iret
or
fisttpl
and
mov
frstor
lahf
or
mov
jmp
jae
or
in
imul
mov
les
xchg
arpl
add
mov
aad
data16
movsb
notb
and
pop
gs
add
adc
dec
or
jle
mov
mov
or
cmpsl
pop
cmp
int3
sbb
cmp
mov
decl
jnp
cld
fnstenv
push
daa
sbb
mov
hlt
add
in
cwtl
pop
add
and
rclb
sub
int3
lods
imul
push
inc
lcall
ja
jg
push
sbbb
scas
mov
jmp
cmp
lcall
jl
int3
out
in
inc
repz
out
aad
mov
popa
in
arpl
or
jb
testb
push
fisttps
jb
adc
sub
push
mov
pop
popl
jne
rol
inc
daa
cwtl
mov
out
es
xchg
idiv
inc
mov
mov
inc
shrl
push
dec
dec
cmpsb
scas
pushf
pop
fsubr
pop
push
jae
ret
jl
xchg
lods
loope
iret
aaa
cmp
aam
push
fiaddl
mov
repz
mov
dec
adc
inc
xchg
pop
imul
dec
inc
fldenv
movsl
add
cltd
ss
cmp
popa
subl
test
data16
negb
and
in
ja
push
punpckldq
daa
jo
pop
mov
int
add
cs
xor
fisttpll
aas
pop
mov
sub
dec
cmp
cli
sub
xchg
xchg
cld
xchg
cmpsl
bt
test
js
nop
in
in
inc
clc
mov
sub
fxtract
push
and
out
cli
call
mov
call
imul
cld
divl
arpl
sub
lods
mov
jg
pushf
push
jmp
adc
and
mov
mov
pop
mov
mov
adc
cs
cmp
mov
insl
cmp
sbb
pop
into
sar
pop
nop
aam
mov
div
pop
cmp
mov
sti
mov
dec
js
ret
add
fdivrs
mov
adc
jle
push
in
js
mov
push
sub
pop
in
int
push
in
out
insb
sub
sbb
xchg
pop
sbb
ficomps
test
pop
mov
mov
mov
xor
lret
or
mov
dec
insb
pop
gs
das
pusha
dec
stos
je
aaa
mov
pop
repz
je
popl
mov
push
mov
sub
xchg
mov
out
cs
mov
or
sbb
mov
push
rorb
inc
add
lock
sbb
fwait
mov
sub
dec
pop
mov
int3
rorb
jge
pop
mov
push
nop
or
push
in
pop
jmp
das
jg
jo
add
data16
cmp
shlb
repz
inc
in
mov
das
pop
xchg
adc
mov
fldenv
lcall
push
sub
jmp
lret
jl
js
and
mov
lods
out
jno
fwait
je
lods
mov
xchg
jne
out
sub
dec
shll
jno
pusha
adc
mov
dec
jg
clc
xor
lods
lds
int
repz
pop
xchg
pop
lret
cmc
hlt
add
pop
fistpll
in
push
scas
jno
aaa
sbb
and
jmp
call
pop
adc
adc
ds
negb
loope
sbb
inc
dec
xchg
jo
test
pop
add
adc
lods
cmpsb
xchg
mov
cmp
test
push
xor
lods
fwait
dec
lret
sbb
sbb
dec
cltd
not
lcall
dec
jae
fstps
arpl
imul
stos
or
imul
mov
jb
aad
cmp
or
je
xor
in
adc
inc
add
cmpsb
ss
pop
call
pop
add
test
xor
jo
jle
scas
jo
inc
insl
fstps
les
cwtl
pop
dec
in
inc
je
cmp
xchg
out
pop
fisubrl
mov
maskmovq
cmp
push
in
jae
aad
sbb
cli
sub
dec
call
xchg
dec
or
mov
sub
ss
imul
pop
jg
imul
push
aaa
add
push
idivb
mov
and
dec
jg
je
dec
pop
add
inc
repnz
lods
repz
push
mov
fwait
cmp
test
popf
pop
push
test
pop
push
jecxz
adc
negb
jle
mov
or
or
mov
dec
bound
adc
fs
pop
xchg
mov
dec
sbb
dec
dec
les
jns
mov
pop
inc
mov
sub
sub
hlt
bound
scas
mov
lcall
jns
xlat
add
pop
fwait
add
data16
sbb
in
cmp
jge
shll
or
insl
push
or
in
cmp
fisttps
and
aas
lahf
jae
lea
dec
andb
jl
xchg
push
jge
cld
loop
sub
and
fidivrl
inc
pop
std
and
cli
into
lret
shr
mov
cs
fisubl
mov
jbe
cmp
xor
aaa
mov
ss
inc
mov
ljmp
push
outsb
push
push
aad
movsb
cmpsb
jle
fcmovne
iret
push
mov
mov
cs
jno
sub
call
cmc
xor
mov
lea
xor
cmpsb
daa
lods
icebp
add
add
adc
push
cmp
mov
add
shll
sbb
ret
insl
pushf
cmp
cmpsb
dec
mov
push
ror
xor
jg
stos
cwtl
rorl
cld
xlat
ljmp
pop
sbb
aas
xlat
in
sbb
clc
aam
arpl
es
dec
mov
pop
test
je
mov
dec
lahf
add
xchg
cmp
cltd
or
fimull
jle
gs
and
or
out
or
movsb
pusha
cmp
test
push
xchg
arpl
int
and
mov
inc
test
popa
and
or
adc
cmp
testl
movsb
xor
cltd
xlat
mov
inc
xchg
inc
adc
popf
add
jae
jb
cmc
dec
repz
fidivrl
inc
push
dec
cs
fisubrl
xor
out
xchg
dec
cmpsb
xchg
adc
sahf
sti
lock
shr
negl
dec
jp
mov
ret
mov
insb
jecxz
sbbb
dec
les
fistl
jno
add
add
hlt
sub
shll
xchg
pop
mov
and
mov
pop
push
rcrb
dec
fmulp
xchg
dec
repz
loope
sub
cmp
rcrb
dec
mov
je
scas
jbe
iret
xlat
scas
adc
and
xor
jmp
xchg
mov
mov
push
mov
push
ret
into
insl
iret
inc
pop
and
add
xor
push
out
popa
sahf
xchg
adc
in
enter
out
test
sbb
rolb
mov
stos
mov
xchg
cmc
popf
xchg
cli
sbb
jg
mov
push
subb
inc
roll
xchg
fdivs
lods
cmp
imul
pop
jmp
lods
push
js
inc
cltd
inc
arpl
pop
dec
add
add
pop
fistpll
add
push
iret
insl
notb
mov
cmp
xchg
push
xor
hlt
add
int
add
arpl
mov
add
pop
pushf
dec
ds
ret
pusha
add
hlt
ljmp
outsb
and
sbb
adc
fwait
and
shlb
jno
in
scas
push
xchg
in
and
adc
pop
jae
aas
push
push
mov
push
adc
jle
dec
divl
add
fsub
icebp
cmp
loopne
jmp
data16
repnz
sbb
ljmp
jne
les
imul
mov
jcxz
mov
into
insl
movsl
push
fmuls
imul
mov
sbb
in
hlt
idiv
push
in
mov
jge
mov
repz
mov
lret
nop
loopne
push
arpl
pop
sub
sahf
push
jmp
enter
repnz
cmpb
mov
cmpsl
add
or
dec
push
sub
das
mov
std
mov
movsl
sbb
outsb
stos
jnp
or
pushl
popf
mov
addr16
push
pop
ja
mov
dec
ret
sahf
sti
mov
or
add
xchg
loopne
popa
sahf
in
and
ljmp
or
lods
sbb
xchg
dec
xchg
mov
sbb
std
sahf
mov
or
adc
das
loop
inc
lods
lods
popf
daa
push
lret
cwtl
shll
adc
jne
in
ljmp
jno
mov
push
cmp
iret
sbb
lds
cmp
xchg
pop
sub
xchg
fmul
daa
out
mov
movsl
leave
inc
adc
jno
jle
out
inc
adc
push
fwait
mov
mov
cmp
push
mov
pushf
cmp
iret
jl
jb
pop
xchg
add
xchg
enter
addr16
dec
or
rcrl
je
out
mov
jecxz
or
std
ret
in
sbb
mov
mov
addps
jmp
lret
mov
xor
mov
adc
mov
das
mov
sub
xor
cltd
mov
fs
add
out
int3
jge
jg
inc
cmp
mov
xor
xchg
ljmp
mov
push
add
arpl
mov
stc
scas
dec
cmc
dec
ljmp
pop
out
lret
cmp
mov
cmpl
cltd
or
orb
popf
fsts
xchg
push
mov
dec
lock
pop
or
push
test
into
cmp
jae
inc
jp
rolb
mov
ret
sbb
das
or
inc
nop
pusha
push
loopne
sti
movsb
cs
mov
cmp
mov
inc
sbb
out
xchg
or
arpl
sahf
int
xchg
mov
test
movlps
push
adc
dec
mov
xlat
aas
inc
and
pop
aas
jp
jae
ret
adc
cmpl
inc
pop
jo,pn
jne
mov
push
fmul
sub
pop
sbb
push
push
xchg
sti
sub
cmpsl
cmp
xchg
movsb
pop
cmp
push
add
dec
lcall
jp
out
shl
xor
mov
xor
xor
js
pop
divb
inc
xchg
fsts
xchg
jmp
sub
xor
or
inc
popf
push
addr16
jnp
push
fidivrl
fsub
inc
stc
push
setge
aam
enter
cmp
jbe
push
js
scas
sbb
roll
repz
test
cwtl
fmul
add
aas
xchg
add
push
ja
fisubs
adc
jl
cmp
mov
movsb
adc
mov
jbe
data16
mov
xor
movsb
xchg
jp
dec
call
xor
popa
mov
inc
nop
or
push
jbe
adc
push
lock
fcmovu
popa
and
pusha
repnz
loope
adc
cli
or
fwait
lock
dec
adc
pop
fimull
mov
pop
xchg
imul
shl
subb
or
or
fwait
pop
mov
adc
in
lret
push
shll
stos
fisttps
or
push
add
dec
fistpl
sbb
sub
or
dec
push
out
or
repz
jne
mov
cmovae
sarb
in
cmp
adc
mov
subl
insb
addr16
cmp
cmp
lcall
push
mov
mov
mov
push
sub
sub
xchg
jle
out
mov
mov
fstpt
lret
aas
or
sub
jbe
shr
xchg
aaa
nop
jp
mov
fidivs
cmp
icebp
in
xor
xor
mov
dec
sahf
out
adc
jg
mov
js
adc
add
and
loopne
add
mov
mov
mov
mov
iret
shll
lock
sar
push
cs
scas
fyl2x
rcrb
mov
bound
imul
lock
inc
mov
pop
mov
daa
sbb
leave
mov
aad
sub
xchg
mov
negl
shl
nop
push
je
test
xor
cs
aam
xchg
lcall
dec
mov
inc
jecxz
adc
mov
jl
add
xchg
and
mov
adc
mov
int3
or
xor
sbb
or
fwait
in
ja
jo
xchg
daa
add
push
push
dec
push
cmpsb
push
adc
and
movsl
imul
sub
icebp
notb
pop
xchg
inc
in
jmp
jae
pop
jae
inc
xchg
mov
aam
push
sbb
cmp
or
aad
hlt
sbb
push
je
mov
nop
jecxz
xchg
pop
enter
ret
inc
in
pop
sub
mov
cltd
scas
fiaddl
cmc
std
jne
icebp
shll
sub
mov
inc
xchg
pusha
inc
jg
pop
dec
sarl
popa
bswap
jp
or
mov
ds
stos
paddsw
dec
xlat
mov
jno
mov
sbb
add
add
cmpsb
mov
stos
jb
mov
call
fs
lcall
lahf
out
adc
jl
repnz
dec
jle
bnd
lods
enter
inc
movsl
cs
xchg
lods
notb
cs
lcall
icebp
lcall
pop
pop
inc
sbb
sti
sub
loop
nop
ret
jl
das
cmpsb
push
ret
inc
loope
sbb
outsl
xchg
push
popf
jbe
or
shlb
cmpsb
pop
rcl
sbb
test
leave
mov
das
cmp
mov
xchg
negb
dec
jno
push
sarl
mov
mov
pop
mov
lcall
sub
xchg
lret
hlt
inc
push
dec
call
incl
insb
addr16
xchg
aad
jno
pop
stc
adc
out
fistpll
inc
mov
mov
cmpsl
idivl
pusha
hlt
sbb
aam
movl
inc
ljmp
fildll
popa
ret
xor
or
pop
outsb
fnclex
loopne
jne
xchg
mov
pop
mov
jno
sbb
das
shrb
xor
es
dec
cs
hlt
in
adc
jae
in
shl
pusha
out
pop
repz
adc
sbb
lret
pop
sbb
in
jo
subb
add
mov
lret
rclb
das
mov
sbb
bswap
in
xchg
fnstenv
add
cwtl
ja
loopne,pn
lock
cmp
pmuludq
push
fcomp
movsl
imul
fildll
in
jmp
lahf
sbb
hlt
jnp
fsubrl
test
enter
lea
inc
inc
stos
mov
pop
and
hlt
pop
ret
jmp
arpl
and
or
or
xor
jno
nop
cmovns
add
addl
add
shll
and
xor
and
adc
inc
push
dec
push
data16
scas
stos
lahf
mov
mov
xor
lods
decb
lods
inc
test
in
stc
pop
out
pop
and
dec
pop
pop
dec
enter
out
push
dec
mov
stc
popf
fs
jmp
dec
repnz
xor
cs
dec
push
push
inc
push
lcall
loop
and
ss
ljmp
and
mov
les
and
pop
shlb
cmc
mov
pop
fldenv
push
dec
inc
mov
ret
sbb
cltd
lret
jle
pushf
inc
xor
jne
push
or
loopne
mov
pushw
test
pop
cltd
loopne
adc
mov
pop
xor
xchg
pop
pop
mov
sbb
cmovs
mov
stos
mov
test
cld
mov
and
int3
into
out
fimull
bound
push
test
xchg
lahf
cltd
push
aam
into
in
jge
lock
sbb
cmp
pop
sbbl
cmp
jb
pop
outsb
lcall
push
fldcw
loopne
imul
enter
incb
mov
xchg
fucom
sbb
jge
or
stc
imul
scas
test
imul
mov
lea
jo
pop
mov
dec
xchg
andb
xchg
int3
daa
xor
pusha
stc
and
es
lods
pop
mov
xor
cmp
xorb
push
push
jne
pop
adc
adc
out
push
mov
das
lock
js
xchg
mov
ret
xchg
sbb
jp
scas
in
mov
sbb
inc
sub
mov
adc
inc
ret
push
scas
iret
xor
cmp
aas
sub
in
jb
pop
inc
stos
nop
pusha
rcll
adc
xor
aaa
and
add
xor
leave
lock
call
pop
imul
aad
jns
sbb
shlb
scas
sbb
mov
test
je
dec
mov
jb
dec
mull
outsl
cmp
and
mov
ds
test
jl
fsubl
pop
cmp
test
test
lahf
jne
push
int3
rcl
inc
pop
ljmp
adc
int
push
xor
dec
inc
aad
cli
jge
aas
icebp
and
shr
or
xor
outsb
pusha
adc
fsubrs
rolb
inc
mov
jbe
xchg
ljmp
cmp
add
push
push
mov
pop
lret
mov
jns
popa
mov
loopne
mov
inc
je
cmp
mov
dec
xchg
push
and
aam
mov
cmp
and
pop
vpmacsww
mov
je
icebp
cmp
and
push
cmp
bound
push
push
in
daa
adc
pop
add
arpl
movsl
stc
or
imul
sbb
sub
mov
fcomps
pop
xchg
pop
push
dec
mov
cmp
and
out
rcr
scas
cld
stos
push
pop
cmp
jmp
int
cmpsb
ficoml
in
push
testb
push
jge
ud1
dec
mov
loop
and
sub
mov
sbb
bound
xchg
add
lahf
mov
cmc
dec
or
add
test
repnz
xor
mov
out
xchg
add
mov
sub
and
pop
cwtl
add
xor
daa
jecxz
jmp
insb
mov
ds
sbb
aas
mov
sbb
call
test
popa
sub
int
icebp
stc
fcoml
cmp
nop
xlat
mov
addr16
sahf
mov
ret
sbb
dec
and
repz
mov
xchg
jb
ja
js
sbbl
jle
xchg
sti
scas
cld
test
or
lea
add
mov
and
pusha
test
ljmp
pop
sbb
inc
sarb
mov
cmc
jno
loope
and
push
mov
in
adc
lret
jb
aas
push
popa
cmp
sbb
mov
cmp
movsl
push
push
push
push
imul
fmull
mov
lcall
jecxz
cltd
ja
and
adc
popf
cld
lea
xor
imul
movsl
sub
inc
fwait
mov
movsl
loopne
fiaddl
pusha
subb
out
cwtl
aam
push
mull
mov
jp
pop
xor
sub
dec
test
out
add
push
addr16
and
xchg
xchg
mov
movd
xchg
rolb
sbb
fcmovnb
add
add
inc
mov
sub
ss
jne
inc
sbb
imul
xor
push
lret
mov
inc
sbb
xor
iret
or
add
mov
stc
clc
sbb
pop
out
mov
sarl
pop
fcompl
xor
shlb
jnp
stos
aad
adc
shr
jae
stc
cli
jge
cmp
xchg
xchg
rcll
xorl
popf
shlw
out
push
or
ret
pop
enter
fisttpl
lea
shl
cmp
movsl
ficoms
or
loope
xchg
popf
pop
cld
xchg
xor
sti
jb
sbb
rcrl
sahf
cs
push
xor
pop
inc
pop
repnz
push
or
xchg
call
mov
ret
push
mov
fildll
cmp
dec
inc
push
cmp
cmp
add
push
test
and
pop
jo
and
rolb
jg
int3
pop
xchg
xchg
xor
adc
and
and
jo
call
stc
or
cmc
sbb
leave
movsb
decb
and
adc
xor
mov
push
aaa
dec
pop
loope
add
bound
mov
int
push
repnz
sub
pop
imulb
jl
dec
es
add
jae
dec
aaa
cli
inc
push
mov
mov
int3
jno
fstl
xchg
mov
enter
sub
test
mov
sub
sbb
cli
in
stos
push
lcall
xchg
pop
fisubrl
subb
xchg
add
sahf
mov
ds
push
gs
push
icebp
sub
push
test
in
lret
test
fisubrl
cmp
sub
mov
pop
std
lret
or
pop
rorb
popf
rcr
andl
mov
andb
je
and
leave
ret
jg
pushf
pop
xlat
call
js
inc
add
xchg
pop
jae
je
fmull
imul
xlat
out
sbb
aas
lret
enter
cltd
outsl
mov
xor
dec
inc
cmpsb
or
and
xor
addr16
mov
stos
dec
out
scas
dec
cmp
lea
jo
pop
lock
mov
add
cmp
fdivrl
fldln2
mov
cld
into
cwtl
imul
scas
mov
sbb
shll
and
sub
jg
sub
xor
or
jo
xchg
inc
mov
lahf
in
or
hlt
jp
pop
insb
js
push
movsl
sub
mov
cltd
orl
ss
jbe
push
leave
cmp
popa
mov
jmp
pushf
and
repnz
gs
mov
imul
ret
test
aad
sti
int
or
adc
push
cmp
lods
mov
leave
es
pop
or
jno
leave
fisttpl
fwait
aam
fiadds
test
mov
cmp
and
insl
add
adc
pushf
repz
push
cmp
rcl
fbld
xchg
and
push
shl
inc
scas
insl
nop
inc
mov
xchg
iret
jns
add
ss
and
clc
call
mov
xchg
mov
pop
cltd
mov
adc
mov
popa
lret
inc
mov
mov
push
pop
xor
xchg
cmp
cmp
jns
add
push
sub
mov
std
cmp
cltd
or
and
mov
bound
scas
decb
shrl
jo
das
add
aam
mov
sbb
ret
mov
imul
mov
xchg
decl
pop
mov
les
cmpsb
xchg
sti
xchg
jbe
rcrl
divb
jle,pn
push
xchg
faddp
dec
bnd
popf
adc
pop
repnz
or
pushf
adc
jecxz
std
andb
mov
fadd
arpl
jne
pushf
pop
add
sub
adcl
mov
mov
push
jae
je
jb
xchg
shll
sbb
loop
loop
and
jns
out
mov
or
and
jo
mov
jno
or
mov
add
lret
add
pop
cmpsl
mov
jns
lods
daa
imul
mov
sub
cmp
jp
pop
sub
stc
or
imul
aas
push
xor
fcmovb
les
mov
test
orb
or
sub
fists
add
xchg
lcall
aas
pop
pop
fildl
mov
popa
scas
add
pop
jle
cld
stos
je
cmp
outsl
clc
aaa
fadd
test
mov
xchg
or
bnd
loop
aas
cld
popf
sti
int3
addr16
xor
adc
xchg
dec
add
mov
add
sub
xor
mov
xchg
pop
pop
mov
push
int
adc
push
xchg
cmpsl
loopne
mov
lret
call
jmp
cltd
nop
shlb
cwtl
stc
adc
xor
push
movsl
loopne
xor
cld
sbb
pop
hlt
mov
cmpsb
in
ljmp
ss
hlt
jnp
test
cwtl
mov
push
xlat
std
dec
adc
cmp
xrelease
push
lret
in
pop
pop
aaa
sub
mov
negl
adc
lods
fadds
and
push
xorl
mov
aaa
mov
inc
movsb
arpl
sbb
rol
push
and
xor
sbbl
push
daa
xchg
inc
xor
adc
in
fs
xor
sbb
mov
mov
pop
popf
test
aam
xchg
xchg
xchg
data16
decl
cli
or
stos
push
xchg
sbbb
pop
cmp
inc
imul
das
pop
mov
negb
dec
repz
insb
imul
mov
cs
icebp
sbb
dec
mov
shl
lahf
xchg
xchg
sbb
cmp
add
scas
ljmp
xchg
mov
add
cli
stc
loope
pusha
pop
imul
mov
icebp
adc
nopl
testl
in
inc
lret
pop
test
adc
cmpsb
fbstp
push
inc
fbstp
cmp
stos
xor
lahf
add
shl
movsl
rcl
mov
and
enter
enter
pop
mov
dec
fidivs
ljmp
lahf
mov
pop
dec
dec
sbb
imul
cmp
rorb
cwtl
loope
rcrl
jge
iret
jb
and
xor
mov
and
xor
mov
scas
dec
cld
std
or
aas
xlat
xchg
cmp
mov
cmpsl
cli
aam
pop
xchg
aaa
or
jbe
cmpb
cmp
movsb
sbb
xor
inc
outsl
outsl
pushf
cs
sub
pusha
add
sbb
cmc
fdivl
cmp
jne
add
shl
fwait
xchg
clc
ret
and
sarl
adc
mov
fstl
cmp
lret
jle
adc
jge
or
or
cmpsl
and
cmp
cmp
pop
jns
jp
pop
pushf
jg
aad
mov
movsl
cld
lods
ja
lods
and
ret
dec
test
mov
hlt
std
iret
std
jo
xchg
add
mov
lods
sarb
lcall
int
push
aas
fcoml
sbb
push
pop
out
dec
pop
cmpsl
push
lods
mov
lret
loopnew
mov
ret
add
push
add
jns
test
dec
aad
mov
roll
jno
jg
jnp
lahf
test
imul
push
shrb
andl
fdivl
call
cmp
imulb
add
push
rcll
pop
push
icebp
jne
jge
mov
mov
pop
fsubl
hlt
adc
jo
push
xchg
sbb
ss
les
daa
and
test
and
mov
mov
into
movsb
xor
inc
roll
push
sbb
scas
test
dec
aad
sub
test
jmp
nop
and
jbe
scas
push
push
call
into
iret
das
int
repz
rcrb
mov
xchg
sbb
punpckhdq
mov
test
in
imul
xor
lret
imul
lahf
idiv
mov
xlat
sub
cwtl
fs
lret
add
and
jge
ja
inc
xchg
clc
in
jbe
int3
sub
mov
cmp
movsl
xchg
sbb
test
aam
push
xor
push
push
cs
iret
stos
pop
inc
test
ror
lcall
fsubrs
rcr
shrb
push
rorb
rcll
push
popf
lock
into
push
sbb
testl
and
rol
pop
jg
xchg
in
jecxz
or
sbb
mov
adcl
ja
movq
in
ja
mov
cmp
data16
mov
push
shrb
outsb
fistpll
xor
xchg
push
cmp
mov
inc
dec
xchg
cmp
adc
repz
lret
and
mov
jg
mov
in
outsl
sub
addr16
xor
je
xor
ds
ljmp
dec
or
loopne
pop
dec
clc
jp
fisubrl
mov
mov
ja
sub
xor
je
stc
fisubrs
lock
sti
fbld
ljmp
mov
mov
ret
cmpsl
pop
inc
jl
enter
cmpl
mov
mov
sbb
xor
and
add
xor
xor
shl
push
xlat
sahf
ljmp
in
lret
inc
pushf
add
popf
and
or
dec
mov
rcr
scas
push
lds
xor
push
fidivl
movb
test
fiadds
lea
cmp
inc
add
mov
fs
in
mov
or
mov
add
mov
xchg
cltd
shlb
inc
add
cmp
inc
je
repnz
pop
mov
push
xchg
mov
inc
sbb
mov
lea
fsubl
dec
cmpsl
gs
jle
dec
jmp
fldl
cmp
dec
shr
jg
xchg
in
and
mov
cwtl
test
stos
ljmp
jae
ljmp
and
dec
push
jnp
mov
rcrb
inc
push
jecxz
test
adc
dec
push
fdivr
insl
and
dec
and
into
cmc
sub
mov
je
xor
mov
in
ja
mov
mov
sub
mov
test
inc
insb
arpl
mov
or
or
push
out
and
xchg
mov
out
and
fdivrl
shlb
adc
dec
mov
and
or
out
sub
jecxz
mov
adc
test
push
lahf
js
pop
xchg
jl,pn
mov
mov
add
fbld
addr16
sti
sti
inc
ljmp
mov
loopne
fyl2xp1
lock
jl
sti
mov
je
push
data16
ja
cld
es
inc
jmp
inc
push
gs
leave
bound
mov
loopne
lcall
imul
hlt
xor
cmp
cmpsl
lcall
arpl
cs
or
fsubl
sub
cmp
xchg
in
pop
outsb
imul
sub
xor
or
outsb
jmp
out
cmpsb
test
ljmp
lods
mov
adc
cmpsb
sub
roll
mov
ljmp
mov
cli
stc
mov
bound
or
xchg
loope
fwait
fwait
cwtl
push
je
xchg
cmp
adc
xlat
ja
sbb
jl
pop
cmp
dec
lods
es
mov
pop
dec
scas
jmp
cwtl
ja
iret
clc
push
jge
cmpsl
mov
sbb
movsl
sbb
outsb
push
jae
sbb
push
sbb
cwtl
enter
dec
fidivrl
pusha
sbb
ret
jb
inc
dec
jae
push
fdivs
lahf
or
ret
adc
mov
int
insl
pop
cld
fidivs
xor
lods
and
test
dec
stc
dec
dec
jnp
jge
sub
cmpsl
cld
lcall
lcall
mov
mov
xchg
sarl
push
push
push
int3
mov
inc
out
fildl
xchg
sbb
lds
ds
jl
popf
insl
sub
dec
mov
jno
mov
inc
cmpsl
mov
sbb
divl
enter
push
loope
jo
or
cld
js
aam
fnsave
notb
sti
into
mov
push
test
add
push
pop
jmp
push
jp
pmullw
cld
cmp
popa
adc
add
test
fiadds
xlat
xchg
sbb
shl
ds
push
icebp
inc
sbb
jbe
icebp
jne
mov
pop
dec
dec
into
pop
mov
repnz
mov
outsb
ret
xor
into
xchg
add
add
jbe
ret
mov
mov
cmp
cmp
loop
mov
aam
hlt
das
sbb
in
mov
or
fidivrs
sub
pop
xchg
jb
rcr
jecxz
dec
and
loop
addl
dec
push
mov
sub
xor
es
or
or
mov
pop
mov
decl
int
inc
push
int
in
bound
pop
rclb
mov
fnsave
xor
xor
jl
fucomp
rcrl
xor
xchg
je
sub
scas
pop
daa
push
adc
cltd
jp
stos
outsl
cs
sahf
push
adc
pop
and
inc
clc
inc
dec
dec
push
mov
mulb
bswap
cmp
mov
into
push
and
lcall
int3
outsb
clc
insb
cmp
enter
xchg
jp
pop
incl
aam
mov
ss
cmp
cmp
lret
hlt
push
sub
jae
lea
fisttps
pop
fldcw
mov
lods
mov
cld
jge
dec
fcmovne
sub
xchg
sti
into
mov
adc
outsb
in
aam
int3
sti
repnz
lock
or
pop
cmc
sarb
fwait
ja
sarl
ds
xchg
sbbb
stos
icebp
pusha
movsb
fistps
out
adc
hlt
mov
jp
in
push
adc
adc
fnstenv
repnz
mov
fidivrs
scas
inc
dec
jno
xlat
in
into
pop
xor
push
pop
xor
push
mov
mov
inc
pop
out
sbb
aam
call
pop
mov
ror
fisubs
repnz
pop
mov
cwtl
dec
lods
mov
mov
jno
jp
adc
add
call
mov
mov
rcrl
std
mov
jo
rcrl
int
mov
sbb
inc
stos
or
fst
adc
pop
jmp
ret
mov
jecxz
mov
nop
inc
ljmp
or
jnp
adc
cmp
iret
cmp
fiaddl
mov
dec
lahf
mov
pop
test
icebp
sub
or
sub
mov
adc
in
jg
or
repnz
fstp
add
xorl
cmpsb
scas
pop
repz
add
int3
out
js
imul
das
mov
and
fcmovne
sub
mov
movsl
adc
mov
pop
mov
sbb
loopne
mov
imul
aam
sbb
ss
jb
sub
inc
xor
data16
test
dec
leave
jmp
xchg
iret
fwait
xor
icebp
cltd
jne
in
scas
dec
dec
je
jnp
popf
std
sub
rcrb
jne
xchg
xor
repz
mov
pop
ja
js
push
mov
lret
shr
test
stos
inc
inc
sbb
jae
add
fbld
and
adc
imul
mov
push
jnp
in
jns
clc
jbe
sbb
mov
xchg
xchg
jp
push
pop
jno
mov
ds
cmp
sub
bound
into
cmc
das
in
into
jno
iret
cmc
or
mov
cli
pop
mov
lods
dec
aad
pop
lods
outsb
mov
mov
imul
scas
mov
add
enter
xor
fsubrl
outsl
lds
sbb
fsubs
dec
inc
or
mov
push
pop
push
mov
xlat
pop
pop
dec
inc
xor
scas
push
out
ss
cmp
stc
popf
jae
add
push
out
mov
aad
xchg
jae
mov
push
push
xor
sbb
xor
insl
jge
xchg
jge
test
adc
pop
cmc
lahf
mov
test
lods
xor
push
cld
jnp
push
pop
movl
lret
cmp
mov
inc
jnp
cmp
mov
idivb
and
mov
lret
sub
sub
jbe
mov
mov
lret
mov
push
into
push
fldenv
mov
push
lcall
mov
adc
imul
in
jecxz
cmp
mov
enter
xor
xor
or
pop
cmp
lods
lcall
mov
cli
fwait
repnz
sub
das
out
es
mov
mov
add
push
add
testl
push
jae
std
add
imul
roll
add
push
mov
adc
pop
or
pop
cmc
adc
push
mov
inc
xchg
push
fldenv
jg
aad
adc
outsl
dec
sbb
jle
or
or
jae
data16
in
mov
gs
mov
xlat
cs
clc
repz
out
jb
sahf
repnz
mov
addr16
addr16
outsl
or
lea
push
xor
hlt
je
fdivl
stos
cwtl
mov
push
shlb
jg
mov
mov
imul
out
dec
clc
jecxz
push
add
lret
mov
ret
fwait
push
cltd
cmp
popa
push
mov
imul
xchg
std
mov
aam
cmpb
adc
mov
addr16
mov
mov
or
sbb
mov
loopne
mov
mov
xchg
mov
stc
adc
adc
mov
jns
popf
pushf
cmpsl
addl
push
imul
xrelease
js
lcall
addr16
out
in
fsubl
js
jo
das
lods
mov
mov
mov
nop
xor
inc
dec
gs
sub
pop
hlt
or
jb
mov
int3
cmp
ljmpw
repnz
aam
stc
mov
cmp
push
cmpsb
cmp
xor
loop
cmpsl
inc
pop
sub
inc
mov
ja
jg
inc
frstor
cmp
subl
jp
les
divl
insl
add
fstl
pop
adc
nop
mov
jle
sbb
jne
adc
pop
scas
xchg
les
shrb
or
mov
movsb
jbe
xchg
jmp
add
cld
dec
sbb
test
movsl
and
jp
out
repnz
ss
xorl
sbb
popf
inc
pop
pop
leave
cs
test
lock
out
in
and
sbb
mov
cmpsb
push
ret
or
adc
lods
fsubrl
scas
xchg
adc
xor
enter
jo
jbe
enter
lds
lods
fisubrl
shll
push
or
repnz
xchg
stos
or
push
inc
sub
mov
cmp
add
lds
inc
dec
adc
or
pop
adc
mov
dec
sahf
adc
lcall
xor
pop
negl
rorb
lret
pushf
test
dec
xor
mov
add
int
aas
test
sbb
stos
xor
add
pop
outsl
fs
xor
ljmp
jecxz
cmp
test
daa
mov
loope
push
stos
pop
sbbb
sub
adc
call
pop
cmp
repz
adcl
adc
outsb
aad
fcompl
testb
xchg
xchg
lock
mov
jns
cmc
and
nop
rorb
mov
inc
and
adc
cmp
push
lock
mul
dec
push
inc
add
mov
rcr
test
and
mov
add
cld
cmc
aas
push
adc
lcall
es
aad
mov
fstpt
dec
pushl
inc
fstl
fistpl
mov
jp
hlt
ja
or
jns
subl
xchg
jae
jmp
pop
pop
sbb
pop
insb
mov
inc
lahf
pop
pop
cs
ja
lods
clc
add
ret
call
adc
stos
jne
scas
mov
and
lds
test
loopne
pop
iret
popf
mov
lret
dec
call
das
push
pop
jmp
sbb
negb
cli
rcr
cmc
dec
sbb
lret
cmp
cmc
xor
add
movsb
mov
ljmp
stos
or
push
stc
add
test
nop
pop
xchg
shrl
push
roll
lea
out
dec
adc
pop
mov
stos
xchg
mov
pop
negl
adc
mov
mov
xlat
ds
xor
arpl
xchg
cvttps2pi
dec
mul
cltd
jns
sub
xchg
add
pop
pop
jle
push
pop
fnsave
ds
add
imul
scas
or
push
add
sub
jnp
fcomp
aas
out
dec
or
fdivrl
cmp
rcrl
ds
mov
icebp
mov
ret
clc
xchg
inc
loop
xlat
mov
lahf
pop
inc
jbe
pop
les
push
sub
fwait
pop
mov
mov
mov
outsl
xchg
loop
inc
sahf
enter
imul
ja
pop
outsl
cmpsb
aaa
ret
movl
mov
bswap
mov
jnp
mov
push
and
call
sahf
push
or
aas
pusha
sbb
ficomps
pop
dec
lret
sbb
adc
push
or
jb
loopne
or
sub
xor
data16
add
insb
lret
inc
into
out
jns
sahf
inc
lcall
int3
subl
roll
dec
cmp
ret
mov
mov
das
jge
push
inc
popa
jmp
iret
jo
stc
xchg
in
daa
push
cltd
mov
mov
jmp
mov
inc
jmp
loop
iret
and
cmpsl
jnp
xor
es
clc
mov
pop
dec
cltd
dec
fisttpll
leave
sarl
and
fcoms
sbb
dec
bound
int
or
cmp
xchg
mov
test
aas
add
sbb
push
cli
addr16
mov
inc
push
xchg
pop
cld
fcomps
fstpt
imul
inc
jle
inc
fidivrl
mov
cwtl
out
push
jg
mov
pop
out
add
clc
xor
mov
cmp
fs
pop
mov
or
fidivl
xchg
mov
jl
nop
lds
mov
outsb
mov
xor
xchg
inc
mov
xor
cmc
fldcw
mov
gs
incl
mov
daa
cmp
inc
inc
movsb
inc
cli
pop
or
jl
insb
adc
popa
inc
insl
sahf
lods
sbb
push
cmp
jb
test
jmp
mov
lret
adcl
mov
lret
movsb
popa
lret
sbb
push
adc
ljmp
pop
pop
fnstenv
mov
sti
ljmp
xchg
clc
xchg
sub
pushf
push
hlt
push
cmp
mov
mov
lret
insl
std
push
sub
or
push
ljmp
and
fs
push
adc
rcr
std
icebp
push
sbb
popa
das
dec
dec
jne
mov
movsl
popa
dec
clc
pop
mov
jmp
sti
not
cmpl
dec
sti
xor
roll
shl
lods
shlb
jle
sub
scas
pushf
cmp
and
jmp
ret
sbb
and
mov
xchg
in
jle
mov
mov
cmc
shrl
mov
xchg
jle
and
push
xor
xchg
aam
fadds
xor
jae
mov
push
mov
xchg
scas
lret
inc
mov
sti
sbb
sub
mov
mov
pop
aas
xor
sub
xchg
ror
add
lock
pop
xorb
sbb
nop
ret
sbb
jecxz
jns
int
js
repnz
dec
xchg
orl
rcrb
mov
cmpsb
je
sti
jmp
aad
mov
or
push
stc
sub
sub
test
sub
xor
pop
ds
cmc
push
sub
mov
jmp
aaa
out
mov
popf
call
cmp
adc
das
mov
cmp
jg
inc
push
add
dec
sbb
nop
pop
fdivr
push
rcrl
jne
sbb
inc
mov
xchg
push
pushf
lret
sub
push
mov
and
stos
add
testb
mov
or
and
in
int
dec
repnz
mov
aam
lret
es
fnstenv
mov
push
adc
xchg
push
lods
dec
popa
add
loopne
imulb
jecxz
hlt
imul
dec
jmp
dec
inc
sbb
div
or
sub
repnz
adc
test
out
jne
cmpsl
mov
fadds
sub
outsl
pop
pop
pusha
sub
mov
movsb
aam
sbb
pusha
sub
fstpt
scas
outsb
rclb
insb
xorb
lahf
add
dec
cmp
cld
shlb
inc
hlt
mov
das
stos
jp
aam
xchg
and
fwait
stc
inc
dec
outsl
pop
fcmovu
xlat
loope
dec
mov
sbb
decl
in
or
and
mov
push
jp
sarb
shr
jae
les
inc
cmp
and
data16
xlat
sbbl
in
ds
in
adc
test
cmp
addb
out
test
jbe
insl
xchg
lret
fldl
add
add
rorl
mov
rcrb
lret
dec
lea
insb
cli
dec
push
or
dec
xchg
pop
repz
mov
xlat
pop
and
cwtl
lods
and
cs
mov
cld
insl
pusha
divb
pop
out
pop
leave
cmp
ja
nop
scas
and
sbb
test
sbb
inc
dec
icebp
fmul
and
lret
mov
pop
pusha
dec
aad
dec
ret
pop
jp
xor
loop
or
lahf
xchg
jne
mov
dec
pop
xor
mov
mov
hlt
jnp
ss
and
adc
xchg
dec
loop
push
push
push
adc
pop
mov
dec
fwait
je
push
and
out
fiadds
stc
cmp
repnz
mov
dec
mov
adc
out
mov
in
and
pop
movsl
aaa
stos
mov
sbb
push
mov
push
cwtl
stos
outsb
cwtl
ret
incb
xchg
fwait
addl
jmp
add
mov
in
lea
adc
sbb
push
mov
inc
arpl
fidivrl
popf
fildl
mov
or
ljmp
adc
arpl
adc
jbe
or
insl
fisubl
stos
sbb
mov
outsb
ljmp
nop
data16
mov
add
daa
lods
in
mov
into
push
cwtl
and
xlat
pop
cmp
xor
jno
mov
in
je
pop
xor
shll
mov
arpl
ret
jae
aas
fwait
and
rcl
pop
adc
add
sti
lcall
pop
fsubr
jmp
or
arpl
sbb
adc
imul
test
lahf
sbb
xchg
sub
push
jecxz
pop
outsb
xchg
dec
xor
pop
cmp
data16
lret
fwait
sarl
mov
lcall
cs
add
andb
addr16
cmp
arpl
mov
out
fbstp
mov
test
sbb
mov
sbb
clc
test
pushf
ds
mov
dec
adc
sbb
loopne
insl
fadd
jne
jno
dec
hlt
icebp
mov
cmc
or
adc
fwait
ret
push
lods
test
das
jo
lods
dec
bound
jo
add
lret
pop
jle
pushw
dec
lea
jmp
enter
fmulp
push
test
rorl
aaa
aaa
xor
adc
rcll
jle
leave
add
jg
scas
bnd
das
adc
sub
movl
xor
icebp
call
test
xchg
das
push
mov
flds
addb
jbe
jbe
pop
sub
shll
xchg
xor
out
dec
mov
xchg
pop
pop
jmp
xchg
cmpsb
fimull
aad
adc
dec
lods
clc
mov
mov
inc
pop
negl
frstor
push
mov
loop
adc
lahf
sbb
fstpl
dec
jecxz
jecxz
mov
fs
mov
or
sbb
repnz
clc
ror
xchg
jecxz,pn
or
push
outsl
jle
testl
aam
and
lods
mov
cltd
cmp
pop
cld
lods
sbb
dec
sub
in
add
leave
pop
xor
ret
std
pop
shl
cmp
mov
sub
decl
das
inc
test
pop
sub
xor
fs
sarl
mov
outsl
mov
loope
mov
xchg
addb
pop
push
push
dec
inc
outsb
xor
outsb
jbe
pushf
or
mov
mov
and
jne,pt
and
cmp
adcb
bound
sub
in
adc
fucomip
push
sub
push
pop
mov
enter
adc
dec
cli
mov
xchg
clc
or
fs
insb
bound
aaa
shll
loop
sub
push
fidivs
movsl
push
adc
ljmp
lretw
int
popa
add
mov
lods
shl
jnp
imul
iret
data16
jbe
out
pusha
cmp
ljmp
lods
and
dec
lods
inc
pop
in
xchg
sbb
xchg
repnz
idivl
test
test
dec
outsl
mov
jmp
push
jns
hlt
jae
das
cmp
push
sbb
and
xor
push
cs
lcall
sub
jbe
aam
std
out
and
push
inc
or
aam
or
xchg
xor
adc
adc
cmc
xor
iret
cmpsb
or
cmp
sub
adc
push
mov
jae
cmp
push
xchg
and
xor
push
fsubrs
cmp
shrl
jno
jp
or
std
sub
in
dec
int
adc
fs
bound
subb
cmpl
push
daa
inc
jmp
xchg
mov
test
int
shlb
lret
fdivrs
mov
pop
or
fsubl
dec
popf
or
push
shll
stos
in
jecxz
mov
xchg
jp
jb
adc
cmp
pusha
ljmp
ds
cmc
jo
sub
jle
sub
jbe
xor
push
lret
xchg
mov
popf
lods
rol
mov
jnp
cmp
jl
jp
iret
adc
mov
mov
loope
test
stos
cmp
rolb
add
mov
stos
and
stc
pop
mov
add
insl
shr
daa
rcl
inc
out
mov
clc
push
lock
ret
imulb
lret
int3
xchg
mov
loop
lds
lea
cmp
sub
push
inc
or
jl
and
dec
out
ljmp
gs
lret
call
popa
inc
sub
fisubl
rclb
aaa
stos
rcll
dec
int3
adc
pop
iret
sbb
mov
mov
mov
xchg
std
jo
lret
add
movsl
mov
outsl
testl
and
imul
mov
inc
mov
lret
mov
or
pop
cmc
push
inc
jo
mov
sti
cli
in
lahf
xor
inc
mov
aaa
sbb
xchg
xchg
sub
push
add
or
push
call
rorl
hlt
add
add
insl
jmp
inc
addr16
lods
add
inc
sub
or
push
push
mov
lods
ss
sbb
outsb
sti
out
dec
mov
push
adc
ret
movsb
or
sbb
lcall
sub
sbb
push
jnp
popa
mov
bound
push
sbb
fistl
jae
mov
inc
ss
nop
mov
pop
loope
outsb
ja
in
les
mov
jb
mov
xor
dec
mov
pop
mov
xor
dec
pop
mov
adc
out
enter
add
jne
test
inc
push
mov
dec
stc
sub
jecxz
mov
aam
jne
mov
je
call
lcall
jg
inc
inc
je
fldt
xor
je
adc
mov
test
cld
test
dec
iret
inc
pushf
mov
cmp
cmp
jp
xchg
xchg
into
test
andl
push
pop
and
cmpsb
ror
jo
fsubr
pop
adc
cmc
xchg
jne
dec
cmp
sti
xchg
dec
das
fs
loopne
movsb
loope
add
sbb
pop
xlat
daa
cmpsb
sub
pop
xor
xor
sub
xor
les
je
sarl
sub
mov
filds
rcr
sub
jae
push
and
insb
cli
cmc
sbb
or
das
stos
jne
into
test
les
dec
mov
pop
or
xchg
inc
push
sub
jp
cmp
pop
adc
cmp
jo
sbb
iret
mov
or
xor
push
ds
fists
out
xlat
mov
pop
and
cmp
cli
addl
and
rcrb
mov
imul
inc
sahf
sub
popl
jmp
rcll
fld
inc
insl
jae
scas
stos
lret
test
cmp
fwait
mov
sarl
ret
jmp
jg
push
adc
icebp
sbb
movsl
stos
xor
inc
add
ds
dec
pop
add
add
push
jnp
repz
cmp
lds
fsubl
jg
jns
xor
xorl
mov
lods
inc
or
loopne
shlb
andl
jp
and
adc
imul
popa
dec
sub
sbb
test
mov
repnz
shll
cmp
push
xlat
test
add
mov
mov
popf
push
ljmp
jo
popf
mov
xchg
xlat
fwait
xchg
bound
mov
push
insb
cmpl
fwait
ret
lock
cmp
cli
adc
mov
add
mov
fnstenv
pusha
cmc
or
fs
pusha
jb
scas
adcb
push
xor
push
push
aad
and
sbb
aaa
fimuls
and
xchg
push
ret
leave
out
pusha
add
mov
xchg
iret
mov
sub
aam
jecxz
xor
xlat
movsl
shr
fs
ret
adc
push
push
aas
arpl
subl
inc
int
jns
cmpsb
daa
out
pop
stos
jno
ljmp
add
cld
cmp
jge
push
jo
adc
adc
xchg
int
and
addl
mov
xor
xlat
sbb
cwtl
or
xor
ret
push
sti
xlat
jae
pop
mov
mov
popf
aas
sahf
and
popa
xor
mov
mov
jmp
pcmpeqw
pop
push
test
and
adc
cmp
negl
cmp
adc
insl
cmpsb
ret
pushl
pop
sahf
mov
pop
dec
stos
movsb
mov
sbb
dec
aas
cli
dec
xor
cmp
inc
aad
push
or
fdivrs
pop
aaa
push
dec
stos
mov
bound
mov
stos
mov
xchg
out
or
pop
or
aad
es
and
push
sub
out
dec
jmp
adc
loop
xor
adc
or
xchg
adc
push
sub
loopne
in
adc
jns
stc
test
mov
insb
pop
je
sti
jo
sub
push
push
add
loop
push
push
push
inc
lock
bound
stos
iret
pop
outsb
sub
dec
mov
ret
xor
jl
cmp
jmp
dec
lods
in
icebp
push
pop
sub
call
mov
add
out
pop
sub
ss
or
xchg
xor
sub
sbb
push
or
clc
aaa
mov
or
inc
int3
push
fnstsw
jge
bound
xor
out
test
pop
sub
mov
add
xor
push
dec
insl
jne
push
cs
adc
out
mov
push
dec
jecxz
bound
xchg
cmp
pop
subl
outsl
xchg
sub
popa
imul
jno
iret
mov
ss
jnp
dec
fistps
mov
js
into
in
and
jae
adc
pop
inc
adc
cmp
daa
lcall
sarb
sbb
push
add
in
inc
mov
fisubs
jno
out
js
pushf
pop
dec
test
mov
mov
aam
mov
pop
rcrb
and
pop
jp
xchg
mov
inc
xchg
cmp
xor
and
cmp
test
cmpsb
stos
push
push
cmp
inc
ljmp
shrb
xchg
sar
mov
xor
cs
sub
lcall
jae
xchg
inc
and
fs
loop
movsl
mov
mov
push
or
insb
ficompl
inc
es
loope
jl
ret
push
mov
std
mov
push
cmpl
scas
inc
movsb
xor
in
xchg
ja
iret
or
daa
insb
pusha
xor
repz
pop
test
outsl
pushf
mov
in
jb
mov
push
fwait
daa
pop
shll
lcall
pop
cwtl
scas
popa
sub
aaa
pop
mov
pop
pop
and
add
ret
ffree
push
test
cli
and
scas
xchg
mov
lcall
lea
and
les
xchg
mov
aad
dec
andb
pushf
aam
or
push
sub
push
stc
shll
pushf
xchg
xchg
mov
mov
test
sub
jns
and
jbe
and
adc
pop
nop
inc
imul
shrl
xor
pop
stos
test
hlt
cmp
mov
sbb
or
std
pop
push
xchg
cmp
ds
lret
push
mov
pop
in
sbb
push
in
or
xchg
enter
mov
dec
iret
insb
adc
pop
inc
cmc
sub
rcrb
cs
sub
and
test
push
fidivs
jp
movsb
xor
ljmp
cmpsb
out
xor
and
mov
fisttps
test
pusha
pop
sti
ror
in
push
xor
jae
xchg
ss
outsl
sbb
pushf
mov
xor
lea
imul
xchg
jb
out
ljmp
nop
out
aas
cltd
cld
int
jne
idivb
rolb
pop
push
into
faddl
jo
and
jb
fisttpl
push
std
stos
pop
pop
adc
scas
mov
sahf
or
stc
xchg
test
jmp
mov
int3
into
xchg
sub
mov
hlt
mov
mov
insl
dec
outsl
imul
cmp
push
mov
adc
cs
lret
sub
add
pop
mov
arpl
dec
xchg
int3
add
dec
sbb
cmp
fcoms
pushf
fs
mov
sub
popf
sbb
xor
jns
adc
filds
or
rcrl
pop
in
out
sbb
lods
jne
or
leave
mov
sbb
stos
and
push
dec
shrl
jmp
mov
cli
mov
les
shrl
mov
add
mov
lods
mov
mov
sub
js
pop
jp
push
push
outsb
pop
push
cmp
mov
out
adc
mov
mov
pop
or
repnz
or
fidivrl
mov
sbb
cld
sbb
stos
xchg
sti
mov
sbb
shrb
mov
sbb
stc
in
inc
popa
repz
jbe
jecxz
cmp
lret
movsl
mov
mov
xchg
adc
lods
stos
fcmovnu
and
out
pusha
push
xchg
sbb
xor
and
sub
jmp
movl
dec
xchg
imul
and
pop
addr16
inc
loope
pop
in
mov
lea
sub
mov
mov
xchg
loopne
test
dec
bound
cmpsb
push
dec
cmp
cmpsb
mov
test
out
pop
push
mov
mov
jae
fsubl
test
pop
je
xchg
inc
xchg
sub
mov
ficoml
sbb
or
aam
ss
cs
ret
clc
push
push
push
cld
xlat
rorb
adc
or
lret
test
or
mov
dec
lahf
lcall
mov
pop
push
popa
add
xor
nop
sti
rcll
lahf
add
jle
cmp
cmp
aad
mov
scas
loop
and
stos
cmp
push
adc
test
xor
into
cwtl
cmc
nop
fs
add
lods
insl
xlat
mov
sub
pop
mov
mov
pop
adc
scas
imul
mov
cltd
fs
dec
mov
add
cmp
xchg
mov
repnz
lcall
xchg
sbb
lds
and
loopne
sbb
mov
inc
arpl
daa
lret
bound
test
daa
mov
jnp
aaa
cltd
sbb
leave
sahf
sub
xchg
xchg
mov
dec
xchg
daa
fisubs
xor
imul
or
cmpb
popf
xchg
cmp
jecxz
addr16
mov
stos
repz
sub
or
in
nop
shll
mov
jle
pop
sbb
and
inc
fidivrl
sub
das
push
rol
xor
pop
cmp
sub
push
sub
push
mov
xor
cs
dec
daa
sub
pop
icebp
dec
dec
and
imul
mov
cmp
sub
sti
aas
jo
mov
or
dec
xor
adc
mov
jae
adc
loop
push
jb
push
xor
mov
outsb
push
inc
shrb
test
add
fcmovu
xchg
xor
insb
fsubr
imul
cmp
push
sbb
popf
mov
aaa
pop
jle
out
test
mov
and
scas
in
dec
lret
xor
popf
push
inc
jae
sub
in
mov
inc
cmp
mov
mov
inc
inc
dec
fsub
aad
jle
or
push
pushf
in
addr16
xchg
hlt
test
cli
or
pop
sub
pushf
dec
ss
pop
idivb
mov
xor
iret
andl
dec
add
mov
or
shrb
xchg
sbb
push
int
jl
xchg
sub
aas
adc
and
cmpsl
xor
out
ds
cmpsb
xlat
lret
and
add
jnp
mov
mov
xor
jge
out
cmp
cmp
repz
jbe
inc
icebp
fnstcw
fstpl
dec
shlb
jb
hlt
push
xor
out
and
jae
dec
mov
iret
lcall
insb
mull
icebp
outsl
adc
jecxz
outsb
sahf
jp
sbb
or
mov
pop
push
cld
mov
mov
out
and
lea
pop
add
das
fistpl
jne
loopne
mov
sub
mov
rcll
rcrb
add
shl
aaa
pop
or
scas
sbb
jp
pop
or
jb
cmc
push
repz
jle
pop
jbe
adc
xor
loopne
cmp
adc
jno
mov
stos
xchg
inc
out
dec
cmp
mov
lret
mull
push
lock
cmp
pop
repnz
mov
sub
cld
xchg
jnp
push
pop
mov
mov
fldenv
sbb
cmpsb
adc
pop
js
rorb
fisttpl
or
push
adc
cmp
repnz
movsb
adc
sbb
outsb
loopne
xchg
repnz
das
popf
adc
sub
inc
pop
xor
sub
mov
lea
idivb
in
jg
xchg
lahf
daa
mov
andl
add
nop
sub
jle
scas
out
adc
sti
push
mov
xchg
cmp
outsb
sbb
sbb
pop
lret
pop
push
cmp
add
dec
and
cmpsl
loope
jecxz
lcall
int3
pop
lods
jbe
stos
jmp
std
push
and
jl
cli
jbe
push
add
fbld
jl
sbb
iret
mov
and
into
sbb
scas
rcr
mov
test
inc
pop
sbb
push
and
jmp
loop
aam
adc
jge
xor
push
cmp
cmp
mov
or
mov
iret
push
stos
pop
push
push
and
cltd
mov
push
add
dec
lcall
mov
mov
or
mov
sbb
pop
pushf
test
sub
in
popa
and
mov
jns
pop
cmp
add
test
mov
stc
cmc
sbb
std
push
gs
push
inc
ljmp
cmpsb
lret
mov
pop
xor
sti
adc
inc
dec
shrb
mov
push
mov
xchg
xor
ret
push
push
aam
cmc
or
in
mov
mov
xlat
push
sub
subb
and
mov
dec
mov
std
jp
arpl
sub
sub
jp
mov
and
mov
jns,pn
adc
inc
adc
cmp
push
roll
pusha
int
or
data16
push
scas
insl
mov
dec
loope
dec
add
in
push
cmp
mov
jge
clc
pop
mov
sub
pushf
popf
sbb
cmc
sub
dec
nop
enter
das
je
cmp
push
iret
aad
lcall
je
xor
ljmp
jmp
mov
out
dec
imul
ret
std
std
push
test
dec
lret
idivb
mov
add
mov
sahf
adc
xlat
adcb
mov
pop
aas
lds
aam
mov
in
xchg
fidivl
pushf
xchg
mov
mov
sbb
mov
out
sub
inc
pop
push
insl
cmc
mov
mov
subb
cltd
dec
andl
xor
sbb
xor
mov
mov
mov
inc
arpl
inc
cmp
fdivrp
jne
or
jnp
iret
aas
cmp
roll
xlat
cmp
add
fistpll
mov
mov
mov
daa
mov
mov
lods
into
iret
cmc
and
sub
push
out
lods
scas
or
mov
pop
test
adcl
rorl
data16
xchg
jnp
dec
scas
in
pop
and
xchg
lcall
iret
xchg
dec
push
rolb
jl
mov
lret
lahf
iret
xchg
xchg
loopne
cld
cli
pusha
call
jns
hlt
stos
cmp
cld
leave
mov
cli
stos
jae
or
scas
mov
je
aas
enter
outsl
mov
cmp
lret
int3
mov
xchg
pop
xor
push
addr16
pop
out
lahf
pop
fs
push
jp
test
dec
or
subl
cmp
lods
movsb
adc
sbb
cld
and
pop
and
mov
in
xchg
insl
outsl
xor
lret
jo
mov
xor
dec
pop
jnp
ss
js
lods
add
push
lods
icebp
repz
mov
iret
shlb
lcall
outsb
les
pop
xchg
pop
xchg
push
inc
and
test
adc
inc
and
outsb
les
pop
or
sub
fmull
or
xlat
lds
popa
inc
aad
push
mov
mov
stc
sbb
ds
lods
fcompl
cmpb
sub
xor
or
jbe
jg
std
bound
xor
loopne
fistpl
mov
mov
mov
mov
fistpll
push
and
xor
andl
daa
std
cs
add
lret
mov
out
and
xchg
ret
sub
push
push
cmpsl
adc
xchg
scas
pusha
xlat
jle
outsw
push
lods
inc
sbb
dec
loopne
pop
xor
inc
mov
out
mov
sub
add
mov
and
scas
imul
cmp
xor
test
push
push
xchg
xchg
cmc
inc
sbb
lds
insb
cwtl
mov
pop
xchg
mov
neg
out
mov
or
xchg
mov
int3
push
adc
andl
pop
mov
rorb
pop
mov
scas
inc
mov
mov
and
inc
and
addr16
push
inc
xchg
cltd
xchg
adc
and
sbb
movsl
xchg
cmp
lods
cmp
xchg
shlb
in
dec
lret
or
es
sarb
cmp
mov
mov
out
popf
xlat
sbb
pushf
sbb
add
test
fnsaves
gs
mov
lret
out
loope
dec
daa
dec
sbb
add
dec
push
addr16
test
cltd
into
adcb
cmp
cmp
stos
sbb
daa
cli
and
cmpsl
mov
mov
fucomip
and
inc
inc
jb
leave
inc
cmp
enter
mov
sbb
cmpsb
inc
cmp
push
gs
jns
clc
movsb
adc
xor
popa
fwait
jp
mov
mov
sub
gs
or
aam
mov
int3
aaa
and
pop
movsl
mov
or
lods
fcmovu
mov
out
loopne
sti
jmp
or
repnz
add
xchg
inc
and
fstps
cmpsb
jecxz
jo
sahf
inc
mov
cmpsb
mov
or
imul
xchg
ja
incb
adc
push
mov
xchg
imul
pop
push
cmpl
sbb
add
pushf
stc
push
push
dec
or
or
bound
mov
out
and
dec
xchg
push
and
loope
push
rcrb
in
lock
sbb
fucom
fcomip
icebp
xchg
imul
dec
ret
imul
mov
xchg
push
pop
popa
cmpsb
mov
push
jb
add
push
test
cltd
clc
dec
cmpsb
in
jmp
cmp
addr16
out
imul
rcl
push
nop
push
pop
add
cltd
out
cmpsl
lods
mov
arpl
fisubl
testb
pop
push
dec
and
mov
sbb
pop
or
xor
scas
inc
int
adc
cmp
inc
pop
xchg
mov
into
je
adc
shrl
lcall
or
loope
iret
xor
inc
loopne
xor
xor
jns
popl
mov
psubd
stos
pushf
test
mov
test
mov
sbb
lret
mov
out
stc
cmp
jno
or
jae
in
clc
mov
stos
mov
pushf
sysexit
jl
std
ret
cmp
mov
addb
inc
fwait
lahf
aam
sbb
adc
ljmp
dec
jne
xor
mov
lea
test
cmp
inc
jmp
enter
mov
fsubr
imul
mov
stc
lret
lahf
push
inc
dec
or
fcoml
mov
jmp
dec
jecxz
lea
sub
xchg
push
lret
inc
mov
test
test
xchg
subps
test
cmc
sub
bound
push
sbb
inc
adcl
jo
mov
clc
mov
and
sbb
sub
in
xchg
add
or
fildll
fcoms
je
xlat
dec
jg
fdivs
push
int
xor
mov
and
mov
pop
arpl
adc
data16
jb
adc
jne
fdivl
sbb
add
lcall
out
enter
dec
aam
movsl
lds
mov
call
loopne
iret
shlb
dec
and
fstpl
push
addr16
sub
or
inc
pop
sub
adc
mov
aam
daa
test
jecxz
pop
push
cmp
push
jbe
xlat
les
mov
mov
xchg
ret
sub
or
out
pop
sahf
jge
inc
les
jge
loope
add
mov
push
mov
sbb
outsl
or
mov
add
xchg
and
int
ljmp
cmpsb
adc
fiadds
or
aam
and
in
cwtl
cli
frstor
lcall
outsl
mov
repz
ja
pop
rclb
shr
sub
les
push
xchg
pop
movsl
fs
mov
xchg
int
add
jg
fiadds
cmp
mov
lods
lahf
add
popa
xor
add
lret
and
pop
and
insl
mov
dec
dec
mov
pop
testl
mov
insb
out
push
mov
jle
int
dec
jle
mov
or
lret
cmpsb
jb
scas
notb
mov
jmp
xlat
int
flds
aad
out
cmp
call
pop
insl
xchg
ja
mov
adc
std
jno
aas
jle
les
xchg
add
adc
addr16
orb
mov
jl
or
in
imul
sub
and
sahf
pop
ss
movsl
push
cmp
sub
ficoms
stos
das
aad
push
and
mov
imul
das
xor
cmc
icebp
mov
xor
sub
imul
cwtl
idivl
aaa
lods
in
fstl
sbb
adc
into
mov
mov
mov
jmp
mov
imul
and
push
aaa
add
insb
lahf
js
das
push
imul
movsb
inc
jae
push
mov
cli
shrb
and
push
sbb
dec
jp
xorb
call
xchg
lods
cwtl
xor
outsl
xchg
push
xchg
fisttps
or
xchg
shll
mov
es
mov
push
out
clc
xchg
ljmp
push
jle
adc
cmpsl
and
dec
sti
add
or
sbb
cmp
jg
fsubrs
daa
xchg
or
cld
mov
pop
dec
rorb
scas
jge
mov
lret
call
faddl
mov
pop
inc
jbe
mov
mov
jns
popa
data16
add
xchg
or
and
jb
fincstp
leave
inc
adc
sbb
cmp
push
mov
pop
inc
jmp
fsubr
shl
sbb
cmc
ja
cli
das
xchg
xchg
inc
fadds
or
add
outsl
jo
scas
loopne
test
int3
xor
pop
xor
add
lea
dec
mov
sub
xor
clc
adc
xor
jae
fsubs
xor
xchg
es
jb
cmp
sbb
xchg
add
pop
and
insl
xchg
idivl
scas
call
mov
loop
and
ret
jmp
popa
je
sub
jecxz
dec
mov
stos
imul
lods
movsb
xchg
pop
dec
mov
lods
and
scas
mov
ret
lea
cmp
xchg
pop
xchg
aas
mov
pop
lret
and
xor
xor
sbbb
jbe
lretw
addl
adc
and
jns
popf
arpl
insl
xchg
mov
jge
dec
leave
icebp
cmp
sbb
pushf
mov
cmpl
mov
aam
mov
adc
push
jecxz
std
jno
cltd
mull
inc
xchg
shlb
or
sar
cmpl
pushl
jne
cwtl
movsb
icebp
loope
and
pop
jg
mov
pop
out
jbe
sarl
insl
sub
fsubs
jl
leave
dec
pop
add
xor
mov
jmp
ret
pushf
loope
pop
leave
in
ljmp
pusha
xor
insb
and
lret
js
dec
dec
add
out
push
mov
std
sarb
mov
mov
dec
push
inc
mov
mov
sbb
xchg
cmp
mov
xlat
sbb
orb
push
pop
pop
in
rorb
ljmp
mov
insl
sub
ret
movsb
cmp
ljmp
nop
aad
cli
pop
filds
adc
aam
bound
inc
orl
and
sub
mov
iret
cmp
pop
cmp
lock
testl
imul
enter
repnz
dec
or
add
es
ja
loopne
xor
jo
cmp
cli
test
std
jmp
mov
cld
push
into
roll
dec
push
inc
inc
leave
scas
ret
jmp
mov
xchg
inc
mov
test
lret
pop
mov
ja
xchg
xchg
gs
aas
fcmovb
xorl
mov
dec
xchg
inc
cmp
popf
jno
add
or
mov
cmp
inc
push
addr16
dec
imul
xchg
pusha
mov
pop
test
pop
dec
and
add
xor
dec
gs
test
pop
dec
test
mov
push
sbb
aad
rclb
jbe
stos
test
jmp
inc
mov
and
sbb
lods
aaa
xor
test
xchg
fists
inc
xchg
jl
pop
rclb
in
pop
inc
xchg
push
outsl
push
addb
popf
and
sub
out
stos
cwtl
loop
cs
daa
cmp
mov
daa
icebp
sbb
mov
or
jnp
mov
mov
pop
roll
testb
pop
pop
cmp
cmpsl
bound
push
in
mov
test
inc
sub
inc
leave
sbb
inc
inc
clc
cmp
mov
js
xor
fdivr
lods
stos
push
shlb
data16
rcrl
movsl
into
pop
sahf
sti
pushf
loope
test
pop
lahf
js
push
push
sti
cli
mov
or
shrb
cwtl
dec
int3
std
xor
and
mov
icebp
repnz
ss
dec
inc
push
push
and
jo
jns
dec
inc
push
jo
pop
push
push
push
adc
pop
cmp
rorb
loopne
and
rcrl
or
fwait
clc
adc
xor
jb
data16
add
cmp
leave
int
les
daa
aaa
cltd
adc
push
pusha
pop
in
cmp
xor
lret
xchg
cli
pop
or
es
cld
inc
push
in
ret
mov
push
push
fcoms
out
push
js
cli
jg
adc
xlat
cmp
out
outsl
imul
pop
sub
jle
loope
dec
test
imul
aam
jne
xchg
icebp
mov
and
jo
frstor
movsb
maxps
rolb
fwait
pop
jno
out
iret
jno
mov
cmp
fistpl
sahf
push
enter
arpl
divb
or
test
mov
mov
mov
and
push
nop
xor
mov
stos
mov
shrb
adc
movsl
push
pushf
lock
pop
and
push
jne
sub
rclb
mov
mull
lds
and
inc
repnz
jbe
mov
xchg
mov
sbb
jne
adc
ret
ds
sahf
add
int3
pop
or
jecxz
into
mov
and
sti
push
push
fcmove
lahf
into
xor
pop
cmpsl
lods
xor
scas
ljmp
ja
mov
incb
or
or
enter
inc
ljmp
test
dec
adc
add
sbb
pop
ds
and
jg
inc
dec
movsl
lea
dec
cmc
jno
into
popa
cmp
adc
jmp
divl
mov
into
pop
int
lahf
insl
inc
adc
jno
test
inc
and
iret
repz
pop
sbb
push
data16
lods
adc
scas
das
xchg
mov
les
dec
mov
daa
enter
aam
xor
xchg
jp
popa
xor
push
dec
fwait
dec
movsl
inc
adc
inc
or
cli
sub
pop
push
inc
sbb
push
mov
loopne
lea
shll
insb
sub
adc
xchg
jmp
push
cmpsl
sub
cltd
inc
idivb
push
pop
aad
fistl
lock
pop
mov
jb
pushf
cmp
jg
pop
push
pusha
pop
jge
movsb
lods
push
cli
jg
fidivrs
cwtl
sbb
mov
fldcw
or
cmp
and
pop
push
push
jl
xchg
pop
cmp
loope
sbb
push
cmpb
jl
mov
cmp
push
stc
pop
lods
push
stos
mov
lcall
xor
push
insb
xor
pop
push
mov
aaa
dec
in
insl
into
adc
insb
pusha
inc
lahf
pushf
jno
xor
add
cmp
popf
mov
mov
in
sub
insl
xor
loopne
outsb
mov
mov
sbb
push
xlat
addr16
iret
push
or
cmp
xor
pop
mov
xlat
xor
mov
cmp
leave
std
outsb
jge
hlt
dec
lcall
stos
movsb
adc
outsb
in
push
xchg
add
or
mov
cmp
inc
mov
jb
ljmp
add
add
daa
mov
sahf
mov
dec
inc
out
mov
fcoms
xlat
adc
jnp
xchg
movsl
cli
ret
call
push
inc
push
outsb
js
nop
test
mov
popf
push
pop
jne
icebp
push
or
pop
popa
adc
xchg
add
mov
mov
and
lea
cmc
sub
jo
mov
loop
ds
mov
or
mov
popa
inc
jp
iret
sbb
push
and
or
jnp
sbb
push
into
push
push
ds
xchg
lcall
pop
push
cld
popa
out
cmpsb
add
jl
dec
pop
push
cmc
xor
addr16
and
hlt
pop
scas
adcl
push
xor
sbb
fistpll
jle
and
test
out
aaa
mov
lahf
push
mov
fiadds
aad
arpl
mov
sbb
fdivs
les
aaa
insb
shl
loopne
cmp
cmp
in
xlat
sbb
cmp
and
or
sahf
mov
xchg
xchg
pop
insl
pusha
adcl
sbb
mov
jecxz
jle
push
ret
jmp
mov
jp
pop
addr16
dec
lcall
addl
push
cmp
bts
pushf
sti
mov
xchg
mov
repnz
xor
stos
jo
xor
aad
aas
test
dec
mov
pushf
pop
jge
arpl
xor
dec
pop
cmp
aas
imul
cltd
mov
int3
mov
mov
insl
sti
xchg
jno
push
jns
out
in
xor
sahf
add
mov
jo
out
mov
mov
fcomps
scas
addb
call
add
scas
loop
or
dec
dec
jmp
dec
push
jne
movsb
xchg
outsb
jne
dec
lods
out
pop
call
mov
adc
add
popf
push
mov
or
into
subl
idivl
mov
dec
hlt
shlb
daa
sub
jmp
inc
popf
jbe
repnz
and
and
cltd
mov
fisubs
imul
popf
xor
push
xor
mov
mov
ja
inc
cs
clc
lods
hlt
clc
scas
xchg
push
jbe
and
add
or
mov
xor
movsb
mov
or
sbb
gs
clc
movl
jbe
xor
rcrl
cltd
xchg
and
jmp
in
inc
or
adc
sbb
pushf
mov
mov
jecxz
pop
push
adc
cmc
incl
adc
add
mov
stos
shll
jg
inc
mov
push
imul
inc
or
sbbb
sbb
fsubrs
adc
jecxz
add
mov
mov
cmp
iret
inc
lret
jmp
adc
mov
xchg
add
xchg
push
out
xchg
test
int3
lahf
in
dec
stos
jns
xchg
jmp
bound
xlat
pop
inc
icebp
xor
popa
nop
and
jmp
and
add
and
sub
mov
cltd
dec
xchg
push
push
sbb
lods
lods
push
fdivs
lods
jmp
test
fcoml
sahf
fucomip
inc
fdivs
clc
adc
shl
cmpsb
push
cmp
sbb
ret
adc
adc
inc
outsb
sub
sub
ljmp
test
daa
jp
adc
inc
loopne
mov
sbb
xor
and
mov
adc
pop
cmp
mov
es
and
testb
dec
adc
mov
jge
lahf
mov
rorb
mov
rorl
mov
or
xchg
fcom
and
push
dec
fisttpl
cltd
cli
inc
ret
loop
mov
pusha
leave
cmc
fs
roll
rclb
movsl
pop
int3
or
mov
lahf
jecxz
test
repz
pop
sbb
test
mov
inc
testb
pop
test
and
out
fmuls
cmc
in
popf
push
mov
mov
loope,pn
cmc
std
fists
clc
orl
or
out
sbb
jo
sbb
lret
mov
pop
sub
xor
xchg
push
repnz
idivl
sbb
mov
pop
popa
loop
and
das
fdivl
ja
js
cmp
lds
jae
and
inc
xchg
testb
xlat
push
jmp
lds
and
dec
and
notb
sahf
out
repnz
push
mov
sub
fidivl
fldcw
jb
xchg
icebp
jl
fsubr
out
inc
test
pop
cmp
int
enter
ror
lret
insb
iret
or
mov
fildl
arpl
mov
fnstsw
stos
lods
lcall
push
pushf
mov
mov
out
and
loop
cld
cmc
xorb
mov
fiaddl
pop
insl
ret
lock
outsl
jae
mov
ror
ljmp
arpl
xchg
adc
push
mov
fxtract
add
jmp
adcb
pop
sub
dec
jns
mov
insl
decl
jmp
andb
andb
jle
sbb
aas
cmpsl
push
mov
idivb
jmp
iret
sub
outsl
mov
in
jle
xor
std
lods
aaa
cmp
mov
into
and
fstpt
dec
mov
jne
repnz
xor
mov
or
sbb
aam
cltd
int
inc
shrl
and
int3
adc
xlat
and
stos
sbb
insb
push
cmp
mov
loopne
or
bound
test
dec
add
pop
pop
sub
push
lret
lods
jo
scas
mov
mov
push
fldl
lds
mov
filds
int3
xchg
std
lods
lahf
addr16
xor
jecxz
and
xchg
sbb
jo
cmpsb
jmp
cmp
aam
addr16
pop
aas
pop
pushf
popa
iret
ret
jo
mov
movsl
cmp
fildll
cmpsb
fdivrs
cwtl
or
add
lds
dec
pushf
add
mov
daa
push
rcrl
push
loop
adc
add
adc
xor
push
add
aam
inc
popa
test
jno
pop
andl
lods
imul
cmp
push
bound
repnz
sti
or
xchg
pop
loope
dec
je
add
xchg
cmp
mov
sub
outsb
mov
xchg
rorl
and
cmp
ror
xchg
test
in
dec
inc
fcmovbe
dec
sbb
pop
inc
fdiv
cmp
jo
add
movsb
or
pop
push
mov
mov
ret
ret
sub
push
cmp
scas
mov
and
dec
xchg
je
mov
sarb
jge
jae
inc
sahf
fcomip
sub
or
cmp
xor
fs
mov
mov
mov
sub
fs
xor
fsubl
cs
or
push
inc
push
xor
mov
sar
xchg
in
add
int3
icebp
sbb
ret
sbb
pop
sbb
or
in
daa
clc
mov
or
jns
xor
mov
push
pop
fidivs
dec
dec
das
mov
orl
stos
clc
test
cli
mov
in
sbb
xlat
fcmovu
icebp
hlt
jp
or
fcmovnbe
test
jge
add
dec
add
scas
xchg
dec
push
add
clc
mov
lods
xchg
jo
and
pushf
movsl
pop
mov
shl
dec
pushf
xchg
sar
xchg
sbb
mov
jns
jo
or
loopne
push
movsl
and
inc
inc
xor
iret
lahf
inc
or
cs
leave
out
dec
cmp
mov
lods
xchg
pop
clc
cmpsl
add
sbb
inc
sub
sub
push
and
ret
xchg
cmp
mov
sub
adc
sub
test
scas
xchg
out
pop
popf
sahf
xchg
inc
pop
xor
dec
dec
mov
dec
or
sub
in
jge
cmp
lds
inc
sub
nop
scas
adc
pop
pop
out
scas
xor
cmp
xor
insl
mov
imul
sub
push
sbb
lret
sbb
mov
jo
mov
cmp
cwtl
pop
jnp
inc
stos
sbb
xor
sub
xchg
aas
lds
imul
mov
icebp
mov
sti
mov
or
rcll
stos
pop
fdivrp
sahf
inc
dec
dec
xor
push
arpl
les
testb
lret
rcrb
push
jp
stos
push
pop
hlt
fwait
xchg
dec
daa
addr16
jo
std
ljmp
sar
aad
xchg
and
test
sub
lahf
mov
mov
pop
scas
and
je
mov
inc
jge
faddl
sub
inc
jmp
mov
add
mov
dec
shrb
push
daa
pop
xor
test
push
or
lret
insb
sti
mov
and
outsl
scas
xor
inc
adc
hlt
loopne
arpl
lret
inc
ljmp
sbb
adc
test
repz
xor
sbbl
sbb
ds
les
sbb
mulb
inc
jo
jb
inc
int
out
adc
aas
fwait
push
lea
test
fwait
mov
push
enter
pop
xchg
rcll
mov
sbb
pop
add
setg
scas
out
lds
sbb
imul
sub
jae
lea
leave
or
in
push
ss
pop
in
push
mov
stc
insb
xchg
pop
ret
inc
push
imul
and
lock
in
pop
lret
aad
push
push
pop
mov
loopne
les
ss
aam
out
fidivrl
es
mov
in
inc
sub
add
cltd
jb
inc
fucom
repnz
ja
mov
pushf
enter
adc
xlat
fwait
pop
inc
add
cltd
hlt
push
popa
pop
adc
cltd
je
or
or
out
mov
dec
ret
ret
jp
xlat
arpl
rcrb
xlat
aaa
lcall
subl
sbb
or
mov
pop
and
jl
sti
xor
jne
scas
lret
lret
pop
nop
jne
arpl
lcall
icebp
dec
cmp
addr16
jnp
arpl
and
jae
outsb
sbb
inc
orl
ret
pop
mov
insl
mov
leave
pop
inc
andb
call
or
dec
mov
or
dec
xlat
shlb
inc
pop
insl
mov
shll
and
dec
inc
xchg
incb
cli
popa
ds
xor
test
push
mov
iret
scas
cmovbe
add
pop
lods
mov
je
sbb
add
push
ljmp
lds
dec
xchg
sub
add
mov
jae
push
icebp
mov
pop
xchg
mov
or
jmp
call
je
xor
cli
jbe
xor
in
inc
mov
sbb
pop
sbb
or
aam
les
in
sbb
push
and
roll
jns
mov
mov
push
and
stos
mov
fdiv
arpl
das
arpl
pop
out
inc
lds
rclb
aaa
out
jecxz
loopne
dec
xchg
clc
je
pop
pop
arpl
loop
sti
cmp
test
pop
jno
mov
mov
pusha
dec
cli
loopne
and
imul
sub
cld
es
mov
bnd
cmp
jmp
add
and
iret
xchg
push
or
mov
notb
mov
shll
loop
mov
cmpsb
adc
pandn
rol
daa
push
icebp
cmp
push
inc
fwait
addr16
loopne
inc
add
loope
and
mov
inc
daa
jns
dec
out
hlt
loope
aam
xchg
adc
cmpsb
fadds
mov
ss
sbb
push
fiaddl
or
data16
out
clc
mov
jl
add
aad
push
out
popf
mov
jne
mov
shrl
mov
adc
mov
iret
lahf
idivb
decl
adc
dec
push
adc
aas
and
ja
mov
mov
pop
jbe
inc
outsl
xchg
add
scas
stos
clc
jp
jge
sub
sti
push
leave
mov
sbb
mov
les
sub
jo
push
adc
mov
jmp
pop
out
ret
xchg
xchg
in
cmpb
sub
and
popl
aad
mov
mov
or
jl
dec
shl
jge
inc
cmpsl
mov
mov
mov
mov
mov
stc
fxch
movsb
call
mov
and
lea
aam
aad
mov
mov
push
fsubrs
adc
xlat
mov
jo
add
cmp
inc
dec
scas
lret
pop
push
repnz
test
lcall
std
inc
cmp
adc
rclb
insl
jl
sub
sti
sub
add
imulb
and
mov
mov
lods
dec
pop
ss
cli
cli
mov
sub
les
js
gs
call
fistpll
sar
ret
in
sub
insl
jno
enter
aas
fdivrp
push
popa
push
lds
pop
xor
fldenv
idiv
in
je
add
js
cld
cmpsb
sarl
fisubs
outsl
sbbl
dec
mov
leave
cmp
push
jns
mov
add
xor
mov
push
inc
xchg
or
and
mov
call
adc
ja
aad
les
adc
mov
imul
push
out
push
adc
mov
or
or
sbb
inc
scas
dec
cmpsb
xchg
into
popf
cmp
fwait
adc
out
enter
sbbl
jno
jb
sbb
cmp
sub
cmp
pop
sub
dec
mov
push
pop
inc
dec
lahf
rcr
idivl
scas
pcmpgtb
dec
or
dec
lar
push
rorl
mov
pop
sbb
pop
jbe
ljmp
push
jl
mov
stos
negb
jnp
rcr
sahf
inc
jbe
sub
lds
inc
je
xchg
bound
insb
negb
jns
hlt
fdivl
leave
pop
ret
xlat
cs
sub
rol
pop
jp
loope
es
shrb
push
inc
test
fdivl
jb
add
push
sub
mov
mov
int3
adc
insl
mov
out
jne
or
call
fs
or
push
mov
nop
add
adc
ret
add
jnp
stc
test
jg
jge
outsl
pop
and
jmp
jns
cmpsb
or
pop
call
fsubp
xchg
cmpsl
fildll
push
pop
insb
test
sbb
lahf
popf
test
fnstenv
xchg
jne
stos
jbe
lds
lcall
sbb
add
pop
add
std
pop
inc
fdivp
push
mov
fisttps
push
int
adc
dec
adcb
mov
mov
insl
sahf
lods
lret
pop
lahf
dec
mov
xorb
and
adc
lea
das
push
gs
scas
or
jp
mov
ja
lods
fnstcw
dec
pop
mov
or
sub
test
loopne
test
mov
xor
mov
cmc
and
jp
xlat
push
shrl
jle
xchg
pop
sbbl
je
fimull
ljmp
clc
adc
loope
rep
popf
xchg
jae,pn
xchg
jo
inc
inc
lods
lret
int3
test
adc
xchg
insl
mov
shll
insb
lret
sbbl
in
rolb
mov
insb
inc
mov
cmp
test
in
push
sub
push
fldenv
stc
pusha
and
xchg
movsb
int
push
inc
xchg
jbe
inc
push
imul
sbb
jae
add
adc
cs
inc
loopne
hlt
and
inc
fistl
cs
js
xlat
sub
aas
mov
test
xor
test
pop
mov
pop
sarl
pop
cmp
mov
mov
into
fucomip
xlat
out
scas
push
dec
xchg
ds
in
sbb
mov
inc
int3
popf
mov
sbb
jns
cmp
xchg
cmp
inc
pop
push
cwtl
int
jno
xor
das
xorb
fs
gs
mov
movsb
subl
push
testl
fisubrl
je
jnp
push
incl
add
out
rcll
adc
pop
mov
movsl
xor
clc
fists
xlat
lahf
outsl
xchg
mov
outsb
pop
xchg
mov
idivl
cmp
sub
add
bnd
mov
xchg
fistps
fidivrs
dec
fcmovbe
sub
loopne
xchg
into
xor
std
adc
mov
mov
aas
dec
outsl
out
jae
xchg
ss
call
ljmp
out
std
in
dec
xchg
scas
lret
inc
sub
repz
shll
sbb
jg
pusha
mov
inc
cmp
cmp
push
jge
lcall
fistl
or
pmulhuw
jmp
inc
pop
xchg
loopne
inc
inc
or
push
sub
mov
sub
cmp
push
repnz
pop
mov
addl
ret
push
fmuls
jmp
adc
fstpt
ret
fiaddl
xchg
xchg
insl
dec
out
mov
xor
inc
sub
xchg
std
ret
ret
pop
aaa
push
jno
jno
insl
ja
sbb
lret
push
fucomip
movsl
push
jae,pt
mov
inc
jnp
or
scas
cmp
add
add
pop
popa
inc
das
mov
bound
fnstenv
push
cltd
out
das
in
pop
mov
cmpl
ret
icebp
inc
pop
xor
or
jge
lock
sub
sbb
pop
push
jp
xor
adcl
mov
outsl
outsl
icebp
ss
push
push
xchg
cmp
adc
or
loope
jmp
cmp
sbb
mov
or
repz
push
push
xchg
cmpsb
adc
imul
fbld
xor
pop
mov
adc
loopne
add
int
cmp
mov
inc
in
pop
push
mov
imul
rep
xchg
js
jno
gs
push
shrb
into
gs
sbb
jl
fs
cmpsb
push
aad
scas
std
or
fstpt
nop
add
dec
adc
in
push
cmp
jnp
jmp
mov
fldl
sub
sub
sbb
je
pop
xor
inc
jl
repz
movsb
insb
sub
adc
jge
push
push
data16
xlat
sub
jne
inc
push
push
mov
mov
arpl
dec
or
push
pushf
cmc
xchg
xor
xchg
cmpsl
int3
and
leave
push
mov
js
xchg
jg
fdivrs
dec
sti
mov
mov
jmp
mov
insb
xlat
lcall
mov
adcl
inc
dec
call
mov
dec
inc
dec
movsb
and
dec
js
push
pop
dec
dec
jg
lahf
push
sub
les
add
jno
fs
int3
push
cmpsb
in
fsubrl
ret
or
popf
idivb
or
repz
fcoml
jge
shrb
mov
inc
push
sbb
je
int3
gs
cmp
push
gs
xor
out
mov
dec
cltd
sub
cs
je
mov
mov
test
int3
testb
xchg
sarb
iret
icebp
mov
add
movsl
sahf
shrb
roll
mov
addr16
imul
pop
push
lea
insl
ja
xor
mov
lahf
aad
cmp
adc
pop
in
test
mov
addr16
mov
jnp
ss
inc
addr16
push
mov
inc
pop
repnz
fistl
adc
test
jmp
xlat
mov
fs
call
cmp
cmp
xor
inc
jbe
xchg
xchg
scas
scas
leave
in
mov
mov
push
les
filds
push
add
mov
xchg
mov
pop
lret
push
mov
jno
mov
addl
into
daa
pusha
fildl
test
popa
sub
int
roll
imul
push
std
mulb
and
mul
sbb
xor
int
cmc
out
mov
xor
jl
mov
pop
mov
push
fidivl
iret
into
cmc
loope
gs
or
mov
int3
lcall
aas
enter
add
xchg
sbb
gs
test
jle
push
cmpsl
adc
aam
shll
xchg
dec
xchg
and
imull
lcall
dec
test
jl
mov
cld
xchg
push
lods
adc
ss
jg
jno
mov
jl
push
jl
fsts
loopne
lods
xchg
mov
test
inc
ds
dec
imul
xchg
and
mov
fs
aad
jae
movsb
mov
popf
test
out
pop
test
mov
adc
insb
enter
sub
cld
adc
xor
and
inc
pop
sar
das
test
lret
outsl
mov
sbb
int
cld
outsl
lods
cld
mov
dec
scas
sub
in
sub
jge
repz
dec
mov
push
mov
shll
pusha
adc
sbb
int
mov
sbb
jo
pop
iret
loopne
int3
das
loope
lock
testb
lods
fs
fcoml
xor
stos
jne
int
std
push
std
xor
cld
pop
and
aam
pushf
addr16
jg
out
icebp
mov
jl
inc
call
inc
or
push
sti
and
jnp
pusha
cltd
pusha
in
push
inc
fdivs
in
sahf
push
adc
ja
inc
call
iret
mov
out
cmc
adc
sbb
ret
jg
xor
add
pop
testl
sub
add
mov
lret
inc
lcall
xchg
mov
shr
mov
jmp
xchg
stos
cmp
and
inc
adc
mov
fyl2xp1
jl
pushf
xor
and
std
jb
mov
pop
out
mov
jp
push
xlat
dec
mov
or
jns
aad
add
cmp
inc
ds
sub
in
push
xchg
xchg
sbb
int3
fstps
xchg
data16
stos
sbb
sbb
aad
ficomps
and
repz
add
sub
testb
adc
in
test
cmpsb
repnz
lahf
mov
fs
imulb
dec
jecxz
dec
lret
xor
dec
add
sub
rcrl
and
ljmp
add
sub
ds
fldt
mov
aaa
inc
ss
fistl
outsb
scas
sti
inc
jo
into
sub
pop
dec
cltd
mov
mov
lahf
outsb
movsb
push
sahf
sub
rcl
add
inc
xchg
pop
pop
adc
xchg
out
mov
movsl
shll
mov
push
jo
stc
mov
mov
mov
dec
push
jns
push
lods
and
fistpll
and
cli
mov
shll
dec
int
xchg
add
mov
pop
jbe
arpl
mov
adc
repz
or
adc
and
add
lahf
add
and
dec
mov
adc
xchg
pop
jg
push
arpl
inc
mov
jge
stos
xor
sub
cmp
push
mov
cs
out
popa
leave
jg
xchg
or
sbb
stos
adc
mov
mov
fwait
hlt
dec
sub
mov
jae
test
or
icebp
lods
xor
pushf
mov
xchg
loope
das
int3
pop
jb
in
jo
stc
inc
dec
int3
push
loop
sub
loope
push
cmpsb
add
dec
dec
mov
aad
out
mov
mov
mov
lods
inc
out
insl
cmp
or
mov
sbb
js
adc
stos
pop
andb
imul
fimuls
pushl
inc
lea
rclb
inc
aam
xor
mov
xchg
ficoms
outsb
and
jmp
xchg
mov
rcll
rcl
mov
dec
mov
jno
sbb
imulb
sbb
pop
cmc
insb
xlat
ljmp
aam
pushf
or
inc
mov
call
xor
loop
mov
and
jmp
stos
mov
test
clc
addr16
sbb
cld
mov
or
sub
les
mov
or
jecxz
repnz
aam
sbb
movsb
fdivs
mov
add
lds
cmp
or
dec
popa
outsb
add
cltd
xchg
aaa
or
cmc
inc
repz
xor
sti
ret
sub
inc
aaa
repnz
pop
cmp
movsb
jb
popa
mov
and
movsl
xor
sbb
cmp
ds
or
fldl
cmpsl
add
hlt
dec
movsl
cli
mov
dec
and
inc
xchg
repnz
xor
cwtl
jae
jg
xchg
ret
sbb
ds
scas
dec
or
fs
mov
jbe
jo
fbstp
dec
add
pushf
inc
xlat
mov
inc
pop
loopne
cmp
insb
add
rorb
adc
and
jb
jae
lea
mov
or
insl
push
mov
pop
rcl
mov
cmc
fisubs
cld
ds
outsb
sub
nop
insb
outsl
femms
inc
popf
push
aad
hlt
adc
out
cltd
js
mov
aad
or
repz
fsqrt
bound
pop
outsl
sbb
movsb
inc
aaa
test
ds
movsb
add
adc
lds
xor
xorl
jnp
shlb
cmpsb
insb
int
push
mov
idivb
std
sub
rolb
dec
mov
mov
fs
cmp
sbb
ljmp
jge
sbb
sub
lret
lret
xchg
inc
repnz
mov
shrl
mov
imul
push
pushf
pop
test
mov
add
pop
cmpsl
bnd
test
sysenter
mov
add
fnsave
pusha
adc
jns
es
jl
aaa
movsb
mov
aam
popf
cmp
sti
pusha
push
das
adc
push
sub
mov
mov
push
or
mov
cmp
sub
addr16
dec
loope
inc
mov
mov
sar
pop
loop
loop
jp
or
lds
ds
int3
xchg
xor
cmp
mov
cmpsl
mov
dec
lods
mov
mov
lret
fldl
push
and
ret
bound
fwait
rorl
add
xchg
adc
subb
das
jmp
leave
xor
sub
stc
add
or
adc
jne
stc
in
cli
xchg
das
sub
jno
psrad
ds
iret
xchg
xor
add
dec
cmp
xchg
inc
add
xor
xchg
mov
mov
lcall
daa
stos
inc
aam
mov
mov
cwtl
test
loopne
cmp
sub
loop
in
jo
ss
mov
popa
sub
adc
and
cli
and
push
inc
cmp
mov
dec
negl
sahf
push
rclb
jp
fst
insb
in
mov
adc
pop
enter
xchg
sub
jle
in
add
mov
enter
sbb
cli
pop
inc
lcall
pop
inc
inc
mov
and
stos
mov
mov
lea
aas
pop
mov
add
mov
jp
sub
or
fidivrs
mov
addr16
xor
in
jns
sarb
mov
hlt
fisttpl
jg
inc
pop
dec
jns
jle
icebp
sub
push
in
scas
and
or
push
mov
inc
fildll
mov
orl
xor
add
hlt
push
rdmsr
xor
mov
out
dec
push
and
adc
inc
testb
outsb
cs
dec
sub
in
aaa
or
mov
out
out
or
icebp
xorb
push
lods
addr16
jmp
cmp
jecxz
ret
icebp
dec
iret
in
repz
cs
jle
popa
push
iret
fld
test
jle
ja
enter
xor
adc
cmp
mov
call
fs
jmp
pop
fs
fptan
xor
mov
push
scas
fnstenv
iret
sbb
xchg
push
ds
out
mov
fildl
std
movsb
jecxz
sub
cmp
jns
push
xchg
xor
std
or
mov
loop
movsb
ror
stos
dec
cmpsb
add
xchg
jns
je
add
lahf
mov
add
loope
ja
std
gs
sbb
xlat
int
xchg
adc
sbb
jl
aad
dec
and
fwait
rcrb
rcr
and
fcomip
imul
xchg
jge
pushf
pop
push
mov
or
inc
ds
xchg
sbb
cmp
imul
or
mov
mov
adc
sarl
mov
mov
adc
xor
sahf
and
lahf
pop
enter
jp
dec
sub
sbb
sub
mov
mov
inc
outsl
mov
xchg
fs
dec
xchg
cs
enter
mov
xor
jb
pop
or
mov
dec
out
cmp
rcll
and
dec
xchg
dec
pop
into
addr16
les
and
lcall
jmp
pop
add
es
mov
add
jae
adc
adc
in
adc
mov
mov
xchg
shll
in
xchg
pop
adc
cmpsb
idivb
sarl
in
test
std
les
mov
xchg
ss
mov
jbe
pop
xor
lds
inc
int3
fcmovnu
sbb
mov
fwait
add
mov
lods
jmp
stc
push
stos
lea
mov
or
jp
lds
ss
dec
push
ja
fcom
imul
cmc
pop
orb
mov
fldenv
fildll
loopne
subl
jl
mov
fisttpll
cld
sahf
aaa
cmp
bound
xchg
jno
jg
mov
dec
dec
inc
cwtl
fwait
in
repnz
dec
dec
imul
int3
and
shll
push
lock
cs
jp
dec
outsl
int3
xor
aad
xor
cltd
jg
mov
jmp
int3
in
fadds
dec
jne
dec
sub
xchg
roll
xchg
inc
test
imul
cmpl
xchg
das
sub
xchg
adc
mov
arpl
rcr
lret
xorb
in
xchg
xchg
push
pop
push
dec
mov
cwtl
std
inc
fs
out
lret
loopne
cmc
cltd
scas
xor
arpl
lret
inc
gs
add
addr16
repz
push
pop
pop
mov
sub
in
jns
sbb
test
sbb
add
jae
mov
dec
xchg
and
repnz
test
inc
sub
popf
jge
lret
push
mov
jp
or
dec
sub
mov
jp
dec
test
inc
lods
xor
sub
or
pop
pmulhw
aam
scas
lea
push
lea
pusha
sar
std
jge
leave
xor
leave
fcmovnb
js
pop
cli
mov
mov
xchg
leave
repnz
inc
cmp
cli
rcll
loope
int3
mov
mov
test
aas
and
stos
into
aaa
adc
push
mov
mov
jns
mov
sbb
mov
fdivs
jge
out
gs
dec
sub
mov
ja
repz
sbb
out
loope
shlb
inc
mov
insl
mov
push
add
or
movsl
or
mov
fwait
in
pop
inc
adc
dec
shlb
insb
lcall
or
sar
mov
aas
jae
out
cmp
in
mov
xlat
lret
or
xlat
push
jb
sbb
clc
fadds
lds
or
pop
inc
pusha
xor
scas
add
cmc
jo
mov
frstor
pusha
or
popa
and
fldt
xchg
push
orb
push
jecxz
ljmp
outsl
xchg
daa
jnp
cmp
scas
jg
lea
cmp
mov
int
std
ja
fwait
push
and
hlt
mov
lret
das
push
js
xchg
add
pop
faddl
mov
and
lcall
mov
xor
xlat
dec
mov
push
xor
loopne
mov
icebp
xchg
fs
test
sbb
adc
sbb
lahf
jecxz
lds
btr
pop
shll
in
imul
ss
jmp
mov
sbbl
and
pop
and
xchg
add
push
sti
inc
lahf
loope
aas
cmp
mov
mov
sbb
sbb
iret
jne
fdivs
gs
mov
dec
js
rorl
mov
pop
and
shrl
es
cmp
and
xor
add
cld
in
mov
or
sarb
mov
jecxz
lahf
data16
mov
enter
repz
mov
mov
pop
sahf
mov
cmp
cmp
mov
addr16
cmp
pop
sti
test
inc
std
mov
scas
ljmp
and
sbb
and
and
xchg
and
bound
xchg
scas
jns
imul
pushl
jo
add
scas
pop
and
inc
cmp
sbb
cld
sbb
inc
test
cmpsl
mov
mov
inc
rcrb
movsb
out
push
pop
mov
xchg
lods
lcall
lods
nop
sub
ja
jns
mov
xchg
xchg
sti
repnz
add
mov
int
outsb
dec
jge
inc
cmpsl
or
and
inc
jle
subb
imul
add
leave
xchg
cwtl
xchg
ds
rorb
bnd
in
leave
in
jp
iret
or
out
cmp
adc
shl
inc
or
mov
test
mov
mov
daa
sub
fcmovb
aaa
std
mov
mov
cmc
xchg
mov
rcrl
add
nop
iret
into
mov
mov
jno
sbb
add
mov
lahf
dec
imul
mov
jl,pn
jmp
xor
decb
fmul
pop
out
fstpt
pop
push
shrl
insb
in
adc
lcall
cmp
stc
or
pop
and
cmp
add
or
sbb
sbb
pop
mov
fprem1
push
cmp
mov
call
or
hlt
push
and
pop
daa
outsl
sub
adc
loopne
or
inc
ret
xchg
mov
jmp
cwtl
std
xchg
lods
lds
std
sbb
jecxz
inc
inc
es
jmp
fs
or
jnp
mov
das
mov
movsl
sub
sbb
pop
mov
repz
inc
lods
jb
mov
fdivrl
xlat
sti
push
dec
out
sbb
lahf
push
push
in
repz
scas
xchg
mov
cwtl
fnstenv
and
push
pushf
push
fadd
mov
adc
xor
out
pop
sbb
popa
or
jns
outsb
mov
mov
stos
xorl
pushf
pop
int3
in
sbb
daa
leave
jno
imul
mov
jne
sbb
mov
call
outsl
out
roll
sbb
cmp
pop
popf
jmp
mov
in
outsl
cltd
cmp
repnz
pop
push
lock
push
fidivl
movsb
jno
or
mov
jle
push
xor
mov
sub
jae
xchg
dec
dec
stos
mov
cmc
sub
popf
jmp
mov
iret
sbb
push
mov
push
ret
andl
and
mov
loope
cwtl
xchg
mov
push
in
add
js
aam
cld
std
pop
add
cmp
fimuls
xchg
and
dec
insb
and
mov
test
cmp
lods
jecxz
arpl
xorb
mov
ja
add
fistps
adc
out
mov
inc
mov
mov
sub
mov
ror
cwtl
pop
mov
dec
movsl
test
repz
aas
pusha
jl
and
xchg
aam
loopne
push
arpl
push
inc
ret
pop
add
pop
xor
pmullw
sar
daa
into
into
inc
fldt
jl
pop
cmp
out
dec
shl
cwtl
divb
xchg
sbbl
das
add
cmc
xor
jns
ret
jl
pop
subl
fiadds
into
gs
jb
sub
mov
pop
imul
fstl
insb
loopne
xlat
adc
xchg
mov
dec
xchg
cli
dec
popa
stos
shll
lock
cmp
fs
or
jb
dec
cmp
pushf
imul
push
into
xchg
push
mov
adc
xor
jp
cltd
or
fdivrs
xchg
out
in
pusha
bound
lods
rcll
cmp
test
xchg
jb
xchg
mov
cmpsb
push
jne
or
or
out
int
jl
sub
addb
pop
push
daa
and
push
sbb
rclb
outsb
daa
add
in
xor
sbb
xor
xor
shll
sbb
push
enter
sub
sbb
nop
sub
leave
popf
cmp
ret
adc
mov
xchg
test
xchg
out
hlt
jge
stos
mov
mov
int
push
adc
lea
ret
dec
enter
or
fldpi
mov
ds
cmc
cmc
and
jb
pop
xor
imul
mov
clc
fisttps
lods
ret
out
fnstsw
xchg
adc
mov
pop
shrb
daa
xchg
push
lret
sti
sub
mov
pop
stc
iret
jae
enter
adc
xchg
popf
jle
mov
xor
ja
add
imul
in
sub
cld
cli
ss
addr16
shlb
jae
dec
popa
cmp
mov
popf
into
je
js
dec
push
sbb
dec
scas
push
lahf
or
lds
add
jb,pn
mov
add
pop
mov
cmp
lcall
je
aas
mov
xor
mov
jmp
cmp
inc
or
or
fsubl
mull
lcall
das
dec
mov
es
push
in
mov
cmc
lock
mov
jmp
xchg
and
dec
pop
pusha
int
je
adc
cmp
jno
cmp
fwait
sti
insl
xchg
push
mov
popa
jmp
pusha
into
out
shlb
dec
mov
pop
and
popf
divb
pop
std
xlat
mov
dec
scas
push
in
mov
rcl
mov
jo
jno
cli
mov
dec
push
xchg
repz
sub
inc
adc
mov
popf
adc
leave
cli
icebp
sub
sbb
jecxz
pop
iret
lds
dec
imul
or
dec
shl
jne,pt
sbb
imul
add
lea
fidivs
and
notb
jno
aaa
cmc
int
outsb
mov
mov
mov
push
out
xchg
repnz
ret
inc
adc
pop
adcb
sub
xor
inc
loopne
mov
incb
or
push
pop
aam
cmp
mov
dec
leave
or
push
in
ret
inc
xchg
mov
pop
adc
aam
jecxz
cli
scas
pusha
aas
dec
lcall
dec
punpcklbw
enter
in
jno
sbb
pop
outsl
movsb
jo
xchg
inc
pusha
inc
aam
data16
jno
pop
xchg
mov
repz
aad
rorb
push
call
dec
jnp
mov
imul
mov
sub
inc
dec
jge
fsubr
mov
inc
les
jle
dec
cmp
inc
in
inc
or
inc
lret
rolb
scas
cli
out
subb
sbb
xchg
popf
popa
out
cmp
fwait
pop
push
mov
inc
pop
repz
movsb
ret
jo
leave
cmp
pop
aad
aad
push
mov
leave
xor
jb
jg
int3
pushf
pop
push
fcoms
push
cmpsb
loope
xor
insb
jmp
push
divb
das
pop
out
jl
jbe
push
lods
aad
inc
sahf
sub
fcmovu
dec
in
outsl
jmp
adc
je
xor
pop
incl
jl
mov
xor
xchg
mov
mov
xor
jnp
scas
testl
ret
testb
inc
inc
push
fidivs
push
mov
jae
push
sbb
mov
mov
pop
jge
ret
push
pop
les
adc
mov
or
cmpl
repnz
es
out
stc
push
mov
rolb
inc
mov
jae
in
pop
std
jl
cli
jno
adc
movsb
test
test
sub
ret
aam
les
push
hlt
push
adc
leave
push
ljmp
jb
inc
sbb
xor
push
out
add
inc
lds
out
cmp
in
mov
sbb
inc
pop
stos
jnp
xchg
in
sbb
jle
icebp
push
repnz
fistpl
mov
aas
fwait
mov
mov
cmp
jo
cli
mov
push
mov
dec
jbe
std
pop
cmpsb
roll
das
int
add
incb
adc
cs
adc
xchg
and
test
sahf
pop
cmp
cmp
push
jae
or
xor
test
insl
xor
inc
js
cmp
push
scas
int
out
mov
inc
jo
stos
sub
cmpsb
icebp
jo
jge
sub
es
sbb
mov
add
lock
sub
cmp
xlat
pop
aam
cmpsb
arpl
out
mov
push
jne
push
xorb
ss
dec
clc
mov
fcoms
das
sbb
fwait
iret
sub
imul
es
sub
and
call
mov
adc
adc
test
outsl
pop
and
xchg
jae
jge
xchg
mov
mov
sbb
push
dec
roll
sub
pop
sub
xchg
dec
call
adc
pop
sub
shl
push
mov
lds
xchg
jp
sub
lret
mov
push
test
in
shl
js
shlb
out
mov
adc
fsubrp
fldt
scas
mov
jecxz
jne
divl
sub
pop
mov
sub
xor
or
int3
or
ljmp
outsl
movsl
sbb
data16
js
pushf
mov
jl
mov
lds
cmp
cld
gs
mul
mov
fistpl
or
sub
adc
mov
add
mov
sub
lea
rolb
ljmp
fstl
in
es
mov
daa
pop
adc
insl
in
outsl
push
outsb
inc
scas
mov
pop
pop
jb
xchg
test
mov
push
sti
mov
or
iret
push
pop
push
push
adc
adc
in
mov
aam
jecxz
bound
shrb
mov
ljmp
pop
js
inc
and
cld
mov
or
into
push
sub
push
add
dec
jmp
cmp
sti
dec
or
aam
mov
loope
xor
ret
stos
aam
xchg
js
into
movsl
leavew
in
jp
adc
dec
scas
cmpsb
pop
bndstx
lock
enter
in
jno
stos
sub
xor
add
cmp
mov
arpl
sbb
adc
std
js
xchg
pop
push
adc
sbbb
loope
test
les
int
mov
sub
dec
mov
and
or
pop
test
ljmp
js
stos
sub
or
pop
jne
mov
sub
xchg
mov
mov
mov
cmp
mov
enter
pop
or
cmp
jne
imul
fisubs
sbb
jo
adc
inc
jbe
out
fs
test
jns
stos
insl
xor
mov
push
fmull
jae
push
fwait
cmp
mov
lret
dec
pushf
cmp
int
xchg
scas
jl
test
insb
nop
out
xchg
push
les
xchg
xor
div
dec
lods
fimull
sbb
cwtl
mov
push
or
mov
dec
sub
push
add
dec
sbb
int
std
mov
push
pusha
mov
add
or
push
cli
pop
leave
ja
jle
scas
sub
sbb
and
sbb
jb
and
xor
xchg
imul
mov
aad
ror
cltd
outsb
fwait
mov
sub
xor
push
in
fs
add
dec
sbbb
in
repz
jl
sbb
dec
pop
mov
or
hlt
imul
sbb
cmpsb
call
cmc
pop
mov
dec
xor
dec
loop
orl
add
push
shll
push
cmp
hlt
addr16
adc
jl
sbb
adc
and
pusha
and
pop
pop
xor
rcrb
dec
movsb
xchg
out
icebp
repz
fstpl
fadd
fisubs
adc
sbb
repnz
push
push
sub
adc
add
adc
cmp
pushf
pop
dec
hlt
xor
push
sbb
and
inc
sahf
add
cli
jb
mov
andl
clc
repz
jl
sbb
push
lds
lods
in
and
pminsw
test
aad
cmp
adc
mov
rcpps
sarl
and
inc
or
sbb
roll
lcall
shrb
ret
int
or
aam
xchg
add
add
pop
pop
cwtl
add
mov
mov
gs
pop
sti
daa
js
sub
icebp
mov
xlat
ret
mov
inc
insb
add
add
stc
push
in
push
mov
rep
pushf
xchg
movsl
mov
add
movl
mov
or
xchg
inc
mov
cli
cld
dec
lret
jbe
adc
mov
leave
pop
insl
xor
add
and
dec
sahf
pop
mov
dec
push
dec
jb
mov
push
js
out
ret
in
fsub
mov
inc
push
dec
dec
cmp
imul
push
push
mov
xchg
insl
sub
lret
mov
bound
sbb
enter
jmp
mov
mov
ss
adc
and
pop
cld
xor
jns
repz
lock
jecxz
scas
mov
gs
and
bound
call
push
sub
mov
test
pop
loope
std
mov
adc
mov
orb
xchg
sbb
adc
es
cmc
push
jmp
xchg
insb
push
adc
cs
lods
adc
or
iret
cwtl
aam
xchg
loop
dec
fld1
or
hlt
cmpsb
and
fistpl
insb
lret
xor
cld
popa
sub
iret
adc
mov
lret
ja
mov
fsubrs
xor
or
mov
jo
loop
inc
ret
js
insl
decb
hlt
mov
pop
sub
inc
push
out
jns
lahf
test
inc
add
xchg
dec
adc
sti
insl
sbb
mov
enter
inc
sbb
or
loope
mov
testl
or
mov
jle
adcb
pusha
shll
popl
shlb
mov
jl
inc
shlb
sti
jo
xchg
pcmpeqw
sub
out
mov
cmp
jnp
insl
sar
or
add
dec
dec
js
lret
int3
jp
lahf
ds
jecxz
add
adc
jp
push
int
mov
xchg
xor
fs
int3
ret
dec
inc
mov
leave
push
cmp
xlat
dec
push
fists
movsl
clc
xchg
ror
rcrb
ljmp
lret
rorl
xchg
enter
mov
sub
stos
inc
aas
insb
jno
push
and
sahf
mov
lret
xchg
jp
and
adcb
fidivl
xchg
xlat
inc
aaa
mov
xchg
push
push
les
push
adc
dec
xchg
pusha
adc
and
int3
lds
test
jns
jge
test
inc
loope
pop
cli
jo
cmpb
jae
ds
pushf
push
aad
mov
xchg
jg
movsb
shlb
xor
addb
adc
clc
jge
pop
inc
mov
sbb
adc
xchg
lret
xchg
popf
out
adc
movsb
outsb
jp
sbb
scas
inc
in
push
das
add
out
sahf
sahf
sub
and
cmc
mov
jae
cmp
in
xchg
popa
sbb
push
mov
lret
lock
mov
pop
sbb
xchg
or
cmpsb
sub
outsl
ljmp
mov
lds
jg
inc
daa
mov
jnp
push
fisubl
cmp
test
push
mov
mov
pop
jp
ret
dec
jle
stos
stos
roll
push
jp
test
xor
mov
xchg
pushf
es
push
xchg
jb
adc
je
fwait
push
sub
popa
mov
xchg
cltd
icebp
pop
sub
test
dec
push
in
adc
pop
add
sahf
cmc
xor
mov
dec
fstpl
jnp
cwtl
cwtl
shll
pop
xchg
test
xor
outsl
push
lock
mov
inc
xor
sub
flds
arpl
fistps
push
add
adc
cmp
std
mov
jmp
dec
sbb
mov
jne
je
inc
push
mov
sbb
cli
dec
or
call
lods
scas
lcall
sub
adc
repz
jl
test
lret
fsubs
inc
inc
ffreep
add
loop
mov
repz
nop
xor
adc
lds
push
xor
add
leave
jnp
pop
jb
dec
xchg
aas
mov
stos
add
inc
jecxz
xchg
jle
and
adc
in
push
mov
std
out
sbb
ror
push
jg
pshufw
mov
repnz
pop
out
mov
xlat
mov
add
xchg
iret
cwtl
cli
cmpsb
fcmovnu
int
hlt
and
adc
cmp
adc
lds
xchg
add
stos
xchg
pop
and
fldl
ficoms
or
cmp
jae
cmpb
lea
hlt
push
cld
xchg
or
cld
repz
xchg
frstor
mov
mov
int3
jae
push
daa
or
out
int
cs
cmc
push
fisttpl
adc
pusha
test
sahf
cmpsl
dec
fdivrl
jo
sbb
movsl
out
cli
popf
mov
mov
xchg
icebp
mov
push
negb
call
adc
jmp
pop
sub
pop
mov
daa
or
cld
sub
frstor
inc
pop
dec
or
sub
sbb
dec
xor
add
cmpb
or
fisttpl
cld
je
dec
xchg
scas
in
sub
arpl
mov
sti
sub
add
fs
inc
in
adc
inc
or
inc
gs
hlt
ret
or
xchg
xchg
sub
test
popf
testb
clc
inc
enter
adc
insb
imul
shlb
in
inc
fcmovne
jmp
fwait
sbbb
aas
fisttpl
in
pop
mov
xor
inc
loop
cli
push
int
or
std
ret
push
lret
arpl
mov
rorb
cmp
dec
arpl
xchg
inc
outsb
and
xchg
jg
adc
mov
test
movsb
dec
cmp
ja
xor
std
sti
xor
outsb
and
adc
push
mov
out
inc
sub
gs
ficoml
adc
lods
mov
aam
fisttpll
nop
jbe
dec
int
mov
lods
add
sbb
shl
or
dec
pop
iret
pop
cltd
adc
xlat
sbb
inc
test
xorl
pop
cmp
test
and
jge
in
lcall
sub
jecxz
into
dec
std
pop
push
das
movsb
cmp
sub
ss
mov
cli
xor
cltd
scas
pop
lds
xchg
rcl
fiadds
loopne
movsb
pop
lcall
pop
dec
stc
aad
mov
movzwl
xor
push
mov
push
sbbb
sbb
jp
cmp
sti
pop
mov
dec
sub
sub
arpl
pop
mov
xchg
stc
loopne
fidivl
je
add
sbb
pusha
jmp
push
xchg
pop
fdivrs
cld
shl
or
mov
xor
fdivr
movsl
jbe
shrb
xchg
or
out
jns
or
fmuls
aas
push
pop
aas
out
movsl
sub
leave
push
lcall
fwait
out
loop
inc
gs
icebp
aam
mov
fstl
filds
adc
dec
lods
xchg
xchg
aad
fldl
xchg
lret
testb
push
sub
mov
and
clc
cwtl
or
mov
and
mov
and
js
inc
add
cmp
jae
xor
adc
pop
xchg
dec
rclb
hlt
fwait
push
inc
int3
sahf
scas
pusha
lahf
movsl
xorl
pop
inc
jbe
cli
cmc
mov
lret
add
das
out
movsl
pusha
xchg
idivb
cwtl
xor
int3
xlat
xor
xor
inc
xor
test
or
dec
sub
xchg
fucomp
fnstsw
push
ss
popa
mov
add
aas
fisubrl
jge
mov
add
mov
or
jge
mov
xor
out
ss
jnp
jl
mov
jns
or
dec
pusha
sbb
rcr
xchg
gs
xchg
popa
test
or
jmp
push
push
sbb
or
jp
lret
mov
jp
or
cmpsl
xchg
imul
xor
call
mov
cs
movsb
add
stc
pop
int3
inc
adcl
in
adc
test
or
sbb
sbb
xor
mov
imul
mov
mov
pop
andb
mov
test
cs
pop
test
cmpsl
ja
call
lock
pop
xchg
sar
fdivl
adc
lahf
adc
insb
pop
inc
movsb
xchg
xchg
xchg
pop
xchg
xchg
mov
cs
xor
or
xor
and
xlat
pop
xorl
cmpb
pusha
sbb
loope
cmovo
mov
enter
pusha
add
adc
adc
adc
jmp
sub
ljmp
push
inc
push
cmp
jp
pushf
dec
or
mov
and
push
xchg
movsb
out
shrb
loope
bound
outsl
pop
test
clc
jbe
aam
sarb
cmp
xor
aam
cmp
es
jne
jl
jg
in
pop
add
jl
mov
mov
scas
mov
jne
xor
push
jne
lods
and
mov
pop
scas
fimuls
addr16
fistps
gs
aas
mov
adc
inc
xchg
incl
push
xor
push
mov
mov
subb
lcall
cmpsb
push
dec
mov
adcl
sub
lcall
xchg
xchg
adc
dec
mov
loope
sbb
jno
call
mov
gs
ds
xchg
jns
lea
cmp
scas
sub
push
aas
dec
mov
nop
mov
push
daa
mov
push
pop
cwtl
outsl
test
cld
out
int
jne
adc
adcb
insb
rcll
fmull
icebp
jnp
out
cmpsl
dec
int
mov
loop
orb
add
push
xor
jge
jle
sub
test
loop
mov
and
push
mov
mov
nop
mov
cs
cmpl
xor
dec
push
scas
pop
cmp
push
mov
push
xor
adc
cmp
mov
sub
imul
jle
mov
add
sbb
ret
or
pushf
push
insl
push
imul
mov
xchg
in
mov
mov
mov
ret
mov
test
adc
mov
outsl
int
test
pop
and
mov
repz
std
lret
ljmp
fnstenv
jg
cmpsb
push
lods
jge
or
fmulp
add
int
push
mov
mov
sahf
roll
inc
push
addl
into
cwtl
jl
shrl
jns
jnp
mov
inc
fdivrs
popa
push
sarb
pop
js
jno
lret
ja
xor
or
movsb
dec
mov
stc
cmp
adc
add
xor
pusha
daa
lcall
mov
cmp
in
sub
rcl
mov
imul
nop
xor
repnz
ficoml
dec
data16
dec
jge
xchg
sbb
mov
out
push
mov
lcall
sub
add
push
out
mov
adc
add
js
and
rcll
icebp
sub
mov
out
popf
jle
gs
push
pop
mov
out
scas
sbb
push
int3
in
jb
xchg
inc
lret
adc
jno
mov
leave
sbb
mov
pop
scas
sti
iret
inc
popa
arpl
push
ret
mov
inc
add
cltd
das
es
mov
pop
loope
int3
jae
movsl
dec
out
mov
scas
xchg
pop
orl
pusha
ret
dec
lds
sub
xorl
ds
cmp
jnp
fists
ret
movsb
mov
pop
cs
xchg
inc
popf
and
cmpl
test
test
insb
mov
orb
hlt
insb
adc
pcmpeqw
dec
add
mov
sbb
push
mov
or
mov
or
jno
sub
add
negl
int3
push
lahf
mov
dec
xor
xchg
sub
mov
fcmovne
ret
shrl
inc
sbb
popa
push
jle
out
sub
mov
xor
push
cltd
or
pop
gs
add
fst
in
sbb
repnz
mov
fs
mov
cmp
mov
sbb
adc
push
mov
lcall
mov
mov
push
dec
cli
mov
in
int3
cld
hlt
loope
fstpl
pop
int3
and
mov
inc
stos
mov
pop
ljmp
stos
add
jbe
pop
jbe
or
shlb
nop
iret
xchg
ljmp
pop
cwtl
sub
popf
daa
xor
mov
xorb
pop
out
imul
lret
pop
push
add
jmp
xchg
mov
and
mov
inc
pop
dec
cmp
rclb
sarb
shrl
xchg
add
rorl
push
mov
jbe
repnz
sub
sub
dec
mov
jle
xor
ss
insl
mov
leave
or
mov
mov
int
fsubrl
mov
jmp
jnp
movsb
jb
and
call
lcall
aaa
xchg
inc
pop
repz
inc
in
mov
std
ficomps
pop
inc
in
sbb
dec
rorl
pusha
fisttpll
pop
fcomp
mov
pop
pushf
mov
mov
push
outsl
int3
stc
push
xor
jnp
inc
cmp
mov
push
sti
nop
cltd
mov
jmp
cmp
mov
push
loope
pop
imul
cmpsl
jne,pt
pop
or
dec
push
sub
je
aas
mov
and
jge
data16
andb
inc
inc
and
call
mov
sbb
or
xor
dec
testl
dec
jbe
into
scas
inc
cwtl
pop
jb
push
sahf
adc
imul
pop
push
mov
in
mov
push
mov
push
cmovo
inc
add
jge
jle
push
jae
sahf
and
fisubl
nop
lock
test
or
jl
orl
push
xor
xchg
dec
insl
aas
xor
cmp
stos
lahf
in
sbb
mov
stos
mov
loopne
adc
dec
hlt
out
dec
push
mov
jno
push
cmp
and
dec
lods
popa
cmp
shrb
jae
xor
push
pop
jl
add
jno
fcomps
lock
xlat
or
sbb
adc
insl
mov
xchg
loop
mov
sub
movsb
inc
push
cltd
or
in
cmp
push
pop
stos
addb
mov
jnp
xor
icebp
fisubrl
adc
int
insl
pop
jnp
sub
cli
xchg
aam
sti
in
loope
decl
adc
popf
call
xor
cmpsb
cs
inc
out
das
pop
sub
pop
and
push
mov
sub
lds
mov
lock
addr16
out
dec
stc
incb
or
and
aad
push
fcomp
push
pop
pop
fwait
cmp
js
push
sar
xchg
dec
les
shll
mov
mov
outsl
rolb
adc
mov
ljmp
push
add
dec
sbb
jae
mov
push
xchg
jl
mov
push
stos
test
das
pop
shl
push
inc
fs
adc
xlat
fwait
cmp
jns
in
cmp
clc
decl
jmp
or
sub
xchg
push
cmp
jo
ds
sahf
sbb
imul
add
and
movsb
pop
pop
dec
fsts
or
imul
lret
inc
xor
fiadds
cmp
iret
ds
xor
mov
dec
faddl
sub
mov
cmc
mov
jb
push
sub
sub
lods
xchg
test
rorl
enter
mov
lret
leave
inc
mov
in
in
add
scas
repnz
scas
fwait
sub
and
cmp
cmp
xlat
jne
cmp
stos
adc
nop
ss
xchg
repnz
xchg
and
cmc
mov
rcr
sub
sbb
fstp
sahf
mov
aaa
jno
mov
fsubs
adc
pop
xor
adc
xchg
add
test
xchg
or
lret
ljmp
mov
fistl
ret
arpl
push
cli
push
push
mov
int3
pop
clc
mov
sbb
mov
xor
mov
movsb
sahf
les
dec
lods
in
and
push
enter
push
xor
push
imulb
in
mov
aas
xchg
lret
mov
loop
adc
dec
adc
js
lret
mov
movsl
xchg
mov
jo
bound
call
pop
inc
out
jne
mov
push
mov
mov
pop
shll
dec
mov
xlat
movsl
rcll
pop
sbb
test
lea
sub
jge
adc
jg
test
cltd
lcall
outsb
into
aam
in
cmpsl
lgs
fildll
outsb
pop
pop
mov
pop
inc
mov
fstl
xchg
cmp
insb
cwtl
nop
je
cltd
loopne
cli
mov
mov
push
mov
dec
pop
push
cmc
addr16
mov
pop
xchg
lods
pop
or
push
je
jl
popf
cmp
leave
inc
in
lds
push
and
aaa
jecxz
aam
push
outsl
mov
ja
jp
mov
fidivrs
cmp
test
fidivs
sahf
in
mov
adc
lret
mov
addr16
pushf
push
pushf
or
dec
xchg
stc
push
or
clc
lcall
cwtl
das
xor
inc
icebp
adc
test
jo
fmuls
xchg
sub
mov
sub
xor
xor
or
cmp
addr16
jg
xchg
push
hlt
push
incl
inc
push
test
cvtpi2ps
sahf
ret
movsl
pop
mov
and
and
loopne
popa
shll
push
imulb
sahf
jg
fwait
leave
pop
test
je
pusha
cld
or
xchg
cwtl
or
sub
inc
aaa
mov
dec
mov
cmovg
adc
inc
sbb
mov
int
xchg
inc
outsb
and
cld
mov
adc
dec
sbb
and
imul
cmpsl
sub
negl
push
cmc
fs
mov
sub
ljmp
cli
xchg
inc
cmp
in
add
lods
jmp
lods
mov
lret
lods
mov
dec
pop
dec
dec
xor
jecxz
adc
mov
lods
orl
mov
or
or
popa
or
sub
jae
ds
ss
cmp
inc
mov
jns
les
lds
movsb
popa
fs
cmp
inc
lds
adc
out
stos
inc
test
stc
push
lret
in
das
jae
rorb
mov
pop
jge
outsb
jne
jecxz
cli
gs
add
mov
rcrb
xchg
imul
inc
jl
lods
push
and
jo
pop
fwait
enter
js
cwtl
dec
fwait
add
fidivrl
sti
push
jle
cmp
movsb
push
mul
aad
xor
sbb
mov
cmp
fldl
dec
mov
ret
outsl
mov
ret
orb
cmp
je
ljmp
fdivrs
mov
js
inc
cltd
lcall
dec
add
sub
add
sub
inc
repnz
dec
or
shlb
fstpl
es
dec
data16
inc
push
out
xchg
les
ljmp
popf
or
and
push
ss
sub
aad
adc
or
aaa
sti
icebp
bound
icebp
arpl
cmp
cmp
jle
incl
outsl
inc
inc
lea
mov
pop
add
leave
or
or
ljmp
outsb
repnz
inc
loop
hlt
pop
pop
sbb
inc
out
test
xor
push
pop
xchg
stos
mov
fdivrl
jno
stos
jle
dec
outsl
out
pop
cs
fdivrs
scas
out
adc
cmp
mov
ficompl
pop
mov
mov
test
lahf
icebp
ror
dec
stos
mov
nop
mov
mov
scas
jne
cmpsb
adc
clc
ljmp
movsb
out
dec
and
call
push
fcompl
add
mov
ljmp
and
aaa
mov
call
leave
iret
sub
adc
sahf
pop
inc
xorl
mov
cltd
cs
sbb
sbb
enter
sbb
pop
into
add
mov
outsb
sub
clc
push
addr16
mov
mov
inc
push
add
call
movsb
push
mov
jae
and
incl
pop
ja
out
cmp
cmc
ffreep
pop
roll
psubsb
xchg
or
xchg
movntps
lock
rcrb
adc
sub
push
imul
cli
in
add
lods
mov
std
xchg
loopne
dec
hlt
shlb
loopne
addr16
jge
add
inc
ss
in
fcompl
shrl
sub
mov
push
and
sub
pop
test
adc
hlt
mov
enter
push
push
xor
sub
dec
push
cmp
icebp
arpl
iret
dec
insl
xchg
mov
cmp
lods
pop
out
loope
push
or
sbb
push
rcrl
mov
pop
int3
xchg
or
mov
loopne
xchg
daa
jnp
xor
lahf
repz
xchg
xor
add
psllq
inc
lods
data16
pop
js
fisttpll
mov
mov
mov
sbb
jnp
pop
in
mov
cmc
stos
shrl
hlt
daa
arpl
jae
insb
adc
test
xchg
loopne
andb
or
xchg
aad
push
xlat
sbb
rcr
dec
pusha
fldcw
inc
int3
cli
rcll
dec
xor
in
fidivs
fcoms
divl
sbb
scas
in
xchg
lods
or
icebp
lcall
mov
xchg
popf
addr16
push
data16
js
jmp
or
xor
fucomi
cld
jl
or
insb
xchg
mov
popa
push
rcrl
leave
push
int3
mov
dec
xor
and
out
popfw
jns
push
dec
call
pop
mov
sub
add
xor
sar
mov
mov
les
fsubs
int
dec
outsl
jbe
mov
cmp
sar
mov
inc
mov
or
pop
mov
or
and
icebp
xlat
stos
jns
mov
shrl
jb
imul
adc
push
outsl
push
adc
sbb
ret
subb
ds
inc
in
popf
enter
or
push
and
hlt
lcall
hlt
sub
fcoms
push
jl
jnp
jnp
mov
fstps
mov
test
jmp
ja
loop
ss
xchg
in
in
jb
ja
dec
cmp
lret
push
adc
mov
mov
dec
repnz
iret
push
adc
jns
xchg
std
inc
xor
dec
push
adc
icebp
call
fsts
cmp
sub
sbb
dec
mov
ret
flds
or
rcrl
outsb
push
fwait
adc
jb
sub
scas
push
sarb
and
jns
xchg
fmul
jnp
mov
mov
enter
stos
cmp
dec
insb
out
pop
out
push
fisubs
or
mov
push
pop
gs
insl
js
lds
test
sbb
pop
pop
push
cmp
imul
push
inc
popf
enter
xor
xorb
leave
and
mov
insb
bound
add
lea
les
push
or
mov
insb
inc
and
test
repnz
push
repnz
shrb
inc
dec
mov
mov
out
sub
mov
push
sbb
in
mov
fnsave
mull
jp
jecxz
sbb
ja
fsub
cmp
cmp
lcall
inc
rcll
in
add
push
negb
cmp
inc
push
xchg
pushf
aad
xlat
mov
fcomps
pop
sub
inc
or
insl
xor
mov
inc
or
xor
stos
sub
gs
dec
pop
pop
xor
mov
js
push
add
xchg
mov
sbb
arpl
insb
sub
out
jnp
add
inc
jae
call
pop
lds
and
and
fldl
cmpsl
fdivs
jmp
mov
sub
or
repz
jae
or
adc
arpl
xlat
cli
add
mov
int3
lahf
test
in
sub
fdivrs
and
fcmovnu
ret
xchg
popa
lods
clc
data16
cltd
mov
xor
and
mov
loope
ret
push
push
jb
pop
pop
xor
or
popa
lock
push
ss
mov
and
aam
mov
ds
or
xchg
add
mov
or
xchg
cmp
xor
pushf
pushf
jmp
xchg
sbb
jnp
mov
int3
add
xchg
fcmovnu
std
mov
mov
hlt
movsl
pop
imul
jle
in
out
and
mov
push
mov
popf
popa
repnz
cmpsb
out
movsl
adc
outsb
inc
cs
xchg
outsb
jo
xchg
ds
adc
cmp
pop
sub
into
outsl
push
data16
adc
inc
test
sub
mov
or
iret
push
jecxz
or
stos
xor
pop
imul
jbe
xchg
pop
sbb
shrb
das
xchg
mov
test
cld
pop
les
add
loop
stos
insb
jno
dec
test
loop
jbe
cmp
mov
cmp
mov
faddl
lcall
jmp
sbb
mov
lods
movsb
xchg
fidivrl
add
fbld
inc
mov
or
sbb
push
jge
adc
mov
mov
arpl
sar
test
je
jnp
aaa
jle
clc
mov
push
hlt
dec
mov
jb
push
sahf
lea
in
bnd
fsts
fimuls
in
clc
fdiv
arpl
jmp
clc
jo
test
movsl
pop
sub
sbbl
mov
push
mov
cwtl
idivl
cmpb
fbld
xchg
inc
pop
lock
movsl
or
sbb
mov
mov
std
push
into
mov
or
mov
pop
outsl
sti
in
dec
pop
orb
push
sub
cmp
mov
add
jp
pop
jb
pop
rcll
mov
and
sbb
insb
fiaddl
addr16
or
add
out
push
push
adc
xchg
movsl
xchg
push
in
leave
mov
test
jae
fs
fs
ss
mov
inc
cmc
push
out
and
inc
sbb
sti
sti
fwait
addr16
lea
gs
inc
insb
dec
cwtl
push
cwtl
jns
das
or
push
lcall
hlt
push
jecxz
jne
sbb
mov
test
mov
mov
xchg
lock
dec
in
sti
outsb
iret
sub
cmp
fs
subl
add
and
push
lods
push
mov
pop
fxtract
inc
out
cmp
xchg
adc
cwtl
mov
movsl
mov
xor
shl
sarl
adc
xor
cmp
xlat
fwait
divb
repz
mov
rcll
mov
add
inc
cmpsb
pop
aad
xor
jecxz
sbb
fldt
mov
push
shl
arpl
inc
cmp
mov
and
sbb
push
add
nop
xchg
ficoms
in
movsb
push
cmp
out
dec
fnstenv
sbb
cmpsb
mov
fidivrl
sub
and
outsb
jmp
jle
push
push
pusha
mov
xchg
in
push
jle
dec
add
pop
roll
ss
test
in
lret
xor
and
jb
mov
sub
dec
je
push
aad
adc
int
jl
xchg
add
jmp
negb
mov
sub
mov
push
fs
pop
insl
or
mov
xor
mov
icebp
inc
pop
out
mov
xchg
leave
adc
xlat
dec
pop
jmp
lcall
pop
sub
push
sti
ljmp
mov
dec
push
lret
and
xchg
rorl
inc
inc
pop
dec
repnz
push
adc
sbb
dec
aad
mov
push
jnp
fidivrl
mov
mov
cmp
jno
dec
adc
dec
sub
cmp
mov
movsb
fcoms
mov
mov
imul
and
jb
xchg
jle
cmp
imul
pop
xlat
mov
pop
and
ds
pop
sbb
sbb
mov
pop
out
mov
xor
xchg
and
pop
sbb
in
sti
bound
add
mov
aas
out
push
xchg
stos
dec
jae
jecxz
aaa
xchg
mov
mov
adc
fwait
jle
jnp
push
int3
and
jmp
add
push
xor
mov
jnp
mov
jae
int
lret
push
andb
sti
jmp
mov
dec
cld
push
lret
int
lahf
movsb
jge
push
dec
aas
nop
push
addr16
sahf
rcrb
xchg
daa
hlt
jge
xchg
mov
xchg
mov
xor
aad
mov
adc
lcall
out
xlat
imul
es
fcomps
pop
popf
jns
push
shrl
subb
loopne
sub
inc
test
push
mov
add
xorb
fcomps
inc
lea
fs
scas
fnsave
ds
cmp
popf
and
lods
push
push
lods
nop
mov
ret
xchg
clc
loope
dec
nop
pusha
adc
sub
iret
inc
jle
aaa
subb
cmpl
insb
in
out
adc
dec
pushf
jb
imul
mov
jne
mov
push
inc
ljmp
jge
out
rolb
sbb
sahf
hlt
mov
setl
ja
dec
dec
push
xchg
outsb
push
xchg
leave
popa
sbb
and
das
jg
xor
add
insl
ror
sub
inc
aad
adc
xor
cli
shl
push
imul
sbb
ss
xor
pusha
movups
dec
pop
xchg
mov
mov
jmp
sub
dec
jae
lock
xchg
or
dec
js
popa
adc
inc
xchg
sti
int
fucomip
mov
or
cmpsb
fisubrl
popf
scas
inc
mov
push
mov
cmpsb
out
clc
push
add
add
sub
mov
jmp
repnz
or
icebp
cwtl
js
and
outsb
sbb
inc
lea
cmpsl
fsubl
outsl
test
lock
clc
sub
into
jns
fmull
xor
sbb
adc
sbb
xor
in
jbe
insb
in
push
sbb
mov
ret
aad
movswl
and
imul
aaa
data16
and
hlt
jecxz
sub
fcmovnu
push
pop
les
add
push
ljmp
xchg
shl
in
flds
out
addr16
jnp
aas
mov
jno
xor
jle
sbb
jg
xor
cli
or
push
test
fimuls
xor
stc
jl
movsl
movsb
push
jg
ja
sbb
test
mov
push
iret
loope
inc
push
bound
xchg
inc
pop
ja
or
lods
dec
dec
outsl
xchg
mov
xchg
aad
cmp
out
mov
loopne
mov
lock
adc
cmc
mov
adc
sbb
cmp
xchg
mov
inc
aad
daa
mov
mov
jmp
xor
dec
in
mov
mov
mov
push
jmp
mov
lods
add
mov
dec
mov
cmpsl
mov
pushl
mov
add
es
adc
lea
inc
cmp
push
xchg
lock
cltd
sub
stc
cmp
fstpl
je
mov
hlt
out
fwait
xchg
test
scas
test
xor
sbb
mov
push
stos
icebp
adc
lds
and
fdivs
imul
ljmp
dec
fldcw
or
in
lret
push
or
adc
push
cs
clc
data16
out
lock
mov
scas
lcall
mov
or
fsub
or
out
add
cmp
pop
jne
outsl
outsb
or
or
dec
aad
mov
loopne
imull
enter
dec
inc
xchg
insb
mov
setl
xchg
scas
add
popf
xchg
push
jmp
in
jb
leave
orb
sub
outsb
inc
fdivr
rdpmc
in
ret
cmpb
aad
pop
sub
loopne
push
test
and
cwtl
gs
popf
fiadds
scas
sub
fistps
mov
dec
mov
pushf
xchg
ja
mulb
sub
mov
in
cli
std
pop
sbb
and
jnp
mov
lret
jge
inc
or
out
into
pop
dec
in
scas
mov
in
sub
out
lea
xchg
lods
and
mov
sbb
xor
jecxz
mov
nop
stc
aad
js
int
out
aam
das
lods
wbinvd
in
rep
aad
pop
push
pop
lock
stos
xchg
add
or
inc
push
add
adc
call
mov
mov
lahf
je
jl
mov
push
sahf
sbb
lcall
push
in
and
icebp
insb
in
cmpsl
icebp
pop
pop
jo
inc
xchg
jb
shll
push
jecxz,pn
xlat
push
das
stc
sub
shrl
enter
ret
outsb
pop
in
cmpsb
adc
xchg
lret
pushf
leave
test
aaa
and
mov
test
dec
push
pop
push
and
loopne
pop
gs
push
mov
fistpl
mov
stc
loope
xor
inc
add
hlt
add
sbb
repz
inc
test
add
and
mov
xchg
shl
mov
xor
pushf
dec
in
cmpsb
push
leave
jge
lods
mov
and
inc
fisttpll
addr16
jb
push
mov
or
pusha
mov
mov
xchg
es
and
std
push
dec
pusha
imulb
mov
ret
sbb
and
adc
jl
xor
je
aad
jle
xor
ds
add
push
out
push
xor
imul
stos
ds
jmp
lret
mov
out
xchg
dec
aaa
movsb
int
das
divb
mov
outsb
jae
ss
bound
jb
lcall
mov
xchg
add
inc
xor
outsb
stc
je
xchg
bound
je
stos
in
sub
fiadds
xchg
and
daa
add
movsb
ds
clc
fcoml
mov
jns
lods
lret
push
and
ss
aaa
in
dec
leave
mov
and
xor
out
xor
cmp
push
imul
shl
daa
jg
and
repz
lar
lock
mov
sbb
outsl
sahf
icebp
mov
fiaddl
xlat
scas
jo
stc
mov
leave
out
pop
push
call
enter
jbe
fwait
jno
dec
xor
out
sub
jnp
xchg
movsb
add
pop
and
clc
jmp
mov
mov
flds
or
cmp
dec
jp
cli
add
xor
fbld
in
shll
add
inc
ds
jl
insb
fimull
xchg
mov
clc
mov
pop
jno
iret
out
dec
pop
cmp
sub
lds
imul
sub
dec
pop
xor
call
adc
in
pop
stc
mov
dec
pop
xchg
daa
addb
xchg
les
mov
jmp
rcll
cwtl
out
sub
xchg
mov
test
mov
aaa
sub
iret
xchg
testl
adc
mov
jp
in
jge
mov
repnz
lahf
or
xchg
enter
dec
js
pop
dec
cmpsl
push
pop
rorb
lds
xor
clc
inc
test
pop
push
aaa
sbb
daa
xor
ds
inc
mov
xchg
pop
dec
push
ja
aad
hlt
aaa
movsb
jo
push
push
pop
arpl
jmp
push
test
sti
push
scas
sahf
pushl
adc
ss
mov
push
lock
jp
aam
sarl
jno
mov
mov
andl
xchg
cld
xchg
sub
aas
xchg
cmpsb
lock
inc
insl
add
add
ja
sahf
stos
xor
inc
int3
inc
xor
jb
rclb
push
dec
jnp
dec
lds
jo
mov
fwait
adc
in
push
add
iret
jbe
ljmp
lock
push
sbb
inc
mov
adc
jae
sbb
pop
aad
dec
movsl
inc
add
mov
mov
push
arpl
adc
push
mov
cmova
sub
sub
jo
mov
sbb
mov
jl
sbb
stc
dec
insb
mov
lahf
cmp
sbb
dec
outsl
adc
mov
daa
out
cmc
aad
cmc
mov
mov
mov
test
jmp
ret
mov
dec
mov
stc
lock
int3
jge
sbb
push
dec
into
pop
fistpll
out
rorl
ficompl
xchg
out
cli
xor
xchg
fistl
in
mov
sbb
cmpsl
xchg
add
push
inc
inc
mov
fcomps
pop
xchg
outsl
repnz
stos
inc
sti
jne
inc
outsl
jnp
shll
clc
lock
add
in
cmp
iret
xchg
clc
or
mov
jo
jo
fistl
nop
xor
dec
and
mov
cmp
or
xor
xchg
aad
cltd
ret
cs
inc
xchg
movsl
push
ljmp
adc
adc
notl
ja
pop
cmp
push
sub
ljmp
and
test
jae
adc
cmpsb
lock
xor
je
sti
adc
cltd
mov
push
push
ljmp
xchg
sub
xchg
mov
mov
das
dec
adc
je
push
ss
out
int
mov
les
push
cld
dec
jmp
add
aas
jbe
sbb
ljmp
jp
aaa
pop
xchg
sti
andb
arpl
xor
es
add
xor
lahf
shld
mov
cmc
and
jo
in
and
sti
inc
cmp
sahf
jmp
les
cli
insb
fdivs
fcmovb
dec
leave
loopne
cli
ficompl
pop
cmp
ljmp
in
hlt
xchg
sahf
add
mov
lea
inc
dec
xchg
and
les
repnz
aad
pop
leave
cmp
cmp
fldl
scas
jnp
xchg
sbb
std
out
clc
jo
cld
xor
outsb
lods
insl
adc
and
shufps
jmp
insl
xor
outsb
jp
clc
int
adc
aas
cmpsl
pop
std
out
scas
add
lds
shl
jo
mov
roll
test
adc
sbb
cmpsl
and
notb
repz
sbb
test
jecxz
adc
addb
push
pop
test
inc
lds
daa
cmc
test
fidivs
sub
lcall
std
push
pop
sub
cltd
push
xor
xchg
cmp
jmp
xchg
jge,pt
pop
cmp
xchg
jge
jl
test
fnstsw
insb
icebp
mov
cmp
cmpsl
cli
test
mov
rcrb
cmpsl
dec
jns
mov
stos
fldenv
fsub
insl
into
dec
mov
fadds
add
test
xor
sbb
cmp
cmpsl
test
das
out
repz
adc
test
lock
ret
in
fsubl
xchg
arpl
mov
pop
mov
and
pusha
scas
and
popa
data16
pushf
test
ss
or
lods
inc
cmp
pop
jg
fstpt
mov
stc
stc
xchg
lods
push
gs
das
enter
mov
repz
pop
into
mov
sarb
faddp
sub
add
add
xor
or
into
loope
test
xchg
pop
mov
xchg
xchg
daa
shr
or
xchg
movsb
push
sbb
push
nop
adc
aaa
lret
out
cmpsl
fwait
mov
cmc
xlat
or
into
mov
mov
push
inc
in
jecxz
pop
mov
fnstsw
mov
pusha
filds
cmpsb
mov
jl
bound
add
push
jmp
jb
out
inc
popf
and
add
adc
mov
mov
stc
cmc
add
cli
sbb
bound
test
test
sub
inc
ss
outsl
mov
mov
lret
dec
cmp
cmp
add
out
lods
mov
mov
jns
hlt
xor
iret
xor
xchg
repz
js
inc
or
mov
push
mov
dec
and
mov
push
and
cmp
int
insb
lock
loopne
xchg
mov
test
aaa
shr
and
jge
xchg
push
dec
mov
cmp
nop
pop
insb
sahf
sub
cmp
mov
es
pop
into
js
xchg
cmp
jo
xor
mov
xor
or
test
aas
mov
sahf
sub
dec
pop
fdiv
iret
jg
inc
xchg
or
stos
dec
mov
dec
mov
shl
aad
dec
sub
iret
cmp
dec
mov
pop
inc
pusha
sbb
push
dec
out
rcrl
or
or
ss
data16
sar
das
aam
add
push
pop
shl
cwtl
fcomp
push
in
lea
gs
sbb
andl
inc
call
sbb
fildll
hlt
mov
push
imul
jne
xchg
stc
jp
daa
enter
mov
xor
mov
jl
dec
push
shll
das
pop
cmp
xor
rclb
add
loopne
fisubl
pop
jle
pop
in
sahf
cwtl
mov
lods
nop
es
cmp
insl
mov
test
mov
dec
aas
mov
push
hlt
in
in
push
cli
mov
pushf
adc
pop
mov
adc
mov
push
mov
add
inc
shrb
add
sub
cmp
lods
xlat
daa
in
std
sub
dec
mov
imul
aad
push
into
test
cmp
ret
out
rcr
push
pop
aas
mul
mov
and
or
shrb
test
addr16
rorl
sbb
aas
int3
adc
lock
xchg
movsb
mov
jno
or
or
pop
pop
dec
inc
dec
lods
push
push
jp
addr16
in
into
jbe
cmp
inc
mov
xlat
aam
mov
lods
inc
jp
mov
sahf
add
pop
pop
ja
sarb
dec
into
loop
gs
pop
int
pusha
out
push
cmc
xchg
add
pop
in
stc
adc
in
outsb
push
cmp
or
out
dec
test
int
lods
xorb
ss
or
add
popa
push
jl
inc
stos
adc
mov
push
mov
fstpl
push
mov
test
stos
mov
dec
sbb
lock
fwait
lea
mov
xchg
or
add
and
sub
testb
cmpsb
adc
data16
lock
sbb
push
pushf
push
test
push
dec
stos
mov
mov
test
lock
mov
dec
mov
jp
dec
rolb
sub
out
ljmp
test
out
push
aaa
enter
or
cmp
rol
movl
adc
rcl
dec
inc
je
mov
lret
lock
adc
scas
js
testl
repz
sbb
jne
or
jp
mov
cmc
xchg
jnp
in
test
outsl
sub
inc
fwait
dec
inc
sub
cs
sbb
mov
sub
addr16
cwtl
mov
pop
xorb
and
jle
mov
cmp
test
mov
insl
insb
mov
sbb
shrl
jl
xchg
xor
xchg
hlt
sub
mov
add
mov
inc
mov
sarb
test
or
mov
inc
je
mov
inc
mov
je
repnz
stos
mov
sub
jmp
sub
dec
add
jmp
add
inc
popf
rorl
fcoml
test
test
mov
dec
gs
or
and
loop
in
frstor
les
cli
inc
mov
mov
rcrb
and
jb
and
clc
xlat
mov
mov
mov
lods
cmp
mov
adc
cmp
vpmadcsswd
ret
cmp
shrb
clc
jmp
xor
add
or
mov
ret
popa
lret
cmpsl
jo
ret
inc
adc
sub
js
and
xor
pop
push
sbb
lret
push
call
addl
xchg
loop
push
mov
sub
addb
out
xor
mov
jo
mov
ret
jg
hlt
icebp
xor
std
jbe
and
lock
push
adc
dec
dec
and
push
and
in
push
and
xor
test
xchg
xchg
mov
hlt
ret
imul
add
mov
inc
dec
sub
add
mov
in
mov
fcomps
addl
cwtl
je
sub
test
pop
xor
sbb
adc
jbe
mov
cmp
insl
xchg
or
or
inc
cmp
aas
or
outsb
mov
or
dec
stc
sbb
jle
stos
daa
sbb
cmpsb
into
sbb
pop
add
jle
call
pusha
cmpsl
sbb
push
pushf
lods
jns
push
sub
ret
pop
sbb
or
in
mov
sub
pusha
inc
jns
jns
dec
xchg
cmc
xchg
mov
mov
xor
mov
stos
fldl2t
jmp
and
xchg
sub
xor
fldl
fsubrs
dec
rorl
jne
std
push
fistpl
pop
lock
adc
xlat
pushl
jmp
std
fprem1
sti
out
cmp
mov
push
mov
aas
mov
push
shlb
or
in
xor
ret
movsb
xchg
test
call
test
mov
push
out
cli
jle
cmpsl
aad
jb
adc
je
push
push
fimuls
mov
cmp
jp
add
aad
mov
dec
and
mov
lods
in
mov
jg
push
sbb
pop
loope
repz
mov
fistpll
jae
sub
pop
sbb
ss
loopne
daa
in
jb
push
inc
movsl
jno
or
and
test
imul
xor
mov
cmp
xchg
andl
jno
test
mov
lods
movsl
inc
imul
orb
mov
xor
xor
add
popa
and
mov
in
bound
shrl
popf
lret
in
bound
pop
in
dec
inc
push
das
cltd
test
repnz
jl
aaa
or
xor
dec
mov
es
pop
mov
jno
je
pop
adc
fxch
hlt
fimuls
stc
out
orb
test
cmp
not
cmp
hlt
cwtl
popf
enter
aam
adc
ret
je
jmp
adc
inc
mov
testl
jmp
adc
xor
push
xor
push
aad
aas
test
jmp
imul
cmp
mov
cld
ffreep
dec
cmp
cmp
pushf
int
out
mov
lds
adc
mov
daa
pop
dec
jb
mov
ret
out
test
adc
lea
cmpsl
mov
dec
mov
fdivrl
cwtl
jne
loope
sub
out
jnp
or
pop
mov
ds
test
daa
jg
cld
ja
pop
add
cmc
addr16
and
cmp
repz
stos
xchg
int
cli
dec
dec
sahf
psubsw
in
ja
xchg
pop
xchg
loope
inc
mov
fwait
mov
call
pop
jae
mov
inc
repz
aas
add
test
stc
and
mov
stos
and
mov
lods
hlt
fwait
sub
addl
adc
clc
popf
mov
icebp
test
sub
jmp
jb
into
cli
mov
sarb
cmp
xlat
scas
lret
adc
stos
inc
cltd
xor
daa
fdivs
xchg
mov
and
push
mov
inc
xlat
sahf
test
mov
shl
loopne
and
daa
lods
scas
xor
push
shrb
inc
cmp
add
ficoms
js
orl
add
cmpb
mov
ljmp
pop
test
iret
and
adc
push
xchg
sub
sub
les
scas
sti
mov
movsb
jb
push
mov
lds
adc
fiadds
pop
xchg
mov
mov
push
push
aas
lcall
mov
jmp
mov
dec
dec
pop
int3
mov
fistl
popa
js
jp
insb
dec
sbb
jae
push
stc
mov
xchg
push
les
mov
into
cmp
lcall
or
std
mov
les
mov
add
mov
inc
cmp
stos
in
cmp
out
sub
xchg
bound
call
and
pop
add
jmp
mov
in
gs
into
ds
cmpsb
sahf
call
mov
xchg
cmp
push
mov
inc
bound
push
fidivrs
leave
mov
loopne
add
outsb
push
dec
cmp
pop
int
inc
popf
repz
inc
push
movsb
mov
jnp
cmp
sub
push
ss
dec
push
inc
push
pushf
pusha
xor
fdivrp
add
aas
lea
mov
xchg
sub
outsl
sbb
mov
jno
or
into
pushf
clts
push
dec
push
xchg
jg
xor
shrl
mov
aas
jmp
scas
ljmp
aam
add
fistpll
sarb
jo
jno
fdivrl
adc
adc
pushf
ret
bound
dec
dec
pop
mov
push
jle
int3
test
popa
mov
inc
je
mov
jnp
jb
and
js
arpl
pop
jl
pop
addr16
add
pop
mov
pop
lret
adc
inc
cld
jmp
in
dec
ret
xchg
stc
shlb
jl
or
or
jl
jmp
test
nop
inc
xchg
ljmp
jmp
mov
jae
sub
nop
adc
dec
movsl
jmp
gs
lret
sbb
inc
jge
pop
or
or
adc
subl
je
jg
mov
stos
or
push
mov
mov
push
rcrb
out
push
push
add
out
fldl
pop
ret
sub
xchg
fisttps
cwtl
pushf
jnp
inc
addr16
lods
cmp
pop
dec
inc
jge
xchg
stc
popa
fcmovne
push
jg
movsb
mov
mov
mov
add
dec
sti
lds
dec
test
loopne
test
or
mov
adc
and
xchg
push
sbb
sbb
movsl
lcall
dec
push
enter
out
sahf
addb
cwtl
push
push
and
int
js
fsubr
lock
mov
mov
lahf
xlat
sub
shll
sub
repz
sbb
out
pop
gs
jg
and
and
push
out
sahf
and
sbb
jns
cltd
test
pop
push
add
lea
dec
shll
mov
in
fmull
fimuls
xchg
loop
jg
nop
scas
mov
adc
pop
sub
mov
mov
or
pop
enter
mov
cmpsb
jmp
sarl
or
or
icebp
int
push
sbb
mov
push
adc
mov
and
rclb
pop
pop
sub
pushf
cmc
or
mov
adcl
xchg
jge
das
xchg
lea
and
mov
movsb
fwait
cmp
ss
mov
sub
pop
xor
mov
inc
adc
loop
mov
inc
dec
stos
negl
jbe
add
test
fdivrs
stos
out
loop
sbb
pop
and
inc
fldl
icebp
mov
in
sub
rorl
xchg
cs
cmp
adcl
int3
xchg
in
ds
push
sub
push
cmp
cmpb
inc
nop
into
mov
in
jge
out
mov
mov
adc
adc
sbb
aas
cmp
mov
xchg
cmp
xlat
add
jg
inc
stc
out
mov
jnp
into
incb
in
scas
pop
inc
lcall
and
rcr
adc
mov
mov
add
imul
out
jno
pop
jecxz
inc
adc
jl
mov
insb
jb
sbb
mov
rolb
adc
inc
sub
stos
jmp
call
pop
jecxz
jle
popa
mov
inc
test
jecxz
stos
dec
pop
ss
mov
shll
test
ljmp
scas
xchg
mov
cs
inc
insl
fs
test
lock
lcall
repnz
dec
ja
int3
inc
out
mov
stc
lret
pop
pop
jle
push
fmull
aam
pop
cmp
sbb
sahf
mov
jge
popf
xor
mov
sbb
jns
adc
cmpb
xor
mov
punpckhdq
inc
adc
mov
out
sbb
clc
shll
cmp
fisttps
outsl
stos
fdivrl
adc
aas
pop
fidivl
fisubs
out
loope
adc
sbb
cmpsl
jnp
testb
adc
jmp
test
xchg
adc
jl
int
rcll
mov
cs
xchg
cmp
imul
jnp
mov
push
pop
out
cmpsl
xorl
push
add
pop
lahf
xchg
in
mov
cmp
push
adc
scas
xchg
stos
push
cmp
lea
sub
neg
mov
jbe
outsb
xchg
mov
or
stos
pushf
push
loopne
inc
adc
or
jb
push
xchg
in
sbb
inc
std
aas
jmp
or
loopne
inc
xchg
lods
dec
pusha
jo
inc
and
jmp
push
pop
in
ffree
cmp
test
jmp
add
push
lea
pop
aas
push
jecxz
mov
sbb
jg
stc
jle
adc
sub
clc
outsl
loope
mov
jno
nop
push
and
jmp
and
subl
and
mov
adc
add
adc
das
add
mov
and
cmp
jmp
or
xchg
mov
jecxz
gs
lret
xchg
out
or
mov
cltd
cmpsb
aaa
pop
jne
push
push
cs
mov
in
pop
inc
or
cli
addr16
lret
loope
into
or
push
out
add
scas
and
sti
sub
xor
xchg
or
jg
push
inc
mov
add
or
pop
in
pop
iret
or
sbb
fisttpl
pop
dec
stos
sub
out
jecxz
mov
jns
xchg
dec
lret
rol
arpl
cmp
test
and
mov
aad
push
decl
loope
cmpsl
mov
mov
pop
aaa
add
pop
xor
mul
xor
add
mov
fildl
daa
mov
inc
and
jp
xchg
leave
sbb
cmp
push
xor
loop
add
mov
adc
stc
ja
dec
ljmp
loope
xchg
inc
das
mov
nop
push
sub
dec
inc
mov
aaa
push
shr
aaa
pop
push
dec
ja
dec
mov
xor
pushf
mov
insl
xor
mov
out
adc
stc
jle
add
xor
push
lods
adc
xorl
mov
dec
dec
or
pop
js
lock
enter
ror
mov
inc
ret
movsl
xor
mov
popa
dec
pop
out
mov
daa
hlt
lods
cld
testb
ljmp
cmp
idivl
scas
data16
pop
sbbl
adc
jns
sbb
stos
pand
call
mov
inc
in
inc
daa
jl
mov
mov
pop
lret
xchg
cmp
lret
dec
fstpl
pushf
push
stc
std
std
mov
and
das
sub
pop
jnp
cmp
push
inc
pushf
jle
sub
cmp
mov
arpl
std
sbb
andb
sahf
jl
xchg
xchg
push
dec
das
loopne
call
lret
cmp
jns
xchg
add
pop
jl
sbb
test
inc
loopne
push
incb
adc
cmp
add
lret
pop
pop
lods
jb
sub
dec
mov
sar
ss
ss
or
inc
mov
pusha
fldcw
mov
test
outsl
mov
xor
pop
enter
adc
nop
mov
lds
and
mov
dec
ja
pop
xchg
dec
push
cmpsl
int
out
ret
mov
push
fbstp
loop
inc
leave
sbb
pmulhw
mov
xor
adc
add
adc
inc
jne
ljmp
jo
lcall
cwtl
adc
inc
lods
out
stos
jnp
repz
in
add
adc
mov
jnp
dec
and
jmp
arpl
in
inc
pop
and
xchg
idivl
pop
out
pop
ja
cmpsb
jle
mov
je
inc
add
cmp
gs
out
mov
outsb
fwait
dec
xchg
sbb
scas
cmp
loopne
push
bound
jne
aaa
inc
scas
incb
lahf
xchg
mov
xor
fdivs
pop
xchg
pop
xchg
hlt
mov
dec
jecxz
mov
pop
cmp
decb
test
sbb
xchg
mov
imul
ja
cwtl
add
sub
mov
add
mov
repz
or
fidivs
sbb
sub
add
pop
cmpsb
sub
jno
cld
pop
lret
int3
movsl
mov
aad
add
cmc
shrl
fnstcw
aaa
fidivs
mov
mov
mov
ja
dec
jns
add
sbb
fisubrs
into
rcrl
and
fs
lret
jbe
popa
fiadds
rorl
inc
movsb
scas
sub
mov
mov
adc
ret
in
pop
fcomip
shrb
sbb
scas
and
rcrl
push
pop
dec
lret
mov
dec
or
jae
enter
xchg
mov
bound
das
adc
lcall
mov
inc
mov
fistpll
mov
sub
and
rorb
mov
mov
mov
mov
test
dec
pushf
divb
nop
test
xchg
pop
and
imul
lcall
nop
cmp
sub
aas
dec
incl
push
lahf
out
xlat
jnp
and
repnz
inc
mov
into
mov
xchg
insb
sbb
bound
push
int3
pop
adc
xchg
into
xchg
dec
or
sbb
jae
xorb
ds
in
jge
pop
js
nop
dec
mov
pusha
aam
stos
sbb
daa
jns
scas
aaa
jecxz
jno
adc
sub
lods
adc
mov
clc
push
and
xchg
dec
popa
jmp
and
lock
mov
int3
icebp
mov
sub
xchg
jle
mov
pop
jnp
inc
js
pop
push
dec
push
xchg
test
inc
ret
add
loop
loope
adcb
cmp
bound
imul
pop
je
jge
in
xchg
icebp
mov
pop
icebp
cmp
dec
inc
jne
lret
xor
dec
int
xchg
lods
mov
pop
sbb
test
xchg
aam
imul
mov
pusha
pop
iret
dec
mov
imul
jb
test
adc
push
push
pop
mov
push
push
cs
cmp
mov
addb
pop
mov
icebp
push
adc
inc
push
push
aam
or
add
jl
sbb
jne
xchg
bound
into
jecxz
fs
cmp
mov
addr16
or
mov
bound
pop
inc
adc
pushf
push
repz
pushf
inc
orb
xchg
and
testb
pop
test
test
je
into
lcall
pop
jge
mov
mov
std
mov
sbb
mov
popf
and
loopne
lcall
rorb
adc
xor
xor
sub
addr16
xchg
mov
inc
and
and
jge
ror
ljmp
imul
mov
xor
cmc
mov
scas
sbb
sbb
jbe
lahf
xor
xchg
push
push
ljmp
mov
pop
cmp
fadds
pop
sbb
fldt
pop
add
movsl
andl
fdivr
into
addl
inc
xchg
rolb
outsb
aas
inc
push
cld
scas
jmp
dec
ret
or
sti
shrb
cltd
loopne
movsb
sbb
or
mov
cwtl
ja
add
mov
mov
imul
fs
adc
pop
jge
cmp
xchg
fdivr
pop
loope
pop
push
inc
insb
cs
mov
xor
test
mov
sti
xor
cli
pop
fildll
gs
push
sbb
sbb
divb
out
add
push
mov
mov
mov
mov
inc
sub
pop
insb
lret
cld
sub
repnz
push
outsl
mov
aas
pop
mov
dec
mov
cmp
add
pop
rcrl
dec
add
loopne
mov
sub
js
mov
mov
cmp
mov
cli
mov
pop
fldenv
scas
jle
iret
push
shll
mov
aas
ljmp
das
add
negb
pop
pop
into
mov
xor
mov
pop
arpl
jge
adc
repnz
jbe
cmp
push
out
jg
jb
fldl
in
ja
adc
mov
pop
test
jle
andb
scas
pop
mov
dec
ficomps
out
add
push
sub
mov
pop
inc
cmp
js
cmp
pop
in
push
fisubl
mov
loop
push
andb
shll
loop
ds
mov
stc
mov
mov
jb
xor
cmpsl
xor
xor
out
sahf
lds
aam
jnp
iret
mov
scas
pop
sub
mov
mov
fisttps
int
jne
mov
outsb
cmp
adc
mov
push
adc
dec
xor
cld
jmp
dec
lahf
popa
dec
cmp
mov
dec
in
imul
fildll
mov
fsts
or
xlat
loopne
jb
fcompl
dec
test
or
pop
test
sbb
inc
clc
sbb
cmp
jae
stos
dec
push
repz
jge
in
testl
adc
xchg
xchg
push
or
stos
push
or
fidivrl
push
movsb
and
push
xorb
les
mov
cmpsb
jne
push
jg
addr16
mov
adc
cmp
push
scas
mov
in
hlt
mov
ja
orl
mov
jp
enter
fwait
lods
jb
sub
inc
xlat
in
adc
inc
xor
pushw
lcall
push
les
rorl
das
xor
dec
and
test
std
lods
add
dec
aas
stos
push
push
jge
lock
pop
shl
sub
pop
pushf
std
cmc
rol
sbb
out
mov
sub
shrl
xchg
dec
mov
sarb
adc
cmp
loopne
dec
dec
cmpsb
xor
mov
popa
daa
loop
cld
cmpsl
dec
out
push
sbb
in
fst
push
fnstsw
dec
adc
out
aas
out
out
sti
test
clc
push
push
fst
add
das
xchg
adc
push
dec
leave
scas
jno
sub
xlat
dec
shr
push
xor
fdiv
sbb
mov
aas
add
and
outsb
pushl
xchg
adc
push
das
mov
int3
xchg
sahf
into
dec
jno
add
push
dec
jmp
cmp
idivb
jecxz
lods
fldl
fdivl
daa
popf
flds
mov
sti
andl
push
scas
and
mov
jb
testl
mov
clc
lret
dec
out
inc
add
sbb
sub
gs
dec
mov
jae
xchg
or
inc
in
popa
in
push
ret
sub
addr16
into
ljmp
inc
xchg
dec
data16
loop
push
lds
jp
jmp
adc
pop
fistl
fsub
mov
and
or
mov
insb
and
add
ds
push
mov
adc
inc
xor
pop
cwtl
test
mov
lea
inc
in
nop
jbe
jecxz
test
pop
lret
outsl
dec
popa
lds
xor
stos
adc
or
outsl
fwait
mov
cwtl
or
cli
mov
scas
mov
stos
loopne
mov
gs
mov
push
pop
roll
movaps
pop
dec
fcompl
dec
pop
xor
pop
jp
and
mov
pusha
int3
gs
stos
push
aad
xor
ret
pusha
pop
bound
adc
xchg
mov
in
sub
xor
cld
push
xchg
loope
or
int3
das
inc
xor
cmp
das
sbb
andl
add
ss
xchg
and
and
jge
mov
test
jne
mov
lock
add
in
icebp
out
ret
in
mov
inc
test
xor
insl
mov
scas
and
into
sbb
mov
adc
xchg
cld
inc
jle
jns
pop
movsl
call
jno
pop
test
bound
ss
sbb
fdivs
outsb
mov
test
into
and
or
repnz
xorb
cmp
insb
mov
lds
test
fiadds
adc
xor
cwtl
jnp
out
adc
iret
dec
push
addr16
inc
jnp
pop
lods
push
xchg
out
push
add
lds
hlt
int
pushw
cmp
xor
adcb
les
lods
fcmovb
movsl
xchg
mov
cmp
push
enter
dec
ja
test
xchg
xor
dec
das
add
negl
and
lock
jg
push
push
sbbl
cwtl
out
inc
mov
std
mulb
scas
mov
push
imul
xchg
add
sbb
sti
cld
pusha
mov
inc
sbb
and
shrb
pusha
inc
pop
jmp
push
mov
aad
ljmp
mov
mov
jmp
insb
mov
gs
cmp
mov
mov
xchg
sti
jae
jo
and
mov
pop
cmp
xchg
sti
adc
mov
ret
aaa
or
xchg
or
and
insl
cli
stos
xorl
les
lea
xchg
push
mov
adc
aam
ret
in
mov
sar
pop
mov
hlt
inc
and
xor
dec
and
in
paddq
push
lret
cli
jge
jne
lock
sbb
cli
popa
std
push
mov
lea
icebp
mov
xchg
xchg
push
and
mov
mov
jge
filds
add
test
es
ss
cmc
jo
stos
lahf
clc
sahf
pop
out
scas
xchg
sti
mov
rolb
xorb
pop
in
les
leave
popf
adc
xor
pop
xchg
mov
fcmovu
xchg
pop
mov
mov
pushf
push
adc
dec
xor
aad
dec
pop
jnp
xlat
scas
je
xlat
mov
push
leave
adc
mov
push
mov
ret
mov
push
imul
or
push
movaps
adc
out
imul
inc
out
shr
inc
xchg
aas
sti
mov
adc
dec
lods
aas
imul
adc
sbb
push
repz
mov
dec
sahf
pop
in
mov
jb
dec
pop
mov
lret
paddq
rolb
nop
loope
ja
jo
ret
in
lods
mov
add
jnp
xor
sub
into
xor
mov
aam
inc
aad
adc
pop
loopne
scas
lret
movsl
sub
xchg
xor
fidivrl
add
outsb
test
cmpsb
into
lret
sub
loope
in
push
mov
mov
and
je
push
mov
mov
leave
ss
and
dec
sbb
fdivrl
repz
jl
jnp
clc
sarl
mov
pop
repnz
sub
enter
push
and
movsb
cmp
pop
loope
lahf
lds
sbb
out
push
mov
adc
push
data16
fnstcw
push
inc
aaa
out
inc
adc
call
lods
insl
imul
xor
iret
pop
flds
inc
sub
int3
adcb
fidivrl
gs
insb
pop
popa
pop
adc
ret
andb
mov
mov
cmpsb
inc
arpl
jle
leave
cmp
push
sbb
scas
push
mov
xchg
fcompp
sub
and
mov
xchg
sbb
pusha
push
add
push
ror
lods
mov
add
fwait
cmpsl
lahf
cmp
imull
insl
push
pop
mov
mov
fmuls
mov
scas
adc
xchg
jl
fldcw
lds
xchg
cli
mov
mov
ret
jle
pushf
push
push
sub
sub
or
in
fists
dec
shrb
pop
adc
loopne
mov
or
lahf
mov
lcall
aam
mov
jmp
ljmp
cmp
movsb
icebp
adc
push
mov
test
enter
adc
and
cld
fsubrp
insb
lahf
outsb
lret
xchg
test
stos
xchg
es
xchg
pop
pop
push
in
xchg
or
xchg
and
cmp
push
pop
dec
add
add
xor
xchg
lock
inc
incb
sbb
into
inc
imul
addr16
and
push
add
and
lcall
into
xor
cltd
fs
ss
push
data16
xor
xchg
xor
pop
addr16
das
addr16
dec
pop
add
out
push
lcall
iret
ret
std
ret
popa
push
jmp
mov
imul
cmp
scas
xchg
adc
scas
push
jbe
push
outsb
movsl
movsb
mov
jae
jle
cmpsl
outsl
stc
mov
xor
add
pushf
es
fcomps
mov
add
sbb
push
jnp
repnz
sahf
leave
lds
movsb
popf
dec
cmp
scas
imul
mov
mov
pop
mov
push
cwtl
push
bound
in
xchg
cmc
jecxz
pop
jne
fbstp
das
adcb
stos
mov
xchg
in
lret
add
rcrb
jnp
sbb
xchg
pop
xchg
mov
outsl
or
daa
and
mov
dec
inc
cmpsb
sbb
fdivrs
add
adc
or
jmp
je
lret
fs
xor
and
popf
iret
sbb
notl
sbb
mov
adc
fidivrs
test
push
cltd
jbe
lods
sbb
and
inc
or
mov
adc
adc
je
int
cs
and
fwait
mov
add
ret
stos
nop
mov
or
lcall
imul
xchg
in
xor
mov
xlat
pop
roll
ljmp
dec
fistpll
push
xchg
xor
mov
cmp
pop
cmp
pusha
fwait
in
push
and
loop
sub
in
sti
sbb
jb
mov
std
hlt
adc
test
jne
jne
lods
imul
test
mov
pop
ja
xor
das
loopne
sbb
pop
mov
add
stos
cwtl
or
add
jne
int
lods
pop
dec
push
out
aas
sbb
shrb
and
dec
mov
out
std
lock
clc
mov
inc
or
mov
dec
shl
fldl
scas
pop
inc
mov
jo
and
mov
or
mov
test
mov
sbb
push
xchg
inc
xchg
xchg
dec
out
cmp
out
dec
jae
fnstsw
cli
mov
out
cli
pop
repnz
enter
stos
int3
testb
mov
cmp
push
inc
sbb
xchg
fsub
or
cmpsl
popa
inc
inc
in
inc
inc
rorl
push
jnp
xchg
fcoms
pushf
test
mov
in
js
scas
cmp
pop
cltd
and
enter
shll
stos
mov
dec
dec
or
xor
inc
push
xchg
mov
sub
mov
inc
shll
inc
fistpll
push
addl
mov
dec
adc
nop
mov
ljmp
popl
mov
data16
and
mov
mov
jns
jb
int3
cmp
and
jmp
jbe
and
xor
and
dec
cs
dec
cmc
insl
test
sub
xchg
sti
repnz
ljmp
sub
jae
fisttpll
jo
out
setge
mov
nop
jge
popf
aad
xorl
or
fdiv
xchg
or
mov
aas
jne
add
rorb
adc
inc
xlat
gs
jne
xchg
stos
inc
out
dec
int3
sarl
xchg
push
cld
jle
xchg
clc
push
cmp
imul
jb
xchg
ror
data16
jns
pop
sti
mov
mov
insl
repz
out
xor
pop
out
aas
sub
mov
repnz
lret
ret
adc
and
mov
nop
test
jae
or
sub
sub
adcl
imul
mov
xor
jno
mov
pop
mov
sbb
or
lahf
in
int
outsb
pop
ret
adc
dec
and
fcoml
ret
xchg
cltd
and
jnp
xchg
rol
aam
push
into
je
dec
add
test
call
shrl
push
or
dec
fs
addr16
pop
out
jae
insl
xor
lret
je
insl
test
pop
xorl
xor
mov
pop
adc
inc
mov
imul
vucomisd
adc
mov
ret
shlb
xchg
psrlq
dec
sar
scas
sbb
sub
vhaddpd
test
out
jl
push
xchg
hlt
repnz
cmp
cltd
rclb
aas
popf
xchg
stos
xorb
ficoms
inc
ljmp
mulb
cli
push
inc
pop
enter
dec
jne
lock
jmp
xchg
testl
mov
ficomps
push
mov
mov
adc
dec
fsubl
repz
lock
fisttps
ljmp
stc
adcl
loope
arpl
mov
push
ljmp
push
jae
jne
xchg
dec
jle
jge
pop
inc
mov
stc
xlat
pop
outsb
xor
fwait
sbb
lcall
or
es
and
sarb
add
or
addr16
test
jmp
or
inc
pop
mov
mov
test
nop
popl
sbb
push
push
inc
lret
add
or
cmp
jnp
push
xchg
pop
jnp
push
fisttpll
dec
adc
daa
clc
scas
mov
mov
mov
sbbb
jbe
cltd
mov
mov
push
mov
mov
les
inc
into
int
and
push
js
pop
sarb
push
cmp
out
ret
lock
jmp
adcl
movsb
xorl
bound
fdivl
mov
ficoml
rclb
iret
inc
fsts
inc
dec
mov
popf
lret
mov
fdiv
scas
xchg
sarl
dec
in
in
push
icebp
mov
jge
je
and
sti
into
cmp
push
lods
mov
xor
out
push
jp
push
pop
das
insl
xlat
adc
mov
pop
subb
jo
push
xchg
mov
mov
pop
or
out
loop
mov
std
loopne
test
inc
es
inc
jo
mov
sub
add
vpmulhw
or
and
xchg
mov
mov
push
addb
divl
sbb
adc
int3
aam
push
inc
repnz
ja
cwtl
rcrl
cmp
ds
mov
add
emms
cld
mov
adc
dec
jle
pop
sub
sbb
add
pop
sbb
int
push
idivl
and
pop
push
jnp
push
inc
negl
xchg
addr16
imul
push
jne
fsubrs
sar
cmc
xchg
divl
push
loope
mov
adc
add
pop
shll
sbb
les
and
shrl
xchg
insl
pop
pop
idivb
add
mov
adc
push
push
push
ljmp
std
add
jle
ljmp
stc
mov
loopne
gs
es
push
mov
adc
jp
jp
cmp
cmc
int3
mov
xchg
sub
pop
add
cld
sti
addr16
sahf
xor
mov
icebp
es
dec
cmpsl
cmp
fdivrs
inc
jle
pop
fstpt
into
fs
popf
ds
add
adc
repnz
jecxz
adc
add
jno
push
iret
les
add
mov
sub
jnp
xchg
es
sub
add
mov
hlt
mov
popf
mov
cmp
add
cmpsb
or
mov
xor
cmp
sub
fistpll
sub
insb
adc
repz
inc
jecxz
fcoml
cltd
ja
cmp
mov
add
push
push
cli
sub
add
xor
mov
push
int3
push
xchg
mov
jns
ja
mov
xor
xor
ret
pushf
adc
inc
mov
imul
pop
mov
inc
mov
mov
int
mov
enter
adc
or
shrb
cmp
cmp
cmpb
mov
lcall
pusha
das
lods
fmuls
or
loope
movsb
dec
cmpl
out
addb
push
xchg
in
arpl
push
inc
fdivrl
mov
nopl
stos
xchg
in
mov
dec
jg
and
xchg
std
test
idiv
jb
mov
inc
cmc
lock
pop
fldenv
dec
and
lock
or
test
rcll
jne
jbe
testb
jb
jno
loopne
fsubr
clc
push
adc
mov
aas
cli
pop
int
add
aas
aam
jg
aas
pop
xor
adc
ss
ret
cmp
lgs
lcall
bound
aad
sub
adc
jbe
aas
xlat
push
cmc
sbb
and
xchg
or
mov
fstpt
lret
in
push
pop
scas
mov
or
pop
mov
icebp
loop
sbb
std
push
adc
dec
xor
mov
lods
sbb
xchg
mov
iret
lds
hlt
sahf
cmp
stos
ss
mov
adcb
xor
pop
xor
cwtl
aaa
fs
xchg
rorl
cwtl
popf
push
mov
ffree
ror
dec
aam
test
stc
dec
daa
and
or
es
jecxz
sub
xor
sub
push
dec
loope
fists
add
repnz
movsl
and
or
stos
or
out
shl
cli
arpl
jns
nop
jnp
xchg
es
or
push
stc
mov
push
inc
xchg
clc
xchg
outsb
pop
jnp
dec
lret
xor
cmp
mov
hlt
sub
out
dec
and
mov
xorl
pop
in
mov
sbbl
jae
ficomps
xchg
inc
xor
pop
mov
mov
sarl
jbe
imul
xchg
mov
inc
mov
cmp
test
lahf
xchg
sub
popf
cli
in
sti
inc
lods
mov
dec
fsts
nop
outsb
lahf
ja
rorl
cmp
out
cmpb
sub
daa
adc
test
mov
test
fisttpl
dec
dec
xchg
fstl
mov
jmp
mov
fsubr
mov
inc
rcrb
mov
lret
je
inc
adc
cld
mov
mov
dec
or
js
shrl
shrw
push
dec
push
mov
sahf
jg
add
fucom
cmp
ss
cmp
push
hlt
jge
mov
aas
xorb
lea
pop
or
inc
cmp
loopne
push
stos
shlb
mov
cmp
shr
xchg
movsb
xchg
aas
iret
push
es
mov
pushf
add
or
jae
and
pushf
mov
sbb
fidivrl
add
pusha
lock
insb
sbb
repz
mov
mov
lds
add
adc
popf
sbb
mov
gs
fnsave
xor
add
adc
adc
aaa
pop
mov
ror
xor
pusha
hlt
or
in
xor
test
or
ja
or
push
mov
aam
mov
in
cmp
sub
add
ss
dec
xor
dec
loope
fistpll
out
in
push
clc
mov
fldenv
jg
mov
test
mov
into
dec
stos
mov
lea
mov
in
add
call
push
loop
scas
ljmp
out
jp
das
inc
imul
into
push
addr16
or
popf
lcall
inc
inc
sar
cltd
lds
jecxz
out
pop
inc
lds
testb
scas
sti
cmpsl
xchg
xor
mov
xor
cmp
arpl
aad
lods
push
cmp
shlb
or
pop
pushf
jmp
add
xchg
mov
shll
rcrb
xor
jg
jmp
and
aaa
and
adc
adc
add
fldl
push
les
aas
fwait
inc
sbb
movsb
xor
pop
mov
movsl
cmpsb
pop
and
hlt
test
pop
mov
lock
inc
and
pop
mov
cmp
cmp
push
or
insb
mov
xchg
inc
jge
stc
xchg
aas
cld
push
cmp
pusha
mov
mov
std
and
xchg
jno
inc
rolb
inc
sahf
push
cmpsb
fidivrs
jmp
loop
popf
dec
mov
addr16
std
pop
ljmp
pop
int
js
mov
adc
xchg
add
cmc
mov
push
fisttpl
ss
adc
mov
test
addr16
frstor
jge
cmp
cmp
sub
jg
jb
les
sbb
push
out
mov
mov
cmpsl
and
and
add
xchg
inc
int
jnp
insb
push
test
push
xor
and
mov
idivb
inc
insb
lret
cli
sbbl
fidivs
pop
xchg
movsb
insb
inc
pop
add
lods
outsl
iret
cs
sarb
inc
jo
mov
js
test
arpl
cmpsb
scas
inc
fcoml
mov
xchg
or
into
int
pop
sbb
loope
pop
adc
fsubrs
stc
outsl
inc
adc
mov
in
lock
xor
mov
mov
sti
scas
push
fstl
push
or
pop
ret
add
fnstsw
iret
iret
in
addr16
or
jle
andl
mov
and
add
daa
test
ror
mov
data16
in
lcall
aam
inc
cmp
lods
inc
jbe
and
out
and
iret
xchg
int3
push
dec
jmp
gs
sub
shlb
and
mov
inc
fsts
adc
pop
cld
call
add
fdivl
mov
cmp
mov
adc
cld
lret
jle
popa
pop
int
dec
mov
mov
loop
pop
test
hlt
sub
movsb
loopne
xor
adc
cli
push
roll
lret
ret
mov
out
sub
cmp
mov
xor
cld
sbb
mov
xchg
das
mov
iret
and
xlat
fidivrs
fisubrl
pop
shlb
daa
xchg
cmpsb
cmp
inc
call
jno
pop
mov
mov
ljmp
mov
clc
sbb
sbb
cmpsb
aam
dec
insb
rcll
aas
xchg
pop
xchg
std
dec
jl
loopne
and
lods
pop
mov
dec
jns
popf
xor
rclb
lahf
adcl
aaa
das
sbb
sbbb
push
aas
jne
pop
and
ficompl
dec
push
scas
lods
bound
ss
insl
xor
inc
sub
clc
push
lret
mov
xchg
daa
mov
adc
sahf
and
cli
scas
xchg
fsubl
aaa
fdivl
mov
jb
rorl
shr
cli
mov
jnp
add
inc
mov
inc
or
stos
jns
adc
push
scas
das
es
movsl
femms
mov
pop
inc
das
jmp
dec
lret
mov
mov
push
mov
rcl
add
test
jp
xor
dec
cmpb
jb
xchg
add
sub
jmp
iret
jecxz
pop
sub
test
add
xlat
add
sub
arpl
and
add
out
cwtl
jle
repnz
testl
jnp
repnz
sbb
loope
cmp
or
push
ds
rcl
sub
sub
and
rcrb
and
repnz
cs
sbb
nop
lds
pop
rclb
and
push
test
xchg
pop
inc
mov
jl
fnstsw
push
shrl
sub
jno
jae
in
outsb
inc
xchg
dec
mov
mov
add
mov
dec
sub
push
shl
xor
xorl
idivl
jmp
psrad
cmpsl
aam
xor
loop
xchg
dec
ss
aam
repz
leave
cmp
pop
inc
shl
xchg
cld
sub
std
sub
push
cmp
scas
stos
dec
mov
pop
nop
aas
outsl
loope
adc
mov
lcall
cmp
mov
xchg
lea
je
out
mov
cmp
lret
jno
loope
addb
xchg
aad
cmpsb
jmp
ss
repz
addl
shrb
or
add
incl
inc
push
cmp
mov
ja
sarb
adc
arpl
lcall
stos
push
sbb
sub
jmp
aam
dec
jne
pushf
dec
pop
loope
mov
sti
sets
cld
inc
nop
fisttps
mov
out
out
or
std
push
add
cli
sub
pop
in
xor
dec
repz
aad
sbb
and
int
jno
ja
jle
aas
scas
xchg
pop
rcr
loop
mov
pusha
pop
mul
cli
xchg
pop
fwait
movsb
jecxz
xor
xor
dec
iret
in
addr16
int
movsl
mov
pop
sbb
ficoml
xor
test
cltd
addr16
mov
in
hlt
dec
cmpsl
jg
stc
xor
mov
frstor
leave
push
sub
and
or
adc
roll
xchg
mov
jae
subl
imull
addr16
out
test
add
ds
mov
je
in
xchg
cmc
aas
xorb
call
repnz
ljmp
imul
lret
mov
mov
cmpsb
aad
outsb
cmp
cld
jo
pop
jge
rclb
jne
push
es
pop
mov
js
pop
or
pop
es
sub
sbb
mov
cmp
push
rcrb
ja
je
insl
xor
std
lods
mov
jl
enter
insb
bound
dec
faddl
aas
adc
dec
and
mov
ja
jnp
in
imul
loope
pop
rol
pop
out
jbe
and
xor
sub
orb
fidivl
lea
pop
add
aad
add
jp
jp
lock
lret
in
jbe
dec
sub
shl
push
rclb
sbb
stc
fs
cmpsb
mov
addr16
popf
addr16
and
je
shlb
push
jecxz
ret
dec
repz
push
out
gs
repz
outsb
test
push
insl
testl
in
cmc
inc
add
es
and
inc
cwtl
push
orb
lock
mov
data16
sarl
out
pop
pop
arpl
sahf
pop
in
mov
loopne
dec
push
adc
mov
icebp
aam
movsb
in
rclb
mov
test
adc
enter
xchg
xchg
fucomp
inc
xchg
dec
sub
mov
in
test
pop
sub
mov
sbb
aam
mov
or
jmp
call
aas
mov
inc
mov
pop
test
jge
aaa
ljmp
not
xor
inc
rcrb
int3
and
dec
int
ljmp
push
mov
adc
dec
or
popa
jae
cld
stos
pop
out
push
or
cmp
mov
mov
out
xor
add
xchg
pusha
and
jns
push
aas
shll
in
jge
push
cs
cmpsl
repz
pop
xor
scas
ss
out
sbb
xchg
adc
leave
push
xchg
lret
addl
shlb
lret
ret
push
decb
outsb
orb
dec
sahf
adc
arpl
jne
mov
nop
movsb
cmp
pop
jmp
inc
mov
loope
jne
add
inc
jns
cs
adc
mov
adc
add
push
pop
lcall
cmp
cs
cwtl
ss
fsts
clc
sbb
fldcw
iret
xchg
push
out
xor
add
ret
pushf
push
and
mov
popf
add
ret
xchg
jecxz
mov
inc
outsb
push
pop
stos
sahf
jae
and
cmp
shll
inc
daa
push
inc
cmp
int
jmp
add
dec
mov
dec
outsb
jae
loope
lahf
lea
cli
pop
dec
xchg
and
lcall
xchg
jl
ljmp
inc
push
sub
bound
loopne
mov
ja
jno
or
sahf
adc
popf
ficoml
pop
shll
jmp
imul
ja
addl
daa
push
sbb
insl
loop
push
jge
lods
aaa
inc
icebp
loope
es
cltd
call
xchg
push
mov
adc
das
pop
inc
cmp
rcrb
lods
jmp
push
xchg
mov
aas
arpl
or
xchg
stc
fstpl
mov
mov
cmpsb
leave
adc
pop
ficomps
push
xlat
xchg
movb
fadd
mov
xor
jo
pop
or
fs
mov
lret
mov
scas
pushf
std
inc
push
inc
out
push
pop
mov
mov
icebp
popf
int3
stc
idivl
ss
and
add
xchg
addb
jmp
and
cli
stc
lock
inc
insb
mov
pop
cmp
fwait
push
enter
mov
mov
rol
mov
roll
push
aam
test
aam
cld
popf
ss
js
das
fnstcw
out
jne
aam
add
jmp
mov
pop
cltd
loop
mov
ja
xchg
pop
lock
jmp
out
loopne
jne
fimull
divb
aam
sbb
jle
jo
aad
pop
push
les
or
push
jb
xchg
inc
jl
or
mov
inc
push
xchg
lock
lds
daa
cmp
out
in
add
clc
scas
pop
and
repnz
cmp
jno
fldcw
aas
das
gs
inc
loope
ljmp
add
ficoms
scas
xchg
loope
pusha
pop
stos
mov
or
popa
adc
lods
nop
ret
xor
into
sub
pop
int3
and
push
andb
push
test
sub
adc
sub
sti
mov
push
xor
div
push
mov
inc
es
cmpsb
xchg
mov
in
aam
bnd
mov
jno,pt
fdivl
js
cmp
lret
jge
hlt
mov
adc
add
pop
filds
lret
push
sahf
data16
add
mov
neg
fwait
jo
clflush
push
inc
pop
pop
hlt
sub
xchg
and
xchg
sbb
cli
cmp
sub
fwait
xor
cld
sub
mov
sarl
mov
cmp
shrb
in
std
mov
icebp
subl
pop
xchg
dec
sbb
lock
je
inc
or
mov
mov
aas
add
lcall
popf
insl
ficoms
fcoms
in
andl
fbstp
test
hlt
int
jnp
mov
pop
mov
jbe
dec
lods
lds
add
or
out
fsubrl
sbb
dec
inc
enter
cmp
fidivl
push
repz
in
jge
add
loope
test
sbb
jns
push
mov
test
lret
daa
pop
js
dec
sub
into
jnp
push
mov
jecxz
pushf
mov
adc
test
xchg
push
insb
lds
loop
rsqrtss
pop
and
adc
cmp
pushf
stc
pop
imul
outsl
mov
push
rorb
ret
addr16
stc
add
cli
mov
or
mov
pop
mov
rclb
sbb
ds
xor
mov
in
mov
cmpsb
inc
jns
out
inc
repz
mov
cmpsl
in
ja
sar
movsb
dec
push
or
imul
cmp
pusha
adc
jle
or
xchg
push
inc
out
adc
stos
mov
jp
mov
xchg
outsl
jle
lods
in
daa
in
pop
pop
mov
pop
mov
outsl
xchg
movsb
pushf
cmpsl
ljmp
lcall
bound
cld
or
je
lods
dec
mov
int3
sbb
inc
in
dec
or
ja
jge
jnp
push
xchg
cmpsb
sub
ror
test
in
mov
mov
mov
dec
jne
iret
fstl
enter
and
icebp
sub
mov
lahf
push
and
pusha
fwait
test
push
stos
jb
push
jnp
aas
and
xor
rcr
insb
lods
test
lcall
xchg
dec
aas
ljmp
mov
inc
xor
adc
sbb
punpckhwd
loope
dec
jae
fstps
shl
xchg
add
idiv
jge
push
sub
sbb
cmp
dec
fistl
sbb
fs
xor
and
and
lahf
dec
roll
rcl
inc
lods
pusha
cld
aad
cmpsl
inc
sbb
addl
pop
dec
in
jbe
fistpl
mov
dec
mov
inc
mov
or
daa
fmulp
push
adcl
iret
imull
icebp
jp
push
cmp
xchg
pop
movsl
jbe
cmpsb
and
pop
dec
xchg
sub
jp
pop
xorl
sarl
shrb
out
inc
fistpll
imul
mov
inc
mov
stc
mov
js,pn
xlat
pxor
sbb
popa
jne
or
sbb
into
sub
fs
adc
inc
jg
cmpsb
out
mov
and
mov
jbe
push
pop
add
adc
add
stos
stos
or
test
cmp
fsubrp
loopne
fsts
mov
dec
xor
mov
push
cmp
sti
ds
insb
es
repz
inc
pop
hlt
sbb
mov
les
fldt
mov
dec
int
sbb
fistpll
std
mov
lods
sbb
push
pop
add
add
test
in
rclb
pop
lods
mov
aaa
jns
add
dec
adcl
movb
test
adc
inc
mov
jl
dec
std
rcr
shlb
adc
mov
stos
lods
cmp
and
in
ds
js
pop
scas
stos
in
cmp
ficomps
gs
decb
cmpsl
inc
mov
xchg
mov
xchg
or
inc
add
cmp
add
int
pop
dec
xor
xor
jmp
cmp
adc
push
jecxz
pop
add
nop
in
mov
loop
leave
aaa
push
aas
decl
and
sub
push
icebp
popf
jecxz
in
lods
and
sbb
or
cmp
inc
jl
add
jnp
out
add
cwtl
es
fstps
dec
cmp
mov
inc
gs
mul
andb
sahf
mov
lahf
icebp
out
fdiv
stc
sbb
cltd
jmp
mov
cmp
frstor
cltd
mov
testb
pop
mov
lds
nop
jnp
arpl
fisubrl
inc
rorl
cmpb
jbe
icebp
pop
mov
inc
jp
adc
loope
ljmp
insb
fwait
loop
adc
fistpll
lret
sbb
out
xchg
orl
out
cmp
fs
out
dec
xchg
mov
lods
in
imul
xor
jnp
jbe
adc
and
cwtl
inc
fldl
pop
mov
push
orb
cmp
sub
inc
dec
rcl
mov
fiadds
and
ret
adc
sbb
movsl
inc
pop
fst
push
add
cld
mov
or
rcrl
notb
dec
push
push
mov
shrl
adc
pop
xor
loopne
push
push
jle
xor
sub
lods
sti
sub
arpl
in
std
addr16
call
mov
clc
rclb
out
adc
insb
jns
imul
inc
movsb
push
cwtl
or
fisttps
test
adc
sahf
xor
cld
pusha
pop
hlt
in
xchg
pand
push
mov
lds
cmp
arpl
fcomp
mov
lds
cwtl
fisubrl
repz
mov
pop
cmp
addr16
sar
insl
push
mov
push
testb
insb
dec
aaa
inc
pusha
sbb
dec
sbb
cmp
sbb
xchg
xchg
mov
outsl
rorl
stos
sbb
out
nop
inc
or
xor
xchg
lret
cmpl
push
lret
daa
loop
lds
jge
dec
and
in
sub
sbb
adc
mov
cmp
mov
sbb
mov
jg
xor
push
mov
xchg
movsl
pop
fnstenv
mov
stc
orl
stc
scas
or
lret
int3
sub
sti
push
mov
jmp
jge
sbb
gs
iret
ss
or
pop
pop
sbb
js
inc
test
push
add
stos
sub
lds
cmp
jecxz
xor
mov
testl
loop
stos
inc
cmp
xor
test
xor
ss
cmp
inc
fldenv
mov
push
mov
inc
xchg
lcall
mov
mov
int
adc
mov
shlb
out
imul
mov
scas
mov
lret
frstor
dec
cmpsb
mov
test
mov
add
and
lahf
jmp
cmp
dec
fimull
jp
mov
data16
sub
out
mov
lret
popa
adc
push
xor
inc
xchg
mov
xor
test
cld
jmp
ss
into
add
flds
adc
adc
mov
outsl
rorb
dec
popf
sarb
clc
cwtd
adc
xchg
sub
fsubrl
clc
rcrb
rol
adc
sti
cmpl
sbb
or
cltd
cwtd
sub
popa
inc
sub
test
aad
in
aaa
push
mov
repz
lret
loope
cmpsb
pop
dec
adc
in
not
mov
ss
call
or
push
stos
xor
sub
adc
rcll
push
fisttps
cwtl
sub
ror
aam
or
in
mov
cmp
inc
add
ret
idivb
mov
pop
mov
cmpsl
mov
xor
push
ss
imul
fildll
pushf
mov
repnz
xchg
pop
int
push
leave
xor
sbb
je
iret
sub
arpl
cs
data16
lods
adc
xor
icebp
push
sub
out
stos
mov
rcrb
sub
cwtl
dec
sub
in
mov
fcomps
dec
pop
cmp
lock
ss
lock
mov
jp
jne
push
test
clc
stc
or
or
mov
jb
sti
sub
imul
pop
inc
pushf
leave
adc
es
mov
fistps
lea
xchg
add
dec
push
fidivs
mov
ds
sub
fadds
sub
cld
mov
enter
std
mov
leave
std
xchg
push
and
mov
jns
xchg
or
dec
popf
ds
or
xchg
push
adc
ljmp
pushf
inc
mov
test
daa
sbb
cmp
sub
mov
mov
adc
mov
test
sbb
int
dec
mov
out
mov
test
stos
sub
lret
dec
or
insl
fdivrl
lock
pop
mov
cwtl
sub
push
sbb
lret
rorl
dec
aas
test
sbb
stos
jbe
jns
mov
jo
sti
cltd
xor
sbb
xchg
ficomps
shll
iret
inc
sub
gs
outsl
add
cs
in
push
jp
xchg
sub
lock
jmp
xor
mov
and
jbe
std
xchg
clc
ret
loopne
sub
cmp
fcoml
push
repz
das
jae
test
pop
add
jae
or
push
movsl
fwait
push
mov
in
mov
or
fdiv
lods
lds
fsubrs
and
lahf
or
xlat
je
and
pop
push
pusha
cmp
or
arpl
dec
cmp
int3
mov
lods
jne
mov
adc
cli
in
mov
mov
xor
insb
insl
mov
adc
je
inc
inc
stos
xchg
push
dec
xchg
out
push
loop
imul
sbb
push
aas
cmp
out
ret
aad
ret
sub
add
lret
inc
or
movsl
lock
add
xchg
popf
sub
lods
pop
in
sbb
call
stos
iret
pop
inc
popa
cmc
movsb
mov
leave
or
aaa
xlat
subl
sarb
jge
rorb
ds
inc
pop
cli
in
xchg
mov
pop
push
sub
enter
aad
loop
es
adc
sub
jecxz
sbb
inc
add
mov
ret
cmp
mov
and
mov
fwait
test
shrl
push
and
inc
rcll
cmc
pop
lods
adc
lods
es
out
xchg
loopne
mov
xor
ds
fdivr
dec
test
and
in
mov
loope
cmp
xchg
pop
inc
adc
jle
cwtl
cmp
das
ffree
int3
add
sub
arpl
dec
sahf
mov
dec
insl
jmp
aaa
inc
mov
xchg
jl
mov
scas
stos
aaa
scas
sub
mov
dec
dec
xchg
pop
sub
movsb
dec
push
mov
gs
fs
cltd
fwait
push
push
jge
cmpsb
and
and
imul
push
fistps
cmp
pop
jl
cmp
push
mov
or
notl
pop
xchg
ljmp
push
mov
dec
shlb
lock
sbb
mov
xor
mov
inc
addl
movsb
pop
rcll
mov
adc
sbb
and
das
stos
insb
mov
adc
cmpsb
push
sbb
or
xchg
mov
cmp
add
lret
rorl
dec
stos
mov
arpl
xor
lds
in
out
ja
hlt
or
cltd
clc
mov
or
jg
and
jl
inc
push
mov
or
xchg
repnz
or
pop
arpl
cwtl
mov
pop
test
into
push
push
sub
pop
out
jbe
cmp
aam
inc
repnz
repz
jle
dec
cmpsl
sub
ret
push
mov
pop
mov
jno
jnp
out
repz
push
mov
mov
repnz
dec
aaa
jp
nop
adc
in
dec
xchg
dec
dec
push
sbb
filds
in
popf
lahf
jecxz
and
jo
add
ss
cmp
mov
push
cmp
sahf
sub
lahf
push
mov
cmp
cmp
iret
fcoms
mov
daa
mov
idivl
in
enter
fldl
insb
test
xor
inc
aaa
push
movsl
jns
insl
jle
mov
cli
icebp
pop
sbb
cmpsb
out
ja
out
pop
inc
icebp
nop
mov
pop
fsts
notb
ret
int3
sti
xor
dec
rcl
loop
mov
shlb
sub
pop
cmpsb
mov
je
in
out
add
movsl
arpl
lret
push
adc
nop
add
mov
shll
rclb
loop
repnz
xchg
ret
js
push
push
fscale
or
push
or
lret
call
mov
movsb
pop
jg
mov
cwtl
mov
cmpsb
mov
dec
shlb
rorl
call
insl
sbb
pop
in
jae
sub
push
in
shl
test
repz
nop
js
mov
mov
int
ljmp
leave
jns
clc
rorl
add
sbb
insb
test
add
rcr
push
mul
lahf
xorl
mov
or
lock
cmp
andb
enter
mov
fldenv
jp
sbb
fsubl
dec
xchg
and
mov
xchg
inc
jno
imul
xchg
mov
bsf
cltd
out
jg
fwait
and
xchg
pop
sbb
nop
loopne
js
push
mov
repz
int3
jno
jno
jno
jne
arpl
scas
rcrl
push
das
mov
jl
lods
mov
movsl
mov
call
cli
mov
inc
fldt
inc
shrl
jns
lea
gs
aas
out
or
iret
sbb
xchg
nop
inc
ficompl
xchg
add
inc
sahf
sbb
out
or
sub
push
enter
xchg
fsubl
mov
push
lea
popf
in
adc
cmpsb
in
inc
sbb
fdivl
jno
fs
js
repnz
repz
xor
pop
loope
imul
inc
push
pushf
xor
cmpsb
push
jnp
dec
adc
ljmp
xchg
adc
ja
push
xchg
adc
pop
pop
sbb
adc
in
push
mov
imul
cmc
es
dec
push
jae
pop
gs
mov
jmp
mov
or
lret
bound
or
cwtl
xchg
jo
or
or
aad
push
mov
add
mov
or
sbb
cmp
cmpb
xchg
inc
or
cmp
insb
hlt
inc
xor
dec
insb
jge
xchg
mov
lret
push
adc
mov
ja
aas
dec
jl
pop
xor
out
adc
dec
std
push
lock
lahf
pop
std
push
jns
xchg
push
ja
cs
stos
cmp
lea
push
shr
xlat
push
push
and
icebp
repnz
lret
pop
pop
lea
sbb
daa
mov
popf
xchg
out
push
sbb
fildl
xchg
scas
xchg
cwtl
and
fcomps
aas
outsl
stos
and
jg
fnsave
xchg
mov
inc
jl
outsb
xchg
adcl
pop
ret
push
jp
mov
inc
pusha
cmc
sbbb
in
pop
cld
clc
mov
push
mov
rcr
push
adc
lds
cmp
jmp
aam
and
dec
inc
cmp
sti
jnp
mov
outsb
je
aas
andl
jo
mov
fldenv
sub
scas
rorl
mov
sarl
movsl
mov
jns
dec
jnp
or
cmpsl
mov
stos
lret
ljmp
cmp
mov
lahf
aad
xchg
cmp
pop
sbb
sub
scas
and
mov
int3
jg
sbb
cmp
ss
and
inc
out
mov
lahf
addr16
idivb
sti
shrb
sub
outsb
xchg
pusha
outsl
push
imul
loope
jnp
scas
addl
jle
iret
or
add
repnz
jbe
push
mov
mov
push
ss
and
cli
test
call
scas
imul
je
pop
sahf
jecxz
push
xchg
ja
iret
xchg
pextrw
xchg
in
mov
jle
ret
in
in
or
adcl
dec
ss
outsl
out
lods
cmpsb
ret
lret
or
jns
inc
mov
ret
outsb
jns
push
dec
flds
pop
jecxz
cmpsb
and
xor
lret
pop
sbb
sbb
loope
shrl
pop
inc
inc
lea
or
mov
out
mov
or
lods
mov
lret
fs
push
add
dec
notb
sti
mov
in
jl
add
mov
imul
dec
imul
dec
jle
push
inc
arpl
mov
loopne
hlt
insl
xchg
push
inc
insb
cltd
test
in
cmp
movsb
push
dec
jne
seto
in
aam
cmpsb
out
ficomps
jae
cltd
leave
jae
insl
cmp
dec
test
movsl
into
ret
movb
inc
pop
dec
mov
cmp
sbb
daa
mov
cmpsl
pop
add
or
mov
inc
cmp
lods
lods
ret
dec
inc
cmp
jl
jne
and
cltd
push
mov
fstpt
fildl
lds
inc
push
or
ds
mov
hlt
add
daa
bound
or
jecxz
cmp
xchg
test
das
jge
adc
or
in
pop
add
in
sarl
cmp
pop
xchg
cld
addl
ja
and
aad
and
imul
push
xchg
outsb
test
aam
lret
jmp
xchg
mov
jb
iret
or
inc
pop
jecxz
sub
sub
cli
mov
jne
add
xor
push
out
lds
incl
xchg
rcll
or
rorb
mov
gs
xchg
aam
jno
inc
bound
dec
and
lret
int3
pop
arpl
cmp
scas
ljmp
stc
movq
inc
imul
in
dec
sub
fwait
shl
mov
pop
mov
sub
repz
das
das
and
ds
out
daa
dec
adc
cmpsl
aas
xchg
aas
sub
mov
jno
icebp
fs
fsubs
arpl
adc
sub
insb
dec
jae
fmul
lock
aad
inc
arpl
or
repnz
push
pop
push
cmp
add
add
push
cwtl
mov
and
push
adc
sub
pop
adc
call
lret
enter
cmpsl
mov
mov
aaa
mov
pop
lret
les
dec
cmpsb
enter
push
rorb
int3
fcomi
cmp
rcll
adc
pop
cmp
xor
sbb
aas
add
in
lods
cmc
cmpsl
push
addb
ljmp
lcall
insl
push
xchg
scas
and
fistps
adc
test
fwait
in
insl
pop
xchg
dec
jo
sub
inc
roll
aad
or
mov
outsb
out
cmp
pop
push
push
stc
dec
outsb
icebp
mov
popa
lock
addb
dec
cmpsb
nop
cmc
lretw
xchg
cmpsb
jg
sarb
mov
jecxz
cmp
ja
and
out
fsub
add
call
mov
add
jmp
adc
xchg
fldl
sub
pop
push
sub
mov
push
outsl
inc
mov
lds
scas
call
sbb
mov
movsb
pushf
mov
aam
mov
jbe
xchg
pop
adc
sub
jbe
lahf
fcoml
daa
or
fsubrl
test
out
loopne
test
push
mov
and
repz
shlb
loope
inc
mov
or
push
add
adc
imul
sub
sbb
stos
jg
in
outsl
pop
sahf
je
xlat
gs
mov
mov
xchg
push
add
jnp
dec
jmp
xchg
jb
ja
and
ret
pop
and
xchg
in
cmc
fimuls
out
jne
mov
xchg
xchg
ret
jae
test
jl
and
mov
ss
sbb
push
orb
push
mov
hlt
push
inc
cld
stos
shll
pop
imul
movsb
pop
sbb
orl
out
mov
into
sbb
or
je
lea
mov
js
push
pop
lock
and
ret
add
jge
ss
mov
inc
mov
loopne
jmp
inc
mov
frstor
add
aam
ds
lods
xor
mov
jle
push
mov
jne
adcb
pusha
mov
stc
or
pop
dec
stos
test
xor
movsl
lahf
or
pop
mov
outsb
push
or
fcomip
sbb
xchg
jo
cmpsb
das
roll
mov
in
xor
push
mov
into
pop
sub
int3
std
push
push
mov
adc
adc
pop
jno
in
loop
fdivl
or
pop
cmp
inc
pop
xor
dec
leave
mov
adc
mov
xchg
xor
cmp
shrb
dec
ss
push
popl
push
lds
fldl
icebp
bound
push
push
mov
dec
test
call
push
ret
mov
xchg
lds
jmp
push
mov
andl
arpl
movsl
cmpsl
roll
xlat
popf
fcoml
or
enter
xor
sti
pop
movsl
pop
fcmovb
fcoms
push
dec
mov
lock
aam
mov
add
and
push
hlt
jo
xlat
push
hlt
test
mov
push
repz
clc
inc
int3
xchg
jecxz
pusha
testl
out
add
lock
fdivl
sbb
clc
xor
shr
mov
mov
cmpsb
scas
sub
mov
mov
pop
cld
push
inc
mov
mov
xchg
or
pop
xchg
dec
jmp
push
aas
or
adc
ss
inc
scas
pushf
negb
mov
fwait
and
lret
stos
cmp
aad
sub
and
fldt
movsl
nop
push
dec
jns
jbe
mov
addr16
pop
std
mov
andb
xchg
out
mov
in
lds
hlt
flds
int3
adc
rorl
sub
pusha
pop
ror
mov
outsb
clc
inc
stc
sbb
cmp
inc
mov
stc
lock
ljmp
adc
dec
in
into
cmc
imul
jecxz
cmc
ljmp
scas
push
add
sub
imul
inc
movsb
jecxz
dec
mov
stc
push
loop
xchg
mov
mov
jg
jnp
popa
in
push
mov
adc
lahf
or
dec
mov
cmp
roll
out
push
les
andb
dec
xlat
outsl
repz
shlb
and
xor
mov
or
or
loope
movsb
daa
xchg
pop
xor
fs
inc
adc
or
mov
push
sbb
cmc
sbb
loopne
cld
jle
xchg
pop
push
roll
fiadds
mov
sahf
aad
push
js
ljmp
std
nop
out
test
loope
mov
stc
aaa
test
and
test
and
pop
stos
cmp
jmp
xor
mov
sub
sbb
cmp
xor
pop
inc
pop
dec
pop
xchg
stc
mov
and
jp
xor
rcll
pop
pop
push
xor
push
lods
mulb
movsl
mov
test
das
jmp
adc
cs
lock
jno
inc
rcrl
mov
jl
ret
repz
addr16
fwait
mov
pop
add
sbb
rcrb
ja
lock
gs
insb
inc
sarl
in
pusha
and
and
pop
lock
dec
repz
fisttpl
mov
sbb
mov
mov
xor
repz
add
jmp
fs
mov
push
jns
push
push
rcrl
pusha
jmp
xor
mov
mov
adc
xchg
test
mov
pop
add
dec
mov
repnz
lods
gs
movsl
cmc
sub
xor
jp
mov
pop
jge
jne
setge
jae
xor
jge
jno
testb
loop
imul
adc
mov
and
aaa
sub
mov
repz
test
ss
jg
in
in
aam
dec
inc
mov
imul
mov
xor
adc
nop
stos
push
mov
sarb
repz
push
push
mov
int
sahf
aam
cmp
sub
mov
xor
xor
cli
cmpsl
add
or
popa
push
leave
jge
and
imul
scas
sti
rep
fdiv
cs
jnp
pop
adc
in
mov
inc
jmp
xchg
test
cmp
pop
adc
out
add
pop
adc
clc
imul
mov
or
ret
pop
push
mov
mov
adc
imull
and
pop
cli
push
stos
adc
cmpsb
sahf
lock
loop,pt
mov
mov
pop
add
adc
lods
es
xor
push
mov
or
adc
and
dec
mov
pop
adc
inc
mov
push
sti
jp
or
iret
jmp
nop
jns
fidivl
mov
adc
mov
push
cmc
cwtl
push
cmpsl
std
push
and
mov
sbb
push
dec
sub
fiaddl
stos
fistps
icebp
mov
add
jmp
enter
add
and
inc
shlb
pop
insl
aam
nop
arpl
cmc
popa
and
mov
out
adc
and
arpl
and
jbe
das
cltd
lods
aad
repnz
mov
sbb
dec
lods
sti
adc
loope
and
xchg
outsl
adcl
adc
popa
jb
fcoml
mov
fiadds
add
test
mov
inc
lds
mov
adc
jo
pop
mov
mov
pop
push
hlt
and
push
loop
inc
mov
jecxz
mov
outsb
cmp
loopne
fmull
ds
dec
pop
mov
mov
inc
sub
shrb
repnz
fwait
in
cmp
dec
testl
jae
sti
lods
mov
sbb
sub
cltd
mov
adc
and
pop
fsubrl
jl
rolb
push
fsubrs
jae
loopne
repnz
xlat
loope
push
sbb
outsb
loope
add
inc
sarb
push
inc
jo
mov
push
mov
mov
jae
pushf
testl
add
mov
fwait
sub
jmp
pop
inc
xor
mov
and
lret
lcall
inc
ljmp
pop
adc
aas
cmp
mov
mov
inc
inc
gs
push
iret
icebp
ret
xor
in
push
xchg
mov
xor
scas
pusha
idivl
loopne
jecxz
gs
lds
jno
cld
xchg
sub
pusha
cmp
jb
pop
lods
loope
divl
mov
sbb
mov
jp
jns
aas
mov
mov
nop
cltd
fdivl
scas
lret
sahf
in
push
sub
pop
ja
mov
xchg
push
ret
mov
fidivrs
pop
sub
aaa
inc
ss
pop
xlat
mov
fwait
dec
lods
push
popf
xlat
std
sbb
dec
stos
jge
pop
jp
lcall
push
cmp
xor
pop
inc
fmuls
and
gs
cs
jno
enter
test
mov
fistpl
or
push
sub
pop
ss
pop
lahf
call
rcll
xchg
inc
pop
out
bound
lahf
mov
js
xchg
jno
fisttpll
adc
cmp
xlat
or
cmp
out
out
pop
dec
test
push
adc
xchg
insl
shlb
xor
jb
cmp
jl
test
inc
inc
popa
xchg
mov
xchg
xchg
js
fnstenv
sti
mov
shll
xchg
mov
push
pop
fisubrl
int3
cltd
lcall
out
push
or
insb
or
adc
out
xor
mov
xor
xor
js
shr
push
jns
out
cmc
pop
fsubrl
adc
and
stc
ss
inc
cltd
or
insl
jnp
mov
cli
add
jmp
mov
popa
out
fiaddl
sub
loope
adcl
loope
dec
sbb
jg
je
xor
lret
mov
jno
cmp
test
dec
fnstcw
xchg
dec
out
push
sti
cli
fiaddl
mov
out
sti
loop
lock
mov
mov
cld
or
pop
sbb
cltd
add
add
outsl
sbb
mov
or
sbb
sub
mov
lds
popa
movsb
add
je
inc
rorb
mov
aaa
mov
lret
in
push
iret
cs
mov
adc
push
cmp
into
mov
fnstenv
xchg
xor
cli
in
sbb
inc
sbb
xor
notb
hlt
addr16
popa
aas
jle
mov
push
test
cmpsb
mov
dec
inc
pusha
cmp
inc
test
daa
sbb
enter
outsl
das
ljmp
and
cmpl
mov
mov
push
hlt
mov
mov
jle
daa
push
pop
dec
out
and
out
cmp
inc
jmp
cld
xor
xchg
jo
ljmp
es
add
fisubrs
and
into
xor
out
cmp
test
bswap
push
and
ss
pushf
inc
dec
addr16
aad
xorl
push
out
ret
adc
jl
daa
ja
pop
pop
mov
roll
mov
dec
mov
aas
test
mov
std
addb
sbb
and
addr16
dec
data16
push
jle
scas
inc
pop
push
jae
and
in
movsl
stos
pop
jp
dec
ret
les
mov
es
jecxz
lock
xchg
mov
pop
cs
mov
shll
sub
push
xchg
dec
cmp
je
or
les
jp
push
mov
les
dec
scas
ret
or
xchg
out
cmp
repnz
cmp
add
addb
cld
enter
xchg
loope
sbb
ret
cmp
add
mov
into
inc
sbb
dec
and
push
test
pop
imul
push
js
pop
pop
push
shl
arpl
push
xchg
push
add
xchg
out
pop
jne
or
addb
rep
inc
and
xor
mov
nop
mov
adc
mov
pusha
cmp
aad
clc
popf
dec
push
ret
add
imul
mov
cwtl
and
cmpb
jle
movsl
push
sbb
mov
dec
ds
cmp
jno
jo
rcrb
cs
mov
jle
cmpsb
out
adc
scas
xor
sub
inc
mov
int3
ss
push
jl
sbb
xor
adc
or
lea
bswap
call
shrl
icebp
jp
lods
dec
jmp
push
in
std
stos
es
jg
xor
xor
cmp
cmp
fsub
jbe
push
shlb
lods
in
jecxz
fwait
aad
fmulp
lea
dec
mov
mov
jecxz
sub
jp
cmpsb
test
paddw
stc
enter
lds
adc
test
out
sub
xchg
jp
jmp
js
sbb
in
cmp
stos
jl
xor
cmc
jecxz
ja
or
mov
jb
sarl
jmp
add
push
icebp
xchg
sti
jmp
pusha
mov
add
ret
fsubl
imul
sbb
loopne
insl
push
cmp
cmpsb
pop
fmuls
pop
mov
inc
pop
and
cs
daa
addr16
push
sbbl
pop
jmp
out
mov
xchg
jno
shlb
sub
push
mov
popf
sub
inc
int3
icebp
or
dec
push
lock
push
rcrb
mov
mov
icebp
and
cs
sbb
mov
add
lahf
lds
icebp
push
movsb
rolb
xor
cmpb
xlat
dec
cmp
test
insl
inc
dec
inc
cmp
ljmp
faddl
jns
rclb
pop
pop
cld
dec
push
cli
jnp
sub
and
jp
notb
loopne
mov
inc
and
loopne
inc
pop
mov
jbe
outsl
push
popa
scas
hlt
sub
es
xchg
insl
cmp
mov
xchg
pop
mov
add
mov
sub
adc
ret
fiaddl
mov
jns
js
in
or
mov
adcb
mov
test
fsubl
jg
notl
xor
out
ljmp
add
scas
in
inc
sbb
inc
jo
movsl
sub
lock
insb
out
stc
sbb
int3
inc
into
ja
sub
pop
das
sub
push
mov
mov
stos
pop
inc
int3
push
rcl
jp
movsb
loopne
outsl
cmp
inc
jle
lcall
jge
and
pop
mov
jg
push
mov
adc
and
into
mov
insb
add
sahf
cmpsl
sub
cmc
jle
iret
or
lret
ret
add
aaa
imul
inc
fwait
scas
fsts
push
or
in
or
dec
hlt
sub
cmpb
mov
jmp
adc
pushf
movl
rcrb
arpl
mov
or
hlt
iret
pop
pop
jl
popf
std
mov
jl
pop
scas
orb
add
mov
jns
xchg
jno
xchg
out
jmp
inc
rcrl
inc
rcll
jge
je
push
int3
imul
test
jne
in
sbb
push
dec
mov
cmp
imul
insl
aas
orb
iret
mov
xchg
mov
sub
into
mov
mov
enter
ja
pop
test
int
clc
sbb
inc
icebp
cli
sub
push
mov
jns
lock
pop
sbb
cmp
dec
sahf
pop
incl
push
mov
and
sub
repnz
popf
insb
xchg
adc
ret
data16
fmul
pop
sti
lret
mov
dec
mov
aad
xchg
or
fs
int
jl
out
adc
add
popl
pop
jo
xor
test
scas
aam
ffree
test
jl
lds
repz
lods
pop
or
lods
test
aas
sbb
iret
pop
mov
mov
mov
pop
cmpsl
xchg
fsubrp
scas
mov
lods
sbb
xchg
sbb
jge
int
pop
adc
je
stos
jo
lods
dec
out
ficompl
sub
daa
sub
jg
pop
rorb
jle
or
add
pop
jo
sub
leave
cmp
jl
insl
lods
arpl
xchg
daa
rcll
testb
jecxz
mov
or
xor
mov
pusha
or
mov
js
hlt
add
lds
cwtl
jno
int
cmp
aas
decb
push
adc
lds
sti
mov
dec
insb
push
pop
mov
cmp
inc
cmc
lret
push
es
stos
xchg
dec
ljmp
stos
icebp
push
mov
xchg
pushf
stos
jmp
and
mov
push
in
adc
test
loopne
push
fisubrs
jno
jbe
cmp
jns
fistps
je
call
and
pop
shrb
shll
cmp
test
jle
pop
aas
popf
mov
bound
stos
jno
int
scas
gs
jmp
cmp
mov
filds
inc
or
mov
dec
out
loopne
outsb
lret
add
xor
fs
pushf
out
dec
push
sub
push
mov
inc
int
enter
ss
mov
cmpsl
pop
mov
mov
loopne
mov
scas
inc
sbb
mov
sbb
fwait
call
cmpsl
sbb
fstpl
jo
jecxz
and
es
adc
mov
dec
repz
ror
rclb
fsubl
imul
int3
sub
jne
sbb
mov
or
mov
mov
inc
loopne
movsb
fcmovu
dec
mov
daa
in
jo
mov
test
aam
pusha
popa
push
push
jl
sbb
lcall
push
loope
ret
mov
sub
insl
xchg
lods
mov
fwait
xchg
cmp
and
mov
or
inc
sub
ds
and
cwtl
movl
fdivrl
push
xor
mov
jnp
std
mov
jbe
in
orl
cmp
cwtl
jno
mov
cld
in
cmp
add
push
lret
rorl
add
popa
or
ret
jns
push
fadd
cltd
shrb
cmp
xchg
mov
pop
cmpsl
cld
add
aam
dec
or
add
fsubl
pushl
pushf
sbb
and
pcmpeqb
add
mov
and
inc
insl
xor
les
ret
out
fwait
xor
push
inc
jle
add
incb
leave
push
mov
test
sub
iret
ljmp
mov
sbb
add
imul
lcall
mov
jbe
mov
jecxz
jmp
dec
fsubr
shrw
fsubs
pop
out
fwait
xchg
mov
arpl
mov
loope
stos
add
inc
ficomps
jae
out
cmp
add
in
push
push
enter
test
aas
mov
jecxz
sub
jle
ja
push
insb
out
pop
adc
int3
mov
sbb
test
adc
mov
jnp
loop
xor
cmpsb
shl
add
fwait
xchg
lret
xchg
fcmovne
xchg
dec
or
pop
out
hlt
lods
aad
adc
roll
xor
enter
push
fwait
mov
sbb
sub
int
fbstp
ficoml
push
jae
lret
push
pop
mov
es
inc
or
and
daa
into
xor
pop
ja
mov
fnsave
inc
cmp
fsubrs
dec
inc
mov
clc
adc
out
sub
jns
jb
nop
jg
div
or
cld
cli
push
jmp
scas
fnstenv
and
mov
std
jmp
aaa
push
xchg
int
jne
repz
fnstenv
test
stos
xchg
mov
cmc
fstpt
dec
shll
push
jne
stos
sub
mov
imul
mov
dec
sbb
leave
loopne
jo
mov
pop
and
dec
outsb
cmp
cli
test
cwtl
add
adc
dec
mov
mov
push
mov
js
daa
or
lcall
adcb
sub
push
sub
sub
jns
push
test
scas
call
imul
pop
or
and
jge
loope
or
test
and
cmp
or
push
lods
add
imul
mov
mov
sbb
fisttps
insl
fadd
aaa
xor
std
sub
jecxz
enter
movsb
rcrl
std
cmp
int3
js
xor
movsl
xchg
rol
cmp
dec
arpl
sub
shr
iret
hlt
jp
pop
aas
in
xor
dec
xor
lods
lods
mov
inc
xchg
inc
push
sub
stos
std
sub
ja
scas
adc
add
adc
jnp
fldl
insb
test
imul
out
mov
stc
or
mov
cmpb
repnz
shlb
and
add
add
jp
xor
jns
cmp
sahf
and
xchg
mov
movsl
adc
xor
or
mov
jns
mov
aas
lcall
lods
int
push
lahf
push
adc
bound
cmp
and
pop
mov
push
cmpsb
stos
jb
daa
or
adc
cs
cwtl
jo
push
add
pop
pminub
dec
pop
jb
es
int
cmc
imul
div
pop
mov
loopne
pop
lea
jl
cld
pushf
sbb
push
add
inc
and
jmp
orl
test
les
mov
sub
cwtl
lods
or
or
cmc
mov
in
pop
xor
pop
arpl
ret
jae
pop
mov
into
mov
ret
gs
push
mov
popa
rcrl
pop
int3
mov
adc
or
in
mov
test
dec
test
call
xor
pusha
cmpsl
sub
loop
xlat
ss
rorb
mov
psubusb
push
outsb
gs
lea
scas
ficoml
sbb
pop
bnd
mov
mov
iret
sub
sbb
call
sbb
mov
into
scas
sub
or
mov
cmp
add
pop
jmp
inc
pop
jle
dec
mov
call
push
idivl
dec
sahf
pop
test
data16
jae
mov
insl
addr16
movsl
into
dec
pop
xor
fwait
adc
rclb
xchg
cmpsb
mov
outsl
push
iret
mov
xor
push
fmuls
add
cmp
cmp
mov
icebp
out
scas
das
adc
mov
add
loopne
mov
push
dec
and
push
jle
popa
out
enter
push
cmp
shlb
cld
rcr
jecxz
and
ss
jmp
loope
xchg
jge
sti
xchg
jmp
dec
dec
cld
jno
xorb
js
sub
clc
js
jl
mov
push
leave
push
or
xchg
and
mov
sub
shrl
xchg
push
scas
es
test
cs
jnp
in
dec
xor
mov
loopne
cmp
jnp
adc
inc
addl
clc
and
pop
cmp
cld
std
ss
pop
push
fisubrl
jg
mov
sbbb
or
loope
push
adc
xor
fisubl
add
push
mov
xchg
inc
nop
sbb
ss
out
mov
jne
lcall
xchg
sub
rorb
test
or
push
jae
push
push
repnz
cmc
mov
pop
mov
jno
mov
stos
ljmp
pusha
into
mov
roll
sub
jne
ss
popa
and
push
jp
loopne
icebp
xchg
imul
imul
dec
jb
push
in
pop
jmp
outsb
pop
mov
jns
jo
push
xchg
out
loopne
pop
jmp
out
mov
ss
cmc
add
out
shl
loopne
pusha
lods
sbb
out
roll
ror
and
pop
nop
les
add
in
inc
lods
add
inc
mov
fldl
jns
sbbl
mov
mov
mov
stos
jp
cmp
cmc
mov
in
adc
push
cltd
dec
jecxz
ret
pop
into
adcb
gs
lea
push
mov
or
xchg
sbb
int3
lock
xor
or
lahf
insb
pop
xchg
xchg
inc
cltd
pop
adc
fwait
or
lret
test
enter
aaa
sub
or
mov
pop
in
loop
cli
pop
ds
xchg
lahf
movsl
ret
sbb
ja
push
pop
gs
in
lret
mov
adc
mov
push
leave
data16
dec
lea
pushf
leave
add
fsub
mov
push
enter
insb
pusha
ficoms
mov
call
jb
xchg
rclb
in
dec
adc
xchg
inc
movsl
mov
loope
xor
and
xchg
xchg
pop
mov
fdivrs
fcomi
mov
repnz
mov
push
xor
inc
jp
out
jle
jp
cmp
add
or
notl
in
test
or
shrb
arpl
cwtl
hlt
lret
and
dec
popf
adc
or
or
mov
push
jg
mov
dec
out
lods
fadd
test
xchg
iret
jbe
arpl
inc
sbb
push
pop
sub
adc
mov
std
mov
negl
push
insb
sbb
cld
or
push
in
lret
testb
out
out
mov
clc
push
adc
shrl
aad
pop
push
inc
cmp
or
fsubrs
sarl
xchg
in
adc
outsl
ja
in
mov
adcb
add
mov
xchg
pop
sahf
jnp
push
xchg
fnstcw
lret
sub
jge
inc
in
mov
sub
lcall
loope
mov
push
fldt
stc
mul
jno
cmp
repz
sbb
cmp
push
xchg
or
test
adc
or
movsb
out
shrb
and
inc
xor
inc
or
dec
mov
mov
pop
js
subb
imul
mov
fimuls
mov
je
scas
cmc
rcr
pusha
pop
bound
or
lods
aam
ljmp
arpl
cltd
test
je
and
test
cs
in
cltd
mov
mov
rorl
push
xchg
xor
xorl
adc
cmpsl
fimuls
stc
fsubs
mov
test
pop
inc
sub
xchg
adc
in
outsb
dec
scas
mov
in
rcrb
shl
mov
mov
repnz
aad
xor
mov
push
and
xor
fdivp
cmpsl
xchg
test
jo
cmp
in
movsb
cld
jnp
mov
mov
jnp
setnp
jg
mov
push
imul
arpl
xchg
mov
lock
jl
fcomps
inc
addr16
call
add
lods
pop
jo
sti
mov
out
jecxz
cltd
pop
ret
dec
cmp
mull
iret
mov
test
inc
inc
xor
add
push
sbb
sub
cmp
sarl
dec
dec
push
sub
add
aaa
dec
push
mov
sbb
test
shrl
mov
rcrb
gs
fmull
inc
mov
xlat
cmpsb
and
pop
out
add
in
or
mov
fwait
int3
lcallw
bound
sbb
out
lahf
subl
pop
popf
mov
cmp
cmp
jno
inc
dec
dec
sub
and
inc
inc
pushf
loopne
sub
jmp
adc
mov
pusha
push
mov
jp
push
add
add
out
pop
popa
scas
mov
push
imull
pop
es
xchg
out
or
sbb
jmp
cmp
mov
sbb
sub
push
pop
dec
ficoml
xlat
ror
cmp
xchg
cld
inc
xchg
leave
mov
cmp
mov
repz
es
sbb
scas
test
call
repnz
les
scas
mov
mov
mov
clc
adc
outsl
xchg
ret
xor
xchg
pop
pop
and
jle
fldt
cmp
iret
cmpsl
cmpsl
xor
inc
and
in
mov
imul
cmp
fistl
imul
daa
lea
ja
cmpsb
repz
xchg
test
leave
pop
push
pop
addb
pop
test
cli
or
mov
daa
dec
loope
mov
dec
add
leave
in
sbb
mulb
and
cmp
out
int
mov
inc
add
jb
dec
imul
out
cmpsl
cmp
les
cltd
xchg
add
mov
test
loope
pop
and
mov
pop
cmpsb
mov
adcl
jne
adc
add
jp
leave
jp
sbb
bound
enter
loope
cmp
shlb
test
popf
sub
sbb
sbb
in
push
inc
and
or
cmp
dec
lea
jle
in
xchg
xor
pop
int
dec
scas
call
xor
mov
push
inc
mov
jae
cmpsb
push
add
xor
cmp
push
mov
addr16
stc
mov
cmpsl
sub
test
sar
push
fisttpll
mov
xor
cmp
pop
ja
cmp
mov
cld
adc
cs
pop
mov
mov
cld
sbb
in
fcomip
xor
push
and
sbb
sahf
adc
imul
frstor
xchg
jmp
push
or
orb
stos
push
add
mov
loopne
ret
fdivs
frstor
pop
xchg
mov
outsl
in
and
stc
dec
test
fcomip
mov
jp
xor
and
in
cmp
mov
inc
add
mov
dec
sbb
cmpl
or
enter
rcrl
push
or
mov
dec
xor
sub
cmpsb
xchg
loop
hlt
jmp
pop
inc
pop
mov
mov
repnz
lds
rcr
mov
aas
emms
cmp
pop
fidivl
push
and
fistpl
inc
dec
jo
clc
xchg
push
stos
pop
and
xor
push
sub
ljmp
cmp
insl
xor
mov
lods
inc
mov
push
sub
cmpsb
adc
fcoml
dec
int3
xchg
fsubr
mov
lret
out
imul
mov
lcall
fldcw
xor
roll
dec
outsb
inc
sub
movsl
sti
push
jno
ljmp
cltd
adc
rcrb
ret
faddl
jl
add
movsl
loop
xchg
xchg
mov
sub
and
rolb
push
or
push
repnz
daa
sti
stos
sar
inc
or
mov
and
sub
mov
jbe
roll
xor
insb
or
cld
push
je
lret
cmp
andnps
sub
pop
pushf
mov
lret
adc
adc
shll
or
jne
jle
inc
aam
xor
mov
int3
test
test
hlt
in
mov
xrelease
sbb
repnz
xchg
lret
lret
adc
popf
add
dec
mov
mov
or
stc
xchg
add
add
mov
cmp
loope
jp
je
sti
push
and
pop
and
dec
mov
jmp
mov
pop
add
in
jl
outsb
jne
mov
lcall
icebp
pop
pop
dec
adc
fadds
jl
sbb
lds
ljmp
iret
pop
inc
push
mov
fstpl
add
jne
pop
inc
enter
test
sbb
hlt
xchg
cltd
fsub
js
lret
cld
adc
jbe
fisttpl
sub
repnz
xor
adc
mov
cmp
jbe
jae
dec
stos
lds
push
ficoml
addr16
dec
ret
xchg
fisttpll
dec
outsl
mov
push
sub
push
out
mov
mov
sahf
mov
scas
leave
jp,pt
cmp
cmp
sbb
cwtl
inc
push
xor
jae
lods
push
push
lods
jmp
mov
pop
fmul
sbb
cmpsl
test
add
ret
jmp
divl
mov
cmp
mov
adc
add
lcall
loope
ss
fiaddl
inc
nop
push
insb
xor
cmc
dec
test
and
cwtl
mov
scas
jp
jl
pop
sti
inc
mov
sub
push
std
or
cmp
out
cmp
pusha
jg
push
pop
cmp
dec
les
test
daa
roll
dec
out
jl
or
mov
xor
xchg
or
cmpsb
mov
xchg
sarl
hlt
mov
pop
or
lret
sub
es
pop
test
or
das
jle
cwtl
lea
insl
inc
pop
jle
or
xchg
cmp
jne
out
mov
pop
xor
and
push
mov
sarl
cmpsb
push
mov
and
jnp
jbe
fiadds
in
in
push
inc
lea
in
or
and
movsb
pop
and
jo
dec
leave
jb
or
cmc
pop
push
ss
hlt
cmp
jge
shrl
add
nop
test
pop
mov
mov
dec
xor
dec
push
or
ret
vpshufd
pop
add
mov
jl
xorb
mov
popl
out
adc
cwtl
dec
xchg
and
push
lret
inc
dec
mov
mov
insb
push
int
or
das
pop
mov
movsl
push
xchg
sub
movsb
xchg
fstp
shlb
mov
and
lods
fadd
add
outsb
scas
addr16
adc
xchg
movsb
pop
mov
xlat
jne
mov
mov
sbb
mov
out
jnp
pop
mov
insl
shrl
test
into
adc
or
mov
xchg
leave
outsb
shrb
xlat
popa
aaa
mov
cmpsb
mov
mov
add
pop
add
jb
inc
jp
aaa
inc
hlt
sub
lock
fistpll
push
jg
rcll
movups
inc
lret
inc
sbb
xchg
mov
cmpsb
dec
out
loope
pop
push
repz
xor
jecxz
xorl
xchg
mov
out
mov
mov
mov
fadd
int3
ret
or
adc
mov
lock
mov
or
mov
or
cmpsb
cmp
inc
out
dec
sbb
and
cld
cmpsl
or
in
mov
push
inc
cs
ret
sub
mov
inc
xor
push
je
inc
push
dec
dec
in
bound
imul
pop
outsl
lret
inc
inc
jns
out
sbb
dec
mov
pop
and
add
in
call
push
mov
daa
rorl
push
xchg
add
lods
inc
add
dec
jl
hlt
es
lret
xchg
imul
jge
icebp
scas
out
and
jo
xchg
cld
mov
test
xlat
mov
ja
loop
dec
pop
inc
div
les
das
in
out
mov
adc
mov
int3
pop
lds
add
pop
cmpsb
xlat
mov
loope
lea
xchg
decb
cmpsl
jle,pt
outsl
dec
mov
pop
out
xor
ljmp
ljmp
call
imul
mov
jp
rorb
push
xchg
call
rorl
pop
insb
mov
hlt
xor
jb
sbb
cmp
rclb
fisubrl
shll
pop
dec
xchg
xor
imul
adc
movsb
pop
lds
cs
outsb
pop
repz
xchg
inc
xor
ds
cmpsb
sarb
adc
mov
cmpsl
cwtl
ja
pop
jo
mov
pusha
iret
push
loope
mov
jle
popa
push
dec
in
inc
push
fcompl
or
rorb
and
enter
lock
fidivrs
pop
jnp
inc
pop
insb
ret
fldt
mov
aad
mov
jnp
pop
aad
je
sub
cmp
or
fwait
xor
cltd
addr16
xor
jae
test
rcl
ds
mov
xor
mov
xchg
rclb
ss
cmp
roll
jmp
dec
add
dec
sub
outsl
dec
arpl
pop
scas
gs
jmp
adc
movsl
cmp
shlb
pop
pop
add
mov
pushf
xorb
pop
insl
scas
push
or
outsl
jae
sbb
dec
lods
and
cmpsb
aad
divl
xor
rclb
dec
repnz
or
loop
adc
fmull
push
imul
inc
or
or
iret
sub
jmp
jg
call
test
imul
dec
jge
and
jg
mov
out
pusha
dec
push
push
pop
sarb
cmc
jnp
aaa
out
call
insb
mov
testl
xor
int3
jbe
jmp
ficomps
mov
outsb
fistpll
orb
cmp
in
insb
dec
pop
std
loop
call
xchg
jno
inc
imul
lock
mov
fs
xor
imul
imul
xchg
add
jnp
jno
cmp
ret
mov
mov
dec
insb
push
or
test
outsb
insl
cmc
mov
das
or
xchg
cmp
loopne
sbb
push
test
pop
repz
push
jbe
push
iret
rcrl
lock
dec
hlt
fimull
cmc
repz
sub
hlt
jb
xor
inc
push
push
fwait
aas
sbb
pop
inc
cs
mov
mov
fnsave
pop
out
outsl
in
nop
push
int
shrb
enter
or
fimuls
pop
sub
push
mov
and
lret
mov
lods
dec
lock
ret
pop
xor
test
dec
sub
add
push
or
fadds
xor
pop
mov
aad
testb
mov
and
mov
in
arpl
inc
and
jns
mov
add
mov
outsb
clc
ret
cmp
cmp
dec
adc
push
je
xor
lret
jb
andl
mov
xor
jno
lods
cmp
scas
es
pop
scas
pop
jns
cmp
dec
push
es
aas
jo
add
inc
dec
lods
inc
jl
jnp
mov
scas
adc
add
add
aam
test
icebp
subl
adc
lods
adc
xchg
and
mov
lret
inc
mov
sahf
subb
mov
shlb
ja
push
stc
pushf
popf
lret
adc
cmp
push
mov
inc
jge
jl
cmpsb
sbb
or
dec
push
lahf
aam
bound
movsl
mov
push
js
pop
sub
xchg
mov
mov
sbb
add
xchg
mov
into
mov
mov
fcoml
jb
aam
xorl
mov
mov
out
jl
fisubrl
cmp
mov
clc
xor
dec
jecxz
gs
pusha
cmp
dec
add
pop
lods
sbb
repnz
or
add
push
cmp
push
test
sbb
imul
or
sbb
push
mov
insb
lods
in
enter
in
sahf
jecxz
mov
pop
xor
mov
and
imul
out
dec
fstl
nop
mov
push
popa
mov
push
repnz
fcmovu
repnz
into
lret
dec
add
xchg
or
cmp
xorl
xor
inc
xchg
ljmp
insl
movsb
sub
cli
ret
in
in
xor
shlb
das
pushf
enter
push
icebp
jne
and
scas
imul
lahf
push
or
lahf
fldcw
ljmp
cmp
mov
popf
mov
dec
and
xchg
pop
pushf
movsl
fs
xor
dec
cwtl
push
out
add
xor
dec
aas
inc
rol
xchg
rcr
sti
ds
ja
jnp
outsb
add
shl
test
add
pushf
rclb
ja
sti
sub
repz
dec
lock
daa
outsb
xchg
mov
out
dec
std
or
aas
mov
pop
test
fdiv
xchg
in
jmp
xchg
jle
push
push
data16
xchg
adc
inc
loop
es
jge
mov
mov
cmp
inc
gs
jle
bound
cmpl
push
cmp
mov
jo
loopne
test
and
sbb
xchg
and
ljmp
mov
shl
fdivrs
xchg
pushf
jnp
repnz
xchg
cltd
xchg
je
cmc
popf
mov
xchg
fidivl
imul
hlt
add
inc
or
or
ret
push
pop
cmp
enter
loop
test
dec
dec
mov
dec
lods
aad
cmp
jge
mov
push
mov
xchg
lods
pop
std
add
push
les
jb
jp
pop
inc
jle
xchg
scas
jae
mov
pop
in
push
or
sub
fs
cmpsb
push
mov
mov
aad
xor
mov
and
js
lock
stos
sbb
stos
push
dec
sbb
fisubs
hlt
int
fsubs
outsb
xor
inc
push
mov
movsl
fdivl
inc
push
pusha
rorb
in
scas
dec
jno
mov
lahf
outsb
mov
ss
mov
push
mov
mov
mov
inc
repnz
push
gs
xchg
mov
mov
arpl
xchg
sub
dec
test
sbb
not
sbb
int3
push
fadds
bound
insb
xchg
lret
mov
cmp
xor
popf
mov
cmp
jo
inc
or
jnp
jo
add
mov
imul
adc
mov
out
fwait
xchg
cmpsb
loope
xor
in
pushf
jp
cmp
ja
inc
stos
xor
mov
and
es
call
mov
adc
lods
iret
mov
cmp
jge
insl
rolb
pop
lret
sub
popa
add
cli
ret
xor
test
popf
sub
cmp
jns
xchg
push
push
and
ja
mov
ljmp
sahf
and
sbb
jnp
mov
rcll
fimuls
cmpsb
sub
xchg
aad
test
adc
out
cmp
shr
stos
inc
xchg
cld
add
and
ret
add
movsl
add
mov
cmpsl
mov
jle
jge
loope
je
rclb
icebp
jge
and
mov
jge
mov
xchg
int3
jl
into
jo
jmp
and
pop
fstl
enter
jae
add
jae
dec
lret
frstpm(287
cmp
mov
out
add
sub
push
and
cmpsb
mov
daa
shll
and
ret
stc
mov
mov
lret
in
insb
jl
xor
out
inc
push
in
sbb
xchg
je
inc
inc
adc
jnp
xchg
pusha
imul
aas
shlb
jl
shlb
pop
or
clc
jb
push
xchg
cs
pop
cmpsb
outsl
test
sub
adc
or
and
xor
pop
mov
rorb
outsb
leave
dec
mov
dec
jnp
inc
fdivrl
sbb
sbb
sub
or
stos
dec
sbb
lods
cmpsb
and
jp
test
in
mov
movsl
sti
mov
mov
aas
outsb
mov
int3
outsb
jns
xchg
jg
xor
lahf
sub
xchg
loop
addr16
inc
mov
pop
stos
and
inc
shl
dec
movsl
pop
lcall
sbb
adc
pop
es
inc
xchg
xor
mov
lahf
mov
jecxz
mov
xchg
pop
js
insl
lret
pop
lahf
and
int
ljmp
test
mov
pop
in
sub
insb
xlat
mov
popa
in
jne
inc
mov
in
jmp
add
dec
icebp
call
jne
dec
es
xor
popf
in
pop
leave
jp
jp
mov
dec
test
rclb
stos
jae
mov
gs
push
push
lret
stos
fsubrs
mov
scas
and
pop
loop
mov
jg
adc
push
push
inc
push
dec
dec
sti
repz
out
mov
ss
aaa
push
cmpsb
aam
xchg
das
xor
sub
and
sarl
es
lds
loop
sahf
ret
jmp
lods
and
mov
pop
fbld
out
inc
or
sbb
mov
and
in
jp
fcoml
push
int
mov
mov
ja
scas
mov
jo
cmp
jbe
xor
lods
inc
gs
aam
or
movsb
jg
stos
push
lret
fimull
fstl
sub
in
sub
scas
test
in
iret
adcb
mov
in
aad
daa
dec
and
ja
fdecstp
addr16
rclb
inc
rolb
lock
jbe
enter
test
mov
xor
imul
push
mov
xlat
insl
dec
xor
xchg
sub
add
cmp
subb
sub
sub
clc
pushf
and
push
mov
scas
ja
cmp
sahf
daa
iret
adc
pop
fstp
or
hlt
mov
xchg
and
cmp
popa
cltd
stos
cmp
mov
inc
icebp
ret
push
or
rcll
sbb
inc
push
call
data16
cmp
outsb
icebp
cli
xchg
mov
cmpsb
push
xlat
sub
popa
push
dec
or
lods
xchg
loope
jae
adc
insb
bound
loopne
addr16
add
xchg
cmp
push
xchg
dec
xor
mov
mov
into
jmp
cwtl
mov
lcall
leave
sbb
arpl
push
pop
rcll
hlt
pop
dec
cmp
cwtl
push
shrb
fmuls
and
inc
xor
cmp
popf
pop
les
sbbb
jmp
mov
dec
mov
dec
xchg
push
loope
cmp
es
jge
cmc
std
ds
pop
mov
xor
dec
cmpsl
sahf
mov
xor
jnp
into
jns
sbb
or
cmpsb
and
jno
adc
mov
outsl
int3
popa
mov
xor
mov
add
or
sbb
cmp
faddl
mov
iret
outsb
js
std
cs
mov
mov
sub
jg
cmp
ds
or
stc
sbb
pop
fdivrs
sahf
sti
jbe
sbbb
xchg
call
mov
mov
cwtl
rol
jo
pop
in
jne
and
pop
call
push
dec
jo
inc
and
ja
ja
roll
adc
data16
outsl
lods
or
and
shlb
cs
xlat
mov
pop
mov
jne
sub
mov
cld
test
push
dec
pop
dec
mov
xor
inc
inc
nop
iret
in
mov
mov
push
or
push
rcrb
lods
lods
idivl
or
jno
daa
cmp
lods
out
popf
and
add
dec
mov
imul
addb
cmp
adc
mov
pushf
outsb
rcr
push
pop
lahf
cli
mov
pop
jns
imul
icebp
adc
mov
jl
enter
mov
cld
pop
ficoml
jle
fisubl
inc
aaa
stos
dec
mov
inc
push
pop
sub
sub
fidivs
xchg
adc
data16
lods
pop
jl
or
testl
cld
lret
lcall
push
daa
or
stos
or
arpl
jnp
jl
js
xor
leave
or
xchg
mov
stos
adc
lret
adc
mov
movsl
add
jnp
cmp
shll
cld
mov
push
fcomi
jl
jmp
loop
mov
fucomi
popa
ljmp
sub
test
cmp
leave
mov
les
push
pop
loope
cmp
sbb
mov
lcall
xlat
jnp
hlt
scas
arpl
mov
sarl
fwait
mov
cmp
stos
imul
sub
cmp
dec
imul
ja
cmp
faddl
sub
inc
sub
and
mov
popf
adc
sub
cmp
push
out
ss
adc
cmp
pop
and
dec
mov
subb
sti
xchg
sbb
xchg
dec
outsl
imul
cmp
push
cmp
mov
daa
adc
pop
inc
ficoml
cmp
cwtl
mov
dec
adc
xchg
pop
adcl
jns
dec
shll
mov
mov
sub
mov
sub
jle
or
data16
cli
mov
cwtl
cmpsb
xchg
add
push
jae
stos
push
push
push
lahf
sub
pop
or
push
aaa
arpl
jle
jp
loope
insb
xor
mov
push
cld
pop
mov
out
sbb
sbb
xchg
xchg
filds
jge
xchg
sub
lds
and
stos
dec
ret
inc
fwait
xchg
sbb
pop
das
dec
rcl
lods
ljmp
mov
ds
inc
arpl
loopne
xor
pop
mov
pop
lahf
leave
mov
addl
in
adcb
lret
mov
ret
mov
mov
bound
stos
dec
adc
inc
push
push
sbb
sub
roll
repz
inc
cmp
adc
xchg
cmpsl
mov
dec
sub
fxch
xor
dec
cmp
pusha
out
pop
pop
sub
and
loope
pusha
cmpsl
fcompl
test
js
push
jmp
xchg
rol
ljmp
popa
leave
mov
clc
or
and
sahf
jne
incl
xor
pop
fisubs
inc
neg
popf
fucom
mov
out
popf
out
in
jge
mov
jae
mov
scas
repz
hlt
pop
add
test
jo
mov
loopne
int
or
scas
mov
popa
lcall
jno
jecxz
mov
mov
rorl
push
cwtl
out
aas
mov
lds
jo
and
lcall
test
sbb
mov
lea
mov
je
shll
pop
into
mov
push
pusha
scas
das
enter
movsb
xlat
pop
xor
test
movsl
stc
pusha
out
xchg
stc
fmuls
inc
and
stos
rol
repz
stos
test
jg
jmp
sbb
inc
pop
fwait
push
gs
sbb
jmp
mov
lret
nop
cltd
iret
inc
aad
xchg
fstps
lahf
insb
out
insb
mov
outsl
cltd
cltd
insl
xchg
sarl
in
scas
addl
sti
cli
insl
movsb
test
cmp
loop
loopne
sahf
scas
push
enter
test
or
stos
std
enter
hlt
out
jecxz
stos
push
in
je
xchg
cmpsb
mov
stos
stos
fisubrs
cs
cmp
push
jg
sub
sbb
mov
or
xor
scas
enter
mov
outsb
fcomps
enter
idivl
dec
mov
aas
popl
fs
in
loope
add
into
aaa
jmp
or
jno
out
jnp
clc
rol
adc
pop
push
xorl
xor
stos
iret
bndldx
out
icebp
shr
dec
xchg
aam
and
sub
inc
jne
push
cmp
mov
lret
xor
lahf
int
xlat
jae
add
into
or
shl
jbe
dec
repnz
mov
sub
cmp
das
cltd
push
pop
mov
idivl
jle
mov
int
sarl
pop
imul
sub
ja
mov
adc
mov
pop
imul
or
cmpsb
dec
repnz
add
mov
enter
pop
into
cmc
into
pop
jmp
or
ret
jl
cld
mov
pop
and
push
cmp
dec
lea
mov
std
dec
lahf
push
pop
mov
sbb
mov
loopne
xchg
out
jb
mov
sbb
lret
cmp
and
pop
jne
push
adc
xchg
or
push
loope
xor
ja
dec
rcrb
jp
movsb
mov
lods
mov
mov
jl
out
mov
mov
icebp
adc
addr16
mov
xlat
out
fistpll
pop
cltd
mov
aam
xor
pop
jmp
lock
je
aad
sbb
and
mov
pop
stc
movsb
ftst
xchg
cmpsb
pop
nop
dec
pop
loope
sub
mov
pop
xchg
adc
or
and
in
add
cmovnp
inc
xor
js
gs
lods
push
in
outsb
fistpl
cld
xor
jnp
cmp
xchg
nop
cs
push
inc
aam
push
dec
stc
repnz
mov
cmp
into
leave
dec
test
sahf
xor
adc
xchg
mov
jae
push
mov
inc
nop
and
push
shll
cmpsl
fiaddl
inc
mov
mov
sub
loop
push
das
cmp
xchg
cmp
push
dec
and
imul
ret
icebp
scas
mov
push
scas
sub
push
jl
and
push
into
scas
mov
jbe
andl
cs
pop
mov
mov
imul
xorb
fldl
rcrl
add
add
notb
xchg
out
pop
or
les
push
fistpll
je
inc
mov
cmp
sbb
test
or
fucomi
adc
fabs
xchg
jle
icebp
ss
shlb
jns
jg
mov
aam
rcl
aaa
and
call
push
icebp
xor
ret
sbb
lods
icebp
cmc
pop
das
cmp
popa
xchg
hlt
or
cmp
or
shlb
in
lock
ss
pushf
sti
nop
ds
jl
adc
sub
push
mov
push
mov
scas
lds
xchg
fdivp
insb
cmc
add
inc
movsl
and
cmpsb
dec
stos
or
adc
and
lock
pushf
push
xor
clc
sub
bound
sub
sub
pusha
cmpsl
xchg
lea
mov
xchg
adc
inc
stc
push
js
test
inc
cwtl
jg
rorb
cli
les
test
cmpsl
pushf
inc
pop
and
cltd
cmp
test
push
ret
mov
cmp
fs
inc
and
push
dec
lret
test
and
mov
mov
xchg
stos
xchg
in
decl
cld
in
xorb
xlat
mov
enter
int
mov
ret
lods
repnz
in
je
mov
or
mov
shll
cwtl
rclb
filds
pop
mov
cld
cmp
inc
enter
andb
lcall
or
fs
test
adc
lret
pop
fsubl
cmp
add
les
enter
push
cmc
das
mov
data16
sbb
xchg
jmp
leave
test
ja
ret
hlt
sbb
inc
xchg
cmp
mov
mov
mov
and
test
push
les
call
mov
popw
inc
pushf
fidivs
xor
in
lods
jb
dec
inc
jl
popf
sub
arpl
push
outsb
pop
mov
jo
add
jmp
or
ljmp
dec
push
jbe
cmpb
jae
lds
adc
sbb
or
adc
out
add
or
pop
je
or
es
pop
adc
jb
outsb
dec
sub
xor
push
mov
adc
dec
and
xor
int
lods
mov
mov
mov
hlt
icebp
sbb
enter
jg
fsubrs
movsl
in
repnz
aaa
cmpsb
jecxz
clc
pop
shrl
mov
aaa
push
jne
push
ss
es
xor
jge
sub
fnsave
scas
loop
cmc
sbb
sub
cmp
jbe
cmpsb
cmc
add
mov
xor
dec
js
jg
inc
inc
lods
fistpll
push
ret
sub
adc
jmp
insl
js
cmc
dec
mov
push
xchg
dec
into
in
inc
bound
fstl
outsb
outsl
inc
push
rcrb
sub
pop
sub
cmpsb
test
loopne
cmp
fnstenv
stos
rep
iret
pushf
mov
push
push
sahf
pop
add
out
and
adc
into
pushf
or
or
pop
icebp
mov
add
push
xor
jg,pt
shll
aam
hlt
cmp
cli
loopne
push
pop
mov
out
sarl
sub
jo
or
add
dec
mov
mov
cmpsl
loop
mov
mov
cmp
mov
add
repz
sub
sbb
sbbl
iret
jp
iret
sub
insl
inc
sbb
shll
push
outsb
push
and
xchg
cmp
mov
pop
in
in
in
lods
jg
push
in
pop
fcompl
and
xor
mov
ja
mov
mov
jb
clc
sub
or
aas
jno
pop
add
jb
jle
or
jg
outsb
movb
pop
hlt
rol
inc
aad
mov
loop
push
aad
sbb
notl
mov
enter
test
addr16
shlb
xor
sub
mov
xchg
jno
mov
test
mov
add
test
mov
bound
pop
orl
jle
sub
mov
sahf
loopne
in
dec
roll
into
mov
mov
fcmovb
jp
in
mov
or
xor
lahf
aam
int
cmp
ror
sbb
fldenv
jns
test
ss
xor
dec
mov
cmpsl
ret
xor
jo
adc
loopne
push
psadbw
adc
push
mov
mov
pushf
inc
or
inc
cmpsl
dec
rolb
mov
icebp
sbb
adc
cwtl
ds
mov
aam
loopne
or
imul
inc
push
mov
mov
mov
in
pop
jae
rcr
pop
call
sub
bound
pop
out
pop
repnz
xchg
sbb
cwtl
mov
pop
cmpsb
sbb
add
pop
test
push
fwait
sbb
in
aas
and
js
pop
stos
xchg
xchg
sub
jg
sub
loop
icebp
xchg
into
fsubp
sub
push
out
jmp
mov
and
add
or
repz
add
stc
cmpsl
jg
bound
test
adc
stc
inc
aaa
int
loopne
sarl
and
xchg
sbb
leave
and
add
lods
enter
mov
addr16
add
sbb
shr
sub
xchg
cli
or
inc
add
inc
or
loop
fsubrl
and
inc
sub
out
daa
jno
adc
insb
pusha
imul
pop
mov
add
outsl
jns
movsb
mov
sub
xchg
pop
aam
in
mov
lcall
lcall
pop
and
add
and
mov
in
les
mov
push
pop
pop
popa
cwtl
ds
pop
and
imul
aaa
xor
scas
sbb
daa
mov
mov
inc
movsb
pop
mov
adc
test
pushf
pop
pop
mov
test
xor
jbe
inc
repnz
jp
movsl
dec
push
dec
hlt
shrb
jp
hlt
mov
sti
aam
jmp
xchg
leave
jo
rorl
xor
sub
dec
mov
dec
pop
loope
sbb
push
cli
frstor
push
rcrl
cli
push
jecxz
sub
mov
cmpsb
mov
cli
and
ret
xor
pop
push
mov
rolb
filds
arpl
pop
xchg
gs
mov
out
jb
jb
fists
cmp
jo
push
adc
dec
xor
pop
jns
xor
insl
push
popf
mov
sbb
aad
bnd
mov
popa
add
mov
ficoms
fisubs
sub
push
push
test
fwait
jmp
lea
cmp
das
cmpsb
jb
mov
inc
and
int
dec
xchg
xchg
add
movsl
iret
rorb
dec
mov
fmull
mov
jp
lds
repnz
sar
dec
cmpsb
jle
cmpsb
inc
std
movsb
add
xor
mov
xor
pop
rcrb
bnd
scas
cmp
adc
dec
aaa
mov
sarb
stc
jge
pop
mov
sub
aam
es
shlb
pop
les
ds
es
mov
scas
into
out
dec
xor
pop
test
xchg
leave
xor
cld
push
call
out
gs
dec
aad
push
jmp
cmp
icebp
cld
pop
inc
cmp
adc
push
scas
pop
fsubr
les
iret
push
push
scas
test
inc
out
repnz
xchg
aas
dec
sub
ret
push
into
fcoms
insl
inc
mov
ret
mov
fbstp
xor
cmp
shr
lret
mov
hlt
xlat
or
push
loope
jae
jmp
cwtl
in
and
pushf
xlat
ja
inc
outsb
ss
push
cmp
xor
xchg
shll
dec
popf
pop
xchg
dec
mov
dec
rorb
dec
mull
sbb
ds
popf
jle
stos
daa
jg
outsb
push
mov
xchg
popa
mov
jnp
inc
gs
and
popa
stos
cmp
and
lock
iret
out
mov
imul
leavew
sahf
cmp
scas
sub
adc
push
fwait
enter
test
sbb
mov
scas
stos
or
dec
addb
mov
fwait
adc
sbbl
inc
dec
push
pop
lret
inc
mov
out
stos
pop
js
mov
xchg
sub
add
sbb
aam
movsb
aam
arpl
cmp
aaa
notb
idivl
mov
in
imul
xchg
add
inc
push
cmp
mov
add
rolb
rorb
jl
sub
icebp
enter
js
in
lret
mov
and
fmuls
jb
shlb
pop
sbb
in
inc
cmp
shrb
clc
xor
mov
sbb
xchg
bsr
cmc
pop
mov
in
jb
icebp
test
dec
adc
sub
or
dec
jne
lods
xchg
mov
mov
jmp
cltd
sbb
rorl
jae
stos
dec
popf
iret
mov
adc
pusha
shlb
xchg
fxam
mov
rclb
add
cmp
js
mov
fimuls
dec
jo
xchg
push
xor
inc
or
lea
nop
rolb
xchg
mov
mov
jnp
jbe
mov
enter
jno
mov
movl
cmp
rcll
jle
loop
rcll
repz
dec
out
xor
push
stos
sub
push
out
aad
pop
inc
cld
pop
xor
adc
out
test
cs
adc
leave
adc
cmpsb
xchg
mov
cs
call
push
outsb
sbb
jae
push
imul
push
pop
mov
stos
inc
popf
jle
sub
sbb
fistl
pop
pop
adc
ds
repnz
stc
int3
mov
je
dec
rolb
push
arpl
hlt
xchg
mov
dec
mov
mov
adc
int3
mov
cmp
cmovg
addb
mov
imul
sbb
repz
xor
or
call
sti
clc
pusha
cmp
lock
or
scas
fdivrs
mov
jg
fadd
punpckhdq
idivl
inc
ret
jae
std
imul
mov
test
andb
out
test
adc
cli
inc
andl
xchg
adc
enter
mov
rcll
sahf
popa
clc
mov
and
dec
jl
adc
pop
and
sub
jnp
fs
addb
adc
pop
push
inc
std
sub
sar
pop
fsubrl
in
call
stos
mov
aas
faddl
popf
stos
out
push
sub
popa
aaa
xlat
xor
push
adc
adc
jge
sbb
pop
cmp
leave
mov
cmp
loop
push
jo
cld
imul
stc
ret
roll
sub
test
cmp
cmp
cmpsb
icebp
call
inc
mov
mov
adc
and
xchg
outsb
call
adc
rcrb
jmp
loopne
popa
loopne
or
jae
dec
dec
clc
and
mov
addr16
data16
loopne
mov
imul
jle
jae
pop
iret
insb
pop
mov
xor
popa
xchg
sub
mov
push
ja
arpl
dec
add
out
jg
inc
aam
sbb
mov
popf
or
loopne
xchg
xchg
pop
sub
sub
data16
in
adc
cmc
aaa
lret
das
pop
mov
xlat
sbb
add
sub
xor
adc
mov
stos
pop
mov
dec
jae
cmp
stc
push
inc
inc
pop
test
jo
es
pop
test
into
in
aaa
outsb
add
add
cltd
pop
ja
jno
inc
mov
xchg
orb
fst
fsts
repz
out
pusha
js
nop
sub
fs
dec
lcall
and
push
repz
clc
js
adc
in
jno
mov
addr16
fdiv
sarl
inc
dec
lock
movsb
daa
inc
or
xchg
ds
cmp
movsb
insl
pop
lret
stc
sbbb
pop
cmc
mov
pop
or
cmp
jno
sub
fxam
je
sub
or
mov
daa
xlat
sahf
push
aas
mov
popa
sbb
jp
stos
orl
in
add
jmp
jl
mov
xchg
jp
inc
mov
enter
or
fwait
cmp
rolb
stos
lods
ud0
xchg
imul
inc
pop
rol
mov
nop
dec
cmp
cwtl
xchg
or
stos
repnz
repz
xchg
cltd
mov
inc
repnz
stos
and
pushf
push
int
mov
in
and
stos
out
std
pop
mov
xchg
adc
aad
or
jns
iret
fcomi
mov
mov
dec
xchg
jmp
pushf
shrl
fcomip
iret
stos
mov
repnz
mov
jb
mov
mov
and
in
inc
lret
sub
aaa
xlat
pop
aas
imul
test
loope
ljmp
lret
ud1
jmp
push
test
xchg
sbb
sub
jl
les
outsl
test
in
adc
and
xor
pop
out
cmp
add
mov
push
rcr
xor
insb
mov
or
inc
sti
test
or
imul
fadds
mov
out
adcb
sub
xchg
pop
xorb
fs
adc
lret
adc
mov
out
lea
jmp
jg
hlt
loope
pushf
sbb
cmp
push
in
out
ds
fisubrl
lds
roll
jns
pushf
fidivs
xor
jb
icebp
aas
test
xchg
xor
fwait
xchg
testl
and
push
jg
or
mov
gs
imul
jg
aad
movsb
mov
mov
dec
fucomi
jo
and
xchg
bound
movsl
js
jno
mov
jl
ljmp
test
nop
jbe
push
xchg
mov
mov
jns
push
push
std
inc
add
mov
sbb
inc
pop
pop
scas
stos
pop
dec
push
inc
outsb
add
jmp
jl
int3
divb
cltd
leave
mov
idivb
push
jns
jb
ret
mov
xchg
push
popa
xchg
lahf
inc
pop
pop
pusha
les
stos
out
sub
clc
mov
inc
push
cmp
dec
pop
jb
es
les
push
rorb
je
sub
lods
ffreep
pop
adc
mov
inc
xchg
imul
icebp
in
sub
into
mov
push
cmpsb
inc
sub
mov
mov
movsl
movsl
daa
stc
cltd
mov
inc
pop
inc
xor
adc
stos
scas
cltd
and
outsl
lcall
aas
mov
adc
pop
outsl
ljmp
repz
popa
mov
repnz
add
push
loopne
pop
jecxz
xchg
inc
clc
mov
jmp
imul
xchg
mov
and
iret
push
inc
sbb
inc
mov
movsb
xchg
mov
pop
adc
mov
imul
inc
cmp
loop
inc
pop
pop
sub
sbb
pop
pop
xchg
mov
arpl
push
mov
test
insl
rorb
outsl
pop
and
mov
xchg
add
cli
jns
sarb
ds
stos
test
inc
imul
daa
test
sbb
sbb
sbb
pop
sbb
sub
sub
fiaddl
xor
cld
loop
mov
pop
outsl
push
pushf
mov
pop
push
adc
std
xor
jno
test
sbb
inc
rorl
test
mov
les
fnstcw
mov
inc
sub
dec
dec
leave
or
and
mov
jno
inc
mov
or
scas
rcrb
jne
jp
enter
in
pushf
pop
add
push
sarb
popf
loopne
add
cmpsl
seto
mov
repnz
mov
push
jb
xchg
push
xor
daa
dec
cmc
in
flds
mov
push
popa
mov
inc
enter
inc
fwait
jbe
xchg
ss
imulb
incl
imul
int3
xchg
shl
outsb
or
push
or
fstpt
xor
mov
dec
insl
addr16
mov
sbb
jne
fcomi
inc
in
push
adc
ficompl
inc
adc
cmpsb
push
imul
xor
and
sbbb
ret
popl
fsubrp
divb
xabort
mov
sbb
arpl
xor
inc
mov
fsubrl
push
and
xor
jmp
and
pusha
in
lea
adc
xlat
mov
leave
nop
icebp
mov
adc
push
and
jl
adc
sub
or
std
clc
mov
cmp
inc
pop
cmp
icebp
xor
sub
scas
bound
push
pop
xchg
lock
inc
scas
loop
pushf
lahf
aam
push
push
and
mov
movsl
es
xchg
or
lock
xor
pop
mov
or
insl
add
clc
pop
shrl
jmp
mov
bound
mov
cmp
adc
inc
idiv
mov
push
jle
sarb
inc
fwait
popa
push
cmpsb
imul
les
push
push
mov
mov
xchg
je
or
sub
jno
jge
imul
xor
xor
fcmovnu
leave
pop
notl
mov
popa
cmp
push
xchg
pushf
sbb
mov
and
dec
xchg
aad
mov
aas
cmc
into
mov
enter
ljmp
push
es
out
mov
and
stos
push
loope
shrb
push
push
push
jno
jb
nop
sti
xor
data16
lods
stc
adc
clc
xor
es
shll
test
add
push
call
aam
jecxz
jne
xor
imul
fiadds
dec
fwait
loope
adc
popa
clc
sbb
jl
repz
imul
xchg
dec
data16
outsb
sub
call
icebp
mov
shlb
mov
clc
aas
sbb
cmpsb
rolb
addl
mov
sti
adc
mov
call
fnstsw
pop
clc
mov
and
or
fdivrp
and
jb
stc
pop
sbb
lods
in
outsb
dec
aad
mov
dec
les
xor
outsl
mov
sbb
adc
sarb
test
nop
xor
mov
jno
aam
push
lret
stos
xchg
cpuid
vmovdqu
xchg
push
je
int3
aad
dec
mov
xchg
or
mov
push
and
jo
aas
sbb
cmp
sub
dec
push
push
decl
pop
shlb
adc
iret
cmp
mov
push
jnp
sbb
sub
xor
inc
rcr
loope
jmp
sub
rcr
push
jae
movntq
out
add
or
mov
mov
xlat
insl
test
ret
shl
sbb
int
loopne
xor
pop
repz
popa
movsl
jbe
cwtl
sub
enter
sbb
sub
mov
rcl
scas
and
jg
loope
jno
dec
in
cwtl
or
call
dec
popf
adc
movsb
jae
xchg
push
mov
jne
daa
ja
daa
dec
push
sub
loop
xor
and
fdivs
sbb
xor
mov
push
repnz
and
jl
push
andl
ss
stos
cmp
dec
mov
xor
out
test
gs
sub
mov
arpl
push
scas
jne
imul
cld
jne
andl
es
pop
pop
mov
cltd
adcl
hlt
push
lcall
mov
shrl
shrl
jge
loope
aaa
and
dec
pop
ja
cmp
test
cltd
mov
fdivl
mov
push
enter
test
dec
xchg
sub
sbb
cpuid
xchg
iret
fdivs
push
jmp
pushf
aas
leave
cmp
xor
push
arpl
test
mov
add
cld
xor
clc
sub
inc
xor
sbb
clc
jae
clc
pop
sti
imul
jo
int
ja
enter
cmpsl
ds
punpcklbw
mov
xchg
inc
outsl
fdivs
mov
fsubrs
imul
push
loopne
mov
test
sbb
aad
add
inc
cli
shrb
sti
pop
je
and
test
icebp
dec
das
mov
lods
add
pop
cmp
jg
xorl
scas
dec
push
aaa
repnz
lret
mov
daa
fsubrs
adc
sbb
mov
cmp
fldcw
inc
pop
call
xor
jle
shrl
lret
ret
sbb
aam
and
mov
lahf
mov
mov
dec
jge
jg
fsubs
ljmp
cld
adc
jo
pop
pop
fs
jnp
xchg
adc
stos
cwtl
cmpsl
mov
push
jmp
pushf
loopne
jno
dec
cld
sub
jle
pop
in
cwtl
insb
rorb
dec
xor
cmp
mov
cmp
mov
mov
pop
push
xchg
mov
and
ficoml
sti
and
sbb
push
jecxz
xchg
xor
shrb
xor
stos
mov
or
mov
push
push
nop
mov
insl
enter
push
dec
imul
test
loopne
or
or
push
fistl
or
pusha
jp
repnz
xor
mov
lret
lods
lret
pop
sbb
pop
adc
call
cltd
cmp
jp
jl
insl
mov
aaa
xchg
and
stos
sbb
mov
sbb
aas
add
adc
mov
es
loopne
out
pop
sbb
bound
lock
xchg
xor
out
mov
ret
push
pop
jae
mov
adc
push
out
in
push
addl
xchg
pop
je
shlb
adc
insb
push
lock
sub
pop
sbb
pop
xchg
ljmp
into
or
pop
das
mov
ret
cmp
jp
mov
mov
mov
adc
mov
lahf
adc
rcr
repz
jge
sbb
arpl
sub
adc
ja
dec
xchg
shl
jnp
movsb
out
test
cmp
add
lods
imul
sub
iret
jbe
sub
jo
xorb
push
pmulhuw
addr16
cmpsl
ljmp
mov
jns
mov
adc
jg
roll
add
cwtl
into
fwait
mov
das
jl
mov
push
jb
mov
push
pop
pop
in
popf
scas
aad
pop
jbe
stc
or
call
xor
cli
add
adc
dec
push
ror
stos
imul
nop
in
cmpsb
das
sti
notl
push
test
pop
pop
pushf
andl
sub
xchg
mov
pop
xorl
ja
pop
je
popa
mov
fstpt
add
sbb
je
xchg
and
mov
fistps
mov
mov
and
js
imul
mov
fcmovne
jns
push
data16
lahf
test
pusha
cmp
jns
inc
ficoml
addr16
ljmp
sub
lahf
fcoml
inc
insb
das
jmp
mov
mov
jmp
cmp
pop
jmp
mov
push
jns
jmp
pop
lods
dec
div
jo
cmp
aaa
pop
rcr
dec
rcr
repz
xor
add
setno
cmp
lods
mov
scas
lds
push
test
dec
call
test
nop
scas
fldl
imul
and
sbb
add
es
jno,pn
jecxz
std
mov
or
sub
pushf
sahf
or
in
jg
lcall
sahf
mov
sbb
scas
and
push
push
mov
mov
das
cmpsl
mov
adc
push
cltd
repz
pop
fs
stos
fldt
shl
repnz
mov
les
jae
aam
jne
dec
jae
out
jns
pushf
aas
sbb
outsb
xlat
cmp
mov
xchg
mov
gs
xchg
cmp
jle
inc
fdivs
xorb
fsubrl
xchg
pop
pop
fwait
xlat
scas
and
ljmp
dec
jno
mov
mov
repz
dec
mov
test
movsb
add
test
jg
hlt
mov
int
das
dec
fcoms
jno
data16
lahf
lods
ret
pop
push
push
aaa
cs
sarl
and
fs
jg
fsub
rol
out
outsl
push
inc
ret
mov
cmp
inc
lahf
and
jmp
push
pushf
sub
xchg
jae
divb
int3
rcrl
testb
icebp
push
shlb
dec
xor
dec
cmp
cwtl
or
fwait
insb
int
push
xchg
sub
ret
inc
push
popf
jns
int
jbe
not
pop
cmp
into
loopne
push
insl
add
jne
in
cmp
pop
adc
mov
mov
orb
cmp
ret
insl
les
mov
clc
push
hlt
adc
fsubrs
mov
mov
sub
out
jae
sub
mov
cmpsb
mov
push
enter
add
adc
daa
lock
not
scas
movsl
pop
imul
or
jmp
ljmp
lea
mov
insl
push
add
inc
out
sti
lcall
into
xchg
call
pop
cmp
lods
sbb
mov
jbe
decb
xchg
adc
push
cs
in
xor
dec
nop
add
push
lret
lea
mov
imul
mov
je
das
push
jne
push
sahf
pop
rol
test
add
inc
shlb
stos
mov
adc
shlb
outsb
lea
insl
cltd
fs
je
mov
cmp
divps
sbb
inc
scas
jl
push
jle
cmpsl
mov
sbb
icebp
aam
cli
out
dec
sub
add
push
jle
push
sub
enter
lret
adc
into
add
or
mov
pop
mov
mov
stos
fwait
and
ficomps
jmp
xchg
insb
mov
sub
push
pop
bound
aam
inc
stos
xchg
or
and
daa
out
shl
or
sbbb
jmp
fcomi
outsb
lods
mov
test
dec
movsl
imul
adc
fwait
ds
pop
out
test
aaa
lock
lock
xor
sbb
inc
shll
das
jp
cmp
test
and
xor
or
dec
jecxz
bound
sub
sbb
sbbl
add
repnz
jnp
pop
jl
or
mov
js
pop
or
xchg
pop
das
xchg
inc
aad
and
xchg
pop
lahf
add
push
lcall
push
jo
cmp
push
pop
lea
in
push
cli
sbb
jb
dec
cltd
xchg
incl
ret
lea
push
sub
sub
imul
fs
jb
loop
jnp
shr
pop
push
mov
inc
cli
stos
xchg
bound
mov
xchg
stc
fsubrl
repz
je
ret
stos
sbb
out
and
add
sub
push
mov
add
fs
icebp
ret
cmpsl
pop
je
mov
jl
cmp
or
or
xor
sbb
in
sub
addr16
out
js
or
xor
aam
dec
test
ds
lret
test
or
or
in
imul
arpl
fiaddl
xchg
aam
xchg
jno
mov
lret
loop
cmpsb
scas
xchg
sub
add
cmp
aad
out
pop
sahf
cmp
cmp
xchg
and
lds
push
adc
test
mov
add
ret
cmpsl
idivl
pop
cmpsl
cs
inc
xchg
add
add
lods
mov
or
xchg
mov
sub
mov
hlt
jmp
js
mov
dec
in
dec
hlt
aam
arpl
xor
add
mov
cld
aas
xor
mov
pop
out
fsubrs
push
and
jl
mov
xchg
adc
rolb
insl
inc
ds
cltd
pop
daa
adcb
add
pop
cmpl
dec
pop
push
xor
loopne
xor
fsts
loop
mov
int
outsl
xchg
jnp
out
sub
xchg
out
xchg
aad
inc
cwtl
pop
pop
sbb
shll
pop
push
ja
mov
sbb
cld
adc
lods
ret
and
push
scas
rcrl
aas
fwait
push
add
mov
cltd
fcompl
cmp
mov
cmp
xchg
sub
rorb
mov
scas
and
lods
jnp
xchg
addb
cs
push
add
xchg
jge
add
adc
pop
gs
cwtl
mov
xlat
loopne
mov
push
adc
and
mov
sbb
xor
enter
shll
push
sarl
in
xor
mov
mov
std
aad
pop
rclb
sbb
xlat
xor
das
daa
xor
jl
iret
stos
cmp
into
out
inc
je
push
gs
mov
mov
aas
in
mov
dec
pop
dec
inc
dec
add
xchg
pop
mov
jo
cmp
loope
gs
jnp
sub
bts
and
lahf
jno
cmp
adc
lcall
sbb
mov
je
xchg
jle
and
aaa
dec
std
cmpsl
mov
aad
xchg
lds
push
and
mov
push
adc
mov
lret
mov
rol
inc
sbb
ret
and
sarl
sbb
loope
lock
aas
pop
mov
jo
push
js
lret
cli
or
xor
jns
aas
cmp
js
cmp
iret
jne
and
sarl
mov
mov
dec
sbb
inc
lods
mov
imul
adc
push
popf
pop
or
pop
xchg
lcall
push
push
mul
push
inc
imul
inc
fs
push
jns
dec
cmp
mov
aad
jb
addr16
in
push
cltd
jno
sbb
push
incb
dec
add
ja
mov
enter
mov
daa
xchg
inc
or
and
mov
scas
adc
fld
xchg
das
mov
aam
inc
xchg
or
adc
clc
lret
push
fimuls
pop
ds
imul
push
dec
adc
sbbb
repnz
and
mov
iret
stos
mov
out
imul
and
dec
js
mov
sbb
dec
sbb
or
dec
test
inc
mov
inc
es
mov
hlt
insb
mov
mov
nop
pop
test
lret
aam
pushf
xchg
mov
push
pop
in
mov
adc
jecxz
mov
faddl
sub
fcmove
pusha
pop
in
dec
arpl
adc
pop
push
cmp
push
rol
sbb
jecxz
int
aam
fcomps
cmc
data16
push
xor
and
xor
loopne
bound
lods
inc
clc
subl
ds
mov
dec
mov
xor
in
out
or
rol
push
jae
and
hlt
icebp
sub
sub
stc
pop
xor
cmp
or
test
and
jns
mov
in
jnp
das
sbb
mull
pop
push
int
pop
or
jmp
pop
das
sub
jmp
les
and
pop
rcrl
xchg
mov
mov
push
scas
mov
je
daa
pop
add
sbbl
outsl
adc
rcl
xor
sub
push
sub
out
call
aad
push
adc
insb
jle
shrb
jb
faddl
cltd
jp
xchg
mov
inc
mov
and
ret
or
xor
cmp
sti
mov
mov
dec
dec
lds
push
push
xchg
sbbb
sbb
fsts
jle
jecxz
pusha
jmp
insl
out
xchg
jge
test
or
imul
icebp
testb
cmp
clc
dec
in
insl
mov
repnz
jns
mov
cld
adc
out
js
in
stos
adc
sbb
addr16
data16
cmp
jp
ja
aam
rcl
das
dec
pop
and
mov
insl
adc
inc
push
xor
orb
pop
out
push
jmp
mov
mov
mov
dec
xchg
dec
into
mov
or
aam
out
bound
cmc
mov
mov
mov
aad
js
incb
addb
mov
pop
sar
mov
push
sbb
inc
adc
xchg
dec
mov
cld
sbb
enter
test
and
or
idivl
aam
sbb
lahf
adc
push
movb
movl
in
push
fs
iret
xchg
dec
inc
mov
xor
fxch
imul
outsl
lods
mov
pop
cli
xchg
xor
push
add
mov
rolb
lret
lcall
cs
pop
sbb
daa
js
out
daa
jg
sub
in
in
cmp
mov
hlt
jmp
fldcw
jp
xor
lds
push
mov
js
repnz
mov
pop
inc
or
sub
loope
fildll
icebp
cltd
sbb
call
jecxz
repz
adc
icebp
dec
pop
scas
popa
and
movsl
xor
adc
jns
cmp
xchg
jecxz
adc
lret
pop
jmp
in
mov
stos
loope
nop
pop
js
insb
nop
lret
iret
and
mov
lcall
sbb
push
iret
cltd
aaa
insl
out
out
and
push
mov
mov
sbb
mul
sub
mov
push
sbb
sbb
mov
test
push
mov
mov
add
es
xchg
mov
nop
push
or
nop
inc
stos
cmp
rolb
movsb
bound
add
xor
sub
and
aaa
cmp
pop
cmp
sbb
jge
mov
js
xchg
inc
mov
push
mov
mov
sbb
sub
sbbb
dec
in
push
mov
xchg
pop
mov
clc
sbb
std
jne
cmp
das
stc
jmp
inc
popa
in
inc
icebp
into
fadd
mov
push
je
dec
cmp
addr16
mov
cmp
push
mov
mov
negl
in
cmc
lcall
or
mov
lds
xor
movsb
andl
push
push
mov
xor
mov
insb
and
icebp
gs
jecxz
lret
mov
out
xor
stos
mov
and
js
negl
ffree
mov
sbb
ret
ljmp
cs
inc
xchg
add
mov
mull
jl
and
xlat
sbb
out
pop
sub
ficompl
mov
jbe
insb
sbb
inc
ss
popl
jns
nop
xlat
mov
jle
adc
addr16
inc
push
sub
lret
mov
push
bswap
mov
stos
push
in
jmp
dec
push
lret
xchg
loopne
xorb
imul
mov
push
aam
cmp
xor
cld
mov
neg
push
pop
dec
je
xlat
test
loope
cltd
pop
jnp
es
daa
dec
mov
sub
in
jg
inc
adc
clc
sbb
std
lret
push
int3
movsb
jg
jg
jecxz
mov
jle
mov
xchg
mov
push
js
aaa
sub
mov
nop
xor
lret
or
lcall
dec
or
jae
sub
dec
in
sub
dec
and
fadds
loop
mov
or
adc
xchg
inc
add
out
xchg
xor
lahf
push
movsb
mov
sbb
cmp
inc
int
mov
dec
sbb
jae
in
lods
and
xchg
mov
shlb
inc
popa
inc
mov
adc
or
icebp
adc
mov
mov
inc
ja
xchg
mov
sub
lret
lods
movsb
scas
std
aad
add
fsubs
aad
lods
mov
xchg
mov
adc
pop
rorl
scas
imul
jge
xchg
stos
popa
xchg
mov
loop
nop
adc
mov
adc
push
sub
adc
add
scas
enter
xchg
and
pop
sbb
out
outsl
adc
das
dec
and
push
shr
leave
xor
pop
jno
fstpt
mov
mov
test
rorb
inc
push
xor
dec
and
push
pop
fistpll
dec
pop
sbb
aaa
pop
pop
pop
sahf
dec
pop
mov
ret
ficoms
cli
dec
mov
enter
les
imul
xor
dec
pop
cmpsb
cmc
popa
sub
xchg
lds
mov
ja
bound
jbe
sub
stos
cmp
inc
jne
dec
iret
scas
mov
push
std
cs
mov
repz
test
aaa
outsl
inc
gs
jns
fisubrs
jnp
push
or
lret
pop
cmp
in
and
sbbl
sub
or
fcoms
mov
cmp
jge
inc
xchg
sahf
push
xchg
jne
movsl
inc
and
aas
mov
sbb
inc
fisttps
mov
movsb
sahf
dec
mov
mov
rolb
cmp
or
sti
stc
pop
mov
jl
sahf
push
mov
mov
push
cmpsl
ja
int
jo
scas
sbb
paddsb
push
orb
mov
out
pop
mov
sub
inc
jle
shll
mov
mov
cmp
test
mov
mov
fdivs
push
inc
andl
pop
daa
jge
jae
mov
mov
xchg
mov
icebp
pushf
loope
cmp
and
push
dec
ljmp
lret
pop
cli
sub
in
mov
stos
sbb
dec
daa
test
shll
and
jae
adc
pop
mov
stos
lods
dec
int3
push
enter
push
pop
dec
mov
jno
mov
pop
cmc
iret
inc
les
push
push
and
jp
sub
add
repz
inc
cmpsl
pop
dec
data16
shrb
adc
push
je
lea
or
fiadds
in
adc
pop
mov
sbb
dec
test
rorb
dec
aaa
insl
xor
fisttpll
xor
pop
aaa
fistpl
repnz
adc
in
scas
push
sbb
pop
adc
sahf
outsl
gs
push
jg
repz
push
push
push
sub
sub
int
in
stos
dec
rep
xchg
mov
push
mov
mov
pop
fcoml
pop
hlt
pop
dec
pop
jns
in
mov
popf
xor
pop
sarl
ds
adc
loop
pushf
sbbl
dec
in
pop
sub
nop
push
xchg
or
pop
or
mov
aaa
inc
or
and
fildll
call
add
imul
lret
in
lcall
rolb
das
cmp
in
xchg
xor
cmp
pusha
minps
push
push
das
insl
xor
push
out
xor
divl
inc
push
dec
jo
int3
jle
push
inc
add
cmpsb
scas
sub
cmc
sub
mov
sub
mov
jnp
pop
popa
and
sarl
jp
iret
frstor
mov
cwtl
aam
mov
sar
outsb
lahf
ror
and
in
push
icebp
xlat
pop
push
in
fmull
inc
sbb
or
mov
hlt
cmp
aas
sti
fcmovb
sub
sub
xor
mov
sbb
sti
jo
xor
sub
push
sub
pushf
cld
mov
ja
mov
add
mov
dec
mov
loopne
jne
popf
jb
testb
arpl
insb
push
jecxz
or
in
push
jle
jb
push
pop
imul
xchg
ljmp
hlt
push
ja
push
push
lret
xlat
mov
ffreep
jp
jns
inc
js
std
repz
jg
in
add
loop
in
push
scas
pop
out
sbb
sub
test
mov
fcmove
add
mov
insb
cmp
jle
sbb
call
pop
add
fimuls
xor
ret
mov
cmp
dec
pop
pop
or
and
xor
outsl
std
fsubl
cld
fsubl
ret
gs
orl
leave
jno
leave
or
popa
jge
out
inc
xor
pop
mov
sub
mov
js
cmp
cs
push
push
jge
mov
int
mov
sbb
test
sbb
inc
out
movsl
aad
mov
mov
cmc
or
sub
lret
add
or
icebp
daa
xchg
cmc
dec
stos
or
sbb
pop
enter
xor
in
ja
ret
in
dec
or
push
nop
lock
lods
push
addr16
stos
xor
ja
pop
mov
pop
pushf
xor
imul
lret
mov
mov
sub
jns
lahf
dec
xchg
stos
and
popa
jmp
or
dec
adcl
fstpl
jl
dec
xchg
stc
and
cmp
ss
add
hlt
cmp
repnz
cmp
jmp
cltd
aam
insb
inc
decl
cmp
divl
mov
cmpsb
out
push
ss
mov
pop
jmp
mov
lock
or
push
sub
lea
sbb
ret
pop
sbb
fcmovu
sub
xchg
je
scas
divb
mov
pop
jl
xchg
inc
mov
mov
negb
mov
in
dec
adc
or
rorl
das
push
fnsave
adc
xor
sbb
neg
in
push
call
mov
sub
xor
daa
mov
ljmp
xchg
push
pop
sbb
stos
clc
inc
divl
imul
mov
pop
cmp
enter
pushf
cli
dec
pop
idivb
sti
xchg
sub
mulps
cmp
outsl
aad
sbb
loop
clc
lds
aaa
or
add
inc
xlat
inc
ss
aam
cmp
cmp
mov
aaa
xlat
scas
xchg
pop
dec
sbb
insb
mov
popa
test
push
cmp
cmpsl
pop
in
stc
mov
insl
in
xchg
mov
fcompl
dec
mov
imul
mov
sub
jle
int
test
sbb
pop
cli
sub
sub
pop
and
jle
into
dec
pop
pop
cwtl
xor
mov
jl
jns
sbb
aam
and
adc
arpl
jmp
xchg
aas
xor
adc
xchg
mov
nop
arpl
pop
cld
fsubr
inc
dec
or
mov
jne
out
fistpll
enter
cmp
xchg
adc
sbb
loopne
sub
ljmp
push
test
dec
jmp
add
adc
test
mov
pop
pop
mov
div
out
sbb
fcomps
aam
movl
fisttpl
scas
lods
insl
scas
xor
bound
in
inc
add
jecxz
test
cwtl
cmp
std
int3
mov
dec
mov
shrb
insb
ret
dec
xchg
scas
and
lds
das
in
cmp
pop
rep
mov
add
inc
pop
and
mov
xor
dec
out
daa
sahf
xchg
pop
ret
sbb
lods
adc
dec
leave
and
push
jl
cmp
test
jmp
cmc
cmc
fimull
mov
mov
sbb
push
adc
mov
xor
and
aad
jl
xchg
jb
sbb
or
sub
dec
push
pop
pop
fs
mov
or
push
push
push
mov
or
cmp
add
sti
jl
push
sahf
or
int
icebp
leave
push
mov
xor
or
jg
mov
fidivl
sarl
sub
mov
xchg
sub
out
pop
inc
jmp
test
jnp
lcall
push
in
hlt
sbb
nop
add
shll
xchg
xchg
rcrb
arpl
fsts
add
cld
pop
cmp
mov
fucomp
pop
mov
adc
and
arpl
jno
or
out
xor
adc
hlt
js
stc
lock
sbb
movsb
and
add
cmc
inc
adc
mov
jecxz
push
ja
mov
adc
xchg
push
inc
cmpsl
pop
lret
sbb
add
lret
dec
fs
rol
roll
push
mov
cltd
cmp
arpl
out
dec
and
pop
cli
outsl
mov
inc
loopne
xchg
mov
pop
sbb
push
adc
ljmp
into
fisttpl
adc
cmp
iret
jmp
add
mov
js
shll
sbb
in
ljmp
dec
mov
incl
mov
popa
push
cmpsb
rolb
nop
mov
sarl
scas
aaa
push
arpl
mul
loope
out
sub
repz
inc
sbb
sarb
xchg
cli
into
jns
outsb
fimuls
rcll
jo
std
stos
std
add
daa
ljmp
pop
or
xor
in
je
in
addr16
stos
je
fcoms
mov
out
lret
mov
pop
out
jle
add
or
int3
mov
jle
test
in
imul
jno
jno
lods
mov
sub
sbbl
mov
add
mov
fcoml
jbe
test
inc
jne
jbe
xor
or
data16
in
fwait
mov
dec
push
xchg
ljmp
xor
pop
stos
and
or
cmp
sub
je
stos
lcall
and
subl
cmpsb
mov
and
jno
enter
jns
aas
hlt
or
dec
dec
add
fcomip
push
lods
cmpsl
mov
jmp
jmp
jge
inc
sti
jae
andnps
xchg
inc
jnp
or
in
mov
pop
repnz
inc
mov
ljmp
stc
clc
lahf
jmp
jle
sbb
loop
push
and
jg
mov
adc
jp
xchg
dec
add
xchg
cmp
cmc
pop
mov
loop
jne
lock
divb
sub
push
sarb
cltd
sbb
adc
aam
dec
popf
aas
aaa
xchg
mov
test
adc
cmp
addr16
pusha
or
fisubrs
lcall
imul
jne
lock
test
out
add
ret
mov
sahf
jo
aaa
pop
bound
fstps
sbb
out
or
mov
shr
int3
xchg
jg
jl
mov
negb
xchg
lret
mov
cmc
pop
push
add
xchg
lods
cld
mov
shr
sbb
mov
jecxz
incl
mov
xlat
push
adc
adc
lcall
cld
and
in
xchg
inc
pop
or
add
cltd
das
jecxz
negb
sahf
test
cltd
dec
inc
inc
jne
mov
or
in
xchg
pop
lret
add
imul
ficomps
lea
flds
inc
mul
das
sbb
sbb
pop
or
fiaddl
icebp
fistpl
mov
std
dec
and
mov
fxch
xchg
out
bnd
xchg
or
add
and
mov
dec
imul
push
outsl
imul
push
sbb
ret
pop
lods
aas
push
pusha
and
fistpl
xlat
fs
scas
pop
lods
loop
lsl
lea
mov
or
repz
les
ja
push
ret
inc
jp
mov
imul
fsubs
fwait
cld
or
cli
adc
mov
push
in
jge
cmp
and
jge
jno
aad
lcall
push
add
cltd
sub
ljmp
add
mov
fs
lret
pop
mov
test
lds
mov
pop
mov
mov
fistpll
int
adc
repz
xchg
jns
mov
mov
add
outsl
jns
cmp
adc
sarb
cs
lods
aas
mov
push
sub
mov
mov
pop
or
mov
lret
pop
and
push
cwtl
jge
fidivs
fs
lods
and
xor
or
data16
fiaddl
sub
pop
pop
sar
mov
push
cmp
sbb
popa
mov
push
mov
sub
and
mov
jg
shr
scas
loopne
mov
ljmp
loopne
lock
test
xor
sub
inc
je
lea
inc
dec
pop
dec
jnp
jne
loopne
jno
mov
outsb
insl
int3
xor
adcb
or
jo
aam
popa
loopne
pop
fsubrl
jb
lods
dec
or
pusha
push
stc
push
xchg
xor
pop
call
add
sbb
mov
fildl
jo
xor
push
jecxz
jecxz
int3
test
nop
mov
fwait
jo
lret
shlb
pop
push
insl
fldl
and
ljmp
pop
cmpsl
or
mov
js
jmp
mov
aam
ror
jae
add
add
mov
movsb
addr16
repnz
pop
jno
and
xor
in
inc
and
xor
sbb
dec
push
pop
int3
mov
lock
xchg
arpl
das
decb
rol
and
xchg
cmp
sub
pop
or
mov
aaa
cmp
imulb
and
mov
mov
inc
mov
pop
test
pop
and
dec
push
ret
jnp
shlb
adc
lret
or
imul
and
lret
adc
lret
jne
mov
inc
int3
outsl
les
fadds
xor
je
into
iret
lahf
stos
pop
sti
imul
mov
repnz
scas
and
xchg
lds
es
jne
ret
rcrl
js
add
rcll
fistpll
push
xchg
sub
stos
jl
xor
cld
xlat
jae
fwait
pusha
dec
dec
pop
and
push
mov
lahf
jne
out
dec
or
dec
dec
rol
inc
lock
mov
in
cmp
stos
addr16
xsave
pop
xor
fbld
mov
sub
pusha
sub
sarl
mov
or
out
pop
fimuls
lds
jnp
aam
je
inc
out
mov
add
ficomps
jle
adc
je
inc
in
stos
pop
mov
jbe
rcrb
repz
cmp
sbb
sti
pop
push
adc
outsl
push
ret
xchg
jp
mov
sub
testb
or
mov
pop
out
stc
xor
jbe
orb
icebp
or
or
fwait
pop
adc
adc
mov
jl
push
mov
movsb
aaa
cmp
out
out
call
enter
lds
in
cltd
ror
pushf
mov
cmp
ss
fnstcw
jl
xor
pop
addb
mov
xchg
mov
pop
das
aam
push
js
mov
scas
pop
or
add
xchg
mov
ficomps
mov
popa
xorb
and
fs
xchg
enter
aam
mov
push
mov
mov
xchg
testl
cmc
mov
cmp
pop
repnz
cs
outsb
loopne
daa
xor
jbe
loop
push
lock
outsl
mov
and
loope
sbb
adc
arpl
aas
mov
dec
jns
lret
fwait
stos
das
or
xchg
mov
je
int3
cmpb
or
rorl
sbb
es
lock
jl
ss
or
cmpsl
lahf
jp
sbb
sbb
xchg
jecxz
repz
inc
out
enter
loope
fistpl
jo
push
jp
test
sarl
jge
or
lock
mov
aaa
subb
sbb
lea
insl
xchg
outsl
or
sub
lahf
pop
lods
mov
jmp
sbb
lds
adc
push
out
addr16
sbb
inc
mov
jnp
xorl
idivl
push
lahf
js
mov
das
popf
dec
mov
faddl
cmp
mov
pop
shl
jge
sub
insl
out
push
dec
mov
xor
inc
aam
inc
popl
add
xor
pop
aad
mov
xor
mov
movb
sti
mov
in
inc
mov
adc
movd
xor
xchg
lock
mov
cmpl
sub
jmp
test
jecxz
or
cmp
fcoml
int3
add
push
push
std
mov
movsl
cltd
sub
out
xor
test
or
fs
mov
ljmp
bound
scas
icebp
add
lret
or
lock
into
dec
pop
add
popa
lret
xlat
xor
sub
pop
ficoml
nop
and
stos
push
mov
xchg
add
das
pop
inc
test
sub
mov
pop
add
mov
pop
shr
imul
sbb
jb
and
mov
inc
dec
fldt
jg
dec
or
scas
outsl
dec
pop
sbb
dec
inc
ret
xchg
add
inc
pop
sbb
add
mov
and
mov
push
xchg
ss
push
dec
cltd
pop
cli
jno
cmp
jge
mov
jno
mov
clc
mov
test
jne
les
aam
mov
fisubl
add
clc
or
cltd
shlb
cmp
inc
pop
addr16
pop
xchg
sbb
dec
pop
push
ficomps
push
pushf
es
pop
out
inc
push
mov
aaa
pop
jg
mov
and
dec
mov
jb
xor
lods
or
inc
mov
or
mov
pop
fidivrl
or
popf
jmp
in
or
jge
pop
add
mov
icebp
push
xor
push
fisttpl
inc
in
xor
mov
lds
pop
aaa
sub
les
push
xor
dec
data16
out
xor
pop
mov
outsl
cli
pop
ljmp
push
fcmovbe
insl
xchg
lret
cmc
mov
fwait
les
test
hlt
ds
sub
sbb
insb
loop
out
adc
mov
outsl
idivb
mov
mov
pop
sbbb
adc
popa
lods
iret
data16
and
stos
mov
mulb
cltd
push
aas
inc
pop
xchg
cmp
mov
mov
fstpl
out
mov
dec
xchg
or
ljmp
mov
xchg
aas
andl
aad
ds
subb
push
pop
fcoml
sahf
mov
sub
or
sbb
lods
sti
jecxz
lret
ja
imul
add
stos
push
mov
mov
insl
popf
subl
cmp
loope
rcl
adc
sbbl
mov
sub
adc
ja
repz
lcall
cld
aaa
sub
pop
lcall
dec
pushf
lcall
mov
jb
sub
cmp
mov
cmpsb
ja
popf
mov
push
sti
jae
sub
lock
push
pop
insb
repnz
jg
and
dec
sbb
in
jbe
mov
in
repnz
sub
mov
adc
xor
xchg
dec
test
sub
int
mov
cmpsb
push
mov
adc
or
pop
not
and
or
sbb
arpl
insb
ret
loope
mov
movsb
roll
mov
xchg
xor
jne
cli
cltd
xchg
adc
mov
mov
mov
pop
jno
inc
push
mov
das
cmp
lahf
je
loop
outsl
jecxz
fsubl
mov
rcl
mov
pop
out
push
repnz
lcall
push
cmpsb
in
push
adc
jmp
sti
scas
loop
push
sub
sbb
sarb
loope
clc
arpl
jge
ss
dec
ja
cmpsb
mov
es
mov
sbbb
call
int
mov
es
pop
mov
adc
out
lods
xor
mov
aam
and
das
fwait
jnp
aaa
and
xchg
add
test
jmp
push
lods
std
into
cs
jnp
gs
xchg
aam
mov
jecxz
cs
fcmovnu
hlt
inc
idiv
mov
mov
outsl
shll
inc
addr16
js
cmpl
cmp
test
dec
test
xchg
pop
arpl
dec
sbb
iret
and
cmpsb
mov
xchg
cli
in
test
es
push
pop
pop
pop
mov
fildl
orl
adc
ret
test
jle
pop
jno
fmull
in
lret
loop
das
push
cmp
mov
aad
mov
dec
push
inc
push
rcrb
insb
subl
movsl
push
incb
lret
fstpt
fs
int
ds
es
fbld
mov
push
out
pop
icebp
or
xchg
or
aaa
pop
add
inc
notl
xor
mov
cmp
into
popf
mov
loope
fs
ja
jne
lahf
lock
js
xchg
and
push
scas
shll
popa
scas
or
test
mov
adc
in
or
sub
and
xchg
and
mov
fbstp
add
pop
jg
in
and
subb
or
xchg
and
outsb
push
mov
jecxz
pop
push
and
pop
and
jno
mov
mov
stos
inc
jne
arpl
shlb
inc
int3
push
pop
cmp
rcrb
or
inc
lds
or
xor
icebp
mov
stos
push
out
add
stos
pop
jnp
sbb
movsb
movsl
add
ret
dec
lods
and
sub
cld
cld
lahf
std
add
repz
es
cmp
add
jmp
scas
push
fs
popa
and
loopne
popf
fs
add
jle
fnsetpm(287
sub
fimuls
imul
loopne
sbb
push
flds
sub
movsl
orl
sub
data16
in
mov
mov
cmp
adc
push
cs
cltd
adc
mov
insl
inc
stc
mov
jae
dec
jg
cmp
fldl
in
lock
test
nop
push
sub
int3
stc
mov
scas
mov
or
sub
mov
and
cmp
jle
xchg
adc
in
sub
nop
decl
xchg
lret
lds
jno
and
je
xchg
leave
and
adc
mov
or
aas
js
mov
xor
mov
mov
dec
sub
adc
popa
cmc
fs
sbb
hlt
in
xchg
jns
clc
loope
addr16
add
pop
jnp
or
enter
sti
or
call
loop
lods
mov
sub
and
pop
lods
test
push
sub
mov
fwait
push
jbe
les
sbb
mov
fistps
movb
xchg
dec
push
inc
addr16
sub
cmp
pushf
test
imul
add
xchg
dec
icebp
in
rcrl
xchg
pop
jl
lret
fs
test
sbb
aaa
mov
dec
and
stos
jnp
das
pop
xor
jg
push
repz
test
add
adc
sub
dec
shrl
inc
data16
int3
subb
inc
jmp
flds
fsubrs
inc
aam
fisttps
icebp
lahf
sub
mov
stc
pop
sub
rorb
mov
push
andl
inc
or
stos
clc
sbb
ret
mov
sbb
test
fs
sbb
xchg
gs
icebp
loopne
xchg
mulb
adc
xchg
and
xchg
push
jecxz
sub
xor
xor
mov
xor
data16
bound
push
movsb
sahf
imul
jle
mov
push
mov
imul
pop
push
outsl
jne
jns
cmp
jno
nop
jmp
int3
cmc
cs
imul
add
fldt
pop
pop
stos
cmp
jg
loope
xchg
sub
int
sarb
mov
or
push
push
cmp
inc
cmpsl
in
sahf
inc
and
loop
jle
je
adc
insl
mov
xchg
das
lock
mov
dec
lret
fs
dec
mov
shl
cmp
test
ljmp
fdiv
es
repz
aam
lock
lahf
jb
out
ret
mov
mov
cmpsl
xchg
sbb
loope
jnp
push
mov
mov
outsl
xchg
movsb
sub
xchg
imul
mov
xor
aas
outsb
mov
adc
loop
cld
cld
pop
popa
xor
es
jg
mov
mov
xlat
lea
fnstcw
rorl
ret
jae
scas
fcmovb
int3
or
jge
pop
xor
push
scas
iret
jnp
mov
or
pop
pushf
dec
dec
lods
aam
cmp
push
and
enter
nop
mov
sti
jo
dec
inc
les
lret
sti
loop
dec
rol
data16
dec
adc
mov
jmp
adc
fcompl
sbb
xchg
pop
bsr
or
fnstsw
in
dec
in
cmp
in
jne
xchg
cmp
ret
cld
adc
cli
xchg
loope
add
add
xchg
dec
lods
pop
xchg
stos
jmp
in
out
fistpll
enter
outsb
cwtl
mov
dec
cmc
cmp
es
repz
sbb
in
clc
sbb
push
jnp
nop
and
in
pop
lods
cmp
test
fldl
jno
jns
and
je
adc
sub
dec
and
fdiv
es
stos
outsb
mov
jle
fcos
cmp
inc
mov
stos
outsb
sbb
ficomps
pop
lock
jge
sub
fidivrl
popa
xchg
mov
jle,pt
stos
xchg
or
in
pop
add
out
cld
pop
inc
cmp
cmpsl
and
adc
ret
jecxz
out
or
and
cmp
into
fwait
sbb
ret
mov
inc
add
sbb
cmp
fwait
in
xor
xchg
mov
scas
jne
shr
loope
jno
in
rorb
and
cmp
lea
fsubrp
inc
push
enter
fidivl
fisttpl
mov
inc
mov
inc
add
mov
xchg
leave
icebp
mov
fldt
or
inc
adc
jl
sarb
rol
push
nop
es
push
ret
push
xorl
imul
cmp
cmp
and
jle
outsl
rcrb
inc
push
pop
xchg
movsb
sbb
inc
dec
call
push
test
out
inc
cmc
inc
lods
std
or
stc
dec
es
cmpsb
sub
fdivrl
mov
pop
inc
jle
sub
mov
adc
pop
dec
push
xor
cmp
add
adc
dec
xor
roll
loopne
mov
sbbb
push
in
loope
jns
mov
jmp
pop
push
std
inc
add
inc
test
sbbb
dec
mov
jno
mov
jae
cwtl
aas
stos
or
bound
int
dec
movsl
or
out
jg
or
push
movsl
and
sbb
mov
jae
cwtl
or
or
mov
ret
and
outsl
addl
gs
stc
fsts
addr16
into
mov
imul
outsl
xchg
mov
popa
call
shll
xchg
push
push
fsubrs
rcrl
cmp
xchg
lahf
add
pop
into
jmp
push
rolb
push
cld
jg
fwait
scas
adc
and
xchg
push
mov
sti
out
sbb
or
xor
mov
adc
daa
push
mov
adc
and
mov
sbb
add
push
inc
and
repz
sub
cmp
push
push
fstps
push
dec
mov
xor
mov
adc
inc
add
xchg
sbb
jbe
dec
lds
adc
mov
rep
gs
cmc
out
mov
adc
mov
jbe
insb
movb
add
clc
lahf
popf
add
inc
test
cmp
clc
cmp
jne
stos
arpl
cmp
jne
test
out
fldcw
aaa
lock
jle
lcall
inc
push
mov
mov
dec
shr
nop
xor
or
cmp
mov
mov
aam
rorb
cmp
comiss
in
insb
hlt
stos
je
inc
movsl
cwtl
push
pop
sub
rorb
mov
push
in
lods
ja
mov
rcll
sarb
dec
mov
loopne
adc
cs
insl
sub
lods
sub
add
mov
push
in
aas
movsl
cmpsl
stos
jb
inc
dec
add
movsl
shrl
jle
inc
test
adc
je
fs
and
ljmp
pop
xchg
ja
mov
inc
mov
call
movsb
rcrb
and
mov
leave
xchg
in
pop
add
popf
jge
loopne
arpl
ljmp
or
loope
std
or
cmpsl
adc
aaa
sbb
adc
cmp
out
lahf
in
inc
imul
pop
xor
pop
pop
jecxz
rorl
mov
adc
sbb
lea
pop
push
sti
ffreep
daa
push
es
jno
in
std
inc
pop
or
mov
je
cs
inc
lret
aaa
fidivrl
in
pop
in
int3
dec
stos
dec
pop
xor
mov
mov
mov
mov
int3
inc
rorb
sahf
dec
jecxz
bound
mov
cld
aad
sub
jg
cld
enter
xchg
in
aaa
repnz
lcall
lcall
cli
sti
push
cmpl
mov
push
jg
loop
and
jns
mov
push
mov
xor
sub
sbb
ljmp
sbb
pop
pop
mov
pushf
fsubl
fxch
cmp
or
subl
cwtl
loop
xchg
pop
and
mov
xor
mov
or
lock
dec
mov
adc
xchg
add
fwait
mov
inc
xchg
dec
jp
pop
popa
icebp
jle
push
xchg
inc
pop
mov
xchg
mov
les
push
daa
sbb
mov
mov
aas
lret
test
aam
dec
orb
aad
sbb
outsb
add
sub
ret
xlat
pusha
sub
add
mov
test
cmc
or
xor
push
mov
push
repz
pop
in
mov
clc
or
push
aaa
lods
in
nop
shrl
xchg
jnp
pop
adc
mov
dec
ret
jnp
clc
pop
mov
jp
jae
pop
and
or
jno
mov
movsl
push
test
repz
mov
cmc
dec
ret
mov
dec
aad
jecxz
mov
add
stos
loopne
inc
ret
add
mov
les
jns
pop
jnp
out
mov
xchg
iret
jmp
cld
out
gs
jg
or
cmp
cmp
lea
fnstenv
ud1
fimuls
imul
scas
lret
add
pop
je
inc
rolb
mov
dec
daa
jno
mov
pop
mov
mov
push
pop
pop
push
jl
inc
jmp
arpl
pop
and
pop
dec
inc
and
cli
pop
mov
sbb
repnz
adc
mov
sbb
call
cli
cmp
jbe
dec
idiv
mov
ss
mov
jne
gs
jno
pop
ret
inc
cmp
insl
ror
push
mulb
cmp
mov
shll
mov
mov
gs
dec
jbe
fdivl
sahf
and
sbb
cmp
test
push
cmpsl
sub
pop
mov
xor
mov
std
sbb
aas
add
mov
and
pextrw
ss
popa
push
jmp
inc
xchg
ljmp
lods
jno
xor
and
fstps
ja
inc
dec
mov
sub
int
es
dec
push
xchg
inc
or
or
mov
xchg
dec
lods
cmp
test
mov
cmpsl
incl
divb
pop
rorb
and
bound
lea
sahf
inc
sbb
pop
mov
loop
roll
outsb
mov
mov
addr16
jnp
jmp
push
mov
adc
sti
imul
imul
xchg
leave
add
and
xchg
mov
or
dec
in
imull
mov
jmp
cmc
aaa
pop
neg
sbb
fidivrl
xchg
xorb
fidivrl
popf
jo
movsb
lock
xlat
sarb
or
or
lods
sbb
sahf
mul
push
cli
shrb
bound
jo
add
dec
test
pop
sub
adc
fiadds
mov
dec
adcl
xchg
mov
sbb
mov
push
dec
inc
test
clc
movb
pop
out
sub
xor
into
cmp
jae
imul
mov
rcl
aad
pop
insl
int3
in
pop
xchg
leave
push
test
ret
jl
cltd
in
inc
push
mov
adc
xchg
cmc
lock
lea
push
jae
inc
add
dec
sarb
dec
pop
outsb
mov
xor
push
out
daa
xor
mov
into
mov
rolb
loope
mov
pop
std
or
pop
jne
pop
je
xor
sub
ret
pop
mov
or
lahf
shlb
mov
aam
dec
or
es
repz
insl
jecxz
add
lods
sahf
shll
out
out
or
popa
inc
adc
adc
inc
out
in
xchg
mov
addl
lds
call
xor
rolb
jecxz
orb
cmp
mov
add
pop
add
shrl
icebp
flds
test
scas
add
jo
mov
xor
push
scas
stos
pop
push
dec
in
out
jne
pop
jecxz
add
xor
xor
loop
fiadds
and
in
pop
and
popw
mov
jb
add
mov
sti
mov
dec
pop
cltd
enter
inc
out
and
ficoms
imul
push
mov
movl
call
movl
inc
adc
cwtl
push
cld
sbb
adcl
cmp
cltd
cmp
scas
addr16
lret
pop
call
fwait
xchg
out
enter
pop
pusha
imul
sub
pop
aaa
lret
jl
xchg
daa
fcmovnu
and
jle
xor
pop
mov
stos
pushf
sbb
cmp
push
or
in
mov
fs
fstpt
stc
cmp
inc
mov
pop
inc
movsl
fcompl
in
ljmp
and
mov
jge
pop
fadd
mov
test
movsb
int3
das
mov
cltd
push
xor
test
mov
pop
push
xchg
xchg
stos
fs
cmpsb
out
lea
sbb
test
icebp
test
xchg
cmp
mov
pop
flds
hlt
jne
sub
mov
repz
dec
aaa
scas
dec
and
mov
rolb
setno
loope
sbb
repnz
lock
inc
jo
jp
cmp
xchg
test
inc
or
add
jmp
mov
leave
mulb
push
jl
sbb
ds
mov
cli
jb
leave
es
cli
pop
ds
imul
mov
test
pushl
popf
dec
jl
in
aas
fwait
movsl
int3
or
loop
xchg
jg
mov
inc
push
test
jae
out
shlb
push
jne
inc
les
mov
lcall
xor
cltd
inc
xchg
fcmovu
mov
cli
lea
pop
mov
arpl
xor
adc
addr16
addl
das
mov
cmp
sub
lahf
and
jp
cmp
lret
imul
aam
pop
arpl
mov
mov
fidivl
in
in
nop
aad
mov
cmpsl
adc
movsl
push
xchg
xor
adc
xor
sti
push
lea
and
sub
pop
or
insb
cmc
adc
fs
stc
or
out
mov
jo
dec
aas
aaa
popa
push
loopne
dec
cmpsl
fisubrl
push
add
in
sbb
pop
in
cwtl
cwtl
rcll
adc
inc
cmp
push
push
out
jecxz
int
lods
testl
mov
cmp
inc
xlat
aad
add
std
add
test
mov
cwtl
std
jmp
out
aas
sub
jnp
xchg
rorb
scas
bound
mov
push
xchg
dec
pop
sub
add
dec
mov
aad
cmp
sahf
icebp
std
bound
cmp
inc
cmp
mov
dec
lret
cmpsl
push
pop
jns
xor
mov
fdivl
lea
pop
pop
movsb
lahf
loope
add
xor
mov
xor
test
sbb
mov
ljmp
sbb
push
stc
mov
repz
xor
pop
mov
add
stos
jge
mov
inc
mov
lcall
inc
lods
add
test
add
pop
das
jmp
mov
mov
lcall
cmpsb
xchg
jl
adc
into
in
inc
mov
imul
cmp
push
cltd
adc
arpl
jmp
mov
pop
xchg
push
iret
cmp
push
mov
xchg
in
push
pushf
cmp
repz
pushf
testl
mov
test
xorb
cmpsb
subb
stos
inc
push
in
mov
fldt
jp
push
pop
mov
inc
bound
popa
das
mov
inc
adc
aas
pop
xchg
pop
cld
mov
add
lods
in
ja
pop
jmp
jmp
ret
mov
dec
push
divb
xor
jbe
je
push
xchg
dec
out
lock
fsubl
add
iret
dec
shl
adc
daa
and
or
cltd
fildll
jmp
vmovhpd
xchg
inc
and
ljmp
iret
lcall
jnp
call
sub
sub
loopne
scas
xlat
dec
clc
movsl
adc
pop
push
pop
xchg
int3
mov
cmp
mov
ret
push
loop
cli
jbe
or
cs
mov
jmp
dec
sti
mov
xchg
xchg
ficomps
adc
sub
push
popa
lret
stc
shlb
ljmp
cli
mov
jbe
cmp
add
sbb
push
clc
xchg
lcall
out
lds
outsb
into
lahf
imul
inc
lods
outsb
sub
jnp
xor
push
iret
cmp
mov
push
mov
aaa
stc
mov
sahf
dec
mov
mov
notl
test
repnz
test
cmp
ret
xlat
popf
std
stos
mov
fwait
scas
rcll
push
scas
loop
add
repz
mov
cmp
xor
lea
data16
enter
push
fisubl
stos
push
mov
sub
dec
aas
add
sbb
mov
rcrl
cld
dec
test
mov
dec
cmc
xchg
arpl
inc
les
aaa
sub
pop
imulb
jmp
pop
imul
repnz
cmc
rclb
jb
stos
iret
xchg
add
aam
jl
or
push
out
xchg
add
sbb
add
inc
popa
in
repnz
ss
adc
repz
daa
jbe
bts
gs
je
arpl
stos
xorb
mov
daa
xor
xchg
xchg
js
sbb
mov
dec
adc
or
push
pop
jl
ret
stos
mov
lret
dec
psadbw
or
xchg
xlat
xor
in
psrlw
xchg
aam
shlb
xor
push
popf
stos
add
fstl
dec
mov
add
sub
mov
push
dec
in
mov
ds
lahf
mov
hlt
rorb
sti
pop
push
fbld
adc
sbb
inc
pop
and
or
cmp
adc
jbe
test
pop
pop
pop
sub
push
int
xor
and
scas
xchg
adc
jno
out
sub
mov
fmuls
add
jno
jno
out
insb
in
imul
cli
sarb
cmc
mov
aad
mov
rorl
mov
sbbl
inc
jmp
add
add
pop
jbe
sbb
jbe
cwtl
jle
cmpsb
fiaddl
mov
lret
sub
ljmp
outsl
ficomps
fdivl
dec
repz
dec
push
jae
push
test
adc
mov
bound
ja
lret
mov
scas
test
arpl
cmp
pusha
jno
adc
dec
stos
aaa
loopne
mov
sbbl
js
insl
fldl
insl
test
cwtl
or
dec
es
mov
jno
mov
arpl
mov
xchg
pop
ljmp
loope
fldl
push
jae
outsl
xchg
adc
push
ljmp
in
and
icebp
cmpl
out
cmpb
fwait
push
add
nop
jmp
jmp
pop
dec
sub
out
dec
push
add
dec
push
subl
push
cmp
repz
cmp
mov
dec
cmp
jbe
mov
mov
out
mov
movl
cmp
ljmp
jl
sub
mull
xor
or
inc
addr16
mov
mov
arpl
jmp
out
adc
loopne
stos
push
divps
dec
push
cmp
dec
idivb
int
jae
jnp
mov
xchg
mov
inc
out
rorb
mov
loop
cmp
xchg
dec
cmp
js
lea
sbb
fisubrs
push
mov
and
insb
lret
mov
out
mov
movsb
pop
xor
sbb
leave
lods
dec
loope
sbb
jne
mov
cmpsb
cmp
push
adc
int
add
aam
or
insb
repnz
cli
jnp
addr16
lret
jmp
sbb
jmp
roll
popf
lret
push
add
inc
dec
popf
ret
mov
imul
xchg
and
fistpl
out
and
push
sbb
icebp
int3
in
push
repz
cmpsb
cmp
xchg
cmp
cmpsl
cwtl
imul
pusha
sbb
or
mov
mov
popf
ret
fisttpl
scas
mov
add
mov
in
mov
es
jne
xchg
hlt
int3
inc
add
test
ret
mov
out
cmpb
add
ss
jbe
pop
push
push
out
push
jmp
shrb
test
jnp
mov
test
push
stc
inc
inc
je
mov
cld
inc
lahf
nop
inc
pusha
mov
pushf
dec
lock
mov
test
lock
test
mov
scas
add
jmp
fisubs
mov
or
mov
jle
push
push
xchg
std
cli
mov
mov
and
inc
nop
pop
in
test
cwtl
sub
push
notl
scas
sti
adc
pop
dec
or
dec
pop
in
cmpsl
inc
into
lea
pop
lcall
mov
out
pop
lcall
lret
xorb
lods
clc
push
das
cmp
cmp
push
fdivrl
sti
mov
pusha
sub
in
jg
scas
push
sarl
fsubrl
pop
sahf
sub
loopne
jge
push
fsubl
jae
outsl
sti
or
lock
lcall
insl
dec
in
inc
repz
es
scas
mov
xchg
adc
aas
push
and
jno
cmp
or
filds
jnp
pop
psubusb
mov
mov
jae
shrb
add
mov
aas
jp
scas
mov
pop
popa
fiaddl
shll
scas
pop
imul
hlt
stos
sub
add
mov
cmp
addl
sbb
movsl
ret
sbb
dec
repnz
jo
mov
mov
push
test
fildll
pop
fcomps
mov
or
sahf
add
dec
aad
lahf
push
addb
int3
shll
cmp
iret
sbb
js
xlat
scas
xchg
nop
mov
lods
in
daa
cmp
aam
test
in
push
stos
and
scas
rorb
movsb
push
sub
sti
add
out
dec
les
and
xor
cmc
push
loop
jae
in
sbb
sbb
clc
mov
scas
mov
push
test
cli
stos
fistpll
punpckldq
fdivl
cmp
aad
inc
jge
adcb
lret
ret
lcall
pop
pop
mov
cmp
sbb
sbb
rorb
int
test
stos
bound
shll
dec
icebp
lcall
js
xchg
pushf
pop
test
clc
out
dec
popa
sub
call
jl
popa
ret
hlt
mov
test
push
sbb
pop
xlat
arpl
xchg
jmp
cmp
imul
lret
push
loopne
mov
aas
pushf
loop
add
cld
mov
and
pop
imul
clc
xor
jae
insl
sub
add
mov
xor
and
adc
std
add
dec
push
fsts
or
push
stc
and
push
rcrb
pushf
lock
popa
movb
jecxz
out
mov
push
filds
mov
or
cmpsb
nop
push
mov
xor
and
push
inc
cmp
test
repnz
insl
xor
aaa
call
neg
popf
adc
xchg
mov
fildl
bound
xchg
mov
push
pop
lret
leave
sub
xchg
in
push
xor
xor
or
imul
int3
pop
sahf
bound
loopne
cmp
mov
mov
fucomi
pop
and
es
icebp
pop
dec
frstor
adc
mov
xchg
jp
pop
rclb
push
add
shl
xor
or
popf
mov
int
loope
push
insb
push
inc
ja
xor
mov
xor
push
inc
inc
adc
dec
fisttpl
in
cs
scas
mov
sbb
in
fcoms
sub
inc
mov
sub
or
in
pushf
push
int
faddp
xchg
repz
ret
push
ds
aad
mov
aas
les
pop
mov
xchg
jecxz
cli
fmull
add
adc
mov
and
fisttpl
ret
mov
repnz
push
imul
jno
push
outsl
leave
adc
leave
xor
mov
mov
clc
stc
rcr
lahf
das
sahf
repz
adc
sbb
jp
mov
loope
cmpsb
sbb
jno
out
notl
jmp
cld
dec
sbb
xlat
cmp
push
jb
push
mov
ds
lcall
iret
dec
in
jg
aas
aas
and
adc
push
xor
sbb
and
jae
jecxz
aam
add
in
cli
push
add
data16
dec
jb
inc
xor
mov
add
dec
pop
jbe
outsl
pop
inc
aaa
clc
ret
add
mov
mov
dec
out
fs
out
cmpsl
pushf
dec
in
das
push
cmpb
push
pop
out
mov
into
jp
push
push
mov
fstps
out
dec
cmpsb
push
xchg
ja
std
movsl
mov
pop
mov
js
imul
shrl
lea
push
dec
cmp
add
cmp
das
cld
mov
xchg
push
outsb
and
pop
incl
ret
push
call
mov
add
fs
mov
inc
ret
pop
push
mov
jbe
xchg
dec
adc
and
les
lds
hlt
out
les
xchg
xchg
scas
push
xor
cmp
stos
cmc
ja
mov
ja
cltd
or
mov
loopne
push
hlt
popf
push
inc
fucomip
adc
mov
sbb
cmp
scas
loope
pop
push
notb
ret
pushf
stos
ret
xchg
loope
mov
subb
mov
fldcw
or
cs
jge
stos
xchg
es
pop
aas
aam
and
and
mov
iret
mov
xchg
lock
icebp
cld
adc
dec
inc
cmc
lock
xor
fidivs
aad
mov
fadds
mov
mov
out
or
sub
add
movsw
insb
jp
inc
add
xchg
cmp
mov
push
adc
andb
iret
outsb
xchg
pop
dec
les
sbb
insb
push
mov
rcl
imul
lock
cld
mov
pop
fwait
push
mov
ret
in
cmp
jp
xor
popa
inc
lods
mov
pop
ret
mov
insl
sub
and
fs
fmull
cmp
in
ds
xor
dec
or
lret
dec
std
xchg
cmp
insl
dec
mov
jne
push
jp
lods
push
inc
inc
emms
repz
incl
shrl
arpl
cltd
lods
insb
lods
xchg
mov
sbb
push
xor
push
push
movsb
stos
imul
das
jae
leave
mov
pushl
jg
lock
pop
imul
fisttpll
mov
out
cli
and
dec
lock
jl
jbe
xor
xor
mov
fistpll
or
test
std
outsb
or
mov
jae
xchg
and
lahf
or
dec
stos
dec
add
les
insl
mov
sahf
jmp
or
ss
sbb
and
adc
push
fdivrp
or
je
adc
cmpsb
rolb
push
aam
xor
push
iret
lds
iret
fdivrl
mov
push
pop
lea
pushw
es
pop
sub
es
pop
aas
push
adc
or
and
rcrb
mov
or
fwait
xor
xchg
jns
lock
movsl
cmp
movsl
and
ret
lret
in
ret
mov
into
jns
mov
test
dec
notl
fmull
and
sbb
aad
lods
mov
aad
lea
in
out
lcall
push
and
pushf
adc
out
cli
clc
and
out
repnz
clc
sub
mov
scas
sub
xor
pushf
inc
in
insb
mov
sub
inc
xchg
cmpb
fstpt
pusha
push
mov
rcrl
and
mov
jno
push
fnstcw
or
test
std
aaa
andb
or
fildll
data16
xlat
xor
cmpsl
jg
cmp
leave
and
cmp
pop
fldenv
call
mov
test
fmuls
or
jo
cmp
jg
pop
int3
mov
mov
mov
mov
lods
xor
mov
aas
mov
push
mov
out
sbb
mov
push
popf
and
mov
add
mov
jae
test
fbld
mov
cmp
insb
cs
sti
int3
xor
dec
jg
mov
add
scas
jl
pop
fsts
movsb
gs
bswap
neg
pop
daa
inc
ss
push
sbb
jge
sbb
movsl
fsubrp
and
ja
jl
gs
inc
cmp
dec
jno
movsb
xchg
mov
sbb
cwtl
jge
je
cmp
inc
test
pop
cmp
or
mov
push
or
sub
adc
clc
xchg
aad
pushf
push
dec
mov
push
jno
pop
xchg
insl
int
aad
xlat
pop
test
mov
outsb
out
or
mov
push
pop
je
xchg
and
popf
loopne
sub
pop
cmpsb
sarl
fnstenv
xchg
stos
in
divl
test
sbb
adc
lret
mov
in
mov
cmp
in
aam
je
or
fs
pop
fisubrl
lock
xchg
in
add
xor
jmp
jns
jmp
fdiv
pop
daa
fsubrl
outsl
inc
ja
fists
mulb
jae
stc
adc
xchg
jg
inc
clc
pop
xchg
fimuls
mov
or
sub
dec
ret
pop
fidivrl
jg
fidivl
mov
into
push
mov
sbb
lea
mov
mov
xchg
sti
lock
dec
mov
jbe
fsubp
lea
movsb
cmp
pop
pop
out
in
push
adc
cmp
repnz
popf
xor
inc
dec
sbb
mov
dec
pop
cli
pop
fistpl
sub
add
sbb
std
lods
adc
movsb
sub
push
xchg
repz
rorb
ja
bound
xchg
mov
cmpsl
inc
shrb
dec
aaa
sbb
mov
mov
nop
scas
adc
mov
in
scas
sub
aad
and
jge
mov
xchg
fsubrl
xor
mov
std
xchg
sbbl
mov
out
ljmp
jl
xchg
and
enter
or
std
mov
mov
aam
add
decb
push
aam
mov
adc
idiv
std
jno
jo
bnd
in
repz
xor
mov
out
je
mov
jge
loopne
adc
mov
inc
out
mov
jne
jge
bound
fwait
cld
fdivs
pop
mov
push
jle
aas
xchg
test
shlb
lahf
xchg
sub
cmp
sbb
cmp
lods
cmp
lret
pop
jne
dec
imul
inc
testb
in
mov
ljmp
push
jbe
sub
pop
push
mov
decl
sub
or
mov
push
mov
push
das
lret
xlat
push
std
add
push
cmp
mov
and
sub
push
sub
in
test
jl
xchg
dec
mov
in
pop
in
sub
xor
idivl
inc
add
std
insl
pop
arpl
mov
pop
or
pop
add
fsubl
shll
push
cli
div
in
push
in
jecxz
repnz
ret
popa
dec
daa
ret
movsl
bound
push
movb
insl
xor
mov
test
sub
outsl
or
mov
sub
outsb
inc
pop
jg
pop
mov
jns
lods
jl
lds
jne
push
or
sub
ficoml
xor
mov
and
outsb
mov
shrb
lret
xchg
mov
xchg
pop
and
das
repz
inc
adc
and
or
repz
mov
pusha
icebp
adc
dec
popf
movsb
inc
std
clc
ja
cwtl
mov
pop
mov
imulb
lock
out
push
or
cmpl
iret
lret
jl
loope
add
mov
cmp
xchg
out
pop
lahf
inc
stos
mov
in
sub
aas
mov
mov
push
inc
push
mov
lods
imul
popa
in
mov
setno
loope
fdivl
add
les
gs
mov
rolb
repz
dec
movsb
adc
sbb
aaa
das
dec
jp
ret
scas
shr
mov
daa
inc
and
shrb
xor
in
cs
jbe
data16
aam
xchg
pop
add
cmp
pop
inc
pop
push
popa
pop
outsl
xchg
ja
add
mov
jae
mov
fdivs
mov
mov
adc
mov
dec
mov
ljmp
and
in
sub
xor
add
adc
in
xchg
stos
ret
adc
mov
in
or
mov
push
mov
in
leave
scas
fs
sbb
mov
je
mov
cmp
mov
push
test
stos
sahf
cmp
pop
mov
jae
rcrb
and
cmp
mov
jae
das
call
dec
rolb
pop
cmp
addl
jbe
push
inc
xlat
jmp
add
inc
or
popw
cld
gs
jecxz
fisubl
push
rcpps
sub
outsb
rcrl
testl
ret
pop
mov
bound
aam
in
out
push
mov
mov
cli
adc
mov
mov
pop
and
imul
fs
rolb
sbb
ss
sti
lret
sahf
mov
push
mov
pusha
xor
jmp
push
xor
lret
xchg
push
lea
mov
mov
cmc
mov
xchg
adc
pusha
xor
jp
mov
and
push
mov
cmpsb
and
mov
lahf
cwtl
icebp
dec
or
lahf
jnp
sbb
cltd
mov
sub
push
aaa
pop
adc
hlt
mov
fcomps
pop
loop
enter
fidivs
dec
sub
xor
in
add
in
ljmp
or
xchg
aad
cmp
xchg
rorl
into
inc
out
cmpsl
lret
jns
xchg
imul
jg
mov
jmp
dec
cmpsb
mov
mov
inc
xor
sarl
push
loopne
ret
add
pop
push
cmp
test
xchg
pop
add
push
xchg
sub
jl
es
ljmp
jno
mov
insb
inc
pop
call
pushf
inc
and
fists
sub
es
inc
aam
idivb
out
lret
std
std
cmpsb
mov
idivb
in
lret
aam
jl
push
mov
mov
push
decb
push
or
xchg
rclb
ds
stos
aaa
xlat
test
std
push
push
popa
mov
sahf
mov
add
test
fidivrs
add
cltd
fists
add
jnp
mov
add
mov
adc
gs
mov
mov
addr16
or
pop
fwait
aas
inc
std
clc
mov
shrl
mov
int3
inc
add
xlat
shrb
and
adc
ds
sbb
xchg
popa
or
lock
out
adcb
aas
loope
repz
loopne
xchg
mov
xchg
das
stc
lods
mov
je
push
mov
push
hlt
fstps
sbb
lock
adc
call
sub
push
inc
fnstcw
xor
jne
push
add
bound
mov
nop
xchg
lea
mov
scas
out
wbinvd
dec
in
out
cltd
or
sub
push
std
popa
dec
jae
sub
add
or
std
test
push
pusha
out
push
loop
sub
push
push
pop
pop
adc
popf
jge
sarb
pop
xchg
jo
cmp
xchg
inc
lds
dec
mov
sub
outsl
adc
jp
sbb
add
pusha
dec
pop
movsl
loop
push
push
xchg
insl
pop
dec
xchg
push
cmp
aam
pop
mov
jo
sar
xor
pop
push
mov
pusha
adc
hlt
mov
mov
pop
icebp
push
xor
fidivrs
mov
out
dec
into
repnz
in
sti
out
dec
adc
push
jae
pop
xor
sbb
mov
outsb
xor
jmp
jnp
dec
ja
cmp
loope
sbb
pop
js
jae
mov
pop
pop
mov
movsl
jmp
test
sahf
xor
or
or
jnp
leave
mov
pop
push
sub
lea
icebp
cmc
pop
cmp
sub
jb
insl
pushf
dec
inc
inc
xor
inc
add
lds
out
sub
sub
push
adc
lods
jo
push
xor
fsubrl
mov
rclb
pop
xor
or
xchg
test
hlt
mov
in
inc
push
jb
mov
sahf
push
and
inc
sub
dec
push
xor
adc
sub
mov
in
shrl
bound
lock
sub
push
push
adcb
xor
jno
xchg
fisttpll
inc
scas
incl
rorb
pop
sub
orl
ret
jb
call
xor
ljmp
and
inc
jecxz
mov
test
in
scas
mov
mov
pop
cmp
aaa
adc
adc
mov
fstps
fcompl
push
int
clc
leave
icebp
push
popa
mov
imul
stc
clc
les
movsb
shlb
leave
mov
test
sbb
movsb
aam
xor
cmc
ljmp
mov
jmp
es
and
xchg
jo
pop
cmp
stos
jns
adc
adc
mov
mov
pusha
test
dec
jno
ss
or
jle
ret
clc
mov
iret
das
inc
mov
movsb
xor
sahf
rcl
bound
mov
inc
pop
inc
pop
push
clc
jl
repz
std
mov
mov
in
mov
adc
sub
sub
dec
loop
insl
fwait
lret
jne
or
pop
stos
das
inc
lods
popa
mov
mov
pop
aam
xorb
je
rolb
call
or
rol
js
push
push
xchg
lods
orb
je
lret
cmpl
push
or
rcr
xchg
mov
adc
rorb
int
sbb
sub
push
mov
jnp
je
sahf
jns
or
mov
xchg
rcl
negb
enter
mov
xor
shll
cmc
or
mov
lock
shll
out
add
out
shrl
inc
mov
ror
sbb
loope
ja
pop
push
xchg
or
add
pop
push
bound
push
mov
mov
jbe
mov
xchg
sbb
loope
inc
push
pop
pop
jo
sahf
mov
mov
testl
dec
fcom
push
adc
mov
scas
dec
and
or
pop
xor
rclb
jne
stos
lea
and
mov
aad
add
xchg
aam
push
add
xchg
sub
movsl
mov
lods
setae
xchg
lock
and
pop
mov
jecxz
push
pop
leave
ss
lea
xor
mov
sbb
jp
aas
pop
push
ret
adc
mov
xchg
stc
fsubl
iret
sahf
push
push
mov
sbb
rcl
loop
adc
cmp
shr
jnp
scas
or
dec
into
cltd
push
xchg
sar
sub
es
shr
dec
mov
cmp
inc
adc
je
inc
cmpsl
inc
mov
repnz
lahf
aaa
fisttpll
adc
ljmp
cmpb
xchg
cmp
rcl
pop
dec
pusha
jge
loope
es
das
dec
or
ds
std
push
insl
jg
add
mov
adcl
out
in
mov
imul
lea
popa
int3
dec
clc
insl
jp
and
stc
pop
jmp
ds
dec
sbb
shr
or
pop
loope
mov
decb
mov
mov
xchg
jno
loop
int3
lcall
mov
movsl
mov
and
xor
fsts
push
icebp
int3
push
clc
lds
xchg
sub
inc
push
jb
pop
cwtl
add
xor
mov
aam
pop
popf
jns
test
in
xchg
js
pop
mov
xlat
outsl
dec
stos
inc
mov
scas
int3
cmp
pop
mov
mov
cld
inc
rclb
adc
sub
jns
lret
mov
sub
pop
jge
mov
sbb
inc
movsl
pop
shrb
mov
addr16
fldenv
mov
adc
cli
mov
mov
sbb
or
dec
ds
dec
mov
imull
adc
outsl
lcall
je
popf
jp
adc
fs
aas
cld
xchg
int3
adc
mov
loopne
push
test
xchg
paddsw
arpl
dec
sub
or
cs
dec
mov
and
pop
xor
subb
mov
lahf
jmp
xchg
xor
sbb
adc
cld
neg
adc
jns
in
jl
xor
mov
das
pop
out
mov
fsubrs
add
pop
sbb
nop
sbb
popf
adc
cli
xchg
insb
jb
pushl
shlb
jmp
mov
dec
ds
sahf
shrl
adc
inc
fsubl
adc
cs
mov
dec
sbb
imul
jns
push
and
repz
imul
in
dec
out
outsb
pop
movsb
ja
and
xchg
popf
xor
inc
jg
jno
cwtl
fisubl
loopne
add
cltd
push
stc
fildl
pop
scas
loope
and
stos
les
pop
sahf
xchg
adc
lea
and
jge
movsl
imul
sbb
adc
or
scas
or
mov
bound
mov
and
mov
jecxz
xor
and
mov
addr16
or
rorl
scas
outsb
insb
cmpl
pop
leave
sub
sub
mov
aaa
mov
xchg
add
cmc
lock
nop
jbe
sub
js
adc
loop
push
shrb
es
add
jnp
test
lods
ficoms
lcall
lea
movsb
jecxz
xor
cmpsl
pop
sbb
pop
js
push
fwait
pop
dec
jmp
sub
stc
mov
jae
lret
adcl
dec
or
mov
pusha
xlat
daa
inc
mov
fucomp
push
repz
sub
cmp
jne
sti
aaa
repz
jle
xor
jecxz
lcall
fldpi
repz
sub
or
mov
ror
dec
sbb
cmp
jne
nop
and
ss
arpl
mov
leave
xchg
cmp
cmp
xor
or
iret
dec
stos
lahf
in
ficoms
fidivrs
pop
jae
dec
loop
dec
and
aad
adc
shlb
push
pop
iret
adc
dec
pusha
das
enter
and
adc
xchg
sbb
mov
rclb
enter
in
xchg
pop
push
sbb
insb
fstps
mov
jnp
pop
cmp
jae
fldt
out
addr16
shll
mov
add
push
aas
inc
cmp
fsubrl
adc
jne
mov
psrlw
arpl
movsb
or
leave
into
inc
aas
mov
outsb
in
pop
fimuls
movsb
punpckldq
and
pop
scas
mov
cmp
jg
clc
xor
mov
xchg
push
mov
pop
rolb
aaa
cmpsl
and
sbb
push
test
out
push
push
jl
xor
push
xchg
mov
imul
icebp
inc
arpl
std
imul
mov
xchg
and
out
add
mov
data16
mov
mov
mov
inc
roll
dec
dec
xchg
jbe
icebp
cmc
nop
stos
or
lods
jb
xor
in
fcmovb
cwtl
fimuls
mov
out
fs
mov
inc
movsl
repnz
sbbl
sbb
pusha
fwait
add
fwait
aad
test
inc
xchg
push
add
push
xor
lret
loopne
outsb
adc
and
inc
mov
mov
je
lcall
cli
sub
test
mov
mov
pop
mov
pop
xchg
inc
push
cmp
mov
fisubrs
jl
mov
loopne
add
sbb
lock
mov
mov
sub
sbb
dec
xchg
pop
sub
fstl
or
sbb
cmp
xor
adc
cltd
inc
loope
inc
inc
jp
inc
mov
outsb
sub
add
sarb
xchg
dec
xor
frstor
pop
mov
insb
rorl
xchg
lret
push
mov
movq
xor
xor
or
push
pop
mov
push
xchg
fdivrs
scas
outsb
push
cmp
imul
dec
xchg
aaa
inc
mov
scas
sti
cs
aam
jle
mov
inc
push
scas
out
push
movsb
and
cwtl
fnstcw
and
notl
cmp
daa
jmp
imul
adcb
sub
push
cmp
andl
mov
stos
cmp
cmpl
clc
idiv
shll
loop
jmp
int3
leave
sub
xchg
inc
fadds
daa
xorb
cmp
xor
push
push
lret
xchg
mov
mov
insl
cli
mov
pushl
cmp
cmpsl
lret
inc
sub
or
push
push
add
mov
out
fnstcw
mov
cmp
inc
push
adc
or
inc
mov
fmull
pop
adc
xchg
movsl
sbb
mov
and
call
xchg
mov
scas
push
outsl
or
pop
ljmp
lds
mov
int
mov
xchg
aas
xlat
pop
mov
sub
push
ret
push
cltd
pusha
adc
popf
nop
leave
out
push
lahf
sbb
lcall
jb
jne
fs
aad
cmp
in
sbb
xchg
jg
repnz
ds
aaa
xchg
cwtl
cmp
inc
push
push
pushf
clc
int
loope
lret
sarb
or
xor
pop
das
xacquire
or
cmp
imul
sbb
out
push
fists
fidivl
imul
test
push
or
mov
sbb
loope
js
in
mov
stc
fst
nop
ljmp
repnz
mov
xchg
push
iret
and
fldenv
cmpsb
fidivs
lret
xor
test
add
icebp
flds
mov
mov
jle
shlb
jp
fdivrl
daa
add
push
enter
mov
mov
icebp
lret
pop
lds
in
js
aad
imul
clc
mov
push
test
dec
iret
test
dec
mov
imull
orl
dec
call
outsl
xchg
xor
sbb
jle
enter
pop
lahf
aaa
scas
jle
ror
jo
pusha
inc
cmc
add
faddl
jb
lock
add
mov
mov
jecxz,pt
push
sbb
fldl
fldcw
xor
addl
cmp
out
push
mov
push
shrb
jg
imul
xchg
std
push
dec
mov
adc
or
add
out
push
push
call
movl
inc
bound
push
outsb
adc
push
jge
sbb
sbb
push
pop
cs
xlat
pop
outsb
dec
or
jne
sbb
push
pop
inc
stos
insl
sbb
inc
clc
sbb
sbbb
mov
mov
mov
mov
fstps
mov
mov
xchg
dec
insb
mov
push
daa
push
stc
testl
jl
shr
pop
enter
mov
lcall
mov
std
push
jb
inc
and
in
gs
scas
add
movsl
inc
lret
mov
xor
pop
out
adc
fisttpll
dec
dec
aam
das
aam
and
cltd
mov
mov
je
test
pushf
enter
jbe
cmpsb
leave
mov
dec
cmp
fisubrs
sbb
fcomps
and
pop
loop
add
and
fldl
stos
jno
or
mov
push
xchg
cli
hlt
in
movsl
pop
push
cltd
data16
push
loope
pusha
adc
loopne
insb
rol
xor
outsl
jnp
cmp
push
mov
or
xor
or
insl
hlt
push
nop
movsl
mov
sti
sub
repz
sarb
push
leave
mov
or
mov
adc
ja
cmpb
inc
mov
push
movsb
xchg
jbe
in
xor
mov
dec
lret
mov
inc
bound
jmp
or
aas
jmp
xor
ljmp
lea
fildl
xor
imul
dec
cmpb
inc
jg
addr16
scas
adc
sti
imul
jl
mov
push
pop
sbb
clc
pop
cld
cmp
xchg
ret
dec
push
scas
mov
iret
enter
adc
mov
inc
push
fildll
xor
imul
test
push
push
inc
cmc
push
jno
cmp
mov
std
ss
push
leave
sub
into
sar
fcoms
rclb
inc
shl
mov
cmp
imul
imul
jmp
cwtl
or
pop
xor
or
push
test
cld
jecxz
stos
or
daa
mov
int
push
cmp
sti
int3
stc
push
push
xchg
fsts
lock
jecxz
fidivl
xor
scas
aad
leave
in
divl
sbb
test
out
jmp
fwait
mov
pop
cmp
mov
or
ljmp
sub
xchg
inc
ficoms
inc
and
loope
xor
inc
popf
out
jl
sarl
cmp
and
jo
lahf
mov
enter
add
jle
inc
xlat
pop
jmp
or
mov
data16
mov
movsl
ljmp
mov
xchg
mov
mov
popa
push
dec
andb
jmp
add
xor
icebp
scas
dec
data16
fdivs
adcb
lock
mov
fildll
loopne
iret
jnp
sbb
movsb
js
mov
and
sub
push
and
pop
int
int
jo
lds
lea
mov
sar
push
std
sarw
mov
movsb
sub
sbb
adc
sbb
fstpl
xchg
outsl
dec
or
pop
decl
shll
push
test
jp
inc
or
lcall
pop
mov
hlt
sbb
jae
test
mov
xor
pop
pop
decl
and
xor
pop
and
daa
dec
int3
lcall
shlb
lretw
push
cli
or
ja
fstp
mov
loopne
jg
lahf
mov
mov
ret
xchg
sarb
clc
sbb
lods
repnz
sbbl
pop
cmp
adc
arpl
jne
adc
dec
outsb
bt
std
test
mov
xlat
out
loopne
int3
adc
imulb
aas
jg
mov
jbe
mov
xor
cmc
stos
rol
pop
cmp
jno
popa
lods
loopne
rolb
arpl
pop
inc
testl
cwtl
push
pop
ret
xchg
push
fdiv
xor
pop
push
xor
bound
jmp
sub
popa
cmp
clc
jle
adc
jmp
cld
cmp
lret
in
fstpl
add
jp
imul
ror
daa
xchg
in
inc
cmpsl
out
dec
push
ss
ficoml
adc
movsb
mov
xchg
imul
adc
ja
dec
push
push
mov
pushf
lods
movsb
cs
movsl
fnstcw
jecxz
cltd
lods
mov
mov
sub
pop
aam
cvtpi2ps
jge
loope
jmp
mov
dec
dec
adc
sahf
imul
aaa
adc
push
pusha
call
xor
lcall
adc
inc
cmp
xor
adc
push
rcrl
cmc
push
ret
pop
out
xlat
push
mov
insb
jle
andl
adc
cmp
xchg
cmpsl
push
stc
test
enter
inc
add
ds
aaa
pop
arpl
jp
xor
inc
cs
popf
clc
and
test
push
or
xchg
mov
stos
hlt
mov
ja
inc
mov
push
lods
neg
outsb
jb
jmp
and
add
jne
pop
pop
and
mov
es
lret
aam
lret
add
add
jg
movsl
ss
popw
sbb
mov
pop
push
stc
inc
xlat
repz
pop
mov
pop
imul
push
cmpsl
jno
push
fucomi
insb
ds
xor
repz
pop
dec
jp
mov
jp
inc
arpl
ret
data16
add
lea
das
outsb
stos
scas
movsb
jno
inc
out
sub
ja
fcomip
ss
mov
add
mov
cmp
sub
pop
fbstp
xlat
faddp
int
mov
scas
icebp
and
pop
xor
outsb
mov
jne
cmpsb
clc
stc
ret
pop
push
in
cs
mov
pop
or
add
shrb
xchg
or
neg
cs
sbb
dec
lahf
mov
fnstenv
cmpsl
inc
mov
jp
jp
pop
adc
fisubl
jnp
cmpsb
rolb
add
and
loope
in
jecxz
lea
mov
push
fisubl
icebp
mov
loope
pop
test
in
jne
lock
out
sbb
push
push
popa
jb
xchg
lret
clc
push
mov
adc
xchg
fwait
lea
popa
mov
shll
pop
mov
jmp
fs
ds
add
icebp
dec
mov
mov
in
test
int
dec
imul
cmp
add
adc
mov
push
jae
scas
mov
and
push
mov
xor
xor
lret
xor
lahf
cmp
dec
pop
mov
popf
movlps
lcall
lahf
ret
cmp
ret
in
fldcw
cmc
inc
cld
call
pop
shl
cmp
lret
sbb
dec
jge
or
xor
addr16
or
dec
push
sub
inc
inc
mov
xchg
pop
and
in
clc
addr16
pop
push
bound
xor
rcll
les
mov
pusha
ljmp
sti
jnp
lds
mov
call
xchg
ds
fucom
cli
pop
or
add
outsb
cmp
xor
out
in
test
cmpsb
xor
inc
loop
ljmp
mov
push
lcall
xchg
in
pop
xchg
out
mov
mov
adc
cld
adc
sar
sbb
fwait
in
sbb
rcr
scas
add
sbb
pop
das
notb
push
xlat
ret
adc
push
jbe
mov
lahf
xorl
insl
push
mov
pop
sti
pop
lods
push
xchg
cmp
and
adc
mov
adc
inc
pop
lods
xor
cmpsl
stos
in
js
not
cmp
jns
rolb
or
xor
pop
fidivs
loope
jbe
jns
stos
sub
push
sbb
add
rclb
pop
cwtl
cli
push
les
test
add
pop
dec
cmp
inc
fwait
jns
cmp
cli
scas
lea
mov
in
sbb
data16
adc
clc
lock
aaa
cmp
popa
je
inc
test
pop
jns
push
rcrl
add
movl
mov
sarl
cld
mov
aas
icebp
in
jno
add
add
ja
xchg
aas
pop
mov
pushf
inc
das
xchg
jbe
add
jbe
nop
cmp
jae
xor
fidivrl
push
push
cmp
into
jle
stos
adc
repz
dec
subb
cwtl
add
xchg
inc
ror
test
bswap
jb
jae
mov
adc
adc
push
xchg
sbb
push
insl
pop
shlb
rorb
fstpt
mov
data16
out
lea
cmp
jle
lds
add
inc
xchg
scas
cmp
ss
mov
mov
shrb
out
fdivl
stc
cmpsb
mov
bnd
mov
mov
inc
mov
mov
cmp
sbb
xchg
or
jae
outsl
mov
insl
movsb
test
mov
xor
add
xor
sub
cltd
xlat
cmc
sub
imulb
cmc
cmc
insl
pop
in
lea
jo
jecxz
inc
out
in
and
roll
ret
out
test
pop
lock
dec
push
lods
mov
sub
cld
dec
shlb
mov
test
dec
data16
js
xchg
sbb
ljmp
imul
cmc
push
shl
stos
xchg
or
lea
lahf
and
cmp
stos
jae
xor
xorb
adc
out
sbb
movsl
les
mov
addb
xor
xchg
dec
mov
mov
hlt
xchg
movsl
insb
pop
test
arpl
sbb
inc
jne
js
dec
add
scas
jo
mov
push
jmp
dec
ja
inc
mov
push
mov
andl
sbb
clc
lret
pop
inc
mov
fstpt
mov
jp
jp
mov
xchg
das
enter
add
sahf
out
popa
sbbl
js
sub
cmpsb
fs
push
fadd
and
ror
sbb
dec
lret
adc
jns
or
push
xchg
clc
mov
pushf
inc
ret
add
sub
lds
push
js
pop
ret
std
test
movsl
outsl
das
add
out
icebp
dec
jle
jg
push
cmp
sub
xor
and
adc
and
dec
dec
loopne
jge
rcrl
xor
mov
mov
pop
bound
inc
bound
call
jns
insl
and
frstor
data16
pusha
jb
cmp
lcall
int
mov
call
repz
out
push
mov
mov
inc
sub
jp
jbe
rorb
rolb
mov
movsb
xor
mov
addr16
cmpsb
fs
cli
gs
mov
adc
notb
mov
push
cld
xor
sub
xor
ljmp
call
cmc
mov
je
jl
aas
fdivrp
sbb
add
fadds
pop
jbe
je
dec
js
std
in
fimull
daa
das
or
sub
in
push
or
mov
gs
xchg
mov
or
inc
in
dec
loopne
js
int
sub
popa
cmc
inc
int3
add
xor
mov
inc
xchg
stos
xchg
or
jno
inc
cmp
sub
imulb
inc
push
xor
mov
xor
pop
jno
cmp
cmc
push
inc
push
pop
int3
xchg
sub
rcr
mov
jae
addr16
push
cmpsl
out
push
mov
repz
jae
das
popf
sub
jecxz
inc
sbb
out
fcompl
adc
cmp
icebp
add
shr
inc
test
push
enter
mov
movsb
xchg
int3
loope
fsub
xchg
loop
jg
inc
jns
sub
stos
fnstsw
clc
loopne
sub
push
in
negb
lods
cli
sub
dec
movsb
xrelease
xchg
mov
pop
ret
add
les
lcall
xor
pusha
push
sbb
test
jl
popa
pop
push
jns
xor
popa
ss
mov
aam
jle
jg
aad
jno
xchg
sbb
shrb
or
stos
outsb
test
dec
mov
lea
jmp
xor
jne
int3
dec
add
mov
scas
cmpsb
ret
add
fistl
mov
pop
add
jne
jbe
arpl
push
in
mov
adc
xchg
push
fsts
test
fstl
jbe
jno
mov
insl
cmpsb
sbb
push
imul
xchg
mov
xlat
int
outsb
lock
divb
xor
mov
mov
mov
mov
shlb
pop
aam
or
add
rcll
and
xchg
ds
adc
loope
pop
lret
outsl
je
loopne
dec
or
mov
lahf
stos
idivl
jns
fimuls
popf
mov
insb
sbb
int
mov
push
fdivs
outsl
cltd
in
xchg
add
jns
sub
dec
fnsave
xlat
fistpll
jbe
out
inc
loope
fmul
push
dec
gs
test
lods
mov
push
enter
lea
inc
add
movsb
cmpsb
xchg
mov
js
cmp
in
fucomi
xlat
jbe
cld
xor
jmp
test
push
adc
sbb
mov
pop
pop
fwait
sub
lds
daa
out
xor
fidivl
jnp
outsl
xor
out
lock
sbb
sub
cld
xor
popf
aad
shr
pop
fsts
arpl
xchg
mov
das
mov
das
divps
pop
fadd
lds
adc
pop
and
in
movsl
clc
shlb
jnp
mov
pop
mov
lock
fadd
mov
sahf
xchg
inc
mov
sti
mov
mov
xorl
cmc
insl
shll
addr16
and
mov
into
jnp
push
loope
dec
xchg
and
sbb
pop
pop
ucomiss
jne
cmp
movsl
rclb
out
jo
pop
jno
push
mov
push
stos
cmc
jl
jle
inc
mov
jmp
pusha
mov
and
fisttps
push
and
lea
mov
xlat
mov
pop
or
jmp
mov
mov
imul
sbb
push
ret
adc
mov
lds
xor
or
pop
subb
lret
rorl
pop
dec
jae
add
xor
stos
std
push
test
xchg
sub
jmp
and
xor
pop
lret
push
push
aas
xchg
roll
arpl
push
cmp
lock
outsb
and
push
lcall
aas
jle
repnz
test
pop
repnz
mov
imul
jns
add
stc
clc
pushf
sbbl
add
clc
push
lds
mov
shl
cmp
add
fidivrl
lods
jg
sahf
xchg
cmp
jle
cmp
mov
outsb
xchg
cmpl
mov
add
iret
outsb
mov
cmp
lahf
in
inc
or
pop
jg
repz
mov
outsb
jbe
mov
sbb
popa
fs
sbb
leave
add
or
dec
lret
dec
pop
mov
jmp
subb
in
inc
cmpsb
in
lock
jg
fildll
cltd
into
mov
stos
popl
negb
dec
xor
cmp
jp
push
dec
push
mov
testb
out
aam
push
sub
mov
sbb
scas
push
je
pop
jmp
jge
push
mov
sub
mov
jae
adc
inc
arpl
jp
rcr
sbb
pop
scas
inc
mov
out
repz
fcompl
xchg
push
ss
push
insl
fs
mov
cld
lods
addr16
xchg
divb
test
pop
xor
push
xor
or
sarb
jbe
loop
arpl
inc
or
pop
dec
xor
jl
fcomps
jp
mov
inc
mov
jns
push
mov
mov
mov
leave
sub
icebp
imul
mov
push
loopne
or
jecxz
in
mov
mov
pop
enter
decl
loopne
loope
xor
or
mov
cli
faddl
xlat
pop
inc
ja
adc
aad
pop
adc
aaa
dec
or
fimuls
add
mov
xor
mov
mov
dec
test
cld
in
aad
sbb
clc
rcrb
mov
lahf
dec
aad
mov
pop
sub
mov
stos
shlb
xor
push
out
jecxz
jge
add
inc
lcall
xor
loop
and
dec
mov
pop
adc
pop
ljmp
jmp
inc
andb
mov
sahf
push
adc
and
dec
scas
push
xchg
push
outsl
rcr
adc
push
jns
inc
sbb
popa
mov
icebp
int3
repz
cltd
cmc
push
into
add
mov
in
jmp
cmpsb
sub
push
cmp
out
sbb
das
ja
cmp
jb
addr16
mov
popl
ret
xor
mov
xor
out
jecxz
std
push
mov
popa
stos
xchg
xor
pop
jnp
and
add
dec
mov
adc
lock
data16
ja
jne
sahf
jns
repz
ljmp
sahf
or
jmp
rolb
mov
sub
fnstenv
test
mov
jl
lahf
sbb
jb
ret
es
add
hlt
mov
push
cmpsb
mov
test
pop
sub
ds
stos
clc
pop
jmp
ljmp
inc
lret
leave
dec
mov
je
int3
xchg
and
cld
addr16
sbb
imul
imul
mov
cmpsb
insb
inc
pop
addb
jo
or
repnz
scas
add
xchg
inc
shlb
inc
sub
adc
into
ficoml
lock
and
out
push
daa
lds
sub
inc
loop
jo
lds
or
jbe
dec
testl
dec
imulb
mov
adc
xchg
outsb
mov
mov
pop
into
les
mov
mov
cmpsl
in
call
push
mov
push
cmpsb
lods
adc
xor
ljmp
cmp
bound
pusha
add
ss
popa
rcrl
loope
push
adc
lock
inc
and
jl
jo
stos
sbb
in
pop
sbb
and
mov
aam
push
push
aad
rolb
inc
pop
mov
push
or
xchg
pusha
pop
or
data16
xchg
gs
xor
adcl
mov
shrb
cmpl
xchg
cmpsl
sahf
jns
test
pop
cld
inc
cli
jb
xor
mov
xor
ret
shrl
fwait
sbb
sbb
sbb
pop
jne
shll
imul
fnstcw
subl
ljmp
mov
sub
outsl
adc
enter
cmp
repz
jecxz
cmpsb
push
pop
push
push
dec
jae
xor
addr16
testb
lods
lods
filds
mov
jg
xor
aam
lcall
aaa
sub
cmp
ss
enter
add
and
jne
mov
rcrl
fmul
adc
and
roll
push
push
jmp
push
movsl
cmp
and
inc
add
out
sbb
arpl
cmpsb
dec
mov
and
lods
push
fucomi
sbb
std
out
dec
clc
push
in
ret
fmul
push
dec
cmpl
inc
pop
sbb
stos
jns
fcomp
dec
cmp
aam
pop
call
push
mov
sbb
xchg
pop
mov
ret
jle
adc
fwait
adc
in
ja
shlb
mov
inc
stos
fmul
je
xor
sbb
jecxz
dec
and
or
in
stc
dec
inc
or
push
clc
dec
adc
mov
aad
pop
sbb
movsb
adc
push
out
and
pop
pop
pop
sub
ret
cmp
push
imul
movsb
faddp
adc
xchg
pminub
mov
ret
xchg
jae
inc
bswap
stos
frstor
adc
imul
fdivs
mov
in
add
cmp
lret
push
or
mov
movsb
or
jecxz
in
xor
and
aad
imul
aas
rcl
inc
movsb
stos
scas
jecxz
sbb
ret
insl
mov
adc
sbb
bound
cmpsb
cltd
dec
pop
cmp
leave
mov
mov
mov
cs
adc
rol
les
mov
jbe
jp
xchg
les
test
cltd
mov
add
lahf
lds
cli
mov
dec
lock
insl
inc
call
push
xor
lods
inc
call
call
or
cmpl
or
repz
inc
test
ja
pop
jne
les
int
daa
test
fistl
sbb
pop
sub
outsb
and
and
jg
lea
mov
mov
rol
dec
aam
push
ds
std
fidivrs
xor
lock
pop
mov
arpl
cmc
xor
icebp
cmpsl
sub
inc
mov
sub
cld
pop
mov
push
pushf
mov
bound
push
xchg
pop
push
xrelease
xor
ljmp
sbb
mov
aaa
shl
jge
add
mov
int3
push
or
cmp
dec
ja
jo
adc
sti
stos
fcoms
or
into
and
push
cs
push
add
mov
mov
call
daa
fbld
call
sub
mov
cmp
dec
lcall
adc
andps
pop
lods
les
stc
xchg
es
popf
and
aam
lret
ja
sahf
xchg
xor
pop
or
cwtl
aas
jne
or
mov
test
xor
sub
lret
ss
pop
fdivrl
popa
add
aam
lcall
or
jns
mov
push
jo
mov
mov
xchg
or
sub
xor
fstl
and
inc
ffree
push
adc
push
and
aaa
or
jns
mov
and
xor
call
cmp
fcoms
cmp
and
sub
jmp
push
jno
mov
cmpsb
jg
cmp
cmpsb
mov
lret
adc
jns
jmp
ror
xor
cmpsb
sbb
adc
push
lcall
ror
mov
sub
mov
out
pop
lahf
jp
and
lods
cltd
sbb
xchg
popf
or
dec
out
les
jge
mov
sub
iret
movsb
inc
jbe
movsb
out
in
call
subl
push
imul
out
test
and
and
pop
pop
xchg
rclb
imul
lret
cmc
in
sbb
dec
scas
or
movsb
loop
xchg
sti
call
jecxz
inc
pop
push
int3
in
scas
loope
mov
insl
cmovns
sbb
mov
mov
insl
in
or
rcrl
call
mov
fldcw
sbb
pop
and
mov
xchg
out
out
es
and
daa
mov
push
pop
dec
int
loop
push
rcrb
jns
sarb
cmp
jmp
stos
pop
iret
dec
lods
inc
insb
mov
sbb
inc
das
cmpsl
addb
cmp
xchg
add
fwait
hlt
xchg
rcrl
pop
in
and
mov
das
push
jnp
shr
mov
mov
mov
sbb
call
xchg
mov
push
add
jmp
push
xor
scas
je
icebp
mov
mov
sbb
mov
and
sub
mov
cmp
pop
mov
push
es
iret
inc
xchg
ret
cltd
iret
fnstcw
arpl
push
iret
inc
daa
add
jle
in
nop
sub
dec
aas
push
mov
nop
xchg
inc
adc
rcll
stc
fnstenv
cmc
xchg
orl
std
and
jmp
psrlq
xor
movsb
xchg
mov
es
fwait
xor
shlb
out
aas
rcrb
stos
xor
dec
inc
mov
jl
mov
cmc
cmp
and
lret
adc
push
xchg
sub
das
loopne
and
test
insb
dec
mov
lods
push
push
xchg
gs
xchg
mov
mov
push
insb
mov
sbb
sti
inc
mov
jae
mov
adc
stos
fisttpll
fs
pop
jl
mov
lds
mov
push
fsub
leave
mov
push
imul
sub
bound
pop
sub
jmp
mov
test
jle
outsl
or
je
fucom
mov
adc
pop
cli
mov
mov
xchg
mov
mov
inc
ljmp
stc
mov
ja
test
rorb
push
test
pop
outsb
inc
iret
into
cmp
int3
std
sbb
xor
adc
mov
cwtl
fcompl
loope
jb
sub
cmpsl
iret
xor
test
pop
pop
xor
popa
add
mov
cs
cmp
inc
scas
popf
bound
lock
rep
cwtl
push
std
push
cmp
lock
push
lock
sub
movsl
and
sub
out
shl
fmuls
xchg
jmp
xchg
push
imul
xchg
xchg
popf
insl
pop
out
jg
cmp
mov
xchg
mov
push
pop
push
pop
inc
inc
push
mov
cwtl
pop
fsubl
in
inc
dec
sarl
imul
dec
mov
sbb
pushf
popf
push
push
lea
test
bound
dec
jp
cmp
gs
call
add
sbb
divl
push
mov
lahf
push
das
imul
out
cmp
sbb
and
sub
in
adc
add
dec
das
inc
dec
call
inc
rcrb
pop
dec
mov
dec
lret
rclb
mov
cmp
add
sbb
popa
xor
or
adc
sbb
loope
scas
stc
sbb
test
ds
mov
mov
or
jne
cmpsl
xchg
mov
lock
pop
cs
sbb
icebp
ret
cmp
pop
popf
mov
aaa
adc
xchg
and
js
mov
rcl
int
loopne
out
sbbb
popa
xor
mov
loope
roll
stos
jbe
test
div
in
jno
aad
inc
push
cmp
gs
lods
cmp
iret
mov
xorb
and
mov
jl
repz
or
mov
dec
test
scas
hlt
inc
lods
enter
out
inc
sbb
mov
mov
repz
jge
out
push
es
mov
arpl
jb
xchg
loop
das
ljmp
fidivs
ret
sub
jmp
lods
dec
adc
xor
mov
add
in
cmp
mov
lcall
inc
push
mov
mov
std
mov
jne
fbstp
aaa
stc
and
cmp
mov
jb
test
mov
add
push
dec
mov
cmp
stos
outsb
loope
imul
sub
lcall
repnz
and
mov
xor
fildll
adc
pusha
jmp
je
mov
in
xchg
adc
scas
ss
fwait
lahf
lds
movsb
scas
or
shl
pop
fimuls
clc
js
mov
stos
repz
push
push
mov
mov
dec
xchg
stos
push
sbb
adc
ja
rcll
lods
sub
cmpsl
jmp
and
dec
add
jns
outsb
jno
sub
mov
pusha
sub
mov
shll
cmpsl
or
cwtl
inc
xchg
xchg
cmp
jmp
cmp
pop
into
add
test
adc
dec
and
mov
cwtl
inc
or
cmp
push
adc
addr16
xchg
jns
and
shll
cli
sub
fidivrs
insb
sub
xor
aam
jae
mov
jp
jae
mov
mov
xor
out
ja
mov
push
daa
xchg
lret
xor
cmp
aas
ret
sbb
scas
les
shrl
cmp
nop
test
std
mov
cmpsb
cld
add
lods
push
push
loope
push
or
mov
js
popf
movsl
xchg
inc
scas
cs
adc
daa
leave
sub
xor
inc
push
loope
or
shll
lcall
rcrb
xor
add
shl
push
out
cmp
lcall
cltd
into
sbb
enter
dec
push
int
sub
mov
out
jl
mov
adcl
mov
sub
flds
inc
es
or
ljmp
fst
sbb
aas
stos
xchg
or
sub
sub
mov
xchg
out
in
jp
mov
ja
and
xor
fimuls
add
in
jae
ficoms
fwait
inc
addr16
push
test
cli
pushf
sub
shl
or
mov
ret
ret
cmp
outsl
adc
ret
or
loopne
loopne
add
pop
sub
lods
mov
cs
push
into
loope
dec
enter
sbb
sbb
sub
jne
call
jmp
xchg
xchg
jo
cmp
xlat
rclb
repnz
lods
aam
push
xor
xchg
shr
scas
xchg
xchg
pop
xlat
int
dec
xchg
js
mov
mov
cmp
pop
jmp
jno
cli
pushf
xor
and
jo
loope
ss
xchg
sub
mov
fadd
jl
aam
test
shrl
xor
daa
dec
push
jns
aas
inc
or
sbb
mulb
sbb
sahf
xlat
mov
adc
fwait
dec
cmpsb
mov
fwait
loope
je
mov
ret
add
or
dec
xchg
sub
inc
mov
scas
add
sub
cltd
mov
adc
xchg
sbb
ljmp
inc
inc
xor
adc
shll
mov
aaa
add
stc
add
or
js
imul
jb
imul
add
adc
lods
mov
xchg
xchg
and
sbb
mov
std
mov
aaa
fprem
xchg
xor
add
pop
ja
xlat
lods
lods
xlat
or
xchg
aad
sarb
fsts
pusha
cwtl
aas
mov
cs
hlt
mov
out
inc
ss
out
loope
jne
loop
cmp
daa
add
pop
push
ret
mov
dec
int3
test
jno
in
movsb
outsl
xchg
cmpsl
or
js
jns
push
dec
xor
jp
addr16
dec
fwait
or
dec
loope
mov
int
in
testb
adc
mov
clc
rcl
loopne
stos
lds
dec
jmp
out
add
dec
sub
mov
jb
out
lahf
dec
dec
mov
adcb
sbb
iret
xchg
les
mov
adc
repnz
fimuls
pop
add
mov
ficoms
enter
inc
das
sar
xor
movsb
mov
cld
fildl
sbb
jno
jno
gs
movsl
lcall
call
mov
stos
sub
jl
sub
loope
add
or
test
mov
xor
mov
stos
and
dec
fs
std
lods
adc
fwait
pusha
movl
cwtl
icebp
cltd
xor
inc
pop
sub
jno
aas
mov
orb
test
insb
arpl
sub
outsl
mov
fwait
jb
sahf
pop
mov
pushf
mov
cmp
jne
iret
loope
repnz
out
mov
outsl
cmp
sarl
mov
push
pusha
ret
sbb
mov
cmp
std
repz
push
daa
stos
test
leave
cmp
roll
aam
xor
rcll
xor
xchg
xchg
movb
or
rcrl
or
xchg
add
sub
lahf
add
mov
in
inc
add
cmc
mov
adc
aam
xchg
jo
xchg
adc
movsb
dec
cmp
cmc
mov
iret
outsl
in
xor
ljmp
cmp
nop
fwait
push
adc
in
aaa
gs
adc
jle
daa
inc
imul
push
sub
jp
sbb
xor
push
jbe
or
inc
push
insb
loopne
lahf
push
mov
in
push
out
icebp
popa
ret
fwait
sub
pop
scas
in
cmp
into
stc
mov
dec
xchg
sbb
push
inc
xchg
lods
xchg
and
jo
inc
loope
int
inc
out
push
and
gs
push
fs
lods
arpl
pop
lock
xor
jmp
icebp
cli
scas
lods
fwait
cmpb
xchg
test
xchg
out
pop
imul
sub
fidivs
shlb
dec
data16
sub
push
lds
neg
mov
mov
arpl
mov
fldenv
popa
jae
mov
and
xor
jo
xchg
pop
stc
roll
xchg
mov
jne
daa
icebp
das
sbb
ds
sbb
ljmp
repnz
dec
mov
sahf
jmp
fisubrl
ret
sarl
and
jge
iret
popf
je
mov
push
out
shrl
xor
push
xchg
jecxz
outsb
lea
ss
xchg
enter
aaa
xor
scas
cmpsl
lods
dec
push
fwait
dec
and
loopne
ret
sbb
inc
into
xor
sbb
lahf
and
sahf
stos
pop
leave
addr16
mov
aam
lods
jp
lds
ret
cmp
push
das
cld
movsb
stos
lahf
cmpsb
faddp
lock
push
cmp
pop
mov
fisttpl
push
push
std
mov
dec
lahf
push
mov
cld
inc
cs
push
jne
test
clc
dec
mov
sub
pop
mov
aaa
inc
fcomps
sub
mov
hlt
shrl
test
add
lret
in
xor
outsb
add
cmp
adc
bound
aad
sbb
mov
or
inc
loopne
ret
adcb
imul
or
fsubs
pop
fstl
rorl
aaa
xchg
cltd
jno
mov
mov
mov
stc
cmp
jge
pop
push
pop
or
fldcw
jle
test
cmp
fadds
xchg
xor
xor
inc
or
stc
adcb
jle
and
flds
pusha
mov
xchg
dec
icebp
jge
mov
outsl
movsb
xchg
call
adc
clc
xor
int3
es
mov
mov
mov
jle
cmp
leave
testb
into
fdivs
dec
iret
pop
mov
push
xchg
pop
and
xor
pop
push
push
fs
pop
pop
test
call
push
mov
cmp
call
sahf
sub
in
imul
dec
and
push
mov
sti
lahf
sbb
ret
jg
sub
mov
push
mov
and
enter
push
out
pop
add
movsb
and
lahf
out
lahf
cmc
mov
or
les
fwait
outsl
scas
pop
jae
or
fiadds
mov
or
jg
mov
inc
fs
add
cltd
cmc
sub
xchg
xlat
sub
mov
add
pushf
outsb
in
xchg
clc
mov
popf
adc
jne
pop
inc
lea
iret
adc
mov
mov
test
jns
int
es
add
pop
mov
fsub
push
pop
pushf
sbb
jge
jne
cmpsb
sub
add
or
push
pop
cwtl
test
mov
push
cmp
daa
push
ret
sti
sub
out
adc
lock
jbe
inc
mov
lea
iret
adc
fs
ljmp
out
jne
mov
push
xor
das
out
cmp
xchg
orl
pop
jmp
sahf
test
mov
cmp
jl
push
add
xor
and
mov
insb
fsubl
add
mov
fwait
mov
mov
pop
jmp
sti
inc
popf
mov
cmp
dec
xchg
out
add
adc
add
das
mov
push
xchg
inc
repz
jns
cmpsl
arpl
or
test
aad
mov
mov
aas
aaa
jb
mov
fistpll
pop
pop
push
sub
fld
pop
aam
or
enter
aam
cmpsl
sub
loope
std
insl
or
pop
xlat
negl
rorb
aam
xor
mov
imulb
bound
orb
mov
or
mov
in
mov
xor
xor
mov
sub
mov
shlb
ficoms
cld
sti
xor
ror
sbb
push
xlat
fwait
sbb
outsb
xchg
mov
lret
pop
sahf
mov
ficoms
stos
leave
xchg
roll
sub
jnp
js
repz
outsb
push
jp
cmp
push
push
jb
xchg
ret
cltd
int
fisubrl
mov
jne
pop
inc
cld
push
hlt
lea
js
jae
cmpsb
cmp
iret
nop
repz
shr
iret
jecxz
mov
loopne
out
test
cmp
ret
add
cli
lods
mov
stos
insb
dec
out
push
es
mov
insl
fdivs
enter
dec
jg
inc
stc
inc
hlt
sahf
adc
mov
fidivl
adc
or
mov
add
in
push
aad
xor
add
adc
mov
push
mov
mov
jmp
movsl
es
pop
iret
sub
imul
rcll
pop
or
push
sbb
fiaddl
int
das
lahf
xchg
or
daa
fdivs
pop
andb
fisubrl
add
xor
cmc
cs
add
mulb
icebp
lods
and
push
pop
jmp
xor
xchg
inc
ret
push
stos
sti
or
push
push
les
outsl
push
sub
fwait
or
sub
fs
or
push
mov
mov
mov
ds
xchg
push
add
xor
sub
mov
popf
gs
push
inc
int
cmpxchg8b
into
or
test
sub
inc
test
mov
cmp
and
repz
pop
xor
icebp
cmpl
dec
pop
xchg
or
fadd
mov
mov
cmp
icebp
xlat
jns
xor
xorl
push
inc
mov
and
mov
int3
aad
lods
lcall
lods
aad
pop
cmp
fwait
inc
adc
sahf
mov
sahf
stc
xchg
out
das
pop
adc
and
and
pop
and
sarb
and
mov
xchg
aas
in
mov
stos
dec
int
call
mov
aaa
stos
jno
adc
lahf
rcrl
mov
and
movsl
pop
rol
daa
fldpi
movsl
mov
adc
pop
loope
lods
xchg
mov
scas
shll
pop
rol
fwait
test
leave
jae
fidivrl
and
or
iret
mov
xor
mov
push
xchg
jecxz
cmpsl
pop
es
cld
xchg
push
popa
in
repz
xchg
jbe
scas
stos
cwtl
mov
fcmovu
add
jge
sbb
mov
out
hlt
movsl
adc
loope
mov
in
ja
dec
mov
mov
pop
xor
out
and
xchg
or
imul
cmp
data16
mov
pop
int
int3
xor
stos
pop
xchg
pop
seto
out
mov
lret
mov
push
stc
inc
adc
pop
mov
jecxz
mov
xlat
jmp
cld
stc
or
mov
mov
mov
mov
add
das
fdivl
mov
mov
xchg
pushf
add
into
fildll
mov
std
mov
dec
xor
adc
inc
scas
cwtl
sub
sbb
out
xor
mov
imul
adcb
loop
mov
stc
inc
fnsave
xor
mov
mov
add
outsl
in
test
mov
ds
pop
pop
loopne
cmp
mov
cmp
filds
cmpsl
dec
xor
std
out
sarl
popf
test
or
das
fstpl
and
adc
adc
add
sbb
cs
loop
dec
arpl
jp
add
popf
aaa
xchg
push
and
int3
icebp
cmp
cmp
cwtl
enter
mov
jp
jns
pop
daa
aas
test
fdivs
sbb
mov
popa
shl
jecxz
cltd
inc
push
xchg
out
faddl
ret
jg
inc
jge
xchg
inc
orl
push
add
imul
mov
mov
push
sbb
aaa
pushf
jno
out
in
js
rcll
cmp
pop
lret
jne
pop
push
and
xchg
cltd
xchg
pop
jle
push
mov
leave
fnstsw
jo
test
mov
adc
faddl
push
and
pop
pop
and
test
mov
test
cmp
push
pop
mov
arpl
xchg
cmp
xor
int
insl
cmpl
sbb
cmp
pop
lock
pop
arpl
push
movb
test
imul
and
add
cmp
test
shlb
icebp
popa
pop
push
sahf
fisttps
mov
lret
xchg
push
xchg
daa
neg
aad
xchg
in
test
in
dec
sub
mov
loope
xor
btc
stc
xchg
shl
mov
int
incb
xchg
mov
xor
or
xchg
enter
repnz
leave
imull
adc
into
rolb
arpl
inc
sbb
push
lahf
in
adc
and
sub
add
leave
jmp
lret
add
shl
jp
mov
adc
inc
test
adc
push
mov
mov
mov
push
out
push
lret
pop
jle
cmc
clc
imull
negl
xlat
and
shr
cmp
inc
aas
fldl
mov
repnz
fisubrl
dec
xor
pop
pop
or
adc
ds
mov
inc
fisubrs
cmp
mov
push
jne
jno
divl
push
repz
xchg
fwait
or
sti
hlt
loope
or
fwait
call
gs
xchg
clc
insb
add
lahf
sbbb
fnstenv
jno
std
out
test
repnz
scas
leave
outsl
jmp
dec
mov
mov
add
add
mov
ret
outsb
fiadds
cmp
movsl
sahf
inc
ret
add
shrl
lods
nop
rcrl
push
xchg
jno
sbb
inc
and
mov
and
adc
icebp
stos
lret
mov
idivb
jb
push
aaa
ret
mov
icebp
and
test
jl
in
dec
rcll
fldcw
push
out
adc
aas
in
sbb
stos
mov
notl
lcall
cld
pop
mov
xchg
mov
adc
dec
inc
lea
int
adc
push
icebp
scas
pop
test
inc
inc
mov
cmp
jg
jge
int3
shlb
imulb
xchg
fsubl
push
cmp
ds
leave
push
movsl
ret
insb
pusha
jl
int3
dec
jecxz
rcll
jne
lret
int
repz
push
mov
jmp
andl
xor
mov
mov
fldcw
enter
fs
repnz
outsl
gs
lds
adc
xchg
clc
negl
pop
pusha
adc
out
dec
sbb
movsl
pop
pop
sub
lret
ja
or
jmp
inc
adc
xor
es
leave
jecxz
adc
jg
ss
ret
subb
adc
movsb
shlb
jae
jecxz
cmp
shll
xchg
dec
add
fwait
mov
xchg
xchg
pop
push
fs
nop
cltd
adc
sub
mov
aam
mov
jb
xor
and
jnp
adc
dec
fwait
xchg
roll
or
insl
push
mov
ficompl
aas
sahf
cwtl
orb
pmuludq
and
scas
or
sbb
in
mov
icebp
sbb
jmp
pop
pop
xchg
sbb
loopne
mov
je
mov
xor
inc
push
push
testb
xchg
out
mov
icebp
mov
or
outsl
gs
mov
neg
out
push
roll
sahf
cmpsl
pop
sub
insl
gs
dec
mov
xlat
mov
or
hlt
mov
xor
mov
add
jb
xchg
lods
mov
push
les
jae
add
cwtl
jmp
movsl
mov
dec
cs
cmc
jecxz
push
sub
mov
js
into
add
imul
push
xor
fs
pop
je
inc
hlt
int
ja
repz
pop
smsw
repnz
imull
mov
sti
cli
leave
shll
cmp
addl
lret
ror
xor
pop
cltd
data16
fsubp
test
mov
or
and
inc
js
call
pusha
dec
stos
les
or
insl
shll
les
and
insb
adc
cmpsl
addr16
push
int3
pop
ret
fstl
mov
stos
int
push
int
pop
xor
and
jnp
cwtl
or
sub
js
adc
cmp
cltd
ss
jne
movsb
repnz
inc
cs
dec
inc
dec
out
fsubl
cmp
daa
aaa
in
mov
loopne
or
mov
xchg
ficoms
repnz
inc
mov
das
es
shlb
push
jae
mov
outsb
adc
scas
pop
mov
test
rcl
cmpb
pop
xor
xor
dec
push
add
or
adcl
and
cwtl
fcmove
mov
ja
aaa
inc
shr
mov
xor
lea
sub
xchg
lret
ret
mov
jg
loop
in
lds
shlb
in
mov
inc
pop
aas
inc
iret
es
adc
fisubl
fsts
push
leave
sahf
shrb
stos
xchg
mov
pop
cmp
data16
mov
mov
push
adc
paddb
jg
mov
xchg
add
cmpsl
outsb
idivl
sub
mov
into
movsl
xchg
or
out
ss
scas
imul
stos
mov
mov
shlb
loopne
inc
mov
sub
into
sahf
clc
imul
and
push
jmp
adc
pop
mov
fcmovnu
and
cld
ljmp
cmpsb
sbb
test
lods
mov
add
sub
push
pop
mov
sub
pop
out
or
out
pushf
hlt
fiaddl
xor
mov
pop
sub
cmp
das
sbb
imulb
mov
mov
pop
ret
loopne
and
fabs
pushf
es
sbb
outsb
enter
cmc
imul
js
das
jnp
cmp
dec
or
and
push
push
insb
and
dec
out
nop
mov
or
call
jmp
enter
aam
stos
push
mov
xlat
mov
xlat
repnz
push
mov
mov
sub
push
and
push
or
sarl
cltd
xchg
lahf
inc
cmpb
shll
xor
add
scas
aad
dec
lahf
insb
push
imul
ret
out
dec
mov
bound
dec
mov
add
xor
mov
dec
das
hlt
cmc
inc
inc
xor
mov
xor
cwtl
hlt
andl
dec
pop
jo
fisttps
sub
inc
arpl
subb
fcompl
pop
jne
xor
fistpll
sub
lahf
jle
fldl
mov
inc
xchg
jl
or
fs
dec
push
sahf
pushf
lods
shlb
xchg
and
or
pop
nop
xor
in
and
lods
fwait
mov
xor
cmc
cld
inc
cwtl
insl
sub
sub
adc
inc
mov
test
das
push
pop
mov
je
inc
sahf
push
loopne
rcl
jo,pn
subl
sbb
std
repnz
repz
cmc
mov
adc
jg
dec
dec
mov
adc
xlat
outsb
add
sub
rcrb
jne
lods
lods
and
push
gs
xchg
jl
shr
aam
movsl
stos
add
and
push
adc
xor
lahf
out
jecxz
rol
imul
jae
dec
pushf
jg
mov
pop
daa
icebp
xchg
xor
bound
and
aam
jbe
out
adc
push
sbb
push
jle
aad
icebp
mov
stc
adc
cmpsb
in
sbb
sbb
mov
push
outsb
lcall
jl
adc
push
sarl
lret
out
arpl
inc
jno
pop
sbb
ds
jmp
push
sub
add
fdivr
or
pop
mov
hlt
mov
jb
enter
loopne
push
jg
xchg
jg
icebp
ja
mov
ss
stos
jne
mov
call
int
xchg
xchg
sbb
and
pop
jmp
pop
push
push
sbb
mov
imul
adc
aaa
sub
daa
mov
jns
xchg
push
xor
adc
ds
and
mov
mov
cltd
dec
adc
gs
imull
mov
add
repz
dec
xor
sbb
mov
add
mov
jle
in
mov
arpl
or
ffreep
inc
xorl
das
pop
jmp
push
and
mov
aad
outsl
clc
or
aad
push
cld
lock
jge
and
mov
pop
sarl
es
dec
mov
ljmp
fdivrp
or
insb
inc
out
int
jne
or
fdivrs
sbbb
leave
fisubl
cmpsb
pushf
sbb
and
jle
test
ficomps
jbe
sub
lcall
imulb
lea
jle
mov
cmp
sar
and
shrl
mov
incl
push
cmp
push
cmpsl
in
sub
dec
or
outsl
dec
gs
dec
gs
popa
stos
adc
mov
imul
mov
add
and
or
mov
test
mov
inc
jae
mov
stos
and
shrl
xor
pop
sub
add
ds
lea
cmp
add
jg
cmp
mov
lock
pop
cmp
jne
in
mov
mov
xchg
negb
scas
sbb
stos
addl
test
lcall
xchg
pop
hlt
push
and
push
dec
pop
add
mov
fists
adc
out
xlat
outsl
js
xchg
xchg
xchg
sbb
lock
xchg
stos
push
int3
in
in
xchg
enter
sbb
lcall
rclb
mov
shll
mov
pushf
arpl
gs
pushf
sub
lods
insb
outsl
mov
push
out
mov
or
xor
insb
and
dec
push
sbb
sbb
lret
xor
mov
mov
sub
orps
les
pop
sub
shlb
cmp
call
jns
ret
hlt
enter
or
xchg
mov
sbb
pop
out
adc
fisttps
sub
inc
push
or
hlt
int3
enter
fmull
jnp
xlat
daa
mov
add
cwtl
push
push
paddusb
je
mov
adc
pop
lock
sbb
loopne
jmp
shrl
movsb
jle
leave
pusha
adc
mov
sbb
cli
mov
pop
outsb
push
movsb
cld
movsb
and
adcb
insb
sahf
psrad
movsl
sub
sbb
mov
dec
add
mov
push
push
push
push
cmp
mov
rcll
sahf
rcrl
hlt
popf
mov
fists
stos
and
dec
pop
push
imul
insb
test
fs
adc
cld
mov
or
stos
inc
and
push
loop
popf
dec
ret
or
inc
daa
inc
imull
loop
jnp
push
out
xchg
mov
add
push
cmpsl
std
pop
sbb
rorl
sub
cmc
mov
and
push
mov
testl
rorb
fs
test
shrb
push
fsub
jmp
mov
inc
ja
bound
and
cmp
jno
add
ds
cld
lds
lahf
or
adcb
mov
adc
sarb
mov
sbb
nop
pop
in
push
out
and
in
mov
orb
nop
cmp
mov
cmp
or
fidivrs
imul
das
orb
push
sahf
out
and
xor
lahf
das
xchg
adc
pop
scas
fidivrs
lahf
add
aas
adc
enter
out
add
addr16
jno
add
jge
outsb
pop
lret
adc
xchg
push
pop
cmp
mov
sub
push
mov
xchg
pop
pop
lods
or
inc
adc
insl
fcomps
les
mov
dec
lret
in
inc
xor
cmp
pop
inc
scas
stos
hlt
jo
imul
in
lcall
aas
icebp
call
das
fcompl
out
cmp
push
cmp
push
inc
movsb
jg
push
jne
call
fisttpl
sub
gs
pop
sub
sub
repnz
add
fisttps
ja
inc
or
ja
sub
xor
into
xchg
push
pop
out
in
sub
dec
pop
mov
ss
lcall
jecxz
pusha
and
push
xchg
cmpsl
jp
and
sti
dec
cmp
fs
imul
js
mov
push
xchg
in
add
je
call
jo
push
lret
shrb
add
mov
xor
out
insl
push
adc
xchg
mov
mov
movsl
adc
cld
lods
pop
xchg
adc
daa
je
test
xchg
nop
dec
fldt
imul
inc
aaa
pop
fsubrl
jbe
aas
ja
out
or
jns
sub
xorb
rcr
dec
cmc
adc
insl
scas
stos
loop
xchg
mov
stos
push
popl
mov
pop
sub
mov
sbb
adc
or
adc
mov
xchg
loop
xor
jno
cli
aam
mov
lret
mov
in
shll
mov
sahf
call
push
cmp
xor
jbe
adc
inc
sub
push
cmp
xchg
data16
cmp
xchg
mov
jl
mov
in
bound
jle
mov
testl
inc
test
cltd
sub
pop
rcrl
fwait
pop
xchg
xchg
aam
sahf
out
mov
fs
cmpsl
push
les
or
sbb
and
xor
popl
out
fiaddl
dec
add
andl
aas
or
push
ret
stos
pop
mov
mov
icebp
xor
jae
insb
and
add
outsl
fmuls
orb
xchg
cwtl
leave
dec
nop
or
add
xor
mov
shrl
scas
dec
enter
push
mov
scas
loopne
cmc
or
insb
sbb
lods
lds
jno
int
cwtl
xchg
jo
cmpsl
xor
lcall
cltd
and
jecxz
addr16
inc
call
sub
mov
jae
or
divb
arpl
and
push
ja
imull
pop
push
icebp
xchg
jns
push
and
mov
repnz
dec
fwait
push
arpl
dec
lret
sbb
rcrb
je
xor
dec
cs
loop
iret
aas
xor
hlt
sbb
cltd
in
cmp
push
push
loop
and
jmp
rorb
bswap
subl
push
mov
xorl
bound
lods
bound
ret
cltd
lock
xlat
fimull
aam
shll
xchg
fldenv
loop
xorb
cli
push
sahf
mov
xchg
add
ja
mov
and
popa
outsb
jo
les
cmc
in
stos
mov
push
rcl
std
adc
xchg
movsl
inc
data16
pop
jns
test
ret
sub
fimull
test
cmp
cltd
call
jp
test
mov
pop
cwtl
jge
or
add
aam
lret
loope
and
pop
xchg
jecxz
pop
sub
sub
cli
push
clc
jbe
aad
movsb
fsubrs
xlat
lds
push
mov
popa
test
mov
jmp
cmp
bound
lock
jnp
lods
jnp
xor
dec
jb
push
dec
xchg
xor
scas
sbb
test
adc
jo
shll
pushf
popf
pop
stos
dec
sub
sub
and
fnstcw
xor
jmp
icebp
out
inc
inc
jle
pop
or
xchg
jo
add
bound
jbe
dec
out
rcrb
into
xchg
shlb
int3
lock
inc
aam
repz
imul
inc
test
movsb
dec
jno
ficoml
scas
mov
xacquire
in
add
inc
inc
jle
mov
shl
inc
dec
lea
in
adc
outsb
arpl
test
mov
or
add
stc
fcomp
cmp
imul
push
arpl
pop
jno
es
unpcklps
rorl
andl
mov
sbbb
outsb
push
stos
in
fbld
xchg
cld
xor
sub
mov
sbb
fistpll
insb
xchg
scas
sbb
xchg
mov
push
or
adc
and
jle
fldenv
lahf
loop
imul
loop
push
mov
and
inc
leave
adc
test
test
inc
imul
enter
hlt
stc
jmp
xchg
dec
jbe
das
or
lods
fcoml
aaa
inc
push
mov
xor
daa
ds
movsl
daa
push
add
popa
push
out
js
inc
ljmp
add
and
rcrb
ss
jae
popf
add
iret
cmp
and
icebp
jl
mov
cmp
jle
ds
in
push
cmp
jg
pop
lret
inc
jmp
xor
mov
in
inc
mov
adc
jno
xchg
add
mov
dec
push
adcb
cltd
xor
pop
pop
xor
push
notb
repnz
imul
pusha
jnp
dec
mul
sub
cltd
imul
lcall
jae
imul
xchg
adc
nop
fimuls
jnp
fwait
jo
inc
popf
int3
stc
dec
add
ss
pop
xor
enter
gs
shlb
cli
ficompl
inc
shl
es
cmp
add
add
sar
fnsave
sub
movsb
into
ds
jnp
xchg
int
cmp
pop
ret
or
adc
cltd
xlat
paddd
test
lret
xchg
mulb
adc
mov
pextrw
inc
sub
movsb
dec
dec
jle
mov
or
cli
into
sbb
les
xchg
adc
cs
test
inc
enter
push
icebp
xor
sarl
xor
mov
mov
leave
pop
push
pop
imul
test
inc
inc
inc
jmp
mov
push
insl
js
jnp
sbb
add
jno
jnp
pop
sbb
and
and
icebp
inc
mov
mov
pop
mov
cmpsl
pop
icebp
data16
inc
jle
in
cmp
shr
sti
mov
out
mov
jnp
or
mov
fisubrs
dec
arpl
cmpsb
dec
cmp
pop
mov
lcall
push
and
add
or
je
jno
pop
nop
cmp
adc
mov
lcall
loop
jl
push
data16
xor
or
les
lods
lods
addl
cwtl
add
or
movsb
or
pop
rclb
outsb
pop
pusha
in
adc
push
push
fisubl
hlt
push
das
adc
es
ljmp
in
push
and
call
test
dec
inc
pop
mov
xchg
je
inc
stos
mov
lods
push
push
arpl
imul
fidivl
mov
sub
pusha
clc
in
test
and
xor
and
iret
ret
cli
mov
aam
dec
mov
dec
pusha
popa
xor
mov
push
sub
dec
clc
std
dec
leave
sarb
cli
or
insl
push
into
jns
jbe
cmp
cmp
adc
lcall
out
cmc
das
push
sti
lcall
sub
stos
dec
push
data16
mov
test
pop
xlat
je
mov
jae
and
add
fsubs
add
pop
das
mov
hlt
test
sub
mov
xchg
repnz
vmwrite
js
and
loopne
pop
jne
lods
push
mov
mov
ja
fldl
out
nop
cmp
test
mov
aaa
popf
dec
lds
daa
pop
and
js
sub
mov
xor
jns
sbb
pop
stos
xorl
std
or
jge
jbe
sub
out
cmc
lea
je
fsubr
popa
cmp
cmp
push
inc
enter
mov
idiv
and
jecxz,pt
mov
jne
xor
ret
sarl
push
xchg
loope
mov
sbb
repz
sbbb
jle
pop
sbb
in
push
sbb
outsl
dec
lea
test
mov
mov
bound
push
rclb
iret
mov
dec
sbb
arpl
pop
aad
mov
push
out
pop
push
push
scas
xor
mov
inc
loope
das
dec
and
aam
test
lock
mov
pushf
mov
lock
jae
adc
pop
cld
lods
dec
xchg
pop
shll
push
in
adc
ret
lods
cwtl
cltd
or
mov
das
lret
in
lret
xor
sarb
jbe
lods
cmp
or
cmp
dec
and
mov
not
pop
pop
fildll
inc
push
inc
push
or
push
lea
cmp
aaa
adc
leave
sub
jno
xor
mov
cmc
leave
cmp
cmpb
jbe
inc
mov
jmp
rolb
fwait
das
jge
push
popf
dec
mov
std
xchg
and
mov
mov
loopne
mov
mov
nop
sbbl
insb
aas
add
dec
cli
lahf
paddd
inc
jg
cwtl
dec
xchg
adc
and
mov
xor
scas
insb
sarb
xor
sub
inc
shll
pop
push
and
jo
inc
movsl
in
jmp
jge
inc
jge
push
ret
es
mov
std
out
out
pop
mov
push
push
out
cmc
sti
sbb
pushf
shll
inc
lret
mov
and
stc
or
imul
xlat
mov
out
mov
cmp
loop
inc
mov
mov
test
shrl
mov
and
outsb
shrb
cmpsb
inc
inc
inc
jg
xor
daa
push
pop
ss
jmp
inc
pop
cmp
xor
subl
rcrb
clc
mov
popa
les
dec
sub
out
mov
ja
stos
cmp
cld
ret
clc
ficomps
dec
pop
adc
xor
lea
sarb
sarl
mov
inc
xlat
pop
sbb
mov
ret
addl
ja
push
dec
adcb
lret
inc
sub
adc
iret
jne
hlt
and
pop
outsl
lods
push
shll
adc
mov
or
dec
shrb
test
xchg
jns
adc
sub
xor
sbb
pop
adcb
test
sbb
les
jbe
leave
js
pop
jb
jl
jle
pop
xchg
sbb
xor
aad
aam
nop
fwait
ror
lds
push
shlb
mov
mov
dec
fdivrp
mov
pushf
je
add
roll
fidivrl
in
pop
test
adc
imul
mov
insl
xchg
rolb
add
mov
and
es
or
push
aad
fmull
inc
rorb
int
push
iret
adc
repnz
fists
lea
dec
push
jmp
and
pop
mov
leave
push
data16
stc
adc
xor
fs
push
scas
inc
mov
nop
xor
push
mov
xchg
mov
enter
nop
push
pop
mov
push
mov
xchg
xor
outsb
mov
int3
iret
jno
ja
dec
inc
jo
jge
mov
sahf
dec
jl
add
loope
xchg
pop
das
push
sub
or
lret
add
imul
in
outsl
pop
cwtl
adc
jg
frstor
mov
fstl
push
push
outsb
dec
ds
push
hlt
movsl
inc
fs
cmp
imul
pop
nop
dec
mov
pop
pop
and
addr16
sub
lds
pop
nop
xchg
je
scas
lods
sti
mov
fldt
push
lods
lods
dec
sub
lods
adc
arpl
cmc
adc
mov
or
inc
lds
push
pop
pusha
inc
jge
lret
jns
push
push
fstps
dec
shrl
jmp
sbb
addr16
push
sbb
mov
cmpsl
stc
push
add
aad
roll
adc
icebp
mov
or
les
mov
scas
sbb
sub
sub
inc
adc
test
insl
mov
shll
and
cmp
mov
imul
rcrb
cmp
fldt
shll
daa
stos
add
sahf
movsb
add
inc
mov
lret
inc
sbb
adc
inc
push
and
mov
add
pop
xorb
xor
push
mov
cmp
xor
add
mov
adc
mov
insb
cmp
sbb
add
out
jge
or
pop
mov
movsb
wbinvd
negl
out
ds
ja
adc
es
repnz
cmp
sub
push
test
dec
ss
sub
cmpsl
jns
negl
xchg
shlb
bound
enter
imul
push
je
sbb
push
mov
jae
cmc
cmp
aam
or
jno
in
inc
adc
push
test
mov
push
and
loop
adc
pop
jnp
sub
and
push
lret
cmp
adc
pop
sub
dec
std
jns
inc
imul
xor
loopne
insl
jp
push
jge
call
cs
fadd
sbb
xchg
push
lods
jge
adc
daa
lock
and
pop
pop
sti
shr
mov
add
add
mov
xorl
and
sbb
cld
jo
inc
test
rcll
mov
pop
lret
or
in
or
or
xor
out
cmp
mov
dec
cltd
ljmp
clc
lahf
popf
shr
jns
fnstenv
mov
ljmp
mov
mov
jo
or
imul
test
push
pop
hlt
outsl
popa
stc
out
cmp
jno
daa
xor
sbb
pop
sbb
xor
bound
lahf
notl
jmp
cmp
dec
sub
push
add
or
imul
pop
in
in
sbb
and
xor
pop
fidivl
jp
xchg
je
or
in
and
push
adc
popf
movd
mov
hlt
rol
adc
addr16
cli
inc
jl
pop
jbe
add
push
sub
shll
movsb
sbb
ret
cmp
inc
inc
adc
sbb
ds
cli
neg
push
test
cld
fcomps
cld
scas
mov
push
lahf
add
fimuls
jo
add
pushf
subb
add
bound
jnp
mov
xchg
add
mov
mov
push
push
aas
and
lret
cli
jns
or
mov
test
insb
rcrb
cli
pop
je
inc
adc
daa
jbe
sbb
lds
sbb
mov
pop
sub
in
mov
daa
jl
adc
and
test
test
jle
sbb
imul
cmp
push
movsb
push
jl
vpmadcsswd
fcompl
ss
xchg
in
sub
add
daa
repnz
add
add
shlb
and
cmp
out
mov
mov
dec
jb
sub
cmpsl
adc
ret
emms
mov
aas
cmp
cmc
jle
jae
inc
rolb
les
sbb
xchg
lds
xchg
cmp
popa
es
mov
sub
mov
leave
mov
test
sahf
mov
cmpsl
push
mov
pop
hlt
js
call
in
scas
dec
in
in
sbb
pop
ror
orl
dec
add
ja
mov
sub
sbb
aam
adc
rorl
jb
mov
mov
adc
xor
out
iret
sub
or
pusha
and
decb
dec
jl
dec
hlt
movsb
xchg
sti
aas
movsb
mov
daa
inc
or
add
mov
pop
ss
mov
clc
mov
pop
mov
xor
xchg
mov
jg
repnz
xchg
fwait
jmp
sbb
xor
xor
out
shrl
inc
jecxz
fadds
bnd
push
cmp
cltd
aas
movsl
inc
mov
push
mov
sbb
mov
xorb
aad
and
or
insb
mov
xor
cmp
cmp
pop
cmc
outsl
test
xlat
or
push
iret
shl
jg
add
loopne
mov
inc
insb
dec
dec
fcoms
pop
call
pop
loopne
inc
pop
ret
or
fsub
adc
xchg
sbb
bsr
in
fildl
dec
dec
gs
sarl
movsb
add
dec
push
jmp
push
sti
out
int
pushf
ljmp
mov
add
fnstenv
cltd
ret
cmp
int
mov
aam
pop
xchg
out
cmp
cmp
xor
in
sbb
or
fstl
mov
and
jns
fs
cmpb
inc
add
mov
cmpsb
sbbl
addl
pop
push
xlat
sbb
mov
sbb
out
push
inc
add
sti
mov
pop
mov
mov
and
and
fmull
lcall
in
nop
js
and
push
mov
int3
xlat
pop
mov
or
dec
cwtl
or
stc
adc
xor
out
pop
and
sbb
sbb
or
pop
ds
add
out
movsl
adc
xchg
fldenv
cltd
dec
adc
mov
movsb
and
inc
pop
ret
in
rcrb
inc
jns
adc
add
in
cli
idivl
mov
adc
inc
int3
add
mov
mov
and
push
or
and
test
and
outsb
adcl
mov
xchg
mov
dec
fs
in
mov
mov
jge
or
mov
clc
orl
imul
inc
push
push
das
mov
jge
xor
js
dec
and
insl
stos
test
mov
ret
subb
cld
adc
sbb
les
sub
mov
or
fadd
mov
xchg
sbb
cmp
mov
cmpsl
adc
dec
add
ds
and
cli
or
cmovno
pusha
sbb
xchg
mov
mov
ja
mov
subl
add
sbb
sahf
les
add
insb
loope
cmp
jg
jb
and
jle
pop
dec
in
jge
mov
ret
mov
xor
mov
fidivl
rorb
pop
aaa
adc
mov
cs
idiv
adc
arpl
xor
sub
xchg
cltd
xchg
cmpsb
in
icebp
sbb
sub
jecxz
inc
mov
dec
out
push
push
cmpsb
fimuls
pop
movsl
inc
je
jp
imul
mov
sbbl
sbb
jb
cwtl
mov
loopne
sarb
adc
rolb
les
mov
push
in
loopne
add
jo
inc
xchg
xchg
inc
jo
imul
rclb
das
adc
xchg
fs
dec
jl
mov
testl
pop
add
std
lcall
inc
mov
xor
insb
aas
sbb
fbld
lahf
hlt
iret
mov
sub
loop
daa
sbb
ja
imul
jne
loopne
sahf
inc
loop
dec
xchg
mov
pushf
stc
inc
aas
pop
jge,pn
sub
inc
fdiv
pushf
or
adc
sbb
lcall
cwtl
xchg
or
test
imul
ret
popa
cltd
arpl
jno
mov
scas
fstps
cld
inc
fwait
and
mov
pop
cmpsl
inc
cmpl
test
insl
into
fstps
fdiv
pusha
push
inc
cli
or
push
outsl
addr16
xlat
enter
jno
fldenv
pop
fisubs
es
insl
aaa
sbb
enter
jnp
test
cmp
cmp
in
cmpsb
adc
sbb
je
jo
fstpl
inc
xchg
ret
cli
rcrb
jp
ljmp
dec
dec
dec
cs
fwait
cmp
cs
or
test
movsl
test
icebp
daa
pop
scas
xor
push
pop
je
mov
fistl
pop
inc
mov
scas
dec
mov
adc
xor
addr16
aam
or
addl
or
xchg
pop
sub
mov
ds
and
and
sahf
mov
cs
out
inc
pop
or
mov
xchg
xchg
loope
cld
lock
sbb
test
lret
push
push
mov
in
lea
ss
aam
inc
inc
or
jmp
sti
jnp
call
cs
adc
shrl
xchg
mov
adc
scas
adc
xchg
or
jmp
mov
cmpl
hlt
mov
jp
and
mov
inc
inc
iret
out
mov
cwtl
orl
lret
fisttpll
dec
sbb
and
adcl
xchg
insl
fsubrl
jae
fwait
sub
mov
push
incb
push
or
jb
sbb
imull
pop
je
rorl
js
dec
jne
push
mov
in
pop
mov
ud1
int
pop
jns
dec
insl
loop
lods
sbb
fs
jmp
or
mov
mov
cmpsl
jae
imul
fnstcw
push
inc
xchg
pop
mov
sub
push
inc
fcmovnb
bnd
push
cld
leave
pop
call
xlat
fstps
sub
mov
gs
rcrb
pop
fs
sub
icebp
rcrb
daa
dec
les
mov
scas
movsb
out
cltd
sbb
sbb
xchg
adc
adc
jb
movb
ja
push
mov
nop
add
sub
mov
cld
lods
testl
pushl
push
ret
xor
int3
xchg
cmp
fs
roll
js
cmpsl
cmp
lret
fidivs
cmp
cmpsl
ds
repz
imul
call
cmp
ret
pop
push
and
jae
shl
aad
mov
shrb
jp
mov
pop
push
inc
xor
push
add
push
icebp
dec
and
adc
pop
sbb
js
subb
pop
cld
rcll
mov
push
stc
int
scas
notb
std
outsl
push
adc
adc
add
inc
ds
repz
hlt
lahf
inc
adc
push
leave
push
push
jmp
add
outsl
pop
mov
addr16
xor
orb
push
idiv
loope
and
and
mov
pusha
fnstenv
push
dec
dec
in
jmp
outsb
js
mov
pop
mov
dec
bound
sub
mov
call
xchg
push
dec
pop
into
bound
addl
or
ret
incb
fsubrl
in
in
mov
xor
call
mov
gs
cmpsl
dec
pop
mov
xchg
fwait
cmp
fldl
mov
push
add
and
inc
inc
mov
sub
and
mov
and
sahf
inc
out
mov
mov
mov
jge
mov
xchg
mov
jle
movsb
xchg
jecxz
pop
mov
adc
stos
adcl
outsl
or
mov
jp
xchg
xor
sti
enter
mov
in
lret
and
jecxz
stc
mov
xor
add
cmp
inc
shr
out
dec
sbb
repnz
xorl
xchg
cmpsb
repnz
push
pusha
sbb
mov
adcl
outsb
pop
in
mov
cmp
add
iret
adc
mov
out
imul
xor
mov
xchg
into
mov
xchg
int
mov
stos
fs
mov
add
rol
incl
xchg
test
cwtl
push
dec
pop
lcall
fstl
jnp
stc
adcl
pop
enter
fcoml
adc
or
dec
dec
ret
cli
orb
pusha
add
push
and
ss
jne
pop
lcall
aam
xlat
lret
outsl
orl
jl
aaa
push
ljmp
movsl
adc
inc
pop
adc
rorl
out
hlt
mov
sarb
pop
pop
out
fistpll
pop
insl
xor
lcall
push
hlt
xchg
cmp
out
cmp
out
jbe
loopne
imul
lock
push
add
inc
cmc
cltd
push
mov
xchg
pop
mov
cli
gs
in
push
rorb
xchg
push
and
or
cmp
movsl
mov
mov
faddl
xchg
ret
mov
scas
aam
scas
mov
loopw
mov
out
mov
sarb
pop
and
pushf
inc
loope
shlb
mov
xor
sub
frstor
mov
pop
sbbb
dec
fucomp
jmp
cmp
cmp
ffree
mov
fwait
cmpsl
je
inc
cltd
sbb
sti
push
push
cltd
or
cld
sbb
ja
fsub
inc
pop
adc
mov
jle
xor
adc
scas
test
push
shll
jmp
cli
cltd
push
dec
enter
ja
mov
sbb
fstl
les
lahf
dec
mov
jno
and
xchg
sub
out
sub
aas
rclb
add
mov
enter
mov
dec
push
ds
cmpsb
test
test
addb
mov
adc
div
jecxz
and
cmpsl
adc
push
es
mov
pop
xchg
push
push
jne
rcrb
popf
lret
in
xchg
lret
xchg
scas
xchg
in
in
fwait
or
pushf
fdivrl
jnp
lds
icebp
sub
out
ss
or
or
aad
test
jne
dec
movsl
movl
stc
lret
in
jecxz
xor
stc
or
arpl
inc
lcall
mov
mov
xchg
add
dec
xor
insl
loopne
in
jp
xlat
mov
je
call
sbb
mov
and
test
fldcw
cli
dec
fsubrl
push
xchg
in
repz
nop
xchg
sub
pop
mov
inc
movsb
cmpps
mov
jbe
push
popl
ss
sub
mov
or
shll
ljmp
sti
fwait
dec
leave
jl
popf
loop
icebp
shr
mov
sahf
dec
lods
push
pop
pop
pop
jns
push
test
test
inc
jl
test
dec
inc
movsb
insl
pop
mov
rorl
pop
int3
leave
mov
and
sar
adc
dec
xchg
popf
jne
int
pop
sahf
sbb
xchg
mov
xchg
sarb
lods
xchg
dec
shrb
ja
add
fcomp
mov
mov
pusha
dec
or
jl
jl
mov
clc
jg
mov
lds
sbb
add
imul
leave
lea
enter
mov
mov
push
test
addr16
ds
jne
std
ja
and
adc
rep
stos
ja
mov
pusha
rcrb
sub
bound
dec
mov
gs
push
xor
xchg
jae
sarl
xchg
out
popf
sbb
out
mov
dec
mov
mov
add
and
or
cli
dec
movb
rolb
mov
jecxz
pushf
cmp
inc
mov
movsb
mov
sbb
mov
cli
ret
or
sbb
pop
imul
into
jnp
sub
inc
push
jmp
hlt
imul
dec
push
inc
imul
pop
scas
mov
jg
daa
les
push
cmp
push
shll
cltd
xchg
dec
sbb
pop
or
push
push
dec
xchg
pop
mov
rorb
push
pop
inc
sbb
sahf
sub
xlat
and
add
mov
dec
cmp
xchg
mov
fsubp
pop
popf
ficompl
xor
ret
insl
pop
and
lret
inc
pop
sub
or
lahf
insb
out
mov
xchg
jl
arpl
int3
cmp
ror
push
daa
pusha
cmp
insl
lock
aas
lret
cwtl
ss
pop
add
sbbl
or
adc
xchg
mov
xchg
push
jecxz
dec
mov
xchg
in
sbb
adc
test
pop
xchg
cmpsl
arpl
sahf
test
push
adc
icebp
insb
rclb
inc
roll
xor
sbb
daa
inc
dec
push
repnz
mov
cwtl
pop
nop
mov
sub
stos
hlt
and
fucomip
out
xchg
sahf
mov
mov
je
imul
ret
stos
mov
incb
icebp
mov
dec
hlt
cmpl
std
out
xchg
iret
leave
pop
xchg
popf
sub
cmp
ss
iret
pop
icebp
ja
xchg
jmp
and
pop
mov
cmpb
shll
call
js
cmp
and
popf
test
mov
mov
cmp
jo
rorl
repz
or
bound
jmp
push
inc
jmp
sub
pop
aas
and
pop
mov
mov
xchg
shrb
pushf
imul
jae
jno
xlat
jb
pop
clc
out
push
add
test
inc
inc
insb
push
ret
push
pop
pop
lea
adcl
and
ja
ret
xor
outsl
aas
rcr
or
test
mov
clc
ljmp
add
push
psubsw
sub
sub
lods
call
jbe
mov
pushf
dec
leave
in
in
es
adc
rcrl
jno
push
add
push
call
push
dec
das
xchg
mov
repnz
cmpsb
sbb
jmp
ljmp
popf
rolb
inc
hlt
stos
inc
roll
lods
sub
mov
jg
push
cmc
lods
into
jo
lea
sub
push
and
pop
arpl
jp
sub
xor
xchg
xor
pop
enter
cmc
sub
lahf
cmp
push
dec
leave
shll
notl
bound
leave
out
cmp
mov
ljmp
push
stos
or
jl
add
mov
sub
arpl
push
jnp
cmp
je
lret
push
movb
stos
mov
int3
adc
jae
push
sbb
popa
add
shlb
icebp
aaa
std
ljmp
mov
loop
sbb
int3
add
add
sub
and
data16
mov
imul
push
sbb
sbb
stos
mov
aad
mov
orl
adc
out
mov
cmpsl
xor
cld
subb
xor
lock
dec
nop
shlb
aad
sub
xchg
enter
dec
rcll
cmpsl
sub
cmpsl
adc
stos
lods
data16
cmpb
pop
push
or
push
xor
aaa
and
stos
aad
add
pop
loop
stc
in
jb
mov
mov
aas
outsb
rcrb
movsl
pop
sahf
add
mov
test
pushf
add
in
cmp
es
sti
repz
test
ds
popa
lret
push
dec
inc
xor
aas
sbb
sub
mov
enter
mov
xor
js
xor
inc
loope
sbb
popf
mov
push
sarl
mov
or
in
inc
push
bnd
jl
or
add
mov
mov
push
jnp
in
jbe
in
mov
push
mov
adc
jecxz
clc
push
rol
addb
pop
mov
or
cmp
jbe
pop
inc
pop
outsl
lods
mov
daa
inc
jp
test
mov
mov
mov
mov
add
fsubs
mov
push
lods
jmp
loopne
rol
test
dec
into
and
aam
jne
lock
mov
or
nop
jb
cmpl
nop
mov
pop
shrl
lret
shlb
shld
mov
push
mov
adc
or
dec
sub
daa
bound
sub
lret
inc
lahf
lret
leave
inc
cmpl
mov
pop
std
push
aas
mov
xor
mull
mov
inc
inc
push
loope
mov
pop
pop
les
mov
sub
sbbb
in
cs
fistpl
into
xor
mov
jbe
cli
cmp
daa
in
push
clc
mov
sub
mov
les
out
sub
popa
pusha
inc
and
cwtl
sarl
and
pop
sbb
pop
mov
push
sub
ret
inc
in
add
adc
cmp
dec
into
lcall
jae
or
xchg
lret
xchg
adc
lods
rolb
into
imul
dec
xor
je
jp
lahf
insl
pop
lods
shlb
push
fists
mov
imul
pop
lcall
out
xchg
jnp
jae
jb
movsl
sub
jmp
in
je
cs
addr16
push
orb
adc
shl
jne
sbb
or
call
data16
mov
int
cmp
jmp
aam
xchg
mov
pusha
jmp
popa
ss
mov
and
cmp
jge
inc
sub
dec
jnp
fnstsw
xchg
dec
fimuls
mov
cs
lret
push
mov
mov
dec
inc
add
mov
mov
push
in
sub
aam
adc
jnp
rclb
lea
pushfw
test
pop
pop
sbb
dec
aam
lea
mov
mov
and
repnz
ljmp
fisubrl
mov
mov
leave
imul
and
cmc
sbb
cwtl
adc
out
xor
push
pop
sub
add
into
mov
rorl
call
ret
pop
inc
scas
sub
and
jbe
pop
cmc
xor
dec
lret
adc
adc
movsb
xor
lret
enter
jnp
lods
jbe
cs
or
ljmp
push
push
cmp
in
jge
xor
movsl
test
or
psubw
cmpsb
xchg
xchg
mov
cmp
ljmp
cs
and
fst
ret
xor
sbb
ljmp
in
jne
das
pop
dec
int
scas
xchg
loope
add
je
push
sub
adc
mov
jae
cmp
in
les
icebp
repz
adc
dec
je
nop
jbe
js
inc
jmp
cmpsb
insl
repz
std
push
mov
mov
cmp
dec
dec
cmp
lds
rorl
or
pop
repnz
xchg
pop
add
sbb
nop
dec
inc
mov
lahf
or
mov
mov
mov
inc
aad
pop
fsubrl
sub
mov
mov
sub
test
sub
in
xor
mov
xchg
add
sbb
dec
or
lret
pop
cmp
push
int
adc
dec
lock
push
dec
jno
out
cmp
mov
and
jb
dec
cmc
in
push
fadd
imul
popa
add
or
adc
xor
dec
and
repz
cwtl
ss
clc
js
cmp
pop
mov
nop
cmp
cmp
pushf
fisubs
leave
aaa
gs
push
aas
lcall
fmull
in
loop
ficoml
mov
jbe
lock
mov
and
dec
ds
jge
cmc
jb
cwtl
pop
pop
mov
mov
xor
or
subl
mov
cmp
cmp
outsb
scas
jnp
enter
mov
outsb
or
mov
shl
gs
fisubs
xchg
mov
and
add
pop
clc
les
ljmp
out
xor
or
cmp
sub
out
xchg
cmp
js
fisttpl
push
cs
cmp
cmp
cmp
add
mov
leave
sbb
mov
inc
xor
cmp
ficomps
and
lds
cmpl
in
shrb
mov
pop
fwait
push
sbb
jge
xor
nop
movsb
mov
add
aam
testb
mov
xor
adc
nop
add
push
xchg
xchg
fildll
es
push
jg
popa
sbbl
aas
mov
mov
dec
push
push
mov
das
in
push
xchg
lock
or
cwtl
xor
lcall
sbb
mov
andl
xchg
insb
fdivr
ret
lret
inc
jge
xor
loop
lahf
inc
nop
fcompl
jecxz
mov
add
cmp
nop
jo
sub
lock
dec
neg
scas
test
jmp
inc
sub
xorb
jbe
dec
push
dec
sbb
dec
enter
and
xchg
dec
push
dec
sub
out
mov
ds
outsl
stos
cmp
inc
loope
int3
push
scas
jmp
popa
push
mov
aaa
test
outsl
les
jmp
icebp
mov
jg
pop
mov
xchg
es
icebp
lahf
leave
pop
cmpsl
jbe
mov
push
push
lret
pop
push
dec
inc
das
mov
scas
dec
add
sub
mov
or
xor
lcall
cwtl
mov
sub
adc
push
shll
mov
and
test
ret
add
jae
add
cmpsb
scas
pop
pop
xor
and
popf
sahf
cltd
push
xchg
outsl
or
push
sti
insl
inc
xchg
adc
lock
push
push
out
call
notb
mov
mov
fldt
shlb
adc
push
push
pop
mov
jmp
and
pop
adcl
insb
scas
add
xchg
mov
lods
pop
imul
xchg
xchg
roll
int
sbb
clc
out
scas
mov
push
xor
dec
adc
nop
into
aas
cmpsl
or
pop
pop
adc
hlt
addr16
adc
lods
out
pop
cmp
adc
stc
push
inc
xor
jno
pop
ret
xchg
push
mov
xchg
jnp
aad
jb
pop
xor
xchg
jo
xchg
add
lods
sbb
mov
outsb
sub
loop
adcl
mov
in
xchg
in
mov
push
pop
or
xchg
sub
sbb
jp
pop
add
add
add
sub
pushl
add
mov
mov
call
jp
adc
cld
testl
nop
adc
shrl
in
out
clc
out
cmp
or
sbb
ja
and
test
out
jge
mov
cmc
inc
mov
andb
mov
xlat
inc
shll
jl
inc
cwtl
call
std
inc
sub
xchg
and
stos
shl
ret
or
ljmp
aam
xchg
xchg
fisttpll
and
ret
sbb
sub
test
mov
sbb
cmp
mov
mov
into
jge
js
cltd
daa
popf
popf
push
aaa
mov
inc
sbb
push
jnp
das
shl
leave
les
jns
in
fs
fwait
sbb
cltd
dec
ret
shll
gs
movsl
adc
out
sub
sbb
jmp
lea
sahf
or
pop
sarb
or
xchg
clc
cwtl
xor
xchg
lahf
stos
sbb
mov
cmp
subb
push
mov
xor
mov
mov
test
outsb
cwtl
ss
mov
inc
pushf
roll
inc
sti
jp
mov
loop
loopne
ficomps
fldt
iret
xor
dec
rorl
fdivrl
mov
repz
push
pop
fildll
loopne
movsl
lret
dec
push
xor
dec
test
loope
inc
outsb
fstpl
aad
aad
mov
pop
lea
dec
sbb
ljmp
lret
stos
das
cmpsb
sbb
in
fdivrl
push
andb
push
rolb
pop
push
and
inc
icebp
mov
xlat
xor
in
setns
dec
add
fsub
xlat
movl
into
scas
fdivrl
shr
cld
jmp
xchg
push
divl
leave
sub
cmpl
test
test
punpckhbw
leave
fiadds
dec
xlat
pushf
nop
and
orl
ret
sbb
repz
sub
add
outsl
cmp
stos
flds
dec
insb
sbb
and
fistpll
sbb
sbb
jp
cmp
sbb
xchg
mov
fwait
mov
out
jbe
cwtl
movsb
fs
incb
mov
in
xlat
aam
jbe
jo
mov
repz
xchg
or
out
dec
jo
addb
mov
lds
xchg
loop
xchg
adc
xorb
sub
pop
rolb
jbe
dec
inc
jle
es
icebp
fucomp
mov
nop
and
repz
in
in
das
imul
addr16
out
das
fwait
cltd
inc
xchg
jl
cs
and
mov
mov
loope
pop
fnstcw
cmpsb
push
popa
sbb
in
sbb
push
mov
and
sbb
outsb
and
jo
xchg
cltd
or
fwait
inc
sbb
out
cmpsl
mov
fnstcw
test
pushf
push
ret
mov
jns
push
lret
lds
out
jnp
adc
push
mov
aas
mov
lods
inc
lahf
mov
mov
iret
xchg
inc
mov
xchg
imul
sub
pop
fwait
pushf
cmp
cmp
sbb
sarb
aaa
pop
ds
push
sbb
in
rcl
mov
lret
out
jo
sbb
into
push
dec
mov
fisubrl
test
lock
pusha
stc
lock
pushl
loope
fstpl
jno
xor
xchg
cmpsb
jb
adc
mov
mov
ficoms
cld
sahf
test
mov
aad
mov
pop
or
sub
psubq
xchg
sbb
in
sbbb
dec
daa
loope
leave
test
sti
lock
dec
xchg
push
imul
into
or
sbb
clc
je
dec
les
mov
mov
and
ret
mov
and
dec
ret
xchg
inc
lret
mov
out
add
xchg
jmp
xchg
xchg
adc
ficomps
xchg
sbb
sti
outsl
lret
cmp
jle
hlt
or
stos
jge
mov
sub
hlt
inc
xor
hlt
jne
adc
and
fs
lret
fwait
mov
mov
loop
dec
das
flds
movsl
lds
or
insb
jmp
or
dec
lock
mov
loope
into
push
push
jo
ret
sbb
cmpsl
fwait
int3
pop
xchg
in
ficomps
test
mov
test
cmp
add
lcall
mov
bound
jnp
adc
push
push
cltd
bound
fs
adc
pop
das
inc
cmp
mov
ds
xor
loopne
dec
in
stc
push
adc
sbb
pop
add
mov
adc
in
jae
lret
jno,pn
mov
mov
mov
sbb
rcl
scas
cmc
movsb
lahf
dec
loop
jae
pop
jle
mov
mov
dec
icebp
xchg
icebp
and
ret
mov
jno
cmpsb
push
insb
popf
dec
push
mov
cmpl
push
mov
divb
sahf
je
xor
sub
div
cmp
cmp
push
add
cmp
test
loope
mov
mov
es
lods
lcall
push
stos
jns
lcall
daa
ds
push
and
xlat
mov
fimull
scas
sub
ja
cmc
call
or
sub
mov
cmpsl
cmp
ljmp
sbb
cwtl
mov
lcall
test
mov
jns
mov
ficomps
cmp
mov
in
mov
add
cltd
jp
lea
xlat
in
pop
sbb
xor
sbb
xchg
push
addr16
xor
mov
lods
cmp
xor
repz
push
rcrl
orl
sub
dec
pop
push
sub
xor
cmp
dec
sub
add
mov
push
lock
std
xchg
fsubl
lds
sub
int
mov
in
stos
xchg
scas
push
cld
aaa
xor
in
jbe
dec
push
xchg
hlt
sahf
movsl
stc
shlb
idiv
mov
jbe
mov
cmp
add
add
push
mov
jb
lret
lea
xor
call
fsubrs
gs
adc
lret
incb
add
xchg
inc
scas
sbb
xchg
int3
and
adc
sbb
mov
lods
std
push
mov
mov
mov
and
jb
lret
xchg
fistpll
pop
dec
xchg
mov
cmp
hlt
inc
lret
sbb
scas
scas
ljmp
icebp
pushf
push
mov
loopne
in
mov
jg
mov
clc
push
divl
inc
mov
enter
pop
cmp
sti
adc
or
jg
jno
adc
test
pop
mov
cmpsb
sub
fsts
adc
adc
lret
mov
mov
or
or
repz
aas
jae
pop
mov
xchg
mov
xchg
pusha
jecxz
xchg
sbb
pop
pop
jnp
gs
insb
out
inc
leave
mov
int3
ret
in
test
shl
cs
sbb
mov
fistl
sti
push
mov
mov
int3
std
pmaxsw
std
cmp
dec
hlt
dec
mov
adc
stos
and
ss
or
loope
scas
sub
pop
inc
ficompl
pop
jnp
sub
daa
test
cmpsl
sbb
sbb
aam
jb
mov
push
jae
ss
push
iret
push
mov
fs
sbb
xor
push
add
das
xor
fdivl
adc
mov
adc
add
aad
ds
daa
push
mov
mov
lahf
movsb
mov
insl
ret
into
shlb
pop
and
ljmp
push
mov
mov
lea
mov
inc
xchg
cmp
mov
aam
adc
ret
add
cltd
cwtl
dec
inc
mov
lock
pop
mov
inc
mov
stc
xchg
push
jnp
mov
hlt
lcall
inc
cwtl
add
aad
fimull
jp
xchg
rep
lcall
test
mov
test
cs
jbe
dec
into
nop
jl
mov
es
stos
hlt
test
mov
pop
push
arpl
jo
push
jg
out
xor
cmp
icebp
jnp
add
fidivs
outsb
mov
push
out
sarl
flds
or
jne
iret
xchg
insl
and
imul
bnd
lret
popf
icebp
sub
lods
push
shrl
sbb
xor
xlat
jns
mov
shll
pop
into
jle
jecxz
jg
cs
das
xchg
xchg
out
test
cmc
out
roll
dec
fistpl
pop
into
push
rcrl
cmp
xlat
mov
sub
xor
and
xchg
subb
lret
jb
cmp
out
add
sbb
pop
in
mov
lret
jp
push
dec
mov
pusha
shll
shl
in
mov
fisubrl
cmp
fildl
int3
push
scas
out
std
mov
push
notb
pop
sbb
dec
fdivrs
pop
jge
ret
scas
add
je
in
pop
jno
test
cld
jmp
cmp
push
xor
insl
adc
mov
jp
scas
mov
jl
xchg
shl
mov
outsb
ret
lret
or
imul
mov
xor
mov
cltd
sbb
jae
inc
sahf
mov
adcb
fs
hlt
cs
leave
and
daa
sbb
sbb
inc
test
test
stc
and
inc
xchg
pop
mov
and
test
mov
cmp
pop
adc
xchg
push
mov
pop
mov
adc
rcll
sub
cmpl
cmpsl
iret
bound
int
or
ljmp
xchg
inc
repz
das
xchg
or
adc
sub
pop
pop
popa
loopne
mov
lea
xchg
pop
das
sbb
lret
push
jb
pushf
mov
inc
pop
and
jo
add
fldcw
mov
mov
mov
je
xor
les
xchg
insb
aam
lret
es
insb
in
and
enter
mov
inc
push
sub
and
lahf
loope
sbbl
nop
add
xchg
bound
hlt
pop
and
pop
inc
xor
ljmp
mov
dec
or
mov
cmpl
xchg
mov
lcall
aad
adc
in
push
and
pop
mov
xor
push
aam
out
jb
jle
jge
mov
iret
in
int3
sbb
jle
test
insl
adc
aad
popa
pusha
addr16
leave
sub
ret
insb
pop
dec
movsb
pop
fldt
rcll
aam
sub
pusha
rorb
push
push
pop
shrl
popf
hlt
mov
mov
mov
mov
pop
into
fcoml
mov
scas
dec
mov
call
sub
inc
pop
cmp
pop
dec
lods
jno
dec
add
xchg
and
repnz
xchg
and
sti
fwait
cltd
outsb
jnp
sbb
push
mov
sub
sub
lahf
dec
dec
mov
test
les
scas
lret
xchg
mov
mov
popf
nop
fs
in
pop
mov
leave
stos
shrl
xchg
pop
mov
adc
jb
mov
xor
and
inc
ret
lret
mov
imul
arpl
fiaddl
fdivrl
fwait
inc
call
sbb
push
mov
sbb
adc
push
ret
cltd
mov
into
sbb
fwait
ss
xor
aaa
and
mov
es
inc
in
icebp
je
mov
andb
addl
enter
inc
mov
inc
add
mov
cmp
pop
movsl
jbe
repz
scas
popa
lea
in
or
insb
dec
popa
jno
icebp
sub
dec
mov
dec
iret
les
daa
imul
pcmpeqb
insb
mov
int3
jp
cli
ret
adc
mov
jno
jle
stos
add
jle
mov
leave
jmp
into
adc
call
mov
lods
lds
adc
adc
mov
jae
pushf
jge
shlb
mov
ret
mov
or
loop
push
call
pop
subl
mov
xor
sub
cld
pop
ja
pop
sub
and
sbb
xchg
xchg
repnz
mov
jle
pop
sbb
jge
cwtl
rorb
mov
std
es
mov
inc
sar
mov
test
sbb
ror
xor
daa
negl
cmp
mov
int3
push
rclb
jb
mov
sti
hlt
mov
paddw
std
rcr
loope
add
and
jecxz
and
push
popa
lock
or
xor
jae
mov
call
clc
push
inc
ds
or
filds
adc
lea
in
out
out
cmp
das
lods
fyl2xp1
out
inc
movsb
cwtl
mov
mov
enter
or
dec
sub
inc
insb
inc
cmc
data16
xor
jl
ficoms
ret
insb
xor
adc
adc
sbb
inc
push
mov
in
xlat
dec
pop
int
inc
jne
lahf
pop
arpl
xor
in
pushw
mov
roll
push
or
mov
mov
mov
aad
cmpsb
scas
push
mov
test
loope
sahf
js
adc
ss
test
xchg
fcmovnb
movsb
movsl
xchg
inc
push
sub
cmp
outsb
stos
shl
cmp
or
ds
or
out
popa
fs
mov
push
repnz
cmp
pusha
cwtl
mov
cmc
push
sub
sbb
inc
adc
push
int3
dec
addr16
add
ret
xchg
stc
dec
push
mov
pop
sbbl
insl
decl
dec
popf
push
xorb
invd
push
nop
fdivrs
add
push
jb
fiadds
pop
push
subb
les
test
fs
fsubrp
repnz
jl
gs
add
cmc
add
fidivrl
xchg
in
mov
push
pop
mov
aam
mov
push
mov
push
lret
pop
sbb
stc
xchg
into
mov
dec
sub
sti
jp
adc
rep
jno
bound
dec
fwait
jmp
sub
rcr
in
sarb
add
ja
add
dec
push
inc
jnp
adc
cli
out
push
xchg
jno
push
adc
rolb
adc
leave
jge
pop
push
in
adc
pop
jge
push
push
add
dec
pusha
sub
add
loopne
pop
repnz
mov
dec
sarl
mov
lret
cmpsl
cmp
dec
and
adc
pusha
ror
das
lods
cmp
mov
mov
push
fwait
xchg
cltd
icebp
push
dec
dec
sub
add
cmp
scas
insb
or
sbb
cli
fs
pusha
mov
xor
adc
push
orb
jl
or
test
mov
popf
lret
movsb
push
outsl
cwtl
push
in
out
and
data16
jle
cmc
fidivrs
dec
xor
lods
roll
mov
jns
comiss
cmp
in
mov
dec
xchg
int3
push
sub
dec
roll
bound
les
lcall
pop
lods
ds
pusha
jne
dec
mov
xchg
paddusw
insl
mov
lods
test
sbb
test
push
ss
lea
xchg
imul
test
roll
dec
add
sub
in
movsb
cmpsl
sub
int
sub
push
mov
mov
popa
stos
jle
std
fwait
xchg
in
pop
fwait
mov
and
gs
into
aad
mov
dec
pop
jae
repz
aas
xchg
push
out
mov
fisubrs
mov
xor
call
sbb
cltd
jmp
mov
push
out
xor
sahf
mov
cmp
sbb
push
fmull
flds
pop
xchg
mov
or
xor
dec
idiv
ret
xchg
push
es
je
adc
insb
mov
mov
repz
mov
icebp
frstor
mov
std
cld
movsb
in
push
iret
or
pop
les
data16
psrad
push
outsb
add
xchg
mov
jo
lahf
test
push
jo
icebp
sub
divb
push
aam
fildll
dec
ret
pop
add
les
sbb
sub
push
jo
lret
mov
sbb
fmull
aad
xchg
outsb
inc
or
loopne
lea
adc
stos
push
sbb
out
mov
mov
fdivrs
xchg
jo
xor
cmp
inc
or
lds
jnp
jnp
mov
lret
ljmp
std
mov
adc
mov
sbb
cli
sti
xchg
and
sub
sbb
fs
xchg
outsl
and
cmp
out
xor
insb
in
and
push
stos
pushf
and
sbb
jge
pop
sub
jmp
jo
inc
dec
jl
xchg
jmp
or
xor
gs
sub
lea
jg
cmp
aas
jle
ret
lds
lret
enter
cmpsb
jnp
pop
mov
push
leave
mulb
pusha
movsb
add
inc
and
inc
xchg
mov
xchg
fildl
mov
add
icebp
loopne
stc
mov
and
pop
out
fdivs
into
inc
cld
je
mov
sub
in
mov
pushf
pop
pushf
ret
dec
xchg
push
jnp
adc
sbb
xchg
jne
cld
or
cmpsl
cmc
sahf
out
add
cmpsb
or
adc
sbb
adc
sbb
inc
stos
repz
add
xlat
fisttpll
movsl
fcoms
jp
ds
clc
mov
add
ljmp
cld
aam
pop
je
jbe
or
lds
js
call
loopne
shrl
adc
dec
in
movsb
add
and
xchg
imul
inc
cltd
sti
xor
jnp
lret
inc
pushf
fsubrl
out
add
outsl
loopne
out
sarl
stos
sti
sbb
test
xchg
incb
pop
sahf
je
cwtl
lahf
test
adc
xor
incl
sub
adc
mov
push
xor
lds
mov
lret
xor
jae
daa
sahf
xchg
shrb
cwtl
mov
shl
sbb
mov
push
scas
test
in
inc
mov
xchg
mov
sbb
mov
sti
pusha
ret
stos
push
mov
out
jno
add
sub
or
pop
jge
mov
fwait
mov
ljmp
scas
faddl
ja
psubb
je
mov
in
push
push
lret
addr16
call
minps
loope
jno
push
out
dec
mov
cmp
mov
jp
fistpl
mov
stos
aad
popf
inc
or
out
mov
mov
subl
lret
add
mov
lock
mov
test
pop
pop
push
mov
pop
pop
icebp
mov
dec
mov
std
push
movsb
rolb
mov
popa
jbe
notb
jns
fs
jne
xchg
ljmp
dec
mov
mov
jns
inc
dec
pop
dec
nop
je
push
or
lahf
push
and
add
pop
out
jne
adc
jnp
mov
test
dec
loop
push
clc
arpl
jb
add
mov
mov
jmp
inc
inc
movsl
outsl
fnstenv
into
shrb
xor
outsb
insb
mov
ror
mov
pusha
mov
cld
xchg
cwtl
pop
test
xor
loopne
inc
mov
insl
jb
aad
sbb
insb
xchg
cld
push
pushf
pop
and
addl
sub
dec
inc
int3
cmc
push
push
out
push
pop
ljmp
cmc
push
push
mov
loopne
add
pop
jae
xchg
xor
dec
in
add
out
fs
cs
dec
cmp
hlt
test
inc
or
add
mov
cmpsb
aad
push
or
jmp
sqrtps
xchg
mov
jmp
pop
loope
pop
daa
fcomp
lahf
adc
add
dec
push
add
dec
add
int3
push
data16
out
jmp
pop
inc
adc
mov
pop
lahf
aas
lods
jp
mov
pop
outsl
out
cmp
fptan
or
xor
cwtl
ljmp
and
mov
jmp
or
add
jmp
pop
imul
into
rcrb
xchg
pop
pop
mov
mov
test
push
icebp
and
mov
mov
jecxz
xchg
out
cltd
mov
lret
mov
push
push
decb
sarb
fstps
sbbb
ret
and
sbb
ds
jle
mov
test
sbb
adc
mov
incl
cwtl
daa
xchg
mov
xlat
out
in
xor
cmpsb
lahf
or
pop
into
loop
xor
mov
enter
xorps
cmp
and
mov
cwtl
fsubs
dec
jb
divb
enter
pusha
stos
pop
push
push
push
sub
mov
sbb
leave
cmp
or
inc
movsb
std
sbb
adc
int3
inc
sahf
cmp
inc
mov
das
xor
add
js
mov
dec
jle
mov
shll
lea
add
add
imul
mov
mov
cli
aad
sbb
jae
scas
rcr
mov
fwait
jp
popf
fs
out
outsl
leave
mov
pop
xchg
nop
sbb
sbb
lahf
ljmp
mov
je
adc
inc
jmp
add
push
out
idiv
xchg
pusha
mov
out
mov
or
mov
xor
lds
or
pusha
xlat
inc
xor
fmull
cmc
pop
dec
jns
push
stos
push
sbb
xor
and
jmp
push
sub
bound
adc
dec
mov
stos
cmp
xor
and
push
inc
loop
ds
mov
dec
dec
sub
and
les
idivl
mov
shrl
pushf
jb,pn
push
mov
xchg
aam
inc
mov
scas
pusha
pop
aad
push
daa
rcrl
repz
sbb
mov
leave
es
xor
ljmp
repnz
repz
rol
hlt
add
clc
or
sub
mov
jl
repnz
sub
mov
adc
pop
cmpb
mov
inc
mov
scas
psraw
cmc
pop
incb
std
ret
xchg
outsl
fisubrs
in
aad
adc
add
in
and
fldcw
jle
cwtl
lock
subb
mov
xchg
dec
xchg
inc
andb
inc
xor
lea
inc
cwtl
ret
pop
cmpsl
xchg
adc
aaa
or
sbb
in
jne
or
les
mov
add
mov
rolb
cmp
out
and
pop
lds
int
pop
jmp
flds
xor
rclb
enter
out
mov
int3
and
xchg
aaa
aas
xor
sbb
insl
decl
jg
mov
loop
ss
mov
push
std
stos
add
inc
fidivl
lods
pop
ljmp
loope
pop
aaa
or
fwait
pusha
aam
stc
pop
adc
sbb
and
mov
cwtl
ja
xor
push
pushf
push
lcall
shlb
call
aas
or
mov
jnp
scas
hlt
jl
mov
adc
xchg
inc
and
jns
adc
outsb
adc
inc
clc
adc
inc
fisubrl
mov
dec
in
loop
and
push
mov
mov
fs
dec
jmp
inc
iret
jge
shll
filds
pop
xlat
dec
jne
sub
sub
mov
lret
cltd
stos
inc
movntps
fimuls
adc
aad
jbe
sahf
mov
loope
fst
push
daa
dec
jp
push
ret
cld
sub
lret
or
push
xchg
les
jecxz
mov
dec
adc
inc
rolb
ja
fdivs
push
cmp
repnz
test
in
aad
jp
jmp
in
jp
ja
cmp
test
dec
std
leave
mov
xor
insl
ret
jmp
mov
aaa
push
mov
sub
pusha
mov
jge
pop
mov
out
loop
cmp
std
cld
lahf
inc
decb
cmp
lret
scas
scas
dec
lret
std
xor
dec
sub
jne
adc
imul
push
push
rcll
or
movsb
jmp
dec
daa
pop
or
pop
dec
out
adc
inc
push
or
pop
mov
leave
stc
dec
iret
dec
mov
and
icebp
lods
mov
and
dec
dec
xor
push
outsl
mov
roll
sub
and
movsb
add
loop
in
mov
adc
add
xchg
adc
dec
xor
lods
lahf
jle
ja
pop
rclb
push
xor
cmp
pusha
aam
lcall
or
ds
xor
xchg
jnp
add
or
mov
les
cltd
sub
adc
push
fmull
pop
scas
inc
push
dec
jp
cmp
mov
fcom
xor
movsl
pop
shlb
clc
lcall
movl
sbb
xor
push
ficomps
fs
xor
das
icebp
push
cs
cmp
loope
sbb
movsb
push
or
outsl
sarl
or
idivl
lods
ds
loop
out
inc
stos
sbb
mov
in
cmp
stos
ja
into
adc
xchg
addr16
daa
rcr
insb
inc
inc
inc
imul
add
xor
stos
ret
fidivrs
add
scas
jmp
fisttpll
insb
xchg
push
adcl
aam
outsl
cmp
in
into
mov
mov
out
imul
xlat
and
adc
and
lock
mov
movsl
fnstsw
sbb
mov
dec
inc
cmp
jo
fldl
sti
ljmp
xor
daa
jp
movsl
jmp
test
push
or
fs
pop
mov
out
ds
shlb
xor
insb
adc
inc
sub
dec
mov
push
arpl
sub
xor
les
orl
cltd
movsb
std
lahf
mov
pop
xchg
lcall
jmp
xchg
dec
mov
sbb
popa
and
xchg
data16
cli
in
jb
int3
cmp
sbb
cwtl
add
inc
push
in
sahf
dec
cmp
lock
std
ds
cmp
fcomip
hlt
mov
scas
mov
sub
popf
xor
and
sbb
dec
mov
test
jae
shrb
arpl
pop
enter
aaa
pop
cmp
test
jmp
jg
inc
dec
test
pop
aaa
mov
movsb
mov
das
push
or
mov
push
sbb
iret
dec
in
ja
imul
sbb
or
fnsave
pop
shll
hlt
sbb
push
aaa
mov
sub
fdivrs
ds
mov
imul
rolb
pop
cmp
inc
dec
or
leave
fs
jle
jns
dec
jns
loop
test
xor
push
int
outsl
mov
xor
fsubrs
lahf
and
pop
jg
imul
nop
sub
loopne
cmp
cmpsl
and
nop
xor
loop
pop
das
mov
aam
inc
lock
cmp
ja
enter
xchg
pushf
add
outsb
sbb
pop
adc
nop
xor
ret
ficoms
andl
adc
inc
out
cld
sar
mov
repnz
ljmp
testb
lods
rolb
mov
movsb
adc
iret
sub
cwtl
jae
sbb
repnz
pop
ret
stos
jl
cs
dec
mov
adc
sti
cmc
decb
xchg
stos
out
ljmp
push
test
in
in
dec
mov
jo
sub
and
shrl
push
popa
gs
pushf
in
imul
lea
pop
add
shlb
in
bound
ds
in
call
sbbl
mov
incb
dec
fidivrl
xchg
adc
lcall
push
pusha
loop
dec
cmp
or
rcrl
out
xchg
add
negl
push
and
xchg
daa
lods
cmc
es
arpl
cmpsl
mov
adc
outsb
xchg
fcmovb
jae
gs
sub
aam
add
mov
jecxz
push
cmp
cs
divl
scas
inc
insb
enter
jo
add
cs
adc
push
jb,pt
mov
out
or
fwait
cmp
nop
xor
dec
sbb
cli
or
iret
inc
ss
cmpsl
xorb
jmp
cli
in
lock
mov
mov
scas
scas
or
out
inc
mov
mov
jns
and
ljmp
andb
mov
imul
or
adc
stc
cmp
in
pop
fwait
push
out
dec
loop
test
cmovb
icebp
leave
mov
jge
push
adcb
add
push
cmp
inc
jo
int
out
in
out
fcomps
daa
mov
loopne
jae
sbb
xchg
dec
ja
insb
and
jnp,pt
stc
dec
push
imul
movsb
add
je
pop
pop
xor
icebp
mov
pop
mov
mov
or
bound
xchg
lock
lods
pop
std
test
outsl
cmp
dec
pop
add
sub
je
pop
rcr
rclb
pop
movsb
out
sbb
mov
xchg
jp
sbb
inc
loop
adc
xchg
cwtl
push
insl
rcll
dec
mov
aas
int3
cmp
cs
jns
aas
xchg
std
push
shl
push
and
cmp
xor
std
loop
gs
add
enter
filds
lods
lods
int
inc
addr16
pop
lea
arpl
inc
dec
sbb
pusha
lds
insb
or
xor
lds
loope
arpl
mov
or
adc
loopne
lods
sbb
mov
jp
das
data16
inc
addl
jmp
pop
mov
pop
movsl
fistl
cmp
movsl
aaa
mov
push
movsl
pop
sbb
stos
add
dec
sbb
mov
test
pop
cmp
test
pop
je
add
jmp
sbb
and
test
pusha
dec
mov
or
add
xor
loope
mov
outsl
in
dec
push
sub
jle
ret
sbb
int3
clc
mov
and
mov
xchg
mov
ret
lcall
es
add
mov
jg
loopne
popf
cmc
inc
sub
pushl
and
lock
outsb
mov
mov
js
mov
arpl
ja
insb
pushf
icebp
adc
adc
adcl
daa
xor
sbb
cmp
or
fisttpll
jne
dec
push
dec
scas
mov
cmp
pop
mov
xor
cmpsb
loope
jg
mov
bound
je
fnstsw
arpl
inc
addr16
lods
insl
cmp
cmpsb
jecxz
inc
sub
inc
rep
imul
fisubrs
stos
pop
inc
addr16
outsb
iret
insl
add
fnstsw
sbb
je
mov
cmc
jns
jp
stos
imulb
int
xlat
int3
mov
adc
aaa
push
in
ss
add
loope
push
repnz
push
dec
pop
clc
sarb
or
cwtl
test
sti
mov
test
rcrl
inc
push
mov
push
cmpb
outsl
int
rcr
js
lock
mov
mov
js
loope
ret
or
pop
in
xchg
sbb
pop
push
and
cmp
push
in
fwait
inc
mov
xchg
adc
push
xchg
push
stc
cld
imul
insl
cmp
and
sbb
mov
fiadds
cmc
int3
addr16
arpl
inc
inc
jmp
cmc
jbe
ret
mov
xchg
pop
and
inc
mov
add
xor
repnz
push
pop
cld
pop
xor
jg
test
pop
data16
push
and
mov
rcll
jb
out
lods
and
push
cmp
and
inc
mov
mov
scas
in
pop
mov
add
stos
mov
into
repnz
shr
push
and
sbb
add
mov
das
test
sbb
in
sarl
rolb
leave
xor
iret
and
dec
xor
repz
mov
inc
aad
mov
xchg
mov
add
xor
decb
mov
popf
cs
mov
and
sub
lea
iret
push
pop
ljmp
add
push
aas
dec
or
test
hlt
and
leave
add
je
pop
push
test
jo
stos
in
fstl
sub
jns
adc
or
in
adc
sub
fisubrs
stos
push
mov
fcomp
lret
movsl
ja
inc
test
in
mov
mov
jle
insl
pop
sbb
sbb
leave
mov
push
stc
and
mov
pop
lcall
test
cmp
arpl
jmp
or
mov
adc
cmc
push
mov
mov
cwtl
mov
lret
cltd
sbb
nop
fnop
pop
mov
arpl
in
in
lea
call
cmpsl
jl
ret
lret
lcall
push
das
add
adc
push
and
jae
icebp
sbb
push
movsl
pop
and
xor
pop
inc
mov
cmp
push
mov
push
or
cmp
mov
mov
dec
adc
in
ljmp
push
cmp
das
xor
stc
gs
inc
sbb
or
pop
mov
mov
ja
call
mov
xlat
dec
xlat
cmpl
and
jbe
pop
cmp
jmp
add
ror
jg
pop
mov
xorb
cwtl
jg
sbb
jle
push
inc
es
cltd
xlat
outsl
stos
rorl
aad
call
cmp
cmp
js
jle
cmp
fs
inc
fs
pushf
mov
inc
push
into
mov
mov
xor
lret
sub
movsb
vmovd
and
jbe
shrl
test
xchg
mov
out
and
out
cltd
push
mov
cmc
push
xchg
sbb
cltd
add
or
adc
lock
popa
rcrb
adc
es
inc
jp
push
inc
sbb
sub
dec
lods
dec
sub
add
xlat
inc
sarb
pop
pushf
or
mov
clc
sub
out
data16
or
mov
mov
cs
jne
cli
add
jo
cmp
repz
cmp
sub
push
or
pop
cmpsl
adc
scas
or
sub
pop
test
sbb
int3
bound
sti
outsl
adc
sub
adc
xchg
cmp
in
fnstcw
pop
into
adc
mov
repz
xchg
mov
and
fwait
or
dec
push
mov
je
arpl
fists
or
dec
inc
jne
into
stos
push
or
call
movsl
jne
popf
mov
notb
stos
adc
or
dec
jno
pop
push
xor
in
fistpll
in
adc
gs
push
mov
xor
xchg
xchg
push
inc
jo
mov
push
push
ljmp
les
or
out
cmp
mov
push
xor
xchg
lods
jle
stos
mov
popa
pop
imul
mov
fldl
pop
cmp
jne
lret
icebp
sbb
dec
cwtl
adc
xchg
mov
orb
sub
jge
mov
push
and
pop
and
mov
hlt
aam
xchg
cld
mov
stos
push
out
insl
adc
push
pop
fiadds
mov
out
out
das
or
std
mov
jge
cs
add
pop
cmp
inc
or
mov
int
xor
pushf
js
int3
repnz
ret
roll
inc
in
cmpsb
xchg
fidivl
inc
outsb
jl
popa
lret
add
rcrl
loope
loopne
mov
jmp
push
ret
insb
sbb
adc
inc
sbb
cmp
movsl
insb
mov
aam
adc
sbb
test
mov
dec
or
mov
dec
mov
push
mov
rcr
ficoms
adc
sar
xor
adc
rcll
mov
fbld
adc
xchg
les
adc
jns
push
lock
icebp
mov
aad
shrl
lods
jo
scas
sbb
fstpl
lods
iret
push
fstpl
jge
cmp
aad
dec
scas
rol
and
js
int
inc
imul
sahf
inc
sub
mov
jp
mov
sub
daa
mov
and
push
stos
test
xchg
xor
loop
adc
mov
dec
mov
mov
inc
fwait
sbb
mov
jecxz
mov
or
push
test
aad
push
pop
daa
mov
aas
fdivrl
sbb
aas
popf
cmp
lods
xchg
out
pop
icebp
into
cmpl
push
pusha
fisubs
sbb
inc
sub
mov
xchg
int
lock
jp
sbb
mov
adc
fcomip
sub
jecxz
inc
jno
out
cmpsl
popa
pop
repz
rcl
push
jno
push
adc
mov
and
mov
sub
push
arpl
inc
loop
mov
cmp
jae
fldl
aaa
mov
cmp
cmp
stc
movb
fsubrl
mull
idivl
movsl
test
mov
rclb
repnz
push
pop
rcrb
dec
or
and
cltd
movsb
push
aad
pop
push
pop
pushf
out
sub
dec
mov
repnz
andb
scas
stc
inc
push
mov
add
inc
mov
int
pop
xchg
ljmp
mov
imul
mov
mov
nop
js
imul
imulb
ret
pop
adc
mov
cmpsl
loopne
fs
testb
add
in
and
add
inc
xchg
scas
add
outsb
or
mov
pop
sbbb
push
shll
cmp
cmp
fxch
push
mov
or
push
je
es
dec
pop
mov
in
mov
ja
loope
and
fisubrl
aaa
cli
mov
cmp
nop
dec
sahf
xchg
xchg
repnz
push
repnz
std
mov
mov
dec
xchg
lds
push
movsb
fstpl
push
inc
loop
cli
and
cs
add
aam
loopne
mov
les
mov
stos
jp
cmp
test
and
popa
sbb
or
pop
icebp
pop
sarl
fsubr
or
and
pop
mov
adc
xchg
insb
sbb
and
loope
fists
pop
adc
add
or
ffree
movsb
pop
cmp
xchg
rolb
mov
loop
add
xor
ficoml
xchg
pop
mov
ss
fmul
mov
push
nop
dec
or
xchg
mov
push
sbb
fidivl
fsubrs
das
ljmp
jne
xchg
xchg
aaa
push
jmp
mov
or
lret
adc
adc
mov
push
xor
or
mov
inc
pop
cld
outsl
repnz
inc
leave
pop
fmuls
cs
mov
mov
jb
scas
mov
loop
mov
pop
orb
cmc
fiaddl
test
cmp
mov
jnp
fcoms
aaa
iret
test
insl
mov
ficompl
mov
mov
add
push
in
mov
insb
jmp
dec
cltd
movsl
and
xchg
dec
sub
pusha
xor
jnp
stc
xchg
imul
cmp
call
imul
or
mov
ss
mov
clc
mov
repz
nop
mov
test
pop
push
idivl
filds
inc
leave
rcr
pop
fiaddl
jno
aaa
repnz
mov
push
inc
and
mov
pop
lret
out
aam
sub
scas
ljmp
aas
negb
cli
push
dec
dec
bound
sub
dec
push
xchg
popf
mov
imul
rorb
sub
jmp
aad
mov
mov
dec
ja
mov
jo
cmc
out
idivl
mov
cwtl
jb
jns
cmp
sub
rcr
push
cmp
push
mov
ljmp
fsubrl
xchg
pop
leave
mov
mov
mov
test
sub
out
and
pop
mov
mov
xor
mov
lret
test
nop
js
pop
mov
int3
cmp
jmp
pop
mov
sub
and
sub
stos
xchg
insb
sbb
mov
sub
mov
mov
jp
out
sbbb
stc
mov
aas
mov
mov
pusha
stos
daa
and
mov
xchg
push
sub
push
jae
inc
and
fildl
xchg
je
mov
and
mov
xadd
xlat
daa
ss
xor
stos
or
xor
outsb
xor
jae
cmpsb
scas
jge
mov
das
pop
sbb
or
insl
xchg
test
xor
dec
jp
push
arpl
inc
test
xchg
sti
sti
je
pop
aas
adc
push
movsl
and
mov
faddl
push
int
add
inc
mov
inc
jbe
in
pop
scas
and
enter
xor
loope
and
add
dec
jp
enter
add
push
xchg
repz
jne
stc
adc
std
or
test
icebp
jb
adc
sbb
fldl
xchg
push
insb
data16
pop
insl
add
sub
iret
or
dec
mov
and
dec
cmpsb
pop
into
push
into
mov
or
shlb
imul
dec
adc
xor
sbb
repnz
xor
cmp
jae
repz
dec
dec
ja
xor
xchg
fdivr
adc
daa
mov
mov
lods
imul
pop
gs
and
incb
pop
lock
jb
mov
lock
popf
and
aas
shrb
jno
in
jp
lret
dec
ret
add
adc
enter
cmp
inc
cltd
mov
out
out
mov
shrl
push
sbb
pop
mov
orl
mov
jge
jne
repz
push
inc
inc
shl
das
add
push
pop
fcomps
punpcklbw
pop
dec
inc
or
arpl
dec
cmp
xor
insb
cltd
sahf
xchg
mov
sahf
ret
adc
cmp
push
xor
sub
xchg
fs
adc
stos
sbb
pushf
mov
int3
adc
pop
dec
cmp
mov
fdivl
jg
nop
xchg
ss
aas
mov
int3
movsb
jns
pop
andl
cmc
into
push
fidivrs
jnp
shl
cmp
inc
aaa
popf
aam
mov
mov
icebp
ror
sub
jno
xor
push
cmp
xor
xchg
xor
cmp
in
mov
scas
inc
data16
loope
into
fildll
stos
mov
aam
int
call
insl
xor
mov
mov
sub
mov
cmp
pop
add
sub
aas
mov
dec
cmp
inc
xchg
fisubl
mov
cwtl
fs
mov
test
ficoms
mov
pop
js
adc
inc
inc
sbb
mov
roll
in
aam
xchg
scas
ffreep
sbb
mov
and
or
inc
and
call
cltd
sbb
in
sub
popa
out
mov
enter
popa
outsb
pop
pop
xchg
gs
and
aam
xchg
out
into
call
data16
das
cmpsl
loopne
mov
cmp
mov
cmp
in
sub
jmp
ljmp
jp
sbb
repz
hlt
cs
shr
sub
int
jmp
xor
mov
mov
cmp
pop
scas
sbbl
fwait
mov
stos
xchg
xor
cwtl
jecxz
pop
and
and
sbb
sbb
mov
rorl
fsub
xchg
and
pusha
sbb
stos
test
mov
les
divb
jb
out
sub
iret
xchg
gs
les
out
dec
dec
outsl
cmp
and
int3
movsl
fwait
stos
daa
xchg
cmp
dec
fistl
aaa
jecxz
push
pop
dec
sti
in
lods
pop
jns
cmp
jns
push
fbstp
jmp
arpl
mov
shll
dec
aas
call
sarb
idivl
jo
testb
push
dec
ss
inc
nop
iret
movsl
lret
stos
sub
call
not
repz
and
mov
mov
mov
add
inc
repz
push
cmpsb
inc
ja
sbb
ret
add
push
rcll
mov
fxch
fidivl
sub
jbe
sbb
outsl
mov
fucomp
cmp
pusha
xchg
pop
ret
mov
iret
sub
movb
lock
fidivl
mov
and
pop
mov
icebp
mov
xchg
pop
pop
add
and
int
or
ja
pop
iret
mov
xlat
std
ret
adc
xor
idiv
shrl
mov
imul
push
inc
jge
cltd
imul
cmp
aaa
popa
dec
jmp
fstpl
mov
sbb
xchg
push
repz
lock
iret
jmp
out
xchg
mov
lods
sti
and
mov
movsb
out
sub
test
mov
mov
dec
aad
clc
stos
mov
cwtl
mov
shrb
adc
fstpt
mov
outsb
pop
mov
movl
je
stos
pop
push
nop
lahf
adc
mov
mov
pop
jg
iret
leave
loopne
dec
jbe
sub
loop
jae
pop
pop
push
xor
push
mov
inc
mov
in
test
adc
hlt
in
adc
addr16
and
mov
sbb
sbb
jmp
popa
arpl
fldcw
mov
loop
mov
out
pop
adc
sqrtps
jge
filds
push
xchg
stos
jbe
fnstsw
in
or
out
mov
lret
push
jg
or
imul
das
aad
add
pop
mov
mov
aaa
dec
xchg
int3
cld
out
out
xchg
sarl
pop
mov
cmpsb
xchg
into
ljmp
xor
push
lcall
pop
fstpt
in
insl
sub
cmpsl
out
loop
inc
xor
mov
pop
ja
repz
out
lods
cmpsb
jl
mov
adc
or
f2xm1
dec
lods
mov
mov
imul
mov
imul
call
packssdw
push
inc
push
inc
in
and
dec
imul
inc
fistps
jo
das
js
xor
ret
mov
pop
jnp
das
fidivs
pop
filds
mov
dec
or
jmp
sub
push
sub
addr16
push
push
xor
dec
stos
cli
adc
push
notb
insb
xchg
stc
mov
repnz
in
mov
negb
hlt
fsubl
or
inc
push
lahf
xchg
adc
inc
dec
xor
fiaddl
push
push
je
pop
push
mov
jno
pusha
lret
je
inc
les
mov
daa
lahf
and
jecxz
popa
sbb
inc
pop
xchg
push
test
into
addr16
in
out
outsb
call
xchg
inc
fiadds
and
neg
push
jno
xlat
add
sbbl
jno
ret
pop
pop
xor
orl
jp
loop
pop
adc
loope
scas
jne
aad
stc
into
pop
sub
xchg
fsubr
mov
lcall
mov
fldcw
dec
push
cmc
lret
or
js
flds
imul
xor
outsl
out
in
shll
inc
mov
and
and
xchg
mov
cmp
std
test
push
cmpsl
nop
jmp
gs
rorb
xchg
adc
mov
pusha
loopne
add
jl
pop
add
pop
adc
pusha
aas
in
clc
repz
inc
mov
jne
cli
aaa
bnd
sub
xchg
stos
pusha
ljmp
fs
das
mov
mov
mov
adc
std
mov
in
pushf
sub
rorl
fcmovnbe
xchg
xor
xadd
cmpl
inc
xchg
not
cld
pop
daa
xor
leave
rol
and
cltd
jp
cmp
mov
inc
inc
jmp
loop
aaa
scas
movsb
xor
xor
cltd
ret
or
xchg
jle
lcall
jle
or
inc
ret
movsb
scas
das
dec
push
out
and
cwtl
inc
mov
push
pop
outsb
lret
pop
cmp
lods
mov
loop
jae
xchg
adc
pop
and
push
pop
fildl
push
mov
push
sub
imul
int
jle
cmp
dec
sbb
and
pop
filds
sub
mov
and
mov
inc
xlat
lret
fadds
shlb
fidivl
lea
add
shlb
nop
mov
cmp
loopne,pt
arpl
ss
cwtl
inc
dec
jne
testl
shll
bound
sahf
enter
adc
push
fstpt
pop
stos
sub
outsl
pop
mov
mov
fld
cltd
sub
cmp
ds
cmp
cmp
outsl
std
loop
sbb
insb
jmp
out
adc
inc
shll
inc
or
jmp
cmpsl
pop
cmc
arpl
ljmp
adc
adc
xchg
jno
fisubl
lods
mov
pop
imul
mov
test
dec
sbb
push
cmp
ja
and
mov
xchg
ljmp
cltd
adc
or
xor
dec
out
dec
hlt
out
xor
mov
mov
push
mov
pop
xor
fsubrs
lret
test
add
shl
sub
mov
pop
ret
inc
loope
daa
loop
pop
push
and
sbb
sbb
or
cmp
jle
pushf
in
pusha
in
data16
mov
in
or
stos
jns
js
sub
jecxz
fldenv
andb
jmp
cwtl
sbb
les
shll
ljmp
xor
xchg
rorb
out
dec
lea
cld
sub
sub
pop
cs
pop
xchg
xchg
sbb
aam
fmuls
jecxz
adc
cmc
pop
lahf
inc
push
jmp
mov
adc
gs
sbbb
pushf
jns
jl
dec
cmpsb
rorb
fwait
orb
xor
cltd
out
jo
outsl
outsl
xchg
rclb
testb
jne
push
jnp
cmp
por
cwtl
pop
or
rcll
sbb
pop
loop
sarl
nop
pop
cs
es
mov
mov
xchg
pushf
jle
hlt
and
scas
repnz
ficoms
mov
sub
cmp
lods
movsl
xchg
cmp
xchg
stc
leave
into
xor
jns
test
or
mov
mov
rcll
and
mov
divb
mov
jb
inc
pop
xchg
dec
mov
popf
add
jg
mov
xchg
or
lret
aas
in
movsl
sub
cltd
in
mov
sarl
push
dec
add
movsb
test
test
add
repnz
imul
or
loope
adc
dec
sbb
jge
cltd
adc
nop
and
je
out
ret
xchg
aad
cli
lahf
sbb
jecxz
stos
imul
xor
insl
in
pop
adcb
negb
sahf
mov
pop
xchg
ljmp
xchg
clc
fnstcw
fildl
sbb
flds
imul
imul
outsl
cmp
pushf
dec
fstpt
jecxz
mov
inc
push
cmp
or
sub
gs
jecxz
lret
push
lock
cmp
mov
subb
fwait
popf
dec
adc
adc
jb
bound
clc
fcomps
aas
xor
and
jp
or
mov
push
xor
add
sub
cltd
rorb
xchg
into
pushw
lcall
xchg
mov
jb
push
lea
xor
das
xchg
dec
mov
addb
outsb
pushf
push
in
adc
movsb
fmulp
mov
or
decb
cs
cmp
or
gs
jne
pop
mov
enter
test
sbb
jmp
pop
xor
pop
cmpsl
daa
jne
and
movsl
xor
repnz
mov
repz
and
subb
adc
xlat
push
loop
inc
xchg
int
cmp
mov
pop
xchg
rcll
mov
and
dec
fs
cmp
and
inc
cmp
jne
or
lods
repnz
leave
rorb
fcmovnbe
adc
aaa
mov
sbb
mov
shlb
pop
xchg
or
test
pop
fs
push
dec
pusha
xor
xor
or
sbb
in
out
and
aas
std
ret
fnstenv
mov
xor
xor
xor
movsl
jo
cmp
adc
lods
push
cs
repz
jns
scas
loopne
sarb
lcall
hlt
mov
pop
icebp
shll
push
insl
inc
dec
or
stc
aad
add
sub
or
sub
inc
push
xchg
test
jcxz
adcb
rcll
int3
fidivs
lcall
rcl
ds
outsl
xchg
adc
cmpsb
jns
xor
sub
cmp
or
adc
push
sbb
adc
pop
sub
jg
pop
enter
mov
stos
sahf
xor
lods
pop
inc
test
push
notb
dec
xchg
mov
imul
jns
mov
cmp
aad
sti
mov
push
lret
and
test
or
mov
cmp
dec
ror
jns
mov
packssdw
andl
test
ja
data16
and
data16
sub
roll
push
fwait
or
or
fisubs
mov
in
jne
aas
outsb
lret
cmp
les
jb
xlat
jl
fisttpl
imul
inc
ret
mov
xchg
push
xor
cmc
mov
mov
sub
jns
and
mov
and
push
xchg
stc
and
nop
dec
sahf
in
xchg
aam
cmp
nop
stos
addl
jge
dec
add
lods
xor
push
add
xchg
aam
mov
cmp
and
imul
inc
push
push
shrl
xchg
nop
cli
dec
dec
fs
mov
mov
data16
cmpb
mov
sub
ret
push
jno
in
cmp
pop
pusha
cmp
lods
dec
cmp
cmp
push
pushf
mov
or
fcmovbe
out
mov
or
cli
mov
and
mov
xor
push
outsb
pop
in
inc
aam
cmp
cwtl
add
sbb
ret
popa
imul
or
testb
stos
aas
mul
pop
fs
and
popf
jmp
sbb
es
out
cmpsl
and
adc
mov
ret
loopne
sbb
sbb
xchg
pushf
mov
push
xor
in
ficoml
ret
iret
cmc
inc
loopne
movsl
cmovo
hlt
jnp
rorb
test
out
xlat
push
cld
jmp
dec
add
lods
negb
ret
decl
std
lahf
lret
sub
mov
pop
in
add
mov
or
ds
gs
dec
mov
std
xor
stos
xchg
jge
aaa
outsb
mov
js
out
or
inc
rolb
sbb
sbb
sahf
adc
or
pop
mov
aam
aam
pop
repz
out
sbb
xor
in
pop
loope
jno
adc
into
rcr
movsb
inc
lods
arpl
insl
rclb
cmp
repnz
fwait
adc
in
ficompl
notl
xchg
cmc
sub
pop
jg
mov
leave
pop
fisubrs
clc
daa
jg
or
dec
push
ffreep
adc
daa
jno
add
imul
mov
jp,pn
lret
push
dec
insl
adc
stos
aam
movsl
icebp
mov
push
jo
mov
lds
test
push
jnp
addr16
mov
test
mov
mov
mov
or
add
gs
dec
xchg
cmc
xor
ss
loop
in
aad
pop
sub
roll
cmpsl
mov
dec
fdivrp
lret
push
sbb
xor
mov
mov
xlat
fbld
dec
xchg
adc
jns
div
das
loopne
mov
lea
in
negb
sbb
test
mov
xchg
jnp
out
out
mov
ss
fldt
in
lea
jg
cwtl
fs
ds
mov
jno
in
loopne
loop
jmp
gs
sub
push
or
cmp
jne
cmpsl
imul
je
mov
ror
xchg
xor
nop
aad
loopne
into
cwtl
cmpsb
arpl
lods
or
leave
mov
out
mov
pop
pop
aaa
mov
xchg
mov
movsl
pop
ret
sti
mov
pop
adc
jne
mov
aas
popf
enter
xchg
decl
pop
mov
sub
jns
and
mov
and
cld
add
bound
lret
imulb
xor
repnz
cmpb
push
jmp
cmpsl
stos
mov
push
roll
push
sti
push
xor
jns
lods
outsl
sub
mov
add
out
mov
test
pop
mov
ljmp
aas
lret
andb
hlt
cmc
push
movsb
jmp
test
mov
jl
xchg
sub
xchg
je
jbe
dec
push
cli
icebp
in
add
notb
cmp
test
jno
mov
test
lds
fnstcw
lods
xor
sub
mov
and
add
jo
jns
pusha
into
pop
cli
daa
out
lods
push
les
sbb
call
out
jae
jg
or
mov
or
out
pop
mov
sub
subb
aas
ret
jno
mov
into
jo
das
xchg
xor
hlt
xchg
sbb
xorb
dec
inc
xchg
gs
aaa
jae
add
mov
popa
in
imul
mov
push
fucomip
rolb
fstps
push
dec
jno
outsb
push
test
jo
in
test
xor
cld
and
ja
cmp
adc
fiaddl
sbb
loopne
jns
pop
dec
xor
call
stc
push
data16
data16
sbb
mov
addr16
insb
ljmp
mov
sar
mov
adcl
mov
jns
xchg
icebp
jg
ds
mov
scas
mov
subl
sbb
adc
lea
fcmovnu
movsb
xchg
dec
ret
in
xor
inc
dec
dec
fwait
shlb
shll
clc
dec
pushf
lock
xlat
out
jg
cmpsb
aaa
in
push
xor
mov
dec
inc
test
gs
repnz
add
imul
scas
xchg
out
or
sub
mov
sti
popa
cmp
aam
pop
filds
dec
loope
jns
cmpsl
cmpsb
cmpsl
imul
cltd
xor
push
inc
popf
repz
add
ret
popf
seta
outsb
into
mov
movl
ds
and
test
mov
mov
es
hlt
call
shl
sqrtps
dec
lcall
test
stos
adc
jns
push
cs
mul
cmpsb
and
bswap
movsb
jno
or
pop
shlb
mov
pop
movsb
int
xchg
repz
pop
cmpsl
inc
rclb
add
pop
test
xlat
adc
and
pop
test
outsl
sbb
mov
pusha
loopne
cli
cli
xchg
popa
cmp
hlt
jo
bound
scas
xchg
dec
push
fincstp
movsl
dec
out
lock
sub
xor
inc
lds
xor
sahf
leave
mov
cltd
inc
sbb
imul
adc
cmp
pop
sbb
sub
aad
aas
hlt
sbb
mov
mov
dec
push
dec
or
out
insb
stos
imul
pop
icebp
inc
outsb
push
mov
out
aad
push
loop
ret
mov
int3
popf
bound
int
int
pop
sbb
add
mov
pop
push
cmp
sub
stos
push
mov
psubb
lods
cli
cmp
jo
jmp
out
cmp
pop
xchg
leave
mov
fstpl
lcall
pop
ret
sbb
cwtl
icebp
dec
mov
push
lock
imul
aaa
xor
imulb
sbb
into
cli
pop
pop
lahf
xor
ja
dec
call
inc
test
push
movsl
adc
fsubrs
push
xor
inc
mov
mov
mov
dec
jns
test
xlat
decb
mov
sub
xor
fs
xchg
xor
gs
cmp
or
arpl
int
dec
jge
cmp
push
wbinvd
lods
push
aas
xchg
movsl
cmp
or
cmpsl
and
rep
ja
sbb
es
es
xor
add
enter
gs
mov
pop
and
and
repz
jecxz
lods
inc
pop
call
insl
cmc
inc
mov
data16
fldt
leave
test
imul
or
mov
xchg
xchg
lock
movsb
cmp
out
cwtl
stos
xchg
xor
cmp
mov
xor
aad
push
lods
xchg
sbb
fwait
aas
and
cmp
xor
mov
cmpsb
ficomps
push
nop
xor
enter
dec
dec
icebp
out
mov
xchg
xor
loopne
mov
in
sub
aam
fdivrl
jmp
out
cmp
mov
xchg
jbe
ret
push
or
mov
and
aad
inc
bound
int3
cmp
push
sarb
outsl
adc
cmpsb
xchg
repnz
into
xchg
pusha
sbb
orl
cs
out
cmpsl
fcompl
data16
push
inc
ss
sub
push
add
xor
sbb
jno
loop
test
mov
push
push
add
fsubs
dec
popf
fisubs
mov
inc
orb
stos
dec
dec
and
ljmp
aaa
sub
mov
into
das
xchg
daa
adc
sahf
in
mov
mov
mov
or
mov
mov
xor
and
sarl
mov
lods
scas
gs
adcl
jmp
test
daa
clc
xor
xor
xchg
jg
mov
xlat
xchg
xor
loop
xor
nop
mov
sbb
es
sbb
dec
inc
and
repz
jno
inc
rorl
sub
sar
sbb
xor
or
test
daa
out
mov
xchg
es
jge
sub
mov
in
addr16
pop
rcll
stos
call
into
push
jnp
pop
mov
sbb
mov
mov
mov
movsl
rorl
call
in
test
mov
ret
adc
mov
sbb
cmc
dec
roll
scas
and
push
mov
and
clc
pusha
push
push
and
testl
test
push
or
aad
outsb
stos
inc
pop
push
popa
add
inc
sbb
xchg
xor
scas
push
xor
out
adc
jg
jle
in
push
int
fsubs
xor
or
dec
test
xchg
js
pop
lahf
inc
out
pushf
clc
fmulp
std
jnp
mov
mov
jns
dec
xchg
in
test
imul
push
dec
and
into
negb
dec
add
add
ja
aas
loop
icebp
shlb
sbb
fldln2
or
or
xchg
addr16
or
in
jge
movsb
xchg
pusha
arpl
cmc
add
mov
adc
dec
cltd
stos
stc
shr
adc
mov
mov
call
jg
sti
mov
xlat
mov
cld
jo
ret
mov
inc
inc
cmp
std
inc
stos
mov
inc
adc
pop
clc
jecxz
push
or
mov
clc
sbb
js
add
xchg
jle
mov
cmp
nop
or
bnd
mov
mov
push
mov
xchg
mov
sbb
int3
repnz
jmp
cmp
sbb
das
das
pop
push
pop
fistpll
xorl
and
push
pusha
and
fnsave
cmpsb
push
xchg
mov
adc
xchg
insl
push
ljmp
adc
sub
push
test
aad
xchg
hlt
mov
xlat
inc
outsb
mov
cmc
add
test
or
cmpsb
dec
pop
xor
cmpl
in
mov
test
ds
pushf
stc
mov
mov
lds
mov
push
in
sti
jle
push
inc
xor
push
incl
outsl
lret
inc
cmp
call
lds
jno
pop
nop
add
jno
lock
loop
loopne
int
ror
test
cltd
cmp
xor
sub
push
sub
sti
sbb
lods
ret
inc
xchg
push
or
popf
mov
ja
jno
adc
xor
stos
jp
sarl
adc
pop
sbb
xlat
mov
es
pop
and
sub
stos
andl
test
jbe
cltd
movsl
test
ret
outsb
loopne
adc
adc
daa
adc
mov
xlat
sbb
loop
lcall
add
nop
xor
cltd
ret
jb
push
in
jnp
pop
add
in
jp
lret
xchg
jmp
or
push
fnstsw
movsl
fldenv
shll
clc
cmc
pop
movsb
outsb
or
inc
or
pop
mov
dec
cmp
test
xchg
cmpsl
lret
loope
loope
push
push
mov
test
popf
dec
fcoml
add
call
or
jbe,pt
lahf
jecxz
push
test
push
fwait
push
xchg
frstor
inc
in
call
lret
cwtl
mov
push
jp
push
arpl
mov
inc
cld
rcr
xchg
sub
scas
sti
add
fdivrs
xlat
clc
or
shrb
test
jo
xchg
popw
fsubl
push
aas
pop
add
jp
mov
mov
int
mov
xor
ret
mov
push
cmp
int3
inc
scas
lret
stos
movsb
sub
sarl
add
pop
xchg
out
fnstcw
fwait
dec
scas
stos
shrb
aam
xor
inc
fsubr
shr
lea
lcall
jno
int
stc
jne
popf
loop
popa
ljmp
jecxz
stos
fstpl
pop
mov
insl
lret
inc
out
ss
cltd
xor
out
dec
lds
fadd
mov
mov
xchg
lods
lret
add
jb
popf
cmpb
mov
or
xor
mov
rorl
popf
cmp
je
nop
mov
push
pop
mov
out
iret
pop
sub
cmp
sarl
sbbb
lahf
adc
stc
sti
xor
sbb
rcl
cmpsl
jb
jae
sarb
sbb
add
push
nop
insl
ret
sbb
lret
and
lods
call
jae
lds
cmp
ret
mov
sub
push
xchg
jno
or
pusha
xchg
int
pop
sub
sub
rcrl
aad
dec
rorb
push
scas
adc
loopne
dec
call
pop
ds
fmuls
jle
pop
ja
repnz
lds
push
or
push
xor
test
mov
jb
mov
ficomps
inc
sti
pop
mov
push
lret
sub
repnz
adc
aad
insb
jb
test
bound
sti
loop
cmp
loope
dec
aas
je
adc
jbe
mov
xor
push
lds
aas
fmull
rol
jne
push
xor
shlb
or
sbb
inc
cld
jmp
mov
idivl
test
jmp
lds
adc
sub
or
lods
lcall
lea
pop
call
and
add
pop
dec
mov
pop
pop
bnd
add
jp
sub
rclb
xor
mov
fs
push
and
cmp
inc
mov
lock
icebp
sub
std
jae
es
cld
xchg
jge
pop
adc
je
lds
call
mov
imul
cmp
push
in
iret
or
push
cli
xchg
or
mov
bound
fsubl
push
fucomip
xchg
rorb
sub
xchg
aas
mov
std
inc
rclb
inc
mov
rorl
fldcw
and
test
scas
sub
and
push
xor
and
stc
sbb
test
out
les
adc
popf
cmpb
sbb
sub
dec
push
mov
lods
xchg
test
cmpb
int
testl
adc
push
lahf
push
inc
lahf
xor
pop
xchg
add
aaa
sbb
xchg
jnp
movsl
nop
andl
cmpsb
in
shlb
mov
stos
mov
pop
inc
int
xor
xchg
inc
adc
push
test
push
mov
cmpsb
or
lahf
xor
loop
jno
or
lock
xchg
xchg
cmpsl
daa
lods
pop
cs
into
cmp
bound
jae
cmp
dec
cmpsl
cmp
inc
push
insl
loop
sub
xchg
dec
push
jno
bound
shr
jae
inc
mov
lds
test
mov
dec
xor
idivl
shl
aaa
mov
fsubrp
mov
and
xor
mov
test
call
push
lcall
and
sbb
adc
mov
mov
or
dec
into
mov
ljmp
fwait
pop
dec
mov
xchg
orl
movsb
sbb
xlat
push
cwtl
nop
inc
push
jb
inc
call
adc
loopne
jns
cmp
add
inc
andb
cmp
lds
xchg
mov
test
jnp
stos
out
pushf
paddd
or
ds
int
push
cltd
push
cmp
add
jcxz
out
dec
jmp
mov
xlat
addl
cmpb
cs
lock
mov
scas
cmpsl
inc
filds
scas
ret
stc
ds
std
xlat
jge
sub
and
mov
pop
call
push
mov
in
inc
orb
xchg
jg
repnz
in
lods
mov
push
xchg
pop
fstpl
pop
pop
sbb
adc
out
inc
pop
sbb
in
fldenv
mov
hlt
push
cmpsl
and
cmp
or
mov
test
xchg
out
mov
xor
mov
stos
or
xor
mov
xchg
js
nop
or
pusha
imul
imul
jo
mov
imul
in
or
jns
xchg
mov
sti
or
dec
mov
mov
xor
cmp
push
int
or
in
mov
test
imul
outsl
lcall
mov
loopne
outsl
pop
xor
addl
call
shl
cmp
mov
push
xchg
stc
rol
and
data16
mov
add
in
in
jl
mov
out
in
ds
outsb
cli
mov
and
stos
xchg
fisubs
fdecstp
cmp
mov
insb
fwait
call
ljmp
mov
and
cmp
cmc
jnp
inc
insl
shll
mov
sbb
sbb
js
mov
cmpsb
insb
das
out
jo
and
or
negl
or
inc
sbb
in
arpl
lds
das
add
rcrl
dec
out
lods
mov
xor
push
cwtl
repnz
out
xchg
jg
ja
loope
mov
rcrl
xchg
jl,pn
add
in
lahf
jae
lods
jne
popf
cltd
mov
leave
leave
fiadds
movsb
mov
movsb
ret
sub
decb
hlt
mov
jle
lcall
xor
sub
fsub
dec
insb
fadds
mov
sti
xchg
cmp
xor
leave
pop
sbb
sub
loopne
mov
loop
nop
hlt
inc
outsl
loope
mov
add
inc
fs
jmp
js
mov
shl
sub
xchg
cltd
jmp
into
repnz
int3
dec
out
test
scas
enter
movsb
cmpsl
mov
insl
ljmp
outsl
push
adcb
orb
test
int
push
repz
out
xchg
inc
add
xchg
add
repnz
mov
test
mov
mov
cmp
pushf
les
lock
jae
popa
sbb
jecxz
jbe
out
out
inc
xchg
test
je
aad
jae
cmp
ret
lods
int
stos
shll
test
daa
adc
mov
push
adc
xchg
lods
adc
pop
sbb
adc
movsb
push
sub
sahf
push
icebp
or
ror
inc
fstl
ret
loope
push
sbb
xchg
popf
insb
jnp
out
pop
mov
or
dec
fstl
test
aaa
shrb
lahf
or
dec
pop
and
outsb
sbb
xchg
xchg
notb
cmp
ret
add
xchg
lock
add
addl
mov
in
sbbl
cmp
mov
pop
scas
sub
cmovg
dec
add
pop
sbb
cmpsl
idivb
lods
lahf
push
out
cld
sbb
or
cmp
ror
fdivrl
lahf
sub
adc
rcrb
loop
aaa
aam
dec
ss
fisubs
mov
sub
or
imul
cld
dec
aam
xchg
jp
jae
lea
lret
cltd
fistpll
sub
push
xchg
addl
insb
xor
cltd
jmp
mov
cltd
ja
in
nop
jmp
xor
div
stos
cli
pop
adc
pop
inc
in
lea
or
or
lcall
jns
jb
sbb
incb
cld
mov
fwait
testl
jmp
push
push
je
cmp
in
mov
shrl
insl
sub
dec
shll
cmp
adcb
jmp
into
dec
jnp
fwait
out
lods
jns
pusha
hlt
lcall
stos
push
adc
punpcklbw
fsubrp
sbb
movsl
mov
sbb
faddl
xchg
fwait
stos
xchg
arpl
aam
insb
jnp
leave
mov
cmc
stc
xchg
dec
clc
sahf
inc
cmp
mov
mov
bound
js
inc
lea
sub
jg
fistpll
mov
mov
mov
mov
rcrb
add
ficoml
out
pop
add
xor
push
aas
sbb
and
jl
xchg
flds
je
mov
std
inc
xchg
xchg
ljmp
into
cmp
repz
outsl
fists
adc
shlb
lcall
xor
cs
hlt
push
xorb
pop
int3
int
mov
adc
jne
xchg
inc
pop
loopne
xlat
call
arpl
cs
sahf
dec
xchg
into
mov
aad
add
mov
sbb
das
push
add
negl
stos
gs
inc
loopne
gs
mov
fsubrs
shrb
movb
pop
dec
repnz
xchg
ss
add
mov
mov
cli
ja
inc
dec
xchg
stc
f2xm1
and
jge
fisttpl
out
add
aas
fwait
xchg
pop
call
fists
lods
xor
or
jg
in
cmc
ret
ret
mov
inc
and
fldenv
inc
fisubs
arpl
add
loope
test
jp
inc
arpl
add
jns
pop
inc
rorb
xchg
je
daa
xchg
mov
inc
sub
xchg
inc
arpl
rcl
xor
cld
jo
das
cmp
push
dec
idiv
mov
rclb
pop
orl
aas
int
pushf
mov
enter
xchg
mov
rorl
push
arpl
imul
lea
nop
lods
and
sbb
shll
mul
scas
jmp
sbb
in
xor
addr16
sbb
stc
js
scas
cmp
cli
int
jns
or
adc
add
pop
xor
adc
xor
push
inc
ror
scas
andl
std
pop
iret
stc
mov
popa
xchg
rorb
xchg
fs
add
rcll
fisttpll
dec
adc
test
rcr
xlat
lahf
mov
inc
or
addr16
test
xor
jl
push
popa
stos
mov
jg
sub
sub
ljmp
pop
lahf
popa
negl
sbb
arpl
and
add
outsl
xchg
subl
pop
js
data16
sbb
jb
cli
jecxz
das
and
push
sbbb
or
sti
add
pop
mov
fnstenv
push
out
sub
adc
orl
inc
sub
xchg
sti
arpl
push
dec
mov
scas
testb
cs
shll
cwtl
dec
jge
xchg
mov
ljmp
ficoms
aam
push
push
rcll
and
adc
or
cltd
mov
je
or
lret
shl
and
and
xchg
cltd
neg
push
cmpsl
ja
xor
add
test
cmpsb
inc
xchg
movsl
cmc
scas
addb
cmpsl
xchg
pop
loopne
dec
pushl
push
fldl
jg
ss
or
push
or
rorb
sbbb
push
leave
jg
shrl
mov
and
inc
test
jbe
insb
mov
cmp
pop
ret
jbe
mov
rolb
push
cmp
push
cmp
pop
pop
adc
cmp
fisttpl
adc
cwtl
mov
cmp
icebp
ds
sub
push
jp
mov
mov
pop
or
mov
imul
jp
pop
mov
in
push
or
ljmp
shll
jle
cwtl
fs
shrl
mov
xchg
out
xchg
shrl
rcll
cmp
xorb
into
stc
sub
cltd
xchg
and
daa
pop
xor
add
std
jae
imul
mov
xchg
dec
inc
mov
vmovaps
dec
push
in
lret
bound
adc
inc
xchg
addl
cmpsl
cmp
push
sbb
pop
lret
call
sbb
out
hlt
lds
hlt
push
lods
push
leave
popf
aaa
repz
in
xchg
sahf
ficoml
mov
cld
sub
stc
imul
aas
lgs
movsb
test
gs
rcr
insl
inc
xchg
push
gs
mov
jmp
xchg
fmulp
pop
mov
daa
andb
cmpsl
je
stos
jo
adc
insl
rcl
cltd
add
xchg
mov
adc
jle
mov
stc
xchg
jmp
stos
add
dec
dec
cmc
clc
cld
and
enter
push
cltd
push
mov
push
cmc
in
or
inc
push
add
data16
mov
xchg
lea
inc
fidivs
pop
mov
insb
mov
je
dec
aad
pop
jne
leave
fimuls
ret
shrl
and
jno
lea
push
inc
jmp
or
rcrb
int
pop
sub
inc
in
mov
outsl
fwait
jae
shrb
adc
dec
mov
mov
les
inc
xorb
cltd
jmp
xchg
dec
fidivrs
jnp
or
dec
inc
int3
scas
and
dec
into
sub
push
repz
outsb
aaa
adc
xlat
subl
sbb
sbb
mov
std
icebp
movsb
inc
in
xchg
mov
dec
andl
out
fwait
lea
xchg
stc
ljmp
out
inc
aaa
mov
and
xchg
xchg
popa
cs
pop
fs
fisubs
push
inc
and
mov
lcall
lea
sub
insl
or
icebp
mov
mov
pop
mov
inc
rclb
loop,pn
movsl
cmp
cld
mov
jmp
call
insb
cmp
mov
fadd
jmp
lock
outsl
mov
cmp
pop
xor
addr16
imul
mov
push
std
or
insl
mov
rorl
xor
pop
mov
and
jae
call
ret
pop
inc
cmp
aad
add
mov
push
sub
fbstp
adc
int3
movsl
sub
hlt
leave
dec
popa
jge
imul
pop
leave
lret
push
in
pop
imul
push
bnd
mov
or
push
push
fcompl
pop
jno
ja
sub
shlb
ret
ja
scas
xchg
daa
and
adc
sti
stc
mov
movsl
stos
mov
lret
out
cltd
add
dec
icebp
lea
inc
push
lods
jmp
rclb
nop
sbb
push
popf
test
cmp
push
fisttpl
add
push
pop
mov
bound
mov
mov
jb
sti
mov
fisttpl
sahf
leave
in
test
mov
cltd
int
jo
ret
xchg
jae
jbe
sub
or
adc
xchg
cwtl
ja
adc
fisubs
or
in
imul
cltd
xchg
pop
mov
mov
jne
stos
push
lea
xchg
sbb
jecxz
push
dec
pop
fiadds
push
push
xor
leave
lahf
fucom
fistpll
rcll
xchg
mov
je
sti
sub
lcall
es
push
mov
jnp
int3
std
scas
movsl
ljmp
push
push
or
enter
mov
fdivs
dec
subl
shrl
and
cmp
negl
scas
mov
in
cmp
out
pop
jnp
loope
xor
mov
out
in
inc
xchg
notl
push
dec
gs
sub
into
xchg
in
nop
out
pop
cltd
out
sbb
out
call
mov
ret
pop
mov
in
xor
sub
ret
hlt
jle
rcrl
arpl
mov
and
in
rolb
mov
mov
add
and
icebp
aad
out
lahf
push
icebp
pop
mov
cmp
jns
inc
enter
stos
into
add
int
shlb
enter
aas
lds
adc
jbe
inc
test
lods
in
push
ja
mov
std
sbb
jbe
clc
push
sub
xor
test
daa
lock
pop
loope
call
test
xchg
cmp
lcall
jbe
shlb
push
cmp
dec
cli
pop
mov
inc
hlt
inc
jns
ret
andb
mov
sub
mov
mov
clc
and
dec
hlt
mov
addr16
call
nop
out
jbe
out
movsb
cmp
aas
inc
test
mov
push
je
pop
jge
mov
jno
and
adc
ja
cli
rcrl
and
notb
mov
fildl
loope
mov
mov
xchg
add
vpunpckhqdq
push
divl
jb
cmp
mov
cmpsb
inc
pop
out
sti
sub
pop
push
ja
iret
mov
mov
inc
repnz
or
mov
sbb
imul
inc
imulb
arpl
xchg
mov
sbb
shrb
xchg
or
stc
jno
fucom
inc
fnsave
mov
repnz
fisttps
push
inc
test
in
cmp
imul
xchg
sub
fcomp
data16
mov
push
or
hlt
push
testl
test
imul
mov
or
pusha
js
orl
or
and
testl
outsb
movsb
or
lea
ret
icebp
pop
cmpl
jp
pop
xchg
popf
insl
scas
sti
sti
mov
daa
aam
sbbb
or
or
adcl
fs
mov
fdiv
or
jae
mov
cmp
aas
xor
fwait
loopne
movb
mov
fnstenv
mov
test
gs
int3
cmp
and
jmp
jnp
dec
add
cli
xchg
gs
mov
mov
mov
cmp
push
in
mov
or
xor
stos
cwtl
inc
sahf
cmp
jns
repz
push
or
lods
mov
push
cs
pushf
jge
addr16
push
mov
int
hlt
add
mov
daa
push
mov
fcomps
addb
jo
lds
movsb
out
mov
dec
lea
dec
inc
dec
xorl
xchg
adc
cmp
imul
movl
addr16
imul
movsl
stos
in
cmp
dec
mov
push
dec
adc
lods
dec
mov
mov
je
lret
out
outsb
ljmp
fwait
ret
xor
pop
dec
psrlw
sub
xor
push
inc
mov
inc
lds
repnz
mov
scas
adc
stos
cmpsb
inc
cmp
ds
xchg
inc
inc
xchg
xchg
mov
aam
imul
xor
or
imul
pop
scas
outsb
cmp
lods
jp
das
std
sub
ljmp
fmul
enter
mov
dec
mov
inc
das
mov
mov
sub
lret
jmp
mov
inc
int
popf
mov
mov
adc
rolb
xorl
xchg
sub
loop
or
xchg
int
add
sub
xchg
std
mov
mov
out
into
inc
sub
or
outsl
pop
or
sub
dec
jne
push
shll
jnp
into
ds
int
stc
jle
pop
es
mov
in
icebp
pushf
movsl
push
mov
jb
bound
add
pop
jge
aam
insb
xor
stos
cmp
mov
push
sbb
imul
aam
mov
ret
cli
sti
and
mov
sti
mov
lea
cwtl
jne
jne
imul
imul
pop
pop
xlat
addr16
cwtl
mov
sub
jg
cmp
dec
cli
xor
jecxz
xor
lods
and
add
dec
nop
jp
icebp
int3
es
mov
flds
mov
pop
aad
cltd
stc
sub
jp
out
xchg
out
sub
enter
ja
in
xchg
adc
imul
push
jmp
in
lea
push
pop
mov
or
jne
addl
cs
negb
add
sbb
xchg
popa
test
cmp
pushf
inc
dec
sbb
insl
or
sub
std
mov
mov
stc
sub
fadds
jbe
sub
and
nop
ror
jle
xor
pop
add
insl
stos
repz
ja
ss
xlat
mov
hlt
orb
jnp
adc
call
pop
push
imul
mov
rcrl
scas
sbb
jbe
in
and
inc
pop
pop
xor
cmp
ss
int3
inc
sbb
add
divb
fwait
jae
push
lret
xorl
lock
call
fistps
xchg
icebp
fsub
popa
shll
sbb
jno
cmp
mov
jmp
jge
dec
popf
in
mov
les
mov
jne
mov
and
push
inc
sub
scas
jo
outsb
push
shrl
out
orl
fwait
test
imul
add
ljmp
gs
xchg
mov
mov
int
pop
or
cmpsl
push
mov
mov
add
adc
dec
mov
xchg
pop
sbb
lret
dec
dec
nop
push
push
rcl
xchg
rcr
mov
lcall
ja
lret
cmp
enter
sub
add
mov
and
sub
or
into
xchg
fdivs
scas
push
dec
mov
das
cmp
xor
mov
int3
and
mov
dec
pop
lcall
es
sub
adc
push
js
stc
rorb
jbe
and
es
clc
adc
pop
pop
loop
call
aam
jle
jp
or
int3
insl
ds
addr16
sub
js
popa
push
or
add
inc
test
push
jl
or
push
pop
daa
movsb
jg
int3
ret
sub
sbb
cwtl
pop
jae
add
test
loopne
addr16
hlt
je
adc
loopne
popf
adc
mov
repz
mov
mov
xchg
add
pop
scas
xchg
pop
test
sub
or
sarb
test
push
jo
jbe
inc
adc
mov
adc
sbb
lret
or
xchg
shl
inc
cmp
test
lcall
popf
dec
pop
and
es
test
xor
or
addb
xor
inc
mov
lock
mov
add
dec
pop
ret
inc
jno
testb
ss
or
jbe
sub
jae
lahf
adcl
imul
fst
and
inc
cld
sub
punpcklwd
cmp
test
and
gs
out
cli
inc
lods
int
aaa
test
je
fldl
mov
addr16
pushf
or
imul
mov
cli
cmp
jg
ret
test
and
or
add
fdivr
sbb
repz
mov
aaa
shll
push
mov
cmp
jnp
jmp
cmp
lods
nop
mov
ret
cwtl
or
cmpsl
mov
ja
insl
sbb
scas
dec
je
xchg
mov
dec
cmp
dec
push
shlb
adc
testl
pushf
out
xchg
and
imul
sbb
cmc
ds
pop
and
and
push
std
xor
pop
call
mov
mov
pushf
pop
pop
cwtl
push
jns
rolb
jnp
in
outsb
push
das
pop
xchg
mov
dec
rorl
in
xor
repnz
xor
xchg
lahf
mov
and
push
sub
into
cli
out
shl
xchg
jno
mov
std
or
mov
test
popa
cli
ss
mov
jno
inc
pop
loop
aam
mov
inc
sbb
jbe
outsl
push
jmp
dec
cmp
rcll
into
add
mov
roll
add
jns
lcall
es
mov
xchg
add
mov
call
hlt
inc
cltd
repnz
mov
xchg
inc
pusha
xorb
mov
inc
adc
inc
insl
dec
jnp
mov
sbb
cmpb
rcrb
fdivrl
test
stos
iret
jg
push
xchg
add
cld
cmp
dec
xchg
sbb
add
push
mov
int
xor
movsl
xor
roll
sub
inc
and
xchg
fs
push
int
das
jno
xor
mov
pushf
jno
inc
mov
push
shll
test
push
and
xchg
pop
cwtl
rorb
jmp
int3
cmp
add
mov
xchg
cli
mov
inc
inc
mov
add
xchg
bound
orps
dec
cmp
movsb
out
movsb
cmpsb
dec
into
fnstsw
pop
imul
cmp
dec
gs
shl
jbe
jno
into
popaw
jb
or
sahf
adcb
fsubrl
scas
mov
icebp
pop
fisubs
lods
add
mov
sbb
jbe
pop
sarb
stc
fnsave
ja
or
push
mov
das
and
out
cmp
fsts
inc
cld
push
mov
xchg
stos
sub
and
pop
xor
jle
jg
loopne
push
repz
mov
xchg
adc
in
in
cli
cli
lea
xor
push
mov
mov
loope
lods
dec
jecxz
inc
stos
icebp
movsb
dec
jecxz
jp
sarl
push
data16
or
in
shl
mov
jecxz
inc
test
inc
fstl
test
sub
mov
pop
xchg
int
fsub
pusha
fsubrs
mov
adc
insb
mov
push
push
push
jne
ror
jne
pop
add
dec
lea
outsl
inc
out
or
pop
mov
push
int
jne
adc
dec
sti
adc
sub
inc
inc
pop
inc
aad
or
and
fsubrs
dec
inc
pop
fstpl
push
arpl
dec
shrl
mov
push
xlat
add
cmp
mov
mov
shll
or
movsl
sub
mov
inc
fdivrl
and
mov
es
icebp
xchg
jb
mov
pushf
xchg
jl
add
pop
ljmp
or
or
cmp
movsb
lds
mov
dec
loope
mov
or
and
sbb
sbbl
push
stos
jmp
adc
jle
cli
xor
sub
out
test
push
js
mov
lret
mov
and
rcrb
out
ret
outsl
mov
mov
idivl
cld
cmp
cmpsb
loopne
loope
in
rcl
mov
fmull
inc
lahf
inc
ds
cmp
mov
or
inc
sub
mov
adc
iret
adcl
xor
jg
mov
pop
push
lds
fwait
mov
push
mov
aam
outsl
pop
pop
mov
push
std
push
adc
int
btc
cld
push
insb
ja
pusha
jb
aad
icebp
cmp
push
pop
test
sarl
sub
adc
je
dec
mov
repz
jbe
sbb
pop
shl
sahf
inc
pushf
push
lods
xor
out
lods
inc
mov
add
jmp
insl
es
out
mov
mov
nop
and
fcmovnu
jmp
test
mov
fisttpl
fldl
in
xchg
cmp
int3
pop
call
mov
jecxz
cs
int
xchg
jmp
pushf
xor
sbb
push
xchg
neg
insl
mov
mov
cmc
inc
push
loope
nop
ret
cmp
adc
loop
cmc
sbb
in
dec
inc
ficomps
pusha
jo
xor
mov
mov
xlat
fdivl
sub
xor
ss
fildll
add
in
push
mov
mov
inc
xchg
sub
xor
cmovge
stos
js
xor
outsb
push
push
jge
jns
and
add
outsb
pop
xor
or
sbb
fs
jo
inc
cli
dec
cmp
orl
rorl
cmpsl
je
test
loop
push
ret
xor
aas
and
xor
adc
sbb
mov
je
cmp
mov
sti
adc
xor
scas
push
mov
lcall
lcall
sbb
pop
pusha
mov
repnz
push
or
xchg
stc
popf
xor
sub
loope
int3
sbb
jecxz
in
xchg
and
sub
out
inc
cs
jg
dec
xor
fbstp
xchg
xor
xor
imulb
shrb
icebp
movsb
lods
shll
ret
jo
pop
and
push
pop
dec
fisttpll
lret
mov
outsb
push
hlt
pop
xchg
push
and
mov
jnp
movsb
or
add
cli
bound
pop
adcb
push
repnz
mov
ss
xchg
data16
sub
icebp
pop
std
sub
mov
roll
jmp
pusha
cmpsb
rclb
nop
insb
loopne
or
push
dec
stos
pop
sahf
stos
xor
xor
inc
dec
out
jecxz
inc
clc
mov
lret
icebp
xchg
or
loope
push
or
jecxz
push
jbe
iret
dec
sahf
jecxz
rcll
sahf
popa
std
hlt
cmp
inc
ficoms
leave
test
cmpsb
test
xor
andl
xor
fucomi
cmpsl
out
ss
add
es
pushl
aaa
std
mov
fdivrp
out
pop
in
out
push
sbb
test
test
test
add
movsl
mov
jp
adc
scas
test
sub
arpl
push
clc
lods
daa
sbb
or
inc
push
mov
mov
call
out
sar
jbe
mov
leave
dec
int3
cmp
ljmp
in
cmp
and
and
lock
cmc
lds
fstl
mov
and
xor
stos
or
jge
inc
push
movsl
dec
push
mov
sbb
and
mov
inc
in
clc
jmp
ret
push
scas
dec
xchg
xchg
jae
and
icebp
decl
dec
cmp
sub
sbb
mov
mov
or
pop
xor
mov
xor
faddl
jo
hlt
es
push
mov
data16
sbb
jns
ss
stos
fsubrl
push
sub
sbb
push
sbb
inc
aas
mov
jnp
rolb
push
lcall
ret
popl
adc
lcall
addr16
cmp
subb
adc
mov
sub
jnp
sti
stos
pushw
jbe
cli
sub
mov
pop
notb
inc
arpl
push
xor
xor
arpl
out
xchg
sbb
cmp
push
leave
xorl
sti
idiv
mov
fsubl
sqrtps
pop
idiv
ret
mov
pop
add
outsb
dec
sbb
and
outsb
shll
lcall
jno
pop
add
mov
divl
and
sub
xchg
sbb
sbb
mov
iret
imulb
mov
jmp
stos
push
out
mov
cmp
pop
nop
call
scas
inc
fsubs
xchg
ja
daa
sbb
aam
push
insl
add
repnz
ret
pop
pushf
xor
add
adc
push
shr
fidivs
lcall
push
dec
mov
insl
fiadds
sbb
xchg
cmc
lds
ljmp
push
in
ja
ss
jge
jg
das
inc
and
dec
out
sti
arpl
int
movsb
jg,pn
sbb
or
mov
scas
repnz
into
and
jo
and
jbe
push
dec
sahf
icebp
cmp
or
pop
sbb
scas
out
jle
sbb
cmp
int
sbb
pusha
out
cmp
mov
or
inc
mov
mov
lods
push
out
std
jle
lret
outsb
pop
inc
lds
sub
mov
cmp
insw
decl
lods
add
fdivl
and
into
push
push
inc
imul
mov
repz
or
inc
dec
lea
lret
add
enter
xor
lock
fdivl
addr16
pop
dec
pop
outsl
pop
push
das
sub
into
push
sar
icebp
fwait
pop
pop
lret
adcl
xchg
xor
fcoml
lcall
or
aaa
cwtl
into
out
cmp
or
mov
fcoms
testl
arpl
or
repz
sahf
repnz
cld
add
loope
ret
push
cmpsl
xchg
jbe
xchg
add
stc
shrl
push
mov
stos
mov
dec
xchg
orl
or
insb
push
sbb
mov
nop
dec
test
mov
inc
mov
fildll
les
in
in
inc
dec
int
stos
out
sbb
dec
add
repnz
cld
bound
test
jno
iret
pop
in
test
mov
movsl
sbb
xorb
test
loop
ds
ret
int
cmp
mov
sbb
repz
iret
add
xor
mov
lcall
outsb
add
pushf
fidivrl
sub
add
add
mov
cmp
addb
adc
add
xchg
xorl
leave
push
movsl
push
push
pop
push
leave
add
jbe
insl
loopne
pop
pop
daa
push
or
inc
mov
cli
add
jge
es
fwait
xchg
imul
loop
pop
pop
push
push
stc
xchg
push
lret
push
es
jno
rcr
or
add
push
test
push
jo
add
mov
aaa
out
add
dec
pop
orl
std
aaa
negl
push
flds
rorl
adc
cmc
sbb
test
aam
int3
aam
jns
test
mov
rclb
mov
lods
dec
fs
out
fadds
pop
js
loopne
xor
cmpl
ljmp
mov
mov
fxch
dec
mov
mov
mov
xlat
push
iret
xor
mov
std
inc
or
xchg
xlat
iret
add
outsl
dec
fdivr
xlat
push
clc
in
dec
adc
mov
bound
jno
out
std
jp
insb
add
pusha
push
testb
loope
jo
jns
imul
dec
in
jb
xor
jmp
push
mov
bound
bnd
insb
sbb
cmpsb
mov
mov
pop
sub
mov
xor
lret
repz
pop
fidivs
popl
jge
test
dec
ljmp
cmp
cld
dec
adc
mov
aad
fadds
insl
aaa
clc
into
sub
jge
iret
dec
mov
mov
mov
jle
rorl
mov
orb
push
or
das
mov
sahf
rorb
adc
xlat
xlat
jge
xchg
mov
clc
or
test
pusha
imul
xorb
rcrl
bnd
jnp,pt
cmp
icebp
dec
dec
dec
dec
rep
loop
xor
negl
jp
add
testb
cmpsl
lds
data16
jmp
mov
imul
mov
fildll
xor
cmp
je
push
or
push
jp,pt
jb
dec
cwtl
adc
adc
in
push
scas
jge
cmp
adc
pushf
flds
sti
dec
xchg
sub
fldl
les
sub
mov
dec
out
adc
test
daa
lea
jns
pop
or
lcall
jl
adc
gs
repnz
enter
xor
leave
outsb
scas
push
or
add
repnz
call
hlt
jmp
jle
xor
cmc
dec
sbb
psllq
into
fwait
sahf
inc
outsb
loopne
mov
and
jae
pusha
js
icebp
fcomps
mov
stc
xor
pop
subl
sub
adc
idivb
inc
ljmp
or
xor
fs
fmul
ret
jne
fisubrl
test
cmp
inc
jp
int
sbb
inc
ss
lods
or
fistl
xchg
scas
in
jbe
lds
imul
mov
mov
hlt
sbb
mov
lret
inc
xor
cwtl
addr16
pop
and
imul
push
rcr
sub
jns
dec
sub
push
mov
je
mov
cmpl
in
imul
jb
mov
jnp
inc
arpl
or
fucomip
mov
xor
dec
adc
mov
imul
popw
or
adc
and
test
inc
and
jp
loop
nop
mov
jnp
aas
mov
fdivr
and
mov
data16
inc
dec
insl
xor
or
cmp
push
adcb
ja
add
movsl
cmpsb
xor
shll
and
mov
pop
roll
divb
ja
sahf
sarl
mov
cmp
dec
push
or
shrl
sbb
or
rcr
fs
test
sbb
repnz
cmc
imul
cmpsl
bound
add
sub
in
xor
pushf
push
jmp
test
fmull
jbe
mull
or
sub
cmp
and
and
jb
rcrl
add
push
inc
adc
lods
mov
jnp
xchg
cli
jne
les
lock
js
cmc
jae
jnp
push
mov
out
xchg
mov
dec
add
roll
das
push
xorb
ljmp
ja
xchg
fdivs
movsl
mov
or
add
roll
xor
dec
jmp
loop
js
sub
adc
imul
ret
mov
insl
dec
int
inc
push
dec
xchg
pop
cmp
push
hlt
xchg
imul
fldenv
leave
idivl
sub
adc
adc
push
jmp
jle
test
frstor
mov
sbb
mov
hlt
fistl
push
sub
push
xchg
sub
inc
cmp
int3
jb
push
xchg
and
icebp
test
loope
shll
push
or
sbb
jmp
fstpt
aad
arpl
jbe
shll
std
push
sbb
sbb
mov
or
push
mov
jns
mov
fwait
lcall
and
adc
test
mov
mov
inc
lods
bound
nop
xchg
sub
lods
jne
pop
out
cmp
les
pop
sbb
jnp
inc
and
arpl
jbe
imul
std
sbb
or
dec
sbb
cwtl
lea
inc
inc
aam
es
roll
mov
fwait
mov
out
mov
sbb
mov
add
xchg
pop
and
rcll
mov
jecxz
mov
inc
fdivp
aaa
xor
jno
in
push
sbb
popf
gs
gs
adc
fistpll
into
mov
sti
xor
call
dec
idivb
iret
cmp
fnsave
or
decb
sbbb
lcall
lret
push
sub
push
and
stos
pop
insb
push
xor
sub
out
stos
push
mov
cld
inc
jg
add
sub
insl
cs
lahf
push
push
cmpsl
imul
add
push
lcall
or
cmpsb
push
ds
iret
dec
jo
stc
dec
mov
sbb
or
add
icebp
enter
pushf
sub
sbb
xchg
outsl
arpl
neg
lds
mov
push
jp
mov
sub
movsb
nop
add
sti
popa
pop
pusha
adc
or
push
cmpsl
adc
mov
dec
sub
arpl
test
dec
int3
dec
add
enter
inc
int3
aas
xor
xchg
outsb
xor
or
hlt
cmpsl
out
cmpsb
push
mov
or
movsb
sahf
mov
mov
arpl
out
or
loopne
sahf
sub
fadds
lods
lock
mov
push
add
adc
add
mov
or
daa
mov
adc
adcb
cltd
in
xchg
fsubr
mov
xor
test
cmpsl
cmp
nop
shrb
ja
data16
imul
js
lods
xchg
jb
std
mov
cmp
xorb
lock
ljmp
lock
fstps
push
mov
mov
es
sbb
cmp
in
sbb
dec
std
iret
mov
add
sub
rolb
dec
les
mov
sbb
cmp
sbb
leave
push
lods
in
ljmp
ret
clc
adc
add
std
inc
pop
xchg
cli
cld
sar
jmp
ret
out
enter
cld
mov
std
sbb
cwtl
inc
sbb
xor
icebp
pop
vmovapd
mull
jbe
mov
icebp
pop
inc
mov
xor
dec
push
and
in
push
movsb
fucomp
loopne
jns
add
std
imul
or
dec
ja
in
jns
cmp
mov
xor
fsubl
cvtps2pi
cli
imul
adc
fwait
xor
ljmp
or
push
mov
js
std
jmp
push
int3
mov
fcompl
std
push
shlb
mov
fs
jmp
mov
mov
and
les
call
loope
and
sbb
sahf
inc
mov
inc
aaa
add
icebp
mov
std
mov
stos
mov
lods
jg
lods
in
in
pop
mov
cmp
push
test
out
andl
cmc
inc
mov
push
mov
or
lea
hlt
cmpsb
cvttps2pi
stos
mov
dec
notl
mov
dec
js
jae
xor
add
popf
sbb
adc
data16
push
repz
xchg
ss
pop
add
sbb
mov
jne
lock
loop
aam
dec
adc
hlt
imul
lret
mov
lea
outsl
push
push
jle
loope
js
ja
mov
dec
data16
jno
jmpw
inc
cmpsb
pop
outsb
ss
iret
jmp
sarb
cli
add
adc
pop
inc
cwtl
dec
push
sub
fwait
jl
scas
push
pop
aad
add
mov
lret
adc
cltd
ret
sbb
or
inc
jae
add
adc
ds
out
or
pushf
out
sbb
adc
mov
mov
dec
loop
je
das
mov
sub
hlt
lods
sbb
daa
call
aas
inc
je
mov
cmp
test
dec
repz
push
aaa
mov
inc
aad
das
insb
jbe
xchg
or
mov
ret
mov
adc
cmpsl
adc
mov
cltd
das
cmc
shlb
test
adc
jnp
adc
mov
jmp
cmc
cld
mov
cmp
imul
clc
leave
inc
fs
add
imul
mov
mov
lods
xor
call
popa
xor
cld
jbe
pop
sahf
mov
dec
in
pop
lret
jo
pushf
mov
jns
sbb
push
cmp
jge
cmp
push
mov
add
psubsb
jbe
pushf
movsb
je
out
sbb
cld
fdiv
add
or
lcall
movsb
sub
scas
jno
cmp
ss
jno
push
lods
jp
fldt
xchg
dec
notl
xchg
scas
loop
mov
hlt
outsb
dec
outsl
mov
pop
cmp
or
cmpsb
dec
lret
jo
test
aaa
jge
pop
fistl
repnz
jmp
jecxz
jp
outsb
mov
mov
adc
ljmp
fldenv
push
imul
cmp
jo
xor
cmpsl
ret
jae
cmpsl
mov
shl
xor
or
sub
jno
in
inc
daa
test
add
ds
ds
mov
pop
xchg
cwtl
movsl
loopne
fisubl
test
repz
push
lock
jg
cmp
mov
dec
push
mov
sbb
cmc
aad
mov
push
sbb
xor
mov
push
mov
in
jmp
orb
and
cmp
aad
cwtl
gs
adc
jo
jmp
sub
mov
xchg
ret
add
in
xor
std
xchg
pop
pop
adc
not
and
addr16
lret
icebp
stc
fistps
ret
pop
nop
inc
cmpsl
cmp
adc
mov
arpl
and
mov
or
xor
sbb
sbb
pop
xor
lods
push
lea
lods
lahf
jno
dec
cld
mov
jnp
inc
add
sub
mov
xchg
jle
pop
or
pop
mov
imulb
repz
mov
push
mov
andl
adc
pop
xor
cld
fwait
addr16
pop
push
fucom
push
cli
loopne
pop
pushf
jb
rolb
inc
jbe
hlt
mov
sbb
pop
mov
jne
mov
cmp
xchg
jno
repz
jmp
movsl
push
mov
out
jecxz
repnz
das
cmp
xor
enter
iret
pop
xchg
cmc
sub
mov
ficomps
mov
jns
fdivrp
push
jmp
loopne
dec
adc
dec
mov
push
jp
or
or
fiadds
xor
push
push
nop
xor
scas
jbe
gs
cmp
faddl
mov
or
xchg
cmp
testb
mov
xchg
jl
data16
fdivs
and
ljmp
out
fmull
inc
mov
hlt
jg
jno
or
xor
and
dec
fcoms
icebp
and
cmpsl
adc
into
sbbl
push
js
notb
lcall
out
ret
shlb
fiadds
mov
push
xchg
sarb
or
push
sbb
clc
out
and
bound
ror
out
orl
xor
or
psubsb
subl
adc
push
jb
out
hlt
dec
repz
fnstsw
jbe
jbe
cwtl
mov
movsl
xchg
or
rolb
mov
mov
inc
fs
jno
out
cmpsb
aas
add
mov
clc
inc
pop
or
movsl
out
mov
lods
scas
or
ret
andb
into
and
or
int3
sbb
les
mov
inc
mov
es
in
jae
test
fwait
adc
add
dec
push
sbb
adc
popf
pushf
mull
jg
loop
rcr
test
cmp
lock
aas
out
lret
mov
lds
xchg
sbb
into
lock
das
cmp
adc
mov
shlb
test
pushl
adc
jg
add
push
arpl
orl
fcompl
mov
xor
jg
dec
xchg
lods
insb
xor
push
xlat
mov
adc
popa
in
mov
daa
push
add
dec
dec
stc
dec
movsb
andb
mov
xor
cmp
xor
stc
xchg
scas
sbb
lods
mov
loop
xor
sub
mov
movsb
fidivs
dec
cmp
pusha
or
hlt
negb
out
cli
jmp
cmpsb
popl
pop
enter
lock
inc
sub
sbb
repnz
scas
jnp
in
inc
mov
stos
in
and
loope
aad
fimull
pop
add
xchg
nop
stc
scas
xor
xchg
push
bound
inc
bound
cmp
dec
sbbb
rcrb
dec
cmp
cmp
sti
es
add
cmp
stos
pop
sbbl
addl
ds
adc
cld
hlt
push
orl
sub
enter
sti
cmp
es
out
xchg
sbb
movsb
jnp
or
cmc
cmc
aam
ja
jp
leave
mov
cld
xchg
mov
fldl
or
leave
xorb
sahf
dec
cwtl
arpl
sub
leave
add
add
pop
inc
fsubrl
inc
fists
imul
cmp
or
ds
sub
mov
fbstp
insl
inc
stc
mov
test
lret
lods
adc
sbb
push
addl
popf
out
or
lcall
xchg
sbb
lods
into
daa
in
das
sub
push
sub
mov
arpl
popf
sarl
mov
insb
push
cltd
jp,pn
sbb
scas
ja
lock
xchg
scas
cmpsb
sbbl
je
decl
push
enter
dec
xchg
xchg
add
xchg
and
leave
cld
mov
and
mov
xchg
in
leave
push
aad
je
pop
enter
push
jmp
and
cld
mov
mov
outsb
rol
jecxz
and
or
dec
sub
lea
pop
jne
rcll
sbb
xor
roll
push
cmp
imul
push
int
shl
cld
xor
stc
movsb
sub
and
ret
rcr
jge
pop
adc
mov
in
inc
cmp
pop
fdivrl
dec
leave
jmp
shrl
in
movsl
lcall
sub
fucomi
jg
adc
mov
rcll
push
scas
and
push
mov
or
in
scas
jl
inc
sub
mov
mov
inc
mov
std
repnz
cs
mov
add
imulb
out
mov
fmuls
cmp
or
pop
push
fldlg2
mulb
adc
push
imul
mov
stos
sbb
daa
jmp
fnstenv
cld
ds
inc
dec
pop
cli
in
pop
out
pop
add
jg
leave
push
pushf
shrb
xchg
ja
pop
add
sub
popa
mov
inc
divb
test
xor
jae
xor
pusha
or
jl
pop
das
pop
in
add
sti
leave
jl
adcl
movsl
xor
cmp
imul
and
idiv
adc
dec
adcl
cmp
adc
loopne
aam
int3
mov
sub
ds
push
out
movsb
inc
adc
mov
adc
subb
or
or
inc
and
std
sub
push
bound
add
pop
jnp
push
and
adc
js
xchg
mov
nop
inc
cmp
movsb
stos
dec
subl
xorl
loop
daa
dec
mov
in
ret
call
and
adc
fnsave
xor
addr16
lret
add
push
sti
outsb
jo
lds
dec
loope
mov
out
mov
arpl
dec
cmp
daa
arpl
add
and
pop
adc
ret
ss
clc
call
cmpsl
stc
xor
jo
or
test
mov
push
ss
xchg
insb
jecxz
push
repz
stos
inc
mov
repnz
cmp
pop
inc
mov
sub
fucomi
fnsave
lea
cmpsl
call
or
or
mov
push
sub
inc
sahf
les
or
cmp
jge
mov
adc
loopne
mov
jge
lods
lea
clc
sbb
fs
lret
ret
inc
ret
ret
mov
jne
je
push
adc
and
jno
test
push
lea
loope
inc
das
pop
int
sbb
je
xchg
dec
mov
jmp
fimuls
add
out
in
sub
jne
gs
inc
inc
jle
pop
pop
xor
cwtl
aaa
pop
add
loope
push
aas
andl
nop
jg
jnp
jl
cmpsl
jno
push
push
ret
cmp
dec
adc
cmpb
xchg
sbb
xchg
loop
std
xchg
cmp
mov
or
fnstcw
rcll
push
arpl
sub
roll
and
add
out
cmp
pop
or
dec
pop
shll
push
in
popa
movsl
call
icebp
ja
push
iret
int3
fsubl
mov
dec
js
int
icebp
in
lods
sbb
aaa
mov
push
stc
cmp
mov
mov
fs
and
mov
sbb
sbb
pop
lahf
lods
xchg
inc
inc
cmp
sub
and
popf
lahf
lret
xor
adc
adcb
add
pop
pushl
mov
js
lret
neg
imulb
mov
imul
add
pop
mov
mov
and
mov
jmp
pop
jns
out
xor
xchg
or
cli
mov
movsl
int3
leave
jno
add
inc
add
in
loop
mov
push
xchg
mov
cs
adc
lds
sarl
sbb
cmp
xor
aam
pop
jne
jb
xchg
into
scas
adc
push
push
enter
mov
cltd
testl
cmp
dec
mov
add
jae
xchg
mov
sbb
ror
hlt
push
sbb
rolb
push
out
repnz
mov
push
xchg
adc
ret
jp
mov
dec
xchg
and
add
dec
xor
add
aaa
adc
adc
or
shrl
cmp
fwait
push
andl
pop
enter
sbb
dec
mov
call
xlat
gs
sbb
xchg
out
or
fists
xor
cmp
xor
pop
insb
mov
frstor
mov
push
dec
jg
shrb
test
mov
or
push
fimull
lahf
dec
mov
dec
push
lods
sub
pusha
push
push
jo
xor
push
js
int3
and
push
mov
sbb
lahf
pop
cmovo
sar
movsb
or
jecxz
lret
jg
mov
loop
jle
and
push
xchg
mov
cmpsl
xchg
add
push
xchg
inc
sarb
mov
push
push
push
sbb
cwtl
test
repz
cli
jecxz
adc
or
out
outsl
mov
std
cmp
mov
js
inc
push
cmc
mov
push
push
arpl
sbb
stc
out
es
adcb
adc
aad
aas
cmp
int
push
push
icebp
push
inc
repz
mov
cs
aaa
mov
xchg
xchg
push
mov
xchg
rolb
pusha
pop
arpl
and
pop
repnz
idivb
add
adc
mov
loope
fsts
repnz
mov
adc
xchg
cwtl
aaa
pusha
je
lock
leave
add
aad
xor
lret
mull
rorl
sti
nop
stos
test
insl
mov
repz
fwait
enter
frstor
icebp
pop
shrl
adc
inc
dec
cli
and
out
popa
int3
xlat
xchg
push
repz
xchg
add
cmp
aam
stc
mov
leave
je
out
and
add
arpl
jbe
mov
xor
and
lds
repnz
xchg
fcmovu
cli
and
pop
pop
inc
adc
sub
cli
pop
jnp
sbb
jl
xorl
lock
fsubs
stc
clc
or
sbb
out
loopne
add
cs
lret
out
lods
mov
std
shll
lahf
add
push
adc
loop
aas
xchg
xor
xchg
inc
es
dec
inc
repz
xchg
pop
pushf
iret
ret
pusha
ret
ss
rorl
addl
in
dec
pop
loopne
xchg
mov
xchg
push
ss
and
inc
mov
add
insb
inc
icebp
mov
sbb
imul
push
mov
hlt
pop
cmp
cli
inc
push
mov
into
je
std
sub
cmpsb
lret
jbe
out
rolb
aad
fimuls
xorb
push
xchg
lds
loop
xchg
outsb
out
push
push
mov
jl
es
mov
pop
mov
mov
test
mov
rcrb
mov
test
pop
adc
xor
xor
mov
mov
cs
add
int
data16
shll
enter
and
lods
add
shr
jae
stc
inc
push
iret
adc
movsb
push
incb
movsb
cmp
pop
out
out
inc
ret
rcrb
clc
in
dec
daa
enter
daa
cmp
inc
nop
or
sub
inc
xchg
cwtl
insb
movsb
and
nop
test
pop
lret
mov
push
push
aad
shrb
sbb
cmp
mov
out
mov
and
icebp
clc
push
out
das
lea
popa
and
outsl
sub
mov
adc
jg
mov
push
in
pop
movsb
pop
add
push
mov
into
cwtl
jge
inc
fcmovnu
cwtl
mov
cmpb
into
int
jge
xchg
mov
inc
push
fsts
dec
cmpsb
shrb
stos
jge
and
xchg
orb
dec
out
pop
sbb
push
ds
and
and
jae
sbb
icebp
or
adc
cmc
xchg
mov
jne
cli
push
add
pop
das
mov
sbb
mov
imul
mov
dec
movsl
or
dec
push
test
xchg
lods
insb
cli
pop
lods
inc
add
lock
call
lds
loopne
cmp
cmpsb
sbb
jg
data16
decl
jbe
clc
aad
mov
and
jnp
cmpsb
inc
loopne
xor
mov
fnstcw
addr16
cli
cld
adc
jmp
rcrb
or
xchg
or
push
incb
jb
push
in
and
bound
mov
in
fldt
adc
shlb
jp
stc
mov
mov
mov
or
xor
lds
aam
or
mov
cmp
mov
sub
inc
sarb
jbe
xor
fdiv
ret
lods
lock
sbb
add
jbe
scas
sbb
repz
popa
mov
adc
fcomi
cli
mov
pop
ret
test
mov
push
pusha
jp
add
xlat
mov
add
loope
push
mov
daa
mov
push
add
sub
push
mov
fbld
es
jae
in
movsb
jne
dec
sbb
idivl
test
fwait
sbb
mov
sub
mull
push
jne
es
mov
movsb
lret
add
test
mov
jge
cmp
inc
outsl
icebp
xlat
pop
push
adc
in
xchg
push
jg
scas
adc
adc
lock
aam
inc
test
xor
mov
adc
popf
cmp
hlt
push
push
mov
push
push
repnz
pop
rcrb
cmc
pop
enter
in
loop
fs
push
sub
push
pop
sub
inc
pop
adc
fucomp
aas
push
xchg
in
sbbl
mov
push
rcl
mov
push
loopne
xlat
adc
movsb
cmc
in
jno
add
cwtl
sbb
fwait
inc
xchg
frstor
stc
or
sub
cmp
push
pushf
pop
dec
pushf
mov
dec
xor
xchg
test
data16
sub
lcall
adc
jo
bound
xor
add
in
fldt
aas
inc
sbb
sub
cmc
aas
xchg
mov
dec
insl
movl
ret
loop
dec
aaa
arpl
inc
mov
and
pop
in
xchg
aad
fidivs
pusha
cwtl
push
repnz
pop
xchg
jmp
lcall
xor
push
andb
repnz
stos
jns
call
add
es
pop
cmp
xor
xchg
mov
xor
loope
cmp
loope
cmpsl
cmc
push
adc
pop
dec
jns
sub
out
pushf
sbb
cwtl
loop
fcmovnu
shrl
iret
loopne
mov
mov
mov
fdivrs
faddp
scas
adcl
scas
lahf
mov
out
out
cmp
call
pop
sub
hlt
popl
xchg
ret
out
sbb
xor
add
push
data16
mov
inc
cmpl
cmpsl
and
push
add
sub
inc
test
ja
push
mov
mov
mov
add
pop
inc
mov
out
arpl
pop
leave
movsbl
gs
stos
iret
cmc
cmp
call
hlt
fisttpl
shrl
mov
outsl
repnz
xchg
and
xor
cmpsb
subl
fwait
out
lret
jle
mov
mov
cmp
xor
push
xor
das
xchg
xor
out
sbb
sub
mov
divb
lds
repnz
lds
into
stos
divl
movsb
sti
test
fcmovne
inc
int
es
shl
xor
mov
out
sbb
insb
sbb
dec
mov
imul
int
and
cwtl
in
lahf
or
lds
mov
aas
gs
lock
pop
or
aaa
pop
loopne
mov
les
sbb
pop
fs
call
add
rolb
jb
pushf
lea
adc
or
mov
hlt
sti
aam
clc
pop
jae
leave
mov
xlat
pop
sbb
cmpsb
dec
daa
and
dec
mov
push
loop
int3
mov
pop
lahf
jl
out
fildl
out
rolb
push
lods
sahf
pop
outsb
pop
jb
fistpll
shll
lods
dec
mov
and
dec
in
stos
movsb
mov
adc
into
rcll
fchs
mov
pop
lret
in
loop
stos
imul
enter
es
std
lock
sub
inc
mov
in
pop
cli
xchg
sub
std
jbe
push
jae
pop
dec
hlt
adc
cmp
lods
sub
rol
pop
cmp
inc
and
or
fwait
dec
scas
das
jne
dec
ss
sub
sub
sahf
lea
rcl
xlat
jae
es
jo
out
mov
add
jl
pusha
mov
das
mov
imul
insl
mov
pop
daa
pop
and
mov
adc
les
xchg
mov
xchg
sbb
out
pop
push
xor
mov
ss
scas
push
push
pop
jno
sub
ficomps
jmp
fdivrl
icebp
cmp
jge
mov
aad
mov
mov
xor
jne
testb
shlb
aas
inc
and
sbb
mov
fs
jo
cmp
sbb
pop
in
cs
std
jne
jbe
arpl
das
leave
pop
mov
lods
mov
sahf
cmp
push
test
leave
ss
out
out
mov
dec
loop,pn
xorl
movsb
cwtl
stos
push
lods
and
pushf
rclb
and
pop
dec
out
daa
or
dec
or
jns
push
lods
jns
mov
rclb
mov
fwait
jae
jl
subl
lcall
dec
hlt
mov
cli
lret
scas
imul
div
mov
mov
orb
xchg
mov
pop
xor
enter
inc
adc
leave
dec
cmp
sbb
outsl
lret
fwait
call
js
popa
sub
cmp
in
dec
fmulp
jb
xchg
test
cmpb
mov
stc
mov
xchg
push
orl
insb
fmull
pop
fs
pop
pop
js
lcall
adc
loopne
clc
sub
cs
arpl
enter
inc
negb
jnp
call
test
cmpsb
popf
into
scas
loop
out
rol
test
js
out
lret
aaa
fdecstp
stos
xorl
and
shlb
xchg
rclb
sti
pop
push
mov
pop
arpl
xor
repnz
insb
ffreep
mov
sbb
cmp
mov
lods
and
rcrb
push
pushf
pusha
or
pushf
mov
xor
push
pop
xchg
xchg
adc
iret
iret
mov
mov
jo
mov
cmp
hlt
xor
cmp
xor
mov
ret
push
mov
aas
fwait
push
test
mov
pop
adc
js
push
adc
ret
pop
sub
xorl
pop
and
pop
adc
clc
sarb
fcmovnb
jg
sub
sbb
fidivrs
add
inc
je
sbb
inc
loopne
sub
sahf
jle
sub
ljmp
jns
insb
ss
xlat
outsl
sub
and
repz
ret
mov
sahf
xchg
dec
lret
or
outsb
xchg
dec
std
incb
push
sbb
adc
mov
aaa
mov
aam
gs
and
in
and
fmuls
jl
jae
pop
jp
in
es
mov
shll
push
loop
lret
les
adc
popa
jecxz
test
fcmove
cmpsl
lea
jg
jne
pop
sub
rcll
dec
jns
enter
mov
lahf
and
mov
insb
jae
mov
sarl
dec
shlb
adc
and
in
sub
leave
pop
xchg
psubb
mov
mov
das
inc
call
leave
fcomps
xchg
lods
fistpll
mov
lret
cli
clc
addb
movzbl
mov
sub
stos
xchg
xchg
pop
jge
cmp
pop
orb
xlat
xchg
mov
cmp
jno
and
mov
inc
lock
fstpl
mov
lock
loope
ja
stc
lret
fistpl
ficompl
cmp
push
icebp
mov
adc
cmp
lods
sbb
add
mov
push
lods
push
push
jnp
loopne
xchg
xchg
int
xchg
cltd
shlb
fimuls
aaa
add
ror
xchg
fs
popf
sub
outsl
or
std
push
mov
xor
sbb
jmp
cwtl
fldl
inc
sbb
push
push
mov
iret
xchg
jg
dec
sub
cmp
or
or
popa
sbb
fistpl
adc
faddl
fxch
cmp
test
pavgb
fcmovne
pusha
mov
out
add
cmp
andb
xchg
sarb
inc
in
jg
add
cmp
stc
and
lcall
cmp
fidivs
inc
lret
test
shlb
je
outsl
jb
mov
pop
imul
pop
fwait
xor
mov
mov
mov
sub
ret
push
pop
sbbl
jns
xor
inc
ret
xor
add
xchg
outsb
dec
hlt
inc
insb
imull
jle
outsb
jne
sbb
fisubs
cmp
inc
adc
call
mov
stos
xor
cltd
pop
pop
xchg
dec
out
mov
jb
jns
nop
adc
outsb
js
pop
nop
imul
enter
in
fisubs
pop
or
adc
mov
dec
push
nop
cli
dec
jge
or
inc
xlat
push
es
jmp
sub
sti
lcall
mov
xor
cmp
sub
fmull
dec
insl
das
mov
test
xchg
adc
js
imul
out
sub
stc
dec
xchg
push
push
fisttpll
outsb
mov
pop
and
negl
add
lods
mov
cmp
stc
adc
push
repz
push
pop
sbb
pushf
rolb
sbb
cmpsb
cmp
xor
montmul
cmpsb
inc
mov
cmp
mov
mov
jp
mov
mov
push
popf
test
pusha
adc
test
enter
push
lret
jno
shll
cmp
add
hlt
mov
negl
adc
std
sar
mov
xor
jle
leave
inc
cmpsl
bound
push
cmp
lods
and
leave
jge
bnd
xchg
mov
imul
pop
out
push
les
dec
movsb
xor
cwtl
or
push
mov
data16
push
loop
jg
int3
jg
push
ret
xrelease
fmuls
pop
mov
inc
rolb
push
xchg
loopne
xchg
ret
lcall
mov
inc
add
out
gs
inc
jmp
sbb
flds
test
pop
sub
xor
sub
cltd
add
adc
inc
jmp
pop
inc
sbb
or
add
js
mov
lahf
insl
aad
out
dec
push
fidivrs
lahf
rcrl
add
fwait
sbb
xchg
outsl
test
nop
stos
and
xchg
jmp
scas
xor
das
iret
rcrb
jno
add
jnp
ret
pop
in
mov
inc
pop
mov
call
jmp
ret
mov
jp
mov
pop
das
mov
dec
out
loopne
scas
lods
hlt
adc
xor
add
bound
add
shlb
pop
cmp
mov
jl
mov
lret
mov
aaa
inc
sub
out
outsb
pop
push
jne
and
mov
bound
sti
iret
sbb
leave
lock
dec
push
dec
insl
mov
in
daa
loopne
call
xor
outsb
or
rolb
jae
push
pop
shll
aad
mov
loope
icebp
dec
rorb
xor
sbb
or
pop
mov
movsl
and
mov
mov
push
push
insb
adc
outsl
sbb
dec
cmpsb
aaa
ljmp
movsb
jnp
jne
ss
add
insl
roll
sub
push
outsb
xchg
mov
stos
out
stos
sbb
jle
inc
nop
inc
in
push
xchg
jmp
xchg
mov
ficoms
cwtl
in
and
les
bound
add
fnsave
int
cmc
pop
je
test
pop
fidivrs
insb
xor
cld
dec
jmp
es
cmp
adc
std
movsb
sti
stos
gs
imull
loopne
cld
lcall
cmpsl
shl
call
sbb
je
jne
mov
adc
pop
inc
movsl
jge
insb
xor
out
sarl
vpmacsswd
mov
enter
mov
out
inc
xor
movsb
shll
lods
faddl
rcrb
add
out
test
sti
enter
push
pmuludq
push
movsb
xchg
xchg
xchg
fidivl
jno
inc
pop
or
pop
mov
xchg
mov
jb
insl
sbb
test
in
jg
dec
pop
inc
outsl
push
ljmp
cltd
jne
clc
mov
adc
mov
xor
mov
push
lret
or
and
mov
dec
aaa
iret
push
push
adc
inc
std
push
fsubrs
es
lods
push
mov
jae
int
fmull
jno
hlt
outsb
mov
dec
push
pop
jp
das
sub
rol
push
lods
movl
mull
pop
aaa
in
fldl
push
sbb
push
repnz
inc
std
pushl
dec
xchg
jae
or
push
fs
inc
imul
dec
mov
xchg
or
jno
jge
call
fistpl
cmp
inc
sbb
push
dec
inc
cmp
adc
mov
jbe
jno
popf
rcll
xor
scas
ret
xchg
je
fsubrs
jge
pop
lock
std
and
xor
cmpsb
sahf
mov
or
outsb
mov
inc
dec
pushf
push
sub
fadd
cld
ljmp
fwait
addr16
mov
and
mov
dec
inc
jle
dec
push
mov
sbb
mov
cwtl
mov
push
imul
push
adc
ret
push
sbb
adc
push
sti
cmp
hlt
lock
jmp
cmpb
cmpsl
clc
imul
ret
mov
in
aaa
dec
jmp
xor
fs
test
dec
stos
dec
inc
mov
xchg
ljmp
pop
push
mov
arpl
adc
ret
sub
lock
lahf
daa
add
loop
test
jne
cld
push
add
add
iret
xor
or
ss
sti
xchg
mov
outsl
bound
repz
outsl
push
lcall
rclb
sbb
jmp
sbb
ret
ret
in
push
inc
addr16
aam
and
add
xor
jb
rcll
jb
mov
mov
jecxz
add
insw
ljmp
sbb
lea
shll
sahf
mov
cmp
mov
jl
sbb
jns
push
jmp
push
push
inc
inc
popf
and
push
jle
mov
clc
and
and
mov
dec
stos
lock
in
jecxz
sbb
leave
xor
jecxz
sbb
add
mov
add
mov
adc
mov
adc
rolb
fwait
cmpsl
cmp
mov
xlat
fmull
push
lods
sub
jne
iret
pusha
cltd
mov
clc
orl
and
jb
stos
lahf
cmp
xchg
aam
inc
sbb
xchg
mov
push
mov
sub
inc
mov
ss
ret
xchg
jmp
pushf
sub
mov
mov
xchg
pop
xlat
lods
mov
out
cmpsl
cwtl
push
jp
push
xchg
and
cli
inc
mov
cs
jmp
add
adc
xlat
test
xchg
push
call
inc
cmp
or
sub
mov
out
fwait
or
jae
or
mov
jbe
adc
lock
pop
fwait
outsb
in
ret
xchg
jge
dec
cmp
inc
pop
ss
ficomps
inc
mov
pop
sbb
push
push
stc
push
inc
and
dec
loop
jl
mov
je
je
dec
xchg
lcall
aad
mov
pop
cmp
push
movsl
dec
add
cmpsl
mov
addl
mov
sub
push
sbb
or
mov
sbb
or
div
pop
pop
sbb
inc
out
lret
or
repz
lods
add
mov
push
xchg
repz
out
xor
int
into
rcrb
xlat
shlb
sub
dec
jle
mov
dec
mov
and
lahf
mov
xchg
mulb
xor
imul
cwtl
adc
xor
scas
sbb
shrb
xchg
fwait
mov
push
inc
or
inc
outsl
orl
pop
test
xchg
cltd
push
push
lods
mov
fwait
jp
jecxz
push
aaa
add
jns
push
sarb
rcr
outsb
lods
lods
popf
inc
in
cmp
fistl
in
pushf
mov
jp
and
bound
cwtl
movsl
mov
icebp
icebp
add
or
fadds
rclb
fistps
inc
and
lret
cmp
dec
and
aas
sbb
xor
sbb
mov
lret
adc
push
mov
repnz
mov
sub
in
cmp
sbb
pusha
repz
xor
sbb
jge
inc
xor
sbbl
push
cmp
sub
sub
cmp
cld
jbe
sbb
push
add
out
mov
mov
addr16
lcall
mov
sub
adc
sub
pop
decb
sub
mov
pushf
and
push
into
xor
out
leave
dec
pop
adc
mov
dec
adc
push
cld
daa
or
pusha
push
fistl
xchg
adc
adc
sbb
xchg
and
decl
cli
mov
xor
loop
sbb
mov
pop
movsl
inc
cmp
dec
clc
negb
sbbl
or
movsb
jl
mov
movsl
std
scas
and
xchg
mov
pop
cmp
out
aas
jmp
mov
sti
subl
test
repnz
dec
jno
pusha
test
push
mov
xchg
and
lea
jnp
fmull
insb
inc
imul
or
jb
push
sbb
ret
pop
sbb
ja
scas
sbb
cld
iret
in
or
push
dec
lods
dec
clc
clc
stc
jne
or
push
notb
sbb
inc
ret
ret
dec
fisubl
test
mov
cmpsl
sbb
lods
out
mov
inc
sbb
js
xor
in
adc
add
push
adc
lds
dec
nop
test
ss
and
nop
push
cmc
add
cmp
sti
pushf
rcrb
fnstsw
aas
mov
in
mov
inc
or
xorb
cmp
clc
test
jb
mov
mov
mov
cmp
cmp
out
adc
ds
mov
sbb
sbb
xchg
es
sahf
pusha
mov
push
int3
into
mov
ss
pusha
test
pop
and
movl
aas
push
xchg
push
movsl
push
or
arpl
inc
stc
mov
cmpl
cmp
inc
mov
pop
das
movsb
xor
pop
mov
mov
fstps
mov
int3
loope
fs
cs
jp
mov
adc
ss
pusha
sub
movsl
xor
mov
inc
mov
mov
add
mov
outsl
jne
shll
push
push
lea
enter
add
ret
arpl
mov
sbb
mov
jo
add
scas
inc
clc
or
push
pusha
xlat
sbb
jge
cwtl
cmp
mov
fisubrs
sbb
sub
iret
or
pop
lds
adc
mov
cmp
leave
mov
in
cld
pop
mov
xchg
mov
ret
sub
imul
adc
push
mov
sub
push
stos
sbb
ficoms
xchg
push
xor
mov
lods
sub
cmp
sub
sub
xor
sbb
pushf
es
scas
xchg
mov
inc
je
pop
cmpsl
in
clc
sub
adc
movl
pop
jl
jno
push
roll
inc
jmp
xchg
jo
test
xchg
decb
mov
clc
sbb
aas
and
lea
insb
data16
jb
mov
push
mov
sti
push
add
lahf
sub
je
pop
inc
jns
sbb
dec
dec
xchg
sub
rcll
cmp
jns
or
inc
sbb
test
mov
jmp
movsb
or
outsl
rcll
xlat
lahf
js
cmp
mov
pop
sub
sub
ss
stos
aam
into
mov
rorb
imul
mov
cmp
cmp
ret
pop
mov
lret
lahf
pop
push
pop
xchg
jbe
adc
cmp
jge
scas
pop
dec
cwtl
jo
in
loop
aad
mov
inc
jbe
sub
add
pop
notl
idivl
or
inc
add
mov
mov
addr16
xor
and
xorl
popf
mov
or
jnp
add
bnd
add
mov
lret
mov
xor
test
out
mov
add
xchg
mov
sub
dec
aaa
or
in
orb
jg
mov
rol
daa
xchg
in
dec
mov
pop
ds
std
movsb
stos
or
cmpsl
jmp
ja
adc
jge
pop
mov
pop
inc
out
aas
cmp
aas
sub
mov
push
ljmp
ss
mov
sbb
fnstcw
dec
cwtl
push
lea
mov
push
leave
push
sbb
mov
jbe
pop
notl
sub
test
or
pop
mov
jbe
fdivl
sbb
pop
fs
pop
sarl
and
rcrl
or
ja
stos
das
aaa
aad
call
aas
adc
notb
cli
idivb
ret
mov
out
dec
pop
idivl
jno
sub
rcrl
ret
or
das
pop
mov
mov
jns
fdivrs
mov
xchg
movsb
inc
mov
jb
jge
ljmp
mov
andl
hlt
jl
subb
mov
out
pusha
push
mov
das
pop
mov
icebp
fildl
fsubp
or
sbb
lcall
push
gs
mov
inc
movsl
pop
in
add
lret
fmuls
jns
jb
and
fstpl
dec
sub
xor
xor
testl
dec
push
outsb
movb
push
cmp
leave
push
fstpl
bound
sub
js
aaa
mov
pop
add
push
push
std
lret
cli
jnp
sbb
adc
and
inc
into
jecxz
repnz
das
jp
inc
pop
lock
insl
mov
mov
cmp
pop
test
les
divb
pop
jecxz
movsl
cwtl
dec
mov
pop
sbb
xchg
outsl
in
add
cmp
jle
rclb
sub
push
pop
jge
int
push
mov
aad
xor
xor
mov
mov
push
jae
movsl
out
mov
adc
popf
add
adc
add
in
dec
dec
dec
pop
pop
sbb
dec
mov
dec
xchg
cli
pop
sbbl
aad
cltd
pop
push
lock
cmpsb
jns
sub
fildl
xchg
gs
cwtl
nop
mov
lahf
xor
rcl
ljmp
add
std
clc
add
inc
call
lods
xor
mov
inc
stos
call
ja
or
dec
or
int3
xlat
cmp
mov
loopne
xor
insb
adc
dec
lds
mov
enter
into
test
cmp
insl
in
out
popf
mov
add
in
lret
and
sub
fnsave
mov
test
shl
jg
xchg
cmpsl
fnstcw
add
enter
ret
push
adc
jecxz
iret
loopne
int
jecxz
and
sbb
sub
pop
xor
xchg
aaa
enter
icebp
and
and
ss
push
fiadds
and
xor
fcomi
pop
xor
or
rorl
pop
add
inc
pop
sub
jno
pop
pop
or
cmp
pop
inc
in
adcl
adc
loope
lods
mov
mov
push
dec
sub
sub
enter
jg
pop
out
adc
lds
lahf
xchg
dec
jp
jecxz
and
push
pop
mov
add
andl
out
cwtl
ds
and
xchg
push
xchg
imul
lock
andb
in
cld
sbb
fiaddl
jns
jae
adc
lock
adc
xchg
sub
cmpsl
sbb
jno
lret
pop
sbb
imul
push
test
jne
or
test
shll
pop
dec
nop
jae
shr
lret
jae
adc
imul
mov
xchg
or
xchg
sub
fisttpl
cmp
push
pop
jge
cmp
clc
sbb
mov
push
fistps
jl
and
mov
pop
sub
popa
sahf
push
dec
stos
dec
xor
jb
sub
sub
je
dec
mov
mov
inc
loope
and
push
mov
mov
xchg
cmp
jg
ja
jg
dec
sbb
mov
dec
int3
icebp
mov
xchg
and
fdivrs
test
sbb
pop
inc
pop
js
inc
dec
mov
xchg
lods
cli
enter
gs
mov
fisubl
jne
sub
and
aas
and
push
out
mov
pop
pop
sahf
xchg
sub
mov
in
aaa
dec
lock
mov
cmc
outsb
addr16
jno
jle
mov
aas
pop
cmpsl
cmp
int3
xchg
pop
mov
or
push
fwait
stc
push
xchg
ss
sbb
fldcw
mov
xchg
lret
sub
aas
xlat
mov
aad
hlt
mov
fldenv
shrb
dec
jg
bnd
test
cmpb
xchg
leave
add
cmpsl
pop
or
mov
sub
or
hlt
inc
mov
stos
rolb
inc
cmp
or
mov
cmp
cltd
sarl
es
lret
ja
add
jmp
dec
fnstenv
orb
push
setns
sub
fisubrl
sti
push
cmp
cmpl
hlt
test
xlat
into
dec
mov
mov
jmp
aam
dec
aam
insb
xchg
sub
icebp
cmpsl
push
xor
fbld
divb
fsqrt
clc
mov
addl
push
dec
in
mov
sub
inc
in
ja
adc
inc
mov
les
mov
inc
int
out
mov
mov
dec
cmpb
stos
mov
jle
sub
cld
bound
push
adc
ja
clc
sub
xor
mov
in
add
std
ffree
orl
or
int
push
cmp
fistl
call
dec
dec
add
sub
lret
loope
and
inc
mov
sub
mov
nop
insb
movsb
scas
mov
fstl
pop
xchg
pop
push
push
lret
rcll
iret
test
imul
je
scas
sbb
test
push
dec
gs
mov
push
push
ljmp
repz
fucom
ret
jg
add
xor
xchg
adc
not
cmp
insl
push
and
xchg
nop
mov
jle
shrl
mov
pop
js
fmuls
jnp
inc
aaa
xchg
pop
outsl
daa
push
in
fimull
sbb
xchg
test
push
inc
adc
jb
inc
aas
gs
jb
xor
xchg
movsb
fdivl
stos
xlat
jp
outsl
cmp
mov
fildll
xchg
sub
mov
sbb
aas
mov
loopne
mov
lock
ret
mov
fs
insb
adc
pop
jnp
xchg
add
or
mov
enter
dec
and
mov
hlt
shrb
ljmp
and
sbb
sbb
ljmp
cmp
push
xchg
dec
stos
and
xor
jne
imul
test
cmpsb
data16
adc
int3
add
push
mov
inc
ljmp
outsl
fwait
and
test
lret
sub
and
lods
dec
inc
inc
cld
jb
in
mov
jne
xchg
idivl
mov
push
ljmp
dec
lock
stos
sbb
lcall
jbe
rcll
lcall
mull
pop
movq
int
xlat
mov
adc
xorl
or
aam
iret
jg
jecxz
nop
insb
mov
push
mulb
cltd
cmpsb
mov
enter
and
cmpsl
pushf
das
enter
in
adc
adc
pop
out
shll
inc
jg
int3
sbb
push
fbld
into
pop
ljmp
shll
mov
je
sbb
dec
inc
loopne
push
xor
in
js
out
roll
bound
cmpsb
or
scas
dec
jb
fwait
or
scas
rcrb
push
leave
xchg
cmc
inc
pop
push
iret
rcrl
jge
xchg
sbb
shll
imull
fs
in
and
test
fcomip
adc
and
inc
data16
push
push
push
mov
dec
jg
adc
dec
mov
pop
nop
test
addr16
jnp
incb
into
xlat
xchg
imul
adc
lods
pop
fisttps
pop
push
cmpsb
push
mov
imulb
dec
jp
rcll
les
jp
and
imul
ror
dec
movsb
adc
iret
and
mov
inc
mov
sbb
pop
pop
iret
sbb
mov
sbb
in
inc
mov
inc
jno
xchg
roll
testl
ds
das
push
and
shrb
mov
push
mov
xchg
jbe
cld
sahf
loopne
in
pop
pop
push
xchg
pop
clc
in
cmp
dec
push
enter
ljmp
dec
jge
jns
das
jne
movsl
inc
stos
mov
loop
fucomi
mov
lock
push
push
mov
mov
adc
cli
push
lods
push
add
cmc
sub
daa
sarb
dec
pop
and
adc
repnz
rorl
pop
cmp
xchg
mov
or
push
andl
jnp
aam
mov
fbstp
sbb
lds
outsl
mov
xchg
in
jecxz
adc
data16
dec
gs
jg
xor
pop
add
enter
loopne
ret
aam
in
cltd
lds
sub
sbb
loope
ficoms
dec
lea
ret
mov
push
shll
cmc
pop
push
dec
add
das
dec
popf
cmpsl
fistl
adc
pop
push
sub
add
cmp
pop
sub
sub
test
cs
sub
pop
jmp
lock
xchg
addl
fs
fidivrl
mov
arpl
mov
fadds
and
dec
and
jns
sti
or
leave
xchg
xchg
xchg
push
add
das
cmp
jg
mov
jo
sbb
pop
int
sbbb
stos
js
test
mov
movsl
adc
cmp
push
fdivl
stc
jp
push
lods
fcoms
add
mov
xor
xlat
mov
imul
adc
fcompl
xchg
mov
push
xor
lcall
insw
dec
push
adc
incb
mov
cmpsb
cmc
cli
dec
es
cmp
push
sarl
js
inc
dec
aad
mov
sti
les
mov
push
test
mov
mov
cmp
push
pop
xchg
inc
push
jns
add
jmp
int3
sub
imul
and
ret
hlt
in
cld
sbb
dec
mov
push
pop
and
push
push
test
xchg
push
sbb
pop
push
jmp
sbbb
mov
or
iret
stc
in
outsb
and
push
stc
pop
enter
mov
sarb
add
sbb
fnstenv
dec
insb
lods
jne
pop
cmp
mov
push
js
data16
inc
out
mov
daa
cli
ret
mov
ror
movsb
dec
inc
inc
sub
xchg
repz
jnp
filds
mov
enter
cmp
lret
leave
lock
xor
mov
sbb
cmp
lret
gs
test
fistps
shll
enter
fistpll
adc
jge
orl
inc
adc
sahf
pushf
scas
scas
push
cli
mov
dec
jno
ret
popf
or
insb
in
sbb
cmc
jae
int3
dec
jl
add
push
xchg
aad
fdivp
jg
loopne
ljmp
fwait
test
icebp
pop
cld
inc
inc
cld
sub
popa
dec
push
sub
andb
push
push
insl
imul
insl
jp
loopne
pop
shlb
repz
cmpsb
jnp
out
mov
sbb
imul
hlt
cmc
test
mov
in
sub
loope
shl
push
dec
jp
hlt
or
push
int
clc
dec
pop
jne
scas
mov
int
add
and
mov
in
mov
and
popf
movsb
and
xor
leave
sub
movsl
fists
xor
cmp
cld
inc
nop
lcall
aas
xchg
ljmp
jb
mov
js
fsub
sar
hlt
pop
insb
xor
or
repnz
push
add
add
add
or
popf
das
and
xor
xchg
out
imul
inc
jg
cs
enter
scas
sbb
stos
pop
arpl
or
sub
inc
mov
inc
and
sbb
mov
int3
jp
sbb
in
cwtl
push
movsl
dec
cmc
daa
mov
outsb
mov
mov
or
pop
rol
rcrl
shll
sub
jbe
je
mov
or
or
jo
mov
mov
inc
sbb
mov
mov
jne
cmp
cmp
mov
mov
xor
subb
dec
mov
xchg
ret
inc
push
mov
bound
mov
jnp
dec
dec
shll
cmpsb
push
fcompl
mov
pop
es
stc
or
or
mov
jb
lcall
xor
dec
mov
inc
jg
mov
loop
rol
or
xchg
roll
popf
movsl
test
xchg
rolb
mov
inc
jne
cmp
fistl
jae
hlt
sub
pop
xchg
jle
mov
mov
mov
movsl
push
add
rol
adc
pushf
int
push
xchg
and
adc
and
mov
add
jecxz
cmp
pop
icebp
das
or
pushf
push
leave
xlat
sbbb
sti
pop
inc
js
movl
shll
and
mov
pop
ret
std
fs
mov
cmpsl
fldt
inc
repz
in
jge
jl
sbb
cmp
lea
iret
lret
adc
pusha
fadd
jl
cld
dec
das
mov
xor
rcll
sub
int
or
xchg
jecxz
test
fwait
xchg
jp
cld
and
jb
jmp
cmp
and
inc
out
movsb
sub
mov
mov
dec
fnsave
ss
mov
fbstp
xor
test
mov
mov
and
mov
out
xchg
adc
decl
pop
xor
outsb
clc
iret
int3
pop
mov
lret
jb
lea
push
aad
or
dec
scas
jne
shrl
pop
or
mov
mov
push
in
add
cmpsl
push
cmc
test
pop
add
ljmp
es
ret
push
cmp
jg
and
aad
or
aad
std
popf
add
mov
mov
push
or
xchg
test
inc
jno
into
data16
xor
cwtl
inc
mov
aas
cmp
or
in
mov
inc
sub
jle
clc
shrb
push
adc
test
ret
cmpsl
inc
cwtl
js
das
xchg
adc
push
outsl
lods
rolb
shlb
shlb
ret
fdivrs
pop
sub
pop
test
adc
outsb
out
test
orl
jae
outsb
or
dec
push
xor
mov
aam
xchg
mov
and
mov
sub
mov
push
push
add
push
pop
clc
addl
shrb
sub
fs
in
cld
fwait
mov
inc
mov
pushl
out
icebp
push
pop
xchg
popf
shlb
push
push
fbstp
mov
mov
mov
or
and
adc
aas
insl
push
add
mov
push
cmpsl
scas
push
and
popa
into
clc
addl
cs
outsb
xlat
stos
arpl
in
mov
inc
xchg
int
push
sbb
mov
jecxz
and
mov
out
inc
lock
gs
lock
repnz
adc
push
loope
mov
sbb
or
xchg
test
pushf
repnz
bound
mov
es
adc
lcall
xchg
push
push
jg
cmp
pop
jae
daa
jg
cmpsl
xchg
pop
xchg
push
adc
jb
inc
addr16
sbb
bound
ficomps
aad
mov
adc
loope
iret
cltd
out
es
jp
xchg
push
cmc
jp
cmp
lret
push
out
shr
scas
push
imul
sarb
andps
cmp
fst
push
ror
rorl
leave
movsl
bound
fistpll
enter
jns
xor
ljmp
push
add
sbb
xlat
xor
push
popf
ja
cmp
or
fsubrs
cld
xor
das
je
sbb
rolb
push
and
test
dec
bound
and
pop
xor
es
mov
pop
repnz
je
cltd
push
nop
lea
or
adc
inc
int3
adc
cs
dec
scas
dec
add
mov
jg
nop
pop
adc
mov
mov
adc
dec
inc
adc
inc
ja
cmp
add
jnp
test
in
mov
push
inc
lret
sbb
cltd
cld
ret
inc
and
lret
sbb
dec
loopne
jmp
push
jne
adc
push
pop
insb
ret
sub
sbb
mov
push
aam
jle
push
jg
aam
fcom
pop
jp
imul
stos
bound
hlt
das
andb
gs
adc
pop
pusha
repz
lahf
fdivl
shr
cwtl
cmpsl
xor
loop
push
jo
test
add
and
aaa
arpl
cld
mov
adc
push
test
sub
dec
popf
adc
aas
adc
ret
dec
push
js
jmp
sub
sub
fdivr
mov
movsl
jl
add
cli
adc
xchg
jmp
mov
mov
cmc
stc
or
mulb
cmp
push
sub
pop
idivb
scas
jo
outsb
adcb
aam
pop
andb
mov
cmp
bound
int
push
icebp
lea
mov
sbb
js
cs
cli
inc
jl
pop
jbe
out
or
xor
xchg
sub
gs
xchg
inc
jno
or
sarl
cmp
testb
aaa
out
daa
jno
in
mov
jmp
subl
lret
fldcw
dec
call
jle
in
jecxz
and
fldenv
mov
fstp
frstor
jp
push
lock
mov
ret
jnp
popf
push
pop
call
jp
mov
sub
std
or
sbb
lret
adc
lock
scas
imul
jne
push
xchg
add
leave
mov
jl
sbb
fdivl
xor
cmc
mov
sti
sbb
mov
mov
push
cmp
ljmp
push
pusha
test
mov
lods
mov
sbb
xor
mov
cli
adc
movsl
and
inc
fs
sbb
daa
xchg
cmp
sbbl
inc
lock
mov
cmp
outsl
add
sub
mov
mov
in
mov
mov
fbld
repz
sar
add
xor
sbb
or
dec
dec
out
pop
pop
sbb
mov
sub
les
xchg
loop
cmpsb
xor
sub
sti
jle
mov
sbb
jl
pop
int3
push
subb
mov
jbe
out
fdiv
out
ss
sarl
loope
sarl
mov
cmp
adc
pushl
lock
xor
fidivl
popf
cmp
aaa
roll
push
push
add
lret
idivl
push
std
jo
jp
mov
int
aad
lcall
xor
inc
fwait
aas
push
mov
sbbl
sahf
dec
mov
dec
divl
sbb
and
jge
push
inc
inc
aas
mov
inc
xor
and
pop
fwait
jge
sub
addr16
sbb
cmpb
cmp
adc
pop
nop
data16
xchg
shlb
popf
mov
add
into
inc
test
mov
xchg
gs
cmc
sarb
sahf
sar
int3
xchg
jp
mov
lret
test
stc
insl
ret
call
fisubrs
dec
cli
sub
int
cld
pusha
inc
jno
xchg
pop
repnz
jl
jl
add
mov
mov
int
dec
xchg
gs
stos
adc
jo
popa
inc
cmpsb
jecxz
fst
inc
pop
hlt
push
sahf
add
out
xchg
sbb
jmp
mov
cmc
inc
and
int
xchg
test
push
pop
and
push
inc
mov
mov
jg
lods
fidivrs
xor
sub
in
push
xor
fisttpl
hlt
xchg
clc
pop
dec
cmp
mov
push
jo
mov
jae
inc
arpl
cmp
mov
mov
daa
add
les
loop
add
sub
pop
adc
add
mov
mov
jge
dec
enter
jno
fiadds
bnd
lret
jmp
loop
gs
loop
sub
out
subl
imul
jmp
leave
inc
daa
and
rcl
lea
xchg
push
lcall
sbb
rorl
loop
aaa
xchg
cwtl
lret
pop
mov
inc
and
cwtl
jnp
cmpsl
mov
and
xstore-rng
cmpsl
add
add
cmp
push
xchg
cmp
subl
setae
lcall
jle
cmp
imul
std
and
inc
das
mov
cmpsl
jge,pt
xchg
xchg
mov
add
add
mov
cmp
sti
shll
push
mov
sti
insb
fwait
jbe
out
xchg
jmp
xor
xor
xchg
jl
adc
jmp
out
pop
adcl
imul
fs
xor
lea
push
out
mov
daa
mov
jmp
cld
andb
pop
adc
aad
sub
mov
lods
aaa
loopne
xchg
ret
add
int
push
or
daa
mov
fidivrs
mov
out
inc
cltd
aam
push
pop
lods
mov
inc
sbb
ja
pushl
dec
sti
mov
iret
mov
addr16
xchg
fmulp
ds
add
testb
sahf
nop
xchg
or
call
jbe
jl
in
add
pop
mov
or
in
pop
or
and
mov
cmpsl
inc
scas
sub
inc
test
movsb
sbb
push
mov
xor
or
xchg
push
std
pop
dec
cmp
push
pop
inc
and
jl
pop
push
fimull
push
aam
and
add
jns
mov
data16
xchg
mov
sahf
ss
leave
ror
ja
push
mov
mov
cmc
out
pop
pushf
gs
inc
jecxz
test
xchg
jns
mul
adc
push
xor
ret
sahf
inc
dec
add
negl
fsubrl
ljmp
mov
test
jle
jmp
sbb
test
xchg
pop
push
rcrl
or
out
clc
stc
cltd
xor
pop
or
cmpsb
mov
inc
movsl
mov
and
dec
and
pop
xor
stos
jno
stos
addr16
fs
mov
xchg
push
add
pop
addr16
add
mov
xchg
test
icebp
das
in
fimuls
ret
int
push
test
out
add
call
mov
xchg
lret
add
xchg
loop
dec
ljmp
dec
xchg
sbb
adc
ds
insl
stos
cli
dec
dec
cmp
insb
in
sti
push
test
js
loop
repnz
shll
je
clc
pusha
into
das
push
xor
fs
xor
xchg
ja
xor
push
mov
addb
xchg
mov
enter
and
cmp
jae
pop
push
outsb
inc
xchg
lret
in
jne
lahf
inc
clc
aas
mov
dec
int3
lcall
out
xlat
or
lods
sub
rcrb
stos
jp
stc
dec
in
cmp
adc
fucomp
jo
mov
add
insl
ret
vmovshdup
imul
roll
cmp
aaa
mov
cwtl
pop
dec
sbb
or
jne
lret
das
call
xlat
scas
xchg
gs
mov
mov
pop
sbb
cmc
mov
cmpsl
xchg
mov
pushf
mov
adc
icebp
and
xchg
inc
loope
jb
pusha
xor
jecxz
mov
sub
adc
dec
dec
fimull
and
insl
addr16
call
ljmp
stos
push
outsb
xor
ret
mov
mov
movsl
daa
repnz
icebp
cmpsb
dec
cmp
push
mov
cwtl
jbe
mov
push
cmp
pop
or
cmpsb
movsb
xor
and
fsubrs
or
xor
leave
aaa
sti
and
repz
push
jecxz
lods
xorb
inc
js
sbb
popa
call
adc
mov
mov
and
cmp
pusha
adcl
jo
inc
push
gs
sbb
imul
shrl
js
push
out
fcoml
leave
inc
adc
in
in
in
and
decl
inc
sbb
xor
fistps
gs
in
rcrl
mov
sub
in
cs
xchg
arpl
xchg
mov
test
nop
pop
mov
mov
mov
and
ljmp
fwait
adc
test
mov
in
out
push
sbb
sub
insb
sub
lods
jbe
push
es
pop
and
sbb
xchg
lcall
adc
in
cld
or
adc
testl
xchg
daa
aaa
mov
out
push
jo
pusha
loop
pop
xchg
fs
rcrb
gs
ret
loopne
cmp
dec
jae
repz
mov
jl
xchg
test
push
dec
xchg
dec
dec
mov
es
jae
rcr
mov
add
out
pop
xchg
sahf
movsb
push
mov
pop
pop
pop
mov
sbb
or
ljmp
xchg
dec
push
xorl
lods
xchg
mov
push
xchg
push
gs
and
mov
pop
les
movups
andl
test
or
or
movsl
push
outsl
inc
jb
pop
loopne
mull
sub
in
lods
push
cmp
outsb
ret
fsubl
mov
aas
dec
fistpll
or
inc
sub
outsl
clc
pop
sbb
jecxz
test
sti
scas
ja
gs
mov
fs
mov
xchg
lret
test
fdivr
mov
fstps
enter
jae
pusha
push
insl
jmp
mov
xchg
mov
in
iret
jl
cmp
sti
dec
int
gs
push
xchg
or
mov
jb
mov
fistl
sbb
sbb
lret
mov
jnp
mov
push
mov
xchg
addr16
pop
repz
lods
adc
sahf
and
aas
int3
xlat
test
pushl
aaa
jno
dec
insb
adc
mov
xchg
pop
push
into
sub
ss
jp
xchg
sarl
sti
leave
mov
cmp
out
jmp
ss
int
sub
mov
mov
xchg
mov
push
cmc
sti
and
mov
adc
leave
jge
push
or
outsb
and
or
stc
xchg
add
push
fprem
xchg
mov
stos
xchg
push
xchg
nop
adc
inc
dec
jno
mov
es
aas
sbb
scas
mov
mov
adc
loope
or
adc
out
jecxz
insl
ss
cmp
lods
xchg
push
jp
das
stos
ret
out
cli
xor
jmp
sbb
pop
cmp
mov
lds
and
arpl
or
jg
test
cld
jnp
test
js
test
sbb
nop
rcl
fisubrs
cmp
mov
or
sub
xchg
mov
sub
inc
push
xchg
mov
push
lds
aad
addr16
popa
mov
popl
or
mov
inc
idivb
xchg
mov
mov
imul
adc
or
jecxz
sbb
xchg
in
sbb
pop
pop
xchg
or
adc
jmp
test
dec
pushf
add
add
cmp
inc
mov
cli
sub
popa
sbb
icebp
mov
stos
lock
xor
shlb
ss
pop
mov
movsb
fsubrs
sbb
sbb
jns
pop
xchg
pop
jne
add
rcrl
cmc
aaa
mov
shrb
dec
cmpsb
fs
ret
leave
scas
or
movsb
lahf
inc
sub
mov
and
mov
sti
fs
or
enter
xchg
add
or
or
dec
jno
cltd
sbbl
aad
out
xor
dec
dec
imul
adc
fdivrp
stos
div
fistl
mov
and
out
outsb
and
shl
leave
and
in
xchg
negl
add
fnstsw
jns
cwtl
push
push
cmpsb
sbb
es
lods
out
in
out
repz
sub
mov
sub
iret
test
aaa
and
sti
stc
xor
fisubs
pop
inc
dec
dec
add
mov
xorl
nop
inc
push
add
push
push
pop
mov
push
fcomip
out
xchg
pop
fidivrl
lahf
push
sub
shll
push
mov
ljmp
adc
shl
cwtl
in
jg
rcll
sub
pop
mov
out
fisubl
push
mov
lea
lock
cmp
mov
cmp
jecxz
cmp
sbb
daa
add
enter
outsl
push
dec
incl
xchg
xor
push
cmp
clc
ret
xchg
xchg
test
imul
jns
pop
pop
and
and
pop
jb
les
jecxz
daa
negb
loope
shll
mov
add
mov
lret
aaa
ret
xor
nop
lds
imul
cld
lahf
xchg
mov
icebp
dec
mov
pop
mov
sub
fildll
lret
jmp
pop
inc
sub
and
int
call
pop
push
mov
jbe
xor
mov
repnz
xchg
jne
xchg
dec
loopne
and
cmovne
mov
pop
hlt
fldl
mov
adc
in
inc
adcb
sbb
pop
sbb
mov
loopne
shl
mov
pop
jbe
mov
inc
sbb
and
push
stos
jp
fcoms
fwait
xor
add
mov
out
rcl
call
mov
arpl
lret
shrl
pop
xchg
inc
add
push
negb
mov
jp
push
jno
lahf
popf
add
jle
pop
pop
xchg
cmp
adc
iret
mov
stos
leave
ja
jae
dec
cmp
push
mov
add
adc
xlat
insl
dec
pushf
dec
pop
insl
xor
imul
xchg
pop
xor
mov
and
mov
push
push
cmc
dec
push
xor
bound
daa
xor
cwtl
sbb
stos
add
jle
add
in
or
adc
jle
and
sub
cmp
add
fbld
out
sti
test
cwtl
mov
orl
out
dec
leave
cld
out
adc
sub
jne
js
add
hlt
aam
lret
dec
pop
jno
stos
jecxz
clc
xor
xchg
fidivl
inc
or
stos
pop
jcxz
int
mov
push
or
mov
scas
sbb
fsubs
cmp
pop
xchg
rolb
cwtl
push
add
scas
adc
jl
test
stc
movsb
cmpsb
test
cmpsl
imul
mov
dec
jbe
sub
dec
xchg
stc
xor
cmp
cmpsl
mov
cmpsl
loop
dec
xchg
sbbl
lods
lods
inc
push
les
mov
ljmp
mov
inc
push
movsb
jne
mov
sbb
cmpl
adcl
int3
xchg
push
cmpb
push
out
sbb
lods
negl
push
nop
enter
cmp
add
add
jnp
cmp
pop
nop
lds
pop
sbb
cmp
or
cmp
dec
cmc
mov
jae
and
data16
jo
add
dec
xor
mov
rcl
sbb
mov
cmpsb
shl
nop
stos
ret
fidivrl
mov
mov
cli
add
jno
or
sub
lahf
aad
out
ror
aas
movsl
and
ja
mov
in
push
mov
dec
bound
jl
mov
scas
int
daa
repnz
lret
dec
xchg
test
int
dec
sub
movsl
xchg
and
cmpsl
xchg
mov
inc
push
xor
or
mov
inc
jnp
cs
and
in
sar
inc
in
lcall
mov
fiadds
leave
mov
push
mov
outsl
loop
pop
push
hlt
push
or
testl
lock
es
enter
insb
fsts
cmp
cs
cmpsb
in
rorl
aas
imulb
pop
cmp
xchg
or
adc
add
in
subl
pop
jbe
fmul
inc
daa
inc
jns
mov
sub
lret
imul
fisubs
fcoms
add
pop
in
xor
add
into
lret
xchg
cmpsb
adc
xchg
icebp
cli
sub
cmp
ljmp
jno
cmpsb
jb
inc
jns
add
xor
imul
or
pop
dec
insl
in
je
pop
pop
jo
fcmovb
sbbl
inc
add
cmp
add
and
repnz
movsb
mov
mov
cld
sbb
pop
mov
clc
pop
lret
in
lret
mov
aad
insb
push
inc
mov
fidivrl
sti
or
fisttpll
cmp
arpl
in
repz
pushf
fisubl
mov
push
clc
dec
inc
ret
add
cmpsb
mov
out
pop
pop
adc
mov
dec
jecxz
xor
loope
push
into
ljmp
sbb
mov
in
push
add
icebp
aas
imulb
inc
mov
inc
add
pop
movsb
ret
push
mov
sbb
mov
out
enter
scas
adc
mov
jnp
sub
imul
sub
scas
sbb
pop
dec
pop
cmp
jg
orb
aas
arpl
out
ret
sub
shlb
loope
sub
fisubs
test
inc
lcall
pop
mov
out
or
xchg
pop
or
ret
movsl
inc
pop
test
je
pushf
insb
ja
jmp
js
lret
push
pop
repz
sahf
cmp
roll
cwtl
leave
xchg
movsl
pop
leave
les
inc
das
push
mov
cmp
data16
mov
hlt
sbb
or
push
ss
ljmp
pop
dec
dec
hlt
lods
mov
in
sbb
test
push
outsb
xor
fdivrp
sbb
sahf
xchg
cmovne
je
nop
fdivr
ja
mov
mov
addr16
rcrl
loop
push
imul
xchg
xor
fdivrl
inc
jecxz
mov
cmp
add
xchg
xchg
dec
out
mov
fst
out
and
push
imul
in
inc
cmp
enter
cmp
es
push
scas
push
mov
sarl
mov
js
sbb
cmpsb
add
adc
mov
fisubrl
jbe
cmp
into
xor
cmp
inc
add
push
jmp
adc
ljmp
out
cs
jecxz
int
push
out
pop
adcb
pop
fldl
aam
push
cmp
movsb
movsb
icebp
dec
mov
sbb
loopne
fmuls
sahf
add
jmp
decl
test
hlt
fisttpl
sub
mov
leave
push
jge
out
ret
das
stos
subl
pushf
or
ds
repz
mov
inc
fcomp
or
out
ficoms
xchg
xor
xchg
in
pop
push
push
aad
popf
insb
cmp
arpl
jns
pop
fwait
mov
add
lea
cmp
jp
dec
jl
popa
pop
mov
or
in
jecxz
sub
lods
mov
cli
jb
jl
je
push
int3
sti
cmp
xor
xchg
fwait
jmp
inc
ftst
sub
rolb
pop
or
into
fcoms
test
pop
adc
mov
shll
popf
ds
push
stos
pop
arpl
sarb
jge
fcoml
popa
data16
stos
or
push
roll
xchg
dec
les
enter
pop
mov
push
mov
push
cltd
xorl
subb
mov
imull
cmc
adc
jns
enter
imul
in
sbb
inc
stc
mov
sbb
ljmp
add
test
pushf
call
sub
inc
dec
cwtl
inc
xor
xchg
or
adcb
and
xor
jp
mov
repnz
call
or
sbb
sbb
or
push
hlt
andl
push
outsl
xchg
and
mov
inc
push
add
in
insb
and
mov
push
fs
inc
mov
adc
push
mov
jbe
pop
xlat
jno
dec
sbb
movsb
and
lock
add
fnstsw
or
test
nop
xchg
dec
push
orb
mov
mov
fadds
cld
into
pop
xchg
mov
cwtl
xor
pop
ds
jecxz
push
aam
sbb
icebp
movsb
das
xchg
push
stos
lds
in
hlt
int
push
or
imul
push
stos
mov
lcall
and
sbb
lret
cld
fsubrl
xchg
mov
pop
std
inc
jb
mov
lahf
sbb
mov
xor
dec
aam
rcl
je
mov
or
mov
jp
enter
sti
mov
sbb
test
stos
adcl
or
or
icebp
mov
mov
enter
fmul
clc
mov
lahf
xchg
fsubrs
inc
cmc
sti
mov
sbb
cli
leave
cs
push
lret
movsb
clc
outsb
sub
or
xlat
aad
or
xchg
sbb
fld
ret
mov
push
pop
pusha
sahf
std
cltd
cmp
mov
dec
cli
call
bound
mov
icebp
adc
fsubrl
es
nop
addr16
jmp
mov
push
pop
mov
xchg
jo
and
or
ret
adc
gs
andl
mov
inc
mov
fistl
jmp
imull
dec
ds
xchg
dec
cmp
pop
xor
add
movsl
mov
popl
jo
leave
xchg
mov
and
mov
push
shrb
push
insb
test
aam
mulb
aad
xlat
int3
inc
lret
dec
pop
pop
scas
das
sub
shlb
jg
lret
lea
shlb
sub
and
sbb
sti
mov
push
icebp
jae
nop
test
out
or
std
test
and
and
push
dec
clc
or
dec
sti
inc
icebp
fwait
fwait
push
push
arpl
pop
sbb
dec
inc
xor
sub
dec
jg
xchg
imul
pop
in
inc
insb
push
rcrb
dec
fnstcw
mov
scas
clc
out
in
sbb
xchg
testl
leave
ja
dec
cmpsb
adc
in
adc
int3
add
addr16
test
cld
push
stos
xchg
leave
clc
loop
fiadds
sahf
sti
push
mov
std
jg
xchg
mov
fsubrl
cs
mov
sbb
mov
in
sub
xor
mov
push
enter
and
mov
enter
test
xor
dec
andb
mov
xchg
dec
out
cmp
les
mov
sub
inc
notb
mov
out
fs
dec
mov
shll
or
cmp
es
shll
xor
cmp
push
das
daa
clc
cltd
inc
bound
dec
jmp
jo
inc
pop
inc
mov
xchg
cmpsl
jg
scas
iret
push
cmp
lock
pop
sbb
loope
adc
sahf
xchg
out
mov
stc
int
int
mov
sbb
aas
dec
pop
mov
pop
ja
outsb
pop
or
es
icebp
mov
adc
inc
push
je
loop
mov
insl
push
pop
mov
lret
shl
das
arpl
and
xor
jge
add
test
sti
in
movsl
push
ret
shll
mov
cld
data16
add
cs
dec
rolb
xor
dec
std
in
mov
jnp
lret
or
push
ret
mull
loop
pop
pop
sub
std
and
jae
and
sbb
std
lret
insb
push
test
add
push
jae
push
cwtl
push
hlt
jecxz
scas
adc
mov
or
pop
aam
test
dec
push
jb
int
sub
pop
insl
cmc
test
sbb
xchg
addr16
xor
mov
or
or
outsl
inc
testb
inc
movsl
inc
mov
pop
lret
rcll
mov
and
sub
aad
mov
mov
test
gs
scas
popf
mul
pop
stc
push
mov
orb
loopne
rorb
and
xchg
pop
jns
into
rcrl
cmp
js
mov
inc
push
pusha
cmc
lods
data16
iret
hlt
dec
cwtl
pop
and
mov
int
clc
shll
subw
test
out
lahf
outsl
dec
mov
insb
movsb
faddl
outsb
aaa
mov
dec
inc
jecxz
mov
mov
pop
pushf
mov
lcall
into
rolb
pop
jo
and
xchg
cmp
dec
sbb
pop
lret
data16
xor
out
mov
dec
das
push
sti
addl
int3
push
cmp
idivb
ret
push
out
push
adc
fstpl
mov
bound
sbb
loop
dec
pushf
push
fiadds
popf
mov
fsubl
mov
dec
xorl
popa
sbb
xchg
gs
sbb
xchg
mov
aas
lahf
push
mov
cmp
test
cmp
or
shll
and
cld
fildll
dec
mov
add
xchg
sub
cmp
stos
int
jle
int
mov
addr16
test
outsb
aaa
cmp
cwtl
cmp
pop
icebp
push
xor
jo
es
pop
mov
or
jge
push
cmpsb
cmpsl
pop
in
pop
jle
daa
ffreep
ja
std
out
add
inc
push
xor
icebp
sub
nop
mov
push
sbb
shlb
xchg
int
push
dec
and
xchg
and
hlt
sbb
test
dec
mov
mov
xor
sub
inc
popa
out
jne
insl
aas
cmp
adc
nop
push
inc
pop
jnp,pn
and
adc
add
scas
cld
sahf
aaa
adc
in
idivl
and
adc
jne
pop
mov
jg
enter
in
pop
or
sbb
xor
adc
test
outsl
out
mov
out
dec
inc
mov
nop
ret
scas
into
pop
sub
aad
adc
dec
mov
in
int
sbb
pop
dec
pop
add
xchg
fnsave
stos
repz
js
push
jmp
lret
mul
aas
stos
and
mov
cmpl
stos
push
bound
addr16
or
es
aas
sbb
repnz
cmp
mov
xchg
or
mov
adc
cmp
sbb
lods
pop
decl
sub
cli
mov
xchg
mov
lods
mov
lods
ret
popf
imul
fwait
je
es
lds
inc
sbb
jge
aad
push
movsb
cwtl
mov
std
add
or
dec
cmpb
push
dec
push
sbb
insb
stos
adc
dec
xchg
test
outsb
lret
inc
das
mov
mov
cmpb
push
xchg
das
movsl
mov
pextrw
add
test
sbb
add
dec
shrl
fisubrl
pop
adc
out
lods
and
mov
clc
ret
fisttpll
lock
fidivrs
nop
clc
cmp
pop
fcmovb
insb
sbb
mov
cmp
inc
and
icebp
mov
mov
in
mov
imul
dec
push
aad
jne
sbb
clc
popa
call
cmpsl
and
pop
imul
adc
arpl
nop
xchg
jns
and
cld
mov
out
call
aad
in
fwait
leave
xor
jl
adc
adc
jnp
adc
mov
daa
cmp
pushf
and
inc
xchg
sbb
cmp
mov
dec
xorb
int
rclb
fstl
mov
jg
mov
pusha
jmp
lods
das
lock
aad
dec
and
in
inc
pop
scas
adc
jge
add
fstpt
les
bound
aas
or
outsb
into
mov
or
add
into
mov
jg
adcl
mov
insl
fstps
dec
pop
sub
in
repnz
xor
xchg
and
jl
mov
aad
inc
aam
stos
sub
rclb
adc
imul
nop
lods
je
sub
mov
je
cmp
sub
lds
push
and
stc
out
jmp
jbe
ljmp
or
mov
inc
clc
lea
dec
sub
roll
mov
nop
pop
mov
loopne
out
loop
out
xchg
movq
imul
orb
in
cmp
mov
jecxz
jle
mov
fs
or
mov
dec
lods
jo
out
push
jnp
jno
xlat
scas
push
rcrl
mov
les
xchg
push
mov
lock
mov
sti
mov
hlt
sub
adcb
cmpsb
into
dec
or
cmp
mov
sbb
popf
push
pop
cwtl
rolb
mulb
cmp
inc
jae
fwait
adc
xchg
push
lods
mov
and
add
std
sub
adc
cmp
test
lret
dec
mov
mov
and
push
push
jge
loopne
nop
mov
inc
mov
int
nop
into
call
mov
mov
sub
pop
pusha
or
lds
dec
je
cld
int
fnstcw
clc
add
loope
jp
iret
ret
add
fistpl
push
push
pop
jno
cmp
mov
jmp
cmp
inc
scas
cmp
pop
pop
outsl
cmp
es
xchg
outsb
dec
mov
cld
hlt
ja
inc
cli
insl
sbb
sbb
jne
insl
push
dec
mov
stc
mov
js
and
leave
ret
lods
repnz
lock
sbb
outsl
or
mov
sbb
lock
and
into
divl
in
mov
jne
mov
and
popf
into
sub
mov
es
xchg
cmp
or
add
inc
xchg
stc
xchg
cmpsb
fst
push
inc
inc
sub
push
cwtl
sti
inc
cmc
shrb
pop
jl
popf
movsl
aaa
mov
jmp
cmp
and
sub
sahf
xor
or
xchg
popa
int
jbe
cwtl
rol
fs
jle
xrelease
mov
testl
inc
popf
repnz
xor
aam
mov
scas
push
into
jb
je
xorl
lods
sub
or
adc
shll
mov
ret
in
sub
mov
cmp
add
cltd
data16
insl
addr16
pop
lock
mov
jg
sarb
xchg
jne
jg
and
xchg
iret
cltd
mov
xchg
jg
sti
jmp
jns
iret
sbb
fwait
jnp
or
mov
push
sub
fwait
jnp
rorb
ud1
jp
mov
xor
repz
pop
cltd
popf
in
mov
shlb
stos
push
add
iret
jmp
cmpsl
in
lods
insb
pop
inc
sub
iret
notl
aaa
jno
mov
and
fbld
and
outsb
fwait
lcall
jne
loope
lock
xchg
xchg
orb
shll
sarl
loopne
inc
or
mov
addr16
iret
ficoms
enter
in
out
mov
iret
sub
sub
out
lods
repnz
scas
sbb
push
jge
test
mov
dec
out
int
mov
cwtl
jecxz
push
fucomi
out
pop
ss
daa
mov
imul
xchg
into
adc
jp
mov
sbb
adc
call
gs
xor
or
sub
push
mov
negb
sub
ss
mov
clc
in
dec
loopne
jae
repz
xor
data16
jno
mov
outsl
adc
push
subb
sub
dec
jnp
jne
xchg
mov
leave
out
ljmp
inc
xor
sbb
cwtl
lea
dec
imul
mov
lret
pop
inc
dec
dec
xor
dec
scas
mov
fcoml
sti
sahf
mov
pop
jb
mov
mov
outsl
or
les
rcr
subl
mov
and
pop
xchg
add
nop
in
mov
in
jg
pop
aaa
sub
enter
mov
mov
xor
fsubl
mov
jg
and
push
mov
or
movsb
inc
not
cmp
dec
jbe
cmc
je
sbb
es
ss
in
repnz
cmc
cli
adc
pop
xor
push
xor
inc
mov
popa
in
das
repz
scas
ret
loopne
jp
hlt
sbb
xor
sub
fisubrl
inc
pop
jp
sbb
push
rcr
scas
or
lock
jnp
cmp
test
call
xor
shll
sarb
rolb
xor
or
int
dec
jge
test
imul
cmpps
jp
and
and
sbb
push
add
xor
mov
jo
mov
les
int
mov
pop
add
mov
pop
push
or
push
lds
mov
in
nop
je
mov
nop
add
xor
sbbl
cld
jb
aad
pop
je
push
cwtl
mov
std
push
lret
sahf
dec
xchg
inc
xchg
and
int3
test
ja
mov
push
mov
fmull
xlat
pop
pop
and
fsubs
sahf
sub
ljmp
pop
and
jnp
or
xorb
add
sub
adc
mov
or
fdivs
sbb
aas
decb
inc
cmpsb
fsubl
add
xchg
jb
std
cmpsb
xchg
xor
mov
shll
jg
inc
fimull
decb
insl
mov
stc
cmp
mov
clc
push
leave
cmp
dec
cmp
or
andl
adc
in
inc
fistl
orb
sbb
sub
push
xchg
mov
imul
mov
and
js
lea
sub
lods
jp
out
lods
rol
movsb
and
push
inc
adc
int3
test
cmpsb
call
lcall
or
push
xor
cwtl
jno
ds
pop
and
orb
out
test
ret
data16
lahf
repz
add
jns
push
fisttps
cmc
stc
repnz
dec
xchg
ljmp
xor
pop
pop
jnp
scas
in
ret
xor
xchg
and
fbld
inc
sbb
aas
push
sbb
out
sbbl
or
cmp
jbe
cltd
add
xchg
and
pop
aas
mov
xor
out
sub
popa
lcall
jns,pn
cld
add
sbb
mov
iret
cs
add
imul
inc
aad
xchg
addr16
andl
mov
jns
xchg
cmc
xchg
leave
jmp
xchg
or
pop
push
inc
js
cs
mov
jns
shll
stos
leave
sbb
xor
xor
aas
aad
xorl
rol
fldt
xchg
fidivrs
jmp
push
sub
mov
mov
popl
jno
dec
push
fstps
dec
xchg
nop
movsb
inc
cmp
xchg
lea
mov
cli
mov
lret
jo
or
jmp
xchg
mov
sbb
dec
fisubrl
mov
repz
dec
dec
out
xchg
mov
cli
out
rclb
mov
cmp
sub
pop
loope
lahf
mov
lret
and
inc
sbb
sbb
mov
xchg
imul
cli
push
sahf
xchg
cmp
dec
sbb
es
mov
adc
jnp
pop
mov
outsb
sbb
xor
bound
cltd
xchg
rorb
lcall
and
mov
add
dec
clc
push
mov
mov
mov
iret
jle
sti
push
sbb
in
add
mov
jmp
inc
cli
lret
dec
inc
addr16
xchg
cmp
inc
push
mov
in
fadd
sub
imul
inc
lods
mov
out
cwtl
push
mov
xchg
ret
xchg
push
inc
mov
js
fnstcw
pop
in
sahf
adc
rorb
pop
push
cmp
sub
xchg
xchg
jg
jp
jmp
decb
xlat
jmp
mov
inc
xchg
push
in
aam
jbe
xor
lods
or
xchg
push
push
icebp
repz
xchg
fwait
imul
fld
ds
fisubs
aaa
negb
sti
in
inc
loope
jne
or
in
pop
fstps
push
pop
insb
cmp
lret
cmp
and
jae
push
das
adc
out
cmp
jo
repz
fsubl
xchg
sahf
dec
cmc
xor
dec
inc
jmp
pop
fsubrl
inc
testl
xchg
scas
fcompl
dec
cmp
dec
je
inc
mov
cs
sub
ret
aad
dec
push
sbb
sbb
inc
dec
loop
jae
xchg
les
xchg
xlat
insl
test
lock
adc
add
push
push
pop
sbb
jecxz
js
movsl
iret
insb
imul
imul
add
push
xor
je
push
scas
mov
adc
push
adc
and
test
imul
push
add
fwait
shlb
sub
mov
or
sub
dec
fidivs
popa
nop
pop
in
insb
push
or
pop
sub
call
jge
test
push
mov
jecxz
nop
add
mov
scas
mov
and
inc
xchg
or
and
ja
rorb
and
imul
sti
rcll
or
push
mov
iret
xchg
mov
mov
out
pop
pop
xor
jg
sbb
jbe
ret
jl
xchg
bound
lret
inc
add
xchg
insb
jecxz
jae
cmp
jecxz
sbb
jbe
xor
shlb
jne
pop
inc
sbb
icebp
fcmove
xor
mov
adc
or
fdivrl
dec
inc
inc
cwtl
push
mov
mov
js
inc
jbe
leave
dec
adc
popa
mov
push
std
sbb
das
mov
movsb
lods
inc
xlat
int3
xlat
aam
fistps
adc
cmp
dec
lcall
pop
stos
mov
cmp
sbb
mov
arpl
scas
mov
ja
repz
xlat
icebp
test
sub
rcll
mov
outsb
push
js
mov
mov
push
sub
test
mov
mov
xchg
xor
test
test
repnz
cld
xor
xor
fcmove
out
lods
jmp
push
jg
aam
cmpsl
js
scas
mov
jge
femms
nop
push
out
ss
pusha
cmpsb
das
jo
aaa
insl
jae
daa
jb
xchg
fists
lea
js
xchg
pop
sub
lret
es
xor
mov
loope
ja
cmp
inc
dec
and
icebp
mov
cmpsb
js
dec
inc
dec
aad
pop
es
cmpb
jmp
ret
test
hlt
jb
push
sbb
aas
inc
in
arpl
xchg
popa
popa
lret
out
nop
sbb
sub
popf
incl
cmpsb
leave
adcb
inc
cmc
xlat
xor
daa
xchg
push
jns
dec
pop
scas
and
push
mulb
test
or
cmp
mov
cmp
cmpsl
push
inc
pop
out
fmuls
cmp
test
js
popf
imul
stos
jbe
inc
push
repnz
xchg
push
insb
jl
in
stos
mov
xor
mov
pop
jno
sbb
notl
xchg
insl
pop
dec
lea
lock
and
mov
mov
push
xlat
insb
xor
sub
or
mov
aaa
adc
movsb
sbb
popa
in
push
orl
lock
rcrb
fucom
add
sub
pop
dec
rclb
fisubrl
jns
jbe
adc
cmp
lcall
lds
jmp
inc
lock
or
push
xor
cmp
mov
jecxz
sub
cmp
adc
popa
shrl
cmpsl
fwait
cmp
mov
pushf
sbb
mov
lods
movsb
push
lods
mov
push
jecxz
test
xorb
ljmp
imul
iret
js
sub
adc
outsl
je
into
jl
adc
cmpl
lea
movsb
push
mov
pushf
pop
andl
xchg
push
cmp
in
mov
adcl
mov
pop
imul
fmuls
gs
ret
jno
mov
inc
call
adc
fstpt
xchg
xchg
cli
push
pop
cli
and
inc
xchg
sbb
dec
inc
scas
xchg
push
xchg
cmp
in
xchg
punpckhdq
mov
mov
xlat
leave
push
into
int
outsl
loope
mov
ljmp
dec
jle
push
leave
mov
popa
jne
mov
adc
mov
mov
and
xor
mov
in
stos
stos
bound
jge
cmpsb
int
mov
fisttpl
jnp
mov
cmc
std
mov
mov
fcmovnbe
pop
nop
pop
push
mov
cmc
mov
fimull
mov
bswap
fiadds
aad
ljmp
mov
popf
mov
lret
sbb
mov
loopne
mov
popa
xchg
mov
mov
inc
into
push
roll
out
fnsave
dec
das
add
inc
dec
jge
fs
fadds
into
mov
ljmp
mov
adc
xchg
mov
push
and
mov
cld
cmp
jb
mov
push
out
jno
stos
or
ss
or
insb
dec
inc
add
aas
call
jns
pushf
mov
mov
xor
dec
mov
mov
leave
mov
jge
jae
cmpsl
mov
jp
and
inc
push
or
loope
cmp
cmp
push
cmpsl
xchg
fsubl
cltd
int3
test
leave
fnstcw
popf
fs
or
movsb
and
xor
jae
dec
gs
in
push
sub
cmp
xor
dec
sbb
scas
mov
pop
into
xchg
cmp
or
mov
mulb
inc
xor
mov
xchg
fdivrl
jbe
xchg
repz
and
dec
inc
xor
sarb
mov
mov
in
fcomps
imul
or
push
aaa
lods
pop
int3
test
xchg
push
sub
dec
out
push
jecxz
dec
mov
repz
add
dec
mov
adc
and
inc
jg
sub
xchg
fiaddl
push
pop
loop
les
fbld
aad
and
adc
push
pop
mov
sbb
mov
mov
clc
addr16
scas
lods
mov
or
lret
or
femms
mov
mov
addr16
push
adc
mov
adc
mov
add
sbb
xchg
add
inc
pop
outsl
aas
cwtl
push
ficompl
cmp
ret
dec
stos
sub
js
orb
push
mov
add
jbe
incb
mov
pop
arpl
adc
orb
sub
les
jb
popf
or
mov
stc
mov
jne
jae
test
fsts
mov
xor
ljmp
dec
add
in
pop
test
inc
jno
sbb
mov
cmpsb
in
fcmovnbe
xchg
mov
loop
jle
pop
xchg
add
jge
xor
or
rcl
adc
mov
xchg
icebp
test
movsl
dec
out
mov
adc
push
sbb
stos
andb
stos
add
cmpsl
adc
popa
and
out
push
loope
inc
add
test
and
pop
fs
into
push
std
mov
fildl
fidivs
xlat
mov
dec
repnz
or
mov
xchg
loope
clc
test
pop
fidivrl
fisubl
xchg
xor
mov
cltd
pusha
push
xchg
shlb
jmp
sbb
jle
mov
pop
into
imul
mov
jge
imul
mov
add
stos
mov
cmpsl
test
pop
test
sub
inc
lret
scas
push
into
leave
ljmp
fists
pop
mov
pop
sbb
testb
and
mov
in
repz
das
dec
mov
cli
and
jbe
inc
mov
ret
push
pusha
cmp
jne
jnp
into
pop
stos
lret
dec
loope
into
outsl
es
scas
xor
or
andb
je
test
xchg
push
xchg
jbe
mov
or
iret
jle
adc
pop
fmulp
fs
and
pop
dec
hlt
mov
insb
fisubrs
push
and
mov
xchg
xchg
js
mov
test
scas
fnstcw
loope
jns
pop
pop
push
cmp
das
repz
stos
inc
fdivrs
cmp
lock
nop
and
sbb
divb
add
mov
adc
xor
mov
xchg
lret
out
jae
cmp
push
pop
adc
orb
and
fcoms
stc
mov
sti
mov
push
mov
cmp
lea
sbb
mull
test
sarl
mov
aad
mov
rorl
hlt
xchg
jecxz
mov
sub
std
pop
sub
adc
pop
adc
mov
sti
mov
mov
movsb
adc
adc
and
cmpsb
sahf
pusha
xchg
xor
shl
pusha
cmp
leave
std
dec
add
insb
aam
mov
xchg
icebp
loope
int3
in
pop
stc
xor
pop
popa
sub
lahf
mov
jbe
and
ret
mov
add
mov
xor
in
xchg
fidivl
pop
repnz
mov
daa
cld
pop
or
dec
shrl
arpl
push
push
ficompl
ljmp
mov
icebp
js
inc
cli
jne
les
sahf
adc
lret
jp
xor
fadds
xor
ja
jecxz
movsl
punpckldq
int
loopne
outsb
jg
subl
mov
mov
mov
push
sub
inc
mov
push
js
test
lock
sub
repz
lods
pushf
in
std
push
cld
addr16
in
lret
in
fstps
mov
jno
xchg
push
in
inc
pop
test
clc
in
and
sub
jns
mov
bound
jge
ret
shl
rcrl
popa
cmp
ja
mov
mov
sub
test
push
pushf
and
cmp
cltd
mov
fdivl
sbb
rol
pop
sub
push
push
pop
push
rcll
popf
lcall
push
repnz
mov
xchg
arpl
adc
push
in
lret
ds
js
jno
fnstsw
es
pop
nop
xchg
and
insl
cltd
ud0
clc
xchg
push
out
jecxz,pt
in
adc
cli
jmp
add
jb
mov
mov
and
xor
aas
push
ss
notb
mov
pop
in
cwtl
dec
add
mov
inc
pop
xor
add
call
sub
xor
lock
mov
or
mov
cmp
mov
mov
stos
out
enter
sti
popa
and
pusha
fbld
push
pop
pop
sbb
adc
pop
xchg
leave
mov
clc
rorl
shll
lret
ja
inc
rolb
in
sbb
fstl
cmpsb
ret
sbb
jmp
push
mov
ja
mov
sbb
or
js
insl
jbe
xchg
pop
or
push
fwait
mov
mov
dec
jnp
insl
jg
lcall
rcrb
jg
rcrl
outsb
jl
stos
pop
cmp
add
jae
jae
out
add
insl
cmp
pop
sub
and
mov
nop
sbb
mov
in
pop
adc
es
sub
adc
xor
movsl
dec
adcl
inc
inc
add
loop
xorb
in
sbb
add
mov
aas
adc
repnz
xchg
xchg
int
mull
lahf
test
cmpsl
mov
sbb
addl
popa
fwait
movsb
in
cwtl
enter
push
enter
add
jnp
fcomi
mov
add
and
mov
outsl
cli
mov
sbb
xor
xchg
call
fimuls
cmc
mov
and
push
cmpl
fwait
mov
popa
dec
jb
mov
add
add
std
xchg
xchg
ljmp
cli
pop
push
cmp
sub
lret
push
push
jecxz
sub
or
pop
or
fdivs
pop
xor
adc
mov
call
arpl
and
or
cmpsl
inc
sarb
inc
fcoms
adc
fidivrs
inc
or
jbe
inc
xor
outsb
aad
daa
int3
or
xchg
ds
mov
idivb
enter
ljmp
cltd
inc
in
popa
cmp
inc
sbbl
sub
dec
jnp
mov
divl
cmp
xchg
jmp
sub
fs
in
int
push
fbstp
push
jp
push
fcoml
xchg
out
lahf
mov
js
and
adc
fsub
xchg
add
dec
mov
repnz
push
xchg
push
inc
mov
mov
xor
mulb
divl
inc
push
das
js
adcl
pop
pop
jmp
mov
mov
jnp
addr16
arpl
adc
in
ficoms
je
xor
inc
and
mul
mov
adc
fldl
in
inc
xchg
dec
mov
pop
js
rol
add
mov
scas
mov
inc
aaa
test
imull
andl
cwtl
cwtl
es
out
addl
dec
div
or
decl
int
mov
aam
imull
mov
mov
dec
addl
call
mov
lret
inc
xor
push
notb
pop
inc
pusha
loopne
pop
jbe
xchg
mov
fidivs
jle
xchg
mov
shl
mov
mov
sub
inc
jb
divb
enter
nop
pop
xchg
xor
daa
stos
mov
xchg
add
dec
xchg
or
mov
ret
adc
pop
test
xchg
lds
nop
and
dec
ret
fsubrp
ja
add
orb
xchg
mov
es
rcr
cmp
loope
xchg
aaa
outsb
sub
xor
data16
push
lret
xchg
xor
sub
cmp
sub
aad
fnsave
cld
movsb
sbb
xlat
xorl
cwtl
test
out
add
sub
test
pop
data16
jae
cmc
test
mov
popa
xchg
xlat
das
mov
test
ret
inc
cli
pop
push
add
push
loopne
ror
jge
icebp
add
mov
nop
jg
pop
push
shrl
xor
jae
jg
int
xor
pop
fsub
stos
lods
pop
test
call
fdivr
push
push
jae
cmpsl
pop
scas
in
iret
inc
out
int
imul
jbe
add
xor
aas
sub
dec
roll
inc
add
stos
aad
push
mov
inc
scas
xor
rolb
mov
aad
shrl
bound
clc
adc
icebp
jl
das
outsl
and
bound
test
jne
jno
das
mov
jo
adc
in
mov
xor
jge
sub
lret
stc
push
sub
pop
mov
or
aam
movsb
rcrb
stos
popf
cmc
cmp
cmp
call
mov
xor
outsb
scas
pop
adc
mov
cmp
add
filds
leave
mov
repnz
inc
clc
aad
je
mov
mov
roll
cmp
scas
lea
cmp
jo
xchg
mov
add
mov
dec
pop
das
ficoms
push
rorb
jns
insl
mov
mov
pop
sarl
sahf
nop
addr16
inc
lret
fistps
aas
sti
jl,pt
push
jmp
fisttpl
mov
or
les
jnp
jo
jmp
push
xchg
and
jl
fcoml
in
in
popa
sbb
sub
bound
addr16
push
add
push
jg
dec
jmp
insb
out
mov
cmp
pushf
data16
dec
xchg
or
sub
movsl
aam
sbbb
outsb
cmp
pop
mov
test
jae
movsb
filds
movsl
sahf
test
push
mov
pop
mov
call
mov
push
inc
data16
addr16
bound
mov
jecxz
nop
leave
xor
add
into
sti
xor
dec
inc
add
push
inc
ds
xor
imul
ret
xor
and
or
pop
das
lret
scas
or
mov
test
push
sahf
or
cld
addb
mov
and
pop
inc
cmp
iret
cmp
push
loope
fiaddl
cmp
test
mov
jo
orl
mov
mov
xor
stos
sub
stos
pop
inc
pop
xor
mov
stos
dec
jo
into
imul
lea
cmpsl
hlt
addr16
ss
mov
mov
sbb
mov
inc
xchg
xor
pop
fsub
and
in
and
push
jle
or
cmp
xchg
movsb
cmp
mov
ret
ret
test
xor
add
fistl
scas
push
popf
push
xor
into
push
lods
out
stc
cli
pop
aas
pop
xor
jbe
lret
daa
jae
jmp
fbld
cmp
mov
adc
push
in
ficoml
sub
sub
negl
sbb
mov
mov
shl
pop
mov
sbb
das
dec
in
mov
xorps
popf
mov
dec
pop
jp,pn
shll
sub
mov
inc
roll
daa
sub
outsb
lea
lods
jnp
push
shr
jmp
adc
cld
mov
jp
jnp
bound
adcl
xor
and
aaa
fcmove
and
jg
lds
adc
xchg
inc
mov
mov
cmp
arpl
and
lret
test
pop
pop
sub
pop
cmc
icebp
ror
shrb
ja
iret
mov
jp
mov
ror
mov
or
inc
lret
push
and
mov
cmpsb
cmp
and
mov
mov
movsb
push
aaa
xchg
jg
rclb
gs
mov
xchg
and
int
xor
jp
loop
mov
xor
lds
cli
call
sbb
or
xor
dec
out
add
or
out
sub
fisttps
pop
and
scas
insb
jno
mov
clc
std
mov
push
js
fidivl
sbb
dec
push
rol
inc
leave
xor
mov
dec
dec
mov
hlt
pop
daa
add
xor
xchg
push
mov
inc
insl
mov
mov
ret
mov
xchg
push
push
mov
movsb
fwait
outsl
outsl
jp
push
sbb
test
int3
mov
mov
mov
sbb
sub
rcr
test
xchg
lcall
sbb
jno
cmp
push
push
je
adc
dec
cmp
lock
and
inc
mov
push
adc
fs
inc
add
sbb
xchg
cmp
rcrb
out
mov
in
adc
fistl
or
lret
push
mov
jl
test
aaa
jbe
push
fisubs
scas
dec
pop
test
aam
mov
test
mov
cmc
sub
lea
lods
cld
jb
js
push
inc
sub
sub
adc
movsl
cmp
rorb
push
add
mov
aas
in
push
stc
dec
lds
rorl
filds
sbb
loope
or
or
xchg
sti
jb
stc
ret
jo
or
cmpsl
fincstp
loope
lods
push
jb
dec
pusha
arpl
mov
sbb
inc
mov
aaa
mov
das
aam
flds
aaa
cmp
fcmovnu
mov
mov
push
push
inc
xchg
bound
sub
mov
setnp
rcl
inc
subl
and
push
inc
mov
mov
sbb
cli
js
jge
mov
pop
pusha
xor
scas
add
enter
shlb
pop
mov
cmp
cmp
xchg
in
pop
in
mov
ret
sbb
cmp
pop
dec
lret
or
aaa
xchg
jno
daa
outsl
call
cmp
cs
pop
mov
dec
in
pop
lea
jae
push
dec
add
jns
adc
data16
mov
push
inc
into
jne
andb
xchg
mov
imul
mov
add
pop
xor
fcomps
push
sub
insl
jecxz
sbb
imull
jmp
add
mulb
inc
insb
push
lock
mov
popf
ds
adc
sub
lea
push
push
fldl
sbb
shrb
lret
or
sbb
jg
scas
fidivl
test
xchg
pop
mov
ret
stos
mov
loope
in
stc
jns
jg
jg
lds
adc
enter
xor
push
mov
pop
pop
lret
shl
decb
sub
mov
jp
xchg
ljmp
jle
lea
inc
sub
out
test
js
push
mov
aas
pushf
testb
in
mov
rorb
or
test
xor
fs
pop
out
adc
jge
or
outsl
ja
mov
jle
repnz
fimull
fucomip
mov
xor
pop
shll
cmpb
jns
pusha
inc
aam
pop
inc
xor
adc
xor
into
and
inc
xchg
cltd
fcmovu
pop
fstpl
mov
mov
jns
mov
inc
cmc
popf
pop
subl
pop
jno
dec
fsub
mov
mov
rolb
add
mov
push
jne
fs
lock
pop
dec
imul
filds
mov
jmp
pop
sub
clc
lcall
push
ss
xlat
xchg
andb
xor
add
fwait
push
dec
aaa
movsl
jbe
loop
mov
sti
stos
test
cmp
mov
enter
mov
sub
sbbb
cmc
mov
pop
push
mov
sbb
icebp
mov
or
sub
enter
popf
outsl
inc
sub
stos
fcomps
xchg
test
push
dec
cwtl
push
sub
dec
sbb
and
push
push
ret
mov
cmp
add
iret
pop
mov
ud1
jbe
fsubrs
mov
sbb
dec
cmp
jnp
pop
mov
ds
out
mov
dec
int
mov
xchg
lods
sub
in
mov
inc
cmp
in
lods
sub
popa
fsubrs
sub
fs
or
pushf
pop
cmp
in
pop
leave
xchg
cmpsb
xchg
outsb
mov
pop
fsub
imulb
mov
and
enter
add
icebp
call
dec
divl
ret
and
mov
mov
ds
push
cltd
inc
inc
jle
push
rorb
aaa
shll
cld
dec
jecxz
insl
xchg
push
test
pop
pop
add
jecxz
and
mov
cmp
scas
and
addr16
jmp
sbb
add
inc
mov
repz
hlt
ss
add
add
jg
jno
popf
sub
pushf
dec
test
xchg
sbb
das
mov
in
mov
push
scas
adc
mov
ds
sub
lock
sbb
daa
push
clc
in
movsl
nop
enter
sarb
adc
shrb
jp
xchg
cmpsl
lods
mov
in
dec
sahf
jne
sarl
ret
inc
enter
test
insb
add
jns
ror
pop
ja
sti
call
xchg
dec
mov
pop
das
clc
mov
outsb
jbe
out
stos
daa
bound
mov
stos
mov
cld
fbstp
fsqrt
sbb
mov
inc
idiv
rol
pop
xorl
adc
jno
sub
aad
sahf
push
inc
in
arpl
loope
dec
ret
push
mov
ss
sub
cmc
and
xchg
sub
jmp
xchg
push
mov
cmpsl
and
xlat
cltd
gs
mov
dec
mov
xchg
push
jle
sahf
jg
mov
or
inc
push
mull
aad
int3
inc
push
out
add
xchg
push
pushf
sub
and
test
jg
push
outsl
jp
pop
cmp
nop
push
push
jns
push
test
pop
pop
aaa
rol
jbe
std
stos
and
mov
xor
aam
xchg
out
out
push
sub
jb
push
push
cmc
or
sbb
test
xchg
push
pop
xchg
mov
xchg
push
int3
sub
jne
into
int3
mov
int3
scas
sbb
jo
in
mov
cmp
pushf
cmp
mov
es
test
ja
lds
add
jne
sub
fwait
pushf
or
test
jo
cmp
in
xor
bound
out
loope
and
cli
stos
imul
mov
cld
lret
dec
push
add
iret
mov
aaa
movsb
imul
out
testl
mov
addr16
or
and
fadd
ficomps
out
mov
fmull
insl
pushf
arpl
jp
xor
lods
cmpb
xor
rcrb
push
xchg
push
sbb
xchg
rcrl
test
add
fadds
lds
pusha
mov
mov
mov
es
das
sbb
xlat
je
outsb
jbe
dec
cmp
jge
stos
push
cs
js
lret
pop
dec
push
in
hlt
xchg
sbb
mov
cmp
icebp
sub
xlat
and
push
cltd
sub
imull
dec
stos
push
sub
and
dec
ds
inc
das
out
push
addr16
dec
and
jp
sub
sub
sarb
sub
popa
lock
rcrb
jecxz
dec
mov
xchg
pusha
repnz
loop
stc
adc
mov
or
and
or
push
repnz
xchg
mov
xor
dec
push
push
lcall
data16
add
sti
and
stc
into
data16
mov
in
rolb
test
mov
jo
insl
add
mov
xchg
in
ret
loope
je
inc
and
jno
loop
out
fyl2x
adc
fxtract
lods
fcmove
es
and
lret
mov
cwtl
adc
fdivrl
push
inc
pop
adc
ljmp
mov
xlat
fcmovne
mov
and
push
pop
aas
xchg
pop
mov
repz
mov
rcrb
cld
es
loop
jo
in
lds
push
cmpsb
cmp
pushf
adc
es
fldl
xor
fs
jns
lods
xchg
dec
arpl
pusha
pop
ret
push
lods
repz
xor
push
jl
stc
push
adc
daa
stos
sar
aas
sub
sbb
cmp
cmpsl
inc
mov
xchg
xchg
in
pop
loopne
and
dec
bound
mov
lret
mov
mov
lea
imulb
lods
or
shlb
jmp
jp
clc
sahf
stc
inc
push
out
scas
mov
nop
mov
std
dec
push
mov
bound
jg
imul
dec
notl
out
sub
movsl
lods
cltd
out
test
into
movl
mov
inc
or
push
mov
jle
sub
cmp
or
aad
add
adcl
sbb
lcall
sub
jno
lcall
jg
scas
int
xor
inc
mov
lds
xchg
jmp
cmovns
cmp
insb
outsl
mov
jge
mov
push
cmp
add
in
loope
dec
in
jbe
pop
fmuls
mov
subl
lret
loope
ja
arpl
cmpsl
gs
fst
pushf
mov
aas
popl
pusha
int
push
mov
test
or
cwtl
cld
out
sbb
out
icebp
mov
arpl
ljmp
aad
sbb
jae
enter
ret
subl
adc
aaa
adc
into
mov
lret
jb
xchg
jp
or
add
add
add
arpl
movsl
push
scas
scas
jl
adc
mov
dec
xor
push
fiadds
xor
push
cwtl
jae
ret
jecxz
jnp
xchg
aad
jmp
pop
cmp
sbb
test
aam
xor
inc
rclb
xchg
jecxz
insb
mov
js
pop
sub
dec
mov
mov
xor
sbb
popf
jmp
push
std
imulb
fdivr
mov
mov
shrl
sahf
xchg
leave
mov
lcall
cmpsl
lahf
xor
pop
adc
jg
movsl
sbb
push
in
cmc
inc
repnz
add
jae
out
adc
outsl
shlb
and
cmp
xchg
push
jl
into
jl
pop
jns
inc
inc
mulb
jne
and
je
mov
or
stos
popa
pop
cld
pop
pop
mov
sub
lods
mov
xor
shrb
mov
adc
jg
orb
leave
jmp
sti
fistl
imul
pushf
lcall
xor
fwait
cwtl
jge
mov
push
push
clc
jmp
cmp
aaa
rclb
pop
dec
shl
xchg
xor
push
push
jo
jb
cmp
insl
ja
xor
lahf
frstor
insb
sahf
aaa
push
inc
add
dec
add
shrl
mov
aaa
dec
xchg
mov
mov
push
out
sub
fld
or
jno
imul
sbb
dec
pop
aad
repz
sbb
pop
fsubl
adc
dec
idivb
lcall
jmp
mov
jo
dec
cmp
mov
lahf
jno
jmp
ds
xor
mov
test
pushf
pop
mov
and
pop
sarb
xor
gs
push
ret
jl
pop
push
dec
cmp
xor
shll
xchg
jg
out
push
outsb
pop
ljmp
dec
cmp
pop
jb
mov
jg
and
jns
mov
mov
sub
jp
jl
dec
mov
and
pop
jae
mov
xchg
movsl
nop
dec
movsb
dec
adc
xchg
or
out
mov
or
in
fistps
mov
mov
mov
scas
cmp
pop
xor
insb
icebp
push
adc
cmp
mov
decb
repnz
insl
mov
movsl
adc
or
and
int3
pop
pop
cmpsl
popa
test
and
xchg
enter
or
sbb
sbb
test
out
mov
push
jecxz
ret
imul
push
gs
aam
mov
adc
int3
pop
mulb
mov
jmp
and
nop
jge
call
dec
movsb
dec
fistl
stos
mov
insl
cmp
and
sbb
into
pop
js
flds
sbb
inc
push
jmp
push
inc
into
sub
cwtl
ret
xlat
out
jae
mov
imul
cmc
sbb
xchg
cld
pop
aam
popf
pop
int3
or
mov
xchg
sti
adc
fstl
pop
loop
sub
push
test
mov
inc
scas
fisttpl
jmp
into
push
das
mov
xor
stos
repnz
xchg
xor
fisttpl
inc
je
test
jp
add
fildl
mov
sub
aam
mov
ret
mov
jnp
outsb
cltd
ret
bound
and
dec
loopne
or
mov
pusha
pop
push
mov
inc
xlat
shlb
dec
scas
je
dec
sub
pop
sti
notb
mov
inc
dec
push
int3
orl
and
mov
xor
mov
out
or
ds
push
mov
sahf
mov
lahf
nop
inc
mov
aaa
pop
sbb
cmp
mov
adc
cs
add
stos
jge
nop
nop
jmp
xor
cmpsb
or
push
faddl
sub
cmp
cmp
pop
loope
movb
and
sbb
vmread
pop
mov
int
imul
xor
jne
dec
jle
mov
fisttps
outsb
adc
shl
cmpsb
push
movsb
adc
jmp
jle
test
mov
push
add
std
sub
inc
mov
leave
and
loopne
es
xor
sbb
cwtl
daa
inc
addl
sbb
push
add
jle
lds
pusha
push
enter
sbb
dec
lret
cltd
push
xor
stc
orl
jl
daa
sub
cmp
movsl
std
jp
js
adc
cmp
adc
repnz
and
dec
mov
clc
or
cmpsb
dec
out
loop
dec
cmp
aas
ud2
js
stos
pop
or
mov
cli
xchg
and
iret
mov
sbb
xchg
xchg
fstpt
imul
lods
repnz
repnz
mov
jl
sahf
aad
xchg
and
push
in
or
cltd
cwtl
sub
pushf
fldenv
adc
cmpsb
adc
adc
xchg
inc
inc
lods
push
scas
testl
xor
fisttpll
aas
addr16
push
mov
imul
clc
dec
test
push
cmc
cmpl
icebp
xchg
lods
ljmp
jp
insb
push
sbb
les
xchg
pop
mov
popf
inc
imul
and
das
xor
data16
xlat
notw
in
or
lret
mov
jecxz
aam
mov
iret
mov
jmp
flds
pop
subb
ljmp
dec
pop
jno
xor
cmp
call
push
jo
jnp
inc
sbb
lcall
pop
int
out
ds
or
inc
jg
xchg
push
in
mov
adc
cmpsb
cmp
mov
xlat
dec
xor
cmp
stos
jecxz
clc
not
dec
in
lret
cmp
mov
jns
adc
imul
and
cmp
and
cmc
sti
push
out
push
movsb
fildl
inc
fstl
in
dec
arpl
push
into
mov
xor
rcr
jge
mov
pusha
pop
lahf
int
shrl
sbb
and
sahf
mov
clc
xor
inc
dec
bound
clc
xchg
loop
cmp
pop
push
cmp
mov
add
and
lcall
add
lahf
and
pushf
add
leave
sbb
or
mov
mov
push
in
hlt
lret
adc
pop
mov
sahf
pop
xchg
fldl2e
add
jmp
sbb
mov
jmp
dec
mov
shlb
dec
lods
rcrb
mov
mov
push
jl
mov
sbb
cmp
dec
mov
sub
ret
pop
data16
add
sahf
mov
pusha
bound
cmpb
xorl
mov
adcb
adc
adc
je
mov
mov
mov
fistpl
xor
dec
xchg
shrb
sub
jns
sbb
jge
dec
lock
dec
dec
sub
cli
call
enter
hlt
fcoms
mov
adc
call
jns
daa
not
pusha
and
aad
mov
cmpsb
lret
js
or
and
repnz
xlat
loope
sub
mov
mov
inc
dec
jge
shlb
or
xor
negl
inc
repz
cld
imul
out
mov
xchg
cmp
mov
jmp
xlat
pop
rcll
fbld
cmp
mov
cmc
mov
dec
fs
imul
ljmp
arpl
mov
xchg
dec
push
xchg
sbb
int3
pop
xor
enter
push
mov
mov
add
xchg
or
mov
lret
cltd
mov
adc
cmp
push
dec
add
test
jmp
cmp
or
fildll
pop
fdivs
and
push
cli
mov
in
sbb
mov
call
sub
cmp
fisubrl
popf
adc
lea
cmp
or
or
inc
icebp
and
jmp
fwait
mov
mov
push
push
fwait
push
sahf
push
pop
out
imul
mov
insb
dec
sbb
mov
fisubrs
sub
pop
insl
hlt
inc
sub
lcall
lahf
test
mov
push
out
leave
mov
mov
mov
pop
adc
xchg
aaa
sub
pop
in
xchg
sti
mov
add
cmpsl
sub
jp
and
jp
cmc
cmp
jecxz
daa
outsb
xchg
dec
jg
sbb
push
lock
aad
clc
pop
cmp
into
sahf
sub
mov
mov
push
adc
xchg
xor
call
push
stos
jecxz
leave
fwait
add
mov
rcrb
cmc
pop
mov
repz
jmp
adc
loopne
mov
mov
jnp
out
loop
lds
mov
sbbb
aas
pop
cs
mov
imul
xchg
imul
std
ret
cwtl
test
mov
pop
nop
jge
popf
mov
cmp
sbb
inc
negl
xchg
inc
out
adc
mov
scas
mov
pop
cmp
add
or
jne
sbb
shl
add
jns
lret
les
gs
push
push
ret
mov
scas
shlb
mov
adc
inc
mov
and
pop
or
outsb
add
ja
dec
loope
out
imul
cli
cmpsb
rol
push
push
dec
jmp
addr16
xchg
outsl
pop
pop
jae
lret
inc
loopne
js
dec
jle
lods
pushl
mov
pop
aaa
pop
inc
inc
xchg
loopne
stc
inc
xchg
ret
ret
loopne
push
jge
scas
and
or
and
ret
les
data16
add
pop
loop
pushf
out
pop
add
mov
pcmpeqd
into
pop
fadds
clc
sbb
jno
pop
jbe
movsl
mov
ja
jb
mov
or
in
aas
jno
mov
subb
stc
int3
iret
repz
pop
inc
pop
popa
icebp
test
or
mov
ljmp
cmpb
or
outsl
dec
xor
je
inc
mov
xlat
sbb
mov
mov
push
pop
xchg
aas
sub
xor
es
idivl
neg
fdivl
icebp
or
stos
mov
and
movb
int3
xor
lds
fstps
sbb
push
xchg
out
pusha
mov
or
jae
gs
mov
cli
test
sbb
daa
iret
fdivrs
inc
dec
or
adc
cmp
aam
jge
shlb
insb
leave
sub
mov
jnp
cmp
jo
aaa
shlb
cmp
in
push
mov
or
mov
jnp
jb
adc
inc
mov
inc
lret
sahf
or
cmc
sub
lret
test
ja
repnz
inc
cmpsb
mov
add
stos
fcoms
out
mov
adc
enter
mov
pop
pop
or
ljmp
jns
popf
lods
or
lahf
fsubl
mov
aam
sub
push
sbb
nop
inc
repnz
pop
sar
sbb
insb
mov
pop
mov
daa
mov
or
jne
lea
cmpsl
pop
mov
pop
filds
out
data16
xor
mov
scas
jmp
outsl
daa
push
insb
arpl
imul
xor
mov
pop
js
mov
push
aad
sub
jle
sub
adc
imul
movsb
popf
in
dec
or
pop
in
pop
adc
pop
cli
nop
decb
and
cmp
movsb
cmpsb
std
mov
push
and
orb
jp
xchg
adc
xchg
daa
cs
sbb
test
lahf
repz
stc
xor
add
pop
ret
cmpsl
mov
and
mov
pusha
les
xor
sbb
scas
fidivl
xchg
in
insb
cmp
btsl
in
ret
sbb
jl
push
ret
out
loope
cli
dec
push
sbb
mov
xor
lcall
or
das
call
outsl
dec
call
jae
mov
out
mov
xor
sub
lret
cmp
rorb
inc
push
in
arpl
mov
adc
test
outsl
pop
lcall
inc
jne
rcrl
out
sbb
les
mov
je
clc
push
loope
inc
lods
xchg
mov
jne
fidivrl
inc
sub
push
js
cmc
jmp
inc
sbb
jb
jbe
inc
out
cmpsl
insb
cmp
addr16
rcl
xor
scas
mov
call
xchg
addb
lods
dec
mov
pop
jb
mov
add
loop
push
hlt
adc
mov
jne
movsb
push
lret
push
mov
fsubl
xchg
roll
jmp
mov
jecxz
int3
es
push
div
mov
cmp
xchg
add
fsubrs
rcl
pop
jl
mov
mov
xchg
jg
mov
out
push
gs
hlt
jnp
inc
cmp
mov
js
cmp
add
dec
xor
repz
fidivs
jnp
jne
inc
cmc
pop
data16
leave
cli
repnz
sub
jg
test
xchg
in
dec
mov
inc
lahf
stos
lds
dec
andb
bound
ja
mov
rorb
add
xchg
ja
and
pop
pop
bound
push
jns
push
mov
pop
mov
mov
inc
std
adc
adc
xchg
cmpsb
iret
outsl
stos
getsec
je
pop
xor
mov
push
imul
outsl
movsl
and
inc
xor
push
lods
std
rcrb
mov
loope
jnp
or
cld
out
ds
insb
nop
push
pop
sbbl
ss
push
mov
enter
cmpsb
sub
test
xor
fldcw
and
inc
popa
leave
adc
fildl
jp
in
cs
mov
mov
sub
mov
add
mov
into
outsl
aad
mov
gs
out
ficoml
cmp
les
dec
cmpsl
testl
cmc
out
lea
xlat
decb
test
movsl
xchg
iret
push
inc
jle
or
aaa
xorb
pcmpeqb
out
les
sbb
add
lret
or
in
mov
push
jbe
xor
cli
jno
rolb
jl
lret
stc
xor
int
fisttps
fcoms
ja
loope
mov
adc
jecxz
movsl
pop
pushf
jecxz
cmp
aam
mov
adcl
int3
xchg
push
lods
dec
push
aad
pushf
push
arpl
sahf
lods
or
out
jns
jnp
int3
lcall
xchg
xor
add
xchg
adc
push
or
into
push
sub
cmp
cmovo
jmp
into
aaa
gs
icebp
arpl
xchg
js
bnd
xchg
xor
push
mov
sub
nop
mov
inc
lahf
dec
jmp
sbb
jecxz
adc
dec
movsl
jle
mov
aas
mov
sub
add
frstor
jmp
jmp
pop
mov
and
or
push
ret
push
mov
adc
das
add
icebp
imul
ret
or
scas
mov
fld
sub
out
ret
xor
movsl
inc
popa
in
in
push
jmp
subb
sbb
sbb
jecxz
pop
and
ret
fs
inc
push
sub
mov
or
stos
sbb
hlt
repnz
mov
fistps
popf
addps
jns
mov
dec
pop
mov
fistl
push
jmp
test
js
ja
repz
push
sub
gs
cs
xchg
ret
xchg
fs
xchg
rclb
mov
or
dec
repnz
dec
aam
loopne
movsb
stos
mov
pop
xchg
loop
out
mov
xchg
xchg
adc
leave
sbb
stc
push
fwait
sbb
and
mov
lea
push
pop
js
sub
mov
inc
fidivrl
mov
jnp
pop
mov
adc
jge
sbb
es
loope
test
sbb
xchg
sub
loope
dec
jae
pop
pop
test
mov
cmp
adc
loope
xchg
and
loopne
jle
jg
pop
adc
movsb
hlt
lahf
fdivr
mov
dec
xchg
mov
repnz
loop
xchg
sbb
pop
sub
les
dec
ljmp
dec
sbb
push
mov
inc
jl
xchg
fcmovbe
ljmp
mov
fwait
in
sub
pop
fistpl
push
daa
fs
andl
ja
arpl
icebp
and
mov
js
aam
adc
mov
movsb
push
mov
inc
enter
inc
arpl
jle
pop
xchg
insb
scas
lret
xchg
and
xor
or
xor
mov
xchg
push
out
fstl
lsl
xor
mov
xor
repnz
add
minps
sub
shlb
mov
shll
inc
dec
push
add
cmp
adcb
sahf
roll
insl
rol
dec
mov
fistl
incw
out
xor
sub
nop
jo
ljmp
push
sub
mov
lahf
stos
int3
pop
jnp
push
lock
out
pop
mov
xchg
pushf
cmp
shll
out
mov
icebp
push
in
cltd
ja
push
enter
scas
and
dec
adc
js
test
mov
sub
xor
fwait
aas
test
dec
repnz
lcall
dec
sbb
repnz
inc
iret
orl
jns
bnd
add
adc
add
ret
in
out
pop
lds
popa
lds
sti
jp
test
les
push
jg
xor
inc
lods
bound
lock
pop
add
and
imul
or
xlat
sub
mov
insl
jp
or
movsb
in
or
in
or
aas
popf
ret
int3
dec
scas
add
cmpsb
pop
aad
stos
mov
ljmp
sbb
les
jp
push
inc
cld
ss
add
call
ss
bound
mov
dec
sub
push
mov
out
mov
clc
push
dec
add
dec
and
out
push
push
ficomps
pushf
cmc
fadd
fbld
fistps
dec
sbb
jno
clc
fcoms
fimull
mov
filds
fnstsw
cmc
push
jmp
dec
lods
out
add
out
jmp
fldl
out
inc
adc
test
cli
popa
mov
adc
add
pop
push
cmpsl
jp
adc
ljmp
and
das
mov
or
dec
adcl
push
pop
pop
or
aam
mov
and
jl
and
mov
or
and
mov
movsl
or
and
or
inc
lds
movsl
popa
dec
shll
mov
push
mov
js
pop
in
inc
cmp
xor
loop
cmp
movsl
mov
xchg
pusha
jae
mov
adc
dec
in
out
push
popf
clc
and
aaa
jns
inc
ret
xor
jmp
test
jno
lock
js
bound
test
enter
push
sbb
leave
inc
push
push
pop
sbb
and
arpl
lahf
movsl
scas
or
inc
xor
shrb
repz
into
iret
stc
out
jp
xor
ja
inc
inc
pop
mov
or
jns
negb
xchg
jmp
das
adc
sbb
push
push
stos
data16
ffree
mov
push
xor
push
leave
in
in
mov
inc
jnp
xchg
movsl
lret
mov
jecxz
fstp
add
ret
clc
and
jp
aad
popa
push
aam
inc
or
add
imul
pusha
adc
mov
add
insb
pop
sub
in
inc
sti
out
or
enter
and
sub
xor
xchg
add
in
xchg
mov
mov
loopne
movsl
rorb
outsl
mov
frstor
fimuls
adc
mov
and
pop
movsb
jmp
nop
inc
adc
test
mov
and
hlt
repnz
mov
cltd
fidivrl
xchg
dec
push
dec
jg
jb
push
jp
out
jecxz
jno
add
jp
cld
cli
mov
stos
sbb
push
jae
sahf
mov
and
sbb
pop
lds
int
cli
bound
adc
cmpsl
or
clc
in
mov
sbb
cmovb
pop
movsb
inc
or
in
adcl
mov
inc
mov
cmp
pop
add
repnz
aas
mov
push
jecxz
fcomp
pop
mov
cmpsb
push
jnp
cmp
pushf
mov
cmp
xchg
add
ja
pop
xchg
ljmp
pop
cmp
lret
out
push
jnp
js
das
inc
das
aas
pusha
vmread
lea
push
pop
jns
div
mov
push
jns
add
mov
stc
jbe
sar
adc
add
fistl
outsl
int3
push
inc
adc
inc
or
adc
or
sub
int3
push
and
jb
popa
shlb
lahf
pop
adc
clc
push
cmp
addr16
inc
popfw
enter
xlat
in
sub
scas
pop
es
ja
mov
jecxz
hlt
or
jp
xchg
stos
rorl
in
pop
add
push
xchg
inc
push
mov
je
out
clc
out
mov
sahf
aad
xchg
addr16
mov
fwait
dec
pusha
jnp
jae,pn
lods
movsl
and
or
inc
pop
ret
sub
divb
popa
testl
cld
mov
sti
xorl
mov
mov
mov
into
or
fs
pop
add
or
or
sbb
rcrl
jnp
lcall
pop
push
jnp
cmp
adc
bound
push
pop
dec
jne
gs
pop
jecxz
div
lahf
jns
mov
jo
or
or
jg
mov
jg
and
or
mov
fimull
ljmp
sub
out
pop
adc
jl
rclb
sbbl
xor
jl
fidivrs
cmp
mov
dec
aas
push
daa
mov
outsb
aas
ja
and
outsl
dec
adc
int
or
sub
pop
adc
notb
aam
jp
iret
test
fnsave
mov
lds
int
pushf
push
nop
sbb
mov
pop
push
shr
popa
sbb
pop
sarb
inc
aaa
popa
imul
adc
jg
sbb
cmp
push
mov
mov
arpl
movsl
cmp
mov
shrl
pop
jo
jl
testl
sub
notb
xor
in
std
xchg
or
mov
xchg
dec
jbe
movsb
out
or
sub
dec
lods
out
bound
scas
pop
mov
shl
leave
add
ds
int
mov
xchg
leave
sbb
push
pop
lahf
pop
xchg
cmc
push
or
and
xlat
movsb
push
pop
dec
loope
push
fsubrs
insb
and
push
jno
call
jecxz
movsb
andl
and
push
cmp
sbb
out
gs
fcmovbe
loop
mov
lret
jns
aad
or
jecxz
testl
cmp
js
adc
xchg
andl
cltd
xchg
hlt
test
stos
lahf
ficoml
out
adc
fimull
inc
xor
movsl
shrb
or
je
mov
ss
inc
mov
fdivp
iret
sub
sub
jne
shr
pop
adc
mov
shll
mov
outsb
dec
xchg
pop
sub
cwtl
loope
fsubl
push
pop
cltd
popf
mov
add
mov
out
mov
daa
dec
add
or
or
sarl
hlt
arpl
xchg
and
mov
push
cmp
xor
ficomps
cmpsl
jge
push
jo
popa
mov
std
addr16
xchg
mov
jbe
push
mov
out
popf
insb
jnp
fcoml
leave
out
mov
lret
cwtl
nop
add
mov
sti
inc
int3
jns
jmp
mov
pop
adc
jg
adc
pop
int3
frstor
insl
call
dec
adc
inc
fcoml
jno
les
jmp
leave
sahf
gs
adc
in
dec
rcrb
ds
sti
cmpsl
adc
and
inc
scas
push
mov
aaa
test
mov
mov
rcrb
in
dec
call
xchg
fwait
test
pusha
movsb
and
mov
push
push
popf
lods
cmpsl
dec
ret
aad
out
ja
mov
frstor
repz
cwtl
and
shlb
cltd
aad
xor
mov
jbe
add
dec
or
pop
popl
xchg
sub
repz
fmul
pop
pop
jo
bswap
pop
sbb
lods
and
movsb
icebp
pop
mov
mov
insb
fadd
loope
or
test
lea
loopne
vphadduwd
and
pop
sbb
shr
insl
and
pop
nop
pop
cmovl
orl
adc
fs
int
or
push
sub
push
add
insb
jnp
mov
popa
push
adc
movsl
pusha
das
mov
andl
shrl
sbb
hlt
cmc
fnstcw
stc
mov
bound
repz
lcall
fsubl
mov
pop
leave
xchg
inc
dec
sti
push
ret
addr16
xlat
xchg
cwtl
mov
scas
movsb
mov
push
fimuls
leave
lea
sti
ja
jnp
adc
movsb
shr
inc
imul
popf
lahf
push
push
fcompl
stos
loope
test
or
mov
mov
mov
lcall
ds
sub
push
and
jge
in
scas
fdivs
aas
sub
fs
aad
cmp
push
rcr
sbb
mov
and
mov
cmp
sub
mov
pop
das
dec
mov
add
lret
add
xlat
stos
into
dec
jecxz
adc
push
xchg
mov
leave
movsl
pop
mov
nop
pop
daa
aas
inc
mov
jl
outsb
roll
js
int3
loopne
mov
popa
stc
sbb
cmp
sbb
pop
mov
insb
inc
and
mov
pop
stc
mov
mov
fbld
mov
leave
std
mov
scas
jp
xchg
fidivs
pushf
fnsave
inc
cmp
gs
movsb
std
add
inc
xchg
cmpsl
loope
loope
test
push
mov
movsb
ja
adc
call
pop
insb
push
mov
pop
mov
imul
xchg
shl
stos
dec
cmpsl
dec
call
inc
mov
iret
cltd
push
and
mov
adc
adc
mov
scas
jmp
lock
mov
mov
bound
jae
inc
rcl
add
repnz
jg
jle
dec
cltd
clc
icebp
js
mov
bound
sbb
lar
insb
mov
jge
ljmp
daa
or
movsl
int3
ds
popf
add
movsb
aas
mov
ds
jmp
add
sub
inc
xchg
dec
in
xchg
mov
and
repz
mov
out
mov
lds
cmp
and
movsb
mov
lock
call
jecxz
xlat
ds
sub
addr16
stos
cmp
xor
dec
clc
mov
and
xor
mov
je
mov
mov
movsb
stos
aad
fidivrl
fsincos
lcall
shrb
adc
insb
mov
pop
arpl
in
push
and
mov
shl
cltd
sbb
ss
mov
iret
incl
or
push
and
icebp
cmpsb
jmp
mov
sbb
push
sti
inc
push
test
lods
sub
sti
sti
adc
jecxz
jb
cwtl
jbe
dec
and
mov
pop
int
adc
rorl
mov
out
pop
and
fdivr
ljmp
xchg
out
daa
cmp
shrl
outsl
mov
sbb
adc
xchg
mov
adc
into
mov
mov
mov
aas
push
inc
outsl
sbb
and
dec
push
sbb
repnz
sbb
mov
ljmp
mov
pop
rolb
ret
das
cmp
out
mov
and
scas
pop
cmc
mov
imul
movsl
xor
push
fists
in
inc
or
dec
jnp
fldcw
into
mov
jle
out
mov
xor
rol
push
mov
or
int3
or
icebp
cmpsl
imul
mov
inc
loop
in
mov
test
jb
add
mov
andl
sbb
mov
push
xor
test
aam
aas
jge
jecxz
cmp
rol
stos
jno
mov
dec
scas
pop
in
mov
pop
test
sub
nop
loope
xor
test
int
lods
lcall
test
fiaddl
mov
dec
cmp
nop
test
cmpsb
aad
cmpl
jge
pop
sahf
and
add
int3
rcl
cld
mov
sbb
mov
divb
dec
in
xlat
mov
sub
aaa
pop
or
sub
mov
push
pslld
sahf
ss
xor
clc
inc
cs
push
jo
stos
mov
cmp
xor
add
call
fists
mov
test
pop
xor
mov
pop
mov
adc
sbb
cli
sti
shlb
in
int
add
sbb
sahf
mov
xchg
push
mov
fisttpll
aaa
dec
adc
adc
out
aad
mov
aaa
mov
pop
pop
lret
sub
cs
sahf
and
aam
inc
mov
insb
movsb
xchg
cmp
adcl
fimull
pop
push
and
shll
mov
xchg
inc
subl
movsb
fildll
dec
int3
cmpsl
arpl
sbb
and
adc
cmpl
pop
adc
and
dec
pop
imul
mov
addr16
shlb
sub
aad
pop
sbb
lahf
jae
js
notl
push
out
hlt
sub
mov
in
push
data16
addb
xchg
test
aad
sahf
imulb
add
ret
lret
pop
out
test
mov
scas
mov
stc
jl
sub
dec
dec
or
aam
mov
jmp
subl
add
inc
call
xchg
and
mov
popa
js
adc
gs
mov
push
mov
mov
cmp
xor
sbb
pop
scas
in
jae
lcall
inc
jle
sub
aaa
outsb
stos
mov
aam
mov
or
xor
aad
mov
movsb
fstpl
mov
mov
or
scas
sub
jl
out
lds
push
cwtl
mov
test
aaa
cmc
loop
push
xor
push
dec
jg
add
lahf
fs
add
inc
insl
arpl
addr16
test
roll
mov
push
cmp
sbb
in
loopne
push
add
fidivs
and
fld
and
test
or
scas
rcrl
xor
int
dec
push
push
sbb
stos
or
in
xchg
adc
sti
int
dec
negb
dec
jge
jnp
mov
out
mull
loop
int
cld
ljmp
jae
inc
fucomp
sbb
xor
xorb
cmp
ret
adcb
inc
sahf
movsl
in
sub
aad
push
cmp
pop
mov
das
or
push
push
xchg
movsb
ds
cmpsl
sbb
cmp
paddq
inc
in
gs
enter
movsb
sti
loop
adc
adc
push
jae
xchg
mov
iret
lods
xor
outsl
cwtl
lock
mov
sub
shrl
sub
lock
hlt
popa
shrb
jno
ret
mov
sti
pop
lret
aas
cmpsl
outsl
addb
add
out
frstor
sti
test
test
lods
mov
xchg
bound
mov
jecxz
dec
pop
mov
aad
push
sbb
aaa
push
inc
aad
nop
pop
cmp
adc
in
subl
pop
push
cwtl
out
ret
jp
fnstcw
and
pop
or
mov
xchg
sbb
pop
sti
mov
inc
loope
add
cmp
sub
or
leave
lods
std
leave
inc
in
sub
ss
daa
cmpsb
les
dec
inc
popf
sbb
adc
dec
mov
imulb
rcl
ss
shrb
sbb
lret
adc
clc
jbe
inc
ja
jb
sub
mov
scas
fdivr
cwtl
push
xor
sub
jae
jg
lcall
xor
mov
gs
lret
mov
push
mov
sub
shrl
mov
xchg
cmp
dec
subb
and
out
lret
loop
push
adc
gs
cmpsl
fsubrl
cmp
roll
xor
push
push
aad
std
sbb
scas
xor
and
sbb
xchg
cmp
test
lret
pop
hlt
repz
mov
cmpsl
push
sub
ljmp
ss
mov
cmp
sar
loopne
lods
xchg
roll
cmp
mov
mov
stos
les
hlt
ljmp
bts
add
movq
cmp
xlat
ret
sub
fistl
jmp
pop
dec
jbe
iret
hlt
shlb
cmpsb
in
lds
subl
jmp
and
lods
test
movb
jne
clc
pusha
jb
inc
inc
movsl
jge
neg
movsl
adc
push
mov
inc
and
push
std
push
inc
xchg
and
pushaw
sti
and
scas
hlt
mov
int3
pop
test
enter
inc
xchg
pop
jp
sub
jp
sub
add
push
jge
push
scas
lock
test
fimuls
or
fidivs
inc
repz
movsb
add
sub
pop
rorl
jne
xchg
mov
pop
pop
fistpl
xchg
aaa
mov
mov
int
mov
fsub
xor
test
call
mov
mov
pop
add
imul
jne
xor
or
leave
mov
xor
test
cli
dec
xchg
arpl
push
sub
xor
aad
incl
sub
cltd
mov
repnz
es
outsl
cmp
ja
cltd
call
jmp
xor
cmp
mov
punpckldq
out
push
aad
xchg
arpl
xor
nop
nop
mov
xor
bound
fcmovu
fadds
mov
enter
lahf
sub
sbb
vcmpps
pop
in
jmp
pop
inc
test
sbb
mov
pop
jae
jp
and
inc
pop
add
mov
inc
push
ss
inc
inc
sbb
xor
or
aaa
fsubr
and
aam
xchg
push
rolb
arpl
jmp
cmp
xor
lods
pop
pop
imul
in
and
pop
imul
push
mov
inc
sbb
movsb
push
imul
ss
xlat
ret
mov
lock
ja
gs
mov
and
filds
out
movsl
cmp
stos
lds
out
xlat
cmpsb
sahf
mov
dec
inc
inc
add
xorl
jne
in
mov
notl
jne
push
das
mov
cmpsb
mov
aaa
inc
push
jmp
lods
filds
shlb
jge
movsb
mov
aas
cmp
mov
fld
push
xchg
push
stos
inc
dec
out
sbb
xor
in
pop
mov
dec
xchg
push
push
adc
icebp
sbb
push
outsl
lea
push
xchg
cmp
cmp
jne
add
inc
nop
sbb
mull
inc
add
es
jp
inc
mov
popf
das
jle
js
data16
imul
cmp
out
cmp
fwait
or
hlt
and
add
push
and
xchg
push
out
mov
bound
jg
and
push
stos
push
jne
outsb
jbe
add
fstps
jo
or
xchg
in
lods
pusha
sub
icebp
add
mov
xor
xor
pop
mov
add
mov
jae
and
into
mov
mov
mov
push
xchg
outsb
jge
nop
xor
loope
inc
mov
call
push
mov
lds
mov
mov
addr16
jecxz
repnz
repz
mov
mov
mov
jg
lahf
lock
dec
popf
cmp
cmp
push
cmp
xor
popl
ret
xor
dec
pop
lcall
popa
inc
mov
mov
push
scas
pop
stos
inc
ficoms
inc
mov
xchg
movsl
rcr
repnz
dec
js
lea
push
inc
lret
and
jbe
push
fmul
ds
and
pop
movhps
loop
jecxz
cmovg
adc
popa
jne
jo
pop
inc
out
cmc
cmc
cli
std
ds
mov
push
xchg
loope
sbb
outsb
or
mov
push
add
aam
test
xor
je
jae
test
inc
shll
sti
sbb
hlt
mov
and
push
lret
rcl
xchg
test
mov
sarb
lods
adc
gs
sbb
mov
and
aaa
xchg
jle
xor
sbb
mov
popa
les
mov
movsb
cmp
jno
sub
mov
mov
or
in
fsubs
mov
out
xor
push
shlb
bound
or
lcall
inc
int
out
std
mov
lock
divb
insb
mov
ss
and
mov
mov
or
lcall
fchs
hlt
pop
es
out
adc
and
or
mov
mov
mov
ror
int
push
vcvtsd2si
in
add
xor
jne
je
shll
and
mov
dec
xor
loopne
lods
dec
repz
jo
xrelease
popw
sahf
adc
or
cs
cwtl
xchg
xor
and
std
pop
dec
mov
lcall
mov
imul
test
lods
out
imulb
imul
popa
insl
leave
je
in
fdivl
fimuls
mov
dec
jle
sbb
push
mov
movsb
daa
inc
lds
lds
xor
fidivs
rcll
lea
push
hlt
insb
jge
lret
inc
inc
repz
push
jne
inc
mov
mov
inc
or
jecxz
cwtl
push
sub
mov
xlat
ss
pushf
xchg
ror
and
xchg
punpcklbw
adc
fists
cmc
dec
sub
mov
aaa
hlt
ja
in
dec
adcl
out
xor
mov
mov
mov
lods
lea
cli
and
xor
cmp
sub
fmull
mov
sbb
leave
xor
pop
inc
add
into
andb
fildl
sub
fcoms
test
pop
cmp
cmp
mov
test
cmp
pushf
inc
push
jle
adc
push
data16
ss
in
les
test
testl
je
dec
scas
mov
push
dec
inc
sbbl
and
shll
mov
pop
in
ds
stos
test
jne
fsubs
shll
imul
js
push
add
xor
fs
je
xchg
and
and
or
lods
push
in
sar
je
pop
dec
push
mov
ret
gs
test
cmc
inc
ljmp
mov
into
adc
test
roll
or
dec
mov
sbbl
rclb
nop
mov
cmp
imul
pushl
lods
imul
cmp
add
or
add
xchg
push
mov
lock
cmpsl
pusha
sbb
mov
gs
push
scas
pop
std
and
mov
insl
insb
push
ljmp
xchg
jae
sub
insl
xlat
sbb
xor
fildl
mov
and
scas
push
scas
xchg
or
jbe
and
jl
or
push
add
cmpsl
xor
movsl
sahf
and
call
std
mov
cltd
push
inc
mov
or
loop
push
sti
mov
cmc
mov
lea
dec
xor
push
or
sbb
pop
add
push
mov
scas
inc
mov
sbb
cmp
das
xchg
popa
loopne
lods
mov
jmp
mov
cmp
xlat
jp
idivb
inc
sub
add
xor
add
xchg
out
shll
add
stos
cs
test
mov
xor
ss
bound
lds
jae
cli
stc
je
push
out
ss
ljmp
xor
adc
xor
pop
mov
xor
mov
fwait
aad
inc
daa
dec
imul
test
ljmp
inc
in
sub
cltd
cs
inc
mov
rolb
push
pop
cmpsl
or
ret
jne
in
mov
mov
idiv
popa
push
push
mov
push
into
das
adc
xchg
mov
inc
in
je
ret
jno
sub
fsubrp
out
out
mov
dec
dec
rcrb
push
adc
cmp
push
push
mov
sub
rcll
push
cmp
scas
jo
xchg
pop
incl
mov
lods
xchg
rolb
ja
rorb
movsb
popa
ja
test
imul
mov
mov
lods
jle
mov
and
jnp
add
adc
lds
test
xor
mov
mov
mov
mov
je
out
mov
sarb
aad
loop
mov
and
js
mov
ror
imul
xchg
mov
clc
sbb
jns
push
ljmp
jne
ja
mov
dec
sarb
sar
fisubrl
inc
mov
lret
testl
mov
cs
fildl
xchg
inc
xchg
push
mov
pusha
icebp
xor
xchg
fistpl
mov
pop
push
repz
fninit
movsb
xchg
or
js
mov
mov
cmp
pop
daa
test
fstps
xor
std
and
cmc
mov
mov
xchg
dec
inc
rcll
hlt
push
mov
push
pop
rcrl
add
hlt
into
ja
les
rcrl
int3
jmp
popf
pushf
mov
fnsave
out
push
mov
lret
mov
setne
mov
dec
adc
mov
divb
push
push
int
imul
jge
jbe
mov
dec
pop
subl
insb
xor
sahf
mov
clc
aam
push
cmp
sbb
icebp
jb
mov
push
lcall
stc
sbb
cmp
sti
mov
mov
fildl
ja
clc
fsubs
sbb
sub
inc
cmc
int
ret
jmp
or
push
sbbl
in
xchg
dec
mov
loop
and
out
in
sub
push
mov
cltd
dec
dec
push
in
cmp
pop
dec
scas
test
mov
mov
inc
jecxz
loop
lret
lods
ljmp
jnp
mov
cmpsb
lds
sbb
sbb
fists
data16
sub
sti
xlat
sub
mov
clc
loope
pop
int
dec
push
bound
lahf
cld
jno
or
adc
test
test
popf
push
pusha
insl
dec
and
sub
repnz
aad
mov
lea
jp
or
aaa
stc
or
mov
push
mov
mov
xor
test
mov
das
lret
mov
out
icebp
mov
repnz
les
cmp
std
popa
cmp
outsb
mov
js,pn
sbb
cmp
lret
lds
cmp
push
inc
push
sbb
mov
add
test
stos
mov
adcl
mov
push
in
inc
dec
inc
jo
cmp
bound
les
lcall
iret
inc
in
cmp
negl
aas
mov
pop
jae
xlat
ret
cmpsb
sti
ss
sti
jno
std
rclb
inc
pop
mov
xorl
call
lahf
mov
mov
inc
jp
ret
inc
mov
mov
jae
jbe
pop
dec
cmc
sub
sub
pop
cmp
cmp
cwtl
and
mov
je
lcall
sti
mov
mov
cmc
and
dec
shr
icebp
cwtl
sub
sbb
inc
sub
pop
mov
ret
jp
or
fcomps
sarb
jge
lods
dec
sub
loopne
mov
test
pushf
sbb
cmp
repz
mov
adc
or
mov
cmpsb
clc
jbe
and
adc
inc
xchg
or
in
add
ljmp
push
mov
mov
es
fs
push
fcoml
sbb
fs
or
push
mov
mov
adc
arpl
push
and
cmp
test
inc
fadds
sbb
mov
jnp
mov
shr
lret
test
push
addr16
xlat
push
shrl
jge
cmpsb
rcr
jbe
mov
jb
mov
andl
mov
je
and
imul
pop
repz
arpl
loop
cltd
es
push
adc
outsl
and
jno
pop
daa
flds
mov
cmp
dec
lods
lret
rorl
mul
fimull
mov
push
ret
push
xorl
stos
push
sub
mov
xor
subl
aad
addb
scas
sbb
cmpb
in
adc
shlb
jl
xor
outsl
sarb
sub
and
xor
movsl
mov
insb
call
rorb
and
test
mov
std
insl
mov
jge
sahf
es
cmpsb
daa
adc
mov
lods
in
sbb
aas
scas
push
imul
mov
push
sarb
pop
sti
pop
cmp
xchg
dec
stos
rorb
jmp
pop
mov
shr
clc
pop
and
mov
std
mov
jmp
aam
sbb
daa
in
pop
cli
sub
mov
in
mov
fsubs
cmpsl
mov
adc
mov
fcmove
xor
or
data16
cmpsb
push
mov
sbb
xor
popf
out
addb
xor
popa
imul
cli
in
push
lcall
adc
xchg
movsl
shlb
pop
in
je
mov
cmpsb
lea
pushf
sub
rorl
mov
xor
inc
es
lahf
lock
cmc
jl
or
jle
imul
das
ret
test
push
xor
dec
or
push
sbb
gs
sbb
add
mov
mov
fiaddl
add
iret
pop
mov
sti
dec
adcl
daa
add
insb
stos
jbe
movsl
xchg
mov
addr16
xchg
and
inc
pop
add
mov
and
adcb
mov
dec
es
clc
test
mov
dec
movsb
out
popf
inc
iret
popf
jnp
mov
add
mov
pushf
inc
pop
test
mov
in
fdivs
ds
and
jle
leave
push
sti
push
cmp
fs
pop
daa
and
test
add
stc
das
sbb
ret
sub
push
ror
mov
shll
jo
or
push
and
insb
rol
rcrl
lahf
pop
cmp
flds
xor
jae
xor
roll
icebp
or
ret
ret
xlat
jg
out
xchg
mov
mov
dec
jnp
loopne
jnp
movsl
mov
xor
idivl
dec
clc
mov
clc
mov
mov
mov
dec
cmp
pop
cmp
lea
xlat
pushf
test
push
sbb
xlat
cwtl
mov
xchg
mov
js
enter
call
pop
hlt
loope
dec
push
sbb
incb
jle
js
fadd
mov
outsl
or
mov
mov
and
clc
in
or
sbb
sub
ficomps
jl
mov
dec
mov
sahf
arpl
mov
mov
cld
nop
out
mov
out
adc
mov
push
jecxz
loop
jge
add
xchg
xor
push
movsb
out
std
dec
test
int3
mov
scas
lret
cs
subl
jo
sti
mov
mov
lret
xchg
mov
add
jg
and
jns
push
leave
hlt
pop
lahf
ljmp
mov
mov
jns
lcall
jnp
cltd
fsub
lods
pop
popf
jbe
sbb
outsl
mov
pushf
ret
mov
mov
jmp
sub
adc
and
pop
mov
popa
andl
push
dec
arpl
dec
jbe
jb
xorl
sbb
adc
arpl
push
stc
scas
jge
mov
pop
mov
lods
adc
fldl
sti
fistpl
call
add
inc
jp
lea
mov
mov
cmc
mov
cmp
add
sub
mov
push
lret
and
xchg
pop
push
sub
sub
xorb
jne
xor
xor
cmp
int3
push
sbb
adc
ja
in
clc
sti
mov
mov
mov
fisubs
cld
arpl
lcall
push
jbe
mov
inc
test
pop
push
sub
loopne
mov
jae
mov
mov
xchg
jo
bound
scas
xor
cmp
sbb
in
dec
lods
jnp
fbstp
adc
jle
repz
dec
clc
enter
stos
subl
and
inc
out
int
test
mov
xor
idiv
sub
pop
mov
pop
add
xchg
jmp
aas
shll
inc
packsswb
insl
pop
xchg
mov
mov
sti
adc
cmp
dec
add
mov
ret
movsb
subb
in
jge
rclb
lods
lcall
xchg
lret
add
pop
pop
mov
dec
cmp
popf
lods
jbe
je
jne
jge
aad
xchg
sub
cli
mov
mov
testl
insl
pop
lds
ret
test
xchg
dec
dec
sub
push
inc
mov
inc
fstl
pop
sarl
dec
pusha
pop
mov
and
mov
jmp
add
mov
xlat
cs
sub
cltd
aam
lods
pop
mov
call
imulb
mov
lea
sbb
mov
mov
pop
lock
xchg
outsb
scas
xchg
loopne
lods
imul
pop
mov
pop
loop
xchg
leave
jge
out
sbb
ljmp
inc
mov
sbb
inc
rorb
jp
mov
mov
shl
outsl
sub
sbb
add
fadds
cmp
test
insb
call
xchg
adc
icebp
or
adc
inc
dec
mov
orb
xchg
inc
movsb
push
inc
shl
xor
add
cmpsl
cmpsb
cmp
scas
inc
out
add
sbb
inc
sbb
in
imul
lods
xchg
pop
push
in
jp
mov
xchg
sub
dec
mov
ds
inc
leave
xor
and
push
or
fsubl
pop
outsl
ret
jb
xorb
outsl
dec
movsb
scas
xchg
push
dec
xor
sub
nop
ljmp
mov
add
push
inc
inc
and
jb
sbb
shrb
inc
stos
insl
dec
arpl
or
cmc
in
jg
scas
cmp
mov
lds
rcr
mov
movsb
xchg
inc
dec
fucomp
xchg
pop
lahf
push
jp
push
mov
out
mov
dec
mov
pop
pop
push
scas
mov
out
xchg
fisubl
cmp
xchg
inc
mov
insb
pop
mov
push
pop
cmpsl
sub
or
lret
pop
jle
inc
arpl
pop
push
dec
pop
jg
add
in
add
adc
mov
mov
dec
pop
lds
scas
int3
ss
insb
and
into
jmp
enter
lcall
and
jl
stc
mov
dec
mov
xchg
sbb
jmp
mov
adc
xchg
sub
repnz
cli
lds
int3
cmp
dec
push
push
in
cmpsl
test
sbb
ljmp
je
sub
push
mov
sti
xor
aam
inc
movsl
cmp
sub
push
lahf
add
dec
shl
sahf
loop
and
sbb
mov
adc
fstpl
je
jns
jo
inc
xor
scas
xor
adc
mov
stos
sub
dec
lock
fs
pop
jo
cmpsb
mov
pusha
adc
jge
jmp
incl
ret
xor
pushf
add
inc
cmp
jno
pop
mov
and
ret
adc
movsl
xor
xchg
dec
lret
imul
notb
jb
out
cmpsb
les
push
jmp
lea
mov
push
xchg
loop
mov
int3
or
jno
inc
lods
adc
divb
jl
pop
mov
das
cltd
xchg
fsubrs
pop
aam
add
dec
or
hlt
aam
mov
shll
push
test
loope
pushf
adc
xor
or
rcrl
dec
stc
cs
fnstenv
insb
aad
lock
or
inc
stos
icebp
sbb
mov
scas
outsl
movsb
mov
sub
cmp
push
jmp
lret
xchg
push
fcoms
shlb
ret
pusha
xor
shll
dec
push
test
push
push
inc
add
jb
xchg
ficoml
adc
jnp
mov
std
popa
pop
out
pop
adc
out
dec
dec
ja
sbb
mov
adc
mov
in
shl
insb
sub
push
pop
jmp
mov
aas
sbb
outsb
jb
adc
pop
js
dec
fists
push
test
cmpsl
mov
aad
dec
pop
orb
inc
dec
mov
xchg
call
xor
pusha
sbbl
add
pushf
adc
xor
pusha
cmp
lock
insb
cmp
fdivrl
inc
cmpsb
xchg
call
in
cmc
frstor
and
cltd
cmc
and
lds
cld
movsl
pushl
push
push
aam
js
jp
add
imul
rclb
sbb
imul
adc
fisttps
stos
cs
jno
pop
push
sub
aas
pop
xchg
mov
mov
fwait
popf
leave
jle
test
dec
xor
jg
mov
push
sbb
out
aam
filds
bound
loop
mov
xchg
loope
sbb
jb
inc
sub
inc
cmp
aad
iret
lods
cli
sub
out
dec
mov
pcmpeqb
pop
cmpsb
mov
mov
mov
push
mov
insl
or
push
mov
and
mov
stc
test
dec
rorb
mov
dec
inc
scas
mov
cmpb
call
mov
and
sti
popf
dec
pop
mov
sub
mov
sub
jecxz
inc
xor
and
and
pop
nop
pop
dec
test
mov
mov
je
adc
push
cltd
movsl
ljmp
in
movsb
jns
aaa
mov
cmp
mov
loope
inc
or
incb
out
adc
repnz
push
in
pop
fisubrl
pop
and
adc
push
in
cld
mov
hlt
fists
aaa
mov
btc
out
inc
pop
sarb
xchg
mov
pop
mov
pop
sub
sub
vmovaps
orb
mov
push
mov
cmp
jae
mov
mov
int
pop
bound
ret
xchg
sbb
sub
cmp
fcmovb
adc
subb
mov
and
imul
test
add
sbb
cmp
dec
add
and
xlat
lea
cmc
je
mov
adc
xor
add
sahf
in
add
jge
pop
inc
insb
je
inc
fisubrl
push
inc
icebp
sub
or
pop
cmp
cmp
add
pusha
cmp
jnp
std
xchg
dec
inc
push
mov
popf
or
pop
loop
icebp
and
push
xor
inc
push
loopne
xor
int
sub
mov
je
je
subb
pushf
clc
jnp
sbb
fnstcw
mov
mov
cmp
jmp
jmp
call
das
mov
adc
mov
in
add
jmp
cmp
stos
nop
pop
fcmovu
imul
mov
mov
jno
push
mov
cs
sbb
sbb
fs
mov
bound
jbe
fldt
xchg
inc
cmp
fldcw
pop
repnz
sbb
shrl
shlb
clc
lods
xor
mov
push
cmp
adc
aas
pop
inc
add
sbb
dec
cmp
insb
repz
pop
in
pop
jo
pop
mov
icebp
jns
xchg
fcomi
outsb
sbb
loopne
sbbb
aas
loopne
imul
inc
inc
orb
adc
inc
pop
jnp
cld
insb
in
xchg
jo
mov
scas
inc
push
xorb
mov
fdivs
push
repz
xchg
cmp
icebp
in
sub
dec
and
sbb
lret
push
idiv
fwait
lahf
inc
jb
mov
cmovge
or
addl
mov
jp
cltd
or
movsb
es
add
dec
test
cli
push
xlat
outsl
mov
xchg
jp
aam
mov
mov
and
shrl
ss
jbe
outsb
movb
mov
shr
out
push
je
shlb
dec
sbb
rorl
pop
xor
mov
iret
es
gs
jecxz
movsb
vpgatherdq
repnz
imul
mov
daa
js
es
clc
lahf
pop
pusha
lock
mov
adc
cmp
test
mov
lea
push
jle
mov
dec
cmc
out
mov
push
cmp
or
test
lds
push
int
lds
into
add
sub
mov
cltd
pop
cmpl
xchg
adc
loop
pusha
mov
mov
sub
je
imul
mov
hlt
jp
popf
adc
shr
add
fdivs
mul
leave
repz
xor
add
mov
mov
popf
insb
push
mov
repnz
push
fdivr
adc
jnp
xchg
and
xor
into
mov
idivb
adc
rcl
popl
sub
add
fists
movb
test
sti
mov
loope
adc
sbb
aam
inc
mov
inc
lahf
xor
adc
push
inc
ret
jmp
and
or
sbb
nop
test
insb
rorb
push
in
jne
and
mov
sub
aam
pop
lahf
out
push
add
in
loop
in
out
mov
jno
inc
lods
lock
gs
js
sbbl
fs
out
sbb
test
rorl
push
adc
fwait
dec
mov
ficomps
dec
insb
adc
xchg
fbstp
aam
fs
mov
stos
mov
inc
loop
les
adcl
rcrb
in
adc
rcrl
jns
mov
jg
pop
out
sub
mov
out
mov
sbb
push
or
pop
mov
cmp
add
loopne
sbb
jle
shlb
int
jp
lea
jae
or
arpl
xor
fs
xchg
xor
jnp
mov
cmp
outsb
notb
stos
in
testl
dec
pushf
mov
mov
sti
lret
xchg
mov
inc
sbbl
mov
mov
test
jle
out
std
lcall
sbb
popf
pop
cmp
mov
sti
mov
ret
jo
cwtl
ret
xorb
push
lock
and
sub
lea
adc
xchg
lahf
mov
cmpsl
outsb
xor
and
mov
cmpsl
shl
testb
push
lret
mov
nop
into
jl
lahf
fdivs
pop
and
out
inc
incb
iret
or
jbe
xor
lods
inc
scas
gs
lret
mov
jno
dec
clc
inc
inc
adc
xor
int
mov
mov
mov
jle
mov
xor
sbb
or
sub
ds
dec
leave
iret
mov
cltd
push
fidivrs
dec
pop
mov
push
adc
xor
ja
mov
mov
mov
sbb
xchg
icebp
addb
mov
push
and
pusha
insl
mov
adc
and
sahf
jbe
bound
pop
je
movsb
enter
pop
jns
adc
pop
iret
mov
jge
and
cmp
into
outsl
add
sbb
mov
xchg
adc
or
nop
xchg
jmp
stos
das
testb
sti
in
movsb
and
iret
scas
pop
pop
or
or
jns
daa
xchg
adc
shl
or
sbb
jecxz
test
dec
jmp
and
cmp
pop
ljmp
jbe
and
leave
mov
mov
sbb
lods
push
push
and
loop
mov
repnz
and
add
fsubr
jge
xor
add
enter
data16
mov
cmp
movsb
cmp
hlt
sbb
ja
pop
jno
lock
xchg
mov
pop
or
mov
sbb
xchg
mov
bound
loope
adc
lret
cli
mov
lret
xchg
cmp
cmp
imul
sbb
jne
push
xchg
pop
pop
mov
cmp
mov
in
addl
dec
lret
dec
cmp
cmp
adc
mov
xor
les
stc
cli
outsb
lret
sbb
jmp
ds
mov
xchg
aas
mov
inc
out
lret
and
repz
cld
xor
mov
or
mov
lret
lods
imul
nop
adc
shll
scas
inc
dec
pushf
movsl
pop
pop
imul
cltd
lahf
push
add
outsl
das
push
sbb
roll
inc
pop
jns
repnz
mov
pusha
ja
dec
xchg
sub
mov
rorl
dec
les
mov
xchg
jp
cmp
xchg
lock
push
repnz
aam
push
cmc
adc
cmp
shll
in
imul
mov
loop
stos
out
mov
push
sub
pop
inc
add
and
sbb
add
fadds
push
je
add
mov
popa
enter
sbb
xchg
lds
xchg
or
daa
rcll
add
ficoml
popl
add
fsubr
dec
adc
jae
jl
ss
jno
push
fdivp
ljmp
push
leave
ja
jp
cli
leave
loopne
sbbb
adc
cmp
js
mov
pop
push
mov
mov
xchg
enter
gs
lods
or
loope
push
rcll
subb
dec
mov
sbb
or
popf
adc
push
nop
pop
std
mov
sbb
adcb
push
cmp
push
js
cmc
pop
xor
cwtl
lahf
jp
and
mov
lahf
mov
jecxz
dec
xchg
call
mov
movsb
dec
add
push
mov
imul
mov
xchg
movsb
or
dec
xor
pop
fisubs
and
jnp
jnp
in
in
pop
out
loop
repz
pop
call
pop
xor
cmpsl
js
stc
fildll
sbb
and
pop
fdivs
icebp
add
mov
pushf
in
mov
xchg
inc
fisubrl
push
and
aad
aam
dec
sbb
in
sbb
sub
int
icebp
repnz
cmp
in
les
aam
or
rcll
mov
jle
rcll
push
and
cmp
push
jns
xchg
icebp
int3
test
mov
cs
xchg
das
aaa
inc
cmp
xchg
mov
xor
jns
lods
mov
imul
cmp
mov
enter
add
sbb
pop
lods
jecxz
pop
dec
iret
cmp
inc
xchg
or
lahf
mov
lret
jae
sbbb
insl
or
orl
rorl
lcall
sbb
inc
xchg
jl
cltd
cmp
inc
push
cmpsl
popf
cmp
and
lods
push
daa
scas
pop
dec
push
subl
mov
mov
adc
sbb
dec
orb
sbb
stos
test
and
jmp
movsl
pop
pop
pop
mov
jbe
fisubl
inc
xchg
pop
push
push
and
lcall
imul
outsb
xchg
movsl
mov
xchg
inc
push
xor
cltd
pop
movsb
jb
out
js
das
ror
jbe
sbb
inc
leave
bound
xchg
xchg
shrb
bound
jb
sbb
pop
lret
lds
cli
adc
lock
xchg
fsts
incl
int3
out
or
nop
insb
in
cli
mov
xchg
cld
lcall
fadds
add
cmp
inc
daa
inc
pop
jg
cs
imull
out
dec
jne
icebp
pop
xchg
pop
cmp
xchg
xor
lcall
xchg
push
ja
or
lods
mov
mov
mov
out
adc
jae
dec
mov
imul
dec
dec
push
sbb
pop
xor
mov
ja
dec
mov
jo
cwtl
call
cmpb
pop
aad
mov
dec
xor
sahf
xchg
inc
xchg
adc
leave
out
xchg
push
aaa
ror
pop
lods
orb
jl
add
scas
int3
add
lcall
sbb
lds
xor
xorl
pop
das
orb
add
fstps
push
repnz
xchg
mov
es
outsl
jle
add
mov
iret
mov
movsb
cltd
mov
and
fdivp
sub
mov
and
outsl
inc
testb
mov
lcall
sti
mov
lahf
inc
fiaddl
lds
push
pop
push
adc
xor
das
bound
inc
push
xor
adc
jl
es
xchg
push
insl
aam
cmp
dec
nop
sbb
cmp
mov
and
scas
clc
jne
lret
faddl
jecxz
lock
loopne
mov
stc
loop
lahf
leave
pop
pop
dec
or
sbb
inc
insl
mov
mov
out
in
sarl
or
or
sbb
jmp
mov
call
popa
xor
repz
adcb
jmp
jno
ljmp
jo
push
dec
and
cli
cmp
sti
pusha
popf
jp
inc
imul
sub
clc
stos
lock
lahf
enter
jo
mov
std
add
fwait
push
mov
into
test
idivl
jns
xchg
aas
test
inc
inc
add
adc
cmp
aaa
iret
xchg
and
fidivl
mov
mov
xor
sbb
les
std
pop
pop
adc
pusha
push
roll
sbbb
fidivs
repnz
call
mov
leave
push
ja
dec
jp
popf
mov
push
xlat
mov
sbb
dec
sub
movsl
sarb
inc
and
xchg
xor
ljmp
fdivrl
push
mov
xor
pop
bsr
mov
insb
nop
loope
bound
imul
jmp
inc
das
divb
addr16
mov
or
xchg
sbb
pop
je
imul
xor
xor
xchg
imull
inc
arpl
insl
insl
pop
idivb
xchg
xor
dec
push
and
mov
sub
inc
inc
cld
pop
sbb
dec
xchg
mov
shl
lods
addr16
or
push
sbb
jecxz
std
cmp
add
jmp
jl
sub
idivl
test
shrb
rcrb
dec
push
aaa
dec
pop
fwait
mov
push
stos
pop
pop
lret
xchg
xlat
ds
mov
pop
pop
idivl
mov
lods
inc
adc
daa
push
mov
call
scas
adc
fwait
xchg
lret
push
jge
inc
pop
dec
lret
ss
push
mov
iret
movsb
jl
mov
cmp
int
cmp
js
xchg
aad
test
adc
insb
sub
test
fwait
std
and
dec
jl
aas
dec
mov
pop
pop
scas
push
testb
pop
mov
int3
repnz
adc
pop
stc
add
sbb
in
and
bound
loop
pop
adc
inc
and
stc
mov
call
xorb
in
or
cmp
inc
scas
repnz
fcmovb
fstpl
cmpsb
gs
enter
movsb
movsb
jg
jecxz
push
in
sub
jp
outsl
cwtl
lcall
sti
cwtl
or
jns
sbb
sbb
mov
pop
add
push
add
cs
repz
inc
xlat
pop
out
mov
jbe
jno
das
or
daa
pushf
cmp
ret
inc
inc
add
jge
xor
addl
dec
sbb
fnstenv
pop
sarb
xor
dec
mov
out
or
lea
pop
add
pop
jne
add
js
inc
lret
xor
xor
push
jno
cwtl
sub
mov
jnp,pn
fstl
mov
jno
xlat
jmp
push
imul
out
xchg
cld
movsl
xor
imul
push
cmp
mov
popf
pop
pop
pushf
mov
popa
inc
aaa
xor
aad
rcll
leave
add
push
xor
xchg
lcall
dec
sub
mov
loopne
ja
aam
sbb
test
sahf
lods
push
xchg
jmp
scas
xor
or
test
and
fidivrs
faddl
and
add
pop
xchg
lahf
inc
xchg
pop
adc
les
xchg
bound
mov
jp
das
lcall
loopne
jb
bound
pmaxsw
inc
inc
test
cltd
pop
xorl
fsts
loopne
mov
push
jae
inc
in
add
dec
xchg
cld
and
mov
pop
bnd
mov
andl
pop
rcl
xor
and
cmc
pushf
cmpsl
in
test
inc
mov
mov
test
js
sarl
lods
sbb
imul
cli
pop
and
xchg
jmp
mov
and
mov
pushf
sbb
mov
sbb
adc
push
lods
fisttpll
insl
imul
inc
inc
xor
cmp
mov
xchg
ds
push
and
imull
and
dec
pop
and
addl
lea
mov
and
inc
insl
or
adc
int
lret
jp
out
daa
mov
inc
scas
or
addb
xchg
push
mov
in
frstpm(287
cmp
sub
and
imul
and
fs
xor
pop
lret
mov
popa
mov
cmp
hlt
enter
dec
arpl
dec
sbb
inc
test
stos
mov
sti
and
inc
jo
or
inc
test
inc
das
mov
and
ds
out
insl
cmpb
rcll
shlb
xchg
fldt
push
mov
loopne
out
andb
lock
movl
or
cmp
es
adc
push
pop
in
test
add
in
lods
mov
or
mov
xchg
and
xchg
pusha
loop
inc
loop
fcoms
mov
fcomi
call
ret
std
inc
dec
or
arpl
mov
clc
loopne
or
inc
rorl
cmpsb
cli
sarb
pop
dec
xchg
mov
sbb
enter
int
rorb
testb
sbb
pop
push
stc
leave
cmp
cmpsl
ljmp
bound
pusha
sbb
lods
aad
dec
xchg
add
mov
hlt
adc
andl
gs
mov
inc
add
imul
imul
mov
push
sbb
out
popf
fstpl
ret
lret
inc
jb
fsubrs
inc
stc
sub
pop
sub
movsb
mov
lret
imulb
dec
dec
sub
pop
push
mov
ja
add
std
xor
mov
lcall
stc
xchg
shl
cmp
fs
adc
js
and
fabs
jnp
jno
aam
jnp
xchg
les
adc
pusha
in
adc
and
xchg
mov
push
divb
xchg
sbb
rorb
fisubrl
cmp
dec
xchg
mov
xchg
bound
subb
pop
xchg
lods
repnz
cwtl
and
cmp
or
sahf
mov
pop
mov
xor
lock
bound
push
jge
or
sub
test
sub
mov
fwait
ret
xchg
lock
test
push
jge
inc
fistpll
rolb
xchg
xchg
cmpsl
cld
pop
fmull
pushf
popf
pop
iret
movsb
scas
mov
rcr
stos
jp
adc
push
aas
or
lahf
leave
and
ljmp
sahf
pop
scas
mov
push
fmuls
sbb
ret
cmp
dec
adc
mov
xchg
mov
fdivrs
js
cmp
icebp
adc
push
cmp
enter
jmp
in
push
cmp
xor
jl
fdiv
cmpsl
xor
push
bound
out
popf
pop
arpl
popf
push
sbb
rcll
push
lret
andb
ds
lcall
out
shll
jecxz
stc
in
add
cmc
pop
cmp
inc
faddl
xchg
add
lahf
ret
xor
xchg
adc
out
cmp
sbb
xor
sbb
or
in
pop
xchg
mov
or
sub
and
test
les
xor
aad
int3
faddl
pop
adc
mov
iret
inc
adc
or
jmp
sub
mov
jg
or
sbb
into
and
mov
mov
sbb
out
lahf
sbb
mov
cmp
mov
ret
inc
mov
les
xchg
stos
sub
add
cmp
inc
cwtl
push
sub
lods
and
mov
sub
out
cmp
mov
outsb
sub
push
sub
add
out
loop
hlt
xchg
aad
in
icebp
sbb
icebp
js
jnp
mov
xchg
loop
mov
xor
add
add
xchg
push
aas
addl
cmpsb
or
loope
pop
daa
scas
cmpsl
xor
pmullw
push
sub
test
add
fs
nop
xor
cmp
lret
out
xor
sbb
std
es
cmp
lahf
fdivs
and
push
loope
in
xchg
scas
xchg
test
add
das
and
sti
jb
mov
pop
mov
in
icebp
cmp
inc
lret
orb
ljmp
or
arpl
sbb
mov
mov
arpl
dec
cld
push
repnz
jle
or
repnz
sbb
js
jno
out
or
in
or
lcall
xchg
push
jo
rcrb
push
sub
scas
aas
sti
bound
mov
mov
lods
rorb
ljmp
mov
inc
addr16
je
push
sbb
ret
xchg
sub
jno
cltd
mov
sbb
inc
xchg
xor
push
pusha
fsub
int3
ficoms
and
imul
cmpsb
pop
sbb
test
pop
pop
mov
rcr
jae
loopne
lds
cmp
das
out
jo
mov
inc
mov
dec
dec
add
or
dec
jo
fisttpll
push
in
mov
jl
or
mov
loop
lret
cmp
fucomip
jno
xor
lret
cmp
jbe
cmc
cmp
mov
repz
outsb
iret
aad
out
dec
or
fadds
popa
mulb
mov
push
xor
fs
js
std
mov
fs
fs
in
in
popf
push
xlat
flds
or
repnz
push
out
rcll
sbb
pop
dec
nop
in
subl
inc
das
orb
push
xchg
ret
fcompl
arpl
inc
lcall
add
dec
cmc
daa
adc
jge
pop
push
cmp
popf
adc
pop
adc
les
pop
adc
imul
dec
repnz
lret
stos
cmpsl
into
cmc
mov
xor
ret
sbb
add
repz
cs
gs
mov
rcrb
enter
fdivrl
mov
push
bound
xchg
mov
fs
loope
fidivl
adc
or
adc
jmp
inc
sbbl
hlt
sbb
xlat
out
aas
add
xlat
mov
fcmovbe
out
and
les
jmp
adc
sub
sahf
scas
jge
repz
jg
mov
leave
icebp
jmp
mov
pop
aam
mov
xchg
int3
adc
xchg
aam
pop
test
and
mov
stos
loop
fimuls
mul
es
out
ss
lods
shl
mov
pop
push
hlt
sbb
mov
or
and
inc
es
inc
mov
mov
xor
faddl
push
adc
and
mov
sti
jge
mov
outsb
lahf
sub
inc
nop
sbb
stos
adc
push
movsl
shrl
and
shrl
shlb
adc
mov
adc
pop
mov
pusha
dec
daa
enter
jl
jo
cmp
cmpsl
sbb
push
mov
push
leave
or
jecxz
mov
mov
cmp
cld
subb
repnz
push
pop
pop
jl
daa
xor
adc
lret
arpl
add
adc
das
iret
nop
ret
cmp
ficoml
mov
arpl
sub
pop
cs
mov
out
jmp
mov
mov
mov
and
test
stos
jo
jnp
inc
nop
or
dec
adc
cmp
xor
jecxz
push
movsl
adc
push
int3
and
add
out
subb
pop
ss
jl
pop
inc
or
imul
frstor
cmp
mov
scas
adc
xor
cmp
cmp
cmp
mov
cmpsb
test
test
movsb
pop
sarb
pop
stc
jge
pop
call
jle
xor
inc
adc
cmp
and
divb
pop
std
inc
mov
xchg
ja
lahf
test
and
lret
fld
mov
addl
pop
das
jl
clc
push
mov
sbb
pop
jns
mov
mov
sarl
adc
ja
je
stos
xchg
mov
pop
daa
pop
and
cwtl
xor
xor
mov
sbb
push
or
dec
or
in
mov
mov
pop
pop
push
jns
sarl
andl
mov
imul
fcomi
inc
mov
sub
lcall
xor
imul
jno,pn
rolb
or
dec
jmp
jae
cmp
pop
sub
pop
aas
xchg
stos
push
jbe
test
clc
mov
es
call
xor
xacquire
arpl
lock
out
ljmp
push
sub
pop
outsl
or
fwait
jle
icebp
pop
cwtl
rcrl
stos
leave
movsb
fucomi
inc
dec
sti
and
ret
push
or
outsb
xchg
push
pop
ficomps
aad
cwtl
stc
arpl
inc
adc
fadd
sbb
xchg
inc
cmpsl
push
mov
test
xlat
mov
mov
dec
into
xor
add
pop
pushf
jae
jb
mov
scas
pop
pop
aaa
aam
hlt
xchg
add
lods
fisubl
repnz
adc
xor
std
xchg
fidivrs
into
jecxz
fcmovne
je
lods
nop
lahf
daa
test
xchg
adc
mov
cld
mov
in
sub
cwtl
add
or
bound
call
xor
mov
sub
pushf
in
dec
dec
out
pop
push
fildl
mov
jge
and
xchg
jg
push
aaa
xchg
mov
rorb
push
push
mov
das
mov
jmp
fistpl
and
std
mov
mov
cmp
sahf
lods
push
and
daa
nop
inc
test
lcall
mov
movsb
cli
mov
lea
jg
xlat
mov
add
shll
cmp
cld
dec
adcb
into
fdivrl
insl
add
xchg
inc
adc
int
orps
stos
mov
arpl
setge
xchg
inc
sub
imul
adc
sbb
sti
add
ret
jp
adc
stos
pop
xacquire
movsb
or
mov
mov
aad
sbb
fs
arpl
cmp
pmaxsw
pop
mov
mov
push
cmp
or
or
addr16
fldcw
add
inc
push
sub
sbb
outsl
arpl
js
jnp
xchg
dec
pop
mov
mov
inc
scas
cmp
ret
lret
cmc
sub
mov
mov
push
ljmp
stos
leave
mov
push
and
in
jge
into
cs
inc
aas
iret
in
shrl
inc
aaa
xor
scas
fld
aam
aad
sbb
adc
or
push
push
cmpsl
sbb
mov
mov
lods
ds
cli
int3
push
stos
call
aam
xchg
loop
adc
xor
inc
lcall
shll
push
shlb
pop
movsl
fildl
shlb
and
out
mov
das
push
ds
push
stc
pop
es
lcall
and
inc
int
xchg
mov
popf
cmp
hlt
call
popa
cmpsb
cmp
out
xchg
xor
mov
out
mov
movsl
cmp
sub
and
inc
and
mov
mov
mov
inc
mov
aam
movl
mov
lcall
dec
out
shrl
sbb
push
ret
sti
lahf
jb
xchg
pop
or
jae
out
jmp
adc
jns
sbb
push
mov
mov
outsb
jge
mov
pusha
inc
xchg
or
jmp
inc
mov
es
jl
xor
mov
fiadds
xor
movsb
adc
mov
shlb
iret
add
cmp
add
dec
cmp
dec
pop
push
icebp
fstl
repz
jnp
fcomps
sbb
cmp
adc
or
movsb
cltd
dec
mov
scas
inc
fnstenv
jg
fwait
sarl
imul
cmpsb
jb
xor
push
lds
inc
jns
xlat
gs
sbb
cltd
icebp
aam
inc
divl
test
lds
xor
jle
aas
es
push
add
adc
insl
outsb
sahf
jb
arpl
nop
pusha
add
roll
icebp
push
jg
mov
dec
test
jnp
ror
xor
outsb
mov
inc
add
fisubs
fwait
sbb
push
lret
jae
cmc
out
bnd
and
lods
arpl
push
in
and
out
push
into
cs
cld
stc
mov
icebp
dec
icebp
mov
xchg
add
sahf
dec
jg
in
cmp
mov
jno
fidivrs
xor
jecxz
jo
fsubs
lcall
xchg
or
mov
jmp
jl
jae
jmp
nop
push
xchg
jle
mov
addb
jne
sub
mov
mov
pop
sahf
sbbl
adc
pop
lret
mov
push
mov
jp
bswap
add
xor
mov
mov
imul
xor
or
inc
test
add
dec
push
stos
mov
sbb
popf
dec
mov
cld
daa
mov
xchg
scas
jg
lods
stos
add
jl
clc
add
pusha
xchg
fdivrl
loop
push
gs
cmp
mov
stos
mov
cmpsl
orl
xchg
sub
shlb
das
pop
pop
fldcw
aaa
fadds
int3
mov
pushl
fdivrs
adc
in
imul
adc
cmpl
fidivs
sti
and
in
je
mov
ss
imul
fcomps
mov
fildll
fdivrl
inc
or
das
pop
xor
daa
jns
lock
push
sub
out
or
mov
xchg
mov
nop
in
xchg
sbb
pop
mov
scas
cmp
scas
pusha
push
mov
pop
inc
movsb
dec
and
das
repz
or
ret
pop
in
cli
xchg
and
in
ds
and
xor
jnp
int3
out
cs
fs
and
pop
mov
jnp
mov
pop
sub
std
and
push
sarl
sub
outsl
enter
hlt
mov
mov
sub
jle
jno
int
aas
repz
popa
jg
mov
shlb
add
lods
add
dec
stos
aaa
xor
or
pop
xchg
pop
xor
mov
les
and
cs
xchg
dec
cmpsb
xor
cmpsb
imul
popf
pop
cmp
add
leave
xchg
inc
xchg
mov
adc
jp
jno
test
xchg
push
mov
sbb
add
push
outsl
fidivrl
sbb
imul
jle
fstps
sub
fmul
dec
pusha
loope
cmp
jle
push
lahf
jb
into
or
mov
fdivrs
das
xchg
std
and
xchg
push
adc
shll
sti
pop
xorb
nop
popa
inc
mov
insl
aaa
loop
mov
pop
js
aam
xlat
fwait
lock
mov
ds
xorl
push
fldl
inc
xchg
cmp
xor
add
pop
and
push
or
nop
pop
cmc
mov
lcall
cmp
cld
xchg
data16
inc
or
daa
push
jge
nop
outsb
in
lods
stos
out
push
in
aad
or
insb
mov
xrelease
inc
out
xchg
mov
in
loope
jno
jmp
addl
jne
lds
cmpsb
mov
cs
dec
and
xor
stos
jg
xchg
xlat
add
std
inc
dec
mov
inc
rcll
jns
enter
lcall
pop
adc
push
adc
push
mov
ds
hlt
pop
lods
mov
ss
cmc
lods
mov
out
adc
stc
cmp
mov
cmp
pop
mov
xor
xchg
int
out
jns
mov
ds
rcrb
flds
pop
mov
nop
test
inc
pop
pop
or
fiadds
das
cli
jg
pushf
test
or
add
or
mov
dec
and
and
jae
jle
loopne
scas
push
cmp
and
int
incl
stos
mov
adc
insb
push
sub
pop
push
push
sub
adc
insl
stos
loopne
adc
loop
fwait
mov
in
or
sub
into
push
fildll
mov
popa
in
and
and
fisubrl
inc
sbb
iret
cmp
test
xor
cmp
pusha
xchg
cli
or
cli
sbb
push
fimull
inc
jns
mov
and
and
push
jp
fdivrs
outsl
int
push
or
mov
mov
movsb
push
or
cld
cmp
lret
and
jg
sbb
jno
hlt
xor
pop
xchg
movsb
inc
mov
xlat
hlt
jb
test
xchg
js
test
pop
mov
and
inc
andb
movsl
inc
push
cmp
clc
mov
std
bound
dec
test
pop
loopne
cmp
pop
das
mov
fnsave
mov
inc
jb
adc
dec
xchg
mov
shlb
out
xlat
in
js
or
xchg
adc
mov
sub
aam
xchg
cmp
mov
rcr
fisubs
std
xchg
divb
repz
rolb
adc
mov
in
shlb
out
and
adc
cmpsl
subl
mov
leave
rdtsc
test
and
imul
pop
cli
mov
adc
jg
out
cltd
sub
in
aad
movsl
or
or
add
cmp
jo
jge
int
push
xorb
mov
mov
lahf
cmp
xor
xchg
dec
add
in
pop
inc
sarb
jns
cmp
call
mov
sbb
arpl
pop
and
xorb
and
outsb
jecxz
mov
sbb
fwait
test
pop
andl
clc
and
pop
fbstp
ret
lds
cmp
jmp
int
adc
xchg
je
shll
adc
repz
push
loopne
and
dec
sub
adc
and
fidivl
xor
xchg
loop
aas
data16
test
mov
dec
pop
negb
shlb
ljmp
sbb
and
jns
inc
and
mov
and
arpl
into
or
pop
xchg
stos
mov
pop
add
sbb
mov
dec
cmp
adc
jo
aaa
jecxz
pop
jns
jecxz
mov
lods
inc
jmp
dec
add
movb
fsts
fisubrl
sub
jnp
aam
std
rcrl
jg
push
push
fstps
int3
pop
test
fidivrs
adc
lret
jge
ljmp
xor
out
test
inc
xor
addr16
scas
shll
mov
fildl
xchg
fildll
sub
xchg
lea
jp
adc
test
jae
rcl
cmc
scas
jecxz
push
leave
or
cmp
lret
add
icebp
lea
lods
les
dec
jmp
aam
dec
mov
pusha
and
aam
jecxz
in
movsb
mov
xchg
dec
dec
mov
test
sahf
push
inc
test
fistpl
or
mov
cmp
mov
data16
out
fsubr
mov
pusha
hlt
mov
mov
and
jmp
push
inc
mov
pusha
pop
pop
sub
fsub
clc
fcoms
mov
jg
movb
sti
rcr
push
inc
sbb
rolb
xchg
add
scas
mov
icebp
mov
add
push
cmp
mov
in
dec
mov
iret
add
pop
out
aas
pushf
lcall
jae
sub
mov
jp
addr16
je
imul
int
cmp
nop
inc
jecxz
xor
xchg
bound
jp
adc
fisttps
lds
pop
cmpsl
jge
adc
aas
imull
lods
data16
inc
mov
cmp
sub
xor
icebp
out
adc
pop
fstps
sbb
adc
pop
ss
sbbb
mov
shlb
sub
mov
test
jg
mov
mov
jg
shrb
addr16
inc
je
subb
enter
fisttpl
lock
scas
out
cmp
outsb
push
iret
sti
cld
xlat
scas
cld
sti
cmp
jbe
std
movsb
add
and
mov
andb
rolb
hlt
in
loope
enter
jb
or
jle
push
aaa
jmp
scas
sub
xchg
mov
in
rcrb
and
and
pop
sbb
dec
addb
sub
loop
lds
sti
mov
loopne
mov
subl
scas
shrb
sub
pop
sub
aam
add
daa
mov
stc
sub
or
inc
xchg
push
into
add
jl
enter
popf
cwtl
mov
jne
push
adc
adc
dec
sub
pop
cs
ret
xor
lods
shrb
mov
adc
roll
add
push
mov
sbb
mov
cld
lahf
mov
loop
mov
xor
sub
push
mov
idiv
movsb
or
daa
sbb
ss
stos
lret
ss
mov
xor
clc
aam
out
sbb
in
or
enter
push
sub
loop
arpl
in
scas
bound
inc
orb
mov
xor
enter
test
mov
sbb
xor
pushf
fnstenv
push
adc
lea
dec
lock
notb
shrl
sub
cli
orl
cmp
std
outsl
push
push
push
ret
jns
ss
jbe
or
divl
enter
lods
add
fwait
push
dec
aaa
cmpsb
adc
inc
jb
mov
pop
call
xchg
adc
xor
push
je
in
fldenv
xchg
inc
int
xchg
inc
mov
pop
dec
or
notb
sub
xor
insb
mov
ret
sub
pop
addr16
sbb
stos
dec
cmp
cmp
mov
popa
xorl
in
xlat
and
jle
repnz
jmp
mov
cmc
or
iret
mov
push
data16
test
subb
notb
xchg
loopne
daa
sbb
fistpl
arpl
rorl
and
sbb
ret
loope
or
or
std
pop
jmp
movsl
mov
xorb
ds
movsb
pop
repnz
dec
lcall
dec
roll
inc
pop
dec
pop
or
dec
stc
cmp
mov
jmp
dec
mov
imul
rorb
adc
mov
mov
dec
out
lcall
ret
mov
ds
jne
xor
sbb
mov
cmp
data16
inc
pop
push
jmp
lea
xor
dec
and
xor
add
mov
inc
xlat
dec
frstor
leave
and
call
icebp
jnp
icebp
jmp
loop
mov
adc
repnz
cmc
repz
inc
icebp
add
mov
lcall
imul
inc
fnstcw
mov
in
inc
jae
xchg
push
mov
pop
fs
push
lock
mov
cmc
xor
fidivs
pushl
jne
popf
scas
test
jnp
loop
ja
mov
jno
or
mov
push
mov
jmp
or
cmp
and
std
cmp
sti
ljmp
inc
loope
mov
inc
cmp
cmp
testl
jbe
shl
push
mov
int3
and
pop
enter
stc
aaa
hlt
fucomip
insl
hlt
je
xor
xchg
cmpsb
dec
push
jmp
sbb
xchg
or
scas
cmpsb
adc
pop
inc
push
pushf
in
mov
push
insb
pop
cmp
add
jl
lods
dec
fmul
out
pop
adc
repnz
call
scas
out
sub
mov
adc
mov
inc
cltd
imul
into
cmp
push
fcomps
shrl
sbb
jle
add
and
addr16
addb
mov
add
xchg
cmc
pushf
into
pusha
div
lret
cmpsl
mov
lock
mov
pop
pop
xor
xchg
ljmp
adc
orb
lods
mov
daa
jns
leave
inc
dec
outsl
inc
lcall
js
xchg
movsl
jg
mov
movsb
sarl
into
push
pushf
pop
ja
adc
in
xor
fimuls
mov
adc
daa
out
stos
ja
xchg
add
cmp
jbe
js
adcl
push
mov
and
sbb
loopne
lock
pop
fists
inc
lret
js
shll
testl
int
sbb
icebp
cmc
pop
jl
outsl
rol
cmp
dec
or
dec
lock
cmpsl
loopne
outsl
aam
sti
xor
or
jle
push
les
sub
jmp
or
test
jmp
js
pop
or
out
popa
adc
lock
decl
mov
inc
es
test
pusha
mov
les
jne
loope
push
lahf
imull
shr
inc
push
mov
clc
lret
jmp
mov
negl
pop
jmp
andps
adc
xchg
imul
adc
or
dec
pop
xchg
adc
jmp
aam
in
hlt
fwait
jnp
push
cwtl
adc
mov
testb
gs
ret
jg
jge
adcl
mov
or
sbb
test
jae
add
add
jg,pt
xchg
adc
fistpl
cmp
lods
ds
ds
sbb
lret
js
mov
jg
movsb
adc
jl
loope
or
repnz
jle
mov
pop
cmpsb
inc
in
dec
xchg
dec
push
std
push
xchg
cmp
stos
dec
clc
sbb
stc
xor
mov
cltd
in
mov
adc
xor
xchg
add
lods
cmp
out
lods
shlb
sub
sbb
shrb
pop
pushf
xchg
sub
mov
mov
pusha
es
fnstsw
and
xor
movsl
pop
jo
push
sub
movsl
add
fildl
jp
dec
addr16
push
and
xorb
mov
les
in
add
data16
jg
dec
inc
fidivrs
int
mov
cltd
insl
xor
imul
push
mov
inc
jle
insb
add
sbb
scas
mov
rcl
je
dec
adc
stos
cmp
inc
cmp
sbb
jmp
cmp
sbb
mull
sti
push
mov
lcall
jmp
xchg
icebp
scas
inc
xor
jnp
push
arpl
dec
loope
push
rcrl
in
jg
xor
fisubs
test
mov
stos
xchg
fwait
popf
imul
jmp
mov
jge,pt
out
stos
xor
pusha
in
imulb
mov
pop
xchg
cld
clc
pop
in
outsl
daa
add
cmp
xor
and
ja
pop
fs
inc
sarb
push
leave
mov
dec
mov
push
push
test
mov
and
jb
outsl
inc
xchg
mov
ret
cmp
or
mov
pop
sbb
and
cmp
enter
and
sbbl
aaa
loope
mov
cld
out
rcrb
arpl
xchg
adc
inc
and
xor
fsubrs
or
dec
in
sti
xchg
mov
jge
jp
outsb
or
mov
je
sub
pop
imul
movsb
pop
adc
pop
fadds
jmp
push
push
js
test
inc
rorl
push
pop
pushf
pop
xor
and
es
sbb
sub
nop
test
es
fsubs
js
xchg
xchg
sbb
ja
rol
inc
subl
scas
idivl
loope
pop
adc
add
loope
in
sub
lds
outsl
repnz
jmp
int
enter
roll
xchg
movsl
and
popa
sbb
pop
fcmovne
in
jl
cmc
xchg
pushf
jge
insb
ljmp
or
sub
mov
push
fst
fwait
ja
hlt
mov
pop
popa
push
push
sbb
stos
lods
xchg
das
enter
adc
sub
scas
or
insb
in
mov
sbb
fldl
xchg
mov
daa
and
out
push
scas
sub
push
xor
bound
stos
dec
push
pop
mov
jbe
shll
pop
sbb
imul
leave
mov
push
jbe
ja
cmpsb
sbb
je
mov
xor
xor
xor
jmp
xchg
cltd
andl
jmp
add
push
lds
xlat
push
pop
mov
mov
in
lods
xchg
test
cmp
js
icebp
inc
mov
cmp
lods
cltd
push
lods
push
pop
push
nop
mov
jae
js
lods
adc
jae
add
and
ja
mov
pop
imull
adc
enter
test
sbb
lods
subb
sahf
push
jne
lret
lret
pusha
jle
jo
push
xchg
es
out
cli
push
xchg
push
shlb
mov
pop
mov
movsl
jp
aaa
push
inc
scas
into
orl
jecxz
movsb
push
mov
push
movsl
xchg
dec
jge
aas
adc
push
sbb
jo
lret
sub
and
test
push
std
ljmp
test
cmp
mov
ds
lea
stc
pop
mov
or
das
and
fs
cmp
bound
push
inc
test
arpl
andb
and
and
xchg
adc
sbb
push
push
fisttpll
pushl
push
lock
punpcklwd
dec
mov
outsl
adcl
gs
in
dec
jge
scas
fbstp
and
mov
loope
pop
jmp
in
std
xchg
mov
out
mov
mov
ficoml
mov
shll
push
nop
add
push
push
outsb
in
dec
mov
adc
mov
mov
sbb
test
addps
movsl
stc
test
mov
push
xchg
sub
aas
xor
mov
cmp
popf
fldenv
clc
das
pop
mov
or
test
dec
dec
inc
aas
xor
push
lods
loop
push
dec
popf
arpl
cs
sub
mov
out
jg
repz
pop
stos
jmp
or
mov
mov
ror
dec
loop
ja
std
shll
push
sarl
rcll
stc
sbb
sub
or
std
jnp
aam
pop
ror
fstcw
jne
inc
loop
ret
insb
out
idiv
add
fdivs
and
test
sahf
fimuls
fistpl
ficoms
inc
dec
or
xor
repz
mov
ret
dec
imulb
push
test
lahf
andb
inc
cmpb
cmp
adc
pushf
int3
mov
pop
adc
aas
adc
shll
fimuls
sbb
ds
imul
or
int
enter
xchg
xchg
mov
inc
dec
sub
outsb
mov
rolb
adc
add
and
push
imul
pop
popa
cmpsb
insb
decb
addb
push
xchg
dec
push
mov
adc
adc
lret
mov
mov
push
shrb
jl
inc
xchg
pushf
mov
mov
lods
lea
mov
xchg
adc
shll
dec
mov
stc
xor
repnz
xor
jns
xchg
in
mov
les
inc
ret
lds
mov
push
div
mov
adc
frstor
add
lahf
cmpsl
mov
mov
pop
mov
jb
pop
ds
inc
mov
jb
jg
jbe
ds
out
dec
mov
jge
aas
sti
pop
add
cmp
jle
pop
into
sti
adc
xchg
mov
cmp
negl
xcrypt-ofb
cmpsl
stos
lods
push
inc
jl
mov
mov
sbb
mov
cmpsb
add
std
sbb
les
add
lcall
push
dec
xchg
or
aam
adc
fildll
cmpsl
inc
sti
push
xor
es
aam
int
sub
xchg
push
mov
mov
jp
mov
and
test
cmp
test
mov
jb
sbb
into
xchg
mov
lcall
cwtl
adc
or
mov
push
cmc
aaa
les
adc
pop
or
fsubrp
fistps
and
loope
movsb
jb
les
leave
jns
out
lcall
xchg
or
inc
aam
sbb
call
jne
xchg
lods
repz
xor
into
daa
lods
jl
xchg
popf
push
in
and
inc
test
sbb
loop
aas
sti
jl
insl
std
aam
sbb
xchg
add
test
daa
inc
sar
push
jae
jecxz
dec
add
cld
fiaddl
xchg
sbbb
and
lods
andl
dec
out
test
push
gs
fnstcw
cmp
jo
xchg
js
mov
shll
pop
push
movsb
xor
xor
syscall
pop
xor
sub
cld
fucomi
fcoms
push
mov
add
call
adc
lock
push
dec
popa
mov
inc
lret
rcl
adc
lds
xlat
std
sbb
and
clc
adc
mov
mov
ja
fwait
jns
push
leave
ds
popf
dec
lods
ss
cmp
fmull
or
xchg
xor
pop
mov
inc
pop
sub
xchg
les
das
and
sbb
pusha
add
pusha
dec
in
xchg
mov
sub
nop
sbb
mov
cmpsl
jbe
cld
out
out
mov
inc
test
and
mov
mov
mov
xor
inc
dec
or
mov
ja
rorb
ljmp
aas
jo
or
fsub
sahf
movsl
rolw
jmp
mov
adc
sub
pop
cs
dec
fildl
repnz
push
pop
scas
push
stc
push
mov
pop
arpl
xchg
insb
outsl
test
hlt
pop
jnp
inc
xor
mov
add
mov
cmp
fldcw
mov
sub
push
fdiv
fdivrl
lahf
fildll
adc
mov
je
gs
cmp
das
dec
inc
mov
cmp
mov
and
xlat
jg
mov
mov
je
mov
addr16
cmp
leave
std
xchg
xchg
mov
push
mov
popf
inc
jbe
test
frstor
pop
inc
icebp
mov
aaa
or
sub
outsl
repz
jno
in
mov
dec
jno,pn
push
in
jge
dec
xchg
mov
lcall
xchg
xchg
add
cmp
add
sbb
fiaddl
sbb
and
cmp
roll
mull
movsb
pop
popl
xchg
push
mov
insl
jnp
pop
insl
pop
mov
mov
clc
jle
and
dec
or
sbb
adc
cmp
dec
inc
in
cmp
mov
out
fisttps
sbb
repnz
test
xor
stos
push
ljmp
shll
jno
and
add
sub
mov
notb
pop
cmp
or
pop
inc
and
xchg
dec
jbe
dec
mov
mov
mov
cmp
vsqrtsd
ret
mov
decl
xchg
cmp
fnstenv
jle
fildll
dec
xor
or
or
adc
adc
rcrl
adcl
mov
push
adc
inc
call
jbe
push
addr16
fcoms
push
sbb
mov
xchg
nop
dec
adc
aaa
push
pop
jecxz
loope
addr16
shlb
idiv
lret
mov
jne
mov
adc
pop
push
jb
or
or
sbb
fadd
inc
aad
pop
xchg
test
pop
and
hlt
fdivs
adc
cmpsb
test
add
jbe
into
mov
mov
push
ja
inc
mov
gs
sbb
xchg
icebp
pop
les
push
call
adc
sbb
inc
push
js
jge
into
movsl
mov
jo
outsb
push
push
icebp
stos
lock
mov
xor
mov
lods
or
xchg
fidivrl
xchg
xchg
sbb
or
arpl
dec
test
int3
std
negl
push
fsubr
hlt
aad
jmp
pop
dec
lock
pop
cmp
loopne
xor
push
mov
pop
and
ja
sbb
dec
push
xchg
xchg
sahf
ja
cwtl
dec
sub
test
sub
jmp
xor
mov
xor
mov
rcrl
fwait
decl
lods
cmc
movsl
inc
jo
scas
or
out
jmp
pop
push
out
and
imul
lret
jne
cltd
pop
cmp
lcall
out
add
jae
jo
aad
ljmp
and
cmpsb
gs
mov
nop
scas
adc
sahf
test
insb
sub
addr16
test
xchg
xor
sub
les
xchg
test
sbb
hlt
cmp
jl
xor
mov
lea
sbb
push
iret
and
lret
mov
pusha
jle
or
and
pop
inc
es
aam
mov
lods
sub
dec
jae
pop
sbb
stc
mov
pop
or
add
lods
dec
xchg
push
xlat
add
mov
pop
dec
ds
and
lcall
push
dec
ss
clc
enter
add
cmp
lea
mov
pop
loop
inc
or
pop
push
and
sbb
sahf
inc
push
mov
dec
scas
call
das
out
xorl
push
data16
mov
mov
inc
add
push
jnp
fcoml
pop
lcall
mov
lea
sarl
cmp
aam
xchg
addb
stos
jae
pop
scas
mov
xchg
jae
shr
cmpb
jl
jbe
popw
jmp
push
mov
xchg
out
fimull
fcoms
fs
cmc
in
push
push
js
daa
mov
dec
fildll
ret
into
fucomip
pop
adc
outsb
xchg
inc
ja
or
cmp
adc
xor
sbb
xor
jle
mov
shlw
adc
stc
and
pop
xchg
les
out
popf
mov
mov
aad
fcomps
mov
cmc
jp
inc
mov
push
sub
cld
repz
cmc
lret
mov
push
enter
adc
les
popf
lcall
xchg
xor
inc
jae
es
mov
mov
addr16
out
and
xchg
adc
dec
mov
imul
lret
sub
jbe
xchg
sbb
decl
inc
xlat
jo
xchg
int
aam
cmpsl
fstps
sbb
ret
into
in
sbbl
test
jp
and
dec
loopne
roll
pxor
lods
lahf
mov
lock
cmpsb
pusha
int3
testb
mov
mov
cs
popf
fstpt
movsl
lods
repz
flds
test
leave
sbb
sbbl
cltd
cli
fwait
dec
xchg
adc
je
sbb
sbb
pop
fisttpl
cmp
movsl
adc
mov
repnz
jle
rcrb
pop
sbb
xorl
xlat
and
mov
and
dec
icebp
mov
pop
xorb
lret
jnp
or
bts
sbb
xor
jns
mov
into
cmpsl
cwtl
xor
dec
mov
std
fldcw
xlat
in
lret
loop
fsubs
pop
popa
sub
mov
loope
test
mov
mov
addr16
jmp
mov
stc
mov
sub
sbb
sub
ljmp
insb
push
or
xchg
mull
pop
and
rcl
cwtl
pop
cmp
jecxz
fst
ret
aam
das
inc
xchg
aad
mov
sub
and
add
adc
cmp
mov
adc
scas
jnp
out
mov
push
test
ret
iret
adc
addr16
es
cmp
cmpsb
aam
dec
xor
xchg
cwtl
or
in
nop
dec
inc
shll
jae
cld
test
and
jno
inc
stos
enter
push
sub
insl
mov
or
repz
mov
mov
add
mov
push
or
jno
push
loopne
out
std
fdivl
cs
out
mov
or
lahf
out
jle
mov
aam
sub
push
shl
lret
sbbl
fists
push
or
in
ja
bound
je
ficomps
dec
shll
fidivs
or
lahf
cli
je
pop
in
adc
add
jg
pop
jnp
sbb
push
lahf
jmp
ret
scas
cmp
cmp
dec
movsb
scas
out
and
mov
fistps
loop
cld
movsb
aas
mov
adc
bound
push
bound
int3
in
xchg
dec
stc
mov
fcoml
sarl
lock
push
xor
idivl
test
mov
add
fimull
fsubr
adc
test
enter
add
jmp
cmpb
push
lods
fdivr
cmp
cmpsl
mov
gs
iret
ret
repz
rolb
roll
lret
pop
loope
cmp
rclb
mov
jno
scas
rorl
xor
add
jb
dec
mov
stc
ja
arpl
or
xor
and
pop
and
mov
cmp
push
outsl
mov
in
cmpsb
sti
or
add
adc
adc
test
loop
inc
popa
mov
inc
out
jbe,pn
mov
adc
popa
idivl
adc
or
into
cli
adc
jecxz
int3
out
mov
mov
pusha
in
xor
orb
out
push
fsubr
lcall
mov
add
mov
and
jp
dec
arpl
inc
xchg
pushf
jmp
adc
jmp
inc
cwtl
and
mov
loop
push
data16
stos
mov
subl
xor
jbe
cmp
scas
fistpll
mov
adc
and
jnp
mov
imulb
ljmp
mov
loope
and
stos
lds
xchg
dec
xor
push
outsb
jg
scas
mov
adc
inc
push
lahf
push
add
cmp
pop
xor
push
lret
sub
fistpl
adc
fisubs
mov
xor
mov
shll
dec
lods
cmp
shll
shll
ja
mov
pop
push
push
push
insb
fcmovu
orl
push
leave
xchg
sub
add
xchg
stc
rcrl
scas
sbb
xchg
mov
mov
loopne
pop
xor
subl
mov
nop
movsl
pop
imul
fiaddl
insl
stc
pop
lcall
adc
mov
adc
test
mov
and
insb
aas
mov
mov
jmp
pop
pop
sub
mov
sbb
cmp
mov
add
cs
je
push
sbb
imul
xchg
inc
and
cmpsl
stos
add
inc
adc
lret
cmp
lcall
mov
bound
mov
dec
arpl
fsubrl
sbb
and
mov
es
mov
and
mov
shlb
inc
dec
xchg
loop
add
fldt
outsb
cltd
fwait
jae
jle
dec
pop
xor
pusha
sbb
stc
in
lret
xchg
stos
test
imul
sarl
mov
aaa
mov
push
xchg
popa
loop
and
rcrl
ds
inc
adc
jle
pop
iret
ds
movsb
sub
push
cld
xchg
mov
jno
daa
idivl
lcall
push
xchg
cltd
iret
cmp
rcr
popf
cmp
cmp
jp
lahf
js
outsb
push
and
xor
xchg
xlat
or
stos
xchg
xor
fidivrl
stos
hlt
lock
inc
ljmp
push
xchg
pop
mov
jbe
cmp
push
xchg
mul
pop
add
xchg
pop
clc
mov
sub
insl
inc
out
outsl
fisubrl
xlat
push
pop
imul
or
adc
jne
push
arpl
or
mov
inc
xor
imul
testl
push
repnz
xor
into
pop
push
filds
nop
pop
xchg
repnz
sbbl
pop
sbb
orl
out
or
jb
or
aaa
pop
jge
push
dec
stos
push
push
scas
jg
jmp
je
dec
xchg
mov
mov
flds
jp
and
adc
stos
pop
shll
or
inc
inc
dec
jo
pusha
push
xor
fimull
and
lahf
gs
imul
inc
mov
insl
mov
aaa
aas
mov
dec
daa
les
cmp
popf
cld
stos
push
xchg
mov
mov
dec
cwtl
add
ljmp
sub
test
rcl
lods
mov
cmpsl
nop
sub
imul
push
fwait
ret
push
stos
pop
aaa
fwait
mov
fsubrs
shll
xchg
dec
sub
sbb
in
pop
fistps
lods
mov
sbb
pop
das
mov
and
pop
sub
hlt
push
lods
faddl
das
adc
jmp
pop
dec
lret
call
out
out
ljmp
jg
sbb
push
xchg
ljmp
shll
scas
xchg
lods
fidivrl
inc
xchg
testl
movsb
xor
out
loop
mov
adc
fsubrs
aam
fldcw
sub
fldcw
loopne
popf
jp
jp
cld
and
test
fucompp
cmpsb
pop
cmc
mov
adc
dec
faddl
and
mov
loopne
pop
lock
mov
lds
and
fwait
mov
sbb
fstpl
inc
lods
push
movsb
xchg
fnstcw
mov
mov
fwait
xchg
lcall
js
mov
hlt
test
fcmovnu
dec
xchg
ret
lcall
xlat
dec
sbb
jo
push
jl
jns
mov
in
pop
fmulp
adc
pop
or
xor
jae
xchg
mov
rcll
mov
sbb
js
aad
lds
fbld
jne
cmp
out
adc
sahf
xchg
mov
call
sbb
dec
lret
add
inc
inc
ret
lods
push
jb
jmp
in
adc
pop
or
out
movsl
push
jb
mov
push
fwait
cmp
cmpsb
repz
cmp
imul
xor
es
sub
repnz
or
es
sub
jg
icebp
cmpsb
in
fs
dec
dec
loope
aaa
xor
xchg
xor
in
ljmp
sub
aas
add
sbb
mov
lcall
pop
jmp
mov
add
adc
inc
push
mov
and
das
fcomps
cmpsl
cltd
pop
sub
out
loopne
sbb
fdiv
dec
ret
out
insl
sbb
loopne
mov
rcrl
lods
aas
jbe
mov
in
cmp
out
mov
jecxz,pn
lods
xchg
in
repnz
push
cmpsl
mov
in
movsb
xchg
xchg
in
je
pushf
push
ljmp
test
inc
and
xchg
dec
aam
xchg
xchg
dec
in
jg
rorl
loopne
xchg
int3
notl
dec
cmc
push
xor
sbb
mov
adc
cmp
adc
push
mov
pop
or
loop
rolb
js
add
cmpsl
jne
sub
mov
daa
xor
bound
popf
repz
pop
ss
shlb
push
and
xor
sub
outsb
xchg
sbb
adc
fldenv
jp
cmc
adc
ficoms
mov
in
pop
out
cs
pop
imul
outsb
adc
sub
lret
lods
rorb
subl
roll
add
loop
stos
xchg
test
dec
loopne
popf
pop
dec
mov
jb
lds
pop
mov
add
xchg
xor
xchg
outsb
pop
aam
fimuls
in
loopne
add
mov
push
jae,pn
pop
fidivl
push
jmp
adc
aad
les
jle
pop
mov
and
jno
xorl
ja
data16
fdivp
push
lret
jge
push
aaa
xor
stos
ljmp
ljmp
or
adc
lea
push
jae
pop
je,pn
mov
ret
sbb
or
aad
add
ljmp
jbe
stos
ja
xor
jge
stc
popa
sub
dec
jg
mov
loope
fcomps
imulb
mov
gs
mul
aam
inc
fnstsw
sbb
insb
inc
es
hlt
add
cltd
xchg
jo
and
or
xor
decl
pusha
push
inc
xchg
hlt
pop
lods
add
loopne
sub
push
jg
xchg
mov
dec
outsl
jmp
lahf
jnp
adc
popf
test
nop
push
pop
std
adc
jae
xchg
loop
pop
imul
dec
movsl
add
push
inc
xchg
lcall
cmpsb
popf
dec
inc
jno
dec
mov
lcall
aas
sbb
les
enter
lock
mov
std
pop
iret
aad
add
stos
or
sbb
cmc
fsubrl
std
daa
arpl
or
xchg
cmp
lret
sub
or
divb
push
rorl
inc
and
mov
mov
aaa
sub
jne
sbb
lock
dec
incl
jne
icebp
out
sub
or
iret
dec
cwtl
icebp
xlat
add
out
sbb
sbb
cld
dec
in
mov
pop
pop
mov
pop
jl
leave
outsb
xor
mov
cld
in
dec
gs
fcmovne
mov
dec
lds
mov
inc
jge
nop
jo
mov
cmp
cs
adc
outsl
xor
xacquire
adc
and
or
xor
push
adc
pusha
cwtl
push
lahf
cmpsb
add
aad
scas
dec
and
add
and
movsl
jno
xlat
fadd
les
jmp
popf
mov
out
lahf
imulb
lret
adc
popa
js
out
cld
pop
ja
daa
mov
int3
or
dec
add
or
jmp
mov
sub
ret
add
xchg
inc
jmp
loopne
push
ljmp
cs
and
xchg
jns
repnz
sbb
push
pop
and
xchg
movsbl
leave
fldl
inc
adc
adc
dec
outsb
push
int3
xlat
in
mov
jle
or
das
jns
mov
and
cld
pop
pop
xchg
sub
mov
fdiv
add
loop
xchg
or
mov
out
fwait
int3
push
pop
lretw
mov
push
fbstp
std
and
xchg
mov
ret
and
add
lods
or
in
aam
jae
sbb
jecxz
xor
in
adc
xor
sbb
imul
push
and
sub
movzwl
arpl
cmp
movsb
shl
test
mov
test
pop
mov
cmc
add
sub
pushf
add
mov
jg
mov
cwtl
pushf
adc
sbb
out
popa
in
or
clc
negl
ja
gs
jne
aam
sbb
loop
cmp
pop
pop
aam
pop
rolb
xchg
rcrl
loopne
in
iret
inc
mov
popf
mov
or
or
ss
mov
aad
es
push
cmp
jns
cmp
sbbl
cmp
pop
in
xor
mov
dec
loopne
push
outsw
or
and
or
mov
imul
dec
mov
mov
test
rorb
mov
jmp
adc
mov
int
adc
adc
jne
test
jns
gs
mov
add
jecxz
cmp
decl
outsl
cmpsl
adc
jo
pop
fcoms
push
in
cld
add
aam
shll
sbb
hlt
jne
icebp
inc
lea
sbb
sbbl
in
rorb
xor
call
mov
dec
fldcw
cmpsl
push
or
lcall
cld
jg
pop
sub
das
das
jecxz
jl
fwait
dec
mov
mov
or
lcall
out
insl
pop
repz
clc
inc
ss
in
sub
cmp
and
aad
sub
pop
push
es
add
push
sbb
fistps
push
cmpsb
inc
xchg
sub
mov
sub
xchg
sub
sub
scas
stos
mov
mov
shr
mov
enter
sub
cmp
jbe
jb
pop
jno
adc
xor
push
and
notb
das
shrb
xor
push
nop
loopne
and
dec
es
cmpsb
mov
cmp
fbld
xchg
jbe
adc
out
jo
repz
cmc
add
push
dec
cmc
in
out
int3
xchg
jmp
ja
roll
jbe
mov
mov
lods
or
les
lock
test
sbb
dec
cmp
push
ficoms
add
adc
enter
xchg
mov
push
push
push
inc
dec
add
daa
jns
mov
jne
mov
jo
cmp
mov
cli
inc
xchg
ret
mov
bound
dec
das
ljmp
fwait
pushf
fistl
xchg
push
adc
xchg
and
add
jno
sbb
push
std
aam
lahf
dec
test
xchg
xor
inc
xor
mov
fists
inc
cltd
neg
add
call
stc
movsl
movsb
jg
xchg
sub
scas
icebp
xor
mov
dec
fidivs
adc
clc
popa
lods
ret
sbb
repz
sub
jb
cmp
push
jne,pn
mov
fwait
jle
sahf
lods
aam
mov
mov
add
push
frstor
pop
cld
out
lahf
inc
xorl
xchg
lahf
out
adc
pop
lcall
xchg
pop
add
aaa
dec
lds
xorl
add
in
cwtl
into
cmp
scas
or
iret
jo
mov
movsl
cmp
or
xor
adc
cmpsl
dec
outsl
dec
inc
test
lods
sarl
lock
call
lods
cs
sti
loope
xchg
mov
cwtl
adc
fisttpll
movsl
popa
push
repz
jbe
inc
test
jb
mov
fsubrl
push
mov
mov
or
cmpl
mov
mov
int3
fwait
and
sbbl
sbb
sub
mov
test
sarl
in
ffree
lahf
sub
jecxz
cmpsb
adc
push
sarb
push
ljmp
mov
and
mov
lods
sub
sbb
shr
pop
outsl
arpl
clc
fidivs
pop
lds
pop
sarl
pop
push
loope
and
mov
cmpsl
dec
in
iret
mov
mov
lret
inc
inc
loopne
rolb
adcb
outsl
sub
std
mov
mov
lods
mov
hlt
xchg
into
sbbl
test
xchg
icebp
sbb
int3
pop
adc
pop
popa
int3
in
in
and
test
mov
lods
dec
loopne
push
sub
or
cld
pop
inc
jno
xchg
push
cmp
mov
shll
test
push
push
adc
xor
mov
add
mov
and
cmp
and
fwait
ret
push
pushf
jecxz
or
xchg
mov
sbb
jmp
andb
jmp
inc
dec
xor
fisttps
negb
xchg
outsl
inc
movsb
pop
pop
push
mov
fidivrl
cmpsl
and
lock
rolb
sub
jnp
adc
mov
dec
push
inc
repnz
dec
pop
cmc
push
fstpl
xchg
gs
lcall
ds
rorb
out
js
and
sub
ds
insb
push
cltd
mov
sbb
stos
fcomip
sti
xchg
hlt
sub
mov
scas
lea
and
jno
sti
xor
push
cld
inc
pop
inc
push
and
andl
and
sub
in
jp
xchg
dec
outsb
aaa
xor
ds
push
dec
xor
inc
das
push
imulb
orl
mov
xchg
jnp
outsb
cltd
jl
arpl
divb
mov
lock
jb
or
pop
scas
ret
stos
in
ret
add
inc
popf
test
cmp
mov
iret
mov
rol
outsl
and
and
out
ds
sarb
imul
xchg
mov
shrl
jmp
stos
mov
xor
and
gs
sub
xor
push
js
mov
popa
mov
outsl
rcrl
sbb
sar
out
jns
ss
testl
or
shll
fs
stos
dec
insb
push
sub
mov
push
arpl
adc
in
ds
cmp
dec
dec
jge
cmp
daa
sbb
arpl
jmp
xchg
and
movsl
xchg
dec
decb
xor
popa
faddl
sub
mov
add
jnp
push
lock
push
je
je
lods
or
out
mov
hlt
es
fsubl
sbb
xor
mov
sahf
test
lods
push
jo
push
pop
mov
push
cmc
or
xlat
or
sub
jl
and
mov
pop
fsubl
or
test
or
cltd
push
jle
adc
adc
xchg
cmp
idivl
mov
aad
addr16
push
cmp
pop
cli
pop
adc
test
mov
xor
mov
dec
lcall
inc
or
sbb
mov
pop
outsl
xchg
xor
mov
stos
cmp
dec
js
push
mov
imul
push
lcall
hlt
xchg
pop
xchg
rcl
add
xchg
inc
pop
jg
lcall
sahf
in
xor
xchg
sbb
xor
out
call
xchg
daa
sub
jns
dec
out
aas
clc
mov
jne
pop
dec
cs
call
test
cmp
test
adc
lock
xchg
sti
lahf
dec
mov
pop
cs
loope
jbe
jmp
dec
xchg
cmp
cmp
mov
adc
xchg
sbb
inc
int
imul
inc
loopne
push
xchg
jbe
add
pop
out
inc
pop
lcall
aas
test
je
orb
leave
adc
mov
iret
mov
negb
sub
and
cmp
sbb
and
inc
loopne
fiaddl
in
dec
push
shll
data16
or
push
lret
sub
int3
pop
pusha
xor
adc
ja
in
arpl
sub
ss
out
fcomi
xlat
sbb
lahf
cmp
addl
out
ljmp
push
mov
jg
xorl
inc
gs
icebp
push
mov
add
push
push
outsl
jnp
in
mov
sub
push
mov
push
inc
fwait
sarl
dec
xlat
clc
ljmp
and
aad
ret
xor
dec
adcl
cmpsl
daa
out
pop
mov
pusha
inc
pop
xchg
clc
lods
cmp
pop
imul
pop
cwtl
pop
lds
mov
push
jmp
pop
ja
or
cmp
mov
cmp
in
cmp
les
data16
lods
loope
fs
cmpsb
sub
test
pop
orl
inc
shr
mov
xchg
sbb
enter
xchg
jns
jo
loop
dec
push
inc
ljmpw
movsb
notl
sbb
push
movsl
iret
pop
or
add
fcompl
xchg
inc
xor
push
dec
popa
lock
adc
pop
mov
ds
into
ret
jl
mov
shr
lock
nop
out
sub
shlb
imul
sbb
xor
stos
cmova
sub
addb
std
or
mov
imul
ljmp
jg
xchg
and
in
ds
push
cmp
xor
insb
sub
push
ret
inc
out
dec
jg
nop
or
lock
adc
push
lock
dec
rorl
repz
aad
ret
dec
int3
out
mov
fsqrt
rcrb
pop
dec
xchg
ljmp
add
mov
xchg
push
repnz
mov
mov
mov
dec
sti
jmp
dec
jmp
lahf
mov
mov
es
enter
fnstsw
mov
xor
stos
imul
dec
cmpsb
repz
pop
mov
cwtl
adc
jnp
fs
arpl
cmp
mov
loop
ss
mov
mov
ficompl
sahf
cmc
jl
mov
pop
mov
or
mov
es
mov
daa
pop
push
loope
mov
mov
sbb
fildl
imul
cmp
fnstcw
test
ss
mov
jo
jno
jmp
push
insl
or
fsubrs
mov
nop
fisttpll
loope
lret
leave
mov
pop
jecxz
xchg
xchg
xchg
sti
adc
xchg
xchg
push
movsb
mov
pusha
lds
shll
popf
push
ror
xorb
sbb
int3
inc
je
fisubs
cmp
subl
push
xchg
and
mov
fwait
xor
jb
push
fisttpll
aaa
cmpsb
lods
jb
push
nop
push
shrb
cmp
sbb
int
mov
mov
idivb
and
push
int3
inc
push
jns
mov
pop
jmp
pop
outsl
mov
leave
jge
jecxz
sarb
fwait
and
lods
or
sarb
push
aas
stos
fs
and
ficoms
imul
mov
mov
jecxz
sub
mov
jecxz
and
jns
frstor
xor
sbb
mov
rolb
push
pop
mull
dec
mov
pop
lds
dec
xlat
mov
and
gs
outsl
sbb
in
xchg
outsl
push
data16
adc
sbb
inc
jmp
adc
mov
int
in
inc
and
and
lret
sub
out
jno
push
sarl
aaa
push
int3
sbb
fcompl
int
cmp
or
mov
lret
xchg
cmc
das
idivb
imul
inc
and
fs
cmp
ror
sub
jg
cmp
pop
jns
push
mov
shr
xchg
xorb
int3
push
subb
xorl
cmpsl
mov
sar
cli
jne
scas
push
sbb
mov
pop
je
push
dec
xor
xlat
jb
xacquire
push
arpl
mov
mov
aad
ja
cwtl
cmp
dec
rcll
and
scas
sub
stos
dec
mov
ret
mov
push
mov
sbbb
sub
lahf
shrb
sbbl
and
les
outsl
adc
adc
lcall
xchg
ret
cmpsb
mul
lea
lret
lret
pop
xchg
or
cmp
out
in
rcrl
incb
fldcw
jae
aad
fstpt
shll
mov
and
push
jns
pushf
pop
jbe
dec
xor
lret
rorl
dec
icebp
iret
iret
cwtl
out
mov
sarl
and
adc
jb
andl
xor
fbstp
dec
int3
data16
xchg
fildll
orps
int3
jmp
add
loop
lret
add
ret
data16
fstpl
sti
push
adc
jmp
fmull
adc
pusha
xor
fbstp
repz
lret
scas
out
pop
pop
pusha
in
insb
sbb
aam
call
ljmp
cmp
ds
pop
pop
and
adc
fdivr
mov
in
xor
lret
mov
pop
dec
sub
adc
cwtl
bsr
adc
addr16
push
fstpl
push
cmp
sbb
push
sbb
jnp
jecxz
cmp
add
lea
pop
add
or
testb
lods
js
pop
cmp
pop
xchg
repnz
not
roll
sbb
jg
xor
aam
jae
cmp
jle
dec
test
mov
cmp
add
push
xchg
mov
arpl
icebp
aas
cmpsb
cmc
in
jmp
stc
insl
and
addr16
cs
push
jmp
sti
fxch
and
sub
mov
push
jecxz
sbb
or
or
dec
cmp
icebp
xchg
arpl
pop
and
js
push
not
jno
push
fs
insl
and
xchg
fwait
out
pop
ret
or
or
int3
mov
mov
inc
es
fsubl
fistl
fdivrs
xchg
push
cli
push
cmpsb
dec
jmp
imul
or
cli
push
fimuls
ret
or
mov
sbb
push
mov
add
xor
xchg
into
sti
lcall
push
lods
inc
xchg
ss
daa
inc
addl
mov
sub
sub
jbe
pop
pop
lret
and
cld
les
loop
std
pushf
add
and
lcall
enter
sbb
sbb
or
push
pusha
aas
insb
repz
push
adcb
add
sti
orl
ret
jge
ret
mov
js
mov
mov
mov
in
mov
jno
push
push
and
dec
cs
mov
dec
daa
jb
cwtl
ja
xor
push
dec
out
push
adc
xchg
scas
push
mov
lods
icebp
outsl
sbb
outsl
mov
into
and
std
cmp
or
mov
sti
and
cmpb
inc
mov
add
push
cli
cld
dec
out
pop
push
imulb
sbb
pop
push
stos
arpl
xor
je
push
mov
imul
cmp
jns
imul
add
addl
je
shrb
sub
lods
sahf
sub
loop
lock
loope
add
pop
les
and
xor
into
mov
and
and
jg
dec
hlt
mov
lret
mov
rcr
sub
gs
sahf
push
mov
mov
xor
jnp
inc
push
repz
mov
fmuls
xchg
std
cmp
testb
adc
adc
push
sbb
jne
outsb
repnz
sarb
cwtl
mov
push
adc
out
in
ljmp
lock
hlt
fwait
lea
fwait
jg
pop
mov
decb
adc
movsl
mov
sti
xchg
inc
pushf
mov
cmp
in
cmpsb
mov
jg
sbb
test
es
xor
xor
ja
inc
push
push
mov
add
adc
inc
into
push
in
enter
stos
test
mov
inc
nop
mov
push
lret
test
loopne
pop
fsubs
out
cmp
cmpsb
stos
sub
fdivrs
or
ljmp
into
fstpl
pop
ds
add
lds
test
sbb
sbb
nop
cli
lods
jae
scas
into
jmp
cli
dec
popa
push
mov
cmp
mov
dec
mov
cmpl
xor
test
fsubrs
ret
in
or
aas
ljmp
push
sti
push
sub
fs
push
jg
xchg
dec
adc
xchg
movsl
push
in
jmp
and
rcl
je
inc
xchg
sarb
push
sub
inc
sub
imull
xor
bnd
inc
mov
xchg
test
lds
mov
xor
push
add
inc
stc
int
popf
mov
call
add
pop
mov
in
hlt
mov
mov
jnp
test
sub
mov
or
pop
out
mov
inc
sub
scas
lea
pop
ficoms
pop
test
or
into
jecxz
xor
dec
loopne
ds
add
add
out
in
gs
add
adc
loop
das
inc
inc
cmp
in
add
imul
std
out
pusha
js
fstps
push
enter
cmpsl
ds
lretw
hlt
cmp
cmp
pop
adc
outsl
mov
jg
inc
enter
scas
mov
adc
add
incl
loop
jecxz
pop
mov
sub
imul
loop
addr16
in
jmp
call
aas
cmp
pop
mov
sti
add
testl
ljmp
test
pop
cld
add
outsl
push
mov
xchg
cmp
pop
in
lret
mov
mov
test
call
jmp
jge
mov
jl
mov
fnsave
frstor
or
adc
in
pop
stc
mov
cmp
cmpsb
es
adc
sar
push
push
dec
mov
jbe
into
or
push
in
call
mov
in
add
xor
ret
xlat
push
cmpsl
lcall
cmp
mov
dec
jle
mov
jmp
push
jne
push
loopne
adc
mov
fldt
pushf
jmp
std
sbb
add
outsb
fidivrs
adc
repnz
test
dec
dec
jmp
insb
lahf
pop
sub
test
loopne
push
lods
xor
rcrl
stc
out
test
mov
xor
cltd
orl
xor
sahf
dec
mov
mul
mov
hlt
pop
ret
jg
insb
mov
mov
mov
divl
inc
inc
test
xchg
aas
pop
iret
mov
pop
xor
inc
push
lret
sub
pop
mov
cmp
jnp
dec
pop
cs
sahf
stos
leave
push
inc
mov
imul
jo
jnp
or
jnp
sbb
adc
jp
push
out
inc
and
cmp
cmpb
push
mov
sahf
add
adc
xor
mov
or
ss
dec
pop
jge
inc
dec
dec
cmp
and
movb
xor
into
cmpsb
hlt
aas
mov
xor
leave
hlt
mov
jne
mov
pop
jae
lods
lds
ja
mov
ss
outsl
or
and
dec
loopne
lods
jb
or
adc
inc
jl
incb
xor
pop
push
lret
inc
xchg
lock
push
inc
sub
inc
xor
daa
cmp
push
das
repz
je
dec
or
add
pop
xchg
loope
insb
cwtl
out
jp
push
in
imull
loopne
ljmp
das
mov
jl
lahf
inc
jmp
cmp
arpl
fisubs
sbb
mov
inc
fldenv
xchg
mov
lods
and
sub
scas
loop
jecxz
test
push
ljmp
notl
inc
add
xor
aas
std
push
mov
push
sbb
mov
sbb
out
int3
bound
mov
xlat
mov
out
mov
or
or
gs
adc
jl
inc
cmc
aam
push
jae
std
mov
sub
cmc
or
cltd
lahf
in
mov
add
test
aad
push
sub
mov
push
jl
xchg
add
daa
sub
mov
mov
mov
jecxz
out
pop
mov
xor
ror
pop
mov
out
pushf
mov
lret
inc
out
mov
xchg
cmp
sub
pop
jle
sti
mov
loop
stos
or
jno
repz
and
add
inc
clc
mov
push
imul
dec
push
jb
daa
imul
lock
lea
xor
les
cs
fidivs
push
fisubl
and
hlt
cmp
cmp
aas
sbb
pop
popa
in
push
lret
xchg
out
out
sub
mov
add
cwtl
fdivrl
push
xchg
sti
xchg
or
pusha
mov
sub
mov
mov
and
pop
or
addr16
popf
mov
adc
scas
lea
or
sti
push
loopne
aam
sub
inc
sub
ret
in
lahf
or
dec
lods
aam
or
xor
das
dec
inc
iret
cltd
pop
push
adc
movsl
fstl
inc
push
cmp
std
mov
stc
push
sbbb
pop
jmp
pushf
popf
aad
sub
push
outsl
xor
fidivrs
inc
mov
pop
in
pop
adc
or
aaa
pusha
test
dec
stc
lods
fists
xchg
and
inc
pop
add
and
mov
jno
cmp
push
jge
dec
push
loop
cmp
outsl
in
jno
mov
imul
test
push
loope
sub
lods
push
pushf
lock
push
shlb
lods
or
leave
mov
mov
hlt
push
imul
stos
insl
es
mov
xor
pop
fistl
and
pop
loop
popl
cwtl
pop
sbb
dec
int
stos
xchg
in
bound
sub
addr16
or
dec
push
out
push
and
sub
push
cmpsl
mov
lods
dec
or
mov
mov
mov
sub
cmp
cmp
leave
mov
inc
add
hlt
repz
dec
clc
subb
dec
push
mov
inc
ret
or
leave
popa
push
fmull
xchg
or
cmp
push
lock
mov
mov
cltd
sahf
push
mov
adc
orl
sbbl
popf
lcall
inc
test
scas
push
pop
inc
mov
mov
cmp
test
adc
push
ja
leave
mov
jg
inc
mull
and
xlat
cmc
outsb
imull
incb
jbe
rcrb
pop
mov
cmp
push
adc
popf
mov
mov
adcl
xor
cmc
jmp
pop
or
das
pop
and
mov
outsb
cmp
xchg
xor
pop
jmp
pop
test
ja
add
and
push
fcoml
inc
mov
xchg
jbe
daa
fildl
pushl
dec
loope
arpl
loop
and
sub
scas
inc
dec
or
paddusw
ljmp
or
out
cmp
mov
mov
or
pop
call
jne
hlt
add
int
mov
or
packsswb
mov
scas
push
xor
add
add
mov
mov
adc
subl
mov
push
out
leave
xor
out
dec
in
cmp
data16
push
bound
mov
push
fwait
jns
pop
ss
stos
mov
xchg
clc
fcomp
cmp
pusha
test
pop
push
mov
imul
inc
jno
pop
sbb
mov
mov
xlat
pop
fxch
mov
xchg
imul
push
or
push
cli
dec
in
xchg
out
or
mov
lret
loope
add
fucomp
out
adc
and
mov
push
push
in
jge
mov
mov
xchg
or
xchg
mov
dec
into
xor
cltd
adc
mov
fld
mov
std
int3
mov
iret
sub
push
out
pop
mov
sbb
or
rcrb
lret
mov
scas
aaa
jmp
xor
ljmp
push
inc
pusha
das
sub
sahf
test
repnz
cmp
pop
pop
xchg
test
sti
xchg
addb
xor
aas
xorl
int
add
roll
xchg
repnz
dec
lcall
enter
mov
out
xchg
mov
lock
sub
xlat
jne
xchg
xchg
or
xor
imul
mov
pop
repz
and
push
push
in
xchg
fs
and
faddp
subl
fimuls
and
aam
and
mov
jle
jmp
or
pushf
xor
xchg
ds
dec
dec
fidivs
cmpsb
jp
icebp
scas
mov
add
ss
xchg
jns
and
scas
sub
nop
inc
mov
cmp
xor
jb
and
mov
add
jo
push
fwait
aas
jmp
push
repnz
xchg
fldcw
enter
scas
pop
push
pop
xchg
fwait
push
rolb
inc
pop
insl
lods
push
in
lds
in
xchg
push
push
pop
cld
ljmp
xor
fldenv
xchg
std
mov
mov
inc
cwtl
jl
int3
test
sbb
add
imul
daa
imul
add
and
pop
decb
sahf
ret
out
int3
adc
push
out
fmull
shl
sbb
in
mov
cmp
sub
jno
mov
push
dec
lcall
hlt
imul
lea
testb
pop
in
sub
xchg
xor
sub
pop
mov
mov
cvttps2pi
movsb
dec
pop
cmp
and
sbb
pop
aas
add
mov
fadd
mov
xor
adc
jnp
mov
and
jle
push
add
repz
out
into
cld
inc
loop
inc
jge
stc
aas
call
loop
movb
loope
addr16
andb
cs
loopne
sahf
sub
neg
xor
stos
xor
popf
iret
gs
dec
sarb
mov
into
and
out
mov
dec
fadds
mov
cmp
adc
stc
out
lock
repnz
mov
fs
outsb
cmp
mov
cmpsl
xor
jae
in
jne
rolb
xor
mov
mov
das
fisttpll
aas
pop
jbe
jbe
fs
lahf
cmp
sub
xchg
sahf
jno
dec
mov
mov
in
mov
push
and
iret
cwtl
mov
sarl
bound
mov
dec
out
xchg
test
loopne
scas
aam
xchg
movsb
push
sub
inc
xor
push
pop
push
push
movsb
dec
dec
jle
test
push
data16
push
or
mov
unpcklps
add
dec
and
pop
ret
sarl
repnz
mov
clc
push
lret
dec
int3
fldcw
push
push
hlt
in
xchg
add
xchg
sbb
movsb
fwait
sahf
sbb
add
or
movsb
and
aas
mov
mov
and
pop
adc
pop
jb
dec
pop
bound
dec
pushf
das
cmp
out
shrl
stos
fldenv
insl
inc
movsl
in
xchg
jne
ss
pushf
or
pop
ljmp
in
jo
loope
pop
sbbb
push
rolb
push
dec
lds
pop
jbe
aas
insb
mov
cs
andl
popa
mov
or
cli
cmpsl
bnd
mov
sub
and
pop
iret
in
repnz
neg
xor
ds
add
mov
sbb
cmpsl
jns
jge
or
inc
mov
xor
bound
jmp
push
xchg
out
sbb
popf
mov
xchg
lock
loopne
pushf
sbb
pop
dec
nop
ret
pop
imull
push
cmpsb
and
into
xor
shrl
and
xchg
jge
fnstsw
inc
pusha
jle
sub
ret
cld
cmp
fsubrl
out
lret
mov
es
pop
add
fiaddl
push
xchg
movsb
fsub
and
pusha
inc
repz
or
mov
xchg
jmp
leave
dec
dec
add
pop
sbb
out
hlt
pop
aam
dec
xor
cli
inc
sub
ja
orl
cmp
loope
jo
sbb
dec
mov
in
arpl
cmpsb
scas
movsl
stc
ja
xchg
aam
adc
cli
lds
jle
data16
sub
cwtl
xor
xchg
mov
cmp
cmp
pushf
fs
out
movsb
and
sbb
jns
adc
orl
cmc
xor
scas
or
loope
dec
mov
adc
lods
and
inc
push
rcll
sbb
leave
or
xchg
enter
mov
mov
cmp
inc
mov
xchg
je
add
mov
mov
incw
push
sub
sar
cld
cmp
inc
data16
popa
or
xchg
inc
push
dec
cmp
repnz
ds
dec
dec
inc
sub
or
lods
mov
mov
outsb
xor
fsubrl
call
and
in
idivl
lea
aam
jne
cli
add
lods
add
mov
sbb
cwtl
jg
lds
jb
or
pop
aad
aaa
in
fnstenv
dec
mov
push
jb
pop
clc
adc
cmc
push
into
icebp
push
daa
jp
cmp
divb
sbb
das
mov
and
xchg
mov
sahf
fldenv
ja
fisttpl
cld
mov
divl
mov
je
mov
add
loop
mov
and
and
and
push
shlb
test
clc
stc
adc
lret
jle
pop
pop
shll
aas
jl
roll
sbb
sub
jle,pt
leave
push
xor
sbb
cmpsl
adc
cli
adc
das
push
pop
pop
mov
out
cmpb
nop
sbb
icebp
mov
adc
add
dec
in
out
add
xchg
fldcw
cmp
mov
sbb
lods
lea
mov
mov
pop
enter
mov
dec
mov
xor
jne
hlt
aaa
andb
fidivs
mov
push
add
dec
icebp
push
adcb
cmc
and
rcrl
xor
add
or
lahf
mov
aam
out
sub
les
mov
push
dec
aad
out
mov
in
add
sti
jp
testb
pop
mov
adc
jb
xchg
fstl
xor
mov
xor
xlat
cmp
bound
out
jbe
ja
mov
movsb
cmp
iret
test
adc
cmp
add
out
popf
shl
arpl
rcll
notb
popf
fnstenv
mov
shr
cmp
xchg
jecxz
dec
dec
das
mov
mov
mov
dec
dec
ss
loope
decb
cli
jecxz
out
mov
xor
sub
popa
push
inc
shr
or
mov
adcl
test
xor
sub
xchg
jnp
das
adc
clc
test
jnp
es
int3
xor
sub
or
rorb
popa
ss
lock
loope
imul
sbb
push
scas
add
scas
xchg
sub
xorb
and
lret
jge
jg
mov
imull
lods
filds
xchg
lea
out
or
lret
icebp
jle
mov
mov
adc
inc
xor
push
inc
das
inc
xchg
rcl
repz
inc
nop
push
push
mov
mov
cmpsb
push
mov
in
mov
negl
dec
ret
cmp
fisubrs
es
daa
decl
out
jb
and
xor
lods
insl
sbb
xor
adc
sbb
cld
add
mov
mov
sbb
test
jae
push
fcomp
subl
mov
subb
sbb
ljmp
in
mov
pop
pop
popa
ret
push
arpl
cmpsl
dec
test
jle
fmul
lret
pop
sbb
js
adc
dec
or
es
push
dec
in
push
xchg
jle
sbb
mov
pop
cmc
mov
mov
fisubl
enter
xchg
push
in
aaa
mov
out
push
shr
inc
mov
xadd
lret
push
push
aaa
popa
in
xchg
mov
pop
push
rorl
es
push
lods
and
mov
jno
push
outsl
inc
xchg
stos
adc
outsb
jns
aad
mov
xor
outsb
push
outsb
enter
xor
pop
std
movsl
add
lret
jg
add
sub
mov
xchg
ficompl
bound
clc
sub
sbb
add
jb
or
rorl
adc
dec
xorl
adc
clc
iret
loop
xchg
icebp
or
mov
sbb
mov
mov
xchg
js
lret
cs
insl
xor
pop
scas
push
pop
push
out
aaa
stos
pushf
and
dec
adc
push
mov
mov
xor
lds
push
jmp
pop
popf
setne
fcoms
repnz
dec
mov
imul
add
lret
jmp
and
push
movzwl
sub
xlat
add
leave
pop
push
and
add
sbb
movsb
shlb
stc
xor
add
call
adc
pusha
or
imul
gs
add
fucomi
push
and
push
call
jo
dec
imul
xor
push
jae
and
push
pcmpgtb
data16
xchg
jmp
dec
sub
imul
mov
lcall
and
dec
jle
ja
mov
mov
push
cld
hlt
mov
les
imul
fistpl
adc
mov
repz
sti
sub
sub
adc
mov
in
cld
sbb
pop
lods
jg
xlat
in
jecxz
imul
int3
jg
fwait
movsb
lods
les
jge
cmp
into
clc
lods
scas
ja
sub
jno
out
lahf
call
aas
pushf
ret
dec
mov
ret
outsl
cmpsb
sbb
mov
mov
mov
cvttps2pi
inc
notl
in
xchg
sahf
fdivrl
xchg
out
add
ss
push
xor
dec
adc
mov
adc
aas
popa
in
mov
outsb
pop
pop
xor
movsb
pop
je
mov
sub
push
pop
inc
paddq
mov
inc
adc
inc
pushf
fwait
iret
sahf
mov
mov
rolb
and
xor
popa
dec
daa
pop
mov
subb
sbb
mov
lcall
mov
adc
mov
mov
bound
in
push
pop
in
scas
ret
xor
scas
fwait
pop
mov
mov
xlat
jl
ds
inc
into
jae
fnsave
inc
shl
pop
mov
push
push
es
dec
xchg
and
inc
imul
pusha
sarl
cmc
mov
ret
scas
hlt
aam
sbb
and
sbb
sub
test
inc
movb
inc
cmp
stc
jmp
lcall
mov
push
pushf
dec
inc
sbb
arpl
imul
cmp
mov
and
jb
xor
mov
mov
push
movsl
shlb
adc
or
xor
and
xchg
or
test
mov
pop
xchg
and
mov
mov
jle
mov
jns
lds
loop
push
sub
sub
lret
clc
pusha
lahf
or
cmp
clc
fs
pop
jge
dec
movsb
xor
pop
dec
sbb
mov
xor
mull
fadds
inc
out
sbb
mov
mov
and
xchg
add
mov
mov
fistps
inc
scas
mov
pop
fiadds
aam
mov
data16
jl
pop
pushf
push
xchg
or
dec
push
xor
and
jge
inc
mov
and
lret
jne
out
int3
push
iret
cld
sbb
sub
nop
jmp
ja
ret
imul
sbb
and
and
aad
ss
es
dec
and
adc
and
out
xor
sbbb
push
fwait
lcall
inc
sub
push
jnp
xchg
cmp
mov
lock
mov
sbb
mov
inc
mov
or
data16
ja
ret
aam
fwait
sbb
jne
sbb
xor
adc
inc
jbe
call
mov
bt
cmpsl
lods
push
call
es
adc
jne
scas
xchg
lock
ljmp
xchg
stc
push
enter
pop
xchg
shr
iret
arpl
dec
insl
add
push
idiv
xchg
jno
xchg
nop
mov
cmpsb
enter
iret
addr16
sub
cmp
scas
test
sub
mov
adc
push
push
lock
fsubrl
insb
jb
decb
push
lds
dec
dec
clc
movb
add
cmpsl
mov
iret
dec
sub
enter
cmp
mov
sarl
pop
mov
sarl
sti
movsb
or
femms
das
lock
mov
inc
scas
js
push
and
cmp
cmp
js
icebp
rorb
out
dec
jmp
jbe
cmpsb
fildll
movsl
das
lcall
mov
or
pushf
sahf
cmp
inc
je
xchg
outsb
lock
sub
inc
add
std
imul
hlt
cmpsb
pop
mov
mov
jl
out
pop
cmp
repnz
mov
jp
cmp
add
and
sub
inc
pop
lahf
in
jecxz
int
and
fwait
js
test
dec
fs
sub
jle
add
pop
outsl
cmp
insb
mov
mov
scas
mov
or
icebp
xchg
addr16
cmp
add
xchg
aad
mov
mov
pop
jne
int3
fisttpll
cwtl
cli
xchg
mov
adc
in
mov
cmp
js
mov
push
int3
idivl
ret
adc
pop
ss
rcrl
adc
addr16
sbb
lret
push
or
into
lret
iret
or
bound
mov
repz
lcall
jl
lcall
and
pop
jno
loop
repz
mov
aam
jne
push
ja
jb
iret
rorb
fdivrl
xchg
mov
push
push
or
push
popa
aaa
popa
pushw
das
adc
mov
jne
icebp
es
jbe
push
xor
cmp
pop
mov
loopne
jl
add
jns
mov
mov
jbe
xor
jge
ret
cmp
adc
dec
adc
or
sbb
cwtl
jle
xor
imul
subb
jp
roll
add
mov
lods
sbb
divb
ret
cmc
dec
push
fcmovbe
sbb
pop
sub
push
fimull
push
mov
mov
push
xor
icebp
jmp
cmc
cmp
and
sub
movsb
xchg
pushf
fsubrp
or
fbstp
or
xchg
in
mov
ficoms
test
adc
mov
jp
bound
dec
sbb
and
add
les
push
mov
fscale
in
les
cs
aam
lcall
gs
inc
cmp
repz
push
sub
sbb
xor
mov
cmpsl
in
sbb
jp
lea
scas
push
mov
adc
sbbb
jbe
or
adc
insl
test
es
push
dec
shll
or
insb
test
les
adc
sbb
stc
mov
pop
push
insl
pusha
cs
pop
sub
stos
test
aam
adc
add
movsl
insl
or
pop
pop
ss
gs
test
jle
test
into
mov
lret
sub
movsl
sub
ljmp
pop
add
in
ret
and
idiv
fsubr
addr16
push
ljmp
mov
imull
add
out
icebp
ret
int
mov
jmp
adc
adc
inc
inc
not
mov
fnstsw
std
out
test
cli
int
ljmp
push
cltd
test
jecxz
mov
push
mov
push
xor
mov
xlat
daa
push
cmp
orl
movsb
sub
daa
pop
inc
xor
push
das
pop
rol
fcomi
les
mov
mov
int3
inc
pushf
js
btc
cmpsl
sahf
sbb
add
pop
add
and
insl
pop
fnstcw
mov
cwtl
popf
pop
jg
cmpsl
inc
dec
aad
inc
frstor
sbb
mov
fidivl
push
jp
fwait
stos
lret
push
sub
mov
imulb
inc
jno
mov
insb
adc
pushf
loope
je
add
jle
xlat
jmp
stos
adc
xlat
xor
mov
pmaddwd
aad
aad
je
jmp
insb
lock
dec
test
mov
leave
and
mov
mov
lahf
inc
int
sbb
jle
cli
lret
cmp
xchg
cmp
jl
pop
les
sub
shll
les
sahf
test
mov
add
adc
int3
imul
mov
mov
add
es
jno
jne
stos
in
orl
pop
mov
add
add
insl
mov
cmp
pop
popa
es
and
push
jbe
cld
addb
xor
cs
jae
arpl
es
scas
cmpl
int3
ret
xor
mov
imul
sub
dec
dec
xchg
xor
cltd
stos
xchg
mov
sub
rolb
cmp
sbb
repnz
mov
das
or
push
mov
push
pop
mov
pop
xor
movsb
test
mov
dec
sub
scas
or
shrd
ficoml
aam
push
clc
add
ret
xor
das
test
jmp
jle
movsb
dec
pop
adc
mov
repnz
sbb
jecxz
inc
mov
mov
test
xor
mov
pop
ret
into
enter
sub
mov
rolb
stos
scas
ljmp
es
loopne
test
mov
and
insb
xchg
jne
push
mov
gs
adc
insb
xor
sarl
jno
mov
push
push
lcall
or
mov
mov
cmp
sbb
js
arpl
hlt
add
icebp
push
adc
jg
xor
pop
decb
ljmp
dec
pop
push
cwtl
int3
and
aam
xor
mov
fstpl
push
push
xchg
inc
push
mov
cs
mov
testb
jg
xor
adc
xchg
adc
jns
cwtl
cmc
loop
dec
les
sub
hlt
add
jmp
out
lds
jo
or
cmpsb
call
sub
divb
imul
sbb
add
insb
pop
out
popf
shr
or
ds
imul
mov
inc
mov
push
idivb
mov
pusha
in
in
pop
sti
ret
jge
push
mov
pop
ja
mov
outsl
or
jb
fistl
cmpsb
sbb
and
ljmp
pop
xor
shrb
into
mov
pop
jb
lret
imul
ret
mov
sub
add
cmp
inc
add
loope
sbb
dec
mull
outsl
pop
jp
add
adc
ror
jle
roll
jl
insl
pushf
sub
call
xchg
je
out
int3
lret
popf
inc
xor
in
sub
imul
es
dec
sub
mov
out
sbb
xchg
mov
in
sbb
and
or
xor
push
int3
in
and
ret
in
scas
dec
addr16
sbb
dec
movsb
sub
xor
adcl
dec
rcrl
push
inc
movb
jge
mov
push
aam
bt
je
add
movsb
mov
test
rorl
sub
mov
repnz
push
add
cmc
inc
clc
dec
pop
mov
jns
adc
outsl
pop
bound
inc
repnz
arpl
aas
sbb
xchg
dec
daa
dec
dec
imul
cld
fisubrl
or
scas
jbe
aam
fsts
dec
call
cmp
pop
pop
insl
jmp
sbb
aas
fwait
sub
cmpsl
scas
cwtl
mov
test
cmc
pushf
js
mov
add
lock
cmpb
inc
push
inc
push
arpl
pop
sarl
mov
pop
aaa
add
jmp
aaa
loope
es
or
test
adc
cmp
inc
dec
lret
mov
cmp
adc
cmp
pop
push
imul
ss
cs
or
nop
lret
in
pushf
pop
lock
test
in
inc
jo
inc
jb,pn
insl
add
clc
ja
xchg
sar
ret
dec
into
pop
xchg
dec
inc
enter
insl
outsb
pop
lret
cmp
leave
push
push
stos
gs
adc
shll
mov
jae
popf
jecxz
scas
xchg
and
add
jnp
jnp
mov
das
or
mov
scas
add
shrb
jo
fwait
adc
mov
repnz
cltd
add
cwtl
inc
dec
leave
mov
movsl
out
mov
std
cmpsl
popa
arpl
and
into
jnp
cld
fld
scas
mov
mull
outsl
js
inc
xchg
les
inc
movsb
jecxz
jns
mov
int3
pop
cltd
cmpsl
out
xchg
pop
mov
inc
dec
mov
pushf
int
and
xor
push
lds
pop
ljmp
xchg
scas
mov
mov
mov
push
xchg
cltd
add
inc
sbb
aam
xchg
out
mov
shlb
xchg
pop
push
das
sbb
cmp
mov
dec
cmp
ret
lret
mov
xorl
add
inc
cmp
rolb
mov
dec
jecxz
push
in
outsl
add
add
adc
or
mov
dec
aas
jecxz
sahf
inc
pop
cmp
xor
int3
rcrl
push
lahf
leave
push
fwait
jl
dec
scas
andb
aas
pop
lods
adc
push
add
xchg
push
cmp
scas
les
mov
sarb
les
lret
sbb
dec
dec
dec
or
cmp
sub
cs
sbb
inc
inc
and
mov
fidivrs
mov
call
cs
cmp
lea
and
add
sub
out
gs
not
push
lcall
call
pop
not
lret
mov
arpl
adc
sbb
xor
rcll
out
jbe
ret
rolb
or
hlt
sti
movsb
sub
hlt
xchg
sbb
lods
stos
sub
test
jmp
mov
call
pop
jnp
jle
push
cmp
arpl
jb
lock
fsqrt
push
cmp
aad
sub
addr16
inc
push
cmpsb
scas
ja
aaa
inc
sub
or
mov
jecxz
mov
rcl
sarl
aas
and
lds
fimuls
es
stos
rolb
daa
inc
mov
adc
jl
mul
and
movsl
arpl
add
rcrl
and
and
push
out
add
test
jl
cmp
jmp
pop
orb
stos
repz
mov
cmc
sub
dec
push
loopne
movaps
es
sub
sub
les
into
roll
fucomi
test
jnp
add
dec
out
insb
xor
test
mov
jo
adc
shl
bnd
fldenv
call
sub
pop
mov
lods
lods
sub
aas
in
jns
aad
test
clc
ja
into
add
gs
xchg
call
sbb
dec
sub
ljmp
imul
jns
xor
imul
bound
fiadds
sbb
adc
je
jno
popf
fidivrs
push
push
test
lcall
imul
mov
mov
mov
pop
dec
inc
mov
test
aad
inc
mov
sbb
dec
jb
mov
std
add
push
mov
cmpsl
mov
mov
push
push
add
icebp
mov
and
sbb
out
jmp
cmp
and
sub
fadds
mov
korb
pop
add
mov
sti
fmuls
dec
or
push
cmp
mov
fwait
mov
das
mov
and
mov
and
sub
sub
mov
push
lods
mov
sahf
add
popa
arpl
jl
sub
jle
cmp
out
insl
out
add
insl
imul
pop
or
mov
pushf
ds
iret
mov
mov
push
sub
cmpsl
bound
shlb
loop
lock
sbb
fwait
mov
bound
adc
cmp
sub
decb
outsb
mov
les
inc
enter
test
int3
sub
dec
or
rorb
dec
in
call
lods
arpl
mov
add
ljmp
nop
in
rcrl
and
imul
ljmp
or
mov
push
orl
xlat
pop
dec
add
jle
pop
sbbl
test
jb
push
call
or
mov
xchg
pop
pop
call
sub
xchg
fcomps
out
lret
or
cmp
dec
mov
dec
mov
mov
sbb
ja
mov
cmp
das
into
jge
ljmp
cmp
ss
test
ret
dec
jno
iret
cmp
leave
and
or
mov
pop
insl
mov
hlt
xchg
cmpsl
push
fstl
sti
or
or
test
xchg
loop
add
sti
out
mov
dec
push
mov
fwait
or
lcall
jl
stos
inc
push
sarb
jle
and
cmp
leave
jg
sub
in
jl
cmp
dec
jg
lds
add
cld
inc
jo
lock
pop
or
adcb
repnz
push
icebp
push
xor
pop
lcall
push
inc
mov
out
sbb
aaa
ficoml
shr
test
add
adc
sub
test
jno
xorl
je
movsl
pop
dec
jg
call
push
mov
sbb
fmull
pushf
xor
xorb
xor
and
lahf
cvtps2pi
dec
pop
pop
xor
dec
push
sub
clc
arpl
iret
in
mov
mov
dec
pushf
int3
xor
lods
mov
sub
outsl
cmp
setg
or
cmp
inc
sbb
jb
jo
cmp
ficoms
cmpsl
xchg
push
sub
rorl
jo
pop
or
sti
ja
jno
dec
out
or
dec
sahf
insb
lahf
xor
fsubrl
sbb
push
mull
test
xchg
or
into
mov
pop
xor
sbb
iret
push
iret
scas
cli
mov
inc
push
out
dec
xor
je
insl
pushf
sub
aas
aam
sbb
xor
pop
insl
xor
xlat
push
mov
std
push
dec
xor
push
aam
and
jp
cmp
pushf
lea
rclb
dec
mov
cmp
lods
pop
lock
mov
shlb
xor
aas
jbe
shll
je
push
xchg
mov
es
mov
and
mov
jp
mov
pop
mov
pop
add
in
ja
mov
xor
mov
aas
cld
popf
cmp
jnp
or
out
loop
pmuludq
fs
mov
scas
xor
add
je
call
and
mov
dec
stos
inc
lods
inc
cs
decb
adc
arpl
cmp
push
leave
sarb
adc
mov
lret
lods
xlat
test
adc
dec
rep
lret
shl
imull
insb
xor
xchg
mov
fisubrs
inc
loopne
inc
pop
dec
repnz
push
das
movsl
push
push
cli
mov
xchg
mov
mov
mov
fistps
loope
push
test
pop
je
fdivrs
push
iret
mov
subl
test
and
jnp
pusha
mov
movsb
shrb
lahf
cli
pop
dec
pop
test
lret
push
push
xor
into
lds
mov
mov
cmp
mov
rcrl
clc
pop
pop
or
cld
adc
jmp
xlat
stc
xchg
mov
bswap
lret
mov
fdivrl
add
jne
cmp
repnz
push
sbb
in
push
jo
mov
or
insl
cmc
jecxz
jp
xchg
lea
in
inc
orl
or
xchg
sbb
add
mov
pop
testl
xchg
xchg
or
imul
mov
sub
movsl
push
popf
in
and
or
movsl
ret
cs
subb
jae
or
sub
fmulp
addr16
pop
clc
ljmp
xchg
fucomip
push
cs
cmp
xor
lock
add
loope
jg
mov
xchg
mov
mov
shll
imulb
cmp
dec
cmc
xor
in
jns
pop
sub
repz
sti
pmovmskb
pusha
push
bound
mov
adc
enter
gs
mov
jb
xchg
add
and
adc
repnz
divl
xchg
xor
cmp
inc
add
test
pop
mov
and
mov
mov
into
outsl
xor
mov
call
andb
adc
xchg
stos
jmp
xor
enter
jo
cmpb
lcall
rol
jmp
add
pop
mov
loopne
xchg
out
pusha
xchg
repz
or
jae
adc
fadds
push
jl
enter
mov
enter
ret
testb
xchg
inc
cltd
add
idiv
sub
nop
ss
lock
mov
xor
add
movhlps
cmp
imul
mov
cwtl
mov
lret
adc
ss
popa
dec
cli
cli
out
out
lods
jbe
fstl
pusha
add
jg
lock
add
sbb
out
dec
lret
in
sahf
lret
xor
inc
push
pop
dec
stc
or
xchg
xorb
push
iret
imull
aad
and
dec
add
xlat
xor
lahf
fists
push
dec
shrl
dec
jns
sbb
in
mov
cli
in
loop
dec
pop
mov
inc
jns
push
nop
les
mov
lea
in
push
mov
fucomi
scas
push
pop
and
hlt
jo
fadd
dec
loop
jmp
les
andb
ret
jns
insl
sbb
mov
mov
xlat
add
scas
sbb
sub
sub
shr
push
cmp
jns
gs
jae
and
lds
adc
repz
push
je
out
xchg
fadds
inc
cli
fs
cld
jl
arpl
mov
ljmp
test
push
adc
sbb
mov
sti
xchg
lods
out
inc
repz
sub
jbe
jp
push
rcl
in
xchg
mov
jmp
xor
cmp
xchg
mov
jne
inc
lods
jle
dec
js
mov
and
ret
or
rclb
mov
js
mov
or
ret
addr16
ljmp
ds
mov
stc
faddl
inc
mov
dec
dec
cli
mov
xor
lahf
in
pushf
mov
sbb
shll
fsubrl
gs
cmp
jmp
pop
dec
and
arpl
pushf
mov
adc
das
push
xor
mov
idivb
mov
inc
ja
imul
stos
movsl
roll
std
pop
repz
sub
xor
pusha
adc
push
xchg
mov
sbb
dec
mov
jno
in
inc
fadds
and
sahf
loope
jno,pn
stos
and
mov
sti
fcomps
cld
xchg
std
pop
jle
pushf
jbe,pt
and
add
out
rorl
or
insl
dec
ret
or
jb
mov
inc
mov
adc
fstpl
xor
dec
xchg
mov
and
adc
jnp
icebp
mov
cmc
into
nop
jecxz
stc
mov
inc
arpl
stos
stc
xor
repz
out
ud2
sbb
sub
mov
sbb
inc
jnp
insb
push
mov
cmpsl
xchg
test
push
cmp
subw
dec
bound
adc
data16
idivb
mov
jle
inc
cmp
mov
test
imul
jg
jge
nop
dec
inc
mov
shrb
loope
daa
icebp
or
pusha
loopne
jo
pop
xchg
loopne
imul
cmc
mov
lods
sub
jg
outsl
in
xchg
push
fmuls
push
and
xor
pop
sbb
jmp
xor
add
dec
sbbb
sub
out
lods
and
mov
imul
cmp
scas
push
pop
and
xor
jbe
pushf
push
xor
sti
cmp
push
mov
cs
mov
xor
icebp
addb
dec
xlat
insl
push
leave
stos
sbb
into
fadds
aaa
mov
sbb
pop
jg
sub
mov
cmp
pushf
push
dec
jb
into
movsb
roll
notb
xchg
jo
scas
push
idiv
std
js
lret
pop
cmpsb
pop
mov
bound
lods
dec
mov
adc
dec
mov
adc
and
mov
add
sub
nop
lds
xchg
xlat
andl
lret
outsl
pop
loop
lock
and
push
sub
les
data16
hlt
pusha
cmp
pop
add
adc
and
xchg
cmp
cli
adc
mov
xor
mov
gs
hlt
lret
fstpt
xor
adc
out
mov
out
insl
scas
inc
dec
je
rcll
push
and
cmp
jl
xor
cld
andb
cmpsb
xor
jae
cmovnp
mov
icebp
push
sub
and
rcrb
iret
cwtl
mov
bound
cmp
hlt
call
imul
mov
fs
lds
fdivrl
mov
sarl
test
clc
jns
inc
cmp
add
ret
add
jnp
pusha
adc
jnp
push
adc
sbb
adc
adc
mov
push
shrb
mov
dec
add
mov
xchg
outsb
add
fisttps
mov
cmpsl
xchg
jl
movsb
ret
or
adc
inc
imul
and
add
sbb
inc
testl
dec
stc
pop
les
xchg
pop
sub
inc
leave
lds
add
out
mov
pushl
cmpsb
cmp
loope
mov
push
xor
cmp
shr
pop
hlt
xlat
lret
fcomp
jg
movsl
jnp
stos
aaa
cli
out
mov
pop
adc
pop
xchg
adc
or
xor
sub
jae
notb
rclb
lahf
dec
loopne
jmp
pop
push
test
inc
lret
fwait
popf
js
mov
mov
lret
fs
arpl
stc
lret
mov
loop
fnstcw
out
in
ret
add
cmp
ret
fdivrl
xor
xchg
psllw
sub
mov
in
das
add
stos
das
jge
push
pop
shrb
hlt
int3
addr16
adc
data16
mov
push
jge
xchg
inc
push
push
jg
or
scas
xor
lret
fs
loope
cld
dec
fisubrl
xchg
pop
ds
lock
inc
and
jge
nop
cld
jle
xor
pop
mov
jle
cmp
fisttps
and
fs
cmp
inc
into
jnp
inc
inc
repnz
sbb
xor
mov
mov
fcomi
dec
xchg
shrl
xchg
xchg
push
or
lahf
aas
cmpsb
jl
pusha
sti
pop
jns
mov
mov
sbb
ret
rcrl
cs
jmp
mov
or
out
push
ret
inc
xchg
addr16
lret
jno
xorl
insb
inc
aad
push
aam
imul
push
jb
ss
mov
rorl
xchg
adc
fwait
push
clc
ret
loopne
mov
xchg
push
popa
loope
and
mov
mov
mov
pop
dec
mov
fsub
jl
das
movsb
push
out
scas
mov
fdivl
push
push
lock
into
mov
popf
loope
test
push
sahf
mov
shlb
lret
ljmp
int3
cmp
cmp
ficompl
ss
roll
xchg
jl
xchg
xchg
fbld
and
bound
in
xchg
out
xor
test
pop
lret
movsl
xor
leave
in
sub
out
jno
rol
hlt
aas
xor
stos
cmpsl
add
dec
dec
jae
adc
xchg
cmp
addl
lret
xor
popf
adc
sbb
in
rcrl
out
inc
lahf
jl
mov
sbb
adc
sub
mov
lahf
out
imull
sub
xchg
inc
xor
mov
add
mov
int
hlt
add
shlb
mov
fbstp
js
in
das
popa
popa
je
lret
mov
sbb
adc
adc
movsl
sub
aad
imul
mov
fidivrl
out
inc
dec
ss
push
xor
push
or
mov
xor
out
inc
fs
cltd
sub
mov
mov
push
mov
sbb
adc
in
loopne
fwait
mulb
dec
movsb
mov
in
jp
inc
aam
inc
subb
dec
mov
pop
xchg
and
mov
rolb
adc
and
idivl
pop
dec
mov
scas
imul
into
clc
sub
mov
cmpsl
lret
mov
lds
push
mov
fdivr
mov
icebp
xchg
fcoms
inc
pop
cwtl
inc
cmovs
mov
outsl
pop
pop
out
cltd
test
sbb
inc
aad
inc
mov
addr16
mov
mov
cmc
mov
into
clc
clc
pop
ljmp
add
adc
pop
mov
sbb
push
int
xchg
mov
icebp
cs
or
xor
stos
popa
cmp
push
push
int3
mov
add
aad
adc
inc
jns
ret
out
movsb
sbbl
rclb
cmp
add
cmp
xor
movsl
sbb
and
push
sub
jae
fildll
jle
repnz
mov
aad
aam
lock
imul
xlat
mov
aad
dec
lea
dec
fisubs
cli
jnp
adc
stc
sbb
jecxz
add
jo
fldcw
test
in
aad
je
stos
int3
ja
inc
stc
lds
shl
jb
sbb
or
ret
fdiv
mov
ja
lahf
jecxz
dec
mov
clc
mov
pop
xchg
jbe
xchg
dec
out
hlt
mov
lcall
adc
mov
ret
add
mov
aas
mov
push
xchg
dec
cmpsl
or
adc
or
mov
in
addb
push
rorb
add
or
push
addr16
mov
stc
sarl
dec
call
test
bound
cmpsl
jge
outsl
pop
adc
arpl
sbb
sbb
mov
pop
cld
test
push
ficoms
je
pop
fldt
jne
pop
iret
push
in
repz
push
xor
out
xlat
pusha
lods
xchg
push
mov
syscall
nop
in
sbb
adc
fisubs
sarb
pusha
test
fst
ljmp
sbb
mov
pop
adc
jne
pop
sub
dec
inc
sub
or
inc
fadds
int3
mov
xor
push
inc
jg
lcall
mov
adc
cmp
movsl
cmp
ret
push
sub
sub
out
cmp
adc
adc
int3
jecxz
dec
inc
push
sbb
rorl
inc
sbb
xor
inc
lea
scas
lcall
mov
clc
xchg
cwtl
push
adc
addl
pop
je
xchg
inc
lods
mov
fildll
loop
cltd
out
push
in
insb
pop
popf
ja
mov
cwtl
fs
out
lock
adc
test
mov
jp
mov
out
enter
iret
dec
push
or
pushf
adc
fdivl
mov
adc
lret
xchg
adc
push
fdivrs
jge
jbe
inc
mov
dec
incb
cwtl
adc
pop
adc
mov
pop
dec
mov
mov
cwtl
je
jo
jg
push
mov
jo
adc
pop
scas
adc
jae
inc
jp
rcll
loop
mov
mov
in
xchg
mov
adc
je
jle
jo
ds
fs
popa
add
push
cmp
sbb
dec
repz
xlat
dec
push
jne
push
jmp
push
add
pop
mov
test
mov
xabort
jle
mov
jno
jmp
push
cmp
mov
xor
outsb
pop
lret
add
dec
lret
insb
mov
pop
and
sarl
xor
arpl
lock
repz
jecxz
fsubrl
mov
mov
iret
sub
les
shl
stos
sub
jo
and
or
test
push
sub
imul
dec
mov
pushf
mov
jecxz
adc
aad
lock
dec
stos
into
pop
negb
lods
stos
xchg
jge
loopne
push
pop
mov
jbe
mov
testl
inc
adc
cwtl
das
mov
xchg
push
sbb
jecxz
fisubrl
adc
sbbb
jae
mov
mov
or
xchg
test
mov
enter
les
and
in
mov
mov
jmp
push
fwait
loopne
or
mov
mov
lock
sub
sub
fs
push
fldenv
pop
push
mov
and
push
jecxz
outsl
adc
call
stos
pop
xor
push
push
pop
push
outsb
and
hlt
inc
or
ja
in
fistps
mov
adc
fisttpl
repz
stos
cmpsb
test
cmpsb
xor
mov
imul
out
mov
movsl
dec
testb
jnp
xchg
or
xchg
fists
push
in
out
pop
ror
cld
popa
shll
jge
push
jmp
nop
adc
xchg
push
fbld
push
int
mov
sahf
test
jmp
xlat
les
lcall
stos
adc
xlat
push
ds
xlat
pop
sub
popa
ret
fnstenv
outsb
dec
pop
idivb
popf
xorb
test
test
push
stos
inc
outsb
dec
out
arpl
sub
xor
or
js
jmp
xor
mov
push
ret
xchg
xchg
ljmp
andl
or
arpl
sbb
inc
mov
fwait
shrb
outsl
cmc
mov
push
sub
mov
cmpsb
sarl
bound
xor
mov
sub
popf
jp
push
out
stos
loop
repnz
sbb
fmulp
lds
ret
jmp
imul
and
push
addr16
fldenv
pop
sti
fistpl
dec
sub
and
lret
dec
aas
jae
pushl
pop
push
adc
out
daa
push
hlt
sbb
or
testb
and
cmpb
pushf
lods
clc
pop
xlat
add
sbb
loop
in
test
clc
lea
sbb
lea
mov
test
jp
adc
fisttpl
scas
xchg
pop
adc
test
sbb
and
ljmp
leave
and
cs
adc
lock
and
mov
clc
ljmp
mov
and
cmp
fdiv
stos
sbbb
adc
mov
and
xlat
fisubl
jg
popl
stos
sti
ljmp
pop
loope
jns
mov
in
pushf
sub
cmc
mov
repz
adc
sti
xor
jmp
or
les
lock
pushf
les
insb
loop
jg
pop
push
lcall
lret
mov
lret
fildl
test
mov
xor
mov
shl
ret
dec
sbb
and
xlat
je
movsb
orl
jno
and
inc
cld
pop
div
add
xchg
out
lods
sarl
cmp
ds
test
mov
dec
insl
inc
lcall
mov
movsb
stos
mov
add
mulb
sub
fisttps
adcl
es
lock
mov
xchg
lods
adcb
push
outsl
cmpsb
push
fdivrl
dec
data16
and
sbb
dec
xor
dec
cmp
int3
lods
adc
shrl
sahf
mov
fsub
dec
inc
rcrb
in
jge
in
out
adc
push
mov
and
jo
outsb
push
mov
out
mov
or
jge
in
pop
fwait
mov
ret
sbb
cmp
cmpsl
movsl
sbb
bound
pop
decb
mov
sub
jmp
pop
mov
mov
sarb
rolb
cmp
cld
cmc
in
popf
cmpsb
inc
or
adc
clc
inc
lods
scas
ret
push
mov
ds
ds
xchg
popa
mov
fidivl
in
in
jecxz
sarl
dec
mov
cmp
pop
jne
into
or
cmpsl
mov
pop
pop
dec
stc
movsb
and
dec
clc
ljmp
lea
aaa
ss
out
or
mov
add
shll
fstp
xchg
cmpsb
imul
sarb
in
cwtl
push
fs
imul
int3
push
je
out
icebp
in
sbb
lods
inc
and
xlat
and
jnp
imul
clc
push
and
pop
sbb
mov
xchg
mov
ss
adc
xor
sub
dec
sub
sub
out
enter
add
test
dec
out
inc
mov
adc
movsl
dec
xchg
andb
scas
es
push
mov
push
bound
sbb
pop
movsl
shll
lcall
sub
xchg
jecxz
je
mov
mov
adc
enter
mov
push
sbb
sub
lahf
mov
fwait
int3
jne
inc
ljmp
imul
or
leave
stos
adc
pop
pop
xchg
mov
cmpsl
stc
lods
shrb
sub
jbe
nop
mov
aaa
fdivr
sbb
out
jne
cmp
imul
pop
pop
dec
xchg
es
pop
mov
cmc
mov
inc
lods
std
jno
addr16
dec
shlb
xchg
js
imul
mov
jae
or
pop
std
or
imul
mov
and
jnp
aaa
sahf
lahf
cld
rcr
mov
into
adc
mov
jmp
mov
loopne
and
inc
in
inc
pop
pop
push
mov
adc
xlat
cmp
xchg
imul
stc
and
mov
pop
cmp
int3
sti
aas
pop
in
gs
add
sbb
jl
xchg
sbbb
and
sub
cmp
stos
jmp
mov
cmc
cmp
enter
movsl
cmpsl
call
repnz
rclb
loope
jecxz
pop
jmp
sbb
dec
rorl
gs
fdivrs
pop
ljmp
lahf
inc
test
and
decl
mov
test
add
clc
outsl
shll
push
in
inc
dec
xchg
sahf
mov
adcl
cmc
fiaddl
mov
push
repz
and
mov
insb
sub
xor
sbb
in
sbb
ds
popa
test
mov
stos
sarl
in
js
sub
scas
mov
jbe
aas
ret
sbb
and
mov
hlt
add
loope
int
sub
pop
out
push
aas
sbb
fwait
fwait
enter
sarb
stos
add
mov
push
hlt
loopw
xchg
daa
cmp
or
fimull
mov
dec
xchg
and
or
repnz
mov
ljmp
and
je
cmpsl
add
mov
push
gs
xor
mov
cmp
inc
iret
sbb
stos
aad
mov
es
lcall
sub
cmpsb
in
jmp
sub
add
out
outsl
mov
mov
cs
jo
arpl
enter
les
int
pop
shl
push
test
dec
or
jle
sti
mov
mov
inc
shlb
call
and
lds
push
cld
enter
hlt
arpl
shrb
js
lea
push
hlt
stos
jp
imul
and
xchg
jb
ret
popa
mov
pop
shll
rcrl
jl
sar
hlt
loope
cmp
push
pushf
dec
pushf
push
cmp
stos
cmp
aaa
insl
cmp
xor
adc
fisubrl
cmc
into
pop
adc
js
mov
xchg
loopne
mulb
out
cmp
in
xor
sub
insl
mov
bound
js
scas
addr16
push
mov
stos
mov
mov
les
sbb
cmp
xchg
mov
clc
scas
dec
mov
out
push
cmp
fidivl
and
jle
out
push
mov
add
popa
test
js
ja
xchg
jnp
mov
cltd
aas
or
addr16
mov
cld
mov
pop
mov
orb
or
fsubl
mov
repnz
sbb
sahf
repnz
xchg
scas
pmaxsw
jno
repnz
dec
lahf
cmp
sub
jo
add
sbb
out
mov
lods
das
fwait
xchg
inc
cmc
add
addr16
repnz
sbbb
gs
mov
ficoms
mov
sub
out
pop
cmp
out
mov
icebp
xlat
jbe
xorb
push
stc
cmp
push
sub
faddl
sbb
inc
mov
daa
sub
testb
ret
xor
cld
js
jg
sbb
push
fdivrl
add
push
enter
sbb
ret
out
xor
dec
test
cmpsl
xor
movsb
mov
cmpsb
jl
sbb
xchg
hlt
and
decl
out
rolb
mov
mov
int
call
adc
sub
popf
les
out
bound
xor
test
mov
in
mov
lods
push
fdivl
dec
and
fs
ds
mov
inc
ret
or
cli
into
mov
movsb
mov
nop
mov
mov
scas
push
jecxz
lahf
pop
mov
pop
mov
xor
push
gs
lea
xchg
loope
mov
sub
xor
int3
and
xchg
jg
mov
int
nop
inc
sahf
arpl
test
pop
clc
jecxz
lds
test
xor
ljmp
xlat
imul
scas
cmpsl
sti
int
jne
nop
adc
sbb
out
aam
jg
test
cmp
jge
mov
js
pop
jl
xchg
sarb
scas
inc
and
cwtl
sub
stc
mov
xchg
cmp
cli
mov
orl
data16
in
jbe
or
add
pop
inc
mov
mov
sbb
pop
fucomi
push
push
push
push
xor
lods
gs
inc
cmpsb
rcll
pop
inc
mov
pop
hlt
cmpsl
xchg
and
movsb
cmp
loope
mov
mov
bound
push
sbb
mov
mov
cwtl
out
jmp
push
jae
add
add
flds
jmp
xchg
addr16
sbb
gs
rcr
jbe
pslld
mov
adc
jg
xor
aam
lret
jb
popa
lahf
adc
repnz
mov
imul
cmpsl
dec
cmp
fwait
stc
add
outsl
cmp
out
in
sub
andb
icebp
mov
mov
shll
xchg
fdivs
or
sub
adc
jne
adc
pop
inc
mov
dec
push
roll
das
jno
mov
iret
sub
dec
mov
lcall
fildll
imul
daa
lcall
inc
scas
scas
dec
imul
cmc
xlat
push
repnz
sub
out
std
adc
sbb
ret
xchg
jne
pop
push
inc
xchg
xchg
pop
outsb
inc
or
test
pop
lea
sahf
inc
mov
or
push
out
mov
adc
sbb
imulb
or
push
mov
xor
push
jae
mov
sub
mov
hlt
inc
mov
pop
lcall
dec
out
out
lods
daa
and
jb
cmpl
ljmp
adc
aam
inc
and
faddl
mov
adc
mov
lds
mov
pushf
clc
sbb
stos
les
pop
jo
cmp
sbb
stc
adcl
xor
ljmp
enter
sub
rcrl
int
xor
and
cmp
idiv
mov
out
sub
rorb
dec
or
stos
gs
pop
aaa
js
stc
adc
data16
orl
out
movlps
mov
jmp
and
dec
sbb
or
inc
mov
mov
out
or
data16
xor
add
mov
sbb
fistl
cwtl
jle
lea
lods
clc
lock
push
pop
jge
in
mov
sarl
sbb
pop
decl
rcll
dec
push
mov
inc
xor
sahf
jle
mov
negl
xor
outsb
pop
jecxz
sbb
orb
mov
popf
xchg
inc
sahf
mov
xor
outsl
mov
sbb
rcll
or
sbbb
cmp
lea
fwait
inc
push
xchg
push
jl
shl
lock
xor
out
mov
push
xor
insb
jmp
push
inc
xor
imul
jae
je
inc
sbb
sub
mov
test
fistps
cmp
mov
cmp
xchg
jne
cmpsb
mov
mov
jmp
xor
mov
push
dec
ret
leave
xor
sbb
leave
shl
scas
or
sub
scas
icebp
test
jo
aad
add
loope
subb
sub
inc
daa
dec
or
or
pop
movsb
in
leave
xlat
ficomps
cmp
scas
call
mov
pushf
ljmp
fdivrp
stc
sti
inc
fs
rolb
xchg
test
das
aas
push
test
pop
popf
adc
clc
push
mov
mov
cld
lock
outsb
das
xchg
out
sahf
cmp
enter
jp
stc
scas
mov
xor
clc
xchg
lods
pop
pop
pop
jae
dec
inc
lret
ret
dec
fwait
out
inc
adc
pop
xchg
in
ss
sbb
dec
mov
sbb
lcall
repnz
stos
scas
add
jp
inc
pop
and
aam
lahf
fcmovnb
add
add
xchg
lret
cltd
in
pop
movsb
out
enter
cmp
les
lods
sahf
pop
dec
mov
es
outsb
mov
psllq
cmpsb
repz
push
cmpps
ret
sbb
add
dec
hlt
rcr
mov
notl
pop
push
std
mov
mov
mov
stos
pop
mov
dec
icebp
xchg
imul
add
ss
push
mov
pop
rcrb
enter
sbb
das
mov
jnp
out
cmp
cmp
mov
sub
mov
mov
outsl
scas
cmp
sahf
push
data16
out
ljmp
jbe
cmc
push
sbbb
popf
imul
test
imul
stc
in
dec
cmp
loope
mov
lock
cmp
xchg
fcom
nop
inc
mov
cmpsb
xor
ret
scas
mov
bswap
jae
aam
mov
cmpsb
xor
fdivrl
mov
decl
mov
inc
sub
add
mov
push
sub
xchg
jnp
sub
arpl
dec
xor
and
insl
adc
and
movsb
jmp
aas
xlat
dec
jae
cltd
rcrl
xor
jo
dec
gs
inc
test
cld
test
push
sti
ljmp
pop
cmp
insb
int
fidivrl
push
xor
and
mov
ret
mov
mov
cmpsl
inc
test
in
cmc
inc
push
jb
fwait
rclb
inc
xor
fcmovnbe
rorb
shll
lds
inc
lret
push
repnz
out
xor
mov
and
pop
repnz
stos
scas
push
hlt
fstps
xor
inc
mov
mov
dec
cld
orb
push
iret
pop
adc
cmpsl
ds
repnz
fcomps
xor
inc
mov
and
ljmp
mov
pushf
sub
mov
mov
out
inc
cmp
lods
jo
jmp
add
add
mov
push
push
pop
push
popa
cli
push
push
adc
adc
outsl
sub
out
in
xor
mov
aad
test
adc
mov
pop
inc
repz
pop
clc
inc
and
mov
mov
fildl
lods
and
repz
test
mov
push
out
xchg
xchg
nop
fs
jo
es
inc
pop
add
rcrb
stos
adc
adc
setl
mov
add
sbb
push
imul
imul
repnz
sbb
jge
xor
mov
scas
jecxz
popa
lock
push
idivb
adc
adc
clc
jns
sbb
repnz
jecxz
add
pop
adc
sbbl
xchg
sbb
ss
cmp
mov
ja
jp
xchg
fisubs
repnz
test
aam
dec
or
mov
bound
mov
ja
sub
mov
adc
in
lea
inc
mov
ds
fidivl
push
test
out
nop
test
cs
push
out
push
lea
out
outsl
sbb
sbb
adc
into
sti
add
push
cltd
mov
js
lcall
cmp
inc
insl
int
lahf
push
adc
imul
popa
mov
sbb
fnsave
jne
jns
jbe
imul
sti
push
sub
push
sarb
and
xor
sbb
xchg
xchg
es
sbb
cmp
cmc
xor
aaa
lock
jle
movsb
fstpt
pop
fwait
adc
jb
test
jnp
adc
ds
xchg
sbb
mov
hlt
cld
popf
not
bound
call
das
movsl
and
in
popf
lea
jge
mov
add
ds
jmp
popa
sahf
sbb
jb
jg
push
sbb
out
pusha
adc
pop
mov
inc
ret
xchg
xchg
add
iret
dec
jge
in
testb
mov
jmp
outsb
xor
int3
pop
test
lcall
pop
aam
xor
js
adc
pop
testl
and
mov
nop
scas
push
lret
sbb
pop
mov
iret
jp
add
inc
cmpsl
shr
pop
outsb
and
dec
jge
jl
loope
sti
jno
cwtl
leave
xor
inc
in
int
mov
mov
xor
cmp
cmpsl
pop
jmp
xchg
pop
insl
jae
movsb
sbb
std
aaa
inc
mov
js
mov
fisttpll
pop
sti
repz
jne
or
stc
add
push
mov
pop
mov
mov
push
scas
cmpsb
movsl
mov
xchg
jg
ret
das
cmpsl
adc
test
jl
fisubrl
mov
test
jecxz
jmp
pop
into
lods
pop
inc
aad
xor
ret
test
icebp
cmp
push
xchg
mov
dec
push
and
or
mov
inc
xchg
fdivrs
insl
int3
out
sbb
dec
rcrl
mov
negb
inc
jns
loop
mov
add
mov
sbb
mov
jmp
jae
adc
adc
sub
pop
push
das
xor
scas
ret
mov
add
pop
dec
sub
addr16
cmpsb
mov
mov
pop
shr
mov
xchg
and
adc
push
enter
push
rclb
mov
pop
je
xor
jno
imul
bound
imul
fbstp
out
xchg
popa
xchg
aad
and
add
push
cli
jmp
cmp
loopne
push
into
sahf
mov
in
ret
ret
lods
test
or
mov
call
adc
flds
cmpsb
sub
push
sub
pop
dec
out
insb
stc
pop
mov
pop
lock
mov
mov
cmpsl
cwtl
inc
push
ficoms
inc
ret
andb
scas
dec
aam
sub
loopne
cld
cmp
sub
push
fmuls
ret
dec
cs
popa
and
loopne
sahf
aad
dec
out
test
inc
xor
test
cwtl
insb
sub
jbe
inc
cwtl
cmpsb
lahf
add
push
xchg
ds
lcall
imul
cmp
leave
test
int3
andl
cmp
roll
insb
test
test
cli
xor
dec
aad
mov
ss
aad
loopne
push
idiv
fiadds
pop
push
dec
notl
cltd
xchg
jecxz
loope
mov
rorb
push
inc
iret
inc
jp
insl
test
mov
scas
clc
imul
mov
jne
xorb
scas
bound
das
lret
mov
shlb
cmp
adc
insb
popf
cmpsl
push
cld
mov
add
pop
adc
pop
pop
adc
repnz
dec
mov
and
pusha
dec
xor
cmp
scas
movsb
xor
inc
mov
addr16
stos
jl
xor
sbb
cli
cmp
add
ret
loopne
mov
std
lret
and
ss
pop
mov
fistpl
sub
xchg
push
xchg
xchg
faddl
mov
int3
sbb
dec
test
dec
lcall
cs
aam
cltd
mov
sbb
loop
aam
ret
jecxz
sar
movq
sub
and
movsl
push
int
call
adc
das
aas
bound
cwtl
ret
pop
ja
dec
in
test
cmp
mov
inc
cmp
xchg
mov
jns
xchg
repnz
or
push
xor
pop
push
mov
pop
jg
pop
aas
mul
jle
rcl
mov
push
jne
pop
cli
cwtl
xor
hlt
shlb
pop
inc
ret
adc
icebp
jg
mov
ret
test
sbb
adcl
sahf
dec
popa
xchg
lret
hlt
nop
jge
sub
sbb
testl
add
in
test
add
in
insb
idivl
in
mov
leave
shl
adc
lcall
mov
ljmp
lret
add
xchg
xlat
les
mov
ret
sbbl
pusha
repnz
dec
or
mov
rclb
loope
mov
adc
fdivrl
xor
rcll
jbe
lahf
enter
sbb
test
rcll
cmc
lds
ret
jle
adc
adc
cld
jb
inc
int
mov
sub
add
lret
and
mov
aas
inc
mov
jge
cmp
arpl
cmp
test
xchg
mov
cmc
packssdw
insb
cmp
xchg
adc
xchg
in
mov
jecxz
push
jb
xchg
add
mov
dec
mov
jl
adc
mov
xor
loop
test
gs
mov
xchg
ja
jo
stos
pop
mov
and
in
testb
and
lods
popa
stos
mov
jmp
jae
mov
lods
loope
fmul
popa
xchg
jae
xchg
mov
nop
mov
imull
in
cltd
daa
test
inc
or
cli
test
movsb
adc
shl
dec
frstor
sub
and
and
icebp
in
ljmp
or
or
adc
in
ret
sahf
fisttps
mov
js
int
ret
dec
scas
int
dec
aam
lock
das
fdivrs
or
nop
dec
jbe
in
xchg
rorl
cmp
jnp
out
mov
fstp
xchg
pop
add
or
je
sbbb
adc
call
sbbb
das
cli
rorl
xlat
das
xor
or
mov
fs
fs
dec
pop
test
lea
out
pop
pusha
stc
scas
ret
adc
mov
mov
arpl
xor
into
and
push
out
fcomi
fcmovnbe
pop
mov
jecxz
mov
jmp
xchg
or
mov
ret
and
xchg
outsb
add
daa
sub
loopne
xor
es
cmpsl
cmpsb
lcall
stos
push
mov
cmp
clc
cmp
out
jb
popf
mov
mov
sub
scas
pop
and
test
nop
jge
push
mov
cmpsl
add
cs
dec
add
sahf
fsts
mov
mov
fsqrt
push
push
or
addl
mov
ja
adc
cmc
mov
in
jae
div
test
mov
fst
jle
fildll
sbb
sbb
push
xchg
out
jo
orb
stos
in
cmc
xor
icebp
out
sbb
sub
sub
push
lret
stos
pop
fadds
dec
dec
mov
dec
mov
loopne
clc
iret
xchg
and
jno
daa
inc
js
inc
or
xchg
sbb
test
mov
pop
xor
mov
gs
aam
fnsave
pop
outsb
jnp
rcr
cmp
jg
pop
and
or
movsl
mov
sub
jmp
outsl
jp
pop
dec
rcrl
jns
pop
push
dec
repz
jmp
inc
xor
rorb
call
test
cmp
lods
adc
mov
mov
test
idivl
jl
push
insl
fsts
rcrl
ljmp
xor
mov
xor
test
les
in
punpcklwd
sbb
jbe
sahf
popf
pop
decb
fwait
jo
lods
call
mov
cmp
dec
add
popa
push
mov
mov
jb
dec
outsl
inc
hlt
in
cwtl
mov
jns
xchg
sahf
xchg
mov
pop
and
idivl
pop
ljmp
sarl
dec
sbbb
cmp
jecxz
cmp
scas
mov
js
stc
xor
jae
aad
pop
push
mov
nop
mov
cmpsb
jle
dec
push
push
into
pop
into
jnp
movsl
inc
repnz
xchg
in
push
dec
aas
mov
xor
out
rolb
mov
dec
adc
es
and
lods
sub
pop
xchg
xor
add
iret
cmpl
xor
jg
inc
in
and
rcrb
and
cmp
push
stos
dec
pushf
lret
ret
addb
sub
adc
xchg
js
xchg
aaa
into
sub
int
mov
mov
push
iret
ret
fidivs
inc
pop
fs
test
shrl
hlt
xor
sub
in
leave
fmulp
in
lods
and
or
sbb
mov
dec
dec
push
add
push
mov
fabs
mov
aad
fimull
ds
cltd
arpl
mov
fmulp
and
push
add
mov
outsl
add
xorb
sbb
js
push
push
inc
sub
imul
push
in
enter
ss
addb
lds
jl
mov
push
pop
add
cmc
pusha
test
inc
sub
jb
imul
jecxz
ljmp
lods
pop
push
mov
rclb
sbb
xor
insb
xchg
fcoml
insl
aam
repnz
repnz
js
add
xchg
test
ret
test
mov
cmp
js
xlat
subl
fnstenv
push
hlt
ret
dec
xchg
pop
sbb
out
dec
cmp
sbb
sub
repnz
dec
shlb
ljmp
test
popf
xchg
in
lret
shlb
ret
adc
jmp
test
xchg
aad
and
jo
fs
aaa
sbb
dec
bound
push
cmpsb
push
xor
fsubr
push
imul
push
in
jno
xchg
mov
loop
jae
jbe
in
scas
cmc
cmp
imul
das
push
mov
xor
enter
enter
sub
scas
push
jae
int
rcrb
mov
fptan
cltd
adcl
dec
divb
mov
mov
loop
mov
call
pop
jns
call
imulb
stos
inc
mov
addb
inc
and
gs
jb
mov
shlb
fstpl
shlb
incb
push
push
pop
clc
pop
aad
enter
sub
xorb
mov
mov
add
jmp
leave
or
je
mov
js
lret
inc
out
pop
mov
sub
inc
push
loop
pushf
pop
adc
adcl
add
loope
in
cltd
cmp
sbbb
lods
sub
inc
jbe
loopne
and
stc
sub
in
fmul
subl
call
arpl
push
pop
push
adc
test
inc
or
push
fcmove
fs
test
cmpsl
xchg
or
dec
aas
fs
sub
ss
mov
push
jb
and
sbb
pop
add
inc
test
dec
repz
mov
mov
fbld
fldl
out
adc
stos
lock
ficoml
pop
adc
stos
xchg
push
lods
push
xchg
xchg
fdivrl
dec
cmp
scas
push
stos
test
call
sahf
int
cld
or
dec
mov
bound
pop
cmp
mov
push
dec
bound
sarb
movsb
loopne
xchg
push
sub
xchg
and
xor
dec
cmp
test
jnp
out
and
leave
inc
out
int3
mov
test
dec
popa
jle
push
xchg
jae
xorl
xchg
mov
clc
cmp
out
out
pop
add
jb
in
fisttps
cmc
sub
jno
jns
cmpsb
mov
push
fstps
movsb
popf
sarb
test
inc
inc
sub
inc
test
push
rcll
or
popf
jmp
jmp
test
xchg
xor
push
xor
pop
xor
out
out
outsl
dec
add
test
es
push
daa
sahf
subl
xor
dec
lods
cmp
push
imul
adc
ret
and
push
shrb
xchg
das
iret
pusha
aaa
mov
or
gs
dec
xchg
jmp
cld
stos
dec
lock
or
addr16
insl
mov
dec
inc
and
ret
dec
fldt
dec
scas
push
jl
cmp
adc
les
dec
nop
inc
cmp
jae
sub
ret
iret
iret
rcr
ret
addl
aaa
lahf
out
sub
addb
cmpsl
aad
and
push
and
mov
xchg
pop
sar
dec
lds
imul
pop
xor
lods
xchg
js
outsl
scas
pop
push
rcll
mov
jl
sub
pop
lahf
outsb
inc
cld
pusha
and
ret
dec
lcall
push
lcall
cltd
push
daa
pop
in
repz
lret
sbb
and
fisubl
out
movsl
cli
arpl
repz
scas
mov
cmp
dec
sahf
dec
xchg
test
loopne
mov
pop
and
enter
mov
mov
mov
mov
sub
out
pop
bts
je
push
xor
rcll
roll
jp
repz
push
xchg
sub
shlb
mov
push
out
jmp
and
sbb
mov
inc
xchg
xchg
shlb
sub
gs
clc
iret
mov
xchg
pushf
movsl
lret
jmp
jmp
ja
hlt
inc
push
rolb
adc
lods
outsb
loop
adc
stos
mov
pop
ljmp
popa
mov
bswap
mov
mov
gs
and
movsl
push
fistps
rol
test
cmp
or
push
dec
adc
mov
or
test
cmp
push
fcmovb
add
mov
out
dec
repnz
not
lock
adc
ret
or
mov
in
jp
cmp
mov
scas
in
inc
pop
pushf
pop
jbe
in
les
cmp
jecxz
sbb
aaa
rorl
mov
movsb
jae
popf
xor
and
pop
int3
ds
add
cmc
jg
inc
dec
mov
cmp
iret
dec
lret
jbe
negb
sti
stc
pop
test
fisttpl
call
jb
mov
sbb
cmp
xor
add
mov
ja
mov
das
dec
mov
cmp
cmpsb
mov
xor
or
shlb
sbb
mov
enter
sarl
cs
test
pop
icebp
inc
shrl
aaa
lret
jg
sub
jne,pn
dec
push
cld
mov
pop
movsl
dec
aaa
inc
arpl
cli
pop
dec
cmp
cmp
mov
sub
scas
mov
xor
mov
sahf
push
pushf
push
cmpsl
adc
jg
mov
jmp
inc
xor
popa
rcr
mov
les
mov
xchg
lds
test
imul
xchg
jge
lret
dec
cltd
adc
jno
icebp
inc
icebp
std
xchg
cmpsl
push
stc
inc
nop
add
orl
inc
push
mul
sbb
inc
jp
or
test
getsec
in
pushf
fcmovnb
test
and
push
pop
pushf
and
adc
bound
pusha
data16
mov
pop
test
lret
test
cmp
ljmp
push
jl
sbbb
sub
mull
push
inc
push
daa
in
movsl
cltd
add
sub
ss
mov
adc
push
push
mov
jl
push
adc
jg
cmp
inc
loope
dec
sbb
push
xlat
stos
pusha
loop
test
cmp
aas
ret
xor
xchg
jb
sarl
and
mov
ret
or
stos
push
in
sbb
and
in
das
adc
xchg
xchg
ret
aaa
sub
or
enter
jbe
dec
cmp
mov
pushf
jmp
adc
fiaddl
sbb
cmc
xchg
lea
push
fwait
lods
xor
xchg
pop
or
sub
mov
dec
rorb
std
fsincos
add
ret
fstps
cmp
in
jo
or
jb
jg
inc
inc
rcll
and
nop
fucom
ljmp
sub
out
gs
jecxz
mov
std
inc
lods
xor
out
push
adc
fcomps
scas
push
rolb
repnz
xor
cmpsb
adc
add
xchg
mov
mov
xchg
lods
or
jne
fwait
lret
sub
rcrb
cltd
popa
stos
fcmovnbe
iret
in
adc
test
repz
pop
sti
and
cld
ja
or
sub
pop
pop
and
in
ja
sti
mov
insl
mov
mov
lods
shrb
sub
dec
inc
repz
test
aad
xchg
xchg
and
test
mov
out
in
leave
addr16
out
and
sub
ds
pop
dec
mov
push
in
rorl
lds
rcl
pop
or
jg
push
je
enter
in
or
or
or
mov
insb
mov
pop
pusha
sub
add
iret
inc
rclb
fsubs
sti
out
pop
movsb
das
in
push
loop
in
mov
jle
movsl
jbe
inc
stos
bound
dec
or
mov
aam
bound
fimuls
in
pop
aam
adc
adc
ret
cltd
lahf
test
mov
mov
cmpsb
jg
out
imul
xor
in
ds
mov
jb
imul
das
test
lcall
movsb
notb
inc
or
push
cltd
lds
sbb
cmp
push
jb
xchg
sbb
cmp
inc
int3
sbb
clc
dec
inc
mov
inc
shl
mov
stos
es
ja
xor
pop
mov
jge
xchg
pushf
clc
test
scas
push
aad
data16
insl
pop
int3
shrb
popa
push
add
or
rcll
pusha
pop
push
jge
jp
data16
repz
push
movsl
push
mov
loope
inc
mov
lcall
add
test
mov
loope
cmp
add
adcl
mov
cmp
int3
jmp
cltd
mov
mov
in
ljmp
and
fdivrs
mov
in
loope
jle
adc
bound
ja
cmpsb
pop
call
lds
repnz
push
jp
lcall
lcall
xchg
add
or
sbb
push
das
imul
adc
mov
pop
out
xchg
push
push
mov
cld
insb
or
adcb
subl
ret
je
push
jns
sub
insb
jo
sahf
repz
mov
pop
add
repnz
cltd
mov
imul
xor
push
mov
nop
ret
push
push
stos
or
fdivrp
and
jae
in
fmull
inc
push
jmp
lods
pop
testl
fld
daa
pop
inc
xlat
jne
xor
ficoms
insl
mov
sbb
push
cmp
and
sub
test
jg
push
subl
mov
aam
jb
or
movsl
leave
test
mov
push
push
cld
pop
je
cmp
jb
sbb
leave
add
xchg
sub
int
dec
std
adc
mov
movd
adc
sub
in
push
pusha
mov
lret
mov
sti
dec
xchg
inc
or
cmp
lea
stos
call
fcmovne
aad
and
push
fwait
inc
pusha
add
and
loop
enter
mov
jle
dec
std
sbb
push
ss
sbb
jne
or
xchg
jno
int3
sti
sbb
dec
jno
cs
xadd
sub
cmp
repnz
mov
scas
mov
pop
ja
or
jae
jne
sahf
mov
dec
mov
das
mov
enter
push
mov
and
aaa
or
pop
pop
mov
mov
jp
push
jmp
minps
xor
fmull
fs
sbb
call
push
lret
sub
pop
cmp
dec
add
out
movsl
xchg
aaa
dec
add
pop
xchg
mov
dec
push
adc
or
xor
or
cltd
inc
lods
cli
andl
cmp
sbb
inc
xor
xchg
in
mov
mov
sbb
cltd
inc
pop
lahf
xchg
mov
jns
fstpl
and
movsb
jecxz
pop
jnp
xchg
cld
jo
cld
xorb
bound
xchg
xchg
fs
test
sbb
dec
sub
ja
or
scas
fwait
xor
and
mov
pop
inc
fldl
jg
scas
popa
inc
dec
dec
out
lods
sbb
pop
sti
add
shr
aad
iret
fidivrl
loop
popa
je
leave
pop
push
mov
and
mov
gs
mov
dec
adc
inc
and
das
out
mov
xor
ret
lret
adc
or
xchg
imul
and
inc
les
lret
dec
and
sbb
mov
mov
mov
outsb
inc
sbb
mov
or
and
lds
outsb
les
push
jmp
jmp
jg
gs
dec
add
sub
fisubrl
lret
and
inc
nop
lahf
add
test
push
jl
hlt
jmp
cmp
subb
xchg
daa
mov
rorl
ljmp
xlat
movsb
nop
xchg
lahf
popf
repnz
fcmove
sbb
pop
test
jle
shrb
popf
adc
mov
xchg
pop
lock
out
out
daa
dec
pop
enter
sbb
fildll
jbe
clc
shrl
js
xor
into
leave
xchg
inc
add
cmp
xor
jmp
leave
scas
icebp
dec
xchg
jno
icebp
mov
lret
ret
add
ss
imul
test
lea
sbb
addr16
in
mov
adc
xchg
xchg
lret
push
xchg
push
mov
and
les
pop
addr16
cmp
xor
or
and
sbb
lcall
and
jp
push
les
mov
cld
or
data16
push
mov
mov
mov
pop
pop
daa
push
push
pushf
xchg
adc
fcmovne
repz
xchg
xor
dec
add
aas
lods
cmc
rorl
out
pushf
sahf
sub
mov
in
mov
out
push
fstpl
mov
mov
pop
stos
jno
andl
test
aaa
rorl
shll
imul
out
call
leave
sti
inc
mov
cmp
xor
lret
nop
mov
xor
hlt
daa
pop
or
push
ret
jecxz
cmp
jecxz
fcmovnbe
jg
push
sbb
and
sbb
mov
mov
xchg
mov
xor
shll
lods
jge
dec
js
mov
or
lds
push
push
xchg
into
push
sti
mov
pop
dec
xchg
and
sub
data16
or
mov
fs
dec
int3
pusha
jle
fstpl
sbb
pop
pop
cs
mov
mov
sti
sarl
mov
adc
les
and
lock
dec
cmp
imul
gs
mov
addr16
or
aas
lods
cmp
cmp
add
cmp
sbb
sar
mov
jnp
insb
enter
jnp
or
mov
and
and
sub
lods
ret
xchg
inc
icebp
or
mov
stos
add
pusha
and
mov
xchg
mov
leave
xor
cmp
mov
ret
ret
loopne
movsl
popa
aaa
nop
cmp
pop
mov
loope
pop
movsl
fcom
sbbb
cmp
shl
cmpsb
je
popa
seto
into
aaa
mov
fmul
mov
in
xor
jo
cmp
ret
cli
pushf
jge
enter
dec
mov
pop
mov
out
cmc
fbld
push
ret
or
or
adc
popf
rcr
cmp
lea
push
fiaddl
popf
shr
mov
outsl
loop
sub
dec
test
aas
mov
enter
xorb
fsubs
sub
pop
pop
ja
leave
fdivr
and
dec
mov
or
add
or
xor
in
sbb
into
cld
and
add
out
ficompl
sti
mov
ds
add
into
jae
jae
sbb
out
pop
sti
insl
cmpb
js
push
insb
and
add
in
stc
into
dec
jge
and
cwtl
es
xor
outsl
xor
repnz
xchg
out
je
out
pop
dec
sbb
lods
mov
arpl
mov
dec
cwtl
and
lret
push
push
stc
inc
sbb
adc
xchg
or
clc
ljmp
scas
push
mov
inc
sti
push
push
in
das
pop
in
mov
cmp
xchg
loop
loopne
jae
pop
in
jns
pop
jl
or
add
mov
js
cmpsb
mov
xchg
push
in
pop
adc
sti
inc
jo
jg
ja
lcall
test
pusha
cmpsl
pusha
inc
cmp
data16
mov
leave
sub
push
and
or
daa
sub
push
push
jp,pt
jle
call
dec
dec
cli
nop
mov
adc
xor
in
mov
adc
pop
mov
mov
outsb
pop
inc
xchg
sbb
ret
push
jnp
fisubl
ja
mov
dec
out
movb
and
add
daa
lock
or
push
aad
push
sub
ficoms
and
dec
icebp
mov
divl
mov
cmpsb
stos
pop
les
jo
push
or
add
push
mov
cmc
aas
xor
inc
cmp
movsl
out
push
xchg
imul
lds
mulb
test
xchg
inc
push
sarb
dec
shl
insb
cmp
and
sub
lret
jns
ret
hlt
jg
out
fimull
sub
leave
addr16
idiv
cmp
cmp
dec
shrl
pop
loope
fsub
mov
push
scas
mov
mov
add
and
hlt
jp
jb
pop
iret
push
push
ljmp
rcrl
pop
mov
ds
subl
fwait
data16
es
scas
push
fisttps
nop
lea
dec
movsb
and
or
lret
mov
jmp
mov
in
insl
scas
mov
repnz
fldl
pop
and
orb
in
adc
scas
adc
je
cld
fdivs
mov
mov
in
shrb
add
fstl
push
inc
adc
arpl
rorl
repnz
aad
add
mov
and
imul
and
icebp
lods
pop
arpl
jno
jl
rol
fcompl
ficompl
sbb
cli
popw
arpl
push
pop
jl
xchg
jl
xor
and
loope
ljmp
jbe
mov
test
decl
push
add
insb
ret
inc
lret
dec
inc
repz
pop
repz
shrl
sahf
fwait
outsb
xchg
decl
cmp
cltd
inc
dec
clc
jmp
mov
and
shll
insl
jno
mov
xchg
jmp
jo
rcrb
push
sbb
xchg
dec
jl
into
sub
xchg
loopne
add
jae
push
push
and
mov
mov
out
js
push
sbb
movsb
fcompp
cltd
sub
push
loop
rcr
stos
cmpsl
cli
hlt
call
orl
aas
add
sbb
push
dec
mov
in
mov
mov
popf
adc
dec
or
mov
adc
push
pop
out
pop
cld
jmp
mov
mov
pusha
divb
mov
jo
movsl
test
pop
repz
pop
arpl
shlb
mov
in
mov
mov
decb
leave
pushf
les
xor
insb
js
pop
sahf
sub
scas
mov
enter
add
mov
in
je
xor
sahf
add
test
out
adc
adc
mov
test
clc
pop
enter
xor
pop
inc
rcrb
sub
test
int3
lret
mov
inc
push
cmc
xchg
mov
scas
cmp
js
rolb
sti
daa
xor
or
lcall
lahf
push
fs
inc
jmp
mov
xor
ds
or
jle
roll
ficompl
mov
popa
jne
not
sbb
and
mov
and
xchg
hlt
subb
aas
dec
mov
inc
lods
jmp
lea
sbb
dec
sbb
jmp
in
jecxz
mov
repnz
sub
icebp
adc
sbb
shll
mov
fidivrs
lea
into
test
mov
sub
call
div
insl
jmp
mov
inc
lods
fs
inc
cwtl
shl
cmp
or
jecxz
dec
and
pusha
mov
inc
add
sub
mov
mov
jae
xchg
push
or
jl
xor
xorb
jae
jo
cmp
test
jmp
sub
fisttpll
dec
loop
dec
out
mov
cmpl
add
sahf
out
loope
and
stos
sbb
add
and
stos
or
outsb
add
xor
ret
mov
gs
add
loopne
pusha
or
push
not
push
movsb
push
cmc
or
push
rcrb
mov
aas
movsl
outsb
add
cld
mov
andb
dec
sub
in
test
out
out
and
cmp
inc
mov
repnz
popa
test
std
pop
and
and
push
xchg
add
roll
dec
cmp
iret
test
add
xor
jno
dec
mov
dec
or
xor
mov
inc
push
sbb
sti
int
mov
inc
push
insl
cwtl
pop
jb
xchg
lret
enter
push
jg
mov
or
xchg
cmp
jbe
cwtl
in
adc
push
sbb
and
sub
mov
cmpsb
push
ret
scas
xchg
repnz
stos
imul
mov
clc
adc
ret
inc
lret
ret
add
ret
insb
in
xor
aam
shrl
fisttps
mov
push
jne
xchg
int
push
in
in
mov
inc
and
mov
xor
in
popf
stc
cmp
adc
mov
aaa
inc
cs
rorb
es
adc
imul
jmp
test
in
lahf
cmp
roll
aas
mov
jecxz
repnz
push
mov
out
out
outsb
ds
cmp
cmp
adc
xchg
add
cmp
pop
aam
or
cmpsb
xchg
xor
add
xchg
cmp
loope
inc
ds
add
idivb
add
cwtl
lock
xorb
add
mov
scas
fxch
lret
jae
mov
jle
mov
fdivrl
lods
jmp
jp
gs
repnz
sti
data16
add
jge,pn
lahf
rcrl
lahf
sti
stos
ljmp
out
dec
jbe
int
imul
pop
add
jae
in
aam
pop
mov
xor
xor
pop
cmpsl
push
scas
arpl
mov
clc
ficomps
adcb
mov
bound
into
xchg
sbb
cmpsb
mov
in
cmp
sub
lret
pop
mov
pop
sahf
aas
inc
rorb
mov
imul
leave
mov
test
ds
jbe
addb
mov
mov
inc
movsl
jne
dec
mov
mov
jnp
jb
and
cmp
jns
jno
mov
icebp
out
xchg
je
loop
push
fisttps
cld
mov
adc
daa
pop
test
xor
adc
in
jo
testl
fsubrl
fidivrl
pop
aas
xor
pop
dec
push
imulb
push
cmp
in
outsb
xor
mov
mov
pop
fstp
ret
aad
push
scas
test
stos
inc
cmp
cli
fwait
flds
cli
mov
or
adc
ja
mov
sub
dec
out
dec
test
cltd
aam
mov
repz
jo
pusha
or
movsb
cmp
mov
or
loope
push
sbb
adc
jbe
test
xor
in
roll
loopne
into
inc
lret
lea
or
mov
xchg
decb
arpl
add
in
xchg
xlat
fnsave
xlat
idiv
scas
sub
cmp
add
pop
stos
mov
and
xor
cmc
int3
push
add
xor
xor
ds
mov
lret
pop
xchg
jecxz
push
les
or
push
shrl
fwait
je
xchg
pop
ja
jae
fmulp
or
outsb
and
xor
dec
or
jnp
int3
xchg
mov
bound
jne
push
sub
jg
dec
ja
in
ds
bound
jg
jl
test
sub
add
cmp
push
loopne
mov
mov
xor
xchg
dec
xchg
dec
add
lea
sbb
cwtl
xlat
sbbb
lods
jmp
cmp
stc
jnp
sahf
in
jmp
testb
test
mov
adc
les
inc
repnz
test
or
popa
test
or
xor
dec
xchg
jecxz
pop
jp
lea
xchg
aaa
shl
adc
lods
and
mov
and
mov
inc
xor
lcall
movsb
push
dec
jno
test
clc
scas
xchg
icebp
scas
inc
mov
scas
adc
sub
iret
orl
dec
repz
and
pop
outsb
mov
cmc
mov
mov
lods
scas
ja
add
cmpb
filds
notb
mov
movsb
push
outsb
dec
jne
inc
stos
jle
int
mov
out
push
fsubr
stos
mov
pop
in
dec
into
movsb
cmp
mov
cmpsb
xchg
sbb
mov
cli
sub
pusha
cs
mov
pop
pop
bound
jl
sbb
popf
lret
and
dec
xchg
xor
push
lea
fwait
mov
xchg
lods
cwtl
inc
je
popa
cmp
into
lret
filds
rorl
scas
pop
jae
mov
pop
addr16
int
fists
mov
loop
cmp
dec
jge
xchg
dec
hlt
pusha
mov
data16
ds
fwait
mov
outsb
into
das
push
push
sub
sbbl
push
in
xchg
in
paddusw
iret
repz
cmp
lret
ss
or
inc
psllq
mov
sarb
push
out
jae
xchg
jmp
push
mov
shlb
sbb
into
dec
js
mov
and
mov
mov
popa
cmpl
add
mov
shll
mov
xor
cmpsb
push
xor
push
push
out
add
les
inc
mov
mov
test
popa
inc
std
stos
ds
add
and
jno
push
dec
mov
mov
pop
dec
mov
jnp
dec
inc
lods
and
int
in
xchg
jmp
cmpsb
cmc
lods
sub
pop
mov
stc
pop
dec
adc
in
sbb
ds
popa
data16
js
add
rorb
dec
popa
inc
icebp
and
int3
clc
push
nop
jne
inc
xor
negl
mov
fimuls
popa
sub
fst
lds
adc
idivb
pop
ja
push
mov
loope
and
les
inc
sbb
jb
jg
sbbb
lods
insl
jb
ret
add
jns
pop
mov
mov
or
pop
lods
inc
adc
fwait
sub
test
sete
xlat
mov
push
iret
dec
xlat
hlt
mov
jae
and
pop
paddd
and
mov
into
mov
jp
jnp
fcomps
inc
out
and
or
ljmp
scas
pop
out
out
push
dec
or
iret
mov
loope
mov
fwait
push
bnd
das
xor
ljmp
sub
sub
popf
lock
mov
xchg
stc
stos
push
es
sub
mov
cltd
cmp
sbb
add
int3
adc
mov
inc
dec
and
sar
insb
imul
dec
loope
add
outsl
stc
mov
aaa
out
cltd
xor
and
shrl
cmp
pop
sahf
lahf
pop
jnp
dec
aaa
xchg
xchg
cli
cmp
sub
jb
movsb
mov
int
add
cmpsl
sbb
ja
imul
mov
push
inc
mov
pusha
cmpsb
test
mov
sbb
sbb
ss
popf
fildll
and
setne
test
mov
aam
imul
xchg
sbbl
test
cmp
mov
mov
mov
add
push
jg
jbe
sub
xchg
push
mov
sti
adc
jl
stos
jne
push
movsl
addr16
sub
mov
fsubl
xor
sub
mov
xor
into
mov
icebp
in
sahf
jecxz
sub
das
xchg
and
cs
xor
add
inc
adc
sbb
idivl
dec
mov
push
mov
lcall
out
inc
and
inc
push
and
in
stos
xlat
rcrl
movsl
out
xchg
fwait
incb
lods
push
aaa
or
xor
push
sub
jecxz
ficoms
repnz
jnp
push
jmp
mov
movsl
adc
clc
fmuls
mov
loop
test
imul
jl
rorl
push
jecxz
sub
mov
enter
out
or
rcrl
jo
xorl
fsubs
shlb
jp
dec
leave
cmp
sub
std
pusha
pop
inc
adc
loope
pop
aam
mov
push
cvtdq2ps
in
adc
lds
jecxz
push
aam
jne
and
daa
pop
jnp
xor
iret
cltd
dec
test
mov
xchg
and
mov
dec
out
popl
lods
push
push
or
prefetchnta
das
pop
stos
pushl
in
shrl
popf
and
ljmp
dec
jbe
andb
in
dec
stos
push
imul
add
sub
mov
mov
lahf
scas
jmp
loope
adc
or
push
push
out
les
adc
in
jb
adc
mov
cmp
push
inc
inc
push
idivl
fs
test
and
mov
lahf
and
push
cmp
mov
pushf
in
add
xor
shlb
push
push
pusha
clc
xor
add
xchg
add
daa
insl
loop
adc
lods
sbb
push
call
inc
hlt
adc
jo
mov
mov
mov
nop
cmpl
mov
adc
dec
out
sbb
xchg
xchg
and
and
dec
jge
lret
sub
es
dec
fs
mov
loope
aaa
jbe
or
and
or
bound
push
loope
sbb
scas
or
es
mov
imul
fdivl
xor
stc
mov
and
in
stc
dec
jg
fidivrl
sub
cmpsl
xchg
insb
xchg
sub
mov
cmpb
sbb
insb
cltd
fwait
dec
jno
mov
xor
sti
xchg
xchg
jnp
scas
ss
stos
pop
or
and
outsl
ss
pop
jne
ds
mov
lods
insb
out
das
fmul
mov
jnp
js
sbb
out
pop
add
stos
push
aad
add
lret
mov
roll
mov
and
je
inc
jne
jl
and
mov
mov
out
out
mov
and
out
nop
pop
in
jb
and
mov
push
aad
pop
in
les
cmp
adc
push
mov
addr16
test
jae
loope
push
ds
call
cmpsb
jl
std
sub
push
adc
cli
mov
xor
and
std
sbb
outsb
push
test
xor
cwtl
and
ret
push
dec
sbb
negb
aam
mov
ficompl
arpl
mov
jo
out
test
fisubs
icebp
test
dec
fbstp
popa
jge
cmpsb
enter
jb
jae
outsl
mov
mov
jle
enter
ds
insl
add
ret
ljmp
fs
mov
sbb
fstpl
lock
jae
das
cmpsb
or
shrl
dec
push
nop
xchg
pop
add
fsubs
fisubrl
nop
mov
fistpl
add
cld
in
cmpb
lods
and
dec
test
inc
xchg
insl
dec
mov
call
jmp
xchg
pop
faddl
mov
mov
or
sbb
dec
push
popa
jge
hlt
and
mov
xchg
sbb
scas
push
sub
or
sbb
jp
out
ds
adc
jno
lock
mov
sub
inc
cmp
cmp
test
test
imul
ret
lret
cmpsl
inc
mov
adc
push
inc
adc
orb
loopne
mov
negl
adc
cmc
mov
mov
sahf
in
push
cmp
lret
sbb
xchg
les
addr16
cmpsb
sbb
cmp
je
xor
adc
loope
decl
mov
dec
fcomps
pop
jne
pop
fldenv
or
in
ret
xor
rcrb
add
insb
xchg
push
pop
lahf
add
imul
adc
or
mov
push
bound
loopne
mov
inc
and
scas
jecxz
divb
mov
and
insb
and
sahf
lcall
mov
rcrl
iret
loop
and
pushf
push
neg
cmp
ja
mov
lods
xlat
mov
inc
fisubrs
inc
xchg
call
add
adc
jle
xchg
andl
pop
outsl
stc
mov
nop
inc
mov
push
hlt
hlt
cmp
lock
lds
pusha
sarb
pop
mov
xchg
cwtl
enter
or
in
sbb
les
pop
divl
inc
sub
dec
adc
cs
pop
mov
js
test
adc
xchg
sub
fcomps
add
xchg
xchg
gs
jle
shrb
fwait
adc
fidivl
bound
xor
or
inc
sbb
push
js
xchg
mov
or
pop
lret
mov
ds
subl
or
lods
xor
cmp
idivb
push
aas
jno
das
popf
stc
loope
and
dec
dec
cmovp
les
jmp
rorb
push
or
or
addr16
pop
fbld
fidivrs
aad
mov
sub
lcall
adc
inc
sub
std
clc
hlt
sub
xchg
fistpll
fstl
mov
adc
add
popa
insb
shl
sbb
mov
push
fbstp
push
std
pop
mov
xchg
roll
rclb
les
pop
jae
mov
pop
jp
lret
mov
jp
inc
jp
ljmp
and
cmc
cs
jbe
mov
lods
lods
xrelease
or
insl
xchg
pop
mov
lods
xor
mov
xor
cmpl
clc
add
in
sarb
clc
lods
sub
int3
aad
cmp
bound
or
xchg
jb
maxps
mov
sub
outsb
jge
mov
iret
shl
cltd
cmpsl
cmp
sahf
bound
xchg
push
xchg
in
dec
fwait
ds
jp
imul
dec
jne
stc
pop
pop
daa
jg
and
and
jo,pn
iret
les
push
and
addr16
dec
aad
orb
xor
dec
dec
adc
cmp
loop
sub
arpl
pusha
xchg
jle
pop
and
pop
xor
mov
dec
mov
xchg
xlat
jbe
dec
push
pavgw
xor
std
loopne
ds
dec
enter
aas
xchg
lock
out
in
or
xlat
and
or
mov
sub
inc
fistl
cltd
or
ljmp
sti
scas
loop
fnstenv
dec
xrelease
mov
rclb
and
pop
stos
pop
daa
and
jmp
rcrb
push
repz
sti
add
dec
insb
lods
insb
mov
imul
out
hlt
sub
loopne
add
inc
mov
cmp
iret
pop
bound
add
fcmovb
sub
cmp
lahf
mov
cmpsl
inc
lock
and
mov
das
out
inc
sbb
and
stos
dec
and
out
insl
dec
mov
cmp
fistpl
mov
mov
imul
sbb
mov
test
out
adc
xchg
push
test
ss
pop
fbld
nop
push
xor
cltd
into
shrb
push
cmp
shl
push
test
insb
cmp
mov
xchg
sub
cmpsb
sahf
fistpl
jbe
mov
daa
or
mov
repz
xchg
mov
daa
mov
shr
adc
lods
cs
inc
inc
js
loop
cs
mov
das
mov
push
cmpsl
aam
cwtl
push
push
add
mov
cs
shll
adcb
adc
test
push
or
mov
mov
add
sbb
push
icebp
out
mov
and
ret
sbb
mov
test
lahf
insb
mov
ds
movsb
mov
ss
adc
or
cmp
jb
and
mov
cmpsl
sbb
mov
bound
mov
or
pop
ljmp
mov
mov
fisttpl
and
ja
jo
js
fdiv
mov
data16
jge
jmp
rorl
adc
mov
mov
iret
push
imul
nop
pushf
push
inc
pushf
lret
pop
mov
jo
jne
cmp
insb
mov
mov
stc
lret
or
sarb
mov
sbb
pop
ret
dec
pop
repnz
pop
mov
popa
arpl
dec
lds
jl
push
lahf
jl
mov
out
fsubp
and
jl
and
mov
lret
jle
mov
das
lds
aad
lock
mov
dec
inc
and
push
xchg
xor
les
imul
stc
and
ja
mov
sti
xchg
cmpsb
xchg
jne
push
rclb
adc
sbb
inc
int
das
stos
sbb
or
call
lock
out
daa
and
cmp
aam
rcrb
test
xchg
addr16
add
inc
mov
cltd
xor
jecxz
mov
pop
das
mov
mov
mov
imul
and
mov
mov
add
pop
ret
adc
jp
outsb
xlat
pop
inc
adc
es
pushf
xchg
mov
test
inc
mov
stc
in
int
testl
out
mov
sbbl
xchg
lods
icebp
lahf
pop
les
out
shlb
jecxz
aad
cmp
mov
jle
mov
fwait
idiv
test
and
inc
ret
sub
imul
adc
push
mov
std
or
mov
xchg
imul
js
xor
adc
ljmp
or
in
aaa
leave
mov
mov
mov
movsl
dec
and
xchg
add
jnp
js
test
dec
push
jl
inc
test
mov
jecxz
mov
jp
inc
dec
add
das
adc
sub
loop
sbb
shrl
add
jge
pop
movsb
fidivl
mov
mov
jle
xchg
adc
jp
mov
push
adc
fs
ret
jb
sbb
xor
ja
add
cmp
xchg
mov
dec
inc
cmp
jbe
sbb
or
or
test
cs
addr16
sarb
lock
pop
mov
pop
mov
pop
pop
cmp
inc
fildl
stos
push
shlb
cmp
dec
mov
adc
popa
sub
sub
in
push
iret
and
int
cmp
imul
pushf
das
int
sub
and
dec
inc
jae
inc
sbb
mov
jecxz
clc
lahf
loop
push
sarl
in
lcall
sarb
ja,pt
cmc
lcall
push
and
mov
mov
test
or
xchg
test
or
std
scas
das
push
mov
or
fistpl
sahf
cmp
lret
movsl
scas
int3
pop
dec
xchg
dec
inc
not
arpl
jge
mov
iret
cld
lahf
xchg
js
aad
sbb
mov
pop
mov
lea
cwtl
cmp
lds
or
js
sbb
iret
stos
mov
ret
in
lret
call
in
daa
pop
pop
fsubs
je
and
dec
cmp
pushf
pop
ss
das
jecxz
clc
idiv
push
dec
stc
mov
mov
mov
cwtl
mov
cmp
and
jecxz
jbe
mov
push
sbb
rcll
pop
addr16
in
rcll
fnstcw
inc
or
inc
out
push
xor
nop
jge
lret
mov
test
clc
jno
jnp
loope
cmp
sub
or
scas
jle
aad
push
mov
dec
add
push
sbb
adc
pop
enter
fildll
out
dec
add
push
cwtl
inc
mov
inc
inc
inc
es
imul
nop
sahf
lea
stos
dec
sahf
dec
enter
add
push
fstl
jl
fcmovnu
sbb
jg
add
adc
mov
dec
cmc
or
cmp
rcrl
sbb
shlb
jb
lcall
clc
jge
jl
cmovne
xchg
jb
popf
mov
add
xor
push
xor
stos
data16
lahf
enter
sbb
and
dec
outsb
cltd
inc
rol
lods
addr16
pop
adc
mov
mov
clc
add
dec
inc
pop
mov
adc
lcall
fcmovbe
sbb
mov
ret
pop
xor
stos
xchg
movsb
push
fs
jle
pusha
mov
xchg
cli
push
mov
hlt
les
rcll
xchg
mov
inc
dec
lahf
pop
add
popa
pop
out
inc
add
mov
std
das
add
test
adc
xchg
and
mov
pop
shl
xchg
aam
or
mov
cld
adc
out
outsb
stc
or
dec
xchg
cmp
es
mov
movsl
stos
inc
mov
mov
dec
les
push
jno
in
jbe
icebp
test
cmpsl
or
int
inc
pop
iret
cmp
and
lret
inc
mov
inc
repz
test
push
popa
subl
mov
xchg
dec
jo
fisubl
pushf
push
in
addl
pop
arpl
pop
decb
mov
arpl
out
inc
les
icebp
mov
gs
leave
es
adc
sbb
das
pop
rcl
out
xlat
add
or
ljmp
outsl
pop
in
pop
adcb
jnp
dec
loop
insl
or
xor
jbe
xchg
push
shr
scas
daa
dec
dec
je
pop
push
lock
dec
lock
repz
mov
xor
add
xchg
mov
dec
sti
dec
data16
dec
out
bswap
adc
xchg
push
les
lcall
push
and
inc
addr16
movsl
xorps
pop
jbe
int3
push
sbb
rcr
sahf
xchg
add
call
lret
xchg
cmp
out
popf
xchg
or
inc
xor
push
in
mov
js
sahf
or
inc
into
xchg
jns
cmc
sub
sub
xchg
xchg
aas
cmp
mov
movsl
sbbl
mov
in
pop
xchg
mov
xor
push
pop
aad
xchg
aas
inc
lahf
xchg
lods
pop
xor
xlat
xchg
cmp
inc
add
mov
jp
jnp
and
rcrb
push
mov
jo
and
fsts
adc
lods
pop
rolb
lods
dec
mov
popa
xchg
jne
pop
sub
outsl
stos
jo
jge
push
into
addl
jbe
inc
push
insl
ss
in
es
lahf
cmp
sbb
lock
inc
fwait
cmpsb
stos
cli
imul
inc
mov
add
out
ds
lds
sbb
mov
mov
lret
roll
repz
test
rcl
adc
xor
add
fnstsw
pop
out
ret
test
aaa
dec
nop
xor
icebp
lcall
and
ret
scas
sbb
jecxz
dec
mov
ljmp
jnp
lds
and
and
inc
js
test
pop
sub
or
test
jno
xchg
mov
loopne
loop
scas
repz
cmp
cli
ficomps
push
out
mov
cmp
push
mov
loop
pop
mov
scas
adc
arpl
add
adc
imul
lret
cltd
cmp
lret
and
inc
das
xchg
int
dec
pusha
xchg
pop
stos
mov
push
addl
jle
arpl
pop
xchg
and
push
std
leave
push
adc
ljmp
jns
jmp
leave
inc
test
dec
int
jae
xor
add
into
iret
mov
das
xchg
cmp
imul
stos
mov
cmp
inc
or
stos
rcll
ja
mov
fbld
or
insb
bound
mov
leave
mov
pop
lea
stos
movsl
inc
mov
frstor
shrl
jns
lcall
pushf
jl
sub
inc
movl
add
fcom
sub
add
stc
mov
lds
out
xor
push
out
push
outsb
cltd
mov
sbb
insl
jnp
gs
test
dec
mov
icebp
fistps
push
cmp
fwait
jnp
popf
sahf
jmp
pop
mov
dec
mov
int3
aad
int
pop
lret
loope
fnstcw
cli
jmp
daa
jecxz
jg
fistpl
jg
jle
cmpsb
push
scas
ret
sub
jno
jge
movsb
pushf
inc
mov
insb
lret
jae
ljmp
ljmp
mov
rorb
lret
lret
jg
sub
daa
dec
shll
arpl
jg
mov
mov
sbb
enter
add
rolb
lods
adc
or
mov
in
mov
inc
or
xor
push
daa
sbb
pop
jmp
xor
ljmp
mov
xchg
popa
nop
pop
sbb
cmp
mov
dec
das
ss
les
dec
push
mov
cmp
iret
std
sub
or
fdivr
outsl
shr
pop
fcomi
mov
repz
add
mov
xor
mov
or
inc
push
cmp
xchg
add
push
mov
or
ret
or
aas
fnstsw
test
push
jns
aad
mov
xor
inc
dec
lret
lods
jge
add
push
popa
mov
fwait
add
mov
das
push
xchg
stos
push
cli
jnp
cmp
inc
stc
les
and
int3
xchg
in
aam
xchg
imul
adc
pop
addb
loop
mov
stos
mov
dec
dec
out
aas
icebp
mov
leave
push
cli
aaa
mov
shll
add
dec
out
mov
pop
jne
pop
cmp
arpl
inc
adc
sbb
pop
repz
push
and
adc
push
inc
cvtps2pi
jp
test
bswap
imul
insb
lock
scas
lret
shl
jl
cli
push
clc
insb
movsb
sub
leave
test
popf
out
cmp
aaa
adc
outsl
jne
mov
mov
sub
add
cmpsb
inc
inc
mov
mov
lahf
jne
mov
pushf
sub
xor
in
push
mov
call
lods
loopne
lds
nop
push
sub
mov
mov
push
or
iret
and
mov
push
out
sahf
mov
insb
cwtl
sbb
xchg
adc
or
mov
fmulp
mov
cmpsl
insl
mov
xchg
mov
int
test
adc
fucomp
adc
out
push
push
lds
pushf
mov
jno
std
xor
jbe
in
into
sahf
add
imul
inc
add
sub
test
mov
jae
and
and
mov
fidivrl
xchg
adc
leave
or
sbb
out
les
cmp
push
push
mov
cmp
sbb
pop
mov
insl
dec
adc
jae
call
fcoms
shlb
inc
outsl
ret
jae
xchg
nop
cmp
xlat
outsb
cwtl
ss
andl
dec
xor
jg
scas
mov
imul
adc
adc
fnsave
xor
lds
ss
push
mov
sbb
flds
pop
lds
rcrl
fstl
pop
call
in
jp
cs
sti
jbe
pop
scas
cmpsb
rorl
into
jbe
ret
jmp
shll
dec
pop
sbb
aas
pop
xchg
sbb
daa
jbe
cmc
cmp
jmp
test
out
fadds
gs
lcall
jmp
and
out
inc
cmpsl
jg
sub
xor
mov
xor
mov
mov
add
movb
xchg
lret
adc
int3
cmpsl
loop
shrl
shr
jl
pop
pusha
sub
and
psrad
dec
add
lods
arpl
out
mov
in
fiaddl
sbb
loope
adc
mov
imul
imul
out
out
mov
inc
jmp
rclb
mov
xchg
cmp
mov
mov
imul
fiadds
out
dec
movsl
int
lock
inc
push
shll
jae
jle
in
jl
dec
jp
stos
insb
je
xchg
int
xor
sbb
aas
loopne
pop
test
cwtl
addr16
stos
dec
hlt
push
and
lods
rcr
mov
in
outsb
mov
vmovaps
jg
xchg
jb
mov
out
shlb
aam
and
rcll
outsb
dec
js
stc
ret
cwtl
cmp
pop
jns
popf
sbb
pop
fnsave
fsubrl
dec
inc
movsl
cmp
mov
or
xchg
mov
inc
ret
and
jno
leave
add
lds
scas
inc
aam
sub
inc
jb
add
mov
in
fadd
sub
orl
sbb
js
push
ljmp
push
inc
xor
fisubs
jecxz
jmp
sbb
dec
fnstcw
in
scas
add
jecxz
and
sub
imul
adc
sub
ret
fwait
sbb
cmp
repnz
sbb
mov
mov
dec
cmc
aam
cwtl
rorl
fnstsw
cmpl
jo
stc
int
pop
cs
addb
ds
lods
rclb
push
sbb
cmpsl
in
out
imul
test
pop
or
int3
xor
or
xchg
je
dec
adc
jge
mov
xchg
rcrb
mov
clc
dec
mov
inc
pop
lock
sbb
xor
sti
shll
or
gs
jmp
xchg
push
dec
mov
call
or
push
add
pop
or
in
jecxz
imul
cld
or
and
add
hlt
das
push
mov
dec
lcall
push
mov
fsubrl
popf
std
jmp
pop
neg
pop
std
arpl
pop
dec
sbb
fisttps
adc
add
pusha
pop
cmp
cmp
xor
hlt
cmp
and
ror
mov
xor
and
mov
jle,pn
mov
pop
add
add
sbb
arpl
ficompl
or
testl
ret
dec
je
push
imull
out
cmp
mov
ljmp
hlt
xor
lret
xchg
jnp
pop
inc
aaa
xor
aam
xchg
mov
jg
sti
iret
pop
out
cwtl
mov
lahf
cmc
jne
inc
mov
pop
jmp
pop
subl
loopne
test
fsubrs
sub
jae
cmp
iret
pop
insl
mov
jae
movl
aas
jl
fidivs
aam
leave
or
mov
xor
push
jp
sub
arpl
push
arpl
mov
sub
jo
xchg
fidivs
push
imul
js
dec
xor
sub
add
xchg
cmp
pushf
aam
xchg
outsb
xchg
push
mov
sbb
dec
fisttpll
jle
inc
or
arpl
push
xor
inc
adc
outsl
lret
push
xchg
cs
cmp
addr16
lcall
sub
stos
into
fildl
xchg
test
fidivl
mov
and
xor
jg
aaa
and
xor
inc
sub
mov
mov
xchg
jge
xor
pushf
sahf
mov
inc
pop
mov
out
std
mov
inc
aad
enter
leave
lcall
fsts
icebp
or
imul
lock
data16
mov
test
push
pop
sbb
xor
xchg
push
in
iret
xor
push
cmp
jae
or
insl
mulb
inc
push
sub
mov
jecxz
enter
imul
sub
lds
push
sbb
sub
scas
gs
dec
jl
sub
sbb
repnz
roll
sub
imul
xchg
mov
push
cmp
fcoml
and
clc
les
sub
adc
cltd
sub
or
cmp
xchg
inc
sub
xchg
popa
inc
mov
iret
and
lods
imul
jmp
lret
insb
and
dec
inc
lahf
jmp
mov
pop
ret
mov
pusha
outsb
movsl
push
inc
inc
jno
and
cmpsl
inc
sbb
jmp
imul
jae
rcrl
sbb
mov
pop
or
xor
in
das
mov
fwait
lock
fistps
sbb
jmp
adc
or
sub
loope
leave
and
lock
out
mov
mov
adc
outsl
jne,pt
push
mov
or
mov
shl
xor
movsb
mov
in
out
add
jbe
into
addr16
jno
cmp
jns
in
mov
sub
push
mov
shrb
cmp
xchg
sbb
push
inc
cmpsl
mov
notl
arpl
push
pop
sbb
outsb
jae
inc
jmp
dec
lret
mov
xchg
movsb
cli
mov
ret
test
push
lret
sub
push
in
pop
mov
jle
push
psubw
mov
xchg
shl
dec
and
lods
std
repnz
add
xor
scas
cltd
ss
pop
rcrb
xchg
xor
mov
mov
notl
mov
cmpsb
and
add
mov
jle
test
jae
push
cmpsb
bound
mov
mov
insb
sti
addr16
popf
lea
sti
dec
or
jae
cmp
cmp
sbb
inc
mov
push
andb
sti
data16
pop
jmp
cmc
scas
push
insl
shl
and
rorl
inc
test
neg
sub
inc
mov
adc
cmc
push
mov
xrelease
push
mov
sbb
push
mov
outsb
add
push
loop
mov
or
out
dec
and
out
pop
cmpsl
sub
pop
jg
gs
daa
fists
jb
or
das
mov
cmp
push
jnp
movsb
push
ss
sbb
imul
adc
mov
loopne
fsubl
test
sbb
xor
adc
push
in
test
stos
pop
ljmp
fnstsw
test
and
popa
jnp
jle
xchg
icebp
xor
mov
gs
mov
movsl
pop
test
dec
mov
movsl
leave
fisubrl
sub
rcll
cmpsb
mov
mov
rorb
jne
scas
bound
adc
push
out
xchg
sub
push
xor
mov
shrl
xlat
call
mov
out
or
xchg
xor
gs
hlt
les
jae
dec
jno
dec
dec
or
push
pop
pushaw
sub
fisubrl
mov
pop
sbb
adc
cli
sub
add
sub
push
loope
adc
lret
test
lods
xchg
repnz
das
jo
movsl
mov
sbb
popa
lods
jo
test
mov
pop
out
dec
stc
xchg
aad
stos
int
dec
push
mov
icebp
das
out
stos
jb
std
repnz
mov
cmp
mov
aas
call
in
ret
fdivs
mov
ficoml
push
jl
out
push
movsl
adc
repz
out
test
test
shlb
mov
mov
pushf
sbb
sub
scas
dec
in
repnz
out
cmp
push
push
fdivs
fdivrl
fidivrl
add
mov
fs
stos
in
sbb
pop
and
icebp
stos
inc
sbb
fisubrs
test
ja
les
pusha
add
xlat
xor
or
and
lahf
add
xchg
mov
imul
push
adc
mov
cwtl
push
fisttpl
pop
add
mov
lahf
dec
inc
movsb
sbb
jmp
arpl
test
xor
inc
add
je
gs
push
xchg
xor
int3
mov
mov
sbb
jnp
push
dec
les
dec
es
push
shrl
icebp
push
xor
dec
jl
mov
dec
aaa
stos
and
repnz
outsb
roll
xchg
addr16
fwait
xchg
stos
test
push
or
mov
mov
xchg
out
sbb
and
lods
notl
arpl
ljmp
repz
sub
xor
xlat
int
lret
and
bound
xlat
or
xor
lods
push
aas
mov
jno
add
xchg
push
int
aam
addb
daa
jmp
pop
cmp
outsb
add
inc
shlb
and
add
mov
adc
mov
cmc
int
stos
shll
sub
cmpsl
and
repnz
push
test
sar
mov
mov
xor
cmp
or
sub
fbstp
push
cmpsb
sbb
jmp
shrb
xlat
popf
mov
xor
mov
lahf
jne
pusha
rcll
jae
xlat
sub
pop
xchg
mov
les
sarb
add
mov
or
cmp
or
mov
sbb
xchg
enter
lret
scas
sbb
mov
in
push
js
loope
pop
cmp
mov
jge
test
cmp
push
or
xchg
mov
push
cmc
test
xchg
xchg
ja
insb
mov
and
mov
loope
inc
das
mov
inc
inc
shl
call
bound
das
jp
aaa
sbb
test
sti
cmp
repz
fs
mov
inc
pusha
push
movsl
jl
fisttpl
xlat
xor
sbb
pop
fs
aaa
or
enter
ds
inc
pop
push
ret
imul
mov
das
lds
scas
mov
mov
inc
cwtl
adc
aas
push
dec
ljmp
sub
pop
dec
stos
xor
add
pop
andnps
cmp
jmp
mov
jnp
roll
pusha
arpl
enter
push
in
mov
loopne
arpl
pusha
hlt
inc
adc
add
cmp
out
or
or
aas
push
icebp
jne
pslld
cmp
add
fdivs
adc
mov
fdivrl
sub
mov
dec
ds
loope
xchg
dec
push
adc
test
lods
sti
lods
mov
clc
mov
test
sahf
cwtl
xlat
sbb
sub
mov
lret
mov
sbb
rorb
jge
inc
jo
inc
and
test
mov
dec
mov
mov
mov
inc
mov
js
or
sahf
inc
pop
jecxz
xor
aam
push
mov
mov
popa
xchg
andb
aaa
jno
mov
das
dec
push
jne
popf
stos
mov
aas
jp
nop
mov
push
call
clc
xchg
sub
mov
xchg
dec
jae
insl
cmc
icebp
add
mov
mov
sbb
cwtl
ja
clc
adc
adc
sub
ret
add
xor
outsb
daa
pop
cmc
int
add
pusha
shld
jb
in
dec
fldt
mov
pop
inc
call
adc
js
sbb
test
jno
jo
mov
add
je
dec
pop
roll
jg
xlat
lds
ljmp
les
mov
ss
jecxz
ret
movsb
fistpl
mov
sbb
xor
into
mov
ljmp
das
push
mov
mull
pop
sub
jnp
and
jnp
sbb
jns
add
push
xlat
pop
leave
mov
jl
pusha
adc
add
mov
movsl
clc
shl
test
push
cmc
push
mov
xlat
dec
mov
ret
test
repnz
jnp
inc
xlat
insl
cmp
push
iret
pushf
xchg
int3
hlt
mov
pop
ret
push
js
fmull
mov
dec
lock
mov
dec
inc
popa
mov
lret
dec
es
test
pop
dec
pop
push
sbb
mov
cli
cmp
jl
mov
sub
imul
pop
iret
jno
shll
aas
sub
fcmovne
pushl
fwait
dec
xchg
or
andl
in
sub
idivl
pop
icebp
mov
xchg
fmuls
aas
ja
int
fildll
adc
sbbb
rcl
imul
inc
rorl
sbb
dec
enter
xchg
push
bound
loopne
adc
jo
int3
cmp
ljmp
stc
arpl
stos
loop
dec
mulps
fsubl
pop
cmp
pop
push
pop
pop
sub
jle
mov
and
rcrb
sub
pop
pop
inc
decl
lods
sbb
pop
paddsb
ljmp
inc
bound
push
cmc
icebp
aad
or
imul
xlat
mov
push
cld
xor
data16
jg
cltd
ds
mov
shrl
add
and
sub
out
leave
fbld
mov
xchg
mov
inc
jns
cmpsl
rclb
ds
inc
add
jne
push
mov
and
pop
jge
cmpsl
daa
ja
mov
mov
mov
div
adcb
in
ja
sub
sbb
mov
mov
pushl
mov
aam
jno
jns
imul
test
mov
out
and
push
mov
test
mov
jle
add
loope
mov
lahf
adc
jge
push
inc
sti
in
mov
rcrl
sub
es
mov
inc
stc
loopne
fists
and
or
aas
iret
mov
lock
out
jge
ds
clc
iret
movsl
cwtl
push
dec
lea
push
cmp
xorb
jmp
mov
sub
hlt
and
mov
inc
add
adc
pop
mov
sbb
mov
cmp
outsl
pop
push
sbb
aas
iret
je
mov
scas
in
pop
dec
scas
jae
adc
fstpl
cmp
sti
cwtl
jae
aaa
add
jne
lret
or
sub
gs
push
fwait
mov
mov
xchg
flds
dec
xchg
xchg
pop
addr16
pop
out
test
scas
out
add
adc
xchg
pop
outsb
mov
fld
mov
dec
testb
lods
jne
insb
adc
je
mov
fisttps
fldenv
cmp
insl
pop
stc
shl
arpl
inc
sub
sub
iret
mov
add
daa
inc
cmp
mov
mov
aaa
test
adc
mov
shl
dec
cmp
out
inc
shrl
push
mov
add
jmp
je
inc
les
addr16
adc
aad
cltd
and
pusha
xchg
mov
fs
loop
cmc
sbbb
int3
add
ret
sahf
mov
jnp
ja
dec
add
out
cmp
mov
push
test
mov
jmp
mov
or
xor
mov
adc
fnstcw
movsb
insb
pop
sub
mov
add
xchg
rolb
bound
sbb
push
popf
int
es
dec
ret
and
out
mov
adc
lock
cmpxchg
jl
ja
std
clc
xor
mov
cld
stos
shr
adc
pop
cli
mov
ret
pushf
data16
cld
and
sbb
push
sbb
jnp
pop
xchg
push
sub
pop
dec
rorb
dec
pusha
scas
shrl
dec
and
mov
cs
add
and
pop
pop
cld
inc
add
add
in
test
std
sub
or
inc
mov
xor
inc
aaa
xchg
mov
cmp
gs
mov
pop
add
push
mov
dec
push
xor
testb
les
imul
add
mov
movsl
leave
inc
dec
xchg
add
add
pop
xor
mov
sahf
scas
rorl
mov
xchg
adc
xchg
and
inc
pusha
push
pop
or
sbb
std
push
ja
leave
hlt
fildl
lock
rolb
pop
ds
sbb
enter
xchg
and
pop
pop
fwait
or
xchg
push
mov
and
xor
out
push
icebp
xchg
rorl
xor
xor
aam
pop
popa
adc
dec
cld
mov
or
cmp
cmp
cmpl
mov
pop
jecxz
push
xor
addr16
add
push
sbb
push
adc
cmp
pop
icebp
loope
loop
dec
xchg
push
xor
mov
xchg
sub
xorl
movsl
pushl
lock
jnp
je
cmpsb
jl
and
lcall
xlat
inc
ja
and
mov
aam
jmp
sub
in
mov
push
mov
testl
xchg
mov
sbb
dec
loopne
jbe
jg
xchg
add
push
push
nop
and
clc
pop
adc
push
out
cmp
cmpsl
sub
add
je
inc
arpl
clc
repz
push
and
xor
insl
pushf
jl
jnp
dec
mov
inc
insb
cwtl
fsts
addr16
rclb
cs
ds
jle
aas
idivl
jg
mov
movsb
xor
stos
push
xchg
out
aas
push
inc
sub
outsb
mov
arpl
in
mov
rcrl
dec
scas
movsl
or
xor
xor
push
ror
mov
pop
dec
mov
lahf
ljmp
cmp
dec
inc
sbb
cmp
mov
adc
push
nop
aad
add
cwtl
outsl
jle
shll
add
rorb
sahf
add
insl
leave
pop
pushf
gs
or
mov
pop
sbb
add
jbe
inc
pop
cli
inc
xchg
pop
negb
cmpsl
js
add
sbb
mov
faddl
dec
pop
ss
les
cmp
mov
inc
mov
fbstp
mov
xchg
hlt
mov
dec
insb
mov
imul
imul
pop
cmp
mov
fisubrl
dec
mov
cld
clc
repz
test
add
or
out
imul
movsb
ficomps
ja
xor
mul
out
test
and
jecxz
cmc
movsb
aas
inc
lods
out
gs
call
shl
negb
jnp
mov
stc
lahf
jecxz
jecxz
loopne
addr16
mov
cwtl
pop
xlat
fstpt
mov
xor
cmpb
xchg
popf
push
jns
lea
cmp
jle
mov
pop
push
scas
mov
jno
jle
adc
aad
pop
movsl
js
inc
mov
jmp
jmp
add
popf
pop
mov
jl
stos
cmp
adc
sub
and
jo
daa
or
in
lret
pusha
sbb
push
hlt
mov
out
iret
fs
icebp
adc
call
mov
sbb
push
rcr
icebp
mov
aam
mov
pusha
rcr
adc
dec
adc
enter
push
loopne
mov
leave
mov
xchg
into
cltd
dec
push
adc
xchg
xor
cmp
jge
sar
mov
test
and
into
icebp
pop
ror
sbb
mov
xchg
je
fistpll
out
mov
stos
or
mov
add
dec
add
ljmp
ret
ret
inc
inc
out
aaa
xchg
aas
or
stos
lahf
pop
jmp
into
mov
ja
aas
adc
in
repnz
fstps
mov
push
mov
pop
stc
in
lahf
mov
loop
out
xchg
repnz
sbb
ss
inc
inc
pop
adcb
mov
test
push
ret
fucomip
in
pop
adc
pop
jns
adc
rcr
xor
xchg
insl
mov
sub
jae
xchg
int
pop
mov
jnp
popa
cmp
ret
pop
jb
pop
int3
fwait
into
cld
pop
movl
dec
loope
push
inc
dec
or
xchg
cmpsb
pop
mov
into
ficompl
sarl
push
popa
pop
fldcw
push
and
inc
cltd
inc
ret
call
xchg
mov
xchg
jo
das
mov
inc
push
mov
ret
xchg
and
dec
outsl
insl
insl
lahf
mov
cli
jle
pop
cmp
or
repnz
xor
dec
xor
sub
jo
movsl
sar
sahf
dec
out
mov
jns
cmpsl
ret
cli
xor
pop
test
dec
aaa
push
shlb
or
lret
add
aas
fnsave
mov
out
or
cltd
stos
mov
cmovp
pop
repz
scas
sub
cmp
add
movsb
loopne
std
test
xor
testb
xlat
adc
push
fcompl
sub
enter
xor
cmp
push
pop
sbb
outsb
sub
mov
xor
out
or
jbe
pop
xlat
mov
jp
divl
jno
xchg
fbld
sbb
pop
mov
sbb
xchg
out
mov
cmpsl
daa
lock
push
inc
xchg
push
or
cmpsl
jp
ret
sub
es
out
cs
cmc
jne
jo
fistps
push
mov
jae
daa
test
enter
add
xor
jge
push
popa
daa
rclb
or
sti
xor
and
pop
dec
pop
pop
adc
inc
pop
jo
or
inc
xchg
stos
stos
insl
int3
jmp
fmulp
call
lds
out
inc
pop
pop
lret
sbb
loop
jnp
imul
data16
test
mov
mov
adc
test
decb
movsl
push
rorb
pop
sbb
sub
js
int
jl
sbb
adcb
test
xlat
sub
add
dec
dec
ret
jmp
mov
xchg
in
mov
push
imul
mov
imul
lret
movsb
fwait
jp
xor
pop
dec
lods
adc
ds
sbb
pusha
repnz
jbe
std
lds
or
jae
movsl
pop
xchg
enter
jns
jl
inc
push
bound
mov
out
les
and
push
pop
inc
bound
ror
push
inc
xlat
dec
xchg
pop
outsb
xchg
sub
daa
call
push
pop
lea
dec
je
cmpsb
stos
mov
mov
fwait
ret
out
sub
cwtl
rorb
out
mov
mov
mov
lcall
sub
mov
pop
ljmp
jno
pop
sahf
pusha
mov
sbb
mov
into
sti
das
push
xchg
lods
into
sar
add
je
call
mov
jg
mov
lcall
sti
les
je
ss
jmp
pop
jmp
sub
pop
popa
cltd
inc
mov
lahf
push
dec
fwait
jns
push
in
pop
stos
stos
cli
mov
xor
dec
fsubrl
out
pop
scas
cmp
mov
lcall
or
stos
push
negb
test
out
mov
xchg
popf
add
add
inc
push
mov
mov
or
and
loope
sti
shrb
mov
out
push
mov
fs
cmpsb
pop
sub
lods
xchg
xor
xchg
and
push
cwtl
and
mov
jecxz
dec
xor
lret
mov
mov
mov
adc
dec
outsl
out
cmp
sti
or
mov
sub
movsb
mov
inc
cmpsl
arpl
adc
lock
ja
xchg
jo
dec
insb
sbb
out
push
inc
cmp
mov
outsb
jecxz
mov
jge
cmpsb
mov
cmc
jp
iret
xor
jnp
in
mov
and
mov
into
mov
cs
aaa
sub
lea
jl
xor
idiv
push
arpl
adc
add
mov
sub
imul
stos
cmc
xor
inc
or
scas
xlat
xor
inc
inc
sbb
loope
xchg
addl
sub
jl
sub
imul
clc
dec
mov
and
leave
pop
push
mov
push
mov
xchg
xor
xor
shll
int
or
lods
cmpsl
jle
je
mov
pop
push
jecxz
mov
mov
jecxz
pop
dec
out
sahf
jnp
mov
or
rcr
outsl
and
jae
push
inc
jg
lahf
movnti
adc
cmp
cmpsb
or
fs
fmul
cmpsb
sub
or
popf
and
cmpsl
fimull
out
in
jecxz
out
mov
mov
sub
popa
jno
or
loope
push
mov
fiaddl
mov
fwait
mov
adc
lret
pop
arpl
addr16
dec
test
ret
lea
dec
push
loopne
outsl
sub
adc
push
add
or
or
push
xchg
out
test
mov
repz
ss
aas
and
xor
and
call
mov
sub
cmc
fidivl
xchg
xchg
or
pop
mov
aam
cmpsl
rolb
scas
cmp
in
pop
sub
ja
dec
mov
mov
scas
mov
or
push
aam
pop
cltd
cmp
jge
inc
mov
and
xlat
movsb
sbb
mov
push
add
dec
imul
outsb
ret
mov
out
xchg
inc
sbb
push
xchg
ja
jecxz
pop
xor
cmp
dec
lret
xor
sbb
adc
mov
punpckldq
outsl
adc
mov
int
enter
jp
out
rorb
fisubl
out
push
cmp
and
or
hlt
cmp
pop
lret
xchg
cmpsl
xchg
enter
inc
mov
mov
imul
mov
dec
testb
sub
cmp
mov
add
shll
pop
cmpsl
in
les
fidivrl
clc
stos
mov
adc
add
call
dec
into
lahf
mov
shll
pextrw
mov
call
dec
cmp
std
sbb
inc
sub
daa
inc
cwtl
add
sub
out
aam
jecxz
or
movsl
xor
or
xchg
xchg
sbb
push
out
push
out
pop
and
pop
fisttpll
insl
mov
lds
mov
arpl
aad
pop
sub
sbb
cmp
cmp
xchg
jecxz
scas
push
jle
sbb
enter
movsb
pop
jmp
cmpsl
and
jno
idivl
shl
addr16
cmp
fstpl
fcomps
push
js
push
push
add
int3
in
mov
outsl
mov
or
inc
inc
jecxz
aaa
sub
jb
xor
popf
roll
adc
leave
loope
imul
pushf
mov
sbb
out
in
cld
stos
push
sub
fdivrl
mov
adc
mov
mov
jmp
cmpsb
les
lret
repz
push
mov
pop
in
testb
ficoms
jge
je
add
dec
mov
pop
push
jg
jp
sbb
rclb
sub
js
adc
subb
xchg
stc
sub
cmp
pushl
mov
hlt
xor
lea
jns
iret
add
lahf
cld
push
rclb
into
dec
mov
fsubl
jo
testl
xor
bound
mov
sbb
ds
loop
xorb
dec
call
cmp
xor
mov
adc
sub
jmp
inc
es
iret
fdivr
jb
lret
sbb
ds
push
iret
mov
fiadds
or
xchg
stos
enter
dec
pop
or
xchg
fidivl
scas
pop
xchg
cmp
rorl
mov
sub
pop
movsl
mov
jge
cmp
lahf
pop
in
mov
fwait
add
mov
mov
dec
in
cmpsl
xchg
stc
jne
lea
mov
pop
push
xchg
sti
lock
daa
mov
test
mov
push
cmpsl
inc
xchg
mov
fadds
and
sub
cmc
jmp
test
cmp
add
jmp
fs
movsl
rcrl
mov
loope
out
mov
sub
pop
shr
xchg
sub
dec
jmp
jne
pop
popa
fldcw
inc
fisttpl
shrb
sub
push
push
lds
jge
out
or
cwtl
cmp
mov
rolb
pop
loopne
aas
cmp
adc
loopne
inc
push
add
xchg
mov
jecxz
cmp
and
adc
push
add
cltd
adc
fdivs
or
dec
push
cmp
fstp
jle
jbe
clc
aam
sbb
ljmp
ror
push
jecxz
mov
mov
push
mov
mov
rcl
cmp
and
pop
repz
in
out
mov
sub
add
pop
andb
xchg
outsl
sbb
adc
test
shlb
insb
mov
xor
lret
imul
in
inc
std
std
or
lret
in
push
fstp
out
bound
mov
cmp
aas
or
int3
cmp
outsl
test
pop
loop,pn
pusha
pop
xchg
adc
and
mov
dec
or
or
andl
add
int
insl
xchg
inc
push
pop
xor
jp
dec
lret
leave
jg
xor
cmpsl
sbb
cs
push
mov
xchg
sbb
daa
lock
clc
push
jmp
stc
cmpl
imul
add
ds
mov
push
cmp
push
stc
into
mov
inc
dec
scas
fs
push
stos
jo
in
mov
mov
inc
adc
push
push
jbe
insb
sbb
mov
lods
fs
fwait
aas
in
mov
loop
incl
pop
pusha
jge
in
jne
hlt
adc
ja
or
movsl
xchg
and
stos
icebp
test
out
lods
push
arpl
mov
cmc
or
addr16
icebp
dec
scas
or
mov
xor
mov
stos
cmc
nop
fs
mov
test
ret
jg
inc
or
imul
pushf
xchg
mov
negb
inc
ret
fisubs
cmp
or
mov
push
repnz
pop
mov
or
jbe
sahf
pop
loope
mov
int
inc
sbb
xchg
movsl
or
pop
sub
add
lcall
and
dec
lcall
js
cmp
std
sub
arpl
dec
dec
leave
mov
mov
enter
into
and
pop
or
std
jae
rcll
jg
imul
mov
push
dec
xchg
insl
pop
sub
inc
mov
sbb
jb
xor
push
xor
jbe
loope
and
xor
lods
lret
out
mov
sbb
outsb
ja
mov
cmp
cmp
push
mov
mov
out
out
ljmp
movsl
mov
gs
mov
call
mov
jo
dec
les
push
adc
sti
sarb
add
cmc
push
cmp
and
movsl
cmp
negl
scas
dec
xor
dec
and
pop
sarl
mov
mov
xor
sbb
ljmp
xor
mov
les
mov
cmpsl
enter
arpl
pop
mov
inc
mov
cmp
sub
cmpsb
fs
shlb
movaps
pop
push
cmp
loopne
mov
mov
dec
cmp
xchg
mov
ss
aam
sti
or
in
call
pusha
icebp
sti
sub
mov
dec
jg
mov
inc
lock
sub
xchg
mov
jge
cmp
aas
mov
sbb
mov
pop
push
cwtl
fbld
xchg
add
add
fmuls
pop
jb
xor
js
lods
jl
jne
leave
push
mov
fcoml
das
lret
in
jne
dec
pop
xchg
fcoms
adc
add
sbb
insb
int
dec
jg
fwait
inc
push
push
sbb
mov
mov
movsl
and
sub
add
pop
ds
sbb
inc
mov
fisubrl
addb
addr16
mov
cmp
cli
test
sub
in
xchg
std
into
leave
shrl
xchg
inc
inc
add
into
mov
jno
insl
dec
jmp
in
and
inc
dec
int
sub
ret
mov
cmp
xchg
xchg
push
mov
mov
xchg
jmp
data16
std
adc
and
sahf
ret
add
addl
xchg
scas
stc
push
dec
rorl
cs
popf
out
jecxz
mov
imul
push
inc
fisttpl
rep
adc
int
call
lea
jno
cmp
ret
dec
mov
aas
sub
inc
fidivrl
sbb
shll
mov
das
adc
push
in
cwtl
dec
xchg
sub
push
cmpb
adc
arpl
mov
ja
aaa
iret
fisubrl
mov
lock
mov
outsb
test
cli
ja
jecxz
sarb
jp
jmp
out
shrb
jnp
cmc
loope
or
jle
push
div
push
push
inc
cmp
inc
dec
cltd
lahf
out
adcb
dec
and
xchg
fstp
jns
cs
add
add
xchg
sbb
fs
jecxz
push
stc
lret
add
jns
xchg
sub
dec
jno
dec
push
cmp
and
mov
inc
shlb
inc
int
ss
or
popl
outsb
sub
sub
cmpl
mov
jo
aam
inc
lds
mov
dec
push
fsubrs
mov
adc
out
fldl
int
daa
int3
cmp
lds
in
cmpsl
pop
lods
sbb
dec
lock
clc
mov
shll
int
int
mov
daa
nop
es
mov
mov
sbb
les
or
mov
push
fwait
mov
imul
xchg
mov
dec
add
shlb
or
mov
lret
push
dec
std
stc
adc
andl
add
xor
std
flds
adc
add
jb
push
ret
test
xor
std
pop
sub
push
imul
adc
pop
pop
mov
xchg
mov
cmpsl
jmp
ds
mov
mov
stos
test
shl
xlat
jge
push
sbb
popa
outsl
push
adc
sub
lahf
jl
outsl
or
ret
cs
add
orb
je
jp
or
scas
fsubl
cmp
adc
lret
mov
out
outsl
nop
xor
inc
sti
sarl
imul
roll
addb
inc
rclb
lea
test
mov
mov
clc
dec
cmp
fistpl
cs
test
repz
mov
mov
stos
sbb
mov
mov
stc
ss
punpcklwd
aad
push
out
out
push
jno
cld
pop
push
push
das
filds
xor
js
enter
mov
cmp
in
arpl
iret
enter
dec
or
xor
mov
int
dec
fidivrl
in
mov
std
aam
push
mov
mov
ror
mov
mov
outsl
jo
dec
cmp
adc
sub
es
call
fstsw
dec
out
xor
pushf
cmc
or
mov
fisubrs
lahf
pop
xchg
aas
addl
push
mov
mov
sbb
push
ds
push
jp
jecxz
pop
sbb
xor
inc
push
mov
sbb
insl
shll
movsl
xor
sub
inc
xchg
jo
js
outsl
mov
es
pop
enter
testl
popa
or
cmc
inc
loop
outsl
mov
pusha
xchg
outsb
and
insl
xchg
mov
repz
mov
jmp
repz
or
dec
jnp
pop
mov
adcl
lock
add
xchg
mov
repz
in
add
fidivl
faddl
movsl
mov
push
pop
lods
and
imul
fs
test
loope
ljmp
mov
inc
push
xchg
arpl
mov
imul
pop
hlt
sbb
xlat
in
mov
mov
stos
imul
mov
adc
inc
cwtl
rclb
scas
push
mov
dec
sub
out
mov
sbb
mov
jno
mov
out
sub
arpl
movsl
mov
out
cld
stos
mov
or
outsl
test
sub
mov
mov
jl
test
pop
pop
xchg
fadd
xor
cltd
int
push
mov
icebp
pop
lock
scas
in
xchg
in
adc
jbe
add
fs
aaa
add
enter
jne
cmp
fstpt
fistpll
rcrl
lds
pop
jge
xchg
adc
cmp
jle
and
cmpsb
movsb
pop
cltd
sbb
or
shrl
aaa
add
movsb
rcrb
out
or
mov
ret
add
nop
jnp
repnz
sub
add
shrl
adc
popf
test
loop
daa
mov
or
dec
scas
push
mov
mov
mov
and
and
dec
mov
ret
mov
mov
push
sub
imul
mov
adc
sti
fbld
sbb
mov
into
fucom
mov
addr16
and
adc
sub
cmp
or
cmc
fldcw
inc
adc
xchg
jg
js
pop
cmp
dec
or
ja
test
into
inc
jl
lcall
cmc
lcall
movsb
mov
dec
sub
add
xchg
and
inc
or
add
sbb
clc
loopne
mov
testl
mov
stc
iret
sbb
jae
mov
scas
sub
mov
scas
and
jmp
cmp
inc
fdivs
xchg
int3
outsl
pop
rcl
in
pop
ftst
hlt
pop
xchg
pop
lds
xchg
fcoms
push
mov
inc
add
ds
and
xchg
scas
jne
into
je
lds
enter
and
data16
push
ret
jnp
mov
mov
push
push
inc
jbe
iret
out
jbe
jecxz
cmp
pop
and
and
dec
int3
scas
mov
mov
xorl
lea
std
and
and
sbb
xchg
cltd
stc
sbbb
daa
push
xor
cmp
mull
or
jbe
dec
adc
xchg
in
std
pop
pop
jno
loope
sub
fcmovne
pusha
daa
inc
or
jle
mov
lret
scas
lret
loope
int3
rcl
push
cli
mov
call
push
xchg
sarl
push
into
jp
psrld
sub
adc
rorb
lock
out
jg
icebp
into
xlat
jg
add
and
xchg
std
pop
and
cmp
or
imul
pushl
xor
mov
mov
inc
xchg
sub
aam
aas
and
and
cmc
sbb
iret
pop
jns
test
mov
inc
xlat
hlt
adc
inc
dec
mov
movsl
adc
xchg
insl
mov
pop
add
sbb
lds
and
ljmp
fidivrs
je
jae
dec
xor
dec
inc
cmc
pop
iret
push
shrl
push
aam
sub
sub
stc
mov
cwtl
or
xor
lahf
sahf
adc
je
mov
mov
jg
inc
lret
xchg
push
mov
pop
cmpsb
lock
xchg
iret
push
mov
out
jle
sub
ret
push
sti
and
jmp
xor
mov
xchg
hlt
adc
pop
in
or
fldt
andb
pop
mov
jno
mov
ja
mov
add
dec
mov
sbb
hlt
mov
push
mov
push
rcrb
mov
pop
mov
ja
daa
xchg
push
sub
std
adc
mov
and
xor
stc
sub
not
push
addr16
sbb
dec
out
dec
iret
shrl
xorl
in
add
pusha
cmp
stos
insl
jne
push
push
in
push
cmc
stos
aad
in
xor
sbb
into
fdivr
ficoms
jge
sbb
shlb
add
or
scas
push
dec
or
jg
movsb
xor
mov
and
outsb
cmpb
inc
pop
or
adc
mov
js
dec
add
nop
rorb
pop
test
ds
mov
push
std
xchg
scas
out
jae
mov
mov
scas
sub
in
bound
lods
mov
fbstp
mov
inc
xor
mulb
ljmp
test
mov
lahf
fsubrl
aam
lcall
mov
pop
push
in
clc
sub
hlt
sti
repz
ljmp
pusha
in
or
repz
fcmovu
xchg
adc
push
mov
cli
add
xchg
push
xor
dec
data16
xor
push
lds
loopne
sahf
and
outsl
jmp
cmp
mov
mov
loope
sbb
sub
aad
push
imul
push
enter
outsl
jmp
into
dec
jnp
xchg
dec
les
push
mov
push
dec
jb
addr16
pop
cs
push
popf
cld
jecxz
sbb
repz
mov
adc
shlb
loope
jb
aaa
mov
fisttpll
sbbl
test
dec
mov
iret
fidivrs
mov
outsb
sbb
rolb
add
leave
cmpsl
xchg
xchg
inc
loopne
adc
fstl
dec
mov
repnz
ret
mov
sti
mov
fwait
sub
jle
push
scas
or
cmpsb
inc
pop
add
xchg
mov
pop
in
ss
fwait
rcl
cmpsb
pop
adc
loop
mov
gs
dec
lahf
cmp
jno
mov
lods
das
sarb
cmp
mov
sub
push
dec
popf
faddl
lahf
pop
xchg
scas
mov
or
lds
pop
cmc
mov
ljmp
xchg
or
bound
sbb
push
fisubrs
jle
mov
inc
dec
push
hlt
lods
jg
lahf
mov
sub
push
or
cmp
adc
lea
fcom
dec
cmp
scas
or
push
jmp
push
push
mov
or
or
jae
dec
pop
cltd
jge
mov
loopne
cmp
aaa
sbb
fisttpl
xlat
imull
sarl
dec
imul
jmp
add
arpl
sub
aam
xchg
aaa
bound
cmpsl
pop
and
insl
dec
cmp
pop
call
ret
mov
je
sub
lret
pushf
mov
call
testb
outsb
fidivs
cmpb
mov
cmpsl
iret
mov
mov
and
push
jne
mov
sbbl
mov
sub
add
push
adc
std
xor
fsubrs
xchg
aam
mov
ret
daa
cmp
scas
ja
aam
mov
inc
pop
adc
xlat
ret
fisubl
mov
pop
hlt
mov
add
jp
xor
mov
sahf
hlt
mov
cmp
fadds
and
sub
mov
jns
insb
out
sbb
clc
jne
je
mov
mov
std
add
inc
add
mov
jo
pop
out
je
inc
dec
inc
int3
dec
inc
sti
pop
ss
xchg
mov
inc
lret
sbb
adc
fs
ds
imul
xchg
sarb
push
fwait
xchg
bound
sbb
shlb
jp
jbe
cltd
fimuls
addb
xor
inc
xchg
pop
mov
gs
out
movb
enter
shl
xchg
ja
ret
fsubs
sbb
xor
push
lock
mov
sub
dec
cmp
xchg
jp
fmull
push
jle
call
sarl
in
in
or
ss
mov
icebp
pop
or
je
addr16
call
sub
in
sbb
add
fldenv
fiaddl
push
iret
cli
daa
iret
sub
push
icebp
cmp
and
hlt
fnstcw
cmpsb
lret
push
enter
divb
sub
test
pop
nop
repz
xor
inc
push
xchg
gs
adc
mov
adc
shrb
xor
loope
adc
inc
pop
insb
std
imulb
and
ret
adc
lods
adc
aas
in
mov
adc
add
ret
es
inc
dec
ret
or
test
sbb
ds
pop
xlat
xor
mov
and
into
or
cltd
scas
adc
test
mov
mov
jo
lcall
repz
cli
outsb
fnsave
push
jno
push
cmp
call
sub
push
les
fs
adc
into
fs
sub
adc
test
inc
pop
rcll
cmp
adc
add
sbbl
dec
loop
aam
adc
mov
fwait
mov
aas
push
xchg
hlt
jmp
mov
cmp
leave
lret
frstor
xlat
fmuls
mov
pushl
adc
dec
mov
loope
ja
jns
pop
pop
lock
popa
mov
mov
xchg
nop
pop
xchg
inc
or
icebp
xor
pop
cld
push
das
dec
jnp
clc
push
sub
xor
ja
push
xchg
xor
xor
fwait
ja
sarl
popa
inc
test
in
push
xchg
add
mov
ret
ret
shrb
je
addr16
pop
sbb
arpl
sbb
lret
std
or
pop
shr
iret
daa
jne
xor
lock
push
mov
cmp
call
mov
inc
or
or
pop
int
jnp
inc
or
jg
xor
jns
pop
cmp
imul
sub
mov
mov
push
jno
ret
in
fdiv
mov
mov
inc
push
or
ds
sub
mov
insl
imul
dec
mov
add
fucomi
call
movsb
sar
scas
mov
push
fisubs
push
pop
dec
or
adc
fidivrs
fwait
xlat
sub
outsb
inc
dec
addr16
add
shl
mov
mov
adc
ret
popa
cmp
xor
cmp
cmp
push
subb
sti
and
adc
outsl
pusha
mov
push
push
ret
pop
xchg
imul
add
fsubr
mov
push
imul
insb
insb
jmp
insb
cmp
xchg
mov
nop
inc
cmp
push
out
mov
xchg
das
xchg
mov
xchg
popa
loopne
push
mov
shll
or
daa
sbb
mov
jle
push
idivl
lcall
jae
mov
in
mov
sbb
out
push
pop
inc
popf
out
clc
jo
xlat
mov
leave
jmp
inc
ds
in
xorl
addr16
mov
inc
sub
sub
cmp
das
lcall
xor
pop
sarb
ds
push
fsubrl
or
ljmp
aas
cmp
movsb
pop
aam
pop
lods
jmp
mov
mov
popa
inc
stos
xlat
jp
icebp
std
clc
mov
cmpsb
sbb
call
sub
sarl
push
scas
xchg
mov
into
out
psubq
out
xchg
cmp
movsb
mov
push
xor
jns
jne
cli
adc
roll
or
xor
cmp
push
and
fldt
sub
adc
leave
lock
inc
mov
mov
das
inc
test
fadds
lret
repz
ljmp
loope
push
int3
pop
das
lret
pop
sub
xchg
or
adc
es
loop
cmp
imul
popa
mov
mov
jge
in
out
fadd
cmp
movsl
inc
mov
clc
inc
aad
data16
imul
lods
cld
aaa
xchg
fsub
cli
hlt
inc
mov
pop
cmp
mov
mov
lret
push
aad
xchg
imul
lods
shr
testl
imul
cmp
into
sbb
mov
pop
pushf
hlt
in
outsb
adc
add
xchg
xchg
pop
lret
ja
jg
ss
jle
mov
sbb
testl
sub
mov
mov
add
push
sub
out
cmp
andl
mov
xorb
mov
movsl
inc
push
xor
jb
mov
sbb
mov
push
xor
and
cmp
pop
inc
lret
lock
cmp
sbbl
pop
pop
pop
xor
sub
sbbb
xor
ret
lea
insb
xchg
inc
insl
dec
movsl
fcompl
dec
clc
mov
jne
aaa
daa
mov
out
xor
xchg
cmp
aad
jo
mov
shrb
xor
imul
adc
lahf
cmp
clc
rcll
or
in
shll
inc
sarl
push
test
push
and
ja
mov
movsb
adc
mov
push
jne
xor
loopne
cltd
xor
jmp
sbb
inc
mov
cmp
nop
adc
mov
out
pusha
testb
pop
iret
sbb
push
out
repnz
xor
inc
mov
cs
data16
mov
pop
mov
mov
push
sub
xorb
lock
test
sbb
lods
fst
je
and
cld
dec
cmp
fndisi(8087
rcrl
mov
cmpsl
pop
mov
push
jmp
stc
jl
mov
shlb
movl
cli
fmuls
adc
ret
daa
mov
call
mov
cwtl
mov
mov
adc
and
adc
popa
or
cmp
aas
pop
xchg
fldt
mov
dec
rcl
pusha
sarb
shr
mov
pop
xchg
test
jl
dec
insl
int3
cmp
test
dec
and
cmpb
movsb
iret
fdivs
xor
shll
and
jae
pop
lds
adc
sub
jo
add
inc
lcall
movsl
test
in
lods
fcmove
or
bound
fs
pop
out
lret
call
call
or
daa
lahf
or
in
mov
or
bound
push
out
xchg
ljmp
pop
sbb
outsl
jg
aam
mov
fmull
add
mov
in
stos
and
stc
popa
shll
insl
xchg
aaa
cmp
movl
fwait
add
push
dec
adc
cld
iret
sub
jp
jns
loopne
adc
lret
mov
ds
adc
mov
xchg
mov
mov
lahf
lds
cmp
testl
into
daa
xchg
jbe
xor
fidivs
xor
push
adc
shlb
push
fmuls
and
adc
xchg
or
stc
test
mov
jge
mov
movsb
jecxz
xor
xor
push
jne
in
push
inc
jg
enter
arpl
inc
mov
or
test
or
mov
ljmp
pop
mov
call
jbe
inc
in
cs
ja
jle
jl
cmp
pop
aaa
lret
or
mov
loop
insb
mov
add
out
jge
xor
lods
xchg
fadds
ljmp
or
imul
mov
push
sbb
xor
and
jnp
mov
jle
xchg
mov
pop
mov
int3
icebp
adc
sbb
jb
stos
sahf
push
dec
add
adc
mull
in
pop
roll
je
pusha
mov
test
inc
add
xchg
sub
inc
or
bound
fldl
lods
inc
xchg
sahf
call
outsb
loopne
add
pop
shll
into
daa
and
fidivl
sahf
fs
in
lock
lret
insl
add
hlt
push
sub
faddp
mov
movsb
sbb
bound
ds
in
inc
push
lahf
fwait
dec
pop
pop
shll
sub
aas
cmp
cmp
sub
mov
cmp
aad
jg
in
fildll
push
or
js
lods
or
xchg
mov
rol
arpl
faddp
loopne
cwtl
sbb
mov
dec
enter
sahf
and
fsts
mov
cmc
push
jecxz
repz
sub
das
clc
out
adc
out
mov
jp
push
test
cmp
pusha
push
fmull
and
popa
pop
sub
inc
pop
push
movsb
dec
mov
and
and
mov
and
shl
jg
test
addr16
movsl
push
mov
or
mov
into
jmp
mov
inc
or
pop
loopne
mov
adc
pop
ffree
jns
xor
pop
lods
cli
les
inc
dec
adc
mul
fbld
adc
rclb
pop
aaa
hlt
cwtl
in
bound
rol
in
inc
jle
sub
divb
pop
inc
shll
mov
inc
and
dec
dec
sbb
imul
aaa
mov
sub
xchg
push
nop
xor
popa
mov
mov
mov
sahf
add
adc
pop
mov
inc
push
in
loope
cmp
shlb
into
icebp
lods
into
add
push
in
lods
jns
dec
push
mov
or
lret
mov
insl
jne
lods
push
jge
shrl
fidivrl
shrb
and
cmc
jns
push
pop
fiadds
std
inc
mov
in
inc
jge
sbb
inc
push
lea
stos
jno
mov
lret
in
call
inc
fildl
sub
mov
daa
mov
push
cmp
lock
out
xorb
mov
push
int
scas
loopne
nop
xor
and
fsub
push
jno
mov
mov
xor
inc
mov
cltd
sbb
push
xor
mov
lahf
sti
push
pusha
mov
or
jo
mov
int3
add
push
hlt
push
enter
daa
insl
push
imul
addl
cmpsl
aad
jmp
popa
xor
pop
cmc
fwait
xor
jae
dec
xor
lret
test
stc
pusha
cmp
push
stc
rcrl
jg
xchg
mov
negl
inc
dec
je
ds
iret
mov
imul
daa
fisubl
in
ja
jecxz
pop
add
test
icebp
cltd
arpl
push
jle
fcoml
adc
jae
cmp
ja
out
mov
mov
push
clc
insl
dec
insb
rcrl
insl
cmp
testb
jp
repnz
popa
mov
clc
or
in
popf
loope
push
mov
xor
pusha
in
add
out
mov
mov
xor
insl
repnz
inc
inc
rorl
xchg
aam
dec
adc
dec
or
dec
or
xchg
orb
call
mov
push
stc
stc
fisttpll
mov
pop
jo
aad
adcl
cs
cli
scas
pushf
fldcw
xchg
fnstsw
adc
or
insb
js
sbb
dec
and
imul
add
mov
or
sbb
pop
mov
mov
shrl
cmp
push
and
cmp
sub
cltd
loop
test
rorb
mov
jbe
popa
sbb
pop
push
or
xchg
inc
aam
in
in
cmpsl
sbb
or
and
push
mov
cmpsl
pop
in
jns
int3
das
sarb
xor
cmpsb
push
push
xor
xchg
mov
push
add
mov
sarl
push
fs
fisubl
pusha
pop
insb
shll
ja
cmp
out
bound
outsb
je
mov
adc
xor
js
sbb
or
mov
or
sub
or
and
in
hlt
sahf
dec
mov
test
adc
mov
push
mov
add
jno
scas
sbb
std
ret
bound
out
fnstsw
fistpll
jb
addb
adc
or
inc
mov
adc
and
sar
repnz
jne
imul
fstpl
mov
mov
or
xchg
or
jp
jo
in
jge
adc
ja
test
out
mov
mov
out
data16
outsl
xor
fnstsw
mov
cmp
repnz
mov
mov
xchg
xchg
jb
loop
mov
gs
popa
cmp
bound
daa
sbb
xchg
or
in
inc
inc
sti
push
stos
sar
ss
mov
sbb
jno
add
stos
mov
pop
sti
mov
jmp
ja
push
cmp
or
cltd
sbb
fwait
vmwrite
dec
mov
fs
xlat
pop
lock
enter
outsb
mov
mov
scas
adc
add
mov
nop
adc
mov
adc
mov
push
repz
pop
or
jns
add
fwait
push
test
bnd
xchg
pop
mov
mov
mov
das
xchg
dec
aas
das
mov
jne
push
fisubrs
arpl
iret
fisubl
fisubl
push
cmpsb
daa
out
mov
loop
mov
popa
das
pop
adc
push
cmpsl
xor
or
jnp
and
gs
lcall
mov
cmp
jle
cmpsb
fistps
sub
sbb
cltd
push
jmp
push
lcall
xchg
in
je
mov
jns
dec
fdivrs
jg
jge
leave
stc
cmpsb
into
cmp
out
ljmp
mov
insl
ja
dec
pop
mov
fists
fmuls
push
test
ret
sub
adc
scas
add
inc
jno
dec
and
imul
sbb
repnz
xchg
or
adc
jnp
mov
mov
jb
and
scas
lods
xlat
std
pop
bound
rcr
jl
sbbl
roll
xchg
xchg
cmp
mov
jmp
jmp
cltd
or
test
push
add
sbb
fmul
jo
iret
xchg
jmp
mov
push
sbb
movsb
jg
lods
scas
jns
cmpsb
cltd
sbbb
in
add
and
adc
push
js
push
mov
movsb
in
cmpl
cmpsb
test
shlb
popf
adc
dec
movsb
fsubl
sbbl
mov
xor
popf
enter
add
or
mov
adc
fcomi
mov
ds
repnz
inc
mov
aad
hlt
mov
inc
cmp
loope
add
inc
mov
fldt
adc
leave
imull
sbb
fcmovne
pop
mov
and
pop
das
movsb
aas
adc
adc
es
in
mov
push
ss
sti
test
add
sub
repnz
or
dec
int3
fldenv
bound
setge
inc
push
lock
icebp
pop
push
aad
jnp
in
mov
add
jge
dec
xchg
out
mov
xchg
leave
stos
or
sbb
mov
push
pop
xor
mov
loop
fiaddl
mov
fnclex
repnz
stc
jbe
jp
cld
jne
out
push
addr16
push
inc
add
popf
fs
jp
icebp
or
jbe
sub
insl
mov
out
loope
iret
pop
sbb
ret
lret
mov
jnp
add
aaa
sub
call
dec
cli
cmpsl
jns
int3
xchg
ds
pop
pop
jno
leave
inc
push
dec
icebp
cli
lret
lret
add
lahf
out
inc
xor
ret
jnp
fcom
jae
ror
cmpsl
hlt
jb
std
pushf
aam
fisttpl
loop
enter
js
mov
fs
test
cld
adc
fbld
adc
nop
shr
lock
pop
lods
movsb
movsb
push
adc
mov
enter
sub
subl
dec
shll
clc
imul
jge
hlt
dec
les
xlat
sbb
jmp
jnp
xor
repnz
test
xchg
jo
push
or
cmp
or
and
inc
dec
xchg
call
xor
add
add
icebp
iret
cmp
mov
push
jno
mov
dec
lea
push
mov
lcall
xchg
ret
mov
inc
mov
sbb
fbld
out
and
adc
lahf
add
jmp
sbb
les
cmpsb
int3
lret
jno
insb
adc
cmp
dec
into
push
test
add
dec
add
sbb
js
rcl
mov
push
pop
sahf
fwait
push
jo
daa
add
cltd
mov
pop
outsb
add
pop
ds
push
fiaddl
les
cltd
fwait
movsl
vsubps
mov
outsb
data16
aad
mov
insl
xor
das
pop
test
movsl
jne
ret
sub
mov
and
popf
jb
jmp
cmc
test
fsub
cmp
pop
repz
testl
sbb
cmp
insl
sub
and
push
and
push
adc
mov
mov
push
push
repz
ficomps
mov
imul
scas
out
push
push
cs
sbb
or
push
popa
sub
rol
push
dec
adc
adc
xlat
push
and
loope
popa
jns
popf
dec
sub
pop
addr16
or
pop
sti
jo
jg
stos
outsb
incl
xlat
sbb
pop
sbb
and
insl
stos
inc
into
lret
les
jp
shl
cmp
pusha
jmp
movsl
call
fiadds
movsb
pop
dec
jno
into
stos
out
outsl
jmp
xorl
or
ljmp
sbb
fimuls
xor
cmpsb
enter
mov
pop
xchg
xchg
daa
imul
adc
insb
aad
fstps
hlt
sbb
dec
xlat
cld
je
pop
jmp
imul
push
int
jg
push
rol
insl
push
pop
mov
jbe
sub
or
pop
ljmp
fidivl
dec
xor
cmp
jl
dec
mov
dec
pusha
sbb
or
clc
int3
sub
popa
lret
add
adc
mov
sbb
dec
sti
xor
mov
pop
mov
ret
xchg
daa
popa
shlb
and
lods
pusha
testl
and
ljmp
adc
adc
cmp
and
cld
clc
movsb
iret
int3
fs
mov
xor
sbb
cmpsl
mov
jns
xchg
mov
lcall
add
test
pushf
jp
and
sti
in
xor
mov
or
hlt
fistl
sbb
sub
or
lods
lock
or
cmpsb
mov
adc
mov
aaa
jne
mov
cltd
xor
outsb
movsb
daa
cld
add
and
add
lea
mov
push
mov
sub
lret
dec
imul
xor
mov
push
inc
ja
xorb
adc
adc
stos
int
iret
add
rcrl
movq
fdivrl
and
mov
repnz
incl
rorl
popa
sub
shll
aam
decl
filds
insl
js
jno
dec
es
ror
ljmp
cs
jecxz
std
mov
mov
inc
repz
ret
sti
fwait
aaa
xor
setae
jo
dec
fdivrs
in
cltd
aas
imul
dec
pop
lahf
mov
and
push
jb
scas
icebp
lods
out
lcall
movsb
movsb
xchg
stos
sbb
mov
push
pop
push
int3
sbb
cmpsb
mov
mov
pushf
inc
bnd
int3
mov
pusha
mov
fadds
xchg
mov
mov
pop
lahf
jno
insb
js
popa
xchg
test
and
pop
add
fstps
add
cltd
push
imul
xor
sbb
or
movsl
jle
fcoms
xor
std
mov
dec
push
or
push
jmp
mov
cmp
in
test
cmpsb
testb
sbb
dec
lret
and
shlb
xchg
fcmovnb
mov
mov
and
mov
xchg
mov
mov
xchg
in
xrstors
pop
gs
jge
push
mov
mov
sbb
cld
aaa
xor
in
fwait
mov
insb
xlat
xor
add
pop
dec
xor
or
arpl
rcrl
into
ss
push
jb
imul
mov
loopne
cltd
loope
jmp
jmp
imul
lret
push
sub
jne
xor
xchg
std
jmp
test
mov
pop
in
iret
add
scas
sub
mov
aas
jmp
stos
lret
lods
clc
or
cmc
xor
jb
sbb
lret
dec
frstor
mov
jecxz
pop
fisttps
push
mov
bound
int3
push
and
inc
repz
cs
mov
arpl
sarl
push
iret
lahf
inc
into
lods
call
inc
cmp
in
push
inc
lahf
out
sub
bound
mov
adc
sub
mov
std
pop
outsl
mov
fcomip
cmp
mov
repnz
dec
inc
add
adc
mov
add
imull
push
leave
ja
nop
call
lahf
cwtl
pop
sbb
cmp
mov
cmp
dec
jbe
loop
jns
sub
jmp
dec
fs
cmpsb
adc
mov
add
sbb
and
add
or
mov
repnz
cmp
fs
cmp
rcll
push
cmp
inc
aad
and
pushf
movsb
repz
dec
pop
pop
hlt
rcrb
sbb
popf
popf
dec
les
ds
sub
les
stos
mov
xchg
cs
mov
or
inc
xorb
mov
cs
pop
ljmp
xchg
in
fisubrs
add
cmp
pusha
push
jbe
divb
pop
lea
das
xchg
or
outsb
sub
lods
adc
mov
scas
test
jle
cmp
fs
insl
sub
into
sub
out
cmp
out
and
inc
sub
inc
nop
mov
pushf
push
pause
dec
jae
fistps
cwtl
ja
sbb
loope
ret
xchg
addr16
jns
inc
and
push
mov
add
mov
clc
adc
fs
cs
popa
js
insl
mov
ret
bound
pop
xchg
mov
cld
movsb
xchg
xchg
out
mov
sar
sub
out
addr16
sub
mov
mov
jnp
out
icebp
cmpsb
nop
lret
mov
sbb
cmp
dec
mov
sub
dec
cmp
lods
sbb
cwtl
jns
cmp
mov
push
js
dec
rolb
int
incl
cmp
lods
je
cmp
cmpsb
jb
orb
pop
xchg
mov
mov
jg
es
rcrl
xchg
inc
pop
add
mov
inc
lock
sub
jle
fisttpl
dec
fbld
sbb
cli
xor
push
mov
dec
andb
sub
mov
add
into
pop
xchg
mov
xchg
push
divl
mov
mov
jg
xchg
int
or
adc
arpl
lods
pop
xchg
shrb
adc
pusha
push
xchg
fyl2x
in
test
fildll
inc
jbe
out
cmpsb
jb
gs
negb
pop
jg
jle
mov
xchg
fwait
jmp
rcrb
jns
and
adc
mov
sub
test
xchg
sub
data16
les
int3
rcr
addb
fisubs
das
xchg
iret
or
adc
inc
xchg
mov
dec
imul
cli
in
or
inc
inc
dec
imul
stc
mov
xchg
movsb
out
test
imul
cmpb
pop
imul
ror
mov
addl
adc
aaa
sbb
sub
mov
dec
es
mov
repz
mov
dec
sbb
mov
sbb
sbb
fs
push
mov
inc
xchg
sbbl
jb
mov
xor
sub
fwait
mov
pop
lret
dec
enter
mov
rclb
and
les
test
or
stos
imul
outsb
insb
stos
mov
lods
imul
mov
mov
push
push
add
xchg
inc
fildll
cmp
gs
push
lret
xor
in
mov
je
shrl
int3
xchg
mov
or
inc
in
cmc
repz
cs
fdivl
push
in
les
test
cmc
xchg
js
cli
add
push
fcomip
pop
dec
pop
pop
dec
cwtl
fnstenv
xchg
je
out
arpl
add
inc
jg
push
jne
sbb
sti
int3
addb
jle
jmp
push
xorb
call
xor
xchg
wrmsr
movb
dec
mov
dec
pop
push
mov
xor
addl
sar
pop
sbbl
outsl
pop
xorb
ss
add
shlb
jecxz
ljmp
lods
pop
movsb
or
cmpsl
add
cli
dec
dec
jle
mov
shlb
sub
or
imul
lcall
or
jl
xchg
test
mov
lea
jl
xor
jno
nop
cmp
rclb
cwtl
mulb
or
sub
test
lcall
pop
out
xlat
sub
leave
mov
fwait
jns
in
xlat
hlt
fs
mov
inc
lcall
out
xor
adc
cli
pop
sub
lds
test
jo
add
push
jg
pop
sub
inc
sbb
sub
xchg
mov
dec
fisubrl
add
loop
pop
cli
jne
xchg
push
fcomps
movsb
cmpsb
int
pop
push
outsb
push
insb
fisubs
push
xor
mov
inc
mov
push
cmp
stc
mov
cmpsb
push
jns
scas
push
sbb
pushf
mov
or
pop
jo
pop
or
pop
push
enter
xor
and
inc
int
xor
js
shlb
xchg
jb
inc
push
imulb
jle
adc
movsl
mov
mov
lds
inc
loope
insb
addr16
int3
or
cmp
pop
out
testl
jle
rcrb
aad
mov
sub
cld
dec
andb
inc
push
fdivp
popf
aad
mov
bswap
adc
pop
testb
test
and
addr16
or
shlb
jmp
lcall
push
enter
cmc
sti
jp
sbb
or
or
into
pop
daa
dec
or
test
xchg
add
syscall
push
inc
lret
cmpsl
push
in
inc
cmp
jae
sbb
cmpsl
fcomps
cmpsl
call
pop
mov
add
add
xchg
das
sbb
icebp
mov
out
xor
lret
dec
xchg
jbe
or
cmp
mov
sub
jbe
add
stos
mov
jge
pop
mov
arpl
xor
aad
mov
inc
inc
rcl
add
sbbb
mov
in
push
mov
imul
xchg
into
or
sbb
inc
sub
jae
out
es
jg
in
dec
inc
add
xchg
or
inc
xchg
loopne
push
not
fwait
adc
adc
mov
push
mov
arpl
dec
dec
outsb
xlat
arpl
es
pop
sahf
loop
pop
andb
sar
js
mov
mov
into
sub
sub
int3
and
mov
jle
ficomps
shll
jecxz
pop
mov
movsb
or
addr16
ljmp
jne
aas
sub
mov
popa
jp
xchg
in
jno
aas
out
gs
sbb
jge
or
or
adc
leave
adc
add
js
fsub
sbb
mov
insl
arpl
imul
dec
and
cltd
jge
mov
xchg
and
jg
lea
mov
pop
stos
mul
ror
jae
jns
mov
xchg
cmpb
add
pusha
xor
int
jecxz
mov
daa
lret
and
xor
sbb
mov
cmp
xchg
stos
cmpsb
jo
imul
ret
add
jne
rcr
test
jnp
adc
dec
addr16
jnp
or
pop
mov
inc
mov
nop
enter
fs
xchg
ja
lods
shl
jp
jmp
xchg
js
cmp
adc
cmc
or
add
cli
mov
xchg
mov
pushf
lods
mov
pop
test
shl
mov
sbb
sbb
popf
and
fnstcw
les
xor
xchg
aas
popf
lods
cmpsb
imul
add
jnp
pop
mov
cmp
push
and
inc
sub
cmp
addr16
jae
fwait
lock
decl
lcall
jns
push
add
xor
xor
loope
xchg
rclb
push
gs
mov
push
mov
pop
jg
cs
push
cmc
ret
into
lcall
adc
outsl
les
or
into
cmc
mov
gs
ret
add
das
arpl
sbb
inc
inc
jmp
mov
xor
je
dec
aam
dec
mov
test
push
add
dec
cmpl
loope
ja
sub
xchg
negb
stos
daa
add
and
bound
push
fsts
sbb
cltd
and
pushf
cmpsb
leave
sbbl
sbbl
pop
push
push
dec
stos
sbb
mov
lods
or
mov
jp
cmpsl
sub
out
xor
inc
jne
stos
and
pop
sbb
or
mov
jmp
lahf
inc
or
pop
negb
inc
in
popf
cmp
jmp
jns
frstor
cmovg
hlt
pop
femms
movsb
dec
add
mov
stc
ficomps
stos
out
insb
jns
xor
xchg
add
sub
jmp
nop
sar
sbb
add
push
je
jle
add
xorl
xlat
xchg
je
add
test
int3
popf
fwait
push
mov
fnsave
test
or
add
fcom
inc
fwait
pop
fidivrs
push
mov
sub
inc
jne
xlat
push
aaa
dec
lret
aad
es
mov
push
pop
mov
jb
push
data16
mov
lahf
cwtl
push
jmp
mov
inc
pop
das
jmp
adc
dec
add
js
stc
mov
add
or
mov
xchg
cmp
and
xor
cmp
enter
out
data16
into
xor
add
cmp
sbb
fsts
inc
xor
sub
xchg
push
jae
xor
out
clc
xor
pop
ret
sub
in
mov
sbb
jne
test
push
or
pop
sti
sti
add
shrb
pop
xor
pop
dec
dec
dec
push
jns
xchg
shrl
mov
lret
popf
inc
push
sbbl
mov
lock
xchg
enter
mov
push
sub
bound
xor
addr16
std
add
cmp
push
mov
dec
add
loop
in
mov
jge
mov
xchg
xchg
jb
test
dec
ficompl
aam
cwtl
pop
xor
movsl
inc
rolb
xor
mov
push
pop
cwtl
cmp
push
mov
and
gs
sti
sub
jbe
add
inc
movsb
inc
divb
adc
jge
sahf
stc
mov
imulb
daa
icebp
es
xchg
cmc
sub
mov
repz
dec
stos
cmp
rorb
mov
mov
mov
mov
lods
movsl
mov
dec
out
lret
mov
mov
push
lahf
sub
rcr
loop
add
add
out
lret
xor
les
in
leave
fidivl
lods
ja
xlat
movsb
xor
cs
sbb
dec
fs
push
jle
sbb
jns
or
mov
add
or
arpl
inc
xchg
loopne
lcall
mov
add
lret
pushl
in
pop
dec
out
adc
roll
adc
sub
push
inc
lock
les
cs
mov
aas
pop
arpl
iret
in
dec
dec
push
and
mov
mov
or
in
inc
cmpl
pop
cmp
cltd
test
insb
xchg
fwait
and
js
mov
popf
or
bound
dec
faddl
mov
scas
aas
or
and
arpl
and
inc
cmp
jmp
out
hlt
mov
push
popf
cmp
xlat
scas
and
adc
ror
jecxz
jg
xor
lods
je
cmp
xor
into
fcomps
mov
aas
inc
clc
mov
dec
mov
pushf
or
into
mov
popf
lods
fidivrs
das
mov
loop
inc
sub
push
push
scas
nop
cs
mov
lret
ja
or
mov
jb
mov
sbb
xchg
ljmp
in
mov
inc
and
std
ljmp
cmp
mov
jle
xchg
pop
pusha
out
lock
aaa
xor
daa
lods
and
pusha
jmp
mov
out
inc
cli
add
fists
sub
cwtl
push
xor
mov
cs
loopne
lcall
pop
add
pandn
push
ljmp
lret
fwait
out
repnz
test
test
fdivs
xchg
enter
in
fbstp
xchg
iret
xchg
mov
inc
mov
inc
jbe
call
test
mov
loopne
out
cmp
mov
push
mov
cmpsl
clc
or
pop
cmc
add
mov
fiadds
dec
mov
mov
scas
mov
or
stc
call
mov
pop
jecxz
inc
sub
dec
addb
xor
call
lods
xor
loopne
negl
pop
xlat
and
jns
dec
std
and
cmp
adc
mov
jbe
or
xor
jns
int
jmp
nop
jg
jmp
cwtl
shr
jge
pop
and
mov
mov
pop
les
sbb
cmp
out
movsb
cmpb
or
mov
jnp
dec
shll
pop
and
push
popf
xchg
arpl
bound
adc
fsub
xor
and
addr16
pushf
arpl
cltd
sub
stos
inc
jp
repz
jle
addr16
sbb
mov
movl
cltd
test
fwait
repnz
ljmp
iret
outsl
int3
adc
jl
push
mov
in
cmp
adc
dec
mov
daa
pop
jo
sub
fimull
push
mov
sub
insb
lahf
hlt
stc
mov
arpl
xor
push
idiv
jle
aad
mov
cltd
jae
pop
mov
or
ficompl
xchg
es
mov
dec
dec
std
mov
outsb
lods
sbb
cmc
aam
xchg
enter
and
jbe
mov
sbb
adc
lret
rclb
icebp
sub
add
in
xchg
pop
popa
cmp
arpl
adc
cmp
loop
shll
test
sbb
insl
rcr
adc
les
mov
bound
cmp
les
pop
xor
mov
jbe
mov
pop
jnp
rcll
outsb
sub
data16
xchg
in
push
or
sarb
imul
lods
hlt
and
sbb
rcrl
fnstcw
fucomp
std
dec
mov
pop
mov
pop
push
jg
or
incb
cmp
ficompl
and
cli
ljmp
movsl
insb
and
lods
inc
mov
adc
cmp
scas
movsb
in
aam
jbe
pushf
xchg
add
jg
dec
int3
call
insb
xchg
jb
js
mov
cltd
cwtl
sub
sbb
sub
addl
insb
test
test
xchg
test
pop
cmpl
ljmp
cli
dec
cld
mov
mov
pop
inc
adc
pop
mov
jmp
xlat
pop
xchg
faddl
xchg
bound
dec
adc
mov
aas
lahf
xlat
mov
adc
shll
icebp
sbb
pop
outsl
push
xchg
das
mov
ds
rcrl
stos
lds
push
aas
xor
jl
ret
sub
daa
lds
pushf
int
sbb
push
pop
inc
pop
dec
mov
push
loopne
add
lahf
push
lock
mov
adc
or
inc
pop
arpl
lcall
inc
incb
dec
out
push
pop
mov
jge
aad
cwtl
push
lods
into
push
push
dec
insl
xor
in
insb
xchg
lcall
pop
int
push
add
data16
daa
jecxz
sbb
push
test
push
xor
lods
cld
lods
push
fidivs
loope
aas
mov
and
xchg
cltd
push
push
push
xchg
push
push
nop
cmpsb
pop
cmc
pop
loopne
push
lods
iret
and
fwait
test
ljmp
mov
in
daa
outsl
cltd
jo
xchg
push
cs
mov
add
mov
jns
dec
pop
jecxz
mov
sub
pop
lods
sub
mov
mov
ss
pushf
mov
xor
xchg
push
and
xchg
mov
sbb
hlt
lahf
cmp
test
std
sbb
rorl
or
push
dec
mov
xor
fildll
sbb
pop
test
adc
jp
xlat
ljmp
jg
pop
mov
and
ds
lea
out
pop
xor
push
or
dec
or
andl
jnp
inc
test
or
lea
jp
lock
push
xchg
shlb
sarl
loop
rolb
imul
repnz
ljmp
or
lcall
xchg
notl
imul
arpl
das
dec
or
iret
sti
sub
and
out
mov
repnz
or
bound
add
stos
outsb
mov
jmp
sti
test
add
pop
jae
subl
inc
int
daa
ret
push
call
add
pop
xchg
push
lret
data16
loope
pop
add
lds
mov
cld
sbb
or
adc
ret
loope
xchg
jns
in
push
aad
pop
or
pop
push
inc
mov
sub
push
or
adc
adc
fld
dec
fnstcw
dec
cmp
adc
or
or
pop
scas
fidivl
add
clc
jmp
add
push
test
jmp
in
sub
xchg
or
int
into
sub
int3
mov
outsb
sub
push
dec
inc
mov
fsubrl
stos
push
sbb
hlt
aad
push
pop
mov
test
std
mov
push
fcomp
js
inc
in
jg
pop
sub
dec
push
adc
lahf
fwait
pop
out
pop
cmp
addr16
inc
mov
mov
test
pop
rorl
arpl
and
adc
cltd
dec
pushf
inc
jge
sub
fisubs
in
sbb
mov
dec
cmp
shll
aaa
ud0
sbb
jo
icebp
mov
orl
mov
cmp
xchg
inc
xor
ja
xlat
jmp
push
push
mov
fcmovnb
lret
pop
outsb
push
into
lds
cmc
dec
push
addr16
mov
je
hlt
out
sbb
xchg
pop
fwait
mov
aas
aam
sbb
sbb
xor
inc
es
push
nop
xchg
sbbb
jg
sbb
cli
test
ss
push
test
sub
dec
mov
lods
jns
mov
dec
loope
mov
fwait
mov
sub
and
push
sbb
lret
dec
sub
push
cmpsl
rcrb
fs
xchg
les
rcr
add
pop
pop
cmpl
dec
cmpsl
lds
rcrb
xor
dec
lret
ds
mov
test
adc
mov
in
cli
sahf
mov
js
push
add
jne
mov
movsl
aas
jb
mov
mov
loopne
stc
js
add
push
xor
xchg
dec
mov
inc
push
and
leave
push
jae
clc
sti
fwait
dec
add
push
ljmp
sub
shrl
adc
ret
mov
jnp
std
push
pop
leave
out
push
test
roll
xchg
sub
insb
aaa
fwait
sbb
stos
fwait
mov
jmp
mov
dec
inc
pop
mov
push
sahf
cld
sub
into
ds
add
test
mov
xorb
xor
jl
shrb
cs
xor
xor
and
stos
mov
push
jl
sahf
dec
jecxz
enter
cli
mov
adc
test
ds
cmp
aaa
das
out
sub
mov
mov
int3
or
sbb
test
xchg
fucomip
sub
fisubrs
push
pop
gs
ficompl
sbb
sti
lcall
mov
mov
hlt
adc
fildll
es
out
jne
mov
daa
roll
jbe
pop
jl
lcall
jno
xchg
shll
adc
adc
lock
fistpl
lcall
ljmp
or
cmp
push
push
out
mov
in
mov
mov
dec
je
xchg
ds
mov
in
xchg
imul
pop
mov
iret
lea
aaa
push
push
sarl
andb
jmp
not
xor
mov
fldenv
mov
aam
cwtl
cmc
addr16
shr
dec
jb
imul
xchg
mov
leave
sti
je
mov
cmp
pusha
add
xchg
outsl
xchg
das
xor
adc
sti
aas
add
test
jo
in
push
mov
repnz
outsb
adc
ds
push
je
adc
out
das
rclb
sub
jne
xchg
sbb
cmpsb
std
sub
outsb
ret
ljmp
icebp
pop
lcall
outsl
mov
pop
sbb
int
mov
inc
inc
sub
loopne
jp
push
in
cmp
or
cmp
cmpsl
hlt
xor
add
xchg
xchg
or
jae
and
data16
test
rorl
pop
iret
pop
sub
and
fnstcw
imul
in
inc
pop
jle
mov
xchg
xchg
jo
jo
sbb
sbb
and
ret
movsl
sbb
sbb
cmpsb
push
fs
xchg
dec
add
fdivrl
lea
lret
xor
sub
shll
pop
shrl
adc
fcmove
push
shl
xor
mov
mov
xor
inc
lods
adc
mov
dec
nop
cs
push
xchg
xchg
pop
mov
xchg
or
lahf
movsb
jae
out
mov
lea
ds
in
dec
std
dec
mov
pusha
imul
cld
adc
xchg
stos
loop
gs
pop
dec
push
nop
inc
addr16
pusha
bound
xor
push
test
xor
or
out
pop
mov
fsubs
add
in
sbb
outsl
xor
jns
jp
push
bound
rcl
xchg
cltd
aaa
loopne
subb
jno
out
and
mov
mov
xchg
cs
ss
xchg
fcmovbe
in
int
sub
fisubs
and
xor
gs
push
imul
jecxz
xchg
or
inc
mov
add
xchg
and
lods
loope
das
les
movsl
xchg
aas
cld
mov
ja
xchg
mov
movsb
jo
inc
jl
mov
pop
xor
pushf
xor
xchg
jb
mov
dec
dec
mov
push
es
gs
mov
cmp
js
clc
popa
pushf
stc
or
movsl
mov
daa
insl
fildl
pusha
pop
dec
out
jge
pop
fwait
mov
iret
imul
negb
testb
mov
ljmp
cmp
mov
push
push
ret
pop
or
rcll
pop
mov
fisubrl
dec
cmc
sub
or
inc
scas
ja
sub
outsl
sbb
jbe
imul
pushf
or
js
fadds
cmpsl
nop
andb
push
outsb
mov
push
addr16
fwait
call
popa
icebp
and
cld
and
cmp
xor
scas
cmc
lods
dec
adc
data16
ret
mov
addb
cmpb
popa
xor
lahf
mov
fsub
mov
pop
xor
pop
shrb
xor
push
jmp
sub
xor
push
icebp
dec
cwtl
imul
pop
pushw
test
call
adc
cwtl
sub
inc
cli
xchg
or
adc
es
adc
push
pop
xchg
mov
cli
out
cltd
dec
test
shrb
pushf
sti
xor
xchg
out
in
mov
add
nop
adc
cmp
iret
stos
dec
lea
sbbl
add
rdpmc
in
scas
pop
lods
push
add
mov
jb
inc
adc
dec
movsb
add
shll
pop
xchg
jmp
mov
out
cmc
xchg
in
jle
adc
fiadds
leave
cmp
rcr
or
push
mov
test
and
int3
imul
jmp
adc
sub
fcmovnu
cs
mov
mov
jmp
pop
jae
cmpsb
les
insb
push
pop
dec
add
mov
insl
xchg
or
test
push
push
cli
out
sahf
hlt
adc
leave
or
sbbb
inc
xchg
popa
adc
pop
sub
pop
daa
sbb
aaa
and
or
stos
aas
xchg
cmp
jne
cld
jp
mov
push
es
push
dec
loop
push
jge
decb
in
fadd
jl
out
cmp
jbe
stc
outsb
lods
in
push
jp
fldenv
pop
xor
sbb
jg
shrb
ret
shl
arpl
loopne,pt
stos
cs
shlb
mov
adcl
mov
test
test
mov
arpl
into
pop
clc
in
mov
adc
jno
or
das
jmp
lret
loopne
mov
int
imul
jns
push
push
mov
hlt
pusha
and
mov
mov
jmp
sub
shlb
sbb
push
ffree
cmp
cwtl
fsts
dec
xor
subb
ret
xor
popa
adc
lret
sbb
nop
xchg
jbe
bound
cmp
and
mov
imul
xchg
shll
stos
int
testl
sub
or
cmpsl
mov
sub
xchg
fwait
mov
outsb
mov
das
pop
mov
sahf
mov
idivb
push
inc
inc
sbbl
out
pop
jmp
cmp
rolb
jmp
ret
add
cmp
xchg
add
stos
mov
sbb
nop
pop
sbb
jno
outsb
imul
pop
gs
adc
icebp
gs
jge
lea
divl
je
lahf
inc
pop
ss
scas
lcall
mov
int
xchg
jp
arpl
subb
xchg
in
repz
or
int3
add
jmp
cmp
dec
mov
stos
test
push
and
into
ret
aas
rcl
xchg
and
sahf
test
jne
xor
pusha
or
lahf
int
sub
adc
iret
popf
add
je
jle
sbb
sahf
push
cltd
dec
arpl
imul
rcrb
mov
or
push
push
and
inc
stos
aam
inc
cmp
xchg
and
je
inc
and
dec
mov
or
daa
jno
aad
aaa
sub
push
out
xlat
hlt
pop
popa
dec
or
or
clc
jae
sub
cmp
sbb
fs
aas
dec
hlt
mov
pop
sbb
fld
nop
push
lea
mov
dec
xor
push
xor
insb
mov
mov
mov
fadd
push
jnp
xor
push
sub
or
inc
or
sbb
sbb
inc
xor
jl
insb
dec
in
push
aam
dec
arpl
xchg
pop
das
orl
call
out
lcall
mov
sbb
mov
popf
pop
outsl
jne
jae
movsl
das
xor
pop
and
xor
and
decl
add
dec
andb
in
std
xor
in
dec
js
push
xchg
xchg
xchg
inc
inc
jns
insl
adc
lock
clc
jecxz
fldl
cwtl
invd
das
inc
mov
xchg
mov
daa
dec
shll
lcall
pop
and
rcrb
mov
sub
shll
clc
jno
popa
sti
or
xchg
adc
sub
sub
outsl
insb
mov
shrl
inc
xchg
leave
push
lock
mov
add
scas
xchg
or
mov
add
into
dec
jb
inc
jge
or
jmp
rolb
mov
pop
mov
xor
and
pop
fcmovnb
push
jo
sbb
stc
cmc
aaa
cmp
and
jnp
cs
lea
int3
hlt
rorl
push
push
xor
push
pop
popa
xchg
or
les
pop
fisubrl
lods
mov
dec
repz
movsl
or
loop
mov
sub
dec
jnp
and
mov
mov
pop
test
cmc
cmp
movsb
or
sbb
icebp
jns
imulb
sub
push
in
or
xlat
jl
mov
xchg
cmp
xor
jne
xchg
pop
and
dec
sub
or
ret
jle
xor
int
lods
negb
test
lcall
loopne
and
cmpsb
mov
lret
jbe
sub
inc
aas
cwtl
adc
aas
jmp
xchg
sahf
test
pop
adc
xchg
pop
jnp
pop
cmp
call
mov
add
aam
mov
xor
pop
pushl
cmp
mov
inc
loopne
aaa
cwtl
xor
xchg
ljmp
cwtl
cmp
aad
mov
xchg
jle
fdiv
lcall
sub
xor
insb
fwait
test
int3
les
jnp
push
call
clc
push
sbb
and
roll
lods
shl
mov
jp
stc
repnz
subb
mov
mov
fwait
cmp
popa
cmp
pop
jne
clc
rclb
push
insl
lea
xchg
push
pop
jnp
inc
rcrl
es
loop
aad
cmp
dec
xchg
fucomi
xchg
cmp
mov
les
aad
sbb
pusha
dec
or
ja
nop
push
add
ftst
mov
addr16
pop
loope
shrb
cmp
add
cmp
jae
mov
mov
popa
imul
repnz
pop
mov
or
xor
push
pushf
add
out
popa
rcr
sub
sbb
push
jno
cmp
pusha
or
mov
push
movsb
lock
dec
mov
and
sbb
pusha
xchg
movsb
push
flds
add
ret
push
lds
pop
and
sub
lret
cmpsl
das
inc
fildll
aad
sbb
cmp
xchg
cli
cld
fnsave
or
js
sub
outsb
out
ret
out
pop
sbb
out
jae
xchg
xchg
inc
pop
mov
test
hlt
int
les
pop
addb
mov
rcrb
frstor
pop
cmp
sbb
loop
leave
mov
adc
dec
sarb
cmp
dec
les
inc
push
ret
mov
push
pop
dec
lret
std
and
mov
xor
push
subl
add
lods
mov
nop
sub
and
push
jno
inc
xchg
out
loop
mov
inc
adcl
loop
sub
insl
push
maxps
add
into
mov
movb
lock
xor
aas
mov
nop
ja
popa
rorl
xchg
inc
cmc
xchg
in
xor
pop
push
and
mov
sbb
sarl
push
pop
fwait
xor
fwait
pop
subb
fcmovnb
hlt
sbb
or
fs
push
sub
cmpsb
sub
or
xor
movsl
xor
push
add
xor
xchg
jmp
pusha
mov
out
movsl
out
divl
add
sbb
enter
dec
hlt
push
xor
xor
test
clc
pop
xor
sub
xor
movsb
das
adc
loopne
xchg
push
es
jge
push
ret
sbb
adc
fildl
mov
call
push
push
dec
sub
imul
ret
add
push
sub
pop
pop
orb
out
mov
sti
pop
jg
subl
lahf
and
out
sbb
jae
pop
mov
mov
popl
loopne
sbb
jne
jne
dec
xor
push
lret
shll
or
ja
clc
push
es
adc
dec
and
cwtl
push
test
clc
inc
sub
push
sub
inc
add
xchg
mov
vpacksswb
mov
push
cmp
dec
mov
shl
xor
rorl
getsec
xor
out
stc
cld
movsl
sub
dec
ret
cmp
mov
movsb
cmp
adc
fimull
or
sahf
adc
scas
test
push
push
sub
sahf
pop
xchg
jle
in
xchg
repnz
mov
sti
test
inc
scas
into
xor
pop
call
push
stc
aaa
aaa
fdivrs
aam
and
out
sbb
rorl
outsb
stc
out
lret
outsb
jae
repz
jge
jne
repz
hlt
repnz
or
push
shl
add
out
lret
dec
and
jb
or
cmpsl
mov
and
pop
xchg
mov
cltd
add
or
faddp
and
pop
sbb
or
icebp
push
sahf
andl
imul
push
in
inc
in
out
add
dec
or
insb
sub
sbb
jg
adc
pop
xchg
orb
roll
xlat
adc
cmpsl
and
stc
bound
shll
dec
imul
push
and
mov
fdivrp
jno
pop
jae
mov
jb
adc
pushl
xchg
iret
inc
dec
rcl
adc
mov
mov
data16
jge
idivb
xor
loopne
jmp
mov
pusha
cwtl
ret
movsl
inc
aaa
sub
insb
in
lcall
fcompl
imul
and
mov
rclb
mov
xchg
insb
scas
inc
pop
dec
sub
jns
out
add
adc
cmp
pusha
inc
jne
or
negb
mov
fs
mov
dec
xchg
loop
mov
dec
and
pop
notl
call
das
shll
test
pop
push
mov
or
shl
xchg
addl
pop
dec
mov
mov
push
push
pop
add
pcmpgtw
fcoml
push
sbbl
jg
jl
mov
popaw
jnp
or
cwtl
cmp
cmova
push
push
inc
dec
mov
test
mov
sti
outsb
sbb
pop
mov
xchg
pop
mov
sbb
mov
dec
cmp
mov
dec
cmp
pop
rorl
lcall
clc
adc
dec
xchg
adc
iret
inc
rorb
xorb
pushf
jbe
push
fsts
jnp
popa
adc
jnp
popf
pop
add
push
sub
pop
cmp
js
inc
xchg
popf
mov
test
xchg
mov
xchg
lea
add
dec
andl
cmc
lods
lods
adc
call
icebp
lret
jno
popa
inc
cmp
test
pop
icebp
pop
inc
outsl
push
lahf
sbb
sti
jmp
daa
in
mov
adcl
add
and
pusha
add
xchg
xchg
ret
icebp
in
xchg
mul
or
mulps
dec
push
xor
mov
sub
in
in
inc
jnp
in
ljmp
aaa
xor
push
pop
mov
adc
add
dec
cli
cld
jne
data16
int3
adc
adc
jno
testl
mov
mov
test
mov
bound
mov
adcl
push
pop
mov
mov
mov
jbe
pop
dec
jp
sti
outsl
test
xlat
cltd
shlb
out
sti
mov
nop
push
and
mov
or
cmovle
add
dec
pop
scas
icebp
ret
adc
ror
mov
ret
rcr
inc
insb
xor
pop
mov
ds
cld
fisubrs
in
mov
shrb
bound
std
sti
clc
shll
jmp
lcall
pop
pop
xchg
push
pop
mov
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
test
or
add
xor
out
push
mov
xor
cmc
jne
push
hlt
xchg
push
pop
pop
push
adc
rcrb
mov
mov
into
loope
sbb
mov
xchg
cwtl
pop
inc
cmp
add
lret
xchg
mov
inc
jle
and
dec
jmp
add
adc
xor
ljmp
mov
sbb
repnz
popa
sti
adc
repz
sbb
out
outsb
xchg
jmp
pop
cli
pop
adc
xchg
popa
ret
jo
push
push
jnp
cmc
ljmp
lret
std
dec
into
xor
ss
inc
jg
jecxz
and
pop
hlt
or
gs
ja
ficomps
push
shl
popa
adcb
mov
jns
ds
mov
hlt
push
jl
mov
cmp
daa
dec
mov
xorl
je
and
mov
push
jb
sub
js
mov
xchg
loop
dec
xchg
inc
cmc
jl
in
cmc
cmp
enter
and
mov
mov
jb
sbbb
xchg
inc
sub
mov
sarb
pop
in
pop
push
icebp
xchg
out
rol
xchg
ret
jp
mov
aam
mov
xor
out
test
cmp
pop
or
adc
adc
enter
mov
cmpsb
xor
orl
dec
sub
out
inc
xchg
ds
lret
cmp
or
shl
push
test
jo
lret
mov
sub
fadds
orl
in
inc
cmp
in
cmpsl
xlat
pushf
xor
imul
aas
pop
sbb
jo
cmpsb
mov
or
add
sub
lahf
mov
in
pop
cmpsl
lock
mov
pop
lcall
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
test
