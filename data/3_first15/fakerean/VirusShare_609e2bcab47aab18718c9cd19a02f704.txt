push
add
inc
clc
mov
lea
push
push
call
add
jne
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
int3
push
mov
push
mov
push
mov
mov
test
je
push
mov
test
push
mov
mov
mov
mov
je
mov
mov
mov
mov
call
cmp
je
mov
test
je
test
js
xor
mov
mov
test
je
cmpl
jne
mov
test
jne
mov
cmpl
jne
mov
cmp
je
pop
pop
pop
xor
pop
pop
ret
mov
test
jne
mov
test
js
xor
mov
jmp
mov
jmp
mov
xor
cmp
je
push
add
mov
call
cmpl
je
mov
test
je
lea
push
push
call
mov
mov
mov
test
je
mov
test
je
mov
mov
call
test
je
cmp
je
mov
mov
push
push
push
push
mov
call
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
lea
push
lea
call
mov
mov
mov
test
je
test
je
mov
jmp
mov
movl
jmp
mov
jmp
cmpl
je
push
call
test
pop
je
push
mov
mov
call
pop
push
call
pop
ret
xor
jmp
xor
mov
movl
mov
push
push
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
test
je
and
mov
call
mov
mov
mov
mov
mov
call
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
movzbl
lea
push
push
pushl
mov
pushl
call
test
js
mov
mov
mov
shr
mov
and
and
cmp
je
test
jne
mov
test
jne
test
jne
xor
pop
pop
pop
leave
ret
lea
push
pushl
mov
push
call
test
js
mov
jmp
test
jne
mov
mov
test
je
pushl
mov
push
push
pushl
mov
call
jmp
mov
mov
test
je
mov
and
or
mov
jmp
mov
cmp
jne
mov
cmpb
je
jmp
push
push
push
mov
push
push
mov
movl
movl
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
lea
pushl
call
andl
lea
pushl
call
andl
lea
mov
mov
lea
lea
cmp
pop
pop
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
test
je
mov
push
call
lea
cmpl
je
push
call
pop
pushl
call
andl
mov
test
pop
je
call
push
call
pop
mov
test
je
mov
push
call
mov
test
je
call
mov
test
mov
je
lea
push
call
test
pop
je
mov
test
jne
pushl
call
pop
lea
call
lea
call
pop
pop
pop
lea
pop
add
jmp
push
call
pop
jmp
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
push
call
test
pop
je
mov
andl
test
movl
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
mov
call
test
je
mov
push
push
push
call
test
pop
js
incl
lea
call
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
xor
test
mov
mov
je
push
call
mov
add
mov
mov
push
call
add
push
lea
lea
mov
mov
movl
call
cmpl
je
mov
mov
test
jne
test
jne
test
je
push
call
mov
add
test
je
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
test
je
push
call
add
xor
pop
pop
pop
pop
add
ret
xor
jmp
push
mov
sub
push
push
mov
xor
cmp
push
je
cmp
je
push
lea
mov
call
mov
lea
push
lea
push
call
test
js
pushl
mov
lea
mov
call
cmp
je
pushl
lea
mov
mov
call
mov
pushl
mov
push
call
xor
cmp
je
cmpl
mov
je
mov
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
js
mov
test
je
mov
lea
push
push
mov
call
mov
cmp
ja
mov
lea
push
mov
call
mov
mov
lea
push
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
mov
mov
lea
push
push
pushl
pushl
call
test
mov
jne
mov
mov
lea
push
push
call
cmpl
jne
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
mov
test
je
cmpl
jne
mov
push
call
ret
push
push
mov
xor
cmp
je
mov
cmp
push
lea
jne
mov
push
mov
call
cmp
je
mov
push
push
call
pop
pop
mov
test
pop
jne
mov
pop
pop
ret
push
call
pop
jmp
push
call
pop
jmp
mov
mov
and
neg
sbb
not
and
test
je
mov
mov
ret
xor
ret
push
mov
push
push
mov
cmp
push
jne
call
test
je
mov
mov
xor
push
mov
add
mov
call
mov
cmp
je
mov
cmp
je
push
lea
mov
call
pushl
call
pop
push
lea
push
pushl
push
push
push
push
pushl
call
add
test
mov
js
mov
lea
call
lea
call
mov
pop
pop
pop
pop
ret
pushl
pushl
push
pushl
pushl
pushl
pushl
call
jmp
mov
push
mov
mov
mov
mov
mov
xor
push
push
mov
mov
mov
mov
push
mov
mov
andw
push
pushl
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
push
mov
push
push
push
push
mov
cmp
jne
pop
pop
pop
leave
ret
cmp
je
mov
lea
cmpl
je
mov
mov
test
je
mov
push
mov
call
test
je
cmpl
jne
mov
add
je
mov
mov
test
je
add
push
pushl
call
lea
mov
mov
cmp
je
test
mov
jne
push
pushl
mov
call
lea
mov
mov
call
push
push
andl
movl
lea
mov
push
call
pushl
mov
push
push
push
call
lea
call
mov
mov
call
xor
mov
call
lea
call
jmp
mov
mov
mov
call
jmp
mov
push
call
jmp
push
mov
lea
mov
push
call
test
je
mov
test
je
pushl
pushl
call
pop
ret
push
push
mov
mov
push
mov
and
cmpl
jne
mov
and
mov
mov
mov
test
jne
or
xor
or
pop
pop
pop
ret
cmpl
je
jmp
pushl
mov
mov
pushl
mov
push
call
ret
mov
andl
mov
mov
pushl
mov
mov
push
call
pushl
call
test
pop
mov
je
pushl
call
pop
mov
ret
push
mov
push
push
push
mov
mov
mov
test
mov
je
mov
push
call
mov
andl
test
je
mov
lea
push
push
pushl
push
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
mov
test
ja
andl
push
pop
mov
test
je
mov
cmp
jl
pop
pop
xor
pop
pop
ret
xor
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
andl
mov
call
test
jne
mov
mov
pushl
mov
push
call
incl
cmp
jae
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
push
mov
mov
mov
push
push
lea
add
lea
add
lea
cmp
jne
test
jne
mov
cmp
mov
lea
jne
testb
movl
je
push
call
add
pop
pop
mov
pop
pop
pop
ret
push
push
mov
cmpl
push
jne
mov
push
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
cmp
je
push
call
test
pop
je
mov
mov
mov
test
mov
movl
mov
mov
jne
test
mov
je
mov
push
call
mov
mov
mov
neg
sbb
and
add
pop
pop
pop
ret
xor
mov
push
mov
call
cmp
jne
xor
jmp
mov
mov
mov
call
test
jne
mov
push
mov
call
test
jne
push
call
pop
cmp
je
mov
movl
mov
mov
mov
cmp
je
push
lea
xor
push
inc
call
mov
cmp
mov
je
jmp
xor
jmp
int3
push
mov
and
sub
mov
push
lea
push
mov
movl
push
xor
mov
movl
call
mov
mov
lea
lea
mov
add
call
mov
push
mov
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
lea
call
lea
call
mov
test
je
cmp
je
mov
test
movl
je
call
mov
mov
cmp
mov
jbe
mov
mov
mov
lea
mov
add
call
mov
xor
mov
lea
mov
mov
movl
add
das
add
and
mov
mov
mov
lea
call
cmp
jae
mov
add
cmp
mov
je
mov
mov
mov
lea
mov
lea
add
call
mov
push
lea
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
mov
mov
cmpl
jne
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
xor
jmp
mov
test
mov
je
addl
mov
mov
test
mov
mov
je
call
mov
lea
call
mov
test
je
cmp
jne
mov
test
je
call
mov
test
je
mov
movl
call
mov
mov
addl
test
je
mov
call
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
test
push
mov
jne
mov
call
mov
mov
mov
mov
xor
pop
call
add
leave
ret
andl
mov
mov
mov
lea
mov
lea
mov
push
lea
movl
call
mov
lea
call
mov
mov
push
mov
call
pop
lea
call
lea
call
jmp
push
lea
sub
mov
xor
mov
mov
push
mov
lea
mov
mov
test
jne
push
xor
cmp
je
push
mov
push
lea
mov
call
mov
mov
cmp
mov
je
mov
push
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
test
mov
add
cmp
jne
lea
call
xor
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
mov
mov
push
call
xor
jmp
mov
jmp
int3
push
mov
and
sub
mov
xor
mov
add
push
mov
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
mov
andl
mov
cmp
mov
jne
push
lea
mov
mov
mov
call
mov
lea
push
call
mov
lea
mov
mov
movl
movl
mov
mov
mov
add
cmp
jne
mov
mov
lea
push
push
mov
call
fildl
fmull
fmull
fstps
flds
fadd
faddl
fistpl
mov
sar
cmp
mov
movl
jl
lea
fildl
mov
fmull
fstps
flds
fadd
faddl
fistpl
mov
mov
sar
mov
mov
add
mov
mov
add
mov
mov
mov
test
jne
test
jne
lea
call
mov
pop
pop
pop
xor
call
mov
pop
ret
test
je
cmp
jbe
push
lea
mov
call
mov
mov
mov
lea
push
push
mov
call
mov
mov
mov
mov
push
push
call
mov
mov
push
push
push
call
mov
mov
add
mov
mov
mov
add
add
push
push
mov
call
jmp
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
int3
int3
int3
int3
int3
push
push
mov
xor
lea
sub
jmp
lea
mov
cmp
jne
cmp
jb
mov
cmp
jne
add
add
add
cmp
jl
pop
mov
pop
ret
pop
xor
pop
ret
mov
movl
xor
ret
push
mov
sub
push
mov
cmpl
push
push
mov
je
andl
xor
inc
testb
movl
mov
je
mov
mov
mov
mov
mov
orl
mov
push
mov
mov
mov
call
mov
pop
lea
push
mov
call
test
jne
pushl
lea
push
mov
call
cmpl
mov
je
testb
movl
jne
testb
jne
xor
pop
pop
pop
leave
ret
push
call
test
pop
je
push
mov
push
push
pop
call
xor
movl
mov
mov
movl
mov
push
push
mov
call
pop
pop
jmp
xor
jmp
cmpl
je
pushl
mov
mov
push
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
xor
mov
mov
mov
pop
ret
mov
cmp
jne
add
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
test
je
add
mov
or
ret
lea
jmp
cmpb
jne
xor
ret
mov
push
call
mov
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
movl
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
mov
lea
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
mov
push
call
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
call
mov
push
call
mov
push
call
add
pop
pop
movl
pop
add
ret
movzbl
and
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
mov
mov
call
test
jne
mov
mov
call
test
je
add
test
je
lea
test
je
mov
push
call
xor
mov
mov
jmp
xor
jmp
push
mov
push
movl
call
mov
mov
test
je
push
call
add
mov
mov
mov
mov
test
je
mov
mov
test
je
push
call
add
testb
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
push
mov
or
lock
dec
pop
je
ret
movl
mov
mov
push
call
xor
ret
push
mov
mov
sub
push
mov
push
xor
mov
push
mov
call
pushl
push
call
mov
mov
push
push
pushl
lea
call
xor
cmp
jne
lea
mov
mov
mov
push
lea
add
call
mov
push
call
mov
lea
mov
test
je
andl
mov
push
mov
mov
push
lea
push
call
lea
push
call
mov
call
mov
cmp
mov
jne
cmpb
je
mov
call
testb
mov
mov
mov
mov
mov
movb
mov
mov
je
pushl
lea
lea
call
mov
mov
mov
cmp
je
cmp
je
cmpb
mov
je
mov
mov
push
mov
mov
push
call
cmp
je
mov
mov
call
mov
xor
cmp
je
andl
mov
orl
cmp
mov
je
push
mov
mov
mov
mov
call
mov
push
lea
push
lea
push
pushl
mov
push
push
lea
call
push
pushl
push
push
call
mov
test
js
mov
test
je
mov
mov
mov
xor
mov
mov
lea
push
lea
push
pushl
mov
mov
push
call
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
lea
push
call
lea
call
lea
push
call
xor
pop
pop
pop
leave
ret
call
cmp
je
mov
mov
mov
mov
mov
lea
push
lea
push
push
pushl
mov
pushl
mov
pushl
push
call
test
js
cmp
je
mov
mov
pushl
mov
call
mov
cmp
jne
lea
call
jmp
pushl
mov
call
cmp
pop
je
push
mov
push
push
pushl
lea
pushl
mov
push
call
mov
mov
movl
jmp
push
push
lea
push
push
push
pushl
lea
pushl
mov
push
mov
mov
call
mov
lea
push
push
push
call
jmp
int3
push
mov
xor
test
je
push
lea
mov
test
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
cmp
jne
mov
ret
cmp
jne
push
mov
test
je
mov
push
xor
test
lea
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
mov
pop
ret
jmp
xor
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
push
xor
cmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
push
call
cmp
mov
mov
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
je
mov
mov
mov
call
mov
mov
mov
pop
mov
pop
ret
mov
call
mov
call
test
je
jmp
push
mov
sub
mov
xor
mov
andl
andw
push
mov
lea
push
mov
mov
mov
push
lea
movl
movl
call
pop
push
call
mov
pop
lea
push
call
pop
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
xor
pop
call
leave
ret
push
mov
sub
push
xor
cmp
je
lea
mov
mov
mov
lea
mov
lea
push
add
push
push
mov
movl
call
mov
mov
mov
add
lea
mov
call
mov
pop
leave
ret
pushl
pushl
call
mov
jmp
push
mov
and
sub
cmpl
push
push
je
mov
add
mov
mov
mov
jl
inc
add
mov
mov
mov
mov
call
mov
mov
test
jne
push
lea
push
pushl
push
call
pop
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
mov
mov
movzbl
mov
call
andl
test
jne
push
push
mov
mov
mov
mov
lea
mov
push
push
call
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
mov
cmp
jne
mov
mov
push
push
push
call
add
test
jne
inc
ret
xor
ret
mov
push
push
mov
push
pushl
or
push
call
mov
push
push
push
mov
call
add
je
mov
movb
mov
mov
push
pushl
push
call
push
push
pushl
call
movzbl
sub
je
dec
dec
jne
push
push
pushl
call
push
push
pushl
call
pushl
mov
push
call
pop
pop
ret
mov
mov
test
je
pushl
mov
push
call
adc
push
lea
sub
mov
xor
mov
lds
dec
or
dec
js
mov
mov
xor
mov
push
lea
lea
mov
movl
mov
mov
mov
call
lea
push
mov
mov
pop
lea
mov
push
mov
mov
mov
mov
call
test
pop
js
mov
push
lea
mov
call
lea
mov
mov
lea
push
pushl
mov
mov
mov
mov
call
push
pushl
lea
pushl
push
lea
push
call
add
testb
mov
jne
testb
jne
cmp
je
mov
xor
cmp
mov
je
lea
push
push
push
add
push
call
and
jne
cmp
jne
pushl
lea
call
cmp
je
lea
push
pushl
call
cmp
pop
pop
je
pushl
call
cmp
pop
je
mov
mov
mov
call
test
jne
cmp
jne
cmp
jne
xor
push
pushl
mov
call
lea
mov
call
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
cmp
je
mov
push
call
mov
inc
repz
add
int
call
add
leave
ret
xor
inc
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
mov
cmpl
push
je
mov
mov
test
mov
je
mov
mov
call
mov
mov
orl
testl
jne
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
lea
push
push
push
mov
call
mov
add
cmp
mov
jg
mov
push
lea
push
call
mov
test
jle
mov
xor
lea
movzwl
cmp
jae
cmp
jae
add
add
cmp
jl
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
cmp
ja
jmp
lea
push
call
mov
add
lea
add
push
push
mov
call
mov
mov
push
mov
call
mov
mov
push
lea
push
lea
push
push
call
mov
cmp
jle
mov
push
call
test
je
movl
mov
mov
push
push
call
add
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
mov
push
push
push
call
jmp
mov
mov
ret
mov
mov
jmp
push
mov
push
push
mov
mov
mov
push
mov
mov
call
test
jne
mov
push
mov
call
mov
push
lea
push
pushl
pushl
push
call
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
mov
call
cmp
jge
mov
mov
mov
test
mov
movl
jne
mov
test
jbe
mov
cmp
ja
mov
test
je
mov
mov
mov
push
push
lea
push
push
push
call
mov
mov
test
js
mov
add
sub
mov
lea
jne
xor
pop
pop
pop
pop
ret
mov
test
je
mov
jmp
xor
inc
ret
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
add
call
mov
test
je
mov
push
call
mov
mov
xor
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
add
cmpb
jne
cmpl
push
lea
je
mov
mov
push
call
add
mov
pop
ret
push
mov
call
push
push
call
test
jns
jmp
int3
int3
mov
test
push
mov
je
mov
cmp
je
mov
push
push
push
call
add
cmpl
jne
mov
test
jne
push
push
push
push
mov
push
call
add
movl
pop
ret
mov
cmpl
jne
mov
pop
ret
mov
jmp
mov
lea
cmp
je
mov
cmpl
jne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
cmpl
jne
push
push
mov
add
cmp
push
push
je
mov
mov
cmp
jae
mov
test
mov
lea
js
movsbl
cmp
mov
jae
mov
add
cmp
jne
mov
mov
pop
pop
pop
pop
add
ret
mov
lea
push
push
lea
lea
movl
call
add
test
je
mov
test
mov
je
lea
add
lea
cmp
je
movzbl
mov
and
sub
sub
cmp
jne
and
mov
shl
add
or
test
mov
jne
cmp
jb
cmp
jae
mov
mov
jmp
push
mov
mov
andl
sub
push
push
mov
mov
cmp
jb
movl
xor
jmp
mov
mov
inc
call
test
je
movsbl
mov
jmp
andl
push
lea
push
pushl
lea
lea
call
test
pop
pop
pop
jne
mov
jmp
mov
jmp
dec
cmp
je
mov
mov
lea
push
push
pushl
inc
call
add
test
je
test
jne
mov
cmp
jb
cmp
jb
cmp
jbe
cmp
jb
mov
mov
mov
pop
pop
leave
ret
not
movzbl
shr
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
test
push
je
test
je
mov
lea
mov
movl
lea
mov
mov
mov
movl
movl
movl
mov
movb
call
test
js
mov
cmpl
jbe
xor
xor
nop
mov
push
call
mov
add
cmp
je
mov
mov
add
add
cmp
jb
mov
test
jne
test
jne
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
push
push
call
add
test
jne
jmp
push
mov
sub
push
push
lea
lea
movsl
movsl
movsl
movsl
call
test
je
mov
mov
xor
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
push
call
pop
pop
leave
ret
push
mov
and
sub
push
push
mov
push
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
lea
mov
call
test
je
xor
pop
pop
pop
mov
pop
ret
cmpl
je
mov
test
je
lea
push
mov
call
mov
mov
push
push
push
mov
call
cmpl
mov
mov
mov
je
push
push
push
lea
call
lea
push
mov
call
mov
lea
push
push
push
lea
call
xor
pop
pop
pop
mov
pop
ret
push
push
push
push
call
mov
push
lea
push
push
push
call
xor
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
mov
call
pop
pop
xor
pop
mov
pop
ret
test
je
testl
jne
call
testl
jne
mov
mov
push
pushl
push
push
call
ret
push
mov
push
push
mov
push
mov
push
push
call
test
js
push
lea
call
mov
mov
neg
sbb
and
add
test
mov
js
andl
push
lea
call
mov
mov
mov
lea
push
push
push
call
test
js
mov
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
mov
call
lea
call
mov
pop
pop
leave
ret
mov
cmp
je
mov
mov
lea
test
jl
cltd
idivl
mov
mov
mov
incl
mov
ret
call
test
jne
jmp
mov
test
je
incl
push
push
lea
call
xor
pop
ret
push
mov
push
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
add
test
je
mov
cmp
mov
jge
mov
call
test
mov
mov
mov
mov
add
add
cmp
jne
mov
mov
incl
mov
lea
pop
pop
pop
leave
ret
cmp
jge
flds
fstps
jmp
push
mov
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
andl
push
mov
movl
movl
call
addl
add
cmp
jne
mov
incl
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
sub
xor
push
mov
mov
mov
cmp
jne
xor
mov
mov
movzwl
movzwl
cmp
ja
cmp
jbe
xor
mov
mov
test
jne
xor
mov
mov
movzwl
movzwl
lea
cmp
jl
shr
push
movzwl
test
push
push
jbe
movzwl
lea
lea
xor
mov
mov
mov
mov
jmp
lea
mov
movzwl
add
xor
mov
xor
mov
mov
mov
xor
mov
mov
movzwl
cmp
mov
movzwl
movzwl
mov
jbe
cmp
ja
test
movzwl
mov
movzwl
jne
mov
movzwl
push
push
push
call
add
cmp
jb
mov
push
call
xor
pop
pop
pop
pop
add
ret
movzwl
cmp
ja
mov
mov
mov
jmp
lea
mov
cmp
je
movzwl
shr
sub
movzwl
add
add
lea
cmp
jbe
mov
add
cmp
jae
cmpw
je
mov
mov
mov
mov
shr
cmp
jae
mov
mov
test
lea
je
mov
shr
and
add
mov
and
mov
shl
or
mov
mov
add
cmp
jbe
jmp
mov
sub
add
mov
call
test
mov
mov
je
mov
jmp
push
call
add
test
je
push
mov
push
push
call
mov
mov
mov
add
push
mov
call
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
push
mov
shr
push
shr
cmp
push
jae
cmp
mov
ja
mov
mov
shl
lea
mov
mov
test
mov
mov
je
cmp
jbe
mov
sub
mov
sub
cmp
jae
cmp
ja
mov
shr
lea
mov
and
mov
shl
add
or
cmp
jbe
mov
mov
mov
add
cmp
jbe
pop
pop
pop
pop
add
ret
mov
sub
add
mov
call
test
je
mov
jmp
cmp
movl
jbe
push
call
add
test
je
cmpl
mov
jne
xor
movzbl
push
push
push
call
mov
mov
mov
add
push
mov
call
add
cmpl
jne
mov
jmp
mov
jmp
lea
cmp
jb
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
test
mov
mov
lea
jbe
mov
mov
test
je
movl
add
sub
jne
mov
add
ret
xor
ret
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
add
mov
test
je
lea
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
lea
sub
mov
xor
mov
push
push
mov
push
mov
xor
lea
push
mov
mov
mov
movl
movl
mov
mov
call
test
je
mov
movzwl
cmp
mov
mov
ja
movzbl
jmp
lea
push
mov
call
push
call
pop
pop
test
jne
lea
push
pushl
call
testb
adc
add
add
inc
mov
push
xor
xor
mov
pop
pop
xor
pop
call
add
leave
ret
fildl
push
push
lea
fdivl
fstps
flds
fstpl
push
push
call
add
lea
push
pushl
or
lea
call
push
pushl
push
pop
call
jmp
push
pushl
lea
pushl
xor
push
call
jmp
flds
push
push
fstpl
push
lea
call
jmp
mov
mov
cmp
jmp
push
adc
add
adc
scas
push
adc
adc
scas
push
adc
cmp
lcall
adc
add
add
add
add
add
add
or
push
mov
and
mov
sub
cmpl
push
push
mov
push
mov
jge
mov
xor
cmp
mov
je
mov
lea
push
push
push
call
test
js
cmp
jne
mov
movl
mov
test
je
push
call
pop
movl
cmpl
je
mov
mov
lea
call
mov
xor
push
lea
lea
movl
mov
mov
call
cmp
je
cmp
je
push
call
pop
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
lea
push
call
mov
pop
mov
cmp
mov
jne
push
push
push
lea
call
lea
mov
call
lea
call
add
call
pop
mov
pop
pop
mov
pop
ret
xor
jmp
push
mov
push
test
je
mov
push
push
mov
call
test
jne
mov
pop
leave
ret
push
mov
sub
testb
push
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
pushl
mov
pushl
call
test
pop
je
lea
mov
mov
ret
push
mov
push
mov
mov
imul
push
xor
cmp
je
mov
cmp
jne
xor
cmp
jne
push
push
pushl
call
cmp
mov
jne
cmp
jne
mov
xor
inc
mov
shl
test
jne
imul
cmp
je
add
cmp
jne
xor
cmp
jne
mov
mov
mov
dec
dec
je
sub
je
dec
je
dec
jne
push
call
cmp
je
pushl
push
call
mov
test
je
mov
push
push
call
mov
xor
inc
shl
not
and
mov
pop
leave
ret
mov
jmp
push
mov
and
sub
mov
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
mov
cmp
je
inc
mov
cmp
jne
call
call
test
mov
jne
mov
mov
push
push
call
test
je
mov
call
pushl
movl
add
add
mov
mov
mov
mov
movl
movl
movl
movl
call
mov
push
push
xor
push
pushl
mov
pushl
pushl
call
push
mov
call
pop
lea
push
push
push
pushl
pushl
push
call
mov
pushl
mov
mov
mov
pushl
lea
push
call
test
mov
je
mov
lea
push
push
push
call
mov
lea
mov
call
mov
pop
pop
pop
mov
pop
ret
pushl
pushl
call
pop
pop
mov
jmp
push
mov
mov
test
jne
test
jne
cmpl
je
push
push
push
mov
mov
xor
mov
call
push
lea
call
mov
push
lea
mov
inc
add
mov
push
lea
call
mov
mov
and
shl
xor
and
xor
mov
mov
shr
and
add
shr
xor
and
and
shl
xor
xor
and
xor
test
mov
jne
cmp
jne
or
xor
pop
pop
pop
pop
ret
shr
and
mov
push
call
test
je
jmp
mov
incl
add
add
adc
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
test
push
lea
mov
movl
je
mov
std
inc
add
push
lea
mov
test
je
cmp
push
inc
add
test
je
testb
jne
mov
sub
sub
test
jge
pop
push
call
mov
test
pop
pop
pop
je
mov
mov
push
mov
push
push
call
lea
call
add
ret
mov
push
lea
lea
movl
mov
movl
call
mov
test
je
mov
mov
push
mov
push
mov
push
push
mov
call
jmp
int3
int3
int3
int3
sub
push
push
call
mov
add
test
je
push
push
push
call
mov
add
mov
xor
pop
add
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
andl
push
push
lea
call
mov
lea
add
mov
push
push
call
pushl
andl
mov
lea
mov
call
mov
test
je
pushl
mov
push
call
mov
lea
call
lea
call
mov
pop
leave
ret
mov
mov
ret
push
mov
push
xor
movl
mov
call
push
push
push
mov
mov
push
mov
mov
push
mov
mov
push
pushl
mov
mov
pushl
mov
mov
push
mov
mov
mov
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
mov
mov
testb
jne
push
lea
push
call
test
je
andb
cmp
je
lea
xor
cmp
mov
lea
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
push
call
add
test
jne
lea
push
call
test
je
push
mov
mov
call
test
je
mov
push
push
lea
push
lea
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
lea
push
call
push
call
test
jne
jmp
movzbl
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
xor
cmp
je
cmpb
je
inc
add
mov
mov
call
test
je
inc
add
incl
jne
mov
mov
mov
call
cmp
je
inc
add
push
call
cmp
je
inc
add
adc
test
je
inc
add
call
cmp
je
mov
mov
mov
call
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
add
and
add
mov
mov
mov
mov
add
add
call
cmp
jne
push
mov
lea
mov
call
mov
cmp
je
lea
push
lea
movl
movl
movl
mov
mov
push
push
call
mov
test
jne
test
jne
cmp
jne
lea
call
mov
cmp
je
cmp
jne
push
mov
lea
mov
call
mov
mov
mov
push
push
mov
call
cmpb
mov
jne
mov
mov
mov
mov
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
mov
cmp
jne
push
call
add
cmp
je
mov
mov
push
mov
call
mov
test
je
mov
mov
push
call
test
mov
je
mov
mov
movb
movb
mov
mov
lea
call
mov
mov
cmpl
je
mov
test
je
cmp
jne
call
test
je
push
mov
call
lea
mov
call
mov
mov
push
call
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
push
lea
call
push
lea
lea
call
lea
push
push
push
call
test
js
mov
test
je
xor
lea
call
test
je
mov
mov
push
lea
lea
call
lea
push
push
lea
push
call
test
jns
cmp
jne
mov
mov
push
push
call
add
or
push
lea
lea
call
lea
push
push
lea
push
call
test
mov
jns
cmp
jne
mov
push
push
call
add
mov
mov
push
push
call
add
lea
call
xor
jmp
mov
add
call
jmp
push
mov
push
push
call
test
pop
je
andl
mov
movl
mov
test
mov
je
mov
push
call
push
pushl
call
lea
call
leave
ret
xor
jmp
push
mov
push
push
mov
mov
push
mov
push
push
lea
call
push
push
push
call
mov
call
test
jne
pushl
rcll
inc
add
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
andl
push
pop
mov
test
jne
cmp
jl
andl
push
pop
mov
test
je
mov
cmp
jl
andl
push
pop
mov
test
jne
cmp
mov
jl
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
pop
xor
pop
pop
ret
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
mov
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
int3
int3
sub
push
mov
xor
mov
call
call
movb
flds
fimull
call
flds
fstps
mov
mov
mov
flds
fadd
faddl
fistpl
flds
mov
fstps
sar
mov
movb
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
sub
mov
xor
mov
push
mov
mov
push
xor
push
mov
mov
mov
mov
mov
call
cmp
je
push
push
mov
mov
mov
cmp
je
mov
mov
lea
lea
push
mov
mov
mov
push
push
mov
mov
movl
movl
mov
call
mov
cmp
je
cmp
je
mov
mov
test
je
mov
add
push
call
add
test
je
add
cmp
jne
pop
pop
mov
pop
pop
xor
call
add
ret
mov
mov
cmp
jne
mov
jmp
test
je
jmp
mov
push
mov
call
add
test
jne
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
push
mov
mov
test
je
mov
test
jbe
andl
push
pop
mov
mov
test
je
pushl
mov
pushl
push
call
test
jns
incl
add
cmp
jb
mov
pop
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
test
je
push
push
push
mov
test
je
mov
mov
push
call
cmp
mov
je
cmp
je
cmp
je
mov
lea
call
test
jne
pop
pop
pop
pop
add
ret
mov
mov
mov
add
mov
mov
test
mov
je
mov
xor
test
mov
jle
add
mov
add
mov
cmp
jne
cmp
jne
add
cmp
jne
mov
mov
cmp
je
test
je
lea
push
lea
mov
call
jmp
mov
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
test
jne
push
push
mov
call
test
je
mov
mov
push
call
test
je
mov
mov
push
mov
call
jmp
xor
jmp
xor
jmp
addl
mov
add
cmp
jl
mov
jmp
mov
jmp
push
lea
sub
add
enter
mov
push
mov
push
mov
push
call
test
je
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
push
push
mov
lea
movl
movl
movl
call
mov
test
mov
je
mov
push
lea
push
push
call
mov
xor
cmp
je
push
call
mov
mov
push
push
push
push
call
cmpl
mov
jne
push
call
andl
pop
xor
mov
cmp
jne
lea
call
lea
call
mov
cmp
jne
lea
call
lea
call
lea
call
mov
cmp
movl
jne
pop
pop
pop
leave
ret
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
push
push
push
push
lea
movzwl
test
jle
mov
mov
mov
mov
lea
push
push
call
and
neg
sbb
not
and
mov
cmp
je
decl
add
cmpl
jg
xor
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
xor
push
mov
add
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
je
pushl
pushl
call
test
pop
pop
je
push
lea
mov
call
push
lea
push
lea
push
push
push
pushl
pushl
pushl
call
add
test
js
cmp
push
mov
pop
mov
mov
movl
je
mov
mov
push
pushl
pushl
push
push
push
push
pushl
pushl
call
add
test
je
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
push
pushl
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
mov
andl
test
je
mov
push
call
lea
mov
andl
test
jne
lea
mov
andl
test
jne
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
mov
push
call
jmp
ret
add
xor
cmp
je
push
mov
add
jmp
mov
add
cmp
jne
push
call
cmp
pop
je
mov
mov
mov
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
movl
mov
movl
je
push
mov
mov
cmp
je
movzwl
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
lea
push
call
mov
cmp
mov
je
mov
lea
push
push
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
movzwl
movzwl
push
pushl
or
push
lea
push
push
call
lea
call
lea
call
lea
call
movzwl
lea
xor
call
mov
inc
and
lea
mov
call
jmp
cmp
jne
testb
jne
testb
jne
pop
pop
leave
ret
mov
add
call
jmp
push
mov
sub
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
push
lea
call
mov
lea
push
push
call
pushl
xor
pushl
pushl
push
pushl
push
call
add
test
js
pushl
mov
lea
call
mov
xor
inc
cmp
jne
mov
push
mov
add
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
push
pushl
lea
push
movl
movl
mov
mov
push
call
pushl
pushl
call
pop
pop
pushl
mov
lea
mov
call
mov
cmp
je
pushl
mov
push
call
mov
pushl
mov
push
call
lea
call
jmp
test
jne
push
mov
pop
push
push
call
jmp
push
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
mov
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
movl
mov
test
jns
push
push
push
call
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
xor
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
int3
int3
int3
int3
mov
mov
cmp
push
je
xchg
testl
add
add
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
push
mov
sub
push
mov
cmp
je
push
mov
cmpl
jne
cmpl
jne
pop
pop
leave
ret
push
mov
lea
push
push
call
cmpl
jne
test
jne
pop
jmp
lea
push
push
push
push
push
mov
mov
call
test
je
mov
mov
mov
call
cmp
jge
mov
mov
mov
add
pushl
mov
mov
call
mov
push
mov
call
pushl
mov
pushl
call
incl
mov
incl
cmp
jge
jmp
mov
mov
call
cmp
jge
mov
mov
push
push
push
mov
call
push
push
push
call
inc
cmp
jge
jmp
push
mov
mov
sub
push
mov
push
push
mov
mov
call
lea
push
pushl
pushl
push
lea
push
push
call
xor
cmp
je
mov
call
mov
mov
mov
call
mov
push
push
push
push
push
pushl
mov
lea
lea
call
mov
mov
cmp
je
cmp
je
xor
inc
mov
cmp
je
cmp
je
cmp
je
andl
cmp
je
cmp
je
andl
pushl
fldl
lea
fstpl
push
push
lea
mov
call
xor
add
cmp
mov
jne
cmp
mov
jne
add
mov
cmp
ja
mov
jb
mov
mov
cmp
jbe
mov
lea
push
mov
sub
push
pushl
call
fstps
flds
push
fstps
call
mov
pop
mov
cmp
mov
je
cmp
je
add
cmp
jg
mov
cmpl
mov
je
push
pushl
lea
pushl
pushl
call
add
cmp
je
lea
push
mov
sub
push
mov
push
call
fstps
flds
push
fstps
call
add
or
leave
cmp
jne
cmp
jne
mov
inc
cmp
mov
jbe
cmp
jae
push
dec
push
lea
call
mov
sub
in
pop
inc
add
call
mov
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
jmp
andl
xor
inc
jmp
mov
jmp
mov
jmp
mov
jmp
andl
jmp
mov
mov
push
push
mov
shr
and
jne
movzbl
movzwl
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
je
xor
pop
pop
ret
call
neg
sbb
inc
jmp
mov
cmp
je
cmp
je
test
jne
pusha
push
call
mov
add
sti
outsl
add
add
mov
xchg
xchg
jmp
cltd
mov
mov
add
xchg
lock
add
xchg
test
add
mov
add
add
lret
out
movsl
push
mov
add
push
push
push
lea
push
push
push
call
add
add
add
lcall
mov
add
add
mul
out
add
nop
addb
mov
jmp
mov
clc
jle
mov
mov
jl
add
in
mov
test
mov
add
std
mov
cwtl
add
repnz
add
add
mov
pop
lods
gs
out
add
mov
add
add
bound
popl
push
push
push
lea
push
push
lea
push
call
lods
xchg
fwait
mov
add
add
pushf
add
loopne
push
ret
add
ljmp
into
roll
add
add
stos
lret
mov
icebp
add
add
xchg
call
movsl
jns
mov
lds
add
mov
mov
lods
add
lea
pop
push
push
push
push
push
push
call
rolb
mov
add
mov
cwtl
xchg
add
into
push
fsubrl
xchg
add
jb
arpl
rolb
add
mov
add
jecxz
jnp
lock
fdivr
xchg
add
shlb
xchg
cmpsl
push
mov
add
in
mov
fldl
ja
fmuls
pop
push
push
push
push
push
push
push
push
push
push
push
call
in
lahf
cmc
add
add
pop
lock
add
add
add
bound
arpl
bound
subl
add
mov
imul
xchg
add
add
pop
call
call
push
push
lea
push
push
push
push
push
push
push
call
add
add
jp
add
add
pusha
add
iret
jle
add
add
int
ja
stos
add
mov
mov
addb
add
jle
mov
addb
add
add
add
leave
add
add
mov
lea
pop
push
push
lea
push
push
push
push
lea
push
push
call
add
add
add
fs
xchg
outsl
outsl
add
mov
add
mov
add
add
into
sub
add
ja
jmp
add
imul
mov
add
repnz
jecxz
iret
add
jle
mov
ja
pop
movsb
xchg
add
xchg
mov
lea
pop
call
push
push
push
push
push
lea
push
lea
push
push
call
mov
mov
add
push
add
repnz
add
lret
in
push
xchg
xchg
push
add
loope
fcompl
add
xchg
in
pop
addb
add
arpl
pop
jmp
push
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
mov
out
add
movsb
mov
call
add
clc
stos
mov
pop
add
in
cmpsl
scas
add
loopne
mov
ret
push
mov
lea
pop
ret
push
lea
push
call
add
mov
cltd
mov
jecxz
cmc
jle
xchg
push
scas
fwait
repnz
add
out
out
loopne
andb
subb
add
scas
mov
sti
lock
lods
add
add
push
add
mov
lea
pop
mov
push
push
lea
push
push
push
lea
push
push
push
push
call
add
mov
pop
xorl
add
mov
rcll
lcall
mov
jns
add
cld
lahf
lcall
and
mov
push
push
push
push
lea
push
push
push
call
popl
jno
pusha
enter
movb
push
pop
ret
stos
mov
cwtl
shll
roll
pushf
xchg
push
addl
jl
add
aam
add
add
pusha
jbe
add
enter
popa
pop
add
mov
lea
pop
add
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
lea
push
call
pop
add
ficomps
add
jno
roll
jne
add
fwait
call
movsl
add
add
lea
ja
add
addb
add
orb
add
add
push
lea
push
push
push
lea
push
push
push
lea
push
call
int
add
addr16
add
js
add
mov
push
lea
icebp
jle
mov
add
mov
aad
fbstp
sub
lock
lods
lea
add
bound
add
cmc
add
fiaddl
fst
mov
add
add
testl
jl
negb
add
mov
lea
pop
mov
xor
push
push
not
add
add
ror
push
xor
add
shl
sub
ror
sub
pop
shl
rol
dec
pop
push
push
push
push
push
push
push
lea
push
call
add
add
mov
add
loope
fwait
cmc
ret
loopne
jo
xchg
test
shlb
add
mov
mov
add
add
push
scas
cmc
add
add
add
test
mov
add
xchg
call
arpl
pop
pushl
call
push
push
push
lea
push
lea
push
call
add
lret
xchg
add
test
loopne
add
add
pop
xchg
aad
add
in
add
cli
lea
add
fiaddl
jns
fs
add
add
add
test
jmp
push
add
test
call
test
test
frstor
add
cmc
pop
mov
lea
pop
mov
push
lea
push
call
addl
stc
add
loop
lds
lea
push
add
out
pop
popl
lret
add
pop
mov
les
mov
mov
add
add
pushf
popf
add
int3
add
add
addl
mov
add
jb
add
add
mov
add
mov
jecxz
xchg
arpl
push
add
push
cli
add
mov
lea
pop
movl
push
lea
push
push
push
push
push
call
mov
pop
in
add
pop
xlat
mov
add
add
push
ja
add
rolb
add
cmpsb
add
add
add
push
addb
ficoml
scas
add
clc
pop
pop
test
add
lret
ja
popf
jo
add
mov
data16
add
mov
lea
pop
lea
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
mov
add
add
add
je
add
add
push
test
popa
jle
mov
aad
add
add
in
sbbl
add
mov
mov
fadd
add
fdivs
add
hlt
lea
pop
push
pushl
push
lea
push
push
push
lea
push
call
add
lods
notl
add
add
icebp
xchg
cli
xchg
sti
add
add
add
pop
jne
mov
add
add
add
push
add
mov
add
mov
jnp
mov
add
xchg
lahf
mov
lea
pop
pushl
push
lea
push
push
push
push
call
add
loope
add
add
add
leave
add
outsl
push
andl
test
xchg
jb
jp
movl
sahf
add
add
add
add
mov
mov
cmpsb
jne
add
popa
test
xchg
add
mov
leave
hlt
hlt
add
mov
mov
pop
cwtl
fiaddl
add
add
add
add
add
add
pop
call
push
push
push
push
lea
push
push
call
out
mov
push
push
mov
lcall
cmpb
add
mov
add
call
fists
add
int
iret
stc
pop
lods
cwtl
mov
lea
pop
pushl
pushl
push
push
lea
push
lea
push
push
push
push
push
call
push
movsl
pop
stos
mov
add
rol
add
xchg
jl
mov
fsubrp
lods
jo
add
add
add
fldl
add
jns
cltd
cld
add
add
add
fldl
add
fstps
mov
and
repnz
add
push
push
add
dec
push
or
not
add
shl
sub
sub
sub
shl
add
pop
sub
shr
sub
pop
push
lea
push
lea
push
lea
push
lea
push
push
push
call
fdivrl
push
lcall
add
pushf
mov
jecxz
add
mov
lcall
add
loope
add
roll
lods
add
add
add
add
add
xchg
add
into
add
enter
scas
jae
add
data16
add
add
fwait
mov
lea
pop
pushl
push
push
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
int
lcall
les
faddp
pop
add
push
mov
xchg
add
add
add
mov
add
insb
roll
jl
je
add
lret
mov
shrb
in
add
push
jmp
je
rcrb
cld
lea
pop
call
push
push
push
shl
push
or
not
add
shl
sub
lea
add
add
pop
ror
pop
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
push
call
cmpsb
mov
in
cli
add
enter
add
add
movsl
out
lret
mov
push
push
outsl
cwtl
add
add
add
add
popf
jge
add
jmp
add
add
popa
mov
add
mov
lea
pop
push
push
push
push
push
call
pop
imul
add
push
add
loope
add
push
add
add
add
add
push
fldl
popa
xchg
add
scas
jns
add
filds
add
add
add
mov
fsubs
test
add
mov
mov
pop
jns
ffree
test
add
add
add
adcl
pop
push
call
push
push
lea
push
call
jp
js
push
push
stos
add
jb
insb
scas
jl
ljmp
clc
adcl
flds
stos
add
icebp
lret
add
bnd
xchg
add
lock
add
add
add
out
add
add
add
push
fadds
add
add
pusha
mov
pop
add
mov
add
lret
mov
or
mov
push
push
lea
push
push
push
push
push
push
call
mov
call
out
push
pushf
pop
mov
icebp
mov
add
add
mov
add
push
fsubs
add
shlb
out
add
push
lcall
add
add
add
add
cmpsl
ljmp
add
loopne
add
shll
pop
add
add
pop
push
push
push
call
test
add
add
mov
mov
add
add
pop
add
pop
lret
test
enter
push
jo
mov
add
jnp
add
push
fnstenv
rcrl
int3
lea
pop
mov
add
push
push
lea
push
push
call
in
add
push
add
stos
fucomp
jmp
add
cwtl
add
jns
popf
lea
leave
test
aad
push
popa
mov
push
cli
jo
add
imul
mov
xor
test
lock
cld
bound
in
stos
jne
hlt
lea
pop
add
add
push
push
push
lea
push
push
lea
push
push
push
push
push
call
testl
movsb
scas
mov
filds
addl
jge
addr16
add
sahf
mov
pop
xchg
outsl
mov
push
loope
mov
add
addl
testb
add
cmpsb
add
mov
lea
pop
mov
xor
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
pop
push
add
testl
jge
leave
mov
scas
clc
jnp
add
add
add
push
pop
mov
cltd
roll
rclb
mov
mov
shlb
rolb
test
int
xchg
add
mov
lea
pop
add
push
push
lea
push
push
lea
push
push
call
add
imul
pop
mov
add
mov
outsl
aad
cmc
add
add
add
add
add
add
lods
jmp
flds
sahf
add
test
add
popa
add
fdivs
cmpsl
add
ficomps
mov
loopne
pushf
push
add
add
add
mov
add
add
xchg
add
jno
hlt
lea
pop
push
push
push
push
push
push
lea
push
push
push
push
call
jnp
mov
fisubl
pusha
pushf
jae
push
fldl
add
mov
add
mov
movsl
add
add
jge
in
add
xchg
jl
add
cmpsb
pop
mov
test
add
add
mov
lea
pop
mov
xor
push
push
push
lea
push
lea
push
push
push
push
push
call
add
mov
jmp
add
add
add
scas
cld
add
add
add
jmp
add
lahf
add
je
mov
xchg
mov
lcall
add
fiadds
mov
lea
pop
add
push
lea
push
call
call
mov
add
xchg
out
lret
notl
in
idivb
add
add
je
push
lahf
mov
pushf
outsl
push
add
popf
add
sti
add
icebp
mov
mov
mov
jecxz
test
mov
xchg
mov
mov
push
mov
lea
pop
pop
mov
push
push
push
push
push
push
push
lea
push
lea
push
push
call
add
add
lret
in
mov
add
fadds
add
add
out
xchg
mov
rcll
jns
roll
out
add
add
roll
add
add
addb
icebp
mull
add
add
add
add
dec
add
test
cli
fadds
jmp
fmull
or
push
lea
push
push
push
push
push
push
call
popl
cltd
add
rcr
je
mov
add
mov
test
fcomps
xchg
scas
add
jge
add
add
aam
mov
add
iret
add
jns
add
xchg
add
addb
add
add
int3
lea
pop
add
push
push
push
push
push
call
int3
rolb
mov
mov
push
add
addb
jns
add
rolb
jb
movsl
add
in
add
std
adc
add
add
jb
xchg
test
movsb
in
add
add
movb
testb
push
add
add
add
rorb
add
fistpl
pop
push
push
out
roll
subb
lea
pop
push
push
push
push
push
lea
push
push
push
push
call
mov
add
add
fiadds
mov
push
popa
rolb
mov
add
push
add
add
add
int3
aam
hlt
pop
add
fwait
add
test
cmpsb
add
movsl
jmp
mov
add
xchg
not
add
pop
add
movsb
mov
lea
mov
lea
pop
mov
xor
push
push
lea
push
push
call
cmc
add
jns
mov
stos
je
jae
int3
lods
call
addl
cld
lods
add
pop
mov
out
add
out
add
sar
add
test
add
add
int3
add
mov
insb
add
add
mov
fwait
mov
scas
test
in
test
add
test
sarl
cmc
mov
jno
mov
lea
pop
sub
pop
push
push
call
pop
add
int3
mov
add
add
scas
add
xchg
add
fs
stc
pop
xchg
add
lahf
int
out
mov
add
in
mov
lods
mov
pop
cld
add
add
push
add
push
mov
mov
lea
pop
rep
push
push
push
push
push
push
lea
push
push
push
lea
push
call
rolb
cli
xorl
add
scas
test
mov
add
push
add
jae
fadd
mov
add
bound
add
mov
cwtl
add
mov
mov
add
test
add
mov
lea
pop
pop
push
push
lea
push
lea
push
call
add
add
add
add
enter
fmul
jle
add
add
repnz
add
add
xchg
fiadds
add
jno
addr16
jnp
add
add
add
cmc
pop
xchg
mov
lea
pop
mov
add
push
push
push
push
call
xchg
add
add
mov
add
rcrb
add
jo
test
ror
roll
add
add
jmp
add
popf
xchg
aad
sahf
leave
jp
rcr
out
mov
add
adc
ret
add
add
push
push
push
push
push
push
lea
push
push
lea
push
call
add
add
pusha
add
into
add
fwait
mov
add
add
lahf
add
subl
push
add
popl
mov
add
imulb
mov
movb
aad
fwait
add
mov
test
add
mov
lea
pop
add
push
push
push
call
lock
push
pop
mov
icebp
add
lea
jbe
add
xchg
xlat
add
add
fldl
hlt
push
add
imul
add
jno
incb
shr
scas
add
enter
into
mov
mov
add
icebp
fadds
add
add
add
fimull
pop
mov
push
push
push
lea
push
push
push
push
push
push
push
call
add
push
add
out
test
add
add
add
out
pop
add
outsl
pusha
jecxz
pop
jp
add
add
mov
mov
add
ret
add
add
std
xchg
loope
fst
lods
scas
add
xchg
out
add
lods
add
mov
lea
pop
xor
push
push
call
mov
ljmp
pop
cwtl
push
add
out
add
add
mov
add
push
pop
add
cld
out
mov
out
add
add
imul
push
add
pop
add
push
push
push
lea
push
push
push
push
push
push
call
add
add
pushf
mov
mov
aad
loopne
mov
cmpb
mov
mov
lea
add
fs
push
add
lahf
loop
ret
add
jbe
addl
stos
add
add
mov
test
xchg
add
rorb
pop
mov
xor
push
lea
push
push
push
lea
push
push
push
push
call
aad
fwait
xchg
flds
fidivl
out
data16
add
add
pop
add
jecxz
add
in
add
push
add
add
in
xlat
add
enter
add
add
adc
pop
clc
add
in
add
pusha
mov
lret
cli
arpl
je
mov
popl
add
jae
add
outsl
lods
sahf
clc
stos
int3
pop
jl
add
add
mov
popa
and
dec
sub
jb
lea
push
push
call
iret
nop
xor
add
add
add
add
imul
cltd
jp
add
push
add
sti
xchg
jnp
xlat
lcall
pusha
shll
loopne
cwtl
add
mov
cld
repnz
fsub
xlat
pop
add
push
lea
pop
add
push
push
lea
push
push
push
push
push
push
lea
push
push
call
loopne
add
add
add
add
pusha
add
mov
clc
in
stos
add
add
lahf
stos
xchg
add
add
add
add
mov
add
mov
add
movsl
mov
mov
xchg
add
sti
add
add
mov
mov
mov
lea
pop
add
push
add
not
pop
mov
push
push
add
push
sub
add
rol
rol
add
not
sub
add
rol
pop
add
pop
push
push
push
push
push
lea
push
push
push
push
push
call
subl
xchg
add
add
add
fsubr
fdivs
loop
add
mov
fwait
add
jae
add
add
outsl
add
movsb
ret
add
jne
loopne
jne
pop
ret
faddl
add
add
mov
lea
pop
pushl
push
push
push
push
push
push
push
push
lea
push
lea
push
call
xchg
add
xchg
mov
add
mov
fcmovne
add
stos
mov
add
add
push
add
add
xchg
add
jle
xchg
iret
out
cmc
add
mov
add
leave
icebp
add
std
add
fcoms
cwtl
mov
pop
add
fs
enter
mov
pop
fiaddl
push
add
xlat
push
add
mov
lea
pop
call
push
push
push
push
call
add
pop
mov
add
ret
cld
loop
shrl
lret
push
add
mov
add
pop
add
cld
add
js
add
out
add
add
popa
mov
lea
pop
push
push
push
lea
inc
add
not
push
and
add
sub
sub
shl
xor
pop
shr
pop
push
push
push
push
push
call
add
lret
loope
add
pop
add
add
add
enter
add
add
pop
push
mov
add
add
pusha
jb
jl
mov
jmp
jecxz
iret
mov
mov
jbe
add
add
mov
int3
test
add
insb
popa
clc
sti
pop
shrl
hlt
add
pop
push
push
push
push
lea
push
lea
push
push
lea
push
call
mov
mov
scas
shll
fcom
xchg
add
add
insb
add
popa
jbe
mov
add
mov
sti
testl
test
scas
insb
add
mov
lea
pop
push
call
push
sub
shl
lea
pop
mov
push
push
push
push
call
push
jns
mov
jno
lds
jecxz
imul
ja
int
test
jo
add
mov
jp
add
data16
lret
mov
add
add
add
out
add
xchg
add
xchg
lods
data16
add
xchg
cmp
push
add
stos
add
fistpll
lea
pop
push
push
push
xor
shl
shr
pop
mov
push
add
pop
add
push
push
lea
push
call
cld
mov
pop
movb
leave
cmpsb
add
add
push
les
add
add
push
cltd
add
add
add
add
aad
add
repnz
popa
testb
add
arpl
icebp
add
enter
add
add
mov
add
out
add
mov
lea
pop
add
add
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
leave
imul
mov
mov
add
add
movsb
mov
add
hlt
mov
stos
popf
clc
mov
add
add
add
add
add
cld
mov
push
scas
stos
add
fs
pop
mov
pushf
mov
add
mov
xchg
push
add
stc
movsb
test
fwait
push
mov
lea
pop
mov
xor
push
shr
shl
pop
add
push
not
xor
pop
push
push
push
push
call
add
add
arpl
sti
insb
mov
fiaddl
pop
cmpb
mov
add
mov
add
add
add
int
out
add
stos
nop
add
push
ljmp
pop
cwtl
jmp
add
rolb
repnz
pop
xchg
int
mov
lea
pop
mov
xor
push
ror
dec
pop
add
push
ror
add
pop
pop
push
push
push
push
lea
push
push
push
push
push
call
xchg
adcl
mov
lcall
rolb
add
out
mov
into
pusha
rolb
popa
add
push
push
add
add
jge
add
pop
add
mov
lea
pop
mov
xor
push
sub
sub
add
pop
rep
push
xor
pop
mov
push
push
push
push
lea
push
lea
push
lea
push
call
lods
out
add
lret
add
add
movsb
add
imul
icebp
arpl
add
add
add
add
data16
je
loope
add
add
lds
notb
int3
jecxz
jmp
add
mov
aad
popa
add
jge
popa
jns
mov
xchg
lret
jae
xchg
stos
add
pop
xor
push
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
pop
in
add
arpl
in
add
je
in
faddl
push
cmpb
push
mov
test
add
adcl
movsb
mov
mov
add
add
loope
test
add
pop
xchg
cmp
mov
sahf
mov
pop
add
push
push
lea
push
push
push
call
mov
add
ret
std
lahf
add
ret
add
mov
aam
cmpsl
nop
pop
js
add
jne
enter
add
mov
add
int3
shl
sti
add
roll
cwtl
add
cld
lea
pop
or
je
push
shl
add
xor
xor
pop
mov
xor
push
push
push
push
push
push
push
push
push
call
enter
insb
rcl
rolb
pop
jmp
add
neg
add
add
loop
add
cmp
add
jl
add
add
movl
lods
les
loopne
add
xchg
fiaddl
push
add
push
add
addl
add
pop
mov
push
push
lea
push
push
push
push
push
push
push
call
rcll
rcrl
lret
mov
add
pop
add
imul
fsubrl
fwait
aad
jne
add
enter
mov
cwtl
stos
into
hlt
fnsave
jmp
mov
pop
mov
jl
add
add
add
stos
out
add
ror
fisubl
popa
push
add
out
mov
add
mov
lea
pop
xor
push
push
lea
push
push
push
call
cmpsb
fs
int3
xchg
push
add
push
add
add
call
addr16
mov
mov
fiadds
xchg
add
add
andl
add
pop
add
push
push
push
push
push
push
push
push
push
call
push
repnz
jp
out
xchg
mov
mov
add
add
mov
andl
add
lods
mov
lea
jne
addb
add
add
jbe
addl
add
lret
test
rclb
jns
out
js
add
imul
mov
lea
pop
add
add
push
not
xor
not
pop
push
mov
xor
push
not
sub
pop
add
push
push
lea
push
call
cmpsl
add
testb
push
lret
shll
add
loopne
loop
mov
ja
add
add
add
aad
add
mov
int
mov
icebp
add
jmp
lods
mov
sti
add
fcoml
add
pop
add
aam
bound
pop
rep
push
pop
mov
xor
push
xor
dec
pop
or
je
mov
push
sub
inc
pop
add
push
push
push
push
push
call
scas
flds
loope
imul
in
sti
out
addl
jle
call
add
add
call
mov
fdivr
fs
shlb
add
jo
add
roll
add
pop
add
rep
push
ror
pop
pop
push
push
xor
inc
xor
push
push
pop
add
inc
sub
lea
pop
sub
shl
pop
push
lea
push
lea
push
push
lea
push
push
call
mov
jo
mov
add
fildll
jnp
aad
add
add
mov
out
bound
jne
movsl
xchg
add
fbstp
cwtl
std
mov
lods
add
movsb
mov
add
add
addr16
sarb
add
add
add
cmpsl
add
pop
pop
mov
push
ror
sub
pop
mov
mov
push
pop
jmp
push
lea
push
push
call
add
add
add
add
mov
movsl
movsb
rolb
imul
add
cmc
add
add
xchg
mov
gs
add
xchg
data16
mov
cwtl
jmp
jmp
jge
cltd
add
add
int3
pop
add
rorl
or
push
push
push
push
push
push
push
push
call
add
mov
add
out
into
push
jle
add
fiadds
scas
adcl
add
xchg
mov
std
rolb
add
push
imul
mov
jle
xchg
add
push
jmp
mov
xchg
add
add
mov
add
pop
stc
push
add
lods
sbb
movsb
add
jb
add
add
mov
add
push
lret
lea
pop
mov
push
push
call
pop
mov
repnz
xchg
mov
addl
xchg
test
arpl
pop
aad
add
addr16
add
fimull
movsb
add
add
add
jnp
push
jge
add
jnp
clc
addl
cmpsb
jb
mov
lea
pop
add
push
not
pop
push
push
xor
pop
push
push
shl
pop
push
push
sub
rol
pop
push
push
push
push
push
call
adcb
lea
push
xchg
pusha
add
add
fdivrp
mov
les
imul
add
add
lahf
mov
add
add
mov
pop
add
mov
add
pop
add
pop
add
cmpsb
ljmp
repnz
stos
movsb
mov
lea
pop
mov
push
dec
pop
pop
pop
push
not
not
not
pop
pop
pop
push
dec
sub
pop
leave
push
push
push
push
push
push
call
lea
enter
mov
jmp
test
jbe
lahf
mov
std
mov
add
in
fld
movb
ja
add
scas
pop
xlat
add
add
add
js
add
bnd
into
add
fildl
mov
lea
pop
ret
push
push
sub
pop
mov
push
rol
pop
add
push
push
push
push
push
push
call
add
call
mov
mov
cmc
jae
imul
add
add
add
add
mov
mov
add
mov
add
aam
ljmp
add
add
add
loop
add
add
in
push
add
test
pop
xchg
add
mov
mov
vsqrtpd
test
fstps
stos
icebp
stos
add
pop
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
lods
push
in
add
clc
shr
add
movsl
lahf
scas
add
mov
les
rolb
mov
add
add
fxam
and
fidivrs
stos
out
test
push
add
lcall
movsb
add
add
xchg
add
add
je
add
pop
add
gs
lret
outsl
jnp
aam
mov
les
push
push
not
shr
lea
pop
movl
addl
push
not
add
pop
test
je
mov
push
push
lea
push
call
test
add
mov
in
addr16
hlt
add
pop
push
popa
shrl
add
orl
outsl
cmpsl
repnz
xchg
add
roll
add
jns
add
add
add
nop
pop
jne
add
jns
fwait
enter
mov
outsl
push
mov
roll
mov
lea
pop
pop
push
shr
not
lea
pop
pop
pop
push
ror
pop
pop
push
add
pop
leave
push
push
push
push
push
push
push
push
call
scas
js
int3
jns
add
add
mov
push
jnp
fwait
mov
arpl
sti
cli
jmp
jb
add
shrl
mov
je
add
rolb
add
stos
add
add
mov
lea
pop
ret
push
push
push
call
add
add
xchg
add
in
cmpsl
add
mov
sti
add
xlat
loope
ror
stos
orl
mov
popa
add
cmc
repnz
mov
push
popa
add
cmc
std
stos
add
add
jmp
jecxz
add
in
aam
add
sar
xchg
imul
add
les
in
add
push
lea
push
push
push
call
add
xchg
outsl
add
add
pushf
add
in
add
add
addl
lock
push
in
xchg
out
test
fcoml
loopne
jecxz
mov
movsl
lcall
mov
lea
pop
push
push
push
push
push
call
test
add
out
jl
add
fcompl
xlat
add
add
push
add
arpl
add
add
fs
cmpsl
add
add
mov
add
add
lret
les
add
lea
pop
push
push
add
pop
push
push
push
push
push
push
call
test
add
add
mov
add
iret
jb
stos
mov
mov
fiadds
jl
data16
add
pusha
jns
xchg
imul
add
add
jp
mov
rcrb
add
add
call
mov
add
pop
push
testl
push
push
push
push
push
push
push
lea
push
push
call
fmull
add
pusha
nop
stc
std
pop
scas
xchg
add
xchg
fistpll
push
js
lock
add
add
int
fcmovnb
add
add
rolb
add
in
fadds
mov
stc
jle
push
lret
fsubrl
xlat
js
int
fdivr
mov
mov
add
popf
std
mov
hlt
lea
pop
addl
push
push
push
push
push
push
push
push
push
lea
push
call
add
add
add
loope
addl
shlb
idivb
xchg
add
add
scas
test
add
jp
add
push
add
jae
add
in
add
idivb
add
std
lock
add
imul
add
mov
lea
pop
call
push
push
lea
push
push
call
add
push
add
add
add
mov
add
add
in
mov
add
cmc
out
jl
mov
add
fcomip
add
addb
lods
add
subl
add
les
imul
adc
inc
cld
pushl
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
jge
add
cmc
mov
add
arpl
mov
in
outsl
jecxz
push
out
add
mov
mov
mov
add
popf
add
add
add
mov
lcall
cltd
mov
roll
sahf
flds
mov
lea
pop
push
push
rol
pop
push
push
push
push
push
push
lea
push
push
push
push
lea
push
call
cmpsl
xorl
add
add
jmp
testb
lea
add
lock
add
sar
add
lret
cltd
mov
lahf
out
lds
add
lock
pop
rolb
add
push
cmpsb
push
add
movb
mov
lea
pop
call
push
push
call
add
iret
add
int
mov
mov
add
jno
add
add
add
add
cld
jo
std
mov
stos
jle
mov
add
shll
mov
xchg
lret
fcoms
add
ja
lock
add
xlat
add
cld
mov
mov
int3
addr16
out
mov
or
jge
add
test
cld
call
adcb
push
push
push
lea
push
push
call
shlb
insb
lea
mov
jmp
xorb
add
add
gs
add
jmp
iret
add
pushf
stc
fdiv
jb
fsubs
loopne
stc
add
cmc
add
pop
pop
push
push
push
push
lea
push
push
push
push
push
call
sbbl
jmp
xchg
rcrb
add
out
pop
nop
jle
call
jno
xchg
roll
mov
leave
add
jae
xchg
mov
add
jnp
out
mov
lea
pop
pop
push
inc
sub
pop
pop
pop
push
inc
pop
leave
ret
push
push
push
push
lea
push
push
push
push
lea
push
push
call
lret
iret
lods
lods
outsl
add
xorl
add
cwtl
arpl
bound
add
lds
xchg
pop
xlat
rolb
addl
flds
add
test
add
add
addb
xchg
push
add
je
add
jne
add
mov
mov
lea
pop
push
mov
push
lea
push
push
call
mov
mov
add
out
xchg
add
jp
data16
aad
mov
push
add
mov
cmpsb
add
push
hlt
out
cmpsb
add
addr16
xchg
fmull
cld
push
push
sub
pop
push
push
push
push
call
mov
mov
mov
jge
add
push
add
pushf
leave
out
fcmovnu
imul
in
jne
insb
incb
cli
add
push
add
add
jne
cltd
iret
fs
sahf
scas
jae
push
xchg
mov
lret
add
lret
add
test
pusha
or
push
lea
push
push
call
shl
lahf
xchg
lea
xchg
mov
add
pushf
shr
pushf
scas
loope
cwtl
add
add
xchg
js
add
add
stc
pop
mov
xchg
add
xchg
mov
enter
cld
ljmp
clc
add
add
ljmp
xchg
lret
movl
pop
movb
add
stc
mov
or
movl
push
xor
pop
push
call
push
lea
push
push
push
push
push
push
push
call
pushf
add
add
filds
add
out
sahf
pop
xchg
idivb
push
pop
add
mov
xchg
xchg
add
xchg
mov
addb
fstl
mov
add
add
fiadds
add
mov
pusha
jl
xchg
and
or
dec
clc
call
xchg
push
push
push
lea
push
push
push
call
xchg
add
leave
jmp
scas
data16
push
pusha
clc
add
add
int
loope
shrb
fiadds
sti
add
mov
cli
mov
jbe
scas
in
add
ja
xchg
jge
lds
mov
in
into
lcall
mov
cld
mov
add
add
fucom
jo
add
mov
lea
pop
subl
cmpl
jne
push
add
dec
lea
add
pop
pop
push
lea
push
push
lea
push
push
lea
push
lea
push
push
push
call
loope
jb
into
jge
add
add
mov
add
pop
xor
add
int3
cmc
add
hlt
add
add
lret
push
mov
call
add
mov
push
jecxz
add
jle
add
imul
add
add
pop
pop
push
lea
push
push
push
push
push
lea
push
push
lea
push
push
call
loop
add
push
fidivs
add
xchg
xchg
add
leave
gs
lahf
add
mov
test
add
out
add
scas
add
in
out
add
add
add
cwtl
add
pop
add
jbe
add
add
xchg
frstor
push
test
add
add
imul
les
push
push
lea
push
push
push
push
push
push
call
add
mov
jo
fildl
add
add
add
lods
fnstsw
fiadds
int3
add
add
add
in
add
mov
add
icebp
add
cmpsl
add
jno
fisubs
add
add
add
mov
aam
imull
add
pop
pop
leave
push
lea
push
push
lea
push
push
push
push
push
push
call
mov
lods
add
mov
add
icebp
movb
sar
add
addr16
into
mov
add
xchg
hlt
add
add
xchg
xchg
leave
mov
fadds
in
add
add
jne
fstps
add
ret
jno
xchg
xlat
pop
add
add
add
add
cmpsl
mov
push
addr16
jl
ja
jecxz
fmull
push
push
call
data16
sahf
icebp
ja
add
sarl
mov
lods
push
loop
add
add
add
lcall
add
jne
push
mov
mov
jne
hlt
lea
pop
push
push
dec
xor
add
pop
mov
push
rol
dec
pop
add
push
push
lea
push
push
push
push
push
push
lea
push
push
call
stos
jb
clc
add
clc
jnp
add
lds
add
add
push
add
mov
mov
clc
xchg
loop
add
lahf
add
pushf
add
add
mov
lods
movsl
test
add
add
lahf
xchg
xchg
add
clc
fdivrl
add
add
mov
lea
pop
push
push
push
dec
pop
push
push
add
pop
mov
push
sub
not
pop
lea
push
pop
sub
push
push
push
push
lea
push
push
push
call
loope
shrb
loop
add
loope
pushf
add
push
jne
add
mov
add
add
mov
mov
stc
add
add
cmpsl
out
jl
jnp
arpl
aad
add
loopne
pop
add
fiaddl
lret
add
mov
insb
jnp
mov
xchg
add
add
xchg
jo
int3
lea
pop
mov
push
shl
ror
xor
pop
shr
push
pop
add
push
rol
shr
sub
xor
pop
mov
mov
push
ror
rol
sub
pop
add
push
push
lea
push
push
lea
push
call
add
mov
push
in
scas
enter
fmull
je
loope
fsub
push
mov
fldl
mov
nop
enter
outsl
std
popf
mov
add
push
sub
out
clc
add
shrb
add
pushf
les
int
fwait
ret
add
ljmp
push
add
jmp
loopne
stos
lds
add
lea
pop
add
mov
push
push
push
push
call
add
add
add
add
mov
jne
fistl
add
add
add
add
add
popa
add
pop
addb
add
add
imul
add
xchg
loopne
pop
je
add
call
add
add
je
add
orl
addb
add
icebp
add
jmp
mov
lea
pop
mov
push
not
shl
pop
cmp
jne
push
push
push
call
mov
sarb
pop
add
call
add
mov
add
movb
jmp
add
jb
mov
arpl
add
mov
add
lahf
out
mov
int3
add
cli
add
mov
xchg
mov
add
add
add
add
scas
add
shlb
add
mov
lea
pop
cmp
jne
mov
push
lea
push
push
push
lea
push
lea
push
call
add
add
add
add
hlt
push
add
mov
add
out
call
push
add
add
jecxz
add
aam
ret
mov
pusha
sbb
add
add
add
push
mov
dec
lea
push
push
lea
push
push
lea
push
call
add
add
fiaddl
add
cmc
push
add
fcomps
xchg
add
incb
xchg
add
jns
fadds
pop
add
jle
lock
xlat
call
add
add
test
roll
mov
add
mov
lea
pop
jmp
mov
push
lea
push
push
push
lea
push
push
push
push
call
fwait
add
add
add
cld
add
loop
fcoms
jne
jae
add
add
test
leave
pop
leave
rcl
add
testl
add
add
stc
lds
mov
jp
add
add
add
sub
pop
mov
lea
pop
mov
push
push
push
push
push
call
lret
add
mov
add
push
flds
cli
leave
xchg
add
out
enter
add
add
xchg
aam
mov
imul
pop
fildl
pop
xchg
scas
add
cli
lcall
movsl
add
pop
sub
jne
mov
push
push
push
push
push
push
push
push
push
call
add
mov
add
pop
add
add
cmpl
mov
loope
add
shlb
add
add
cmpsl
mov
cltd
shr
in
enter
add
mov
add
iret
lea
lds
mov
mov
mov
add
and
movl
jmp
push
push
lea
push
lea
push
call
je
add
push
add
and
rolb
test
add
stc
add
add
lcall
cmpsb
in
add
addl
jnp
add
mov
jmp
add
add
mov
lea
pop
mov
push
push
lea
push
call
rcll
mov
jge
out
add
add
test
mov
faddl
jnp
mov
jecxz
enter
add
add
test
jne
add
jmp
mov
in
mov
jns
pop
add
mov
pop
les
pushf
mov
popa
orb
pushf
loope
add
addb
jecxz
add
add
fbld
arpl
mov
cmp
jne
push
push
push
lea
push
push
push
push
call
jmp
jb
pop
mov
add
add
add
add
xchg
out
mov
loope
lock
add
shr
sub
jl
mov
mov
xchg
int
fisttpl
lea
pop
mov
movl
push
push
push
push
push
push
call
add
add
test
add
stc
ficoml
mov
fwait
add
iret
fwait
hlt
push
enter
add
shlb
add
lea
add
roll
cltd
int3
mov
lea
pop
jmp
push
dec
shr
shr
inc
pop
mov
cmpw
jne
push
shl
pop
mov
push
dec
shl
pop
movl
push
push
push
lea
push
lea
push
call
mov
enter
add
add
add
add
add
mov
mov
jo
add
xorl
add
sti
loop
stc
push
add
add
je
pop
cltd
add
add
pop
jmp
pushl
push
push
call
addr16
add
loop
icebp
notb
jo
add
xchg
add
int3
cmc
push
int
hlt
lret
aam
lahf
add
mov
call
add
bound
mov
pusha
out
arpl
roll
add
add
clc
add
add
xchg
add
mov
jecxz
gs
add
in
xchg
fadds
incb
add
add
add
mov
add
add
mov
lea
pop
pop
mov
push
push
call
add
movsl
mov
lret
loope
mov
add
outsl
in
cmpsb
shrl
add
add
xlat
add
lods
outsl
lods
mov
add
add
add
add
add
lea
mov
mov
add
add
add
fcmovnu
add
pop
mov
push
add
add
shr
pop
mov
push
push
dec
push
and
add
sub
add
shr
sub
pop
not
pop
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
call
push
jmp
cmc
add
test
add
scas
add
idiv
xchg
add
mov
out
mov
add
ficomps
out
lea
add
add
add
mov
iret
add
fwait
xchg
push
icebp
add
imul
add
mov
lea
pop
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
push
incb
mov
lea
pop
faddl
xchg
jmp
add
add
lds
add
mov
mov
popa
push
add
add
int3
xchg
add
add
mov
test
jnp
shl
add
mov
test
loop
xchg
jecxz
fmull
int3
cmp
cld
add
inc
shl
pop
cmpl
je
push
push
ror
push
or
not
add
sub
sub
xor
dec
sub
add
pop
add
pop
push
push
lea
push
push
call
add
enter
fwait
pop
mov
fsubs
pusha
add
add
add
adc
lods
fildl
fwait
add
pop
cwtl
int3
xchg
cmc
negl
mov
push
testl
loop
add
mov
sahf
loopne
mov
pop
je
add
add
add
pop
push
push
push
lea
push
push
push
push
lea
push
call
mov
add
mov
in
cmpsl
insb
test
sahf
stos
add
add
addl
rcl
lret
subl
jp
add
xchg
add
popf
mov
testb
hlt
stos
scas
loope
xlat
add
jne
mov
xchg
cwtl
mov
lea
pop
call
cmpl
je
push
push
shr
shl
sub
push
xor
add
ror
shl
shl
xor
sub
shl
pop
shl
pop
push
push
call
popa
add
enter
js
movsb
add
iret
test
fiadds
add
mov
out
popa
add
sahf
add
clc
cmc
add
xchg
mov
add
aad
mov
pop
jmp
add
icebp
jbe
mov
add
mov
test
add
lods
add
add
iret
incb
add
cmpsb
add
out
xchg
stos
add
pusha
or
push
push
lea
push
lea
push
lea
push
push
push
call
fs
mov
enter
add
add
push
pop
ja
push
add
add
add
mov
mov
add
in
addl
stc
xchg
in
mov
lea
pop
call
push
push
push
lea
push
push
call
add
add
mov
lcall
fdivp
mov
cwtl
pop
int
in
fwait
add
add
les
push
add
add
xchg
add
add
in
add
imul
push
mov
add
pop
add
fmuls
pop
cmpl
je
push
push
lea
ror
shr
push
sub
add
lea
sub
rol
pop
sub
rol
lea
add
pop
push
lea
sub
inc
pop
push
push
push
push
push
push
call
int
lods
add
scas
hlt
loope
mov
lds
lods
xchg
in
fiadds
pop
add
mov
add
add
add
push
cli
add
mov
movsb
add
jl
add
int
push
icebp
add
add
add
add
les
cmp
add
decl
test
add
push
push
xor
shl
push
xor
add
ror
sub
shr
xor
sub
pop
rol
not
shr
pop
push
lea
push
lea
push
push
push
lea
push
push
push
call
mov
call
popf
add
jnp
mov
data16
add
imulb
movsb
cli
add
mov
add
mov
add
movl
add
jecxz
add
cwtl
arpl
add
out
imul
xchg
test
divb
xchg
add
movb
jle
sahf
add
mov
hlt
lea
pop
push
call
push
push
lea
push
push
lea
push
push
lea
push
push
call
mov
add
add
leave
leave
loope
test
mov
add
stc
fwait
add
xchg
fidivs
fs
push
add
fldt
add
add
lds
bound
jne
add
add
add
jecxz
mov
aam
bound
pop
cmpl
je
push
push
inc
shr
dec
push
push
pop
add
add
shl
sub
shr
pop
shr
add
sub
pop
push
push
push
push
lea
push
push
lea
push
push
push
call
add
scas
xchg
mov
push
add
imul
add
stc
icebp
cli
mov
add
aad
add
add
icebp
mov
cli
add
icebp
add
xchg
add
mov
cmpsb
addl
test
mov
lea
pop
push
push
inc
pop
call
push
push
lea
push
call
add
aam
lret
cld
cmpb
add
jge
push
add
mov
add
out
add
aam
pop
fwait
add
cwtl
out
add
add
push
mov
mov
repnz
mov
add
pop
pop
add
add
add
popa
add
cld
popl
movsb
jmp
mov
lea
pop
cmpl
je
push
push
sub
push
xor
add
xor
dec
shl
sub
shl
pop
not
shl
dec
shl
pop
push
sub
add
add
pop
push
call
push
sub
pop
cmpl
je
push
push
add
push
and
add
shl
sub
shl
sub
pop
add
add
shr
ror
pop
push
lea
push
push
push
call
mov
sti
scas
cld
aad
add
add
bound
loopne
arpl
stc
add
add
add
add
jb
add
mov
add
test
mov
imul
add
mov
mov
sar
add
add
xchg
mov
outsl
add
movsl
mov
add
fwait
jge
nop
scas
stos
add
mov
out
cld
lea
pop
push
push
push
lea
push
push
lea
push
push
call
add
jnp
out
add
cli
jp
add
rolb
fistl
push
add
add
in
push
call
add
add
add
add
add
mov
add
xchg
sti
icebp
add
mov
repnz
mov
mov
add
out
add
xor
jmp
add
lea
imul
mov
lea
pop
call
cmpl
je
push
push
push
or
not
add
shr
dec
xor
sub
dec
sub
pop
shr
lea
pop
push
push
push
lea
push
push
push
lea
push
push
push
call
lods
mov
mov
add
repnz
cli
jge
add
jp
jmp
ret
hlt
add
cld
add
add
lcall
add
mov
add
add
mov
add
add
out
add
out
icebp
out
add
add
add
pop
push
call
push
shl
add
pop
cmpl
je
push
push
sub
lea
push
and
add
add
add
sub
sub
pop
pop
push
lea
push
push
push
push
push
call
add
mov
xchg
add
test
jb
add
add
pop
add
test
lret
les
add
add
out
insb
lret
push
fwait
neg
sahf
in
fildl
ljmp
add
mov
lea
pop
push
push
shr
add
dec
sub
pop
call
push
push
push
call
xchg
mov
xchg
incb
pop
test
cwtl
mov
jp
cmpsl
mov
add
jl
mov
mov
add
arpl
add
pushf
add
add
xchg
adc
add
loope
incb
xchg
add
mov
add
lock
loopne
pop
hlt
pop
leave
add
lds
int3
popf
mov
fucom
push
test
stos
mov
lea
pop
cmpl
je
push
push
sub
rol
shr
xor
push
and
add
sub
sub
dec
pop
rol
shr
sub
pop
push
shr
pop
push
call
push
lea
push
push
lea
push
push
push
call
add
aad
mov
in
mov
add
pop
mov
jae
add
cmc
call
add
add
icebp
add
lea
int3
rolb
add
jecxz
popf
imul
insb
add
add
movsb
add
sbb
js
xor
ret
test
add
add
mov
ja
inc
push
xor
add
add
shr
not
sub
pop
ror
xor
pop
push
push
push
push
push
push
call
add
mov
cmpsl
add
add
add
mov
add
mov
rolb
movl
rcll
pop
add
mov
add
in
add
add
cmpsb
mov
add
pop
push
call
push
lea
push
push
push
lea
push
call
lahf
jae
movsb
push
fiadds
cltd
add
add
add
pop
pop
roll
stos
add
cld
push
add
aad
aam
add
je
mov
pop
sahf
add
push
jle
in
add
pop
add
bound
pop
stos
test
mov
in
xchg
rolb
cmpsl
add
add
add
cmpl
add
popa
adc
cmpl
je
push
push
sub
push
and
add
sub
shl
rol
not
sub
shl
pop
lea
not
add
pop
push
inc
pop
push
push
push
push
call
xchg
add
push
test
add
add
int3
add
add
cwtl
lds
fnsave
out
in
in
mov
add
add
hlt
pop
in
jbe
add
add
add
pop
add
mov
lea
pop
call
push
dec
pop
cmpl
jne
mov
push
push
call
movsb
add
add
fiadds
mov
add
movb
mov
add
shll
hlt
shrb
add
cltd
mov
mov
add
jmp
push
add
jecxz
cltd
xchg
add
pop
stc
ret
add
lea
pop
movl
jmp
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
push
leave
pop
mull
add
pop
mov
add
add
add
add
xlat
add
jle
mov
add
scas
add
pusha
lock
jmp
mov
add
xchg
xlat
movsb
add
cld
repnz
bound
flds
jno
popf
scas
jmp
mov
add
divl
add
push
mov
lea
pop
xor
pop
push
lea
push
lea
push
lea
push
lea
push
push
call
add
std
loop
add
shl
stos
rclb
stos
mov
imul
mov
push
int
pop
std
lock
mov
add
add
adc
jb
outsl
into
mov
add
mov
mov
add
xchg
add
push
cmpsb
add
cmpsb
rclb
mov
test
leave
ja
mov
xchg
add
int
insb
add
add
hlt
lea
pop
pop
push
push
push
push
push
push
lea
push
push
push
push
call
loope
add
add
add
add
add
sti
add
add
divl
imul
add
add
rolb
push
stos
mov
ja
push
sti
push
add
add
add
pop
pop
push
push
push
lea
push
push
push
push
call
add
add
add
loope
in
pop
add
add
add
add
ljmp
add
add
movsb
xchg
add
add
add
cwtl
mov
hlt
lea
pop
pop
push
push
push
push
lea
push
push
call
rclb
add
mov
add
sti
xchg
out
push
adc
xchg
add
test
leave
add
ror
ljmp
imul
mov
pop
add
cld
add
add
add
add
sarb
push
add
push
add
add
add
xchg
mov
fmull
push
push
lea
push
push
push
push
push
call
mov
scas
fwait
aam
add
mov
xor
add
add
rcl
add
add
stos
int3
mov
cltd
addb
in
sti
add
popa
jecxz
bound
mov
fildl
mov
jbe
add
lahf
insb
add
roll
fmull
or
push
xor
shr
add
pop
push
push
pop
mov
add
push
lea
push
push
push
push
push
call
add
add
add
push
mov
add
lcall
mov
lret
fistl
add
add
pop
mov
xchg
pusha
push
add
jbe
mov
push
add
in
std
add
add
roll
add
scas
add
add
sti
add
fwait
push
stos
add
xchg
pop
mov
lea
pop
cmpl
jne
push
push
add
shr
sub
push
and
add
sub
not
add
sub
ror
lea
pop
sub
pop
push
dec
add
pop
pushl
call
push
push
lea
push
push
call
mov
add
call
jne
add
add
jnp
mov
pop
mov
lahf
add
rcrb
add
add
mov
mov
add
lea
pop
push
call
push
lea
push
call
xchg
aam
add
add
sti
rolb
enter
lcall
add
loope
sti
leave
push
scas
jne
out
test
arpl
add
add
add
mov
lea
pop
jmp
cmpl
je
push
sub
pop
cmpl
jne
leave
push
push
push
call
add
add
les
add
js
lret
mov
icebp
popl
add
insb
mov
lods
jbe
call
lock
aad
lods
out
add
loop
stos
jne
add
push
mov
lea
pop
add
push
lea
inc
lea
pop
pop
pop
push
sub
add
pop
pop
push
push
push
push
push
lea
push
call
mov
add
leave
icebp
cltd
test
ja
sub
mov
jmp
in
pusha
xchg
mov
outsl
add
pushf
add
add
in
add
mov
cmc
arpl
add
jns
lea
cld
lea
pop
pop
push
push
push
push
lea
push
push
lea
push
call
jge
loopne
test
add
nop
mov
repnz
jecxz
add
add
pop
addr16
add
sahf
mov
push
add
add
xchg
sti
mov
xchg
jne
add
add
cwtl
pop
icebp
fsubp
movsb
aam
mov
mov
mov
mov
add
jae
fmull
sbb
leave
add
push
lea
push
lea
push
push
push
call
add
mov
lods
mov
add
mov
nop
xchg
add
popa
out
jle
cli
jnp
test
add
mov
ljmp
xchg
jge
cld
out
loope
add
into
mov
repnz
leave
add
adc
ret
jmp
push
xor
sub
pop
cmpl
jne
push
push
add
sub
xor
push
and
add
add
sub
sub
shl
pop
add
shl
pop
push
push
push
push
call
lret
stc
mov
mov
in
push
add
out
add
outsl
clc
mov
xchg
add
lods
add
loope
add
push
add
scas
outsl
test
test
outsl
add
add
int3
imul
add
add
adc
jne
push
lea
push
push
push
call
aam
add
xchg
fiadds
rcr
add
pop
add
popa
sti
add
out
js
les
add
push
add
add
push
add
cmc
add
xchg
adcb
rcl
add
push
cmpsb
add
mov
add
jl
outsl
add
pop
mov
add
loop
add
add
pop
call
push
shl
pop
push
call
push
shl
xor
pop
jmp
push
lea
pop
cmpl
jne
push
lea
rol
shr
inc
pop
mov
push
rol
xor
pop
mov
push
push
push
rol
rol
sub
push
push
pop
add
lea
sub
sub
dec
pop
rol
pop
push
push
lea
push
push
push
push
push
push
push
lea
push
call
outsl
jmp
jnp
jb
add
fiaddl
enter
loop
push
add
addr16
xchg
add
je
test
add
jle
loope
jnp
add
call
fs
add
lods
add
ljmp
lods
add
int
add
mov
in
add
add
add
test
add
pop
push
add
js
add
push
mov
lea
pop
pushl
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
add
lahf
faddl
ret
sti
lds
add
pop
push
pusha
add
add
mov
lret
pop
xchg
add
mov
add
add
scas
xchg
add
and
call
push
push
lea
push
lea
push
push
call
add
ja
xchg
add
add
mov
cld
outsl
mov
addr16
add
stc
jmp
add
xchg
add
add
in
xchg
add
add
add
jl
add
add
test
jbe
stos
mov
lea
pop
call
push
push
shl
push
or
not
add
ror
sub
xor
rol
sub
pop
add
add
add
pop
push
sub
not
add
lea
pop
pushl
call
push
lea
push
lea
push
push
push
call
add
add
jnp
add
push
popf
add
add
imul
loopne
mov
add
loop
mov
add
and
iret
pop
outsl
add
mov
lea
pop
call
push
push
ror
dec
push
sub
add
ror
add
ror
dec
sub
inc
pop
add
pop
push
lea
shr
add
inc
pop
pushl
push
push
push
push
push
push
call
lds
mov
mov
pop
mov
add
out
add
add
popa
add
loop
push
aam
mov
mov
mov
rclb
mov
lea
pop
call
call
push
shr
add
inc
add
pop
lea
push
push
dec
lea
push
or
not
add
sub
inc
not
shl
sub
sub
shr
pop
shr
pop
push
lea
push
lea
push
push
push
push
push
push
call
cld
add
add
out
add
add
test
add
mov
add
lret
add
add
mov
mov
add
jne
add
mov
add
roll
add
jnp
add
add
push
jns
movsb
add
push
mov
lea
pop
pushl
push
lea
push
push
push
call
stos
popf
cwtl
xchg
add
jbe
insb
lahf
add
add
shll
add
push
pop
add
add
pop
add
add
add
add
test
add
add
fwait
jmp
add
in
xchg
mov
mov
imul
add
incb
mov
lea
pop
call
push
push
lea
push
push
push
push
call
xchg
mov
insb
add
mov
xchg
mov
scas
push
add
add
lret
add
mov
add
jo
in
add
add
add
add
ja
add
add
add
add
loopne
addl
lea
pop
call
push
push
not
shl
push
or
inc
add
sub
inc
not
sub
add
pop
rol
pop
push
lea
push
push
push
push
push
push
push
push
push
call
insb
add
mov
xchg
std
sahf
xchg
mov
xchg
fs
add
repnz
ja
cmc
lods
add
mov
add
mov
mov
add
test
lods
xchg
add
add
xchg
add
jnp
lods
popl
mov
leave
out
cld
lcall
add
in
pop
testl
mov
lea
pop
pushl
call
push
sub
shr
not
pop
call
mov
push
push
xor
xor
inc
push
and
add
rol
sub
lea
sub
pop
sub
xor
inc
xor
pop
push
sub
add
pop
pushl
call
push
sub
shr
pop
push
push
add
pop
call
push
push
push
sub
add
rol
add
xor
sub
dec
pop
sub
ror
add
pop
push
push
push
push
push
lea
push
call
mov
lea
mov
add
add
add
add
shlb
mov
jae
jmp
jge
mov
mov
iret
xchg
mov
add
add
lods
push
pop
add
mov
add
repnz
out
cltd
add
pop
pop
add
add
add
scas
je
mov
lods
mov
lea
pop
pushl
push
add
add
shr
sub
pop
call
push
push
call
add
fiaddl
popa
into
add
add
add
xchg
add
push
roll
add
add
sub
add
pop
add
outsl
jnp
xlat
mov
add
mov
add
imul
add
jecxz
int3
lea
pop
push
push
push
lea
push
push
push
push
push
push
call
push
pushf
add
cld
movsb
aam
test
std
add
out
push
add
jle
clc
add
ret
add
add
add
mov
pop
add
ja
mov
scas
mov
fs
mov
loop
nop
add
add
add
xchg
jle
mov
cwtl
mov
mov
lea
pop
pushl
push
add
inc
pop
call
push
push
xor
dec
xor
push
xor
add
dec
shl
add
sub
lea
pop
lea
sub
rol
rol
pop
push
push
push
call
add
fwait
addr16
mov
jo
add
popa
mov
fistps
pop
mov
push
add
add
pop
add
jb
add
jecxz
add
lds
add
mov
xchg
add
pop
pushl
push
push
push
call
test
outsl
addl
flds
scas
test
mov
mov
stc
mov
xchg
fiadds
add
add
mov
insb
mov
clc
add
test
enter
push
test
add
push
add
fbstp
jle
xchg
add
add
jge
popf
iret
add
lret
add
or
call
push
push
add
lea
push
xor
add
add
add
sub
not
add
pop
xor
not
sub
pop
push
push
not
push
push
pop
add
sub
rol
ror
add
pop
inc
pop
push
lea
push
call
scas
add
imul
addb
xchg
add
add
mov
int3
faddl
add
in
pusha
mov
add
iret
pop
add
mov
call
in
movb
mov
add
add
mov
clc
mov
fld
test
or
rclb
xlat
pop
pop
push
push
push
push
lea
push
push
push
call
in
add
pop
add
fisubs
add
push
nop
mov
pop
push
jge
mov
jecxz
fcompl
push
arpl
stos
stc
movb
test
cltd
jle
fiaddl
fistpll
test
add
pop
dec
jne
push
shl
xor
pop
call
jmp
push
push
push
push
push
push
lea
push
push
push
call
std
add
addr16
mov
add
add
jle
add
arpl
add
mov
fwait
mov
nop
add
add
push
out
add
cwtl
aam
test
xchg
push
add
jae
stos
and
mov
jne
gs
mov
arpl
filds
je
aam
rcrl
rcrl
cltd
cwtl
mov
lea
pop
call
push
push
push
push
pop
add
dec
inc
sub
sub
add
pop
inc
pop
push
sub
xor
pop
pushl
call
push
push
push
lea
push
push
push
push
push
push
call
pop
add
add
add
repnz
push
rol
add
lds
push
xchg
add
fiadds
cld
icebp
add
mov
ja
mov
imul
add
add
mov
add
aad
add
repnz
add
popa
cltd
add
mov
data16
push
push
inc
pop
call
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
lret
jno
test
add
fidivrl
add
add
filds
add
add
subb
add
nop
add
add
add
out
iret
add
out
jge
test
rclb
movsb
fildl
adcl
jns
add
mov
add
add
cmpsb
mov
cmc
add
mov
mov
lea
pop
mov
push
push
push
push
push
call
fdivs
into
xchg
add
add
jbe
xchg
lock
add
loop
add
mov
xchg
mov
out
add
add
add
add
rorl
lea
pop
lea
push
push
add
shl
ror
add
push
and
add
shr
sub
rol
sub
add
shr
shr
pop
rol
pop
push
dec
add
pop
pushl
push
not
pop
call
push
push
push
call
add
add
out
mov
pusha
lahf
add
ret
int3
mov
roll
mov
lods
decb
add
out
out
add
push
add
mov
addr16
add
push
add
scas
movsb
jp
add
stos
add
mov
call
xchg
pushf
mov
popa
or
shrb
push
cmc
push
push
lea
push
push
pop
add
rol
ror
add
sub
lea
sub
pop
add
not
pop
push
add
sub
pop
pushl
push
sub
shl
sub
pop
call
call
push
inc
pop
mov
push
lea
push
push
push
push
call
push
add
add
push
add
add
add
add
lods
mov
clc
rolb
add
add
cmpsb
add
add
add
push
fiadds
add
add
stos
push
pop
test
add
out
test
loope
int
sahf
add
add
sbbl
xlat
mov
mov
bound
lea
push
push
xor
shl
push
push
pop
add
not
shl
not
xor
sub
shl
sub
pop
sub
pop
push
push
push
push
call
stc
xchg
fiaddl
arpl
cmc
add
add
push
stos
add
add
add
push
add
add
call
cltd
add
add
icebp
add
hlt
pop
add
add
stc
leave
mov
add
jo
lret
mov
lea
pop
pushl
push
sub
sub
add
pop
call
push
lea
push
push
push
push
push
call
add
lods
add
sarb
jp
mov
add
add
add
xchg
lds
loop
mov
lahf
jge
mov
shrb
jecxz
add
cld
ret
lea
pop
lea
push
push
add
rol
pop
push
push
pop
push
push
push
lea
push
push
call
add
fiadds
nop
clc
add
add
fists
push
add
add
add
fwait
add
push
icebp
add
lds
add
clc
push
iret
xchg
jae
add
ret
into
jecxz
jp
add
add
mov
test
mov
stos
mov
add
add
jl
add
in
mov
push
pop
add
and
mov
lea
pop
pushl
push
push
sub
not
lea
push
xor
add
inc
sub
dec
shr
pop
ror
lea
pop
push
sub
pop
push
push
lea
push
lea
push
call
int
add
xchg
add
add
mov
imul
int3
mov
aad
add
jmp
push
loope
mov
popl
cld
testb
xchg
add
add
add
leave
pop
mov
loope
add
add
lock
add
mov
add
cltd
add
data16
call
push
push
shl
dec
sub
push
xor
add
sub
rol
pop
rol
shr
pop
push
push
push
push
call
cld
test
add
lret
pop
add
xchg
add
push
out
jmp
mov
add
push
add
shrl
lock
add
add
add
jle
imul
add
loop
jecxz
add
int
add
adc
jne
push
rol
sub
lea
xor
pop
call
push
add
pop
push
push
push
push
lea
push
lea
push
push
call
jmp
xchg
add
push
cli
mov
add
push
add
gs
jmp
jp
add
test
cmc
shrl
add
add
add
cltd
add
add
add
int3
lcall
pushf
lock
add
mov
add
mov
cltd
add
aad
add
mov
cli
add
add
lock
nop
in
add
scas
mov
mov
pusha
into
add
pop
call
push
push
sub
add
push
or
inc
add
dec
dec
not
add
sub
shr
add
rol
pop
rol
sub
dec
not
pop
push
pop
pushl
call
push
push
push
call
je
imul
in
jle
addb
add
pop
mov
jo
add
imul
rcll
lds
mov
jb
out
add
mov
xchg
mov
add
add
add
add
addb
lret
add
mov
mov
lea
pop
call
push
add
rol
pop
jmp
push
sub
pop
pushl
push
not
pop
mov
jmp
push
push
add
dec
push
or
not
add
sub
not
pop
sub
pop
push
push
call
add
rolb
push
add
pop
add
xchg
loop
add
add
aad
pop
cmpsb
lcall
cmpsb
mov
bnd
lahf
stc
ror
add
aad
mov
bound
fwait
pop
lock
push
into
lret
insb
add
add
add
add
add
aam
bound
pop
pushl
push
push
lea
push
push
push
push
push
lea
push
call
add
xchg
incb
add
xchg
pop
add
mov
jl
lods
neg
outsl
add
data16
xchg
mov
add
sbbl
call
xchg
jo
add
add
mov
jp
shr
add
mov
les
add
pop
loop
mov
add
roll
mov
clc
add
jae
add
mov
lea
pop
call
push
push
lea
push
push
push
lea
push
call
add
mov
add
mov
pushf
add
add
pop
add
jns
call
add
stc
push
add
leave
stc
mov
cmpsl
mov
mov
icebp
shl
je
push
add
faddl
testb
hlt
lea
pop
push
call
push
push
rol
sub
shl
push
xor
add
lea
sub
rol
add
sub
shr
lea
pop
lea
ror
shr
shr
pop
push
push
push
push
push
push
call
mov
add
push
outsl
mov
jnp
add
leave
fadds
in
add
add
mov
ja
outsl
imul
add
add
pop
popf
sahf
hlt
lods
add
add
pop
pushl
call
push
xor
not
pop
push
call
push
push
push
push
lea
push
push
push
push
call
add
pop
add
add
pop
test
add
xor
loope
cmpsl
les
jne
pop
shl
lods
add
mov
mul
add
add
xchg
add
add
jns
push
sarb
imul
add
scas
aam
stc
ja
jp
add
and
push
push
push
lea
push
push
lea
push
push
call
in
add
add
jmp
xchg
popf
add
add
stc
add
mov
add
add
test
xlat
lods
cli
lds
add
in
jae
xchg
mov
lea
pop
add
push
push
push
push
lea
push
push
push
push
call
add
jae
add
enter
add
mov
jae
jbe
add
mov
shr
add
add
aam
mov
add
add
add
pop
push
mov
cmpsl
jo
fmull
pop
push
sub
sub
pop
pop
push
push
call
mov
add
mov
push
movb
js
add
loopne
add
flds
movsl
push
jnp
add
cli
mov
jo
ret
add
add
add
lahf
jno
add
add
faddl
imul
test
push
add
scas
add
add
fiaddl
jecxz
fimull
pop
pop
push
lea
push
push
push
push
push
lea
push
push
push
push
call
fdiv
add
add
outsl
mov
test
push
test
ljmp
pusha
jle
mov
cwtl
data16
je
fs
add
mov
add
bnd
mov
push
lret
shll
add
add
ljmp
push
cwtl
add
sub
push
lea
push
push
push
push
push
push
push
push
call
pusha
xchg
mov
shr
fildl
add
adcl
mov
int
fisttpll
cli
xchg
pop
cld
add
mov
into
cli
add
stc
cmpsb
add
push
add
push
ja
call
hlt
lea
pop
add
ret
push
lea
push
push
call
add
mov
sarb
lods
rolb
push
adcb
push
popa
insb
add
jbe
add
sahf
add
pushf
ljmp
mov
aam
lret
add
mov
lea
pop
leave
ret
push
ror
sub
pop
push
push
xor
inc
pop
mov
push
lea
push
push
call
pop
add
jmp
add
jnp
push
mov
add
leave
in
movsl
add
rolb
bound
xchg
sti
add
aad
add
stos
add
mov
add
data16
add
mov
push
add
popa
add
add
add
xchg
add
lock
int3
lea
pop
cmpl
jne
push
not
xor
lea
dec
pop
mov
push
lea
push
push
push
call
fiadds
add
xchg
add
imulb
outsl
add
add
popf
icebp
add
add
add
bound
add
add
xchg
add
mov
push
push
movsl
into
icebp
add
add
add
cmc
lds
pop
jmp
push
lea
push
lea
push
push
lea
push
lea
push
push
lea
push
call
pop
call
leave
jl
cmpsl
out
jmp
movsl
push
xchg
popa
add
add
add
mov
jae
mov
sarb
add
faddl
jae
hlt
test
scas
loopne
add
lret
aad
outsl
addl
in
add
and
inc
or
loopne
push
push
push
push
push
push
call
test
add
add
cltd
test
ret
push
movsb
test
xchg
int3
add
aad
jns
in
sahf
add
jns
add
add
movsl
add
mov
push
add
ljmp
jle
je
lahf
leave
add
add
aad
stc
mov
arpl
pop
xor
push
lea
xor
lea
sub
pop
xor
push
push
push
lea
push
call
xchg
pop
mov
in
jmp
xchg
push
stos
add
in
push
jle
roll
jle
enter
add
add
add
add
add
jecxz
jb
add
incb
add
fwait
jle
pop
cmpsl
fdivrs
popf
add
cltd
push
add
add
add
mov
adc
rolb
push
push
push
push
push
call
add
lods
hlt
add
add
in
xchg
imul
add
lret
loope
pop
stos
jmp
add
add
add
iret
imul
add
loop
add
mov
in
push
call
add
les
add
fiadds
pop
add
add
mov
mov
lea
pop
xor
push
push
push
push
lea
push
push
push
push
push
push
call
cwtl
pop
clc
add
add
in
hlt
add
jge
into
leave
mov
gs
movsl
jns
add
push
mov
add
add
movsl
pop
add
add
jb
add
add
fs
add
add
out
je
scas
flds
addl
add
mov
cmpsb
lret
add
adcb
pop
in
add
mov
pop
dec
push
push
lea
push
push
lea
push
push
call
movsb
mov
add
push
cld
add
jp
add
add
leave
add
mov
out
push
jge
add
add
notb
add
mov
add
mov
lahf
jecxz
mov
mov
add
add
push
add
add
add
add
add
add
stos
add
mov
lea
pop
sub
push
sub
pop
jmp
push
push
push
push
lea
push
push
push
call
jns
cmpsl
add
add
mov
xchg
in
mov
scas
add
clc
stc
add
stos
add
rolb
repnz
cmc
add
push
add
add
add
mov
lea
pop
sub
push
dec
shl
shl
pop
pushl
push
dec
dec
lea
pop
pop
push
lea
push
call
scas
enter
popf
mov
add
popa
add
add
imul
cld
add
add
add
jecxz
lds
add
add
fcomp
rclb
push
ja
flds
lea
mov
lea
pop
sub
cmp
jne
push
not
not
pop
mov
push
push
push
push
push
push
call
jae
add
cld
add
incb
add
push
add
add
filds
in
add
add
js
add
pop
ficomps
add
jmp
add
lahf
xchg
add
popa
sbb
dec
cmp
jmp
stos
push
call
add
test
arpl
add
add
jb
lret
add
pop
mov
add
roll
push
add
je
cmpsl
movb
xchg
test
fst
add
ret
add
ret
call
mov
in
mov
add
add
pop
add
jge
add
fcomi
add
stc
add
hlt
add
pop
mov
push
shl
pop
shr
add
push
add
pop
sub
push
push
call
xchg
add
mov
scas
add
add
mov
add
test
add
add
add
iret
add
push
mov
enter
call
add
incb
add
add
pushf
add
lods
mov
lea
pop
pushl
pop
push
dec
dec
xor
pop
shr
push
push
call
outsl
mov
mov
pop
mov
jge
xchg
add
jnp
arpl
add
pop
xchg
add
add
imul
xchg
add
push
pop
xchg
jbe
add
loope
movsl
add
mov
add
std
add
add
xchg
mov
test
add
add
xchg
add
add
add
int3
cmc
cld
add
mov
lea
pop
and
push
shl
pop
sub
push
lea
push
push
push
push
push
lea
push
push
push
push
call
add
jecxz
mov
add
xchg
add
int3
add
addr16
add
testl
add
add
add
mov
add
shll
add
mov
lea
pop
cmp
jne
leave
push
push
lea
push
push
lea
push
push
call
push
add
flds
xchg
add
add
add
xchg
ret
add
int3
add
icebp
add
mov
xchg
xchg
lods
push
roll
xchg
add
pushf
add
shlb
mov
add
mov
in
scas
add
add
pop
sti
xchg
add
arpl
movsb
add
add
add
add
idivl
bound
pop
ret
push
ror
pop
push
push
push
lea
push
lea
push
push
call
push
in
push
xchg
lahf
add
add
popa
pop
lock
push
add
scas
push
shll
mov
lcall
push
fildl
les
mov
add
add
int
test
mov
add
add
pushf
in
mov
add
movb
mov
jne
add
add
mull
add
test
add
push
ljmp
adc
mov
push
add
add
dec
pop
add
push
ror
pop
push
push
push
inc
shl
ror
pop
push
push
ror
shr
shl
pop
push
push
push
call
add
push
mov
jo
pushf
loop
cld
cwtl
add
icebp
sti
loop
bound
jns
add
lea
xlat
add
icebp
add
xchg
rcr
add
push
movsb
cwtl
fidivrs
cmpsb
stc
mov
pop
imul
xchg
add
add
out
add
ja
add
mov
shll
add
cmp
add
add
pop
add
fiadds
add
arpl
pop
push
push
xor
pop
mov
push
add
sub
pop
lea
push
push
push
push
push
lea
push
push
push
lea
push
push
call
bound
xlat
fiaddl
add
mov
mov
add
loope
add
add
ret
movsb
jnp
add
outsl
add
loop
arpl
add
add
push
testl
loop
add
popf
scas
mov
lea
pop
sub
mov
push
push
call
scas
add
pop
add
mov
in
add
popf
mov
shlb
push
out
lea
add
mov
aam
add
push
test
jno
add
popf
add
jno
add
rolb
add
mov
lea
pop
shr
push
push
push
lea
push
push
push
push
call
add
cli
add
int
std
mov
scas
add
cmpsb
add
roll
les
add
add
add
add
push
pop
jo
pop
mov
add
add
add
add
add
mov
fcoms
int3
xchg
out
add
add
mov
lea
pop
add
mov
push
push
call
bound
mov
iret
pusha
add
add
mov
add
add
jge
mov
fidivs
mov
add
add
add
in
cwtl
xlat
xorb
add
out
jbe
mov
fmull
pop
or
xor
pop
add
xor
push
push
push
push
push
lea
push
call
add
scas
faddl
addb
movsl
movsl
insb
mov
roll
roll
xchg
add
add
in
jl
cmp
hlt
addb
rcrl
add
add
cli
xchg
mov
mov
pop
int3
imul
add
add
add
pop
mov
push
add
rol
rol
pop
and
push
add
sub
xor
ror
pop
rol
push
pop
rol
push
push
lea
push
push
call
push
lcall
add
mov
add
mov
test
add
pop
add
movl
lcall
lcall
mov
jp
mov
add
shll
arpl
hlt
add
add
add
add
int
lods
lods
mov
lea
pop
xor
inc
push
push
push
push
push
push
call
mov
int3
lds
imul
xchg
mov
jecxz
roll
shll
les
in
idivl
iret
repnz
lahf
call
stc
jo
add
movsb
xchg
add
xchg
in
push
into
bound
add
add
add
add
add
add
scas
add
jecxz
add
gs
lea
pop
cmpb
jne
push
sub
lea
xor
pop
add
push
rol
xor
pop
cmp
je
push
add
sub
sub
pop
add
cmpl
jne
push
push
push
push
call
push
cmpsl
add
leave
xchg
xchg
mov
add
cmc
add
lds
add
add
mov
push
mov
add
aam
fucomp
fistpl
pusha
add
jb
into
mov
adc
rcrb
daa
movsl
out
ljmp
jg
adc
ret
cltd
testl
add
leave
fucomi
in
rcrl
data16
add
jb
push
lds
jbe
lret
mov
add
add
mov
cmc
add
mov
pop
mov
lea
pop
pop
pop
push
push
push
call
test
pop
test
add
sahf
fsubs
mov
mov
add
add
je
xchg
out
sti
arpl
test
je
xchg
add
add
xlat
lahf
add
mov
int3
lea
pop
pop
push
push
push
push
push
call
jae
or
out
mov
lods
add
mov
out
movsb
pop
lahf
scas
add
add
aam
add
push
add
add
jge
push
stos
add
mov
cmpsb
add
add
mov
out
add
test
pop
xchg
mov
add
aad
add
out
xchg
scas
js
push
add
add
add
push
add
stos
add
testb
xchg
mov
adc
pop
push
lea
push
call
xchg
add
addl
mov
popa
std
mov
add
add
ja
repnz
pusha
ficomps
add
outsl
loopne
ljmp
outsl
add
icebp
cmpsb
jns
std
add
jp
faddl
add
insb
data16
fadds
mov
add
add
add
add
add
std
add
repnz
lds
mov
lea
pop
leave
push
dec
pop
ret
push
lea
push
push
push
call
jp
stos
add
cmpsb
mov
add
jmp
mov
jl
imul
add
add
push
mov
push
add
loop
out
push
add
add
add
negl
cwtl
sahf
rcr
add
add
rolb
sahf
mov
lea
pop
mov
add
push
not
ror
pop
push
push
push
lea
push
push
lea
push
push
call
add
jecxz
ret
add
push
add
add
rorl
mov
sbb
add
add
lds
pushf
addr16
loop
xchg
add
mov
jnp
add
popa
push
add
test
cmc
jb
les
add
repnz
xchg
add
les
ret
add
push
push
push
push
lea
push
push
lea
push
push
push
push
call
pop
in
mov
movb
add
push
mov
add
jae
add
movsl
ret
enter
test
add
add
stos
add
loope
arpl
mov
loopne
mov
lea
pop
xor
add
push
pop
testw
push
pop
pop
push
push
push
push
push
call
int3
add
add
icebp
jae
pop
jae
add
add
add
add
add
lods
jp
add
add
xchg
cmc
add
jle
add
movb
add
cli
add
rolb
stc
add
add
push
add
add
add
add
add
lds
int3
mov
add
test
lea
pop
pop
push
sub
pop
mov
push
lea
rol
pop
push
push
push
push
push
push
lea
push
call
xlat
fiadds
enter
add
add
mov
add
push
sti
add
add
push
popa
iret
lods
outsl
in
xchg
add
add
xchg
add
scas
jae
lahf
ja
add
pop
test
rcl
add
add
stc
add
pushf
xchg
add
pop
gs
xchg
mov
add
push
add
popa
sbb
shr
jmp
rclb
mov
lea
push
lea
push
lea
push
call
cmpsb
add
add
mov
pusha
enter
pop
add
lods
mov
clc
xlat
add
add
add
out
repnz
loop
add
push
mov
scas
add
add
cli
add
mov
lea
pop
pop
pop
push
push
lea
push
push
push
push
push
push
push
lea
push
call
clc
add
ljmp
mov
add
jne
jno
sbbl
push
repnz
test
mov
add
cwtl
addr16
add
pop
mov
add
leave
add
add
add
mov
jbe
pushf
fsin
add
jge
mov
lea
pop
pop
push
lea
push
lea
push
push
push
push
push
push
call
xchg
xchg
jbe
add
add
add
movsl
mov
test
shll
clc
scas
push
add
add
testl
aam
mov
add
add
add
aam
bound
pop
pop
push
push
call
add
cltd
lods
xchg
mov
add
cli
jle
pop
roll
add
add
add
pop
pop
in
add
in
add
push
mov
xchg
add
jae
cltd
loope
stc
add
add
icebp
add
add
pop
push
in
add
xchg
int
lahf
addr16
add
add
pop
mov
fmull
push
sub
shl
pop
leave
push
shr
pop
ret
push
push
ror
ror
not
pop
mov
add
push
lea
push
lea
push
push
push
push
push
push
push
push
call
push
lahf
pop
addb
adcb
stc
add
int3
add
popa
mov
mov
loope
add
add
add
add
mov
divb
add
add
aam
bound
pop
push
push
push
push
push
push
call
ret
add
shl
jmp
add
mov
add
jmp
je
mov
add
stc
add
jp
add
add
add
lods
jmp
movb
push
add
add
add
mov
add
neg
add
mov
lea
pop
push
push
sub
pop
push
push
push
push
push
push
push
call
add
add
add
xchg
add
add
test
add
addl
add
lods
add
add
add
lea
pop
mov
push
lea
push
push
push
push
lea
push
push
call
fiaddl
ljmp
fisubrs
lds
pusha
lods
add
lret
mov
lcall
mov
enter
add
xchg
jnp
rolb
add
iret
iret
pushf
add
jo
arpl
mov
add
jnp
stc
clc
add
push
cli
loopne
jp
out
fwait
std
pop
push
add
add
movsb
mov
subb
add
add
jp
add
fisttps
pop
push
push
not
add
pop
pop
lea
push
lea
push
push
push
push
push
push
push
push
push
call
push
add
fs
lea
add
add
outsl
fwait
add
je
add
add
mov
add
add
cmc
ret
fadds
test
add
jb
add
xorl
mov
in
aam
mov
lea
pop
sub
push
push
push
call
add
add
add
lock
scas
ljmp
add
mov
add
add
movsl
popf
fwait
mov
add
lock
cli
push
add
mov
xchg
in
ficompl
jno
add
shrl
add
mov
lods
shlb
add
add
mov
lea
pop
mov
shr
push
add
shr
add
inc
pop
add
push
not
pop
mov
push
sub
inc
xor
pop
add
push
pop
pushl
push
push
push
lea
push
call
in
add
jno
add
loope
jmp
out
arpl
popa
icebp
mov
mov
add
add
mov
out
mov
mov
push
cli
movsl
ljmp
pop
push
add
mov
lea
pop
popl
mov
push
lea
push
push
lea
push
push
push
lea
push
push
push
push
call
stc
stos
add
pushf
rorb
pusha
xchg
add
add
jl
rolb
scas
add
sahf
mov
push
add
add
mov
mov
add
add
sti
add
add
add
in
push
roll
mov
xchg
jb
icebp
add
add
fiadds
fldl
mov
icebp
pop
repnz
mov
lea
pop
add
xor
push
push
push
push
push
push
push
call
add
test
mov
testl
add
in
mov
lret
movsl
add
mov
bound
xchg
leave
pop
test
add
nop
add
xchg
pusha
add
cmc
filds
add
mov
jle
xchg
ja
scas
add
push
loopne
mov
lea
pop
lea
push
not
lea
add
pop
mov
push
push
push
push
lea
push
lea
push
call
push
mov
add
add
mov
xchg
xchg
mov
push
stos
rol
out
fs
int
test
nop
add
add
add
shrl
data16
add
testl
add
add
icebp
add
shll
scas
movsl
jmp
add
pop
add
movb
add
fldenv
mov
lea
pop
add
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
pop
les
call
add
add
int
add
push
add
cwtl
cmpsb
pop
cmpsl
add
add
add
rorl
add
pop
add
add
add
test
mov
pop
loope
loop
fidivrs
add
cltd
mov
lea
pop
xor
push
push
lea
push
push
call
gs
int3
add
in
xchg
ror
js
add
mov
lods
add
out
xchg
xchg
add
add
roll
mov
js
js
int3
out
add
pushf
xchg
add
add
scas
add
pop
rol
push
push
push
push
call
into
jae
add
sahf
add
add
in
jmp
fadds
out
mov
lea
sarl
add
jmp
xlat
add
mov
add
into
mov
xchg
mov
push
add
add
xlat
push
mov
add
popa
adc
nop
push
lea
pop
xor
push
sub
pop
nop
nop
push
sub
rol
shr
dec
pop
inc
push
sub
add
pop
nop
push
xor
dec
lea
not
pop
nop
cmpb
jne
push
push
lea
push
lea
push
push
push
call
add
push
addb
aam
movl
mov
insb
add
shlb
add
stc
pushf
jo
int3
mov
lds
jmp
jp
xchg
add
mov
add
andb
in
add
addr16
xchg
add
pushf
add
add
fnstsw
roll
pop
addb
loope
shl
mov
add
mov
lea
pop
add
push
pop
nop
nop
push
add
shl
lea
pop
cmp
je
push
push
lea
push
push
push
push
lea
push
lea
push
call
jp
ja
add
add
stc
rolb
fildl
mov
fdivs
mov
fiaddl
call
add
add
test
add
mov
xchg
xchg
add
jp
add
mov
mov
sti
mov
push
jns
add
scas
add
mov
pop
add
je
add
mov
lea
pop
nop
push
xor
not
pop
nop
push
push
lea
push
push
push
call
jno
out
stc
push
outsl
jl
pop
ja
jmp
scas
jge
add
aad
test
add
fidivl
addl
add
mov
addb
jo
lret
add
add
add
add
add
jge
xchg
jge
jbe
mov
clc
mov
add
mov
fmull
push
push
push
push
lea
push
lea
push
push
call
pop
add
add
lret
add
test
add
push
add
lods
mov
lret
pop
popf
add
add
add
add
mov
int3
cli
rolb
add
jge
add
pop
add
add
jl
test
add
add
jmp
repnz
add
pop
test
add
add
lea
pop
nop
push
pop
nop
push
add
pop
cmp
jb
xor
push
lea
pop
jmp
mov
push
lea
push
push
call
jmp
add
lds
add
jbe
mov
mov
je
add
call
mov
out
movsl
add
bnd
add
movb
leave
pop
add
ret
repnz
push
add
lods
add
enter
mov
add
add
pop
addl
enter
gs
mov
rcll
lea
pop
add
movzwl
push
push
push
push
push
push
call
jns
cld
hlt
add
add
push
mov
out
fcoml
stc
test
add
add
xchg
add
test
loop
add
add
cltd
add
add
mov
jp
adc
add
mov
sbb
inc
sbb
ror
pop
add
push
sub
ror
pop
mov
push
lea
push
push
call
les
add
cli
cltd
jmp
add
test
add
jmp
cltd
popf
pusha
int
add
hlt
mov
aad
pop
add
add
xchg
add
aad
xor
add
add
mov
lea
pop
xor
xor
push
lea
push
call
xchg
aad
movsb
xchg
call
xchg
xchg
add
aad
add
add
cwtl
mov
add
pop
fcoml
add
add
add
jae
mov
loopne
add
jnp
add
mov
lea
pop
shl
push
lea
pop
xor
shl
push
push
push
push
push
lea
push
push
call
test
sarb
lock
mov
test
stos
add
pop
mov
pusha
lods
mull
mov
add
mov
add
loopne
add
popa
lret
add
jne
add
add
add
lods
add
mov
add
mov
xchg
jns
loop
notb
mov
lea
pop
xor
shl
push
push
push
lea
push
push
lea
push
push
push
push
push
call
lcall
add
add
movb
mov
jbe
ficompl
add
fs
add
test
test
add
xchg
mov
mov
popa
sub
or
mov
push
add
pop
add
push
sub
pop
pop
push
lea
sub
pop
pop
push
push
push
push
push
push
push
lea
push
push
push
call
add
xchg
jecxz
mov
test
add
add
pop
add
add
add
add
jns
add
in
push
add
rcrl
add
add
scas
je
cmpsb
leave
add
cli
add
pop
add
add
stos
add
rorl
pop
pop
push
push
push
push
push
push
lea
push
push
push
call
push
add
push
xchg
add
push
mov
int
xchg
imul
add
call
push
jmp
mov
retw
scas
stc
hlt
stc
jecxz
orl
outsl
imul
rol
jecxz
sub
pop
leave
push
sub
pop
ret
push
push
push
push
push
push
push
push
push
call
je
gs
out
pop
add
iret
sahf
add
mov
mov
add
incb
add
add
add
pusha
rcll
mov
jno
add
jecxz
add
push
mov
add
cmpsb
add
jp
in
pop
jp
imul
add
int3
lea
pop
mov
push
sub
inc
dec
pop
push
push
inc
lea
lea
add
pop
push
push
push
sub
lea
add
lea
pop
push
push
sub
pop
mov
mov
push
push
push
lea
push
push
push
lea
push
push
call
add
aad
in
lret
ret
push
xlat
mov
lret
test
stos
add
mov
push
add
call
push
xchg
out
mov
add
stc
mov
add
pop
jns
mov
and
jge
push
dec
pop
test
je
push
push
push
push
push
push
push
push
call
lods
add
fisubrl
add
xchg
add
rcl
mov
mov
pop
add
movl
icebp
add
add
in
add
add
add
mov
add
fmull
movsl
mov
pop
add
add
mov
pusha
add
pop
mov
push
push
push
push
push
lea
push
call
mov
notl
jns
add
mov
fucom
mov
add
add
test
jnp
mov
add
mov
loop
mov
mov
cmpsl
add
movb
in
add
add
mov
cltd
imul
add
add
sti
add
mov
stos
stc
add
add
add
push
cltd
pop
mov
lea
pop
test
je
push
add
pop
mov
mov
push
ror
pop
mov
inc
push
shr
lea
sub
pop
cmp
je
test
je
push
add
pop
mov
push
push
push
push
push
call
sahf
xchg
scas
add
jae
mov
xchg
add
aad
aam
add
jp
add
lods
add
enter
add
mov
add
push
incb
out
add
pop
add
add
add
shlb
push
int3
lea
pop
inc
push
lea
push
push
call
fiaddl
xchg
pop
mov
mov
push
add
pop
mov
in
leave
add
lods
mov
add
add
add
push
call
add
add
pop
add
movsl
cld
push
popa
cltd
test
loop
cwtl
mov
fs
les
rorb
test
rol
inc
pop
test
jne
xor
push
push
lea
push
call
add
insb
test
add
shl
scas
mov
add
add
icebp
jbe
add
mov
fwait
mov
add
push
xchg
loopne
filds
mov
add
in
incb
repnz
mov
data16
add
add
jo
int
imul
add
test
out
xchg
fwait
roll
xlat
pop
push
mov
ljmp
or
pop
push
push
push
call
mov
icebp
pop
add
bound
push
fiaddl
pop
fstps
add
add
outsl
add
add
fstpt
test
lock
add
out
out
ret
imul
add
shll
add
add
mov
mov
add
add
mov
add
fistl
pushf
jl
add
add
add
pusha
or
pop
pop
push
not
not
xor
pop
pop
push
push
push
push
lea
push
lea
push
call
mov
movsb
mov
int
jle
add
add
add
ja
mov
repnz
mov
imul
add
fwait
jge
add
add
ljmp
scas
pop
add
cld
add
push
imull
add
add
add
cmpsl
mov
lea
pop
leave
push
add
sub
pop
ret
mov
push
add
pop
inc
cmp
jne
push
sub
ror
shr
pop
lea
push
push
push
lea
push
push
lea
push
push
push
push
push
call
repnz
out
popa
mov
cmpsb
movsl
aam
cli
jns
fidivl
shlb
mov
lret
add
add
add
add
push
xchg
xchg
lea
jmp
mov
add
imul
push
add
aad
idiv
add
add
add
mov
add
loopne
lret
mov
fmull
popa
add
add
push
xor
rol
pop
mov
push
not
add
pop
add
cmp
jne
push
pop
mov
test
je
push
ror
pop
mov
push
sub
pop
add
cmp
je
push
push
call
add
loope
add
push
xchg
jae
jge
iret
call
add
add
add
pop
shl
loope
add
lods
ret
clc
addl
add
add
hlt
into
rcll
push
push
add
fcoml
mov
loopne
icebp
add
xchg
pushfw
cmpsl
fchs
jge
add
shrb
or
lock
pushl
rclb
inc
pop
mov
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
pusha
mov
add
lret
add
adcb
add
add
flds
add
add
incb
std
scas
add
insb
add
mov
mov
sti
mov
jnp
rol
mov
cwtl
add
push
add
repnz
xchg
add
add
out
fisubs
clc
ret
push
iret
add
mov
lea
pop
pop
pop
push
ror
pop
pop
push
add
shl
shr
pop
pop
push
sub
inc
xor
pop
leave
ret
push
lea
push
push
push
push
push
push
push
lea
push
call
add
mov
jge
add
xchg
add
add
cmpsb
mov
out
sub
add
scas
add
push
addb
scas
xchg
mov
lds
mov
call
add
lea
pop
lea
pop
push
push
push
call
mov
pushf
sti
scas
outsl
sahf
add
data16
js
adc
lret
jns
cld
add
fisubrs
jmp
mov
add
pop
test
mov
cmc
leave
mov
lea
pop
pop
push
rol
sub
add
pop
pop
push
dec
lea
shr
pop
pop
leave
push
inc
ror
pop
ret
push
add
rol
pop
mov
push
add
pop
pop
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
stos
add
mul
jo
addr16
clc
mov
add
mov
fldl
add
insb
popl
addr16
add
add
cld
add
add
fucomip
flds
cmc
bound
fwait
add
fnsave
jno
add
cmpsl
cld
add
mov
and
pop
push
xor
pop
pop
push
inc
pop
pop
leave
push
push
push
call
rcr
add
add
fidivl
push
add
mov
stos
add
add
add
add
jo
mov
add
mov
jne
aad
add
jae
lret
jb
add
xlat
add
xchg
add
add
or
ret
cli
cwtl
pop
jb
test
jb
pop
pop
jb
fcomps
sub
sbb
pop
jb
call
pop
jb
xchg
pop
jb
imul
pop
jb
add
add
out
loop
test
and
pop
ret
mov
daa
lret
cmp
cmp
xchg
jmp
scas
sbb
xchg
sbb
xor
sti
mov
aam
fwait
add
mov
shll
mov
out
push
xor
jbe
cmpsb
inc
cltd
fucomp
daa
mov
cwtl
adc
xor
mov
jge
mov
pop
insb
cld
aam
pop
mov
nop
jge
test
std
inc
jbe
arpl
or
sarl
aas
inc
out
stc
scas
jb
outsl
je
test
hlt
sbb
outsl
mov
andl
movsb
mov
push
aas
addr16
xor
push
add
mov
cmp
pop
pop
sub
inc
das
mov
outsb
jp
lret
call
sbb
cmp
in
jge
icebp
dec
idiv
loopne
bound
stos
jae
sti
scas
dec
cmp
xchg
js
sbb
push
addr16
fcos
leave
out
push
cs
stos
repnz
es
sahf
sub
lahf
xchg
loop
test
and
sub
insl
int
sbb
and
inc
mov
js
negl
dec
lahf
loopne
pushf
aaa
sub
stc
jge
icebp
mov
xorl
or
and
aas
cwtl
pushf
mov
cld
ds
and
and
xchg
xor
sbb
dec
dec
loopne
test
ds
ret
fsubrl
adc
in
cmp
jnp
mov
fwait
jnp
movsl
insb
add
cli
nop
loopne
or
push
hlt
mov
lret
mov
push
fiadds
sub
les
sahf
int3
out
or
loopne
mov
and
cwtl
mov
jl
or
pop
mov
lcall
add
pop
std
repz
push
sbbl
arpl
xchg
fwait
mov
outsb
jno
xchg
add
int3
imul
xchg
cmp
dec
iret
mov
jns
mov
and
xchg
pop
dec
xchg
call
loope
mov
div
sbb
jp
les
daa
ds
mov
arpl
call
mov
shll
pop
sbb
lods
pop
imul
sub
movsb
mov
icebp
pop
lahf
cmp
setnp
test
test
sti
insb
iret
or
arpl
idivb
outsb
stc
push
sbb
std
test
sub
out
icebp
rcl
dec
add
stos
rcll
inc
cwtl
jnp,pn
push
mov
fstps
mov
inc
lcall
arpl
or
xor
xor
loopne
add
adc
inc
cmpsb
inc
shlb
pop
loopne
out
push
sbb
and
sbb
pop
cmp
sub
cmpsb
push
adcb
sub
cmp
fwait
mov
dec
mov
fbstp
adc
sub
or
push
mov
jns
mov
andl
int3
int3
dec
mov
int3
jno
push
pop
pop
adcb
sub
pop
dec
clc
nop
cmpsl
movl
je
xchg
out
movsb
add
mov
xchg
lods
or
rolb
imul
push
out
scas
jb
call
mov
std
mov
mov
push
sub
and
nop
bound
aad
cli
pop
test
adc
out
jo
fsubrp
xchg
mov
nop
sar
fwait
and
notl
mov
dec
inc
xchg
pushf
mov
sbb
fidivrs
inc
out
add
dec
idivb
dec
adc
xchg
xlat
cmp
int3
push
stos
sbb
sbb
rcll
jb
daa
shlb
pop
xchg
test
push
dec
fucom
inc
imul
jp
test
push
jge
push
adc
push
inc
cli
aad
in
pop
out
nop
dec
divl
movnti
mov
clc
lret
inc
fcompp
bound
xchg
out
mov
lods
push
mov
jle
mov
lods
iret
xchg
pop
insb
adc
push
dec
mov
cmp
add
in
mov
sbb
cwtl
arpl
adc
ficoml
inc
mov
enter
lods
arpl
xchg
repz
shlb
pop
fcoml
push
mov
jne
mov
sub
rorb
cmp
adc
jge
adc
sti
test
pushf
mov
rcr
int3
add
mov
xchg
cmc
mov
inc
data16
stc
mov
out
mov
add
popa
and
xor
mov
or
subl
sub
xchg
cmc
shll
ss
mov
cmc
loopne
lds
push
pop
sub
ss
sub
mov
cld
fcmovnu
pop
jecxz
cmp
dec
adc
sbb
dec
test
push
bnd
mov
dec
lock
and
or
ss
in
into
push
outsl
push
fstpl
sbb
add
out
mov
je
enter
xor
sbb
sub
pop
xchg
adc
popa
mov
dec
jo
mov
popa
sbb
lret
lock
les
je
add
mov
popf
mov
dec
pop
push
aam
fwait
sti
cmp
imul
loope
test
push
pop
pop
or
jecxz
push
xor
gs
int
data16
jno
sbb
fidivrs
push
xlat
enter
jl
xor
inc
or
adc
xchg
inc
mov
adc
loop
loope
stos
icebp
xchg
cmp
xor
pop
mov
and
test
fwait
iret
ja
mov
and
inc
mov
or
mov
and
lock
jp
dec
adc
sbb
xchg
dec
mov
sub
mov
fs
add
jle
repz
js
stos
cmp
insb
orb
push
addr16
mov
inc
xlat
enter
fwait
add
into
jge
or
xchg
pop
add
das
fisttpl
add
rorb
imul
xor
push
movsbl
mov
jg
loop
test
pop
stc
shlb
sub
fnsave
mov
pop
sbb
dec
testl
addr16
mov
popf
push
xlat
test
nop
insb
insb
lods
push
add
pop
sub
push
cmpsb
jmp
jo
or
les
lea
or
ret
cmp
push
adc
xor
push
pusha
pop
and
jno
push
jns
pop
dec
xchg
rolb
pusha
add
ret
mov
inc
inc
cwtl
test
cmp
sbb
xchg
pop
or
jne
dec
test
pop
or
popl
repnz
data16
rol
rclb
fists
or
les
fstps
lahf
clc
mov
sbb
xor
lods
lcall
inc
icebp
ljmp
shlb
mov
scas
or
jge
stos
int3
int3
sbb
dec
rclb
loopne
hlt
es
int
dec
add
dec
hlt
insl
sbb
and
add
cmp
mov
push
fidivrl
cmpsl
das
in
lahf
popf
adc
sahf
or
or
imul
mov
repnz
mov
mov
stos
or
lea
sbb
xchg
iret
test
imul
stos
sarl
jns
xchg
jmp
pop
lcall
loopw
xor
cmp
mov
arpl
hlt
cmp
js
add
addr16
mov
pop
push
clc
ljmp
xchg
daa
dec
mov
ficomps
aad
out
test
fcompl
xor
dec
cmp
ret
mov
cmp
sub
lds
sbb
test
loopne
sahf
push
add
repnz
popf
jle
xchg
jp
dec
daa
dec
pusha
jns
ret
xchg
lds
lret
jnp
lea
cld
icebp
push
cmp
push
mov
ss
jae
mov
mov
sbb
enter
push
pop
dec
xchg
insb
aam
pop
aaa
xchg
xlat
arpl
repz
cmp
or
adc
lods
aas
test
pushl
cmp
xchg
fwait
sub
adc
testl
mov
cmp
lods
jae
nop
mov
rcrb
lods
mov
int
outsb
push
ja
inc
nop
mov
sbbl
movsl
shlb
or
jne
inc
aaa
int
cmc
jmp
ret
in
adc
sbb
addr16
jne
arpl
mov
fs
sub
mov
cwtl
repnz
ror
test
movsb
or
mov
es
jb
push
dec
push
push
pop
mov
pop
cmp
jnp
xchg
ljmp
push
aaa
adc
aad
test
loopne
cltd
xchg
jns
shll
push
shrb
test
jg
mov
fs
xchg
mov
mov
fisubs
jo
cmp
inc
cmp
pop
sub
orb
fldl2e
aaa
xor
scas
pop
std
adc
test
mov
sahf
lods
or
fucomip
test
arpl
punpckhdq
roll
jb
repz
mov
or
loopne
aam
insl
push
mov
sahf
sar
ja
cltd
cs
jb
fwait
xor
jnp
xor
mov
adc
push
outsl
inc
outsb
shll
movsl
imulb
push
loope
cmp
pop
xor
mov
std
lea
xchg
add
mov
pop
rol
pushf
add
push
pop
cmp
sub
es
test
movl
xor
popa
xor
ror
insb
out
jbe
mov
push
sahf
inc
xor
mov
loop
gs
push
jmp
pop
notb
inc
andb
jl
int
mov
imul
hlt
das
xchg
pop
rcll
ss
xchg
sub
daa
add
dec
mov
fcomi
cs
in
mov
aam
mov
xor
mov
test
pushf
andl
js
add
mov
or
iret
out
sbb
adc
cmp
jb
mov
push
add
sbb
mov
dec
data16
aad
cmpsl
sub
xor
jns
incb
push
call
fimull
es
mov
shll
jns
insb
rolb
into
jb
push
adc
lods
inc
lock
dec
out
enter
mov
or
scas
xchg
pusha
xor
pop
xchg
cltd
loope
movl
mov
sbb
xchg
aas
lahf
scas
mov
iret
je
data16
jnp
sbb
jge
push
xchg
sbb
jae
movsl
icebp
lds
add
cld
test
stos
outsb
adc
inc
ds
nop
scas
or
mov
pushf
mov
mov
daa
jo
xor
nop
mov
out
pop
mov
cmpsl
inc
add
mov
mov
xor
in
and
jl
ret
ret
aad
dec
cli
shl
push
enter
jbe
adcl
cmp
stos
inc
lods
mov
mov
or
test
pop
aam
inc
mov
outsb
xchg
and
inc
shlb
push
lahf
scas
je
int3
and
jns
and
pop
mov
jmp
cwtl
pop
mov
mov
ror
insl
pusha
cltd
dec
fisubrl
ret
lods
out
mov
sbb
mov
jmp
enter
mov
mov
decb
pop
lock
sub
pop
jns
sbbb
jecxz
push
xchg
and
stos
mov
lea
pop
cmc
movsb
stos
gs
mov
test
pop
mov
out
data16
mov
push
test
jns
out
rcll
pushf
aas
jnp
jmp
lahf
testl
sub
aam
into
xchg
sahf
cmc
xlat
push
in
jne
repz
das
inc
imul
inc
push
jecxz
pop
loopne
enter
fbld
mov
or
dec
clc
das
xor
ja
roll
inc
add
fldl
push
popf
push
cmp
xchg
in
and
out
clc
xchg
into
or
and
or
mov
cli
and
imul
popf
rcl
mov
mov
push
sbb
aam
pop
ja
mov
pop
or
inc
pop
sbb
cmp
mov
daa
or
push
xor
mov
mov
cmp
sub
xchg
dec
xor
scas
xchg
sbb
data16
push
pop
jmp
test
xlat
sarb
cs
xchg
mov
cmc
stc
outsb
stc
add
mov
push
mov
mov
int3
inc
aam
jo
pop
or
adc
dec
movsl
fldenv
fwait
das
pop
inc
out
jno
push
sub
mov
pushfw
dec
cli
inc
test
mov
jo,pt
sar
in
lods
and
add
fucomi
cmp
mov
sub
out
fistps
in
mov
idiv
lds
pop
and
sbb
sahf
aas
dec
out
test
push
fsubp
insb
dec
sbb
in
xor
adc
cmc
test
xor
and
xchg
sbb
pop
fwait
pop
push
es
jmp
inc
pop
cmp
xor
pop
xor
mov
pop
into
cli
hlt
rcr
mov
jbe
inc
push
scas
xchg
lds
setns
mov
scas
aad
mov
pushf
movsb
mov
push
cwtl
pop
cmp
mov
mov
xorl
shrl
aas
or
jl,pn
fwait
mov
push
mov
loop
icebp
jl
push
andl
leave
arpl
mov
imul
xor
cmp
jle
dec
loop
xor
jge
xor
pop
pushf
decb
sarl
shll
or
out
les
and
push
inc
filds
xchg
ljmp
or
repnz
pop
xchg
fs
pop
mov
popf
insb
fildll
ret
dec
bound
fwait
lods
test
roll
scas
xor
imul
cs
outsb
mov
mov
inc
mov
pop
or
adc
outsl
jno
sub
mov
popa
test
xlat
jae
jns
gs
pop
push
test
xor
jg
lret
mov
popf
mov
pushf
imul
push
pop
add
sbb
xchg
test
lahf
lcall
or
sbb
jno
xchg
add
imul
xchg
insl
mov
mov
outsb
mov
pusha
imul
and
pop
or
cmc
repz
sbb
and
outsl
sarl
test
fildl
and
mov
enter
cwtl
xor
push
add
xorl
loopne
mov
sbb
jmp
mov
das
mov
pop
pop
or
pop
popf
clc
jp
xorl
pop
jno
push
rcr
sti
shrb
jl
insl
add
xor
stos
pop
jge
cli
shrl
pusha
or
adc
mov
divb
aaa
mov
popa
leave
mov
fmulp
loop
subb
nop
push
lock
mov
xor
leave
dec
out
pop
fidivl
dec
arpl
sub
rcll
in
pop
pop
adc
stos
in
add
hlt
sub
sub
mov
sti
gs
dec
out
xor
push
outsb
xchg
mov
inc
loope
mov
ret
icebp
mov
ja
mov
lock
int
shl
insl
xchg
lcall
mov
scas
mov
fs
sbb
xor
notl
stos
insl
cwtl
adc
sub
push
jns
outsb
jmp
mov
orl
mov
leave
inc
and
push
test
xor
mov
xlat
incl
int3
xorb
xor
push
dec
aad
sbb
lret
add
pop
pop
fiaddl
xchg
sar
inc
loopne
adc
popa
xor
adc
repz
gs
test
pop
xchg
pop
pop
cmp
aam
cli
leave
into
xor
jnp
testl
leave
ret
add
iret
fdivl
or
pop
ja
push
pop
ret
pop
insb
cmp
ljmp
cs
jno
divb
gs
nop
push
lods
sti
xchg
shlb
adc
out
prefetchwt1
xchg
popf
jmp
mov
aas
push
hlt
aaa
fsts
xchg
scas
jne
xor
aam
in
fsubrs
pop
outsb
mov
addr16
adc
ds
subl
lods
lmsw
popa
fisttpl
out
add
or
mov
push
adc
rorb
repz
push
shll
iret
dec
shl
test
push
subl
and
jecxz
adcl
cwtl
inc
pop
pop
push
push
cltd
add
inc
lret
inc
clc
aam
mov
xorl
shrl
cmp
pop
push
inc
mov
adc
roll
jns
int
xchg
sub
or
xor
mov
dec
push
loope
cmc
mov
pop
pushl
fdivrl
adc
push
pop
pusha
fsub
mov
or
jnp
js
pop
sahf
cs
xchg
mov
cld
pop
mov
sahf
loopne
dec
jg
pushf
xor
mov
imul
or
mov
sbb
or
nop
jmp
xchg
and
movsb
enter
loope
mov
popa
outsb
mov
ret
sub
xor
mov
xor
xor
dec
inc
or
test
push
cmp
nop
daa
in
lock
daa
push
mov
inc
sub
or
mov
ds
fwait
ret
mov
push
xor
cmp
inc
xchg
nop
shrb
ljmp
jb
xlat
inc
in
test
dec
push
outsl
jmp
andl
out
sub
loope
sbb
dec
xchg
and
mov
and
in
sbb
fstl
mov
sub
cs
fs
sub
shll
jp
sbbl
pop
mov
cli
mov
mov
mov
jb
push
or
mov
call
aad
xchg
hlt
push
xchg
je
mov
add
mov
mov
jle
push
push
pop
ret
out
cmp
xchg
pop
enter
add
adc
lods
xchg
out
push
xchg
data16
and
pop
or
fisubs
dec
mov
sbb
jg
mov
test
xchg
mov
sbb
add
mov
xchg
sub
xor
cmc
mov
mov
xchg
outsl
xchg
mov
clc
cs
sub
jbe
pop
and
cmp
pop
xchg
dec
pop
xor
xchg
scas
pop
jo
int
cmpsl
cmp
movsb
scas
jmp
or
xchg
into
test
notb
pop
sbb
pop
push
xchg
mov
dec
add
mov
jne
arpl
scas
mov
xchg
inc
pop
push
enter
xchg
out
mov
loop
rorb
ds
test
push
outsl
jns
sub
scas
pop
push
bt
push
fs
test
mov
mov
sti
jmp
test
jmp
rcrb
add
arpl
mov
xlat
jmp
outsb
insl
mov
jbe
fisubrl
add
jecxz
subb
jl
rcl
mov
out
dec
mov
popf
ja
popa
ret
pushf
cmp
lahf
movsb
and
bnd
ja
mov
jb
cmc
inc
mov
sbb
fmul
lahf
sub
cmp
movsl
popf
flds
int3
outsl
mov
sbbb
mov
mov
pop
xor
xor
nop
aaa
ret
and
inc
out
lods
add
jp
mov
pop
sti
xor
mov
nop
pop
outsl
pop
add
repnz
mov
shrb
mov
add
stos
mov
fiadds
rcrl
sub
ja
aas
sub
mov
jl
lds
push
mov
push
scas
cld
xchg
sub
push
xchg
pop
nop
mov
or
or
mov
loope
xor
mov
dec
push
mov
out
lds
loopne
mov
mov
adc
xor
inc
shll
lret
and
or
mov
enter
pusha
outsb
loope
push
xor
inc
and
addr16
lea
rol
pop
in
or
into
cmp
or
dec
jge
jle
cmp
dec
mov
stc
clc
in
sahf
ljmp
negl
in
pop
sbb
xchg
or
push
sbb
jnp
lea
mov
cmpsl
pop
sbb
sub
and
sbb
into
hlt
cltd
inc
in
pop
mov
sbb
mov
sbb
pushf
cmp
ss
sub
mov
sub
push
push
cmp
xchg
pop
test
jmp
push
stos
xchg
add
negl
sbb
cmpb
push
sti
inc
ret
mov
mov
inc
pop
adc
pop
stc
xchg
leave
pop
xor
cli
jl
imulb
es
lock
mov
add
insb
inc
enter
mov
rorb
mov
sub
xchg
add
lcall
gs
aad
dec
jae
and
or
jne
into
jo
test
out
jno
outsb
add
cwtl
and
pop
les
cmp
pop
nop
out
pushf
in
sub
dec
lock
sbbl
sub
scas
cltd
imul
sti
sbb
dec
xor
xchg
or
es
cmc
roll
ss
add
mov
dec
out
mov
inc
ret
jnp
insl
inc
push
ds
mov
repnz
pop
in
fildl
push
adc
ss
push
test
push
mov
fstpl
adcl
xor
xchg
push
les
ja
xchg
inc
xor
mov
repz
push
jp
ss
test
out
add
les
ud0
in
out
mov
popf
jl
inc
mov
mov
push
into
in
les
lret
xor
cmp
add
mov
jbe
jg
sub
and
xchg
add
lahf
mov
aad
scas
imul
add
movb
add
mov
jnp
push
push
out
push
popl
loope
mov
push
jg
pop
outsb
inc
pushf
sbb
mov
sub
push
fwait
adc
pop
arpl
adc
fmull
mov
push
dec
jno
add
and
jnp
filds
sar
icebp
jbe
pop
shrb
fisttpl
cmp
sbb
xchg
mov
shlb
mov
rorb
cmp
mov
mov
jmp
ss
push
xchg
clc
daa
mov
and
adc
dec
subl
sbb
outsb
lods
lahf
mov
cmpsb
and
cmp
push
stos
or
or
or
add
jmp
add
push
xchg
jne
xchg
hlt
inc
faddl
cltd
add
mov
mov
xlat
or
xchg
sub
rcll
mov
mov
js
jne
jno
mov
stos
or
pop
xchg
mov
xchg
mov
std
pop
int
add
loopne
cwtl
adc
add
inc
out
jnp
lahf
sub
call
xor
out
test
rcl
pusha
pop
movb
xlat
xor
or
cmp
push
inc
lret
sbb
sahf
dec
add
push
add
jmp
sbb
gs
inc
jo
dec
mov
ss
aas
in
adc
sbb
test
mov
std
xor
mov
sbb
test
sub
inc
out
stos
pop
test
insl
pusha
lahf
dec
cmp
out
and
sub
jge
mov
sbb
nop
mov
xchg
les
sarl
sbb
or
and
dec
rcr
nop
push
push
and
pop
xor
push
and
stos
sbb
jecxz
arpl
adc
adc
and
and
xchg
pop
jae
in
in
push
push
mov
jmp
in
stos
jns
call
in
adc
xor
sub
insb
push
pusha
testb
in
out
mov
test
test
mov
mov
and
scas
xchg
testl
cmc
movl
mov
aad
cmpb
int
mov
mull
and
mov
push
stc
jae
jmp
cmp
cmpsl
lods
jnp
inc
ljmp
jo
adc
loop
fstl
testl
push
dec
jmp
scas
in
fnstsw
fidivs
cmpsb
xlat
ficoms
popf
aaa
jbe
adc
mov
jae
scas
outsl
ljmp
adc
jg
adcb
fsts
dec
aad
or
rorl
sbb
xchg
xlat
add
cld
dec
xlat
add
mov
pop
fnstenv
push
je
pop
lock
push
mov
lds
jg
xchg
push
das
fdiv
add
mov
xchg
push
mov
dec
imul
pop
xchg
mov
cmp
popa
fsubrl
outsl
gs
inc
test
popa
bound
daa
sub
int
pop
mov
out
cmpl
popf
inc
mov
sarl
out
mov
mov
aaa
mov
bound
in
icebp
cmp
icebp
sub
les
mov
mov
rorl
and
aaa
pop
sbb
insl
aas
test
cwtl
fmull
mov
mov
and
pop
ja
loope
stc
movsl
mov
push
popa
cld
enter
icebp
jb
mov
in
cmp
cmp
les
mov
jns
aam
out
loopne
dec
sbb
fs
adc
jg
cmp
lahf
push
adc
pusha
xorb
ficoms
outsb
loopne
scas
cmp
inc
pop
and
mov
push
mov
mov
dec
jno
pop
adc
mov
push
jnp
push
mov
lock
mov
and
aam
mov
rcll
sub
fiaddl
aam
les
push
pop
pop
lods
dec
jb
dec
mov
mov
testl
dec
fadds
ret
sub
into
jle
jge
jb
shl
mov
bound
push
call
fidivrs
adc
out
and
movsb
jbe
mov
popf
call
dec
or
loop
out
pop
test
adc
sbbb
jae
cmpsl
jae
fidivs
je
loop
clc
mov
mov
sbb
mov
xor
test
inc
inc
call
cwtl
std
mulb
or
mov
das
es
aad
fstl
cltd
insl
cltd
jo
dec
mov
sub
aam
ret
sti
rcl
icebp
out
stos
data16
inc
fs
ret
xchg
pop
sahf
or
adc
loopne
cltd
cmp
jns
movsl
pop
cmc
fmuls
pop
dec
shll
mov
pop
sub
add
xlat
test
pop
pop
add
lahf
fwait
test
in
mov
jmp
pop
in
aas
cmp
das
adc
outsb
hlt
sub
and
sarb
mov
and
add
shlb
jnp
outsl
adc
clc
jo
test
in
sbb
dec
xchg
je
dec
sbb
dec
int
int3
dec
lcall
dec
scas
inc
fistpl
loopne
or
mov
jb
push
dec
js
into
sub
hlt
or
push
pop
jl
jge
std
jns
imul
cmp
mov
aam
lds
adc
cli
test
out
sbb
sahf
inc
cwtl
pop
fdivl
xor
mov
mov
lds
inc
adc
pop
pop
mov
inc
sahf
jmp
sub
xor
or
imul
rolb
dec
insb
pushf
or
clc
xor
out
loope
popf
push
loop
repz
rol
xchg
outsb
and
push
cmp
xor
inc
scas
cltd
cmc
or
in
rclb
es
pop
mov
ja
lea
mov
jbe
push
movsl
pop
jge
cmc
jbe
inc
ja
subb
jae
push
rcrb
sub
xchg
fldl
dec
xchg
push
adc
pop
xor
inc
inc
xlat
jg
jno
pop
push
jnp
lcall
out
fistpl
ja
mov
enter
iret
dec
imul
jge
pop
xchg
ss
dec
or
xchg
in
outsl
andb
dec
jns
fisttps
fnstsw
outsl
inc
and
shrb
sbb
ret
fistl
and
adc
test
inc
xor
stos
cmp
icebp
jnp
jnp
jae
por
or
pop
lods
push
and
lea
nop
fidivl
inc
fcoms
mov
xchg
pop
outsl
jmp
movsl
je
push
add
hlt
add
daa
add
pop
shlb
push
jg
or
inc
cmp
cmp
icebp
leave
repnz
icebp
mov
dec
fs
mov
pop
or
mov
popa
pop
add
scas
push
pop
ss
pop
test
mov
in
xchg
dec
jp
xor
push
sub
pop
mov
xchg
lods
imul
outsl
sub
add
inc
cmpsl
lods
lods
sti
arpl
push
in
mov
sub
loopne
pop
imul
jb
and
mov
clc
loop
inc
and
mov
fmul
les
push
mov
lea
pop
xor
mov
jle
inc
lds
push
sbb
sub
imul
and
in
adc
aas
pushf
push
cmp
mov
loopew
arpl
mov
aam
xorb
xchg
inc
push
xor
mov
xor
adc
bound
scas
jbe
inc
addr16
pcmpgtw
jb
pushf
jne
jecxz
mov
arpl
sub
repnz
pop
cmp
adc
adc
jl
dec
lea
inc
jno
into
or
xor
dec
pusha
xor
mov
or
jnp
lods
mov
sti
pusha
pop
xor
in
andnps
sub
nop
out
in
repz
sahf
fnstcw
jl
popf
mov
xchg
lret
lcall
daa
repz
gs
pop
cli
mov
pop
fisttps
out
addb
sub
jp
fs
fwait
pop
int
pop
cmpxchg
xor
adc
rep
stos
cmp
mov
or
mov
cmc
inc
inc
jno
sbb
arpl
stc
pop
sbb
inc
insb
icebp
mov
cmpsb
mov
push
dec
stos
dec
inc
in
iret
fiaddl
inc
jbe
pop
enter
push
mov
test
mov
mov
incb
sub
ljmp
in
leave
gs
mov
mov
inc
pop
jle
xor
gs
xor
mov
lods
push
xchg
jae
mov
cmpl
xchg
loop
pop
in
data16
lahf
sub
je
hlt
das
dec
ljmp
push
ja
xchg
loop
shrl
mov
dec
adc
cmpsl
loop
pop
sub
jb
adcl
cmp
xchg
push
xchg
sub
jns
mov
aad
popa
push
xor
and
insl
sub
push
sub
lock
daa
xor
cmc
aas
addb
mov
rcrb
jmp
push
jnp
icebp
dec
or
cmp
int
addl
je
aad
mov
adc
fnstenv
xchg
jb
scas
das
mov
hlt
shrl
pop
pop
or
addl
lock
dec
repnz
lcall
sbb
sbb
pop
sbb
popa
add
push
loope
iret
jl
scas
cs
add
flds
inc
adc
insb
adc
stos
imul
dec
push
fcomip
mov
repz
or
sub
movntq
sub
leave
dec
adc
cmp
fwait
jnp
mov
mov
mov
xor
push
push
in
dec
mov
fimuls
inc
rclb
imul
je
sbb
sub
sbb
adc
shlb
jle
xor
mov
xor
cs
add
cwtl
jne
jne
and
cld
mov
mov
adc
aas
dec
jmp
add
cmp
out
push
leave
outsl
mov
test
sbb
add
or
pushf
sbb
push
sahf
insl
add
aaa
sbb
jb
ret
adc
xor
aas
adc
xchg
inc
mov
into
outsb
push
jg
cmc
add
and
das
cltd
enter
mov
scas
sbb
mov
dec
add
sub
sbb
adc
dec
jmp
adc
insl
lret
push
adc
fsubs
push
xchg
adc
cmpsb
mov
fnstsw
pop
xchg
xchg
or
aam
negl
xlat
push
add
rolb
ret
fidivl
imul
xchg
stc
jnp
sbb
pop
lock
xor
or
adc
pusha
push
fs
cltd
jge
sbb
fistpl
shr
cmpsb
mov
jno
sti
pop
jb
punpckhdq
push
fnstenv
dec
fldt
dec
push
ret
popa
scas
xchg
stos
lret
jl
mov
sub
fstp
mov
xchg
jb
mov
dec
pop
cmp
jns
mov
cld
int
xchg
mov
insl
dec
inc
jnp
aad
testb
jp
add
xchg
dec
xchg
ja
mov
inc
jb
das
mov
mov
andb
push
fadd
mov
ret
rcll
je
loopne
fiadds
mov
ret
movsb
sub
ret
cmp
sahf
popa
adc
repnz
fwait
test
addr16
push
enter
inc
sarb
adc
cmp
mov
ret
dec
dec
call
ret
pop
pop
and
mov
insl
xchg
iretw
stos
mov
cmpsl
stos
adc
mov
mov
add
mov
insb
jecxz
inc
and
ret
and
std
inc
test
mov
bound
adc
add
sub
mov
icebp
cmp
mov
xorb
xor
dec
xchg
xor
int3
pop
inc
sub
xorl
lds
mov
hlt
push
pushf
lods
mov
sbb
xchg
inc
jb
push
aas
daa
in
push
movsl
test
fisttpl
push
ss
xchg
cmp
imul
popa
fadd
dec
push
pop
xchg
xlat
jmp
jbe
repz
jle
dec
lret
fstpt
push
mov
sbb
in
xor
pop
les
jbe
into
lods
add
inc
inc
addr16
fnstcw
push
or
inc
sub
xor
call
lcall
lret
test
ret
jnp
add
pop
xchg
sbb
mov
xor
stos
lret
sub
fmuls
jmp
add
mov
fisttps
dec
pop
dec
adc
faddl
hlt
icebp
jnp
inc
dec
in
push
push
cmp
sbb
xor
xchg
jp
je
pop
mov
in
hlt
jecxz
cwtl
lods
pop
inc
mov
stos
adc
das
loop
das
xor
xchg
add
dec
adc
cmp
sub
cld
enter
pop
sub
cmc
push
pop
pop
rcll
mov
mov
test
xchg
mov
iret
pop
push
sbb
and
outsb
mov
clc
jno
and
or
outsl
inc
mov
fisttps
mov
add
add
ds
pushf
fstpl
cmp
jmp
sub
js
xchg
inc
xlat
xor
fimuls
or
jle
xor
and
cmc
sub
leave
mov
pop
pop
insl
sbb
adc
stc
pop
pop
push
cld
shlb
jbe,pn
imul
cwtl
and
hlt
jne
push
stos
in
sbb
mov
arpl
movl
mov
call
adc
in
imul
jbe
xchg
mov
pop
inc
gs
mov
roll
mov
lods
or
mov
push
cld
pop
subl
jne
xchg
sarl
inc
mov
adc
mov
stos
push
popf
push
pop
xabort
in
add
push
das
sub
dec
pop
out
ja
insl
pushf
and
mov
xchg
das
dec
xchg
out
popa
pop
add
pop
mov
daa
or
arpl
je
mov
lods
xor
into
sbb
lods
out
jo
outsb
pop
stc
popa
fimuls
dec
xor
mov
repnz
adcl
pop
stc
xchg
popa
xchg
loopne
jno
cmp
ss
mov
xor
repnz
les
mov
js
imul
arpl
jae
xor
pop
loopne
push
int
add
lds
push
fistpl
adc
add
sub
mov
jnp
adc
xor
push
mov
rol
nop
and
cvtps2pd
mov
sub
pushf
adc
and
imul
jo
mov
inc
push
out
xchg
inc
fxtract
mov
lcall
fisubrl
fxam
sub
imul
mov
sti
pushf
mov
xchg
movsl
in
aam
scas
mov
call
inc
dec
shlb
aaa
mov
shrl
inc
add
adc
cmp
lock
push
add
add
scas
idiv
xchg
mov
mov
push
lods
insb
shll
dec
or
pop
dec
test
cmp
das
xchg
inc
or
out
lods
arpl
cs
jo
les
pusha
fsts
adc
jg
jb
outsb
scas
shlb
addr16
inc
cs
pop
pop
aaa
das
xchg
sub
loop
mov
stos
add
pop
cmp
outsb
pop
mov
mov
sbb
xor
jl
add
outsl
or
cmp
xor
jbe
dec
aad
mov
int3
or
fs
adc
dec
xor
sub
lret
jns
sbb
inc
out
xor
ljmp
adc
add
mov
adc
repz
jl
xor
mov
sti
or
test
mov
int
int
mov
push
jmp
sub
shr
xchg
pop
adc
push
and
dec
aad
cltd
das
xor
xor
mov
imul
movq
sbb
popa
js
sbb
out
int3
jne
mov
and
dec
imul
cmp
imul
stos
xchg
or
fcompl
call
xor
push
cmp
cmp
or
fxch
add
mov
xor
pop
mov
int
pop
adc
push
fimuls
pushf
imul
movsl
mov
sbb
cmpl
test
inc
ja
js
int3
pop
xchg
adc
shrb
call
movsl
push
test
or
pop
or
fsts
push
xchg
data16
xor
push
pop
or
das
sub
xchg
shrl
inc
lock
stos
push
in
add
adc
out
add
cmp
shrl
sarl
mov
ljmp
nop
into
rcrl
mov
adc
push
pop
pop
in
push
inc
mov
fsubrs
inc
push
pop
adc
into
xor
jb
or
repnz
adc
iret
or
jecxz
pop
mov
mov
dec
or
jns
fwait
mov
arpl
push
popf
lcall
inc
mov
mov
lret
fs
dec
repz
xor
add
or
loope
mov
mov
int
sahf
or
xor
or
mov
das
inc
std
popa
mov
lea
ss
cs
push
lahf
xchg
jns
pop
jl
inc
pop
push
jg
add
xchg
sbbl
ror
adc
bound
es
and
cmp
mov
adcl
mov
mov
push
or
jbe
and
fmulp
lcall
fdivl
jb
mov
mov
lcall
lret
mov
add
popf
mov
cmpsl
adc
xchg
and
jmp
jp
ss
subb
lret
xchg
lods
incl
ds
push
outsb
ret
adc
mov
jns
and
subb
xor
xchg
sub
mov
scas
subl
cld
fucom
push
movsb
lock
sbb
push
add
add
lret
xchg
ja
push
cmc
mov
pushf
mov
mov
xor
addl
into
inc
shlb
in
sub
push
fcompl
xor
xor
mov
cwtl
xchg
int3
shl
mov
inc
pop
xor
pushf
test
mov
pop
xbegin
mov
lret
sub
cld
outsl
lea
mov
sbb
or
cmp
add
inc
stc
jne
adc
ja
clc
mov
cmovl
in
fcoml
subb
jbe
jnp
das
mov
subb
mov
imul
scas
push
jnp
ret
shlb
pop
sub
inc
sub
ljmp
fmulp
dec
mov
loop
push
mov
repz
xor
shlb
inc
popa
jge
lret
xchg
inc
outsl
jo
xor
xchg
dec
jnp
jg
or
and
xor
pop
cld
mov
cld
dec
rolb
inc
dec
push
sbb
loop
xchg
loopne
dec
pop
addr16
cmp
movsl
incl
lods
inc
mov
lret
cltd
sbb
xlat
mov
fld
jg
fxch
fistpll
arpl
or
outsl
loop
xlat
push
sbb
or
stos
shr
sbb
mov
incb
adc
jno
sarb
jbe
aam
jl
add
sbb
mov
mov
xchg
xor
cmp
daa
sbb
enter
movsb
orl
jae
inc
push
jno
hlt
nop
xor
sahf
cld
inc
mov
push
daa
lret
hlt
sbb
xor
out
jno
jp
out
fwait
dec
jae
xor
xor
xor
pop
xor
adc
loope
cmc
push
push
enter
push
sub
dec
test
push
fidivrs
repnz
outsb
jae
jp
aam
sub
data16
mov
push
fs
imul
idivl
jmp
or
push
push
int3
cmp
sbb
in
dec
ficompl
clc
xor
xchg
push
ret
push
cmpl
mov
aad
jge
pop
jle
stos
cmp
cmp
lahf
cwtl
pop
call
or
xchg
sbb
jle
or
mov
cmp
push
push
fcomps
push
push
sbb
stos
xor
lahf
hlt
fwait
out
mov
sbb
mov
xchg
sti
arpl
dec
push
das
sub
rorb
cs
xchg
call
adc
cmp
adc
mov
adcl
enter
push
cmpsb
push
pop
adc
test
sub
xchg
lahf
adc
fstpl
mov
shrb
mov
pop
in
in
cmp
pop
jbe
jl
jae
es
pop
add
xchg
pop
sar
sub
adc
inc
inc
out
or
and
dec
hlt
es
es
sub
pop
scas
test
aas
clc
imul
cmpb
into
or
outsb
or
fimuls
mov
jb
mov
mov
xchg
jo
movsl
movsl
pop
sub
ret
cltd
jae
sbb
in
push
lcall
adc
push
and
pusha
xchg
into
cwtl
or
stos
mov
xor
outsb
loope
ret
push
shlb
dec
stos
xchg
jo
stos
in
les
test
dec
cltd
jns
insl
mov
xchg
rcll
popf
sbb
cld
lods
ljmp
inc
cmp
sbb
mov
jbe
pop
inc
sub
xor
inc
sbb
add
or
cmp
push
shlb
xchg
jge
insl
push
mov
mov
jbe
ret
repz
push
ljmp
mov
out
nop
shlb
adc
xor
fdiv
ret
xchg
xor
cmp
lret
jl
mov
jmp
jle
nop
cwtl
imul
movb
in
push
out
mov
sbb
dec
ja
cli
leave
js
movsb
clc
std
popa
inc
loope
add
fcoml
add
add
cwtl
movl
icebp
in
mov
jl
js
dec
add
jne
adc
aaa
push
pop
js
cmp
add
pushf
in
pop
mov
les
test
push
int3
and
scas
sbb
loope
negb
push
inc
push
xor
or
sub
sbb
sub
call
subb
mov
flds
ljmp
mov
sbb
andb
aad
and
imul
add
inc
in
mov
dec
mov
fisttps
cmpsw
xchg
test
push
sahf
fimuls
data16
inc
pop
mov
loope
and
loop
imul
popa
loopne
push
adc
in
or
data16
pop
xchg
xor
mov
int
rcrl
add
dec
sbb
aaa
jmp
mov
jle
jecxz
push
cltd
push
aaa
or
dec
pop
sub
mov
jne
ds
inc
adc
dec
lods
filds
mov
add
or
test
add
jns
mov
test
mov
in
lret
mov
sub
cmc
pop
adc
lds
mov
enter
inc
sub
int
push
and
xchg
movsl
imul
sub
mov
jo
imul
loop
dec
dec
pop
ret
mov
and
lods
pop
sub
lahf
into
push
lea
jbe
mov
out
mov
xlat
pop
dec
mov
loop
ds
in
adc
mov
pop
mov
cli
fucomp
mov
sub
lcall
pop
sbb
dec
xchg
push
mov
fcomp
outsl
push
pushf
sbb
fldl
sbb
bound
sub
in
sti
lock
sub
cli
dec
scas
mov
mov
add
jo
nop
cmp
xor
inc
rcrb
lret
push
adc
mov
pop
out
jl
in
mov
xchg
leave
aaa
xor
mov
mov
cli
dec
jl
faddp
jno
inc
or
sahf
psubsb
repnz
scas
or
jnp
mov
mov
dec
in
and
fcmovu
add
adc
mov
xor
add
mov
and
mov
sbb
imul
and
xchg
in
xchg
lods
out
int
dec
fisttps
jp
fnstsw
xchg
cmp
lods
rorb
xchg
push
cli
cmp
jo
outsb
mov
xchg
mov
bound
int3
movsb
push
hlt
inc
hlt
jo
aad
mov
add
imul
jecxz
in
test
movsl
lahf
xor
cltd
ret
imul
mov
out
mov
sub
in
adc
jae
jge
or
sbb
jb
call
movsb
push
add
dec
inc
dec
call
mov
negb
shrl
std
daa
enter
fdiv
ljmp
jecxz
out
sahf
fstl
sbbl
icebp
mov
out
loope
pop
sub
clc
adc
xor
inc
hlt
push
dec
xchg
in
pop
and
cltd
sbb
add
shrl
sbb
xchg
cld
mov
mov
jl
mov
cmp
sub
in
and
jbe
jle
mov
add
xlat
fimuls
test
jmp
jo
scas
inc
cmpb
mov
jns
rorl
inc
dec
and
in
cltd
or
imul
sub
adc
xchg
mov
cmp
test
cmp
jnp
fwait
mov
xchg
sub
xchg
fldpi
lahf
repz
mov
xor
daa
jo
loop
add
pusha
fs
aas
cmp
push
jmp
out
pop
icebp
sub
lret
rcr
shlb
mov
push
mov
add
xor
mov
xchg
mov
stos
add
loope
dec
pop
fcmovnu
xchg
lea
cmp
mov
nop
loope
jb
ja
ja
cmpsb
fstpl
in
or
xchg
out
pop
push
das
xchg
sahf
push
shrb
stos
es
push
test
mov
lcall
ret
aas
lahf
and
xchg
sub
and
xchg
xchg
inc
mov
negl
lret
sbb
or
or
shlb
xorl
outsb
push
push
xor
push
or
inc
imul
adc
inc
jne
arpl
fisttps
cmpsb
xor
jbe
lods
test
js
dec
sub
loop
sbb
push
push
imul
fs
push
dec
scas
dec
orl
jg
fcmovbe
in
push
mov
or
lds
add
add
dec
add
mov
movsb
das
cmp
std
dec
xor
mov
jecxz
mov
out
add
and
lock
in
and
jns
cltd
loop
push
subb
dec
mov
jno
push
dec
jbe
mov
mov
in
dec
rorl
mov
cmp
jp
xchg
add
je
sbbb
gs
dec
pop
orl
pushf
xchg
sbb
cmpb
mov
adc
fisttpl
jns
fisubrl
pop
outsl
sub
xor
xchg
sbb
dec
xor
ss
sahf
ljmp
mov
dec
das
loope
mov
lea
pop
xlat
stos
adc
pop
dec
xchg
icebp
cmp
jp
scas
jnp
mov
cli
and
add
cli
pusha
aad
out
push
mov
dec
mov
inc
js
xorl
and
add
or
bound
sbb
lock
addr16
sub
or
push
xor
add
cld
and
in
and
adc
cmp
data16
arpl
or
aam
lock
popa
popa
int3
popf
push
xor
pop
sub
mov
popa
xor
std
mov
ljmp
pop
ret
stc
add
xor
adc
int3
in
add
mov
sbb
mov
out
js
imul
test
inc
or
outsl
sbb
es
clc
imul
addl
xlat
mov
cmpsb
jg
adc
pop
pop
cmp
xor
push
mov
icebp
dec
lret
andl
in
dec
adc
pop
in
unpckhps
cmp
bnd
and
xor
add
mov
divb
push
rcrb
lcall
iret
mov
xchg
fidivrs
xchg
ret
movsb
out
loop
mov
pop
pop
fsts
pop
xor
sub
ja
sar
inc
and
pusha
jno
pop
jmp
cmpsb
or
sub
outsl
or
fsubr
and
popf
in
mov
jmp
mov
shlb
movups
icebp
fsubrs
sub
add
std
cltd
cli
sti
pop
inc
repz
aaa
mov
xor
adc
scas
push
mov
xchg
int
stos
xchg
adcb
adc
mov
ja
test
cmpsb
fsin
inc
je
mov
in
add
xchg
cmp
addr16
push
outsb
std
pop
stos
fcomps
push
xlat
add
add
or
loope,pt
mov
sub
cmp
mov
call
adc
addr16
test
pop
cmp
or
push
in
jmp
int3
lcall
movsb
jns
jo
xchg
popa
inc
xchg
cmp
data16
out
adc
imul
ret
jno
inc
push
and
popf
inc
xchg
dec
bnd
lds
mov
in
arpl
imul
mov
shll
inc
sbb
pop
bound
mov
adc
add
jle
jmp
adcl
popa
sbb
pop
jnp
das
add
jns
dec
push
adc
adc
add
je
aas
mov
and
in
mov
dec
leave
fldt
cmp
and
push
fmull
xchg
gs
scas
rcll
ss
xchg
adc
stos
mov
pop
push
je
cwtl
aas
fs
adc
jecxz
popf
inc
daa
lret
push
ss
test
ja
daa
lods
mov
fcmovne
fs
mov
xchg
jecxz
push
or
pop
dec
repnz
shll
loope
mov
and
jle
push
ret
lret
repz
mov
sub
jno
ret
mov
jg
adc
sarl
popf
xor
mov
jl
xchg
add
jl
out
lea
out
or
cltd
xchg
into
add
adc
xor
imul
xchg
cmp
mov
mov
mov
lock
rorb
dec
testl
subb
sbb
popw
push
insl
cmp
jb
in
dec
insl
pop
cmpsb
popa
stos
pop
pusha
das
push
unpckhps
xchg
out
dec
popf
test
in
xchg
jle
push
out
stos
sarl
sbb
out
gs
inc
loope
adc
aam
cmc
jle
dec
mov
pop
outsb
sbb
jl
test
mov
jl
fisubs
adc
notl
jle
mov
daa
xchg
add
outsl
mov
xchg
adc
mov
sub
jmp
dec
adc
sbb
mov
imul
mov
ficoml
pusha
sbb
inc
sbb
mov
mov
jnp
hlt
adc
hlt
hlt
andl
cmp
push
jo
adc
in
sub
addr16
aas
or
pop
add
ret
roll
or
dec
jmp
ljmp
and
stos
and
push
jb
lahf
sahf
or
xchg
clc
mov
popa
or
cld
popaw
cmp
test
fwait
les
inc
insb
fisubl
cmp
popf
push
mov
mov
pop
mov
ror
loopne
xchg
jae
movsl
daa
aam
dec
pushf
xchg
cmp
aaa
jecxz
in
loopne,pn
push
in
call
ja
and
fidivs
hlt
sub
xchg
pop
enter
insb
std
testb
das
mov
iret
cmpsb
jno
or
jbe
mov
daa
push
pop
lret
sub
clc
stc
adc
xchg
lcall
loopne
mov
mov
push
xchg
inc
inc
cmp
lahf
xor
lods
cmpsl
sbb
in
and
cld
out
inc
and
out
mov
in
push
lods
xchg
lcall
lret
lcall
mov
loop
push
jne
aas
add
mov
dec
sbb
loopne
and
and
insl
mov
roll
pop
jle
call
sbb
inc
ret
call
or
and
mov
jl
mov
dec
and
cmp
cld
out
mov
addb
fucomip
cmp
pop
xor
arpl
icebp
xchg
mov
arpl
push
mov
movmskps
or
cwtl
shll
shl
and
das
inc
push
adc
cmp
jne
lret
dec
and
mov
push
les
in
out
push
ret
mov
popf
sub
das
sub
sbb
adc
sbb
mov
add
xchg
orb
loop
ds
and
inc
mov
jp
mov
loopne
xchg
xchg
insb
jge
mov
lahf
sti
jmp
fstps
cmc
out
clc
andb
mov
mov
loop
sub
xor
outsl
inc
dec
filds
jae
xchg
cwtl
rcl
xlat
ds
sub
sarb
in
adc
sub
push
adc
aad
stos
xchg
repz
xlat
xor
sub
adc
in
add
mov
or
enter
dec
xchg
fdivr
stos
jecxz
mov
mov
clc
mov
dec
leave
xlat
roll
add
leave
xchg
into
fmull
pop
adc
mov
pushf
loopne
cmp
sbb
cwtl
pop
rcrl
outsb
sbb
bound
imul
push
lea
and
xchg
test
jg
or
xor
fstpl
in
dec
scas
push
and
xlat
adc
and
cmpsb
mov
das
pop
dec
stos
mov
pop
and
xlat
jmp
stos
int
fs
outsb
inc
pop
loope
cmp
js
sbb
cli
movsb
lcall
popf
inc
push
jbe
es
scas
stc
mov
lock
cld
cmp
sbb
mov
iret
aad
lods
inc
das
cli
fistpll
add
cld
pushf
and
jmp
mov
dec
xchg
jne
push
jnp
jns
int
dec
loopne
imul
popf
xchg
stc
adc
aas
cmp
xchg
pop
lods
popf
stos
std
enter
lock
incb
push
outsb
adc
xchg
adc
ss
daa
jle
cwtl
cwtl
mov
ja
lcall
or
mov
mov
or
call
movsb
aam
mov
push
add
add
idivb
jge
push
or
loope
or
test
dec
imulb
and
jecxz
mov
out
inc
mov
ret
push
push
in
aad
mov
jmp
pop
jo
stc
rolb
test
xchg
stos
add
incl
sahf
jo
aas
shlb
and
fcomi
inc
sahf
adc
push
int
sbb
insl
jb
jge
dec
filds
sbb
out
fwait
mov
imul
loopne
mov
ret
jns
adc
loop
sub
fdivrl
sub
bound
adc
jle
add
add
push
dec
pop
sbb
addr16
push
pop
dec
neg
cmp
out
outsb
lods
test
sub
lods
jge
mov
push
and
pop
push
add
dec
popa
shl
cltd
add
pop
fnstenv
aad
sub
mov
in
add
jle
movsl
loopne
jp
push
dec
fidivrs
aad
mov
mov
mov
fisubl
sbb
xchg
cs
jp
out
dec
mov
mov
push
cmp
mov
les
xor
jecxz
imul
aaa
inc
bound
dec
push
je
int3
pop
scas
and
loop
sahf
push
dec
clc
repz
dec
or
mov
add
xlat
cli
cmpsb
repnz
into
adc
or
daa
xchg
cmp
std
xor
repnz
dec
lahf
cmp
inc
mov
add
dec
popa
add
ja
cwtl
lret
aaa
ret
cmpsb
adc
xlat
std
rclb
jge
cmp
repz
xchg
je
xchg
adc
movsb
inc
inc
push
dec
xor
mov
je
pushf
lret
xor
fdivl
aam
test
lea
and
les
mov
movsb
cmp
dec
or
or
jnp
or
or
call
in
xor
add
push
add
jge
pop
mov
sub
pop
lock
dec
sahf
dec
daa
inc
clc
sarb
fcmovnb
push
sub
das
orl
aaa
dec
cmp
lock
adc
mov
add
cli
stos
adc
loopne
mov
repnz
int
call
adc
out
pop
aaa
xor
add
movsb
mov
and
fwait
insb
push
fisubrl
outsb
addl
sub
mov
mov
cmpsl
dec
add
pusha
inc
xchg
mov
das
in
lods
jno
aaa
xchg
aas
bnd
xchg
inc
sbb
ds
adc
sub
maxps
or
mov
mov
xchg
mov
jge
inc
rorl
push
pop
stc
cmp
jl
mov
push
leave
jl
lods
sbb
pop
dec
pop
pusha
mov
maskmovq
imull
jae
pop
pop
inc
shll
pop
pop
jg
data16
pusha
loop
cmp
add
pop
cmpsb
out
pop
xor
pushf
ljmp
lret
mov
add
sbb
jge
or
pushf
mov
loope
sbb
popf
stc
xchg
cmp
adc
mov
push
jl
and
inc
repnz
push
out
inc
xor
int
js
xchg
or
push
sbb
xor
inc
addb
and
inc
sub
pop
cmpsl
scas
dec
cwtl
xchg
fldl2e
jno
adc
ja
stos
subl
testl
stos
sbb
xor
movsb
fwait
rclb
jne
int
imul
mov
cmp
mov
pop
push
mov
adc
int3
sub
inc
scas
aad
pop
and
push
incb
push
pop
popl
pop
pop
xor
mov
cli
ljmp
xchg
mov
stc
sub
pop
cmp
mov
mov
lahf
in
push
pop
mov
test
cmp
in
pop
lret
in
outsl
pop
mov
cmp
push
leave
inc
sbb
ljmp
cli
xor
push
sub
push
and
pop
add
movsb
xchg
testl
mov
xchg
in
inc
outsl
and
push
jg
enter
or
sbb
mov
daa
ret
fidivrs
mov
rcll
and
xchg
mov
mov
adc
inc
mov
nop
subb
add
inc
jno
ret
daa
push
inc
fidivrs
jmp
pop
mov
push
add
test
outsb
sti
mov
in
mov
add
xor
mov
divb
aas
mov
ljmp
inc
and
jne
xlat
in
insb
scas
pop
xchg
mov
xlat
and
lret
push
sarb
cmpsb
out
xor
mov
sub
repnz
cvtpi2ps
fstps
in
rcrb
pop
mov
test
or
repz
dec
jmp
mov
mov
jns
add
into
cld
int
test
xor
popa
push
dec
inc
jns
scas
add
sub
push
xchg
arpl
mov
lea
mov
out
xor
jns
cltd
popf
jle
bound
pop
mov
push
leave
aas
xchg
ljmp
mov
cmp
iret
mov
in
sbb
mov
out
inc
lods
enter
lock
mov
jmp
sbb
push
jle
lcall
xor
loop
mov
mov
mov
lock
cmp
mov
fs
push
and
or
andl
xor
repz
rcr
xchg
addr16
call
pop
pop
mov
pop
fdivrl
and
jnp
pop
sbb
scas
fwait
jl
int
push
mov
call
cmp
les
movsl
mov
shr
shlb
ret
push
or
inc
or
ret
adc
out
popf
vpshlb
jle
dec
fs
sbbl
xchg
das
shll
push
fmul
cli
popa
mov
nop
jmp
jmp
mov
addb
pop
or
adc
push
imul
icebp
xor
sarl
sbb
sub
loope
jb
mov
mov
orl
add
mov
mov
lret
cmp
pop
and
xor
bnd
adc
and
mov
sahf
adc
movsl
pop
jnp
xchg
sbb
mulb
mov
cmp
ljmp
inc
test
push
outsl
sbb
js
push
or
popf
pop
into
jmp
cld
shl
or
in
inc
mov
bound
sub
mov
or
pop
mov
push
mov
sbb
dec
xor
daa
repz
mov
decl
lahf
mov
ret
into
fisttpl
sbb
xchg
leave
dec
call
mov
xchg
iret
mov
dec
nop
inc
gs
or
dec
dec
and
or
fdivrs
mov
and
stos
leave
lods
nop
sbb
dec
mov
decl
fwait
sbb
ret
pusha
push
movsb
jne
test
fistl
pop
push
pushf
in
into
je
push
sarl
pop
push
pop
xor
push
sbbb
lods
rcrl
rorl
ljmp
clc
enter
nop
adc
cmp
lret
daa
data16
rolb
add
orb
inc
gs
jns
daa
add
fs
cmp
and
push
in
and
enter
mov
lcall
cmp
mov
int3
dec
cmc
and
fucomip
xchg
clc
mov
jno
and
aaa
negl
or
popf
icebp
jl
sbb
adc
ljmp
stos
int3
test
aad
push
mov
jne
mov
cs
push
or
sub
mov
test
sub
sti
fcoms
add
xor
xchg
in
or
xlat
cmc
inc
cmp
rcll
add
add
push
lods
pusha
je
out
dec
inc
push
in
mov
and
and
dec
idiv
xor
cmpsl
adc
divl
arpl
cmp
popf
stos
imul
xor
roll
jge
jno
jb
aam
lret
lods
pop
ficoml
bound
mov
jb
or
fstl
mov
lock
xor
push
les
sbbl
dec
lea
ljmp
pop
cmpsl
and
pusha
out
popa
xor
mov
push
arpl
pop
cmp
ficoml
mov
pop
ja
int
xchg
out
mov
cs
stos
popf
lret
and
sarl
out
mov
xlat
mov
mov
jb
mov
jne
mov
inc
cmpsl
inc
adcl
rol
ret
cmp
aas
into
out
push
pop
xor
xor
pop
test
xlat
sub
sub
scas
pushf
sub
iret
popa
das
xchg
mov
shrl
cmp
addl
outsl
add
scas
mov
cmp
fcompl
cli
popf
sti
cld
out
mov
dec
popa
inc
daa
add
jae
loop
std
addb
ja
mov
mov
or
pop
imulb
and
aad
mov
jnp
mov
cmp
sub
push
clc
sub
push
insb
pop
bound
mov
inc
arpl
fisubrl
and
push
inc
xchg
gs
fnsave
cmp
mov
cmp
cld
fbld
rcrb
adc
pop
pop
and
sbb
mov
lea
inc
pushf
inc
pop
jns
or
cmp
pop
movsl
sub
fdivl
test
ja,pt
inc
pop
add
mov
push
lods
cld
xor
loope
test
rolb
popa
loop
jl
mov
mov
insb
scas
pop
roll
jb
jae
sbb
insb
jecxz
sub
imul
sub
dec
scas
and
adc
jnp
xchg
insb
das
pusha
lret
in
aas
jne
repnz
xlat
dec
gs
xorl
test
addr16
nop
arpl
call
pop
jg
outsb
cmp
mov
push
pop
aaa
ljmp
jbe
fstl
dec
jno
arpl
lret
cld
push
mov
cmp
jno
xchg
addb
fdivrl
arpl
pop
outsl
inc
pop
movsl
cmp
and
sub
inc
jns
cs
dec
mov
cmp
movl
push
dec
xor
add
or
xchg
mov
inc
mov
stc
or
add
daa
fsub
xor
mov
clc
jo
mov
jecxz
xchg
cwtl
mov
arpl
clc
or
lods
insl
insb
shrb
cmp
sbb
xchg
xor
sbb
imulb
cmpsb
or
in
clc
cmp
inc
inc
pop
iret
mov
mov
cmp
pop
or
mov
shl
add
es
pop
ret
sub
push
xor
jae
int3
sub
lcall
fisubrs
push
inc
out
mov
pop
mov
or
outsl
fucomi
inc
lcall
sti
xchg
fdivs
xchg
or
mov
out
inc
fidivl
dec
and
daa
push
add
mov
dec
inc
das
repz
dec
push
stos
or
arpl
mov
cmp
in
rcr
push
lock
jae
pop
sbb
aas
leave
dec
dec
fmull
imull
call
mov
rcrb
and
test
imul
mov
add
nop
xchg
inc
dec
sub
fadds
subl
lcall
xchg
idiv
movsb
mov
cmpsb
inc
xchg
jbe,pt
dec
mov
jp
sbb
cmp
sbb
lods
std
cld
outsb
daa
daa
xor
adcl
lods
fcoms
lret
push
mov
xor
out
mov
insb
in
movsl
sub
mov
fucomp
cmp
data16
sti
mov
jb
icebp
inc
bound
push
shlb
lods
mov
push
cmp
std
sub
call
lcall
std
jp
in
lcall
popa
pop
pop
or
or
sbb
lret
xlat
lods
cmp
pop
or
movsb
jg
mov
stc
mov
fcoms
lock
dec
enter
adc
inc
jb
shrl
adc
jns
push
not
jns
jmp
sbb
pusha
into
sub
adcl
lret
push
jle
jno
mull
push
scas
rep
xchg
popa
insl
shr
cmp
mov
xchg
sbb
int3
in
add
ljmp
mov
dec
xchg
xor
jecxz
cmp
inc
sbb
fmul
test
scas
push
push
cmp
int3
mov
testl
inc
push
pop
lret
cmp
mov
rcrl
mov
mov
mov
and
test
pop
and
add
arpl
jbe
xchg
bnd
add
fs
inc
push
fisubl
rolb
adc
mov
xor
mov
daa
mov
je
clc
lods
dec
cli
add
push
push
mov
in
adc
decl
xchg
push
fldt
ret
mov
aam
bound
lahf
xchg
in
pop
addb
aas
xchg
xor
iret
outsb
shrb
inc
je
pop
jb
sbb
lret
pusha
or
pop
pop
push
std
sub
lahf
idivl
daa
dec
dec
cmp
xchg
or
adc
pop
mov
bound
bound
xchg
and
pop
mov
imul
cltd
mov
pop
lret
std
dec
sub
data16
sub
flds
test
xchg
fwait
lahf
push
jnp
std
cmp
or
outsl
mov
gs
add
daa
lods
push
neg
pop
or
lret
inc
dec
scas
mov
aas
addl
cli
clc
mov
insb
mov
add
inc
ret
shll
cmp
inc
xor
jl
stos
and
dec
mov
ffreep
mov
packsswb
sub
xor
mov
pop
subb
stc
and
adc
mov
mov
scas
pop
loop
adc
mov
inc
in
dec
popa
ds
mov
ret
mov
das
push
add
inc
pop
inc
mov
psadbw
into
insl
outsl
notb
loop
gs
add
xchg
push
and
pop
adc
fldenv
lcall
mov
loope
popa
pop
scas
xchg
adc
mov
push
fldt
pop
outsb
cmp
ret
mov
shr
dec
frstor
mov
mov
lds
sub
fisttpll
js
xchg
pusha
out
cmp
jecxz
add
test
rclb
dec
out
push
add
arpl
push
out
int3
outsb
mov
mov
ret
pop
rcll
int
icebp
stc
push
in
fdivs
inc
pop
notb
rcll
jmp
add
lret
adc
ss
enter
scas
xor
gs
loop
dec
sahf
gs
adc
inc
jb
test
push
xchg
rcrl
lahf
and
add
mov
xchg
ljmp
sti
jne
or
xor
js
icebp
gs
gs
lret
data16
sub
lcall
add
xor
iret
fisttpll
out
test
mov
jne
xchg
pop
out
mov
clc
mov
mov
xchg
dec
adc
cmp
xor
pop
mov
sbb
ds
fsubrl
sbb
lret
loopne
xlat
add
sbb
icebp
jge
icebp
lea
sarb
aam
popf
imul
and
mov
mov
scas
fstl
fistpll
aad
inc
add
xor
fcompl
enter
loop
jge
lahf
dec
adc
shrb
sbb
inc
inc
jg
xchg
je
inc
xchg
adc
adc
les
lods
dec
sub
push
push
icebp
ss
scas
aad
imul
mov
mov
push
pop
sub
pop
shlb
hlt
xchg
or
int
and
pop
jmp
fwait
lahf
std
mov
pop
lahf
lret
inc
movaps
insb
cmp
int
and
ds
cmpsl
lea
push
popa
xchg
test
jae
pop
adc
jmp
lds
into
les
push
xchg
shlb
movsl
sbb
enter
pop
cmp
stos
and
mov
jmp
pop
lods
clc
or
test
mov
mov
lahf
lock
mov
and
cmp
test
outsb
dec
ret
fisubrl
ficoms
leave
push
pop
out
aad
push
mov
aaa
pop
gs
out
add
rclb
shl
pop
sbb
sbb
nop
push
xchg
mov
outsl
and
xchg
lea
adc
or
mov
fsubrs
sti
push
add
loopne
fadds
das
in
in
nop
loope
stos
imul
push
sub
bound
push
push
and
movsl
cmc
mov
pop
fadds
push
mov
cltd
movsb
leave
push
add
loope
imul
mov
les
cmp
flds
sbb
mov
inc
xor
das
loopne
adc
sub
imul
push
mov
int3
pop
aam
sbb
cmpb
sarb
iret
out
aaa
loopne
mov
mov
leave
fidivrl
jg,pn
push
xor
or
aam
sahf
cltd
inc
jo
mov
bound
gs
outsb
cltd
xor
jae
fwait
aas
loopne
pop
scas
xchg
pop
fimuls
ljmp
push
into
sub
lret
hlt
and
out
xchg
add
inc
adc
jnp
cmp
dec
cwtl
push
sub
outsb
andb
cld
jg
push
repz
test
rclb
adc
lods
push
sub
rcl
int
fimuls
jmp
cmp
mov
enter
xor
lea
lahf
jae
xlat
out
ja
mov
rolb
gs
xor
mov
pop
in
stos
xor
and
mov
sbb
xchg
xchg
push
hlt
xor
pop
inc
imul
enter
mov
xchg
and
mov
cmp
inc
fisttpl
imul
or
sub
dec
pop
sbb
bound
jp
mov
mov
pop
cltd
mov
test
xor
ret
cmp
dec
jmp
lea
xlat
sbbl
inc
dec
pusha
xchg
pop
rol
xor
inc
xchg
cmpsb
inc
jle
mov
add
std
add
mov
test
xor
add
fstpt
repz
enter
stc
jb
adc
ss
xor
inc
and
test
mov
add
std
xor
push
fimuls
jno
jmp
arpl
push
nop
adc
pop
jne
shlb
std
mov
mov
int
pop
jmp
mov
jmp
loopne
fdivl
cmpl
add
out
ljmp
orb
testl
fwait
sub
decb
mov
add
lds
inc
nop
push
dec
jp
pop
or
dec
in
rcrb
out
sbb
push
in
add
dec
sbb
shlb
sbb
inc
aaa
push
xchg
movsl
or
pop
fnstcw
cmpsb
fbld
mov
cmpb
into
outsl
mov
mov
js
inc
cld
fimuls
mov
xorb
xchg
and
sar
and
dec
fldt
xlat
or
fildll
or
outsl
pop
or
add
repz
sub
in
add
in
sbb
loope
es
outsb
xchg
repnz
dec
ss
mov
fimull
sbb
jmp
cmc
icebp
das
and
mov
pusha
xor
nop
es
cmp
dec
mov
xor
sbb
mov
ja
jne
jnp
xor
data16
stos
xor
mov
mov
mov
outsb
out
push
xchg
loop
out
dec
frstor
or
xor
jae
add
stos
pushf
inc
cmp
push
cmp
add
int3
dec
jge
pop
xchg
jg
bswap
popa
dec
mov
ret
adc
scas
faddl
mov
jb
call
stc
inc
fisubl
push
cmp
dec
push
xchg
sbb
les
cmp
stc
inc
stc
or
call
ds
ja
outsb
cmp
cmpsb
inc
sub
jo
push
out
data16
loopne
add
insb
pop
jo
xchg
dec
fnsave
mov
jmp
sub
dec
rcr
loop
fsubs
sarl
add
repz
xor
pop
fcmovu
xor
dec
mov
and
popa
xchg
movsb
scas
out
and
jmp
add
pop
add
not
sbb
jns
push
pushf
flds
xchg
dec
and
lods
int
mov
mov
pushf
out
ret
lods
sub
mov
sub
xchg
aaa
and
dec
fildl
and
dec
mov
data16
imul
rcrl
pop
enter
inc
lods
or
cmp
jne
xor
stos
mov
adc
stos
push
cmp
jno
aad
jp
xchg
or
shlb
not
and
repnz
and
add
sub
or
push
faddp
fs
out
or
cmp
test
jbe
push
fwait
pop
outsb
and
cmp
nop
fidivl
dec
add
fisttpl
xchg
push
mov
mov
clc
xchg
dec
cmp
xchg
lcall
std
daa
adc
pusha
mov
xor
and
sti
popf
jp
or
mov
insl
adc
outsl
stos
xchg
sub
cmpsb
push
mov
neg
icebp
or
aas
add
xlat
inc
cwtl
sbb
test
xchg
jb
arpl
leave
push
pop
add
je
mov
mov
pop
les
and
mov
aad
lret
fistpl
jmp
xchg
xchg
test
fildl
shl
xor
add
test
arpl
jecxz
ret
cmp
adc
je
fs
add
call
sbb
jmp
movsb
jp
loopne
adc
xlat
sub
pop
push
ds
xchg
jnp
pop
cld
clc
dec
out
mov
mov
sbb
loope
mov
or
push
jo
push
pusha
std
and
lcall
rcrl
pop
add
cmpsl
inc
xchg
sbb
push
aas
stos
mov
sbbl
shrl
mov
outsb
add
mov
pop
ret
xchg
xor
pop
add
mov
mov
fwait
jg
cmp
push
enter
loopne
test
jb
sbb
movsb
xchg
bound
sbb
lret
pop
dec
jne
dec
xor
outsb
test
addr16
lret
pop
rorb
ficomps
addr16
addr16
mov
lret
add
movsl
popa
cmp
jne
cwtl
or
pop
mov
sub
sub
mov
jno
es
xor
daa
push
inc
jns
fisubrs
es
sub
cmpsb
aad
enter
insl
adc
cmp
movsl
addr16
jmp
es
stos
ret
fdivrs
or
push
das
jo
mov
int3
addb
xchg
mov
jle
sub
cmp
test
cli
mov
xor
jno
pop
inc
stos
xlat
push
scas
lods
imul
adc
test
sahf
bound
mov
lcall
loop
andb
subb
pop
jp
mov
icebp
dec
lret
pop
xchg
or
cwtl
push
in
into
xor
rorb
and
and
xchg
test
adc
mov
and
push
cmc
stc
arpl
je
loop
out
or
xchg
sahf
xchg
mov
push
movsb
test
popf
ds
push
ret
adc
fcoml
push
xor
mov
mov
mov
sahf
popf
fsubrl
daa
sar
and
adc
xchg
inc
cwtl
test
in
lahf
xor
xchg
jge
pop
cmp
gs
mov
dec
das
pop
int
xchg
jno
scas
xchg
call
sub
leave
rolb
fbstp
cvtps2pd
sbb
insl
mov
int3
add
addb
jb
cmpsb
dec
push
fisttpll
xchg
inc
cmp
hlt
in
inc
test
adc
xchg
test
adc
pushf
pop
in
aad
and
ds
aaa
or
cmp
adc
cmp
sti
jg
push
push
cmovg
xchg
loop
cmpsb
mov
xorl
std
repnz
push
int
lea
sub
pop
adc
dec
rcll
mov
dec
stos
call
shr
out
jo
mov
or
aas
insl
xor
inc
xchg
or
add
mov
xorb
ljmp
fnstsw
pop
andl
addr16
das
sarb
and
or
mov
je
imul
loope
clc
mov
cmp
out
mov
pop
cmpsb
icebp
or
int
mov
xchg
dec
mov
and
xchg
test
in
mov
imul
sbb
ss
sub
jbe
pop
roll
sbb
in
mov
mov
mov
call
ret
inc
pop
pop
dec
das
mov
into
inc
dec
xor
sti
fwait
mov
mov
into
lock
pop
into
cmp
gs
ss
je
mov
and
and
leave
les
dec
out
jae
jnp
sarl
jnp
aam
push
dec
xchg
pop
add
imul
loope
cmpsb
jp
add
mov
xor
jp
cmpsb
pushf
fisttpl
inc
addb
cmp
repz
inc
inc
push
fcoml
xchg
aam
outsl
push
lds
lahf
dec
add
push
xchg
push
scas
sbb
xchg
movsl
int
inc
or
dec
mov
inc
dec
mov
jp
clc
inc
imul
jae
inc
sbb
adc
in
cli
lcall
xlat
out
jmp
xor
pop
or
shlb
add
and
fwait
cmp
mov
xchg
sub
push
jmp
cs
cmpsb
ja
movsl
cmp
fstpt
mov
popf
add
xchg
loope
sbb
pop
cmp
xor
lds
push
pop
pusha
mov
xor
fnstenv
push
jge
and
push
in
mov
out
pusha
cmp
inc
and
sbb
rcl
xchg
push
mov
add
test
ja
jnp
std
scas
push
jbe
fwait
push
mov
sub
pop
or
or
cs
xchg
jo
movd
pop
mov
movsl
in
adc
ret
ret
cli
and
or
dec
sbbb
loop
insb
stos
add
lret
mov
sub
jl
cmp
sbb
mov
in
dec
test
jg
shl
lret
pop
pop
dec
adc
call
pusha
jne
mov
fisubrl
popf
fldl
pop
xchg
scas
cmpb
push
sub
push
push
mov
xlat
mov
jae,pt
adc
mov
cli
mov
adc
in
sbb
mov
sbb
xchg
fisubrl
push
sub
in
push
aam
mov
iret
cmpsl
and
jne
mov
daa
cli
pop
icebp
mov
clc
pop
loope
imull
gs
sbb
sub
dec
inc
pop
in
mov
insl
dec
lcall
push
or
dec
push
cltd
mov
and
sub
adc
iret
mov
and
pusha
cmpl
adc
mov
ja
movsl
inc
jp
and
int
xor
add
arpl
xor
push
or
out
int
cmc
mov
int
jge
lret
push
pop
lret
push
cwtl
fldt
pop
jo
inc
daa
add
shlb
enter
les
push
repz
mov
sbb
test
pop
xor
mov
sbb
sub
jbe
adc
idivl
mov
ret
sub
and
cmp
sub
xor
jbe
push
push
mov
lret
or
pop
cld
push
pop
cs
xchg
daa
jecxz
jp
push
lcall
dec
inc
out
xor
mov
mov
popf
lahf
dec
outsl
push
aaa
sub
ficoms
dec
jbe
sbb
pop
ss
mov
mov
jnp
sub
cmp
scas
in
stos
pushf
daa
ds
mov
out
dec
fisubrs
adc
dec
outsl
lods
imul
rcr
xor
mov
stos
rclb
into
or
stos
lds
jl
insb
cmpsl
mov
mov
dec
vunpcklps
lcall
cmpsl
dec
leave
sbb
lea
and
stos
popf
adcl
sub
push
lea
out
push
mov
adc
mov
dec
add
mov
xlat
mov
rcrb
xchg
int
mov
testb
daa
mov
lods
adc
lds
jmp
cmp
repz
mov
mov
jle
loopne
jmp
mov
xchg
mov
jo
cmovbe
sub
rclb
inc
pop
cli
dec
popf
cmp
fsincos
je
jg
stos
nop
pop
adcl
outsl
aaa
outsl
inc
push
inc
cmp
iret
sub
shl
cmp
adc
jmp
mov
mov
cmp
push
mov
pop
pop
jecxz
ja
mov
aad
out
ficompl
dec
std
mov
loop
jnp
fstl
pop
add
aas
out
push
ds
inc
nop
addl
mov
shlb
cmp
imul
cmp
sbb
fsubrs
mov
mov
pusha
test
fs
mov
pop
sbb
xchg
jbe
or
cld
fsubl
sub
test
inc
mov
mov
mov
les
fcomps
popa
jp
fimull
adc
jmp
jns
popa
push
xor
imul
xchg
adc
in
insb
imul
sub
inc
add
or
nop
xor
or
pusha
mov
cmp
push
pop
and
mov
cmp
add
xor
into
cs
dec
xchg
aas
mov
cltd
push
xchg
mov
mov
push
xor
out
iret
or
inc
ss
cli
fs
dec
pop
cmpsl
jmp
xchg
mov
enter
es
popa
dec
lea
aas
into
ret
cmp
addr16
repz
pushf
ret
popa
mov
push
rcl
inc
mov
push
stc
bound
daa
insl
mov
dec
in
add
mov
sub
mov
and
shll
ffreep
addr16
fwait
push
shr
arpl
jge
push
insl
lods
xchg
cmp
inc
ja
lret
push
into
out
cmp
jne
stos
cltd
mov
lret
lcall
inc
xor
ja
add
lods
mov
add
cli
addr16
movsb
xor
sub
fdiv
xor
and
loop
or
mov
pop
fld
jbe
push
add
adc
sbb
inc
cmp
push
cmpsl
imul
cld
xchg
ljmp
in
lret
cli
test
sub
fidivl
imul
test
xor
enter
xor
enter
sbbl
inc
dec
pop
pop
add
or
lea
js
xor
js
mov
dec
sbb
mov
jo
stc
cmpsb
dec
stos
sub
push
or
adc
jno
les
cld
cmp
aam
push
ljmp
hlt
test
dec
mov
xor
repnz
daa
fldenv
jecxz
aas
mov
and
idiv
jno
pop
imul
adc
mov
pop
push
scas
pop
outsb
lahf
data16
notl
or
push
sbb
dec
xchg
mov
movsl
mov
scas
ljmp
not
pop
repnz
jp
or
outsb
and
cmpsb
fsubr
cmpsb
dec
mov
dec
sbb
push
sub
lods
pop
test
mov
cwtl
jecxz
ret
inc
add
fsubrp
scas
popf
daa
lods
sbb
std
jmp
push
movl
in
push
sbb
xor
mov
mov
out
and
xor
loope
loopne
push
jbe
jge
orb
push
jb
cltd
cmc
test
mov
pop
cwtl
mov
pop
popl
into
sbb
jae
and
dec
iret
mov
in
jle
fwait
xchg
movsl
rcrb
int3
inc
xor
int3
cltd
push
shlb
push
pop
idiv
mov
xchg
or
js
dec
aaa
xor
movsl
in
inc
loope
sbb
pushf
jg
push
mov
inc
scas
movsb
adc
cmpb
je
cld
pop
push
push
movsl
lcall
cld
loopne
addb
adc
addb
loop
mov
mov
add
js
sub
xor
into
repz
sub
mov
mov
push
shlb
in
pop
mov
rcl
cmc
jge
mov
jo
insl
inc
cmp
xor
pop
add
adc
or
ljmp
add
imul
xchg
dec
jb
movsb
outsb
mov
mov
cmp
mov
xor
xchg
ror
jmp
lret
sarb
jb
pop
jmp
push
inc
inc
iret
mov
jecxz
nop
std
or
ljmp
and
addb
xor
testw
ja
ret
cmpsb
das
repnz
decl
inc
int3
dec
arpl
mov
sbb
inc
dec
pop
lret
clc
sti
add
cmp
add
inc
sbb
and
dec
jns
pop
fsubs
or
fdivs
cmp
gs
dec
mov
push
lods
mov
ja
sub
or
jo
stos
out
das
gs
enter
lret
jno
in
cwtl
sar
cmp
adc
stos
arpl
xor
adc
adc
dec
xor
sub
nop
or
enter
pop
rcrb
aad
or
xchg
dec
cmp
push
and
or
rol
push
mov
jle
mov
imul
bound
popa
mov
cmp
enter
test
dec
cmp
insb
outsb
pushf
adc
iret
dec
sahf
dec
cld
push
loope
pop
adc
hlt
cmpsb
xchg
sbb
inc
dec
lcall
testb
popa
arpl
xchg
sbb
lahf
ficompl
adc
inc
push
pop
jecxz
fdivl
data16
xor
subl
mov
popf
mov
adc
cmpsl
mov
emms
jl
cmp
dec
inc
rcl
mov
lahf
sbb
mov
add
out
ret
pushf
movsb
jmp
lods
mov
loope
in
sub
xor
insl
add
inc
xchg
add
mov
adc
xchg
movsl
outsl
pop
jns
xrelease
bound
sub
mov
dec
xor
jle
lret
and
add
add
stos
test
jno
mov
mov
sti
in
cmp
cmp
dec
out
std
mov
fsubrl
test
cld
test
mov
pop
mov
jge
leave
test
cmpsb
pop
or
mov
lret
xchg
mov
loopne
das
dec
pop
and
mov
mov
dec
ss
setns
xorb
sbb
jge
pop
mov
lods
ret
push
insb
push
popa
mov
loope
jg
mov
in
mov
sub
sbb
jo
dec
and
icebp
jns
loope
mov
push
xchg
adc
in
jecxz
in
lret
pop
push
xor
ret
repnz
popa
push
imul
cmp
ljmp
in
fstp
lret
or
nop
mov
scas
cmp
or
push
imul
cltd
mov
cmp
mov
sarl
mov
or
xchg
in
mov
cmp
jnp
clc
and
mov
lock
ss
std
in
adc
push
mov
mov
sub
enter
jg
xor
addr16
stc
adcb
xchg
loopne
aad
inc
or
mov
mov
and
test
cltd
mov
movsb
sub
fdivs
mov
dec
ja
xlat
sbb
inc
dec
xor
sub
enter
iret
outsl
mov
mov
push
mov
ja
out
xchg
xchg
pop
insb
xor
lret
pop
and
stos
push
gs
mov
adc
repz
shl
add
sub
mov
mov
push
out
jp
xor
call
jo
xchg
sub
mov
sub
mov
or
jmp
cmpsb
stos
testb
mov
mov
mov
push
es
pop
sbb
push
insl
imul
sbb
xchg
movsl
sahf
fisubrl
push
cmpsl
rorb
lret
pop
xchg
push
push
popa
cmc
shll
fldt
mov
cmp
sbb
mull
push
jg
fwait
cmp
xor
imul
xchg
rorb
xlat
xor
and
cmp
jnp
add
roll
outsl
sbb
ljmp
push
pop
xchg
adc
movsb
out
ret
loopne
mov
jne
pop
push
hlt
cltd
lret
fsubr
and
jne
sub
inc
test
popf
jnp
xchg
cmpl
or
pushf
mov
mov
addl
and
out
shl
push
stc
inc
mov
test
cmpsl
mov
imul
xor
cmp
rclb
daa
pop
pusha
imul
hlt
and
mov
push
clc
xchg
mov
mov
dec
mov
xchg
pop
adc
pop
mov
mov
cmp
pushf
icebp
jne
insb
shrb
test
dec
cmp
test
mov
xor
roll
push
gs
push
and
aaa
and
addb
daa
pushf
orb
into
mov
sbb
arpl
sbb
int3
and
lods
jmp
shrl
stc
jl
jns
fimull
or
jp
lock
iret
call
cmpsl
mov
or
pop
std
mov
mov
in
fbld
jne
xlat
xchg
sbb
adc
jnp
stos
das
testl
mov
jns
imul
mov
add
fildll
and
std
lret
neg
fldt
inc
jo
je
mov
sahf
push
cmp
shlb
jp
test
sub
and
inc
and
sbb
push
inc
aaa
leave
out
pop
xor
pop
jge
sbb
xchg
pop
cmp
test
cld
sub
pop
mov
test
les
jnp
sbbb
or
lds
sub
imul
pop
pop
pop
pusha
dec
vmulsd
adcw
dec
mov
popl
cmpsb
pop
add
test
xchg
in
sub
or
mov
dec
jbe
and
icebp
scas
fwait
sbb
or
stc
test
adc
mov
test
mov
mov
bound
das
xor
cmp
mov
shrb
adc
mov
jbe
hlt
jle
in
pop
and
push
add
lea
hlt
ss
clc
fucom
jle
inc
inc
fbld
lret
jae
stos
jbe
sbb
dec
push
mov
xor
int
loope
daa
in
dec
stos
push
mov
jge
xchg
or
sbb
pop
mov
aam
sbb
out
sub
push
sub
in
in
int3
fstl
shlb
push
jnp
scas
fstpl
pop
ja
cwtl
mov
scas
lahf
leave
sbb
adc
mov
lods
lahf
int3
movsb
xorb
enter
xchg
pop
ds
out
pop
push
and
out
mov
test
sub
mov
stos
loope
push
mov
mov
cwtl
sbb
cmp
imul
cmpsb
or
shll
imul
jnp
loope
xchg
in
ss
dec
cmc
dec
ret
fnstcw
sti
shll
shlb
imull
mov
call
aam
xor
nop
clc
lods
shl
into
push
mov
test
into
lcall
push
ret
cmp
stos
daa
repnz
not
icebp
mov
fcomps
test
notl
stc
sub
inc
or
jmp
dec
ljmp
shrb
add
inc
push
xchg
mov
jb
lret
push
mov
pop
fcompl
pop
scas
aas
scas
pop
test
decb
cld
xchg
in
sbb
sub
cmc
dec
mov
jl
mov
hlt
scas
cmp
stos
push
out
cmc
stos
imull
loope
movsb
jecxz
xchg
push
cmpl
sbb
mov
out
add
popf
movsbl
mov
sub
clc
lret
cmpsl
stc
pop
test
scas
and
gs
jbe
mov
xor
and
fcmovnb
outsb
add
xchg
push
mov
repz
mov
sbb
mov
fsubrs
push
nop
imul
jbe
jp
rolb
int
xor
jmp
ljmp
lahf
dec
xchg
push
cli
std
lcall
inc
fisttpll
mov
sbb
movsl
mov
and
cmc
push
add
xor
push
mov
pop
jmp
xor
push
dec
ljmp
add
scas
insb
cmp
je
xchg
add
xor
bound
or
test
sbb
adc
imul
mov
mov
push
push
adc
adcl
fcmovbe
mov
adc
xchg
mov
stos
les
orl
pop
mov
mov
mov
jb
jp
addr16
in
scas
std
in
stc
ljmp
add
js
iret
outsl
adc
adc
mov
mov
mov
cwtl
loopne
imul
cmp
inc
and
jecxz
pop
dec
cli
fwait
test
sbb
lret
test
movsl
add
in
or
movsb
pop
pop
push
pop
sub
mov
dec
mov
inc
test
jae
iret
dec
loope
cmp
or
clc
mov
rorl
mov
xorb
inc
sbb
cmp
cmp
mov
adc
sub
and
ret
push
pop
dec
sub
jno
inc
xchg
pop
dec
xlat
imul
or
rol
pop
inc
pop
push
aad
push
push
fdivrs
dec
dec
sub
push
movsl
sub
aam
jo
inc
pop
movsl
js
out
ljmp
nop
stc
pop
and
mov
sbb
ficoml
xor
mov
cmpsb
sti
or
enter
push
enter
or
pop
rcrb
xor
dec
pop
mov
jg
mov
xchg
and
aam
or
and
or
cmpsl
fistps
mov
adc
ds
ja
add
int
cwtl
lods
jge
mov
mov
arpl
idivl
inc
sbb
das
jns
cmpl
mov
popf
dec
idivb
push
push
xor
cmp
sahf
mov
add
in
adc
xchg
nop
lock
dec
add
mov
pop
xor
call
cmpb
push
mov
les
mov
cmp
jl
sbbb
pop
mov
push
das
sbb
insl
ds
fnstcw
xchg
mov
dec
inc
loop
aam
xchg
iret
repnz
inc
fwait
mov
fwait
das
cmp
lock
dec
cld
aad
mov
les
outsb
cld
sub
lock
pop
pusha
push
ret
mov
mov
inc
mov
leave
cs
dec
cmp
fscale
and
ret
es
sub
xlat
aad
das
lret
adc
fisubl
add
adc
push
bound
inc
scas
fwait
lea
sti
mov
adcl
cmpsb
aam
lret
cmp
adc
pop
in
aam
nop
mov
push
ret
dec
push
movsl
and
int
ret
xchg
jg
pop
or
xchg
ss
movsb
dec
fwait
mov
pop
icebp
add
sbb
inc
lods
push
dec
leave
fnsave
jge
cmc
cli
or
mov
into
cmp
mov
jns,pt
mov
lret
dec
es
xchg
pusha
fldcw
pushf
out
push
iret
in
push
inc
add
js
insl
mov
push
inc
xchg
aas
or
add
negb
das
add
sbb
fdivl
push
test
leave
push
arpl
inc
dec
and
hlt
xchg
or
mov
rcll
xchg
addr16
push
cs
loope
stc
mov
mov
xor
stos
mov
mov
dec
dec
movsl
cltd
or
rcll
cmpsb
enter
shll
nop
xchg
and
sub
adc
fldcw
or
push
push
imul
jp
movsl
xchg
jecxz
ret
jbe
inc
in
jl
jecxz
mov
popf
int
sbb
mov
clc
fstps
cli
mov
cltd
sub
js
or
pop
dec
adc
hlt
fistpl
int
or
jmp
sub
and
fnstcw
inc
mov
mov
int3
fwait
sub
ljmp
cmp
xor
sub
xchg
pop
xor
cmc
add
add
mov
iret
es
pop
mov
fldl
pop
test
cmp
sub
xor
aad
mov
jecxz
cmpsb
call
cs
scas
in
pop
jp
repz
sarb
adc
ljmp
aaa
sbb
sbb
rcr
or
add
ret
xchg
mov
adc
mov
paddusb
mov
insb
jne
xlat
std
cli
fninit
jge
sbb
push
lret
mov
push
jg
stc
or
cmpsb
ret
jle
stc
xchg
push
in
jmp
in
data16
cmp
cmpsl
imul
enter
rolb
dec
push
and
lahf
xchg
pop
popa
mov
js
mov
adc
jo
xor
test
cmc
inc
das
dec
sbb
jp
ds
cli
xchg
push
popf
cwtl
stc
or
inc
and
pop
jle
stc
aaa
es
xchg
pop
cld
sub
lcall
xchg
data16
sub
dec
cmp
fs
inc
loopne
sbb
hlt
push
sub
inc
sub
push
sbb
mov
push
and
adc
movsl
cwtl
dec
mov
push
add
mov
testb
push
scas
pop
divb
pop
add
push
jl
jp
cmp
stc
mov
sub
mov
jmp
aad
insb
les
xchg
filds
dec
sbb
adc
pop
ret
fwait
or
std
push
insl
jecxz
fwait
ds
xor
push
inc
cmp
push
inc
xchg
jmp
cmpsl
sbb
xchg
jnp
sbb
sbb
shrb
push
cmpsb
jo
std
in
adc
push
jno
adc
stc
or
cld
aaa
orl
mov
shll
mov
scas
inc
divl
and
mov
xchg
sbb
fsts
dec
aad
cltd
repnz
test
stc
push
in
das
mov
cmpsl
jmp
sbbl
add
cli
jl
shrl
cmc
push
jge
dec
or
jg
adc
pusha
ret
jg
push
lea
xor
lret
rorb
and
inc
jmp
out
pop
push
sbb
and
fcomps
int
mov
pusha
sub
mov
lcall
inc
or
push
jg
lcall
lds
testl
xchg
inc
push
push
adcb
mulb
and
inc
cmp
lock
and
lcall
out
add
add
push
cmp
cmp
mov
dec
lea
xor
aas
adc
sbb
aam
or
lea
push
addl
vmovaps
les
andb
and
incb
dec
sahf
insb
ljmp
xchg
mov
shlb
xchg
mov
mov
pop
dec
cmp
mov
and
mov
out
push
les
les
test
pop
int
enter
cmp
add
lcall
pop
fidivl
cld
imul
xchg
lahf
add
jne
xor
imul
out
sub
aam
add
aas
jp
sub
clc
data16
cmp
cmp
ss
xor
mov
jle
sbb
sbbl
and
inc
jne
mov
std
ds
pop
mov
les
xor
sti
jp
fwait
xchg
or
sar
lcall
repz
in
dec
pop
sbb
xchg
cwtl
sbb
push
test
mov
sti
inc
in
jmp
xchg
add
in
or
jmp
cwtl
jge
cmp
insb
dec
xchg
lock
cltd
sahf
je
and
adc
fidivl
sti
mov
push
popw
mov
mov
mov
cmp
enter
gs
and
stc
jp
in
dec
pop
in
dec
movsl
cltd
xchg
cmp
mov
imul
test
mov
mov
nop
mov
sbb
and
out
gs
std
into
ljmp
in
mov
mov
out
mov
int3
out
mov
or
jnp
mov
clc
adc
daa
cmp
jb
lock
inc
mov
lret
repz
fucom
lods
test
sbb
iret
dec
les
orb
or
push
and
rclb
cmpsl
outsl
in
lahf
xchg
sub
lret
mov
out
pop
movl
stos
je
lock
sti
push
cltd
adc
insl
in
jne
mov
fsubrs
fcmovne
push
iret
fimuls
cs
aas
xchg
ljmp
push
add
pop
inc
out
add
lods
xchg
xchg
daa
hlt
and
sub
iret
daa
xchg
xor
cmp
mov
dec
loopne
in
and
cmpsb
sbb
mov
out
and
into
jb
inc
aad
push
aas
cli
mov
ret
dec
and
pop
mov
add
rol
push
shr
jecxz
xchg
loop
inc
test
mov
enter
ret
xlat
imul
std
xchg
imul
shl
xchg
or
sbb
sbb
std
add
sub
xlat
icebp
scas
ror
stos
mov
mov
xor
jg
adc
in
stc
mov
frstor
inc
lret
test
dec
mov
dec
jno
cmpsl
push
and
pop
paddusw
pushf
cmp
pop
mov
mov
in
mov
mov
pop
mov
cld
mov
add
popa
outsl
pop
in
or
lea
lahf
cmpsl
imul
insl
push
mov
mov
scas
out
jg
adcb
push
sub
jl
mov
int
pop
cmp
jge
fmuls
dec
xchg
insl
push
jne
and
aas
fwait
push
inc
fwait
cmp
xchg
outsl
sub
push
lret
pop
cmpsl
lds
push
ja
sbbl
aas
cld
test
cld
pushf
cmp
ret
lahf
add
xchg
push
inc
dec
cmp
ja
pop
dec
push
pop
mov
jmp
int
scas
mov
and
lock
inc
cs
push
sub
xchg
insb
dec
sarb
mov
les
into
lds
fs
mov
dec
and
pop
xchg
nop
mov
and
mov
pop
xor
xor
fisttpll
mov
ljmp
mov
xchg
int
adc
hlt
jge
add
adc
outsl
jl
xchg
jnp
push
repnz
mov
sub
add
dec
clc
add
in
push
aam
scas
call
inc
mov
mov
loopne
icebp
inc
push
xor
sub
rol
pop
popf
loop
xor
je
js
inc
ja
cld
loope
cld
mov
push
and
jo,pn
stos
sbb
sub
fisubrl
sbb
jge
push
cli
cmp
daa
das
mov
pop
nop
jae
sahf
adc
shrl
imul
bound
ss
dec
xchg
pushf
sahf
shrb
test
jg
lods
rcr
pop
arpl
cmc
pushf
xchg
cmp
mov
popf
fbstp
lods
ret
push
shlb
push
or
and
add
xchg
insl
xchg
or
or
pushf
ja
std
mov
mov
cmp
adc
or
pop
call
aad
cs
and
jge
adc
pop
cmpsb
or
in
add
hlt
adc
adc
mov
or
mov
into
out
dec
fcmovnu
push
pop
fsts
rclb
sbb
popa
mov
das
fstl
pop
mov
stos
aam
scas
mov
insb
push
outsb
jmp
cmp
sub
xor
jmp
fs
in
adcb
sbb
lcall
inc
dec
jmp
lahf
jne
repnz
fcoms
movsb
ja
cld
js
aam
cmpsb
sub
jg
sub
push
mov
jns
xor
push
fsubrp
lret
aaa
test
xor
and
xchg
lret
inc
jp
stos
pushf
and
jb
push
test
stos
orl
sahf
popf
pop
andl
bound
mov
sbb
sub
pop
add
sub
out
aas
jo
jae
and
mov
icebp
or
lret
add
xor
lds
cmp
sub
sahf
sub
les
in
lock
sar
stc
sbb
gs
mov
inc
rol
xor
push
dec
imul
lock
popf
fmull
pop
push
xchg
sub
cmp
xor
jmp
jp
lahf
test
stc
jno
cmpsl
push
jmp
roll
fs
and
pop
push
aas
cmp
pop
leave
mov
xor
das
sub
cwtl
ss
cwtl
aaa
dec
jno
push
xchg
xlat
cs
push
mov
jbe
fidivrs
dec
xchg
add
cltd
push
scas
sub
sub
rclb
pop
adc
ss
cmp
pusha
mov
in
dec
stos
adc
add
cmp
xchg
sub
dec
jle
out
out
or
xor
and
jp
mov
mov
xor
addb
add
enter
jmp
adc
jmp
test
popl
ficoms
and
mov
sub
aaa
mov
in
mov
pop
clc
mov
data16
push
repnz
test
inc
sbbl
xor
lock
fcmovnu
ret
push
mov
mov
push
loopne
pop
xor
into
icebp
or
arpl
push
sbb
sub
lds
push
sbb
dec
leave
insb
push
pusha
push
cli
ja
push
sarb
and
imul
xchg
mov
mov
mov
mov
jno
imul
repnz
adc
adc
jmp
sbb
xor
lahf
mov
or
lret
out
pop
in
pop
sbb
adc
in
adc
cmpl
mov
or
in
xchg
insl
movsb
andl
inc
sahf
insb
fstps
bound
lahf
cmpsb
popf
movsb
mov
push
call
mov
fwait
xchg
fsub
ljmp
pop
push
fiadds
les
out
nop
or
xchg
mov
mov
pop
add
ds
fdiv
jnp
pop
inc
shrd
xor
mov
pop
out
pop
jno
sarl
mov
inc
sub
inc
or
jmp
and
mov
loopne
and
push
lahf
addr16
sub
mov
xchg
push
fisubrl
mov
sub
fisubl
insb
xchg
int3
xor
xchg
pop
scas
ljmp
sub
xchg
cmp
push
cs
negb
sub
mov
push
mulb
and
sti
fidivrs
movaps
jbe
in
sti
idivl
adc
push
clc
sti
mov
repnz
mov
pop
sub
mov
dec
fistps
inc
dec
pop
mov
xor
cs
and
nop
loope
clc
mov
xchg
call
and
out
xchg
sub
sub
xchg
jbe
icebp
popf
xchg
and
flds
mov
dec
jno
dec
and
mov
in
and
pop
add
adc
pop
outsb
loope
add
push
clc
mov
add
andb
jne
cltd
imul
sub
aad
stc
adc
push
inc
into
xor
xchg
xchg
inc
jge
push
mov
sbb
xchg
mov
loopne
aas
cmpsl
fsubrs
mov
ret
jns
pusha
jno
in
mov
scas
call
and
rcrb
push
out
cmp
aam
nop
shl
fistpll
mov
dec
jg
mov
insb
daa
mov
test
sar
xor
sbb
pop
cltd
test
mov
xor
out
ja
outsb
pop
fstl
xchg
mov
pop
movsb
cmp
aas
mov
and
xchg
xor
into
xor
imul
cmp
sbb
pop
mov
jbe
jbe
rcll
xchg
pop
lcall
popa
inc
ret
add
push
adc
lods
sbb
mov
fsubrs
push
clc
sbb
mov
cmpsl
push
andl
jg
jns
lods
or
add
jo
inc
not
ret
shll
dec
insl
fidivl
adc
jmp
fistps
push
dec
mov
out
mov
fisubs
push
dec
loop
inc
xchg
mov
adc
stos
fstpt
xchg
xchg
pop
les
inc
aas
and
lcall
push
xor
sub
lahf
jg
fnstenv
xchg
jl
mov
addr16
rcrl
dec
ficoml
mov
xor
cmpb
dec
loop
imul
cmp
aaa
xchg
ret
xchg
dec
paddd
pop
icebp
sbb
scas
ss
mov
ret
xchg
sub
les
mov
add
sub
pop
dec
xlat
push
clc
dec
or
xchg
sbb
out
push
jae
adc
or
xor
mov
pop
jnp
add
out
rcll
outsl
pop
outsl
aaa
jb
sbb
bound
mov
jb
jns
pop
lret
inc
aas
mov
xor
xor
cmp
pop
js
ljmp
push
xorb
mov
lods
cmp
test
das
gs
pop
repnz
inc
dec
andl
in
mov
aad
xlat
es
xor
inc
inc
mov
xor
mov
mov
out
fdivs
cs
adc
lea
mov
insl
cmpsb
mov
stos
or
mov
inc
xor
leave
add
dec
lea
neg
mov
leave
addb
dec
jmp
popa
mov
push
pusha
aaa
push
cmp
imul
sahf
jle
or
in
xchg
sahf
cmp
jnp
add
sub
popa
sub
add
enter
push
cmc
lods
sarb
lret
adc
dec
and
jge
dec
pusha
jl
ficoms
out
daa
insl
gs
ret
sub
std
fmul
push
mov
push
add
std
xchg
repnz
clc
sahf
adc
insb
mov
mov
addr16
pop
mov
andb
xchg
sti
dec
imul
cmp
fsubrp
and
shl
or
mov
xchg
mov
adc
add
cltd
cmp
shr
pop
scas
and
jnp
cmp
movsl
adc
mov
aaa
jae
imul
test
int
cmpl
cmpb
outsl
adc
lods
push
mov
cltd
dec
inc
dec
test
xor
pop
popf
adc
lcall
cmp
xchg
mov
jne
notl
bound
int
jns
cmc
cmp
pop
pop
dec
ja
fldl
lret
jb
pop
aam
lcall
mov
push
dec
mov
pop
xor
add
mov
and
inc
fstpt
xor
jns
fcompl
ljmp
sbb
bound
out
jo
nop
pop
pop
xchg
insl
add
shl
xchg
scas
pop
or
mov
popa
dec
insb
push
push
aad
in
and
push
js
ja
mov
push
push
cs
sarb
adc
divb
cmpsl
push
lds
daa
aad
pop
jae
es
stos
cmp
adc
daa
repnz
push
ss
aaa
jno
sub
inc
fidivrl
fdivrl
push
push
cmp
xchg
xchg
pop
adc
xchg
mov
gs
pop
inc
sbb
loopne
lds
mov
cmp
push
fcmove
cmovns
outsb
movsb
dec
add
cmpsl
dec
add
mov
aad
data16
hlt
fwait
mov
inc
scas
out
fs
mov
popf
call
loop
mov
lcall
rorl
in
xor
dec
popa
lods
paddsw
jns
push
loope
shr
pop
stos
cmpl
int3
mov
out
daa
mov
scas
mov
stos
mov
out
and
loope
mov
xchg
xor
notl
cli
data16
sbb
stc
mov
xlat
je
int3
test
pop
lods
sbb
cltd
ds
push
mov
mov
dec
dec
xchg
sub
call
add
sub
mov
mov
xor
and
fsubp
dec
inc
cmpsl
clc
or
or
inc
pusha
rorl
mov
or
lcall
inc
push
sbbb
mov
jg
or
jb
cmpsl
xchg
nop
adc
cmp
fldl
adc
into
sarl
add
ds
push
ret
dec
cmc
adcl
mov
and
mov
subb
lret
je
ljmp
fcoms
loope
mov
push
fbstp
imul
inc
xor
mov
inc
mov
popf
test
mov
xor
sbb
popf
dec
jge
xchg
pop
push
jle
inc
mov
jge
or
push
ror
xchg
cmp
sbb
jo
sub
ss
inc
jmp
adc
imulb
cmp
mov
mov
stos
mov
fmull
sub
push
movsl
jmp
sub
lahf
rcrb
and
sub
movb
or
aam
cmp
cli
mov
mov
test
testb
ja
push
clc
push
sbb
jmp
or
cs
sub
adcl
incb
cmp
cwtl
jno
dec
out
add
sub
in
mov
mov
mov
data16
shrb
gs
cmp
int
aad
inc
pop
rol
cmp
mov
mov
push
or
or
iret
inc
sbb
repz
test
jp
jmp
pop
cmp
jge
mov
pop
push
arpl
push
sub
jge
and
movl
mov
ret
cs
leave
je
enter
mov
push
xchg
pop
stos
fisttps
xor
mov
adc
xlat
pop
ret
or
pop
test
inc
or
rorl
lret
adc
jle
push
mov
xlat
stos
sbb
adc
ds
push
insb
stc
and
cmp
in
stos
aam
js
cmpsb
mov
outsl
fadd
repnz
jl
xchg
test
addr16
dec
pop
sbb
push
xchg
aad
adc
sub
add
das
and
inc
sbb
jmp
sbb
cmp
pop
mov
sub
mov
rcrl
pop
sub
cmpsl
lods
add
mov
mov
add
js
pushf
and
loopne
xlat
inc
push
mov
mov
push
mov
sub
insb
mov
sub
orb
mov
mov
in
add
repz
std
sbb
dec
jp
lret
imul
loope
mov
sbb
cli
cmp
pop
aas
jb
xchg
fwait
das
pop
or
pushf
cmp
push
mov
mov
pop
rcl
pusha
addb
rcrl
cmc
cs
nop
stos
std
pop
add
sub
push
test
aam
insl
xchg
dec
fwait
or
ret
in
jg
in
xchg
iret
outsb
daa
push
xchg
aas
jmp
xchg
aad
push
ljmp
sarl
and
gs
xchg
or
sub
lock
or
xchg
push
fbstp
push
rcl
jl
sti
push
cmp
shlb
xchg
mov
out
mov
mov
out
mov
bound
xorl
and
jb
shll
out
sbb
mov
outsl
xlat
push
xor
and
inc
subl
jg
in
sub
in
cwtl
fisubs
std
push
adcl
lds
mov
sub
movl
push
mov
aam
rol
and
fwait
shl
shll
out
push
inc
mov
jecxz
shr
push
jmp
mov
pusha
jb
jo
stos
xchg
xchg
cmpsl
bnd
lock
popa
mov
in
roll
aas
in
push
daa
jecxz,pt
repz
adc
add
push
adc
sub
jbe
imul
dec
mov
pop
push
sbb
call
dec
or
imul
fstps
pop
sbb
and
popl
je
jae
aas
pop
sbb
js
mov
test
sbb
jo
jae
mov
xchg
cwtl
mov
cli
jmp
jnp
lahf
cmpl
ljmp
addr16
lret
popf
movsw
lods
and
rcrl
pop
les
arpl
std
movsb
inc
xor
push
cmp
lods
lods
ret
push
sub
sbb
pop
clc
and
fwait
mov
popa
cli
add
fildll
mov
sbb
push
mov
leave
xor
outsb
push
mov
fdivr
test
jo
sbb
xorl
ret
int
jno
mov
dec
cltd
hlt
insb
sbb
icebp
pop
push
ljmp
jne
pop
mov
sub
dec
cli
pop
int
add
lret
lret
cmc
loope
xor
jecxz
fildl
sbbb
jbe
int3
in
shll
ds
add
push
mov
jbe
sub
lret
jle
leave
fcom
push
int
popfw
push
lock
sbb
push
adc
subl
lds
or
xchg
or
shl
imul
pop
pop
shlb
ds
popf
loopne
add
lea
xchg
dec
push
jmp
dec
bound
pop
xor
sub
and
fldenv
jmp
dec
mov
sbb
xor
cmp
rcl
mov
fcmovu
call
stc
mov
mov
push
jbe
push
mov
cmpsl
je
mov
pop
and
sbb
push
dec
imul
or
xlat
adc
or
xchg
jnp
scas
mov
pop
push
push
shll
jp
push
dec
iret
loop
ljmp
pop
stc
dec
xchg
add
push
sub
dec
add
sbb
test
xorb
mov
xor
dec
inc
mov
cld
cmp
jne
push
push
mov
incl
outsl
mov
fdivrs
inc
xchg
std
cmpsb
jmp
les
adc
push
inc
lods
mov
rorb
lret
lds
fxch
xor
mov
push
mov
mov
push
call
dec
mov
push
cmp
mov
in
andl
js
pop
pop
mov
adc
mov
out
xor
dec
lea
mov
mov
imul
xchg
lcall
mov
stos
outsl
shlb
out
push
pop
pop
inc
fists
fisttps
mov
test
jne
cmpl
jg
sub
or
push
xchg
sti
stc
stos
xchg
xchg
mov
js
mov
pop
cmp
sub
in
adc
adc
fwait
pop
pop
pop
sub
js
mov
cmp
loope
js
xchg
and
test
adc
mov
adc
scas
adc
lock
xchg
inc
stos
jl
jbe
and
and
dec
cmp
dec
add
lea
nop
std
scas
xchg
hlt
jg
cmp
leave
mov
scas
je
push
dec
daa
cmp
jnp
jns
arpl
sbb
cvtpi2ps
sahf
stos
lea
stc
lret
jge
xchg
or
mov
jno
inc
xor
ficomps
popa
inc
movsl
test
icebp
popf
aad
push
mov
aaa
loope
cmp
scas
iret
and
cs
inc
dec
outsl
sbb
push
dec
ljmp
cwtl
mov
nop
cmpsb
ss
out
cmc
rorb
les
fistl
mov
push
jp
fucomp
mov
repnz
sub
dec
outsl
cmp
mov
lds
fidivrs
adc
fsubrs
loopne
insl
push
cltd
mov
scas
ficoml
movsb
xchg
cmc
mov
cmp
and
jp
dec
psubsw
mov
push
int
shlb
mov
loope
mov
jne
xor
je
push
or
mov
aam
movsb
orb
ja
test
mov
fnsave
movsl
popw
movsl
mov
test
aaa
sub
pop
pop
lea
mov
mov
dec
divl
movsl
xchg
aas
std
std
cmp
push
insb
ja
adc
arpl
fsts
popa
mov
dec
inc
xchg
aaa
inc
in
xor
jnp
xor
xchg
push
sbb
cmp
xor
inc
inc
test
scas
xor
lds
rolb
test
mov
repz
xor
sub
pop
pop
jo
inc
ffree
rolb
test
and
push
imul
sub
xchg
push
and
dec
repz
push
inc
jno
outsl
xor
xchg
sahf
mov
hlt
stos
lret
adc
push
cmp
mov
mov
es
jge
inc
idivl
cmc
and
sbb
sbb
lods
out
mov
aas
add
iret
mov
push
push
add
mov
arpl
jbe
test
pop
enter
jb
test
xchg
fdivrp
movsb
imulb
test
popf
pop
mov
pop
xchg
test
pop
fnstcw
add
or
sub
std
sub
jp
lret
sub
add
shlb
dec
rcll
mov
nop
int
inc
or
mov
adc
inc
ss
jo
scas
push
hlt
xchg
and
mov
xor
loop
in
dec
cmp
imul
xchg
fwait
test
fistpl
and
mov
jbe
mov
outsb
push
mov
fwait
xor
les
int3
es
ret
loope
sbb
inc
fidivrl
jecxz
or
fcmovbe
pop
xor
rcll
ror
loop
add
ja
jle
sbb
push
jg
pop
pop
roll
mov
out
cmp
jo
jge
in
mov
sbb
repz
xlat
sbb
test
outsl
flds
shrb
fiadds
xor
xchg
jg
int3
lahf
push
jge
cmp
imul
ss
jmp
and
ret
add
jge
jne
in
in
ss
add
jecxz
test
inc
pop
fstpt
paddw
add
rorb
shl
int3
ret
mov
or
pop
mov
ret
ret
jne
nop
pop
jmp
lds
cs
cmp
mov
subb
mov
pop
insl
adcb
xor
je
aas
xchg
pop
push
ljmp
insl
mov
andb
inc
inc
sub
jb
aad
mov
leave
rolb
and
ja
out
jns
xchg
mov
ficoms
jecxz
mov
xchg
cli
in
addb
push
xor
push
inc
sahf
cwtl
jnp
shlb
stos
insl
fistps
or
lret
pop
adc
incb
pop
pop
dec
xchg
lea
jno
loopne
hlt
incl
mov
jle
fwait
jmp
js
xchg
fmul
pop
jo
cwtl
ds
push
cmp
mov
xchg
addb
imul
mov
jne
push
insb
rclb
pop
lock
or
iret
sub
ljmp
jo
dec
mov
cmpsb
xchg
pop
bound
xor
xor
add
das
mov
fs
push
or
or
xchg
and
pop
jmp
popf
mov
push
cmp
adc
scas
mov
outsb
mov
jl
sbb
mov
lock
ds
sub
pop
jne
int
out
cmp
es
mov
mov
add
sbb
or
stos
pop
lds
push
mov
or
jne
dec
or
test
jmp
mov
jg
jp
add
mov
push
lret
mov
stc
mov
and
dec
jecxz
mov
adc
repnz
mov
inc
jns
mov
adc
cld
lods
cwtl
push
xor
pushf
or
sbb
popf
int
cs
or
loop
fwait
cli
int
shr
sbb
lret
int3
jge
addl
xchg
add
and
mov
daa
mov
jb
insb
dec
int3
mov
or
jb
call
iret
push
in
inc
mov
not
cmp
add
test
mov
pop
push
pop
xor
dec
mov
aas
and
pop
jg
xor
xor
ret
shl
mov
ja
loope
sbb
xchg
mov
add
push
test
inc
addl
jns
ret
pusha
fisttpll
add
or
inc
mov
cmp
ret
je
jge
adcb
das
inc
sub
xchg
and
jle
jge
loopne
lods
call
insl
pop
loopne
or
xor
std
js
inc
int
add
pop
push
rorb
sbb
je
dec
aaa
or
mov
leave
xchg
or
sbb
inc
cli
into
push
mov
lea
insl
dec
ficoml
jmp
jmp
mov
sarb
rorb
dec
cmpsb
sbb
push
add
std
daa
fidivrl
loopne
push
sub
test
insb
movsb
adc
adc
xor
sub
dec
lcallw
fxam
and
push
adc
sub
or
cmp
push
add
in
cmp
jae
scas
not
test
loopne
mov
stos
stos
or
lock
outsb
test
lret
pop
jp
fwait
xor
mov
jae
sbb
sbb
xor
rcr
ljmp
mov
sub
fidivl
mov
in
in
mov
mov
mov
andl
or
pop
cs
and
js
jle
xchg
mov
loope
mov
das
imul
add
into
out
ror
and
ret
pop
enter
sub
sub
stc
rorl
pop
dec
mov
cmp
xor
in
push
pop
xor
pop
cmc
mov
inc
ficomps
mov
push
cmp
mov
loopne
inc
aam
int3
fwait
loope
jge
leave
add
dec
push
mov
shll
cmpl
or
xchg
mov
clc
mov
adc
pop
ficomps
mov
sbb
in
int
std
icebp
add
add
or
cwtl
adc
sub
push
lret
jo
mov
add
jle
clc
push
jo
pop
gs
ds
lcall
xchg
cwtl
mov
xlat
aas
fwait
es
psubsw
mov
out
jo
sbb
dec
in
cwtl
xchg
xchg
push
mov
cli
push
jb
lods
mov
cltd
jl
adcb
jle
cld
out
cmp
test
mov
ret
add
lds
mov
lret
incb
push
cltd
pushf
out
sbb
dec
dec
fucomp
xchg
cmp
cs
loop
mov
inc
mov
xchg
cmp
and
sub
loope
stos
mov
push
dec
dec
dec
pop
mov
sbbl
mov
pop
and
pushf
inc
adc
cli
rclb
jbe
cmp
je
nop
pop
xchg
dec
adc
iret
lea
push
xchg
sbb
fisttpll
shl
outsl
inc
add
fbld
pusha
arpl
clc
testl
out
sbb
pop
push
ja
xchg
les
mov
mov
jbe
xchg
subl
js
sbb
int3
das
xchg
sarb
jno
jecxz
push
sarl
inc
pop
lret
sbb
scas
or
push
dec
fidivrl
jecxz
mov
pop
scas
cs
mov
icebp
sub
daa
sub
pop
inc
sarl
and
add
iret
mov
push
or
push
cltd
andl
or
lret
shrl
push
lods
fildl
lea
add
cmpl
cmp
and
mov
mov
ficompl
imul
dec
jl
push
xchg
popf
jnp
pop
jmp
inc
xchg
flds
jno
or
pushf
sbb
jmp
call
inc
jne
ljmp
mov
jmp
sbbl
adc
adc
call
xchg
adc
fnstenv
dec
popa
push
xchg
and
clc
out
rcrb
data16
pusha
sbb
adcl
add
push
test
out
pop
fstl
add
dec
mov
mov
stos
enter
dec
mov
pop
iret
clc
xor
pop
mov
mov
inc
test
xor
push
arpl
repnz
aad
mov
push
and
inc
ljmp
repnz
daa
jge
enter
jl
addr16
mov
lea
int3
pop
pop
sbb
pop
cs
stos
bound
pushf
mov
sbb
push
movsl
add
icebp
cmp
pop
mov
loope
mov
and
sub
sbb
mov
push
nop
inc
mov
xchg
jle
mov
mov
pop
xorb
jnp
inc
fnsave
mov
in
and
in
xor
cmc
push
or
mov
cmc
cmp
ss
push
cld
loop
hlt
arpl
mov
loop
pop
mov
mov
rcl
cltd
into
rcr
pushf
stos
mov
xor
lods
push
loopne
fiadds
arpl
mov
stos
add
pop
sub
fnstenv
cwtl
lcall
cmpsb
push
aam
orl
ja
xchg
mov
dec
cmp
rorb
xor
mov
jp
mov
push
mov
je
test
cli
stos
cmp
add
out
fbld
or
adc
push
out
inc
aad
movq
sbb
nop
inc
push
xchg
push
and
xchg
jmp
loope
xchg
jns
and
fmul
dec
lock
cld
and
jae
jne
fidivrs
lods
icebp
bound
in
mov
or
sbb
cmp
push
rcll
jp
or
inc
lahf
xor
repnz
inc
subl
xchg
jns
dec
jl
inc
push
add
add
movsb
out
jp
mov
rcll
fwait
push
mov
loope
and
testl
or
cmpsb
in
popf
mov
mov
xchg
push
pop
push
cwtl
pushw
sbb
mov
pushf
add
and
nop
mov
sub
in
push
or
cltd
test
push
loopne
adc
in
mov
push
dec
ss
out
scas
jle
xchg
fdiv
jmp
bound
mov
lcall
dec
sbb
sbb
push
mov
xor
or
lret
jmp
push
jo
sub
sub
mov
cmp
mov
push
cmp
cwtl
mov
xchg
xor
das
jo,pt
jmp
iret
mov
push
pop
mov
test
add
shrb
jnp
pop
sub
jp
dec
xchg
xchg
lret
cwtl
popf
js
sub
mov
cmp
xchg
mov
adc
sti
insl
xchg
add
test
lds
aad
sbb
sarb
inc
pop
test
ja
xchg
jg
cmpsb
push
mov
sub
addr16
mov
mov
adc
scas
prefetch
dec
sbb
jnp
test
inc
pushf
ja
fwait
jmp
movsb
mov
movsb
iret
fisubs
xchg
xchg
das
mov
fidivs
jae
and
sbb
add
sub
push
pusha
aas
dec
add
cltd
xchg
es
lret
pop
inc
xor
dec
pop
iret
lret
xlat
adc
add
cmp
dec
mov
arpl
pop
push
out
mov
mov
mov
or
pusha
ficoml
push
outsl
dec
adc
xchg
add
mov
sbbl
jle
dec
cmp
jbe
inc
push
loope
ljmp
rolb
ds
mov
push
xor
sbb
fstl
addr16
pop
adc
fsubrs
mov
fsubr
pop
inc
mov
jbe
cmp
mov
xor
sarl
dec
inc
aas
sub
stos
shl
mov
orb
add
pop
push
sbb
mov
mov
dec
sub
xchg
arpl
inc
imul
jle
and
sub
imul
xor
mov
push
xchg
dec
lret
loope
mov
pop
xchg
movsb
ret
cmp
mov
sub
mov
push
hlt
push
push
mov
loopne
sbb
add
scas
mov
dec
xor
mov
mov
cmpsl
mov
pop
fnstsw
cmp
adc
imull
movsl
rclb
sbb
mov
fisubrs
ret
xor
push
int3
int
jno
aam
push
je
fs
call
xchg
ret
outsl
xchg
jb
fldenv
push
xorl
popf
xchg
add
push
inc
mov
data16
inc
sub
add
nop
add
pusha
xchg
push
add
shrl
and
sbb
xor
out
fisubrs
jg
ds
in
in
cmc
lret
adc
jmp
in
adc
mov
inc
xlat
lret
mov
mov
outsb
or
lcall
pop
add
je
sbb
pop
sarb
push
cmpb
pop
shrb
rcl
sub
dec
or
xchg
jne
enter
adc
add
imul
add
inc
xchg
push
push
loop
js
cs
inc
xchg
bsr
fldt
leave
call
bound
xchg
pushf
in
jmp
aam
xor
mov
es
ds
xchg
push
loope
iret
push
mov
imulb
loopne
sub
mov
adc
js
push
mov
mov
adc
cs
pop
mov
aas
or
std
xchg
mov
pop
jb
and
mov
xchg
hlt
adc
dec
inc
ret
dec
ja
adc
pop
mov
lcall
inc
fcoms
cwtl
mov
xor
fwait
add
cmp
pusha
xlat
pop
mov
scas
lret
inc
fiaddl
push
inc
sbb
cli
fimuls
pop
aam
jp
dec
mov
out
mov
aam
jge
push
push
mov
adc
imul
and
adc
pop
out
or
and
xchg
loop
imul
lds
nop
mov
push
stc
loop
sub
adc
mov
jo
pop
adcl
into
push
flds
daa
or
orl
pop
and
dec
dec
cmp
in
cmp
cs
inc
addl
cmpsl
add
paddq
into
add
fwait
dec
stc
into
cmpsl
test
dec
fisubrs
lret
jle
mov
xchg
iret
decl
pop
test
lock
and
push
add
and
sub
dec
push
pop
cltd
xchg
mov
dec
imul
add
jo
in
inc
jmp
je
daa
or
mov
jae
das
ficompl
lods
inc
pop
push
dec
sub
inc
fidivs
in
or
mov
repnz
fildll
loop
jae
push
movsl
ret
xchg
in
xchg
mov
test
inc
les
fsubr
add
dec
lods
push
rclb
push
mov
mov
jg
sbb
lret
popa
pop
pop
into
jae
or
inc
push
cmp
loop
out
mov
in
shlb
testb
dec
push
loope
inc
inc
mov
xchg
arpl
das
jbe
ss
popa
cmp
pop
cmpsw
fwait
lcall
jg
sbb
mov
scas
ret
pop
jno
push
dec
shlb
call
pop
sarl
arpl
aas
jge
mov
cmp
mov
mov
or
testb
inc
add
mov
inc
sbb
repz
lahf
add
ja
jg
add
pushf
jecxz
push
cmp
ficoms
scas
in
xchg
movsb
push
and
ja
insb
addr16
pop
dec
adc
shrb
lock
ds
sbb
sub
mov
push
push
shlb
int
loope
pop
pop
icebp
ret
sub
in
mov
ljmp
repz
iret
adc
arpl
pushf
ds
aam
fisttpll
out
fucomp
int3
inc
aam
das
movsl
lods
cmp
pop
push
pop
xchg
shl
out
or
inc
cltd
sub
push
stos
jae
arpl
adc
mov
cld
xchg
dec
mov
mov
out
mov
pop
add
in
xor
frstor
or
inc
mov
bound
icebp
inc
test
cmp
mov
loope
ds
ret
pop
ret
data16
sar
sahf
push
pop
in
es
sub
jmp
aam
into
aas
pop
jns
adc
mov
cmp
jne
cs
sbb
inc
sbb
data16
shlb
outsb
jae
fwait
not
xchg
in
data16
inc
cmp
xor
pop
insl
adc
xor
dec
outsb
out
scas
sbb
mov
sbb
fists
xchg
hlt
inc
loopne
xor
sub
stos
je
mulb
mov
fwait
jg
loope
movl
dec
pusha
int
sbb
movsl
sbb
loop
and
jle
out
imulb
and
mov
lcall
jb
movsl
mov
daa
pop
dec
adc
cmp
inc
mov
jno
xor
push
jno
xor
xchg
push
add
or
test
push
inc
lret
pushl
imul
imul
push
stos
mov
jmp
das
rclb
mov
movsb
js
and
sar
jg
jns
hlt
or
scas
hlt
cmpsl
leave
hlt
lret
out
ss
or
lret
hlt
out
lret
sub
fsubrl
fcmovnb
sub
jp
call
push
aad
mov
adc
test
shl
mov
inc
or
mov
sbbl
insl
jecxz
push
in
xor
in
inc
xchg
inc
mov
das
sti
cli
sahf
pop
jne
shll
mov
std
push
test
or
push
mov
insb
pop
cltd
jae
jle
mov
xchg
idivb
int3
mov
imulb
in
adc
call
jle
andb
call
adc
pop
std
cmc
iret
mov
mov
mov
icebp
cs
enter
and
lods
and
into
ret
and
pushf
sub
cmpsb
xchg
push
sub
mov
in
stc
sbb
jmp
pop
add
pop
pop
ficomps
xor
andl
push
push
push
adc
into
scas
add
sbb
dec
mov
in
into
add
and
sbb
jg
mov
adc
js
fcoml
out
adc
mov
test
or
push
push
cmp
movsl
mov
dec
push
pop
or
mov
mov
xor
dec
adc
pop
lahf
daa
les
jo
fwait
and
cs
pop
pusha
fwait
rcll
shrl
das
mulb
jmp
add
xchg
pop
sub
call
mov
push
cmp
mov
push
pop
lcall
sbb
cli
jecxz
repnz
test
mov
adc
mov
pop
pop
repnz
leave
cwtl
mulb
mov
insb
add
mov
fisttpll
gs
aaa
out
cmp
movsl
in
xchg
imul
outsb
or
scas
mov
push
add
popl
inc
mov
sbb
outsl
orb
neg
cwtl
out
or
cmp
pop
arpl
mov
adc
ja
xchg
fsubrs
pop
arpl
fdivl
test
pop
fmull
stos
in
mov
lahf
fmull
cmp
hlt
outsb
shl
sahf
cmpsl
mov
subb
xchg
in
fcompl
ds
mov
inc
mov
shr
arpl
cwtl
dec
int
rolb
movsl
cmp
stc
cmp
jecxz
jg
or
mov
mov
pop
out
inc
mov
adc
outsl
dec
mov
test
mov
xor
adc
or
aas
into
mov
mov
pop
mov
adc
lret
lfs
int3
mov
js
mov
and
out
adc
pushf
xchg
out
shll
fldenv
test
mov
and
in
mov
and
cwtl
sbb
pusha
push
aas
inc
push
cmpsb
mov
mov
or
fildll
mov
mov
xchg
movsb
call
orb
mov
in
cmp
rorb
or
jmp
add
or
test
shrl
clc
mov
or
push
pop
test
pop
cmpsb
cli
in
adc
sub
mov
shlb
frstor
mov
unpckhps
pop
adc
sub
push
inc
andl
jno
roll
out
sarl
cmp
outsb
or
bound
fimuls
and
fdivrs
cltd
fbld
mov
ja
sub
pop
push
xor
jl
inc
loope
xor
mov
movsb
scas
loope
cmc
std
loop
movsl
in
push
rorl
out
je
lods
movsb
xor
imulb
xor
cmovge
fstpt
jg
test
test
shlb
cs
sub
aam
fsubs
push
xchg
xchg
jae
or
in
add
xor
pop
mov
sub
nop
data16
pop
cld
mov
push
orl
mov
and
sbb
in
jbe
jbe
xorb
inc
inc
imul
mov
fcmovu
xor
rorb
cmp
push
ret
xchg
xchg
lea
notb
xchg
inc
add
push
movsb
inc
loopne
aad
cmc
jns
std
enter
inc
popa
mov
sahf
sbb
repz
cld
fisttpl
pop
sarb
push
jo
mov
lret
aam
dec
push
enter
cmp
jl
sbb
int3
mov
std
and
jl
ror
pop
sbb
test
mov
shlb
js
pop
jb
shr
enter
add
mov
aas
addr16
or
sbb
dec
nop
lret
mov
cs
int3
cli
lock
sbb
jmp
mov
adcb
dec
add
out
pop
pop
pop
xor
rcll
inc
jo
xor
sub
dec
call
stos
jb
jnp
sbb
adc
dec
pop
test
imul
mov
pop
hlt
push
pop
and
and
pop
adc
sbb
lods
add
push
stos
lret
xchg
popa
stos
xchg
push
mov
insb
sbb
xchg
inc
dec
cwtl
fldenv
inc
out
sbb
pop
outsb
mov
mov
testb
ss
cmc
push
pop
add
outsb
lods
jae
xor
mov
cmp
pop
or
popl
lret
jmp
test
inc
cwtl
jmp
pushf
or
sbb
cmpsb
mov
mov
cltd
jno
bound
xchg
pop
stc
adc
jno
repz
mov
mov
andb
mov
xlat
mov
lahf
xor
mov
lahf
clc
sub
repnz
repz
ret
int
cltd
lret
cmp
dec
bound
and
push
ss
je
pusha
hlt
imul
addl
lret
or
aaa
rcrl
movsl
or
imul
mov
add
sub
mov
jp
or
inc
flds
sub
push
dec
pop
cmp
test
stos
movsl
movsl
pushf
add
dec
gs
xor
shl
lcall
sbb
mov
and
sbb
xor
xor
lock
ficoml
sbb
dec
jno
imul
mov
mov
repnz
sub
out
mov
xlat
das
sbb
add
sub
sbb
xor
loop
pop
lret
fsubrs
sbb
inc
test
mov
arpl
out
je
cmp
pop
jns
xchg
sub
ss
mov
iret
pusha
sbb
and
inc
inc
imul
inc
cmp
or
lret
push
and
mov
ret
negb
or
or
outsl
popa
loopne
orl
cmp
lret
mov
xchg
xor
andl
sub
scas
lret
adc
sub
mov
sahf
pop
mov
bound
enter
insl
iret
xor
mov
xor
jb
or
stos
or
fistps
xor
repz
repnz
frstor
arpl
mov
stos
add
add
insl
test
js
dec
adc
lods
push
stc
add
inc
testl
inc
jecxz
inc
pushf
iret
mov
sahf
test
movsb
or
or
adc
inc
aad
inc
add
mov
lds
daa
mov
lods
dec
call
xor
mov
rcrb
sbb
lret
stc
clc
cmp
xor
pop
inc
mov
outsb
ja
pop
loope
icebp
pushf
jo
inc
std
shrb
xor
or
dec
dec
mov
push
jmp
cmp
bnd
out
and
and
clc
and
sahf
push
aad
mov
mov
fs
push
cmp
dec
xor
dec
orb
inc
add
push
mov
sub
xchg
repz
and
sub
jmp
js
xchg
sub
adc
loope
int3
mov
or
pop
or
mov
jp
dec
jecxz
jbe
ret
pop
sti
inc
es
insb
xor
jecxz
lahf
xorb
movsb
adc
mov
in
xchg
sbb
xchg
f2xm1
stc
lcall
fisttps
and
int3
and
outsl
pop
aas
pop
enter
sahf
xchg
or
repz
sub
test
fnstcw
aam
jnp
sub
push
jo
insl
adc
xor
fyl2xp1
rcl
lret
insl
cmp
das
sahf
mov
mov
lret
ja
mov
and
dec
fcomp
push
mov
mov
fstpl
xor
bound
divb
fldt
inc
inc
xor
adc
ss
out
jp
fucomi
out
sahf
pop
mov
mov
adc
sbb
cmpsl
scas
and
pop
mov
sub
adc
dec
cwtl
adc
mov
mov
push
divps
clc
xor
cmp
lea
jmp
mov
popa
adc
dec
jns
push
mov
xor
or
stc
ficoms
and
mov
das
sbb
pop
shrb
insl
xor
shll
in
mov
or
out
dec
std
mov
rcl
push
cmp
scas
mov
rolb
jecxz
or
xchg
ljmp
sbb
mov
adc
js
shll
inc
xchg
imul
shlb
push
mov
cmc
lock
into
and
in
int
xchg
pop
cs
in
sahf
cmpsb
xor
mov
adc
jg
pop
mov
leave
fnsave
jae
pop
cmp
inc
in
ja
cwtl
mov
and
call
call
fistps
stc
push
cmp
inc
inc
in
cli
test
out
in
add
add
orl
iret
and
aad
ret
jns
cld
dec
cmpsl
dec
jecxz
adcl
cli
mov
adc
rcrb
cmp
pop
inc
mov
push
aad
mov
and
jg
ds
std
dec
cmp
jbe
xchg
js
mov
sbb
jne
aaa
xor
cmp
xchg
mov
imul
mov
imul
lock
push
fs
sub
fcmovnb
xchg
xor
out
jl,pt
repnz
mov
push
rolb
repz
fsubrp
xor
mov
shr
mov
add
sbb
clc
push
mov
rorb
not
ljmp
mov
sbb
and
hlt
lcall
add
lret
lcall
fsubrl
fidivrs
lock
pop
fisttps
arpl
addr16
pop
xor
jb
mov
pop
add
in
mov
in
pop
cmp
mov
cltd
sbb
and
out
pop
popf
mov
inc
mov
int
and
pop
pusha
js
fsts
push
xlat
xor
test
mov
pushf
aad
lds
pop
mov
jl
fldenv
fwait
mov
mov
ljmp
and
jecxz
fidivs
sub
icebp
xor
jecxz
or
lcall
mov
fidivrl
mov
stc
sbb
out
stc
and
dec
jl
push
rorb
or
mov
lret
add
inc
ret
clc
flds
sar
aad
pop
imul
jle
cltd
inc
jecxz
loope
jnp
xor
mov
xchg
mov
jmp
and
hlt
mov
push
sub
xlat
fdivrp
mov
repnz
shlb
dec
iret
lret
lods
popa
xor
dec
jle
inc
or
sbb
orl
sbb
loope
adc
jno
adc
adc
outsl
popf
jecxz
sbbb
es
and
scas
inc
add
movsl
in
shrb
daa
popf
in
dec
jp
cmc
cmpsb
dec
into
push
and
pop
std
aad
add
call
mov
push
mov
scas
in
jmp
inc
sbb
arpl
dec
ss
rorl
stos
lds
js
fldenv
lahf
repnz
or
xchg
cli
or
stos
and
jb
sub
pop
out
sub
cwtl
jo
pop
fisttpl
mov
cmpl
popf
mov
cwtl
repnz
pop
fstpt
inc
in
sbb
test
loope
mov
mov
das
mov
loop
int
mov
adc
daa
push
cmp
ljmp
adc
ja
xor
ja
pushf
mov
aam
lods
push
lret
jg
fidivs
mov
pop
mov
stc
mov
xor
xchg
pusha
push
outsb
mov
leave
rcl
and
xor
inc
jp
cld
insl
mov
mov
movl
mov
sub
les
icebp
pop
jmp
test
fldt
xor
stos
imul
sbb
rcrb
adc
push
push
or
cmp
xor
and
add
mov
lret
and
fwait
loop
test
fiadds
pop
adc
mov
popa
mov
mov
cwtl
or
es
daa
pop
mov
xchg
cmp
mov
shrb
in
push
jo
pop
mov
in
mov
jg
arpl
lds
in
xor
and
push
push
pop
movsb
addb
push
xor
cmpsb
lret
mov
sbb
ficompl
mov
stc
pop
ret
repnz
enter
mov
test
out
add
ret
arpl
push
mov
jle
jecxz
sbb
rorl
fildl
cli
je
fldenv
push
xor
in
icebp
nop
ret
xlat
jnp
and
jae
insb
jecxz
jno
sbb
jl
loopne
jmp
adc
shrl
lret
hlt
test
push
xchg
jge
sub
insb
sub
xchg
cmp
ret
push
jge
movsb
dec
shll
inc
fwait
inc
dec
cltd
cmp
mov
movsl
clc
mov
into
aad
push
or
cmp
pop
jmp
push
mov
pop
and
xchg
cmp
adc
mov
adc
dec
lds
pop
dec
adc
popa
lret
out
sub
sahf
loopne
pop
adcl
decl
and
lds
pop
cmpsb
lcall
jns
in
xor
mov
mov
es
cmp
loop
cwtl
mov
jecxz
and
mov
cmp
xchg
ja
mov
test
lahf
jne
mov
and
jmp
xor
pop
sbb
sub
mov
mov
sub
xor
inc
pop
inc
sub
inc
int3
lahf
jae
push
jnp
fistpl
cmp
shl
mov
aas
imul
rorl
fabs
loop
sub
adc
repz
jecxz
jp
scas
push
leave
pushf
push
push
mov
call
out
xchg
popf
sub
int3
lea
inc
push
mov
mov
cmp
aad
lahf
sub
test
xchg
jne
pop
sahf
jbe
loop
in
cmp
dec
xchg
je
pop
ljmp
jno
iret
sbbl
mov
add
cmp
dec
adc
or
pop
push
ljmp
push
and
cmpl
out
lea
mov
sub
stos
mov
cmp
aad
dec
xor
cmp
cld
push
add
scas
and
shrb
cltd
jle
jb
ds
mov
lcall
stos
jecxz
aas
add
jo
das
sub
inc
pop
push
cmp
mov
mov
mov
hlt
push
fwait
movsb
xchg
dec
cmp
mov
inc
mov
sub
cs
int
and
mov
dec
lret
mov
stos
lret
int
and
ret
dec
xchg
jmp
jle
enter
cmc
or
cwtl
cmpsb
mov
jns
shlb
xchg
andb
push
inc
testl
or
mov
jp
iret
adc
adc
push
push
cs
lcall
mov
in
cmc
cltd
sbb
fucomip
es
mov
test
paddw
je
fimuls
mov
movsl
push
loope
movsb
dec
cmp
je
fldenv
dec
int3
push
je
inc
notb
push
jp
xchg
fistl
mov
out
xchg
pop
les
add
mov
pop
ljmp
mov
sbb
push
add
out
rcll
into
mov
xlat
das
addr16
and
xor
adc
pop
push
add
mov
cmp
sub
bound
lock
pop
outsb
test
push
mov
daa
adc
fisttps
sbbl
lahf
repnz
lcall
push
push
lods
dec
push
xchg
or
inc
xor
lahf
shll
jecxz
and
add
pop
add
mov
dec
cld
inc
or
inc
pusha
sbb
loopne
dec
or
cmpsl
and
push
xor
dec
pop
aad
jmp
jp
inc
mov
test
jg
lret
mov
insb
jno
mull
addb
lahf
adc
add
add
jae
push
stos
inc
in
rol
out
xchg
cs
pusha
add
lock
ffreep
sahf
jo
ds
pop
int3
out
adc
in
cli
imul
inc
cld
ret
xorb
mov
divl
dec
sub
ja
mov
test
jp
cmpsl
push
ret
pop
fiaddl
and
sub
dec
jns
add
into
lock
lods
aaa
pop
sub
add
mov
subl
aad
cmp
dec
fwait
sarl
ffreep
les
sbb
lahf
and
repz
inc
andl
fildl
pop
inc
push
sti
ds
lods
imul
push
data16
popf
stos
mov
ds
cmc
and
adc
addb
sub
push
jo
jmp
push
xor
sub
mov
adc
push
pop
icebp
inc
mov
sub
inc
js
fnstcw
xor
mov
pop
push
or
mov
jbe
nop
dec
push
or
or
push
xchg
add
pushl
test
adc
mov
add
inc
shl
jb
cmpsb
push
push
dec
adc
mov
dec
ss
rcrl
pop
aas
sbb
rclb
daa
or
push
lock
fsubrs
dec
mov
dec
add
fidivrl
cmp
loope
add
lahf
add
addr16
pop
add
fistpl
aad
flds
pushf
and
or
bound
test
cmp
mov
or
or
notl
es
dec
es
out
stc
adc
cltd
pop
and
loopne
push
dec
lret
sbb
lcall
cmpsb
aad
inc
sbb
inc
adc
xchg
lret
xchg
outsl
lock
jmp
dec
rcrl
clc
sub
push
scas
lock
or
sti
sub
popa
vpmuludq
xor
shrl
ret
inc
mov
xlat
push
sbb
push
sahf
jae
jp
jp
das
xor
loopne
jo
sbb
mov
jecxz
imul
cmp
std
push
push
test
dec
mov
movsl
inc
jb
dec
les
shrb
push
sarb
insb
cld
outsb
and
dec
sub
int3
adc
aas
push
nop
js
dec
stos
mov
inc
aas
mov
scas
lea
enter
cmp
push
mov
pop
loopne
mov
add
and
test
cmpsb
sbb
outsl
cmp
jl
jp
lea
cmp
jle
xchg
cli
loope
shrb
int3
add
stos
pop
jno
mov
outsl
ja
sbb
pop
icebp
mov
jb
movsb
inc
cmp
mov
fnstcw
imul
cmp
ror
pop
xchg
fwait
shll
gs
pushf
pop
xchg
add
mov
call
dec
lahf
sbb
push
roll
enter
fwait
test
pop
push
xchg
mov
pop
adc
xchg
push
push
pop
and
push
adc
popf
jbe
arpl
xchg
or
shr
into
pop
push
hlt
push
push
movsl
mov
xor
xchg
and
imul
sbb
cmp
jge
add
icebp
nop
mov
aaa
xchg
outsl
inc
xchg
into
idivl
inc
testl
or
test
out
sub
xor
push
rolb
mov
scas
sar
mov
inc
je
sti
imul
or
xchg
mov
sbb
sub
not
xor
mov
push
pop
nop
mov
sbb
shrl
aad
adc
inc
add
popa
and
vphaddbw
fnstsw
fsubl
jbe
mov
lea
dec
lock
mov
mov
add
or
pop
xchg
inc
cmp
pop
or
rcll
mov
cmp
cmp
adc
push
fnstenv
sub
fnstsw
xchg
test
aaa
xchg
adc
xchg
or
shlb
and
popa
sahf
imul
ljmp
xor
rcr
sub
imul
pop
loop
adc
push
or
outsb
sbb
inc
enter
leave
xor
ds
ja
xchg
jge
jmp
mov
sti
push
inc
jb
imul
sbb
rcll
xchg
ds
pop
inc
cmc
xchg
push
pop
scas
jecxz
pop
sub
mov
mov
cwtl
fwait
mov
cmovle
int3
arpl
repz
dec
xor
out
addr16
imul
aam
call
lea
mov
es
mov
jmp
test
mov
xchg
mov
outsl
mov
in
je
xchg
in
mov
mov
add
push
mov
mov
sub
lret
xlat
test
es
hlt
inc
xorb
sbb
inc
xchg
dec
add
jb
mov
jb
cwtl
xor
outsb
dec
dec
or
mov
mov
xor
dec
jge
adc
mov
sahf
sbb
jle
xchg
fistpl
and
and
jecxz
outsl
in
ljmp
in
push
out
pop
int3
or
xor
mov
xchg
aad
adc
scas
fisttpl
mov
insb
adc
push
clc
mov
inc
jb
cmpsl
lea
das
cmp
and
imul
ljmp
xlat
cld
sbb
mov
data16
es
xor
pop
test
dec
mov
call
ja
nop
les
adcb
mov
out
lret
stos
pop
xchg
dec
mov
in
imul
xchg
pop
lret
ficoml
movb
mov
push
hlt
test
or
outsb
scas
adc
xchg
pop
xchg
jp
test
movsb
pop
pusha
insb
incl
xor
mov
jae
test
cmpsl
add
adc
fimuls
inc
xor
sub
gs
ffreep
add
mov
push
loopne
roll
cmp
cmp
xchg
gs
cmp
dec
out
mov
ds
out
push
enter
jp
jo
mov
mov
dec
inc
sbb
push
push
fcomps
lock
dec
xor
shl
and
fwait
out
imul
sbb
leave
push
sub
adc
lock
inc
mov
push
add
sub
pop
push
xchg
xchg
pusha
add
xor
cmpsb
es
adc
clc
adc
testl
sub
scas
jae
jp
dec
cmp
xor
dec
sub
in
jle
jns
jbe
popf
inc
hlt
cs
lcall
pop
popf
cltd
movl
addr16
jae
into
xchg
andb
pop
xchg
jmp
push
pop
out
adc
ret
or
in
int
adc
ficoml
dec
jmp
popw
cmpsl
xor
xchg
or
push
sub
orl
mov
outsl
fldl
insl
popa
dec
mov
pushf
adc
pop
insb
sub
fmuls
dec
or
je
js
mov
xchg
or
daa
sbb
sub
rcrl
adc
pop
dec
inc
daa
negb
add
ret
bound
sarl
adcl
ds
add
sub
jmp
dec
xor
jge
lods
xor
inc
dec
inc
inc
sarb
push
fcoml
lods
call
or
popa
sub
pushf
push
dec
ljmp
sbb
dec
add
les
nop
mov
pop
test
leave
dec
dec
sub
xchg
sub
icebp
fdivl
aas
call
mov
jecxz
les
cmp
mov
or
in
aas
call
xor
xor
popl
js
sub
inc
mov
and
js
push
push
fisubrl
fidivrl
pushf
or
mov
insl
nop
cmp
and
lcall
xchg
mov
test
addr16
or
out
mov
mov
repz
push
in
rol
cmp
das
lods
fs
mov
pop
ftst
loope
push
inc
mov
pop
es
imul
repz
insl
mov
out
xor
fmull
repnz
jbe
cmp
mov
adc
mov
add
adc
adc
dec
dec
mov
addr16
pusha
jnp
clc
push
or
mov
sbb
push
jnp
mov
push
ficompl
fistpl
popa
or
fadds
cmp
adc
imul
ljmp
shlb
sti
fwait
sbb
add
adc
mov
mov
mov
int
add
popf
xlat
adc
aas
mov
test
test
sti
jbe
jmp
pop
xchg
aaa
stos
dec
lret
lahf
push
pop
or
adc
stos
pop
sbb
cld
sar
mov
enter
pop
sub
cmp
mov
and
push
cmp
push
mov
dec
pop
pop
movsl
aaa
outsb
add
xchg
xchg
push
push
jg
mov
loope
fstpl
inc
pop
xchg
adc
test
xor
lahf
sub
sbb
cmp
cmpl
sbb
cli
cmp
add
xor
fildll
pop
sbb
mov
popa
mov
outsb
imul
pop
sub
repnz
xchg
push
inc
mov
adc
push
push
fimull
das
test
andb
sbb
add
popa
jnp
push
jmp
sub
ss
dec
sbb
fmuls
xchg
fidivrl
in
push
inc
mov
daa
in
inc
mov
xchg
inc
xchg
and
adc
and
xchg
dec
div
pop
dec
push
lahf
xlat
sarl
frstor
push
jecxz
dec
insl
add
call
mov
or
sbb
jae
fldenv
mov
mov
push
outsb
pop
xchg
dec
and
aaa
mov
shlb
test
xchg
aad
orl
cld
and
icebp
dec
jo
mov
add
mov
pop
aam
cmpsb
jne
dec
fsubl
jne
fldenv
hlt
out
adc
stc
ret
mov
movsl
mull
mov
ja
push
les
cmp
and
mov
fbstp
jle
ret
pop
pop
lock
out
iret
dec
mov
mov
insl
iret
adc
mov
push
decb
sbb
add
cmpsb
and
mov
std
jmp
xchg
insb
jb
inc
xorb
add
xchg
cmp
stc
call
insl
hlt
pushf
repz
ss
icebp
mov
inc
adc
clc
cmp
je
mov
cltd
shrd
icebp
pop
loopne
js
or
in
mov
aad
cmp
add
sahf
shrl
fnsave
mov
mov
or
cmp
push
mov
addr16
xchg
xchg
mov
mov
out
cmpb
loope
xor
mov
add
pop
or
sub
sub
outsl
pop
repz
movsl
and
ret
adc
cli
fistpll
aad
daa
xchg
jbe
dec
inc
popa
dec
add
add
test
xorl
repz
out
std
iret
out
push
inc
stos
in
lds
out
push
rorl
add
outsb
stos
pop
fnstenv
cmp
cli
mov
push
mov
pop
repz
cmp
aas
arpl
inc
cmp
fisubrl
xchg
cmc
pop
cmpsl
xor
js
pop
loope
mov
hlt
cmp
sbb
mov
sbb
push
xchg
pop
push
je
ret
xor
adc
mov
xor
lods
rcrb
or
mov
sti
mov
and
or
lea
sti
loop
pop
ret
inc
jmp
nop
mov
and
dec
or
push
xchg
fs
popa
in
xor
or
daa
push
insl
cmpsl
roll
jecxz
and
lcall
sub
int
or
xor
shlb
test
xor
jle
subl
sbb
push
rorl
fs
xchg
push
mov
scas
lods
inc
cmp
pop
adc
into
inc
repz
sub
jno,pt
or
dec
mov
rorb
cmp
or
adc
dec
mov
sub
mov
cmc
movsb
xchg
or
cwtl
gs
insl
xor
rclb
movsl
and
out
icebp
mov
xchg
movsl
mov
out
dec
pop
dec
jl
addb
jo
xchg
ja
pushf
xchg
sub
xor
dec
ret
pop
pusha
or
xor
aad
out
das
adc
outsb
adc
fwait
dec
pop
push
sbb
bound
in
mov
push
decb
sahf
mov
in
dec
ss
test
pop
lahf
or
or
xchg
shrb
dec
push
cli
test
lret
std
clc
adc
mov
out
or
mov
in
cmp
jnp
adc
and
enter
cs
sub
sub
xchg
sub
test
inc
decb
inc
or
stc
push
aad
mov
push
xor
cmp
lock
je
push
loope
add
add
outsl
pop
rep
pop
ret
pop
fldl
sbb
cmpsl
cmp
sbb
pop
inc
rcpps
dec
mov
push
add
pop
loop
inc
scas
es
push
inc
push
xchg
push
inc
sbb
adc
shrb
popa
push
lahf
and
std
cli
inc
xchg
std
pop
movsb
pop
mov
out
pop
jne
jb
int
mov
adc
lea
mov
mov
es
rcll
push
lret
push
mov
cmpsl
out
push
call
jae
mov
sbb
lcall
shll
push
mov
sbb
out
mov
pop
add
movsb
mov
idivl
jge
les
push
cmc
imul
inc
iret
push
mov
adc
js
sahf
data16
aam
mov
stos
jbe
sbb
inc
add
add
mov
jnp
or
fstpl
addl
icebp
cmp
pushf
cmp
hlt
fists
mov
icebp
out
xor
jns
scas
es
push
push
insb
inc
cmp
xor
addl
push
icebp
push
mov
cld
call
mov
sub
xor
lret
in
cmpsb
push
loope
leave
inc
pusha
mul
pop
mov
aaa
mov
inc
pop
negb
fdivrs
mov
in
hlt
dec
mov
mov
mov
jge
adc
in
mov
fistpl
wrmsr
push
sub
add
add
push
clc
lods
and
ret
imul
not
jo
push
mov
ret
cli
and
scas
icebp
fsub
ror
mov
outsb
mov
jnp
sub
icebp
mov
cmpsb
inc
imul
outsl
jp
push
rcl
stos
cwtl
stos
fistpll
popl
sarb
mov
movsb
or
and
jge
add
movsl
inc
adc
sub
and
add
xchg
decb
dec
orl
cmpl
xchg
mov
pop
loopne
mov
test
mov
das
cwtl
shlb
out
push
test
adc
jo
adc
push
imul
push
mov
mov
dec
sbb
adc
movsb
inc
add
jg
scas
push
mov
dec
lock
xchg
rcrb
sub
xchg
and
out
push
imul
call
jl
pusha
mov
xchg
movsl
jnp
fnsave
and
ret
ss
jno
jp
push
push
jle
adc
lret
test
dec
mov
cli
xor
xor
imul
in
ret
adc
test
cmp
inc
add
rolb
mov
cmp
outsb
fidivl
cmp
insl
in
imul
popa
push
scas
mov
lods
xchg
xchg
mov
inc
and
es
dec
repnz
cmp
cltd
xchg
daa
jne
mov
adcb
int3
cld
adc
mov
ret
xor
loopne
mov
jno
adcb
push
xchg
scas
pop
sti
dec
dec
push
jb
pop
ss
mov
pop
push
sub
and
xlat
cs
adc
push
xchg
stos
enter
cmp
int3
pop
imul
sub
mov
insb
pop
mov
jo
mov
test
lea
mov
sbb
ss
addr16
stos
shrb
test
aas
fucomp
cltd
call
fs
push
gs
loope
outsl
inc
insb
jle
xor
inc
mov
clc
cmpsl
cld
mov
out
adc
shrl
mov
xor
lret
aaa
mov
ret
adc
in
push
or
xlat
mov
rcl
test
xlat
sub
mov
adc
mov
jecxz
pushf
mov
inc
push
pop
jne
mov
fwait
in
xor
dec
shlb
inc
cmc
scas
enter
xchg
push
shlb
sti
jae
arpl
inc
pop
mov
outsb
aam
fldt
xchg
cmpsl
adc
mov
add
cmpsb
ja
pop
jno
dec
mov
adc
addl
jnp
pop
jecxz
push
mov
mov
cmp
stc
sub
sub
scas
in
jb
jno
and
popa
cmp
std
leave
in
lret
pop
push
rolb
jae
out
inc
mov
cwtl
cmpsl
or
cmp
xchg
mov
cmp
adc
jbe
cwtl
inc
mov
mov
xchg
daa
mov
out
test
jo
push
mov
int3
and
cmp
xchg
rorb
jae
pop
mov
bound
push
pop
hlt
stc
lret
insb
repz
mov
in
sbb
sub
push
lcall
cmp
aas
xchg
popf
pop
test
loope
or
repz
push
sbb
xchg
dec
int3
inc
push
outsl
cltd
fs
dec
nop
jno
int
and
mov
push
mov
adc
nop
or
push
or
fst
lods
jbe
mov
push
gs
getsec
in
xchg
mov
cmpsl
stos
call
dec
popf
movsb
mov
sbb
clc
mov
jp
stos
mov
dec
inc
int3
pushf
push
iret
int
and
popf
jg
mov
sarl
ret
mov
loop
rcrb
push
sbb
cmp
pop
xchg
lcall
ss
pop
pop
cwtl
pop
xor
xchg
orl
scas
sbb
inc
icebp
repnz
nop
inc
mov
faddl
fmuls
jne
sahf
fwait
popf
jne
loop
sub
mov
pop
cmp
mov
movsb
popf
sbb
push
inc
pop
mov
xchg
add
sub
xor
into
fimuls
jg
lds
fcomps
and
or
lods
mov
mov
out
enter
or
int3
lret
or
dec
in
je
addb
in
in
and
sbb
scas
mov
test
jecxz
repz
lds
inc
fimuls
mov
xor
xchg
dec
stos
aas
pmaxsw
bound
jb
faddl
loop
cmc
dec
dec
jp
outsb
or
jnp
sbb
cmp
test
stos
mov
ret
das
data16
adc
add
sbb
add
test
and
lods
mov
mov
shll
hlt
les
push
std
call
mov
inc
rolb
pop
sub
lcall
add
iret
xlat
pop
mov
xchg
in
shl
inc
test
mov
pushf
adcl
dec
stc
nop
inc
andl
jb
sbb
dec
dec
cmp
ret
cli
ljmp
bound
mov
decb
jnp
stc
insb
xor
xor
inc
aad
dec
daa
popf
repz
inc
inc
cs
jne
sub
adcl
cwtl
add
gs
es
ss
cmp
dec
out
jne
dec
es
xchg
loop
or
sub
xor
push
xor
or
icebp
add
xchg
mov
add
mov
leave
mov
mov
sub
xorb
push
xor
notl
xorl
cmp
shll
jecxz
das
push
mov
rcrb
or
rclb
cld
push
jns
in
jge
enter
in
sbb
fwait
es
push
sahf
bound
fdivl
call
fcomps
push
jmp
ss
leave
test
ljmp
xchg
fwait
imul
pop
pop
pop
icebp
pop
cs
outsl
push
sbb
andb
test
loop
ja
inc
dec
push
xor
xchg
mov
add
adc
xchg
inc
iret
test
lock
mov
mov
ds
shl
push
repnz
fildl
jg
adc
xor
or
scas
inc
fdivp
mov
lea
out
inc
sub
ds
fs
mov
push
pop
repnz
and
mov
sahf
push
or
mov
test
lret
mov
xor
in
in
mov
pop
dec
ja
insl
cmp
xchg
pop
sbb
call
inc
fmull
lahf
pusha
mov
stos
sub
shll
sub
imul
aad
xchg
imul
adc
dec
xchg
in
nop
pop
adc
lcall
pop
fwait
popa
popf
dec
sub
into
movsb
inc
mov
ja
sahf
pop
or
test
dec
push
mov
mov
and
inc
test
xchg
pusha
push
cld
scas
mov
jecxz
hlt
mov
pop
push
fwait
cwtl
or
fs
mov
loopne
aam
insb
cwtl
jp
sbb
xchg
jnp
test
mov
stos
leave
adc
mov
test
lds
ljmp
xchg
xchg
std
int3
adc
push
out
das
in
mov
mov
xor
pop
push
rcl
fs
loope
jnp
jmp
push
and
stc
dec
mov
out
idivl
test
addr16
jo
inc
xlat
push
dec
jno
iret
jbe
mov
sbb
and
cmp
add
push
jle
popf
and
pop
sbb
repz
loop
iret
test
mov
iret
jnp
stos
jle
dec
outsb
imul
sbb
pop
adc
mov
pushf
jge
mov
dec
mov
into
adcb
in
fs
in
fcmovnb
aas
jns
int
adc
or
push
dec
shll
mov
ss
out
imul
fcompp
loope
out
in
repnz
stos
push
mov
xlat
xlat
subl
sbb
scas
xor
cmc
dec
ljmp
ds
jnp
sub
push
outsl
mov
and
xchg
mov
xchg
loop
in
push
mov
or
pop
js
cmp
movsl
mov
and
dec
das
inc
adc
xchg
inc
xchg
dec
xlat
xchg
idivl
ljmp
mov
add
leave
in
in
xchg
inc
pop
lods
gs
test
xchg
sub
mov
mov
in
add
fcmovnu
outsb
or
icebp
xchg
lods
cmpsb
mov
repz
scas
sti
insb
or
mov
stos
pusha
stos
test
sbb
sbb
dec
lcall
rcrb
loopne
pop
mov
arpl
or
repz
pop
cmp
dec
inc
jb
xor
ret
lock
cmp
sbb
xchg
movsb
cmpsl
mov
mov
sub
roll
jo
xor
dec
add
orb
mov
bound
orl
mov
inc
aaa
cmpb
push
rol
dec
jbe
sbb
inc
adc
mov
daa
jne
pop
stos
jnp
nop
ds
dec
dec
cmpb
sbb
negl
lock
adc
jnp
pop
and
dec
jae
mov
nop
neg
mov
adc
mov
xor
shrl
pop
sbb
dec
mov
adc
scas
pop
inc
stos
jns
fsubrs
lret
rcl
in
lret
mov
xor
sbb
lret
dec
jecxz
mov
out
or
aaa
mov
iret
push
ljmp
scas
stos
sbb
mov
aaa
push
lds
mov
pop
dec
mov
jp
std
mov
fst
xchg
jae
flds
sub
decb
mov
xor
test
push
rorl
gs
loopne
xor
fmulp
push
nop
mov
subl
jno
lret
push
push
mov
nop
scas
pop
sub
jno
xor
jae
cs
xor
xor
inc
jae
push
scas
dec
jl
dec
dec
sub
iret
and
ss
shlb
dec
sbbb
sub
fildl
lret
out
imul
repz
mov
adc
jge
adc
addl
mov
testl
mov
and
aas
jns
push
repz
add
rclb
in
rep
mov
mov
pop
and
xlat
adc
sahf
sbb
cmp
cmp
jecxz
push
ja
daa
lds
loopne
adc
cmpsb
cld
mov
mov
rcrl
inc
sub
add
jbe
sbb
push
fs
pop
stos
pop
sub
xchg
jbe
aad
iret
data16
dec
pop
sbb
out
movsb
addr16
inc
xchg
aam
insl
inc
rolb
fwait
xor
lods
inc
xchg
add
loop
sub
daa
sarl
test
lds
xor
sbbb
or
fnstsw
sbb
fmull
xor
xor
fs
xor
pusha
jl
daa
adc
pop
mov
cmp
movsl
int3
or
mul
ret
mov
jmp
xor
lods
fimull
mov
inc
and
inc
or
js
popf
sahf
fldl
or
cs
and
into
xchg
dec
mov
dec
mov
mov
mov
lret
xor
mov
cmp
push
sub
mov
jnp
sti
inc
sbb
cmpsb
jns
aas
lret
mov
ffree
mov
lea
mov
in
mov
dec
stos
pop
aam
mov
jmp
int
cltd
divb
lock
popa
push
sbb
sbb
pop
adc
or
subl
popf
jge
mov
scas
cs
cwtl
adc
movsl
mov
cwtl
outsl
inc
dec
dec
or
test
daa
mov
mov
inc
icebp
enter
xchg
push
scas
mov
fwait
sub
dec
notb
mov
mov
cmp
sub
mov
push
lea
jmp
fidivrs
iret
push
addl
fsubl
mov
push
ret
clc
fucomp
test
pushf
add
xor
or
arpl
inc
adc
scas
xor
jg
out
xor
lods
hlt
fidivrl
adc
shll
scas
and
pop
mov
nop
push
inc
sbb
sbb
repz
mov
adc
fdivrs
popf
inc
xchg
cmpsl
mov
xlat
nop
popf
pop
enter
jmp
mov
pop
and
xchg
add
add
mov
sub
popa
ljmp
add
inc
xor
jnp
cmp
jbe
adc
out
add
fadds
mov
and
dec
rclb
fwait
push
into
fcmove
xchg
jg
mov
mov
xorl
push
aas
int
push
mov
nop
add
aad
push
xchg
mov
jge
scas
add
lahf
jbe
mov
mov
pusha
movsb
add
je
adc
shrb
pushl
out
shrl
in
mov
or
pop
movsb
mov
adc
scas
push
in
jne
adc
pop
ret
push
adc
pop
lods
pusha
mov
push
movsb
cmp
pop
xor
inc
mov
out
out
pop
pop
int
cltd
jno
pop
mov
divb
lahf
clc
add
je
mull
inc
lahf
inc
shrl
pop
out
pop
add
xchg
stc
jl
inc
cmp
jl
cld
pop
adcb
sti
sbb
or
int3
movsb
sub
outsl
jge
push
sbb
repnz
or
xor
mov
cmc
hlt
or
add
dec
push
ljmp
and
adc
enter
rorl
and
pop
pop
int
push
testb
sub
nop
sub
sahf
and
movb
nop
or
push
leave
jecxz
cmp
add
loope
mov
outsl
xchg
dec
push
aaa
cld
inc
adc
mov
pop
cmpsb
mov
daa
cmp
jb
or
cmp
dec
xchg
xlat
adc
pop
mov
dec
repnz
fsubl
sbb
lahf
popa
inc
mov
inc
gs
insl
test
enter
xchg
dec
inc
jp
out
hlt
fstpt
sub
xor
repz
cmc
jae
aas
repnz
mov
mov
repz
gs
jge
or
es
test
and
ret
or
out
dec
dec
add
lret
cwtl
lcall
cmp
bound
dec
mov
mov
mov
dec
adc
dec
mov
sahf
in
and
pop
lods
clc
cwtl
inc
gs
scas
cld
and
jp
test
inc
ficoml
in
dec
inc
pop
add
push
jae
into
sub
sub
ficomps
and
popf
and
mulb
push
mov
push
jae
call
adc
fstl
sahf
sbb
outsl
mov
push
pop
sub
mov
imul
and
fcoms
dec
add
sub
push
jp
dec
hlt
notl
into
iret
les
add
push
dec
xchg
inc
pop
cwtl
dec
lahf
pop
dec
shr
insl
stos
shrb
mov
sub
xchg
jmp
call
cmp
movsb
add
pusha
dec
jne
xchg
pop
xchg
mov
stc
push
out
adcb
js
test
mov
xchg
nop
pop
js
mov
mov
pushf
cmp
nop
mov
push
and
insb
repz
ret
scas
rcr
lods
jecxz
push
jp
daa
push
in
ds
push
adc
inc
pushf
jl
mov
or
mov
out
ja
in
mov
adcl
ret
sbb
inc
std
aas
mov
cmpsb
sbb
movsb
fwait
jle
movsb
and
dec
jns
jl
mov
call
inc
xchg
bound
mov
aad
scas
mov
insl
dec
in
push
mov
and
mov
mov
mov
hlt
jbe
and
testb
or
xor
push
shll
aam
leave
out
inc
in
push
jnp
mov
leave
xchg
xor
sahf
jmp
fnstsw
ret
sbb
adc
mov
sahf
xor
icebp
adc
lds
lds
xor
andl
inc
shlb
inc
mov
lret
idivl
mov
cmp
inc
mov
outsb
daa
fwait
int3
push
movsb
test
inc
push
mov
test
sub
mov
pop
pusha
or
test
mov
mov
push
dec
pop
iret
sbb
rclb
cld
mov
rcll
out
cld
xor
jae
push
mov
jb
shlb
mov
mov
inc
inc
mov
inc
addl
aam
sub
mov
pop
out
data16
mov
dec
cmpsl
or
xor
push
xlat
pop
jbe
push
cmp
sbb
fnstenv
xchg
or
mov
cltd
xor
notb
pop
mov
imul
jns
movsl
popa
or
add
data16
insl
cmp
ljmp
aam
popa
dec
mov
mov
popa
lahf
lods
or
push
stc
sub
outsb
in
add
xchg
fwait
push
es
dec
xor
test
jl
clc
cmpsb
jg
int3
pop
xor
jg
pusha
dec
insl
push
sbb
pushf
and
dec
popa
lods
pop
or
std
fmuls
leave
jge
ret
outsb
test
cld
rcrb
xchg
xor
or
test
rcrl
xchg
push
sbb
inc
mov
in
dec
or
fcomi
push
popa
test
mov
gs
cmp
cmp
and
cs
add
mov
adc
adc
and
int
jns
dec
push
mov
sub
fmull
movsl
test
lret
loop
mov
jmp
loopne
leave
cmc
test
out
sbb
pop
mov
dec
jp
jo
xor
jge
ret
pop
jp
jle
sbbb
push
jb
orl
and
pop
mov
sub
int
outsl
jp
and
pop
mov
lret
cld
inc
or
js
lahf
mov
scas
lock
out
push
sti
cmc
sbb
pop
fisubs
inc
sbb
cmp
sarl
inc
or
fbstp
shrl
inc
jnp
mov
sub
mov
mov
les
int
data16
dec
stos
adc
mov
jp
fimuls
inc
inc
leave
in
fbld
mov
les
iret
cmp
inc
mov
mov
adc
adc
dec
fcmovnbe
cs
iret
cmp
xchg
add
cmp
fdivrp
jge
mov
sbb
inc
popf
fs
sbb
push
aas
orl
inc
inc
push
es
jg
pop
add
xor
fldenv
arpl
xchg
push
adc
sub
int
add
lock
lahf
push
dec
mov
fwait
outsb
ss
scas
jmp
sbb
cmpsl
nop
mov
mov
mov
push
dec
add
xchg
mov
movsb
jno
push
stc
inc
jg
aaa
ret
loopne
inc
stos
dec
adc
lcall
lds
or
mov
inc
or
idivl
aas
jb
sub
je
pop
mov
fisttpl
add
sbb
sub
adc
cmc
lret
dec
cwtl
jg
adc
jae
mov
repnz
iret
les
xchg
arpl
pop
xchg
popa
out
cs
add
fiaddl
rolb
scas
movsl
sub
jmp
iret
push
xchg
scas
fisubs
icebp
push
mov
scas
and
lcall
add
cmp
int3
aam
loopne
add
gs
mov
dec
dec
sti
dec
and
cs
and
adc
mov
cmp
jle
les
adc
pop
xchg
sub
notb
xchg
push
ja
sub
pop
iret
fbld
jmp
out
mov
jbe
sub
insb
outsb
pop
pop
addl
jp
mov
es
int
jp
xor
int
pop
fistpll
push
xchg
cmpsb
and
xor
mov
add
push
sub
inc
dec
jmp
cld
xchg
data16
mov
out
xchg
lahf
push
fimull
or
xor
lds
shl
mov
mov
stos
fnstcw
loope
push
fildl
mov
inc
mov
lret
leave
sub
dec
in
bound
push
mov
jl
sbb
and
in
pusha
dec
movl
dec
sub
lock
fisubrl
je
push
xchg
mov
cmc
push
incb
inc
std
xor
and
call
sbb
loopne
sub
call
addb
cmp
insb
into
cwtl
jns
xchg
jp
mov
mov
dec
test
mov
sbb
test
fcompl
and
es
movsl
js
and
cs
adc
sbb
sti
fldenv
fsubrl
pop
ret
aas
enter
sbb
nop
rorb
cmp
and
shlb
push
mov
cld
push
xor
testl
pop
out
mov
in
inc
jo
mov
test
adc
mov
push
mov
cmp
fdivrs
popf
iret
cmp
push
mov
imul
or
imul
paddq
into
jne
inc
mov
sbb
mov
jl
std
jbe
xchg
cmp
mov
scas
push
xorl
add
jbe
outsb
xchg
dec
lods
lods
nop
push
pop
and
sub
pop
push
mov
inc
sahf
inc
pushf
pop
test
int3
orl
aaa
enter
dec
push
imul
imul
pop
dec
adc
adc
outsl
mov
cld
sub
inc
cmp
cmp
lahf
test
xor
sub
pushf
sahf
and
xchg
or
adc
stos
int3
bnd
jecxz
out
mov
in
and
call
sbb
xchg
std
lods
pop
dec
mov
or
pop
daa
sub
cmp
stos
jecxz
cmp
or
lock
test
adc
fsubs
sub
mov
jnp
adc
push
icebp
aas
inc
cmpb
push
pop
ret
arpl
sbb
ja
jbe
in
fwait
inc
xor
call
lahf
mov
loop
rcrl
dec
xor
sbb
jle
mov
jle
mov
sahf
xor
lcall
adc
and
sbb
int3
das
cmp
out
test
pop
mov
aas
or
pop
sub
cs
xchg
xchg
dec
mov
test
es
jb
push
push
jg
or
in
push
aam
les
fucom
add
xor
daa
cmp
jp
add
scas
fcmovnbe
fcompl
ljmp
cwtl
gs
or
ret
lods
push
or
mov
fldcw
fisubs
add
xchg
and
mul
arpl
pop
xchg
mov
popa
sbb
push
inc
pop
lret
in
divl
ret
xchg
insb
push
jnp
loop
xchg
jmp
repz
push
movsl
push
xchg
pushf
stc
test
and
cmpsl
mov
mov
sub
xchg
mov
mov
lods
imul
mov
fcmovnbe
cmp
jmp
gs
dec
dec
mov
push
push
dec
jp
dec
lock
out
dec
pop
mov
add
mov
fdivs
jmp
jbe
sub
fs
shl
and
movsb
xchg
xor
inc
rorl
and
cmp
aam
or
mov
and
incb
js
pop
cli
mov
dec
fimull
mov
sub
push
inc
in
sub
mov
dec
mov
addr16
fs
xchg
je
lret
mov
inc
and
sub
rorb
lahf
bound
loopne
sbb
outsl
mov
shrb
push
int3
or
adcl
mov
jns
cmp
push
xchg
sahf
mov
ficompl
mov
fdivr
fimuls
sbb
push
jmp
fisubs
sysexit
xchg
mov
cs
jmp
hlt
push
cmpsl
mov
and
and
lret
inc
xor
mov
push
aas
mov
imul
inc
mov
cwtl
imull
shl
inc
push
lods
jmp
test
lahf
sbb
dec
dec
pop
pop
int
data16
jae
jecxz
jns
pusha
lods
call
xor
cmp
dec
faddl
jne
icebp
mov
enter
xchg
mov
loopne
sbb
ret
sub
add
push
filds
lret
js
repz
fldlg2
cmp
dec
mov
add
or
icebp
stos
xor
adc
sub
icebp
dec
dec
or
dec
pop
adc
ret
inc
shl
xchg
stos
cmpsb
jbe
daa
pop
xchg
stos
mov
mov
pop
or
popf
mov
jbe
push
xor
dec
adc
jbe
cmp
pop
in
outsl
shl
shlb
repz
inc
jbe
cmp
mov
dec
andl
lock
adc
sub
insb
int
push
icebp
ret
stos
jbe
imul
repnz
sahf
or
and
jnp
xchg
sub
insb
inc
popf
and
mov
mov
jae
inc
jns
mov
mov
or
mov
cmp
adc
outsl
ret
pop
dec
or
xor
fucomip
mov
inc
icebp
push
mov
mov
jecxz
xchg
mov
orb
mov
bound
add
xchg
popf
xchg
xchg
inc
rol
gs
and
sbb
cmpl
lds
dec
sub
rclb
shll
inc
inc
inc
fiadds
or
add
repnz
mov
es
iret
lret
out
into
sbb
stos
jp
gs
push
dec
mov
mov
fisubl
out
insb
push
ret
scas
cltd
xor
cmp
nop
mov
in
pop
and
sarb
and
jp
popf
jae
cmp
hlt
xor
loop
fists
lret
addr16
dec
jmp
pusha
enter
mov
lods
ss
cld
sub
inc
or
stos
vmwrite
mov
sub
lret
push
adc
into
pop
mov
adc
xor
and
add
mov
mov
out
mov
mov
idivl
inc
sbb
shrl
pusha
in
popa
dec
inc
data16
cwtl
fistps
fs
incl
dec
lods
xchg
xchg
cmp
push
jl
cmp
cmpsl
mov
lods
sub
pop
xor
mov
lcall
clc
enter
mov
shl
jge
shl
popf
pop
int3
add
add
xor
mov
mov
subb
mov
push
xchg
das
arpl
nop
divl
jb
jae
mov
mov
repnz
mov
cmp
fldenv
adc
mov
mov
sub
sti
in
pusha
lret
lods
sbb
sbb
dec
mov
gs
jbe
pop
pop
cmpsl
popf
jae
das
mov
imul
mov
int3
cmp
call
shll
es
adc
mov
mov
push
aad
jne
or
push
xchg
les
jb
inc
fwait
cmp
jp
das
and
push
clc
mov
stc
xlat
lods
mov
push
int
xchg
and
call
push
imulb
mov
and
push
xchg
push
pop
jno
and
mov
mov
punpckhwd
sbb
leave
std
jle
jge
pushf
dec
lret
cld
addl
and
mov
xchg
xchg
push
push
jp
sbb
js
into
repnz
int
and
das
test
mov
movsb
loop
and
cmp
lds
push
sahf
mov
je
shrb
push
mov
leave
mov
dec
jge
sbb
leave
lahf
shl
insl
aam
mov
mov
add
xchg
outsb
pop
sbb
inc
jb
adc
dec
das
jns
pop
nop
or
adc
sahf
test
add
jmp
add
and
pop
in
and
out
rcrl
pop
insb
std
stos
inc
inc
in
xor
sbb
ljmp
jl
cmp
jge
notb
jns
rolb
sbb
stc
dec
cwtl
sbb
push
mov
fstpt
popf
mov
lods
jecxz
inc
sahf
mov
aad
push
inc
cltd
imul
andb
lahf
lret
ljmp
pop
loope
pop
mov
subl
mov
popa
in
in
mov
xchg
cs
lret
repz
inc
js
sub
pop
test
cmp
fisttpll
iret
cmovo
call
dec
test
add
leave
sub
out
psraw
mov
dec
jno
cltd
shrb
mov
or
xor
and
mov
push
popf
push
dec
fists
sbb
loope
or
iret
ror
mov
movsl
sub
pop
xchg
ja
mov
and
clc
jmp
and
popa
jno
cmp
mov
roll
stos
or
call
in
out
add
test
stos
mov
jnp
cmpsb
pop
inc
mov
rcrl
out
push
jl
dec
add
cltd
add
push
sub
cs
inc
cltd
xchg
push
ret
cmp
pop
movsb
mov
mov
addr16
adc
into
push
or
dec
add
jne
inc
je
lret
loop
mov
push
pop
push
rcll
into
mov
popf
clc
mov
mov
mov
add
lret
sti
jo
cwtl
jp
imul
test
adc
fisttps
insb
mov
dec
fisttps
jno
xchg
lret
sbb
push
sti
jp
or
imulb
mov
lods
sub
push
mov
dec
out
jno
mov
push
sbb
repnz
arpl
movsl
lods
jg
adc
out
in
inc
ds
andl
mulb
push
push
sahf
roll
cmp
jle
fmul
cltd
mov
pushf
lock
jmp
test
push
mov
mov
rcll
xor
nop
pop
jbe
imul
mov
xor
clc
test
sub
dec
into
mov
jecxz
push
xchg
loop
sbb
aaa
cwtl
pop
insl
aam
iret
or
nop
pop
mov
xchg
outsl
cmp
popa
out
pmullw
mov
pop
in
mov
xor
sti
push
out
mov
in
cmp
push
jb
jp
inc
rcrb
imul
notl
int3
pop
xor
bound
js
inc
adc
scas
jg
add
mov
ss
sub
shrb
movsl
xor
out
insl
jno
addr16
icebp
inc
adc
adc
data16
jmp
insl
sbb
pop
push
push
lret
stos
xchg
adc
andl
outsl
lahf
mov
cmpb
shlb
cmc
push
std
movsb
inc
mov
ja
mov
mov
dec
pop
jecxz
and
push
jmp
hlt
data16
call
push
mov
mov
jecxz
test
sarb
and
cmc
mov
aaa
ficoml
dec
inc
insb
jmp
add
and
jmp
inc
dec
outsl
inc
pop
push
mov
out
push
jmp
xchg
movsb
rorl
cmp
jbe
ret
aas
test
cmpl
dec
or
pop
mov
vmread
or
pop
popf
cmp
push
repz
ss
inc
inc
imul
cmpsb
adc
push
add
xchg
sbbb
jecxz
shll
in
orl
movsb
xorb
outsb
data16
push
int3
sbb
je
test
push
mov
dec
enter
inc
dec
xchg
jg
and
jbe
sbb
call
lcall
xor
mov
cmp
xor
sbb
fdivrs
mov
sub
les
loop
jecxz
mov
adc
in
popa
and
xor
jge
xchg
sub
adc
push
inc
or
jb
dec
xchg
inc
stos
lock
rolb
cld
ss
and
ret
and
pop
fistpl
paddb
adc
movsl
pop
or
jmp
mov
repz
dec
pop
push
push
daa
sub
pop
xor
jmp
scas
roll
fcomps
ret
mov
push
mov
in
movsl
inc
add
movsb
loope
je
cmp
in
inc
fsubl
decl
push
mov
gs
push
bound
mov
test
rorl
dec
mov
sar
imul
pop
sahf
aad
out
mov
push
lret
leave
xchg
inc
out
pop
imul
addr16
pop
mov
push
push
or
pop
push
imul
imul
cmpsl
sbb
xor
sub
jbe
scas
push
and
shrb
pop
cwtl
xor
test
mov
jp
inc
rorl
push
icebp
inc
adc
sub
pop
imul
adc
enter
xchg
imull
fs
daa
sub
sbb
test
call
push
xor
shlb
gs
push
xchg
aaa
pusha
lcall
ret
jecxz
pop
add
inc
lea
add
dec
add
and
insl
mov
inc
pop
out
aaa
push
xor
sub
push
mov
popa
lea
por
and
loop
mov
movsl
sub
mov
out
daa
fsub
sti
lock
in
les
insb
mov
dec
out
stos
cmp
jle
dec
mov
jb
outsl
push
lahf
insl
add
and
sbb
sbb
hlt
in
notl
jns
mov
imul
imul
mov
int
outsl
cmp
or
push
inc
pushf
insl
lahf
pop
je
xchg
in
cmp
sbb
je
imul
shll
pop
mov
pusha
rclb
or
dec
xor
loope
pop
mov
inc
add
jg
push
outsb
imull
std
inc
push
inc
and
jnp
fadds
mov
in
fdivp
mov
xchg
push
jo
inc
push
add
jb
sbb
sbb
mov
enter
out
lock
dec
cmp
test
adc
scas
sub
sbb
lcall
mov
push
mov
jg
lret
mov
lds
xor
aad
dec
jmp
pop
dec
mov
sbbl
adc
imul
ret
and
dec
xchg
jg
lret
dec
xchg
cmpsb
xchg
sbb
je
js
xor
icebp
lock
xor
cmpsb
sub
fcmovb
mov
call
movsb
out
or
or
pop
shl
lods
popa
or
sbb
xchg
repnz
mov
gs
out
clc
sub
test
stos
movsl
xchg
in
xor
movsb
out
pop
inc
or
scas
cmp
adc
pushf
mov
out
or
imul
daa
int
add
outsl
add
jno
in
daa
xor
sub
inc
sahf
mov
jp
stc
fimuls
xchg
or
cmp
imul
cltd
mov
mov
pop
test
lret
cmp
insb
test
and
adc
push
ror
ficompl
cmp
mov
pop
and
pop
or
or
xor
fwait
dec
pop
lahf
sbb
repz
mov
fidivs
adc
flds
sbb
pop
in
pop
adc
xchg
fs
sub
inc
or
mov
bound
xlat
in
fcoml
insb
aas
xor
mov
adc
jp
push
fdivrl
in
push
ror
mov
pop
pusha
testb
ffree
dec
push
scas
sbb
xor
push
iret
pop
call
push
push
mov
add
bound
add
mov
aaa
cmp
adc
push
and
xor
and
cwtl
es
push
arpl
xor
xor
insb
sub
ja
jnp
push
fcmovu
fists
mov
je
cmpb
test
adc
fstpl
or
aad
inc
jg
iret
lahf
pop
xchg
push
mov
fwait
mov
vunpcklpd
int3
jo
pop
pop
inc
mov
sub
aad
mov
pop
pusha
orb
jb
jo
test
sub
sub
pop
test
push
xorl
adc
bound
fidivl
stc
jg
sti
mov
adc
shl
aam
mov
lock
and
data16
pop
imul
jmp
mov
jae
adc
scas
pushf
int
fimull
repz
out
add
sbb
jle
test
mov
push
das
rcr
loop
pop
xor
jge
mov
dec
mov
fs
fistpll
inc
stc
stos
aas
xor
push
lcall
push
xorb
add
mov
cld
rorb
pop
xor
xchg
in
mov
pop
mov
mov
loop
mov
and
test
adc
cmc
icebp
xor
cs
jmp
pop
stos
adc
adc
xchg
js
arpl
into
add
sbb
adc
adc
bound
lcall
jl
lods
cmp
or
mov
outsb
dec
pop
mov
xor
xchg
je
jge
inc
mov
daa
sub
pop
cltd
inc
je
pusha
in
mov
mov
mov
jp
rorb
je
movsl
cmc
nop
out
cmpsb
jno
inc
and
jno
or
imul
mov
mov
ljmp
or
cwtl
sbb
dec
in
jge
cmp
sbb
push
fmull
lahf
je
mov
mov
hlt
lret
into
and
outsb
pop
inc
in
aad
pop
jge
sbb
insl
lcall
dec
lret
add
inc
rorl
xchg
pop
test
aas
inc
scas
cmp
nop
pop
xchg
idivl
dec
add
sbb
sub
cld
xor
xor
adc
test
repz
dec
mov
shll
adc
jecxz
push
mov
xor
mov
or
push
insl
mov
lret
adc
pusha
inc
xchg
movl
cmp
add
insl
jl
js
inc
add
pcmpgtd
enter
xor
clc
cwtl
out
scas
mov
in
cli
jmp
sub
push
mov
into
loopne
scas
xor
sbb
xchg
sub
test
cli
and
ljmp
out
or
cli
sbb
ds
insl
loop
icebp
sbb
in
insb
xchg
and
movsl
pop
test
push
outsb
data16
add
sar
fildll
or
fildl
sbb
jp
cwtl
and
gs
pop
mov
push
negl
adc
mov
sahf
mov
loopne
jle
dec
lahf
jecxz
jne
sbb
and
lcall
mov
mov
iret
xor
push
adc
lods
jne
push
subb
es
push
lock
aas
add
std
pop
xor
xchg
mov
scas
pushf
adc
das
xchg
mov
data16
xor
sti
push
mov
sbb
mov
jle
popf
in
lock
pop
cmc
jae
sti
dec
jg
clc
out
call
xchg
addl
jo
bound
xchg
mov
test
xor
add
sbbl
xchg
cmpsl
std
jg
je
mov
pop
adc
scas
out
clc
xor
sarb
mov
mov
negl
push
mov
push
cwtl
xchg
out
xchg
test
mov
stc
sub
shrl
dec
and
adc
or
pop
loopne
movsl
cmp
test
ss
lods
sub
dec
jl
lret
and
dec
aaa
sub
lods
push
addr16
jle
in
push
shr
shrb
xchg
cmpb
sti
jl
in
nop
in
mov
call
lods
xor
outsl
mov
cmpsb
pop
inc
sbb
and
pop
out
jg
shll
mov
fisttpll
lods
daa
aad
sub
mov
loop
das
aad
inc
xor
pop
out
cmpsl
push
ja
fcmovnu
sbb
rcrl
mov
mov
xor
dec
xchg
mov
insl
xchg
jg
gs
fwait
mov
add
mov
movl
ss
mov
aaa
ret
outsl
cli
lods
inc
mov
stc
jl
cltd
adc
sub
jne
in
mov
jg
fld1
adc
xor
pop
or
xor
xor
pop
inc
sbb
inc
mov
aad
jmp
sbb
sahf
pop
mov
pop
mov
add
mov
pop
xor
mov
insl
sub
movntps
sbb
in
movsb
ss
popa
ds
test
jle
jbe
lret
and
mov
mov
stos
imul
jns
inc
stc
add
popa
sbb
and
xor
mov
mull
mov
xchg
aaa
jmp
xor
jp
pushf
test
xor
in
call
jge
mov
mov
in
insb
mov
mov
xor
cli
stc
jg
pop
fs
and
stc
adc
jmp
cltd
jp
xchg
test
jecxz
cltd
int
or
outsl
mov
add
test
dec
mov
push
push
cmp
aam
sti
pushf
cmp
xchg
cs
cwtl
cmpl
movsl
sub
push
mov
out
and
dec
add
fdivr
movsb
push
es
push
mov
das
mov
or
data16
dec
sti
or
sbb
mov
addb
pop
add
fisttpl
xor
lahf
cwtl
nop
int
jmp
outsb
pop
orl
stos
ficomps
mov
xor
popa
push
jbe
outsb
add
mov
pop
mov
fsubs
stos
stos
into
sub
and
sub
imul
inc
jb
fidivrs
mov
xchg
inc
jns
jns
dec
push
jo
pop
or
sahf
icebp
sub
into
ljmp
mov
jae
ret
cmp
jo
pusha
mulb
jp
jl
add
xor
cmpsb
adc
enter
addl
sahf
and
dec
mov
pop
mov
es
jne
push
mov
stc
or
jne
stos
push
inc
inc
mov
fisttps
push
push
mov
mov
mov
icebp
repnz
or
loopne
mov
xchg
fldl
pop
cs
add
cmp
xor
pop
repz
lcall
inc
sub
test
push
mov
pop
adc
cmp
ss
int
push
cld
mov
push
jp
fneni(8087
push
pop
mov
inc
ss
outsl
cmp
cli
sbb
dec
dec
xor
lcall
mov
testb
mov
scas
pop
xchg
int
lds
sti
sbb
push
aam
jb
out
sub
or
rcrb
xchg
lahf
pop
les
faddl
push
and
sbb
into
and
sbb
js
dec
fs
idivb
cld
push
or
xor
add
mov
loop
pop
cmp
or
ret
stos
adc
data16
pop
xor
scas
gs
sub
or
movsl
js
pop
leave
cmp
mov
mov
mov
aam
xlat
mov
sarb
add
jle
pop
ror
sahf
mov
jmp
hlt
fsub
loopne
rcrl
arpl
and
sub
xchg
jno
clc
sbb
push
mov
adc
pop
mov
or
or
pop
shlb
pop
mov
test
pop
rol
mov
lahf
loope
sub
lods
jnp
adc
pop
loope
or
ret
sub
jae
jle
ljmp
out
rcll
arpl
mov
mov
pop
or
test
mov
jbe
sbb
add
aas
mov
out
dec
data16
dec
cmp
popa
sbb
push
and
mov
jecxz
xchg
scas
xchg
test
dec
cmpl
repz
lock
push
test
ss
icebp
rolb
or
sbbb
pop
sahf
push
in
fimull
jge
jecxz
xchg
insb
out
loope
xchg
push
cmp
jb
idiv
dec
xor
sarl
mov
pop
repnz
add
mov
sti
mov
fisttpll
test
lock
mov
je
adc
fdiv
addr16
dec
lds
jp
test
xchg
roll
or
pop
push
mov
mov
jbe
loop
icebp
pop
pop
sbb
fcoms
aam
into
xor
loope
xor
xchg
jl
pop
jmp
mov
and
in
dec
mov
sub
aaa
std
sarl
shll
sbb
mov
cltd
mov
sub
xchg
mov
roll
arpl
mov
cmpsb
fmulp
jae
and
mov
les
out
rcr
insl
imul
cs
pop
insb
mov
add
es
mov
mov
loopne
sarl
add
xor
clc
pop
movb
addr16
lock
inc
xchg
je
sub
inc
iret
into
repnz
repz
lcall
pusha
sbb
sub
mov
lea
mov
mov
mov
xchg
and
filds
push
mov
adc
mov
push
fildll
xchg
xor
or
cmc
std
sub
aad
mov
mov
aad
xchg
bound
movsl
dec
icebp
mov
mov
and
cmp
cmp
dec
mov
das
push
roll
cmp
mov
sbb
sbb
or
fidivs
rcll
ds
xor
mov
fnsave
fwait
push
lds
iret
ret
push
cmp
pop
push
pop
cmp
mov
add
stos
les
push
jno
cmp
cltd
fldt
gs
sub
sti
inc
ret
push
ja
or
dec
into
sbb
mov
push
pop
jnp
adc
xor
pushf
mov
fwait
out
mov
stos
in
push
mov
cmp
std
mov
and
addr16
stos
jb
dec
xor
aad
dec
or
cli
push
jbe
out
or
and
stc
mov
sarl
add
popf
and
jmp
xor
out
test
xlat
sti
shl
sub
sar
sbb
sbb
in
cltd
fidivrs
adc
adc
and
int3
mov
pop
scas
sbb
mov
jle
lahf
mov
mov
dec
push
scas
js
or
imul
push
jne
jnp
sub
fwait
movsb
push
cmpsl
int3
mov
or
pop
pop
data16
jb
or
xchg
ss
negb
cmpsl
dec
add
add
jg
sahf
pushl
xor
mov
mov
inc
shlb
in
popf
inc
mov
mov
xchg
push
enter
xor
scas
push
push
adc
ret
mov
xchg
mull
inc
lea
or
shr
je
stos
int3
push
in
dec
in
ja
pop
arpl
jge
daa
jg
or
pop
jbe
mov
das
jo
adc
sub
movsb
sahf
aas
mov
jg
loope
movl
cmpb
movsb
pop
daa
or
dec
scas
lret
mov
flds
cld
cli
pusha
xor
lret
jl
cli
push
aas
xor
dec
ja
sbb
subb
test
aad
inc
and
xchg
in
cmc
scas
fs
mov
sub
xchg
in
adc
sub
bound
cltd
add
dec
out
fcoms
movsl
mov
popa
mov
xchg
xchg
aas
shl
mov
mov
dec
xor
fisubrs
xor
fdivrl
das
ds
xlat
add
push
or
arpl
pop
mov
ret
dec
rcrb
inc
mov
clc
pop
sub
das
cmp
xchg
mov
inc
inc
sbb
in
sar
scas
push
fdivr
arpl
fimull
mov
ret
sbb
push
aaa
push
sahf
insb
cli
into
mov
xchg
call
cmpsb
pop
fiaddl
adc
jge
sub
mov
stos
mov
cltd
adc
stc
dec
jae
cmp
sub
in
je
jecxz
or
arpl
jnp
lahf
push
test
lcall
shr
fdivrl
mov
pop
pop
jl
cpuid
lahf
aas
in
scas
push
adc
add
jbe
sbb
mov
lcall
leave
jo
repnz
out
jns
call
pop
rcrb
sbb
pop
add
lods
mov
xor
cli
iret
mov
je
xchg
scas
mov
ljmp
bound
add
pop
test
inc
test
inc
and
sub
addr16
dec
js
xchg
es
aas
cmp
sbb
pmulhuw
push
dec
cmpsl
jbe
and
clc
sbb
add
adc
imul
aaa
cwtl
push
bound
push
adc
pop
mov
fistps
jecxz
incb
mov
and
fcoms
nop
sub
mov
add
out
and
inc
push
dec
mov
lea
mov
adcb
dec
out
push
out
add
out
daa
push
rolb
orb
rcr
movsb
xor
mov
lock
shrl
xor
xchg
in
cwtl
ja
sub
adc
lea
inc
and
sub
xchg
iret
in
int3
pop
lds
adc
sub
inc
dec
xor
sbb
shlb
and
pop
insb
jle
in
and
xlat
xchg
cld
sbb
fcoml
cs
adc
pop
sbb
sub
jne
or
jp
pop
cmp
cmp
int3
mov
inc
ljmp
orl
popf
adc
lret
fldcw
scas
mov
or
lret
sbb
xor
jmp
xchg
mov
xchg
sub
push
aas
pop
and
iret
subb
mov
jge
ss
adc
sub
in
add
sub
sahf
push
lret
ja
sahf
xor
fcmovnu
pop
mov
scas
popw
and
enter
hlt
cmp
mov
shr
lods
jo
ret
and
test
sbb
push
add
stos
flds
lods
lods
xchg
push
and
mov
mov
fs
or
push
mov
stc
test
lods
aad
xchg
pop
cmc
xor
pop
cmp
xor
and
lods
jbe
fwait
cmpb
pop
pop
and
or
mov
in
pop
scas
push
push
lock
mov
jae
push
in
adc
mov
ljmp
sub
sbb
aas
xlat
cmc
pushf
and
int
test
decb
jne
sbb
imul
ja
jns
mov
jns
jmp
xor
push
in
fisubrl
aas
dec
aam
inc
sahf
push
das
popf
dec
ficoms
in
sub
shlb
in
sbb
pushf
in
or
adcb
hlt
mov
cld
pop
add
add
push
lods
mov
lahf
push
jl
adc
divb
inc
ljmp
mov
sub
dec
or
jo
sbb
iret
stos
lds
jae
add
dec
fstps
scas
or
lret
and
call
mov
out
mov
aas
ret
cmc
sub
mov
sub
inc
loope
pop
xchg
push
mov
sub
and
mov
xchg
dec
insl
outsl
mov
jb
and
xchg
aaa
cld
lret
cmp
add
push
movsl
orb
dec
adc
adc
aad
xor
imul
push
push
mov
add
or
inc
nop
inc
jns
test
jae
push
or
movsl
outsb
sbb
or
out
ror
adc
xor
ss
mov
lahf
test
int3
mov
jmp
aas
dec
jne
jge
xchg
popf
mov
lods
rcl
sbb
je
mov
jecxz
xchg
mov
in
jg
iret
xchg
mov
cltd
gs
and
cmp
mov
stos
jns
pop
dec
jecxz
or
ror
push
insl
xchg
mov
jmp
or
testb
shrl
out
shll
xor
jne
data16
mov
lret
in
pop
push
sub
cmp
and
sbb
ret
xchg
addr16
in
scas
adcl
dec
inc
mov
jmp
lret
add
adc
xor
popf
iret
and
shrb
pcmpeqb
or
jo
sub
adc
outsb
pop
dec
push
mov
cmc
dec
or
mov
push
xchg
adc
push
xor
jl
sbb
mov
imul
in
pop
mov
sbb
push
int3
fxam
push
or
push
adc
or
out
cmpsb
mov
popa
adc
and
lds
jne
test
shll
xchg
fsub
loop
fcomps
out
cmc
in
jle
inc
mov
pop
add
sub
out
pop
and
test
imul
fsqrt
popf
repz
in
stos
mov
adc
out
push
mov
sbb
fadd
add
xorb
xor
xchg
pop
inc
mov
aad
push
dec
cltd
fisubs
aad
lahf
jo
push
lods
jno
loop
xlat
inc
outsb
out
aad
sbb
mov
popa
fisttpll
add
sti
mov
add
lret
push
imul
mov
jecxz
add
sbb
dec
loope
fisubrl
js
sahf
cmp
nop
arpl
dec
js
or
sbb
pop
enter
sub
xchg
test
inc
cmp
mov
pop
out
hlt
ret
mov
adc
pop
insb
imul
dec
sub
lret
rol
push
in
push
loope
mov
out
push
inc
push
lahf
xchg
sub
sbb
fwait
mov
fcmovnu
rcr
jg
fwait
repz
mov
scas
andb
fisubl
loope
ret
xchg
xor
inc
adc
xchg
xchg
ja
push
lock
sbb
or
clc
jp
ret
jo
pushf
cli
mov
and
add
xor
cmpsb
jecxz
out
pop
divb
outsl
sbb
sbb
aam
jle
insl
add
lret
jl
pop
arpl
pop
iret
in
cmp
fnsave
pop
pop
fs
mov
clc
cmp
int
lods
ss
push
xlat
movsb
cmpsl
cmpsb
out
in
cmp
jno
mov
cmp
add
mov
xor
mov
pop
add
ret
pop
sub
jae
fcmovne
fwait
lret
cmp
dec
add
fsts
xchg
xchg
sbbl
jmp
insl
cmp
in
enter
sahf
or
lret
lods
jno
mov
inc
sbbl
clc
lcall
testb
xor
test
xor
push
push
push
push
in
pop
insl
lds
fstpl
hlt
inc
je
or
jmp
mov
xor
xchg
xchg
mov
dec
divl
mov
jnp
insl
mov
test
mov
cmp
jmp
jle
push
add
mov
les
outsl
and
push
dec
scas
sbb
in
je
push
lds
into
xchg
outsl
add
sahf
jle
mov
add
sbb
test
mov
mov
test
or
cmpb
jbe
outsb
adc
int
stc
lds
sub
mov
addl
jo
jo
jo
xor
jne
ss
inc
ljmp
jmp
cmp
adc
and
mov
xor
cmp
out
push
add
pavgb
sub
adc
or
in
pop
xor
or
add
xchg
adc
repz
push
outsb
dec
addb
repnz
ss
imul
xor
out
pop
cli
push
or
jae
stos
imul
stc
out
or
pusha
inc
push
or
jp
add
xchg
xchg
cmp
cmp
jmp
sbb
push
loopne
push
sub
imul
lods
pop
mov
loop
fstpt
sbb
loope
sahf
scas
jns
pushf
dec
add
pusha
aas
rcl
xor
imul
pop
imul
mov
inc
sub
sbb
or
cmp
out
imul
aaa
clc
out
jg,pn
inc
xor
mov
xlat
xlat
into
jbe
adc
xor
sti
mov
int3
or
xchg
cmc
inc
dec
dec
out
gs
adc
jp
sbb
bound
loopne
jecxz
popf
cmp
andl
pop
jno
cwtl
repz
cmc
fimuls
aas
sub
mov
mov
icebp
mov
cmpsl
add
mov
repnz
cmc
repz
and
xor
rorl
cmp
cmp
mov
mov
mov
sub
lds
push
clc
jb
jecxz
in
cld
adc
mov
jae
insl
mov
pop
push
arpl
xchg
pop
arpl
or
xor
pop
dec
fcomps
out
pop
out
pop
dec
pop
xor
in
cmp
test
mov
dec
sub
sub
fucomip
xchg
jmp
cwtl
ja
jo
fistl
nop
sbb
push
push
cld
or
outsb
loopne
out
sub
dec
and
rorb
dec
sub
ret
jb
fucomi
cli
inc
cld
nop
out
js
insl
bound
inc
mov
pop
and
lea
cmp
sub
cmp
dec
xchg
or
push
sbb
int3
add
xchg
dec
stos
dec
popa
into
mov
push
bound
jb
inc
aas
lcall
shrl
movsl
int
rcrl
sub
mov
sti
mov
and
xor
into
sbb
and
scas
cmpl
or
out
test
xor
xchg
insb
push
into
adc
dec
out
loopne
clc
lods
ret
mov
decl
or
pop
sti
repz
pop
iret
in
add
shr
ror
mov
and
into
xchg
mov
dec
and
lret
idivl
mov
xchg
hlt
outsb
ljmp
test
xor
incb
xor
or
add
je
sbb
push
and
icebp
sbb
mov
add
mov
leave
and
rorb
out
test
aaa
pop
jl
mov
pop
aas
jb
push
out
aas
out
lds
cmp
ja
les
mov
loope
cli
outsl
out
insl
fisttps
inc
cmp
push
add
je
or
pop
data16
fbld
xchg
or
or
jp
xlat
xor
sti
js
pop
aas
leave
mov
stc
pop
sub
pop
pop
bnd
sbb
sub
mov
dec
aaa
sar
jb
mov
pop
fmuls
aam
test
jae
xchg
inc
add
lea
in
mov
test
xor
xchg
cmpsl
lock
and
jl
cmp
push
mov
jbe
int3
cmp
cmpl
ljmp
scas
stc
mov
sahf
sub
pop
adc
fs
jecxz
mov
lahf
dec
xor
push
std
cmp
add
fsubp
cld
cld
cmp
bound
push
xor
sbb
push
fwait
sub
and
imul
jmp
lods
jmp
das
int3
in
mov
mov
lret
cmp
aas
leave
pop
iret
or
inc
js
xchg
jne
cmc
shr
sbb
scas
imul
adc
push
mov
jge
inc
or
jecxz
xchg
shl
push
stos
iret
sub
inc
dec
mov
mov
or
ss
test
ljmp
das
dec
push
stos
add
cmp
in
xor
mov
pop
sub
sub
rorb
divb
mov
xchg
test
movsl
xlat
lods
stos
push
aad
mov
popf
mov
in
lock
push
pop
adc
jb
or
push
dec
xlat
xchg
pop
subb
das
and
out
xor
enter
cmp
ret
ret
push
mov
mov
sub
enter
jae
pop
pop
sub
mov
cld
dec
imul
xchg
xchg
ja
das
xchg
mov
stos
mov
dec
movsl
adc
scas
sbb
lret
imul
mov
jg
decl
or
imul
nop
push
fcmovne
push
sub
xor
fisubrs
add
mov
roll
fdivl
shll
cmp
sub
popa
clc
sub
sub
sub
lods
out
movsl
jge
je
push
jl
push
pop
in
repnz
cmp
lret
repnz
inc
stc
xchg
mov
in
xor
mov
mov
inc
push
test
cltd
fwait
imul
iret
imul
pushf
mov
dec
xor
loopne
aam
jns
xor
hlt
pusha
arpl
scas
test
shrl
push
test
dec
mov
subb
or
or
xchg
lret
pop
daa
pop
lock
ret
dec
adc
xlat
fistps
inc
bound
dec
fnstsw
xor
fisttpl
sbb
aam
or
test
sbb
pop
xchg
xor
mov
nop
jae
mov
mov
jg
out
in
dec
mov
outsl
xchg
les
fcompl
xor
adc
cmp
test
push
sbb
out
xchg
push
sti
cmp
or
sub
decb
pushf
pop
push
and
mul
and
aam
jbe
data16
mov
dec
sahf
shll
mov
dec
roll
rcrb
push
lods
sbb
and
push
mov
pushf
cltd
jo
push
jle
xor
out
or
insb
ss
shrb
repz
roll
scas
add
push
pop
dec
xor
pop
lea
sub
xchg
push
pop
jle
push
add
xchg
dec
jnp
loopne
or
cmp
cwtl
mov
icebp
pusha
pop
xor
orb
hlt
dec
push
sub
int3
xor
dec
pop
add
shr
out
scas
adc
xor
cli
xchg
idivl
cmp
xchg
cmpsb
or
popa
cwtl
mov
insl
push
adc
mov
sub
jbe
das
xchg
pop
test
pop
fnsave
mov
mov
push
loop
dec
mov
pop
inc
sbb
jle
ret
dec
add
fdivrl
adc
imul
cmp
lea
jle
mov
cmp
cmp
sbb
xchg
push
xchg
testb
rcl
test
mov
js
ljmp
in
shrl
mov
inc
mov
mov
leave
addr16
push
mov
mov
insb
or
out
jmp
xchg
out
out
lret
scas
or
in
dec
movsb
add
mov
dec
push
jge
cld
or
pushf
cmc
insl
lret
push
push
cmpsb
lods
adc
sti
sti
and
mov
xor
ret
jecxz
dec
xchg
and
ret
loopne
lahf
push
push
out
les
hlt
lret
ja
aad
ret
data16
in
mov
xor
xlat
iret
in
enter
jae
lcall
fmull
insb
enter
lahf
int3
and
fnstcw
and
cmpsb
mov
xor
leave
fdivr
push
movsb
movsb
or
test
jae
out
loopne
xor
test
aaa
js
les
ficoml
lcall
mov
adc
test
stos
scas
scas
push
push
shrl
rclb
adc
and
xchg
mov
aaa
xchg
pusha
push
add
add
fsubp
sbb
add
sbb
cld
fidivs
icebp
push
mov
cmp
sbb
std
cli
arpl
sti
or
pop
lock
je
push
inc
sbb
add
insl
xor
mov
pusha
add
test
inc
lods
or
push
xor
jecxz
fucomip
sub
sbb
das
mov
out
xor
lahf
push
xlat
icebp
lock
pop
std
les
pop
aam
sub
dec
clc
mov
mull
mov
mov
mov
mov
xchg
lock
imul
sti
iret
jno
jp
mov
mov
lock
fsubrp
push
aam
inc
pop
cmp
mov
mov
pop
dec
int3
call
icebp
sbb
mov
xchg
push
ret
jae
lock
fstpl
xchg
lcall
add
imul
mov
push
add
inc
leave
xlat
inc
mov
mov
xchg
add
lods
mov
sub
push
aad
ret
lods
fists
mov
push
je
fsin
push
cmp
add
ds
pushf
gs
in
adc
stos
cmp
sub
xchg
mov
adc
mov
sarb
call
jnp
pop
inc
pop
jp
jg
hlt
mov
pop
push
xor
jl
xor
and
add
or
jnp
leave
addr16
out
mov
cs
rcr
xor
scas
jae
mov
or
xor
inc
or
xchg
cmp
out
inc
flds
int
shr
lret
movsb
push
sbb
sbbb
dec
xchg
xor
xor
push
cmpsb
mov
jne
aas
sbb
jne
stos
es
or
mov
add
clc
lock
aas
mov
push
fnstcw
loope
lock
ds
xor
cld
mov
xchg
ret
inc
sbb
fisubrl
jle
push
sbb
pop
or
pop
fsubr
mov
pop
stc
out
and
jne
nop
mov
cli
addb
pop
icebp
test
sub
and
mov
shrl
lods
cmp
outsl
data16
lods
cmp
or
or
stos
dec
and
jo
mov
mov
movswl
mov
cmpsb
push
or
xchg
stos
mov
dec
push
clc
adc
inc
ds
cmpsb
sub
loopne
inc
decb
mov
icebp
jmp
mov
mov
fldenv
dec
ds
pushf
adcb
cmpsl
out
mov
pop
addr16
mov
inc
xchg
mov
mov
xchg
dec
call
jbe
popf
pop
push
lods
mov
dec
adc
push
jnp
pop
cmp
imul
ss
imul
push
jne
int
scas
cmc
push
push
push
daa
test
cmp
jns
stos
in
ret
lret
scas
fwait
push
mov
xchg
lret
cmp
mov
push
or
lods
aas
xor
xor
jg
push
adc
mov
pop
mov
test
orb
outsb
mov
fadd
xor
int3
push
pop
push
out
mov
mov
inc
mov
insb
fisttpl
xchg
leave
pushl
aaa
daa
lahf
add
push
pop
mov
dec
aas
inc
int3
rcrb
mov
into
push
mov
sbbl
fdivrs
imul
add
pop
mov
mov
jno
popf
ss
rcrl
cmp
shr
mov
mov
lahf
movsb
dec
imul
hlt
decb
movsl
ljmp
cmc
stos
mov
and
loopne
iret
por
jns
sbb
mov
ret
pop
xchg
lock
loop
out
ljmp
inc
jae
mull
pop
xchg
inc
rorb
cmp
push
cld
shll
imul
cmp
pop
push
sub
xor
cmp
outsb
cmp
sub
mov
imul
mov
es
cmp
outsl
lods
push
icebp
hlt
stos
pop
and
out
sub
mov
fiaddl
jmp
mov
repz
test
insb
xor
mov
jae
mov
lock
pop
imul
cld
pop
pop
outsl
dec
sub
imul
testl
inc
inc
lds
sbb
push
jbe
call
mov
and
ret
xchg
jp
sub
cmpsb
ja
push
insl
inc
jmp
dec
fs
cwtl
sub
jle
aad
clc
divl
jmp
jecxz
mov
mov
shl
xor
mov
push
dec
adc
mov
outsl
test
dec
insb
movl
add
in
or
das
and
mov
xchg
push
rcr
adc
mov
mov
xchg
xchg
mov
arpl
inc
pop
cs
cmp
fdivs
sub
push
mov
mov
ja
xorb
add
rcl
call
push
fidivrl
or
inc
test
cmp
pop
jo
in
mov
hlt
lret
dec
and
pop
pop
mov
and
cmp
cmp
fistl
mov
fld
aaa
call
inc
mov
lea
aam
jbe
lahf
ds
pop
inc
xchg
add
add
inc
aam
push
push
movsl
or
fmull
in
and
cmp
icebp
or
das
and
notl
add
adc
pop
std
inc
jp
into
popf
push
pop
shrl
ret
int3
push
test
aam
lcall
pop
cmp
nop
mov
out
shl
out
adc
ds
sbb
push
fldcw
rolb
sub
int
push
push
mov
cmp
xlat
mov
mov
mov
pop
shlb
add
or
adc
sahf
dec
js
enter
std
fdivs
ljmp
movsb
mov
je
idivl
out
aam
xchg
mov
lds
les
ljmp
add
pop
movsb
mov
out
stc
mov
mov
mov
dec
pushf
xor
popa
std
and
rclb
outsb
addb
gs
mov
mov
cld
out
test
mov
mov
jge
mov
sbbb
arpl
xorb
push
scas
xchg
lcall
insb
outsb
xchg
cmp
hlt
stos
incb
enter
ljmp
pop
adc
inc
fnsave
pop
push
pop
cmp
jbe
shlb
jl
cmp
mov
enter
mov
fsts
mov
into
jp
xchg
mov
push
imul
sahf
mov
out
mov
shrb
ret
scas
or
jl
jle
pop
adc
push
lds
dec
lods
pop
repnz
sti
movsl
mov
insl
test
aad
mulb
push
jbe
and
add
addr16
testb
push
test
mov
addr16
jl
aad
xor
loopne
movsl
fnsave
sbb
push
js
rcl
xlat
fimull
xchg
dec
adc
sbb
and
int3
pop
jo
mov
jne
dec
dec
outsb
mov
jl
cmp
prefetch
mov
push
scas
dec
pop
outsl
push
or
and
dec
rcl
call
jne
pop
sbb
dec
and
xor
jo
jne
sub
movsl
stos
lds
or
fisubs
and
lods
addb
inc
shrb
fwait
add
inc
mov
add
adc
imul
stos
jge
mov
ljmp
fsubl
sub
jb
cli
inc
and
mov
imul
sti
out
push
xchg
mov
and
and
push
out
xchg
std
xchg
xchg
mov
les
daa
pop
repz
in
nop
sub
inc
scas
mov
inc
mov
mov
mov
jb
xchg
and
loopne
adc
or
cli
pop
xor
push
les
dec
imul
imul
lahf
incl
shrl
add
hlt
inc
aad
in
add
fidivs
push
cmp
mov
sub
mov
and
int3
test
das
into
push
movsl
mov
or
addr16
dec
xor
mov
dec
sbb
enter
loopne
sub
cmp
gs
repnz
cmp
int
lret
jb
sarl
in
rorl
xchg
pop
fmul
jne
xchg
push
dec
mov
inc
mov
dec
cmp
imul
xor
and
movsl
movsl
addb
xor
push
adc
mov
xchg
pop
rolb
addr16
mov
cmc
nop
adc
imul
inc
out
cwtl
or
xor
push
xchg
imul
dec
lahf
jns
adc
roll
rcll
int
daa
daa
xor
or
and
xlat
je
inc
jne
add
sub
mov
pop
ss
xchg
pop
fldcw
jge
icebp
sbbb
pop
popf
xlat
test
sub
dec
inc
clc
sub
mov
cmp
nop
push
and
mov
pop
insb
xor
leave
push
dec
fcomps
loopne
mov
jbe
icebp
add
and
add
cmp
mov
loopne
jae
pop
fidivrs
jne
inc
jns
outsb
mov
sub
push
repz
jmp
mov
and
mov
sbbb
ss
lock
dec
xchg
jns
jno
gs
xchg
or
pop
pop
push
cmpsl
popa
fists
in
inc
outsb
and
add
aam
and
mov
sbb
in
xchg
jg
cmp
std
xorl
xchg
and
mov
scas
mov
push
popa
xor
pop
icebp
data16
js
inc
pop
push
ret
cmp
mov
sub
pop
in
jne
std
jb
inc
cmc
inc
jae
in
or
loope
imul
or
scas
cmp
ret
cmpsb
loop
outsl
jle
shl
or
shll
or
sbb
fbstp
mov
push
fdivs
imull
into
fstl
mov
test
sub
push
cs
test
inc
pop
and
mov
or
stos
mov
mov
add
call
inc
rep
pop
pop
ljmp
aad
pop
xorb
cmc
int3
lea
add
imul
and
pop
cwtl
test
pop
cmc
and
mov
sar
call
push
dec
fisttps
lods
call
gs
iret
ds
push
divl
pop
jno
or
xor
outsb
mov
jne
je
inc
cmp
outsb
adc
mov
popa
mov
push
add
scas
iret
add
push
adcl
or
lahf
adc
jns
dec
lock
dec
sbb
sti
jae
test
mov
xor
int
xlat
adc
push
mov
nop
test
cs
int3
fisttpl
push
stos
aad
es
inc
std
push
aaa
push
cmp
or
aaa
mov
test
arpl
fucomp
jmp
cmp
test
imul
push
pushf
xchg
lret
xlat
sbbb
das
jle
or
mov
sbb
inc
sarl
pop
dec
push
mov
fidivs
das
add
sbb
loope
stc
mov
das
xor
add
js
mov
mov
mov
lods
testb
leave
scas
sbb
lds
mov
decb
insl
and
repz
push
fimull
outsb
xchg
std
cmp
mov
aad
dec
cmp
shlb
es
outsb
mov
sub
in
mov
adc
adc
idiv
sbb
and
popa
sbb
mov
ds
lcall
mov
cld
into
fdiv
std
dec
iret
jp
adc
dec
jge
mov
add
mov
push
sahf
xor
test
sbb
jl
xchg
lret
and
dec
mov
lret
and
leave
adc
pop
dec
sub
jl
jb
int
test
loop
mov
ss
xchg
mov
cmp
ds
xchg
pop
fnstsw
cmp
inc
mov
inc
add
mov
mov
mov
fldcw
or
sti
sub
inc
repz
inc
cltd
mov
xchg
pop
shlb
js
in
call
cmp
sbb
stc
icebp
xchg
loope
fld
push
stos
fs
sbb
mov
daa
subb
jmp
pop
lcall
outsb
xlat
int3
or
fs
or
sahf
jl
out
adc
ja
dec
and
inc
lock
or
xchg
dec
loopne
es
les
faddl
sbb
lcall
dec
pop
fstpt
cmp
fscale
out
pop
and
lcall
cmpsl
add
shll
movsl
es
cmp
sub
lret
inc
mov
xlat
push
stc
sbb
les
notl
repnz
dec
jb
cmp
mov
in
inc
mov
push
lea
fisubl
insb
push
xchg
and
and
mov
xor
pop
out
mov
xor
adc
mov
ret
aad
movb
push
bound
push
adc
inc
mov
je
jbe
jmp
jp
inc
cmp
test
xchg
mov
xor
push
leave
or
push
mov
cld
dec
movl
mov
xorb
inc
dec
or
and
mov
mov
cmp
std
loopne
daa
enter
xchg
mov
cmp
clc
inc
lret
in
jne
xor
lret
sti
test
push
ret
lret
das
dec
push
mov
insl
lock
lahf
and
mov
hlt
popa
clc
lahf
lock
fildl
sbb
mov
mov
mov
loope
or
jg
int
push
jno
adc
xor
pop
nop
mov
in
fdivrs
call
int3
sbb
inc
cmp
inc
jae
push
inc
xchg
jl
mov
and
pop
add
imul
lea
adc
xchg
sbb
pop
and
dec
jg
je
mov
lea
imul
mov
mov
cmp
sbb
leave
out
xor
sbb
inc
push
fbstp
iret
cltd
jo
cmc
sub
and
out
fucomp
imul
xor
icebp
jae
cmp
cmp
test
sub
jns
mov
test
scas
movl
mov
mov
jmp
dec
clc
pop
or
inc
cmp
lock
mov
mov
int
mov
jg
pop
insb
movsb
sub
mov
ret
aaa
add
out
lock
lahf
sbb
popa
xchg
sub
or
insl
in
outsl
cmp
cld
fistpl
in
cmc
ss
fsub
pop
push
out
enter
xor
cmpsl
rclb
inc
jmp
inc
push
push
push
jb
jmp
mov
fwait
cmp
lahf
dec
add
mov
or
xchg
out
cmpsb
pop
jge
cmp
fdivrs
call
popf
hlt
fwait
gs
pop
push
das
inc
rcrb
pop
outsb
ret
les
adc
je
fnstcw
fmuls
pop
jns
push
aas
mov
fisubs
adc
mov
xor
gs
sub
dec
push
sbb
repnz
mov
imul
lcall
aad
jecxz
imul
aam
xlat
fdivrs
pushl
inc
mov
push
movb
xchg
push
nop
ret
mov
es
imul
fistpll
sahf
sub
idivl
addr16
aam
shll
fxtract
cld
repz
int
or
popf
mov
push
int3
pop
std
dec
xchg
xchg
int
add
out
into
pusha
je
mov
mov
cmp
xlat
icebp
inc
inc
cmp
popf
xchg
call
out
sahf
push
push
mov
outsl
mov
jno
dec
ja
adc
cmc
sbb
lret
sbb
xchg
sub
xchg
mov
sbb
cmp
mulb
test
ljmp
lret
mov
xor
mov
cmpsb
adc
gs
data16
jge
call
mov
shl
sbb
in
gs
adc
cwtl
xchg
imul
iret
dec
xchg
mov
jg
call
test
loopne
negb
add
sbb
push
mov
pop
movsl
mov
movb
sub
fldt
add
stc
sub
pop
orl
push
xor
pop
mov
sub
out
jle
ss
in
into
sahf
xchg
lock
test
loopne
sbb
or
loope
sbb
inc
rcr
fcmovu
adc
cmp
sbb
addb
dec
inc
sbb
xchg
cmp
into
push
or
sub
into
adc
add
mov
ljmp
mov
sub
out
cmp
lods
out
insb
cmp
or
jg
sbb
dec
insl
lcall
xchg
inc
cli
fsubs
xor
hlt
mov
fwait
inc
loop
imul
push
shl
mov
insb
fadd
adc
push
aad
mov
cs
and
fs
daa
rolb
push
add
xor
xor
aad
pop
repz
inc
push
bound
dec
aaa
sbb
adc
push
sbbb
daa
jp
xor
aam
loop
outsl
scas
inc
mov
in
dec
clc
sub
outsl
jne
dec
dec
cltd
sub
push
and
stos
mov
out
xchg
adc
xor
ficomps
imul
ret
xchg
imul
jmp
pop
or
gs
jae
orb
int3
arpl
stos
rolb
lock
in
adc
cmp
push
in
pop
adc
add
enter
mov
push
push
and
mov
cmc
mov
fnsave
mov
sbb
rcrb
leave
sbb
mov
scas
push
jmp
imul
xchg
popf
outsl
in
jle
lods
shrl
mov
inc
dec
jnp
shl
push
bound
push
iret
cmpsb
inc
cmp
mov
rolb
add
mov
insb
pop
mov
mov
mov
or
xor
push
jne,pt
fsubrp
lock
xor
jg
orl
ds
or
stc
adc
mov
ljmp
push
xchg
lret
je
cmp
xchg
or
cmpsl
sbb
xchg
adc
fwait
sbb
jno
popa
xchg
stc
aas
mov
xchg
add
out
adc
jae
daa
fcmovb
fwait
xchg
movsl
mov
jo
insl
clc
lcall
push
lahf
add
push
inc
shrb
pop
stos
das
xchg
or
mov
inc
jnp
scas
movsl
stc
push
test
ficomps
or
add
cwtl
add
cs
lock
ds
cltd
in
inc
aad
dec
pop
inc
xor
xor
lods
sahf
push
je
fmuls
lock
adc
imul
add
inc
divb
jl
int3
dec
dec
inc
orl
sbb
inc
mov
cmp
addb
stc
outsb
outsb
outsb
stos
notl
popf
punpckhbw
lods
mov
movsb
mull
shrl
sub
subl
daa
xchg
rcr
xor
mov
filds
mov
je
cmpsl
jl
lods
cs
and
std
cltd
mov
xchg
jle
jae
incb
lret
and
ds
jbe
pop
mov
pop
sbb
xlat
pop
ficompl
jg
pop
mov
fst
sub
ja
mov
dec
lock
pop
dec
push
lods
ror
mov
mov
fdivs
pop
ret
add
hlt
xor
inc
out
sti
les
xorl
sbb
fwait
mov
mov
lldt
xlat
sti
aaa
adc
pushl
cmp
insl
fwait
mov
mov
sti
int
jmp
jns
mov
dec
cmpsb
and
xor
aad
std
pop
push
ret
lea
fucomip
mov
or
sub
js
adc
lock
sub
sbb
arpl
loope
popa
stos
test
pop
popf
mov
int
ljmp
cmpsb
dec
rcll
jne
xor
jmp
repz
cmp
pusha
push
sub
sub
mov
out
sbb
das
mov
cld
sbb
cld
push
sti
pop
pop
stc
adc
mov
stos
aas
out
loope
xchg
cmp
adc
xor
lret
je
js
mov
aaa
lea
fcompl
subb
xor
aad
dec
xchg
sbb
imul
inc
fmul
fildll
fnstcw
jg
into
out
push
jle
inc
arpl
notb
jg
dec
xor
jae
jge
pop
cmp
stos
test
cmp
and
mov
ficomps
ficomps
inc
test
mov
test
lret
ja
aam
pushf
push
stos
daa
xchg
sub
jno
add
test
adc
imul
or
push
gs
jcxz
adc
cmp
aaa
adc
mov
subb
push
mov
pop
and
push
std
mov
sub
and
fisttpl
xor
lock
ficoml
sub
ret
and
cmpb
shlb
mov
mov
shr
ja
and
movsl
jnp
and
sahf
or
and
cmp
nop
cmp
adc
push
fdivs
cmp
jl
adc
jmp
adc
dec
jne
inc
sub
clc
push
add
js
push
xchg
call
push
rcl
adc
cli
sbb
xor
cmp
sbb
setnp
loopne
mov
test
fidivl
inc
lar
pop
jbe
or
leave
fildll
and
outsl
js
mov
mov
adc
xlat
fisttps
dec
gs
fs
add
jmp
xchg
lcall
pop
sbb
ljmp
jae
lcall
je
rcrb
dec
insb
xorl
dec
mov
or
xchg
or
mov
sbb
jecxz
inc
sbb
adc
dec
lret
inc
adc
in
cmp
into
xchg
imul
insl
je
outsl
mov
inc
mov
mov
and
vpcmpgtb
xchg
gs
sbb
pop
stc
sbb
jns
and
mov
test
xchg
fcmovb
cwtl
and
repnz
xor
movsb
ja
push
shrb
add
bound
rolb
out
dec
faddl
mov
push
dec
mov
push
xchg
mov
pop
rorl
sub
or
fsubrs
mov
rorl
or
pushf
adc
mov
cmc
push
dec
add
sar
sub
inc
push
and
nop
rorb
push
push
sub
push
cld
sbb
lock
cld
and
shll
cmc
lret
or
rorl
loop
rcrl
pop
cltd
nop
pop
inc
push
cmpsb
add
pop
ret
mov
lret
mov
lahf
xlat
jno
out
fdivr
dec
cs
lahf
es
jae
loop
jp
mov
int
xor
jae
mov
mov
insl
call
in
out
mov
adc
mov
gs
ss
cmp
lods
jne
push
jae
sbb
cmc
add
push
cmpb
push
movl
pop
dec
xchg
lea
or
add
pop
shll
in
icebp
push
mov
test
xchg
mov
xor
in
aam
xor
jmp
or
inc
das
add
and
sbb
ret
out
push
adc
push
addr16
mov
dec
mov
jle
add
sbb
je
mov
cmp
enter
fldl
insb
js
mov
movsl
dec
xchg
sahf
subb
sbb
mov
sbb
push
mov
addl
repz
int
imul
mov
dec
dec
push
mov
sti
mov
mov
inc
out
xchg
test
fidivrs
xchg
outsl
mov
cmp
inc
sub
cmp
xchg
cs
xor
push
popa
shlb
mov
arpl
or
outsl
mov
clc
les
sub
or
xchg
cmp
adc
jae
mov
jo
inc
stc
scas
call
cli
xchg
push
cli
inc
ret
fwait
ret
mov
out
js
and
xchg
scas
loope
xchg
in
adc
jo
les
sar
mov
enter
fcmove
add
xchg
inc
push
lods
cmp
call
adc
jle
mov
lahf
adc
ss
add
pop
insb
add
scas
pop
jb
lcall
rclb
pop
jg
pop
icebp
jbe
negb
jl
pop
mov
rorb
pop
cmp
xchg
jecxz
mov
pop
jle
aas
add
testb
and
repz
or
ss
lret
je
clc
jg
pop
je
dec
add
push
fcompp
sarl
or
pop
and
sbb
jo
inc
mov
sbb
repz
cmc
stos
sbb
add
mov
adc
into
scas
jge
movsl
outsl
push
xor
jp
fildl
into
dec
lahf
add
mov
mov
sti
mov
pop
shr
bound
adc
in
testl
push
mov
cmp
fdiv
xor
pop
cmpsb
shlb
bound
outsl
inc
jo
sub
popf
xchg
imul
xlat
push
and
test
into
mov
push
jne
xchg
outsb
xchg
sub
pop
xchg
jp
aas
sysenter
and
sbb
mov
aam
test
mov
adc
icebp
and
mov
mov
and
stos
pop
xlat
cmpb
pusha
andl
dec
pop
std
push
pop
mov
mov
imul
xor
dec
lcall
inc
cltd
jno
mov
fsubrp
bound
in
mov
std
mov
xchg
lea
sub
mov
xchg
popa
xchg
xchg
fs
lock
scas
xor
pop
pop
or
movsl
mov
cld
aas
lods
pusha
mov
out
mov
mov
mov
xor
and
lock
fsubl
repz
int
cmpsb
push
fldenv
lahf
adc
mov
js
adc
push
jg
mov
jl
pop
inc
das
dec
jno
or
mov
mov
pop
inc
icebp
cmpsb
cmp
enter
movsb
jne
pop
or
jne
push
je
sbb
shll
pop
jno
jle
adc
popa
fnsave
aas
mov
stos
xlat
in
out
bound
and
inc
daa
movsb
adc
clc
xor
flds
js
scas
jmp
lret
subl
test
mov
mov
fmull
xchg
xor
rcl
arpl
or
mov
scas
sub
shl
addl
ffreep
or
dec
add
push
out
mov
adc
scas
or
cld
jmp
addr16
dec
and
dec
clc
insl
jns
sbb
xchg
stos
mov
push
sbb
test
push
in
add
ret
jmp
dec
lds
adc
xchg
fistl
mov
jb
addr16
mov
xchg
ljmp
movsl
xor
out
adc
das
popa
addb
adc
aas
aam
adc
add
sti
and
and
insb
fsubrs
sbb
jb
clc
and
lea
test
lds
jge
pop
pop
pusha
xchg
les
mov
aas
fwait
addb
mov
jmp
fcoms
neg
pop
pop
lret
addl
int
jb
and
pop
xchg
icebp
repnz
mov
addr16
mov
inc
adc
jns
movsb
bound
insb
adc
and
shl
pop
push
cwtl
loop
movsb
mov
and
sahf
fwait
push
mov
jmp
daa
jge
in
filds
xor
icebp
mov
push
js
pusha
mov
xor
pop
dec
stos
xchg
adc
pop
out
out
jle
add
push
and
leave
xchg
stos
jb
cmp
cmp
nop
rep
push
dec
pop
andb
push
leave
add
divb
pop
dec
mov
imulb
lret
pop
pop
ds
insl
xlat
and
mov
hlt
leavew
cmpsl
pushf
jo
nop
push
sbb
pop
mov
sbb
cli
lcall
aas
inc
pop
dec
movsb
push
add
fwait
cltd
mov
xchg
mov
sbb
mov
xchg
stos
mulb
mov
dec
mov
cmp
pop
mov
and
mov
cmp
cli
sti
ret
daa
mov
pop
mov
jle
addr16
xchg
int
sub
lret
out
cmp
pop
in
flds
repnz
out
mov
inc
fs
push
or
das
pop
rcl
push
pop
jns
jbe
dec
repz
jecxz
adc
nop
into
dec
mov
nop
mov
pop
mov
adc
lcall
mov
loope
data16
call
clc
cmp
dec
sahf
outsb
test
inc
inc
mov
jbe
fnstsw
push
xchg
jmp
test
rorl
xor
gs
mov
push
shlb
insl
aam
pop
push
lock
outsl
push
cwtl
icebp
dec
dec
pop
push
jg
sbb
andb
fpatan
rcrl
pop
add
out
out
cli
pop
mov
lret
and
mov
sar
dec
mov
push
mov
and
fcmovb
dec
jl,pn
rol
jg
scas
mov
filds
stos
push
lods
cmp
xchg
or
aam
lea
adc
test
movsb
repz
and
or
repnz
sub
addr16
insl
testl
cmp
pop
cld
jecxz
int
clc
push
push
fwait
sar
sete
and
test
js
cli
jns
mov
dec
sub
jl
aad
pop
pop
ret
push
pop
pop
pop
js
mov
ret
mov
lahf
leave
into
xor
pop
stos
lret
arpl
jmp
ljmp
ja
lea
fcomps
addr16
pusha
dec
hlt
jmp
imul
movsl
inc
xchg
push
mov
cltd
pop
sti
add
or
sbb
ret
cmp
jge
jb
sub
push
cmc
dec
ljmp
in
std
xlat
out
out
lret
das
add
jbe,pt
adc
test
xor
push
push
arpl
call
dec
mov
pop
dec
ret
push
sub
test
ljmp
dec
ficompl
sbb
xor
das
xor
add
xchg
fwait
mov
sahf
add
push
aas
adc
sub
iret
dec
dec
lcall
mov
xor
nop
fninit
popa
mov
jp
out
push
repz
out
sub
in
andb
add
fcomps
subl
test
inc
xchg
dec
pop
call
mov
out
inc
inc
sti
aas
add
mov
addr16
dec
lcall
test
inc
inc
in
add
adc
jb
lahf
mov
incl
push
out
sbb
jmp
xchg
pusha
shr
cmp
cld
loope
jmp
cs
lcall
pusha
xchg
movsb
mov
mov
je
outsb
cli
popf
or
jecxz
movsb
repz
sub
sub
lahf
pavgw
or
andb
scas
lds
adc
inc
push
sti
orb
mov
jp
scas
js
cwtl
mov
push
aaa
cmp
sbb
jg
les
nop
xor
push
cli
pop
or
movsl
stos
add
add
dec
int3
out
in
mov
xchg
and
and
cmp
xchg
frstor
sbb
mov
mov
fsts
cmp
into
shr
mov
fs
cmpl
movsl
call
push
fcoml
xchg
call
pop
insl
cmc
dec
xchg
outsb
mov
sbb
or
loop
xchg
in
mov
and
push
fistpl
ja
or
pop
mov
or
cmpsl
aam
aam
cmp
scas
push
and
dec
cmp
mov
fistps
cmpsb
loop
out
std
in
loopne
push
clc
loop
hlt
and
mov
jnp
js
xor
lahf
jbe
das
sbbl
pop
mov
and
pop
inc
jno
dec
clc
mov
sub
int3
mov
es
xor
fisttpl
cmp
fildl
ljmp
push
mov
aad
fldcw
push
andl
or
pop
mov
or
outsb
dec
call
sub
sub
xchg
outsb
les
cmp
leave
ret
or
out
push
mov
int3
mov
sbb
fxch
jp
popa
pusha
mov
aas
cmp
pushl
jecxz
jge
add
arpl
clc
ljmp
pop
mov
cmc
std
js
or
xchg
xchg
sub
lcall
fs
gs
mov
sub
sti
jb
out
mov
aam
mov
mov
leave
sbb
sub
sbb
ja
inc
xchg
sub
sub
cli
in
add
jl
sbb
xor
pop
add
mov
xchg
cmp
sub
add
sbb
into
dec
imul
scas
mov
and
movsl
out
lea
in
test
outsl
mov
in
adc
aam
pushf
sub
and
lahf
iret
aad
outsl
ss
xor
cmp
xor
mov
adc
mov
or
rclb
lea
mov
rorb
and
scas
stos
mov
xor
repz
pop
imul
push
lahf
sub
mov
ljmp
mov
jge
xor
dec
ja
aas
mov
or
sub
je
pusha
call
stc
xchg
adc
sti
in
imul
in
dec
sti
cmp
arpl
jmp
enter
xchg
mov
push
push
or
mov
out
xor
mov
mov
and
jle
aaa
and
pushf
cmp
xchg
cmp
ret
gs
sti
out
icebp
stos
fadd
or
mov
adc
ret
adc
ds
sbb
mov
test
xchg
push
xor
mov
bound
push
jmp
movsb
mov
mov
lret
sbb
xor
dec
lods
xchg
mov
sti
out
adc
xchg
push
leave
stc
add
mov
lds
in
and
xor
inc
jo
callw
out
jge
cmp
adc
dec
es
jne
mov
mov
pushf
mov
shrl
fldl
mov
xchg
push
pop
insb
and
mov
mov
or
and
lds
imul
cmpsl
adc
xchg
repnz
mov
pop
mov
pop
int3
notl
cmp
cmc
pop
lcall
jb
add
jne
inc
ja
and
adc
inc
ljmp
insl
push
add
test
jecxz
mov
in
insb
inc
insl
les
int
insb
leave
push
mov
int3
ds
cli
movsl
add
shlb
sub
cmp
or
push
xor
push
sub
lcall
or
xchg
pusha
adc
jle
jb
lahf
popf
mov
mov
xor
loope
cmpsb
stos
dec
ds
pop
push
lods
add
add
test
movsl
or
mov
cli
fwait
sahf
adc
sahf
or
pop
or
pop
fcmove
pop
orl
push
out
mov
or
add
dec
fstl
and
gs
dec
out
lea
cmpsb
push
push
mov
scas
and
jnp
inc
dec
jge
or
ljmp
pushl
xor
sbb
lret
dec
aam
lods
nop
push
sbb
sub
test
push
mov
sub
add
mov
xor
orb
sahf
jno
pop
arpl
jp
pop
int3
adc
adc
cmp
aam
cmpsl
inc
test
xor
aas
mov
bound
in
fwait
jbe
ret
js
jge
jge
aam
cmc
in
xchg
inc
orb
or
es
xor
in
jno
in
ljmp
sahf
cmpsl
in
scas
sbb
fstl
mov
enter
jno
ret
into
and
mov
mov
sti
xor
int3
inc
adc
mov
push
pop
jbe
xchg
xchg
or
dec
frstor
cmp
insl
mov
orb
cmp
xor
imul
sbb
add
mov
jp
enter
pop
push
shlb
mov
xor
cmp
jb
das
dec
stc
and
ljmp
inc
into
outsb
jae
inc
cmp
fldenv
push
out
push
push
or
pop
das
push
jp
cld
mov
mov
test
adc
aad
xchg
mov
dec
sbb
add
aas
imul
adc
sub
pop
aaa
lods
push
decl
ret
mov
adc
daa
aas
lods
fsubl
lods
lock
jle
fldl
in
adc
popf
cmc
fsubs
rclb
lods
push
xchg
je
push
xchg
cmp
cmp
es
ret
fistpl
jg
adc
jne
sub
stc
loop
pop
ja
lret
cmpsb
jle
mov
add
sbb
mov
mov
pop
xor
call
or
jecxz
sbb
test
cmp
mov
cmc
jp
lea
mov
jb
cmp
out
push
inc
jg
out
xchg
xor
call
dec
jno
jl
adc
cwtl
cmp
mov
fildll
cmp
fistpl
jb
sbb
lods
sbb
sbb
and
push
outsb
lcall
xor
add
movsb
test
inc
push
out
test
sub
cmp
cmpsl
push
sahf
stos
ljmp
jbe
adc
pop
mov
jp
imul
jae
ficoml
add
out
lahf
shll
les
jl
xchg
push
inc
sbb
dec
mov
loopne
pop
enter
insw
pushw
ljmp
or
jmp
loop
aad
mov
mov
push
mov
rcll
cmp
int3
push
das
sbb
dec
imul
sub
or
mov
sub
pop
std
mov
cwtl
sbb
mov
inc
rcll
mov
sbb
inc
jl
inc
inc
push
inc
sar
enter
xor
sub
or
das
push
cmpsl
in
xchg
xlat
sub
cmp
leave
out
pop
mov
addr16
sahf
out
mov
stos
hlt
push
jmp
sbb
mov
nop
insb
addr16
mov
ljmp
jle
inc
and
push
sbb
jl
iret
push
sbb
jb
je
ds
out
fwait
lea
jb
inc
add
xor
mov
ffreep
test
push
sub
jmp
mov
das
insb
xor
loopne
xor
mov
push
mov
dec
xor
jb
aas
insb
pop
mov
clc
pop
sahf
pop
insl
hlt
lcall
xor
mov
fwait
test
out
mov
out
add
ficompl
inc
mov
je
inc
dec
imul
jl
xor
imul
lea
mov
sub
mov
sbb
cmpsl
in
fnstsw
fwait
inc
or
mov
aam
adc
mull
add
cwtl
push
mov
adc
inc
into
cmp
and
ss
jmp
aaa
aaa
es
mov
xlat
adc
inc
jno
aas
push
js
out
cmp
xchg
rol
mov
pop
test
cmp
sbb
adc
insb
aam
cmp
mov
cwtl
xchg
mov
inc
shll
mov
mov
jg
faddp
adc
pop
rep
mov
sti
cmp
cmpsb
mov
fs
sbb
rolb
jae
popa
inc
div
jnp
jge
and
cs
xor
leave
jno
es
jg
pop
xor
testb
adc
jg
dec
out
aas
mov
push
or
cmp
in
push
inc
fwait
ret
fildll
jns
jmp
outsl
sbbb
out
sub
lea
dec
js
dec
dec
jmp
clc
push
popl
mov
cmp
cwtl
aad
or
mov
out
push
or
or
adc
addb
leave
add
cmpsl
sub
jo
out
xor
pop
dec
into
push
jbe
or
fld
push
xlat
sub
cld
sbb
mov
inc
je
int
leave
stc
and
into
push
cmp
cmp
jnp
call
movsl
jb
iret
adc
mov
mov
cmp
out
add
mov
test
test
push
movsb
pop
add
int3
insb
js
cmpsb
movsl
outsl
xchg
mov
mov
add
outsl
pusha
mov
sub
hlt
and
inc
aad
leave
push
add
mov
outsl
dec
xchg
add
loope
push
stos
fwait
add
jbe
mov
in
scas
pop
mov
test
jle
dec
cmc
arpl
pop
aaa
dec
dec
xor
test
and
es
cmp
in
pop
adc
lods
test
add
lahf
iret
punpckhwd
int
sbb
test
sti
xor
jmp
idivb
or
nop
jbe
fcoms
mov
cmp
xchg
jb
or
sbb
xor
or
sarl
loopne
pop
mov
xor
inc
dec
pslld
sbb
lock
fcmove
push
les
xchg
jno
xchg
fildl
jne
xor
mov
mov
cli
pop
xor
fs
and
cmp
imul
add
outsb
mov
arpl
push
pop
shll
mov
add
mov
test
loope
push
mov
cld
lret
or
adc
inc
in
or
cld
inc
mov
loopne
push
dec
jge
sbb
pop
stc
pop
in
enter
jnp
sbb
int3
loope
add
decl
pop
add
mov
fstl
sub
decl
adc
adc
inc
cmp
insl
mov
adc
jge
pop
xchg
dec
into
aam
dec
sub
loopne
mov
test
sbb
dec
testb
int
pushf
idivb
or
push
out
int
xor
ja
adc
mov
jo
in
pop
test
xchg
adc
adc
adc
add
icebp
or
mov
pop
push
mov
outsb
imul
add
icebp
outsb
fdivl
daa
xor
add
out
call
ja
xor
ljmp
movsl
ret
add
or
insb
pop
ljmp
aam
push
mov
cmpl
or
sbb
js
mov
lods
or
mov
mov
mov
repnz
dec
aad
arpl
clc
fucomp
jns
inc
adc
pop
pop
mov
sub
adc
outsl
cmp
push
or
jae
addr16
xchg
shl
sub
add
iret
xor
movsb
sub
clc
loop
pop
add
push
sbb
push
inc
cmp
movsb
mov
popf
xlat
push
push
adc
xor
mov
rcl
and
into
je
das
mov
mov
cmp
cmp
mov
testl
rorb
pushf
std
inc
bound
add
push
aam
sti
jne
lods
xchg
scas
fs
cmpsb
jp
popa
outsb
sbb
repnz
fstpl
add
and
mov
mov
sbb
jl
test
push
sbb
lret
aaa
or
clc
mov
xor
xlat
rcll
push
and
xchg
xor
mov
or
cmp
dec
cmc
lret
jb
cs
je
add
or
out
xchg
cmpsb
push
lret
cmc
insb
in
mov
loope
lahf
xchg
insb
add
push
jge
fwait
lods
push
pop
mov
icebp
and
rorl
sbb
pop
lods
mov
shlb
mov
or
lods
repnz
lret
cmc
xor
cmp
pop
sub
jnp
idiv
or
je
ret
lds
in
adc
in
repnz
in
sahf
jle
push
test
jmp
xor
lret
mov
cmp
mov
enter
jle
push
iret
stc
adc
sub
sti
pop
nop
sbb
jno
bnd
add
pushf
fmulp
mov
push
inc
repz
sbb
cmpsl
fldl
imul
mov
in
insb
imulb
add
cltd
adc
dec
lcall
inc
out
loope
pop
lret
rolb
cmp
mov
nop
lcall
lret
js
mov
mov
lods
aas
jl
dec
pop
push
jnp
addr16
push
push
movl
push
dec
pop
xchg
enter
mov
repnz
push
fists
mov
mov
out
xor
fwait
jl
lea
call
pop
pop
mov
xor
mov
push
cmp
cmp
inc
sub
inc
xor
dec
fdivs
or
frstor
push
test
lcall
and
movsb
jle
mov
orb
add
in
jae,pn
xchg
jl
jmp
or
outsl
pop
icebp
or
outsb
icebp
xlat
pop
pop
jnp
fldl
imul
mov
xchg
rcrl
mov
shll
cmpsl
test
imul
mov
ret
jecxz
jmp
push
subl
or
lret
int
sub
xor
ret
nop
or
bound
adc
gs
fwait
insb
mov
int3
icebp
jecxz
fsubrl
pop
sar
mov
inc
jge
test
jmp
sub
lods
adc
xor
mov
lahf
mov
adc
push
xor
rolb
pushf
pop
xchg
cwtl
bound
mov
mov
xchg
sbb
xchg
adcb
rcr
push
jmp
movl
push
mov
jnp
shlb
mov
cli
push
mov
push
xor
imul
aaa
dec
jmp
add
stc
addb
rclb
enter
dec
mov
xor
xchg
inc
mov
mov
in
and
popa
mov
sbb
out
out
xchg
xor
add
jecxz
add
js
push
lret
cmp
mov
adc
sub
xor
xchg
push
aas
jl
lods
stos
adc
push
push
dec
xlat
daa
ja
fstpl
dec
in
fsts
test
inc
or
shll
cmc
adc
pop
std
stos
sarb
xchg
pop
subl
jno
cwtl
filds
loop,pt
xor
push
out
mov
xor
cwtl
das
outsb
jns
dec
rorl
subb
and
test
push
movsb
cmpsl
sub
cmpb
sub
lods
cmpsb
ret
test
jnp
dec
xor
xor
loopne
xor
add
sub
test
out
push
dec
cmp
loopne
xor
dec
sbb
add
push
jnp
jecxz
stos
or
popa
sub
cmp
dec
pop
adc
movsl
in
cli
xchg
sub
adc
jns
jne
lcall
inc
nop
pop
cwtl
jb
psrlq
push
imul
sbb
xlat
add
addl
lock
outsb
push
jmp
pop
fidivl
push
lret
fidivrl
lock
jbe
aaa
bound
nop
dec
jge
adc
mov
dec
repz
cltd
out
adc
or
push
cli
inc
inc
jnp
inc
jl
push
mov
xchg
xor
sahf
inc
lret
test
psubq
push
ds
mov
lcall
pop
xchg
mov
pop
repnz
cs
out
push
mov
xchg
test
cwtl
sub
scas
jo
cwtl
lds
mov
dec
fisubrs
dec
test
lods
and
xchg
add
cmp
pop
lods
sbb
lods
ss
ret
and
mov
or
pop
mov
mov
inc
mov
mov
shl
pop
mov
adc
sti
mov
out
sub
mov
imul
test
and
jecxz
lods
mov
movsl
test
and
test
neg
push
pop
in
dec
jle
push
call
int
je
jno
mov
cmc
jge
imul
inc
jl
dec
lret
sbbl
les
lea
adc
scas
orb
xor
jb
incb
dec
push
mov
rolb
aaa
pop
lahf
and
push
out
jb
loopne
dec
dec
loopne
xchg
push
cmpsl
push
mov
cld
in
pop
frstor
ds
ja
bnd
dec
or
mov
cltd
cmp
mov
push
mov
mov
push
cmp
push
daa
push
or
out
adc
xor
sub
cmp
shll
aas
sbb
repz
scas
and
js
imul
mov
sbb
xchg
lahf
mov
jb
inc
push
jno
shrb
jmp
div
pushf
or
je
pop
or
rcr
fnsave
and
stos
prefetch
or
add
in
add
jmp
gs
adc
icebp
out
xchg
xor
adc
ret
popf
sub
pop
imul
shlb
mov
mov
pop
mov
cmp
aam
movsb
lock
cmp
dec
aad
cmc
repz
ss
movl
mov
aad
dec
sbb
rcrl
cmp
mov
and
fldt
sbb
jmp
aad
xchg
stos
nop
xchg
fidivrl
mov
rorl
inc
into
das
fwait
call
inc
inc
cmp
lock
incb
sbb
cltd
and
sub
pop
lahf
mov
shlb
cmc
mov
icebp
mov
lcall
loop
out
daa
loopne
mov
scas
lods
lret
adc
out
pop
fdivs
das
daa
mov
nop
cmp
ror
lcall
adc
sbb
out
pop
cltd
cmc
sub
cmp
mov
hlt
add
mov
movsl
add
pop
xor
ret
in
pop
faddl
inc
mov
inc
bound
inc
cmc
int
xorl
cmp
mov
aas
and
loop,pn
cmp
pop
rcr
shr
jmp
dec
jl
push
fnstcw
call
mov
jp
mov
sub
push
cmp
nop
sub
jae
insb
out
cld
lcall
push
out
imul
fldenv
jp
push
add
in
jae
in
sbb
popa
sbb
adc
mov
add
neg
shll
bound
jae
mov
loop
ud1
xchg
mov
lahf
out
adc
arpl
and
and
addr16
xor
loope
scas
aad
add
adc
data16
mov
js
iret
sbb
je
lcall
mov
dec
sbb
lods
pop
fnop
shll
stos
mov
outsb
and
les
pop
xchg
mov
mov
add
std
and
push
cmp
hlt
ret
mov
pop
pop
pop
sbb
add
cs
add
mov
iret
lret
stc
addb
dec
bound
cmp
scas
mov
rcrb
mov
inc
sti
gs
jp
fildl
sti
insb
adc
and
xchg
int
dec
dec
xor
cmpsl
and
xor
xor
jo
js
test
push
inc
xor
sub
dec
es
xchg
repz
adc
lds
dec
and
or
in
add
aas
sbb
out
sub
sbb
xchg
cmp
jle
ds
mov
outsl
dec
insb
xchg
mov
std
popf
sub
jge
push
daa
adc
adcb
loop
adc
test
mov
xchg
cmp
cwtl
push
addr16
lods
scas
or
inc
shr
sti
test
or
pxor
jb
or
sub
aad
nop
stc
lea
addr16
sub
adc
pop
mov
fcomps
ret
jl
testb
addl
sar
sti
popf
mov
sbb
ljmp
shlb
cmpb
cmp
outsl
out
loopne
jle
dec
das
inc
in
mov
js
decl
jmp
push
inc
js
cmpl
jl
and
adc
add
sbb
xchg
shll
pop
fisubrs
push
jecxz
and
mov
and
dec
pop
xchg
ds
mov
jge
ret
mov
xchg
mov
xor
adc
jno
lcall
cmpsl
sti
adc
cmp
into
out
negb
add
adc
fs
push
mov
fst
js
inc
mov
mov
pop
cltd
int3
cmc
cmc
cwtl
cmp
idivb
pop
push
decb
jae
bound
insb
mov
xchg
add
orb
insb
or
xchg
in
sbb
lods
mov
fimull
mov
ret
add
push
push
mov
adc
fdivs
mov
mov
pop
notb
cmp
stos
int3
imul
dec
mov
scas
jns
push
icebp
dec
lahf
shlb
daa
xchg
add
cli
or
sub
xchg
push
cld
sub
push
jp
call
sub
mov
dec
ds
lret
sub
test
cmp
mov
mov
enter
add
xor
movsl
cld
subb
or
clc
lret
lods
inc
les
into
jo
sbb
mov
add
dec
cmpsl
lret
mov
js
popa
cmp
mov
divl
push
jbe
in
repz
ret
adc
xlat
data16
jge
bound
xchg
pop
insl
lods
xchg
ljmp
and
push
popa
in
mov
fstpl
xchg
cmc
imul
daa
inc
aad
and
or
mov
xchg
repz
outsl
dec
notb
addr16
fadd
fidivl
sub
insl
in
adc
mov
pushf
xor
dec
inc
dec
js
adc
inc
xchg
sbb
mov
adc
dec
pop
fdivrl
movsl
fnstsw
adc
xchg
xor
cmp
mov
pushf
mov
sub
inc
mov
ret
inc
dec
add
outsb
fcompl
add
popa
mov
pop
test
pop
imul
jp
jo
sahf
and
dec
lea
push
fdivs
test
inc
stos
jp
xchg
mov
mov
movsl
inc
jo
clc
test
mov
lahf
ror
mov
movsl
lea
in
or
mov
add
mov
jmp
sbb
mov
inc
sub
adc
icebp
jmp
cmp
into
pop
movsl
inc
inc
outsl
xchg
jb
out
and
or
jl
xchg
mov
repnz
mov
and
mov
mov
repz
jp
arpl
loope
add
not
inc
shrb
ljmp
pop
cmp
xor
sbb
pop
in
push
pusha
loopne
adc
scas
fmul
call
test
inc
cmc
mov
xchg
mov
cmp
jge
mov
xchg
mov
adc
push
push
or
hlt
jl
push
mov
out
jmp
push
sti
xor
inc
imul
dec
flds
adc
out
data16
pop
fwait
adc
cld
xchg
mov
dec
sub
adc
jo
test
pop
or
add
adc
mov
mov
sahf
outsb
sbb
inc
or
dec
xlat
call
sub
pop
pop
iret
mov
scas
ffree
xlat
shlb
xchg
jl
cmpsb
pop
js
xor
stos
adc
jmp
sbb
mov
les
cmp
shrb
xchg
sar
out
outsl
xlat
jg
scas
sub
movsb
daa
inc
dec
fldt
inc
adc
imul
test
fcmovu
divb
enter
push
push
daa
inc
enter
mov
mov
repnz
mov
data16
test
jge
and
xchg
push
aad
sbb
mov
insl
mov
mov
les
push
or
lret
in
mov
adc
in
stc
mull
pop
ja
push
pop
jae
cmpsb
test
or
pop
aas
ja
call
and
jmp
jp
je
cmp
js
mov
xchg
int
mov
push
xchg
pmulhw
test
push
imul
push
xor
out
push
nop
sbb
pop
dec
mov
jne
sti
push
and
jg
mov
adcb
xor
fwait
stc
call
mov
das
sahf
mov
test
jmp
jne
fcompl
lret
std
lret
enter
jmp
out
sbb
pop
adc
je
fdivrl
mov
das
jle
outsl
adc
mov
mov
and
test
push
fwait
in
fcmovne
outsl
outsb
jg
mov
movsl
lock
pop
movsl
pop
outsb
insb
loopne
sub
sub
add
dec
cmp
dec
call
lods
mov
loope
cmpsl
sub
push
adc
fcmovu
pop
push
ljmp
lcall
sete
shl
out
test
inc
mov
xchg
pop
aad
xchg
xor
xor
add
inc
add
or
dec
jb
sarl
and
adc
dec
cs
gs
push
or
ss
rorb
jecxz
push
out
sbb
inc
mov
std
out
cmp
mov
cmp
mov
outsb
jmp
stc
pop
adc
add
add
or
fmulp
sbb
xor
mov
push
mov
lea
xchg
enter
loopne
pop
adc
shll
mov
mov
dec
enter
imul
lea
dec
clc
xor
pop
daa
in
lds
cmp
push
xchg
jmp
add
call
gs
cmp
test
sub
xchg
push
sbb
mov
cmp
insl
and
js
fwait
mov
out
adc
mov
adc
test
inc
jo
dec
add
dec
imul
add
shlb
dec
nop
push
sbb
out
int3
mov
dec
mov
movsl
xchg
shll
mov
flds
fsts
and
pop
mov
mov
xor
jg
jbe
cld
adc
xlat
popf
enter
or
mov
andl
loopne
cmpsb
and
pop
mov
adc
jne
fsubrs
dec
sbb
mov
mov
insb
push
in
push
adcl
out
xchg
or
mov
and
lret
and
xchg
mov
or
cmp
inc
pop
out
jne
popf
mov
dec
inc
fs
stos
mov
mov
shlb
pop
or
insl
xor
jmp
adc
hlt
jmp
fcomps
fadds
fildll
push
push
fidivl
aad
mov
add
fs
sbb
dec
add
mov
out
xchg
xchg
xor
sub
cmp
popf
rcrl
or
push
imul
lret
ret
inc
testl
inc
push
mov
add
add
ja
addr16
push
scas
and
push
push
sub
lds
inc
mov
mov
or
adcl
cld
cli
cmpsl
push
aaa
or
sbb
adc
negl
jno
sti
dec
cmp
cli
mov
loope
mov
mov
inc
mov
inc
xchg
shlb
fidivs
pop
ds
cmp
inc
mov
ficoml
or
mov
sbb
imul
cmp
daa
push
jnp
and
mov
test
loopne
pushf
fucom
add
lahf
pop
cmp
mov
and
iret
into
mov
and
cs
jae
test
inc
sub
xor
push
mov
dec
mov
scas
sbb
out
jmp
pusha
inc
mov
push
test
xor
mov
repz
push
adc
inc
lds
adc
mov
mov
cli
jg
fwait
or
push
push
xchg
xchg
pop
pushf
loop
fnstcw
in
pop
push
retw
adc
and
push
cmc
fiadds
fcmovnb
or
leave
cli
or
and
movsl
dec
xchg
scas
repz
push
pop
mov
dec
inc
jbe
sub
cld
mov
jle
push
push
sbb
fs
cli
ret
in
mov
jmp
stc
mov
mov
std
push
lods
lock
sbb
dec
xor
inc
push
stc
push
lds
pop
add
cltd
jge
arpl
pop
bound
les
inc
enter
add
imul
imul
ror
xor
or
jnp
aad
repz
jmp
mov
sub
repnz
mov
push
aad
xchg
ret
dec
jg
adc
jmp
lea
xchg
mov
xchg
add
sub
xchg
cmpsb
mov
jb
jne
sahf
ret
loopne
ret
sub
jne
dec
mov
gs
js
mov
sbb
fildll
addr16
pop
shrl
mov
nop
bound
cmp
mov
test
push
addr16
js
shll
mov
sub
push
push
jno
jae
mov
or
dec
in
push
stos
stos
lret
jmp
mov
movaps
xor
jnp
adc
sub
std
mov
sbb
clc
in
out
idiv
jecxz
adc
pop
mov
ja
mov
lock
cmp
outsl
pop
mov
jg
out
jb
or
cmc
inc
inc
or
mov
sbb
insl
cs
adc
ret
incl
mov
push
movsl
test
xor
cmpl
mov
mov
xchg
pop
mov
mov
pusha
sbb
pop
pop
or
loopne
scas
lret
sbb
pop
test
lret
fwait
mov
jmp
in
repz
mov
xchg
fildl
popa
jns
test
mov
icebp
and
nop
lds
ljmp
push
loope
mov
fwait
mov
adc
xchg
shll
out
outsl
mov
xchg
mov
lds
mov
sbb
loopne
cmpsb
mov
movsl
dec
lret
mov
pusha
test
push
xor
clc
lret
mov
pop
mov
lcall
imul
or
sbb
sbb
int
clc
mov
in
push
iret
insl
adc
adc
xlat
out
add
mov
sbb
lret
sbb
sub
sbb
xor
push
jbe
fwait
adc
push
cltd
ljmp
aaa
pushf
cs
cmp
pushf
cmp
fnstcw
fdiv
call
sahf
pop
mov
cltd
idivb
pop
sti
xchg
sarb
scas
aam
jb
xchg
or
or
shll
mov
cmp
out
jnp
xchg
int3
icebp
fdivrp
mov
ljmp
leave
cmp
sbb
adc
or
in
fnstsw
rcr
and
fcmovnu
add
std
add
lods
aas
lahf
jb
push
and
ja
sub
lds
aad
rcl
cmpsb
andb
cmp
insl
xchg
mov
push
insl
jo
push
pushl
mov
addl
sub
repnz
cmpb
adc
pop
push
push
cmpsl
mov
rcll
xchg
pop
push
push
lds
gs
ds
or
xchg
pop
sub
mov
or
inc
sbb
inc
and
sbb
aad
xchg
fisttpll
cmp
xchg
stos
jnp
jbe
xor
pop
cmpsb
lods
mov
loop
les
push
jb
mov
inc
push
jge
add
xorl
rep
int3
test
loope
and
pushf
aad
scas
daa
inc
test
pop
push
insl
xor
jbe
sub
arpl
in
out
cmc
cmpsb
arpl
test
mov
into
pop
mov
add
fstpt
lods
xor
fs
push
out
loop
push
iret
ss
rol
dec
in
rcll
sbb
cwtl
mov
into
cmp
outsl
add
or
lds
ret
cs
ds
mov
inc
sarb
add
iret
movsl
movsl
mov
je
sub
das
or
jne
lcall
adc
inc
inc
jbe
fmull
fnsave
hlt
mov
inc
cmp
aas
js
or
cli
sbb
les
es
pusha
scas
jne
iret
int3
das
ja
pop
rolb
es
jns
pop
inc
push
xor
sub
xchg
push
xchg
mov
push
fcmovbe
or
mov
scas
cmpl
jae
sahf
inc
lret
jmp
mulb
imul
sbb
xor
dec
js
push
push
dec
inc
mov
and
ret
push
add
popf
pusha
push
mov
int
cmp
xchg
mov
lret
xlat
hlt
sub
jp
andb
push
rclb
xor
in
mov
xchg
push
sbb
mov
or
in
mov
cltd
mov
insl
fbld
jae
xchg
in
xchg
mov
rcl
adc
ja
push
mov
sbb
leave
inc
fwait
sahf
sub
cmp
pop
push
cmp
push
pushf
jp
daa
loope
or
sub
and
insl
test
and
mov
std
xor
dec
xchg
pop
push
out
pop
pop
pop
std
mov
lret
aas
in
aaa
loop
lahf
call
pop
jg
lret
lahf
push
jae
cmc
mov
aas
xchg
fsubr
mov
call
rcl
adc
nop
inc
cltd
mov
dec
inc
or
adc
into
mov
jg
jae
dec
inc
mov
repnz
data16
fistps
xlat
xchg
std
in
push
aad
pop
sbb
test
push
and
shl
mov
sbb
imul
inc
shll
jmp
test
push
adc
pop
test
jnp
test
inc
sub
xchg
cmpsl
xchg
fcmovnbe
or
lods
sub
add
cmp
xor
push
clc
lods
mov
cmp
scas
pop
cmpsb
insb
adcl
scas
jmp
rorb
insb
sbbb
inc
lds
cmp
mov
mov
dec
scas
std
jbe
test
imul
push
int
repnz
mov
repnz
pop
cmp
imul
pop
and
xchg
stos
ljmp
sti
xchg
pop
dec
enter
push
test
outsl
lock
out
and
lret
xchg
dec
iret
daa
incb
es
mov
movsl
lcall
mov
mov
push
iret
push
je
or
mov
scas
fisubrs
sub
jns
mov
and
cmp
xlat
das
xchg
insl
inc
mov
sub
mov
mov
lea
cs
int3
ljmp
mov
add
dec
idivl
xchg
dec
sub
int3
cmp
push
mov
test
cli
decl
outsb
sarl
jle
dec
and
xchg
lds
adc
and
xor
arpl
and
je
popa
inc
test
add
mov
mov
mov
pop
aas
sbb
add
cmp
push
lods
test
ljmp
out
lcall
int3
xchg
and
hlt
sub
jnp
xlat
mov
lds
test
xchg
add
mov
jo
mov
int3
cli
add
fwait
in
popa
xchg
cmp
inc
cmp
push
movsb
cmp
xorl
enter
jne
or
sbb
mov
xchg
jb
add
and
subb
filds
add
cli
rcll
and
pop
test
in
imul
loope
dec
loope
jle
mov
jne
js
sub
hlt
inc
aad
xchg
jae
movsb
arpl
or
scas
mov
xor
repnz
push
mov
insb
mov
dec
or
mov
xor
fldenv
les
rcrl
cld
sbb
lods
test
add
xchg
repnz
int
mov
pop
jb
sti
lahf
jmp
add
mov
je
mov
cmp
push
and
pop
jmp
xchg
xlat
push
xchg
test
push
add
add
cmp
xlat
dec
sbb
cmp
insl
jle
imul
xor
xorl
stc
add
aam
lds
push
inc
cmpsb
inc
pop
cmp
and
push
dec
jecxz
cmp
pop
mov
xchg
and
or
pop
sub
dec
xchg
shl
adc
add
rcrl
repz
adc
imul
cmpsb
dec
xlat
xor
je
xlat
inc
movsl
or
or
add
pop
test
bound
add
mov
and
test
test
lds
mov
in
pushl
sahf
or
scas
sub
dec
cmp
js
cmpsb
outsb
js
inc
pop
ret
enter
jae
fwait
or
pop
outsb
push
and
stc
mov
out
outsb
xor
rorb
xchg
aaa
pop
sbb
jle
lahf
mov
inc
jae
lret
adc
stos
lock
lds
mov
hlt
or
dec
xor
push
jnp
sub
cld
ja
add
mov
mov
sub
inc
sbb
inc
sub
xor
dec
sub
enter
shrl
ja
clc
add
dec
test
cli
popf
pop
inc
aas
ficoms
test
jg
push
push
sub
inc
pusha
test
mov
mov
jg
ljmp
pushf
dec
into
adc
out
fcmovnu
mov
lods
push
sub
mov
cltd
rclb
mov
add
cmp
repz
daa
aas
pushf
out
pop
mov
loopne
xchg
push
addb
pushf
test
fstl
mov
or
clc
mov
cmpsb
ja
repz
mov
cli
fimuls
add
xor
faddl
or
movsl
inc
sbb
xchg
xor
lea
pop
mov
push
int3
ret
or
mov
fwait
aad
lods
push
sbb
mov
xchg
cmpsl
add
push
mov
fcmovu
out
sti
jnp
in
ror
subb
adc
imul
or
cld
mov
mov
mov
xor
sbb
jb
jl
aas
jge
fwait
mov
push
out
mov
jae
repz
jl
inc
fdivs
stc
fistpl
sbb
push
bound
and
in
mov
imul
mov
push
and
push
movsb
stc
jo
shrb
add
mov
cmpsb
test
dec
mov
adc
lahf
sub
aaa
inc
movsl
xchg
cmpsb
xor
add
sbbb
xor
movsl
pop
push
push
outsl
shlb
push
js
js
mov
ret
gs
repz
xor
and
in
inc
cmp
pop
mov
push
jl
mov
push
mov
fchs
insl
sbb
jbe
jb
lock
and
les
sub
repnz
push
add
pop
jg
inc
inc
out
js
inc
test
es
dec
cmp
xchg
insb
adc
pop
add
or
adc
cmc
es
insl
push
pop
inc
xchg
mov
jmp
push
ds
das
lret
test
pushf
in
cmp
rorl
dec
jge
mov
subl
iret
or
inc
mov
jle
sub
loop
inc
cmpsl
mov
iret
pop
mov
sub
pushf
mov
outsb
popf
xlat
add
fimull
cltd
loop
iret
jb
stos
jmp
out
push
sub
and
mov
and
sbb
xor
dec
push
mov
pop
arpl
xor
pop
mov
dec
push
fs
leave
jne
outsl
mov
aas
jns
in
pop
mov
xchg
int3
pop
sbb
sbbl
push
push
push
push
addr16
pusha
enter
mov
sti
pusha
fnstcw
xchg
fcoms
testl
mov
sbbl
icebp
xlat
mov
adc
negb
scas
inc
pop
or
xchg
jne
push
outsb
pusha
xor
inc
push
scas
das
jge
xchg
jne
roll
cld
shl
pop
loope
cmp
xor
xchg
ret
jnp
test
test
xchg
adc
loope
lret
rcll
push
mov
mov
push
sti
xor
jmp
jmp
xor
mov
and
repz
mov
cltd
or
fwait
jns
or
sbb
sbb
dec
out
cmp
loope
or
xchg
movsl
pop
cltd
dec
fwait
cmpsb
sbbl
mov
lods
xchg
jbe
ret
mov
xor
lods
cmp
je
dec
mov
xchg
or
and
push
pop
out
fldenv
adc
aam
mov
adcb
clc
pushf
mov
jl
jle
lock
lods
hlt
xlat
xchg
and
popf
leave
mov
mov
nop
pop
call
add
int
dec
aaa
mov
sahf
dec
cmp
or
push
lahf
dec
shrb
mov
jnp
xor
jl
mov
xor
jp
push
mov
sub
aam
lcall
jb
or
sub
lods
sti
jecxz
cmpsl
pop
fcoms
jecxz
movsl
lds
fstpt
ljmp
cmp
enter
loop
enter
xor
out
cltd
jno
or
sbb
xchg
mov
outsb
ja
push
push
data16
js
imul
daa
jbe
lea
mov
loopne
cmpb
cld
and
jecxz
data16
rorb
push
cld
or
and
xor
or
rolb
fcoms
pminsw
jnp
push
and
sbb
insb
lea
andb
outsl
sub
add
scas
sub
jg
sbb
pop
jle
dec
out
mov
aaa
call
es
or
add
mov
jno
xor
jae
repnz
cmpsl
cmp
push
mov
jns
cmp
scas
mov
and
mov
hlt
fisubrl
jl
sub
push
sti
fnstenv
ds
push
fdivl
jne
add
sbb
cmp
in
mov
xchg
push
repnz
push
fldcw
xchg
popf
outsb
out
rorb
and
push
jecxz
movsl
scas
lret
setb
jmp
sbb
push
mov
fisubs
daa
hlt
push
jno
rcrl
icebp
pop
push
mov
and
dec
pop
cld
push
lods
daa
dec
aas
in
push
or
xchg
add
adc
enter
cmpsl
orl
cwtl
out
ljmp
add
inc
popf
pop
xchg
pushf
cmpsb
ret
imul
add
ja
lcall
movsb
sbb
jle
test
pop
nop
and
data16
cmp
in
pop
and
push
lods
clc
cmp
aam
movsl
movsb
outsb
mov
stos
add
jb
add
adc
imul
xchg
sti
mov
ficompl
mov
subb
pop
rclb
and
pop
xor
push
or
fmul
aam
xchg
mov
xlat
xchg
fs
push
cli
inc
push
stos
or
jle
cmc
push
add
add
xor
inc
fs
xor
rcll
mov
jb
dec
mov
cltd
cmp
push
pushf
mov
mov
or
ds
sub
pop
loope
mov
mov
cmpsb
push
andl
ljmp
jecxz
jnp
mov
jae
das
push
call
cmp
ja
pop
xor
sarb
jg
shr
and
cmp
ljmp
in
mov
and
pushf
pop
mov
std
jecxz
adc
push
xchg
or
cs
aaa
or
mov
lds
push
dec
mov
adc
leave
mov
insb
and
and
dec
out
cs
xchg
mov
insl
mov
inc
push
push
movsl
adc
cmp
andb
cmp
push
pop
loope
ret
and
jecxz
pushf
iret
iret
dec
pushl
outsb
lds
test
cmpsl
xor
ret
out
call
testb
gs
loopne
mov
sub
aas
enter
pop
das
mov
inc
cmpsl
or
idivb
xor
pop
je
gs
sbbl
dec
or
dec
ret
push
lret
mov
add
fisubs
dec
sahf
std
js
insl
sub
push
imul
jo
cltd
insb
push
lock
fs
mov
xchg
pop
dec
subb
hlt
push
jae
mov
mov
cmp
and
scas
or
jmp
loopne
add
test
daa
lret
icebp
aad
sub
pop
incl
lods
cs
mov
sub
aas
sub
mov
inc
clc
inc
mov
mov
pop
movsb
enter
or
xlat
fs
out
imul
repz
inc
popa
aam
test
inc
jg
shrl
lahf
or
fsubl
addl
std
popa
insl
les
add
jge
jmp
shll
sahf
inc
pop
push
fdivrp
cwtl
push
dec
rcr
push
popf
leave
insl
cld
cmc
mov
pop
loope
mov
dec
icebp
mov
sbb
xchg
ljmp
je
shll
sub
jae
xor
bound
pop
push
mov
js
pop
cmp
xchg
dec
ja
jo
clc
into
lea
test
and
sub
mov
mov
fcomps
mov
pop
push
insb
clc
xchg
ss
push
movsb
mov
xlat
push
lcall
pop
mov
inc
jne
lock
jl
dec
lods
mov
or
cmp
cmp
jne
andl
cld
out
shl
jbe
xchg
lea
gs
xor
cld
into
sub
inc
insl
or
addb
inc
hlt
repnz
cmp
hlt
sub
add
cld
or
and
lock
test
out
in
roll
addr16
pop
xorw
mov
je
adc
sub
adc
cmp
mov
sub
xchg
inc
in
mov
fisubrl
push
popa
xchg
push
test
fs
aaa
adc
xor
mov
sbb
mov
insl
cmp
adc
mov
sub
loopne
pop
bound
aaa
arpl
ljmp
bound
push
pop
mov
adc
fs
sub
ja
mov
aam
data16
shr
dec
repz
into
jo
push
mov
xchg
fdivp
jns
fdivl
movsb
stc
cmp
call
aas
outsb
gs
inc
cld
repz
mov
or
mov
mov
pop
push
fwait
jecxz
adc
das
adc
scas
jb
scas
addr16
popa
xchg
nop
add
fcoms
sub
push
repz
jno
dec
jl
jecxz
jnp
mov
pop
lods
adc
les
push
or
mov
nop
jbe
and
xchg
or
xchg
das
mov
lds
lahf
jl
pop
aam
and
xchg
xchg
add
ret
mov
pop
push
stos
push
rol
ljmp
and
stc
pop
ljmp
lods
mov
pop
pop
punpckhwd
jb
rep
push
lods
nop
jecxz
leave
js
adc
cmpsb
rcrb
daa
out
xor
cwtl
lret
inc
mov
mov
fcmove
fidivl
pop
mov
ss
ficomps
mov
sub
test
mov
push
dec
sbb
push
cld
fisubrs
ljmp
cmpsl
and
adcb
cmp
mov
pop
or
jb
and
mov
mov
cs
lahf
jo
mov
mov
inc
lds
sbb
inc
adc
movl
cli
mov
add
daa
ja
pop
jb
jns
cmp
mov
pusha
cs
xchg
inc
adc
lock
jns
ret
jl
push
push
ljmp
jle
lods
fdivrp
out
and
push
dec
stos
adc
push
ret
inc
push
and
push
sbb
mov
jmp
filds
push
mov
stc
mov
stos
leave
subl
mov
dec
roll
sub
fcompl
xorl
mov
push
shrl
mov
xor
addr16
mov
mov
dec
in
arpl
notl
in
icebp
iret
or
push
mov
jl
sbb
sub
pop
mov
push
cmp
mov
or
or
loop
sub
pop
lods
add
add
jg
sub
mov
rcll
loop
dec
jb
jnp
inc
push
pop
cmpb
sub
sub
dec
sub
ja
xchg
add
and
insl
inc
clc
xchg
out
dec
pushf
pop
dec
int
into
rcll
adc
lds
mov
in
inc
test
mov
flds
pop
call
ret
pop
js
shlb
add
insl
xor
in
mov
and
rclb
stos
push
inc
xchg
xor
cli
test
arpl
xchg
mov
inc
lock
lahf
or
int
add
les
loopne
jl
mov
pusha
add
add
pop
xchg
jo
roll
xchg
aam
shrb
stos
lock
or
mov
ret
xlat
push
sbb
mov
dec
popf
or
sub
inc
or
dec
mov
mov
push
adc
jle
fcomps
add
mov
mov
gs
lea
aam
push
loopne
mov
cltd
sub
leave
xchg
aaa
ss
lcall
mov
fildl
andb
xchg
call
mov
ljmp
ss
lahf
leave
mov
test
scas
inc
in
jl
fsubl
pop
in
pusha
jge
test
lret
sti
out
dec
cmp
aaa
js
shr
fsubp
push
inc
xor
cmpsl
adc
stc
roll
aas
fstps
es
or
push
test
out
repz
mov
pop
fdivl
rcrb
push
roll
je
cltd
lcall
mov
ror
mov
test
sbb
outsb
adc
test
xor
xor
xchg
sti
add
xchg
dec
pop
fsubl
rol
imul
rorl
pop
adc
lods
sub
sub
cmp
cltd
push
scas
lods
inc
and
popa
movsl
sbb
mov
pop
lea
cmpsl
ficoml
mov
jmp
push
addr16
shl
push
nop
dec
pop
call
or
sbb
mov
jp
sub
jge
xchg
and
ret
repz
dec
xchg
sbb
std
iret
into
mov
or
iret
cmp
sub
loope
rorl
xor
adc
popf
and
rorb
xchg
adc
or
test
lock
sub
cmp
pop
pop
js
xchg
inc
pop
mov
mov
jbe
int3
das
pop
sub
std
jno
or
xor
cltd
push
fucomi
xchg
jl
jle
movsl
test
sbb
nop
jle
push
push
sub
push
sbb
aaa
xchg
clc
fsub
xorb
fwait
insl
sbbb
mov
out
sub
int
push
and
cld
and
inc
jns
and
outsl
imul
inc
int3
lock
xor
or
mov
mov
lahf
pop
adc
pop
rclb
sub
cli
outsb
adc
add
sahf
fwait
test
outsb
jmp
out
push
scas
jbe
jne
mov
data16
mov
dec
sti
jns
lret
jecxz
in
or
mull
in
mov
adc
pop
mov
fcomps
les
mov
inc
rcrl
daa
fmull
ljmp
xor
mov
add
mov
fnstsw
push
add
adc
mov
daa
mov
inc
fucomp
xchg
add
mov
int3
push
fwait
rcrb
or
scas
in
pop
push
sub
clc
aam
mov
daa
iret
xchg
fidivs
sbb
icebp
iret
xchg
lock
popf
mov
imul
sbb
negl
scas
add
cmp
ja
mov
repz
dec
xor
sub
xchg
ret
cvttps2pi
push
loop
lods
jp
enter
ret
out
mov
and
in
pop
jne
sbb
ja
xchg
out
mov
mov
push
mov
cmp
repz
mov
test
sub
rolb
xlat
std
xchg
mov
cmpsl
gs
mov
push
cmp
mov
sub
or
sbb
arpl
mov
pop
cmpsl
stos
aam
dec
hlt
imul
jo
shrb
ret
pusha
cmpl
or
jmp
pop
aas
push
stos
aad
cmp
pop
add
xchg
jns
ds
sbb
push
dec
pop
icebp
adc
notb
jmp
mov
lret
add
movsb
lods
shrb
pop
imul
sub
mov
adc
loop
xchg
dec
jmp
in
push
test
dec
xchg
cmp
outsl
push
test
bound
repz
mov
fisubrs
hlt
sub
test
mov
scas
xchg
mov
or
cltd
or
jno
push
push
outsb
dec
hlt
test
idivb
lods
lea
stos
xchg
mov
leave
xchg
xchg
ljmp
or
jnp
aas
fwait
and
stc
xlat
mov
jae
mov
mov
xchg
xchg
lcall
inc
out
lret
xor
xchg
shll
sbb
in
inc
xchg
imul
dec
sub
mov
enter
mov
sub
push
dec
ss
dec
pop
mov
inc
adc
es
test
leave
es
lock
test
test
lds
push
in
insb
into
lds
bndstx
sub
test
popa
inc
push
push
mov
shll
in
push
cmp
and
and
jns
aad
test
sti
push
or
add
mov
push
std
ret
imul
fistps
fstpt
aam
push
mov
sti
ja
inc
mov
inc
jmp
repz
lods
cld
mov
cmp
outsl
lods
ds
lret
gs
sti
mov
ljmp
pop
mov
ret
leave
inc
out
ret
hlt
jmp
pop
jae
dec
hlt
mov
sbb
mov
inc
or
mov
rolb
adc
and
cmp
andb
stos
push
lahf
cmp
jle
repnz
dec
clc
lea
lods
fisttps
frstor
inc
movsl
jae
xor
jmp
jmp
es
add
dec
inc
push
enter
inc
jecxz
sti
sub
mov
xchg
add
push
pusha
and
xor
sub
fcoms
mov
push
lds
inc
orl
adc
movsl
push
cltd
pop
in
sub
popa
out
mov
sub
push
fcmovnb
mov
pop
inc
xchg
sub
lcall
fs
push
inc
mov
insb
xor
js
fcmove
movsl
sub
loope
jne
roll
cmp
and
mulb
or
pop
cmp
and
in
add
adc
repnz
out
fwait
shll
stos
add
jle
orb
jmp
jp
mov
fld
lods
shrb
mov
sarl
insl
test
insb
push
adc
push
test
cld
and
jp
addr16
lahf
push
stos
mov
gs
mov
out
sub
or
shll
mov
inc
pop
and
rolb
sub
daa
rcrb
out
pop
sarb
or
stos
jle
cmp
fstpl
xor
mov
and
out
sub
sub
leave
mov
mov
pop
outsl
fistpl
movsl
inc
fcomip
xchg
xorl
and
out
les
out
lcall
jg
mov
aam
or
icebp
insb
inc
push
add
pushw
push
pop
sub
fcoml
push
mov
inc
sarl
mov
iret
or
jne
or
mov
lret
sbb
lret
mov
aam
ljmp
dec
pop
xchg
and
data16
cmp
sbb
sbb
mov
imul
inc
and
jne
leave
push
gs
ja
ret
sbb
icebp
aam
mov
ret
xchg
insl
jle
ja
rolb
xor
fstps
jg
jecxz
or
fildl
xchg
add
inc
fisttpll
and
movsl
jae
jecxz
mov
jne,pt
or
dec
adc
roll
pop
cmp
push
aas
xchg
shrb
push
xchg
pop
and
sub
mov
out
inc
xchg
xchg
je
enter
mov
fstpt
xor
aaa
fimull
stos
out
jmp
insb
out
mov
sub
mov
dec
in
cmpsb
sub
jl
inc
or
cmpsl
ljmp
cmc
dec
cltd
push
je
or
or
repz
inc
push
adc
orb
ja
pop
mov
dec
mov
rcll
cmp
and
pop
into
movsb
out
ss
push
jmp
add
outsl
xchg
int
test
dec
cli
outsl
and
std
aad
fs
imul
ljmp
divl
cs
cmp
xchg
or
lret
rcrl
shl
mov
xor
push
lods
scas
int3
addr16
cmp
int3
adc
sar
je
or
mov
fsubrs
je
adc
mov
cmpsl
jecxz
mov
ficoms
int
testb
stc
pop
push
gs
mov
adc
jecxz
pop
movsb
js
pop
aaa
add
ljmp
imul
sub
ret
pop
scas
adc
ja
mov
ret
hlt
lea
out
daa
cs
inc
shll
push
inc
jecxz
adc
mov
xor
stos
and
sub
lock
cli
mov
ja
push
jecxz
mov
jmp
int
mov
sarl
cmpsl
sub
mov
inc
xchg
jmp
inc
inc
arpl
push
in
add
fwait
and
cld
aaa
jmp
add
outsb
lds
loop
fbld
aaa
test
int3
fistps
filds
hlt
mov
rol
daa
sub
pop
mov
aam
pop
xlat
leave
or
or
outsl
bnd
js
xchg
ret
shr
inc
stc
aaa
xchg
mov
out
add
test
xor
xorb
lcall
mov
popf
addr16
and
addb
add
mov
test
insl
outsl
mov
das
loope
repz
xchg
and
xchg
mov
cmp
dec
fwait
mov
sbb
cwtl
iret
nop
sti
jbe
jge
rclb
cld
sbb
and
insl
aam
rcrb
fcoms
fcmovnb
or
jbe
pop
sub
sbb
ljmp
stos
cmp
stos
cmp
mov
cmc
jns
test
mov
mov
or
or
bound
fcmovbe
aas
std
push
dec
or
loop
pushf
xchg
sbb
sub
add
xor
and
cmp
aad
mov
loopne
push
add
dec
push
lcall
sub
add
mov
hlt
dec
pop
out
aad
xlat
pop
pop
faddl
imul
or
outsl
inc
xor
xchg
adc
xchg
testb
mov
scas
in
shll
insl
insl
mov
and
pusha
movq
mov
movb
push
jle
inc
mov
sar
in
add
repz
je
pushf
mov
cmp
cltd
aaa
or
cmp
out
lcall
out
out
out
out
mov
sbb
xchg
xor
rclb
mov
push
jl
push
pop
dec
push
xor
bound
int3
aaa
test
pop
mov
xor
fstpl
mov
js
dec
out
hlt
int
orb
dec
jae
jnp
xchg
push
shr
cs
cmpsl
pop
jb
ret
xchg
add
out
pusha
fldt
cmp
fildll
sub
shr
js
or
test
out
pop
jle
jbe
adc
push
jp
bswap
mov
and
jle
mov
mov
pop
int
inc
shrb
stc
js
jnp
movsl
int3
jae
add
pop
mov
rclb
jne
mov
ja
pop
scas
mov
rcr
jno
pop
hlt
add
mov
ds
jnp
xrelease
adc
insb
mov
push
jae
push
lea
pop
mov
jge
adc
inc
jmp
mov
dec
scas
and
sub
fs
dec
arpl
and
cmp
dec
mov
test
lcall
mov
int
dec
aaa
dec
add
sbb
pop
imul
imulb
mov
lods
loop
push
xchg
jl
cmp
mov
sub
aas
mov
mov
pop
xchg
loope
popf
inc
cmp
or
in
cld
push
out
lods
cmpsb
sub
mov
sub
orb
xor
mov
adc
mov
sbb
mov
les
cli
mov
jne
adc
adcb
xorb
shlb
inc
inc
jne
push
lahf
inc
jle
add
fiadds
jge
push
arpl
lret
loop
js
mov
arpl
shl
arpl
mov
pop
cmpsb
jo
sbb
dec
and
in
jns
or
testb
jmp
cmp
mov
and
and
daa
loopne
jb
cmp
verw
hlt
dec
pop
inc
push
arpl
fcmove
shrl
jecxz
cld
adc
inc
sbb
in
fisubrl
push
leave
push
cmp
out
xorl
jnp
jg
mov
out
idivb
mov
das
enter
jae
outsb
divb
push
jo
scas
nop
insb
xlat
jne
leave
lock
iret
out
lods
adc
mov
adc
mov
or
adc
int3
inc
jmp
inc
xor
push
xor
xchg
roll
mov
in
mov
int3
cmp
xor
push
dec
jb
mov
mov
int3
pop
jbe
cmc
mov
or
adc
in
aad
and
stos
push
lods
jmp
xor
jecxz
cwtl
dec
jmp
add
clc
enter
dec
or
jne
or
andb
rolb
test
mov
out
mov
xorb
push
movsb
and
mov
repz
sti
push
dec
add
iret
mov
mov
adc
inc
sub
xchg
xchg
add
pop
inc
jmp
flds
dec
sbb
jnp
shlb
shrb
push
fs
cmc
adc
fwait
mov
pusha
lods
sahf
fmul
and
mov
jae,pt
sahf
bound
sbb
ja
add
sub
shl
dec
bound
jmp
jge
cmp
mov
outsb
push
push
inc
push
xchg
rclb
ja
or
mov
fnstsw
inc
gs
repz
cmpsb
xor
and
out
add
pop
jmp
and
test
stos
add
jb
dec
sbb
pop
pop
rcrb
repnz
jp
dec
cmpsb
loopne
std
xor
and
mov
imul
leave
add
shll
sub
adc
jae
das
sub
push
sbb
dec
mov
or
inc
dec
call
imul
add
mov
mov
xor
es
lock
xor
aas
aaa
incb
daa
filds
adc
and
adc
pushf
xor
lds
test
xchg
repnz
fmul
and
test
xor
out
dec
das
ljmp
insb
pop
in
xchg
fwait
xor
outsb
mov
jo
xchg
dec
push
pop
and
cmp
jns
mov
in
xor
push
mov
add
out
in
push
add
cltd
dec
lret
test
jno
data16
mov
mov
mov
lret
add
sbb
cmp
mov
dec
mov
dec
out
sub
dec
aaa
and
sti
inc
mov
or
pusha
add
lods
iret
cltd
in
int
gs
xchg
push
xchg
inc
lahf
add
adc
inc
sbb
mov
incl
decl
xor
enter
inc
mov
pop
lea
out
movsb
je
in
sbb
add
adc
icebp
dec
pop
clc
sbb
xchg
daa
xchg
or
out
pop
data16
xlat
loopne
mov
cmp
or
pop
mov
xchg
bound
ret
cld
adc
je
leave
cmp
ss
jno
dec
outsb
shrl
test
xchg
xchg
xchg
or
sub
mov
flds
xchg
or
mov
insb
out
dec
movl
incb
bound
jno
icebp
pop
xchg
xor
sbb
jge
xchg
adc
inc
pop
inc
mov
rep
mov
movsl
das
test
aas
arpl
xchg
or
inc
and
mul
push
lods
xchg
mov
push
sbb
loop
mov
adc
fwait
sub
mov
push
ja
xchg
cmp
pop
add
xor
or
sub
mov
test
and
pop
sbb
adc
pop
jge
ja
sti
and
test
loop
icebp
adc
lock
cmp
mov
xchg
daa
and
int3
stos
test
xor
mov
jl
dec
js
arpl
mov
mov
push
jo
or
or
dec
sbb
mov
or
xor
push
fisttpl
shrl
sub
repz
sub
and
out
iret
test
out
sbb
pop
out
lea
inc
and
icebp
cltd
lds
ja
mov
sub
mov
xor
sbb
int
les
call
ja
faddp
xchg
pop
sbb
mov
mov
sar
pop
scas
dec
rcl
or
orb
sti
and
dec
jae
mov
lahf
cmc
push
out
inc
and
lea
shr
push
lock
cs
jns
jg
je
imul
jecxz
xchg
xchg
push
test
pop
push
or
mov
loope
jmp
cltd
cmp
popa
movsb
mov
enter
lds
in
clc
scas
jae
aam
dec
fiaddl
push
ja
jl
push
test
pop
xor
notl
inc
xor
pop
xchg
loope
divl
aad
cmp
cmp
nop
arpl
xor
xor
add
and
mov
adc
sti
ficoml
nop
sub
rcrb
or
push
loopne
stos
imul
mov
ja
jb
jle
cmp
pop
inc
mov
cmp
into
pop
adc
adc
xor
sbb
jns
icebp
scas
ljmp
cmpsb
pop
ja
popf
adc
push
push
push
jge
adc
or
sub
xlat
sti
ss
int3
xorb
into
mov
icebp
and
hlt
cltd
insb
jnp
pop
adc
or
cmc
mov
cmp
daa
mov
xchg
mov
fs
stc
and
in
sbb
out
call
jge
ja
mov
out
shrl
ljmp
ljmp
shrl
add
mov
cwtl
pop
add
mov
add
pop
mov
jg
push
ds
mov
loopne
mov
js
sbb
pop
dec
outsb
out
test
loope
int3
or
insl
inc
adc
sahf
loopne
adc
xchg
push
arpl
and
insl
and
fwait
insb
dec
dec
out
movsl
dec
imul
mov
xor
shlb
and
mov
addr16
mov
ret
movb
sub
jle
popf
mov
jg
push
push
ljmp
mov
ds
outsl
je
movsl
inc
es
or
mov
mov
inc
sarl
pop
fsubrp
jmp
push
fldt
sub
popa
cmp
sub
test
pop
out
add
cmc
mov
daa
iret
dec
adc
adc
nop
ja
mov
pop
in
jge
insl
shlb
sub
xchg
cmp
lock
and
scas
mov
dec
mov
ficoms
loope
bound
push
jle
roll
lret
xchg
sbb
jb
mov
cmp
mov
mov
fs
jno
and
cmpsl
cs
pop
jo
dec
je
dec
or
inc
out
dec
lds
jo
cmpsl
test
cmpsl
lods
shrb
or
fistpll
xchg
add
cmpsl
pop
jmp
xor
mov
add
fldt
mov
idivb
iret
mov
mov
dec
push
hlt
xor
mov
mov
sub
push
and
inc
xor
test
push
mov
cli
sti
inc
ffreep
stc
push
xor
outsb
push
stos
cli
add
or
inc
dec
out
ficoml
std
cmp
mov
sub
test
add
jb
cmp
int3
inc
cld
loop
add
dec
cmp
ja
clc
movhlps
or
and
jo
jecxz
clc
je
pop
jl
aad
lahf
das
adc
add
or
rcrl
jecxz
jle
movsb
mov
mov
aas
stc
mov
test
jmp
in
and
jle
les
jl
pop
cmpsl
mov
inc
xchg
imul
leave
out
jg
loope
adc
sub
lret
inc
int
xchg
ljmp
das
les
inc
addr16
mov
aas
clc
je
pop
hlt
adc
inc
pop
sbb
cmp
iret
xchg
xchg
dec
lods
scas
pop
pop
std
movsl
sbb
pop
or
dec
mov
xchg
cmp
dec
pop
call
sbb
cwtl
mov
add
cmc
out
or
loope
les
nop
xchg
add
push
inc
cmc
xchg
sub
or
add
or
ret
movsl
add
jne
insb
int
out
xchg
cs
or
mov
xchg
stos
adc
out
mov
fistpll
ljmp
test
or
sbb
mov
dec
jne
hlt
push
jle
xchg
mov
sbb
pop
and
mov
faddl
pop
adc
fwait
outsl
jae
imul
xor
jg
cmp
stc
leave
dec
mov
loop
mov
jl
mov
adc
mov
sub
dec
gs
loope
addr16
sbb
mov
gs
add
pop
add
dec
lds
out
mov
test
lds
mov
mov
cmp
pusha
xorb
clc
lret
push
ficomps
out
dec
neg
out
mov
mov
ljmp
icebp
rorl
cld
inc
into
and
push
jmp
inc
cmp
in
add
pusha
insl
sbb
fidivs
jle
aad
addb
dec
mov
adc
aaa
xchg
and
lret
add
or
add
cs
pop
lahf
push
pop
xor
push
or
mov
sti
cld
in
cmp
sbb
inc
cmp
fildll
xchg
sar
ljmp
popf
ds
les
xorb
xchg
je
add
ret
jl
movsb
mov
stc
sbb
or
mov
mov
ror
jp
mov
push
test
jns
pop
out
inc
or
stos
sub
divb
pop
xchg
test
push
sbb
leave
pop
fcoms
popa
fisttpl
sub
inc
mov
or
xchg
popl
pusha
enter
push
ret
scas
pop
inc
dec
adc
xor
enter
shl
sub
xchg
shrb
add
ja
imul
gs
aas
popa
jne
shlb
frstpm(287
outsb
pop
add
jb
popf
jo
mov
ljmp
pop
es
movhps
sub
repz
dec
rorl
pop
mov
std
pop
fisubrs
sbb
cmp
add
into
lea
mov
and
jmp
adc
bound
aad
loope
cmc
ja
cmp
out
stos
ljmp
inc
mov
popa
mov
jecxz
jle
rcrb
dec
enter
cltd
mov
pop
jbe
stos
cli
cmp
mov
fwait
pop
jne
sub
jp
int
jae
and
pusha
sub
and
mov
je
xchg
sbb
fcmovne
mov
pop
pop
inc
pop
push
jecxz
push
fwait
lock
mov
sbb
adcl
sub
jg
enter
lods
sub
fldl2t
xlat
adc
ret
arpl
enter
iret
jge
mov
popf
mov
push
lahf
jo
nop
xor
call
repnz
lods
add
push
xor
sbbb
xchg
xchg
or
xor
loop
adc
dec
cmc
push
aas
push
or
and
push
and
lahf
cltd
sahf
je
jo
jp
sbb
mov
and
jp
push
jno
sub
outsl
xchg
push
xlat
aam
or
push
std
adc
mov
inc
mov
push
jle
jns
inc
repz
jae
ljmp
adc
mov
and
sahf
mov
xchg
add
push
fisubl
aam
lahf
sbb
dec
push
and
pop
in
and
push
mov
xor
inc
mov
xchg
push
mov
ret
insb
in
cli
sub
pusha
icebp
push
sti
sub
aaa
les
push
jl
sub
add
hlt
test
push
cmp
insb
push
lods
lods
les
movsl
sub
sbb
cmp
inc
clc
cs
std
dec
xchg
mov
out
mov
andl
dec
inc
push
add
adc
inc
pop
xor
adc
mov
xchg
bound
pusha
inc
ror
xchg
pusha
es
mov
dec
std
mov
enter
out
mov
std
mov
mov
das
rcll
imul
jnp
mov
gs
shl
sub
mov
in
inc
xchg
mov
and
xchg
loop
daa
bnd
cmp
mov
popa
bound
mov
xor
mov
cmpl
inc
cmpsl
in
ljmp
sub
fcoml
dec
sahf
imul
xchg
int
dec
jmp
jb
adc
rorl
insb
sbbb
and
xchg
fldt
mov
lcall
jmp
aam
cmp
add
in
xor
in
push
or
loop
push
fwait
nop
xchg
out
fiaddl
repnz
hlt
push
dec
inc
repz
out
mov
fs
in
mull
lea
cmp
loopne
in
push
mov
push
call
mov
xchg
cmc
ljmp
fcompl
mov
mov
mov
sub
and
jp
jb
lcall
add
and
pop
inc
push
lret
pop
rorl
dec
adc
js
jbe
pop
test
and
jno
mov
fsts
insb
rcrl
and
in
mov
push
pop
jns
xor
add
idivl
test
into
outsb
sbb
mov
adc
dec
push
adc
xor
xchg
and
mov
int3
imul
data16
and
mov
das
jnp
inc
lret
outsl
sbb
inc
cmp
adc
xlat
insb
popf
mov
jb
bound
cmpl
sbb
and
inc
mov
cmpsb
out
jmp
daa
jae
cmpsl
rcr
inc
ret
stc
and
test
sbb
data16
je
and
push
mov
sbb
push
jns
pop
fsubl
scas
pop
je
jl
inc
faddl
nop
fidivl
add
jp
xor
enter
icebp
jmp
push
inc
jecxz
cltd
xchg
in
das
mov
pop
test
sahf
xor
dec
mov
enter
pop
ret
jne
std
mov
mov
mov
insb
outsb
out
dec
pop
dec
mov
jnp
add
or
jns
insb
mov
sbb
jnp
dec
imul
mov
jecxz
les
add
sub
inc
in
fstps
or
push
adc
movsb
dec
dec
or
test
dec
sub
dec
and
mov
sub
icebp
loop
dec
sbb
gs
and
mov
ss
ss
mov
push
idivb
jmp
loope
sbb
stos
popa
cmp
pop
mov
aas
inc
adc
push
push
xor
mov
js
pop
sahf
repnz
push
dec
imul
mov
cld
pop
adc
es
bnd
dec
mov
mov
or
cmp
js
scas
js
fisttps
dec
mov
dec
and
jb
jae
cmc
xchg
or
stos
mov
loopne
movsl
inc
pop
lods
and
pop
push
add
pushf
fistpl
push
or
out
or
jle
pop
xchg
jp
pop
iret
pop
cs
out
insb
or
and
mov
jno
cmp
fldl
mov
js
inc
xchg
in
aam
push
adc
je
lock
push
movsb
repnz
movsb
sub
or
test
xor
add
orb
push
enter
xor
sub
rolb
mov
popf
pop
aam
mov
dec
mov
adc
mov
out
push
xchg
and
sahf
adc
or
push
or
pop
xor
mov
sbb
gs
cmp
clc
lcall
push
int3
popa
cmp
pop
or
push
jge
add
mov
decl
ret
pop
gs
add
into
dec
dec
adc
sub
adc
sbb
push
arpl
lcall
gs
xor
add
mov
ret
sub
cmpsl
xchg
rorb
fbld
jb
enter
add
pop
mov
xchg
xchg
stos
jno
test
adc
push
aad
mov
mov
es
cmp
in
inc
mov
out
cmp
push
dec
dec
push
lods
push
in
int3
add
sahf
into
xchg
lahf
xor
aas
nop
jp
loop
les
orl
add
adc
lock
lods
js
jns
jg
push
rolb
iret
fcomip
adc
jo
subb
test
into
mov
incl
lods
adc
insb
insb
bound
scas
outsb
mov
ret
inc
cltd
jmp
xchg
jle
fmul
in
test
popa
out
movsb
clc
mov
dec
mov
jnp
inc
cwtl
or
stc
adc
icebp
ds
cli
sub
repnz
cmp
mov
nop
bound
mov
loopne
cmp
test
movsb
fistps
mov
sbb
lahf
ret
insl
lahf
lods
ja
cmp
mov
test
stc
pop
or
and
std
xchg
jb
into
pcmpeqw
jae
jbe
push
cmc
pop
xchg
cli
ror
mov
data16
ja
fldcw
daa
pop
inc
pop
cmpsl
adc
dec
sub
shlb
mov
and
sbb
shll
insl
sub
js
push
adc
std
daa
in
or
jne
jmp
ljmp
outsb
aas
loope
xchg
lods
lods
js
xchg
insb
inc
or
adc
push
pop
pusha
ficomps
pop
pop
push
mov
mov
cmc
xor
jns
daa
push
pusha
adc
inc
ljmp
add
xchg
lods
sub
dec
popf
loopne
sub
sbb
inc
outsb
pop
mov
out
xchg
aas
cwtl
mov
lds
and
jno
inc
add
xor
pop
arpl
jnp
mov
cmpsb
daa
stos
adc
mov
shll
add
fimuls
xchg
sahf
movsb
mov
dec
push
cmp
ds
pop
fisubs
pop
hlt
pop
xor
sbbb
jge
adc
insw
sbb
pushf
testb
les
jl,pt
enter
in
out
pusha
cmpsl
jg
xor
je
ss
and
ja
int3
sub
in
push
loope
push
xorl
jnp
pop
mov
inc
cmpsl
je
pop
aad
je
in
push
sti
test
shl
xor
ficoml
inc
push
xchg
addb
pop
cmp
sti
sbbl
aaa
ret
pop
or
int
iretw
fsubs
mov
pop
sub
pusha
lcall
aas
inc
xchg
adc
cmp
xor
xchg
cmovb
and
mov
adc
jg
pushf
ja
xchg
mov
push
bound
or
stc
scas
fs
cmp
xor
insb
xchg
mov
adcl
aad
enterw
in
iret
jmp
sbb
in
or
sub
lahf
stos
sub
cmp
idivl
sub
cmpsb
jns
xor
out
popf
js
push
imul
fildll
lret
mov
cmp
test
or
ja
inc
mov
test
pop
les
add
andb
rcrl
mov
mov
xor
or
pop
cmp
jb
dec
decb
lock
push
push
js
add
rorb
cmp
add
pop
roll
dec
push
dec
shl
mov
cmp
jp
bound
push
shlb
push
in
cmc
and
xchg
xchg
push
and
loope
push
sti
mov
push
insl
xchg
sar
test
mov
push
mov
jle
push
bound
sub
stos
and
das
mov
imul
mov
push
xchg
mov
dec
call
pop
mov
xchg
xorb
int
mov
loop
test
add
push
mov
dec
push
clc
mov
ja
outsb
adc
xchg
push
ret
xchg
mov
xor
pop
clc
ficoml
pusha
adc
mov
xchg
push
mov
mov
gs
jns
or
xlat
mov
add
cmpsb
je
popf
lret
or
lcall
stos
pop
lea
leave
jp
mov
arpl
mov
cmp
sahf
sbb
les
cld
jb
pop
push
xchg
scas
inc
xchg
daa
pushf
adc
repnz
xor
cwtl
sahf
dec
jne
lods
sbb
xchg
xchg
bound
scas
fsubl
stos
sub
dec
xor
enter
mov
stos
aad
int3
movl
fdivr
cltd
sbb
es
dec
roll
dec
daa
add
test
loope
cmp
sti
fimuls
sub
xchg
test
mov
adcb
hlt
ss
cmp
jns
aad
leave
add
int
stos
cwtd
cmp
test
stc
sub
out
jp
loop
lods
outsb
add
xchg
inc
cmp
cmp
cmp
jl
ljmp
gs
ret
rorl
gs
or
arpl
shll
mov
in
inc
fcoml
or
shr
sbb
ds
mov
test
push
mov
fildl
hlt
xchg
lahf
das
stos
or
sub
es
hlt
sbb
and
mov
int3
sarb
jns
cmp
sbb
dec
nop
packsswb
std
pusha
dec
gs
mov
hlt
push
test
pop
pop
xor
or
cmp
inc
loop
lods
loopne
out
push
mov
jecxz
or
lcall
mov
xlat
int3
rcrl
daa
cmpsb
shrl
sahf
adc
hlt
push
mov
mov
pusha
sbb
lds
inc
fidivs
mov
mov
rcrl
mov
rcl
mov
pop
aas
loop
and
pop
jnp
and
xchg
dec
ss
sarl
xor
push
mov
mov
jmp
mov
test
shrb
sahf
mov
jl
aad
or
dec
sub
int
add
repnz
std
inc
ficoms
fistpl
fsub
pusha
mov
fisttpll
cmpb
adc
jae
gs
mov
xlat
dec
out
inc
mov
inc
fs
jbe
cmpsb
xor
stos
sbb
jp
out
adc
roll
or
pop
jns
or
stc
add
xchg
and
fwait
sbb
cmp
repz
test
mov
pop
pop
repz
insl
xor
or
dec
aam
gs
fdivrl
ret
cmp
jb
scas
mov
cld
out
pop
jmp
or
adc
out
xor
sahf
cmp
mov
test
scas
lret
mov
ja
mov
icebp
repnz
xlat
rorb
pop
repnz
and
mov
arpl
lahf
stc
mov
and
sti
gs
flds
inc
cmc
hlt
mov
jae
adc
lret
and
and
inc
xchg
sarb
bound
rcl
push
pop
add
xchg
dec
and
cwtl
mov
jo
lcall
xchg
loopne
arpl
mov
movsb
mov
mov
imul
addl
in
or
xchg
dec
push
decl
adc
inc
arpl
sbb
std
sbb
or
push
xor
cmp
inc
icebp
pop
fstps
xchg
dec
dec
rcrb
ja
leave
mov
cmp
sbb
dec
push
xor
dec
mov
jg
xchg
xchg
fwait
loope
jne
lds
jecxz
add
in
enter
pop
test
mov
fcompl
sbb
aam
jo
jmp
cmp
push
push
xchg
aad
int
sub
lret
push
or
fcomps
test
ljmp
lahf
inc
sbb
loopne
lret
jmp
pop
shlb
mov
push
hlt
in
inc
imul
out
lcall
ret
or
inc
into
in
dec
cwtl
adc
inc
pushf
inc
lea
test
fldl2t
add
pop
outsb
pop
adc
test
mov
mov
dec
out
mov
adc
data16
sub
push
add
mov
jmp
dec
push
pop
mov
and
out
mov
mov
ss
adc
sbb
jge
xor
std
cmp
jl
inc
and
push
xchg
adc
mov
pop
xchg
outsb
mov
sub
push
sahf
loope
stc
jne
xchg
addr16
test
xor
pop
aam
sbb
add
xchg
adc
mov
mov
dec
dec
enter
fstpl
repz
ljmp
fimull
sbb
orl
addr16
pop
push
imul
inc
sbb
scas
fisttpl
pop
rorl
inc
cld
lcall
cli
cmpsl
xor
icebp
add
xchg
in
xlat
scas
ja
inc
loopne
mov
sahf
gs
test
dec
ds
xor
adc
xor
pop
adc
mov
mov
fmull
xchg
jle
ds
mov
add
sti
mov
movl
in
sbb
jle
sub
movsl
or
jae
daa
enter
dec
dec
cmp
mov
lret
sub
xor
xor
in
push
xor
add
shrl
pop
in
ljmp
leave
push
outsb
xchg
push
jnp
mov
lret
add
or
addr16
xchg
mov
add
in
pop
fistpl
fidivrs
adc
mov
mov
sbb
jae
jne
cmp
ja
mov
jecxz
jbe
lret
ja
jl
outsb
mov
test
mov
rcr
xor
lea
jns
inc
push
mov
push
push
in
daa
jno
lahf
lock
out
std
pop
int3
pop
and
int3
push
inc
inc
sub
dec
inc
sbb
fcoml
xchg
xchg
xchg
adc
rolb
rolb
sub
xchg
push
pop
adc
ljmp
rorb
or
sbb
mov
push
in
cs
sbb
push
pop
xor
mov
dec
sub
out
lret
sbb
jp
push
mov
mov
or
mov
jl
pop
jb
and
pushf
push
cmp
sbb
mov
sub
xchg
mov
lock
push
fisubl
adc
sti
jl
cmp
cmp
pop
sti
int3
pop
xor
inc
cmp
repnz
inc
pop
loop
jge
push
in
lret
push
lret
mov
gs
add
sub
ret
push
ljmp
nop
push
aad
outsb
add
or
int
mov
outsl
add
jae
mov
in
sub
lahf
add
inc
inc
sbb
fcomps
sub
dec
pop
in
ret
dec
mov
cmpsb
and
pop
push
jne
cmpsl
pop
rcr
out
push
inc
gs
loopne
stc
and
xchg
cmp
mov
cmp
repz
cmp
push
mov
and
call
and
addl
mov
pop
add
sub
jnp
js
fiadds
pop
ljmp
shll
adc
stos
mov
cli
call
outsl
inc
movsb
dec
and
or
add
sti
lea
loopne
xor
les
cmp
jno
popf
out
ss
add
and
push
adc
gs
add
sar
xchg
aam
xor
es
popf
cmpl
divb
cli
mov
push
sarb
pop
rorb
test
and
dec
jbe
jmp
jne
lret
out
jl
xchg
or
sub
pop
scas
sub
mov
gs
mov
jo
xchg
movsb
mov
mov
rclb
imul
lods
cmpsl
jnp,pn
mov
popl
into
fisttps
sub
movl
aad
fstpl
sbb
dec
stc
sbb
ss
into
cli
insb
repz
mov
repnz
cmp
cmp
pop
cmp
xor
cmpsl
mov
mov
fadds
aam
gs
lret
mov
jne
cwtl
outsb
mov
adc
addb
dec
sbb
loope
sbb
dec
fidivrs
push
jns
ljmp
jmp
gs
push
lock
shrb
sahf
pop
loope
sbb
pop
push
adc
adc
out
jecxz
movsb
ljmp
dec
jnp
call
sti
cmpsb
mov
push
jbe
sbb
mov
std
push
xchg
cmp
repnz
flds
xchg
jnp
insb
jle
sub
fmul
or
lret
cmp
xor
lahf
mov
sub
xchg
insb
xchg
hlt
xor
call
pop
clc
out
cmp
or
mov
jl
mov
cmc
and
dec
rorl
add
pop
movsb
fcomi
bound
clc
and
add
fwait
mov
push
fildll
add
mov
inc
sarl
add
fsubrs
in
lea
mov
sbb
mov
push
inc
add
daa
and
mov
adc
dec
enter
jl
and
ret
sub
int
jbe
mov
jne
pop
pop
into
pop
rcrl
jns
add
lds
sarb
or
xor
jge
jo
mov
fs
mov
icebp
cmpsb
int
sub
mov
dec
cmp
ja
sti
cli
push
imul
xor
repnz
mov
fdiv
dec
scas
int
xor
clc
pop
iret
jno
add
stos
out
add
mov
fidivl
jmp
fbld
pop
je
xor
imul
add
arpl
rcrl
inc
leave
scas
js
jge
negb
inc
pop
pop
lcall
push
push
shll
push
xchg
lods
or
iret
pop
lret
das
cmc
test
sub
jnp
sbb
sbb
mov
cmp
stos
shlb
and
xor
and
in
sub
cmpsb
iret
cmc
sahf
cld
dec
roll
ret
stc
ja
push
fimuls
jne
or
jns
loop
dec
add
outsl
cld
cld
mov
mov
xchg
cmpsl
inc
jg
js
pop
xor
ficoms
inc
int3
fstps
cmp
arpl
and
and
sbb
xchg
add
sub
pop
shrb
cmpsl
lret
push
lock
xchg
jns
pop
fildl
hlt
lahf
xchg
xchg
pop
ljmp
mov
imul
inc
stos
mov
in
mov
sahf
out
mov
xchg
aam
gs
leave
popa
es
xlat
rcll
and
mov
insl
mov
sbb
rolb
xor
repz
dec
in
xchg
testl
cmpsb
rcl
ss
mov
mov
popa
jecxz
push
mov
outsb
push
pop
cltd
dec
shlb
mov
jg
testb
pushf
lds
xchg
xor
xor
push
test
mov
mov
arpl
outsl
adc
sub
xor
jecxz
stos
int3
pop
ret
iret
into
outsb
inc
clc
mov
loopne
fiaddl
sbb
jb
or
inc
jl
cmp
mov
sub
jge
xchg
mov
xor
fwait
addr16
jno
pop
aam
sahf
fisubl
and
inc
add
subl
mov
gs
sbb
add
cmp
jbe
fwait
push
aas
inc
pop
mov
xor
ja
stos
repnz
clc
ror
or
mov
popa
pop
icebp
mov
fdivrp
pusha
or
sub
adc
bound
inc
and
sbbl
nop
mov
sub
push
or
imul
fwait
mov
cmp
or
ja
mov
ljmp
lea
jbe
cltd
movsb
stc
clc
jne
xchg
or
sti
fbstp
lds
adc
jne
fstpl
pop
jno
in
add
mov
push
pop
out
and
xor
sub
push
scas
pop
sbb
pop
mov
mov
aas
jl,pt
loopne
or
mov
add
addl
xchg
mov
out
push
mov
dec
pop
xor
mov
mov
out
mov
dec
mov
fsubrs
adc
mov
mov
in
out
sbb
rcll
xor
mov
popa
aam
push
xor
xchg
rcr
in
sbbl
arpl
jb
mov
xor
lds
aas
mov
jbe
dec
sub
inc
mov
into
adcb
mov
add
and
and
cmp
mov
or
cmp
int
jae
in
inc
icebp
pop
out
push
mov
mov
js
or
pop
adc
ret
push
dec
inc
loopne
stos
pop
mov
mov
mov
ja
push
test
or
jo
pop
movsl
dec
adc
sbb
mov
aam
out
jae
pusha
and
in
xchg
fistl
out
xchg
dec
and
cmp
and
push
cmpsl
jle
scas
or
into
pop
mov
fmull
ficoml
imul
mov
inc
inc
movsb
xor
sub
mov
cmp
stos
mov
lods
and
xchg
and
push
mov
cld
sti
in
nop
rolb
cs
mov
or
push
lea
adc
xchg
shl
enter
nop
dec
pushf
movsb
les
sub
ret
jg
int3
das
rcrb
push
xchg
jg
filds
inc
jns
mov
iret
xchg
or
pop
mov
lcall
loopne
imul
fsubrl
sbb
les
pushf
ss
hlt
mov
sub
pop
sbb
cwtl
pushf
fnstsw
lret
xor
mov
aad
or
and
sub
xor
je
int3
arpl
test
adc
outsb
lahf
xor
dec
inc
daa
outsb
inc
push
scas
out
pop
mov
in
dec
push
mov
push
jne
mov
inc
repz
mov
es
xchg
push
ja
test
insl
dec
add
sti
push
adc
es
loopne
cwtl
rcll
pop
ljmp
outsb
mov
movsl
aad
imul
pop
outsb
sub
and
push
sub
sub
jae
scas
pop
push
fdivrs
xchg
icebp
lret
sbb
or
movsb
pop
in
nop
xchg
xor
into
mov
les
mov
sar
cld
shll
mov
lahf
adc
or
push
xchg
sub
popa
out
imul
fmulp
mov
mov
aam
aad
mov
cmp
mov
iret
sbb
std
sti
aaa
lret
xchg
setnp
shlb
mov
dec
imul
fs
mov
mov
sti
mov
inc
xchg
xorl
ss
fsubrl
sub
xbegin
dec
out
data16
xchg
stc
into
mov
pop
adc
jo
ret
sahf
adc
sub
inc
cs
pushf
jnp
notl
push
in
rcl
fsubrp
in
push
xchg
cwtl
pop
xchg
xchg
pushf
rcrb
call
push
push
cld
outsb
sub
aam
xor
roll
push
cmp
stos
xchg
xchg
mov
add
clc
lret
loopne
hlt
mov
and
nop
and
in
lods
sbb
lahf
or
jp
lods
adc
xchg
push
xor
pop
xorl
lock
rcrl
dec
test
add
cmp
pop
es
or
and
jge
pop
stos
mov
daa
cltd
inc
movb
div
enter
push
out
scas
xor
hlt
mov
in
dec
mov
xor
mov
dec
outsl
mov
rorb
mov
lods
aam
dec
lock
xor
lock
or
movsl
lods
aaa
jecxz
subl
hlt
cmp
push
aaa
inc
pushf
inc
ds
nop
mov
movd
sub
cmp
fsubl
cs
add
arpl
andb
push
into
or
sub
jbe
repz
lods
or
mov
stos
xor
aam
inc
pop
leave
test
adc
mov
fldenv
jle
and
mov
imul
fs
adc
pop
pop
jno
test
xchg
xchg
mov
mov
mov
aam
into
jno
pop
and
imull
pop
push
pop
addb
stos
fisttps
std
popa
push
mov
lcall
xchg
inc
cmp
sub
jnp
lock
pop
jmp
enter
pop
add
push
cmpsb
repnz
jnp
and
insl
cs
push
jmp
mov
cmc
aam
sub
push
test
jg
jecxz
arpl
dec
and
jl
int
or
mov
inc
xor
jnp
or
xchg
imul
je
addr16
inc
mov
xchg
loope
jp
mov
je
lret
xor
xchg
pop
xchg
ljmp
stos
push
and
push
pop
lret
or
leave
or
mov
sub
sbb
sbb
daa
mov
dec
test
enter
bound
push
pop
add
mov
adc
daa
jo
and
out
shl
pop
push
sbb
pop
sbb
mov
fisttpll
aaa
fimuls
cmpsl
shll
jbe
fisubrs
lds
jo
sarl
jle
jne
lahf
fnstcw
xchg
dec
and
pushf
hlt
fcomps
adc
in
ret
cmp
lds
mov
pop
stc
jns
and
sbb
std
cld
sbb
adc
mov
addb
and
inc
mov
fiaddl
imul
pop
addr16
insl
fnstenv
ja
add
insl
shlb
js
push
aad
fwait
adc
pushl
xor
or
out
cli
jl
je
or
ss
cmp
dec
repnz
jae
aad
idiv
or
pop
mov
repnz
adcb
sbbl
xor
inc
lahf
cld
stos
lea
or
sub
sbb
adc
sub
xchg
aas
or
mov
test
pop
ja
das
jmp
data16
pop
push
aas
cmpl
test
sti
or
pop
ss
in
push
push
jg
mov
push
das
das
pop
cmp
test
lahf
out
push
adc
outsl
stc
jg
fcmovnbe
mov
jae
ret
add
ss
mov
push
fistpll
pop
rcrb
movsb
adc
or
daa
out
int
xchg
scas
sub
fsubs
out
inc
insl
adc
leave
inc
add
jle
arpl
les
xor
push
rep
push
ret
or
scas
xor
les
xor
pop
out
out
mov
int3
out
sbb
out
mov
out
sbb
cmp
outsl
xor
popf
dec
lcall
les
loopne
jge
mov
call
shrl
sub
shll
lcall
jno
xchg
xor
xacquire
cwtl
jo
repnz
adc
int
mov
mov
mov
fs
out
jecxz
scas
jg
pop
push
pop
add
popa
int
cltd
jecxz
ficoml
jae
inc
imul
aaa
call
cmp
add
and
or
cwtl
repnz
stc
test
dec
shl
pop
push
es
inc
cld
repnz
jbe
popa
dec
aaa
push
mul
push
and
in
popa
mov
and
int
pop
fadds
pop
bound
shll
mov
lret
jl
enter
sbb
mov
fsubrp
xor
cmp
pop
jp
mov
mov
xchg
inc
sub
outsb
xor
cmpsl
inc
fcmove
sub
mov
fbstp
mov
adc
xor
repnz
js
pop
inc
in
in
xor
imulb
pop
adcl
xchg
and
in
fs
sbb
outsb
jp
out
mov
repnz
and
xor
mov
sub
and
dec
pop
xor
or
ret
cmc
push
xchg
aad
jge
std
push
ficoml
push
popa
pop
scas
jle
mov
decl
xchg
aas
mul
pop
lret
pop
cmp
cmp
test
cmp
adc
mov
jl
pop
test
dec
dec
mov
sbb
xor
mov
push
inc
dec
inc
xchg
into
out
int
add
mov
push
mov
std
nop
stos
iret
dec
xchg
lea
ja
movsb
fimull
jne
cld
jmp
ja
scas
sbb
cli
sub
push
lods
ja
xchg
orl
hlt
jne
addl
dec
data16
push
imull
negb
jae
pushf
jae
xor
sbb
cwtl
push
mov
gs
fistps
inc
les
inc
aas
iret
dec
cmp
pop
push
xchg
scas
pop
or
insl
outsb
mov
xchg
test
in
sahf
and
fadds
out
add
jge
mov
cmp
test
mov
add
out
inc
test
and
xlat
cwtl
cmp
dec
mov
fnstcw
cmpsl
jp
inc
add
push
dec
mov
scas
push
enter
iret
or
jle
sub
pop
push
push
xlat
inc
loope
or
cwtl
adc
dec
xchg
pop
xchg
mov
arpl
fcomps
and
fnstcw
daa
ret
mov
stos
fcoms
ljmp
movsb
pop
jno
jb
sbb
mov
mov
shlb
rol
pop
xor
sub
stos
or
mov
aas
ret
or
loopne
xchg
or
or
adc
inc
dec
ja
push
fiaddl
outsl
mov
push
add
jne
mov
int3
xlat
mov
int3
sbb
push
ds
leave
mov
cmp
notl
jecxz
push
jecxz
daa
aad
mov
data16
repnz
rorl
testl
int
or
pop
std
push
push
xchg
lret
jno
out
out
dec
push
jns
psubq
pop
lcall
je
jecxz
ficompl
in
daa
adc
inc
sbb
mov
leave
jp
lcall
xlat
out
jae
push
mov
mov
aad
loop
mov
ret
xor
push
jbe
xchg
inc
inc
mov
lods
xchg
mov
out
cmp
es
and
push
ss
mov
sub
add
scas
xchg
xchg
mov
rcll
repnz
sub
inc
cltd
or
or
sbb
adc
fildll
out
ret
push
dec
and
adc
insl
add
and
inc
cmp
adc
dec
dec
xor
stc
ret
sarb
in
mov
scas
cmc
mov
jno
les
test
sbb
rcrl
pop
leave
cmp
hlt
xlat
pop
dec
mov
in
jns
dec
cmp
sahf
cld
push
cmp
pop
aaa
pop
xor
cmp
inc
jle
push
rcrl
dec
bound
xor
ret
pop
enter
pop
andb
aaa
dec
jmp
jnp
lret
scas
jle
jle
xor
push
cld
lock
aas
push
jl
mov
test
cmp
lcall
shll
pop
lret
add
xor
jp
mov
shll
jg
mov
inc
cmpsl
or
push
jne
mov
adc
out
hlt
push
cmp
rcrb
cvtpi2ps
or
inc
imul
sub
add
xor
hlt
bsf
xor
xchg
mov
ficoml
fsub
insl
mov
mov
mov
lret
aaa
jnp
rep
arpl
sbb
je
add
pusha
jno
dec
pop
dec
int
adc
lea
popf
roll
out
leave
ret
loope
push
cltd
xchg
fisubrs
and
pop
cli
loop
xor
mov
into
cmp
jg
cwtl
sub
cmp
mov
ret
xor
cmp
lods
outsb
cmc
and
and
in
ja
sbb
xor
jbe
jae
scas
push
and
movsw
lfs
xor
and
sbb
cs
psrlw
insl
fs
shrb
push
mov
xchg
pop
test
sub
les
bound
loop
sahf
enter
popl
pop
in
push
sub
mov
mov
cs
insb
inc
dec
mov
repz
stos
adc
cmc
lcall
mov
std
loop
stos
dec
jge
fwait
shll
or
inc
or
pop
or
xchg
add
pop
test
jae
lds
sub
flds
add
mov
jp
adc
xlat
arpl
dec
hlt
adc
pushf
nop
cmpsl
sti
call
out
out
mov
dec
sub
jecxz
mov
fcmovne
shl
inc
sahf
xor
lds
iret
sbb
sahf
loopne
and
adc
adc
ror
or
idiv
add
pushf
fistl
and
mov
inc
cmpsl
sub
pushf
adc
push
adc
repnz
stos
lock
insl
lods
jne
mov
dec
out
cmp
jmp
pop
loopne
orl
jno
mov
jl
in
sahf
outsl
scas
and
sahf
int
cmpl
faddp
call
mov
lods
pop
mov
dec
lahf
mov
cmp
sub
lret
sti
test
std
push
cwtl
mov
ds
popa
popf
and
cmp
cli
cmpsb
sbb
fisttpll
xor
outsl
lcall
aaa
cli
test
sub
movsl
scas
mov
xor
lock
shl
jmp
lahf
sbb
xchg
and
mov
push
push
mov
clc
aaa
stos
stc
lods
mov
jecxz
bound
call
mov
lods
or
outsl
out
into
adc
inc
xlat
fmul
mov
cmp
mov
fadd
and
push
scas
call
and
mov
cmp
call
push
iret
cmp
test
mov
xchg
jl
imul
ja
cli
pusha
and
aad
xchg
mov
sub
mov
cmp
push
out
lods
popa
mov
add
dec
push
mov
repz
dec
sbb
push
out
leave
inc
pop
cmc
enter
ss
cmp
push
sbb
pusha
add
subb
out
sub
aaa
out
fsubr
xor
imul
dec
jne
cmp
call
dec
leave
xchg
arpl
jns
lock
repnz
aas
xchg
jge
adc
arpl
add
call
outsl
mov
nop
push
aaa
xchg
out
ja
jge
gs
std
mov
pop
dec
xor
fcmovnbe
hlt
scas
pop
out
sub
sub
lret
inc
and
in
and
cmp
loope
arpl
imul
insb
nop
imul
stos
cmpsl
pop
mov
pop
cwtl
dec
add
lods
fsubrl
sbb
xchg
outsb
fs
push
mov
add
hlt
lcall
aad
dec
repnz
mov
loop
mov
mov
outsl
jo
cmp
xor
adcl
sarb
xor
ja
repz
mov
mov
cmp
scas
cmpsl
jae
es
cli
xor
rcrl
aaa
add
push
and
xor
lds
in
or
mov
inc
fimull
xor
cmp
cs
ds
imul
push
add
mov
push
adc
cwtl
jbe
lea
and
lods
insb
ret
cwtl
mov
mov
clts
xor
lcall
mov
insb
or
shll
popf
fstpl
cmp
sti
lock
lret
cmpsb
or
inc
ljmp
rcrl
jg
mov
push
in
into
adc
inc
jae
jecxz
push
out
push
loope
adc
movsb
adc
into
cmp
fisubl
dec
pop
fwait
ljmp
mov
lods
mov
aas
mov
adc
ret
inc
call
dec
sub
cmpsl
cs
iret
lcall
xlat
fs
mov
sbb
adc
lret
jae
or
sbb
inc
out
xor
enter
inc
pusha
push
cwtl
jge
sub
jg
sahf
test
stc
dec
mov
adc
int3
xlat
jg
scas
mov
out
sub
call
les
inc
popa
loope
movsl
stos
mov
and
mov
adc
andl
cltd
ret
mov
inc
test
or
push
sub
sarb
scas
mov
fsubrl
push
fsts
pop
jle
mov
imul
xchg
popf
jno
int
roll
lcall
leave
mov
popl
mov
cli
push
xor
shr
fsubrs
dec
xchg
ficoms
fisttpl
fwait
mov
bound
out
jne
xchg
insb
roll
mov
sub
mov
xchg
pushf
mov
ror
sar
push
push
in
pushf
sbb
add
stos
daa
xchg
jnp
pop
sbb
add
stos
inc
xor
xorb
ret
sub
sarb
dec
bound
add
shl
push
lock
inc
pop
push
std
cmp
sahf
aaa
and
aas
xlat
cmc
lcall
push
repnz
mov
mov
dec
xchg
mov
and
push
and
xchg
cmpsb
rcll
adc
and
cmp
cs
roll
mov
dec
xchg
lret
test
push
lds
dec
pop
push
mov
inc
jmp
inc
cmp
faddl
test
cli
lea
aam
call
xor
in
jle
bound
fsts
gs
push
adc
fisubs
cmp
inc
mov
repz
mov
cmpl
xlat
sub
test
lods
ret
rol
das
test
inc
or
mov
mov
in
jns
or
push
in
adc
xor
movsl
mov
sti
cwtl
les
ret
rclb
dec
lahf
cmpl
outsb
mov
pop
js
mov
mov
aam
lret
sbb
rorl
xlat
pop
mov
rcrl
or
add
jge
shrl
inc
mov
sub
dec
insb
cld
popl
xorl
mov
jns
mov
popf
imul
enter
testb
adcb
or
nop
mov
mov
push
data16
int
and
add
ds
pop
stos
inc
rorb
in
insl
or
pop
ficoml
xor
lds
inc
loopne
xchg
adc
xor
mov
mov
pusha
dec
push
popa
cmp
inc
daa
mov
shr
ss
pop
jno
add
mov
lcall
cmp
hlt
xchg
pushf
mov
dec
cs
repnz
enter
ret
jnp
or
mov
adc
lods
lds
sbb
mov
ss
test
jmp
fcmovnu
jno
lods
cltd
push
add
lret
cs
sti
icebp
dec
xchg
sbb
sar
andl
popa
in
ss
iret
add
nop
stc
out
fcoms
std
fcoml
dec
mov
std
subb
or
repz
or
std
cmp
xchg
jo
xchg
dec
fldenv
lods
out
std
loope
les
popa
addr16
cmp
hlt
and
jge
inc
inc
fcoms
inc
adc
mov
lock
xor
pop
loopne
sub
mov
sub
or
xchg
dec
add
inc
sti
sub
js
je
stos
push
adc
loopne
jb
push
popa
pop
push
inc
mov
out
ja
adc
popf
xor
or
jmp
sbb
xor
dec
and
cmp
and
rclb
and
mov
lret
in
imul
mov
lret
mov
add
popl
inc
xor
pop
xchg
aaa
pop
lcall
jle
shr
ljmp
mov
push
dec
fistpll
les
xchg
cmpsb
sub
adc
mov
in
or
adc
sbbb
nop
hlt
nop
shlb
cwtl
stos
lret
adcl
xor
inc
xchg
inc
jae
inc
sub
imul
push
inc
dec
push
test
or
cmp
xchg
fidivrl
test
mov
inc
inc
sbb
adc
or
jb
mov
or
add
clc
mov
mov
mov
je
lcall
pop
mov
loop
pop
cwtl
sub
push
test
mov
adc
inc
sbb
lahf
mov
mov
sbb
sbb
cmp
je
cmp
adcb
and
jle
xor
mov
sbbl
loope
push
dec
or
pop
cmp
std
cmpsl
pop
divl
and
sub
mov
pushl
add
jno
neg
jg
and
mov
stc
mov
imulb
and
dec
push
ret
mov
in
testb
or
sbb
or
and
push
push
sub
xlat
inc
cwtl
loop
mov
sbb
cltd
out
pusha
inc
dec
sbb
dec
aad
push
imul
loope
sbb
lods
movsb
mov
stos
movsb
dec
adc
stc
rol
shlb
sub
mov
out
pop
repz
jle
jle
adc
imul
sbb
mov
jo
lcall
mov
shr
xor
mov
into
popa
push
pop
iret
mov
xor
scas
xchg
loope
out
mov
pop
cmp
cli
iret
cmpsl
pushf
stos
sub
add
xor
cmp
out
inc
adc
jge
xor
pop
pop
pmullw
andl
pop
push
fsubr
inc
dec
mov
fdivs
jb
leave
sub
jle
jb
mov
xlat
rol
lock
jecxz
gs
mov
inc
mov
fwait
call
shlb
jl
dec
pusha
sbb
sarb
mov
sbb
push
ret
mov
dec
mov
jg
stos
adc
arpl
cmp
sub
mov
ljmp
push
cs
cmpsb
fmulp
arpl
jo
into
lret
insl
push
loope
clc
xor
pop
lret
push
jmp
clc
cwtl
test
jns
or
xor
imul
test
aad
popf
adc
fdivrl
jns
sarb
movntps
repnz
dec
adc
ja
pop
xor
popf
fwait
add
dec
in
rorl
out
out
mov
lock
adc
jno
subb
daa
sti
ret
push
mov
jmp
push
outsb
in
lret
lret
loopne
jb
xor
fs
insb
cmp
int
icebp
fcomps
cltd
push
pushf
sbb
fbstp
rcrb
rcrb
fdiv
lret
mov
jl
mov
in
pushf
xchg
fwait
dec
push
test
sub
inc
notb
or
xor
cld
aam
js
sbb
out
fdivl
mov
insl
sbb
jnp
fwait
pop
stos
or
lock
adc
add
rorb
pusha
fwait
cmpsb
das
adc
clc
adc
push
pop
nop
inc
xchg
das
mov
jmp
mov
mov
pop
or
pop
test
daa
inc
mov
daa
fdivrl
inc
xchg
cli
and
mov
lret
sub
in
lret
icebp
dec
push
test
aam
mov
pop
push
bound
xchg
sti
xlat
shr
popa
bnd
clc
shl
das
jne
aad
mov
mov
loop
or
mov
in
pushl
adc
lret
int3
cmp
hlt
hlt
mov
clc
xor
mov
std
popa
xchg
test
cmp
pop
xor
clc
adc
clc
dec
dec
add
insl
mov
mov
dec
lods
adc
add
loopne
sub
sbb
ds
jo
lods
jecxz
cs
jo
push
mov
push
and
insb
adc
dec
leave
pop
mov
cli
dec
xor
add
add
fwait
cwtl
mov
insb
sbb
jno
adc
fcmovnu
enter
data16
inc
and
cld
adc
pop
imul
idivb
mov
addr16
sbb
xor
and
mov
cmc
sub
lahf
es
loopne
push
xchg
xlat
sbb
xlat
mov
dec
subb
mov
inc
cwtl
mov
push
pop
push
push
sub
in
adc
ja
ljmp
pop
jp,pn
jg
iret
jmp
in
cmp
mov
and
aaa
out
pop
sti
repnz
cmpsb
push
xchg
jb
movsl
cmp
mov
fsubrl
loop
mov
sti
jae
subb
movsl
ret
imul
out
fstpl
xchg
dec
push
and
xor
sbb
stos
and
push
lret
mov
mov
pop
movb
add
inc
pop
imul
stos
xchg
js
add
lret
idivl
mov
mull
out
add
jmp
sbb
mov
mov
sub
or
or
in
shrl
push
dec
mov
shlb
pop
mov
das
add
test
mov
mov
jecxz
xor
imul
or
icebp
lret
and
test
aam
pushf
sbb
imul
out
adc
mov
pop
cmp
out
push
pop
push
loope
sub
add
xchg
cmp
fldt
repz
mov
jg
or
dec
pop
insl
fdivrs
leave
jae
inc
cwtl
or
fisubl
inc
setle
jmp
icebp
sub
hlt
in
hlt
sbb
lcall
loop
fmuls
mov
popf
push
push
jnp
push
xchg
pop
repnz
ja
cli
or
shrl
cmpsb
inc
pop
test
stos
mov
icebp
lcall
jae
xor
lret
mov
hlt
adc
push
or
dec
insl
xchg
add
mov
mov
cmp
dec
xchg
adc
out
pop
shll
jge
gs
mov
pop
and
stc
int3
pushf
dec
sbb
mov
fcompl
inc
jno
add
out
mov
cmp
int3
in
jp
loopne
fstps
jnp
dec
pop
add
cmc
sbb
mov
test
push
inc
les
repz
lret
addl
jle
add
mov
xorb
fisubrl
rcrl
loop
cli
adcl
sbb
xor
push
sbb
clc
aas
xchg
iret
inc
dec
push
mov
div
pop
lcall
movsl
push
jecxz
add
add
cmpsb
loop
xchg
sub
push
stc
xchg
sbb
jecxz
mov
sarb
and
sbbb
fucomip
dec
popf
fdivrs
andl
jbe
int3
mov
stc
or
pop
pop
pop
inc
repnz
jmp
stc
adc
cmp
repz
push
inc
push
jnp
sbb
sbb
add
inc
mov
loop
jne
loop
sbb
xor
add
mov
mov
cmp
push
xchg
aas
or
je
repnz
into
fwait
repnz
out
add
loop
cmp
dec
push
fisubrs
cltd
pop
in
push
in
cmp
icebp
pushf
bound
cmp
mov
lds
push
cmp
push
dec
outsb
cmpsl
icebp
sbb
loopne
leave
je
xlat
mov
clc
divb
pop
imulb
lret
mov
pop
mov
aas
xor
mov
mov
mov
add
je
sub
aad
scas
popaw
lods
mov
lahf
mov
xor
imul
and
in
imul
or
or
test
clc
scas
add
fadd
mov
jmp
mov
xchg
ljmp
ficomps
add
cmp
stos
mov
lods
mov
xor
test
adc
lods
inc
mov
jmp
aaa
insb
movsl
imul
jecxz
sub
int3
cwtl
insl
mov
insl
mov
nop
flds
fdivl
push
adc
cli
adc
aam
gs
sub
std
outsb
pushf
push
xor
cmpsb
jl
cmpsb
cli
call
sub
int3
lods
and
mov
in
mov
imul
out
xor
enter
lock
mov
push
push
cmp
or
mov
adc
jae
sbb
sub
xor
inc
nop
sub
jno
pop
mov
adc
push
push
fidivl
in
adc
jnp
test
int
test
leave
xchg
pop
aad
sub
pusha
add
stos
adc
mov
ljmp
mov
addr16
push
add
dec
cltd
stos
mov
test
shll
imul
pop
fsubs
std
xor
push
mov
mov
sti
pushf
inc
adc
fwait
pop
sbb
fdivl
out
loopnew
mov
sub
mov
xor
cli
xor
inc
rolb
sub
mov
xor
cmp
jno
or
pop
sbb
inc
outsb
push
jmp
push
and
pop
mov
pop
mov
gs
push
push
cli
xor
push
xor
leave
sbb
pop
aas
int
jnp
inc
mov
leave
inc
or
scas
xchg
in
push
dec
loope
jl
add
push
inc
xchg
sti
xor
testl
sbb
lret
stos
test
notl
dec
mov
les
adc
adc
xchg
inc
lds
mov
push
das
pop
fs
aad
inc
pop
jle
inc
aas
in
dec
mov
shrl
push
lds
xchg
inc
in
jo
popf
cmp
sub
mov
lcall
std
and
repz
mov
jge
jae
dec
lods
pop
mov
or
je
iret
fwait
cmp
sarl
sbb
jnp
arpl
sub
movsb
fiadds
cmp
or
scas
data16
lds
popa
dec
inc
orb
cmpsl
cmp
out
push
sbb
fisubl
ss
iret
call
cmp
xchg
mov
inc
sub
xor
data16
test
sbb
cmp
mov
out
add
ret
push
int3
sub
cmp
addr16
fadds
xlat
pop
enter
jp
aad
mov
mov
add
inc
hlt
and
aad
mov
and
nop
push
mov
pop
mov
mov
cmpl
pop
insl
incl
sbbb
and
int
dec
lcall
pop
inc
mov
lds
push
fwait
iret
dec
and
push
xor
adc
xchg
sarl
jl,pt
sub
pop
cmc
fisubrs
pop
sub
jmp
fwait
leave
fidivrl
dec
inc
push
add
cmp
es
jo
xlat
sbb
lret
dec
daa
das
xchg
cmc
pop
push
add
incb
pushl
pushf
sbb
insb
jle
fisubrs
dec
scas
lret
insb
mov
mov
aam
inc
sti
jno,pt
inc
jns
jne
sub
addr16
hlt
push
aad
mov
adc
data16
pop
mov
mov
int
idiv
mov
psubsb
push
ficoms
out
mov
ljmp
outsl
pop
adc
ffreep
in
mov
mov
mov
aam
nop
dec
dec
cli
repz
ljmp
jl
sti
les
jns
mov
and
pop
mov
push
pop
push
lock
mov
pop
iret
mov
push
insl
sahf
fwait
ret
mov
add
int3
push
fcoml
lret
fidivrs
sbb
mov
lret
movsl
jb
in
adc
scas
mov
out
in
add
stos
adc
mov
xchg
aad
test
test
shr
fwait
cmp
jae
std
pop
mov
jo
adc
in
push
add
dec
push
inc
cmp
mov
js
mov
call
out
bound
popa
int3
fwait
pop
mov
dec
repz
fwait
add
cmp
mov
push
into
sub
fwait
jmp
sub
es
lcall
subl
sarl
and
lret
aad
xchg
dec
data16
aaa
mov
inc
stos
dec
cmpsb
scas
push
push
shrb
pop
pusha
lsl
jbe
pushl
cmp
cmpsb
xor
mov
push
pop
mov
and
pop
mov
adc
inc
fisubl
fcomip
lcall
popa
cmpsb
inc
jg
push
test
js
sbb
fistps
jae
or
shrb
inc
repnz
aam
mov
mov
dec
jecxz
int3
pusha
cmp
sahf
daa
shlb
test
pushf
or
adc
shll
js
pop
dec
test
cmpsl
dec
out
mov
ret
fcomi
ss
pop
ficomps
push
sbb
adc
sbb
stc
jecxz
mov
ret
jns
pop
mov
dec
pop
out
sarl
xchg
and
sub
ss
xor
mov
dec
imul
jbe
mov
dec
rcll
clc
add
add
or
sbb
mov
mov
pcmpeqd
cmp
test
mov
ret
or
or
jne
repz
sub
inc
jnp
icebp
add
jnp
xchg
push
negl
sub
cmp
mov
add
jae
jnp
cmp
mov
int
mov
scas
pop
dec
movsl
mov
push
cli
into
jo
mov
xor
pop
jns
pop
adc
cmc
mov
not
sub
scas
pushf
dec
outsl
inc
jg
mov
adc
xor
jns
jmp
cmpsl
jecxz
rorb
roll
and
push
mov
arpl
scas
ja
add
xor
and
cmp
shll
or
sub
test
call
jne
cs
and
mov
dec
cmp
icebp
sbb
loop
subl
arpl
xor
leave
daa
mov
lods
out
push
aad
xchg
scas
push
adc
je
pop
add
add
cmpsl
pop
mov
lods
rcrl
add
inc
xchg
mov
lods
out
xor
dec
cmpsl
pop
adc
adc
xor
arpl
sub
in
mov
popf
dec
and
pop
cmpsb
dec
cmp
aaa
call
sbb
mov
sbb
push
sub
stc
mov
mov
jecxz
ret
ret
imul
imul
push
sti
sarl
mov
cmp
movsb
or
push
imul
lds
shrl
fimuls
bound
gs
jge
test
mov
mov
and
or
insb
dec
and
jns
pop
nop
cmpsb
push
xlat
jno
sub
jb
pop
subb
sub
mov
out
pop
mov
sub
or
mov
cmpsl
lods
ret
jbe
in
sbbb
sub
sub
cmpsb
inc
loope
lcall
addb
xor
sbbb
dec
cmp
fs
inc
call
psubd
mov
in
mov
push
lret
stc
aaa
les
jle
and
xor
out
mov
sub
push
mov
cltd
cmp
lret
and
test
in
inc
dec
fimuls
mov
pop
test
pop
jmp
xor
and
xchg
dec
aas
inc
pop
pop
inc
test
pushf
cmp
dec
addl
fimuls
push
lret
pop
das
clc
add
mov
testb
add
xorl
jmp
inc
mov
add
add
mov
or
add
pop
adc
ret
push
clc
popa
lods
xchg
xchg
stc
or
xchg
ds
push
dec
jnp
pushf
lret
cmp
mov
test
aad
dec
fucomip
pop
sbb
jae
repnz
ret
pop
cmp
dec
movsb
ja
ret
bound
mov
cmp
dec
mov
mov
in
mov
inc
xor
xor
push
jg
es
outsb
fstpt
add
gs
mov
xor
push
pop
ret
mov
les
cmp
popa
cmc
push
int
rcr
into
jge
clc
popf
cmpl
xor
jp
pop
ds
push
mov
mov
xchg
add
rcl
dec
xor
dec
outsb
fidivs
maxps
ret
stos
insb
lds
gs
aaa
popf
test
and
pop
cmpsl
lret
repnz
mov
xchg
daa
push
push
test
pop
ret
pushf
mov
mov
pop
dec
shrl
aad
mov
pop
cmc
daa
push
sar
mov
mov
mov
ds
js
mov
pop
jl
add
add
aad
xor
jns
mov
jg
push
cli
popf
xlat
sbb
cld
jmp
dec
cmp
inc
jae
movsb
mov
out
mov
shrb
jae
pusha
and
adc
sbb
popf
sarl
movsb
popa
rol
pushf
stos
mov
sbb
cwtl
fmulp
xor
ss
mov
movsb
dec
lds
lahf
or
lcall
stos
push
out
int3
inc
jbe
roll
xor
daa
cld
loope
xor
repnz
bound
test
inc
inc
or
jp
sbb
push
insb
push
jbe
shlb
dec
das
pop
fbstp
add
clc
popf
and
adc
jae
or
sbb
out
lock
loop
out
pop
xor
or
lds
sbb
je
sbb
cmp
les
mov
pop
push
loope
cmp
loope
xchg
inc
sub
jae
mov
lahf
pop
inc
test
pop
inc
clc
popl
cmpsl
loopne
loopne
std
cld
mov
shl
rcrl
jle
nop
inc
lods
out
xchg
sbb
aas
lds
mov
test
std
jmp
sub
xchg
xchg
ficompl
mov
jno
lods
push
xlat
adc
adc
pop
pop
inc
pop
dec
jge
mov
add
or
stc
sbb
out
jb
subb
push
jno
mov
mov
push
xchg
pop
sub
add
dec
xor
xchg
pop
adc
pop
xchg
jo
fisubs
lret
scas
sbb
shr
addr16
popf
sahf
push
add
mov
dec
jle
mov
or
add
push
pop
push
rcll
inc
addl
hlt
lahf
fs
pusha
jecxz
sub
cmpb
enter
jecxz
adc
insb
jne
lret
dec
cli
jae
ja,pn
rcll
mov
lods
rclb
shl
pop
or
cmp
jns
daa
into
or
sar
daa
xchg
xor
mov
push
rcr
xchg
fadds
jl
aam
mov
addl
sbb
vbroadcasti64x4
lock
daa
jnp
xorl
or
mov
or
cmp
or
xor
mov
push
pushf
fnstsw
pop
outsl
jmp
mov
mov
mov
call
aas
ret
and
add
imul
xchg
pop
sub
loopne
loop
mov
leave
mov
sub
mov
mov
xor
addb
shl
jo
add
mov
stos
imul
adc
out
push
iret
mov
jge
in
jl
pop
rol
fwait
movsl
push
mov
leave
jg
or
xchg
fiadds
sbb
cwtl
pop
mov
shll
pop
sub
cltd
lahf
data16
xchg
pop
mov
add
orb
sub
pushl
mov
add
and
daa
test
in
add
mov
lahf
sub
jo
mov
push
push
pushf
scas
inc
fdivr
dec
inc
adc
mov
test
mov
mov
xchg
daa
clc
adc
test
insb
stos
fidivl
ja
ret
loop
sub
shll
xchg
ret
push
pop
cmp
fistl
lods
xchg
jecxz
ja
aaa
sbb
clc
arpl
cmp
add
test
ja
jno
or
addl
push
fdivl
clc
jae
arpl
or
pop
testl
insl
lret
addr16
mov
ljmp
push
popf
ljmp
sti
inc
jmp
adc
sub
js
sbb
sbb
cltd
xor
mov
mov
outsb
adc
aas
into
or
mov
push
sti
dec
push
scas
inc
jno
jae
inc
mov
int
jge
out
dec
fwait
or
loopne
mov
jmp
fdivrl
lcall
mov
and
push
inc
adc
scas
mov
push
xchg
add
lock
jae
ficompl
mov
shr
push
scas
sub
mov
xor
mov
pop
cmpsb
enter
adc
jmp
loop
aam
cltd
xchg
ret
mov
rcrb
and
xor
test
in
sarb
push
mov
pop
add
pop
cmp
or
push
imul
daa
test
or
jmp
mov
inc
and
xlat
sahf
jbe
or
dec
xchg
mov
das
mov
inc
jg
enter
hlt
call
cmp
addr16
clc
movsl
movsl
push
cmpb
xor
addl
push
stc
push
or
pop
sbb
add
inc
mov
inc
xlat
xchg
clc
leave
testb
dec
insb
dec
sub
cmp
addr16
jnp
aas
lret
std
shrl
sub
mov
mov
ret
jge
pop
and
arpl
cmp
js
lds
dec
add
xchg
dec
jo
push
orb
push
sub
cwtl
push
pop
jae
jo
jns
lods
flds
push
js
add
sbb
mov
int3
sub
or
movsl
or
add
das
mov
push
aad
lret
jg
test
in
popf
dec
add
push
dec
mov
mov
xor
int3
jle
insb
dec
mov
mov
pop
leave
mov
inc
stos
lcall
or
xor
rorl
adc
and
mov
dec
dec
leave
popa
xchg
rcr
scas
cmp
mov
pop
xchg
lahf
cmp
jge
pop
adc
xchg
push
inc
cli
dec
loope
mov
lcall
or
sub
lods
dec
jne
mov
fwait
push
cs
push
mov
in
out
xchg
adc
repz
push
and
pop
ror
cwtl
mov
in
push
jo
sbb
pop
xchg
pop
fsts
mov
jae
sbb
addr16
cmp
xchg
sbb
ret
mov
push
or
or
add
test
clc
push
sub
push
jmp
test
out
movsb
repnz
push
test
subb
ja
xchg
inc
nop
mov
sub
fs
cmc
ss
inc
addr16
mov
jecxz
lret
sub
inc
loop
xor
lret
mov
js
clc
sub
mov
js
add
into
dec
mov
sti
add
sub
pop
test
ljmp
mov
mov
jle
mov
aas
jp
bound
inc
sbb
aad
mov
inc
subl
mov
or
lret
gs
stos
imul
sbbb
xor
dec
or
dec
mov
cmp
add
add
cmp
cld
fnsave
jge
pop
xor
jl
dec
mul
cmc
sub
adc
jnp
xor
insl
dec
add
cmp
xchg
cmp
unpcklps
fldcw
sbb
or
cwtl
je
add
xor
fsincos
add
insw
jmp
cmp
jmp
sarl
sub
out
dec
sarl
or
cltd
and
aas
lret
jmp
dec
aad
or
shll
jl
or
repnz
or
push
jno
icebp
xchg
push
pop
dec
int
cmp
xlat
movsl
shrb
push
mov
dec
cmp
ficoms
pop
dec
lahf
push
cld
fldcw
lods
mov
jo
leave
popa
ljmp
adc
or
cli
xchg
data16
mov
xchg
mov
dec
lods
pop
out
cltd
dec
icebp
inc
ror
adc
cmpsb
xchg
movsl
test
jmp
sbb
xchg
movsl
stos
sti
jae
imul
dec
hlt
mov
jmp
sub
jg
inc
jp
push
push
adc
adc
push
lods
popa
ss
cmpsl
jne
pop
dec
cmp
and
outsl
dec
mov
ja
iret
pop
sub
adc
clc
pop
andb
fcoms
fmul
mov
pushf
push
xchg
jo
imul
inc
into
jae
in
inc
jle
mov
sbb
mov
xchg
out
mov
jno
sub
in
enter
movsl
mov
aam
cltd
ja
cmc
jmp
cltd
mov
sub
push
and
inc
shlb
rclw
fimull
mul
push
mov
sarl
lahf
leave
std
shlb
inc
pop
push
push
nop
dec
out
insb
aam
and
stos
dec
cmc
pop
iret
dec
add
cltd
jnp
sbb
rcl
mov
cwtl
jg
mov
sbb
xchg
rorl
push
and
scas
mov
cmp
and
push
insl
dec
sub
sub
test
xchg
lds
movsl
sti
daa
insb
in
cmpsl
xor
sbb
jg
xchg
push
cmp
pop
mov
std
ljmp
add
lods
and
es
loop,pn
inc
ret
jge
jmp
aaa
movsb
stc
dec
in
add
add
add
mov
movsl
push
push
mov
mov
mov
aam
or
mov
pusha
filds
xchg
aaa
lods
js
push
sarb
cmp
gs
shl
inc
int
cmc
int3
lret
or
stc
push
arpl
jae
push
stos
and
xor
xchg
stos
or
mov
dec
mov
jle
mov
ja
cmp
xchg
sub
mov
add
mov
orl
ror
pop
ja
jle
or
lahf
nop
jns
jl
mov
mov
cltd
ret
push
sbb
cwtl
loop
push
lock
jns
push
cmc
pop
push
bound
inc
pop
jp
addr16
jo
mov
adc
ret
jne
push
dec
xchg
add
gs
lahf
fld
cmpsb
div
lock
mov
lret
or
aas
inc
inc
rorl
int
or
iret
xchg
cmp
jge
and
loop
sbb
push
pop
mov
mov
ds
out
rcl
cmp
mov
and
jge
lret
jecxz
mov
popf
and
cwtl
adc
out
or
lods
cs
dec
cli
sub
jle
movb
aad
inc
cmp
xor
pop
dec
hlt
ss
test
mov
es
adc
outsl
add
mov
cltd
mov
mov
lods
push
pop
xchg
fcomps
addr16
mov
mov
in
mov
mov
cmpsl
xchg
cmp
inc
outsb
dec
sub
xorb
sbb
rorl
pusha
dec
cs
sub
mov
jns
mov
xor
xor
cmpsb
jae
adc
popf
ret
mov
cli
inc
jnp
and
add
cmpsl
jge
leave
pop
movsb
ja
sub
lahf
dec
iret
sbb
std
inc
lret
insl
sbbb
xlat
pop
fistps
das
cmp
inc
push
dec
sub
cld
cmp
push
push
shll
jmp
cmp
add
fsubs
scas
ss
mov
xor
and
mov
mov
pop
mov
cli
dec
fidivrl
jae
mov
push
ds
cs
xchg
mov
lea
sbb
test
shr
lods
xor
jns
mov
jle
mov
or
ret
cmp
lea
inc
sar
mov
inc
sub
rcll
sub
cmp
out
je
sub
pop
icebp
lods
push
rol
in
loop
clc
xchg
fmull
pop
clc
imul
push
xchg
or
push
fs
cmp
pop
pop
stos
sub
xor
push
in
and
or
pop
sub
or
pop
mov
lcall
fnsave
cmp
adc
mov
movsb
insb
rcll
pushf
rcr
mov
and
adc
mov
jp
mov
js
sub
mov
pop
movmskps
ds
jae
sub
pop
jp
pop
lret
cld
cmp
dec
lods
sbb
sbb
pop
push
lcall
adc
mov
lret
mov
fcompl
ficomps
cmp
lcall
mov
adc
cmp
into
jmp
imul
jo
dec
insb
mov
jns
aaa
inc
clc
popa
sub
xchg
roll
lods
aad
gs
adc
scas
inc
outsb
lahf
xor
testl
hlt
mov
push
fs
inc
push
fdivr
inc
inc
push
loope
ret
shll
aam
dec
repz
ja
je
ja
lret
push
out
rorl
and
mov
jmp
loop
adc
jp
adc
pop
mov
push
fs
fnstenv
test
rcl
setge
cli
pop
pop
lahf
xchg
sahf
or
push
pop
mov
mov
out
adc
mov
in
or
adc
jg
dec
mov
xchg
mov
je
adc
lea
mov
arpl
add
or
mov
mov
test
push
sti
mov
jae
push
fcmovu
sahf
jns
push
js
cli
lret
push
mov
push
out
lea
int
jmp
add
jg
mov
ss
and
adc
ficomps
mov
test
fbld
sbb
sbb
pop
in
sub
lret
adc
sbb
sub
gs
cmpsl
in
push
pop
adc
fists
dec
repz
negl
push
inc
rcrl
and
fimull
add
movsl
adc
sti
stos
mov
mov
test
push
dec
and
add
inc
xor
fwait
inc
jb
fisubrs
fists
adcl
addl
sahf
cwtl
push
jg
xor
mov
lds
clc
sbb
into
std
lea
xor
push
je
fnstenv
cmpsb
push
sbb
and
dec
mov
repz
popa
int
in
pusha
xchg
adc
addl
enter
mov
pushf
es
out
call
mov
pop
cmpsl
adc
fwait
xorl
lret
dec
bound
dec
nop
pop
add
and
lds
das
js
push
bound
fldl
nop
mov
negb
inc
inc
and
andl
decl
loopne
pop
jmp
add
push
ret
mov
mov
xchg
mov
int3
sti
ds
lahf
sub
xchg
or
rcrb
adc
push
jb
push
sub
dec
sub
xor
push
insb
mov
xchg
dec
pop
cld
mov
lcall
dec
sub
pop
adc
dec
dec
lret
or
add
adc
push
sbb
or
int3
xchg
dec
imul
sub
mov
roll
or
inc
or
in
lcall
xchg
sub
push
push
pop
enter
jg
jle
out
sub
icebp
mov
inc
pop
or
insb
cli
mov
shl
cwtl
add
or
cmc
lock
jge
jo
sbb
push
sbb
js
xchg
daa
imul
dec
and
xor
or
loop
sbb
sbb
push
add
add
insl
xor
sbb
mov
mov
xchg
movsl
lahf
fstps
shll
lock
jmp
inc
or
inc
sub
dec
cli
std
inc
stc
pop
int3
pop
cmc
daa
xchg
in
enter
loopne
ljmp
lret
in
into
xor
mov
pop
sbb
outsb
and
outsb
adc
stc
mov
insl
push
pusha
push
add
sub
imul
test
pop
jge
les
mov
ret
mov
cli
pop
sub
mov
xchg
sbb
mov
loopne
mov
ja
mov
int
adc
or
adc
pushf
mov
add
loope
mov
in
lret
in
stos
jmp
scas
pop
or
dec
imul
cwtl
push
mov
std
imul
popa
stc
pop
jno
push
inc
addl
sub
cmp
mov
sub
out
cli
xor
sbb
mov
fwait
sub
sbb
test
jle
lret
push
and
xchg
jbe
call
mov
fnstcw
ja
stos
jge
ror
sub
jbe
cmpsl
add
adc
xchg
push
xor
inc
cmpsl
pusha
xorl
or
rol
mov
mov
jns
jns
mov
out
out
lock
add
ds
xchg
adc
clc
cwtl
adc
jae
outsl
aad
lcall
je
mov
add
pop
arpl
inc
add
jae
dec
ds
dec
lcall
sub
orb
xor
push
mov
cmpsl
stc
fwait
or
cmp
sbb
out
inc
push
addr16
int
sub
sub
pop
sahf
dec
mov
mov
ret
lods
bound
inc
adc
lahf
push
stos
aas
rolb
jbe
lds
outsl
mov
movsl
into
out
xor
pop
call
scas
sahf
and
cs
fisubrs
ffreep
ret
sub
push
cwtl
in
pop
lock
jbe
jg
jmp
outsb
outsb
xchg
add
sub
in
clc
jno
out
cmpb
mov
dec
pusha
pop
adc
jmp
sub
mov
pop
cmp
lcall
shl
das
adcl
cmp
rcl
dec
mov
mov
in
xor
lock
fsubp
mov
pop
pop
negl
cltd
sbb
jno
mov
xor
dec
push
icebp
loope
or
sub
xchg
mov
test
mov
or
sub
xor
and
in
dec
in
adc
decb
pop
imul
shrb
dec
push
subl
sti
shll
inc
dec
add
or
int3
lahf
sbb
or
enter
mov
cli
mov
mov
cltd
lea
lods
lods
xchg
scas
shlb
adc
xchg
and
in
mov
shl
sbb
xor
jnp
popf
jl
into
pushf
sti
adc
ror
inc
outsl
in
shl
inc
test
lret
and
dec
rorb
pop
stc
lahf
mov
fadds
inc
mov
lods
cld
mov
loope
daa
aaa
jmp
sbb
subb
mov
sub
push
sbb
adc
test
std
mov
cmovns
push
mov
dec
test
pop
mov
pop
mov
pop
flds
or
ja
mov
mov
in
popa
cmpsb
lret
xchg
dec
pop
pop
stos
test
push
inc
and
in
xchg
pop
sahf
xor
adc
aad
mov
mov
das
push
push
enter
int3
cmpsl
dec
lods
adc
dec
mov
mov
fidivrs
and
mov
xchg
push
das
mov
sub
xchg
into
imul
test
call
mov
xor
mov
lret
cwtl
pop
inc
jmp
rol
addb
pushf
js
mov
pop
jne
lock
cmp
jne
ss
fidivrl
repnz
shl
or
outsl
inc
jmp
mov
push
cmp
xlat
adc
push
xchg
and
mov
mov
pop
add
push
lea
fwait
mov
ja
add
in
cmpsl
imul
mov
out
mov
inc
mov
mov
ja
mulb
fidivs
pusha
ret
xchg
dec
lahf
outsb
pop
scas
enter
add
pop
es
mov
cmc
ret
xor
fstps
cmp
js
mov
push
push
jbe
xor
xchg
je
adc
dec
cmc
jle
arpl
xchg
add
sahf
scas
fst
pop
jp
push
test
pop
cs
push
cltd
lea
mov
out
stos
int3
mov
pop
sub
shll
sub
sub
xchg
sahf
and
loop
mov
mov
mov
add
shll
sbb
pop
gs
pop
insl
sub
sbb
lock
sahf
orl
and
out
daa
arpl
mov
cli
das
mov
aas
jne
adc
xchg
int3
ds
mov
mov
out
insb
xchg
lret
cmp
cltd
xlat
push
push
and
iret
stos
sahf
nop
xchg
sub
inc
pusha
dec
adc
xchg
daa
jnp
negb
jns
add
pop
inc
mov
push
jbe
aaa
cmp
xlat
les
sbb
mov
cmpsl
jg
mov
shll
scas
shll
gs
shrl
aam
mov
pushf
sub
in
mov
aam
dec
test
lcall
stc
and
shlb
pusha
lret
lret
cmpsb
push
xchg
push
push
pop
or
or
add
sahf
cmp
cmp
fnstenv
xor
and
inc
sub
ret
mov
xchg
push
movsl
popa
addr16
jns
insb
loop
mov
cltd
notb
imul
mov
pusha
cmp
xor
jne
fdivs
cs
enter
popa
push
pop
sbb
and
dec
out
in
xchg
sbb
fldcw
loopne
push
nop
dec
insb
mov
cmp
inc
pusha
and
aas
cltd
push
scas
cmp
sti
adc
push
cwtl
lret
mov
sbb
das
xor
repz
xor
imul
movsb
adcb
out
test
imul
hlt
frstor
mov
pop
les
dec
subb
xor
jmp
out
std
mov
addr16
inc
dec
jl
loope
out
sti
mov
pop
pop
imul
push
insl
jge
or
aam
adc
mov
lret
shl
pusha
xchg
popf
les
push
nop
sbb
fistpl
xor
stc
pop
lret
adc
xlat
adc
or
cmc
out
inc
add
fisttpll
sti
out
stos
sub
out
scas
arpl
xor
rol
lds
leave
fmuls
push
cwtl
mov
shlb
cmpsb
xor
stc
in
cld
jae
dec
js
fldenv
push
mov
es
fsubrs
outsl
js
loope
loopne
jge
xlat
jae
nopl
push
repnz
mov
mov
push
scas
xchg
mov
pop
mov
sub
scas
popa
mov
jmp
lahf
xchg
lock
fstpt
popl
push
adc
cmp
cmp
push
loop
cmc
xchg
pop
popa
clc
aad
mov
mov
ds
mov
jecxz
xlat
inc
xor
mov
dec
nop
push
push
sbb
stos
pop
push
outsb
notl
mov
jle
ja
sub
testl
add
ljmp
or
mov
and
ret
fstps
shrl
outsb
mov
jge
jg
ss
decb
mov
mov
cld
inc
js
ljmp
pop
enter
jp
cmpsl
pop
mov
and
cwtl
sub
test
enter
cmp
les
out
sti
in
jecxz
dec
sub
shl
push
lock
lret
lcall
dec
mov
jno
jl
xor
js
test
sub
out
or
xor
lds
add
in
cs
jp
push
inc
mov
xor
leave
mov
mov
add
pop
cmpb
pop
or
hlt
dec
adc
test
aam
fsts
popf
lcall
test
ret
mov
xor
imul
push
sahf
jo
lea
cmp
dec
rorl
les
mov
cmpsb
lcall
xchg
rorb
lds
ja
sahf
pop
stos
xor
stos
mov
jae
lock
xor
ja
inc
lcall
adcb
fs
add
push
push
or
xchg
dec
cmp
xchg
mov
out
or
stc
mov
push
popf
fnstenv
pop
leave
inc
and
cmp
inc
rcrb
cmp
jns
ljmp
ret
push
nop
and
xchg
cli
fiadds
cmpsb
idivl
mov
push
mov
pop
adc
jne
jmp
inc
dec
and
adc
ret
cmpsb
mov
out
pop
adc
movsl
test
std
cmc
pop
mov
mov
push
cmpsb
shll
sub
imul
daa
pop
sbb
xlat
outsb
test
inc
mov
or
mov
icebp
xchg
cmp
fisttps
mov
pop
pop
add
das
push
adc
lret
jmp
xor
inc
push
out
imul
pop
pop
mov
xchg
pop
xor
pop
mov
xchg
jmp
aas
or
mov
insl
pop
data16
xchg
icebp
popf
inc
lret
in
pop
loop
cmp
sub
js
jbe
cmp
mov
gs
sub
out
mov
sti
mov
mov
push
push
jp
pop
inc
fdivs
decb
jnp
or
imul
dec
push
pop
enter
pop
in
jns
add
jns
push
pop
jno
fistpl
cmpsb
mov
cmpsl
je
loope
inc
es
cli
push
fnstcw
jle
fcoms
xchg
inc
lods
out
mov
call
testl
xor
pop
and
popf
sub
cmpl
outsl
int3
mov
fists
sub
push
out
popf
stos
sub
ficompl
in
mov
icebp
inc
push
mov
je
mov
aas
gs
cmpsb
mov
mov
clc
and
or
hlt
fwait
jg
inc
dec
cmp
orb
mov
xchg
jg
aam
ja
shrl
fcmovne
out
xchg
fucom
popa
sahf
push
sahf
in
aaa
aas
lret
and
outsl
sub
fsubrl
mov
inc
xchg
adc
repz
dec
in
testb
rcrl
int3
xchg
rcrl
push
es
sbb
js
xor
xchg
and
sbb
jle
mov
mov
daa
cmp
ret
stc
xchg
jo
imul
cmpsb
lds
push
cld
insb
sub
jns
insl
loopne
enter
and
sbb
sub
xor
push
dec
int
outsl
add
inc
or
push
jle
sub
leave
insl
xchg
push
int3
test
mov
inc
cwtl
dec
js,pt
out
movsl
cld
sub
lods
pop
loopne
fidivrs
jno
test
jle
nop
outsb
lods
ljmp
sub
mov
out
pushf
lret
sbb
sbb
das
push
scas
andb
dec
xchg
mov
in
pop
pop
lret
jecxz
xchg
xchg
push
or
jle
aam
mov
dec
insb
mov
nop
movsl
cltd
decl
xchg
frstor
arpl
pusha
jne
and
cmovo
mov
dec
lcall
stos
repnz
xchg
jno
push
insb
icebp
insb
push
pop
sbb
mov
aad
adc
push
add
mov
fistpl
orl
cld
cmpb
pop
cmpb
mov
rcl
shrb
sub
addr16
aad
cmp
in
add
or
lds
rcl
mov
jecxz
lahf
mov
in
test
lods
jle
add
inc
fwait
jmp
movsl
xlat
cmp
ja
adc
or
and
dec
je
xor
jns
clc
call
int
sbb
cmpsl
int3
pop
lods
push
ficompl
adc
cmp
pop
enter
repnz
lahf
call
jno
lret
sub
fnstenv
cmp
jbe
push
insl
push
mov
lods
pop
mov
idivb
jmp
pop
dec
lcall
pop
cld
shrl
mov
mov
lcall
xchg
dec
sbb
hlt
out
mov
cmp
xchg
pop
xor
cs
ljmp
cmp
