add
dec
xchg
add
add
add
or
or
inc
mov
add
add
inc
add
add
add
inc
add
or
shrb
add
add
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
inc
add
push
add
add
enter
add
add
add
addb
add
add
adc
inc
inc
or
or
add
jno
inc
add
and
ret
add
add
add
add
pop
mov
and
addb
sbb
add
inc
add
add
add
sbb
push
adc
add
inc
add
add
addb
add
add
add
and
add
and
inc
adc
sbb
add
andb
add
add
add
dec
add
add
add
addb
addb
adc
add
add
test
add
cwtl
add
and
xor
xchg
inc
add
add
sub
add
or
add
add
adcb
nop
mov
mov
xchg
push
sub
iret
les
std
mov
mov
stos
jl
lret
pop
mov
adc
les
push
nop
mov
orl
pop
sbb
xchg
incb
mov
mov
or
lea
sbb
add
and
xorb
xchg
ret
adcl
mov
pop
and
sub
sbb
mov
cltd
xchg
fmul
add
xor
mov
dec
sbb
fcoms
out
xchg
push
and
jmp
ja
push
push
mov
inc
inc
cmc
dec
into
nop
enter
das
stos
ret
repnz
iret
adc
fildl
push
mov
flds
sbb
pushf
jo
jl
icebp
lret
push
and
xchg
mov
pop
mov
les
dec
pop
cltd
inc
xlat
ljmp
push
pop
mov
test
aas
mov
jo
inc
dec
mov
jle
test
push
dec
jp
adc
mov
mov
les
dec
mov
inc
mov
mov
fs
sub
pop
aaa
sar
add
sub
in
pop
ds
les
int
sbb
push
and
clc
ds
in
mov
shlb
mov
das
ljmp
xchg
aas
pop
dec
sub
push
or
inc
ret
fnsave
stos
push
add
ror
sbb
xchg
fimull
pushf
fisubl
movsb
scas
push
sbb
fdivs
iret
cs
xorl
mov
sbb
xor
add
pop
jp
push
and
pop
ret
push
and
add
std
sbb
enter
sub
push
adc
push
in
adc
pop
or
repz
pop
stos
push
and
xchg
imul
or
push
sbb
xchg
add
sti
repnz
mov
arpl
shrl
enter
jle
sub
mov
mov
dec
mov
mov
sbb
jg
decb
sbb
sbb
les
lds
mov
and
rcrl
and
enter
xchg
les
or
push
rcrl
and
cmp
push
and
adc
call
xor
or
sub
clc
and
add
xor
mov
scas
enter
pusha
inc
mov
push
test
jb
push
icebp
and
jb
and
cld
aam
and
sub
lcall
sub
lahf
in
aad
and
dec
mov
and
mov
jecxz
pop
sti
lods
jns
insb
lods
sbb
mov
mov
repnz
xchg
add
aas
in
repnz
int
and
xchg
test
fsubr
lret
mov
ds
into
inc
cmp
ja
rcrb
push
subb
push
and
mov
pop
sbb
mov
fadd
or
xchg
mov
mov
aas
xor
aam
nop
orb
jle
pop
aaa
in
jecxz
enter
pop
icebp
es
push
pop
fstpl
sarl
xchg
out
sbb
pushf
imul
iret
fstps
in
cmp
xor
push
and
std
loop
sti
repz
pop
mov
add
iret
pop
sti
or
push
mov
push
mov
pop
cmp
js
push
lds
sbb
js
xchg
int3
pop
or
out
popl
dec
jo
fwait
adc
and
sbb
adc
jecxz
jecxz
pushf
sbb
js
inc
dec
xchg
rcrl
mov
fidivrl
les
xchg
sbb
daa
mov
fsubrl
and
daa
mov
mov
jle
pop
fsubrl
imul
xchg
rol
push
or
les
dec
nop
incl
mov
push
inc
sbb
sub
das
xlat
cmpsl
mov
and
nop
sarb
test
shrl
shl
xchg
xor
lahf
or
incb
mov
dec
cmp
int
adc
jb
mov
aas
sub
push
and
xchg
lds
and
xchg
les
test
test
scas
arpl
ficompl
scas
ds
xchg
cld
es
les
mov
or
std
xchg
test
and
repnz
bound
adc
test
dec
fwait
ja
mov
loope
cmp
mov
lret
mov
mov
aad
sahf
cmp
add
mov
xchg
les
inc
xor
dec
pop
lds
cmp
mov
xchg
das
xchg
popa
xchg
inc
fadds
sbb
fcoml
in
jg
inc
call
ss
shrl
and
xchg
stos
les
call
sub
and
mov
int3
shl
popf
xor
mov
dec
adc
loope
mov
xchg
jno
jmp
sarb
cmpsl
sub
dec
jae
and
in
loop
in
ljmp
std
lea
jecxz
add
addb
aam
dec
jmp
adc
pop
cmc
cmpsb
mov
cmp
push
lods
movsb
xchg
mov
stc
xor
js
aam
inc
mov
int
add
jns
or
sbbl
mov
add
sub
push
and
stos
push
sahf
out
push
in
int
push
fsubs
sarb
and
xor
xchg
pusha
cli
lea
sbb
mov
cmp
shr
sahf
or
sbb
or
mov
pushf
shlb
movsl
aaa
adc
add
mov
mov
testl
pop
sti
imul
imul
cmp
dec
jp
pop
push
sbb
fsubrl
enter
pop
pusha
adc
jge
out
sbb
mov
stos
sub
or
jae
out
sahf
cld
mov
mov
push
mov
mov
arpl
sbb
mov
sbbb
test
pusha
test
stos
fists
cs
mov
mov
xor
sub
adc
rcll
out
dec
out
mov
sbb
stos
ds
out
xchg
pop
pop
add
les
or
mov
mov
xchg
sbb
push
mov
inc
fsubs
mov
jns
push
xchg
clc
fidivl
and
add
ffree
inc
dec
loopne
jnp
pop
shrb
add
test
insl
cmp
lods
xchg
imul
add
push
mov
inc
mov
adc
dec
addb
test
mov
jns
and
ss
hlt
loop
fisttpl
sahf
push
mov
mov
repz
inc
mov
mov
pop
popf
mov
adc
pop
sub
rep
xor
ss
mov
mov
daa
aam
mov
mov
mov
movsb
sub
arpl
mov
sub
sarl
and
sbb
lods
mov
sbb
xchg
mov
push
sbb
pop
lret
mov
xchg
inc
rclb
dec
les
pusha
mov
movsl
and
sar
cmp
fs
aam
sahf
xchg
jge
push
test
fstpt
fldt
in
and
cmp
repz
aam
psubusw
and
push
out
hlt
cld
jo
xchg
inc
jp
sbb
ja
xchg
xchg
sbb
xchg
mov
and
xchg
loopne
cmp
sbb
pop
cmpb
mov
dec
ja
mov
xlat
xchg
sbb
add
cli
dec
js
daa
mov
add
cmp
stc
mov
jns
daa
nop
adc
mov
rorb
movsb
sbb
iret
cmp
lea
cmp
lea
dec
lcall
xchg
test
or
mov
or
mov
xchg
pop
xchg
xchg
mov
and
stos
out
adc
stc
out
imul
sbb
sub
add
in
inc
test
xchg
push
cmc
and
pop
push
lods
pop
das
xchg
or
call
aam
insb
ja
nop
push
xchg
sbb
sbb
int
out
cmpsl
jno
dec
daa
test
xchg
idivb
in
add
jp
test
mov
loop
insl
es
or
les
cld
scas
adc
inc
xor
inc
pop
loop
jge
in
inc
mov
cmpsb
jecxz
hlt
xor
das
cmp
sub
and
sub
or
lret
adc
mov
push
imul
stos
testb
ljmp
aad
sbb
and
inc
jae
lock
icebp
dec
insl
jae
mov
fsubrp
roll
arpl
or
inc
jbe
inc
adc
mov
shlb
ljmp
fs
loopne
xchg
inc
add
pop
stos
insw
push
push
xor
inc
cmc
pop
dec
xor
leave
pop
fsts
stos
add
lahf
push
xlat
cs
jns
and
jg
and
jl
mov
inc
push
inc
add
fnstsw
push
test
add
in
mov
cmp
or
pop
in
sub
fcoml
aas
inc
inc
imull
iret
mov
xchg
sub
daa
mov
test
data16
sahf
add
mov
loope
inc
jnp
mov
flds
xchg
imul
inc
repnz
add
arpl
inc
or
les
inc
push
and
or
sub
fmulp
in
es
shll
mov
roll
aas
ficomps
mov
leave
movsl
int
mov
popa
aad
mov
jecxz
cmp
adc
int
leave
add
pop
xchg
movsl
lcall
xchg
jp
xor
ds
loop
das
mov
jecxz
push
and
adc
test
repnz
sbb
jo
mov
jp
int3
shl
jns
shll
js
shl
js
rorl
jns
mov
xor
aam
pop
cs
lret
adc
lods
sbbb
mov
mov
or
or
fidivs
cmpsb
cmpsl
pusha
mov
fsubs
gs
fs
xor
lock
test
fs
mov
popa
mov
xor
in
sub
cmp
fisttpll
or
loopne
pop
dec
xor
push
pusha
jb
pop
shl
lock
ja
daa
push
outsl
inc
nop
pop
jl
pop
dec
insb
xchg
repnz
movsb
popf
mov
inc
popf
add
rolb
sbb
mov
popf
jae
inc
scas
mov
sti
push
test
rcr
mov
mov
xchg
loope
lcall
xchg
or
in
sub
adc
lret
push
je
stc
xor
test
xlat
xor
mov
xchg
movsl
and
cwtl
movsb
faddl
fnsave
xchg
jmp
fwait
inc
sub
add
sub
jecxz
test
movsb
mov
inc
mov
sub
and
movsl
jmp
adc
and
or
sbb
lods
std
mov
inc
mov
sub
movsl
or
cmp
adc
xchg
popf
xchg
mov
ret
inc
je
mov
xlat
aas
pushf
inc
sub
adc
or
sbb
jge
adc
pop
jecxz
add
pop
xchg
inc
xchg
movsl
enter
mov
mov
dec
adc
pop
mov
lods
lcall
sub
inc
push
add
lret
aaa
pop
aad
shll
xchg
mov
inc
shll
inc
or
push
test
or
call
adc
repnz
lea
movsl
or
cmp
loop
in
dec
fcoml
mov
popf
loop
sub
rcl
push
in
mov
dec
xor
popf
shll
or
push
xchg
mov
rcrb
adc
xorl
cmp
sarl
sbb
jae
popf
fbstp
push
and
test
mov
dec
test
add
sub
les
fs
pop
push
inc
push
jmp
push
out
dec
or
cld
fcmovnbe
jle
popf
icebp
add
pop
push
movsb
push
mov
cmp
dec
inc
mov
loope
lods
xchg
in
inc
push
pop
dec
ljmp
popa
roll
xlat
xchg
ljmp
or
push
popf
fldl
inc
test
pop
xor
dec
inc
pop
sub
pop
data16
in
jnp
pop
xor
sti
sub
dec
in
sahf
sbb
mov
push
test
pop
repz
loope
mov
dec
adc
push
dec
lock
dec
or
cltd
movsb
jno
inc
in
sahf
ret
push
push
in
dec
inc
out
sub
mov
test
cwtl
xchg
fs
dec
inc
movsb
jmp
jg
sub
cmpsl
subb
adc
pop
leave
daa
test
pop
adc
iret
out
inc
inc
adc
pushf
add
cwtl
sbb
pop
clc
rclb
sbb
cmpsb
cwtl
pop
dec
test
pop
ret
nop
dec
inc
fs
ljmp
mov
popf
xor
pop
mov
adc
loopne
jns
mov
add
mov
sbb
ss
lcall
sbbb
decb
repnz
mov
mov
shlb
into
xor
loop
sahf
mov
lds
mov
popf
daa
mov
push
jmp
pop
mov
sbb
xor
or
test
mov
movsb
sbb
invd
popf
ss
cli
mov
xchg
jmp
sub
outsl
and
test
pop
lret
scas
pushf
ret
movsl
movsb
pop
or
add
xchg
ficomps
loope
ja
xchg
jne
jge
repnz
xchg
mov
xchg
lds
pop
test
data16
xchg
xor
fstl
test
or
rcr
pop
int3
fsubrl
mov
jb
add
or
dec
movsl
shll
andl
fnstsw
inc
push
in
or
pop
xchg
test
pop
int3
daa
popf
pop
push
imul
mov
push
xor
pop
lock
jnp
sahf
mov
imul
int
ds
out
fistl
into
inc
roll
leave
out
fwait
xor
loope
xor
or
sbb
xchg
lds
bnd
aad
pop
sbb
or
fsubrp
xchg
sub
stos
xor
dec
in
pop
fdivl
scas
fsubrl
mov
rcrl
mov
push
gs
daa
xchg
cmpl
mov
push
and
xchg
stos
adc
push
add
mov
dec
test
test
rol
fidivrs
pop
leave
decb
push
sub
in
jle
out
add
mov
xor
push
or
xor
pop
push
adc
dec
mov
enter
aad
push
in
and
scas
push
add
lret
jb
vpaddsb
cmp
jbe
adc
call
nop
inc
xor
rorl
ret
aad
fadd
xchg
add
jmp
pushf
inc
insb
adc
dec
or
adc
inc
daa
pop
mov
mov
ss
and
notb
les
aas
pushf
adc
hlt
adc
pop
fwait
fs
inc
fs
fmulp
sub
mov
adc
movsl
adc
xor
adc
inc
jecxz
stos
cmp
dec
int
push
shrl
movsl
push
mov
insl
push
test
jmp
out
in
jp
xor
mov
xchg
push
and
add
popf
xchg
xchg
jle
sahf
stos
fs
pushf
addl
pop
mov
addr16
in
aas
lods
adc
mov
and
std
sub
enter
adc
aad
adc
sub
jge
push
jg
pushf
xchg
ficoms
and
sub
aam
add
jbe
out
repnz
shlb
push
out
rolb
pop
sub
sbb
in
add
sub
call
sbb
xchg
loope
add
add
push
sahf
xchg
push
gs
mov
nop
sub
or
test
in
les
mov
test
adc
xor
pop
cmp
sub
push
add
add
jmp
je
push
movsl
push
in
mov
mov
push
sub
adcb
pop
lcall
shlb
adc
and
lds
rcrb
xor
sbb
sbbb
sbb
sub
fadd
movsl
stos
loop
fistps
loop
stos
test
xchg
adcb
shr
inc
adc
cwtl
movsb
pop
pop
inc
or
jle
jno
xor
in
and
neg
daa
xchg
lcall
lahf
loopne
add
and
cld
bound
lds
dec
mov
repz
into
dec
pop
push
add
shlb
loope
jb
and
in
gs
add
xchg
stos
ret
or
insl
sbb
mov
xchg
les
in
fisubl
in
movsl
clflush
mov
xchg
sub
push
movsb
out
xchg
push
fwait
repz
cwtl
in
cmpsb
cmp
xlat
inc
pop
and
sar
push
jle
repnz
daa
xchg
and
repz
dec
enter
icebp
daa
push
xchg
insb
lds
xor
leave
add
out
cmp
gs
push
inc
mov
mov
test
add
in
cmpsl
push
movsb
jl
lret
movsl
enter
mov
frstor
cmpb
lret
push
and
rcrb
call
ja
dec
out
inc
fcompl
repnz
adc
fcomps
fs
add
adc
out
pop
sub
xlat
sbb
push
push
xchg
and
or
mov
lea
adc
sbb
daa
cmp
xorb
adc
and
cs
fnstsw
fidivl
sbb
pop
scas
sub
xchg
xor
mov
sbb
out
inc
xchg
clc
stc
xor
mov
inc
aad
fwait
pushf
dec
add
rorl
inc
pushf
jle
out
gs
les
add
fistps
inc
ss
int3
js
dec
adc
fistpl
fs
mov
shll
aaa
arpl
rorl
fs
push
push
push
mov
xor
repnz
cltd
rcrl
jns
xchg
sub
dec
adc
fiadds
cmp
sub
cmpsb
sbb
xchg
daa
fsts
icebp
movsl
cmp
adc
cmp
xchg
xor
and
cs
test
outsl
mov
movsb
movsl
xchg
les
fldl
insb
fiaddl
das
cmp
dec
repnz
mov
push
pop
int3
in
insl
aam
inc
repnz
aad
cmp
jb
mov
mov
in
jbe
xchg
xlat
int
cvtps2pi
enter
push
push
iret
adc
xchg
les
lods
insl
fildll
inc
dec
pop
lret
mov
add
push
into
xchg
movsb
push
add
adc
xchg
in
push
xchg
and
lds
sub
fildl
pop
in
push
cmp
mov
and
orb
mov
add
cmp
shll
and
push
in
in
filds
sbb
xor
push
lds
inc
in
in
in
push
movsl
push
loopne
out
push
imul
sbb
mov
dec
test
in
inc
outsl
popf
ljmp
shrb
mov
mov
add
xchg
leave
inc
popf
nop
xor
push
inc
dec
lahf
jns
repnz
pop
and
mov
or
ljmp
pop
rcll
popf
and
xor
push
das
pop
negb
imul
or
movsb
xchg
and
jae
stos
xchg
xchg
and
imul
or
adc
vpaddd
xchg
ja
test
adc
pop
or
movsl
pop
push
push
adc
and
mov
pop
negl
cltd
inc
or
adc
lahf
rorl
fwait
mov
push
test
or
adc
iret
push
cmp
xor
inc
cmpsb
inc
adc
mov
fsub
adc
and
dec
aas
mov
mov
int
adc
aad
sbb
in
data16
inc
shrl
insl
dec
push
inc
sbb
into
adc
sbb
pop
inc
add
jbe
and
or
std
sbb
cmpl
push
fidivs
aam
pop
loope
xchg
xchg
in
add
mov
mov
push
inc
and
jp
roll
jmp
jbe
pop
xchg
jne
push
and
add
adc
push
movsl
or
test
roll
call
jmp
sub
mov
leave
repz
fisubrs
mov
xchg
in
test
xchg
popf
addr16
inc
xchg
gs
xor
fnsave
inc
cmp
mov
jb
test
pop
fisubrs
lahf
jl
xor
int3
inc
leave
and
pop
pop
fwait
imul
or
cmp
xchg
xor
adc
sub
inc
cmp
push
add
and
in
cmp
jb
iret
je
insl
sti
xchg
xchg
outsb
iret
push
test
pop
andb
xchg
push
and
in
add
mov
pop
fstpl
pop
inc
mov
sti
in
dec
gs
cli
sahf
fdivl
rcrl
pop
insb
leave
dec
stc
out
sub
lret
add
cmp
push
lcall
jae
pop
pusha
shll
pop
std
xor
pop
into
call
adc
call
mov
pop
aam
mov
fwait
cmc
inc
cmp
test
sbb
xor
cwtl
pushf
jp
push
gs
fimuls
push
inc
bound
ror
int3
out
mov
dec
inc
jo
xchg
lds
push
inc
sbb
add
imul
out
adc
add
dec
or
roll
sbb
ja
add
in
sahf
out
adc
cmp
and
loopne
test
int
sahf
sub
and
jl
sbb
xor
and
xchg
xchg
lods
jmp
pop
jp
or
add
sbb
mov
fsts
les
sub
in
fimuls
cmc
mov
mov
add
iret
or
inc
lahf
jmp
xchg
inc
pushf
loopne
cwtl
pop
lock
sbb
xchg
lcall
addb
or
addr16
lcall
xchg
xor
sahf
stos
orb
push
pop
in
scas
pop
cmp
inc
cmp
adc
inc
ljmp
pop
mov
fisttpll
jg
movsb
adc
ret
and
ljmp
cmp
xchg
scas
roll
ret
mov
jno
ljmp
in
ds
xchg
mov
lds
inc
push
sarb
out
push
lret
test
or
push
mov
out
popf
dec
adc
aam
cmp
pushf
mov
std
popf
aad
popf
popf
jno
iret
or
inc
sbb
ficoms
add
cmp
inc
test
cmp
add
push
rorb
std
fnsave
imul
aaa
in
mov
push
mov
fsts
mov
sbb
rcl
ds
push
sub
out
adc
test
add
dec
in
fidivrs
adc
test
xchg
leave
roll
cmp
adc
sbb
sbbb
bound
rorb
aam
ret
inc
dec
faddl
xchg
pushf
xchg
repnz
stos
add
aad
xchg
and
inc
imul
push
or
lret
ret
mov
push
cmpsb
or
dec
fcoml
or
fucomi
call
jge
push
daa
sbb
mov
std
popf
rolb
sub
and
or
std
xor
out
inc
sahf
lcall
and
in
fidivrs
test
dec
or
cmp
aam
mov
hlt
push
pop
sbb
mov
pop
jmp
out
xlat
adc
pushf
push
in
pop
imul
sar
cmp
pop
mov
mov
mov
xchg
lds
decl
push
jmp
mov
dec
mov
sbb
iret
movsl
mov
test
test
mov
pop
fistpll
sbb
inc
cmp
dec
sbb
test
int3
inc
cmp
xchg
mov
in
les
add
add
mov
fadd
jmp
jnp
sub
xchg
rorb
mov
frstor
jle
and
sbb
lds
adc
fwait
mov
inc
insb
repz
test
or
push
stos
test
xor
sub
out
subb
or
movsl
adc
push
movsb
mov
insb
cmp
lods
add
sub
xchg
pusha
sub
mov
pop
cmp
push
test
ss
mulb
xchg
dec
inc
fs
faddp
sub
ret
call
mov
push
stc
fwait
push
gs
mov
ss
rolb
out
push
bound
leave
aam
pop
fxch
sub
xchg
test
in
ds
out
xchg
xor
push
movsl
mull
dec
and
push
jp
mov
cmp
gs
mov
stc
xor
popf
push
arpl
jp
jle
rorb
xor
movsl
fmull
xlat
sub
mov
pop
adc
popf
leave
in
pop
inc
andb
xchg
aaa
xchg
pop
push
xchg
fsubl
out
or
mov
lds
arpl
add
mov
mov
jne
sub
loope
ds
imul
sbb
dec
add
test
xchg
lods
jp
loopne
xchg
sbb
cmpsl
pop
movsl
enter
pusha
lahf
sbb
insb
mov
pushf
mov
jle
push
in
pop
pop
adc
adc
and
inc
fists
enter
and
sbb
mov
push
in
add
sti
inc
into
test
cmp
aad
push
in
inc
fistps
leave
xlat
aaa
mov
test
lret
and
or
popf
xlat
mov
xchg
push
in
jle
sub
cli
aas
pop
mov
imul
jae
fildll
xchg
pop
fists
sub
push
lret
jns
test
xchg
divb
rcrl
ja
push
movsl
push
lcall
es
movsl
daa
leave
cmp
push
loopne
movsl
mov
pop
fistpll
in
fimuls
and
adc
loopne
dec
pushf
fcompl
test
into
in
pop
out
or
lahf
jl
ficomps
mov
nop
dec
aad
cmp
nop
andb
roll
or
movsl
jl
xchg
pop
jg,pt
and
aam
in
movsb
subb
inc
dec
dec
push
jmp
push
addr16
push
ss
xchg
gs
push
outsb
sbb
popf
lds
xchg
test
push
js
push
fcomps
xlat
mov
cmp
inc
aas
or
cmp
aas
shrb
push
in
xchg
mov
test
or
mov
push
xor
jl
fisubl
push
xchg
and
push
inc
push
adc
jmp
mov
add
jp
movsb
cmp
cmpsl
sbb
test
push
test
inc
or
jnp
adc
test
adc
dec
fs
xor
sbb
xchg
mov
cmp
adc
sub
xor
mov
movsl
mov
sbb
mov
test
mov
in
cli
popf
adc
dec
inc
xchg
add
cmp
arpl
call
int
mov
mov
xchg
loope
addr16
cmpl
sub
add
or
add
inc
cmp
and
or
push
inc
mov
mov
cmp
inc
test
xchg
jmp
subl
pop
xorl
aas
in
mov
ds
aad
cmp
and
xchg
or
pop
repnz
mov
pop
adc
lea
jne
pop
pushf
aad
pop
or
or
inc
iret
mov
cmpsl
push
in
scas
in
movsb
jae
push
xchg
push
push
nop
push
test
pushf
inc
push
xchg
outsb
push
xchg
pusha
dec
add
jmp
xor
rclb
ja
popf
repz
xchg
testb
mov
jns
push
repz
lret
movsl
out
enter
fisubs
inc
jnp
or
pop
imul
jno
pop
mov
mov
inc
dec
xor
pop
in
orb
ds
mov
sbb
mov
dec
add
flds
sbb
xchg
mov
dec
jb
cld
nop
dec
cmp
loope
xchg
call
and
cli
es
lds
add
enter
xchg
or
xchg
dec
push
pushf
sbb
add
push
movsl
push
or
out
jecxz
jmp
pop
iret
call
arpl
pop
dec
shl
pop
jmp
test
call
sub
cmp
push
movsb
push
inc
iret
mov
jecxz
into
and
in
loope
movsb
jl
enter
shrl
mov
dec
adc
cmp
cmpsl
pop
int
les
push
test
stos
pop
addr16
inc
push
inc
dec
dec
or
adc
jno
push
dec
inc
mov
or
adc
xchg
jle
cmp
fisttpll
loop
push
sbb
xchg
xchg
in
sahf
pop
mov
or
xchg
push
jmp
sbb
push
inc
xchg
inc
or
int3
or
mov
test
in
pop
inc
jb
pop
test
loopne
and
mov
fucomp
jo
cmp
xor
stos
xchg
mov
jns
xor
jle
mov
sub
pop
adc
movsb
cwtl
sub
test
xchg
sbb
and
xor
imul
jecxz
add
sbb
mov
sbb
mov
xor
ficoms
rol
arpl
jle
popa
add
mov
push
lds
mov
adc
xchg
in
scas
mov
jb,pt
push
jmp
or
fsubrp
shrl
stc
sbb
pusha
int
enter
mov
xor
out
sbb
mov
xchg
and
fwait
mov
mov
mov
dec
jb
adc
adc
shll
mov
fwait
and
lret
mov
ret
push
add
jne,pt
test
scas
loope
cwtl
xchg
add
int3
call
mov
ja
add
ljmp
jp
jno
cmp
jmp
lret
gs
imul
out
sub
and
leave
add
adc
pop
jle
loope
xchg
sub
push
test
cmpb
rcll
lds
iret
fwait
and
sbb
mov
dec
rcr
iret
inc
jp
and
pop
fmul
sahf
pop
xor
es
xchg
adc
adc
cmp
mov
push
gs
scas
popf
mov
iret
rorl
or
lahf
jno
dec
dec
jbe
fwait
popf
xchg
pop
test
out
inc
repnz
icebp
rcrb
popf
jle
push
fistps
push
lahf
xchg
mov
push
add
pop
iret
repz
leave
mov
in
and
pop
and
or
daa
mov
push
jmp
cwtl
in
sub
in
aaa
push
movsb
in
jbe
mov
fst
rolb
adc
adc
adc
mov
fwait
pop
jno
imul
ljmp
test
cli
xlat
inc
jnp
mov
fisubs
notb
dec
test
sub
push
xor
inc
lock
inc
out
sub
adc
xchg
loope
imul
adc
aaa
jmp
lods
pop
push
dec
add
dec
xchg
call
mov
gs
lahf
adc
xchg
add
sahf
mov
push
dec
sbb
xor
dec
les
and
loope
lcall
mov
jge
adc
pop
imul
jmp
xlat
add
add
inc
rol
dec
and
pop
into
fistps
cmp
jo
int
in
in
scas
in
jno
pop
loope
xor
xchg
and
stc
sbb
and
pop
int
pop
lcall
push
test
stc
cmp
in
add
jge
repz
sbb
adcb
or
and
add
push
loope
dec
pop
in
std
or
or
sarl
les
or
pop
dec
rorb
push
jns
push
pushf
add
pop
sbb
call
in
sub
test
jmp
sub
loope
nop
pop
movsl
xchg
in
les
push
add
arpl
insb
sbb
xlat
add
mov
nop
in
inc
cli
lods
fstp
das
inc
iret
sub
inc
lods
aam
sbb
push
in
dec
sbb
loopne
sub
pushf
mov
movsl
push
push
enter
addb
cmp
stos
movsl
or
inc
leave
dec
movsb
loopne
popf
cmpsb
repnz
adc
and
frstor
add
dec
add
inc
and
jo
or
jg
push
xor
fucomp
sbb
dec
or
lret
movsb
push
ss
repz
out
push
push
cltd
pop
iret
dec
cmp
movsb
nop
test
pop
adc
push
gs
fwait
sahf
adc
aam
cld
xchg
inc
pop
push
lret
cmp
add
in
mov
inc
test
push
in
mov
mov
movsl
xchg
add
push
add
push
movsb
shll
out
std
push
xor
xchg
stos
push
and
mov
add
inc
or
dec
stos
xchg
push
xor
or
hlt
fsubs
movsl
mov
fwait
in
int
push
push
jo
in
mov
mov
adc
xchg
call
push
inc
sbb
hlt
cwtl
popf
out
hlt
add
sbb
pushf
cltd
in
loope
in
add
stos
cmpb
push
loopne
in
add
sub
dec
jns
adc
pop
in
or
pop
push
add
inc
xor
sbb
arpl
add
aaa
push
mov
push
shrl
movsl
cmpsl
popf
lret
mov
out
movsb
xchg
push
js
aam
jecxz,pt
mov
cmpsl
adc
xchg
mov
add
popa
adc
cltd
in
sub
dec
ret
je
and
lret
adc
ficoml
and
inc
push
nop
sbb
aaa
fidivrs
imul
xchg
test
adc
add
and
ds
mov
sub
push
or
je
leave
inc
int3
add
dec
test
push
jl
mov
jge
push
loopne
or
inc
push
imul
sub
adc
sub
lahf
cmc
test
les
leave
call
adc
in
pop
inc
test
and
push
add
adc
test
in
out
xchg
fucomp
loope
and
test
enter
shll
cmp
loopne
xor
dec
roll
mov
cmp
addl
pop
movsl
push
addb
pop
sbb
mov
sbb
fdivr
out
sub
sub
mov
and
mov
dec
jb
mov
xchg
loopne
pushf
stc
out
sbb
push
and
pop
aad
and
repz
lret
in
fiadds
jg
jle
cmp
push
dec
or
and
imul
adc
cmp
mov
mov
mov
mull
sahf
popf
xor
xor
movsb
cmpb
sbb
mov
into
xlat
jmp
std
sahf
hlt
movsb
pop
inc
mov
popf
or
push
leave
xchg
in
test
sahf
pop
or
daa
jge
loope
pushf
sub
and
xchg
push
shlb
roll
lahf
fcoms
cwtl
pop
fdiv
les
push
pushf
fs
inc
movsb
scas
ficoms
jnp
push
stos
add
push
xchg
aad
movsl
push
scas
pop
xchg
imul
push
dec
js
shrl
movb
test
cmpsl
push
data16
loope
jge
adc
xchg
movsl
aad
xchg
in
add
mov
adc
out
mov
fucomp
subl
jae
cwtl
pop
xor
out
xchg
xchg
out
fs
xchg
cld
xchg
out
inc
lret
inc
push
or
int
pop
mov
pop
aad
xchg
jmp
cwtl
int
push
lds
inc
xlat
adc
mov
stc
adc
les
push
push
pop
fbstp
fsub
jae
xchg
add
orl
xchg
jb
push
fdiv
sub
fcoms
sbb
push
scas
pushf
leave
and
lods
adc
aam
nop
add
adc
adc
mov
rcrb
jb
mov
mov
or
loopne
sti
mov
addr16
jnp
popf
add
filds
pop
js
push
in
mov
xor
outsb
xchg
in
test
test
mov
sub
xchg
and
sahf
daa
in
mov
or
call
in
movhps
imul
mov
shll
jns
dec
pushf
call
inc
sbb
popa
mov
hlt
in
and
into
in
insl
fildll
adc
or
and
inc
or
into
vpmulhw
push
jnp
sahf
bound
mov
aas
push
rcrb
xchg
sub
mov
cmp
leave
shr
push
push
jge
xchg
jmp
rclb
fstpl
mov
cmp
lret
sti
mov
mull
cmp
jecxz
add
mov
aam
mov
gs
and
out
lods
pmaxub
cmp
cmc
iret
call
pop
or
gs
test
out
push
movsl
mov
test
push
or
xlat
test
popf
lret
sahf
push
gs
dec
mov
shlb
push
fistpll
in
scas
xchg
sub
mov
add
adcl
ja
lret
movsl
pop
imul
inc
cmp
into
mov
and
or
inc
and
fwait
movsl
push
fwait
sbb
into
push
jmp
lds
and
ret
leave
stos
int3
roll
test
sub
sbb
push
or
into
in
or
jg
push
mov
xlat
and
movsl
or
mov
push
insb
daa
mov
pop
aas
lret
adc
outsl
jmp
cmc
lds
adc
outsl
out
xchg
dec
out
sub
testb
addr16
fs
inc
in
add
test
push
js
push
push
pop
and
mov
adc
sub
xchg
loopne
test
lcall
jge
or
loope
jmp
aaa
mov
dec
xlat
mov
int3
mov
cmp
pop
mov
arpl
mov
sbb
movsl
movsb
dec
fmull
cmpsl
iret
gs
xor
fstpl
xchg
movsl
xor
dec
fs
cld
in
lret
xchg
les
dec
cmp
sbb
rep
push
into
dec
test
push
add
pop
jecxz
fs
leave
leave
test
or
pop
jmp
nop
test
movsb
shrb
jno
jnp
scas
fs
add
ficomps
loop
sub
push
movsl
push
sub
mov
push
push
adc
cmp
in
add
pop
sub
pmaxub
add
adc
adc
sbb
jp
inc
add
xchg
test
and
gs
rcrl
xorl
lcall
inc
sbb
and
stos
sbb
cli
jnp
sbb
or
in
add
jle
mov
fnsave
push
pop
loopne
das
std
adc
pop
mov
out
fldl
pop
jge
mov
dec
imul
xchg
ficoms
test
pop
sahf
mov
cltd
aad
mov
mov
xlat
repnz
lds
les
pop
xchg
or
fs
cmpsl
adc
in
test
xchg
test
pop
rcrb
pop
iret
xchg
cld
nop
xor
xchg
in
push
and
push
std
xlat
jb
loope
int
add
je
push
in
add
push
inc
mov
shlb
push
shrl
adc
fucom
aas
stos
out
ljmp
les
and
dec
and
sub
pushf
adc
jg
fisubs
or
mov
push
movsl
lods
test
ja
scas
lds
xchg
cs
out
test
addl
mov
or
out
xchg
xor
pop
cltd
lret
add
cmp
in
mov
xlat
imul
sub
push
rcr
cli
in
lcall
test
xchg
rcrl
adc
ljmp
cmp
dec
adc
ljmp
push
push
mov
in
scas
cwtl
adcb
aad
ja
dec
out
fcoml
icebp
les
aam
push
adc
sbb
xchg
pop
cmp
mov
cmp
test
pop
add
icebp
xor
loope
jle
loop
adc
or
out
push
mov
jnp
loop
mov
and
adc
xchg
and
jg
pop
xor
push
test
jecxz
sub
in
fldl
out
add
repnz
fdiv
les
adc
ss
cmp
xchg
and
inc
mov
or
xchg
repnz
popf
jno
dec
and
jnp
push
inc
mov
xchg
nop
shlb
jno
mov
dec
push
sahf
sbb
pop
pop
sbb
and
mov
in
inc
or
pop
imul
cmp
movsb
xchg
test
pop
cli
or
lcall
adc
sub
sbb
arpl
js
xor
pop
inc
int3
inc
lret
inc
mov
aad
fstl
and
cltd
test
leave
mov
adc
or
test
push
mov
push
and
ljmp
fstps
in
imul
xor
jbe
pop
addr16
add
mov
fs
xor
cs
add
fneni(8087
sbb
push
or
out
jmp
push
mov
mov
loop
sbb
in
ds
and
test
icebp
icebp
shlb
leave
mov
outsb
jns
test
fwait
mov
xchg
mov
enter
xor
imul
outsl
jae
adcl
pop
xchg
lcall
mov
repnz
push
dec
push
test
ljmp
fisubs
ljmp
pop
hlt
jp
mov
ds
push
fsubrl
adc
push
add
pushl
shr
aad
jne
into
cmpsl
int3
pop
adc
jecxz,pt
dec
mov
imul
sti
sbb
movsl
xchg
push
aad
pop
adc
filds
movsb
lcall
jnp
sub
shll
and
sbb
jnp
push
dec
pop
movsl
push
scas
fsubr
mov
or
push
popa
mov
and
pop
inc
jecxz
adc
pop
pop
loop
fcoms
xchg
adc
inc
pop
fwait
cli
cwtl
popf
clc
lock
jmp
inc
in
cmc
fimuls
lahf
dec
sbb
mov
sti
and
movsb
sti
loope
add
sub
jle
call
jl
jnp
pop
jp
sub
test
add
mov
arpl
cmp
xchg
jge
or
ljmp
push
dec
push
movsl
pop
das
push
fucomip
add
xchg
adc
xchg
lods
jl
xchg
sbb
sbb
shr
push
fs
pusha
scas
inc
aad
sbb
xchg
add
or
cmpsl
xchg
jg
or
push
loop
add
push
repz
xchg
or
shr
xchg
movsl
push
add
sbb
mov
ds
daa
ja
xchg
lds
rcr
xchg
add
inc
adc
in
inc
or
movaps
xchg
in
inc
dec
faddl
les
loope
das
pop
inc
xchg
adc
inc
rep
push
movsl
dec
ds
jnp
xchg
fwait
push
and
and
adcb
xchg
or
movsl
int3
ds
les
sahf
xor
repnz
arpl
repz
sahf
lret
add
fcmovnbe
cmp
mov
leave
pop
jne
pop
lea
in
adc
jecxz
inc
pop
sbb
xchg
and
push
fs
test
lds
orb
gs
xchg
or
ja
add
insl
filds
or
jbe,pt
inc
inc
enter
adc
addr16
jnp
pop
mov
jp
enter
push
add
movsl
mov
or
xor
pop
mov
mov
test
jp
idiv
ficoml
test
data16
fisttpll
xchg
inc
xchg
xchg
jmp
mov
sub
inc
xchg
xor
sub
xlat
dec
xchg
inc
push
les
leave
stos
mov
mov
xchg
add
push
popa
add
ficoml
xchg
leave
out
test
dec
pop
pushf
fld1
pop
lock
scas
sbb
les
or
gs
fnsave
jne
pop
test
add
dec
faddl
lds
jno
mov
dec
push
stos
mov
dec
mov
in
jle
push
push
jnp
sub
xchg
shrl
aad
je
int
push
inc
enter
popf
in
push
dec
addr16
insb
mov
sti
fs
xchg
adc
jmp
js
hlt
sub
sub
bound
fs
lret
push
mov
shrb
cltd
push
subb
loop
pop
testb
ljmp
popf
and
sub
ljmp
fnsave
mov
aaa
fstl
loope
add
gs
xchg
movsl
pop
in
pop
inc
andb
stos
xchg
pop
push
add
notl
mov
adc
and
data16
fcmove
jp
push
in
in
mov
fisttpl
imul
mov
push
mov
push
test
arpl
jb
add
or
popf
or
stos
xor
shrl
fmull
fs
mov
dec
in
lahf
pop
gs
fdivrp
xchg
sub
dec
sub
in
mov
leave
xchg
movsb
dec
test
movsl
pop
out
xor
sbb
test
sub
cmpsb
inc
lret
bound
int3
push
test
add
in
fisubs
scas
xor
inc
bound
leave
cmp
and
shll
hlt
popf
pop
or
xchg
lret
sub
movsl
adc
fstp
out
xchg
or
call
pop
popf
shrl
unpcklps
pop
int
xchg
adc
ja
xchg
gs
les
jecxz
inc
push
or
mov
push
mov
jae
fucom
mov
pop
jmp
push
call
pop
add
inc
or
mov
in
mov
inc
mov
add
jecxz
out
pushf
push
mov
push
add
cmp
ljmp
add
or
inc
notb
xchg
jecxz
test
repnz
mov
pop
imul
add
push
ljmp
push
or
mov
fisttps
xchg
in
xchg
cli
cmp
repnz
pop
mov
cmp
movsb
pop
sub
adc
sub
mov
xchg
xchg
mov
add
aaa
loop
test
xor
iret
add
pop
or
and
pop
adc
sbb
add
repnz
mov
aad
fisubl
divps
popf
rolb
int3
mov
dec
out
sub
dec
scas
cwtl
test
pop
pop
cwtl
fs
loope
and
add
push
sub
pusha
subb
fdivr
pop
xor
sub
and
cmpsb
xchg
in
mov
push
xchg
mov
fldl2t
shl
lcall
les
and
loopne
in
add
in
shrl
test
xchg
mov
pop
insb
decl
mov
fsubrl
aad
std
inc
rolb
sbb
hlt
test
dec
cmp
in
mov
push
inc
stc
xor
loopne
and
mov
inc
into
lcall
cmp
iret
add
sbb
push
popf
popf
push
scas
sahf
dec
loope
mov
pusha
iret
les
iret
sbb
iret
xchg
loopne
test
xor
mov
xchg
fwait
push
in
mov
aas
mov
add
xlat
adcb
jns
mov
adc
pcmpgtd
fs
pop
mov
fwait
jne
dec
add
jle
rclb
into
push
dec
sub
xor
or
gs
and
xor
bound
pop
or
fcmovb
imul
ja
mov
sahf
inc
or
nop
dec
in
jb
fwait
pushl
dec
in
mov
xlat
in
add
add
lret
inc
pusha
pop
aam
sbb
in
lcall
mov
cmp
jle
push
fists
pop
in
inc
aam
push
mov
mov
lret
mov
sbb
pusha
and
xchg
gs
arpl
repz
sbb
sbb
repz
rol
cmpsb
mov
ds
aad
sbb
sbb
test
cmp
and
cmc
movsb
sub
iret
push
xchg
and
fstl
sbb
rcr
xor
imul
mov
loop
sarb
push
scas
cmp
and
add
or
add
xor
ficoms
jb
cmp
inc
xchg
sub
call
xchg
mov
adcb
outsb
adc
add
add
adc
iret
pusha
xchg
pop
out
sub
stc
inc
int3
test
xchg
lds
and
mov
push
inc
lock
fwait
pop
shll
shll
insb
jecxz
sub
mov
cmp
mov
sbb
xchg
push
add
xor
rol
pop
and
fs
or
dec
cmpsl
adc
pushf
scas
add
repnz
movsb
adc
inc
lods
lcall
sbb
push
stos
andb
jb
and
jle
inc
adc
add
adc
dec
fwait
and
fiadds
mov
ljmp
xchg
mov
cwtl
andl
add
ja
dec
cmpsl
aam
pop
fldt
sbb
gs
mov
mov
and
or
sbb
shlb
xchg
sahf
pop
imul
xor
dec
les
push
jmp
jge
adc
movsl
dec
addb
xchg
repz
inc
push
and
aad
repz
nop
orb
shll
or
mov
jne
pop
fisttps
les
push
mov
adc
or
pop
ret
mov
sbb
or
nop
lds
movsb
pop
imul
cli
cltd
xor
jns
adc
pop
test
ds
imul
test
xchg
loope
mov
dec
mov
test
mov
stos
xchg
sbb
dec
add
jp
or
jge
xor
in
push
inc
xor
xchg
adc
mov
adc
or
sub
aam
popf
adcb
push
mov
adc
pop
cmp
movsl
jg
data16
stos
in
ljmp
pop
rcl
inc
test
sbb
repnz
lea
inc
mov
xchg
dec
es
lds
inc
sbbb
imul
cmp
xchg
addr16
fucomip
es
adc
or
jg
jl
dec
faddl
cmp
movsb
xchg
mov
dec
or
add
fdivp
inc
imul
and
cmp
cmpl
inc
push
fldl
mov
push
and
xchg
ja
imul
fildl
in
and
adc
gs
pop
sbb
push
and
cmc
xchg
push
jecxz
add
pop
mov
push
test
adc
out
fs
mov
in
sahf
push
lret
mov
adc
sahf
pushf
mov
dec
inc
push
movsl
pop
jecxz
loopne
les
gs
cmp
mov
fldl
sti
push
pop
mov
pop
in
test
pop
mov
fstl
inc
fists
lea
std
add
mov
mov
out
enter
adc
dec
in
mov
fmull
hlt
test
and
mov
pop
gs
mov
xlat
test
ja
dec
cmpsl
xchg
sub
dec
jle
and
push
xor
ds
bound
adc
xor
xor
push
mov
test
ds
mov
movsb
lock
dec
push
lahf
cld
inc
push
shlb
xor
dec
in
or
jmp
add
rcr
mov
inc
xchg
gs
mov
loope
pop
sbb
gs
jge
mov
push
imul
test
adc
fstpl
xchg
lahf
pop
lret
jae
push
and
je
movsl
icebp
jle
sub
push
add
or
sbb
in
scas
push
fldt
ds
jmp
andl
dec
fstpt
insl
pop
xor
jno
xlat
gs
sbb
pop
lds
xlat
es
jb
inc
dec
cmp
in
mov
adc
mov
xchg
sbb
push
lds
in
cs
xchg
insl
adc
adc
fisttpll
repnz
mov
loop
loopne
lds
enter
nop
lds
in
test
pushf
push
out
mov
jg
aas
in
add
daa
xchg
stos
push
cmp
xchg
add
test
sahf
mov
dec
shrl
cmp
adc
pop
push
inc
mov
nop
repnz
cmp
bound
xchg
or
mov
jmp
aam
jnp
push
jb
fs
mov
aas
jmp
aad
int3
sbb
cmp
movsl
push
mov
sub
inc
xor
dec
subl
int3
daa
fnsave
mov
mulb
notl
aaa
in
clc
push
scas
out
repnz
push
gs
ds
xlat
jmp
dec
inc
push
add
xlat
ljmp
jns
push
add
sub
in
and
popa
cmp
adc
hlt
cmp
outsb
call
pop
pop
pop
arpl
pop
in
pop
into
inc
push
cmp
fnstsw
cmp
jb
sub
sub
fists
mov
push
inc
lret
ds
movsl
xor
dec
mov
adcb
repnz
aaa
push
xor
fsubrl
push
popf
xor
fs
sbb
aas
add
lahf
adc
push
mov
les
xchg
mov
mov
adc
sahf
cld
push
jmp
sahf
xlat
mov
out
ss
pop
faddl
lods
nop
pop
inc
and
andl
xchg
push
subb
xor
mov
lea
mov
cmp
ja
popf
cli
adc
pop
push
mov
sahf
cld
mov
pop
loope
call
lock
stos
shl
stos
fs
movsl
sti
adc
stos
sbb
call
je
mov
push
gs
sub
sbb
pusha
int
movl
fiadds
inc
movsl
in
sub
sbb
pushf
and
into
cmp
xchg
das
fstp
lock
pminsw
add
ds
jne
pop
pop
pop
arpl
push
dec
dec
xchg
adc
mov
adc
mov
fstpl
dec
or
add
mov
dec
lods
popf
loop
and
stos
stos
push
xlat
inc
jnp
lret
stos
pop
push
in
fwait
sub
pop
and
ficoms
in
aam
dec
mov
fbstp
sub
cmp
fildll
lods
dec
dec
cli
or
xor
xchg
jp
std
or
sbb
push
les
dec
inc
jne
or
dec
movsb
adc
xor
or
lods
lret
lcall
cmpsl
enter
sub
or
arpl
pop
cmpsl
je
imul
add
test
xor
fwait
push
cmp
jl
lock
push
cmp
adc
mov
or
in
add
test
mov
into
lock
arpl
shll
lret
andl
popf
jmp
sbb
inc
test
es
xlat
push
cli
push
daa
movsb
adc
iret
and
dec
out
sub
insb
aam
cmp
call
inc
xor
fisubrl
jp
mov
in
sbb
add
push
aad
popa
inc
sub
xor
ds
and
rcrb
sub
insl
in
sbb
dec
pop
sub
dec
xchg
jnp
sbb
sbb
cld
sbb
insb
add
sbb
and
adc
in
xchg
mov
sbb
mov
lea
je
mov
push
sbb
xchg
flds
adc
mov
cmp
add
inc
mov
add
cmp
mov
cmp
xchg
xchg
adc
xchg
add
in
aas
add
jl
pop
insl
movsb
stos
adc
cwtl
inc
outsl
jl
movsl
sub
ss
sbb
test
adc
pop
add
mov
leave
sbb
dec
movsb
stos
adc
pushf
push
das
ss
add
outsb
mov
add
sbb
sbb
movsb
stos
or
iret
inc
or
into
je
es
mov
mov
dec
or
xor
xchg
cmp
adc
pop
add
orb
and
mov
icebp
push
pushf
popf
xchg
mov
xchg
movb
loopne
gs
cmp
mov
in
pop
sarl
std
add
out
imul
popa
insb
js
insb
stc
and
loope
pop
into
mov
adc
mov
dec
xor
mov
pop
cmp
xor
sbb
cld
jnp
test
push
xorb
push
xchg
ret
adc
xor
pop
mov
or
pop
sbb
arpl
cmc
jl
xchg
pop
daa
cld
int
sub
sub
sahf
fwait
pop
lock
call
add
out
xchg
sbb
pop
add
mov
lcall
sbb
mov
pop
add
xchg
sbb
subb
cmp
roll
std
outsl
xchg
jo
xor
adc
xlat
cwtl
loopne
dec
iret
mov
dec
or
or
mov
aam
rorb
ds
cli
inc
inc
les
xor
fadds
push
jecxz
int3
out
pop
sub
pop
out
lcall
sub
push
adcb
sub
movsl
insl
pop
sub
subb
out
mov
xchg
and
add
push
std
fisubs
lods
push
adc
fists
daa
mov
cmp
jle
fs
mov
addr16
push
fwait
movsl
jo
mov
enter
cltd
dec
mov
addb
jecxz
ds
inc
shl
out
movsl
les
out
or
out
or
push
repz
js
mov
int3
mov
in
enter
arpl
pushf
sub
lods
mov
push
sbb
es
or
and
dec
rcll
pop
cld
sub
mov
mov
push
dec
loope
das
cmp
into
imul
mov
adc
jne
mov
inc
shl
lds
and
adc
in
sahf
push
pop
cmpsl
cmpsl
xchg
sub
outsl
jg
mov
test
js
aad
popf
adcl
push
pop
mov
rcl
cmp
mov
add
out
xchg
out
mov
sahf
push
sub
mov
aad
cmpl
shlb
test
xor
loope
and
movsl
dec
xlat
enter
inc
xchg
ljmp
cmc
nop
pop
rcl
push
jmp
daa
sub
pop
mov
or
fidivrs
fsubp
mov
fidivs
xor
arpl
push
cmp
push
sti
inc
mov
inc
xor
jl
mov
divb
mov
je
push
jl
pop
mov
pop
jecxz
cmc
adc
mov
inc
mulb
fisubs
in
jno
scas
xchg
shrb
push
arpl
in
xor
cmpsb
in
sarb
in
sub
mov
push
xchg
pop
dec
ret
js
data16
jle,pn
je
pusha
mov
cwtl
or
add
leave
cld
fcoms
shld
sbb
pushf
out
idiv
dec
mov
mov
sub
mov
pop
dec
xor
in
pop
jno
and
sbb
inc
add
mov
xlat
aam
jp
push
mov
aam
or
xor
jecxz
iret
mov
push
jge
push
mov
adc
cmc
pop
lret
or
add
adc
lret
lret
mov
mov
fwait
sub
sub
into
inc
mov
cmp
iret
cmp
int
xor
nop
daa
shl
test
rclb
movsl
mov
jno
adc
and
testl
test
or
addr16
daa
mov
xchg
adc
or
xchg
pop
dec
pop
stos
push
popa
testb
fcmove
sbb
sbb
lods
sbbl
mov
adc
lea
enter
mov
cltd
test
mov
xchg
in
and
loope
push
stos
mov
adc
jle
cmpsl
cmp
pop
cli
cmp
mov
or
mov
test
and
scas
cs
pop
dec
inc
lahf
and
lret
jle
sti
loop
push
pushf
in
inc
and
mov
add
sti
shlb
xchg
jmp
jge
jg
mov
jmp
ljmp
jnp
adc
js
out
adc
stos
and
es
jns
or
xchg
pop
fistps
dec
inc
test
arpl
into
or
test
push
imul
add
dec
aas
aaa
inc
mov
or
sti
adc
call
int
mov
fsubl
pop
push
xchg
pusha
scas
jecxz
cmc
or
shrl
add
inc
xchg
inc
mov
nop
imul
js
mov
orl
mov
movsl
mov
mov
mov
mov
inc
aaa
into
dec
push
push
sbb
sub
and
mov
in
leave
vorps
xor
dec
call
mov
adc
inc
test
rcll
xor
mov
mov
fwait
dec
mov
cmp
dec
subb
cmpsl
adc
aas
test
xor
mov
lods
pop
and
test
adc
cmp
pop
lret
icebp
sub
in
movsl
cmp
sbb
xor
aad
ficompl
jb
ds
push
es
imul
mov
pop
insb
cmp
movsl
mov
call
mov
pop
mov
pop
jmp
repz
jmp
xchg
mov
jl
mov
stc
jle
sbb
jge
inc
fwait
std
inc
pop
adc
cli
lcall
dec
jmp
add
mov
add
mov
pop
out
outsb
sub
dec
imul
jae
adc
push
and
and
push
roll
in
inc
mov
cmp
imul
sarl
mov
fcmovnb
into
in
ret
xor
mov
jge
shrl
jno
adc
pop
and
or
imul
movsl
ljmp
xor
test
in
mov
mov
aad
jp
repz
ret
adc
xchg
ficoms
adc
mov
ljmp
adcl
cmc
iret
inc
aas
lods
jne
pop
test
call
add
insl
cmp
dec
subl
loopne
mov
mov
mov
mov
cltd
in
xchg
mov
jl
and
adc
lds
push
pop
add
mov
dec
jg
xchg
lods
sahf
in
pop
add
or
sbb
adc
and
sti
seto
outsb
add
adc
rcrl
bound
roll
std
or
and
pop
lock
dec
inc
jno
inc
sbb
les
dec
push
inc
pop
mov
xor
mov
out
fwait
cmp
and
les
xlat
jb
out
mov
or
fisubrl
les
cmp
xor
popf
cmp
and
dec
andb
ret
add
push
movsl
xchg
dec
les
ljmp
mov
mov
repnz
push
adc
pop
rorl
lret
mov
xlat
sub
ret
addr16
pop
pop
push
add
test
cmc
sub
xor
pop
mov
sarl
mov
loope
rorl
repz
fcmovb
nop
popf
xchg
adc
pop
jecxz
sbbl
xor
mov
adc
je,pt
push
dec
cmpsb
adc
bound
cmp
xor
mov
sub
in
push
cmpl
arpl
pop
add
mov
and
iret
test
xor
stos
mov
sahf
jns
dec
outsl
xchg
xor
mov
test
cmp
inc
xchg
pop
cmp
ffree
idivb
idiv
enter
rcr
lret
loope
dec
pushf
mov
sbb
cmp
ret
nop
xchg
pop
jmp
pop
out
scas
sbb
jns
jno
xor
mov
and
sub
cltd
test
insl
jle
dec
flds
scas
imul
jnp
inc
movsb
mov
mov
into
lods
jae
cs
or
test
fimuls
popf
std
cmpsl
test
js
clc
inc
bound
dec
flds
popa
mov
fcmove
ficompl
mov
xlat
mov
stos
mov
int3
add
shr
mov
and
xchg
xchg
repnz
popf
jge
add
cmp
pop
cmp
movsl
inc
cld
or
cmp
nop
sahf
mov
sarb
clc
push
out
fdivrs
cmpsb
jle
mov
add
inc
test
das
mov
sti
sub
inc
sbb
and
xchg
daa
popa
cmp
lds
pusha
cmp
lret
loopne
inc
cli
movsl
fdivl
xchg
not
test
ss
mov
pushf
inc
aam
test
jg
inc
cwtl
in
mov
fdivl
pop
lahf
loop
adc
jl
push
xchg
add
imul
movsb
push
push
adc
cmp
jne
repnz
mov
sub
pop
rcrl
into
adc
xor
enter
cmp
mov
add
je
or
add
pop
xchg
dec
fdivrs
inc
adc
cwtl
dec
adc
xchg
mov
mov
sub
pop
into
mov
in
fsin
push
fmul
cmp
pop
mov
bound
movsb
xlat
jle
inc
nop
pop
jnp
add
xor
into
lods
pusha
mov
leave
lods
xchg
jecxz
test
xchg
lret
jne
adc
sub
ja
xchg
jns
in
inc
push
in
fildl
cli
and
ljmp
addl
movsl
rcrl
dec
sbb
or
fildl
or
inc
sub
mov
sbb
mov
xchg
mov
inc
fildl
cmpsl
inc
lahf
jge
jae
cmpsb
sbb
imul
inc
dec
cltd
or
mov
daa
cld
out
sbbl
int3
dec
nop
push
lea
push
pop
aaa
icebp
fdivl
gs
inc
sahf
push
adc
xchg
xchg
lods
jl
mov
dec
jecxz
into
vunpckhps
cmp
movsb
fsubs
push
lret
nop
aad
push
movsb
test
inc
das
cmp
ja
cmp
gs
jg
insb
cld
cmp
test
shl
or
test
enter
negl
inc
cmp
pop
jp
movsl
xor
add
pop
and
icebp
pop
dec
dec
mov
pop
repz
lds
imul
fs
cmp
push
adc
test
cmpsl
jbe
mov
fsub
icebp
fdivp
movsb
mov
inc
in
pusha
hlt
pusha
adc
pop
sbb
pop
pop
jnp
add
in
xchg
cwtl
push
rolb
sbb
flds
xlat
jne
test
fwait
jo
pop
sbb
jecxz
incl
lret
mov
cmpsb
dec
push
adcb
lret
mov
cmp
inc
and
inc
aad
lds
stc
and
ja
mov
jg
ja
lret
sahf
je
call
pop
or
std
jae
mov
dec
xor
mov
mov
movsb
add
jg
cmp
and
jae
jecxz
lods
pop
and
xor
add
mov
jl
jecxz
xchg
inc
leave
adc
pop
mov
xchg
cltd
loopne
aad
aam
xor
pop
mov
lcall
fadd
sbb
test
std
call
dec
mov
ret
stos
movsb
lods
jne
sti
jp
sahf
xor
dec
xchg
pushf
jle
xchg
int
gs
test
add
add
jbe
cmp
mov
lcall
push
pop
dec
dec
gs
add
sahf
adc
jns
inc
xchg
push
pop
aaa
ret
push
sub
movsb
or
inc
jns
jp
mov
pusha
movsb
dec
cwtl
or
dec
xor
ficoms
aas
adc
push
cli
adc
sub
cmp
inc
xor
into
fistpll
and
mov
setp
sub
mov
jnp
insl
stc
xor
xor
mov
inc
test
scas
std
or
test
add
out
test
aam
pop
imul
std
push
imul
adc
pushf
or
and
dec
pop
cmp
xchg
push
inc
push
or
scas
xchg
jle
mov
icebp
in
pop
adc
and
popf
and
and
fsts
enter
or
mov
lock
add
addr16
cmp
in
xchg
loope
xor
jp
gs
in
ds
jmp
lds
adc
popf
testb
xchg
xchg
adc
pop
clc
inc
nop
inc
and
mov
jns
in
jecxz
aam
mov
jae
pop
and
add
pop
hlt
je
fwait
in
xchg
and
sub
stos
jmp
pop
push
ficoms
nop
add
mov
xchg
movsb
inc
mov
pop
cmp
rcr
popf
insl
inc
out
adc
in
mov
mov
sbb
push
lock
and
sbb
cmp
pop
xor
mov
jge
popf
cmpsb
jns
xor
xor
mov
loopne
mov
rorb
lret
mov
in
adc
shrb
xchg
stos
popa
arpl
stos
add
inc
mov
into
sahf
movsl
inc
mov
ret
mov
pop
movsb
mov
fdivp
or
fistpl
das
lcall
mov
call
dec
jno
data16
mov
inc
fmull
xor
adc
cmp
cs
add
mov
fstpt
xor
lods
decl
mov
dec
mov
xor
xchg
clc
jo
std
inc
mov
jl
fiaddl
mov
lret
imul
aam
ds
inc
test
sahf
push
mov
movsl
dec
inc
mov
cwtl
into
aaa
sbb
imul
and
jmp
test
cltd
cltd
push
pop
popf
sbb
mov
mov
xchg
sarb
xchg
pop
cmpsl
enter
in
sub
jle
inc
xchg
xchg
pop
mov
jge
lret
aas
jmp
or
add
lock
outsb
movsb
test
adc
lahf
fidivl
mov
icebp
jae
adc
out
mov
fwait
arpl
jl
roll
lcall
fists
stos
mov
jno
cmc
pop
add
es
push
push
rorb
mov
cmp
repnz
cltd
mov
shrb
aam
pushf
sub
sahf
sbb
mov
fwait
inc
mov
fisubl
mov
lcall
sub
push
push
hlt
insb
fistl
sbb
adc
push
in
sub
in
repz
pushf
pusha
popf
pop
adc
mov
andb
adc
test
push
and
dec
jge
fnstcw
sbb
cmpsl
xlat
cmpsl
or
in
cmpsb
in
out
ss
jns
xchg
cli
pop
and
fs
in
insl
xor
push
ja
inc
in
cmp
mov
adc
in
xor
cmc
xlat
ret
mov
dec
adc
inc
aas
mov
push
clc
add
repnz
shlb
out
jl
scas
jge
insb
mov
inc
jbe
pop
pop
xlat
adc
fs
scas
gs
bound
add
mov
xor
xchg
in
or
and
push
ss
fdivp
iret
adc
pusha
mov
mov
nop
sub
pop
jle
and
xor
xor
dec
lods
fldenv
movsl
in
shl
cmp
adc
rcl
dec
pop
mov
jle
push
outsb
or
xor
shrb
sbb
or
loope
ds
cltd
sub
nop
xor
dec
adc
in
xchg
sub
adc
rorl
movsl
rcrb
hlt
in
sub
insb
or
push
int
xor
or
into
push
nopl
cli
add
sub
mov
add
xchg
test
loopne
ficoms
mov
cmp
into
std
test
test
inc
ret
pop
xor
call
les
dec
aaa
adc
movsl
mov
gs
jp
or
push
or
push
scas
xchg
inc
add
sbb
rolb
sarl
inc
mov
dec
les
clc
cwtl
out
adc
inc
lea
loope
imul
mov
xchg
or
jb
aam
rorb
flds
xchg
lcall
pusha
adc
lods
sub
and
flds
xchg
stos
divl
mov
pause
pop
hlt
or
dec
mov
mov
testb
out
push
aam
or
xchg
pop
lock
sarb
sub
dec
gs
out
xchg
dec
in
scas
inc
fmull
pop
xchg
push
test
in
pop
gs
inc
hlt
int3
cmp
insl
je
jmp
sbb
adcb
sbb
or
sbb
mov
gs
in
pop
scas
xlat
lock
push
and
mov
xchg
lcall
adc
xchg
movsb
cmp
out
sbb
data16
fistps
cmpsl
add
mov
jmp
bndldx
ret
pop
shrb
loop
loopne
mov
aad
outsl
dec
pop
shl
outsb
dec
hlt
jg
push
and
movsb
xchg
insb
fnstenv
fisubs
xchg
xor
pop
jns
or
push
mov
movsb
mov
xor
mov
pop
push
imulb
and
or
movsl
or
int3
xchg
inc
adc
addb
test
adc
xchg
int
adc
xor
xchg
cmpsb
push
xchg
popf
ja
push
adc
cmp
or
xchg
jl
and
adc
dec
lods
lds
popa
scas
out
sub
adc
cmpsl
repnz
es
dec
xchg
daa
cmp
sbb
cltd
adc
mov
mov
bound
sub
jp
jle
mull
lahf
jge
inc
or
xchg
jge
lcall
add
dec
rclb
lahf
shrl
test
loope
cwtl
jbe
xchg
imul
clc
push
xchg
and
addr16
popa
pop
sbb
jmp
xchg
add
bound
ds
jno
ss
lods
stos
sbb
mov
push
cltd
in
out
ljmp
jge
sub
jge
add
lret
xchg
jge
call
dec
daa
loop
pop
dec
dec
and
inc
sub
inc
cmp
nop
call
int3
jns
xchg
cmp
aad
iret
mov
stos
mov
or
shlb
jmp
mov
call
cmp
push
dec
test
loop
xor
and
sbb
inc
int
jns
inc
popa
or
jb
in
xchg
push
fldt
scas
add
and
rclb
push
or
stos
popa
dec
rcrl
mov
sub
xor
dec
sbb
jl
cli
fnstsw
xchg
xor
mov
adc
add
arpl
add
cmp
mov
aas
mov
push
adc
jmp
ljmp
mov
popa
cltd
lret
lea
inc
xor
sub
inc
loope
xchg
cmp
pop
sbb
bound
cmp
xor
loopne
out
aam
addr16
xor
pushf
dec
imul
pushf
xchg
mov
xchg
push
lds
pushf
jmp
les
and
mov
fsubs
mov
loopne
xor
lret
stc
push
xchg
cmpsb
xchg
outsb
in
inc
les
jns
push
xorb
jl
xchg
test
mov
push
adc
pop
jno
ror
pop
and
pop
into
repnz
or
mov
lahf
jge
mov
outsb
scas
std
fs
arpl
fucomp
pop
divb
int
daa
sub
mov
loope
mov
stc
sbb
sub
into
leave
fistpll
inc
stos
fidivs
sbb
ret
add
inc
add
int3
aad
repnz
test
push
pop
movb
mov
lret
daa
or
pushf
rclb
cmp
pop
push
outsb
adcl
rcr
aas
andb
mov
fnstenv
or
enter
or
inc
sbb
rcll
fstl
lahf
inc
test
sbb
test
fstpl
mov
fsubrs
sar
cmp
or
add
add
jg
iret
outsl
fisubs
pop
loop
popa
lcall
add
inc
and
jno
xchg
xlat
call
add
daa
hlt
mov
adc
push
aam
mov
lret
xchg
pop
jb
dec
adc
pop
fildll
lea
js
inc
push
sub
mov
mov
int3
add
xchg
stc
ljmp
jmp
sbb
hlt
pop
lods
std
imul
pop
cwtl
test
inc
cltd
and
adc
dec
out
or
scas
adc
mov
inc
or
push
popa
mov
popf
pushf
les
std
or
push
movsb
xchg
cmpsl
popf
add
aas
pop
mov
and
inc
xchg
lea
ss
int3
test
outsl
lea
pop
cmp
movsl
mov
mov
ds
stos
cmp
incl
mov
jl
int
or
mov
repnz
filds
aaa
dec
int
xor
mov
dec
enter
insb
xchg
incb
add
push
push
jmp
dec
inc
ret
and
mov
xchg
test
xchg
test
dec
fildll
fwait
pop
in
mov
push
dec
pop
rolb
ret
adc
jp
icebp
inc
hlt
loop
dec
lret
fcoml
xor
pop
std
dec
ret
je
les
mov
jg
mov
inc
push
lock
rcr
imul
xchg
pushf
out
lret
mov
pop
nop
ficoml
inc
out
dec
notb
sbb
xchg
add
or
cld
sub
icebp
sbb
nop
jge
xchg
mov
dec
repz
mov
mov
rol
cld
lea
sarb
out
movsb
testl
jmp
mov
cs
push
out
and
dec
repnz
xorb
fdivp
lahf
add
sets
sahf
dec
sub
cmp
or
sbb
imul
inc
xchg
push
movsl
xchg
lea
stos
shl
xor
fsub
xor
mov
popf
loope
inc
loop
adc
insb
movsb
mov
sbb
push
pushf
push
sub
hlt
xchg
mov
in
jecxz
sbb
sarb
push
and
insb
incb
mov
cmp
pusha
sbb
jb
int3
inc
insb
dec
adc
dec
repz
cmp
dec
ss
or
sub
int
sbb
xchg
popf
xchg
xor
inc
xchg
xchg
lods
pushf
lret
adc
push
or
cmpsl
nop
addr16
lret
aaa
add
inc
jp
push
shll
gs
pop
mov
mov
pop
rorb
cmc
mov
sbb
jge
jge
pop
stc
shl
add
fwait
or
and
cld
negb
sub
ja
in
out
jle
sub
js
imul
fs
mov
imul
or
sub
xor
ret
ret
aam
imul
cmp
mov
dec
je
add
inc
aad
mov
push
lcall
jp
iret
adc
adc
ss
sub
lds
inc
sub
xor
in
out
mov
sarl
add
mov
mov
lret
lahf
cmpsb
out
sbb
add
jne
iret
mov
and
shrb
mov
test
test
test
dec
push
stos
outsb
pushf
es
cmpsb
imul
xchg
add
andb
rclb
dec
inc
xor
sbb
repz
cmpsb
jns
adc
lods
sub
xchg
add
cltd
out
lods
fnstsw
and
pop
test
mov
mov
ffree
sbb
sub
iret
sahf
jno
das
shrb
cmpsb
push
push
add
fwait
xor
fmuls
fsubl
fadds
scas
lahf
addl
cltd
sahf
or
iret
and
nop
cmpsb
mov
sub
movsb
shlb
loopne
sub
shll
bound
int3
xchg
iret
mov
lods
sahf
hlt
mov
push
outsb
in
inc
mov
dec
and
mov
repnz
pop
push
push
dec
in
aas
incl
inc
pusha
shrl
add
or
fnsave
inc
jecxz
add
cwtl
icebp
shr
add
xchg
outsb
push
mov
test
xchg
cmp
div
xlat
cmpsb
mov
or
aam
sub
push
icebp
mov
or
in
cmc
sbb
adcl
ljmp
dec
ljmp
mov
ret
mov
cmp
les
dec
push
into
aad
shr
nop
adc
xchg
sub
mov
inc
insl
addr16
test
roll
ss
stos
cwtl
dec
or
xor
xchg
mov
fsubrl
jnp
cmp
mov
lds
imul
push
dec
xchg
sub
adc
and
adc
jne
roll
jl
sahf
sbb
dec
int
mov
mov
xchg
xor
and
orb
mov
hlt
movsl
in
push
xchg
ret
push
inc
test
adcl
pop
or
sbb
aam
sub
jb
ret
cmc
or
icebp
jno
lods
pop
dec
push
notl
andb
scas
nop
mov
shll
xchg
inc
aam
icebp
sbb
test
sub
jp
mov
stc
movsb
addr16
cmp
sbb
mov
jle
sub
std
aad
xor
mov
stos
sahf
je
sub
inc
bound
cwtl
fwait
add
fcmovbe
ss
mov
inc
lea
addr16
cmp
sbb
xchg
xlat
addb
adc
cmp
in
cli
mov
outsl
push
sarl
shll
push
pop
mov
push
outsl
or
stos
aad
andl
mov
int
xchg
stos
jbe
inc
jb
pop
shll
and
inc
or
inc
into
xor
xchg
push
push
les
xchg
sbb
aam
xor
ret
icebp
mov
stc
push
adc
loop
push
cmp
fnstsw
ror
lret
xlat
sub
fadd
push
inc
add
fidivrs
and
mov
std
push
into
push
mov
and
test
or
sarb
mov
scas
adc
imul
xchg
xchg
push
xchg
cltd
mov
and
arpl
jp
jle
sub
pop
jp
fsubl
js
inc
ljmp
push
push
xchg
xor
or
icebp
xor
or
push
je
lret
stos
push
fs
xchg
mov
cld
imul
iret
xchg
adc
and
addr16
lds
fisttps
dec
xchg
stc
lods
mov
sub
scas
or
sub
lds
xor
sti
sub
scas
push
and
ss
nop
adc
sbb
push
lods
xchg
jnp
sub
sbb
cltd
push
or
add
mov
pop
out
lcall
lea
or
cmpb
and
cmc
mov
push
stos
sbb
jge
cmp
test
adc
in
sti
adc
and
ja
xor
cmpsb
rcrb
cmp
sub
in
je
cmp
push
push
sbb
pop
aas
hlt
daa
cwtl
cmp
stc
pop
fstps
lds
cmp
ret
in
fcmovnb
mov
push
dec
push
insb
ds
iret
sbb
adc
mov
sbb
mov
test
sub
inc
fmull
les
push
and
sub
mov
and
stos
mov
insb
inc
shrl
mov
lcall
inc
and
jg
mov
test
lods
icebp
adc
jmp
sahf
pop
aad
ss
push
sbb
jno
les
lret
xchg
push
sbb
push
sub
sub
loopne
testl
mov
inc
push
and
iret
push
shlb
mov
popa
pop
vcvtps2pd
mov
stc
xor
sbb
stc
scas
movsb
xchg
ss
or
in
and
jbe
jno
mov
lds
lock
and
stc
dec
mov
add
fsubrl
add
push
lods
testl
or
mov
popf
pop
xchg
stc
out
ficoms
xor
cmc
add
stos
subb
jle
sub
sbb
add
fld
adc
mov
out
loopne
pop
orl
lahf
xchg
lods
mov
mov
movsl
dec
push
adc
test
and
cwtl
inc
outsl
notl
jo
inc
insb
nop
iret
lret
ja
dec
mov
or
movsl
xchg
cmp
dec
js
pop
sbb
mov
mov
inc
cld
les
movsb
inc
xor
shll
ret
adc
out
sti
xchg
test
inc
sub
popf
outsb
mov
repnz
and
sbb
adc
sahf
mov
add
sbb
dec
popf
dec
add
cmpb
pop
xlat
jne
mov
nop
mov
jns
int3
ja
test
dec
fiaddl
xchg
inc
in
lahf
dec
inc
cltd
dec
icebp
sbb
adc
push
add
mov
push
std
fsubrs
add
sbb
test
std
dec
hlt
sbb
dec
pushf
or
hlt
rorb
adc
inc
sbb
addr16
cmp
add
dec
xchg
adc
mov
xchg
adc
sbb
sub
mov
ss
push
test
fistpl
pusha
xchg
or
mov
or
sbb
fistps
incb
negl
cmp
popl
dec
push
or
sbb
push
test
and
sbb
pop
addb
popf
aas
andl
iret
push
xchg
push
ljmp
jg
les
sub
and
mov
icebp
add
cmp
push
mov
and
push
mov
adc
xor
mov
jle
mov
loopw
xor
mov
ret
repz
stos
xrstor
dec
mov
loop
lods
xchg
push
test
lret
or
xchg
sub
sub
and
out
les
add
inc
push
mov
ja
xchg
mov
mov
clc
push
cli
fistl
adc
add
lea
mov
stc
bound
aas
inc
adc
jg
lods
or
in
fldcw
mov
nop
gs
adc
in
jnp
aas
loop
test
pop
and
or
leave
mov
ficoms
lret
mov
mov
mov
adc
rcrl
stos
ss
push
mov
jecxz
fstps
xorl
test
mov
test
inc
pop
sbb
call
mov
add
xchg
jecxz
fwait
and
mov
pop
fs
int3
cmpsb
loop
xchg
loope
popf
xor
pusha
insb
out
inc
pop
mov
icebp
add
add
int3
inc
sbb
scas
test
scas
stos
out
stos
adc
dec
test
in
sub
mov
scas
adc
or
sub
loop
dec
sub
sub
push
pop
jg
mov
fs
lcall
xor
push
popa
test
sti
popf
add
sbb
aaa
jmp
es
pop
mov
popf
icebp
inc
sti
and
lahf
pop
ds
push
iret
and
dec
insl
dec
inc
jmp
int3
jge
adc
sub
sbb
movsl
mov
aaa
pop
in
lcall
and
mov
cld
filds
add
sub
jp
mov
call
lret
adc
xchg
test
sbbl
bound
pop
lcall
lret
add
pop
or
hlt
cmp
roll
sbb
sahf
int3
in
daa
and
or
mov
cmp
aad
or
and
test
lds
xor
daa
mov
scas
sbb
jnp
xchg
in
test
lahf
mov
inc
mov
jnp
jle
adc
cmp
jmp
xchg
sti
scas
ja
mov
ja
dec
shlb
cmpsb
out
imul
jle
xchg
push
hlt
popf
rol
sbb
sub
xchg
and
jle
aaa
scas
mov
inc
sbb
sar
cmc
inc
stc
popa
movsb
cs
std
cs
sub
nop
call
and
movsl
xchg
fwait
aam
ret
insb
sbb
mov
mov
push
test
push
adc
insb
push
cmc
subb
cmp
xchg
stos
cwtl
sti
js
gs
and
pop
mov
pop
repz
xchg
sbb
scas
test
jp
inc
fisubrl
mov
adc
fs
push
imul
cli
negl
in
dec
xor
xor
or
inc
hlt
and
aas
popa
push
mov
xchg
push
sbb
in
out
movsl
popa
vpsrld
or
jbe
cmp
jae
sahf
ljmp
jns
dec
popf
and
mov
mov
or
sub
pop
in
lods
cmc
in
in
hlt
xor
and
and
push
adc
mov
pop
ja
mov
jae
cli
jge
or
pop
jno
cmpsl
or
adc
adc
mov
xchg
nop
pop
enter
adc
ds
test
sbb
xor
shrb
xchg
lret
cld
push
dec
xchg
push
cs
or
cltd
add
in
stc
test
mov
push
popa
repnz
dec
mov
inc
popa
andl
lds
cltd
repnz
push
mov
mov
popf
jl
or
in
cmp
in
dec
xchg
test
ss
leave
ret
pop
dec
hlt
lea
int3
mov
out
xchg
add
nop
jle
nop
test
xor
mov
mov
xchg
push
jmp
jl
pop
sub
imul
hlt
pusha
out
jo
negb
pop
stos
adc
lock
adc
xor
push
daa
fldenv
mov
lcall
jl
fcmovbe
jo
fcmovu
lock
cmpsl
sahf
cmc
xchg
mov
stos
fadd
xor
xchg
jecxz
sbb
cli
aam
arpl
sbb
mov
test
jge,pt
sub
mov
mov
xchg
lods
icebp
pop
insb
xor
mov
inc
nop
les
leave
xchg
scas
and
mov
add
xchg
sub
cli
xor
cld
cli
lock
mov
les
mov
dec
repnz
push
dec
adc
mov
aaa
lret
mov
sub
jle
nop
adc
hlt
stos
xchg
lcall
movsl
jp
xlat
in
movsl
js
clc
lds
out
fadds
sbb
dec
lret
add
mov
xchg
sti
dec
adc
iret
jo
test
jp
out
sub
mov
sbb
push
adc
repz
add
movsl
mov
insl
jb
mov
addb
ret
jne
pop
mov
sub
jle
rcrl
movsl
shll
inc
inc
fcompl
aad
add
inc
mov
sbb
fldl
in
add
repnz
sbb
dec
lret
das
pusha
pop
mov
add
inc
dec
insl
xor
incb
ret
or
adc
pop
shrl
stos
cli
sub
xor
push
jno
jnp
add
enter
pop
or
addb
lds
pushf
ljmp
push
lds
ja
imul
pop
mov
mov
insl
gs
push
add
xchg
xchg
jne
hlt
jmp
popf
shlb
pop
jns
mov
loopne
cmp
jg
push
fnsave
xor
fld
cli
ret
mov
add
lods
out
cmp
push
mov
cs
mov
cli
cld
mov
movsl
mov
pop
xlat
and
sti
adc
mov
je
pop
lock
and
cmp
xor
mov
dec
insb
inc
pop
mov
stos
xchg
xor
lret
push
bound
mov
adc
mov
jb
mov
ret
or
insl
popf
aam
dec
mov
mov
add
fidivrl
dec
sbb
das
jmp
jo
mov
movsl
pusha
stos
add
pop
ss
loope
data16
push
sub
call
jge
shll
cmpsb
push
dec
stc
inc
dec
xlat
mov
jmp
aaa
test
jecxz
hlt
out
dec
inc
jmp
mov
jecxz
sbb
xor
imull
ja
cwtl
jl
xchg
mov
pop
jg
cmp
mov
enter
sub
movl
out
mov
sub
movsl
in
pop
es
dec
xchg
xchg
sbb
outsb
pop
lds
fsubrl
pop
test
addr16
jnp
jge
xchg
lret
cmpsl
int
stos
mov
imul
dec
mov
dec
mov
push
xor
in
test
push
ja
popf
shr
test
pushf
sub
in
outsb
dec
push
es
popa
sbb
mov
rcr
shrl
clc
dec
iret
adc
test
pushf
push
popa
insl
sti
cld
stc
xor
lods
aad
or
cmpl
sub
loopne
in
loope
mov
fcomps
xchg
push
nop
divb
adc
lahf
or
push
push
and
adc
pop
cwtl
add
aam
in
addr16
shl
out
or
lret
or
cli
adc
or
in
lret
and
push
sbb
fists
add
aas
cmp
pop
adc
in
mov
rclb
cmpsb
fstpt
lahf
das
dec
addb
pop
add
out
push
out
fdivrs
ror
in
sub
dec
stos
inc
and
push
shrb
or
adc
fs
gs
mov
xchg
loope
xchg
sub
insl
push
jns
jo
aaa
ficomps
mov
dec
pop
jbe
into
jb
and
push
stos
shrb
xchg
jg
aas
repz
jge
pop
jne
pushf
inc
cld
sbb
cld
inc
fisttpll
scas
push
pop
cmp
and
cmp
push
pop
adc
into
ds
scas
push
jp
rcll
inc
mov
mov
mov
or
jl
pop
popf
xor
fsub
or
sbb
add
cmpsl
lods
imul
cwtl
mov
repnz
jl
xor
cld
xchg
lahf
inc
mov
stos
sbb
or
dec
shrb
and
shll
cmc
sub
test
orb
mov
jnp
mov
fiadds
hlt
dec
mov
add
cld
roll
cmp
adc
dec
adc
xchg
leave
jne
sub
sbb
icebp
and
pop
push
adc
xor
insb
rclb
popf
data16
out
fldl
mov
outsl
jmp
add
das
jns
inc
fs
xchg
or
ss
idiv
push
test
dec
jae
or
xchg
or
fs
shl
xor
xchg
test
or
ret
mov
lahf
mov
xor
notb
cmc
bound
je
clc
push
daa
sub
cwtl
or
xchg
dec
xor
stos
mov
pop
stc
xor
mov
std
movsl
lock
andl
mov
push
xor
dec
out
sbb
mov
adc
and
sarl
mov
insb
add
xchg
xor
xor
jl
ret
sbb
fidivs
js
cli
or
jns
fimull
lea
xchg
adc
sub
jle
lods
fidivl
repnz
mov
cmp
jbe
sub
push
test
add
dec
cmp
leave
dec
flds
into
mov
push
out
push
mov
je
dec
in
fnstcw
fildll
sbb
push
out
or
and
add
out
pop
inc
mov
jle
testb
test
xchg
bound
jmp
mov
mov
add
pop
add
add
jmp
sbb
mov
xor
jo
dec
push
mov
jmp
repnz
mov
iret
add
std
inc
xchg
ja
pop
dec
xchg
xchg
loopne
loope
out
jg
enter
nop
pop
or
mov
cmp
add
pushf
shr
sbb
sbbb
push
push
dec
or
lea
pop
int
lods
lock
pop
aaa
xchg
adcl
mov
cmp
add
pop
cli
push
pusha
push
pop
lods
cltd
and
pop
jae
mov
nop
out
pop
aaa
stos
dec
ror
clc
lret
cmpsb
dec
leave
ret
sub
nop
lret
pop
xchg
dec
shr
test
sbb
outsl
jmp
in
xchg
lods
xchg
lock
jl
sbb
cmp
sub
in
into
mov
test
stos
or
sbb
pop
push
sub
mov
push
das
mov
xchg
jl
ret
hlt
mov
mov
adc
mov
pop
cmpsl
data16
loop
popa
out
cmpsl
negb
push
stos
pop
stos
inc
jnp
mov
jmp
into
mulb
sub
fiaddl
pop
in
stc
sti
ss
sbb
cs
fldl
dec
sub
push
cli
lret
fsubl
push
addr16
lret
pop
push
lret
cmp
jns
je
leave
test
test
jg
push
cmp
addr16
sbb
call
xor
shll
fisubrs
ret
aam
outsb
xchg
push
dec
outsl
cmp
xor
mov
imull
fnstcw
rcl
sahf
out
cld
and
cmc
cmp
cmp
pop
sbb
inc
push
sbb
sbb
sbb
out
cwtl
push
nop
xor
fistpl
pushf
aam
mov
insl
lods
push
mov
push
dec
cmpsb
mov
movsl
inc
dec
inc
sub
and
xor
pop
aad
sbb
add
mov
sbb
inc
xor
stos
bound
fadd
inc
std
inc
aad
mov
fdivs
jg
out
les
idivl
sbb
ss
dec
cmp
jg
xor
jne
push
mov
popa
iret
rcll
lahf
ds
or
out
addr16
inc
dec
test
xchg
jb
jle
push
pop
push
mov
ds
or
gs
pushf
inc
ja
ds
adc
xor
pop
in
fistpll
cmpsl
sbb
push
nop
mov
xchg
mov
cwtl
mov
dec
rep
sbb
or
out
fisubl
sbb
jb
pop
mov
popa
in
inc
cld
nop
or
lret
lahf
call
insl
test
jmp
xchg
andl
rcrb
inc
lret
and
push
fstps
sub
xchg
xchg
scas
sbb
jecxz
in
adc
xchg
rcrb
inc
ds
jo
pop
aaa
ss
fadd
and
xchg
mov
mov
rorl
out
cs
add
shlb
mov
xchg
data16
dec
stos
ds
jl
push
lock
std
rorl
testb
mov
aaa
inc
cmp
cmpsb
pushf
repz
data16
and
push
or
rcl
fimull
adc
js
inc
stos
scas
adc
jle
movsl
pop
stos
inc
jne
arpl
xor
bound
add
sbb
sbb
mov
xlat
mov
adc
xchg
xchg
xor
dec
rcll
pop
mov
sbb
std
mov
test
xchg
pop
jmp
rcrb
add
xchg
call
in
sahf
stos
inc
outsl
jge
xchg
pop
subl
mov
jne
dec
loopne
lret
dec
dec
ds
dec
mov
les
cltd
scas
daa
shl
or
pop
pop
dec
test
fisubs
inc
push
mov
dec
test
aas
hlt
add
mov
dec
pop
inc
dec
aam
add
int
pop
ss
mov
stc
insl
gs
jno
lods
es
adc
cmp
popf
mov
in
lea
pop
jne
pop
mov
pop
jno
sub
lahf
inc
out
mov
mov
dec
inc
adc
pop
subl
sarb
out
cs
pop
test
fcmovne
ficompl
out
jo
mov
lcall
sub
push
cmp
pop
xchg
lock
cmovne
faddl
adc
pop
xchg
fadds
loopne
js
mov
mov
inc
adc
fcoms
xor
arpl
cmp
jo
lret
loope
out
mov
xchg
sbb
mov
ja
lods
leave
leave
add
push
fwait
inc
cmp
lea
scas
cmp
sahf
fsubl
pop
xchg
aam
insl
sbb
and
fistpll
jle
push
dec
mov
mov
testl
xchg
test
pushl
je
ret
icebp
push
dec
flds
shr
xor
cmp
ljmp
mov
insw
xchg
and
in
inc
push
add
std
lods
add
and
and
mov
mov
cwtl
das
lret
movsl
add
sub
maxps
in
dec
insl
je
mov
jne
xor
xor
sbb
and
les
aad
jne
mov
adc
adc
cli
ficomps
xor
inc
xchg
enter
enter
mov
pop
adc
fs
xchg
mov
movq
in
jnp
leave
and
or
mov
mov
gs
mov
mov
in
outsl
add
and
push
or
adc
mov
jnp
fisubs
and
js
aad
sbb
aam
or
pop
repnz
loope
loop
add
les
sbb
mov
xor
mov
push
or
mov
cmp
cmp
shr
push
cmp
xor
icebp
push
inc
lds
es
push
sub
jbe
ss
jg
xchg
movsl
cmc
es
nop
adc
outsl
pop
and
aas
int
popa
cmc
lods
pop
mov
fldt
sbb
cmovb
mov
imul
cmp
and
lret
and
ret
xchg
inc
sbb
mov
stos
cwtl
fisubs
dec
push
test
sub
mov
xchg
fisttpl
ret
aam
adc
fwait
xchg
xor
sub
dec
xchg
daa
adc
push
ds
arpl
incb
loopne
out
xchg
mov
divb
and
pop
cmpsb
mov
enter
xlat
mov
ss
cmp
fnstenv
stos
or
imul
adc
and
add
js
sub
fs
or
add
movsl
add
call
mov
lret
gs
cs
adc
xor
les
test
jg
xchg
testl
sbb
fnstenv
xchg
sbb
cs
stos
or
adc
inc
cmp
mov
dec
push
mov
adc
lret
stos
and
xlat
sub
push
frstor
test
cltd
cmp
jecxz
jnp
pop
jbe
pushf
scas
fwait
mov
xchg
xchg
jne
pop
scas
xchg
jp
daa
mov
inc
add
lock
pushf
and
cmpsl
push
xor
xchg
mov
out
xchg
ret
jae
push
jmp
inc
and
insb
adc
mov
into
push
mov
in
enter
mov
or
fstps
pop
sarl
xchg
ror
mov
adc
aam
stos
daa
push
fstpl
or
sbb
in
adc
sahf
push
loopne
xor
sub
ret
xor
testb
fistpl
rorb
xor
mov
stos
dec
mov
mov
sub
lods
adc
movsl
in
scas
mov
shl
push
test
in
sbbb
movsl
sub
cs
pop
xchg
pop
pop
jnp
mov
bound
pop
enter
popf
adc
and
sub
inc
icebp
inc
sbb
xchg
rcll
pop
stos
shrb
sbb
add
in
pop
ret
or
dec
inc
fnstenv
mov
imul
faddl
pop
popf
dec
add
sbb
stc
loop
sub
inc
mov
mov
lds
mov
fisubrs
test
add
add
adc
es
xor
adc
or
andb
pop
xor
fldl
xor
cltd
sarl
pop
adc
sbb
push
jb
sbb
jg
dec
int
iret
fildll
pop
test
add
push
fimuls
pusha
pop
pop
xchg
loopne
push
stos
cmp
enter
mov
lahf
pop
fmuls
mov
mov
push
insb
pop
nop
iret
push
movsb
mov
pop
push
cmp
ja
xchg
and
mov
loopne
movsb
push
dec
cwtl
sub
pop
in
pop
inc
sbb
inc
arpl
scas
lods
sti
sub
fst
hlt
shrb
xchg
push
rcrb
add
int
pop
pop
xchg
into
and
jae
sbb
in
push
mov
xor
pop
push
mov
inc
shrl
lods
pushf
cmp
pop
test
dec
mov
jge
mov
cwtl
in
flds
leave
imul
mov
pop
lahf
inc
xlat
xor
scas
lds
sti
fadds
and
mov
orl
sbbb
fdivl
xchg
add
popa
mov
jns
ds
outsb
cwtl
mul
sub
in
bound
adc
aam
add
push
sub
out
add
jl
jnp
fs
xchg
mov
xor
xchg
jo
bound
pop
jge
jns
and
inc
pop
and
bnd
mov
fwait
sbbb
mov
cmp
dec
and
jl
push
add
insb
out
daa
sarb
dec
in
xlat
mov
fmull
sub
outsl
mov
cmp
lock
jge
and
mov
adc
sbb
aam
lret
leave
outsb
push
xchg
int3
push
cli
jle
or
pop
aas
xor
sub
cmpsb
sub
daa
sub
add
mov
popl
test
mov
or
rcrl
std
dec
adc
dec
jg
sbb
mov
test
or
push
adc
stos
cmp
sub
jnp
adc
insl
inc
adc
sub
dec
or
pop
inc
call
push
sbb
jb
sub
adc
mov
in
adc
xor
jnp
lea
fcomip
stc
sbb
inc
hlt
cld
aam
mov
or
cs
and
cmp
fs
cwtl
xchg
sub
push
cmpb
lock
scas
jmp
inc
lock
out
ja
sub
jp
mov
movl
add
fadd
aaa
and
div
in
stos
pop
jg
mov
dec
xchg
testb
cmpl
jp
jns
push
int3
stos
icebp
jg
pop
sarb
mov
jns
fistpll
dec
dec
aad
out
xchg
xchg
idivl
movsl
iret
xchg
fwait
lds
test
mov
pop
ja
scas
jle
xchg
dec
and
fists
pop
dec
clc
iret
or
int
xchg
dec
sbb
mov
or
js
jmp
inc
fldt
xchg
stc
push
add
cmp
aam
xor
sbb
adc
mov
stos
sub
adc
xchg
push
inc
out
sarb
iret
sub
sbb
jmp
scas
sti
xchg
push
in
aaa
inc
loope
js
cmp
nop
xchg
ret
jp
js
mov
jecxz
mov
popa
cmc
jle
fisubrs
add
cmp
xor
cltd
mov
and
xchg
lcall
adc
fiaddl
lds
cmpsb
test
sbb
xor
outsb
xchg
jns
and
inc
jns
xchg
andb
test
adc
in
xchg
jle
inc
mov
jl
xchg
lods
dec
repz
es
mov
mov
cmpb
fistpll
sub
insl
scas
call
sbb
fisubs
in
sbb
or
sub
inc
call
loopne
not
std
adc
inc
loope
insb
push
xchg
cmp
sbb
pop
xchg
lea
cmp
fdivrp
in
or
push
pop
lea
cmp
insb
pop
outsb
cwtl
dec
stos
outsb
jmp
jb
cli
sbb
mov
xchg
push
inc
cmpsl
dec
ror
add
pusha
jo
and
push
test
cmpl
int3
into
or
test
arpl
adc
test
lea
mov
sbb
sub
push
in
push
addr16
xor
fildll
cmp
mov
ret
jnp
pop
jmp
movsb
jp
inc
jb
xor
fldl
leave
fwait
insl
sahf
popa
jo
xor
jnp
mov
pusha
fimull
cmpps
gs
rolb
hlt
push
push
jb
sub
stos
imull
sbb
dec
les
inc
popa
adc
xchg
negl
sbb
and
in
sub
popf
pop
sub
mov
repz
cli
xchg
or
xor
mov
xor
adc
jmp
push
fs
xchg
loope
sbb
orl
mov
push
mov
addl
dec
mov
adc
pop
push
adc
inc
lods
xchg
pop
mov
sub
mov
sub
sbb
ds
add
int
test
xchg
in
mov
sbb
mov
push
fidivrs
jns
repz
aad
fsubp
mov
push
fidivrl
mov
or
inc
repz
loop
loope
out
push
inc
inc
shlb
lea
xor
mov
pop
mov
mov
cmp
or
and
xchg
sbb
ficoml
xchg
hlt
dec
mov
mov
je
xchg
xchg
push
fnstsw
ja
fcomps
sti
and
es
sbb
cli
sahf
add
push
mov
shlb
xchg
bound
jns
es
push
pop
loop
adcl
pop
scas
sub
clc
movsl
jae
pop
sub
jo
cmpsb
rcrb
dec
mov
xor
mov
arpl
popf
add
lcall
pop
push
stos
push
xchg
sbb
and
pop
sbb
cli
push
and
sahf
out
clc
sbb
jg
ja
sbb
mov
xor
sbb
lcall
mov
push
or
or
pop
xchg
mov
rcrb
icebp
test
aad
mov
outsb
pop
int3
cmp
cwtl
adc
enter
xchg
adc
mov
repnz
popa
ret
mov
lret
xchg
push
mov
pusha
lea
sub
xchg
test
jbe
fistpll
out
and
xchg
dec
xchg
jle
sbb
js
lea
mov
movsb
pushf
stos
sbb
ljmp
daa
xchg
xor
sahf
repz
cmpb
adc
test
int
lods
mov
mov
or
push
jo
mov
inc
dec
fisubrs
aam
cld
outsl
sbb
push
sub
push
cmp
test
jnp
xor
and
jns
xor
in
loopne
sarl
xchg
daa
bound
aad
data16
ljmp
lock
push
mov
xchg
scas
popf
jae
loope
push
adc
and
cli
adc
stos
push
mov
fisttpll
jne
push
sbb
rorl
mov
in
mov
ret
stc
ja
mov
jns
rorb
adc
cmp
sbb
pavgb
lret
pop
lret
les
lds
lods
mov
pop
dec
mov
insb
and
jne
outsb
les
movsb
repnz
push
das
nop
mov
loop
sbb
dec
lret
test
xchg
incb
scas
in
lds
rclb
mov
inc
xorl
lods
dec
jg
jne
inc
dec
and
mov
in
or
test
sbb
sub
mov
movsb
xchg
test
scas
inc
pop
sub
stos
dec
mov
mov
imul
lcall
inc
sub
jnp
pop
adc
out
ljmp
xchg
push
pushf
pop
sub
lahf
jne
and
sub
jle
sub
mov
and
into
add
xchg
lods
je
outsb
mov
jne
and
gs
stos
stc
inc
out
xchg
jecxz
inc
cmc
mov
push
dec
stc
inc
mov
or
loop
sub
sub
mov
xchg
cmp
pop
lahf
les
lds
add
and
sbb
mov
lods
inc
adc
shrl
cld
mov
dec
test
lret
in
mov
mov
cwtl
test
push
mov
jns
or
jmp
int3
pop
ja
jp
jecxz
les
scas
cli
and
insl
jl
dec
cltd
mov
jne
dec
push
daa
stos
out
mov
jnp
popf
mov
nop
fidivl
sub
call
jecxz
pop
daa
inc
lcall
aaa
dec
sub
sbb
sub
sbb
or
inc
add
je
xor
ftst
mov
stos
aad
cmp
in
adc
insb
and
sbb
stos
mov
xchg
ret
xor
mov
push
or
mov
nop
and
subl
push
stos
mov
add
sub
pop
arpl
in
pop
or
adc
mov
mov
mov
xchg
enter
shl
popf
xor
sbb
test
sub
adc
test
daa
loop
ss
pop
daa
sbb
pop
cwtl
stc
les
sahf
test
cmpsb
in
jne
imul
sbb
mov
push
gs
js
pop
les
push
mov
xchg
stos
sub
aas
mov
sbb
int
pop
out
pushf
insb
sbb
or
xorl
cltd
inc
inc
imul
sub
xorl
adc
nop
adc
push
dec
addr16
xchg
fadds
add
arpl
insb
inc
bnd
cs
in
js
inc
ficoms
push
cld
push
jb
scas
pop
subl
mov
int3
jnp
xchg
and
mov
lea
xchg
orl
fnstcw
lock
dec
jae
sbb
add
pop
dec
push
mov
daa
and
mov
xor
and
and
loop
mov
cld
add
sbb
pop
xchg
je
adc
sub
popa
das
push
in
call
mov
popf
and
xchg
dec
dec
jecxz
sbb
sub
cwtl
ret
aas
shlb
and
test
dec
stc
jne
xchg
fsts
fstl
xchg
lcall
addr16
mov
mov
dec
pop
in
pop
pop
sti
mov
jnp
mov
dec
mov
std
dec
insl
mov
cmc
or
cmp
xchg
dec
push
lea
sub
jle
hlt
jns
inc
mov
shrl
sbb
out
and
jae
fs
pop
ficomps
pop
mov
out
mov
mov
aas
mov
push
sub
or
stos
leave
lods
pop
sbb
adc
lahf
mov
xlat
xor
mov
fsubrp
jl
shll
push
sbb
fdivrl
sub
cli
cmp
cltd
mov
jb
dec
sub
pop
push
in
shrb
fcompl
jge
sbb
push
mov
scas
mov
ja
xchg
pop
xor
shlb
fisubrl
imull
mov
cmp
xlat
lret
jmp
enter
sbb
push
sbb
leave
mov
sub
ror
push
add
sbb
or
cmp
pop
hlt
add
mov
cltd
stos
push
fs
inc
nop
mov
and
push
daa
adc
gs
add
test
loopne
insl
ja
repnz
mov
into
dec
test
xor
sbb
xorl
jae
jne
lock
pop
inc
inc
xchg
and
pop
or
pusha
les
push
das
inc
hlt
jge
push
jle
pop
stos
sub
clc
gs
push
into
push
dec
into
jne
pop
lods
dec
lods
jno
inc
and
mov
stc
mov
ss
test
mov
dec
and
pushf
pop
adc
nop
push
fists
pusha
and
adc
mov
xchg
cmp
pop
scas
movsb
dec
in
and
ret
cmp
ja
and
cmpl
fdivl
jp
lea
divb
mov
push
dec
cmp
fstpl
in
ret
cmp
test
lods
lock
imul
inc
ds
xchg
ds
inc
rcll
stos
roll
mov
hlt
aas
add
sub
daa
mov
push
inc
xchg
add
mov
jl
pop
aam
aaa
xor
mov
push
ficomps
mov
cs
pusha
push
adc
cmp
inc
mov
push
lods
fnstsw
push
cmp
rcr
sbb
add
sbb
iret
mov
jge
and
and
lret
les
addr16
pop
test
sbb
inc
roll
out
sub
push
loopne
iret
xchg
pop
inc
mov
cltd
inc
xchg
pop
cmp
test
and
sbb
popl
loope
lds
pusha
scas
sbb
or
sub
pop
jle
mov
jne
in
sub
adc
mov
mov
ljmp
jne
xchg
pop
pop
dec
push
repz
mov
fcos
movsl
std
xlat
orl
aas
xchg
sbb
shrl
fcomi
lret
popa
xchg
mov
mov
cmc
notb
mov
jbe
es
les
push
sub
sub
cmp
nop
and
jl
dec
mov
sbb
and
stc
ds
lock
mov
jbe
in
jno
shll
cmp
push
or
cmp
cmpsb
scas
jb
jp
dec
sbb
jnp
repnz
or
mov
xchg
push
cs
fsubs
push
xchg
xor
repz
mov
in
dec
stos
into
ret
jno
mov
mov
xorl
lret
lea
jle
push
je
xchg
shll
dec
and
in
int3
dec
xchg
dec
mov
pop
cmp
sub
pop
sub
hlt
mov
insl
add
sub
inc
sbb
aad
mov
sti
lret
adc
pop
orb
pause
dec
push
adc
cmp
and
lret
enter
aam
out
add
mov
in
shlb
fcomps
push
fs
outsb
out
and
mov
scas
ljmp
out
rclb
jne
pop
aas
into
fldcw
cwtl
xor
hlt
pop
in
test
bound
es
ss
adc
dec
cmpsl
xor
pop
hlt
xchg
fcoml
insl
inc
xor
add
imul
mov
movsb
out
ljmp
mov
inc
mov
add
xchg
mov
mov
mov
mov
push
imul
adc
mov
lds
pop
or
es
movsb
je
or
pop
and
sub
ss
rclb
sbb
push
insl
mov
xchg
jne
enter
mov
arpl
pop
clc
mov
out
je
scas
sub
push
es
scas
jbe
jg
in
mov
inc
and
les
or
mov
movsl
in
and
mov
mov
insb
and
cmp
push
add
ret
push
inc
cwtl
test
repz
incb
out
iret
rclb
int
fs
cmp
and
sbb
mov
cmp
mov
dec
xlat
inc
or
jbe
sti
fdivl
add
mov
or
in
xlat
mov
daa
jno
add
xchg
xor
movsb
mov
sub
es
and
adc
push
ljmp
mov
sahf
mov
cmp
sbb
and
jno
sldt
adc
mulb
addr16
std
aam
sbb
and
loop
rcl
cwtl
pop
ss
and
or
es
sub
jmp
mov
and
leave
inc
mov
sub
add
cmp
fimull
pop
enter
adc
xchg
ret
xor
lds
jmp
inc
adc
dec
push
call
inc
xchg
sbb
adc
and
and
inc
cli
cmp
cltd
test
sub
stos
jbe
test
push
jge
testb
lret
mov
sbb
xchg
add
aam
sbb
in
mov
out
push
aam
sbb
icebp
xor
push
test
and
inc
pop
ret
adc
xchg
in
in
xchg
xchg
scas
xor
mov
scas
xchg
adc
sbb
mov
movsb
xchg
out
cs
inc
dec
push
es
push
push
sub
or
and
sub
pop
jecxz
shll
adc
stos
sti
in
mov
shrl
scas
scas
jns
ss
std
ss
push
dec
xchg
push
inc
or
cwtl
je
test
fdivrl
push
lods
icebp
fcmovb
xor
ss
cmp
xchg
stc
scas
mov
pop
es
xchg
rcrl
movsl
rolb
add
pop
fs
inc
mov
inc
or
pusha
cmp
iret
repnz
xor
push
xchg
push
dec
subb
outsb
sub
push
clc
pushf
dec
ret
mov
fwait
and
or
inc
sub
loopne
xchg
mov
xchg
pop
les
cld
fdivrp
sarb
pushf
mov
je
jp
sub
pushf
in
xor
outsb
add
out
cmpb
lea
outsl
test
imul
sbb
aam
jmp
insb
or
int3
jne
lcall
xor
sub
in
out
push
jl
lcall
jle
jae
mov
push
aad
pop
adc
pop
or
daa
sub
inc
add
subl
subl
out
jns
and
ror
sub
ljmp
mov
and
sbb
xor
add
movsl
jb
lds
adc
int3
nop
imulb
in
xchg
cmpsl
cmc
add
lret
subl
add
mov
js
adc
je
and
dec
push
test
int
daa
and
sti
cld
sub
push
shll
fnstenv
repnz
sub
xchg
jecxz
cmp
cld
adc
cmp
adc
cmp
mov
mov
add
mov
cs
inc
dec
dec
frstor
and
lds
pop
into
sub
cltd
push
dec
sbb
inc
cli
cmp
loope
pop
std
jp
repz
ret
push
and
xlat
cli
jge
cwtl
icebp
rcll
xor
xlat
into
movsb
cmp
xchg
sub
int
cmpsb
and
inc
fmull
fildl
test
in
lds
lods
rorb
xlat
aad
pop
jo
mov
sbb
or
fs
or
jp
push
adc
cmc
loopne
aad
push
outsb
rorb
sub
inc
inc
stos
fimuls
and
popa
sub
lahf
arpl
pushf
mov
sbb
mov
xchg
bsr
jle
inc
pop
and
leave
xchg
out
sbb
mov
mov
repz
sahf
dec
sub
addr16
lds
jmp
and
iret
cmc
push
and
sub
mov
outsb
inc
aas
mov
nop
pop
jmp
gs
test
les
pop
cmp
int
mov
xor
inc
push
cmpsb
xchg
jp
push
lds
inc
enter
std
sub
mov
addr16
xchg
sub
in
scas
mov
sub
mov
dec
cltd
sbb
sub
daa
int3
cmp
mov
aaa
cmp
pop
sbb
js
mov
sub
jmp
test
cmp
divb
mov
jbe
lret
mov
push
dec
dec
imul
mov
sahf
mov
sub
and
cmc
orl
cmpsb
imul
call
popf
out
out
sti
jno
pushf
jns
or
inc
fs
xchg
mov
popa
nop
cmpsl
mov
jbe
push
mov
fs
xchg
push
xchg
or
dec
pop
push
adc
sti
das
sbb
je
imulb
pop
sub
test
mov
or
sbb
stos
push
dec
jp
fst
vmread
int
sti
sahf
bound
outsl
cmpb
lods
imul
xchg
xchg
or
mov
inc
out
push
sti
repnz
and
lock
mov
fnstcw
fcomps
inc
sbb
xlat
cmp
sub
mov
pop
add
cmp
push
xor
adc
inc
pop
mov
jae
mov
test
lods
cmp
lods
popa
insl
xor
mov
out
test
sub
hlt
mov
sub
jl
jle
cmp
sbb
bound
outsb
pop
pushf
stos
pop
sbb
xchg
pop
xchg
cmpb
popa
jecxz
jp
xor
xchg
mov
xchg
jle
inc
addr16
mov
mov
mov
mov
pop
sbb
push
aaa
sub
sub
lods
pop
jg
sbb
mov
mov
lcall
adc
xchg
inc
or
pop
pop
pop
outsl
xorl
rcll
lods
adc
adc
xchg
cmp
xor
inc
and
sub
lea
and
and
loopne
jne
mov
cs
mov
mov
or
push
sub
add
mov
ljmp
pop
push
xchg
outsl
fsqrt
xchg
and
fiaddl
fwait
sub
arpl
aas
xor
nop
sbb
add
add
cmp
fdivp
pop
pop
sbb
rclb
cmpsl
sub
jge
pop
push
js
cmpsl
jae
out
sub
push
out
mov
insl
pop
jg
xchg
pusha
cmp
add
push
sar
jecxz
mov
call
subl
out
aas
std
scas
fistps
call
les
rcll
xchg
lahf
jno
inc
push
mov
xchg
mov
outsl
cltd
xchg
or
ja,pn
mov
push
es
jb
sub
push
testl
jae
pop
js
iret
xor
inc
add
mov
roll
cmovb
fwait
repnz
xchg
out
xor
sbb
mov
mov
cmp
mov
insl
and
xchg
enter
cld
and
sub
arpl
loope
xor
pop
loop
shl
mov
enter
and
sub
pop
in
lcall
inc
test
es
xor
xchg
sarl
lods
int
or
lods
jle
jbe
push
addr16
xor
mov
xorb
test
cmpsb
fimuls
xchg
jae
xorl
or
mov
loopne
jno
fld
mov
test
and
addr16
rcrb
shlb
lea
adc
dec
cld
cmp
scas
js
adc
mov
xchg
pushf
ja
jae
pop
mov
cltd
xchg
iret
sbb
pop
loope
cwtl
and
andb
out
ds
dec
mov
lock
push
loopne
lahf
enter
sub
mov
pop
sub
arpl
mov
shlb
sub
test
inc
sbb
mov
lods
dec
mov
das
shlb
out
xchg
inc
jp
fnstsw
xchg
les
in
insb
cmp
cli
iret
fcom
sbb
int3
enter
lods
sbb
push
addr16
mov
pop
lods
xor
or
ja
push
cld
into
ds
mov
cltd
xchg
or
or
scas
pop
popa
pop
cmc
test
and
and
xor
lea
loop
ljmp
aaa
xor
cld
andb
cmp
xchg
es
sahf
stc
jbe
jge
leave
mov
jnp
cmp
outsl
adc
cli
xchg
jecxz
sub
dec
ret
xor
cmp
mov
mov
adc
in
rclb
mov
cmpsb
leave
and
push
rcrb
lcall
movsl
inc
lret
test
in
orl
dec
mov
dec
daa
inc
idivl
cld
iret
movsl
jbe
cltd
xchg
lea
sarb
bound
push
sti
pop
adc
dec
and
decb
pop
dec
aad
fisubrs
into
xlat
out
dec
fcmovnb
dec
rolb
mov
mov
loope
clc
dec
xchg
mov
pop
lret
rorb
sbb
hlt
test
push
iret
jno
pop
aad
mov
inc
adc
sahf
inc
int
ja
xchg
sub
pop
push
nop
jle
lock
cmp
jo
inc
je
or
ss
fisubl
cwtl
out
insb
int
adc
xchg
pop
cmp
xchg
out
mov
in
ss
adc
adc
sbb
sub
pop
xlat
and
sahf
sahf
mov
ss
addr16
pusha
xchg
mov
gs
lods
in
push
ljmp
into
icebp
loope
and
dec
or
adc
mov
pop
inc
scas
std
push
xor
pop
in
ficoml
pop
stos
mov
out
sbb
cmp
cli
cmc
sub
loope
jo
nop
aam
stos
mov
das
push
rclb
push
es
daa
inc
dec
adc
inc
and
and
sbb
je
mov
daa
xchg
insl
and
lock
test
aas
cmp
cmp
daa
js
pop
mov
or
aaa
movsb
adc
mov
dec
mov
scas
xor
sub
testb
test
and
pusha
push
js
cmp
pop
and
adc
sub
int3
add
jl
pop
dec
aas
leave
pushf
addr16
pop
sub
mov
mov
push
rcrb
cltd
sbb
stos
xchg
mov
sbb
xchg
push
pop
sub
pop
and
addr16
add
hlt
pop
adc
jg
xchg
adc
jl
and
mov
mov
xor
mov
pop
mov
lahf
mov
pusha
inc
jne
adc
popf
sub
add
imul
fcomps
sbb
dec
dec
sbb
pop
das
jns
dec
sbb
add
jbe
rcl
pop
mov
xor
jecxz
out
aad
in
or
xchg
xchg
inc
xor
xor
aaa
ljmp
jg
jge
mov
testb
push
mov
inc
add
sub
pop
xor
mov
dec
or
dec
push
inc
xor
dec
and
fstl
mov
xchg
in
pusha
and
jne
nop
mov
mov
xchg
imul
add
push
enter
cmpl
push
imul
rcrb
inc
mov
xchg
or
dec
dec
xchg
inc
dec
sbb
xor
push
mov
pop
jmp
nop
imul
fildll
ljmp
fmulp
jle
sbb
imul
mov
mov
mov
outsb
dec
and
xor
dec
xchg
insb
jmp
rcrl
out
imul
sbb
pop
add
inc
pushf
inc
fidivrs
sub
insl
into
test
pushf
pushf
and
push
or
mov
and
dec
hlt
cli
insl
leave
or
cmp
pop
loopne
sbb
fiadds
out
jle
and
insb
sbb
add
cmpsb
fadd
loop
adc
jb
mov
dec
push
xchg
push
popf
bound
imul
subb
nop
in
mov
mov
xor
jnp
and
dec
das
xchg
xchg
mov
jmp
pop
and
jp
mov
mov
roll
dec
jo
sub
jmp
xchg
shll
jne
pop
mov
aas
dec
push
pop
and
push
push
inc
cld
aas
push
jo
lods
jmp
sbb
add
xor
outsb
scas
call
fistl
add
imul
push
cmp
and
movsb
pop
enter
movl
add
cmp
add
jae
outsl
sub
and
out
fsubl
or
mov
cs
xchg
cmp
adc
jae
xchg
push
test
orb
mov
adc
sbb
pop
jge
dec
cmp
push
repz
pushf
pop
aaa
mov
xchg
pop
sarl
hlt
xchg
adc
add
dec
and
sbb
rcr
icebp
mov
cltd
push
mov
xchg
pop
adc
mov
stos
fistps
jbe
ljmp
fcomps
rcl
pop
adc
jge
sbb
int
in
daa
jo
cmp
shrb
jo
test
pop
xchg
sbb
ljmp
icebp
in
nop
xchg
mov
mov
xor
push
rcrl
cli
decl
mov
sbb
ds
jge
jge
jae
mov
add
roll
sbb
pop
ja
mov
and
sbb
daa
je
lret
lret
inc
in
xchg
push
mov
lods
pushf
pop
arpl
data16
pop
mov
inc
xor
notl
inc
push
or
sub
jbe
adc
mov
add
inc
and
inc
in
inc
pop
adc
ficoml
xor
sub
push
rcll
mov
cmp
jnp
jmp
subl
int3
data16
xchg
cwtl
xchg
outsl
xchg
mov
outsb
pop
xlat
or
sub
dec
icebp
sbb
lret
adc
cs
pushf
cltd
sub
rolb
cltd
stos
adc
sub
popa
fisubrs
aam
mov
mov
pop
fildl
in
sti
daa
add
and
lahf
mov
cmpsl
out
xchg
frstor
cmp
jmp
and
nop
stc
out
das
fdivrs
loopne
shlb
jle
jge
out
jno
jmp
pushf
enter
lret
xor
mov
and
sub
lds
jle
daa
enter
lock
xor
mov
dec
xchg
aam
test
lea
xlat
mov
and
push
cmp
add
out
jmp
adc
sbb
xchg
pop
mov
push
insb
shl
mov
sbb
or
cwtl
and
cmc
outsl
inc
mov
pop
or
in
cmp
jbe
rolb
xchg
push
stos
xchg
jge
inc
out
in
lea
icebp
jecxz
mov
mov
or
std
in
loopne
dec
ss
push
inc
pop
and
add
dec
sbb
jns
ljmp
mov
mov
mov
fs
ds
in
xor
xchg
ret
fyl2x
fcomps
dec
adc
cltd
pop
lret
insb
stc
dec
add
dec
xchg
lea
pop
push
dec
movsl
andb
ljmp
cmp
xchg
hlt
pusha
jl
and
movsb
divb
xlat
mov
insb
sbb
imul
clc
scas
sbb
mov
ds
popa
adc
cmpsb
mov
pop
xchg
mov
es
pushf
jnp
sub
mov
lock
cmp
push
or
xchg
push
mov
jg
nop
popa
ljmp
cmp
adc
lods
pop
mov
out
dec
out
les
push
xchg
arpl
and
and
pop
outsl
ja
pop
imul
sar
pop
pop
hlt
inc
jbe
js
sbb
stos
pop
sbb
or
and
fcoml
jmp
lahf
xchg
cmp
mov
xchg
mov
push
pop
test
bnd
pop
or
rcrb
ljmp
or
sbb
stos
sub
and
jmp
jae
sbbl
push
js
outsb
lds
mov
jnp
adc
pop
ds
shll
add
and
popf
movl
pop
and
shlb
out
sbb
jle
push
sbb
sbbb
sbb
movsl
add
mov
movsw
mov
xchg
das
fwait
aad
adc
sbb
fdiv
test
popf
sbb
sar
xchg
inc
push
mov
sub
fld
sub
fcoml
push
push
sbb
add
cmp
push
sub
inc
aas
sahf
cmpsl
pop
mov
mov
cmp
imul
sbb
arpl
lods
inc
pop
push
outsb
cs
int
aad
mov
sub
xchg
push
scas
add
int
ss
mov
iret
push
dec
inc
mov
enter
jp
addr16
xlat
lcall
shr
inc
fdivs
mov
fstps
push
push
filds
aaa
sbb
xor
jmp
jbe
subb
mov
or
dec
in
dec
jl
outsl
sbb
dec
aas
fistpl
ljmp
pop
inc
lods
call
and
data16
xchg
inc
fwait
mov
push
fdivrs
mov
sbb
lods
xchg
cltd
jno
dec
repnz
ss
fnstcw
or
xchg
add
movsb
lods
add
push
cmp
mov
xorl
lret
or
loopne
sub
leave
xchg
addl
and
nop
stos
subl
jmp
cmp
ret
sbb
test
pop
movsb
pop
stos
push
rcl
and
mov
xchg
dec
fs
mov
repnz
jbe
mov
xor
rol
mov
xchg
push
sahf
pop
xor
fists
in
xchg
or
xor
addl
sub
cmc
or
jg
fidivrl
cmp
inc
dec
pop
in
cwtl
cmp
rol
cmp
push
cmpsb
mov
adc
mov
and
mov
cmp
icebp
push
or
ja
sbb
cwtl
xchg
stos
cs
fildl
cmp
test
loope
jle
xchg
gs
add
insb
sbb
mov
call
inc
fldl
xchg
add
sbb
push
dec
test
xchg
cmp
addr16
int3
pushf
or
aaa
aad
out
data16
add
sahf
das
xchg
adc
pop
adc
jmp
add
sub
arpl
lea
mov
outsb
and
sbb
push
push
and
lds
adc
movsb
lret
jbe
test
sub
loop
mov
out
int3
mov
mov
push
fisubs
cmp
mov
or
in
jo
xchg
pop
inc
xchg
mov
sti
ljmp
jae
stos
inc
jle
shlb
cmp
adc
icebp
and
cwtl
stos
cs
ret
xchg
mov
std
std
filds
loope
push
test
mov
pop
adc
mov
push
mov
pop
jb
adc
lea
adc
mov
cmp
push
in
xor
rcrb
jns
sar
mov
mov
xchg
insb
clc
lcall
lahf
pusha
mov
xor
lea
push
sbb
cli
xchg
les
adc
loope
cmp
adc
xchg
adc
test
mov
movl
dec
fisttps
mov
sbb
xlat
sbb
jb
dec
add
lods
cltd
mov
out
push
xchg
and
mov
icebp
mov
push
repnz
jecxz
flds
jle
push
fcompl
mov
sahf
rolb
mov
sub
lcall
fcmovne
mov
pusha
push
fyl2x
lcall
mov
loope
ds
lea
decl
sbb
xchg
xor
jg
fcompl
cltd
aas
sub
or
dec
pop
pop
cmpsl
cmpsl
pop
inc
sub
nop
hlt
out
inc
sahf
xchg
popf
clc
mov
dec
pusha
roll
jmp
dec
ret
and
adc
pop
and
imul
dec
fbstp
iret
cmpsb
out
and
stos
dec
inc
sahf
int
push
fistps
mov
adc
push
pop
sub
aas
push
xchg
ror
cmpsl
cld
rorb
push
push
sub
mov
sti
lods
cmpsb
cmp
and
outsb
ficompl
pusha
or
hlt
sbb
inc
les
hlt
mov
sbb
xlat
dec
jmp
mov
sub
ret
test
pop
mov
pop
jbe
jae
leave
sbb
push
xor
mov
lods
and
imul
jmp
push
hlt
sub
sub
stos
or
push
xchg
add
shrl
or
add
cmpsl
ret
mov
enter
pushl
cld
int3
inc
stos
nop
aaa
in
int3
mov
fldenv
adc
cmpsl
js
jp
cmpsl
xchg
mov
pop
dec
jl
pop
aad
loope
mov
in
scas
and
dec
mov
cmp
lods
lods
inc
mov
sub
andb
imul
sbb
movhlps
int
fiadds
dec
push
sub
ficomps
push
adc
jle
dec
insb
test
cmpsb
icebp
adc
dec
iret
mov
sti
xor
mov
jmp
mov
and
push
jne
sahf
or
jmp
jnp
cmp
scas
shrb
push
aas
iret
psllq
jne
sbb
xor
sub
cmpb
push
cmp
mov
iret
add
sub
cwtl
pop
inc
rclb
call
pushaw
push
lods
scas
push
jbe
adc
clc
jecxz
or
pop
pop
xchg
and
in
sbb
mov
mov
push
test
and
ss
es
mov
dec
jg
int3
fsts
mov
and
in
arpl
sbb
push
mov
mov
lcall
pop
or
add
xchg
clc
push
out
fwait
and
mov
or
pusha
xor
repz
xor
nop
sub
pop
or
dec
pop
cmc
inc
loope
xchg
pop
sub
push
leave
pop
neg
xor
pop
and
mov
rolb
jo
add
jnp
je
cmpb
add
stos
and
sti
push
jp
hlt
push
mov
test
hlt
add
and
adc
sub
into
daa
fcmove
lods
jbe
sahf
mov
test
nop
inc
bound
sub
insl
daa
sbb
jo
testb
sbb
cwtl
sub
adc
cld
loope
xor
lahf
ss
push
dec
mov
cmc
rorb
aam
push
rorb
out
push
aaa
daa
mov
fldenv
and
popf
sbb
inc
inc
sbb
les
movaps
ljmp
sbb
sahf
mov
ja
js
mov
sbbb
addb
int
imul
dec
ljmp
mov
fwait
inc
mov
and
jg
jns
int
jo
mov
mov
xchg
jg
mov
aam
adc
mov
xchg
aaa
sbb
pop
pop
xchg
cwtl
or
cwtl
or
jl
cs
shrb
dec
xchg
clc
mov
pop
push
repz
es
or
jge
fwait
inc
inc
repz
or
pop
sbb
cmp
inc
pop
int
cmp
mov
jb
pop
testb
xchg
mov
or
adc
cmp
xchg
xor
and
hlt
addb
mov
xor
pmuludq
jne
add
outsl
and
mov
xor
cmp
or
add
xchg
sub
pop
mov
sbb
aas
enter
sub
dec
shll
stc
ficomps
std
inc
fidivrs
push
mov
jo
mov
or
sub
in
scas
and
add
sub
add
fxch
add
jnp
pusha
pop
or
js
popa
int
pop
push
cs
fidivs
xchg
mov
push
xchg
aad
inc
mov
call
dec
bound
test
inc
iret
popa
in
push
shrb
xchg
adc
les
sbbb
and
idivl
pop
jl
inc
xchg
jle
mov
inc
leave
cmp
xchg
adc
sbb
push
nop
add
jg
lods
loop
xchg
and
xor
jbe
nop
enter
jo
test
fwait
call
orb
inc
icebp
nop
dec
dec
pop
leave
into
mov
xchg
jns,pn
adc
push
cltd
popf
scas
mov
js
xchg
inc
js
ret
cltd
aam
xchg
pop
cmp
stos
mov
fidivrs
loopne
sub
pop
js
dec
and
test
sarb
int
mov
adcb
ss
daa
daa
imul
pop
sbb
fcoms
sarb
pop
inc
iret
ss
sub
enter
and
lods
xor
cmc
imul
xchg
arpl
xchg
and
hlt
dec
xchg
push
xor
sarl
xchg
movsb
xchg
aaa
pop
ror
and
push
sbb
fwait
inc
or
push
lret
and
cmpsb
stos
inc
or
xchg
add
cltd
pop
mov
shl
data16
push
mov
loope
jb
push
aaa
dec
imul
xchg
xor
add
dec
mov
push
mov
lods
cwtl
daa
inc
push
sbb
jg
xor
and
mov
ret
inc
mov
test
fistpll
sbbb
jge
sub
out
inc
cmp
ss
cmpsl
int3
cmp
pop
push
in
mov
jo
push
sub
addr16
xor
rclb
test
fstpl
inc
xchg
arpl
dec
jecxz
cmp
push
mov
stos
push
lahf
lcall
pop
jg
gs
mov
sub
and
fs
imul
inc
lds
dec
popf
in
push
and
int3
rclb
rolb
and
add
jle
aam
jl
popa
sub
out
jno
jo
in
xor
mov
mov
nop
fimuls
add
insb
in
xchg
pusha
xchg
or
push
in
cmpsb
cs
mov
hlt
bound
pop
sub
xchg
jl
xlat
mov
cmp
andb
cmp
cltd
cmp
fs
adc
mov
dec
hlt
xor
sbb
add
push
push
xlat
movsb
cmpsl
vmovntps
xchg
adc
cwtl
mov
mov
pusha
into
cmp
jne
mov
call
push
xor
in
loope
fistpl
jmp
stos
push
sbbl
push
mov
js
stos
dec
movsb
mov
mull
pop
and
dec
bnd
aas
stos
aas
movl
push
aam
pop
movsl
cmp
pop
push
push
xor
sbb
pop
pop
sub
or
or
jae
push
cs
mov
add
out
xchg
scas
mov
push
out
push
iret
pop
inc
add
cwtl
ss
mov
lods
push
stos
mov
insb
mov
scas
xor
mov
jg
nop
lds
push
inc
pop
sbb
dec
fistl
cwtl
ret
jle
pop
dec
ret
push
xchg
pop
outsl
les
popa
mov
jg
mov
sbb
les
mov
nop
bound
shrl
jle
pop
xchg
mov
jae
mov
arpl
cmp
push
add
sub
sbb
add
push
sahf
fisubrs
sbb
xchg
xchg
stc
mov
sbb
outsl
push
dec
sub
inc
cltd
in
cmp
xchg
adc
and
les
xor
in
nop
movsb
dec
clc
add
scas
mov
iret
push
outsl
pop
jge
mov
outsl
sub
in
pop
push
jno
pop
rcll
leave
or
xor
dec
movsb
jbe
and
sub
mov
loop
jmp
roll
add
mov
out
pop
fistps
in
xor
das
sub
lea
push
imul
sub
mov
enter
test
ror
sub
dec
add
int3
inc
popf
adc
rcl
leave
stos
and
mov
ss
cmp
jbe
out
jp
imul
jnp
mov
xchg
jg
jbe
pop
rorl
insb
push
lea
idivl
rcl
insb
jg
loopne
mov
dec
xor
data16
icebp
xchg
fiaddl
ss
rcl
movsl
cwtl
mov
xorb
sahf
leave
cmp
js
xchg
xchg
xchg
inc
iret
outsl
mov
xchg
sbb
adcb
push
sti
loopne
push
and
mov
xor
jle
fmulp
stc
mov
mov
sbb
adc
daa
pop
ja
and
push
enter
imul
lahf
cltd
jmp
mov
sar
xchg
sbb
jnp
mov
cwtl
js
or
inc
in
sar
mov
adc
sbb
lahf
sbb
dec
jecxz
sbb
add
orb
jge
mov
cmovb
dec
imul
enter
in
clc
push
test
lcall
mov
jmp
and
cmc
xchg
cmp
movsb
movsb
dec
and
mov
js
lea
sbb
hlt
inc
out
push
je
mov
and
popf
adc
and
and
jmp
mov
nop
daa
bound
inc
cmc
add
lods
popa
adc
out
stos
cs
mov
mov
xchg
adc
mov
sarl
rcl
out
and
mov
rorb
cltd
inc
pusha
adc
lods
mov
dec
mov
jmp
xor
ds
test
push
cmpsb
inc
addr16
and
pop
icebp
mov
sti
in
push
inc
xchg
rorl
add
and
pusha
nop
pop
popf
jnp
loop
pop
cld
inc
daa
mov
add
mov
cmp
sbb
stos
bound
adc
dec
and
rorl
sbb
xor
mov
cmp
cmp
push
mov
pop
adc
mov
aam
jne
stos
repz
push
mov
sbb
stos
in
jns
test
sbb
sub
mov
xchg
push
loop,pn
cwtl
push
outsb
mov
shlb
fcoms
mov
xchg
lds
sbb
adc
push
pop
mov
push
lock
xchg
push
xchg
and
jg
xor
inc
xchg
stos
shll
and
mov
pusha
xchg
subl
les
lock
imul
insl
sbb
rclb
daa
cwtl
mov
icebp
add
sbb
add
stos
xchg
cmp
lea
mov
inc
mov
hlt
inc
push
xchg
push
gs
andb
test
xchg
mov
mov
into
xchg
loop
fildll
psrld
sti
movsl
or
jne
mov
lock
in
adc
mov
mov
addr16
das
daa
shlb
scas
imul
pop
stc
sbbl
inc
cld
ret
arpl
dec
pop
cmp
jns
sbb
mov
pusha
pop
repz
sbb
stos
mov
pusha
sbb
adc
shrl
sub
enter
stos
scas
xchg
or
mov
movsl
mov
and
test
inc
add
fcomps
aam
jge,pn
mov
ss
sub
outsl
fists
jmp
xchg
or
shlb
ror
inc
xchg
xchg
push
cmpsb
xlat
jae
jae
sub
aas
or
arpl
pop
pop
nop
data16
jmp
leave
jmp
outsb
xchg
dec
shll
repz
das
int
inc
or
mov
or
jp
sbbb
jno
or
dec
lds
mov
mov
iret
jle
cmc
hlt
jne
imul
cld
sbb
incl
sub
jb
pop
lahf
fidivs
adc
nop
test
fsubrl
cltd
mov
inc
sbb
jmp
shlb
scas
pop
ja
xor
stc
lcall
in
icebp
popa
out
mov
or
ret
adc
cmpb
iret
insb
repnz
out
fsubp
fiaddl
lods
mov
cmp
ja
dec
push
lock
push
mov
adc
pusha
out
push
sbb
imul
insl
xlat
pop
int3
jp
scas
stos
rcrb
mov
jmp
mov
dec
inc
mov
fdivp
sarl
mov
dec
pusha
adc
and
jo
mov
mov
and
cltd
xlat
mov
pop
lea
add
js
push
es
fisttpl
push
inc
movsl
cmpb
pop
cmpsl
cmpsb
cmp
xor
xchg
leave
pop
jne
add
lock
xorb
rep
push
xor
out
popa
popf
lcall
sbb
push
adcb
pop
xchg
cmp
xor
push
in
mov
js
int3
stos
xor
inc
ja
jl
jno
sub
into
push
push
ss
sub
adc
and
mov
sub
sub
xorb
cld
lret
sub
lock
xorb
jle
jecxz
addb
sub
adc
mov
daa
std
lret
fwait
aas
adc
and
cld
sbb
dec
cmp
jge
into
or
fiadds
and
adc
push
lret
or
dec
popf
jl
cmpsb
inc
push
outsl
add
mov
jbe
in
lods
repnz
or
cli
inc
mov
mov
and
mov
jle
and
sbb
or
xchg
mov
sbbb
outsb
and
inc
loope
or
leave
iret
in
xchg
scas
mov
lcall
jecxz
xchg
sub
mov
mov
aas
cmp
xchg
adc
jmp
lock
jecxz
dec
and
sti
sti
pusha
sub
xor
add
icebp
sarb
inc
mov
xorl
gs
mov
sub
jno
jbe
sub
mov
lret
sbb
or
out
pop
xchg
dec
xchg
jp
sbb
clc
xchg
aam
aad
stos
jle
mov
mov
ret
aaa
pushw
nop
idivb
test
sub
xchg
mov
and
mov
insl
inc
mov
pop
mov
addb
xor
mov
fstl
jmp
in
adc
loope
cwtl
aam
dec
pop
sub
in
call
or
sub
or
stos
sub
mov
orl
sbb
arpl
sub
mov
inc
inc
mov
adc
lcall
arpl
icebp
dec
loop
sub
xor
int3
rcr
in
inc
cmp
pushf
inc
notl
cmp
jbe
pushf
mov
call
cwtl
fcomps
add
push
push
push
std
jmp
in
jb
inc
sub
xor
mov
enter
inc
xchg
je
mov
fistpl
rorl
sti
lods
jg
add
andl
sbb
pop
sbb
out
push
and
pop
sbbl
pop
lcall
mov
imul
jmp
test
lods
mov
mov
add
leave
stos
fsubr
pop
sub
negl
push
sbb
mov
mov
pop
add
inc
add
fimuls
lret
inc
cltd
xchg
hlt
lcall
pushf
dec
jae
or
das
push
les
rcrl
jno
sub
testl
xchg
or
sub
sarl
jmp
mov
ret
daa
scas
adc
jecxz
pop
sbb
mov
mov
mov
push
sbb
ja
mov
leave
dec
mov
pop
lods
mov
ds
cmp
cltd
xchg
cmpb
test
cli
pop
jno
dec
lds
jg
movsl
insb
or
and
jne
aaa
inc
ss
adc
mov
and
cmp
pop
aad
sub
lcall
ffreep
gs
jmp
std
dec
sub
push
sbb
bound
jno
and
pop
pop
xchg
test
aam
mov
lock
mov
add
push
icebp
mov
fistpl
push
adc
pop
mov
ds
arpl
xor
stos
movsb
fdivrl
and
daa
sbb
cmc
xchg
or
adc
add
std
lcall
mov
sbb
in
cli
bound
lods
cmp
and
cmpsb
out
sub
jbe
daa
dec
clc
bound
rorl
and
dec
push
jge
or
popf
adc
push
adc
sbb
jbe
mov
xor
std
fs
addl
imul
add
cwtl
dec
testb
stos
idiv
fnstenv
sbb
hlt
xchg
lret
das
pop
or
fisttps
sti
das
shl
pop
mov
xor
icebp
mov
xchg
cwtl
adc
xor
sti
arpl
lods
adc
jmp
pusha
cmp
movsb
xlat
add
cmpsb
xchg
flds
data16
cli
stos
pop
iret
xchg
out
or
xchg
push
inc
push
push
sbb
hlt
xchg
push
out
sbb
stos
mov
xor
jecxz
push
adc
xadd
test
ljmp
loop
or
mov
push
lret
addl
mov
test
pop
imul
fs
and
mov
fisubrs
pusha
add
in
mov
shl
mov
cli
add
jno
jle
rsm
int
pop
fldcw
or
subb
fisubl
or
arpl
shl
insl
inc
scas
sbb
sar
and
ljmp
sbb
les
inc
mov
and
adc
sub
or
xor
push
ret
hlt
xchg
jecxz
jno
addr16
or
aam
cmpxchg
scas
daa
xchg
and
mov
adc
cld
or
mov
jmp
and
pop
add
or
or
rorl
sbb
mov
clc
push
dec
insb
sub
ret
loopne
movsb
jmp
mov
sub
lock
movswl
xchg
lea
jae
mov
inc
mov
iret
imul
cld
les
cmpsb
iret
fdivl
out
xor
sbb
mov
lock
sub
and
divl
sub
mov
xchg
push
lds
aaa
sub
jl
cs
cmpl
popa
lahf
xor
movsb
ja
sbb
sub
fsub
dec
add
lock
mov
sbb
add
push
add
mov
fwait
push
pop
lock
insl
scas
mov
inc
mov
jbe
sub
cwtl
data16
movsl
push
les
mov
insb
mov
mov
test
jp
lds
cwtl
testl
and
cs
ficoms
jbe
loopne
pop
adc
jns
fcmovbe
lods
cs
xor
pop
cwtl
stos
lret
imul
jl
mov
pushl
das
push
test
push
pop
mov
pop
add
dec
shlb
repnz
sbb
imulb
mov
icebp
jnp
push
ret
and
push
xchg
xchg
mov
lds
push
inc
test
inc
loop
and
jns
incb
push
mov
fcmovnu
mov
sub
xorb
push
jns
sbb
add
out
insb
gs
cmpsl
push
push
lret
cmpsb
lcall
popa
lcall
lret
fstpl
adc
jo
cmp
sbb
outsl
jp
inc
sub
or
subb
jmp
push
sbb
xchg
push
sub
sahf
es
jp
push
cmp
movsl
js
push
adc
mov
ficoms
sarl
jp
mov
movsb
push
mov
pmuludq
sar
mov
dec
sbb
inc
aas
cmp
add
stos
and
add
mov
jl
cmp
ret
popf
adcb
push
shrl
nop
sub
sbb
sbb
jge
inc
jge
rorb
aaa
pop
or
es
in
es
and
push
les
out
and
sbb
dec
inc
daa
sbb
xor
xlat
enter
es
gs
add
inc
insb
scas
jmp
enter
sbb
dec
mov
sub
clc
mov
out
je
les
ja
iret
jmp
inc
xor
notb
test
dec
cmp
scas
rolb
lret
and
mov
adc
mov
mov
mov
sub
test
cmp
dec
and
mov
int
stos
and
jo
inc
mov
leave
daa
dec
or
in
cli
in
or
test
push
aad
out
fucomip
sbb
xchg
pop
notl
adc
imul
cld
testl
xchg
sbb
stos
cmp
push
arpl
leave
xchg
mov
jae
sub
incl
stc
daa
sub
iret
inc
add
cltd
mov
adc
rolb
or
mov
cmpsl
mov
mov
jb
pop
rclb
xor
xchg
pop
and
ds
jl
call
xchg
out
mov
jns
mov
ja
adc
mov
pushf
adc
pushf
or
mov
mov
sti
bound
fistpl
mov
stos
pop
lock
xor
jbe
lds
xchg
or
scas
pop
xchg
sub
sbb
push
or
int
aad
lea
sub
push
cltd
sbb
aad
mov
jl
gs
lret
and
mov
icebp
sbb
cmp
add
lcallw
jl
sub
jecxz
lahf
cmp
aam
cmpsl
dec
cwtl
jle
cmpb
test
dec
lods
push
cmpl
outsl
sbb
push
xchg
or
std
test
jmp
jno
mov
arpl
inc
xchg
sahf
and
hlt
lret
inc
pop
xlat
fnsave
enter
pop
daa
data16
lods
in
mov
xor
add
subb
popf
dec
std
mov
into
cmpsl
hlt
mov
jecxz
fisttps
clc
xchg
adc
mov
sbb
and
loop
sbbl
mov
inc
pop
xchg
rorb
and
cmp
mov
xchg
jle
mov
call
popa
mov
gs
mov
or
enter
cld
xchg
dec
popf
sub
adc
push
sar
es
adc
mov
insb
jl
sbb
add
dec
int
fs
lock
sti
xchg
stos
into
add
cmp
lods
jmp
and
mov
stc
push
outsb
nop
mov
mov
fistl
cs
mov
jbe
lods
inc
or
nop
out
jne
xchg
lock
add
mov
sub
dec
stos
push
stos
mov
rcll
mov
pop
sub
xor
dec
and
push
jecxz
icebp
aaa
sub
int
test
pop
sbb
jle
cli
stc
les
iret
clc
insb
push
cmp
mov
pop
adc
xor
sub
inc
pop
mov
xchg
aad
pop
and
sar
fs
xchg
or
adc
les
ljmp
xchg
int
das
stc
sbb
xchg
sub
lret
xor
in
jle
fidivl
in
dec
adc
sahf
mov
mov
pop
xchg
nop
or
lret
jp
pusha
movsb
dec
and
rorb
adc
sbb
mov
out
movb
mov
xchg
push
cmp
ljmp
scas
fistl
and
jmp
xchg
shrb
icebp
mov
push
out
inc
fnsave
lret
lea
arpl
std
test
mov
test
les
mov
rcll
pop
sub
and
mov
inc
xor
push
xchg
push
xor
rcr
andl
pop
scas
in
jmp
dec
aaa
push
loopne
pusha
jbe
sbb
fnstsw
sub
lea
iret
or
xchg
fistl
adc
mov
scas
subl
jecxz
adc
xchg
inc
shl
aaa
mov
hlt
inc
mov
addr16
scas
je
cmp
jl
leave
and
xchg
roll
std
testl
les
cwtl
cmc
dec
movsl
mov
sbb
testl
cmp
jbe
sub
scas
cwtl
jecxz
daa
mov
int
in
or
mov
or
sbb
xor
outsb
jae
stos
push
call
mov
movsb
and
rolb
cs
sub
push
icebp
inc
sub
test
mov
xor
rolb
sbb
and
aas
fstps
movsl
jbe
insb
addr16
sarb
nopl
rorl
push
sub
popf
pop
cmp
xlat
sub
inc
push
sarl
sub
sti
mov
sub
lds
lods
mov
icebp
xchg
movsl
adc
pop
xor
or
or
hlt
lods
mov
imull
sbb
push
xchg
adc
inc
xor
mov
subl
mov
cld
fs
push
xchg
sti
sub
and
xchg
mov
cli
imul
sub
push
jb
inc
mov
add
xor
sahf
mov
jne
hlt
jle
cltd
jl
jne
jb
int
add
push
fnstcw
sbb
bound
inc
les
inc
xchg
les
movsb
xchg
ficoms
or
sbb
inc
lods
ljmp
int
add
popf
enter
pop
pushf
rcrl
pushf
jbe
mov
call
decl
mov
popf
push
in
mov
jmp
inc
xor
divl
adc
out
negl
adc
or
pop
and
jle
xchg
cmpsl
sub
or
sbb
in
inc
in
sbb
insb
xor
int
sahf
xor
js
push
rcll
push
sbb
and
fs
ljmp
shlb
mov
push
fstps
nop
loope
sub
mov
push
fcomps
loopne
jno,pn
daa
dec
or
aaa
jle
push
xlat
popf
xor
xchg
jp
addr16
stos
push
and
aaa
xchg
sbb
cmpsb
fcmovne
into
enter
clc
adc
and
fidivs
fisubrl
fs
sub
xchg
fisttps
insl
push
test
pop
xor
jmp
ret
add
pop
jno
pushf
pop
int
ds
lds
jp
inc
or
pop
push
pop
insb
outsl
pop
sbb
xchg
pop
out
fdiv
xor
pushf
jg
mov
dec
sub
cwtl
dec
mov
pop
push
inc
and
sahf
popa
and
into
adc
pop
mov
fdiv
push
sbb
lea
fildll
incl
stos
xor
mov
sbb
jl
push
jl
arpl
enter
xchg
pop
int3
arpl
mov
test
insb
pop
in
fildll
mov
out
sub
dec
dec
cmp
cs
mov
inc
xchg
jo
sbb
js
xchg
lea
mov
sub
clc
adc
cmpsl
pop
jmp
lds
xchg
outsl
fldt
sbb
jb
loop
clc
cmp
cmpsb
test
out
filds
mov
jge
aaa
sbb
jecxz
push
cmp
mov
push
dec
scas
sbb
inc
sbb
jbe
push
pop
pop
lods
out
push
iret
xchg
notl
in
mov
nop
jnp
pop
xor
shrl
push
xchg
in
cmpsl
xchg
jns
mov
and
xchg
xor
adc
sub
sbb
dec
rcr
mov
out
cmp
xchg
icebp
jg
std
shll
cltd
dec
fcmovnbe
js
test
xchg
and
movsb
cmp
or
push
daa
jl
lods
pop
cmp
pop
pop
arpl
cmp
add
ljmp
jle
lds
fcoms
jno
pop
ror
and
enter
and
cld
dec
push
add
fimull
mov
into
jle
jb
cmp
xchg
mov
cwtl
cltd
sub
dec
add
sbbl
movsl
loope
or
xor
add
mov
testb
movsb
xchg
loop
pop
out
push
das
dec
mov
push
inc
xchg
push
pop
mov
pop
sbb
jne
enter
pop
cmp
jle
sbb
fildl
inc
cmp
add
dec
add
call
iret
hlt
push
lret
mov
inc
int
ljmp
jnp
mov
mov
iret
dec
je
aaa
sbb
mov
push
imul
dec
adc
lahf
roll
jge
arpl
jle
lods
cmc
sbb
dec
and
jmp
in
pop
loop
loope
push
pop
cmpsl
inc
or
dec
mov
adc
mov
mov
sbb
pop
insl
fsubl
call
sbb
sbb
cmp
hlt
dec
ret
int3
imul
setno
mov
jge
lret
sub
cmpsb
mov
cmpsb
dec
cld
or
or
pop
movsl
push
or
jmp
and
dec
int
leave
shrl
xlat
push
mov
repz
inc
inc
adc
ret
xchg
push
sub
aad
inc
aad
mov
enter
add
sub
addr16
add
and
push
or
jns
test
mov
stc
xor
test
push
xchg
aas
out
push
adc
xchg
out
sarl
mov
imul
and
xchg
inc
push
rcrb
or
leave
cld
adc
xor
popf
xchg
in
out
mov
xchg
cltd
mov
push
fsts
mov
and
repz
sbb
or
hlt
lods
xor
hlt
xchg
lret
and
pop
mov
mov
shlb
push
or
and
cs
pop
pop
and
mov
int
lea
mov
mov
cltd
push
xor
push
mov
xor
inc
xchg
mov
sub
or
xlat
mov
xchg
or
xor
in
insl
sub
push
scas
fsubrs
add
cli
pop
roll
adc
inc
movsl
hlt
inc
jecxz
mov
stos
xor
int
std
cmp
icebp
test
in
mov
adcb
push
pop
mov
dec
nop
mov
cmp
adc
je
jecxz
dec
ret
lods
adc
lret
mov
lds
jnp
lcall
pop
push
pop
stos
fwait
das
popf
je
xlat
push
les
cmp
rcrl
lods
ret
bound
lret
and
pop
psubsw
dec
cwtl
int
les
mov
cmp
push
cmp
push
cli
adcl
loope
jmp
and
das
lock
fsubs
shrl
mov
sub
scas
mov
inc
sub
test
and
xchg
pop
les
pushf
inc
icebp
mov
stc
xchg
adc
or
lods
orl
and
imul
inc
int
add
mov
inc
cltd
push
mov
or
add
loopne
nop
arpl
dec
mov
jge
jp
jo
adc
daa
daa
sbb
mov
mov
insb
test
in
out
outsl
shrl
stos
f2xm1
out
arpl
pusha
add
mov
ficoms
push
div
mov
movsl
insl
decb
pusha
mov
mov
or
aaa
lret
jp
inc
fcoms
xor
inc
subl
neg
xchg
sbb
inc
pop
adc
pushf
xchg
mov
fwait
cmp
pushf
hlt
mov
adc
mov
into
sub
clc
jg
xchg
fwait
sbbb
sub
sbb
xor
xchg
int
jmp
and
ds
cmpsl
fisttps
mov
inc
add
mov
les
addl
jg
push
lds
ja
testb
jae
sbb
addr16
repz
xchg
sub
pop
imul
or
rcrb
roll
dec
jge,pt
jno
pop
call
std
scas
jmp
mov
dec
push
add
sub
iret
data16
mov
inc
data16
inc
pushf
cmc
test
mov
movb
int3
loopne
xor
movsb
xchg
dec
insb
pop
or
pop
dec
jns
mov
aas
nop
shl
cmp
pop
repnz
fistl
sub
lock
call
movsl
bound
lods
mov
sub
xchg
jnp
dec
or
rcrl
call
cmp
jp
add
in
js
fmull
adc
mov
dec
iret
jg
iret
cmp
stos
icebp
stos
cmpsb
gs
jnp
adc
ljmp
cmp
mov
jge
mov
mov
in
push
repnz
mulb
pop
out
mov
ja
in
shlb
sub
fisubl
es
fstl
les
out
xchg
movsb
sub
in
mov
or
out
pop
aaa
pop
push
repnz
mov
aad
lret
iret
adc
jb
pusha
jae
inc
xor
push
push
push
ret
jns
mov
sub
lret
push
sbb
leave
push
push
or
xchg
or
push
int
arpl
hlt
adc
outsb
movsb
popf
mov
pop
cmp
jmp
mov
sub
ret
cltd
test
out
mov
pop
dec
fwait
gs
lahf
sub
aam
and
dec
ljmp
inc
sbb
xor
sub
test
jp
inc
in
icebp
push
test
mov
in
fsubl
xchg
shlb
jnp
fucomp
cmpsb
adc
sub
icebp
push
out
dec
mov
loop
cmp
mov
out
xchg
call
push
stos
out
pop
jecxz
sub
out
xor
ds
inc
jmp
outsl
dec
push
repnz
test
jnp
sbb
sbb
mov
xchg
push
movsl
loopne
mov
mov
fnstsw
popa
push
xchg
jmp
fcompl
jl
jne
bound
inc
inc
sub
mov
bound
jbe
or
cld
mov
mov
lcall
je
mov
push
push
lods
roll
cltd
xor
xchg
inc
sbb
pop
jp
mov
push
ficomps
pusha
in
pop
and
adc
xchg
cmp
jge
push
sti
loope
cwtl
pop
mov
shlb
or
mov
mov
lret
fdivrl
cmp
add
push
sbb
fstps
js
sarl
pop
push
inc
add
add
aas
sbb
jle
xchg
scas
in
xor
ss
stos
shl
scas
sbb
sub
fwait
cltd
sahf
cwtl
mov
adc
pop
sbb
jge
jno
loopne
cmp
xchg
test
cmp
les
xchg
sub
dec
xor
lahf
stos
pop
ja
arpl
outsl
cs
bound
or
cmp
ror
xchg
xlat
jbe
sub
repz
fwait
jo
xor
aam
cmp
add
inc
outsl
nop
sub
pop
jl
add
mov
aaa
or
jmp
sub
dec
xchg
rorl
insl
rcl
mov
imul
sbbl
sub
cmp
in
add
dec
out
and
xchg
scas
incb
aaa
cmp
sub
stc
cltd
and
sbb
lahf
mov
test
std
push
mov
push
leave
xchg
inc
stos
adc
or
in
out
inc
aam
ds
mov
ljmp
arpl
mov
sarl
loopne
out
mov
pop
das
and
js
jno
xor
or
and
sbb
test
cmp
xchg
sbb
les
add
stos
cs
ja
ffree
sarl
sbb
sub
cmp
lret
scas
sub
scas
pop
mov
ds
and
mov
inc
outsb
xchg
xchg
cli
clc
cmp
dec
scas
sub
dec
mov
xchg
mov
ret
xchg
mov
sub
push
int3
add
dec
stc
dec
stos
aam
mov
sbb
loope
lods
and
in
mov
dec
sub
mov
shlb
js
jnp
adc
jmp
sbb
mov
fs
out
inc
and
fs
or
mov
lret
xchg
es
lock
push
fs
inc
sbb
in
popa
sbb
iret
sti
mov
repnz
dec
nop
xor
repnz
sbb
aam
pop
cmp
loopne
cmc
pop
movsb
jmp
pop
scas
nop
sbb
xor
sub
addl
mov
nop
pop
jo
xor
mov
ds
jns
dec
aas
mov
das
and
and
pop
xchg
mov
out
sub
das
fstps
out
leave
mov
jb
aad
or
das
arpl
cmpsb
lds
sbbb
cld
mov
xchg
rol
mov
stos
lea
inc
and
in
adc
shrl
arpl
out
mov
pushf
jo
add
cmp
fs
jbe
lods
sbb
push
nop
std
cwtl
xchg
adc
pop
inc
fidivl
decl
push
lds
fadds
inc
push
loope
sbb
bnd
hlt
lods
sub
fldenv
lods
rol
lahf
adc
or
mov
stos
clc
mov
popa
mov
xchg
push
sbb
ja
andb
mov
or
xchg
pop
and
sub
push
push
mov
pusha
cmc
dec
bound
rcrb
fcoml
xchg
pop
cmp
push
push
push
push
fs
and
sbb
push
shll
icebp
and
push
lds
add
xchg
xlat
iret
mov
bound
out
push
push
pop
and
jne
add
jnp
ret
orl
pop
test
mov
arpl
lock
cmp
dec
mov
xchg
insb
ret
mov
frstor
pusha
out
sbb
out
or
cs
in
sbb
jo
dec
xor
mov
jle
sub
add
sbb
xchg
dec
inc
scas
loop
clc
dec
sahf
mov
imulb
leave
ja
movsl
mov
lea
test
js
hlt
jecxz
inc
jge
jo
std
testb
dec
mov
popa
out
or
cli
stos
and
sti
fstpt
and
pop
cmp
sub
imul
sbb
dec
push
shl
xchg
test
pop
xchg
mov
jmp
sbb
mov
sbb
sub
call
inc
shlb
mov
mov
shlb
es
aam
inc
sub
sbb
dec
mov
mov
add
dec
mov
ja
stos
mov
pop
test
mov
xchg
dec
mov
fists
dec
add
mov
cmp
push
jbe
xlat
jp
fisttps
jne
mov
je
mov
enter
push
jg
sbb
lcall
mov
push
sbb
in
aas
cwtl
scas
mov
pop
sbb
pushf
gs
jno
push
mov
xchg
and
mov
daa
add
sbb
push
inc
push
pop
sub
xchg
fists
ljmp
call
xchg
jne
and
xchg
inc
mov
inc
shl
nop
sbb
ret
mov
xchg
fiadds
dec
pop
pop
test
cmp
mov
scas
test
cmpsl
aam
mov
loopne
lea
and
adc
jo
cmp
add
jbe
mov
mov
xchg
int
push
cmpsl
in
daa
fsubr
jbe
stos
sahf
mov
je
sbb
cmpb
adcb
out
ret
std
frstor
adc
iret
xchg
mov
adc
jmp
aas
mov
hlt
popl
sub
into
inc
pushf
xchg
pusha
ret
adcb
inc
xchg
in
mov
ds
push
sahf
push
dec
cmc
add
xlat
sbb
add
xor
or
push
mov
or
sbb
jp
adc
je
dec
sbb
inc
stos
cs
fsubrs
hlt
enter
lods
or
and
mov
and
icebp
sub
xchg
dec
fcmovu
rcrl
push
jecxz
fidivs
dec
dec
in
add
mov
fwait
pop
test
and
std
jno
lcall
xlat
push
ljmp
inc
fcomps
mov
xchg
aam
adcb
sbb
inc
inc
aam
lods
jne
cmp
cmp
scas
adc
roll
orb
cmp
cli
push
shll
aad
in
roll
jg
jae
imul
pushf
fs
or
sub
xor
pop
cmp
pushf
xchg
mov
lock
push
mov
js
sub
cmp
ret
xchg
outsl
inc
xchg
pop
gs
int3
adc
push
icebp
mov
lret
lds
int3
jl
mov
sti
ss
sbb
in
shlb
stos
jae
fstpt
xchg
outsl
je
sbb
scas
add
inc
and
in
xchg
call
mov
push
mov
dec
xchg
shlb
jg
mov
aam
mov
movsb
mov
xor
cmpsl
pop
cmpps
sbb
fmull
insl
mov
dec
rolb
arpl
bnd
call
cmp
or
pop
sub
rcl
adc
mov
cmp
xor
and
lea
sbb
push
stos
or
pop
add
push
dec
inc
cmc
pushf
mov
xchg
lods
mov
clc
ljmp
aam
test
jne
cltd
jecxz
les
xchg
add
push
sub
mov
repnz
and
xlat
add
daa
sbbb
and
or
pop
mov
push
cmpsl
mov
loopne
bound
test
push
out
into
inc
shlb
jecxz
sub
jae
test
stos
movsl
addr16
pop
int
ror
jg
cmp
push
sti
pop
insl
stos
mov
nop
shll
ds
je
pop
xor
xchg
sub
or
cmp
xor
js
sbb
inc
fidivs
lods
pushf
lods
inc
and
stc
xchg
sub
call
cwtl
or
or
push
fnstsw
mov
shrb
push
sarb
mov
addr16
std
stos
add
cmp
inc
pop
repz
int3
fs
dec
lock
call
movsb
push
jbe
nop
ds
mov
xor
or
jl
imul
xchg
pop
lahf
lea
inc
cmp
fst
add
dec
sub
mov
stc
ljmp
and
xor
cmp
out
movsb
je
inc
jl
mov
add
test
fs
jl
fnstcw
or
add
push
test
cs
jo
mov
test
data16
xorb
push
mov
scas
loopne
aad
add
sub
and
mov
movsb
and
rolb
jg
fldt
shl
mov
popl
rcll
sub
gs
pop
lods
inc
sub
imul
sub
xor
test
pushf
pop
inc
cmp
clc
xchg
or
mov
fsubrs
ljmp
shlb
or
sahf
mov
sbb
enter
add
cmp
pop
xchg
push
mov
jne
rorl
xor
and
aad
pop
jo
movsb
cmp
xchg
xchg
pop
sub
ud1
or
xchg
les
mov
cmpsb
push
aad
dec
xchg
gs
inc
and
cld
pusha
sbb
mov
jb
mov
xchg
push
fiadds
inc
xchg
cmp
xchg
repnz
xchg
cmpsl
test
pop
pop
cmpsl
mov
sub
mov
xor
pop
sub
fisubl
sbb
jp
pop
enter
les
xor
dec
loopne
mov
pop
cmc
sbb
dec
mov
les
test
sub
inc
mov
xchg
mov
ret
mov
sub
ficomps
shrl
insl
push
jmp
in
repnz
pop
cmp
inc
or
xchg
add
lahf
arpl
inc
pop
adc
loopne
mov
fmull
loopne
xchg
dec
daa
mov
xchg
in
mov
sbb
dec
sbb
loope
gs
aaa
xchg
stos
mov
in
xchg
loope
movsl
adc
mov
or
movsb
xchg
in
adc
in
add
stos
xchg
pusha
and
std
stos
mov
add
xchg
loope
cmp
rcll
in
pop
out
popa
pusha
and
jno
adc
adc
xchg
stos
movl
out
fs
scas
sub
nop
and
jno
cmp
jg
mov
addb
jle
insb
jbe
test
add
cltd
push
lock
ljmp
pushf
inc
xorl
and
cmp
cmp
pop
adc
xor
data16
xchg
sbb
xchg
popa
mov
int3
jo
jle
fnsave
dec
and
cmc
or
mov
push
push
lahf
push
xor
movsb
xchg
movsb
xchg
mov
add
movsl
cmc
out
sub
and
xchg
fs
adc
sub
pop
inc
hlt
subb
dec
add
test
dec
adc
xor
outsl
mov
lock
cmp
xchg
push
faddl
xchg
test
insb
in
lea
in
out
jl
cmpsb
movb
jb
sbb
ret
cmpsl
dec
iret
and
mov
arpl
pop
and
or
nop
lds
xor
or
xchg
jno
sbb
mov
jle
movsl
daa
mov
pop
pop
subb
ret
inc
mov
sub
inc
fsubrl
mov
stos
insb
lea
push
daa
cmp
cs
dec
je
mov
sbb
stos
lds
call
mov
jnp
ljmp
mov
pop
and
hlt
stos
push
in
pop
fisttps
in
mov
pop
outsb
insl
mov
imul
push
ljmp
adc
ret
xchg
sti
jbe
pop
push
bound
sub
pushf
mov
mov
lea
xchg
ja
adc
jl
push
shl
jns
pop
fadds
pop
nop
or
mov
xor
insb
xchg
data16
add
adc
cmpsl
dec
loope
jns
jl
lret
sbb
xchg
mov
rcll
pushl
daa
nop
push
nop
lcall
cmp
adcl
mov
push
push
and
mov
int3
pusha
push
fwait
mov
fwait
sbb
jno
sbb
xor
mov
jmp
adc
scas
xchg
lds
aam
push
andl
pop
inc
push
movsb
icebp
push
out
popf
in
imul
les
ljmp
lahf
data16
push
jecxz
les
inc
clc
adc
popa
jmp
arpl
mov
jns
inc
pop
xchg
pop
gs
sbb
inc
test
movsl
cmpb
sub
adc
in
push
sub
sbb
lds
sub
fistpl
lock
ds
mov
in
pop
mov
xchg
dec
int
jne
sbb
loop
inc
fldcw
add
xchg
mov
xchg
das
pop
cmp
or
loopne
leave
jmp
jno
cmp
shl
sub
sbb
mov
scas
push
lea
xchg
push
dec
cmpsl
scas
cmc
fdivl
sub
mov
sbb
stc
ret
adc
jbe
xor
sub
xchg
sbbl
andl
inc
ds
xchg
mov
cmpsl
mov
jecxz
test
cmpsb
xchg
sti
xchg
ret
mov
xor
jne
lds
fwait
xchg
mov
fsubr
test
adc
ret
cmp
push
pop
pusha
pop
cmp
lret
sub
jnp
jg
adc
inc
mov
addr16
cmp
les
mov
mov
pop
dec
xor
mov
add
dec
fiadds
mov
inc
push
sub
xlat
daa
mov
ljmp
leave
mov
out
sahf
xor
jge
mov
inc
call
in
mov
push
and
cs
je
pop
pop
out
dec
das
lock
xchg
scas
sub
sbb
xchg
jne
arpl
add
adc
jmp
movsb
adc
xchg
je
pop
ss
popf
ficomps
loope
cwtl
sbbl
sar
jbe
sub
stos
sub
cltd
add
inc
cmc
adc
pop
inc
lods
and
pop
xchg
adc
cwtl
shl
and
add
mov
mov
sar
popa
adc
fldt
sub
sbb
xchg
mov
xor
mov
and
xchg
adc
ret
fxch
in
sub
shll
insb
add
cmp
mov
cmpl
cld
shll
fst
cmp
in
mov
iret
mov
dec
inc
sub
jns
dec
cmpsb
mov
loopne
out
in
jl
lcall
adc
in
out
sub
sub
fwait
mov
out
pop
xchg
test
pop
stc
jmp
push
enter
inc
aad
inc
mov
add
jg
psadbw
xchg
dec
andb
lods
dec
dec
sarb
leave
add
int3
push
inc
xchg
push
mov
lcall
add
lds
subb
mov
pop
js
movhps
mov
lds
mov
sbb
inc
std
ds
aaa
and
dec
dec
nop
sti
push
pushl
push
inc
into
loop
xchg
mov
fisttpll
pop
test
inc
cmc
sete
adc
rolb
or
inc
outsb
push
movsb
ficompl
lock
sbb
push
ds
movl
adc
pop
push
scas
mov
cwtl
xchg
push
ds
push
ss
scas
push
sub
data16
mov
dec
pop
push
bt
cmc
push
frstor
js
inc
std
or
mov
push
fmull
mov
push
pushf
dec
arpl
lea
mov
lahf
mov
and
addb
or
popw
xor
sbb
mov
mov
jle
pop
cli
adcb
inc
mov
push
test
outsl
adc
mov
rcrl
rcl
in
insl
vpor
test
test
add
adc
and
aas
add
sub
repnz
clc
and
fisubrl
outsb
and
leave
and
mov
mov
xchg
adc
jbe
push
mov
pop
cmp
lret
sub
xchg
push
xor
jmp
movsl
xor
or
test
push
mov
inc
data16
push
push
fsubl
sub
pop
test
sti
sbb
jne
sarb
outsb
orl
push
cmp
test
push
inc
mov
xchg
sub
testl
lahf
mov
add
lds
mov
mov
xchg
inc
in
push
sbb
call
sbb
rolb
mov
mov
daa
adc
test
adc
cmpsl
jp
arpl
outsb
pop
xchg
out
add
test
fucom
or
rorb
mov
or
into
sub
cmp
jle
cmp
mov
fldcw
mov
arpl
lds
cmp
cmp
pushf
inc
sbb
insl
imul
dec
xchg
dec
add
dec
cmc
stos
push
and
xchg
sub
dec
jl
je
mov
pop
ret
cmp
xchg
movsb
loope
xchg
lods
pop
in
mov
ret
push
in
negl
daa
enter
add
mov
rcrl
adc
in
out
pop
ds
push
push
rcrl
sbbb
out
sub
fisubl
leave
jae
pop
sti
push
out
inc
push
sbb
jge
sub
pop
sub
mov
aaa
xchg
movsb
xchg
adc
loopne
dec
adc
fst
insl
pop
dec
stos
and
push
push
and
insl
mov
push
ja
inc
fisubs
sub
lret
sbb
fisttpll
lods
les
xchg
sub
cmpsl
pop
mov
in
jp
mov
jbe
scas
fs
xchg
mov
mov
and
cmc
pop
inc
push
jmp
lods
pop
or
stos
flds
mov
sbb
mov
pop
rclb
test
and
test
aad
pusha
div
insb
add
mov
imul
repnz
xchg
or
fldenv
xchg
push
es
inc
jl
loope
add
ja
dec
or
movsl
shll
push
adc
mov
imulb
out
jo
lds
in
mov
cmc
scas
push
jge
cld
inc
jmp
sbb
sbb
mov
push
andb
mov
xchg
xchg
jns
cmpsb
stos
dec
xor
push
xchg
mov
scas
dec
mov
lds
mov
inc
cmpsl
mov
fistpl
popf
ret
repnz
fsubrp
daa
fs
sbb
sahf
inc
cmpsb
lret
dec
pop
jbe
xor
add
je
xor
shlb
xchg
fimuls
mov
loopne
cwtl
imul
mov
mov
pushf
cld
inc
add
shr
das
xchg
les
into
sub
ds
sti
or
cmp
lods
mov
push
es
test
pop
int
nop
gs
int3
call
mov
bswap
inc
leave
inc
mov
js
pop
cmp
xchg
inc
call
push
out
add
div
add
or
add
sbb
add
es
add
ss
add
inc
icebp
add
pop
icebp
add
push
add
xor
add
icebp
add
stos
icebp
add
ret
add
icebp
add
fdiv
add
repnz
add
add
add
adc
add
xor
add
inc
repnz
push
repnz
repnz
jp
add
mov
add
movsb
repnz
mov
add
repnz
repnz
ljmp
add
add
and
add
repz
inc
repz
pusha
repz
jbe
add
xchg
add
xchg
repz
mov
repz
repz
fdiv
add
add
add
add
add
adc
add
add
add
xor
add
inc
hlt
add
pop
hlt
add
jo
add
add
add
xchg
add
xchg
hlt
add
movsb
hlt
add
scas
hlt
add
mov
hlt
add
shl
add
add
add
out
add
clc
hlt
add
or
add
add
add
fsubr
add
fdiv
add
pusha
out
add
mov
add
div
add
adc
add
xchg
lock
sub
add
sbb
add
test
add
jp
add
xor
add
enter
add
push
out
add
out
add
div
add
or
add
sbb
add
es
add
ss
add
inc
icebp
add
pop
icebp
add
push
add
xor
add
icebp
add
stos
icebp
add
ret
add
icebp
add
fdiv
add
repnz
add
add
add
adc
add
xor
add
inc
repnz
push
repnz
repnz
jp
add
mov
add
movsb
repnz
mov
add
repnz
repnz
ljmp
add
add
and
add
repz
inc
repz
pusha
repz
jbe
add
xchg
add
xchg
repz
mov
repz
repz
fdiv
add
add
add
add
add
adc
add
add
add
xor
add
inc
hlt
add
pop
hlt
add
jo
add
add
add
xchg
add
xchg
hlt
add
movsb
hlt
add
scas
hlt
add
mov
hlt
add
shl
add
add
add
out
add
clc
hlt
add
or
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
push
insb
jae
jb
add
add
fs
imul
add
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
push
gs
imul
gs
add
add
je
jb
jb
je
arpl
push
arpl
outsb
add
add
dec
gs
jo
jb
add
add
inc
jb
popa
je
inc
imul
gs
imul
add
dec
outsb
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
push
gs
popa
insb
jne
add
add
jb
outsb
push
add
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
add
je
je
imul
inc
add
add
push
gs
popa
jae
inc
jb
outsl
jb
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
push
popa
insb
imul
add
add
popa
jo
gs
insb
insb
outsl
arpl
add
dec
jae
bound
addr16
jb
jae
outsb
je
add
inc
gs
outsl
fs
gs
imul
add
add
dec
inc
dec
popa
jo
je
imul
add
je
jns
je
insl
push
imul
insb
gs
imul
imul
jne
arpl
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
je
jb
arpl
fs
jae
add
add
inc
jb
popa
je
inc
imul
jns
add
add
inc
gs
outsl
insb
jne
gs
outsb
outsw
jb
popa
je
outsl
outsb
push
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
add
inc
insb
outsl
bound
push
outsb
insb
outsl
arpl
add
add
insl
jo
jb
push
je
imul
add
inc
insb
insb
outsl
arpl
add
add
je
outsb
push
gs
js
gs
imul
gs
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
add
inc
gs
gs
imul
add
inc
insb
outsl
bound
dec
outsl
arpl
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
inc
push
add
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
inc
inc
push
inc
push
dec
xor
cs
dec
dec
add
add
push
gs
jo
outsb
dec
gs
js
add
add
outsl
jae
push
gs
imul
insb
add
inc
inc
dec
xor
cs
dec
dec
add
add
je
popa
jo
outsl
fs
add
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
inc
dec
inc
push
arpl
outsb
add
add
dec
push
je
inc
push
add
dec
push
push
inc
push
push
cs
dec
dec
add
add
pop
jbe
outsb
ja
jb
outsb
je
add
add
aas
xor
inc
pop
push
inc
pop
inc
pop
add
add
insl
popa
insb
insb
outsl
arpl
add
add
insb
insb
outsl
arpl
add
add
js
je
add
pop
popa
fs
jae
pop
imul
add
outsb
insb
outsl
arpl
push
push
inc
push
xor
cs
dec
dec
add
add
push
imul
popa
jae
push
add
add
push
outsl
jae
push
jne
je
gs
popa
add
add
push
imul
outsl
arpl
add
add
in
sub
cmp
jne
mov
pushl
call
test
jne
xor
mov
mov
push
cmp
je
cmp
jne
mov
mov
or
je
mov
push
cmp
je
push
call
cmp
jne
mov
mov
mov
mov
cmp
je
cmp
je
mov
push
pushl
call
test
je
mov
cmp
jne
mov
pushl
call
cmp
jne
pushl
call
cmp
je
pushl
call
test
jne
mov
xor
test
jne
mov
mov
pushl
call
or
jne
mov
mov
mov
cmp
jne
mov
push
push
push
push
call
mov
test
je
mov
mov
xor
mov
pushl
call
cmp
jne
mov
mov
cmp
jne
mov
pushl
call
cmp
jne
mov
xor
or
jne
mov
mov
mov
cmp
jne
xor
push
call
and
jne
xor
mov
mov
mov
mov
cmp
jne
push
call
cmp
je
pushl
call
cmp
jne
mov
mov
mov
mov
cmp
jne
xor
mov
pushl
call
test
jne
push
call
test
je
xor
mov
test
jne
cmp
jne
mov
pushl
call
cmp
jne
push
call
cmp
je
mov
lea
cmp
jne
cmp
jne
mov
lea
test
jne
mov
and
jne
mov
push
call
cmp
je
xor
mov
lea
or
jne
mov
mov
test
je
pushl
call
and
je
pushl
call
or
je
mov
mov
mov
test
je
pushl
call
cmp
je
mov
mov
mov
push
call
and
je
xor
mov
and
je
mov
or
je
pushl
call
or
jne
pushl
call
test
jne
pushl
call
and
jne
xor
mov
test
je
mov
mov
or
jne
mov
lea
mov
cmp
jne
mov
pushl
call
and
jne
push
call
cmp
je
mov
lea
mov
push
call
and
jne
mov
lea
cmp
jne
cmp
je
xor
cmp
je
pushl
call
and
jne
xor
cmp
je
push
call
cmp
jne
mov
or
je
mov
mov
cmp
jne
mov
or
jne
cmp
jne
cmp
jne
test
jne
mov
pushl
call
or
jne
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
mov
mov
cmp
je
cmp
je
xor
mov
mov
mov
cmp
jne
mov
lea
test
jne
mov
cmp
jne
mov
xor
cmp
jne
push
call
and
je
or
je
mov
mov
mov
pushl
call
cmp
jne
pushl
call
cmp
jne
mov
pushl
call
cmp
je
mov
mov
cmp
jne
mov
pushl
call
and
jne
mov
mov
mov
push
call
and
jne
mov
cmp
jne
mov
push
call
cmp
jne
mov
lea
mov
mov
mov
pushl
call
cmp
je
mov
cmp
jne
push
call
test
jne
mov
cmp
je
cmp
jne
and
je
mov
and
je
cmp
je
push
call
cmp
jne
mov
mov
cmp
jne
mov
mov
cmp
je
mov
mov
cmp
jne
lea
cmp
jne
mov
cmp
je
mov
mov
mov
mov
xor
mov
pushl
call
cmp
jne
mov
mov
cmp
je
or
jne
cmp
jne
mov
lea
cmp
je
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
cmp
jne
and
je
mov
pushl
call
cmp
jne
cmp
je
push
call
test
je
pushl
call
cmp
jne
lea
mov
mov
push
call
cmp
jne
xor
xor
cmp
je
xor
mov
mov
cmp
je
mov
mov
mov
mov
lea
cmp
jne
and
je
mov
mov
lea
cmp
je
cmp
je
test
jne
mov
test
je
pushl
call
and
jne
mov
or
je
mov
cmp
je
mov
mov
cmp
je
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
mov
lea
test
jne
mov
mov
cmp
je
mov
mov
repnz
mov
xor
test
je
cmp
je
cmp
je
pushl
call
cmp
jne
lea
mov
cmp
jne
mov
mov
cmp
je
and
je
mov
xor
test
jne
push
call
or
je
mov
mov
mov
mov
test
je
xor
xor
and
je
mov
xor
cmp
jne
mov
test
jne
mov
mov
test
je
mov
mov
mov
cmp
je
xor
lea
cmp
je
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
inc
mov
mov
cmp
jne
xor
mov
mov
mov
or
je
or
jne
push
call
cmp
jne
mov
and
jne
mov
mov
mov
mov
pushl
call
or
je
lea
mov
mov
test
je
cmp
jne
mov
cmp
jne
xor
cmp
je
lea
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
pushl
call
cmp
jne
push
call
cmp
je
mov
xor
pushl
call
or
je
pushl
call
cmp
jne
push
call
cmp
je
mov
lea
mov
mov
pushl
call
cmp
je
mov
and
jne
and
jne
push
call
or
je
mov
mov
mov
mov
or
jne
xor
mov
cmp
jne
mov
mov
cmp
jne
cmp
jne
mov
mov
mov
mov
and
je
and
jne
cmp
jne
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
mov
mov
cmp
je
cmp
je
and
jne
mov
mov
mov
mov
cmp
jne
mov
pop
xor
mov
mov
cmp
je
mov
lea
cmp
jne
cmp
je
or
je
mov
or
jne
xor
mov
cmp
jne
mov
pop
mov
or
je
lea
mov
cmp
je
xor
lea
and
je
mov
mov
mov
cmp
jne
mov
mov
mov
mov
and
jne
mov
pop
mov
mov
mov
pop
ret
add
adc
or
sbb
jmp
dec
enter
add
in
add
mov
or
jne
push
call
cmp
jne
cmp
je
mov
mov
mov
cmp
jne
xor
mov
push
call
and
jne
mov
push
mov
mov
cmp
jne
pushl
call
and
jne
cmp
jne
cmp
jne
cmp
jne
mov
mov
cmp
jne
mov
lea
pushl
call
and
je
xor
lea
test
jne
cmp
je
mov
mov
mov
mov
cmp
jne
push
call
or
je
mov
push
mov
mov
mov
mov
mov
push
xor
xor
cmp
je
mov
mov
mov
mov
mov
mov
pushl
call
or
je
mov
cmp
je
pushl
call
cmp
je
push
call
cmp
jne
push
call
cmp
je
push
call
cmp
jne
mov
push
call
cmp
je
xor
mov
or
jne
mov
lea
mov
mov
lea
pushl
call
and
jne
mov
lea
cmp
jne
mov
pushl
call
cmp
jne
push
call
or
jne
mov
mov
mov
cmp
jne
and
jne
push
call
and
je
xor
and
jne
pushl
call
or
je
mov
mov
and
jne
or
jne
mov
mov
mov
pushl
call
or
je
mov
cmp
je
mov
cmp
jne
cmp
jne
mov
mov
mov
mov
test
jne
mov
mov
cmp
jne
mov
mov
mov
mov
or
je
xor
pushl
call
cmp
je
push
call
cmp
jne
mov
mov
mov
mov
mov
mov
mov
test
je
pushl
call
and
je
xor
push
call
test
jne
mov
mov
or
je
xor
lea
pushl
call
or
je
push
call
or
je
mov
mov
pushl
call
cmp
je
xor
and
jne
mov
cmp
jne
mov
mov
pushl
call
cmp
je
mov
push
call
test
je
mov
and
jne
mov
lea
mov
cmp
je
mov
and
jne
mov
and
jne
mov
test
je
xor
cmp
jne
mov
mov
lea
mov
mov
cmp
je
xor
mov
xor
and
je
mov
push
call
cmp
je
mov
lea
pushl
call
cmp
jne
mov
mov
mov
or
je
xor
lea
pushl
call
and
jne
mov
and
jne
cmp
jne
pushl
call
cmp
je
mov
pushl
call
cmp
jne
xor
and
je
mov
or
je
mov
mov
cmp
je
mov
mov
mov
cmp
je
xor
cmp
jne
mov
xor
mov
cmp
je
mov
mov
push
call
cmp
jne
mov
and
jne
mov
mov
pushl
call
cmp
je
push
call
cmp
jne
mov
mov
mov
mov
test
jne
cmp
je
mov
mov
pushl
call
test
je
mov
mov
mov
mov
push
call
cmp
je
mov
push
call
cmp
jne
mov
push
call
or
je
mov
lea
mov
mov
cmp
jne
mov
mov
mov
pushl
call
or
jne
pushl
call
and
je
mov
mov
test
je
mov
or
je
cmp
je
mov
mov
cmp
je
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
and
jne
xor
lea
mov
pushl
call
cmp
jne
pushl
call
or
je
pushl
call
or
je
push
call
and
je
mov
cmp
je
mov
cmp
je
mov
pushl
call
cmp
jne
pushl
call
cmp
je
push
call
cmp
je
xor
lea
mov
mov
mov
lea
pushl
call
and
je
mov
mov
mov
pushl
call
cmp
je
push
call
test
jne
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
pushl
call
cmp
jne
mov
push
call
cmp
je
mov
test
jne
xor
mov
pushl
call
cmp
jne
xor
cmp
jne
mov
push
call
cmp
jne
xor
cmp
je
mov
mov
or
je
mov
mov
cmp
jne
pushl
call
test
jne
mov
push
call
cmp
jne
pushl
call
cmp
je
xor
mov
cmp
jne
mov
cmp
je
mov
push
call
cmp
jne
mov
or
je
cmp
jne
mov
mov
mov
mov
or
je
mov
mov
cmp
jne
mov
lea
cmp
je
and
jne
mov
xor
cmp
jne
mov
mov
cmp
jne
mov
pushl
call
cmp
je
pushl
call
cmp
jne
pushl
call
or
jne
mov
cmp
jne
mov
cmp
je
mov
pushl
call
cmp
je
mov
mov
cmp
jne
mov
or
jne
and
je
mov
mov
mov
mov
mov
mov
pushl
call
cmp
jne
xor
xor
mov
cmp
jne
xor
pushl
call
test
jne
mov
cmp
je
mov
mov
lea
mov
cmp
je
mov
test
jne
mov
mov
mov
mov
pushl
call
cmp
je
mov
mov
mov
push
call
cmp
jne
mov
cmp
je
mov
cmp
jne
pushl
call
and
jne
mov
pushl
call
test
jne
mov
test
jne
cmp
je
mov
mov
pushl
call
or
jne
mov
xor
mov
mov
cmp
je
mov
test
jne
pushl
call
and
je
xor
mov
mov
cmp
je
cmp
je
pushl
call
cmp
jne
mov
lea
mov
and
jne
mov
mov
xor
cmp
je
push
call
or
jne
xor
pushl
call
cmp
jne
xor
mov
cmp
jne
mov
mov
pushl
call
test
jne
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
je
mov
push
call
and
jne
push
call
test
jne
xor
test
jne
mov
push
call
or
je
mov
xor
cmp
jne
and
jne
mov
cmp
je
push
call
and
jne
mov
xor
cmp
jne
cmp
je
push
call
cmp
je
mov
lea
cmp
je
pushl
call
cmp
jne
mov
cmp
jne
mov
push
call
cmp
je
mov
lea
mov
or
je
cmp
jne
mov
or
jne
cmp
je
mov
xor
cmp
je
mov
and
jne
pushl
call
or
jne
mov
mov
mov
mov
mov
cmp
jne
mov
push
call
cmp
je
mov
cmp
jne
mov
push
call
and
je
pushl
call
cmp
jne
push
call
cmp
jne
mov
mov
cmp
je
mov
push
call
or
je
mov
mov
cmp
jne
mov
test
je
pushl
call
or
je
mov
pushl
call
cmp
je
xor
mov
mov
mov
push
call
cmp
jne
mov
mov
cmp
je
mov
and
je
or
jne
mov
cmp
jne
cmp
jne
cmp
jne
mov
xor
and
je
cmp
je
cmp
jne
mov
mov
test
je
pushl
call
cmp
jne
pushl
call
or
jne
pushl
call
cmp
je
mov
and
je
cmp
je
mov
lea
pushl
call
test
je
mov
mov
cmp
jne
cmp
je
mov
and
je
mov
test
jne
pushl
call
cmp
jne
mov
mov
mov
cmp
jne
cmp
jne
cmp
je
xor
mov
cmp
jne
and
jne
xor
mov
cmp
jne
xor
mov
cmp
je
mov
mov
mov
mov
mov
mov
cmp
je
test
jne
mov
and
je
xor
lea
mov
mov
mov
test
je
mov
xor
cmp
jne
mov
pushl
call
and
jne
mov
cmp
je
mov
or
je
mov
or
jne
mov
pushl
call
cmp
jne
mov
mov
lea
mov
and
jne
pushl
call
cmp
je
push
call
or
je
mov
lea
pushl
call
cmp
jne
xor
mov
pushl
call
test
jne
mov
mov
cmp
je
mov
cmp
jne
mov
mov
mov
lea
mov
mov
cmp
je
pushl
call
cmp
je
mov
mov
mov
test
jne
pushl
call
cmp
jne
mov
mov
push
call
mov
xor
or
je
cmp
jne
cmp
jne
xor
cmp
jne
cmp
je
cmp
jne
cmp
je
mov
test
je
mov
mov
mov
mov
mov
pushl
call
and
je
pushl
call
test
jne
mov
xor
push
call
cmp
je
xor
cmp
je
mov
pushl
call
and
jne
mov
mov
mov
mov
pushl
call
cmp
jne
xor
test
je
test
jne
mov
cmp
jne
cmp
je
cmp
je
mov
mov
push
pushl
call
mov
or
je
mov
mov
xor
mov
mov
pushl
call
or
jne
mov
mov
mov
cmp
jne
mov
mov
mov
mov
cmp
je
and
jne
cmp
jne
mov
mov
mov
cmp
jne
pushl
call
cmp
je
mov
xor
cmp
jne
cmp
je
cmp
je
cmp
jne
mov
mov
mov
mov
xor
and
je
mov
mov
cmp
jne
pushl
call
test
jne
mov
mov
push
call
cmp
jne
pushl
call
and
je
mov
mov
mov
and
jne
mov
pushl
call
cmp
jne
pushl
call
cmp
jne
pushl
call
and
je
xor
and
je
cmp
jne
pushl
call
cmp
je
mov
mov
mov
push
call
cmp
jne
mov
test
jne
mov
mov
pushl
call
test
jne
pushl
call
and
jne
mov
xor
cmp
je
xor
mov
mov
cmp
jne
cmp
jne
and
jne
or
jne
mov
mov
mov
and
je
mov
xor
mov
cmp
jne
cmp
jne
mov
test
jne
xor
cmp
je
xor
mov
mov
pushl
call
cmp
jne
mov
mov
mov
mov
pushl
call
cmp
je
push
call
cmp
jne
mov
cmp
jne
test
je
or
jne
cmp
jne
mov
pushl
call
cmp
je
pushl
call
cmp
jne
xor
mov
cmp
je
mov
cmp
jne
mov
mov
pushl
call
or
je
mov
mov
cmp
jne
mov
mov
push
call
cmp
jne
mov
cmp
je
xor
test
je
cmp
je
mov
cmp
jne
mov
mov
mov
mov
pushl
call
test
jne
mov
lea
cmp
je
mov
mov
test
jne
pushl
call
cmp
je
mov
mov
mov
mov
mov
pushl
call
and
jne
pushl
call
cmp
je
mov
mov
mov
mov
mov
lea
push
call
cmp
je
mov
xor
cmp
je
pushl
call
test
jne
xor
xor
cmp
jne
mov
mov
mov
mov
cmp
je
xor
mov
mov
cmp
jne
push
call
cmp
jne
mov
mov
mov
cmp
jne
mov
pushl
call
cmp
jne
push
call
or
je
pushl
call
cmp
je
mov
mov
cmp
jne
mov
push
call
cmp
jne
xor
mov
push
call
or
je
pushl
call
test
jne
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
je
pushl
call
cmp
jne
xor
cmp
jne
mov
mov
mov
xor
mov
pushl
call
or
jne
mov
mov
mov
pushl
call
and
je
mov
cmp
je
mov
mov
pushl
call
and
je
mov
mov
cmp
je
mov
test
jne
mov
lea
mov
test
jne
mov
cmp
je
cmp
jne
mov
mov
push
call
test
je
mov
pushl
call
and
jne
push
call
and
je
mov
cmp
je
mov
pushl
call
test
je
mov
test
jne
mov
mov
push
call
or
jne
xor
and
je
mov
test
jne
mov
cmp
je
mov
pushl
call
or
jne
mov
cmp
jne
cmp
je
and
jne
mov
pushl
call
cmp
je
xor
mov
cmp
jne
mov
push
call
test
je
mov
cmp
jne
xor
cmp
jne
mov
mov
cmp
je
cmp
jne
mov
xor
mov
push
call
or
je
mov
mov
mov
cmp
je
cmp
je
push
call
cmp
jne
mov
mov
mov
pushl
call
or
jne
xor
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
cmp
je
test
jne
mov
mov
cmp
je
mov
movl
mov
lea
cmp
je
push
call
test
je
pushl
call
and
je
mov
cmp
jne
mov
mov
xor
cmp
je
cmp
je
mov
mov
and
jne
mov
cmp
je
mov
mov
call
cmp
je
and
je
mov
xor
lea
mov
mov
mov
and
jne
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
je
cmp
jne
cmp
jne
mov
mov
mov
mov
cmp
je
mov
movl
mov
pushl
call
cmp
jne
pushl
call
cmp
jne
mov
pushl
call
cmp
jne
pushl
call
or
jne
pushl
call
or
je
mov
mov
cmp
je
push
call
cmp
jne
push
call
test
je
mov
pushl
call
or
je
mov
mov
mov
push
call
test
jne
pushl
call
cmp
jne
mov
lea
mov
mov
mov
push
call
test
jne
xor
mov
mov
mov
mov
push
call
or
je
mov
cmp
jne
cmp
je
push
call
and
jne
mov
mov
mov
or
jne
pushl
call
and
je
mov
cmp
je
mov
mov
cmp
je
mov
lea
cmp
jne
mov
mov
cmp
jne
mov
mov
and
jne
mov
mov
pushl
call
cmp
jne
mov
mov
and
je
mov
cmp
jne
mov
and
jne
mov
cmp
je
mov
pushl
call
or
je
xor
mov
cmp
jne
mov
cmp
jne
pushl
call
cmp
je
pushl
call
cmp
jne
xor
mov
push
call
or
jne
pushl
call
cmp
je
xor
cmp
jne
mov
mov
cmp
jne
cmp
jne
xor
cmp
jne
cmp
jne
mov
mov
pushl
call
and
jne
mov
push
call
and
jne
pushl
call
cmp
je
mov
mov
mov
mov
push
call
or
je
xor
mov
cmp
jne
mov
pushl
call
cmp
jne
mov
mov
or
je
mov
mov
pushl
call
cmp
jne
mov
lea
mov
push
call
or
jne
mov
mov
and
je
mov
mov
pushl
call
and
je
mov
push
call
cmp
jne
mov
cmp
je
pushl
call
cmp
jne
pushl
call
cmp
je
mov
mov
push
call
or
je
push
call
cmp
jne
mov
cmp
je
xor
mov
test
je
xor
test
jne
mov
mov
mov
pushl
mov
mov
mov
test
jne
mov
xor
mov
push
mov
lea
mov
xor
pushl
call
and
je
pushl
call
cmp
je
xor
xor
mov
mov
mov
mov
push
call
cmp
je
mov
xor
cmp
jne
pushl
call
and
je
mov
cmp
jne
push
call
cmp
je
xor
mov
mov
mov
cmp
jne
push
call
cmp
je
pushl
call
cmp
jne
mov
mov
cmp
je
cmp
je
cmp
jne
cmp
je
mov
mov
cmp
je
pushl
call
cmp
je
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
cmp
jne
mov
cmp
je
push
call
cmp
je
xor
mov
cmp
je
test
je
mov
pushl
call
and
jne
xor
xor
cmp
jne
pushl
call
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
shrl
pushl
call
test
jne
mov
or
je
mov
mov
lea
mov
pushl
call
mov
lea
mov
mov
mov
cmp
je
pushl
call
or
jne
pushl
call
cmp
jne
xor
pushl
call
cmp
jne
mov
xor
mov
mov
lea
mov
mov
mov
addl
pushl
call
cmp
jne
xor
mov
mov
mov
mov
lea
cmp
je
mov
call
mov
or
nop
and
sub
inc
or
inc
mov
xorb
les
decl
cli
push
cmp
je
cmp
je
cmp
je
mov
test
jne
mov
test
jne
cmp
je
cmp
je
lea
and
je
test
jne
mov
or
je
cmp
jne
push
call
test
jne
mov
xor
or
je
mov
cmp
je
pushl
call
cmp
je
cmp
jne
lea
xor
cmp
jne
cmp
je
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
lea
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
xor
mov
mov
test
jne
mov
xor
mov
mov
mov
push
mov
lea
mov
and
jne
lea
mov
cmp
je
mov
mov
push
push
call
cmp
jne
and
je
xor
mov
mov
cmp
je
lea
mov
xor
cmp
je
mov
test
je
xor
xor
mov
mov
test
je
mov
mov
mov
mov
or
je
cmp
jne
xor
mov
mov
cmp
jne
cmp
jne
push
call
or
jne
test
je
mov
mov
pushl
call
test
je
push
call
cmp
je
pushl
call
cmp
jne
mov
mov
push
call
and
jne
mov
push
call
test
jne
mov
mov
or
je
mov
xor
cmp
je
pushl
call
cmp
jne
mov
cmp
je
mov
mov
mov
cmp
je
mov
mov
push
mov
cmp
jne
pushl
call
cmp
jne
pushl
call
or
je
pushl
call
cmp
jne
mov
mov
xor
mov
cmp
je
mov
mov
pushl
call
and
jne
mov
and
je
mov
pushl
call
and
je
mov
mov
mov
mov
mov
mov
or
jne
mov
mov
cmp
je
mov
mov
mov
mov
and
jne
mov
mov
mov
cmpl
je
xor
lea
mov
mov
xor
lea
mov
mov
decl
or
je
mov
mov
subl
mov
mov
cmp
jne
mov
roll
xor
mov
lea
xor
cmp
jne
cmp
je
mov
mov
cmp
je
cmp
je
mov
xorl
lea
xor
or
jne
xor
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
cmp
jne
mov
mov
sub
lea
mov
mov
or
jne
mov
xor
cmp
je
xor
mov
cmp
jne
mov
cmp
jne
xor
mov
mov
cmp
je
cmp
jne
mov
mov
mov
mov
test
je
mov
lea
mov
add
mov
mov
and
je
mov
xor
cmp
jne
lea
mov
mov
mov
cmp
je
mov
mov
cmp
je
and
je
cmp
je
xor
xor
cmp
je
mov
cmp
je
xor
test
je
and
jne
lea
lea
mov
mov
cmp
jne
test
jne
cmp
jne
lea
cmp
je
cmp
jne
cmp
je
lea
xor
or
jne
mov
cmp
je
xor
mov
jmp
mov
pushl
call
cmp
jne
mov
xor
cmp
jne
mov
pushl
call
or
jne
push
call
cmp
jne
mov
mov
mov
mov
mov
xor
mov
and
jne
or
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
or
je
and
je
push
call
cmp
je
mov
mov
mov
mov
cmp
jne
pushl
call
and
je
pushl
call
cmp
je
xor
pushl
call
or
jne
pushl
call
cmp
je
pushl
call
cmp
jne
pushl
call
cmp
jne
mov
cmp
jne
xor
cmp
jne
mov
lea
mov
mov
mov
push
call
cmp
jne
mov
mov
and
je
mov
pushl
call
test
je
mov
mov
cmp
je
pushl
call
cmp
jne
mov
mov
mov
mov
cmp
jne
test
je
xor
cmp
je
mov
mov
mov
mov
pushl
call
cmp
je
mov
mov
cmp
je
and
je
cmp
je
xor
mov
mov
pushl
call
and
je
pushl
call
cmp
jne
mov
lea
pushl
call
cmp
je
push
call
cmp
jne
mov
lea
cmp
je
xor
mov
test
je
pushl
call
cmp
jne
mov
mov
cmp
je
test
jne
mov
mov
cmp
jne
mov
mov
mov
and
jne
mov
mov
cmp
jne
cmp
je
mov
cmp
jne
mov
mov
mov
mov
push
call
test
je
xor
test
jne
mov
cmp
jne
mov
xor
mov
mov
mov
pushl
call
cmp
jne
xor
pushl
call
and
je
mov
mov
cmp
je
cmp
jne
mov
lea
mov
mov
mov
cmp
je
pushl
call
and
jne
mov
test
je
mov
mov
cmp
jne
push
call
test
je
mov
cmp
jne
mov
pushl
call
cmp
je
mov
mov
mov
mov
pushl
call
and
jne
push
call
cmp
je
pushl
call
cmp
jne
mov
xor
or
jne
or
je
or
jne
mov
mov
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pushl
call
or
je
pushl
call
and
jne
mov
pushl
call
cmp
jne
xor
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
xor
cmp
je
xor
or
jne
mov
test
jne
mov
mov
cmp
jne
and
je
cmp
je
mov
mov
pop
mov
mov
or
jne
mov
cmp
je
mov
xor
lea
cmp
je
test
jne
push
call
and
je
cmp
jne
mov
mov
pop
xor
xor
or
je
mov
mov
cmp
je
and
je
mov
pop
mov
mov
mov
cmp
jne
mov
mov
or
je
mov
mov
mov
leave
ret
and
.byte
stos
.byte
