add
add
cmp
add
add
add
add
and
addb
inc
add
add
and
or
and
and
add
push
add
inc
adc
inc
or
inc
add
add
add
data16
add
ret
add
adc
inc
add
inc
dec
mov
or
or
inc
add
or
inc
add
add
mov
add
or
add
add
add
add
push
inc
addb
sub
and
add
and
mov
inc
addb
add
mov
and
add
inc
push
add
mov
adc
add
inc
addb
or
inc
add
jb
add
adc
and
bound
and
add
add
add
add
or
xor
test
inc
sub
inc
inc
add
or
or
add
pusha
or
add
and
addb
or
add
add
inc
jo
add
add
adc
addb
add
mov
sub
and
pushf
loop
adc
repz
add
pop
push
inc
add
or
add
adc
mov
rcll
les
xor
test
sub
mov
adc
mov
call
inc
xchg
stc
push
dec
mov
sahf
pop
mov
xor
mov
pop
pushf
push
int
sub
and
cmpsb
rcll
pop
mov
movsb
push
and
sbb
les
cmp
mov
cmpsb
pusha
pop
lods
xor
jns
jecxz
add
loop
or
stos
repz
adc
add
sbb
adc
cmp
neg
dec
push
inc
and
shrb
aas
pop
jp
push
test
sbb
push
out
sbb
push
pop
out
push
inc
fwait
mov
enter
mov
cmpsb
rclb
xchg
shl
lods
aad
xchg
loopne
lcall
iret
mov
test
push
dec
jmp
lods
and
sti
pop
jle
sbb
jns
cmpsb
rclb
dec
jmp
xchg
xchg
pop
jle
xor
dec
and
lea
push
insl
imul
xchg
aaa
popf
push
pop
lods
or
xchg
les
out
les
inc
mov
test
and
cmp
cmpsl
jp
cmpsl
rcll
lods
jmp
sti
cmp
xlat
outsl
mov
jb
push
mov
into
les
rcll
lret
adc
es
xchg
add
pop
aam
dec
sahf
incb
push
test
jmp
lds
cmpsb
shlb
les
dec
mov
das
dec
mov
pop
pushf
push
int
sub
and
cmpsb
ret
xchg
les
inc
xchg
or
les
or
rcll
icebp
lret
add
cs
cmpsl
stos
rcll
add
pop
fistpll
rcll
push
mov
fwait
lods
fwait
rcll
push
pop
jae
add
pop
xadd
and
mov
rclb
ret
xchg
inc
ret
adc
add
sub
movsb
rclb
add
loop
xor
cwtl
test
sub
inc
dec
inc
jp
les
xchg
mov
les
lret
call
les
adc
les
rclb
fsub
shll
les
dec
lcall
rcll
cltd
ja
cmp
push
into
sbb
clc
dec
in
jmp
sbb
fwait
fiaddl
adc
in
out
add
inc
cwtl
aam
push
nop
les
pop
pop
mov
jecxz
fistpl
lcall
add
mov
fdivr
and
inc
scas
psrlw
and
outsb
lret
outsb
xchg
jnp
fsts
mov
cmp
push
lcall
sti
jae
cmpsb
dec
xchg
mov
sbb
cmpsl
adc
inc
cmpsl
rcll
cmp
push
int
cmp
sub
rclb
sbb
pusha
dec
xchg
mov
popf
test
pop
sbb
dec
fcmovu
xchg
test
fistl
sbb
mov
lret
lcall
shlb
shll
adc
push
cld
fistpl
scas
in
add
es
cmp
cmp
ss
push
dec
imul
inc
cmpsl
rcll
int
and
scas
mov
jb,pt
cmp
cmpsl
add
int
shlb
cld
mov
sbb
cmpsl
rcll
les
pop
sbb
cmpsl
add
test
fistpl
stos
lahf
inc
push
cmp
cmp
jp
mov
xlat
mov
dec
fbstp
xor
dec
std
fistpl
cmpsb
rcll
js
rcll
dec
sbb
in
shlb
lahf
and
sar
lds
xor
mov
je
les
pop
rcl
xor
stos
dec
cld
fcmovne
adc
inc
fwait
dec
cmpsl
or
fcompl
jge
xor
mov
or
insl
adc
sub
dec
cltd
mov
jecxz
les
out
xchg
les
xlat
xchg
cmpsl
cmp
mov
jns
mov
sub
xchg
enter
ret
ret
jecxz
xchg
rcl
cmpsb
mov
adc
scas
loope
jle
roll
jae
dec
movb
pushf
sbb
cmp
int3
movb
push
push
repz
xor
mov
sbb
pop
lods
pop
rcll
cli
sar
xor
cmp
shll
and
shl
aam
lds
inc
jge
jmp
jno
stos
cld
xchg
iret
fstpl
leave
ss
mov
xlat
inc
repz
xchg
out
outsb
aad
jbe
out
out
pushf
in
hlt
leave
scas
xchg
pushf
pop
jmp
push
decl
xor
sbb
or
inc
jne
jecxz
sub
sub
call
sbb
hlt
or
out
roll
jmp
fsubrl
xchg
mov
cmp
gs
sub
push
jmp
pop
push
or
xchg
sub
inc
es
xlat
out
xor
fstpl
sbb
add
pusha
aaa
aad
inc
jmp
mov
inc
out
jecxz
enter
in
mov
rcll
stos
xchg
sarl
in
pushf
cmp
dec
push
jb
cmpsl
dec
lret
mov
sarl
les
xchg
dec
js
cmc
int3
mov
loope
ret
aam
and
popf
cmp
lahf
stos
mov
mov
in
int
add
les
sub
and
insl
push
loope
xchg
add
bound
ljmp
xchg
test
leave
aas
add
out
push
sbb
movsl
mov
pop
stos
test
pushf
es
stos
insb
xchg
cmp
aas
pop
and
nop
loope
sub
popa
pop
in
sub
mov
insb
inc
lds
mov
push
scas
add
jo
fnstcw
std
rclb
cmpsl
test
fiadds
clc
cltd
mov
lret
xlat
jg
sub
adc
xor
sub
ss
adc
scas
sub
xor
loop
lock
dec
mov
pushf
test
inc
movsl
and
add
xorl
gs
inc
leave
mov
mov
imul
enter
and
push
xchg
xchg
orl
dec
insl
xchg
lds
xor
shrl
and
mov
lds
dec
mov
lahf
push
scas
outsb
ret
lods
arpl
mov
mov
andl
inc
aam
out
scas
lahf
add
mov
sbb
jecxz
ja
loop
inc
lret
push
cltd
daa
and
idivl
add
jmp
aas
iret
insl
and
jp
in
cmpsb
rorb
adc
pushf
fidivs
push
aad
mov
push
bound
or
mov
jnp
mov
shlb
mov
adc
lock
sbb
jecxz
rcl
leave
and
clc
inc
fldt
cmp
mov
lds
out
ss
xor
pop
daa
cwtl
gs
das
mov
cmpsb
fucom
bnd
jne
addr16
movsb
xor
mov
bound
xchg
vhaddps
loope
iret
jl
roll
pop
push
loopne
adc
ljmp
pop
xchg
int
xchg
dec
sub
int
daa
push
jg
inc
mov
mov
add
fsubs
pop
sub
pop
in
add
mov
mov
add
rcl
bound
lret
pop
sub
dec
xchg
fisubrs
inc
daa
iret
test
pop
jmp
sub
inc
and
les
inc
mulb
into
inc
cmp
jae
add
xor
in
dec
jmp
test
test
int3
popa
cmp
pop
leave
cltd
cmpsl
mov
cli
test
sbb
and
pushf
cmpsl
cltd
aaa
xchg
loope
cmp
imul
and
in
adc
sub
roll
sti
push
and
pop
aad
aam
les
fcmovnbe
mov
pop
inc
test
nop
inc
clc
mov
mov
into
call
mov
sbb
xchg
mov
xchg
lret
stos
les
sti
pusha
cmpsb
push
mov
cmp
push
stos
pop
lods
sub
dec
mov
lahf
loope
repnz
push
pop
sub
aas
dec
xchg
sub
pop
xchg
xchg
test
fucomi
in
jge
xor
mov
mov
sub
mov
fwait
lcall
test
pop
sbb
jmp
enter
mov
mov
adc
test
and
rcl
push
ljmp
rol
int
or
or
inc
push
mov
push
mov
loope
repz
push
test
mov
xchg
cmp
fildl
pop
sbb
test
shll
inc
xchg
mov
cli
jb
inc
ljmp
sub
mov
in
add
into
out
push
add
jbe
std
pop
sahf
cmp
inc
pop
int3
push
sarl
add
mov
sbb
jno
sub
rcll
adc
lret
sbb
pop
jl
dec
enter
subl
test
xchg
lea
dec
and
adc
xor
pusha
gs
rorb
sbb
xor
clc
cld
test
push
and
fmuls
fbstp
mov
int3
pop
cmpsl
out
in
imul
mov
repnz
lods
imul
xchg
fisubrl
dec
cmpsl
pop
add
cmp
pop
add
mov
sti
rcll
adc
lret
cmpsb
xchg
bound
dec
cld
lret
outsl
jb
js
call
sub
mov
push
jmp
inc
dec
addr16
jmp
scas
sbb
push
leave
adc
fwait
adc
rorl
lcall
xchg
insb
inc
pop
sub
ss
xchg
fsubrs
fistpl
inc
dec
fwait
cmp
and
or
clc
rcrb
mov
jns
lods
cmp
push
adc
fdivl
inc
xor
movsb
sbb
fstl
scas
add
fs
push
fsubl
adc
or
push
or
and
dec
and
pusha
adc
adc
jl
jl
mov
jg
xchg
adc
mov
scas
vpmullw
cld
loope
fisubrl
scas
jbe
mov
xchg
xchg
mov
into
pop
out
shlb
loope
aam
jecxz
jbe
test
dec
out
and
loop
enter
push
xor
mov
fwait
mov
mov
jo
arpl
shl
int3
sub
adc
cli
sub
adc
mov
test
cmp
xlat
idiv
push
mov
mov
or
cmp
pop
add
out
movsb
mov
push
mov
mov
jmp
dec
dec
repz
xchg
add
add
in
or
mov
scas
movsb
fstps
inc
mov
in
shlb
sbb
int3
adcb
imulb
cmpxchg
cmc
push
push
mov
mov
iret
fiaddl
add
arpl
or
lock
mov
in
mov
out
cmc
out
movsb
push
das
and
aad
les
add
fmul
in
or
int3
scas
lret
cmc
daa
in
aam
mov
mov
mov
or
ja
xchg
es
mov
ret
std
aad
fcomp
jge
test
mov
out
outsl
and
add
or
rcr
aad
stc
xchg
test
lahf
fisubrl
mov
jmp
cmpsb
dec
mov
xchg
cmp
sub
add
pop
jp
adc
popa
mov
xor
push
fwait
sbb
xlat
push
or
lret
out
jae
dec
mov
jns
test
mov
out
andl
rcrb
push
loop
inc
scas
aam
out
stos
in
adc
pop
mov
scas
push
sub
test
xor
mov
into
mov
xchg
dec
lret
daa
fcoms
rcl
push
cltd
fwait
movsb
mov
fs
pop
jecxz
in
mov
or
pop
mov
out
mov
loope,pn
xchg
mov
and
inc
cmc
and
stc
mov
fldt
shrb
cmc
rorl
filds
sbb
mov
lret
dec
mov
in
int
inc
fwait
cmp
cmp
and
stos
fdivl
fcoml
es
xchg
inc
arpl
xor
push
dec
fwait
xor
aad
repz
mov
aad
in
add
sahf
shll
out
repz
jmp
jp
mov
inc
pop
into
aaa
cmc
inc
or
aad
jns
daa
push
icebp
mov
mov
data16
out
cmpb
in
out
pop
mov
mov
outsl
enter
lret
xchg
push
pop
test
repnz
mov
cltd
push
jg
mov
dec
jmp
mov
mov
ja
xor
mov
mov
and
sbb
clc
push
cld
jg
scas
mov
ret
pop
mov
mov
mov
ds
call
test
insb
push
lret
int
test
or
scas
add
mov
pop
mov
jno
inc
lea
pop
clc
sub
mov
imul
push
cmc
xchg
nop
push
call
popa
xchg
shlb
in
mov
xchg
pop
cmp
and
loopne
hlt
xchg
ljmp
jne
xlat
and
inc
sbbb
adc
testl
xchg
or
outsb
adc
push
fmul
aad
addb
mov
ljmp
out
pop
scas
xchg
out
cs
out
in
out
jge
cwtl
out
fwait
xor
sbb
movsb
ret
mov
xor
loope
xchg
cmc
test
fists
inc
mov
mov
or
jae
or
sbb
insb
fmull
add
aam
cmp
aad
adc
mov
lods
mov
bound
push
inc
xor
test
shl
xor
sub
adc
aad
int3
adcb
jno
push
movsb
hlt
leave
mov
loopne
cmp
fs
test
push
mov
into
pop
daa
jecxz
mov
jb
rcrl
mulb
repz
mov
pop
aad
lcall
cs
popf
call
dec
mov
into
inc
xchg
xchg
aam
fists
push
dec
orb
fwait
push
arpl
dec
bound
fnstcw
pusha
fwait
test
mov
and
inc
fdivrl
adc
mov
lods
mov
mov
out
jae
dec
leave
and
lock
cmp
pop
je
jbe
fwait
fwait
lock
repz
xchg
mov
mov
jl
and
mov
inc
out
pop
das
jmp
rcl
pop
aam
push
flds
jecxz
in
xorb
adc
into
mov
jp
xor
fwait
xor
ja
int
adc
jae
fldenv
sub
dec
inc
aad
out
outsb
xchg
sub
es
clc
repnz
xchg
sub
mov
cmc
cmp
into
xchg
addr16
divl
xchg
and
push
stos
sti
xlat
lods
cmp
pop
into
scas
pop
push
mov
cmc
fincstp
push
iret
sbbb
out
lcall
ret
lea
or
push
mov
mov
inc
fnstsw
pop
lcall
jmp
or
in
inc
sub
xchg
dec
stos
pushf
in
dec
mov
cmp
adc
aas
pop
imul
adc
pop
mov
push
fcmovnbe
and
in
hlt
push
sub
call
cli
xchg
mov
lret
int3
negb
ljmp
lret
rorb
lret
int3
push
or
add
cli
cmpl
setg
xor
hlt
mov
lea
adc
into
add
leave
repz
fcomps
lret
aad
out
mov
pop
pop
mov
inc
mov
aaa
or
into
xor
lods
aam
dec
outsl
pop
ret
aad
fdivl
test
mov
in
ret
mov
dec
std
mov
push
stos
xor
out
mov
sahf
push
jecxz
stos
sbb
xchg
and
lock
pop
push
in
fisttps
insl
mov
or
or
add
mov
ljmp
xor
repz
in
push
dec
fs
inc
leave
xor
add
jns
cmc
push
add
mov
aad
lods
ja
and
fiadds
data16
cmc
lcall
loopne
dec
xor
or
push
mov
fdivl
jmp
and
add
dec
scas
scas
rcrb
fwait
in
in
out
sbb
push
lcall
jecxz
ss
arpl
cs
mov
scas
fisttpl
enter
gs
mov
push
dec
push
mov
sbb
xchg
xor
add
sbb
add
scas
repz
xor
sahf
and
mov
das
inc
pop
ljmp
arpl
enter
aad
and
int3
or
lcall
adc
pushf
out
pop
lea
add
or
xchg
lds
sbb
into
jb
mov
cs
lods
or
or
jo
mov
fcoml
fdivp
movsl
inc
mov
lret
jl
loopne
int
negb
mov
push
repz
sar
stos
in
xor
and
out
call
scas
bndldx
jbe
mov
xchg
adc
sub
xchg
mov
clc
pop
aad
and
mov
pop
sub
mov
cwtl
movsb
arpl
mov
xchg
mov
dec
decb
sbb
push
mov
out
xor
xchg
fs
fmul
fidivrl
xchg
mov
mov
into
sub
aad
mul
movsl
out
adc
rcrl
xlat
pop
mov
xchg
adc
outsl
mov
push
mov
mov
xor
cltd
int
fwait
rolb
into
push
scas
adc
xchg
ret
pop
mov
xlat
fistpl
push
cld
sbb
adc
mov
and
in
out
mov
fldl
sub
aad
in
cmc
mov
mov
mov
add
movsb
test
jmp
cli
rcl
mov
sbb
push
andl
ret
in
shlb
jg
loop
xor
clc
scas
divl
inc
loopne
sbb
or
fwait
ret
int
mov
repnz
mov
sbb
mov
sub
sbb
pop
out
mov
mov
ja
rcr
test
sub
cmc
cld
mov
jne
enter
xlat
pop
bound
mov
or
push
sbb
ja
es
in
movsl
xchg
mov
fs
xchg
xchg
rcrb
in
jmp
sub
insb
or
mov
call
adc
dec
jg
adc
out
aas
and
lcall
dec
lret
aaa
call
aad
dec
in
clc
mov
jb
aaa
adc
negl
in
fsubrl
dec
and
insb
in
lea
loopne
fwait
and
or
into
or
fwait
or
sbb
das
mov
and
fpatan
ret
cmp
movb
scas
cld
add
test
mov
or
lcall
divl
xchg
insl
faddl
out
adc
loopne
sub
loop
xor
movsb
ret
xlat
cmp
mov
sbb
imull
int3
jle
mov
push
and
cmc
test
stos
xchg
in
mov
jnp
lcall
fisubrs
sub
dec
in
std
mov
test
into
cli
cmc
mov
into
push
imul
or
or
iret
fmull
test
fcoml
int3
cs
lret
mov
mov
lcall
xor
sarl
add
int
aas
adc
inc
add
jmp
mov
mov
xchg
cmp
or
gs
jecxz
dec
pushf
in
aam
mov
lahf
call
test
fsubrl
mov
mov
cli
push
ret
sub
iret
orl
sbb
movsl
dec
lahf
rclb
mov
daa
and
leave
repz
xchg
pop
dec
cmp
xchg
shrb
push
or
lods
or
ja
sbb
into
mov
fldl
fildl
mov
and
xchg
cmpsb
repz
jmp
or
test
es
fwait
stos
dec
in
cltd
mov
test
ret
push
fisttpll
sbb
mov
mov
xor
jns
and
jbe
fildl
aaa
xor
or
test
or
aam
jmp
or
and
adc
fildll
pushf
in
insl
mov
into
data16
movsb
inc
leave
lret
sub
mov
pop
push
dec
imul
or
inc
sti
pop
clc
and
cmp
pop
sbb
icebp
mov
pop
rclb
iret
and
pop
dec
sbb
push
in
out
arpl
pop
mov
xlat
mov
add
into
mov
push
push
mov
cmc
cmp
sub
fcomip
dec
sti
call
jg
outsl
fdivr
push
xlat
cmc
popf
in
mov
ret
mov
jl
mull
pop
cmp
and
sbb
dec
sub
pop
lods
scas
and
inc
xor
pop
lret
or
les
int
adc
xor
xor
jmp
jl
fistpl
push
pop
jecxz
test
leave
or
jecxz
leave
mov
fwait
jb
test
ljmp
aad
fwait
test
filds
dec
pop
sbb
mov
mov
scas
push
add
in
pop
pop
sahf
cwtl
hlt
scas
repz
jmp
rorb
adc
mov
pop
and
cs
stc
or
lcall
leave
mov
pop
push
cwtl
xchg
fs
dec
fidivl
xor
mov
shlb
int3
xor
jns
push
loopne
test
fwait
clc
enter
scas
pop
mov
lret
pop
ficompl
or
inc
sbb
xlat
in
int
nop
xchg
fmul
inc
dec
sub
push
jle
xor
jl
sub
lods
pop
aad
repnz
arpl
mul
fsubl
in
adc
add
dec
cmp
stc
insb
stos
jl
clc
add
loope
scas
out
das
test
jecxz
mov
cmc
sbb
repz
adc
or
dec
fs
je
jbe
dec
and
sbb
dec
adc
into
data16
mov
sbb
int
jno
or
in
icebp
aas
in
int
in
bound
daa
and
enter
inc
sbb
daa
xchg
repnz
jecxz
pushf
inc
pop
orb
add
jno
xor
popa
push
scas
xchg
pop
xchg
pop
ret
pop
mov
fistl
imul
call
and
cmp
imul
push
call
sbb
call
sub
int3
out
cmp
insl
or
not
daa
scas
jecxz
xchg
ret
pop
mov
add
rcrl
sub
or
in
pop
sub
and
leave
fcoml
or
xor
sbb
xlat
pop
or
fcomps
jl
in
out
pop
mov
movsb
fadds
mov
push
mov
mov
jmp
xor
lock
lods
out
ljmp
pop
mov
test
jle
sub
loopne
fwait
xlat
push
divl
cld
aaa
sti
mov
aaa
dec
stos
aam
mov
push
mov
nop
xor
sbb
scas
xor
aaa
jecxz
test
cmc
inc
or
and
int3
sbb
ficoms
mov
enter
xor
or
sbb
dec
mov
out
aaa
and
jmp
mov
jecxz
shr
or
idivl
or
push
pop
fdivp
cs
xor
push
sti
cmc
fildl
rorb
adc
add
adc
test
adc
jle
sub
clc
dec
in
out
jecxz
xchg
jecxz
fwait
or
mov
out
inc
or
lret
aad
cmc
iret
lret
sar
ds
ljmp
fs
fists
xchg
je
aas
enter
sbb
dec
mov
out
aaa
and
xchg
or
xchg
or
int
fs
inc
xor
mov
rcr
jnp
scas
pop
push
adc
test
mov
ficoms
in
stos
add
push
leave
pop
ret
pop
cli
repz
sub
aam
out
fs
or
ljmp
scas
xor
out
push
cld
lcall
sti
xchg
pop
leave
imul
mov
pop
mov
pop
mov
adc
add
mov
out
aaa
and
shll
in
not
cwtl
addr16
inc
xlat
inc
imull
lea
mov
and
ffreep
in
fsubrl
dec
daa
in
jmp
ret
cmc
popf
in
repnz
push
pop
sbb
adc
out
fldenv
jecxz
mov
push
filds
and
aad
ljmp
mov
ret
mov
push
mov
rorl
in
shrl
pop
popf
and
in
fsubl
lret
pop
adcl
notb
xchg
and
adc
fadd
mov
into
repz
mov
in
mov
xchg
push
call
fwait
xchg
add
mov
push
xorb
sbb
leave
push
sbb
push
jecxz
orb
add
mov
aad
fadd
mov
xor
sbb
mov
mov
inc
out
pop
push
adc
mull
leave
jle
enter
dec
ror
andl
sbb
aam
cmpsl
scas
out
sbb
mov
ret
fcmovnbe
dec
ja
mov
in
fmull
mov
lcall
xchg
sbb
dec
rcll
cmp
or
sbb
inc
insb
push
sbb
pushl
clc
pusha
mov
sbb
push
mov
add
out
jno
jnp
lds
xchg
xor
jmp
mov
ja
xchg
lods
or
adc
lods
push
fwait
adc
ss
int3
xchg
rcr
push
hlt
call
jmp
lcall
ret
mov
push
or
fcomp
mov
pushf
or
rcr
fs
pop
loop
adc
add
mov
cltd
int3
cs
adc
xlat
fistpl
dec
aas
jg
into
cs
bound
fsubrl
or
add
call
lea
out
out
sbb
push
movl
xlat
ss
or
sub
ja
jne
xor
mov
movsl
loopne
pop
push
test
mov
fdivl
sahf
mov
mov
xor
mov
cmc
mov
arpl
pop
fdivl
cmp
push
popf
xchg
mov
outsb
imul
out
cmp
cltd
mov
mov
in
lods
or
xchg
fwait
pushf
push
cmc
and
test
pop
push
inc
in
subb
ret
int
mov
into
inc
sbb
push
and
leave
cli
xchg
mov
ljmp
pusha
pop
inc
imul
mov
scas
sbb
inc
cmp
or
lret
int
jnp
gs
add
xor
icebp
gs
mov
inc
pop
mov
xchg
es
xchg
fs
jmp
or
inc
fmuls
arpl
dec
addr16
les
or
sbb
jne
xor
aaa
mov
addl
ds
mov
push
in
sub
cmc
dec
pop
xor
test
test
push
sub
rolb
dec
shl
sub
arpl
negb
fdiv
out
daa
xchg
nop
out
adc
stc
pop
adc
das
arpl
mov
out
loop
addr16
cmp
sub
pushf
popf
fldcw
into
ljmp
loope
xchg
loopne
sub
cltd
and
and
adc
fwait
insb
repnz
stos
stos
cmc
test
cmp
jp
mov
ja
lock
lcall
pop
nop
add
mov
insl
int
fs
hlt
mov
mov
aad
jmp
pmaddwd
fwait
push
pop
xlat
testl
call
leave
fwait
fwait
or
out
test
dec
mov
out
mov
xchg
mov
out
mov
enter
inc
cmp
aaa
mov
pop
clc
fistps
push
mulb
into
into
das
mov
notb
dec
outsb
imul
mov
dec
mov
sub
loopne
cltd
dec
dec
xchg
push
pop
inc
out
pop
xlat
adc
stc
icebp
aad
fistps
or
xorl
push
mov
ret
int
pop
push
xlat
push
sti
mov
jo
fstpt
lock
lods
mov
movsb
xchg
lret
fisubrl
mov
jmp
cmp
ljmp
out
pop
loop
cs
inc
xchg
ja
push
mov
add
repz
jmp
lret
iret
shll
or
addb
imul
addr16
dec
cmp
arpl
es
sbb
and
int
pusha
lcall
in
inc
ret
ss
jmp
mov
int
pop
push
mov
sbb
dec
scas
xor
das
xor
or
std
in
fs
fcmovnu
dec
lret
inc
fwait
or
loopne
dec
cwtl
pusha
fwait
mov
add
into
out
xor
stos
adc
in
push
cwtl
imul
fs
out
or
jo
aad
iret
pop
push
movsl
shrl
leave
imul
xlat
ds
dec
repz
sbb
jno
pop
in
xor
add
and
push
jmp
or
in
sub
and
in
sub
or
in
sbb
repz
outsl
and
sbb
push
mov
fcompl
adc
lods
out
repnz
xchg
lret
or
xor
jmp
or
in
cmc
sub
mov
out
xor
leave
in
or
lcall
fs
out
pop
shl
das
out
mov
jmp
enter
push
dec
mov
xchg
icebp
xchg
dec
sbb
aas
test
arpl
push
jne
cmc
jmp
lea
jecxz
out
shlb
into
div
cltd
or
cltd
pop
cmp
and
popf
mov
push
std
jmp
movsb
cmpxchg
fdivrp
fdivrl
nop
lret
sbb
cmp
mov
or
mov
mov
js
outsl
icebp
cmpsb
jmp
out
iret
in
aas
test
push
and
das
or
pop
scas
stos
mov
rorl
mov
mov
push
cmp
mov
or
sbb
sbb
push
or
lcall
inc
ljmp
inc
xor
aaa
push
std
aam
cmp
and
movsb
negl
aaa
sbb
or
adc
mov
push
mov
cmc
aad
fdivl
daa
and
dec
pop
loopne
and
pop
fwait
test
sub
inc
pop
das
adc
mov
lahf
in
push
outsl
fsubl
push
or
int
jg
and
in
out
sub
fcoml
sbb
movsb
out
mov
sub
dec
cmpsl
jge
lahf
ror
ret
sbb
pop
movsb
adc
fcmovnbe
je
hlt
pop
into
sbb
mov
outsb
push
fcomp
mov
div
popa
adc
sbb
fdivl
sub
data16
scas
mov
loope
stos
sti
lock
int3
mov
push
fstpl
iret
inc
imul
lea
mov
aam
pop
int
mov
lahf
and
mov
push
or
fdivl
mov
mov
fs
fdivrl
jg
fwait
call
div
mov
mov
fs
rclb
scas
test
add
dec
pmulhw
call
scas
pop
and
leave
pop
int3
outsb
inc
shr
pop
xchg
icebp
dec
push
negl
or
in
in
in
dec
xchg
bnd
jmp
or
sbb
mov
loop
cmp
push
loop
pop
mov
cltd
aad
fcoms
dec
pop
fwait
xchg
or
scas
imul
sahf
popa
fdivrs
mov
in
mov
mov
mov
push
lods
test
jns
or
leave
ja
pop
das
pop
lcall
xchg
ja
negl
xor
sub
and
addr16
into
es
cli
insb
push
shlb
mov
push
mov
mov
mov
loope
xchg
mov
jmp
rorb
adc
mov
cmp
adc
add
sti
fsubl
xor
jmp
mov
aam
mov
push
call
cmc
repz
dec
mov
in
push
aad
push
xchg
sbb
mov
sub
aas
or
mov
adcb
mov
mov
in
lahf
mov
das
daa
cmp
jg
mov
insb
sub
push
fs
adc
imull
push
mov
into
div
cltd
pop
cmc
repz
mov
mov
push
cmpsl
or
mov
cmp
push
daa
rcr
shr
test
divb
in
lock
xchg
ret
or
pop
xor
inc
inc
xlat
pusha
mov
into
ss
dec
mov
test
imul
popf
hlt
mov
fcoml
add
and
je
push
loopne
cmpsl
push
push
into
ljmp
jbe
loopne
xor
add
repnz
les
add
into
cs
inc
out
ficomps
mov
in
push
adc
cmp
into
mov
jae
cld
dec
cmpsb
mov
xchg
fldenv
ja
pop
sahf
enter
in
flds
int
in
ret
mov
out
xchg
pushf
mov
out
in
lret
iret
adc
inc
repz
xchg
sbb
dec
sub
fwait
cmp
dec
bound
xchg
cmpsb
ds
and
push
mov
repnz
into
mov
jnp
sbb
mov
xor
subl
mov
mov
out
ret
jne
scas
out
cmp
push
pop
cmpsl
iret
arpl
mov
fdiv
ffree
pusha
fwait
pushf
mov
into
dec
xchg
lret
mov
stos
mov
fstps
cmpsb
stos
fsubr
movsb
mov
xchg
or
pop
fldl
pop
ss
xor
push
or
lret
int
mov
add
xor
fnstenv
or
das
jg
add
pop
mov
dec
fistpl
push
mov
adc
xchg
mov
xlat
dec
sub
imul
sub
xchg
push
push
xlat
sbbl
lret
int
pop
mov
lret
sbb
out
into
or
and
mov
sbb
mov
jle
repz
xchg
aaa
xchg
mov
mov
cli
jbe
sub
ljmp
or
inc
xor
outsl
push
ret
jecxz
inc
shrb
int3
scas
fwait
adc
out
add
mov
sbb
shr
fs
outsb
sub
scas
pop
sahf
mov
jg
popa
jmp
xlat
inc
sbb
lods
mov
call
mov
scas
mov
xlat
sub
stc
or
fs
loop
lock
jmp
push
xchg
sub
sub
ljmp
call
xchg
imul
pop
stos
lahf
fiaddl
fistl
pop
and
out
fs
push
test
and
push
popa
xchg
inc
xor
std
in
sub
out
aad
lret
push
sub
stc
and
or
sbb
aad
mov
sbb
scas
jnp
dec
call
pop
adc
add
mov
cs
bound
jnp
pusha
lret
fidivrl
cmp
mov
or
fistpl
jmp
pop
int
fs
pop
pop
cs
push
sub
out
dec
and
leave
inc
sub
pop
into
notl
mov
outsl
mov
jmp
decb
mov
adc
aad
test
into
out
xchg
lock
or
sub
fdiv
inc
or
lcall
dec
xchg
mov
aad
ds
scas
out
out
ret
or
mov
xlat
jns
inc
dec
lcall
aas
mov
mov
aaa
fmull
out
mov
test
aad
call
scas
mov
pop
pop
mov
cmpb
pushl
or
sahf
inc
mov
jmp
adc
in
call
xchg
inc
mov
push
pop
pop
fldcw
mov
mov
fcomi
cld
adc
je
pop
mov
pand
imul
push
call
or
icebp
push
lret
int3
mov
push
dec
add
ljmp
pop
jmp
inc
sti
add
push
scas
jmp
xchg
lret
adc
cmp
ss
out
push
sbb
push
xlat
and
in
adc
rolb
in
mov
in
add
shlb
sbb
and
in
fadd
shl
fwait
or
lret
sar
mov
push
neg
or
fs
push
mov
std
inc
test
xor
mov
addr16
out
das
and
leave
jmp
lods
ficoms
test
jnp
dec
lret
das
fcmovu
cs
push
inc
pop
int3
fcomp
sub
xor
fldl
jecxz
add
xor
scas
push
ret
fcompl
test
xlat
and
mov
mov
inc
xchg
sub
aaa
and
out
movsl
push
jae
xor
cld
mov
adc
scas
cmp
push
inc
in
sbb
in
mov
movsb
sbb
repz
fstp
cmp
imulb
mov
bound
and
es
push
aaa
mov
hlt
fdivs
out
test
dec
mov
into
testl
fisubs
negb
mov
pop
fwait
insb
enter
mov
shl
cs
lret
out
mov
in
sbb
jae
in
ljmp
fisttps
mov
xor
loope
aam
jmp
cwtl
in
xchg
iret
test
ja
xor
or
adc
pop
adc
jo
ja
pop
leave
fsubl
or
mov
mov
or
cltd
inc
cmp
add
xchg
mov
into
push
fs
mov
jb
scas
rcrl
jecxz
or
cmc
lods
in
pop
xlat
inc
lcall
fsubs
cs
add
into
xchg
add
jnp
es
mull
push
into
mov
fwait
push
mov
mov
cmp
ja
cmc
cltd
loopne
jae
or
mov
push
cmp
dec
in
arpl
nop
jmp
add
push
fcoml
es
xchg
cld
ljmp
aam
mov
mov
jge
pop
jl
jl
out
mov
ss
mov
or
pop
loop
loop
mov
test
sbb
cmp
shlb
outsb
mov
jne
xor
mov
mov
stos
push
push
jnp
add
mov
lahf
hlt
jo
xor
cmp
iret
xchg
ret
pop
mov
arpl
pop
jg
cmp
mov
xchg
jne
imul
mov
pusha
int
xchg
shrb
add
push
jae
arpl
push
and
fnstcw
mov
aad
mov
leave
out
ds
iret
out
or
faddl
lods
sub
xor
in
dec
mov
xor
lahf
push
xor
and
movsb
inc
jecxz
out
cmp
pop
jno
fisubrs
fwait
das
out
pop
cs
cs
enter
outsb
outsb
xchg
push
lret
push
aam
jo
call
lods
jns
leave
fdivrs
jmp
movsl
repz
or
mov
mov
sbb
fnsaves
or
out
xlat
sbb
push
pop
and
repz
into
push
mov
pop
mov
cmpsb
mov
xchg
shrb
cmp
in
into
repz
ljmp
fisubrs
aam
test
rcl
scas
xchg
std
dec
jmp
mov
rclb
xchg
cmp
aad
mov
fstpt
pop
mov
push
adc
scas
and
jne
mov
cmc
mov
es
repnz
adc
lcall
negb
movsb
or
lock
mov
test
inc
insl
xor
add
inc
outsb
jmp
and
fldt
insb
inc
aas
in
call
clc
adc
out
xchg
clc
or
jmp
clc
pop
lcall
lahf
fwait
or
fistpl
popf
jp
sbb
sbb
icebp
call
mov
insl
xchg
mov
out
repz
xchg
in
pop
jae
test
repz
repz
or
int
xchg
sub
repz
rcll
outsl
sbb
out
mov
jp
jnp
adc
jecxz
mov
scas
cltd
jb
lahf
mov
ja
mull
out
or
xchg
adc
mov
sbbb
aaa
hlt
decl
sbb
into
ss
outsl
sub
shrb
adc
xor
and
dec
fisttpl
push
push
rorl
ret
mov
aad
imul
into
out
jne
stc
jne
or
adc
push
fldl
bound
arpl
pop
mov
xchg
bound
pop
push
lret
loope
ss
adc
push
lret
int
dec
push
gs
push
adc
xlat
sti
add
lret
std
leave
inc
lcall
dec
notb
jnp
int3
into
xor
add
sbb
das
sub
pushf
stc
pop
xor
mov
icebp
adc
arpl
dec
mov
sbb
sub
xchg
sub
in
into
scas
pop
jp
shr
push
lock
daa
mov
fmul
push
sbb
xchg
mov
repnz
aad
cmc
mov
add
mov
popf
sub
jmp
fisubrs
mov
pop
imul
add
mov
shl
push
pop
mov
add
fyl2x
je
es
enter
push
mov
dec
jo
in
ljmp
mov
fwait
int3
mov
pop
mov
hlt
lcall
push
jb
cltd
in
dec
pop
mov
pop
mov
out
jecxz
popf
push
push
xor
movsl
in
in
into
push
mov
sub
sbb
dec
lahf
xchg
adc
hlt
xchg
ret
push
push
loopne
imulb
inc
fiaddl
sti
jmp
sbb
xchg
roll
xchg
sbbl
sbb
int
pop
add
out
cmc
and
or
fisttpll
cmp
xchg
adc
fsubrl
leave
xor
jae
xor
push
mov
xor
fmull
pop
inc
cmc
add
cmp
imul
leave
fsubrl
cld
mov
or
sub
dec
lea
push
sbb
push
cmc
lcall
push
movsl
inc
xchg
fdiv
mov
push
mov
jae
fs
pop
bound
sub
in
cmc
pop
push
fstps
fidivrs
mov
and
dec
sbb
push
pusha
xchg
fwait
inc
xor
pop
mov
fidivs
xor
dec
movsl
push
adc
mov
fdivl
test
xlat
sub
xchg
push
fcomps
sarb
int3
mov
lods
fwait
dec
in
inc
or
imul
ds
sbb
add
call
fildll
test
cmpsl
or
sbb
imul
scas
repz
test
test
xchg
inc
or
outsl
fsubrl
xchg
repz
dec
mov
cmpsl
xor
dec
lahf
inc
adc
mov
inc
lcall
push
cli
hlt
scas
cmp
call
pop
xchg
sub
xlat
sti
in
push
lret
int3
data16
sti
xchg
adc
xlat
jmp
push
lret
int3
mov
push
cmp
xor
push
lret
int3
adc
add
sbb
and
std
push
push
ret
pop
mov
aad
shl
push
sti
sbb
pop
lret
cmp
out
and
in
cmc
pusha
mov
fidivl
mov
push
addr16
sub
outsb
and
scas
ss
es
inc
in
call
mov
test
repz
lcall
movsl
mov
lea
push
dec
xlat
testb
leave
fcmovnb
fs
fwait
in
loope
in
pop
mov
dec
xor
test
dec
pop
pop
mov
je
jecxz
jb
adc
sahf
and
fistps
test
dec
jae
and
scas
jnp
cld
cs
aad
jecxz
sub
rorl
mov
cmp
std
scas
arpl
inc
dec
sbb
or
lret
mov
test
push
adc
imul
in
out
jecxz
mov
pop
pop
popa
xor
movsb
in
lret
mov
divb
lcall
faddl
xchg
out
repnz
jle
xchg
xchg
add
mov
fdivrs
idiv
sbb
or
fwait
or
pop
adc
jg
fwait
movsb
notl
jbe
inc
push
mov
loopne
cwtl
fcoml
adc
adc
int3
test
lods
push
mov
cmc
and
scas
xor
or
fcoml
mov
popf
aad
mov
sub
or
sbb
push
adc
imul
imul
pop
stos
inc
ror
or
or
in
adc
fdivr
lock
jmp
je
push
cli
mov
addl
mov
jl
fs
js
sub
int3
loop
or
daa
sbb
sahf
or
scas
push
leave
cmc
dec
and
gs
fsubl
mov
mov
inc
imul
cmc
lods
mov
mov
fdivl
mov
jae
stc
mov
jbe
loopne
stos
mov
movsl
mov
add
insb
into
movsb
and
sbb
xor
or
adc
icebp
push
mov
mov
mov
ljmp
and
ljmp
lods
enter
xor
in
leave
mov
push
fcmovne
mov
divb
xchg
mov
mov
xlat
xor
scas
or
into
mov
lret
xchg
dec
dec
repnz
test
stc
and
xchg
cmc
test
call
fistpl
mov
shrl
nop
bound
sub
js
outsl
mov
fs
mov
hlt
xchg
mov
dec
lods
stos
adc
stos
mov
cltd
or
lds
jnp
fdivrl
mov
aad
cmc
lcall
stos
rclb
dec
jae
xchg
xchg
jecxz
into
sahf
mov
and
popf
push
into
scas
cmc
mov
push
mov
lret
test
or
lcall
cmc
dec
or
fistpl
jne
lods
imul
in
mov
addr16
fwait
xor
jae
cmc
scas
xlat
mov
lock
stos
mov
int3
push
adc
int
adc
xchg
pop
cmc
lcall
in
out
cmc
xchg
mov
xchg
and
push
out
loopne
push
or
add
fwait
jbe
adc
in
fmull
out
cmc
lcall
sti
mov
daa
rcr
loop
mov
or
out
mov
fistl
jecxz
aad
mov
stos
pop
mov
out
inc
in
mov
pop
jp
mov
stos
cmp
in
xchg
jne
fcompl
aas
or
aad
test
aad
fcoml
cvtdq2ps
into
adc
cmp
movsb
xor
mov
dec
rcrb
mov
enter
mov
jbe
outsb
int
pop
mov
pop
lahf
fxch
mov
aaa
out
dec
insb
mov
das
daa
cltd
fwait
or
sbb
mov
xchg
push
idivl
test
mov
cmp
fwait
lods
cwtl
in
loopne
ret
mov
jg
xor
push
scas
rclb
dec
mov
loopne
cmpsl
call
in
movsl
test
jb
mov
mov
fstl
xor
sub
fisttpll
scas
pop
inc
dec
out
xchg
fwait
test
fcmovnbe
dec
daa
stos
mov
out
div
xchg
push
cltd
stos
stos
sub
fsubrl
aam
pop
fs
repz
xchg
jmp
scas
dec
xchg
mov
mov
out
fwait
fwait
sub
sti
lods
mov
aaa
popf
xchg
outsb
xlat
faddl
push
mov
pop
xchg
ret
pop
mov
addr16
subb
cmc
push
mov
call
pop
xchg
ret
subb
in
jge
inc
dec
push
lcall
sbb
jno,pn
and
mov
push
mov
pop
mov
cmp
icebp
push
imul
lcall
jae
imul
adc
xchg
push
push
lea
xor
ds
fwait
fwait
and
sbb
aas
dec
adc
aas
mov
sbb
mov
stos
xor
clc
mov
pop
cmp
mov
add
push
ds
cmp
aad
cmp
push
faddl
in
xchg
add
push
sbb
push
scas
jecxz
xor
sub
aam
inc
xchg
adc
mov
jbe
fcoml
mov
sahf
mull
in
test
lea
adc
xor
popa
stos
and
sbb
xchg
je
mov
in
push
mov
jae
cmp
dec
out
pop
or
xor
mov
xchg
cmp
dec
out
sbb
daa
xchg
andl
cmc
lods
cli
xchg
mov
std
mov
imull
orb
xchg
jb
adc
pop
popf
nop
pop
push
push
js
popa
into
mov
pop
lret
push
pop
adc
mov
xor
out
cwtl
xchg
xchg
imul
or
add
imul
and
cs
nop
xor
negl
movsl
or
or
int3
pusha
repz
pop
mov
mov
pop
in
cmp
pop
sbb
ja
fwait
fwait
test
mov
fldl
or
ja
fwait
fwait
adc
out
fistl
call
fwait
test
sbb
pop
sbbb
mov
popa
insl
leave
addr16
dec
add
cltd
sub
xor
mov
xor
push
xor
push
negb
insl
cltd
mov
in
andl
fcoms
jno
stos
arpl
mov
and
into
dec
push
es
cmp
cmc
sbb
pusha
into
aad
and
mov
jae
out
or
enter
out
and
fbstp
xchg
leave
mov
push
push
xlat
ss
lea
xchg
mov
mulps
lcall
fistl
lret
int
push
push
lods
and
ljmp
jecxz
xchg
inc
ret
pop
mov
adc
sub
imul
lcall
fucomi
push
lret
lock
dec
sbb
mov
stc
fistpl
imul
push
call
in
xchg
lcall
adc
xchg
push
adc
xor
adc
scas
fcmovnb
xchg
pop
cwtl
or
ret
lret
rcrb
adc
mov
add
adc
push
aam
cmc
sub
push
add
adc
jae
int
daa
mov
filds
adc
out
jno
pop
test
nop
shr
pop
into
pop
mov
mov
mov
mov
shr
mov
xor
or
push
test
and
scas
outsl
rcr
mov
in
out
pop
repnz
subl
in
pop
test
xlat
sbb
out
pop
mov
xchg
popa
mov
add
shr
mov
bound
sub
scas
jb
push
xchg
push
mov
jmp
mov
pop
scas
jae
cmp
ds
jmp
lcall
mov
fsts
stos
sbb
sub
pop
adc
inc
jecxz
fwait
call
sub
mov
int
dec
xchg
in
enter
sbb
ds
cmp
mov
pushf
sarb
dec
fwait
fwait
sbb
fldt
enter
adc
push
movsb
mov
cmp
in
lcall
cmc
lcall
in
xor
jmp
add
push
aas
sub
enter
push
sub
out
sub
call
fsts
jmp
adc
loope
mov
cmc
in
xor
repnz
fdivl
xchg
adc
jmp
cs
inc
fstps
test
mov
cmpsl
add
movsl
movsb
fnsave
mov
mov
jg
dec
inc
jae
ds
pop
adc
sub
imul
adc
dec
adc
pop
enter
fwait
cli
sahf
push
lret
int
jecxz
xor
cld
lcall
ret
repnz
mov
lret
fcmovb
push
xor
out
rep
or
jnp
ljmp
fmul
jg
xor
scas
jnp
xchg
pop
mov
loopne
popa
cld
push
push
push
pop
outsl
pop
fimull
aad
mov
mov
add
jmp
scas
sub
fadd
pop
or
testb
xchg
push
int
push
mov
lods
mov
lret
divb
scas
repz
xchg
ret
add
ret
bound
lea
int3
stos
hlt
in
leave
mov
mov
sub
call
xchg
jmp
movsb
leave
dec
and
pop
mov
daa
movl
mov
jecxz
in
stc
stc
retw
cltd
dec
fimuls
outsl
fwait
lods
addr16
pop
ds
lods
test
pop
mov
dec
jmp
mov
mov
dec
lods
leave
inc
xlat
fcoml
das
mov
cli
mov
out
fildll
shll
fstps
into
repnz
in
fdivrl
or
sbb
pop
leave
push
sub
pop
mov
insl
push
mov
mov
pop
xor
repnz
out
mov
dec
in
jmp
shl
lcall
insb
and
mov
mov
pop
cmc
pusha
mov
int3
in
or
clc
scas
adc
lds
sub
aad
mov
lods
mov
mov
int
stos
mov
out
mov
mov
shl
sbb
mov
lods
mov
ljmp
shr
pop
outsb
call
xchg
mov
cmp
stc
out
pop
clc
das
sti
mov
sub
sbb
fadd
in
into
pop
push
sbbb
pop
adc
pop
sbb
int3
push
xchg
add
pop
mov
into
cmp
rcr
movsb
fwait
and
xlat
int
dec
call
movsl
aad
out
rcl
xchg
lcall
loope
push
dec
lahf
or
jne
imul
fsubl
int
aaa
mov
add
fcomps
xchg
fwait
lods
adc
stos
int
pop
mov
jg
fwait
add
dec
xchg
ljmp
cmp
out
or
xor
cmp
cmpsb
jmp
into
xchg
adc
fcmovnb
dec
movsb
in
fistps
shlb
into
lcall
fwait
fwait
in
cs
mov
push
dec
or
add
push
out
loop
mov
xchg
jbe
add
xchg
in
insl
mov
rclb
clc
ja
lods
mov
stos
arpl
es
imulb
mov
je
xor
jmp
scas
and
fdivs
fwait
add
aad
out
cmpsl
xchg
cmp
in
arpl
js
sti
xchg
fmuls
hlt
jae
sti
int
sahf
xchg
xchg
jno
and
insb
aad
in
outsl
push
xor
mov
mov
pop
fs
scas
mov
adc
loop
ret
int3
pop
hlt
inc
enter
popf
mov
inc
leave
bound
mov
jbe
mov
push
pop
fisubrl
jl
dec
mov
cmp
fdivp
pop
imul
adc
fmull
and
repz
jmp
push
add
mov
pop
sbb
pop
jne
cmp
cmp
or
pop
scas
scas
cld
and
out
je
fisubrs
in
repz
or
hlt
xchg
xor
aas
movsb
fmul
leave
jb
das
fdivrl
test
mov
outsb
movsl
xor
test
or
test
sbb
psubusw
ficoml
add
clc
xlat
fdivrs
push
stos
add
pop
xor
out
xchg
push
sub
or
push
int3
enter
roll
scas
mov
lret
cmp
sbb
fisubs
cmc
push
dec
push
push
repz
and
add
xor
mov
add
in
xchg
int
in
push
test
jecxz
out
pop
xor
jecxz
mov
xlat
repz
sbb
sbb
push
not
add
inc
lods
movsb
loop
scas
xor
xor
aas
frstor
xor
pop
sub
inc
inc
bound
fnstcw
jmp
pop
loop
mov
dec
push
aaa
arpl
and
mov
cmp
out
ficoml
mov
test
push
adc
fadds
stos
add
dec
rcll
and
lcall
call
aas
lock
xchg
cmpsb
or
add
sub
flds
lret
mov
fdivs
dec
fdivrs
or
test
mov
jl
les
cs
or
test
xor
ds
loopne
int
xchg
test
shll
or
add
movsb
sar
les
fcmovb
gs
cmp
cmpsl
aad
leave
leave
add
in
xor
iret
lods
aam
stc
mov
push
aas
inc
sti
es
pop
or
mulb
pop
xchg
and
addr16
xchg
or
cmp
ljmp
jmp
outsl
add
call
jne
pusha
divl
movsl
mov
flds
ljmpw
int3
stos
sarb
push
lods
mov
insl
ljmp
add
int3
mov
sbb
mov
test
lea
add
int3
mov
jle
shll
xchg
inc
test
cltd
inc
xchg
fwait
add
les
clc
mov
int
mov
sbb
mov
fcomi
scas
leave
loop
into
cmp
xchg
js
pop
xchg
aad
jns
or
inc
aad
or
fs
out
repz
mov
cmp
or
mov
pop
jge
pop
fsubl
push
sti
push
pop
jle
mov
and
mov
not
cli
or
fisubl
imul
stos
std
mov
sbbl
fstps
daa
testl
in
cmp
or
jg
cmp
add
cld
mov
push
aad
mov
aam
mov
ljmp
pop
repz
imul
testb
aaa
and
test
aas
jmp
repz
out
sbb
jecxz
mulb
sbb
testl
test
cmp
test
rcr
cmp
shll
std
incl
mov
pop
aad
mov
cmpsb
push
sahf
aam
fldt
adc
or
push
lods
adc
pop
sbb
mov
pop
sahf
push
mov
push
stos
fcoms
into
cmpsl
jns
pop
and
ss
cmp
test
fbld
and
and
jmp
in
mov
or
ror
or
cs
aam
movsb
enter
cmpsl
pop
lret
aas
mov
jns
div
es
sbbl
mov
mov
aad
dec
sbb
sub
dec
mov
cld
repnz
lahf
shr
cli
cmp
call
pop
push
hlt
ja
xchg
out
ds
sub
cs
cmp
add
push
shrb
xchg
cmp
aad
cs
pop
or
ljmp
aad
mov
mov
cs
pop
pop
xchg
cs
mov
or
xlat
jae
cli
dec
sub
or
setl
fs
ret
aaa
mull
loopne
aam
loope
inc
dec
mov
ret
fdivs
aad
cmp
mov
push
sub
push
mov
enter
subb
pop
cmp
sub
int
xor
out
js
arpl
or
out
sbb
aad
scas
push
ds
lret
fadds
sarb
xlat
js
sbb
cmp
push
add
jle
das
xchg
cmpsb
and
sbb
out
xor
daa
xor
outsl
xchg
sarb
mov
ficompl
jg
xor
outsl
inc
xor
dec
lret
mov
xchg
jbe
call
mov
hlt
mov
loope
fidivs
cmp
call
ja
test
or
cmp
cmpsl
call
hlt
sub
lods
subl
push
cmp
test
notl
out
hlt
mov
mov
in
mov
push
test
insb
in
adc
add
cmpsl
imul
test
loope
not
adc
dec
rclb
shll
or
sti
add
sub
and
mov
mov
xchg
lahf
call
lcall
movsl
test
outsb
arpl
stos
jg
xor
or
lds
imul
xchg
mov
andl
loope
sbb
push
mov
lret
jno
or
les
aam
sbb
and
popa
sbb
jnp
cs
out
cmp
add
xor
leave
cmpsl
insl
push
dec
movsl
in
scas
mov
outsl
and
neg
cmpsb
rclb
aas
adc
out
push
or
pop
das
aaa
adc
stos
inc
push
mov
insb
in
div
pop
fcmovu
test
stc
xchg
testl
push
adc
mov
and
notl
loope
adc
hlt
mov
inc
stos
call
sbb
fsubs
pop
or
aaa
in
mov
cmp
mov
mov
das
repnz
out
bound
cwtl
mov
fldenv
test
jecxz
inc
sbb
and
jecxz
xchg
jns
pop
sub
je
loope
out
xchg
in
stos
fdivl
or
icebp
mov
jbe
in
std
or
jecxz
push
sub
mov
hlt
int
xchg
lds
hlt
aad
sbb
sbb
out
popa
inc
int
aaa
mov
mov
pop
sub
out
loope
adc
cmp
enter
cmc
sahf
dec
pop
adcb
es
pop
stos
push
lea
xchg
bound
sub
mul
mov
xchg
into
cmpsl
pop
ret
jo
dec
jmp
sbb
sub
jb
pop
sahf
aaa
adc
cmpsl
mov
stos
push
cmpb
lret
inc
das
cmp
cs
es
dec
lret
jecxz
nop
cld
pop
imul
push
jno
cwtl
xchg
stc
sti
inc
fsubrs
and
adc
xchg
pop
test
aaa
sbbb
sbb
mov
mov
mov
lret
std
bound
inc
incb
out
pop
jns
inc
add
pop
sbb
test
negl
std
out
xchg
data16
pusha
insb
outsb
adc
idivl
repz
dec
hlt
aam
adc
pop
and
dec
mov
push
icebp
add
xchg
and
idivl
adc
cltd
pop
cltd
repnz
test
insb
bound
call
mov
jge
aam
sub
pop
mov
mov
push
mov
addr16
test
fwait
xchg
sbb
inc
out
xor
push
ds
fldl
out
outsb
xlat
call
enter
subb
xchg
sub
lret
xchg
and
fmuls
sub
inc
aad
lds
add
imull
loopne
inc
pop
testb
mov
call
sub
test
cmp
mov
call
adc
call
cmp
fisttps
sbb
cmp
out
cs
div
pcmpgtb
cli
adc
lret
xor
push
xchg
mov
cltd
xlat
adc
cld
movsb
push
ret
or
mov
mov
mov
jecxz
push
push
cwtl
in
mov
imul
fidivrl
iret
sbb
fisttps
rcrb
inc
ficoms
and
mov
xor
mov
mov
sbb
lret
je
cli
ljmp
lret
mov
jnp
out
xchg
loopne
loope
and
sbb
mov
dec
sahf
pushl
ss
pop
or
into
sbb
xor
push
inc
dec
js
mov
in
repz
out
push
pop
xor
ds
or
sub
icebp
pop
leave
jne
divl
not
and
mov
lret
or
mov
call
ja
das
pop
cmpsl
sub
mov
pop
adc
and
adc
mov
sbb
idivb
mov
fwait
pop
fdivs
adc
lret
mov
cmc
out
add
mov
xor
sbb
cmp
fbstp
inc
pop
inc
inc
insl
cmpsb
add
sub
mov
fmuls
dec
pop
inc
jmp
xor
in
js
inc
jmp
or
rol
ret
xchg
sub
sti
inc
fnstcw
jo
ja
clc
movsl
add
pop
push
lea
aad
dec
dec
stos
je
dec
loop
pop
push
lret
and
mov
mov
ljmp
xchg
out
mov
data16
sbb
cmp
mov
sub
leave
or
loopne
jp
aam
cs
mov
lods
adc
out
jne
jmp
pop
mov
pop
add
mov
push
jmp
cmp
aad
fbstp
repnz
out
mov
mov
pop
or
cwtl
pop
out
pushf
xchg
xchg
sbbb
sbb
or
push
adc
repz
fcmovu
in
idivl
fsubs
pop
pop
arpl
sub
insb
popf
sbb
adc
inc
and
inc
lahf
aam
xor
test
and
mov
push
repz
inc
nop
fldl
lods
loop
pushf
call
mov
cmpsb
notb
lret
sti
fld1
or
and
adcb
outsb
negb
mov
xor
imulb
lods
fimull
fcmovnu
imull
aad
sbb
loopne
pop
arpl
fadd
xor
push
lds
inc
cmp
test
stos
mov
or
pop
sbb
mov
lock
int3
sub
xchg
out
mov
adc
addb
push
push
adc
mov
sti
jno
inc
out
xchg
mov
mov
dec
or
stos
xchg
mov
out
mov
add
movsb
stos
arpl
sub
pushl
call
sbb
or
in
movsb
push
add
aam
or
lods
rorl
insb
mov
fldcw
mov
mov
mov
mov
out
addr16
mov
bound
push
cli
enter
out
sub
push
out
pop
adcl
fldcw
lock
aam
or
or
mov
add
out
xor
dec
fwait
sbb
insl
mov
push
cmp
das
sbb
loopne
js
push
int3
mov
aaa
inc
fs
xchg
into
mov
arpl
inc
or
pop
lahf
icebp
fisttps
mov
dec
leave
inc
sti
out
lock
loope
hlt
jecxz
lret
mov
fmuls
mov
fistps
shll
ror
lret
daa
lods
or
in
loope
mov
sbb
add
cmpsb
test
jg
xchg
push
mov
jp
xor
bound
aad
nop
fwait
sarl
loop
dec
sti
in
jmp
into
sarl
pushf
jo
clc
and
and
push
ja
fdivrp
sub
dec
nop
out
jmp
sahf
notb
sbb
mov
addr16
adc
int
pop
adcl
sbb
ret
call
out
out
loop
sub
adc
mov
in
sbb
in
adc
mov
shl
push
fsincos
loope
jbe
push
stos
and
push
dec
inc
rcrb
jne
cs
lret
pop
rcll
test
jecxz
icebp
test
ss
cli
ljmp
test
mov
mov
push
inc
cmp
daa
in
fmuls
out
repz
icebp
repz
call
fldenv
inc
addr16
pop
negl
out
xchg
call
and
loope
or
rol
lcall
jnp
das
mov
or
xor
sub
fsubrs
daa
lret
add
ror
scas
aad
sbb
sbb
imul
test
cmpsl
lret
sbb
test
sahf
lret
add
xchg
add
repz
inc
not
xor
mov
pop
out
and
test
bound
xchg
out
repz
lcall
lret
call
outsb
xor
and
sbb
fwait
sub
mov
mov
lcall
sbb
mov
adc
sub
hlt
mov
mov
sbb
pop
out
or
stos
call
rolb
pusha
aas
mov
rcll
or
fst
pusha
lret
aaa
xchg
icebp
lock
cli
pushf
out
pop
jle
pop
lretw
out
arpl
add
mov
scas
or
pop
jp
outsb
sbb
test
fxch
sub
push
movsl
sbb
cmp
fldl
test
dec
jmp
lds
hlt
leave
dec
jbe
idiv
scas
pusha
jecxz
pop
jge
loopne
sub
aam
push
cld
xchg
sbb
mov
aad
or
std
mov
sahf
lds
aam
xchg
nop
sub
mov
jbe
out
and
pop
or
and
sub
sbb
lea
lcall
or
ret
lret
stos
adc
out
mov
push
adc
nop
or
push
cwtl
rcr
and
fwait
mov
dec
mov
mov
stc
cmpsl
out
dec
lret
jmp
gs
ss
mov
in
divl
mov
repz
mov
or
sbb
lcall
in
leave
shlb
sub
cs
xor
in
sbb
lret
sub
int3
test
ja
leave
cmp
push
es
repnz
lret
jmp
out
dec
or
movsb
and
sbb
icebp
fucom
xchg
sarb
out
ficoml
mov
pop
pushf
pushf
add
lretw
pop
or
cld
mov
dec
lret
pushf
rorl
call
repnz
jecxz
out
fisubrl
in
sub
mov
xchg
flds
adc
fs
rcr
test
mov
bound
jmp
and
pushf
ror
and
sub
mov
out
cwtl
fists
adc
sub
mov
mov
lret
aas
sbb
mov
jnp
test
adc
jg
fs
jg
cli
xchg
addr16
push
inc
dec
fnstcw
mov
or
jp
lock
ss
and
cmp
jns
inc
sti
pop
test
or
inc
scas
mov
inc
jle
ret
mov
in
mov
sbb
neg
sbb
out
or
scas
mov
sti
inc
adc
jb
dec
jge
adc
sbb
sub
out
or
lea
cmp
cmp
jg
decb
lahf
mov
inc
cwtl
adc
inc
and
pop
test
aaa
push
cmp
xlat
cmp
shrb
cmc
es
add
mov
stos
lods
dec
aaa
push
and
xor
daa
xor
mov
sbb
and
idivb
mov
loop
mov
call
repz
out
xorl
cmpsl
sbb
lret
mov
mov
or
mov
in
ss
xlat
and
iret
mov
xchg
xor
icebp
pushf
in
stc
das
inc
pop
imul
test
mov
and
arpl
dec
adc
xor
jmp
sbb
pop
or
iret
adc
push
aad
mov
adc
pop
out
cld
jecxz
inc
stos
xor
push
pmuludq
dec
stos
sub
outsl
ror
int3
jne
je
add
ret
push
insb
fidivrl
aas
sub
jp
fcompl
push
adc
repnz
repnz
push
scas
lcall
je
xor
add
mov
cmc
lock
dec
pop
push
and
or
jmp
jb
and
setnp
dec
lret
cmp
pop
js
out
jecxz
mov
repnz
cwtl
test
pop
out
cld
mov
fiadds
pop
test
fists
or
mov
icebp
div
cmpsl
scas
mov
cs
test
pop
negl
loopne
lods
mov
cmp
out
adc
fwait
out
scas
fcmovne
adc
lock
shl
or
ljmp
inc
mov
sub
in
adc
sub
xchg
fistl
adc
aam
js
push
pop
popl
imul
mulb
out
aam
pop
push
cmp
aaa
mov
les
stos
add
lock
enter
cli
ret
fstpl
mov
push
leave
mov
dec
xchg
xchg
inc
je
mov
or
loope
popf
sbb
fcoms
loope
fistps
shll
stos
movsl
fsubl
out
aad
in
fld
mov
push
xor
scas
in
in
mov
inc
mov
insb
sub
jb
mov
sarb
shll
lds
aam
xor
push
outsl
scas
bound
shlb
jmp
into
test
mov
enter
jae
stos
shrb
jae
stos
mov
sbb
sar
lcall
push
cmpsl
sub
and
ficomps
jecxz
icebp
sbb
scas
int3
fcoml
mov
iret
push
dec
rcll
mov
mov
imul
imul
sub
ljmp
xor
jns
lret
dec
add
sub
jecxz
icebp
inc
insb
dec
lds
outsb
aaa
jbe
ljmp
jnp
or
jge
adc
jne
push
adc
adc
sbb
out
jecxz
fiadds
into
into
adc
cmp
ret
std
push
dec
leave
cmp
xchg
insb
loope
mov
in
int
les
jl
pop
movsb
and
cmpsl
jl
repnz
imul
cmp
arpl
js
xor
sbb
push
inc
arpl
mov
sbb
std
xchg
sbb
sahf
adc
popl
push
lock
arpl
add
push
inc
ss
jnp
cltd
dec
fmull
in
sbb
xchg
mov
jno
push
xchg
sbb
adc
jle
loop
xchg
fs
pop
mov
dec
mov
out
xor
aad
sbb
xor
int3
sarl
adc
sbb
sub
or
push
xchg
sub
adc
in
es
fstl
roll
xchg
adc
ds
and
inc
xchg
insl
fdivrl
fcomip
imul
push
or
mov
pop
jno
ja
pop
inc
mov
scas
mov
repz
leave
and
js
adc
mov
es
xor
jmp
sar
loope
sub
push
repnz
outsl
arpl
or
cmp
aad
cli
fldt
lds
out
or
sti
insl
jecxz
outsb
sub
shrl
ret
jl
das
shlb
imul
cmp
je
jge
mov
rcll
pushf
add
jl
adc
mov
lret
aam
inc
dec
inc
cmp
cmpsb
jge
stc
fistpll
jmp
mov
mov
jb
mov
cmp
jmp
push
dec
sub
mov
insb
mov
insl
add
mov
mov
imul
sbb
mov
hlt
dec
out
stos
loop
popa
pushf
mov
stos
in
aam
in
fdivrs
stc
roll
lea
mov
jnp
roll
cltd
xchg
imul
sbb
xlat
cmpsl
fldenv
cmpsl
in
fnsave
cs
dec
mov
pushf
inc
idivl
cmc
mov
mov
into
push
mov
xchg
jp
xchg
cwtl
mov
cmpsl
rorb
mov
mov
lahf
or
sbb
rcrb
sub
mov
rcrl
inc
sub
xor
test
pop
push
shrl
xor
cmp
aad
ret
insb
mov
add
mov
rclb
xor
xchg
icebp
ss
mov
push
sbb
sbb
test
lods
pop
scas
bound
lods
xchg
mov
jbe
cmp
out
adc
test
xor
aaa
movsl
fcompl
outsl
mov
repz
push
das
sub
xlat
push
cmpsl
adc
xchg
pop
and
lea
stc
movsl
jg
xchg
cmpsb
push
loope
xor
push
mov
adc
xchg
push
mov
sub
shll
adc
mulb
stos
pusha
inc
jle
mov
lds
outsb
rorl
mov
jmp
stc
ror
fucom
out
in
out
sbb
inc
ret
and
fwait
imul
mov
ljmp
xchg
adc
dec
aam
int
sub
xchg
cmp
mov
dec
cmpsl
pop
xchg
add
jecxz
push
rcl
jecxz
jnp
pop
daa
xchg
cltd
cmpsb
sbb
sbb
clc
or
adc
loopne
int3
das
in
push
adc
xor
jmp
mov
xchg
xchg
sub
outsl
int
outsb
add
les
push
mov
aaa
pop
or
inc
jecxz
nop
mov
add
outsb
pop
int3
scas
inc
fsubrl
sbb
pop
call
adc
jmp
cmp
data16
popa
sahf
or
sarl
sub
jge
jmp
push
paddd
movsb
inc
mov
cmpsl
jne
dec
sbb
ret
pop
xchg
push
or
xor
mov
pop
pusha
xchg
add
and
mov
mulb
inc
dec
cs
xor
shll
lret
shrb
lret
sahf
adc
ss
les
cld
ficoml
jle
test
and
sbb
add
xchg
sub
add
add
loop
jnp
adc
repz
pop
lds
rolb
sbb
shl
mov
dec
out
cmpsb
mov
cmp
sarl
and
scas
pop
outsb
jns
jne
adc
push
pusha
mov
cltd
add
enter
push
xchg
popf
sbb
adc
jg
pop
adc
popa
mov
jl
test
jae
incl
xchg
mov
xlat
movsb
aam
fdivrl
aad
push
mov
mul
pushf
add
repz
fnstsw
leave
cld
sbb
adc
les
faddl
pop
xchg
fildll
pop
cmp
scas
mov
mov
xor
push
or
scas
xchg
pop
xchg
pop
dec
lahf
push
inc
test
outsl
push
cmc
imul
mov
icebp
incl
pop
add
push
lcall
test
fmull
into
jne
inc
enter
fucom
mov
lret
loope
push
dec
insb
add
roll
orl
pop
cmc
sbbb
push
repz
jnp
sbb
int3
shlb
pop
fadds
jb
lock
testl
jg
mov
negl
enter
lea
push
cmp
icebp
into
xchg
xlat
scas
movb
push
mov
xchg
in
xor
add
mov
lds
push
push
mov
adc
lret
cmp
jmp
inc
mov
ds
iret
push
fmul
cmp
jmp
sbb
rcrb
push
mov
imul
cmp
mov
ret
mov
mov
jl
loop
and
adc
shlb
dec
mov
dec
and
fsubs
pop
sahf
sbb
aam
rcr
fldcw
hlt
insl
pop
stos
sarb
les
fwait
das
dec
sti
xchg
push
xchg
cmp
je
in
rorl
outsb
ficomps
cmpsb
enter
push
enter
cmp
fadd
call
je
out
sub
hlt
insl
mov
icebp
aaa
xor
mov
sbb
test
mov
mov
dec
loop
imul
adc
cltd
add
test
rclb
push
repz
push
and
mov
sub
mov
rolb
push
fbld
rcll
xchg
repz
jbe
mov
cltd
mov
sub
mov
mov
mov
cmpsb
in
shrb
mov
xor
cmp
loope
sahf
mov
xchg
hlt
jmp
fldt
rcll
pop
cmp
shrl
dec
push
mov
xchg
add
cld
mov
cmp
aam
pop
aad
mov
mov
mov
rolb
sub
dec
push
shr
xchg
xor
ja
test
fwait
dec
sub
adc
std
cmc
add
in
xchg
push
out
cmpsb
rol
inc
jecxz
pusha
in
in
and
xchg
or
push
test
push
xlat
lock
icebp
and
cmp
add
sub
push
fisubl
shll
mov
and
shl
mov
cmc
mov
icebp
lods
dec
rcl
mov
inc
lret
pop
jp
xchg
sti
mov
rcrl
rcll
push
lahf
adc
lahf
pop
cld
ret
cmp
jnp
ljmp
mov
dec
jnp
shll
cmp
cld
sbb
sbb
ficomps
pop
sbb
jns
es
jecxz
mov
sbb
mov
sbb
in
cltd
movsb
icebp
cmp
xchg
pushf
icebp
lcall
or
inc
rcr
push
test
jbe
mov
repnz
shr
pop
sbb
sbb
or
lea
repz
mov
mov
lods
fidivs
mov
icebp
les
pop
mov
mov
addr16
arpl
sbbb
fiadds
cmpsl
mov
ret
pandn
sbb
jmp
imul
cmp
sbb
cmpsb
outsl
mov
je
fsubs
pop
dec
or
jmp
test
data16
sbb
dec
mov
add
nop
loop
cmc
mov
pop
imul
mov
xor
mov
in
in
mov
xor
stc
out
es
repnz
xor
movsl
cmc
call
je
lds
roll
pop
push
add
loopne
aad
mov
or
pop
jne
cmp
jecxz
cmpsl
loop
xchg
pop
and
cmpsl
in
xchg
sbb
xchg
test
push
cmp
mov
divl
xchg
pusha
mov
and
mov
adc
cmpsl
movsb
jae
sub
jno
movsb
out
adc
jp
mov
das
sub
aad
xchg
lcall
dec
and
sbb
sbb
call
adc
push
mov
inc
or
sbb
outsb
and
lahf
inc
and
inc
out
and
mov
mov
shl
xchg
leave
test
add
loope
mov
inc
sarl
sub
fbstp
mov
cld
jge
mov
out
inc
dec
rcll
in
xor
dec
jae,pn
pop
xor
sbb
push
or
dec
aad
xor
dec
sahf
js
mov
in
push
push
pop
fprem1
xor
lcall
mov
dec
stos
dec
mov
jg
cli
test
pop
inc
mov
pop
jecxz
add
mov
pop
sti
sbb
int3
je
call
xchg
movsb
adc
dec
fcmovnbe
fsubr
and
push
stc
dec
stos
fcompl
bnd
adc
jno
mov
add
pop
push
dec
shll
addr16
cmp
xchg
fsubs
xor
and
loop
out
mov
cmp
mov
xchg
notb
fsub
push
cmpsl
mov
das
xor
repz
std
xchg
repz
out
jnp
jge
mov
cltd
xchg
add
add
push
loope
mov
sub
out
dec
fadd
sub
push
ficompl
push
jmp
xchg
or
pop
pop
dec
xor
jb
bound
das
jae
ret
adc
cmc
fisubrs
scas
mov
inc
pop
adc
or
and
pmullw
dec
sub
ds
out
push
movsl
loopne,pn
and
jl
dec
iret
inc
xchg
ret
test
xor
mov
or
movsl
jbe
sti
mov
cmpsl
jnp
out
rcl
cmpsb
iret
loopne
stc
xchg
push
push
and
ljmp
insl
inc
jmp
enter
adc
ss
jp
xchg
xlat
idiv
in
mov
fimuls
fdivs
push
adc
pop
out
loop
fsts
int
lds
jmp
mov
lcall
outsb
pushf
sbb
push
or
push
and
adc
sub
addr16
out
or
lods
or
shll
sbbb
orb
scas
dec
jge
and
jge
outsb
and
pop
mov
pusha
sub
in
adc
add
lds
cld
scas
and
testb
xchg
pop
cmp
inc
adc
sub
cltd
adc
push
fxch
mov
sbb
call
sti
fbstp
iret
sbb
roll
adc
dec
xchg
dec
dec
add
fs
or
push
pop
ja
sub
push
lods
or
aaa
imul
xor
xor
adc
shlb
int3
mov
mov
aaa
jmp
push
test
mov
shlb
xorl
mov
in
popf
loope
sarb
mov
sbb
pop
jmp
lcall
fdivrl
inc
pushl
and
push
sbb
shll
in
and
aad
jmp
popf
push
xor
lods
outsb
pop
adc
lods
push
push
shll
pop
mov
aad
pop
jmp
adc
jb
loope
pop
pop
inc
les
mov
out
mov
and
mov
outsl
mov
out
adc
jle
sahf
test
in
lock
jmp
loop
andl
mov
ret
aad
call
push
cmpsb
mov
std
mov
loope
loop
xchg
out
fcompl
rolb
mov
aam
daa
fwait
bnd
push
lods
pop
mov
jl
sbb
xchg
out
fs
cltd
add
movsl
in
and
cmp
xchg
not
out
mov
clc
sbb
in
aad
adc
xor
xor
sbb
pop
lret
jno
jle
sti
inc
and
das
cmp
xlat
rol
dec
dec
xlat
xor
jbe
shlb
shll
fcoml
cld
lcall
movsl
sbb
cmpsb
bnd
inc
fs
cmc
repnz
pop
and
daa
sub
push
push
push
stos
sub
jnp
int
jnp
jae
xor
add
adc
inc
xor
or
dec
scas
adc
mov
imul
repz
pop
mov
les
pop
out
out
fidivl
dec
addl
test
jno
repz
xchg
sbb
pusha
sbbb
call
std
aas
mov
xor
arpl
push
in
fdivl
cmp
jns
mov
mov
es
adcb
add
jne
ljmp
into
cmc
xchg
mov
nop
xchg
popf
mov
stc
sub
add
dec
aas
add
enter
ret
add
jno
pop
adc
mov
sbb
push
jp
or
xchg
sbb
add
and
stos
jb
int
je
es
pop
xchg
clc
call
in
xchg
in
cwtl
arpl
xor
out
js
stc
cli
in
push
sbb
call
mov
popf
add
aad
jne
lret
call
out
sbb
call
mov
fsubl
stos
sbbl
fs
gs
ror
jmp
inc
mov
lret
jg
aad
push
mov
mov
rolb
aaa
movsl
sub
pavgb
fadd
pop
ret
jecxz
sub
subb
movsb
sbb
stos
mov
cs
stc
pop
adc
xchg
imul
sub
cmp
xchg
push
sarl
push
testb
test
jl
xor
jno
inc
add
adc
pop
adc
jp
test
loop
and
ss
or
arpl
mov
push
mov
scas
mov
imul
xchg
test
jge
call
xor
shll
mov
fs
mov
xchg
cmpsl
mov
mov
sbb
or
nop
jecxz
mov
mov
inc
ljmp
out
cltd
mov
ds
cmp
cmp
stc
addr16
xor
and
imul
cld
cmp
sbb
mov
mov
xlat
mov
lods
out
out
ret
adc
aam
lods
fsts
mov
xchg
rep
pop
mov
jecxz
lret
pop
add
fsts
dec
cwtl
rcrb
es
and
mov
and
xchg
push
ds
dec
into
ret
movsl
dec
lods
jl
sub
add
insl
cwtl
xor
scas
aam
jne
adc
test
addr16
popf
xchg
lcall
sbb
inc
push
xchg
dec
mov
pmaxub
test
stos
cld
pop
pop
sub
aaa
sub
iret
repz
ljmp
push
lds
repz
jne
frstor
dec
int
or
sub
mov
dec
insb
xor
sahf
or
xor
das
pop
or
pop
lret
or
enter
mov
jne
fdivr
jno
movsl
pop
jns
fcompl
mov
push
xchg
fisubrs
cmp
pop
pop
mov
mov
and
fbld
nop
cmpsl
cmp
mov
sbb
sbb
xor
push
inc
pop
lds
dec
data16
movsb
xchg
dec
sbb
add
cmpsb
add
loop
and
test
das
stos
jbe
setb
mov
or
or
push
dec
inc
pop
addr16
pop
das
jbe
fbld
fld
jns
cli
mov
sbb
pushl
cmp
jnp
pop
stos
mov
scas
rol
pop
hlt
stc
xor
inc
cmpsl
ret
rcrl
fwait
adc
pop
ljmp
mov
or
inc
stos
hlt
lcall
pop
xchg
adc
sbb
mov
in
stc
in
dec
mov
cltd
mov
fistps
adc
inc
ficompl
stos
notl
lds
and
push
inc
push
es
add
out
js
fwait
out
clc
sub
push
lods
das
loope
cmp
test
cltd
push
repnz
adc
inc
in
dec
repz
push
int
adc
mov
sbb
ret
xchg
mov
mov
xchg
push
imul
lcall
lret
mov
xor
jno
jae
and
cld
lcall
xchg
fwait
in
ds
lods
xchg
lcall
or
inc
push
adc
pop
lds
jae
aad
adc
fdivp
add
mov
inc
sub
inc
adc
and
ss
cwtl
add
or
hlt
outsb
jp
ret
ret
mov
aam
add
adc
sub
push
iret
aaa
or
int3
or
push
out
inc
imul
test
mov
adc
and
jmp
pop
and
pop
loop
cmpsb
push
inc
je
lock
cmp
lds
call
hlt
inc
mov
adc
lret
xor
stc
or
push
mov
jbe
out
lret
lret
dec
rcl
xchg
aas
ret
imul
inc
sub
into
mov
andl
jge
or
inc
add
cltd
icebp
pop
fbld
mov
cwtl
out
mov
insl
shlb
add
test
std
shll
pop
mov
enter
adc
mov
inc
jmp
jbe
xchg
push
movsl
mov
inc
and
inc
loop
enter
mov
stos
sar
and
cmp
dec
nop
fsubrl
lcall
push
pusha
lods
loopne
mov
imul
pop
popf
jmp
and
xchg
stos
rcll
into
rcrb
mov
fnstenv
js
in
mov
lahf
xchg
fucomip
pusha
push
pop
jecxz
les
mov
xchg
leave
xchg
shl
pop
popa
pop
xor
xchg
testb
pop
cmp
push
xchg
sub
iret
push
daa
aam
push
aam
out
inc
or
xchg
into
jecxz
cmp
loop
dec
lds
in
scas
adc
push
push
jae
push
rolb
fs
repnz
lock
loopne
call
ret
int
stos
xor
roll
ret
fst
xchg
int
ret
mov
fstl
jmp
inc
push
cmp
out
add
iret
pop
mov
daa
cmpsl
shlb
jecxz
pmulhw
pop
sub
inc
mov
repz
cmpsb
jno
in
bound
out
pop
inc
mov
aam
dec
push
or
dec
lahf
xchg
push
or
lret
dec
mov
fs
lret
xlat
and
add
cwtl
adc
in
lea
add
fwait
xchg
imulb
iret
sbb
daa
test
add
inc
or
push
fsubs
shll
sbb
push
mov
inc
inc
pop
enter
cmp
push
in
pop
cmc
cmpsl
xchg
jp
lods
push
push
xor
adc
and
push
sahf
mov
test
sub
stos
mov
lret
fwait
ss
jbe
lret
cltd
inc
in
xchg
fwait
cli
and
icebp
shl
out
sub
push
cmc
stos
popa
insl
daa
out
mov
mov
lret
int
rcll
cmp
cmp
pop
stc
dec
lahf
xchg
xchg
fmull
add
mov
push
mov
pop
aad
fdivp
dec
dec
pop
add
xchg
or
jo
xlat
add
and
cmp
sbb
or
inc
int3
fbld
in
pop
dec
mov
xchg
push
neg
xor
out
ss
stos
popf
cld
push
sarb
sub
rol
add
test
gs
in
push
add
inc
add
pop
adc
fimull
jae
xchg
push
aaa
jb
push
test
lods
sbb
daa
mov
stos
mov
fld
xor
fistps
cmp
data16
and
mov
lcall
mov
push
pop
out
fisttps
pop
iret
cmp
hlt
mov
cmp
and
mov
test
mov
lods
add
sbb
mul
mov
int
imul
sbb
dec
jp
cmpsl
daa
shrl
sub
dec
lods
mov
loope
add
xchg
jne
mov
mov
ficoms
icebp
ds
les
pop
inc
fcoml
imul
dec
pop
movsb
inc
scas
les
adc
dec
or
negl
sbb
test
adc
mov
cmpsb
mov
adc
loope
mov
mov
fisttps
jge
add
and
jge
pop
outsl
sub
in
mov
cmp
jns
or
lea
adc
loope
cli
in
inc
out
cmp
xchg
lods
jo
stos
cli
lods
sbb
repz
les
js
cmpsl
mov
cmp
cmp
add
jae
ds
rol
decw
decb
int
cmpsl
mov
add
lock
rep
push
adcl
xor
jns
inc
cmpsb
push
dec
cmp
or
mov
std
mov
int3
xor
xlat
xor
lods
pushf
mov
repnz
out
shll
xor
fmulp
insl
or
xchg
loope
xchg
lcall
int
lea
std
add
lock
jnp
jl
sbb
test
xchg
loop
xor
lret
sub
mov
xchg
std
push
jo
jmp
dec
in
jge
and
stc
xchg
push
cmp
ja
ljmp
es
or
fildl
push
enter
cmpb
dec
in
ror
lret
cmpsl
loopne
sahf
mov
scas
push
outsl
push
add
cld
rep
pop
jne
xchg
mov
push
push
mov
or
stos
lds
rclb
gs
int3
cwtl
adc
sbb
xchg
movaps
sub
lea
cmp
mov
push
imul
cmp
cmp
dec
xorl
mov
xchg
bound
push
add
les
fidivs
pop
stos
add
mov
push
stc
jns
out
mov
or
sbb
stos
inc
jl
js
outsl
sahf
xor
fsub
inc
mov
sbb
jle
bswap
mov
jae
push
jl
fwait
cltd
notb
jno
es
mov
sbb
xor
int3
aam
das
push
add
cmpsl
cs
mov
rcrl
add
scas
idivl
call
call
pop
stos
push
fwait
jle
mov
mov
add
and
stos
cmp
lods
mov
dec
mov
xchg
dec
out
add
in
cmp
aad
xchg
add
sbb
mov
loopne
mov
add
cld
add
sbb
mov
jmp
jl
ljmp
or
out
push
or
xor
sbb
mov
pop
fwait
out
xor
dec
xor
in
jl
les
pop
sbb
cmpsl
or
mov
jecxz
insb
mov
out
add
sbb
cwtl
sub
add
pop
push
add
mov
add
dec
and
cmp
push
clc
dec
pushl
pop
push
mov
shll
mov
jmp
repz
not
addr16
vorps
aaa
inc
aam
stos
hlt
ficoms
cmp
cmp
lds
testl
pop
dec
hlt
les
lea
roll
fsubr
icebp
mov
xchg
push
dec
mov
mov
sub
cmp
mov
dec
xor
daa
rcrb
scas
and
cmpsb
xchg
cmpsl
js
adc
add
jno
or
add
dec
xchg
lahf
mov
cmpsl
leave
rcrl
add
shrl
jl
cmp
jae
nop
mov
inc
add
mov
insl
iret
mov
pop
inc
daa
scas
imul
or
sbb
ror
fldcw
pop
inc
flds
push
push
orb
sub
insb
mov
pop
jl
mov
movsl
mov
lea
mov
repz
lahf
popf
addl
xlat
lahf
push
cmp
aam
dec
pop
push
dec
push
or
pop
xchg
je
int3
add
ja
mov
mull
mov
js
lods
aas
arpl
rclb
lret
jo
sbbb
aam
adc
cmp
js
adc
push
bnd
cmp
and
ss
lcall
leave
loope
pushf
pusha
repnz
push
shrb
dec
ret
inc
fiaddl
in
pusha
mov
dec
jbe
sahf
or
mov
orb
scas
jg
int3
jns
adc
or
or
mov
sbb
es
loope
cmpsl
adc
xchg
mov
shr
insb
in
outsl
movb
dec
xchg
push
lcall
lds
stc
mov
pop
das
pop
mov
inc
aad
outsb
and
and
mov
aad
mov
or
rcll
aas
test
jecxz
call
incl
seto
loope
mov
aam
push
mov
aas
rorl
mov
fdivp
pop
mov
mov
or
add
lret
pushf
mov
pushf
and
mov
dec
mov
popl
mov
into
rolb
test
add
loope
mov
adc
fs
cwtl
dec
sub
and
jmp
sahf
sbb
mov
lret
in
adc
nop
fmull
pop
int
test
push
shll
mov
out
pop
xchg
aas
pop
xor
and
adc
xchg
imul
xchg
loop
pushf
or
xlat
xor
xchg
scas
pop
loop
shll
mov
jbe
push
xchg
in
movsl
cmp
rorl
and
leave
test
push
in
icebp
mov
sbb
mov
mov
scas
push
adc
lods
daa
dec
ret
xor
ds
test
mov
sub
rcrl
pop
lods
ds
cmpsl
adc
dec
out
adc
mov
aam
mov
and
shll
xor
dec
sub
mov
bound
out
lds
pop
dec
mov
into
loopne
lret
out
add
add
test
adc
sbb
push
outsl
mov
mov
gs
std
js
aas
insl
dec
ja
dec
push
adc
mov
jb
mov
or
mov
aad
sub
scas
shll
push
xor
jb
push
cmpsl
pop
lcall
aas
jns
sbb
inc
xchg
stos
mov
nop
das
mov
lcall
or
mov
cmpsl
pop
push
pop
xor
ret
mov
xchg
lret
or
imul
push
inc
inc
push
sti
mov
aaa
fnstcw
jbe
xor
inc
pop
or
aam
dec
jb
sbb
adc
adc
jl
sub
push
loop
aam
test
fwait
fs
pop
or
gs
clc
or
or
addr16
test
push
fisttpll
flds
fistpll
mov
push
mov
sarl
mov
jae
lock
xchg
cltd
pusha
sub
mov
mov
les
dec
insl
mov
inc
jno
repz
sbb
leave
mov
mov
mov
sar
loop
adc
adc
loope
shlb
inc
adc
mov
adc
inc
ret
scas
lret
lea
sub
enter
std
adc
sub
sub
push
inc
pop
sarl
jbe
inc
lods
and
loop
xchg
add
dec
mov
add
cmp
movsb
add
movsb
jno
push
fimull
jo
outsl
inc
mov
lods
loop
fs
xchg
nop
xor
fcomps
imul
enter
xchg
mov
mov
aad
xchg
adc
jno
rcrl
imul
repz
test
test
insl
popa
adcb
and
mov
mov
push
fsts
fstp
cld
sbb
add
jecxz,pn
add
out
xlat
sbb
stos
sarb
jbe
repz
movsl
cli
mov
fdivp
push
fs
aam
int3
xor
mov
fsin
adc
movsb
and
imul
enter
push
sti
test
je
test
aad
mov
xchg
or
mov
mov
add
mov
pop
imul
mov
pushf
push
call
xor
outsl
repz
push
or
xchg
nop
andb
dec
test
cmp
fxch
out
sub
mull
popf
mov
decl
jecxz
jo
cmp
mov
or
push
lds
int3
mov
das
xlat
repnz
lods
cmc
mov
adc
and
adc
repnz
test
int3
aaa
loopne
in
adc
xchg
xor
xchg
lcall
push
les
jbe
fnstcw
adc
dec
loope
xchg
push
mov
inc
pop
je
pop
inc
mov
dec
sbb
lret
aam
inc
mov
fistl
jge
dec
adc
dec
jmp
jmp
sub
fnstenv
mov
and
dec
shr
mov
mov
push
inc
leave
cwtl
mov
call
les
gs
fucomp
out
cmp
inc
iret
jp
sbb
outsl
jge
je
cmp
xlat
lahf
fbld
mov
ret
in
stos
fimull
adc
ljmp
jecxz
enter
in
sarl
cld
xlat
xchg
mov
scas
or
adc
push
int3
incl
jg
sub
setb
mov
push
lds
cmpb
mov
mov
add
stos
sub
scas
xor
mov
pop
push
shll
loopne
adc
dec
ja
inc
sub
push
pop
into
aad
int
orl
cmp
push
push
or
rol
adc
jne
mov
inc
jge
jge
fstl
cmp
mov
popf
mov
clc
lock
mov
into
or
addr16
leave
lret
cmpsl
popf
popf
mov
cmpsb
into
rolb
or
imul
add
mov
lods
lret
pop
int
repz
xchg
sbbb
and
pop
loope
add
xchg
nop
mov
and
xor
pop
sub
sahf
leave
xor
mov
out
aad
sub
fstpt
popa
sub
mov
fstl
in
notb
sbb
inc
xchg
xchg
pop
push
js
push
lds
call
fsubrl
pop
cmp
jecxz
shll
aas
pop
lds
mov
jae
xchg
cmp
mov
sub
iret
aas
add
mov
popa
mov
jnp
jecxz
call
fdivp
and
xchg
push
in
push
cmp
jp
pop
das
mov
shll
dec
jno
and
lock
adc
and
xchg
push
jmp
or
adc
mov
sbb
xchg
popf
shll
pushf
shr
movsl
ror
xchg
cmp
ljmp
enter
inc
fiaddl
lea
in
mov
jns
mov
and
mov
dec
aad
pop
gs
shlb
cmp
cmc
ljmp
movsl
ds
xor
xor
dec
out
inc
out
xor
aas
pop
cmp
aas
cli
test
or
imul
adc
lret
rcll
jne
mov
mov
xchg
adc
std
mov
sahf
icebp
imul
lea
or
outsb
inc
lahf
arpl
loop
pop
je
inc
repnz
les
sbb
sti
and
test
outsl
jae
lock
clc
ret
inc
pop
ficoml
add
rolb
sbb
je
movsb
add
sti
inc
mov
hlt
sbb
xlat
shll
xchg
or
mov
adc
aas
ret
mov
ja
sub
mov
push
and
insb
out
rclb
dec
mov
sbb
test
lods
sbb
ret
imul
mov
in
mov
cmpsl
in
push
mov
cmp
decl
push
jp
cmp
sbb
in
sbb
inc
in
lahf
inc
xor
out
sub
popa
xchg
push
fmul
add
xchg
xor
or
iret
cmpsl
jb
ret
dec
xchg
adc
int3
sahf
and
lods
xor
or
push
int3
cmp
inc
xlat
aam
fisubrl
cmc
adc
mov
stc
sub
and
test
stos
lds
imul
xlat
xchg
hlt
mov
int
test
in
in
add
fucomi
loopne
and
in
out
mov
aad
adc
out
mov
mov
jg
and
dec
and
lds
or
stos
aas
jo
ja
jge,pn
outsb
test
insl
cmp
lcall
jo
lret
inc
loopne
aas
sub
mov
pop
push
mov
xor
jmp
or
jmp
pop
out
push
add
into
fcoml
push
scas
ja
in
adc
pop
jnp
xor
outsb
mov
fsubrs
addb
popa
pop
xor
inc
cmc
pop
js
fistpl
push
or
inc
sbb
jg
stc
push
lods
pop
and
sub
jmp
in
test
ljmp
ret
les
pop
and
pop
pop
xchg
sbb
mov
pop
lret
je
add
lock
fsubp
mov
inc
cmc
in
or
dec
jmp
popf
xchg
add
shrb
pop
mov
lahf
aam
ret
lds
xchg
mov
push
add
cmp
popa
les
push
dec
pushf
icebp
dec
lds
inc
add
rol
mov
test
sbb
popf
sub
roll
jnp
ds
sub
pushf
sahf
out
sbb
roll
mov
adc
xchg
mov
jno
shlb
mov
ss
lret
aaa
and
ret
cltd
shll
add
xchg
rcll
dec
sti
mov
inc
fcoms
hlt
andb
shr
lahf
xchg
or
sarb
mov
fildll
cld
push
xchg
push
xor
adc
jo
push
bound
ret
inc
mov
and
pop
lock
sub
icebp
inc
pop
lcall
lds
jg
in
mov
sbb
cld
popa
dec
sub
bswap
bound
or
cmpsb
adc
push
test
pop
fistps
lea
shufps
mull
movsb
cmp
mov
clc
mov
les
not
cmp
into
insb
rep
inc
mov
mov
jecxz
outsb
fwait
xchg
stos
ret
aas
in
into
sub
sub
ds
test
add
jecxz
sub
mov
mov
mov
popf
popa
adc
jns
out
mov
in
cmp
sub
rorl
and
or
jno
lcall
loopne
adc
mov
out
adc
jns
ror
mov
mov
pop
or
daa
add
iret
xchg
sbb
test
cltd
rolb
insl
fcoms
loopne
jg
sahf
xchg
mov
shl
or
fisttpll
addr16
mov
test
push
loope
loope
sub
and
dec
mov
mov
pop
cmpsl
inc
dec
repz
lds
cmp
cltd
int3
fcompl
xchg
cmpsl
lods
out
mov
sbb
stos
sbb
jnp
add
inc
xchg
xchg
rclb
add
aad
push
in
push
mov
sub
ds
mov
sub
xor
arpl
add
movsb
je
cmp
xor
loopne
fisttpl
cli
popf
mov
xchg
jb
cmpsl
fstl
movsl
xor
inc
adc
xchg
lret
and
mov
ret
data16
cmpsl
addb
cld
icebp
rcrl
repz
sti
jp
xor
jle
mov
mov
fcomip
mov
ds
int3
neg
mov
mov
mov
push
push
fidivrl
jns
cltd
mov
shll
sub
aad
inc
out
out
fimuls
adc
cmp
int3
mov
and
xchg
mov
clc
xchg
int
enter
sbb
arpl
xchg
mov
test
repz
mov
int
adc
push
xchg
dec
or
addr16
inc
push
jecxz
xorl
lock
lcall
outsl
je
test
lods
shlb
and
sbb
mov
mov
outsl
scas
enter
out
push
addr16
ret
je
cmp
mov
push
rorl
jmp
mov
push
cmp
int
and
dec
movsb
and
clc
out
xlat
repz
subb
lea
mov
or
lcall
xchg
test
les
pop
lods
lcall
xor
rol
scas
idivb
dec
and
test
popa
xchg
idivl
movsl
shlb
inc
enter
fisttpl
ss
lds
enter
lret
jae
cmp
mov
icebp
lahf
adc
frstor
lcall
add
mov
in
adc
xor
mov
nop
mov
mov
mov
cmpl
mov
sub
jnp
pop
ljmp
jecxz
cmp
fsubp
mov
jb
pop
lods
call
dec
xor
lret
fldcw
call
push
inc
test
rcrl
xor
and
loope
dec
mov
in
cmpsl
pop
daa
fnstsw
jae
push
push
mov
sub
lods
push
mov
fisubrs
push
add
test
out
jne
clc
add
shrl
gs
push
inc
stos
xchg
in
pop
sub
mov
rcll
or
adc
mov
into
mov
aad
dec
fsts
divb
inc
out
pop
and
inc
hlt
out
shll
xor
push
mov
lds
jno
adc
xor
adc
mov
xchg
es
jno
orl
sub
bound
stos
loope
loope
cmc
vpmovsxwd
pop
insl
lods
lds
mull
mov
out
xchg
mov
xchg
mov
sbb
into
pop
xchg
mov
dec
mov
les
xchg
cmpsl
pop
and
fdivp
mov
sbb
fdivl
ds
insl
stos
inc
mov
shl
inc
sub
mov
xchg
mov
xchg
xchg
pop
cmpsl
cld
repz
sbb
push
lea
xchg
mov
xchg
fnstcw
xor
rorl
sub
adc
mov
aas
movsb
push
inc
cmp
push
mov
jb
xor
fisubs
jecxz
or
cli
push
das
fisubrs
andl
scas
xchg
sub
cmpsl
imul
mov
cwtl
loopne
pusha
test
cmpsl
xor
movsl
push
inc
sbb
rcrl
scas
xchg
cltd
xor
pop
mov
daa
stos
push
and
push
subl
or
adc
insb
arpl
scas
inc
cltd
xor
push
pushf
and
cmp
mov
mov
mov
cmp
fs
fcmovnbe
jae
fwait
mov
adc
mov
adc
sbb
and
ret
xor
cmp
mov
push
ds
adc
dec
insb
scas
repnz
jns
les
hlt
adc
xchg
ljmp
sub
and
jae
mov
mov
or
jb
and
pop
shl
cmp
fsubs
mov
adc
clc
xor
imul
xchg
jo
imul
int3
push
cmpsl
mov
jmp
adc
pop
into
dec
clc
insb
cmpsl
xchg
inc
test
mov
fmull
rcrl
xor
sbb
pushf
jecxz
loop
clc
dec
mov
jbe
icebp
xchg
inc
push
rcll
mov
adc
xchg
cmc
clc
push
mov
gs
fstl
ja
pop
inc
and
jnp
fwait
idivl
insb
jp
lret
movsl
cmpsl
push
fadd
into
mov
xchg
push
ret
fstps
sbb
jle
xor
das
push
push
int3
and
jb
in
mov
cmpsb
pop
pop
outsb
in
fcompl
enter
fwait
push
mov
dec
cmp
lret
xchg
or
xor
sub
ror
mov
scas
adc
dec
xlat
pop
stos
or
cmp
das
pop
cltd
xchg
in
sbb
inc
ja
imul
inc
xlat
adc
lret
dec
insb
arpl
test
test
cmpsb
xor
leave
inc
pop
mov
scas
push
test
xchg
dec
stc
dec
dec
mov
pop
aad
loop
add
push
idivl
test
arpl
adc
cmp
int3
cmpsl
cwtl
lods
js
xchg
hlt
popa
orl
push
loope
mov
mov
sahf
fisubl
dec
mov
and
dec
jmp
aam
sub
and
xchg
push
or
cmp
test
les
mov
jo
hlt
aad
aam
cmpsl
sub
lods
xor
xchg
imul
popa
insb
or
test
push
mov
scas
and
sbb
ljmp
lret
cli
inc
pop
lods
xchg
push
sbb
sahf
xchg
jecxz
rorl
jno
fisubrl
ja
sbb
cs
lock
dec
loop
or
sti
icebp
add
testl
pop
sub
out
lret
rcrl
dec
xchg
jae
imul
and
and
scas
aad
data16
xchg
mov
je
inc
fldln2
neg
dec
maxps
sbb
mov
xor
mov
sbb
fwait
or
add
mov
insb
ret
xchg
dec
sub
arpl
ret
call
cltd
in
cmpsb
les
xorb
mov
or
movsl
xchg
pop
or
fwait
sbb
cmpsl
cmpsb
push
cmpsl
lock
xor
xorl
dec
and
dec
xchg
ja
push
imul
fsts
fists
mov
xlat
cltd
js
cmpsl
fadds
jo
icebp
leave
sub
out
popa
inc
jp
cmp
dec
mov
imul
jle
pop
sbb
aad
adc
xor
sub
pop
idivl
lds
ljmp
cmpsl
or
gs
imul
scas
inc
je
cmpsb
pop
xor
fdiv
shll
xchg
pop
cld
lret
icebp
stc
rcll
fimull
testb
lcall
daa
mov
sbb
mov
addr16
icebp
sub
mov
les
sbb
lahf
cmpsl
cmpsl
mov
fs
jle
inc
shll
lret
fldl
dec
packuswb
pusha
pushf
cltd
lret
shll
lahf
das
dec
inc
dec
jle
fnstsw
pop
lret
jo
cmp
jge
and
sbb
jb
mov
mov
cmp
es
cmpsl
fdivr
xchg
jbe
sub
push
rcrl
cmpsb
push
cwtl
jl
adc
cmc
cmp
jne
jg
mov
cwtl
in
pop
dec
mov
mov
dec
cld
or
insl
in
test
jmp
aam
pop
stos
jno
fldl
jl
js
cs
lcall
xorb
jecxz
lret
sub
gs
mov
std
xchg
div
arpl
push
mov
sbb
iret
push
iret
push
inc
cmc
sub
adc
xchg
fidivrs
fstps
repnz
lret
xchg
push
adc
loope
dec
xor
inc
orb
xor
in
enter
insl
pop
dec
xchg
orb
movsb
fwait
pop
in
cmpsl
aaa
mov
je
out
xchg
cwtl
or
dec
sub
fcoms
mov
icebp
mov
ljmp
push
and
dec
adc
add
push
addr16
hlt
sbb
stc
lods
pop
mov
mov
pop
sbb
test
dec
xchg
pop
cmp
aaa
xchg
mov
pusha
add
dec
adc
movsb
js
outsb
cmpsl
xor
xor
pop
enter
imul
cmc
ret
sbb
enter
iret
mov
loope
inc
push
bound
ret
es
mov
and
stc
popf
jb
loopnew
inc
mov
int
test
ficoml
cmp
cmp
fwait
js
mov
mov
insl
lds
sub
push
jo
mov
fcmovne
in
sub
addr16
jae
pop
pop
ficompl
push
lret
or
push
add
mov
xchg
fsubs
rorl
outsb
je
jno
cmpsb
cmpsb
xchg
clc
icebp
loopne
mov
push
cli
inc
lret
adc
stos
push
js
ret
pop
in
test
inc
dec
jle
sbb
xchg
popa
ret
bound
aaa
and
and
stos
adc
fwait
test
repnz
push
out
cld
and
or
mov
cmpsl
test
rorl
mov
push
pop
in
insl
lds
loope
lds
or
loop
jg
xchg
subb
popl
repnz
test
fld
movsb
adc
roll
jg
push
and
sub
addb
arpl
xchg
test
xchg
scas
lcall
cld
sub
fidivrl
mov
stc
in
adc
push
xchg
mov
cwtl
mov
movsb
scas
lds
xchg
adc
sahf
cltd
adc
stos
mov
out
and
lret
fwait
mov
enter
sbb
or
ja
inc
lds
hlt
mov
sub
scas
cli
sbb
mov
mov
mov
push
vmovd
push
and
call
mov
les
bound
xchg
add
cmp
add
jnp
stc
or
test
push
mov
popa
movsl
mov
mov
int3
lahf
shll
mov
or
int
scas
cmp
outsb
in
jnp
jl
fdivrs
out
pop
mov
lods
stos
stc
cwtl
ret
inc
bound
out
test
int
lea
fdivrs
js
add
ret
or
mov
in
cli
and
mov
or
test
xchg
test
clc
das
lds
les
test
nop
pop
or
cmp
mov
cmp
xchg
xchg
movsl
jl
cmp
sahf
xchg
imul
cmpsl
loop
aas
aam
shll
insl
lahf
imul
movsl
inc
xchg
movl
loop
or
mov
xchg
push
pusha
jns
adc
pop
pushf
lods
xchg
shrl
inc
es
andnps
ficomps
jno
pop
roll
into
xchg
cmpsl
jp
shll
mov
push
mov
ljmp
cmp
sbbb
pushf
adc
sbb
sahf
xchg
roll
fidivs
pop
stos
xor
popf
dec
cmpsl
dec
xchg
outsl
mov
mov
das
adc
ret
add
pop
inc
xchg
mov
stos
xchg
jno
imul
lea
and
addl
mov
mov
in
mov
xor
mov
jecxz
rol
sub
push
std
subl
adcl
shl
rcr
push
or
pop
cltd
fwait
ret
in
mov
push
rcrb
enter
push
jo
lods
jnp
xchg
cmpsl
cmpsb
or
mov
int3
sbb
push
js
aad
jle
cmpsl
into
push
sbb
and
cmp
pushf
add
or
rorl
mov
xchg
push
push
pop
fmulp
push
sbb
xor
xor
and
push
push
mov
xchg
shl
mov
xor
jae
test
jae
dec
inc
sbb
cmp
xchg
dec
in
adc
cld
fwait
test
cmp
xchg
cmpsl
lea
les
inc
movsl
test
lds
xchg
lods
rolb
push
jnp
adcl
push
xor
sbb
imul
mov
repz
add
xchg
pop
nop
pushf
push
stos
mov
mov
dec
sti
cmp
std
shl
cltd
lret
or
insl
sti
xchg
mov
mov
xchg
fwait
ds
test
rclb
jp
ss
gs
xchg
mov
inc
mov
dec
psubsb
xchg
les
pusha
xor
test
push
push
and
sbb
jle
adc
and
add
jae
xchg
dec
shl
sbb
aad
inc
lods
insl
mov
dec
xor
and
ret
xlat
insl
ljmp
inc
das
mov
push
dec
sti
jb
mov
sub
add
lock
les
std
push
les
rcr
xchg
add
pop
jecxz
xchg
sbb
push
fs
jbe
jg
addr16
sbb
into
sub
add
xchg
repnz
mov
subb
cmpsl
ficoml
xchg
cmpsb
lods
dec
cmp
pop
test
hlt
lods
mov
out
dec
cmp
dec
aad
js
test
mov
pusha
loopne
or
test
into
insb
pop
pusha
cmp
jle
movb
cmpsl
or
xchg
pop
pop
aam
push
or
fbld
cs
mov
sarl
add
inc
rcrl
outsb
icebp
int3
mov
popf
jnp
rcrl
pop
andb
mull
pop
or
scas
insl
scas
insb
xor
mov
daa
inc
jns
cs
pop
inc
jge
jne
shrb
jb
ljmp
push
daa
lret
sub
dec
push
push
imul
pop
lret
aaa
popf
sub
sbb
push
notb
aad
lds
into
in
shr
test
xor
fldenv
ret
fisttpl
les
jmp
mov
lods
sub
mov
xchg
xor
push
rolb
loopne
aaa
orb
jl
outsb
movsl
aad
loopne
cmpsl
data16
xchg
lea
push
daa
fdivrs
inc
mov
xchg
mov
inc
shrb
idivl
cwtl
cmp
cmp
loope
xchg
rorl
dec
add
shrd
and
mov
mov
hlt
mov
xchg
cmp
cmpsb
into
vphaddubq
pop
mov
stos
es
out
xchg
stos
dec
lds
popf
setne
or
pop
inc
rorl
sbb
pop
aas
adc
and
lea
and
jle
cmpsl
cmp
outsb
push
mov
aaa
orb
cmpsb
in
lret
cmp
jbe
repz
lret
push
mov
add
xor
add
out
lds
cs
inc
add
add
sahf
pop
dec
out
lret
or
inc
push
leave
xchg
or
stos
and
stos
cld
lods
xchg
jmp
ret
adc
cwtl
adc
loopne
loope
mov
cs
pop
shrl
cmp
lock
push
fadd
jmp
dec
xchg
jecxz
mov
dec
icebp
lods
shrl
lcall
in
jo
or
enter
popf
into
cmpsb
xor
mov
ss
push
rcrl
push
dec
add
out
jne
out
scas
sbb
dec
mov
mov
pop
fwait
dec
mov
int3
mov
negb
cltd
out
pop
pop
and
mov
mov
enter
aam
inc
arpl
divb
fnstenv
xlat
jns
sbb
sti
cltd
adc
push
mov
repz
or
add
mov
inc
add
sbb
pop
pop
lcall
dec
sub
or
inc
push
aam
int
mov
enter
out
sub
int3
pop
div
cmpsb
cli
cmp
cs
mov
jb
inc
jecxz
and
stos
ja
scas
cmp
mov
jle
adc
pop
fdivrl
dec
test
and
inc
repnz
cmpsl
sbb
icebp
jns
test
mov
sub
rdmsr
xlat
inc
test
push
mov
cmpsl
cmp
test
sti
frstor
aaa
xchg
call
dec
pop
mov
adc
data16
sbb
lcall
mov
les
imul
leave
aad
or
pop
stc
adc
mov
repz
shrb
push
mov
fistpl
loope
paddd
cmpsl
mov
push
inc
ja
sbb
daa
dec
shl
test
nop
cmpsl
xor
gs
hlt
pop
out
shll
aas
fcomps
adc
xchg
add
insb
ja
addl
and
pop
xchg
xor
jns
out
jae
arpl
aas
into
push
je
rcrl
dec
dec
les
fldt
cmp
or
dec
mov
aas
scas
movsl
daa
test
mov
xchg
loope
jnp
mov
mov
xchg
mov
cmp
mov
fisubs
xchg
test
int
push
cmpsl
jp
dec
xchg
sub
jg
fsts
dec
push
mov
outsb
lds
or
loope
popa
jge
push
push
cmpsl
test
sbb
push
adc
ret
adc
lret
stc
push
popf
add
inc
ret
push
or
fstps
out
sub
bound
mov
inc
lds
in
out
mov
cmpsl
aam
into
push
popa
inc
xor
icebp
xor
xchg
and
std
pop
pop
daa
das
mov
lds
bound
enter
mov
popa
xor
jb
inc
fwait
dec
and
xchg
filds
inc
xchg
jbe
in
mov
lods
outsb
ror
fwait
enter
outsl
aam
dec
mov
outsl
sub
push
add
cwtl
inc
and
mov
mov
bound
lds
dec
sbb
pusha
data16
sub
inc
add
arpl
sarb
push
repnz
roll
push
aaa
cmp
xchg
add
popa
in
testl
mov
mov
jmp
mov
mov
bound
test
adc
push
xchg
push
incl
dec
in
call
cmc
cmc
icebp
and
cmpsl
aas
inc
push
adc
xor
jae
leave
cmp
mov
rcrl
inc
std
in
push
sbb
xlat
cmp
xchg
addr16
popa
insb
iret
jbe
dec
cmpsl
ficompl
scas
and
das
mov
sbb
arpl
pop
inc
lods
mov
divb
xlat
cmp
test
andl
and
cmpsl
iret
mov
cld
icebp
lret
mov
data16
shll
inc
cmpsl
arpl
jne
or
push
add
mov
lret
sarl
mov
icebp
dec
mov
jge
rcr
leave
mov
pop
mov
call
sbb
sbb
xchg
int3
fcoml
ljmp
iret
fmuls
dec
cmpsl
push
jb
adc
sarb
call
mov
mov
iret
push
jmp
dec
push
and
xor
mov
or
pusha
push
cmp
push
dec
xchg
les
push
xor
xchg
inc
test
push
mov
out
pusha
pusha
outsl
xor
adc
jg
lds
xor
xorb
xchg
loop
dec
mov
adc
addr16
in
lret
mov
fs
je
inc
lcall
mov
test
mov
or
mov
or
pusha
xchg
adc
lcall
loop
and
aaa
mov
sbb
dec
adc
rcrl
cmp
mov
loopne
pop
cltd
arpl
inc
rcrl
mov
dec
or
rol
outsl
ja
gs
cmpsl
xor
sub
ror
lcall
iret
and
and
out
rol
dec
or
loopne
ret
scas
int
repnz
shrl
rcrl
shlb
push
jle
jg
cmpsl
xor
mov
or
adc
iret
mov
test
inc
sbb
mov
mov
sahf
repnz
adc
test
mov
jo
insb
stos
das
adc
xchg
jp
cmpsl
enter
inc
cmpsb
xchg
push
lcall
xchg
shll
xlat
sub
in
shll
fisubs
xchg
mov
lret
cwtl
or
sarl
sbb
setae
mov
push
lock
scas
xchg
repz
xlat
add
rorl
xchg
arpl
xor
movsl
jl
cmpsb
adc
xchg
lcall
out
or
ss
int3
pop
stos
cmp
ss
outsl
pop
int
jns
div
push
add
cmp
nop
sub
inc
test
adc
movsb
xchg
enter
xchg
jp
sub
push
sub
int3
cld
mov
notl
mov
shrl
out
sahf
and
test
repz
cmc
popa
mov
repnz
je
shlb
aaa
pop
and
out
mov
scas
xchg
repz
cmpsb
sub
or
cmpsb
scas
popf
cmc
ja
cmpsb
dec
mov
pop
stc
xor
jns
mov
insb
cltd
mov
lock
xchg
inc
and
inc
xchg
popa
pop
ror
addr16
jb
out
aad
xchg
and
jae
push
and
jge
dec
pushf
shrl
jae
dec
in
sbb
xchg
outsb
pop
stos
in
in
adc
test
jno
mov
or
cmpsb
popa
mov
and
shrl
hlt
and
sarb
lret
push
aad
jbe
or
sbb
or
das
mov
jl
jg
dec
out
mov
adcl
popf
mov
or
mov
xor
shlb
inc
pop
adc
jge
xchg
adc
fwait
cmp
push
jae
push
fwait
dec
icebp
sub
test
push
pinsrw
xchg
rorl
inc
lds
push
pop
pop
add
cmpsl
xchg
mov
int3
icebp
scas
rcrl
xor
shll
xchg
or
mov
roll
sub
pop
push
aam
or
test
push
mov
cmc
mov
mov
inc
in
out
push
imul
pop
stos
inc
pop
sti
stc
jmp
mov
xor
cmp
sbb
out
xchg
lods
mov
or
cwtl
mov
movsl
repnz
push
adc
mov
in
sub
cmpsb
fdivs
repz
loop
psrlq
icebp
shr
xchg
out
xchg
pusha
sbb
repnz
jbe
ljmp
and
sbb
movsb
mov
mov
nop
push
or
lds
jmp
mov
adc
lcall
or
les
jg
in
dec
rcll
push
xchg
jne
and
mov
cmpb
arpl
sbb
movsl
xchg
nop
in
or
jle
cmc
roll
lods
pop
jb
or
popf
nop
pop
jp
movsb
lock
icebp
cmp
mov
push
ret
push
not
mov
fmull
cwtl
insb
fisttpll
int
imul
xchg
call
mov
xor
cmp
lcall
cmpsl
and
bound
in
sub
into
lds
mov
cltd
dec
test
popf
or
imul
sbb
push
lahf
xor
mov
popf
js
pop
enter
jl
test
mov
call
aam
add
jecxz
les
sub
in
jmp
mov
loope
cmpl
sbb
cmpsl
or
ja
mov
out
mov
repz
pop
pop
lods
ja
push
lds
addr16
test
cmc
inc
addr16
push
inc
pop
das
daa
inc
iret
adc
adc
test
pushf
push
inc
lods
sub
pop
jmp
out
xchg
lds
popf
inc
pop
in
cltd
les
dec
inc
sbb
jge
test
outsl
sahf
sbb
dec
mov
or
mov
clc
mov
test
pop
rorb
mov
les
mov
scas
cmpsl
jge
xchg
pop
test
lods
xchg
inc
lds
jecxz
frstor
push
mov
scas
sub
jle
movsl
test
xchg
mov
push
mov
push
arpl
sbb
cmc
push
aaa
lds
divb
sbb
cwtl
iret
or
pop
lea
int3
and
shrb
pop
arpl
in
pushf
les
cmc
mov
xchg
pop
adc
dec
cmp
cmpsl
adc
xchg
add
sbb
movsl
or
addl
mov
std
pushf
add
or
sub
decl
mov
aad
lods
pop
loope
ss
push
rolb
jg
sub
outsb
mov
insl
sarb
daa
sub
or
arpl
adc
mov
xchg
mov
jmp
pop
jp
fsubrp
stos
fwait
mov
lret
pop
mov
fcomps
shll
rorl
test
pop
cli
das
sub
xchg
inc
cmpsl
ljmp
mov
inc
shll
insb
mov
mov
arpl
popf
mov
xchg
or
int
lds
jle
stos
cmpsl
sbb
lods
out
shll
mov
insb
xchg
cli
xor
jno
jp
dec
lds
or
mov
push
jb
rolb
sbb
ret
jge
movsb
or
and
xchg
adc
xor
and
mov
push
scas
movsb
mov
adc
out
test
xor
nop
cmpsl
xchg
fwait
xchg
mov
sbb
jecxz
in
aaa
leave
inc
cld
xchg
fstl
aam
repnz
les
dec
lret
cltd
rcr
jae
loope
movsl
dec
cwtl
dec
jne
sti
imul
xchg
jmp
dec
into
aam
mov
mov
cli
js
jae
push
inc
cmpsb
stos
outsb
xchg
mov
loope
roll
mov
jo
cwtl
push
mov
stos
aad
movb
andl
push
sti
mov
orb
inc
ds
adc
inc
mov
xor
lea
rcr
push
scas
or
pop
outsb
mov
push
pop
lahf
pusha
js
xchg
xchg
add
xchg
jl
cmpsl
rorb
add
adc
jmp
adc
fwait
pop
mov
xchg
negl
leave
cmpsb
aam
inc
push
or
lods
pushf
shrl
mov
sahf
daa
mov
dec
jo
das
pop
push
std
push
mov
push
adc
pop
dec
out
sub
frstor
lret
iret
ret
inc
aad
popa
rclb
lret
pop
mov
lds
add
mov
mov
jp
pop
cmp
xchg
cli
pop
sbb
ss
dec
push
out
cmpsl
mov
cmpsb
push
call
add
mov
ljmp
jns
xchg
or
jp
pop
or
mov
stos
mov
mov
and
inc
cmpsl
out
sarb
jge
out
shll
dec
fistpl
call
fs
dec
xchg
aas
lods
sbb
xor
outsb
push
push
lahf
in
sarl
outsl
ret
out
jbe
addb
mov
loopne
inc
inc
mov
mov
jmp
sbb
jmp
repz
nop
xchg
xchg
xchg
mov
movsl
ud2
nop
cmpsl
aas
sbb
jne
cs
sub
push
xchg
lea
outsl
pushf
iret
je
cmpsl
jbe
scas
push
jecxz
or
shlb
mov
test
push
hlt
inc
adc
lret
add
add
inc
adc
pop
mov
cli
shll
mov
outsb
cltd
sub
push
and
insl
pop
push
adc
out
int
sahf
sub
lahf
rclb
jae
std
es
repz
or
inc
inc
jo
add
push
inc
or
test
cmc
in
push
add
mov
mov
pusha
stc
adc
inc
xchg
ret
pop
lds
cmp
adc
cltd
push
cmp
pusha
aam
inc
jae
inc
xlat
xchg
in
jle,pt
inc
lods
incb
lds
mov
mov
pushf
xchg
addr16
rorb
imul
mov
jno
mov
sbbl
push
leave
pop
mov
push
sub
xchg
adc
push
mov
test
loopne
aam
inc
xchg
push
pop
movb
scas
mov
jae
js
mov
int
test
les
lcall
jp
or
stc
mov
and
dec
out
fcompl
sarl
lret
mov
in
xor
sti
scas
dec
clc
mov
les
loope
mov
outsl
popa
repnz
cs
les
cltd
and
xchg
ficoml
jp
shrb
pop
rcr
push
jmp
pop
xchg
mov
cltd
xor
mov
push
lret
cmp
cltd
inc
mov
push
cmpsl
enter
call
daa
mov
add
mov
pop
std
jg
aam
dec
jo
or
test
jmp
xchg
mov
lock
mov
repnz
int3
cli
adc
inc
cmp
jl
cmpsb
repz
pop
in
into
dec
es
int
xchg
xchg
mov
fsubs
cmc
ljmp
fidivl
adc
ss
cmpsl
aaa
pop
lods
sub
mov
inc
shll
ret
cltd
aaa
dec
addr16
xchg
xchg
inc
in
xor
adc
iret
adc
mov
mov
mov
mov
jl
aam
mov
mov
jnp
add
les
fiadds
js
xor
xlat
loopne
jno
sbb
or
icebp
jle
clc
into
or
in
jge
insb
adc
mov
cmp
mov
adc
fsubrl
jge
ficoms
cld
add
in
adc
xchg
jo
mov
xchg
push
shll
lds
pop
mov
and
stc
aad
aas
sbb
and
dec
jecxz
stos
test
repnz
mov
daa
push
jnp
pop
add
bound
xchg
mov
cmc
test
mov
jge
xchg
test
pop
into
pop
and
pop
inc
adc
cmpsl
imul
push
pop
in
xor
xlat
popf
icebp
insb
jo
test
popf
sbb
lds
or
data16
lret
and
out
fcom
xor
and
and
push
mov
int
adc
and
xlat
and
jmp
inc
pop
sbb
sbb
sahf
dec
rcrl
lods
mov
xchg
xchg
out
mov
mov
les
aad
dec
pop
or
cmpsl
adc
mov
icebp
movsb
mov
enter
jae
cmp
hlt
outsl
inc
pop
sub
jbe
test
sub
inc
inc
mov
mov
mov
dec
rcr
ficompl
dec
sti
add
shl
gs
adc
ljmp
pushf
xchg
adc
mov
dec
jno
les
in
jmp
mov
outsb
or
mov
pop
je
xlat
mov
addr16
add
pusha
icebp
push
int
rcrl
out
dec
sub
cmpsl
rcrl
or
and
arpl
push
cmp
sub
jne
push
mov
hlt
mov
sbb
or
or
ss
lahf
adc
cmp
cmpsb
jecxz
or
out
rclb
mul
es
add
mov
xchg
jle
fdivr
in
rolb
dec
cmpsl
mov
inc
and
scas
mov
clc
jge
ret
inc
push
pop
repnz
push
pop
dec
rcrl
pop
adc
xchg
je
mov
ret
mov
lds
mov
jmp
iret
shl
in
push
fwait
dec
lds
add
push
mov
cmpsl
fiaddl
out
lods
int3
lret
inc
out
inc
pop
xchg
std
xchg
insl
adc
es
jae
ret
lea
xchg
xchg
inc
mov
sbb
repnz
jmp
loopne
jae
xlat
xlat
add
out
jbe
inc
cmpb
dec
lds
dec
sub
mov
pop
int
push
adc
adc
aam
or
mov
xchg
in
call
xchg
mov
clc
mov
push
mov
and
sbb
xchg
mov
push
outsb
xchg
mov
les
int3
cmp
xor
leave
sbb
xchg
mov
icebp
add
rolb
inc
sub
sub
cmpsb
push
mov
popf
and
jp
push
loop
cmpsl
jo
xchg
popf
jmp
sbb
cwtl
pop
mov
cmp
addl
dec
xchg
mov
mov
adc
fisubs
or
repz
lods
inc
dec
push
mov
push
mov
push
iret
sbb
out
gs
lcall
les
adc
dec
rcrb
mov
cmpsb
inc
inc
aad
shlb
push
mov
lods
dec
mov
pop
cmp
mov
sbb
rol
cmp
mov
repz
xchg
push
push
xchg
mov
into
mov
push
cmp
adc
lods
sahf
push
fsts
and
popa
out
adc
call
jp
lahf
ja
out
mov
mov
inc
and
vcvtsd2si
les
mov
test
fisubs
dec
insl
mov
sub
sbb
push
shll
mov
mov
test
push
dec
pop
lcall
imul
inc
xchg
mov
sete
mov
shrb
xor
cmp
lcall
sbb
pop
xor
fsubrl
mov
inc
mov
fdivp
fcmovbe
mov
mov
rcr
jmp
pop
lahf
xchg
imul
cmpsl
les
push
ja
inc
aaa
les
insl
mull
xlat
imul
mov
xor
inc
xor
and
loope
or
push
mov
mov
add
mov
jl
push
jmp
mov
test
push
dec
movsl
xor
sbb
imul
xchg
sub
cltd
cmp
hlt
jne
mov
push
out
cwtl
rcrl
pop
scas
push
mov
int3
pop
popf
enter
xchg
enter
xor
ja
push
fiadds
push
add
dec
loope
pop
leave
dec
mov
jmp
xchg
dec
stos
int3
cs
adc
scas
daa
inc
aam
mov
cmp
cmp
cmp
or
ja
rolb
or
cmpsb
add
mov
or
or
sbb
cmp
fdivrl
jl
jmp
xor
sub
push
int
jbe
cmpsb
cltd
cmc
arpl
pop
fwait
push
rcll
dec
and
rclb
xor
popf
stos
or
mov
into
mov
cmpsl
js
push
push
sub
test
aam
scas
fnstsw
jecxz
jecxz
cmp
or
pop
lds
lcall
cmpsb
test
dec
adc
int
leave
push
adc
int
xor
jg
lods
sahf
dec
sub
sbb
mov
adc
rorb
push
pop
mov
test
add
cmpsl
fwait
pop
or
jnp
jecxz
push
outsb
cmpsl
jge
cwtl
negl
push
roll
cmpsb
jae
es
xchg
pop
xchg
cmp
fwait
push
arpl
mov
cmp
cmpsb
mov
push
lret
push
movsl
push
enter
inc
add
cmpsb
cmp
jecxz
fwait
repnz
sarl
inc
lea
adc
shl
sub
mov
adc
push
sbbb
xor
int3
cmpsb
popf
ja
pop
sub
aas
push
pop
ret
mov
jp
xchg
jne
out
ret
xlat
and
int3
int
add
inc
xor
pop
clc
repz
jmp
or
push
arpl
push
ret
jp
and
scas
clc
add
adc
shrl
mov
dec
dec
repnz
test
rorl
cmp
add
fsubrs
jns
les
push
in
xor
leave
mov
pop
sahf
test
push
jnp
rorl
xchg
arpl
or
inc
dec
and
xchg
andb
mov
neg
inc
mov
dec
mov
out
orl
adc
xor
xchg
inc
push
test
and
xchg
loop
sarl
call
dec
cmpsl
pop
pushf
mov
lret
xchg
orl
cmpsl
popa
jno
into
shl
jle
rcr
or
cmp
sub
into
push
lahf
cmpsb
xchg
orb
fisttpl
xchg
pop
pop
bound
dec
mov
push
xchg
inc
xchg
cwtl
dec
push
cmp
dec
jle
test
lds
leave
dec
inc
or
test
adc
adc
shl
pop
push
into
cmp
and
jb
fwait
pop
rcrl
ret
cmpsb
mov
movsb
and
ljmp
jp
scas
fwait
movsl
sbb
shll
push
scas
mov
sarl
lods
lea
mov
gs
xchg
push
xor
sub
scas
call
repnz
cmp
aas
fisubrl
test
jne
lahf
inc
inc
xchg
ret
pop
insl
mov
sub
les
lods
xchg
dec
xchg
push
mov
gs
pop
jle
roll
add
cmpsb
or
jge
mov
xchg
add
and
popa
outsl
xor
xchg
aad
and
jmp
dec
lock
lcall
cmpsl
lods
add
nop
sti
add
test
push
push
int
sbb
cvtdq2ps
out
cmp
push
mov
test
and
jne
clc
dec
xor
dec
in
push
lds
mov
scas
stos
inc
notb
mov
fidivrl
jae
test
or
call
mov
and
xchg
std
imul
nop
adc
sub
sbb
and
or
pop
xchg
popl
pop
cmp
lahf
ds
shll
sbbb
in
cld
into
mov
sahf
loopne
sarl
rcrb
les
inc
ja
loop
arpl
out
lock
sub
enter
jbe
jb
in
jo
xchg
fisubrs
adc
pop
or
adc
sbb
mov
sub
in
popf
test
fbstp
sub
dec
xchg
mov
int
inc
push
jle
xchg
mov
out
xor
adc
xor
roll
fidivl
push
inc
jle
cmp
shlb
sub
addr16
jnp
or
sub
stos
sbb
das
or
mov
ljmp
test
pop
mov
pop
nop
dec
xchg
pop
lds
pop
or
cmpsl
push
popa
shll
jnp
rol
jnp
stos
pop
cwtl
mov
xchg
inc
into
pop
pop
rcll
inc
cmp
and
mov
lcall
jl
or
mov
popa
xchg
hlt
jo
push
dec
insl
enter
pop
jae
scas
ss
iret
mov
push
loope
mov
imul
xchg
and
xchg
les
jecxz
cmp
dec
inc
in
pop
jge
inc
shll
shlb
cmpsb
insb
mov
sub
rcrb
push
cmpsb
cld
cmp
mov
dec
loopne
fimull
pop
shl
jmp
mov
cmc
mov
fildl
pop
pop
fs
rcl
xchg
insl
imul
imul
lock
in
rcll
imul
or
sub
and
add
sbb
and
mov
fs
push
daa
inc
popa
push
fisubrs
xchg
cmc
in
je
subb
push
test
inc
push
mov
pop
xlat
ret
or
iret
dec
icebp
adc
cmc
lcall
xor
mov
andl
pop
jecxz
xchg
cmp
mov
stc
inc
rcll
dec
mov
cmpsl
jno
jp
fwait
push
sbb
lret
xor
xchg
pop
insl
sbb
xchg
mov
rcll
pop
xchg
jae
cmp
lods
adc
mov
out
in
sbb
scas
sub
xchg
adc
inc
shl
jmp
call
ljmp
pop
or
rcrl
add
dec
popa
hlt
inc
mov
rorb
add
xchg
out
add
std
les
sti
std
or
mov
stc
clc
sarl
jno
cmp
adc
pop
adc
inc
adc
stos
dec
negb
mov
lret
pop
and
sub
sub
adc
mov
push
mov
in
xchg
xchg
pop
push
loop
in
adc
shl
push
out
inc
sar
cmpsl
dec
mov
pop
clc
jecxz
add
in
out
stos
pop
aad
dec
mov
les
mov
cmpsl
call
inc
pop
pop
shr
dec
dec
das
ss
xor
dec
popf
cmp
pop
mov
rol
jne
stos
int3
sti
stos
or
jl
add
mov
xchg
call
fnstsw
int3
add
xchg
jno
jno
mov
sbb
ds
add
mov
and
cmpsl
lock
xchg
cmpsl
mov
push
mov
xchg
cli
push
pop
pop
xchg
sbb
jle
flds
push
cmp
lret
and
nop
mov
in
addr16
jno
cmp
sbb
dec
scas
les
fiadds
cmp
cmp
mov
jge
xchg
fadd
mov
sub
in
pop
cmpsl
mov
sbb
lcall
loop
push
loope
int3
aam
shll
dec
sub
fistpl
rorl
aam
int
movsb
jnp
les
test
ret
and
into
sbb
sub
std
jo
xor
lcall
push
push
and
bound
push
divb
outsb
cmpsl
movsb
daa
and
mov
repnz
add
sarb
and
loop
insl
or
xchg
mov
cmc
or
pop
xchg
pop
inc
insb
ret
xor
aas
xor
mov
jns
sbb
sbb
mov
jmp
and
les
jecxz
and
xchg
mov
out
inc
inc
pop
pop
nop
xor
add
std
push
lock
mov
aam
push
cmpsb
lods
cmp
les
popl
imul
cs
sti
aad
inc
aaa
sbb
dec
xor
jecxz
cmc
lods
push
xchg
scas
sub
popa
fdiv
js
mov
das
pop
mov
in
movsl
xchg
sub
pop
fbld
int3
jle
mov
push
popa
mov
cmp
xchg
das
pop
loope
xor
mov
dec
sti
popf
sbbb
std
jo
jno
or
xchg
push
push
lcall
sbbl
mov
pop
xchg
test
jb
pusha
dec
and
cli
popf
int
and
mov
in
mov
push
jg
and
repnz
insb
inc
pop
mov
mov
lods
sti
inc
arpl
mov
les
das
loope
arpl
jecxz
jb
xor
push
in
shll
iret
sub
ret
adc
xchg
jne
or
jmp
aad
inc
fdivs
xor
jl
mov
dec
inc
mov
cltd
popa
stos
jecxz
sbb
xchg
jl
aaa
les
mov
and
pop
movsl
test
or
inc
ret
sbb
sub
daa
add
imul
sub
aaa
ja
ret
inc
mov
gs
xchg
jecxz
xlat
dec
jmp
and
int3
fwait
aad
pop
pop
clc
cmpsb
in
mov
xchg
movsl
into
fucomip
add
je
or
lods
cmp
pop
push
rorl
mov
das
lods
or
cmpsl
daa
cmp
bound
and
lahf
and
popf
lahf
sub
sbb
mov
xchg
jo
push
mov
cli
push
call
jne
ret
xor
les
pop
cmp
adc
inc
shl
jmp
or
setno
movsb
mov
out
aad
pop
dec
fistps
pop
stc
in
in
sbb
and
dec
stc
fcoml
pop
mov
push
fisubs
cmpsl
xchg
add
xchg
rcr
stos
cmp
repnz
cltd
int
sti
bound
push
je
movsl
in
jmp
mov
test
mov
out
sbb
dec
shr
ss
dec
shl
xchg
div
decl
sbb
add
les
pop
mov
cmp
cmpsb
cmp
shl
sub
pop
int3
iret
call
dec
dec
mov
sbb
lea
rcrb
int3
mov
orl
push
push
xchg
sub
stc
or
lds
test
scas
dec
adc
lock
xchg
mov
jecxz
xor
shl
mov
movsl
dec
sub
cmpsl
inc
mov
dec
addr16
mov
shll
cs
push
and
xchg
stos
sbb
les
cld
sub
cmpsb
sti
xor
fwait
sbb
lock
dec
scas
xlat
test
jb
insb
incb
ret
lds
popf
fdivrs
scas
lahf
or
lcall
xor
movsb
sarl
push
push
das
sub
xchg
mov
adc
imul
cmp
out
cmpsl
out
aad
aas
pop
mov
or
fdivrl
cmp
shlb
in
mov
stos
sbbb
sti
aam
pop
fisubs
pop
and
push
fldl
xor
loope
into
stos
push
jno
shll
popf
add
inc
dec
cmpsl
pop
lock
data16
roll
dec
scas
xchg
jmp
mov
xchg
add
fs
outsl
xor
data16
sbb
and
xor
cmp
push
icebp
icebp
cwtl
cmpsl
inc
out
sbb
mov
imul
data16
xchg
mov
insl
movsb
les
dec
jne
jp
jae
push
lret
add
xchg
dec
lret
repz
lods
add
roll
sub
cli
or
dec
add
lds
pop
pop
ret
inc
add
aaa
xchg
push
and
ds
sti
lds
stos
test
dec
jo
lcall
lcall
mov
test
ror
movsl
jg
push
repnz
setb
mov
test
lds
add
mov
jge
push
fiadds
sete
sarb
cmc
into
insb
stos
jbe
mov
dec
mov
shll
and
pop
xchg
mov
fbld
fucom
xchg
push
sahf
pushf
out
pop
mov
aam
jno
or
loopne
mov
mov
fsts
stos
mov
add
mov
in
les
push
dec
in
imul
mov
lock
nop
adc
sbb
lods
jg
scas
outsl
jo
clc
cld
xlat
push
sahf
data16
iret
roll
dec
jno
das
fiaddl
and
cmc
pop
pusha
cmpsl
arpl
push
pop
jbe
mov
shll
push
lret
mov
xor
sbb
pop
daa
push
dec
out
add
mov
xor
adc
test
inc
pop
push
loop
adc
subl
and
imul
into
xchg
mov
cmpsl
mov
pop
mov
in
scas
pop
jno
imul
sub
dec
in
dec
or
fmull
cmpsl
add
inc
jecxz
inc
mov
popf
mov
andl
js
cwtl
sbb
push
call
pop
jl
cmpsl
bound
repnz
sbb
and
push
xor
iret
in
or
data16
xchg
pop
js
xchg
add
rcrl
mov
push
xchg
ret
mov
mov
cmpsl
xchg
mov
fs
inc
mov
int3
push
xchg
push
ficoms
pop
lds
les
adc
mov
cmp
mov
shll
shl
test
repz
mov
mov
clc
shll
lods
inc
out
xchg
pop
sub
es
leave
popf
mov
xchg
dec
lds
rcr
inc
adc
mov
mov
je
sti
scas
xor
aas
adc
xor
loopne
and
xchg
jle
mov
sti
rclb
dec
mov
inc
loop
mov
popf
xor
fwait
scas
int3
hlt
cmp
mov
sub
shll
stos
js
jle
sti
int
arpl
insl
jb
xchg
les
enter
push
jnp
cmpsl
sarl
aam
aad
inc
add
push
in
xchg
sub
inc
push
mov
jge
icebp
dec
inc
lock
loopne
mov
push
rorb
ret
xor
stos
mov
cmpsl
lret
add
in
sar
adc
xchg
in
adc
push
jbe
shl
stos
shlb
mov
cwtl
push
les
jnp
push
loope
ret
mov
mov
loopne
lock
decb
int3
cmp
shlb
int
xchg
jp
test
enter
rcr
cwtl
sbb
adc
xchg
lds
int
daa
mov
ret
push
stc
fwait
outsb
cmpsl
cs
add
dec
push
insb
or
cmpsl
out
sbbl
cmc
aam
stos
loop
or
and
loop
mov
push
int3
mov
inc
movsb
and
add
push
cltd
pop
stc
sbb
mov
push
mov
rclb
xchg
lods
pop
inc
lea
das
sar
insl
mov
mov
shlb
pop
or
imul
or
rorb
cmp
add
std
aas
dec
or
or
dec
push
xor
jae
int3
ret
test
outsb
adc
or
sahf
push
sub
js
push
cmc
mov
bound
sub
or
mov
inc
sbb
xor
and
daa
pop
xchg
nop
jp
mov
or
mov
dec
dec
cmp
fisttpll
pop
rorb
lock
push
rcl
mov
or
xchg
hlt
mov
pop
sub
ljmp
xor
lds
rcll
sbb
cltd
daa
mov
xchg
and
and
pusha
in
out
xor
pop
dec
xchg
add
fcomp
xchg
xchg
ror
scas
hlt
in
test
push
mov
lea
ds
fs
add
loop
fsubrl
rol
leave
xor
push
xchg
lods
push
stc
xchg
mov
movups
mov
ss
mov
add
xchg
imul
push
pop
std
in
rcll
cmp
jnp
sub
popa
and
push
shl
jno
sarb
mov
or
adc
sahf
in
cmpsb
inc
ret
sub
cmp
xchg
aas
dec
test
pushf
adc
mov
push
sub
push
icebp
iret
enter
mov
out
ss
ja
ficompl
imul
xbegin
ret
and
out
lret
mov
or
cld
pop
lods
fsts
repnz
xchg
pop
adc
jo
stc
loope
mov
xor
mov
mov
cld
js
and
push
push
cmp
es
xlat
mov
je
in
dec
jno
es
loope
bound
add
lods
stos
add
test
test
mov
sbb
lahf
add
ret
or
movsb
lds
adc
push
dec
mov
push
jne
clc
mov
popa
cmc
jbe
jno
rorl
aaa
mov
xchg
loopne
pop
pop
add
out
pop
adc
xchg
adc
or
cmp
shll
xor
movsl
dec
mov
lds
scas
dec
in
mov
jne
sbb
push
dec
orl
dec
in
adc
inc
push
mov
jmp
popa
lock
test
aam
xchg
dec
and
mov
fwait
xchg
xor
lret
insl
cmp
dec
xlat
fadd
adc
mov
pop
push
inc
lods
push
xchg
shl
inc
pusha
inc
cli
pop
xlat
ljmp
call
pop
fsubrl
jle
mov
dec
fisttps
mov
adc
scas
std
es
xchg
aam
cmp
jmp
mov
push
or
cmpsl
jl
fisubs
and
dec
iret
cmp
lret
stos
and
cmp
add
pop
out
ja
test
das
in
cmc
cmp
inc
test
lahf
or
lock
lods
sbb
push
test
push
sub
mov
and
add
cmp
pop
lahf
xor
sbb
call
adc
xchg
cltd
pop
mov
mov
orb
es
mov
stc
mov
add
dec
out
jae
lds
or
adc
xchg
stos
ret
out
jg
xor
sub
je
lds
jns
cmpl
cld
adc
scas
and
adc
lods
icebp
or
int3
xor
stc
xchg
mov
jb
je
lock
js
add
stos
mov
insb
pop
mov
sahf
sbb
test
and
test
or
pusha
repz
fmuls
adc
mov
add
sbb
loop
jbe
js
rcrl
cli
mov
jge
xchg
inc
push
cltd
or
or
popf
mov
call
mov
rsm
outsb
push
xchg
mov
jge
icebp
xorl
clc
leave
data16
add
shll
jecxz
cmp
into
mov
sbb
imul
push
jno
jp
enter
je
ret
bound
xor
ss
cmc
pop
adc
add
fisubl
test
mov
mov
mov
clc
insb
mov
xchg
jns
pusha
inc
jns
jg
test
lahf
push
xchg
es
roll
jbe
adc
and
in
mull
xchg
out
jno
int3
lea
scas
dec
mull
mov
test
lds
je
push
or
cmpl
movsb
add
cmp
pop
aad
sub
add
mov
adc
pop
mov
aad
xchg
cltd
pop
insb
mov
lods
mov
dec
shlb
aam
and
lea
mov
adc
mov
aas
push
xchg
dec
mov
mov
push
inc
cltd
into
xchg
jne
les
aas
cmp
and
imul
pop
sahf
into
sub
adc
gs
and
aam
push
lea
xor
push
loop
xchg
cmpsl
lods
movsb
out
inc
loop
je
loop
fcom
inc
pop
jbe,pn
inc
xchg
push
add
mov
xor
aad
add
fistpl
les
pop
ss
cmpsl
and
loop
xchg
ds
add
outsb
in
les
leave
jge
lods
xor
push
xor
fcomps
fisttps
cs
into
jne
lahf
pop
jp
cmpsb
or
leave
psrlq
adc
sbb
xchg
lods
lret
rcrl
lahf
shlb
mov
test
hlt
lcall
stos
push
mov
adc
inc
adc
mov
cmp
xor
mov
pop
out
cmp
out
rcll
sahf
adc
test
movsb
xchg
xchg
shll
or
inc
ficomps
and
mov
add
cmpsb
push
and
or
push
scas
shll
arpl
das
adc
mov
push
jp
rcrb
shll
flds
mov
sbb
imul
lods
ss
cmpsl
jae
popa
mov
rorl
mov
loope
enter
jae
into
jo
les
dec
adc
mov
inc
xchg
orb
les
jp
mov
ret
jl
push
jbe
sarl
or
cmpsl
sbb
movsl
mov
out
sbb
xchg
fmulp
cmpl
dec
and
xor
addr16
mov
inc
test
sub
mov
pop
sti
and
leave
fidivs
dec
addr16
cmpsl
dec
sub
call
sarl
xor
cwtl
mov
in
add
dec
push
ret
clc
xchg
and
test
rcrb
mov
out
sti
bound
inc
mov
movsl
xor
jae
ja
push
stos
cli
pop
lods
js
xlat
cmpsl
clc
iret
aad
and
enter
lods
lea
out
sbb
lcall
data16
xchg
fsubs
or
sub
sbb
lcall
loope
add
in
dec
inc
mov
xchg
mov
dec
xchg
stos
adc
dec
xor
cmp
sub
in
sti
add
add
xor
cmpsl
movb
xchg
inc
xchg
fs
pop
loope
jle
xor
jmp
jp
jbe
fadd
divl
jb
jno
push
enter
push
lods
jno
lea
orb
scas
jbe
outsl
pop
mov
lds
leave
pushf
jecxz
mov
repz
xchg
daa
push
jo
add
lea
scas
xchg
ds
push
lahf
aaa
cli
mov
loop
mov
pop
lea
cmp
add
stos
sbb
push
jge
push
repnz
pop
adc
inc
add
or
ret
repnz
shl
fs
rcll
aad
sub
and
mov
push
xchg
and
push
mov
push
arpl
xchg
xor
inc
ret
xor
sbb
or
cmpsl
fdivl
sbb
shll
add
mov
mov
jl
sarb
mov
inc
push
stos
jae
scas
popf
xor
pusha
xchg
imul
push
lock
in
push
out
mov
cltd
pop
xor
inc
pop
cmc
fld
xchg
addb
xchg
repnz
add
dec
push
and
cltd
dec
test
mov
out
mov
es
add
pop
into
test
lds
repnz
ljmp
and
mov
insb
xchg
sub
mov
cmpb
into
aaa
aaa
imul
mov
inc
xchg
xlat
push
mov
mov
push
push
ljmp
cmp
idivl
sbb
push
test
xor
pop
jno
xchg
add
fcoml
pop
xchg
les
cli
movsb
push
cmpsl
push
out
ss
into
mov
xlat
aaa
fsubp
and
test
sbb
test
sbb
fwait
ja
jne
xchg
fistl
xchg
inc
ja
push
jbe
testb
stos
inc
inc
lods
or
into
lcall
inc
xchg
mov
cmp
push
xchg
ret
aad
xchg
sub
cmp
push
xor
lcall
mov
push
lock
push
and
rcrl
es
test
aad
mov
dec
inc
xlat
xchg
enter
and
push
mov
test
fisttpll
jl
fbld
int3
jl
cmpsl
push
cmpl
rcrl
xchg
xchg
xchg
jb
ret
and
addr16
mov
cmpsb
sbb
and
cmp
or
jmp
es
imul
xlat
out
sti
fimuls
std
js
imul
sbb
push
cltd
xor
adc
andb
push
mov
and
xlat
ljmp
sti
jnp
xor
stos
stc
fidivrl
mov
mov
movl
sar
or
mov
add
aam
fistl
jmp
rclb
ret
daa
dec
fdivl
nop
mov
fsubrl
sub
movsb
aam
or
jle
mov
push
ds
popf
je
mov
mov
push
mov
js
mov
sbb
pop
nop
test
ss
insb
or
mov
jo
inc
pop
mov
sub
mov
arpl
inc
mov
jnp
sbb
je
push
popa
lds
popf
jmp
dec
mov
cmp
aaa
pushf
stos
repnz
aas
rcr
adc
sbb
data16
push
fists
sbb
test
out
sbb
mov
mov
sbb
pop
rcll
in
or
andb
cmp
jl
and
push
test
bound
xor
or
test
mov
or
mov
push
stos
mov
repnz
loop
out
mov
lods
leave
add
in
xchg
add
cmc
fcmovbe
mov
push
gs
xadd
inc
cmp
xor
jmp
mov
add
xor
mov
push
inc
mov
inc
xchg
pop
leave
xchg
cmc
sbb
mov
leave
cs
adcb
mov
jne
fistpl
jns
sub
and
xor
into
inc
pop
adc
inc
mov
adc
inc
out
xor
out
inc
cmpsb
mulb
fs
leave
rcl
jne
call
and
inc
adc
mov
in
mov
int
mov
cli
fisttpll
lret
jmp
rcr
or
cmpsl
sub
sbb
sub
imull
cld
aaa
sbb
cmp
dec
or
sub
lds
sbb
gs
pop
aas
insb
sub
dec
sub
add
test
cmpsl
mov
pop
mov
rcll
insl
lcall
jnp
push
lds
mov
jl
cltd
movb
mov
add
lods
add
mov
cltd
scas
stos
sub
sbb
pop
imul
scas
xor
fmul
push
lcall
fdivl
into
movsb
push
ljmp
imul
outsl
data16
aaa
test
ror
popf
int
data16
inc
xchg
sahf
or
xchg
pop
sbb
in
ret
mov
hlt
and
mulb
lahf
adcb
sbb
pop
push
add
daa
fwait
pop
sarl
xlat
aad
mov
scas
test
inc
psrld
inc
pextrw
pop
push
mov
sahf
cs
roll
push
imul
cmpsb
hlt
adc
mov
in
mov
pop
mov
adc
in
xlat
lds
add
pop
cmpsl
inc
pusha
lods
sbb
adc
icebp
lods
loopne
iret
jle
stos
add
out
jne
cmpsb
push
dec
push
cmp
xchg
mov
inc
ficoms
sbb
scas
jge
jp
pop
sbb
in
jbe
xchg
mov
push
lret
mov
inc
push
rorl
sub
cmc
ficoml
movsl
push
aam
lds
cmpsb
xor
xchg
into
jge
mov
loop
and
imul
fsubl
andb
popa
andb
dec
push
xchg
outsb
lods
dec
jo
popf
pushf
les
rclb
xorb
cli
test
cmp
insb
jg
es
shll
inc
jle
push
xchg
jne
lds
jnp
push
push
push
test
repz
lcall
call
in
xor
outsb
shrb
stc
inc
adc
andl
mov
sub
xchg
sbb
push
in
cld
push
pop
xchg
jecxz
mov
insb
sarl
fisubs
shll
jle
es
adc
inc
xor
mov
jg
mov
lcall
cmpsb
mov
fwait
cmp
pusha
rcll
cmpsb
cltd
das
aam
mov
shl
mov
adc
mov
leave
lods
movsl
push
mov
mov
addr16
scas
shlb
mov
outsb
out
push
test
in
adc
test
xor
aaa
cmp
icebp
xchg
scas
inc
push
outsb
subb
xchg
xlat
repnz
hlt
mov
arpl
lds
addr16
jae
popa
pop
andl
xor
loopne
inc
adc
movsl
cmp
inc
fidivs
data16
fidivl
jne
cmp
ror
hlt
or
jae
add
and
orl
ficomps
inc
loopne
jmp
subb
pop
ds
and
add
cmpsl
clc
lret
cmp
stc
dec
out
ds
sbb
add
push
pop
out
es
and
pop
pmaxsw
cmp
popf
xor
mov
sub
push
lret
icebp
gs
mov
leave
in
outsl
rcrl
daa
inc
clc
cmp
sbb
mov
fmuls
insl
les
sub
loop
sbb
xor
sti
sub
aas
fldcw
sahf
push
inc
sub
aam
addl
jge
dec
jne
outsl
mov
mov
jmp
lahf
xchg
scas
sub
push
sub
vmwrite
inc
or
ret
rorb
and
push
clc
xchg
div
and
adc
sbb
ljmp
cmpl
mov
cmp
mov
push
fmull
test
pop
jns
push
adc
push
push
mov
lds
inc
add
les
test
xchg
push
push
and
fdivrs
dec
mov
cmpsl
cmpsb
jns
cltd
mov
pop
dec
sub
pop
xor
sbb
adc
dec
in
mov
lret
or
pop
hlt
dec
adc
pusha
gs
imul
push
or
cmpsl
stos
jnp
adc
movsb
in
ret
out
jbe
pop
pop
push
xor
lock
icebp
and
stos
mov
mov
jb
data16
pop
sub
lret
pop
loop
adc
nop
pop
xchg
push
hlt
loope
pop
mov
sub
pushf
and
shlb
lret
cmp
jp
aad
sbb
or
scas
push
mov
test
or
movsl
cmpsl
lods
out
push
ret
jno
mov
jmp
arpl
inc
rclb
je
mov
popa
test
xor
idivb
mov
daa
jno
adc
pop
aaa
mov
add
repnz
ds
repz
add
add
shl
mov
insb
cs
outsb
jp
js
popa
movsb
push
daa
adc
loop
insl
filds
cmpsb
cwtl
test
mov
icebp
xchg
and
pop
xorl
lods
das
push
std
lret
lret
lds
movsb
addl
xchg
xchg
imul
dec
dec
les
pop
je
out
push
aad
adc
push
popa
repz
aam
sub
lret
mov
lods
jg
and
mov
int3
and
cs
repnz
pop
lcall
or
lahf
ret
xchg
in
sar
mov
mov
xlat
xor
xor
jle
daa
sar
mov
xchg
mov
lcall
xor
ss
push
mov
sub
mov
push
sahf
aad
lahf
jno
xchg
jnp
cmp
pop
sbb
mov
mov
or
push
pop
es
test
mov
push
lock
adc
lds
add
in
or
and
into
leave
sbb
loop
sbb
jns
xlat
lds
mov
add
cmp
les
mov
inc
cmp
das
cmpsl
dec
loope
int
add
rol
mov
mov
add
mov
lods
lret
ret
les
ss
test
push
jo
push
xchg
movsl
mov
pop
inc
xor
xchg
out
inc
sub
insb
dec
mov
loopne
jge
pop
repnz
out
add
push
enter
dec
cmp
jne
jb
jecxz
and
dec
sarl
flds
add
add
mov
add
xchg
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
add
sbb
add
fiaddl
add
add
add
add
pop
fiaddl
add
add
je
add
mov
add
mov
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fildl
add
fildl
add
fildl
add
fildl
add
add
pusha
fildl
add
add
fildl
add
add
int3
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
faddl
add
faddl
add
add
dec
faddl
add
add
sbb
add
faddl
add
add
aam
add
add
repnz
add
fldl
add
fldl
add
add
inc
fldl
add
add
add
xchg
fldl
add
fldl
add
add
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fiadds
add
fiadds
add
add
add
fiadds
add
add
pop
fiadds
add
add
add
add
cld
xlat
add
inc
flds
add
add
add
dec
fiaddl
add
flds
add
xlat
add
sub
add
sub
add
test
add
dec
flds
add
add
add
mov
add
xchg
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
add
sbb
add
fiaddl
add
add
add
add
pop
fiaddl
add
add
je
add
mov
add
mov
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fildl
add
fildl
add
fildl
add
fildl
add
add
pusha
fildl
add
add
fildl
add
add
int3
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
faddl
add
faddl
add
add
dec
faddl
add
add
sbb
add
faddl
add
add
aam
add
add
repnz
add
fldl
add
fldl
add
add
inc
fldl
add
add
add
xchg
fldl
add
fldl
add
add
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fiadds
add
fiadds
add
add
add
fiadds
add
add
pop
fiadds
add
add
add
add
push
push
inc
push
xor
cs
dec
dec
add
add
push
gs
arpl
insb
insb
dec
outsb
outsw
add
add
je
imul
jb
popa
fs
jb
arpl
jae
add
add
dec
outsb
jbe
insb
imul
je
add
add
je
outsb
jne
add
inc
imul
dec
gs
popa
addr16
add
add
inc
popa
insb
insb
dec
gs
dec
outsl
outsl
imul
add
add
jo
push
arpl
add
inc
gs
imul
js
push
add
add
dec
outsl
popa
fs
arpl
push
add
add
je
inc
add
add
outsl
ja
imul
add
inc
jb
popa
je
push
imul
push
add
add
fs
je
imul
inc
outsb
jne
inc
push
imul
add
add
jb
outsb
push
outsl
inc
insb
imul
add
je
outsl
arpl
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
insb
jae
jb
outsb
inc
add
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
je
jns
je
insl
push
imul
insb
gs
imul
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
add
inc
gs
imul
je
add
add
fs
push
dec
jne
je
inc
jns
add
add
insb
outsl
arpl
imul
jb
gs
imul
add
inc
jb
popa
je
dec
jne
gs
add
add
dec
gs
jo
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
je
inc
jbe
outsb
je
add
add
inc
imul
jne
arpl
add
add
je
jb
outsl
arpl
fs
js
push
add
add
jb
insl
jo
push
add
add
je
jne
jb
outsb
je
jb
arpl
jae
add
push
gs
imul
bound
gs
add
add
inc
gs
outsl
fs
gs
imul
add
add
push
gs
imul
add
inc
gs
jb
arpl
fs
jae
add
add
push
gs
imul
gs
add
add
gs
je
push
jb
arpl
jae
add
add
insb
jae
jb
jo
inc
add
add
inc
gs
inc
push
add
add
dec
outsb
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
insb
jae
jb
insl
jo
add
add
dec
outsl
popa
fs
gs
jne
arpl
add
add
je
outsb
push
gs
js
gs
imul
gs
add
dec
outsb
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
outsb
je
outsl
insb
add
add
fs
imul
add
add
push
gs
je
dec
popa
outsb
fs
add
add
push
insb
gs
add
inc
gs
jne
jb
outsb
je
push
dec
add
add
inc
gs
je
dec
popa
outsb
fs
add
add
push
gs
popa
jae
inc
jb
outsl
jb
add
add
inc
jb
add
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
add
inc
imul
inc
imul
gs
outsl
fs
gs
imul
add
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
popa
jo
je
imul
add
gs
je
inc
imul
jb
popa
je
inc
imul
inc
push
push
cs
dec
dec
add
add
arpl
insb
outsl
arpl
add
add
arpl
inc
imul
insl
gs
arpl
add
add
pop
outsl
outsb
gs
je
add
gs
je
add
add
jo
pop
arpl
insl
outsl
fs
add
insl
gs
jae
je
add
add
jae
je
popa
jo
pop
je
jo
add
inc
inc
push
inc
push
dec
xor
cs
dec
dec
add
add
push
gs
outsb
jne
dec
gs
js
add
add
outsb
push
push
push
outsl
imul
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
push
gs
jb
inc
jbe
outsb
je
add
mov
and
addb
or
addb
add
adc
in
sub
cmp
jne
cmp
jne
mov
mov
mov
xor
cmp
jne
mov
cmp
jne
cmp
je
mov
mov
push
mov
lea
test
jne
mov
push
cmp
je
mov
cmp
je
mov
cmp
jne
mov
mov
push
lea
push
call
mov
lea
cmp
je
mov
mov
mov
mov
cmp
je
mov
and
je
cmp
jne
xor
cmp
je
mov
cmp
je
mov
mov
mov
mov
mov
cmp
je
mov
xor
mov
lea
push
call
lea
push
call
mov
lea
push
call
cmp
jne
test
jne
cmp
je
lea
push
call
mov
cmp
je
mov
lea
push
call
xor
and
je
test
je
mov
cmp
je
mov
mov
mov
cmp
je
lea
push
call
cmp
jne
mov
cmp
jne
cmp
jne
lea
push
call
test
je
lea
push
call
mov
mov
lea
push
call
cmp
je
mov
push
push
push
push
call
mov
lea
or
jne
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
xor
mov
mov
cmp
jne
mov
or
jne
cmp
jne
lea
push
call
xor
cmp
je
mov
mov
cmp
je
mov
cmp
jne
lea
push
call
cmp
jne
mov
lea
push
call
mov
mov
and
jne
cmp
je
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
cmp
jne
mov
mov
cmp
je
mov
cmp
je
cmp
jne
cmp
jne
mov
mov
cmp
je
test
je
mov
cmp
je
mov
mov
mov
mov
cmp
je
mov
repnz
cmp
jne
mov
lea
push
call
mov
inc
lea
mov
lea
push
call
cmp
jne
and
je
mov
xor
mov
mov
cmp
jne
mov
mov
lea
push
call
mov
mov
mov
or
je
test
je
cmp
jne
cmp
jne
mov
test
je
mov
mov
test
je
cmp
jne
lea
lea
and
je
cmp
je
mov
mov
mov
and
je
mov
mov
and
jne
mov
mov
xor
mov
mov
cmp
jne
test
je
mov
mov
pop
cmp
je
mov
mov
cmp
jne
mov
mov
mov
cmp
je
mov
mov
pop
xor
mov
mov
cmp
jne
mov
cmp
je
and
je
xor
mov
mov
cmp
jne
cmp
jne
cmp
jne
cmp
je
mov
and
je
mov
lea
cmp
je
mov
mov
and
jne
lea
mov
and
jne
mov
mov
cmp
jne
cmp
je
mov
mov
cmp
jne
mov
pop
mov
xor
cmp
jne
mov
mov
mov
lea
cmp
jne
cmp
jne
mov
mov
pop
ret
and
add
addb
or
push
add
or
add
adcl
add
mov
mov
push
mov
mov
push
lea
lea
push
call
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
push
xor
cmp
je
cmp
je
xor
and
jne
mov
mov
mov
mov
test
je
xor
cmp
je
mov
xor
mov
xor
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
lea
push
call
mov
lea
push
call
cmp
jne
lea
push
call
mov
mov
mov
test
jne
mov
mov
lea
push
call
cmp
jne
mov
xor
and
je
mov
and
je
cmp
je
cmp
je
mov
mov
mov
cmp
jne
or
jne
mov
mov
mov
mov
cmp
je
mov
cmp
je
mov
cmp
je
mov
mov
lea
push
call
cmp
je
cmp
je
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
lea
push
call
and
jne
mov
mov
test
jne
cmp
je
cmp
je
cmp
jne
cmp
jne
mov
test
jne
lea
push
call
xor
mov
mov
cmp
jne
xor
lea
mov
lea
push
call
and
je
mov
lea
push
call
mov
cmp
je
cmp
jne
mov
mov
lea
push
call
cmp
je
mov
lea
push
call
test
jne
and
je
cmp
jne
mov
mov
test
jne
mov
mov
mov
mov
xor
mov
mov
lea
push
call
test
je
lea
push
call
xor
lea
push
call
lea
push
call
xor
cmp
je
mov
or
jne
mov
cmp
jne
mov
mov
cmp
jne
cmp
je
mov
mov
mov
and
jne
mov
mov
mov
cmp
je
lea
push
call
mov
mov
test
jne
test
je
mov
mov
mov
cmp
je
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
mov
xor
lea
lea
push
call
cmp
je
mov
cmp
jne
mov
mov
mov
mov
cmp
je
mov
mov
mov
lea
mov
mov
lea
push
call
mov
or
je
lea
push
call
and
je
mov
cmp
je
mov
cmp
je
mov
mov
mov
mov
mov
lea
mov
mov
mov
xor
mov
mov
cmp
jne
cmp
jne
mov
xor
mov
mov
xor
lea
push
call
mov
cmp
je
mov
mov
mov
lea
push
call
mov
cmp
jne
cmp
jne
mov
test
je
mov
mov
mov
lea
push
call
and
jne
mov
mov
cmp
jne
lea
push
call
cmp
je
lea
push
call
cmp
je
lea
push
call
mov
mov
cmp
je
mov
mov
lea
push
call
test
je
mov
cmp
jne
lea
push
call
mov
mov
push
call
mov
mov
cmp
je
mov
mov
mov
lea
push
call
cmp
je
mov
mov
mov
lea
push
call
mov
lea
push
call
mov
lea
push
call
cmp
jne
mov
mov
mov
test
je
xor
or
jne
mov
mov
mov
or
je
xor
mov
cmp
je
mov
lea
push
call
mov
cmp
je
lea
push
call
mov
xor
mov
mov
mov
cmp
je
cmp
je
lea
push
call
test
je
cmp
je
mov
or
je
mov
xor
mov
lea
push
call
test
je
cmp
jne
xor
mov
mov
lea
push
call
cmp
jne
mov
lea
push
call
cmp
jne
or
je
mov
mov
cmp
jne
mov
mov
and
jne
mov
push
pushl
call
cmp
je
cmp
je
lea
cmp
jne
and
jne
test
jne
cmp
je
mov
xor
mov
mov
lea
push
call
cmp
je
mov
lea
push
call
mov
mov
mov
lea
push
call
cmp
je
lea
push
call
cmp
jne
xor
and
jne
lea
push
call
mov
cmp
je
mov
mov
lea
push
call
or
je
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
lea
push
call
mov
xor
lea
and
jne
mov
test
je
cmp
jne
mov
mov
lea
push
call
mov
lea
push
call
mov
mov
mov
cmp
je
mov
and
je
mov
lea
push
call
cmp
jne
mov
mov
mov
or
je
mov
mov
mov
lea
push
call
mov
lea
push
call
mov
lea
push
call
test
jne
xor
lea
cmp
jne
and
jne
xor
mov
mov
lea
push
call
mov
mov
mov
lea
push
call
mov
and
je
lea
push
call
cmp
je
xor
mov
lea
push
call
mov
lea
push
call
mov
mov
lea
push
call
test
jne
cmp
jne
lea
push
call
mov
lea
mov
cmp
jne
mov
lea
push
call
mov
mov
mov
mov
or
je
lea
push
call
lea
push
call
lea
push
call
cmp
jne
test
je
mov
cmp
je
mov
lea
push
call
mov
mov
mov
cmp
jne
cmp
je
xor
lea
mov
mov
xor
test
je
and
je
mov
mov
lea
cmp
je
mov
mov
lea
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
movl
lea
push
call
mov
lea
push
call
mov
xor
cmp
jne
xor
lea
cmp
je
cmp
je
mov
lea
push
call
cmp
jne
or
je
mov
cmp
jne
mov
mov
lea
push
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
lea
push
call
mov
xor
cmp
je
lea
push
call
mov
mov
mov
movl
mov
lea
mov
lea
push
call
or
je
test
jne
mov
pushl
xor
lea
push
call
cmp
je
mov
lea
and
jne
mov
mov
mov
and
je
mov
lea
push
call
mov
cmp
jne
cmp
jne
mov
mov
cmp
je
or
jne
mov
mov
mov
mov
cmp
jne
mov
lea
push
call
test
jne
cmp
jne
mov
mov
mov
mov
mov
cmp
jne
mov
and
je
mov
cmp
jne
or
je
cmp
jne
mov
push
lea
push
call
cmp
je
mov
cmp
je
mov
mov
cmp
jne
cmp
jne
mov
mov
mov
lea
push
call
or
jne
and
jne
cmp
jne
mov
lea
and
je
mov
mov
mov
mov
cmp
je
xor
mov
mov
mov
shrl
lea
push
call
mov
mov
or
jne
cmp
jne
lea
push
call
mov
cmp
jne
lea
push
call
xor
mov
cmp
je
cmp
jne
mov
lea
cmp
je
mov
mov
and
jne
mov
cmp
je
mov
cmp
jne
xor
mov
test
jne
mov
lea
push
call
mov
mov
mov
mov
pushl
call
xor
xor
mov
cmp
jne
mov
mov
lea
cmp
je
lea
push
call
mov
mov
mov
mov
addl
mov
lea
lea
push
call
mov
mov
xor
test
je
mov
call
add
or
mov
add
andb
subb
add
add
inc
add
add
adc
in
add
xor
lea
cmp
jne
mov
mov
xor
mov
mov
mov
cmp
jne
mov
xor
or
je
mov
mov
mov
push
lea
push
call
cmp
jne
mov
mov
cmp
jne
cmp
je
and
je
lea
cmp
jne
mov
mov
test
jne
mov
mov
push
lea
push
call
mov
cmp
je
cmp
je
lea
push
call
and
je
mov
push
mov
mov
mov
mov
lea
push
call
xor
mov
cmp
je
mov
mov
mov
lea
push
call
mov
mov
xor
mov
cmp
jne
mov
or
jne
mov
mov
cmp
je
mov
mov
test
je
cmp
je
mov
mov
mov
mov
cmpl
je
mov
lea
mov
cmp
je
mov
mov
decl
mov
mov
cmp
jne
and
je
cmp
jne
cmp
je
cmp
jne
cmp
jne
mov
sub
or
je
mov
cmp
je
cmp
je
lea
mov
mov
cmp
jne
test
jne
lea
cmp
jne
mov
mov
subl
mov
xor
mov
mov
mov
add
mov
lea
cmp
jne
test
jne
mov
mov
cmp
jne
mov
mov
cmp
je
mov
cmp
jne
mov
mov
mov
or
jne
cmp
jne
test
je
lea
xor
cmp
je
lea
mov
mov
mov
cmp
je
mov
cmp
jne
mov
mov
and
je
mov
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
test
je
mov
or
jne
mov
cmp
je
mov
or
je
mov
mov
mov
jmp
mov
lea
push
call
mov
mov
mov
mov
mov
cmp
je
cmp
jne
lea
push
call
lea
push
call
mov
mov
cmp
jne
mov
mov
cmp
je
and
jne
lea
push
call
mov
xor
mov
mov
mov
mov
lea
push
call
mov
cmp
je
cmp
jne
mov
pop
lea
push
call
cmp
jne
cmp
jne
cmp
je
and
jne
mov
xor
cmp
je
lea
push
call
cmp
je
mov
pop
lea
push
call
cmp
jne
lea
push
call
mov
and
je
cmp
jne
mov
mov
mov
mov
pop
lea
push
call
mov
mov
mov
pop
ret
inc
popa
add
add
lds
ss
push
add
add
addb
