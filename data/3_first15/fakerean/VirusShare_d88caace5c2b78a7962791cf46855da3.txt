adc
mov
sbb
jnp
mov
jnp
cmpw
xchg
into
mov
stos
test
lret
cmpl
xchg
je
jnp
xchg
mov
jg
jnp
dec
xchg
xchg
mov
loopne
jl
in
mov
mov
jnp
sbb
jnp
out
in
jle
inc
jmp
loopne
jmp
jle
js
jle
test
lock
sbb
jle
xor
jle
shr
jle
stos
out
jle
repnz
jle
pusha
lock
loope
jle
cmp
in
jle
out
loopne
in
jle
leave
out
jle
dec
out
jle
add
add
add
add
in
jle
cmp
jle
add
jle
out
out
jle
xor
jle
repz
mov
jle
aam
jle
rclb
push
repnz
shl
out
mov
jg
jle
call
add
add
add
imul
gs
xor
cs
insb
add
gs
xor
fs
insb
add
gs
xor
fs
insb
add
adc
add
add
add
cmp
cmp
add
pusha
add
sbb
add
push
xor
pusha
xor
jo
js
xorb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
gs
je
inc
imul
jns
add
add
outsb
arpl
push
popa
imul
insl
gs
add
inc
gs
outsl
outsb
jae
insb
gs
push
add
add
je
outsl
insl
insl
push
je
je
add
add
je
jb
arpl
jae
outsl
inc
outsl
jne
je
jb
add
add
inc
popa
fs
jb
je
push
je
add
add
outsb
inc
imul
je
outsl
outsb
jae
insb
gs
imul
add
gs
imul
add
inc
gs
insb
insb
inc
imul
jns
add
add
insb
gs
imul
jae
popa
je
push
imul
gs
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
add
je
jb
arpl
jae
jb
outsl
jb
je
inc
outsl
outsl
jae
add
add
je
jns
je
insl
push
imul
insb
gs
imul
jb
popa
je
dec
popa
jb
dec
imul
push
gs
je
jbe
outsb
je
add
push
gs
outsl
outsb
jae
insb
gs
popa
jb
ja
jb
push
je
je
add
add
outsb
fs
outsl
insb
jne
gs
outsl
jne
je
outsl
imul
add
add
gs
je
inc
imul
jns
js
add
add
popa
jo
gs
jb
jns
add
inc
jb
ja
popa
jo
imul
gs
gs
outsl
popa
jb
dec
popa
jns
jne
dec
popa
insl
gs
add
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
add
inc
push
jo
popa
dec
jne
gs
arpl
add
push
outsb
jb
imul
jbe
arpl
outsl
je
imul
outsl
outsb
add
add
imul
jb
imul
arpl
jae
add
inc
jb
popa
outsb
addr16
arpl
imul
ja
add
add
insb
insb
dec
jae
inc
imul
inc
gs
popa
ja
outsb
jo
je
gs
arpl
outsb
outsw
inc
add
add
popa
jb
outsl
ja
jb
jne
push
add
add
imul
jae
js
add
push
gs
gs
popa
addr16
js
jb
dec
outsb
outsw
add
add
je
insb
imul
je
add
inc
gs
outsb
arpl
je
jb
add
dec
gs
popa
addr16
outsl
js
imul
add
add
dec
outsb
jne
add
inc
gs
insb
popa
jae
dec
outsb
outsw
inc
js
add
add
jb
insb
insb
inc
inc
add
add
jne
inc
imul
gs
imul
add
add
ja
gs
inc
js
add
add
outsb
fs
gs
popa
addr16
add
add
gs
je
inc
arpl
insb
gs
je
jb
popa
bound
add
add
je
inc
inc
js
add
inc
gs
imul
outsw
add
add
je
jne
dec
outsb
jne
add
inc
popa
insb
insb
push
imul
outsl
arpl
add
dec
gs
popa
addr16
outsl
js
js
add
add
je
imul
add
imul
inc
popa
jb
add
push
imul
imul
inc
outsl
jb
popa
je
add
add
je
insb
imul
inc
popa
je
add
add
imul
outsl
ja
add
inc
jb
popa
outsb
addr16
arpl
imul
ja
add
add
imul
popa
jae
inc
js
add
les
dec
and
lea
imul
sub
inc
sub
add
or
lea
mov
dec
dec
sub
call
call
call
dec
add
lea
mov
call
sub
inc
inc
dec
xor
lea
imul
inc
call
call
inc
push
inc
call
dec
and
call
lea
dec
inc
dec
add
xor
lea
imul
pop
dec
inc
dec
add
inc
pop
or
lea
pop
mov
add
dec
dec
pop
inc
and
lea
imul
add
dec
sub
dec
pop
xor
lea
pop
mov
sub
mov
inc
dec
call
dec
and
lea
mov
ret
dec
inc
push
dec
dec
push
add
lea
push
mov
inc
push
sub
dec
push
dec
or
mov
lea
push
dec
ret
push
dec
inc
dec
and
lea
mov
add
add
sub
dec
xor
lea
imul
inc
dec
inc
add
or
lea
imul
dec
inc
dec
sub
xor
lea
movswl
dec
dec
inc
jmp
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
cmp
add
dec
adc
add
add
adcb
add
add
enter
aad
add
out
adc
add
adc
add
adc
add
adc
add
add
push
adc
add
add
test
add
movsb
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
push
adc
add
adc
add
add
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
xor
add
pop
adc
add
jle
add
xchg
adc
add
add
add
sub
add
dec
inc
and
dec
sub
movzbl
lea
mov
xor
dec
inc
inc
sub
dec
or
lea
movzbl
inc
add
inc
add
add
dec
jne
lea
mov
mov
add
pop
inc
inc
pop
dec
and
pop
lea
mov
inc
sub
dec
inc
and
lea
imul
sub
dec
add
ret
push
add
add
and
lea
mov
add
dec
add
push
push
push
push
inc
xor
lea
push
mov
sub
add
inc
dec
xor
lea
movswl
dec
mov
inc
push
add
inc
xor
add
lea
push
mov
inc
push
inc
dec
pushl
dec
call
xor
add
lea
mov
inc
inc
add
add
sub
pop
ret
lea
mov
dec
dec
dec
cmp
jb
inc
xor
xor
lea
mov
imul
inc
mov
add
inc
inc
sub
add
lea
dec
add
mov
add
dec
cmp
jb
xor
mov
lea
imul
xor
add
sub
xor
dec
sub
pop
and
lea
test
jbe
mov
add
dec
inc
inc
add
lea
add
inc
dec
dec
add
lea
movzbl
add
inc
inc
sub
inc
or
lea
mov
add
and
add
inc
mov
add
add
movzbl
lea
mov
add
sub
dec
and
inc
inc
mov
and
lea
mov
movsbl
inc
mov
inc
add
mov
inc
xor
lea
mov
dec
inc
dec
jne
sub
mov
sub
and
lea
mov
sub
inc
dec
dec
and
lea
mov
mov
inc
dec
dec
sub
sub
lea
movsbl
mov
sub
inc
test
jbe
inc
sub
and
lea
mov
inc
dec
inc
inc
and
lea
mov
inc
inc
inc
inc
add
or
lea
imul
add
dec
and
dec
inc
mov
sub
lea
movzbl
imul
inc
add
dec
sub
and
inc
and
mov
lea
mov
movzbl
dec
inc
mov
sub
dec
mov
and
lea
movzbl
mov
jmp
inc
or
lea
mov
dec
inc
dec
add
or
lea
add
inc
add
dec
and
lea
mov
pop
ret
push
dec
inc
inc
sub
add
lea
movzbl
dec
sub
inc
inc
dec
xor
lea
mov
sub
inc
sub
dec
sub
lea
movzwl
inc
dec
add
dec
and
lea
mov
inc
push
dec
sub
push
inc
xor
push
lea
call
mov
add
inc
inc
inc
mov
and
lea
push
mov
inc
pop
inc
inc
or
add
add
lea
mov
dec
dec
cmp
je
inc
push
add
call
or
int
lea
mov
ret
sub
add
pop
add
ret
push
inc
push
add
lea
push
mov
push
dec
push
dec
dec
push
sub
or
lea
mov
sub
call
sub
push
sub
sub
add
mov
lea
mov
mov
sub
mov
add
add
test
je
inc
or
lea
mov
add
dec
inc
inc
and
mov
lea
movsbl
add
dec
add
dec
or
lea
repnz
imul
sub
add
sub
jmp
jmp
dec
inc
xor
lea
imul
inc
inc
inc
inc
or
lea
imul
pop
pop
ret
push
sub
dec
dec
add
and
lea
mov
dec
inc
dec
dec
or
lea
mov
add
add
dec
inc
add
lea
mov
sub
inc
dec
sub
xor
lea
mov
pop
ret
sub
dec
mov
inc
inc
mov
dec
xor
mov
lea
movzwl
mov
add
inc
xor
add
inc
mov
or
lea
inc
mov
inc
inc
add
add
xor
cmp
jb
lea
push
mov
inc
push
inc
sub
push
inc
or
mov
lea
imul
xor
add
dec
xor
inc
add
xor
or
lea
push
mov
dec
xor
dec
sub
mov
dec
add
mov
lea
imul
movzbl
inc
inc
inc
dec
add
xor
lea
add
mov
sub
movzbl
sub
dec
dec
sub
lea
mov
inc
dec
inc
inc
sub
mov
and
jmp
sbb
lock
jo
sub
jb
leave
push
rclb
ret
in
shll
mov
inc
clc
fildl
cmp
xor
in
cwtl
or
es
pop
out
cwtl
dec
pop
adc
mov
outsl
lcall
gs
push
cltd
ss
mov
daa
jbe
mov
aaa
mov
ret
xor
sar
roll
dec
sub
jge
mov
xchg
adc
ds
js
iret
stc
mov
or
in
pushf
mov
cwtl
pop
cmc
adc
mov
sbb
fcomp
pop
data16
pushf
cmp
bound
in
std
mov
rol
add
ds
jl
dec
jnp
sub
pop
inc
mov
gs
jl
call
jo
adc
rcrl
test
jo
push
adc
dec
xlat
and
add
jbe
arpl
iret
or
popa
mov
cmc
xchg
xchg
sbb
mov
mov
orl
jmp
and
pop
lods
addb
mov
popa
sub
mov
mov
cmp
out
push
enter
shlb
push
push
in
cmp
gs
les
and
adc
ret
xor
cmp
es
xchg
movsl
xlat
arpl
and
lret
or
mov
loop
out
mov
xor
sahf
ljmp
xor
xor
jp
in
aad
dec
lock
cltd
sub
pop
mov
mov
mov
mov
pinsrw
in
lret
test
int
or
fistps
jg
aas
jno
and
adc
jns
cli
push
push
gs
jnp
push
mov
sahf
jl
xor
shlb
dec
mov
mov
std
sbb
fwait
es
xor
pop
fidivrs
loope
popa
sub
mov
lret
scas
push
stos
imul
scas
mov
fstl
dec
mov
fadds
jbe
cli
out
pop
stc
minps
stos
into
js
incb
push
mov
ss
mov
push
cmp
sbb
mov
pop
movsl
fucomip
mov
adc
adc
mov
in
dec
ret
push
in
jne
notb
xchg
loopne
jne
push
jg
ret
push
js
fcomp
hlt
data16
add
out
fstl
pushf
popa
into
xchg
xor
adc
gs
push
mov
cmp
test
and
push
mov
jnp
mov
cs
mov
das
in
clc
lfs
mov
fld1
pushf
fsubrs
inc
int
push
or
fiadds
mov
cmp
inc
add
cltd
mov
xchg
ss
push
icebp
xchg
xchg
hlt
and
fwait
ja
add
mov
lock
ret
ds
aas
jo
jae
mov
mov
jp
mov
mov
lcall
xor
pop
lret
and
pop
mov
in
push
dec
or
sub
dec
inc
movsl
mov
cwtl
inc
bound
inc
stos
sub
push
ljmp
sti
icebp
adc
xchg
jle
adc
mov
insb
add
mov
mov
aas
enter
jge
ret
pop
xchg
xchg
in
add
mov
push
nop
es
mov
cmp
iret
mov
gs
or
push
pushf
cmpsl
in
xchg
push
dec
mov
fisttps
mov
dec
imul
bound
enter
or
mov
xchg
and
test
mov
push
ljmp
lret
push
mov
cmp
pop
lea
mov
pop
cmpsl
jg
imul
dec
inc
sbb
mov
clc
cmp
dec
hlt
test
stos
mov
xchg
clc
pushf
and
xchg
aaa
pusha
jle
xlat
push
pop
dec
jle
jge
jp
mov
cmp
and
push
mov
adc
adc
dec
xchg
or
sahf
mov
jg
dec
ss
push
push
sub
adc
test
pop
inc
and
pusha
scas
jp
cli
sbb
sbb
or
jge
jecxz
cmp
and
push
pop
sbb
fsubrs
imulb
xor
mov
cltd
push
dec
adc
xchg
negl
mov
push
cmp
lahf
add
mov
stos
lock
lahf
movsb
adcb
jecxz
mov
in
popf
insl
inc
inc
sub
jno
jns
leave
repnz
push
or
mov
and
mov
push
stc
mov
addb
jecxz
xlat
xchg
in
les
aaa
jo
xchg
ret
movsb
ss
adc
adc
sbb
mov
cli
sub
data16
jle
lods
out
or
jnp
pop
adc
pop
mov
pop
and
mov
dec
sub
inc
mov
mov
cmc
cmc
cwtl
lds
push
dec
sarl
fidivrl
out
inc
sbb
loope
ss
dec
push
jno
sbb
xor
pop
sub
push
fiaddl
dec
sbb
mov
mov
lcall
sbb
mov
sarl
outsl
lcall
adc
mov
fsts
mov
and
pop
stc
ljmp
adc
adc
mov
mov
xor
jl
fnstcw
popa
pop
xor
imul
inc
int3
pop
mov
outsb
and
adc
sub
jg
aad
std
or
out
movsl
lahf
xchg
test
jns
sub
and
add
xor
jno
imul
aad
jo
ss
outsl
xchg
imul
adc
aas
mov
mov
xor
jb
jno
sub
jp
iret
lret
push
movsl
cmp
jo
cmc
xor
inc
lock
or
rol
fs
push
testb
cmpsl
add
loope
fldenv
mov
dec
pop
test
fsubrl
inc
dec
push
sbb
in
clc
fbld
scas
mov
fstpt
cmp
ds
je
jmp
pushf
insl
or
loope
pop
gs
cmp
cmp
add
dec
outsb
or
enter
and
lahf
aas
xchg
scas
inc
jne
add
mov
push
sti
inc
mov
fmul
das
scas
roll
in
inc
loop
push
sbb
jns
push
repnz
sub
cmp
cmp
arpl
and
adc
dec
movsl
dec
lret
fildll
pop
inc
lret
sub
adc
jae
cmp
jmp
ss
shlb
aam
das
cmp
jbe
adc
subl
add
mov
xor
out
sbb
test
mov
mov
arpl
mov
ss
faddl
fstps
jnp
repnz
fwait
jae
lods
jne
jg
out
mov
xorb
adc
insb
adc
nop
scas
test
mov
mov
mov
mov
push
pop
xchg
and
jmp
loop
test
mov
loopw
cltd
mov
pop
or
or
sub
mulb
or
cmp
jp
das
adc
addb
push
sub
rorl
dec
cmp
imul
movsl
inc
out
out
or
data16
or
fmull
stos
inc
mov
adc
repnz
jb
jo
popa
scas
cmp
mov
push
xchg
mov
lcall
inc
out
mov
dec
cltd
fdivrl
jnp
pop
popa
add
push
push
dec
mov
ljmp
xchg
sahf
adc
insl
cmp
cli
inc
lock
sub
add
loop
jnp
sbb
adc
mov
enter
clc
call
pop
fnstcw
xor
ja
out
sbbl
icebp
dec
aas
repnz
and
and
pop
scas
mov
cld
lods
insl
popa
inc
jns
push
in
in
stos
cmpsb
pop
and
popf
outsl
push
pop
push
rcr
sbb
sub
cmp
push
sbb
dec
sarb
test
je
push
push
xor
push
out
sar
jle
aas
iret
cmp
mov
mov
scas
in
xchg
scas
push
mov
les
adc
notl
ljmp
mov
mov
jle
add
call
cmp
xchg
add
clc
cmp
cmpb
test
setle
pop
xor
in
pop
push
inc
inc
arpl
mov
add
fcoml
or
sbb
aad
fcoms
mov
fistpl
icebp
sub
pop
push
xor
daa
ljmp
adc
je
pop
push
lcall
call
adc
xlat
outsl
jge
xchg
sbb
xor
xor
xor
test
pop
insl
sahf
daa
inc
mov
inc
ret
jmp
lahf
pop
outsl
mov
inc
xlat
pop
aam
cmp
loopne
daa
xor
daa
xor
daa
mov
or
pop
clc
and
pushf
sbb
lea
or
xor
insl
call
jmp
jns
cmp
push
outsl
lret
scas
xchg
push
cmp
divl
dec
out
cmp
leave
inc
and
rclb
pop
cld
popa
outsb
inc
mov
out
fmull
shlb
pop
rcrb
loope
dec
into
call
mov
lds
jmp
insl
dec
leave
popa
mov
movb
loopne
mov
nop
aad
mov
arpl
inc
xchg
test
xchg
adc
xor
xchg
fsubl
xor
out
sbb
lock
sarl
add
or
jp
aam
cmp
mov
jge
xchg
ficomps
mov
mov
pop
mov
repz
movsb
cmp
push
js
jg
sti
gs
cs
cld
shll
stos
lahf
pop
mov
aaa
aas
pop
roll
iret
add
push
testl
xchg
sbb
push
pop
sbb
shlb
clc
lods
mov
arpl
test
loop
imul
sub
aas
xchg
push
dec
sub
and
cmc
adc
pop
cmp
nop
imul
imul
aad
fidivrl
cmp
inc
mov
xchg
scas
mov
inc
cmp
pop
pushf
xor
and
inc
in
or
sbb
popf
out
rcr
outsb
jno
repnz
lcall
sbb
out
mov
ret
cmpsl
ret
mov
lret
iret
pushf
outsb
ret
mov
cmp
rcrl
pop
push
mov
and
pop
lods
push
push
xchg
dec
outsb
ds
mov
and
inc
jnp
imul
mov
push
je
add
lcall
mov
mov
pop
sti
or
push
ret
je
add
jb
icebp
insl
cmpsl
or
mov
icebp
lret
movsl
mov
addr16
xlat
pushf
lods
xchg
sti
mov
test
roll
cmp
mov
rcrb
mov
or
push
icebp
push
loope
jmp
fstpt
fs
push
pushf
xor
rcr
lcall
lds
ds
mov
mov
dec
and
jecxz
es
mov
xor
imul
sbb
adc
or
cmp
dec
outsl
jb
fs
jmp
popf
jl
sbb
adc
scas
cmp
stc
out
fistps
test
mov
mov
outsb
popa
int
js
pusha
addr16
ja
sub
or
add
mov
les
rorb
in
test
fisttpll
adc
imul
or
mov
jmp
sbb
inc
inc
cld
xor
stc
xor
mov
fildl
push
nop
xor
out
cwtl
ja
push
push
xchg
xorl
stos
lods
clc
sub
mov
push
mov
frstor
imul
jmp
inc
rorb
lret
push
sub
call
jg
push
mov
xor
cli
mov
cwtl
xor
jnp
sub
sbb
mov
pop
mov
into
aas
jg
nop
mov
into
fwait
jo
sahf
loop
cmp
adc
mov
and
std
xor
mov
xchg
test
mov
test
push
mov
pop
or
addr16
mov
push
sbb
in
rorl
je
lods
mov
cmp
xchg
jecxz
cmpsb
data16
mov
mov
add
lahf
xchg
lret
fwait
jl
fcom
jmp
jb
fmull
arpl
push
jbe
lock
loop
arpl
sbb
aam
add
movsb
mov
jo
lea
mov
add
in
inc
mov
xchg
or
call
nop
sbb
scas
ja
loope
adc
mov
sar
jmp
aaa
mov
je
sub
popf
test
mov
lock
into
sub
call
sbb
fsubl
mov
outsb
dec
sti
mov
cwtl
sbb
inc
mov
xor
in
sbb
outsb
push
mov
sahf
pop
clc
lds
pop
aas
adc
js
in
pop
into
cwtl
subl
pop
flds
or
cmp
lea
and
mov
rcl
test
jecxz
dec
jae
sar
or
mov
ret
inc
testl
bound
or
movsb
push
mov
inc
jne
adc
push
in
scas
in
fs
fists
out
dec
std
mov
mov
xor
popf
dec
push
in
xchg
aaa
mov
leave
dec
mov
push
andl
lret
mov
rorb
loop
mov
in
lahf
fsubl
ljmp
jp
and
pop
orb
jns
loope
cmp
les
mov
and
movsb
aad
and
lods
neg
pusha
fsubrs
das
sbb
pusha
add
xlat
fstpl
out
fsubrs
cmpsl
je,pn
sbb
aaa
sbb
pop
icebp
cmp
andl
jl
dec
jae
mov
inc
cmpsl
cld
repz
aad
mov
inc
xchg
inc
in
mov
icebp
lods
mov
cmpl
stc
xchg
imul
std
pop
jl
jnp
addl
mov
dec
or
sub
jae
mov
or
xor
or
jmp
push
divl
push
out
cmp
jns
fidivs
and
jo
insl
das
sar
mov
or
or
lret
repz
and
pop
push
or
lahf
pop
sbb
jle
or
and
lods
test
clc
ret
mov
outsl
dec
test
add
icebp
jnp
fidivs
or
cmpsb
pop
filds
imul
push
pop
sub
call
bound
outsl
cld
pop
mulb
test
inc
push
fxch
xor
subl
cmp
dec
call
jmp
pop
pushf
cwtl
out
jb
mov
mov
loope
mov
jge
or
cmp
mov
stos
fcmovbe
lods
rcrl
jmp
dec
scas
inc
mov
inc
ljmp
mov
mov
mov
into
mov
popa
push
test
push
jns
mov
add
dec
or
movsl
push
lds
shrb
inc
push
ja
ja
sbb
test
hlt
mov
add
inc
icebp
outsl
mov
out
cmp
testb
sub
fwait
aaa
inc
fisubl
arpl
test
std
pushf
imul
lret
mov
dec
xlat
mov
jo
ffreep
fwait
lret
inc
xor
ficomps
and
xchg
push
mov
dec
mov
or
arpl
out
xor
jg
push
lods
dec
insl
hlt
addr16
cld
and
dec
pop
add
jno
inc
dec
dec
mov
jge
jecxz
sbb
bound
std
aad
xor
loopne
aad
int
hlt
mov
scas
cwtl
sbb
and
jno
notl
adc
push
shrb
xor
popf
aam
push
out
repz
fcoms
pop
hlt
insb
sahf
and
std
enter
push
mov
pop
lcall
mov
fidivrl
inc
jle
out
dec
nop
inc
pop
sub
push
xor
mov
lcall
cmpsb
shr
je
andw
movsl
sbb
pop
cmp
inc
push
insb
imul
fadd
in
inc
xchg
jb
sti
xor
xchg
and
sub
mov
clc
xor
pop
sub
or
pop
mov
addl
int
jl
mov
leave
nop
fildll
jae
mov
jb
cmp
out
call
sti
mov
dec
jp
lods
aas
adc
pop
push
push
icebp
jg,pn
out
aad
cmpsb
sub
sub
adc
and
or
ret
jmp
adc
int
xor
or
jbe
mov
xor
outsb
fisubrl
adc
bound
cmp
add
mov
fwait
add
cmp
mov
out
clc
dec
pop
pop
cmpl
repnz
test
addr16
jae
push
shll
jle
push
ret
popa
jb
or
pushf
mov
aaa
pop
adc
jae
aam
push
icebp
jo
push
sub
in
mov
aad
je
cs
mov
push
dec
in
jl
add
addr16
data16
xor
push
add
cltd
addb
mov
xchg
pop
pop
pop
ja
or
sub
push
adc
pop
mov
fidivrs
dec
fsts
into
out
or
mov
cmpsb
inc
stos
test
lret
sub
cmc
lahf
xchg
dec
xchg
decb
mov
sbb
pop
pop
jg
je
push
rcrb
xor
mov
pop
sbb
or
aad
fnsaves
loopne
add
jl
adc
pop
xchg
popf
out
dec
cmp
jbe
or
enter
insl
mov
push
data16
dec
fbstp
pop
iret
jle
adc
jl
jae
mov
loopne
inc
loopne
inc
jnp
mov
pop
sbb
or
xchg
pop
lock
mov
jnp
nop
inc
inc
adc
inc
bound
add
sbb
mov
out
push
in
addr16
inc
mov
cmp
adc
aaa
inc
mov
xor
pop
repz
mov
adc
paddusw
in
aaa
jl
cmpsl
xor
test
sbb
fldcw
dec
xchg
rclb
xchg
scas
fs
inc
push
test
in
jecxz
adc
arpl
bound
loope
adc
pop
scas
jmp
mov
movsb
add
jae
mov
add
aaa
dec
inc
fnstsw
das
movsl
in
pop
popf
insl
mov
push
and
inc
aad
xchg
push
repz
mov
dec
jns
testl
inc
sub
xchg
imulb
movsb
xchg
nop
sub
mov
mov
mov
mov
pop
fcoml
and
imul
ret
cltd
popa
test
mov
int3
ds
xor
imul
ja
test
jnp
or
cltd
cmp
jg
mov
jecxz
int
add
xchg
cmpsb
out
in
pop
mov
fbstp
xchg
shrb
mov
and
loop
cmpsb
lret
test
sti
hlt
jmp
lods
and
aas
push
cmpsb
jns
push
cmp
or
cmp
cwtl
pop
and
or
fdivs
ds
sbb
jb
popa
cli
jnp
lods
xlat
adc
rcl
xor
push
fs
test
sbb
sbb
and
pop
inc
pushf
adc
dec
pushf
js
xchg
testb
cmp
hlt
orb
inc
scas
enter
call
cmc
insl
test
mov
and
movsb
cmp
shrl
xchg
enter
sbb
mov
mov
mov
pop
pusha
mov
loop
dec
mov
mov
dec
and
ss
scas
xor
jmp
jne
pop
inc
inc
inc
dec
jge
ficoml
pop
loop
pop
sbb
in
jmp
mov
mov
adcl
mov
push
add
int
lret
imul
jmp
jae
fwait
jnp
movsb
jmp
lods
ja
cltd
adc
inc
pushf
nop
std
pop
test
add
rcll
call
pop
jo
fcmovnb
stos
repz
insl
int
mov
lods
push
mov
hlt
arpl
loop
dec
xchg
mov
inc
fiadds
insb
mov
imul
fwait
cltd
jno
cmp
loopne
push
mov
js
inc
daa
push
cmp
sub
std
and
inc
xor
cmc
push
in
adc
or
add
pop
into
dec
push
push
ret
and
int
jmp
loop
inc
cwtl
push
ret
fistpl
rorl
pop
and
repnz
add
ja
ret
jno
imul
outsb
jo
ficomps
inc
pop
int
push
mov
int
xchg
mov
imul
cmc
inc
jns
push
int3
jmp
mov
cmp
cmp
or
xor
cld
inc
cwtl
rorl
in
and
add
jmp
push
xor
xor
xchg
push
cmpsl
push
adc
xchg
aam
push
xchg
fistl
add
leave
sbb
lcall
ja
or
push
mov
fisubrs
mov
ret
push
mov
test
push
adc
stos
jl
sbb
xor
outsb
cli
pop
pop
push
sub
int3
add
mov
int3
add
fnstenv
jl
clc
je
mov
cmp
add
xchg
ss
dec
and
test
push
sub
and
or
sbb
sbb
outsl
mov
int3
imul
sbb
cli
or
scas
mov
inc
and
aam
push
cs
fcomp
fimuls
shl
shll
push
subb
xor
add
pop
sti
pusha
jle
in
clc
jecxz
mov
jg
add
xor
xor
cmpsb
push
dec
push
jmp
cmp
xor
gs
xchg
int
test
sbb
je
outsl
push
push
and
mov
sbbl
dec
aas
daa
xor
xor
and
cli
xor
gs
dec
addl
cmpsb
add
pop
mov
lock
sti
pop
or
insb
cmc
mov
mov
push
pop
jae
cli
cmp
popa
lcall
loopne
shlb
adc
sahf
es
out
sbb
cli
inc
xchg
inc
imull
dec
jne
inc
mov
incb
push
sbb
inc
xor
sub
loope
ret
sbb
popf
sti
mov
jns
or
shl
imul
jne
inc
adc
mov
fwait
jae
sbb
and
js
cmp
iret
xor
cmp
int
pusha
aam
pusha
xor
lret
mov
lret
int
pop
rcrl
jmp
int3
dec
and
das
xlat
jbe
push
lea
push
das
inc
shrb
mov
ja
gs
or
scas
cs
cli
je
inc
es
pop
push
or
inc
fprem1
dec
sbb
ljmp
int
inc
push
ret
incb
xchg
je
je
mov
push
inc
dec
lods
jmp
ds
jmp
push
jecxz
cs
mov
test
mov
clc
mov
pop
test
iret
jo
out
clc
push
push
sbb
or
imull
int3
gs
pop
mov
ret
lods
lret
popf
aas
notl
arpl
je
xor
and
sbbl
fistl
in
mov
pop
test
es
repz
and
std
sub
xor
mov
or
pop
adc
push
add
inc
in
dec
sub
xor
push
sbb
jmp
test
sub
cmpl
sarl
sbb
lret
mov
popa
add
and
and
daa
cld
or
inc
jp
dec
fdivrs
push
cltd
sub
lahf
mov
xorl
aam
cmp
pop
inc
mov
enter
outsl
sbb
adc
dec
jmp
dec
xchg
dec
inc
cmpsb
mov
daa
push
pop
rolb
sub
jg
dec
xchg
push
pop
mulb
pusha
mov
lock
and
jnp
sub
test
add
scas
jo
or
sub
jb
imul
jge
mov
or
inc
sbb
es
mov
mov
or
jns
jns
negl
icebp
xchg
dec
inc
ds
bnd
sbb
push
add
imul
lahf
divps
cwtl
mov
cltd
cld
scas
pop
dec
adc
xor
ss
push
sub
xchg
pop
push
or
dec
cmp
add
jno
and
stc
scas
add
insl
outsb
testb
sub
call
sub
add
or
inc
pop
in
lods
mov
mov
popf
test
add
pop
cli
xor
fidivrs
ficoms
rcrb
int
icebp
cs
adc
lret
rcll
and
push
sub
lods
lahf
jg
cmp
fsubrp
cltd
mov
arpl
sub
sub
es
inc
daa
ds
and
push
mov
jo
jl
insb
fsts
sbb
daa
fs
add
ljmp
mov
cli
shll
dec
mov
aaa
loop
daa
int3
inc
xchg
mov
mov
dec
inc
push
iret
xchg
adc
cltd
addl
jae
mov
pop
stos
hlt
xchg
cmp
out
mov
mov
sbb
sarb
xchg
or
mov
or
mov
insl
sbb
fldcw
jmp
sbb
jge
pop
jo
repnz
add
jle
fmull
mov
addr16
push
or
popa
mov
aam
fstp
mov
mov
mov
and
sbb
dec
cmpsl
cmc
mov
in
jecxz
or
jecxz
lret
repz
mov
jmp
outsl
inc
push
adc
jmp
rcrb
adc
mov
jmp
test
cmpsb
daa
jle
nop
dec
mov
fbstp
ret
sbb
cld
pop
nopl
sub
push
inc
mov
js
mov
or
hlt
test
and
fstpl
imul
or
cltd
and
mov
dec
pop
shll
ret
inc
popa
push
shlb
xlat
loopne
xchg
fcompl
adc
and
and
or
mov
add
int3
mov
xor
imul
push
daa
ficoms
cli
and
mov
adc
xor
dec
adc
dec
scas
and
mov
mov
mov
movsb
dec
repnz
std
jbe
les
loopne,pn
ror
dec
xchg
lds
rorb
jnp
sahf
cs
adc
pop
aam
mov
pusha
mov
ja
mov
shr
xor
jle
xchg
and
andb
shll
insl
and
out
stos
jne
mulb
aam
fs
and
hlt
pusha
inc
mov
inc
add
fsubl
pop
fbld
push
notb
loop
and
imul
mov
lods
pop
lcall
rorb
imul
bound
adc
rcl
add
call
sub
dec
push
mov
lea
xor
dec
lcall
xchg
add
dec
push
adc
pop
fistl
scas
pop
shlb
icebp
mov
mov
xor
pop
dec
mov
das
int
leave
iret
fsubrs
lcall
sub
ds
mov
add
sbb
rolb
push
jg
push
xor
xchg
scas
xor
es
scas
pop
xor
xchg
sub
jbe
push
shr
bound
jmp
jnp
and
mov
cld
test
les
add
popf
add
stc
or
jp
in
cli
cwtl
mov
orl
jl
inc
mov
mov
and
fwait
dec
mull
ja
jae
test
test
sub
hlt
xor
mov
push
lret
jmp
ja
leave
scas
dec
dec
push
ja
adc
popf
aaa
mov
jbe
icebp
push
sbb
mov
ljmp
pushf
xchg
fidivrs
and
shrb
loope
test
pusha
fsubrs
or
sbb
shrl
sbb
stc
mov
mov
and
lods
outsl
aas
dec
movsb
movsb
pop
inc
dec
subl
and
incl
sub
ds
xor
nop
in
repnz
shll
fsubrl
jp
jge
push
out
clc
add
jns
bnd
pop
iret
xor
ds
imul
scas
lea
and
leave
inc
nop
adc
push
ds
insl
out
pop
jg
pop
dec
aam
xchg
rolb
pushl
cmpsl
jle
fdivrp
inc
lea
out
mov
out
mov
rclb
dec
dec
push
inc
or
xchg
cmp
adc
cs
or
adc
mov
dec
jbe
add
ds
cmp
inc
jl
aad
jae
jno
and
int
adc
xchg
mov
adc
addr16
push
gs
imul
testl
subl
jle
scas
add
mov
icebp
sbb
les
and
xlat
or
sbb
stos
mov
sub
add
test
push
es
loop
dec
out
xor
lret
shll
pop
iret
inc
fst
jns
dec
adc
push
and
lret
add
xchg
dec
cmp
sub
mov
loope
and
xor
lea
adc
cmpsb
stos
jp
rolb
imul
inc
cmp
fldl
inc
daa
xor
pushf
add
push
pop
in
or
adc
rorl
jmp
das
adc
movsl
xor
lods
jb
shrb
mov
add
jg
push
mov
jnp
adc
xchg
sbbl
or
xchg
sbb
pop
lods
jo
int3
lock
mov
jbe
out
and
xchg
popf
inc
cmp
std
stos
addr16
pop
mov
mov
repz
insl
xor
imul
lcall
cmp
mov
xchg
xor
add
inc
fisttps
cmp
mov
js
mov
jns
lock
sbb
mov
loope
cmp
fists
sti
jns
mov
push
into
mov
faddl
pop
lds
inc
cmp
sub
lret
es
jb
xchg
adc
rorl
fimuls
rclb
pop
daa
std
cmp
mov
out
in
mov
imul
inc
push
mov
js
mov
into
test
clc
cwtl
jne
pusha
popf
mov
bound
mov
pop
sbb
repz
in
icebp
push
bnd
mov
cltd
cltd
jg
push
pop
dec
add
and
jo
sub
cmpsl
aaa
inc
stos
push
insb
shll
or
ficoms
add
stc
cmp
push
jl
mov
mov
mov
or
push
femms
test
pop
push
mov
out
mov
cmp
xchg
sub
mov
mov
and
aas
fidivrs
lods
jge
pop
clc
cmp
sbb
hlt
into
dec
dec
pop
mov
sub
cmc
push
mov
dec
sub
mov
adc
mov
inc
andl
daa
out
mov
inc
cmpsb
push
test
mov
add
into
lahf
sti
or
shlb
cs
cmpsb
cmp
mov
xchg
mov
jmp
xchg
push
jl
loop
fwait
mov
push
sub
dec
adc
sub
repnz
icebp
fdivl
sbb
fnsave
ljmp
dec
add
jecxz
sbb
outsb
mov
outsl
or
gs
xchg
jnp
cld
aam
fiadds
jg
cmp
test
sub
dec
shl
lock
pop
jecxz
test
push
adc
add
ljmp
or
mov
testb
call
lahf
push
xlat
bound
jmp
cltd
mov
pop
lahf
sub
sbb
push
jno
xchg
mov
xchg
or
cmp
xchg
sub
jb
pop
dec
push
leave
mov
out
aam
xor
insl
sub
cwtl
test
pop
jne
sub
inc
gs
ficomps
mov
inc
int3
jg
ljmp
add
mov
pop
cmp
xor
pop
fucomi
jno
xchg
mov
imul
sub
push
mov
and
or
es
lock
xchg
sub
sub
jmp
rclb
jecxz
sbb
mov
cmp
sahf
lcall
xchg
xchg
cmp
sbb
cs
pop
lahf
test
rcll
rcl
ficompl
inc
xchg
pop
sbb
cmp
clc
into
jge
cmp
mov
push
fs
ja
xor
pushl
lea
xor
add
sar
test
dec
test
loop
ds
pop
and
xor
mov
ljmp
sbb
and
arpl
xchg
xchg
xchg
xchg
mov
cs
into
adc
pop
pop
push
lret
lods
ret
rol
sub
cmp
mov
stc
mov
or
pusha
pop
mov
jb
sbb
adc
test
repnz
call
test
sarl
sbb
jmp
movsl
lahf
sbb
fcmovnu
or
xchg
nop
dec
jo
in
jne
sub
das
sub
and
lods
jge
jg
andl
fisubs
in
sbb
insb
out
jae
mov
pop
and
lea
lahf
mov
add
aas
daa
int3
mov
cmpxchg
fldenv
cmc
xbegin
into
add
in
adc
mov
push
cmc
fcmovnu
stos
jmp
jbe
inc
outsb
fcmovne
push
mov
xchg
aad
and
out
xchg
push
adc
add
lods
dec
loop
mov
mov
ss
adc
loope
pop
push
repnz
int3
add
std
mov
dec
inc
add
pushf
fcoms
xchg
outsb
jae
addr16
shlb
xchg
out
sub
insb
lret
pop
jb
jno
ret
test
push
cltd
leave
bound
pop
dec
rcl
std
aam
loop
rcll
xor
jmp
push
nop
clc
xchg
jno
insl
mov
test
pop
xor
pop
inc
ss
mov
inc
lods
or
sub
sbb
add
mov
push
inc
ja
push
sub
aaa
dec
add
and
test
out
cwtl
jge
mov
lock
or
pop
push
pop
push
push
xlat
xor
cmpsb
addr16
dec
in
cmp
inc
sbb
lods
stos
fnstsw
mov
mov
addb
cmc
shrl
popa
cmp
js
call
sbb
imul
sub
fs
popa
daa
rcll
jp
xor
add
mov
pop
lcall
and
std
lahf
rcrb
icebp
out
fidivrs
popf
cmp
andps
enter
jmp
test
adc
js
sub
movsl
loopne
fists
imul
btcl
add
imul
push
cmp
xchg
add
aam
in
into
sahf
rcrb
ds
fldt
pop
mov
insl
scas
fildll
adc
fcmovne
sub
inc
dec
cmpsl
test
gs
enter
mov
xchg
cltd
and
adc
or
fstpl
jg
cmc
sti
lahf
ds
push
push
movsb
xchg
cmp
aaa
frstor
adc
jecxz
roll
cmp
out
push
je
pop
inc
pop
stos
call
or
sbb
movsb
jns
mov
dec
fdivs
cltd
mov
mov
cmp
pop
push
inc
jnp
add
push
mov
rorl
inc
fcoms
sbbb
fnsave
bnd
int3
jg
inc
enter
add
inc
je
cmc
imul
insl
test
bound
or
int
pop
and
mov
xor
das
push
or
cmp
lea
shl
jo
shll
jb
add
sub
test
mov
cmc
pop
adc
leave
popa
add
jns
adc
fsub
stos
in
nop
sub
ja
cli
das
mov
mov
inc
mov
mov
pop
aaa
mov
arpl
add
cmpl
sbb
and
lcall
push
loope
and
dec
sahf
xor
lock
and
movsb
cmc
rcll
sbb
fldt
pop
sbb
ret
cld
push
pop
inc
dec
lahf
and
cmpsl
adc
shr
rolb
or
mov
repz
xchg
repz
and
lret
jnp
push
push
xor
inc
negl
dec
sub
into
xchg
cmp
lcall
rclb
shll
icebp
repnz
cmp
cmp
sub
or
popf
mov
sub
mov
dec
inc
mov
and
push
std
push
xor
push
dec
dec
adc
aad
dec
stos
popa
add
nop
mov
push
cs
inc
cmpl
push
clc
aas
adc
adc
sbb
stos
pop
adc
cwtl
and
cld
nop
sbb
mov
in
mov
leave
sub
mov
ret
jecxz
dec
pop
cmp
sub
or
mov
out
adcb
out
scas
sarl
xchg
jne
xchg
push
fucomip
add
aaa
into
ret
mov
adc
pop
cmp
inc
icebp
mov
mov
test
aam
nop
rolb
stos
popa
out
fwait
mov
mov
popl
mov
jae
movsb
adc
push
lods
mov
mov
and
cmp
pop
mov
jecxz
cwtl
push
inc
cld
aad
cld
pop
sub
in
xor
popa
mov
dec
inc
scas
stos
mov
out
fldt
lods
sbb
orb
cmp
sub
pop
mov
int3
aad
pop
fldln2
or
inc
lock
loopne
pop
scas
aaa
mov
fwait
jg
outsl
sub
pop
jnp
sbb
jne
fwait
or
stos
mov
lods
push
jl
xor
loop
mov
stos
mov
out
in
ss
pusha
negl
js
fimuls
movsl
jno
jp
push
out
xor
push
sub
jne
das
scas
sbb
adcb
jo
out
fisubrs
push
outsb
push
in
inc
loop
fildll
xchg
sub
ret
pop
xor
sahf
aam
fsubr
cmp
sbb
xchg
aad
jle
popa
mov
clc
sub
pop
stos
ret
fcomip
and
sub
lret
ja
xor
push
ffreep
mov
sub
mov
scas
insb
jnp
mov
rcrb
dec
fstpt
or
js
pop
lods
xchg
in
stc
mov
push
imul
movsl
jne
jecxz
xlat
fdivrl
cmpsb
pushf
les
test
pushf
inc
sbb
sub
aam
pusha
jge
and
in
adc
sbb
mov
setno
push
lds
push
push
dec
xor
add
pop
fldcw
sub
jno
mov
xor
adcb
loopne
mov
push
aaa
or
sub
add
and
and
stos
sub
loope
mov
lret
sbb
sbb
jg
pop
movsb
negb
dec
dec
mov
mov
inc
xchg
cmp
lret
push
push
or
mov
xor
subb
jle
jg
je
test
add
and
lds
jb
cld
in
shll
add
cld
scas
or
pop
cwtl
pop
push
int
pop
inc
popa
sbb
in
sbb
inc
lcall
mov
add
or
stos
fists
mov
cld
pop
dec
addr16
arpl
mov
imul
mov
or
inc
fcomi
jge
push
jmp
shlb
push
xchg
cmpxchg
inc
pop
mov
test
pop
xor
cmp
jp
push
jne
cmp
and
fildl
inc
mov
push
mov
pop
rcll
jl
notl
mov
lock
mov
add
xchg
jnp
mov
xchg
vshufps
xlat
and
dec
ja
jle
push
xchg
push
test
lret
mov
pop
fstl
jg
ret
lcall
push
add
iret
aaa
rcl
aas
jns
push
outsl
cmp
nop
sub
outsb
sub
cmc
xchg
dec
jno
mov
jmp
pop
pop
and
sti
mov
sti
add
push
push
sub
xchg
shrl
pop
cltd
xchg
fisubs
and
push
mov
lock
and
nop
out
out
xlat
test
xlat
cmp
aam
sbb
mov
dec
repnz
out
and
mov
out
mov
push
dec
mov
test
fs
pop
incl
cwtl
jo
sbb
mov
test
add
aam
xchg
add
and
cmovo
lcall
gs
jg
pop
mov
push
movsl
in
and
inc
push
orb
lods
pushf
and
in
adc
not
pop
jo
test
sub
out
cmp
lret
insl
and
jnp
jae
xchg
rcrl
adc
add
add
lcall
pop
cmc
mov
push
and
xor
push
mov
add
out
dec
add
add
ss
sub
push
into
stc
and
and
adc
cmpsl
sbb
xchg
stos
inc
push
fcmovnu
icebp
mov
and
jp
mov
es
subl
jp
add
aaa
mov
push
movsl
testl
lcall
sub
out
das
push
xor
or
sub
xor
and
inc
and
adc
jg
aas
add
pusha
jl
fildll
cmp
adcb
inc
fucomi
xlat
xor
adc
ss
dec
mov
loope
dec
test
or
sbb
out
hlt
jmp
pusha
sub
jb
and
sbb
cwtl
sti
mov
adc
leave
sub
mov
mov
push
mov
dec
or
addb
inc
xor
push
ljmp
lret
lcall
sub
test
xchg
cmp
pusha
cmpsl
pop
leave
and
mov
mov
inc
mov
adc
js
mov
cmp
int3
xchg
mov
sbb
pop
shlb
inc
jle
jns
repz
out
pop
and
add
into
insb
adc
xchg
xchg
shll
dec
or
pop
sbb
mov
xchg
jle
xchg
das
push
not
xor
or
repnz
adc
enter
lock
pop
and
dec
sub
and
sbb
mov
popa
or
mov
mov
pop
or
sti
push
xor
sahf
xlat
lods
mov
ret
fwait
sbb
aam
ficoms
jge
out
inc
mov
xchg
out
mov
jl
dec
pop
push
or
mov
in
imul
pop
mov
xchg
cmp
icebp
loop
inc
sub
or
fistl
les
std
dec
cmpsl
fstl
xorl
inc
icebp
test
jno
push
stos
fisttpl
mov
inc
jge
or
cmp
mov
cmp
jbe
iret
das
jecxz
mov
xorb
in
jge
xchg
adc
adc
mov
stos
insl
addr16
add
test
mov
lds
mov
and
clc
andl
sub
imul
mov
pop
and
cli
test
cmpsl
mov
daa
dec
cs
add
xor
scas
adc
xor
in
jl
mov
jp
xchg
push
cmc
mov
aas
in
cmp
xchg
adc
imul
jg
subl
das
xor
sub
int
jle
add
clc
push
sub
ficompl
xchg
dec
or
pop
add
ficompl
mov
enter
out
sbb
adc
popa
repnz
inc
adc
or
lods
data16
xchg
lods
dec
push
lds
push
test
sti
and
mov
pop
inc
mov
cmpsb
mov
aad
ja
clc
push
loopne
cltd
jo
mov
push
orb
cmc
cmc
xchg
mov
pop
outsl
mov
mov
xchg
das
je
push
or
pop
pop
ds
arpl
cld
lret
and
mov
test
popl
or
mov
hlt
ficompl
js
sbb
lahf
in
loopne
fmull
mov
mov
in
fwait
dec
divl
push
xchg
inc
push
dec
push
xor
mov
movsl
mov
jae
jecxz
jns
jnp
jp
and
adc
xchg
cmp
sub
dec
adc
dec
push
lock
mov
stos
add
mov
pop
dec
jne
out
mov
mov
cs
fwait
jl
and
jne
jae
ja
ficoml
int3
fsts
icebp
mov
mov
popa
xor
test
xor
cmpb
pop
bound
mov
test
and
pop
iret
aaa
pop
xor
icebp
pusha
aam
mov
mov
je
cmp
sbb
cmp
dec
outsl
xchg
aaa
mov
sbb
mov
xorl
xchg
inc
js
jmp
mov
stc
lret
fistpll
pop
ja
and
push
xchg
jno
orl
pop
dec
jg
mov
ret
push
ljmp
add
out
or
pop
adc
push
xchg
mov
loope
and
lret
outsl
lods
or
int3
popl
mov
testb
and
add
and
stos
ljmp
or
lcall
inc
fisubs
or
and
cld
mov
jecxz
sub
xchg
pop
cmp
cltd
cmp
shrb
addl
push
or
js
sub
cli
sub
cmp
sbbb
push
xlat
lock
cmpsl
mov
ret
mov
lahf
add
hlt
gs
ret
in
cmp
test
pop
orl
lcall
iret
scas
into
in
cltd
xchg
arpl
ret
sti
das
popa
pop
jmp
fldl
jg
psubsw
es
mov
xchg
mov
dec
ret
enter
jno
stos
sub
out
iret
dec
sub
addl
jl
aas
xchg
jp
in
jae
pop
push
sub
sbb
xor
add
cmp
xchg
pop
repnz
push
dec
add
push
shlb
xor
mov
xchg
pop
stc
sbb
std
mov
xor
rol
cs
daa
jno
int3
dec
jp
fwait
mov
out
mov
int
loope
jnp
stos
jge
out
call
lret
and
mov
push
ljmp
in
push
cmc
lret
mov
add
je
mov
adc
lea
std
test
xor
clc
ret
mov
pop
push
std
cmpl
inc
cwtl
into
sub
clc
mul
xor
push
into
push
mov
mov
xchg
scas
push
cmp
ror
aam
sub
sbb
ret
scas
inc
and
orb
add
push
mov
cs
jo,pt
mov
add
xchg
outsb
dec
mov
mov
movsl
lret
into
add
add
rclb
je
mov
je
pushf
push
in
xchg
lds
sub
inc
imul
aaa
sbb
push
and
test
pop
int3
mov
xchg
leave
outsb
rcrl
push
sbb
jmp
pop
pop
xor
cwtl
in
pop
xchg
push
mov
push
lea
insb
jns
and
fcmovb
movsb
addr16
dec
jg
add
shl
push
into
sti
mov
jns
fdivl
imul
arpl
int3
mov
inc
push
fcmovb
jbe
xchg
push
push
pop
fisubrl
xor
int3
inc
xchg
inc
ljmp
and
scas
inc
andb
push
xchg
push
mov
and
mov
aaa
leave
in
dec
sti
xor
push
fs
xlat
push
dec
movsl
or
sbbb
xlat
lock
rdpmc
scas
jns
sbbl
shl
xchg
xchg
stos
pop
mov
jb
lods
dec
movsl
shl
ljmp
sbb
pop
jno
lea
ret
lret
fcoms
movb
cmc
divb
push
stc
xchg
jae
dec
aaa
ds
popl
sub
xchg
mov
pop
stc
jnp
fs
repz
lods
lahf
cmpsb
xor
xchg
dec
pop
repz
mov
add
enter
out
xor
dec
push
es
cmpsl
add
rcrl
fadd
loopne
pop
mov
push
fs
dec
pop
stc
mov
sahf
stos
shr
cmc
test
lods
pop
sub
data16
test
jbe
popf
into
mov
or
add
push
pop
dec
sarb
lock
movsl
adc
lds
mov
lea
push
jmp
je
dec
jecxz
jle
xchg
jg
xor
adc
push
loop
loope
in
popa
and
pushf
or
or
jmp
arpl
cmp
adcb
pop
fsubr
jnp
mov
mov
into
inc
adc
mov
ret
shlb
notb
fst
mov
icebp
add
imul
mov
fwait
aaa
iret
cmp
icebp
in
rcr
sub
sahf
sub
push
or
outsl
push
cld
mov
lret
dec
rcrl
daa
cmp
xor
ds
xchg
btr
loopne
in
sbb
imull
fldt
or
adc
jae
in
dec
cli
scas
popa
rcrl
pop
fst
sbb
jp
clc
pop
nop
sti
xlat
inc
daa
xchg
and
outsl
push
dec
mov
mov
cmpsl
loope
xchg
mov
cmp
sub
add
push
inc
inc
sti
push
mov
aad
and
mov
inc
bound
and
jns
or
daa
sbb
in
insb
xchg
cmp
cmp
jae
sbb
test
inc
mov
cmp
sub
jne
pop
pop
repz
loopew
inc
test
call
lret
js
gs
add
ljmp
in
mov
xchg
pop
addr16
add
mov
in
dec
cmp
xchg
sbb
and
adc
sub
nop
mov
dec
mov
out
lea
ret
ja
dec
insl
and
ljmp
jnp
orl
cmpsl
scas
dec
call
ljmp
jnp
test
mov
mov
sbbl
mov
in
lds
imul
arpl
out
and
test
push
jae,pn
xchg
xor
and
ffree
frstor
int3
pushf
mov
pop
scas
rol
sub
xchg
push
jecxz
pop
cmp
pusha
or
xchg
sahf
std
cltd
xchg
xchg
jge
icebp
add
addl
pop
out
push
sbb
js
jnp
je
stos
jne
lahf
je
dec
ds
sarl
or
out
add
sarb
push
sub
or
imul
std
dec
lahf
jle
test
fdivrl
dec
pop
arpl
fnsave
sti
inc
and
mov
out
mov
mov
idiv
aas
cmc
add
iret
mov
aad
cwtl
mov
fildl
xchg
ret
fstps
cmpsl
fisubrl
in
cmp
inc
in
push
sbb
pushf
aas
push
divl
pop
inc
data16
push
add
js
ss
sarb
rcrl
mov
and
jae
pop
pop
mov
sbb
or
je
push
orb
push
push
mov
push
aas
gs
mov
ja
scas
nop
jge
lods
sbb
ljmp
jl
inc
inc
dec
cmp
adc
icebp
push
jge
hlt
je
imul
pushf
hlt
or
jp
xchg
mov
add
jge
xor
jg
dec
push
jnp
outsb
mov
and
sti
pop
dec
mov
dec
loop
jo
adc
xchg
adc
inc
sbb
aam
mov
test
ficoms
negl
pushf
lret
sub
shl
das
lods
cmc
data16
fildll
jnp
pop
sahf
add
fwait
int
inc
outsb
mov
push
pushf
sbb
scas
push
lcall
adc
sub
xchg
and
cmp
cmpsb
mov
jns
mov
xor
xchg
enter
outsb
pop
ds
in
xchg
imul
fldl
mov
jecxz
add
dec
shlb
inc
daa
and
stos
push
jo
sbb
fsubrs
rclb
subl
gs
fcoms
jmp
imul
popa
pushf
mov
cmc
inc
xor
add
into
gs
fistl
lret
or
lds
fnstsw
inc
imul
cmpsb
out
sbb
pop
add
or
dec
out
and
ljmp
insb
ja
jno
jae
lock
leave
jne
xchg
movzwl
data16
ljmp
jecxz
lock
mov
test
dec
mov
imul
adc
mov
dec
jbe
repz
mov
push
push
add
imul
out
cs
scas
mov
mov
dec
incb
jns
movl
jbe
lea
jae
pop
push
addr16
ret
mov
jnp
xchg
hlt
push
in
popf
adc
cmc
jnp
fs
negb
fnstsw
cmc
testl
adc
sbb
in
pop
mov
mov
sbb
insl
mov
mov
fmuls
inc
stc
xchg
ljmp
xor
fsubl
out
daa
inc
sub
shl
subb
lret
movsb
and
sub
cld
lds
imul
je
mov
sbb
pusha
xchg
and
push
dec
pop
sti
xchg
sbb
addr16
clc
push
mov
in
movl
cmp
dec
popf
xlat
inc
xchg
jle
xchg
popf
cmp
int
addr16
and
sub
mov
fisttpll
cwtl
and
lret
mov
lods
movsl
pop
and
into
ljmp
mov
ja
cvtpi2ps
pop
stos
jae
adc
mov
icebp
mov
adc
cmp
out
adc
test
fnstsw
jbe
dec
daa
out
fstps
lods
mov
cmpsb
repz
mov
sbb
pop
inc
lret
enter
loope
cwtl
mull
ffree
mov
add
adc
xor
pop
popa
addr16
pop
add
into
push
mov
sub
dec
in
adc
mov
rol
mov
mov
sub
ljmp
pop
ljmp
shll
shl
sbb
pop
subb
adcl
call
cmp
cmp
mov
test
jge
push
jb
ffree
pop
jnp
and
jg
scas
sbb
insl
das
mov
sar
mov
mov
das
shlb
fisttpl
jecxz
push
and
mov
dec
es
mov
pop
fmull
dec
pusha
and
or
arpl
mov
or
icebp
xor
push
in
jle
aam
and
testl
inc
inc
ljmp
and
les
hlt
dec
cmpsl
idivl
mov
push
fdivrs
mov
sbb
mov
add
or
inc
jne
pushf
pop
push
fcomip
stc
sbb
mov
in
repnz
mov
imulb
mov
insl
mov
rcl
or
rclb
push
or
pop
push
sub
inc
add
sub
shrb
flds
pusha
add
mov
lea
mov
lock
pop
and
xor
sti
sub
sbb
dec
inc
out
cli
push
push
mov
icebp
jecxz
repnz
push
fwait
push
jo
mov
cs
pop
shl
repz
push
js,pn
sbb
xchg
push
sub
mov
lock
push
in
mov
dec
and
pop
notb
imul
or
shlb
or
cmp
push
dec
data16
push
sub
int3
out
repnz
sub
push
push
mov
cli
jp
sbb
and
es
xchg
xor
xchg
lret
imulb
movsb
mov
int3
pop
cmp
aaa
outsb
mov
xchg
xor
adc
adc
mov
mov
test
test
loope
pop
cwtl
mov
mulb
fucomi
jp
inc
outsb
sahf
shr
repnz
into
xchg
pop
xchg
add
jmp
idivl
bound
xor
push
jl
mov
aam
call
dec
add
outsl
inc
fsubrs
xchg
xlat
push
fldl
fs
ljmp
aaa
xor
and
dec
and
xchg
enter
cmpsb
mov
aad
les
notb
push
je
fidivs
sub
loopne
lcall
scas
aad
aas
cmp
cmp
sar
xchg
out
jge
add
push
imul
test
pop
shll
sbb
xor
sbb
jp
test
inc
cmp
pop
scas
jecxz
test
cs
andl
push
cwtl
dec
or
lock
and
push
shrb
mov
mov
test
lret
mov
call
xchg
popf
sub
inc
pop
repnz
and
adc
dec
mov
cld
rorb
push
or
push
je
push
mov
mov
out
jae
mov
push
mov
pop
jp
stos
jnp
push
mov
js
movsb
add
imul
mov
push
dec
xor
outsl
movsb
popf
out
or
mov
xor
mov
das
lock
lea
lcall
pop
dec
in
testb
pop
dec
jno
popf
add
imul
fadds
lods
xlat
adc
insl
adc
pusha
add
xchg
movsl
gs
mov
ja
out
pop
jae
fwait
cmp
add
push
shrb
pusha
in
loopne
jg
push
fs
xchg
loope
jmp
sti
xchg
inc
jne
ret
mov
and
clc
dec
imul
sbb
push
mov
and
sbb
pop
jo
js
or
dec
lret
sub
sub
faddp
mov
lds
jae
in
adc
pop
xchg
mov
mov
loopne
jnp
jle
daa
dec
xlat
adc
xchg
cmpsb
sub
lcall
aas
xor
daa
sub
imul
fs
scas
mov
fnstenv
dec
ds
adc
mov
clc
lret
or
insb
or
and
mov
adc
mov
dec
cwtl
sub
push
test
aam
push
xchg
mov
shrb
sahf
icebp
rcl
sbb
mov
jno
cld
sub
pop
mov
push
or
mov
int3
xchg
push
cs
scas
je
jae
cltd
pushf
in
inc
or
jnp
pop
inc
hlt
in
mov
rorl
lret
mov
jbe
mov
xchg
std
jne
xchg
inc
dec
stos
jl
loope
in
in
pop
mov
sbb
jo
pop
mov
xor
mov
pop
xor
fsts
push
inc
xchg
mov
dec
hlt
andb
xchg
shrl
inc
std
leave
mov
dec
int
push
iret
mov
out
ret
push
iret
in
inc
xorb
and
ds
mov
repnz
insl
mov
les
mov
int3
jmp
pop
scas
xchg
or
adc
adc
and
shll
fiadds
iret
pop
push
jmp
cltd
jg
add
push
sub
pop
icebp
mov
cltd
icebp
mov
lea
movsl
sbb
fisubrl
mov
xchg
insl
adc
cs
cli
push
jno
testb
test
adc
mov
cmp
pop
add
and
fisubrl
sub
lret
mov
dec
push
sub
xlat
aaa
adc
xchg
lds
adc
insb
lret
push
leave
in
jl
inc
pop
mov
sbb
cwtl
ds
inc
insb
out
mov
adc
and
loope
inc
mov
or
cmpsb
push
mov
dec
adc
fldln2
fs
int3
aam
mov
add
push
or
jge
pop
dec
fxam
adc
int
jb
mov
imul
and
sbb
mov
push
inc
sub
push
and
xchg
cli
jb
stos
loop
pop
mov
das
js
jle
fisubrs
and
scas
mov
gs
aam
cmp
mov
loopne
dec
sbb
repz
das
lods
mov
jnp
or
je
cmpsb
decl
test
out
addr16
xchg
sub
inc
inc
mov
or
ds
pop
mov
cld
les
in
mov
jne
ljmp
pushf
pop
inc
or
push
and
pop
insl
shl
mov
inc
add
mov
and
cld
jg
sub
mov
cmpsl
adc
and
cwtl
shrb
mov
lds
add
add
rcrb
cmpsl
lods
test
jne
cmp
jmp
push
pop
cmp
jl
inc
pop
cs
popf
stc
das
test
sahf
push
jg
clc
ret
push
bound
ljmp
dec
cmpsb
mov
pop
inc
mov
mov
add
stos
pop
adc
add
fistps
decb
inc
mov
movnti
mov
sub
inc
mov
push
imul
jo
aaa
stc
xlat
or
xchg
jo
or
cmp
xchg
xchg
pop
arpl
or
mov
adc
jge
xchg
fcmove
in
insl
pop
rol
inc
push
movsb
es
ds
les
jge
sbb
push
cmc
sbb
push
insl
cltd
inc
stos
inc
out
sub
cmp
mov
pop
fmull
cmp
jmp
flds
and
imul
sbb
push
jp
push
or
pusha
in
lahf
bswap
imul
iret
imul
mov
or
cmc
jge
lret
xlat
jo
popa
and
jb
repnz
push
rcr
and
shll
or
cltd
sbb
stos
cmp
enter
and
jl
or
pushf
addb
xor
jno
in
jnp
inc
imul
xchg
jb
orps
sbbb
push
push
pop
fnstsw
dec
lods
fdivl
inc
outsb
cmpsl
sbb
test
add
push
aad
adc
lahf
mov
addl
inc
ds
mov
xlat
sarl
ficomps
shlb
popa
test
sub
scas
cli
mov
sbb
movsb
fnstcw
subl
jbe
lret
pop
jecxz
and
clc
test
leave
sahf
cmp
pop
dec
call
jae
mov
cld
sbb
sub
xchg
mov
push
push
adc
mov
dec
pop
lret
xor
push
jbe
test
lret
jecxz
repz
mov
loopne
pop
cmp
xchg
push
add
mov
fwait
pop
inc
rcrl
jge
dec
dec
aam
fwait
cmp
jge
nop
push
add
popa
push
sbb
es
push
cmp
jne
sub
ja
aas
lea
jo
insb
repnz
rcrb
cs
dec
jmp
int3
fistpll
mov
mov
test
addr16
mov
nop
inc
shrl
shrb
add
cld
mov
shll
sub
jge
jo
sbb
jae
int
push
testl
pop
repnz
sub
mov
daa
cmp
in
cmc
push
popf
mov
in
pusha
rcrl
push
inc
fwait
pop
lret
or
push
popf
imul
orl
xor
and
bound
jge
das
arpl
or
pop
aas
add
stc
add
mov
ror
cwtl
jmp
pop
int
jno
and
and
or
shl
dec
pop
jg
andb
mov
push
lods
mov
xor
or
sbb
pop
push
mov
adc
sahf
fistpll
rolb
daa
pop
inc
shll
stc
mov
dec
lea
sub
inc
xor
pop
popa
or
xchg
and
cmpb
xchg
lea
js
or
add
imul
adc
and
xchg
cmc
addr16
xchg
mov
xlat
push
dec
iret
lock
lock
xchg
push
movl
jb
test
pop
int
imul
ret
int3
pop
jae
cld
sub
pop
rorb
mov
fstpt
adcb
lcall
xchg
and
cwtl
xchg
das
cltd
or
cmpsb
mov
neg
xchg
mov
jb
mov
jbe
or
push
cmc
sarl
pop
push
mov
lret
and
mov
inc
dec
or
mov
mov
jne
lods
mov
lods
out
or
push
cmp
push
rcrb
sub
out
push
nop
push
cwtl
fisubrs
sbb
jnp
push
cs
in
xor
mov
sarb
mov
sbbb
jbe
out
fcoml
cmp
fidivrs
add
or
aad
sub
ret
mov
pop
cltd
xor
cmp
lret
fidivrl
mov
aaa
cmp
jns
call
rcrb
push
sub
xchg
push
lock
fdiv
lcall
ja
cmc
in
fcoml
jle
dec
xor
jmp
lea
in
pop
xchg
pop
jmp
cmc
inc
stos
sub
xor
xchg
rcl
mov
mov
mov
dec
mov
xlat
les
xor
loop
xchg
test
popf
and
lret
inc
movsl
mov
sbb
and
and
xchg
aad
leave
mov
sti
push
sbb
sahf
or
pushf
push
sbb
or
adc
ret
pop
vdivps
jmp
mov
repnz
or
neg
adc
sbb
ja
std
adc
loopne
scas
cmp
jno
jns
or
das
mov
jo
pop
inc
jl
adc
lods
pop
icebp
pslld
sbb
push
pop
dec
add
or
and
xor
out
dec
xchg
and
aaa
int3
adc
jo
add
mov
imul
xor
adc
push
dec
add
jle
fldcw
xchg
inc
push
nop
mul
fcmovnbe
in
pop
pusha
ss
loop
mov
enter
daa
jp
pop
gs
cmp
adc
sub
popa
bound
sarb
add
dec
sub
jb
insl
std
or
add
das
adc
or
add
movl
xchg
dec
gs
jnp
xlat
hlt
adc
rolb
pop
mov
lds
mov
jl
add
out
jmp
cmp
out
pop
or
push
daa
jl
add
arpl
es
jle
jnp
into
dec
dec
jbe
shlb
push
and
inc
andl
sub
in
loope
mov
outsl
xor
push
mov
push
xor
loop
push
mov
mov
lret
call
lret
insb
sub
jg
aaa
dec
out
xchg
ret
mov
adc
shlb
sti
mov
jl
scas
xchg
in
aaa
aam
xchg
push
stc
clc
cmp
xchg
imul
aas
lds
test
mov
or
mov
bound
push
aaa
cmp
sub
mov
mov
cmpsb
popa
sub
sbb
mov
das
int
lcall
sbbl
int
popa
inc
push
repz
add
add
imul
int3
into
stos
and
stc
cmp
jne
and
cmp
mov
mov
fwait
je
nop
rcrl
and
and
test
pop
xchg
push
mov
cmp
add
mov
hlt
jl
les
inc
fsub
push
mov
shll
push
rcrl
sbb
fcom
out
std
int
rclb
js
lret
sbb
or
mov
les
in
xchg
loope
rclb
jmp
jbe
jl
pop
and
iret
js
mov
mov
aas
clc
and
into
dec
lea
dec
push
jmp
and
and
mov
lahf
dec
es
push
es
adc
fwait
data16
fbstp
rcrl
xchg
push
or
jge
dec
repz
mov
test
dec
mov
addr16
scas
and
push
in
xor
push
mov
pop
cmp
inc
and
add
or
gs
mov
repz
mov
mov
aam
test
sti
adc
dec
dec
stc
inc
jmp
cmp
ficoml
cwtl
aaa
mov
and
mov
or
mov
icebp
cmpsb
add
jb
pop
inc
or
pusha
aad
lcall
inc
inc
fld
and
xor
dec
inc
enter
dec
xor
adc
jns
sar
mov
push
lds
cmpsb
sbb
pop
pop
xchg
push
rorl
sub
push
ret
xchg
xchg
cld
inc
ja
movsl
inc
les
jp
fmull
push
inc
lcall
or
negl
mov
cwtl
sub
je
lcall
loop
push
lods
movsl
cs
testb
xchg
and
xor
das
mov
int
ds
push
jg
xor
stos
fcomi
outsb
pushf
pop
rcll
or
adc
pop
call
mov
add
dec
push
mov
pop
sub
push
clc
cmp
fcmovbe
popa
pop
inc
test
mov
jp
ret
lcall
dec
mov
push
mov
xchg
dec
clc
popf
dec
xlat
mov
jbe
xchg
pop
sub
leave
cs
or
daa
pop
sub
jg
fwait
mov
inc
mov
dec
popa
icebp
pop
xor
addr16
addl
lds
and
xchg
dec
and
sub
sbb
loope
add
mov
cli
or
loope
sbb
mov
aas
jae
push
sub
mov
jge
xchg
out
pop
and
fidivrl
xor
and
mov
xor
fdivp
xor
nop
loopne
jp
loop
cmpsl
test
addr16
fs
mov
xchg
mov
or
add
mov
jmp
jg
insb
es
xchg
xchg
cltd
test
sub
lret
scas
xor
pop
repz
push
push
scas
jg
stos
jns
lret
leave
mov
into
lea
ss
scas
mov
sbb
pop
jne
pushf
fcomps
mov
das
xchg
mov
mov
js
dec
mov
test
in
dec
xchg
push
lret
fsubp
xor
sahf
pop
lock
stos
xchg
repz
jne
push
fisubrs
jle
andl
cld
add
xchg
divl
cltd
daa
pop
iret
and
out
xchg
lods
les
negl
sub
push
cmc
pop
cmpsl
fldenv
shlb
mov
mov
arpl
pusha
cmp
mov
test
or
insb
ljmp
pop
pop
hlt
pop
ficomps
or
int3
aas
inc
push
sub
jb
outsb
lods
xchg
add
lods
pusha
cmc
add
push
lcall
mov
xor
out
test
or
mov
pop
icebp
ror
and
in
in
out
outsl
jo
xor
test
pop
sbb
sub
sub
jae
popl
imulb
mov
in
push
jp
add
cmp
and
sbb
insb
inc
rorl
fcoml
mov
cwtl
iret
sahf
dec
test
sub
ja
aaa
js
jne
add
add
lock
push
out
scas
gs
daa
leave
cld
clc
xor
sub
cmp
inc
cmpb
and
sub
mov
icebp
enter
xchg
ss
cmpb
or
dec
aad
xor
jecxz
aas
fisttpll
mov
jb
lahf
push
inc
or
cmp
leave
incl
jae
dec
xchg
jns
popf
cmpsb
mov
xor
std
imul
stc
sub
je
inc
addl
cs
add
pop
les
pop
or
cwtl
cmc
sub
push
jnp
cmc
mov
jmp
inc
dec
aas
push
pop
ja
dec
xor
mov
scas
lret
pop
ljmp
xor
frstor
lods
xor
xchg
shll
adc
test
cmpsb
ja
in
mov
faddp
les
test
push
clc
push
aam
xchg
sub
push
push
or
cmp
ljmp
or
aad
sbb
aam
popa
jge
xor
mov
mov
lea
cmp
adc
test
and
pop
in
sbb
mov
in
lahf
lcall
fistpll
outsb
pop
jg
pop
out
mov
dec
stc
sti
movsb
push
andl
mov
pop
sbb
and
dec
cmpsb
mov
pushf
aas
stc
lea
pop
pushf
lcall
jne
loopew
xlat
jo
dec
mov
inc
repz
push
xor
mov
mov
adc
mov
in
dec
pop
inc
outsl
mov
jnp
mov
mov
push
adc
inc
lret
cs
xor
stos
add
addr16
add
inc
mov
mov
movsb
cmpsl
xor
cmpl
mov
and
xchg
cmp
pop
lock
mul
cmp
ja
jp
ds
jbe
mov
fstpt
xchg
sub
jecxz
mov
shrb
and
or
mov
pop
lcall
adc
sahf
dec
adc
jmp
out
rorl
sbb
popw
push
test
mov
add
outsb
movsl
sub
inc
lret
and
sbb
popf
dec
mov
daa
push
movsb
mov
jns
push
xchg
loope
in
and
lods
pushf
xchg
mov
in
xchg
and
ss
es
aad
lret
jmp
je
nop
mov
imul
pusha
test
pop
mov
movsl
jge
push
int
push
and
adc
inc
inc
ret
repz
cmp
in
xchg
mov
lahf
daa
fstl
cmpsb
cmpsl
test
sahf
inc
xor
enter
xchg
mov
push
jb
in
cli
inc
lret
out
cmp
ficoml
cmp
gs
sub
repnz
lods
mov
idivl
or
xchg
jno
jmp
push
push
fidivrl
pop
imul
cmp
push
rcrb
js
adc
aas
cmpb
lods
sti
sub
stos
scas
pop
add
in
sub
decl
pop
fsub
pushf
add
aaa
mov
mov
push
jl
xor
mov
fnstcw
lock
out
or
dec
fistl
fistps
out
scas
loop
xor
add
test
lret
aas
test
sub
adc
scas
sti
push
add
scas
jae
iret
mov
out
ds
inc
sub
push
scas
insl
xchg
inc
jle
insb
test
mov
std
scas
bound
das
push
icebp
push
scas
push
in
daa
mov
mov
stos
lahf
inc
mov
mov
inc
mov
je
cltd
or
data16
pop
ljmp
fdivrs
lds
sbb
mov
mov
roll
out
jno
imul
inc
jecxz
into
pop
int3
int3
in
cwtl
jmp
inc
lret
lea
push
xor
mov
imul
sub
ret
jmp
loop
in
in
push
mov
sbb
xor
filds
mov
xchg
aam
aaa
pop
aad
orl
ja
aam
adc
dec
imul
sbbb
ret
mov
inc
push
mov
ljmp
adc
fiaddl
and
or
call
lock
jb
not
xchg
adc
and
inc
out
mov
xchg
push
in
and
insl
imul
jl
int3
push
lahf
add
mov
or
add
mov
adcl
dec
insb
fnop
adc
inc
jae
add
cmpsl
pop
and
jmp
mov
push
sahf
stos
fwait
sub
or
pop
sub
push
push
xchg
daa
inc
inc
jnp
sbb
ds
jp
shlb
pop
pushf
les
or
stos
shl
mov
cwtl
ret
test
pslld
sahf
adc
out
mov
or
icebp
daa
stc
inc
insl
ret
jno
rol
dec
ret
shlb
out
lret
int
mulb
clc
sbb
mov
push
es
pop
adcb
cmpsb
jg
xchg
cs
imul
dec
sub
inc
mov
out
mov
jecxz
or
iret
shll
cmp
jle
sub
xchg
adc
pop
xchg
mov
adc
push
mov
int
jb
movsb
ljmp
mov
mov
xchg
ja
ja
xchg
repz
cmp
add
mulb
fs
xchg
pop
imul
sahf
jp
xorb
or
mov
lods
test
aam
je
mov
stc
std
pop
aas
std
js
fldl2t
mov
pop
mov
and
sbb
and
inc
fwait
rcr
add
add
call
mov
cwtl
dec
lahf
push
rclb
xchg
movsl
int3
mov
scas
pop
add
cmpb
cmp
iret
lea
outsb
test
jmp
inc
repnz
out
push
rorl
and
add
push
bound
sub
pop
cmp
mov
ret
outsb
aaa
sub
jb
sbb
pop
push
data16
pop
shlb
mov
cmpsl
push
insb
jmp
and
mov
xchg
ja
popf
jno
add
mov
lods
rorl
push
sub
cmpsb
ss
sahf
adc
or
ud2
inc
insl
stos
out
out
push
repz
pushf
andb
fdivrp
es
outsl
out
mov
push
pop
dec
xlat
push
ror
mov
pop
sub
das
fbstp
jae
dec
pop
and
inc
dec
fistl
aas
cmpsl
mov
push
cmp
pop
mov
lock
mov
in
push
xchg
aas
cmp
jp
pop
pop
xchg
insl
inc
sbb
test
dec
cmpsb
push
mov
mov
bound
pushf
sbb
sahf
pop
ds
lea
call
test
das
pop
in
mulb
dec
into
jae
fbstp
xor
mov
lcall
ds
sbb
cltd
cwtl
cmp
fcomps
je
and
jmp
out
xchg
lret
pushw
mov
nop
sub
stc
cmp
sbb
cmpsb
daa
jae
outsl
mov
ds
mov
cld
xor
inc
cwtl
jnp
pusha
arpl
test
mov
enter
cmpsb
jno
adc
popa
and
cmp
arpl
or
xchg
fnstcw
inc
fwait
insl
stc
xchg
int
inc
leave
nop
inc
mov
test
pop
pop
sbb
stos
pop
rcr
or
sbb
adc
fwait
mov
push
push
mov
or
lods
mov
mov
pop
mov
jbe
sahf
incb
dec
or
bound
arpl
mov
aas
jb
shl
and
mov
mov
les
movb
and
jbe
fcoms
and
cmp
addl
mov
out
or
or
mov
loop
xchg
fisttpll
jge
js
js
in
cmp
cmp
les
ret
lahf
lcall
hlt
aam
daa
addr16
mov
xchg
es
loope
pop
fldt
pop
jae
xor
push
jbe
insl
dec
xorb
pop
push
scas
jmp
xchg
push
jb
idivb
data16
imul
pop
hlt
cmp
jg
adc
movsl
rcrl
or
repz
xor
xchg
pusha
or
fistpl
leave
lahf
mov
xor
push
imul
and
inc
js
in
jmp
push
inc
data16
fisubrs
sub
pop
inc
ljmp
jge
ja
test
lret
adc
push
lods
out
xchg
mov
cmp
imul
mov
pop
sbb
jb
les
nop
mov
adc
outsb
xchg
jb
mov
xor
sub
push
in
push
inc
aas
pop
push
jg
icebp
iret
xor
cli
fs
mov
push
push
fsubrs
loope
testb
pop
xor
xlat
sub
cmpb
cmp
dec
dec
inc
into
cmpsl
mov
mov
roll
je
mov
cmp
adc
mov
popf
jb
popf
mov
sub
push
pop
test
out
dec
aaa
dec
cmp
pop
cs
in
js
pusha
aam
addb
loop
bound
xchg
js
mov
push
mov
xor
lods
not
fidivrs
popl
mov
int
or
ret
movsl
test
aad
push
xchg
icebp
xchg
mov
and
mov
inc
test
sub
xchg
divps
xchg
pushf
adc
xchg
mov
outsb
jg
bound
sarl
lcall
mov
mov
or
dec
xor
dec
lret
mov
mov
and
add
andl
sub
movsb
adc
pop
xor
mov
jno
bound
push
mov
out
bswap
push
lea
movsl
inc
jmp
mov
xlat
sahf
ljmp
push
int
push
out
dec
add
or
ror
mov
lahf
and
push
pop
pusha
fldenv
cmpsb
jns
cmp
jo
xor
mov
mov
lahf
mov
xor
pop
in
mov
dec
pop
paddq
xor
rolb
icebp
adc
mov
test
sub
push
xchg
imul
xchg
ja
jmp
je
imul
and
loope
jns
xchg
nop
leave
mov
icebp
pop
push
cli
or
cltd
shll
mov
insb
insb
hlt
push
lahf
test
xor
xlat
lods
and
push
xor
mov
ret
pop
dec
pop
pop
call
ficompl
dec
sbb
mov
and
sub
xlat
lahf
jmp
sbb
loop
and
mov
cli
sub
cmc
adc
outsb
or
scas
jge
in
fstpl
shlb
xor
pop
adc
xchg
andps
cmp
lock
mov
notl
cmp
jg
ds
sti
aam
mov
jmp
rcl
stc
cmp
dec
pop
leave
lds
cmpsb
push
pop
sbb
insl
loope
in
int3
mov
gs
inc
pop
or
sahf
xchg
mov
aam
fnstenv
cwtl
arpl
jo
cmp
cltd
sub
or
out
int
mov
call
fstpl
or
xor
nop
lret
xchg
pushf
push
gs
push
sub
inc
mov
rcr
xor
cmp
jbe
outsb
adc
mov
adc
les
in
shlb
lds
or
in
adc
sbb
pop
inc
pop
popf
sahf
lea
mov
mov
add
push
leave
add
jnp
adc
mov
fwait
adc
push
mov
imul
shrb
sub
test
rcr
jb
sahf
test
xchg
or
into
shr
outsl
popa
mov
xchg
mov
jecxz
jo
and
pop
cwtl
mov
xor
mov
inc
leave
jbe
clc
inc
adc
add
pop
out
ljmp
cmp
jnp
leave
and
inc
pop
xchg
mov
movsb
push
sbb
pop
lock
out
mov
push
xchg
sub
int
pop
dec
shrb
pusha
iret
scas
dec
ret
outsl
push
lret
aaa
scas
add
stos
xor
cmp
cmpsb
clc
lcall
rcrb
fs
dec
adc
test
lret
aam
cli
mov
adc
mov
inc
icebp
sti
push
push
and
rcl
mov
mov
mov
lahf
sbb
or
std
out
push
or
test
push
rolb
add
popa
sub
int3
test
sub
pop
repz
shll
mov
mov
push
inc
xor
fnstenv
cwtl
addl
cmp
dec
ficompl
outsl
inc
sub
inc
fldt
sbb
je
fs
sti
stc
or
popf
lock
mov
jg
cs
and
adc
fnstcw
in
movsl
sti
in
push
cmp
push
aas
popa
std
es
add
out
mov
jg
sarb
addr16
fidivrl
cmp
inc
inc
sub
in
movsl
sahf
cli
test
stc
inc
jae
push
aaa
inc
jmp
inc
sub
xchg
push
cld
or
nop
scas
popf
sbbl
push
xor
mov
bound
add
cld
faddl
sbb
jg
inc
das
test
cmp
mov
shld
add
lret
ja
xchg
and
cmp
xlat
test
lods
push
jnp
lds
adc
push
hlt
add
nop
sbb
sti
pop
xchg
cmc
std
push
xlat
push
inc
test
and
out
jnp
and
stos
xchg
xor
adc
es
xchg
add
mov
shlb
daa
clc
dec
or
fcmovb
mov
xchg
clc
xchg
in
jg
mov
pop
dec
sub
pop
sub
jae
mov
out
cmp
and
sbb
push
or
fstpt
jle
mov
mov
mov
push
daa
movsl
ss
or
les
and
cmp
fsubrl
adc
push
int
pop
dec
jno
push
iret
sbb
lret
push
pop
add
or
in
xor
xorl
data16
scas
jg
cwtl
roll
shrl
cmp
sub
xor
inc
add
ja
lret
pop
ss
and
ss
pop
adc
jno
jne
test
pop
lock
xor
add
rcrl
in
dec
mov
xchg
xchg
nop
push
sub
outsl
push
outsb
loopne
sbb
subb
pop
outsl
pusha
mov
orb
push
sbb
fwait
mov
mov
imul
insb
mov
push
add
insb
enter
dec
jl
push
sub
je
sbb
cwtl
add
addr16
sahf
mov
imul
nop
sahf
cmp
xchg
bound
sub
inc
mov
push
leave
add
andl
lock
cmp
imul
icebp
ret
mov
push
xchg
mov
ja
mov
sub
js
push
mov
repz
ds
mov
mov
cmp
sbb
push
adc
and
jb
je
hlt
add
adc
pop
sub
movsb
subl
pop
jae
mov
test
push
lock
mov
mov
push
nop
sub
adc
pop
dec
insb
mov
lret
jno
frstor
inc
xchg
sbb
mov
nop
push
jl
sub
dec
bound
addb
mov
mov
std
pop
pop
les
mov
fs
mov
lock
push
roll
inc
push
mov
dec
pop
xor
sub
sub
loop
pushl
ficompl
ljmp
les
test
pop
jle
rcrb
jg
xor
dec
adc
sti
jecxz
mov
out
cmp
ret
cmp
bswap
sbb
pop
adc
mov
daa
mov
imul
mov
icebp
xchg
scas
dec
les
mov
and
shll
cs
mov
daa
add
push
inc
mov
dec
testl
out
and
fimull
pop
fdivp
repnz
jge
clc
mov
mov
push
adc
es
scas
lret
test
jne
xor
xchg
mov
jg
call
mov
dec
cs
lds
stos
mov
into
hlt
adc
idivl
mov
pop
sbb
cmp
mov
mov
mov
popf
mov
push
jnp
aas
scas
mov
jnp
stos
arpl
fs
int3
cmp
xchg
sbb
mov
dec
test
test
xor
scas
xor
ja
das
sarl
xor
mov
adc
sub
dec
iret
insl
and
and
dec
sbb
pop
loope
fldl
scas
jge
pop
jns
mov
mov
mov
and
jnp
stos
mov
xchg
xor
dec
mov
jecxz
lahf
add
insl
sarb
xchg
into
pop
mov
push
cmp
add
les
sub
test
lret
add
shrl
out
cltd
jmp
fwait
sbb
xchg
ljmp
aam
add
repz
add
cmc
aaa
dec
mov
stc
inc
fmul
push
jo
pop
imul
clc
addb
lahf
pop
cmp
sbb
jno
ret
jbe,pn
mov
inc
sbb
clc
adc
arpl
out
int
jp
fimuls
std
pop
push
push
mov
loop
mov
fmull
push
shl
aaa
imul
into
cmp
sbbb
mov
cmp
lahf
les
mov
pushf
xchg
les
sbb
sub
push
loop
xorb
xchg
and
je
jns
pop
movb
jnp
push
jge
std
jecxz
and
js
mov
dec
push
outsl
int
xchg
or
add
es
sbb
sbb
jg
rol
in
add
sub
push
mov
xchg
xor
sub
mov
stos
jle
xchg
psllq
push
or
int
ds
xchg
or
adc
mov
je
jecxz
add
and
jb
sbb
jp
cli
push
xor
aam
mov
pop
xor
lahf
sub
xchg
xchg
std
jge
hlt
cmp
add
xchg
mov
shlb
jne
sbb
hlt
push
xor
dec
inc
ljmp
je
daa
sub
cmp
test
push
push
popa
ret
movb
adc
jb
mov
push
nop
flds
or
loop
int
test
sbb
stos
dec
xchg
and
fdivs
incb
mov
stos
test
jbe
cmc
movb
ret
inc
out
add
push
xor
out
add
pop
mov
loopne
pop
mov
ret
push
or
mov
filds
lahf
mov
mov
cmp
xchg
enter
add
push
loop
xor
stc
pop
out
outsl
dec
add
addl
fcmovne
jae
jae
int3
cmp
clc
xchg
jno
push
adcb
push
pusha
xor
sti
and
lea
test
popa
int3
jnp
iret
aad
push
test
jg
fsubrs
aam
cld
dec
mov
jmp
pop
shlb
pop
jb
jo
aas
cmpsb
push
pop
adc
adc
insl
push
mov
icebp
add
shlb
lock
andb
jmp
sub
push
mov
mov
and
adc
lea
mov
mov
pop
add
xor
mov
or
sub
adc
mov
mov
clc
mov
inc
movnti
cmp
push
push
fwait
cli
push
ds
xchg
sti
loopne
mov
jae
testb
decl
fwait
adc
push
test
sbb
outsb
jb
mov
daa
dec
roll
push
jns
xor
cmpsb
out
push
sub
dec
test
fimull
add
movb
divl
sti
xlat
adc
sub
lock
sbb
mov
xchg
lcall
jns
ja
cmpsl
xchg
sub
ja
ljmp
xchg
jo
lret
add
sub
loop
mov
xor
pop
xchg
jmp
lahf
push
sub
jl
mov
or
movsl
or
call
jo
jnp
cmc
cld
mov
push
pop
lea
bound
jnp
lock
inc
pop
cli
cmpsb
push
or
aad
xor
xor
pop
and
xchg
dec
sbb
mov
scas
dec
sub
sbb
fnsave
std
xchg
lea
jge
insl
idiv
cwtl
rorb
loope
sbbl
jmp
cli
movsb
pop
push
sbb
push
sub
pop
lea
and
jae
das
inc
push
jmp
mov
fdivrs
stc
jmp
test
sbb
lahf
xor
inc
dec
jae
lahf
pushf
mov
sbb
les
cli
cwtl
cmpsl
jle
pop
pushf
data16
sbb
dec
jns
out
push
dec
and
and
scas
or
add
lds
fstl
sbb
mov
out
mov
rcll
mov
inc
lret
jg
out
insl
hlt
insb
movsl
inc
cld
ret
inc
sub
je
jmp
clc
into
loopne
jne
adc
pop
inc
mov
popf
outsl
dec
imul
ljmp
mov
aam
jmp
cmp
pop
inc
out
ljmp
test
stos
stc
pop
push
mov
cld
stc
stos
dec
aas
nop
mov
rcrb
xor
test
pop
or
mov
dec
lods
mov
cmp
xor
loopne
mov
loop
or
js
dec
or
xchg
jne
movsl
ja
and
mov
cwtl
mov
xor
rol
insb
lret
jbe
roll
xlat
mov
fistpl
aad
hlt
aaa
movsl
enter
sub
jge
hlt
mov
mov
sahf
loop
dec
and
push
ret
in
sahf
and
pop
mov
ds
test
push
in
inc
test
jb
cmc
adc
bswap
xor
fisttpl
sbb
mov
xor
xor
or
pop
jp
icebp
jle
ret
dec
xchg
pusha
addr16
jge
sahf
mov
xchg
imul
dec
jecxz
outsb
sbb
dec
stc
arpl
clc
mov
xchg
and
cmp
dec
insl
and
dec
sbb
lea
add
cmp
pop
int
pop
mov
push
icebp
in
jl
dec
lahf
idivl
xchg
fstl
dec
dec
xchg
dec
jns
xchg
or
loope
bound
jno
sbb
inc
pop
xchg
daa
dec
inc
xor
jnp
shl
arpl
adc
repnz
sbb
pop
pop
js
test
sub
adc
scas
cltd
pop
ficompl
addr16
pop
nop
popf
mov
cmpb
int
ds
movsb
das
dec
icebp
rolb
xor
dec
dec
xchg
daa
mov
sbb
mov
mov
test
jmp
jae
jmp
stos
adc
divb
std
pop
cs
and
aam
pusha
int3
lods
out
fnsave
cmp
lds
dec
mov
dec
aam
mov
lock
imul
push
mov
add
popa
out
ret
ret
inc
pop
jne
xor
das
xor
pusha
add
leave
jl
in
and
ds
rol
movsl
adc
sub
stos
and
cwtl
testl
inc
xor
clc
mov
test
dec
pop
sti
push
and
icebp
jb
pop
and
jmp
or
cmp
xlat
shrb
mov
rolb
cmp
dec
pop
les
mov
insb
jmp
jge
and
fwait
sbb
arpl
cmp
movsl
xor
lcall
subl
pushf
and
lods
mov
jp
aaa
inc
sbb
ret
dec
sub
mov
sbb
in
xchg
popa
in
push
mov
pop
pusha
mov
test
sub
cmp
xor
xor
jns
shrb
scas
fildl
mov
xor
jbe
es
in
and
addr16
lcall
inc
pop
ficoms
mov
jge
jbe
xchg
cld
cld
pop
add
xchg
adc
fwait
sbb
ret
inc
or
mov
adc
jb
inc
pop
popa
push
jnp
xchg
xchg
inc
xor
repz
mov
cmp
pop
pusha
push
pop
shll
and
cmpsb
push
inc
jno
add
in
lcall
divl
adc
setg
out
popa
xor
mov
push
pop
mov
push
pop
jmp
ljmp
cli
cmp
iret
pop
test
push
sarl
pop
push
fstps
gs
add
pushf
push
repz
pop
mov
inc
popl
std
mov
adc
loopne
inc
jp
out
push
fucomi
lods
push
or
mov
xchg
sahf
lret
mov
pop
mov
imul
flds
pop
cmp
sub
dec
push
daa
pop
pop
fwait
mov
loopne
ljmp
nop
cli
dec
shlb
cmp
sub
and
cmpsl
and
mov
in
jae
es
push
xchg
mov
push
data16
pop
cmc
push
cwtl
js
je
mov
and
sbb
jnp
orb
movsb
inc
ror
fwait
fwait
jns
inc
lock
sub
paddusb
insl
or
jne
jne
or
dec
lahf
pop
sub
sbb
xor
imul
testb
es
jge
test
shll
lods
or
inc
push
mov
mov
int
aas
popf
cwtl
push
lods
lahf
pop
lods
into
push
rorb
in
in
pop
loop
fmull
in
push
mov
pop
xor
cs
pop
dec
fwait
push
pushf
das
imul
or
dec
mov
sbb
sub
ss
push
repnz
push
push
mov
aas
sti
cmpsl
dec
xchg
out
xor
stos
and
daa
lcall
mov
and
sbb
test
push
mov
or
imul
mov
adc
mov
mov
push
es
push
adc
lahf
leave
lahf
fwait
dec
loop
pushf
mov
pop
fnstenv
or
sub
lods
inc
repnz
cmpsl
daa
push
ret
shll
pop
test
lods
push
shlb
repz
push
fmuls
ret
scas
loop
ret
jo
fdivrl
icebp
inc
pop
pop
mov
lret
xchg
pusha
out
jg
mov
cmpsl
mov
push
movq
sub
lds
jg
out
xchg
pop
imulb
movsb
pushf
sahf
insb
sbb
nopl
fs
pop
imul
pop
and
add
jae
insb
jne
andl
xor
mov
jne
or
cltd
sarl
in
adc
pop
or
and
rorb
das
rcll
xor
cli
jg
outsl
icebp
lock
cmpsb
aam
call
jbe
adc
cmpl
jno
sbb
add
cmp
enter
mov
push
jl
stos
cmpsl
arpl
rorl
xchg
call
pop
imul
and
pop
insb
out
and
jecxz
cmpsl
push
rep
sub
out
cmc
pop
xchg
filds
or
cmp
out
inc
mov
aad
leave
loope
enter
js
mov
sub
and
dec
std
xchg
jns
inc
cmp
xchg
pop
fistl
mov
loope
movsl
addl
cmp
mov
push
cmpl
jns
repz
mov
push
xor
push
push
mov
pop
or
mov
pop
xor
dec
jnp
xchg
mov
loop
aaa
stos
push
xor
loopne
adc
or
push
std
jge
xchg
clc
mov
jne
pop
dec
lds
push
inc
cmpsl
add
ljmp
shll
das
je
dec
scas
dec
je
testl
jns
sbb
adc
jb
push
push
fidivl
adc
xchg
cmp
cmp
jmp
leave
xchg
loopne
jmp
jb
push
mov
aas
or
xchg
test
loopne
imul
jne
enter
jecxz
sub
repnz
dec
aas
nop
clc
xchg
mov
dec
test
mov
ret
mov
hlt
sbb
daa
mov
mov
or
inc
fildll
xor
scas
test
les
fcmovbe
shr
insb
adc
jns
pop
add
dec
mov
lock
ja
or
shll
cli
cmpsl
sub
sbb
cmpsb
mov
xlat
fiadds
test
in
dec
mov
cmp
into
movsb
rorb
jl
pushf
push
pop
out
scas
mov
inc
repz
bound
stos
sbb
xchg
hlt
les
push
mov
xor
or
cmp
in
call
fs
data16
mov
push
push
mov
mov
ror
dec
jge
push
push
pop
roll
sub
mov
iret
pop
pop
call
dec
jmp
rcr
test
ja
sbb
cli
test
jl
cmpsl
mov
inc
clc
rep
and
xor
aas
mov
push
dec
out
loop
mov
insl
inc
aaa
xor
enter
es
lcall
cmpsb
adc
je
push
clc
popl
and
push
push
enter
daa
dec
loopne
cld
repz
pop
xor
jmp
mov
stc
cltd
dec
fstps
das
std
xor
mov
push
in
clc
out
push
aas
dec
jns
sub
inc
cmc
add
or
and
and
push
cld
mov
into
mov
push
adc
das
xor
xchg
mov
push
rorl
fidivrs
loope
lods
adc
icebp
inc
pop
clc
getsec
andl
movsb
push
scas
xchg
test
inc
test
mov
pop
loop
in
mov
dec
es
ljmp
in
pop
rcr
mov
add
sbb
aas
push
insb
jo
sbb
xor
add
mov
mov
xchg
test
stos
enter
imul
mov
icebp
push
repz
mov
jnp
mov
cmp
mov
inc
jmp
gs
jecxz
arpl
xlat
shrl
insb
adc
cwtl
sub
daa
mov
test
fs
jg
xchg
add
or
loopne
inc
aam
push
inc
jg
xor
outsb
mov
out
dec
fsubp
sub
outsl
fnclex
mov
pop
movsl
mov
cmp
in
insl
mov
push
sub
pop
mov
lods
xchg
or
lcall
movsl
and
or
dec
push
js
cli
int3
ss
addl
repnz
dec
mull
push
mov
inc
xchg
xlat
xor
sub
subl
push
in
add
pusha
leave
push
call
movsl
jle
and
icebp
pop
jge
mov
or
push
push
dec
pop
pop
jle
rolb
fidivl
xlat
shll
aad
lret
fisttps
sarb
push
aad
or
iret
cmp
or
jae
pusha
sbb
lret
cltd
test
aad
or
pop
add
das
mov
sbb
xor
mov
hlt
xlat
fnstcw
dec
jmp
gs
mov
xor
mov
jmp
dec
cltd
imulb
xchg
push
call
cmpps
sub
or
mov
push
mov
lds
js
ss
out
ds
and
cmpsl
mov
jecxz
push
add
add
sahf
xchg
dec
nop
stc
pushf
jl
push
shll
mov
shll
pop
into
jnp
push
dec
lss
cmp
jl
pop
mov
mov
test
dec
push
inc
mov
outsl
cmp
jecxz
daa
cmpsl
mov
mov
xlat
pop
std
call
jp
and
pop
adc
dec
cltd
and
lcall
sub
mov
repz
aaa
arpl
rorb
add
stc
cmp
sti
fwait
sbb
and
cltd
and
pop
stc
insb
mov
fcmovnb
mov
pop
hlt
xlat
mov
mov
xchg
int3
or
les
stos
jecxz
pop
pop
dec
add
jo
sbb
fnstsw
into
xor
inc
push
mov
rcll
fcoms
mov
pop
sub
test
shlb
sahf
andl
stos
lret
scas
and
test
push
dec
cmp
pop
ds
sahf
loop
push
scas
or
mov
pop
pop
or
gs
sahf
push
int
inc
ja
imul
mov
adc
mov
je
jl
mov
xchg
dec
or
clc
sbb
or
movl
sbb
mov
lea
add
ficoms
add
loope
dec
arpl
pop
xchg
aas
inc
pop
mov
xor
ljmp
push
gs
mov
orl
popa
dec
mov
das
push
das
jnp
xchg
mov
cwtl
cmpsb
sahf
dec
andps
mov
sbb
and
adc
jge
adc
adc
stos
ds
mov
cltd
pusha
outsl
movb
inc
push
rcrb
adc
push
cmp
adc
sub
dec
int
fs
stos
stc
loopne
and
and
push
mov
daa
xor
fidivrl
fcoml
clc
int
inc
mov
das
stc
test
xor
lea
scas
out
loop,pn
and
rcll
pop
int
outsb
pop
inc
push
or
lods
cmp
pop
pop
mov
add
xchg
in
or
es
sub
fnsave
out
cwtl
sarl
out
or
mov
adc
loopne
ss
mov
cmc
push
pop
xor
xchg
repnz
les
mov
sub
orb
xchg
pop
jbe
jae
jbe
jg
xor
cmc
int3
mov
mov
jp
faddl
push
dec
dec
add
nop
in
xchg
inc
imul
push
repz
dec
xor
xchg
subb
cmpsl
adc
jl
jbe
stos
and
cmp
push
pop
add
cmpsl
push
lcall
inc
pop
adc
jle
icebp
xchg
jnp
nopl
rclb
out
push
cmp
std
or
cmp
imul
mov
lret
mov
andl
test
mov
out
xor
sbb
in
int3
stos
pop
mov
inc
xchg
in
cmpsb
xlat
xlat
cmp
sbb
mov
loop
add
dec
push
and
pop
mov
cmc
sti
movsb
pop
cmp
mov
stos
and
jno
jnp
out
add
adc
push
lea
add
cmp
push
pop
jg
mov
xchg
jnp
sbb
mov
add
test
or
test
std
lock
or
cmpsl
adc
push
xor
dec
push
loop
lock
sbb
arpl
adc
mov
xchg
fptan
xor
divl
bound
lret
test
mov
pop
daa
push
in
aad
mov
dec
mov
leave
cli
pop
inc
sub
into
pop
mov
cmc
aad
and
cmp
aaa
fcomip
push
lret
lods
dec
xchg
cmp
aas
ss
push
push
andb
jae
jbe
mov
xlat
addl
std
mov
xchg
insl
mov
jae
ss
test
mov
enter
pop
out
fwait
push
leave
mov
cmp
jl
or
outsl
adc
leave
into
loop
js
imul
das
int3
pop
and
cmc
dec
inc
and
out
inc
call
jo
pop
xadd
arpl
movsb
pop
add
mov
push
bound
add
push
ljmp
fsubrs
jecxz
xor
lret
xchg
cmp
in
and
das
mov
cmc
pop
push
xor
push
mov
jb
ficoms
jno
xor
stos
je
out
xchg
inc
std
mov
sub
xchg
inc
jnp
into
xchg
sub
in
cmpsb
jecxz
fcmovu
and
scas
xor
orl
pop
movsb
mov
vandnpd
xlat
rcl
mov
out
and
mov
dec
mov
int
leave
fidivrl
enter
test
cmp
xor
pusha
imul
ja
xor
in
xor
psrld
jmp
lods
lods
insb
rep
loopne
leave
roll
xchg
push
sti
aaa
lret
add
ret
outsl
ja
fwait
inc
fsubrl
pop
fdivrp
pop
imul
xor
jl
addb
or
jno
and
xor
lret
std
cwtl
mov
inc
insb
cmpsb
mov
and
jnp
sub
imul
enter
push
cmp
pop
je
dec
test
loop
cwtl
iret
mov
mov
push
pop
mov
sbb
sbb
add
movsb
mov
jns
mov
cs
sahf
push
add
outsl
int
add
enter
in
and
mov
dec
jo
xchg
loopne
adc
pusha
cmp
js
negb
mov
loope
xchg
cmp
adc
icebp
wbinvd
xor
outsb
jg
or
jmp
inc
mov
mov
rorl
jl
jl
cmp
movsl
sub
jo
xor
cmp
mov
push
out
dec
inc
jns
loop
lea
push
pushf
fisubrs
pop
sub
pop
inc
xor
sub
push
movsb
pop
lahf
xchg
mov
popa
aaa
imul
rcll
lea
loop
je
fwait
mov
arpl
shlb
sbb
out
dec
sub
jle
lds
xchg
movsl
mov
sub
cli
cmpsb
fistps
sub
dec
lahf
test
mov
xchg
inc
mov
add
jle
push
mul
mov
iret
mov
ret
aam
push
movsbl
in
lret
sub
or
hlt
neg
inc
push
repnz
pop
fstpt
faddl
xor
xchg
out
cltd
loop
jmp
xchg
mov
mov
testb
push
es
jge
add
stos
add
lock
jo
and
mov
cli
mov
mov
aad
sbb
jge
jle
or
fisubl
mov
xor
daa
cld
cld
aaa
mov
cmp
jb
mov
adc
icebp
sub
negb
xlat
xor
std
ret
push
pop
push
enter
mov
dec
std
cmp
mov
xchg
push
xchg
iret
dec
dec
dec
push
adc
inc
mov
mov
jp
adc
add
test
imul
inc
pop
dec
gs
adc
jns
loope
sub
jle
out
or
mov
mov
adc
inc
sbbl
xor
decl
data16
das
dec
dec
jecxz
adcb
pop
and
cltd
pop
jo
insl
add
mov
add
fndisi(8087
mov
ret
lea
pop
daa
aam
cmp
adcb
xchg
jecxz
dec
inc
cld
adc
adc
lret
cltd
or
jecxz
xchg
ret
bound
pop
and
xorb
lock
cmpb
mov
mov
sub
aad
mov
repnz
push
or
sbb
lahf
rcrb
lret
add
push
xlat
addb
jge
test
pop
loop
das
xchg
push
cmpsb
push
ret
out
mov
cwtl
cmpsl
sbbl
xchg
cmpsl
dec
ja
xchg
loope
aad
popf
push
sbb
mov
xchg
adc
add
pop
inc
fnstsw
jnp
jb
test
add
jae
xor
in
xchg
stc
push
int3
mov
adc
xchg
xchg
pop
inc
and
xchg
loop
push
mov
xor
inc
xor
mov
aam
push
xchg
jge
icebp
adc
jnp
pop
pop
out
clc
xor
iret
or
adcb
mov
dec
mov
sub
mov
pop
jmp
xchg
fmul
inc
mov
sbb
sbb
cmp
orb
nop
cmp
iret
dec
cmp
outsb
rcr
insl
hlt
or
dec
jne
enter
mov
popf
and
dec
imul
jno
mov
repz
add
in
or
sub
out
pop
inc
pop
or
dec
mov
fwait
push
and
inc
mov
mov
or
and
fs
or
data16
mov
daa
push
push
cmp
push
adc
fcmovb
xchg
in
add
sbb
mov
sbb
and
lods
dec
push
gs
cli
xor
mov
push
faddp
mov
mov
sbb
inc
push
outsl
lret
decl
or
icebp
hlt
popa
sub
push
and
lds
adc
inc
rol
jle
je
inc
push
hlt
jecxz
or
sbb
fbld
int
and
pop
jnp
test
ljmp
xchg
adc
mov
sti
cmc
mov
das
insb
mov
aaa
mov
xor
sbb
mov
std
pop
lret
xchg
stc
dec
test
mull
mov
xlat
mov
cmp
jecxz
sub
adcl
pop
mov
push
dec
push
cwtl
jg
push
cmpsb
or
ja
mov
sbb
test
cmpsb
lahf
fisttpl
or
nop
sbb
xor
jnp
jp
pop
and
adc
popf
cmp
inc
cmc
int3
add
in
enter
jne
into
xchg
rcrb
test
ja
jecxz
mov
jmp
movsl
scas
or
movsl
mov
ret
mov
addps
xor
adc
xor
add
dec
in
nop
adc
push
ds
cli
xchg
lock
testb
scas
in
lea
push
cmovo
fs
pop
pop
imul
nop
cmp
jns
xchg
mov
fisttpl
jg
jae
test
dec
cmp
test
sbb
movsb
mov
pop
and
loope
mov
imul
cmp
push
test
inc
jno
data16
sbb
scas
test
enter
adc
dec
sub
fwait
and
pop
ss
imull
pop
and
xchg
inc
test
mov
fidivrl
insb
shr
inc
push
outsl
jmp
jecxz
scas
jg
pop
xor
jb
sahf
je
xor
hlt
or
xchg
fwait
subb
data16
psraw
ficoms
enter
test
das
btc
mov
cs
mov
pop
pop
xchg
pop
push
push
mov
pop
stos
pop
imull
imul
xchg
mov
sbb
in
pop
cmp
dec
test
sbb
loope
push
js
cmp
cmp
and
stc
adc
scas
cmp
and
xor
inc
out
in
xchg
mov
inc
mov
loop
scas
mov
add
movsb
das
push
cmc
xor
lahf
lcall
imul
dec
sahf
cmc
and
addr16
stc
mov
dec
scas
mov
ljmp
in
js
xchg
cmpsl
jo
mov
cld
test
sbb
dec
mov
add
sbb
sub
insl
sbb
lock
jecxz
leave
repz
pop
imulb
sbb
jno
cltd
push
mov
jno
dec
dec
jecxz
dec
inc
xchg
dec
pop
loope
dec
mov
rorb
les
push
mov
icebp
adc
push
mov
mov
push
pop
mov
daa
inc
scas
cli
push
inc
mov
lds
arpl
out
jo
rorb
mov
scas
mov
cli
jmp
in
aam
sbb
add
inc
jg
flds
jbe
push
mov
or
sti
mov
sbb
int3
and
cs
nop
aaa
push
loop
outsl
inc
pop
or
je
cmp
sub
or
stc
in
fsts
xchg
mov
or
xchg
leave
pop
pusha
jo
jecxz
aas
clc
cld
or
add
push
xchg
repnz
jbe
and
mov
aas
lea
ss
and
jo
cmp
push
pushf
js
cmp
xchg
mov
or
sub
push
xchg
fwait
in
xor
movsb
mov
push
int3
in
xchg
sub
mov
jecxz
jecxz
inc
dec
std
leave
mov
lods
inc
fdivrs
jg
mov
jo
jle
jae
dec
dec
push
xchg
or
adc
lea
ds
popf
xchg
jl
or
or
sbb
shlb
sub
push
jge
adc
jecxz
adc
imul
and
outsb
shll
lcall
and
and
je
add
mov
jp
xchg
repz
fnsave
xor
pop
adc
int
mov
add
push
dec
clc
popa
xor
sub
les
sub
stos
ljmp
ficoml
and
sahf
cmp
mov
fdivr
xchg
testb
ss
repz
fisubrl
sub
inc
mov
cmc
jne
add
add
mov
inc
mov
mov
pop
inc
sub
pop
mov
adc
pop
pop
insl
shll
ret
or
fists
rorb
faddl
repz
stc
jp
add
gs
sbb
cmc
leave
aaa
repz
xchg
iret
mov
ss
jae
jo
push
xchg
aas
cmp
in
jge
repnz
mov
outsl
ffreep
adc
sbb
rclb
out
or
cmpsl
sbbl
pop
mov
or
pusha
or
sub
push
scas
orl
pushf
push
cwtl
sub
mov
jmp
outsb
gs
jno
sub
jecxz
ret
sub
mov
in
enter
fwait
pop
lods
jl
rcr
xor
sub
jne
pop
in
pop
bnd
adc
jnp
cwtl
lods
mov
mov
out
incb
testb
sahf
loopne
push
leave
decb
fsubl
sbb
and
lods
popf
lret
xor
mov
jmp
dec
out
pand
pop
daa
inc
push
out
push
add
jo
inc
xchg
stc
lret
out
mov
adc
scas
fs
mov
mov
insb
push
sahf
repz
mov
sbb
jl
inc
test
bound
sub
xchg
cltd
scas
jl
lods
lock
dec
sub
loop
mov
xchg
mov
pop
or
inc
inc
daa
subb
mov
mov
movsb
mov
sbb
or
xchg
jae
std
ret
cltd
shrb
sub
jmp
sbb
mov
das
out
mov
aad
xor
cwtl
out
jno
rcll
jae
mov
pop
aas
repnz
gs
call
mov
push
out
outsb
xlat
jle
repnz
sbb
mov
pop
pushf
cmp
xor
inc
jg
adc
sub
test
mov
lds
cld
arpl
sub
std
pop
insb
mov
or
xlat
mov
sbb
insb
pop
add
or
mov
or
sbbl
addr16
cmpsl
adc
cmp
dec
dec
jg
cmp
xor
or
roll
andb
sbb
pop
push
iret
or
call
mov
mov
out
loopne
dec
pusha
in
sub
jbe
rorb
aaa
mov
xchg
xor
lret
ret
inc
xor
inc
nop
movsb
jnp
push
inc
mov
loopne
sbb
jge
fucomp
adc
jge
cmpsb
loope
sbbb
out
cs
rclb
mov
inc
jmp
out
jnp
rcrb
jne
or
out
inc
mov
jg
hlt
xor
divb
cmp
sbb
push
fistl
std
add
testb
fimull
lea
jns
mov
inc
or
mov
xchg
adc
daa
scas
shlb
in
shl
dec
stos
fs
mov
sub
add
das
sub
enter
or
bound
movsb
mov
fcoml
shll
adc
enter
cli
shrb
inc
dec
dec
sub
cmp
push
inc
or
xchg
xor
xchg
popa
icebp
lahf
adc
mov
mov
sub
mov
push
cmp
mov
bound
jp
cmc
xchg
pop
in
ret
push
mov
hlt
sbb
mov
add
jo
divb
adc
test
mov
push
sbb
or
xor
out
in
scas
into
adc
fisubrl
cmp
lea
jge
std
dec
jecxz
or
lods
xchg
cld
repz
add
paddw
cmpsl
sub
pusha
cmpsl
mov
aas
lea
xor
stos
mov
mov
popa
jbe
mov
test
or
bound
mov
push
daa
jb
cmp
pop
rol
stos
cld
pushw
add
out
int3
push
sti
fisttpll
inc
sbb
sub
inc
hlt
cltd
leave
notl
ss
sti
mov
adc
pop
popa
pop
lds
xorl
or
mov
jmp
inc
sbb
jp
inc
cmpb
cmp
xchg
scas
dec
jno
test
movsl
shll
cwtl
inc
lret
adc
sbb
mov
jle
imul
jbe
bnd
je
mov
call
fldenv
dec
ljmp
lret
addr16
jnp
adcb
imul
cs
leave
adc
jns
jge
sbb
pop
push
lock
in
loope
std
cmp
hlt
pop
cmpsb
cmp
sti
inc
fs
negb
repz
insb
aaa
test
mov
hlt
in
into
mov
and
and
push
fldenv
add
popa
jg
jle
mov
ss
inc
std
and
or
inc
mov
fisubrl
adc
xor
mov
adc
cmp
arpl
mov
movb
sub
scas
xchg
test
adc
sti
inc
xor
and
outsb
add
aam
push
add
fnstenv
and
mov
mov
push
stc
in
pop
push
lock
stc
out
lods
inc
xchg
mov
out
mov
inc
xchg
inc
add
stos
ja
jne
push
jg
loope
sbb
sub
pop
push
loope
pop
inc
mov
mov
xor
inc
ret
ljmp
dec
aaa
loop
inc
mov
les
insl
inc
jo
pop
repnz
fld
aad
xlat
cmp
xlat
fs
cmp
fisubl
push
dec
data16
stc
add
hlt
push
je
xchg
jo
sbb
dec
jo
in
mov
rorb
dec
cmpl
xchg
jp
mov
sbb
testb
rol
jecxz
iret
scas
test
cmpsl
dec
in
je
mov
leave
inc
push
jl
out
inc
jmp
insl
push
add
sub
and
rcll
sahf
inc
test
cwtl
cli
pop
mov
mov
push
scas
cmp
nop
or
dec
dec
cmp
sub
xor
mov
add
or
dec
push
mov
jb
lret
cmc
xchg
cmp
pop
rcr
gs
les
test
fucom
aaa
test
test
xchg
inc
mov
lcall
shlb
mov
je
sbb
dec
inc
aad
xchg
mov
repz
test
decb
movsl
sti
out
mov
mov
cwtl
stos
sub
xchg
sahf
lea
lcall
xchg
sarl
inc
cmp
in
xchg
addr16
out
ret
fisttpl
test
dec
sbb
leave
pop
mov
dec
adcb
mov
es
adc
sbb
mov
enter
aas
adc
fcoml
add
ret
mov
fistl
out
clc
push
xchg
cwtl
call
enter
jge
add
mov
pop
dec
cmp
cmp
insb
mov
outsl
add
in
stos
arpl
jmp
ja
popf
push
ljmp
jge
or
insb
push
sbb
xchg
cmpsl
sbbl
test
imul
cmp
aaa
sub
sahf
xor
cmp
ja
cmp
jge
mov
scas
push
jne
mov
fiadds
arpl
mov
or
ljmp
ljmp
mov
dec
aad
movsl
nop
mov
mov
in
movsb
push
ljmp
xchg
fimuls
mov
cmp
test
mov
js
lock
sub
xor
sahf
add
xor
dec
cmp
imul
push
in
dec
and
imul
loope
lret
cwtl
mov
out
mov
push
fsubrp
add
int
pop
out
mov
repz
cmp
sbb
cltd
push
arpl
sbbb
xlat
jge
jmp
adc
sub
xchg
in
testb
mov
inc
and
sti
pop
cmpsb
out
cmp
jnp
sub
push
sbb
test
or
pop
adc
jle
pop
negw
inc
jg
nop
adc
outsb
shrb
or
sti
mov
pop
sub
pushf
cmp
clc
adc
inc
push
int
jne
mov
mov
xor
mov
rorl
inc
cmp
popf
jmp
and
xchg
fsubrp
imul
gs
dec
lret
in
insb
jnp
arpl
pslld
and
arpl
cltd
repnz
cmp
or
mov
xchg
les
out
ja
cmp
mov
sbb
mov
arpl
cmp
repz
push
fiaddl
test
ljmp
insl
ret
dec
xor
adc
cmc
push
rorl
adc
xorl
pusha
inc
das
aad
jge
sbb
lds
push
or
add
pop
mov
xor
xor
repnz
cmp
or
pop
fbld
bnd
and
iret
add
loopne
cmpsl
lock
xlat
lret
mov
iret
dec
aam
call
lea
fstp
movsb
dec
rcr
lea
ss
les
sbb
icebp
loope
pop
lcall
aaa
mov
into
lret
and
or
dec
dec
inc
and
mov
in
or
mov
out
add
xchg
popf
push
or
adc
jmp
jo
lret
movl
xlat
push
cmp
push
xchg
xor
xor
hlt
xchg
loope
mov
push
mov
add
inc
pop
int3
and
mov
sarb
fld
int3
inc
stos
mov
pusha
sbb
addr16
ss
aaa
ret
cmp
mov
mov
adc
int
jno
add
push
movsl
sbb
adc
movsb
insb
stos
push
cmpsb
inc
jg
ljmp
sahf
pop
scas
iret
mov
les
push
test
dec
dec
loope
mov
mov
in
nop
push
cmpsl
icebp
push
inc
mov
nop
sub
insl
jb
mov
or
dec
shlb
pop
cltd
cli
imul
mov
push
xchg
lcall
xor
repz
stos
mov
daa
push
sub
cs
int
push
dec
pop
xchg
das
cld
in
lahf
dec
ret
iret
and
xor
adc
je
xor
sbb
pop
mov
rolb
or
nop
roll
lret
movsl
lds
sahf
jl
mov
and
inc
lods
fwait
ret
inc
adc
push
xor
lcall
fwait
sub
fsubrs
jo
add
sbb
push
fstl
xchg
das
data16
push
test
std
fcmovnu
lds
inc
sbbb
mov
lods
scas
out
sub
dec
or
je
and
mov
sub
push
xchg
adc
xchg
pop
popa
jns
pop
scas
sbb
pop
jge
xadd
mov
in
dec
scas
fmul
inc
cmpsb
dec
xchg
sbb
sar
pop
inc
add
out
rclb
sbb
out
pop
pop
pop
cwtl
cmp
rcll
and
leave
cmp
jb
inc
ja
and
mov
inc
out
mov
mov
jmp
mov
rcrb
add
add
pusha
lods
aam
cmc
sbb
or
mov
in
sub
push
out
pop
xor
fwait
or
cltd
pop
adc
sub
sbb
out
lcall
lods
pushf
jbe
xor
jl
jge
push
push
stc
in
sub
mov
into
sub
or
into
rcll
test
sbbb
dec
lods
push
mov
pop
and
jge
xor
in
mov
movsl
sbb
jge
add
and
out
or
xor
out
stc
aas
inc
push
rcrb
mov
push
ret
ja
repnz
test
mov
cmpsl
dec
lcall
pushf
repnz
sub
xchg
cmp
or
popa
fildll
cmc
sbb
cmp
nop
and
cmp
movsl
dec
sahf
sbbb
jnp
je
push
int
jb
add
cmpsb
pop
mov
fs
dec
mov
jp
es
dec
rcl
adc
insl
jnp
mov
jp
add
hlt
jle
mov
outsl
outsl
daa
in
dec
sar
cs
xchg
adc
inc
stos
xchg
sti
adc
ret
std
mov
call
dec
push
xchg
mov
gs
jb
xor
iret
icebp
jmp
ds
enter
sbb
call
adc
push
lods
das
xchg
jge
in
insl
mov
pop
pop
and
fldt
cmc
or
cmp
jne
ljmp
and
lahf
add
adc
addr16
cmpsl
mov
aas
movl
cltd
icebp
sub
shll
or
or
xlat
adc
jmp
jge
das
sbb
lods
inc
cmpsb
out
adcb
imull
nop
and
aaa
xor
in
adc
mov
or
xchg
int3
cmp
jne
es
pop
adc
sti
xchg
mov
clc
test
pop
xchg
push
in
call
mov
push
xchg
lods
cmpsl
xor
jl
mov
iret
hlt
jo
ret
mov
cmc
jle
lods
leave
or
inc
xchg
add
push
cmp
cli
mov
pop
push
add
subb
push
scas
test
repnz
stc
roll
aad
push
xchg
xlat
out
fisubs
into
call
sbb
icebp
fisubrl
pop
push
mov
mov
sbbl
sub
dec
xchg
dec
cli
cmc
or
sti
movsl
cs
out
or
cli
lcall
xor
ljmp
mov
push
rcrb
arpl
inc
loopne
int3
js
out
cmp
ror
mov
popa
out
add
cmc
mov
lea
dec
cmp
inc
cmpsb
hlt
notb
sub
jo
ds
stos
xor
push
push
jle
test
mov
enter
mov
mov
std
mov
fwait
test
mov
popa
sahf
int3
aad
outsl
rep
jae
mov
cmp
shl
inc
aad
xchg
and
enter
pop
sub
mov
fld
mov
jg
dec
stc
fisubl
mov
xchg
dec
sbb
sbb
test
pop
cld
xor
jge
out
sbb
jp
sarb
cmp
fwait
push
in
ljmp
fst
aad
or
cmpl
int
repnz
jl
mov
repz
rcl
movsb
insl
or
mov
pusha
iret
xor
aam
mov
sub
sbb
and
loopne
popf
inc
inc
push
pusha
xchg
enter
inc
lods
sub
cmp
hlt
outsl
fsubrs
push
scas
ja
mov
dec
int
jmp
shr
lcall
leave
xchg
add
add
inc
mov
pop
dec
iret
add
xor
mov
add
jne
shr
and
pop
pusha
int3
mov
or
lea
jmp
idivb
sbb
imull
push
mov
xorl
mov
mov
or
mov
cli
jl
dec
add
jg
add
dec
xchg
rcll
das
out
mov
jo
xchg
leave
sbb
movaps
stos
and
rorl
dec
mov
push
mov
int3
push
sahf
aaa
xchg
mov
notb
pop
lea
into
loop
sbb
xchg
das
push
in
ss
lcall
pop
ficompl
cmp
aad
scas
mov
jno
mov
mov
stc
aas
sar
jnp
gs
imul
sub
mov
jmp
jb
dec
sub
and
mov
inc
dec
pop
sub
jbe
cmp
lahf
cmp
outsb
rorl
addr16
push
fidivs
jmp
jge
fadd
dec
jge
inc
xchg
call
jbe
in
mov
pop
xor
int
mov
sti
scas
xor
popf
cmp
xor
jg
cmp
movb
xor
cli
push
sub
sbb
xadd
adc
xchg
stos
or
pop
pop
jno
xor
cwtl
xor
adc
sarl
cmpsl
or
xor
clc
jle
dec
xchg
jg
js
adc
scas
daa
rcll
orb
xchg
rcrb
mov
stos
sarl
push
jae
in
roll
nop
cmpsb
icebp
mov
xchg
imul
cmp
in
cmp
shll
incl
js
mov
mov
jp
sti
nop
cmp
sub
mov
push
xchg
xchg
mov
imul
das
loop
lret
loop
push
popa
add
mov
xchg
jg
xchg
xor
inc
sbb
lods
cli
lock
mov
push
sub
dec
outsl
ja
sub
xor
ret
pop
jg
divb
xlat
jns
ljmp
jmp
mov
fsubs
or
int
ret
fsubs
call
sbb
adc
addr16
stos
sti
xor
inc
scas
or
lea
xchg
mov
lock
call
or
push
or
mov
mov
push
int3
scas
mov
cmp
mov
inc
outsl
cltd
xor
les
xchg
lock
mov
add
xchg
cmp
clc
pop
mov
sub
lods
cmp
jns
sub
out
pop
out
cmp
inc
xor
push
inc
xchg
int
jmp
jp
std
push
lods
in
mov
in
nop
jnp
xchg
xlat
fadds
jns
es
in
test
dec
jmp
es
dec
cmp
lods
adc
dec
adc
mov
xchg
ds
cltd
pop
jle
in
fldl
int3
sbb
or
pop
ret
sbb
std
push
lret
outsb
jecxz
dec
cmpb
sbb
jp
dec
xor
fs
lahf
xchg
loop
adc
lods
jbe
sti
mov
adcb
lods
jl
loop
cmp
xchg
mov
inc
repz
or
adc
inc
inc
ds
mov
pop
xor
fnstcw
out
repnz
shll
jle
push
flds
clc
fstps
insb
clc
rcrb
mov
in
lret
pop
push
mov
mov
inc
mov
pop
xchg
adc
xchg
jne
add
rcll
or
xor
out
push
lcall
stos
fidivl
jp
test
and
dec
outsb
scas
clc
xlat
xlat
mov
out
movsl
adcl
pop
push
push
ret
or
mov
xchg
jmp
push
and
mov
pop
or
mov
pushf
mov
xor
jnp
mov
hlt
mov
shl
adc
sub
xor
out
loopne
test
dec
xchg
into
out
xchg
pusha
sbb
push
xor
loopne
test
test
into
or
scas
pop
mov
shlb
xchg
es
mov
and
fwait
lock
xlat
sub
push
adc
xchg
xchg
out
imul
je
mov
mov
lods
add
jl
imul
and
dec
fs
lods
insl
sub
notb
xchg
dec
lret
mov
xchg
add
ret
cmc
pop
xchg
and
roll
outsl
or
jle
push
pop
pop
fstpl
ja
xor
test
sbb
test
fists
aas
inc
pop
inc
xorb
mov
int3
push
dec
jne
ret
insl
push
lock
xchg
in
sub
xchg
xlat
and
in
inc
repnz
ret
lods
mov
sbb
leave
das
jge
xchg
add
xor
inc
push
imul
push
cmp
mov
out
idivb
cld
incb
rcl
cmp
jle
pop
xchg
repz
nop
dec
jns
pop
pushf
mov
gs
lret
aas
imul
lahf
push
popf
jmp
call
adc
inc
cs
xchg
bnd
ss
repnz
mov
fnstsw
mov
mov
dec
scas
stos
scas
mov
lds
pop
outsl
and
xlat
cld
es
popa
lods
iret
sub
push
cmp
sbb
xor
inc
adc
je
push
xor
dec
xlat
add
sub
push
xchg
sub
jge
xchg
add
arpl
jl
jecxz
dec
or
jp
decb
inc
movsb
push
jns
inc
xor
inc
and
sub
imul
pop
fbld
or
adc
lods
or
aad
scas
xchg
dec
dec
mov
pop
or
dec
insl
pop
call
lret
mov
cltd
in
sub
pop
test
and
loop
xor
jb
cmp
jb
rcll
out
dec
sub
lods
fsubl
dec
dec
and
leave
loopne
dec
jge
mov
mov
pop
pop
hlt
xor
push
or
mov
push
inc
add
and
inc
dec
in
enter
mov
sbb
dec
push
mov
mov
cmp
ljmp
or
or
call
fidivrs
clc
xchg
scas
push
imul
pop
in
not
pop
jecxz
mov
loopne
adc
sub
xchg
adc
movsb
out
jg
jecxz
adc
or
cld
int3
loop
push
add
sub
push
or
mov
outsb
or
add
stos
mov
ljmp
mov
sbb
cmpsl
rorl
mov
cmp
xor
sub
ret
adc
pop
mov
pop
mov
sbb
sbbb
scas
adc
rcrl
jl
cld
nop
xchg
xchg
aad
popf
lcall
in
movsb
sbb
and
jecxz
xor
ret
aad
daa
notb
cmp
popa
jmp
leave
mov
jge
lods
loope
scas
mov
push
inc
mov
cmpsb
cmp
and
mov
add
inc
pushf
dec
mov
shlb
outsl
in
fcomps
sbb
add
adc
fistpl
sub
push
or
sub
lahf
adc
insl
cmp
pop
cmp
call
js
mov
cltd
sub
mov
jl
add
aas
inc
sub
adc
aam
test
and
sub
stos
ret
pusha
fidivrl
cmp
push
push
mov
jnp
xor
cmc
lret
icebp
scas
addb
or
dec
inc
sbb
jle
inc
mov
push
jl
cmpb
rclb
repz
sbb
into
adcl
inc
mov
adcl
or
rcll
jae
mov
dec
and
push
or
test
xchg
jno
and
cmp
jmp
stos
fcomi
push
lret
push
ss
cmpsl
stos
mov
inc
push
clc
mov
incb
call
fistpll
sahf
scas
add
out
xchg
scas
mov
jae
fwait
rcr
xor
clc
mov
sti
ja
outsl
testb
pop
jnp
push
out
mov
ja
push
gs
jb
sub
popa
jle
mov
jo
jp
xor
sub
icebp
test
mov
push
pop
lds
int3
push
insl
mov
pop
sahf
cmpsl
jl
stos
adc
loopne
xchg
sub
mov
imul
ljmp
in
xchg
sbb
subb
or
cmc
push
jg
mov
dec
and
in
or
mov
idivb
lods
movsl
pop
push
sub
test
adc
mov
mov
and
inc
out
push
push
enter
gs
cmp
mov
inc
movsl
sub
loopne
jno
sahf
jmp
iret
push
adc
cltd
pop
aaa
xor
pop
int3
insb
ret
cmpsb
outsl
mov
fidivrl
outsl
out
push
pop
lret
pop
add
xchg
popf
shr
mov
ret
aam
imul
rorb
sbb
mov
mov
xorb
into
jp
inc
pop
aam
mov
rorl
inc
adc
xor
ret
test
push
fbld
lds
cmp
cmp
adcl
or
and
lcall
ret
nop
test
jmp
and
adc
ret
mov
inc
pop
daa
insb
xor
stos
imul
lds
in
xor
and
sub
jge
dec
ljmp
call
fcomip
jb
dec
pop
sub
test
xlat
imul
in
repz
or
mov
popa
dec
ret
cld
stos
cmp
dec
mov
outsb
push
and
insb
lret
imul
fadds
sbb
icebp
and
mov
pmulhw
push
lock
call
jne
fildl
push
push
sub
insb
xor
xchg
jl
lods
lock
divl
mulb
push
int3
jo
push
fimull
scas
pop
mov
xor
cwtl
in
sbb
inc
cmpsl
xlat
jb
and
push
leave
mov
scas
outsb
inc
xchg
mov
mov
int3
leave
mov
insb
mov
mov
jecxz
pop
test
ljmp
imul
push
outsb
cwtl
mov
in
add
mov
inc
jl
sub
nop
mov
lock
xchg
jge
adc
mov
lahf
notb
popf
cltd
pop
pop
dec
pop
in
ljmp
add
out
pop
fbld
mov
jle
add
sbb
mov
cmpsb
sti
or
jg
xchg
loop
jnp
jp
mov
push
sbb
jecxz
jp
gs
bnd
pop
mov
jl
jb
push
stos
pop
ds
jns
ljmp
xor
insb
loope
fcoml
dec
mov
leave
inc
cmpsl
sub
mov
les
mov
sub
loop
pop
xchg
jmp
pop
push
xchg
adc
pushf
out
mov
cmp
xchg
fldenv
out
std
xchg
xchg
mov
jmp
out
ds
test
xor
cmpsb
dec
notl
mov
mov
popf
ss
rcrl
into
adc
dec
sbb
cmp
test
movsb
cltd
adc
cmpl
test
add
iret
push
out
jge
jae
push
xor
in
cmp
sub
shr
cmp
pop
add
pop
imul
or
iret
je
cmc
aad
cwtl
xchg
out
lret
roll
xchg
dec
dec
or
les
pop
cwtl
outsb
ret
mov
mov
fwait
jb
dec
popa
xchg
dec
mov
shrl
mov
sbb
lds
cmp
xlat
add
lret
sahf
jae
je
xor
out
dec
fmuls
stos
sub
xlat
jbe
outsb
pop
imul
movsl
lcall
cmp
daa
leave
cld
sub
dec
xchg
inc
xchg
hlt
mov
add
pop
and
jg
jp
jmp
and
jno
dec
fwait
sub
stos
addr16
add
and
cmp
ljmp
iret
dec
adc
pop
rcll
popl
push
push
aaa
lods
or
push
xlat
ljmp
mov
shll
outsl
jge
fdivrl
fwait
in
jp
lret
cltd
lock
push
mov
dec
xor
push
js
int3
or
add
push
incl
add
cmpsb
test
insl
adc
mov
mov
jecxz
mov
sbb
imul
inc
push
xchg
jae
jae
inc
mov
jl
ficompl
cmpsl
mov
movl
xor
dec
push
jl
cltd
or
xchg
cltd
push
aad
into
sbbb
test
adc
bound
inc
out
loopne
and
jl
aam
or
ss
hlt
shrl
cltd
popf
out
and
dec
loop
jno
mov
pop
mov
inc
dec
push
clc
insb
xorb
scas
leave
cmp
imul
fcoms
cmp
fimull
je
mov
mov
mov
xchg
cltd
in
out
cmp
inc
mov
sahf
data16
jae
sbb
lods
stc
jp
or
and
movsb
negb
adc
jg
sbb
andb
jg
inc
stos
repnz
rorl
addr16
mov
xor
inc
movsb
fisttpl
mov
lcall
adc
and
mov
mov
bound
inc
cmp
int
pop
into
out
daa
es
pushf
jecxz
push
mov
mov
rcrb
aaa
sub
test
sbb
enter
cmp
sub
jb
test
or
cs
mov
aaa
insl
or
jns
pop
push
mov
pcmpeqd
jae
xchg
xchg
test
inc
int
ret
ret
int
hlt
mov
orb
lods
fistl
inc
xchg
xchg
mov
xchg
push
push
inc
fdivp
shll
mov
mov
and
movsl
push
mov
push
adc
lret
push
repz
ret
push
jns
xor
mov
enter
hlt
hlt
hlt
adc
sub
cli
or
xor
hlt
mov
aas
mov
adc
jecxz
fwait
cwtl
out
cli
pop
xor
pop
movsl
adc
movsl
stos
pop
rcrl
out
inc
ret
add
mov
insb
ret
xor
leave
sahf
out
adc
lret
int
dec
jecxz
mov
stc
xchg
xlat
ja
test
leave
test
out
jg
lret
xor
xchg
frstor
insl
jnp
icebp
mov
add
lea
sbb
adc
lahf
mov
pop
mov
lcall
xchg
fs
fists
push
movsb
and
dec
daa
inc
pop
call
loope
inc
xchg
sbb
scas
stos
mov
scas
jle
mov
lret
jae
jle
or
cld
push
jnp
cmc
pop
aam
mov
ljmp
in
gs
clc
mov
adc
stos
sbb
les
add
insl
sub
or
imul
test
out
mov
lods
or
hlt
dec
inc
inc
push
push
in
jl
rorl
insl
lret
roll
lahf
sub
lods
push
mov
lds
mov
ret
stos
push
sub
inc
adc
rol
fbld
rcrb
mov
jno
lods
out
cmp
jp
xor
mov
push
insb
dec
jb
call
outsl
fs
insl
jmp
mov
add
and
xor
nop
mov
insb
divb
icebp
stc
je
push
jns
mov
pushf
mov
int3
mov
pop
add
dec
inc
out
inc
daa
push
hlt
xor
dec
mov
repnz
out
popf
enter
test
leave
daa
incl
loope
sti
mov
stos
ss
in
sub
sbb
or
mov
dec
loop
inc
sub
jmp
jl,pn
cmp
push
lods
test
sub
pop
imul
mov
jmp
adc
ljmp
mov
xor
sti
addl
pop
lods
mov
jmp
scas
psrlq
iret
and
inc
cmpl
fstps
or
dec
xchg
daa
js
shrl
inc
fdivrp
lock
xlat
into
sub
push
push
lods
fbstp
xor
lret
jp
mov
mov
xchg
sub
xchg
xchg
popa
push
fdivrs
add
push
add
mov
push
xchg
xor
addl
aas
and
cmp
and
or
stc
and
stos
test
fnstenv
or
test
or
dec
push
es
iret
mov
fistpll
cmp
mov
pop
mov
es
data16
sub
push
xorb
xor
inc
mov
mov
cmpsl
daa
lds
loopne,pn
jns
mov
fidivl
out
or
inc
daa
addb
mov
sub
imull
pop
xor
ljmp
fisttpll
jmp
popf
aad
mov
cld
in
shl
or
mov
sub
bound
or
pop
enter
orl
fistpll
push
cmp
jnp
inc
sub
stos
sbb
call
mov
cmp
mov
lret
cwtl
and
bound
and
xor
ss
cmp
sti
outsl
jb
std
mov
xor
test
mov
lods
es
ja
xor
popf
int3
lock
add
lods
sahf
pop
cmp
or
inc
adc
loop
jecxz
sahf
call
and
subl
call
dec
mov
aam
fidivl
int3
jge
push
clc
std
or
int3
add
int
jb
mov
leave
jmp
mov
mov
aaa
gs
jae
push
ss
hlt
push
sbb
mov
push
inc
outsb
gs
imull
lock
lods
pslld
shrb
xor
add
aam
push
inc
mov
mov
push
scas
dec
pop
popa
push
cmp
loopne
and
faddl
nop
in
jno
addr16
dec
mov
lds
xchg
push
push
getsec
push
shrb
mov
lcall
mov
or
push
popa
add
aaa
push
fidivrl
jnp
pop
jns
sbbl
je
popf
in
jle
punpckhbw
jg
subb
mov
jl
xchg
test
lahf
xor
pop
pop
push
jns
and
adc
repz
das
pop
sbb
and
outsb
lcall
lahf
jae
push
mov
shrb
mov
nop
cmp
xor
or
test
out
sbb
aaa
shlb
push
push
dec
xor
cmp
in
push
loop
add
mov
sub
movl
shlb
xor
inc
sbb
push
add
gs
sti
add
dec
or
popa
fistpl
cmpsl
aad
pop
push
imul
das
mov
icebp
jecxz
addr16
pop
int
sbb
icebp
shll
sbb
jg
jle
mov
enter
nop
sub
dec
dec
mov
in
icebp
adc
in
lret
inc
and
mov
movsl
roll
mov
test
jecxz
negl
popf
push
mov
repz
iret
cmp
mov
mov
fistl
jl
cmpsb
mov
cs
xchg
in
addr16
inc
in
pop
lods
and
push
xor
cmp
adcb
mov
or
negl
and
outsb
push
movsb
out
test
stos
pop
ret
mov
cmp
outsb
jp
insl
and
push
dec
xchg
stc
push
push
jno
movsb
insb
jcxz
add
mov
imul
std
xchg
sub
pop
jmp
sub
call
ret
into
cltd
and
aam
cmp
test
jo
push
jecxz
les
fldl2e
fidivrl
mov
mov
jg
xchg
mov
pusha
out
xchg
fdivrl
pop
into
ret
mull
loop
xorl
jae
pop
jno
fadd
int
cmp
leave
sub
inc
cmp
and
and
sarl
fimull
mov
in
test
push
pop
sub
les
xor
sbb
jge,pn
jmp
add
dec
scas
and
loopne
adc
jp
push
pop
mov
jmp
xor
ja
adc
adc
dec
div
jno
pop
ljmp
scas
dec
jo
adc
sub
dec
mov
in
scas
inc
je
inc
pop
nop
test
movsb
rcll
pop
mov
sarb
aaa
mov
jnp
imul
mov
movsb
lea
inc
adc
jne
cmc
ljmp
inc
pop
mov
mov
fs
repz
cmc
std
jge
lret
adc
scas
dec
pop
jle
add
lods
push
xchg
mov
out
fwait
inc
pop
sar
add
mov
inc
leave
xor
sbb
jne
dec
mov
adc
into
sub
jns
pop
test
lret
mov
mov
cmp
push
mov
and
out
xchg
mov
call
jg
xchg
imul
lods
lret
mov
xchg
or
pop
and
out
iret
inc
cltd
test
out
leave
jae
popf
adc
push
in
or
dec
movsl
push
call
sub
stos
adc
inc
cmpb
ja
push
add
adc
sub
sub
push
in
je
idivb
in
fimuls
jle
jecxz
bound
mov
lock
aas
mov
push
out
shl
jle
cmp
movsl
outsb
out
movsb
sub
sti
test
jnp
jo
cmc
mov
addr16
pop
cmpsl
out
adc
mov
sbb
sub
bound
add
or
cmp
cmp
scas
je
test
inc
pop
xor
pop
mov
js
mov
jle
movsb
dec
out
ror
cltd
pusha
fdivrl
pop
jbe
inc
popf
sti
mov
scas
bound
xor
push
mov
mov
mov
pop
aas
pusha
dec
pop
bnd
lods
push
lea
int
jo
cmp
je
scas
aas
pusha
xchg
sub
or
fisubl
lods
xor
out
int
xor
or
mov
push
stos
gs
push
adc
lea
xchg
repnz
clc
adc
lods
push
sbb
fldl
icebp
xchg
ret
xor
mov
add
popf
js
fnsave
sbb
aas
and
lds
xchg
and
push
mov
mov
nop
cltd
and
mov
pushf
inc
add
mov
popa
or
and
out
cmp
pop
shlb
leave
call
sbb
sar
imul
iret
fisttpll
fwait
mov
aas
xor
sub
push
loop
mov
cmp
sbb
mov
in
imul
orb
cmpsb
movsb
shrl
or
push
sub
cli
arpl
negl
notl
outsb
mov
pop
movsb
out
insb
inc
call
fwait
ret
jbe
pop
out
inc
fiadds
nop
xlat
or
movsb
shlb
mov
mov
push
ret
ja
jmp
xchg
add
addb
aaa
ret
sub
or
jb
icebp
outsb
arpl
out
cltd
xor
mov
sbb
jns
xor
push
fwait
aaa
jge
mov
inc
pop
or
arpl
cmpl
xor
jno
pop
xchg
cmpsb
negl
mov
int
in
int
jecxz
adc
xchg
sahf
push
or
push
mov
dec
bound
sub
movsl
mov
ret
arpl
jge
cs
push
push
fildl
sub
and
jl
inc
dec
adcl
pushl
fsubrl
flds
gs
stc
rcrl
xchg
xchg
cmp
outsl
pop
inc
aam
outsb
pop
outsb
scas
lods
test
shlb
hlt
pop
pop
imul
jp
cmc
ret
lods
inc
int3
mov
lods
jle
je
jo
int
test
ja
xchg
dec
mov
into
cmp
mov
cmp
sahf
pop
in
xchg
sub
sarb
and
loopne
loopne
jbe
inc
outsl
push
sti
mov
mov
mov
fidivl
and
es
lret
xor
sub
lea
lods
pop
in
jbe
xchg
fcomp
cmp
mov
pop
jle
pushf
stos
in
lahf
pusha
insb
or
enter
xor
ds
xor
pop
push
out
dec
mov
popa
xor
in
push
sahf
call
and
push
add
push
mov
imul
sbb
dec
dec
cmpsb
adc
popf
mov
fs
lods
aas
mov
mov
push
int3
jmp
lcall
repz
mov
xchg
push
push
loopne
pop
aaa
dec
dec
mov
ret
fcmovbe
mov
lcall
push
sbb
sub
sub
inc
addl
test
jl
stc
imul
xor
ror
mov
add
mov
clc
popa
fistl
pop
movsl
lahf
nop
add
jbe
int3
add
sbb
ja
cmp
mov
and
push
push
lock
fstps
sub
lahf
and
out
cmp
mov
add
int3
mov
repz
stc
inc
mov
mov
cli
scas
addr16
call
xchg
mov
pop
or
inc
pop
shll
pushf
jmp
push
or
pop
imul
cs
mov
adc
roll
sbb
push
xchg
xlat
fs
lcall
into
popa
cmp
xor
je
sub
scas
into
add
add
es
nop
daa
movb
orb
icebp
xchg
mov
mov
pslld
jno
fs
push
push
jmp
lret
mov
add
mov
and
fisubrl
xchg
pusha
mov
xchg
lcall
daa
jg
and
mov
in
xchg
dec
cmp
je
jle
rol
mov
in
mov
pop
sbb
pop
imul
loop
or
jbe
pop
mov
jg
cmpsl
jl
into
negb
pop
roll
popa
adc
mov
cmp
cmp
test
sti
stos
xchg
nop
or
add
or
rol
cmp
adc
mov
mov
mov
push
outsb
add
inc
cwtl
inc
push
xchg
popa
mov
leave
into
out
or
pop
pop
ss
xchg
add
cmpb
fs
sub
addb
xchg
adc
or
or
push
fiadds
ret
data16
cmpsb
mov
jl
cmp
and
mov
mov
fisubrl
into
or
loopne
dec
mov
int
loop
cmp
dec
and
or
jp
jle
cmpsb
and
shl
push
out
out
scas
jecxz
imul
scas
xor
notl
ficoms
xor
jmp
addl
inc
sub
sbb
shrl
aaa
adc
repz
xchg
aam
movsb
cmp
lds
cltd
jle
loope
or
imul
fldt
fistps
fs
inc
xchg
sub
cld
or
sub
sub
in
test
sbb
inc
or
dec
and
outsl
sbb
jnp
stc
sub
mov
repnz
xor
push
jecxz
mov
orb
cli
ret
icebp
mov
mov
mov
nop
or
adc
xchg
inc
inc
add
dec
inc
mov
fadds
push
lds
punpckldq
sbb
addr16
cwtl
test
pop
fildll
mov
lods
pushf
repz
adc
rol
int
andb
mov
mov
jae
xchg
sub
outsb
lds
jns
cs
mov
xchg
push
repnz
or
dec
dec
aam
cld
scas
ljmp
jns
fcoms
mov
scas
insb
sub
mov
inc
and
outsb
sbb
scas
hlt
movsb
les
aam
pusha
and
xchg
cmpl
cmp
xchg
inc
sbb
je
jne
popf
cmp
enter
sub
xchg
pop
mov
adc
imul
loop
movd
ret
outsl
data16
xchg
jp
cmp
hlt
pop
mov
cli
loop
ficomps
inc
mov
out
arpl
pop
sub
jle
inc
daa
gs
jmp
sbb
ret
loope
jmp
outsl
mov
and
push
push
xor
jo
cmp
push
inc
add
ja
pop
sbb
sub
jg
repnz
pop
mov
jae
iret
dec
loopne
out
fdivr
fs
test
aam
push
mov
cltd
pop
sub
ljmp
pop
pop
push
mov
or
push
pop
lock
loopne
pop
stos
gs
mov
jne
jg
fwait
aas
push
sbb
lds
add
cmc
jecxz
call
movsb
clc
dec
lahf
mov
or
mov
dec
xchg
cmc
cs
fists
leave
and
sbb
arpl
lods
mov
sbb
inc
mov
adc
mov
xor
inc
inc
dec
lret
or
pop
stos
sbb
rcll
sbb
mov
lea
or
pop
mov
es
aas
mov
dec
in
inc
push
add
js
pop
not
mov
add
mov
ljmp
popf
sub
xchg
mov
leave
mov
out
inc
test
mov
mov
addr16
inc
dec
fcoms
es
outsl
mov
pop
js
jmp
jp
aaa
movsl
sbb
and
subb
lds
sbb
and
aam
es
test
arpl
in
pop
test
sub
hlt
sub
and
shll
loop
test
push
in
arpl
ficoml
call
sub
cli
xor
lods
jge
ret
adc
mov
es
enter
decb
dec
push
cmp
push
sbb
jnp
shrl
pop
push
jle
fists
ret
imul
xor
jmp
pop
push
out
fmuls
mov
mov
jno
jne
cmc
hlt
orb
jno
mov
mov
inc
fists
push
js
push
insl
imul
scas
and
cmc
jg
cmc
jge
je
call
fs
in
cmp
sbb
stos
shrb
rcll
push
cwtl
sbb
enter
pop
or
mov
rolb
mov
jo
and
cld
dec
mov
mov
insl
pusha
movsb
inc
dec
push
push
out
cmp
jns
test
or
mov
inc
stc
nop
arpl
insb
scas
inc
cmp
in
jb
fdivrs
mov
jmp
cmp
or
cmp
mov
push
test
shll
mov
adc
decb
outsb
nop
loope
mov
mov
cmp
inc
add
jle
mov
inc
scas
loop
out
cmp
shrl
gs
jl
stos
bound
mov
pop
mov
ret
adc
cmp
mov
ret
std
mov
pushf
sub
jbe
xchg
mov
or
sarb
jmp
shr
lcall
jae
fadds
and
icebp
adc
das
cli
int
nop
ja
push
pop
add
mul
ret
inc
cmpsl
dec
push
fmul
inc
leave
clc
dec
lods
cltd
scas
mov
test
fcompl
inc
xchg
mov
mov
fwait
mov
ret
addr16
icebp
into
dec
clc
je
clc
fwait
xor
in
icebp
xor
out
sub
push
pop
sahf
push
add
sarl
push
rcrl
ret
call
dec
xor
test
cld
popa
xor
adc
pop
add
in
add
insl
pop
xchg
iret
cltd
in
dec
mov
cmp
push
jge
cmp
jecxz
scas
xchg
xchg
mov
iret
jge
mov
imul
insb
lahf
mov
sahf
mov
xchg
and
and
lahf
jnp
test
and
add
push
jns
cli
pop
fsubrp
or
and
cmpsb
addl
adc
rorb
mov
sbb
mov
ret
push
xor
push
push
das
sarl
sub
iret
scas
dec
add
mov
add
push
addr16
das
cmpsl
out
xchg
inc
imul
lcall
mov
push
add
xchg
sbb
mov
xchg
cmpsb
lods
xor
imul
sbb
ret
sti
xor
add
dec
out
fcmovne
pop
xorl
pop
sub
cmp
fsubrl
mov
jl
dec
sbb
cltd
push
ret
and
push
push
mov
aam
jecxz
out
sub
daa
pushf
test
cmpsb
xchg
insb
insb
mov
mov
into
sbb
mov
mov
push
xchg
and
jno
lahf
fcmovne
dec
or
loop
inc
sub
bound
int
test
sub
das
in
adc
test
enter
mov
scas
mov
gs
std
sub
jmp
pushf
push
pop
xchg
adc
lock
adc
sub
ja
fwait
out
fwait
sbb
and
dec
ljmp
xlat
xchg
cltd
lods
rorb
adc
clc
lock
fbstp
mov
imul
int
lret
xchg
lea
cld
jp
pop
ret
and
add
mov
pop
lcall
negl
mov
shlb
adc
in
xchg
push
dec
mov
sbb
push
in
out
outsl
dec
cmc
mov
dec
mov
pop
add
and
arpl
sbb
jl
scas
pop
data16
xor
and
sbb
vpshuflw
mov
out
in
add
aam
daa
jne
in
loop
add
out
pop
xchg
cmp
push
sahf
mov
sbb
ds
mov
push
in
xchg
pop
sub
pushf
adc
jno
pop
popa
push
movb
push
sub
in
sbb
sub
add
push
jbe
sbb
icebp
push
fbstp
ror
fildl
xchg
fwait
pop
add
mov
add
lds
in
jne
sub
mov
sbb
data16
pop
sbb
mov
pop
add
mov
and
test
pop
jnp
push
and
mov
adc
sub
mov
add
push
sbb
mov
cmp
xlat
pop
loopne
rcr
push
sbb
in
inc
sub
inc
rolb
xlat
fcmovnb
shrb
add
dec
pusha
ret
add
ss
cmc
and
ds
push
fs
les
xor
sbb
cmp
int3
push
mov
pop
lahf
push
addr16
lcall
add
cmp
or
sbb
rcll
in
aas
rcl
mov
aas
mov
push
cmpsl
and
adc
repnz
xchg
stc
lret
add
addr16
cmc
inc
repz
cmp
push
add
mov
movsl
inc
push
fstpt
xchg
jne
dec
mov
jns
push
adc
jecxz
pop
cmpsl
mov
xlat
lcall
push
push
les
aaa
mov
dec
dec
orb
js
repnz
sub
test
iret
dec
sub
and
rorb
sti
cmpsb
cmc
sub
aas
inc
scas
inc
dec
sub
sbb
adc
aaa
pop
xor
cmc
scas
movsb
scas
std
enter
insb
mov
out
popf
add
and
scas
icebp
stc
sub
scas
jo
insl
testl
or
lret
mov
lahf
add
lret
iret
loope
daa
adc
sbb
aas
into
sarl
aaa
mov
fistps
push
adc
pop
repnz
sbb
jae
jbe
lods
adc
jbe
push
lahf
imul
test
lods
dec
fdivs
inc
fimull
sbb
cmp
or
pop
mov
mov
arpl
jmp
push
xorb
mov
leave
cmp
push
mov
mov
in
hlt
data16
and
push
push
loope
and
mov
cmp
rorl
stos
es
pop
and
xchg
xor
adc
scas
push
subb
push
cmp
stos
add
pop
lods
sbb
jo
adc
push
mov
loope
aaa
xor
fwait
mov
popa
divl
mov
cmp
xchg
xor
mov
outsl
pop
rcrb
dec
test
sbb
inc
add
and
repz
or
inc
dec
mov
jne
xchg
enter
out
out
out
in
dec
xor
nop
lods
adc
add
xor
orb
sahf
sbb
cmp
jne
cmp
das
insl
inc
dec
pushf
data16
mov
jns
inc
mul
jecxz
cmp
pop
xchg
arpl
jle
sbb
adc
xchg
pop
call
xor
sarl
push
pushf
push
in
ret
xchg
pop
out
fisubl
inc
mov
aas
bound
xor
int3
mov
rcll
xchg
mov
movsl
cmp
lods
lcall
test
push
push
ret
call
sbb
cltd
jbe
orb
dec
mov
and
mov
dec
or
push
fstps
mov
and
incb
jnp
and
or
pop
pop
mov
dec
jle
negb
xor
and
out
hlt
lret
jp
push
and
out
out
xor
mov
ja
cmpsl
lahf
leave
fnsetpm(287
cmp
imul
stc
pop
test
xchg
sahf
scas
push
pop
xchg
mov
mov
dec
adc
in
lds
paddsb
mov
xor
xor
adc
dec
sbb
xor
dec
aas
fst
pop
loopne
cmp
enter
stos
cltd
inc
stc
lods
aad
pop
xchg
mov
or
push
jne
mov
and
leave
push
and
mov
cli
add
outsb
xchg
ljmp
hlt
jne
jecxz
pop
inc
loop
mov
adc
loop
and
xor
pop
mov
stos
or
sti
fsubl
push
int
mov
rorl
scas
jmp
jge
lahf
jp
cmp
bound
xchg
daa
xchg
push
jp
cmp
cltd
or
push
inc
push
aas
xlat
sarl
xor
xchg
and
cmpsb
or
in
fistl
xchg
adc
adc
je
data16
inc
add
xor
sub
add
pop
lds
mov
inc
sbb
filds
mov
sub
xchg
xor
outsb
mov
mov
xor
mov
fs
sahf
inc
cmp
shrb
cmpsl
xorb
mov
mov
test
fnstcw
push
nop
mov
aad
outsb
mov
enter
jne
cmc
jno
sub
ds
jg
xor
nop
mov
scas
mov
je
sahf
jns
int
sbb
imulb
push
test
lods
cwtl
insb
aam
jbe
adc
scas
aad
pop
cmp
push
xor
push
faddl
mov
cmp
fst
xor
out
shrl
dec
jp
mov
test
stos
cli
xchg
pcmpgtd
data16
lret
dec
push
jae
xchg
jecxz
es
test
dec
lods
js
incb
clc
int
or
shll
inc
mov
adc
pop
inc
inc
pushf
call
mov
popf
or
sub
scas
sub
lahf
push
sub
push
mov
and
arpl
je
in
stos
jp
inc
dec
xor
add
xchg
push
mov
test
ror
inc
cltd
movsb
inc
cld
adc
push
mov
pop
push
scas
cmpsl
imul
int3
sbb
mov
inc
pop
pop
mov
jge
loopne
out
push
lea
decl
or
lcall
jnp
in
ret
inc
or
mov
mov
jae
shr
rorl
repnz
ja
aaa
jmp
mov
clc
cld
xchg
and
pop
xchg
jns
ret
scas
inc
sar
xchg
lods
inc
mov
jmp
add
movsb
mov
ja
and
mov
arpl
inc
cld
fs
add
fwait
xor
mov
or
lods
push
nop
pop
outsl
nop
inc
outsl
xor
movsl
add
movsb
popf
mov
outsl
xlat
aas
cmpsb
jp
in
pushf
mov
lahf
pop
mov
test
call
in
push
lret
mov
pop
adc
je
sbb
cltd
movsl
fstpl
js
sub
adc
mov
sbb
cmp
xchg
rorb
dec
mov
cmpl
mov
xchg
cmp
and
jp
cmpl
cmp
scas
pop
dec
cmp
testb
arpl
sarl
repnz
mov
rcrl
push
inc
xchg
lock
fs
dec
fs
push
sbb
mov
movsl
sbb
popa
mov
mov
inc
mov
sti
add
mov
pop
pop
add
addr16
jp
mov
pop
ss
mov
mov
shrl
mov
xchg
push
fsts
scas
cwtl
dec
push
scas
push
out
pop
test
out
in
mov
dec
adc
loope
repnz
cmp
inc
sub
in
push
push
in
bound
sbb
jo
test
popf
pop
test
cmc
xor
push
jge
cmp
and
insb
fwait
xchg
mov
xchg
xchg
xor
adc
or
cmp
sbb
jbe
cld
stos
or
xchg
fcmove
add
inc
mov
mov
iret
mov
inc
outsb
rcl
frstor
xchg
sbb
fdivl
popl
lcall
mov
jg
jp
inc
xchg
divb
lds
dec
mov
out
ror
fbld
jo
mov
jns,pt
mov
dec
cmp
mov
cli
mov
sbb
fisttpll
lahf
lea
mov
cmp
fmull
push
stos
cmp
xchg
adc
jg
mov
xor
jp
out
push
leave
jo
mov
arpl
jnp
push
es
push
mov
or
mov
lret
sub
addr16
pop
jns
dec
push
faddl
xor
push
mov
dec
ror
mov
jae
sub
mov
pop
das
inc
jne
cmp
dec
inc
cld
aas
inc
push
cmp
and
xor
aad
jg
test
cmp
cmp
fxch
aam
xchg
lds
mov
pop
into
stos
ret
dec
mov
scas
jno
mov
or
push
cmpsb
int
fisubrs
and
dec
cmp
icebp
les
dec
add
inc
cmp
shr
inc
xchg
cmpsl
aas
push
idivb
repnz
pop
sbb
pushf
sbb
pop
add
xchg
or
out
mov
scas
xchg
fsubr
cwtl
mov
hlt
mov
jg
dec
pop
shrb
mov
push
shrb
pop
or
insl
cmp
xchg
or
fsqrt
lock
fwait
fs
ret
into
jp
and
js
mov
adc
inc
xor
fldenv
sahf
push
sub
fs
jo
je
iret
les
push
stos
pop
test
mov
ljmp
push
hlt
leave
push
inc
sub
pop
xchg
rclb
or
push
push
sub
ljmp
dec
cmc
sub
add
push
jns
dec
add
adc
or
dec
lds
pop
in
hlt
xchg
inc
pop
or
scas
imul
idivb
sub
test
jbe
add
enter
mov
arpl
xchg
ror
sbb
cmp
and
jb
pop
jg
pop
fsubs
int3
lock
sbb
iret
nop
and
aaa
mov
rolb
dec
or
adc
sahf
push
lcall
or
cmp
rcl
popl
js
mov
js
imul
or
test
push
mov
sub
cld
subb
es
cmp
xlat
push
xchg
pusha
sbb
sub
pop
ffreep
enter
mov
std
shlb
jmp
pop
divl
repz
mov
nop
scas
lret
arpl
mov
push
rorl
pop
mov
int
xor
insl
mov
add
or
sub
jecxz
sbb
shrb
test
leave
leave
sbb
loope
push
adc
test
shl
stc
mov
jp
jl
push
xor
mov
sahf
pop
cmp
scas
mov
xor
sub
idivb
pop
repnz
sti
cs
repz
pushf
mov
call
lret
mov
push
ljmp
sbb
or
cmpsl
jle
iret
push
xor
div
adc
daa
sbb
add
fmull
daa
jg
sbb
ret
pop
and
sub
xor
push
sub
out
clc
enter
jmp
or
ret
iret
into
sbb
jecxz
leave
dec
icebp
les
pop
scas
lret
and
je
fwait
loopne
icebp
jne
repz
lcall
pop
mov
bound
inc
xchg
addr16
jecxz
lods
int
aam
fs
mov
addl
jge
iret
push
lods
pop
data16
sub
mov
dec
jb
dec
jle
nop
sub
sahf
pop
cmp
cmp
les
lock
adc
data16
jo
sar
jnp
cltd
xchg
pushf
ljmp
lahf
mov
sbb
pop
mov
pop
insl
shl
bound
daa
inc
out
jmp
pop
fs
cmp
into
dec
xlat
fistps
or
test
xlat
mov
pop
inc
and
stos
dec
rcrb
out
mov
xchg
fsubl
xor
pop
xchg
push
jne
outsl
inc
fcomps
jge
mov
leave
pop
pop
sti
inc
jbe
push
repnz
or
addr16
adc
outsb
daa
lret
mov
inc
popf
jbe
or
mov
push
adc
jecxz
adc
or
test
inc
sub
dec
jg
cmpsl
cmp
sub
ud2
imul
andb
push
pop
fists
mov
stc
pushl
mov
ja
mov
imul
int
cmp
lret
mov
in
imul
inc
leave
and
dec
and
push
sbb
and
and
inc
jp
add
xor
aam
insl
mov
popf
sbb
and
hlt
cmp
rorl
faddl
jmp
jnp
and
xor
or
mov
and
out
test
movsl
jbe
enter
call
jbe
push
mov
les
pop
cli
or
jp
mov
and
data16
enter
jp
mov
popa
cltd
bound
imul
clc
outsb
lock
mov
xchg
aaa
test
arpl
nop
xor
sub
outsb
into
mov
je
push
sub
sahf
mov
add
icebp
out
imul
xorl
inc
ja
movsb
or
fcmovne
or
enter
mov
cwtl
xor
push
jecxz
mov
sbb
js
mov
push
pop
enter
leave
xor
dec
add
inc
and
movsb
inc
sub
repz
or
clc
dec
pop
sbb
add
cmpsb
popa
ret
mov
pop
fiadds
imul
movsl
push
cs
cwtl
clc
lds
add
int
sbb
jne
dec
nop
xlat
cwtl
sbb
push
subl
xchg
push
push
adc
mov
nop
ljmp
pop
shrb
add
mov
jbe
sub
pop
aaa
push
in
and
roll
mov
xchg
mov
das
push
sahf
cmp
inc
push
dec
or
mov
push
lahf
enter
pop
mov
out
dec
rcl
pop
push
pop
xchg
add
ret
aad
mov
aam
xchg
xor
rcll
addr16
push
test
push
jno
ljmp
xchg
pop
hlt
aad
add
adc
cmc
mov
xor
xchg
sbb
pop
popf
movl
shll
inc
sub
pop
loopne
xor
fists
jmp
jge
pop
push
sbb
sub
dec
in
arpl
push
sbb
mov
rolb
adc
adc
xlat
icebp
or
inc
bound
sti
lods
push
enter
fimull
mov
or
jg
gs
cmp
sbb
adc
xor
fcoms
dec
add
test
daa
sub
mov
in
push
ja
lret
cmc
negb
ljmp
out
or
xchg
inc
jb
mov
and
mov
movsl
pop
inc
lret
and
mov
and
xchg
rol
std
out
lea
ds
sbb
popf
pop
movsb
or
test
inc
add
lock
jb
cmp
mov
sub
xor
add
dec
insb
scas
sub
fistpl
es
mov
push
out
idiv
adc
pop
or
jg
mov
adc
cmp
arpl
sbb
mov
fnstsw
xor
push
jle
out
dec
push
pusha
add
jle
and
sub
xor
out
movsb
add
imul
push
ja
lea
cmc
lahf
sub
fcoml
jecxz
jecxz
inc
or
xchg
ja
xchg
mov
test
cmpsl
in
push
hlt
cwtl
enter
pop
lods
pop
call
inc
dec
and
cmp
push
fs
inc
call
testb
rorl
rorb
push
test
pop
sub
adc
aam
mov
movb
ss
mov
pop
inc
rcll
lods
sahf
lret
mov
cld
aad
inc
jg
int
scas
popf
xor
sbb
in
lods
pop
add
loopne
xchg
cmp
jmp
jge
push
loopne
xor
les
popa
mov
ja
sahf
jge
rclb
sti
data16
mov
stos
or
xlat
shlb
jle
cltd
mov
fmul
std
mov
pop
nop
or
xor
pop
sub
imul
push
jno
fcoms
aad
mov
sar
sbb
mov
fistpl
mov
pop
es
lods
call
sub
mov
sbb
adc
sub
mov
call
lds
sbb
mov
cmp
das
push
idivb
add
push
fcomp
cmc
cmpsb
das
mov
mov
jecxz
pushf
subl
rorl
imul
push
and
or
jl
and
and
jp
mov
push
mov
mov
mov
sub
test
jne
adcb
fcomip
inc
or
test
out
xchg
into
or
fwait
dec
hlt
cmp
movsb
mov
xchg
cmp
inc
adc
pop
sti
xchg
xor
pusha
and
mov
mov
pop
in
inc
mull
mov
cmp
cld
sub
testl
movsl
enter
test
in
ds
jl
and
rcrl
xchg
rcrl
iret
ret
sub
cmpsl
and
xchg
add
xchg
outsl
aas
jle
popa
push
cli
sbb
mov
jb
pop
mov
xchg
mov
adc
repnz
cltd
ds
test
popf
push
aaa
les
cs
xchg
mov
pop
xor
mov
std
pop
dec
faddp
inc
sarl
vcvttpd2dq
js
and
loopne
mov
aaa
aam
jp
in
push
jae
daa
xor
jle
push
icebp
shrb
sbb
ss
pushf
adc
aam
sbb
jge
andl
cmc
icebp
push
and
jle
in
jne
loopne
data16
mov
dec
pop
lods
test
jbe
cmp
fwait
hlt
xor
pop
add
add
lret
inc
adc
push
dec
inc
sub
jmp
add
push
xor
rol
idivl
loopne
je
pop
mov
movsb
and
out
sbb
push
mov
lock
cwtl
ja
aaa
loop
or
mov
aaa
mov
xor
popa
inc
jle
mov
sbb
ss
xchg
loop
ficompl
inc
sti
inc
aaa
sbb
mov
addr16
icebp
jle
pusha
dec
sbb
cltd
adc
jo
bound
loop
sub
push
hlt
clc
outsb
jge
mov
and
cmpsl
pop
push
push
mov
inc
inc
sbb
mov
aaa
sti
xor
test
mov
in
cld
and
add
xchg
xor
cmp
jg
add
clc
movsl
fadds
arpl
or
inc
mov
pop
dec
cmp
rolb
enter
ret
pop
loop
lock
jmp
xchg
push
lock
rclb
clc
sub
push
inc
test
fsubr
adc
push
imul
scas
push
cmp
adc
adc
push
in
mov
jecxz
sbb
clc
lcall
mov
dec
cmpsl
cmpsl
xchg
loopne
mov
movd
mov
lcall
inc
ljmp
cmpsb
jns
or
jle
loop,pt
pop
sbb
jae
xchg
xchg
stos
repnz
mov
xor
push
sub
mov
jno
es
loope
mov
mov
dec
cmp
cwtl
cli
add
iret
das
popl
cmc
pop
imul
add
inc
fs
test
mov
mov
cwtl
and
mov
inc
mov
push
or
shlb
aam
scas
fwait
imul
aaa
dec
fisubs
jo
pop
push
mov
jecxz
pop
cmp
repnz
pop
add
cmc
ficompl
stos
xchg
lds
loop
cvttps2pi
iret
insl
nop
shlb
mov
int3
in
jo
test
and
xchg
adc
data16
add
fnstsw
sub
pushf
adc
or
pop
xchg
and
stos
jno
or
sbb
adc
mov
in
std
leave
and
mulb
icebp
test
daa
ret
test
lcall
ror
adc
mov
push
icebp
sub
insb
aad
push
add
add
rorl
ds
or
mov
and
xlat
neg
pop
push
cmpsb
cwtl
orl
push
xchg
mov
mov
jecxz
dec
dec
mov
int
lret
gs
daa
add
mov
test
adc
popa
dec
cmp
out
movsl
dec
sub
rol
outsl
jp
pop
andb
cs
stos
idivb
inc
xor
jne
push
movsb
aad
mov
add
xchg
lahf
xchg
dec
movsl
fisubrl
into
popf
xchg
out
inc
rcrb
mov
inc
sbb
mov
movsb
push
scas
mov
adc
push
rcl
and
dec
cwtl
pop
xor
shl
jb
pop
mov
xlat
mov
fsubrl
fptan
mov
and
js
aaa
push
push
mov
push
cli
div
test
daa
pusha
rorb
in
jns
push
movsl
daa
ds
pushf
mov
out
cmpsl
int
ljmp
ja
and
pop
dec
int
lds
out
xor
mov
mov
ret
sete
jmp
sub
daa
ss
ret
gs
sbb
xchg
pop
fldenv
fcmovnbe
jbe
push
cmp
sbb
or
fimuls
xchg
or
cs
js
xchg
cmpb
push
call
movsb
jecxz
lahf
ja
push
and
lcall
adc
or
shl
mov
lods
and
jb
cmc
xor
sub
jecxz
loop
ret
push
mov
lahf
and
test
mov
cwtl
pop
aad
ss
cmpl
stc
push
repz
or
outsb
shr
push
pop
sbb
fcoms
les
add
inc
test
dec
and
out
mov
xchg
sub
in
or
mov
ret
sub
and
cmp
test
in
icebp
adc
andl
mov
and
fsub
push
roll
dec
lahf
cwtl
adcb
icebp
xchg
lds
jg
aam
es
jge
mov
dec
adc
mov
sub
push
sub
cmpsl
mov
push
jmp
imul
sbb
fstpl
fisttps
sti
and
inc
scas
xor
movsb
jbe
test
jge
mov
jae
dec
sub
jecxz
xor
pusha
inc
jo
push
push
das
mov
mov
repnz
mov
or
sahf
mov
push
mov
and
hlt
fidivl
cwtl
jl
pop
in
push
pop
mov
daa
pop
sub
inc
sub
sti
daa
cmp
pop
dec
add
fsubp
call
jge
lret
fnsetpm(287
mov
arpl
or
cmp
push
jecxz
inc
into
test
loop
xor
test
clc
gs
pop
insl
outsb
fisubrs
push
pop
cld
adc
push
xchg
rcrb
lret
push
daa
lahf
inc
in
push
pop
lahf
mov
aad
jno
jp
adc
lcall
js
sub
jmp
push
negb
xor
mov
fsubrs
sbb
sarl
cmpsb
fldenv
pop
mov
stc
daa
stos
test
pop
mov
test
clc
pop
js
mov
inc
pop
jg
movsl
movsl
adc
sbb
rorl
aas
pop
out
jae
push
iret
push
or
or
icebp
jecxz
mov
xchg
imul
inc
rcrl
fwait
adc
iret
xor
sbb
lods
push
sub
xchg
cld
pop
mov
mov
shr
mov
cli
add
sbb
mov
ret
sbb
jnp
push
dec
mov
hlt
mov
cwtl
outsb
shrl
xchg
inc
pop
dec
ficomps
mov
mov
adc
call
jge
mov
dec
pop
sub
mov
pop
icebp
sub
inc
xor
lret
out
and
std
jmp
lcall
ljmp
jp
xor
xchg
insb
fs
pop
mov
cltd
push
inc
jmp
mov
jp
lods
mov
movsb
aas
pop
pop
es
xchg
enter
mov
mov
mov
aad
and
mov
popf
loop
aas
mov
inc
jne
in
mov
adc
mov
repz
adc
std
jb
mov
and
in
lods
movsl
negb
jo
cmp
outsb
dec
xchg
test
fucomp
std
xor
daa
pop
nop
add
ja
adc
shlb
loopne
adc
xchg
sbb
inc
xchg
xchg
add
mov
inc
mov
lea
add
push
in
lods
je
jno
sub
mov
mov
xor
cmpb
into
enter
inc
ja
add
fisubrl
int3
mov
dec
mull
leave
data16
out
clc
stc
and
jae
sub
lret
ret
inc
jns
cwtl
and
mov
stos
pop
pop
add
cmpsb
loopne
xor
js
test
lds
add
std
mov
ret
es
test
popf
fsub
scas
loopne
and
pushf
add
test
jg
ftst
data16
xchg
pop
and
insb
sub
ds
sub
push
sub
jo
test
pusha
pop
cli
daa
dec
jge
xor
sub
inc
and
scas
adc
xlat
pop
cli
lahf
or
jnp
popa
pop
pop
push
sub
cmp
and
les
push
mov
leave
fimull
pop
out
and
add
xchg
jg
int
sbb
in
stc
sub
inc
std
mov
aaa
xor
mov
loopne
aam
mov
mov
ljmp
lea
sub
push
movsl
inc
adc
dec
js
jle
jbe
and
push
cli
pop
push
not
std
or
inc
movsb
mov
pop
je
in
call
loop
cmp
enter
sub
mov
dec
popf
psubq
cli
lahf
jo
push
mov
or
dec
cli
adc
jmp
dec
repnz
inc
xchg
aas
sub
in
xor
xchg
into
aas
push
add
stos
mov
mov
stc
and
jg
fldenv
push
jp
je
das
inc
pop
hlt
inc
xor
sbb
mov
insl
jecxz
shll
je
sub
inc
and
xchg
push
mov
add
out
fiadds
out
rolb
in
pop
adc
pop
xchg
repz
lahf
aam
push
inc
stos
mov
jo
sub
cltd
xchg
mov
enter
imul
cmpl
cmp
xchg
and
out
stc
enter
mov
cwtl
fidivl
jb
and
and
cmp
hlt
adc
dec
sub
test
mov
stos
mov
sbbb
xchg
pushf
push
popa
xchg
outsl
fiaddl
push
test
cs
in
lds
mov
sub
xchg
mov
mov
xchg
pop
jnp
pop
sub
push
jnp
outsb
inc
add
dec
inc
bound
inc
or
pop
and
push
in
add
clc
fs
rcrb
sub
mov
xor
add
fucomip
jns
cmp
add
into
cmp
dec
lock
adc
push
mov
jmp
jne
shrb
sbb
fyl2xp1
or
lcall
std
inc
daa
shlb
out
xor
test
xor
pop
ljmp
mov
inc
mov
ret
jo
icebp
imul
fwait
sbb
rcrl
push
inc
out
adc
into
sahf
sbb
adc
mov
cs
xchg
mov
xor
daa
add
lods
mov
stos
jmp
lods
sbb
jno
xchg
dec
mov
popa
push
cmpsl
mov
xor
push
lds
pop
sbb
arpl
inc
lahf
out
iret
ss
inc
push
lds
adc
jae
fldcw
or
icebp
aas
jecxz
cld
mov
sbb
pushl
xor
popa
xor
mov
rol
cli
sbb
cli
fwait
xchg
dec
out
lahf
cmp
push
mov
add
cmp
cld
mov
into
adc
inc
cmp
jne
sbb
enter
mov
cmpsl
ret
lock
aaa
mov
arpl
cmp
insb
std
out
js
or
sbb
dec
mov
or
xor
dec
push
rcrb
dec
jge
ljmp
lods
push
xchg
add
or
push
mov
xchg
xor
lcall
arpl
imul
js
cld
inc
repnz
xor
and
xor
inc
sarl
aas
and
stc
pop
enter
fnsave
mov
aaa
mov
out
pop
pop
sarb
movsb
cld
je
pushf
sub
or
add
adc
jne
loopne
mov
dec
and
push
cmp
jecxz
das
mov
mov
in
cmpb
xor
and
out
outsb
lcall
or
xor
int3
dec
mov
xor
and
lahf
pop
mov
js
adc
orb
negl
push
ljmp
adc
pop
jp
dec
fadd
jo
adc
jg
lds
add
aam
cmp
xchg
push
mov
shll
outsb
xchg
jns
or
inc
mov
mov
pop
sub
fmul
xor
sbb
out
and
loope
js
leave
sti
dec
test
cmpsb
cli
xor
jae
jno
push
loopne
aad
loope
mov
mov
jp
cld
or
inc
and
rcll
jae
inc
jne
insl
sub
and
mov
sub
idivl
nop
jg
xchg
cmp
xor
test
dec
pop
repz
sub
xor
xchg
sub
pop
arpl
shll
sub
test
in
ljmp
mov
adc
ret
dec
repnz
xchg
dec
ja
jno
cld
xlat
mov
mov
out
js
xor
push
adc
sub
add
bound
and
loopne
lahf
mov
dec
jecxz
inc
outsb
subb
aam
push
imul
and
pop
mov
enter
adc
les
ret
cmc
mov
lahf
xor
idivb
lock
or
mov
ds
xchg
push
lahf
jo
cmpsb
rclb
sti
lret
add
in
daa
cmpsl
xchg
mov
stc
fisubl
in
loop
and
and
aas
imul
hlt
and
xchg
xor
add
pop
cli
loopne
in
sub
cwtl
orb
fisttpll
or
inc
adc
xor
and
sti
fmulp
repnz
push
test
inc
inc
ja
push
fwait
xor
mov
push
rclb
push
mov
clc
insb
lods
cmpsl
inc
ja
clc
push
add
xchg
ljmp
movsb
in
das
popf
mov
cmp
sub
int3
stos
xlat
dec
cmp
mov
pop
and
decl
les
mov
jnp
jmp
test
pop
and
out
rorl
jo
dec
roll
ror
lahf
push
shlb
clc
add
cmp
std
in
ret
stos
mov
sbb
cmp
ja
insb
dec
fcoms
popf
fadd
gs
adc
mov
pushf
mov
mov
pushf
rcrb
push
imul
add
xchg
rol
push
pop
mov
inc
add
pcmpeqw
cmp
mov
cmpxchg
js
stos
addl
daa
ljmp
jae
inc
xchg
mov
mov
mov
es
lods
std
sbb
inc
scas
int3
les
shrb
push
scas
pushf
dec
mov
movsl
sar
mov
mov
push
fcmove
adc
push
pop
insl
sbb
push
das
pop
gs
pop
mov
add
dec
call
cmpl
test
outsb
add
loop
xlat
fbld
push
repz
jae
jg
call
xchg
popa
pop
xor
repz
leave
lret
dec
cmp
mov
int3
and
jb
insl
xor
test
sub
adc
movsb
jo
lock
addb
lret
and
pop
aas
or
push
shrb
mov
daa
cmp
out
add
fs
lods
inc
mov
int
cmp
fsubs
out
push
mov
push
gs
lds
add
stos
and
push
sub
sbb
ljmp
cmpsb
inc
xor
jbe
mov
jb
stos
std
and
mov
fstpl
sub
insb
stos
push
or
insl
push
add
jge
cmpsb
push
jp
fistpl
jl
cmp
cmc
adc
divb
mov
pop
jg
jmp
or
pusha
aas
aaa
mov
loopne
adc
mov
cmp
mov
out
std
mov
js
pop
pop
fmulp
xor
aad
push
jl
fidivs
push
xor
sub
in
pop
std
cmp
xchg
adc
cmp
pop
xchg
xchg
ljmp
adc
fmull
cmp
jno,pn
push
jb
fimull
and
imul
lea
inc
dec
repnz
sahf
jno
adc
inc
lret
fistpl
repnz
decl
jae
jnp
nop
sbb
jae
movsl
les
push
pop
push
push
push
pop
addr16
or
mov
or
mov
push
pushf
outsb
or
mov
cld
jbe
shll
cmpsl
xlat
add
mov
jp
fildll
loop
adc
pop
popa
loope
sbb
rolb
xchg
notl
out
dec
push
insl
test
movsb
movsl
adcl
mov
call
out
mov
seta
and
dec
cs
xstore-rng
cmpsl
inc
test
fists
jmp
inc
push
out
ret
mov
pop
dec
pop
and
push
cmp
adc
push
push
mov
adc
push
pop
jge
arpl
pop
xchg
sarl
stc
push
and
xchg
shr
xor
xchg
pop
jns
dec
inc
inc
addr16
fadd
int3
add
mov
cld
imul
cwtl
inc
lcall
repnz
or
movsb
lods
pop
es
addr16
push
push
hlt
pop
mov
call
jb
fsts
sub
mov
js
les
adc
xchg
or
aaa
pop
insl
enter
andl
in
outsl
in
dec
mov
stos
imull
adc
cmc
sbb
push
add
cmpsb
xchg
ljmp
out
loopne
xor
lea
xchg
mov
push
data16
pop
movsb
xchg
mov
dec
pop
mov
or
dec
jo
cltd
sub
sub
cltd
xor
lods
fildl
repz
sbb
pop
test
filds
xchg
jo
hlt
push
sbb
or
test
mov
mov
jns
rorl
addb
dec
push
ficoml
rorb
sub
cmp
push
mov
in
sbb
mov
sarl
arpl
push
sub
xor
inc
cmp
jb
pop
adc
fiaddl
je
in
loope
mov
sbb
sub
push
push
mov
not
mov
leave
jecxz
mov
stos
mov
add
sbb
jl
sti
out
js
ret
lods
dec
push
aas
hlt
out
pop
jnp
sbb
andb
fs
scas
mov
sbb
sti
mov
idivl
jb
xchg
sahf
mov
add
push
ja
xor
pop
test
aam
jmp
pop
mov
in
out
xor
loop
add
inc
xor
leave
in
lret
mov
loop
mov
bound
sub
jbe
popf
scas
xor
aaa
pop
mov
mov
mov
sbb
xchg
int
mov
jns
add
mov
jge
idivb
jo
push
jo
fmulp
or
mov
test
jae
inc
mov
mov
es
add
add
xchg
mov
jecxz
jns
adc
jno
imul
add
adc
jnp
aam
jl
ds
push
jo
add
leave
loopne
and
xor
daa
add
push
sbb
xchg
sbb
jmp
iret
jecxz
mov
sbb
addr16
cmpsb
dec
mov
pop
pop
fsubr
sahf
mov
mov
scas
or
fstpl
jae
int3
stos
fcmovu
sub
mov
lret
push
mov
nop
pop
mov
sbb
and
int
mov
pop
test
fs
das
out
fdiv
mov
add
and
insb
or
jns
mov
lea
pop
std
repz
stos
in
sbb
push
mov
gs
and
stos
out
mov
sub
js
mov
pop
mov
mov
pop
or
movsl
sbb
and
popf
insl
sub
mov
cmpsl
push
mov
lret
pushl
mov
pusha
psubw
sbb
inc
sub
and
rcr
das
cmpsb
xchg
idivb
addr16
sub
push
faddp
je
mov
out
pop
icebp
mov
sbb
lret
test
sub
adc
popf
stos
insl
and
lret
mov
xlat
mov
out
dec
sbb
cmp
call
cmp
out
mov
aas
pop
add
dec
movsl
push
mov
xor
in
jecxz
imul
dec
je
dec
and
adc
inc
pop
ljmp
jmp
dec
sub
fisttps
pop
ret
or
icebp
push
sub
mov
jo
mov
mov
gs
mov
call
mov
cltd
icebp
arpl
fists
mov
js
pop
outsl
xchg
stos
mov
fs
lods
jg
mov
aaa
mov
popf
mov
daa
inc
jmp
mov
and
mov
pop
add
out
cltd
pop
sbb
fucomip
fcompl
and
inc
xchg
ljmp
insb
ret
cmpsb
mull
loopne
inc
pop
mov
mov
rcrl
dec
dec
pop
test
lahf
mov
fidivs
xchg
and
ljmp
pop
outsb
xor
xor
loopne
rclb
notb
fistpl
mov
flds
les
out
cmp
push
cmp
xchg
xchg
sub
imul
shr
pop
sbb
sbbl
ja
pop
sub
inc
ds
sbb
popl
mov
or
hlt
fwait
enter
movsl
inc
clc
sbb
out
sar
xchg
mov
pop
push
mov
mov
es
pop
imul
addr16
cmpsl
cs
or
fcmovnu
mov
ret
mov
outsl
fxch
mov
push
adc
push
scas
cmp
add
cmpsb
sbb
add
and
mov
mov
fldcw
mov
stos
shll
cmpb
pop
aas
mov
int3
mov
dec
and
aaa
cmpsl
lret
ret
movsb
dec
lret
mov
xor
dec
and
lods
pop
fwait
lahf
loopne
sarl
mov
add
shll
jo
pop
out
jo
cmp
mov
fwait
int3
and
sub
sub
xlat
mov
cmpsb
outsb
std
jnp
or
pop
shlb
sbb
flds
jg
adc
push
pusha
inc
push
sub
xchg
dec
lea
inc
test
jnp
cmpsl
or
and
cmp
ret
and
adc
popf
jge
fidivrs
push
and
fcomps
jne
fisttpl
jae
cmc
test
pop
jne
ss
ficoms
bound
movsb
mov
xor
adc
xlat
mov
pop
cmp
sub
or
mov
adc
mov
cmp
mov
lahf
add
sbb
insl
fisttpll
cmp
stos
cmp
push
mov
xor
jo
pop
lds
jb
mov
cmp
iret
xor
into
pop
sbb
sub
and
loope
push
xlat
loopne
push
cld
mulb
cld
mov
xchg
or
dec
fdivl
mov
mov
mov
jae
movsl
int3
aaa
cmp
cmpsb
iret
jecxz
fcomp
es
std
add
fucom
pushf
stos
into
imul
inc
push
jl
addb
loope
jno
stos
mov
imul
mov
outsl
cmp
popf
pop
lcall
or
xorb
mov
int
cmpsb
imul
ror
mov
ret
lret
test
mov
rcrl
mov
mov
jnp
or
pop
ds
push
cld
mov
imul
lahf
ljmp
lock
jle
lahf
inc
push
pop
xchg
pop
cmpsl
mov
aaa
mov
out
xor
repnz
aad
pop
push
xchg
fnstenv
pushl
fcmovnu
and
lahf
jae
ret
mov
aaa
test
sbb
shll
cwtl
lcall
addb
jmp
jle
fs
dec
push
and
fcoms
pop
shlb
addr16
xor
movsb
ror
mov
test
jle
je
mov
xor
xlat
mov
mov
push
sar
out
cmova
lock
popf
push
xor
xor
jl
mov
repz
jne
into
dec
cld
sbb
push
mov
xor
jo
cmp
in
inc
scas
mov
sbb
sub
stos
fsubrs
lods
mov
mov
dec
jno
inc
push
rorl
fwait
out
xlat
cmp
ret
fcmove
jecxz
dec
daa
adc
or
cwtl
or
mov
mov
pop
jp
stos
and
clc
push
pop
sub
mov
loopne
sbb
push
iret
daa
aas
popf
jbe
rcl
ror
jnp
cmp
cmpsb
repz
arpl
pop
fmuls
sub
pop
xor
sub
je
xor
lea
pop
sub
mov
push
ss
sbb
sbb
aad
xor
mov
cmp
lods
mov
jbe
aam
sub
lods
mov
adc
push
xchg
sbb
push
mov
and
pop
mov
xor
jge
mov
shrl
dec
dec
fstps
pop
sbb
xor
adc
sub
ja
ds
ret
fstl
jae
xchg
andl
adc
nop
mov
repnz
hlt
test
xor
inc
sbb
bound
popa
stos
sub
ds
add
jp
jne
lods
cmp
lcall
mov
lock
arpl
add
ret
add
add
jecxz
add
cmp
push
repnz
mov
insb
pop
lock
push
xchg
lea
mov
jnp
stos
ret
mov
jo
loop
in
imul
and
or
xor
sbb
xlat
arpl
inc
outsl
and
bound
test
std
push
sbb
std
out
ficomps
cmp
adc
lret
or
adc
mov
mov
adc
mov
call
push
jae
cmpl
push
insb
ret
insl
mov
incl
mov
fistpl
jge
aam
loop
in
adc
popa
sbb
dec
mov
fs
pop
add
cltd
insl
cmpsl
mov
xchg
out
hlt
dec
imul
pusha
pop
xchg
idivl
pusha
and
xchg
clc
imul
outsb
je
iret
gs
sub
xor
ss
and
lahf
jmp
daa
aaa
inc
or
xor
pop
mov
push
out
cmp
faddp
jo
subl
insl
mov
dec
and
pushf
jbe
pop
pop
in
mov
fsubrl
and
mov
adc
jg
mov
test
hlt
shlb
fwait
push
mov
aam
mov
inc
inc
lret
mov
mov
push
aad
adc
lret
and
fisttpll
ret
arpl
xchg
or
call
call
sahf
gs
and
arpl
cmp
mov
sbb
pop
in
fadds
loope
dec
call
fwait
xchg
jnp
jb
xchg
adc
push
xor
in
mov
ret
minps
sub
add
in
mov
xchg
loope
mov
fnstenv
xchg
xchg
jmp
add
cmp
mov
arpl
gs
mov
out
ss
pop
pop
dec
mov
push
mov
or
push
ljmp
mov
cltd
int
and
xchg
and
arpl
fs
cmp
mov
ret
and
fs
data16
jl
gs
sti
fidivs
sub
lret
xchg
jle
aas
mov
aas
inc
es
daa
std
dec
xchg
pop
daa
loopne
push
jnp
mov
mulb
or
mov
stos
mov
and
cmpsb
lods
inc
movsl
bound
sbb
loopne
sub
push
sbb
in
mov
jge
jmp
dec
cmc
add
inc
push
add
fstpl
jmp
fmuls
inc
inc
sahf
xchg
inc
jne
inc
stc
xchg
or
inc
sub
leave
mov
cwtl
jmp
mov
jp
cmp
cli
dec
pop
insb
jp
test
pop
in
push
mov
jl
push
pop
rcrb
pop
aad
hlt
push
sub
adc
scas
fst
sbb
push
nop
mov
loop
int3
pop
xor
cmp
mov
cmp
ret
mov
leave
inc
repnz
js
push
cmpsb
dec
mov
aad
sar
jg
add
in
dec
popa
xchg
xor
sbb
jno
jecxz
roll
aad
ljmp
sub
sarl
sbbl
adc
jle
lods
decl
xor
sub
ss
inc
pop
mov
repnz
xor
lods
jnp
xchg
push
paddq
xchg
jnp
ss
push
popf
push
cmp
mov
movsl
cmp
and
push
mov
clc
loopne
or
xchg
push
inc
mov
inc
dec
xor
out
dec
or
jae
xor
in
or
outsb
lret
jae
fisubrs
push
jecxz
pop
popa
mov
push
mov
add
out
icebp
pusha
add
cmp
pop
or
xlat
sbb
out
mov
xchg
jno
ret
lea
and
push
xchg
dec
inc
test
jnp
call
sahf
rcll
inc
arpl
jmp
add
lahf
add
push
lods
mov
ss
pop
sub
mov
stos
loope
jb
push
out
push
or
ljmp
mov
pop
mov
je
cld
jp
sub
lcall
sbb
cmc
mov
jecxz
mov
mov
lods
rcll
cmpsl
test
cmc
pusha
imul
cmpsb
fidivrs
lods
ds
lods
shl
outsb
add
enter
adc
out
sahf
jns
mov
fisubs
ljmp
and
sti
adc
test
notl
sahf
mov
inc
loope
cmp
jo
mov
sub
sbb
mov
xchg
out
sub
sbb
or
inc
daa
cwtl
clc
adc
call
int3
cmpsl
testb
inc
mov
das
dec
push
nop
mov
das
fcompl
into
add
insb
ret
out
xchg
das
mov
lcall
xchg
push
xchg
out
push
lret
outsb
xor
ret
test
outsb
inc
rclb
mov
or
std
or
mov
xor
cld
xchg
test
xchg
in
xor
jecxz
xchg
lods
or
jbe
mov
or
cli
sub
push
js
lea
in
leave
sti
lret
jl
dec
inc
push
pop
sbb
icebp
dec
xorb
js
adc
gs
and
xlat
mov
das
mov
fists
imul
popa
xor
enter
push
stos
cmp
jle
lea
adc
je
jle
cmp
xor
cmc
mov
lahf
std
lcall
xor
sub
stos
sub
mov
inc
jae
stos
subb
out
xchg
mov
lahf
xor
jno
push
mov
mov
ret
jg
push
loope
add
cmpsl
xchg
adcl
jo
ds
mov
stc
nop
pop
or
push
inc
test
sub
xor
xor
shufps
gs
add
xor
bound
std
pop
mov
push
sbb
or
inc
sub
rorb
xor
sbb
orl
pop
mov
icebp
cli
mov
mov
sbb
jne
mov
xor
push
sub
and
mov
mov
push
iret
cmp
dec
cld
repnz
stc
dec
adc
jge
sti
sub
inc
mov
mov
repz
jp
mov
xor
inc
jno
xor
fwait
mov
mov
add
out
dec
stos
add
aad
sub
cmpsb
outsb
mov
ret
les
in
mov
das
mov
mov
pop
cltd
scas
jne
ret
xlat
pop
ja
cmc
cmp
xchg
xchg
push
cltd
cs
mov
or
les
lods
sbb
adc
and
mov
scas
sub
and
xchg
xor
cmc
imul
leave
xchg
jmp
ret
mull
daa
loopne
xor
je
in
sbb
jns
inc
gs
in
in
inc
jp
push
push
jg
and
adc
adc
imul
xchg
inc
fmull
jo
push
sbb
mov
dec
cmp
jecxz
aaa
popf
out
xor
xchg
movsb
xor
or
push
ss
cwtl
imul
push
mov
push
xor
test
dec
flds
mov
jnp
push
sub
xchg
in
jmp
ret
adc
std
cmpsb
xchg
xchg
dec
mov
adcb
cmp
jmp
jmp
and
dec
test
mov
aam
add
sbb
lret
lods
sahf
mov
in
insb
fstpt
subb
mov
repz
push
push
push
mov
jo
std
int
fldcw
xorl
jmp
insb
pop
xchg
cmp
mov
loopne
sbb
push
js
or
out
in
xor
out
push
cmp
cli
jns
push
dec
cwtl
in
adc
shll
lods
mov
push
adc
repz
movsb
mulb
jmp
dec
sbb
jl
lret
pop
jns
test
push
mov
addl
cmp
int
cwtl
fidivrl
adc
adc
daa
ret
dec
or
lcall
adc
inc
scas
adc
lods
add
incb
out
xchg
xchg
mov
push
cmp
lds
lret
lods
push
push
call
rcrb
inc
ja
xor
lret
xchg
pushf
daa
sbb
and
cmp
fdivrl
hlt
or
mov
or
leave
mov
and
cmpsl
sbb
xorl
aas
daa
cmp
dec
mov
add
arpl
dec
jle
fsubp
das
lods
or
cmp
int
loop
lcall
sbb
mov
pop
sub
and
fadd
and
sub
roll
sub
lds
pop
and
cmp
pop
cmp
sarb
adcb
js
push
rcrb
push
pop
inc
jg
pusha
add
sub
dec
std
in
xchg
mov
mov
sbb
xor
loopne
dec
pushf
aas
cmp
add
mov
xor
pop
mov
iret
int3
fsubrl
idiv
in
mov
out
idivb
xlat
ret
jns
jb
mov
stc
lcall
dec
aas
xor
inc
ffreep
push
xchg
mov
dec
sbbb
int3
push
mov
mov
jo
bound
xchg
inc
loopne
adc
mov
pop
test
adc
aas
in
out
ss
xor
xchg
cmp
inc
enter
shll
into
movsl
jmp
sbbb
jae
into
iret
push
cwtl
and
lret
jl
mov
xor
xor
lahf
les
fcom
dec
iret
pop
dec
jmp
mov
lea
cs
ja
xor
jbe
sti
int
jmp
jp
push
jl
jg
jp
adc
les
mov
arpl
popf
sub
cmp
xor
inc
fstpl
int
inc
dec
push
xchg
pop
dec
cmpsb
icebp
dec
adc
out
rorb
dec
xlat
xor
in
test
lock
inc
insl
cmc
out
xor
cmp
sbbl
inc
sub
sarb
stos
sub
shlb
xchg
jl
dec
mov
call
ja
in
dec
mov
or
ffree
mov
sub
dec
jmp
push
dec
inc
cmp
xchg
mov
daa
les
inc
mov
dec
inc
and
mov
out
sbb
movsb
jl
out
scas
adc
inc
xchg
lock
fiaddl
sahf
outsl
std
call
aad
xchg
and
jmp
fisubrl
cmpsb
aam
mov
pop
mov
push
push
push
adc
sub
cli
lret
jns
pop
mov
dec
mov
sarb
push
jo
stc
mov
or
sbb
ljmp
sbb
xlat
and
lods
adc
mov
data16
ss
insl
stos
mov
mov
in
or
in
cltd
jl
sbb
lahf
push
stos
loop
pusha
cmp
push
mov
mov
pop
idivl
cld
inc
repnz
ficoms
and
lock
mov
pushf
lods
jp
or
gs
call
les
movsb
pop
add
add
adc
leave
loopne
or
push
dec
xchg
push
jno
jbe
lock
test
sub
jge
subps
push
cmpl
scas
ss
call
jns
outsb
mov
xor
push
pop
jbe
add
enter
or
push
xorb
inc
xorl
fiaddl
jns
pop
mov
pushl
sub
daa
sbb
arpl
outsl
adc
jns
ss
lcall
push
arpl
jno
repnz
xor
lock
enter
ljmp
out
shr
pop
inc
pop
mov
pop
hlt
nop
mov
jo
or
lock
adc
push
mov
jns
jp
movsb
lock
es
rorl
into
push
add
adc
inc
pop
mov
or
leave
ret
xchg
aad
inc
loopne
jg
out
inc
sub
adc
inc
add
lds
mov
stos
imul
mov
pop
mov
stos
xchg
clc
mov
push
mov
dec
push
adc
loopne
mov
pop
leave
mov
inc
stos
xor
decl
inc
xchg
shlb
or
inc
paddb
jp
loopne
jecxz
sbb
in
data16
and
adc
xor
and
mov
loope
push
out
aas
and
xchg
aam
std
lahf
mov
roll
mov
inc
mov
pop
shl
mov
ljmp
add
cli
out
mov
xor
ret
sbb
xchg
rorb
fsubrs
adc
imul
pop
and
jg
es
lret
rcrb
rorl
jmp
dec
adc
xlat
lcall
in
and
sbb
or
adc
dec
pop
pop
xchg
adc
cmpsl
adc
mov
mov
cmp
xlat
dec
lods
mov
movsb
rcll
lock
mov
lock
stc
mov
rcrl
lea
fisttps
add
mov
pop
scas
or
cld
test
in
adc
mov
ret
mov
fsubrs
push
mov
out
adc
mov
arpl
jae
sub
push
call
jnp
jns
fistl
scas
leave
and
push
out
lret
call
loopne,pt
sub
xor
pop
daa
or
pop
scas
test
mov
adc
adc
fcoml
or
insb
loop
jbe
fld
test
pushf
inc
repnz
lea
les
xor
inc
cmpsb
sub
push
into
cld
repz
push
add
into
int3
ja
cwtl
xlat
movsb
fisttpl
pop
adc
adc
cmp
ret
or
hlt
rcrb
pushf
outsb
imul
int
lea
iret
je
mov
xchg
jnp
repz
js
cmp
xchg
sub
aaa
sbb
testl
pop
pop
xchg
xor
shr
popf
push
and
dec
lret
iret
mov
pop
rorl
popa
cmpb
lea
lods
mov
lds
xor
xchg
jns
scas
lea
subl
jl
push
scas
test
inc
inc
add
inc
inc
jbe
insl
rolb
into
inc
mov
ss
xor
bound
aaa
mov
ja
insl
adc
jae
inc
pop
push
iret
ds
pusha
outsl
push
xorl
pop
cmp
xlat
jle
lret
imul
popa
xchg
les
loope
dec
int3
inc
test
lea
mov
mov
adc
in
mov
icebp
xchg
insb
loope
fwait
nop
cmp
and
adc
jle
into
enter
mov
je
lds
scas
call
mov
sbb
push
inc
scas
ja
cmp
mov
gs
ret
xchg
push
sub
test
cmp
inc
sub
fst
sarb
ds
push
push
sbb
iret
mov
sub
xchg
jbe
adcl
inc
sbb
push
add
stc
test
int3
testb
lds
mov
ss
adc
dec
insb
mov
push
adc
mov
sbb
aaa
xchg
ljmp
out
data16
mov
popf
pop
and
and
add
jge
xor
ljmp
sbb
mov
mov
jno
ror
movntps
xor
gs
dec
jno
push
mov
pop
pop
testb
jp
and
pandn
subb
or
icebp
lahf
cmpsl
stc
sbb
and
inc
jmp
dec
ss
cwtl
loope
fldcw
cmp
cmp
dec
dec
clc
and
inc
mov
dec
stos
push
test
sub
data16
mov
arpl
cli
mov
inc
pop
xchg
lcall
jmp
lahf
xchg
enter
insb
pusha
push
fwait
mov
test
fstp
jne
mov
mov
xchg
ds
loopne
dec
test
setno
repz
shlb
pop
inc
int
cmp
inc
xor
sub
xor
adc
or
out
ret
cmp
sbb
loop
inc
and
or
in
ljmp
xchg
xor
decl
and
lret
push
in
adc
push
pop
xacquire
pop
aam
aam
mov
sub
test
cltd
cmp
ret
adc
adc
sub
jmp
or
lret
push
and
pop
mov
lret
jnp
mov
popa
mov
jns
jbe
hlt
xor
flds
jge
mov
and
leave
test
pusha
int3
cli
mov
and
mov
icebp
ret
loope
stos
or
inc
mov
adc
xchg
cmp
pop
out
fsubrs
jns
adc
popa
rol
xchg
in
imul
fdivl
stc
imulb
cs
add
ficompl
lock
jbe
push
sub
movsb
rcll
or
push
hlt
add
je
pop
and
int3
jg
lea
sbb
popf
inc
and
nop
sub
outsb
je
mov
mov
sub
loope
iret
push
daa
xor
cmp
imul
js
add
pop
pop
and
pop
jbe
in
cmc
pop
je
out
iret
out
clc
mov
pop
add
xchg
test
pop
leave
mov
mov
mov
inc
adc
pop
fisubs
decb
dec
mov
mov
rep
lcall
lahf
mov
arpl
rcll
testb
or
lcall
sbbl
stc
adc
or
xor
rorl
push
fdivr
sbb
pop
adc
xor
and
pop
xorl
inc
test
jmp
mov
das
scas
enter
aam
sbb
ljmp
shr
lods
xchg
addb
test
and
push
mov
adc
adc
js
shll
aam
mov
xlat
jg
test
or
les
gs
or
hlt
sbb
mov
jne
fcmovne
outsb
xchg
daa
pop
shll
add
or
ret
mov
scas
mov
mov
arpl
cmp
stos
sub
dec
sub
cld
lret
cmpsb
xchg
lcall
pop
and
xor
push
ror
stos
pop
aad
and
sub
loop
imul
lcall
push
rcl
cli
dec
inc
mov
inc
cld
arpl
out
mov
enter
xor
mov
dec
sbb
out
mov
insb
inc
fisttpl
lret
rorb
dec
mov
ret
push
pop
aam
mov
sahf
das
mov
scas
test
pop
subb
jl
xlat
jo
sub
mov
repz
xchg
dec
imul
stos
cmp
ret
dec
mov
ror
out
jne
icebp
stos
adc
mov
ja
jecxz
imul
inc
loopne
jl
pop
or
xchg
fsubl
mov
xchg
popl
xchg
movsb
or
jns
mov
aam
lcall
push
fisubl
and
dec
clc
sub
psrld
test
in
jnp
or
mov
jnp
in
cmp
imul
pop
imul
adc
cld
test
jns
sub
inc
sti
aad
cmpsl
xchg
cld
loope
inc
dec
bound
xor
mov
jg
or
jecxz
sub
outsb
lret
mov
cwtl
add
shlb
mov
dec
sbbl
lcall
mov
xor
out
loope
mov
into
cmp
xchg
push
push
push
sbb
jnp
test
and
outsb
xchg
outsb
cmp
call
fwait
bound
lods
mov
mov
mov
sub
or
and
add
push
push
push
loopne
pop
inc
adc
int3
xchg
ja
xlat
adc
out
adcb
cmp
xchg
ljmp
scas
mov
sub
insl
sub
mov
mov
call
jge
add
push
dec
lods
in
es
dec
add
fs
add
add
mov
cmp
nop
inc
rorl
adc
rolb
sbb
loopne
jmp
mov
pop
loop
repnz
rolb
or
inc
xchg
sub
mov
xchg
or
fiaddl
jecxz
cltd
mov
mov
adc
adc
xchg
xchg
mov
dec
sbb
add
inc
popa
test
cmpsl
inc
scas
jl
ror
pushf
dec
scas
lret
fisubrs
inc
mov
out
sub
fldl
cmc
mov
xchg
jae
pop
push
pop
pop
adc
push
dec
push
aam
ret
jno
imul
das
pop
imul
ljmp
iret
dec
mov
cmpl
inc
movsl
sub
inc
movsb
xor
sub
rorl
jg
jecxz
pmulhw
fistpl
dec
lea
adc
ja
aam
push
jno
shlb
xchg
inc
inc
sub
xlat
fisttpl
js
jb
jno
test
or
cmp
rcrl
iret
xor
push
repz
adc
and
paddsb
and
mov
inc
mov
ljmp
cs
cmpsl
jmp
sub
js
pop
inc
adcl
jo
lods
xchg
adc
jnp
dec
sbb
shrl
adcl
cmpsb
and
imul
clc
shlb
inc
sti
mov
test
ficomps
lea
xor
test
out
in
fistpl
testl
arpl
loopne
push
dec
mov
hlt
xchg
movsl
loope
fdivl
adc
dec
movsl
dec
dec
ja
jbe
push
or
jle
pop
xor
int
xor
mov
rcrl
pushf
cs
and
mov
mov
fimull
lret
mov
sub
daa
sbb
pop
sar
add
mov
mov
sub
sti
sbb
in
stos
imul
adc
loopne
xchg
pop
scas
pushf
mov
inc
dec
lods
lea
xor
push
cmp
jbe
daa
ja
jo
mov
daa
lret
mov
test
pop
pop
sar
push
inc
sub
bound
scas
inc
mov
adc
jnp
adc
jo
mov
cs
push
rcrb
dec
mov
mov
push
pop
aam
pop
jbe
cli
pop
repz
and
bound
mov
or
pop
xchg
mov
lea
mov
mov
call
out
lock
mov
cmp
mov
bound
jg
add
and
addr16
sbb
scas
xor
out
rol
mov
das
add
or
adc
xchg
pop
mov
test
inc
jb
ret
dec
out
xchg
xchg
cwtl
pusha
jbe
mov
fsts
xchg
mov
cmpsl
cmpsb
das
inc
sub
pop
mov
inc
sti
dec
mov
cmpsl
jl
push
adc
insl
cmp
xchg
and
xchg
inc
movsb
js
jmp
xchg
insl
mov
stos
or
cmp
sahf
les
sbb
push
cmp
icebp
loopne
insb
outsl
dec
cmp
loopne
cmpsl
pop
aaa
pop
leave
xchg
adc
outsb
cld
out
inc
das
int
or
out
lcall
rcrl
push
pushl
sbb
cmp
cltd
fwait
dec
or
xor
aad
fs
iret
arpl
or
ret
xor
fdivp
push
daa
add
dec
mov
cmp
mov
test
sub
push
mov
and
clc
enter
jp
movsl
fsubrs
sbb
in
setl
pop
mov
dec
mov
cld
cmpsb
jmp
roll
xor
sub
mov
sub
shlb
lea
leave
jg
push
dec
sbb
adc
jb
pop
adc
lea
pushf
cmp
lret
adc
insb
pop
dec
push
push
pop
jp
stos
push
imul
jge
cmp
sbb
stc
xor
pop
jl
adc
mov
leave
jmp
xchg
mov
add
add
jno
add
adc
lock
lds
mov
mov
stos
and
out
sub
scas
dec
push
stc
outsb
and
push
fidivrl
jbe
push
cltd
cmpsb
into
or
insl
test
sbb
jns
fimuls
push
ficompl
bound
loope
jmp
inc
pop
mov
cli
icebp
scas
std
orps
addr16
mov
lea
sub
mov
jno,pt
shrb
cs
aad
cmp
add
popf
mov
scas
push
jge
mov
ret
movsb
ja
inc
lock
add
enter
int3
sti
pop
es
cmp
js
push
jae
int3
outsl
dec
push
out
in
arpl
popf
hlt
cwtl
rcr
cs
nop
push
insb
dec
aaa
push
adcl
lret
ja
and
int
sub
sbb
sub
roll
sbb
push
mov
mov
popa
enter
inc
xor
jp
leave
pushf
bound
push
pop
sub
les
sbb
addr16
mov
dec
push
dec
mov
push
rsqrtps
jno
scas
shll
jmp
test
into
inc
imul
sahf
movsl
insl
popa
inc
sbb
mov
mov
ret
imul
adc
mulb
imul
inc
popa
adc
cmp
sarl
mov
stos
repnz
repz
pop
cmp
imul
and
xchg
ja
aas
add
ljmp
adc
xchg
jns
das
insb
scas
push
pop
into
vmovdqa
or
sub
cltd
and
imul
inc
in
hlt
aam
test
pop
xchg
mov
xchg
push
adc
jmp
clc
testb
cmp
inc
dec
loop
or
xchg
jl
das
sub
xchg
jno
lods
nop
and
lods
lock
stos
stos
mov
inc
jo
pop
subb
lret
lods
xchg
jo
mov
sbbl
loope
gs
into
cmpsl
xchg
subb
lds
shrb
in
shll
aaa
adc
cs
ja
scas
add
jmp
cmpsl
add
scas
inc
aas
xchg
adc
jne
outsb
or
mov
and
adc
out
or
sbb
adc
out
jl
mull
add
pusha
mov
mov
xor
or
dec
in
sbb
mov
push
xor
mov
fdivs
cs
daa
mov
fidivs
push
insl
hlt
out
dec
and
and
insl
and
out
leave
adc
sub
cmp
push
imul
lods
or
cmp
jns
fdiv
iret
lods
enter
mov
decl
and
dec
ret
push
mov
push
xor
add
mov
std
sub
sub
loop
sub
cmp
pop
sahf
outsl
sbb
push
lahf
push
ret
les
inc
aaa
inc
sub
add
sti
sahf
or
mov
cmp
adc
mov
scas
pop
test
loopne
xchg
pop
inc
cmp
xor
imull
xor
les
cmp
lods
popf
push
stc
clc
push
mov
enter
test
cmpsl
dec
mov
xchg
or
lret
das
rolw
addl
repz
testb
jle
ss
test
loop
fisubs
in
xorl
cli
stc
inc
lods
pop
mov
push
pop
dec
fnstenv
adc
sbb
js
loopne
xlat
call
add
mov
xor
mov
dec
lods
xor
push
sub
cli
sbb
push
xchg
cltd
push
xor
sbb
cltd
cmpsb
or
sub
push
inc
lods
mov
in
sti
mov
popf
sub
or
ret
add
ja
xor
pop
ss
xlat
jo
mov
mov
fbstp
jne
add
in
sub
xor
rcl
fists
arpl
aam
insb
push
adc
xor
ret
and
enter
jne
cmpsb
out
icebp
or
outsb
adc
mov
sbb
repz
mov
jae
mov
sub
add
scas
fisubrs
mov
mov
lods
or
dec
aam
cs
insb
or
cmp
xor
lods
sarb
xchg
sbb
ljmp
arpl
mov
cmp
lcall
xor
and
pop
xchg
mov
xchg
pop
mov
jbe
mov
cmc
xchg
mov
ja,pt
pop
je
je
into
or
in
call
mov
cli
je
and
mov
mov
or
scas
popa
adc
movsl
ja
outsl
fxch
sti
inc
clc
mov
lret
in
jge
enter
stos
fadds
dec
fwait
mov
lcall
inc
fs
add
rcll
push
push
pusha
and
cld
roll
lock
lods
mov
mov
es
stos
pop
fwait
out
jbe
jl
int
jmp
ja
scas
xchg
xchg
bound
mov
pop
sub
mov
xchg
icebp
rcrl
and
jb
mov
shlb
cmpsl
ret
xor
mov
cmp
shlb
out
sub
push
lds
xchg
jp
or
insl
scas
jge
and
in
lahf
inc
arpl
mov
pop
xor
pop
add
or
push
xor
clc
dec
ret
pop
jmp
sub
pop
out
clc
inc
mov
push
imul
in
mov
xchg
js
push
push
rolb
dec
xchg
imull
pusha
test
pop
scas
lahf
data16
dec
jecxz
push
xchg
inc
push
add
and
xchg
cmp
mov
add
mov
les
or
lods
and
push
sbb
push
enter
je
subl
lret
stc
lods
cltd
out
jb
sbb
pop
dec
lahf
or
add
movsl
nop
data16
cli
in
sbb
pusha
jle
sbb
out
testb
int3
jl
xchg
and
aas
add
and
lret
mov
daa
sbb
cmpsl
jb
outsb
repz
ss
push
popa
xchg
push
popw
dec
aaa
insb
stos
jmp
cmp
out
ret
insb
subl
scas
add
or
sub
subl
xchg
inc
pop
out
out
xor
jecxz
div
dec
adc
je
and
mov
lea
rcrb
fbstp
push
sbb
mov
ds
inc
frstor
sub
mov
in
inc
adc
data16
cmp
addr16
dec
mov
stc
dec
and
jno
mov
and
fldl
int3
mov
shll
push
xor
aaa
dec
mov
inc
cmp
rclb
jno
and
dec
fsubs
push
push
jl
pop
jb
sub
mov
lcall
inc
add
shl
insb
pushfw
and
xor
dec
inc
pushl
shrl
xor
dec
inc
mov
fcmovnu
xchg
mov
add
jne
ret
and
repz
add
jb
imul
fsubrs
push
jb
mov
xchg
pop
fs
cwtl
jp
mov
sbb
lock
sbb
dec
and
xchg
xor
cmpsl
loope
icebp
xor
lret
leave
das
movsl
cltd
addr16
inc
fldt
xchg
xchg
dec
in
pop
mov
push
inc
add
or
sahf
adc
orb
ja
cmp
adc
lret
push
das
mov
sbb
add
sub
push
roll
push
mov
add
jmp
fdivrs
cli
dec
mov
jae
ljmp
mov
push
or
out
pop
xchg
popf
sbb
inc
xchg
inc
loope
sbb
cld
stos
arpl
sub
stc
pop
mov
mov
dec
dec
mov
push
mov
and
or
int3
mov
mov
test
nop
sub
out
sbb
dec
adc
push
pop
ljmp
stos
andb
lret
ljmp
rcr
movsb
jmp
mov
bound
das
insl
out
daa
xchg
add
inc
clc
dec
stos
sub
shrb
lahf
cli
in
lea
mov
add
mov
xchg
add
pop
adc
xchg
or
sub
outsb
pop
jmp
arpl
jle
jae
inc
cmpsl
jne
pop
push
fimuls
adc
mov
cli
xor
cmp
insb
sbb
rorl
lods
std
cmpsl
xchg
push
sbb
lret
imul
rorl
mov
mov
mov
cmp
les
mov
cwtl
xor
mov
pop
xchg
in
xchg
pop
enter
movsl
jo
adc
gs
movsw
int3
cmp
lods
push
sbb
mov
std
stc
loop
lahf
fcoms
pop
jnp
mov
sub
das
mov
test
add
roll
in
jae
lea
stos
scas
call
xor
in
adc
cs
xlat
dec
std
and
fldl
mov
outsb
gs
mov
stc
or
cltd
fs
xor
lret
fistpll
pushf
pusha
pcmpeqd
jbe
cmp
fwait
std
jbe
mov
mov
int3
xor
rcl
push
inc
push
sub
call
and
inc
cmc
jns
pop
sahf
cli
ja
cmp
dec
leave
and
filds
add
mov
push
push
cmpb
insb
jnp
hlt
inc
notb
je
call
push
pop
sbb
insb
shlb
lcall
iret
xor
xlat
call
jae
pop
xchg
movsl
adc
daa
enter
ljmp
pop
adc
push
rcrb
adc
ret
and
ret
fs
or
inc
xchg
js
bnd
leave
outsl
push
jmp
ja
sbb
inc
xchg
into
add
and
scas
loop
sub
push
inc
push
ja
lds
push
jge
sahf
imul
push
jae
cmpsl
mov
mov
push
jns
out
and
test
push
and
repnz
mov
mov
in
add
add
mov
mov
fildll
cmp
mov
fs
ror
scas
je
fwait
cld
scas
cmp
sub
das
nop
fs
jmp
push
aas
mov
cld
cmpsl
lea
cmp
mov
or
arpl
and
inc
jle
into
jne
jo
lret
pop
push
cmpsb
mov
les
lods
je,pn
jno
mov
ja
push
shlb
add
sbb
pmullw
dec
jnp
cmpsl
xchg
cli
test
and
mov
ja
loop
dec
push
mov
push
lods
pop
in
pop
rorb
mov
xlat
stc
and
cli
lret
arpl
mov
iret
xor
sub
sub
ret
mov
or
or
bound
clc
rolb
mov
data16
add
mov
jbe
pop
push
loop
xor
lock
adc
loope
in
pop
push
pushf
repz
mov
ret
dec
enter
jge
mov
nop
cmpsl
fwait
jg
arpl
push
rcll
cmp
idivb
mov
fwait
daa
lahf
mov
pop
mov
sub
mov
sub
js
int3
lods
mov
mov
out
sub
mov
fmull
cmc
icebp
pop
cmpsl
or
repz
sub
shrb
in
xchg
loopne
xchg
cmpsl
sbb
dec
cwtl
inc
mov
lods
push
jle
jbe
pop
jns
xor
jne
test
cmpsb
sub
jge
jmp
xchg
in
hlt
cmp
dec
pushf
inc
or
xor
mov
cmp
inc
adc
rcr
xchg
scas
rol
push
mov
insl
cmp
cmc
push
adc
jmp
jl
adc
mov
or
sub
movsl
out
inc
dec
add
pop
sbb
and
mov
sub
leave
dec
cmpsl
jmp
xchg
mov
shrb
aas
pop
xchg
cmp
sub
iret
ja
in
test
add
int
push
pushf
jb
andb
stos
pavgb
push
push
ljmp
lea
sub
lods
adc
lods
pusha
loop
cwtl
fcmovnu
inc
mov
add
cltd
jl
fcompl
adc
xor
push
leave
sbb
or
push
std
pop
int3
adc
cmpsl
ds
mov
jno
lods
xor
kmovw
mov
fwait
mov
dec
cwtl
mov
ja
std
inc
dec
pop
nop
jno
or
inc
or
mov
push
or
rorb
xor
cmp
divb
dec
ffreep
mov
js
lds
mov
das
fidivs
inc
fwait
enter
xor
xchg
sbb
dec
ljmp
data16
pop
adc
scas
ljmp
dec
inc
xchg
pop
std
out
xor
fdiv
dec
test
popa
leave
lea
jg
mov
daa
fldz
movsb
mov
mov
and
arpl
or
nop
aaa
inc
add
lods
icebp
lods
xchg
testl
add
inc
xor
push
aaa
and
roll
dec
dec
cld
cld
dec
add
and
add
sub
ja
pop
stos
mov
imul
popf
cmp
jmp
add
mov
int
aam
pop
rorb
mov
scas
mov
mov
in
pop
out
stos
push
cmpsl
rolb
and
mov
push
jmp
jge
mov
xchg
jb
xor
xor
ja
in
bound
xor
jle
shl
ret
divl
push
cmpsb
fcmovu
mov
xchg
push
loop
es
inc
cld
scas
repnz
imul
in
shrb
xorb
jne,pn
mov
cli
ljmp
or
mov
aad
sbb
adc
dec
int3
loope
sar
or
xchg
bound
add
gs
je
dec
outsl
jge
out
loopne
cld
lods
cmp
ja
int3
out
out
outsl
iret
stos
push
insl
mov
push
mov
xor
movsl
add
inc
inc
pop
dec
leave
xorl
pop
inc
sarl
jmp
jg
push
jp
mov
mov
negl
mov
adc
mov
xchg
sub
xor
xchg
dec
incb
dec
mov
repnz
push
int
and
hlt
and
push
mov
ds
adc
mov
mov
repnz
out
inc
pop
adc
pop
mov
mov
fidivl
inc
mov
jge
shlb
outsb
jg
xor
mov
jnp
fwait
xchg
mov
add
aad
loopne
push
jno
and
enter
xor
sbb
sbb
jae
pop
movsb
addr16
fstpt
nop
xchg
scas
sahf
mov
or
test
loopne
movsb
lcall
mov
insb
or
mov
inc
dec
sbb
daa
adc
jle
inc
push
in
cmp
push
repz
bound
xchg
mov
mov
imul
pop
movsb
sub
inc
sarb
sahf
mov
inc
or
mov
sti
outsb
fsubr
les
cmp
popf
mov
arpl
or
movsb
cmpsb
leave
fcomi
mov
test
aas
xchg
mov
jecxz
cs
insb
cwtl
out
jo
imul
dec
ljmp
push
cmc
std
mov
xchg
sub
aas
jmp
leave
test
out
je
int
jae
sub
adc
mov
shll
sub
mov
or
ret
push
pop
sbb
shr
sbb
push
sub
sbbl
fidivrl
leave
or
mov
jecxz
and
cltd
mov
add
cmc
dec
mov
mull
and
or
xor
mov
repz
je
xchg
mov
and
shll
pop
mov
xor
jbe
inc
test
cwtl
dec
pop
popa
scas
mov
nop
je
in
enter
cmp
das
jo
lcall
aas
cmp
jge
out
add
out
cmp
test
ret
sbb
enter
int3
std
fincstp
pusha
mov
imul
inc
pop
hlt
inc
rclb
xor
sbb
stos
and
es
jns
dec
stos
hlt
test
in
scas
test
nop
das
xor
rol
pop
push
adc
repnz
adc
cltd
ljmp
xlat
hlt
bound
xlat
pop
mov
loopne
jmp
mov
push
push
or
sbb
and
arpl
dec
mov
mov
push
in
js
testb
mov
out
cmp
cmpsl
xchg
jno
and
mov
and
adc
scas
jae
or
popf
mov
xchg
mov
dec
and
icebp
aad
nop
xor
cmp
repnz
dec
fbld
shlb
pop
mov
dec
je
pop
add
popa
mov
int
inc
cmpsl
movsl
inc
lahf
repz
cmp
lock
pop
mov
inc
cmpl
mov
pushl
dec
adc
pop
pop
mov
movsb
dec
pop
add
inc
call
push
sbb
dec
cmpsb
pop
sub
xor
loope,pt
leave
incb
dec
sbb
pop
in
bswap
or
push
inc
fwait
sbb
scas
ds
pop
or
push
sub
sti
int3
sbb
adcl
cld
xchg
or
pop
jecxz
mov
dec
cmp
pop
fisubs
cmp
mov
or
fists
aad
lds
fs
push
sbb
xor
ljmp
sbb
xchg
popf
push
xchg
push
cmp
adcl
daa
enter
call
fdivrl
rcl
out
adc
mov
mov
dec
dec
nop
test
sbb
sti
sub
add
sub
in
cwtl
imul
xchg
mov
in
push
shll
sbb
aad
addr16
inc
icebp
xchg
pop
cmp
js
fs
daa
popa
sbb
mov
les
adc
out
pop
fisttpl
vcomiss
ret
push
mov
jne
push
sbb
js
mov
loope
out
push
or
sbb
cmp
mov
xor
mov
xor
test
out
ret
cmp
leave
sahf
fcmovnb
pop
sbb
sbb
push
mov
mov
cwtl
add
and
mov
shll
aam
jnp
jge
push
jno
jp
pop
pop
andl
movsb
nopl
hlt
adc
inc
jle
data16
call
inc
sub
shll
in
mov
clc
jmp
ljmp
jno
sti
popf
mov
jecxz
or
pop
pop
mov
cmpsb
shr
mov
cltd
cmp
test
push
cwtl
or
sub
or
push
enter
mov
cs
add
mov
mov
mov
stos
adc
xchg
pop
les
scas
and
shlb
movb
aad
out
mov
mov
lds
sbb
pop
mov
jp
mov
popf
int3
int
sbb
cmp
ror
xchg
sub
mov
sub
inc
xor
dec
push
and
es
cmp
xchg
movsl
icebp
hlt
test
lds
clc
inc
lea
pushf
sti
int3
jae
xor
fiaddl
je
lods
shrb
mov
xchg
stc
not
jne
scas
pop
xor
mov
mov
cltd
inc
mov
call
inc
jbe
add
repnz
sub
push
insl
push
or
push
in
out
or
int
roll
ss
out
lahf
adc
shll
jg
icebp
mov
mov
jnp
and
jo
in
outsl
ja
loope
incl
lcall
dec
push
rolb
lods
hlt
in
add
call
dec
adc
fisubrl
mov
in
int
outsb
push
decb
jecxz
inc
jge
int3
dec
out
dec
xchg
dec
scas
sbb
test
jo
and
mov
fidivrs
orl
test
inc
lret
sub
fneni(8087
ja
mov
lret
lods
mov
ja
insb
dec
jp
push
add
stos
xchg
movsb
enter
stos
and
in
sbb
push
xor
enter
mov
xlat
inc
mov
inc
ljmp
push
push
pop
sub
movsb
pop
ja
dec
mov
xchg
in
movsb
jmp
outsl
nop
fldenv
jecxz
mov
lret
daa
pop
pop
push
mov
or
in
adc
mov
lret
mov
fstl
ret
popf
dec
pop
pop
rcll
mov
popa
add
into
sahf
sarl
fidivl
lret
xchg
mov
or
xor
scas
jge
filds
out
mov
fnstenv
cmp
or
int3
lret
xchg
dec
pop
sub
imul
jbe
pop
xor
jle
xor
test
mov
movsl
mov
ds
rorl
jns
xor
repz
lcall
jns
lahf
stos
outsl
stc
shl
js
lret
xorl
mov
pshufw
hlt
lea
mov
adc
sub
shr
popl
jp
gs
out
lds
cmp
fs
xchg
pop
cld
push
dec
and
pushf
ds
sbbb
and
cmp
aaa
sbb
sbb
in
xchg
or
jl
loopne
out
lret
cli
pop
xchg
adc
adc
dec
jo
ljmp
mov
cmc
mov
repnz
mov
fiaddl
pop
lret
fdivrl
mov
nop
pop
jne
pop
cltd
lods
push
lret
lds
push
je
filds
insb
andb
ror
adc
aam
and
mov
loop
cmc
cmp
pop
cmpsb
cmp
sub
popl
mov
and
adc
daa
xchg
or
pushf
cmc
sub
push
sbb
fdivrp
dec
addr16
out
mov
js
mov
lods
jno
mov
xchg
int
lods
add
cmp
out
out
push
and
cld
cs
lea
addr16
je
or
sub
fcoml
mov
xor
popa
outsl
icebp
push
dec
scas
fildl
out
repz
inc
mov
lcall
xchg
ljmp
clc
imul
inc
fwait
jns
mov
stos
xorl
push
aam
sbb
addr16
gs
lret
push
pop
pop
aad
ret
inc
loopne
mov
insb
lcall
dec
jle
dec
dec
mov
mov
sti
pop
mov
fidivl
fbstp
jbe
ds
dec
xor
movsl
pop
pushf
push
arpl
int3
push
mov
add
repnz
mov
loopne
cmp
xchg
mov
in
test
add
out
adc
mov
lahf
je
int3
aam
popf
lahf
push
pop
cs
sub
popf
jbe
xchg
sbb
mov
in
mov
imul
sarb
aad
js
clc
jg
es
push
jno
sbb
cmpsb
xchg
stos
pop
jl
stos
orl
mov
lods
push
add
fwait
xor
bound
test
dec
cmp
mov
dec
xor
sti
xorl
xor
add
jae
sbb
cmp
loop
pop
sub
in
push
cmp
add
ljmp
cmp
mov
mov
scas
dec
jns
movsb
and
aad
pop
stos
xchg
vmovsd
mov
push
mov
outsb
stos
loopne
or
pop
je
enter
cmp
xor
xchg
aas
cmp
andb
fiaddl
aad
mov
jo
or
cs
addl
cmp
dec
or
sub
data16
sub
mov
arpl
adcl
pop
sbb
xchg
pop
in
push
xchg
or
rol
lds
jmp
fucomp
loope
mov
iret
pop
das
divl
cmp
xor
push
aaa
rcll
mov
icebp
mov
jmp
fnstenv
mov
in
xor
ret
push
mov
or
sub
mov
mov
das
std
adc
leave
mov
in
nop
xchg
jns
pop
xlat
stos
mov
ss
test
xlat
sub
fmuls
and
lahf
lahf
mov
xchg
push
test
cmp
mov
repnz
stc
in
sub
sub
rcrl
in
or
jo
roll
dec
inc
insl
inc
bound
fprem
pop
aaa
les
or
sbb
xchg
inc
and
dec
sbb
xchg
or
mov
movsl
js
push
push
mov
cld
jno
iret
add
and
fwait
sbbb
mov
fsubrs
sub
jae
cltd
mov
cmp
jns
ljmp
jl
sub
mov
add
fiaddl
or
sbb
pop
lahf
pushf
xchg
or
pop
and
dec
std
cs
icebp
ljmp
mov
shl
mov
mov
sbb
aam
out
xchg
incl
pop
xchg
movsb
xchg
mov
repz
int3
push
jns
mov
rcrl
ja
dec
cmp
in
je
imul
mov
mov
xchg
cmpsl
inc
imul
lock
xor
mov
fisubrs
imul
imul
inc
in
sarl
sarl
lcall
mov
sub
loopne
pop
adc
incb
scas
imul
dec
mov
ror
fmuls
inc
les
mov
popa
add
mov
outsl
cmp
pop
scas
les
jp
lds
lods
ljmp
out
add
ret
or
in
xor
lock
jmp
int3
push
data16
xor
pop
das
fdivp
imull
pop
sbb
or
cltd
inc
and
cld
data16
out
out
mov
jg
sbb
push
int3
push
jecxz
test
stos
mov
hlt
mov
cmp
imul
lea
mov
sbb
es
dec
jb
add
lret
and
mov
push
jns
das
mov
scas
adc
xor
pusha
leave
cmp
xlat
xor
xchg
lock
dec
or
push
test
mov
pop
stc
out
mov
in
cmp
push
repz
stc
pop
ds
mov
adcb
jmp
cmpsb
xchg
mov
pop
adc
idivb
or
xchg
cwtl
or
ret
xchg
addr16
cwtl
push
push
adc
and
jno
jg
cltd
push
dec
lock
sbb
test
mov
mov
mov
ds
mov
and
add
sbb
aaa
in
xchg
jl
pop
aas
mov
mov
mov
scas
push
insb
out
or
lock
cli
dec
or
sbbb
mov
mov
in
dec
xor
outsl
test
dec
mov
dec
sti
sbb
es
cmc
add
or
pop
rcl
sub
push
mov
sub
sub
sub
loop
cmp
dec
xchg
jecxz
mov
jnp
xchg
stc
mov
fiadds
mov
and
and
push
sub
imul
xor
mov
into
repnz
fs
xor
js
adc
fstpt
leave
and
fstpl
je
pop
nop
xchg
imul
jge
pop
push
add
sbb
xlat
aaa
jb
sbb
adc
fs
pop
leave
stos
pop
sub
iret
fdivrs
push
or
sbb
xor
or
pop
jg
cmpsl
fwait
jbe
repz
mov
mov
ds
jecxz
add
notb
ja
iret
scas
dec
lret
cs
in
add
inc
outsb
incl
mov
movsb
pop
xchg
xchg
out
add
mov
adc
nop
test
mov
mov
xchg
cmpsl
dec
dec
inc
lods
mov
movsb
cmp
add
xchg
sub
lock
ret
popf
fwait
mov
pushf
or
xchg
test
test
adc
inc
mov
push
inc
loope
or
mov
mov
popa
cmp
enter
out
les
jge
add
inc
and
in
xchg
xchg
pop
out
cmp
pop
sub
sbbl
xor
push
in
pcmpgtd
xor
lahf
and
outsb
mov
xchg
sbb
cli
mulb
gs
shr
icebp
pop
cltd
in
mov
jno
jnp
sbb
add
movsb
fisubs
jb
dec
call
cmp
movsb
mov
and
popa
andl
adc
jle
or
mov
sbb
sub
arpl
nopl
insb
mov
add
sti
push
mov
mov
push
pop
mov
pop
jns,pt
dec
xlat
icebp
and
cmp
add
jge
lods
outsb
mov
sbb
xlat
out
dec
dec
mov
and
jno
nop
lret
loop
fs
jle
mov
push
cmp
xchg
insb
dec
ss
add
and
aad
popa
or
fisttpll
cld
sahf
lds
incb
cli
sbb
push
mov
mov
std
test
outsl
cmp
mov
mov
sbb
cwtl
mov
xchg
repnz
adc
sarl
push
mov
iret
std
mov
xchg
mov
add
das
and
or
fsubs
unpckhps
inc
jnp
and
enter
notb
sub
cmpsb
mov
iret
iret
not
in
mov
adc
add
aam
mov
sub
inc
adc
fists
mov
mov
pop
push
dec
stos
add
mov
adcl
mov
jl
sbb
outsb
lock
and
adcl
clc
data16
call
sti
ds
mov
andl
jmp
xchg
push
