add
add
jae
mov
mov
mov
shl
movl
sub
and
mov
mov
shr
movzbl
cmp
mov
jbe
lea
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
mov
shl
mov
mov
sub
and
mov
mov
shr
movzbl
cmp
ja
test
jne
mov
shr
movzbl
add
shr
sub
mov
shr
test
mov
mov
jne
movl
jmp
cmp
ja
jmp
cmpl
je
mov
mov
add
subl
movl
jmp
test
jne
mov
shr
movzbl
mov
mov
movzbl
add
mov
shl
mov
mov
shr
sub
and
shr
add
mov
mov
mov
shr
movzbl
movzbl
add
cmp
ja
movzbl
mov
shr
sub
mov
jmp
sub
cmp
ja
mov
cmp
mov
ja
sub
add
mov
cmp
mov
jbe
mov
jmp
cmp
jb
mov
mov
shl
sub
sub
and
add
shr
add
jmp
cmpl
jne
movl
cmpl
jne
movl
movl
mov
mov
mov
mov
mov
add
mov
cmpl
mov
mov
je
mov
mov
push
push
call
add
test
jne
mov
mov
sub
mov
sub
add
add
add
cmpl
je
test
je
cmpl
push
jne
mov
mov
sub
call
add
mov
mov
mov
mov
neg
sbb
and
cmp
je
xor
cmp
je
cmp
je
xor
add
add
add
test
mov
je
cmpl
je
mov
pop
pop
pop
pop
add
ret
cmpl
jb
mov
mov
mov
mov
mov
mov
mov
push
mov
or
add
pop
cmp
decl
push
adc
mov
and
mov
mov
add
cmpl
mov
mov
mov
je
mov
jmp
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jae
jmp
cmpl
je
cmpl
je
cmpl
jne
cmp
jae
jmp
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jb
mov
shr
mov
and
and
sub
cmp
mov
jne
movl
shr
mov
sub
jmp
mov
jmp
movl
movl
jmp
cmp
jae
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jb
mov
and
add
mov
shr
mov
and
mov
add
shr
mov
mov
and
add
shr
sub
cmpl
mov
mov
ja
cmpl
ja
movl
movl
mov
sbb
inc
add
cmp
jb
mov
mov
scas
lahf
adc
mov
and
mov
mov
add
push
and
sub
cmp
mov
jb
mov
cmp
push
sbb
push
and
inc
push
jo
add
inc
push
out
xchg
add
insb
mov
mov
lea
push
push
lea
push
lea
push
mov
movl
call
add
test
mov
jne
mov
mov
xchg
adc
add
mov
add
cmp
and
push
mov
shl
mov
sub
and
mov
mov
shr
movzbl
cmp
mov
ja
mov
shr
cmp
jae
mov
shr
movzbl
cmp
jb
movzbl
mov
mov
inc
add
dec
and
mov
addl
add
sbb
pusha
cmp
mov
inc
add
jmp
mov
add
test
xchg
xor
lea
lea
mov
mov
lea
push
push
mov
lea
push
lea
push
movl
call
add
test
jne
mov
lea
push
lea
push
mov
lea
push
mov
mov
lea
push
movl
call
add
test
mov
jne
cmpl
movl
je
movl
jmp
jmp
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jae
jmp
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
mov
shl
mov
mov
sub
and
mov
mov
shr
movzbl
cmp
mov
jbe
jmp
mov
cmp
je
cmp
movzbl
jne
lea
cmp
jb
shr
mov
and
add
mov
shr
mov
sub
add
mov
movl
mov
decl
inc
add
pusha
mov
cmp
ja
cmpl
je
mov
mov
pop
push
inc
add
mov
addl
or
jne
jmp
movzbl
lea
cmp
jb
mov
mov
inc
add
xchg
xor
movzwl
mov
and
add
shr
mov
mov
sub
jmp
lea
cmp
jae
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
lea
cmp
mov
jb
shr
mov
and
add
mov
shr
mov
jmp
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
lea
cmp
mov
jae
jmp
cmpl
jne
movl
jmp
mov
and
shr
sub
movl
mov
jmp
cmpl
jge
mov
mov
cmp
jne
jmp
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
lea
cmp
mov
jae
jmp
mov
shr
mov
movzbl
mov
movzbl
add
mov
mov
shl
mov
sub
and
shr
mov
shr
add
mov
mov
mov
movzbl
mov
shr
movzbl
add
cmp
ja
movzbl
mov
shr
sub
add
jmp
jmp
lea
cmpl
je
mov
movzbl
mov
shl
mov
add
mov
add
movzbl
add
subl
mov
shl
mov
add
sub
and
shr
movzwl
add
mov
mov
mov
shr
movzbl
add
cmp
jbe
jmp
sub
je
sub
jne
cmpl
movl
movl
movl
movl
movl
jne
jmp
test
jne
jmp
cmp
jae
jmp
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
mov
jb
mov
sub
mov
add
add
test
je
cmpl
mov
jne
mov
mov
sub
push
mov
call
add
mov
mov
mov
mov
cmpl
mov
mov
mov
jne
and
mov
shl
add
xor
mov
shl
add
mov
shr
add
cmp
jne
xor
mov
xor
jmp
cmp
jae
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
mov
jb
testb
jne
mov
test
movl
jne
testb
je
movzbl
shl
mov
shr
add
xor
mov
div
test
jne
mov
and
cmp
jne
mov
shr
mov
and
add
test
je
sub
cmp
ja
mov
shl
push
xor
xor
mov
call
mov
add
test
mov
mov
jne
mov
xor
mov
mov
xor
jmp
cmpl
je
jmp
movl
mov
jmp
add
sub
sub
jmp
lea
cmpl
je
movzbl
mov
shl
mov
subl
add
add
movzbl
add
mov
mov
shl
mov
add
mov
sub
and
shr
movzwl
add
mov
mov
mov
shr
movzbl
add
cmp
jbe
jmp
nop
push
cmc
push
adc
xorb
xchg
xorl
adc
xorl
inc
test
adc
test
adc
test
adc
xchg
adc
push
adc
xchg
adc
mov
adc
mov
adc
push
adc
push
adc
adc
push
adc
in
push
adc
in
push
adc
out
push
adc
out
push
adc
out
push
adc
adc
aaa
adc
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
cmpl
je
cmpl
je
sub
push
mov
cmp
jae
sub
cmp
jbe
mov
mov
mov
add
push
sub
push
push
call
add
sub
jne
add
mov
mov
cmp
je
mov
cmp
jae
add
mov
pop
pop
pop
xor
pop
ret
mov
mov
shl
movl
movl
mov
jmp
mov
mov
mov
shl
mov
push
push
push
call
add
test
mov
jne
jmp
mov
mov
push
sub
push
push
call
mov
add
pop
mov
movl
pop
pop
xor
pop
ret
mov
mov
push
sub
push
push
call
mov
add
pop
mov
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
cmp
push
mov
mov
push
lea
jb
lea
mov
mov
lea
push
push
mov
call
mov
add
test
je
cmp
jne
mov
mov
sub
test
mov
je
mov
push
mov
call
add
cmp
mov
jne
lea
push
call
mov
add
cmp
jne
xor
pop
pop
pop
ret
mov
cmp
jne
jmp
xor
jmp
push
mov
cmpl
jne
cmpb
jne
lea
xor
call
push
movb
call
test
js
mov
test
je
call
test
js
mov
mov
mov
mov
push
call
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
test
je
mov
test
je
xor
mov
xor
mov
mov
mov
cmp
jne
cmp
je
push
mov
push
push
call
mov
mov
xor
cmp
jne
mov
mov
cmp
je
lea
mov
or
lock
dec
je
movl
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
cmp
ja
jmp
cmp
je
mov
mov
sub
mov
cmp
jae
lea
mov
test
je
mov
push
mov
add
push
push
call
add
mov
add
mov
mov
xor
mov
cmp
jb
mov
mov
cmp
je
call
jmp
lea
jmp
mov
jle
cmp
mov
cmp
popf
adc
adc
cld
push
adc
in
mov
call
test
js
push
pushl
mov
pushl
mov
pushl
mov
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
cmpl
je
xor
pop
ret
cmpl
push
push
push
lea
je
mov
mov
cmpb
je
mov
push
mov
call
mov
mov
push
push
mov
push
call
test
js
mov
mov
mov
add
push
push
call
test
js
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
test
je
xor
cmp
je
mov
mov
cmp
jne
xor
pop
pop
add
ret
mov
push
mov
push
push
lea
push
push
push
push
push
lea
mov
call
test
js
mov
cmp
je
cmp
je
xor
mov
movl
lea
cmp
je
mov
cmp
jge
mov
mov
mov
cmp
mov
jne
cmp
mov
mov
jne
add
cmp
jge
cmp
jle
sub
mov
mov
js
lea
mov
sub
cmp
mov
mov
jge
lea
mov
mov
cmp
jl
push
call
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
addl
mov
jmp
lea
call
mov
cmp
jne
xor
pop
pop
pop
pop
add
ret
lea
call
mov
cmp
je
testl
je
push
call
add
pop
pop
pop
xor
pop
add
ret
push
mov
push
push
xor
cmp
je
cmp
je
push
push
mov
lea
mov
test
je
pushl
mov
xor
inc
mov
shl
lea
push
push
pushl
pushl
pushl
push
call
inc
add
cmp
jl
mov
pop
pop
pop
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
je
cmp
je
cmp
push
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
je
test
push
push
je
sar
add
mov
lea
or
mov
pop
mov
pop
pop
pop
ret
mov
test
mov
je
call
cmpl
jne
mov
or
mov
addl
mov
add
lea
pop
or
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
call
test
jne
add
mov
cmpb
je
mov
mov
sub
add
test
sbb
dec
and
push
or
jbe
add
add
add
mov
movzbl
add
add
xor
sub
je
sub
jne
mov
add
add
mov
mov
sub
mov
pop
pop
mov
pop
add
ret
int3
int3
int3
sub
push
mov
push
mov
push
push
mov
mov
add
call
cmp
jne
movl
mov
xor
test
mov
jne
mov
cmpb
mov
je
mov
lea
push
lea
push
push
call
testl
jne
cmpl
je
mov
movl
mov
call
mov
mov
xor
xor
cmp
je
lea
test
je
mov
mov
mov
add
add
cmp
jne
mov
mov
mov
mov
call
mov
lea
call
test
jne
mov
mov
cmpb
mov
jne
mov
cmpb
je
mov
mov
cmpl
je
mov
add
mov
mov
cmpb
jne
mov
mov
mov
mov
call
cmp
jne
xor
xor
lea
cmpl
je
mov
mov
mov
push
lea
push
call
mov
mov
mov
add
mov
add
cmp
jne
mov
mov
mov
add
add
add
mov
sub
mov
mov
sub
mov
mov
sub
mov
pop
sub
pop
sub
pop
mov
mov
pop
add
ret
mov
push
lea
mov
call
mov
mov
lea
push
mov
mov
push
lea
call
cmpl
je
mov
mov
cmpb
je
mov
test
jne
mov
add
mov
mov
lea
mov
cmp
je
mov
test
je
movl
mov
lea
push
push
push
call
add
cmpl
je
test
je
mov
add
mov
mov
jmp
mov
mov
push
lea
mov
call
inc
add
pushl
mov
pushl
mov
pushl
mov
push
call
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
push
push
pushl
mov
call
add
mov
xor
mov
test
jne
mov
push
pushl
pushl
pushl
push
pushl
pushl
call
add
test
pop
jne
xor
inc
leave
ret
push
pushl
call
test
pop
pop
je
mov
jmp
push
mov
sub
andl
push
mov
push
push
mov
movzbl
push
pushl
and
pushl
lea
push
xor
call
mov
pushl
mov
mov
mov
mov
mov
add
mov
inc
rorb
mov
lea
mov
call
mov
andl
andl
mov
mov
lea
call
mov
lea
mov
mov
call
andl
test
je
movl
mov
mov
push
call
push
lea
push
lea
push
push
lea
push
pushl
push
call
mov
add
test
je
mov
test
je
testb
mov
je
mov
mov
mov
cmp
jne
mov
mov
lea
call
xor
mov
call
mov
lea
call
mov
test
je
mov
mov
mov
mov
test
je
lea
call
andl
andl
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
cmpw
jne
push
mov
mov
push
lea
push
push
call
cmpl
je
push
mov
cmpl
mov
mov
je
orl
lea
push
mov
call
push
mov
call
push
call
mov
pop
mov
call
mov
test
jne
pop
pop
leave
ret
push
mov
push
push
push
push
push
mov
push
call
mov
test
je
push
call
pop
movl
cmpl
je
push
call
test
pop
je
mov
andl
mov
mov
mov
mov
mov
movl
mov
mov
mov
push
call
test
je
mov
push
call
mov
mov
push
push
push
call
mov
mov
push
call
test
je
cmpl
je
push
call
pop
mov
pop
pop
pop
leave
ret
xor
jmp
push
mov
and
push
mov
addl
push
js
mov
mov
or
test
je
xor
pop
mov
pop
ret
mov
cmp
mov
jne
test
mov
jne
cmpb
je
test
jne
mov
push
push
mov
call
movb
xor
pop
mov
pop
ret
mov
call
xor
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
lea
mov
mov
call
test
jne
mov
mov
lea
push
push
mov
call
test
js
add
lea
push
mov
call
mov
mov
mov
push
pushl
push
push
mov
call
test
mov
js
call
cmpl
jne
mov
mov
call
mov
mov
mov
mov
mov
imul
imul
lea
call
mov
push
push
push
call
flds
mov
push
fstps
call
flds
nop
and
fstps
call
xor
cmp
jne
pushl
mov
mov
lea
mov
mov
call
lea
xor
cmp
jne
push
call
cmp
pop
je
movl
mov
mov
mov
mov
cmp
je
mov
mov
mov
call
push
lea
mov
call
lea
push
push
call
mov
test
jne
pushl
andl
mov
lea
call
mov
mov
mov
push
push
call
test
jne
lea
mov
test
mov
jne
push
call
test
pop
je
movl
add
add
rorb
cmpsb
in
add
js
call
mov
test
je
mov
mov
push
pushl
call
cmpl
jne
xor
cmp
jne
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
test
jne
mov
mov
pushl
mov
push
call
ret
mov
jmp
push
mov
push
push
mov
push
call
xor
push
mov
lea
mov
call
mov
cmp
je
mov
push
mov
lea
mov
call
mov
mov
mov
lea
mov
call
lea
call
mov
pop
leave
ret
mov
mov
mov
push
mov
mov
mov
add
mov
xor
pop
ret
int3
mov
mov
testb
mov
je
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shr
not
and
mov
testb
jne
xor
mov
testb
jne
mov
mov
mov
shr
and
mov
ret
push
mov
lea
pop
jmp
xor
mov
mov
shr
and
mov
ret
push
mov
cmp
je
push
mov
mov
xor
cmp
ja
pop
pop
ret
push
mov
push
test
mov
jne
cmpl
push
jne
xor
lea
call
mov
pop
leave
ret
mov
push
call
jmp
mov
push
lea
call
mov
lea
push
push
call
cmpl
je
jmp
push
mov
mov
sub
call
test
jne
mov
mov
call
leave
ret
push
mov
mov
mov
call
test
mov
je
mov
push
push
xor
call
cmp
je
push
lea
mov
call
lea
lea
mov
push
push
call
pushl
mov
add
mov
call
mov
cmp
jne
lea
call
lea
call
pop
lea
call
pop
jmp
push
mov
sub
mov
xor
mov
push
mov
push
lea
mov
xor
cmp
push
mov
jne
xor
cmp
mov
jg
mov
test
je
mov
push
push
call
mov
andl
lea
lea
push
lea
movb
mov
movl
call
call
push
push
push
call
mov
test
je
testl
jne
push
mov
call
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
jmp
mov
mov
mov
call
mov
lea
call
mov
test
je
mov
push
call
incl
cmp
jl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
push
mov
lea
mov
mov
lea
push
and
or
lea
push
push
movl
mov
call
mov
mov
add
cmp
jne
mov
xor
cmp
mov
movl
mov
ja
push
push
push
lea
mov
mov
mov
push
call
mov
cmp
je
testl
je
lea
cmp
jne
mov
pop
pop
pop
mov
pop
ret
lea
sub
mov
mov
push
mov
mov
sub
mov
call
cmpl
je
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
push
push
mov
call
test
js
mov
mov
mov
push
call
mov
xor
test
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
test
push
push
mov
je
cmpb
je
mov
cmpl
mov
jge
push
mov
call
add
lea
mov
movl
call
test
je
xor
mov
test
jne
test
jne
test
jne
mov
xor
push
xor
mov
mov
call
add
cmp
jne
push
lea
push
push
mov
call
mov
mov
add
mov
mov
push
lea
lea
mov
call
test
je
mov
test
je
testb
mov
mov
jne
cmp
je
call
push
push
push
push
call
mov
cmp
ja
mov
cmpl
jge
mov
test
je
lea
push
call
add
mov
cmpl
jne
mov
mov
push
call
add
test
je
mov
mov
mov
push
push
push
mov
call
lea
push
call
add
test
je
mov
mov
pop
pop
pop
pop
xor
call
add
ret
cmpl
jne
cmpl
jne
cmpl
jne
lea
push
push
call
add
test
je
cmpl
jae
mov
mov
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmpl
mov
jne
mov
mov
mov
call
test
mov
js
mov
jmp
cmpl
je
jmp
push
lea
sub
push
push
push
mov
xor
push
call
test
je
mov
pushl
lea
call
mov
cmp
pop
mov
dec
xor
cmp
mov
xor
lea
mov
inc
push
mov
mov
mov
push
call
test
js
cmpl
je
mov
or
inc
add
jge
mov
mov
push
call
test
js
lea
mov
lea
mov
lea
mov
lea
mov
lea
xor
push
lea
push
movl
movl
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
lea
push
lea
push
mov
movl
movl
mov
call
mov
pop
pop
lea
push
push
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
testb
jne
testb
jne
mov
bound
inc
add
call
cmpl
je
pushl
call
cmp
pop
je
mov
push
push
push
mov
call
test
je
mov
movw
pushl
mov
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
xor
lea
ficoml
inc
add
mov
pop
pop
pop
add
leave
ret
mov
push
push
call
jmp
testb
je
jmp
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
pushl
mov
pushl
call
neg
pop
sbb
pop
inc
ret
mov
decl
mov
je
ret
movl
push
movl
call
pop
xor
jmp
push
mov
push
xor
push
push
mov
mov
push
lea
pop
mov
movl
call
test
pop
je
cmpl
jne
pop
pop
mov
pop
ret
call
mov
jmp
pushl
mov
pushl
call
mov
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
push
push
push
call
cmpb
jne
mov
mov
test
mov
jne
mov
mov
sbb
inc
add
not
and
lea
cmp
ja
mov
xor
cmp
je
cmp
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
mov
mov
push
push
lea
push
mov
call
mov
mov
mov
mov
movl
mov
mov
mov
call
pop
pop
pop
mov
pop
ret
push
lea
push
call
add
mov
jmp
push
push
mov
mov
test
jne
mov
push
push
call
test
je
test
je
mov
push
call
pop
pop
ret
mov
mov
test
je
mov
mov
cmp
jae
mov
test
je
pushl
mov
pushl
push
call
ret
mov
jmp
xor
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
xor
push
call
test
je
mov
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
mov
and
jne
cmp
jne
pushl
lea
call
cmp
jne
lea
push
pushl
call
test
pop
pop
jne
cmp
je
pushl
call
cmp
pop
je
mov
mov
call
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
jne
pushl
mov
add
mov
call
mov
cmp
je
pushl
lea
call
lea
call
lea
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
pushl
call
test
pop
je
push
pushl
call
andl
pop
push
mov
lea
call
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
push
mov
sub
lea
cmpl
push
je
mov
mov
mov
xor
pop
leave
ret
push
mov
push
pushl
mov
call
pop
mov
lea
call
mov
mov
pushl
mov
push
call
test
pop
pop
pop
pop
jne
pushl
pushl
call
mov
pop
pop
jmp
push
mov
test
je
mov
push
mov
call
test
jne
mov
push
mov
call
test
jne
mov
mov
call
test
je
mov
pop
ret
mov
jmp
xor
pop
ret
push
push
push
mov
test
je
mov
mov
call
test
je
mov
call
mov
test
je
mov
mov
call
cmp
jb
mov
test
mov
jne
test
jne
pop
pop
pop
ret
pushl
call
pop
mov
call
mov
mov
jmp
push
mov
and
sub
push
mov
mov
mov
mov
push
xor
cmp
push
mov
je
mov
push
call
pushl
lea
push
mov
mov
mov
mov
push
lea
movb
call
mov
orb
mov
push
pushl
lea
push
push
call
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
lea
call
pop
pop
xor
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
pushl
mov
push
pushl
call
add
mov
xor
mov
test
jne
pushl
mov
pushl
pushl
pushl
push
pushl
pushl
call
add
test
pop
jne
xor
inc
leave
ret
push
lea
call
lea
call
lea
call
push
push
lea
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
mov
test
pop
jne
mov
test
jne
mov
test
jne
lea
call
lea
call
lea
call
lea
call
lea
call
mov
jmp
push
mov
push
push
push
push
mov
call
test
je
andl
push
mov
mov
add
cmp
je
xor
mov
cmp
mov
je
mov
push
push
mov
push
mov
call
test
je
mov
mov
mov
mov
mov
inc
cmp
jne
pop
cmpl
jbe
mov
mov
cmpb
je
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
cmpl
push
push
jle
cmpl
jle
mov
mov
mov
mov
mov
mov
push
lea
mov
mov
movl
call
mov
mov
lea
push
call
mov
mov
mov
add
call
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
mov
call
mov
mov
mov
mov
call
fstpl
mov
fildl
mov
mov
push
fidivl
mov
fstpl
call
fstpl
mov
add
call
test
je
mov
mov
mov
jmp
mov
mov
cmp
je
movzwl
test
je
movswl
call
movzwl
cmp
jne
lea
push
lea
push
mov
push
mov
call
add
test
je
fildl
mov
mov
push
fidivl
mov
push
fstpl
xor
fld1
fsts
add
fcomps
fnstsw
test
jnp
lea
flds
mov
fstps
sub
lea
fmuls
lea
fstpl
fldl
fstpl
fldl
fstpl
fldl
fstpl
push
mov
call
mov
mov
mov
mov
mov
add
mov
mov
push
lea
mov
mov
call
mov
mov
mov
test
jne
test
je
mov
mov
push
call
add
test
mov
jne
cmpl
jle
cmpl
jle
mov
lea
call
test
je
xor
lea
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
test
jne
mov
mov
mov
lea
mov
cmp
push
lea
jne
test
jne
xor
test
jne
mov
mov
and
or
jne
xor
test
mov
jne
xor
pop
pop
ret
mov
mov
mov
mov
pop
pop
ret
mov
jmp
push
mov
mov
mov
push
push
mov
push
add
mov
add
decl
inc
cli
push
add
cmp
add
cmp
je
push
call
cmp
pop
je
mov
orl
mov
pushl
mov
call
pushl
mov
push
mov
call
pop
pop
pop
pop
ret
push
mov
push
cmpb
jne
mov
test
movb
jbe
dec
mov
mov
push
lea
mov
push
mov
mov
mov
cmp
jb
mov
test
je
pushl
mov
dec
mov
call
jmp
push
mov
call
mov
pop
mov
movb
pop
leave
ret
movl
jmp
notb
add
incl
std
xor
push
push
mov
push
lea
push
mov
call
test
je
push
push
push
mov
call
test
jne
cmp
je
call
movl
xor
inc
pop
ret
xor
pop
ret
int3
int3
push
mov
and
sub
push
push
push
push
mov
call
add
test
je
mov
mov
push
push
call
mov
test
mov
je
addl
lea
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
mov
push
lea
push
movl
movl
movl
call
orb
cmp
jne
cmpl
je
mov
cmpl
jne
mov
call
test
je
push
mov
mov
call
test
je
mov
call
test
je
push
call
test
je
cmpl
jne
cmp
je
orb
push
call
test
je
add
pop
jne
cmpw
jne
mov
cmpl
jne
mov
movl
mov
add
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
test
je
addl
cmpl
je
mov
pop
pop
pop
mov
pop
ret
test
jne
mov
test
je
push
lea
call
cmp
je
lea
push
push
mov
call
add
test
je
push
push
lea
push
mov
call
test
mov
jne
lea
push
xor
call
test
je
push
mov
mov
call
test
jne
cmp
jne
push
push
push
mov
call
test
je
mov
push
lea
mov
call
test
jne
jmp
mov
call
test
jne
jmp
mov
call
jmp
push
push
lea
push
mov
call
push
push
lea
push
mov
mov
call
cmpl
jne
push
push
push
mov
mov
call
test
jne
cmp
je
push
mov
mov
call
test
je
mov
jmp
lea
cmp
ja
movzbl
jmp
nop
sbb
push
pop
adc
cmp
add
add
add
int3
int3
int3
push
mov
push
call
test
je
cmpl
jne
mov
cmp
jne
mov
pop
ret
orb
xor
pop
ret
push
mov
sub
push
mov
mov
mov
lea
push
call
mov
test
mov
je
andl
push
push
push
mov
add
call
mov
test
je
andl
mov
mov
lea
lea
mov
add
call
push
push
call
xor
cmp
jne
lea
mov
lea
call
push
call
test
pop
js
mov
pushl
mov
push
call
mov
cmp
mov
mov
je
mov
push
call
mov
cmp
je
cmp
jne
pushl
lea
push
call
lea
call
xor
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
call
inc
add
jge
push
mov
call
jmp
push
pop
inc
add
add
push
mov
push
jge
push
call
test
pop
je
mov
andl
test
movl
sub
add
add
push
add
decl
or
inc
adc
adc
inc
test
mov
je
mov
push
call
cmpl
je
mov
push
pushl
add
mov
push
call
mov
lea
call
mov
pop
pop
pop
ret
mov
push
call
jmp
js
inc
add
xor
and
call
mov
ret
pushl
call
pushl
mov
push
call
ret
push
mov
sub
push
push
push
lea
call
lea
call
xor
xor
mov
mov
test
jle
xor
mov
or
push
push
mov
lea
push
call
test
je
inc
inc
cmp
jle
test
je
mov
xor
push
inc
call
test
jne
mov
call
test
je
cmp
jg
cmpl
jg
jne
lea
push
lea
push
call
mov
mov
dec
jne
cmp
jne
lea
lea
call
cmpl
jne
lea
lea
call
cmpl
jne
lea
lea
call
mov
dec
jne
cmp
jne
lea
lea
call
cmpl
jne
lea
lea
call
cmpl
jne
lea
lea
call
mov
mov
add
movl
sub
mov
movl
mov
mov
lea
lea
push
mov
call
test
je
mov
mov
mov
add
cmp
je
cmpl
jne
mov
call
mov
mov
shr
lea
xor
mov
and
inc
shl
or
add
decl
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
xor
inc
pop
pop
pop
leave
ret
mov
jmp
cmpl
je
cmpl
je
cmpl
jmp
dec
je
dec
jne
jmp
dec
je
dec
jne
jmp
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
andl
test
jne
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
mov
mov
push
push
call
test
pop
pop
mov
jne
push
call
pop
andl
lea
mov
mov
push
mov
lea
movl
movl
movb
call
mov
mov
mov
mov
lea
push
mov
mov
movl
call
dec
neg
sbb
inc
mov
je
mov
test
jne
cmpl
mov
je
testb
movl
jne
testb
je
jmp
lea
call
lea
call
jmp
push
mov
sub
mov
push
push
xor
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
cmp
je
lea
push
mov
lea
movl
movl
mov
mov
mov
call
test
jne
pushl
lea
call
mov
cmp
je
mov
pushl
mov
pushl
push
call
mov
mov
push
pushl
pushl
push
call
lea
call
inc
add
call
inc
add
pop
leave
ret
mov
mov
mov
test
je
mov
call
test
je
pushl
mov
push
push
call
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
push
mov
movl
movl
cmpl
je
push
lea
push
call
pushl
call
pop
pop
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
push
mov
sub
push
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jmp
mov
mov
dec
mov
shl
add
add
call
test
jne
test
ja
mov
test
ja
mov
test
ja
mov
call
inc
add
rolb
pop
pop
leave
ret
mov
mov
mov
shl
mov
sub
lea
lea
mov
sub
sub
cmp
jne
decl
mov
mov
lea
mov
call
test
je
cmpl
jbe
jmp
mov
lea
push
mov
or
lock
dec
jne
lea
test
movl
je
push
push
lea
movl
adc
aam
mov
push
add
add
inc
sbb
adc
test
js
push
call
test
pop
je
mov
test
je
push
call
test
pop
je
push
call
pop
pop
pop
xor
pop
ret
push
call
pop
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
cmp
je
testb
push
mov
je
mov
mov
push
push
push
pushl
push
call
pop
lea
call
xor
pop
leave
ret
push
mov
testb
je
push
push
push
pushl
pushl
push
lea
push
call
mov
add
cmpb
je
xor
push
inc
call
mov
test
je
mov
test
jbe
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
test
push
mov
je
mov
mov
push
call
mov
test
mov
je
mov
push
mov
call
mov
test
mov
je
mov
mov
push
call
mov
cmpl
mov
je
mov
cmpl
je
cmpl
push
mov
je
cmpl
je
push
call
add
test
je
mov
mov
call
test
mov
je
add
mov
mov
mov
mov
add
push
push
push
call
mov
mov
mov
mov
add
xor
test
je
cmp
je
lea
cmp
je
mov
mov
cmp
jne
jmp
mov
mov
add
mov
test
mov
jne
test
je
add
mov
test
mov
je
addl
cmpl
je
cmp
je
cmpl
jne
mov
mov
cmp
jge
cmpl
jne
movl
mov
cmp
jge
cmpl
je
mov
mov
xor
mov
mov
call
test
mov
jne
mov
mov
mov
mov
mov
mov
test
je
lea
cmpl
je
cmpl
je
cmpl
jne
mov
call
mov
push
call
mov
mov
mov
addl
cmpl
je
test
je
mov
mov
push
call
test
je
mov
mov
push
call
lea
call
pop
pop
pop
xor
pop
add
ret
push
call
add
test
je
mov
call
mov
mov
test
mov
je
add
mov
test
mov
jne
test
mov
je
add
mov
test
mov
jne
add
mov
test
mov
je
call
jmp
xor
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
mov
push
mov
xor
cmp
push
mov
mov
lea
push
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
call
lea
push
lea
push
mov
movl
call
add
push
lea
call
lea
push
lea
mov
mov
call
mov
mov
add
cmp
je
mov
lea
push
push
push
lea
push
push
mov
call
mov
lea
call
mov
test
jne
test
jne
test
js
cmp
mov
lea
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
mov
call
mov
lea
push
lea
mov
push
mov
call
add
push
lea
call
lea
push
lea
mov
mov
call
mov
mov
add
cmp
je
mov
lea
push
mov
push
push
lea
push
push
mov
call
mov
lea
call
mov
test
jne
test
jne
test
js
mov
lea
push
mov
mov
mov
push
push
call
cmp
je
mov
mov
jo
inc
add
sbb
call
push
mov
add
call
mov
cmp
mov
je
mov
mov
mov
mov
mov
push
lea
push
push
mov
call
mov
push
push
push
push
xor
call
add
test
js
cmpw
jne
mov
mov
push
push
push
call
mov
lea
mov
mov
add
add
lea
mov
movl
movl
mov
mov
push
push
mov
call
push
mov
call
test
je
mov
lea
push
push
call
mov
add
test
je
mov
add
push
call
add
test
je
lea
call
mov
cmp
je
mov
mov
push
call
mov
cmp
je
mov
mov
push
call
mov
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
mov
call
add
test
jne
mov
push
call
add
jmp
mov
add
call
mov
jmp
push
mov
push
andl
push
push
push
lea
mov
call
mov
pushl
mov
push
lea
call
cmpl
pop
pop
jne
xor
lea
call
pop
mov
pop
leave
ret
push
pushl
call
pop
call
mov
cmp
jb
push
push
push
pushl
mov
call
pushl
xor
add
adc
mov
mov
call
pop
mov
pop
ret
mov
test
je
mov
mov
mov
mov
mov
xor
ret
push
mov
sub
mov
andl
push
push
mov
lea
call
mov
test
je
mov
lea
push
lea
push
call
test
js
mov
test
je
mov
test
je
mov
mov
mov
mov
mov
mov
lea
call
pop
leave
ret
mov
push
mov
lea
call
mov
mov
push
add
push
push
call
and
neg
sbb
and
pop
ret
push
mov
push
push
push
lea
cmpl
movl
movl
jne
lea
call
mov
call
lea
call
pop
leave
ret
sub
push
mov
mov
push
push
push
xor
or
mov
lea
jne
mov
mov
lea
push
add
push
lea
movl
movl
mov
call
mov
test
jne
test
jne
mov
push
lea
call
mov
cmp
je
push
push
lea
mov
push
lea
movl
movl
mov
movl
mov
call
mov
mov
push
lea
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
test
js
mov
mov
mov
mov
push
push
mov
lea
movl
mov
mov
mov
mov
push
push
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
mov
push
lea
movl
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
lea
movl
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
mov
push
lea
movl
movl
mov
mov
push
push
mov
call
mov
mov
test
jne
test
jne
test
js
mov
test
mov
je
mov
push
mov
call
mov
mov
mov
push
call
test
js
mov
push
push
push
push
call
mov
test
je
mov
mov
push
call
lea
call
lea
call
xor
pop
pop
pop
pop
add
ret
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
mov
je
add
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
movzwl
test
je
push
lea
mov
call
add
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
je
mov
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
pushl
pushl
call
cmp
jne
lea
call
mov
cmp
jne
inc
add
fimuls
add
pop
pop
mov
pop
ret
mov
movl
xor
ret
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
jne
movl
movl
movl
mov
test
movl
jne
push
push
mov
lea
push
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
test
mov
jne
test
jne
mov
test
jne
mov
test
jne
push
call
add
pop
pop
xor
pop
pop
ret
push
mov
push
pushl
andl
mov
lea
call
pushl
andl
mov
lea
call
cmpl
je
mov
test
je
pushl
mov
call
mov
mov
lea
call
lea
call
xor
leave
ret
jmp
int3
push
mov
and
sub
push
push
push
mov
mov
test
je
mov
mov
mov
mov
xor
and
or
mov
mov
jne
mov
and
xor
or
je
mov
mov
mov
push
mov
call
test
jne
mov
mov
mov
xor
mov
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
mov
mov
je
mov
mov
push
push
lea
push
push
push
call
mov
cmp
jne
mov
andl
pop
pop
pop
mov
pop
ret
mov
mov
mov
push
add
push
mov
call
test
je
jmp
mov
cmp
je
mov
call
test
je
mov
mov
push
mov
call
mov
and
add
or
je
cmpl
jne
mov
call
test
jne
mov
mov
mov
mov
mov
movl
movl
movl
push
call
add
jmp
mov
and
or
je
mov
xor
jmp
int3
push
mov
push
mov
mov
mov
push
mov
sub
test
jne
mov
mov
mov
add
push
push
push
call
add
mov
mov
add
push
push
lea
push
call
add
pop
pop
pop
ret
mov
mov
cmp
mov
lea
ja
mov
test
jne
mov
mov
cmp
mov
lea
ja
xor
ret
mov
jmp
push
mov
mov
test
jne
mov
mov
mov
mov
add
pop
ret
push
mov
push
mov
mov
mov
lea
push
push
call
test
js
mov
mov
cmp
jge
inc
mov
cmp
jge
xor
pop
pop
ret
mov
jmp
mov
mov
cmp
jae
mov
push
mov
test
je
mov
push
call
mov
pop
ret
push
mov
push
mov
mov
mov
lea
push
push
call
test
js
mov
test
jl
cmp
jge
mov
mov
push
push
call
mov
mov
xor
pop
pop
ret
push
mov
push
mov
mov
mov
lea
push
push
call
test
js
mov
test
jl
cmp
jge
xor
inc
pop
pop
ret
xor
jmp
push
mov
mov
test
jbe
mov
dec
mov
lea
cmpl
je
mov
mov
push
call
mov
mov
andl
mov
test
jne
xor
pop
ret
orl
orl
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
push
push
push
je
mov
push
movl
call
mov
add
cmpl
lea
jne
push
lea
call
mov
push
call
mov
mov
lea
lea
lea
add
cmp
jb
mov
lea
lea
lea
cmp
jne
push
push
push
lea
push
mov
call
mov
cmp
jne
pop
pop
pop
pop
add
ret
mov
jmp
lea
mov
mov
call
add
cmp
jb
mov
jmp
lea
mov
lea
mov
test
mov
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
mov
call
add
test
je
add
add
cmp
mov
jne
jmp
push
mov
lea
call
lea
call
lea
call
testb
movl
movl
je
push
call
pop
mov
pop
ret
push
mov
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
mov
push
push
mov
movl
movl
add
js
mov
add
add
jne
mov
test
je
push
call
test
pop
je
andl
mov
test
jne
mov
test
jne
mov
test
mov
jne
test
jne
lea
call
mov
test
mov
jne
test
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
cmp
jge
xor
cmp
jne
testb
jne
lea
mov
mov
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
mov
movb
cmpb
jne
cmpb
jne
mov
mov
lea
push
push
mov
call
test
js
mov
lea
push
mov
push
push
call
add
test
jne
lea
mov
mov
mov
push
push
mov
call
cmp
jne
lea
push
mov
call
call
push
push
push
push
call
orl
mov
mov
test
jne
test
jne
testb
jne
push
lea
movl
call
mov
mov
lea
push
call
add
cmpl
je
push
call
add
test
je
mov
call
mov
test
je
mov
mov
push
call
mov
test
lea
mov
jne
cmpl
je
mov
and
jne
test
jne
push
mov
call
push
lea
movl
call
mov
mov
call
mov
lea
push
lea
push
movzbl
push
push
mov
shr
and
push
mov
push
lea
push
push
mov
push
push
call
test
js
mov
mov
add
test
movl
jne
push
push
push
push
push
push
push
call
add
lea
mov
call
lea
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
testb
je
jmp
int3
int3
int3
int3
sub
mov
xor
mov
add
push
mov
push
push
mov
mov
mov
mov
mov
mov
xor
cmp
mov
mov
je
cmp
jne
movl
xor
test
js
mov
mov
push
lea
lea
movl
movl
mov
mov
mov
call
cmp
je
push
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
xor
jmp
mov
jmp
lea
movzwl
push
call
add
test
jne
cmp
jae
mov
nop
movzwl
cmp
je
cmp
je
cmp
je
cmp
je
add
cmp
jb
lea
mov
xor
mov
mov
sub
mov
lea
lea
mov
movl
movl
mov
call
add
push
mov
mov
mov
call
test
jne
mov
cmpw
je
mov
push
mov
call
add
xor
push
lea
mov
call
add
lea
push
push
mov
mov
movl
movl
mov
movb
and
add
lea
push
lea
push
call
mov
mov
add
test
jne
test
jne
test
js
mov
cmp
je
cmp
je
mov
mov
push
push
push
mov
call
lea
call
mov
test
jne
test
jne
nop
mov
xor
jmp
lea
nop
mov
cmp
jb
mov
push
mov
lea
mov
call
lea
call
lea
push
mov
mov
call
mov
mov
mov
mov
push
push
mov
push
push
mov
push
push
push
call
test
js
cmp
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
jne
cmp
lea
jne
mov
push
mov
call
mov
push
lea
mov
call
lea
call
cmp
lea
je
lea
call
mov
test
je
mov
add
push
call
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
aam
or
pop
mov
test
jne
testb
je
push
call
pop
pop
mov
pop
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
je
cmp
je
test
push
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
push
call
mov
insb
hlt
aad
add
jae
mov
mov
push
addl
lea
fwait
stos
fucomp
jns
data16
add
outsl
mov
add
add
mov
leave
lahf
xchg
jae
lret
add
lods
mov
aad
call
push
std
add
lret
add
test
add
add
xchg
rcrl
jne
popa
push
mov
add
push
push
push
push
push
push
lea
push
push
push
call
add
in
add
add
push
incb
add
fiadds
loopne
add
pusha
jmp
add
cltd
mov
lahf
rcll
xchg
add
push
pop
add
scas
add
js
test
add
gs
add
shrl
xchg
push
pop
add
jecxz
add
fbld
add
pop
movl
push
push
call
jmp
pop
xchg
add
xchg
in
fcoms
in
add
hlt
add
add
cmpsb
mov
imul
jb
les
add
add
mov
int
sti
xchg
add
mov
loop
lods
add
add
cltd
ja
add
flds
add
pop
aam
pop
mov
outsl
add
add
rcrl
push
imul
popl
push
push
lea
push
call
out
add
push
fiadds
add
add
icebp
add
add
add
test
add
fwait
outsl
pop
add
out
add
jnp
add
bound
roll
in
pop
add
mov
add
jns
int3
lret
faddl
iret
add
mov
imul
add
pop
or
movsb
scas
add
pop
push
push
push
push
push
push
push
lea
push
push
push
call
fidivl
xchg
add
js
adcb
add
mov
std
xlat
mov
idivl
add
add
cmpsl
test
test
add
cmpl
test
lea
addr16
mov
xchg
add
add
pop
pop
sti
add
mov
mov
mov
add
pop
sti
add
add
add
test
lahf
add
into
add
mov
lea
pop
push
push
lea
push
push
push
push
call
lods
test
scas
pop
add
add
push
test
xchg
icebp
rcl
add
push
mov
movsb
movb
out
js
add
movb
add
jb
cltd
test
imul
add
push
enter
jbe
push
add
mov
add
add
gs
jae
jmp
add
add
hlt
lea
pop
push
push
push
lea
push
push
push
push
push
push
push
call
popf
add
mov
xchg
rolb
fwait
add
jnp
mov
mov
cmc
filds
add
add
xlat
cmpsb
add
add
roll
mov
aad
add
mov
add
push
add
push
movsb
add
gs
add
add
mov
pop
add
fldl
shr
mov
add
in
repnz
rolb
lock
add
frstor
mov
les
push
push
call
outsl
jo
addb
into
mov
add
add
add
add
jae
pop
mov
mov
add
movl
add
jp
jle
mov
add
mov
add
fldl
jp
mov
mov
mov
add
add
mov
imul
pop
call
call
push
push
push
call
ret
mov
mov
int3
push
xchg
jo
shlb
loope
xchg
add
ret
into
imul
out
add
in
add
divb
jb
fsubp
mov
add
mov
add
add
add
add
add
add
aam
nop
add
jne
add
add
mov
add
add
cld
lea
pop
call
push
push
push
call
pop
add
add
add
mov
xchg
sti
repnz
test
add
add
iret
rolb
mov
pushf
add
add
jmp
mov
lea
add
pop
jmp
lods
push
fists
clc
mov
add
jmp
loopne
fs
mov
xchg
movsb
mov
jle
add
add
pop
fmuls
pop
jmp
ret
push
push
call
xchg
xchg
faddl
add
add
add
imul
add
pop
add
add
add
add
shll
xchg
cli
arpl
push
add
add
imul
mov
sub
leave
movsb
outsl
hlt
add
add
add
jae
fsubrp
flds
pop
lret
out
jle
out
scas
add
push
mov
add
jp
hlt
add
jns
mov
lea
pop
mov
mov
add
push
push
push
call
loope
add
into
add
add
jb
add
mov
xchg
rolb
add
jae
in
imul
add
mov
xchg
filds
std
add
out
mov
add
add
mov
add
lcall
add
mov
imul
push
mov
add
into
add
jo
pop
add
add
mov
aad
add
mull
lea
pop
add
add
push
push
push
push
lea
push
call
add
jp
loope
ljmp
popl
xchg
jge
sti
lods
addr16
jo
add
scas
mov
add
fisubs
push
mov
arpl
cltd
add
add
jmp
lahf
enter
lds
lret
add
add
add
js
add
add
add
rcr
rorb
jl
xorb
notl
push
out
mov
movsl
pop
add
pop
mov
xor
add
push
push
push
push
push
push
push
call
pusha
sarb
aad
in
push
jmp
mov
sahf
sti
add
add
into
jl
add
pusha
popa
add
add
test
add
mov
nop
cli
add
roll
add
add
loope
mov
out
in
in
add
add
loopne
flds
add
xchg
add
cmpsb
add
mov
push
mov
fcompl
mov
hlt
lea
pop
call
push
push
call
mov
add
cli
in
add
cli
mov
add
add
out
add
lods
add
push
add
nop
shll
add
add
add
jnp
cmpsl
add
add
add
std
add
add
add
mov
out
mov
add
adcb
mov
add
add
mov
mov
lea
pop
mov
push
push
push
lea
push
call
mov
xchg
add
fnsave
mov
add
add
add
add
xchg
add
loope
in
mov
add
push
pop
add
in
icebp
mov
add
pop
bnd
add
aad
cwtl
mov
lret
filds
int3
cwtl
mov
pop
add
sahf
add
int3
xchg
rolb
roll
cmpsl
xchg
loope
ja
pop
add
imul
add
imul
add
add
pop
xor
push
push
call
add
addb
add
xchg
rolb
push
add
add
sbbl
mov
nop
add
add
nop
add
test
repnz
jnp
jb
add
je
int3
jae
add
arpl
iret
xchg
mov
stos
popa
les
cmpsl
push
add
jo
cmc
add
mov
jb
add
fcmovu
out
out
xchg
mov
lea
pop
add
push
push
sub
lea
push
or
inc
add
add
sub
add
pop
add
sub
pop
push
push
push
push
lea
push
push
push
lea
push
push
call
add
fs
call
lds
into
add
pop
cld
loopne
andb
ja
int3
scas
lret
mov
pop
add
add
mov
mov
loop
scas
add
test
push
imul
pusha
mov
andb
mov
fcmovnu
add
mov
add
lds
jno
jb
add
mov
lea
pop
pushl
call
mov
push
push
push
push
push
push
push
lea
push
call
add
insb
push
imul
jge
andl
in
add
add
flds
std
add
int
add
add
add
add
test
lods
out
jnp
bound
add
push
add
test
add
in
ja
js
xchg
add
stos
test
lret
mov
add
xchg
pop
cli
add
mov
lea
pop
movl
push
push
push
push
push
call
addl
mov
add
stc
mov
jl
cmc
add
add
add
shll
add
aad
iret
add
add
test
jnp
mov
add
xchg
push
bound
movb
lcall
pop
jl
xchg
in
movsb
add
pop
add
lods
sarl
jns
mov
clc
mov
shlb
cmpsb
add
call
mov
mov
scas
add
adc
lea
push
push
push
push
push
call
imul
add
xchg
push
aad
out
mov
cmp
add
fldl
mov
test
mov
add
pushf
add
add
scas
push
jns
add
lds
add
pop
add
add
cmc
jae
enter
xchg
mov
lret
mov
sarl
mov
add
add
add
pop
push
push
push
push
call
add
imul
test
movsl
loopne
nop
clc
dec
xchg
fisubrs
andb
add
rcl
lea
add
add
add
lods
push
add
xchg
ret
popa
cmc
stc
movb
add
add
add
sti
push
jecxz
add
xchg
add
mov
jmp
add
mov
rcll
mov
mov
clc
mov
lea
pop
pushl
pushl
push
push
push
push
push
push
call
mov
xchg
jmp
add
lret
add
imul
add
and
mov
add
lret
pop
add
in
imul
add
mov
arpl
clc
rcll
sahf
add
gs
test
add
mov
aad
mov
clc
add
mov
jge
add
add
clc
lcall
xchg
xchg
lods
imul
subb
les
into
xor
add
jne
push
push
call
cltd
jno
enter
add
arpl
add
shr
add
add
add
add
gs
arpl
cmc
pop
in
add
xchg
lea
test
ja
add
cmpsb
add
add
mov
shr
addl
add
pop
cld
jne
mov
adcb
stos
scas
add
pop
pushl
call
push
push
inc
push
sub
add
lea
sub
add
xor
pop
add
inc
pop
push
push
push
push
push
call
icebp
stos
imul
add
pop
stc
jns
mov
add
popa
mov
add
add
loopne
pop
add
xchg
push
add
les
insb
add
lds
stos
sti
add
add
add
mov
sti
jnp
add
fcomi
lods
push
xchg
add
stc
push
popf
add
fidivl
jb
add
pop
data16
cmpl
add
add
add
pop
pushl
push
lea
push
lea
push
push
push
push
push
call
add
mov
push
mov
add
jbe
mov
add
ret
lods
mov
popf
add
mov
add
int
mov
arpl
add
mov
mov
test
in
add
test
xlat
pop
test
je
jo
rolb
jbe
push
push
add
hlt
add
mov
mov
fldl
mov
lea
pop
call
push
push
push
inc
add
push
or
not
add
lea
add
shr
sub
dec
pop
add
shr
xor
pop
push
push
push
call
rolb
mov
fnsave
in
jmp
mov
out
fwait
add
mov
clc
lock
add
lret
add
xchg
add
add
aad
pop
ret
add
add
addl
add
add
mov
loopne
add
jp
outsl
jecxz
xchg
add
jecxz
add
push
add
pop
out
aam
movl
les
push
push
push
push
push
call
addr16
add
add
add
jne
les
iret
xchg
add
mov
stc
out
ja
push
cltd
add
add
fistpl
push
xlat
data16
pop
add
add
decb
cli
add
in
cwtl
cli
mov
add
add
stos
add
mov
mov
std
add
add
add
mov
add
mov
lea
pop
call
mov
push
push
push
push
push
push
push
call
add
push
iret
xlat
jbe
incb
mull
add
js
roll
in
out
add
xchg
pop
scas
jnp
popf
add
add
pop
testb
lret
add
clc
xchg
jle
ja
push
add
add
add
push
add
hlt
add
add
add
sti
hlt
jecxz
add
add
popa
mov
add
pop
add
xchg
add
gs
fidivrl
sbb
mov
push
push
push
push
push
push
push
push
push
push
call
cwtl
in
data16
jmp
fstpl
in
add
mov
add
pushf
les
out
add
shll
fwait
lahf
lds
lods
mov
nop
cli
mov
in
pop
mov
mov
jne
add
add
stc
mov
push
movb
mov
pop
add
repnz
bound
add
mov
pop
add
mov
out
mov
enter
cwtl
add
mov
pop
add
add
add
push
lea
push
push
push
push
lea
push
call
cltd
mov
add
add
lret
push
mov
data16
add
ljmp
add
push
add
add
jbe
outsl
jp
add
add
push
add
mov
xchg
add
add
xchg
add
add
call
fildl
insb
push
out
push
pushf
add
add
add
ret
add
incb
add
lea
pop
mov
push
push
push
push
push
push
push
push
push
push
call
add
imul
rorb
sarb
jns
iret
add
add
mov
pushf
add
jge
iret
cltd
add
jb
add
mov
add
add
fwait
pushf
in
fadds
imul
mov
mov
push
pop
add
push
loop
xchg
cmpsb
mov
add
add
movsb
fwait
add
scas
scas
not
mov
lea
pop
xor
push
push
push
lea
push
push
push
push
push
call
add
jge
add
sahf
movsb
add
add
add
out
mov
jno
xchg
movsb
div
add
movsl
roll
push
mov
mov
call
add
and
add
add
add
aad
add
pop
call
mov
add
fistpll
xchg
jns
addl
vpunpckhdq
lea
pop
add
add
push
lea
push
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
in
popa
out
add
add
ja
repnz
push
add
add
add
add
mov
mov
lahf
vrsqrtps
fildl
fildl
add
mov
mov
add
add
add
add
hlt
outsl
cmc
add
push
add
nop
scas
leave
movsl
jge
idivb
push
add
clc
add
sub
mov
push
push
push
push
push
call
add
add
add
movb
roll
stos
mov
mov
add
add
popa
cmc
add
pusha
popa
cmpsb
int
sar
movsl
mov
lock
add
mov
add
mov
add
test
test
add
mov
mulb
xchg
out
addb
stc
add
cmpl
into
xchg
jecxz
add
popf
cli
mov
lea
pop
xor
push
push
call
fs
mov
add
mov
outsl
add
mov
mov
jp
add
add
sti
mov
xchg
add
imul
mov
push
add
add
hlt
enter
add
pop
fisubrs
xchg
jb
lods
sbb
add
add
outsl
pop
add
add
jecxz
add
sbb
mov
add
popf
add
gs
add
mov
lea
pop
add
push
push
push
push
push
call
imul
test
test
test
pop
push
mov
push
add
add
add
push
add
push
add
add
sahf
addr16
xchg
add
lcall
nop
stc
rcrb
les
into
push
add
add
rcl
roll
add
add
orb
lret
add
add
add
add
jbe
cld
lea
pop
add
push
push
push
call
in
push
arpl
mov
add
mov
lahf
scas
testl
shr
ret
jb
mov
add
add
rolb
mov
add
mov
add
xchg
add
jecxz
add
std
testb
add
push
jmp
ret
jmp
add
popf
push
add
add
lea
pop
pop
mov
push
push
lea
push
push
push
push
push
push
push
push
push
call
stc
mov
int
add
jge
cltd
add
pop
mov
lods
into
xchg
out
add
popf
add
add
sar
leave
pusha
add
jae
add
fcompl
add
testb
mov
add
add
add
add
mov
out
jae
jmp
mov
add
add
add
cli
loope
fwait
add
mov
lea
pop
xor
push
push
push
lea
push
call
imul
add
add
add
xchg
out
test
pop
ficomps
add
add
xchg
cmc
add
mov
stos
mov
in
into
mov
aam
xchg
roll
fiadds
lods
xorb
jmp
clc
nop
call
add
jo
fwait
outsl
xchg
mov
into
stos
add
ljmp
pusha
add
add
arpl
cld
lea
pop
add
push
push
lea
push
push
push
push
push
call
xchg
add
add
xchg
pop
mov
mov
add
into
add
add
add
jns
mov
add
add
stos
add
add
mov
xchg
add
popa
add
add
add
cwtl
mov
add
lahf
pop
jne
fsubrs
add
add
add
cmc
add
popf
testb
aad
add
lea
pop
push
mov
xor
push
lea
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
add
mov
add
add
sbbl
push
mov
lods
push
mov
std
add
add
add
mov
add
xchg
add
add
add
add
add
add
add
ljmp
les
add
mov
mov
lea
pop
sub
pop
rep
push
push
call
add
int3
mov
xchg
add
push
push
add
add
mov
push
insb
add
mov
add
add
add
add
lock
add
jnp
add
je
pop
pop
pop
add
xchg
xchg
loopne
add
add
ja
push
add
add
nop
lods
add
pushf
popa
jae
pop
add
add
fcompp
xor
mov
lea
pop
pop
mov
push
push
call
mov
lods
outsl
ljmp
add
lret
push
mov
cmpsb
lea
addb
add
add
add
pushf
add
cld
lods
add
add
xchg
fbstp
add
add
cltd
sti
rcl
enter
lea
add
push
add
add
icebp
add
movsb
test
cmpsb
add
xchg
add
add
add
xlat
mov
outsl
hlt
xchg
rolb
or
pop
in
ret
add
add
add
push
lea
push
push
push
push
push
push
lea
push
call
add
pop
add
int
add
add
add
add
out
jne
je
add
add
add
rclb
add
sahf
test
add
lret
clc
mov
add
mov
movsl
push
pop
xchg
add
aam
cmc
shrl
add
outsl
pop
test
mov
cwtl
roll
popf
fnstenv
add
iret
add
pop
mov
xor
push
push
push
push
push
call
mov
add
add
shlb
mov
in
lds
test
add
lods
enter
pop
aam
add
add
ret
ljmp
xchg
add
imul
add
add
cwtl
lahf
add
mov
imul
mov
add
rolb
add
add
incb
add
in
movsb
add
add
lea
pop
mov
xor
push
push
lea
push
push
call
mov
ret
shll
add
mov
test
pushf
add
push
cltd
in
loope
add
add
icebp
add
xchg
add
test
out
add
lahf
add
mov
mov
nop
xchg
add
add
xorb
push
insb
pop
popa
jae
jne
add
sarl
jl
repnz
fstl
add
mov
lea
pop
mov
push
push
push
lea
push
push
push
push
lea
push
push
call
out
jecxz
add
add
add
add
outsl
add
mov
add
add
add
mov
les
add
add
add
add
fists
sahf
mov
out
divl
cmc
andb
add
nop
add
cli
add
roll
shll
jnp
test
mov
call
fsubl
add
add
in
jne
pop
xchg
add
add
fsqrt
add
pop
orl
push
push
push
lea
push
push
push
lea
push
lea
push
lea
push
lea
push
call
nop
mov
lret
data16
std
jecxz
test
pushf
jno
add
lahf
add
jge
add
add
pop
lea
lcall
mov
loopne
add
lahf
fadd
mov
xchg
add
test
out
xchg
mov
mov
push
lret
aad
jmp
push
add
add
std
add
leave
jp
add
mov
lea
pop
add
push
push
lea
push
push
call
imul
add
add
mov
fdivrs
outsl
in
add
add
add
ljmp
out
add
add
movsb
repnz
add
jp
add
add
add
aad
xchg
xchg
pop
jp
int3
mov
add
add
add
push
lods
cld
xchg
add
mov
insb
add
les
ret
sbb
or
push
call
jo
pop
cld
inc
aad
pusha
cltd
pop
arpl
add
add
add
stc
cwtl
push
add
add
pop
xchg
testl
mov
stos
je
add
in
pop
add
cltd
gs
jbe
add
add
add
add
mov
int3
cmc
pop
stos
nop
sbbb
add
test
mov
lea
pop
add
push
push
lea
push
push
push
push
push
push
push
lea
push
call
test
mov
pop
leave
mov
cmc
les
add
mov
add
add
rcl
testb
mov
into
add
mov
add
add
add
add
add
shr
add
push
mov
add
pop
add
add
push
fildl
add
leave
mov
out
add
outsl
add
add
shlb
stos
xchg
mov
in
add
add
clc
mov
arpl
pop
mov
push
push
inc
rol
add
push
or
inc
add
shr
sub
lea
sub
sub
pop
add
pop
push
push
lea
push
push
push
push
call
add
add
add
fiaddl
add
add
add
add
add
out
add
add
push
pop
andl
iret
push
add
ja
pop
add
add
pop
mov
add
stc
jo
add
add
roll
lcall
add
out
add
xchg
cwtl
lods
jnp
mov
push
mov
std
into
add
pop
fnstenv
popa
sbb
jne
call
push
push
push
dec
rol
push
or
inc
add
ror
shl
dec
sub
add
sub
pop
inc
xor
xor
pop
push
push
push
lea
push
push
push
push
push
call
mov
push
pushf
mov
add
jl
add
jl
arpl
mov
add
add
addr16
mov
add
add
rcrl
ja
in
fildl
mov
mov
add
add
add
add
jp
add
mov
add
mov
add
add
mov
incb
xchg
icebp
mov
lea
pop
push
push
push
push
lea
push
push
call
add
add
add
add
add
rclb
test
addl
outsl
add
mov
add
add
jb
add
add
lods
lods
add
add
add
testb
fucomi
mov
xchg
add
jns
test
add
jae
xchg
jge
add
mov
lea
pop
call
push
push
call
mov
lods
push
add
add
les
add
jns
add
add
add
sti
imul
stc
hlt
add
add
add
add
fstpt
stos
mov
mov
mov
xchg
xabort
lods
jp
add
popa
add
add
mov
cmpsl
push
mov
in
js
push
xchg
add
add
mov
lea
pop
mov
push
lea
push
push
call
add
mov
fwait
stos
add
out
loope
pop
aam
push
cmc
add
mov
add
lahf
add
xlat
lds
add
sarl
cli
int3
mov
add
add
loopne
add
add
icebp
std
add
fsubrp
add
pop
add
add
jo
mov
test
stos
pop
mov
lea
pop
push
push
mov
push
push
call
add
xchg
cmpsb
add
std
pushf
add
xchg
imul
mov
testb
mov
add
sti
insb
aam
add
add
add
mov
fcomip
fildl
push
add
mov
add
shll
xchg
push
lods
add
add
push
xchg
add
jl
xchg
add
pop
test
mov
aad
mov
ficoml
lods
mov
lea
pop
add
add
push
push
call
aam
mov
mov
mov
push
out
add
bound
addl
add
jns
roll
add
mov
pop
add
nop
xorb
lds
mov
add
data16
pop
divb
add
add
imul
jge
mov
add
jmp
mov
mov
mov
lea
pop
add
mov
xor
push
lea
push
lea
push
lea
push
call
push
cmpsl
loopne
add
shll
insb
xchg
mov
jno
pusha
add
add
add
add
add
add
ljmp
leave
push
in
pop
add
add
push
add
cwtl
xchg
add
add
std
add
add
lods
addl
popa
jbe
add
add
pop
add
push
push
push
lea
push
lea
push
push
push
push
call
add
fninit
mov
lcall
add
out
movsb
mov
mov
add
lods
fadds
mov
jo
add
add
add
add
pop
add
pop
add
js
add
jmp
aam
add
add
mov
jb
add
push
addr16
enter
add
mul
shl
push
add
mov
arpl
mov
push
push
push
push
push
lea
push
push
push
lea
push
push
push
call
add
xchg
sti
cmpsb
test
sti
push
hlt
enter
xchg
add
add
imul
js
stc
add
movl
add
subb
enter
loopne
add
add
adc
add
xchg
add
cltd
add
add
insb
pop
mov
hlt
lea
pop
xor
push
push
call
out
negb
add
addl
je
add
sti
add
add
enter
test
add
negl
fdivl
pop
push
add
mov
push
mov
je
add
mov
push
int
add
divl
addb
add
jno
add
add
fs
fldl
mov
lea
pop
add
push
lea
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
add
add
fildll
popa
add
mov
incb
mov
scas
jne
add
add
add
add
add
mov
popa
pushf
lods
add
mov
mov
fwait
add
mov
out
fildl
fld1
add
stc
push
fwait
stos
stc
jge
add
leave
out
aam
xchg
add
cmpsl
pop
insb
push
sub
lock
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
fisubs
mov
in
int3
add
lea
push
add
jecxz
push
repnz
loopne
add
xchg
push
shll
xchg
lea
nop
add
add
add
fwait
imul
aad
add
mov
cltd
icebp
pop
jno
incb
out
pop
jno
add
pop
push
mov
lahf
add
rol
mov
push
test
add
pop
int
into
add
add
pop
rcrb
push
fildl
add
add
pop
mov
xor
push
push
lea
push
push
push
push
push
push
call
push
add
movsb
add
lcall
mov
jns
add
add
add
add
xchg
lods
add
cmpsl
enter
in
pop
push
add
add
add
mov
add
add
mov
mov
jo
nop
add
mov
cmpsl
add
in
mov
add
add
shlb
cli
pop
fcomp
add
stos
jae
mov
push
add
push
mov
and
movsb
mov
push
push
push
push
push
push
push
call
sahf
add
push
add
pop
add
add
add
add
sahf
fcoml
stos
xchg
jmp
add
lret
sahf
push
pop
mov
add
imul
add
add
push
pop
add
add
add
je
add
hlt
cwtl
add
pop
imull
popf
sahf
add
add
add
enter
add
shlb
into
add
push
mov
lea
pop
xor
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
imul
jnp
add
add
into
add
mov
add
out
add
add
test
ret
mov
xlat
lcall
out
add
xchg
add
jbe
add
add
add
add
into
lds
push
scas
roll
add
add
push
repnz
movl
mov
add
pop
add
push
push
lea
push
push
push
call
add
test
add
push
add
add
add
mov
xorb
add
mov
add
addb
mov
mov
mov
popf
out
jo
add
aam
pop
aad
clc
loopne
add
add
in
divl
mov
imul
cmpsb
push
jns
push
add
xchg
mov
lea
pop
or
je
push
lea
push
call
clc
add
popa
aam
mov
mov
rcrl
mov
mov
rcrl
cltd
pop
push
cltd
mov
vcmpsd
roll
push
fldl
add
add
add
in
aam
lahf
add
mov
in
mov
add
xchg
push
out
mov
enter
pop
rcl
add
add
add
in
add
enter
int3
lea
pop
mov
push
push
push
call
jns
add
add
add
pop
fs
push
add
add
out
xchg
add
iret
add
ljmp
popa
cmc
push
add
icebp
lret
sti
add
add
push
repnz
nop
incb
lods
add
add
enter
add
sahf
insb
mov
add
jbe
addl
mov
add
addl
xchg
mov
lea
pop
xor
push
push
lea
push
push
lea
push
push
call
add
add
testl
cmpsb
nop
mov
add
push
add
arpl
fistpl
add
lret
outsl
add
fildl
add
add
pop
jge
bound
lcall
leave
jae
mov
add
add
nop
repnz
js
add
push
add
fimuls
add
add
add
add
add
lea
pop
add
mov
push
push
push
push
push
push
push
lea
push
push
call
push
xchg
jo
pop
add
scas
nop
mov
test
mov
movsb
mov
lds
add
add
xchg
push
mull
add
nop
pop
add
add
add
add
add
push
push
mov
jns
jmp
cmpsb
stos
add
add
cmp
lea
mov
add
addr16
lea
pop
xor
push
lea
push
push
push
push
push
push
push
push
push
call
flds
gs
add
fisubrs
add
add
mov
add
cld
ljmp
lcall
fcompl
add
jmp
add
add
mov
push
add
cwtl
xchg
out
add
test
out
jno
lock
ficomps
in
add
jb
icebp
lret
add
jp
add
sahf
out
pop
fcmovbe
out
sti
loopne
mov
arpl
pop
add
push
push
push
push
lea
push
push
lea
push
push
push
call
mov
add
lea
mov
data16
add
gs
rcl
fs
scas
xchg
xchg
mov
add
add
jecxz
mov
in
andl
push
lret
testl
jmp
les
pop
bound
pop
sahf
in
add
add
cmc
out
mov
ficompl
movsb
add
jmp
rolb
mov
imul
les
repnz
push
push
push
push
lea
push
push
call
xchg
out
add
add
out
scas
jns
filds
xlat
xlat
lcall
test
add
mov
roll
xchg
add
js
addb
fstp
add
xchg
mov
loopne
push
idivl
xchg
add
add
add
rcrb
in
fiadds
add
push
add
mov
aad
jns
testl
add
add
add
add
lods
add
add
pop
add
push
push
push
call
popa
add
lds
push
mov
mov
push
cmpl
in
test
call
fnstsw
in
fcomps
add
jp
hlt
enter
in
lahf
pushf
mov
push
mulb
add
xchg
mov
lcall
mov
add
iret
pop
add
fistpl
faddl
mov
mov
outsl
xchg
add
pop
push
push
push
push
push
call
add
jle
xchg
add
add
fistps
add
sahf
add
xchg
xchg
mov
lret
mov
add
push
test
add
mov
ret
movsl
outsl
add
enter
add
add
mov
push
call
jle
add
jmp
jge
nop
add
add
mov
add
add
fdivl
test
leave
ror
clc
jo
fiaddl
mov
lea
pop
mov
push
push
lea
push
lea
push
push
call
jp
mov
add
aam
fldcw
aad
stos
push
push
add
leave
add
mov
add
add
in
orb
lods
iret
xchg
fnstenv
imul
je
in
pop
lds
jecxz
scas
add
sahf
test
add
mov
test
add
fimull
out
add
add
add
int3
add
imul
lea
pop
xor
push
push
push
call
add
cli
add
push
xchg
mov
push
jb
add
add
test
add
lods
rcrl
mov
repnz
mov
pop
lods
pushf
mov
add
jecxz
add
jp
ljmp
fcomps
push
mov
stos
jmp
mov
add
add
flds
lock
mov
lea
pop
add
push
ror
not
pop
add
push
push
push
push
call
add
enter
jne
add
add
rol
pusha
lock
jge
fsub
mov
push
testl
add
jns
pop
add
xchg
add
loope
add
pop
lahf
add
clc
xchg
push
add
cltd
aam
cmpsl
lods
mov
pusha
add
add
jns
jecxz
int
jp
jecxz
aam
mov
lea
pop
pop
rep
mov
xor
push
push
push
call
add
je
pop
add
jnp
pop
pop
add
jne
gs
mov
rolb
call
cltd
lret
add
add
mov
add
in
movsb
mov
je
enter
jle
loopne
iret
add
fadds
mov
add
pop
imul
mov
add
push
add
fdivrl
add
mov
push
or
or
je
mov
add
push
sub
ror
add
lea
pop
add
push
add
pop
rep
pop
push
push
not
add
push
sub
add
sub
dec
xor
sub
pop
ror
sub
pop
push
pop
pop
push
lea
push
push
push
push
push
push
push
push
call
add
in
add
xchg
in
push
add
push
add
add
lret
out
add
clc
jl
mov
add
lea
icebp
add
int
movl
mov
jno
push
jmp
add
cmc
lret
sahf
jne
add
loop
popf
fiadds
add
loop
add
add
add
add
add
mov
lea
pop
mov
push
push
push
call
out
cli
pop
fcmovne
pusha
pop
loope
mov
ret
pop
add
popf
add
push
mov
add
jle
sar
loope
pop
outsl
into
fistpl
add
mov
add
add
jnp
mov
lods
cmpsl
lahf
add
xchg
add
std
fadds
add
add
lock
add
out
mov
in
add
pushf
int3
add
pop
pusha
add
mov
lea
pop
mov
push
add
add
lea
pop
mov
jmp
push
not
ror
pop
push
push
lea
add
pop
mov
add
push
pop
push
push
push
lea
push
call
add
add
pop
add
jmp
fwait
pop
mov
les
enter
nop
add
int3
add
mov
ja
add
add
add
insb
cmpsl
lcall
aad
ret
add
faddl
xchg
add
add
loop
pusha
add
enter
js
test
mov
je
push
add
hlt
loop
add
test
jge
int3
lea
pop
push
push
push
push
push
push
push
lea
push
call
mov
loopne
stos
test
cld
sahf
add
jle
cwtl
enter
jecxz
data16
pop
add
cwtl
add
add
outsl
out
push
scas
loopne
push
cltd
shrl
push
add
insb
hlt
flds
shr
roll
mov
add
fiadds
jae
idivb
xchg
add
add
pop
in
add
jo
add
roll
into
add
lds
popa
sbb
push
push
inc
add
not
pop
mov
push
rol
sub
pop
pop
push
dec
ror
rol
pop
pop
pop
push
shl
sub
add
pop
pop
leave
ret
push
push
call
add
cli
leave
jno
movb
add
mov
push
into
add
loop
jl
add
fmul
add
add
add
add
add
aad
aad
add
add
jno
add
pop
add
add
incb
pop
add
cld
iret
scas
stc
fidivs
icebp
ja
add
cltd
add
or
add
faddl
int
mov
add
pop
add
mov
lea
pop
push
mov
add
push
not
pop
push
push
lea
push
push
push
push
push
call
pop
movsb
popaw
add
add
add
adcb
jae
shll
add
faddp
add
int
pop
add
test
pusha
xchg
pushf
in
pop
add
mov
add
push
push
testl
imul
add
rcr
fadds
mov
cltd
enter
add
cmpsl
mov
divb
jl
mov
lea
pop
push
push
push
call
xchg
scas
add
add
addb
jp
jns
pop
lcall
loop
mov
clc
add
add
xchg
add
addl
mov
add
scas
jne
xchg
add
mov
add
xchg
test
xchg
mov
add
data16
in
loope
cmpsl
clc
add
add
lods
jmp
iret
add
mov
lea
pop
push
push
rol
pop
push
push
sub
add
pop
movl
push
not
xor
pop
addl
push
push
push
lea
push
push
push
lea
push
call
add
insb
add
gs
mov
sti
xchg
add
xchg
push
mov
add
mov
push
xchg
add
incb
insb
add
add
mov
add
movb
lods
add
add
mov
jp
mov
jp
pop
rcr
jns
jno
add
push
test
sbb
test
je
mov
pop
push
shl
pop
pop
pop
pop
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
push
out
xlat
addb
add
add
add
mov
enter
add
jecxz
sti
xchg
add
ja
in
les
add
add
add
add
add
fyl2xp1
jno
mov
iret
pushf
mov
fcmovbe
add
faddl
jb
add
mov
loop
movsl
add
lea
pop
leave
ret
push
push
push
push
call
add
add
mov
add
add
add
out
int3
movb
ret
add
add
xchg
bnd
add
jns
add
mov
enter
pop
add
add
mov
pop
add
jecxz
add
add
test
sti
add
in
testb
addr16
add
xlat
add
jecxz
add
add
add
int3
lea
pop
mov
push
sub
sub
pop
add
push
push
push
push
call
push
leave
add
add
loopne
xchg
add
mov
in
pop
jl
push
cltd
add
add
add
movl
pushf
sti
jecxz
mov
mov
filds
cltd
push
add
rclb
add
add
scas
push
in
add
lea
mov
add
add
sarl
movsl
add
std
mov
add
add
mov
lea
pop
push
push
push
push
push
push
push
call
jb
add
add
sarb
add
add
js
push
icebp
pop
iret
add
jne
add
in
add
test
add
jae
stos
add
mov
mov
jle
aad
cwtl
add
sahf
add
push
add
jl
add
js
jno
add
add
add
add
xchg
jmp
fsub
enter
add
pushf
mov
add
roll
mov
lea
pop
testl
addl
push
push
rol
pop
call
mov
push
add
xor
sub
rol
pop
pushl
push
not
pop
push
push
push
push
push
push
push
push
push
lea
push
lea
push
push
call
mov
addl
mov
js
add
jbe
add
call
mov
jo
add
add
jl
mov
mov
loopne
ja
aad
jo
jne
add
mov
add
js
add
sahf
add
push
add
loop
add
outsl
arpl
xchg
add
push
loop
fstpt
lea
pop
call
cmpl
jne
push
lea
push
push
push
push
push
call
add
outsl
add
add
add
add
add
push
fldl2t
jmp
loop
fdivrl
lahf
arpl
pop
add
addr16
movl
jbe
lahf
stos
add
add
movb
add
les
add
test
arpl
movsl
imul
push
shr
pop
add
ficompl
add
int3
lea
pop
pop
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
hlt
mov
add
add
add
in
loopne
add
cwtl
hlt
in
lahf
pop
add
imul
addr16
aam
scas
jb
add
fiaddl
call
mov
xchg
cwtl
loopne
add
imul
jb
mov
loope
jle
add
mov
add
mov
mov
push
mov
mov
add
lea
pop
pop
push
sub
pop
pop
push
push
push
push
push
push
lea
push
push
call
xchg
arpl
rolb
fbstp
add
filds
hlt
add
add
add
add
arpl
hlt
imul
lods
pushf
xchg
mov
bound
rol
add
in
jb
fcmovnbe
scas
add
pop
insb
xchg
sahf
int3
add
mov
add
add
pop
add
add
xchg
pusha
add
hlt
push
add
and
leave
push
lea
push
lea
push
push
push
push
push
push
push
push
call
xchg
out
mov
cltd
cli
sarl
jb
movsb
icebp
add
add
add
push
xchg
add
ljmp
add
add
jno
cmpsb
add
add
ret
add
add
in
mov
add
mov
mov
add
jns
jmp
xorb
xchg
jmp
add
cld
addb
nop
add
shrl
bound
pop
ret
push
push
xor
sub
not
pop
mov
push
push
push
call
mov
cmc
add
add
int
add
fucomip
add
add
push
arpl
mov
add
add
add
jne
add
mov
add
add
mov
popf
mov
push
add
add
push
add
xchg
mov
add
fcoml
shlb
add
cmpsl
add
add
std
mov
mov
lea
pop
add
push
not
add
add
pop
push
push
push
push
push
call
scas
add
lahf
popf
jle
fmuls
add
stos
add
add
mov
add
add
stos
add
lods
mov
add
shl
add
cmpsl
stos
mov
xchg
enter
addr16
mov
js
loope
push
int
add
pop
add
add
fsub
mov
lea
pop
push
movl
push
not
pop
push
call
push
lea
push
push
push
push
push
push
push
lea
push
call
add
add
add
add
mov
gs
mov
adc
imul
mov
mov
mov
add
jnp
mov
add
notl
frstor
je
incb
add
ret
sti
push
mov
out
add
sti
add
pop
iret
pushf
add
fsubrl
ja
add
lods
add
add
lea
fs
mov
lea
pop
push
push
lea
rol
inc
pop
call
subl
cmpl
jne
push
lea
push
push
lea
push
push
push
push
call
add
movsl
add
std
add
xchg
int3
test
out
lds
fisubl
xlat
add
add
shr
in
mov
add
add
lods
addr16
cmpsl
lret
lcall
flds
bound
add
add
add
add
test
iret
loop
add
test
add
aad
pop
cmpb
lea
pop
pop
push
push
push
call
mov
fidivl
mov
xchg
test
add
xchg
add
push
add
add
clc
mov
add
clc
add
cmpsl
add
loopne
add
add
lock
sahf
test
push
mov
out
lcall
mov
mov
aad
xchg
int
push
clc
clc
push
lcall
pop
pop
pop
push
push
call
rcrl
xchg
out
mov
aad
icebp
popa
add
lock
iret
mov
popa
jo
add
pushf
addb
out
lods
into
aad
cld
add
addl
add
les
pop
xchg
test
mov
add
add
add
enter
cmpb
mov
mov
out
add
push
ret
in
add
pop
add
mov
aam
bound
pop
leave
push
lea
push
push
push
lea
push
push
push
push
push
push
call
push
pusha
in
pop
jne
pop
add
add
add
pop
push
mov
add
loop
add
add
add
test
add
pop
lahf
fldl
ret
add
add
mov
add
xorl
add
out
sar
mov
add
add
stc
add
rolb
iret
mov
mov
add
mov
lea
pop
ret
push
push
push
push
push
call
add
xchg
loope
call
add
jns
fsubr
add
add
clc
repnz
in
enter
add
add
imul
addl
ret
mov
scas
add
add
add
add
in
xchg
int
add
mov
std
andl
add
jae
push
push
lea
pop
push
mov
push
ror
inc
xor
pop
add
push
add
ror
sub
pop
push
push
lea
pop
push
push
push
sub
lea
shr
pop
push
push
inc
pop
mov
push
push
push
push
call
add
ror
test
testb
std
push
add
add
add
add
in
xlat
mov
jl
add
add
pusha
add
pop
cli
jb
add
insb
js
shl
xchg
cmc
add
jbe
add
add
mov
mov
pushf
add
fadd
add
add
add
add
mov
pop
filds
out
hlt
std
mov
add
scas
add
movsl
mov
xchg
add
mov
lea
pop
lea
sub
push
inc
ror
sub
rol
pop
mov
shr
push
push
lea
push
push
push
call
push
add
lods
loopne
loope
test
mov
mov
xchg
lock
jl
mov
add
add
sar
mov
mov
pop
add
sbb
push
lock
ljmp
xchg
add
sar
call
add
pushf
fwait
mov
sub
add
jmp
data16
add
push
lea
push
push
push
push
push
push
call
add
out
add
add
push
enter
out
add
out
add
sahf
add
in
cli
out
add
mov
jge
add
les
lock
shl
rcr
sarb
add
je
mov
add
add
loope
add
add
bound
pop
add
repnz
pop
stos
add
add
xchg
push
popl
add
add
pushf
add
roll
jno
lret
mov
lea
pop
mov
mov
push
push
push
push
lea
push
push
push
push
push
call
add
jae
std
pop
movl
stos
arpl
clc
mov
loop
imul
add
filds
cld
popa
xchg
sahf
arpl
jb
cmpsb
push
add
add
int3
hlt
jl
add
add
push
add
jmp
in
jle
add
add
xchg
add
add
cld
int3
add
int3
lea
pop
add
push
lea
sub
inc
lea
pop
add
mov
push
add
rol
pop
mov
push
push
push
push
call
xchg
scas
jb
pop
test
xchg
cld
add
movsl
lods
stos
jp
add
mov
cmc
insb
int3
jle
mov
mov
pop
mov
fs
popa
add
xlat
add
out
int3
jmp
jae
flds
add
incb
lods
mov
int3
pushf
add
add
add
mov
mov
cmpsl
into
add
add
mov
add
add
add
mov
add
add
fwait
pushf
xchg
pop
add
pop
cmp
jne
push
push
push
push
push
push
call
add
pop
pop
add
add
loope
add
add
pop
mov
ret
add
les
sahf
add
add
add
add
add
add
jmp
add
lods
jl
fists
jo
push
add
gs
jp
xchg
add
addr16
push
add
movsb
fldenv
jcxz
mov
mov
mov
into
mov
lea
pop
cmp
jne
mov
push
push
lea
push
call
add
add
loope
scas
cmpsb
xchg
add
add
add
push
xchg
add
pop
in
test
add
add
mov
stos
push
hlt
add
lcall
pop
add
add
gs
xchg
add
lock
add
sahf
lds
idivl
jno
add
rolb
fwait
mov
mov
shr
jns
xchg
addl
jbe
add
lock
add
add
jle
ljmp
movl
push
shr
inc
pop
jmp
push
push
call
iret
add
mov
iret
add
jp
pop
add
add
fcmovne
add
add
add
js
fnstsw
xchg
out
add
lret
mov
jae
mov
add
hlt
add
add
push
xchg
add
add
lahf
add
add
add
outsl
xlat
add
add
xchg
pop
mov
push
sub
add
lea
pop
mov
sub
jne
mov
push
push
push
push
push
push
push
push
call
mov
push
loope
lea
add
add
add
rcll
add
test
jl
mov
pop
hlt
scas
add
xchg
mov
add
mov
pusha
jbe
jae
add
stc
cmpsb
cmc
add
add
stos
add
add
add
add
or
mov
jbe
movsl
roll
fidivl
jge
scas
and
sti
jns
pusha
mov
add
pop
movl
jmp
push
push
push
push
push
push
call
test
out
add
mov
in
mov
add
jecxz
shl
andl
out
fimull
add
add
add
add
jbe
mov
mov
pushf
mov
add
add
push
push
int3
bound
add
fiadds
sti
mov
pusha
sbb
inc
cld
mov
cmp
jne
push
push
push
push
push
call
fwait
add
add
mov
pop
ffreep
xchg
add
fmul
add
xchg
mov
addl
push
pop
xchg
cli
add
nop
add
sti
stos
add
popf
push
addl
mov
lret
add
add
shl
add
add
push
jge
in
add
mov
je
xchg
add
cwtl
leave
cwtl
mov
pop
les
mov
lea
pop
mov
push
dec
not
pop
movl
push
push
push
push
push
lea
push
lea
push
call
jnp
cld
stc
mov
gs
add
test
add
xchg
mov
out
mov
add
leave
add
lock
jb
add
data16
add
add
add
add
xchg
into
hlt
xchg
add
lcall
jo
jo
add
push
in
mov
hlt
in
add
mov
cmc
xlat
add
test
jmp
add
lret
mov
lea
pop
jmp
push
shl
pop
mov
push
ror
pop
cmpw
jne
mov
push
pop
movl
jmp
pushl
push
push
push
push
push
push
lea
push
push
lea
push
push
call
lea
std
sti
add
sti
add
rcrl
lock
mov
push
add
add
movsb
push
out
add
leave
imul
les
push
imul
movl
fildl
add
into
xchg
insb
fwait
js
sbbl
in
cwtl
mov
stos
add
lret
repnz
mov
add
add
jle
add
add
push
out
add
lea
pop
pop
mov
push
push
push
push
push
lea
push
call
add
cld
push
add
add
jmp
push
push
stos
movsl
add
lods
insb
add
cld
pop
hlt
add
out
movsb
lods
in
les
icebp
add
push
add
test
push
add
int
mov
mov
mov
jmp
add
add
jne
mov
lea
pop
mov
mov
push
push
push
or
inc
add
add
sub
dec
pop
add
dec
pop
push
add
ror
pop
push
call
push
push
push
call
add
add
mov
fbld
add
add
rcr
nop
add
ljmp
add
add
push
add
add
fxch
jns
cld
mov
gs
push
popf
add
push
add
leave
cwtl
pusha
cli
mov
stc
outsl
add
jp
add
outsl
add
mov
fmull
pop
cmpl
je
push
push
inc
shl
dec
push
or
inc
add
shr
sub
ror
not
add
pop
shr
lea
lea
pop
push
lea
push
push
push
call
add
add
add
aam
mov
int3
mov
out
push
jnp
add
pop
add
rolb
add
imul
mov
out
push
add
add
add
lods
sahf
jne
add
add
add
in
xchg
add
mov
int3
bound
pushf
xchg
cltd
je
cwtl
mov
xlat
mov
mov
mov
aam
bound
pop
push
push
inc
shr
inc
pop
call
push
ror
pop
cmpl
je
push
push
add
sub
push
push
pop
add
inc
sub
add
shr
inc
pop
shr
pop
push
shl
pop
push
push
sub
sub
pop
call
cmpl
je
push
push
xor
add
push
or
not
add
xor
not
add
lea
sub
sub
shr
pop
add
shr
pop
push
lea
push
push
push
lea
push
push
call
add
gs
xchg
out
stos
add
add
add
movsb
clc
loope
pop
sti
add
jecxz
pop
nop
add
mov
cwtd
add
addl
add
les
fiaddl
add
push
pushf
xchg
jns
jb
loopne
add
add
jne
addr16
xlat
add
loopne
stc
clc
pusha
add
mov
pusha
sbb
push
push
call
loop
xchg
jp
add
add
add
add
cwtl
mov
cld
sahf
xchg
mov
add
pop
xchg
add
add
jo
out
jge
add
nop
hlt
add
add
movsl
add
add
ja
push
loope
add
add
add
outsl
add
pop
imul
add
add
add
int
call
add
add
mov
add
pop
call
push
lea
pop
cmpl
je
push
push
add
dec
shl
push
sub
add
ror
add
not
sub
shr
add
pop
shr
pop
push
push
inc
rol
add
lea
pop
call
cmpl
je
push
push
sub
shr
push
xor
add
add
sub
xor
pop
lea
add
xor
pop
push
shl
xor
xor
pop
push
push
lea
push
push
push
lea
push
call
pop
push
push
add
in
loope
add
add
add
add
add
popf
mov
lea
iret
stc
les
add
test
mov
lock
add
push
mov
add
add
lret
add
andl
mov
sahf
pop
pop
arpl
out
aad
add
add
sti
rol
add
fs
lea
pop
call
push
push
push
lea
push
push
push
call
jb
cli
add
cmc
rolb
add
add
add
add
add
lret
jp
lahf
add
push
fucom
push
xchg
cmpsl
add
mov
outsl
mov
add
arpl
add
mov
bound
jbe
lods
loopne
fiadds
add
push
add
mov
lods
fwait
mov
add
nop
lahf
add
fildl
xchg
add
stos
add
xlat
add
add
mov
lea
pop
cmpl
je
push
push
xor
sub
inc
sub
push
or
not
add
add
sub
add
shl
pop
inc
pop
push
dec
shr
xor
pop
push
push
pop
call
cmpl
je
push
push
shr
push
or
not
add
sub
sub
ror
not
sub
add
not
not
pop
shr
not
ror
sub
pop
push
lea
sub
shl
lea
pop
push
push
dec
ror
xor
pop
call
push
push
lea
push
push
push
push
lea
push
call
push
add
xlat
mov
add
xchg
outsl
stos
add
add
add
andb
push
add
mov
std
jp
xchg
add
fyl2x
pushf
mov
lods
add
add
add
add
mov
lods
add
mov
lods
cltd
add
mov
xchg
nop
mov
lea
pop
cmpl
je
push
push
xor
shl
inc
lea
push
xor
add
shr
shr
sub
sub
pop
ror
rol
pop
push
push
push
push
push
call
add
mov
fwait
test
out
add
add
pop
add
push
jns
xchg
add
add
add
testb
out
pop
div
mov
mov
nop
mov
add
stos
add
add
nop
stos
in
scas
lods
push
add
test
mov
mov
add
add
add
add
add
addr16
push
push
push
call
add
add
mov
add
std
fcomi
jmp
stos
testb
pop
add
out
pop
les
add
add
mov
add
pop
add
call
je
mov
pop
shl
nop
xchg
add
scas
add
loop
add
je
mov
call
lock
lret
les
add
mov
lea
pop
call
push
dec
add
shr
not
pop
cmpl
je
push
push
sub
not
push
or
not
add
shr
sub
sub
sub
shr
shr
shl
pop
sub
add
not
pop
push
push
add
xor
xor
not
pop
call
cmpl
je
push
push
push
and
add
rol
add
sub
shr
lea
pop
shr
pop
push
shr
xor
lea
shr
pop
push
push
ror
pop
call
push
dec
rol
pop
cmpl
je
push
push
sub
push
or
not
add
shl
sub
shr
add
pop
lea
pop
push
push
lea
push
push
push
call
testl
lret
add
cwtl
add
scas
nop
cmpsb
add
add
add
mov
add
add
add
enter
add
test
mov
mov
jnp
mov
add
cld
pop
ficomps
add
xchg
jne
add
fs
shll
pop
jo
imul
std
xlat
sub
add
add
mov
lea
pop
push
call
push
sub
shr
xor
pop
cmpl
je
push
push
shl
add
push
push
pop
add
inc
sub
shl
shr
not
pop
add
pop
push
not
lea
pop
push
call
push
lea
xor
add
pop
cmpl
jne
mov
push
sub
pop
movl
jmp
push
dec
not
pop
xor
push
push
lea
push
push
push
push
push
push
call
xchg
mov
add
cwtl
pop
add
in
xchg
add
scas
push
imul
jbe
push
add
add
mov
mov
mov
add
mov
add
add
add
mov
xchg
int3
add
mov
lcall
lcall
mov
pusha
ja
insb
jno
mov
lea
pop
pop
pop
pop
push
push
push
push
push
push
push
lea
push
call
add
mov
add
push
mov
ljmp
add
ljmp
mov
add
in
add
jbe
add
add
add
mov
jmp
add
pop
fwait
lahf
add
add
jno
js
add
test
add
add
add
cld
add
pop
add
mov
lea
pop
pop
push
xor
sub
pop
leave
push
push
push
push
push
lea
push
push
push
call
gs
stos
cli
add
add
je
jge
ja
imul
fsub
add
aam
jmp
add
jge
add
mov
mov
shl
int
push
add
xchg
add
fdivl
add
jo
mov
pop
add
add
add
mov
movsb
loopne
jbe
leave
push
test
fstps
ljmp
lock
xchg
jmp
mov
mov
mov
lea
pop
ret
push
mov
push
push
lea
push
push
lea
push
call
add
into
add
mov
add
push
lods
jo
jmp
movsl
add
stos
add
pusha
xchg
xlat
add
mov
jp
mov
pop
add
rclb
add
test
add
cmpsl
add
add
loop
rolb
stos
cli
test
jno
imul
rcr
xchg
add
add
add
mov
add
add
xchg
xchg
out
xchg
add
test
je
mov
lea
pop
add
push
sub
add
pop
cmpl
jne
push
push
not
shl
push
push
pop
add
not
ror
sub
add
pop
shr
sub
xor
pop
push
push
push
push
lea
push
push
push
push
push
call
add
add
add
xchg
add
les
jmp
mov
in
jle
add
jne
mov
xchg
add
add
add
cmc
add
add
lds
jns
add
ljmp
jp
scas
iret
in
add
lods
scas
add
add
ret
add
subb
add
shll
ret
add
scas
mov
lea
pop
pushl
call
push
push
add
lea
dec
pop
call
push
add
pop
jmp
cmpl
je
push
push
push
push
push
push
push
call
add
add
jno
icebp
add
add
add
xchg
mov
add
popa
add
add
add
add
in
iret
add
pop
in
add
pop
add
add
scas
add
incb
push
outsl
pop
add
add
subl
jae
add
add
add
je
add
hlt
lea
pop
cmpl
jne
push
shl
pop
leave
add
pop
push
inc
ror
pop
pop
push
push
push
lea
push
push
push
push
lea
push
push
call
pop
repnz
popa
mov
add
xchg
cwtl
push
aam
add
jmp
add
nop
sbbb
jo
fucom
add
test
fldl
lds
add
mov
mov
add
loope
ljmp
std
add
test
pusha
add
mov
mov
lea
pop
pop
push
pop
pop
push
push
push
call
fwait
mov
add
sarl
add
add
std
mov
mov
add
add
cmpsb
pop
lcall
cmc
pop
fadds
outsl
jns
lods
mov
add
clc
roll
add
add
add
add
rol
mov
addl
add
movl
add
pop
mov
lea
pop
leave
push
push
push
push
push
push
push
call
lea
mov
add
add
fwait
rolb
fwait
add
std
mov
mov
add
add
add
add
pop
bound
addl
rclb
cld
push
add
gs
roll
add
into
push
add
add
enter
mov
stos
mov
xchg
mov
add
add
jp
add
jnp
add
pop
bound
in
add
xchg
add
pop
add
ret
jmp
push
push
push
lea
push
push
push
lea
push
push
call
add
add
jle
add
mov
xchg
sti
fisubl
xchg
pop
mov
add
add
add
into
lds
add
mov
mov
push
add
loop
sarl
add
jmp
jp
pop
mov
test
add
stc
add
clc
add
jns
lods
stos
test
push
add
xchg
enter
mov
lea
pop
cmpl
jne
push
push
lea
sub
dec
sub
push
sub
add
add
sub
dec
lea
pop
xor
pop
push
shr
pop
pushl
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
lea
push
call
roll
fadds
add
sahf
jae
mov
jl
add
out
js
add
add
subb
add
fiadds
push
lods
add
xchg
add
add
icebp
add
aad
jo
movb
add
add
stos
add
add
add
mov
rcrl
xchg
pop
push
pushf
popf
mov
aad
out
add
add
add
add
add
pop
call
push
push
push
push
push
push
push
push
push
call
add
fwait
mov
add
fsts
bound
ljmp
sarb
xchg
mov
add
mov
add
test
jl
notl
fnstsw
add
cld
arpl
call
add
idivb
mov
pusha
jns
mov
incb
jo
cld
mov
xchg
add
cmpsb
add
popa
add
rolb
push
cwtl
add
mov
cltd
add
pop
push
push
shl
shl
dec
pop
call
jmp
push
ror
pop
cmpl
jne
mov
mov
push
push
push
call
add
faddl
mov
xchg
xchg
lea
stos
nop
lcall
add
add
add
fiadds
add
add
mov
xchg
ret
add
cmpsb
fs
cmpsb
jbe
jae
mov
arpl
add
ja
add
into
add
add
add
pop
call
push
push
push
dec
add
shl
push
push
pop
add
not
lea
sub
ror
pop
add
dec
pop
push
push
push
push
call
add
shll
add
int3
loopne
mov
add
add
add
flds
mov
mov
add
add
cwtl
add
add
scas
mov
add
out
mov
add
faddl
loope
mov
fwait
add
in
addr16
addr16
decb
icebp
je
jp
add
add
add
add
popa
adc
jne
call
push
push
dec
pop
call
push
push
add
inc
lea
push
push
pop
add
ror
sub
inc
sub
add
ror
pop
ror
pop
push
xor
pop
pushl
call
push
lea
push
push
push
push
push
call
add
pop
out
mov
push
xchg
push
add
jb
add
hlt
loope
mov
in
add
add
shlb
add
mov
nop
outsl
add
int3
add
aam
lods
stc
add
pop
out
add
push
rcl
lock
call
add
arpl
add
jl
jl
add
fwait
add
push
popf
arpl
pop
add
add
mov
popa
sbb
shrb
pop
rorl
loopne
push
or
inc
add
sub
pop
not
sub
pop
push
push
push
call
lret
sahf
mov
addb
push
mov
outsl
jo
data16
push
jle
add
add
addl
stos
js
add
out
fucomp
xchg
add
out
stos
add
jo
add
divl
add
mov
add
add
add
add
add
sahf
cwtl
iret
lret
movsb
add
mov
lea
pop
pushl
push
dec
xor
pop
call
push
lea
add
pop
call
push
push
push
push
lea
push
lea
push
push
push
call
add
mov
add
push
enter
into
xchg
add
mov
add
jae
mov
scas
cmpsb
jmp
lcall
xchg
add
push
aam
mov
add
add
lret
iret
iret
add
add
mov
pop
std
int3
fs
ljmp
add
mov
mov
addl
nop
mov
lea
pop
lea
push
push
inc
push
push
pop
add
shl
lea
sub
shr
not
pop
shr
shr
not
pop
push
lea
push
lea
push
push
lea
push
push
push
lea
push
push
call
pop
add
std
add
jmp
cli
jl
add
jo
push
add
add
add
pop
add
xchg
mov
cltd
test
add
sti
sub
add
xchg
add
in
les
test
mov
add
ljmp
mov
add
arpl
pushl
call
push
push
add
pop
call
push
push
lea
inc
shl
push
sub
add
rol
add
sub
add
lea
sub
sub
pop
ror
inc
ror
pop
push
ror
shr
add
not
pop
pushl
push
sub
shr
xor
pop
call
call
push
lea
push
push
push
push
call
rcll
xchg
iret
add
mov
imul
xchg
mov
xchg
cmpsb
mov
add
call
popf
jmp
add
add
add
addr16
popf
iret
pop
add
add
ficomps
rolb
add
jae
testb
out
add
movsb
add
in
add
add
add
fistps
call
addr16
mov
push
push
sub
lea
dec
sub
push
and
add
not
sub
rol
sub
rol
xor
shr
pop
sub
rol
sub
pop
pushl
push
push
push
push
push
push
push
lea
push
call
add
addr16
mov
add
add
jbe
xchg
xchg
fnsave
add
push
add
fiadds
mov
add
into
jns
out
add
xchg
add
add
arpl
add
test
add
add
icebp
fadds
mov
std
add
mov
add
popa
add
add
scas
mov
scas
add
mov
lea
pop
call
push
ror
pop
push
push
push
push
push
lea
push
lea
push
push
push
call
add
add
add
add
xlat
imul
pusha
mov
add
mov
add
mov
mov
add
add
mov
pop
add
jmp
mov
add
add
pushf
cmc
add
cmc
lret
scas
add
ljmp
add
and
shrb
ret
xor
push
ror
ror
shl
push
or
inc
add
lea
sub
dec
pop
sub
pop
pushl
push
not
inc
sub
pop
call
push
push
not
pop
pushl
call
push
push
dec
not
sub
push
or
not
add
not
sub
shl
dec
add
pop
dec
pop
push
shl
pop
pushl
push
sub
pop
call
push
push
xor
push
push
pop
add
sub
shr
lea
sub
sub
lea
xor
ror
pop
xor
pop
push
push
inc
add
inc
xor
push
xor
add
lea
xor
sub
not
pop
sub
dec
xor
pop
push
push
push
push
lea
push
lea
push
call
add
add
test
lods
testb
in
iret
add
icebp
data16
movsb
add
lcall
xchg
add
add
push
mov
add
nop
add
jecxz
addb
scas
mov
andl
iret
mov
lea
jne
std
imul
bound
pop
call
pop
push
inc
ror
xor
rol
pop
dec
jne
push
push
push
push
push
push
call
mov
jo
add
xchg
add
cwtl
cmpsb
add
add
flds
xchg
push
push
movsl
add
rol
add
xchg
jecxz
in
arpl
add
mov
mov
pop
lahf
mov
mov
mov
push
add
add
and
cmc
lea
push
in
int3
jl
push
rol
int3
push
add
arpl
ret
jmp
lret
test
add
add
push
mov
lea
pop
call
push
push
push
push
push
push
call
mov
jbe
leave
push
bound
add
mov
pop
roll
addr16
lret
add
ja
add
iret
cli
dec
notb
push
cwtl
js
popa
mov
add
mov
flds
add
add
add
imul
pusha
out
out
add
jns
add
mov
cld
xchg
add
add
add
push
add
add
rolb
add
clc
jnp
add
cwtl
mov
cld
lea
pop
jmp
push
push
push
push
push
push
push
call
add
lods
test
in
nop
hlt
add
jmp
push
add
lock
movsl
loopne
rcr
add
popa
add
lods
add
mov
imul
add
pop
add
pop
add
in
add
int3
sahf
out
arpl
lds
je
add
push
add
add
ljmp
fiadds
fisttpl
jmp
add
mov
loop
int3
xchg
add
int3
nop
mov
lea
pop
call
push
push
lea
push
or
not
add
shr
inc
add
shl
sub
dec
sub
dec
pop
rol
ror
pop
push
ror
pop
pushl
call
push
push
push
push
push
push
push
push
push
push
push
call
js
add
add
test
in
flds
add
jne
mov
jmp
pop
sahf
add
mov
add
rolb
nop
add
aad
jecxz
add
incb
cltd
add
rolb
jle
add
add
add
repnz
add
lods
ret
add
add
mov
pop
add
pop
sti
push
rolb
scas
gs
add
fmulp
fadds
add
int3
lea
pop
call
push
shr
add
sub
pop
mov
push
lea
push
push
push
push
push
call
cltd
jne
add
cld
add
add
rolb
add
add
add
in
xchg
add
mov
add
jns
roll
add
add
jnp
arpl
add
pop
test
add
add
jno
jmp
add
add
mov
xchg
mov
jb
add
add
add
mov
add
fldl
lods
call
add
rol
pusha
xchg
xchg
fmull
pop
lea
push
push
dec
push
push
pop
add
xor
sub
dec
ror
lea
add
pop
xor
pop
push
push
call
pop
add
add
add
arpl
nop
add
lods
mov
add
add
add
mov
push
add
jo
add
lea
add
testl
jecxz
add
add
mov
push
int
addr16
add
add
mov
fiadds
mov
add
add
jmp
mov
mov
popa
int3
nop
add
or
jne
push
lea
add
pop
call
push
call
push
push
sub
shl
push
push
pop
add
ror
lea
sub
shr
pop
add
sub
pop
push
dec
ror
pop
pushl
push
shr
rol
dec
pop
call
push
push
lea
push
push
push
call
nop
add
add
add
mov
hlt
jo
add
cmp
cld
icebp
stos
mov
xchg
add
insb
stc
addb
add
in
add
js
add
mov
pop
pushf
add
xlat
lds
sti
push
mov
add
add
jno
add
add
fldt
cmpsl
aad
add
add
xchg
rolb
add
roll
mov
lea
pop
call
push
add
shl
sub
pop
mov
lea
push
push
dec
sub
shl
sub
push
or
not
add
shl
sub
sub
pop
shr
pop
push
push
lea
push
push
push
call
add
add
cli
les
lods
add
pop
mov
pop
add
int
add
add
cmc
test
int3
add
ret
add
pop
add
add
pop
add
add
lret
add
xchg
jae
loopne
mov
mov
add
add
hlt
clc
add
sarl
mov
xchg
bound
lods
stc
mov
mov
lea
pop
pushl
push
shl
lea
add
pop
call
push
dec
sub
xor
pop
lea
push
push
pop
push
push
push
add
inc
xor
shl
pop
pushl
push
push
shl
add
ror
push
xor
add
rol
sub
ror
add
shr
lea
pop
sub
inc
pop
push
lea
push
push
lea
push
push
lea
push
lea
push
call
add
add
add
clc
add
out
xchg
add
add
andl
jne
movsl
mov
cmpsl
mov
pop
fadds
int3
add
popf
in
lock
add
add
outsl
add
add
lret
add
mov
add
pop
aad
push
arpl
add
js
jb
add
clc
add
cwtl
add
les
call
push
push
not
xor
push
or
not
add
shr
sub
pop
inc
pop
push
push
push
lea
push
call
adc
stos
outsl
lods
lods
out
callw
movsl
add
add
rolb
add
clc
add
andl
add
out
hlt
add
add
add
pop
fcmove
add
add
pop
je
jb
add
add
add
add
add
nop
mov
add
add
imul
orb
jb
mov
lea
pop
pushl
call
push
push
push
lea
push
lea
push
push
call
rcll
mov
add
add
add
iret
add
mov
add
cltd
jle
pop
imul
in
add
int3
jae
add
add
loope
add
add
xchg
cmpsl
push
push
pop
mov
lea
add
add
add
xchg
fstps
lret
faddl
xchg
clc
mov
lea
pop
call
push
push
rol
lea
lea
lea
push
and
add
shl
xor
sub
sub
pop
rol
pop
pushl
push
push
call
push
pop
shlb
add
xchg
jge
cwtl
add
lods
fmul
add
fsubr
cli
mov
add
add
pop
push
jge
sti
add
arpl
add
cli
add
add
mov
add
divl
ja
add
add
int3
int
scas
jmp
out
add
push
mov
mov
or
rclb
push
push
lea
push
call
add
ljmp
push
push
mov
stos
lods
push
xchg
add
movsb
out
insb
mov
add
xor
mov
rcll
mov
loopne
aad
add
add
lods
pop
mov
push
push
mov
andl
add
add
stc
add
jbe
mov
lea
pop
jmp
push
push
push
push
push
lea
push
push
push
push
call
les
add
add
mov
add
jmp
jbe
add
pop
add
pusha
in
add
xchg
add
in
add
je
add
add
add
out
xlat
add
jne
add
lods
roll
add
out
add
scas
xchg
loopne
add
mov
movsb
add
add
mov
cmpsl
mov
push
aam
add
popa
clc
add
add
mov
lea
pop
pushl
mov
push
push
call
add
push
push
hlt
add
add
xchg
mov
add
add
rcll
divl
pushf
add
add
mov
add
add
jnp
push
add
gs
add
testl
and
add
imul
add
mov
data16
outsl
enter
push
pushf
mov
sarl
add
add
add
imul
jae
add
orb
pop
jmp
push
push
rol
dec
ror
rol
push
or
not
add
add
sub
pop
not
dec
add
pop
pushl
push
push
push
lea
push
push
push
call
add
shl
add
add
fsubs
add
push
mov
add
jmp
cltd
je
loope
add
cwtl
fldl
aam
add
stc
push
js
add
add
fbstp
into
add
addl
jne
pop
add
out
add
loope
fldl
add
icebp
mov
cmpsb
ljmp
add
mov
add
enter
add
pop
add
add
popa
sbb
xor
add
push
push
lea
push
push
lea
push
push
push
call
fsubs
in
lret
popa
add
mov
movsb
mov
addb
add
add
add
out
std
add
imul
imul
popf
jno
insb
clc
mov
add
sahf
cmpsl
mov
jp
add
test
cltd
addb
mov
add
add
lds
add
int3
in
push
add
add
add
sbb
shrb
scas
ud0
ret
outsl
push
push
or
inc
add
add
sub
add
pop
sub
ror
pop
pushl
push
push
lea
push
lea
push
lea
push
push
call
push
lret
add
mov
add
add
add
test
pop
fcoml
add
addr16
std
lods
add
aad
push
loope
jne
fstps
add
add
add
add
lock
out
fdivs
add
mov
xchg
rcrb
scas
add
xchg
cmpsl
loopne
notb
addl
mov
lea
pop
call
push
push
push
push
push
push
push
push
push
call
xchg
lahf
pusha
mov
test
add
popl
add
add
std
fwait
call
shlb
ret
pop
arpl
add
into
add
add
jecxz
add
mov
hlt
cmc
add
add
scas
mov
add
add
mov
xchg
stos
mov
add
add
add
add
and
push
call
leave
push
inc
shl
pop
add
pop
pop
push
lea
lea
ror
pop
pop
push
push
lea
push
push
push
push
lea
push
call
push
ljmp
add
data16
mov
popa
jb
add
jecxz
add
jle
add
addb
fldl
lcall
add
out
test
add
add
add
add
mov
hlt
mov
addl
add
cmpl
pop
aad
stc
cli
add
mov
add
add
add
pop
pop
leave
push
shl
pop
add
ret
leave
push
lea
push
push
push
push
push
push
lea
push
call
add
add
ljmp
mov
add
add
test
faddl
xchg
popa
lods
jge
cld
add
add
add
mov
add
push
add
addb
add
pop
add
xchg
imul
mov
loope
gs
mov
loop
add
add
pop
out
xchg
repnz
add
test
and
or
push
shl
pop
push
mov
push
pop
cmpl
jne
mov
push
ror
inc
pop
jmp
mov
and
push
lea
add
pop
xor
push
push
push
push
push
lea
push
push
push
lea
push
call
mov
add
add
out
add
movb
add
jnp
mov
add
je
jge
mov
xchg
stos
push
je
add
subl
stc
push
pop
add
add
popf
cld
add
rolb
pop
add
mov
add
hlt
add
xchg
add
add
ljmp
push
add
add
add
mov
and
xor
push
push
push
push
lea
push
push
call
int
add
pop
out
jo
je
add
mov
movsb
push
test
rolb
lds
add
in
arpl
cmpsb
fwait
add
mov
lods
push
add
mov
add
add
mov
popa
add
jo
add
popa
pusha
add
aad
sarl
mov
add
mov
bound
pop
add
xor
push
rol
not
pop
dec
push
ror
shr
pop
sub
push
push
push
lea
push
push
push
lea
push
call
test
sahf
add
add
add
loop
add
subl
mov
add
andb
in
mov
add
push
mov
scas
pushf
add
aad
add
js
add
add
xchg
add
mov
add
call
add
add
push
cli
add
add
add
pop
jmp
push
push
push
push
push
push
call
mov
in
movb
jb
xchg
pop
mov
lret
add
ret
iret
add
jb
js
xchg
mull
into
lock
pop
add
mov
pop
mov
pop
movsl
stos
add
add
imul
add
push
add
add
ja
sub
test
add
out
pop
jmp
popa
add
ljmp
sub
push
xor
pop
pushl
push
push
push
push
push
push
push
call
add
add
add
fwait
out
ljmp
in
mov
leave
or
sahf
add
add
add
add
scas
add
fs
fiadds
mov
addr16
hlt
icebp
add
xchg
fadds
les
jmp
pop
add
mov
cltd
add
arpl
movsl
mov
jmp
adc
add
push
pusha
add
add
into
jne
addl
xchg
add
add
add
add
sbb
pop
sub
push
push
push
push
push
push
push
call
add
icebp
add
sti
lods
jno
mov
test
push
repnz
lret
add
rolb
fwait
add
sti
fiaddl
add
lock
xchg
out
add
ljmp
add
lcall
mov
fadds
mov
insb
popa
add
add
mov
cltd
pop
add
add
nop
cmpsl
add
sarb
add
add
cld
lea
pop
cmp
jne
push
push
lea
push
lea
push
call
add
add
xchg
push
addr16
jne
push
add
stos
mov
fdivl
test
add
andl
movsb
add
push
lods
add
add
add
mov
insb
mov
add
add
mov
add
movsb
add
addl
enter
add
lahf
call
mov
add
int
movsl
fmuls
pop
mov
push
push
call
stc
shll
lret
jb
add
add
add
in
jne
add
push
scas
sahf
mov
arpl
add
add
add
imul
jno
xchg
je
xchg
add
push
jge
add
add
cld
mov
add
add
add
pop
add
add
mov
lea
pop
cli
in
mov
fmull
dec
cmp
jmp
lea
push
push
lea
push
lea
push
push
push
push
push
call
fabs
in
add
add
add
data16
lret
push
pop
add
out
add
mov
pop
rcrl
div
mov
mov
add
int
iret
jne
imul
add
popa
push
xchg
mov
lea
pop
loopne
add
mov
add
add
pusha
and
shr
push
sub
add
pop
add
push
lea
push
call
movsb
add
push
cli
add
pop
into
pop
sahf
add
mov
add
add
mov
fs
push
add
add
mov
add
aad
add
add
roll
add
mov
add
pop
add
jae
mov
cltd
xchg
xchg
xchg
jge
fildl
fwait
stos
add
sarl
add
out
add
add
add
push
push
add
add
add
pop
sub
pushl
pop
push
not
lea
inc
pop
shr
push
sub
pop
and
sub
cmp
jne
push
rol
pop
leave
push
lea
inc
sub
sub
pop
ret
push
mov
push
push
call
scas
add
repnz
jp
add
jbe
push
out
hlt
add
into
popf
add
push
in
xchg
arpl
roll
jne
in
add
add
add
fiaddl
outsl
add
fiadds
stc
repnz
mov
out
int
lret
pop
aam
add
addl
add
add
or
cld
push
sub
ror
sub
pop
push
push
push
call
add
add
add
add
push
mov
pop
add
xlat
mov
mov
push
cmpsb
xchg
cli
pop
call
add
push
outsl
add
add
jl
add
add
shll
add
add
add
add
ljmp
add
mov
stc
add
add
mov
hlt
lea
pop
push
push
push
push
lea
push
push
push
call
fadds
pop
add
std
data16
mov
lods
pop
jno
movsb
add
filds
stos
jge
add
xchg
clc
xchg
push
add
mov
add
add
mov
mov
xchg
divb
add
add
add
push
xlat
xchg
mov
add
add
loope
js
add
lds
add
test
mull
ljmp
add
pop
push
push
push
lea
push
lea
push
call
lcall
add
imul
add
xchg
sti
mov
add
mov
lds
add
add
fistpll
add
push
call
pop
int
add
add
mov
ja
mov
jle
add
mov
add
jl
add
out
push
add
push
movsb
mov
add
add
imul
jo
xchg
xlat
mov
mov
lea
pop
mov
lea
sub
push
ror
pop
mov
push
shl
sub
lea
pop
shr
push
lea
push
push
push
lea
push
push
push
call
push
lods
add
in
add
fists
mov
pop
cltd
cmp
out
add
add
mov
add
call
pusha
iret
add
add
add
scas
add
mov
sti
xchg
mov
test
test
arpl
push
movsl
add
add
mov
jo
repnz
std
pusha
mov
lea
pop
add
push
ror
pop
mov
add
mov
push
xor
not
pop
add
xor
mov
push
lea
xor
not
pop
and
call
push
push
push
push
push
lea
push
push
push
lea
push
call
pop
jge
fcomp
add
movsl
push
loopne
add
popa
add
leave
cld
xlat
add
aam
lods
jb
add
pop
cwtl
jbe
testb
add
add
sbb
int3
movsb
test
pop
jns
je
add
jge
add
add
add
add
add
add
add
add
add
add
xchg
mov
lea
pop
add
push
push
push
push
push
call
out
mov
shr
test
lock
test
add
mov
shll
mov
add
push
add
add
jp
jle
add
insb
add
add
push
mov
push
add
enter
mov
movsl
lds
int3
add
xchg
bound
ljmp
xchg
add
mov
popa
adc
cmp
je
add
cmpl
jne
push
lea
push
push
push
push
call
mov
add
push
add
add
loope
hlt
add
in
push
rcr
add
add
xchg
fistpl
mov
mov
add
fcomp
mov
add
pop
add
add
aad
cltd
add
xchg
add
add
pop
add
lods
shlb
mov
rcrl
jmp
loope
jmp
sahf
add
add
pop
xor
push
push
push
push
lea
push
push
push
push
push
call
pop
mov
lods
sahf
xorb
add
push
add
in
cltd
test
add
add
movsl
add
add
out
xchg
pop
xlat
jle
ficompl
pop
imul
jp
add
fiadds
roll
andb
add
add
loope
repnz
pop
jno
loop
add
push
mov
lea
pop
pop
push
dec
sub
pop
pop
push
sub
shl
pop
pop
push
lea
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
stos
jmp
mov
lods
add
sahf
int
add
mov
aad
lahf
mov
add
add
mov
add
leave
pushf
addb
pop
jle
mov
ror
mov
xchg
push
lods
add
xchg
jge
fsts
add
pop
mov
fadds
movsl
mov
roll
popf
cld
lds
loope
cld
cld
in
push
push
add
in
add
add
arpl
pop
pop
pop
leave
push
push
push
push
lea
push
lea
push
push
call
push
add
add
xchg
add
add
ffree
aam
lock
leave
add
mov
add
shll
add
data16
add
sti
loop
fs
sti
add
add
add
push
cmpsb
add
add
sti
into
stos
int
add
add
jecxz
add
add
int3
lea
pop
ret
mov
add
push
push
lea
push
push
call
push
cmc
test
xchg
stc
sahf
pop
mov
jo
add
outsl
pop
add
ret
add
mov
imul
imul
add
mov
add
test
loope
add
add
add
lock
add
add
cltd
pop
add
je
mov
add
icebp
jmp
mov
add
lea
add
xchg
loop
mov
lea
pop
push
push
pop
push
push
push
lea
push
push
call
add
jnp
ja
cmpsb
add
add
xchg
add
add
pop
cmpsl
mov
pop
add
mov
add
add
lahf
add
add
add
jmp
xchg
hlt
loop
roll
sti
pop
add
add
add
add
add
mov
sti
xchg
add
insb
push
jne
stc
icebp
mov
add
jo
add
lea
pop
pop
push
xor
add
pop
mov
push
dec
pop
push
push
shl
shl
dec
lea
pop
call
xor
pop
push
lea
push
push
call
add
xchg
add
sub
clc
hlt
stos
les
or
fisubrl
lret
bound
add
add
add
add
jl
add
mov
jne
mov
xchg
xchg
cwtl
into
add
add
add
stc
add
add
add
cld
mov
add
pop
pop
pop
push
push
push
push
push
push
push
push
push
call
mov
xlat
test
add
pop
mov
in
fldenv
cmpsl
mov
xlat
adcb
fwait
add
cli
add
out
mov
add
add
icebp
cld
mov
fwait
add
movsb
add
movsb
mov
mov
shll
enter
add
xchg
adcb
xchg
mov
fildl
mov
add
jge
fidivrl
je
mov
lea
pop
pop
push
push
push
push
push
push
push
call
jge
add
add
add
add
add
mov
addl
mov
andb
push
add
ljmp
add
rolb
int
stos
push
pop
lods
add
add
mov
add
testb
test
in
jns
aam
add
lret
xchg
push
mov
lea
pop
pop
push
ror
inc
pop
leave
ret
push
dec
shr
pop
push
mov
add
push
push
lea
push
call
into
ljmp
add
ljmp
xchg
arpl
jno
xchg
cmp
add
mov
movsb
mov
push
out
jbe
add
jne
push
enter
rcrl
add
repnz
add
pop
mov
add
mov
mov
pop
add
xlat
push
add
add
imul
mov
call
add
mov
lea
pop
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
add
lret
pop
fiaddl
add
leave
add
jp
fistps
subl
pushf
mov
movsl
test
jb
mov
lds
add
jo
add
sahf
add
add
jbe
add
pop
add
lock
xchg
aam
mov
add
popa
and
push
add
rol
pop
push
push
mov
push
push
push
lea
push
push
push
push
push
push
call
jp
mov
rolb
movsl
jnp
add
lcall
js
add
ja
pushf
cmpsl
clc
pop
call
stos
stos
mov
add
pop
lret
add
hlt
lods
mov
sti
add
repnz
jle
out
iret
add
ja
add
add
add
add
sahf
movb
xchg
je
fildl
add
mov
in
add
add
add
aam
bound
push
pop
push
pop
lea
push
lea
push
push
push
push
push
push
push
push
call
add
testb
add
xchg
out
mov
sti
lahf
stos
add
repnz
add
out
bound
push
enter
push
stc
test
xchg
mov
add
fstps
add
pop
add
fidivrs
push
add
jge
xor
lea
push
fildl
jmp
pop
add
push
xorb
jns
pop
test
add
lahf
xchg
leave
add
add
jo
add
fildl
lret
movsb
leave
mov
mov
lea
pop
sub
push
push
push
push
lea
push
push
push
call
int
add
push
mov
test
jmp
mov
mov
add
in
int
add
incb
in
adcb
add
add
add
lock
scas
xchg
add
int
add
add
stos
loop
add
push
pop
addb
int3
outsl
add
ja
add
add
add
rcl
add
mov
pop
mov
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
push
test
leave
add
mov
push
add
add
mov
add
int
mov
mov
add
in
mov
test
add
roll
add
fcom
add
jmp
add
rolb
or
add
int3
arpl
add
sti
fildll
jno
pop
out
add
sub
ljmp
inc
pop
mov
push
push
lea
push
call
outsl
out
loopne
mov
add
add
lock
out
cmc
mov
mov
add
add
lock
add
pusha
add
fiaddl
xchg
add
add
lahf
repnz
push
add
int
fnstsw
lock
add
add
xchg
jo
add
add
jb
mov
in
add
mov
lea
pop
add
pushl
popl
push
add
ror
add
pop
mov
add
push
push
push
push
call
mov
cmpsb
jge
mov
movb
mov
pushf
pop
mulb
add
add
add
add
aam
popf
add
cld
add
shrb
jge
jecxz
cmpsl
bound
mov
popl
mov
mov
add
add
pusha
push
add
mov
add
in
push
pop
add
ja
shll
aam
hlt
lea
pop
xor
lea
push
push
push
push
call
add
jge
mov
shl
xchg
add
add
test
pop
iret
gs
jns
cli
ficoml
add
mov
add
fnsave
nop
add
mov
lods
add
nop
shll
mov
flds
ficoms
add
add
add
add
mov
add
add
add
add
arpl
lods
pop
add
testb
add
adc
adc
lea
push
lea
push
lea
push
push
push
push
call
add
pop
cmpsl
mov
mov
cli
add
outsl
testl
add
xchg
mov
cli
add
in
add
add
test
jle
or
cld
cmpsb
add
lock
imul
mov
arpl
mov
ljmp
test
add
add
mov
out
add
lea
pop
add
push
push
push
push
lea
push
push
push
call
rcr
in
loop
js
rcll
in
std
push
add
add
mov
add
addr16
add
pop
add
add
fwait
in
jnp
test
add
loopne
mov
subl
mov
fwait
jecxz
pop
je
mov
add
sti
test
loopne
sub
pop
pop
add
xchg
xlat
add
cld
add
in
xchg
data16
xchg
imul
jle
mov
pop
xor
push
shr
rol
pop
call
add
nop
push
push
push
lea
push
call
jns
add
pop
addr16
push
add
out
add
shrl
add
test
pop
lock
int
add
add
pop
add
add
fcomps
notl
mov
add
ja
popf
add
stc
add
scas
int3
movsl
add
add
mov
add
test
jnp
mov
data16
cmp
je
push
dec
pop
nop
push
push
push
lea
push
lea
push
push
push
push
push
call
add
jae
addr16
jo
cwtl
mov
pop
scas
mov
clc
xlat
imul
rcll
add
cwtl
std
mov
fildl
xchg
cli
push
cmpsb
add
data16
mov
lods
out
mov
aam
add
cmpsb
add
mov
add
add
mov
add
movsl
mov
add
add
add
pop
push
add
add
in
add
out
mov
lea
pop
nop
push
ror
pop
inc
push
push
call
add
add
fcmove
adc
mov
add
add
aad
imul
std
int
iret
roll
scas
subl
test
les
add
mov
aad
add
mov
push
lcall
subl
jnp
addr16
mov
mov
int3
scas
jp
add
add
add
cltd
bound
add
out
rorl
pop
nop
push
lea
push
call
ljmp
scas
xchg
add
loope
push
add
loop
push
add
add
mov
stc
xchg
add
scas
push
jb
hlt
arpl
mov
add
fst
insb
add
rcr
test
jle
add
data16
push
pop
add
popf
jbe
mov
add
add
pop
nop
cmp
jb
xor
push
push
push
push
call
add
push
pop
addb
test
enter
mov
jge
repnz
jbe
clc
add
push
xchg
mov
gs
add
leave
add
xlat
imul
jae
xchg
add
popf
ficoms
jle
add
push
cmpsl
add
add
add
scas
in
add
gs
add
add
xchg
add
lea
pop
jmp
mov
push
sub
dec
not
pop
add
push
push
call
cmpsl
pop
out
add
icebp
in
call
jno
mov
pop
cld
pop
xchg
add
mov
pushf
add
push
add
stc
loop
mov
add
add
fadds
ja
outsl
add
jmp
push
movsl
mov
loop
pop
push
add
movb
cmpl
push
add
add
mov
or
mov
jb
inc
sbb
ror
pop
add
mov
xor
push
shl
pop
xor
shl
push
sub
not
pop
xor
shl
push
add
inc
pop
xor
shl
push
push
lea
push
push
push
push
push
push
push
push
call
faddl
lcall
jbe
rclb
add
stos
xchg
add
into
add
add
add
add
or
test
add
add
add
add
add
addb
int3
add
add
gs
jmp
aad
add
add
mov
mov
lea
pop
xor
mov
add
push
lea
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
test
shll
add
add
mov
mov
loopne
push
mov
add
sahf
add
add
xlat
cltd
add
push
sahf
add
scas
xchg
add
testl
lret
add
mov
add
jbe
add
add
jmp
jne
jl
add
push
push
shlb
push
add
mov
lea
pop
pop
pop
pop
push
push
push
call
add
mov
add
push
add
clc
push
test
add
add
out
out
pop
mov
add
add
pop
hlt
add
arpl
fsubl
insb
addr16
fucomip
add
icebp
test
cmpsb
add
add
ret
testb
add
stos
shlb
mov
add
rcl
fs
add
pop
pop
leave
push
lea
push
lea
push
lea
push
call
loope
icebp
lahf
mov
insb
xchg
jae
loop
icebp
mov
mov
mov
lea
add
xchg
in
add
mov
cld
add
add
fstl
mov
add
jge
xchg
add
fcomp
add
add
add
push
add
lahf
pop
pop
pop
add
push
rolb
jb
add
in
loop
sarl
scas
jmp
mov
mov
xchg
cmpsb
xor
cli
insb
mov
lea
pop
ret
push
push
push
lea
push
push
call
add
add
add
add
addl
add
lret
scas
add
mov
in
add
pop
add
push
add
imul
sarl
add
pushf
add
add
add
in
add
add
pop
rcll
jo
enter
enter
mov
jno
pop
mov
push
push
push
push
push
push
lea
push
lea
push
push
push
push
call
mov
add
push
jb
add
out
add
in
into
push
in
cmc
test
test
fldl
add
add
mov
add
jle
add
iret
lock
add
popaw
jecxz
add
add
arpl
add
mov
std
jp
movsb
xchg
add
mov
add
add
jnp
cmpsl
aad
add
lds
jle
je
add
insb
xchg
add
add
mov
lea
pop
push
push
mov
push
lea
push
push
push
lea
push
call
mov
leave
jmp
mov
push
xchg
mov
lods
mov
fsubrs
aam
add
leave
pushf
cmc
test
outsl
mov
pop
cmc
mov
add
popa
mov
xchg
jbe
mov
pop
mov
faddp
add
sarb
add
add
add
cld
add
jns
push
add
mov
lea
pop
mov
mov
push
not
inc
pop
test
je
mov
push
rol
pop
test
je
push
add
dec
lea
pop
mov
mov
mov
push
push
call
fadds
xchg
add
mov
add
mov
fildl
add
add
ret
mov
hlt
add
jbe
faddl
add
std
cmpsb
les
mov
add
pop
mov
add
lods
shrb
testl
add
loop
add
jle
into
mov
lods
rcr
pop
add
add
imul
jo
jmp
test
lock
add
out
push
std
lds
mov
lea
pop
inc
push
push
push
call
add
add
in
jmp
mov
add
scas
pusha
ja
pop
add
add
add
lods
cmpsl
mov
add
in
std
imul
shll
gs
aad
push
add
out
add
add
hlt
add
add
lods
je
add
jo
add
mov
lea
pop
cmp
je
push
xor
rol
pop
test
je
mov
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
fiadds
pop
out
add
mov
lahf
into
outsl
add
pop
add
cltd
mov
addr16
test
add
ja
add
ja
in
add
adc
sahf
rcrl
in
jp
stc
add
add
int
pushf
into
lods
mov
jo
flds
jns
mov
int3
lea
pop
inc
push
push
push
call
add
in
add
testl
mov
mov
xchg
add
icebp
or
ljmp
cwtl
testb
cld
jns
fs
mov
stc
add
add
push
lods
outsl
lods
pusha
popa
ja
add
lcall
push
add
mov
xchg
add
jb
cld
lea
pop
cmp
je
test
jne
xor
push
push
push
lea
push
call
lock
int
add
add
pusha
add
cwtl
add
jge
into
mov
add
add
add
add
add
add
pusha
lcall
jecxz
add
add
add
add
adcl
scas
xchg
jb
roll
add
jp
nop
add
stos
add
mov
leave
pop
mov
mov
pop
add
add
mov
xchg
fisttpl
test
xchg
loop
cld
lea
pop
pop
push
push
push
push
lea
push
lea
push
push
push
push
call
jecxz
leave
add
mov
add
add
loopne
add
add
imul
mov
xchg
pop
add
call
add
add
push
add
pushf
jl
imul
add
loop
bound
pop
mov
test
loop
iret
scas
fdivrs
rcrl
xchg
fldl
mov
imul
add
add
sarl
aam
bound
pop
push
sub
inc
pop
pop
pop
push
push
push
push
lea
push
push
call
pushf
into
flds
pop
add
jle
jb
imul
add
jae
add
js
mov
add
fstpt
jae
in
pop
pop
out
add
xchg
sarl
xchg
jp
gs
push
mov
push
jb
cmc
add
add
data16
add
cmpsb
iret
add
stos
add
push
cmpsl
add
hlt
lea
pop
leave
ret
mov
push
push
push
lea
push
push
call
shr
out
in
add
pushf
add
mov
outsl
add
call
push
nop
add
icebp
shr
movl
hlt
add
add
insb
int3
movsb
add
imulb
cld
add
add
popa
jle
add
loop
mov
cld
mov
push
xchg
xchg
push
add
sti
les
add
push
mov
rolb
mov
lea
pop
inc
cmp
jne
lea
push
lea
pop
mov
test
je
push
lea
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
aam
std
rcrb
add
mov
xlat
idivw
add
rolb
frstor
shrb
lret
rolb
add
cmpsl
les
add
pop
fiadds
nop
jbe
test
xchg
push
add
sahf
add
add
incb
imul
out
mov
add
pop
rclb
add
add
mov
mov
lea
pop
mov
add
push
push
push
push
call
add
add
add
add
iret
add
test
add
add
push
cld
push
jb
lahf
jns
out
mov
jnp
add
add
add
out
insb
jns
add
add
xchg
add
add
lods
mov
xchg
in
xchg
ja
mov
mov
call
roll
add
lds
add
add
in
add
rolb
add
lods
push
data16
mov
lea
pop
cmp
jne
push
push
lea
push
push
push
lea
push
push
push
push
push
call
fwait
add
imull
add
out
incb
xchg
pop
jbe
mov
add
lods
add
popf
mov
xchg
ja
out
push
hlt
popf
pop
jo
roll
into
lock
mov
add
loope
jmp
jmp
fwait
stc
push
aad
add
lock
xchg
hlt
roll
add
add
add
add
data16
call
fmull
inc
add
pop
test
je
mov
add
push
push
push
push
push
call
cli
add
push
add
pop
jne
push
rolb
roll
xchg
add
mov
ret
adc
jl
mov
add
call
out
add
pop
xchg
test
cli
out
push
add
mov
pusha
xchg
cli
add
cltd
lahf
ja
mov
jno
sti
fiadds
push
scas
add
imul
fsubr
rcll
lods
pop
add
pop
cmp
je
push
sub
xor
rol
shr
pop
jmp
push
xor
pop
xor
push
shr
shl
pop
pop
pop
pop
push
lea
push
call
add
mov
add
movsl
scas
lods
addb
mov
add
in
add
add
cld
xchg
mov
in
add
lock
in
add
push
add
test
add
push
add
fbld
aam
add
xchg
add
pop
add
out
add
mov
add
pop
bound
push
add
testb
mov
mov
int3
lea
pop
pop
push
lea
push
lea
push
push
push
push
call
add
add
fistpll
mov
mov
add
add
push
cltd
add
add
add
add
pushf
add
lods
jae
mov
xchg
jl
clc
loope
test
add
add
lret
xchg
mov
mov
xchg
add
pushf
pop
mov
push
add
jle
fiaddl
jbe
imul
std
lea
popa
sbb
ret
push
push
lea
push
push
call
out
test
push
add
lods
add
jne
add
add
enter
add
stos
add
add
sbb
add
xbegin
push
rcr
nop
mov
add
cwtl
pusha
add
jle
add
add
arpl
fbld
mov
lret
push
add
mov
rcrb
mov
lea
pop
lea
push
add
add
shr
rol
pop
pop
push
push
push
push
lea
push
push
lea
push
push
push
push
call
pop
mov
fildl
in
lds
je
scas
xchg
jecxz
add
out
subl
fimull
add
add
add
add
fwait
add
lock
mov
xchg
mov
mov
push
add
xchg
addr16
mov
lds
xchg
add
in
stc
add
add
mov
fs
les
add
jns
add
lods
mov
xchg
push
jnp
add
icebp
mov
lea
pop
pop
push
push
push
push
call
jb
jo
fildl
mov
mov
mov
ljmp
add
push
add
xchg
jb
jl
mov
call
fwait
mov
lcall
pop
xchg
add
std
add
cltd
out
add
add
sti
jns
add
add
addb
mov
out
add
lret
add
pop
icebp
mov
loopne
rcrl
sbbb
bound
xchg
stos
mov
lea
pop
pop
pop
push
xor
sub
dec
sub
pop
leave
push
lea
rol
lea
pop
ret
mov
push
push
push
call
je
add
mov
repnz
loope
xchg
int
xchg
pop
mov
jmp
add
add
mov
add
nop
arpl
mov
jmp
call
scas
nop
lret
push
out
mov
mov
jge
addl
les
add
add
add
lret
xchg
mov
jmp
mov
sbbb
out
imul
pop
pop
push
push
push
push
push
push
call
push
pushf
xchg
add
insb
xchg
sti
mov
jae
jl
lds
mov
mov
les
add
add
aad
add
add
add
cld
add
add
add
pop
add
add
add
in
aad
fwait
add
lcall
leave
scas
call
jo
mov
lea
pop
pop
leave
push
dec
xor
xor
xor
pop
ret
rol
rol
push
push
push
lea
push
lea
push
push
push
call
mov
xchg
add
hlt
mov
jecxz
fdivrl
andb
mov
cmpsb
jl
pusha
add
jbe
mov
mov
add
add
lea
nop
call
icebp
mov
mov
add
add
add
add
loopne
add
add
jge
add
test
leave
add
int3
lea
pop
xor
push
lea
push
lea
push
lea
push
push
call
add
loop
jle
xchg
stos
add
push
add
test
ja
add
pop
cltd
aad
push
add
les
xchg
jb
push
mov
xchg
addr16
mov
out
hlt
add
lahf
mov
add
push
add
jge
lods
add
add
mov
in
pop
add
test
jne
int3
fwait
mov
lea
pop
inc
push
push
push
call
add
add
pop
jp
gs
mov
out
add
mov
add
add
lds
popa
add
test
add
mov
push
out
shll
add
add
pop
fildl
lahf
add
add
add
mov
jge
jp
jmp
popa
fdiv
add
add
push
add
pushf
add
mov
add
add
add
or
cmpb
jne
ret
adc
jno
xchg
and
arpl
jno
xchg
and
pop
and
adc
and
int
jno
scas
and
push
and
mov
jno
push
cmp
adc
jno
add
add
in
mov
push
pop
add
pop
dec
cmp
test
shr
std
push
sbb
jbe
jl
or
pop
int3
daa
movsb
push
decb
cmpsl
mov
cmc
dec
or
sbb
inc
adc
inc
jne
jb
loopne
in
mov
rorb
and
mov
stc
leave
fimuls
rcl
push
rcr
xor
xorb
loop
repnz
xor
nop
xlat
jl
mov
xchg
inc
loopne
sub
js
ljmp
xchg
sub
loopne
lret
test
sbb
xchg
add
lret
inc
sub
pop
xor
mov
mov
cs
xchg
popf
and
int
in
cmp
inc
mov
out
aas
xchg
cmp
cmp
mov
xchg
sbb
dec
test
push
jl
fnstenv
adc
idivl
pop
imul
shll
pop
xchg
into
test
sbb
leave
lods
push
ficoms
xchg
inc
rep
loope
mov
mov
push
xchg
divb
lods
inc
jns
pop
loop
inc
inc
hlt
mov
mov
or
andb
push
ds
xor
ljmp
cmpsb
jae
inc
test
add
cmp
fisubs
xchg
ret
loopne
ja
mov
shll
scas
bsr
sahf
xchg
hlt
xor
fisttpl
imul
test
xor
cmc
dec
repz
insl
insb
test
add
loope
daa
mov
sahf
movsb
bound
andb
aaa
add
sti
lcall
xor
stc
cmp
dec
sbb
out
mov
jb
fidivrs
pop
sahf
ret
scas
mov
sub
add
inc
cmpsl
mov
scas
cli
scas
or
xor
add
aad
imull
cmp
loop
push
call
inc
lds
jbe
fldenv
push
cmp
div
and
jge
orl
cltd
stos
sub
mov
dec
mov
mov
xor
dec
inc
or
inc
lahf
inc
lahf
lret
sbb
push
rep
and
mov
loop
cmp
mov
aad
decl
xor
push
add
push
xor
mov
in
call
or
and
aas
xchg
xchg
pop
cld
imul
out
pushf
pushfw
sbb
cmp
lahf
pop
or
add
fsubp
call
adc
fcoms
lret
gs
xchg
out
add
jp
and
dec
jge
nop
adc
sbb
mov
mov
iret
inc
jo
ret
pop
shrb
xor
jge
inc
jbe
or
rcrl
jo
aas
insl
iret
aaa
test
shrl
pop
ljmp
cmp
fstl
fisubrl
pop
insl
aaa
push
add
adc
rcrl
arpl
clc
push
xchg
mov
popl
add
scas
ds
out
mul
mov
or
xchg
arpl
int
ret
dec
ret
inc
fwait
imul
jns
lret
addr16
push
fdivrs
mov
stos
xorl
mov
push
pop
aad
int3
or
sbb
add
push
mov
inc
out
test
pop
fldcw
jmp
sbb
movsl
mov
jbe
shll
xor
fistps
fstl
inc
enter
mov
cltd
push
pop
mov
add
jge
rolb
sahf
ljmp
hlt
fstp
push
in
inc
sti
lcall
dec
popl
enter
inc
mov
push
cwtl
sbb
mov
cmc
mov
pop
je
les
mov
int
and
add
mov
lds
fstpt
mov
and
push
sbbb
jg
pop
je
dec
or
xor
inc
push
daa
xchg
ljmp
mov
jo
fists
test
movl
test
test
xchg
pusha
cmpsb
test
push
in
call
cmp
pop
sbb
rcr
je
sbb
shl
add
movsb
dec
iret
fists
andl
test
jp
das
push
insb
and
aam
push
mov
adc
sub
les
mov
push
fsts
push
jl
cld
mov
rcrb
adc
mov
or
xorb
pop
fiadds
jne
push
psllw
sti
lock
and
inc
popf
fadd
nop
bound
sbb
cltd
pop
mov
enter
jns
insl
shrl
ss
lea
movsl
sarb
aam
fs
fcomps
mov
push
scas
lods
xchg
xchg
out
xchg
mov
and
jecxz
mov
pop
pop
cmp
lret
mov
lahf
mov
fcomps
test
and
and
ss
stos
xor
andb
ret
xor
jecxz
pop
jo
inc
or
jnp
dec
cs
outsb
popa
fildl
dec
je
adc
fadds
add
cltd
call
inc
cmpsb
dec
popa
xchg
mov
js
lea
add
mov
fstpt
and
adc
inc
aam
sub
hlt
sbb
mov
pop
ljmp
scas
inc
inc
lods
mov
mov
xchg
outsb
dec
sub
push
sbb
jns
mov
sbb
les
pop
xor
cmc
in
out
std
fdivr
xor
mov
xor
aaa
push
in
pop
cs
sbb
jle
inc
xchg
cmp
mov
jno
xchg
inc
enter
add
sub
sub
gs
cltd
cmp
jmp
inc
fs
cmpsl
dec
lret
xchg
inc
push
sarl
dec
sub
mov
into
insb
push
mov
add
shl
mov
xchg
and
int
fisubl
pop
sbb
lret
out
dec
pop
add
xchg
aaa
loop
outsl
sti
cmp
sbb
loop
sub
movsb
or
and
jl
mulb
jns
cmp
out
mov
xor
pop
sub
cmp
decb
scas
mov
out
out
adc
jmp
adc
xchg
dec
cmp
test
loope
push
mov
dec
mov
or
jns
loop
mov
push
je
lock
pop
or
pop
xchg
das
call
daa
mov
sbb
lods
enter
loope
push
repnz
mov
lea
stos
xor
inc
icebp
push
icebp
dec
rcrl
sbb
pop
adc
in
xchg
xor
mov
sub
pop
test
scas
inc
dec
andb
xlat
movsl
cmp
jb
mov
movsb
idivl
push
sbb
insb
jno
pop
in
lahf
mov
mov
sti
mov
lret
lods
jl
mov
inc
stc
add
mov
pop
mov
int3
jbe
dec
lret
or
arpl
dec
and
lds
jbe
cmp
or
mov
ds
popl
push
fists
sbb
mov
inc
xchg
repnz
mov
fnsave
daa
out
sub
les
jae
in
add
sarb
push
bound
mov
xor
xor
daa
adc
pop
inc
pop
dec
xchg
sbb
lock
or
mov
pusha
dec
jbe
lods
inc
push
cmpl
xor
sahf
cmpsb
lcall
adcl
jl
aaa
test
xchg
out
or
lds
imul
sub
sahf
push
fwait
icebp
mov
fiadds
mov
mov
scas
adc
addb
ljmp
jl
pop
lahf
mov
mov
int3
sbb
adc
clc
test
mov
test
lock
mov
sub
xor
mov
das
inc
cmp
pushf
jns
incl
sub
ds
scas
push
lds
push
xchg
loope
movsl
iret
aaa
sub
xorb
shl
add
out
pusha
scas
hlt
or
aas
mov
jns
pop
aam
into
adc
addr16
leave
and
mov
add
mov
ficomps
in
enter
lcall
lcall
jae
pop
hlt
iret
enter
popf
jmp
inc
lds
mov
pop
mov
push
hlt
xchg
aaa
aas
or
jae
mov
add
in
xchg
inc
fdiv
cmpsb
pop
loope
cli
scas
xor
inc
xchg
xlat
and
daa
rolb
cld
pop
repnz
add
pop
push
sub
xor
test
mov
xor
lahf
hlt
ret
repz
xchg
cli
icebp
popa
into
enter
xorb
mov
push
ja
fildll
shrl
pushf
addr16
lods
scas
insl
rolb
mov
inc
dec
testl
adc
adc
insl
test
sbb
movsl
test
xchg
inc
stos
mov
outsl
and
sub
push
jmp
sub
rolb
aad
jo
ljmp
mov
or
mov
mov
inc
add
dec
or
shrl
loope
popl
js
push
add
xchg
sbb
lea
cmpsb
cmpsl
mov
inc
mov
insb
lds
lds
mov
mov
xchg
pop
insl
pop
cmp
mov
shrl
daa
pop
and
jge
call
es
xor
or
dec
xchg
cmp
stc
ljmp
pop
repnz
pop
xchg
sbb
ds
push
mov
and
sbb
push
aam
lods
push
cmpl
lds
out
lcall
adc
mov
dec
mov
or
ljmp
loope
sbb
sarb
std
xchg
inc
push
jecxz
clc
xor
ret
push
mov
sbb
mov
push
xchg
adc
cld
fldl
fsubl
popf
pop
inc
cmp
cmp
mov
cmpsb
rorb
jno
aas
xchg
push
adc
lahf
mov
mov
cmp
mov
orl
jo
movsl
xacquire
adc
pusha
icebp
xchg
testb
ja
or
mov
or
popf
dec
lea
movsl
in
mov
shr
je
scas
dec
int
pop
xlat
cwtl
xchg
in
xor
inc
jmp
test
or
mov
call
jno
pop
adc
push
or
pop
ret
js
cmp
test
lcall
scas
sarb
cmp
push
shl
cltd
push
push
fldt
outsl
pushf
dec
push
imul
sbb
imul
inc
and
add
lea
sub
inc
jecxz
into
add
xchg
popa
es
inc
add
sbb
jne
adcb
xor
inc
add
dec
dec
jl
add
aam
loope
and
fisttps
ja
lret
or
je
in
lret
cmp
mov
jecxz
fldcw
bound
jne
sbb
mov
and
repz
add
mov
fxch
out
fimuls
leave
scas
andb
out
jnp
flds
jg
ss
aad
imul
nop
add
pop
aad
jp
cmp
mov
fidivrs
loope
ds
jecxz
in
pop
lret
inc
adcb
daa
out
jns
add
push
fistps
jle
rcrb
push
movsl
pop
loope
adc
xchg
inc
or
cmc
add
inc
out
adc
add
push
test
orl
mov
mov
movsl
add
scas
push
cmp
pop
xchg
xor
cmpsl
lret
pop
pop
or
xor
pushf
fidivs
fildll
xor
mov
push
out
std
sbb
sbb
sar
jae
sti
or
push
inc
call
lcall
pusha
mov
pop
ret
outsl
xchg
shll
or
je
push
inc
and
popf
out
pop
add
xchg
mov
dec
mov
hlt
addr16
adc
arpl
adc
or
shrl
inc
aas
add
fnstsw
xchg
aas
sbb
addr16
mov
shr
aas
sbb
xchg
jl
lods
sub
repz
add
loope
clc
jp
sti
rcll
es
scas
ret
adc
imul
aas
mov
inc
sub
lds
dec
out
pusha
test
test
and
fs
lret
aaa
daa
cltd
insl
ss
dec
xchg
pop
dec
pop
andl
mov
jae
test
or
push
mov
mov
ffreep
inc
mov
hlt
shlb
cli
xchg
dec
adc
jle
xlat
stc
mov
push
imul
int
bound
push
add
and
insb
shlb
adc
cmp
lcall
fdivs
push
dec
pop
outsb
dec
fidivrl
fiaddl
jae
push
dec
popf
mov
mov
adc
fs
pushf
jne
cmp
arpl
and
xchg
jmp
add
jb
xor
pop
pop
aaa
cli
inc
push
xor
xorl
xor
inc
ljmp
mov
aad
push
repnz
adcl
nop
mov
orb
fsts
out
xor
xchg
insb
sbb
pop
ret
fs
sub
jle
xchg
mov
xchg
mov
push
sub
add
int
mov
sbb
sbb
leave
outsl
sbb
loop
inc
cmp
cli
daa
xchg
jmp
or
adc
out
test
fldl
mov
jmp
xorl
out
test
sbb
movsb
popa
out
mov
test
jle
jbe
jl
push
outsb
lock
insl
inc
in
fcoml
mov
stc
loop
xor
or
std
inc
cmp
ja
cmp
push
lods
addb
sbb
mov
cmp
jge
fsubs
inc
add
cltd
cmp
xchg
cmpsb
iret
or
or
call
adc
dec
mov
mov
shll
push
je
pop
mov
adc
je
fnstenv
rclb
call
in
sub
dec
or
mov
icebp
fwait
pop
and
roll
ret
sti
mov
dec
sub
ret
adc
push
pop
cwtl
addl
mov
iret
mov
lods
jb
loopne
mov
ja
sti
and
rol
jp
jecxz
mov
xor
stos
pop
mov
or
mov
inc
outsl
push
adc
jbe
inc
sahf
les
and
mov
xchg
or
addb
mov
mov
fldenv
jnp
sub
mov
cld
jmp
push
push
xchg
fists
adc
in
lods
inc
cmc
in
or
int
icebp
outsb
sbb
ror
ret
pop
mov
mov
leave
scas
push
movsl
dec
cmp
xor
mov
lcall
push
packuswb
hlt
into
pusha
mov
and
mov
adcl
push
popa
lahf
jbe
inc
decb
pushf
push
xor
cmc
jge
jnp
shr
cwtl
sbb
lahf
mov
loope
idivb
icebp
xchg
ljmp
dec
cmp
jle
add
mov
mov
mov
or
test
ret
shlb
out
test
in
out
aaa
seta
and
in
lret
cmp
or
inc
pop
lods
mov
mov
es
and
sti
fldl
mov
mov
fdivp
in
repnz
inc
jbe
idivl
sbb
push
pusha
jle
scas
sub
arpl
int3
adc
mov
es
sbb
inc
lahf
mov
jae
lods
xchg
movsl
stc
adc
mov
fwait
and
and
jno
inc
xchg
inc
mov
inc
pop
or
out
mov
mov
ljmp
popf
push
mov
mov
sbb
xor
and
out
ljmp
push
jae
pushf
mov
rcll
out
out
jns
sub
adc
fucomip
into
push
mov
sbb
adc
inc
sti
mov
imul
cmc
int
add
pop
sbbl
sub
pop
lret
inc
hlt
sub
std
aam
jbe
add
outsb
xchg
sub
sbb
sbb
jmp
lods
pusha
jns
mov
pop
add
test
cmp
and
daa
fnstcw
or
inc
cmp
lock
outsb
dec
inc
popa
dec
xor
xor
add
jno
xchg
ret
sbb
pop
or
inc
adc
sub
fcomip
addr16
push
mov
repz
xor
lret
in
cmp
sarl
add
mov
xchg
cld
mov
cmp
mov
and
mov
inc
test
pop
or
cwtl
mov
jns
pop
or
pop
jno
std
jmp
xchg
jne
cmp
and
cwtl
sbb
push
jne
sbb
divl
jecxz
test
push
or
or
movsl
out
scas
jecxz
ds
mov
pop
lahf
xchg
les
and
add
sub
inc
xchg
mov
add
xchg
ret
aam
int3
cmpsb
mov
daa
sbb
sbb
xchg
pop
add
das
jno
add
lds
lcall
fistps
xchg
push
cmp
sub
rclb
andl
push
inc
scas
loopne
cmp
pop
push
or
and
push
mulb
int
inc
sub
mov
pusha
mov
or
push
dec
sub
jecxz
cwtl
and
push
arpl
and
sbb
in
lock
fsubrp
arpl
hlt
pop
jae
inc
push
scas
cmp
adc
adc
dec
pop
push
push
out
mov
pop
cmp
adc
insb
lcall
in
ret
lret
pop
pop
sarl
fimull
inc
mov
popa
adc
mov
mov
adc
inc
shr
inc
lret
pop
clc
and
pop
leave
xchg
mov
sub
aad
loop
adcl
mov
test
inc
sub
insl
lret
or
and
inc
mov
push
sbbl
xchg
ljmp
push
bound
rcl
test
subl
rolb
leave
sub
cmpsl
sub
daa
adc
cwtl
xchg
sbb
leave
mov
fldl
pop
sbb
add
inc
adc
fldt
ret
std
xor
mov
push
sti
nop
lods
test
xor
push
ret
push
testb
mov
comiss
push
out
jno
pop
div
inc
mov
push
mov
push
call
jle
in
add
jle
insl
pop
pop
mov
cmp
push
add
test
pop
test
inc
sbb
inc
stos
jno
mov
in
sub
xor
add
cmpb
pop
jnp
jp
add
sbbl
xchg
insb
aaa
imul
ja
cmc
int
out
out
fstps
testb
push
dec
in
or
dec
jae
je
add
out
icebp
jg
mov
aam
shl
mov
sbb
popf
in
sahf
shrb
dec
in
fisubl
cmp
pop
insl
jno
mov
loopne,pn
dec
shll
or
test
push
push
les
sub
cmp
in
add
sub
and
clc
and
inc
xchg
leave
jb
gs
push
test
hlt
add
outsl
mov
in
loop
mov
and
stc
aad
xchg
sarb
jmp
in
dec
add
sbb
scas
adc
pusha
shll
cmpsb
push
pushl
call
andl
sti
test
pushf
jb
test
adc
mov
mov
fs
jb
insl
mov
stos
add
push
xchg
clc
cmpsl
cmp
sbb
adc
arpl
lcall
push
lds
mov
xchg
mov
mov
or
pause
movsb
test
in
lret
or
sbb
mov
popf
mov
imul
adc
xor
cmpsb
lcall
subb
imul
adc
pop
fs
inc
mov
insb
mov
scas
fwait
or
popf
adc
in
push
mov
loopne
sbb
into
push
in
stos
mov
rclb
aad
mov
and
and
outsl
in
orl
pop
out
mov
out
xor
dec
add
jecxz
sub
xchg
xchg
sbb
dec
jp
mov
and
fdivl
rolb
es
mov
inc
ljmp
imul
mov
pop
ljmp
xchg
idivb
test
imul
push
sub
sbb
icebp
inc
push
add
loop
jp
jge
pop
push
dec
xor
loopne
pop
clc
clc
pop
imul
xchg
cwtl
rcll
xlat
fmulp
mov
insb
and
rorb
and
add
out
sub
cld
jno
cli
out
mov
es
scas
repz
xchg
test
jnp
repnz
pop
test
adcb
stos
push
js
mov
inc
fldl
je
mov
sub
aad
out
jbe
pop
ds
popa
fistpl
adc
notl
add
enter
sti
ror
movsl
jns,pt
cltd
or
cmpsb
lods
jg
test
pusha
adc
xor
insl
push
out
lods
xchg
mov
jg
push
mov
mov
or
cwtl
rcl
push
inc
and
test
lret
sbb
xchg
pop
jmp
or
stc
outsb
out
adc
gs
movsb
cmp
cld
and
pusha
lods
stc
lods
xchg
push
out
xchg
cli
scas
popf
mov
push
lahf
cmp
js
push
hlt
mov
and
xchg
jno
ds
ja
fstps
sub
fdivrs
cmpsl
cmp
shrb
testl
lcall
cmp
xor
mov
pop
xchg
inc
mov
sbb
inc
add
sbbb
push
add
lock
lret
cmp
xchg
sub
cmp
fs
movsb
pop
ja
jmp
insl
pushf
stos
scas
int
outsb
sbb
mov
mov
push
popa
stc
and
dec
mov
fdivl
pop
lds
inc
adc
call
dec
inc
aad
mov
adc
cmp
roll
mov
sahf
lcall
pop
rorb
pop
sub
inc
or
jl
add
mov
or
leave
and
pop
icebp
je
inc
popa
or
lea
fiadds
dec
cmp
push
stc
pop
xchg
and
mov
stos
or
sbb
jbe
jbe
and
test
add
add
pusha
arpl
push
jbe
jb
xchg
and
inc
cld
decb
stos
dec
add
fnsave
insb
mov
jp
test
idivb
sbbb
add
or
jp
fmull
mov
andl
cs
push
pop
cmc
loop
push
fs
mov
mov
ret
xor
pop
mov
lcall
xchg
add
inc
shl
add
sbb
pushf
popa
call
je
push
ljmp
pop
xor
das
in
sbb
cmp
cltd
in
jp
cs
daa
loopne
inc
push
mov
mov
loopne
push
out
mov
dec
in
cmp
push
roll
das
addr16
scas
in
movb
cwtl
je
sbb
jge
shll
pop
out
pop
push
push
cmp
cld
push
es
ss
shl
and
inc
jg
cmp
aad
push
sub
or
push
sbb
push
aad
and
out
xor
inc
inc
and
jo
sbb
leave
call
pop
sbb
push
add
sub
xchg
and
lods
pop
xor
jmp
mov
outsb
pop
leave
xchg
xchg
insb
xchg
lock
icebp
int
inc
arpl
jge
pop
adc
or
and
lcall
sbb
push
into
leave
mov
mov
mov
mov
push
jg
jbe
cmp
adc
inc
mov
call
insl
push
cmp
dec
sub
mov
fst
mov
mov
lods
or
cmp
pushl
lret
and
out
movsb
pop
mov
stos
mov
mov
shr
popa
add
sub
cmp
xor
mov
and
fsubrs
popa
sbb
les
pop
mov
xor
sub
or
outsl
movsb
enter
or
imul
rolb
sbb
jae
pop
in
popf
lahf
rsm
ds
inc
lret
lods
or
call
sub
and
aas
sub
mov
jo
and
idivl
inc
and
add
data16
sti
lahf
out
sub
or
test
xor
out
loope
lods
in
in
pop
bound
and
sarb
call
jo
add
aaa
push
fwait
mov
or
leave
sub
aas
les
add
pop
or
mov
and
cmp
cmp
scas
and
add
xchg
lret
mov
out
out
ljmp
es
mov
and
ret
mov
daa
jmp
sub
push
in
or
lahf
mov
rorb
ss
cmp
out
jne
pop
into
or
out
sbb
sub
repnz
mov
push
adc
inc
jp
and
pop
inc
sti
mov
mov
jge
int3
daa
inc
adc
mov
repz
lea
xchg
push
jae
jle
orb
sub
nop
sub
xor
dec
jl
and
pop
lock
xchg
mov
adc
inc
xorb
mov
mov
andb
dec
adc
push
in
push
imul
push
xlat
push
push
into
push
adc
and
lcall
jecxz
mov
sbbb
xor
push
loope
ret
ficompl
push
pop
lret
movsl
jecxz
enter
inc
icebp
and
pop
aas
add
movsl
repnz
lcall
inc
mov
adcl
xor
mov
movsl
xchg
std
mov
sarl
imul
test
pop
movsl
xor
jmp
xchg
jne
inc
movsl
mov
jle
dec
subb
loop
pop
xor
ficoml
in
push
mov
pop
test
in
jp
cmp
dec
mov
out
push
inc
add
mov
pop
jge
repz
and
dec
jne
popf
lock
cmpsb
lods
test
sbb
adc
sbb
fcomp
enter
push
xor
inc
arpl
dec
rorl
lods
pop
shll
pop
push
lods
lods
idivb
pop
fbstp
sbb
pop
inc
outsb
inc
mov
and
gs
ret
inc
jne
push
fsubrs
adc
inc
dec
roll
jae
push
cmpsl
pop
shrb
aaa
loopne
fdivs
sbb
jmp
mov
push
jge
add
les
lret
cmpsl
stc
sbb
add
pop
rcrb
bound
rorb
cmp
sbb
jb
xor
jg
pop
dec
sbb
test
js
daa
fdivs
xor
sbb
es
push
sbb
push
cmp
in
push
sub
lock
mov
dec
test
pop
imul
push
testb
hlt
in
push
mov
out
push
jp
orl
test
sub
bound
push
mov
xchg
cmpl
xlat
fisubrl
and
pop
gs
adc
or
xor
fs
jl
imul
pop
push
cwtl
out
dec
nop
idivb
call
les
xchg
mov
orb
sub
xchg
jbe
mov
in
test
test
pop
subb
add
add
mov
pop
jo
mov
adc
lods
and
xchg
jnp
sbb
pop
sub
fcomps
imul
cmpsl
arpl
xor
cld
and
mov
push
loopne
fistpll
adc
test
loope
idivl
jmp
jmp
inc
sbb
mov
mov
cli
jmp
xor
xor
hlt
xchg
stos
adc
stos
aam
repz
or
or
add
lahf
dec
cltd
jp
or
add
add
xorl
xor
repnz
lahf
pop
movsl
fadd
addr16
sarb
ja
in
or
add
fwait
cmp
sub
shrb
into
inc
movl
sbb
sti
stos
int
sti
pop
repz
hlt
in
into
sarl
into
movsb
xchg
mov
mov
mov
and
cmp
scas
lods
dec
jne
jecxz
add
dec
in
adc
jecxz
lret
push
pop
cmpsb
pop
mov
push
test
xchg
lcall
mov
sub
aad
mov
and
iret
lods
adc
pusha
cwtl
or
adc
mov
or
bound
dec
or
stos
and
xor
test
xlat
pop
leave
shl
dec
lahf
loop
ror
sbb
dec
insl
shl
push
pop
sub
fs
mov
ds
mov
das
mov
lock
sbb
stc
mov
xor
dec
ret
lcall
lahf
iret
adc
aas
sbb
insb
fwait
test
jne
loope
xchg
stc
out
or
shrb
pop
flds
mov
stc
shlb
cmp
add
leave
lahf
add
mov
in
addr16
mov
daa
sarb
xchg
mov
mov
rcr
loope
das
fnstcw
xor
dec
add
push
jmp
add
adc
std
push
add
pop
push
xchg
cmpsb
ret
xlat
fdivs
push
sub
cmc
xchg
mov
cmp
cmp
sbb
or
imul
out
test
mov
int
xchg
jmp
sub
pop
xor
pushf
push
sbb
movsb
stc
ja
lods
inc
das
leave
into
js
xchg
mov
mov
mov
push
add
xor
je
imul
dec
push
lcall
xchg
in
test
and
dec
mov
cmp
jmp
test
push
jno
cltd
jno
or
mov
sub
inc
pop
pop
jge
dec
lret
mov
scas
fs
sbb
mov
ja
test
push
lds
leave
fisttpll
fdivrp
dec
xor
aam
push
jne
sub
cmp
add
mov
inc
xchg
mov
adc
subl
shrl
mov
mov
or
lods
xor
out
and
sbb
dec
mov
int
movsb
push
call
and
in
sbb
pop
mov
adc
jp
loopne
cmc
lret
mov
mov
outsl
dec
mov
in
mov
inc
fistps
in
pop
sbb
je
xor
fsubl
enter
orb
scas
sbb
jecxz
inc
pusha
add
jbe
ret
mov
ja
divb
dec
jno
jne
das
push
out
mov
loop
jae
mov
pop
push
insl
add
mov
or
mov
bound
pop
loopne
adc
cmp
lret
aas
in
mov
xchg
gs
jle,pn
fst
adc
mov
pop
std
cmp
pop
data16
shlb
aam
js
xchg
xor
out
dec
mov
loop
daa
pop
out
stos
filds
in
stc
in
sbb
out
cmp
mov
bound
sarb
dec
hlt
lods
ret
pushf
lds
scas
push
push
mov
sbbb
mov
adc
jns
fwait
cmp
or
hlt
out
bound
inc
or
dec
fistpl
test
popf
int3
int
popf
popa
push
pop
adc
fimull
int
adcl
xchg
sbb
cmp
inc
jmp
dec
xchg
dec
lret
punpcklwd
je
cld
mov
cmp
cmpsb
imul
xchg
xchg
jns
fwait
enter
xor
mov
sub
fimuls
jo
subl
inc
push
ja
mov
jns
adc
ljmp
gs
hlt
je
cmp
aaa
inc
setl
rorl
mov
in
hlt
xor
pop
push
lds
pop
jnp
in
pop
hlt
lods
test
das
mov
and
fs
imull
and
lock
ret
pushf
xchg
push
vandnps
test
adc
mov
push
pop
push
mov
sbb
lds
mov
sbb
mov
in
pop
mov
imul
fst
arpl
in
enter
ret
cmp
call
inc
or
mov
or
movsl
sbb
mov
dec
adc
bound
add
pop
lret
ret
jbe
fisubl
aas
lods
mov
push
mov
push
inc
mov
push
sub
ljmp
mov
pushfw
repnz
dec
add
jns
xchg
subb
cli
cmp
movsl
out
clc
in
repnz
push
aaa
out
or
and
out
mov
mov
sub
cmp
mov
adc
inc
cmp
mov
leave
push
stc
popa
out
fstpl
adc
push
sahf
inc
test
scas
subl
push
xchg
adc
jbe
scas
enter
and
ljmp
lahf
push
out
xor
cwtl
dec
in
test
and
stos
out
inc
arpl
add
lock
cmpsb
in
imul
call
mov
and
cmp
pop
fmuls
adc
pop
sub
or
das
int3
mov
fs
out
fwait
inc
fldenv
test
fst
decb
pop
sub
jae
dec
jnp
pop
je
fmull
jecxz
leave
or
addb
xchg
jge
arpl
mov
imul
daa
dec
mov
popf
cmp
cmp
mov
outsb
dec
scas
mov
or
add
mov
out
jecxz
sbbb
movsb
js,pt
adc
loopne
mov
inc
xchg
inc
sub
dec
stc
test
sbb
dec
fists
and
mov
pushf
inc
mov
pop
cli
jnp
jmp
cltd
ror
add
and
fists
cmp
xorl
mov
cmp
lcall
lods
or
sbb
push
loopne
stos
nop
insb
push
mov
mov
lods
pop
sbb
sub
loopne
shl
sub
outsl
outsl
adc
in
icebp
add
lds
in
cwtl
scas
push
jne
fbld
int3
xchg
fadd
push
cpuid
push
push
mov
arpl
xor
pop
outsl
sbb
pop
sbb
pop
xchg
inc
and
ljmp
jnp
aad
pop
mov
ja
and
mov
pop
movsl
and
mov
loop
dec
in
dec
decl
mov
clc
mov
into
jmp
mov
iret
push
add
aam
lock
out
ret
jecxz
arpl
cs
dec
mov
cld
sub
sub
aad
pop
shrl
push
dec
insl
pushl
dec
sub
imul
lods
sub
push
jge
and
jg
sub
ss
sub
pop
notl
mov
and
test
insl
xchg
fisttps
test
cmpsl
pop
loope
sahf
pop
inc
dec
stc
jbe
jnp
loopne
mov
inc
mov
add
cs
stos
sbb
es
adc
add
cwtl
mov
jnp
aam
fdivp
adcl
add
aam
rcrb
cmpsl
cmpsl
push
inc
lock
mov
test
les
pusha
sbb
cwtl
lret
shl
pop
fwait
mov
dec
test
xchg
ljmp
sbb
push
adc
mov
sbb
clc
adc
inc
inc
add
outsl
push
test
and
fbld
push
xchg
jno
imul
push
mov
lods
push
hlt
das
cli
xlat
xchg
fistps
xor
mov
push
ds
ror
dec
dec
push
or
jnp
shr
jp
push
hlt
stos
jae
or
and
mov
data16
push
push
in
sub
sub
cmp
repnz
inc
fs
int3
test
mov
mov
adc
sahf
dec
cld
fwait
in
xchg
aas
push
sahf
fdivl
jp
push
ljmp
mov
jae
out
hlt
cmp
into
inc
scas
mov
stos
scas
repz
sbb
popf
adc
jb
dec
shrb
insl
push
cmp
aad
add
int
popa
test
lea
xor
cmp
fdivrs
lds
shlb
pop
jle
cmp
dec
add
dec
sub
mov
shrl
aaa
dec
imulb
mov
cmpb
xchg
shlb
mov
mov
inc
inc
pop
js
fisubs
and
cmp
jecxz
cmpsl
mov
push
mov
sbb
lock
ss
inc
push
jecxz
shrb
in
scas
push
or
or
shlb
scas
dec
insl
movsl
and
push
mov
push
cmpsb
arpl
push
pinsrw
push
mov
jl
pop
out
jns
mov
dec
aaa
movsb
ss
jle
jne
loope
xor
rcrb
cmpsl
fdivs
jp
popf
dec
shlb
inc
insb
add
aam
enter
jnp
pusha
test
mov
push
jg
mov
cmpsl
and
push
out
jns
jmp
push
sbb
test
push
das
push
or
inc
hlt
ficoms
pop
xchg
out
xlat
aad
out
inc
jns
pop
insl
pop
or
xor
xchg
or
je
movsl
push
dec
addb
push
xchg
add
enter
cmp
in
dec
jb
inc
sub
mov
fwait
or
inc
fisubrs
sbb
jge
xor
fptan
dec
mov
outsl
mov
xor
jae
fbstp
mov
add
dec
imul
stc
jo
leave
dec
dec
add
sti
std
cltd
test
add
movsl
or
call
and
sub
scas
push
fisttps
es
pop
adc
fdivrs
jg
xlat
in
mov
jg
push
in
or
xchg
cmovb
xchg
clc
mov
mov
sub
test
mov
hlt
cmc
add
sbb
shlb
shl
clc
jo
mov
inc
push
pusha
and
inc
mov
sbb
cli
rolb
sbb
adc
jmp
pop
gs
test
push
mov
lods
xchg
addb
ret
add
or
cmp
and
movsl
ljmp
adcl
or
pop
jae
jp
pop
push
mov
sub
nop
pop
push
jno
xchg
int3
mov
addl
scas
jge
push
mov
xor
jbe
shll
and
in
jge
add
shrb
imul
aas
xchg
sub
adc
lods
or
inc
popa
xor
cmc
cmp
loope
out
sar
push
xor
jo
cmp
pushf
gs
notb
mov
popa
xchg
push
addr16
push
jle
jnp
push
jno
xor
xchg
or
outsl
xchg
mov
cld
inc
pop
jecxz
sti
push
std
sbb
xchg
mov
cli
je
loopne
mov
in
out
test
loopne
enter
jb
arpl
mov
jge
jo
loop
and
mov
ret
test
cli
and
mov
pop
clc
add
mov
push
jno
pop
popf
cmp
jle
jmp
fstps
cs
fldt
jb
jae
sahf
cmp
add
xor
lock
clc
popa
sub
aas
mov
or
int
rolb
cwtl
pop
hlt
cli
xchg
push
stos
cmp
jl
mov
ds
nop
sub
int3
xchg
in
inc
call
cmp
js
mov
adc
ss
bound
mov
out
ljmp
inc
sbb
lret
and
adc
dec
adc
add
lea
sub
aaa
pop
hlt
mov
xor
sub
sbb
inc
sub
push
and
in
fstps
sbb
or
out
jo
pop
xchg
sub
adcb
lock
pop
add
subl
int3
shrl
mov
mov
adc
and
sbb
outsb
mov
jl
mov
sub
cs
mov
mov
inc
aas
adc
sub
out
sub
jbe
adc
hlt
out
add
std
xchg
inc
jg
icebp
loopne
push
imul
loope
add
mov
cmp
les
insl
mov
insb
jmp
adc
jmp
iret
bound
dec
inc
pop
ds
and
test
mov
mov
imul
xchg
cwtl
mov
xchg
jo
mov
pusha
int
repz
into
mov
mov
leave
lods
pushf
sbb
mov
pop
or
and
cmp
test
xchg
rcrl
cmp
push
jno
pop
ret
mull
sbb
cltd
inc
sbb
mov
subb
pop
or
loopne
outsb
fs
push
cmp
add
fnstcw
cltd
cmp
push
and
into
in
jg
mov
rcl
xor
jno
dec
jns
icebp
out
shrl
loop
pushf
mov
aaa
xchg
jecxz
jg
movl
dec
adc
enter
xor
cltd
cmpsl
sub
lea
adc
mov
adc
insb
das
mov
inc
data16
shr
mov
fadds
out
fwait
mov
xor
jecxz
loope
cltd
mov
imul
std
imul
mov
sub
je
mov
jle
dec
dec
fbstp
cli
imul
xor
shll
jg
test
xchg
inc
les
js
jecxz
push
sbb
popf
aaa
push
jb
mov
call
notb
xchg
mov
in
lock
ficoml
and
add
inc
cs
jl
adc
xor
sbb
fists
shlb
and
mov
les
or
imul
add
jnp
enter
aaa
adc
test
cmp
je
or
sbb
fld
lahf
daa
mov
insb
inc
sub
pop
outsb
stc
xor
repz
in
adc
fcmovnu
mov
mov
insb
ja
popa
rcl
loopne
add
mov
call
and
aaa
inc
pushf
mov
adc
mov
mov
or
and
stos
jecxz
xor
pop
popf
push
add
sti
hlt
jb
mov
sbb
jbe
sub
jbe
ja
push
filds
int
outsl
jns
mov
push
xchg
insl
adc
and
iret
sbb
jae
mov
inc
adc
aam
push
inc
test
xchg
adc
push
dec
mov
xchg
mov
loopne
adc
pop
dec
test
xlat
lret
sub
inc
mov
fcomp
sub
jge
fbld
mov
or
call
repnz
rorb
and
mov
arpl
mov
or
cld
xor
aam
les
lea
push
inc
loop
and
out
cmpsb
jne
lods
jmp
ret
popa
or
test
xchg
jns
out
jns
mov
outsl
push
repz
add
out
and
xorl
mov
xchg
dec
into
sub
in
adc
jnp
mov
es
in
lret
fst
loopne
push
dec
test
shll
inc
sahf
repz
mov
push
push
adcl
or
adc
add
inc
dec
adc
add
and
shlb
sti
mov
add
or
and
repz
lret
stos
push
mov
sbb
loope
aaa
fidivrs
sbb
cld
xor
push
push
mov
add
ljmp
push
scas
jno
data16
jge
cmp
sub
int
push
test
test
xchg
or
mov
stos
fistpl
cltd
xchg
xchg
inc
cmp
jb
cs
jnp
or
sub
pop
pop
popf
jae
mov
cmpl
rcll
fs
pusha
and
aas
fs
dec
xchg
test
dec
sbb
xor
adc
inc
clc
aas
fdivl
xor
lods
leave
pop
arpl
lods
xchg
aad
and
into
push
ljmp
incb
imul
sahf
or
jbe
jae
bound
repnz
into
or
push
or
xchg
add
imul
add
jmp
out
mov
or
xor
xor
pop
aas
mov
adc
pop
cmp
data16
inc
pop
filds
add
dec
pop
and
push
imul
fidivl
pop
incb
iret
outsl
jge
dec
sbb
imul
dec
outsb
inc
and
cli
or
adc
fs
enter
lock
mov
ret
xchg
lret
pop
pop
push
mov
xchg
in
lods
push
inc
jge
pop
aam
xor
mov
sar
dec
cmp
dec
xchg
mov
push
int3
bound
mov
stos
cltd
push
lock
aam
gs
stos
adc
mov
sbbl
das
test
in
xor
mov
scas
in
xchg
inc
ja
xchg
and
negl
cltd
push
aaa
lock
cmp
sbb
push
int
cs
pop
inc
fdivl
push
shrl
xchg
cltd
ss
mov
mov
jecxz
test
sbb
ret
loope
inc
insl
inc
std
xor
pop
fildll
xchg
mov
or
inc
xchg
push
inc
into
repz
sti
cmp
lods
pop
mov
movsb
mov
insb
inc
enter
add
pop
bound
jnp
mov
jb
sti
mov
nop
repz
insl
xor
add
lcall
lret
shll
in
xor
dec
movsl
xor
mov
sbbl
xchg
cmp
xorb
leave
push
cmpsl
popl
pop
cmp
add
jne
fistl
bound
inc
dec
movl
sets
push
or
das
or
cmpsl
out
fs
rclb
push
int3
inc
dec
mov
outsl
and
pop
sub
rorl
leave
add
xor
sti
or
mov
scas
adc
in
je
ret
pop
mov
sbb
push
test
test
lods
mov
int3
lcall
inc
in
push
fbstp
pop
jb
cmpsl
pop
ja
into
xchg
fstps
push
ljmp
sbb
pop
in
mov
xchg
cmp
or
adc
stc
xor
jg
xchg
or
ret
mov
mov
and
mov
mov
xlat
sub
cs
cli
and
sbb
pop
add
inc
imul
adc
cmpsb
adc
sub
xor
stos
xor
out
fsubrl
sbb
mov
push
push
xorb
cmpl
addl
push
cmp
xchg
imul
sarb
scas
sbb
ret
loope
push
movsb
das
fcmovb
cltd
stc
xor
push
or
mov
jo
dec
adc
jo
and
hlt
add
add
adc
ja
bound
xor
and
daa
loope
cmp
inc
cli
mov
loop
xchg
xor
fwait
insb
cli
aad
pop
pop
push
je
add
popf
mov
cwtl
jl
pop
jne
lret
lods
jb
push
clc
sahf
xchg
inc
movsb
pop
aaa
adc
outsb
inc
xchg
jl
shrb
aaa
mov
pop
jnp
push
or
test
lds
cli
out
lds
test
mov
dec
enter
test
scas
mov
xchg
mov
inc
cmpsl
and
ljmp
push
push
push
cmp
outsb
xchg
pop
xorl
lret
xor
jle
inc
pop
pusha
push
imul
sarl
lds
mov
in
mov
mov
js
adc
push
scas
sub
sbb
out
fisubs
pop
adc
negb
lret
mov
test
lods
cli
int3
test
pop
lfs
jg
mov
fisttps
sahf
in
mov
inc
mov
and
dec
and
pop
jl
lahf
inc
rcr
and
xor
shr
pop
xchg
jle
inc
jle
ljmp
jno
inc
cmp
adc
xor
sub
push
jl
sub
inc
bound
imul
xor
and
fistpll
xchg
mov
sbb
jmp
inc
clc
adc
xor
push
lcall
push
push
ds
adc
xchg
out
push
jge
jno
loope
xchg
xchg
add
scas
dec
mov
vcmppd
pushf
mov
sbb
pop
mov
xlat
movsl
or
dec
xor
mov
mov
jbe
add
cld
and
xchg
mov
hlt
jno
xchg
inc
dec
sbb
xchg
push
pop
pop
fsubrl
inc
scas
adc
dec
jae
aam
orb
jae
add
dec
inc
shll
outsb
mov
pop
sbb
aas
mov
push
mov
scas
cmp
add
cmp
mov
test
pop
cmp
sbb
mov
lret
stos
inc
das
insb
adc
cmp
imul
sub
fstl
cmpb
dec
or
jne
icebp
cmc
push
xor
in
dec
ljmp
fdivl
sarb
cltd
and
and
sbb
push
add
ja
jge
lahf
insb
repz
lcall
mov
mov
shll
js
sub
out
or
test
push
mov
insl
add
clc
push
mov
and
push
inc
fnstsw
fsts
push
and
stos
fildll
cld
imul
sahf
adc
ficompl
sarl
and
lcall
jo
dec
je
add
ret
mov
pushf
and
dec
lods
mov
xchg
pop
arpl
dec
test
mov
in
mov
cmp
popa
fxrstor
inc
add
mov
pop
sti
dec
dec
mov
mov
dec
mov
sbb
xor
insl
int
ja
iret
int
sbb
push
push
cmp
jle
pop
addr16
sbb
cmp
stc
sti
mov
inc
fnstcw
repz
std
std
cld
and
les
faddl
fldl
sahf
mov
mov
mov
mov
push
adc
cmp
jnp
int
or
cmpsb
xor
and
push
cs
cli
cmp
dec
xchg
xchg
xchg
lea
cmp
jbe
jl
mov
pop
mov
repz
out
xchg
xor
xor
pop
xchg
mov
insl
or
fsubrs
fiaddl
sbb
jnp
xchg
stos
push
mov
pop
movsb
dec
pop
xchg
cmp
xchg
cmc
jge
popf
mov
inc
fcom
mov
inc
cmp
in
rorb
addr16
sub
jo
aas
lods
fxch
out
insb
jle
int3
aam
imul
movl
shll
cltd
pop
outsb
sbbb
or
pop
fdivs
and
in
mov
mov
push
ds
mov
outsb
test
mov
xchg
add
pop
shll
es
in
adc
push
inc
fwait
addr16
add
jno
test
push
inc
dec
inc
insl
rclb
sbb
jecxz
mov
fs
inc
fwait
mov
out
lods
cmp
pop
daa
sbb
fisubrl
lock
outsl
mov
xchg
fnstenv
mov
pop
fistl
and
mov
stos
cmp
stos
or
mov
push
ret
mov
push
mov
adc
out
jb
mov
gs
sub
jne
inc
jo
into
popf
shll
sbb
jg
addr16
mov
rcrl
fcom
pop
xchg
push
mov
add
imul
cmpl
int
mov
lock
loopne
push
popf
mov
lds
jg
imul
mov
addb
ja
iret
bound
or
loope
sbb
or
inc
adc
and
or
roll
mov
flds
mov
test
pop
fwait
je
cmp
sub
mov
hlt
jno
mov
mov
xor
ret
sbb
mov
jge
int3
push
ljmp
push
cmp
mov
jns
cmp
into
add
or
das
sub
xchg
add
imul
jmp
and
push
jmp
mov
xchg
xchg
inc
shll
hlt
jno
push
pop
iret
and
std
jecxz
mov
mov
xlat
sub
test
jmp
test
pop
out
dec
sub
add
dec
push
xchg
pop
xor
xchg
adc
jmp
jbe
lcall
fsubrs
cmpsb
std
xchg
inc
push
ljmp
cmpb
sub
fldt
pop
movsl
rclb
xchg
xchg
andb
shrl
shll
jle
insb
stos
call
add
xor
fldcw
jo
pop
lret
sbb
mov
jne
inc
mov
xor
lcall
pop
pop
mov
sub
out
insb
pop
fildl
sbb
lock
inc
test
dec
frstor
ja
adcb
ds
rorb
lret
lret
xchg
sbb
int3
loope
jmp
mov
adc
jae
jb
xlat
add
outsl
dec
gs
cmpsl
rcr
and
mov
fs
dec
mov
int3
jns
push
adc
dec
or
ja
scas
sub
shll
mov
mov
jae
mov
out
jl
add
mov
pop
jne
add
push
mov
push
cvtdq2ps
xor
inc
or
test
lret
push
ret
pop
or
jmp
cli
pop
pop
push
mov
mov
cmc
push
fldt
ror
ljmp
in
jne
fcompl
push
adc
inc
cmp
shll
mov
out
cmpsl
test
cmp
xor
lret
les
push
stos
dec
mov
lock
mov
push
shrb
inc
fimuls
lcall
pop
mov
mov
rolb
or
out
rcl
aas
jmp
dec
out
shll
rcrb
fbstp
popf
or
lea
fisubl
push
lds
cmpsb
xor
aas
inc
aas
sbb
pop
inc
aad
cmpsl
inc
popl
cmp
lret
iret
lea
scas
les
adc
lcall
ret
jmp
ja
scas
mov
sbb
fcmovbe
clc
int3
in
xlat
loope
jno
fxch
adc
pop
adc
pop
sbb
sbb
push
inc
les
ljmp
pavgb
cmovnp
and
gs
in
loope
pop
and
mov
arpl
iret
xor
jle
inc
mov
leave
rorl
pushf
cmp
fwait
js
xchg
outsb
cli
add
pop
jge
push
jp
das
popa
fildl
daa
dec
mov
add
out
test
jge
push
lea
outsl
push
pop
mov
stos
mov
and
xchg
lods
insb
push
jmp
or
xorb
inc
cmp
and
xchg
test
iret
ss
dec
test
jle
mov
and
cmp
fnstcw
imul
fxch
mov
xchg
in
das
mov
lods
test
adc
xchg
xor
or
ljmp
adc
adc
scas
pop
mov
ret
aad
lock
mov
or
dec
lds
mov
dec
insb
dec
add
je
cld
pop
repnz
fistpll
push
fldl
addb
or
inc
jp
insl
inc
orl
lea
mov
out
or
hlt
inc
mov
mov
fs
ret
sbbb
popl
in
cmc
xor
xchg
xchg
addr16
xor
fistpll
dec
shr
test
ret
lret
mov
mov
out
pop
loop
clc
sub
sub
push
rcrb
mov
outsl
nop
pop
and
cmp
insb
mov
stc
sub
adc
and
pop
lahf
jecxz
jmp
fldt
rorb
push
inc
lcall
xchg
sbb
leave
enter
es
jmp
jl
cmp
push
adc
dec
dec
push
sub
call
cs
repnz
xchg
push
ds
stos
pop
loopne
pop
sub
loope
orl
mov
jge
les
mov
sbb
add
insb
push
int
mov
sub
or
fcmovu
adc
sub
inc
xor
scas
adc
jno
lret
movsl
adc
mov
sbb
ss
push
jge
fisttpll
pop
popa
aad
mov
mov
inc
jge
cmp
sbb
push
xor
outsb
daa
adc
xchg
scas
sub
shlb
jb
mov
out
lahf
lcall
xchg
leave
push
js
dec
mov
pop
fnstcw
xlat
push
jo
jo
imul
shlb
and
call
mov
daa
jmp
or
add
ss
push
or
repz
popl
and
ficoms
rolb
add
cmp
push
ljmp
movsb
adc
sbb
stc
sub
sahf
xor
mov
dec
in
leave
jo
xlat
cmp
divb
in
jl
jnp
and
cmp
pushf
incb
jg
test
das
mov
and
cmp
iret
adc
sbb
cmpsb
in
jmp
daa
dec
jne
aam
push
gs
mov
sbb
or
xor
mov
in
into
adc
jecxz
sarb
inc
and
jae
jnp
add
mov
enter
cli
mov
scas
sub
inc
sahf
loop
sbb
jnp
sbb
mov
lahf
fwait
int
push
push
adc
or
jge
mov
pop
xchg
add
mov
outsl
cmp
outsl
and
fldl
das
sbb
fidivs
loop
std
pop
repz
fmul
push
jl
jns
mov
insb
sbb
test
negl
stos
sub
loope
inc
mov
inc
nop
pushf
xchg
scas
xor
stos
fs
mov
sti
int3
dec
mov
mov
dec
shrl
jbe
add
add
inc
mov
xor
xor
cmp
clc
and
cmp
xchg
mov
push
xchg
in
xchg
xor
sbb
cmpsb
cmp
call
imul
bound
mov
or
loopne
int
mov
mov
xor
roll
sarb
arpl
adc
sub
roll
mov
int
imul
sub
jp
mov
rorb
cmpsb
cltd
xchg
loopne
adcb
movsb
mov
fimuls
nop
inc
ds
mov
insb
dec
out
iret
and
and
sub
jnp
gs
pushf
add
ss
ja
mov
movsb
lock
ljmp
fidivl
lahf
inc
and
repz
fwait
les
aaa
push
rcrl
fisttpl
dec
movsl
out
lret
fsubrs
fistl
outsb
cs
test
scas
mul
cli
push
pop
popf
xor
lds
not
stos
xor
cmpsb
mov
popa
push
dec
fdivrs
xor
addr16
push
cmp
adc
cmc
xor
mov
jno
push
in
and
mov
inc
rclb
cmp
cwtl
ja
adc
push
out
cltd
orl
pop
fcmovnbe
xchg
ja
into
mov
cmp
mov
fwait
inc
jno
daa
cmpsl
lcall
iret
movsb
sbb
xchg
lret
and
lds
jae
pop
jmp
cmp
adc
daa
sub
mov
mov
mov
mov
sub
pop
xlat
adc
add
fisubl
mov
add
outsl
call
out
ret
and
test
test
dec
lock
imul
iret
push
cltd
jg
inc
lret
cmp
lea
sub
stos
push
aaa
movsl
fdivr
hlt
xor
clc
xchg
movsl
stos
leave
aam
mov
rcrl
xchg
mov
sti
cmp
push
lret
add
clc
shlb
xor
fdivr
xlat
sbb
push
aam
jp
jo
xchg
pop
jmp
ss
aam
in
adc
cmpsl
pop
pop
outsb
in
loope
es
bnd
test
xor
lcall
cli
lret
call
out
fbld
jne
lods
sub
pop
lcall
pop
cmp
mov
rcll
mov
sbb
lahf
jp
scas
daa
add
ja
jns
out
jmp
adc
ss
push
cmp
out
add
and
cmp
stos
pop
or
movsb
pushf
inc
fisttpl
and
mov
pusha
jg
push
mov
add
pop
inc
jle
add
popa
js
pushf
pop
ss
ret
fsubrl
cmp
and
jl
rcrl
xorb
mov
pushf
pop
sbbb
cld
inc
add
cli
pop
inc
fldl
mov
ret
jge
test
in
xor
pop
into
mov
xchg
jns
jg
push
cwtl
add
testb
dec
inc
cwtl
out
out
dec
mov
or
xor
ficoms
xor
lret
cld
in
filds
aad
jmp
shll
mov
xlat
je
mov
scas
jne
pop
mov
pop
addr16
mov
sbb
jg
ja
scas
sub
dec
stos
dec
loopne
pop
mov
es
out
imul
sbb
inc
xchg
test
mov
and
mov
add
dec
scas
cltd
jb
pop
ret
ffreep
sub
fcomi
fcmovnb
dec
mov
cltd
pop
ffreep
stos
mov
int3
lcall
cmp
jno
loope
mov
push
das
dec
outsl
adc
cmc
push
mov
xor
jo
dec
sahf
mov
push
movsb
jo
std
cmpsl
or
addr16
call
daa
mov
mov
inc
jb
nop
push
data16
addr16
inc
movsl
cmp
out
xchg
adc
or
fstps
cmp
lods
data16
decl
mov
jecxz
mov
adc
dec
sub
xlat
add
xor
sub
xchg
lea
or
shlb
and
and
cmc
adc
pop
mov
add
fimull
xor
in
fidivs
push
sub
mov
jg
cmpsl
out
xchg
cmp
jb
call
dec
push
stc
pop
or
jno
sub
jae
cmp
jns
pop
adc
movsb
fimull
dec
imul
jge
adc
mov
lahf
adc
adc
push
adc
push
loope
out
adc
rolb
movsb
mov
test
je
jge
mov
shll
mov
xor
ret
lods
loop
jle
lock
jae
cli
lods
aas
inc
outsb
mov
or
add
xor
jae
add
insl
enter
mov
add
test
xlat
lcall
jmp
daa
xchg
out
inc
cmp
push
dec
push
cltd
jp
bound
fidivrl
jg
daa
mov
imul
lret
movsb
bound
sbb
aad
mov
mov
cs
lea
push
sub
jmp
sbb
dec
sbb
movsb
cmp
push
jns
jnp
adc
iret
mov
lcall
movsl
repz
add
leave
jecxz
jne
lock
mov
and
jg
xor
rclb
pop
in
mov
xor
mov
loopne
add
jb
insl
cltd
push
mov
lds
fcompl
stos
ljmp
add
cld
sub
les
and
sbb
mov
stos
repz
addb
testw
sub
lea
or
sbb
inc
xchg
std
dec
lahf
mov
dec
std
xchg
in
repz
out
stc
cmpsb
sbb
cmpsl
lods
mov
sbb
adc
cmpsb
imul
jg
cmc
dec
movsl
inc
cli
out
stos
or
flds
mov
rcrb
inc
jmp
xor
or
and
out
lcall
or
jge
sbb
rcr
popf
mov
ds
and
arpl
sub
into
cld
xor
jle
cmp
add
repz
test
ficompl
lock
jbe
sbb
rcl
cld
insb
in
cmc
ja
inc
cli
mov
mov
sub
cmpsl
notb
nop
add
decb
test
jp
cmpl
popw
sbb
sbb
fmulp
adc
lret
cs
xchg
ss
test
and
xchg
adc
ficoms
loope
out
inc
cmp
pop
subb
loope
or
dec
in
lahf
imull
subb
sbb
push
lds
mov
pop
cmc
jnp
in
pop
jge
cltd
adc
or
fdivrl
push
aam
cmpsb
rcll
test
add
push
jp
or
pusha
inc
sub
and
cmp
insl
push
outsb
jmp
shlb
adc
cmpsl
loopne
scas
inc
stc
test
jbe
jmp
out
adc
sahf
xor
arpl
lret
xchg
cmpsb
je
stc
ljmp
pop
jns
mov
jecxz
jo
arpl
addb
adc
int
adc
pop
mov
das
test
or
inc
mov
inc
je
or
ret
jnp
imul
pop
repz
push
dec
xor
adc
mov
shrb
mov
loope
lret
clc
push
outsb
add
fnstenv
popl
adc
mov
call
xchg
jg
xchg
xor
loop
insb
outsb
loopne
test
pop
in
mov
xlat
out
push
xchg
sbb
int3
aad
mov
xchg
loope
mov
sbb
je
popa
xor
adc
das
mov
xor
and
xlat
or
push
mov
sub
imul
fcompl
pop
lret
mov
xor
cmc
push
pop
stc
scas
das
sub
jle
fdivs
cmp
jle
insl
mov
test
ja
or
mov
inc
lcall
cmp
popa
lock
cmpb
movb
mov
mov
mov
sub
mov
adc
jns
fadds
sbb
or
mov
in
gs
jl
clc
int3
movsb
ret
push
mov
lods
ja
xchg
add
jnp
in
movq
movsb
sbb
lcall
mov
aam
rcrb
out
scas
icebp
icebp
pusha
test
adc
sti
addr16
mov
mov
xchg
cmpsb
mov
xor
mov
popa
into
jnp
fstpl
test
lret
push
imul
or
xor
jae
jnp
xchg
dec
cmp
jle
inc
xchg
loop
pushf
mov
fstpt
rcrb
or
push
add
mov
xchg
jp
inc
mov
xlat
and
cmpb
pop
fsts
dec
pop
rorb
cmpsl
loope
inc
jmp
inc
pop
push
sarb
out
jge
les
movsl
mov
je
in
and
movsb
push
mov
and
push
dec
into
out
popa
inc
and
push
arpl
and
loopne
in
push
lret
ljmp
leave
and
jp
fisubl
into
adc
scas
imul
xchg
add
fdivp
push
xchg
inc
or
std
pop
sti
pop
jl
iret
xchg
sarb
test
daa
test
fnsave
cld
add
mov
int3
mov
adc
mov
scas
pushf
fcoms
loope
dec
xchg
cli
cltd
dec
bound
idivb
xchg
divb
inc
mov
lock
cld
lahf
cld
mov
leave
aas
inc
iret
and
outsb
xchg
fldt
ss
pop
scas
dec
jne
sbb
add
cwtl
je
push
xchg
and
cmp
adc
mov
insl
mov
shll
or
xchg
xor
ja
cwtd
mov
test
repnz
jg
mov
push
cmp
andb
int3
mov
mov
les
hlt
add
mov
nop
push
shrl
shlb
das
ficoml
mul
mov
hlt
or
into
sub
mov
sbbb
mov
push
lods
lahf
jns
int3
iret
adc
fwait
xor
jno
or
arpl
stos
mov
xor
pop
pop
jne
enter
mov
xchg
xchg
xchg
mov
sbb
cmpsb
sbb
aad
imul
aaa
jo
mov
add
push
movsl
and
or
adc
push
xchg
sbb
rolb
pop
sarl
punpckhdq
xchg
enter
pop
lcall
aam
cmpsb
enter
add
cmc
dec
and
lock
and
sub
add
adc
xlat
fldcw
outsb
arpl
mov
roll
gs
lahf
in
or
repnz
cmpsb
push
push
rcll
std
test
and
pop
fsin
adc
sbb
scas
imul
mov
loope
pop
inc
dec
add
add
mov
xor
inc
aas
pop
fs
lods
push
rcrb
aas
jbe
leave
cmp
mov
adc
add
nop
xorl
ficompl
loope
mov
jo
cmp
sahf
or
scas
das
mov
mov
out
popa
dec
ss
push
mov
mov
lods
and
std
and
add
add
adc
stc
cmpsb
jo
xchg
pop
pop
jb
bound
mov
loope
iret
mov
jno
loope
out
loope
bound
test
pop
pop
pop
mov
ljmp
mov
add
hlt
test
mov
mov
test
outsb
addr16
pushf
dec
js
dec
lods
shrb
cmpsl
mov
in
push
or
dec
xchg
insl
hlt
cs
test
cmpsb
add
cmp
sti
inc
adc
sbb
dec
orl
and
pop
cs
jg
jnp
jbe
fcmovbe
push
sti
sbb
xorl
adc
jle
aas
push
movsb
jnp
ljmp
addb
and
std
adc
and
cmpl
sbb
mov
add
dec
xor
flds
pusha
jno
fdivrs
push
dec
sub
out
jg
sbb
cs
cmp
dec
pop
test
cli
or
jo
sub
adcl
cmp
and
xor
adc
xchg
sub
push
or
fisttps
insb
cmpsl
test
push
jge
xchg
aam
jno
loope
out
mov
mov
push
shll
stc
mov
add
adc
ret
xchg
mov
cld
xchg
mov
test
aaa
mov
and
and
add
mov
stos
xor
fisttpl
mov
adc
outsl
loop
xchg
mov
dec
test
sbb
data16
test
jo
push
imul
fbstp
cs
mov
inc
mov
movsb
dec
xchg
sbb
adc
scas
jnp
sahf
push
and
jl
mov
test
push
mov
sbb
ret
scas
adc
test
scas
orb
mov
sub
xchg
mov
jg
adc
mov
cmpsl
inc
xchg
roll
in
ss
movsb
jo
ds
testl
rorb
mov
xor
mov
insl
imul
push
sar
mov
popa
sub
adc
leave
clc
push
cmp
lret
sbb
xor
and
jo
pop
out
inc
mov
fucom
and
push
and
jle
loope
cld
pop
and
and
adc
sti
stos
cmp
test
adc
pop
or
sarl
jns
adc
lods
mov
out
cmp
rdtsc
sbb
loope
xchg
inc
mov
xor
mov
test
or
testl
mov
sbb
cli
pop
or
aaa
mov
adc
rcll
cld
cmp
sub
iret
in
fimull
pop
inc
cwtl
cmp
xchg
cli
outsl
pop
cmpb
pop
sbb
xor
inc
pop
shlb
mulb
adc
jl
cmp
jmp
outsl
shll
test
push
mov
mov
fcmovbe
rolb
out
mov
dec
push
sub
mov
push
js
and
xchg
adc
dec
jno
inc
lods
xor
imul
mov
or
xor
and
jle
fisubrl
push
adc
mov
scas
sbb
inc
orb
and
adc
push
mov
or
xor
push
aas
out
stos
cmp
and
loope
add
jne
imul
call
jg
mov
daa
fmul
mov
mov
js
adc
jmp
add
adc
loopne
sarl
lcall
jbe
cmp
pop
xchg
xor
movsb
lock
xchg
mov
xchg
pop
les
stc
ljmp
lock
mov
loope
cmp
mov
pminub
sub
adc
pop
lahf
lock
lods
sbb
mov
jecxz
xor
adc
aam
inc
inc
inc
js
movsl
cltd
push
jbe
xchg
icebp
push
inc
in
and
leave
in
repz
mov
minps
mov
hlt
loopne
movsl
mov
xor
ljmp
fisubs
jnp
fisttps
xchg
fnstcw
dec
add
stos
sbb
xor
je
lds
js
data16
imul
jecxz
jne
cmpsl
dec
aas
mov
mov
in
jne
leave
call
cmp
mov
mov
inc
pop
inc
inc
je
pop
or
sub
lcall
out
sub
sbbl
scas
or
push
sub
ficoml
xchg
insl
inc
push
xchg
sub
int3
out
mov
shll
loopne
mov
sub
mov
push
or
iret
data16
int3
inc
xor
iret
mov
aam
push
add
mov
sbb
pop
pop
mov
xchg
int
push
mov
imul
cmp
mov
sub
pop
call
or
divb
sbb
mov
repz
jle
icebp
dec
inc
xchg
orl
lcall
xlat
scas
pop
push
lcall
repnz
repz
or
xlat
inc
jb
inc
loopne
push
pop
adc
xchg
mov
inc
int
cltd
movsl
popf
jle
sbb
adc
adc
sbb
jne
cs
cltd
mov
xchg
ja
adc
adc
pushw
xchg
jmp
icebp
sbb
leave
xlat
fbld
xchg
mov
loope
push
aas
mov
lds
lea
cmpsl
or
aas
rclb
sub
cmc
push
or
add
loope
les
xchg
jb
jbe
shll
xlat
and
movsl
popa
pop
pop
stos
push
mov
nop
adc
sub
mov
fdivl
pusha
mov
out
xchg
jno
imul
pop
lods
sti
mov
pushf
enter
pop
xor
pop
ficoms
les
lods
scas
pop
adc
leave
inc
dec
add
aaa
and
sbb
ret
pop
rorb
js
jno
push
aad
shl
fdivrl
shrb
fstps
fistps
inc
insb
jmp
dec
cmpb
pop
adc
popf
daa
es
cmpsl
mov
or
pop
fimull
inc
pop
sub
mov
mov
fnsave
xor
push
xchg
dec
sbb
inc
std
pop
lods
das
je
mov
out
adc
test
push
cmpsb
cltd
inc
rorl
sub
xchg
sub
jae
mov
roll
jle
scas
lea
test
fwait
add
dec
xlat
add
jle
pop
lea
dec
inc
pop
test
cmp
ds
dec
or
pop
sbb
xor
mov
cmp
into
cli
aaa
jne
insl
repz
es
daa
or
daa
aaa
push
jecxz
inc
int3
sub
jne
adc
loopne,pn
inc
mulb
mov
int
mov
sub
mov
adc
ja
movsb
jns
mov
sbb
sbb
xor
movl
in
xor
not
mov
imul
nop
push
cmp
fs
scas
cwtl
cmp
arpl
into
insb
fs
popf
ret
sub
in
enter
ds
in
shl
mov
jno
push
adc
sahf
lret
fisubl
ja
xor
icebp
mov
rorb
dec
mov
mov
sti
fsubrl
jne
out
movsb
in
aad
mov
dec
inc
in
xchg
lock
add
push
shl
mov
in
adc
and
mov
and
mov
adc
or
gs
ficompl
mov
cmp
jae
hlt
adc
sarl
push
imulb
mov
imul
jmp
outsl
daa
push
dec
and
mov
xchg
cltd
sbb
in
sbb
fsubrs
movsl
cmp
stos
adc
push
lret
loop
mov
mov
jle
mov
inc
hlt
movsl
arpl
or
jae
cmpsl
mov
ds
cmp
xchg
fsubl
and
in
inc
js
dec
enter
and
and
int
pop
push
mov
jne
rol
xchg
test
jo
movsl
dec
cmp
xor
jne
inc
or
or
les
jl
cmp
call
sub
popa
cmp
addl
cmpsl
addr16
mov
fnstenv
cmp
adc
js
cmpsb
nop
sbb
cmc
xchg
cmp
out
xchg
add
insl
jge
mov
xchg
stos
mov
mov
pop
scas
lret
xchg
mov
sub
mov
push
push
loope
mov
push
dec
outsl
test
ss
mov
mov
nop
cli
push
repnz
and
add
pop
mov
into
fcmovnb
or
mov
pop
push
push
jae
mov
push
sbb
incb
jns
inc
std
testl
xlat
clc
mov
cwtl
adc
cmp
push
sbb
xchg
pop
test
jp
sub
jbe
inc
cli
sub
push
insb
mov
pop
out
xchg
adc
lahf
pusha
jo
sbb
aad
pop
fs
jge
sbb
insl
sbb
orl
mov
mov
push
inc
sub
shl
popl
pop
shlb
push
test
mov
scas
mov
sahf
pop
out
mov
test
xor
loope
fwait
ss
sub
pop
fwait
int
cmp
jmp
adc
mov
pop
pop
js
popf
imul
pop
or
sbb
dec
daa
or
and
shll
pop
leave
imull
xchg
inc
dec
jae
xchg
int3
stc
or
jle
aas
mov
ja
pop
ret
mov
addr16
call
ret
xor
faddl
add
mov
insl
aad
aaa
fs
fcompl
call
jmp
test
add
inc
xor
lahf
mov
xor
inc
pop
stc
cmp
xchg
dec
nop
fdivs
or
mov
ss
adc
mov
push
cs
popa
pop
xor
fcompl
mov
mov
xchg
clc
and
adcl
mov
add
lret
push
inc
mov
mov
fcoml
dec
aaa
pop
pop
int3
adc
mov
or
repnz
cmc
pop
imul
mov
lods
loop
sbb
sbb
mov
movsb
dec
push
jle
jecxz
ror
mov
cmc
cmp
and
sub
xchg
xchg
jno
call
sbb
adc
cmp
inc
pop
and
repz
roll
test
cmpsb
sub
inc
pop
iret
add
sbbb
call
pusha
in
stc
xchg
add
sbb
or
sarl
mov
adc
pslld
movsb
or
fldlg2
aam
arpl
in
popf
lcall
sub
mov
daa
xlat
sub
mov
mov
aam
insb
jnp
sub
and
insl
xchg
push
iret
dec
lcall
push
and
jge
pop
push
out
xor
lcall
scas
gs
mov
popa
call
pop
sti
xor
lea
inc
mov
icebp
in
test
je
add
mov
push
arpl
adc
addr16
and
in
jmp
mov
dec
xchg
add
js
mov
fsts
fcompl
mov
add
inc
repnz
mov
cmpsl
out
fildl
mov
movb
dec
icebp
xchg
push
cmp
mov
push
or
jmp
adc
loop
in
jg
jb
sbb
push
xchg
adc
inc
cli
test
sub
rolb
data16
in
or
push
jmp
xchg
int3
arpl
call
cmpsb
les
cmpl
fisttpl
test
xchg
pushf
pop
cmpsl
in
in
jnp
and
xor
aam
cld
popf
test
pop
sbb
mov
cltd
pop
push
call
sub
into
add
push
push
lcall
in
push
jle
cli
cmp
mov
dec
push
sub
int
enter
roll
mov
mov
mov
sbb
cmp
inc
popa
pop
iret
stos
xchg
aam
cmc
out
popa
xor
jns
adc
push
gs
addb
sub
lds
xor
sbb
subb
enter
ficoml
jae
and
adc
xchg
testb
imul
add
mov
stc
lds
push
fwait
jp
ret
pop
scas
push
ror
mov
xor
push
popa
push
mov
push
sbb
xchg
aad
dec
fdivrl
loop
or
std
push
xor
mov
pop
and
sbb
dec
out
jmp
loope
mov
cmp
pop
adc
aas
sub
inc
dec
addr16
and
cmp
dec
mov
push
cmp
pop
jne
rcrl
outsb
mov
ljmp
testl
and
dec
add
or
mov
test
out
mov
push
loop
movsb
xor
mov
push
cli
and
divl
shl
dec
push
jne
cld
or
int3
cmp
xchg
xchg
je
fiadds
jmp
or
inc
iret
rolb
mov
jp
test
test
jo
push
or
and
or
jmp
call
jle
popf
push
nop
loopne
jmp
insl
jae
push
sub
rcll
sbb
jp
xchg
test
cmp
test
loop
out
imul
out
stos
xchg
jno,pn
sub
mov
cltd
or
loopne
clc
lcall
aad
fldcw
mov
les
inc
out
add
mov
out
lock
pop
popf
call
lods
in
repnz
add
int
mov
icebp
mov
lret
imul
mov
and
test
add
mov
int3
cmp
cmp
dec
mov
hlt
and
mov
stos
xor
or
cmp
jno
or
je
imul
mov
push
pushf
aad
dec
aas
insl
sar
xor
ja
gs
icebp
mov
in
jmp
ja
adc
lock
insl
and
push
ljmp
std
adcl
fimuls
mov
sub
ret
enter
adc
sub
cmp
jl
lock
xchg
inc
sahf
jae
adc
mov
xchg
pop
xchg
roll
push
mov
stos
out
inc
push
jb
jge
loopne
loop
sub
or
daa
adc
mov
sbb
fs
adc
popf
or
mov
xor
lock
push
mov
lahf
adc
dec
ficomps
and
std
pushf
cmp
ds
data16
aad
cmc
push
outsb
lods
addl
xlat
popf
pop
insb
push
lret
out
xor
mov
mov
fs
pop
stos
ds
mov
xchg
int3
or
aam
add
lock
lea
sbb
push
pop
addr16
mov
push
add
mov
in
mov
adc
mov
fbld
out
cli
cld
popa
dec
mov
out
movsl
and
pop
pop
cmp
cld
mov
shrb
mov
test
pop
xchg
ds
leave
mov
shll
xor
pusha
cmp
add
jo
adc
mulb
fcoml
mov
add
inc
and
faddl
ljmp
call
fstps
addr16
addr16
aas
cmp
shr
addb
push
loop
pop
mov
push
mov
bound
cmp
sub
test
das
pushf
loope
xchg
xor
xchg
push
inc
lahf
subl
aaa
lock
sti
loopne
pop
push
sar
scas
push
daa
and
mov
xchg
cld
jecxz
add
lcall
xchg
pop
push
scas
pop
lock
push
pop
xor
mov
sub
insl
loop
aas
in
adc
jge
push
ljmp
xlat
in
insb
jmp
push
push
adc
sbb
lcall
clc
mov
push
dec
pop
push
push
xor
dec
jmp
dec
push
shlb
mov
pop
scas
lods
fistps
in
jae
push
rcr
mov
jae
sbb
mov
push
and
nop
pushl
sti
push
mov
jo
std
or
xorl
inc
xchg
pop
hlt
xor
jns
rdtsc
cmc
pop
pop
and
add
xor
push
cmp
cmp
mov
xor
jne
in
gs
cwtl
lock
je
mov
mov
push
mov
and
stos
push
stc
faddl
xor
mov
int
pop
mov
push
loope
sub
xchg
mov
daa
mov
loope
sbb
out
cwtl
sbb
sbb
cmpsl
push
sub
push
insb
push
scas
daa
mov
sbb
add
fstl
loopne
leave
insl
popf
jp
es
pop
dec
xchg
push
das
xor
mov
outsb
inc
cltd
sahf
iret
dec
aam
pushf
test
outsl
sbb
dec
adc
lahf
movsb
mov
leave
out
std
repnz
and
pusha
jo
push
pop
pop
pop
sbb
mov
sbb
shll
push
inc
out
pop
lcall
add
int
outsl
mov
xlat
pop
ljmp
stos
fbld
imull
lock
test
ss
sbb
ljmp
roll
nop
mov
shlb
mov
mov
pop
mov
xor
repnz
lret
movsb
jns
cmpsb
ss
lods
inc
hlt
mov
xchg
hlt
sbb
pushf
lods
mov
add
inc
in
ret
les
jae
dec
rolb
mov
and
jl
ror
inc
stc
ret
in
or
movsb
jmp
pop
sub
test
dec
pop
out
push
mov
adc
arpl
dec
aaa
mov
ss
push
dec
dec
pop
push
push
dec
xchg
lock
xchg
mov
loopne
popa
cld
cmp
std
loope
jb
push
mov
mov
aad
add
pop
xchg
pop
cltd
jns
das
mov
xchg
aam
cltd
loop
out
iret
jb
bound
loop
add
aad
mov
es
add
test
push
mov
cmp
dec
andb
mov
push
jmp
adc
sarl
jg
out
push
mov
lods
aam
and
xchg
xor
mov
pop
aam
mov
in
cmp
lea
imul
adc
pop
in
shl
inc
jne
jl
or
pop
loopne
or
sub
ret
sbb
scas
nop
xchg
push
cmp
push
rorb
jb
sub
sbb
jp
mov
xchg
adc
loop
mov
fnstenv
xor
scas
sub
sub
jg
mov
test
cmp
fmuls
in
lahf
sbb
fidivrs
sbb
fldcw
dec
arpl
mov
pop
push
xchg
pop
mov
xchg
loope
mov
cli
lock
sub
scas
mov
cwtl
int
xor
insl
jge
and
jle
and
mov
dec
jle
mov
dec
stos
decl
arpl
in
psubsb
cmp
adc
lahf
addr16
and
cli
stc
xor
xchg
outsb
push
jmp
scas
adc
mov
into
into
mov
popa
repnz
out
dec
in
sbb
adc
mov
push
out
xor
cmp
sbb
dec
js
je
daa
pop
lds
sub
and
inc
leave
sub
mov
aaa
addr16
subb
inc
stos
test
mov
pop
loop
inc
mov
test
stos
xchg
decb
inc
inc
imul
push
cmp
mov
je
mulb
push
push
nop
push
pop
inc
loop
adc
adc
pop
out
insl
lret
jnp
sub
inc
push
rcrb
stos
aad
pop
sbb
jge
inc
or
daa
mov
sbb
fistpll
push
pop
and
xchg
inc
repz
ret
jns
xor
test
pusha
mov
sbb
stos
stos
mov
and
mov
test
sbb
fidivs
push
js
mov
cld
pop
movsb
inc
lea
ja
xchg
mov
mov
cli
xor
xor
push
mov
push
mov
insb
repz
loope
out
add
pusha
ljmp
enter
sub
in
push
xor
mov
daa
jae
mov
aaa
xchg
and
imul
test
fcoml
pusha
iret
xorb
out
or
mov
push
mov
add
jb
mov
jge
js
mov
push
adc
lahf
shl
add
subl
push
cmp
int3
imul
inc
mov
add
mov
lea
push
subb
ret
and
out
pop
mov
mov
adc
dec
sbb
enter
test
xchg
mov
mov
sub
stos
ja
hlt
xchg
sub
push
out
imul
jb
push
ljmp
adc
jnp
sub
sbb
int
jb
fildll
xchg
div
test
es
outsb
insl
test
mov
loop
push
jecxz
pop
in
outsl
inc
dec
fwait
push
push
ds
xor
mov
push
mov
and
push
and
pop
inc
xlat
test
insl
adc
dec
mov
movsb
shrb
and
ljmp
fs
sarb
mov
aas
adc
inc
add
mov
xlat
mov
sbb
movsb
mov
adc
pop
stc
sbb
scas
push
aam
icebp
xchg
scas
pop
movsl
mov
repnz
out
push
mov
test
push
xor
nop
sarl
xchg
xchg
pop
or
cmp
inc
or
and
test
sbb
shll
js
cli
xchg
jmp
idivb
andb
sbb
pop
cs
cs
scas
dec
pop
in
ja
adc
adc
enter
jp
gs
xor
ja
aas
sub
ret
xor
xor
iret
dec
test
cmp
mov
cs
sti
mov
fiaddl
jae
loope
out
push
dec
mov
decb
xchg
cmp
mov
out
mov
std
jae
adc
nop
stos
add
sarl
sbb
dec
inc
ss
xor
mov
cmpsb
mov
dec
mov
cs
mov
push
shll
xchg
shl
loopne
das
ss
inc
xchg
push
mov
pushf
dec
push
add
insb
shl
sub
out
dec
and
mov
adc
lahf
xchg
pop
or
hlt
sub
mov
jmp
sbb
cli
ret
jno
fnstenv
adcl
mov
fucom
iret
scas
sub
add
pextrw
ss
cltd
cmp
fadds
fcmovne
out
stos
aad
cmp
xchg
mov
pop
mov
sbb
in
push
out
pushf
jl
out
sahf
mov
jno
in
add
cli
push
mov
mov
and
pop
roll
es
adc
sbb
aas
outsb
mov
and
cli
xchg
sbb
jae
fsts
xchg
mov
icebp
ret
mov
lods
loopne
cmp
add
outsl
pop
mov
sub
mov
aad
aas
js
dec
in
fadds
lea
sub
and
lds
push
dec
outsb
nop
mov
jl
pop
mov
mov
mov
outsb
or
daa
mov
push
xchg
push
stos
fcompp
ret
jl
out
inc
lret
inc
xchg
jb
and
push
cltd
mov
inc
js
add
push
std
mov
cmp
dec
push
jecxz
out
mov
clc
jg
adc
jbe
mov
cmp
mov
mov
inc
lds
into
push
clc
cmc
xchg
mov
add
cld
loopne
and
popf
enter
sbb
ficompl
jbe
arpl
jno
cmpsl
cmpsl
insb
cmc
jae
or
add
mov
neg
jecxz
test
imul
ss
lahf
inc
insb
popa
iret
stc
mov
mov
scas
inc
shll
test
or
lods
dec
mov
adcb
dec
lret
pop
les
testl
cmp
cltd
enter
mov
fwait
push
jp
xor
outsl
sub
push
push
fldt
inc
adc
sub
mov
jbe
pop
dec
jo
aas
sbb
cltd
cmc
fbld
mov
mov
adc
pushl
mov
xchg
ljmp
dec
sbb
xor
ret
les
push
fiadds
int3
sbbb
push
adc
int
xor
fmull
repnz
shl
in
repz
out
mov
pop
inc
dec
insl
pop
push
insb
sbb
dec
es
bound
cmpsl
sarl
push
xor
scas
lods
std
mov
jae
jns
jle
in
out
out
leave
dec
stos
add
lret
repnz
rol
pushf
mov
cld
adc
sti
dec
or
xor
or
mov
or
mov
pop
inc
data16
mov
lock
xor
dec
inc
dec
cwtl
mov
outsb
mov
or
jecxz
xchg
push
push
bound
scas
enter
addr16
cld
add
out
push
inc
pop
test
les
cmpsb
jmp
subl
fs
std
sub
hlt
scas
dec
pop
inc
in
lret
stos
aas
aad
add
movsb
movsb
dec
fisttps
xchg
pop
jl
pusha
xchg
push
cmp
pop
xchg
sub
aas
dec
push
cs
stos
push
xor
dec
xchg
call
lcall
and
xor
cld
inc
nop
mov
in
shll
sub
xchg
mov
and
test
add
mov
mov
sub
pop
xchg
into
sbb
cmpsb
sbb
cmp
mov
adc
jbe
adc
lret
test
adcl
repnz
ljmp
mov
test
jne
inc
or
dec
fs
fs
sti
cmpsb
adc
and
daa
or
mov
ss
push
shlb
add
fstp
popf
add
mov
xchg
xchg
aaa
xchg
mov
test
and
adc
stc
mov
cld
stos
fcmove
mov
aas
enter
sar
fstl
adc
cmc
pop
out
cmpsb
xlat
dec
lods
rolb
cwtl
mov
jecxz
push
or
adc
jne
fiadds
add
mov
testl
ss
into
sub
push
inc
cmc
loopne
das
and
test
cli
add
mov
hlt
insl
cmp
cmp
cld
mov
xor
addr16
dec
cmc
mov
pop
jns
imul
cmp
test
in
add
xchg
push
mov
lahf
mov
pusha
cmp
outsl
dec
and
mov
movsl
mov
out
stos
xchg
testl
mov
mov
fidivl
test
and
cmp
pop
cmpsl
cld
or
aam
xor
xchg
push
setbe
fcmove
test
cmp
idivb
cmpl
lahf
scas
xchg
push
xchg
cmp
xchg
mov
dec
cmp
mov
mov
repnz
push
imul
xchg
jnp
mov
les
sbb
mov
in
mov
lods
fisubl
aaa
mov
test
add
mov
cmp
scas
divb
shlb
sbb
fistpl
lods
int3
aas
in
and
xor
imull
loopne
pop
mov
popa
imul
jno
or
or
dec
xchg
add
pusha
adc
add
mov
leave
ss
stc
hlt
gs
add
adc
sub
push
stos
insl
lea
sbb
sbb
inc
jnp
pop
mov
or
push
mov
imul
aad
into
enter
je
xor
adc
xor
sbb
sub
mov
mov
xchg
dec
outsl
cmp
roll
push
add
mov
sbb
pop
cmpsb
mov
arpl
cmp
cmp
dec
bound
adc
leave
or
into
out
test
int3
mov
xchg
cmp
or
lods
repz
icebp
xchg
dec
mov
das
xchg
shrb
dec
test
mov
mov
test
mov
iret
inc
in
pop
xchg
imul
xchg
mov
popf
es
inc
xor
mov
jle
dec
mov
dec
loopne
xor
repnz
jo
mov
push
sub
sti
and
sub
out
cld
mov
pop
or
ds
adc
jecxz
insb
xor
mov
outsb
mov
enter
gs
aad
loope
push
add
pop
or
mov
std
in
mov
and
loopne
cltd
out
sti
sub
and
fistl
ret
clc
dec
xor
loope
in
dec
and
ljmp
cltd
mov
mov
lods
add
cld
clc
popf
mov
add
outsb
stos
and
out
es
stc
jmp
imul
movsb
out
into
sbb
xchg
jae
adc
lods
aam
jns
out
sbb
dec
inc
inc
and
outsb
and
xchg
std
cmp
fcoml
dec
push
lds
ret
or
pop
xchg
inc
incb
pop
and
addr16
setbe
sbb
jmp
pop
mov
xor
in
fsts
outsb
mov
inc
jo
movsb
or
mov
cli
xchg
push
mov
jae
xor
mov
shll
add
adcb
mov
dec
cltd
sub
fwait
loope
test
push
stc
cltd
lcall
repz
cltd
inc
lods
jns
jmp
xor
movb
shrb
sub
arpl
orb
leave
pop
fwait
push
hlt
cmp
lds
inc
dec
orb
jne
iret
in
movsb
lahf
pop
mov
push
scas
sti
cwtl
xchg
jns
in
shlb
mov
sbb
por
dec
xchg
fidivs
lret
insb
scas
jae
jl
mov
mov
sbbb
jg
sbb
pop
cmp
mov
cmp
sbb
adc
mov
sarb
pop
jl
jmp
or
push
and
je
mov
jbe
les
xlat
rcrb
push
int
lock
xor
add
xlat
sarb
bound
es
push
leave
fiaddl
imul
push
pop
icebp
push
gs
es
iret
stc
push
xor
push
pushf
mov
stc
out
dec
hlt
ja
ss
movsl
aam
push
and
adc
mov
lock
cmpsl
jl
dec
loope
mov
or
idivl
and
mov
xor
cmp
add
adc
hlt
pop
add
stos
jge
je
mov
adc
das
sbb
into
shll
mov
cmc
loop
jge
addl
cwtl
imul
out
hlt
xor
cwtl
pop
cltd
pop
lret
ljmp
cmp
or
test
jo
sub
leave
sbbl
add
mov
mov
pop
jle
jae
lods
adc
xor
in
inc
movsb
call
dec
sbb
rcl
movsb
cmp
dec
inc
lret
pop
inc
hlt
and
cmp
popa
mov
icebp
into
ficomps
and
loope
aam
push
cmc
mov
idivl
lret
gs
lock
xlat
fwait
lret
loopne
and
ja
fwait
data16
dec
push
stos
xor
mov
mov
mov
andl
popl
xor
cli
xchg
scas
imul
call
ds
scas
push
inc
dec
inc
cmpsb
pop
xchg
sbb
lock
mov
cwtl
jbe
adc
cmp
jmp
dec
movsb
subl
cld
fmuls
scas
jb
insb
fisubrl
or
push
add
stos
push
adc
cwtl
cmpsb
mov
cmp
push
out
dec
xchg
insl
cmc
xor
dec
iret
sbb
mov
lret
inc
add
ss
mov
cmp
jmp
dec
push
push
test
jecxz
mov
push
insb
xchg
jae
mov
rcl
fstps
inc
xor
push
dec
pop
cmp
mov
repz
lock
dec
data16
ret
ljmp
cwtl
mov
xorb
inc
insb
pop
sbb
or
xorl
pop
lods
mov
mov
fs
jnp
adc
cmpsb
loopne
bound
out
or
aas
das
int
test
add
aas
sub
in
jo
and
xchg
jmp
std
push
sub
call
popf
gs
popa
xor
in
jl
mov
and
cmpsb
ret
dec
mov
sti
test
popf
and
inc
and
scas
movsl
inc
scas
or
xchg
or
fistps
lahf
mov
movsl
mov
cmp
cmc
push
xchg
dec
loopne,pn
std
js
inc
cmpl
jp
push
jge
xor
push
xor
xchg
and
fcmovu
sahf
test
cld
mov
orl
inc
sub
bound
xchg
ja
dec
das
sub
in
ret
xchg
stc
int3
les
std
jb
je
jge
mov
js
dec
push
sbb
or
dec
inc
jnp
mov
int3
pop
jge
cs
pop
je
popa
popf
sbb
roll
aaa
add
mov
xchg
push
pop
inc
scas
push
loope
call
shlb
mov
jae
mov
insb
fldt
xor
rolb
out
lcall
sbb
add
mull
pop
pop
hlt
add
mov
cwtl
lock
and
xchg
push
test
mov
call
sbb
in
cmp
jp
popa
adc
gs
and
les
pushf
scas
int3
or
push
enter
dec
rcll
inc
dec
sub
repz
ficoms
lret
addl
cmp
xor
subb
sbb
icebp
mov
outsb
les
mov
dec
aas
and
loope
fildl
filds
cmp
cmp
das
or
jnp
adc
xorl
mov
xchg
xor
mov
xor
jno
mov
iret
inc
add
or
jae
xor
sbb
push
xchg
sahf
fsubl
lret
fldenv
fwait
mov
rclb
stc
in
cmpsb
jae
mov
movl
mov
aam
aad
mov
or
sahf
jae
fisubs
out
push
lods
decb
je,pt
push
sbb
and
mov
jno
movsb
mov
lea
jle
subl
and
jno
leave
xor
lahf
fbld
test
jg
out
jecxz
or
adc
ja
sbb
mov
mov
outsb
int3
adc
mov
movsl
mov
cmpsb
jb
outsb
dec
cld
cwtl
iret
or
sbbb
lea
dec
jecxz
jb
or
stc
inc
insb
stc
sbbb
dec
dec
cmp
fwait
sti
int
addr16
jmp
jl
jnp
mov
push
inc
insb
dec
jl
bound
test
or
or
daa
movsl
adc
movsl
mov
xchg
aad
dec
xchg
cwtl
pop
aad
es
or
ljmp
fidivrs
stos
stc
mov
out
jne
idiv
rcl
cld
jp
push
xchg
int
mov
and
adc
sahf
adc
shll
out
std
lea
dec
push
int
insl
xor
add
jl
fstp
sub
fsubl
mov
pop
stos
xor
mov
and
aad
push
push
fwait
and
pushl
mov
push
imul
jo
pop
push
mov
or
pushf
inc
xchg
lock
lock
bound
mov
inc
push
fisubs
ffree
loopne
add
test
and
movsl
shrl
test
les
or
cs
lods
mov
sbb
dec
jge
adc
lock
add
cli
cmp
aad
ljmp
jne
xor
push
jl
movsl
roll
jnp
mov
or
push
jle
pushf
ljmp
in
lods
inc
lret
mov
leave
pushf
cmc
sbb
sub
mov
andl
adc
ja
aad
pop
lcall
out
sub
dec
push
xchg
cs
dec
sbb
mov
or
jns
sbb
cs
repnz
in
mov
jae
inc
mov
push
fstp
xlat
adc
dec
movsb
sub
fisubl
test
jle
rcrl
in
inc
sub
lcall
and
pop
push
loope
mov
test
add
fwait
xchg
lret
mov
mov
shlb
jno
pusha
sub
movsl
mov
dec
enter
mov
in
test
dec
in
leave
jb
imul
ret
sub
and
sti
push
xchg
outsb
xor
jnp
clc
std
adc
icebp
xor
aam
inc
cmpl
or
dec
pop
int3
mov
or
andl
gs
sub
sub
call
push
fs
xchg
aam
mov
inc
out
and
pop
inc
sub
shrb
xchg
sahf
jo
sub
insb
shll
add
daa
pop
cli
xchg
push
out
shlb
xor
hlt
xor
insl
aad
jno
lret
push
mov
and
mov
rclb
mov
mov
loop
and
jl,pn
popf
rorl
adcl
pop
cwtl
sub
jae
ret
mov
push
jno
aaa
xchg
lods
imul
imul
ds
jle
dec
into
andb
add
shl
out
dec
cmp
mov
insb
and
dec
fcoms
sub
xchg
inc
cmp
in
mov
xchg
outsl
inc
shlb
pop
pandn
cmp
xor
xor
enter
mov
mov
out
outsb
mov
lea
popf
cmp
dec
mov
lret
jp
rcrl
cmp
int3
lods
cli
fwait
cmp
rcrl
loope
or
cmpsl
dec
sbb
push
dec
cmp
push
repnz
je
xor
adc
or
cld
cmc
lea
dec
fildl
rcl
xchg
es
mov
mov
gs
push
int
pop
sub
ret
jl
test
aad
pop
cs
rorl
in
in
fdivrl
cld
insl
lret
fwait
leave
nop
out
mov
cld
pop
push
sub
and
add
movsb
push
mov
daa
mov
sbb
int
and
subl
or
mov
jb
pop
les
add
cmp
cli
mov
mov
mov
mov
sub
adc
or
and
dec
inc
xchg
push
mov
sbb
add
les
mov
or
jb
aad
pop
sbb
adc
dec
loop
pop
mov
leave
and
repz
repz
fs
std
pop
push
mov
shl
jmp
je
cld
mov
sbb
mov
inc
mov
daa
icebp
adc
rorl
pushf
lds
mov
lds
push
movsl
leave
dec
loope
inc
pop
mov
mov
test
add
mov
stc
xlat
es
mov
push
jecxz
rcll
in
push
mov
in
lret
push
mov
data16
rorb
add
sub
mov
and
imul
aad
or
or
scas
clc
out
cmp
lea
xor
push
push
push
sar
xor
icebp
or
cld
sbb
xchg
xchg
clc
fsubrs
inc
fwait
dec
subl
hlt
orb
je
movsb
insb
loopne
call
lea
push
mov
jl
inc
stc
xlat
cmp
sbb
sbb
or
sbb
stc
lds
jge
lods
repnz
cmp
push
pop
cld
and
add
push
outsb
sub
add
movb
fcmovne
popf
mov
bound
push
add
pop
mov
outsl
popf
leave
xchg
test
cmpsb
cmp
in
jecxz
out
leave
dec
out
adc
sbb
xlat
mov
inc
sbb
pushf
push
adc
add
lea
pop
mov
cmp
vpaddw
jmp
out
clc
push
in
jmp
cmpl
mov
and
scas
insl
mov
sahf
je
cmp
insb
icebp
jns
pop
cmpsb
ds
pop
int3
test
hlt
xchg
int3
test
cmpsl
cltd
cli
jmp
jmp
cwtl
push
cld
rolb
cmp
loop
sub
inc
les
jno
adc
inc
pop
out
call
xchg
dec
leave
xchg
insb
insb
jle
xor
in
xor
add
loope
lret
jle
mov
xchg
or
rclb
cltd
es
push
sbb
mov
ds
imul
push
js
pop
das
jae
insl
cli
cmc
fwait
sub
shrl
aad
adc
xchg
movsb
mov
xabort
fldl
inc
push
mov
leave
inc
mov
loop
xor
dec
xor
push
mov
xchg
fbld
test
fimuls
bound
mov
femms
or
sub
add
inc
or
ljmp
sbb
fs
mov
push
jecxz
ds
es
test
ds
pop
repnz
mov
faddp
pop
scas
and
dec
les
orl
and
aas
js
jbe
scas
pop
jb
mov
jo
dec
push
xchg
xchg
lds
xor
repz
mov
push
test
mov
cmp
loope
leave
jle
xor
pop
xchg
loopne
mov
pop
out
adc
enter
out
addr16
fisubl
test
sti
xchg
lcall
aas
test
loop
mov
lret
mov
iret
dec
repnz
add
cmpl
jnp
lods
adc
cwtl
clc
in
fcomi
push
mov
sbb
jle
cmpsb
test
jnp
adc
or
inc
xchg
repnz
outsb
xor
mov
or
mov
stos
mov
xor
mov
adc
adc
push
out
fsubl
leave
adc
sub
sub
int
adc
cmc
out
mov
dec
sbb
mov
jns
or
stc
lret
and
ss
pop
ss
mov
test
mov
test
xor
pop
lock
pop
mov
int3
call
or
pop
por
ja
xor
sub
inc
lcall
cmc
and
loop
sti
jmp
test
cli
lahf
sub
pushf
cld
mov
inc
xor
add
pop
mov
xchg
mov
inc
push
inc
mov
and
cld
ss
xor
lret
fidivs
leave
cmp
and
sub
mov
test
dec
and
daa
hlt
icebp
mov
scas
jmp
cmp
andnps
cmp
xchg
lahf
mov
xchg
adc
adc
jmp
and
mov
out
out
pop
xchg
pusha
pop
jno
aaa
bound
aas
ds
mov
add
jns
sub
nop
std
sbb
not
jmp
or
cmp
scas
lea
sub
add
mov
cmp
inc
and
sbb
fbld
mov
aam
jmp
lock
push
mov
js
dec
cmp
xlat
or
pusha
jmp
les
ffree
pop
sti
arpl
andb
xchg
xchg
inc
mov
xor
dec
jp
mov
cmp
pop
lret
adc
test
mov
js
bound
ljmp
sbb
ds
pop
or
lods
stc
adc
or
or
out
mov
xchg
and
popa
je
xchg
pop
xlat
mov
and
std
jmp
shr
fs
notl
out
mov
adc
mov
mov
pushf
xchg
push
inc
popf
stc
pop
cwtl
lock
jo
cld
jo
mov
bound
jl
add
sub
test
jnp
and
push
stos
inc
xlat
popf
js
fcmovbe
mov
jle
sbb
adc
cmp
push
jb
jbe
jp
test
les
inc
movsb
hlt
mov
and
gs
scas
push
pusha
mov
fldcw
dec
insb
iret
or
or
adcb
pop
mov
xor
lret
push
daa
fwait
inc
call
test
rcll
loopne
inc
xchg
xor
std
jl
xchg
push
cld
pop
mov
cmp
dec
xchg
and
pop
xor
cli
push
andb
in
aas
sbb
jns
xchg
or
add
jb
clc
cli
repnz
dec
pop
sbb
lds
adc
and
scas
xchg
dec
scas
jmp
or
jmp
je
xchg
xor
pop
jnp
jge
lahf
outsl
out
repz
pop
and
ds
clc
mov
add
xchg
vpminub
outsl
add
sub
addb
xlat
call
dec
jbe
pop
lret
mov
add
adc
cmp
xchg
shll
sub
mov
sbb
sbb
mov
out
sbb
push
out
mov
iret
mov
mov
das
cld
sarb
in
test
pop
mov
enter
inc
push
mov
or
outsb
pop
aaa
test
add
in
jge
mov
adc
mov
es
pop
mov
adc
dec
es
das
cmp
mov
addl
sub
inc
in
cmp
notb
jecxz
test
popf
xchg
adc
cmp
dec
mov
or
lahf
dec
pop
jmp
cli
adc
mov
lods
arpl
sbb
popa
adc
fcmove
int
add
es
mov
adcl
add
hlt
ss
xchg
inc
pusha
icebp
push
fcomip
clc
icebp
pop
fstps
mov
push
js,pn
adc
imulb
jae
loopne
and
or
cmpl
xchg
bound
ret
add
pop
addr16
imul
je
mov
pusha
xor
std
stos
rorb
and
or
xchg
or
cli
xchg
pushf
cmp
std
and
inc
js
push
leave
in
pop
icebp
xchg
fldlg2
dec
pop
outsb
fildll
test
lds
incb
jns
into
adc
dec
sub
or
movsb
in
sub
mov
ret
mov
xchg
cltd
loopne
sub
leave
jb
inc
mov
ret
bound
cwtl
lods
add
or
or
push
and
mov
xchg
ljmp
loopne
xor
in
adc
mov
lret
sbb
mov
and
test
and
mov
sub
push
mov
sbb
jo,pn
push
xchg
xor
mov
filds
repnz
adc
lret
dec
cmpsl
jne
ds
nop
bound
fsts
imul
and
xor
cld
mov
fld
push
pop
aam
shll
mov
popf
jb
cli
js
das
fcomi
movsb
xor
outsl
dec
mov
vpsubsb
shll
scas
test
mov
nop
popa
in
fcomps
xor
lahf
xor
xchg
in
subl
fdivrs
jge
lods
mov
roll
push
jae
mov
dec
xor
ja
ss
mov
dec
push
int
or
cmp
movsb
ret
addb
inc
dec
or
sub
fcmove
or
and
xchg
and
es
in
pop
or
dec
bswap
push
lret
std
xchg
pop
mov
ds
repz
mov
mov
ja
cwtl
jg
mov
inc
jb
cwtl
adc
xchg
cs
adc
test
pusha
popa
cli
sub
in
xchg
rcl
fwait
xchg
and
stos
faddp
jg
lock
pop
lcall
dec
jo
sub
xchg
pop
mov
test
xchg
mov
xchg
mov
sar
aaa
and
xchg
and
movsb
insl
test
loopne
pop
inc
out
pop
mov
xchg
xchg
adc
inc
mov
mov
mov
enter
and
test
cld
orb
jo
jno
inc
divb
jo
inc
fstpt
mov
ss
jb
ljmp
aad
subl
fucom
adc
xabort
cld
lea
lahf
jg
dec
xchg
mov
out
jmp
lods
scas
imull
test
loop
cwtl
inc
lcall
test
or
sub
das
add
mov
lcall
lcall
xchg
pop
ficoms
out
jns
mov
inc
push
cmpb
test
in
cmp
mov
sub
cmp
jle
mov
mov
outsb
test
or
rorl
cld
rcrl
mov
je
jne
cmp
ss
adc
and
ret
mov
mov
jge
lods
icebp
xchg
xchg
orb
les
sti
adc
push
pop
stos
je
lea
jae
std
xchg
cmpsl
jo
inc
xchg
adc
aaa
insb
ds
stos
in
cmp
movsb
leave
xor
xchg
les
pop
outsb
in
mov
sbb
lock
clc
push
add
rorl
mov
adc
mov
leave
xchg
aaa
test
ljmp
mov
imul
cmpsb
leave
daa
lods
push
xchg
pop
push
lods
xor
push
aam
inc
cli
inc
scas
dec
xor
lea
mov
jl
jno
mov
movsb
mov
mov
inc
and
test
aas
xorb
add
stos
xchg
and
and
test
arpl
mov
mov
push
repnz
mov
out
push
in
cwtl
mov
push
jl
dec
sti
cs
dec
mov
jno
add
pop
lock
mov
bound
cmp
fdivl
fdivp
test
xor
ja
loop
jnp
cmp
lods
movsb
outsb
mov
jp
inc
rcl
pop
jbe
mov
clc
loope
daa
fsubs
popf
jae
mov
jns
movsl
out
loopne
dec
cld
in
and
fisttpl
push
aas
sbb
push
addr16
xor
in
cld
aam
in
rcll
mov
les
pushf
lret
sarb
mov
mov
add
insb
fistl
fdivl
test
cld
mov
dec
push
outsl
jnp
push
outsl
mov
leave
pop
out
rcrl
lea
mov
shlb
mov
xor
add
xchg
inc
xor
cmp
mov
dec
iret
dec
and
mov
mov
pop
js
test
cs
loop
fnsave
addr16
jp
mov
adc
pop
fcoms
mov
aad
pop
pop
rol
sbb
fadds
pusha
subb
lock
dec
mov
xchg
inc
cmp
inc
lahf
xchg
jbe
call
jnp
xchg
leave
js
and
cmp
xchg
inc
pop
cmp
leave
mov
sbb
mov
add
loop
cld
mov
mov
xchg
jae
dec
sarb
jecxz
mov
cmp
mov
incb
fbstp
jae
jge,pt
mov
stos
inc
rclb
sub
sbbb
pop
out
or
mov
mov
ljmp
outsl
add
mov
sbb
xchg
ret
jp
test
out
loopne
in
mov
dec
arpl
hlt
aad
lods
mov
sbb
dec
add
and
jmp
mov
cs
jbe
jl
and
int3
pusha
loopne
push
mov
xchg
icebp
add
testl
xchg
dec
mov
outsb
insb
aam
mov
enter
and
mov
rclb
outsb
lret
mov
sbb
inc
xchg
mov
out
enter
repz
jmp
movsl
cmpsl
rolb
jne
cmc
dec
jno
cld
push
jle
popf
or
xor
ret
xchg
sub
imul
sub
bound
jg
movsl
push
icebp
scas
xor
xor
in
xor
loop
xor
cmp
es
mov
xchg
jnp
rcl
fwait
mov
dec
jg
bound
xchg
mov
out
xor
mov
cmp
aam
dec
lret
or
std
adc
pop
daa
xchg
jmp
sbb
mov
cmp
mov
in
inc
push
and
cmpsl
sub
cltd
in
or
xchg
or
mov
mov
addb
ss
es
leave
mov
adc
lods
inc
outsb
cmp
into
lods
addb
jns
hlt
and
inc
mov
mov
fists
icebp
icebp
fisubs
in
orb
popf
mov
xor
dec
jno
cli
sbb
ds
xchg
jecxz
bound
rcll
mov
push
add
out
pop
ja
cmp
out
xchg
push
ja
adc
les
aaa
aam
jo
fisubs
lcall
mov
stos
mov
insb
push
xor
outsb
fsubrs
jne
push
xor
xchg
push
jl
fs
xor
cmpsb
enter
jno
fidivs
sti
fisttpl
js
lods
mov
sub
enter
pop
cmp
wrmsr
sti
adc
push
sbb
subl
and
xchg
push
add
popf
les
jg
mov
jno
lock
jg
xor
xor
out
loope
daa
jo
ljmp
movsb
push
mov
jmp
out
shrb
sbb
mov
sbb
dec
in
ljmp
shll
xchg
dec
inc
dec
lahf
addr16
mov
out
inc
inc
inc
ficompl
adc
jno
fisubrs
adc
cmp
out
pusha
sbb
aad
mov
sub
xchg
dec
iret
cs
xchg
xchg
cmp
aad
mov
fisubl
mov
fs
mov
hlt
lcall
sbb
pop
test
mov
mov
mov
stos
shrl
pop
rcrb
sub
out
jne
add
sahf
mov
mov
lods
or
inc
mov
sahf
push
adc
push
fcmovb
scas
sbb
xlat
push
bound
pushf
mov
movsl
mov
or
out
cwtl
fisttpl
jno
movsl
jns
mov
popf
inc
sub
imul
xchg
mov
mov
and
inc
mov
ret
cmp
xchg
and
int3
sub
ret
out
sbb
adc
call
dec
jb
xchg
stc
xlat
fnstenv
shl
into
inc
push
bound
test
push
cwtl
je
mov
lahf
fidivrs
iret
inc
dec
cli
mov
and
jns
jge
mov
sub
int
push
sahf
mov
stos
push
cmp
and
shll
pop
popf
insb
jns
xchg
inc
insb
add
sbb
or
jb
push
add
into
pusha
shll
inc
pop
test
pop
pusha
dec
cmpsl
cmpsb
mov
inc
in
mov
inc
ss
loopne
mov
xchg
shl
pop
and
inc
cmp
ds
pop
mov
jns
ficoml
hlt
out
imulb
lahf
fmull
mov
rcrl
data16
mov
andb
jo
jne
lds
stos
pop
inc
sbb
pop
jnp
sub
sub
movsl
cmp
add
fistl
int3
mov
sti
lea
nop
sub
mov
rcrb
out
jecxz
rcll
cmc
test
mul
shrb
int
cmc
cmp
push
jge
xorb
stos
jmp
jg
jnp
jmp
cmpsl
mov
mov
adc
mov
mov
arpl
das
pop
sbb
out
push
sbb
pop
std
aad
mov
pop
ss
add
fiaddl
mov
les
fldcw
test
cmp
push
jmp
cltd
adc
imul
arpl
cmp
stos
sub
jg
aam
enter
mov
pop
mov
leave
sti
into
xor
pop
add
lret
loopne
mov
insb
je
mov
std
int
shrb
and
mov
fwait
mov
test
inc
ficoms
and
jno
mov
sti
cmp
mov
mov
sahf
insl
inc
int
leave
jl
inc
mov
pusha
push
pop
imul
mov
add
dec
mov
test
aas
mov
ja
and
mov
adc
mov
in
es
sbb
popf
or
dec
in
shrb
jo
les
lods
push
mov
out
sbb
insl
lret
in
adc
rorl
sub
imul
pop
push
mov
push
pop
inc
adc
int
rcrb
xlat
mov
inc
stc
inc
movsb
pop
jecxz
inc
cmp
mov
dec
cmp
mov
int
pop
mov
sbb
jg
push
adc
mov
sti
push
pop
nop
lcall
dec
int3
gs
sbb
sbb
adc
cmp
adc
subb
mov
push
stc
mov
sub
cltd
cli
js
xchg
mov
cmpb
outsb
and
notl
lock
dec
aaa
adc
cmp
pop
or
pop
push
sti
movsl
mov
rorb
fisubrl
popf
jmp
adc
mov
outsb
sub
jmp
cmp
out
in
adc
push
test
sbb
push
mov
adc
jmp
mov
cmp
imul
jmp
cld
fbstp
ss
dec
sub
fnstcw
xchg
push
push
jge
nop
repnz
xchg
pusha
push
sbbl
ret
ja
stos
dec
or
pop
sub
dec
mov
lcall
adc
mov
push
push
adc
xor
lahf
and
dec
dec
mov
das
push
xchg
ret
scas
mov
mov
pop
xchg
pop
xor
loope
rorl
fldcw
cmp
cmpsl
dec
mov
lcall
pop
loopne
lret
stos
daa
stos
cmc
fcomps
in
test
repz
popa
and
hlt
into
xchg
fcoml
xor
jno
xchg
lock
fldl
xor
pop
inc
jae
mov
add
jo
cltd
es
mov
or
and
sbb
roll
icebp
push
jecxz
cmp
xor
dec
mov
fs
rclb
sub
int3
and
jb
mov
and
mov
cltd
sub
dec
fwait
call
add
jnp
sbb
pop
push
stos
out
inc
cmpb
stc
sbb
scas
sarl
dec
in
mov
pushf
repz
mov
adc
into
outsl
psllq
pushf
hlt
cmp
jl
cmpsl
adc
jge
fcmovne
xchg
jmp
andl
push
inc
je
ds
ret
jbe
gs
mov
ljmp
xor
jns
pushf
outsb
xchg
lret
js
mov
rorb
mov
js
push
sub
ficoml
lea
adc
cmp
pusha
jl
pop
jle
push
repz
jmp
outsb
cwtl
and
inc
dec
mov
bound
lea
jns
call
aas
jnp
ja
pop
sahf
and
jecxz
stos
push
lret
jmp
in
lret
push
cmp
stc
sub
mov
les
int
ja
adc
arpl
out
cld
xor
aam
fcoms
stos
jg
mov
jecxz
int
cmpl
cli
mov
sub
sub
sbb
popa
in
mov
add
je
mov
cmp
into
clc
jg
and
shrl
loope
les
shrb
lahf
scas
inc
pop
popf
scas
cmp
xor
mov
push
or
jns
sub
es
ret
inc
lcall
or
lock
cmp
call
push
jno
pop
jne
sbb
out
jo
das
aad
rcrb
xor
jmp
xchg
fwait
inc
gs
or
cltd
sub
or
lret
pop
or
jle
sbb
add
adc
ret
in
adc
jecxz
mov
or
repnz
push
push
in
test
inc
iret
xor
testb
sbb
inc
sbb
push
cmp
add
fsubl
xchg
fs
cwtl
punpckhwd
xchg
dec
lret
mov
loop
jmp
xor
inc
lahf
fnstenv
or
mov
mov
shll
fists
cmpl
mov
sbb
je
cld
pop
scas
jp
cmp
pop
lds
push
repnz
stos
xchg
and
mov
mov
into
mov
sbb
cmp
jmp
jns
addr16
cltd
sarb
xchg
lds
mov
mov
lds
sbb
cmpsb
inc
leave
push
adc
outsl
lea
rcr
jae
add
jae
call
or
stc
lock
dec
or
shrl
aaa
addr16
rclb
pop
pop
cmp
popa
cmpsl
mov
mov
xor
push
fisttps
int3
xchg
add
sbb
repnz
sub
testl
notb
jmpw
dec
test
xor
or
repz
movsl
into
out
mov
outsb
es
push
leave
loope
fiaddl
ds
cmp
test
ljmp
xchg
in
int
or
jae
aam
push
addb
xor
mov
inc
adc
pop
jo
push
arpl
mov
movsl
test
mov
insb
addr16
mov
orl
xchg
test
or
std
xor
movsl
into
xchg
xor
or
lods
cld
push
std
out
push
fsubrl
mov
mov
das
lock
jg
shr
mov
insl
cmpsb
push
cmpsb
mov
dec
shlb
inc
out
test
pusha
out
xchg
sbb
inc
xchg
cmp
cmp
popa
jae,pn
cmp
enter
iret
add
lods
in
cmp
repz
mov
push
mov
pop
or
jnp
push
mov
imul
inc
dec
fisubl
rorl
repz
js
imul
mov
mov
lret
xchg
enter
add
mov
scas
sbb
mov
in
xor
push
movups
jg
imul
jno
rolb
pop
test
imul
nop
ret
cmp
pop
mov
add
lods
mov
sbb
nop
mov
insl
aad
fmuls
mov
adc
push
mov
sub
mov
cmp
xor
push
xorb
out
lds
add
mov
fsubl
loop
mov
dec
idivl
lret
gs
adc
or
lods
popa
push
outsb
inc
pop
fnstcw
jbe
push
xor
les
repnz
std
inc
movsb
sti
rorb
out
out
dec
inc
rol
xor
mov
or
or
inc
stos
insb
scas
sub
insb
add
arpl
add
mov
mov
ljmp
jge
sbb
cmpsl
fildl
mov
outsl
test
pushf
xor
xchg
repz
div
jb
adc
dec
int
pushl
jl
test
es
repnz
lcall
sub
jb
mov
out
push
mov
mov
jmp
addr16
outsb
lods
lret
ljmp
cwtl
stos
roll
adc
add
mov
pop
shlb
pop
fsubl
pop
aam
cmc
into
mov
cli
fiaddl
mulb
jge
into
movsb
push
js
rclb
sbb
bound
call
popf
mov
cmp
adc
dec
lcall
pop
inc
nop
mov
aaa
insb
fadds
jge
cwtl
mov
mov
jnp
pop
jmp
sub
test
mul
cmpsl
lret
fwait
adc
jp
xlat
ljmp
lock
lret
adc
push
push
or
repnz
dec
nop
xchg
fistl
sti
mov
pusha
cmp
dec
imul
fdivs
mov
scas
mov
pop
cmp
in
mov
fninit
jle
inc
sbb
mov
cltd
ljmp
inc
call
cmp
in
cs
imul
mov
in
push
lods
fwait
icebp
jle
jmp
mov
jnp
lock
repnz
psubd
es
ror
ljmp
and
js
iret
inc
pop
adc
aas
xor
dec
enter
mov
add
test
fisubl
jle
sub
cmpsl
mov
int
mov
inc
fistpl
lock
xchg
test
adc
sti
popf
adc
xor
cli
pusha
insl
push
andl
sbb
push
mov
pop
repz
dec
sub
cmpsl
xlat
dec
addr16
insb
je
lahf
dec
inc
sub
adc
sbb
jo,pt
xlat
jmp
sub
mov
push
jbe
mov
pop
mov
into
mov
xchg
and
mov
test
adc
idiv
push
dec
jmp
cltd
mov
dec
pop
cld
and
in
sbb
push
and
pop
inc
jle
xlat
sahf
dec
cmp
cmp
dec
push
inc
push
xchg
in
in
mov
xchg
cmp
stc
mov
aad
andl
or
or
xor
mov
dec
cmp
shl
or
fisubrs
sub
push
mov
mov
mov
xchg
or
adc
fwait
outsl
lods
shll
ds
jne
xchg
sub
je
mov
lret
in
ret
cld
ljmp
repz
sbb
popf
shlb
xchg
das
lahf
lret
pop
jmp
push
mov
or
ljmp
push
mov
scas
fildll
or
push
or
aas
xchg
add
movsb
push
aas
xor
adc
mov
adcb
popf
imul
pop
lea
jge
fnsave
mov
pop
jne
dec
movsb
lahf
aaa
jbe
orl
mov
stc
hlt
mov
sbb
fisubrl
mov
insb
sbb
clc
sarl
mov
mov
mov
sti
push
mov
icebp
jle
shrb
cmp
adc
lcall
aaa
test
cld
cmp
addr16
cmc
push
mov
mov
mov
adc
jne
fdivrl
mov
inc
push
inc
ret
rcr
push
add
cs
idiv
sar
std
js
les
sbbb
cmpsl
xchg
stos
xor
push
add
cmpsl
loop
mov
cmp
add
add
mov
jns
jns
scas
push
xchg
gs
add
add
dec
inc
in
pop
pop
xchg
mov
jmp
sub
cmpsb
aaa
aaa
leave
loopne
adc
sbb
push
add
cmpsb
jnp
dec
hlt
xor
int
lods
aas
pushf
add
and
push
sarl
pop
jne
movsl
jbe
pushf
subl
push
lret
movsb
scas
adc
cmc
jg
mov
sub
ja
test
push
in
aam
inc
ror
jns
cs
jae
sti
mov
mov
jecxz
fcmovbe
aam
rcll
lahf
and
aas
fs
ljmp
decb
vcvttps2dq
cmpsb
movzwl
lahf
mov
push
push
shr
jns
cwtl
xchg
and
mov
sarw
cmp
mov
in
xor
adc
je
pusha
mov
pusha
mov
aaa
jecxz
jp
push
pusha
pushf
fstps
outsb
sbb
fdivl
cltd
pop
and
fstps
or
adc
mov
jne
leave
lea
fcmove
imul
and
mov
lret
test
sti
sub
adc
cmc
enter
xchg
push
les
or
mov
cmc
mov
ret
ror
clc
iret
push
stos
pop
xor
inc
jl
lret
fcoms
movsl
int3
push
xor
cmp
inc
insl
fdivrl
xor
xchg
cs
pushf
adc
stos
stos
jns
add
xor
pop
dec
fcompl
mov
adc
mov
jle
das
jne
das
bound
in
das
aam
cwtl
sbb
push
pop
in
sbb
int
sahf
in
lea
fildl
imul
inc
jge
xor
rol
push
jbe
xor
ss
pop
pushf
jg
inc
cmp
jmp
xor
addl
sbb
mov
or
sbb
lods
jno
sbbl
xchg
test
push
mov
insb
xor
imul
add
pcmpgtd
cmp
aas
add
shll
or
dec
dec
mov
jnp
enter
xor
popa
mov
lods
add
sbb
mov
scas
aad
jge
js
mov
push
cmpsb
cmpsb
lcall
adc
aaa
and
idivb
jno
jp
add
xor
sahf
mov
jns
test
cmp
push
in
or
dec
xor
xor
lock
cmp
fsubr
mov
push
or
pop
jbe
int
add
hlt
mov
cmp
leave
pop
in
scas
cmp
in
mov
in
sub
cwtl
xor
test
in
cltd
lret
rcrb
enter
dec
dec
mov
je
outsl
adc
mov
mov
scas
aaa
in
ss
dec
cld
mov
int3
int3
jmp
int
jb
inc
add
xchg
fwait
add
test
xchg
addr16
inc
loopw
decb
or
mov
fwait
or
sbb
pop
dec
or
neg
inc
jg
mov
inc
jle
movsl
jo
adc
inc
mov
rclb
mov
loope
and
pop
inc
cltd
les
or
push
pop
repz
lret
sub
leave
jge
fsubs
aas
xchg
jmp
dec
lret
fwait
push
jge
pop
sbb
repz
nop
cwtl
push
jge
xor
fdivl
cmp
mov
ficoml
adc
sbb
pop
ja
cmpb
push
fwait
and
cmp
imul
push
ret
cmp
pusha
lahf
stc
mov
data16
data16
imul
adc
xchg
sub
cmp
movsl
lods
mov
nop
daa
jae
fcoml
lret
sbb
pop
daa
adc
jle
jle
adc
testb
jae
push
ret
adc
inc
adc
stos
das
imul
sarb
xor
aam
fsubrl
lret
enter
mov
jp
jne
mov
mov
insb
loop
aas
ret
add
movsl
fs
fiaddl
add
sbb
lods
xchg
mov
push
dec
mov
shl
in
mov
or
mov
or
fidivrs
xor
movsb
lods
lock
sbb
movsb
inc
test
call
int3
inc
mov
mov
push
addr16
dec
lret
push
out
pop
mov
hlt
xor
mov
cmp
add
nop
out
adc
xor
jecxz
pop
mov
sbb
jge
adc
out
push
insl
out
mov
or
call
or
add
jmp
cmp
jno
jns
cwtl
xor
xchg
push
pop
xchg
push
ficompl
cld
out
insb
lahf
push
cmpsl
add
jmp
xor
pop
push
push
cmpb
lds
add
xchg
or
jecxz
pop
inc
cli
xor
inc
dec
lahf
cmp
leave
clc
or
scas
mov
cmp
cmp
es
insb
pop
mov
iret
scas
xchg
inc
aad
test
mov
pushf
pop
pushf
iret
mov
mov
push
sahf
ljmp
test
add
nop
arpl
inc
cmp
js
dec
or
xchg
mov
xlat
leave
xor
mov
sbb
aas
mov
cmp
nop
in
pop
movsb
test
outsb
sbb
iret
dec
ja
fs
cmp
sarl
or
push
push
lret
stc
jae
sbb
lock
adc
and
in
sbb
in
aam
push
jmp
icebp
adc
test
sub
cwtl
dec
in
lock
dec
pop
pop
movsb
ljmp
xchg
rcrl
inc
in
mov
and
dec
aam
mov
inc
mov
fs
aas
int
push
inc
data16
pop
pop
mov
fldt
sub
mov
xchg
mov
pop
insb
shrl
mov
jbe
pop
or
sti
enter
mov
sbb
or
xchg
add
inc
cltd
sahf
cmp
jno
adc
push
push
je
in
cmp
movsb
sbb
or
bound
cmp
fs
dec
and
push
sbbl
sub
dec
popa
xchg
add
mov
pop
data16
xchg
push
dec
inc
movsl
cld
adc
or
in
aaa
add
fcmovnu
inc
or
adc
xchg
ds
and
xchg
stc
sahf
cmpsl
pop
cmc
sbb
xchg
lret
or
shrb
clc
fsubs
sbb
sub
lock
mov
sbb
xchg
adc
rclb
neg
pusha
push
jmp
adc
pop
adc
sbb
jecxz
mov
and
aaa
das
sbbb
insl
je
jl
arpl
stc
iret
shl
push
xchg
rol
mov
fdivrl
int3
cmpsl
fsts
push
cmp
mov
mov
inc
out
add
pop
mov
out
sub
sbb
sub
adc
ljmp
data16
lcall
jge
in
stos
movsb
ds
mov
mov
popa
js
jmp
ret
xor
inc
push
sub
stc
pop
and
jns
ja
jns
pop
pop
pop
fwait
lods
mov
lods
mov
mov
jmp
jne
fwait
fwait
decl
pusha
gs
aaa
lcall
imul
dec
cmc
add
int3
movsl
mov
push
into
dec
fbld
xchg
scas
mov
insb
rolb
mov
mov
push
rorl
lret
mov
movsb
jmp
dec
stc
jne
popa
xchg
jmp
frstor
pop
scas
jge
sub
insb
xor
and
pop
jno
inc
std
in
sbb
xchg
push
lods
aas
jno
pop
push
push
fdivrs
int
iret
cmpsl
fwait
pushf
add
lods
push
lods
adc
mov
mov
das
out
addb
fnstsw
in
xchg
xchg
in
pop
mov
inc
lods
stos
sahf
xchg
das
sub
dec
pop
lretw
pop
inc
mov
jmp
arpl
es
inc
push
add
in
cmp
pushf
cwtl
mov
inc
xchg
nop
sbb
fdivl
lret
mov
std
or
mov
addr16
shrl
or
push
in
sub
out
hlt
cmp
mov
pop
xchg
ja
testb
pop
sbbl
cmpsb
push
jmp
aam
adc
lds
add
lods
subb
fisttps
adc
sub
jno
imul
test
into
insl
ja
unpcklps
fucomp
mov
dec
aad
jmp
adc
jl
outsl
push
loope
inc
push
stos
lcall
testb
rorb
xchg
mov
pop
push
or
lods
inc
fidivrs
push
imul
add
test
add
sbb
xchg
les
inc
or
add
xor
cmpb
testb
mov
and
cmpsl
sub
mov
push
jb
cwtl
xchg
shll
fsubr
sub
fcoml
inc
mov
push
cli
aas
shl
imul
mov
cmp
lea
sbb
lock
movb
sub
fbld
mov
insl
xor
dec
ror
lret
xchg
adc
testw
adc
cmp
mov
or
jns
cli
scas
rcr
stos
lods
adc
lahf
enter
cmp
cli
gs
jmp
testl
jno
xor
lret
lret
or
cli
cmc
xchg
pop
cs
xchg
xor
cli
iret
mov
sbb
shll
pop
out
addr16
sti
movsb
adc
push
jle
nop
xchg
and
es
xlat
xor
out
std
dec
dec
fidivl
add
inc
push
xchg
sbb
sbb
jb
fs
hlt
sub
sub
pop
in
outsl
fs
je
dec
and
or
lods
sub
js
popf
std
and
cli
testb
jmp
out
inc
jnp
mov
popa
scas
mov
or
das
inc
ret
popf
popf
mov
xor
xchg
jnp
add
aad
subl
jecxz
xor
add
cmp
jg
scas
out
shlb
ret
xchg
sub
out
aad
in
gs
adc
xchg
or
mov
clc
scas
fldt
aaa
mov
add
sub
in
ljmp
popf
mov
addr16
xchg
clc
test
stc
mov
data16
cltd
testb
into
or
add
xchg
dec
mov
xchg
lea
jnp
xorb
and
pusha
dec
mov
test
push
sahf
into
jbe
inc
and
mov
add
enter
add
out
icebp
in
and
and
adc
cmp
mov
faddp
ss
scas
insl
sub
mov
imul
push
xchg
or
movsl
cmp
ret
jle
xchg
cmc
and
iret
stos
std
inc
and
out
jnp
add
bnd
lret
push
jmp
cld
inc
cld
clc
mov
mov
fmuls
xchg
test
cmpsb
and
xchg
xchg
stos
lcall
xchg
lcall
insb
sbb
pushf
xchg
aam
out
mov
jmp
inc
hlt
imulb
sbb
lods
mov
sbb
enter
dec
loopne
cmp
mov
shr
cmp
xor
in
imul
push
adc
shrl
dec
aaa
stos
paddusb
aaa
addb
mov
mov
jecxz
decl
faddl
dec
xchg
stos
repnz
push
jl
loopne
ja
jno
pop
pop
imul
loopne
and
fs
jno
inc
sbb
loop
mov
push
push
cli
add
push
outsl
pop
into
int
xor
cmpsb
inc
cmp
mov
xor
sub
fcmovnbe
xchg
leave
and
xchg
push
decl
test
cltd
mov
xorb
push
xor
test
pop
hlt
jp
js
mov
xor
fcoml
and
mov
testb
mov
or
adc
xchg
icebp
call
seto
mov
outsl
sbb
into
jbe
add
push
mov
idivl
sub
aad
out
dec
mov
and
jb
js
mov
jb
shl
arpl
push
add
adc
call
hlt
fs
sbb
pusha
push
xchg
lcall
iret
repnz
mov
and
mov
inc
jmp
popa
insb
nop
fldl
push
ljmp
adc
push
mov
dec
pop
aaa
cmp
daa
repnz
sbb
stc
xchg
push
cmpsb
into
test
mov
push
xor
out
add
dec
xchg
pop
imul
pop
xor
test
xchg
ret
pop
xchg
lods
lahf
jo
dec
int
adc
lret
mov
lods
hlt
std
imul
pop
fs
xor
or
in
sbb
outsb
mov
outsb
repz
lahf
mov
test
mov
push
ficoml
enter
ljmp
inc
inc
fisubrl
lods
fisttps
push
jmp
inc
cmp
jmp
mov
outsb
insb
jo
nop
adc
mov
test
mov
inc
dec
jo
sub
mov
sub
inc
cmpsl
jp
dec
fsubrs
mov
pushf
adc
inc
sbb
sahf
mov
sti
lcall
sbb
fsts
aaa
inc
lods
pusha
pop
or
or
into
pop
mul
out
inc
cmpsb
outsb
test
scas
or
push
pop
repz
repnz
mov
sahf
inc
cmpl
mov
jl
and
loop
or
mov
fcmovbe
push
popa
mov
push
outsb
pop
or
mov
in
sbb
sub
mov
add
sub
decl
jmp
test
mov
enter
cmp
jb
cmp
cwtl
push
push
fldt
fistl
xor
or
jb
jno
push
mov
xchg
enter
popa
mov
cmpsb
rcrl
cmpl
xchg
gs
call
xchg
lcall
adc
int3
sub
and
cmp
adc
mov
inc
outsb
dec
lcall
inc
int
insl
or
add
sbb
icebp
xor
adc
jp
enter
shll
nop
inc
test
pop
lock
adc
push
stos
mov
mov
xchg
xor
xchg
int
mov
add
nopl
lcall
and
jne
add
xlat
push
bound
repnz
in
lea
mov
shll
stc
mov
sbb
mov
dec
cld
les
clc
pusha
push
rcll
inc
aad
les
pop
subps
mov
sub
lds
lret
adc
inc
cwtl
bound
movsb
loope
fsts
jmp
and
cmp
sbb
dec
sbb
rcll
lea
cld
cmc
mov
mov
cmpsb
adc
jge
lahf
mov
xor
mov
xchg
sbb
or
jbe
or
inc
xor
imulb
shll
push
inc
cmc
and
xor
adc
sti
mov
test
xor
iret
add
rcrl
mov
das
mov
daa
mov
adc
std
jge
mov
fdivr
xchg
loop
ret
jb
shl
lods
or
clc
push
addl
cmp
cwtl
sbb
fsubrl
xchg
movsl
sub
mov
pusha
push
xor
test
cld
mov
stos
cmp
ljmp
rorb
pop
and
inc
sbb
cld
xchg
jnp
loopne
add
ror
les
sbb
rcll
mov
shrb
sub
inc
push
ds
inc
sahf
popa
pand
enter
or
push
imul
mov
ja
aam
lahf
add
adc
leave
insb
cmp
push
sbb
dec
sbb
xchg
addl
cmpsl
mov
or
and
lock
pop
sti
daa
inc
fnstsw
mov
xchg
cmp
inc
jg
outsb
loope
inc
push
jle
adc
and
cld
xchg
aad
sub
gs
call
popa
dec
cwtl
out
push
arpl
sbb
sti
fs
in
cmp
nop
rcrl
dec
leave
cmpsl
test
popf
add
add
inc
movsb
ret
adc
mov
mov
inc
test
push
xchg
arpl
pushf
out
lods
mov
int
in
jno
mov
frstor
jno
rcrl
std
cmp
jle
lahf
mov
icebp
mov
dec
push
sbb
rcll
inc
out
mov
aad
hlt
scas
aam
adc
inc
jle
rorb
pop
cld
sbb
cli
mov
in
cmpsl
rclb
fnsave
movl
js
mov
fdivrs
int
mov
ret
sti
mov
arpl
push
gs
push
std
rcll
inc
xchg
add
ficoms
jo
or
xchg
fdivrl
cmp
mov
outsl
mov
outsl
jae
hlt
sahf
pop
mov
ljmp
lock
add
mov
jmp
xchg
cmc
adc
test
shrl
repnz
xorb
test
pop
mov
adc
cs
jg
mov
imul
aas
std
pusha
movsb
imul
mov
sbb
jbe
lea
lods
sbb
mov
aad
fistl
popa
dec
mov
inc
inc
sti
inc
mov
and
jno
cmp
in
repz
les
or
aaa
out
shll
aas
add
pop
dec
sub
rcll
jbe
jle
mov
mov
cwtl
adc
aas
daa
inc
or
dec
push
inc
jge
cmc
ss
popa
jp
popf
gs
and
lods
stc
push
mov
mov
adc
dec
push
out
cmp
cwtl
dec
sahf
push
into
jns
adc
je
or
cmc
lods
lea
add
xlat
daa
jo
jae
aaa
jns
mov
fwait
je
into
xor
jp
add
dec
xchg
sbb
add
clc
dec
mov
int3
xchg
mov
xchg
gs
int
sub
adc
cmc
xchg
leave
jo
and
dec
out
popa
mov
xchg
repz
test
in
mov
inc
das
mov
xchg
push
dec
adc
nop
pushf
fwait
push
mov
push
mov
add
sub
xor
into
adc
jecxz
test
xor
iret
pop
ja
and
cli
ja
xchg
pop
lock
lods
popa
sub
inc
les
fdivl
stos
fxam
into
push
cwtl
outsb
cmp
dec
mov
sbb
ret
xchg
ret
inc
gs
std
cmp
mov
pushl
in
xchg
inc
sbb
jne
rorb
shl
int
lret
not
and
and
jns
xchg
inc
scas
imul
xor
je
imul
ss
mov
add
and
sti
cmc
xor
pop
inc
mov
stc
adc
and
lods
ja
out
ret
fcompl
outsl
push
push
lods
lret
mov
push
test
mov
cmp
mov
pop
adc
negb
cmp
cmp
shll
inc
mov
add
sub
dec
jl
clc
sbb
or
inc
pop
jbe
sbb
xor
js
test
push
jl
dec
mov
mov
xchg
dec
cmp
push
out
sbb
lock
ss
or
push
mov
jno
push
imul
cmp
pop
pop
inc
push
cld
pushf
push
scas
mov
cmc
xlat
push
and
movsb
jnp
dec
mov
dec
dec
sub
or
inc
and
out
ret
jge
adc
scas
mov
nop
sbb
sbb
adc
test
cmp
hlt
in
shl
int3
or
jle
jno
jg
aaa
inc
scas
lods
sti
sub
and
int
cmp
sub
mov
jg
dec
pushf
mov
jns
cmp
stc
push
mov
push
and
push
and
cltd
cmp
push
in
pop
push
ret
push
mov
bound
test
xchg
mov
or
pop
cwtl
ror
test
jo
or
ja
subb
pop
xor
push
js
lds
push
clc
rolb
dec
jge
aaa
imul
mov
xor
sub
mov
jae
inc
add
ja
pop
jmp
daa
pop
xchg
fsubrl
and
aam
aam
shll
cmp
xchg
bound
add
sub
fdiv
cltd
and
shll
jg
jns
jns
cmp
jbe
inc
popf
addl
sbb
scas
dec
testb
and
das
mov
call
or
xchg
adcl
add
nop
rcr
jmp
out
inc
dec
dec
sbb
in
enter
xorl
push
pop
icebp
mulb
popf
mov
mov
dec
mov
enter
adc
scas
jbe
mov
dec
jne
aas
add
mov
xlat
jb
int3
push
dec
xor
xchg
fidivs
push
out
mov
cmpsb
jmp
test
fnstenv
rol
push
push
in
std
sub
jl
jno
sub
or
pop
lahf
cmp
cmpsb
xor
je
mov
pop
and
or
enter
gs
lret
push
out
adc
mov
shlb
leave
jmp
shrb
sbb
dec
add
popa
mov
sub
add
ss
adc
push
clc
jecxz
lcall
jle
mov
out
stos
add
ljmp
or
incb
mov
aaa
dec
ds
jo
lds
aas
sti
jg
pop
es
xchg
and
adc
popf
and
add
xchg
das
mov
cmp
stc
iret
dec
addr16
add
mov
movsb
sbb
mov
cmp
add
pop
test
lret
stc
xchg
lods
lds
in
mov
in
mov
mov
and
jl
adc
add
sti
in
or
dec
dec
and
rcrb
jp
adc
mov
stos
je
rclb
test
push
mov
mov
call
je,pt
jge
fldenv
add
fdivs
and
cmp
pop
repnz
pop
pop
ds
ds
jne
mov
in
sub
fdivs
test
mov
es
xor
leave
in
and
inc
dec
in
in
bound
mov
fdivrs
lods
lods
add
xor
lret
pop
mov
fistps
xchg
jo
movsl
inc
ret
int
dec
out
cmp
push
pop
stc
fnstsw
dec
adc
or
ret
dec
sub
dec
icebp
loopne
mov
in
lret
push
mov
pusha
mov
out
sub
mov
out
out
mov
mov
mov
in
jmp
out
dec
sub
movsb
rorl
test
mov
sbb
sbb
inc
mov
pop
cmp
movsl
mov
scas
sub
push
jl
int
sub
data16
sbb
imul
cmp
lret
xor
lods
sub
sub
pop
cmpsl
cmpsb
sub
and
repnz
fldenv
mov
unpcklps
mov
inc
jae
mov
adc
es
bound
jns
mov
inc
lea
jns
inc
loop
jge
insb
sub
cmp
push
pop
mov
pop
icebp
xchg
rol
sub
push
sbbl
adcb
outsb
xchg
pop
pop
test
sub
js
movsb
sti
insb
cmc
push
jmp
xor
arpl
jl
insl
in
inc
sub
aas
stos
fs
mov
flds
fistps
add
or
jnp
shrl
cmpb
adc
cmp
adc
adc
ljmp
sub
cltd
jno
bound
addr16
pop
mov
insb
jae
sub
jg
xchg
inc
loop
inc
bound
sbb
xor
cmpsl
adc
int
xor
adc
dec
test
ja
lock
xor
jno
sahf
sbb
mov
mov
sti
test
sub
and
lds
or
mov
sbb
rcl
popf
cmpsb
pop
or
shlb
out
dec
aas
cli
daa
mov
pop
mov
cmpsl
or
xor
xlat
call
push
xor
xor
rcll
lret
mov
dec
lods
fstpl
jge
shll
jnp
bound
xchg
mov
adc
mov
mov
fwait
rclb
pop
or
xchg
mov
cmp
dec
xchg
cmp
repnz
sub
daa
andl
jmp
push
mov
sahf
or
lods
pop
jae
and
cmc
xorb
jp
aas
add
or
xchg
cmp
cmp
adc
nop
add
shll
dec
popf
fldt
and
xor
jp
jmp
dec
ret
ret
push
inc
cmc
mov
je
push
out
push
test
adc
xchg
pusha
pop
mov
dec
stos
cmpsb
push
mov
fstpt
sbb
jns
sarb
adc
jmp
faddl
mov
push
div
sub
push
jbe
push
jg
scas
jno
gs
sarb
or
mov
movb
inc
lret
jp
mov
fs
sti
lahf
or
das
lds
inc
cwtl
ss
add
icebp
cmc
pop
aad
aad
cltd
stos
cltd
les
adc
imul
sbb
imul
ja
push
sbb
inc
test
and
lahf
cmp
lock
lret
popa
inc
xchg
jg
mov
sti
loop
mov
lock
out
lret
add
ljmp
or
mov
inc
mov
insl
sub
pop
push
in
or
sbb
sbb
adc
stos
push
xor
mov
out
pusha
test
cld
fnstcw
imul
jb
adcb
dec
test
jg
add
pushf
shrb
inc
loop
fnstsw
cld
divb
sahf
mov
cmp
ds
fistps
mov
sbb
std
xlat
or
jb
stc
jge
inc
jle
iret
ss
sub
xchg
xchg
je
test
cld
gs
xchg
and
mov
xor
xor
pop
outsl
enter
cmp
jp
pop
pushl
jmp
pushl
mov
xchg
sarl
xchg
mov
pop
sahf
data16
rol
push
or
pop
ja
pop
in
push
cld
repnz
addr16
jmp
stc
fdivrs
popf
mov
and
cmp
ret
add
sbb
scas
bound
push
rcrb
cmp
sbb
subb
add
sub
addr16
arpl
out
sub
mov
cmc
sbb
sbb
fistpll
sbb
or
push
mov
xchg
mov
ds
sbb
ret
xor
les
mov
xchg
xchg
fxch
lock
and
negl
inc
jmp
pop
ret
loopne
jmp
jo
mov
decb
pop
mull
mov
or
nop
or
sub
add
push
xchg
inc
std
push
stc
dec
and
cmp
mov
pop
aam
jne
fcomps
xor
mov
repnz
hlt
dec
sub
fwait
or
sbb
imul
add
scas
and
outsb
shr
dec
xchg
mov
rcrb
mov
cs
int3
movsl
push
fs
jnp
idivb
addl
mov
aad
out
pushl
popf
inc
cmovno
add
pop
mov
pop
stos
rcr
add
hlt
mov
jae
divl
mov
mov
scas
ficoms
xor
push
cld
lcall
pop
pop
subl
pop
mov
push
jae
pop
pushl
adc
packuswb
and
push
int
pop
push
fs
jns
add
fisttpl
mov
ss
pop
xor
in
enter
lret
add
lahf
jge
clc
sbb
aam
movl
pop
outsl
dec
add
add
movsl
loope
or
ds
push
or
add
pop
mov
jne
jmp
jge
sub
cltd
jg
lcall
push
ret
sarb
dec
add
lea
test
lods
nop
loope
stos
pop
inc
mov
idivb
jecxz
push
test
js
inc
movsb
sahf
sub
sub
sub
dec
jp
int3
fnstenv
sbb
push
es
mov
fisttps
jp
sbbb
lcall
sub
imul
stos
sub
scas
lret
fs
sub
cwtl
fldt
aaa
adc
repz
sub
cld
ja
jno
cmp
rorb
sub
pop
jge
es
pop
inc
or
and
mov
and
push
fimuls
gs
int3
push
pop
in
testl
mov
dec
pop
mov
cmp
inc
add
and
fwait
push
out
and
imul
push
lret
dec
dec
pop
push
cmp
mov
push
inc
outsl
or
shll
xlat
and
in
pop
add
data16
fwait
lds
fimuls
pop
arpl
mov
ror
stos
insl
or
subb
sbb
push
cmp
mov
sbb
jl
sub
cmpb
jae
ljmp
push
add
dec
mov
cwtl
jmp
xchg
and
inc
sbb
mov
fmull
pop
pop
or
cmp
mov
pop
push
cmp
inc
test
subl
mov
mov
daa
ds
inc
in
mov
pushf
shlb
mov
pop
outsl
lahf
inc
pushf
cmpsb
sub
push
fs
or
lds
jo
push
ja
je
cmpsl
orl
cmp
fs
xor
sbb
pop
arpl
mov
ret
rcrb
mov
jmp
sbb
call
outsl
cmp
adc
fisubrl
sti
aas
std
push
in
lret
dec
add
lock
inc
dec
ds
mov
pushf
test
mov
sbb
fnstcw
ss
clc
push
pusha
sbb
and
fwait
adc
mulb
xor
mov
sbb
pop
pusha
std
dec
inc
jl
pop
pop
adc
adc
hlt
sub
xchg
xchg
xlat
outsb
adc
cmc
ret
pop
and
sub
inc
mov
cs
in
call
data16
push
repz
fisttpll
mov
add
xchg
out
subl
rol
push
add
fimuls
jae
xlat
and
sub
mov
sti
inc
shll
in
jne
pusha
push
adc
mov
jmp
mov
fadds
aad
mov
std
mov
imul
fwait
lret
push
lret
pusha
ss
gs
xchg
popf
push
pop
add
mov
xor
rorb
aad
mov
test
sbb
mov
inc
outsb
je
sarb
out
loopne
out
jae
jecxz
mov
xor
adc
gs
rcrl
mov
mov
mov
out
and
mov
shrl
jne
sti
mov
add
sub
les
pop
sbb
or
shr
mov
or
jb
insl
rcl
add
lods
mov
jecxz
cmp
pop
out
add
push
push
les
xchg
lahf
andb
mov
daa
inc
mov
pushl
es
scas
pushf
mov
sub
mov
xchg
dec
jl
adc
jae
in
mov
xchg
xchg
push
xor
pop
popf
mov
adc
aad
push
mov
pop
out
lds
lods
movsl
sbb
out
push
into
loopne
xorl
int
inc
mov
jbe
cmovne
pop
mov
sub
xchg
cmpsl
push
ljmp
jl
pop
sbb
jbe
addb
pop
inc
push
mov
ja,pn
fmuls
mov
add
mov
and
std
arpl
push
jp
outsl
xchg
or
pop
int3
xchg
lea
movsl
push
push
add
jmp
loopne
push
adc
push
mov
jbe
repnz
xchg
fs
nop
and
push
nop
ljmp
mov
addr16
sbb
xchg
loope
enter
pusha
lcall
aad
outsb
mov
xor
ds
mov
ret
mov
dec
push
or
jbe
xor
xlat
mov
std
movsl
sbb
inc
lret
outsb
clc
sbb
dec
mov
adc
mov
mov
ds
mov
xchg
pop
sahf
frstor
dec
gs
in
sub
sbb
cmp
mov
stos
cwtl
into
and
cmpsb
xchg
mov
lret
int
mov
fcmovbe
nop
mov
xchg
stc
inc
pop
push
hlt
push
jno
pop
inc
mov
sahf
push
inc
push
dec
leave
mov
loop
xchg
xchg
vpsrad
ret
xchg
xor
inc
jo
xor
faddl
jecxz
imul
cmp
xor
addr16
aam
lods
pushf
ret
pop
outsl
mov
jo
mov
mov
rorl
xchg
pushf
add
mov
fsub
loop
add
or
jge
cld
jg
fsubp
lahf
push
jle
adc
lea
dec
sahf
outsl
mov
std
sbb
test
movsb
add
sub
fisttps
mov
adc
xchg
and
fists
popa
push
negl
imul
decl
sbb
mulps
inc
ss
call
jl
inc
fsubrs
mov
cmp
jge
loope
mov
and
jl
dec
xorb
popa
cmc
mov
jecxz
mov
nop
cmp
mov
or
setp
in
adc
mov
dec
hlt
cltd
addr16
push
ljmp
sub
and
mul
or
push
imul
jle
push
add
das
or
pop
xlat
mov
test
sub
mov
sub
dec
inc
in
xchg
sbb
inc
stc
sbb
adc
icebp
jl
lds
pop
mov
add
shl
or
ret
setns
jecxz
pop
nop
loop
jge
jge
je
mov
aam
add
aad
scas
fcoml
mov
stos
mov
jl
cmp
mov
pop
lds
loope
push
lods
jl
enter
sub
loop
jmp
jae
bound
or
jmp
cmpsl
mov
in
js
xlat
sbb
push
mov
jns
das
clc
fwait
xor
lret
popa
nop
sub
xor
mov
aam
mov
or
mov
es
ja
mov
sbb
pop
push
int
orl
sahf
cwtl
pop
cmp
push
stc
loop
mov
add
jecxz
mov
out
std
call
add
adc
xor
popf
mov
mov
inc
or
mov
or
pop
shlb
mov
inc
lods
dec
add
adc
movl
and
push
jge
sub
movsb
mov
lods
imul
inc
mov
mov
push
imul
aas
cmp
icebp
je
arpl
or
add
sub
xchg
cmp
dec
popf
adc
push
outsl
sub
loop
enter
jmp
sub
add
mov
add
pop
dec
mov
insb
sbb
sub
in
hlt
jno
and
test
dec
cmp
inc
call
push
popf
and
add
fs
aad
pop
xor
jbe
outsb
mov
dec
dec
add
repz
stos
lods
js
pop
push
adc
inc
push
adc
lds
movsl
or
aas
pop
push
mov
push
push
test
outsl
jp
test
int
hlt
movsl
pop
sbb
test
dec
mov
popf
and
mov
jbe
pusha
jle
pop
cmpsb
sbb
lcall
xchg
jg
rsm
das
in
int3
xor
xor
outsl
filds
in
push
test
sub
mov
clc
iret
int
addl
stos
xchg
std
aad
in
dec
mov
cli
xchg
mov
adc
rcll
xchg
cmp
xor
fiaddl
xor
add
andb
mov
inc
xchg
sub
loopne
mov
sbb
out
mov
or
out
std
xor
pop
dec
mov
mov
mov
jmp
addr16
adc
in
aaa
jmp
int
and
mov
dec
dec
pop
test
adc
stos
jecxz
or
adc
adc
ret
enter
stc
lret
fistps
enter
jbe
cmc
sub
push
sbb
fdivrl
cmp
mov
sbb
test
xchg
and
pop
jp
add
xchg
xchg
and
loope
es
ds
and
into
std
mov
xchg
arpl
sub
mov
dec
in
aas
movsb
xchg
mov
cmp
push
imul
sarl
aas
out
sahf
mov
adc
arpl
lea
sub
popf
dec
mov
ds
scas
adc
data16
cmp
leave
movsl
mov
aaa
clc
fldl
and
lret
les
push
add
sub
out
xor
adc
fcompl
jns
jb,pn
adc
ss
mov
sub
push
clc
inc
das
loope
dec
pop
sub
fisubrl
insb
push
inc
pop
mov
movsl
adc
cmpb
dec
call
or
pop
jg
fisttpl
cmc
jo
push
fs
inc
mov
mov
xchg
ret
sbb
mov
mov
rcll
ret
mov
push
test
jo
fs
mov
icebp
dec
popa
jb
imul
mov
xor
sub
sub
xchg
shrl
adc
stos
mov
sbb
jno
aaa
or
ss
push
inc
out
aas
lds
sub
push
jg
push
in
hlt
jp
and
jno
mov
inc
aad
lret
stos
lock
cmp
mov
out
jns
iret
movsl
pop
jae,pt
mov
stos
testb
stos
and
stos
and
or
mov
sbb
jge
mov
add
test
jmp
ss
ds
fstpl
ljmp
xchg
mov
mov
sub
lahf
stos
mov
adc
and
push
or
ja
ljmp
lock
dec
dec
gs
jae
pop
movaps
ret
jp
es
outsb
lods
mov
sarl
in
lea
rclb
iret
xchg
ja
jae
or
xchg
ja
sbb
sbb
xor
test
in
inc
lret
or
add
pop
mov
xor
mov
mov
out
roll
ret
insb
adc
cltd
je
aas
or
lahf
dec
inc
xchg
imull
in
das
jbe
xor
lcall
pavgw
cmpsl
addl
test
outsb
mulb
ja
jge
int3
jne
xor
data16
lcall
sbb
nop
lret
inc
cmp
sub
lcall
mov
iret
pop
sbb
les
cmp
jmp
lcall
jns
sahf
icebp
stos
insl
test
shl
call
cmpsb
dec
dec
xor
mov
xchg
add
lock
jg
cmp
ficoms
imul
mov
data16
insb
lds
pop
std
mov
sub
loope
xor
outsb
pop
stos
add
and
das
dec
orb
jg
push
es
mov
xchg
cltd
loope
mul
les
dec
outsl
or
popa
add
sub
jno
lret
test
in
je
jae
jg
or
or
addb
cmp
sbb
jge
sub
sub
cmp
inc
bound
int3
je
lret
test
add
add
xor
mov
sbb
xor
pusha
dec
nop
fs
mov
aas
daa
shrb
or
stc
data16
add
and
ror
jmp
pop
mov
xor
enter
movsb
iret
adc
arpl
repz
mov
add
or
push
fiaddl
fists
jns
jnp
cs
andl
jnp
lds
pop
cmp
inc
cmc
xor
lahf
lods
xor
sahf
test
scas
cmp
adc
or
mov
xor
push
fwait
pop
inc
cmpsl
adc
lods
stos
icebp
mov
dec
in
fmull
cld
fs
ljmp
mov
xchg
adc
xor
stc
pusha
jno
ret
out
ja
mov
dec
dec
outsb
daa
xchg
add
movsl
and
fdivrl
pop
cmp
inc
or
subl
push
dec
mov
mov
je
repz
popf
ljmp
push
test
fs
sbb
scas
leave
mov
push
rorl
inc
int3
outsl
lahf
mov
sub
fidivrs
stos
mov
dec
frstor
jo
rol
cld
xlat
mov
add
pop
or
addb
xor
pop
adc
jl
sarl
loopne
decb
and
xor
or
rcrb
imul
into
pop
pushf
pop
dec
out
pop
add
andl
push
and
mov
mov
or
inc
xor
leave
jns
xchg
arpl
sub
cs
xor
ljmp
idivl
cld
sti
dec
adcb
mov
faddp
cld
stos
jnp
sbb
mov
pop
dec
inc
sbb
ret
lret
scas
jmp
pop
mov
and
ret
adc
test
cld
xor
outsl
mov
sbb
push
and
dec
adc
ficoml
or
popf
pop
jl
repnz
mov
fstpl
fsubs
test
push
xchg
repnz
mov
pop
iret
repnz
pop
jle
hlt
push
lea
jecxz
cs
repz
xchg
jp
psraw
or
sbb
mov
pop
enter
inc
inc
pushf
pop
mov
nop
mov
cmp
xor
ds
aas
fstl
push
sub
mov
mov
pop
xor
sub
fldt
call
adc
pop
cmc
pushf
pop
pop
xchg
mov
mov
das
out
mov
sti
out
or
mov
iret
rorb
test
adc
sub
pop
mov
adc
out
cmp
sub
and
sub
or
lock
rorl
inc
outsl
mov
push
inc
push
jp
ja
jmp
jbe
mov
mov
movsb
push
cmp
push
int
jmp
imul
mov
lods
daa
cmp
xor
pop
fwait
popa
cmp
dec
push
inc
mov
mov
pushf
fwait
rcll
cmp
outsb
ja
pop
sbb
in
out
int3
fdivs
test
testl
mov
bound
ret
out
push
lods
cmp
or
pusha
lret
lret
ficompl
xor
adc
mov
inc
lds
mov
ljmp
std
ds
cmp
xchg
out
inc
out
cmpsb
lcall
xlat
pusha
add
popa
stc
push
mov
lock
or
add
jg
pop
test
xchg
push
leave
movsl
fistpl
lock
cmpsl
mov
imul
xchg
dec
jae
mov
and
test
lahf
lret
and
sarl
insl
jge
sbb
push
push
pavgw
shrb
mov
jge
std
mov
jno
addr16
std
mov
cmp
insb
loopne
dec
jecxz
mov
addr16
mov
stos
sub
mov
notb
rolb
mov
sbb
pop
lret
ret
and
gs
adc
jl
or
xor
dec
lret
push
adc
cmp
mov
jo
std
je
pop
inc
jnp
ljmp
je
mov
jecxz
pop
xchg
inc
bound
andb
jnp
test
call
ds
fs
xchg
cltd
cli
jmp
lock
cmpsb
pop
lcall
andl
push
imul
xchg
rcl
mov
std
pop
idivb
inc
cmp
push
mov
aad
call
fwait
or
shll
cwtl
adc
or
mov
bound
inc
jl
cli
in
scas
push
inc
les
clc
movsb
mov
xchg
push
idivl
mov
jmp
test
dec
ljmp
push
push
lret
xchg
lds
popa
cltd
divb
sbb
adcb
mov
push
adc
mov
imul
scas
add
fstpl
and
and
dec
jb
sub
fstl
lcall
adc
mov
into
mov
outsl
sbb
mov
push
in
dec
push
jg
or
jbe
cwtl
inc
inc
push
mov
pextrw
and
je
mov
shlb
ljmp
xchg
push
cmp
imul
lret
adc
push
leave
add
aam
test
sbb
xor
sub
test
arpl
push
push
xchg
lahf
jns
ficompl
nop
mov
add
jle
ret
add
push
outsl
pop
aam
mov
inc
adc
outsl
mull
dec
push
jmp
shl
aam
dec
mov
sub
loope
pop
mov
movsl
adc
or
test
sub
add
mul
xchg
xor
fldt
scas
lods
fwait
mov
int
sbb
mov
out
jl
pop
loope
sub
sti
out
insb
lea
mov
fdivl
xchg
xor
or
aas
xchg
les
push
stos
jns
xlat
in
imul
test
inc
aaa
aad
insl
and
adc
jae
push
jle
pop
insl
add
xchg
cmp
inc
into
jns
pop
shlb
cmc
push
or
pop
mull
roll
out
or
or
adc
xor
sbb
fucomp
mov
ror
mov
sbb
xchg
lods
jge
movsl
push
pop
cmp
jo
in
and
ficoml
mov
adc
add
test
sar
jmp
jnp
cmp
nop
scas
in
ss
or
aaa
xchg
bound
xor
cmp
jae
arpl
mov
sub
push
add
jl
icebp
pop
in
fsubrp
sbb
loope
pop
adc
mov
mov
push
jp
stc
aad
ljmp
fldl
lea
mov
roll
jge
loop
mov
xor
mov
negb
xchg
cs
rep
mov
in
mov
jge
jne
or
jmp
ret
mov
mov
movsb
sbb
jne
sub
std
sbb
sqrtps
jns
xchg
xor
mov
mov
dec
and
mov
cmpsl
inc
kxnorw
push
ss
sbb
jmp
xor
xchg
int
sbb
call
out
jge
sub
sbbb
test
mov
out
and
out
inc
out
lock
dec
mov
adc
push
inc
sahf
adc
dec
fisttps
aaa
jge
cmc
or
ror
pop
or
pop
dec
xchg
ds
cmp
mov
add
xchg
and
es
jns
lds
sub
cltd
movsb
pushf
pop
sbb
mov
je
ja
push
dec
cli
cmp
jae
dec
jo
jl
or
push
mov
adc
xorl
repz
cld
ret
fldenv
cmp
daa
mov
mov
inc
daa
cwtl
lods
notl
aaa
ljmp
adc
pop
jbe
xchg
lds
mov
push
jns
pop
push
add
xor
out
std
testl
sbb
inc
sbb
cmp
stos
jle
jne
cmp
push
mov
ficoms
jo
jae
imul
push
mov
adc
mov
or
js
sar
repnz
jbe
hlt
xor
and
push
jg
cmc
outsb
ret
add
mov
sub
lret
pop
dec
push
insl
popf
iret
xor
inc
and
mov
xchg
pop
out
movsl
ficoms
and
cmp
cmc
inc
fcmovne
adcl
inc
aas
xchg
add
fldenv
pop
and
cmp
ret
cli
mov
scas
push
movsl
xor
pop
lcall
sbb
popf
mov
shll
adc
xchg
or
cmpl
iret
xor
pop
push
call
addr16
adc
loope
cmp
cmp
push
imul
inc
int3
sub
mov
jnp
sbb
and
lea
loope
push
jo
xor
jecxz
adc
neg
int
inc
add
mov
mov
and
out
or
push
inc
orb
pop
outsb
cmpsl
adc
sub
dec
cltd
inc
movsb
test
cmp
adc
aaa
cmpsl
pop
and
push
push
int3
xchg
fistpll
mov
sub
or
adc
pop
cmpsl
sub
outsl
fistps
adc
and
dec
andl
adc
mulb
test
call
mov
mov
ret
and
mov
xor
fisttpll
imull
jge
sarl
insl
push
lods
pop
fcom
inc
aas
gs
popf
inc
push
cmpsl
mov
or
gs
jp
jmp
sub
outsb
cld
push
mov
mov
dec
push
outsl
bound
test
push
fst
icebp
sbb
push
outsb
in
bound
sub
mov
sbb
push
leave
jno
add
and
fists
jns
jmp
out
add
sub
inc
pop
mov
jmp
xchg
insl
and
xor
aad
ret
push
and
dec
dec
xor
add
scas
cs
cltd
jnp
aaa
xor
lret
mov
cmpl
push
jmp
popf
lock
push
and
inc
rol
cmp
movsl
jg
or
pop
xchg
push
pushl
incb
pop
popa
adc
mov
rol
jae
inc
mov
fnclex
jmp
hlt
xor
mov
lret
outsl
sub
mov
push
mov
cmpb
ja
popa
or
sbbb
sbb
popa
cmpl
cld
and
rcr
fwait
sbb
movsl
aas
cltd
dec
xorl
fisubl
and
fiaddl
hlt
dec
adc
dec
xor
pop
push
les
stc
mov
sbb
push
cmc
stc
dec
pop
cli
push
adc
or
sbb
dec
cmp
dec
mov
outsl
fnstsw
xchg
popa
ret
xchg
pushf
icebp
repnz
imul
stos
cmp
repz
adc
xchg
xor
dec
inc
xchg
cmp
int3
out
test
xchg
cmp
mov
sbb
lods
push
inc
dec
sbb
scas
jge
sbb
xchg
stc
imul
in
fcoms
adc
int3
test
or
mov
and
mov
jg
int
lcall
fisubs
push
sbb
xchg
les
push
inc
and
imull
loopne
adc
pop
adc
lret
push
and
mov
and
sub
ret
jno
test
mov
xorl
push
pusha
sbb
mov
mov
pushf
add
mov
and
push
in
bound
fbld
cmp
cmpsl
sub
idiv
adc
jl
add
jle
xchg
mov
pop
stc
adc
and
push
and
add
andl
ret
inc
push
dec
jnp
add
push
faddl
and
mov
mov
or
das
dec
out
adc
lods
popa
fs
out
lret
dec
cmpsb
ss
sub
xor
add
adc
je
fcmove
test
orb
xor
lcall
cli
cmp
and
mov
scas
push
mov
cmp
je
scas
pusha
in
imul
inc
enter
cmpl
add
insb
sub
iret
jge
and
into
rcll
out
popw
xchg
faddp
xlat
sub
adc
sbb
jb
mov
in
imul
inc
pusha
fcoml
adc
xor
inc
loop
js
jae
mov
fstl
push
fadd
gs
test
cmc
decl
cmc
je
mov
insl
testl
xor
fmul
fstpt
cmpsb
or
pop
aad
out
cwtl
jmp
aam
in
in
lahf
ljmp
push
push
out
sub
inc
arpl
je
test
xchg
inc
subb
lock
mov
mov
dec
leave
stc
pop
sbb
or
inc
xchg
cmp
hlt
push
adc
adc
fwait
pop
dec
add
push
push
rcr
or
imul
inc
jecxz
fistpll
mov
cmp
ds
xchg
jg
repnz
addr16
loopne
aad
aaa
enter
fs
mov
daa
cli
outsl
mov
adc
rcr
rcrb
mov
rcr
adc
xchg
mov
and
int3
lock
inc
lret
popa
push
in
fcoms
mov
rclb
push
xor
ss
out
xchg
xor
iret
push
ret
mov
pusha
outsl
std
pop
lcall
imul
xor
inc
dec
out
sbb
nop
cmp
lods
dec
ja
iret
and
loope
sar
lock
call
jmp
loope
cli
rcll
xchg
cmc
insb
in
pop
inc
xor
xchg
xchg
subb
add
fimull
inc
mov
pop
inc
push
push
sarb
mov
cmc
rolb
pop
fistl
mov
xchg
arpl
fbld
inc
test
push
add
adc
jae
outsb
imul
mov
sti
push
lret
lcall
xchg
negb
loope
cmp
fisubrs
mov
xchg
out
popf
cmp
icebp
and
cld
mov
pop
sbb
out
outsb
jo
jl
pop
outsb
scas
inc
add
pop
cmp
shrb
sbb
sub
mov
imul
das
add
jp
push
popf
rclb
add
cmp
incb
pop
ljmp
jg
xchg
and
stc
jae
push
push
inc
pop
test
ficomps
push
pop
xor
mov
repnz
add
or
xchg
lds
addr16
fistpl
jge
repnz
in
xchg
movsb
push
cmp
mov
and
lods
push
or
cmc
cmp
test
xor
pushaw
pushf
push
jo
dec
pusha
adc
or
popa
push
fadds
jo
cmpb
pop
pop
hlt
pop
xchg
movsl
dec
callw
int
pop
ret
orl
dec
push
jbe
test
add
idivl
adc
push
pop
repnz
scas
xchg
pop
das
xchg
cmp
imul
cli
cld
mov
std
adc
dec
ret
pushf
and
pushf
lret
or
arpl
inc
fnsave
std
mov
mov
jo
fs
in
test
aad
cmp
ljmp
inc
ja
jge
lcall
and
pusha
repz
sarb
cmpsl
stos
cmp
jb
int
popa
imul
mov
inc
and
push
fldt
jns
jl
and
push
or
cwtl
movsl
mov
sub
mov
push
cmpsl
pop
sub
loop
ljmp
in
mov
stc
dec
jmp
push
int
lcall
fisttpll
mov
repnz
dec
lds
jb
xor
out
pushl
mov
xchg
iret
std
mov
mov
loopne
bound
xor
push
out
add
xchg
dec
iret
adc
je
in
negl
ljmp
testb
ret
push
into
enter
adc
mov
sub
gs
push
scas
jg
jbe
iret
mov
div
loopne
movsl
xchg
cltd
jle
push
mov
push
mov
jae
mov
jl
adc
cld
xchg
mov
mov
mov
fistpl
dec
mov
inc
jg
out
stos
lret
hlt
mov
imul
push
out
sti
in
jno
rcll
xor
cli
popa
fadd
out
mov
ss
ljmp
sub
mov
int
cld
lds
adc
add
adc
inc
popf
repz
dec
loop
push
ja
or
inc
adc
test
mov
mov
mov
mov
or
mov
aaa
movb
xor
fwait
scas
cmp
push
ss
jae
mov
mov
dec
js
mov
jae
mov
and
scas
xchg
dec
test
xchg
lock
pop
mov
inc
ja
or
dec
ljmp
cwtl
jle
insl
mov
mov
das
or
stc
mov
sub
jo
out
push
push
add
mov
int3
mov
push
dec
lds
sbb
jnp
dec
ret
xor
test
inc
aas
fisubrl
addr16
xchg
std
mov
lods
mov
inc
xchg
or
jnp
cmp
aas
and
xchg
mov
jl
ret
adc
iret
pop
imul
and
sbb
xor
fmuls
push
dec
andb
dec
cmpsb
int
xor
jl
jbe
or
sub
xor
add
aam
xor
test
sub
mov
addr16
dec
xor
mov
jmp
call
lret
hlt
mov
insb
push
xor
sbb
int3
outsl
faddp
hlt
jae
outsl
adc
xorl
or
cli
dec
lahf
shlb
popf
cmc
jg
sub
mov
sbbl
push
loope
xchg
mov
mov
in
loope
inc
dec
push
icebp
sub
cmp
mov
neg
inc
and
jge
and
hlt
mov
imul
dec
imul
icebp
push
dec
inc
xor
xchg
xor
ja
jge
push
inc
cmp
aas
divb
fbstp
push
xchg
insb
push
les
es
subb
sbb
sbb
rcrb
xchg
or
xchg
lock
stos
pop
mov
in
add
stc
push
arpl
sub
out
andb
cmpsl
jnp
mov
push
dec
loope
or
sbb
shll
jno
mov
lret
push
sti
loope
test
cltd
fildl
inc
dec
rcl
stos
sbb
mov
xchg
lahf
xor
and
rcrb
mov
sbb
add
mov
aam
or
push
aas
xor
adc
inc
dec
pop
xlat
fsubr
sar
pop
ret
test
pusha
mov
mov
push
jns
cmpsb
push
jno
cmp
test
pop
stc
lds
ret
stos
sub
js
mov
lret
jae
hlt
and
dec
mov
inc
push
je
lds
push
or
clc
mov
push
mov
mov
pusha
mov
icebp
dec
int
sub
mov
adc
aam
mov
add
sub
mov
data16
add
sub
cwtl
push
pop
xchg
clc
sbb
jb
js
dec
hlt
mov
or
mov
ljmp
orl
inc
mov
data16
or
or
or
xchg
subl
dec
dec
jae
jns
jp
sub
cmc
mov
sub
cltd
shrb
std
mov
mov
daa
sbb
jne
adc
imul
adc
loopne
push
je
sbb
mov
test
or
std
pop
mov
pop
jge
jb
rcr
mov
and
jl
shrb
mov
sub
out
mov
pop
sbb
xor
test
ljmp
enter
inc
aad
inc
adc
jb
gs
xlat
xchg
in
cmp
loop
sbb
add
into
add
inc
inc
sti
lock
fimull
adc
xor
pop
fninit
call
in
scas
ss
or
cmp
arpl
jnp
cmc
in
cmpsl
push
cmpsb
push
adc
lahf
inc
in
ja
sbb
mov
mov
push
dec
push
mov
dec
out
movsb
and
ds
sahf
fnstsw
cs
arpl
lods
scas
dec
pop
int3
and
lret
sbb
dec
outsb
lock
out
adc
cmp
sahf
mov
adc
cmp
ret
insl
mov
mov
out
scas
fimull
inc
push
sahf
das
mov
xchg
dec
adc
and
and
jp
loope
cmp
sub
scas
lods
scas
cmpsb
stos
push
es
and
sbb
cmpsb
add
sbb
loopne
ret
pop
in
lahf
sbb
add
jl
lahf
bound
inc
mov
or
in
ret
inc
loop
inc
daa
lcall
push
jo
in
ret
repnz
jo
adc
loop
ds
arpl
pop
dec
in
lods
mov
sbb
fisttpll
adc
inc
inc
dec
clc
xchg
and
in
sbb
stc
inc
stc
push
inc
xor
sub
xchg
mov
imul
mov
cmp
push
popf
decl
sub
in
loope
or
xchg
cmp
pop
jae
and
outsb
inc
sbb
xchg
and
mov
popf
imul
sub
cmp
in
jne
xchg
sbb
push
push
roll
gs
mov
mov
jmp
dec
int
jb
rcrb
jns
mov
cmpsl
add
iret
inc
clc
dec
mov
push
jmp
in
push
mov
testb
add
xchg
outsl
xor
and
xchg
clc
jb
pop
xor
leave
out
jge
rcrb
xor
lea
mull
lea
push
sbb
sub
push
pop
sti
subl
dec
repz
mov
imul
jne
je
lea
popa
add
shll
jns
xchg
fcmovnbe
test
mov
push
sub
std
nop
faddl
mov
popa
add
add
inc
lods
pop
ds
insl
leave
mov
jo
stos
cmp
adc
pop
lcall
test
cld
adc
out
push
and
fnstenv
imul
rcll
cs
ja
or
push
xchg
in
mov
out
lock
push
mov
dec
int
out
pop
aaa
fsts
xchg
sti
push
aaa
adc
cmc
sahf
add
lret
aam
xor
or
adc
mov
inc
loopne
add
mov
inc
or
rcrl
adc
pop
je
mov
outsb
and
mov
fstp
dec
outsl
js
mov
cli
into
mov
inc
lods
mov
xchg
and
aaa
ja
mov
pusha
pop
icebp
sub
ffreep
pop
mov
cmp
aam
data16
pop
lcall
test
in
movl
lock
push
ja
test
lods
loopne
stos
or
gs
mov
jge
test
push
test
das
xchg
inc
int3
adcl
arpl
mov
movsl
sarb
frstor
aam
sbb
sbb
cltd
cld
or
add
daa
push
sub
les
xor
ret
mov
inc
aam
or
lds
xchg
sbb
js
pop
enter
mov
fstps
es
dec
cmp
fistl
and
jns
jge
xor
pop
out
inc
mov
in
aas
loope
iret
cmp
pushf
arpl
mov
jg
cwtl
and
lcall
mov
mov
data16
cmp
jmp
cmpsb
and
dec
dec
mov
dec
negl
sar
std
clc
insb
stos
xor
imul
xor
jmp
adc
dec
bnd
push
pop
cltd
inc
rcrl
mov
sahf
les
inc
loop
pusha
je
add
push
inc
dec
lock
imul
shl
in
insl
data16
shll
jmp
testb
inc
divb
xor
mov
pushw
shl
add
jb
push
dec
negl
jecxz
jb
and
jmp
data16
fisubrl
jae
sbb
mov
fwait
clc
sbbl
in
sbb
sub
and
xchg
jp
xchg
jle
mov
cmp
add
sub
outsl
inc
aam
in
idiv
rol
pop
lahf
mov
lds
rolb
sub
pop
mov
add
inc
push
daa
mov
loopne
mov
pop
jl
mov
add
faddp
xor
mov
imul
jb
out
movsl
inc
lret
jge
das
sub
iret
int
scas
pop
xor
dec
cmp
scas
ret
subb
xor
repnz
test
push
int3
mov
aas
es
movsl
mov
shlb
stc
addr16
loope
jl
fwait
rclb
dec
leave
add
adc
nop
jge
ret
je
push
mov
sbb
mov
insb
out
nop
mov
outsl
fucomp
jecxz
insl
pmulhuw
insb
or
inc
push
ja
lret
xor
cld
mov
mov
loopne
dec
enter
aas
mov
xchg
pop
rclb
lods
fdivrs
mov
xchg
jle
xlat
inc
mov
repnz
inc
sbb
xlat
loope
dec
adc
push
hlt
dec
inc
pop
jmp
adc
and
dec
outsl
sub
add
add
stos
loopne
or
add
shufps
mov
mov
and
lahf
in
jg
test
stc
jl
jge
cmp
cwtl
or
into
iret
bswap
push
mov
negb
mov
and
cmp
mov
adc
test
test
fwait
xchg
xchg
sub
jo
cmp
dec
pop
aam
lods
aad
cmpsb
rolb
push
mov
test
push
les
mov
and
and
mov
sub
jne
lahf
mov
sbb
in
sbb
ljmp
gs
inc
and
inc
bound
or
scas
enter
sbb
inc
mov
and
in
xor
jg
mov
scas
stos
jbe
daa
dec
aaa
mov
mov
and
cmpsb
loop
fcoms
in
mov
mov
test
cld
shrb
shlb
test
mov
hlt
adc
or
xor
pop
rcrl
aam
push
xor
adcb
fstl
mov
jne
loope
mov
in
rclb
mov
adc
call
push
jmp
nop
sub
nop
sbb
enter
sbb
xchg
push
xchg
xchg
adc
jae
cli
adcb
pop
bound
aaa
fs
sub
cld
pop
fcoms
fists
sub
or
ret
add
jno
sbb
jmp
mov
mov
cli
add
mov
stos
push
push
sahf
mov
and
sub
cmp
lock
and
jecxz
pop
inc
mov
fbstp
inc
lahf
push
or
popa
sub
pop
mov
movsl
loope
js
ljmp
push
add
mov
jae
cli
dec
les
mov
jns
bswap
enter
sub
xor
out
lret
mov
push
data16
mov
jecxz
pop
lcall
mov
stos
outsl
adc
bound
adcl
mov
cltd
jnp
lahf
test
push
dec
jmp
jb
add
into
fdivl
xchg
es
adc
xchg
stos
mov
push
jns
flds
dec
cmp
mov
mov
fwait
hlt
push
push
mov
xor
popa
sub
mov
movsb
adc
pushl
mov
stos
jne
repz
aaa
lret
mov
mov
mov
loope
jecxz
xor
inc
icebp
int3
mov
clc
movsb
pop
pusha
test
je
add
rcrl
outsl
mov
int3
in
add
xor
push
popf
sti
outsl
push
hlt
push
cmp
jp
in
cmp
mov
dec
jne
mov
mov
add
daa
gs
loopne
aas
into
inc
add
pusha
inc
les
mov
mov
inc
lds
fcompl
fbstp
or
not
xchg
mov
and
jecxz
push
and
adc
std
les
inc
mov
adc
je
fwait
add
imul
fistps
sbbb
push
ficomps
bound
lret
test
out
sbb
repz
sbb
lods
jb
and
sub
addr16
jnp
jl
cmp
cmp
pop
ret
lahf
pop
int
movsl
arpl
lods
cli
loop
inc
loop
cmp
bound
adc
sbb
roll
jns
je
or
and
in
cmpsl
pusha
cmpsl
fidivrl
xor
call
std
subb
sbb
fwait
adc
add
mov
mov
in
inc
mov
add
lret
scas
mov
add
ss
dec
repnz
movsl
mov
hlt
add
mov
int
loope
mov
mov
mov
or
cmc
push
fisubrs
mov
shlb
jnp
js
enter
sub
jecxz
and
sbb
cltd
jl
in
push
jno
mov
lods
popf
loop
adc
cmp
lcall
gs
mov
sub
rclb
sbb
mov
sbb
mov
ds
mov
push
sbb
mov
sub
mov
or
not
mov
cwtl
fwait
adc
pop
aam
rcrb
stc
fisubrs
lret
mov
int
outsl
ror
aam
cwtl
popf
iret
xchg
aad
cmp
xchg
mov
mov
adc
xchg
out
mov
rcl
push
cld
gs
inc
sarb
and
lcall
iret
imul
pop
pop
scas
mov
arpl
sti
cmc
test
cli
jmp
loope
mov
or
xor
ja
xchg
int
mov
pop
xchg
push
xor
pop
movsl
cltd
dec
lea
mov
fiadds
loopne
sbb
xor
mov
inc
push
icebp
push
xchg
lea
jg
cmp
icebp
cmp
fnsave
inc
ljmp
dec
cmp
arpl
pop
fwait
daa
xorb
ljmp
call
jle
loopne
fwait
mov
mov
sub
shr
mov
mov
push
out
in
into
filds
jl
pushf
mov
xchg
scas
mov
std
outsb
xor
mov
in
hlt
add
cmp
xchg
cli
fdivr
mov
enter
cvtdq2ps
jnp
sbb
cmp
xchg
xor
jo
xlat
push
lcall
sbb
adc
mov
into
lcall
sub
mov
xchg
mov
xchg
cmp
pop
sub
push
push
adcb
div
shlb
or
cmpsb
in
xchg
cs
je
push
and
inc
loope
mov
ja
rcrl
jge
and
and
popf
pop
or
push
cmpsb
sub
push
hlt
jae
lock
push
sub
test
fildll
push
cmp
iret
mov
outsl
jno
pop
sbb
cmp
xor
pusha
add
test
lods
fwait
mov
mov
mov
aaa
jns
mov
push
fsubrl
add
inc
scas
cmp
mov
shl
daa
pop
sbb
fisubrl
out
es
pushf
rcl
xor
lahf
jne
jnp
das
push
push
push
rol
dec
lods
sub
sbb
ss
enter
xor
cmpsb
arpl
xchg
inc
fldenv
into
sbb
cs
xchg
cmpsb
push
lods
fsubp
mov
add
cmpl
lock
bound
test
push
add
stos
aam
mov
xor
dec
arpl
lods
lret
sub
push
xor
je
inc
pop
bound
and
mov
repnz
movsl
stos
jl
testl
into
adc
repz
mov
pop
xchg
outsl
out
je
jp
xor
imul
jns
icebp
dec
xchg
popa
cmp
and
mov
mov
jg
das
test
and
stos
imul
push
pop
movsb
push
xchg
iret
inc
mov
hlt
rclb
inc
sbb
sahf
call
xchg
inc
sbb
add
mov
js
scas
cmp
inc
movsl
test
fisttpll
or
popf
js
pop
lea
test
cmc
mov
pop
lods
and
clc
arpl
mov
je
xchg
daa
jle
imul
mov
outsl
adc
mov
sub
std
js
test
xchg
push
sub
scas
fwait
pop
adc
stos
push
xchg
ret
pusha
sub
xchg
inc
pop
punpcklbw
imul
inc
xchg
pop
or
rcrl
mov
inc
add
mov
sbb
js
and
cmc
ja
jnp
adcl
in
push
shrl
pop
pop
mov
stos
insb
addb
xchg
push
mov
adc
ds
in
adc
jno
loope
loope
inc
pop
pop
sub
push
movsl
sahf
cli
inc
das
imull
dec
sbb
pop
jns
jmp
inc
mov
push
jnp
jnp
lret
pop
outsb
addr16
inc
add
imul
adc
xchg
adc
orb
pop
jae
rorw
push
fisubs
incb
hlt
mov
cmp
cmp
and
ljmp
xchg
es
sub
pop
inc
xor
cld
aam
push
insb
call
in
dec
rclb
hlt
adc
pushf
dec
mov
sbb
into
cmpsl
sub
ret
adc
lods
repz
repz
push
pop
cs
and
pop
mov
push
lret
fisubl
xlat
not
ret
cmc
rcrb
mov
test
pop
repz
in
xchg
das
aaa
movsl
xor
pop
mov
mov
into
addl
or
sub
xchg
xchg
repz
fdiv
mov
cmp
stos
mov
mov
add
fsubrl
stc
jecxz
into
dec
out
pop
pusha
xor
inc
inc
test
jecxz
push
mov
out
test
bound
xchg
scas
push
push
sub
cmp
xchg
in
and
sub
dec
sub
inc
add
pop
mov
iret
sbb
inc
push
xchg
popf
loop
in
mov
push
aaa
mov
and
sahf
in
rclb
in
fucomi
out
push
pop
aam
fbld
es
dec
or
pop
sub
in
or
pop
inc
es
mov
adc
mov
cltd
lods
cmp
xchg
mov
lods
aaa
pop
mov
xor
sub
jge
push
xor
adc
inc
lds
int
xchg
sarb
out
mov
push
inc
lock
xor
xor
xor
mov
or
popf
push
loope
bts
adc
mov
jb
xchg
popa
loop
call
nop
or
outsb
adc
pop
jge
bound
xor
outsb
ret
dec
jae
stos
sub
dec
and
mov
aas
cmpsb
or
iret
insl
stos
icebp
sub
enter
inc
xchg
mov
sahf
outsl
in
leave
jp
int
and
leave
xchg
pop
xchg
mull
fmuls
repnz
dec
adc
sub
int3
sbbb
cwtl
loopne
xchg
dec
dec
mov
mov
in
sbb
push
xor
addr16
fldl
insl
adc
out
lahf
mov
popf
jne
mov
push
push
ret
pop
cmpsb
aaa
pop
and
mov
test
mov
pop
xorl
cmpsb
test
jl
mov
setge
dec
sbb
cld
imul
sahf
ret
aad
icebp
push
das
imul
push
inc
scas
je
sub
mov
lods
cld
push
cmpsl
out
std
or
je
add
or
xchg
push
add
fldcw
int3
std
adc
test
pop
mov
cmp
test
test
push
es
push
inc
mov
pop
dec
mov
dec
or
jno
cmp
pop
in
cmc
test
xchg
int3
js
and
mov
and
addr16
scas
dec
or
push
pop
dec
rolb
ds
push
cwtl
les
std
mov
adcb
push
lret
sbb
mov
inc
xchg
ja
add
and
add
popa
cmp
outsl
cmp
test
in
insl
push
ret
ret
mov
stos
lahf
loopne
mov
xchg
push
sti
push
mov
xlat
jbe
aas
jle
or
mov
lcall
jge
jle
lock
jp
mov
out
inc
pop
sbb
pop
mov
lods
pop
mov
outsl
mov
jge
lret
or
and
adc
push
leave
inc
cld
dec
imull
mov
in
dec
fidivl
into
push
test
mov
sub
or
mov
js
xchg
push
stc
pop
xchg
movsb
pop
push
cmp
mov
pop
xor
sub
adcl
and
cld
and
pushf
xchg
pop
ds
adc
inc
dec
aad
add
je
xor
dec
xchg
out
adc
repnz
rcr
inc
sbb
push
cs
add
in
jecxz
sub
mov
mov
push
pop
xchg
mov
in
mov
inc
sub
xor
push
outsl
dec
mov
jge
mov
imul
push
cmp
insl
nop
xor
sbb
or
jo
inc
jmp
idivb
sbb
add
cmpsb
in
sub
pslld
les
test
pop
sbb
popa
inc
in
xchg
jae
test
jo
pusha
leave
xor
pusha
inc
mov
xor
pop
divb
push
adc
repz
movsl
divb
cltd
das
cmp
aaa
pop
cmp
inc
sarb
js
fmul
fdiv
aaa
add
ret
mov
jmp
jle
aas
insl
mov
push
push
movsl
out
ret
aaa
stos
jmp
xchg
ljmp
add
scas
and
xchg
mov
pusha
std
out
jb
fcomi
aad
push
stos
inc
addr16
mov
aaa
jg
or
mov
in
jne
test
in
adcb
pop
jmp
mov
mov
push
repz
jmp
cs
jmp
or
mov
ret
pop
jbe
mov
push
bound
push
icebp
xchg
xor
loope
sub
xor
adc
add
sbb
mov
push
pushf
push
sub
adc
mov
jnp
dec
movsl
pop
jno
mov
pushf
leave
test
loope
mov
movsb
gs
inc
add
jge
das
or
mov
cli
mov
addl
sub
ja
aaa
call
test
mov
jo
sahf
stos
pop
rorb
pop
aam
aad
push
mov
call
stos
out
call
into
add
sti
and
push
and
ret
rorb
scas
mov
pop
xor
sbb
jnp
sbbb
jae
and
sbb
sbb
mov
fistpl
jno
aas
sbb
and
xor
out
out
mov
xor
jp
sti
icebp
aam
jno
out
cs
js
cwtl
stc
or
push
add
push
sub
movsl
pusha
pop
jnp
aad
inc
js
push
pop
ret
test
xchg
addb
testl
enter
cli
sub
jae
lea
stos
sbb
ret
adc
scas
or
inc
in
mov
inc
jl
adcl
inc
inc
fwait
xchg
mov
insb
loop
inc
stos
cmpsb
call
in
pop
inc
leave
jmp
xchg
or
aaa
jno
popf
mov
dec
jo
out
cwtl
not
sbbl
cmpsl
or
xchg
loop
dec
fimuls
push
js
xchg
into
fsub
popa
leave
cld
pop
rolb
mov
outsl
in
jecxz
jle
test
or
mov
mov
push
cli
sub
inc
dec
cmpsb
cli
jl
or
fsubrp
add
mov
mov
pop
lods
mov
cmp
js
push
jecxz
rorl
sbb
scas
pusha
insl
inc
or
stos
imul
adc
add
neg
clc
aam
adc
insb
xor
pop
aas
or
repnz
mov
daa
loope
mov
lds
lock
es
xor
adc
dec
stos
xchg
dec
outsl
push
sbb
sti
xor
into
cmpsb
aaa
test
les
or
mov
test
les
outsl
clc
and
cmp
jp
daa
adc
in
add
mov
xor
ss
out
jmp
jbe
fstpl
mov
movsb
cmp
inc
gs
sbb
mov
xor
js
clc
lret
outsl
jae
sub
adcl
fiadds
cmp
xchg
rcrb
pop
inc
mov
xor
pusha
xchg
xchg
xchg
pop
sti
and
cmpsb
add
adc
inc
pop
lea
out
add
or
pop
stc
sarl
sub
adc
sbb
mov
aad
sarl
lods
pop
pop
outsl
movsl
mov
stc
iret
lret
addr16
push
mov
push
mov
call
mov
xchg
lret
mov
ret
inc
nop
sub
pop
pop
push
jl
inc
loopne
xor
lds
or
xor
cwtl
insb
sbb
push
sub
pop
jne
cmc
in
stos
push
mov
push
test
pop
add
in
mov
cmp
sarb
mov
mov
dec
jecxz
dec
lahf
fs
or
or
jo
out
sub
pop
jns
inc
test
mov
sbbl
rcl
pop
mov
inc
cmp
xor
shlb
out
fsubrs
ret
push
xchg
je
aad
testl
in
ret
f2xm1
andl
sbb
mov
mov
aaa
mov
jns
ret
fstps
jg
xor
or
dec
xchg
pop
lods
inc
mov
dec
cli
mov
cwtl
daa
pop
test
mov
adc
sub
test
pop
mov
lds
adc
popa
or
int3
insl
scas
sub
xchg
insl
insb
mov
mov
inc
sbb
out
push
loope
ret
insb
jae
jecxz,pt
stc
adc
lcall
mov
lea
outsl
leave
or
push
cld
test
xor
xchg
sbb
mov
mov
cmp
xor
cmp
add
mov
lea
cmp
pop
fisubs
rolb
push
cmp
cmp
sub
test
popf
outsl
pop
adc
adc
add
lret
lret
pop
cmp
fiadds
cmp
dec
inc
dec
ja
push
or
pop
in
ljmp
test
popf
mov
sbb
sub
or
sub
mov
pusha
xor
lret
push
movsl
dec
or
xchg
mov
cs
out
gs
ss
lods
adc
pushf
cmp
cmp
xchg
ret
xchg
pop
dec
sub
or
inc
mov
repz
or
dec
jle
in
inc
sub
movsb
ljmp
fs
hlt
push
aaa
in
sbbb
dec
add
adc
popa
dec
mov
faddl
xor
mov
inc
scas
mov
ljmp
ret
movl
xchg
pop
in
xchg
mov
inc
pop
lcall
mov
clc
sub
add
nop
push
mov
and
adc
xchg
lret
lods
mov
push
addb
or
jle
xchg
push
cmpsb
add
clc
xchg
out
inc
dec
iret
jecxz
pop
push
push
imul
cli
pop
pop
loop
pop
cmp
lret
xchg
lahf
gs
inc
test
push
push
push
stc
xchg
add
mov
loopne
repnz
mov
in
jne
jns
pop
sub
divl
imulb
xor
clc
xchg
stos
ret
je
xlat
sub
mov
cmp
ja
lret
scas
dec
push
mov
inc
and
pop
sub
sub
sahf
loop
inc
inc
cmp
inc
dec
inc
lcall
mov
pop
dec
aam
lods
or
aad
xor
add
dec
push
push
dec
adc
push
or
mov
and
scas
sarl
lcall
cmp
rorb
xor
data16
leave
mov
test
pop
sub
in
ror
jp
and
shll
outsl
or
int
pop
imulb
test
shrl
or
mov
out
mov
mov
repz
enter
enter
mov
movsb
repnz
push
leave
or
aad
jne
movsl
movb
inc
pop
mov
scas
lret
out
stos
daa
lods
aam
fiaddl
pop
stc
and
sti
inc
adc
cmpl
cmp
xchg
or
fwait
loopne
rcl
or
and
std
xor
mov
loop
xor
cld
push
adc
out
xchg
dec
sahf
mov
cltd
out
jge
inc
xor
sub
rcll
inc
sbb
push
stc
icebp
stos
xchg
xor
pop
sub
jbe
sbb
add
mov
fbstp
cld
aaa
je
jge
xlat
mov
rorb
cwtl
sub
mov
xchg
lds
mov
cwtl
sbb
or
cmpsl
mov
filds
cmp
call
inc
and
mov
xor
mov
outsb
les
pop
dec
subb
sbb
movsb
daa
or
je
xor
imul
imul
aas
cmp
inc
test
and
in
ja
xor
fadds
dec
xor
mov
mov
aaa
jmp
ja
rorb
fstl
and
es
mov
fstl
mov
mov
loop
imul
lcall
out
fdivr
jbe
lcall
scas
insb
cmp
sub
and
inc
mov
adc
rcl
sub
mov
fists
leave
cmpl
je
mov
test
add
mov
or
or
lcall
dec
mov
lock
out
jge
movsl
cmp
fdivr
out
pop
dec
loopne
mov
mov
xchg
push
dec
rclb
cld
jg
jg
push
mov
pop
xlat
mov
leave
jbe
mov
fidivrl
xor
aam
cli
push
lds
notl
not
lret
fwait
dec
orl
or
out
negb
dec
jnp
cmc
mov
adc
std
xchg
sbb
sub
jge
iret
loope
inc
mov
hlt
sub
push
mov
cmp
cmpsl
rcrl
in
add
cltd
fsubs
notl
jg
js
ret
fsubl
jns
inc
xor
or
jno
mov
sub
jmp
fdivl
jl
xor
xchg
ficoml
adcl
insb
lcall
mov
mov
fcmovne
fs
cmp
xor
jl
mov
outsl
fisubrs
mov
push
shll
pop
mov
cmp
out
xor
and
pop
jae
ds
iret
push
arpl
jge
pop
mov
mov
pop
xchg
aaa
test
mov
call
inc
pop
scas
loop
gs
mov
dec
mov
jp
xlat
mov
je
dec
je
mov
aad
mov
les
and
pushf
in
data16
inc
xchg
stos
nop
rclb
cmp
notb
push
xchg
movsl
dec
push
push
cmc
rcrb
enter
push
and
adc
gs
cmp
es
add
into
call
das
add
addr16
insl
cmpsb
and
mov
xlat
mov
push
add
or
jns
mov
rcrl
rcrb
push
scas
mov
sar
movb
pop
mov
mov
and
adc
mov
scas
cltd
insb
and
cmc
outsb
mov
pop
or
in
flds
mov
add
sub
lret
stc
and
fdivrl
xor
cwtl
in
or
bound
pusha
sbb
pop
and
add
xchg
fsubl
cltd
rcr
mov
int
cmp
xor
cmp
and
jmp
adc
push
js
jecxz
dec
cmpsl
jne
jbe
xchg
or
test
inc
out
add
int3
arpl
and
ror
inc
ds
xchg
aad
daa
int3
jl
pop
dec
jle
xorl
insb
push
in
cmc
mov
iret
test
sub
leave
cmp
das
jecxz
inc
nop
bnd
mov
sti
pusha
rcll
shlb
xor
mov
outsl
mov
popa
stos
ljmp
jmp
xbegin
sahf
sbb
dec
inc
or
fiadds
mov
enter
pop
sbb
sbbb
mov
aam
jae
or
cltd
mov
out
sbb
enter
shlb
mov
sbb
xchg
jb
addr16
test
pop
push
andl
mov
stos
push
nop
xor
inc
jge
xchg
loop
push
and
and
popa
lret
lahf
rcl
dec
aam
sbb
adc
ds
dec
push
xchg
cmc
sahf
test
in
int3
add
cmpsb
or
xchg
dec
pop
jbe
add
aad
mov
pusha
cmpsl
sti
add
lcall
aas
adc
out
push
lcall
out
mov
xor
or
loopne
cmpsl
js
icebp
negb
sahf
adc
test
nop
inc
sub
dec
add
xorl
inc
pop
ret
popf
stos
jecxz
mov
cwtl
cmp
xchg
dec
repnz
push
shll
in
shrl
pop
daa
frstor
adc
fcomi
out
ljmp
in
out
mov
int
mov
push
sbb
lods
out
les
mov
jmp
jno
cmp
mov
fmuls
jle
jae
cmpsl
stos
leave
xor
sub
or
cmp
es
sub
mov
stos
jge
mov
cmp
fwait
push
test
out
jnp
outsl
fsubrs
add
mov
cmpsl
adc
movsl
mov
cmp
push
lock
lret
xor
cltd
jns
fwait
add
cmp
das
enter
mov
shll
sbb
jmp
gs
jecxz
lds
add
fists
jmp
pop
sbb
jp
cld
rcr
pop
cli
mov
fldl
shlb
sahf
xchg
shll
lret
xor
mov
cld
mov
mov
iret
push
xchg
push
jp
clc
mov
mov
xlat
mov
movsb
mov
stos
adc
and
cmp
je
mov
and
mov
mov
dec
mov
or
out
insb
mov
cs
pop
add
stc
imulb
lock
es
xchg
xlat
loop
push
add
enter
pop
lret
test
loop
daa
pop
cmpsb
adc
test
inc
test
aaa
loop
adc
call
xchg
xor
dec
and
ljmp
jmp
into
mov
inc
jl
or
repnz
mov
lock
mov
mov
lret
push
sub
dec
test
arpl
addr16
fwait
jge
out
aaa
sub
sbb
mov
and
lret
repnz
mov
jno
test
movsl
cmpsl
sbb
xor
dec
mov
dec
fdivr
movsl
mov
ja
arpl
popa
divb
jb
mov
repz
mov
mov
out
cltd
jno
lea
nop
jp
ljmp
xchg
add
cmc
pop
fwait
scas
add
je
jbe
mov
lret
jmp
das
aad
inc
jle
and
lds
stos
mov
pop
aad
in
adc
lret
xor
mov
add
ret
mov
push
cli
movsb
cli
xor
inc
cmp
movsl
in
mov
lcall
test
and
lds
xor
popl
aas
adc
sub
hlt
pop
push
inc
test
cmovns
cmpsl
mov
dec
or
movsb
je
in
pop
idivl
mov
cmpsb
cmp
sbb
jns
pop
add
sbb
adc
test
xchg
daa
arpl
lods
push
lods
xchg
ret
addb
xlat
inc
ss
jnp
dec
adc
dec
roll
lret
sbb
jl
jle
mov
add
fidivl
mov
mov
inc
dec
loop
and
xchg
out
adc
xchg
inc
push
lcall
jne
int3
test
iret
or
dec
or
lea
jl
dec
and
in
cmpsb
sub
adc
mov
inc
xchg
add
out
sbb
add
inc
std
data16
aas
dec
or
fldl
mov
push
insl
mov
cmpsl
push
aam
dec
rorl
sbb
shl
mov
add
ljmp
fbstp
sahf
pushl
lcall
test
std
ds
sub
jae
sub
mov
in
mov
cmp
push
mov
lods
rcrb
lcall
stos
push
subb
jecxz
pop
xchg
jbe
add
stos
sbb
divb
push
jnp
cmpsb
divb
es
lock
movsb
jo
mov
sub
sub
sarl
mov
lahf
in
dec
mov
popf
xchg
xor
shrb
inc
dec
sub
fisubrs
fldt
shlb
rolb
inc
xchg
dec
add
sar
xor
loope
sub
inc
es
xchg
add
test
mull
cld
xor
mov
lods
and
stos
in
ljmp
adc
lcall
ljmp
mov
xor
jns
mov
inc
lret
out
cmp
inc
xchg
cmp
and
fldpi
dec
repz
iret
mov
cwtl
fstps
push
les
shll
dec
or
adc
xchg
pusha
stos
shlb
sub
pop
adc
pusha
cwtl
sbb
pop
fsubp
inc
enter
ds
hlt
mov
sbb
add
dec
inc
xchg
das
or
mov
pop
xor
pop
mov
ss
roll
mov
add
adcl
xlat
mov
jmp
arpl
das
or
xchg
cmc
xor
jae
adc
adc
cwtl
daa
inc
stc
pusha
sbb
lds
int
mov
xchg
pop
push
repz
repnz
call
push
stos
int
shll
addb
jnp
pop
test
push
mov
jle
push
mov
scas
jae
mov
lahf
xchg
mov
cmpsl
push
ja
aaa
and
sub
and
sbbb
or
jmp
mov
cmc
daa
inc
dec
rorb
dec
bound
xchg
cmc
mov
mov
sub
les
push
push
inc
lods
pop
mov
mov
test
dec
insb
mov
adc
sbb
loope
or
imulb
testl
lcall
mov
bound
pop
cmp
cmp
mov
cmp
jmp
test
and
inc
fimuls
mov
add
push
jl
fwait
pusha
insb
rclb
mov
daa
inc
pop
jmp
and
adc
jmp
mov
and
insb
sbb
adc
dec
inc
mov
in
dec
mov
data16
fidivs
inc
out
loop
aaa
mov
add
test
mov
pop
pop
inc
adc
cmp
stos
add
mov
xor
pushf
cwtl
rclb
iret
daa
iret
fs
sub
out
scas
in
or
loop
add
add
les
push
gs
in
decl
push
cli
lret
imul
jp
std
stos
cmpsl
xchg
int
xor
push
adc
int
push
mov
cmp
cltd
ret
cmpsl
mov
or
hlt
call
mov
adc
mov
mov
jl
cli
fisttpl
jmp
fdivs
arpl
std
vcvtdq2ps
cmp
or
ficoms
shll
fsubl
fwait
pop
mov
dec
test
lds
js
imul
int3
jecxz
cmp
sbb
inc
cmc
cli
mov
ja
dec
mov
clc
cmp
cmp
inc
aad
mov
out
dec
or
outsl
and
mov
test
bnd
push
outsl
xchg
xchg
adc
push
push
mov
outsl
cmpsl
loope
push
cmpsb
or
mov
jo
movb
cmp
mov
inc
aam
call
cli
les
add
fcomp
cli
in
mov
and
aas
and
mov
jecxz
clc
or
movlps
fadds
roll
push
cltd
add
push
add
add
das
test
call
push
fwait
mov
aad
mov
jmp
rorl
fcompp
mov
adc
dec
jns
int
mov
or
mov
jnp
mov
mov
pop
adc
and
pop
ret
aas
out
push
jl
les
into
leave
push
insl
pop
push
pop
cmpsl
cmovnp
jns
loope
push
shll
add
push
frstor
xorb
jl
jg
lock
sarb
mov
pop
aam
adc
sub
mov
in
addr16
mov
testl
or
inc
add
mov
xorl
mov
jge
inc
popa
fimuls
test
mov
jne
jmp
jb
lock
add
mulb
sbb
imul
mov
orl
fldl
cmpsl
mov
lret
imul
movsb
mov
cmp
out
roll
jle
cmc
fwait
and
adc
or
xchg
jb
lods
mov
js
xor
andl
stos
jns
enter
jle
jecxz
add
pop
sbb
mov
inc
add
nop
test
jae
outsl
add
or
out
mov
bound
or
xchg
or
js
inc
mov
push
dec
inc
arpl
rolb
nop
cltd
lds
inc
pop
orl
push
mov
mov
cld
xor
call
mov
lea
test
insb
out
add
dec
xchg
inc
cmp
call
add
push
or
inc
clc
xchg
popa
lcall
lcall
imulb
jb
dec
mov
lcall
xchg
sbb
out
rorl
nop
inc
or
loopne
es
ret
adc
dec
jp
iret
imul
mov
ja
stc
js
jge
cwtl
je
arpl
push
mov
popf
and
xchg
pop
aas
pusha
xchg
jno
out
xchg
cld
lock
pop
and
inc
push
mov
clc
or
jecxz
pop
add
test
pushf
sub
stc
gs
lea
mov
mov
lods
push
das
pusha
out
das
and
inc
mov
jno
arpl
sahf
inc
rorl
ret
outsb
mov
jl
sub
jl
aaa
int3
das
xlat
arpl
fadds
es
xlat
aas
mov
xor
ret
sub
lock
and
pop
pop
bswap
add
mov
in
jecxz
fwait
das
add
and
aam
stc
add
dec
out
scas
adc
jno
call
test
scas
out
and
movsb
aaa
mov
ja
cmpsb
sahf
cs
stos
mov
lahf
xor
pop
sti
lret
mov
mov
scas
push
cld
jp
mov
int
popa
dec
repz
xchg
dec
mov
xchg
daa
lock
ret
enter
cmp
pop
roll
nop
or
ljmp
cmp
addb
pushf
movsb
push
jp
jecxz
inc
inc
xor
stos
popf
adc
mov
aaa
lods
push
ds
lods
add
out
dec
out
mov
sbb
and
mov
ret
ss
out
push
popa
lret
es
movsb
jo
outsl
lds
inc
stos
test
leave
rcr
fwait
adc
xchg
lods
sbb
xchg
mov
lcall
cmp
cmpl
shl
mov
dec
xor
movsb
cmpsb
add
fistpll
mov
xchg
test
shrb
xchg
les
and
insb
dec
leave
jns
gs
andb
xorb
mov
mov
inc
adc
sub
cmp
hlt
mov
popa
scas
add
in
push
pusha
add
sbb
push
push
and
jbe
push
prefetchw
leave
mov
aas
fs
pop
fistpl
sub
cld
sub
outsb
dec
xchg
ret
aad
sti
in
cmp
jbe
stos
in
fidivs
pop
ljmp
xor
cld
fadd
negb
mov
popf
or
xor
mov
or
inc
push
int3
scas
pop
icebp
xor
add
jb
add
negb
jns
xchg
aas
pop
lret
imul
mov
add
in
push
jno
mov
mov
dec
gs
decb
jb
pushl
jo
call
sbb
mov
lds
int
xor
jl
and
out
clc
in
mov
sbb
sub
repnz
push
sbb
xor
xacquire
cwtl
ss
sub
test
and
daa
das
lock
aad
in
cltd
and
cs
mov
loope
sbb
jmp
cwtl
pop
xchg
outsb
xchg
ficoml
sub
addr16
mov
add
xchg
mov
jg
pushf
rclb
mov
mov
sbb
mov
push
out
ss
mov
push
daa
ret
adcl
xor
std
inc
dec
cmp
sbb
imul
lds
push
stos
mov
or
fstl
pop
je
adc
mov
add
outsl
loope
mov
fildll
jge
test
xor
jbe
rolb
push
out
push
jecxz
dec
out
ljmp
mov
test
mov
stos
aas
scas
lds
ret
cmpl
ljmp
shll
aas
and
mov
sub
in
jmp
jmp
insb
pop
xchg
or
insb
loop
add
jmp
enter
lret
xor
add
cmp
cmp
and
enter
idivb
inc
push
imul
mov
jecxz
insl
lods
jmp
mov
mov
pop
ficomps
sti
jne
test
mov
push
xchg
jle
mov
popa
cwtl
pop
icebp
not
jae
cld
push
or
decb
xchg
aad
dec
jb
dec
fiaddl
das
lahf
adc
pop
pop
daa
jp
inc
iret
pop
inc
add
inc
dec
leave
inc
fisubrs
pop
shll
pop
mov
and
pop
cmpl
in
mov
movsl
mov
bound
subl
cmpsb
add
out
gs
sbb
push
fildll
mov
lds
adc
pop
ss
loope,pt
pop
inc
lock
mov
inc
test
jg
sub
jmp
mov
popf
add
xchg
popa
sub
lods
inc
and
pop
testl
and
push
push
push
icebp
dec
out
rol
inc
int
addr16
cwtl
inc
add
insb
inc
xor
cs
shrl
mov
es
and
fstpl
jb
dec
dec
pusha
or
fbld
lock
icebp
push
loope
lret
and
adc
mov
xor
les
mov
jne
xchg
or
pop
sbb
or
mov
mov
idivb
mov
adc
jno
and
pop
out
cmp
aas
rolb
push
bound
roll
shll
sahf
fisttpl
mov
mov
int
push
mov
in
cmp
pop
jmp
pushf
jge,pn
mov
jbe
xor
cmp
inc
cmp
cmp
cli
mov
cmp
scas
mov
adcb
lret
and
pop
lahf
xchg
jmp
inc
add
and
aam
inc
or
fsubrl
fiaddl
sbb
and
jne
pusha
mov
lcall
sti
test
pop
in
std
mov
in
mov
cltd
pop
gs
xchg
divl
sbbb
aad
xor
xchg
lret
xor
sbb
cmc
xor
jg
mov
dec
mov
push
pop
xchg
leave
pop
ret
fdivrs
mov
iret
adc
ret
lods
cmp
sbb
mov
loopne
mov
aas
add
mov
mov
stos
shl
ret
out
sub
or
sbb
inc
mov
push
pop
lock
xor
lcall
imul
dec
adcb
or
mov
pop
je
repz
xchg
repnz
aas
and
pop
push
int
dec
arpl
hlt
repnz
adc
outsl
sub
movsb
in
and
adc
aaa
aad
cmp
out
adc
dec
outsl
jge
cmc
xchg
insb
pop
gs
iret
mov
pop
mov
mov
dec
pop
dec
xor
or
cs
sarl
xchg
mov
cs
leave
lret
std
fistl
pop
gs
mov
insl
push
pop
test
pushf
push
add
loope
jae
jecxz
imul
lret
sbb
dec
xchg
rcll
fldz
add
notb
insl
cwtl
out
jns
fucomp
and
mov
dec
dec
stos
das
out
pop
mov
xchg
pop
insb
loop
vorps
pop
add
imul
imul
ret
loope
pop
mov
enter
repnz
in
pop
scas
aaa
xchg
jno
mov
decb
sahf
pop
sti
jl
in
fsubrp
and
decl
mov
out
outsl
sub
mov
mov
jecxz
andl
inc
fisubrs
dec
and
imul
pop
mov
adcl
std
std
mov
push
sarb
fwait
dec
idivl
insl
cmp
add
or
inc
imul
outsb
shll
inc
dec
call
adc
and
jecxz
cmp
jno
shlb
jecxz
or
mov
xor
inc
call
mov
rcrb
add
lods
sub
sarl
xchg
cmp
jbe
add
lret
and
mov
mov
addr16
push
mov
leave
icebp
sbb
je
test
push
xchg
mov
popf
push
push
adc
cmp
jle
loope
cmp
push
es
in
lods
push
sahf
xchg
jo
pushf
gs
pop
sbb
out
imul
cwtl
stos
lds
xchg
out
jp
sub
add
out
xchg
xchg
pop
cmp
push
sbb
std
xor
int3
and
sub
inc
out
mov
dec
dec
imul
pop
adc
mov
jecxz
mov
fiadds
push
inc
adc
sbb
mov
xchg
xor
pop
aaa
add
add
stos
repnz
cmc
mov
pop
js
xchg
or
pop
rcr
repnz
fdivrl
mulw
mov
adc
push
fs
push
les
inc
cmp
popa
sbb
scas
jg
enter
out
xchg
and
daa
sub
xchg
lds
push
pop
and
cmp
insb
imul
cmpsb
pop
loope
orl
popf
pop
inc
loop
lret
inc
mov
push
adc
jmp
not
dec
sti
mov
lea
mov
jle
lock
add
inc
in
out
xor
fs
inc
inc
or
addr16
lock
jb
icebp
movsl
aas
test
pop
scas
xlat
and
fildl
or
mov
int
rcl
dec
mov
mov
in
cltd
scas
loope
hlt
dec
inc
add
scas
out
and
pop
in
sub
pushf
and
arpl
dec
mov
jge
adc
movsb
pop
sahf
mov
sub
imul
mov
push
lods
lcall
adc
xabort
adc
cltd
lock
clc
mov
cmp
movb
iret
cmpsb
icebp
popa
xchg
arpl
shlb
stos
sbb
or
dec
mull
ror
adc
xor
rorb
rol
hlt
lcall
in
mov
mov
cmp
and
or
das
sarl
aas
ds
mov
adc
jge
test
test
cltd
dec
push
frstor
out
int3
dec
or
int
sbb
scas
pusha
popa
dec
push
sbb
aad
cmp
push
mov
aam
xor
sub
outsb
std
add
jne
pop
sbb
in
mov
fs
and
fs
scas
adcl
sbb
cmpsb
mov
pop
cli
stc
pop
shl
pop
int
movsl
stc
xor
cmp
jg
jp
leave
inc
inc
push
ds
sub
pop
mov
jg
cld
pop
imul
jecxz
pop
in
rolb
ret
xchg
adc
sahf
cmpsb
mov
ror
mov
jo
in
xor
shrd
sbb
mov
xchg
fmull
les
imul
out
dec
inc
cli
mov
xor
lock
jle
and
out
das
adc
ja
lret
adc
push
fiadds
pop
pop
xor
imul
daa
and
jns
sub
inc
popa
daa
mov
or
and
or
ficompl
pushl
mov
inc
icebp
popl
mov
and
cmp
and
pusha
and
dec
xchg
mov
cmp
adc
out
sbb
in
movsl
mov
add
mov
mov
mov
and
fidivrs
into
mov
and
jbe
rcrl
or
and
das
lcall
movsb
xchg
fldt
outsl
scas
pop
movsb
and
or
jae
loopne
mov
inc
push
inc
lock
pop
fnstenv
stos
and
addb
loop
out
dec
outsl
std
sbb
push
je
push
xchg
roll
mov
outsl
adc
repnz
push
or
lods
mov
sbb
jp
or
fistpll
pushf
sahf
and
sub
aam
or
popf
mov
pop
mov
ss
xchg
inc
mov
mov
test
mov
rcrl
in
mov
sahf
imul
jg
lods
je
cwtl
and
pop
pmullw
pusha
outsb
cmp
cmp
in
jle
push
inc
test
push
flds
push
or
dec
orl
popf
mov
fwait
jmp
scas
insl
or
and
ss
aad
xor
loop
mov
scas
ror
dec
cld
sub
test
push
cltd
jg
lret
or
dec
and
jp
mov
daa
cli
cltd
mov
mov
shl
adc
sbb
dec
fnstcw
test
int
sbb
sarb
outsl
std
out
scas
or
pop
and
dec
and
dec
and
leave
xchg
out
inc
inc
imul
cmp
mov
ret
out
mov
mov
imul
jns
lret
ss
int3
xor
sbbl
clc
ja
int
cmp
jle
dec
pop
mov
mov
int
ficoml
mov
mov
and
pop
fs
ret
sbb
mov
aas
in
fldcw
jl
repz
jge
pop
arpl
sub
rorl
jo
fucomip
pusha
mov
fcmovb
inc
xchg
push
arpl
push
mov
leave
je
push
mov
dec
xchg
aam
aas
pop
fistpll
or
sbb
xor
scas
mov
inc
inc
pop
in
pop
pop
sbb
add
ljmp
andl
rcr
ficomps
call
aam
jecxz
jecxz
or
test
les
cmp
push
adc
xchg
jg
pushf
mov
or
dec
xor
les
pushl
stos
loope
in
and
mov
mov
das
test
jp
insb
sbb
mov
fcoms
or
fistps
or
push
push
aam
mov
mov
push
jl
sbb
or
xor
sbb
sub
aaa
jo
hlt
jbe,pn
aas
int3
dec
into
push
mov
or
jns
sub
fs
jnp
push
jbe
or
mov
push
pop
sbb
mov
pop
rcl
pop
or
dec
cmp
and
jmp
xchg
pop
jo
mov
pop
negb
dec
adc
shrb
push
test
in
ljmp
push
ror
mov
add
gs
adc
bound
jmp
and
cld
aad
adc
ljmp
push
adc
adc
dec
push
or
xlat
sub
ja
jmp
xchg
mov
jl
or
xchg
cli
stc
dec
mov
cmp
stos
lea
in
xchg
xchg
push
and
shll
xchg
add
cmpsb
shrl
cmp
mov
and
dec
dec
mov
std
sbb
lret
sahf
mov
sbb
mov
rol
mov
lahf
orb
ss
mov
or
cmp
xchg
cmp
xchg
sub
sbb
sub
push
mov
out
pop
ds
cmp
ss
pop
cli
dec
dec
cmp
imul
inc
ss
fndisi(8087
push
pop
int3
push
lret
aas
dec
repnz
push
stos
fidivs
addr16
dec
fs
loop
subb
add
imul
or
in
cmp
jo
loopne
pop
fsubr
lret
pop
xchg
jbe
out
fwait
adc
sbb
lcall
push
scas
out
xchg
sti
cmp
xor
sbb
mov
rol
sbb
pop
dec
pop
push
mov
repz
loope
into
nop
into
mov
loope
pushf
ret
xor
mov
push
mov
add
pop
aad
movsl
add
popf
push
xchg
fidivl
das
out
lock
movsl
push
push
mov
adc
aas
orb
scas
ror
mov
pop
sahf
sbb
xchg
xchg
mov
add
and
mov
sub
and
mov
cmp
fs
clc
cli
inc
repnz
fistpl
ret
xchg
nop
xchg
nop
mov
xchg
or
cld
xor
sbb
mov
dec
int
push
lcall
cld
cli
out
push
js
addr16
mov
sti
repz
loopne
arpl
pop
sub
dec
dec
pushf
ss
push
adc
outsl
mov
sub
stos
cltd
xchg
in
dec
inc
dec
enter
roll
push
sarb
jmp
in
lahf
lret
sub
mov
and
lret
push
pop
add
cmovne
mov
cmp
dec
ret
pop
mov
push
add
movsl
mov
test
popf
movsb
adc
or
pushf
xor
rcrb
repz
mov
sarb
cld
or
lock
dec
int3
xchg
loope
adc
inc
jl
mov
rcrl
pop
shlb
stos
cmp
xor
arpl
mov
pusha
ds
add
insl
hlt
setae
cmp
xchg
cmpsl
in
notl
xor
fildl
loopne
lea
in
fidivrl
cmp
shrl
es
insb
cmpsb
dec
ret
out
mov
repnz
loope
mov
jb
xchg
test
dec
mov
adc
cli
call
imul
sub
out
outsl
arpl
stos
pop
mov
iret
in
xchg
add
push
fstl
add
or
pop
or
inc
xchg
jo
insl
adc
jb
sub
cwtl
out
stc
or
out
pushf
mov
shrl
xchg
je
test
aam
stc
aaa
repnz
mov
cmp
add
pop
mov
mov
cmp
rclb
sti
xchg
bswap
ret
jo
adc
ret
adc
jns
cmp
push
das
sbb
outsb
cli
aas
call
das
stc
gs
sbb
sbb
shll
jae
adc
insl
ds
mov
sarl
mov
rolb
int3
shrl
sbb
mov
sbb
inc
sbb
stc
sbb
dec
dec
jl
sarb
outsl
lds
sti
sbb
dec
les
icebp
xor
mov
xor
xchg
test
mov
xchg
sub
out
inc
aaa
pop
xchg
mov
add
jae
bound
sarl
inc
gs
mov
sbb
lds
inc
movsl
sti
pop
loopne
ds
lret
insb
mov
mov
xor
decl
mov
cmp
divb
scas
popa
add
push
out
shrl
sbb
sub
pop
jge
sub
loope
cltd
lret
flds
mov
fsubl
negl
cld
mov
xchg
aas
xchg
mov
push
cmpsl
icebp
loop
or
js
inc
jle
in
sub
cli
aam
aad
dec
in
out
cmpsl
jecxz
and
js
mov
mov
or
inc
popa
xchg
pop
inc
leave
fcoml
repz
test
add
xchg
pop
and
shlb
out
movsl
js
inc
and
and
pop
mov
insb
push
in
xor
imul
dec
enter
mov
cmpsb
lea
mov
push
cli
cmp
scas
nopl
into
inc
inc
aad
outsl
rclb
jl
or
sti
pop
mov
adc
jbe
add
aad
lds
dec
push
popf
adc
push
pushl
add
lods
jp
and
test
popl
or
sbb
in
and
xor
cltd
sbb
in
sub
and
flds
out
js
clc
push
pop
pop
push
neg
push
push
push
fiaddl
out
adc
stc
jmp
sub
mov
xchg
push
loope
dec
ret
inc
popa
adc
xchg
xchg
jecxz
xor
dec
addb
fisubs
fstpl
pusha
xor
xchg
lea
jmp
mov
fdivrs
out
inc
mov
scas
jecxz
ret
data16
sub
pop
inc
adc
xchg
push
ds
out
mov
cmp
imul
cmc
rcl
push
pusha
sbb
mov
hlt
or
mov
std
add
mov
mov
fdivl
sbbw
popa
out
inc
or
xor
pop
imul
ret
sarl
sub
inc
push
dec
cmpsb
dec
push
mov
mov
dec
test
inc
cmp
lret
pop
les
jmp
movsb
cmpsb
jo
dec
in
in
jecxz
push
sbb
xor
dec
pop
xchg
outsl
jecxz
insl
xor
mov
cmp
jmp
ret
mov
insb
sti
inc
jbe
sub
cs
inc
cld
add
mov
icebp
jmp
sbb
adc
push
mov
call
sub
cmp
xchg
sbb
and
aas
les
fsubl
xchg
aaa
nop
and
mov
shrb
pushf
cltd
es
mov
test
jbe
xchg
mov
adc
cwtl
mov
jbe
cmp
xchg
or
and
call
lds
jmp
int
mov
xor
insl
stc
es
mov
xchg
mov
ljmp
stc
outsl
gs
xor
jecxz
hlt
xor
jbe
sub
or
xchg
in
bound
sub
fsubs
hlt
pushf
dec
shr
xorl
ficoms
ljmp
pushf
cmp
add
movsb
xchg
sub
xlat
lea
popa
sub
dec
jae
or
ja
call
in
lret
and
ror
xor
dec
test
dec
lret
mov
dec
jmp
and
cmpsl
idiv
dec
cs
mov
repnz
test
mov
push
dec
sub
push
cmp
add
xchg
aad
or
cwtl
das
xchg
stos
add
pop
cmpsl
stc
cwtl
mov
xorl
fsts
xor
xorb
in
loopne
insb
mov
and
jmp
xchg
cmpsb
jecxz
mov
cmp
cli
mov
and
push
adc
sarb
dec
sbb
xchg
push
sbb
fcmove
add
ret
ljmp
jnp
pop
jmp
adc
inc
popf
jno
fdivp
add
adc
sbb
xlat
xchg
mov
cli
pop
aam
pop
sbb
push
leave
daa
sbb
jae
cmp
or
push
test
enter
cmp
xlat
xchg
pop
adc
mov
fdivrl
or
jl
or
jb
mov
push
push
push
mov
cmpsb
dec
sub
iret
sub
pop
andl
adc
add
dec
jns
or
adc
or
lret
mov
inc
xchg
cmpsl
sbb
pop
jbe
jge
es
and
xchg
std
pop
pop
push
enter
daa
sbb
jno
lcall
inc
jnp
add
repz
or
xchg
in
ss
mov
repz
pop
pop
arpl
fcompl
inc
xchg
fmull
xchg
pop
enter
pop
in
aaa
popa
mov
xchg
xchg
pop
lcall
cmp
rclb
fcmovnbe
jo
cs
sbbb
push
fdivrs
nop
imulb
leave
arpl
sbb
outsl
cmp
test
cmp
adc
in
adc
inc
jo
or
push
pop
jecxz
aas
mov
fisubl
add
scas
jb
or
add
mov
jecxz
cmp
xchg
inc
in
cli
xor
jmp
xchg
mov
fwait
arpl
mov
sub
rcll
jp
ss
xor
pop
cmp
push
pop
loop
mov
sbb
or
gs
adc
cmp
shr
push
adc
ficompl
mov
fmulp
into
imulb
lcall
ret
or
pop
dec
dec
js
movsb
mov
push
inc
cmc
aam
mov
sbb
and
dec
xor
mov
mov
xor
inc
dec
test
ss
movsl
mov
add
das
jge
fistpl
xorb
xchg
repnz
stc
push
rorl
inc
sub
dec
mov
jnp
flds
iret
dec
add
or
lea
add
mov
imul
xor
pop
add
mov
movsb
jae
adc
inc
add
negb
ret
fwait
insb
push
sbb
cmp
or
jp
rcll
out
push
imul
cmp
xchg
imul
sub
lret
add
jb
sub
xlat
cltd
add
add
inc
arpl
bound
leave
jne
xchg
pop
xchg
mov
cmp
jne
adc
mov
sbbb
lcall
enter
testl
mov
or
int
push
out
jbe
in
mov
in
and
xchg
ret
std
int3
inc
lea
mov
pop
sub
pop
jle
aam
out
push
cmpsb
int3
xchg
jg
push
in
icebp
movsl
mov
xchg
push
insb
in
dec
es
inc
xorb
nop
fdiv
sbb
xchg
arpl
cmp
xor
out
xchg
cld
out
xor
movsb
lret
cmp
fists
jge
xchg
cmp
jns
sbb
pop
jecxz
outsb
adc
add
dec
lods
xchg
sbb
or
lcall
jl
mov
loope,pt
xor
xchg
fisttps
or
xchg
neg
xlat
mov
out
das
fcompl
ficoml
cwtl
jo
mov
pop
test
nop
cmp
testl
sbb
pop
enter
cmp
xchg
enter
std
pop
movsb
lret
and
addr16
mov
rolw
movsl
std
js
icebp
sub
fcomps
nop
mov
loopne
jecxz
sub
mov
std
call
sti
xchg
out
aas
sub
sbb
and
call
ret
jg
cs
push
fcoms
test
je
leave
xchg
mov
fsubs
xchg
dec
sbb
push
jb
xor
fistps
fmulp
push
icebp
inc
dec
sbb
mov
dec
out
jbe
shll
xlat
or
jge
push
and
dec
adc
pop
push
inc
pop
push
cmpsb
mov
adc
and
or
pop
or
lret
les
arpl
fcoml
ljmp
scas
inc
sub
outsl
test
out
pop
jmp
adc
mov
mov
xor
inc
adc
mov
xchg
testl
loope
ljmp
jmp
nop
fisubrl
ret
movl
in
dec
mov
inc
jns
sbb
jecxz
pop
pop
test
jo
int3
sbb
lcall
adc
xchg
adc
les
leave
cltd
js
xchg
aam
or
add
dec
int3
das
pop
fimuls
or
push
sbb
cmp
out
dec
mov
movsb
mov
sbb
xor
cs
sbb
jge
aam
lcall
sub
arpl
outsl
mov
fcompl
push
mov
pop
imulb
add
out
inc
mov
mov
sub
in
int
xchg
jo
mov
and
push
fs
imull
jecxz
jae
push
pop
push
inc
jnp
in
js
mov
test
mov
adc
adc
mov
mov
mov
cmp
out
push
lret
mov
stc
inc
sti
sbb
adc
mov
inc
add
popf
xchg
adc
pop
xor
sbb
inc
mov
mov
arpl
push
rcl
dec
inc
addb
shlb
iret
lods
mov
pop
fistpll
pop
mov
cmp
pop
lahf
cmp
nop
pusha
fidivrl
out
sbb
add
mov
ror
cs
stos
call
shlb
clc
pop
loope
sub
adc
xorl
mov
imul
inc
lcall
mov
inc
sub
xchg
cmp
inc
bswap
xor
jns
loope
lret
pop
test
call
add
out
lret
cli
xchg
mov
jge
push
lods
loopne
cmp
shll
lods
lcall
and
shll
out
imul
das
push
sub
xor
mov
pusha
in
adc
cli
jl
rcl
inc
jle
lds
lret
mov
push
inc
in
outsl
enter
push
sbb
lods
mov
jb
and
test
push
dec
push
cmp
int3
icebp
lock
and
push
outsl
movsb
psrlq
aad
adc
jl
notl
js
int
inc
cmpsl
or
mov
sarb
xchg
fs
out
mov
cmc
sbb
xor
xchg
push
lea
push
adc
mov
and
sub
adc
pusha
jns
xchg
inc
cmp
filds
jecxz
mov
add
les
mov
mov
popf
xor
mov
xor
scas
insl
sub
loop
and
lods
aaa
movsb
out
sbb
dec
mov
je
mov
fimuls
pushf
mov
xor
xchg
pushf
jnp
push
mov
adc
call
or
test
push
push
leave
aad
pop
cmp
in
shrb
lret
nop
or
imul
add
xchg
sub
and
cmp
les
pop
pop
loop
je
pop
insb
test
jo
fsin
fidivs
inc
mov
inc
inc
outsb
pop
jmp
add
out
sub
mov
popf
xchg
push
mov
mov
dec
xorl
mov
jl
cmpsl
pop
sub
das
into
lods
ret
xor
mov
adc
cmp
xor
sarb
ss
add
xchg
lcall
push
lret
imulb
jmp
sbb
jnp
dec
dec
ja
xor
hlt
and
shrb
mov
call
mov
pop
rcr
push
je
xchg
and
incb
push
test
sub
cmp
inc
scas
ret
push
sub
mov
cmp
jno
cmovl
test
xchg
fisubrs
or
ret
clc
mov
xchg
scas
jnp
xlat
daa
mov
insl
lock
inc
popf
out
xlat
dec
inc
pusha
pop
repz
loop
lret
pop
or
fsubl
loopne
shlb
mov
fidivl
xchg
clc
dec
lcall
test
xchg
insl
lahf
loopne
or
push
into
xchg
test
leave
js
int3
jno
lock
std
mov
jmp
inc
jns
jp
sbb
ror
cmp
sbb
loope
imul
hlt
mov
add
mov
adc
sbb
cld
or
mov
xchg
and
je
push
aad
add
pop
ja
cmc
pop
ss
int3
xchg
dec
outsl
sti
push
mov
aaa
je
sub
dec
cld
js
test
test
jne
scas
lock
adc
push
das
mov
dec
popf
out
jo
sub
mov
xchg
jg
xchg
add
rol
lock
mov
cmp
popf
imul
dec
xchg
jmp
jne
aas
fs
push
adc
daa
sbb
push
pushf
pop
in
jl
and
xchg
mov
bound
es
dec
fnstenv
lahf
sbb
out
jmp
jmp
mov
xor
ficompl
lret
aaa
pop
lret
jno
pop
cmp
jo
xor
cmp
xchg
xor
mov
adc
mov
stc
inc
push
loopne
jno
mov
xchg
test
lock
clc
inc
daa
adc
cmp
jno
call
cmc
inc
loopne
mov
loope
jmp
arpl
mov
push
push
mov
jno
dec
movsl
mov
xchg
test
imul
ljmp
adc
int
jmp
dec
jge
lret
push
mov
sub
fs
jmp
loope
mov
ja
push
inc
and
mov
mov
pop
xlat
pop
lcall
inc
mov
rcrl
pop
rorl
push
and
or
repz
sbb
out
in
jo
into
lea
rol
fs
mov
mov
cmp
xlat
xchg
cmpsb
leave
mov
or
xor
jmp
gs
pop
and
mov
add
mov
dec
xor
add
movsl
clc
jg
cmp
iret
mov
jp
sbb
xor
adc
loopne
lcall
les
mov
mov
mov
mov
test
push
inc
or
bound
mov
push
outsb
jo
xor
out
fs
clc
pushf
sbb
pop
xchg
insb
adc
sub
cs
mov
insb
sbb
inc
cmpsl
adc
faddl
addb
loopne
push
jmp
sahf
cmp
adc
cli
mov
repz
lods
push
rep
mov
xlat
mov
loope
call
jmp
dec
sub
lret
fdecstp
imul
mov
push
stc
leave
mov
rclb
dec
sub
mov
aad
notb
fldt
cwtl
ds
repz
stc
in
imul
sbb
add
xor
in
lock
adc
es
movsl
mov
je
out
cld
dec
or
jb
xor
enter
or
lea
adc
mov
sub
dec
mov
inc
mov
lahf
ljmp
repz
or
fmull
ds
in
push
sbb
push
mov
cmc
cmp
inc
sti
pop
sbb
or
inc
and
inc
mov
mov
ret
mov
sbb
mov
fstpt
xchg
pop
lcall
movsl
aas
outsb
aam
test
xor
mov
dec
popa
jl
dec
cmpb
andl
pop
addr16
mov
sub
dec
xchg
xchg
jnp
js
jne
test
push
xchg
sbb
mov
xchg
mov
clc
or
repz
sub
cmpsb
jbe
jnp
sbb
or
dec
sbb
mov
je
jb
adc
adc
sbb
inc
popa
mov
pop
inc
fs
sbbb
pop
pop
jns
dec
iret
scas
add
test
xchg
or
pop
pushf
dec
push
lods
inc
incb
call
andb
imul
fldl
xlat
jno
ja
mov
test
repz
xchg
jno
popf
scas
sahf
dec
test
scas
push
shlb
outsb
push
mov
nop
aam
cmp
iret
das
movsl
push
fs
outsl
and
mov
xor
cmc
or
pop
js
shlb
or
jecxz
movsb
lock
popf
mov
daa
push
sub
cmp
and
repnz
pop
inc
xlat
inc
rclb
push
cwtl
rol
jle
aas
or
test
iret
std
xor
test
mov
pusha
sub
gs
cmovge
jae
out
ficoms
aas
inc
pop
cmp
push
or
dec
pop
inc
out
popf
add
pusha
mov
cs
inc
sub
pusha
push
fdivrl
add
mov
lods
test
cmp
ret
outsl
inc
mov
lret
mov
and
jle
inc
adc
js
icebp
clc
sub
mov
mov
test
les
jecxz
pop
movsl
mov
ror
test
stos
cwtl
adc
int3
mov
mulb
sti
ret
xor
push
sbb
cmc
inc
rol
fcmovnbe
and
rorl
sbb
push
push
and
inc
inc
sti
or
lods
mov
outsl
mov
mov
ret
jne
dec
std
add
aad
mov
mul
inc
pop
push
out
lret
push
dec
fists
xlat
fisttpll
mul
mov
pop
movsl
aaa
lcall
movsl
pop
xchg
xor
or
inc
orb
icebp
repz
inc
aad
cmp
dec
and
fldenv
jno
pusha
lock
or
and
xchg
or
imul
adc
mov
sbb
insb
int3
repnz
xorb
adc
mov
sub
repnz
sbb
mov
lret
hlt
mov
jg
sub
sub
dec
jne
mov
imul
mov
pop
add
je
jecxz
adc
rcll
dec
popa
push
in
stc
push
sbb
mov
jo
fiadds
fdivrl
fiaddl
jmp
js
popa
sub
fisubs
sbb
in
push
xor
xchg
push
inc
push
aad
mov
enter
lds
push
pushf
push
or
rorl
push
sbb
hlt
mov
mov
xlat
cs
jbe
xlat
mov
stos
int3
fs
and
and
daa
sbb
mov
dec
test
not
dec
cmp
bound
inc
inc
and
jmp
sti
or
xchg
outsb
or
sbb
fidivrs
cwtl
dec
xor
and
and
inc
cltd
pusha
jbe
cmp
cs
aam
sub
jecxz
jp
je
sti
aad
arpl
sbb
das
test
jecxz
ret
inc
movsl
stos
xor
dec
jmp
addb
inc
fimull
xor
aam
inc
pop
mov
jne
sub
mov
dec
lods
cmp
cmp
in
jp
and
lods
or
jbe
ljmp
push
sub
push
rol
sub
ds
xchg
cmpsl
dec
dec
iret
or
clc
hlt
xchg
push
xchg
movsl
test
mov
sub
and
out
sti
mov
imul
pop
jo
sbb
mov
roll
sub
add
cmp
sub
rorl
imul
mov
jmp
dec
adc
call
lret
add
sbb
mov
xchg
out
fyl2x
lahf
ret
add
mov
in
mov
pop
sbb
inc
adc
jb
icebp
fistps
or
icebp
bound
loope
sbb
push
adc
dec
dec
jle
mov
cs
sub
and
hlt
imul
xchg
ja
xcrypt-ctr
cmpsl
insb
in
cli
mov
out
aam
xchg
shl
jo
mov
ss
imul
sbb
mov
inc
in
add
and
sbb
mov
in
iret
mov
aad
pop
push
push
orb
xchg
lods
aam
cwtl
or
aam
cld
push
mov
cltd
cmp
pusha
add
lods
pushf
push
mov
or
ret
cltd
inc
lea
sbb
xchg
sarl
sub
js
cld
icebp
stc
inc
cmpsl
dec
repnz
add
mov
enter
mov
stos
jle
xchg
loopne
movsl
shrb
mov
scas
mov
push
pop
mov
sub
repz
sbb
pop
sbb
pop
subl
add
daa
push
addr16
mov
in
push
in
faddl
or
stc
push
add
lret
jbe
daa
in
xor
test
push
fdivp
scas
pop
sub
repz
mov
imul
mov
iret
clc
sbb
cmpsl
mov
jecxz
sub
cmpsl
sub
mov
pop
pop
cmpsb
xchg
mov
ljmp
mov
push
pop
mov
iret
mov
pop
mov
jp
jbe
leave
or
pop
shll
xlat
flds
or
fbld
in
shrb
mov
popa
sbb
or
lret
lret
jmp
cli
fwait
sahf
mov
hlt
add
pop
outsl
arpl
dec
lcall
xor
and
inc
pop
jnp
aaa
inc
or
in
push
xchg
sub
rorl
repz
mov
out
or
hlt
inc
jne
mov
shl
xor
mov
repnz
cld
lock
bound
roll
add
cmpsl
sub
push
lods
mov
add
fiadds
icebp
xor
or
mov
aam
imul
xor
dec
aam
jo
inc
mov
fistps
sbb
movsb
ljmp
stos
mov
nop
sahf
jl
loopne
sbb
pushf
add
cwtl
cmp
ss
mov
mov
cmp
ds
fdivp
orl
push
jnp
push
pusha
fcoml
push
add
adc
and
sub
inc
js
adc
inc
dec
and
pop
fucomip
popf
or
xor
into
mov
adc
into
pop
lret
mov
lahf
sub
shl
push
dec
jmp
test
arpl
jae
cmpsl
subl
ret
sub
inc
push
lods
pop
roll
cmc
movsb
fs
and
xchg
lret
lcall
jle
nop
xor
nop
cli
pop
sbb
ss
pop
loope
jle
loop
sti
cld
jno
aas
mov
leave
push
add
movsb
sbb
insl
pop
mov
cmc
lcall
sti
push
movsl
faddl
push
notb
popf
jge
out
and
ds
xchg
xchg
adcb
add
or
and
push
inc
sub
and
mov
aas
jle
xchg
shl
push
inc
ret
pop
dec
idivl
xor
mov
jno
adc
pop
cmp
push
xchg
sbb
ret
sbb
cmp
jb
enter
or
stos
inc
xchg
and
mov
mov
and
jle
lods
fucomip
push
daa
xor
jnp
push
push
xchg
data16
scas
in
sbb
push
pop
xchg
sbb
das
push
lods
adc
jnp
mov
sbb
fists
cwtl
or
push
stos
icebp
sbb
xorl
outsb
inc
add
shll
daa
xchg
add
jge
pop
mov
and
adc
test
push
mov
flds
add
out
push
xchg
es
and
aad
repnz
push
pop
and
das
sarl
xchg
push
insb
or
push
popa
pusha
iret
das
xor
jb
test
push
adc
sbb
mov
movsl
fistpl
xor
iret
or
dec
sbb
add
xchg
xchg
ljmp
jl
shll
fiadds
daa
addr16
ret
stos
jle
adc
roll
mov
js
aaa
clc
je
push
je
dec
jg
dec
cli
jnp
xor
mov
mov
pop
cmpsb
mov
cmp
fnstcw
dec
dec
aad
jp
popl
pop
push
clc
fwait
lcall
adc
jae
xor
push
pop
pop
ficompl
shll
mov
scas
xchg
ljmp
mov
cli
push
pop
mov
out
arpl
mov
aad
inc
or
sahf
movsl
stc
xchg
dec
or
xchg
inc
and
push
das
mov
mov
loope
add
dec
sub
sub
es
push
icebp
mov
or
mov
sub
pop
cmp
lret
push
cmc
aas
outsl
pcmpgtb
pop
test
mov
repnz
hlt
push
push
xchg
dec
pop
fistps
stos
dec
mov
xor
movb
xchg
xor
push
or
out
or
sbb
pop
xchg
outsl
fstpl
std
push
out
xor
sbb
and
orl
rclb
xor
in
mov
pop
sbb
popf
loope
dec
cmc
repnz
xorb
sub
push
inc
out
out
push
mov
mov
int
mov
rcrb
and
out
shrl
out
mov
and
push
in
test
sbb
popa
ja
pop
je
pop
inc
test
push
dec
pop
mov
fcomip
inc
xchg
mov
xchg
sub
pushf
and
fs
out
jnp
mov
xchg
cmp
ja,pt
and
mov
xchg
push
mov
mov
mov
dec
int3
sbb
das
jge
mov
push
dec
inc
loope
scas
aaa
pop
adc
dec
push
js
fwait
sahf
xor
int3
xlat
inc
gs
xchg
test
repnz
nop
push
cli
dec
xchg
ficomps
mov
inc
pop
aad
dec
std
lahf
dec
scas
outsb
data16
ss
lret
xchg
fnstsw
es
mov
mov
fcoml
popl
lock
mov
jno
out
addr16
insb
push
insl
and
daa
lahf
xor
jne
stos
sbbl
inc
rorb
testl
out
inc
inc
push
mov
cmp
sub
cld
cs
and
sbbb
sahf
std
mov
add
inc
call
xor
jnp
inc
scas
jb
inc
sarl
movsl
push
clc
dec
cmp
imul
mov
pop
iret
dec
pusha
ljmp
adc
jns
sbb
lea
xor
or
enter
out
xchg
mov
outsl
jp
sub
test
lcall
mov
inc
aad
sahf
addr16
fiaddl
inc
ficoml
ja
cmp
lds
rorb
dec
mov
or
lods
scas
xlat
stc
jnp
push
cmp
or
shl
cmpsb
aam
mov
aam
sbb
push
iret
sub
xchg
xchg
fidivl
adc
jge
cmp
jecxz
sub
cmp
sub
aaa
mov
adc
pop
addr16
or
ret
jnp
or
dec
jae
leave
jg
fdivrl
bound
negb
mov
lret
repnz
mov
fs
and
pop
scas
int3
out
cmp
inc
mov
mov
loop
cld
decl
jno
cmp
sub
pop
out
jbe
cmpb
sahf
aad
sbb
xchg
xlat
loope
jp
in
adc
push
insb
mulb
arpl
mov
cmc
clc
andb
loop
or
in
mov
xchg
xchg
dec
cmp
sub
xor
shl
out
mov
cmpsb
mov
and
mov
js
inc
idivl
push
pop
and
add
xchg
aad
inc
das
orb
mov
cld
push
arpl
dec
out
aas
es
bound
or
call
std
cli
jbe
cmp
sahf
arpl
push
cmp
shll
pop
xor
es
outsb
rcll
sbb
add
mov
mov
sub
or
leave
push
sti
sbb
pop
adc
sarb
jno
rcll
pop
sbb
xchg
in
clc
mov
xor
fs
and
mov
nop
fnstenv
mov
mov
pop
mov
pop
jl
popa
out
mov
frstor
lret
dec
mov
mov
daa
mov
das
xor
xchg
lods
and
gs
fdivrs
jae
xor
inc
pop
ret
xchg
aaa
add
dec
ljmp
adc
push
mov
insl
addb
arpl
xor
cli
jnp
mov
dec
outsl
cli
dec
fisubrs
dec
cwtl
mov
sub
xchg
inc
pop
push
pop
cmp
sbb
cld
xor
aas
push
jb
cmp
adc
movsl
fsub
lds
nop
lret
arpl
cmp
mov
push
jo
ret
ss
out
add
test
xlat
scas
pop
push
fistps
add
inc
inc
outsl
dec
push
jbe
mov
iret
fcomip
es
lret
adc
adc
lcall
mov
fs
out
pop
shrb
andl
pop
loope
insl
push
push
mov
mov
test
neg
inc
fstl
mov
dec
shrb
xchg
add
outsb
jp
sbb
insl
aaa
fstl
loopne
fisttps
mov
insl
mov
insl
ljmp
ss
divl
les
lods
das
lret
and
lock
das
cmpsl
xchg
or
in
gs
jmp
add
push
inc
push
fsubrp
mov
movsl
fildll
mov
test
out
test
jb
lock
out
sbb
mov
daa
incl
jg
insb
fcomip
sub
jle
outsl
lea
movsb
test
loope
jb
xchg
xor
sub
sbb
inc
aam
push
push
sub
and
mov
sub
lods
sbb
imul
sbb
adc
stos
jnp
rorb
mov
pop
mov
enter
ret
cltd
jge
lods
cmp
jo
lcall
das
jecxz
jnp
or
add
stc
jecxz
jg
mov
mov
mov
movsl
loopne
clc
scas
nop
ds
pop
lret
xor
adc
lret
out
and
dec
andl
inc
mov
daa
add
ljmp
xor
xchg
cmp
mov
fwait
mov
movsl
lods
test
push
inc
jb
add
pop
xchg
pop
jp
bound
cli
or
pop
inc
test
jb
xchg
in
popf
push
jg
jmp
leave
fbstp
lret
jl
lret
xchg
mov
sar
cmpsl
push
push
dec
aam
push
or
jbe
movsl
mov
mov
in
xchg
add
iret
lahf
inc
divl
mov
loope
loope
xlat
pushf
pop
and
aam
inc
test
data16
mov
cmpsl
inc
add
xor
jns
sbb
iret
sub
mov
adc
pop
pop
jne
outsl
imul
and
pop
into
add
push
scas
mov
pop
sub
scas
inc
fisubrl
insb
jg
jno
mov
ds
push
bsr
lcall
mov
out
icebp
outsb
xchg
mov
and
out
in
mov
jmp
mov
cmpsl
negb
xor
mov
sarb
pop
je
cld
rcrl
shlb
and
sar
mov
cmc
sub
in
mov
dec
or
dec
fdivs
jle
ret
imul
cmpsb
cmp
iret
push
stc
xlat
mov
adc
in
push
stos
aas
jae
push
mov
sbbl
add
outsb
jne
fwait
sbb
sti
hlt
imul
in
orb
jo
sbb
dec
test
xor
out
sub
sar
adc
sub
into
jne
adc
inc
inc
in
outsl
mov
cs
pusha
sbbb
jle
fwait
push
mov
shrl
push
outsb
add
sbb
inc
and
push
andb
jne
aaa
inc
in
xchg
pop
dec
xchg
cld
fisubrs
adc
adc
sahf
cmpsl
adc
aaa
icebp
mov
mov
sbb
xchg
xchg
push
nop
mov
repz
fisubl
jl
ja
cmp
das
jmp
mov
inc
int
out
out
add
jmp
sbb
pop
cmovae
mov
xor
jle
xchg
inc
pop
arpl
jg
pop
clc
fcoms
sub
sbb
mov
imul
mov
and
dec
inc
leave
sub
mov
jp
inc
adc
pmaddwd
cmp
mov
mov
sub
cmpsl
add
dec
es
pusha
roll
and
pushf
and
adc
xor
int
mov
pop
orb
push
jecxz
nop
mov
hlt
cmpb
bound
je
mov
sbb
dec
insl
test
pop
jo
aam
lahf
add
in
std
xchg
mov
roll
sub
fnstsw
cli
addr16
jecxz
xchg
ja
scas
test
push
adc
into
mov
je
enter
daa
ss
dec
in
mov
push
or
mov
mov
js
push
clc
cltd
push
add
cmc
xor
rolb
and
in
jns,pn
or
pop
sub
iret
mov
bound
jmp
testl
xlat
mov
lret
mov
movsl
cmc
sbb
mov
inc
pop
sahf
kmovw
and
mov
mov
shr
sub
js
aad
push
xchg
lods
aad
jo
jo
adc
pop
icebp
dec
mov
xchg
pushf
mov
pop
stos
xor
ss
orl
sub
sbb
cmp
xchg
mov
lods
adc
std
out
pop
cmp
aad
add
lods
fwait
fwait
js
ljmp
cli
push
daa
adc
or
jne
mov
dec
add
sarb
pop
cmc
out
imul
outsl
fiadds
pop
mov
mov
or
push
xor
sbb
sarb
sahf
es
adc
adc
pop
mov
inc
jmp
insl
pop
les
mov
andb
mov
sub
mov
push
jnp
ss
jno
or
ds
cmpsl
xchg
jg
jbe
aaa
aam
cmp
adc
push
cmp
xchg
xor
mov
and
mov
notl
or
rcrb
ret
out
shrl
leave
cmp
mov
adc
xchg
or
shrl
lock
in
sti
rcll
xchg
mov
lods
jnp
and
ss
lock
or
call
sub
and
dec
push
pop
dec
push
ret
or
push
cmpsb
adc
sbb
sbb
fsubl
fsubs
sahf
leave
shrl
dec
dec
out
sbb
adc
ret
outsl
hlt
inc
jle
push
repnz
xchg
movsl
xlat
popf
inc
pusha
mov
leave
outsl
das
fidivrs
add
into
testb
mov
cmp
mov
cltd
inc
inc
jno
add
sub
std
mov
daa
outsl
in
mov
cmpps
add
dec
mov
xchg
jle
mov
and
inc
jns
imull
lds
iret
add
dec
filds
push
movsl
mov
imul
xor
add
and
movsb
and
clc
add
lahf
and
mov
enter
jns
movsb
cmp
sbb
ds
test
inc
add
roll
lcall
xchg
cmpl
subl
out
push
adc
push
js
xchg
popf
in
and
cli
xlat
pop
cmp
pop
in
inc
xchg
xor
push
into
xchg
pop
mov
cmp
loope
cwtl
dec
and
and
shll
xor
dec
pop
lods
sbb
repz
int3
popa
and
fmulp
insl
pop
out
sbb
enter
xchg
or
add
mov
stc
jae
movsl
jne
adc
les
mov
out
fbld
fistpll
jmp
fcmovu
stc
add
pop
out
mov
mov
aaa
xor
jo
rol
jns
icebp
lea
or
icebp
mov
je
mov
lahf
popf
xchg
dec
push
mov
add
in
js
aas
xchg
cmp
not
adc
add
push
int3
mov
adc
cmpsl
pop
or
hlt
iret
lahf
daa
fbstp
jge
or
xor
push
pop
add
popl
or
std
push
xor
sub
ja
fisubrs
fldl
inc
mov
mov
cmp
andl
sbb
mov
jae
push
jb
leave
cs
aas
fnstsw
imul
xor
aaa
xor
inc
inc
add
sbb
or
sub
dec
and
sub
add
mov
movsb
pop
xorl
fcoms
int
jns
xor
pop
or
mov
je
aaa
push
int3
push
icebp
ds
xchg
aam
jns
mov
mov
mov
push
fcomps
pop
jne
xchg
repz
scas
push
pop
es
push
cmpsb
scas
lea
xchg
mov
fcoms
jne
xchg
xchg
push
cli
clc
add
inc
js
or
fildll
and
popf
or
push
lea
stos
lea
test
pop
jp
inc
rcr
imul
pmaxub
inc
pop
fsubp
daa
sub
cmp
fmuls
rcll
or
pop
push
imul
sbb
and
jecxz
fisubl
cs
add
js
fisubs
add
pop
addr16
mov
jl
movsb
sbb
xchg
inc
les
nop
push
adc
xor
rcrl
or
pop
cli
sub
shl
fcomps
jle
xchg
mov
sbbl
shl
mov
mov
inc
dec
add
mov
in
movsb
stc
mov
shrl
fcoms
cmp
incb
pop
int
ret
jo
sub
sub
lret
fdivs
and
push
pop
sub
aam
mov
xor
lods
aas
xor
pop
jp
mov
loopne
mov
or
sub
xor
mov
mov
and
xchg
pushf
push
lea
test
test
xchg
xchg
inc
or
ds
stos
div
inc
cmc
dec
add
fisubl
adc
test
mov
pop
sti
lock
push
add
cmpsb
jbe
pop
outsl
scas
mov
mov
cmp
lret
mov
jo
addl
std
pop
sub
scas
leave
test
cmpsl
cld
mov
out
sbb
daa
sub
cld
clc
push
iret
push
roll
imul
mov
pushl
dec
mov
xlat
xchg
push
cmp
push
mov
out
xor
enter
ds
mov
jmp
ja
leave
push
mov
add
push
loop
mov
push
outsl
iret
je
aaa
mov
in
mov
ja
cs
les
in
dec
xor
fidivl
adc
adc
fst
xor
repz
cmp
out
ja
ja
out
adc
flds
and
pushf
vpunpckhdq
into
xchg
loopne
jno
outsb
leave
sub
bnd
jae
pop
and
jg
aas
sbb
js
aas
add
sbb
mov
inc
out
mov
stc
pop
mov
out
stos
cld
lcall
or
insl
out
out
cmp
adc
loope
bound
repnz
xor
ret
lcall
push
jmp
mov
test
repnz
cltd
jmp
imul
int3
add
push
js
inc
fildll
enter
lcall
outsb
push
clc
idivb
dec
scas
test
and
add
subl
out
sbb
mov
testl
dec
outsb
xor
cwtl
mov
dec
sarl
shll
loop
fimull
push
mov
xor
pop
insl
mov
lea
gs
mov
jl
dec
lods
jno
xor
sbb
pop
jmp
inc
and
or
jno
movsb
dec
xchg
mov
lret
paddb
xchg
fdiv
std
cmpsl
pop
fcmovnb
inc
iret
fsubs
jbe
mov
fsubs
stc
mov
xchg
fdivrs
xchg
imul
and
add
inc
push
fimuls
pop
nop
lea
dec
in
jle
push
adcb
insl
sub
ds
call
in
add
call
adc
lcall
addr16
push
sbb
das
sbb
das
dec
mov
mov
lahf
push
pop
into
out
outsl
push
out
std
cmpsb
icebp
mov
push
sti
jb
mov
fbstp
shll
add
stc
jnp
push
mov
pop
cmp
and
sti
into
ljmp
inc
enter
nop
inc
insl
addb
and
add
adc
jl
inc
and
div
inc
dec
mov
movsb
jne
cmp
cmp
jmp
outsl
pop
incl
mov
ret
inc
inc
inc
inc
adc
insb
nop
cmp
and
lea
jmp
sbb
xchg
mov
subl
or
lods
or
js
sar
ss
test
addr16
fcom
shlb
in
push
loop
mov
lret
jge
push
loop
xor
mov
mov
push
add
pop
xchg
pop
cmpsb
mov
pop
bound
or
sbb
rorb
cld
adc
and
cmc
pusha
in
push
xor
sahf
cli
push
or
inc
mull
shll
ffreep
cld
orb
fnstsw
jb
jno
and
or
mov
fdivp
mov
pop
jmp
adc
push
and
dec
cmp
sbb
lea
xor
inc
xchg
mov
mov
jne
pop
sub
ljmp
mov
bndstx
jecxz
clc
xor
pop
in
dec
stc
aas
mov
cs
jmp
pop
sbb
out
stc
inc
rolb
stos
dec
mov
inc
jnp
mov
and
adc
daa
jno
sti
stos
mov
insl
mov
loopne
or
cmpsl
mov
faddl
lahf
lock
sbb
jp
addr16
mov
inc
int
enter
out
outsl
mov
ficompl
cmp
mov
fimuls
mov
lret
sbb
and
push
mov
cmp
mov
inc
leave
int3
adc
xor
ds
outsl
lds
cmc
cmc
std
mov
aaa
das
idivl
scas
out
xchg
out
repz
int3
sbb
inc
ja
rorb
or
jmp
dec
fstl
icebp
rolb
test
iret
js
mov
dec
jle
add
fmull
shrb
jne
aas
jmp
call
mov
les
xor
mov
cmpsl
pop
and
pop
int3
pop
pop
in
popa
push
std
cltd
xchg
cld
cmp
out
and
pop
jae
orb
mov
jp
push
imul
lret
cmp
shrl
in
imul
inc
imul
xchg
sbb
test
ljmp
mov
add
fsubl
je,pt
sbb
sub
and
fwait
ror
mov
sub
cli
xlat
ljmp
call
andl
cmp
scas
call
dec
loope
push
xorb
inc
lds
leave
mov
inc
cmc
jp
sbb
jbe
inc
adc
push
mov
cld
mov
xchg
sbb
cmp
lea
ja,pt
mov
out
sub
mov
aad
test
push
xor
dec
pop
push
mov
xor
stos
mov
out
pop
addr16
adc
movsb
mov
stos
nop
loop
pushf
nop
scas
sbb
pop
ss
out
movsb
arpl
aaa
jle
push
lock
mov
inc
adc
mov
cld
into
out
xchg
bound
leave
inc
stos
in
cltd
jae
mov
ss
jl
cmp
cmp
ret
xchg
shll
fisttps
xor
fcmovnu
lods
jg
fisttpll
adc
das
jle
sahf
mov
xchg
sbb
jge
lds
stc
imul
push
fidivl
fisttpll
gs
mov
mov
stc
mov
imul
sub
rolb
jle
notl
aaa
data16
mov
cmpsl
lds
pop
aam
into
jnp
scas
xor
xchg
es
or
pop
int
cmp
pop
and
mov
mov
enter
cmp
push
push
dec
push
out
and
imul
out
jecxz
in
call
pop
xchg
adc
loop
out
push
aas
mov
xor
bound
or
arpl
in
dec
movsl
or
test
push
push
lea
xlat
mov
adc
cmpsl
daa
push
mov
sbb
jmp
lods
mov
dec
xchg
insb
lret
or
cmp
bound
js
hlt
data16
inc
sbb
or
push
xor
xlat
cltd
hlt
sub
shlb
shlb
mov
lods
ret
mov
enter
addb
repnz
stos
fnstenv
insb
sub
ret
lahf
popf
in
out
mov
sbb
fdivp
orl
mov
pop
sbb
stc
sbb
icebp
mov
or
push
scas
pop
outsl
jl,pt
test
imul
cmp
pop
mov
mov
jae
mov
cmp
mov
inc
inc
inc
dec
mov
call
iret
xor
xchg
int3
lds
and
imul
loop
lret
std
test
and
rorl
outsl
icebp
xchg
xchg
xor
sbb
out
or
int
fldcw
cmp
fnstenv
xor
push
repz
adc
push
cmp
int
sbb
jo
pusha
sbb
jp
out
loop
sbb
pop
cmp
aaa
aad
xchg
rcrb
mov
out
xchg
inc
push
scas
rorl
mov
sub
jl
lock
sbb
xor
mov
mov
mov
es
jmp
lahf
dec
sub
mov
mov
fiaddl
cltd
pusha
in
imul
ja
jnp
dec
sar
js
imul
jne
shr
jle
dec
sub
mov
test
mov
aad
jbe
out
push
jne
orl
ficompl
insb
adc
adc
push
in
daa
sbb
ljmp
or
jns
movsl
stos
adc
iret
out
xor
sbb
mov
pushf
add
adc
psrad
xor
addl
mov
xchg
into
cwtl
or
push
movl
push
pop
push
aaa
adc
sub
aaa
jnp
fsubs
add
pop
pop
or
lahf
sub
inc
jl
inc
push
cmc
or
mov
mov
subb
imul
cmp
pusha
pop
dec
ret
inc
cmp
pop
and
fsubs
pop
push
mov
daa
aaa
sbb
ds
cmc
rcrl
and
or
mov
fdivr
dec
cltd
inc
mull
or
sar
daa
pop
es
dec
dec
xor
in
xchg
push
cmp
lods
mov
scas
push
cwtl
in
leave
shr
sbbb
jmp
add
cwtl
mov
popf
outsl
push
sbb
lock
add
cmp
jl
and
test
decl
repz
pop
lahf
xrelease
lcall
inc
push
out
jo
negl
cs
scas
divb
inc
popa
mov
jge
mov
addl
xor
ret
cmp
int
cmp
inc
xchg
lods
ss
push
and
add
sbb
mov
lret
repz
js
jne
imull
jo
push
cmp
adc
pop
xor
mov
push
stos
or
cltd
jecxz
cs
mov
mov
sub
jo
mov
int3
mov
xchg
jae
sub
pop
notb
lods
mov
jnp
pusha
xchg
cwtl
mov
ljmp
and
or
inc
loopne
nop
pop
inc
pop
pop
adc
addr16
adc
subl
pushf
sub
sti
inc
adc
mov
xor
push
xorl
mov
loope
fdivl
gs
in
fadds
xor
pusha
nop
loopne
xchg
ljmp
imul
cmp
inc
cmc
arpl
fwait
mov
mov
loop
sub
clc
pop
inc
inc
push
cmp
mov
xor
ficoml
int
mov
icebp
negl
xchg
xchg
insl
push
out
dec
mov
and
pop
lahf
add
out
loopne,pn
arpl
lods
mov
dec
xor
inc
xor
inc
popf
cmc
icebp
jo
xchg
fcoms
out
lahf
lds
or
xchg
into
lcall
rcrl
iret
mov
ficoms
pop
leave
pop
jecxz
cli
andb
dec
ret
jo
xchg
sub
arpl
inc
mov
aaa
cld
sub
in
stos
lret
xor
aas
jnp
pop
sub
test
sbb
lahf
push
mov
movsb
jp
xor
adc
dec
or
test
mov
addl
mov
out
cltd
add
inc
mov
cld
movsb
inc
mov
ss
ss
pop
sub
inc
adc
sub
sbb
jo
repnz
xorb
loope
adc
rolb
leave
mov
push
xchg
push
jo
aaa
addl
and
push
sti
sub
addr16
repnz
stos
shlb
jmp
hlt
dec
in
je
stc
dec
push
rorl
cwtl
inc
loopne
leave
ja
enter
cmc
xchg
jo
ja
sub
shlb
cmpsl
pushl
addr16
push
xchg
cmc
mov
push
xor
xor
pop
mov
gs
fs
ret
pop
daa
inc
mov
ret
push
je
sub
mov
lret
call
cmp
mov
add
sub
pop
outsl
iret
test
movsb
push
insb
outsb
cmc
lret
clc
outsl
imulb
lcall
add
dec
clc
lcall
lods
lock
and
jae
outsl
orb
mov
xor
out
xchg
push
not
loop
inc
push
inc
or
call
sub
and
add
sub
loope
ljmp
repnz
aaa
daa
push
cmp
cs
arpl
xchg
subl
push
jae
push
mov
push
push
cltd
fiaddl
lods
add
mov
sbb
mov
jne
pop
mov
movsb
pop
xor
xchg
dec
out
cmp
out
jbe
sbb
hlt
fdivs
nop
pop
jno
pushl
xchg
cmpsb
fbstp
ja
fsubrl
lea
imull
or
add
lahf
iret
shr
das
out
cli
jbe
mov
js
mov
dec
mov
addr16
mov
push
or
adc
jnp
or
and
xchg
or
sti
mov
cmp
aam
adc
dec
mov
stos
push
jecxz
fadds
pop
or
jns
pop
push
push
mov
xchg
jg
add
shrl
cwtl
pop
jo
dec
push
bnd
in
mov
sti
test
shrl
clc
pushf
sbb
or
enter
push
xor
std
ds
enter
dec
xor
xor
cwtl
hlt
cli
arpl
pop
push
jl
inc
jns
jo
or
dec
add
cs
fisttpl
xchg
inc
mov
cmp
in
fidivrl
mov
rorb
push
or
xor
sbb
incb
mov
xor
jns
shll
pusha
lds
subb
clc
in
xchg
stc
cmp
jo
dec
sub
aaa
repnz
repz
and
sbb
inc
mov
rorl
jo
jge
inc
sbb
cwtl
cmp
inc
mov
mov
out
add
cmpl
cmpsb
adc
pop
and
adc
ret
mov
mov
ss
mov
mov
nop
push
xchg
and
mov
sbb
pop
dec
ret
mov
icebp
aas
rcl
ret
pop
dec
pop
jns
pop
xchg
inc
jns
jmp
mov
int3
or
add
insl
loope
sahf
scas
cmp
xchg
sar
stos
mov
clc
xchg
and
test
nop
inc
setp
push
mov
lods
push
mov
test
lods
or
test
arpl
sbbl
dec
sbb
ljmp
loop
mov
insb
imul
shrb
leave
enter
mov
addr16
xchg
mov
insl
push
xor
pop
inc
test
mov
inc
into
dec
divl
mov
or
pop
jno
dec
mov
lods
mov
mov
cld
in
cmp
lret
into
xchg
xchg
mov
fiadds
or
mov
xchg
ja
lea
out
inc
in
daa
xor
inc
dec
and
push
fnstsw
mov
dec
dec
add
push
mov
xor
movsb
mov
bnd
adc
dec
sub
mov
rcrb
jmp
das
ret
jns
pop
mov
sub
frstor
and
push
mov
xchg
lret
pushf
or
mov
jbe
shlb
dec
stc
jo
push
push
in
sar
mov
sbb
lods
mov
and
pop
adc
cmpsl
mov
xor
adc
inc
sub
enter
inc
push
fwait
add
push
ljmp
icebp
adc
arpl
shrb
adcb
popa
loope
add
jne
bound
cmp
mov
ljmp
addr16
repnz
arpl
mov
push
popf
out
xchg
rcrb
xor
adc
nop
addr16
js
int
mov
nop
and
xor
mov
out
das
aam
es
xchg
andb
mov
pop
aaa
pop
jnp
mov
ret
ss
add
call
in
addl
das
ss
xlat
xor
shr
dec
addr16
mov
int
jb
addr16
and
dec
xor
out
fidivl
jp
pop
stc
out
cmp
mov
rcll
or
mov
aas
or
popf
outsl
inc
inc
pushf
mov
jg
sbb
mov
aas
jp
in
xor
jg
aam
into
cmpsl
call
pop
add
sti
cltd
sub
ss
jecxz
out
pop
popa
call
movsl
jg
xor
test
dec
ret
jecxz
add
repz
add
or
and
xor
mov
jp
lds
cli
sbb
pop
xor
inc
pop
fxch
or
inc
add
mov
test
loope
or
movsl
mov
outsb
mov
sbb
mov
or
mov
fnsave
sbb
pop
mov
sub
pop
xor
jmp
or
in
ja
inc
dec
out
clc
jecxz
gs
adc
out
xlat
test
jl
call
ljmp
dec
out
pop
push
repnz
loopne
pop
xor
js
adc
out
scas
or
sub
jae
fnsave
adc
shll
imul
mov
mov
fistl
into
add
mov
test
add
add
movsb
jle
pushf
mov
rorb
pop
sbbb
adc
out
xor
lock
mov
push
mov
call
cli
jae
push
mov
sahf
enter
aas
pop
xor
mov
loop
js
inc
push
xchg
repz
mov
arpl
repz
movsl
stc
cli
mov
clc
push
bound
int
mov
add
jbe
adc
mov
push
inc
notl
pop
lea
aad
xchg
sbb
repnz
dec
xchg
imull
sahf
pop
inc
xor
fists
push
cmp
out
or
sbb
ret
aas
mov
rclb
inc
sahf
hlt
cmpsl
addb
bound
jp
sub
xchg
adc
push
pop
dec
xchg
jp
aaa
inc
jae
xchg
mov
sub
mov
pop
or
mov
ret
sbb
jmp
arpl
mov
sarb
iret
mov
out
sahf
stos
add
imul
cmpsl
pop
in
loope
mov
pop
shlb
stos
xchg
pusha
push
lea
mov
fwait
push
iret
jb
push
mov
jne
cli
cmp
jno
loope
and
mov
int3
js
jo
data16
jmp
push
dec
xchg
lock
cmp
jno
fisubl
aaa
aas
fsqrt
dec
test
das
push
lret
scas
aad
aas
jp
sbb
sbb
xchg
mov
dec
pop
es
mov
out
cmpl
mov
scas
push
pop
xchg
scas
inc
and
ret
cli
pop
popa
dec
inc
ss
pop
repnz
jo
lock
jecxz
and
sub
xchg
or
dec
mov
subl
into
ds
push
nop
push
push
insl
mov
ds
mov
push
iret
addr16
sub
ret
movsl
sub
scas
dec
xchg
lret
or
and
sar
bound
fcomi
mulb
xchg
mov
sti
push
lcall
insb
gs
adc
test
inc
adc
sti
jno
mov
jge
inc
pop
aam
ja
cmp
sbb
adc
jge
and
jns
or
cld
add
xchg
ficoms
mov
jecxz
into
imul
add
jp
xchg
adc
daa
std
and
inc
cs
lcall
push
sub
inc
push
jo
xor
dec
rcll
push
mov
mov
gs
pop
adc
jecxz
lahf
mov
push
test
inc
test
mov
xchg
push
xor
pop
dec
adc
scas
shrl
adc
mov
mov
and
lods
mov
dec
dec
push
mov
dec
dec
sbb
imul
mov
or
mov
imul
cltd
dec
movsl
in
or
les
cmp
dec
in
aam
add
and
sbb
jp
test
test
frstor
mov
stos
xchg
bound
sbb
in
inc
in
and
in
mov
inc
ds
sti
sub
lds
mov
popa
loop
pop
movsb
out
inc
jns
xchg
push
sub
and
clc
stos
mov
out
adc
jo
push
stos
dec
jecxz
shl
imul
mov
dec
dec
lea
cld
jns
xor
in
bound
imulb
icebp
andb
inc
gs
sub
daa
sbb
xor
adc
adc
out
dec
out
adc
les
les
push
popa
scas
aad
fimull
sub
icebp
aas
in
cmpsb
test
inc
mov
lods
fsub
xor
jnp
jge
out
and
fcoml
mov
push
xchg
jo
sahf
fcmove
lock
je
aad
ds
aam
into
in
addr16
push
loope
cld
jl
mov
leave
xor
mov
hlt
cmp
and
inc
arpl
and
push
fisttpll
sub
dec
cmpsl
sub
or
stos
inc
or
mov
xchg
ret
sub
dec
dec
shll
gs
mov
jl
push
lahf
jl
mov
jmp
fs
bound
mov
test
cltd
adc
cmp
mov
bound
fdivrs
adc
movsl
inc
stc
mov
add
sub
dec
push
jns
imul
popa
je
rcll
lds
xor
sub
cwtl
sarb
lds
pop
dec
imul
mov
clc
mov
out
std
push
push
and
fmull
in
sub
int3
test
popf
xchg
push
xchg
aas
pushf
pop
xor
clc
int3
aad
xchg
mov
pop
xor
xor
mov
nop
jp
inc
jle
loop
or
sbb
lret
iret
movsb
push
rorb
divl
dec
pop
xorb
mov
push
add
daa
sub
mov
outsb
adc
pop
sub
inc
and
push
or
or
sbb
xor
sub
cmp
lods
xlat
cmp
add
fsubrl
xchg
arpl
and
adc
mov
outsl
imul
sbb
ds
push
out
sbb
jne
iret
lods
punpckldq
and
popa
int
jo,pn
jecxz
les
push
or
cmc
sub
lahf
cltd
xchg
cmp
xchg
cltd
enter
pushl
dec
nop
add
cmp
mov
push
dec
adc
enter
sub
add
inc
xchg
pusha
mov
or
xchg
lock
jge
mov
js
or
out
fwait
push
xor
mov
inc
fcmovnb
addb
outsb
add
add
clc
fsubl
adc
sub
iret
pusha
es
pop
push
push
push
arpl
in
movsb
pop
push
xchg
fdivrl
mov
fldl
rep
or
or
mov
cmp
js
mov
xor
rorl
pop
mov
inc
cmpsb
mov
pop
adc
dec
pop
cmp
js
pushf
sbb
pop
cmc
or
lods
mov
add
adc
or
or
sahf
pop
lds
sbb
cmpsl
pop
popf
out
fbld
lahf
call
out
jl
xchg
xchg
pop
ret
inc
out
cmpsl
pop
cmp
push
or
cmpsl
xchg
outsb
imul
xchg
cs
ror
enter
inc
add
adc
stc
aas
dec
jl
xchg
dec
dec
stos
fcomps
adc
or
idivb
pop
iret
jbe
or
mov
clc
popa
mov
rorl
fdivrs
inc
jne
jg
mov
paddw
insb
sbbb
mov
jp
out
test
mov
add
pop
jg
push
imul
mov
shrb
lret
xlat
mov
stos
dec
gs
call
xor
xor
addr16
aam
jmp
addl
daa
in
dec
jb
insl
aas
test
sarb
and
lret
dec
repz
ss
call
mov
aam
stc
sub
test
mov
xorb
test
push
cmpxchg
mov
cmp
adc
lahf
mov
or
divb
test
and
outsb
sub
dec
mov
into
testb
leave
hlt
pop
jle
jb
das
frstor
jge
inc
testb
imul
push
arpl
repnz
sbb
push
mov
inc
adc
pop
testl
jns
add
pop
sub
mov
fs
ret
pusha
and
jmp
in
lret
aam
dec
int
mov
push
adc
sub
pushf
push
xor
adcl
mov
jns
loopne
xchg
imul
jle
cltd
or
mov
fisubrl
mov
loopne
enter
outsl
jp
das
xor
fmull
adc
sub
daa
sub
add
or
gs
cmpsb
push
in
cwtl
inc
icebp
or
add
pop
imul
clc
adc
fadd
addr16
fcmovbe
adc
ret
mov
shrb
xor
cmp
fistps
out
fwait
jmp
and
xchg
adc
fwait
mov
icebp
mov
mov
mov
cmp
adc
push
sub
inc
jbe
dec
dec
iret
in
cli
xchg
andl
std
ret
imul
lods
pop
jb
out
inc
dec
mov
fs
out
adc
pop
sbbl
or
call
cmp
ja
xor
repnz
leave
jle
dec
outsb
in
nop
les
pushf
lret
sub
mov
pop
fs
test
in
addr16
dec
je
dec
sub
pop
xor
lret
mov
lret
outsb
cmp
sbb
adcb
lods
adc
push
je
or
movsl
mov
loopne
scas
movsb
in
out
jecxz
ljmp
pop
out
notl
sub
inc
lahf
dec
mov
cmc
sub
mov
cmpsl
sbb
nop
xor
xor
push
jbe
stc
lea
mov
fidivs
mov
mov
imul
lds
stos
lods
std
into
ja
inc
ljmp
pop
and
mov
jmp
pusha
imul
adc
scas
fs
inc
inc
push
or
jno
sub
add
cmpsl
and
push
push
cmpb
call
add
imul
data16
push
cmp
int3
test
jge
int3
jns
fsubr
push
stc
popa
sbbl
cmpl
loope
xchg
or
pop
xchg
mov
das
mov
std
fdivs
inc
hlt
dec
and
andb
call
cmp
and
jmp
jmp
cmpsb
jnp
lahf
lea
or
mov
add
jae
arpl
dec
cs
ds
mov
mov
addr16
mov
scas
ret
aaa
cmp
dec
cmp
xchg
call
pop
in
dec
ficoml
mov
xor
addl
jne
out
mov
adc
xchg
xchg
mov
test
inc
ret
push
repnz
inc
cmp
addb
jb
rorl
sbb
mov
daa
sub
les
push
mov
pop
scas
or
stc
sarl
fildl
lret
cwtl
mov
jl
xchg
call
mov
dec
mov
jl
xchg
ds
pushf
mov
mov
rolb
sahf
out
imul
mov
push
push
jne
add
scas
outsl
sub
in
mov
repz
sub
xchg
and
xor
lcall
insl
sbb
int
pushf
ja
mov
mov
inc
push
pop
fsubrs
xchg
stos
testl
lods
lods
push
or
sbb
jne
mov
dec
mov
scas
mov
lods
rcll
mov
or
sbb
and
loopne
popf
rolb
adc
ds
fprem
push
mov
or
icebp
xor
mov
cmc
into
lods
scas
mov
mov
js
add
adcl
outsl
in
adc
mov
insb
mov
clc
pop
xchg
or
push
add
fnstenv
stos
notl
lods
adc
cmp
dec
mov
pop
outsl
push
bound
xchg
or
or
cmpl
dec
idivb
addr16
scas
fmul
in
dec
filds
stc
sbb
movsl
pop
insb
cs
xor
sbbl
lcall
mov
mov
add
cs
inc
rclb
mov
bound
pop
xor
jae
add
fbld
jmp
test
outsl
dec
inc
jg
push
pushf
lea
mov
mov
stos
lret
pushl
fcomi
cmp
fs
dec
mov
ficoms
aas
or
popl
and
idiv
mov
inc
adc
or
pushl
dec
fnstsw
gs
xchg
dec
stc
cmp
push
push
sbb
jo
in
in
insb
lock
mov
cltd
popf
pop
cmp
fwait
dec
out
mov
mov
dec
pop
lret
in
jmp
hlt
add
mov
cmp
sbb
insb
jo
test
in
push
add
sbb
flds
cmp
xchg
imul
sti
pop
adc
insl
jp
xchg
loop
xchg
pop
mov
jo
add
nopl
pop
jge
and
and
in
pop
stos
push
sarb
mov
popf
scas
sbb
dec
test
ret
pop
lock
lea
rcrl
bound
dec
cli
lret
mov
ds
pop
inc
jmp
ds
mov
repnz
push
pop
and
loop
cmp
add
cmp
mov
popa
mov
inc
mov
cwtl
mov
rolb
into
mov
push
sbb
ja
inc
and
outsl
mov
inc
jg
jle
cmpsb
imul
ljmp
adc
add
lods
negl
jmp
pop
es
dec
repz
ffree
fldl2e
fldln2
mov
lods
fiaddl
jb
xor
xchg
stos
rclb
push
or
std
xor
imul
dec
enter
mov
lods
into
loope
sub
xchg
shrb
cmc
and
cmp
mov
mov
mov
adc
mov
add
or
pop
in
xor
gs
xor
jg
push
ret
inc
pop
stos
push
and
lock
xor
jmp
mov
sub
lea
dec
rcl
lds
mov
cld
lret
mov
movsl
mov
jno
fmuls
pop
add
mov
adc
scas
xchg
sbb
mov
jg
scas
xor
push
jle
xor
ret
jp
and
jg
rcll
ficompl
icebp
inc
fstp
sub
or
pop
mov
mov
popf
addr16
adc
repz
ret
mov
lret
jl
mov
dec
enter
mov
aaa
mov
push
imul
or
sahf
nop
in
add
pop
lahf
fs
fstp
sti
jae
idivb
hlt
jmp
flds
sub
mov
shll
mov
add
loopne
sarb
movsb
mov
fs
cld
repz
rolb
xchg
push
adc
xchg
shrb
sahf
or
into
dec
sbb
pop
or
int3
pushf
push
idivl
es
jno
fcmovnb
es
int
subl
idiv
mov
pop
mov
outsb
cli
inc
sub
sbb
fidivs
arpl
push
mov
sub
test
stos
imul
psadbw
xchg
jge
in
lea
mov
xor
dec
daa
in
mov
lret
or
aam
cmp
inc
and
inc
hlt
lods
movsb
stos
push
inc
scas
outsl
out
xchg
dec
and
sbb
or
in
mov
lret
repnz
movsb
ss
enter
xchg
rep
orb
inc
orb
ret
mov
gs
xchg
repz
push
mov
cmp
push
mov
call
das
lea
cmc
mov
dec
sub
test
inc
popf
sbb
jp
fdivrl
xchg
lea
lods
inc
stos
inc
addl
shlb
push
push
in
mov
in
inc
repz
inc
aas
pop
and
jp
or
fldcw
mov
pop
push
pusha
and
and
lret
int3
addr16
mov
decl
cli
xchg
xchg
mov
mov
subl
insb
fisubl
inc
pop
dec
cmp
dec
cmpsl
inc
xor
push
testb
call
mov
insl
push
push
roll
addr16
insl
stc
lds
dec
in
push
mov
shlb
in
aaa
dec
and
dec
js
or
popa
lods
dec
sub
lods
leave
je
arpl
cmp
jae
in
fwait
inc
xor
pop
test
xor
inc
add
lock
xor
mov
into
in
mov
int3
test
leave
mov
and
push
add
adc
adc
mov
shrl
mov
xlat
mulb
cmp
std
cmpsl
pop
fldenv
mov
aad
add
mov
or
rol
fstl
push
push
bound
int
inc
icebp
sub
sub
rclb
jle
xchg
pop
mov
push
imul
xor
ss
xchg
in
adcb
xchg
loopne
iret
ret
sub
inc
adc
out
mov
mov
aad
mov
rcl
scas
les
rclb
mov
jne
xchg
ror
jl
jno
adc
pop
imul
inc
mov
mov
imul
xor
outsb
vcvtsd2ss
mov
in
add
int3
xor
xlat
jge
xor
gs
sub
push
pop
inc
mov
rcll
mov
mov
and
ret
mov
xlat
xor
hlt
repnz
cmp
jb
jmp
jge
xchg
xchg
in
mov
jae
jle
pop
shl
push
sub
dec
sbb
stos
loop
mov
es
repz
add
mov
cmp
imul
sub
mov
inc
sub
insb
mov
jbe
and
jmp
in
adc
push
cmp
cld
dec
sbb
and
inc
aad
mov
sub
mov
fstps
repz
fnstcw
inc
sti
xor
jge
lea
stc
dec
jno
or
push
decl
ljmp
outsb
fadd
push
add
xchg
sbb
jg
xor
icebp
sbb
outsb
sub
push
pop
xchg
jno
int3
loope
lahf
cli
mov
scas
push
push
ret
xchg
and
xchg
sar
out
jae
insl
mov
lret
push
jbe
in
testb
add
pop
pusha
jo
repnz
sub
repnz
popf
sub
repnz
cmp
jle
push
and
jecxz
cmp
cmp
sub
pop
xor
mov
pushf
inc
test
sbb
sub
mov
mov
adc
lods
aad
lahf
push
shr
pop
add
stos
dec
insl
sbb
mov
mov
hlt
jb
mov
je
and
aam
sub
add
inc
or
jmp
mov
dec
xchg
adcb
cmc
test
sbb
adc
push
and
bound
pop
aaa
pop
xchg
arpl
and
mov
lcall
xchg
aas
scas
sub
int3
mov
pop
mov
pop
mov
outsl
icebp
call
testl
jge
icebp
mov
push
insb
lods
jmp
mov
mov
ret
jnp
push
lahf
fwait
movsb
dec
in
das
lret
xor
or
jbe
outsb
sbb
or
es
out
adc
fs
mov
jnp
pop
add
cmp
mov
mov
cmp
xchg
add
cltd
jg
dec
std
jg
je
movsl
push
out
cwtl
sbb
and
xchg
inc
jle
and
and
ljmp
sub
lods
pop
movsb
cltd
jne
loop
sbb
sarb
dec
inc
int3
cmc
xchg
out
hlt
add
lds
loopne
ds
mov
push
jmp
cmpsb
xchg
test
pop
cli
or
mov
mov
push
inc
cmc
sub
pop
inc
fiaddl
mov
clc
je
jge
and
lret
pop
imul
and
xor
das
xchg
lahf
ja
dec
and
push
fsub
shrl
add
adc
sub
xor
jns
pop
lea
lcall
call
mov
push
cmp
cmpsb
fbld
mov
xchg
arpl
pop
imul
xchg
inc
pop
dec
lret
fmull
pop
outsb
dec
fs
ss
dec
repnz
mov
xchg
aad
mov
pushf
in
push
pop
test
gs
push
out
pop
sub
push
sub
xchg
decb
out
scas
mov
xchg
pop
test
lcall
js
enter
cmp
inc
imul
clc
mov
dec
out
mov
jl
inc
in
push
sub
pop
dec
fsubrs
int
pop
ret
mov
jmp
gs
into
loop
sti
xor
rcrb
fidivrl
sti
test
xchg
addr16
das
inc
outsl
les
add
repz
jnp
gs
adc
ljmp
sarl
or
xchg
mov
lds
shr
into
cli
mov
insl
jp
test
dec
test
int
lock
sbb
mov
scas
in
jno
fldcw
adc
and
imul
xchg
mov
popa
and
dec
es
mov
mov
pop
mov
enter
pop
test
xor
test
lahf
xor
jno
adc
sub
pusha
mov
push
jnp
or
cmp
adc
sti
gs
jno
rol
mov
fdiv
addr16
bound
stos
xchg
arpl
daa
push
jge
dec
enter
mov
mov
sub
xchg
and
das
inc
fisttpl
pop
add
xchg
jne
mov
and
and
lahf
std
clc
mov
pop
rorl
stos
xor
roll
aad
cwtl
add
mov
mov
fidivrs
jle
lock
data16
cmpsb
inc
sub
ss
push
ja
fcos
insl
inc
push
repnz
mov
aaa
xor
hlt
movsl
xchg
sub
cwtl
xchg
push
mov
insb
dec
fwait
dec
xchg
fwait
out
mov
aam
cmc
dec
hlt
jmp
mov
aaa
inc
sahf
push
dec
pop
mov
xchg
mov
xchg
mov
lahf
js
fcmovnu
mov
inc
push
insb
xlat
sbb
fsubrp
movsb
inc
mov
call
mov
aad
jg
add
inc
scas
fcmovnu
adc
sub
pop
ja
mov
data16
pop
pop
cmp
ja
jl
xor
jle
in
je
jge
daa
and
aam
jb
push
push
xor
in
push
push
dec
push
lea
insb
subb
data16
sahf
pop
rolb
sbb
xor
movsb
test
adc
pop
sub
sbb
fdivl
mov
icebp
sub
nop
adc
add
inc
test
add
rcrb
fs
push
loop
or
lods
shlb
test
or
jg,pt
mov
sub
inc
sub
cli
pop
cltd
sbb
outsl
xor
xor
jp
mov
cmp
cmp
lea
mov
mov
cmp
dec
push
pop
lret
iret
in
stc
test
adc
rclb
rcl
stos
pop
sbb
movsl
subb
loope
mov
lock
pop
popf
push
imul
je
std
xor
dec
sub
and
les
or
mov
mov
arpl
inc
push
add
mov
mov
adc
xchg
mov
jmp
repz
mov
stos
mov
xor
pop
add
inc
mov
pop
outsb
cs
test
cmp
dec
mov
add
fdivl
cmp
in
xchg
ljmp
fsubrp
dec
jbe
push
cmp
pop
xchg
stos
sbb
mov
int
rcrb
lods
pop
add
mov
or
popa
dec
lahf
inc
inc
fdivrl
dec
dec
insl
roll
dec
mov
dec
fsubr
xchg
mov
fsubr
push
sub
out
cmc
in
push
loopne
inc
rcl
incb
and
mov
xlat
xchg
call
and
fsts
push
lret
jle
adc
popf
pop
or
mov
xchg
push
int3
xor
mov
sub
pop
pushf
cld
jmp
cld
jbe
fisubrl
sbb
jmp
mov
xor
mov
cmc
jnp
pop
adc
jl
movsb
imul
lock
enter
cmpsb
adc
lea
fs
shlb
leave
scas
cmp
in
cmpsb
jbe
push
fcompl
and
pop
insb
mov
jecxz
stos
pop
inc
decb
aam
loope
das
push
lahf
dec
inc
mov
enter
inc
lahf
lcall
add
pusha
into
xor
adc
test
mov
or
pop
shrb
and
shll
sub
xchg
and
aaa
and
sub
ror
in
push
dec
and
xlat
sbb
fwait
xor
xchg
sbbb
xorb
leave
push
and
push
rcrl
push
cmp
test
subb
popa
or
push
and
rep
jmp
sub
test
rorl
lret
fwait
adc
cmp
dec
sahf
fstpl
ret
out
or
mov
shll
add
enter
scas
cli
add
stos
cmp
cmp
jns
stos
push
push
pop
cmp
enter
ja
mov
push
int3
xor
popa
cwtl
test
mov
pop
sub
push
aam
mov
cmp
int3
push
sbb
and
mov
mov
dec
xor
ret
lret
push
scas
mov
cmp
add
in
xchg
fwait
dec
cltd
inc
hlt
and
test
adc
and
xchg
pop
jecxz
scas
sub
gs
mov
movsl
dec
adc
ds
adc
adc
add
mov
adc
jae
pop
pusha
in
rolb
call
lds
pop
out
jg
lahf
mov
hlt
sbb
lret
lcall
sti
inc
jp
into
in
mov
imulb
or
pop
aas
xchg
and
mov
jp
int
jae
mov
cmpsb
adc
data16
cli
push
outsb
push
nop
insl
inc
in
and
jnp
sub
jecxz
leave
ficomps
ret
int3
jbe
cmp
push
push
cltd
jg
into
xchg
mov
lret
std
mov
cwtl
aam
test
inc
movsb
cld
mov
popa
int
sbb
testb
add
testl
pusha
movsl
fdivs
sbb
rcrl
and
leave
mov
pop
fldl2t
sbb
or
push
cmp
fs
cmpb
push
xor
mov
adc
cld
mov
and
cmp
xchg
xchg
cmpsl
scas
adc
mov
loope
xor
dec
es
lretw
int3
inc
ds
mov
dec
les
jno
xor
pop
jbe
sub
pop
shl
jne
sub
or
scas
mov
sar
insb
xor
or
das
ret
xchg
aaa
aaa
bnd
push
enter
jno
push
mov
fadds
imul
aas
arpl
bound
mov
decl
cmp
push
ret
xchg
push
mov
cmpsb
push
push
dec
ss
xchg
scas
aam
and
lods
stc
mov
fucomip
jno
push
pop
push
call
jns
dec
sub
out
pushl
pusha
mov
std
fildll
inc
cs
clc
fcomps
pop
loopne
and
adc
aam
dec
loopne
inc
push
sub
jle
cli
scas
sub
or
cwtl
loop
cmc
fs
jge
lods
push
push
lock
and
pop
imul
popa
bound
pop
movsl
cmp
hlt
fistpll
aas
xor
adc
in
adc
mov
push
sub
push
jmp
stos
xor
jle
mov
sub
jnp
loop
mov
sti
add
cmp
repz
xchg
xchg
jo
adc
scas
popa
mov
int3
fst
repz
adc
fmulp
icebp
inc
inc
sbb
nop
std
data16
out
dec
push
xor
push
pop
loope
cs
sbb
lret
out
in
add
xchg
notb
mov
mov
push
mov
jp
in
push
jp
pop
imul
iret
clc
pop
sub
xchg
icebp
iret
in
bound
cmpsl
xchg
sahf
ja
repz
cmc
inc
fsubrs
xchg
popf
push
and
cmp
xchg
jle
xchg
rorb
adc
fnstsw
add
cmc
pop
pop
iret
jp
dec
daa
outsb
xor
jb
push
sahf
pop
lods
dec
mov
push
test
movsb
xchg
push
or
shrl
repz
incl
mov
push
push
and
sub
cli
inc
movsl
int
mov
pop
in
das
and
stos
bound
js
int3
pop
lcall
xchg
dec
repz
xchg
xor
and
mov
sub
jo
test
mov
int3
mov
xchg
dec
xchg
or
sbb
jmp
imul
bound
adc
lds
push
or
test
xlat
aad
mov
xchg
repz
mov
rcll
or
dec
xlat
push
mov
shrl
out
testl
aaa
xor
shr
cmp
fstpt
aaa
dec
out
mov
sub
mov
ret
ljmp
sub
jnp
adc
lret
xor
imul
scas
jp
jb
inc
jp
lea
adc
add
lods
and
test
jl
add
cli
push
and
mov
pop
xchg
pop
scas
push
sub
int3
adc
fiadds
aam
int
pop
shl
mov
sub
sub
cmpsb
inc
pop
add
push
insb
xor
mov
mov
jnp
xor
aaa
fisubs
push
sbb
andb
cld
sbb
fcompl
outsl
cmpsl
popa
and
mov
mov
cwtl
xchg
pop
add
lcall
int
cmp
pop
in
mov
sbb
repnz
fcomi
jecxz
fwait
mov
pop
leave
shrl
outsb
push
sub
int3
cmp
addr16
cld
jno
movsb
pop
add
adc
int
cmp
iret
and
mov
sar
jge
pushf
xorb
out
jo
jmp
outsl
out
xchg
adc
cmpsl
insl
sti
xor
mov
popf
jae
inc
mov
or
pop
jae
les
xchg
nop
sbb
xchg
pop
cmc
pop
fistpll
inc
mov
jge
fistpl
inc
add
inc
pop
mov
js
or
push
pushl
enter
stc
and
adc
or
dec
xchg
mov
push
adc
daa
jnp,pn
or
mov
es
jo
cld
aaa
xchg
mov
stc
jecxz
or
xchg
leave
sub
div
add
jnp
in
arpl
repz
pop
mov
ret
and
shlb
inc
xor
int
movsl
stos
push
inc
xchg
inc
adc
hlt
or
add
dec
in
push
jge
add
je
mov
mov
imul
hlt
cmp
adc
mov
enter
fidivrl
sti
xchg
mov
push
push
nop
pop
andb
xlat
sbb
scas
jno
lods
lahf
out
add
dec
pop
lds
and
call
pop
icebp
test
xor
repz
fcoms
ds
push
nop
sub
icebp
mov
xchg
xchg
fdivl
lcall
stos
sbb
inc
cmp
mov
scas
pop
popa
andl
arpl
dec
add
or
sub
push
and
jle
jnp
push
movsb
push
pop
mov
push
stos
or
or
ljmp
les
rolb
xchg
or
bound
in
xor
addl
mov
inc
mov
jnp
cli
sub
or
loopne
testb
lret
scas
pop
out
xor
orl
pop
and
mov
sarb
aas
xchg
push
imul
adc
dec
sub
mov
and
dec
movsl
xor
js
push
enter
les
ds
jno
mov
out
repnz
fisubrl
cmpsl
push
or
es
or
push
imul
rcl
inc
add
or
lds
jbe
jb
stc
in
int
or
mov
push
or
mov
push
in
arpl
ret
test
or
jno
clc
fsubs
xchg
cmp
test
push
mov
clc
adc
leave
xchg
pop
fldenv
enter
jg
lret
dec
insl
int3
out
int3
mov
bound
rorl
cmp
mov
lret
lea
roll
in
xor
mov
cmp
xchg
loop
mov
cmp
xlat
add
jo
cmp
popf
into
es
pushf
add
cmc
jl
hlt
pop
sbb
xchg
mov
lds
or
xlat
mov
sub
inc
repnz
cltd
pop
xchg
xorb
int3
sbb
mov
dec
test
sti
loope
push
loope
int3
mov
mov
and
pop
add
mov
sub
out
jecxz
adc
jns
nop
orb
fst
dec
ds
sysexit
mov
xchg
mov
sub
adc
xor
and
sarl
push
out
iret
inc
jne
scas
cmc
xor
repz
push
mov
jle
adc
cmovbe
xchg
inc
cwtl
push
mov
or
dec
mov
out
cltd
fcomps
push
fcomi
ljmp
test
sub
sub
sbb
fimull
jp
inc
sti
or
rcrb
jge
xchg
dec
out
test
xchg
cli
add
test
jl
adc
fisttpll
cmp
cs
clc
iret
adc
pop
fnstsw
add
aam
pop
mov
insb
cmp
rcl
stc
iret
xchg
sbb
jge
aad
and
sbb
sbb
out
pushf
sbb
sti
xlat
popa
dec
push
imul
orb
js
dec
inc
adc
test
incb
push
mov
mov
sbb
arpl
lods
jg
ja
add
gs
data16
sub
push
pop
out
add
js
jbe
push
xlat
cmp
rorl
scas
sbbb
push
pop
adc
je
aas
ret
je
push
fs
cmp
dec
daa
je
mov
mov
mov
jge
cmp
mov
jmp
xchg
cld
into
pop
add
jmp
fwait
pusha
adc
in
outsb
sub
dec
dec
lret
push
push
rcrb
mov
comiss
shll
sbbb
mov
sbb
sub
pop
cmp
or
in
mov
or
decl
cmp
pop
inc
mov
std
push
or
ljmp
in
xchg
adc
insb
lret
cmp
add
aam
lahf
sub
or
lods
in
push
xchg
arpl
icebp
xchg
dec
out
pop
arpl
xchg
cmp
push
xchg
sub
repz
mov
fwait
jbe
outsl
std
js
add
imul
decl
adc
pop
mov
xor
std
cld
add
cmp
jae
dec
sub
mov
hlt
mov
cmp
sbb
ljmp
sub
jecxz
sti
xor
add
mov
leave
mov
dec
pusha
inc
mov
cmc
sahf
ja
mov
inc
test
pop
or
les
dec
sti
add
in
add
push
mov
adcb
insb
sbb
outsb
enter
inc
stos
stos
test
adc
cmp
aas
shrb
jno
push
repz
fcmovnb
jg
js
and
in
roll
lret
jl
scas
mov
cwtl
les
cmp
jge
push
push
xchg
mov
ret
loope
xor
pop
xorb
cs
mov
mov
pop
divl
imul
hlt
int
cmp
sbb
mov
test
and
leave
gs
sub
xchg
lock
mov
addr16
mov
scas
or
bound
jbe
es
jmp
mov
shlb
test
cmp
and
and
mov
in
adc
data16
fucomip
cmc
popa
rcr
dec
xor
fldenv
cs
pop
jno
jge
mov
xchg
lods
adc
adc
shrb
lock
adc
fnstenv
push
pop
mov
dec
lret
xchg
es
js
push
xchg
movsl
dec
xor
jbe
pop
pop
je
test
push
inc
xor
sub
add
push
out
rcl
pop
es
cmp
ret
je
mov
addr16
mov
ror
push
popa
shll
or
and
notl
in
fstpt
push
out
mov
hlt
xlat
xor
cltd
mov
fwait
lret
or
mov
inc
mov
xchg
mov
mov
arpl
int3
fwait
mov
xchg
mov
jno
in
lea
lret
sbb
stos
xchg
aad
repnz
mov
adc
xorl
jle
fistpll
imul
cld
ljmp
sbb
test
popf
outsl
in
or
inc
mov
orb
pop
shll
sub
mov
std
jbe
inc
cld
or
adc
shr
push
lea
pop
or
pop
jbe
lret
insb
add
sbb
jbe
mov
out
xchg
mov
xchg
and
je
mov
ret
pop
xchg
sahf
nop
hlt
dec
js
inc
xor
sub
pop
push
inc
jno
push
jbe
orl
pushf
mov
push
or
cld
xchg
sub
cmp
lods
fsubrs
outsl
idivb
sub
push
imul
repz
or
icebp
js
push
or
or
mov
test
sbb
mov
in
es
icebp
push
and
rorb
call
add
push
pop
xchg
push
pushf
add
push
lods
in
cs
jp
cli
xor
jnp
push
adc
lds
and
inc
lods
loop
inc
adc
jmp
push
inc
mov
test
aad
mov
ret
dec
xor
xchg
push
in
call
or
mov
add
adc
or
mov
or
sub
xor
leave
adc
clc
movsb
push
das
pop
push
push
pop
stc
xor
lret
sub
in
adc
mov
cmp
and
push
add
mov
or
dec
scas
xchg
pop
jl
sti
inc
in
xchg
or
mov
pop
jge
mov
mov
sbb
xor
jle
mov
inc
sub
mov
inc
cli
sub
add
add
inc
jecxz
es
mov
orb
lods
insl
mov
sahf
imull
ljmp
lods
mov
scas
sahf
and
rclb
sub
pop
push
and
iret
push
cmp
cltd
cltd
daa
movsb
imul
ret
cmp
mov
push
fldt
adc
in
lock
inc
sub
jb
or
jb
mov
psrld
pop
mov
push
push
jno
and
lcall
dec
push
loopne
fimuls
xor
jmp
stos
cwtl
loop
adc
cli
xchg
mov
inc
dec
icebp
cli
sti
loop
or
mov
add
pop
jmp
push
jne
pop
inc
dec
jnp
xchg
inc
ljmp
xor
mov
out
and
addr16
into
in
insb
aad
mov
push
mov
test
ret
ret
xchg
out
aas
and
sbb
jno
inc
push
sti
dec
popa
mov
jmp
fcmovb
fmuls
jo
dec
inc
lock
out
push
sbb
mov
lahf
cmp
inc
scas
mov
cltd
scas
decb
sbb
mov
xchg
cmp
xchg
testl
add
mov
shll
or
push
xchg
stos
lahf
icebp
fbld
sbb
pop
shrl
xor
stos
mov
dec
mov
fldl
cmc
mov
inc
xor
lods
pop
xor
or
ret
jnp
addb
pop
divb
xlat
cmpb
aas
dec
jecxz
shll
bound
lea
ret
xchg
add
sbb
mov
inc
cmp
cltd
cmpsb
shrb
fldlg2
sub
dec
cmc
repz
repz
imul
mov
leave
mov
inc
mov
add
inc
mov
xor
sub
cmp
popa
popa
call
add
lret
outsb
push
leave
cmpsl
pop
push
loop
or
jge
push
fwait
sti
mov
pusha
iret
adc
shll
imul
push
adc
je
jne
push
adcl
jbe
pop
mov
inc
out
into
dec
gs
add
sbb
jnp
mov
sbb
aam
mov
hlt
loopne
sti
jl
mov
sbb
xchg
sarb
cwtl
jge
shl
jae
mull
jmp
mov
inc
or
jnp
xchg
loop
pop
or
and
mov
pop
push
rolb
xchg
mov
cltd
sub
sbbl
xchg
mov
jmp
jecxz
mov
iret
push
mov
pop
insl
sti
data16
addr16
jae
mov
sbb
std
leave
icebp
adc
shl
lods
lahf
ljmp
dec
outsb
into
pop
mov
dec
pop
xchg
fbld
or
sub
mov
loope
push
xchg
sbb
shlb
xchg
sbb
sub
inc
fwait
sbb
dec
jmp
mov
cmp
mov
sbb
pop
adc
lods
inc
xchg
sbb
shll
mov
pop
xchg
sbb
xchg
pop
xchg
sahf
int3
push
nop
loop
xor
and
sti
stos
xor
cmp
sbb
shr
pop
ja
or
pop
inc
mov
sub
ffree
adc
ror
jp
pop
std
gs
icebp
jg
fs
jbe
sbb
mov
aad
and
xor
sbb
mov
repnz
cltd
inc
pop
sub
lods
push
jecxz
mov
sub
cmp
or
sbb
or
pmuludq
lcall
mov
mov
clc
rcl
and
jb,pt
out
xchg
and
inc
das
call
fisttpll
push
cwtl
roll
bound
pop
aas
and
and
xchg
cmc
pop
cmp
ret
pop
mov
es
shll
pop
orb
push
xchg
mov
push
or
fisubs
fisubrs
icebp
xchg
inc
popa
out
dec
lret
fsubp
xchg
daa
inc
imul
jg
stos
pop
faddl
push
jb
xchg
stc
xchg
call
or
jmp
in
in
leave
cmp
ljmp
jns
mov
dec
dec
cwtl
dec
fnstcw
hlt
es
daa
adcl
pop
inc
aas
jge
push
and
lret
nop
push
jmp
cmp
lock
test
xchg
rcrl
stos
mov
ljmp
pop
mov
or
not
iret
jno
out
sub
sub
mov
xchg
mov
pusha
add
mov
pop
push
sbb
mov
scas
mov
iret
and
into
jle
rolb
fwait
rcrl
scas
out
push
jae
inc
mov
sbb
inc
aaa
hlt
loope
mov
call
outsl
rolb
test
sbb
in
inc
push
shll
push
mov
clc
jbe
call
mov
and
xor
xchg
int3
dec
lds
mov
dec
scas
cmp
out
popf
and
daa
mov
test
and
pop
jl
call
inc
je
xchg
sbb
addl
repz
imul
pop
push
call
xchg
flds
xor
mov
jg
rclb
pop
andb
sub
gs
shlb
jecxz
mov
ss
fdivl
cmp
loopne
mov
add
pop
xor
sub
ret
inc
mov
inc
dec
jl
imul
cltd
in
sub
pop
ja
xchg
sub
mov
xchg
enter
je
mov
fistps
or
std
inc
sbb
lret
cmp
ja
or
push
cmp
sbb
jns,pt
pop
push
aas
nop
cmp
out
push
lcall
or
scas
xor
xor
dec
pop
inc
cmp
pop
sub
push
cs
scas
add
out
movsb
and
ljmp
xchg
sbb
push
cs
pop
fidivl
rep
sbb
cmp
rcll
int
mov
inc
pop
jg
mov
js
nop
push
icebp
data16
dec
popf
mov
or
adc
cmc
cmpsb
imul
push
rorl
int3
mov
or
ljmp
xor
daa
cld
fwait
les
data16
dec
mov
ret
mov
pop
out
insb
pop
call
cmp
in
call
fcmovne
insb
xchg
stc
sbb
push
loopne
outsb
in
int3
mov
mov
push
pop
je
add
movsl
dec
stos
inc
js
ljmp
movsb
and
adc
int
mov
clc
mov
add
nop
stc
jp
push
fcoml
int
addr16
mov
cmp
sar
add
dec
xchg
xchg
sub
cmpsb
push
and
inc
fcmovb
cmp
push
push
xchg
decl
leave
sbb
xchg
arpl
and
test
xchg
adc
or
inc
mov
enter
popf
mov
and
mov
fnsave
loopne
mov
push
lods
in
xor
inc
xor
xor
inc
clc
pop
iret
push
inc
repz
push
mov
imul
pop
jge
pushf
mov
jo
test
fisubrs
mov
pop
in
test
sub
and
test
jmp
sahf
mov
sub
cmc
dec
xor
push
push
iret
mov
pcmpeqd
xchg
icebp
mov
sub
sub
fsubrs
inc
xchg
mov
adc
ds
jbe
data16
sbb
push
xor
mov
adc
jb
pop
loopne
jle
cli
add
jns
jnp
cwtl
xchg
popf
aam
inc
or
fsubr
inc
ss
jae
push
pop
push
push
fisubs
pop
icebp
mov
mov
pop
sbb
cmovo
gs
lea
pop
lahf
fldl
out
lahf
dec
jle
arpl
mov
fistpll
jno
jle
xor
testl
lds
imul
ret
fcompp
movsl
pushf
pop
addr16
mov
push
inc
sub
add
mov
mov
fists
insb
loop
add
xor
movsl
push
lahf
adc
xchg
push
cmc
lret
pop
in
mov
dec
test
les
jno
push
jnp
scas
adc
fsubrl
nop
fstps
stos
lock
xor
pop
cmpsb
cmp
js
sub
pop
lods
jge
pop
pop
out
outsl
lds
rolb
mov
rcpps
loope
push
lret
das
push
sbb
sti
je
ds
xor
sub
outsl
and
inc
mov
movsl
test
popf
pop
bndstx
lret
mov
imul
sbb
clc
outsb
cmp
out
pop
or
mov
push
leave
out
xor
and
sbb
js
enter
jl
pop
xor
mov
cli
in
imul
pushf
mov
mov
pop
push
aaa
push
divps
sbb
movsb
xor
clc
movsl
push
mov
push
in
and
xchg
stos
pop
lcall
sbb
and
pop
sarl
cmpsb
xchg
std
add
into
push
push
movsl
push
mov
push
mov
xchg
jecxz
lods
in
push
dec
add
fyl2x
lock
or
mov
xchg
adc
push
add
aaa
dec
push
mov
ja
cltd
mov
sbb
je
enter
and
ffreep
in
scas
inc
out
aaa
mov
movb
cmp
sti
or
push
arpl
or
je
push
and
std
adc
mov
repz
xchg
adc
insl
adc
arpl
inc
fwait
dec
outsl
hlt
lods
mov
mov
inc
and
repnz
or
sahf
jbe
popa
push
jo
fs
popa
dec
push
push
std
inc
fnstenv
mov
add
mov
stos
xchg
insl
jg
sub
xchg
push
cmc
divb
jno
sub
fcom
fdiv
les
iret
aam
push
xchg
pop
pop
adc
mov
pop
sbb
sbb
imul
inc
mov
jle
loop
mov
mov
lock
lds
aam
test
cltd
sar
xchg
repnz
add
ror
repnz
cmpsb
push
inc
loop
sub
in
inc
inc
icebp
pop
icebp
mov
xchg
inc
in
nop
ja
inc
adc
xchg
dec
lods
xchg
mov
adc
mov
sub
mov
adc
and
mov
xchg
and
mov
or
fwait
pop
std
fwait
mov
jnp
jns
xor
daa
jbe
inc
pop
jecxz
jmp
test
in
loop
repnz
pop
sbb
data16
aas
scas
mov
xlat
loop
add
test
outsb
adc
sub
push
shll
mov
xchg
les
inc
xchg
add
sub
pop
nop
xor
mov
sbb
fstps
dec
or
int3
sub
fistps
int
pop
int3
aam
lods
or
xor
inc
scas
dec
sahf
ss
data16
push
arpl
fidivrl
outsl
sbb
ret
xchg
shl
loopne
ss
lds
xor
jne
test
std
push
scas
insb
dec
daa
push
push
and
jnp
cltd
inc
mov
in
inc
mov
es
xor
ljmp
cltd
pushf
sbb
std
in
call
scas
dec
push
mov
dec
adcb
repnz
cmp
jmp
inc
test
cli
test
lcall
xor
xor
sbb
mov
pop
adc
mov
mov
in
inc
rclb
push
or
sahf
push
icebp
sub
cmp
and
sbb
mov
mov
orl
adc
idivb
jmp
lcall
cmp
das
push
imul
pop
xchg
out
jne
sbb
cltd
push
pop
out
mov
fs
stos
pop
push
fidivl
xlat
adc
ficoml
dec
xor
or
scas
jge
mov
popl
fistl
out
ljmp
xchg
xorb
cmpsb
pop
mov
mov
fcomps
xor
fsubr
and
fwait
repnz
sahf
mov
jb
dec
out
cmp
mov
cmp
jge
sub
dec
mov
movb
nop
stos
mov
in
mov
sbb
push
aaa
jnp
or
pop
inc
dec
adc
xchg
add
xchg
mov
ffreep
xchg
xchg
sbb
hlt
in
outsl
pop
fs
pop
and
mov
test
pop
mov
movsl
mov
and
es
movsl
sbb
lahf
jge
add
arpl
inc
add
mov
dec
sub
jle
mov
test
and
mov
inc
cmc
loop
test
jne
insb
push
add
rorl
sbb
fld
inc
repnz
mov
ljmp
hlt
icebp
inc
mov
in
pop
pusha
push
and
pop
pop
jbe
and
test
sbb
mov
mov
repnz
mov
mov
sub
bound
loope
int3
into
mov
mov
rcrb
adc
daa
aaa
popf
dec
jns
xchg
push
bound
hlt
out
sub
stc
shlb
gs
push
xchg
lret
ret
cmp
push
js
out
mov
push
cwtl
frstor
dec
fs
stc
xchg
ret
test
and
mov
mov
and
xlat
mov
pop
daa
xor
loope
jo
dec
sub
adc
pusha
fiadds
subb
add
pop
sbb
lret
push
and
cmpsl
fcmovb
pushf
push
and
rclb
int3
popa
pop
shrl
aaa
idivb
lret
pop
out
out
mov
mov
in
ja
push
cld
cltd
cmc
ret
scas
aad
mov
jp
call
pop
dec
mov
sub
sub
cmc
pop
adcb
int3
cli
jbe
shr
sub
scas
iret
xor
cmp
jne
jmp
xchg
and
xor
xchg
stos
xor
mov
ss
rolb
push
xchg
dec
xchg
cli
ror
pop
daa
sar
lods
repz
fidivrs
test
aas
fwait
xor
xchg
sbb
sbb
jl
stc
pop
cmpb
push
jae
lahf
ffreep
jg
cmp
mov
scas
jbe
rcrl
sbb
xor
inc
lea
xchg
cwtl
cmp
jp
mov
xchg
lahf
mov
push
aad
das
pop
ss
dec
mov
mov
push
rcrb
daa
cmp
test
js
push
jae
dec
add
out
daa
mov
repnz
and
repnz
scas
jb
lods
dec
and
and
pop
pop
jns
add
popf
scas
enter
mov
push
pusha
popa
scas
out
sbb
aad
out
aad
inc
jbe
mov
xchg
imul
in
add
mov
inc
pmovmskb
lods
lods
adc
and
in
or
jecxz
repnz
fwait
aad
add
addl
or
sbb
stc
pop
sub
sub
icebp
pop
add
in
inc
xchg
lds
lcall
inc
nop
push
std
cmp
out
repz
popf
out
cmpsl
and
popf
mov
pop
lea
iret
sub
push
sti
fxch
dec
xchg
sbb
cmpsl
lret
jo
cmp
and
insl
fisttps
pop
inc
out
or
cmpsl
je
pop
lcall
mov
dec
xchg
pusha
data16
xchg
sbb
nop
ficoml
adc
call
mov
out
popa
loopne
in
xchg
in
mov
pop
jb
dec
and
lock
lret
hlt
xor
jne
clc
dec
ds
cmpsl
jge
dec
mov
fdivs
into
mov
push
mov
or
jmp
sti
lods
xchg
pop
nop
xor
push
add
dec
lea
jl
sub
insb
dec
push
dec
cmp
jne
cmp
or
cmc
pop
inc
test
add
mov
jmp
sarb
push
xchg
sub
pop
xor
adc
out
push
lods
cmp
pop
sub
out
push
xlat
out
out
movsl
xchg
fcmove
loope
int3
dec
inc
dec
int
outsb
lret
cmp
inc
sbb
jl
das
idiv
rclb
insl
rclb
push
movsl
fnstsw
test
aaa
nop
add
push
in
out
out
lahf
add
fistpll
xchg
sub
outsl
mov
mov
js
jb
xchg
or
xor
jmp
adc
cli
in
xchg
test
dec
sti
stos
outsl
into
sbb
mov
mov
icebp
ja
iret
shrl
inc
ficomps
or
and
dec
xchg
loopne
cli
gs
add
test
movsb
mov
mov
jo
fisttps
pop
ret
lcall
mov
scas
mov
and
inc
and
push
cmpsb
push
cld
pop
mov
outsb
pushf
jp
lds
and
cmp
test
jno
adc
pop
pop
es
cmc
scas
mov
loopne
scas
sub
fwait
pop
dec
test
lcall
adc
loop
jl
pop
jp
scas
pop
imul
xchg
mov
fstps
int3
orl
fs
inc
or
xchg
jb
cmp
sbb
mov
pop
push
xor
in
mov
shll
and
mov
bound
mov
jg
push
mov
inc
push
fildl
jb
repz
ret
and
insb
insb
push
dec
pop
and
cmp
and
cmp
jmp
inc
add
jge
andb
pop
push
sub
pop
push
push
fucom
or
jne
push
lock
stc
sub
jb
and
inc
mov
and
push
pop
mov
popf
push
or
js
mov
adc
ret
sbb
cmp
add
mov
push
push
xchg
push
out
cld
mov
icebp
dec
cmpsl
pop
pop
int
insl
mov
scas
in
xchg
repz
lds
popf
cmp
adc
out
jae
sbb
mov
push
fsub
mov
icebp
aad
rcrl
mov
cltd
jno
out
or
mov
jl
insl
xchg
mov
pushf
lcall
ds
in
cwtl
pop
movsl
ficomps
int3
and
divl
pop
es
in
mov
out
jb
dec
ss
and
or
xchg
and
rcrb
aas
cmp
les
sub
cmp
or
mov
ss
mov
jb
adc
mov
jecxz
dec
xchg
adc
std
jle
xchg
mov
outsb
lock
add
jl
mov
mov
and
or
rorl
repz
ds
mov
inc
lods
or
lret
icebp
xor
sti
imul
lods
inc
mov
cmpsl
shlb
cmpl
and
pop
int
scas
dec
stc
fildl
push
xor
fs
cli
out
jo
enter
inc
and
mov
popa
push
cmp
gs
test
bound
insb
fucom
or
dec
add
outsb
scas
ret
js
push
mov
mov
mov
adc
add
push
ret
dec
push
xor
mov
xchg
adc
fstpl
xor
sbb
sub
pusha
outsl
rcrl
mov
pop
pop
inc
inc
ret
push
test
push
xlat
shlb
andl
mov
lods
test
dec
shl
pop
mov
mov
push
push
ss
nop
stos
push
test
jae
jo
pop
xchg
adc
test
into
jnp
fcoml
adc
pop
imul
fcompl
mov
rcl
mov
push
push
and
mov
dec
adc
push
add
mov
in
mov
push
mov
xorl
lock
sbb
fmull
inc
sbb
lods
in
pop
out
in
pushf
cli
mov
hlt
in
shlb
add
lret
or
out
and
sub
repz
lock
adc
das
xchg
in
cmp
lret
sbb
int
shlb
mov
cmp
jecxz
dec
sub
mov
sub
xchg
add
cmp
and
hlt
mov
popf
mov
pop
mov
cwtl
pop
adc
dec
mov
das
sar
xchg
xchg
pop
inc
lea
gs
aad
fnstenv
or
insl
nop
cmp
int3
push
ljmp
out
test
aam
ret
aad
mov
jbe
mov
pop
dec
inc
int
popa
lods
xchg
int
dec
ljmp
xchg
aam
inc
push
mov
incl
lcall
ret
xchg
inc
leave
adc
cmp
dec
and
stos
pop
dec
push
and
lock
imul
test
jnp
bound
adc
sub
push
jb
sbb
in
cmp
imul
inc
fs
shll
hlt
mov
sub
je
sub
inc
and
or
mov
jecxz
cmpsl
mov
sti
shld
imul
sub
stc
or
adc
inc
insl
rorb
fistpl
loope
mov
mov
flds
sub
xor
mov
or
mov
push
shr
add
shrl
sbb
test
mov
xchg
push
pop
sbb
out
data16
add
cmpsb
lahf
outsl
lock
push
cmp
test
jne
cld
mov
cli
testb
lods
cs
cmp
pop
mov
xchg
mov
and
dec
jae
mov
orl
sahf
sub
gs
sahf
adc
imul
adc
ffreep
ret
rcl
in
aad
inc
fldt
in
lcall
inc
pop
sub
xchg
push
cmp
push
xor
cld
cld
shll
dec
je
movsl
jmp
xchg
ret
cmpsb
mov
sbb
xorb
sub
pop
notl
sbb
push
sub
fwait
lods
sbb
mov
dec
leave
daa
out
sub
sub
dec
sbb
mov
mov
push
ss
jo
and
mov
enter
pcmpgtd
stos
mov
jb
sbb
push
int3
dec
movsl
lds
test
subb
xchg
mov
sub
ret
or
push
xchg
shrl
push
in
aas
xchg
pop
push
test
jge
push
sbb
call
movsb
out
imul
insb
sub
fucomp
aaa
mov
scas
test
mov
insb
data16
dec
sbb
lods
lds
jo
mov
mov
jmp
movsb
mov
push
fdivrs
add
dec
cmc
flds
je
sub
int
idivb
or
adc
int3
mov
sbb
mov
popa
lea
shrb
lods
mov
mov
pop
in
jnp
icebp
adc
cmp
jnp
add
push
mov
pusha
int
punpckhwd
lahf
mov
outsb
mov
pop
jns
mov
inc
mov
mul
mov
stc
nop
outsb
dec
pop
sbb
mov
test
adc
push
xchg
pop
ja
in
int3
insl
push
jne
mov
mov
dec
rcrb
inc
inc
pop
lahf
pop
pop
cli
decl
or
pop
cmp
mov
dec
mov
lea
into
jge
iret
fnstsw
cmpb
pop
in
add
push
mov
lods
push
pop
icebp
in
mov
adc
fists
lahf
insl
jg
loop
cmp
jno
inc
stos
leave
leave
out
mov
sub
int
iret
xchg
int
rol
fwait
mov
aaa
repnz
jp
outsl
insb
and
mov
cmp
hlt
sbb
sbb
sti
dec
push
int3
xchg
imull
xor
xchg
xchg
mov
loopne
jno
stos
xorl
lods
cltd
or
pop
test
in
addr16
xor
shll
xchg
mov
or
int3
mov
push
sub
test
add
sbb
movsl
aas
xor
shr
add
popf
mov
xor
xor
or
adc
cltd
frstor
mov
cld
pop
sbb
gs
sub
add
pop
pop
adc
push
sub
in
enter
xchg
orl
test
inc
push
add
push
in
dec
mov
divb
lcall
or
aaa
or
dec
mov
mov
insl
fldl
mov
pushl
push
sbb
mov
in
jo
cmc
stc
ds
into
sub
push
xor
pop
nop
lods
test
imul
lret
jbe
jl
mov
mov
not
dec
or
pop
jne
dec
leave
and
data16
mov
fidivrl
dec
jge
mov
sub
xchg
aam
pop
dec
cmpsb
rclb
test
std
les
lahf
scas
into
pop
pushf
psrlw
mov
lods
push
pop
sbb
mov
insb
out
mov
ljmp
imul
mov
rcr
scas
fildll
dec
pop
hlt
bound
pop
mov
push
push
testb
clc
dec
mov
setb
dec
xchg
incl
notl
mov
imul
push
dec
mov
sub
adcb
and
addb
sbb
int
cmp
inc
in
pop
popf
xor
inc
push
cmpsl
cmp
cmp
ret
or
adc
dec
scas
in
mov
fists
push
out
mov
ret
mov
clc
shr
inc
sub
pmaxsw
pop
mov
inc
jge
sbb
dec
in
shll
std
or
fs
into
lcall
bound
shrl
xchg
xor
xlat
mov
add
xor
mov
pop
sar
addr16
enter
mov
ficoml
push
adc
cld
sbb
ljmp
test
shll
fdivrs
lahf
movl
or
lock
lds
inc
cwtl
lret
inc
out
iret
xlat
mov
and
push
push
sbb
pop
gs
inc
jge
add
push
pop
scas
addr16
enter
push
cmc
mov
xchg
repnz
xchg
push
mov
or
mov
fisubl
loopne
cmp
lock
daa
mov
push
jbe
xchg
xor
sub
out
aas
pop
add
push
out
iret
or
test
lds
movsl
mov
cmc
jp
xor
sub
inc
test
sbb
and
icebp
adc
jp
xchg
and
fs
adc
mov
je
fdivl
in
inc
jl
mov
push
cwtl
push
loopne
lcall
cwtl
inc
call
pop
jne
jne
stos
hlt
test
mov
repz
dec
stos
and
repz
cmp
rcl
jge
mov
lret
and
pop
jmp
mov
imul
mov
sbbb
mov
std
leave
mov
out
xchg
mov
xorl
and
sub
jno
jns
mov
mov
mov
iret
mov
lret
sub
shrb
and
popf
mov
xor
or
pop
add
xorl
testb
or
leave
mov
scas
enter
cld
inc
jecxz
addr16
test
loope
push
fcmovnu
in
sbb
in
pop
stc
adc
cmp
and
or
ss
shrl
cmp
inc
sub
ja
scas
insb
jno
inc
inc
inc
add
test
arpl
sbb
loope
test
xor
mov
fs
ret
push
pop
jp
jle
adc
shrb
or
outsl
das
stc
or
sub
in
lea
and
mov
add
cmpsb
into
arpl
call
mov
adc
mov
and
and
jle
mov
dec
jecxz
jno
data16
dec
jecxz
outsb
mov
jno
inc
int
inc
pushf
lock
pop
stos
leave
jbe
xor
shl
pop
loope
test
jecxz
out
inc
mov
test
lcall
out
dec
insl
adc
fcmovnu
pop
xor
xor
mov
jbe
sbb
loope
aad
pop
xor
inc
adc
cmpsl
enter
pop
mov
out
add
inc
push
inc
imul
mov
xor
sub
or
mov
popa
std
inc
push
jp
pop
popf
and
or
fwait
sbb
push
movl
mov
pop
pop
inc
jge
mov
fists
test
test
aaa
xor
hlt
mov
xor
mov
orb
imul
scas
bound
sbb
fbld
add
insl
fistps
in
lret
inc
mov
dec
mov
aaa
add
imul
addr16
in
cmpsl
and
popf
adc
xchg
cmc
sub
sbb
imul
fs
cmp
cmp
hlt
sub
insl
fdivrs
jge
lahf
stc
sub
or
jnp
imul
rorb
add
xchg
icebp
mov
cmpsb
push
loopne
dec
xchg
mov
in
enter
cwtl
xchg
jbe
sbb
adc
negb
aad
jl
jne
mov
ret
std
jns
add
pop
cmp
out
mov
xchg
add
inc
pop
sbb
mov
lds
add
cld
push
not
hlt
push
fsubl
adcb
test
cmp
sub
std
fs
and
in
pusha
dec
dec
pushf
outsb
mov
mov
fidivrl
pop
scas
mov
ret
inc
jnp
mov
or
fwait
pop
pop
lods
lret
cmp
dec
enter
mov
lret
aaa
xchg
or
out
xlat
aaa
in
fstps
jne
xor
xchg
dec
and
pop
fdivrs
sbb
add
cli
dec
data16
xor
gs
xorb
data16
ja
popa
jno
mov
scas
cs
sbbl
rcll
movsl
xchg
lret
ljmp
jmp
push
clc
js
sub
inc
mov
or
push
fistl
test
adc
test
ret
lea
pop
add
jp
add
hlt
xlat
xor
mov
push
aad
jmp
mov
out
faddp
jno
addl
dec
dec
and
lds
push
pushf
dec
inc
ss
inc
into
sbb
add
adc
pop
iret
int3
imul
mov
and
add
std
mov
pop
or
xor
jns
jecxz
inc
xlat
sbb
je
aas
lods
xchg
sub
xor
add
shll
push
or
test
popa
rorb
push
jg
sahf
std
lock
insl
pop
sub
jmp
adc
push
scas
mov
loope
in
xor
lret
test
repnz
mov
call
push
pusha
inc
and
adc
lock
mov
lret
loopne
in
in
cmp
mov
fdivl
jno
xor
leave
pop
es
inc
xchg
cmp
push
pop
lds
loope
or
out
push
jle
add
or
cmp
out
mov
xor
cmp
ss
movsb
add
inc
in
push
sub
xchg
loop
dec
fwait
decl
call
loop
push
lret
adcb
test
cmp
push
out
pop
js
in
jmp
sub
xor
cld
mov
test
pop
inc
sahf
or
test
jle
mov
lcall
and
jle
pop
rcl
jmp
jp
dec
xchg
dec
sarb
ja
psubw
movsl
push
movsl
hlt
dec
cmpsl
dec
or
xlat
cmp
shll
xor
mov
testl
call
movd
sub
daa
dec
fstpl
rclb
xor
movsb
jmp
xchg
loop
push
mov
add
jmp
sbb
xchg
pop
lock
out
outsl
fstpl
imul
imul
stos
inc
or
and
cs
xor
mov
sti
push
pusha
add
or
or
in
cmp
les
pop
in
push
scas
mov
adc
jne
mov
adc
xchg
or
jns
les
jb
adc
inc
test
inc
mov
jne
out
cmp
or
in
add
into
movsl
cmc
push
pop
inc
mov
ja
cmp
jne
sub
mov
push
loopne
pop
jb
mov
sarb
mov
pop
divb
imul
pop
fcoml
hlt
sbb
cmp
jle
push
jo
mov
test
ret
mov
sub
fildll
push
loopne
mov
adc
mov
popa
aad
fists
movsl
lahf
stos
enter
pop
jl
fwait
insb
push
leave
mov
push
popf
xchg
sbbb
xor
fwait
test
dec
xchg
das
cltd
fdivl
mov
pop
fldl
fnsave
mov
nop
lea
rcrb
shlb
or
testl
xchg
loope
jp
loopne
out
cmc
mov
mov
sub
out
dec
inc
int
push
lahf
scas
mov
mov
sub
or
cmc
mov
call
sahf
outsl
or
mov
jbe
adc
or
and
cmp
and
in
and
dec
outsb
and
jp
mov
loop
xchg
fstpl
mull
jbe
cmc
push
mov
aad
dec
dec
rcrl
jns
and
or
js
roll
test
xchg
jecxz
sub
out
jmp
cltd
push
jbe
adc
sahf
mov
nop
sub
rcrb
outsl
or
mov
sub
nop
cmp
xor
sbb
icebp
or
call
jg
jg
push
push
iret
inc
jo
mov
aas
push
sbb
inc
and
xlat
lcall
lcall
inc
and
ds
fwait
and
in
pop
push
cmp
pop
movb
mov
out
jo
hlt
lcall
cld
faddl
mov
ds
inc
arpl
cld
leave
inc
push
mov
jle
jmp
arpl
pop
ss
lods
int
inc
scas
mov
shl
xchg
and
loopne
or
in
repz
mov
fmull
mov
jmp
insb
loopne
sbb
xor
repnz
push
ret
fxch
and
mov
push
adc
iret
into
inc
into
movsb
push
dec
popa
adc
dec
fstps
fs
pop
hlt
inc
clc
imul
test
push
shrl
lret
loopne
dec
ja
movntq
adc
ljmp
and
adc
int3
push
jb,pn
or
inc
loop
pop
std
dec
add
pop
mov
cmp
and
scas
ss
sbb
mov
dec
ret
in
jecxz
aad
sti
test
add
mov
inc
addl
lret
sbb
pop
ror
xchg
pushf
mov
movsl
enter
xor
sub
lret
pop
inc
cmpsb
push
xor
add
js
aas
loope
dec
pop
int3
pop
das
pop
mov
dec
jo
jne
add
mov
pushf
lods
icebp
pop
xor
cmp
movb
fs
pop
xchg
xchg
cmp
cmp
test
out
mov
mov
dec
dec
mov
loopne
adc
je
out
aad
or
sub
sbb
xchg
outsl
jge
imul
cmp
inc
fmul
add
imul
mov
cmp
mov
outsl
inc
and
mov
lods
hlt
mov
inc
imul
stos
into
cmp
addb
push
cld
or
lcall
mov
and
jne
jb
pop
dec
push
cltd
xchg
test
icebp
nop
sbb
jp
lret
mov
adc
and
jae
xorb
mov
push
aad
jl
xchg
lret
pop
fnsave
mov
cmpsl
enter
pop
push
mov
push
sub
lcall
xor
arpl
pop
inc
rcrb
std
push
arpl
mov
cmp
sbb
push
stos
mov
dec
inc
mov
int3
sar
add
mov
add
testl
mov
push
mov
adc
out
fidivl
jg
ja
mov
data16
and
xor
repz
mov
fs
fucomip
sbbb
jbe
inc
adc
testb
stos
mov
dec
push
push
mov
pop
cmp
mov
mov
inc
lods
or
in
in
push
pushf
cltd
xchg
xor
sbb
notl
mov
mov
sbb
out
jl
imul
mov
rcrb
or
fdivs
xchg
dec
test
int
push
popa
mov
arpl
mov
sub
cmp
stc
push
mov
push
push
jb
cmp
sub
imulb
scas
cmp
cs
push
dec
dec
mov
insb
add
call
inc
in
aaa
fsubs
out
push
jg
jmp
rol
imul
mov
gs
jecxz
mov
stos
push
insb
or
mov
or
pushf
xchg
push
cmpb
insb
out
xlat
and
loop
sbb
imul
cmp
sub
das
or
scas
xchg
push
add
push
mov
add
sub
in
dec
fs
or
dec
stos
sarl
xor
pop
push
je
outsl
xor
call
or
ret
inc
jae
jb
div
out
push
insl
sbb
dec
pusha
pop
or
dec
loopne
dec
aad
xchg
adc
ss
mov
adc
imul
shll
jae
push
sahf
jecxz
pop
xchg
movsl
mov
xor
mov
das
xchg
jmp
aad
dec
pop
mov
pop
sub
cmc
mov
push
loopne
aas
test
xor
bound
gs
xchg
push
adc
cltd
xor
push
push
rorb
mov
out
out
xchg
or
fcoms
cmpsl
in
mov
dec
pop
rcll
out
js
xchg
xchg
xchg
in
movsb
pop
std
aad
xchg
testb
pop
shll
mov
or
adc
xchg
clc
divb
cmpsl
lds
into
and
adc
or
cmpsb
fwait
data16
fisttpl
iret
xchg
xchg
xlat
repnz
pop
push
mov
lock
push
jle
sub
push
loope
adc
popa
popa
adc
jno
aaa
out
inc
or
and
jg
ret
cmc
inc
in
xchg
sub
fildll
mov
jns
fistps
in
adc
cmpsb
bound
cld
mov
jmp
push
lds
add
xchg
ljmp
mov
repz
adc
lock
in
mov
dec
lahf
repnz
sbb
sub
mov
inc
inc
pop
mov
dec
out
jmp
gs
jnp
data16
notl
fisttps
out
js
rolb
into
fidivs
push
jb
sbb
mov
inc
jge
pop
out
ret
mov
add
sub
dec
xor
addr16
adc
ja
add
mov
sarl
xor
push
and
rorb
std
sbb
sub
leave
fcompl
and
test
daa
pushf
push
jge
sbbl
lret
cwtl
mov
mov
push
mov
pop
xchg
int3
mov
icebp
xchg
sbb
aas
push
out
flds
stos
cli
aaa
lds
mov
or
out
sub
lods
cs
pop
push
sub
fldl
mov
insb
addb
mov
fisttpl
lret
mov
mov
xor
inc
jae
lahf
jns
aam
adc
ds
push
mov
inc
jne
or
xchg
mov
inc
pop
es
dec
stos
idivb
aad
sub
repnz
scas
in
mov
cmp
and
pop
push
pop
fwait
les
jg
in
gs
out
lret
and
mov
push
cwtl
ret
xchg
mov
mov
sbb
lret
jmp
xor
xlat
jno
stos
dec
std
inc
mov
cmp
add
loope
lock
cltd
jg
loopne
test
push
pop
test
push
divl
cmpsl
cmp
call
cmp
or
loope
and
stc
push
stc
jbe
pop
pop
mov
push
fimull
cmp
inc
decl
das
shrd
or
lea
push
mov
cmp
into
sub
push
repz
xchg
mov
sub
add
ret
jg
pushl
ret
gs
or
mov
pop
pusha
mov
add
pop
insb
ja
push
das
sbb
inc
jle
xchg
imul
andb
dec
inc
mov
xor
shrb
fbstp
push
imul
negb
aam
clc
mov
sub
xchg
inc
jb
das
aam
fidivrl
add
cmp
push
stos
mov
mov
cmpsl
xchg
sub
pop
and
imul
and
fldl
rcl
call
insl
jno
jge
xchg
and
push
cmc
mov
add
scas
and
push
or
sti
sahf
cmp
sbb
cmp
popa
dec
jns
fs
fadd
push
mov
mov
fptan
arpl
jb
stos
pop
inc
pop
inc
mov
stos
cmp
ret
mov
and
lock
jg
xor
aas
sti
adc
mov
or
jns
rcl
sub
push
pop
fstpt
fs
lcall
push
std
sbb
jge
dec
dec
mov
test
fidivrl
enter
pop
ret
jnp
je
repz
inc
mov
clc
mov
mov
ds
push
pop
loope
sbb
int3
fcomps
jle
test
add
xchg
decl
mov
dec
cld
mov
shrb
and
or
insb
add
pop
out
ss
out
jp
mov
inc
jns
cmp
addl
test
cmpsl
add
cmp
mov
xor
cmp
xor
adc
test
not
push
sub
jns
stc
pushf
pop
xchg
scas
lea
popa
in
loop
add
jbe
ljmp
out
pop
add
int
test
addr16
lcall
cmp
cs
inc
into
mov
add
dec
inc
lcall
mov
xchg
std
push
into
xor
pop
aad
jns
or
ljmp
push
lcall
mov
dec
xor
mov
mov
add
cmpsl
or
daa
les
mov
mov
movsl
xor
push
je
dec
lods
stos
out
aad
sbb
fildl
push
imul
pop
push
lock
jnp
cmpsb
inc
cmpsl
call
movsb
popf
pushw
mov
cmp
cmc
sub
outsb
nop
mov
xchg
xor
lahf
jecxz
dec
pushf
add
es
in
or
insl
xlat
push
mov
mov
jo
xor
int3
jb
insl
insb
out
pushf
mov
cli
or
pusha
pop
xor
inc
xor
cwtl
scas
add
test
jo
mov
aaa
in
imulb
notl
and
sub
in
adc
jno
leave
in
loope
pop
fistpll
cmpsb
dec
push
stos
insb
fistpl
movsl
pusha
nop
dec
leave
out
or
dec
pop
cmp
cmp
push
rcl
lcall
jecxz
out
lods
fs
les
jbe
fwait
add
sbb
sbb
and
insl
lods
imul
mov
xchg
push
add
mov
xchg
mov
jns
add
movsb
ss
pop
xor
into
pushfw
push
leave
jo
mov
sqrtps
lods
jmp
jae
mov
add
int3
call
aad
cmpsb
imul
xor
jl
jecxz
sbb
cwtl
mov
int3
jo
imul
insl
in
push
inc
sbb
pop
lcall
push
jno
xchg
mov
cmp
test
je
or
and
into
pop
int
inc
sbb
adc
arpl
loop
lds
jge
push
xchg
roll
stos
cmp
adc
pushf
rclb
add
jl
inc
push
xchg
fistps
sbb
scas
push
and
pop
sbb
sbbl
xchg
mov
mov
cmpb
lds
dec
loope
mov
xor
inc
psubq
imul
and
and
jge
outsl
sahf
push
sahf
push
cmp
ret
jecxz
out
jp
popf
aaa
sar
xchg
inc
out
in
xor
add
ja
das
mov
insl
and
mov
rclb
push
xor
dec
jo
or
lret
ret
jl
pop
sub
fnstcw
xor
pop
imul
shll
rorl
into
movsl
mov
rorl
or
adc
fistpl
pop
mov
ds
pop
fwait
jl
inc
stos
inc
negl
push
push
call
mov
cmp
adc
cld
repz
or
mov
popa
or
push
inc
cmp
jb
lods
ret
sub
daa
repnz
add
inc
pop
popa
mov
std
mov
int
jg,pn
mov
aaa
arpl
jmp
addr16
add
jno
aaa
xor
movsl
mov
pop
pop
test
push
inc
and
icebp
outsb
inc
sbb
sbb
fxtract
mov
icebp
mov
dec
repnz
js
jmp
jae
sbb
je
mov
loope
outsb
cld
xchg
nop
inc
js
fwait
cmc
pop
xor
icebp
int
inc
test
inc
dec
out
cmp
pop
imul
and
adc
or
or
xchg
dec
push
andnps
sbb
push
subb
scas
add
nop
clc
aad
pop
fsubrl
stos
push
insb
lock
outsl
xor
pop
xchg
decl
inc
mov
pushf
dec
aas
mov
ljmp
push
scas
adc
push
lahf
jmp
xor
push
sub
aam
or
push
mov
mov
mov
stc
lret
inc
hlt
int
dec
jnp
inc
inc
xor
aam
aaa
fildll
push
adc
dec
nop
or
divl
fdiv
cmpsb
filds
push
fistps
mov
push
pop
nop
es
add
xor
out
push
clc
lea
jge
outsb
hlt
lea
call
rclb
loope
outsb
lock
in
cmc
adc
icebp
jnp
data16
mov
aam
xor
sub
or
inc
shrb
out
test
mov
repnz
xor
pop
sbb
xchg
enter
mov
sahf
out
scas
sub
push
jae
out
mov
mov
pop
add
mov
outsb
dec
loop
adc
jo
or
rorl
pop
push
pop
out
out
sub
inc
in
lods
sub
mov
fldt
dec
lods
sub
je
in
lahf
jp
data16
add
xor
stc
roll
outsl
mov
mov
lock
bound
iret
outsb
lret
adc
xchg
fwait
cli
in
aas
iret
imul
sbb
sbb
jbe
scas
fildl
sarl
dec
lcall
and
dec
xor
xchg
jge
test
inc
bound
lahf
ffree
outsl
sti
mov
sub
test
dec
push
iret
popf
fldenv
and
push
loope
jecxz
ja
mov
adc
fstp
jno
cld
lcall
lret
push
bound
es
push
or
outsl
cmp
lret
dec
shll
xchg
arpl
inc
or
ljmp
imul
inc
sbb
fnstcw
add
out
xchg
jg
xchg
aas
mov
lahf
xor
insb
mov
in
int3
mov
test
scas
inc
in
int
sarl
xor
test
mov
xchg
add
sti
imulb
mov
ret
sub
mov
imul
cmp
sub
cltd
fcomip
sub
mov
cmp
xlat
push
aaa
pop
scas
lret
fcomi
jno
dec
xchg
or
sti
cli
orb
pusha
sbb
cltd
ss
mov
dec
dec
popa
dec
add
out
xor
dec
adc
test
mov
out
mov
out
scas
scas
pop
mov
lahf
xchg
push
adc
das
repnz
jnp
bound
les
data16
mov
pop
mov
mov
pop
in
mov
insb
jbe
xchg
out
push
pop
pop
shrl
xchg
sarl
fimuls
push
pop
into
push
dec
add
or
pop
inc
cmp
fcomip
cmpsl
loop
jle
jmp
xchg
jge
das
push
ret
mov
mov
sub
fldl
mov
fadds
mov
iret
fstpt
pop
rcl
and
pop
sub
hlt
cld
adc
inc
xchg
jmp
inc
ja
push
jno
sbb
adc
outsb
flds
inc
dec
lret
aas
in
mov
sub
outsl
jb
test
mov
push
loopne
xchg
mov
out
mov
hlt
int3
cmp
mov
movsl
daa
std
dec
pop
inc
iret
jge
and
xchg
pop
in
iret
fwait
loopne
aas
xchg
inc
test
and
scas
xchg
ret
pop
movsl
popa
mov
push
faddp
test
fnstcw
test
pop
and
pop
mov
sti
push
xor
adc
fsubs
push
das
or
mov
or
in
sar
or
test
repnz
jo
icebp
rol
rcrl
push
or
pop
scas
jp
not
mov
aaa
addr16
out
mov
shll
call
daa
lds
loope
pop
mov
ljmp
inc
inc
or
sbb
lods
xchg
cmc
call
xchg
or
xor
or
call
andb
xor
andb
sti
mov
repz
cmp
popf
adc
sahf
mov
les
pop
and
sbb
fwait
movsl
or
imul
into
bound
cltd
aad
gs
in
adc
jmp
into
add
fs
and
pop
data16
in
lcall
adc
adc
outsl
orl
fidivrs
xlat
cli
cld
dec
hlt
and
js
add
inc
sti
pop
xor
fldcw
mov
jnp
mov
cwtl
jb
xor
mov
sahf
ds
bound
movsb
mov
int3
add
jle
fs
xchg
sahf
iret
pop
mov
mov
pop
xchg
sahf
popa
idivl
dec
jno
push
add
pop
sub
int3
inc
ret
sub
xor
stos
int3
cmp
jne
cmp
adc
aas
imul
cmpsl
mov
data16
imul
fcomps
sti
adc
mov
xchg
xchg
scas
loop
mov
adc
inc
or
hlt
sub
push
shl
add
xchg
jns
pop
sbb
push
insl
push
xchg
inc
pusha
xchg
sub
dec
push
je
xchg
inc
in
rorb
mov
xchg
js
je
inc
aas
sub
mov
ret
and
cli
shr
add
shrb
aam
sbb
imul
pop
sub
loop
or
pop
imul
aaa
imul
or
push
aaa
dec
roll
adc
pop
scas
sub
aam
daa
into
mov
sbb
cmp
mov
testl
push
add
ss
leave
push
cmp
sbb
jbe
insb
addb
popa
mov
or
mov
sbb
jmp
adc
es
adc
mov
test
test
push
sub
ljmp
and
xchg
pop
gs
pop
inc
stos
adc
shll
ret
dec
xor
xchg
mov
out
and
sbb
in
and
js
mov
dec
test
inc
sub
sahf
pop
mov
in
gs
rorl
mov
push
ret
lret
pop
xor
inc
les
repz
movsl
and
xor
cmpsl
inc
and
ljmp
add
and
test
into
cmpb
jl
ljmp
int3
fstpl
je
and
ja
inc
aad
stc
adc
xor
cmpsb
aaa
fwait
out
into
adc
pop
pop
mov
icebp
cmpsl
push
shll
xor
ss
ficomps
inc
sbb
mov
push
sub
leave
lret
jmp
ja
loope
inc
icebp
inc
xchg
xor
andl
mov
lods
test
fiadds
in
fnsave
call
jns
lds
pop
into
mov
inc
les
dec
dec
scas
sub
pusha
int3
xchg
inc
inc
lods
inc
out
aad
fwait
pusha
add
rcrl
imul
jecxz
adc
insl
push
cmovae
std
orb
inc
addb
lret
insb
das
clc
adc
mov
sahf
adc
xchg
sbbl
cmp
and
add
mov
into
lahf
test
push
nop
lret
mov
std
in
test
jle
mov
punpckhdq
test
push
pop
inc
repz
mov
jecxz,pt
mov
insb
cmp
or
stc
stc
dec
lret
mov
lret
or
test
push
sarb
xor
inc
xor
dec
add
cmp
mov
fldl
repz
xor
xlat
cmpsl
shll
movl
jg
ficoms
push
movsb
aas
stc
test
xor
push
mov
push
cmpsb
arpl
xchg
leave
pop
test
pop
mov
loopne
ss
sbb
pop
fimull
shrl
repz
inc
jne
or
push
jns
cmpsl
rolb
add
daa
dec
lret
into
stos
es
jmp
inc
or
test
sub
es
sub
sbb
mov
pop
pop
repnz
movsb
xchg
inc
aam
and
cwtl
and
lahf
pushf
nop
movsl
sti
in
rorb
iret
sbb
fdivs
sbb
and
fstps
pop
xchg
add
ret
cltd
cmp
jg
jno
imul
clc
es
mov
lods
popf
scas
push
mov
mov
fdivp
stc
add
xchg
ja
outsb
push
jns
cs
sbb
jl
cmp
cmpsb
les
inc
sub
ljmp
push
mov
mov
sbb
add
mov
stos
mov
cli
adc
shl
in
xor
ret
in
adc
adc
insl
jno
jo
or
push
lret
xor
inc
jmp
popf
dec
and
fcmovnu
mov
adc
inc
sbb
cltd
jb
cmp
ja
inc
adc
or
mov
push
cmc
cmp
lret
add
xchg
stc
lea
stos
mov
movsl
mov
enter
cmpsl
cmpsl
mov
adc
aam
cwtl
sbb
roll
mov
inc
aad
pop
xor
test
stc
outsb
pop
inc
mov
loopne
arpl
stos
sub
stos
or
xchg
add
push
adc
arpl
mov
stc
xchg
jno
sbb
dec
jbe
mov
mov
dec
sahf
add
push
dec
mov
mov
pop
lock
push
bound
repnz
imul
in
cmc
loop
aaa
inc
stos
add
xor
mov
push
mov
jns
inc
in
pusha
aas
insb
in
adc
mov
adc
stc
adc
lcall
into
aad
mov
cmp
jae
dec
pop
mov
cmp
dec
pusha
test
mov
and
xor
dec
dec
ljmp
cltd
aas
mov
push
jmp
insb
ja
leave
jmp
mov
fsubp
mov
ret
pop
cmp
lcall
xchg
and
dec
call
movsl
jno
add
aas
xor
lods
mov
gs
rclb
fiadds
popa
xor
cmp
and
cs
cli
sbb
addb
or
es
loop
lret
les
out
jnp
cmc
jg
cmpsl
and
lock
ds
neg
retw
xchg
out
sub
mov
orl
lret
dec
inc
or
push
push
cmpsb
add
fisubrl
sbb
sbb
jno
xchg
or
pop
cmp
push
shrb
push
mov
dec
in
xor
dec
push
push
sti
sbbl
inc
popa
icebp
sti
movsb
xor
push
jg
pop
inc
or
cli
mov
or
mov
or
xor
sbb
std
mov
mov
pop
sbb
xchg
mov
mov
idiv
repz
mov
sbb
pop
inc
push
aam
movsb
cs
out
push
clc
scas
push
repz
ja
mov
cmp
hlt
mov
arpl
add
xchg
lds
add
sbb
clc
cmp
or
stos
jnp
cmpsl
xchg
mov
hlt
jno
xchg
add
data16
lcall
xor
jno
xor
aaa
andb
rclb
pop
adc
addl
push
ficompl
xchg
idivl
daa
loop
jae
outsb
pop
outsb
fsubl
sbb
add
repz
xor
pusha
in
sub
mov
pushf
xchg
jb
test
mov
xor
xchg
jbe
sub
cmp
fldt
or
mov
mov
shl
and
lods
xchg
push
fcomps
and
cmpl
mov
xchg
jne
lcall
add
adc
int3
push
mov
ljmp
cli
lret
inc
adc
mov
hlt
pushf
xchg
rcr
test
dec
xchg
dec
pop
es
or
cmpsb
test
dec
and
mov
lods
dec
aad
flds
out
insl
pusha
cmp
inc
shll
jecxz
mov
cmp
hlt
jg
mov
ljmp
mov
xchg
mov
dec
mov
lock
out
mov
adc
inc
add
test
mov
ds
push
scas
jmp
in
inc
loopne
mov
jecxz
fistl
popa
or
stc
push
icebp
sub
enter
divb
xchg
push
popf
lock
cld
jo
add
inc
sbb
mov
lea
dec
dec
mov
push
add
popf
inc
mov
cmp
sahf
leave
sti
and
jp
jo
fcmovnbe
adc
mov
in
cmpsb
enter
cmp
inc
sub
cmpb
out
push
loop
adc
cmpsl
pop
in
cmp
cmp
xor
imul
adcb
push
es
pop
mov
cmp
out
and
cli
sbb
jl
sbb
cmp
xchg
xchg
xchg
sub
test
aas
dec
push
int
movlps
aad
lret
inc
xor
lahf
dec
js
sub
cmp
or
divl
pushf
xchg
scas
inc
mov
shrb
mov
gs
push
stos
psubsw
fcmove
push
das
in
enter
pop
stc
das
mov
das
cmc
clc
jnp
xor
jp
cld
testb
mov
sub
mov
iret
insl
fcompl
xor
clc
out
movsl
loopne
inc
aam
and
sub
loopne
lea
mov
out
pop
sbb
ret
sbb
mov
sar
pop
hlt
mov
mov
mov
gs
pop
stos
or
cli
sbb
or
ds
je
lea
inc
out
mov
scas
sbb
inc
mov
add
dec
sub
xchg
in
cltd
repz
pop
mov
hlt
add
push
push
aam
test
lret
in
xchg
mov
std
push
jmp
push
mov
ljmp
sub
ret
and
xorb
xor
in
dec
pop
es
in
std
in
jle
aaa
sbb
push
xchg
push
fists
clc
pop
pop
or
sub
mov
ret
pop
nop
mov
sbb
outsl
add
pop
out
xchg
jg
cli
cmp
inc
sub
adc
out
ret
sahf
pop
lea
std
xor
adc
mov
push
aas
jo
mov
mov
cld
imul
or
leave
mov
test
sbb
ss
push
in
inc
ficoml
jmp
popa
mov
sahf
rclb
cmpb
cmp
arpl
xor
in
inc
sti
xor
fisttpll
shlb
aas
add
lods
dec
push
idivb
outsl
cmp
xlat
adc
cmp
add
fwait
call
roll
cwtl
js
push
sbb
lret
mov
lret
testb
mov
int3
mov
or
pop
les
loope
gs
fwait
clc
negl
push
frstor
add
stos
lods
cmp
out
pushf
add
scas
test
test
nop
dec
xor
addr16
repz
cmc
and
sbb
stc
cmpsb
punpcklbw
test
inc
loop
dec
add
stos
jl
xor
sub
pop
mov
mov
cltd
jmp
xorl
cmpsb
mov
call
shrb
inc
fisubl
fst
in
cmp
roll
sbb
in
outsb
sub
mov
in
fwait
adc
subb
dec
inc
mov
or
outsb
mov
and
scas
jnp
cmc
inc
xchg
pusha
mov
sbb
pop
pop
stc
inc
mov
lret
ret
out
xor
pop
jmp
stos
out
int
pop
and
sbb
dec
pop
loope
sub
jne
mov
ret
add
sub
mov
arpl
orb
xor
divb
inc
or
mov
je
mov
fstpl
cmpb
mov
or
and
fnstcw
cli
fcmovne
inc
sbb
adc
inc
mov
data16
cmp
cmpsl
and
sbb
jne
push
cmp
lds
imul
push
jno
mov
mov
mov
adc
inc
inc
gs
xor
and
pop
mov
jmp
testl
ficomps
rcll
imul
lods
dec
pushf
imul
cwtl
pop
mov
mov
call
dec
add
sub
test
dec
and
jmp
aaa
std
ljmp
std
int
in
notl
mov
in
push
cmp
mov
das
mov
ret
mov
jbe
xchg
iret
lods
fs
xchg
lock
in
mulb
cmp
xor
fldcw
lds
dec
xorl
or
cmpsl
ds
sbb
mov
mov
inc
mov
fwait
xor
sahf
daa
je
mov
mov
sbb
xor
sub
lret
insl
and
orb
dec
xchg
int3
xor
aam
popa
or
lcall
pop
push
pop
xor
ds
mov
mov
fisttpll
sub
sub
fimuls
inc
jg
pop
imul
mov
ja
pop
lds
jae
cmc
clc
fisubrs
shll
roll
mov
je
lret
icebp
pop
scas
pop
mov
or
repnz
js
pusha
insb
lods
and
fstpt
xchg
movsb
rcrl
movsb
xor
fbld
pop
insl
dec
fs
movsb
pop
movhps
leave
pop
insb
sub
push
pop
mov
inc
cmp
mov
gs
mov
aaa
iret
jg
fucom
into
mov
mov
fwait
ret
fldt
jo
inc
dec
add
xchg
xchg
ja
pop
adc
aam
es
sub
add
andb
js
movsb
das
mov
fistpl
roll
mov
bound
sar
push
jne
lock
ss
dec
out
add
dec
cmpsb
xor
outsl
xchg
xor
fisttpl
shll
xchg
sbb
push
xchg
test
push
into
lods
mov
lret
dec
xor
iret
mov
mov
jmp
push
cmp
testb
cmp
and
mov
mov
mov
xchg
cli
popf
cmp
push
pop
push
sub
add
pop
sub
push
mov
mov
mov
sbb
jo
sti
xor
loop
lods
mov
stc
sub
in
jg
hlt
fisubs
out
xor
sbb
push
shrl
cmpsb
dec
stc
or
inc
fs
dec
ljmp
dec
push
cltd
jmp
cmp
mov
xchg
fs
sbb
sbb
movsl
or
mov
mov
mov
loopne
jb
movsl
and
pop
cmp
int3
daa
pop
aaa
push
fnstenv
adc
jp
stos
pop
mov
mov
add
test
test
insl
stos
dec
adc
fbstp
ja
inc
std
sbb
shlb
mov
xor
jnp
adc
outsl
cmp
mov
add
xor
mov
mov
xchg
scas
icebp
add
jbe
bound
dec
shll
add
push
lock
xchg
sbb
dec
popf
movsl
sbb
adc
fsubs
mov
out
aad
mov
mov
aad
fsubl
je
cmp
lods
sbbl
sbb
adc
xlat
adc
push
inc
mov
shll
icebp
jl
sbb
inc
xchg
mov
cld
push
fisttpl
add
cmp
add
cmc
out
or
inc
shll
or
jnp
pop
sar
pop
push
cwtl
xchg
mov
repz
jne
call
pop
lret
cmp
ret
scas
mov
adc
mov
inc
adc
and
aad
jb
xor
fmuls
jle
adc
popa
sti
sub
sbb
faddl
jb
xchg
and
in
mov
sarl
sub
pop
mull
and
outsl
test
in
cmp
lcall
sbbl
cmpsl
in
les
shll
out
xchg
push
add
shl
sub
clc
loopne
adc
add
pop
pop
adc
popf
ret
out
sbb
fcomps
imul
iret
and
push
add
mov
mov
imulb
jns
nop
cmpsl
jno
push
sub
dec
mov
and
adc
pop
jle
push
adc
lods
aas
sub
xchg
insb
pop
push
mov
or
mov
hlt
sub
mov
pop
test
jmp
test
test
cwtl
mov
sbb
test
mov
and
jne
enter
aad
incl
xchg
or
add
faddl
mov
mov
loopne
xchg
repnz
fildl
add
mov
ret
xchg
repz
rcrl
lcall
add
mov
mov
nop
inc
dec
jbe
inc
add
icebp
popa
xlat
sub
xlat
dec
mov
xchg
dec
hlt
xchg
test
mov
jbe
xor
and
jne
dec
shr
mov
ljmp
stos
call
pusha
out
and
xchg
and
imul
push
push
jg
jmp
xchg
push
jno
xchg
aam
test
or
ficoms
mov
jg
mov
jnp
cmp
shll
in
add
sub
outsb
movsl
in
adc
aaa
lock
ljmp
enter
das
inc
lahf
add
mov
cmp
test
std
xor
sbb
mov
clc
and
repnz
leave
or
jnp
je
ficompl
mov
sub
ss
inc
xchg
lsl
call
inc
scas
add
cmp
xchg
andps
fadds
sbb
sub
xor
cmc
aam
lods
loopne
test
xchg
enter
mov
mov
cmp
push
jae
ljmp
loopne
sub
or
xor
and
aam
popf
rcll
lea
int3
mov
mov
xor
mov
cmp
adcb
jmp
js
mov
and
stc
push
lcall
and
mov
dec
xor
sti
adc
ret
mov
lret
out
mov
xor
repz
sahf
pop
rcrb
inc
outsl
pop
fdivrl
pop
sbb
addl
ljmp
out
dec
dec
aaa
sarl
lcall
nop
aaa
int3
push
in
jge
cmp
adc
mov
in
daa
daa
jns
stos
xchg
imul
sub
repnz
and
pop
and
hlt
cmp
daa
cld
pusha
cmpsl
or
pop
mov
push
xchg
and
jl
sub
sarl
sub
inc
into
int3
fdivl
add
or
loope
dec
jg
stc
pop
nop
lcall
fwait
xchg
ja
ror
repnz
add
lret
loop
and
mov
xor
mov
in
mov
xchg
aam
sub
ja
cmp
loop
enter
shl
fdivrl
fiadds
cmpsb
pop
pop
pop
or
aaa
and
fcoms
xchg
cs
aas
lods
and
sbb
lds
movsb
loope
xor
loop
fnstcw
sbb
js
jne
inc
jo
mov
in
lret
xchg
or
push
mov
push
arpl
scas
mov
adc
call
inc
mov
pop
cmpsl
mov
xchg
leave
pop
cmpl
xor
outsb
cli
loopne
xchg
cs
fnstsw
jmp
popa
bound
sahf
je
fdivrl
mov
inc
scas
std
pushf
in
lock
sbb
pop
dec
mov
xchg
xchg
and
cmp
push
or
es
xlat
add
filds
push
adc
add
jns
cmp
out
lret
pop
inc
mov
lods
and
data16
mov
sub
sub
loope
push
adc
mov
xor
ret
jnp
icebp
or
test
daa
adc
in
in
lea
cld
inc
push
loope
icebp
cmpsl
cli
mov
aad
icebp
xchg
push
mov
int
mov
jno
or
sahf
xor
int
mov
adc
xchg
aaa
and
lret
mov
lds
enter
sbb
inc
fsubrs
imul
rorb
pop
cmp
inc
sub
xchg
push
ds
ret
pop
daa
xor
fists
aad
sub
add
inc
out
xor
mov
lds
outsl
mov
leave
rcrl
das
dec
mov
xchg
loopne
aad
push
das
cmp
xchg
ret
sahf
aas
icebp
cmc
xchg
out
sahf
out
lods
mov
test
mov
jo
imul
lahf
mov
inc
lcall
mov
mov
xchg
mov
mov
jns
pop
adc
push
out
clc
inc
cmp
pop
mov
dec
loope
or
jmp
lcall
inc
les
inc
mov
cld
scas
and
sub
push
mov
jg
pop
xchg
xchg
mov
clc
int3
sbb
add
sti
in
jns
or
and
xchg
push
xchg
imul
loope
scas
xchg
sbb
and
rolb
sti
push
xchg
ds
mov
int
out
inc
mov
dec
mov
into
mov
xchg
adc
fiadds
mov
ja
xor
addb
xchg
fistpl
mov
sti
insl
xchg
adc
popa
mov
cmp
or
out
lock
add
pop
loopne
push
and
push
inc
outsl
es
add
adc
movsb
or
sarl
fdivp
jmp
adc
jl
dec
or
callw
rcrb
mov
push
mov
imul
in
mov
or
testb
mov
sbb
mov
out
orb
fildll
and
push
icebp
add
pop
popa
pop
movaps
mov
ror
data16
out
add
ja
xor
scas
jb
imul
or
jne
cmpsb
sahf
imul
xor
mov
inc
adc
in
xchg
scas
xchg
mov
sbb
add
inc
mov
leave
ret
xchg
cmp
xor
jecxz
cltd
pop
out
jne
mov
stos
xchg
movb
xchg
hlt
push
loope
pop
rorl
std
dec
inc
mov
add
sbb
xor
fisttpl
dec
mov
in
pop
push
add
dec
pop
push
jl
aam
or
aad
addb
pop
push
bound
fidivrl
shlb
test
and
repnz
push
jnp
push
pop
jmp
mov
lods
daa
push
cmpsb
jae
mov
inc
sbb
jl
lret
test
outsb
mov
dec
dec
xor
mov
cmc
shlb
test
xchg
movsb
push
push
cmp
dec
mul
push
add
dec
lock
mov
addr16
scas
add
jecxz
mov
jle
fwait
aad
mov
sbb
out
push
xor
jl
xlat
adc
pop
xchg
loope
cmp
loopne
xor
adc
sub
dec
js
inc
xchg
mov
mov
push
dec
cwtl
lock
lcall
fidivrs
mov
movsl
inc
popf
mov
call
lahf
xchg
inc
fnstenv
dec
xorb
pop
mov
lea
cmp
movl
inc
xor
and
jno
outsl
lret
xchg
rol
push
test
inc
adc
dec
push
icebp
gs
movsb
aad
and
xchg
mov
aas
jecxz
pop
cwtl
sbb
jge
or
cmpsb
dec
out
out
fdivrl
inc
mov
inc
loopne
adc
loopne
mov
sbb
pop
sbbl
out
xchg
pop
jge
iret
pop
xor
cli
and
jbe
mov
dec
ror
ret
lcall
adc
add
jmp
pop
jl
pop
and
inc
push
bound
ret
jmp
xorb
cld
pusha
lret
into
and
lret
arpl
pop
out
lahf
popa
fiaddl
xchg
xor
or
adc
sub
aam
cmpsb
loope
cmp
jge
cwtl
aas
pusha
lock
xlat
inc
lea
adc
or
cmp
cmc
xchg
xchg
dec
loope
dec
dec
push
and
sub
jg
call
stc
jecxz
fdivrl
dec
push
add
pop
mov
mov
outsl
fisubl
sbb
jecxz
sar
mov
or
pop
fs
lock
sub
outsl
jae
call
fcomps
pop
fidivrs
int3
mov
sub
sub
sub
lods
aad
mov
ljmp
mov
inc
dec
mov
pop
push
add
mov
enter
mov
ljmp
pop
addr16
xchg
adc
sub
cwtl
arpl
xor
lcall
jnp
cwtl
cmp
mov
outsl
aaa
pop
cltd
jle
ret
clc
pushf
popf
cmc
ss
xchg
lock
push
mov
icebp
add
insb
xchg
mov
push
pop
movsb
inc
fs
jo
sub
test
cmpsl
iret
dec
scas
push
adc
fisubrs
pop
std
mov
inc
dec
imul
into
scas
out
movsb
or
das
push
xchg
mov
pop
adc
mov
adc
lods
push
pop
adc
mov
push
in
push
imul
cmp
lock
cwtl
adc
jge
mov
lahf
mov
push
sub
sti
filds
mov
dec
mov
sarl
mov
fisttpl
pop
inc
push
cli
in
aas
int
movsb
xchg
cmp
insl
pop
icebp
push
aas
lds
outsl
push
rcrl
sub
mov
xorb
inc
pop
and
pop
xchg
sti
scas
int3
scas
sti
fdecstp
testl
mov
aam
lea
push
daa
push
xor
inc
mov
shlb
xchg
mulb
inc
test
add
ret
std
test
sub
lods
push
jae
pop
cld
mul
or
xchg
aas
ljmp
mov
push
push
movsl
test
or
and
jle
adc
jb
cltd
repnz
sbb
mov
insl
xchg
in
std
cli
jnp
mov
cmp
push
jle
movsb
and
xor
pusha
stos
sbb
adc
adc
lods
cmp
enter
ss
mov
xchg
pop
pop
jg
sbb
cwtl
and
ret
test
jl
test
mov
lahf
xchg
in
and
imul
xchg
andb
push
mov
inc
nop
adc
mov
pushf
inc
movsl
xor
mov
push
rcl
xchg
movsb
cwtl
out
xchg
jmp
cltd
test
pop
fdivrs
outsl
or
sbb
adc
outsb
lret
mov
rcrb
jae
pop
arpl
cltd
je
call
push
mov
mov
jg
or
mov
or
jne
adc
scas
xor
add
pop
pop
fst
adc
hlt
iret
popf
stos
xorl
imul
push
dec
mov
xchg
or
insb
cvtps2pi
ja
rorl
mov
pop
repnz
stos
jecxz
hlt
mov
xorb
aad
xchg
dec
add
shll
loop
sbb
hlt
mov
ficoml
mov
sahf
das
push
lahf
pop
adc
mov
pop
jno
xor
jns
inc
pop
fcmovnbe
stos
mov
lds
lahf
clc
adc
ljmp
fs
dec
into
add
adc
cmp
shlb
push
mov
push
std
out
xor
lcall
add
rorb
and
cmp
push
addl
push
stos
jl
testl
imul
jl
push
iret
mov
jecxz
xor
jmp
sbb
inc
push
inc
mov
or
cs
loop
imul
stos
mov
fisttpll
sti
pop
in
adc
dec
scas
adc
xor
cmp
outsl
adc
and
es
mov
lods
dec
or
pop
mov
sub
sub
fldcw
or
push
test
test
or
jmp
lods
adc
cltd
add
dec
mov
xchg
sub
icebp
cmp
mov
cmc
sarb
cwtl
mov
repz
mov
gs
fiaddl
sti
outsb
mov
cli
mov
pop
mov
lods
jge
adc
sub
mov
cld
in
push
inc
mov
mov
arpl
mov
pusha
int
dec
pop
shll
imul
lahf
mov
ss
cmp
cmpsb
test
jp
aam
jle
mov
pop
xor
pop
jl,pt
jmp
mov
adc
cltd
push
scas
xchg
cmp
movsl
in
cld
xchg
sbb
push
popf
pop
into
jno
scas
mov
mov
cmp
insl
push
loope
jmp
js
cmp
popa
mov
sbb
xor
loope
hlt
push
aad
or
xor
dec
jae
xor
adc
mov
jne
push
loop
and
pop
adc
sbb
insb
insb
scas
loopne
dec
or
inc
jecxz
insl
lret
in
fldl
aad
fsubrs
pop
rcrl
out
mov
push
xorb
js
ljmp
jle
mulb
jo
or
sub
into
and
adc
inc
jo
add
push
inc
clc
dec
sbb
mov
sbb
and
inc
dec
mov
es
aas
adc
cmp
adc
mov
ds
icebp
fisubs
outsb
pop
push
sbb
mov
xchg
add
cltd
sbb
call
push
enter
mov
pop
scas
ljmp
dec
movsl
or
pop
cmpsl
dec
sahf
repnz
sti
rcr
sub
in
insl
sbbb
imul
cvtdq2ps
push
and
jle
cs
xchg
scas
xchg
mov
dec
push
test
lds
jnp
sbb
sahf
pop
enter
xchg
adc
cmpsl
cmp
in
outsl
pop
pop
in
out
and
push
out
imul
jmp
gs
pop
shr
pop
pop
adc
fldenv
mov
or
lock
dec
ret
leave
jns
call
push
adc
xor
sub
or
lock
mov
aam
xchg
stc
movsb
je
push
sub
sub
clc
sub
pop
push
stos
imul
and
mov
and
cmpsl
push
data16
cli
pop
outsl
mov
sahf
add
vmread
cmp
add
and
movsb
pop
and
cltd
xchg
pop
ror
inc
mov
fcomi
push
in
push
mov
test
push
push
and
and
xchg
add
add
mov
in
js
cmp
jecxz
xchg
sbb
jns
jno
call
lock
push
insl
test
in
aas
jp
xchg
push
out
cmpsb
pushf
and
mov
and
and
icebp
add
cmpsl
cli
outsl
and
sahf
popf
pusha
dec
or
mov
mov
mov
cmc
mov
paddusw
icebp
ret
cltd
xchg
push
cwtl
adc
dec
sub
xor
int3
in
mov
or
arpl
sub
jno
fisubs
or
jecxz
lea
test
in
mov
adc
sub
sbb
sub
call
je
cmp
pop
cmp
jo
xchg
dec
out
jge
mov
inc
mov
fwait
jae
lret
test
je
and
test
repnz
sub
jbe
adcb
lock
jne
imul
xorl
xor
jo
or
xchg
push
adc
arpl
jno
loope
cmp
mov
jg
pop
stos
inc
cli
sti
cs
mov
mov
daa
shlb
repnz
inc
inc
sbb
sbb
jne
sbb
pop
lcall
xor
push
jmp
fdivrp
jbe
cmp
in
xchg
xchg
xor
mov
addb
xchg
loope
jmp
fildl
cwtl
push
add
lcall
mov
cli
mov
arpl
in
jbe
sahf
mov
pop
leave
or
addr16
sbb
pop
mov
xchg
cmpsb
nop
and
add
sub
pop
in
repz
mov
inc
frndint
cld
mov
or
std
out
xchg
and
je
push
xchg
adc
mov
sbb
fbstp
mov
mov
