sbb
add
mov
sbb
push
lret
test
enter
cwtl
push
pop
cmp
cs
sub
mov
dec
inc
fsub
aaa
je
in
inc
aaa
lock
xchg
push
popa
sub
pop
jb
ret
mov
pop
shrl
mov
pop
rorb
in
ficoml
dec
fs
sub
sub
adc
mov
cli
dec
insb
mov
sbb
mov
cli
push
leave
mov
dec
pop
adc
add
jmp
or
mov
icebp
mov
test
sbb
ja
or
and
imulb
inc
sbbl
imul
hlt
mov
pop
in
sbb
je
popa
xchg
rcll
xor
aad
adc
inc
adc
gs
and
outsb
ror
repnz
sub
adc
cmp
cmp
aam
xor
jo
in
testl
sub
pusha
dec
testl
clc
push
mov
sahf
fsubs
cmp
xor
lahf
push
pop
cmc
or
inc
push
push
xchg
fldl
ss
sbb
xchg
popa
xchg
adc
hlt
outsb
orl
sahf
xchg
pop
xchg
sub
push
cmp
inc
enter
aam
sbb
loope
sti
xchg
lock
ja
lret
movsl
fs
inc
dec
mov
call
jae
cmp
lods
out
fnsave
lcall
dec
popf
mov
mov
sbb
mov
push
imul
stos
inc
push
imul
cmp
jp
leave
das
jmp
jo
cmp
mov
aad
fidivrl
ret
sub
pop
mov
mov
fwait
adc
aam
es
into
fstl
add
sbb
mov
xchg
shll
ret
fcomps
outsl
insl
xor
aaa
jo
push
out
and
outsb
loopne
aam
nop
push
mov
aaa
and
mov
sbb
mov
stos
add
inc
aad
icebp
sahf
mov
push
sbb
add
adc
lods
dec
jne
sub
imul
les
loope
out
fbld
addr16
push
movb
into
fistl
mov
mov
idivb
add
xor
cwtl
mov
dec
decl
adc
dec
push
and
mov
pop
leave
xchg
pop
lcall
jmp
ficompl
push
leave
jnp
hlt
imul
push
inc
push
addb
jo
imul
std
mov
sub
xor
ljmp
and
lret
cmpsb
xor
scas
iret
outsl
and
rcr
fwait
jecxz
lcall
pusha
ds
sub
in
aad
mov
mov
xchg
sti
outsb
jno
xchg
xchg
je
jmp
gs
xor
push
mov
lods
iret
stc
xchg
inc
jns
xchg
wbinvd
stos
jp
shlb
xor
jo
pop
add
sbb
ret
out
jns
adc
insb
stc
lcall
les
inc
js
imul
inc
pop
in
bound
inc
and
mov
mov
jno
mov
xor
adc
cld
and
ret
mul
lods
adc
sub
pop
mov
inc
aas
inc
repz
mov
test
iret
aaa
mov
fidivrs
and
insl
jb
test
mov
push
ret
or
jns
push
shl
push
push
cmp
mov
test
xchg
xchg
test
sbb
pushf
xor
nop
sbb
in
out
int
push
adc
add
aaa
dec
ljmp
xchg
ret
inc
movsl
xchg
mov
scas
push
fwait
cwtl
notb
cmpsb
lock
cmp
inc
out
push
or
or
ds
adc
mov
push
test
sub
popf
sub
fwait
or
dec
in
stos
jo
int3
pop
inc
cld
lods
sub
lods
mov
mov
cmp
jbe
aam
push
repnz
mov
pusha
out
lea
cltd
xchg
ffree
push
cmpl
ja
jge
rcr
fprem1
push
fdivs
adc
sahf
xchg
scas
cmp
into
pop
pop
aas
dec
push
cmp
jns
popf
in
inc
jae
dec
dec
outsl
jl
and
mov
hlt
out
imull
stos
call
outsb
in
xchg
adc
xchg
je
pop
mov
aaa
mov
or
sbb
lret
scas
scas
lods
sub
call
ficomps
sarl
or
pop
sub
mov
ret
mov
sbb
scas
insb
imul
push
push
inc
out
push
arpl
cmpsb
push
xchg
mov
cmp
pop
inc
aam
daa
jmp
test
incl
scas
pop
shlb
push
xor
cmp
jb
xor
xchg
stos
dec
sarb
xorb
data16
mov
mov
ss
leave
fsubr
dec
cmp
xchg
loopne
insb
or
adc
dec
out
rclb
mov
out
mov
jo
add
aaa
inc
push
dec
dec
test
mulb
cmp
mov
jbe
loop
lahf
pop
or
adc
fcoml
mov
fwait
clc
lods
cmpsl
enter
mov
fsubs
xchg
xor
aas
and
stos
xchg
out
xor
and
sar
lcall
adc
push
scas
in
adc
dec
mov
popf
lods
stc
or
add
or
push
pop
pop
ljmpw
cld
and
jae
rol
and
xchg
xchg
push
dec
push
xlat
lods
inc
xchg
je
repz
cmpsb
mov
in
dec
jecxz
sbb
push
mov
test
dec
int3
mov
or
iret
adc
addb
mov
mov
push
inc
mov
pop
dec
popa
lret
inc
adc
fisttpll
push
xchg
cld
xor
dec
outsb
ss
mov
mov
stos
inc
aad
sbb
pop
out
loop
out
in
push
les
push
std
pop
or
clc
arpl
notb
insb
sbbl
jnp
mov
xchg
idivb
cmp
push
mov
mov
sbb
sarb
lock
clc
sub
mov
out
and
cltd
scas
es
cmpsl
clc
and
or
aad
fdivrl
dec
mov
fwait
movsl
addl
push
mov
xor
inc
shl
pushf
imul
das
dec
aam
jae
outsl
scas
jne
mov
pop
mov
ja
fnsave
mov
lea
pop
icebp
inc
cmp
enter
dec
js
out
daa
jle
inc
iret
repz
sub
cmp
cmp
sbb
fstpl
push
jnp
xchg
add
int3
adc
and
add
aam
xchg
sbb
inc
dec
hlt
xlat
aas
out
outsl
dec
and
psubq
mov
out
push
stc
insl
xchg
jb
pop
stos
mov
rcrb
jmp
cwtl
gs
cmp
pop
pushf
mov
cmpsb
sbb
sub
push
mov
icebp
roll
inc
out
cmp
xchg
outsb
jp
clc
jnp
cmp
mov
xchg
mov
pop
inc
jmp
ret
cmp
add
sub
and
push
ror
adc
add
dec
jmp
sbb
adc
xchg
cmpsb
cmp
clc
leave
push
cwtl
sub
adc
xchg
push
cmp
push
mov
ds
and
mov
loope
ds
and
div
loope
movsl
sti
dec
fists
loopne
cmp
add
mov
in
sub
movl
pop
fbld
inc
cltd
pop
push
pop
sub
into
lds
mov
nop
and
lods
movsb
shlb
sbb
mov
add
movsl
ret
and
mov
in
mov
scas
std
or
sub
push
sbb
push
shll
stc
cld
das
inc
cmp
and
or
xadd
xor
and
ja
adc
fwait
add
sti
pop
dec
lret
or
fdivp
sub
xchg
xlat
bound
cmp
into
ret
adc
sbb
addw
es
cli
loopne
lcall
sub
rcrb
or
xor
push
push
jl
stos
jnp
pop
sub
lods
sub
cmpsb
dec
lock
jp
sub
sub
pusha
mov
nop
mov
hlt
xchg
pop
and
jge
clc
es
in
xor
jne
arpl
ss
jg
and
test
cmp
push
mov
loope,pn
lock
and
add
popf
call
pop
in
or
inc
cwtl
cltd
cmp
shll
movsb
in
jns
out
rcll
ja
into
shrl
jbe
jbe
out
mov
or
push
add
aas
and
loop
xor
pushf
mov
pop
sub
xchg
lds
cmp
in
push
fs
stos
inc
adc
pop
jno
popf
xor
std
xor
and
push
push
mov
cld
jecxz
fisttpl
lods
jp
outsl
or
add
jp
add
jno
jge
fwait
pop
mov
or
and
jmp
fistl
cmp
fisttpl
fsubrs
jle
addr16
push
push
xor
xor
pop
xchg
jo
cltd
mov
addr16
cwtl
nop
mull
rcr
lock
cs
js
adc
pop
ja
push
mov
in
ss
stc
in
cmpsl
hlt
jmp
cwtl
out
repnz
fmulp
stos
ret
and
cli
addb
adc
jg
loopne
ret
movsb
out
mov
repz
push
sub
push
arpl
sub
push
ret
push
add
inc
dec
imul
sub
mov
jae
or
call
sub
and
mov
dec
cmp
aam
cpuid
xchg
js
cmp
cmpsb
adc
clc
fdivrp
jg
or
loope
add
mov
faddl
leave
cld
push
ja
cli
xor
mov
mov
daa
inc
int
nop
push
outsb
mov
push
mov
pop
leave
bound
mull
fcomi
push
inc
inc
mov
or
pop
sbb
jge
mov
dec
jb
ret
inc
mov
inc
sbb
negb
cmp
xchg
inc
cmp
lahf
or
or
push
or
cmp
fstp
aaa
adc
nop
cmp
loop
fcmovb
add
rcrl
mov
ret
pop
ss
add
or
push
adc
or
push
mov
xchg
pop
add
mov
fdivs
in
push
xor
andl
mov
inc
dec
shrb
dec
add
cmp
insl
stos
inc
shll
notb
cmpsb
inc
and
out
daa
adc
icebp
bound
test
in
inc
pop
sbb
shl
shrb
mov
int3
frstor
jno
mov
stos
sub
mov
push
stos
dec
jl
mov
popa
mov
stos
adc
or
push
dec
xor
cmp
mov
icebp
shl
test
add
adc
add
jp
or
push
ret
add
add
dec
add
sub
mov
xchg
dec
jle
cltd
pop
adc
mov
dec
imul
jp
sub
das
js
into
jbe
adc
arpl
call
jge
lds
ss
out
adc
inc
or
mov
cmp
mov
mov
jns
jne
js
stc
mov
jbe
sbb
fidivl
inc
lock
js
sti
dec
in
pop
mov
outsl
repz
cmp
mov
jne
out
cltd
xchg
imull
testl
mov
pop
mov
sub
mov
mov
test
mov
xchg
out
xchg
and
jnp
pop
fcoml
xor
or
or
vcvtsi2sd
lret
movsl
inc
cld
dec
xchg
adc
add
test
test
jae
mov
mov
mul
xchg
pushf
dec
and
push
xor
adc
mov
stos
test
pop
jo
cmpsb
and
out
inc
in
nop
test
mov
xor
scas
cltd
mov
inc
push
xor
xor
or
cmp
mov
incl
and
test
push
loope
jmp
and
adc
mov
jne
test
or
ds
adc
jp
fs
pop
movsl
xchg
pop
ljmp
xor
int
rcr
test
test
and
ret
cmc
into
bound
push
cmpsb
jbe
lods
push
jg
push
add
out
fdivs
jp
jnp
popa
movsb
repnz
mov
mov
lods
mov
mov
ljmp
mov
xchg
pop
loop
sub
inc
and
aaa
cmp
lahf
dec
lahf
mov
aam
xchg
xor
imul
imul
sbb
xor
add
repz
in
add
das
push
imul
pop
sub
lret
jmp
gs
frstor
sub
push
inc
cmp
fwait
push
shr
add
xchg
mov
out
in
lods
sub
mov
add
cmp
and
imul
push
stc
cli
ficomps
push
repnz
je
shrb
lahf
mov
das
int
nop
push
add
pop
jge
fildl
sub
push
rol
popa
sub
fldl
sbb
pop
mov
jno
lret
ljmp
pop
mov
and
fldpi
scas
adc
or
jl
fisttpll
push
mov
and
sub
jg
aad
push
outsl
fsts
adc
scas
out
push
sti
pusha
arpl
loopne
iret
push
lret
scas
sahf
xor
or
js
cmp
push
aam
cmpsl
add
push
sub
jo
pushf
jp
ficompl
test
loop
nop
pop
cmp
hlt
add
inc
scas
ret
enter
adc
or
std
insl
sbb
orb
inc
fcmovnb
stos
hlt
cmpsb
adc
add
frstor
jle
dec
add
fsub
lods
xchg
fs
push
fdivrs
mov
mov
dec
dec
leave
mov
outsl
push
dec
in
push
mov
jmp
ret
in
push
popa
xchg
pop
add
inc
inc
mov
xchg
mov
inc
lods
loopne
fidivrl
dec
dec
add
pop
pop
xchg
das
outsl
inc
mov
cld
add
xlat
push
movsl
imul
and
and
jae
pop
or
sbb
add
int3
sbb
push
flds
push
fdivrl
in
xor
push
fidivl
fwait
jmp
ret
fdivp
or
sub
cwtl
pop
hlt
insl
sar
es
sub
mov
lods
mov
test
aaa
xchg
cmp
lds
ret
cmc
test
push
std
and
mov
jg
xchg
push
das
adc
das
push
add
adc
cmpsl
sub
lret
ret
iret
pusha
cmp
or
sub
aad
popa
fists
and
insl
add
ret
aas
loopne
inc
adc
lock
insl
lea
push
sbb
insb
adc
cmpsb
jb
lret
movsl
leave
in
fadd
inc
sub
orl
mov
dec
out
push
or
repz
and
arpl
lcall
nop
mov
inc
xor
adcb
nop
pusha
sub
cmpb
gs
loopne
xor
push
xchg
dec
mov
mov
xchg
push
sbb
jae
lock
jo
sti
and
lea
cmpsl
daa
push
scas
outsb
popa
int3
movl
in
pop
xchg
xchg
call
adc
push
pop
aas
xchg
pop
cli
imul
enter
mov
cld
in
push
push
cwtl
push
mov
sub
jo
push
or
gs
scas
enter
mov
stc
js
mov
sbbl
cwtl
mov
cmp
mov
pop
sub
test
ret
iret
mov
xlat
add
sahf
mov
pushf
inc
nop
shl
divl
add
mov
out
rclb
rolb
jmp
mov
les
push
fstpt
mov
fistps
mov
repz
and
rolb
fidivl
xor
sbb
movsb
inc
call
push
cmpsb
lods
and
fs
jne
stos
je
call
push
pusha
imull
mov
sti
dec
pop
sub
rol
mov
sub
push
int
in
sub
daa
pop
adc
stos
fldcw
lret
lock
xchg
rcrl
cmp
mov
out
pop
fdivl
and
mov
inc
lahf
sub
adc
pusha
dec
mov
ror
mov
dec
mov
sbbb
jl
mov
lret
shr
js
inc
add
jp
or
pop
mov
rcll
fimull
loope
stc
push
dec
test
cmpsl
xchg
sub
stos
add
mov
or
cmpsl
sbb
nop
mov
xchg
push
test
sbb
push
scas
repnz
lret
scas
push
inc
mov
mov
dec
imul
dec
push
cwtl
or
rorl
pop
add
cmp
push
arpl
fdiv
repz
ret
xor
aaa
lods
xchg
sbb
std
movsb
add
jge
js
popf
gs
mov
jno
outsl
cltd
rorl
xchg
xchg
cmp
inc
jbe
mov
inc
jmp
repz
push
xchg
stc
push
push
mov
add
stos
cs
mov
ret
add
dec
pop
pop
daa
rcrb
mov
aad
fdivs
popa
pop
pop
sbb
mov
out
pop
aas
gs
lret
hlt
cmpsb
sub
mov
fldl
mov
xchg
or
cmp
mov
mov
jmp
xchg
je
lds
in
scas
lock
nop
inc
popa
fwait
mov
imul
cmp
cltd
add
inc
sahf
dec
insl
pop
fnstenv
or
dec
ljmp
sub
mov
mov
gs
and
lcall
and
incl
pusha
dec
loope
xor
inc
adc
data16
mov
dec
pop
cwtl
lock
ss
sub
mov
pop
rolb
pop
pop
mov
loopne
mov
enter
cmp
and
das
test
in
outsl
sbb
shrb
movsl
or
mov
aam
xor
rol
inc
and
test
sub
out
cmp
decb
outsl
aam
xchg
das
xor
sub
stc
mov
stos
push
cltd
cs
loope
movsb
add
mov
jp
daa
repnz
stos
dec
jmp
sub
lods
mov
sbb
add
scas
jne
int3
lock
gs
nop
mov
in
int
shlb
sub
xor
jg
mov
jne
push
cmpl
loop
sbb
mov
lods
mov
or
cld
add
inc
jns
xor
adc
divb
test
aad
aam
lcall
repz
les
mov
or
fiaddl
xor
cmp
sbb
roll
dec
lods
push
xchg
pop
jecxz
push
insb
gs
xchg
cs
mov
add
outsl
bt
repnz
or
in
sub
mov
xchg
xor
pop
push
pop
cli
imul
jl
pop
xor
and
je
ja
mov
insb
js
sbb
xor
imul
jl
sbb
aam
sbb
mov
ljmp
adc
jge
call
repz
inc
lret
gs
mov
sbb
jecxz
loopne
cmp
jns
inc
hlt
insb
inc
sub
les
jnp
std
loope
dec
pop
scas
fsubs
push
ljmp
mov
dec
xchg
pop
lods
shlb
stos
aaa
sub
inc
roll
test
push
mov
cmc
cmc
dec
xor
pop
mov
aad
sub
shll
outsb
mov
and
in
gs
jl
xchg
mov
jns
vpunpckhqdq
test
repz
pop
adc
rcl
pushf
outsb
push
les
testl
adcl
adc
mov
pusha
cmp
cmp
jecxz
xchg
lret
dec
subb
dec
hlt
sub
js
inc
inc
insl
clc
ds
jp
jne
pop
adc
or
les
mov
ficoml
inc
shll
mov
shll
out
jne
test
jno
scas
mov
xchg
adc
cmp
xchg
xchg
xchg
adc
inc
pop
mov
pop
mov
dec
jmp
or
das
mov
fildll
idivl
and
dec
add
rcrb
mov
dec
fs
aaa
sub
shll
lcall
insb
mov
xchg
das
cmc
sub
sub
out
add
hlt
add
jmp
mov
fsubrl
push
outsb
cwtl
sub
inc
hlt
mov
add
jecxz
divb
pop
stc
fimull
xor
inc
adc
insl
and
mov
adc
data16
mov
lds
pop
ss
lahf
sub
sbb
int
pop
arpl
dec
mov
and
fcompl
test
or
add
stos
inc
push
add
cld
ret
xchg
and
lea
push
or
jg
mov
or
addr16
cmp
nop
outsb
in
pop
orb
sbb
xchg
ret
jl
mov
pop
cmpsb
pop
jmp
loopne
sar
insb
aad
out
push
xchg
and
pop
sbbb
mov
xorl
sti
or
dec
fs
fmul
test
push
cmp
test
mov
mov
cs
xchg
mov
and
lods
imul
fildll
cmp
mov
jecxz
mov
ja
fdiv
push
mov
clc
mov
leave
or
into
dec
and
sub
insl
mov
call
les
ret
push
jo
imul
ffreep
mov
addr16
and
lds
add
jp
lahf
sub
jmp
lock
and
lods
and
icebp
mov
rclb
popf
mov
pop
add
push
arpl
cmp
lods
rolb
lcall
loope
add
add
pop
push
lods
mov
aad
jmp
sti
xor
jle
in
cli
mov
icebp
push
adc
xor
cltd
repnz
test
mov
cmp
fildl
loopne
movsl
mov
dec
sbb
pop
mov
mov
rorb
pop
sub
mov
push
push
nop
xchg
dec
and
mov
mov
nop
outsb
inc
xor
push
pop
add
or
adc
inc
push
fucomi
add
test
sbb
mov
adc
sti
scas
out
inc
scas
ret
sbb
push
push
xlat
sbb
add
lcall
mov
aam
jg
js
lock
pop
inc
aam
add
pop
push
and
testb
icebp
xor
iret
sahf
lret
xor
rol
jge
in
xchg
fidivrs
push
xchg
or
xor
cld
shr
jle
jno
mov
aas
inc
pop
shlb
xchg
int3
push
add
jmp
push
and
cmp
mov
test
int
mov
inc
mov
stos
cmpsl
jle
inc
adc
jl
cwtl
inc
jno
add
fmuls
lds
pop
jnp
add
loopne
or
rcr
gs
bound
mov
xchg
sub
rcr
lcall
mov
repz
mov
mov
push
add
pop
dec
push
lret
jmp
jle
adc
jmp
adc
loopne
xchg
xor
test
jne
adcb
aad
mov
test
imul
lahf
mov
add
jge,pt
test
es
xchg
adc
mov
das
sti
jae
rcrb
notb
add
jl
adc
les
ret
out
je
inc
cmp
pop
ffreep
ret
adc
jae
sbb
shll
pop
lret
or
loope
dec
cmp
arpl
jg
pusha
mov
das
cltd
mov
and
in
adc
dec
fwait
lcall
jl,pn
pop
icebp
add
and
jae
sub
mov
cmp
jle
mov
popf
shlb
dec
rorb
adc
cmp
sub
lcall
and
mov
cs
jecxz
mov
out
add
test
sub
mov
sub
inc
shll
xchg
xor
in
insl
pushf
in
mov
loop
dec
rorb
cmp
rclb
not
arpl
es
icebp
jns
adc
mov
popf
in
inc
push
sub
imul
push
cvtpi2ps
dec
fcom
or
inc
lods
pop
push
sti
mov
fstpl
shrb
push
lods
jmp
mov
aad
sub
mov
pop
roll
xchg
scas
jo
or
aaa
push
xor
jo
stc
mov
xor
test
dec
xor
dec
mov
loop
mov
pop
mov
cmpsl
pusha
xor
sub
lock
in
stos
repz
and
aaa
xchg
inc
mov
adc
testl
and
mov
fmuls
jmp
mov
rcl
or
and
xchg
idiv
jns
loope
imul
popf
mov
iret
push
ret
inc
insl
out
cltd
aam
das
std
leave
jl
les
lcall
testb
outsl
lods
xchg
xchg
sbb
ljmp
push
pop
jle
add
dec
cmc
mov
repnz
jp
jns
das
sbb
mov
repz
and
mov
dec
fimull
jne
lret
mov
data16
mov
sub
and
rorb
hlt
pop
ja
xchg
xchg
adc
enter
test
and
mov
cmp
push
push
fistpl
xor
sahf
push
jg
push
imul
mov
out
mov
push
mov
jmp
int3
add
push
add
int
shlb
or
out
add
cmp
add
fucomip
rcl
cmp
or
ds
push
imul
icebp
hlt
outsl
add
mov
dec
mov
sbb
xor
and
pop
mov
decb
inc
outsl
mov
xor
hlt
sub
aas
sahf
fistpl
mov
int3
adc
adc
es
pop
mov
adc
sbb
sbb
shl
mov
in
xchg
mov
fisttps
loopne
push
xchg
sarl
shlb
mov
inc
iret
rol
aam
out
pusha
je
cmp
adc
pop
inc
loop
jbe
or
iret
sub
mov
call
xchg
leave
dec
inc
xor
js
mov
aas
mov
push
je
push
adc
and
daa
lds
cmpsl
mov
mov
jne
in
lea
push
or
and
mov
adc
lea
pop
shlb
fldl
es
pop
sub
sbb
adc
rol
insl
daa
jb
add
sub
insl
int3
jmp
xchg
adc
fldcw
rorb
lods
adc
cmp
daa
dec
repz
adc
jne
and
xchg
or
inc
xchg
jp
push
mov
sahf
xor
jp
sbb
push
lcall
and
push
push
jno
ja
lds
jb
xchg
cld
jge
sbb
lds
jne
sahf
pop
mov
scas
xchg
xchg
lea
jno
jp
or
mov
sub
jmp
loop
adc
jae
in
sti
fs
aad
pop
mov
xor
lods
out
jno
pusha
bnd
cmp
fnstcw
mov
or
lret
aam
xchg
jae
cmc
and
inc
es
in
pushf
daa
push
call
cmp
cwtl
xor
sarl
stos
mov
push
fistps
xor
icebp
and
cwtl
rep
aaa
xlat
enter
outsl
andb
inc
push
rcll
cmp
loopne
stc
cwtl
nop
stc
repnz
cmp
mov
in
in
fsubrl
repz
in
aas
push
pusha
mov
mov
inc
inc
push
jbe
out
push
imul
std
sbb
es
lock
aam
into
and
add
jp
sub
sub
test
fstl
xor
mov
push
fadds
and
stos
stos
add
jecxz
movsl
add
into
ret
test
insl
movsl
push
mov
ffreep
call
loope
xchg
xchg
xchg
add
loop
sbb
mov
xor
clc
add
fs
nop
pop
jnp
and
inc
mov
add
jb
scas
xchg
and
int
rclb
lcall
or
int
rol
cmp
out
pop
cmpsb
in
repnz
adc
int
out
jbe
sbb
and
andb
cmp
cmova
sahf
pop
mov
out
std
pusha
roll
repnz
xor
in
test
lret
fbstp
push
call
mov
cld
aam
mov
jne
sahf
mov
mov
adc
scas
jno
jecxz
push
iret
xchg
movsb
pop
dec
pop
mov
pushf
adc
push
std
pop
cmpb
mov
mov
mov
mov
add
hlt
adc
xorb
and
ja
add
cmp
pushf
cmp
shrb
adc
fsub
mov
adc
push
jnp
cmp
add
cmp
and
mov
out
inc
adc
cmp
or
jg
mov
and
imul
imul
cmp
aad
ljmp
ror
sbb
out
lret
ficoml
xchg
jp
cmc
mov
sub
pop
out
push
jno
cmpsl
rolb
dec
aad
xlat
mov
dec
cmp
sbbl
icebp
or
outsb
push
cmp
ret
add
push
sbb
xor
js
add
loope
cmp
inc
inc
sahf
into
push
push
dec
gs
jle
dec
repnz
dec
or
dec
pop
daa
hlt
aad
scas
scas
fistps
lcall
stc
rorl
add
and
sub
mov
hlt
push
mov
outsb
call
inc
stc
xchg
in
rcrl
mov
das
enter
jmp
adc
or
testl
xchg
sbb
xchg
js
lea
sub
push
jmp
iret
or
jl
cmp
aam
push
and
add
cmp
mov
push
add
bound
mov
push
out
inc
jecxz
jo
ja
mov
test
cmp
jecxz
loop
push
adc
mov
sub
test
cmp
or
frstor
add
dec
sbb
dec
cmpsl
aas
fcmovnu
sbb
pop
arpl
popf
add
addr16
int3
cmp
lahf
lea
xchg
pop
lcall
pop
in
or
cmp
cmp
lods
inc
and
testl
pop
stos
push
das
adc
shlb
out
dec
shll
sti
push
daa
fsubr
pop
sbb
sub
push
stos
lods
mov
pop
xchg
stc
fnstcw
jns
add
xor
fs
xor
sub
outsb
int
jae
push
cli
in
mov
pop
rcl
mov
lahf
lahf
inc
add
ds
in
lret
test
jo
xor
jae
hlt
cs
nop
push
aaa
js
stc
dec
stos
data16
cwtl
jp
fs
lret
xor
sahf
or
cmpsb
mov
scas
repnz
in
fs
inc
and
pop
pop
jnp
jno
mov
mov
dec
jg
daa
mov
jmp
fdivr
mov
dec
mov
repnz
fimull
cmp
ss
and
or
push
pop
lahf
xor
pusha
lods
push
push
sti
mov
insb
pushf
pop
jbe
cmp
bound
ret
inc
push
adc
rcrl
rorb
xchg
add
stos
repnz
call
into
lds
push
pop
movsb
xchg
js
push
popa
mov
and
stc
fs
shlb
jns
jecxz
jle
sub
mov
sub
xchg
sbb
ds
cmp
pop
mov
insl
mov
push
mov
mov
fsts
test
lods
cmp
fldz
in
and
mov
adc
jbe
arpl
mov
xchg
into
testb
idivb
in
imul
fwait
or
pop
scas
lea
imull
hlt
lods
mov
cmp
arpl
pop
lahf
imul
imul
jne
add
inc
dec
xor
mov
imul
loopne
in
insl
xchg
inc
sbb
inc
pushf
test
lret
jge
add
xchg
fs
jmp
lret
dec
adc
imul
push
out
sub
cmp
cld
mov
jo
xor
pop
sbb
jp
fwait
int3
lock
push
push
push
ss
sbb
repnz
stos
add
cmp
cli
std
lret
jbe
fsubrp
cmp
rcl
mov
das
stc
sub
adc
repnz
mov
subb
or
aam
jmp
inc
and
sbb
xor
fidivrs
stos
adc
adc
cwtl
int
fs
xchg
filds
clc
out
repz
sub
pop
jns
adcl
xor
dec
stos
movsl
loope
push
pop
jle
test
test
inc
hlt
shll
ficomps
mov
sbb
jno
icebp
mov
push
mov
fisubrl
adc
rolb
or
cmp
jle
mov
call
push
mov
adc
cmp
or
cli
imull
imul
dec
cli
xchg
sbb
and
mov
cwtl
fistpl
dec
icebp
xor
or
dec
dec
fwait
in
leave
repz
loopne
lret
rcl
jne
test
adc
mov
dec
jecxz
add
testb
pop
scas
mov
push
xchg
or
cmp
lock
pop
aas
int
mov
mov
loope
dec
and
sbb
call
dec
in
add
adc
jb
in
dec
pop
xchg
mov
pop
loopne
dec
int
out
dec
xchg
dec
je
or
jle
clc
adc
ds
jg
pop
jle
pop
mov
jecxz
sbb
outsb
mov
mov
in
cmp
shlb
adc
push
insb
arpl
fldl
fdivrl
jns
pop
push
pop
push
push
dec
fsubrs
fs
icebp
adc
mov
xor
add
xor
popa
imul
out
jle
sahf
loop
in
das
lds
inc
mov
stos
xor
jae
or
pusha
push
insl
pshufw
mov
or
xor
mov
dec
mov
out
adc
pop
dec
jns
movsb
in
pusha
pop
jnp
xor
aas
inc
sub
push
addl
cmc
dec
pop
xchg
jne
cli
iret
lds
xor
aas
incl
movsl
mov
clc
and
push
rolb
cltd
std
cwtl
cmp
mov
push
mov
push
mov
jmp
imul
scas
stos
mov
mov
aaa
out
sub
lock
dec
jp
pop
xchg
pushf
das
mov
lret
pop
mov
sbb
lahf
pop
hlt
cld
shl
inc
mov
clc
jno
rolb
inc
cmpsb
pop
out
int
cld
cmp
rcll
mov
aaa
mov
rorb
in
jp
stos
sbbb
and
lea
xchg
loopne
ja
xchg
idivw
in
adc
rcl
cmpsl
in
sahf
fsub
pop
fldcw
ljmp
jae
xor
add
xchg
cmc
add
add
addr16
iret
xchg
cmpsb
pop
jg
imul
mov
push
xchg
insb
stos
inc
or
jle
popf
lea
iret
icebp
ljmp
push
negl
xlat
shll
enter
push
aaa
and
adc
test
adc
cmp
mov
jno
icebp
cli
shrb
fimuls
ja
cmp
imul
arpl
and
enter
mov
incl
adc
mov
enter
sbb
xor
xor
xchg
xchg
xchg
mov
in
sbb
mov
jb
adc
repz
dec
lds
dec
or
sbb
push
pop
loopne
mov
ret
xchg
xor
mov
cwtl
stos
sub
jb
fcompl
sub
adc
cld
loope
mov
jge
lret
add
fsubs
mov
lock
out
pushf
sub
rorl
jle
loopne
in
sbb
pop
pop
cmc
arpl
lock
cli
jmp
xor
jne
push
ret
ret
rcl
into
inc
inc
imul
mov
inc
arpl
cmp
sbb
repz
lods
aaa
rclb
pop
inc
jp
packuswb
dec
out
dec
lds
out
adc
test
movsl
int
add
ret
xlat
push
mov
add
mov
sahf
mov
jmp
call
pop
adc
xchg
movsb
ret
shr
xor
dec
int3
mov
stos
fistpl
add
mov
xlat
scas
lods
mov
ljmp
cs
in
hlt
dec
test
dec
add
and
adc
leave
adc
addr16
fwait
pop
divb
mov
push
lea
insb
add
xor
adc
dec
pop
stos
cmc
add
lret
xchg
stos
mov
xchg
lcall
mov
sub
and
cmp
lods
push
orb
jg
jo
icebp
lcall
scas
rorb
std
test
dec
loop
xor
and
iret
xchg
xlat
pusha
xchg
and
out
popa
pusha
mov
shl
int
inc
out
cmp
adc
dec
ret
mov
jg
ljmp
adc
in
lret
in
inc
lcall
loope
xchg
adc
mov
cmpsl
and
xor
mov
adc
call
adc
mov
cli
dec
inc
xor
dec
insb
mov
clc
int
dec
dec
mov
add
jne
call
xchg
cld
cmp
jns
call
mov
jbe
sahf
rolb
outsl
bound
mov
dec
xchg
movsb
xchg
test
popf
in
inc
loopne
in
scas
mov
sbb
sti
ficoms
out
icebp
or
jmp
lock
js
stc
outsb
lret
sbb
mov
sbb
or
pop
cmpsl
mov
and
pop
das
std
in
jae
ret
mov
and
xchg
lret
les
loopne
test
add
mov
mov
xor
aas
mov
imul
and
mov
pop
ljmp
adc
add
mov
ret
sub
int
jl
out
stos
dec
cmp
int
lahf
mov
mov
xor
stc
xchg
pop
mov
aad
dec
je,pn
jns
cli
pop
sahf
or
xchg
mov
int
daa
cmpsb
pop
shrb
div
mov
popf
sub
or
dec
push
repz
es
stos
shlb
dec
pop
mov
mov
cmpsl
cmpsl
and
push
jo
jb
dec
paddd
sbbb
outsl
bound
mov
xor
push
mov
mov
mov
or
jp
xor
or
shll
sbb
push
sar
mov
jb
scas
jp
aaa
push
lods
inc
xchg
movsl
scas
or
mov
sbb
pop
jbe
or
or
xchg
mov
stos
pop
mov
iret
insl
es
xor
lods
sub
jle
mov
mov
mov
movsl
fildll
in
fbstp
loop
loope
push
loop
or
mov
pop
pushf
mov
in
lods
mov
adc
dec
adc
or
and
ds
adc
lds
das
js
shlb
addr16
and
and
imul
das
stos
mov
mov
jbe
adc
dec
ja
cmpsb
in
std
loope
repnz
mov
int3
je
mov
bound
insb
mov
or
adc
nop
test
cmp
mov
mov
in
ja
add
or
mov
out
daa
icebp
pop
mov
adc
sbb
add
sub
sub
lret
aad
pop
jp
shlb
xchg
push
adc
push
aaa
adc
mov
pop
loop
insb
push
lea
cmp
lods
test
jle
jne
imul
xor
dec
ja
dec
dec
fwait
rcr
out
ja
jb
imul
adc
jg
push
ret
push
mov
out
mov
mov
mov
fcomps
insb
mov
cmp
insb
mov
mov
mov
ja
rcr
repz
sub
pop
mov
test
mov
mov
scas
push
loopne
jmp
imulb
push
adc
sbb
stos
out
push
scas
sbb
mov
pusha
mov
in
sub
add
xchg
push
imul
enter
jno
mov
imul
sbbb
add
mov
mov
ror
das
xchg
pop
ja
repz
fadd
test
stos
mov
lods
xchg
fadds
lcall
fimull
and
xchg
mov
popf
fildl
es
mov
ret
xchg
or
xchg
pop
push
jmp
aaa
add
fnstenv
outsb
pop
add
stos
cli
jecxz
clc
mov
pop
mov
push
ja
mov
xor
inc
inc
sbb
and
daa
xorb
push
inc
xlat
inc
test
mov
sbb
add
jle
pop
orl
mov
mov
adc
jae
mov
adc
xchg
aad
xor
pop
cltd
sbb
cmpsb
add
xor
lock
xchg
lods
or
test
dec
js
xor
or
shlb
cmp
sarb
xchg
sti
xchg
test
flds
pop
adc
jl
scas
stc
dec
sti
xor
in
ds
fs
stc
lds
cld
lret
outsb
and
or
cmpsb
mov
xchg
sarb
inc
push
cmpsb
aaa
cli
out
push
and
sbb
push
outsl
jae
sahf
pusha
test
rclb
xor
mov
pop
fwait
addr16
int
out
lret
mov
push
cmpsb
mov
repz
outsb
pop
arpl
xor
jne
push
lahf
fbstp
pop
push
scas
mov
push
jg
orb
fucom
xchg
pusha
imul
dec
xlat
jg
xchg
shrb
test
rcrl
sub
or
xor
adc
pushf
sub
fwait
es
movsb
or
cmp
cmove
xchg
mov
push
or
sub
jecxz
daa
and
cltd
cmpb
testb
add
pop
adc
in
mull
insb
or
fsubrs
lea
push
pop
cmp
push
outsl
add
pop
xchg
gs
dec
jp
jmp
sub
scas
rcl
jnp
in
movsl
dec
jnp
pop
add
shll
sbb
insl
lock
fistpl
leave
stos
outsl
xlat
pop
fcompl
int
jp
daa
lret
cmp
or
imul
imul
pop
jne
repnz
sub
xchg
lahf
mov
pop
pop
inc
or
pop
sub
xorb
mov
int3
sbb
leave
fldl2t
add
inc
xchg
insl
adc
adc
adc
jmp
sahf
push
xchg
pop
outsl
push
shlb
lods
cli
cltd
std
outsl
xchg
and
imul
arpl
lcall
push
adc
add
idiv
fcoms
loope
aam
cli
test
out
add
movsl
loopne
fdiv
push
aaa
lods
add
loopne
mov
outsl
xchg
cmp
fwait
push
mov
xchg
jge
iret
lret
mov
iret
xchg
sub
shll
and
call
mov
cld
es
fcmovnu
fisttpll
sub
es
mov
out
mov
push
mov
mov
stc
clc
into
adc
sub
sbb
push
inc
mov
lods
xchg
dec
out
lods
ret
lret
inc
popa
nop
mov
pop
pop
cltd
gs
pop
adcb
nop
lret
xor
lds
mov
add
push
scas
pop
jo
add
mov
or
mov
mov
adc
int
xlat
or
mov
dec
xor
cmp
pop
addr16
icebp
mov
add
add
xor
daa
jecxz
xor
cmp
dec
dec
sbbb
mov
cmp
pop
and
stc
shlb
xchg
ror
fchs
fwait
mov
jg
sub
mov
jbe
js
test
cmp
push
imul
jl
push
aas
mov
dec
jl
cs
arpl
sub
push
xor
imull
outsl
mov
add
scas
pusha
sub
insl
imulb
add
cmp
insl
cmpl
cmp
dec
decb
inc
push
or
popa
test
inc
mov
rcl
clc
mov
jg
ljmp
mov
xchg
cmp
mov
pop
adc
jo
in
testl
or
xor
dec
out
push
jl
mov
ret
push
and
adc
cmpsl
xor
xor
ret
inc
lock
push
sbb
adc
das
adc
mov
fdivp
addr16
xchg
frstor
jno
mov
data16
movsb
adcl
out
xchg
sbb
outsl
aad
mov
jne
or
add
out
pushf
inc
outsl
lcall
adc
cld
sub
and
cmp
scas
adc
test
cmp
and
sbb
pop
inc
lds
xchg
faddl
xchg
out
daa
jmp
outsb
lret
dec
sbb
dec
xor
push
daa
pop
es
adc
mov
mov
clc
inc
push
bswap
dec
stos
idiv
fwait
test
fstp
sub
xor
das
jge
insb
sub
out
pop
repnz
test
sub
out
flds
clc
in
pushf
lock
cltd
clc
hlt
es
orl
loopne
fcmovnbe
aaa
aad
jae
out
cmp
or
push
loop
push
std
xor
mov
cld
inc
xor
ds
fldenv
pop
xchg
pop
dec
stos
xor
pop
mov
fs
lds
ja
aam
in
jge
push
mov
pop
daa
dec
mov
ds
jbe
bound
fstl
pop
or
clc
add
gs
pop
scas
fnsave
fsubp
jp
cmp
insl
or
xorl
pushw
enter
xchg
xor
cltd
rep
jo
xchg
push
or
idivl
sbb
xor
enter
cltd
in
je
xchg
sbb
fadds
and
popa
sub
fildll
insl
and
or
xchg
sub
pusha
shl
push
sub
inc
out
xchg
cwtl
sbb
in
ss
cmp
jne
loopne
mov
adc
movsl
push
dec
dec
jbe
cmp
inc
popf
cmpsb
xadd
movsl
xchg
rol
lcall
dec
xchg
inc
ljmp
stos
dec
inc
xchg
push
push
cld
test
iret
xor
mov
mov
iret
cltd
imul
in
aas
shl
push
pop
push
push
push
aad
ss
scas
xchg
mov
dec
lds
lahf
cwtl
sarb
loop
ss
xchg
jge
je
sub
push
test
clc
aad
fs
xor
cmp
movsl
xchg
mov
jne
pop
movsb
fstpt
cmpsb
lahf
iret
adc
mov
xchg
pop
lea
mov
mov
adc
roll
subl
mov
mov
adc
test
in
stos
mov
push
jbe
fwait
jne
pop
pop
cmc
cmp
lds
adc
mov
mov
sbb
xlat
fs
ficoms
loope
jmp
pusha
xchg
adcb
loope
enter
cmp
mov
shll
mov
and
mov
cmp
rclb
cmp
or
and
xchg
mov
or
xor
add
in
ja
cs
mov
push
xor
in
out
scas
jno
or
mov
adc
stos
push
sub
dec
fidivs
outsb
insl
lret
arpl
cli
iret
fsubp
xor
aam
sub
xor
inc
adc
mov
insl
lods
xchg
jne
imul
xchg
dec
or
inc
mov
xor
fucom
movsb
add
xchg
arpl
dec
cld
and
lods
adc
sbb
fcomps
push
sub
cli
roll
dec
add
xor
jb
adc
inc
popf
mov
sub
hlt
clc
es
fstl
push
sub
loop
dec
movsb
pop
sahf
das
enter
out
testl
mov
cmp
stos
fsubl
push
mov
cltd
mov
or
js
out
inc
incb
daa
adc
mov
pop
sbb
jecxz
jl
jmp
xchg
repnz
pop
jns
and
je
jbe
dec
les
in
push
test
fcompl
mov
fcmovb
pop
mov
outsb
sbb
fwait
movsl
lcall
jnp
inc
int
xor
iret
sti
push
mov
jb
cli
pop
call
mov
xchg
jmp
je
mov
push
aas
jle
mov
mov
repz
imul
sbb
outsl
insl
imul
mov
enter
daa
jl
push
mov
ret
rcl
xor
imul
xchg
std
lcall
or
movnti
idivb
scas
popl
stos
aam
mov
fisttpll
push
inc
dec
dec
dec
cld
lods
jle
jae
nop
pop
mov
jecxz
inc
pop
mov
shll
dec
popf
mov
sbb
scas
jbe
mov
adc
lods
lcall
mov
repz
xchg
dec
cltd
aam
xor
xchg
push
ljmp
inc
fsubl
xchg
cld
mov
mov
movsl
cltd
fdivr
mov
sub
mov
sub
pop
fldl
dec
xchg
mov
and
test
es
out
cmp
jae
ficompl
es
loope
ljmp
cld
or
sub
xchg
aad
cli
or
inc
popf
mov
sub
mov
jg
lods
loopne
jae
aas
loop
js
jne
fidivs
pop
adc
sbb
sbb
xchg
lock
jmp
push
cmc
lods
dec
mov
or
cmpsl
div
fcmovnbe
pop
lret
sbb
lret
mov
dec
shlb
shrl
sbb
repz
cmc
push
dec
jbe
cmp
mov
sbb
lahf
push
fs
das
inc
mov
lret
inc
insl
mov
xor
ljmp
mov
jp
je
sbb
xchg
shll
and
popf
add
loopne
imull
sub
mov
pop
insl
adc
nop
sti
mov
or
data16
rclb
insb
scas
jmp
ja
fsubrl
adc
dec
adc
lret
inc
scas
xchg
testb
add
outsb
popl
dec
mov
jae
add
and
jecxz
xchg
jbe
outsl
fildll
mov
push
rep
dec
lcall
mov
call
and
addr16
mov
pushf
pop
fidivrs
mov
rcr
loopne
stc
repz
mov
stos
pop
imul
popf
imul
int
sub
add
xor
test
xchg
mov
mov
sub
mov
out
push
xor
out
mov
pop
icebp
mov
je
rcll
or
repnz
inc
and
xchg
sbb
sub
daa
mov
xor
dec
pop
mov
or
out
in
in
mov
inc
aam
ret
add
or
cs
push
cmp
mov
mov
stc
mov
mov
push
cmp
xor
inc
lret
js
imul
mov
or
dec
test
aam
xchg
mov
fnstcw
into
push
int3
adcb
lods
add
pop
push
lret
pop
xchg
jo
jnp
data16
popf
dec
mov
jp
inc
mov
jns
mov
enter
and
cwtl
mov
sub
cmp
cmc
and
test
mov
add
jge
push
cli
loope
cmpsl
cmp
sbb
jns
cmp
icebp
stos
cmp
adc
inc
pop
clc
jo
cmp
adc
jae
outsl
loop
loopne
jl
jg
aas
add
cmp
jp
pop
adc
cmp
fisubrl
js
leave
mov
pop
int
outsl
mov
test
clc
push
pop
mov
mov
dec
mov
imul
leave
jb
sub
jne
leave
insb
xor
xor
stos
push
push
dec
popa
or
in
sti
mov
dec
jge
movsl
xor
les
inc
xchg
adc
out
fdivs
es
cmpsb
lret
in
push
add
leave
mov
jp
add
aam
push
repz
add
mov
int
sarl
movsl
lds
sub
xchg
jns
jae
push
ljmp
mov
lods
int3
and
mov
push
in
orl
inc
mov
sub
js
sbb
push
pop
fwait
xor
ficoml
jb
and
call
xlat
fwait
pop
jp
sahf
pop
ds
les
scas
fidivl
adc
addr16
ds
fucomi
and
jmp
and
shlb
push
jmp
pop
sub
lea
andb
pusha
stos
add
pop
aam
daa
js
adc
insb
call
lret
sti
mov
test
cmp
daa
push
jmp
and
aad
jl
lea
pusha
xchg
cs
push
sbb
stos
mul
cs
jb
or
in
inc
testl
and
cmp
cmpsl
inc
cmp
dec
or
jp
and
leave
lods
dec
fmuls
mov
sti
out
into
and
mov
test
mov
inc
add
add
jae
mov
cmp
xchg
mov
movsb
les
stc
outsb
popa
cwtl
push
popf
adc
adc
adc
repz
mov
mov
aad
mov
addr16
adc
or
movl
add
mov
push
fnsetpm(287
inc
fmull
push
imul
cmp
sub
in
scas
je
sub
dec
mov
push
ljmpw
std
ds
int
add
sub
andb
inc
in
cmp
les
xchg
aam
popa
int
mov
lods
lods
loop
pop
out
test
shl
shrd
push
js
sub
mov
outsb
lret
cs
fwait
add
rorl
pusha
adc
cmp
jg
test
push
mov
movb
stos
jae
push
push
push
xor
sbb
and
push
rolb
ja
push
or
jnp
subl
mov
outsb
xchg
subl
daa
jmp
filds
imul
stos
sbb
cwtl
push
push
push
pop
out
repz
addb
mov
add
xor
stc
jne
add
addr16
push
pop
adc
cli
and
nop
mov
sub
jle
xchg
dec
or
bnd
les
es
pop
mov
movsb
insl
sbb
arpl
aaa
and
cmp
or
popa
xchg
lds
sub
push
arpl
jae
adc
push
inc
into
lods
or
mov
nop
scas
sarb
xorl
gs
or
ret
push
mov
ret
out
xlat
pusha
inc
jbe
ljmp
pop
out
mov
shr
jnp
push
fsts
call
jmp
in
push
subb
mov
adc
sub
xor
aad
insb
push
dec
adc
push
sbb
lret
popf
mov
int
fmul
or
out
inc
xlat
xchg
cmpsb
sahf
jns
int
insb
jnp
jno
fmuls
outsl
push
adc
incb
test
xor
dec
sti
lret
orb
shlb
ljmp
lea
jbe
jne
jne
xor
jecxz
enter
sub
jb
nop
push
xor
mov
or
aad
fadds
andl
push
jmp
lcall
sbbl
adc
dec
mov
jmp
xchg
pusha
fisttps
cmpsl
cmp
lds
arpl
or
inc
push
inc
push
js
mov
push
call
sahf
adc
sbbl
xlat
push
testl
add
push
out
in
enter
fisttpl
inc
cmp
lods
das
adc
out
ljmp
push
in
shl
rorb
stc
cmp
jl
aas
xchg
xchg
xchg
loop
pop
ljmp
inc
mov
aaa
dec
cmp
in
orb
pop
orl
xchg
cld
rcll
pop
aaa
add
push
or
data16
add
push
cs
push
and
push
mov
xchg
push
inc
jl
xchg
int3
mov
mov
test
adcl
cs
call
rorl
cmpsb
cld
xor
xor
fldcw
stc
sti
lahf
insl
and
cmp
sbbl
lcall
insl
sub
sub
mov
shll
dec
pop
adc
dec
jo
dec
lods
int
shlb
cmp
pop
fistpl
push
insb
mov
pop
xchg
xor
adc
lea
sbb
xchg
shrl
mov
and
filds
lret
mov
mov
or
xchg
inc
cld
call
jnp
gs
insl
sbb
inc
sub
mov
fistpl
dec
fadds
jle
aas
js
inc
cmp
mov
mov
sbb
mov
xchg
push
dec
cld
jns
push
in
sbb
or
arpl
push
mov
insl
adc
jne
dec
push
shlb
mov
in
cmp
pop
arpl
aad
cmp
aaa
pop
pop
push
fbld
rorl
mov
xchg
mov
popa
outsl
repnz
xchg
pop
add
rcll
mov
adc
and
dec
clc
addb
jo
dec
stos
xor
mov
pushf
push
test
adc
jge
popf
sub
xor
cmp
mov
stos
icebp
pop
mov
rcll
xchg
std
add
ljmp
inc
es
incb
outsb
inc
jmp
push
and
sbb
or
push
popf
ljmp
pop
out
adc
das
add
lods
std
scas
ror
stos
push
xor
cmp
jnp
push
cmpsb
repz
and
dec
adc
add
xor
fnstcw
push
roll
rclb
mov
jle
ja
pop
push
mov
xor
loope
scas
push
ljmp
sahf
in
sub
pop
fdivrl
mov
sbb
addr16
pop
xor
cmp
es
int3
mov
pop
inc
lret
push
ss
ljmp
nop
lods
mov
push
cmc
xor
repz
xchg
daa
sub
es
outsl
mov
fcmovb
xlat
das
push
test
push
insl
addr16
mov
and
ds
mov
pop
mov
jge
and
adcb
xchg
ljmp
sub
jl
sbb
dec
xlat
scas
popf
ret
cs
or
mov
inc
cmp
push
jl
sbb
out
or
mov
jbe
push
lods
jbe
lds
dec
loope
push
cmp
loope
xor
cmc
mov
cwtl
jecxz
jne
cmp
jmp
pshufw
mov
xchg
and
inc
jns
push
cmp
movsl
pushl
jmp
cs
ret
mov
es
leave
and
dec
scas
popa
fs
mov
cs
mov
lret
ror
ja
push
sbb
xchg
xchg
sysenter
fld1
push
sub
mov
cmp
fisubs
pop
out
test
fmuls
pop
mov
pop
push
imul
cs
inc
and
repz
xlat
pop
cltd
or
test
mov
jg
mov
inc
mov
and
addl
cwtl
loop
rclb
mov
mov
lahf
lret
jns
xchg
adc
inc
mov
sbb
sbb
xor
iret
cs
sbbb
lea
imul
mov
addr16
ret
inc
cmp
pop
cmp
out
jno
daa
outsb
jge
pop
jo
add
xchg
or
addr16
xlat
xchg
cmp
push
mov
iret
jle
out
cmc
iret
cmpb
jbe
sbb
or
dec
xor
jmp
outsl
insb
and
dec
adc
push
sub
cld
rsm
inc
lret
mov
movsb
lock
pusha
jg
clc
mov
dec
mov
or
jmp
jp
ds
lcall
test
pop
mov
outsl
fidivrs
push
inc
stos
sub
mov
insl
pop
push
pop
adc
push
jae
mov
stc
orb
sub
xor
aaa
push
clc
sbb
push
jae
mov
movsb
dec
xor
adc
pop
in
loopne
push
hlt
jb
fs
and
mov
js
lods
int
rorb
mov
xchg
cmc
pop
out
jle
and
push
clc
mov
mov
xchg
das
rcll
int3
out
mov
and
cmp
mov
mov
or
movsb
xchg
mov
mov
lahf
pushf
popa
repnz
jmp
xchg
cmp
ljmp
movsb
mov
cmp
jae
sti
cli
stos
xchg
jae
mov
add
inc
add
subb
ja
mov
pop
dec
mov
aad
xchg
or
repz
repnz
sub
scas
imul
sti
adc
loope
in
jbe
pop
or
repnz
out
or
loopne
lahf
loop
mov
hlt
mov
je
mov
push
movsb
into
cmpsb
ret
repz
sub
faddl
outsl
movl
sub
pusha
pushf
adc
inc
pop
inc
add
pop
push
mov
xor
push
jb
jmp
sub
cmpsb
xchg
ret
outsb
imul
repz
sub
xor
test
jb
sbb
nop
loop
or
adc
lds
jb
movsb
shr
dec
push
call
jb,pn
cmpl
hlt
std
mov
sub
outsb
aaa
inc
jg
xor
push
jmp
fldl
je
addr16
push
mov
jo
xchg
lahf
xchg
add
pop
fwait
and
aaa
cltd
push
leave
jle
lret
int3
test
cmpl
dec
mov
cltd
mov
popf
andl
aam
std
mov
or
int
dec
sub
and
or
sbb
mov
rol
mov
push
clc
pop
jb
adc
leave
jle
into
cmp
aaa
xchg
in
std
inc
xchg
inc
insb
mov
bound
sbb
push
dec
or
in
popf
sahf
fistpll
cltd
lea
adc
in
jae
mov
dec
push
pop
paddusb
inc
pushf
lahf
frstor
adc
sarb
insb
mov
stos
pop
test
adc
mul
aaa
dec
nop
add
test
sbb
pop
inc
dec
push
movsl
lret
push
ficompl
and
sub
xchg
push
mov
sbbb
out
or
fimull
xor
iret
jb
ret
mov
jb
enter
sub
sub
inc
inc
sub
fs
xor
inc
add
dec
mov
rcl
repz
mov
sbb
xor
cwtl
mov
lods
adc
jg
mov
mov
int
lods
inc
loope
pop
pop
cmp
cmp
mov
out
std
adc
xchg
test
int3
jp
lahf
ret
ret
ljmp
mov
sbb
outsb
jle
cld
rolb
int
mov
pusha
lods
jnp
fists
jle
dec
or
sbb
mov
jb
clc
jp
outsl
adc
lret
xchg
inc
pop
push
sarb
mov
sarb
add
cmp
jae
cs
push
test
pop
imul
mov
push
repz
push
ret
jae
jae
inc
pop
lea
fidivs
mov
push
xchg
fadds
mov
inc
test
scas
dec
jbe
out
and
jg
sub
divw
inc
cmp
xchg
pop
xlat
push
cmp
adc
push
adc
adc
pop
mov
jne
pop
fsubrs
cltd
add
in
out
es
out
xchg
mov
xor
fcomps
xchg
lds
out
addr16
dec
push
jmp
jg,pn
dec
mov
mov
jecxz
push
scas
imul
sbb
repz
add
add
bound
call
pop
cli
les
in
mov
stos
add
sahf
repnz
and
fidivl
out
mov
sub
adc
push
test
aaa
pop
andl
or
pop
pop
loop
scas
sahf
pop
xchg
push
sar
aas
out
lret
pop
repz
dec
adc
cmp
mov
in
mov
inc
fbstp
addb
scas
lds
xor
cltd
stos
jmp
lds
call
inc
push
sub
mov
jmp
adc
cmp
bound
sbb
xchg
push
dec
push
adc
insl
dec
setp
inc
cmc
mov
pop
imul
pop
sub
insl
mov
mov
sbb
inc
lret
lcall
ds
and
sbb
inc
std
outsl
adc
out
pop
addr16
dec
cmc
pop
cmp
sub
jp
cs
and
inc
mov
or
mov
sub
sbb
push
test
stc
xchg
je
adc
cmp
das
cmp
outsl
into
arpl
adc
cltd
mov
adc
pop
fsubp
push
jle
mov
cmp
and
gs
push
divl
lods
cmp
adc
or
sub
stc
or
roll
jecxz
add
cli
test
stos
lock
outsl
jl
inc
jmp
outsb
test
sbb
lret
mov
xchg
into
test
dec
popa
pop
jnp
pop
mov
je
call
sahf
push
mov
cld
out
ret
push
add
and
adc
push
push
push
pop
das
jmp
adc
or
arpl
and
mov
add
mov
lods
add
in
je
sub
lret
cld
xor
adc
cld
mov
dec
xor
xchg
cli
sti
xor
imul
popa
clc
les
push
popf
sahf
dec
repz
clc
aas
mov
cmp
lret
sbb
dec
arpl
call
pop
xor
sarw
call
pop
mov
les
inc
xor
cmp
inc
jp
sbb
or
cmp
fs
pavgw
or
xor
xchg
pop
jbe
push
rorl
and
jbe
mov
and
clc
lret
dec
mov
popa
sahf
mov
and
mov
lods
jg
jl
jno
int3
imul
ss
testl
lods
or
pop
mov
pmaxub
mov
push
std
and
stos
sub
aam
popa
sbb
sub
mov
pop
cld
or
fnstcw
les
stos
sbb
les
cltd
pop
adc
push
adc
inc
push
movsb
hlt
inc
add
or
shrb
testb
rorl
iret
mov
push
jae
mov
and
ss
lcall
cmp
and
jmp
push
pusha
pop
outsl
fwait
mov
pop
xlat
std
dec
add
sti
cli
ret
pop
cmp
popa
sbb
lcall
cmp
mov
xchg
sti
ss
push
push
fwait
xchg
cmp
outsl
lret
xchg
adc
aas
rcr
addr16
cmpsb
fdivl
dec
xchg
and
sub
mov
jne
data16
xlat
sbb
cld
dec
adc
rorl
loope
mov
lea
decl
cmp
dec
loop
bound
dec
repnz
scas
outsb
test
jbe
loopne
dec
cmp
mov
xchg
cmp
mov
xor
lcall
lret
dec
pop
cmpsl
aaa
sub
mov
xchg
icebp
out
mov
je
or
lahf
jp
pusha
fisubrs
mov
cmpsb
mov
add
jecxz
mov
test
call
popa
mov
xor
daa
push
xchg
cmc
sbb
mov
xchg
xor
push
xchg
jnp
pushl
stos
dec
sub
lcall
testl
fxch
xor
sub
lcall
mov
push
fwait
cs
test
cmpl
cmp
sti
fadds
leave
jno
cli
cli
inc
bndstx
mov
jecxz
mov
scas
adc
xchg
jb
sahf
into
mov
repz
pop
ret
nop
incl
mov
adc
icebp
inc
mov
xchg
push
push
fwait
enter
cmp
adc
test
sbb
gs
arpl
cmpsl
and
sbb
test
adc
fs
enter
cmp
adc
sbb
out
sub
ss
pop
jns
adc
insl
mov
or
imul
and
mov
mov
mov
mov
dec
ljmp
in
add
dec
xor
movsb
mov
sub
jae
aad
rolb
incb
or
rol
jg
shlb
test
mov
xchg
test
mov
lds
in
vpinsrw
ds
xlat
dec
sbb
adc
aaa
pop
out
ss
fwait
xchg
sti
sbb
cmc
clc
sti
jne
notl
cmpb
push
lcall
jb
int3
ret
and
testb
sbb
or
ficomps
fiaddl
jl
lret
and
pop
fidivs
inc
push
shr
lcall
jg
pop
roll
xor
jg
aas
hlt
sbb
mov
in
jmp
sub
push
cmp
jmp
ljmp
sahf
in
sbb
fucomi
dec
xchg
in
int
push
jb
jle
fs
jmp
xchg
loopne
inc
jno
jnp
popf
cmpsl
mov
in
shl
daa
cmp
cmp
fsubrl
fwait
cli
xchg
mov
and
pop
jp
cltd
jb
sti
notl
shll
sti
scas
ds
cs
loop
xchg
sbb
or
lahf
push
cmp
shrl
xchg
rcrl
push
fidivl
jecxz
mov
xlat
stos
lea
jmp
push
jno
repnz
sub
and
add
mov
push
pop
mov
pop
and
sti
popa
dec
pop
mov
mov
push
stos
repz
call
addr16
in
insl
mov
cmp
pop
aaa
insb
loopne
sub
stos
dec
sub
add
cmp
xlat
icebp
xor
aam
shlb
sbbb
int3
add
leave
inc
mov
fdivl
dec
cmpsl
dec
loope
pop
mov
pop
jnp
xchg
nop
faddl
daa
in
push
out
xchg
xchg
xor
mov
cmc
pop
dec
inc
xor
pop
lods
imul
loopne
pop
sub
mov
fadd
push
js
jg
or
or
dec
loop
negl
mov
imul
cmc
mov
add
push
scas
mov
rorb
fiadds
inc
jb
inc
mov
ds
sahf
addl
andl
fwait
add
or
test
or
fs
add
pop
jnp
dec
fsubl
mov
push
xor
add
cmpsl
fidivrs
adc
mov
scas
jg
arpl
mov
adcb
gs
loopne
ljmp
sarb
add
sub
or
sarb
cmp
xchg
jp
sbb
stos
movsb
mov
cmpsl
daa
in
andb
and
or
shrb
enter
or
mov
xchg
push
and
scas
xchg
rcrb
add
loop
sbb
jo
jo
lret
mov
call
or
jno
andl
mov
cltd
pop
cmp
outsl
andb
in
dec
jns
bound
aam
dec
dec
or
dec
mov
shrb
jle
sbb
jg
sti
inc
push
insb
xor
call
enter
lret
cltd
push
pop
push
pop
jle
mov
adc
mov
and
popf
mov
push
lods
call
or
mov
call
sarb
pop
pop
rcll
and
and
out
cmpsb
scas
scas
cwtl
insl
ss
movsl
scas
mov
hlt
out
fwait
push
sub
mov
xlat
and
loope
aam
insl
aad
repz
or
cmp
adcl
push
call
and
pop
in
addl
popf
xor
je
ljmp
cmp
push
dec
bound
pop
jb
shrl
or
and
push
adc
lock
outsb
mov
mov
icebp
or
stos
pop
pop
ljmp
jne
lock
hlt
jae
cltd
fnstcw
or
mov
mov
sahf
mov
fidivrl
xchg
popa
ret
pushf
mov
mov
addb
clc
sub
sub
sbb
adc
addr16
mov
sbb
pusha
mov
aad
mov
pop
test
mov
xor
pop
and
mov
and
iret
mov
fbld
adc
int
scas
adc
repz
mull
push
aad
gs
xchg
xchg
mov
jae
jl
ret
push
in
or
xchg
clc
mov
jno
test
pop
pop
in
scas
mov
mov
in
test
mov
xchg
sbbl
cld
or
inc
insl
add
aaa
shrb
xchg
jle
rcll
shrl
in
or
add
inc
lods
inc
shll
movsl
jno
lea
dec
mov
add
mov
insl
sub
sahf
lahf
and
push
lret
pcmpeqb
jge
je
icebp
mov
popf
xor
popa
js
repnz
push
in
pushl
ficoml
in
loope
out
jo
dec
insb
rorl
sub
int3
shrb
pop
mov
into
test
mov
aas
movl
stc
in
mov
push
push
and
adc
jb
out
mov
jge
add
inc
sub
psraw
pop
push
iret
loopne
ss
cmp
jmp
mov
or
fimuls
cmc
xor
sbb
push
push
sub
shlb
sub
dec
rcl
cmp
sahf
mov
loope
and
cmpsl
mov
xor
imul
fldenv
stos
push
mov
movsb
hlt
inc
dec
inc
xchg
test
hlt
mov
xchg
repnz
stc
fisttpl
shlb
and
fidivl
mov
inc
roll
sbbb
push
iret
mov
mov
test
pop
dec
aaa
pushf
sbb
jae
test
lods
cmp
xor
push
mov
cmpsb
mul
sub
mov
popf
xchg
sbb
inc
imul
out
or
scas
add
pop
fisubrl
dec
mov
and
push
stc
sbb
cmp
and
and
out
mov
fwait
lahf
insb
jecxz
jmp
mov
out
and
lea
push
mov
inc
cmp
ret
xor
mov
cmpsb
sub
mov
xor
shll
push
daa
pop
sub
xchg
dec
cmp
xchg
jb
inc
sbb
dec
cmp
push
scas
data16
call
mov
outsb
sarb
ljmp
arpl
mov
xor
jns
rep
mov
mov
jg
shlb
jbe
mov
push
cltd
iretw
inc
notb
popf
dec
xor
sub
mov
jo
mov
lret
sbb
cmc
mov
dec
sbbb
sbb
fdecstp
jnp
sbb
insb
xchg
xor
out
and
repz
subb
je
cmpsb
mov
mov
out
stc
lret
jns
mov
and
mov
enter
pop
fistl
nop
cmp
sub
jg
out
jae
in
cltd
negb
shl
inc
imul
jle
mov
ja
cmp
stos
mov
jl
dec
lcall
mov
xchg
outsb
sbb
add
jle
cmp
jg
icebp
rclb
rorb
xchg
loop
out
scas
leave
xchg
outsl
jbe
inc
adc
adc
xchg
out
cmp
incl
or
fwait
inc
dec
push
jp
shll
lcall
push
push
ficomps
jge
xchg
lret
add
leave
adc
or
lret
data16
sahf
mov
pop
cmpsb
fs
mov
rol
pop
add
js
push
sbb
pop
cmc
xchg
jle
mov
dec
sbbl
push
push
pop
insb
adc
pop
adc
lret
cmpsl
sahf
rcrl
sbb
and
adc
cmpsl
adc
repz
mov
xor
ljmp
cli
or
repz
mov
mov
addr16
cmp
and
cmp
mov
arpl
aas
test
mov
mov
jns
and
mov
cwtl
sub
xchg
push
fnstenv
or
dec
scas
jle
out
roll
outsb
xor
sbb
dec
in
push
pmaxsw
loopne
sub
pop
xchg
loop
cs
mov
jo
jecxz
js
cmp
xchg
jno
rol
hlt
cmpsl
rolb
mov
push
jg
jae
sub
std
cmp
je
jno
ret
insb
in
sbb
lret
mov
xor
mov
ficoml
data16
arpl
imul
data16
jb
adc
pop
xchg
sti
mov
mov
or
sub
aad
movsb
lock
push
cmp
mov
fadd
inc
cmp
pop
test
test
add
fidivl
js
data16
lret
mov
push
fidivrl
xor
jne
and
pop
sbbb
bound
dec
and
pop
shlb
rcll
xchg
test
js
jno
or
and
repz
jnp
sbb
int3
push
fnstenv
sub
xor
mov
cmp
adc
lods
das
adc
rolb
pop
insb
movsb
add
lock
int3
insl
cmp
sub
das
or
jbe
add
je
std
data16
push
imul
lods
cmpsl
loop
jns
dec
and
xchg
insb
in
adc
inc
xor
or
mov
xor
pusha
mov
xor
and
xor
pop
shrb
pop
sbb
popf
gs
mov
inc
jno
das
xchg
aad
das
cmp
xchg
lods
sub
sbb
in
push
nop
addr16
test
jb
xor
push
lock
dec
aad
insb
fisubl
xchg
pusha
lret
ja
test
xor
repz
enter
push
push
and
dec
and
in
or
testl
mov
loope
stc
dec
sub
ss
sub
pop
cs
xor
into
test
xchg
push
sti
addr16
push
orb
adc
xlat
aad
jnp
mov
icebp
dec
sub
xchg
adc
arpl
in
repz
cmp
call
aaa
pop
jnp
and
push
outsb
xchg
rorb
dec
movsl
stos
pop
jne
mov
push
push
stos
out
mov
test
xchg
jg
gs
push
xor
xchg
and
xlat
push
cmpsl
pop
rol
pop
in
jg
leave
fs
inc
cmp
es
xchg
bound
mov
push
std
in
int3
push
mov
jle
fstp
bound
aaa
pop
jle
dec
out
lods
stc
addb
mov
std
xchg
int
jo
test
out
sbb
in
test
push
in
or
mov
fisubrl
sbb
lret
scas
jmp
inc
mov
leave
pop
push
jp
xor
and
jae
sbb
push
pop
mov
xchg
sub
push
push
fstpl
adc
ds
mov
push
daa
inc
int3
ljmp
gs
lods
jnp
jno
jnp
cmp
add
pop
lret
outsb
lds
dec
pop
in
negl
decb
sahf
sbb
addb
out
pop
xchg
fistps
or
lods
es
push
xor
pusha
pop
mov
popf
adc
pop
xor
xchg
enter
push
out
fdivr
data16
mov
leave
icebp
adc
xchg
push
mov
pop
sub
pop
pop
cmp
push
xorl
lret
dec
xchg
xchg
je
jmp
inc
cmc
out
add
cmc
imull
push
pop
sbb
xor
mov
mov
shr
pop
out
stos
dec
jmp
movsb
xchg
jg
popa
sub
adc
adcb
test
jo
inc
jl
sub
jne
cmp
xchg
ljmp
icebp
cmp
insb
rcrb
or
popf
gs
lahf
inc
xchg
jp
mov
xorb
insb
jae
xor
push
call
jo
testb
in
cmp
clc
repnz
int3
iret
rcll
scas
add
insl
das
lods
adc
jl
andl
jb
inc
xchg
xor
loope
dec
inc
cmp
xlat
adc
dec
fmull
sub
adc
cmp
push
pop
ljmp
lcall
pop
lret
push
xchg
mov
mov
pop
sbb
gs
fimuls
out
dec
xchg
inc
cs
ljmp
arpl
scas
notb
cs
lahf
push
push
mov
inc
adc
or
jb
lds
imul
xor
or
xorb
popf
out
jmp
mov
test
or
dec
add
pop
inc
es
push
fucomip
add
cmp
jae
testb
cmp
add
mov
in
jge
inc
mov
daa
dec
and
xor
cmc
test
imul
pop
dec
pop
imul
scas
aad
mov
repz
and
mov
fnstenv
or
mov
testb
push
inc
fsubrl
add
or
push
push
mov
jb
mov
xchg
and
rolb
push
std
cmp
jge
inc
ret
cmp
cmc
iret
cmc
push
mov
enter
xchg
imul
add
cwtl
ffree
lock
sbb
dec
in
inc
pop
pop
cmpsb
stos
adc
adc
imul
arpl
inc
lret
mov
sarb
xor
xor
jnp
outsl
push
pop
daa
jge
push
sbb
mov
out
lret
ret
in
cmp
mov
pusha
mov
into
cmp
movsb
loopne
lahf
ljmp
lahf
xlat
jle
and
mov
fwait
fwait
lods
cmp
mov
sbb
lcall
inc
shrb
sbb
ljmp
push
fbld
cmpsl
test
es
adc
fwait
shlb
xlat
cmpsl
scas
fidivrl
shr
pop
sub
inc
add
loopne
jbe
test
mov
push
pop
pop
push
inc
jae
rcl
shr
addr16
jmp
cmp
mov
ljmp
or
loopne
jb
jp
sub
mov
adc
push
sarb
and
int3
jae
sub
fnstcw
scas
lret
adc
adc
fcoml
pop
xchg
stos
mov
push
in
nop
push
pop
lock
ret
mov
mov
ljmp
pop
xor
inc
js
mov
test
jne
fs
je
aad
pop
jge
cmpsl
hlt
bound
add
and
lods
push
xor
in
mov
sbb
sub
sbb
leave
dec
pop
insb
in
inc
in
into
dec
push
xchg
nop
dec
cli
mov
lods
mov
stos
and
push
stos
dec
fistps
in
mov
pop
outsl
repnz
xor
insl
into
xchg
push
jp
push
xchg
cmc
dec
fidivl
call
fnstsw
xor
mov
ficomps
shrb
mov
push
lret
xchg
push
in
js
adc
add
xchg
and
in
aad
and
lds
jecxz
xchg
mov
lret
xor
jnp
aas
pop
inc
sub
jecxz
push
jecxz
push
jle
mov
iret
adc
jecxz
mov
xor
jg
test
scas
mov
repz
sahf
add
xchg
sub
int3
and
or
or
mov
mov
jae
cmp
and
nop/reserved
mov
idivb
xor
orl
inc
adc
dec
cld
repz
std
in
mov
sub
add
xchg
data16
xor
dec
pop
repz
mov
adc
enter
std
shll
xlat
jnp
leave
and
jle
adc
pop
stc
cwtl
aas
pop
ds
mov
ret
sbb
mov
jno
xor
cmp
dec
mov
xchg
jge
xor
orb
fsubr
sub
js
sbb
mov
xchg
vpinsrw
ja
rol
shrb
divb
bound
test
aas
adc
in
xchg
shrl
or
cmp
cmp
out
dec
cmp
adc
es
or
pop
mov
lahf
xor
dec
sub
dec
xchg
or
cmp
dec
lret
out
inc
shl
ljmp
sarb
icebp
xor
pop
push
test
stos
je
jne
push
pushf
stos
xchg
ljmp
in
sub
in
aaa
xchg
scas
or
fdivrl
hlt
fisubs
movsl
ds
icebp
insb
aas
adc
addl
xchg
shrl
lock
cmpsb
je
in
or
jbe
xlat
or
mov
aad
js
jl
cmpsb
inc
js
jl
pop
rcll
into
mov
jp
jbe
xor
addr16
test
outsb
cwtl
test
inc
xchg
arpl
imul
pop
sub
push
pop
mov
ss
dec
mov
out
outsl
cmpsb
in
lcall
push
arpl
push
outsb
sti
fsubr
std
push
push
add
inc
jns
call
jb
fistpl
push
pop
inc
jno
mov
add
mov
imull
pop
mov
push
outsl
fs
cmpsl
and
lret
push
shlb
sub
hlt
sbb
sub
sahf
xor
in
in
into
jg
cli
popf
cli
pop
sbb
xor
mov
push
cmp
ja
in
adc
sub
mov
lds
inc
js
dec
nop
inc
sbb
test
lods
adc
jno
mov
push
sbb
xor
lods
xor
pop
mov
sbb
fs
scas
subl
imul
ss
out
icebp
inc
scas
pop
test
mov
push
shlb
dec
jae
pop
mov
rcl
mov
push
xchg
sbb
loop
jp
jne
into
mov
shlb
mov
fmull
xor
ret
ljmp
into
ss
and
daa
sbb
cmp
pop
aad
ss
daa
push
ss
nop
inc
in
fidivrs
sbb
test
in
cmp
xor
push
dec
cld
mov
xchg
mov
jo
cld
add
outsb
popa
inc
mov
mov
pop
jp,pt
mov
popf
aaa
push
push
jne
adc
les
mov
cmpsl
cwtl
mov
hlt
jns
stos
xor
ss
pop
test
lea
aam
cmp
adc
push
dec
inc
jae
aad
pop
mov
leave
sub
cmp
movsb
mov
xchg
sbb
dec
repnz
or
jnp
xchg
xchg
popf
sub
xchg
cmp
testl
lods
push
fdivl
jle
out
jge
sub
or
xchg
adc
loopne
ljmp
mov
adc
mov
dec
test
sbb
loopne
mov
add
add
into
lods
int
inc
stos
mov
or
popfw
daa
dec
pop
cltd
in
rcrb
sub
daa
jbe
adc
ljmp
shlb
push
jmp
mov
iret
jle
dec
xchg
rolb
cmp
mov
int3
push
bound
adc
xor
or
fwait
jo
push
movsl
dec
mov
pop
stc
nop
sbb
out
xchg
mov
push
and
sarl
inc
out
out
popa
cmp
cmc
int
mov
lret
mov
ret
int3
stc
cltd
mov
stos
push
adcb
xor
andl
int
outsl
dec
xor
shlb
push
dec
ljmp
pop
cmpsb
js
ret
iret
or
xor
movsl
lea
and
cmpsb
mov
lock
or
cltd
push
leave
stos
pop
or
add
test
test
mov
pop
jge
inc
inc
or
jbe
fdivl
rcrl
jns
shlb
jmp
inc
xchg
sub
inc
push
adc
mov
int
xchg
orb
inc
pop
mov
mov
inc
fildll
jmp
iret
inc
seto
sub
jge
mov
fsubl
movsl
test
lods
sub
lods
sub
lods
popf
int
jmp
ljmp
sbb
xor
sbb
cmp
in
fwait
test
add
loop
lods
cmp
inc
aaa
lret
mov
into
icebp
inc
dec
and
pop
adc
inc
adc
stos
ljmp
out
inc
ja
out
mov
addr16
imul
in
scas
scas
shrl
fisttpl
outsl
sub
out
cmp
cmc
inc
mov
fisubs
or
bound
cltd
ljmp
sbb
outsb
pop
inc
int
adc
xchg
sub
loop
mov
mov
data16
mov
mov
mov
lcall
movsb
jecxz
das
sbb
push
ss
adc
cmp
loopne
sub
repnz
loop
mov
popa
inc
pusha
inc
push
in
xchg
or
or
jl
cmp
cmpsl
jmp
mov
push
xchg
adc
and
aas
pop
cmpsl
int
ljmp
add
jbe
aam
stos
mov
mov
pop
pop
lcall
out
mov
mov
ret
lds
mov
pop
or
insb
clc
call
jmp
lods
stc
sahf
lds
mov
pop
add
icebp
aam
je
or
scas
daa
xlat
pushf
xor
jnp
xchg
sub
xchg
sbb
mov
cli
sti
sub
sahf
je
sahf
clc
cmp
icebp
or
add
xchg
sbb
vpsubb
xchg
int
mov
fstpt
dec
cmp
das
daa
xchg
sbb
stc
mov
xchg
mov
aaa
ss
sub
in
mov
pop
pop
fcoms
repnz
lock
xchg
push
nop
aad
lret
ja
les
sti
inc
in
jae
mov
stos
notl
mov
ss
mov
jnp
or
xchg
data16
in
pop
icebp
mov
cmp
pop
fistps
add
push
daa
sbb
mov
out
xchg
push
popa
or
xchg
stos
jecxz
cmp
addl
fs
cli
int
sbbl
cmpb
and
push
add
pop
movsl
mov
xor
hlt
mov
sbb
lods
ret
xchg
inc
push
mov
cmp
sub
mov
pop
cmp
adc
inc
push
adc
insb
jnp
sti
incb
adc
lret
fdiv
jge
push
aad
pop
or
and
clc
in
inc
push
sub
lret
mov
not
ret
inc
lds
mov
aam
xchg
cmp
loop
dec
jecxz
in
add
xorl
sbb
mov
or
pop
popf
xor
add
pop
repnz
adc
pushl
mov
popa
jne
movl
add
int3
xor
mov
add
test
addr16
mov
cmp
dec
jle
mov
fcomi
jo
stc
inc
xor
cmp
cwtl
xor
mov
cmp
movsb
jnp
iret
mov
pop
cmpsl
mov
mov
insl
sbb
inc
sti
popf
shrl
jmp
notl
sbbl
or
or
adc
sbbb
cltd
jp
mov
xrelease
sbb
cmp
jp
inc
jnp
push
adc
push
add
lock
fdiv
incl
add
cmp
xchg
add
mov
and
movsl
mov
inc
lea
je
sub
ja
pushf
ljmp
lds
ds
cwtl
es
sahf
je
clc
mov
leave
xor
mov
sbb
and
jmp
icebp
std
xchg
loope
sub
sub
aaa
adc
fiadds
test
xchg
sbb
pop
or
enter
dec
scas
and
in
xlat
xor
test
add
mov
stos
sbb
dec
xchg
adc
push
call
fbstp
stc
data16
mov
jno
insb
cmp
shrl
xor
and
scas
leave
in
test
movsl
pop
jmp
jle
pop
out
sbb
cmp
js
clc
ret
mov
adc
dec
test
pop
xchg
xchg
or
mov
push
scas
sbb
mov
cmp
cmp
loope
sub
pushf
outsb
pop
fidivs
incl
repz
cmpsb
sub
cmc
inc
adc
add
cld
pop
lret
shll
in
xchg
loop
in
cld
or
movsl
bound
cmpsl
push
jbe
push
rcr
jle
mov
into
les
stos
out
adc
in
and
xor
mov
and
mov
addr16
pop
push
stc
out
sbb
daa
sub
movsl
jge
fldenv
shlb
aam
mov
jb
cld
xchg
mov
addr16
and
sub
les
mov
mov
imul
imul
mov
jg
xchg
and
packuswb
repnz
aas
pop
roll
popa
rcl
inc
cmp
lock
xchg
push
mov
fwait
push
mov
popf
push
into
ret
rcl
adc
loopne
in
add
inc
lods
aas
loopne
vcvtpd2psx
mov
sbb
addr16
xchg
leave
inc
jge
cmp
mov
cmpl
shlb
mov
mov
push
sbb
mov
psllw
fs
pop
mov
xchg
cmpb
scas
pop
add
jmp
xchg
mov
inc
mov
pop
xlat
fwait
hlt
je
and
sbb
sub
shl
rcrb
repz
push
xchg
outsl
call
sti
scas
mov
insl
scas
mov
cmpb
in
inc
push
jmp
mov
and
xchg
shl
mov
and
movsb
jb
inc
push
jp
mov
dec
loop
dec
icebp
int
xlat
pop
movsb
dec
shll
xor
cmpl
xchg
mov
leave
sbb
cmc
lcall
sbb
cwtl
adc
pop
scas
or
dec
inc
das
sahf
xor
and
dec
ljmp
loopne
pop
pop
addl
mov
dec
add
lret
mov
lret
mov
lea
popf
outsb
push
mov
or
jp
faddl
inc
push
mov
aas
cmpsb
in
mov
aas
inc
cmp
sbb
cmp
xchg
mov
andb
push
rcl
insl
fcom
lahf
adc
repz
pop
ljmp
addr16
push
bound
mov
shl
dec
add
aaa
adc
std
mov
mov
adc
or
or
push
popa
jne
dec
mov
push
daa
push
clc
aad
push
shl
jmp
and
ret
repz
hlt
fstpl
out
lahf
xchg
add
pop
and
pop
cmpsl
dec
cmpsb
mov
mov
jo
popa
cmpsb
int
xor
shr
loopne
mov
vpsubb
jae
pop
aas
or
bound
and
dec
jecxz
cmp
push
fisubs
in
rcl
or
jecxz
cld
push
in
or
fstpt
das
push
sbb
sbb
loopne
xchg
xchg
inc
cld
in
dec
addr16
fisubl
mov
je
fsubl
add
xor
cli
push
mov
sbb
and
aad
adc
fsubrs
xor
mov
loopne
push
mov
inc
dec
hlt
fs
cmpsb
jno
notb
add
lahf
push
mov
js
or
pop
xchg
inc
mov
scas
xchg
imul
adc
stc
sti
cli
ljmp
or
jp
push
lahf
pusha
push
js
jae
sahf
scas
insb
inc
sub
pop
lods
ljmp
andnps
pusha
pop
push
out
outsb
mov
fidivrl
pop
ja
mov
ljmp
cwtl
fmulp
fdivrl
std
inc
cmp
xor
sbb
xor
iret
jbe
fbstp
cli
cmc
sbb
or
fnstsw
decb
gs
push
fisubrs
jns
test
push
dec
pop
call
mov
dec
cli
rorb
pop
cli
cmp
mov
cmp
sti
sub
popa
mov
mov
ds
and
out
sub
in
jne
add
movsb
and
aam
mov
sbb
fisubrl
loop
scas
pop
or
pop
jge
pop
add
enter
fnsave
nop
jp
loope
dec
add
popa
ss
inc
mov
and
dec
push
mov
mov
insb
shrl
xchg
mov
sahf
add
and
fs
aaa
pop
sti
shrb
movsl
into
mov
mov
pop
insl
xor
cmp
xor
mov
mov
pusha
cmpsb
shr
ss
jns
loope
enter
pushf
lahf
cmpsl
add
and
fisttpl
mov
sub
sbb
outsl
clc
pusha
pop
cmpl
dec
push
mov
es
xchg
shrl
inc
imul
ds
insl
jmp
scas
mov
pop
insb
lds
push
and
mov
repnz
iret
ja
cmp
mov
jb
or
push
xchg
loope
mov
outsb
xlat
xor
xchg
mov
jg
sbb
cmp
jmp
adc
daa
and
jecxz
inc
cmpsb
out
jl
inc
test
mov
stos
out
lret
test
jns
fs
xchg
and
and
loop
clc
inc
dec
scas
lret
cmpsb
sahf
pop
ljmp
adc
xor
inc
fsubrl
divb
xchg
std
sbb
xor
lret
push
mov
cmp
sub
sahf
pop
jl
pop
mov
xchg
jae
xchg
in
aad
fdivrl
adc
mov
mov
pop
inc
sub
insl
int3
sbb
fs
call
fbld
pop
pop
xchg
int3
in
in
jbe
ss
xor
dec
adc
mov
leave
dec
sbb
cmp
adc
imull
mov
push
movsb
dec
jne
stos
inc
mov
out
movsb
xorl
dec
nop
sbb
jecxz
push
add
sbb
test
and
nop
outsl
jl
pop
cmpsb
int3
push
jp
add
jb
jl
les
jae
cwtl
pop
into
movsb
jno
push
xlat
cmp
dec
sub
sahf
pop
cmp
movsb
dec
scas
add
push
arpl
mov
push
jp
pop
rorl
inc
push
jp
jl
dec
jno
movsl
add
int3
mov
sub
pusha
fcompl
jl
xor
cmp
push
or
pop
mov
in
mov
mov
dec
mov
pop
fbld
xor
push
pop
lea
push
mov
cmc
in
xchg
sbb
cmp
cltd
pop
jecxz
mov
std
test
in
arpl
dec
adc
pop
cmp
push
je
std
inc
mov
data16
cltd
push
hlt
test
ret
rolb
adc
cwtl
fisttps
pop
popa
inc
clc
inc
in
fidivs
add
mov
iret
bound
nop
cmp
and
nop
dec
sub
xchg
movsl
bts
push
cmp
outsl
mov
ss
fimull
push
fsts
data16
push
mov
or
adc
mov
sbb
ljmp
stos
cmpsl
inc
mov
pop
test
mov
adc
dec
pop
cltd
xor
pop
pop
lds
pop
adc
stos
mov
fstpl
and
daa
or
jne
rorl
aaa
or
aam
push
daa
shrl
add
pop
fisubrs
div
movsl
mov
test
inc
out
mov
mov
cmp
push
test
xor
sahf
gs
sbb
stos
das
enter
in
test
dec
fidivrl
push
adc
fldt
outsl
jno
ss
aad
scas
jmp
and
movsl
loop
xor
mov
outsb
inc
xor
mov
cmp
movsb
into
and
insl
inc
inc
sbb
cmp
ret
into
mov
gs
xchg
jecxz
out
and
pop
push
cmp
xchg
bound
jno
cs
lahf
xchg
divb
push
ret
repnz
movsb
xlat
sahf
and
imul
push
or
or
cwtl
loopne
testl
sbb
imul
add
stc
jge
stos
ffreep
add
movsb
inc
sub
lahf
aam
mov
mov
or
sti
cltd
stos
in
jae
cltd
or
xor
xor
or
jb
mov
cli
sbb
sub
xchg
mov
lcall
ja
adc
mov
inc
pop
inc
sbb
dec
or
insl
and
mov
inc
inc
pop
jns
outsl
fcoml
ret
sbb
adc
and
out
aam
pushf
rorl
aas
mov
enter
adc
lahf
test
ja
xor
test
clc
mov
mov
das
mov
add
xchg
mov
es
mov
fildll
repnz
cltd
fistpll
pop
and
and
mov
jmp
scas
popf
sub
or
std
pop
xchg
inc
xchg
cmp
or
dec
sub
add
fsub
test
add
jmp
mov
scas
dec
lods
push
faddp
inc
loop
call
mov
pop
sbb
pop
xchg
test
add
mov
xchg
bound
jg
add
cwtl
repz
out
sbb
daa
sub
xor
loope
lods
loop
aaa
jmp
outsb
jnp
mov
mov
mov
cmp
inc
and
in
sub
xchg
cli
mov
push
cmpsl
jno
movsb
aad
mov
pop
push
cmp
dec
mov
pop
jo
inc
adc
divb
jp
dec
mov
ja
pop
data16
cmp
lock
out
lcall
sbbl
and
aad
int
pop
dec
ja
out
xor
rorb
cmp
pop
out
movsb
inc
loope
notb
xor
imul
nop
jno
pop
pusha
in
xor
lahf
daa
mov
mov
icebp
sbb
loope
jns
push
jp
cmpb
pop
into
jae
ds
pop
bound
push
cmp
in
adc
mov
jne
in
in
inc
add
test
lcall
jge
or
inc
out
in
int3
mov
ljmp
shlb
inc
cmp
push
and
testb
xlat
add
stos
dec
cli
mov
dec
mov
pushf
mov
dec
fwait
sbb
arpl
inc
sbb
mov
mov
sbb
push
movsb
std
pop
cltd
mov
jmp
aad
mov
jecxz
sbb
stos
lods
es
jb
inc
repnz
aad
lret
xchg
enter
pop
inc
mov
or
jge
mov
pop
movsb
jb
push
shlw
idivb
sahf
mov
dec
xchg
insl
mov
cmp
in
inc
push
cmp
pop
mov
xchg
push
cmc
cmpsl
jns
or
inc
data16
movsb
nop
subl
inc
bts
iret
outsb
inc
pop
sbb
out
ljmp
add
leave
adc
loope
dec
xchg
gs
ljmp
mov
jge
or
jnp
cmp
mov
jb
iret
pop
lret
repz
lock
lods
fmuls
or
push
dec
test
sar
add
inc
pop
andl
fucomip
cmpsl
int
mov
dec
out
fptan
jno
xchg
ds
out
lods
push
dec
pop
sbb
dec
mov
sub
xlat
rclb
pop
push
test
sub
testl
sti
add
fbld
in
movsl
fldl
test
lds
cmp
popf
pop
and
dec
dec
or
cmpsl
cmpsb
gs
cmp
hlt
divb
mov
or
dec
jae
mov
pop
call
sub
loope
leave
cmp
pusha
sbb
pushf
cmp
mov
repnz
leave
aaa
sub
push
shrl
mov
scas
das
push
fucomip
mov
mov
mov
adc
ret
ret
pop
push
jnp
and
stc
data16
inc
mov
pop
gs
test
mov
cli
lret
shlb
xor
lea
int3
push
sti
cli
ss
call
sarl
ljmp
int3
add
cwtl
or
xchg
loopne
push
je
lret
adc
repz
addr16
sbb
cld
and
test
pop
divl
daa
lock
or
testl
xor
mov
or
es
inc
out
enter
mov
or
rol
mov
push
stos
push
es
sub
sbb
nop
jecxz
mov
pop
pop
dec
sub
cmpsl
sbb
lret
and
cmp
fstps
mov
out
push
jb
mov
or
mov
xchg
jbe
cmp
jp
jmp
jle
jp
dec
repz
pop
inc
sbb
popa
iret
add
jb
xlat
repnz
shrl
ljmp
lds
xlat
adc
gs
sti
out
icebp
jg
pop
loope
test
data16
mov
jnp
xchg
sub
push
in
dec
pop
lds
cmp
out
push
add
jno
and
test
sbb
shl
push
sub
pop
jl
xchg
mov
pop
in
std
xchg
and
sub
pushf
call
mov
repnz
or
arpl
cmp
or
dec
nop
push
rcll
push
mov
mov
in
jmp
jb
lcall
push
imul
xchg
popa
daa
sub
or
inc
cwtl
fcomip
xchg
sbb
je
and
insl
mov
jl
or
cmp
jmp
insl
mov
loop
in
int3
push
or
ret
js
scas
test
push
push
loop
dec
mov
mov
xor
sub
fnstenv
mov
adc
mov
sbb
cmp
ds
cmp
cmc
jns
packssdw
dec
fisubs
cld
sbb
insl
push
xchg
sub
sar
addr16
or
and
mov
mov
dec
dec
push
cmc
mov
mov
iret
cmp
dec
mov
fisubrs
arpl
imull
test
sub
mov
cmp
pop
xor
outsl
inc
cmp
je
dec
inc
sbb
push
or
in
out
movsb
mov
dec
mov
jne
mov
imul
int3
hlt
in
dec
jge
xor
mov
or
iret
jno
imul
lret
enter
inc
scas
in
fwait
mov
fnstcw
jbe
jnp
lcall
sbb
xor
ja
mov
mov
xchg
xor
fildl
xchg
inc
push
daa
mov
sarl
lret
cmp
inc
in
sbb
stos
loope
ja
scas
bound
dec
push
pop
fsts
imul
pop
push
ja
xor
fmull
sbb
push
daa
ret
bswap
and
int3
popa
daa
lods
outsl
sahf
cmp
jo
aam
jle
xchg
push
jnp
test
pushf
cs
loopne
push
mov
in
mov
inc
jb
sbb
jae
cmp
mov
aam
fadd
mov
inc
imul
dec
mov
xchg
inc
inc
inc
xchg
and
lcall
mov
notl
bound
push
push
mov
dec
mov
cs
sahf
jmp
scas
push
movsl
ljmp
sbb
adcb
mov
dec
or
mov
sub
out
jecxz
xchg
add
mov
mov
sbbb
lcall
mov
outsb
mov
or
and
cli
test
rclb
inc
int3
push
adc
mov
outsl
xor
xor
fdivrs
cld
cmp
add
ljmp
sub
loopne
jbe
or
xchg
pop
shlb
movsl
sahf
add
test
outsl
imul
sbb
jno
mov
in
adc
add
leave
add
nop
add
add
xor
cli
jns
ljmp
mov
xor
xchg
adc
aas
mov
cmp
std
jp
jp
jbe
inc
jmp
and
xchg
std
push
or
add
or
js
xchg
lahf
sub
cld
pop
sub
cmp
xchg
xor
cmp
sbbl
in
pushf
lock
dec
repnz
push
es
in
pusha
or
xchg
insb
pop
pop
inc
jg
and
scas
mov
or
fadds
jne
lret
sbb
out
sbb
outsb
shlb
pop
cld
cmp
and
xchg
int3
mov
pusha
cmpsl
xlat
sub
cmp
jle
lds
or
add
push
xlat
dec
in
popf
popa
mov
jo
cwtl
rolb
fmuls
mov
push
daa
dec
popf
fists
push
ret
push
loop
insl
and
or
addr16
jl
nop
data16
add
jp
movsl
stc
in
xchg
ds
sti
mov
aaa
mov
arpl
add
cs
into
jae
pop
test
pop
push
cli
aas
xor
mov
sar
cltd
inc
popa
dec
jne
into
out
popl
xchg
dec
jge
into
stos
pusha
pusha
es
shrb
and
and
out
xor
xorl
ret
cmp
lret
push
popa
pop
cmp
mov
or
xor
ljmp
ljmp
js
push
inc
sbb
sti
inc
jle
gs
add
arpl
mov
sub
jbe
shll
nop
scas
inc
cmp
add
aam
aam
insl
jo
ja
pop
jae
and
popa
xchg
add
popa
out
sarl
sbb
mov
ja
sti
out
and
addr16
stos
dec
mov
jp
mov
xorl
lahf
fs
cmp
fs
out
lret
jo
xchg
mov
scas
mov
divl
dec
aas
shrb
gs
dec
rcr
adc
mov
inc
int3
ja
xlat
lahf
jae
mov
std
lock
adc
outsb
stc
daa
aam
pop
rorl
mov
data16
jmp
cmp
push
out
cmp
sti
inc
inc
mov
mov
dec
lahf
shrl
icebp
cmp
cmp
xor
dec
insb
pusha
neg
inc
clc
js
and
out
and
outsb
arpl
sub
sahf
adc
pop
movsl
mov
nop
jle
pop
inc
mov
sahf
mov
xchg
jnp
xchg
sbb
sbb
and
mov
es
xchg
cmp
push
gs
mov
push
adc
fstl
push
popf
ds
mov
pop
dec
pop
imul
xlat
adcl
and
test
adc
movsb
mov
mov
imul
xchg
outsl
cltd
in
sbb
inc
mov
pop
les
mov
aam
inc
xor
xchg
loopne
mov
negb
dec
jle
and
test
les
fsubrl
mov
shl
sar
in
jp
sbb
or
xchg
imull
sti
aam
rorl
fldcw
mov
adc
adc
mov
xchg
aam
pusha
iret
pushf
inc
mov
dec
test
xor
adc
loop
ja
add
jo
pop
add
push
lods
push
inc
inc
cmp
fwait
jae
cltd
xor
ljmp
push
stos
sub
and
add
cld
or
frstor
xor
mov
adc
xchg
leave
sub
pop
in
sub
lret
dec
xchg
ljmp
inc
jge
fstpl
ret
jns
or
lret
outsl
xorl
outsb
push
cmp
ss
fcoml
ror
sub
ret
dec
fisubrs
imulb
inc
dec
insl
pop
sahf
lods
cmpsb
sbb
roll
xchg
mov
sub
mov
adc
jp
clc
and
insb
test
or
pop
push
xchg
xor
jno
outsl
pop
lahf
push
test
inc
push
or
sub
in
mov
jmp
ficoml
stos
call
dec
jb
sbb
sub
dec
and
pushf
xchg
push
xchg
daa
ljmp
cmp
sbb
insl
mov
inc
mov
jl
jge
adcl
aad
faddl
test
mov
cli
jne
ja
test
nop
fildl
xchg
out
xor
and
or
push
xor
cmp
mov
out
aas
in
xchg
or
jne
ret
out
jae
sub
xor
push
push
int3
jne
ja
xchg
jle
pop
sti
cltd
bound
xchg
cmp
ret
adc
add
loop
rcll
imul
xchg
in
popf
insl
mov
mov
mov
rcll
gs
sub
ret
shlb
mov
or
jmp
and
fistl
int3
mov
cmpsl
out
hlt
mov
push
xchg
push
jno
jnp
adc
insb
in
push
pop
add
mov
jg
cwtl
pop
stc
fists
lcall
int3
test
xor
loop
stc
out
xchg
inc
jno
test
adc
mov
push
insl
push
call
popa
fistpl
insb
mov
addr16
test
das
ss
cmpsl
push
stos
pop
insb
mov
scas
addl
out
push
outsb
jae
testb
mov
or
push
xor
in
in
lret
push
mov
and
stc
das
pop
jne
mov
fcmovnb
loopne
out
dec
jne
xchg
push
imul
jmp
mov
mov
or
adc
fs
cmp
inc
xchg
iret
into
lret
add
repz
in
xchg
dec
inc
mov
enter
imul
sahf
jmp
mov
jmp
inc
xchg
jp
cmpsl
inc
push
bound
cmp
xchg
xchg
add
pop
mov
dec
fbld
inc
bnd
pop
std
ret
scas
push
movsl
cmp
aaa
mov
xchg
test
push
das
sub
push
nop
mov
aaa
lret
xchg
and
mov
or
adc
add
mov
arpl
push
inc
into
sub
pop
push
out
fwait
loop
and
enter
and
call
jg
pop
insb
orb
dec
fiadds
lahf
push
loopne
fsubr
mov
out
icebp
xlat
pop
and
repnz
int3
int3
sub
mov
scas
std
mov
mov
scas
cltd
fcompl
xchg
adc
sub
mov
les
push
int
xlat
lahf
pop
loope
lea
out
or
jge
or
out
aas
push
jle
daa
jbe
pop
movsb
and
stc
jae
inc
popa
add
jp
scas
out
cmp
std
dec
mov
sub
and
adc
roll
or
xor
jbe
jb
sbb
iret
movsb
fisttpll
jmp
sbb
push
dec
out
add
or
loop
jmp
jg
pop
add
push
int
xor
pop
pop
aas
push
add
dec
lods
jns
icebp
pop
cmpb
rcl
cli
lods
stos
or
sub
dec
stos
push
mov
cli
fmull
mov
dec
xchg
fistps
scas
sahf
jne
xlat
hlt
and
out
push
sbb
hlt
movntdq
jne
jp
xor
lcall
hlt
rcrb
and
push
int
aad
insb
xchg
inc
mov
mov
jg
mov
or
fwait
xchg
orb
mov
xorb
mov
mov
fucomp
dec
lea
mov
sub
cmp
xor
add
cmpsb
mov
jle
into
adc
inc
jmp
adc
cs
out
mov
dec
mov
xor
adc
subl
lock
or
mov
adc
bt
and
mov
sub
jg
sub
mov
cmp
inc
aam
addr16
movsl
data16
mov
xchg
mov
stos
or
into
mov
jns
outsl
addr16
sub
and
mov
xchg
mov
imul
push
xchg
ret
cmp
jl
in
shlb
or
pop
aam
cs
in
push
inc
push
pop
leave
into
push
push
jge
and
xor
sub
lcall
in
mov
rcrl
out
fsts
test
inc
in
rcll
test
shlb
dec
lcall
stc
pushf
out
or
ljmp
stos
leave
orl
jmp
ds
cmp
cmpsb
ja
push
jp
mov
lcall
sub
push
xchg
and
adc
addr16
push
out
push
cwtl
fstpt
jno
push
pop
pop
dec
packssdw
or
xchg
sbb
sbb
sub
lahf
cmp
mov
lods
fwait
mov
out
fcmovne
insl
xchg
push
mov
ss
ljmp
mov
jo
xor
das
pusha
cmpsl
jp
stos
mov
xor
xor
sbb
mov
jnp
aam
cmpsb
fldt
adc
push
dec
mov
pmaddwd
pusha
out
jecxz
popf
push
stos
filds
js
mov
outsb
sbb
mov
int
xlat
jg
pop
fs
inc
por
in
ljmp
push
stos
out
mov
lds
iret
push
cli
negl
shrl
push
stc
push
mov
push
pop
ja
adc
insb
cld
adc
inc
xchg
les
sub
dec
and
cmp
jnp
jg
jo
adc
cld
push
pop
and
outsl
jl
pop
mov
pop
xchg
sbb
stos
cmpsl
pop
hlt
insl
adc
pop
in
xchg
mov
push
push
hlt
add
cmp
faddp
fisttpll
mov
lods
jo
shrb
fs
mov
addr16
cmpsb
in
dec
cmp
cmp
arpl
hlt
stc
xor
mov
sbb
inc
xchg
xchg
mov
iret
jno
testl
push
stos
xlat
stos
inc
inc
cmp
push
into
arpl
lea
pop
shll
rclb
insl
pop
jecxz
inc
in
pop
repz
repnz
push
aas
sub
mov
push
pop
mov
and
jmp
shl
push
add
popf
mov
add
push
pop
mov
xchg
mov
es
mov
subl
mov
push
pop
fbld
popa
mov
xchg
and
fucomp
xchg
pop
inc
cmp
out
pop
sub
ret
push
xor
push
mov
fst
or
rolb
int
sti
jo
test
sub
call
add
mov
mov
stos
xlat
jb
pop
pop
out
int
fbstp
cmpb
clc
insl
popa
push
dec
jmp
call
sbb
xchg
out
lea
mov
xchg
in
dec
push
es
and
movsl
xlat
es
cltd
adc
ljmp
shll
xchg
sub
test
dec
out
xor
rol
std
mov
mov
mov
int
lds
test
cmpsl
xor
jmp
pusha
stos
pop
repnz
pop
roll
lea
mov
add
sti
and
cmpsl
xchg
push
pop
inc
sbb
xchg
jbe
xchg
dec
xchg
int
mov
outsl
jge
lods
xchg
lcall
dec
sbb
dec
imul
xchg
jne
pop
cwtl
stc
stos
fistpl
dec
push
xchg
sbbl
ss
inc
dec
push
lret
xchg
gs
rclb
sbb
pop
imul
jp
mov
leave
dec
cmp
insl
sbb
mov
test
pop
xor
inc
cli
or
std
add
push
mov
sarb
out
inc
cld
push
dec
sub
adc
idivl
into
mov
mov
subb
out
aas
inc
xchg
dec
or
mov
test
sub
outsl
int
mov
es
aam
push
mov
bound
lock
sub
xor
xor
push
inc
das
loopne
test
push
cmp
add
lock
test
mov
sub
mov
mov
lret
jne
push
and
fsubrl
push
aas
into
add
mov
dec
sbbb
out
call
fldl
mov
outsl
xchg
pop
add
std
xchg
daa
nop
jle
gs
mov
lea
bound
mov
pop
aam
loopne
xchg
insb
and
pop
out
dec
ret
pop
push
pop
add
std
mov
scas
shlb
sbb
adc
pop
sbb
test
aas
jp
mov
or
iret
sub
incl
je
call
inc
lock
add
mov
shll
push
dec
add
clc
imul
pop
repz
loopne
mov
hlt
dec
mov
or
out
and
imul
fistpl
pop
mov
loop
jns
inc
aad
lds
jge
in
and
xor
aad
sbb
cs
inc
loop
dec
mov
aam
jns
sub
xor
inc
sahf
or
fdivs
inc
movsl
push
andl
shll
idivb
inc
xchg
push
roll
int3
outsb
inc
int
ficoml
enter
dec
sbb
in
mov
mov
adc
fsubs
ds
clc
inc
jmp
mov
mov
jae
scas
or
dec
scas
fnstcw
stos
dec
comiss
in
ljmp
push
call
or
ret
nop
ficoml
scas
push
test
cld
pop
mov
xlat
cld
pushf
adc
dec
cmpsl
inc
clc
sahf
and
in
dec
inc
pop
adc
andb
xchg
mov
jb
cmpsl
out
ret
jle
cmp
lock
inc
jnp
xchg
addr16
insl
leave
test
es
push
sub
loope
pop
out
sahf
add
adc
decl
xchg
and
sbb
dec
adc
imul
xchg
ljmp
into
loopne
cmp
es
aas
add
popf
pusha
mov
cmp
lahf
lds
lea
add
test
sbbl
or
and
scas
aaa
mov
jmp
iret
mov
bound
ljmp
sub
inc
mov
movaps
sbb
adc
sbb
dec
mov
pusha
inc
cltd
sub
into
sarb
faddl
mov
push
test
mov
push
fmuls
stos
in
stc
inc
movsl
mov
scas
mov
xlat
and
int
adcb
xchg
lods
decb
push
sbbl
jmp
push
jno
mov
xor
repnz
test
lods
pushw
cmp
in
icebp
pushf
mov
repz
mull
fidivl
xchg
mov
inc
cmp
mov
sarl
jg
push
mov
in
cmp
xchg
mov
sub
adc
pushf
adc
aas
add
stos
sbb
fcoml
jae
fidivrl
out
es
sub
sbb
movsl
fldl
test
leave
dec
mov
add
pop
inc
rolb
fisttpl
aas
mov
fldt
inc
pop
pop
mov
jle
mov
cmpl
inc
pop
push
dec
jge
outsl
pop
jne
jne
jmp
mov
push
je
mov
dec
dec
add
enter
iret
sub
mov
loop
icebp
xor
icebp
daa
push
pop
in
pusha
push
sbbb
addr16
cwtl
jmp
daa
xchg
xchg
mov
cld
adc
lret
aaa
lahf
inc
ret
sub
aas
loopne
add
aam
jno
or
dec
ja
shr
pop
stc
fstl
dec
pop
sbb
out
sbb
test
fninit
jae
mov
jno
xchg
xchg
out
in
ja
mov
mov
push
out
jae
scas
dec
mov
cmp
sub
push
or
xor
mov
jbe
mov
mov
cmpsl
fiadds
pop
call
mov
add
push
outsb
insl
mov
xchg
icebp
ds
mov
aam
jbe
dec
in
mov
addr16
aam
jecxz
adc
test
ret
pop
jp
adc
mov
jmp
call
adc
push
mov
fldcw
ret
xor
mov
sbb
gs
and
sub
xchg
int3
dec
or
jb
lcall
cmovae
adcl
fsubl
pop
dec
dec
jmp
cmp
inc
adc
lahf
imul
std
pop
mov
rol
mov
andb
mov
scas
lret
shlb
in
int
les
xchg
add
adc
outsl
and
aaa
orl
push
xchg
sti
stos
test
mov
mov
ret
enter
fwait
stos
adc
push
ja
mov
pop
push
pop
sub
push
mov
inc
imull
outsl
lcall
add
xor
aas
push
xchg
jmp
ret
insl
test
addb
mov
dec
repz
call
clc
sub
mov
loop
movsb
cmp
js
jp
or
and
test
jo
sbb
mov
and
nop
mov
adc
stos
xor
das
mov
inc
ljmp
mul
mov
xor
add
or
jle
inc
daa
cmc
add
lock
les
mov
mov
pop
sub
push
lock
mov
xor
in
leave
mov
addb
dec
out
hlt
cmc
and
mov
sbb
insb
bound
je
mov
adc
xchg
add
mov
add
sub
ret
mov
inc
lahf
xchg
cmp
push
pop
mov
xchg
fistpl
nop
pusha
xchg
mov
cld
adc
lahf
mov
push
jl
and
xor
ret
jbe
test
sarl
pop
push
out
arpl
cmp
mov
inc
jge
fcoms
je
ljmp
shrl
loope
lods
out
sub
inc
jmp
test
cmp
dec
aaa
push
andl
lcall
pop
xchg
lret
mov
mov
cwtl
pop
andb
jnp
loopne
jle
and
pop
xor
ljmp
mov
cli
int
xor
pop
insb
and
sbb
xchg
cli
std
pushf
mov
mov
ficompl
jp
loopne,pt
pushf
push
js
sbb
out
push
jo
in
arpl
ja
jmp
es
add
sbb
cld
aaa
mov
enter
ds
mov
add
cmp
jb
daa
sub
cmpsb
inc
iret
mov
das
pop
fisttps
pop
sbbb
lret
push
js
xchg
test
mov
mov
pop
and
cmp
add
icebp
aam
mov
sbbl
dec
mov
mov
add
jne
and
lret
sub
mov
sarb
cwtl
lret
movsl
outsb
xor
push
lock
ret
jns
fsubrl
ficoms
xor
lds
pop
mulb
cmp
icebp
dec
cli
frstor
xchg
cld
pop
add
xchg
pop
push
das
cmpsl
fidivrl
jp
fadd
lock
pop
aad
sbb
movsb
cltd
mov
outsl
orl
jg
pusha
insl
out
jb
pop
or
jp
jmp
das
ljmp
jae,pn
ja
aaa
pop
xchg
xor
fsubrl
xchg
push
sti
mov
outsb
out
movb
pop
xor
adc
loop
int
popa
fldt
and
or
xchg
add
push
sub
ja,pn
clc
push
jbe
fisubrs
pusha
xchg
fstps
lods
aad
sbb
sub
bound
sbb
cmpsl
pusha
push
xchg
sti
lods
imul
repz
mov
fbstp
sti
cltd
outsb
push
movsb
lret
and
pop
dec
arpl
psubsb
outsb
or
std
cs
jmp
cs
and
mov
jp
mov
and
jmp
sub
adc
jne
adc
dec
inc
movsb
jnp
adc
cmp
fcmovnbe
jp
add
mov
mov
push
bound
sub
and
mov
out
and
fwait
adc
add
lcall
out
cs
add
pushf
adc
lods
jge
inc
mov
test
sbb
xor
or
sub
dec
dec
mov
push
icebp
popf
pop
loopne
mov
iret
inc
in
dec
das
loop
mov
jbe
sbb
push
xchg
add
out
subb
xchg
inc
rorl
cmp
ret
push
sti
lret
ljmp
pop
mov
cld
int
or
mov
das
fnsave
es
cltd
or
lods
adc
mov
and
or
pop
jecxz
jno
mov
jmp
sbb
add
pusha
les
mov
push
mov
mov
mov
jge
addl
jge
pop
lea
jecxz
aad
sub
iret
add
jp
gs
loope
sub
mov
lock
dec
aam
hlt
push
in
test
stos
adc
dec
insb
mov
jg
add
bound
pop
in
mov
mov
inc
xchg
movsl
push
aam
jecxz
push
sbb
sub
fmull
sbb
loop
rcr
inc
stos
lret
adc
je
sbb
and
ficoml
xor
fdivs
jecxz
jns
add
cld
or
fsubrl
dec
iret
jno
add
shlb
jnp
xlat
mov
dec
and
or
mov
adc
fidivrl
jno
xchg
inc
sbb
cmpsb
scas
dec
xchg
arpl
dec
pop
pop
and
jmp
push
popf
jnp
iret
and
push
sti
xchg
cmpsw
push
pop
daa
scas
sbb
mov
loop
mov
and
rcl
lcall
pop
sub
fiaddl
je
das
aaa
cs
dec
xor
mov
jbe
mov
andb
ds
movsl
es
pop
add
testb
enter
fisubrs
outsb
cmp
imul
aas
adc
and
cwtl
pop
pushf
cmp
push
lcall
xor
addb
cli
mov
xor
cmc
fadds
in
sub
std
rcll
xor
rcrb
test
shl
inc
je
sbb
scas
aad
and
mov
cmpsb
test
add
mov
repz
cmp
orb
push
das
outsl
ret
push
mov
inc
dec
push
aas
int
imul
cmp
xchg
call
and
mulb
test
pop
mov
popw
loop
rcll
outsl
ret
cli
lods
dec
mov
pop
lods
stos
gs
pop
and
xchg
cmp
push
xor
aas
or
sub
push
jp
sub
or
sub
pop
add
pop
pop
mov
clc
xor
pop
push
ja
out
stos
adc
inc
mov
test
sti
fcoml
jmp
cwtl
in
test
adc
inc
add
xchg
pop
les
outsl
sbb
adc
imul
arpl
sub
daa
lods
movsb
mov
and
fdivrl
mov
negb
cwtl
cmpsb
pop
push
into
dec
pop
das
cli
dec
imul
xchg
jns
push
inc
sub
pop
lock
xor
and
fsts
out
push
xor
dec
js
push
ret
xlat
and
lods
call
push
daa
jp
out
pop
mov
shll
outsb
dec
hlt
add
add
mov
dec
in
and
jmp
hlt
out
lret
cs
push
adc
outsb
pop
repnz
arpl
add
cmp
roll
xchg
insb
fistps
psubusb
sub
xchg
add
adc
dec
add
xor
adc
in
jne
sub
arpl
xchg
pop
ss
push
pop
mov
mov
into
push
mov
mov
sub
in
sbb
ljmp
add
lock
popf
fs
dec
scas
aaa
clc
sbb
push
xchg
lret
lock
mov
xchg
pop
or
loope
xor
jmp
mov
pop
cs
mov
in
mov
push
mov
mov
and
jmp
push
and
out
mov
sahf
xchg
repnz
mov
shlb
notl
add
shll
sbb
push
int3
vorps
add
pop
sub
sub
scas
dec
cmpsl
fistpl
fs
sbb
inc
ds
fsubr
inc
stos
popa
call
or
int3
and
push
jbe
aam
test
or
clc
cmp
push
sti
ds
mov
pop
mov
sub
pop
add
xor
and
xchg
out
inc
popa
jp
mov
add
es
aad
out
popf
inc
or
fcoml
sti
shl
in
add
mov
or
imul
das
iret
scas
fsubs
lods
clc
pusha
movsb
sbb
insl
fsts
out
iret
mov
mov
pop
mov
repz
mov
mov
mov
enter
inc
xlat
notl
and
dec
lea
sub
mov
jae
and
mov
ljmp
shll
dec
inc
sub
addr16
and
das
pop
mov
fcmovne
pop
cltd
xlat
mov
cmp
sub
pop
xchg
in
lcall
dec
aam
inc
cmp
sahf
mov
rcrb
or
es
shrb
mov
lret
in
aad
loope
ljmp
into
mov
scas
push
pop
stc
ret
mov
ret
xchg
dec
sbb
and
xor
imul
aaa
adc
imul
lea
push
lods
hlt
fdiv
fsubs
in
sub
cmpsl
xchg
mov
cmp
pop
jae
popf
stc
lea
test
cmp
xchg
mov
push
sbb
ret
mov
xchg
jb
arpl
mov
pop
adc
and
fcoml
hlt
xchg
fsubrs
jmp
cli
dec
lods
jno
out
pop
cld
stc
imulb
ljmp
sahf
loope
mov
xor
mov
dec
enter
pop
dec
mov
inc
vpunpcklwd
wrmsr
lods
imul
jae
xor
sub
jecxz
mov
add
xchg
or
test
out
adc
negl
dec
xchg
aam
mov
jbe
dec
mov
das
out
cmp
mov
xor
jno
inc
repnz
hlt
mov
pop
add
xor
test
or
icebp
cltd
add
ret
or
lcall
cmp
add
or
test
pop
xchg
mov
jb
push
jno
adc
ret
xor
jne
pop
roll
sub
dec
jno
cmp
sub
pop
adc
std
cmp
cmp
dec
sub
stos
add
ljmp
or
mov
push
in
or
jp
scas
and
cmp
notl
jle
sbb
insb
pop
jbe
adc
sub
data16
popl
cmp
scas
inc
leave
mov
jp
fcomip
out
stos
clc
xor
arpl
pushf
adc
call
repnz
int
and
sub
jge
imul
pop
ret
xor
xchg
push
add
movsl
scas
or
mov
or
cmp
data16
dec
sbb
jp
sbb
fwait
ret
push
push
out
inc
xchg
xor
ficoms
adc
ja
int
adcl
movsl
loop
jp
imul
xchg
inc
sub
mov
sarb
stos
mov
cmp
jo
mov
mov
cmp
movsb
outsb
mov
loop
mov
push
and
inc
cmp
pop
and
test
hlt
inc
mov
push
inc
xchg
pop
dec
pop
sbb
rcrb
insl
rcrl
jnp
push
and
or
jle
inc
pop
repnz
push
inc
pop
push
inc
into
jo
leave
jl
sbb
jmp
push
add
jo
ficoml
shll
jo
add
mov
adc
outsl
shll
jecxz
xchg
icebp
adc
or
pop
pop
mov
push
add
jmp
dec
gs
jmp
xor
inc
rorb
mov
aas
mov
push
inc
shrl
mov
or
pop
ds
cmpsl
mov
test
inc
jmp
jmp
mov
push
xchg
or
mov
push
test
dec
add
aam
xchg
push
jle
out
lds
in
lret
pop
cmc
shll
pop
sbb
stc
xor
ljmp
or
int
pop
loope
jns
mov
pop
mov
mov
test
sbb
out
cmpsl
cli
lods
inc
lret
mov
rcll
mov
aas
xor
outsb
cmp
iret
hlt
in
pop
fs
cmp
pop
mov
cmpsb
jne
jp
xchg
push
cli
add
pop
push
sub
push
adc
div
jne
mov
push
mov
jno
das
sbb
js
popf
int3
hlt
xor
push
pop
daa
adc
stc
push
adc
test
mov
adc
sarb
xchg
ljmp
sub
fst
js
xor
movsl
fldcw
mov
xor
inc
sarl
and
aas
jbe
add
scas
pop
cmpsl
aas
cmpsb
outsl
jp
xchg
mov
jo
dec
rcll
in
cmp
push
inc
mov
add
scas
ret
sti
nop
mov
stc
divb
filds
jo
cmp
sti
cmp
pop
cmp
rcrb
add
insb
repnz
mov
loopne
cmp
and
jo
in
mov
fwait
pop
movsb
jecxz
lods
push
fsubrp
insl
inc
scas
imul
out
sbb
jns
cli
inc
sbb
dec
mov
fs
scas
stos
sub
out
adc
lock
push
fmull
cmp
fdiv
into
repz
iret
fnstsw
push
inc
jno
mov
jmp
enter
repnz
mull
incb
hlt
push
xchg
inc
pop
and
push
in
or
pop
jb
cmpsb
jns
lret
addr16
sbb
add
into
int
imul
leave
jle
mov
adc
dec
jae
pop
subb
add
insb
xor
jo
inc
push
mov
jge
lret
mov
cli
addl
push
pop
mov
mov
clc
leave
xchg
push
mov
addb
faddl
pop
push
pop
shlb
or
insl
mov
sti
aas
jb
xlat
ljmp
out
sarb
rol
lret
gs
mov
pop
lods
mov
sbb
addr16
xchg
fnstcw
jbe
xchg
push
push
mov
and
stos
les
mov
xchg
mov
push
mov
push
out
xchg
ret
pop
or
aad
lods
mov
into
cmp
out
push
push
sahf
push
fisubrs
cwtl
cmp
das
cmp
ret
xor
lods
in
mov
mov
adc
lret
adc
cs
aaa
or
enter
rcll
outsl
cmp
cs
addr16
leave
pop
pop
push
sbb
adc
jno
cmp
je
sbb
movsl
insb
and
out
add
add
cmpsb
enter
sbb
cmp
incl
stos
sbb
xor
pop
inc
jne
inc
pop
fsubs
or
fiaddl
pop
imull
and
nop
cmp
outsl
xchg
cmp
call
push
adc
mov
pusha
xchg
jno
mov
xor
and
fnsave
mov
imul
cwtl
dec
mov
insl
jb
mov
xchg
or
add
mov
or
jge
repz
and
jmp
mov
pop
xchg
jge
pop
jl
adc
push
fdivp
scas
lods
lods
xor
mov
lretw
push
cmp
mulb
jae
cmp
mov
orl
loope
mul
add
fs
lahf
test
std
pop
inc
insb
pop
negl
sbb
sub
aaa
repz
sub
dec
imull
xchg
mov
and
popf
pop
adc
add
int3
adc
mov
negb
js
add
lock
shr
and
cmp
mov
cwtl
fsts
lods
jne
out
sub
and
adc
int3
int
xlat
xchg
mov
loope
xchg
sub
cwtl
mov
sbb
sub
mov
cmc
dec
popf
insb
cmpsl
jnp,pt
push
sti
jp
lea
mov
inc
push
in
add
mov
shl
sbb
bound
jb,pt
adc
inc
outsl
ljmp
cltd
cs
mov
out
stos
push
imul
push
and
pop
mov
sbb
mov
pushf
stc
loopne
imul
adc
dec
push
lds
lds
jo
loopne
bound
sbbb
dec
dec
cmp
mov
sub
push
add
les
jmp
mov
dec
inc
incl
pop
es
ss
sbbb
outsb
faddp
add
test
mov
add
pushl
rcrl
jg
push
sub
push
loop
adc
scas
notb
jae
fisttpl
push
pop
mov
ds
or
ljmp
mov
dec
jp
add
in
subb
sub
enter
inc
dec
mov
es
mov
movsb
xchg
jae
sbb
orb
push
pop
fucom
lret
adc
imul
xchg
inc
push
in
sbb
lahf
arpl
sbb
es
ljmp
dec
xor
leave
bnd
adc
lcall
mov
aam
imul
imul
rclb
sbb
iret
outsb
popa
fcomi
out
sti
xor
test
mov
out
xchg
xchg
in
das
sbb
sbb
mov
cmpsb
test
mov
rclb
pop
movzbl
test
shlb
xchg
push
pop
stos
adc
loop
mov
sbb
cmpsl
pop
xchg
cltd
sarb
or
mov
sbb
fdivs
arpl
or
fldl
pop
lret
push
cli
sbb
mov
jae
cwtl
cwtl
pop
xchg
aas
jg
xchg
and
jg
adc
and
mov
cs
mov
shlb
adcb
lcall
pop
jno
inc
jae
inc
test
xchg
lock
fistpl
not
mov
sbb
jbe
in
sub
scas
jne
repnz
lock
je
cmpl
int
jbe
popf
cmpsl
push
sti
arpl
push
cs
dec
scas
and
outsl
cmp
and
lret
es
xor
fisubrl
mov
iret
cwtl
ret
xlat
cld
jb
add
mov
sub
lahf
mov
shlb
pop
cmp
std
jle
mov
add
movsb
and
in
iret
dec
ss
pop
ds
sbb
mov
jno
cmc
xor
adc
push
sbb
sub
push
and
fwait
jno
lret
in
and
mov
mov
outsb
cmp
movsb
sub
mov
cs
sti
jmp
lret
jecxz
cltd
mov
insl
jne
adc
pop
mov
mov
cld
inc
xor
test
cmpsl
loopne
dec
cmp
mov
xchg
cmc
addr16
outsb
popf
adc
dec
xchg
or
inc
ja
sub
xorl
fdivr
xchg
mov
cmpsb
xchg
stos
lret
jnp
push
stos
dec
scas
xor
xchg
sahf
lcall
test
cmpsb
out
aaa
sbb
jge
arpl
mov
pop
add
jl
mov
xchg
push
lahf
mov
xchg
jecxz
and
fisttpl
jmp
rep
push
stc
iret
dec
dec
scas
enter
aam
fwait
inc
cmp
out
mov
or
xchg
add
ret
or
adc
xor
inc
hlt
ja
lret
cmpsb
push
adc
xrelease
cmpb
push
xchg
sti
and
loopne
jno
add
inc
jg
jg
xchg
out
inc
js
mov
sub
mov
xor
sbb
jo
in
popf
jg
repnz
sub
xchg
into
imul
cmp
jns
xchg
inc
int
xor
mov
cmp
add
cmp
call
fidivs
sub
dec
test
add
xchg
mov
mov
jecxz
jo
dec
jo
sbb
pop
aad
daa
push
push
fnstenv
fstpt
stos
clc
jg
or
mov
push
jp
filds
lock
xchg
test
inc
jb
pop
xor
lea
into
push
mov
pusha
xchg
xchg
stos
mov
and
jae
mov
cmp
shrb
aad
lret
jg
andl
mov
dec
not
mov
mov
mov
xor
popa
scas
rcr
add
out
inc
and
repz
dec
je
or
push
les
jo
mov
into
xor
ds
sbb
popf
add
in
mov
mov
push
sub
ds
js
shll
into
and
xor
mov
int
push
mov
add
xchg
xchg
adc
mov
int3
test
push
sti
add
or
jnp
xchg
movsl
mov
leave
mov
pop
nop
mul
outsl
imul
jb
out
dec
cmpl
stos
lods
sub
imul
adc
in
call
mov
mov
fidivl
ds
cmc
es
shll
jge
mov
jecxz
imul
sub
mov
jecxz
sbb
insl
mov
add
ret
dec
cmp
mov
cmp
jnp
addr16
pop
in
not
ret
push
ljmp
hlt
mov
fistl
jnp
movsb
lea
xor
dec
inc
pop
pop
lods
test
and
mov
xor
mov
and
loopne
scas
pop
sbb
push
mov
mov
js
cmp
les
add
xchg
push
addr16
push
lods
int
fnstsw
push
inc
sbb
mov
aad
arpl
sub
adc
jmp
and
adc
adc
xchg
popa
sub
jne
mov
icebp
stos
mov
pop
adc
aaa
cwtl
jbe
xchg
es
pop
inc
lcall
jo
mov
ss
mov
fcomps
jecxz
jl
aam
jmp
jns
jae
shl
cmp
mov
adc
or
div
dec
into
mov
andb
popf
ljmp
add
mov
arpl
mov
pop
jge
dec
ja
pop
mov
jge
xchg
push
sub
adc
xchg
jp
mov
ret
jbe
aad
mov
pop
cmpsb
jnp
lahf
aas
das
stc
decl
das
cmp
xchg
push
ficompl
pop
jge
ds
sbb
jb
and
cs
das
jecxz
decl
push
scas
mov
cltd
out
inc
mov
arpl
popf
xchg
mov
xchg
jno
or
add
insl
inc
test
push
lods
notl
notb
rcrb
mov
andl
or
add
aaa
inc
in
int3
stc
imul
jmp
push
in
inc
fdivrp
test
shlb
push
jno
sbbb
pshufw
loope
loope
int
into
add
adc
lods
push
xor
cmp
arpl
xchg
insb
cwtl
rcr
mov
sub
xchg
sub
jae
sbb
jl
out
inc
cmp
and
dec
add
inc
jne
scas
sub
mov
into
sti
lods
mov
cli
or
mov
roll
mov
mov
inc
stos
adc
popf
rcr
jno
hlt
push
cmp
ja
rolb
cld
push
pop
cli
cmp
ja
xor
sub
sahf
shlb
je
movsb
bnd
out
jns
jecxz
shl
xchg
sub
lret
adc
gs
pop
ljmp
mov
cmp
fnstcw
insb
addr16
test
jmp
pushf
xor
push
fcmovb
push
dec
cmp
jns
mov
imul
addr16
adc
pusha
add
jbe
aad
inc
inc
mov
lcall
outsb
movsl
scas
xor
push
popf
divl
jne
mov
test
inc
mov
sbb
add
shrl
adcb
ret
fidivs
mov
dec
sbb
ss
dec
mull
sbb
pop
pop
imul
out
decl
dec
and
adc
jae
xchg
insb
out
xchg
inc
pushf
jno
add
mov
mov
xchg
dec
cmp
mov
scas
popa
xchg
pop
neg
not
je
push
les
dec
adc
pushf
dec
and
out
cltd
inc
fsts
fsubr
enter
inc
xchg
test
push
fmulp
stos
cmp
mov
cmp
roll
lcall
sbb
cltd
dec
pop
pop
test
rorl
in
adc
jo
ret
test
and
cli
outsb
cmp
cmp
scas
xorl
push
into
add
xchg
mov
xchg
mov
jle
adc
mov
aad
out
iret
lods
adc
sbb
cmp
mov
int
sub
fstl
adc
repz
out
mov
mov
in
sub
and
cmpsb
and
sahf
xchg
aaa
mov
aaa
stc
dec
xchg
jbe
mov
test
sbb
and
test
push
cmpb
and
mov
lods
xlat
mov
jne
jmp
mov
mov
outsb
test
mov
ret
sbb
cwtl
xor
hlt
inc
xbegin
cltd
movl
hlt
es
cmp
in
add
enter
add
mov
jle
pop
mov
xchg
cltd
mov
and
clc
jle
out
sbb
inc
xor
sbb
jge
mov
cs
and
or
movsb
push
push
movsl
jl
into
jne
adc
xor
rclb
mov
adc
mov
mov
test
gs
lcall
mov
outsb
cmpl
out
mov
loop
dec
sbb
out
andl
loopne
into
loop
sar
xchg
aaa
add
in
shrl
test
sub
xor
push
cltd
loope
jmp
lcall
push
sahf
out
xchg
bound
cmp
inc
lret
fstpl
movsb
push
mov
fwait
ds
int3
jo
xchg
fwait
scas
mov
mov
push
out
mov
popa
xchg
fwait
push
jle
dec
ret
icebp
data16
and
test
push
movsl
clc
lcall
ja
mov
in
int
lcall
sub
rclb
xchg
sub
loop
mov
push
lret
ljmp
sbb
and
das
cmc
jnp
add
lahf
xchg
cltd
mov
inc
and
dec
in
and
xchg
xchg
or
and
sub
andl
mov
dec
pusha
dec
pop
movsb
push
loope
dec
xor
stc
lcall
jg
mov
lret
out
cmp
inc
jbe
adc
cmp
out
add
fldenv
mov
jb
ss
stc
loop
jnp
dec
test
rorb
fcompl
subb
scas
shrl
mov
mulb
test
test
xor
loopne
or
jns
andl
xchg
xor
sub
jne
aad
mul
xor
movsb
cmp
dec
and
push
push
or
sub
mov
push
xchg
shl
lret
fnstcw
aaa
inc
mov
jmp
aaa
or
dec
dec
test
dec
stos
outsl
ret
lods
insl
push
fsub
loope
es
in
fs
lret
xor
clc
fistpll
in
ret
add
or
mov
xchg
lahf
test
jb
push
jbe
lock
ja
pushf
mov
cmp
enter
dec
pop
push
push
push
mov
fisttpll
and
dec
xchg
and
jae
sbb
sti
inc
int3
loope
in
push
cltd
mov
stos
jl
lcall
into
repnz
push
mov
add
lahf
mov
mov
xchg
mov
movsl
jl
gs
jnp
dec
popf
ljmp
aad
cwtl
dec
ret
ss
fmul
mov
fstpt
adc
dec
push
mov
movsl
jnp
pop
cltd
movsb
mov
push
cli
mov
mov
in
addr16
clc
cmp
inc
mov
rcrl
sbb
scas
movsl
cmp
leave
fwait
pusha
cmp
cld
mov
movsl
out
jb
jbe
call
mov
inc
movl
ret
cmp
clc
xchg
aad
push
pop
and
bound
mov
xchg
xor
dec
add
loope
jo
mov
or
cmc
dec
mov
test
adc
enter
movl
mov
std
cmp
mov
repz
xchg
pop
dec
pushf
pop
popa
xor
lcall
lds
scas
sti
or
pop
push
pushf
rcrb
mov
mov
mov
xchg
loope
outsb
or
sub
repnz
movsb
inc
lods
xlat
int
jge
push
push
jnp
and
in
es
call
lahf
or
popa
jae
adc
mov
or
push
mov
adc
cmp
scas
inc
out
shr
lcall
loopne
rolb
sub
aam
jbe
je
clc
fs
in
out
and
inc
adc
lods
mov
mov
out
aad
jmp
cmpsb
jne
mov
jbe
sbb
or
mov
sbb
andl
jo
jb
arpl
inc
xchg
mov
cwtl
xchg
inc
enter
stos
adc
std
xor
mulb
xchg
mov
movsb
negb
sub
dec
or
fdivrs
cmpsb
mov
xchg
gs
jle
or
pop
enter
fucomip
mov
add
lret
fwait
out
dec
rcll
aaa
xor
sarb
mov
mov
mov
iret
mov
in
mov
loopne
adc
xchg
lea
fistpll
add
and
add
rolb
pop
push
adcb
fistps
cmpsb
pop
sbb
xor
mov
repz
inc
sbb
push
outsl
adc
scas
cmpxchg
mov
inc
shl
lret
pop
or
sub
and
sbb
outsb
and
fimull
xchg
push
stc
adc
pop
jmp
loop
jle
add
jl
aas
fwait
add
sub
mov
add
js
sub
insl
sbb
ds
xor
dec
stos
es
sbb
bound
lods
push
lahf
and
sbb
movsl
lods
int
adc
test
xchg
repz
xor
mov
and
nop
stos
jbe
daa
cmpl
lcall
mov
add
ret
imul
fs
adc
or
cmp
mov
xlat
pop
jns
pop
xchg
xchg
popf
imul
nop
sub
pop
scas
xchg
inc
fbld
and
xchg
cmp
insb
mov
fidivs
ljmp
mov
mov
mov
mov
sti
enter
out
mov
sarb
pop
xchg
incb
pop
and
clc
add
push
ret
jns
or
hlt
in
lods
push
mov
adc
outsl
sarb
ret
movsb
repz
push
dec
test
inc
jge
cmp
mov
xlat
loop
sub
or
and
fs
aam
jbe
xchg
sbb
mov
xlat
in
mov
mov
pop
fcmovb
jbe
daa
mov
ret
adc
add
outsb
fiaddl
pop
add
andb
or
jmp
push
enter
repnz
push
stos
or
adc
js
xchg
pushf
cs
push
shlb
fmull
test
and
test
mov
jae
mov
adc
or
sub
lahf
cltd
sar
sub
popa
imul
ficomps
sub
mov
dec
jbe
lock
decb
repz
das
adc
and
lret
xor
iret
hlt
aas
cmp
xor
adc
out
push
or
or
in
fisttps
push
les
cmp
test
mov
push
les
out
cltd
stos
jns
cmc
pop
imul
mov
insb
jecxz
jae
xor
sbb
cmp
xchg
add
push
sub
mov
add
sbb
repz
mov
mov
cmp
xchg
test
aas
sbb
leave
decl
cltd
scas
ret
add
mov
mov
nopl
sub
ficoms
fs
lock
xor
lahf
insl
push
sbb
xchg
ds
scas
jns
nop
popa
add
in
adc
dec
ds
add
mov
mov
out
inc
mov
in
jnp
jge
sub
xchg
loop
jmp
mov
in
sub
iret
lret
mov
insl
xor
in
jno
mov
or
loop
testb
jmp
or
icebp
in
aam
adc
jp
sar
jns
or
ficoms
sbb
pop
fucom
call
mov
in
subl
xchg
loope
pop
sub
xchg
lahf
pop
mov
pop
lahf
sub
movsb
dec
lods
mov
xlat
add
out
shll
test
rcrb
xchg
aad
lea
sbb
mov
xchg
scas
imul
dec
ficoml
imul
shrl
push
sub
fstps
xor
pop
cmpb
add
xchg
pusha
mov
lcall
xchg
xchg
rclb
push
jg
outsb
jb
aam
fs
repnz
inc
sbb
dec
gs
pop
dec
cli
gs
jo
les
es
cmp
push
punpckhdq
jecxz
fnsave
arpl
mov
mov
xchg
xchg
cmp
gs
dec
pop
loopne
jno
sub
lods
push
push
xchg
jge
cmp
push
pop
inc
jp
test
js
rcrb
cld
mov
mov
testl
aaa
testb
scas
adc
sbb
bound
push
popa
cmp
adc
inc
mov
cmp
shll
pop
jle
and
jnp
jmp
add
repz
scas
mov
addr16
stos
iret
mov
and
shrb
mov
sbb
mov
shrb
jns
jo
push
pop
outsl
movsb
ja
cmp
cmp
scas
push
in
sahf
xchg
inc
lret
in
pusha
or
out
rorl
push
lcall
inc
pushf
sbb
inc
imul
jge
sbb
out
mov
subl
js
mov
sub
sub
pop
mov
rcl
and
pop
rcl
mov
add
adc
jmp
enter
jg
sub
dec
pop
sub
std
xor
xchg
dec
stos
adc
push
mov
jmp
cs
rclb
jo
cli
imul
jns
mov
push
fs
xlat
insb
sarl
pop
pop
cmp
or
out
cli
cmp
add
fldenv
mov
sti
roll
push
jle
std
cmp
movsl
mov
xchg
lret
subl
jmp
arpl
pop
hlt
testl
dec
loopne
or
mov
pop
jecxz
or
mov
xchg
loope
shl
push
xor
sbb
leave
pop
jnp
cmp
sub
insl
js
mov
mov
aad
xor
mov
es
sub
out
ss
out
push
ss
jno
cmp
cmp
inc
sub
fdivrl
ss
push
or
push
and
mov
xchg
loope
ss
jp
mov
mov
daa
xchg
or
pop
inc
dec
fs
adc
mov
outsl
fs
inc
jl
ljmp
outsb
sti
mov
test
scas
iret
in
jecxz
std
and
cli
mov
cmp
fstl
testb
scas
push
mov
lds
sbb
das
iret
jmp
push
jge
push
and
cwtl
in
nop
or
ficompl
inc
jnp
mov
popa
pop
or
stc
and
repnz
or
sub
xchg
fcmovbe
pop
push
ds
bound
add
addr16
ljmp
add
pop
pmaddwd
lds
insb
loop
int
fwait
jnp
xor
xchg
dec
mov
jle
or
xchg
xchg
or
cltd
mov
push
sub
sbb
negb
and
jns,pn
pop
inc
push
sbb
xor
mov
dec
ret
inc
lds
xor
xlat
imul
repz
inc
dec
xor
mov
fidivrl
fs
cmp
mov
jno
cwtl
or
test
xor
int
xchg
daa
pusha
cmp
mov
pop
lahf
xor
inc
inc
add
rcrl
push
mov
in
cmpsl
out
ja
mov
mov
mov
add
mov
mov
jecxz
divl
int
cmp
cmp
cs
daa
and
es
or
sub
icebp
sub
xchg
stos
sbb
sbb
in
or
aam
push
jl
adc
sub
mov
inc
and
and
lahf
and
mov
mov
mov
xchg
cmp
cmp
xor
inc
ja
loope
mov
xor
pop
push
scas
xor
sub
hlt
sbb
mov
jl
addl
out
adc
inc
xor
cmp
or
sbb
dec
push
adc
sbb
add
inc
imul
and
mov
and
movsl
mov
adc
adc
sbb
pslld
imul
mov
je
jbe
jecxz
psubusw
mov
cmp
cmp
repnz
movsl
lret
sbb
or
call
lahf
or
push
std
inc
mov
and
or
data16
daa
sti
xchg
das
scas
add
sub
or
cs
or
std
push
or
jp
push
pop
fmulp
lock
lea
out
xchg
fstpl
sub
inc
dec
sarl
insb
sbb
fstpl
cmc
cmp
mov
jno
push
loopne
movsl
cmp
mov
shll
mov
imul
cmc
in
fnstsw
jle
xor
or
repnz
lret
enter
scas
test
or
cmp
call
loop
cmp
jbe
push
jno
stos
push
sub
jae
cmpsb
scas
xchg
sub
cmpsl
sar
movsl
jge
push
pop
sub
xchg
das
fadds
sti
dec
je
lret
xchg
fstl
xchg
dec
cli
cmp
jge
ja
and
ss
inc
push
repnz
sub
push
and
push
aaa
das
and
out
inc
loopne
mov
mov
sub
xchg
lcall
test
js
add
mov
mov
xchg
hlt
std
add
mov
inc
push
imul
in
cmp
test
in
mov
out
xchg
loope
in
es
mov
fs
mov
call
xor
jle
pop
cmp
mov
scas
sbb
loopew
loop
out
std
outsl
push
inc
lret
or
lods
lcall
stc
fst
mov
mov
xchg
cmc
push
sbb
es
mov
popa
xchg
push
pop
lock
sub
cli
cmc
fmuls
lret
cwtl
mov
mov
pusha
lods
out
lahf
push
enter
cmc
addr16
add
add
in
sbb
mov
push
out
or
lret
jle
pop
repnz
scas
in
sarl
mov
fldenv
sub
sti
rcr
insl
push
cmp
push
dec
ret
insl
adc
cmpl
pop
lods
jae
mov
outsb
adc
cli
movsl
pop
mov
es
xchg
xchg
xchg
xchg
inc
inc
mov
in
pop
mov
inc
inc
push
ljmp
orb
add
inc
push
inc
nop
pop
pusha
cltd
loope
cmpsb
iret
repnz
call
fisubrl
jle,pn
in
jecxz
out
sbb
rcl
gs
sub
sbb
mov
mov
adcb
loop
lods
lret
or
adc
fstl
cmp
cmp
dec
mov
sub
in
jp
push
sub
loope
ror
ds
pusha
repz
adc
out
push
inc
adc
sub
test
sbb
mov
cmpsl
inc
sub
int3
jp
and
pop
ss
xor
bound
subb
not
and
push
add
or
inc
mov
scas
adc
mov
fidivs
popa
ror
mov
add
bound
mov
dec
adc
jns
inc
pop
push
js
push
std
jnp
cld
stos
jno
mov
shlb
add
xor
dec
xor
mov
xchg
out
scas
lods
cmp
adc
add
xcrypt-cbc
cmpsl
aam
cmp
in
lahf
in
cmc
shlb
cs
adc
out
dec
gs
sbb
fadds
cld
jle
sbb
cld
sahf
fs
test
mov
lods
in
push
adc
mov
adcb
inc
cmp
pop
dec
jle
mov
imul
jno
pop
test
adc
mov
sbb
loop
cmp
stos
push
shlb
lcall
scas
dec
sub
pop
ss
mov
xlat
clc
addb
fdivrs
pop
dec
out
pop
fwait
push
cld
sub
mov
int3
lods
inc
sahf
loopne
ret
test
push
in
add
pop
call
cmc
mov
and
lods
loope
sbb
dec
lcall
adc
ljmp
out
xchg
outsl
mov
je
and
mov
dec
sti
xchg
inc
inc
cld
pop
in
xor
loop
sub
mov
inc
outsl
cmp
push
loopne
push
dec
dec
pop
outsb
data16
mov
sbb
push
repz
jp
shl
mov
mov
dec
xor
push
outsb
cwtl
pop
leave
adc
and
add
mov
cwtl
mov
jne
mov
jle
test
sub
cmc
sbb
or
arpl
lret
out
adc
jecxz
and
ljmp
add
mov
adc
xor
repnz
scas
nop
icebp
mov
or
addr16
and
mov
lcall
mov
mov
pop
aam
add
in
ret
jge
mov
pop
xchg
sbb
xchg
imul
sbb
sbb
pop
dec
scas
xor
icebp
sbbb
sub
loop
add
dec
sbb
addr16
fdivl
aaa
dec
jecxz
enter
or
adc
and
fcmovbe
addb
cmp
lock
stos
xor
add
ret
gs
adc
sbb
mov
cld
push
push
test
mov
faddl
cli
fwait
cli
shll
fisttpl
loopne
lock
xchg
aaa
std
and
inc
mov
stos
mov
jl
mov
nop
int
insl
aad
mov
fmull
test
cmp
in
test
subb
add
and
icebp
jbe
stc
add
and
aam
in
sbb
rorb
test
lahf
insb
out
lea
in
psubusw
pushf
fistl
stos
xchg
in
int3
lea
push
in
add
cs
inc
xor
jns
xchg
enter
mov
popf
mov
sub
cld
leave
xor
in
stos
xor
xacquire
adc
pop
mov
xchg
inc
jo
pop
push
fwait
or
sbb
push
fwait
int3
push
mov
imul
movsb
sbb
dec
fs
repz
loopne
jmp
jl
inc
or
cwtl
jnp
jnp
jmp
rcrl
lods
mulb
and
push
or
and
pop
fidivrl
dec
add
imul
dec
insb
mov
ljmp
sti
push
ficompl
pop
and
jmp
mov
sbb
movsl
leave
repz
or
jae
dec
pop
test
mov
mov
jg
arpl
xchg
popa
adc
je
xor
inc
stos
lret
mov
mov
fiaddl
cwtl
cmpsb
enter
mov
ret
aaa
in
xlat
jae
inc
repz
pop
sahf
mov
sub
mov
sbb
addr16
sub
les
fcmovnu
mov
fcoms
lahf
or
push
mov
fwait
jmp
or
fld
fld
xchg
les
out
sbb
and
sbb
popa
loope
xchg
imul
cmp
jmp
push
jmp
outsl
mov
pop
mov
or
repz
jb
jmp
flds
dec
idiv
nop
arpl
out
cli
mov
dec
pop
pop
lds
outsl
loope
bound
jmp
adc
sub
jecxz
popf
sbb
test
add
jo
mov
pop
jle
out
sub
push
aam
sbb
push
xor
add
sbb
int3
push
sarl
scas
popf
adc
xchg
cli
mov
lock
mov
mov
ret
push
cmp
ds
sub
add
enter
jge
lock
into
imul
pop
sub
stos
jae
iret
sub
pop
pop
sub
sub
fsubp
fdivl
xor
mov
sar
cmp
mov
in
dec
sbb
lods
mov
push
adc
stos
fwait
cs
push
ficompl
sbb
mov
push
aad
jge
imul
in
or
arpl
lahf
and
and
pop
ja
hlt
cmpsb
jle
push
icebp
dec
add
call
sub
mov
fs
stos
ds
inc
imul
fists
pop
fwait
jmp
and
insl
subb
bound
xchg
sub
shrb
push
les
jl
cmc
loope
sbb
add
ljmp
sub
int
cli
mov
sub
loope
adc
cmc
dec
sbb
mov
dec
sbb
sub
cmp
call
inc
add
push
ja
pop
mov
xorb
pop
into
iret
mov
mov
mov
popf
scas
popf
pop
jae
pop
xor
jbe
roll
sbb
fwait
dec
inc
lods
jl
fwait
cwtl
xor
js
aaa
addr16
or
mov
and
int3
mov
hlt
sbb
mov
cs
inc
lods
inc
out
mov
xor
fidivl
jae
call
leave
push
add
maxps
out
aad
inc
cltd
jmp
push
and
lods
pop
les
add
iret
pop
push
push
fs
pop
and
xor
sub
xor
mov
jmp
jl
sub
and
mov
hlt
dec
dec
cli
repz
sti
adc
sahf
hlt
mov
mov
aam
shll
sub
hlt
xor
shl
mov
roll
scas
mov
lahf
dec
mov
dec
aam
sbb
mov
popf
cwtl
enter
shrl
in
xchg
xor
jl
mov
or
push
mov
mov
fmulp
xor
lcall
jecxz
push
mov
xchg
frstor
mov
addl
repz
mov
adc
sbb
mov
inc
loop
into
adc
push
imul
or
orl
stc
and
mov
scas
push
mov
mov
adc
and
movsb
lds
fdivrl
popa
cmp
ja
sahf
cs
int
repz
ja
mov
je
or
movsl
ret
out
xor
mov
pop
pop
cmpsl
inc
enter
jns
mov
xchg
imul
sub
jae
aas
xchg
stc
aam
cmp
inc
fmull
shlb
arpl
cmp
mov
je
andl
scas
push
out
cwtl
out
dec
popa
jbe
add
pusha
sbb
jle
movsl
lahf
sub
xor
lods
jbe
sub
or
sbb
pop
push
shl
cmp
ss
jp
in
enter
jp
ljmp
add
aad
daa
push
mov
or
testl
dec
repnz
jecxz
lret
ss
in
lsl
int3
mov
ficoml
addl
fs
stos
enter
lcall
dec
fcoms
inc
dec
xor
divps
fucomp
push
jb
and
push
mov
test
out
jbe
pop
lret
cmpsb
jg
inc
cmp
xchg
les
aas
or
jae
mov
sub
movsl
dec
cmp
rcl
xchg
xchg
ljmp
test
lret
xchg
sbb
push
mov
mov
add
push
add
mov
pop
test
dec
jno
cmp
pop
lods
fs
mov
movsb
lahf
pop
inc
sarb
xchg
xor
repnz
sbb
xor
inc
add
ja
cmp
cltd
sub
fdiv
pop
dec
dec
mov
sbb
mov
mov
cmp
in
outsb
push
dec
mov
addl
jb
inc
popa
and
add
out
jo
aaa
cs
std
cli
pop
ds
pop
xchg
js
adc
aas
stc
test
sub
aas
dec
cmpsb
aaa
test
sarb
jns
jbe
lods
int3
mov
mov
push
negl
mov
gs
ficoml
repz
sti
sub
ss
xor
sbb
ja
inc
adc
daa
test
in
xchg
push
adc
sub
sbb
sbb
inc
loop
xchg
push
test
inc
jo
aaa
fbstp
sysret
mov
popa
cmc
and
inc
xor
sub
loopne
es
lret
loopne
bound
xor
popf
sbb
adc
dec
dec
mov
arpl
inc
cmp
pop
repz
or
cwtl
xchg
pop
movsb
outsb
pushf
aaa
cmp
ss
roll
int
pop
mov
and
in
mov
mov
sarl
mov
push
call
mov
cmp
sub
js
and
cmc
test
inc
sahf
mov
fcmovbe
gs
xor
pop
in
sbb
out
and
sbb
or
add
jp
pop
mov
mov
js
std
stos
sti
popa
adc
sub
enter
roll
aam
pop
int
sub
inc
jbe
shll
enter
outsl
jmp
fstpl
lds
in
push
xlat
xchg
xchg
or
push
jg
or
pop
jo
into
stc
enter
and
sub
add
xchg
cmp
int3
imul
sahf
insb
jmp
xchg
pop
sub
xchg
imul
or
je
mov
test
stc
sbb
adc
lcall
movsb
or
mov
push
mov
aaa
or
xlat
mov
mov
hlt
mov
inc
or
es
add
jno
and
xor
mov
jbe
push
imul
daa
xor
shrl
out
lea
jb
mov
mov
repz
inc
rcrb
jge
sbb
test
or
pushf
jns
jge
negb
push
inc
imulb
arpl
repz
inc
je
mov
test
and
dec
paddusw
cmp
shll
or
adc
dec
push
popa
mov
testb
adc
xchg
sub
lock
out
ds
mov
test
es
pop
xor
pusha
add
add
push
dec
or
in
orl
shlb
mov
mov
jge
cmp
xchg
jae
lahf
push
js
imul
jge
in
sti
or
or
pop
cs
dec
out
ja
sub
xor
add
cmc
test
rcrb
testb
mov
dec
xor
or
fidivl
movsl
faddl
sbb
xchg
test
mov
ljmp
jno
cs
repz
loopne
popf
lret
mov
pop
jge
gs
push
xchg
mov
ljmp
fiadds
dec
shrb
aas
xchg
stos
adc
scas
or
out
imulb
and
mov
jbe
sub
push
push
scas
pop
push
push
lea
jae
add
and
outsl
add
jecxz
imull
dec
loopne
and
jbe
das
sub
jae
xlat
jb
iret
inc
sub
and
or
pusha
and
mov
push
jmp
leave
mov
fwait
xor
gs
pop
imul
xchg
mov
or
jle
or
ficompl
add
jbe
lret
in
mov
and
cltd
loopne
shl
xchg
subl
jle
pop
lods
loope
push
add
je
mov
xchg
lock
push
addr16
adc
push
xor
aas
cmp
aas
mov
fadds
push
and
mov
movsl
pop
in
xchg
pop
mov
push
rorb
out
sbb
cmp
inc
xor
pushf
scas
hlt
aas
jae
arpl
cmp
in
adc
aaa
add
dec
mov
pop
dec
push
or
arpl
push
mov
lret
mov
andb
lea
mov
les
adc
or
add
inc
dec
std
jl
pushl
mov
add
mov
test
jp
sub
arpl
mov
imul
push
and
mov
pop
add
inc
lock
and
jns
rol
cmp
mov
mov
sti
xchg
mov
mov
jmp
scas
loopne
lcall
es
in
jmp
pop
mov
aam
fwait
push
cmp
outsl
push
or
loopne
shrb
aad
mov
popf
and
push
insl
popa
out
mov
ja
and
mov
xchg
in
sbb
push
sbb
ja
mov
or
pop
enter
push
imul
and
add
add
imul
test
sub
in
jp
jno
push
scas
lds
out
mov
mov
rclb
jmp
hlt
push
sti
bound
lcall
fs
mov
inc
aaa
sbb
sub
add
hlt
xor
add
jbe
xor
stc
testl
and
mov
jns
or
in
test
lods
orb
mov
jb
fwait
in
mov
jns
lods
lea
push
imul
cmp
sub
fiadds
mov
dec
sub
mov
aam
shl
mov
jbe
xor
push
ljmp
dec
repz
loopne
push
add
and
and
jbe
bndstx
cmpsb
ror
push
xchg
sbb
push
xchg
sub
xor
xor
das
jns
pop
rcl
cs
test
mov
test
repnz
mov
into
inc
pop
daa
sti
mov
popa
jmp
rep
das
test
inc
jl
push
xchg
push
fnsave
popa
lret
jae
cltd
lcall
lea
fsubrs
push
repz
adc
pop
lcall
call
jnp
inc
sahf
gs
xchg
dec
stos
sarb
movsb
scas
inc
cmp
and
stos
xor
or
outsb
scas
mov
add
call
movsb
sbb
iret
inc
in
repz
push
repnz
inc
mov
adc
xor
orb
sub
jb
jle
pop
jnp
fcmove
sub
andl
mov
test
jae
push
add
or
les
pop
mov
push
inc
add
and
and
and
outsl
enter
testl
push
mov
in
xor
lods
adc
mov
in
or
in
jecxz
fwait
mov
fcmovb
adc
mov
imul
nop
arpl
fsub
jmp
inc
cltd
outsl
pop
push
sbb
mov
push
frstor
or
pushf
sbb
sbb
and
push
sbb
sbb
inc
fcoml
sub
mov
push
mov
out
fwait
jns
mov
dec
mov
lds
mov
out
insl
loop,pt
jl
xor
mov
push
mov
gs
orl
aam
imul
std
xchg
sbb
sub
or
xor
sub
aad
add
jl
loop
add
push
lahf
outsl
es
lcall
jge
adc
cmp
sbb
or
imul
sahf
loop
push
cmpsb
scas
repz
push
add
dec
pop
adc
pushf
adc
aam
movb
dec
push
ja
out
add
mov
or
outsl
pop
repz
lods
scas
inc
pop
dec
sub
and
xchg
lods
ss
and
dec
add
mov
mov
xchg
cmp
jne
shr
sub
sbb
xor
inc
mov
mov
add
ret
sub
insl
and
cmp
xchg
sub
adc
es
ret
add
aam
aaa
push
pop
fldenv
mov
mov
push
pop
inc
fidivl
ja
or
ret
xchg
adc
pushf
call
mov
xor
push
nop
mov
out
adc
ret
push
xchg
inc
jle
in
ds
lahf
addl
xchg
cmpl
sarb
pop
out
daa
mov
jg
and
adc
inc
and
stos
insb
jle
dec
pop
push
push
test
call
and
adc
mov
js
test
sbb
insb
fstl
mov
std
cmp
cltd
in
or
sub
test
pusha
or
jae
jmp
inc
jns
insb
pop
or
into
and
loop
mov
das
xor
rolb
imul
xchg
pop
jl
pop
hlt
mov
mov
lcall
sbb
pop
add
jmp
inc
inc
leave
xchg
jle
sub
or
jle
sbb
je
push
fwait
add
xor
inc
add
pusha
xchg
pop
aam
add
dec
je
add
adc
jnp
and
adcb
outsl
push
in
xor
jo
dec
aam
lret
mov
outsl
push
mov
ret
mov
out
inc
inc
ficompl
push
adc
in
jmp
orb
push
mov
push
dec
popa
call
mov
xorb
xchg
xor
mov
pop
rcll
scas
jb
mov
mov
mov
pop
or
xchg
pop
std
mov
lret
push
leave
xlat
inc
mov
xor
ds
mov
sbb
jo
mov
es
xor
loope
clc
sub
add
subb
int3
or
test
push
add
pop
sbb
xor
cltd
icebp
mov
cli
or
dec
jb
lcall
jl
stc
or
mov
jge
fisubrs
and
sub
dec
cmpl
dec
xchg
jg
sub
lods
int
xchg
inc
push
inc
jo
dec
sbb
jb
or
mov
ljmp
mov
fiaddl
pop
repz
mov
mov
xor
das
push
cwtl
gs
push
add
mov
mov
dec
out
adc
js
int
dec
or
fldt
fidivrl
jp
push
adc
lahf
mov
cld
dec
lock
leave
pop
inc
mov
loop
add
xchg
add
insl
loopne
sahf
xchg
pop
pop
in
push
gs
dec
fcompl
imul
push
push
cmpl
pop
outsl
hlt
cmpsb
add
clc
jecxz
stos
or
mov
sbbb
push
mov
mov
jbe
and
andl
outsb
test
sbb
cmpsb
pop
scas
jae
out
mov
jle
mov
lcall
cmc
jle
xchg
test
cs
sub
icebp
cmpsb
cld
ficoml
imul
push
push
sub
cmp
inc
lret
cwtl
ret
dec
icebp
mov
mov
adc
js
enter
dec
dec
sub
sti
fildll
jmp
push
lock
test
jl
sbb
enter
adc
xchg
pusha
rclb
out
jbe
stos
test
iret
mov
loopne
mov
mov
movsl
xchg
cmpsb
adc
test
lcall
inc
add
pop
push
daa
inc
scas
gs
daa
lcall
in
jp
lret
and
xchg
pop
push
or
fbstp
fimull
xchg
jns
fidivrl
ja
and
xorb
in
dec
xor
aam
test
inc
imul
mov
iret
shrb
add
sub
push
jecxz
sbb
inc
inc
mov
jne
fbld
sbb
loop
jp
xchg
scas
xchg
mov
xor
push
xchg
and
cld
in
or
cwtl
jp
jb
mov
imul
lds
inc
daa
adc
jmp
cmpsb
into
shlb
xchg
push
xchg
push
out
aas
jmp
rorb
mov
jb
dec
add
cmpsl
adc
xchg
mov
mov
dec
cmp
scas
cmc
sbb
or
out
adc
mov
aam
fwait
inc
dec
adc
sub
add
das
xchg
stos
scas
sarb
mov
sbb
out
pop
or
add
mov
sub
lret
imul
mov
mov
bnd
adc
adc
jl
fdivs
mov
sub
or
inc
js
icebp
add
or
sub
lds
shlb
xchg
in
fcmovnu
xchg
lea
iret
sbb
mov
add
addr16
cwtl
and
hlt
iret
cmpsb
es
or
push
xchg
fwait
movsl
lcall
ffreep
pop
cmpsb
dec
sbb
cmp
clc
inc
inc
mov
mov
push
dec
je
jmp
cmpsl
jno
and
jne
or
js
mov
mov
dec
notl
jl
and
jle
cmp
mov
ficompl
sub
rorl
shlb
mov
fstpl
or
mov
sbbl
inc
dec
or
cmp
cmp
sbb
nop
xorb
jns
mov
imul
and
pop
sbb
rcrl
pop
in
inc
scas
and
mov
cli
xlat
mov
mov
lret
push
in
data16
sti
lods
sbb
and
cli
pusha
sbb
mov
pop
and
push
push
scas
xchg
aas
mov
stos
imul
pop
add
xor
mov
cld
adc
or
and
push
and
pop
fldcw
mov
aaa
ficoml
push
insl
cmp
mov
xor
xchg
das
push
inc
sub
cmp
pop
cmpsb
jg
push
lret
add
sub
jecxz
adc
repz
out
push
lods
jno
vpaddsw
cmp
adc
and
dec
gs
lock
hlt
push
pop
mov
lret
cmpl
cmp
imul
jae
adc
mov
jbe
testl
cmc
or
rcrb
add
stos
in
jo
inc
cmp
sub
xchg
ffree
sub
sbb
adc
inc
push
out
sarb
or
fcoms
dec
testb
sbbl
xorl
mov
cmp
cmpsb
add
mov
lods
outsl
movsb
ja
xchg
add
into
dec
cwtl
iret
inc
sbb
sub
jmp
mov
push
pop
xlat
xor
add
repnz
adc
cmp
pop
inc
adc
xor
mov
dec
mov
cmc
adc
mov
mov
inc
xchg
add
movsl
pusha
add
mov
jb
pop
push
fwait
test
pop
push
out
out
push
int3
dec
jae
cmpsl
jmp
jg
cmp
push
lret
arpl
push
or
popl
addr16
push
loop
sub
insl
repnz
fimuls
push
sub
gs
dec
shl
fs
pop
cli
lea
ret
and
mov
jmp
mov
mov
sub
mov
xchg
xor
fwait
push
test
sahf
cwtl
cwtl
negl
js
cld
pusha
fsts
cmpb
dec
mov
add
adc
dec
mov
xlat
push
push
aam
das
add
out
sarb
inc
inc
xorl
xchg
jg
pop
jno
push
lret
or
lcall
arpl
daa
dec
mov
sbb
loop
mov
outsl
or
mov
and
fisubl
data16
orl
pop
cmp
ret
inc
lcall
out
jge
mov
jb
rcrl
inc
std
pop
fwait
testl
pop
pop
cmovp
push
popf
scas
fdivr
mov
push
adc
in
lret
daa
scas
xchg
inc
xchg
and
aam
sub
xor
hlt
sub
mov
or
icebp
or
push
xchg
es
sbb
cmpsl
stc
ja
inc
leave
fstpl
jmp
lods
fdivs
or
adc
mov
dec
xor
repz
push
addr16
mov
fstpl
push
jbe
mov
stc
mov
pop
ljmp
scas
aaa
jmp
xor
push
inc
xchg
push
push
lea
bnd
push
jo
or
fstps
mov
jecxz
xor
call
xor
adc
pop
jno
rolb
pop
cmpsl
addb
cmp
push
mov
int
xchg
mov
lods
or
pop
cmpsb
cmp
jb
int
xor
dec
neg
cmpsb
aad
push
sti
jne
or
scas
jbe
adc
cmp
fcompl
mov
pop
sub
outsl
pop
and
sub
inc
mov
sub
loop
sbb
xchg
inc
roll
push
jbe
lcall
jb
outsl
sbb
mov
rcll
add
es
dec
out
jp
scas
fistps
xor
int3
jae
cld
jb
push
inc
push
jmp
push
das
mov
cmp
dec
movsb
lock
int
jne
add
mov
jl
pop
jne
fwait
shlb
mov
leave
or
outsb
mov
cmpsl
ret
nop
and
ret
popa
and
or
push
inc
push
push
mov
xor
xor
adc
shl
mov
sbbl
out
pushf
ss
and
jbe
xor
scas
aaa
jb
scas
or
test
adc
cmp
xlat
enter
adc
mov
cmp
cmp
out
das
dec
sub
gs
ret
pusha
dec
mov
hlt
pop
ficomps
mov
pop
dec
pop
insl
leave
and
arpl
push
int
rcrb
scas
inc
and
push
aas
out
push
xor
push
cwtl
sbb
mov
mov
loopne
xor
push
xlat
sbb
ljmp
mov
mov
cmpsl
test
aad
decl
sti
mov
fidivs
mov
mov
pusha
mov
push
repnz
pop
jg
leave
clc
pop
and
fldl
clc
ret
push
add
sub
push
sub
or
mov
out
cmp
fwait
xchg
jmp
push
mov
pop
inc
les
test
sub
mov
cmpsb
inc
lcall
cltd
pop
outsl
and
sbb
insb
test
sti
mov
mov
add
or
pop
xchg
arpl
sbb
stc
fcoml
xchg
mov
xchg
adc
test
xchg
bound
sbb
mov
iret
mov
mov
push
or
xor
push
lods
les
and
clc
in
popf
scas
sub
add
stc
and
lret
iret
jnp
imulb
dec
sbb
test
push
je
int3
rorb
in
icebp
xor
test
fimull
cmc
fadds
cltd
nop
hlt
cltd
lock
in
arpl
pop
mov
or
inc
mov
shlb
xlat
xlat
leave
and
cmp
pop
dec
stos
js
sbb
sub
push
outsb
sbb
mov
and
cmpb
shl
push
push
lock
cmpl
lea
jbe
lds
cmpsb
imulb
pop
and
lahf
sbb
cmp
xchg
pop
insl
mov
push
rorl
cs
out
lds
mov
pop
cs
cld
and
and
add
subb
stc
imul
leave
mov
inc
or
cltd
adc
into
ret
addr16
push
and
cmp
fbld
jmp
xchg
outsl
mov
cmp
fstpl
shr
flds
lea
add
push
data16
mov
leave
loope
jnp
int
sub
jae
jns
pop
push
in
test
ret
fildl
jne
cmp
pop
sub
data16
pop
call
push
pop
jecxz
sub
add
sub
scas
maxps
in
pushf
adc
add
iret
filds
and
sti
mov
ljmp
mov
outsl
rcr
xchg
sbb
mov
mov
jo
hlt
fnsave
out
fisubl
xor
pop
pop
pop
mov
ja
pop
xor
pop
stc
out
dec
gs
pop
mov
dec
jp
push
mov
sbb
pop
jo
scas
jmp
add
and
out
flds
pop
jno
pusha
inc
cmp
notb
fdivr
cmp
scas
pop
lock
mov
ja
shll
mov
push
stos
les
ljmp
sub
fdiv
lahf
pop
pop
leave
mov
mov
test
data16
inc
hlt
imul
mov
sahf
push
sub
adc
insb
dec
enter
xchg
dec
pop
dec
xor
and
xchg
lret
add
adc
mov
testb
or
gs
lods
or
jmp
or
jge
mov
test
add
ja
dec
sbb
adc
mov
sbb
jmp
les
in
rclb
xor
xor
ljmp
mov
and
andl
jns
mov
je
test
sub
jae
jge
sahf
jbe
movsl
xchg
and
and
adc
cmp
call
into
hlt
inc
sbb
cwtl
pusha
aas
lret
imul
push
fimuls
mov
cmp
orl
jbe
xor
loopne
inc
sbb
cli
xor
cmpsl
lcall
ret
loop
adc
int3
mov
cmpsl
outsb
jl
sbb
and
mov
int3
sbb
sub
dec
xor
push
fwait
push
xor
xor
xchg
hlt
jno
sbb
pop
out
loop
mov
xchg
mov
dec
lahf
iret
jnp
push
hlt
popf
fldt
negb
xchg
cmp
les
arpl
jb
lea
dec
pop
insb
sub
inc
stc
mov
xchg
add
pop
cs
inc
ljmp
mov
je
cli
test
call
nop
pop
mov
sti
outsb
bound
insb
scas
push
sub
jge
cs
mov
mov
mov
mov
lahf
cmp
psadbw
addr16
rcl
sbb
loopne
cli
mov
mov
xchg
jle
or
add
pop
jae
mulb
sub
dec
cmp
mov
dec
jne
jne
cmpsb
inc
xor
imul
sahf
push
clc
dec
inc
in
or
xor
hlt
adc
sbb
lahf
test
adc
cmp
out
and
sbb
sbb
imul
add
ret
fs
jne
cmp
xchg
push
leave
mov
or
pop
mov
sub
fnstcw
lods
push
dec
lds
lds
test
pop
inc
jns
push
xor
mov
jmp
add
mov
dec
dec
and
js
sbb
mov
sbb
popf
mov
sbb
mov
lea
mov
push
add
dec
imul
mov
andb
dec
inc
xlat
sbb
sub
bts
int3
call
ret
cmc
fimull
aas
fisubrl
xchg
sarb
std
pop
mov
orb
push
cld
and
cmp
jns
sub
push
call
add
mov
popf
fadd
das
arpl
in
push
dec
clc
or
repnz
xlat
jmp
push
sarb
out
outsl
sub
add
mov
sbb
push
push
imul
pop
mov
xlat
leave
loope
pop
imul
sbb
push
jbe
cmp
add
dec
orb
dec
ret
sub
imul
mov
outsl
arpl
iret
dec
jg
pop
push
dec
inc
dec
mov
test
push
call
jg
in
xor
out
xchg
push
cwtl
fbstp
out
mov
mov
repz
sub
test
dec
mov
arpl
popa
xchg
repz
xchg
mov
and
lods
mov
enter
aad
cmp
sbb
dec
out
or
dec
pusha
dec
xchg
mov
mov
sbb
pop
sbb
xchg
sbb
stos
fcomps
enter
sbb
mov
push
dec
dec
repz
jmp
sar
adc
imulb
nop
das
adc
xchg
cmp
mov
mov
pop
or
lret
ss
mov
or
or
movsb
shl
nop
jns
imul
test
insl
mov
popf
fisubrl
mov
or
or
ljmp
movsb
icebp
and
popa
pusha
pop
dec
sub
cmp
xor
rclb
fists
aaa
out
mov
sub
inc
stos
cltd
pusha
jae
or
cmp
lret
mov
cmp
lock
xchg
roll
dec
xchg
loop
insb
inc
pop
cmpsl
jg
jb
jmp
idivb
inc
aaa
popf
enter
add
loop
inc
fdiv
mov
imul
outsl
cltd
xor
rcr
mov
imul
fcomps
xchg
mov
push
dec
movl
inc
adc
sub
pop
repnz
push
add
pop
aam
int
hlt
xor
jle
xchg
lock
xor
fistl
mov
mov
lret
mov
pop
int
push
in
add
mov
lea
iret
adc
cmc
aaa
das
pop
add
shrl
mov
data16
jb
mov
ja
xor
aaa
sarb
int
jle
fdivrl
fstl
jp
adc
insb
xor
hlt
xchg
in
xchg
rol
push
pop
or
jl
mov
notl
pop
push
ljmp
inc
into
fnsave
test
push
sub
bnd
jnp
xor
pop
shll
mov
sbb
pop
xlat
mov
in
push
in
dec
cmp
push
out
bound
lds
cmp
push
sarb
and
andb
loope
dec
repz
inc
or
jno
push
mov
adc
into
xchg
gs
stos
xchg
jae
xor
xchg
pushf
in
mov
imull
cltd
inc
out
push
mov
scas
stc
lds
pop
inc
outsb
in
not
mov
sarl
xlat
out
insl
cmpsl
sub
lods
push
dec
arpl
inc
dec
jne
xor
adc
in
or
jnp
icebp
add
mov
lcall
in
mov
xor
sar
push
lcall
mov
adc
xchg
dec
xchg
cmp
call
xchg
jns
cmp
stos
rorb
in
fsubrl
clc
add
clc
in
and
xchg
push
xchg
insb
add
cmpb
mov
mov
rcr
mov
cli
push
mov
stos
pop
or
dec
xchg
mov
xor
fistpl
lahf
js
repnz
fidivs
push
jns
fs
jne,pn
push
xchg
sbbb
jl
add
inc
into
loopne
data16
xchg
xlat
out
mov
adc
fildl
fninit
shlb
hlt
icebp
add
pop
push
fistl
insb
inc
jo
aam
pushf
push
roll
xchg
xchg
popa
idivl
int
xchg
push
ret
sahf
or
and
pop
fidivl
ja
adc
out
add
mov
mov
add
rcrl
dec
jp
cmc
mov
sbb
fs
lret
decb
cs
imull
loop
push
std
push
lock
push
and
call
test
aaa
pop
push
loopne
pop
rclb
inc
stc
pusha
fsts
push
inc
adc
add
lods
pop
jno
fadd
add
and
push
in
jp
push
ds
xchg
inc
andl
xor
in
fs
cmpsl
push
stc
insb
aam
jmp
cmp
xchg
xchg
mov
jne
sbb
xchg
sub
in
push
imul
mov
outsb
rorl
or
adc
ret
pusha
aas
cltd
xchg
addb
lock
mov
bound
enter
ss
fdivrs
enter
aam
push
sbb
inc
int3
inc
pop
mov
adc
pop
test
icebp
mov
jns
in
lock
lods
dec
mov
mov
mov
das
sub
rcrb
inc
hlt
pop
and
xor
pusha
dec
mov
adc
mov
push
push
jmp
dec
mov
int3
andl
fsub
cs
push
push
pop
daa
push
es
cmpsb
xchg
xor
dec
loopne
fstps
addr16
loope
mov
or
outsl
xchg
fcmovnb
sub
or
in
add
jmp
call
cmp
imul
inc
sbb
mov
push
cmp
cltd
roll
add
inc
addr16
pop
jp
aam
cmp
adc
mov
mov
shrl
sub
loop
xchg
push
test
jae
fistl
cltd
xor
outsl
out
out
pop
ljmp
push
pop
pop
fsubl
mov
xor
jns
cmp
pop
xlat
xchg
push
sbb
mov
insl
enter
arpl
ss
mov
nop
cmp
xchg
stos
xchg
or
pop
add
adc
adc
xlat
enter
stos
cwtl
aam
fdivrs
adc
jns
mov
mov
pusha
pop
aam
push
sahf
cmc
jl
xor
cmc
mov
push
dec
sub
lahf
test
das
cld
adc
in
dec
jo
sub
and
mov
shr
adc
adc
stc
adc
sub
ds
call
xchg
add
xchg
pusha
push
addb
ljmp
shr
fidivs
lcall
push
or
fimull
xchg
dec
lahf
mov
lcall
pop
fsts
rcrl
mov
aad
push
sbb
lret
or
leave
mov
in
mov
xchg
pushf
imul
scas
sti
jo
shl
mov
out
sub
addr16
adc
fdivs
pop
lret
ret
out
pop
out
or
adc
pop
and
fdivl
outsb
dec
pop
push
rcr
dec
pop
mov
push
inc
fildll
rorl
sbb
push
call
repnz
sbb
inc
xchg
jae
sti
insl
imul
repz
jne
cs
fwait
sub
cmpsl
fsubrp
in
fidivrs
add
dec
sahf
fwait
lcall
or
xor
cmpsl
sbbl
cli
iret
rolb
sti
std
fcompl
pusha
inc
sub
xchg
imul
cs
and
xchg
cmpsb
aaa
in
pop
mov
cmp
pop
lock
out
lahf
push
or
lods
hlt
bound
xor
loopne
adc
mov
fwait
and
adcl
cmp
fbld
out
push
jae
jmp
rcrl
mov
pop
sub
lock
cmp
addr16
and
and
inc
in
test
mov
fmull
xchg
pop
es
mov
jbe
leave
push
rorl
cmp
cwtl
mov
mov
incl
sbb
cltd
je
mov
loopne
jo
lods
inc
pop
fnstenv
mov
loop
dec
push
xchg
push
imulb
push
xchg
sti
inc
mov
xchg
mov
push
jp
rorl
mov
sub
adc
xchg
xchg
or
push
mov
adc
imul
xor
xchg
int3
cmp
and
xor
in
ret
aas
es
cmp
adc
ret
ret
jae
push
pop
mov
or
cli
or
ja
fnstcw
mov
fiadds
cmc
bound
rcll
je
cmp
xor
sarl
push
cmp
aaa
jb
mov
pop
dec
jecxz
mov
jle
bound
xchg
mov
sub
dec
out
clc
xchg
inc
sbb
sub
lds
mov
outsl
hlt
daa
bts
fmull
mov
sbb
push
cwtl
mov
add
jg
nop
jmp
es
push
inc
popa
out
lcall
sub
and
mov
push
lods
jge
insb
loop
cmp
sub
clc
in
push
es
mov
inc
lods
mov
push
pop
push
add
sti
bound
sbb
mov
sbb
xchg
into
inc
gs
ds
cmp
pop
cmpsb
pusha
and
lock
cld
add
cltd
lcall
push
cld
dec
sbb
lret
adc
daa
and
sahf
push
std
clc
ja
push
mov
or
lea
xchg
push
xor
push
int
xchg
adc
dec
hlt
jnp
mov
push
sub
jae
stos
push
je
pop
pop
sbbl
mov
shll
inc
push
test
ljmp
inc
sbb
mov
idivb
dec
lret
ja
or
ljmp
outsl
mov
and
jle
and
lcall
std
pushf
mov
repz
mov
jnp
scas
cmp
pop
mov
js
mov
jbe
lret
pusha
test
adc
lea
leave
sub
mov
xchg
xchg
push
inc
stc
repz
xor
xchg
fs
aaa
insl
adcb
test
int
out
add
adcl
add
sub
test
and
sbb
jmp
in
jp
clc
add
sbb
out
dec
xor
leave
cli
sahf
jg
jnp
cmp
sub
push
mov
and
gs
leave
rclb
mov
xchg
sbb
popf
ljmp
aas
sbb
hlt
xchg
fcoml
mov
insl
stc
and
sbb
mov
push
inc
out
cltd
ret
pop
shll
int
xchg
mov
fcompl
lea
out
dec
iret
inc
dec
pop
push
push
shlb
insb
fcomp
and
lret
rorl
add
push
xchg
mov
add
ja
xchg
add
adc
dec
xorb
test
cs
mov
and
xchg
nop
loope
cmp
dec
mov
subl
add
push
sub
addr16
cltd
xor
xchg
enter
pop
ret
jecxz
popa
sarb
pop
cs
sub
call
pop
push
lret
mov
or
pop
mov
andb
shlb
jns
dec
std
cmpb
fwait
and
mov
mov
mov
inc
inc
stos
or
cmp
xorl
mov
jbe
adc
jmp
jns
not
cmp
stos
insb
push
xchg
gs
lods
pusha
movsb
mov
into
jbe
mov
and
outsb
pushfw
inc
mov
jno
pop
in
xchg
pusha
add
fisubl
and
sub
adc
inc
rolb
or
fucom
jp
or
call
je
lret
mov
loopne
lcall
mov
dec
mov
stos
out
cmp
lods
xor
fidivrl
pop
push
fisubs
icebp
cmp
dec
iret
add
xor
cli
test
clc
shlb
filds
adc
xlat
call
icebp
push
add
and
lret
inc
xchg
lahf
mov
lsl
cltd
dec
mov
aas
imul
push
jp
cs
pop
mov
pop
and
insl
aam
aas
push
fcoml
sbb
movsl
out
mov
push
outsl
dec
outsl
sahf
push
leave
push
testb
dec
iret
arpl
xor
popf
or
dec
or
xor
xchg
xchg
fimuls
pop
mov
cmp
lods
sub
repz
into
mov
mov
int
pop
fiaddl
fsubrl
aaa
clc
jnp
push
mov
loope
popa
pushf
in
cmpsb
cs
mov
push
add
mov
mov
mov
repnz
scas
pop
test
sub
push
shlb
dec
sub
adc
cmp
fmuls
lods
mov
push
incl
xor
cwtl
add
pop
lea
in
imul
out
xor
movsl
sbb
js
dec
ficoms
stc
jns
adc
lahf
scas
scas
out
out
sarl
cmpsl
adc
adc
bound
cmp
mov
je
xchg
loop
fwait
daa
dec
bound
and
or
mov
inc
add
dec
sbb
add
mov
loop
cmp
mov
movsl
cwtl
popf
add
stc
out
sub
inc
aas
add
lret
or
push
ror
fmulp
mov
pop
or
test
clc
int3
cmpsl
pop
stos
shrb
jg
cmp
inc
xchg
fdivl
out
imul
xchg
cmp
sbb
rolb
mov
into
hlt
and
mov
ret
push
jne
xchg
sub
int3
pop
sbb
iret
leave
mov
cmp
cli
pop
cli
sbb
js
and
mov
loope
pop
cmp
mov
movsb
cmp
pop
add
push
lds
dec
push
xlat
pushf
out
flds
pop
movsl
sbb
les
cmpsb
test
push
paddw
mov
rcll
push
aaa
shll
insb
mov
jo
sub
jmp
adc
rcl
jecxz
int3
daa
mov
or
nop
inc
jmp
sub
lret
imul
jnp
adc
mov
mov
rcr
sbb
mov
xchg
arpl
sti
push
xchg
inc
sub
scas
movsb
inc
sbb
bound
add
xor
repnz
jge
stos
xor
icebp
lods
mov
iret
push
addb
in
sbb
dec
push
cmp
bound
sbb
or
stc
jae
jp
jns
adc
icebp
pop
and
aas
arpl
jo
jne
leave
inc
int
lahf
ja
pop
adc
xchg
ret
cmp
mov
push
jge
iret
push
stos
push
out
mov
push
inc
testb
and
jp
xchg
adc
aaa
xor
add
testb
out
xchg
jle
mov
pop
adc
dec
jmp
xor
mov
xor
or
sbb
xchg
mov
aad
lea
andb
xchg
jno
lcall
je
repz
push
cli
scas
inc
decb
fdivl
and
iret
jmp
ss
push
adc
xchg
pushf
fistpl
insb
xlat
daa
pop
and
push
lcall
pop
sbb
rorl
lds
loopne
sarl
add
pop
imul
out
test
in
dec
or
imul
sbb
push
mov
test
xor
dec
ret
jno
inc
in
add
xchg
leave
mov
stc
dec
cmc
test
inc
pop
xchg
sub
ja
xor
cmp
pop
and
testl
es
adc
pop
inc
push
in
stc
outsl
lea
and
lret
addl
jne
mov
xor
icebp
dec
jo
jmp
push
mov
dec
fists
rcrb
xor
out
xchg
iret
jge
or
push
mov
mov
mov
mov
jns
or
jmp
cltd
push
out
inc
lds
xor
cltd
cmp
iret
jb
xchg
or
mov
in
xor
ljmp
in
mov
sub
xchg
sbb
rcll
sub
xor
incl
cmp
lea
movsl
dec
popf
pop
add
insl
xor
xchg
adc
add
mov
push
ret
clc
in
push
push
xlat
les
repz
sbb
fwait
ds
mov
cli
fiaddl
stos
xchg
insb
xchg
jno
adc
push
in
cwtl
inc
inc
ja
and
jb
push
shrb
cmova
adc
rorl
and
sbb
ds
mov
pop
pushf
ljmp
pushf
push
xor
push
negb
mov
stos
mov
rclb
shlb
cmpsb
inc
ds
shl
cmp
sbb
add
cmp
or
xlat
ror
aas
test
cmp
mov
jp
push
lcall
jo
movsb
xchg
ret
arpl
addl
push
and
push
push
loopne
jge
dec
ja
test
add
mov
lods
xlat
sti
pop
loopne
and
sub
or
mov
out
insl
push
pop
stos
xlat
adc
sbb
cwtl
xor
xor
sub
inc
in
push
iret
xor
out
xlat
cmp
dec
scas
or
ljmp
fisubrs
gs
in
jnp
jo
lods
mov
xor
or
xchg
scas
sahf
sub
mov
lcall
jmp
or
pop
sbbl
adc
jne
lret
adc
jp
loop
in
xor
fnstenv
mov
sub
fwait
int3
inc
pop
incl
dec
pushf
jae
xchg
pushl
mov
je
mov
mov
pop
stos
test
test
movsb
dec
int3
sbb
mov
jmp
test
mov
mov
adc
shrb
sarb
lods
xchg
in
loop
jns
jg
out
loop
jae
lods
xchg
jecxz
fcoml
pop
or
push
inc
iret
repz
dec
push
lret
add
aas
out
lcall
sub
js
aam
or
sarl
and
mov
gs
dec
fisubrl
in
mov
adc
es
dec
add
cltd
pushf
adc
inc
jmp
ljmp
aas
call
mov
rorb
push
pop
andl
jae
stos
xchg
dec
add
test
into
call
xor
push
xlat
xor
out
sbb
clc
lods
pop
inc
xor
mov
insb
les
sub
mov
or
cld
cmp
push
cmp
inc
push
jne
mov
adc
das
daa
stos
xchg
test
clc
push
pop
adc
popa
mov
fdivr
jp
sub
ss
cli
aaa
lds
push
pop
dec
inc
fldl
adc
mov
test
pop
cs
hlt
shll
ret
adc
dec
movl
int
and
cltd
push
clc
and
jbe
rcl
cmc
or
add
scas
cmc
cmc
push
shlb
lock
mov
addl
push
int
test
ret
mov
insl
xor
call
pusha
js
adc
lds
in
jge
leave
or
xchg
mov
push
sbb
test
xor
jg
push
loop
xor
push
ds
stos
popf
jmp
in
insb
cmpsl
js
adc
sbb
sbb
sahf
orb
xor
es
hlt
sub
jb
shrb
mov
daa
dec
int
sub
adc
mov
xor
xor
dec
enter
test
cltd
pushf
xchg
mov
sbb
ljmp
lahf
add
cmp
xchg
xchg
addr16
sar
and
pop
nop
fnstcw
pop
out
lcall
outsl
les
popf
cmc
pop
push
add
int
jge
fstps
dec
and
mov
push
or
repnz
cs
add
rclb
icebp
lea
push
and
or
pop
lcall
popf
cmp
push
cmc
shll
push
out
mov
pop
pop
inc
pop
repz
sbb
and
inc
roll
cli
mov
pop
adc
xor
or
and
inc
pop
mov
mov
cmp
and
ret
imul
pushl
rcr
cld
mov
dec
sub
push
mov
pusha
xor
ffreep
xor
dec
sbbl
inc
jle
rolb
pop
test
insl
mov
loopne
outsl
and
iret
int
lods
jbe
xor
mov
push
mov
sbb
rcrl
int3
cwtl
inc
add
les
ja
hlt
out
arpl
pushf
pop
cmp
pop
xor
jl
js
add
js
push
add
shlb
mov
test
sub
mov
iret
mov
lods
stos
jge
sbb
aas
outsl
pop
xchg
mov
lea
mov
aam
mov
mov
cmp
or
and
jmp
inc
fsubl
call
insb
mov
mov
into
movsl
mov
xor
sbb
subl
sub
fisubs
aad
sub
in
jmp
mov
mov
shlb
out
subb
js
insb
cli
pop
out
add
fld
out
add
inc
mov
ffreep
xchg
and
test
lods
andb
repz
lahf
jnp
js
push
int
xchg
movsl
jns
adc
pop
test
inc
adc
call
loopne
mov
je
fcoml
sbb
jl
aas
or
lret
mov
mov
push
andb
xchg
push
pop
jmp
add
adc
ja
xchg
inc
cmp
rcrl
mov
cmp
sbb
xlat
inc
inc
mov
sbb
call
test
lock
xchg
jmp
rcl
aam
mov
lret
popa
arpl
push
jmp
pop
pop
loopne
in
mov
popa
scas
adc
xchg
popf
ds
push
testl
cwtl
arpl
imul
pop
mov
pop
jg,pt
pop
rol
add
aaa
mov
pushl
add
mov
inc
sahf
mov
sbb
insl
dec
cmpsl
fcoml
fsubp
inc
ret
rorb
cmp
mov
scas
push
scas
fs
push
push
xor
lods
pusha
jbe
sub
adc
sahf
repz
std
lcall
imul
pop
lcall
mov
push
pop
jmp
pushf
jae
repz
or
aas
into
fnstenv
adc
popa
jo
add
stc
pop
sbb
cmpsb
fcomi
out
clc
jl
push
mov
addr16
sahf
add
dec
xor
iret
xchg
or
jns
inc
dec
dec
ret
sbb
push
sub
loope
loop
subb
xorl
lret
jo
jmp
sub
add
push
dec
adc
das
imul
push
inc
xchg
cli
mov
movsb
mov
xchg
negb
addb
test
cmc
sub
aas
mov
push
mov
imul
fwait
int3
rep
cmp
cwtl
ja
mov
cmp
lods
clc
fdivp
mov
mov
and
cmpsl
test
negb
fwait
jae
mov
sub
mov
mov
dec
push
jnp
xor
stc
sbb
mov
out
mov
cli
mov
sub
pop
hlt
mov
and
loope
xchg
inc
stos
jmp
out
push
movsl
push
js
mov
dec
stc
cmp
arpl
roll
inc
and
sahf
fucom
mov
xor
test
pop
push
lea
dec
lds
pop
mov
dec
gs
pushf
ds
fdivr
pop
ret
mov
insb
mov
pop
lcall
sbb
push
test
jnp
nop
int3
cmpsb
mov
js
clc
fidivrs
mov
add
mov
dec
test
add
cltd
sarl
out
rcrb
add
fwait
cli
cmp
leave
roll
test
sbb
jge
rcrb
add
popf
adcb
pop
test
aas
add
xchg
add
das
inc
jecxz
daa
sub
xor
pusha
jo
cmc
movsb
mov
repz
bnd
push
jae
sub
or
insb
xchg
andps
add
call
mov
sahf
das
les
jmp
mov
sbb
rclb
dec
jb
test
mov
pop
ss
jge
add
mov
insl
push
repz
int3
lock
pop
scas
out
nop
ret
xlat
fsubrs
mov
xor
sbb
xlat
sbb
xor
xchg
aaa
mov
fstpt
lods
mul
pop
mov
gs
movl
es
das
or
aas
pop
cmpsb
lods
jne
fbstp
lods
xor
into
addr16
dec
xchg
jb
vphaddbw
jl
jbe
int
jle
inc
sub
stos
cmc
add
jmp
dec
and
mov
test
dec
push
insl
or
dec
les
ljmp
shl
loop
les
inc
adc
popa
lds
mov
dec
enter
inc
dec
mov
test
xchg
fiadds
cli
cmp
inc
in
sub
push
orb
loopne
pop
dec
jnp
imul
xchg
fcomi
adc
fisubrl
xchg
adc
mov
inc
out
insb
xor
jo
push
imul
daa
enter
jae
push
out
add
sbb
outsb
sbb
and
sbb
int
mov
pop
inc
int3
js
sub
cmp
mov
push
insb
pop
inc
ficomps
mov
test
mov
jmp
sbb
push
repz
fs
pop
stos
es
jo
pop
jl
addr16
mov
out
add
es
jp
mov
mov
das
cmpb
test
fsubs
push
and
cs
popf
sub
push
adc
fidivrs
sub
sbb
cld
pop
jbe
xchg
cwtl
add
and
in
mov
xor
pop
pushf
adc
xor
ss
fucomi
imulb
test
and
into
fisttpll
pop
int
cmp
mov
pushf
inc
in
jge
mov
jne
pushf
push
pop
mov
and
out
sbb
outsl
daa
pop
cmp
xor
pop
or
pop
push
addr16
push
popa
cmp
add
enter
pop
jl
cmp
mov
mov
sub
push
inc
sti
mov
mov
push
das
inc
xchg
es
sarb
pop
pop
fbld
bound
out
fwait
fs
push
aad
xlat
mov
loop
mov
sbb
lret
inc
int3
pop
sahf
jmp
adc
push
out
mov
in
pop
push
std
add
or
cmpsb
test
test
mov
mov
inc
inc
mov
inc
enter
inc
push
ficoms
jbe
mov
or
jo
lock
ficoml
fadds
sub
stos
sahf
jo
jmp
cltd
out
mov
aad
add
negl
arpl
jae
fucom
insl
xchg
adc
and
adc
popf
push
lret
jns
lods
cmpl
mov
sub
in
je
jno
add
push
push
loope
in
sub
sti
jge
and
leave
add
and
ljmp
int
adc
es
mov
arpl
mov
pop
cmp
ss
dec
shlb
ds
or
pop
pop
cmp
adc
cltd
mov
cmp
xchg
insl
rorb
and
aas
cs
dec
adc
or
push
add
jns
sbb
out
lock
dec
xlat
jmp
xchg
pop
mov
mov
xor
lret
adc
decl
mov
out
inc
repz
icebp
scas
push
adc
sbb
mov
pop
xchg
imul
shrb
test
inc
lret
pushl
jnp
insl
mov
and
adc
hlt
mov
jo
int3
stos
inc
jge,pt
int
je
sub
pop
cmp
jns
jne
add
dec
sub
cwtl
cmp
mov
sub
jns
lea
push
sub
xor
int
inc
les
adc
push
cmc
xor
out
jo
sub
rorb
mov
jns
orl
inc
dec
dec
mov
iret
dec
add
mov
cltd
cltd
sub
es
test
bound
sbb
and
dec
imul
lahf
cmp
lods
mov
pop
push
mov
rcll
aad
mov
sub
call
or
aas
jo
and
lods
sbb
insl
mov
cltd
push
xor
rorb
es
hlt
cmp
imul
addb
add
cmpsb
iret
mov
call
cmp
test
sbb
sub
cwtl
lds
pop
cmp
bound
xchg
xchg
lea
cmp
jmp
scas
push
dec
fcoml
pop
mov
xchg
cltd
gs
sub
xchg
arpl
nop
dec
enter
push
clc
scas
add
mov
cmp
jne
leave
jnp
ja
imul
filds
cltd
mov
add
cmp
push
mov
sbb
mov
mov
outsl
iret
fs
mov
ror
jne
aas
sub
bound
push
jp
jge
mov
sub
push
and
jmp
cmp
dec
push
in
dec
cmp
cli
xchg
pop
jne
jecxz
cld
mov
pop
sbb
and
outsb
into
int3
and
xor
xor
xlat
in
psubsb
jle
test
push
pop
dec
fs
pop
add
inc
outsb
cmpsl
and
aas
or
xlat
jmp
xchg
hlt
fisubs
test
ja
in
addr16
lods
enter
imul
ljmp
xchg
loopne
incb
pushf
loope
mov
in
xlat
jnp
imul
xor
and
push
jae
andl
pushf
mov
repz
xor
mov
add
clc
mov
movsb
xor
loope
iret
dec
xor
pop
adc
jnp
or
sub
in
pop
push
test
push
xchg
test
rolb
loopne
repnz
das
mov
push
sub
cmovnp
in
rorl
dec
jmp
aad
fidivrs
lret
mov
je
nop
mov
push
arpl
nop
mov
and
lret
xchg
les
adc
sbb
shll
fsts
add
fcmovnb
jl
push
addr16
mov
flds
test
dec
cmp
pop
pushf
sbb
mov
test
lods
dec
xor
push
sub
xchg
dec
lret
mov
cwtl
mov
pop
sub
mov
mov
mov
mov
jle
mov
subb
push
and
sub
imul
mov
test
cld
sar
add
xor
int
xchg
push
and
shll
add
popa
push
sarb
pop
aam
pop
jl
mulb
jno
and
jp
jae
xor
lods
add
decl
in
daa
sbb
and
xchg
add
stos
paddusw
iret
jg
xor
inc
xor
outsl
or
ret
or
insb
sahf
mov
cmp
gs
mov
and
out
and
insb
sbb
sub
mov
pushf
xchg
mov
lods
xor
int
mov
aas
loop
inc
shlb
iret
gs
mov
lea
add
cli
test
jne
lock
sbb
pop
repz
and
pop
loope
fsubl
xchg
or
imul
cmpsb
scas
lea
js
push
mov
dec
cmpsl
mov
mov
sub
daa
dec
push
cli
push
ret
push
push
mov
ss
mov
aaa
xor
loopne
pop
sti
mov
jnp
push
out
add
mov
jnp
xor
pop
mov
xor
arpl
sub
xchg
sti
adc
xor
scas
aad
cmp
lahf
push
push
aam
rcll
imul
bound
pop
mov
or
xchg
mov
incl
cmp
in
jne
mov
outsl
stc
xchg
cld
add
and
imull
xlat
lcall
lods
and
xor
cmc
in
inc
fdiv
test
or
cs
popa
ret
dec
push
push
adc
sub
out
das
jmp
test
mov
xchg
ljmp
sbb
xor
jmp
push
arpl
jge
sbb
or
je
mov
roll
mov
xor
imul
adc
dec
lret
and
sti
int3
mov
nop
aam
das
dec
loope
xor
xchg
insb
stos
daa
out
cli
daa
addr16
in
adc
insb
and
dec
mov
stos
jb
rorb
mov
pop
cs
movsl
test
jg
fisubrs
testb
shr
lods
scas
mov
adc
loope
mov
inc
cmpl
test
lods
movsb
sub
xor
adc
sti
fnstenv
xchg
push
adc
cmp
icebp
mov
stos
into
cmp
out
xor
hlt
outsb
pop
fisttpl
and
xor
jge
ljmp
dec
xor
ljmp
inc
push
das
lds
ret
stc
aam
dec
pop
xchg
outsb
push
adc
aad
clc
fdivrl
ficompl
sbb
xchg
in
out
arpl
lea
mov
mov
mov
imul
mov
ficoml
cwtl
sub
mov
adc
sub
adc
sub
xchg
adc
pop
repz
and
xor
iret
cmp
rorb
sbb
fs
mov
cs
cmp
subb
test
insb
push
xchg
add
movsl
lods
movsb
fisubs
sti
push
pop
dec
xor
add
mov
mov
neg
mov
pop
or
xchg
lods
push
js
push
push
cmp
popf
lcall
mov
insb
pop
adc
xorb
arpl
push
mov
test
and
mov
popf
mov
repnz
jmp
inc
dec
into
xchg
push
lock
iret
sbb
push
stc
adc
fistpl
fs
lods
pop
xorl
dec
dec
push
cmp
and
js
cmp
js
pop
enter
rclb
cmpsb
xor
mov
or
into
pop
mov
cmpsb
inc
jmp
test
add
inc
insb
and
or
les
mov
adc
sbb
jno
clc
or
cmp
xor
stc
inc
stos
sub
popa
scas
pop
sbb
aam
cli
neg
xor
fstps
sub
stos
push
pop
lret
jb
call
adc
sbb
mov
pop
adc
cmp
pop
or
mov
hlt
dec
add
pop
es
mov
sbb
inc
int
shld
pop
cs
and
fincstp
ret
push
imul
push
das
mov
enter
fs
daa
movsl
pop
sbb
pusha
mov
popa
push
fldz
and
outsb
popa
int3
or
dec
add
inc
enter
leave
adc
loopne
aad
or
movsb
jb
sti
cmp
scas
sub
fistpl
sub
cmp
and
cmp
rcll
pop
outsb
add
push
mov
shl
pop
js
mov
mov
pop
and
dec
daa
mov
jnp
or
cwtl
mov
leave
jnp
lods
mov
or
fucomip
jp
pop
xchg
in
inc
jae
adc
xchg
lret
icebp
mov
push
call
add
xchg
mov
xor
rcrl
int3
js
cmp
fs
pop
jns
lret
in
sbb
and
test
jbe
test
xchg
sti
nop
iret
mov
mov
mov
push
push
outsb
aas
mov
cwtl
pop
loop
outsb
xchg
cmc
pop
test
lea
pusha
out
sbb
into
mov
jg
mov
mov
shll
pop
push
xchg
adc
lahf
addr16
mov
jecxz
shlb
clc
cmp
cmp
out
pop
cmp
lea
push
test
push
sti
mov
cmpsl
mov
pop
mov
xchg
outsl
pop
adc
ss
mov
jnp
sbb
iret
jb
or
ret
xchg
cmp
mov
push
mov
cwtl
es
push
call
es
int
fisubrs
adc
mov
jns
call
das
enter
js
jne
cs
xchg
rcll
mov
je
or
jge
or
and
repz
or
aad
push
scas
loope
bnd
pop
iret
sub
sbbl
fisttpl
test
mov
mov
fwait
imul
xchg
pop
stos
enter
cmp
out
mov
adc
fdiv
mov
and
clc
sbb
xlat
cmpsl
leave
test
or
test
and
icebp
jno
lret
sbb
out
sub
jge
lret
loope
imul
sub
dec
xchg
out
jge
stc
out
mov
jmp
jge
in
vdivps
xlat
xchg
lret
inc
push
or
pop
xchg
fisttpl
fdiv
daa
mov
out
xchg
jp
sbb
xchg
sbbb
jp
pop
imul
pop
hlt
push
clc
push
mov
scas
iret
xor
and
mov
cmc
inc
aam
nop
pop
fcomps
push
fildl
inc
scas
pop
sub
jae
sar
scas
dec
mov
push
mov
mov
fidivl
cld
xchg
nop
jecxz
arpl
or
cmp
sub
sbb
mov
sub
jbe
mov
jle
popa
jno
lods
out
movsl
int3
and
jns
dec
adc
xchg
push
mov
lret
rcpps
dec
push
dec
outsl
outsl
xorb
loop
mov
lret
in
lret
sub
imul
xchg
fdivrl
test
scas
insl
xchg
outsl
aam
ja
stos
inc
mov
mov
lock
dec
movsl
daa
out
jne
movsl
daa
popf
mov
fbld
cmp
pushf
fisubs
hlt
push
mov
xchg
mov
xchg
or
xchg
cmc
pop
add
cld
push
xor
test
movsb
out
push
pusha
pusha
cmp
aad
enter
inc
in
adc
aaa
test
data16
mov
shr
sub
fisubrs
int3
xlat
pop
sub
hlt
or
mov
pop
out
fstps
xor
push
insb
cs
call
sub
rclb
lds
icebp
rorb
and
mov
mov
lret
xchg
and
popf
out
lcall
lahf
adc
mov
pop
cs
outsb
lods
mov
and
out
xchg
add
insl
mov
dec
int3
jbe
mov
mov
dec
insl
lods
test
push
mov
xor
and
repz
mov
das
and
fidivrl
mov
pop
sub
ficompl
sbb
sbb
rcr
lret
and
sahf
pop
repz
and
repz
mov
outsl
mov
scas
rorb
pop
cld
loopne
or
adc
jno
inc
ja
adcb
jp
les
iret
dec
aam
loopne
jnp
fstps
push
aam
xor
jecxz
xor
les
aas
lods
or
in
sti
cmp
inc
sbb
aas
adc
add
out
pop
cmp
pushf
add
fprem1
mov
and
dec
inc
jo
jns
push
clc
sbb
adc
push
dec
and
mov
pop
stc
jae
fstps
lcall
sbb
jmp
loope
mov
aas
mov
andl
fistpll
ljmp
pop
jecxz
es
push
add
cwtl
mov
cwtl
adc
sub
test
arpl
inc
dec
mov
fstpt
adc
movsl
pop
push
mov
mov
mov
inc
sbb
enter
jg
dec
popf
push
adc
lcall
fmulp
pop
bound
add
testb
icebp
out
aas
call
add
cmp
stos
mov
dec
pop
loop
dec
push
mov
int3
jle
add
icebp
adc
adc
orl
bnd
adc
fisubrs
add
pusha
lea
push
ljmp
and
in
add
test
aam
jle
shll
insb
cmp
mov
mov
sub
gs
lret
add
in
push
and
xchg
das
pushf
lods
push
jp
jno
cmp
or
test
mov
std
xchg
js
cmpsl
jns
shll
cld
testb
or
ljmp
inc
push
cmp
mov
mov
jl
adc
inc
lahf
sub
je
xor
fdiv
lods
add
out
arpl
mov
mov
pop
or
mov
push
in
cltd
lret
sti
cli
xor
popf
and
addr16
lret
push
test
push
stos
pop
push
lods
jg
std
inc
arpl
xchg
inc
div
cmp
in
daa
pop
insl
loopne
outsb
ja
ja
push
adc
sub
jnp
shl
icebp
xchg
sub
add
in
out
and
sub
xchg
int
or
mov
or
sub
jecxz
inc
nop
xlat
mov
ss
sbb
and
pop
cmp
iret
push
loope
loopne
aam
jno
clc
cld
mov
fs
dec
and
lock
mov
sub
add
addr16
insl
sub
sub
shll
ret
or
lret
mov
dec
ficompl
push
ss
add
jmp
jmp
mov
xchg
and
adc
adc
inc
nop
sub
enter
xor
out
mov
int3
xchg
push
sub
ja
cmp
ret
sbb
pop
and
loopne
ficoms
jo
int
sbb
test
push
arpl
add
mov
ss
and
adc
xchg
mov
test
and
inc
sbb
jns
or
mov
outsb
mov
in
xchg
lods
inc
rolb
sub
js
xor
xchg
and
sbb
xor
sti
xorl
mov
aaa
adc
jmp
pop
and
cltd
push
or
xlat
cmc
dec
jp
enter
rclb
mov
mov
fsubrl
and
push
mov
xor
push
and
nop
add
adc
je
cmp
aam
pushf
shll
cltd
mov
mov
sbb
rorb
mov
mov
aaa
push
xor
mov
mov
add
inc
push
mov
xor
stos
dec
or
jl
push
mulb
xchg
xchg
dec
out
mov
leave
mov
test
pop
pop
sarl
stos
jmp
into
push
xchg
push
clc
adc
arpl
mov
dec
stc
ss
mov
mov
and
loopne
adc
outsl
jo
inc
adc
xor
stos
and
and
hlt
mov
sbb
jp
mov
ljmp
arpl
mov
sti
mov
fildll
pop
push
in
or
push
inc
ja
out
ja
pop
sub
adc
filds
rorl
stos
and
and
imul
add
movsl
dec
lea
dec
sub
test
mov
rclb
call
push
mov
cmp
lahf
push
insb
pop
rorl
shrl
lcall
jg
das
mov
pop
or
pop
rcrl
adcl
inc
popl
xchg
mov
cmpsl
fs
sub
fcoml
xchg
add
inc
adc
repz
cmp
xchg
pop
xor
inc
lock
pop
xchg
xchg
mov
jbe
adc
cmc
and
inc
add
push
dec
les
jo
hlt
cmp
inc
in
fmuls
cmpsb
cmpsb
push
popa
mov
enter
jae
xor
rolb
add
push
xor
pop
cli
nop
mov
jnp
mov
cmp
sub
pop
je
in
bound
ds
dec
sub
stc
or
inc
xor
xchg
fisubl
comiss
loopne
pop
lahf
pusha
sbb
pushf
test
mov
xchg
pop
pop
in
out
ret
xchg
inc
rorl
mov
adc
sub
stos
gs
push
xor
hlt
pop
fcmovbe
cmpsl
repnz
inc
pop
and
push
test
addr16
out
repnz
jge
and
pusha
inc
xor
and
xchg
inc
loope
mov
or
adc
idiv
je
ds
lds
rcll
sub
push
and
jns
or
lods
aad
popf
add
sbb
sub
push
faddl
sbb
repz
fbstp
popa
sub
xchg
shr
pushf
test
or
enter
add
mov
xchg
pop
andnps
jbe
popa
xor
add
jnp
or
jp
xchg
divb
xchg
mov
iret
lds
call
jbe
fwait
imul
add
sub
xor
xchg
pop
data16
dec
pop
mov
inc
sbb
cmpsl
mov
pop
insl
imul
testb
jo
int3
push
jl
scas
push
aas
lret
int
test
jge
imul
pop
cli
xchg
aad
insb
dec
adc
jge
sti
insb
ret
inc
in
cmp
mov
fwait
leave
mov
add
clc
shll
xlat
lret
jns
into
sar
sbb
mulb
jno
mov
repnz
icebp
pop
fcmove
push
xor
mov
sbb
jl
ret
into
ds
ljmp
sbb
xchg
push
adc
inc
mov
aaa
stos
xor
mov
enter
test
add
cmc
test
rep
ret
outsb
ficomps
in
mov
cmpsl
push
mov
and
stc
scas
in
fisubrl
insl
jb
fcom
test
arpl
dec
adc
mov
jp
dec
jmp
in
mov
lret
mov
rclb
xchg
and
ret
dec
popf
mov
test
xchg
cwtl
js
xor
das
jno
gs
std
push
mov
sub
and
dec
ret
xchg
in
test
es
fstpl
repz
or
add
cmpsb
outsb
out
mov
lods
mov
fdivl
adc
test
pop
push
push
add
seto
fsubrl
cmpsl
push
sub
xchg
add
xchg
std
jb
xchg
in
add
or
dec
sbb
cli
and
andb
push
mov
pop
add
orb
sbb
push
addr16
mov
push
test
int
and
adc
aam
cld
lret
leave
repnz
xchg
sahf
lahf
inc
inc
jno
fcmovnu
push
mov
lahf
pop
mov
test
dec
in
btc
inc
shll
jl
mov
xor
fbld
mov
xor
movsb
sub
in
je
rcll
repz
call
bound
gs
cmp
imul
add
fidivrl
cmc
mov
loop
dec
subb
test
and
cmp
pop
push
loope
fcoms
mov
jo
adc
scas
rolb
mov
out
sub
jge
lret
adc
xor
mov
sub
push
dec
scas
jb
fidivl
gs
xchg
in
in
mov
push
addps
cld
ja
in
stos
mov
pop
inc
dec
clc
shrl
mov
cmpl
inc
xor
out
add
inc
jge
roll
fiadds
mov
das
repnz
lock
sbb
adc
push
ret
mov
js
gs
or
pop
xchg
sub
or
lcall
fcomps
add
xchg
outsl
inc
mov
in
push
xchg
loop
sahf
lret
cltd
cmpsl
mov
cmp
stc
pop
cmp
inc
sub
aad
xchg
lea
lcall
lds
mulb
inc
popf
insb
push
xor
aaa
hlt
movsb
jns
mov
push
mov
mov
gs
popf
daa
pop
hlt
cmp
adc
addr16
pop
push
xchg
mov
push
mov
xor
jne
mov
imul
mov
add
sti
pop
js
sarb
sbb
and
cmpsb
mov
loope
xchg
mov
cmp
pop
sbb
mov
ret
roll
dec
imul
xchg
hlt
push
pop
ss
add
push
sbb
pop
daa
mov
lock
lock
jg
leave
out
scas
dec
insl
out
hlt
push
pop
xchg
aad
and
xchg
fs
cld
shrl
leave
and
hlt
xchg
in
mov
filds
xor
or
cld
lds
test
jmp
scas
mov
gs
dec
imul
mov
or
movsl
sub
daa
call
les
sbb
or
adc
push
mov
jne
out
movsb
push
or
lahf
and
hlt
lcall
cld
fcoml
es
lods
dec
popa
sbb
dec
arpl
xchg
call
shll
jo
dec
sub
jecxz
cmc
cmp
push
rorb
mov
sbb
push
xor
sub
jne
adc
xchg
xchg
cmc
stc
mov
mov
inc
je
icebp
int
pushf
mov
dec
ljmp
and
lcall
sbb
in
icebp
fstpt
loope
movsb
fistpll
lret
aam
int
popf
sbbl
add
bound
xor
jo
into
push
cmpsb
fwait
ret
sbb
cli
add
add
xchg
cld
cld
aad
testb
xchg
hlt
push
lcall
push
adc
mov
xchg
sbb
dec
jbe
out
mov
stc
xchg
add
pushf
inc
es
shrl
pusha
sarl
mov
clc
or
sbb
push
push
xchg
mov
inc
fdivrl
sbb
mov
in
sahf
mov
or
inc
icebp
mov
mov
mov
mov
test
call
enter
mov
push
outsl
pop
int
inc
push
and
sub
add
mov
dec
fidivrl
sbb
dec
push
sub
dec
mov
pop
imul
cld
or
push
int
cld
fs
mov
adc
imul
add
pushw
jb
addb
sub
pushf
fwait
loope
mov
dec
push
cmp
pop
adc
push
xchg
fsubrl
mov
call
rorb
test
lret
push
gs
mov
lret
cmp
adc
outsl
pushf
lea
mov
sahf
jb
mov
xor
subb
push
and
fnsave
out
and
xchg
rclb
notl
cltd
mov
into
fs
in
cltd
inc
xchg
sahf
add
les
into
mov
xor
gs
add
lods
dec
loopne
aam
xchg
pop
push
inc
out
in
test
or
or
and
xchg
rcll
push
insl
sti
fwait
retw
pop
add
dec
out
adc
sub
mov
stc
mov
ret
xchg
in
jmp
gs
fidivrs
js
mulb
sahf
mov
inc
enter
sbb
imul
or
data16
xchg
mov
xchg
or
mov
ja
out
sbb
in
call
lahf
pop
in
fisttpl
push
rep
aam
int
cwtl
adc
aas
ret
scas
dec
clc
outsb
add
dec
ss
in
adc
jne
cltd
imul
adc
fcompl
popl
jge
sti
push
xchg
aaa
js
xchg
cmc
mov
in
sbb
xor
sbb
sub
sub
pop
cmp
or
jmp
popa
mov
mov
je
cmp
bswap
jge
js
cmpsl
xchg
or
push
add
xchg
pop
mov
add
icebp
sbb
xchg
pop
scas
xor
ficoml
addr16
mov
insl
dec
push
rolb
mov
mov
xor
ja,pn
imul
in
inc
decb
inc
or
fmuls
jle
fstl
ljmp
xor
test
lea
enter
gs
insb
mov
mov
imul
mov
mov
and
mov
mov
out
or
test
subb
int3
push
xchg
in
into
or
jb
fadd
aaa
lret
mov
rcll
or
adc
sub
lret
cmp
lret
add
and
ja
inc
lds
and
sub
sbb
imul
shll
pop
jl
aad
add
shll
sarb
and
cltd
sbb
in
pop
clc
stos
outsb
cmp
lret
aam
pop
xchg
jge
and
cmp
dec
cmp
shlb
jne
mov
loope
mov
dec
into
dec
push
lcall
sbb
push
jne
insb
bound
mov
pop
adc
xchg
adc
into
addr16
mov
xchg
push
mov
iret
repz
push
push
and
xchg
inc
call
mov
fisttps
int
fadds
mov
jo
fwait
mov
push
movb
nop
ret
mov
loopne
test
movsb
inc
fidivl
mov
jp
in
jcxz
sbbb
mov
jno
mov
fstpt
or
inc
dec
pop
xchg
pop
jg
cwtl
sahf
std
mov
test
in
mov
pop
xlat
cld
fdivr
fst
xchg
xor
faddl
imul
sahf
inc
pusha
cmp
out
mov
inc
inc
cltd
add
imul
test
hlt
insb
jp
jg
clc
icebp
push
inc
cli
lret
loopne
inc
pop
fistpll
movsl
stc
mov
dec
fisttpll
mov
xor
push
pop
stos
icebp
stos
adc
std
in
repz
bound
xchg
mov
lods
loop
frstor
or
xor
mov
mov
or
xor
out
and
mov
insb
add
cld
sbb
outsl
std
push
or
in
lods
adc
icebp
pop
shrl
xchg
inc
or
mov
cltd
ja
iret
inc
fcompl
sbb
rol
push
aas
repz
lds
fimuls
add
cmpsl
aam
outsb
xchg
inc
xchg
stc
xor
imul
movsb
test
mov
sub
cld
data16
add
pop
mov
rcl
shr
loop
sarb
in
xor
lods
adc
std
lret
adc
sbb
cli
xchg
mov
xor
pusha
dec
rol
addr16
movsb
inc
nopl
lock
xchg
mov
mov
inc
inc
add
loop
jnp
jg
roll
or
fadds
and
int3
push
xchg
lret
fisttps
xchg
adc
je
movsb
sub
mov
fldenv
ss
in
test
jecxz
ljmp
mov
cmpsl
scas
test
aas
and
lock
divl
lahf
lods
fwait
lods
adc
mov
cmpsb
lahf
jp
jg
and
mov
inc
add
adc
push
cmp
out
aas
movsl
out
fadds
stc
jge
sahf
pcmpeqw
testb
pop
scas
lret
jns
popf
cmp
dec
cmpsb
dec
in
xor
jnp
movl
push
push
scas
ja
or
sbb
leave
mov
loope
jl
add
push
testb
mulb
ljmp
outsl
jmp
add
mov
add
insb
nop
push
xchg
push
xor
test
xor
or
les
scas
or
pop
mov
push
xor
test
lock
shl
and
push
pop
jg
cltd
add
push
lret
shll
pop
pushf
ja
cmp
mov
mov
andl
test
adc
fstp
dec
ss
xchg
jge
mov
mov
jns
call
inc
pop
add
mov
or
fisubs
mov
xchg
xor
ret
andl
arpl
adc
cltd
inc
mov
jno
rcl
jbe
mov
ja
pop
jbe
pop
sbb
xchg
std
fdivl
lret
jge
xchg
cld
inc
mov
mov
cmp
mov
sbb
daa
pop
sbb
adc
adc
ficoml
filds
scas
xchg
clc
jae
ret
mov
js
out
imul
push
xlat
push
inc
subl
sbb
mov
and
mov
mov
pop
push
add
add
jg
jmp
movsb
mov
pop
int
lret
inc
adc
inc
cs
movsb
push
aas
jecxz
adc
mov
popa
mov
fistl
pop
nop
and
stos
scas
nop
ds
add
orb
test
push
jge
push
cld
lea
jmp
popf
sbbl
inc
push
into
xchg
xlat
std
pop
fimuls
push
sub
lahf
dec
sti
aad
jo
jmp
mov
adc
sbb
inc
mov
cli
lds
popf
aam
push
negl
shl
inc
iret
lods
jmp
and
insl
xlat
fisttps
les
rol
cltd
fnstenv
sbb
pushf
lea
inc
mov
fsubrp
cmp
mulb
lods
jbe
jbe
mov
mov
jle
outsl
popa
ret
je
in
sub
pop
xlat
into
gs
push
jnp
and
and
and
cli
jbe
sub
sub
adc
push
insl
mov
ret
push
out
rolb
pop
ja
pop
jb
ret
xchg
les
mov
in
push
or
inc
imul
lods
sub
sahf
and
adc
rcr
pop
dec
xchg
sub
inc
push
pop
adc
add
pop
and
out
fisubs
lods
mov
lahf
cmp
cmp
pushf
ja
adc
sbb
jns
mov
dec
mov
pop
lcall
sbb
repnz
ja,pn
jae
pop
and
or
pop
rorb
push
aam
data16
push
mov
xor
add
fsts
cmp
cmc
into
add
adc
cs
ret
enter
fdivr
ja
push
pop
idivb
xchg
or
pop
lods
in
sbb
push
or
pop
dec
push
shll
pop
movb
sbb
cmpb
scas
mov
sub
insb
nop
inc
test
hlt
mov
adc
jle
in
sahf
pop
sub
ret
dec
insl
jg
std
es
cmpsb
je
dec
fwait
cmp
scas
ss
lods
mov
stos
aaa
push
xor
push
outsb
ret
scas
and
int
xlat
lcall
dec
es
cmc
lock
shl
push
or
in
rcr
rcrl
pop
inc
mov
hlt
inc
mov
jns
aad
mov
sbb
in
xchg
jno
and
push
lds
xchg
loope
and
cli
sub
mov
daa
cmpsl
or
scas
je
xor
movsb
hlt
ss
aaa
push
enter
int
sbb
inc
jg
stos
sarb
aam
ud0
mov
loop
xor
mov
mov
in
mov
mov
mov
adc
lds
call
xor
or
faddl
stc
cmp
mov
fisubrs
mov
mov
mov
out
mov
popa
pop
out
test
mov
dec
inc
movsl
inc
or
test
test
fld
cltd
lcall
mov
add
es
adc
or
inc
cmp
out
pop
sub
push
xor
fs
scas
push
cmc
add
push
in
mov
insl
leave
shrl
lcall
jae
aad
aas
arpl
mov
inc
push
and
inc
lods
push
lods
cmpsl
pop
add
mov
push
loopne
fldenv
mov
ror
sbb
dec
ljmp
and
xor
jnp
mov
and
in
push
cmpsb
push
fstpl
repnz
mov
sbb
pop
and
sbb
xor
sub
addl
mov
and
repnz
pop
into
pop
add
inc
and
rclb
sbb
sarb
jae
cmp
mov
or
and
popf
hlt
cmc
das
inc
mov
or
mulb
inc
es
repz
and
testl
test
xchg
cmpsl
sub
push
xchg
fcomps
xchg
push
fisubs
rcl
mov
xor
ljmp
movsl
cwtl
lret
mov
shlb
pop
adc
pop
push
cld
add
scas
jb
push
jmp
push
sbb
cld
btc
out
shll
jle
rcll
mov
push
popa
jns
daa
lds
outsb
xchg
inc
or
push
inc
mov
movsb
xchg
or
jp
pop
in
ljmp
add
hlt
cmp
outsb
jecxz
and
cltd
mov
add
out
xchg
inc
lods
mov
cld
adc
scas
dec
dec
xchg
push
out
mov
push
jmp
pop
lahf
push
mov
jnp
stos
movsl
imul
xchg
les
xor
repz
xor
push
andl
lret
movsb
or
mov
mov
cmp
push
inc
arpl
fstl
stc
inc
and
arpl
xorb
jns
pop
dec
push
ss
bound
mov
inc
mov
and
cltd
stos
ds
lock
shr
mov
mov
lcall
mov
pop
enter
out
ret
fisubrs
insb
mov
aad
sbb
pop
test
insb
ja
jnp
adc
push
out
enter
fs
sbb
cmp
and
add
or
xchg
nop
mov
je
test
movsl
dec
jae
cmc
pop
imul
mov
xchg
bswap
adc
and
lret
stos
mov
mov
add
sub
or
orl
dec
fisubl
scas
imul
shll
shrl
sub
fnstcw
dec
inc
insb
push
lret
pusha
sti
mov
xchg
js
dec
data16
xchg
mov
dec
lahf
pop
outsl
out
xchg
or
mov
clc
movsl
mov
enter
stos
repnz
ret
shl
adc
jp
push
xor
cwtl
mov
add
mov
dec
fimuls
mov
jge
push
fs
add
mov
fwait
pop
ljmp
outsl
push
addr16
adc
xlat
loop
cmp
iret
dec
and
push
xchg
sub
sub
ds
das
jg
and
adc
add
mov
dec
pop
arpl
pop
fcompl
and
dec
mov
ficompl
jp
add
adc
lds
les
xor
cmpb
fimuls
cs
jle
lds
mov
fmul
xchg
sti
shr
gs
dec
dec
jo
scas
bound
sub
testb
ljmp
popf
jb
std
mov
sbb
jns
loope
mov
andl
and
or
and
mov
mov
in
xchg
shlb
jbe
adc
fldt
sbb
inc
das
stc
mov
enter
push
push
popa
mov
sub
sti
aaa
dec
iret
lahf
call
adc
mov
xchg
mov
mov
ja
and
jno
call
or
sub
subl
mov
out
data16
call
and
xor
cmp
mov
sbb
xchg
lahf
or
xchg
add
xor
in
push
sbb
mov
nop
movsl
or
cmp
dec
int
imul
lret
hlt
xor
in
sub
sub
push
pop
push
nop
out
lret
jns
sbb
mov
pop
test
sbb
hlt
push
pop
adc
cmp
idiv
jne
mov
out
xor
jae
pop
inc
out
cmpsb
lods
and
adc
movsb
sub
mov
movups
cmp
cmp
jae
negl
dec
shll
inc
jle
and
sti
xor
scas
loope
das
enter
fldl
roll
dec
loope
lods
lea
call
movsb
jecxz
xlat
fildl
pop
in
xor
mov
sub
das
xchg
ja
adc
or
or
push
sahf
outsb
mov
push
or
cmp
repz
fisubl
push
dec
push
push
inc
sub
fwait
sahf
push
add
pop
xor
lret
rcrb
mov
arpl
mov
mov
into
in
xor
stos
clc
out
lea
nop
popa
mov
dec
jae
les
out
and
ljmp
pop
sbb
or
fcomps
sub
imul
and
ret
ret
mov
sbb
push
jp
mov
xlat
ret
add
xchg
mov
or
or
jne
mov
stos
sar
cli
aam
loope
das
aaa
jbe
mov
sbb
xchg
hlt
fwait
mov
in
dec
adc
stos
addr16
xchg
dec
lods
mov
dec
rorl
es
int
packssdw
sbb
pop
loopne
mov
leave
dec
rolb
xor
out
mov
clc
test
sub
rcrb
lahf
pusha
mov
jecxz
out
pop
mov
int3
in
cmovns
adc
jbe
insl
shll
fstl
push
add
or
jmp
sub
and
cltd
std
dec
cmp
fs
cmpsb
and
cmp
aad
inc
mov
jns
inc
adc
mov
mov
mov
inc
out
stos
or
jmp
push
cmp
cmp
jae
mov
cld
es
out
in
addr16
mov
ljmp
testl
push
pop
cmc
imul
call
subl
pop
out
inc
testl
fsubl
test
cli
ljmp
jl
scas
das
mov
testb
ret
push
push
sub
rclb
ljmp
movsb
lret
jo
bound
daa
shlb
mov
push
sub
mov
fsubl
jo
call
add
xor
jmp
add
stos
aam
je
adc
insl
stc
test
fwait
adc
cli
insl
mov
push
xchg
test
pop
push
int3
sbb
out
fwait
shll
push
mov
popa
and
fnstsw
mov
mov
add
inc
fnstcw
out
or
test
sbb
test
mov
imul
dec
dec
inc
xchg
pop
movsb
pop
jae
adc
jge
add
imul
inc
lods
leave
pop
sti
scas
mov
cli
addb
das
cmp
and
fcomps
ljmp
xchg
fdivr
mov
add
mov
shr
js
dec
jg
jp
mov
inc
sub
mull
or
ljmp
cmpsb
sbb
lret
cwtl
ret
pop
push
dec
sti
repz
cld
push
lock
int3
aaa
jle
insb
inc
xchg
sub
cmc
and
in
roll
enter
xchg
into
out
popf
daa
imul
lret
in
or
fs
fldt
pop
cld
jle
outsl
arpl
push
inc
popf
or
loop
shrb
pop
imul
fimuls
dec
stos
push
out
inc
and
mov
popf
das
jbe
sbb
cltd
imul
je
push
mov
ss
fucom
inc
lcall
xchg
and
xchg
data16
sub
rcl
dec
cltd
push
fwait
mov
rol
sbb
orl
es
and
jae
shlb
cs
lcall
mov
xchg
adc
mov
pusha
add
jbe
mov
into
push
add
xchg
mov
icebp
add
jg
int3
and
push
stos
in
or
sbb
push
lcall
lock
gs
cmpsl
cmp
xchg
mov
and
or
aas
pop
xor
mov
movsl
lds
push
push
fcomps
mov
mov
xchg
pop
inc
push
xor
xor
lret
inc
insb
std
mov
mov
loope
clc
imul
inc
icebp
xor
std
in
cmp
insl
ret
lcall
mov
leave
je
pop
es
push
jnp,pt
jge
ret
inc
jno
mov
push
addb
pop
outsl
and
cmc
dec
adc
jnp
cmp
sub
rolb
push
std
add
xor
shld
push
jp
mulb
lds
pop
add
xor
les
push
subl
add
pop
imul
imul
rcl
lret
dec
xchg
xor
xchg
sqrtps
and
leave
inc
xlat
movsl
sbb
mov
pop
and
inc
out
out
adc
cmp
subl
or
test
call
in
cmp
out
fidivrl
mov
test
xchg
push
nop
inc
xchg
jno
sub
repnz
icebp
inc
fnstenv
cmp
sub
insb
mov
pop
cs
andl
ret
cmp
push
pop
aas
loop
mov
incb
xchg
or
mov
pop
mov
jns
mov
lret
rcrl
clc
cmp
lcall
sahf
insb
lods
movsb
mov
and
mov
sbb
push
pop
fisubrs
gs
xchg
xlat
inc
imul
jl
jle
xor
daa
cmp
push
dec
in
aas
les
mov
popa
sub
sub
int
cmp
sub
je
dec
xor
scas
push
pop
push
shlb
or
insb
ficomps
sbb
cld
mov
inc
in
mov
in
cwtl
int
xlat
ret
into
aad
insb
inc
out
fnstenv
je
icebp
andb
dec
ljmp
sub
cs
pop
das
push
popf
mov
mov
imul
faddp
insb
mov
mull
ja
cld
ljmp
std
insl
icebp
xorl
loopne
movsb
push
loope
idivl
dec
fidivs
mov
xorb
sub
lret
outsb
cltd
pusha
cmpsl
in
lret
mov
add
mov
cld
insl
idivl
out
iret
rolb
and
testl
mov
loopne
cmp
lods
mov
inc
lods
enter
jg
adc
and
ss
push
pop
cltd
leave
jmp
cmc
test
mov
jb
dec
jge
nop
xor
jbe
ss
dec
mov
lds
dec
lret
jp
andb
push
andl
test
and
mov
dec
je
into
call
adc
cmpb
push
cs
sub
mov
inc
inc
jo
push
pop
mov
jno
mov
notb
pusha
push
and
pop
inc
or
pop
mov
es
mov
loope
cs
aad
std
call
scas
lods
inc
mov
shll
jle
add
call
xchg
sarl
fnstenv
dec
pop
in
xchg
sub
inc
xchg
mov
jecxz
xchg
into
jecxz
xor
mov
xor
insb
mull
mov
pop
mov
jb
repnz
mov
cltd
xor
loope
call
push
jg
sub
popf
and
mov
adc
xchg
test
lret
int
push
and
clc
mov
inc
orl
movsb
jns
fwait
mov
xchg
imul
push
cmp
das
pop
into
xchg
insl
js
imull
mov
mov
dec
mov
push
das
js
test
sbbl
inc
imul
mov
repnz
daa
inc
pushf
or
pop
pop
mov
ljmp
dec
test
cmp
jmp
sub
mov
sub
sub
xchg
imul
inc
loop
sub
out
outsb
xchg
lahf
xchg
sbb
and
hlt
call
loopne
ljmp
push
push
add
cmp
cmp
fstpl
xchg
std
xor
jmp
movhps
mov
push
leave
mov
adc
adc
shll
cmp
aad
jg
jmp
lret
lahf
out
sub
aas
and
into
mull
mov
int
leave
dec
in
arpl
push
mov
xchg
pop
push
jns
xlat
sbb
xlat
dec
xor
mov
jp
dec
ds
cmpsb
test
push
push
sub
and
cmp
addr16
rcl
fdivrl
cs
jmp
out
pop
ret
fstl
mov
andb
mov
out
cwtl
push
rcll
pop
mov
sbb
cmp
bound
and
and
ds
mov
inc
notl
lcall
push
jg
push
stos
cmp
outsl
or
in
out
xor
subl
into
es
pop
cwtl
aam
pop
mov
lcall
imul
mov
jmp
fmull
and
iret
test
lds
sub
push
adc
and
stos
add
pushf
loop
add
mulb
popa
jae
ljmp
lods
cs
sbb
clc
push
enter
mov
test
andb
sbb
lock
gs
loope
mov
out
outsb
mov
add
add
ret
and
js
scas
mov
inc
scas
push
inc
add
mov
adc
pop
sbb
lret
jns
and
in
test
cli
fdivp
pop
arpl
movsb
hlt
es
js
xor
cli
jo
mov
sub
lret
std
scas
cmp
in
nop
mov
push
mov
cltd
ret
pop
inc
leave
sbbl
push
mov
xor
jle
push
popa
mov
and
das
sub
maxps
push
gs
cmpsb
mov
out
cmp
inc
pop
pop
or
inc
int
push
inc
fwait
pushf
xchg
ds
pop
jo
mov
lea
rol
mov
test
sahf
jmp
push
xchg
ficompl
xchg
scas
jecxz
xor
outsb
and
xchg
sub
cld
dec
stos
jmp
popf
inc
and
sub
sbb
sbb
push
xor
and
insl
stos
fldl
repnz
pop
leave
insl
lods
xor
in
cld
sbb
sbb
mov
and
and
std
push
dec
sbb
call
outsl
testl
fldcw
fwait
mov
loop
mov
cmc
shll
adc
mov
fisttpl
scas
mov
gs
mov
fildl
jmp
jno
jnp
xor
scas
jl
fildll
and
xchg
mov
mov
jo
pop
les
push
pop
add
dec
arpl
push
mov
mov
fdivrs
push
mov
nop
push
daa
or
scas
nop
ljmp
or
and
movsl
jnp
loop
add
cmp
shrb
push
lock
fwait
push
dec
test
inc
repz
cwtl
and
scas
sti
lahf
inc
xor
aaa
cs
push
outsl
dec
xchg
mov
test
incl
in
mov
arpl
es
mov
ret
negb
lds
add
mov
ss
fs
dec
test
ljmp
jle
cli
mov
mov
add
inc
xlat
add
mov
mov
addr16
xchg
int3
cli
shll
push
shrb
dec
mov
test
lahf
jbe
int
sub
movsl
xor
scas
and
mov
popa
into
push
iret
mov
mov
cs
adc
or
test
test
bound
add
fcomps
fucomip
sti
outsl
int3
sti
imul
mov
inc
pop
push
cmp
jbe
or
test
aaa
dec
mov
in
int3
in
and
xchg
cmc
xchg
out
leave
pop
adc
mov
mov
and
sub
xor
or
lds
xor
sbb
call
mov
jo
hlt
call
std
sub
dec
sub
or
xchg
push
and
inc
lods
stos
mov
mov
outsb
stos
pop
or
int3
push
stc
lcall
pop
add
addl
push
push
mov
aad
push
sbb
fstpt
aaa
sbb
jle
jae
cmp
xchg
xchg
imul
dec
aad
movsl
mov
add
jle
imul
out
into
pop
rcrb
clc
cmp
es
fwait
pop
pop
cmp
loope
push
jns
lods
push
sbb
cmp
or
stos
mov
sbb
adc
out
daa
arpl
je
pop
insl
and
push
jl
cmpsb
xchg
imul
notb
add
test
cmp
dec
shll
jmp
dec
cli
add
mov
xchg
xor
pop
dec
ja
jecxz
loope
xchg
pop
add
dec
insl
bound
stos
dec
aam
imul
call
scas
cmp
test
sti
imul
les
mov
leave
enter
hlt
mov
inc
inc
cltd
mov
popf
fwait
imul
add
add
pusha
push
test
imul
inc
add
jmp
adc
outsb
pop
xchg
cmp
in
nopl
push
cmp
inc
jno
dec
call
shr
inc
dec
shrl
aam
mov
ret
clc
lret
and
dec
in
mov
mov
pop
inc
xor
jns
clc
or
mov
loop
adc
mov
push
int
rol
push
xor
cli
movsb
test
pusha
cmp
adc
lds
mov
and
jmp
xlat
aam
ret
cmp
sbb
sbb
mov
out
push
jmp
in
gs
ficoml
incl
mov
push
cmp
dec
jno
xchg
fnstcw
pop
lret
movsl
sbb
cmp
adc
jns
das
xor
add
shrl
stc
xchg
movsb
out
xchg
adc
push
imul
in
or
aas
xchg
jecxz
jecxz
add
cltd
xchg
lds
sbb
jg
fs
push
jbe
sub
int
pushf
dec
enter
mov
stos
jae
das
inc
push
ljmp
packuswb
and
sub
cmp
loope
push
sahf
jle
adc
push
lds
lea
out
mov
add
pop
imul
or
jle
lods
test
mov
je
mov
call
test
lock
das
loope
bt
cmpsb
nop
lret
imul
sbb
xchg
stc
push
mov
lret
xor
cli
lock
or
stos
insb
sub
and
xchg
xchg
or
dec
cli
clc
outsb
bound
mov
mov
lods
ret
mov
dec
mov
lods
mov
arpl
and
cmp
inc
call
popf
rolb
fsubr
fisttpll
dec
dec
in
push
aas
fldenv
and
dec
movsl
xor
lcall
xchg
leave
lret
cs
sbb
mov
and
jmp
mov
jne
shll
add
mov
jns
filds
sbb
lds
xchg
leave
lret
imul
fs
sub
fmuls
mov
into
scas
push
xor
and
hlt
mov
dec
or
repz
mov
int3
push
jecxz
daa
in
sbb
dec
cli
sub
pop
add
imul
int
add
nop
shlb
xchg
inc
popf
mov
jo
lahf
test
loope
sbbl
loop
das
cld
ja
movb
fnsave
or
std
xlat
cmp
mov
outsl
sahf
xchg
xchg
push
push
arpl
dec
stos
xchg
dec
jl
mov
ja
sub
cmpsb
out
loop
xchg
or
nop
data16
pop
repz
in
xor
loopne
pop
pop
adc
test
lods
sbb
adc
addr16
mov
sub
or
pop
or
pop
add
adc
xor
loopne
jle
pop
sub
outsb
jns
sub
xorb
dec
and
add
mov
xchg
pop
ret
sub
jbe
test
icebp
push
sti
movsb
scas
dec
lods
leave
pop
and
jo
xchg
mov
sbb
sahf
mov
mov
pop
or
mov
fcomps
mov
cwtl
and
in
xor
lahf
inc
sbb
loope
add
les
push
inc
mov
and
scas
xchg
pop
lea
mov
xchg
push
test
popa
inc
sti
fs
aad
ljmp
or
cmp
out
movsl
dec
push
int
cmpsl
sbb
in
ja
sarl
std
xor
clc
fcompl
mov
les
push
ljmp
sub
push
cwtl
repnz
fwait
rol
shl
adc
or
mov
mov
movsb
xchg
mov
mov
mov
jp
sbb
jle
in
xchg
lods
inc
and
loope
pop
outsb
and
into
mov
fldl
test
rcll
cltd
cli
adc
lods
cli
inc
cmpsl
incb
iret
jnp
dec
ja
dec
sub
sub
jge
push
ret
pop
mov
xchg
and
sub
inc
sub
cli
mov
push
rcrb
inc
pop
adc
lret
xchg
xor
jp
dec
mov
xor
fildll
sbb
cmp
sub
sub
and
mov
lahf
sub
ds
mov
in
push
or
mov
and
mov
insb
jle
jbe
retw
xor
mov
out
xchg
dec
xor
push
jnp
int3
icebp
cltd
cli
cs
push
cmp
push
xchg
ja
push
mov
stos
das
add
es
jnp
inc
sbb
adc
inc
ljmp
mov
lods
loop
or
pusha
andb
loope
xchg
mov
sub
fisubrs
fidivrl
insb
das
sub
out
mov
and
pop
addr16
fxam
sbb
aam
sbb
xchg
lret
push
add
bound
imul
dec
push
jl
sub
inc
xchg
out
mov
mov
xchg
xchg
enter
fsub
push
fwait
jno
jecxz
hlt
inc
mov
jno
pop
out
ret
ret
and
xorl
in
lahf
jmp
imul
fstpt
inc
data16
and
mov
pop
or
sub
push
push
cmc
and
roll
xchg
iret
loop
adc
mov
cli
xchg
or
inc
jecxz
inc
pop
push
pop
fsubs
adc
push
xchg
and
adc
mov
sbb
push
jb
out
and
and
das
mov
sub
adc
mov
fdivl
movsb
jmp
push
test
fsub
sbb
jl
stos
sti
cld
sub
or
pop
mov
jbe
pop
loopne
push
fsubrs
repnz
outsb
sub
and
jg
adc
and
loopne
popf
pop
cs
mov
jbe
shlb
mov
out
add
frstor
mov
cs
lds
mov
sub
sub
and
push
pop
push
ljmp
shl
cld
in
adc
ficoms
sbb
icebp
jle
std
js
daa
jl
mov
aaa
jl
aad
das
outsb
cmp
bnd
cmp
out
lods
xlat
mov
xchg
cmp
dec
push
push
pop
pop
repz
test
in
cmp
in
push
or
pushf
jmp
and
popa
jb
ret
fistpl
xor
mov
or
int
jle
loopne
pop
adc
add
sbb
push
dec
int3
inc
mov
xor
icebp
daa
push
inc
mov
adc
adc
mov
shl
inc
outsl
rorl
ret
jnp
shrb
adc
ds
cmp
std
inc
pop
push
mov
jo
mov
mov
movsl
mov
and
popa
inc
clc
or
popf
dec
out
addb
add
or
leave
stc
lret
dec
fsubs
in
cmp
ss
outsl
xor
dec
cli
inc
sub
sub
mov
pop
sbbl
rcr
push
mov
inc
enter
std
add
xchg
lds
mov
mov
js
aam
lock
ss
or
aas
inc
clc
ss
mov
loop
aaa
in
repz
or
in
add
sub
push
mov
insl
std
lea
aas
mov
nop
decl
ds
mov
cmpsl
nop
mov
je
test
jmp
xor
sbb
or
pushf
pop
lret
test
aam
dec
arpl
dec
push
push
adc
fcoml
mov
mov
jmp
cmp
sub
xchg
xor
push
add
ja
lds
je
inc
and
mov
add
std
cwtl
cwtl
roll
push
jnp
pop
cmp
pop
xchg
dec
jne
cltd
sbb
pop
lds
pop
and
cmp
jmp
ljmp
xor
bound
jbe
mov
xor
mov
push
ds
clc
aas
lods
popa
xor
aaa
lea
outsl
dec
lahf
das
mov
stos
lea
andl
sub
popf
popa
jns
pop
cmp
fs
shrb
test
aaa
nop
das
inc
leave
pop
jle
dec
fxtract
cmc
push
repnz
xchg
or
iret
sub
push
sar
and
lods
and
js
les
adc
fimuls
xor
mov
mov
iret
call
roll
sub
mov
push
add
adc
fs
es
sbb
repz
fisttpll
push
fiadds
loope
fistpll
pop
test
cltd
or
inc
sbb
push
push
cmp
fcmovne
push
or
mov
mov
push
gs
add
stos
ljmp
xorb
adc
clc
jb
mov
xchg
sarl
and
sub
divl
xchg
mov
jnp
push
xor
pop
outsb
pop
xor
xor
lods
adc
divsd
dec
cmp
sbb
or
mov
jmp
cli
gs
scas
fmull
aas
call
lret
in
in
cwtl
mov
or
or
gs
aas
and
scas
sbb
mov
pop
in
stos
add
xor
ljmp
inc
and
xor
imul
sbb
in
inc
add
in
lret
js
aas
sub
loop
xchg
cmpb
jnp
xchg
int
push
not
testb
jbe
into
rorl
stos
push
fwait
mov
or
sub
imul
inc
push
es
pop
lahf
fwait
sbb
adc
inc
jne
mov
push
popa
mov
or
and
add
xchg
cltd
js
add
push
mov
negl
rcl
fistpl
in
aad
adc
mov
jns
add
fs
test
jae
lcall
ds
mov
mov
push
add
push
out
jo
or
jae
or
xchg
stc
mov
sub
xor
add
or
sub
iret
xchg
xchg
sbb
pop
sbb
out
jg
sbb
repz
push
inc
scas
xor
stos
dec
jno
in
mov
sahf
cmpsl
mov
movsl
roll
mov
push
les
inc
mov
sbb
add
lock
sbb
dec
mov
arpl
addl
mov
inc
jo
xchg
pop
arpl
pushf
insl
sbbl
push
fimull
daa
push
int3
lcall
or
lds
and
nop
mov
dec
loopne
xchg
mov
aam
mov
jecxz
xor
dec
daa
inc
into
adc
jg
pop
sbb
int
jae
mov
popa
push
pop
push
cmp
lahf
jl
jae
add
xchg
xchg
loop
sbb
add
lret
mov
sbb
sbbl
mov
test
icebp
cmp
xchg
arpl
sarb
enter
leave
fsubl
cltd
mov
int3
pop
les
inc
mov
int
sbb
out
push
pop
dec
cs
inc
repz
test
in
xchg
cmpsl
sahf
fwait
inc
mov
data16
loope
fimull
scas
imul
and
cmp
popf
mov
mov
xor
xchg
test
loope
mov
sub
mov
cmp
dec
loop
cs
cmp
mov
mov
lret
orl
jb
inc
dec
push
jne
inc
aaa
push
aad
mov
outsb
jbe
lods
mov
dec
clc
rorl
mov
stos
mov
enter
fstpt
inc
bound
pop
cwtl
pop
inc
cmc
in
ret
sbbb
jg
hlt
out
mov
xor
arpl
bound
jae
imul
push
adc
push
ds
or
xchg
scas
mov
hlt
scas
adc
insb
incb
js
mov
inc
mul
pop
cmpsb
out
dec
jo
loop
scas
add
fiadds
mov
sub
mov
rcll
out
adc
sbb
mov
push
daa
call
mov
pop
aas
enter
outsb
push
lcall
loope
sbb
das
mov
mov
add
push
or
xor
sti
lock
lods
xlat
hlt
cli
mov
hlt
mov
lea
xchg
andl
repnz
lods
sbb
inc
mov
cmp
jl
repz
ffreep
lret
adc
or
pop
imull
adc
icebp
add
lock
jmp
data16
cli
push
fcomp
cmpsb
xlat
cmp
bound
sbb
call
lods
xor
fldcw
inc
test
adc
add
dec
and
push
jecxz
enter
out
mov
push
scas
xchg
mov
adc
std
lahf
or
movsl
loope
cmp
cld
mov
addr16
mov
jns
negb
popa
bound
and
cli
inc
out
push
mov
jmp
cmp
cmp
lret
repz
daa
xor
xchg
out
mov
outsb
clc
push
data16
aam
insb
cmpsl
ds
adcb
or
xchg
das
push
sub
addr16
les
pop
adc
addl
out
call
cld
test
inc
leave
push
push
sahf
xor
push
pop
outsl
cmp
aas
adc
pop
sbb
xor
shl
stos
mov
icebp
insb
pop
sbb
lock
or
xchg
push
inc
push
lret
xor
sub
sti
aad
aam
mov
cmp
sbb
addr16
add
cmpsb
mov
pop
daa
pop
pop
lret
mov
inc
xorb
call
mov
cld
and
fnsave
ficoml
js
pushf
roll
shll
clc
cmpsl
and
std
and
pop
pop
push
das
mov
pop
mov
and
pop
cmc
and
mov
or
add
dec
fdivrp
data16
addr16
or
lea
add
mov
lret
in
push
in
je
pop
ret
lret
or
pop
xlat
pop
popf
dec
sbb
cltd
mov
pop
mov
incl
test
lret
adc
into
mov
mov
cmpsb
and
push
xor
adc
sbb
insl
nop
or
pop
popaw
xchg
cld
mov
push
lahf
sub
cltd
xchg
lods
rcrl
cmpsb
clc
pop
roll
imul
insb
outsl
mull
add
das
clc
dec
xchg
out
jno
xchg
shlb
adc
fldl
sub
add
into
fdivrs
and
sbb
jns
jl
aas
pop
inc
sub
mov
gs
arpl
adc
and
mov
and
jno
mov
iret
mov
enter
das
push
push
mov
cwtl
nop
stc
jns
xchg
mov
enter
inc
jge
mov
xchg
jge
aad
fldz
xchg
sbb
lock
push
and
outsl
pop
cli
adc
aas
jp
mov
cmpsb
addr16
adc
adc
clc
add
mov
test
mov
xor
dec
dec
or
inc
out
subl
adc
lods
leave
xchg
adc
and
lret
xor
mov
mov
loop
iret
cmpsl
test
push
and
dec
jne
cmp
sub
in
test
cwtl
arpl
outsl
mov
mov
decb
jne
inc
cmp
mov
pop
loop
xchg
aam
lret
addr16
xlat
dec
and
inc
movsl
sbb
mov
andb
inc
pushw
je
ja
mov
in
aam
inc
xor
xor
push
sub
clc
xchg
mov
popl
jecxz
jmp
int
out
lods
sarb
xor
or
hlt
or
add
push
std
mov
mov
pusha
repz
aaa
sub
and
mov
and
sar
push
or
adc
jle
das
int
jle
imul
lock
lea
jnp
adc
leave
test
fcompl
or
fdivp
push
scas
xor
jge
pop
dec
dec
xchg
cmp
daa
jae
push
movsb
movl
pop
insl
pop
mov
xchg
fisubrs
jge
gs
mov
adc
pop
sahf
xchg
xor
popa
ret
lds
and
std
cs
fdivrs
xchg
ja
adc
ss
int3
scas
into
adc
and
scas
or
adc
push
sbb
add
loop
jmp
jp
imul
loope
daa
cs
sbb
xlat
sbb
cmp
int3
fnstenv
sub
xchg
mov
xorb
in
ljmp
es
jb
popf
xor
loopne
faddp
sub
loop
jae
mov
faddp
mov
mov
mov
adcb
adc
xor
xor
lock
mov
mov
cld
bound
loop
push
lea
scas
mov
das
clc
test
loope
stos
inc
xchg
nop
fbld
push
test
mov
inc
or
dec
fcompl
aam
cmp
xor
fs
lahf
addr16
mov
nop
mov
cld
add
jo
or
das
cltd
fimuls
xor
test
in
inc
xor
ret
or
push
dec
sbb
mov
lods
push
pushf
pushf
filds
sub
movsl
xchg
cwtl
push
or
mov
mov
jns
jns
push
xchg
ss
std
scas
pop
mov
push
adc
aaa
inc
lods
add
push
inc
imul
push
inc
pusha
cmc
push
lock
mov
add
stos
movsl
sbb
lcall
push
nop
sbb
sub
inc
shll
ret
xchg
sahf
sub
adc
push
loopne
mov
pop
rcrb
bound
int3
mov
imul
mov
adc
insl
push
or
and
jg
cld
or
decb
dec
add
mov
aas
scas
xchg
or
aad
dec
cwtl
int
in
xchg
scas
adc
adc
push
inc
inc
pusha
in
test
pop
test
cld
icebp
test
fldenv
push
cmpl
jne
rclb
js
in
mov
psrad
pop
pop
test
cld
lret
aaa
mov
dec
mov
bound
js
push
lret
js
mov
pop
and
and
int
out
xor
jge
je
cltd
inc
sbb
jnp
adc
and
std
mov
fnsave
notl
add
sbb
scas
icebp
ret
push
addr16
insl
xor
insl
mov
mov
lret
cs
push
and
sbb
or
pop
cmc
jle
movsb
xor
pusha
push
test
popa
mov
outsb
movsb
push
mov
hlt
sbb
mov
jbe
out
popl
pusha
clc
sbb
outsl
lock
pop
mov
inc
push
or
orl
out
jl
mov
fs
sub
adc
lock
filds
sub
cs
push
stos
pop
lahf
out
repnz
dec
sahf
imul
jp
xchg
sub
test
sub
push
xlat
in
gs
in
dec
cwtl
dec
fcmovnb
imul
stos
ja
cmc
test
dec
test
inc
cltd
ss
xlat
cmp
cmp
shll
mov
push
pop
dec
fwait
js
stos
xchg
dec
aam
jbe
dec
push
mov
or
pop
xor
js
cmp
or
mov
call
scas
cmp
xchg
mov
sbb
decb
pushf
sar
popf
leave
inc
and
pop
add
gs
popf
inc
push
stos
mov
lea
xor
imul
pop
mov
sti
ja
xchg
jo
jnp
add
adc
adc
dec
mov
pop
xchg
add
jecxz
enter
ret
cld
xchg
enter
test
xor
movsl
test
je
fwait
sbb
sub
pop
mov
rcrb
and
jns
push
fldenv
adc
out
daa
test
sbbl
pop
lahf
dec
decb
push
fdivrs
add
icebp
insb
daa
xor
pop
aad
ja
pop
sbb
cmp
pushf
pop
stc
jp
cmp
bnd
push
sbb
lods
test
push
add
inc
out
mov
jg
mov
cltd
mov
in
jnp
out
mov
jle
out
adc
pop
fs
shll
pop
int3
ficomps
out
xor
adcl
mov
inc
cmp
fcoms
sub
xchg
scas
sub
mov
les
lret
ss
dec
lea
and
idivl
jle
inc
ds
nop
lcall
mov
push
pop
daa
dec
out
pop
in
mov
add
pusha
mov
push
sahf
pop
jle
dec
push
leave
and
ss
push
inc
push
mov
mov
mov
daa
lds
loopne
inc
jb
dec
pushf
aad
and
pop
lock
mov
addl
and
orb
lret
xor
xor
in
cmc
push
and
repnz
mov
imul
pop
jnp
movsb
in
pop
push
pop
xor
or
jmp
out
mov
mov
jmp
aas
and
data16
xchg
rorb
add
push
mov
mov
add
and
jns
sahf
push
arpl
mov
jo
outsl
mov
out
fwait
mov
test
insb
jp
sub
leave
xor
je
loopne
lock
arpl
push
dec
or
mov
mov
mov
aad
xchg
pop
jnp
sub
out
outsl
jb
aad
jbe
jae
push
mov
stos
out
push
xor
decl
mov
mov
add
or
pop
cld
pop
lcall
mov
pop
pusha
das
sbb
mov
or
jmp
das
push
dec
xor
cmpsl
popf
test
nop
repnz
filds
mov
adc
lods
xchg
jno
mov
aad
ficoml
daa
loope
stos
dec
ljmp
cmp
xchg
pop
sub
and
and
scas
shrb
stc
and
mov
sub
jle
dec
jle
cmc
negl
das
pop
mov
test
add
das
dec
cmp
xor
mov
insl
xchg
add
push
xor
sahf
pop
test
test
das
mov
dec
int3
pushf
jae
orl
lock
test
sbb
aam
jecxz
xor
lret
cmc
movsl
ss
sahf
test
cwtl
jmp
pop
jae
push
dec
mov
addr16
and
outsb
imul
daa
jb
in
mov
pop
popf
push
adc
jl
mov
mov
push
sti
adc
aad
sti
mov
mov
adc
leave
pop
xor
insb
mov
adc
jae
out
push
mov
push
mov
inc
insb
stc
leave
or
mov
inc
jmp
js
ffreep
sbb
les
sarb
jo
jno
and
fcmovnu
jnp
mov
cmpsl
jns
cmp
and
dec
mov
xor
pop
pushf
ljmp
dec
inc
mull
in
add
push
aam
aaa
mov
icebp
mov
arpl
xor
std
jmp
xor
mov
divl
mov
inc
daa
xor
push
sbb
pop
cld
lahf
fadds
aaa
cmc
testb
xchg
cmpsb
pusha
xor
out
inc
scas
fisttpll
outsl
dec
dec
pop
fstpl
inc
jl
inc
clc
jno,pn
lcall
imul
xchg
pop
clc
jbe
mov
ljmp
js
adcb
sub
lea
aas
pop
cmp
mov
sar
outsl
rcll
jg
add
cmp
lods
push
push
iret
cli
and
cld
loopne
inc
push
cmpsb
add
sbb
fistpl
rolb
imul
ss
dec
push
outsl
icebp
pop
xchg
cmpsb
int3
xor
lock
cmc
sbb
sub
pushf
cmp
and
sbb
loop
ret
leave
rorl
cmp
addb
mov
orl
mov
push
mov
and
cwtl
inc
mov
ficoms
jmp
jae
xchg
sbb
dec
pop
pop
test
jo
or
sbb
aaa
sbb
stos
and
xchg
sbb
repz
lods
mov
clc
push
jg
dec
jp
or
fsubrs
lahf
xchg
sbb
js
inc
insb
cld
mov
xor
cltd
es
jg
mov
or
mov
or
cltd
dec
div
sbb
out
movsb
pop
cmp
or
xor
push
xor
insl
mov
fsubrp
mov
mov
inc
xor
je
lds
iret
out
jl
es
lea
mov
dec
mov
inc
in
ficompl
mov
ljmp
cmp
push
sub
out
sti
pop
ja
sbb
sbb
inc
inc
jno
push
xchg
mov
popf
jp
lds
dec
fcmovu
xchg
rol
jg
jge
mov
dec
es
sbb
mov
inc
hlt
arpl
adc
xchg
pop
mov
xchg
mov
jmp
cmpsb
sahf
test
mov
cltd
xor
mov
mov
outsl
sahf
sbb
fisttpl
dec
and
test
add
mov
lods
xchg
inc
mov
dec
scas
cmp
test
or
sub
xchg
test
push
sub
push
daa
pop
jmp
ret
lods
sbb
cmpsl
int3
pop
adc
cmp
inc
add
test
adc
pop
out
mov
add
adc
mov
popf
add
stos
pop
and
jecxz
ret
js
dec
pop
mov
mov
fcoms
mov
xchg
cs
xchg
dec
xor
inc
lahf
sahf
fdivrl
fnstcw
push
lcall
jecxz
gs
jo
mov
mov
add
and
pop
fs
addr16
fnsave
sahf
movsb
lret
lret
push
sub
call
sbb
pushw
jmp
iret
and
inc
hlt
in
aaa
mov
mov
sbb
sbb
es
push
andb
mov
xor
jg
mov
lcall
mov
clc
outsb
adc
sahf
sub
sub
std
ficoml
repnz
or
call
sbb
push
std
jmp
int
sub
cmpsl
sub
popf
stos
in
xchg
mov
enter
inc
popa
xor
scas
rcrl
lahf
cld
adc
inc
in
and
add
idivl
rcrl
jle
scas
push
ror
fsubs
pop
movsl
sbbb
inc
das
xchg
push
in
jmp
jl
cli
xchg
dec
das
dec
push
mov
lret
pop
push
sbb
shl
scas
mov
push
cmp
xchg
jbe
test
pop
xchg
shlb
ret
cld
xchg
cs
push
clc
in
rcrl
pop
je
aaa
ds
iret
sbb
dec
mov
sub
mov
out
into
xchg
mov
adc
mov
pop
iret
sahf
adc
aas
adc
dec
pusha
pop
cmp
push
shl
and
fs
inc
lahf
pusha
faddl
xchg
shlb
shl
push
shll
or
mov
or
rorl
loopne
loope
daa
repz
sub
cs
das
jl
mov
jge
dec
inc
mov
cmpsl
mov
or
stos
inc
fs
hlt
stc
fnsave
adc
mov
cmp
sbb
mov
pushl
mov
mov
dec
add
jbe
stos
mov
cmc
add
popa
sbb
sub
jno
add
add
loopne
jle
add
orl
loop
mov
pop
jp
jne
push
cmp
inc
sbb
pop
pop
xor
push
idivb
and
xchg
and
lahf
jg
cmp
sub
sbb
aam
xchg
push
out
xchg
lcall
mov
push
scas
aaa
cmp
add
jno
es
xchg
jmp
or
ret
pop
xor
cld
add
xor
push
in
push
and
mov
out
xor
pop
rcll
aam
cmp
insb
movsb
mov
jbe
in
cltd
aaa
lds
jmp
outsb
mov
ds
dec
mov
jae
fstl
das
xchg
sbbb
out
popa
push
xchg
jmp
cmp
mov
mov
dec
lahf
adc
icebp
xchg
push
mov
cmp
sbb
ljmp
fcmovne
push
movsl
in
cmp
and
cmpsb
mov
lods
nop
rcr
push
rcll
jl
rcrl
stos
pop
js
movsb
add
loop
xor
sarl
aad
jp
and
lahf
mov
dec
or
fs
test
fstpl
push
xor
sbb
in
fbstp
or
mov
movsl
and
icebp
mov
pop
incb
cmc
test
inc
jmp
fistps
pop
enter
xor
dec
jnp
xchg
sbb
cmc
ljmp
addr16
js
fwait
adc
ror
enter
aam
xlat
popa
aad
inc
pop
in
mov
sahf
loope
repnz
lcall
pop
lea
mov
aam
aas
pop
dec
clc
push
mov
mov
test
jmp
push
adc
sbb
mov
cmp
and
in
stc
inc
cld
push
mov
int
fidivl
dec
add
insb
jle
lcall
stos
mov
xchg
fldcw
push
ljmp
je
sub
jb
xchg
and
mov
sahf
popl
inc
pop
jno
pushl
repz
sub
flds
test
xchg
jg
xchg
inc
shrb
inc
lea
jae
loopne
mov
jno
iret
adc
bound
jne
iret
test
enter
outsb
mov
sbb
mov
fdivs
pop
push
push
in
addr16
lret
push
adc
push
sbb
loope
les
test
add
mov
adc
out
sbb
std
sbb
movsl
sbb
pop
jo
mov
dec
out
inc
push
out
ljmp
pop
in
dec
dec
cmp
or
mov
xchg
aaa
enter
subps
int3
adc
push
movsb
loope
les
jnp
cmp
pop
sub
gs
das
or
sub
lcall
and
lds
push
push
dec
rorb
xor
js
nop
fcmovb
in
push
jns
sbb
sbb
mov
int3
sub
fcoms
mov
mov
ja
add
or
mov
xchg
sarb
aam
arpl
test
pop
fcompl
adc
outsb
sbb
frstor
push
mov
and
clc
push
mov
cld
mov
stos
jmp
mov
mov
test
dec
scas
je
xor
sbb
mov
lcall
cltd
jp
jno
push
xchg
mov
dec
mov
lea
sub
inc
syscall
aaa
pop
pop
xchg
xchg
mov
jp
and
ja
cmp
addr16
clc
mov
out
xchg
adc
test
mov
push
mov
test
loope
les
je
hlt
imul
flds
mov
repnz
pop
retw
repnz
dec
adc
cwtl
mov
adc
jg
je
jge
pusha
and
jb,pt
cmp
mov
cmp
dec
testb
jno
fwait
cmp
popf
cmpl
xor
jecxz
pop
add
enter
push
aas
clc
popf
subl
in
and
stc
fcom
inc
lret
lahf
mov
add
and
push
mov
xor
add
xchg
sti
cld
xor
imul
insl
dec
push
xchg
hlt
push
aaa
out
int3
push
xchg
mov
mov
xchg
xor
pop
bound
xchg
test
sbb
xchg
ja
repz
cmpsl
inc
inc
mov
xlat
cmp
das
aaa
int3
fldz
dec
xchg
jl
lahf
rclb
cs
mov
cmp
cmc
es
xchg
jle
mov
jl
pop
or
mov
cwtl
mov
or
mov
push
lahf
aas
dec
cmp
dec
mov
push
add
sti
testb
push
test
notb
insb
push
mov
xor
sub
inc
cltd
call
dec
sub
pop
std
test
mov
adcl
add
fiaddl
pop
ret
sbb
mov
push
je
dec
out
mov
push
sub
fs
or
add
inc
adc
xor
jmp
fdivs
mov
inc
cs
repz
xchg
mov
add
les
pop
cmpl
mov
sbb
jp
cmpsb
inc
iret
stos
mov
pop
outsl
cltd
loope
shll
add
popa
fcomps
addb
mov
pop
fnstsw
outsl
inc
push
mov
add
mov
add
cwtl
int3
dec
jmp
and
sbb
cli
add
fsts
out
out
out
dec
cld
jae
dec
lret
cmp
adc
iret
add
inc
das
out
bound
icebp
sub
stos
and
sub
xchg
jl
xchg
call
inc
pop
lret
or
adc
test
push
inc
iret
sub
call
loop
in
jecxz
cmc
add
bnd
jmp
int3
jge
scas
mov
popa
mov
dec
rcrb
pop
jle
shlb
hlt
gs
and
push
cli
lahf
inc
test
xchg
and
out
push
mov
adcl
nop
into
in
cmp
sub
push
inc
pusha
add
inc
pop
jecxz
imull
or
jnp
mov
mov
pop
gs
orl
mov
jne
mull
and
add
inc
jno
jo
or
mov
adc
cwtl
and
aas
cmc
push
out
or
push
mov
mov
sahf
jnp
lods
pop
lea
mov
dec
inc
subl
jbe
inc
popa
xor
mov
jecxz
aad
mov
sub
push
add
push
lock
adc
add
movsb
xorb
sub
rcrb
cmp
pop
scas
out
cmp
xchg
hlt
cmp
out
test
imul
daa
rcll
and
ljmp
mov
push
cmp
sbb
jl
lock
test
dec
lret
push
sbb
and
movsb
test
data16
jno
cli
cmp
mov
jl
jno
jno
lea
je
mov
repz
lock
movsl
in
push
in
cld
out
jo
test
outsl
data16
gs
mov
out
icebp
fiadds
shlb
or
lahf
stos
loope
add
mov
push
inc
ret
fs
pushaw
pushf
and
push
lcall
push
popa
push
dec
and
in
in
or
fstl
pop
lods
gs
stos
fcomp
add
jg
or
jl
hlt
stc
sub
jns
add
je
addr16
mov
sub
push
xchg
shlb
adc
repz
leave
orb
adc
jns
cmpsl
ds
jae
mov
fldcw
jne
rsm
mov
insb
jb
or
jecxz
pop
jg
loop
inc
and
roll
je
push
xchg
pop
imul
jnp
lret
cltd
and
or
shlb
pusha
mov
inc
mov
cmp
push
adc
arpl
xor
xorl
movsl
out
aam
stc
or
inc
sub
pop
xorl
mov
lahf
sbb
insb
lods
dec
jnp
data16
push
mov
jecxz
movsb
adc
jns
push
jo
sub
lcall
cmc
cmp
jne
adc
stc
arpl
ss
fcmovnb
push
stos
in
mov
bound
xor
sbb
mov
pop
or
inc
mov
pop
add
test
stos
xor
push
insb
mov
cmp
in
inc
sub
adcb
data16
mov
rcrl
mov
scas
lods
mov
sub
repz
xor
fwait
xchg
inc
imul
push
in
ret
dec
pop
int3
subl
or
adc
leave
cld
mov
mov
lds
call
mov
or
push
push
mov
clc
in
icebp
leave
jge
lods
push
cmovne
lret
movzbl
and
cld
pop
sub
stos
jge
mov
repz
push
dec
cmp
icebp
sbb
xor
jg
add
jns
cmp
jbe
fmulp
stos
mov
punpcklwd
stos
jg
mov
xchg
adc
lea
dec
sti
pop
mov
cltd
jb
inc
dec
loop
lds
sbb
pop
scas
dec
daa
call
cld
mov
mov
cmp
jo
in
insb
mov
scas
sti
aas
xlat
dec
popf
fnstsw
inc
pusha
and
fstpt
sahf
fcompl
push
bound
fnstcw
pop
xor
pushf
pushf
les
cmp
cld
pop
ds
imul
push
and
outsl
xchg
xlat
cmp
stos
add
pop
insl
mov
arpl
cld
std
shlb
and
sub
push
pop
stos
out
adc
xchg
xchg
and
das
popa
mov
jg
stos
push
arpl
les
dec
sbb
mov
mov
sbbb
loop
jle
adc
lea
bound
mov
dec
adc
push
aad
shl
rorl
jmp
mov
inc
mov
xchg
sub
test
rcl
rcl
subl
loopne
test
sbb
push
seta
sbb
mov
ds
or
and
mov
mov
stc
sub
push
adc
mov
stos
sbb
pushl
push
sti
inc
ljmp
sub
enter
and
lcall
adc
jl
push
adc
lock
cmp
dec
cmp
shll
andb
push
stc
popa
and
lods
mov
cmpsl
ffreep
pop
mov
cmp
pop
into
call
mov
sub
bound
aas
or
std
jmp
popf
fstpt
mov
xchg
cmp
aaa
ret
lcall
rcrb
mov
test
mov
mov
or
lods
add
in
adc
movsl
push
jno
mov
lret
or
lods
fbstp
int
mov
sti
jl
loope
fisubs
inc
das
xor
rclb
es
mov
inc
sub
cwtl
cmp
dec
lret
xacquire
adc
cmpsb
int3
decb
out
pop
xchg
fstpl
xlat
add
pop
pop
mov
push
mov
pop
out
mov
push
xchg
cmp
icebp
jbe
int
movb
inc
mov
and
lock
mov
pusha
mov
xor
fidivl
popf
and
arpl
ljmp
sub
movsb
xor
ss
mov
or
jne
popf
int
fistl
jecxz
inc
sub
pop
ja
add
ljmp
jg
popf
jecxz,pn
inc
stos
icebp
or
inc
lds
scas
paddusw
xchg
adc
inc
jle
das
mov
aad
lea
dec
xchg
incb
cli
xlat
sbb
push
enter
jo
movsb
pop
loopne
pop
jle,pt
inc
test
inc
add
cmp
dec
mov
mov
pop
addl
js
fidivl
mov
pushf
xchg
lcall
dec
mov
sbb
inc
pop
dec
mov
test
mov
std
pop
call
sub
mov
subb
cmp
outsb
loope
call
je
cltd
int
or
adc
push
mov
mov
push
mov
lahf
pop
dec
repz
into
push
cs
hlt
mov
add
movsb
pop
mov
jne
jp
into
scas
in
dec
aam
pop
sub
shll
out
mov
addr16
cli
stos
lcall
shll
sti
adc
addr16
imul
and
sbb
stos
mov
mov
js
loope
or
cli
cmp
mov
inc
or
dec
jb
icebp
outsl
and
loope
xor
mov
movsb
and
adc
pop
mov
nop
decb
repnz
or
push
popa
push
xchg
adc
mov
hlt
inc
jo
cmp
or
pop
ljmp
mov
jae
inc
cmp
lock
out
push
push
pop
leave
push
jecxz
arpl
xor
jmp
aaa
add
jo
and
mov
xchg
test
fisubs
add
dec
gs
inc
mov
or
outsb
sub
lahf
call
shl
int
push
gs
lock
xchg
and
test
sub
out
xlat
out
inc
push
sub
aaa
mov
jnp
jne
into
mov
jl
push
xlat
sbb
nop
fs
mov
add
xchg
sbb
mov
sub
and
push
inc
sahf
sub
dec
roll
pushf
jmp
or
scas
loope
jmp
roll
pop
movsl
loop
push
fnstenv
cmp
pusha
subw
pushl
repz
aaa
roll
cli
adc
test
push
push
outsl
imul
xchg
incl
mov
dec
rcrl
addr16
shlb
ja
or
push
in
jnp
ret
fists
mov
lret
and
mulb
xor
add
rcr
bound
xor
pop
cmp
mov
stos
fidivs
int
cmp
leave
pop
xor
lcall
jmp
mov
push
rcrb
jle
mov
divl
fwait
mov
dec
dec
fs
sub
mov
add
into
and
inc
ficompl
mov
inc
dec
or
lods
scas
jno
arpl
in
jns
push
testb
inc
adc
jno
push
mov
fnstsw
lods
push
inc
pop
mov
xchg
fwait
sub
jbe
movsb
cmp
lds
mov
pusha
sahf
dec
subl
in
push
lret
jp
sub
fdivrs
popf
cmpb
cmp
adc
mov
inc
and
js
lea
xor
mov
pop
push
dec
mov
mov
es
mov
imul
shll
insl
lcall
loope
ret
mov
mov
stos
sbb
icebp
shrl
and
adc
or
sub
subl
call
push
cmc
out
prefetch
int3
shlb
inc
mov
pop
mov
push
pusha
add
gs
frstpm(287
lock
insl
test
outsl
push
idiv
ret
jl
aaa
ror
sub
jge
in
insb
mov
dec
imul
packssdw
add
add
or
in
dec
cmpsb
pop
sbb
pusha
inc
xor
push
add
push
daa
cltd
ret
jg
sti
or
sub
add
jp
imul
mov
add
cld
negb
pusha
mov
loop
int3
dec
mov
and
push
aam
test
pop
inc
test
cmp
fsts
sub
jmp
in
inc
push
push
idivl
aas
push
mov
inc
fcomi
fstl
loop
lods
cmp
mov
pop
jmp
clc
stos
dec
mov
addr16
inc
loope
add
orb
or
push
mov
mov
xor
outsb
push
ja
cltd
cmpsb
cmp
loope
repz
fiadds
lcall
aam
pushf
mov
push
push
dec
fcmovb
sub
push
mov
mov
outsl
sti
xor
movsl
inc
test
sub
leave
mov
incl
inc
lahf
and
test
imul
add
xor
repnz
xchg
inc
ljmp
xlat
in
mov
mov
push
jmp
test
push
popf
sub
lock
cmp
sub
sub
jmp
mov
out
inc
push
cmpsb
loope
test
jo
leave
call
in
push
xchg
push
mov
add
out
out
fcoml
inc
or
roll
insb
mov
add
andl
mov
sub
ss
les
loopne
cld
xchg
int3
hlt
pop
fimuls
shl
jecxz
sbb
cmp
fdivrl
sbb
jp
adc
enter
aas
pop
addl
je
mov
movl
push
and
pop
xor
fbld
popf
lea
mov
je
nop
dec
xor
and
loopne
add
mov
jnp
jle
push
jg
jp
lahf
dec
adc
sub
daa
sub
push
dec
push
xchg
cmp
sbb
add
cmp
jo
xchg
and
mov
in
mov
arpl
fs
dec
pop
lret
adc
cmp
in
or
daa
in
jne
sub
xor
jno
pushf
insl
movsb
idivl
aam
add
repnz
xorb
cmp
mov
iret
mov
lret
xor
stos
push
push
add
lcall
pop
movsb
adc
js
mov
cs
and
cmp
push
mov
mov
pop
dec
cltd
xor
add
xchg
xor
push
shrl
fstl
xchg
pop
bound
mov
and
and
mov
dec
sbb
test
enter
movsb
addr16
out
iret
stc
xorb
andb
sub
or
cmpsl
jne
imul
test
dec
xchg
add
movsb
sub
pop
pop
push
inc
cmp
stc
xor
push
mov
pushf
mov
inc
addr16
dec
push
pushf
and
shlb
outsb
add
mov
ss
ret
fiaddl
ss
in
scas
les
push
xor
lds
call
inc
lahf
dec
cmp
shll
push
fistl
add
or
jb
mov
inc
adc
pusha
and
pop
int3
xchg
aaa
or
dec
xor
rclb
adc
ja
cmpb
int3
imulb
addb
xchg
movl
je
push
jg
dec
inc
inc
mov
mov
scas
inc
lahf
mov
sbb
dec
into
mov
adc
movsl
dec
push
in
sbb
mov
xlat
jnp
repnz
push
adc
outsl
shlb
add
lods
pop
movsb
aad
push
xor
inc
inc
inc
test
lock
fldpi
into
leave
outsl
cmp
stos
test
mov
mov
repz
pop
mov
or
iret
dec
pop
fs
pop
xor
xchg
call
in
bound
movsl
insl
adc
xchg
cli
mov
add
lods
lock
loop
int
aad
out
pusha
loop
repnz
out
dec
nop
mov
mov
xchg
mov
daa
lcall
adc
fiaddl
mov
mov
std
popa
pop
mov
stos
push
adc
xchg
sub
and
pop
dec
loopne
mov
cmc
mov
lds
jg
jg
dec
ss
sub
pop
lret
lret
or
jle
mov
push
cmp
hlt
mov
loope
aam
mov
dec
pop
ljmp
imul
cmc
jne
test
dec
cld
inc
inc
or
lock
mov
ljmp
mov
leave
cmpsb
fldt
dec
xor
jmp
cs
mov
out
push
mov
mov
and
xchg
enter
adc
stos
cmc
int
pop
clc
mov
pop
and
push
hlt
pop
jnp
pop
lods
jmp
clc
mov
fsubl
mov
cli
fdivl
mov
fstpl
out
enter
xor
mov
aad
inc
hlt
int
shlb
stc
xor
or
sub
mov
insw
or
lret
pusha
pop
add
or
dec
pop
aaa
cmp
mov
es
in
mov
int
push
pop
subl
sahf
clc
jbe
mov
or
push
jns
push
fcompl
fidivl
imul
jae
aaa
shrl
fs
mov
sbb
pushf
int3
aam
add
mov
sbb
push
fstps
notl
test
cmc
mov
hlt
inc
xor
fisubrs
mov
nop
jno
sub
jne
cwtl
aas
jge
movsb
rclb
adc
push
test
leave
imul
jmp
xchg
sub
ret
testb
xchg
push
iret
inc
pop
xor
sbb
mov
push
mov
rcr
notb
cwtl
mov
ror
xor
sbb
nop
imul
push
mov
mov
popa
cld
push
dec
insl
adc
mov
dec
push
insl
pop
mov
out
sub
aas
insb
cmpsb
cmp
mov
aas
sbb
and
lcall
xchg
sbb
rol
pusha
dec
enter
fcomps
xchg
pop
rorl
sbb
mov
sbb
call
or
mov
aam
in
cmp
adc
std
add
dec
lcall
sarb
lahf
and
and
inc
dec
mov
pop
jmp
ds
shll
shrb
xchg
rclb
or
xor
in
dec
adc
addr16
subl
out
mov
mov
in
jnp
addb
xchg
xor
into
mov
popf
jge
sbb
mov
jo
and
icebp
jno
sti
bound
push
push
mov
and
mov
stc
push
sbb
lahf
pop
sbb
cmp
jnp
ret
pushf
les
es
mov
es
sbbl
rcrl
cmp
pushf
pop
xorl
xor
imul
pushf
pop
addr16
mov
xchg
in
push
mov
cmp
push
jmp
das
pop
jge
mov
add
int3
mov
ja
push
push
mov
pop
stos
xor
test
ret
xchg
push
rcll
sbb
push
mov
mov
sbb
mov
scas
dec
cli
lret
adc
das
adc
scas
shll
mov
mov
fcompl
add
dec
ret
jno
pop
add
jno
adcl
jnp
aad
subl
or
pop
dec
sub
outsb
jle
pop
out
or
data16
gs
pop
sbb
imul
fimull
lcall
mov
dec
fucomp
adc
push
bound
rolb
into
ret
test
cmpsl
in
fcmovbe
addb
mov
rcr
push
js
subb
mov
sbb
pop
ss
mov
or
std
lds
mov
repz
and
xchg
xor
jb
push
or
fcoms
and
add
cltd
insb
nop
daa
sahf
inc
sub
dec
cltd
xchg
cmp
xlat
loop
mov
mov
mov
and
mov
mov
cli
or
out
cmp
pop
xchg
sbb
fcmove
in
aad
mov
popfw
lret
lds
xchg
push
into
dec
imul
mov
and
push
add
sbb
or
enter
pop
xor
leave
push
fsubl
fs
mov
hlt
stos
cmp
test
cmp
lret
jecxz
xchg
fnstenv
andb
pusha
mov
push
sbb
cltd
sbb
xlat
jno
adc
cmp
lcall
cmp
jb
cmpsb
imul
sbbl
pusha
cmp
jp
les
into
scas
shll
mov
das
sahf
mov
inc
adc
test
xor
aaa
sarb
jne
popf
gs
adc
mov
mov
xchg
jne
mov
jl
stos
lcall
ss
lock
aas
lea
jo
inc
sub
or
bound
cmp
cmp
pop
xor
in
repz
std
ffreep
in
outsb
lods
and
push
bound
insb
icebp
out
and
scas
cmc
mov
xor
xor
mov
push
repnz
icebp
xchg
or
xchg
or
mov
sub
cld
adc
xchg
mov
mov
sahf
and
add
push
cmp
ret
stc
fistl
mov
push
add
add
aad
dec
inc
jns
rcll
xchg
fs
dec
sub
jne
add
sbb
and
push
cmp
pop
sahf
jecxz
cwtl
jns
icebp
mov
and
xor
out
mov
std
lods
cmp
cmp
jl
mov
mov
add
mov
push
out
dec
pop
xchg
lret
mov
jl
jge
pop
jp
outsb
int
in
adc
cmpsb
mov
mov
mov
xchg
xor
mov
jle
add
sbb
lahf
jae
push
xor
addr16
inc
call
negb
fimuls
xor
adc
or
pop
test
sarb
push
mov
imul
xor
or
push
mov
shrb
gs
dec
sahf
xor
add
dec
push
rorl
rol
clc
sbb
sub
test
aad
jnp
ret
addr16
cmp
jae
in
sub
insb
sbb
addr16
xchg
add
lret
lods
jnp
cwtl
cwtl
add
in
in
pop
sub
jne
scas
in
push
popf
unpcklps
aad
ljmp
movsb
inc
sbb
iret
or
loop
push
jns
hlt
push
shlb
and
repnz
mov
mov
lret
xchg
cwtl
mov
cmc
int3
jl
lods
mov
test
hlt
xchg
xorb
aam
or
cmpsb
repnz
outsl
hlt
int
inc
push
push
adc
add
lock
sub
inc
pop
test
inc
pop
aam
rclb
mov
sahf
ficoml
scas
fisubs
mov
daa
lods
mov
popf
push
es
mov
jmp
and
sbb
jbe
iret
iret
repz
sub
gs
pop
inc
sbbl
les
mov
push
cmp
fcmovne
js
add
jmp
jbe
xchg
xorps
push
add
call
rorb
pop
mov
adc
mov
push
push
movsl
mov
loop
xlat
mov
and
cli
xor
push
xchg
jmp
popf
insl
cmp
sub
fldenv
jnp
call
popf
dec
je
jle
add
dec
sbb
adc
dec
gs
pop
test
push
mov
add
pop
mov
nop
xor
lahf
stos
fildll
sbb
into
stc
cwtl
scas
push
sbb
fimuls
lods
inc
stos
rcrl
xchg
popa
mov
into
outsb
ss
sub
dec
data16
sar
fisttpll
adc
jno
sub
mov
mov
mov
or
xor
inc
pop
mov
mov
mov
icebp
jo
cmp
mov
test
sub
imul
xchg
mov
pushf
repz
xchg
add
rorb
nop
jecxz
inc
loop
fisubl
scas
icebp
outsl
into
xchg
mov
nop
sbb
cltd
inc
and
pop
and
lret
lds
pusha
and
in
notb
push
add
sbb
gs
dec
lea
lcall
nop
roll
cmp
or
adcl
add
or
inc
mov
out
pop
cmp
mulb
cmp
adc
jp
xlat
inc
rcrl
movl
aam
lds
stos
outsb
mov
lcall
inc
out
jle
or
outsl
ret
xchg
jl
sbb
pushf
inc
dec
mov
cmpsb
aaa
pusha
jge
inc
and
mov
jl
inc
sbb
sub
mov
cwtl
push
in
ret
pusha
rcr
xlat
xor
aad
aad
pop
stc
roll
inc
cld
mulb
cmp
mov
sbb
push
cmp
mov
stos
mov
nop
les
cmp
bound
int3
fidivrl
stc
aam
mov
ljmp
nop
addr16
pop
inc
or
les
data16
arpl
testb
int3
insb
mov
jp
push
daa
imull
sti
inc
pop
or
ficoms
fstps
add
push
fdivl
sub
fldl
lea
cmp
dec
pop
or
dec
fildl
lcall
movsb
and
sub
repz
lods
pop
jbe
xchg
push
mov
adc
jns
gs
rcll
sub
jne
sar
movsl
fldt
stos
push
mov
sbb
loop
out
loop
xchg
sub
xorl
jns
cmp
lods
mov
sbb
scas
push
xchg
dec
movb
mov
push
push
mov
mov
or
mov
repnz
sbb
mov
lods
pop
mov
cmp
loop
pop
lret
mov
rolb
add
insb
fs
xchg
adc
cmpsl
pop
mov
iret
and
add
push
out
xor
dec
pop
shll
mov
out
frstor
add
or
out
dec
jbe
push
add
add
push
shl
or
push
daa
ror
cmc
add
popa
inc
mov
movsl
push
jle
in
dec
fimuls
jmp
rcr
je
pop
ja
cmp
gs
jmp
gs
pop
fwait
shll
imul
in
jnp
xchg
and
std
ljmp
pop
add
inc
jecxz
jbe
faddp
inc
out
insl
movsb
jmp
cwtl
add
aaa
inc
jno
inc
adc
lds
sbb
cmp
xchg
xor
sar
and
mov
fistl
shrl
out
ljmp
jb
jg
rcl
dec
mov
add
shlb
insb
ret
icebp
in
mov
loop
dec
or
lds
mov
les
pop
stc
mov
les
ljmp
repnz
mov
cmpsl
sub
gs
or
out
in
cmpb
or
push
arpl
scas
lret
mov
test
cmp
pop
sbb
adc
xor
lcall
sbb
mov
cmp
clc
jno
loopne
out
out
insl
popa
mov
adc
adc
das
sbb
jbe
push
add
loopne
pop
stc
mul
pusha
sbb
push
and
sub
xchg
adc
jl
add
lods
and
push
inc
cwtl
aas
in
adc
inc
out
loope
in
jno
jbe
cmp
repz
jbe
adc
push
outsb
pop
mov
fs
pop
push
dec
pop
add
and
out
ret
test
add
add
pusha
loope
cmp
jmp
mov
jmp
sbb
and
orl
enter
mov
xchg
inc
scas
xchg
test
stos
mov
pop
mov
dec
rolb
lock
int
cs
inc
leave
xorl
cmp
inc
aaa
aaa
mov
dec
mov
push
imul
in
lds
cmp
and
mov
daa
mov
adcl
xor
mov
dec
inc
pop
pop
or
xchg
sub
push
push
jae
hlt
jp,pt
adc
in
icebp
mov
in
repnz
mov
test
rol
sub
ss
jmp
repnz
popa
mov
mov
add
ss
mov
loopne
lds
mov
leave
rcrl
adc
mov
outsb
or
pop
xchg
cmp
test
mov
dec
sbb
push
mov
mov
std
aaa
cmpb
sbb
call
aad
pop
sarb
insl
lock
pop
std
adc
push
addb
in
imul
or
cwtl
es
mov
pop
cld
scas
add
adc
pop
out
mov
popa
mov
subl
add
xchg
dec
fs
in
or
xchg
stos
pop
pop
adc
inc
aam
popa
inc
loop
movsl
adc
mov
daa
mov
rclb
pop
xchg
fldcw
mov
iret
cmp
mov
mov
push
enter
mov
pusha
les
sub
push
xchg
test
adc
negb
cmp
ss
test
dec
mov
jne
cmpb
mov
pushf
leave
fidivrl
out
sub
xchg
lahf
int3
or
inc
loope
or
mov
fcmovbe
xchg
shlb
xchg
pop
jle
pop
and
hlt
pop
and
sub
inc
movsl
in
fsubl
inc
xor
fildll
int
enter
arpl
adc
mov
xchg
sbb
packssdw
add
inc
test
xchg
jge
mov
leave
fisubs
bound
fcompl
les
and
cmp
push
iret
loopne
dec
cmpsb
cltd
xchg
xor
jmp
mov
daa
dec
mov
inc
mov
mov
pop
call
insb
movsb
sbbb
arpl
fbld
dec
subps
pushl
stc
rcrl
and
fdiv
leave
sbb
je
mov
push
dec
sub
ss
enter
jno
test
sub
mov
jl
jl
leave
leave
mov
cmp
mov
and
inc
inc
movsl
out
mov
out
daa
mov
out
push
shll
mov
test
cs
lods
clc
iret
cli
push
inc
pusha
mov
cmp
push
in
jo
es
mov
outsb
ret
add
xchg
mov
dec
shll
shll
mov
mov
sahf
xchg
stc
sbb
movsl
mov
mov
mov
loope
lret
xor
js
ss
dec
orl
cmc
pop
test
or
jne
jns,pt
and
adc
sbb
sahf
sub
inc
cltd
outsl
cmp
jle
loopne
ror
repz
add
lea
add
fstps
sub
jge
daa
movsb
fwait
inc
xchg
or
pop
jno
cmp
in
jl
mov
daa
repnz
mov
adc
jge
pop
mov
pop
cmp
ljmp
or
dec
or
das
ret
fldl
mov
dec
pop
movsl
xor
cmp
ret
xchg
inc
or
cmp
test
jmp
imul
out
loop
adc
ret
hlt
enter
out
enter
xor
sahf
mov
jne
pop
mov
jno
subl
mov
into
cs
sub
shrl
mov
out
dec
imul
incl
outsb
cmpsb
fwait
mov
jne
xlat
out
ljmp
cmp
mov
dec
nop
imul
jl
jne,pn
cli
xchg
sbb
stc
ss
mov
mov
out
xorb
push
and
mov
push
xlat
sub
push
push
cld
dec
popa
inc
mov
sbb
in
cmp
outsl
addr16
stc
inc
popa
xlat
and
dec
pop
mov
inc
mov
pop
loopne
rcll
leave
jnp
cmp
enter
and
lahf
jo
in
fsin
mov
popf
mov
pusha
cli
sbb
imul
in
push
pop
mov
mov
lock
nop
or
pop
insl
cmp
xchg
xchg
xchg
lock
mov
add
push
mov
add
pop
lahf
jmp
and
push
loope
jno
or
ret
and
push
pop
sbb
or
test
pushf
and
les
rol
mov
cmp
int3
inc
insb
jl
mov
testl
fimuls
push
loop
outsb
ss
cli
out
xchg
aaa
jbe
push
sub
icebp
pop
jmp
into
mov
mov
stc
push
xor
movb
popl
pop
movsl
pop
mov
adc
push
mov
xchg
pop
cmc
insl
imul
cmpsl
mov
jp
xor
mov
mov
pop
xchg
cmc
and
dec
xchg
push
sub
popa
les
push
out
pop
mov
push
in
jb
or
cmp
mov
shll
add
xorb
je
ficompl
dec
imul
les
rclb
cmp
mov
inc
data16
xchg
dec
enter
jb
fistpl
push
movsb
insb
add
pop
nop
inc
aad
fcmovnbe
pushf
mov
nop
and
cmp
jns
push
cmp
in
sahf
pusha
lods
mov
fs
outsl
outsl
push
outsb
push
mov
aaa
and
lcall
movsb
sti
cmpsl
movsl
pusha
outsb
mov
imul
iret
mov
sub
dec
inc
add
ficoms
ret
or
arpl
arpl
call
push
lods
mov
fwait
xchg
xchg
je
cmp
das
test
and
add
movsl
mov
jge
sub
mov
inc
sbb
jo
ret
add
subb
sub
xchg
daa
jge
and
sti
mov
enter
lahf
sbb
or
inc
test
xchg
aad
xor
sbb
sbb
ss
ds
cld
shrb
or
inc
cmp
jns
push
mov
out
in
js
sbb
das
mov
fldt
cmpsl
pusha
dec
stos
push
inc
popa
jbe
push
daa
push
pop
and
aam
lods
xor
aam
cs
clc
xor
sub
push
adc
or
stos
mov
mov
out
or
push
loopne
les
jle
in
jo
mov
bound
iret
rcr
mov
push
or
push
adc
jecxz
cmp
add
inc
sbb
loopne
fldlg2
gs
xchg
sbb
jnp
xchg
pop
inc
cld
cmp
clc
in
cmp
imul
clc
lods
adc
mov
push
xor
sbb
lret
or
jmp
xchg
inc
aad
scas
lret
xchg
and
sub
enter
push
xlat
add
xchg
dec
popf
mov
mov
adcl
and
cmp
loopne
es
mov
inc
xchg
pop
jmp
movsl
cmc
int
in
xlat
jl
in
lcall
jae
pushf
jg
fs
sbb
and
or
cli
xchg
jb
add
inc
sub
add
fwait
loope
mov
aas
insl
mov
jmp
aas
push
jno
mov
xor
and
xlat
or
aaa
mov
add
fcmovu
int3
daa
adc
cmp
and
xor
jae
aaa
pop
aam
in
push
jb,pn
cmp
mov
stos
push
adc
or
stos
mov
ss
ret
pusha
int3
push
xchg
sbb
xor
cmp
int3
movsb
dec
mov
and
pop
movsb
or
and
hlt
popa
jne
cltd
cltd
iret
or
mov
addl
inc
inc
jo
sti
sub
loope
sub
pusha
aam
data16
xor
je
imul
pop
cld
cs
xor
pop
inc
inc
mov
test
imul
outsb
ds
pusha
ljmp
xchg
cwtl
dec
or
mov
xchg
cli
cmp
mov
and
aas
dec
pusha
and
pusha
mov
sub
jbe
roll
push
dec
jbe
or
fs
enter
jl
in
add
jno
stos
xchg
lods
xlat
jmp
pop
imul
mov
xchg
addr16
jno
lret
mov
jmp
xchg
sub
mov
in
into
cltd
fincstp
stos
push
push
orb
lahf
popa
fstpt
xchg
rcl
adc
pop
bound
jg
xor
test
mov
insb
lahf
or
dec
mov
jle
bound
ja
pushf
je
aad
push
dec
es
subb
icebp
in
jns
cmpsb
incb
xchg
jl
xchg
sbb
add
jae
lds
addl
in
repnz
je
xchg
and
dec
jbe
jecxz
scas
cld
ljmp
sub
call
inc
jno
push
pop
lea
mov
dec
in
add
lods
and
sub
push
call
mov
xor
add
sub
xchg
adc
sbb
add
lods
loop
add
mov
push
in
mov
sbb
push
sub
pop
mov
or
cmp
data16
or
push
cltd
jb
icebp
sbb
jmp
loope
inc
lret
adc
cwtl
iret
das
mov
dec
addb
in
or
cwtl
decb
in
pop
fndisi(8087
daa
addr16
sub
or
adc
or
pop
in
and
or
lods
mov
test
xchg
outsl
ffreep
mov
jmp
pop
cwtl
lret
push
mov
movsb
outsl
stos
pop
or
mov
test
popa
add
idiv
aad
sbb
lock
icebp
lahf
fcmove
mov
push
lods
lret
xor
lock
mov
ret
cli
bound
cmp
pop
mov
xor
fsubrs
daa
mov
add
in
data16
test
movsl
xor
ret
mov
dec
icebp
mov
sub
jmp
repnz
mov
fwait
jne
xchg
ret
out
mov
xchg
pop
xchg
mov
mov
inc
sub
out
cltd
mov
arpl
daa
mov
mov
pop
movsl
xlat
stc
fdivs
xor
mov
adc
adc
dec
lea
hlt
adc
mov
orl
mov
jecxz
lret
movsl
mov
sub
daa
and
in
cmp
out
mov
insl
push
or
aas
xor
mov
mov
cmp
jb
push
mov
scas
mov
sub
lods
outsl
stc
lods
ss
mov
jns
jne
push
out
xchg
loop
add
jae
dec
hlt
mov
fiaddl
stc
fdivs
cmpsl
popl
nop
push
movsb
xor
mov
mov
adc
les
mov
push
xchg
xchg
rolb
add
inc
jo
ja
sbb
adc
pop
lcall
lods
mov
adc
jecxz
xchg
inc
xchg
add
icebp
jl
pusha
mov
push
dec
mov
pop
mov
ljmp
sbb
jb
ret
test
add
xchg
xor
ss
mov
cld
scas
sbb
mov
push
sbb
xor
hlt
jb
and
mov
ja
mov
call
into
dec
hlt
repnz
push
and
sbb
cli
rcl
xchg
push
cmp
in
jge
out
mov
sub
mov
mov
push
pushl
in
adc
dec
add
mov
push
dec
push
aaa
mov
pop
or
addr16
stos
popa
negb
cltd
call
push
mov
sbb
pop
iret
sbb
xlat
mov
xor
mov
lahf
movsb
outsb
xchg
insb
xchg
enter
sub
mov
mov
out
pop
cld
mov
adc
fsubs
jl
push
mov
pop
add
ja
int
out
sarl
out
push
in
lret
sbb
clc
and
fwait
jge
sub
lock
jle
inc
jge,pn
inc
add
stos
xor
lds
xchg
xacquire
pop
popa
add
int
and
mov
inc
sbb
push
rorl
xor
jge
aaa
loop
lret
movsb
lcall
sbb
test
loopne
and
ficompl
fnstsw
movsl
jl
push
es
push
pop
push
mov
xor
or
dec
dec
dec
adc
cmc
xlat
in
adc
popa
mov
mov
xchg
shrb
push
mov
mov
mov
nop
int3
lret
in
mov
mov
lcall
ja
dec
in
lahf
movsl
sbb
jbe
dec
nop
fstpt
sbb
arpl
nop
push
sbb
sbb
cli
mov
xor
cvtdq2ps
sub
in
cmp
shl
add
inc
mov
inc
sbb
shll
insl
imul
shll
lea
test
stos
faddp
addr16
pop
sub
ja
adc
mov
or
int3
stos
cmpl
sub
xchg
rcl
add
repnz
sub
xchg
mov
jecxz
or
movsb
jle
jle
cmpsb
negb
sub
stos
or
dec
iret
and
clc
push
ret
xchg
jg
enter
cmc
bt
mov
imul
test
inc
xlat
movsl
xchg
mov
jg
inc
add
jno
inc
xchg
clc
js
icebp
inc
xor
jle
and
lods
adc
jo
jmp
add
mov
jg
subb
iret
pmulhw
imul
sbb
cmp
cmp
aad
lock
and
dec
mov
in
outsb
stos
filds
mov
inc
je
insb
scas
xor
fsubrs
imul
add
xchg
cmp
pop
adc
inc
les
adc
cmp
or
xor
test
leave
mov
jnp
std
aam
pop
add
or
or
xlat
and
ss
cwtl
int3
dec
lods
jmp
mov
mov
jb
mov
inc
sbb
ljmp
jle
int3
inc
ds
jno
cmc
idivl
lods
leave
cmp
negl
push
in
ja
sub
inc
test
pop
mov
ficoml
mov
in
pop
ljmp
addr16
mov
mov
and
push
xor
dec
lahf
mov
jmp
xchg
les
stc
mov
mov
rorl
sub
out
xchg
adc
arpl
dec
int
mov
jno
cmp
or
fldl2t
out
into
push
stos
sti
fnstenv
pusha
loope
ljmp
ret
popa
popa
cmc
enter
xchg
sbb
fsubl
dec
mov
lods
push
sti
and
aad
rclb
dec
lahf
sbb
xchg
in
xor
add
adc
repz
mov
add
pop
stc
lret
inc
adc
lods
jno
lods
in
insl
jo
adc
pop
xchg
mov
sbb
mov
lds
sub
xchg
xor
xchg
scas
and
mov
std
jecxz
xchg
int
int
adc
aas
into
jp
testb
jp
push
push
or
in
jp
sub
sub
mov
and
and
or
or
dec
xchg
adc
dec
adc
ss
jae
xchg
dec
movsl
dec
jo
or
fidivl
or
test
mov
fcompl
push
push
cmp
shr
fldenv
push
mov
jl
mov
movsb
bound
fistpll
mov
js
into
fisubl
addb
subb
dec
sub
dec
mov
in
outsb
ljmp
cld
aam
mov
mov
loopne
std
test
stc
shlb
dec
ret
fnsave
ss
jbe
cmpsl
add
dec
add
test
repz
jne
sub
jge
push
int3
pop
pop
seto
loop
testl
popa
cmp
into
sub
xchg
sub
mov
and
adc
daa
jne
paddb
and
stc
lock
or
mov
dec
jne
loop
mov
aad
mov
and
push
mov
imul
adc
or
adc
bound
cmp
xchg
out
sub
dec
decl
insl
outsb
cltd
and
sub
add
and
loop
mov
sub
cmp
inc
or
shrl
sarb
xchg
xchg
mov
jg
jmp
cs
mov
mov
sub
inc
pop
out
ret
add
bound
cmc
cmp
enter
xchg
push
insl
push
rolb
or
pop
xchg
or
loopne
adc
call
scas
push
and
mov
mov
cmp
pop
scas
push
mov
imul
cmp
cmpsb
jge
inc
inc
stc
xor
lods
push
rorb
xchg
sahf
mov
test
lds
and
mov
or
xorl
and
pop
pop
add
jb
pop
aaa
add
xchg
in
inc
ret
les
mov
pop
mov
mov
test
or
jmp
in
mov
xor
icebp
popa
and
mov
sbb
push
jp
mov
cmp
rorl
imul
repnz
mov
js
repz
xor
adc
popl
rclb
sbb
push
js
in
popf
cmpsb
lds
shlb
xchg
ljmp
inc
test
arpl
or
xchg
jne
xchg
outsl
ja,pn
out
push
push
nop
enter
shlb
not
stos
les
cmp
aad
fsubs
xchg
rolb
or
pop
faddp
aam
jo
and
push
das
mov
or
stc
mov
movsl
inc
popf
es
dec
sti
sub
iret
xlat
mov
into
xor
mov
clc
add
mov
repnz
sbb
mov
mov
xchg
repnz
mov
test
mov
repnz
xchg
jbe
jp
mov
adc
xor
jo
and
pop
pop
sbb
nop
push
addr16
das
scas
sbb
test
fidivs
iret
mov
xor
imul
adc
lret
hlt
fs
out
xor
popf
push
pop
add
xchg
lret
mov
mov
cld
call
push
dec
mov
pop
xchg
faddl
dec
repz
outsl
aam
aas
je
pusha
push
push
mov
loope
add
pop
sbb
insb
sti
test
int
pusha
jnp
pop
mov
mov
mov
push
push
push
data16
aam
inc
mov
jae
and
stos
and
filds
ss
cmp
xchg
jnp
mov
cmpsb
lret
cwtl
pop
repnz
pop
pop
ss
popl
mov
insl
pop
and
push
cmp
stc
movsl
jno
out
mov
dec
je
sub
out
test
fcomps
lahf
sub
int
xor
lret
ljmp
sbb
lods
nop
rcr
push
out
es
repz
add
mov
xchg
and
loope
jl
inc
and
pop
int
mov
repnz
mov
mov
insl
push
push
pop
rcl
mov
xlat
cmp
sub
adc
arpl
pusha
mov
cmc
lods
cltd
rcll
in
mov
and
and
in
enter
popa
add
fimuls
mov
mov
xchg
sbb
cmp
negl
in
je
or
sub
mov
fs
add
mov
dec
xor
jp
sub
pop
jmp
xchg
cs
mov
fcomps
call
or
in
scas
push
add
sbb
popf
xchg
mov
pusha
push
call
lds
sbbb
inc
mov
cmp
divb
pop
jne
push
in
in
jb
dec
mov
sbb
sbb
lgs
movsb
sti
fsubl
movsb
and
es
mov
jecxz
insl
sbb
fs
cmp
jp
mov
mov
cmpsl
cmc
enter
loope
movsb
pop
cwtl
inc
or
sub
xlat
cmpsl
xchg
push
inc
rcll
shl
jnp
es
cmp
icebp
imul
stos
arpl
xor
icebp
fwait
add
push
mov
ljmp
cld
roll
jle
stc
cmp
xchg
daa
adc
in
mov
rcl
dec
dec
xor
push
in
sbb
addr16
mov
add
xchg
lret
mov
dec
cmpsl
das
fsubr
jnp
sbb
xor
aam
mov
dec
mov
fistpl
lds
fiaddl
out
dec
fisubs
inc
not
ret
inc
xchg
push
sbb
sbb
push
sbb
adc
xor
sub
aad
aad
popa
mov
xor
lds
aas
xchg
outsl
lods
add
dec
ret
add
or
jne
data16
adc
repnz
mov
jl
mov
jle
mov
call
mov
sub
inc
mov
push
xchg
push
dec
add
xchg
loop
lds
inc
jge
aaa
aaa
pop
and
xor
test
loope
stos
pop
mov
nop
ljmp
imul
subl
mov
inc
bound
adc
imul
aas
fistpll
ja
push
lret
cmp
dec
cmp
jmp
pop
hlt
scas
bound
shll
mov
dec
cmp
fstl
enter
hlt
or
outsb
movsb
pop
mov
mov
mov
inc
js
cmc
jp
sbb
mov
ret
lods
jmp
out
push
push
xor
icebp
jmp
popa
shll
movsb
mov
cli
inc
test
mov
cwtl
sub
push
pop
loop
mov
pusha
in
add
and
adc
lahf
mov
inc
cli
xchg
rclb
bnd
iret
mov
call
or
and
mov
add
adc
pop
mov
xchg
ja
roll
adc
and
or
test
dec
push
and
loop
clc
ds
insl
std
mov
mov
add
sub
or
mov
adc
sub
xchg
sbb
jo
loop
dec
cmp
cmp
xchg
test
jg
data16
sbb
dec
fwait
mov
lret
adc
rcrl
ret
pop
test
xchg
mov
dec
xchg
jno
cmp
adc
cmpsl
repz
ret
jmp
mov
movsb
inc
xor
push
js
dec
fisubrl
addr16
popa
push
xor
push
xchg
outsb
fsub
mov
dec
lds
shl
aam
fmuls
xchg
jbe
cwtl
mov
mov
push
loopne
mov
test
pop
and
loope
sub
hlt
dec
lahf
sbbl
data16
cmp
mov
stos
lds
xchg
out
pop
fwait
in
cmp
mov
fwait
insl
arpl
cmp
test
sbb
xchg
arpl
insl
adc
adc
enter
inc
adc
add
cs
dec
fdivrs
in
fidivl
insb
mov
cld
cmpsl
xor
pop
test
jg
mov
cmp
adc
and
mov
inc
loop
popa
fsubrp
mov
push
lods
lcall
jns
repnz
push
pop
push
lret
stos
shrl
lahf
daa
push
gs
and
push
adc
mov
and
sub
movsl
sbb
xchg
inc
pushf
test
push
andb
sub
loop
imul
mov
sar
xchg
jecxz
aam
mov
dec
cld
das
stos
dec
pop
sbbb
dec
out
dec
fs
mov
fwait
pop
rorl
mov
fldcw
in
loope
add
insl
push
add
push
dec
dec
sbb
jg
jo
rol
cli
or
out
pop
js
add
dec
cmpsl
xor
adc
add
pop
pushf
dec
pcmpeqw
cli
or
push
test
push
sbb
es
mov
and
rolb
scas
lods
scas
cld
enter
dec
test
xchg
out
mov
add
pop
dec
stc
pusha
or
mov
popa
mov
int3
push
pop
icebp
mov
hlt
cmp
mov
int
xlat
cvtps2pd
jge
sub
ljmp
xchg
mov
fisubl
repnz
dec
iret
inc
int
int3
mov
cmpsb
xlat
mov
push
mov
cwtl
fldl
leave
cmp
int
nop
cmp
push
movsb
pop
aaa
sub
sbb
std
xor
popa
pop
dec
stc
sub
jno
xor
cmp
push
lods
pop
sbb
std
mov
roll
cwtl
in
nop/reserved
fstpl
cmp
add
pop
or
push
dec
stos
mov
lea
jne
jle
pushf
dec
in
mov
and
cmpsl
sub
je
xchg
and
movsl
addr16
ud1
mov
push
rol
and
cwtl
hlt
fidivl
xor
or
add
int
push
push
jge
sub
mov
mov
repnz
xor
push
xchg
in
stc
imul
pop
in
cmp
cmp
loopne
out
cmc
les
or
loope
insl
jno
mov
mov
push
adc
xor
fidivs
mov
mov
loope
and
mov
and
adcb
inc
mov
imul
mov
push
lods
push
add
sub
stc
adc
sbb
jb
push
cmp
push
sbb
adc
imul
xor
fwait
stos
inc
xchg
sub
mov
test
in
mov
scas
adc
xlat
pop
loopne
arpl
repz
adc
rolb
std
ds
mov
pop
rcrb
inc
lahf
adc
push
daa
jo
cmp
aam
in
orb
pop
xchg
add
fnstenv
fwait
sti
adc
bnd
js
inc
jmp
sub
inc
mov
and
sbb
das
sbb
mov
sub
dec
je
aaa
inc
dec
data16
pushl
test
jo
in
insl
shll
cmp
shlb
loop
test
insl
js
and
imul
inc
jg
bound
fsubr
int3
push
test
mov
cmp
ficoms
mov
dec
addr16
jle
mov
pop
add
aas
inc
or
jo
mov
or
and
out
ret
ja
lds
push
jno
stos
pop
xchg
add
fxch
in
sub
jo
es
pop
or
xchg
pop
pusha
dec
inc
scas
sub
mov
mov
test
jb
or
aad
nop
jp
lcall
pop
test
repnz
test
inc
lcall
mov
adc
inc
add
mov
mov
xlat
xchg
aaa
sbb
icebp
mov
xchg
jecxz
rcrb
daa
sub
aad
and
addl
mov
repz
pop
or
mov
sub
outsb
insl
push
mov
bswap
inc
pop
dec
nop
movsl
mov
sahf
sbb
or
cwtl
repnz
xor
rorb
jo
cmpsl
test
mov
push
mov
jno
daa
and
inc
lret
loopne
inc
jg
nop
scas
jle
dec
adc
lods
or
and
ljmp
inc
fdivrl
xchg
inc
aas
cltd
fsubrp
mov
js
sub
int
stc
pop
xlat
icebp
loop
push
adc
and
pop
dec
dec
mov
pop
stos
out
xchg
xlat
nop
fs
mov
mov
adc
addr16
call
pop
mov
mov
mov
sbb
push
cld
sti
pop
loop
popa
mov
xchg
aad
mov
pop
xor
cmp
lret
and
mov
shr
fsubl
ss
dec
or
popf
outsl
scas
xor
mov
xor
cmp
shll
mov
ja
pop
push
push
cwtl
cmp
dec
sahf
jae
pop
sbb
lods
mov
scas
xor
aam
sbb
adc
jp
inc
jb
ficoms
sub
dec
test
and
dec
mov
cltd
roll
sbb
dec
jne
pop
xchg
mov
inc
add
jns
xchg
aas
push
lahf
push
cs
iret
push
or
adc
xor
and
imul
inc
iret
xor
add
nop
pop
addl
push
addb
frstor
test
fs
out
mov
mov
out
or
pop
aaa
dec
loope
popf
test
mov
xchg
sbb
stos
mov
mov
test
lock
in
cld
out
pop
daa
mov
cmp
mov
mov
push
lret
shlb
decb
jo
pop
xchg
ret
in
lods
fwait
mov
pop
pop
ss
mov
xor
cs
sub
mov
shll
mov
fnsave
in
jge
loop
pop
jg
icebp
xor
dec
sti
aam
cltd
leave
adc
pop
sub
mov
popw
imul
js
addr16
ja
sub
aad
mov
pop
push
push
add
push
sbb
scas
mov
or
call
test
les
inc
dec
cmp
pop
sbb
fidivs
jnp
sbb
xor
mov
repnz
aam
cmpsb
or
dec
jno
scas
ret
das
test
movsl
pop
gs
lock
aad
sbb
push
add
mov
jbe
repz
push
adc
inc
or
in
mov
mov
mov
dec
repz
sbb
xchg
sub
aam
or
testb
jp
inc
cmp
mov
sbb
cmp
scas
mov
and
lahf
cs
jb
gs
cmp
sbb
inc
xchg
ret
mov
sub
mov
negb
aam
fdivrs
xchg
ror
xor
cli
mov
xor
jp
sub
adc
fsubrs
decl
dec
stos
cwtl
pop
out
cmpsl
subl
cld
and
shrl
inc
out
mov
pop
in
mov
adc
mov
push
mov
sbb
sbb
pop
les
mov
int3
lods
divb
mov
dec
lods
dec
testl
loopne
in
mov
cmp
out
and
sbb
jae
mov
jb
mov
cld
outsb
inc
pop
data16
xor
xchg
repz
adc
andb
movsb
sbb
inc
cmp
mov
mov
outsb
sbbb
popa
shll
cmpb
inc
and
stos
pushl
adc
dec
cs
addl
out
aas
sub
pop
push
inc
pop
pusha
sbb
test
mov
jg
add
es
dec
popa
inc
aas
dec
add
loope
push
test
xor
sbbb
mov
dec
cmp
popf
mov
int3
je
xchg
push
out
push
mov
mov
popa
dec
and
test
out
outsb
and
cmpsl
add
xchg
mov
arpl
out
xor
adc
ret
or
jge
mov
lahf
mov
int
add
cmp
push
imul
filds
lahf
movsl
push
mov
or
xchg
ss
xor
pop
sub
jae
dec
and
cmp
dec
lahf
cmp
mov
mov
cmp
test
sub
or
dec
cli
outsb
ret
jle
cmp
add
fwait
push
push
orl
aas
std
mov
and
push
clc
add
dec
add
push
jmp
ret
test
out
inc
mov
lods
ds
jnp
out
insl
mov
pop
sbb
out
jg
stos
in
push
push
repnz
add
push
cmp
mov
lds
jg
popa
dec
inc
lods
xor
push
push
leave
fwait
cmpsl
or
lods
call
adc
or
mov
nop
cmpsl
cmp
rclb
push
adc
sarl
cmpsb
mov
mov
sbb
lea
cmp
fcoms
aaa
and
pop
dec
pop
sub
xchg
arpl
xchg
pop
cwtl
jo
inc
pusha
mov
xchg
ljmp
fs
mov
mov
and
pop
aad
dec
cmc
pop
int
daa
mov
jmp
icebp
ret
and
mov
movsl
lods
pop
lods
push
mov
sbb
js
test
mov
nop
scas
das
imul
stos
pop
faddl
push
jbe
jae
aaa
inc
inc
ficoms
aas
in
mov
std
mov
call
mov
stos
pop
and
mov
cltd
lcall
leave
dec
or
adc
aad
sti
jg
and
xchg
lods
je
fistpl
inc
and
xchg
out
mov
cli
cmp
or
lret
fsts
pop
fwait
das
jnp,pn
fcoms
jnp
outsb
aaa
imul
and
cmp
lret
loopne
inc
xchg
mov
call
unpcklps
aam
mov
scas
mov
repz
hlt
call
xchg
mov
inc
or
jb
push
aaa
mov
roll
pop
ficoms
sahf
cmp
in
mov
lds
or
addr16
loope
xchg
stos
mov
fsubrs
cmpsb
fsubrs
jp
popa
fcomp
test
xchg
pop
sub
and
sbb
mov
dec
xchg
fcomp
jge
push
pop
sti
or
rol
test
add
int3
dec
in
jg
push
cld
push
push
not
mov
daa
cs
cltd
incb
mov
icebp
insb
rolb
fistps
jne
sti
nop
push
mov
enter
sbb
imul
lods
js
jl
cwtl
dec
mov
lea
outsb
jae
loop
int
add
add
sub
insb
test
ret
push
sub
cwtl
in
into
or
ret
enter
and
pop
das
fwait
or
popa
into
imul
mov
jb
dec
test
shrl
mov
or
add
cmp
jns
stos
jae
push
outsb
mov
int
adc
in
std
sahf
add
imul
jge
dec
mov
mov
addr16
outsl
dec
or
loop
lcall
jns
pop
push
mov
xchg
or
add
mov
aam
jmp
ds
pop
xor
out
lret
sub
mov
jb
dec
or
stos
fidivrl
push
dec
mov
pop
aas
xchg
jae
fidivrl
mov
mov
in
adc
sub
mov
fistpl
stc
inc
dec
adcb
or
push
es
outsb
lods
psubb
iret
mov
dec
into
push
xchg
into
xor
xchg
and
add
xchg
andb
mov
sub
dec
aam
and
mov
aam
ds
cmpsb
sbb
inc
add
sahf
nop
sub
jae
adc
in
sub
xchg
cmpsl
movsl
clc
fdivs
mov
icebp
push
mov
mov
xchg
adc
jge
cmp
mov
nop
mov
loopne
stc
cmp
movsb
or
sbb
xor
movsl
mov
and
iret
cli
daa
std
daa
lods
rclb
stc
mov
clc
jl
push
dec
dec
into
sub
test
add
pop
push
xchg
ljmp
mov
pop
rorl
adc
enter
scas
out
popa
mov
test
cmp
inc
cmpsb
pop
movzwl
inc
xchg
pushf
fcmovnbe
enter
xor
dec
adc
mov
in
lret
push
je
pop
outsl
cmp
dec
lods
popa
sbb
sub
testl
sub
xchg
jmp
pop
pop
mov
sub
pop
mov
jecxz
push
fists
repnz
mov
pop
call
xchg
mov
jle
sub
fildl
or
adc
cmp
jo
dec
sub
adc
aaa
sub
push
sub
add
xchg
movsl
jge
das
mov
ds
out
in
xor
fisttps
lret
gs
sti
pop
add
push
mov
mov
test
repnz
ret
add
je
lds
xor
clc
xchg
fldl
call
test
jecxz
ret
stc
dec
xchg
xor
mov
push
jo
mov
or
movsl
jmp
xchg
xchg
jo
cli
call
mov
adc
dec
in
push
ss
mov
mulb
dec
not
ljmp
xor
sub
sub
mov
cmp
mov
dec
and
fwait
push
or
push
shrb
inc
and
mov
xchg
icebp
pop
aad
out
in
jb
dec
outsb
push
out
push
mov
les
sub
cmp
xor
lds
fs
icebp
std
aas
push
inc
pushf
xchg
outsb
ss
push
in
shr
cmp
rcl
mul
jl
sbb
popa
xchg
xchg
mov
fistpll
pop
stc
in
stos
push
outsl
push
pop
test
jle
insb
jmp
sub
ljmp
mov
jmp
jp
inc
adc
hlt
in
push
pushf
xchg
or
fildll
imulb
loope
cmpsl
mov
lods
test
push
mov
sbbb
adc
push
arpl
push
jns,pt
cmp
jecxz
and
sub
es
inc
xor
out
xlat
push
sub
mov
sub
cld
ljmp
or
dec
mov
out
mov
push
push
sbb
test
outsl
xchg
mov
pop
aaa
pop
sub
shlb
lret
push
mov
push
adc
mov
stos
test
cld
mov
adc
jo
enter
and
xlat
enter
je
stc
push
sub
mov
push
push
mov
repz
add
dec
fnstenv
fcompl
push
les
out
jp
cli
loope
gs
sar
lods
xchg
ljmp
fistps
jg
sub
mov
push
scas
dec
xor
addr16
dec
lds
mov
jmp
fwait
push
mov
or
lods
out
into
xchg
cli
lcall
imul
dec
faddp
jae
xor
xchg
jae
and
inc
jbe
dec
xor
push
test
or
jae
fisubrs
mov
mov
into
or
xchg
push
loope
int3
xchg
mov
add
jecxz
outsl
cmp
fdivs
test
jno
dec
fcmovbe
xor
sahf
lods
ss
cmpl
and
filds
add
xorl
iret
icebp
inc
or
cs
les
pop
and
stc
sub
and
imul
cwtl
add
push
ss
sub
es
sbb
leave
insl
cmp
sarb
sbb
mov
cwtl
lcall
dec
imul
dec
mov
je
mov
jae
mov
mov
pop
or
sahf
ds
cmp
or
cmpsl
adc
addb
lds
add
sbb
or
sbb
pop
dec
sti
xor
mov
jo
xor
je
enter
jb
fs
call
addl
and
jecxz
ret
aaa
jae
or
data16
adc
fstpt
xor
sub
adc
or
dec
loop
mov
push
mov
xchg
inc
leave
xchg
mov
xchg
ror
mov
sti
dec
test
pop
movsb
push
sti
add
cmp
mov
lds
xchg
cmc
mov
jns
adc
push
je
dec
sbb
adc
xor
andb
xor
lock
xor
vpunpcklwd
mov
or
sub
sbb
and
cmpsl
inc
in
out
loopne
push
pushf
push
pop
mov
out
push
xor
fcoms
movsl
ja
jp
mov
test
mov
push
dec
or
aas
ss
out
stos
mov
pop
test
push
xchg
jae
cmp
aad
fistl
mov
jnp
pop
or
test
pop
jle
jns
js
push
push
mov
vmaxps
inc
jns
testl
push
push
popf
mov
loope
pop
pushf
mov
push
scas
in
jg
jb
inc
adc
fstpt
repz
arpl
aad
mov
repnz
insl
cmp
cmp
and
cmpsl
pop
cmp
iret
je
icebp
mov
gs
test
aad
inc
sub
stc
loopne
rcll
mov
stos
xchg
divb
test
into
adc
bound
and
in
ja
dec
xor
cmp
dec
push
xor
leave
adc
popa
cwtl
outsb
jg
cmp
loop
cmp
mulb
lcall
sub
pushf
subl
xchg
gs
inc
test
pop
bndstx
xor
add
pop
sbb
int3
dec
cltd
pusha
push
outsl
push
and
popa
out
lods
out
addb
pop
add
or
sbb
mov
push
cmpsl
je
xchg
and
mov
mov
sti
dec
andl
mov
xor
roll
sub
ljmp
mov
adc
xor
stos
xchg
inc
add
or
push
sbb
enter
cmpsb
lcall
push
and
sub
leave
mov
jg
fwait
dec
adc
jmp
jno
xchg
jo
das
inc
outsl
movsl
cmp
pop
fsubs
lahf
push
cmp
add
sbb
mov
dec
adc
addr16
out
unpckhps
dec
mov
inc
inc
xchg
enter
in
scas
sub
mov
popa
and
ljmp
add
inc
cld
sub
cmpsl
and
or
clc
das
xor
cmpsl
jp
stos
xchg
and
xchg
jns
or
popa
addr16
fadd
divl
mov
movsl
lods
sbb
jno
dec
pop
xor
int
jecxz
mov
cmp
mov
sub
shl
jbe
mov
and
loop
shld
mov
rcl
fildl
mov
xor
into
in
fs
jmp
cmp
sub
ljmp
dec
mov
es
xchg
movsl
cwtl
jl
mov
popf
xor
stos
scas
mov
xchg
stos
aam
fwait
test
mov
add
ss
popf
xchg
adc
mov
dec
addl
inc
xor
ljmp
imul
xchg
and
xchg
xchg
aaa
es
test
pop
jge
rol
cld
shll
int3
mov
push
enter
add
out
sbb
sbb
inc
das
cltd
repz
mov
data16
rclb
test
xchg
dec
pop
imul
cmpsb
ret
scas
mov
in
cmp
xchg
mov
lea
xchg
mov
sub
scas
sub
call
cmpsb
mov
shll
jo
stos
push
addr16
jno
pop
pop
loope
mov
addr16
jae
repz
int3
inc
loope
popf
push
push
push
dec
mov
cli
and
xorb
pop
mov
mov
test
mov
mov
lods
lret
lds
loopne
push
push
ret
xor
inc
add
mov
xchg
iret
adc
ja
lock
les
outsb
sti
add
sbb
pop
pop
jns
or
push
push
cmp
ret
mov
in
pusha
shll
jo
sbb
sti
andl
lods
out
push
fcomip
lahf
aam
ja
dec
in
or
or
jnp
pop
add
clc
adc
jle
xor
mov
sub
mov
or
dec
in
cltd
mov
push
pop
adc
push
lock
inc
dec
stos
inc
cmp
or
mov
sbb
jle
xor
mov
data16
xchg
out
enter
mov
lock
mov
push
jno
dec
and
cmp
cli
jae
cmp
js
cmp
arpl
scas
push
dec
xchg
sub
xchg
paddb
xchg
add
push
sbb
xor
clc
push
mov
or
or
cmp
sub
sub
std
push
xlat
shlb
jle
jnp
push
cmp
stos
pop
mov
lods
int
mov
in
out
sbb
inc
cmpsl
mov
pop
add
std
aas
in
stos
push
enter
pop
dec
inc
enter
sahf
mov
ror
sub
pop
inc
leave
test
or
fs
out
mov
vpand
stos
sub
out
ja
sbb
and
out
mov
jge
adc
pop
test
test
mov
stos
aam
fs
push
cwtl
mov
sahf
loope
pop
mov
cwtl
dec
cmp
out
arpl
xchg
bound
repz
or
adc
xchg
test
dec
push
je
jecxz
mov
or
repz
insb
addl
pop
shrl
popf
mov
outsl
mulb
insl
aam
mov
pop
pop
test
cmp
xchg
adc
pop
dec
dec
or
leave
mov
sub
addr16
push
in
xchg
bound
rol
repz
mov
mov
mov
mov
cmp
cmp
sub
add
cmp
dec
fdivs
cltd
aas
rol
fxch
inc
xlat
sbb
aas
sub
lds
mov
and
jecxz
out
push
bound
rcrl
test
fmuls
outsb
mov
jnp
mov
adc
rclb
cmp
push
test
inc
movl
xchg
jnp
sbb
cmp
pop
movsl
jbe
pushf
popf
mov
xchg
int
gs
insb
inc
jae
imul
addr16
icebp
sarb
or
dec
push
mov
lahf
cwtl
lods
insb
cwtl
fsubrs
mov
pop
loopne,pt
push
xor
pop
aam
pop
or
jge
adc
or
xchg
xor
fidivrs
rorb
pusha
testb
cmp
pushl
xor
cs
movsb
mov
ljmp
xchg
sahf
jno
out
cmp
mov
lods
fadd
fcmovbe
shr
cwtl
imul
fsubl
lds
pusha
pop
loopne
movsb
stos
inc
dec
stos
stc
jb
out
xchg
and
sbb
mov
outsl
leave
xchg
xor
sub
int3
mov
mov
out
inc
lea
mov
cmp
mov
dec
jns
cmp
sahf
jnp
sbb
jmp
mov
xchg
and
cmp
cmc
or
enter
dec
mov
inc
test
ret
sahf
cld
jmp
testl
and
out
adc
and
pop
repnz
and
icebp
jge
jo
adc
bound
mov
int3
stos
pop
lcall
call
jo
clc
movsb
fldt
pushf
mov
mov
xlat
hlt
in
adc
aam
adc
shlb
and
adc
pushf
add
cmp
insb
out
mov
push
inc
or
xor
add
dec
bnd
test
lret
lods
aaa
xchg
jmp
adc
pop
ss
int
xchg
push
mov
ja
inc
jb,pn
filds
pop
mul
out
xorb
jne
mov
int3
or
mov
mov
in
in
test
xchg
test
xor
int3
inc
je
hlt
inc
bnd
cmp
mov
mov
aaa
shll
sbb
push
movsb
jecxz
scas
push
pop
cmp
xlat
insb
dec
sbb
stos
mov
fs
dec
adcb
push
cli
pop
cmpsb
sbb
add
xor
aas
fwait
dec
repz
dec
clc
or
ror
lret
mov
inc
test
xchg
mov
decl
push
sbb
mov
adc
orl
outsb
push
jno
loopne
ljmp
int3
int
cmc
sbb
xchg
loopne
aad
call
dec
inc
aad
jp
lahf
mov
lret
lods
shrl
aam
jp
insb
icebp
loopne
nop
int3
arpl
imul
jbe
adc
xor
sub
adcb
and
or
in
or
sub
mov
inc
movsl
test
pop
push
bound
adc
xchg
out
mov
arpl
in
cld
out
stos
fadd
jo
je
pop
pop
imul
js
aad
or
mov
movsb
push
jo
jle
jl
pop
dec
push
inc
lret
rcrb
lock
mov
or
jecxz
lods
unpckhps
repz
lea
mov
lcall
imul
push
cmp
inc
sub
cmp
icebp
mov
jo
call
movsl
push
pushf
out
sub
mov
xor
in
insl
adc
scas
pop
push
enter
push
bound
pop
pushf
cli
sbb
test
xlat
mov
je
scas
or
loope
push
stc
xchg
pop
dec
pop
lods
adcb
jecxz
pop
rcr
scas
stos
and
fadds
fidivl
sub
xor
test
xorb
dec
gs
lock
jl
inc
pop
xor
push
pusha
in
mov
jl
or
sbb
rcrl
jbe
sub
cmp
push
imul
jb
test
imul
mov
in
add
and
fwait
push
insl
fwait
ss
cmp
inc
test
loop
adc
lea
movsb
push
push
add
loopne
imul
adc
in
and
ds
andb
sbb
and
push
lret
xor
inc
jo
pop
movsb
movsb
cmp
or
mov
in
mov
out
pop
hlt
ss
or
jle
dec
data16
scas
rclb
vpminub
clc
cmpsb
call
lods
popf
ds
jns
scas
mov
push
dec
mov
movsb
movb
sbb
jmp
dec
aaa
pop
sbb
adc
inc
out
outsb
insb
in
aaa
mov
repnz
xchg
jmp
pop
loopne
out
clc
add
sbbl
jp
jne
inc
fucomip
dec
lea
fsubr
leave
mov
enter
xor
jne
aad
push
mov
addr16
loopne
loop
cmp
or
xor
push
cwtl
cmpsb
cltd
aad
xchg
or
stos
inc
xorb
fwait
jmp
aaa
insl
add
idivl
sbbb
dec
fstps
out
xor
insl
pop
mov
push
insl
cs
jg
xchg
sub
xor
adc
fstpt
add
scas
sub
pop
mov
dec
fcmovb
jno
inc
out
pop
and
xchg
jmp
adc
cmp
jle
add
add
test
enter
add
in
decb
scas
mul
cs
xchg
and
add
push
lods
fstpl
sub
xor
mov
pushl
mov
xchg
out
jno
push
push
cmpsl
xor
add
test
or
notl
inc
add
push
mov
or
hlt
dec
dec
push
push
cmp
xor
clc
xor
and
pop
stos
mov
ss
mulb
je
and
push
stos
mov
dec
loopne
mov
jb
addb
inc
and
mov
ret
pop
loopne
mov
push
push
xchg
xor
push
xor
gs
xchg
cmp
bound
cmc
dec
fisubrs
cmp
xchg
aaa
repz
movsl
aam
loopne
cltd
and
and
icebp
lret
sub
inc
cmp
insb
sbb
mov
push
movsb
sbb
mov
sarl
lcall
cmp
mov
push
call
push
sub
orb
sti
fidivl
mov
mov
cwtl
stos
mov
pop
movsl
push
fstpl
mov
or
lcall
jnp
sbb
shlb
jmp
sbb
scas
sub
rcll
xchg
mov
adc
pop
out
dec
pop
in
dec
jecxz
cmp
es
out
lods
xchg
xchg
lahf
dec
int3
mov
mov
rcrl
xchg
cmp
fldl
stos
cmc
push
lahf
movsl
pushf
nopl
out
xlat
pop
or
cltd
ss
and
and
sbb
sub
movsl
ficoms
ret
insb
xchg
push
lret
mov
insb
clc
popf
aaa
pushf
pushf
mov
sub
fmull
sahf
push
mov
cmp
dec
in
xor
pop
hlt
inc
lret
jo
jg
jns
or
es
aad
fnstcw
stos
cmc
xchg
fstpt
xchg
pop
sbbl
outsb
call
notb
push
pop
jecxz
scas
lea
int
or
pop
repz
mov
inc
push
jecxz
nop
xchg
test
and
int
xchg
dec
rcll
dec
push
sub
pushf
std
imul
loopne
pop
daa
stc
ret
dec
jp
add
imul
lcall
mov
les
xchg
jl
dec
in
sbb
push
hlt
fisubl
or
popf
jns
or
test
push
xchg
ffreep
outsl
lret
jns
mov
xor
lret
pushl
push
mov
test
xor
cmc
fsubl
mov
fmull
sub
hlt
jns
popa
inc
mov
fnstsw
sub
testl
mov
out
or
shl
aaa
cmp
mov
lcall
add
xchg
or
mov
adc
sbb
ljmp
shll
sti
push
mov
push
call
jno
inc
es
fildl
sub
push
je
sub
mov
nop
test
mov
jle
cmp
push
or
push
cmp
in
test
cmpsb
cli
shl
mov
xor
push
gs
or
and
xchg
cmp
sbb
inc
inc
scas
xchg
in
xchg
and
adc
adc
mov
mov
xor
inc
leave
cmp
int3
outsl
lds
fstpl
insl
mov
cmpsb
scas
sahf
call
je
pusha
aas
and
pop
imul
mov
mov
daa
in
pushf
shlb
negl
ret
js
aad
movsl
or
jmp
or
out
inc
xchg
jae
mov
int
pop
xlat
das
xchg
sbb
dec
stos
push
xor
pop
mov
arpl
cs
adc
lret
divb
push
or
mov
addb
dec
pop
movsl
cs
xchg
jae
push
dec
xchg
mov
or
pop
in
xor
inc
test
orb
adc
in
mov
adc
scas
popa
idivb
fs
xor
pop
push
sbb
sahf
xchg
iret
cmp
shlb
jle
xchg
sbb
jne
stos
mov
sub
jns
loope
mov
mov
jecxz
mov
pushl
push
jl
and
sub
adc
xchg
mov
ffreep
pop
movsl
cmpsl
inc
inc
xchg
or
sub
mov
lea
cli
add
jg
push
in
cmp
dec
pusha
outsl
mov
outsb
outsb
js
mov
mov
ds
das
ljmp
jmp
lods
les
out
dec
jo
and
pop
sbb
enter
enter
in
loope
test
rcr
dec
add
ds
xor
add
pusha
divl
pop
popa
and
repnz
or
push
and
pop
rep
cmp
call
and
inc
fiaddl
dec
sahf
jle
addr16
fcompl
scas
mov
inc
jnp
mov
ljmp
inc
pop
aas
sahf
jl
mov
add
jae
je
inc
sub
arpl
inc
aas
fcompl
lret
mov
dec
cmp
aas
lcall
aam
inc
dec
dec
mov
add
cmp
pop
ret
int3
push
pop
fdiv
jl
or
std
subb
mov
ret
push
and
jecxz
nop
ljmp
push
dec
int3
inc
xor
adc
pop
push
out
lret
jne
jecxz
pop
bnd
clc
inc
jl
rolb
cmp
test
add
add
sbb
enter
rol
mov
scas
pop
push
xchg
aam
mov
loope
in
std
jge
pop
call
or
push
fsubrs
rorb
sar
xor
mov
push
pop
rcr
lock
and
mov
or
fistpll
lock
mov
dec
into
jae
outsl
outsb
xor
test
movsb
and
mov
call
sub
pop
xchg
ljmp
mov
repnz
pop
scas
dec
call
or
cltd
pop
inc
mov
das
repnz
and
xchg
iret
mov
enter
push
xchg
cmp
inc
cmpsl
adc
xchg
mov
adc
mov
lds
inc
sub
mov
movsl
cmp
iret
lock
pop
mov
rclb
imul
cltd
test
test
nop
jno
dec
mov
nop
lods
fdivrs
ja
xchg
shlb
pop
sbbb
lahf
test
aaa
ror
js
fstpt
sbb
pop
push
out
lret
aaa
or
test
insl
lods
push
sub
push
jo
prefetch
jge
push
cld
rcrl
lea
iret
test
ja
sub
scas
adc
pop
std
inc
mov
loop
xchg
out
adc
repz
pop
clc
push
daa
sub
mov
push
mov
or
cmp
nop
out
sbb
sub
mov
pop
push
sbb
adc
mov
mov
and
pop
pop
pop
ds
les
mov
jle
popf
mov
jmp
in
adc
mov
add
jns
jae
push
loop
mov
sub
test
xor
stos
mov
js
pop
dec
xchg
daa
and
lock
or
push
in
xchg
ljmp
ljmp
push
sbb
popf
jbe
icebp
inc
imul
addr16
jbe
ret
inc
adc
push
jbe
stos
cmp
outsb
jmp
xlat
rcrl
jnp
ja
xchg
or
inc
xchg
jmp
mov
inc
enter
sbb
fistl
lret
rorl
movsl
test
adc
mov
xorl
decl
inc
cmpsb
cmpsl
sahf
push
push
das
inc
pop
add
pop
bound
aaa
into
std
test
xor
scas
daa
fidivrl
les
out
push
cltd
adc
xchg
mov
jae
jge
lods
push
or
addb
fwait
sbb
pop
mov
insb
mov
out
out
loope
or
lcall
mov
in
rclb
lret
arpl
add
inc
test
std
and
ja
add
out
bound
fidivl
out
mov
jg
pusha
xor
out
xor
fld
mov
mov
push
les
and
dec
jbe
stos
push
xor
adc
iret
or
dec
cmp
pop
arpl
push
xchg
jl
out
icebp
movsl
std
int
cmp
loopne
xchg
or
push
add
xchg
jnp
add
call
mov
inc
sub
mov
stos
pop
ret
orb
out
mov
jno
scas
repnz
xor
icebp
subl
fcoml
fnstenv
pop
loope
adcb
iret
cmp
popa
inc
push
pop
xchg
jecxz
pop
and
loop
push
pop
or
sub
xor
mov
pusha
into
popa
xor
and
xchg
or
fdivl
mov
imul
sbb
movsl
xchg
sbb
rcl
and
push
adc
and
negl
addr16
imull
int3
aam
mov
mov
lock
pop
and
notrack
dec
push
das
insl
jmp
and
les
int3
add
imul
repz
mov
ljmp
cld
dec
add
jl
cmpb
push
idivb
dec
push
sbb
je
mov
push
sahf
push
push
mov
cs
pop
add
scas
mov
bound
popa
sbb
imul
leave
scas
js
ja
enter
adc
add
cmp
fstp
cmp
xor
stos
ljmp
xchg
test
lret
lods
jno
ret
and
call
mov
adc
sbb
loope
hlt
in
mov
sbb
add
subl
movsl
call
cvtpi2ps
sub
sbb
fldenv
shlb
xchg
xchg
pop
mov
fdivl
sub
sbb
fiadds
cmp
fnstenv
mov
pop
scas
in
pop
ret
test
adc
xchg
outsl
sub
or
divl
inc
pop
loop
sbb
dec
lahf
or
mov
cwtl
and
out
mov
xor
test
dec
pop
mov
mov
xor
dec
repz
scas
inc
shl
int3
adcl
mov
lea
fnsave
push
sbb
inc
scas
push
jnp
and
lods
mov
clc
or
std
jns
jae
or
xchg
mov
xor
xor
mov
mov
and
mov
cmc
sub
scas
or
lret
stc
xchg
daa
push
in
insb
pop
jo
shl
sbb
rcrb
lds
pop
mov
mov
cmp
mov
push
and
xchg
mov
or
rcrl
mov
sub
inc
add
ljmp
mov
mov
inc
scas
pop
adc
dec
lods
mov
sahf
xchg
sbbl
xchg
or
push
or
ljmp
mov
mov
andl
push
fmul
rcll
xlat
mov
inc
push
xchg
cmp
jp
fstps
clc
push
stos
mov
lds
add
dec
mov
ja
xor
les
in
add
test
mov
inc
push
test
xchg
push
jnp
stos
lods
nop
mov
xchg
xchg
or
lahf
popa
aaa
orb
fsubr
sub
aaa
mov
in
xor
shl
ja
add
push
mov
pushf
pushf
int
adc
jbe
pop
mov
pop
lahf
pop
jns
xchg
mov
push
lds
cmpsl
and
imul
rcr
outsl
popf
dec
and
and
and
adc
cmp
repz
xor
push
fsts
add
push
sarb
mov
movsl
cwtl
cmp
jo
shlb
xor
mov
ror
jbe
test
jecxz
mov
adcl
pusha
ds
mov
daa
movl
pop
mov
adc
adc
mov
scas
add
or
outsl
sbb
imul
xchg
mov
aad
xchg
and
push
dec
arpl
stc
mov
cmp
cmp
mov
sub
outsl
int
fimuls
adc
inc
outsl
into
das
xchg
mov
ret
jge
inc
ja
and
xor
sbb
mov
std
push
add
pop
mov
and
loop
lret
in
pushl
shrl
or
pusha
lea
cmp
rep
stos
bound
subb
lcall
mov
cmp
push
out
cmpsl
jmp
das
outsb
push
jle
inc
mull
mov
dec
dec
into
sti
mov
dec
lock
mov
lods
ret
fstl
xor
adc
rcrb
jne
testl
and
mov
jb
negl
mov
ficoml
adc
mov
cs
inc
and
addl
lret
stos
shrb
in
ds
xchg
sbb
adc
clc
sbb
pusha
xchg
addb
push
int3
sub
fists
dec
xor
test
cli
test
adc
aas
clc
jp
mov
lock
xchg
jle
push
xchg
jp
sbb
and
daa
dec
ss
loope
fisubl
test
pop
fimull
sub
mov
fdivrs
sbbb
mov
inc
shll
pop
or
out
iret
or
xchg
std
push
pop
outsb
je
aam
sbb
push
xchg
jp
or
adc
add
xor
ljmp
ja
insl
push
imul
mov
sub
add
mov
lahf
insb
adcl
adc
lods
repnz
inc
and
inc
std
xchg
jecxz
xchg
jmp
inc
rorl
ljmp
or
dec
clc
test
xchg
xorl
arpl
int3
push
cmpsb
stc
scas
xlat
and
cmp
mov
mov
stos
xchg
cmp
fnsave
lods
mov
xchg
cli
fsubrs
call
xor
scas
ret
imul
je
test
jne
sti
mov
in
push
xor
push
xor
push
sub
fcomps
sahf
out
repnz
inc
pop
xchg
imull
sbb
outsb
mov
call
sub
cld
outsl
pushf
ret
lret
sub
js
push
roll
ja
sbb
pop
cmp
insb
data16
ror
pop
cmp
cmpsb
inc
jecxz
mov
sbb
fsubrl
insb
je
fldcw
lods
cltd
popf
loope
mov
mov
xacquire
sub
ja
outsb
xchg
sbb
ja
sbb
pusha
cmp
or
out
cmpl
divb
dec
mov
adc
jnp
popf
push
sarb
sbb
cmpsb
xchg
in
push
mov
push
fisubrl
dec
ret
sti
lea
jl
mov
lods
mov
dec
jo
shlb
push
repnz
mov
jns
sarl
mov
xchg
out
sub
dec
mov
pop
mov
int3
loope
xor
lret
or
push
or
and
dec
imul
adc
rcl
dec
xchg
sbb
aas
mov
ficompl
pushf
mov
mov
lahf
jecxz
pusha
adc
pushf
inc
inc
ds
leave
mov
xchg
push
xor
lock
cmp
daa
mov
mov
pushf
sbb
clc
mov
lcall
mov
jge
stc
mov
fistps
dec
and
out
sbb
addb
mov
adc
loope
sbb
mov
push
mov
pop
mov
and
lcall
cmpsl
movsb
ljmp
ljmp
test
arpl
add
sahf
mov
mov
cmp
mov
push
push
xor
sbb
mov
pop
movsb
sbb
xchg
sub
adc
pop
scas
xchg
lds
jno
sahf
or
cmp
nop
xor
sub
lock
cmp
or
adc
push
mov
pop
mov
inc
push
or
inc
das
xchg
andl
hlt
scas
outsl
int
rcll
or
mov
add
jae
xchg
adc
mov
mov
pop
sbb
jo
pop
cmp
lret
xchg
push
pushf
std
andb
in
shlb
in
insl
mov
repnz
cmpl
fnstcw
pop
out
dec
or
pop
jo
fcoms
es
stc
sub
cmp
fs
xlat
sub
sub
sarl
shll
jmp
andl
sub
xchg
fisubrl
out
sbb
insb
movsb
xor
ss
lea
sub
sbb
jp
push
jno
into
daa
dec
push
xor
or
gs
in
mov
add
js
lea
lea
cmp
addl
testl
dec
loopne
loope
add
jmp
mov
or
mov
pop
pop
add
out
js
push
or
xor
push
aas
lock
in
pop
xchg
nop
push
cmc
shrl
out
stos
out
in
adc
fcmovbe
inc
lret
push
inc
mov
cmp
adc
jbe
dec
sahf
inc
out
filds
and
lcall
mov
cmpsl
pop
adc
test
jg
mov
mov
insb
lea
dec
jbe
out
cmp
mov
mov
outsl
or
jg
push
jp
mov
divl
pop
jl
lods
xor
jmp
inc
mov
and
xor
sbb
sub
mov
jae
ss
push
sub
jg
add
jne
pop
dec
test
push
stos
nop
cwtl
sbb
test
xchg
or
mov
xchg
push
call
int
scas
xchg
mov
mov
fnstsw
mov
aam
stos
jle
xchg
mov
inc
hlt
mov
adc
jns
mov
cmp
fnsave
or
cmp
xchg
aaa
outsb
aad
loop
enter
insb
fcmovnb
xor
je
loopw
clc
sub
pop
lcall
aad
stc
sub
mov
inc
inc
pop
out
or
add
mov
dec
add
cmc
movsb
inc
aam
sbb
adc
adc
mov
cmp
rcll
xor
mov
and
cmp
incb
sti
push
adc
or
fisttps
sub
arpl
jb
mov
out
push
repz
mov
or
jecxz
or
adc
jmp
pop
mov
push
jo
xchg
andb
repnz
fisttpl
jmp
xchg
fdivrs
bound
pop
xchg
sahf
jmp
pop
int
adc
scas
call
or
daa
test
cli
pop
add
loop
aam
mov
sbb
jle
call
lret
pop
fidivrl
push
fisubrs
cmpl
and
dec
dec
xor
loope
scas
mov
pop
arpl
das
push
cmp
hlt
xchg
ds
sbb
std
adc
xchg
adc
pop
test
sbb
iret
das
aas
pop
cmp
push
out
fadds
pushf
cltd
shrl
adc
and
clc
orb
test
mov
adc
sbb
or
orb
pop
dec
mov
pop
loopne
ljmp
push
rcll
or
or
mov
sbb
pop
fcomps
addb
and
xchg
lods
mov
pop
and
jns
add
or
jbe
in
outsl
in
mov
push
cmc
adc
ret
lahf
mov
jae
jl
dec
sub
mov
lock
dec
xchg
sub
sbb
pop
pop
out
mov
mov
lods
mov
dec
xchg
xchg
add
stos
aas
push
call
movsb
sbb
lods
jg
pop
and
add
and
iret
das
hlt
insl
mov
pop
shl
testb
mov
cmp
aas
push
out
addr16
out
xor
push
call
sub
fisttps
pop
dec
sbb
sbb
mov
adc
and
xor
cwtl
fdivrl
mov
aad
mov
pop
adc
test
scas
fimuls
sub
negb
mov
mov
push
pushf
inc
cltd
push
into
mov
adc
xchg
jp
lret
cmp
lret
inc
mov
add
xlat
cmc
or
or
pop
fs
pop
test
rorb
mov
rcrb
mov
ret
fs
fsts
push
je
pop
fsts
mov
push
ljmp
push
pusha
lret
push
int3
adc
mov
or
inc
rcl
arpl
lods
cs
and
fstps
into
loopne
out
imul
cltd
aam
xorl
pop
pop
cmp
icebp
inc
scas
sbb
orb
data16
push
icebp
sub
add
ret
insl
xchg
push
out
pop
cwtd
mov
push
daa
cmpsb
push
xor
xor
aaa
seto
mov
les
pop
fadds
pop
mov
addb
lods
add
add
test
jb
lds
jno
stc
sbb
pop
dec
scas
jnp
arpl
aas
mov
cmp
dec
lret
out
outsb
popl
push
rcrl
cmpb
aam
repnz
lret
sub
insl
lret
ret
scas
sub
in
dec
pop
mov
jne
stos
mov
inc
or
push
test
mov
or
or
push
add
mov
jge
lcall
xorb
xchg
push
or
mov
dec
inc
iret
rcl
sub
xchg
xor
into
mov
mov
stos
xor
mov
mov
xlat
jbe
fdivrl
ljmp
or
int
dec
dec
jo
jp
fsubl
pop
sub
test
cmpsb
mov
mov
loope
push
repz
jo
mov
mov
shlb
mov
pop
mov
outsl
dec
mov
mov
test
in
xor
stos
pop
push
pop
push
and
scas
push
gs
mov
ret
jg
inc
out
pop
xor
es
adc
out
xchg
fs
adc
es
test
sbb
insl
out
jge
adc
or
lods
mov
push
sar
add
nop
dec
mov
xchg
mov
iret
cmc
pop
mov
fistpl
adc
cmc
mov
mov
out
xor
sbb
add
mov
jp
cmp
stc
out
mov
lahf
sub
call
add
push
mov
js
sub
jno
sbb
in
lahf
notb
jnp
mov
jae
aas
aad
fsts
test
jno
stos
xchg
or
mov
adc
lds
jp
data16
adc
xchg
pop
outsl
mov
adc
jp
jge
in
int3
lods
or
or
jb
stos
and
inc
sbb
lret
push
ret
addl
inc
xchg
sub
jmp
into
dec
mov
daa
mov
push
mov
shll
jo
test
int
push
mov
jb
gs
cmp
push
push
cltd
sahf
adc
pop
pop
xchg
push
pop
aaa
jne
lods
pop
dec
jne
mov
mov
jno
add
pop
add
inc
push
mov
mov
imul
sar
and
hlt
pop
mov
cmp
je
xor
loopne
mov
scas
adcb
lods
out
cmp
add
adc
mov
lret
mov
shll
add
push
aaa
mov
or
aam
mov
fcmove
xor
pop
xchg
xchg
clc
push
sub
out
mov
idivl
mov
popf
mov
jbe
ljmp
mov
and
mov
push
mov
cmp
std
push
push
std
xchg
in
push
or
add
mov
mov
or
addr16
xchg
pop
cmp
popa
and
ror
popa
add
jne
ljmp
imul
ss
insl
ja
jge
subl
sub
xor
sbb
cltd
in
fldl2e
push
adc
mov
mov
call
jb
jecxz
lods
push
in
mov
lret
sub
stos
push
or
cmp
jns
pop
inc
and
ret
push
jmp
jecxz
mov
lock
cmpsb
lret
mov
lea
testl
inc
testl
push
aaa
gs
inc
sahf
pop
repz
rcrb
sub
mov
std
jecxz
clc
stc
lret
and
mov
push
lock
int3
icebp
aad
dec
jl
insl
mov
or
ret
cmpsb
addr16
in
leave
mov
mov
inc
cmc
xchg
leave
push
stc
sti
roll
cmp
pop
stos
dec
addr16
pusha
mov
or
sbb
repz
cmp
int3
jp
xor
dec
aad
and
mov
jno
or
or
jle
xchg
int3
push
sub
and
inc
pushf
rcr
jno
sbb
mov
mov
les
js
das
in
xchg
pop
out
insb
popf
pop
mov
push
and
pop
push
mov
fwait
or
sub
xchg
loope
mov
or
mov
mov
push
mov
jp
xchg
jle
orl
aad
icebp
repz
loopne
cmpsb
pop
imul
lahf
ret
enter
dec
and
out
lcall
std
out
lahf
test
in
jns
jmp
push
ja
mov
rol
mov
repnz
jg
pop
mov
ficoms
xor
add
incb
pop
fdivr
pop
pop
dec
js
in
rcrb
test
jne
pop
fwait
cltd
out
cmp
cmp
cmc
out
rcrb
icebp
loopne
hlt
aas
cmpsl
pop
mov
lods
pop
fisubl
cmp
jbe
in
xor
mov
lods
scas
or
ljmp
mov
jmp
insl
loopne
push
add
mov
lea
divb
pusha
bound
stos
mov
out
into
add
mov
and
lahf
jnp,pt
cmpsb
jl
add
movb
pop
jnp
cmpsl
jb
adc
dec
pop
dec
pop
stc
nop
cmp
xor
js
in
or
jg
xlat
cmp
inc
mov
fdivrs
and
jo
inc
jb
lock
sbb
sbb
in
push
mov
andb
mov
adc
clc
addb
or
pop
cwtl
add
dec
sbb
jecxz
repnz
mov
test
push
imul
cmpsl
push
or
test
lcall
cmp
sbb
cli
mov
mov
jl
in
add
out
aaa
jl
pop
push
cmpsb
xor
imul
mov
into
xor
pusha
mov
xchg
mov
adc
mov
push
xchg
xchg
in
movsl
or
sub
out
inc
aas
in
pop
popa
mov
add
mov
xor
jp
dec
sbb
push
ljmp
mov
dec
jg
fsts
outsb
scas
sbb
add
xchg
jge
dec
xor
fldenv
xor
fs
sbb
inc
xor
cld
ja
es
jg
popa
pop
push
nop
inc
jo
mov
fdivrp
sub
outsl
rorl
fmul
mov
xor
jno
bound
cltd
imul
mov
xchg
pop
jno
test
mov
pop
lods
inc
xchg
in
sar
pop
xor
arpl
iret
jne
dec
cmpsl
pusha
repz
not
lea
dec
jg
sti
fisttps
jns
cmp
cmp
js
outsl
inc
cwtl
lcall
pop
and
mov
mov
sahf
test
mov
add
jecxz
mov
inc
jmp
push
add
mov
test
insl
mov
enter
sub
stos
cmp
jle
mov
ret
and
adc
aaa
or
cwtl
call
shll
icebp
in
enter
daa
xor
aas
fwait
insl
push
and
adc
les
lock
adc
xlat
and
test
mov
inc
dec
push
xchg
push
push
fcoms
xchg
jae
push
jl
cltd
jnp
ds
add
xor
in
jle
in
inc
in
shl
xorb
or
dec
xchg
test
rcrb
xor
mov
gs
roll
mov
xchg
jb
xchg
dec
dec
repnz
pop
xlat
mov
popa
cmp
scas
xchg
mov
je
sahf
mov
pop
or
push
mov
lds
in
out
cmp
stos
and
cmp
pop
clc
into
xor
mov
dec
outsb
sub
daa
mov
jmp
adc
jne
or
fisubrs
rol
stos
add
rcl
or
psrad
xchg
cld
mov
and
xchg
pushl
adc
sub
inc
popf
sbb
aaa
pop
push
std
arpl
or
orb
push
shll
andl
push
xchg
fsts
jg
in
push
js
mov
out
fucom
jmp
arpl
cmp
dec
inc
mov
test
add
mov
js
das
add
ret
adc
fstpl
mov
rorl
sub
js
mov
mov
push
fisttpl
mov
bound
call
jecxz
jbe
imul
aas
jb
jp
push
inc
int3
sarl
inc
or
push
in
cmpb
mov
dec
adc
jo
cli
es
xchg
dec
jo
add
sub
mov
test
sarl
nop
shll
dec
inc
ljmp
test
in
das
xor
jb
sti
inc
arpl
adc
shrl
movsl
stos
nopl
daa
aas
pop
nop
jno
fisubrl
inc
jp
and
and
jge
or
pop
fistps
mov
xor
test
mov
movsl
outsl
imul
scas
inc
das
sbb
daa
jecxz
mov
popa
jp
int3
cmc
rol
mov
pop
orb
and
in
dec
pusha
shlb
add
xchg
and
ret
xor
int
xchg
rclb
jecxz
mulb
aaa
test
cmp
adc
ss
mov
dec
inc
cmpsb
insl
mov
cmp
or
aad
or
mov
cltd
inc
lods
ds
xor
push
rcl
mov
and
jbe
std
and
xchg
cmp
mov
repz
mov
loope
rep
rcrb
sti
stos
push
hlt
dec
cmpl
nop
popf
rolb
dec
icebp
dec
mov
push
das
in
push
mov
jb
xchg
jg
jnp
mov
cmpl
mov
les
es
popf
cmp
xchg
push
cmpsb
inc
xchg
adc
jp
das
pop
pusha
sub
xor
repnz
cmp
jl
adc
loopne
inc
fwait
add
xchg
loope
mov
and
sub
xor
cmc
mov
out
out
pop
adc
outsb
ss
insl
aas
repnz
mov
xlat
add
int3
push
sti
push
inc
insl
pop
add
pop
mov
xchg
lcall
aaa
mov
pop
push
outsl
dec
pop
cltd
jecxz
sbb
out
sbb
sbb
inc
xor
and
dec
jmp
push
ja
sub
xor
sub
cld
loope
out
dec
rcrb
mov
sbb
cmp
cld
push
in
jae
and
aad
arpl
mov
or
adc
mov
sbb
out
stos
mov
ja
jge
jmp
daa
movsl
repnz
and
sbb
inc
negl
call
imul
mov
out
sub
frstor
dec
push
stos
div
fwait
scas
push
cmp
xlat
ret
iret
mov
xor
lds
jo
call
cmp
cli
inc
test
mov
aaa
adc
nop
out
sbb
pushf
mov
cmp
mov
or
push
pop
leave
pusha
adc
in
es
ret
sbbb
in
pusha
lock
dec
mov
shlb
pushf
das
jecxz
pop
jb
mov
or
xor
push
jmp
jnp
cld
mov
sbbl
lret
in
out
mov
or
mov
test
aam
lea
mov
lret
fbstp
push
inc
inc
mov
into
sub
das
or
xchg
inc
addl
fs
mov
and
cmp
mov
movsb
aam
sub
data16
dec
addr16
fbstp
and
iret
in
cmp
pop
pop
jmp
pop
fdivs
xchg
mov
add
loope
adc
es
or
insb
xor
sub
sub
lcall
xor
fidivrs
sub
mov
sub
repnz
pop
push
into
iret
mov
aaa
test
mov
stc
mov
sbb
ja
sbb
push
push
fs
mov
mov
pop
dec
inc
cmpb
pop
not
jecxz
out
cmp
push
push
push
cmp
popa
les
adc
cmp
les
inc
rol
or
loop
filds
add
cltd
add
cmpsb
daa
loopne
dec
ds
jnp
inc
mov
fadd
rcrl
imul
jb
pop
les
cmp
and
inc
mov
test
dec
pop
push
mov
idivl
ja
arpl
xchg
loopne
jmp
add
sar
xchg
test
adc
push
rolb
xchg
xor
push
lret
push
in
xor
shll
cld
andb
icebp
in
mov
push
jnp
inc
call
add
mov
cmpsl
leave
xchg
sti
jg
cmp
fnstenv
push
cli
mov
and
pushf
add
dec
loopne
pop
dec
jns
jnp
sti
mov
outsl
jg
xor
sub
ret
out
push
shll
inc
dec
out
out
in
mov
sbb
mul
and
outsb
lods
push
adc
loope
idiv
jo
and
push
xchg
pop
inc
loopne
add
scas
dec
in
mov
imul
sbb
iret
inc
outsb
mov
in
pop
push
push
gs
lret
pop
xchg
dec
and
pop
in
jnp
dec
xor
daa
xchg
mov
repz
push
push
mov
jno
or
mov
adc
mov
mov
mov
pop
lods
out
adc
fldl
sub
xchg
pop
jle
add
aaa
aas
out
sbb
cmp
int
out
cmp
and
sub
cmp
imul
mov
and
mov
add
nop
ja
xor
dec
cmp
and
sub
dec
mov
iret
mov
loope
xchg
roll
outsl
fsubs
push
ja
jae
add
insl
les
popf
sbb
fsubrs
call
mov
ja
enter
mov
adc
adc
sub
inc
ret
lret
inc
jp
sbb
out
ss
adc
out
mov
jae
sub
loope
pop
inc
mov
dec
daa
lods
and
lds
ret
sarb
aaa
pop
mov
out
dec
call
fdivs
and
addr16
adc
add
jae
push
dec
hlt
int3
lods
jb
in
cmpsb
xchg
xchg
mul
test
insb
fwait
cs
daa
mov
data16
sbb
pop
or
sahf
xor
shl
mov
push
cmpsl
push
xor
out
daa
jnp
dec
mov
popa
fistpl
cmp
add
pushf
inc
fstpt
popa
movsl
fwait
xor
or
lahf
pop
xchg
movsb
jg
push
hlt
ljmp
imul
sarl
lcall
lahf
cmp
add
mov
push
inc
mov
pop
addr16
lret
es
loope
pushl
dec
in
xchg
xor
add
dec
and
outsb
test
and
pop
mov
xchg
loopne
jno
dec
sbb
pop
cli
xchg
dec
pushf
adc
lock
sahf
jecxz
lods
clc
dec
mov
pop
add
shll
cmp
negb
push
pop
shl
call
ret
sbbb
push
jmp
vmwrite
add
inc
sub
inc
lods
jmp
inc
hlt
cmp
sbbl
push
fistpll
cmp
xor
add
and
repz
rorl
add
jecxz
cmc
pushf
xchg
sbbb
out
fs
sahf
lea
iret
xchg
sbb
mov
push
add
pusha
sbb
adc
jp
ds
popa
cwtl
sbb
rcll
mov
cs
sbb
push
hlt
cmp
jecxz
jle
jo
int3
push
testb
inc
pop
in
cs
fdivr
mov
sub
ss
or
mov
pop
pop
enter
cs
in
xor
imul
mov
jnp
out
sub
jae
lock
mov
lcall
inc
ss
xor
sub
imul
pop
jg
pop
mov
imul
jmp
dec
mov
nop
push
mov
xor
inc
mov
insb
inc
cltd
aam
mov
movups
out
sbb
int3
and
jge
sbb
push
mov
loopne
add
dec
cmpsb
jnp
cmpsb
addr16
cmp
sub
ljmp
mov
xchg
out
mov
imul
dec
aad
jnp
lods
push
add
pop
movsl
lods
mov
lock
rcr
adc
mov
xor
mov
cmp
pop
movsb
pusha
pop
ljmp
repnz
test
movsl
or
fadds
je
dec
mov
dec
push
mov
and
mov
pop
in
out
test
pop
repnz
pop
push
scas
pop
dec
ljmp
call
andl
ficoms
int
add
xor
dec
inc
push
shl
stos
jns
cld
iret
adc
ret
push
lahf
ret
pop
shrb
es
sub
mov
xlat
sbb
push
inc
lahf
loop
adc
lds
je
inc
pop
mov
push
mov
fdivs
push
sbb
lea
fiadds
mov
repnz
daa
je
aad
add
insl
std
aad
adc
pop
jge
insb
sete
and
sarl
repnz
sub
jne
adc
mov
adc
aas
sbb
jb
xlat
inc
xor
jb
in
loop
into
push
mov
insb
mov
or
stos
pusha
jmp
sti
sbb
cli
icebp
cvtdq2ps
mov
daa
arpl
xchg
dec
fdivs
push
add
idiv
jns
push
andb
jb
pusha
mov
push
data16
sub
xor
negl
popa
cmp
fs
outsl
pop
mov
xchg
dec
xor
add
adc
lcall
aad
fstps
mov
outsb
daa
cmc
sub
cli
xchg
sub
mov
or
xor
mov
cli
xor
hlt
lods
add
jo
cmp
pop
out
or
movsl
fldcw
iret
pop
outsl
ret
mov
out
ret
cmp
mov
arpl
pop
push
jmp
das
ja
bound
mov
dec
mov
mov
jo
mov
cmc
fldenv
push
mov
and
push
jbe
rcll
add
inc
mov
xor
in
adc
bound
add
push
xchg
fisttpl
lods
int3
std
sub
jnp
inc
stos
out
adc
ljmp
mov
and
aad
pop
mull
pop
or
sub
inc
ljmp
mov
nop
sbb
jnp
sub
out
push
cmp
pop
adc
nop
xor
addr16
cli
frstor
in
push
add
add
adc
push
pop
add
jnp
push
pop
test
sub
adc
xchg
cmpsb
mov
sub
pop
movl
mov
lock
insb
inc
jns
sahf
cld
and
cltd
xchg
out
or
push
fwait
subl
xor
cli
out
jne
and
insb
mov
jne
sar
leave
add
push
xchg
sbb
mov
inc
pop
pop
push
sub
add
mov
icebp
out
jb
arpl
scas
in
orb
sbbl
mov
mov
xchg
mov
fsubp
adc
aad
loop
jle
ss
sahf
push
jno
push
xchg
xchg
lods
addr16
loop
aam
dec
and
xchg
dec
sbb
sbb
ss
clc
ror
cmpsl
int
test
push
fldt
out
cmpb
in
out
insl
xor
push
cmc
cmp
sti
mov
ret
sub
push
and
jae
loopne
mov
mov
pop
aaa
leave
add
push
inc
scas
insb
imul
dec
pop
jmp
sar
jg
push
loop
aad
ret
sbb
push
sbb
ret
insb
xchg
xor
pop
xchg
leave
test
stos
or
fldl
ss
push
fildl
lret
loopne
mov
cmp
and
minps
test
jne
stos
cmp
mov
nop
push
mov
sub
ret
adc
pop
mov
dec
shll
add
add
or
ret
push
lcall
mulps
ficomps
in
ljmp
into
or
push
mov
sub
cmp
ss
xor
int3
int3
pushf
cltd
rorb
sub
sub
fisttpll
insl
jne
sbb
fcoml
adc
fbld
popa
sub
sti
jmp
test
dec
push
test
inc
sbb
xor
stc
sub
cmp
push
mov
movsl
mov
adc
cmpl
or
mov
test
jmp
fnstenv
mov
push
ja
and
ret
xor
mov
and
add
sbb
popa
mov
fstpl
jnp
mov
sbbl
rcrl
lods
push
mov
mov
test
push
sub
inc
and
stos
fs
addr16
sbb
popf
sti
xlat
fnstcw
iret
sbb
mov
rcrb
xchg
add
mov
sub
test
sub
call
inc
cmp
mov
cmp
inc
stos
mov
pop
sub
addb
dec
aad
push
pop
sub
jg
cld
imul
xor
daa
sbb
push
jl
ljmp
ss
dec
mov
cmc
insl
in
jge
into
aas
or
mov
lcall
cmpsb
lods
jmp
jno
sub
mov
in
or
sub
sub
xchg
test
pop
push
pop
cmp
push
cmpl
scas
aam
jl
mov
mov
pop
xchg
test
or
or
jle
add
pop
stos
cmp
pop
negb
cs
fistpl
pop
daa
push
mov
push
sub
xor
mov
cmp
out
imul
mov
repnz
mov
insb
icebp
cmpsb
jmp
jl
cs
outsb
sub
xor
jl
push
push
xlat
lods
rcrl
stos
loope
insb
push
mov
pop
dec
lods
enter
jae
mov
mov
add
xor
cltd
mov
aas
mov
push
je
jmp
cmp
dec
and
ret
sub
add
or
shrb
push
and
shll
dec
push
lods
mov
dec
lock
cmpsl
fdivrs
cwtl
push
push
orl
cmp
stos
push
and
cmp
loope
cltd
outsb
loopne
jg
xlat
roll
arpl
cmp
in
aad
fsubl
jbe
cld
inc
mov
scas
add
mov
pop
orl
aas
sub
ss
imul
popa
dec
popf
ljmp
pusha
pop
bound
xchg
fs
stos
xor
sub
cmp
into
mov
sbb
cmc
rol
pop
pusha
inc
jo
or
stos
mov
mov
push
popa
movsb
mov
out
aad
xchg
push
mov
cltd
jge
test
add
xchg
movsb
and
leave
push
xchg
fs
aam
cmp
jae
imul
movsl
cmp
mov
or
pop
sbb
push
lea
mov
jl
les
jns
jmp
imul
xchg
bound
cwtl
adc
push
cmc
iret
loopne
test
divl
mov
add
ss
mov
or
mov
mov
sub
mov
into
mov
mov
add
xor
or
test
out
push
mov
xchg
sbb
dec
xchg
adc
into
xchg
pop
push
fsubrl
inc
mov
cmc
jo
push
push
and
lret
mov
push
lret
mov
mov
cmp
sub
adc
neg
pop
pop
lahf
jne
fldcw
jbe
lret
push
rep
js
pop
add
stos
fmul
jns
sbb
add
repz
stc
xchg
jae
mov
cmpsb
repnz
xchg
pop
xchg
mov
and
or
movsb
pop
negl
nop
dec
or
lret
clc
imul
sub
sub
inc
mov
in
aam
inc
scas
sbb
repz
mov
cmp
mov
cs
iret
sahf
xor
cmp
push
loope
dec
outsl
push
push
adc
pop
push
jmp
sbb
ffree
iret
add
pushf
xchg
enter
add
mov
jg
xlat
stc
push
mov
or
scas
jnp
or
jg
xchg
out
imul
sbb
pop
ret
aam
sbb
out
cld
sub
mov
inc
sbb
jb
shlb
movsb
jmp
mov
cld
push
pop
mov
and
sbb
mov
mov
mov
mov
frstor
icebp
popf
and
aam
nop
adc
cwtl
aas
jmp
cmp
arpl
push
sarb
mov
sahf
mov
cmp
inc
int
aam
pusha
mov
cmp
xchg
cmp
cltd
fs
mov
pop
xor
xchg
inc
addl
or
lea
inc
mov
jb
mov
call
clc
add
dec
movsl
out
cmp
mov
jnp
mov
pusha
clc
lcallw
push
lods
add
sbb
cld
cmp
ret
popa
aam
hlt
icebp
stc
lcall
push
movsl
inc
mov
cmp
idiv
stos
pop
xchg
test
in
fisttpll
out
jl
xor
sub
ljmp
aam
mov
sbb
rorb
xor
jnp
and
nop
repnz
fisubl
aas
js
add
jecxz
ljmp
insl
or
mov
aas
sbb
xchg
dec
das
imul
sub
stc
cmc
or
aas
mov
or
sbb
imul
ja
fcomps
mov
popl
pop
jge
xor
shll
pop
add
into
adc
jbe
mov
dec
mov
inc
inc
jmp
popf
dec
sti
icebp
pop
cmp
loope
andl
cmpb
stc
xor
movsl
lahf
push
rcl
pcmpeqw
ret
dec
pop
and
push
movsb
fwait
push
shrb
or
jp
faddl
test
or
divl
jp
lcall
xor
mov
cmp
test
mov
scas
mov
int3
push
icebp
push
sub
jle
xchg
mov
xchg
popl
adc
je
dec
add
aam
mov
out
cmp
add
lcall
fsubr
adc
addb
sbbl
or
ja
lds
shl
pop
in
into
repnz
pop
mov
push
pusha
aam
mov
test
sub
into
pop
loop
adcl
out
lea
aam
jnp
mov
push
or
push
js
mov
or
cmpsl
pop
scas
fisubrs
shll
adc
stos
sub
imul
sar
mov
stc
jbe
addr16
jg
mov
xchg
fsts
sub
loopne
scas
xor
mov
adc
dec
in
aas
mov
adc
cli
mov
push
xor
out
mov
inc
add
add
sbb
cmpsl
mov
data16
xor
or
icebp
inc
out
inc
fistl
loop
movsb
loope
add
or
shlb
scas
xchg
dec
cmp
add
mov
add
nop
stos
mov
push
repz
sbb
jg
jecxz
pop
dec
stos
lcall
fbstp
and
imul
add
mov
sub
cmp
jle
aad
fs
test
movsb
mov
mov
ss
outsb
push
or
adc
jbe
sbb
enter
xor
sub
sbb
cmpsb
repz
les
int3
jmp
and
inc
xchg
sub
shrb
mov
cmp
push
inc
push
mov
lods
movsl
jl
out
push
mov
inc
imul
test
inc
mov
mov
pop
aam
pop
sub
out
jb
push
add
sub
add
fildll
or
cmp
xor
fsubrp
test
push
dec
shr
xor
add
insb
pop
test
pop
xchg
jmp
ror
aam
cmp
xor
sub
sbb
lds
or
icebp
out
mov
cmp
lods
xchg
repz
sbb
xlat
jo
add
mov
repz
mov
push
jno
int3
dec
and
mov
add
cmp
xchg
mov
adc
es
mov
pop
addb
jb
jecxz
mov
add
movsb
fnstenv
xor
sub
arpl
inc
inc
mov
fsts
push
dec
cmp
add
lock
fistpl
add
and
movsl
sub
in
loopne
push
mov
push
stos
data16
push
in
jns
iret
lds
ror
fstpt
jb
in
icebp
mov
dec
or
jno
scas
jns
xor
push
xchg
jmp
mov
adc
xchg
and
fbstp
scas
inc
lret
lret
dec
dec
ljmp
repnz
lahf
out
cli
pusha
rcll
mov
or
shll
mov
xor
ds
and
pop
push
jge
inc
jl
mov
jge
inc
insl
xchg
mov
adc
daa
inc
cli
adc
loop
and
cmpsb
js
xchg
xchg
and
jmp
push
sbb
in
mov
and
push
push
push
movsb
ds
cmp
loop
rolb
sub
inc
adc
nopl
sbb
jl
xor
mov
ds
adc
in
ds
neg
popa
jge
icebp
movsb
test
xchg
lods
or
or
pop
mov
bound
inc
xor
daa
js
inc
test
mov
sbb
int3
sub
cmpsb
out
lods
inc
scas
mov
ror
cmp
mov
pop
jno
inc
loopne
fs
sbb
cli
gs
aaa
push
mov
inc
pop
or
and
mov
dec
sti
xchg
push
pop
inc
and
inc
sbb
mov
sub
leave
jo
or
inc
push
jl
pop
add
inc
mov
mov
push
xlat
ret
sub
mov
add
jb
pusha
js
movl
sbbb
or
ret
arpl
sti
imulb
into
xchg
xchg
jb
adc
sti
pop
scas
sti
dec
dec
xor
aam
repnz
add
das
scas
push
aas
scas
cmp
adc
sub
jns
out
xchg
mov
enter
adc
enter
cltd
das
call
shrb
pop
loopne
gs
adc
lock
mov
pusha
adc
imul
outsl
out
dec
mov
popa
jg
pop
jmp
mulb
jnp
cs
stc
mov
test
aas
and
out
sub
enter
fs
inc
inc
push
out
orb
lods
mov
fprem1
andl
cli
cmc
adc
sub
sub
xchg
lock
enter
lgs
int
xchg
xor
cmp
adc
mov
xchg
cmp
xor
in
cmp
mov
xor
jbe
js
fistl
or
ficoms
popa
sbb
data16
mov
adc
or
or
sub
push
cmp
sub
aas
nop
cmp
cld
sti
add
inc
lret
imul
ljmp
push
jecxz
mov
mov
cmp
mov
stos
add
repz
sti
push
sbb
sbb
xor
push
add
xchg
push
adc
imul
mov
xchg
jp
leave
adc
push
pop
mov
xchg
cmp
insl
cmc
mov
in
dec
jo
push
sub
xchg
and
popa
push
in
push
cmp
push
js
shll
push
lcall
icebp
xchg
pop
int
arpl
cwtl
push
stos
inc
fdivs
push
rcrl
mov
out
mov
mov
cmp
neg
out
push
enter
inc
std
hlt
mov
lods
mov
repnz
xchg
shll
sbb
jmp
nop
cmc
jbe
loop
loopne
cs
ljmp
jmp
rolb
aas
mov
scas
mov
cmp
test
out
xor
or
test
add
cmp
push
call
jne
int
dec
and
add
sbb
or
pop
cwtl
repnz
out
arpl
mov
jno
inc
out
jo
pop
addl
enter
mov
loopne
mov
call
xchg
xor
xor
loopne
aad
jmp
ss
cmpsl
jno
and
add
ret
jne
nop
arpl
mov
cld
cs
inc
fists
inc
sti
test
in
mov
imul
adc
mov
or
jns
push
pop
push
movsb
sbb
ljmp
pop
lahf
insl
xchg
dec
aas
lock
enter
inc
je
mov
in
data16
lret
scas
sub
dec
mov
in
test
jl
xchg
push
sub
pop
test
pop
jne
movsb
out
push
push
xor
jge
arpl
mov
rclb
cmp
push
lods
int3
lret
mov
sub
dec
dec
mov
lods
xchg
icebp
popf
xchg
push
int3
mov
mov
fsubs
movsl
mov
mov
jb
fidivl
sub
jmp
call
mov
popf
aas
pop
rcll
mov
sbb
fistpl
sub
ljmp
lahf
mov
les
cwtl
fs
jle
or
cwtl
loopnew
jg
push
adc
movsl
fsts
aad
out
dec
test
lret
ljmp
xor
cltd
mov
mov
std
ja
mul
ret
push
adc
jge
or
add
cld
out
xor
cmp
fsubrs
shll
xor
push
insb
cmc
fdivl
ljmp
fdivl
mov
in
pop
pop
pop
pop
aam
add
sbb
sbb
or
lret
cmp
jne
mov
sbb
repz
lret
push
sbb
mov
addr16
mov
pop
cmp
jge
stos
movsl
ja
cmp
push
aam
fs
mov
fildll
jecxz
jbe
or
jge
jo
inc
jns
jecxz
pop
mov
pop
xchg
popa
xchg
ret
and
mov
aad
push
mov
std
mov
and
je
adc
push
mov
sub
mov
movsl
pop
adc
je
mov
xchg
fsubrl
paddsb
lcall
inc
and
push
aaa
sti
and
add
in
jmp
xor
adc
loope
daa
shll
mov
push
popf
cmpsl
sbb
hlt
movsl
out
enter
out
fwait
cmpsl
imul
fucom
leave
mov
xor
sub
bound
aas
movsb
mov
push
lods
jp
decb
shlb
int3
stos
bound
outsb
sbb
ja
out
jl
jns
xchg
cwtl
sbb
and
ret
xor
adc
gs
pop
jmp
sbbl
mov
popa
sbb
adc
shl
sub
jno
pop
loope
pop
lcall
lcall
adc
xchg
inc
mov
repz
enter
stos
in
fiadds
pop
jge
xlat
js
popa
sbb
jge
pop
pop
mul
cltd
or
cwtl
or
cmc
mov
fwait
aad
push
out
lea
aad
sub
divb
sti
fdivrl
mov
cmc
inc
aas
xchg
and
sti
sbb
push
mov
scas
inc
cli
mov
aad
adc
and
das
ds
pop
push
fldl
pop
mov
cmc
movsl
aaa
icebp
xlat
popf
shll
icebp
dec
xchg
enter
sub
inc
xor
lea
dec
out
sub
jae
idivb
mov
cmp
neg
cmp
jg
test
jmp
add
lcall
frstor
pushf
and
push
je
adc
inc
adcl
inc
mov
lds
jb
fisttpl
jmp
cmp
shrb
jae
or
jmp
pop
filds
push
nop
dec
xor
into
popa
mov
out
mov
enter
jns
mov
sbb
cmp
rcll
aas
ja
mov
ror
icebp
xchg
bound
cmp
cld
lds
cltd
iret
mov
cmc
add
sub
inc
ficoml
in
fs
lods
hlt
push
jno
nop
xchg
test
cmp
mov
stc
aam
cmp
into
push
lcall
negb
and
nop
and
and
and
mov
xchg
mov
js
pusha
int
cmp
xchg
aas
aas
sbb
rorl
mov
push
cwtl
ljmp
pushf
jnp
out
mov
xchg
ret
or
adcb
adc
ja
je
addb
vpandn
xchg
lods
dec
pop
movsb
orb
xchg
jae
movsl
les
in
out
adc
mov
cld
push
cs
jmp
fucomip
xchg
add
test
iret
xorl
or
xchg
mov
ret
sbb
imul
cli
cmpb
movntq
movsb
jmp
pop
xor
dec
enter
test
andl
xor
sub
xor
sti
inc
sbb
cwtl
sub
push
daa
lcall
mov
int3
sbb
mov
pusha
cmpsl
pop
jp
xor
or
sub
push
pop
in
setno
adc
popf
idivl
cld
sub
sbb
sbb
xchg
dec
inc
and
rol
mov
cmp
or
inc
xor
pop
sub
xchg
xchg
dec
bound
and
fdivp
roll
mov
push
mov
and
xlat
dec
jecxz
dec
pushf
xchg
ja
lahf
mov
add
inc
stos
aas
imul
mov
lea
out
stos
pop
xchg
cli
push
rorb
and
push
cmpsl
aam
fdivrl
lcall
jg
nop
cmp
stos
dec
jno
mov
jecxz
lds
push
lods
fsubp
mov
lcall
inc
and
adc
and
sbb
mov
cld
mov
xchg
imul
ss
aad
sub
or
jl
lcall
decl
test
sbb
push
pop
cmpsb
aaa
pop
mov
push
mov
clc
xor
enter
push
into
outsl
rol
mov
sub
ss
lret
bound
js
xor
xchg
dec
ja
loop
scas
pusha
jb
loope
in
mov
or
inc
inc
sbb
sbb
addr16
roll
rorb
andl
adc
das
and
les
adc
cwtl
aam
ficoml
call
adc
shlb
aad
cmp
out
mov
sbb
jbe
sbb
push
xor
ds
cltd
ja
mov
mov
push
fistpl
jge
cmp
mov
xor
push
mov
in
pushf
addb
add
sub
enter
daa
ficoml
and
fistpll
insb
mov
fstpl
add
bound
sub
pop
sbb
repnz
test
enter
adc
sub
jno
mov
jnp
push
mov
and
roll
movb
mov
arpl
push
dec
rcll
and
dec
push
rorb
xchg
movswl
cltd
aam
dec
pop
or
or
enter
sbb
xchg
or
cmpb
test
sbb
inc
int3
getsec
or
inc
ja
shll
mov
push
and
xchg
fstps
iret
lret
test
dec
inc
jnp
jae
arpl
ss
cmp
ret
fcoml
jmp
xor
lahf
add
mov
out
pop
std
arpl
push
pcmpgtb
sti
xchg
call
xchg
pop
cwtl
jecxz
dec
sbb
sbbb
stos
pop
jmp
cmp
xor
outsb
cmp
push
aas
mov
add
gs
and
add
addl
and
push
jecxz
jbe
jg
loop
mov
cmpsl
fldenv
dec
enter
test
ss
lret
add
and
into
stos
scas
fwait
add
add
cmpsb
pop
sahf
push
add
fs
data16
cmpsb
arpl
sbb
xchg
ja
cmpb
jb
inc
gs
hlt
jl
loope
sub
in
adc
lds
loopne
daa
cmc
cli
iret
lahf
and
lods
jle
cli
jp
loope
or
sti
loope
sbbl
push
subl
ret
mov
inc
into
sub
xor
cwtl
nop
outsl
sbb
mov
inc
xor
rolb
clc
xor
imul
xchg
jmp
xchg
fs
pop
flds
cmpsb
xor
sbb
adc
or
mov
sbb
dec
incb
xchg
je
adc
mov
stos
pop
adc
sbb
out
out
repnz
xlat
out
into
insl
sub
pop
dec
pusha
outsl
shll
rclb
push
loope
popf
icebp
mov
mov
mov
dec
xchg
adc
mov
push
andb
stos
inc
xchg
push
xor
and
cmp
xlat
loop
and
adc
jl
stos
inc
addb
inc
fcompl
and
xchg
dec
jge
in
pushf
inc
mov
in
popf
dec
sbb
jecxz
loop
mov
jmp
xchg
jns
ljmp
add
push
add
pop
js
sbb
jbe,pn
jge
cmp
mov
jns
das
out
inc
loopne
cltd
es
mov
into
cmp
xor
cmp
jp
hlt
xor
movl
push
xchg
mov
jnp
mov
jmp
sbb
sbb
std
inc
dec
lret
adc
jle
test
jl
ja
fwait
dec
jne
xor
jl
movsl
add
push
sbbl
mov
xchg
data16
out
out
subl
arpl
pop
into
dec
lret
xor
xchg
jecxz
jne
dec
mov
movsb
das
push
imul
xchg
sub
lods
iret
lahf
adcb
fildl
xchg
sarb
cmpsl
sbb
popa
sbb
cmp
and
imull
pop
jmp
jle
mov
sahf
xchg
mov
repnz
adc
test
aas
leave
fisttpll
inc
daa
dec
xchg
or
push
mov
mov
mov
outsb
adc
fwait
loopne
bound
out
cmp
ljmp
out
cmp
jb
push
lahf
dec
sub
and
in
mov
mov
cmp
xchg
bound
mov
enter
mov
adc
inc
sarb
out
pop
out
cmpb
adc
scas
inc
addr16
in
xor
cltd
jl
mov
data16
out
sahf
and
mov
icebp
test
inc
js
sub
mov
stc
sbb
nop
sub
cs
nop
rol
cld
jmp
lret
jbe
shll
imul
jne
and
into
adc
insl
fcmove
mov
mov
dec
pop
push
push
pop
xchg
adc
inc
aam
or
and
jge
jns
popa
mov
insl
mov
rcr
lret
inc
add
into
int
adc
pop
sub
mov
xor
mov
sar
xchg
ret
sub
push
ja
popa
xor
xchg
push
pop
sbbb
ds
shrb
mov
fisttps
or
loop
fnstcw
in
pop
cmp
lahf
or
adc
sub
mov
add
popf
rcll
sbb
js
and
inc
cmpsl
mov
jns
int
jmp
mov
cmp
andb
dec
jge
xchg
mov
arpl
dec
imul
ret
rcrb
jnp
dec
testl
mov
sub
xchg
dec
idivb
xlat
inc
pop
aaa
jg
ficompl
loop
or
lea
das
push
and
or
inc
mov
xor
pop
jle
ret
jl,pn
xor
loopne
dec
lret
lret
daa
test
test
mov
out
adc
mov
pop
push
cmpsl
sub
in
jae
pop
fwait
out
jg
mov
in
xor
cmp
repz
mov
jno
pop
xchg
or
or
sahf
cmp
push
xor
push
ja
mulb
int
xor
xchg
push
add
push
inc
sahf
addb
push
addr16
jnp
fistpl
sbb
or
dec
test
andl
outsl
inc
adc
inc
sub
leave
insl
pop
push
js
fiaddl
or
lret
and
loopne
hlt
sahf
inc
inc
xor
add
sahf
push
pop
lahf
inc
xchg
js
rcrb
pop
sub
add
jae
push
pop
cld
ret
aas
cmpb
add
push
mov
shlb
mov
addr16
adc
pusha
mov
in
xor
clc
lods
dec
bnd
cld
aaa
out
pop
mov
xlat
lods
leave
shrb
push
outsb
outsb
iret
mov
in
das
idivl
sbb
push
jns
xchg
cmpsb
pop
daa
sub
xchg
jo
jae
stos
pop
xchg
push
out
pop
xor
add
cld
sbb
mov
lret
stos
or
push
mov
cwtl
pusha
ljmp
and
inc
sub
shll
inc
pop
adc
ss
jo
xor
mov
mov
jo
mov
push
popf
fsubrl
arpl
outsl
cmp
ret
cmc
xchg
pop
imull
mov
loop
inc
add
or
add
popl
mov
mov
jbe
mul
add
test
lea
and
stos
nop
imul
jo
mov
xchg
push
loope
lea
outsb
jno
int3
pop
jo
int3
leave
cli
cmpsb
jp
jl
xor
sti
lock
ret
mov
mov
imul
jle
jno
or
jg
add
out
iret
jb
cwtl
hlt
dec
push
ror
fwait
pop
cmpsb
int3
stos
pop
andl
pop
inc
loopne
push
fs
mov
aas
mov
hlt
xor
pop
mov
xor
push
icebp
outsl
pop
xchg
or
loope,pt
push
dec
repz
outsb
mov
pop
addl
push
xor
inc
std
jbe
subl
ret
sbb
adc
icebp
aaa
in
sbb
cltd
xchg
enter
sbb
cmp
mov
jge
outsl
jecxz
sahf
xor
test
mov
push
inc
sub
jge
cmpsb
mov
inc
pop
inc
or
cmp
push
lahf
insl
add
pushf
mov
lret
psrlw
sbb
imulb
dec
xchg
push
jo
mov
push
shrl
jle
jne
sti
sbb
fcmovnu
dec
rorl
jg
sbb
outsb
sbb
add
dec
nop
push
fsubrs
and
xchg
divl
divb
mov
cmp
pop
scas
adc
mov
jp
scas
cmp
or
inc
mov
scas
push
dec
pop
pop
imul
push
cmpsl
std
sub
sub
cmpsb
scas
fdivr
cmpb
and
adc
and
adc
jae
sbb
xor
jnp
out
and
and
inc
xchg
cmp
adc
pop
push
iret
or
outsb
push
popf
mov
and
dec
ror
lcall
xor
xchg
mov
lcall
lods
dec
jge
gs
add
stos
testl
shl
in
xchg
pop
lret
dec
bound
xchg
sub
or
stc
jp
push
repnz
pop
ds
lds
out
in
mov
add
mov
pop
ds
scas
dec
push
movsl
lds
sub
push
imul
xchg
jle
add
dec
push
push
mov
pop
sub
shlb
adc
cmp
or
jge
ret
es
imul
mov
jne
xor
sarl
or
jne
dec
add
stos
xchg
popa
pop
jecxz
ja
mov
scas
cs
adc
mov
sub
fsubl
or
aaa
pop
lahf
sbb
lret
jnp
insl
sub
sub
daa
adc
or
mov
addr16
and
pop
in
mov
inc
mov
mov
pop
test
in
add
push
or
addb
mov
mov
adc
adcl
in
outsl
adc
lcall
insl
jge
cmp
js
and
mov
sbb
mov
jns
adc
cmpsb
dec
sub
ja
sarl
dec
rol
inc
aas
ficoms
loope
dec
sub
rclb
add
add
shl
mov
inc
enter
or
loope
das
int3
fsubl
mov
int
and
mov
divb
pusha
mov
inc
push
es
je
inc
popf
inc
pop
pusha
clc
xlat
pop
push
cld
or
sahf
fimull
inc
clc
pusha
mov
ljmp
loopne
lods
jp
mov
sbb
fisttpl
adc
xchg
cmpsl
mov
dec
in
and
mov
sahf
shr
pop
bound
sar
cltd
ds
jno
test
aaa
and
cmp
sbb
fdivl
std
adc
lcall
popa
and
ret
inc
jecxz
lahf
fsubr
add
and
pop
sti
jmp
or
lret
out
sub
fisttpll
or
outsb
xchg
or
adc
lods
gs
pop
fdivrs
aam
or
xor
test
mov
mov
mov
dec
xor
xchg
jp
dec
push
ljmp
test
lcall
mov
sbb
test
sbb
xchg
push
stos
adc
ret
addr16
jo
and
push
pop
inc
sub
push
push
add
shlb
or
shl
outsl
in
jmp
cwtl
mov
movsl
pop
xlat
test
incb
inc
xchg
push
shlb
xor
push
imul
xchg
or
ja
jp
leave
sahf
mov
imul
push
sti
mov
cmpsl
or
ss
cmp
leave
add
xchg
sub
bound
xchg
cmp
int
data16
shll
mov
ret
mov
mov
adcb
adc
jae
or
push
adc
lock
ret
stos
mov
cmc
mov
add
sub
or
in
push
daa
in
cmp
popa
xchg
fs
mov
sbb
outsb
mov
or
sbb
test
insb
outsb
mov
mov
and
mov
stos
aad
push
or
cmc
inc
nop
cld
xchg
and
fs
xor
sbb
lret
in
nop
loopne
in
fst
jl
test
add
fwait
mov
jp
sub
jae
mov
lock
push
dec
loop
pusha
shrl
pop
loopne
xor
add
sbbl
xchg
dec
lret
loope
and
cmp
push
sub
sub
int
cld
jno
scas
jl
shlb
enter
outsl
call
xchg
mov
push
mov
addr16
push
rcll
repz
div
test
or
and
mov
sarb
sbb
inc
in
int
mov
jecxz
mov
stos
pop
xor
or
cmp
stos
in
mov
clc
add
sub
mov
push
repnz
outsb
test
fwait
mov
pusha
imul
popa
and
mov
pop
hlt
mov
xchg
adc
ljmp
and
xor
gs
xor
out
adc
xor
rep
cmpsl
push
movsl
repz
mov
jge
cmp
stc
ds
add
clc
xchg
pop
push
out
test
dec
and
in
les
xor
ret
dec
mov
xchg
inc
jp
int
pop
lahf
mov
push
sti
inc
pop
xchg
mov
inc
cmpb
inc
mov
and
in
sbb
fs
out
or
test
xor
xchg
aam
mov
cmc
sub
adc
push
decl
ja
inc
fadds
add
fsub
mov
adc
sbb
or
fldt
in
xor
cmc
int
nop
stc
adc
stos
or
push
or
jne
xchg
jmp
jmp
add
sbb
stos
lahf
idivb
mov
cmp
pop
push
mov
ss
or
ret
fwait
mov
xchg
sub
push
lret
movsl
sub
outsb
stc
bound
jmp
add
pop
push
push
push
mov
test
xor
jecxz
adc
cltd
sahf
inc
pushf
xor
fwait
addr16
sub
pop
and
imul
gs
flds
std
mov
ja
jp
out
mov
pop
mov
inc
mov
leave
jo
or
mov
mov
inc
ja
push
pop
leave
push
popf
adcb
pushf
or
jl
sbb
aas
out
xchg
sahf
test
inc
in
lods
outsb
add
push
lcall
fdivrl
call
psubusw
add
rorb
or
xor
aad
and
pushf
enter
xor
loope
xor
insb
dec
leave
push
pop
mov
lcall
pusha
jae
dec
scas
add
scas
sbb
stos
sub
and
mov
mov
in
jecxz
shr
das
push
xor
jo
out
mov
andb
xrelease
push
xchg
addl
hlt
mov
ja
xlat
xchg
jae
cli
arpl
push
sbb
dec
cltd
inc
xchg
movsl
stos
pop
arpl
or
adc
or
adc
ficomps
jae
lret
popf
cltd
mov
arpl
xchg
mov
mov
andl
push
leave
std
sub
fdivr
add
lret
stos
shll
sti
push
or
ds
jg
scas
outsb
mov
mov
lret
and
rorl
jl
pusha
xchg
data16
out
xor
pop
pop
push
xchg
es
lahf
mov
xor
jmp
mov
dec
cmpsb
push
and
fucomp
fs
mov
cmpsb
dec
mov
int
imul
xchg
jp
mov
into
in
mov
xor
shr
ret
xchg
lods
mov
mov
cli
inc
movsw
mov
mov
rclb
and
outsb
or
sbb
mov
sbb
enter
mov
cmp
xlat
sbb
mov
mov
jno
sahf
cwtl
lods
mov
push
or
add
cmp
fsubrl
and
jge
jg
mov
or
or
push
cwtl
shl
inc
mov
in
or
idivb
add
fisubrl
cmpsl
inc
pop
mov
dec
insl
or
filds
add
loope
je
fstpt
popa
fs
mov
cli
stos
pop
imull
in
sbb
scas
aas
out
inc
mov
cltd
push
xchg
sbb
mov
jne
repz
int
inc
jecxz
lods
int3
inc
cmp
enter
sti
cltd
cmp
mov
adc
loopne
dec
jbe
dec
insb
jle
push
xchg
repz
jecxz
push
fstl
inc
xor
add
adc
hlt
rcll
cmp
push
arpl
sti
iret
xor
pop
aad
xorb
mov
loope
orb
mov
out
shll
add
xor
xchg
cmp
sub
mov
dec
cmpsb
fmul
mov
push
repnz
fucomip
inc
push
push
lret
sub
inc
sub
add
mov
fistps
iret
add
arpl
outsl
insb
pop
in
lahf
pop
rcl
or
sub
pushf
test
popa
clc
sub
roll
in
cmpsl
test
pop
out
lahf
sub
divl
pop
mov
add
fsubr
sti
or
mov
test
sub
js
ret
jge
cmc
push
sub
leave
out
lret
mov
bound
push
cmp
jns
cmpl
cs
test
lods
mov
gs
push
in
out
jmp
sbb
nop
push
lock
popa
repnz
nop
or
int3
adc
jp
test
dec
scas
mov
add
iret
ret
xchg
push
fstps
dec
neg
jp
mov
fsubrl
lods
gs
sbb
inc
loopne
scas
adc
jbe
maxps
push
adc
mov
add
jo
push
testb
dec
iret
adc
inc
rclb
ret
cli
lea
leave
push
nop
inc
scas
in
out
or
sti
xchg
xor
popa
fistps
sbb
or
jbe
movsb
data16
and
stos
inc
ds
ss
out
call
dec
xor
lods
jae
push
rorl
sbb
xor
nop
icebp
or
mov
pop
lods
dec
and
pop
nop
enter
fs
in
rorb
or
loopne
dec
call
movsb
mov
cwtl
in
lods
hlt
sbb
aas
outsl
sti
rol
xor
lcall
sbb
outsl
pcmpeqb
or
daa
dec
pushf
cmpsb
dec
push
in
cmp
push
enter
sbb
jmp
shlb
aaa
call
xor
sbb
mov
fildl
adcl
pop
mov
inc
mov
pop
sub
fdivr
lret
add
fistpll
dec
xchg
jbe
cmpsb
insl
imul
loop
int3
mov
inc
jo
mov
insb
xchg
incb
inc
sahf
imul
scas
mov
popf
ror
lret
or
inc
icebp
dec
nop
scas
movsl
mov
jl
sbb
lods
inc
push
mov
pop
loopne
out
push
bound
inc
sbb
je
imul
add
sbb
gs
mov
jnp
inc
or
popf
mov
push
xchg
mov
jnp
mov
sub
jb
push
pop
cmpsl
mov
cmpsl
hlt
pop
xchg
in
and
mov
pop
fnstenv
and
fs
lcall
and
mov
mov
add
dec
inc
mov
inc
push
andl
xor
push
fs
cmp
or
sub
mov
mov
shrb
fildll
add
jle
push
inc
in
fstpl
cltd
add
ja
jge
cli
jl
jmp
ficompl
nop
inc
mov
in
aas
xor
jle
fwait
scas
outsb
pop
leave
cmp
mov
imul
call
jne
push
fiadds
jbe
xor
leave
cmp
iret
sbb
aam
cli
jmp
lret
inc
pop
cmpsl
int3
sub
dec
jbe
push
adcb
fidivs
push
xor
sub
lahf
mov
test
or
push
or
pop
pop
fwait
jmp
int3
ret
iret
loop
ret
adc
cmpsb
sbb
aas
xor
aam
push
dec
dec
insl
out
jnp
les
xchg
adc
outsl
in
lret
andb
cmp
cmc
mov
movsb
mov
ret
or
mov
mov
cli
fs
popf
xchg
pusha
loopne
sti
aad
dec
notb
imul
sbb
sti
mov
jo
or
cli
mov
pop
add
arpl
push
loop
popf
scas
out
imul
push
inc
loop
mov
shrl
ljmp
dec
mov
jne
popf
sbb
loop
sbb
int
fidivrl
test
repnz
outsb
mov
inc
and
aaa
jg
adc
je
stos
sub
lods
inc
lea
ficompl
pop
std
hlt
repz
repz
and
add
add
jae
std
and
in
popa
stc
mov
das
mov
and
idivb
pop
gs
sub
out
sbb
inc
or
mov
cmpsl
xchg
fnsave
icebp
push
add
int
mov
jle
std
lret
or
jmp
in
shlb
jno
add
lret
mov
stc
xor
shr
mov
push
gs
loope
repnz
loope
les
icebp
mov
dec
cmp
cmp
iret
fnstenv
jns
push
fucomip
cs
negl
push
push
in
cmp
mov
js
adc
cmp
mov
jecxz,pt
fistl
cmpsb
into
sub
psadbw
mov
pop
shrb
sub
test
lcall
mov
xor
stos
adc
daa
imul
jge
jnp
jbe
repz
mov
mov
les
adc
out
adc
lock
mov
aad
pop
arpl
cmp
xchg
dec
je
jb
dec
mov
cmp
in
clc
sub
and
push
lret
repz
stos
or
inc
pop
jmp
adc
adc
frstor
jo
dec
stos
add
sbb
mov
push
jecxz
ret
dec
pop
ja
outsb
dec
sahf
cmp
lret
pop
sbb
jno
loope
loopne
pop
insb
xor
fdivp
test
repnz
mov
repz
mov
sub
test
jae
insl
mov
jne
test
ret
mov
movsl
jnp
and
jecxz
in
fwait
mov
loopne
cwtl
fldcw
cmp
pop
loop
add
sub
insb
inc
xorb
mov
mov
push
xor
add
ja
fnstenv
xor
movsb
aam
pop
add
inc
sbb
dec
mov
jmp
lods
pop
int
add
fnsave
lret
or
mov
sub
cmp
movsb
jnp
add
out
mov
push
and
vucomisd
cmpl
mov
adc
inc
mov
xchg
das
and
xchg
je
fs
loop
je
bnd
scas
xor
frstor
test
adc
shrb
jnp
adc
and
pop
int3
jecxz
adc
mov
ja
imulb
xlat
mov
push
adc
jne
push
scas
sbb
scas
lret
orb
jmp
xchg
xor
sahf
mov
mov
xchg
pop
cltd
mov
sub
das
test
cmp
push
icebp
jne
push
fs
sbb
jae
push
xor
int
sub
push
loopne
shlb
inc
push
pop
xor
in
stc
adc
sbb
sbb
arpl
pop
inc
leave
adcb
xchg
lods
mov
mov
gs
mov
sbb
jno
lds
je
filds
mov
sti
sti
outsl
ret
jmp
ret
jne
xchg
push
mov
js
cli
xchg
cmp
imul
add
push
xchg
cmp
sti
stos
shrl
aaa
push
jae
ljmp
leave
pop
cmp
jbe
ljmp
push
pushf
add
push
sub
test
xor
fucom
push
popa
js
xor
inc
loopne
sub
xchg
jg
mov
out
js
hlt
push
arpl
jnp
mov
imul
fmul
ss
sarb
pushf
inc
call
xor
xchg
sbb
jmp
rcll
xor
xor
and
and
jge
xchg
mov
jnp
popf
stc
testl
popf
cld
cltd
test
mov
lea
sbb
lret
xchg
push
mov
shrl
mov
test
or
jae
mov
es
lret
pop
out
or
inc
movb
fisttpl
push
inc
pop
sub
out
test
loop
mov
push
or
or
into
arpl
std
add
into
cs
and
jmp
xor
cld
jmp
dec
test
push
xchg
inc
dec
pop
daa
in
mov
jns
ds
mov
dec
into
in
jae
js
xchg
or
pop
cmp
xchg
xchg
fstpt
cmp
sahf
adc
sbb
fsubl
push
inc
popa
bound
adc
movsl
cmp
mov
mov
fimull
sbb
cmp
mov
add
fistps
jne
add
scas
add
mov
cwtl
nop
push
push
cld
cld
mov
push
repnz
imul
fstp
cmp
std
cltd
js
xchg
sub
jb
inc
dec
xchg
push
fdivrs
mov
inc
jbe
and
jmp
leave
jle
insl
or
into
dec
aas
push
aaa
aam
xor
pop
or
add
dec
jge
dec
imulb
adc
call
sbb
xchg
mov
jae
sub
jne
cmp
xlat
cmp
mov
xor
enter
inc
jbe
pop
rorb
add
nop
sub
cmc
mov
mov
mov
lods
add
lods
movsl
in
movsl
push
dec
adc
fsts
mov
dec
leave
fistpll
or
push
push
gs
pusha
dec
imul
pop
fsubl
xor
stos
ds
jl
xchg
fnstsw
les
leave
loop
into
pop
mov
int
cs
push
pop
add
pop
push
cmp
push
outsb
inc
push
lret
and
and
cmp
and
movsl
jmp
dec
les
push
jo
push
push
mov
ljmp
jmp
or
or
mov
daa
jns
lea
lds
orl
insb
add
insl
test
addr16
xchg
add
and
out
rcrl
mov
mov
push
shll
xlat
mov
popf
loope
xchg
jg
push
xlat
faddp
jmp
enter
inc
gs
jb
shlb
pop
cli
dec
daa
call
inc
add
pop
or
lods
je
ja
in
shll
scas
hlt
fwait
clc
sub
sbb
jl
or
pop
in
cmp
sbb
fs
jecxz,pt
popf
enter
pop
shll
mov
xchg
xor
sub
jno
into
mov
arpl
call
into
rorb
mov
adc
leave
leave
rorl
xchg
inc
fwait
jbe
dec
rcll
and
push
dec
repz
dec
inc
cmpsl
jnp
fs
sub
sbb
insl
pop
xor
dec
sarb
popf
cld
mov
add
mov
push
fs
mov
sahf
mov
into
mov
sbb
adc
xchg
ud2
scas
out
stos
sahf
cli
pop
push
ja
mov
stos
xchg
into
jno
fsubrl
faddl
sbb
daa
in
outsl
sub
pop
xchg
add
pop
and
int
add
out
dec
mov
cmp
fidivl
popf
mov
add
mov
xchg
int
adc
hlt
sbb
pop
dec
cmpsl
xchg
mov
jecxz
fsubs
inc
or
mov
cmp
lds
xor
gs
xchg
fistpl
and
mov
js
adc
push
jno
or
fs
test
lds
rcr
adc
pop
inc
imul
outsb
or
cltd
add
jns
pushf
sbb
dec
add
icebp
out
xlat
dec
xor
hlt
push
repnz
inc
mov
adc
into
dec
imul
and
push
aam
xor
push
mov
add
ss
jae
pop
popa
jb
adc
dec
subl
mov
jl
dec
cmpsb
adc
xchg
roll
xor
jl
insb
fcmovnu
xor
mov
adc
push
dec
push
jge
fmull
pop
cs
mov
cmp
inc
clc
jbe
ja
aam
push
adcl
push
xchg
mov
adc
fsubrl
sub
popa
bound
pushl
outsb
cmp
cmp
es
xchg
lret
sbb
mov
mov
lret
fxch
adc
shl
pop
stos
jp
addr16
mov
movsb
inc
leave
pop
and
lahf
in
ja
cwtl
mov
imul
jae
mov
and
add
lods
out
fistpl
insb
lods
mov
adc
xchg
jg
gs
mov
push
aam
mov
mov
loope
pop
mov
pop
std
stc
jmp
inc
inc
das
gs
fsubl
lods
fdivl
dec
icebp
sahf
pop
clc
out
xchg
js
mov
sahf
dec
jle
lods
lret
dec
mov
jp
insb
addr16
push
mov
adc
rclb
in
push
sahf
mov
cmp
pusha
dec
loop
int3
mov
mov
cmc
push
sub
add
inc
popf
gs
xor
dec
outsb
mov
int
add
sub
jno
mov
sahf
dec
sbb
sbb
push
jne
out
jae
shrb
adc
sbb
repnz
sarl
stos
sti
sahf
xor
movsl
jg
xchg
adc
movl
inc
add
lret
dec
add
test
pop
cltd
or
mov
push
iret
mov
sbb
jnp
ljmp
outsb
sub
push
jl
jg
pop
and
bound
fdiv
fldcw
fwait
test
bound
das
xor
enter
xchg
xchg
std
mov
sbb
cmc
and
movsb
xchg
cli
sbb
movntps
jo
cmc
push
xor
mov
movsl
stos
out
in
push
iret
or
clc
loopne
mov
ret
sub
mov
in
and
loope
inc
mov
lock
mov
dec
daa
in
pop
pop
inc
and
stos
out
push
sbb
sub
aas
stc
das
and
sub
scas
ret
aam
push
mov
call
pop
cmpsl
pand
mov
movsb
sub
das
hlt
cld
mov
mov
movl
mov
scas
adc
inc
or
jmp
xchg
int
and
cmpsb
jb
testl
inc
xor
xchg
add
xor
shll
sub
stc
std
in
movb
jo
insl
rdtsc
inc
packsswb
cmpsl
fidivrl
pop
cs
faddp
ja
pop
and
xchg
faddl
test
das
outsb
xor
pop
pushf
jp
clc
fmull
stos
mov
dec
push
rcll
mov
test
imul
push
lods
jb
out
shrb
pop
in
push
cs
xchg
push
jl
sbb
mov
pop
lods
cmp
mov
pop
insl
pushf
rol
and
iret
aam
mov
or
cmp
add
and
adc
rcrb
mov
pop
in
xor
push
scas
icebp
cmpsl
add
andb
andb
imul
arpl
repnz
xchg
ret
ss
aas
mov
movsb
xchg
out
loope
mov
into
hlt
mov
cli
and
adc
jge
xchg
and
add
and
clc
dec
pop
ror
mov
or
or
cmpsb
mov
and
call
rorl
cmovnp
sub
add
sub
clc
addb
push
fidivs
fwait
push
das
sbb
xchg
sbb
xchg
addr16
adc
xor
std
outsb
shll
ret
jge
jo
fnstcw
mov
in
jne
push
int3
xor
xchg
push
cmpb
push
adc
rclb
ljmp
inc
xchg
jo
data16
fldl
mov
cmpsl
iret
push
or
cmp
test
mov
js
mov
fadd
mov
pop
add
cltd
mov
dec
jmp
mov
lods
cmp
mov
mov
int
xor
push
add
push
imul
outsl
test
jg
dec
adc
xchg
in
pop
mov
inc
addr16
arpl
dec
xor
imul
sbb
es
fiaddl
repz
ret
add
pop
shll
int
out
pop
xor
ss
jns
adc
jg
mov
test
popf
and
sti
mov
xchg
dec
mov
sahf
inc
aad
ljmp
mov
jb
lds
xchg
and
aad
mov
xchg
andb
mov
insb
mov
sbb
xchg
fldcw
test
mov
cmp
push
int
inc
sbb
sub
dec
out
sahf
push
scas
xchg
sub
pusha
les
mov
xor
xchg
inc
in
xor
adc
and
imul
adc
xchg
aaa
ljmp
and
xchg
inc
cs
jo
mov
out
jl
and
sub
or
add
divl
inc
decb
test
lods
xchg
dec
sub
cltd
adc
push
nop
aam
push
cmp
ret
cmpsl
dec
fnstsw
push
loop
xlat
js
and
cltd
fldcw
inc
fistl
add
cmp
cld
dec
jmp
jecxz
mov
push
fsubl
fisubl
lds
adc
xor
ja
add
sbb
bswap
add
outsl
cmc
clc
hlt
push
mov
xor
or
repz
cmc
fsubs
cmp
es
fwait
sub
pushf
movsl
xchg
xchg
adc
inc
add
sub
sti
cmp
xor
sbb
vucomiss
and
mov
push
jae
push
push
lcall
xor
mov
repnz
fstpl
mov
outsl
xchg
xchg
sub
rcl
testb
das
and
div
adc
xchg
daa
popf
mov
mov
sbb
cmpsl
inc
jb
lock
inc
or
add
call
xor
xchg
inc
das
inc
add
push
adc
scas
inc
clc
dec
cmp
shrl
jae
push
push
in
and
lds
inc
sbb
repz
adc
mov
cli
in
ret
jge
je
and
arpl
aas
pop
dec
lods
xchg
push
cmpsl
add
and
int
je
out
adc
call
xchg
repnz
sbb
mov
sbb
leave
push
mov
fisubs
lahf
add
test
not
cli
sbb
xor
js
ljmp
aas
aaa
cmc
add
xor
bound
mov
cmc
jle
xor
sub
mov
mov
inc
jbe
fs
aam
lret
fisubrs
sbb
shlb
sahf
ficoml
lock
lods
or
movsb
sahf
out
lods
and
into
cmp
jo
add
pop
xor
mov
jne
push
aad
arpl
mov
xor
andl
add
dec
sub
data16
into
cltd
add
sbb
out
and
ss
xchg
push
inc
sbb
loope
iret
and
cmpsl
mov
ror
ret
arpl
rclb
pop
adc
inc
jbe
xor
int3
lds
xchg
cld
jle
ja
sbb
xchg
inc
sub
add
sub
inc
xor
je
sbb
jns
jg
pushf
pop
xorb
pusha
sub
mov
inc
scas
mov
xchg
push
aam
test
stos
scas
jno
lahf
ss
aas
ror
popf
in
ss
ljmp
icebp
jp
mov
movsl
add
lods
js
daa
lahf
mov
out
add
in
jg
dec
mov
xchg
mov
pop
cmpsb
ljmp
mov
mov
cmp
add
push
imul
loop
js
test
mov
jb
push
je
mov
addr16
imull
adcl
loope
lock
mov
jmp
ljmp
ljmp
aaa
pop
repz
test
sbb
add
or
xchg
leave
shlb
lods
inc
sbb
scas
jne
mov
iret
xchg
push
inc
inc
add
fmuls
and
pop
cmpsb
jmp
into
ss
adc
rcrl
mov
adc
mov
cwtl
jmp
insb
cwtl
inc
jae
out
push
pop
test
test
xchg
mov
add
mov
cmc
popa
lods
test
imul
popl
inc
mov
and
scas
or
pop
or
mov
ljmp
call
adc
sbb
push
jns
jne
repnz
inc
mov
imul
add
inc
cmp
mov
test
lods
leave
push
shlb
mov
mov
int3
stos
adc
jo
nop
movsb
jl
aam
inc
cmp
pop
movsl
les
test
aam
pop
xor
add
inc
sbbl
out
add
adc
xchg
test
outsb
sbb
test
icebp
in
lahf
fisttpl
gs
pop
inc
push
mov
and
fdiv
loop
movsl
mov
pop
aaa
xchg
and
cli
push
sbb
pop
sbb
pop
xchg
pop
inc
xlat
fnsave
pop
pop
repnz
arpl
cmpsl
in
rorl
in
mov
test
movsb
and
popf
pusha
sbb
mov
addl
or
loope
xor
fsubrl
cld
xchg
jno
jle
jecxz
xchg
and
mov
lret
xor
int
outsl
rorb
int3
and
inc
out
push
xchg
mov
aad
ret
in
push
je
inc
jne
rolb
insl
dec
mov
mov
in
call
nop
xchg
pop
sub
jle
fwait
sbb
mov
fstl
jg
xchg
pop
sbb
or
pop
pusha
sbb
mov
cmpsl
lds
nop
lcall
cmp
pop
push
or
shrb
push
xchg
mov
sbb
popa
jbe
movsl
dec
inc
mov
xchg
stos
push
in
mov
shrl
shll
imul
adc
je
shll
xchg
in
push
mov
jecxz
daa
cld
xor
adc
mov
sarb
sarb
in
movsb
shrb
adc
outsl
lea
and
ret
movsl
xchg
cmpsl
mov
ret
pop
push
test
test
add
and
test
jno
xchg
int
xchg
inc
and
mov
sbb
cmp
mov
in
pop
pop
mov
mov
push
in
dec
push
addr16
inc
adc
sahf
cmpsl
xchg
bound
ja
xchg
push
adc
xor
jae
or
push
cmp
nop
adc
jecxz
sub
push
sbb
arpl
nop
cmp
push
and
mov
push
jmp
movsb
add
mov
push
mov
add
lock
lret
dec
setns
loop
adc
sbb
clc
mov
inc
inc
insb
mov
pusha
cld
pop
ss
dec
subl
xchg
push
out
sbb
push
xor
push
ljmp
jg
outsl
js
aaa
xor
cmpsl
pop
lds
inc
or
and
lods
dec
cmp
fistps
or
xlat
sub
in
mov
ret
push
scas
xchg
cld
dec
sub
mov
xchg
inc
imulb
iret
xchg
in
ret
mov
out
cwtl
test
cltd
enter
in
sbb
mov
loop
loopne
ds
xchg
inc
mov
jg
dec
mov
js
aad
jp
imul
or
and
mov
int
xchg
iret
mov
or
mull
jge
imull
mov
outsl
cmpsl
loopne
sub
iret
adc
int3
mov
inc
mov
fcoml
and
inc
push
xlat
xchg
imul
mov
rcrl
push
and
and
push
sbb
mov
sub
adc
pop
xor
mov
push
jmp
test
shl
add
arpl
andl
or
xor
and
mov
sub
jp
jo
stos
sub
mov
push
cmpsl
fwait
xchg
add
loop
adc
cli
push
test
mov
dec
cmp
or
sarb
cltd
cmp
mov
add
adc
out
loop
mov
hlt
jae
mov
clc
pop
add
sti
xchg
insl
pop
testb
idiv
shr
les
ret
mov
inc
mov
add
insb
or
insb
push
xchg
nop
dec
gs
push
sub
movsb
jle
lcall
cmpsb
cwtl
adcl
jl
bound
sbb
adc
test
and
and
push
int
pusha
bound
fdivr
bound
sub
jg
cmp
jg
xchg
ficoml
aas
jmp
sahf
jne
std
cltd
mov
push
adc
pop
gs
test
inc
xchg
and
ret
scas
je
test
sbb
subl
aas
jle
mov
sbb
pop
jle
dec
jns
and
jmp
loopne
jae
inc
mov
xchg
push
xchg
inc
push
daa
testl
in
out
push
jmp
dec
scas
pop
shll
test
ret
movsl
xor
mov
in
ja
out
imul
sti
mov
bound
add
fisubrl
sub
xchg
jb
mov
xchg
shll
das
aaa
adcl
or
adc
mov
lock
stos
decb
xchg
pop
cli
lods
lret
mov
dec
sti
xor
sub
jns
cmpsl
push
jbe
sub
idivl
sub
and
and
xlat
movsl
and
mov
cwtl
outsb
jnp
pop
mov
fidivrl
xchg
adc
es
dec
xor
loopne
rcr
inc
push
lret
cltd
cltd
decl
sub
pushf
movsb
loopne
cmpsb
cltd
dec
test
imul
fsubp
inc
stc
push
jmp
add
imul
pop
aas
ljmp
rcr
fisttpll
jmp
mov
sub
lods
xchg
xchg
cmp
idivl
dec
pushf
pop
sub
test
lahf
add
fwait
fs
insb
jp
cmpsb
sbb
cmp
or
jp
imul
mov
pop
mov
xor
pop
fdivs
push
xlat
add
or
cltd
fwait
in
pushf
mov
dec
in
and
xchg
and
repnz
sub
stos
filds
mov
dec
leave
push
mov
dec
jg
test
lahf
clc
fnstenv
test
call
pop
dec
inc
test
pusha
cmp
pop
and
lds
int3
jns
sbbb
xlat
inc
inc
daa
mov
adc
ja
sub
sti
lods
cmpsl
outsl
dec
pop
sub
fildll
bound
enter
hlt
outsl
sub
pop
jb
sti
push
pop
xchg
adc
scas
and
fidivs
loope
sbb
int3
fsubrp
dec
idivl
inc
jecxz
adc
dec
je
outsb
dec
mov
iret
cmpsl
jne
pop
movsb
adc
daa
dec
repz
jo
hlt
frstor
dec
shll
addb
add
sbb
and
insl
adc
aas
and
cmp
mov
nop
int
xor
mov
xor
js
pop
or
and
sub
push
xlat
rorl
aas
fadd
adc
mov
or
jg
gs
xchg
pop
mov
dec
test
rclb
or
mov
sbb
xchg
cwtl
sub
cli
mov
js
lcall
xchg
pop
jno
iret
cmp
sbb
aad
mov
vpaddd
mov
mov
ret
dec
hlt
xor
mov
mov
push
push
stos
in
add
and
or
push
iret
mov
adc
jne
xchg
push
movsb
xchg
mov
loopne
pop
mov
ret
lea
out
or
mov
add
pcmpeqd
pop
std
stc
dec
pop
add
push
lods
js
mov
lods
sub
xchg
scas
dec
push
pusha
cmp
xor
addr16
sub
repz
push
jne
out
sbb
cmp
pop
jae
jnp
jns
scas
mov
std
fdivs
dec
xor
xlat
add
cmp
mov
pop
mov
js
jl
fs
mov
sbb
push
push
pop
in
jo
or
push
imulb
and
out
push
dec
lret
stos
mov
das
lods
cmpsb
shlb
movsl
movzwl
dec
cmc
add
inc
cs
and
jg
and
dec
mov
dec
je
gs
xchg
or
aam
mov
cltd
mov
cltd
ret
jne
cmpl
out
dec
scas
aam
cmpsl
pop
js
or
jmp
add
jne
icebp
dec
push
mov
push
pop
scas
inc
lcall
xor
cmp
pop
addr16
or
sub
out
push
mov
in
adc
mov
xchg
call
lea
push
mov
inc
cli
push
outsb
hlt
movhps
mov
fiaddl
ljmp
fstpt
out
fwait
add
push
adc
mov
incb
adc
mov
mov
loop
push
movsb
imul
adc
mov
add
or
push
or
pushf
xor
std
sub
pop
inc
fiaddl
pop
enter
mov
fs
mov
hlt
out
fsts
sbb
ret
and
out
lahf
outsb
popa
mov
test
dec
clc
jbe
gs
icebp
fwait
std
cli
cmp
loop
jl
imul
dec
lcall
xor
sub
inc
adc
pop
pushl
iret
pop
nop
stos
inc
insb
pushf
es
and
scas
xchg
sub
adc
scas
lods
out
mov
leave
adc
addr16
shrb
add
fwait
sahf
pop
repnz
inc
push
add
dec
loope
push
sarl
hlt
bound
aas
rorb
jp
push
mov
test
pop
jmp
imul
xchg
sub
les
xchg
xor
jne
fwait
xor
mov
xchg
mov
ret
sbb
push
xor
call
mov
repz
frstor
addr16
out
xorl
fsubl
insb
scas
jge
mov
jns
in
lds
ret
jno
lahf
lock
push
mov
jg
cmc
add
shlb
out
shl
mov
push
mov
jg
das
gs
jg
ljmp
leave
shrd
call
jl
mov
push
in
jo
xchg
sub
dec
mov
das
cld
test
aam
and
mov
aas
sti
movsb
popf
out
jae
scas
mov
pop
imul
push
andl
call
insb
hlt
lds
adc
jbe
inc
popf
jmp
or
mov
mov
lret
fsubrl
and
inc
movsl
lods
jns
mov
cwtl
bound
mov
int3
cmp
stos
decb
dec
jge
mov
mov
and
nop
cltd
aam
dec
pop
fwait
push
mov
insb
fsubrs
mov
cltd
pop
subb
inc
aam
fdivrl
outsl
fnstenv
jmp
push
add
fistpl
lcall
fsubs
sbb
adc
movsl
insl
sarb
outsb
adc
loop
daa
out
xchg
or
xchg
outsb
mov
sub
push
push
sub
lods
xor
fstl
add
lret
sub
cmp
icebp
xchg
lcall
xchg
inc
dec
ja
push
mov
je
mov
push
call
pop
fcoml
js
pop
push
push
xor
dec
mov
in
aam
lret
inc
rcr
xchg
adc
and
jns,pt
fmul
jp
or
sahf
xchg
fisubl
jnp
xor
jle
bound
call
xor
mov
jge
mov
mov
dec
pusha
pusha
cld
push
fiadds
movsl
xchg
call
mov
lret
enter
fstpl
push
insl
loopne
mov
or
das
lret
mov
pushf
adc
loope
push
adc
in
test
and
ds
out
cwtl
jg
popf
push
xchg
xchg
mov
and
das
xor
dec
lret
loopne
cltd
repz
popf
ss
addl
and
jp
xchg
xor
cltd
or
mov
enter
out
mov
lods
adc
push
mov
outsl
adc
pop
int3
sbb
insl
add
dec
add
xor
mov
sbb
andb
lret
pushl
int
rcrl
sub
popl
lea
aam
xchg
pop
add
inc
lret
inc
add
or
jecxz
mov
or
test
stc
iret
rcl
xchg
add
pop
outsb
dec
push
and
pop
xchg
adc
not
dec
adc
std
xor
popa
out
jne
mov
mov
insb
inc
lock
adc
cmp
and
dec
nopl
insb
xchg
loope
pop
cmp
add
and
lods
lcall
shll
jnp
xchg
sbb
inc
jne
test
mov
dec
sbb
mov
ja
inc
xchg
insl
movsb
in
popa
jmp
cmp
mov
pop
repz
fbld
push
aam
adc
fldenv
xchg
sahf
rcrl
out
shll
xchg
sahf
sti
pop
rolb
test
ret
movsb
cmp
push
mov
mov
dec
push
xchg
pop
sbb
and
jnp
jae
push
cli
leave
addr16
jno
lret
enter
xchg
cmp
pop
sbbl
and
mov
xor
in
aam
mov
mov
gs
and
arpl
rclb
mov
mov
cmc
jo
dec
mov
inc
insl
push
jg
cmp
lods
xchg
push
sub
sbb
or
test
and
stc
mov
aaa
adc
push
dec
jmp
stc
sarl
fwait
pop
push
jb
mov
lahf
or
out
cwtl
jecxz
test
dec
lahf
mov
shr
jno
nop
repnz
fdivs
xor
scas
jmp
inc
dec
in
rcl
sete
mov
maskmovq
mull
and
lods
stos
fsts
int
adc
xor
xchg
ja
push
mov
add
out
xor
shlb
inc
mov
xchg
jmp
sub
pop
xor
in
push
scas
es
dec
jmp
adc
or
aas
pushf
jmp
dec
ffreep
jne
sbb
mov
fisttpl
xchg
in
ljmp
mov
sbb
adc
mov
outsl
daa
or
pop
lods
fcmovne
and
mov
sub
sbb
and
dec
and
mov
idivl
push
test
mov
mov
shlb
cltd
out
xor
addb
call
mov
cmp
in
jl
clc
mov
ljmp
sti
mov
mov
push
sbb
jne
mov
xor
sub
inc
cmp
cmpsb
ds
lods
stos
xchg
jb
rclb
cwtl
xor
pop
push
jge
xchg
xchg
adc
mov
sbb
mov
sbb
or
mov
sbb
call
pop
adc
jae
jge
fwait
movsl
sub
jecxz
js
out
pop
lods
and
xchg
loope,pn
mov
loope
xchg
adc
adcb
dec
dec
cmpsl
pushf
lods
js
lock
xor
sbb
pop
mov
rcrl
shr
and
mov
lea
mov
shl
mov
dec
addr16
xor
jmp
nop
shll
or
xor
and
pop
lods
outsb
loope
icebp
cmp
jne
mov
jl
inc
data16
dec
sti
std
or
xchg
pop
out
sub
dec
xor
mov
sub
pop
lods
and
popf
iret
int
cmp
jecxz
sub
mov
nop
mov
and
inc
inc
sub
cld
in
or
mov
cmp
cltd
cs
xor
lock
lds
mov
pop
aad
call
in
jb
pushf
push
cs
mov
lcall
xchg
sarl
leave
std
inc
push
xor
dec
jp
movsb
mov
cmc
dec
dec
imul
out
shlb
jmp
fcmovnb
cmpsl
sub
xchg
and
lock
aad
cmp
pop
jae
lret
lock
or
xorb
lock
inc
nop
mov
pop
xchg
nop
leave
jns
push
mov
pop
iret
rclb
cmpsb
mov
jmp
arpl
push
cmpl
push
lods
push
mov
add
aaa
mov
and
and
mov
inc
jnp
push
leave
lahf
push
sub
xchg
mov
push
stc
sbb
negb
push
notb
xchg
xor
lret
push
movsl
ljmp
dec
repnz
mov
adc
inc
dec
mov
push
push
xchg
mov
arpl
cwtl
cs
jae
adc
pop
cltd
jle
dec
stc
jns
inc
scas
jns
cwtl
mov
ds
fldt
adc
mov
sub
jns
out
pop
leave
cmp
pop
daa
or
ljmp
push
test
cltd
xor
mov
ret
sti
lret
xor
lahf
test
sbb
cmpb
sub
adc
jp
ljmp
cmp
pop
mov
rorl
fistps
and
lods
repz
popa
inc
test
or
bound
inc
fldl
add
cmpsl
out
lock
fcmovbe
dec
mov
int
lock
jmp
ja
nop
pop
lds
clc
lods
js
in
and
or
hlt
lock
mov
cmc
xchg
shlb
sbb
or
adc
cs
out
cli
mov
outsb
imul
sbb
cmpsl
jb
sub
xchg
push
cmp
mov
cli
mov
cmpsb
pushf
xchg
cmp
ffree
pop
adc
mov
es
cmp
xchg
repz
push
std
mov
loopne
jecxz
imul
out
cmp
add
add
pop
les
jl
ja
mov
arpl
push
dec
push
xchg
push
aas
or
xchg
cltd
add
mov
lods
mov
cmpsl
push
imul
push
adc
out
in
or
out
iret
sbbb
xchg
add
mov
mov
scas
imul
int
sarb
scas
cltd
dec
ds
sub
mov
mov
add
movsl
sub
xchg
in
mov
icebp
in
and
subb
xchg
jns
mov
pop
insb
add
sub
xlat
xchg
lods
mov
insl
call
nop
cmc
push
int3
mov
xchg
pop
pop
inc
add
jne
mov
cmp
and
out
int
mov
inc
loop
xchg
movsb
xchg
cmpl
mov
push
sbb
inc
icebp
andl
js
push
shl
push
mov
sahf
stc
sub
or
fdivs
cmp
jl
sbbl
or
test
cmp
sub
cmp
lea
and
inc
je
shl
jns
adc
sbb
es
repz
or
lahf
and
in
fdivrs
xchg
addr16
add
sbb
out
adc
push
inc
cltd
stc
out
sbb
jb
inc
f2xm1
shll
mov
notb
sti
je
cmp
jae
lret
push
cmp
cwtl
mov
sti
stos
xor
pop
mov
mov
mov
or
cli
test
xlat
cli
pop
out
js
or
dec
lcall
and
cmpsb
in
lahf
cltd
repnz
jnp
xlat
add
add
mov
cmc
mov
jecxz
aaa
dec
adc
icebp
fistpl
push
jns
je
xchg
loop
cwtl
ja
add
jmp
loope
call
adc
and
inc
xchg
inc
jb
pop
inc
dec
push
scas
cmp
dec
dec
es
popa
bound
sbb
mov
in
imul
movsl
test
pop
push
adc
arpl
enter
cmp
push
sbb
push
mov
lahf
scas
jb
mov
iret
ljmp
inc
mov
add
mov
xchg
cwtl
xor
jecxz
mov
jo
cli
sbb
fisttps
dec
mov
add
mov
mov
pop
lret
dec
and
dec
fcoms
shlb
inc
sub
test
mov
and
inc
inc
pusha
xchg
popf
movsl
lret
adcb
shlb
ret
ljmp
incb
rolb
add
cld
inc
insl
lock
cmpsb
test
cld
sbb
and
jo
mov
sbb
lcall
jnp
lret
imul
and
or
pop
leave
xchg
cmp
jmp
rclb
jecxz
gs
cli
inc
xor
scas
xchg
xchg
fwait
daa
mov
mov
int
adc
add
add
xor
dec
je
ffree
push
lret
ret
xchg
jle
test
bound
fcompl
and
addr16
dec
xchg
int3
cwtl
sbb
xchg
or
add
push
push
aas
outsb
loop
rorb
add
mov
xor
or
lods
pop
out
mov
mov
outsb
repz
dec
mov
popa
dec
cli
push
fimuls
push
jbe
pop
imul
aad
mov
add
test
sbb
jno
mov
hlt
add
xchg
push
insl
jns
adc
insb
push
sub
mov
inc
mov
aaa
js
xor
loope
ss
inc
das
movsb
in
loope
enter
add
cmp
sbb
pop
mov
jmp
fsubrs
arpl
test
push
sub
cmp
or
mov
mov
sti
dec
jmp
xchg
or
jp
flds
cli
es
push
adc
xchg
sbb
es
test
add
mov
cmp
fcomi
insb
insl
shrb
mov
jg
je
daa
fdivs
or
mov
mov
xchg
roll
stc
xor
sbb
sub
inc
pop
cs
inc
pop
popf
sub
stos
pop
lods
mov
nop
push
and
adc
cmp
out
cltd
jmp
aas
fisubs
and
movsl
ja
jne
mov
xlat
xchg
jnp
mov
lods
or
icebp
stos
push
out
cmp
int
pop
mov
mov
sub
pop
iret
mov
hlt
add
into
and
pushf
add
jmp
dec
xchg
mov
mov
inc
rclb
sub
mov
push
in
xor
popf
sub
inc
lds
add
and
mov
mov
xchg
xchg
popa
dec
andl
pushl
and
lcall
in
ja
xchg
jecxz
jnp
pop
fs
adc
ret
shll
addr16
xor
or
sbb
stos
cwtl
push
pop
sbb
icebp
je
inc
mov
jl
iret
bound
cmp
pusha
sub
loope
test
rolb
hlt
mov
int3
xor
add
lds
fdivl
mov
mov
and
out
cmp
mov
pop
cs
sbb
or
adc
inc
xchg
adc
mov
les
sbb
dec
xchg
add
cmpsl
outsl
inc
add
mov
js
sbb
fidivrs
iret
sbb
divl
adcb
scas
jecxz
int
push
cli
test
outsl
fsubl
movsb
cwtl
adc
repnz
xchg
idivl
or
je
call
movsl
jge
hlt
insb
mov
fistpll
and
jno
adc
out
push
dec
jb
ret
and
cmp
insl
jp
or
push
mov
add
movsb
mov
loope
or
aad
adc
add
popa
jecxz
pop
ret
add
dec
push
scas
adc
pop
mov
mov
adcl
mov
dec
ret
daa
pop
mov
sbb
in
shrl
jae
cmc
add
rclb
cli
fnstenv
shrb
and
test
ja
ret
movsb
mov
out
xor
shlb
mov
pop
cmpsb
es
loopne
mov
pop
inc
loope
fcmovnu
movsl
sbb
adc
jmp
mov
push
or
nop
js
sbb
pop
dec
fldl
cmp
push
inc
lcall
neg
pop
stc
arpl
push
add
and
in
sbb
int
frstor
insb
inc
pop
insl
cmp
or
shlb
sbb
or
repz
jp
popf
cmp
mov
fucomip
nop
das
test
push
or
out
push
mov
adc
mov
xor
sub
test
xchg
pushf
mov
in
gs
cmpsb
data16
mov
jecxz
cld
ffreep
fisubs
aaa
cmpsl
sahf
roll
jne
ljmp
sbb
jmp
xor
lods
jecxz
mov
ja
int3
sub
icebp
jbe
sbb
test
xor
loop
lahf
out
out
mov
shlb
cmp
mov
out
or
add
ficoms
add
test
out
scas
mov
sbb
repz
jns
fmul
int
mov
cs
lret
and
pop
rcl
push
adc
pop
out
cli
pop
jp
daa
sbb
mov
push
subb
mov
mov
arpl
insl
inc
adc
adc
enter
daa
mov
bound
sbb
mov
dec
xchg
mov
jbe
pop
cmp
adc
repnz
icebp
aam
jp
and
push
enter
popfw
ja
cmp
sub
test
sti
movsl
push
iret
mov
outsb
xchg
sbb
loope
add
fdiv
fstps
in
mov
hlt
cmp
mov
xor
aad
fiaddl
jo
std
pop
sub
movsl
mov
daa
je
aad
mov
mov
and
and
or
dec
lods
mov
sti
rorb
push
inc
mov
mov
push
add
repz
inc
mov
xor
jg
cmpsb
dec
mov
test
jne
xchg
clc
rcrl
pushl
out
sbb
push
sub
jge
and
imul
pop
push
jb
das
mov
xlat
mov
testb
addr16
mov
pushf
xor
jnp
adc
enter
out
lret
sti
sub
push
sub
jnp
leave
test
cmp
inc
inc
pusha
xchg
lea
pop
jns
jp
js
scas
fldenv
mov
mov
loop
pop
cmp
mov
inc
faddl
std
insb
xor
movsb
pop
lock
push
lds
push
or
mov
jnp
shr
addr16
test
sbb
mov
sub
movsl
dec
leave
shll
addb
lret
std
jl
std
sub
lret
ret
lea
fisttps
std
and
pop
mov
bnd
xor
mov
adc
xor
cmp
mov
in
xchg
into
pop
dec
and
sbb
ja
aas
data16
je
mov
movsb
jnp
fsubs
mov
inc
adc
adc
mov
loop
dec
adc
in
out
or
loop
test
pop
stos
xor
xchg
dec
push
push
cmp
sbb
jle
pop
sub
repz
les
sub
adc
lods
aaa
mov
inc
cwtl
fs
sti
adc
sbb
out
sarl
xor
rcr
sarl
adc
repnz
push
mov
gs
inc
imul
xchg
mov
lahf
inc
inc
gs
mov
cmpsl
mov
imul
test
scas
shrl
mov
sahf
fistpl
fwait
out
in
jmp
inc
stc
cmp
test
scas
in
popl
cmp
nop
push
xor
or
in
arpl
nop
cmc
lcall
pop
sbb
loop
xor
mov
add
add
cwtl
cwtl
fisubl
jecxz
push
pop
mov
shrb
inc
fs
add
mov
rorl
push
out
dec
sub
add
adc
aad
lret
cld
jb
cld
adcl
push
insl
jae
pop
fldl
sub
push
sarl
sub
fcoml
cmp
es
ret
pop
rcr
mov
das
jp
push
add
xchg
sbb
mov
in
mov
stc
cwtl
scas
mov
rorl
sub
out
addl
int
fidivs
dec
mov
jl
push
lcall
mov
mov
cmp
mov
push
int3
mov
out
mov
clc
pop
cmp
repnz
pop
ja
jo
je
cltd
mov
into
lret
mov
sub
add
cmpsb
add
or
inc
iretw
test
shr
sub
ret
push
xchg
in
sti
dec
sub
mov
sbbb
cmp
jo
loope
add
push
dec
inc
subb
mov
loopne
xchg
jnp
or
loop
insl
into
ja
dec
out
push
jle
add
add
mov
cs
cmp
test
sub
inc
pop
sub
lock
test
cwtl
pop
ss
adc
and
stos
imul
add
callw
mov
sbb
adc
loopne
jl
fistpl
scas
adc
pop
xor
pusha
pop
jp
aaa
cmp
cmp
les
test
int
and
movsl
adc
cmp
imul
stos
aas
repnz
enter
add
dec
mov
addl
test
jno
xchg
fwait
push
ds
push
fs
and
or
push
xor
lcall
test
mov
mov
push
addr16
xchg
jne
xor
xor
outsb
in
call
cs
push
insl
je
add
pop
and
pusha
add
push
std
popa
out
iret
mov
dec
ret
and
xor
mov
add
repnz
mov
sub
adc
nop
fildll
or
popf
push
dec
fisttpll
mov
mov
sbb
das
inc
pop
out
xor
imul
add
sbb
mov
jno
insl
jne
push
jbe
mov
aas
movsb
dec
rcll
adc
rolb
pop
mov
push
jo
or
lret
mov
repz
and
push
jbe
in
testb
inc
je
sub
fcoml
jne
je
shlb
in
inc
dec
or
xchg
pop
int
push
mov
out
lret
fcompl
push
fmulp
dec
in
jmp
push
mov
movsl
and
ljmp
rolb
jbe
pop
ds
movhlps
xor
clc
xchg
mov
and
or
lock
and
mov
cmp
pop
cs
sahf
add
xchg
lret
inc
call
test
ss
pop
mov
outsb
int
dec
hlt
ss
jb
arpl
mov
mov
push
pop
mov
lods
dec
mov
test
fnsave
ja
xchg
fnstenv
sub
mov
and
cmp
mov
mov
push
lock
lea
std
cmp
loop
rcrb
lret
jp
loopne
add
movsb
out
jb
in
adc
mov
inc
cltd
scas
stos
and
fsubl
dec
int3
daa
popa
les
fisubl
sub
xor
mov
xor
andl
ss
mov
lock
or
or
out
mov
adc
adcl
push
push
push
xchg
lea
lds
mov
hlt
jle
adc
cmp
cld
inc
or
cwtl
cmp
add
loope
lcall
lcall
or
pop
jle
sub
sub
xlat
jno
sbb
lahf
insb
mov
pop
int
imul
repz
mov
adc
or
leave
sarl
addr16
roll
or
pop
mov
daa
sub
jecxz
add
adc
mov
cmp
xchg
div
push
jbe
cltd
jecxz
dec
int3
cltd
xor
cmpb
jmp
mov
movsl
jecxz
in
pusha
stos
or
lea
rcl
mulb
xchg
xchg
rcl
cwtl
or
push
dec
or
xor
or
out
int
cmpb
test
ficomps
out
cli
sbb
ljmp
mov
sbb
call
add
xor
cmp
test
nop
mov
testb
jae
and
loope
ljmp
dec
insb
mov
mov
sub
popa
jmp
andl
cmp
xchg
cmpl
and
pop
xor
pop
cmp
push
or
xchg
mov
cmp
ret
cmpsl
xchg
mov
push
insb
add
addr16
add
jnp
ljmp
inc
cmp
push
fs
test
hlt
mov
mov
ljmp
mov
mov
inc
push
xchg
int
inc
lock
std
or
xor
mov
out
dec
xlat
out
lds
movsb
and
ret
jae
adc
sbb
mov
add
loope
pushf
hlt
gs
cmpsl
movsb
aaa
ficoml
loope
mov
add
ss
xchg
ds
loop
outsl
mov
sub
das
movsl
fwait
jmp
ret
sub
aad
popl
or
mov
mov
mov
mov
or
xlat
in
addr16
pusha
gs
xor
add
and
test
fcoml
out
pop
lds
pusha
push
aaa
add
clc
jae
sub
pop
insl
lahf
lock
mov
lahf
addr16
inc
test
daa
int
xor
jl
xchg
dec
xor
sbb
scas
sub
mov
movsb
push
movsl
xor
mov
lock
pop
dec
cmp
cmc
cmp
ret
push
loope
adc
pop
jecxz
rorb
enter
mov
ss
jl
inc
inc
jnp
push
outsb
xor
inc
lea
test
pop
pop
adc
shlb
push
sub
jle
inc
xchg
cmpsb
repnz
cmpsb
imul
sbb
xor
bound
std
jecxz
movsb
das
inc
notb
jecxz
dec
cld
add
xor
mov
and
jg
add
sub
rcll
sub
enter
pop
pop
or
aad
pop
mov
mov
cli
out
cltd
pop
pop
push
adc
inc
add
mov
inc
daa
and
mov
add
push
pop
mov
mov
test
inc
movsl
mov
jl
push
repz
lock
sbb
jge
xchg
jnp
scas
mov
inc
fadds
jg
cld
dec
rcll
inc
adc
jo
inc
mov
fistl
dec
out
cmp
pop
xor
stc
fdivp
gs
cmp
sbb
sbb
shrb
push
push
ljmp
loop
and
stos
pop
test
outsb
and
fistpl
rclb
daa
cmp
ja
dec
mov
mov
std
shl
jp
push
mov
ficoms
int
sub
cmp
fsubrs
test
fcoms
sbb
out
scas
subl
repnz
test
fdivrs
add
test
ret
cmpb
sbb
into
pop
push
sub
push
lret
fbstp
adc
push
sti
jp
loope
cmpsb
jne
inc
stos
dec
inc
int
push
arpl
in
xchg
out
fimuls
inc
loop
loop
dec
mov
outsb
loope
push
aas
fnstsw
lahf
orb
fimull
jo
pusha
les
xor
mov
repz
mov
aam
imul
jbe
pop
jl
add
div
xor
std
xchg
sub
icebp
xor
jp
add
pop
cli
test
repnz
or
push
cmp
adc
add
xchg
scas
sbb
leave
pop
sbb
shlb
jg
push
adc
pop
jl
mov
movsl
out
xor
mov
cmp
rcl
inc
adc
dec
mov
pop
xchg
mov
sbb
ret
rol
add
scas
ja
push
in
call
add
jg
icebp
mov
inc
mov
inc
sub
and
aad
test
icebp
aas
js
fwait
popa
leave
add
add
dec
mov
cld
daa
xchg
clc
or
cwtl
daa
pop
subb
mov
jecxz
cmp
jp
xor
xchg
shll
ret
pushf
icebp
mov
xchg
nop
fwait
cltd
push
cmp
lds
cmp
jnp
cli
subb
imul
in
notb
ljmp
ljmp
cmp
push
je
xchg
inc
sti
ja
stc
aas
lret
iret
mov
jnp
inc
push
sub
mov
dec
mov
scas
pusha
inc
and
mov
rcrl
das
daa
jo
inc
repnz
arpl
cmp
jmp
xor
jno
sbb
decb
cli
push
push
adc
lret
cmp
test
push
mov
cmpsb
iret
repz
sub
xchg
mov
push
xchg
pmulhuw
dec
jle
mov
roll
movsb
cmp
inc
jo
or
loope
dec
or
cli
pusha
add
enter
lea
jmp
mov
insl
cwtl
movsb
mov
sub
movsl
mov
mov
cmc
repnz
jno
in
pop
hlt
aaa
fcomps
push
dec
push
cmp
and
call
sub
scas
or
sbb
stos
in
lods
mov
inc
out
sbb
repnz
lock
cmp
imul
filds
or
dec
jae
aam
jne
cmpsb
xor
jbe
mov
mov
inc
std
imul
jnp
and
es
mov
jecxz
cmc
popa
notb
aad
push
mov
sbb
dec
sbb
adc
mov
nop
or
adc
pop
test
inc
jg
sbbl
sti
pop
push
xchg
out
and
mov
repnz
das
fwait
aad
cmp
inc
push
inc
pop
lret
jmp
dec
push
cmp
mov
push
jge
test
jnp
push
inc
push
in
icebp
mov
andb
dec
popf
lret
adc
jb
cwtl
sbb
and
mov
add
iret
inc
lock
xchg
fistl
aam
jns
cmpsb
pop
out
mov
xchg
inc
lods
addl
ds
jge
gs
fchs
adc
jns
mov
shlb
lock
mov
xor
add
ficompl
loope
cli
das
ss
or
cmc
leave
xchg
lds
sub
out
xchg
in
or
mov
pop
test
push
pusha
insb
dec
sub
pop
sub
enter
xchg
sub
frstor
sbb
divps
out
loope
and
xchg
test
jnp
sbb
decb
mov
pusha
call
and
cltd
lret
mov
xchg
fs
dec
enter
dec
mov
test
mov
int3
push
xlat
sbb
clc
ss
mov
scas
jg
addr16
divl
fsubs
insb
rolb
pushl
addr16
sti
mov
cs
mov
mov
and
jnp
in
jp
loop
sub
insl
jge
scas
or
call
adc
aas
jle
out
inc
cmpsb
movsl
or
mov
mov
negl
arpl
sub
fs
sbb
divl
cli
movb
dec
lods
lret
mov
jle
loop
mov
test
scas
cs
cmp
rcrb
dec
std
xorl
cmp
inc
jmp
imul
mov
adc
nop
and
mov
cmp
push
mov
movsl
sub
rclb
dec
inc
xor
or
or
jl
je
and
addb
mov
jbe
jmp
mov
nop
adc
lahf
in
negl
out
leave
inc
ficoms
push
dec
pop
xchg
mov
xor
out
test
mov
js
xor
cs
aad
cmp
das
inc
mov
popf
nop
sarl
ljmp
jl
jl
mov
lcall
push
lret
cmp
jp
mov
mov
aam
pop
mov
dec
cmp
sbb
xchg
scas
dec
adc
xorl
arpl
frstor
mov
adc
jnp
nop
xor
dec
sarl
push
mov
add
scas
fiadds
adc
jmp
mov
jns
inc
ret
int3
movsl
push
insb
outsb
inc
jae
cmpsl
or
lcall
je
cmp
dec
mov
in
xchg
shl
inc
test
and
std
jb
jo
xor
sub
cli
adc
sbb
push
push
fwait
lea
adc
adc
sbb
mov
pop
enter
iret
mov
ja
fwait
rorb
fisubl
out
or
push
jl
in
es
mov
int
cli
inc
cs
mov
daa
aas
push
data16
inc
outsb
fs
sbb
pushf
jb
loopne
mov
stos
fimuls
push
int3
fisttps
push
into
out
inc
or
lret
adc
add
aas
movsl
jmp
shll
mov
sub
addb
gs
les
sub
xor
popa
mov
pop
ja
bound
test
jne
xchg
std
cwtl
lcall
pop
faddl
pop
gs
adc
push
arpl
fdivp
psubb
xchg
and
dec
pop
dec
jle
into
ds
sub
cs
xlat
loopne
cs
mov
cmp
insb
jge
call
cld
test
aas
push
pop
subl
sbb
stos
shll
xor
sub
mov
xchg
dec
mov
fidivs
add
aam
push
push
jae
push
pop
jge
jno
pop
adc
imul
sub
cmp
lret
push
xor
push
inc
or
cmp
pop
cmpsb
inc
pop
mov
xchg
adc
pop
repz
outsl
or
jae
mov
decl
pop
outsl
out
jns
xchg
out
or
pop
or
daa
int3
pop
jmp
jge
clc
and
and
mov
mov
jl
arpl
repnz
pop
or
sub
sti
push
lcall
mov
sub
dec
repnz
adc
cmp
call
mov
push
dec
sub
sbbb
sbb
mov
movsl
and
stos
xchg
pop
add
stos
mov
scas
and
or
scas
icebp
jo
scas
ss
mov
sub
gs
js
or
mov
xchg
and
jmp
mov
sbb
mov
das
pop
mov
cmc
or
mov
inc
fldt
out
repz
mov
cs
add
or
or
dec
inc
movsb
cwtl
out
cltd
pop
mulb
stos
stos
or
sbb
add
int
mov
arpl
jno
pop
mov
lds
sub
leave
jmp
rorb
sub
or
pop
test
or
testb
cwtl
add
inc
pop
out
push
loop
mov
jbe
sbb
xchg
loop
hlt
int3
jo
test
mov
dec
cli
pop
pop
stos
js
pop
push
pop
pop
add
mov
jnp
fs
jnp
pop
rcr
insb
dec
sarb
lahf
push
lock
nop
aad
sbb
or
sub
aas
sub
popf
pop
hlt
pop
cs
stc
xor
xor
sti
sub
mov
mov
fcoms
je
lcall
test
fildll
cmc
repz
popa
ds
mov
punpckhdq
push
fmull
out
inc
xchg
cmpsl
mov
lcall
into
popa
je
mov
or
iret
cli
cmpsb
or
jns
fstpt
mov
rclb
sbb
gs
sbb
or
out
adc
lcall
pushf
leave
enter
out
add
jge
aas
imul
sub
fucom
push
lahf
int
fs
and
and
cld
test
aad
jns
outsl
addr16
ds
filds
jg
push
mov
and
sahf
ds
inc
jmp
push
incl
mov
sub
icebp
in
xor
push
cltd
cmc
js
lret
mov
out
in
hlt
cld
loopne
add
xor
movsl
xor
scas
push
inc
or
mov
stc
ret
outsl
imul
sub
test
insl
in
push
out
in
repnz
mov
int
fwait
or
adc
mov
ja
aad
push
mov
mov
js
xor
adcb
xor
mov
jp
cmp
lds
pop
movsb
lcall
outsl
fildl
lret
sub
dec
sar
inc
es
mov
jne
lcall
push
mov
ret
push
add
fs
and
or
outsl
xor
pmulhw
push
xchg
data16
pop
mov
adcb
dec
and
mov
in
aam
dec
movsl
jmp
xchg
cmpsl
mov
lea
dec
out
pop
loop
scas
cltd
call
adc
ret
mov
cmp
lret
cmp
leave
stos
inc
dec
ss
cmp
and
mov
mov
lret
mov
out
push
cmp
push
pop
mov
out
and
cmpsb
push
call
cld
sti
add
enter
addr16
mov
pop
and
xlat
aas
fdivr
push
and
cmp
mov
xchg
shlb
pop
lods
mov
and
xchg
jno
iret
mov
fnsave
jmp
roll
mov
aas
ds
mov
mov
sub
pop
sub
push
fsubl
stos
adc
push
push
mov
xchg
sti
lods
xor
dec
hlt
jmp
mov
test
test
test
hlt
mov
rclb
dec
test
and
ret
jns
mov
sub
cmpsl
adc
mov
dec
dec
mov
sbb
push
dec
mov
mov
sahf
xor
inc
xor
mov
mov
mov
pop
and
push
mov
enter
xor
xchg
in
jo
dec
insl
inc
arpl
jb
xchg
xchg
daa
out
xor
cmc
push
scas
fnstsw
out
inc
push
loopne
pop
push
outsb
sub
pop
test
or
jno
sub
adc
pop
dec
sub
outsl
jae
xchg
repz
mov
fildl
push
aas
add
adc
inc
shlb
js
sub
nop
cmp
jbe
or
or
jo
cwtl
fsubl
out
adc
add
jp
jmp
push
loope
in
jle
xchg
call
sbb
insl
ss
stc
fs
dec
sub
sbb
jecxz
into
cltd
lcall
mov
es
ficomps
scas
ljmp
add
inc
out
ljmp
and
mov
adc
imul
aam
lret
call
jl
stos
or
mov
data16
addr16
adc
cwtl
es
sub
jg
test
mov
push
add
nop
jl
mov
adc
mov
mov
dec
cmp
ret
cld
mov
orl
int3
pop
or
in
ss
cs
mov
dec
cs
insl
pop
dec
mov
mov
lret
insb
scas
out
xlat
ljmp
test
mov
scas
and
mov
lock
pop
scas
pushf
fdivrl
mov
mov
or
mov
ljmp
shrb
adc
lock
push
sti
dec
ret
push
add
mov
out
or
pusha
mov
iret
or
mov
aaa
divl
adc
call
cmp
xor
mov
xor
mov
test
jbe
scas
lcall
and
cld
mov
ds
dec
adc
sub
xchg
dec
insl
push
mov
xor
sub
cmp
daa
dec
testb
jecxz
xor
pusha
popf
mov
test
mov
pop
adc
sub
lcallw
aam
dec
adc
adc
sarl
xchg
lods
ss
lea
shl
mov
pop
inc
lods
fs
inc
xchg
in
stc
pop
adc
add
mov
sbb
mov
icebp
add
test
cltd
ficoml
sahf
cmp
in
mov
xor
sub
add
dec
loope
push
out
jb
push
cmp
add
pushf
mull
addl
xchg
inc
lcall
jle
xchg
xchg
iret
cli
arpl
jge
dec
inc
enter
dec
pushf
fxch
gs
std
clc
cmp
roll
mov
adc
std
aaa
scas
out
scas
xchg
lret
or
in
adc
mov
sub
push
outsl
lds
dec
faddl
or
in
mov
pop
test
xchg
inc
aam
lret
pop
jnp
shrb
shrl
iret
add
clc
jmp
or
test
shlb
cmp
adc
into
comiss
mov
das
in
adc
sbb
jo
xchg
adc
mov
jb
sbb
test
ficoms
mov
adc
mov
pop
adc
sahf
popl
jb
and
ret
and
mov
mov
xchg
out
dec
push
cmp
shrl
pop
ja
int3
and
push
sahf
lcall
andl
cmp
and
inc
aad
mov
out
sub
add
cmpsb
pop
fistpll
push
mov
and
mov
gs
sahf
sub
xchg
cmpsl
ljmp
mov
lret
cmp
mov
lret
inc
les
cld
lds
xlat
or
push
jns
loopne
jp
pop
mov
cli
mov
or
jno
sub
xchg
cmp
sbb
rcrl
repz
mov
imul
sbb
and
xchg
mov
mov
xor
sub
out
dec
bound
loop
push
mov
xchg
xchg
cld
adc
popf
idivl
arpl
ja
mov
push
sbb
jnp
push
jge
inc
imul
add
mov
cmp
sub
xor
xor
rcll
push
mov
or
push
dec
jno
shll
jbe
cmc
outsb
adc
sub
and
scas
pop
push
add
xchg
jle
into
jp
sbb
test
and
cwtl
in
imul
and
loopne
sub
aad
repz
loopne
sbb
mov
sbb
out
das
and
fimull
mov
les
or
jmp
sarb
inc
or
repz
js
testb
leave
add
and
mov
shll
ret
mov
lds
mov
inc
inc
testb
fdivrs
addr16
dec
mov
lods
mov
mov
mov
shrb
icebp
jp
jb
pop
or
and
ret
and
jl
int3
inc
in
dec
jl
in
dec
pop
out
and
mov
sarl
ss
int
adc
mov
fnstenv
js
sub
enter
push
shlb
cmp
push
dec
pop
jns
ja
sbb
and
sti
mov
push
pop
or
dec
mov
jns
mov
stc
dec
rcll
pop
add
out
in
inc
negl
test
fs
outsl
jnp
or
push
int3
cmpsb
lret
ljmp
pop
cmp
or
rolb
or
sti
dec
jbe
hlt
call
or
rcrb
add
pop
fwait
or
lahf
data16
ja
dec
xchg
jge
xor
cmp
sahf
mov
enter
ss
lcall
lods
mov
bound
pop
movsl
and
cmp
dec
or
lcall
fs
jo
jecxz
mov
mov
das
cmp
in
jg
dec
cwtl
add
jae
std
pop
pusha
xchg
xor
inc
cld
push
inc
dec
in
nop
in
sbb
das
ret
paddsb
ret
stc
pop
push
dec
xchg
orb
mov
dec
ret
pusha
cs
aaa
inc
pop
stos
in
icebp
js
pop
sbb
icebp
push
shl
inc
lock
popa
pusha
cmp
sub
ret
data16
mov
fnstcw
stos
ficoms
repz
push
ret
xor
add
pop
mov
pop
pop
or
popf
pushf
imul
cmp
jnp
pop
in
lret
or
cmp
fistl
lahf
mov
sbb
dec
loop
push
call
add
xor
rcrl
outsb
xor
mov
mov
and
xor
jno
pop
decb
inc
dec
adc
lock
mov
add
adc
loopne
jle
movsl
mov
push
outsb
fiaddl
push
ss
xchg
ret
movsl
mov
movsb
push
test
aaa
lahf
xchg
loope
mov
mov
add
negb
sub
jo
out
iret
outsl
sbb
js
and
xor
cltd
mov
bound
sbb
jecxz
ret
out
cli
popf
xchg
cmpsb
xorl
pop
nop
jecxz
cmp
pop
push
das
xlat
aaa
inc
fldt
push
pop
icebp
movsb
insb
push
loop
fcmove
sbb
cmove
into
and
popa
adc
and
sub
ljmp
push
cwtl
push
je
sub
test
jnp
push
push
add
das
xor
fwait
bound
into
loope
out
inc
test
lods
add
rorb
mov
repnz
mov
jb
insb
shrb
ret
cli
or
sub
dec
jg
out
push
sbb
arpl
sbb
push
ret
inc
lock
out
pop
data16
xchg
sti
aas
add
push
push
or
cltd
dec
sub
sub
shlb
js
xor
test
xor
push
dec
loop
or
add
loopne
test
jne
push
sbb
int
or
addr16
outsb
enter
bound
movsb
enter
hlt
cmpsl
xchg
test
cmp
stos
sbb
push
pop
sarb
iret
push
pop
or
cmp
pop
out
push
cmp
repnz
test
and
xor
aad
in
add
jno
jns
xchg
orb
and
leave
pop
lods
or
cli
sub
sti
data16
jp
xchg
fnstenv
test
xchg
call
int
or
push
icebp
test
and
push
xor
nop
add
sub
inc
pop
cmpb
dec
dec
dec
insl
je
push
mov
add
mov
mov
push
jp
mov
popa
in
or
inc
cmp
aad
fs
fistl
pop
xor
mov
stos
dec
imul
shll
sbb
addl
fstpl
bound
jb
lods
jno
pop
stc
out
or
lahf
inc
loop
add
cmpsl
jmp
test
cmp
aam
les
mov
push
call
xchg
fiaddl
jecxz
and
xchg
stos
clc
inc
popa
adc
ret
cmp
inc
roll
push
and
call
mov
insl
test
lret
mov
data16
std
in
pop
loope
push
xchg
push
xchg
mov
add
jbe
adc
pop
sub
adc
mov
jo
shl
das
out
adc
inc
sahf
inc
dec
les
shlb
movsl
sbb
push
xor
push
cmc
ljmp
mov
push
cmp
jge
adc
xor
popa
adc
leave
subb
inc
std
jns
in
sbb
shll
push
cld
dec
js
scas
inc
adcl
jae
adc
ret
popf
jns
aam
sub
sbb
push
adc
jmp
ret
je
loop
out
rclb
sub
nop
aam
and
mov
push
sbb
and
movsb
frndint
push
push
cld
inc
inc
hlt
fldenv
adc
sbb
in
fs
clc
inc
in
clc
shrb
jmp
hlt
cmpsl
sub
in
jmp
es
cmp
push
or
jmp
inc
lcall
mov
cmp
sub
sbbl
push
out
pop
jbe
movsb
mov
ss
lds
xor
shrb
fld
popa
xor
test
inc
push
pop
or
adc
cmp
xor
cmpsb
aad
pop
mov
mov
ss
push
clc
loope
cli
cmp
lahf
shlb
pop
ss
xchg
mov
pushf
jmp
imul
mov
pop
mov
inc
dec
push
dec
dec
jb
mov
mov
pop
mov
inc
icebp
jle
dec
or
inc
mov
xchg
inc
in
sti
hlt
out
inc
dec
jne
pusha
adc
dec
gs
into
mov
adc
cli
pop
movsb
pop
adc
cmp
paddq
insb
xchg
std
shrb
pop
inc
fwait
push
sub
orb
idivl
aam
aam
dec
stos
and
cltd
sbb
daa
dec
in
rcrl
js
sub
and
inc
stc
cmp
inc
cmp
push
xchg
sbb
adc
mov
aaa
popa
frstor
ds
mov
gs
sti
and
imul
gs
and
scas
es
mov
das
push
xorl
sbb
push
popf
gs
mov
repz
mov
clc
dec
jecxz
lea
cmp
shlb
dec
lahf
jmp
test
xor
xchg
and
cwtl
sarl
shrl
int3
mov
mov
or
add
insb
daa
cwtl
test
adc
call
or
dec
or
or
out
cmp
mov
xchg
jp
or
adc
mov
arpl
push
flds
mov
in
mov
leave
repz
pop
cmp
adc
out
in
int3
sub
xor
xor
popa
in
pop
dec
out
orb
data16
xor
xor
adc
std
lock
pop
jmp
mov
aad
std
rcrb
out
dec
jecxz
and
mov
bsf
push
jnp
andb
and
pop
mov
and
icebp
sbb
jge
push
incl
out
xor
aam
icebp
sbb
outsb
aaa
mov
pop
loopne
adc
shll
mov
icebp
mov
cmpsl
or
rcr
push
inc
push
or
imul
pushfw
cmp
mov
or
dec
xchg
mov
mov
daa
test
mov
jge
out
hlt
sbb
mov
stc
jmp
or
mov
dec
das
testl
fsubr
lahf
pop
xchg
xchg
addr16
aad
int3
or
xor
adc
mov
push
mov
lret
jmp
push
push
sarb
push
sarl
loopne
push
mov
rcrl
ljmp
iret
lcall
mov
ds
fwait
adc
xor
aaa
insl
orl
sub
scas
addl
incl
loop
jecxz
movsl
add
fsub
cmp
or
flds
xlat
fcompl
xchg
in
jle
dec
mov
outsl
inc
mov
mov
jge
addb
call
bound
cmp
cmpsb
test
jl
in
mov
mov
testl
lahf
pop
cmc
notb
pop
adc
sub
mov
sub
sub
je
jae
mov
hlt
lret
push
js
fmulp
call
aam
jmp
imul
mov
icebp
loope
in
add
out
adc
and
sti
into
lds
ret
enter
xchg
add
push
push
mov
in
gs
xchg
stc
inc
test
mov
xchg
lods
pushf
and
jmp
jge
fstl
jp
mov
test
sub
scas
or
lret
push
cmp
outsb
add
test
cmpsb
mov
cmp
or
cmp
fidivrl
sbb
mov
push
mov
jg
lock
inc
pop
shl
cmp
cli
jno
pop
xlat
mov
inc
out
ret
subb
pop
sub
mov
inc
sbb
pop
xor
ret
or
mov
pandn
leave
mov
dec
xlat
xor
pop
les
mov
jbe
imul
aam
jl
cmp
sub
mov
xor
iret
pop
pop
jle
fldt
inc
test
push
pop
mov
mov
cwtl
lds
outsl
mov
cmc
inc
stos
adc
xchg
sar
notl
jae
pop
jge
test
gs
mov
push
push
mov
outsb
cmp
xchg
inc
inc
sbb
jp
les
cmp
pusha
pop
add
ret
addr16
adc
and
cmp
scas
shrl
hlt
inc
ret
sub
loop
hlt
sbb
test
gs
jp
pop
xor
pop
jl
sbb
xchg
fwait
loop
ss
ds
xlat
push
cmp
cmc
es
dec
xor
mov
pop
adc
or
enter
or
fistl
cli
inc
xor
ret
xor
leave
mov
pop
mov
imul
mov
outsl
or
loopne
scas
inc
mov
jl
dec
fsubl
cltd
adc
inc
fdivr
lods
and
imul
xchg
and
loop
sahf
jge
rcrl
into
loop
jae
dec
adc
mov
movsb
jle
jno
aad
pop
push
outsl
mov
movsb
pop
jne
lods
je
mov
fildl
imul
cmc
imul
push
adc
sub
jo
mov
adc
mov
mov
xchg
add
outsb
adc
cmp
ss
push
fisubrs
mov
inc
lods
movsl
xorb
pop
cmc
in
fistpll
lods
out
or
aas
adc
cmpsb
ss
imul
rcl
jo
cmpl
pop
sbb
cwtl
fwait
imul
cli
jl
dec
inc
xchg
fsubrs
out
mov
out
or
xchg
cmpsb
in
in
leave
inc
lahf
dec
std
xchg
std
or
imul
fadds
and
xchg
xor
js
xchg
cmp
movsb
cmp
jne
mov
mov
inc
mov
mov
push
fcmove
xor
mov
add
mov
and
scas
cmp
fists
mov
inc
add
sub
and
jo
mov
sub
cmpsb
movsl
inc
daa
je
sub
push
es
enter
push
sbb
call
arpl
ja
xchg
xchg
adc
loope
inc
xchg
and
shr
cmpsl
fsubrl
mov
ret
adc
dec
fsub
mov
sbb
ds
movsl
fsubr
xchg
popf
push
xchg
or
mov
leave
jecxz
popf
das
mov
inc
mov
mov
movsb
stos
pop
fwait
sub
dec
sbb
out
mov
jle
aaa
nop
cmpsl
in
das
popa
aaa
sbb
cmp
inc
fcmovne
ret
mov
mov
rcll
xor
hlt
jmp
xchg
loop
jae
and
scas
add
or
das
in
cmc
cld
mov
xor
sahf
cmpsb
push
cmpsb
mov
nop
xchg
mov
jo
stos
xor
test
cmp
loopne
incb
push
push
fisubrl
push
jmp
stc
les
aam
mov
xchg
daa
inc
jo
repnz
sbb
dec
mov
pop
ret
pusha
ljmp
dec
jmp
xor
shlb
cmp
das
pop
mov
ret
mov
fbstp
inc
fmulp
xchg
inc
insl
enter
mov
gs
sti
inc
test
jno
inc
mov
mov
cmpsb
mov
jge
inc
mov
in
push
push
sarb
mov
xor
ret
push
stos
pop
jns
mov
fdivrp
add
sbb
sub
call
out
jnp
jo
shl
ret
cmpsl
push
pop
and
js
cmp
pop
mov
sub
rcr
jb
push
pop
jbe
xor
pop
and
xchg
push
aad
add
jo
test
adc
jg
cmp
push
sbb
jecxz
sbb
cmpsb
mov
loop
xor
jle
cmpl
arpl
jecxz
pop
jmp
scas
pop
fldenv
enter
pop
or
pop
fldt
and
cwtl
xchg
icebp
je
out
sub
mov
das
sbb
mov
sbb
push
xchg
add
mov
inc
adc
xorb
repnz
mov
xchg
sbb
sbb
roll
inc
in
scas
outsl
aaa
push
mov
or
dec
push
jecxz
adc
and
push
sbb
sub
lea
pop
stos
inc
cmp
xor
imul
cmp
mov
daa
and
push
out
add
cwtl
cwtl
pop
ret
pop
sub
cmp
pop
add
test
outsl
daa
fs
inc
js
enter
or
pop
inc
pop
or
push
call
cmpsl
loop
outsl
add
loopne
mov
fnsave
cld
cmpsb
inc
repz
outsl
call
pop
adc
push
sbb
push
sbb
in
inc
mov
xchg
cs
sub
cmpsl
mov
jne
test
stos
fistps
xor
mov
dec
cwtl
xchg
mov
fmull
inc
cmp
dec
cmc
iret
out
sub
xchg
mov
ljmp
pop
loop
push
hlt
dec
lret
or
test
loopne
push
rcrl
xor
ret
and
stc
ja
shll
stos
cmp
dec
dec
pusha
xlat
jne
lods
aad
mov
pop
aam
and
add
xchg
rolb
or
fsubl
scas
dec
test
das
das
lods
xorb
pop
ja
stos
mov
add
xchg
imul
adc
sbb
add
dec
cwtl
push
pop
sbb
cmc
bnd
jge
insb
xor
negl
dec
lods
fisubs
dec
sub
adc
das
adc
push
or
or
sub
pop
push
lea
add
and
mov
popa
js
ds
mov
das
je
into
jbe
out
mov
es
jb
les
inc
lds
cwtl
xchg
cmp
add
mov
imul
fdivrs
into
out
aam
mov
inc
dec
cbtw
xor
mov
mov
jl
push
movsl
lods
hlt
dec
out
outsl
out
pushf
cltd
mov
ss
mov
jo
int3
mov
bound
mov
ficoml
mov
pusha
lods
sbb
in
repz
push
push
mov
pop
test
or
stos
mov
inc
cmp
cmp
adc
jb
sub
cwtl
push
lds
std
icebp
jl
dec
fldenv
jecxz
sub
adcl
lods
adc
sub
addb
repnz
lret
fmull
sub
pop
in
ret
mov
pop
mov
dec
xchg
dec
insb
xorl
movsb
outsl
adc
loopne
clc
cmpsl
jge
xor
pop
sub
sub
dec
scas
fmull
xchg
mov
nop
xchg
sub
or
adc
dec
fiaddl
aam
jbe
xchg
mov
out
stos
pop
mov
inc
pusha
push
mov
movsb
xchg
dec
and
sub
repnz
cmp
mov
adc
icebp
xchg
add
movsb
push
stc
mov
out
cmp
lods
outsl
scas
xorb
mov
dec
in
fildll
in
out
inc
jle
push
lret
and
pop
std
sbb
xchg
loope
mov
out
test
push
outsl
dec
jmp
jnp
mov
jmp
repnz
push
lods
arpl
and
sub
out
adc
loop
aaa
inc
dec
mov
in
inc
cmp
sarb
and
mov
aaa
sub
jp
lea
mov
shrb
add
push
faddl
repnz
aad
xchg
pop
pop
push
xchg
shll
mov
std
push
test
pop
push
inc
push
adc
shl
movsl
es
cmp
fcomps
cli
xchg
mulb
sub
insb
insl
icebp
imul
hlt
or
xor
incl
jne
out
xchg
sub
push
jmp
stos
movsl
ljmp
mov
inc
loope
pop
enter
pop
fistpll
sub
cmp
cmp
cli
ret
cmp
leave
cmp
scas
or
xor
enter
ds
mov
outsb
pop
popf
jnp
incb
jg
cmpsl
shrb
pop
ljmp
push
dec
pop
rcr
cmp
out
ret
pop
dec
push
stc
and
stc
shrl
mov
fnsave
dec
and
or
push
sub
mov
push
test
add
out
test
cmpb
xorl
sub
xor
adc
jle
outsl
stos
and
lock
and
insl
into
mov
xchg
xor
fwait
sbb
insb
shrb
dec
packssdw
push
pop
call
mov
and
sub
sub
test
xor
clc
lods
and
cwtl
xor
or
mov
std
pop
outsb
dec
push
icebp
aas
xchg
add
xor
in
pop
sub
pop
imul
scas
shrl
xchg
in
bnd
or
int3
inc
mov
sbb
cmpsb
xor
or
call
ret
sar
out
xor
add
fs
popa
mov
sbb
and
shll
push
outsl
cld
mov
in
scas
jne
je
in
call
dec
dec
lods
mov
out
or
xchg
daa
test
mov
fiadds
xor
xlat
dec
data16
mov
lods
cmp
pushf
int3
or
in
jbe
inc
mov
bound
xchg
data16
inc
cmp
and
and
in
outsb
xorl
adc
shrb
or
mov
je
mov
sbb
outsb
xor
cwtl
arpl
fstl
dec
icebp
xor
push
ja
imul
aas
ret
mov
loopne
pusha
and
lods
sub
add
push
push
aad
repnz
sub
idivb
fmulp
in
sub
mov
jecxz
mov
fsubs
xor
xor
enter
lea
movl
xchg
imul
add
cmp
mov
inc
sub
push
test
add
roll
jmp
icebp
sub
lcall
shr
xchg
aam
call
cltd
push
inc
cmp
aaa
aad
pop
stos
inc
pop
js
mov
bnd
mov
xchg
ss
gs
lahf
or
cld
push
out
fdivl
int3
xor
sar
arpl
adc
xchg
jmp
es
mov
in
into
ds
cmp
or
iret
xchg
xor
les
inc
jnp
jecxz
sbb
push
sbb
bound
int3
jne
lahf
jb
xchg
pop
xchg
inc
into
xor
inc
inc
in
scas
cwtl
push
xor
fcmovnbe
inc
sub
popa
add
jmp
sti
movsl
jmp
add
imul
aam
pop
and
inc
in
or
sbb
pop
ljmp
repnz
sbb
sub
lods
inc
xlat
dec
fcomps
repz
jp
cli
sbbl
lret
stos
fdivrp
in
daa
dec
mov
xchg
add
mov
xchg
notb
dec
pop
xchg
out
fdivr
rcrb
sub
jmp
ja
mov
cltd
push
mov
lret
adc
mov
and
and
pop
jp
cmp
jle
sti
mov
xchg
stos
pop
out
std
inc
and
sub
popf
cmc
int
pop
je
fisubs
pop
cmp
add
pop
lock
fistps
xor
shrb
inc
out
les
shl
inc
ret
xchg
je
mov
lret
insl
jecxz
sbb
popf
cmp
and
pop
fwait
lcall
movsl
lahf
xchg
mov
mov
popf
cmp
int3
stos
scas
pop
in
insl
sub
test
fistps
je
fisubs
rolb
sbb
sbb
mov
push
les
nop
adcb
dec
xchg
pusha
jae
movl
cmpsb
pushl
dec
rcll
inc
hlt
sub
sub
mov
loopne
pop
mov
adc
popf
and
notl
xchg
in
fwait
dec
lea
shrl
mov
insl
sub
mov
out
mov
test
scas
aas
fsubrp
mov
jmp
push
mov
pop
inc
push
mov
insb
iret
and
js
or
pop
lret
loopne
jmp
or
add
xlat
sub
orl
inc
insb
imul
pop
lods
arpl
xchg
flds
inc
dec
les
push
cwtl
cwtl
mov
sbb
adc
insb
xor
sub
stos
cmpsl
jle
pop
adc
lcall
lods
pop
ljmp
push
fistl
or
in
dec
sub
pop
pop
jle
ja
fildll
xor
cld
mov
in
lahf
pop
shll
aad
sahf
mov
jl
sub
test
insl
inc
sub
add
xchg
ret
cmp
or
aam
xor
cmpsl
testl
pop
cmp
dec
xor
sbb
bound
enter
xchg
dec
adc
adc
pop
cmp
jg
insl
xor
movsb
adc
dec
pop
or
dec
or
mov
mov
call
jecxz
sbb
repnz
rclb
sbb
jbe
sub
fistpl
cmp
cmp
mov
jns
fisttpll
scas
mov
jmp
cmp
in
addr16
pop
in
cmp
pop
jmp
lea
cmp
jg
lods
jp
sub
mov
adc
mov
jl
call
icebp
lea
add
sbb
adc
sbb
fldt
mov
pop
ja
push
xorb
cmp
mov
pop
clc
mov
sbb
xchg
mov
test
push
cmpsb
hlt
mov
pop
movsb
dec
aas
xchg
jae
push
scas
dec
mov
mov
dec
xor
dec
mov
dec
pop
sbb
add
cltd
mov
dec
mov
test
inc
into
xor
and
dec
mov
sub
mov
inc
sbb
ret
cmp
jmp
xor
ljmp
jl
out
loop
lahf
ja
jbe
into
movsl
adc
in
in
dec
dec
mov
test
push
popf
sub
scas
jae
cmp
jcxz
xor
dec
sbbb
sbb
mov
in
dec
imul
jbe
cwtl
and
push
add
and
hlt
xorb
dec
pushf
test
xchg
adc
push
insb
into
fisubl
mov
dec
mov
shlb
adc
sub
mov
sub
outsl
std
sub
dec
rorl
test
jo
add
push
das
and
push
xor
xchg
mov
or
or
jb
lahf
stos
daa
pop
fisubrs
xor
pop
pop
shl
mov
inc
adc
inc
addr16
scas
fldl
nop
jecxz
dec
fcmovnu
push
inc
rolb
push
sub
fstl
insb
imul
add
rcrb
cmc
int3
push
clc
out
in
add
in
lahf
lcall
into
jge
push
jnp
and
dec
xchg
dec
sub
cli
ja
xchg
insl
sbb
mov
cmc
jbe
scas
xor
mov
nop
lea
pop
push
js
cmpb
fiaddl
push
inc
sbb
fisubrl
enter
popa
cmp
and
xor
cmp
add
pop
fnstsw
aam
sahf
cmp
mov
and
cmp
mov
and
cmp
sub
iret
scas
sbb
lret
cwtl
lods
fcoms
push
push
int3
pop
push
les
inc
aam
fwait
lods
out
lret
mov
jge
sub
jno
gs
cmpsl
sbb
mov
jb
jns
outsl
pop
mov
test
sbb
mov
pop
iret
mov
icebp
jns
rclb
mov
outsl
int3
push
sbb
push
sub
mov
adc
jb
xchg
mov
loopne
scas
lods
arpl
dec
adc
mull
xchg
and
lods
mov
cld
out
xchg
xor
sub
and
pop
fcomip
or
mov
xor
or
jnp
sub
out
pushf
hlt
or
negb
ror
add
stos
inc
call
mov
jne
sbb
fucomi
mov
jg
mov
mov
call
cwtl
ss
and
rorl
lcall
jp
dec
jg
das
sub
leave
or
js
rolb
sbb
cmp
xchg
cmp
loope
jne
imul
testb
addl
push
idiv
mov
jecxz
jbe
mov
sub
fisttpll
lods
cmp
andb
jp
ret
subb
cmp
outsl
add
mov
sub
out
mov
lods
mov
cs
xchg
xchg
sub
jge
push
gs
xlat
jg
jo
inc
std
sbb
adc
cmc
in
mov
int
outsb
adc
adc
movsl
loope
mov
cltd
cld
mov
mov
hlt
dec
sti
jg
iret
mov
loop
push
pushf
fchs
xchg
sbb
cmp
jmp
mov
int
mov
xchg
aas
out
fs
push
in
hlt
mov
aam
std
das
mov
lahf
sbb
rcrl
pop
dec
mov
push
jne
xor
or
cld
and
mov
pop
mov
call
jecxz
shlb
sbbb
aam
mov
xchg
or
stos
cli
sub
andb
cmp
sub
pop
xlat
imul
addr16
pop
add
in
mov
lret
inc
and
lahf
orb
mov
cmp
movsb
arpl
jb
jmp
sub
and
and
movsl
push
dec
enter
xchg
dec
inc
mov
jl
lods
lahf
add
jge
push
inc
push
int3
pop
mov
cmp
shrb
sbb
pop
pop
inc
rorb
insl
leave
cmp
cld
roll
mov
jae
enter
insl
dec
notb
or
xchg
imul
enter
sub
push
mov
test
pushf
sub
fcompl
jno
ret
xor
mov
jle
std
adc
sbb
cltd
push
mov
cmc
sti
xchg
js
jge
cmpsb
sarb
or
jp
fcoms
mov
push
or
cltd
leave
mov
xchg
mov
add
cli
xchg
jg
xchg
add
gs
add
adc
dec
jle
loop
movsb
js
stos
adc
lcall
mov
pop
xchg
outsb
sub
in
xorps
inc
inc
inc
rorl
or
sti
shrb
mov
pop
pop
clc
scas
test
nop
aaa
mov
mov
xchg
pop
mov
mov
sub
sbb
jae
fisubrs
adc
mov
adc
das
and
scas
push
hlt
or
jb
fdivs
rorl
sub
lret
dec
add
xorb
into
xor
js
mov
scas
adc
or
jl
jg
popa
xor
xlat
xor
push
fdivp
ja
mov
rolb
push
pushf
jo
mov
roll
adc
arpl
sarl
push
jb
movsb
arpl
push
rcr
out
mov
sub
hlt
in
in
push
inc
cmp
and
fidivs
rorb
loope
inc
movsb
fwait
pusha
xchg
push
add
xchg
scas
pop
xchg
mov
hlt
xchg
popf
push
pop
jecxz
ds
inc
cmp
xchg
insb
jmp
push
xor
iret
loopne
xor
mov
pushf
loopne
mov
sahf
mov
repnz
xchg
adc
enter
push
scas
xchg
inc
pusha
mov
xchg
repnz
xchg
or
and
inc
inc
inc
arpl
mov
mov
cmp
std
or
xchg
ds
out
dec
push
movsb
sub
icebp
out
cltd
adc
add
mov
into
int3
push
negl
inc
dec
js
or
inc
xchg
stos
hlt
je
ja
outsl
lret
imul
gs
mov
popa
and
test
popf
stos
jbe
outsb
hlt
mov
mov
and
cld
movsl
pop
rorb
inc
inc
stc
push
neg
inc
pop
jnp
outsl
js
sti
pop
cmpl
and
push
daa
xor
and
pop
and
dec
cmp
ficoml
inc
xor
icebp
lret
out
fdivrl
mov
lds
fmull
push
jno
fstps
sub
xor
gs
cmp
or
mov
addr16
dec
movsl
inc
in
icebp
fistl
lret
out
and
fldcw
in
test
xchg
fsub
sbb
aaa
das
out
into
imul
jno
psadbw
scas
clc
jp
cmc
push
jmp
push
sbb
enter
jp
pop
ret
add
or
jns
cwtl
push
icebp
adc
daa
mov
mov
xor
fcoms
negb
push
and
iret
dec
test
arpl
mov
pop
push
aas
mov
lret
ret
lock
out
shrb
mov
add
mov
mov
and
outsb
xor
jno
or
adc
sbb
sub
sbb
push
dec
icebp
add
lahf
ret
es
or
rcll
pop
inc
lock
loopne
mov
add
xchg
add
dec
into
cmp
push
xchg
cmp
and
adc
jecxz
pushf
aad
out
dec
or
xor
sub
inc
jg
shll
sbb
adc
xchg
mov
sbb
stc
inc
xchg
cmp
dec
mov
hlt
xchg
test
lods
or
and
decb
movsl
inc
imul
jg
sbb
push
stc
gs
fwait
popf
negb
lahf
sub
sub
xor
pop
cmovae
fs
sub
sbb
add
xor
cmp
mov
cli
dec
out
loope
js
data16
popf
mov
jl
pop
cmc
or
mov
push
into
mov
into
out
add
mov
or
loopne
repz
pop
lcall
std
negl
fstpt
adc
fistpll
popf
repnz
and
jge
xor
jns
push
add
aam
jbe
jnp
iret
jns
jecxz
scas
sbb
xor
xchg
nop
gs
add
stos
out
and
je
pop
imul
aad
jo
in
inc
negb
cmp
xchg
repnz
lods
ss
or
test
mov
push
aaa
mov
xchg
dec
or
dec
in
das
roll
sti
push
dec
mov
pop
or
lods
cmp
adc
data16
cmp
adc
jae
ret
mov
repnz
ret
test
insl
es
cltd
pop
or
fldenv
loop
pop
call
cltd
stos
les
xchg
jae
pusha
sti
test
ljmp
mov
std
fsubrs
push
movsb
sub
clc
stos
sub
shl
mov
xchg
and
sbb
jae
xchg
dec
cmovae
mov
js
xchg
scas
adc
pusha
imul
xor
ja
data16
inc
movsb
xor
fsubrl
outsb
std
mov
and
push
sbb
inc
xor
ficoms
and
or
push
pusha
push
mov
pop
push
push
pop
add
sahf
movsl
shl
out
cs
insl
cmc
mov
int3
pop
pusha
test
mov
mov
push
jne
cmp
xchg
shlb
cli
dec
push
sub
push
pusha
push
dec
adc
pop
int3
mov
mov
push
scas
cmpsl
add
pop
pop
jbe
je
stos
add
arpl
movsl
inc
fsubr
jo
out
fwait
pop
dec
push
cmp
jnp
jl
adc
push
dec
ud0
push
popa
pop
lss
xor
fcmovu
xchg
sub
jp
sti
xor
pop
dec
xchg
or
test
pusha
mul
inc
popa
dec
ficoml
and
pop
mov
push
mov
fldcw
xor
int
jmp
and
adc
xchg
aam
jmp
lods
jle
push
out
mov
xor
in
and
xor
subb
xor
xchg
xor
mov
jb
ja
pushf
movsb
or
icebp
js
js
repz
lods
scas
push
mov
repz
cmpsb
adc
loopne
xchg
xor
jnp
xchg
lods
xchg
jmp
fsubl
pop
pop
push
stos
adc
out
pop
inc
dec
jnp
ror
insl
adcl
mov
pop
aas
jmp
jge
cmp
dec
xchg
outsb
popf
xchg
cmp
imul
enter
outsl
sahf
gs
sbb
iret
in
push
sbb
es
lods
inc
loopne
or
mov
jg
mov
mov
pop
mov
push
cmp
or
push
jp
pop
xchg
jle
into
daa
sub
cmc
xchg
lds
stos
dec
or
scas
inc
scas
xchg
aam
push
or
insl
scas
subb
jmp
pop
loop
add
mov
sub
mov
add
push
cmc
insl
ret
dec
jns
mov
inc
imul
xorl
inc
outsb
xchg
ja
and
das
cmp
pop
shlb
lret
xchg
movsl
das
sbb
pop
sahf
rcll
mov
mov
or
ror
les
sub
sbb
add
jbe
outsb
das
sbb
jb
frstor
mov
test
rclb
rorb
fistpl
inc
and
clc
test
jecxz
je
aad
sbbl
dec
ret
mov
data16
mov
sub
call
sti
lods
mov
stos
pop
insl
pop
push
dec
adc
mov
jp
or
in
aaa
repnz
cmc
pop
cmp
mov
call
jae
inc
dec
lahf
pushf
xchg
cmp
cltd
or
stos
add
xor
lcall
in
bnd
test
daa
cli
scas
dec
jbe
hlt
sbb
pop
icebp
xor
stos
js
scas
and
or
push
xchg
test
nop
pop
mov
mov
push
fs
out
dec
test
mov
ds
sbb
cmp
mov
into
gs
sahf
jbe
repz
inc
xchg
xor
jg
push
cmp
xlat
movsl
xor
out
cmp
push
movsb
mov
lods
repnz
mov
cmp
jne
push
jae
jae
jo
aaa
fistl
push
sub
jp
cvttps2pi
out
xorl
or
pop
lcall
test
and
cmp
decb
pop
outsl
dec
cmp
jmp
or
jns
push
nop
clc
stos
add
mov
adc
pop
dec
cmc
add
nop
mov
dec
mov
mov
icebp
pushaw
or
pushl
fwait
lods
scas
pop
shrb
cmp
pusha
xorb
jg
push
jle
aam
inc
mov
popf
shrl
xchg
push
xchg
vfrczss
mov
inc
cwtl
pop
fcmovu
fsub
xchg
lcall
inc
mov
shrb
shr
nop
push
push
or
test
cmp
sahf
add
fldcw
and
outsl
xchg
test
cs
jb,pt
mov
idivb
xor
xchg
or
dec
inc
repz
movsb
xor
testb
push
mov
test
mov
mov
xor
test
push
and
js
dec
inc
pop
test
fnstcw
rolb
gs
push
jmp
mov
sbb
adc
fs
inc
jg
clc
in
ret
push
push
cwtl
mov
add
xor
fildll
pop
mov
pop
jmp
inc
movsl
pop
test
in
loopne
gs
popf
test
shrb
dec
fimull
jmp
pop
insl
popa
dec
or
ljmp
addb
or
scas
loope
xor
cmpb
dec
cwtd
xor
cmp
mov
sbb
adc
pop
sub
mov
jp
jo
daa
ljmp
mov
out
jecxz
inc
sub
pushl
call
repz
sbb
push
repnz
and
into
pop
xchg
ljmp
leave
inc
lret
stos
dec
add
sti
out
dec
ljmp
bnd
push
out
incl
mov
cli
or
xchg
popa
push
dec
lods
dec
cmpsl
cmpb
mov
repz
shrb
mov
lcall
push
mov
pop
aaa
sbb
movsb
ja
insb
gs
rcll
in
pop
jnp
jecxz
popa
mov
daa
inc
addr16
addr16
add
mov
das
cmp
add
loopne
and
pop
push
jge
lods
std
sysexit
or
rcl
mov
mov
jbe
movsl
lea
insl
imul
repnz
lcall
shrl
mov
scas
jecxz
cmp
mov
enter
sub
clc
jb
xor
jbe
sub
dec
mov
das
leave
fsubrl
outsb
insl
pop
out
pop
adc
loope
or
lods
push
or
cmc
repnz
sahf
fcomps
cmc
pop
iret
dec
and
xor
lods
lock
out
add
sbb
fwait
mov
lock
das
scas
mov
imul
sub
cltd
pop
xor
add
in
push
sub
pop
fwait
lock
insb
das
pop
push
sub
pop
fistpl
sti
cmpl
cwtl
jg
fwait
out
gs
xchg
mov
and
out
adc
hlt
inc
insl
scas
bound
dec
cmpl
fsubrp
leave
and
std
dec
jl
and
add
sbb
push
inc
les
outsl
clc
jb
mov
mov
mov
sbb
jno
inc
sub
mov
sti
sbb
pop
shrl
pop
ret
jns
fiadds
mov
and
test
in
shll
cmp
jle
cld
xor
pop
add
inc
or
mov
addr16
call
mov
jl
xor
scas
sbb
cld
stos
inc
loop
daa
xor
retw
and
lods
push
and
mov
mov
push
pop
scas
cmc
mov
lods
ret
jbe
lcall
cmpsl
test
inc
inc
arpl
mov
shrl
bound
sti
sbb
les
popa
xor
sbb
fcmovb
adc
xor
imul
test
out
mov
idivb
xchg
js
arpl
rcrl
inc
aas
pop
cmp
lock
xor
in
out
into
or
dec
adc
lret
mov
push
xor
mov
sbb
popf
lods
add
int3
adc
mov
jp
inc
ror
jo
lds
mov
je
in
xor
mov
mov
inc
xchg
xchg
mov
dec
mov
bnd
mov
push
sub
adc
mov
fstpl
add
or
and
add
mov
dec
cltd
int
bound
out
movsl
xchg
push
dec
mov
int
mov
inc
cs
sub
mov
push
xor
int
or
cmp
adc
scas
movsb
jae
outsl
pop
repz
xchg
test
popf
mov
lret
sbb
movsb
mov
push
mov
mov
mov
dec
ds
mov
fsubl
in
fdiv
jg
jo
inc
pop
loop
mov
mov
push
inc
scas
push
mov
int
pop
outsl
mov
lret
xor
inc
xor
dec
inc
cmc
fisttps
call
rcl
imul
incb
in
mov
movsl
xchg
sbb
inc
adc
adc
ss
notb
sub
aaa
push
cmp
inc
mov
add
inc
xor
lods
pop
add
movsl
nop
daa
add
add
jns
dec
in
inc
jmp
pushf
das
xchg
mov
loope
cmp
push
sbb
cmp
xorb
hlt
repz
pop
add
in
outsl
cs
int3
mov
cmp
xchg
enter
jmp
std
aaa
pop
hlt
jb
inc
nop
testl
push
loopne
mov
sub
dec
out
push
repz
les
int3
xor
loope
popa
add
sbb
and
jle
movsl
jmp
jg
stos
int
sub
scas
aad
je
arpl
daa
iret
sbb
adc
movsl
in
lock
or
and
jae
out
push
stc
shll
mov
scas
gs
mov
nop
mov
mov
pop
out
lret
idivb
sub
std
mov
cmp
push
adc
xchg
push
jle
jle
popf
je
xor
js
push
sbbl
add
in
sub
add
push
inc
stos
push
stos
sbb
adc
sbb
cmpsb
stc
aam
mov
cmpl
adc
and
enter
cmp
movsb
xor
out
inc
rcr
fisttpll
ficomps
inc
push
push
fwait
mov
es
mov
cmp
xchg
sbb
jae
push
xorl
mov
cmp
jns
flds
ja
sahf
xlat
mov
mov
and
jecxz
les
out
jle
jne,pn
aam
dec
xchg
mov
fs
insl
pop
je
cmpl
jo
popf
jecxz
dec
cmp
rcrl
mov
pop
les
jl
lea
imul
push
mov
xor
lret
repz
out
adc
jo
xor
icebp
xor
sahf
jnp
into
mov
pop
adc
push
adc
xchg
jmp
pop
movl
clc
sbbl
dec
xchg
jo
sbb
pop
dec
addr16
shll
cmp
movsl
ss
jb
fwait
inc
dec
mov
cmp
aaa
and
call
add
cmp
pop
add
dec
xorb
sub
out
stos
es
fmull
dec
push
adc
cmp
aas
push
or
mov
push
cli
inc
push
into
stc
sahf
and
jl
imul
or
ds
fisttpl
mov
mov
or
mov
push
and
aam
sub
sti
les
push
mov
inc
cmp
sahf
shlb
dec
mov
cmc
sarl
inc
into
dec
pop
mov
dec
movsb
pop
xchg
xlat
scas
mov
out
rcr
clc
inc
mov
or
int3
movsl
popa
sbb
ljmp
mov
sti
xor
lcall
sarb
mov
jmp
jl
push
push
mov
sbb
pop
rcrl
movsl
dec
enter
push
jb
inc
es
inc
dec
cs
add
imul
jae
cli
lods
loop
push
fsubl
cmp
adc
ret
in
or
dec
out
sub
dec
push
test
loope
add
jge
stos
jnp
mov
setle
int
and
test
cmc
cld
pmulhw
xchg
mov
adc
lods
neg
cmc
adc
cmp
cmp
adc
nop
push
cmp
out
inc
jns
loopne
ds
daa
jae
ja
rcrb
clc
or
std
jl
ljmp
dec
xchg
cmp
addr16
pop
sbb
lock
push
sarb
scas
push
movaps
mov
mov
sub
cmpl
pop
sbb
dec
icebp
lea
lahf
and
pop
rcrl
mov
jns
popa
in
je
xchg
ret
xlat
mov
repnz
into
push
lock
rorl
addr16
sub
sti
push
stos
mov
adc
aas
cmp
test
mov
lock
in
stos
push
test
xor
xor
adc
roll
push
adc
adc
sbb
sbb
cmc
xor
sub
imul
xorl
shll
mov
mov
or
cli
pop
cld
nop
jns
push
es
sub
cmc
pushf
dec
out
jmp
fldl
sbb
mov
push
fwait
mov
push
in
aaa
je
jmp
jbe
cltd
lcall
inc
cmpsb
imul
push
ss
popa
or
sbb
sub
sbb
xor
lcall
mov
mov
insb
push
shll
jecxz
lods
cmp
lock
or
lcall
dec
in
jne
xchg
or
movsb
xchg
inc
cltd
outsb
push
repnz
insl
or
cmp
xor
mov
test
pop
xor
jae
add
and
loop
cmpsl
xchg
cwtl
and
jnp
jg
ja
or
and
es
insb
std
mov
push
or
iret
inc
ja,pt
and
mov
nop
and
and
push
fmuls
ljmp
clc
dec
add
or
xchg
ja
and
inc
cld
sbb
xchg
add
imul
test
test
and
inc
mov
mov
inc
fdivl
mov
xchg
xchg
lret
je
or
inc
add
test
sub
xor
lea
nop
dec
cwtl
push
jge
push
sbb
adc
mov
mov
push
neg
nop
arpl
push
lods
insl
jns
in
pushf
clc
jno
repnz
nop
ja
inc
pop
ret
and
inc
and
inc
inc
push
in
mov
fistpl
dec
adc
push
subb
inc
xchg
and
fisubrl
xor
xor
jecxz
and
out
cmp
add
ds
call
cmp
mov
jl
repnz
rcrl
push
ror
iret
inc
or
test
xchg
mov
adc
cmp
sahf
mov
lods
scas
movsl
push
pop
and
jl
xor
stc
ja
iret
stos
sub
push
mov
ss
fisubs
jle
sub
jno
repnz
inc
mov
adc
inc
push
test
gs
and
xor
cld
repnz
mov
aad
inc
insl
insb
xlat
sub
xor
loope
fstl
insb
dec
lret
sbb
js
jnp
inc
js
dec
daa
add
ret
cld
xchg
xor
ljmp
je
or
aad
xchg
leave
aas
inc
pop
mulb
cmp
mov
cmp
mov
lahf
mov
push
xor
and
cmp
daa
out
xchg
sbb
bound
jp
mov
loopne
stc
mov
ficompl
cmp
mov
pop
xchg
sbb
out
jmp
add
aaa
jmp
mov
fcompl
xchg
test
mov
xlat
mov
cmpsl
jle
aad
adc
repnz
daa
cwtl
sahf
pop
pop
loope
dec
xor
jmp
xor
jno
add
push
xor
mov
iret
aad
out
mov
xor
mov
xlat
movsl
mov
pop
push
ljmp
movsl
and
dec
adc
inc
push
and
lock
pusha
pop
popa
std
cmpsb
adc
jg
mov
fwait
lock
mov
jg
test
add
add
cmc
xchg
or
lea
test
ret
cmp
pop
cmp
popf
mov
jg
test
pop
inc
cwtl
dec
dec
push
jne,pt
xchg
mov
xlat
es
fucomp
cmp
add
clc
fmull
mov
enter
adc
aad
lods
ds
pop
pushf
xchg
daa
xor
xor
loope
mov
and
xor
mov
cmc
rcll
in
sbb
or
pop
push
mov
sub
and
loope
cli
je
dec
sbb
sub
ficompl
cltd
inc
push
mov
repnz
adc
lcall
lret
cmpsb
sahf
pushf
sub
sub
dec
jne
pop
or
lret
outsl
mov
jo
xchg
aam
hlt
sub
fidivrl
aam
arpl
push
lahf
cmp
and
inc
ljmp
stos
loop
and
inc
icebp
xchg
pop
filds
aad
xchg
loope
adc
adc
mov
fdivrl
test
into
xor
push
mov
sbb
push
pop
inc
aad
lcall
shrl
pop
inc
bound
gs
push
insl
je
sbb
inc
sbb
inc
cmc
arpl
inc
adc
orb
mov
push
pop
stc
sahf
add
movsl
pop
add
add
pop
outsl
pop
and
sub
outsl
cmp
jmp
loope
mov
push
lret
mov
add
cli
out
leave
loope
roll
rorl
sub
or
hlt
dec
test
inc
mov
movsl
pushl
iret
jge
jns
mov
popf
out
adc
pop
ret
arpl
cmp
cs
xor
jb
rclb
xchg
mov
inc
xor
xchg
insb
push
popl
cmpsl
pop
mov
mov
push
adc
loope
fistpll
xchg
mov
popf
out
mov
fstpl
call
pushf
loope
mov
push
sbb
ja
into
mov
add
mov
fnstsw
mov
adc
sub
stos
jb
mov
icebp
pop
les
add
fisubrs
out
pop
mov
mov
loope
outsl
dec
test
sbb
inc
mov
mov
pop
iret
xchg
jo
stos
mov
adc
inc
push
lret
add
lea
jl
aas
stos
in
and
repz
mov
or
enter
pop
sub
adc
repnz
out
ret
mov
call
sub
pop
push
call
ds
scas
andb
ss
push
or
mov
xchg
mov
cltd
jle
popf
icebp
in
icebp
mov
pop
mov
xor
sub
ja
push
xor
inc
mov
daa
rclb
loopw
mov
push
insl
jmp
sub
pop
xchg
sbb
fadds
cwtl
sbb
add
in
dec
pop
or
cmp
dec
jle
mov
add
bound
pop
push
push
cmp
clc
xchg
jne
orb
icebp
push
call
imul
inc
arpl
inc
dec
andb
mov
repz
mov
mov
jae
inc
cmp
rclb
hlt
orb
inc
pop
push
hlt
jle
inc
mov
pop
push
subl
sub
cmp
sbbb
jns
xor
call
in
or
adcl
sub
adc
sub
xlat
add
pop
std
cmp
lods
xlat
dec
gs
dec
add
mov
dec
sbb
mov
ja
addr16
movsl
lahf
mov
pop
xor
mov
fcmovbe
stos
hlt
lahf
outsb
push
icebp
mov
and
insb
mov
dec
std
mov
sahf
je
lods
popa
icebp
sbb
pop
mov
aaa
dec
xchg
in
add
xor
adc
sub
pop
xor
pop
jge
aas
jb
ret
stos
ljmp
jae
mov
or
cmpsl
repnz
adcb
iret
inc
dec
xor
jae
arpl
jno
pop
lea
mov
jo
push
andb
or
lret
inc
aam
sbb
shll
adc
sbb
sub
das
dec
hlt
xor
mov
outsb
xor
int3
or
gs
xchg
and
mov
and
cmp
sub
sbb
dec
jge
and
inc
das
mov
xchg
and
mov
mov
push
mov
enter
bound
mov
pop
jmp
ffreep
out
popf
jmp
call
je
jae
cli
xor
in
test
mov
lods
rorb
lods
ljmp
xor
sahf
jne
fldt
hlt
call
insl
lods
xor
sbb
cmpsb
jp
daa
dec
push
lock
push
neg
push
ss
repnz
icebp
cld
stc
dec
psubb
scas
fbstp
dec
loopne
cs
mov
pop
rorl
in
pusha
jbe
push
or
and
mov
lea
test
dec
push
pop
xchg
inc
insb
clc
stc
pusha
int3
jo
out
hlt
loope
cmp
and
imul
mov
test
mov
mov
jge
mov
je
jo
out
xor
movsl
fsubs
ret
push
notl
pop
lock
and
out
cmp
xor
pop
cmpsb
or
fistps
incb
je
adc
adc
shll
popf
xchg
pusha
sarb
in
push
adc
or
std
test
dec
in
sbb
leave
cmpsl
enter
pop
xchg
idivl
arpl
or
mov
mov
mov
cmp
outsb
setb
xchg
mov
lret
shlb
les
arpl
ljmp
lahf
cmp
add
pushf
or
mov
or
loop
and
mov
jmp
mov
pop
jbe
rcrb
lret
idiv
or
xchg
fcomi
xorb
mov
xor
xchg
inc
xor
push
sub
cmp
movsb
in
push
gs
sar
leave
aas
loopne
fwait
add
cli
adc
negl
nop
mov
pop
pop
fdivs
ret
nop
out
lahf
lock
in
sbb
popa
repz
mov
unpcklps
aad
inc
icebp
popf
xchg
dec
cld
mov
fmuls
jae
out
out
ss
xor
les
fnstenv
mov
enter
pop
imul
sub
jl
mov
es
pop
call
jo
jne
jbe
xor
cwtl
sbb
inc
inc
push
pusha
xchg
push
inc
mov
test
and
cmpsl
fsubrl
dec
loopne
push
mov
outsb
jno
sbb
cmp
jns
test
call
cmpsb
les
sahf
xor
jns
lcall
jmp
insl
mov
test
ljmp
rorl
scas
push
adc
out
test
loop
rolb
xlat
leave
clc
pop
arpl
sub
mov
fsts
sahf
in
inc
pop
mov
or
or
outsb
fsubrs
fisubrs
xchg
in
psrad
mov
xchg
int3
adc
dec
pop
insl
or
out
je
ror
sub
mov
or
cld
jae
shll
pop
aad
sbb
inc
pop
mov
jae
arpl
dec
loope
cld
mov
out
outsl
jecxz
or
in
or
and
ss
outsb
push
jbe
mov
mov
xchg
cmp
inc
xor
lahf
or
jns
faddl
lret
add
popa
fwait
mov
mov
pop
sbbb
filds
ret
ss
and
pop
mov
mov
das
adc
ficoml
xchg
cmp
add
sbb
ds
jg
mov
mov
imul
and
lea
lahf
jle
je
adc
sbb
xor
cmpsl
test
insb
subb
in
loop
dec
movsl
rorl
stos
sbb
lods
popa
idivb
add
mov
fimull
imul
dec
ret
stos
push
test
xchg
mov
xchg
and
test
sub
push
and
stos
movsl
sbb
fildl
aad
test
nop
les
clc
cmc
cmpsb
test
cmp
jo
mov
adc
xchg
inc
daa
mov
and
inc
sub
sub
mov
mov
daa
out
in
pop
fcmovne
mov
sbb
and
fcoml
sbb
cli
inc
dec
sbb
popa
sbb
xchg
xchg
lahf
mov
mov
dec
nop
mov
inc
in
scas
vxorpd
jl
fstl
stos
je
fwait
sahf
iret
or
outsl
dec
mov
repz
inc
in
jmp
and
inc
xchg
sti
xchg
or
clc
lock
in
and
mov
jecxz
and
jecxz
data16
push
lret
scas
icebp
test
push
sbb
sub
and
and
scas
jle
out
fdivrl
fistpll
pop
sub
xchg
xchg
sbbl
mov
loope
imul
fcomps
sbb
sub
inc
dec
inc
js
test
mov
jge
dec
ret
mov
xchg
mov
lds
out
or
sarb
and
jae
pop
cs
into
mov
mov
insl
cwtl
or
xchg
dec
lahf
lahf
and
mov
pop
notl
xor
stos
cmp
test
repnz
and
sub
pop
dec
cltd
mov
pop
out
inc
jecxz
and
loopne
push
xor
insl
adc
or
sbb
push
pop
sti
sti
dec
lcall
ljmp
call
add
add
jecxz
and
ret
mov
test
lea
popf
popf
out
push
lcall
cld
outsb
xchg
dec
scas
fwait
sahf
ja
mov
scas
popa
repz
in
push
or
lods
jnp
icebp
dec
test
xor
sub
inc
and
fsubrl
scas
adc
fistpll
push
jns
cmp
imul
push
pop
sbb
jl
js
xchg
popf
xor
jo
insl
push
test
shll
adc
je
and
add
lea
stos
popa
add
cmp
xchg
push
fsubp
pushf
push
lods
fstps
mov
cltd
sahf
js
jmp
push
dec
push
fs
mov
mov
inc
cmpl
jmp
movsb
pavgw
daa
js
or
mov
and
jno
or
iret
sub
push
jp
sbb
cmp
dec
sbb
xchg
mov
jno
ret
lcall
jle
xchg
ss
scas
cmp
ja
and
lods
adc
push
sbb
das
rorb
xchg
and
lret
jo
mov
xlat
sbb
cmpsb
iret
xchg
aam
test
or
adc
js
data16
sub
lret
aas
sti
or
inc
pop
gs
sbb
ljmp
insb
cmp
mov
gs
fs
lods
lods
xlat
enter
xor
movsb
xor
cmc
inc
movsb
pop
popa
push
cmpsl
test
dec
mov
cmp
xchg
inc
jecxz
dec
xchg
inc
push
pushl
or
xchg
movsl
mov
sbb
neg
inc
mov
cmp
sub
or
dec
sti
or
or
mov
bound
adc
dec
popf
and
adc
adc
out
add
and
mov
dec
mov
cmp
mov
mov
aad
fyl2x
fstpl
mov
ljmp
faddp
jnp
rcll
add
shrl
stos
xchg
insl
mov
stos
push
sub
adc
mov
sbb
or
lret
mov
pop
subl
xchg
or
mov
inc
and
movsl
fstps
or
sbb
in
repz
add
or
push
pop
daa
dec
loop
repz
unpckhps
test
imull
pop
jmp
xchg
pop
mov
cmp
lret
sub
mov
xchg
or
fadd
shl
push
in
inc
pusha
arpl
dec
fistpl
sbb
dec
or
stos
jbe
mov
and
or
fists
test
fdiv
add
sbb
daa
arpl
and
pop
adc
out
sub
mov
cltd
mov
push
lret
loope
push
stc
shll
adc
int
jns
gs
sbb
adc
lcall
jecxz
or
pusha
inc
mov
gs
push
ljmp
add
fucomi
jl
mov
lcall
pop
inc
and
fidivrs
jmp
mov
rorb
dec
cmpsl
push
or
mov
sbb
movsb
outsl
nop
cmp
jle
mov
or
and
dec
sbb
mov
pop
jle
lods
xor
mov
lcall
cli
scas
adcl
cli
mov
sbb
je
xor
mov
mov
lock
lods
jp
push
sbb
lret
lods
adc
mov
sub
ret
popa
sub
loop
cmpsb
lods
sti
shlb
gs
mov
xor
adc
xchg
inc
inc
xchg
mov
cmp
sbb
cmp
fsubl
shlb
or
sub
mov
push
sti
push
sub
mov
cs
xchg
push
push
xor
inc
pop
cmp
mov
jl
mov
mov
mov
lods
outsl
xchg
push
lcall
lods
loope
addr16
pop
or
jbe
jmp
mov
add
pushf
jae
call
push
mov
cmpsb
push
out
cmpl
imul
xorb
imul
arpl
jns
out
jae
mov
cmp
dec
xchg
jbe
lea
push
hlt
dec
iret
arpl
xorb
cmp
push
push
jg
mov
lret
push
or
cli
mov
xchg
fucomp
cld
repz
mov
sbb
scas
mov
mov
sbb
idivb
int3
dec
ja
mov
movsb
lods
xchg
ja
jge
fsubrl
push
movsl
pusha
fldl
sbb
and
sbb
adc
adc
adc
cltd
cmp
push
mov
ljmp
popf
repz
or
and
repnz
and
xchg
call
mov
in
in
or
or
mov
lahf
outsb
jne
push
cmc
or
pop
cmp
sub
inc
cltd
sub
fisttps
mov
jo
sbbl
mov
and
pusha
fwait
push
dec
sbb
rcr
ret
cwtl
xlat
pop
std
pop
repz
sti
lret
xor
lret
montmul
cmpsb
ret
movsb
arpl
into
mov
dec
lea
into
loopne
pop
ljmp
fwait
cmpsb
and
dec
jnp
hlt
fsubrs
cmp
shrl
jge
je
mov
cs
loope
ljmp
jmp
sub
inc
mov
arpl
ret
int
ljmp
mov
enter
pop
mov
test
movsl
jg
fstpt
or
add
cmp
push
add
in
lods
inc
mov
jmp
movsb
arpl
scas
xor
outsl
push
mov
call
adc
sub
and
sub
xor
dec
enter
and
cli
je
insl
in
hlt
pushf
push
cmpsl
es
add
stc
ret
or
int3
jecxz
lock
stc
cwtl
or
and
or
or
cli
loop
xchg
cmp
adc
adc
push
loop
dec
fbld
mov
sub
repz
fistpl
xchg
bound
test
xlat
inc
popf
jae
test
add
std
fisubrs
push
dec
push
xchg
pop
push
xchg
or
push
pop
pop
imul
mov
pop
cmovno
lods
loop
xor
push
xchg
pop
jg
adc
bound
cld
int
insl
clc
mov
dec
jns
cmpsb
imull
jp
xlat
pop
xor
jl
outsb
fbstp
dec
lret
movsb
dec
sbb
imul
popf
ja
lret
sub
sub
scas
stc
dec
sti
cmp
movl
xlat
add
mov
in
out
xchg
aas
xchg
sbb
in
repz
xlat
rcrl
push
fcoms
mov
in
sahf
int3
je
add
add
dec
pop
push
movsl
fcomp
lahf
imul
cmp
in
mov
mov
outsl
ret
cmp
pushf
jb
add
add
inc
or
shlb
out
notb
mov
pop
mov
in
and
push
mov
add
push
loopne
fdivl
inc
iret
or
sub
inc
test
je
loop
je
mov
add
sbb
rcll
aam
cmpsb
jbe
xchg
xchg
and
movsb
push
aas
cmp
lods
and
inc
inc
std
dec
add
inc
rolb
xchg
mov
cmp
scas
push
dec
ja
mov
inc
push
stos
mov
xor
lods
loopne
and
mov
out
or
and
sub
push
mov
dec
pop
and
cmc
enter
bnd
sub
es
or
pop
sbb
cmp
insb
call
mov
push
loop
sbb
imul
popa
ja
jns
popa
addr16
add
in
popf
pop
repz
sbb
ljmp
js
mov
clc
pop
icebp
rorl
scas
ret
popf
aas
fnop
add
sti
mov
sub
xchg
enter
pop
hlt
xchg
test
shll
sub
jecxz
out
xchg
jns
fisttps
adc
addr16
ficoms
pop
add
notb
movsl
push
mov
orl
in
adc
cmc
adc
lds
push
sub
dec
scas
popa
or
and
sbb
and
sub
and
aad
movsl
jl
mov
aas
mov
jmp
sub
clc
pop
xchg
pop
imul
and
imul
push
push
fdivl
sub
sub
outsl
gs
push
mov
int
mov
add
push
lret
aad
pushf
test
testb
iret
mov
mov
jbe
pusha
inc
cmovb
fmuls
icebp
xchg
adc
cmp
dec
mov
test
mov
fcomps
mov
mov
or
mov
mov
push
and
adc
add
inc
jns
sbb
aam
cs
sbb
gs
ficoms
fwait
mov
faddl
dec
int3
cmp
lods
push
jge
inc
pop
outsb
or
fdivrs
xlat
pop
mov
cwtl
cltd
pop
or
pop
sub
and
lods
mov
pavgw
push
jbe
push
test
loopne
out
xchg
insb
cltd
cmp
or
sbb
mov
aad
js
or
dec
repz
or
jnp
cltd
mov
test
shrl
arpl
pushf
andb
mov
xchg
add
dec
std
insb
movsb
popa
sub
fimuls
imul
ss
and
ljmp
scas
fcomi
data16
rclw
in
adc
lea
test
add
push
pop
test
sbb
dec
jg
test
jbe
in
jmp
jne
insb
sub
loopne
xor
sbb
fidivl
cmp
push
sbb
dec
sarl
add
test
icebp
adc
pop
out
aam
lds
sub
fldcw
inc
adcl
push
cmc
dec
in
and
sbb
sbb
lods
leave
mov
jl
xor
testl
pop
adc
rcl
addr16
mov
jns
pop
inc
cld
fcomp
add
xor
push
pop
loope
gs
nop
cmpsl
hlt
bound
mov
jb
or
cmc
mov
or
or
push
pop
sti
into
xchg
mov
jns
cmpsb
enter
and
inc
stos
out
add
lcall
jmp
jnp
in
cmp
xchg
jns
fmuls
jg
jmp
jg
mov
dec
push
lock
lahf
out
cmp
push
sahf
les
mov
into
and
mov
int3
add
mov
add
inc
vcvtsi2ss
pop
loop
daa
mov
fisttps
sbb
cld
dec
gs
pop
jae
inc
iret
mov
popl
or
daa
mov
jae
add
mov
mov
xchg
ret
inc
cwtl
add
lds
cwtl
mov
repnz
aam
popf
ds
insb
gs
xchg
mov
cmp
test
out
sarl
insb
mov
imul
adc
push
pop
mov
push
lods
jne
aam
loope
bound
jge
or
cli
stc
sub
cmp
adc
insb
mov
push
add
sbb
xchg
mov
movsl
adc
mov
jb
into
push
pushf
jp
sbb
or
push
pop
push
and
scas
js
fistps
inc
push
inc
mov
inc
sub
mov
inc
and
sbb
jge
and
das
or
or
test
or
and
hlt
mov
jg
popa
add
xchg
ret
cli
jae
jl
idivb
sbb
dec
sbbl
mov
lret
int3
test
jmp
xor
jo
sbb
mov
jl
pushf
cmp
lock
and
mov
gs
push
push
or
imul
lea
sbb
aaa
sarl
mov
int3
loopne
add
lret
fimuls
push
xchg
mov
xchg
xor
out
push
cld
leave
add
in
xchg
xchg
lahf
dec
fdivrs
lea
lods
add
mov
pushf
imul
pusha
popf
adc
dec
adc
mov
mov
pop
jle
push
jle
popf
pop
gs
mov
popa
inc
adc
scas
cs
sbb
andb
mov
mov
lea
fnsave
icebp
hlt
inc
dec
orl
mov
inc
imul
insl
add
frstor
xchg
mov
sub
cs
das
mov
lds
adc
xchg
jl
sbb
bound
xchg
aaa
notl
cmpsl
sbb
in
popf
scas
mov
out
push
xlat
or
aaa
inc
or
ss
dec
xor
or
push
fidivrs
ds
cwtl
mov
and
cld
cs
inc
jae
scas
clc
fidivrs
outsb
adc
pop
or
es
repz
call
push
and
add
add
lock
inc
into
xor
dec
int
ljmp
pop
ret
sub
mov
xlat
inc
xlat
leave
xchg
lahf
push
mov
cmpsb
xchg
cmp
ss
int
mov
mov
pop
dec
mov
stc
mov
xchg
mov
xor
jmp
mov
adc
cmpsl
fsubl
mov
mov
push
repz
sahf
sub
push
and
ljmp
pmuludq
or
lods
iret
std
cld
sub
std
lea
cltd
std
jbe
pushf
inc
jp
into
jno
hlt
stc
popa
pop
data16
adc
adc
scas
xor
and
or
andb
dec
sbb
and
push
push
addb
mov
pushl
dec
dec
add
cmp
xor
cwtl
xchg
jo
cmp
rolb
sbbb
push
sbb
ret
xor
push
inc
dec
jmp
mov
pop
lods
data16
inc
in
ret
sub
loop
pop
and
les
and
xcrypt-ctr
cmpsl
pop
pop
fisubrl
mov
xchg
push
jle
adc
mov
inc
incl
pushf
sahf
call
jnp
leave
jae
or
outsb
call
out
loopne
mov
xor
daa
movsb
add
jns
mov
movsb
cwtl
ficomps
fcomps
dec
sbb
int
sbb
into
divl
sbb
sub
lret
or
sbb
iret
cmpsl
mov
or
xchg
cmovle
aaa
pop
pop
in
daa
scas
lock
js
lret
into
or
or
and
push
mov
add
pop
mov
jge
jmp
ljmp
insb
imul
pop
enter
xor
mov
in
cmp
out
lret
pop
adcb
sub
ret
jnp
stos
mov
imul
bound
adc
das
arpl
add
das
add
daa
sbb
or
dec
dec
push
push
mov
test
sbb
sarl
push
adc
fdiv
cmc
jmp
rcr
sbb
aam
or
gs
or
push
sbb
mov
push
xor
jbe
imulb
cmp
xor
sarb
sbb
sub
push
leave
fimull
sbb
dec
add
mov
test
fwait
jae
fnstenv
loopne
add
push
icebp
cmpsl
and
mov
xchg
int
inc
pop
xor
and
pop
popa
cld
push
stos
cmpsl
jl
or
jne
out
jge
sbb
lret
inc
jge
pop
xchg
jecxz
pushl
pop
mov
push
mov
enter
push
les
test
sahf
pop
push
enter
mov
arpl
fdivr
pop
outsb
mov
xchg
xor
repnz
subl
pop
cmp
es
cmp
and
mov
inc
mov
xchg
addr16
dec
pop
shrl
adc
aaa
push
mov
xchg
dec
mov
xor
push
mov
arpl
stos
rol
sbb
push
sub
adc
sarb
fistl
push
dec
pop
mov
ret
xchg
jne
push
icebp
notl
add
sbb
mov
imul
jo
sub
popa
in
pop
in
rorl
imul
xchg
fabs
addr16
pop
push
and
mov
adc
jge
movsl
neg
xor
cmc
cltd
shrb
mov
mov
inc
jp
push
not
pop
fdivrs
pop
pop
int
ret
inc
repnz
fnsave
out
inc
jno
sub
pop
jp
inc
out
sar
mov
mov
jmp
jecxz
les
adc
outsl
lret
ret
mov
and
lods
cmp
inc
mov
push
repz
outsb
cmp
mov
xlat
shll
mov
jne
mov
ficompl
stc
xor
sbb
shll
fcmovbe
frstor
fildll
inc
pusha
pop
pop
sub
bound
jb
cld
addl
fnstcw
push
stos
outsl
jno
xor
push
test
inc
repnz
mov
jp
out
pop
mov
adc
int3
in
lea
push
fistps
daa
dec
fs
sbb
inc
popf
pop
es
xlat
scas
jle
inc
cmp
and
and
push
and
shrb
test
xor
ficoms
roll
test
mov
cs
out
in
jge
pop
mov
xlat
std
les
push
fistpl
add
loope
hlt
test
jbe
dec
jae
lcall
and
sub
sar
adc
mov
std
pop
bound
outsb
cmc
add
xor
xchg
mov
cmpsl
sub
push
pop
pop
adcb
add
mov
js
sub
out
into
xchg
lcall
sbb
loopne
add
js
jecxz
cmpsl
call
inc
sbb
add
out
stos
cmp
inc
and
adc
in
pusha
fldt
sub
fcmovne
mov
scas
mov
sbb
fdivrl
lods
arpl
ds
addr16
pop
shlb
xchg
test
or
popa
test
inc
iret
dec
jae
faddl
lcall
inc
pop
push
mov
daa
cmc
pusha
cmc
pop
cmpb
test
and
add
adc
dec
push
data16
out
int
mov
mov
xchg
sub
out
jmp
mov
movsl
inc
adc
lret
in
sbb
cmp
fcmovu
pinsrw
mov
jnp
push
add
jle
mov
sub
movsb
jns
movsl
iret
lcall
nop
loope
xchg
add
and
inc
call
loope
cld
aad
add
add
call
ss
push
inc
add
fcoms
roll
daa
lods
cmpsb
mov
pop
adc
aad
stos
mov
int
jmp
into
adc
fistl
loopne
adc
pop
mov
mov
push
addb
orb
out
mov
testl
arpl
lods
dec
xor
aam
clc
arpl
ret
sar
enter
mov
sarb
and
dec
jnp
lods
mov
out
jbe
push
sbb
sbb
mov
bound
pushf
xchg
fadds
fimuls
adc
sahf
adc
cld
xchg
xor
mov
mov
xor
push
bound
and
push
mov
sub
mov
mov
decl
mov
pop
sbb
jle
gs
int3
scas
sub
int3
das
jl
xlat
and
rcrl
jno
lock
ja
gs
mov
lds
inc
addr16
push
cmp
cmp
jmp
pop
loop
es
popf
stc
gs
cmp
mov
jge
xchg
dec
sahf
inc
mov
inc
push
lcall
ja
cmpsb
imul
pop
out
mov
lods
data16
scas
enter
nop
mov
push
scas
mov
loope
push
xlat
jge
add
add
fadds
push
inc
sub
test
rorb
xchg
push
orl
ja
or
test
adc
jno
and
dec
sbb
and
loopne
lds
cmp
push
xor
jg
jl
mov
test
lock
mov
iret
inc
cmc
fidivs
outsb
lahf
jb
in
jle
lahf
inc
cltd
dec
pop
jne
inc
cmpsb
test
cld
call
stos
movb
dec
mov
inc
mov
and
dec
repnz
sub
mov
or
jo
jns
call
xchg
push
sub
loop
out
pop
adc
push
dec
push
pop
jl
cs
es
xchg
lahf
leave
dec
dec
arpl
roll
imul
testl
lret
shlb
add
test
dec
inc
or
sar
loopne
and
fxch
add
jno
cmpsb
mov
sbb
jecxz
jge
into
mov
mov
pop
lcall
or
insl
dec
adc
or
das
mov
sbb
rcl
inc
int3
mov
jmp
lcall
sbb
and
and
aad
pusha
cld
dec
sub
or
add
pop
daa
mov
xchg
cmp
xlat
inc
sbbb
xchg
push
inc
push
xor
cmpsl
sub
mov
scas
movsb
dec
sbb
pop
jecxz
cmpsb
mov
fcomps
mov
mov
ret
mov
mov
out
insb
lret
push
icebp
xchg
in
pop
andb
and
xchg
out
pusha
mov
and
add
cmp
pop
loopne
inc
mov
arpl
or
fsub
stc
push
repz
jmp
xlat
mov
jae
jl
pop
js
jmp
sbb
lods
or
hlt
cmpsb
sbb
cmpb
and
sti
popf
ja
adcb
in
xor
in
dec
js
fnsave
push
push
xchg
loop
loop
test
push
mov
dec
pop
stos
adc
or
add
xchg
pusha
imul
out
dec
jge
mov
rcll
negb
fcoms
test
lods
test
pop
movsl
cli
sarl
xor
pushf
test
subb
mov
dec
into
push
jo
or
xor
inc
imul
loopne
add
lods
xchg
adc
mov
jno
adc
pop
dec
and
notl
leave
inc
xor
jecxz
cmp
jle
lea
or
movsb
and
mov
adc
andb
jp
and
and
sub
or
fimuls
sbb
flds
xorl
gs
jo
mov
add
clc
dec
mov
movsl
xchg
push
xchg
aad
sbb
movsb
inc
and
jae
cwtl
push
pop
test
or
aas
mov
daa
inc
dec
add
iret
or
push
aaa
mov
xchg
roll
cmpsb
dec
adc
push
mov
lret
mov
or
inc
mov
sarl
xchg
fistl
push
aam
jbe
rcll
or
jo
sti
in
add
jno
cli
loopne
sbb
aaa
std
call
push
icebp
fimull
xchg
xor
cltd
jmp
xor
bound
xor
push
inc
mov
add
shll
mov
push
nop
out
jns
cltd
fwait
ljmp
xchg
jp
ss
lret
jg
ljmp
sarl
lock
sub
daa
daa
std
dec
movsl
push
ret
imul
jecxz
in
lods
cmp
ljmp
fcoml
sub
into
movsl
ret
rcll
ret
and
inc
xchg
enter
insl
repz
in
fistpl
call
into
sbb
les
aaa
xchg
pop
cmp
fnsave
sub
cmc
and
out
dec
stos
inc
add
and
mov
inc
jl
stos
sbb
movsl
add
les
sti
mov
add
iret
cmpsl
pop
in
in
xchg
and
fsts
mov
out
stos
mov
je
insl
fadds
sub
movl
cwtl
fcoms
cltd
add
push
cwtl
cli
mov
in
mov
mov
add
mov
push
mov
aas
dec
roll
int3
dec
roll
js
data16
lahf
repnz
lock
loop
mov
clc
xor
jae
hlt
push
insl
das
xchg
into
stos
dec
jb
test
mov
loopne
xchg
out
mov
and
pslld
pop
aas
mov
fwait
mov
adc
pop
sbb
cld
js
pop
mov
gs
xchg
mov
dec
push
in
and
pop
fdivrl
lods
pop
adc
jmp
insl
sub
icebp
xor
inc
cmp
pushf
cltd
mull
sbb
sub
cmp
lret
xor
mov
inc
std
out
leave
addr16
pop
hlt
sahf
push
scas
mov
lods
cltd
ffree
dec
jae
fwait
push
mov
stc
and
or
loop
mov
sub
dec
pop
mov
cltd
jne
xor
in
and
arpl
cmpsb
ljmp
inc
fs
push
rcrb
aam
mov
test
sbb
pcmpeqd
push
bound
int
xchg
or
mov
xchg
mov
daa
ljmp
jmp
sarb
mov
std
mov
jno
lret
jo
jae
movsl
popl
and
movsb
arpl
movsl
es
aas
xchg
adc
adc
sti
cmpsl
lods
mov
outsl
push
jnp
roll
cmpsb
popf
xchg
insb
adc
addl
adc
push
xor
orb
jge
sti
push
jle
hlt
jp
cmpsl
arpl
dec
ret
add
popf
outsb
pop
cmp
ljmp
dec
push
pop
pop
nop
dec
out
push
jle
mov
cs
insl
inc
or
out
dec
add
add
sub
xor
repnz
adc
enter
fstpl
fstl
xchg
out
add
fmul
rorb
subl
jne
xchg
cs
lods
mov
enter
mov
sbb
xor
cs
mov
fistpll
cmc
movl
sub
dec
jne
and
enter
lock
daa
and
mov
cmpsb
mov
sbb
sbb
jbe
jle
xchg
jmp
mov
xor
ja
cmp
cmp
push
mov
movsl
ror
rcrl
ror
test
mov
xchg
leave
sbb
sbb
sub
stos
stc
push
inc
mov
jle
dec
in
cmpsb
pusha
stos
xchg
sbb
sbb
mov
fisttpll
lahf
xchg
push
pop
mov
jb
cmp
adc
sub
mov
pop
pop
aam
cmp
and
lret
call
push
call
inc
sbb
xchg
add
stc
adc
data16
adc
add
data16
out
stos
pop
mov
movsl
mov
les
aas
out
xor
jecxz
add
xchg
dec
scas
ror
out
outsb
lods
into
add
shlb
sbb
inc
out
push
leave
dec
cltd
addr16
in
mov
pop
leave
inc
rcrb
sbb
inc
popa
jmp
aam
clc
outsl
pop
mov
pop
sbb
in
xor
in
jmp
xor
jns
mov
ror
aad
jbe
out
or
ljmp
lcall
aad
dec
mov
or
aaa
fs
pusha
ret
and
dec
sbb
mov
andb
sub
andl
add
push
push
pop
adc
sbb
inc
das
pop
mov
pop
cmpsb
push
mov
sub
push
add
sbb
nop
sbb
in
sbb
cld
push
jp
ljmp
pop
jbe
cmpsb
push
fistl
scas
adc
movsl
push
divb
jge
jmp
jp
mov
lahf
into
test
clc
clc
aaa
dec
adc
add
add
sub
pusha
sbb
adc
sahf
jns
jmp
int
mov
scas
ret
in
xor
sub
rcll
xchg
push
mov
adc
fldl
sbb
xchg
adc
mov
xchg
pop
xchg
sbb
cld
inc
jg
or
or
cmp
dec
into
rorl
add
jg
dec
xor
xchg
or
incb
test
scas
adc
in
pop
stos
pop
mov
das
jecxz
mov
fisttpl
or
inc
test
mov
loope
adc
jp
loopne
mov
scas
cs
inc
clc
pushl
xchg
xchg
xor
fistps
scas
mov
or
add
mov
jb,pn
jnp
incb
mov
pop
sbb
dec
popf
mov
sbb
insl
testb
push
mov
pop
mov
rclb
pop
dec
jl
test
stc
lea
nop
adc
shlb
popl
xchg
mov
gs
sbb
outsl
jnp
ds
std
shll
sub
mov
jge
fstpt
xchg
and
dec
fwait
mov
xor
xor
out
xchg
ja
repnz
xchg
jo
sar
out
fldt
pop
out
and
xlat
icebp
jp
xor
aas
and
dec
popf
imul
popa
cli
btc
popf
shll
cltd
test
movsl
cmovs
out
out
rcl
pusha
sbb
jns
pusha
sbb
jle
or
fiaddl
mov
dec
xor
aaa
xchg
sbb
mov
jl
jns
dec
data16
lea
icebp
jmp
into
inc
int
aam
jbe
arpl
jmp
test
add
push
les
lret
in
adc
stos
test
jno
mov
jno
cmpsb
add
sti
inc
inc
sti
push
mov
js
out
mov
xor
add
sbb
mov
and
sarl
dec
xchg
sbb
es
mov
fadd
sti
mov
cmpsb
cmp
inc
xorl
add
mov
jo
je
jmp
movsb
mov
outsl
fsts
testb
imul
inc
adcl
iret
mull
mov
into
jl
fcoml
xchg
adc
test
push
aas
call
fnstenv
xchg
add
dec
inc
cli
out
inc
sbb
test
shrl
mov
xchg
cmc
shlb
push
jae
hlt
dec
sub
rolb
in
xchg
sbbb
jge
sahf
lret
je
cmp
pusha
das
jge
icebp
test
js
xchg
lea
nop
pushf
add
push
sub
adc
in
push
mov
int3
pop
mov
cs
cltd
int3
dec
mov
sub
push
xchg
in
xor
mov
hlt
nop
sbb
in
add
daa
rcr
das
xchg
dec
in
mov
aaa
dec
das
fistpl
push
push
bnd
roll
stos
jmp
bnd
pop
lret
dec
jns
xor
loope
insb
lods
sub
mov
subb
adc
xchg
mov
sub
rcr
pop
fs
add
std
mov
pop
jbe
movsl
cwtl
movsb
daa
loopne
out
gs
fcomi
dec
loop
or
movsl
and
mov
cwtl
cmp
jmp
jmp
pop
inc
lock
add
rclb
push
add
cmp
cli
sete
mov
cmp
jge
pop
cmp
xlat
lds
ja
mov
clc
xchg
pop
push
xchg
jge
fs
inc
out
push
fdiv
and
mov
xor
scas
adc
outsb
jbe
sub
jo
fdivrs
pushl
inc
aad
outsl
inc
aad
addr16
lahf
enter
mov
add
mov
mov
in
xchg
sub
pop
or
jo
in
mov
aaa
decb
or
mov
jo
das
jge
cmp
jg
mov
or
inc
or
sub
xchg
mov
out
jmp
lcall
rorl
jbe
mov
nop
inc
lock
inc
or
mov
ss
int
jnp
insl
in
or
cmpsb
add
stos
inc
push
dec
std
inc
xor
xchg
xchg
cwtl
outsl
and
and
dec
lea
xchg
arpl
xorb
inc
cmpsl
jo
mov
or
jecxz
imul
adc
test
lret
jmp
pop
pop
pop
mov
pop
xchg
mov
roll
add
fsubs
mov
js
mov
mov
negl
pop
fcmovb
push
test
add
jp
cmp
repz
lret
adc
add
jl
or
cltd
in
test
inc
inc
orl
lods
stos
xor
divl
mov
jno
sub
sbb
jmp
or
push
cmp
ror
test
adc
test
int
mov
clc
and
jp
jecxz
shrb
mov
xor
or
push
push
pop
xor
pop
cmpsb
ds
mov
stc
stos
pop
and
push
and
xchg
arpl
shlb
mov
jbe
rol
sbb
arpl
mov
popf
cmp
lea
push
xor
rol
in
pop
movsl
clc
adc
push
not
js
adc
cmp
mov
jmp
push
cmp
pop
cmc
icebp
and
pushf
dec
jbe
xor
addr16
jns
jnp
lock
mov
pop
ja
repz
xor
outsb
loop
aam
mov
repz
out
xchg
outsl
push
fists
sbb
std
mov
scas
ret
dec
mov
xchg
mov
in
add
test
xor
sbb
jnp
cmc
pushf
das
mov
inc
or
rorl
popa
jge
in
push
mov
mov
pushf
icebp
dec
push
movsb
cmp
xor
fidivl
push
sahf
adc
fldenv
mov
cmc
sbb
std
push
add
sub
and
push
pushf
and
cmp
add
push
pop
cltd
xchg
sub
in
sti
cwtl
jmp
xchg
sti
jne
jns
arpl
mov
jno
xor
shlb
aas
mov
push
adc
or
mov
scas
push
not
push
cmp
sub
popf
test
mov
lret
or
push
add
push
testb
popa
dec
outsb
jmp
repz
xchg
js
rolb
scas
imul
sti
mov
das
ret
mov
cmpl
mov
or
sahf
in
aad
ljmp
in
inc
imul
mov
je
nop
cld
fs
dec
mov
inc
cmp
mov
jmp
jo
push
mov
pop
cmp
push
or
les
adcl
mov
fcomps
inc
fnclex
lods
enter
pusha
sbb
mov
adc
outsl
loopne
mov
imul
movsl
sbb
lods
or
in
jb
push
sbb
inc
mov
xorb
mov
xor
xor
fldcw
iret
gs
subb
lea
or
stos
in
xor
testl
mov
mov
pop
jge
mov
sbb
push
out
sub
je
ss
push
les
movd
and
sbb
mov
test
shr
xchg
daa
test
push
mov
and
add
es
out
outsl
pop
add
adc
pop
cmp
jmp
idivl
in
sub
cli
jne
leave
and
adc
aam
fs
add
jo
mov
cmp
xor
dec
stos
xchg
jnp
hlt
push
mov
cmpsl
cmp
neg
mov
push
pushl
push
mov
fmuls
sarb
pop
call
imulb
or
sub
sti
pop
push
jbe
mov
xchg
incl
push
aam
cs
adc
fbld
faddl
sbb
jmp
sub
push
xlat
adc
sti
rcrl
pop
cmp
mov
insb
xchg
cmpsl
in
popf
pop
and
mov
add
in
dec
sbb
mov
jb
jno
sub
fidivs
sub
xchg
sbb
ret
mov
xchg
test
mov
and
push
and
adc
push
xor
mov
inc
jl
outsl
out
push
push
xor
cld
push
sub
pop
cmpsb
xchg
ja
adcb
mov
in
sbb
pop
xchg
jno
push
xchg
cli
mov
or
or
inc
fnstsw
xor
inc
popf
and
out
scas
das
jbe
add
lea
ret
jno
and
cld
arpl
mov
dec
and
pop
fcoml
scas
imul
stos
cmp
andb
pop
std
dec
std
out
inc
repnz
dec
icebp
mov
pop
shll
xchg
js
lea
jecxz
jne
fldenv
loope
test
inc
push
jno
aas
cld
mov
mov
pushf
in
loope
pop
jp
in
and
inc
cmc
sahf
inc
mov
stos
hlt
adcl
je
mov
inc
xchg
dec
cmp
push
popf
pop
popa
jmp
lods
enter
xor
mov
roll
rolb
ret
xchg
aas
mov
sarl
inc
arpl
lods
les
push
add
xor
jge
aad
lods
addb
inc
add
movsb
mov
es
movsl
leave
push
cmp
insl
lret
cmp
cwtl
stc
pop
dec
xor
std
dec
mov
sbb
mov
pop
clc
pushf
imul
and
xchg
xchg
frstor
imul
xlat
imul
bound
inc
dec
mov
mov
stos
fsts
mov
fcoml
mov
loop
daa
mov
ret
shr
xchg
mov
fistpll
xchg
xor
cld
sbb
lods
jmp
push
jmp
add
dec
push
fistpl
notb
gs
sub
mov
mov
mov
mov
in
fs
out
dec
imul
stc
cmp
inc
cmovno
lds
jmp
lds
outsl
dec
popa
scas
iret
je
int
mov
and
xchg
mov
cs
clc
xchg
fwait
movsl
cmp
jge
adc
std
push
js
sub
std
push
pop
ja
sub
jnp
aam
loope
out
stc
pop
xor
mov
mov
pop
and
fstpl
and
lcall
incl
call
lret
stos
addl
je
lock
data16
sahf
je
jle
add
xchg
jbe
out
int3
daa
push
mov
js
push
pop
add
push
loope
out
jns
pop
mov
aam
dec
dec
adc
lahf
xchg
xor
ret
sub
pop
mov
xorl
mov
je
cmp
loop
cwtl
or
xor
fisubrl
add
test
xor
dec
cwtl
mov
xor
jbe
addb
mov
lea
cs
pop
or
fwait
push
xchg
in
ret
xchg
gs
pop
push
jne
lret
loope
loop
sub
test
inc
push
mov
mov
lods
fdivl
jne
mov
div
xor
mov
pop
sub
nop
adc
xor
ret
push
loop
mov
xor
lea
or
ret
imul
into
push
fwait
rcr
leave
dec
addr16
lcall
rcrl
repz
sbb
lret
cltd
xor
xchg
xor
xchg
and
fcmovu
xor
movsb
jne
add
pop
dec
and
and
add
dec
mov
push
push
cmp
arpl
cmpsl
push
cld
ret
clc
and
ds
cmc
jg
pop
push
sahf
dec
ret
mov
mov
addr16
popf
enter
xchg
das
cmp
es
jge
ds
popl
jno
sahf
mov
dec
jg
scas
lahf
std
cmp
or
imul
or
stc
sahf
mov
orb
out
in
pop
sub
xor
jle
jmp
sub
push
cmc
jnp
addr16
lods
cmp
add
add
mov
fiaddl
mov
aad
mov
pop
bound
setl
fisttps
ja
adc
jp
jmp
pushf
test
dec
out
xchg
xchg
pop
mov
xchg
mov
aaa
cmp
ss
xor
push
sti
mov
bound
dec
xor
call
pop
mov
jg
leave
rcll
fs
inc
push
add
mov
pop
outsl
std
gs
push
and
xorl
cld
lods
cmc
mov
jecxz
jge
mov
scas
push
xlat
xor
les
mov
mov
iret
movsb
daa
loope
and
std
jnp
leave
jns
fs
push
mov
jl,pt
mov
hlt
orb
aam
push
cwtl
push
jbe
aad
mov
mov
mov
and
jge
sbb
and
dec
je
aam
add
notb
inc
mov
mov
mov
fisttpll
or
lcall
stos
cmp
adc
movsl
lret
rcrl
ret
mov
mov
insl
in
idivl
add
sbb
mov
mov
subb
jle
and
aam
push
mov
aad
imul
mov
mov
clc
jmp
ja
mov
and
jae
out
mov
das
sbb
aaa
jge
add
rcll
mov
cltd
popf
xorb
adc
adc
pop
push
mov
lret
push
mov
and
int
das
xor
adc
insl
imul
and
adc
xor
lret
inc
xor
jbe
adc
add
int3
push
repnz
mov
leave
cmp
ljmp
int3
mov
dec
xlat
sbb
rcrb
mov
sbb
ret
clc
jb
cmp
sub
stc
push
icebp
lret
push
jmp
jno
fsubr
int3
inc
dec
adc
jmp
or
movntq
out
mov
call
and
lret
push
mov
fisttpll
cld
cmc
insb
push
aaa
lods
fld
push
in
mov
movsb
or
and
xchg
or
add
dec
pop
xlat
push
jae
xor
mov
add
rol
push
mov
sub
imul
mov
mov
mov
pop
xchg
mov
stos
adc
fmulp
mov
xchg
inc
push
rcrb
or
mov
push
iret
imul
stc
fisubrs
push
xor
dec
gs
fsubrs
jnp
imul
gs
gs
xor
scas
es
inc
xor
pop
pop
mov
ljmp
and
mull
and
les
inc
cld
and
ljmp
std
int3
dec
test
sub
push
xor
sub
cmp
insl
xor
inc
push
jb
das
decb
lds
sarb
aaa
ja
rcll
mov
lcall
in
insb
inc
les
push
pop
push
sbb
rolb
cli
fs
gs
movzwl
xchg
mov
in
mov
dec
sarl
repnz
mov
lahf
mov
inc
sub
mov
arpl
lods
jl
sub
add
xchg
jb
jo
sarl
insb
adcl
mov
sub
adc
mov
mov
stc
pop
xor
imul
push
movsb
outsb
dec
lcall
or
pop
adc
pusha
insl
push
dec
inc
pushf
fnstenv
add
aam
sbb
div
insl
test
cltd
bnd
sub
mov
jle
xor
imul
cmp
sarl
pushf
mov
ret
pusha
mov
out
int3
div
mov
bound
adc
pop
pop
xchg
push
add
sub
out
mov
pop
xchg
sub
cmp
shll
push
push
mov
mov
mov
push
call
and
popa
in
pop
leave
dec
cmp
loope
ret
push
fisubrs
xor
pop
lahf
cmpsl
jge
idivb
and
jnp
repnz
jecxz
out
movsb
dec
repnz
rorb
scas
sub
mov
lock
in
call
cld
cld
lret
aam
imul
lds
mov
jmp
xor
test
and
jmp
outsl
nop
sub
mov
dec
adc
mov
mov
fisubl
or
ljmp
ljmp
mov
iret
mov
cmp
pop
aam
inc
add
pop
lods
dec
jne
sbb
sbb
mov
jge
les
pop
inc
cmc
pop
mov
bnd
inc
xor
cli
es
mov
xchg
ljmp
sub
mov
mov
nop
mov
rcll
bound
rorl
repz
push
aad
mov
sub
dec
das
mov
es
mov
jno
inc
scas
cmp
test
sahf
mov
fadds
sar
aam
xlat
fisubrs
sbb
sbb
ficoms
pop
in
iret
xchg
scas
pop
xor
mov
cmp
enter
jae
mov
movsb
jbe
mov
sub
ljmp
cmp
sub
pop
mov
ret
adc
sti
jl
sub
aas
pushf
addl
fisubrs
add
cli
imul
into
negl
mov
icebp
sbb
inc
sbb
sub
int3
std
dec
inc
sbb
lea
push
push
movb
mov
mov
pop
jl
adc
shll
dec
std
push
cld
mov
int
push
popf
or
and
mov
fldcw
sbb
sbb
cs
ss
cmp
jns,pt
jg
aam
jmp
aas
loopne
clc
ljmp
cs
pop
mov
add
add
xchg
in
mov
mov
jecxz
jg
lds
neg
mov
mov
mov
shl
or
jmp
pop
insb
push
adc
mov
xorb
in
jl
lahf
leave
cltd
mov
push
lock
mov
hlt
mov
scas
jo
mov
xor
push
cmp
cmpsl
pop
push
inc
inc
repz
xorb
lds
or
or
stc
mov
add
ret
gs
rorb
xor
mov
movsl
and
insb
das
mov
mov
add
mov
imul
fsubl
mov
and
jnp
dec
mov
adc
fwait
stc
mov
sarl
shrb
loop
cld
add
mov
mov
aaa
out
inc
mov
sbb
insb
mov
xchg
fldpi
les
sub
push
shll
jl
cmp
add
mov
rolb
in
fnsave
repnz
outsl
sbb
mov
cltd
adc
or
or
mov
cwtl
clc
sbb
jl
cmp
rclb
and
scas
pusha
mov
pop
xchg
lods
sbb
shrl
xor
push
shlb
xor
sti
sub
fidivrl
in
jae
cli
lock
dec
popa
xchg
mov
sub
push
sbb
xlat
xor
jg
pop
jnp
jecxz
mov
pop
into
lea
stos
jbe
nop
ret
ljmp
adc
gs
push
xor
and
sub
out
sbb
adc
pop
jp
movsb
bound
xchg
pop
adc
jecxz
pop
cs
gs
ret
jae
out
fldcw
and
dec
push
in
cmp
in
push
arpl
mov
scas
jmp
cmp
aaa
and
xor
mov
out
mov
sub
sarl
das
and
pop
mov
in
int
movsb
scas
stos
jp
lret
xchg
sbb
pop
push
mov
jecxz
inc
xchg
mov
movsl
xchg
cmp
frstor
cmp
and
mulb
xchg
pop
dec
jg
jns
cmp
shlb
test
push
jl
mov
mov
in
mov
in
push
test
adc
daa
bound
lods
mov
aam
jle
dec
dec
cmp
xchg
fnsave
lret
clc
scas
dec
sub
lahf
cmc
add
jge,pt
push
movsl
add
push
jbe
xchg
pop
not
leave
pop
jne
ss
cli
xchg
and
push
daa
adc
inc
xor
lods
andl
dec
popf
pop
bound
jge
adc
dec
jno
lods
jecxz
xor
loope
xor
jecxz
movsl
xchg
or
call
sbb
imul
xchg
push
ja
and
lret
pop
mov
popf
test
adc
mov
mov
fwait
or
fimull
movsb
jae
mov
data16
cld
cwtl
add
pop
xchg
mov
pop
out
in
std
pop
ret
and
lret
repz
das
jle
ss
sbb
mov
xchg
pop
and
and
or
xlat
cmp
fildl
stos
cmc
std
lret
jmp
les
or
adc
xchg
and
pop
add
push
mov
lods
jns
sub
xchg
or
mov
push
hlt
lret
jo
cs
scas
fwait
pop
sub
jle
jb
in
pop
lret
or
xor
fdivs
cmp
in
jecxz
sbb
pop
mov
mov
jo
mov
pop
in
xchg
aaa
out
cmpsl
mov
movsb
divb
mov
repnz
into
jb
loope
cmpsb
fisubl
cwtl
pushf
push
or
jecxz
cmp
lcall
and
xor
inc
nop
mov
add
mov
mov
xor
scas
repnz
lods
ljmp
sbb
lds
push
mov
test
mov
cmp
and
lock
mov
jb
jmp
in
sub
dec
pusha
mov
sbb
aaa
into
sub
dec
cmp
insl
mov
add
xor
dec
scas
les
mov
mov
push
xor
push
push
cmp
enter
jb
add
adc
je
cwtl
pop
add
sar
ss
jge
dec
rorl
pop
jge
jmp
pop
xchg
ljmp
ret
out
outsb
and
sarb
dec
nop
inc
mov
mov
xchg
mov
pop
or
dec
in
aam
mov
out
stos
ss
sbb
pop
mov
ret
fs
cltd
in
sbb
lret
sbb
jbe
out
pop
sub
movntps
dec
popf
jle
pop
fs
pop
push
scas
xor
and
jg
mov
js
mov
loop
lahf
ret
cmpsb
out
and
inc
scas
jecxz
or
repnz
push
jns
bound
int
sahf
loope
adc
inc
test
mov
js
addr16
sbb
sub
sbb
push
jne
pushf
stos
and
ret
dec
jge
into
push
and
mov
push
pop
mov
pop
add
ret
inc
sbb
mov
mov
lahf
andb
mov
clc
push
nop
imul
addr16
add
out
fildll
mov
push
aam
xlat
movsb
add
nop
add
push
repnz
lret
dec
jecxz
or
lcall
mov
push
mov
add
scas
fld
sub
test
dec
xor
into
pop
sub
inc
xchg
sub
push
push
sbb
test
icebp
sbb
jl
add
ss
cmp
hlt
and
sahf
cmp
lock
jbe
pop
std
dec
divl
lock
push
rol
inc
mov
add
add
dec
sub
fsubp
push
lret
decl
ret
sarb
jecxz
outsl
jge
add
add
ret
lea
mov
call
xlat
cmc
pop
pop
in
mov
enter
push
cltd
cwtl
sbb
out
loopne
jno
inc
jmp
fiadds
out
popf
bound
fsubrp
jnp
call
pop
inc
int
sbb
lods
inc
cltd
cmp
je
add
push
mov
mov
pop
add
cmp
xor
out
add
insl
dec
inc
jno
add
ficompl
pop
ss
jmp
incb
xchg
icebp
gs
fwait
cmpsb
dec
xlat
mov
shrb
cmp
inc
xchg
scas
inc
shrb
xor
ja
pop
mov
jmp
cli
inc
xor
sbbb
gs
nop
filds
sbb
int3
mov
stos
xchg
xchg
cmp
xchg
loope
or
jnp
add
mov
sub
add
push
fimull
xchg
xor
jmp
inc
pop
pop
xchg
cs
xchg
xchg
rcrb
test
rclb
pop
inc
lds
pop
shll
repnz
lcall
lahf
and
in
inc
add
sbb
add
jnp
mov
adc
ljmp
es
repz
push
adc
gs
das
outsl
rol
sub
dec
jbe
jo
xor
test
jmp
ja
mov
imul
adc
fildl
push
xchg
ss
lds
testb
pop
mov
loopne
push
cwtl
idivl
xor
push
jnp
adc
subb
sbb
in
jbe
imul
outsl
lods
outsb
sti
sub
int
jle
out
or
mov
add
cmpsb
mov
mov
dec
out
hlt
dec
mov
fdivrl
sub
ficoml
pop
mov
jbe
js
pop
insl
imull
xchg
and
test
inc
mov
push
mov
loop
adc
dec
lret
mov
clc
mov
mov
cmc
arpl
stc
push
lods
fsubrl
data16
sbb
insl
jae
xchg
aaa
adc
or
jae
sbb
test
jle
push
popa
lea
cmp
out
push
cmp
lods
mov
jle,pt
lahf
ds
sub
jmp
dec
icebp
mov
mov
outsl
jmp
inc
push
mov
xor
dec
and
iret
mov
sub
sahf
inc
lret
in
add
add
jnp
cs
dec
fcom
push
clc
fisubrs
aam
into
lds
iret
cmp
add
or
insb
jo
mov
and
mov
fistps
cmpsb
insb
jo
in
rcr
cli
lods
push
adc
inc
insl
mov
pushf
cli
fdivp
add
jbe
icebp
popl
stos
orl
push
jg
inc
in
jl
sub
aaa
mov
fcmovne
stos
sbb
outsb
xor
push
iret
pop
or
aad
sbb
leave
jmp
call
jns
call
ss
xor
sub
lock
ret
orb
rorb
mov
jl
leave
stos
inc
sbb
push
pop
push
lock
add
jmp
sub
inc
in
iret
add
sbb
push
sub
mov
addr16
outsb
push
shl
icebp
mov
dec
xchg
xchg
popf
inc
pop
lret
xchg
negl
mov
lcall
mov
push
or
mov
inc
xchg
inc
or
mov
mov
rcll
pop
mov
icebp
fs
js
aaa
iret
push
mov
jecxz
jl
into
dec
xchg
mov
mov
pop
jmp
ret
out
cmpsl
hlt
push
call
dec
rcrb
pop
lahf
xorl
loope
cmpb
sub
imul
xor
scas
addb
add
enter
insb
clc
cmpsb
aad
dec
arpl
mov
mov
aas
or
fs
ja
xchg
lock
hlt
inc
jmp
fwait
jo
jl
add
inc
xchg
adc
call
stos
aaa
nop
dec
mov
fistpl
cmp
js
add
sub
aaa
icebp
int
cmp
cmp
cmp
test
mov
popf
jnp
jns
pop
mov
push
xchg
mov
mov
push
aam
std
sub
mov
adc
stos
or
sub
imul
lods
or
in
pop
daa
ljmp
bound
jne
dec
shrl
jne
nop
push
pushw
jecxz
ljmp
movsb
push
jmp
xchg
mov
rclb
mov
cld
int
daa
sub
push
es
enter
imul
out
mov
test
into
xor
imul
rcrl
iret
inc
jmp
mov
xor
and
push
dec
hlt
push
sarb
mov
jae
sbb
neg
xor
and
mov
fldl
adc
pop
jg
jge
push
jae,pt
das
xor
gs
cmpsb
jo
mov
and
and
test
pop
test
lretw
out
cmp
mov
pop
stos
lock
jg
notb
jecxz
push
nop
lods
int
mov
sub
imul
sbb
push
je
nop
imul
aam
mov
pop
out
jmp
jno
sbb
dec
add
test
mov
inc
and
fs
and
adc
mov
add
xchg
movsl
mov
adc
push
pop
js
ret
in
jno
arpl
stos
ds
in
adc
pop
push
outsl
lods
addr16
cmp
dec
jns
enter
imul
jns
insl
sbb
popl
js
divl
adc
and
adc
sbb
js
cmp
cmp
sub
lock
lock
int
fstp
sti
ljmp
pop
divb
inc
fwait
lahf
jno
pop
loopne
das
in
and
push
xchg
std
mov
loope
insl
xor
mov
or
inc
cmpsl
sub
inc
cmp
adc
ss
mov
adc
and
xchg
loope
add
test
pop
rcl
mov
loope
sub
xchg
pop
in
repz
xchg
in
hlt
lahf
enter
and
inc
mov
addb
cwtl
inc
popa
push
and
pop
dec
jae
into
and
mov
sbb
imul
ret
inc
lcall
outsb
pushf
push
je
mov
sub
mov
cld
dec
dec
lock
xadd
jbe
cmpsl
and
bound
dec
lret
dec
and
pop
icebp
loope
push
addr16
mov
push
stos
mov
fxch
mov
scas
loopne
call
push
and
push
pop
loope
stos
sahf
pop
outsl
or
dec
pop
adc
or
ficoml
out
ftst
imul
sbb
out
mov
add
and
add
lea
int3
mov
mov
jp
sbb
pop
fucom
movsb
ss
mov
or
loopne
movsb
push
xor
es
lea
rcr
repnz
jl
mov
stos
mov
inc
loop
xlat
in
xor
iret
pop
jl
in
pop
shlb
filds
dec
fs
fdivr
dec
mov
mov
jae
xor
mov
inc
mov
jecxz
and
xchg
rcll
lret
fcomps
fs
in
bound
jp
ja
out
push
mov
call
stos
aad
sbb
or
imul
mov
mov
frstor
test
je
inc
or
xor
negl
fldl
push
imul
mov
js
or
mov
icebp
and
xor
mov
fidivrl
jno
test
std
push
outsl
test
stos
sbb
cmp
lds
ja
inc
xchg
sbb
jg
dec
adc
jmp
fwait
jno
push
outsb
sbb
cmp
cmp
cli
lods
cld
fistpll
fadds
in
xchg
sbb
idivl
add
cmp
jnp
sub
imul
loop
and
cwtl
inc
or
loop
pushf
sub
in
jns
pop
xchg
test
fiaddl
movsb
int3
ss
cmp
adc
lahf
jbe
dec
ds
adc
jb
mov
push
push
mov
mov
pop
mov
inc
sub
imul
adc
sub
fistpll
leave
test
jb
das
or
pop
ljmp
into
hlt
push
lods
lods
nop
idivb
out
test
sub
outsl
cli
in
enter
xor
adc
add
je
mov
mov
push
aam
mov
repnz
sbb
jge
outsb
loope
mov
outsb
adc
fucom
push
pushf
in
or
xchg
mov
jp
sub
jb
leave
jne
repnz
push
cmp
std
fsubl
in
lcall
ja
push
add
pop
lahf
fsubp
add
lods
fwait
jo
mov
leave
xchg
test
outsb
stos
std
mov
mov
sbb
int
scas
mov
adc
cmp
xor
andl
lds
repnz
loop
stc
pop
push
xchg
sbb
sbb
fsubrl
mov
adcl
sbb
repz
push
call
sti
push
dec
popf
ljmp
or
hlt
sub
dec
sub
hlt
mov
clc
xchg
fdiv
lds
insl
jmp
inc
or
movsb
add
cmpsl
mov
dec
negb
loop
xor
adc
xchg
cli
rcrb
push
jp
rcrb
jns
mov
push
or
and
pop
fildl
jo
sti
fmull
pop
xor
adc
dec
or
shlb
enter
pop
lods
or
repz
in
arpl
sub
add
mov
hlt
sbbl
insb
add
repnz
repnz
mov
inc
jo
rclb
loopne
pop
or
dec
fisubrl
push
aaa
not
cld
mov
add
pusha
xor
jge
cltd
jae
push
gs
dec
jo
push
rcr
push
cwtl
out
push
adc
jl
rclb
rorl
in
testb
ds
mov
in
pop
inc
jmp
dec
rclb
inc
adcb
fsubs
negl
sahf
nop
pop
and
and
sub
pop
outsl
sub
or
inc
jbe
sub
xor
daa
imull
mov
js
in
cwtl
mov
mov
xchg
or
test
xchg
jnp
sbb
out
inc
adc
aas
shll
cmp
mov
not
adc
jecxz
push
in
xchg
in
insl
pop
ret
cmp
mov
and
dec
lock
add
and
adc
fidivs
inc
sbb
insl
in
mov
insb
call
sub
sbb
cmpsb
push
sti
mov
mov
into
out
icebp
scas
mov
mov
cmp
sub
jecxz
inc
notl
cmp
mov
jl
adc
push
cmpsl
and
hlt
pop
dec
in
icebp
sub
push
mov
scas
fisubrl
push
xor
and
mov
repz
xor
outsb
mov
cwtl
mov
out
jne
jmp
push
xor
add
outsb
jle
cmc
pop
xchg
xchg
sbb
inc
push
and
shlb
es
cmpsb
dec
sub
ja
mov
push
mov
jne
jae
pop
test
loopne
ret
sarl
loop
in
shll
hlt
mov
loop
ret
push
xor
andnps
cmc
mov
shrl
out
push
pop
pop
icebp
aas
mov
xlat
pop
mov
sub
jl
or
pusha
dec
adc
gs
mov
push
cwtl
mov
cs
ja
loop
stc
cwtl
push
inc
mov
push
add
es
mov
xchg
mov
mov
fs
int3
ficomps
repnz
lods
fbld
jns
ficomps
pop
insb
dec
pusha
stc
negl
xor
outsl
mov
lret
loope
and
xor
addr16
mov
push
loop
adc
pop
loopne
xor
push
scas
cld
ss
add
dec
adc
jae
cwtl
rorb
jo
packuswb
or
xor
enter
in
add
pushf
pop
pop
out
aaa
in
mov
aam
pop
sub
and
nop
nop
jg
lcall
or
subl
mov
sub
stos
enter
out
in
mull
sbb
xchg
fs
fnsave
mov
jno
stc
shl
xchg
out
cmp
mov
sub
popf
pop
xlat
call
adc
xchg
push
jns
sbb
out
test
stos
xchg
idivb
push
das
sti
dec
pop
xchg
mov
push
mov
add
sarb
and
dec
in
sub
pusha
mov
test
or
inc
dec
ficomps
inc
dec
push
loopne
bound
mov
cmp
outsl
pop
mov
push
popa
push
and
xor
mov
pop
les
mov
jge
je
cmp
lcall
gs
icebp
sub
push
inc
ficoml
adc
jo
imul
data16
mov
mov
lock
sbb
addb
mov
imul
mov
xchg
pop
push
clc
push
data16
aaa
lods
add
add
aaa
adc
push
aas
cs
sbb
cmpb
faddp
nop
lcall
sarl
repnz
fcmovnu
mov
gs
push
jnp
ljmp
scas
jmp
daa
iret
inc
out
jle
push
movsl
imul
and
jo
repnz
popf
mov
xchg
inc
push
mov
movsb
addr16
pop
lock
into
cli
arpl
or
es
pop
dec
mov
daa
xchg
or
repnz
fcmovbe
insl
shlb
xchg
or
xchg
aaa
ss
fstps
inc
lods
add
hlt
dec
sbb
adcl
mov
push
push
mov
js
les
jae
cli
push
adc
pop
mov
leave
les
popa
mov
mov
lret
mov
call
movsb
nop
pop
push
imul
sahf
mov
repnz
pop
push
les
add
fwait
pop
jae
mov
jae
mov
cmp
lahf
xchg
or
sub
cmpsb
mov
jnp
popa
sub
inc
or
and
mov
jb
outsl
mov
das
fisttps
insl
mov
xchg
adc
iret
adc
cli
scas
decl
and
and
and
sbb
pop
sbbb
mov
js
pop
jp
cs
js
jbe
or
inc
stos
xor
out
outsb
dec
lds
xor
mov
push
jg
or
rclb
out
push
call
or
add
cli
mov
add
push
adc
clc
cmp
sub
outsb
sub
mov
mull
cmpsl
dec
jne
insl
add
enter
ficompl
cmp
repnz
repz
add
jmp
pop
push
pop
add
test
dec
dec
jge
ret
or
mov
push
mov
mov
ja
adc
mov
mov
clc
jne
cmp
int
adc
imul
je
ss
sbbl
shrb
pop
inc
stos
cmp
roll
or
adc
enter
nop
arpl
push
aaa
fsubl
push
lods
cmpsb
pop
out
cmpsb
imul
repnz
pusha
loopne
add
push
mov
inc
sbb
add
xchg
cmpsl
pop
xchg
mov
sbb
nop
pushf
lods
and
dec
xor
mov
insb
pop
sbb
aam
cmpsb
and
das
addr16
mov
cmovl
push
shlb
mov
test
add
sbb
xchg
loopne
ret
xchg
pop
jle
ficompl
or
andnps
cltd
adc
sahf
ret
mov
std
lods
push
add
bound
test
cld
mov
aam
sub
out
mov
pop
adc
jns
add
xchg
mov
mov
xchg
push
inc
xor
sahf
std
in
mov
rcrb
jae
or
fstpl
or
mov
xor
dec
mov
inc
shll
je
ret
aas
fcmovbe
pushf
out
mov
pop
fcmovbe
insb
or
sbb
bound
call
andl
ret
push
shrb
xchg
sbb
out
ficoml
and
clc
xor
int3
jbe
mov
pop
sub
in
popa
mov
popl
push
inc
aas
jg
and
and
outsl
aam
cli
jbe
adc
jmp
pop
pusha
les
push
pop
and
mov
sti
push
and
aaa
clc
lret
js
scas
lcall
jbe
add
bound
jge
mov
das
xchg
or
xor
mov
jno
mov
stos
mov
push
or
mov
jo
lahf
adc
xchg
cmp
sahf
pop
jecxz
lret
ret
fildl
das
jecxz
lahf
test
and
cld
or
cld
mov
in
jg
sbb
repz
repz
pushf
add
sub
fidivrl
sbb
cmpsb
fcmovbe
xor
in
fdiv
sti
inc
pop
inc
repnz
mov
adc
xchg
jno
sti
and
std
jl
and
pop
scas
cmc
xchg
add
addr16
pop
and
test
and
xchg
pop
addr16
xchg
lahf
scas
xor
call
mov
xor
int
enter
pop
mov
mov
mov
jge
cmpsb
enter
test
jmp
imull
xchg
das
sub
outsl
mov
or
jns
dec
cmp
ror
pop
shrb
je
pop
adc
fildl
mov
psrad
mov
int3
jecxz
ficoms
aaa
repnz
scas
imul
mov
insl
mov
jb
pop
lcall
dec
xchg
mov
xchg
or
add
mov
pop
insw
cmp
xor
in
insb
sbb
std
fstl
adc
leave
sbb
cltd
pop
dec
popa
loope
sbb
pop
repnz
testb
out
cli
xor
stc
or
test
movsl
sahf
xor
jne
out
or
add
fwait
js
or
out
gs
mov
fiadds
cmc
xchg
push
dec
push
cmpsb
dec
jge
das
stos
pop
sbbl
mov
lods
cmp
cwtl
push
popa
ret
cld
lret
push
dec
andb
xchg
loopne
push
rol
rol
iret
xchg
dec
mov
lds
mov
pop
scas
addl
int
pop
mov
mov
mov
xchg
es
and
insb
add
ljmp
shl
mov
and
dec
js
repnz
lret
xlat
sub
jmp
outsl
add
and
notb
inc
mov
xchg
mov
addl
dec
movsb
sbb
sub
pop
loop
mov
test
shll
push
into
idiv
popa
popl
or
jbe
and
sti
in
fdivr
jmp
xor
pop
or
popa
xchg
leave
mov
loopne
or
add
jns
aam
lahf
ret
sub
lods
cld
mov
sbb
ljmp
jo
or
or
lods
mov
das
xchg
jmp
jg
or
sbb
sahf
add
dec
or
and
and
out
aas
bound
frstor
pop
pushf
cwtl
scas
out
mov
sbb
mov
bound
jne
dec
pusha
sahf
lock
outsb
or
stc
sub
pop
mov
test
xchg
in
ss
fldenv
lret
ret
adc
mov
push
mov
inc
decl
ret
movsb
or
xor
shlb
cs
cmp
std
add
sbb
adc
rclb
jns
jb
test
pop
adc
push
bound
or
adc
in
push
dec
dec
jge
popf
mov
inc
in
xchg
mov
add
jae
jae
push
mov
mov
dec
inc
mov
jo
and
popa
and
dec
adc
je
daa
lock
and
outsb
sbb
loop
inc
xchg
stc
test
jp
xchg
es
inc
cltd
out
out
jbe
xor
mov
mov
test
cmpsb
push
cli
or
cmp
jmp
leave
mov
popf
outsl
movsl
sub
popa
or
cmp
nop
push
lcall
jecxz
cwtl
and
or
cmp
js
aam
nop
jo
cmpsb
nop
adc
mov
mov
outsb
push
es
inc
ret
xchg
loope
jg
cmp
bndstx
or
inc
adc
mov
cmp
jo
mov
sahf
jg
jmp
fisttpll
cmp
add
and
jo
movsb
clc
fnsave
mov
ja
and
ret
xchg
adcb
loope
push
lcall
bound
lock
ror
inc
adc
nop
mov
jns
sarl
jecxz
orb
lahf
mov
push
sub
jns
and
push
popf
hlt
lock
cs
clc
inc
out
cmp
fimull
pop
pop
scas
inc
fistpll
and
adc
fsubrl
sub
jecxz
scas
fs
cmp
push
movsb
mov
jp
fistpll
cmp
es
inc
scas
push
or
sti
insb
rep
ds
mov
xchg
into
sub
test
mov
mov
shll
jg
adc
lret
mov
push
cli
sub
or
shrb
jno
xchg
cltd
jo
test
cmp
jb
mov
idiv
out
sbb
mov
add
push
push
push
movsb
pop
pop
stc
xor
mov
lods
inc
fucomi
loopne
pushf
imulb
jno,pn
sbb
pop
lcall
lret
sbb
les
dec
mov
fs
xor
lea
shrl
ds
jle
rclb
sahf
packuswb
imul
int
and
arpl
fwait
movsl
jmp
in
cmp
jb
mov
movsb
or
and
jnp
insb
sub
push
clc
adc
data16
imul
leave
push
pop
leave
fstpl
push
jbe
insl
fadd
adc
nop
dec
jecxz
or
jp
mov
bound
pop
in
jmp
dec
ret
scas
aam
dec
mov
sub
test
or
jp
adc
and
cmpsb
lock
mov
fisubl
xlat
xchg
fwait
mov
push
mov
dec
mov
call
mov
and
aaa
shrl
pop
loop
shl
pop
jle
cmpl
cmpsl
push
mov
ret
les
pop
mov
inc
adc
push
xor
lods
icebp
test
in
lea
jmp
mov
mov
stos
push
or
mov
mov
std
loop,pt
inc
push
dec
xor
pop
xchg
jl
dec
shlb
adc
lret
xor
mov
repnz
lret
lret
xchg
rclb
in
cmp
add
mov
je
pop
and
xlat
fnstsw
xchg
inc
aaa
sbb
imul
adc
sub
cmp
test
dec
test
pop
and
dec
mov
mov
fbstp
rorb
inc
adc
cmpl
xor
xchg
lds
mov
movsl
jp
test
pop
xchg
mov
push
push
mov
sub
lret
stc
arpl
sub
arpl
dec
daa
jl
pop
fisttpll
shrl
and
push
inc
loop
imul
mov
test
xor
xchg
push
add
and
out
xchg
iret
adc
ret
xchg
xor
lcall
mov
sbb
mov
add
jl
mov
pop
mov
sub
sbb
outsb
rcrl
ljmp
dec
or
xor
sbb
push
xor
jge
pop
inc
mov
mov
mov
jb
mov
jne
loop
add
push
je
xchg
nop
paddsb
xchg
mov
push
mov
mov
push
lods
cmpsl
das
jge
push
outsb
out
adc
mov
sbb
and
fildll
cs
pop
inc
inc
loope
xchg
gs
dec
repz
and
icebp
js
les
int3
adc
push
or
add
sub
and
or
js
movsl
inc
adc
lods
div
ds
mov
fs
xor
push
xor
loopne
cwtl
addr16
mov
mov
mov
dec
dec
daa
and
or
add
dec
pop
mov
push
stos
jns
aas
mov
outsb
push
lret
sub
xlat
fnstcw
xchg
add
ljmp
ljmp
icebp
rorb
sub
or
aaa
das
and
jmp
inc
cmc
dec
pop
call
or
pushf
scas
xor
insb
pop
mov
sub
ret
push
std
and
mov
cmp
repnz
xchg
fdivrp
add
xchg
out
hlt
cmpsl
pop
out
push
mov
dec
adc
adc
xor
push
scas
or
fistpl
fwait
lods
fldlg2
movl
sarl
sbb
xchg
aaa
mov
nop
cmp
ja
imul
scas
pop
mov
orb
popf
jle
mov
cmp
adc
pop
xchg
jns
imul
and
fiaddl
xchg
cwtl
sbb
shll
inc
mov
shl
vcvtsi2ssl
or
aas
xchg
sbb
inc
dec
shll
push
mov
cs
aam
xlat
bswap
fisttpll
jo
mov
pushf
addr16
jge
out
sbb
add
psrld
test
jae
and
and
add
int
ret
subl
imul
std
adc
repz
push
hlt
imul
ret
and
cmp
push
gs
mov
or
aad
ljmp
cmp
mov
mov
xchg
or
les
int3
cmp
out
adc
push
mov
mov
pop
rcr
das
fs
inc
pop
dec
in
lock
mov
jge
pop
inc
mov
ja
or
test
xlat
loop
inc
adc
je
dec
pop
movsl
cmp
cmpsb
mov
cli
mov
enter
rcrb
imul
pop
std
mov
cmpsl
aaa
les
or
inc
mov
dec
mov
xor
sti
das
xchg
pop
shl
outsb
test
adc
cmpsb
test
in
jbe
cmp
dec
cmp
sbb
add
jecxz
add
pop
jg
jae
mov
in
cli
and
aaa
nop
data16
leave
push
pop
dec
movsb
test
inc
dec
mov
inc
pop
dec
lods
fidivs
mov
jge
or
and
cmp
jecxz
dec
sub
in
adc
orb
daa
jne
fndisi(8087
adc
popa
fisubrl
or
testl
ret
and
mov
xchg
stc
out
jp
pushf
rep
dec
in
cmp
test
scas
pusha
test
pop
insb
xlat
add
jno
inc
jno
adc
sub
andb
cmpsb
pop
sub
xchg
inc
icebp
and
inc
aam
and
fistps
inc
or
dec
cmp
mov
les
push
sbb
mov
mov
xor
into
or
mov
sbbl
add
lds
push
sub
or
mov
inc
mov
in
je
and
shll
rcl
add
push
cmpsb
or
mov
cmc
pop
push
jmp
dec
push
aad
inc
stos
jecxz
out
or
test
mov
pop
pop
nop
loop
gs
mov
sub
mov
insl
lcall
fcoms
push
and
xchg
les
push
fistpll
cltd
insl
dec
lahf
imul
push
mov
fstl
arpl
xor
xchg
rcrl
dec
ret
ret
insb
sbb
add
inc
popa
xor
rol
cmpsl
call
mov
cmp
nop
cmp
cltd
xchg
jbe
or
xchg
xchg
popa
xchg
push
pop
popa
jle
fisubrl
pop
ret
mov
xchg
xor
out
mov
or
bound
xor
mov
ds
stos
add
shl
push
mov
ljmp
test
sbb
adc
loopne
add
insb
mov
mov
adc
jnp
fwait
into
dec
add
mov
pop
insl
test
xchg
mov
lds
dec
xor
int3
cmp
mov
jg
dec
das
rcr
xchg
mov
fcomps
inc
pop
loop
jnp
cld
ret
jbe
adcl
mov
cmp
mov
dec
mov
xchg
dec
movsb
aas
outsb
data16
lods
int3
mov
aam
hlt
js
adcl
pop
mov
ret
clc
js
lret
dec
inc
add
aaa
aaa
pop
and
jb
push
cmp
mov
dec
shl
jle
mov
inc
ja
cltd
lcall
cbtw
sti
addr16
sub
jbe
lods
mov
mov
sti
sbb
xor
and
push
mov
xchg
ret
xor
jg
dec
lret
jmp
movb
push
in
stos
and
sub
cli
cmc
inc
mov
add
mov
test
jbe
inc
js
sbb
push
pop
adc
popa
push
pop
aaa
mov
mov
adc
push
into
ljmp
dec
pop
sub
leave
les
jae
rol
in
fiaddl
daa
inc
jo
push
dec
mov
aad
stos
insl
push
mov
sahf
out
xchg
jmp
or
add
fisubl
jns
pop
or
mov
push
pop
jno
fwait
jmp
push
les
ret
imul
sub
cmc
jno
inc
loopne
push
cwtl
xlat
dec
mov
sahf
mov
sbb
repnz
dec
stc
aad
nop
push
and
icebp
xchg
inc
test
lcall
hlt
in
das
je
mov
iret
shll
into
cwtl
mov
hlt
add
mov
mov
lock
dec
push
jnp
mov
jno
push
dec
dec
orl
xchg
jnp
inc
adc
pop
push
and
inc
movsl
stos
sub
xor
push
or
mov
loopne
sbb
sub
lcall
cmp
ja
dec
mov
xchg
insl
fwait
aad
and
and
add
push
dec
xor
xchg
lcall
jnp
repz
xchg
adc
xor
jecxz
mov
dec
dec
and
ss
mov
dec
loope
xchg
cltd
add
scas
je
pop
iret
xor
aad
pop
sti
aad
dec
xor
jmp
xor
cltd
mov
gs
sarb
jmp
enter
out
mov
mov
push
int3
inc
jecxz
jmp
sbb
dec
mov
outsb
into
ret
jne
mov
stc
lret
cmp
adc
jle
pop
jae
mov
or
lret
mov
add
xchg
sub
loope
addl
mov
test
out
mov
in
jbe
push
lea
or
push
arpl
xchg
out
cmp
stc
xlat
stos
nop
adc
clc
mov
int3
faddl
push
push
inc
adc
mov
add
test
jle
movsl
sbb
hlt
jo
mov
jmp
pop
lret
inc
inc
je
lcall
aaa
ja
outsb
mov
imul
mov
pop
cltd
push
addr16
std
jns
xor
fnstenv
dec
jle
xchg
cmp
sub
inc
lret
pop
xchg
and
inc
sarl
rcr
in
loopne
mov
and
daa
pop
mov
dec
xchg
xor
mov
and
loop
pushf
rcr
out
push
dec
adc
icebp
ret
and
or
or
adc
jne
mov
inc
inc
sub
adc
sub
stos
fwait
sti
call
test
das
imul
mov
clc
lahf
jo
iret
cmpsb
lods
loope
or
cltd
rcll
cmp
push
aas
cmp
xchg
sbb
stos
cld
lods
arpl
enter
mov
icebp
movntps
loop
xlat
sbb
xchg
xor
addr16
punpckldq
dec
push
ret
push
sub
jae
adc
cmc
aad
pop
jp
mov
cmc
ret
xor
in
sub
je
out
xor
sub
dec
push
roll
scas
mov
dec
add
xor
jne
andb
ret
push
in
imul
mov
cmp
aas
mov
in
lret
push
xchg
pop
mov
outsb
cmpsl
loopne
loope,pt
ret
dec
pop
add
in
out
adc
jp
push
adc
mov
pop
mov
dec
repz
imul
mov
mov
jl
dec
push
inc
mov
sbb
mov
xchg
mov
jae
into
jne
mov
mov
xor
pmaxsw
dec
daa
pop
push
sbb
jmp
sbb
dec
out
sahf
outsl
jmp
xor
or
into
and
sarl
frstor
dec
and
ds
cmp
lods
jae
negl
loop
shl
inc
lock
arpl
xlat
sub
mov
push
push
mov
loope
clc
xchg
aad
sbb
mov
cmp
xchg
mov
out
jge
cs
inc
jns
subl
fistl
push
mov
add
fstl
out
arpl
or
mov
push
enter
jne
mov
add
adc
mov
jns
lret
xchg
icebp
sub
into
ret
push
dec
andl
mov
or
push
mov
adc
mov
and
aas
pusha
sub
addr16
sbb
cmpb
cmp
movsb
dec
and
inc
or
push
int3
cmp
mov
jnp
mov
data16
ret
int3
sbb
ret
or
mov
add
out
mov
subl
adc
dec
fstp
jge
call
mov
fdiv
bound
adc
dec
inc
icebp
or
mov
fstpl
inc
xchg
sub
aas
dec
inc
fisubrs
int
or
movsb
fldcw
scas
jnp
mov
sub
xchg
pop
adc
mov
jecxz
fstpl
adc
movsb
lods
fnstcw
dec
add
dec
rorl
pop
or
or
addl
mov
sbb
xor
shrb
fdivr
test
push
repz
adc
jb
popf
xor
je
jno
fs
clc
out
xchg
and
out
stc
and
loopne
cmp
sti
cld
mov
fistpll
push
lea
or
dec
mov
aaa
or
pop
out
repz
xor
adc
sbb
or
jno
test
jae
sbb
cmp
ret
pop
pop
mov
lret
pop
adc
stos
loopne
aam
fsub
mov
sbb
ds
inc
loope
stc
lret
mov
cmp
fsubs
out
xchg
aad
xchg
stc
ljmp
push
xor
cmp
sti
ds
in
cmp
stos
or
loope
xlat
mov
sub
fdivrs
mov
test
jae
arpl
filds
mov
sub
and
dec
leave
push
shlb
mov
leave
add
enter
leave
vpmaxub
mov
add
push
int
fwait
pop
inc
mov
scas
outsl
inc
outsl
inc
inc
mov
mov
and
lahf
and
dec
je
jno
test
in
and
loopne
inc
sbb
mov
dec
fstl
jae
push
imul
pop
sub
cmpsb
jg
mov
xchg
insb
jp
cmp
jmp
loope
aad
ret
clc
ret
cmp
out
jae
jo
scas
inc
mov
test
int
cmp
jmp
mov
add
cmp
mov
lds
xor
jbe
sbb
stos
aaa
out
sbb
fmull
sub
ds
rolb
cwtl
add
test
xchg
jns
repnz
repnz
inc
std
jmp
popf
cld
leave
inc
mov
mov
cmp
popf
imul
pop
cmp
pop
cmp
or
push
mov
cmp
push
rcrb
sarl
setno
mov
test
das
xlat
add
ja
ret
adcl
in
pop
jno
adcb
xchg
jb
fwait
push
sbbb
xchg
xlat
or
jp
in
inc
xchg
sbb
sub
out
dec
jbe
xchg
dec
push
movsb
pop
mov
jnp
push
enter
in
adc
shr
stc
call
sbb
test
mov
cmp
inc
or
push
sub
cmp
test
jp
pusha
test
or
cld
mov
inc
or
mov
lahf
mov
incb
fstps
fcmovnb
imul
cmpsl
cmp
int
mov
cmp
jl
lods
or
es
in
xlat
dec
adc
fimuls
jbe
aam
pusha
dec
xchg
movsb
cmp
push
shll
push
sbb
adcl
xchg
pop
ja
popf
mov
jecxz
push
dec
adc
push
jg
and
push
je
dec
aas
out
and
or
ss
ljmp
mov
pop
sub
push
shl
das
leave
in
insl
orb
fwait
and
lods
sub
sbb
mov
scas
lds
add
out
mov
shlb
ja
sub
stc
das
cmc
sbb
fcomps
notl
jle
sbb
pop
and
test
out
lret
icebp
lret
decl
inc
inc
sbb
xchg
dec
sti
pop
mov
jl
stos
sub
mov
cwtl
jno
out
cmp
push
lock
mov
pop
xchg
cltd
mov
ss
push
sbbb
xchg
cli
andl
push
lcall
sub
pop
jo
ss
pop
cmpsl
fmulp
inc
fcmovnb
test
mov
sbb
outsb
dec
xchg
adc
dec
sbb
lret
subl
dec
mov
inc
ja
aad
jae
sub
repz
popf
jo
pop
dec
pop
lcall
dec
push
or
test
lcall
sbb
fisubrs
cmpsb
pop
imul
inc
sub
add
shll
mov
iret
lock
sub
sub
adc
pop
test
call
dec
pop
lock
iret
loope
aam
ljmp
adc
xor
pusha
ljmp
call
in
pop
dec
orl
loope
adcl
push
cmpsb
cs
lret
mov
clc
jmp
cmpsl
mov
lcall
mov
push
les
jno
push
lret
pop
dec
push
mov
jl
in
jecxz
divb
call
mov
lods
dec
and
out
push
mov
mov
jge
ljmp
imul
dec
dec
xorl
pop
mov
in
pop
and
adc
or
sbb
xchg
lds
jle
cmp
lret
adc
push
fdivr
sbbb
lods
fcom
and
popa
das
fisubrl
mov
in
daa
pop
mov
ja
jmp
pop
insb
std
pop
mov
xor
jno
xchg
adc
push
imul
adc
les
cwtl
push
mov
repz
ja
jno
adc
cmp
int3
jl
pop
and
imul
xor
inc
pushf
cmp
mov
je
inc
xchg
dec
call
jp
ret
and
lahf
lcall
or
pop
sub
fnstcw
mov
or
ret
adc
mov
inc
daa
scas
jne
rol
data16
fidivs
lea
iret
scas
mov
jb
push
xor
arpl
iret
add
mov
data16
sbb
or
pop
adcl
pop
mov
scas
ja
pop
xorl
pop
sahf
sti
fdivs
dec
sub
mov
lds
xor
mov
mov
sbb
and
or
enter
sub
in
out
leave
xchg
cltd
les
popa
mov
adc
popa
xchg
dec
notl
mov
xor
xchg
cli
fidivl
sub
shlb
es
dec
imul
xchg
jmp
loopne
sbb
lock
imul
or
aad
aaa
add
cmc
repz
xchg
mov
popaw
push
adc
repnz
xor
out
dec
mov
test
lret
xchg
call
sbb
rcrl
or
pop
ljmp
push
sbbl
and
mov
add
sub
dec
pop
divl
es
jns
ret
xor
stos
adc
jo
pop
mov
fwait
inc
mov
stos
cmp
dec
pop
popf
lea
dec
shl
cmp
repz
les
xor
lcall
cs
les
imull
arpl
xor
jno
push
cmp
movsl
daa
xchg
xchg
outsl
push
iret
inc
push
push
pop
push
push
cmpsb
xchg
dec
sahf
inc
cmp
xor
inc
ljmp
pop
aad
mov
push
loop
mov
fcom
fidivl
pop
in
xchg
mov
mov
mov
outsb
inc
repz
jo
adc
sbb
stc
shlb
push
enter
sub
push
sub
sbb
sbb
bound
cmp
les
mov
int3
incl
xor
stc
test
cli
outsb
popa
scas
adc
aam
sbb
push
movsb
scas
jb
repnz
cwtl
lahf
mov
stos
pop
cmp
fnstenv
lret
jae
gs
jmp
push
adc
adc
sub
mov
mov
add
cmpb
push
lret
sahf
jmp
push
dec
shl
mov
clc
movsb
jl
stos
rcl
daa
and
cmpsb
pusha
and
push
inc
dec
pop
repz
out
insb
cmp
jmp
stc
scas
or
push
shrb
cwtl
rclb
loope
scas
cmp
pop
aam
mov
xor
repz
jg
adc
xchg
mov
lods
pop
adc
xor
adc
enter
or
scas
jno
jle
mov
and
and
add
jo
test
lods
cwtl
int
xor
mov
addr16
pop
lea
dec
add
scas
xor
fstl
pop
pop
jo
lcall
fimull
es
loope
push
mov
pop
fwait
cmp
arpl
sub
aad
xchg
xchg
insb
fstpl
jecxz
arpl
jbe
and
aad
cmpb
or
add
fdivrp
fnstenv
dec
loopne
sbb
jno
add
pushf
sbb
or
xor
xlat
jne
sbb
cltd
arpl
cmp
cmc
leave
insl
lods
add
rolb
mov
sub
push
and
pop
lahf
mov
xchg
push
mov
js
mov
nop
scas
lret
mov
push
test
cmp
adc
cltd
leave
arpl
push
pop
ret
call
adcl
adc
xchg
cmp
jo
xchg
jmp
out
pop
mov
add
fnstenv
inc
pop
adc
sbb
mov
sarb
mov
jmp
es
push
rclb
movsb
jmp
aad
stos
push
push
cmp
lods
mov
push
sub
leave
aaa
adc
and
pop
int
hlt
sub
fisttpl
ljmp
push
popa
jge
call
mov
sub
jg
shll
add
xchg
flds
insb
mov
out
dec
aam
fistps
jno
xchg
hlt
nop
push
cmp
pop
push
add
sub
aaa
insb
xlat
adc
outsl
loope
out
push
adc
or
mov
sub
in
cmpsb
dec
mov
mov
fsts
xchg
arpl
fwait
jne
jle
loope
out
shlb
jb
jo
test
scas
aaa
jp
sub
rclb
jnp
xor
sbb
sbb
lock
out
popa
xchg
mov
call
cs
test
ret
or
cwtl
adc
jle
dec
jmp
push
addl
lret
cmp
je
xchg
jne
jae
cmp
mov
dec
mov
inc
outsl
push
lret
push
shrl
jp
nop
fwait
divb
mov
xchg
out
mov
mov
push
dec
sub
jo
add
pop
and
mov
lods
xor
test
xlat
mov
mov
aaa
adc
outsl
std
mov
ret
jae
xchg
shlb
mov
andl
and
roll
cmp
or
in
mov
or
and
cli
andb
sbb
add
mov
jle
pop
daa
pop
test
mov
or
mov
pop
sbb
sub
mov
add
jo
xchg
mov
lahf
push
insb
push
cmpsb
mov
fisttpll
int3
mov
cmp
mov
push
sub
cmp
sarl
xor
leave
iret
xchg
xor
test
and
add
jo
faddp
xor
ret
inc
adc
jmp
mov
in
stc
push
xor
bound
addr16
sbb
repnz
xchg
fists
and
dec
jne
jnp
pop
insl
mov
and
mov
cmp
or
sub
mov
int
cmp
push
sbb
faddl
mov
add
add
stc
xchg
dec
mov
push
scas
xor
aas
std
sbb
pop
mov
enter
repnz
mov
jecxz
push
inc
into
scas
ficompl
ds
xor
lock
rcrl
mov
shlb
sahf
sub
hlt
push
xchg
sbb
shl
sub
neg
movsb
mov
xchg
jae
loop
dec
dec
mov
inc
enter
pop
mov
fcmovne
jo
sti
xor
std
dec
fistpll
hlt
adc
add
shll
in
pop
fdivrp
sub
xlat
jmp
out
or
or
roll
inc
cltd
aam
iret
add
test
xlat
cmpsl
xchg
sbb
rcrb
cld
loope
push
dec
fisubrl
sbbb
push
lock
test
or
dec
data16
xchg
mov
sbb
mov
xchg
mov
lahf
xchg
cs
cltd
mov
mov
or
cld
imul
cwtl
push
dec
mov
loope
inc
pop
mov
push
jle
sub
mov
xor
sbb
or
cltd
in
adc
aad
sbb
aad
add
je
fidivs
pop
mov
inc
pop
pushfw
or
lods
repz
xchg
decl
xchg
add
insl
int3
mov
incb
sbb
dec
push
into
and
jo
das
fs
and
inc
mov
int
xchg
sbb
stos
repz
xchg
dec
cmp
cmp
cmpb
add
dec
mov
or
rorl
repnz
push
mov
pop
cmc
push
fdivl
jno
mov
or
call
ljmp
ja
pop
mov
lods
loop
cwtl
ja
jne
inc
lods
xor
std
mov
jmp
adc
or
cmpsl
inc
insb
clc
adc
jae
stos
adcb
cmp
lods
mov
movsl
sub
sbb
mov
mov
sub
push
xor
icebp
xor
mov
dec
lods
imul
adcl
orb
inc
push
jbe
mov
xchg
lds
roll
movsl
sbb
fs
outsl
sub
add
cs
stos
jae
ss
cmp
popf
jge
mov
or
cs
and
mov
mov
bound
scas
add
loop
add
or
bound
lea
leave
xchg
js
and
sub
fsubs
loop
and
mov
fsubrl
sbbb
stos
cwtl
out
addb
jmp
mov
ror
sbb
loop
iret
xor
sub
ljmp
mov
out
mov
rcll
ja
xor
mov
mov
stos
jae
or
cmp
std
popa
push
push
or
repz
jne
add
pop
mov
scas
dec
sbb
movsl
push
bound
cli
mov
cmp
popf
sbb
adc
sub
inc
and
lock
leave
fiadds
mov
add
jb
mov
test
mov
shll
xor
cmpsl
pop
insl
sub
dec
push
sub
pop
imul
xchg
and
dec
stos
mov
bound
add
pop
and
incl
imul
add
call
push
pop
pop
shl
lahf
xchg
mov
pusha
jo
push
outsb
adc
push
jbe
pop
mov
mov
test
mov
adc
mov
clc
dec
xchg
xchg
fs
pop
mov
rolb
sub
or
push
hlt
add
sub
ss
xchg
jle
pop
mov
dec
test
dec
div
jecxz
add
and
dec
pop
js
jae
push
aad
in
aam
cli
cmpsb
cltd
js
jns
sub
fistl
pop
jle
mov
stos
mov
mov
mov
mov
cmp
sbb
imul
jg
adc
insb
adc
sbbb
dec
pusha
fs
call
es
int
mov
dec
cltd
call
pop
inc
lods
push
imul
adc
outsb
outsl
jne
jbe
jp
call
sbb
push
push
adc
fimuls
sbb
lret
mov
cmp
hlt
aam
mov
sbb
push
pop
pop
cmpsb
jmp
push
sub
sbb
es
fldenv
or
mov
push
mov
add
mov
mov
aam
xchg
mov
test
mov
and
ret
je
test
test
lcall
jae
and
lds
cmp
fdiv
fs
das
clc
inc
cmp
and
cli
inc
jne
xlat
inc
inc
or
sub
pop
test
mov
clc
out
orl
loop
sbb
cmp
mov
fcom
push
daa
cld
popa
adc
lods
dec
lret
mov
jecxz
fmulp
enter
mov
movsb
arpl
cmp
les
jge
or
inc
cld
pop
add
jl
mov
sbb
insb
and
gs
sub
dec
sti
insl
push
clc
adc
adcl
xor
cmc
xlat
xchg
adc
or
js
clc
xor
jmp
mov
in
jb
mulb
xchg
fiadds
jo
or
jae
fwait
xchg
fst
cmpsb
test
and
aad
out
mov
mov
mov
hlt
idivl
gs
jbe
or
inc
dec
dec
scas
mov
add
inc
sbb
pop
cmc
jecxz
popa
or
mov
clc
adc
mov
divl
mov
outsb
jne
stos
add
sbb
push
cwtl
nop
sub
call
and
int
xchg
lret
pusha
xor
push
adc
inc
nop
mov
lahf
ja
loopne
mov
clc
or
cmpsl
mov
imul
jb,pn
xor
add
lahf
dec
mov
adc
sub
or
ss
and
jl
add
scas
gs
adc
fimuls
les
xchg
sbb
sub
lea
jb
inc
or
jbe
push
popf
mov
pop
sub
clc
fiadds
ret
das
lods
in
xchg
push
ja
fdivrl
push
mov
imul
ss
mov
into
push
fnstenv
js
mov
lcall
adc
dec
lret
je
push
xor
fildl
mov
shlb
stos
sbb
dec
clc
repnz
inc
fadds
jmp
pop
pop
xor
mov
xor
dec
inc
xchg
add
imul
mov
fwait
add
insl
js
add
in
divl
cmp
cmp
cs
ret
arpl
mov
fstl
sbb
push
jnp
int3
xchg
repz
adc
jl
sbb
mov
movsl
dec
dec
orl
shl
std
mov
fldt
mov
test
jb
orb
push
inc
test
cmp
data16
ljmp
cmp
push
inc
mov
sub
sbb
mov
or
jo,pn
xor
and
es
dec
gs
rcll
mov
mov
mov
mov
inc
jnp
mov
and
in
movsb
cmp
adc
imul
or
out
test
mov
xchg
div
sbb
insb
inc
es
mov
shlb
aaa
sahf
stos
mov
test
bound
and
jge
cld
movl
and
cltd
and
pop
or
shl
test
pushf
out
dec
in
sbb
sub
jbe
jae
push
pop
repnz
mov
je
repnz
push
mov
add
sbb
push
cmp
inc
mov
add
sub
std
adc
mov
inc
xchg
lea
sti
add
into
add
xchg
enter
cmp
mov
loope
jg
sub
mov
pop
sbb
rolb
pop
inc
fwait
jbe
mov
aaa
in
repz
notb
add
loope
dec
mov
cs
out
and
lods
lret
imul
cmpsb
mov
in
int3
xchg
lea
adc
je
jge
test
xor
pop
out
cmpsl
xlat
testl
push
leave
jne
nop
lods
jb
jmp
mov
cmp
sub
add
mov
jl
in
mov
sub
iret
mov
outsb
in
jecxz
mov
bound
jmp
hlt
pushf
call
into
add
cwtl
mov
pop
xor
sub
test
jns
test
rolb
push
xchg
or
mov
dec
mov
lods
mov
mov
inc
iret
pop
les
jns
lahf
rcr
pop
xchg
into
push
add
bound
pusha
dec
or
movsb
mov
shlb
mov
add
mov
fldcw
xor
pop
je
xor
ss
int3
jmp
call
negl
inc
loope
cmpsb
int3
sbb
movsb
cltd
cmp
jmp
mov
cmc
bound
jl
test
dec
dec
mov
ret
leave
call
cmc
mov
clc
or
or
movsb
pop
and
or
decb
fxch
stos
loopne
lahf
aad
mov
lods
loop
mov
xor
out
cwtl
repnz
dec
xor
jns
inc
xor
cwtl
push
out
sbb
mov
pop
repz
out
fists
fildl
fwait
js
stos
adc
cmp
dec
xchg
sbb
inc
roll
loop
stos
fsts
mov
rorb
pusha
jbe
push
jle
cmc
ret
fcompl
inc
jbe
add
fidivs
xchg
push
aas
bt
pushw
rclw
push
std
jmp
mov
push
lret
sub
mov
stos
mov
mov
addl
rorl
out
dec
lds
mov
jb,pt
popf
dec
movsb
add
aas
sbb
arpl
xchg
cmp
loopne
sbb
inc
pop
stc
ficomps
xor
insl
sub
push
sbb
lds
dec
repnz
call
cs
int3
lcall
push
mov
lea
test
lcall
mov
lahf
xor
test
sbb
jns
dec
sbb
mov
mov
pop
call
adc
or
and
inc
xchg
stos
push
outsb
or
icebp
out
lods
jg
dec
ja
inc
loop
jne
into
daa
mov
pop
mov
dec
jbe
call
mov
jl
in
or
js
je
mov
into
sbb
rcrl
es
xor
setl
sbb
xchg
jle
test
cwtl
cli
mov
sub
lods
mov
enter
sbb
sub
rcrl
jne
mov
mov
mov
dec
cli
adc
inc
mov
add
repz
inc
bound
push
cwtl
jae
cmp
mov
fstp
or
repnz
daa
dec
jg
outsb
cli
jo
lods
xchg
insb
cltd
insb
mov
xchg
ret
xor
add
cmpsl
cmpsl
movsl
cltd
dec
dec
repz
add
fwait
and
pop
aad
fnstcw
sbb
stc
pop
mov
add
or
das
out
pop
out
mov
popa
adc
adc
roll
loope
or
dec
cmp
jns
jmp
sbb
cld
inc
loop
ja
cmp
cld
adc
ja
xor
add
pop
sub
les
ljmp
push
and
mov
subl
enter
iret
fs
adc
lret
xchg
inc
and
stos
mov
xchg
in
push
cmp
mov
adc
xchg
sbb
or
jnp
xorw
std
xor
xchg
push
mov
in
sub
xchg
aad
loop
arpl
in
xchg
outsl
mov
out
into
roll
das
movsl
frstor
cs
fiadds
lahf
add
adc
mov
test
js
test
outsl
jbe
xor
in
dec
mov
pusha
and
xor
decb
arpl
insb
push
inc
mov
sub
aaa
push
dec
out
adc
scas
sub
and
bnd
sbb
sub
fldenv
sbb
shrb
push
add
mov
mov
pop
adc
jl
mov
cmpsl
xchg
mov
dec
or
xchg
imul
push
scas
jmp
sub
movsb
mov
hlt
mov
push
jmp
inc
pusha
push
aas
je
push
std
rcll
jbe
adc
paddusw
sub
sbb
jae
mov
mov
adc
or
or
iret
xor
lcall
int3
mov
xor
pop
call
jae
jp
test
cmp
inc
aaa
xor
sub
add
or
fbld
leave
mov
push
push
jge
xchg
pop
repz
popf
dec
add
das
dec
xlat
mov
sub
stos
testb
dec
xchg
icebp
out
jp
outsl
mov
popa
push
push
lret
cmp
dec
jmp
aad
xor
mov
xor
cmpsb
rorl
sub
and
sbb
push
pop
sub
jle
sub
movl
fcoml
push
xor
and
mov
ds
jg
inc
pushf
ss
jle
repnz
pusha
fpatan
popf
nop
xchg
push
cmp
mov
out
cmp
jge
mov
cmp
nop
clc
int
arpl
inc
sbb
cmp
out
pop
mov
ret
jbe
add
fcomps
jne
push
mov
cmpsl
pop
push
jecxz
dec
les
test
ja
out
sbb
lods
iret
add
cmp
xor
pop
adc
cmp
jnp
ret
mov
push
adc
jge
sub
outsb
mov
leave
cmp
pushf
jnp
cmp
mov
fidivrl
fwait
inc
pop
shlb
cmp
fsubs
cmp
pop
jecxz
jns
pop
jmp
sti
sub
jle
leave
dec
adcl
sahf
in
sbb
mov
nop
scas
cli
stc
xchg
ret
or
stos
in
pop
xchg
sub
push
es
xchg
lret
push
mov
adc
fwait
xor
jg
jmp
scas
scas
imul
pop
sbbb
cmp
loop
in
loopne
push
sbb
adc
xor
sar
out
addb
sbb
and
sub
mov
cwtl
jno
sbb
push
rcll
mov
cmpsb
and
mov
mov
mov
sbb
push
adc
popf
nop
rclb
mov
push
sbb
or
cmp
mov
xchg
pushf
and
adc
nop
pop
aam
inc
subl
xchg
insl
dec
inc
add
mov
dec
ja
mov
and
ss
or
stos
fistpl
das
add
jmp
mov
insl
sub
inc
cmp
add
inc
sub
cs
and
fs
insb
sub
xor
xchg
jo
aad
mov
jp
arpl
fsub
js
dec
jns
shlb
aaa
add
mov
clc
inc
mov
scas
es
jl
mov
inc
cmpsb
pop
popa
sbb
inc
test
pop
push
das
ljmp
hlt
sbb
in
mov
aad
cld
ja
xchg
sar
test
xchg
movsl
shrb
das
outsl
and
test
stos
mov
clc
sahf
jcxz
roll
pop
shlb
inc
imul
mov
incl
fsubp
sbb
jp
or
cmp
or
fstp
and
cmpsl
mov
lahf
clc
xchg
sarl
cmpsb
nop
sbb
add
jg,pn
mov
xchg
cmp
daa
sbb
fs
dec
mov
mov
push
fdivrl
add
or
sub
rorl
mov
mov
jae
xchg
fsub
test
pusha
sbb
daa
movsb
and
out
repnz
dec
xchg
or
cwtl
call
lcall
in
mov
lahf
xchg
mov
dec
rcll
push
pop
loop
adc
stos
push
aam
clc
inc
inc
mov
pop
pop
dec
out
mov
lock
sub
ss
mov
pop
cmpsb
xchg
push
clc
pop
fadd
adc
stc
popf
imul
or
idiv
and
or
sarl
in
test
mov
outsl
cmc
aam
inc
das
orb
xchg
addr16
out
push
aam
cmp
popf
xchg
cmpsb
xchg
inc
or
and
mov
sbb
arpl
and
ja
mov
sub
jecxz
inc
fstpt
lds
outsb
bound
rorl
sub
out
push
push
mov
out
out
add
pop
rorl
jae
and
test
xchg
gs
sbb
pop
and
mov
insb
idivb
push
pusha
lds
scas
mov
pop
cmpsl
idivb
mov
sti
jns
push
inc
sbb
fcmovbe
pop
push
or
dec
and
dec
mov
sahf
adc
fcoml
cmpsb
flds
mov
mov
loope
int
and
lret
add
cltd
js
push
loope
ds
pop
inc
mov
popf
outsb
or
std
mov
scas
mov
adc
into
jnp
sahf
movsb
sbb
test
mov
mov
bound
pop
mov
dec
add
cltd
and
movsl
xlat
sbb
arpl
idivb
out
jns
flds
xchg
loope
pop
pop
pusha
xchg
lcall
out
lret
sub
jl
mov
jnp
rclb
ja
in
jmp
outsb
test
lahf
push
loop
fists
mov
hlt
leave
adc
mov
cmp
inc
push
mov
into
cltd
sbb
int3
mov
imul
or
fimull
jmp
mov
aam
cld
jbe
rorb
inc
sarl
inc
or
cmpsl
lock
mov
pop
push
dec
and
inc
in
inc
mov
mov
bound
mov
xchg
or
jnp
aas
dec
mov
repz
aad
xchg
loop
mov
xor
popa
push
mov
jbe
or
sbb
daa
and
inc
inc
cmp
mov
lds
and
cmpsl
push
add
jle
xchg
xchg
and
adc
pop
rcrl
icebp
add
inc
jecxz
adc
out
cmp
mov
mov
das
mov
cld
sub
add
subb
xor
and
push
mov
das
out
outsb
int3
sbb
and
flds
xlat
adc
in
xor
mov
push
or
cmpb
std
dec
fucomp
cmp
or
mov
lcall
call
imul
push
add
mov
adc
in
fmull
dec
sub
dec
adc
data16
push
cmpl
pop
test
and
add
lret
mov
dec
clc
mov
in
std
dec
lods
imul
or
out
test
int
and
aad
inc
mov
in
sbb
cs
inc
icebp
and
mov
out
insb
mov
rcll
push
leave
lods
insl
pop
mov
mov
cwtl
pop
push
mov
cmpsb
mov
cmc
xor
push
dec
pushf
push
push
sahf
imul
into
test
mov
sub
add
xchg
push
sbb
dec
in
jb
and
cmp
mov
std
sbb
shrl
jo
xchg
imul
cmpsl
cmp
pop
out
pop
xchg
inc
or
xorl
repz
call
out
mov
push
inc
mov
pop
jl
jb
fidivl
ss
mov
push
push
ja
js
xchg
ret
mov
push
stos
repnz
roll
popa
xchg
xchg
jns
sub
mov
fldcw
jecxz
jmp
sub
or
aaa
es
cmp
lods
shlb
add
ret
mov
movsl
std
sahf
jge
arpl
in
dec
es
rorb
outsb
enter
loopne
mov
hlt
les
das
push
jo
roll
lock
jl
and
inc
and
or
lea
sbb
cmp
fnclex
mov
sbb
lods
lods
lret
aam
or
cmp
jno
dec
imul
test
in
add
std
xchg
out
ljmp
mov
test
mov
cmc
sahf
movsb
mov
sub
repnz
sbb
sub
sbb
in
int
adc
xor
aas
inc
sub
add
sbb
sbb
lcall
adc
cmp
pop
sahf
mov
out
clc
lods
mov
add
arpl
das
sbb
test
xor
jle
pop
jp
push
mov
lea
fwait
call
pop
inc
xchg
aad
pusha
jno
js
cld
fs
sub
gs
loopne
fidivrl
sbb
push
or
mov
loopne
call
push
dec
xchg
es
out
mov
fnstcw
mov
push
les
add
clc
jmp
bound
mov
inc
out
sub
inc
int
fisttpl
and
movl
jmp
cmpsl
add
xor
into
jnp
xchg
cmpsb
imul
push
pop
clc
xchg
lcall
xchg
and
inc
dec
pusha
add
pop
push
sub
icebp
addr16
xchg
sub
xor
insb
aad
rcrl
imul
dec
inc
mov
lahf
dec
les
insl
xchg
xlat
jmp
jle
push
fstpt
fnsave
push
movsl
sub
mov
loope
mov
test
or
and
out
leave
ljmp
xor
lret
subl
or
fidivrl
add
add
daa
daa
fsubl
aam
lret
mov
in
add
decb
ret
mov
es
aaa
sub
push
lcall
mulb
cld
inc
inc
out
std
mov
push
aad
mov
and
lods
pop
mov
jno
pop
cmp
dec
jno
jno
or
ljmp
add
or
xor
inc
lahf
je
scas
or
add
ja
mov
or
insl
int3
push
andl
cmpl
jnp
dec
sarl
fs
jle
scas
fstl
and
lods
jns
les
int
sbb
fidivs
sub
imul
xor
in
cmp
inc
leave
orl
inc
cmp
imul
jmp
inc
jcxz
rorl
and
lret
adc
dec
sub
fwait
shll
sub
xor
or
xchg
cltd
pusha
inc
mov
jae
mov
xchg
inc
pop
mov
add
arpl
ja
mov
hlt
fisttps
pop
fmul
sbb
mov
and
nop
fs
cmpsb
mov
shlb
mov
pop
insl
lcall
adc
insb
jno
mov
dec
cwtl
cmc
pop
in
inc
out
mov
mov
bound
jno
mov
cmp
ja
mov
adc
loop
cs
jp
push
mov
movsb
pop
sbb
mov
push
fnstsw
push
int3
mov
in
pop
pop
and
add
lahf
int3
outsb
cld
and
or
stc
outsb
mov
imul
mov
inc
fcoml
leave
dec
jmp
xchg
sub
adc
clc
mov
lock
leave
in
rcll
cmp
in
push
dec
arpl
loope
cmp
fbld
je
test
and
fs
out
dec
inc
inc
cmpsl
outsb
jnp
lcall
pop
scas
test
std
fbstp
push
push
xor
push
out
lret
jge
shl
arpl
mov
pop
mov
cmpsb
cld
add
inc
adc
xchg
mov
das
jne
mov
rorb
lcall
gs
insl
xlat
fdiv
sahf
add
inc
hlt
xchg
add
shll
fs
insb
xchg
xchg
faddl
out
or
punpcklbw
or
stos
dec
popl
sub
pop
scas
icebp
inc
cld
push
lds
mov
mov
negl
js
sub
out
scas
mov
pop
test
test
mov
icebp
pop
jmp
cld
rol
insl
mov
in
and
mov
vcvtdq2pd
xor
in
leave
pop
movsb
add
jmp
rcr
sti
inc
dec
push
dec
ret
cld
mov
movsl
ror
in
imul
hlt
addr16
xchg
adc
fdivrs
jp
sbb
push
insl
mov
pop
outsb
dec
xchg
nop
out
push
xchg
daa
out
mov
inc
fidivrs
mov
mov
push
loop
add
stos
xor
pop
adc
cmp
jne
js
jg
pop
rcr
sahf
lea
pop
adc
sbb
xor
fdivrl
outsl
jne
dec
outsl
mov
in
sub
add
bound
int
lret
fldenv
push
cmpsl
ret
mov
push
cmp
and
arpl
shl
xor
out
inc
cli
lahf
sbb
add
cmpsl
cmpsl
mov
xor
mov
iret
rclb
xchg
xor
bound
push
test
cmp
jmp
push
xlat
iret
orb
lahf
enter
in
mov
cmp
aad
stos
mov
pop
cli
sarb
sub
cltd
imul
ror
or
in
out
out
aaa
enter
cmp
sbb
adc
int
sub
pop
cmp
cmp
jb
mov
inc
sub
mov
add
or
pop
cmp
int3
imul
fisubrs
outsb
rclb
push
sub
aad
lea
lcall
pop
pushf
mov
xchg
iret
xor
and
push
inc
mov
pop
pop
add
add
inc
gs
popf
mov
ss
mov
rcr
and
adc
fsubl
outsb
scas
xor
push
dec
cmp
add
dec
decb
sahf
sahf
es
mov
test
cld
mov
jle
loop
push
adc
pushf
xlat
cld
inc
lea
imul
sti
dec
out
repz
cmpsb
mov
jae
add
aam
xchg
iret
and
js
mov
adc
test
mov
dec
sub
fcoml
jl
roll
fdivs
jnp
pushf
inc
out
test
mov
push
or
jne
xchg
ficoml
in
mov
add
mov
or
dec
jp
mov
addr16
adc
mov
jl
cld
loop
sahf
mov
adc
inc
cmp
and
arpl
les
lea
iret
test
sbbb
fcoml
mov
cli
int
fidivl
sbb
loop
addr16
pop
xchg
sbb
xlat
dec
sbb
push
ret
push
add
repnz
in
arpl
jp
and
fists
jle
stos
imul
ret
jns
fcmovne
rcrl
adc
add
lahf
push
sbb
xor
cmp
add
ret
mov
pushf
mov
sub
aaa
pop
gs
jae
ss
push
test
test
inc
enter
mov
jmp
xor
fldcw
popa
mov
call
and
fcoml
int
or
push
push
ficompl
sbb
daa
arpl
add
js
jo
lret
xor
mov
xchg
xchg
insb
lods
ret
jb
dec
cs
mov
pop
int
jg
stc
mov
jp
xor
sub
cmpsb
cmp
rcll
push
cli
adcl
mov
xor
stos
adc
int
inc
es
or
outsl
push
dec
lock
arpl
cmovl
jns
cmpsb
add
pop
out
mov
fimuls
bound
xlat
sub
sub
and
int3
push
rolb
xchg
push
out
gs
inc
mov
and
int
in
sbb
in
or
and
mov
pop
imulb
pop
push
xor
sbb
test
pop
je
sbb
test
mov
js
mov
pop
shll
push
cmp
sub
push
aas
mov
cmp
inc
test
jmp
inc
cwtl
mov
sub
les
leave
daa
call
fbstp
add
js
ja
and
outsl
sbb
mov
imul
mov
mov
jp
pop
aas
rorl
lcall
insl
mov
call
mov
cli
ja
test
mov
dec
dec
sbbl
jecxz
js
out
add
pop
rclb
mov
xchg
ja
and
add
sub
leave
sub
testb
xchg
xor
sbb
push
cmp
jae
les
lods
mov
divl
shrl
iret
fidivl
adc
xlat
js
rcrb
dec
dec
push
aam
popf
dec
das
nop
xchg
pop
lods
sub
push
adc
ja
mov
mov
xor
cmc
pushf
enter
imul
loopne
aam
xchg
and
cmp
andl
stos
xor
and
out
dec
sbb
mov
and
insb
bound
ljmp
lds
pop
rcll
shrb
mov
int
cli
and
xor
lods
mov
cmp
pop
inc
lods
ljmp
adc
pop
lcall
mov
lahf
hlt
and
movsb
jae
dec
adc
cmp
or
push
leave
out
or
popf
imul
push
sub
add
jbe
cs
ss
popa
xor
and
pop
inc
arpl
scas
mov
cld
les
sbb
in
ds
ficompl
xchg
cld
add
jmp
push
inc
mov
iret
push
dec
pop
in
cwtl
push
loopne
mov
std
jns
mulb
out
pop
mov
subl
les
cmp
mov
les
mov
or
mov
nop
leave
fldenv
movsl
lret
dec
mov
cmp
push
jo
xchg
mov
lea
inc
pop
xchg
mov
xchg
adc
imul
jae
mov
jnp
inc
sahf
dec
shl
ss
xor
and
push
mov
push
mov
mov
pop
jnp
cmp
inc
addr16
leave
sbb
inc
insb
dec
cmp
std
out
sub
aaa
sub
push
sub
add
adc
fisubrl
xchg
xor
test
pop
cmc
js
fwait
bound
mov
cmp
sbb
push
and
push
pop
dec
out
push
cmp
aam
andl
add
ret
inc
pusha
lret
inc
fildll
jnp
sub
jne
insl
and
cltd
loopne
jg
adc
jl
popf
dec
scas
out
lret
fisubs
sub
inc
pop
mov
inc
stos
insb
push
pusha
push
xor
sbb
xchg
jo
or
inc
aad
cld
inc
daa
cmc
out
sbb
mov
ds
test
or
inc
xor
cmp
mov
mov
je
add
xor
iret
cld
cwtl
push
cmp
scas
jp
cwtl
cmpsl
mov
fldcw
cmp
add
lds
fcmovne
inc
iret
jne
shll
lahf
jb
adc
sahf
mov
sbb
sbb
and
movsb
inc
mov
sbb
clc
int
sub
sbb
xchg
sti
and
mov
pop
mov
xor
push
xchg
sahf
mov
rorb
pop
mov
xor
fisubs
dec
xor
and
dec
in
mov
jge
push
inc
inc
push
jl
sub
js
negb
pop
sub
sub
dec
movsl
ficompl
pop
jl
aam
nop
add
in
sub
jbe
mov
inc
xor
ret
adc
mov
or
push
sbb
repnz
mov
sbb
dec
sub
jge
dec
inc
mov
adc
ret
xor
xchg
add
sub
sub
je
test
das
jo
aad
or
cmpsb
insb
xchg
mov
xchg
jae
or
pop
inc
fmull
cmpsb
sahf
sub
lea
adc
pop
ja
inc
sti
out
pop
mov
nop
mov
jne
xchg
jne
gs
btc
add
pop
mov
push
mov
jo
imul
and
mov
push
sub
les
mov
pusha
jns
and
js
in
lods
cmp
adc
pop
movsb
fisttpl
mov
or
lret
lret
dec
rcr
inc
stc
mov
or
rcrl
and
mov
xchg
sahf
push
jmp
jno
xchg
sub
mov
push
nop
loope
shrb
lcall
push
addr16
push
or
pop
dec
cmp
dec
pop
mov
push
jle
push
stos
mov
fisubrl
and
inc
mov
stos
ds
inc
in
fwait
lods
arpl
and
push
adc
lret
and
mov
mov
iret
mov
fidivrs
xor
mov
sbb
push
xchg
sbb
repnz
and
repz
mov
jecxz
jge
xchg
jl
mov
ljmp
add
repz
push
pop
mov
inc
add
clc
pusha
mov
mov
jge
xlat
clc
hlt
jns
jl
pop
sti
movsb
cmc
mov
xor
push
cmp
fld
rcll
xchg
pop
rorb
dec
lret
ja
rcll
jns
roll
out
adc
test
bound
xchg
sub
sbbb
movsb
jae
scas
fwait
sti
pop
xchg
cltd
mov
or
fistpll
lock
xchg
mov
xchg
add
and
sub
mov
jae
and
sub
pop
shl
cwtl
inc
outsb
ret
insl
fsts
adc
cmp
sub
rcr
adc
jle
ror
xchg
cmc
insb
mov
test
std
loopne
xchg
cli
push
push
jno
push
fistpll
push
pop
push
adc
cs
inc
sub
das
in
sti
jno
arpl
pop
ljmp
add
jnp
setae
dec
aas
inc
dec
jge
push
or
cmp
fsubrp
std
inc
rolb
sbb
and
ljmp
mov
incb
out
test
int3
xchg
mov
mov
push
xchg
add
shll
inc
jg
adc
repz
add
add
lret
lods
mov
and
andl
sbb
addb
mov
sbb
jecxz
out
cmp
dec
sub
fidivrl
sub
pop
movb
sub
pop
sbb
and
psubusb
adc
insb
shlb
adc
lds
inc
repz
ljmp
add
sbb
lods
sub
popf
pop
jno
insl
or
test
rolb
loop
pop
movsb
ret
jl
or
pop
hlt
add
lds
test
jl
loopne
mov
and
inc
push
dec
fcoml
xchg
xor
popf
cmpb
xor
test
outsl
movsb
lret
xchg
mov
mov
push
das
scas
push
inc
lcall
sub
or
mov
js
dec
jo
test
and
rorl
mov
loope
push
or
dec
pop
test
mull
icebp
ljmp
sarb
sub
pop
loopne
xchg
pop
xor
imull
aad
adc
stos
jge
test
fistps
add
mov
push
sub
int3
mov
arpl
push
pop
lods
adc
pusha
insl
iret
loopne
fiaddl
dec
sbb
lcall
or
mov
xchg
int3
dec
out
ret
pop
mov
ss
xor
rorb
mov
jecxz
and
inc
mov
dec
repz
inc
pop
xchg
dec
adc
xchg
mov
les
mov
sub
jle
pop
sbb
adc
ficoms
or
dec
test
in
push
push
sbb
shrl
pop
cli
iret
jmp
xchg
sbb
aaa
enter
jns
dec
mov
insb
push
cltd
sbb
stc
sbb
jbe
cld
dec
je
xor
jne
or
scas
mov
iret
in
enter
pop
jb
jmp
sti
call
mov
mov
lret
lock
aam
add
add
test
push
iret
cmp
adc
pop
movsl
ror
xchg
push
out
jnp
fildll
fs
fcmovne
stc
jbe
daa
test
insb
rol
xchg
insb
push
cmpsl
in
out
sti
ja
push
xchg
in
fldcw
mov
adc
icebp
xchg
mov
stos
loopne
push
inc
jle
mov
fidivrs
mov
sbb
inc
and
sbb
dec
push
mov
hlt
stos
sti
add
rcl
fstps
out
out
out
or
clc
push
in
out
or
or
pop
inc
cmp
dec
cmpsb
aam
fdivrl
sahf
negb
xchg
xor
dec
and
mov
rcrl
xor
adcb
nop
mov
fcmovu
popa
xor
pop
pop
bound
mov
mov
jo
fistpll
add
enter
push
jno
roll
aam
xor
dec
leave
lret
rorb
mov
sub
in
sub
or
pushf
jmp
pop
sub
jecxz
loope
sub
mov
mov
lea
test
add
mov
mov
es
xchg
mov
adc
push
jb
adc
subb
adc
fcmovu
pop
daa
lret
leave
xchg
adc
xchg
out
mov
rclb
int3
adc
sub
sub
mov
in
mov
mov
movsb
xor
aam
push
sub
movb
sti
sbb
jg,pt
and
dec
add
jl
popf
fs
icebp
fsubr
or
sti
push
mov
ljmp
hlt
push
dec
jg
mov
inc
mov
mov
popa
mov
sbbb
cmp
test
cmp
cmp
and
or
loopne
rcrb
xchg
das
ds
jmp
push
imul
pop
in
mov
push
fistpl
inc
dec
xor
jle
push
ja
cltd
daa
xchg
mov
push
insl
sbb
and
inc
xchg
outsl
or
insl
or
std
xchg
into
cwtl
fadds
scas
in
adcb
cmp
mov
mov
rorb
incl
or
aaa
add
insb
enter
mov
movsb
sarb
in
sub
aam
and
sub
cmp
lods
in
mov
cs
push
mov
scas
add
jl
sbb
mov
aas
inc
movntps
or
adc
dec
mov
xor
push
pmulhuw
cmp
jp
fs
mov
xchg
mov
mov
adc
iret
ret
subl
insl
mov
mov
lods
pop
leave
jns
inc
cmpl
bound
gs
mov
xor
int
xchg
ret
cmpsl
or
lahf
es
inc
enter
add
ret
push
mov
das
adc
je
ret
or
aam
dec
aaa
sbb
mov
shl
xor
mov
hlt
aaa
shll
fcompl
aam
push
mov
xor
fisubl
mov
xor
cmp
dec
es
fs
fucomp
pusha
incl
shrb
jle
dec
pop
in
sub
test
out
jecxz
sbbl
sete
outsb
test
push
push
into
cmpsb
sbb
lret
loop
xchg
add
std
push
jl
cli
add
cwtl
xor
sub
sub
push
in
inc
into
dec
push
insb
cwtl
out
xchg
adc
sub
or
ret
push
movsl
cmp
pushf
pushf
dec
mov
mov
adc
inc
inc
cmp
cmp
shl
jecxz
pushf
ja
mov
sbb
lea
out
data16
mov
repz
fcmovnu
add
loop
pminsw
cvtdq2ps
push
xchg
ret
imul
cmp
out
xchg
add
movnti
mov
ret
mov
call
cwtl
mov
outsb
adc
mov
roll
push
fildll
mov
push
and
loopne
jl
repnz
dec
adc
ror
pusha
scas
push
dec
ret
lea
add
or
fwait
adc
mov
sbb
sub
outsl
and
xchg
es
pop
test
out
sbb
dec
jl
push
lea
mul
lahf
loopne
add
push
sub
or
push
dec
loop
imul
in
repz
aas
mov
loope
mov
into
sub
fisttps
jbe
repz
addl
jns
sti
jmp
std
sahf
repz
sbb
and
push
mov
inc
pop
sarl
jle
dec
inc
dec
enter
and
dec
enter
inc
jecxz
in
mov
mov
jno
fistl
test
push
outsl
les
adc
xor
jns
out
outsl
pop
lret
enter
pop
in
jg
out
push
sarl
and
mov
lods
cmc
shl
add
les
das
mov
mov
push
je
xor
in
adc
cmpsb
in
and
add
adc
cmpsb
mov
loop
sbb
jae
mov
sub
add
push
push
aam
loop
andb
sbb
pop
notl
xchg
xchg
jg
jmp
into
xor
push
cmpsl
test
loopne,pt
leave
push
fadds
jb
and
shrb
icebp
leave
jbe
mov
dec
loope
mov
adc
or
aas
arpl
and
outsb
les
pop
loopne
jb
jae
jle
xchg
push
enter
cli
sub
xchg
or
cltd
int3
test
pop
push
xchg
adc
mov
dec
arpl
inc
outsb
mov
push
and
movsl
sbbb
and
imul
add
cld
push
fwait
jno
daa
push
vdivss
mov
adc
and
shrl
cld
cmpsb
aas
stc
gs
push
push
mov
das
pop
shrl
and
and
repz
adc
adc
nop
jo
add
sahf
xor
jo
aaa
arpl
enter
sbb
in
test
and
pop
ljmp
loope,pn
out
push
mov
sbb
mov
adc
pusha
dec
dec
or
cld
popa
and
in
imul
pop
pusha
jl
jg
shrb
dec
sbb
mov
push
je
xchg
push
jp
ds
adc
movsb
insl
leave
xchg
in
ret
cmp
sbb
lret
mov
mov
jns
sub
repz
ljmp
or
dec
inc
outsb
sub
lea
mov
sarl
loopne
push
xor
jmp
push
inc
fimuls
test
add
push
or
lods
das
mov
dec
cltd
xchg
loope
jmp
jecxz
sahf
mov
jp
cmp
inc
mov
jns
ret
outsl
movsb
stos
pop
int
jno
cwtl
inc
imul
addl
lcall
and
sub
fcomps
push
or
rorb
call
pop
jmp
xchg
ja
lret
insb
movsb
jae
aad
ljmp
push
pop
jno
jl
gs
xor
icebp
pop
mov
repnz
in
call
pop
gs
inc
pop
jecxz
testb
mov
in
ret
or
cltd
addr16
test
daa
add
mov
xchg
loopne
loope
loope
adcl
les
in
test
rclb
jbe
daa
pop
push
incb
fmuls
outsl
out
xchg
xor
mov
pop
gs
mov
sbb
dec
aad
arpl
cmp
inc
jle
testl
inc
or
test
fidivl
sar
mov
mov
add
test
adc
sbb
arpl
es
jecxz
in
cld
addr16
stc
sub
mov
pushf
sbb
cmp
pop
sbb
cltd
push
stc
test
mov
leave
dec
fsub
xchg
mov
in
mov
lock
ret
mov
mov
test
inc
sar
outsb
addl
xchg
xchg
push
fwait
jle
jl
jle
push
test
test
aaa
add
repz
dec
pop
mov
je
scas
xor
dec
mov
pop
outsb
pop
jecxz
sub
mov
adc
stos
pop
pop
xor
aam
mov
sub
mov
push
lahf
inc
imul
leave
cmp
sbb
pop
dec
stc
xorb
ja
std
mov
insl
add
push
and
outsl
xchg
cwtl
push
cmp
pop
lret
das
lds
sbb
ret
sub
xor
mov
or
out
lock
or
sbb
or
sbb
mov
out
adc
pop
cmc
cmp
pop
clc
lock
xor
xor
mov
dec
dec
and
int3
xlat
mov
mov
pop
inc
incl
mov
lock
mov
jle
mov
pop
mov
pop
mov
loopne
and
sbb
dec
add
iret
ror
arpl
jo
xchg
inc
nop
adc
mov
and
jb
dec
in
fadd
out
int3
or
adc
push
outsb
jle
rcrb
mov
cmpsl
mov
or
stos
push
push
in
xchg
pop
xor
mov
test
sub
mov
scas
pop
imul
cwtl
clc
jmp
fsubr
cli
push
test
clc
adc
xor
xchg
sbb
in
lcall
add
in
sub
sti
cli
cmp
sub
pop
sbb
cwtl
stc
jmp
stos
xchg
dec
stos
sbb
adc
fisubrs
stos
xor
iret
push
bound
adc
xlat
jns
sbb
mov
push
and
stos
scas
sub
lods
mov
filds
xchg
push
push
or
jns
sarl
mov
mov
inc
arpl
or
pop
fcompl
notl
jae
lcall
addb
pop
testl
sbb
pop
lcall
popa
xor
jne
sub
push
jecxz
movsl
push
aam
faddl
cmpsb
nopl
pop
xor
xchg
gs
imul
mov
xor
ja
cmc
sub
orl
test
cmp
cltd
js
cmp
scas
or
mov
stos
shlb
into
adc
rorl
sahf
call
dec
or
fiaddl
adc
outsb
or
loope
fiadds
pop
jl
gs
sbb
nop
inc
cmp
sti
sbb
mov
jg
xor
je
sbb
inc
test
mov
cwtl
xchg
mov
jbe
jo
xor
fwait
cmpsb
inc
mov
ficoml
int3
adc
push
loopne
jae
jg
xchg
xchg
push
cmp
insl
imul
daa
movl
fadds
mov
mov
fsubr
pop
pop
xor
sbb
jo
inc
xchg
cmp
inc
fmul
push
mov
sbb
mov
xchg
sub
pop
pop
mov
jecxz
pop
lcall
adc
adc
ret
sub
mov
xchg
dec
push
sbb
xchg
mov
clc
test
pop
dec
scas
or
fucom
mov
fidivl
int
dec
mov
cmp
testb
repnz
je
pop
imul
or
fsts
and
repz
pop
cld
cld
mov
outsb
ficoml
jge
in
and
dec
sahf
xchg
jg
push
mov
dec
xchg
inc
xchg
xor
inc
xor
jbe
adc
sub
pushf
bound
gs
outsb
cmpsb
mov
cs
repz
push
movsl
and
cmp
imul
lcall
sub
mov
insb
sub
aad
adc
test
add
dec
je
stc
and
dec
cmp
test
push
adc
cltd
inc
fstps
scas
xor
xchg
sbb
es
movsb
sahf
push
mov
cmp
jecxz
adc
jmp
cs
pop
xor
shrl
inc
mov
mov
popa
mov
scas
andb
push
dec
insb
cld
mov
in
or
xor
imul
std
or
aad
jge
dec
shlb
jmp
xchg
inc
les
aas
filds
repz
in
jno
xor
jns
fsts
shll
mov
roll
push
push
push
xor
nop
xchg
cmpsl
inc
mov
aam
sub
xchg
fstl
dec
cmp
jle
dec
insl
nop
mov
pop
bound
add
push
or
mov
clc
lcall
inc
cltd
out
rolb
dec
in
and
faddp
test
jne
push
and
sahf
lds
pop
fidivs
or
imulb
push
outsl
adc
sti
lahf
and
inc
cmp
or
sbb
pop
popa
imul
addb
mov
jmp
stos
mov
shl
fbld
push
imul
pop
in
test
add
scas
pop
jae
cmc
lret
cmp
je
fs
mov
fdivl
outsl
rol
hlt
inc
sbb
xchg
rolb
push
add
pushf
cmpsl
sub
fistpl
lahf
imul
das
sarl
repz
bswap
ret
xor
add
jnp
repnz
sbb
fnsave
hlt
cmpsb
unpcklps
call
jb
lret
jnp
jecxz
and
ja
lret
pop
push
fisubrs
add
pop
xor
popaw
lret
mov
test
testl
aas
push
mov
jp
lret
adc
jo
cltd
insb
sbbl
cmp
aas
lcall
add
es
or
adc
inc
and
in
in
xchg
lcall
jne
mov
fs
and
add
inc
cmpsb
jne
lret
out
mov
push
test
add
adc
xchg
cmp
movsb
repz
int3
xlat
sub
xor
pop
imul
rclb
lods
lret
jae
jge
push
add
xor
cli
fisttps
push
mov
mov
shl
or
jb
cmp
mov
rcrl
pop
xchg
into
xchg
je
mov
test
mov
add
cmc
sub
cmp
jge
scas
stc
xor
cmp
enter
inc
sbb
or
nop
push
fmulp
mov
mov
lret
fsubrs
push
add
mov
lds
dec
testl
cltd
sub
popf
dec
sbb
pop
test
in
jno
dec
or
mov
pop
and
imul
clc
xor
loopne
aaa
sub
test
daa
jg
insl
lcall
daa
adc
stos
mov
jp
cmp
pop
mov
adc
mov
pop
adc
adc
bswap
xchg
pop
inc
add
aad
mov
clc
sbb
lods
cli
push
push
cmp
jge
dec
sahf
xchg
fisttpl
mov
dec
pop
leave
mov
es
lock
inc
adc
shrb
xor
xor
aam
sub
lock
daa
jle
pop
movaps
xor
ja
cmp
aad
arpl
insb
sbb
or
movsl
pop
mov
push
xchg
imul
dec
pop
mov
fadds
cmp
mov
mov
inc
shl
shrb
out
mov
cmpsb
ss
ret
inc
enter
bound
notb
sub
cwtl
outsl
outsl
or
xor
js
mov
das
jecxz
or
sub
push
mov
xchg
ja
lods
sahf
fsubr
push
loopne
inc
aaa
imul
jmp
out
call
imul
insb
repz
jo
or
inc
cmp
idivl
push
jns
cli
push
jne
sbb
dec
push
sarb
divb
out
outsb
adc
jmp
jle
ds
outsb
in
popa
adc
sbb
mov
js
adc
fs
mov
dec
int
xchg
adc
push
adc
sbb
rorb
sbb
jg
mov
fisubrs
nop
pop
lock
arpl
lcall
or
outsb
std
hlt
jg
mov
shr
js
mov
fisttpl
xchg
outsl
mov
jmp
sbb
jp
pop
adc
test
jns
shlb
xor
jae
xor
jb
xchg
cmp
pop
lahf
push
pop
inc
mov
fildl
jl
sti
xchg
test
push
dec
call
movaps
or
ds
je
cld
xlat
xchg
cli
es
xor
pop
pop
popf
and
aaa
add
add
ficoml
pop
aam
leave
mov
in
daa
lods
pusha
aad
dec
aaa
sbb
jb
pop
pop
test
andb
xor
cmp
lods
xchg
incl
pusha
fs
ret
repz
jp
jnp
fmull
jmp
dec
mov
insl
daa
sub
add
inc
cmp
mov
push
std
lcall
decl
lock
push
mov
push
je
cmp
test
xor
dec
push
sbb
stos
push
imul
pop
mov
jbe
repnz
mov
cmp
cwtl
jmp
add
cltd
pop
add
jp
fdivrs
int3
cmpsb
or
repnz
notb
sbb
jle
sbb
inc
adc
out
or
shll
ret
loope
loopne
xchg
out
es
jge
aas
cmp
jns
andb
mov
sub
mov
ret
dec
mov
mov
test
sub
lea
fwait
cmpl
sbb
je
mov
in
pop
adc
add
lcall
dec
fwait
push
pusha
cs
and
out
add
mov
aaa
cmp
pop
xlat
test
arpl
jmp
repnz
out
or
subl
and
sar
and
push
test
jnp
lret
inc
lea
mov
cmc
and
cmp
popa
mov
sub
lret
dec
mov
sub
mov
sbb
fsubrl
cs
in
sbb
inc
in
je
mov
jne
aaa
sub
adc
inc
cltd
xlat
mov
xor
push
test
mov
or
adc
mov
int
pushf
jb
dec
jp
and
fistpl
test
add
mov
mov
mov
aam
cmpsb
add
pop
nop
mov
call
or
jb
test
mov
imul
movsb
ljmp
lret
lret
movsl
mov
leave
fnstsw
aad
and
loop
movsl
xor
push
outsl
jns
ja
in
roll
push
and
mov
push
or
sub
sub
imulb
pop
sub
sub
push
mov
and
out
mov
dec
and
pop
ret
hlt
add
fstpl
jg
aam
add
incl
xchg
cmp
in
or
push
out
mov
push
dec
inc
cmc
push
or
mov
sbb
sbb
or
call
jae
lods
xchg
stos
mov
pop
cmc
xchg
mov
jge
xor
je
ffree
add
dec
fiaddl
pop
mov
loopne
in
ret
mov
daa
xchg
test
pop
js
std
sub
movsl
or
outsl
mov
inc
ret
mov
iret
mov
and
sbb
insl
adc
cld
cmpsl
pop
push
aad
adcl
in
mov
call
in
push
jge
mov
sbb
or
filds
pop
sar
movsb
pop
sbb
add
pusha
mov
sbb
ret
push
stc
and
mov
stos
push
xchg
xchg
push
adc
fstl
in
jae
roll
icebp
adc
xor
movsl
and
mov
out
pusha
push
add
adcb
push
ja
pop
inc
fdivs
mov
cmp
sti
loop
gs
mov
dec
push
push
rolb
jecxz
cmp
in
push
jecxz
sub
stc
outsb
pop
or
mov
push
sub
adc
or
mov
push
test
sub
pop
dec
dec
sub
cmp
jg
dec
fdivrs
pop
les
icebp
jno
mov
or
inc
and
add
jl
mov
or
xor
xchg
mov
mov
popf
sbb
pop
test
add
dec
rcl
sub
pop
pop
ss
inc
leave
and
aad
push
hlt
and
cmpsb
sbb
adc
enter
push
jecxz
movsb
push
dec
shrb
ret
lret
cmp
out
ljmp
cmpsl
jo
pop
jno
test
mov
ss
push
jb
adc
push
dec
addb
jbe
lds
push
push
adc
mov
cmp
pop
inc
aaa
pop
mov
fistpll
xor
je
dec
outsl
push
push
adc
jnp
in
repnz
stc
fwait
iret
fsts
jp
mov
pop
and
shll
stos
rorb
mov
jecxz
or
and
jp
popf
pop
decl
adc
pop
adc
mov
mov
enter
int3
pop
mov
loop
jl
arpl
jnp
inc
ror
fsubrl
pusha
xor
jmp
stc
cmp
pop
outsb
stc
jno
lcall
push
adc
subl
cwtl
sub
pop
rolb
cmp
pop
mov
lcall
add
mov
and
jle
clc
mov
shrb
hlt
loop
cld
mov
or
mov
push
pop
imul
mov
jns
mov
sbb
sub
out
fists
push
movl
movsb
clc
mov
je
xor
mov
sbb
mov
les
xchg
pop
dec
out
cmp
aad
stos
xor
mov
js
stc
lock
adc
push
lds
xchg
fnsave
scas
popa
mov
hlt
stos
shlb
jle
mov
adc
adc
mov
iret
inc
orb
sbb
push
jecxz
imulb
rorl
lods
mov
cmp
repz
lock
dec
sbb
mov
pop
lret
mov
imul
add
add
fnstenv
mov
std
or
adcl
fmull
push
xor
pusha
adc
incl
cltd
dec
into
cltd
cmp
jo
lret
imul
stos
out
fistps
lock
int
mov
iret
jbe
cwtl
pop
stos
jns
push
mov
add
mov
lods
jecxz
adc
in
and
dec
sbb
cmp
ljmp
mov
notb
adcb
dec
sbb
clc
push
push
enter
sub
loop
shll
pop
ret
aaa
and
or
fwait
jg
jecxz
dec
cli
loop
cs
mov
push
adc
jb
in
stc
js
gs
rorl
aam
mov
das
movsb
pop
shll
les
xchg
icebp
pop
push
daa
loop
sbb
add
cmp
jne
adc
inc
cmp
loope
imul
push
jle
mov
lahf
int3
ficoms
push
lahf
adc
lret
pop
jl
bound
cld
xlat
stc
call
sub
mov
cmp
shl
je
push
and
orl
fadds
rclb
sahf
test
push
xor
stc
mov
push
rsqrtps
in
pop
insb
xchg
xchg
cmp
mov
and
filds
enter
adc
cmp
iret
fisttpl
jns
leave
out
pop
pop
cmp
ds
pop
js
pop
pop
xchg
mov
lret
xor
imul
setbe
scas
xor
bound
dec
lods
rep
imul
mov
mov
pop
sti
pop
cmp
adc
mov
add
jecxz
addr16
popa
clc
jl
out
and
fadd
pop
roll
cmc
xchg
sbb
sbbb
rol
mov
imul
je
xor
inc
add
rcl
rcll
mov
mov
and
in
xor
xor
cwtl
cmp
sub
or
jecxz
insl
pop
cmp
cltd
mov
mov
add
adc
inc
or
pop
sub
insb
lds
jnp
repz
mov
cmpl
pop
lahf
sbb
mov
in
and
mov
xor
cmp
and
test
add
popa
and
lahf
mov
sub
cli
rorl
pushf
add
lret
xchg
cmp
adc
cmp
test
mov
dec
ja
cmpl
xor
fdivrp
das
fldenv
lret
and
int
or
out
imul
cmp
pop
hlt
sub
sbb
test
sbb
pusha
or
xchg
inc
dec
push
jbe
cmp
push
popf
addr16
inc
dec
and
test
ss
dec
hlt
in
iret
inc
ficoms
push
inc
movsl
shrl
lcall
mov
mov
jp
outsl
mov
cmp
call
stos
push
es
cmp
cmp
mov
pop
inc
xchg
scas
nop
movsl
enter
xchg
sub
je
cltd
jp
sbb
fbld
sub
clc
aas
mov
inc
mov
jae
and
dec
clc
xchg
test
std
dec
sub
aaa
sub
std
nop
movsb
jge
mov
out
shlb
and
lret
icebp
pop
daa
jae
roll
out
lds
mov
push
or
xor
xchg
decb
out
push
push
stos
lret
adc
mov
pop
add
hlt
in
mov
ret
inc
lahf
push
repz
lcall
xor
push
lds
fdivs
stc
inc
jmp
das
and
add
cli
das
pop
in
push
dec
cmpsl
ljmp
xor
pushf
call
sub
jo
mov
mov
aam
sbb
cmp
insb
or
adc
outsl
leave
push
popl
adc
test
xlat
shr
int3
arpl
and
mov
outsl
mov
jmp
sub
in
mov
out
popa
jg
pop
jnp
mov
push
pop
jo
mov
xchg
mov
rorl
bound
test
push
mov
roll
jo
cmp
shlb
cmpb
or
jne
sbbl
verw
dec
dec
loope
std
and
in
iret
mov
mov
xlat
xor
leave
jne
inc
mov
jecxz
inc
and
jmp
push
sub
cld
stc
xor
adc
out
daa
jnp
sahf
rolb
lahf
add
sub
pop
ror
scas
jae
shlb
int3
push
cltd
ljmp
push
dec
xchg
mov
dec
jp
stos
mov
xchg
cli
xchg
push
mov
cmp
pop
dec
cld
dec
arpl
jge
into
es
stc
cmp
push
out
repz
add
stos
push
dec
mov
push
pop
andb
rcrb
xor
icebp
rcr
add
icebp
cmp
push
inc
sub
test
mov
mov
les
jne
addb
call
xlat
test
scas
cmp
outsb
add
inc
mov
add
pop
outsb
jg
imul
shrl
scas
fwait
or
jb
in
adcl
sub
pushf
ja
stos
sbb
xchg
xor
add
adc
fisttpll
nop
mov
xor
xchg
push
mov
cmc
imulb
cmp
popf
sahf
mov
mov
dec
mov
push
cmp
hlt
dec
nop
cs
push
lcall
pusha
xor
inc
dec
inc
sbbl
sub
mov
xor
jno
shrl
push
ss
rorb
fcoml
xor
dec
jo
adc
lock
push
inc
movsl
mov
int
pop
repnz
mov
dec
call
mov
dec
mov
pop
pop
xbegin
jns
lret
cs
fsub
sbb
lahf
gs
fmull
sub
inc
sbb
jge
lcall
in
out
mov
pop
scas
js
loope
and
into
xchg
imul
cmp
mov
test
xor
mov
push
push
mov
mov
push
xchg
adc
hlt
icebp
pop
insl
hlt
jmp
xchg
push
cmp
mov
outsb
cmp
sbb
aas
mov
imul
mov
lcall
or
jmp
outsb
shlb
rclb
pusha
xor
cmpsb
aam
xchg
cmp
lcall
push
push
imul
jg
xchg
dec
lret
ja
jecxz
insl
cmpl
stos
cmp
mov
cmp
xor
cmpsl
inc
inc
jmp
cmp
popa
or
call
loopne
mov
sbb
lcall
hlt
aad
loop
sti
sub
sub
or
fildll
inc
cwtl
xchg
mov
xor
hlt
cmpsb
push
mov
push
adc
push
cmpsl
lret
mov
sub
test
and
add
xchg
adc
bound
xchg
or
sub
pop
stos
mov
cmpsb
or
add
pop
jge
bound
das
lds
in
mov
daa
sub
mov
cmp
sti
sbb
lods
cld
push
sarl
out
push
fidivrl
sbb
scas
adc
addr16
sub
jp
stc
pop
dec
mov
les
rclb
jne
or
loopne
adc
adc
jg
mov
push
clc
adc
add
cmp
lret
sahf
out
das
sbb
dec
add
loopne
cmp
mov
inc
mov
mov
hlt
lods
mov
fstpl
clc
push
pop
xchg
xor
jl
sbb
mov
push
push
inc
cmpsl
aam
mov
sti
repz
push
imul
ljmp
push
sbb
inc
imul
mov
sysenter
clc
dec
mov
pop
sbb
cmpsl
rcrl
aam
push
push
add
cltd
int3
test
aad
lods
mov
mov
fmul
lahf
cmp
jp
mov
jnp
pop
movsb
jno
loopne
and
fcompl
dec
pop
inc
mov
and
xchg
jb
mov
sbb
leave
shrb
ljmp
scas
pop
mov
js
sti
js
out
fldenv
cmp
sbb
in
sbb
jmp
jns
push
xchg
and
inc
jbe
cmp
mov
or
sub
sti
xchg
bound
cmp
inc
jg
push
sbb
push
xor
nop
mov
scas
mov
nop
sub
clc
add
ds
xchg
xchg
test
and
out
bound
cli
sub
outsl
aad
aad
mov
cmp
adc
fwait
lcall
fnsave
mov
cmpsl
push
add
std
xor
pop
add
popa
or
mov
pusha
pop
xchg
pop
subl
push
or
arpl
sti
lock
fs
out
jb
jo
movsl
jp
mov
insl
push
xchg
xor
lcall
clc
and
repz
add
push
int
sti
jp
xor
adc
fdivs
xchg
mov
or
mov
jge
add
cmp
flds
add
jno
mov
ss
lds
jne
test
scas
xchg
mov
sbbl
ja
jmp
cmpl
jle
inc
std
lock
mov
inc
xchg
pop
xchg
adc
dec
jmp
aam
sbb
enter
xchg
dec
pop
inc
ret
in
jl
jb
ret
mov
mov
sub
sub
mov
jp
js
and
cltd
sub
fwait
fwait
sbb
lds
shr
and
sahf
jno
repnz
xor
into
hlt
add
call
and
outsb
jge
xchg
mov
mov
stos
jbe
adc
xlat
icebp
cmp
pop
dec
es
out
fimuls
dec
mov
jno
sub
cmpsb
xor
gs
fistpll
mov
shlb
repz
lods
scas
addr16
movb
inc
sbb
jnp
movsl
cmp
push
pusha
jle
inc
cmp
adc
inc
dec
popa
adc
sbb
mov
lret
inc
add
push
ret
pop
adc
lahf
mov
mov
mov
xor
mov
and
dec
mov
push
lea
push
cltd
jnp
ds
repz
sub
bound
pop
cltd
loop
out
pop
pop
lods
inc
mov
mov
pop
stos
loopne
cmp
mov
inc
inc
es
sbb
out
mov
and
jecxz
jb
and
mov
push
iret
das
push
std
lret
xchg
mov
scas
push
dec
insb
das
sbb
shrl
movsb
or
dec
adc
outsb
add
xor
sbb
pop
aaa
jnp
ja
mov
mov
ljmp
lds
jecxz
cs
add
pop
mov
inc
push
loopne
loope
pop
dec
jmp
sub
sbb
and
in
pop
jg
mov
fdivrs
xchg
cmpsb
mov
lret
movsb
push
loopne
dec
jecxz
jns
or
mov
in
in
call
jmp
pop
aaa
inc
mov
jns
dec
lods
inc
xor
into
cmc
outsb
imul
outsb
cmpsb
mov
mov
hlt
jnp
mov
cmpsl
inc
mov
mov
shlb
mov
xchg
imul
jmp
xchg
pop
jg
cmc
mov
popa
dec
orb
or
inc
imul
out
push
push
mov
mov
lea
out
xor
mov
push
push
jmp
xchg
xor
jo
clc
pop
mov
mov
out
mov
sbb
mov
adc
jp
jg
and
dec
daa
inc
lock
data16
imul
xlat
rcr
push
xor
rol
or
push
sarl
imulb
xchg
push
out
into
xchg
clc
pop
cmp
das
cmpsl
int
addr16
inc
cltd
shll
sbb
push
inc
push
inc
cmp
pop
push
sbb
scas
sti
andl
shlb
pause
or
or
decb
iret
inc
jecxz
lds
stos
dec
call
stc
ja
enter
and
cmpsb
imul
push
xchg
cs
inc
pop
sub
cmc
idiv
push
cmpsb
pop
xor
imul
push
mov
lcall
enter
or
loope
sub
mov
loope
insb
fidivrs
jge
jg
sti
mov
inc
xchg
mov
inc
adc
pop
mov
sbbl
mov
pop
mov
int
into
mov
xchg
vcvttsd2si
lea
xor
jle
and
aad
cmpl
sub
mov
mov
iret
dec
jno
xchg
js
cmc
les
inc
scas
ljmp
fcoml
cwtl
or
jo
dec
add
ljmp
js
pop
icebp
and
or
out
and
scas
rcrb
cmp
jmp
fcmovb
stos
lods
push
shl
gs
add
fimuls
jmp
sbb
or
mov
dec
mov
mov
fwait
xchg
enter
jl
xor
and
or
loopne
push
cmp
arpl
pop
inc
loopne
icebp
ret
jge
loopne
xor
cs
ret
push
fisttpl
pop
mov
jns
xchg
lods
adc
scas
xor
mov
test
lds
sub
loop
lea
insl
and
inc
pop
lahf
and
push
aad
ret
xchg
jge
cwtl
xchg
fwait
aam
mov
xor
test
cmc
mov
mov
int
jo
mov
in
lods
mov
mov
hlt
stos
xchg
inc
lret
data16
and
loop
jns
pop
shlb
push
mov
dec
call
push
and
cmp
add
fnstcw
mov
jno
icebp
clc
mov
xchg
daa
daa
arpl
int3
jle
cmp
push
stos
out
aad
add
cmpb
cmp
lcall
push
arpl
jmp
ret
jge
dec
arpl
pop
cwtl
test
in
sar
push
hlt
in
outsl
aam
sbb
dec
mov
lcall
adc
dec
add
sub
push
jbe
pop
jmp
jg
cs
or
and
data16
sub
test
push
dec
push
pusha
aas
mov
imul
lahf
int
outsl
ret
xchg
enter
sbb
sub
lcall
mov
fcomps
dec
push
cmp
mov
lea
inc
and
aas
aaa
cmp
stos
dec
xchg
cli
mov
lret
lods
aam
jle
jbe
jecxz
inc
cmp
jno
fcomps
out
xchg
shrb
jmp
pop
test
ljmp
and
push
sarb
dec
or
jmp
or
cwtl
mov
sahf
pop
aad
in
js
cmc
fld
cmpb
hlt
and
sub
ljmp
or
jns
jp
enter
jle
mov
pop
ss
adc
mov
test
sbb
and
daa
mov
and
cmp
push
das
mov
fists
sbb
cmp
js
stos
push
mov
push
dec
sbb
fidivl
mov
call
adc
mov
jecxz
sbb
enter
pop
movsb
sub
jne
push
std
xchg
clc
mov
stos
sbb
movsb
mov
mulb
push
xchg
js
pusha
sub
out
adcl
or
pop
lea
push
xlat
xchg
dec
xchg
jno
es
repz
int
cmp
ret
add
push
int3
xlat
loopne
nop
cmp
into
mov
insb
mov
pop
stc
lret
jge
pusha
and
pop
jne
aam
adc
stos
loopne
stos
sbb
cmp
ljmp
mov
ljmp
push
das
dec
mov
scas
insl
dec
mov
xlat
loop
sbb
fcompl
xor
pop
test
ljmp
lds
add
jl
mov
cmpsl
jns
and
bound
test
cmp
daa
inc
sub
xor
xchg
or
mov
dec
pushf
jns
jge
xor
xor
das
mov
jg
in
push
mov
mov
mov
imul
lcall
out
sbb
add
mov
repz
mov
into
cld
xchg
mov
mov
jnp
jp
and
out
jo,pn
test
shlb
cmpsb
fdiv
out
mov
fidivrs
inc
cmp
push
xchg
sbb
xchg
or
or
mov
cmp
push
dec
cmp
lods
mov
cld
es
addr16
jbe
mov
gs
dec
notb
loop
or
push
or
sub
sbb
xchg
dec
in
cmpsb
or
or
pop
dec
in
ret
push
xchg
sub
sub
sahf
data16
notl
insl
mov
cwtl
cmpb
xlat
xchg
les
nopl
jae
js
fimuls
rcrl
lods
inc
push
fucompp
loopne
cli
xchg
shlb
mov
lret
cmp
int
jns
idiv
push
fxch
mov
lcall
in
adc
popf
sub
pop
xchg
test
or
add
pusha
push
cmp
fcomps
rorb
inc
nop
ret
pushf
jo
dec
rcr
loope
insl
jg
pushf
fmull
loope
cli
adc
add
pop
sub
adc
mov
out
xchg
adcb
sub
mov
inc
inc
icebp
iret
push
int
repz
das
mov
mov
jnp
sahf
rcr
mov
jb
enter
jecxz
sub
cmpsl
push
test
test
iret
ret
cs
sahf
out
lret
or
lahf
fwait
mov
adc
xlat
or
imulb
pop
lods
imul
push
lock
inc
test
cmp
inc
lret
push
push
jnp
inc
jmp
lods
fsubrl
arpl
cmp
ljmp
and
inc
adcb
jnp
sbb
aad
adc
stos
mov
pop
jp
sahf
jae
les
movsb
cld
int
mov
sub
xchg
push
and
jns
lods
lahf
lods
jnp
sbb
dec
and
shlb
jae
lods
push
in
adc
sbb
adc
mov
insl
in
mov
dec
cltd
repnz
sub
shll
sahf
hlt
sbb
inc
cmpsl
cmp
daa
pop
mov
arpl
nop
push
rcr
mov
scas
pop
aad
out
xor
inc
jae
data16
jno
push
out
pop
iret
jmp
cmp
adc
push
out
sub
stos
out
and
or
idiv
xor
incl
sbb
sbb
out
jecxz
inc
mov
mov
sbb
cld
gs
incl
xchg
lahf
movsl
xlat
mov
dec
rcr
xchg
pop
mov
fdivrl
push
jo
xchg
cli
out
or
xor
cld
pop
pop
cwtl
or
shll
pop
out
xchg
inc
push
shlb
sbb
cmp
dec
mov
sub
filds
lods
or
sbb
pop
pop
in
push
loop
mov
std
lret
push
sbb
jg
shr
das
loope
ljmp
lds
sub
sub
pop
mov
sbb
xor
dec
cmp
add
sbb
add
lock
pop
les
mov
push
std
dec
or
shll
xor
imull
xor
pop
sbb
jp
pop
popf
sti
mov
das
inc
xchg
jno
xor
jbe
cli
cwtl
iret
and
xor
lods
jne
jecxz
xchg
test
mov
pop
fnstcw
scas
test
jge
cmp
adc
int3
cmp
pushf
and
mov
iret
inc
stc
add
pop
fidivl
scas
pop
mov
mov
sub
xor
loop
cmp
mov
mov
mov
loop
mov
jnp
lods
stos
ret
stos
js
inc
push
fs
ret
mov
mov
cmp
pop
and
pusha
cld
lcall
push
push
aas
xchg
adc
std
xchg
test
and
xlat
add
sti
cwtl
cld
lret
hlt
pop
inc
mov
xor
dec
jnp
cmp
mov
inc
leave
gs
repnz
inc
popf
cmp
in
imul
test
xor
lret
addr16
and
sub
mov
jne
ljmp
fucomp
je
or
ds
stos
js
shr
loop
outsb
out
pop
ds
insl
inc
loopne
shll
dec
adc
mov
das
mov
and
push
dec
in
test
sbb
mov
cwtl
dec
out
adc
fldt
sbb
mov
outsl
addr16
jnp
jmp
loopne
clc
dec
xor
movsb
cmpsl
push
movl
movsb
arpl
or
test
cld
adc
adc
icebp
xchg
ds
cmp
loop
lret
inc
hlt
lcall
push
mov
jns
fisubl
lods
xlat
out
pushf
mov
imul
mov
pop
out
clc
sub
or
gs
int
mov
pop
pop
ud1
pop
push
cltd
cmpsb
fstps
xlat
imul
mov
lds
shll
cli
adc
mov
lcall
es
ds
push
sbbb
daa
and
insb
sbb
push
and
enter
mov
xchg
jno
loop
cmp
dec
cmp
les
jecxz
frstor
ja
sti
psrld
push
xor
cld
inc
movsl
mov
outsb
mov
xchg
jecxz
ss
repnz
jo
xchg
adc
sub
iret
jg
mov
neg
sub
ret
add
jmp
add
jnp
jg
jmp
jmp
sahf
dec
stos
pop
dec
jo
imul
adc
sbb
leave
test
rol
mov
pushf
insb
jmp
mov
data16
adc
lret
xlat
int3
sbb
imul
push
fstp
push
shl
aad
rorb
mov
dec
mov
lds
pop
dec
dec
jno
movsb
out
dec
rcrb
fmull
xor
pop
inc
xchg
adc
jmp
fisubrs
jecxz
pop
popf
js
dec
mov
sbb
xor
pop
imul
adc
pop
pop
inc
cmp
mov
mov
jg
xor
and
push
nop
inc
unpcklps
inc
lea
aam
insb
sbb
sbb
lahf
sti
scas
fisttpll
xchg
and
and
jg
push
xor
stos
or
mov
mov
pop
mov
ret
cmpsb
outsb
pop
lret
call
fists
sbb
mov
xchg
je
xor
sahf
test
in
mov
out
cmp
mov
push
sahf
add
pop
leave
push
sbb
add
inc
adc
scas
mov
adc
or
stos
inc
pop
movsl
loope
pop
sbb
fs
xchg
test
stos
test
dec
je
jp,pn
cltd
adc
lods
cltd
das
push
cmp
icebp
leave
enter
in
stc
test
shrl
hlt
push
loop
cs
repz
inc
jo
push
push
imul
stc
cmp
push
adcb
adc
push
ss
mov
ljmp
pop
push
sbb
jl
pushf
cld
mov
dec
mov
std
fxrstor
stc
fcomp
out
fstp
mov
push
mov
loope
inc
cmp
pop
push
inc
or
add
and
push
stc
repz
cmp
movsl
cli
adc
test
movsl
or
call
mov
jo
sub
sbb
pop
adc
daa
shl
sbbl
lret
outsb
repnz
hlt
mov
sub
pop
jmp
sbb
sbb
arpl
int
jae
insl
lcall
cvtpi2ps
in
mov
xchg
inc
dec
cli
cwtl
sub
mulb
bound
push
fadds
mov
in
pop
jge
loopne
scas
pop
sub
push
data16
or
in
cmp
xchg
push
push
mov
push
mov
add
xor
mov
outsl
adc
or
cmp
repnz
test
insb
jmp
in
aas
push
ret
gs
xlat
nop
pop
pop
out
in
xor
arpl
or
ss
xor
xchg
scas
cmp
mov
das
out
dec
jg
nop
fwait
dec
mov
out
and
inc
inc
loopne
movsb
rcrl
jno
xchg
pop
fbld
push
mov
jns
adc
mov
pop
or
out
stc
mov
int3
jnp
jle
adc
cmp
popl
or
cmp
aad
sti
dec
mov
scas
adc
sub
jge
sbb
mov
pop
mov
add
add
push
addb
mov
jns
jno
pop
fsubr
ljmp
pop
add
mov
xor
and
lea
loopne
stc
mov
iret
xchg
and
jbe
aad
dec
scas
mov
and
lods
push
xchg
jle
call
xor
and
dec
cmp
push
int3
cmp
pop
lock
mov
imul
jg
xchg
mov
scas
pop
ja
daa
iret
in
inc
mov
les
pop
sub
bound
sbbb
xor
mov
dec
jbe
dec
inc
fs
xchg
mov
sbb
insb
mov
andb
push
cltd
out
stos
add
mov
jo
add
popf
mov
jo
jg
pop
fadd
bound
adc
adc
shrl
in
jmp
test
xchg
xor
xchg
xchg
adc
jo
fldt
int3
shll
jae
lods
shlb
push
cmc
data16
and
pop
cli
shlb
push
ss
ret
and
cmp
push
shlb
pop
movsb
mov
clc
and
and
mov
sbb
jo
in
xchg
or
cld
xor
sub
dec
push
inc
sub
mov
les
jne
popf
movsl
iret
lcall
mov
pop
das
mov
lret
mov
andb
pop
xchg
in
call
ja
stos
sub
stos
fnsave
xlat
dec
xlat
adc
push
shr
mov
add
hlt
roll
stos
popa
addr16
fpatan
mov
xchg
jge
push
mov
mull
and
enter
mov
adc
fwait
lock
sub
mov
and
push
xchg
jecxz
in
and
negl
xor
xchg
xor
jbe
mov
sbb
jge
imul
pop
mov
out
xchg
out
lcall
xchg
fdivrs
adc
jo
xor
imul
jno
pop
in
push
lods
jbe
and
mov
xor
out
inc
inc
cmp
dec
pop
and
fs
push
cltd
pop
push
fmuls
push
and
movsb
mov
jno
loope
xor
nop
mov
data16
pop
dec
mov
mov
icebp
sub
push
mov
stos
daa
sar
ljmp
cmc
jmp
adc
mov
test
jle
scas
cs
sbb
ss
data16
es
pop
fcmovne
rcl
sbbb
cmp
cmp
aam
testl
inc
test
xchg
and
scas
idiv
xor
test
ja
jge
inc
mov
xor
mov
pop
push
cmp
add
cli
xchg
cmpsl
out
shlb
inc
ret
push
scas
sbb
shl
sbb
ja
jns
pop
xchg
xor
mov
jge
rcrb
mov
mov
enter
and
mov
repz
dec
adc
test
sub
decl
jle
pop
jp
inc
jbe
sbb
leave
stc
fucomp
sete
cmpsl
aaa
pop
and
fildll
pusha
xor
lret
ja
jg
cmp
push
test
iret
mov
mov
dec
jne
or
fs
mov
test
sbb
enter
mov
push
add
pop
pop
in
rcl
jne
fbstp
xchg
repz
sbb
hlt
arpl
lea
xor
mov
and
fdivp
daa
jecxz
mov
and
jmp
cmp
test
cmp
pop
fs
das
xchg
clc
int
ljmp
pop
lcall
js
push
xchg
or
roll
mov
mov
lret
rorl
fdivrp
xchg
jns
inc
fldenv
push
push
mov
not
inc
push
test
pop
mov
cmp
and
stc
or
xor
xchg
and
mov
in
in
stc
fwait
cmpsl
out
dec
enter
push
xor
faddp
inc
aad
dec
or
jg
cmp
pop
icebp
cltd
and
pop
imulb
sbb
imul
je
mov
or
cmp
pop
nop
std
mov
repz
jb
insb
jle
cmp
xlat
aas
adc
and
xor
dec
dec
lret
jge
mov
cmp
aas
and
or
jne
pop
mov
inc
mov
and
adc
rcrl
rcrb
into
jmp
jge
inc
jg
inc
stos
fs
sarl
sbbb
lahf
stos
loope
dec
lcall
add
mov
in
test
sar
arpl
pusha
pop
mov
movsb
dec
mov
xchg
out
aam
xlat
or
lea
imul
dec
or
sub
add
popf
sub
in
or
movb
xor
inc
xor
push
push
and
inc
mov
mulb
add
sarb
fisubs
fidivrs
sub
push
and
sub
or
daa
sbb
push
adc
mov
jle
push
or
nop
rorl
js
inc
shrb
cwtl
test
sub
stos
mov
inc
jb
push
ret
xor
out
fildl
push
dec
fwait
and
sbbl
ret
sub
std
add
out
sbb
lds
mov
mov
sub
cmc
out
popf
pushf
cld
hlt
xor
xor
cmpb
mov
cmc
jmp
mov
pop
and
dec
js
sbbl
mov
cltd
sbb
mov
cmp
cmpsl
pop
push
cmpsb
mov
adc
mov
xchg
jno
jno
addr16
shl
or
mov
bound
bound
sub
push
and
jecxz
jle
xor
aaa
js
mov
xchg
mov
inc
fs
cli
adc
xor
mov
stc
test
dec
xchg
pop
dec
and
jp
add
or
inc
mov
jg
jge
cmp
or
lret
fadds
mov
xchg
negb
jp
adc
popf
lock
and
iret
test
mov
dec
xchg
push
int3
xchg
pop
pop
sbb
or
jnp
inc
pushf
xchg
sti
adc
or
and
mov
lret
add
subl
xor
jg
lods
mov
out
adc
xchg
cmc
mov
lret
dec
sub
pop
fisttpll
adc
js
and
popa
mov
dec
in
adc
bound
movsb
in
pop
xorb
or
in
scas
sub
stos
stc
test
mov
int
bound
stc
lret
daa
sbb
inc
push
fcmovnb
aad
psrad
loope
push
push
mov
or
xchg
fstl
sub
mov
jb
lods
hlt
enter
incl
popf
and
mov
rcll
popf
adc
mov
mov
and
lods
lea
cmpsb
xor
popa
mov
pop
mov
nop
and
xchg
ret
fdivrs
pop
cwtl
int3
sahf
jb
lods
lret
mov
cmp
jge
pop
xchg
loope
stos
aam
add
push
xchg
loope
inc
icebp
mov
jl
leave
mov
fsts
push
frndint
arpl
cltd
or
jmp
jmp
sub
cmp
inc
int3
cmpsb
aaa
inc
cmpsb
add
adc
out
aad
leave
int
enter
aaa
jecxz
stos
mov
xchg
fucomi
es
ja
mov
mov
push
into
icebp
jns
out
jecxz
adcb
xor
jle
nop
ret
pop
cli
or
sti
mov
testb
imul
lods
mov
mov
test
push
lcall
nop
push
adc
sbb
pop
jo
call
stc
jns
push
inc
or
cmp
pop
jae
mov
nop
test
out
movsl
outsb
adc
xor
idivb
push
pop
xor
pop
rcl
sti
inc
outsb
in
push
or
shlb
lea
adc
dec
iret
rolb
repnz
mov
or
and
cmp
in
fcmovb
xlat
mov
xorl
adc
imul
shll
sbb
aaa
sbb
xor
dec
xchg
out
push
jl
pop
test
out
pop
in
pop
mov
xorb
adc
enter
push
fs
or
nop
add
xor
push
ret
shll
adcb
lahf
loopne
and
loope
iret
cli
push
or
mov
xlat
and
aam
inc
aas
lret
lea
filds
lcall
lret
cmp
fsubl
mov
loope
in
push
stos
sahf
push
enter
add
mov
ja
cmpsb
mov
xor
iret
fisttpll
int3
sub
cmp
and
mov
or
mov
shlb
inc
iret
xor
inc
adc
fld
sti
mov
adc
orl
xchg
fistpl
push
div
les
or
in
push
cltd
cltd
inc
xchg
jnp
in
negl
add
xor
and
jmp
adc
arpl
adc
or
ret
mov
adc
pop
mov
pop
pop
hlt
adc
dec
nop
ror
outsl
cmp
movl
je
sbb
test
pop
push
leave
nop
pop
jno
cmp
fdivrs
movsb
setg
cs
xor
pop
loope
cmc
faddl
sub
xchg
insb
mov
dec
xlat
mov
dec
mov
mov
nop
aad
call
lret
xorb
stos
negl
repz
inc
cmc
cmpsl
out
cmpsb
mov
push
sahf
dec
sbb
inc
jbe
addb
test
jl
fld
pushf
dec
fdivrs
sub
mov
int
iret
in
adc
sub
gs
push
out
and
and
and
mov
jmp
scas
or
and
xchg
imul
lcall
xchg
jg
jns
packuswb
scas
push
dec
jo
dec
pop
nopl
movsb
cld
push
loop
and
dec
dec
fiaddl
aad
push
test
negl
sbb
xchg
sub
dec
inc
sbb
pop
int
mov
and
aaa
rclb
inc
out
xchg
mov
push
push
clc
push
test
jae
add
mov
lcall
cmp
jns
ror
xor
sti
inc
add
jg
fadd
popf
mov
js
pop
test
xlat
imul
int3
pusha
movsl
pop
insl
pop
push
pminub
xadd
jp
mulb
pusha
inc
sbb
pop
outsb
lcall
add
jp
icebp
stos
mov
pop
aaa
pusha
aas
dec
shrl
lret
enter
add
sub
xchg
sub
sub
movsb
test
into
aam
pop
xchg
test
pop
pop
iret
sub
xorl
call
cmp
and
lods
in
mov
fdivrs
mov
int
bound
push
cltd
xchg
mov
shrl
add
pop
pusha
cmp
add
inc
sbb
loop
decb
inc
mov
insb
inc
lea
pop
fucomp
mov
and
scas
fsubp
mov
inc
push
mov
je
mov
jl
ret
inc
adc
cmp
mov
adcl
mov
inc
inc
xchg
sti
sub
sub
rcr
jmp
jno
mov
mov
fisubrl
je
repnz
cmc
nop
jne
adc
movsl
add
inc
pop
inc
xor
in
xor
dec
xchg
sub
xchg
cli
fsubl
sub
sub
scas
push
mov
shr
lret
hlt
xlat
and
sub
fs
and
ss
xchg
in
or
ds
and
mov
cmp
jne
add
mov
clc
cmp
pop
adc
in
lret
pusha
jbe
mov
pop
test
xor
adc
adc
jne
mov
mov
out
or
call
sub
sub
cmp
xchg
or
xor
xchg
jle
icebp
lahf
mov
dec
cmp
jecxz
lds
in
mov
jnp
jne
or
lret
mov
cmp
ljmp
mov
std
xor
roll
push
xchg
xchg
rcrl
sbb
sub
aad
out
cmc
dec
sub
sub
inc
mov
and
nop
out
inc
inc
cmpsb
dec
lret
push
and
jp
lret
cli
xor
mov
dec
push
pop
stos
pop
jge
and
mov
loopne
inc
push
cmp
push
jmp
mov
and
pop
sarl
push
fadd
push
lea
mov
aaa
jg
xchg
fs
pop
sub
test
mov
sbb
mov
into
xor
sbb
cs
and
popa
pop
sbb
cmpsl
and
pop
xchg
xor
loope
push
jb
xchg
jae
pop
mov
adc
sub
mov
add
jge
add
adc
dec
inc
bound
jbe
loopne
jge
stos
fdivp
stos
pop
arpl
push
dec
xlat
mov
insb
cmp
repnz
dec
jne
fs
push
jno
sti
loopne
divb
or
dec
aaa
jp
loopne
enter
sbb
sbb
mov
adc
mov
enter
mov
loopne
mov
clc
sbb
fimull
cmp
lods
insb
int3
xchg
xor
rolb
imul
mov
xchg
inc
add
mov
scas
js
jo
mov
mov
dec
sbb
popa
lret
cmp
fdivs
push
in
jg
jne
push
movsl
mov
lret
mov
lret
cmp
cmc
mov
sbb
mov
in
cli
add
imul
mov
out
push
data16
movsl
roll
xchg
mov
sub
add
into
jge
aas
mov
add
andl
dec
mov
xchg
cmp
cli
mov
push
insb
pop
or
andps
sub
and
sahf
in
cmp
pop
fsubl
sahf
and
and
push
mov
pop
push
and
ret
cmp
in
cs
cmp
cmp
push
stos
mov
mov
stos
out
arpl
in
hlt
movsb
ficoml
dec
cmp
xor
sub
std
sub
pop
arpl
mov
pop
divl
mov
and
cmp
aaa
ja
mov
lods
outsl
or
cmpb
inc
xor
inc
enter
add
jnp
mov
cmp
notl
pop
daa
roll
leave
out
mov
ror
push
cmp
jl
rep
jg
mov
loope
xchg
or
dec
outsb
fldcw
cltd
cli
inc
stos
lods
pop
mov
hlt
in
sahf
aaa
cmp
xchg
push
fs
es
sub
sbb
cmp
fistpl
repnz
push
lds
and
je
lock
pusha
and
mov
roll
xchg
jnp
insl
sub
xorl
das
push
daa
mov
cmp
mov
test
js
or
popa
cmc
rorb
lret
popf
cmp
jns
sub
jmp
int
push
pop
jne
pop
stos
std
or
inc
mov
xor
add
dec
push
cld
aaa
clc
fadd
dec
pop
clc
fcomip
data16
addb
cmpl
cmp
out
cmpsl
mov
push
and
jmp
in
ja
jecxz
cld
mov
mov
and
add
bound
cmp
out
imul
in
out
pushf
lahf
mov
mov
or
pop
jb
shlb
call
es
sbb
and
mov
sub
aas
outsb
cmc
mov
jae
fs
notb
ja
dec
dec
mov
pop
sbb
pop
filds
out
add
f2xm1
sub
ds
xchg
push
inc
aaa
add
mov
aaa
xor
repz
ljmp
mov
mov
jmp
sub
adc
jmp
in
mov
clc
mov
push
adc
sbb
jmp
xchg
ds
sbb
lods
add
mov
cmp
mov
sub
into
mov
xchg
mov
repz
xor
jbe
gs
fsubrs
lret
mov
xor
mov
mov
in
lock
out
inc
pop
popf
mov
mov
lahf
fildll
pop
adc
in
jmp
xor
add
adc
pop
mov
shrb
push
jno
jo
hlt
add
leave
pop
js
int
lods
dec
push
aad
lahf
inc
mov
sub
imul
push
lret
shll
aaa
jp
adc
fwait
dec
push
pop
out
fisubrs
shl
lods
jmp
fcomip
xlat
dec
lock
xchg
pop
xor
xlat
mov
clc
test
loopne
loopne
cmp
push
lock
fstl
jns
test
jae
insl
mov
or
aam
pop
push
fstps
arpl
lock
pushfw
pop
rorl
imul
mov
push
out
or
fistpl
mov
divb
andb
pop
rclb
mov
pop
ljmp
push
cmpsb
dec
add
pop
adc
xchg
addr16
movsb
test
or
xchg
or
add
cwtl
and
inc
rorl
mov
ss
mov
roll
je
cmp
fmull
fiaddl
add
mov
push
int
test
xchg
fstpt
or
bound
pop
add
movsl
adc
test
popa
jg
and
pcmpeqw
add
adc
in
paddq
orb
and
or
fmuls
rolb
xchg
push
adc
sbbl
cmp
std
insl
mov
adc
mov
loop
xchg
mov
subl
pushf
mov
dec
cmp
mov
xor
lahf
add
mov
inc
fsubr
sub
mov
push
mov
sbb
in
jno
imul
sub
and
rol
mov
push
pop
add
sub
aaa
dec
sub
jne
pop
sti
dec
fstpl
movsl
outsb
inc
mov
sbb
sbb
sbb
lahf
in
xchg
inc
cmc
mov
arpl
sbb
popa
inc
mov
loopne
dec
jle
aas
cmpsb
mov
je
cmpsb
xchg
pop
sub
mov
xchg
cmp
cli
das
nop
testl
ds
inc
dec
and
sub
mov
mov
and
ret
in
rorl
adc
movsb
xor
mov
jnp
testb
dec
imul
in
pop
adc
stos
sub
and
mov
enter
inc
mov
out
mov
xchg
hlt
sub
jbe
xor
test
push
xor
gs
lret
cli
pusha
insl
ret
jg
insl
jo
jge
fsubs
pop
adc
push
inc
mov
sahf
outsl
xchg
jo
fs
add
test
loop
cmc
cs
xor
enter
int3
insb
cmpsb
ds
std
inc
pop
sub
ja
push
xor
out
jae
hlt
mov
mov
sbb
lods
call
and
icebp
fcomi
jle
filds
flds
jb
xchg
stc
int
xchg
push
xchg
std
lcall
and
mov
or
in
insl
ja
pop
xchg
push
jne
mov
pop
lret
fldcw
and
inc
jae
pop
loopne
int3
xor
sar
ljmp
es
or
mov
xchg
xchg
fldl
xchg
push
mov
in
bnd
cld
movsb
sbb
fcomp
idivl
ss
inc
fistps
inc
sbb
cmp
and
mov
aaa
popf
out
lret
cmpsb
shll
mov
adc
mov
mov
js
sub
lock
adc
movsl
inc
sbb
stos
int
or
pop
xor
int
subb
lahf
dec
lret
xchg
add
cmpsl
bound
lods
aam
xchg
xchg
outsb
out
mov
inc
addr16
inc
int
jbe
push
in
mov
pop
insb
clc
xor
jo
pop
xorb
cli
das
cmc
hlt
push
adc
roll
push
mov
cli
and
xchg
and
and
divb
orl
fcomps
push
or
add
mov
inc
cmp
or
or
ret
shll
hlt
lret
push
mov
ja
jmp
mov
rol
addr16
cli
xchg
stc
push
xchg
inc
fistpl
push
mov
add
and
cmp
mov
test
lock
inc
adc
fbld
or
sbb
mov
sbb
push
aas
aam
pop
gs
cmp
imul
mov
jle
jno
ds
mov
icebp
imul
mov
pop
jle
jbe
mov
xorl
sub
xchg
or
xlat
orb
rolb
jl
cltd
pushf
add
and
sbb
xor
xor
repnz
jo
divb
xchg
sbb
lds
mov
sarb
pop
sbb
adc
scas
mov
jmp
lods
pop
pop
inc
paddw
sbb
or
push
or
subb
js
jle
nop
mov
xlat
sti
stos
xchg
cmp
jbe
cmp
ret
and
aam
or
add
xor
test
cmp
xor
sub
repnz
add
or
lock
imul
dec
mov
xor
sub
outsl
lods
push
sahf
push
stos
or
xchg
xchg
jmp
push
jp
leave
push
movsl
fcmovnu
fucomip
mov
cld
das
cmc
sub
loop
test
movsl
mov
pop
sbb
sbb
in
sbb
icebp
or
lahf
cmpsl
push
sti
mov
mov
out
shll
mov
add
fwait
cwtl
mov
ficompl
cmp
nop
int3
xchg
and
fwait
pop
xchg
cmpsl
fcomps
mov
sbb
insl
scas
cmp
pop
dec
stc
lock
lret
lea
icebp
jb
pusha
outsb
sbb
push
inc
jmp
ljmp
lods
or
pop
xchg
leave
aam
jl
mov
lods
mov
negb
add
loope
hlt
pop
out
rorb
rcl
out
xor
daa
and
xor
dec
cmp
sub
xor
dec
or
decb
push
orl
mov
sbb
mov
fs
scas
call
rcrl
repz
add
fwait
jne
push
scas
sbb
mov
movsl
leave
mov
pop
iret
sbb
or
aam
jbe
stos
shr
cs
mov
and
push
push
push
adc
jp
jbe
inc
pop
or
lods
ret
push
sbb
loopne
or
mov
jbe
xchg
ret
cmp
mov
inc
xor
out
mov
mov
mov
add
jmp
fistpll
mov
std
clc
pusha
push
mov
or
lret
adc
fdivrs
ljmp
in
inc
ss
and
add
bound
test
cmp
xchg
jp
xor
dec
mov
mov
test
xor
push
lods
jle
out
inc
imul
push
add
shll
arpl
in
inc
xor
test
in
pop
jg
repz
jnp
xchg
push
add
inc
sub
imul
fdivrs
sahf
mov
ljmp
jno
adc
dec
subb
jmp
push
fadds
jg
pop
lods
iret
dec
xlat
call
mov
imul
cltd
mov
ret
or
push
ret
push
hlt
std
mov
aaa
rorl
jecxz
mov
out
int
shrl
dec
sbb
mov
jb
popa
ret
mov
sub
es
in
pop
es
stos
pop
hlt
popa
sub
iret
lods
outsb
add
cmpsl
jge
or
jge
pop
mov
or
push
dec
jbe
popa
pop
pop
fsub
add
ret
dec
pop
je
sbb
lahf
jge
xchg
adc
xchg
mov
test
sub
jnp
ja
icebp
imul
pop
and
lahf
jle
add
test
lds
mov
daa
test
loope
jmp
loopne
repz
aas
pop
cmp
cwtl
sbb
clc
xor
push
into
push
lock
insl
jl
lds
cmpl
inc
dec
and
stos
xor
pop
stos
iret
inc
adc
cli
jbe
leave
xor
mov
mov
or
cmc
orl
mov
rep
mov
aas
ja
icebp
jmp
fadds
mov
rorl
xchg
icebp
mov
movsb
insl
sbb
jae
sarl
andl
sub
mov
in
fcomps
lods
or
sbb
outsl
addr16
fidivl
imul
or
cmp
cmp
push
push
mov
sub
fsts
jge
pop
sub
pop
imul
mov
sbb
cs
pushf
adc
insb
inc
cmp
sub
xchg
leave
pop
ret
mov
js
jmp
sbb
adc
xchg
sti
adc
icebp
mov
addr16
mov
add
push
popa
in
mov
cwtl
dec
icebp
into
dec
test
mov
jecxz
mov
out
int
pusha
hlt
sub
inc
cmc
ret
pop
pop
lret
adc
add
fdecstp
insb
push
rcll
inc
pop
push
fs
lahf
out
int3
ljmp
and
jg
loope
jp
das
pop
mov
in
mov
aas
mov
jb
fcmovne
movsb
cltd
push
mov
xchg
mov
mov
andl
adc
adc
je
add
dec
xor
cld
mov
cld
frstor
fs
pop
int3
psrad
movnti
pop
xchg
push
push
popf
mov
test
imul
pop
lret
push
std
sahf
cmpsb
xchg
je
lret
cmc
push
adc
or
mov
sbb
xor
loop
lods
or
jmp
pusha
cmp
inc
jbe
adcb
inc
xchg
mov
pushf
leave
push
cmpsl
dec
pop
dec
dec
stc
clc
push
ret
idivb
lea
xchg
cmp
test
adc
push
push
adc
rorl
cmp
cli
enter
push
rcrb
addl
cltd
cmc
dec
repz
xor
jle
jge
sbbb
sbb
or
sarb
out
cmp
pusha
pop
push
insl
jecxz
cli
mov
je
icebp
xchg
fbld
mov
imul
pop
lret
adc
call
mov
add
mov
in
movsl
cwtl
pusha
nop
lahf
inc
and
inc
rep
pop
mov
movhps
mov
lcall
add
cmc
gs
imul
push
add
in
js
movsb
lcall
sbb
loopne
cmpsl
cmc
fs
ja
jae
push
stos
mov
mov
gs
add
xchg
loop
les
push
loopne
add
subb
cmpsb
adcb
pop
push
imul
sub
dec
xor
adc
aam
pop
lods
sub
test
loopne
notb
xchg
sub
rclb
ror
movsb
cli
leave
cmp
aad
ds
and
fnstenv
lock
test
dec
aaa
cmc
mov
cmp
adc
and
or
lret
adc
jle
mov
ret
and
adc
pop
inc
push
pop
add
in
maxps
cld
aam
nop
pop
incb
pop
mov
mov
xchg
lods
jle
sub
pop
hlt
lea
add
mov
xlat
mov
fisubl
insl
xchg
pop
fcmove
cmp
lahf
dec
mov
xchg
cmp
jae
test
push
orb
lret
or
mov
inc
pop
sbb
xchg
rolb
lret
push
pop
into
adc
sti
hlt
inc
add
mov
xlat
push
xchg
mov
sbb
aad
inc
mov
mov
cmc
pop
cltd
popa
mov
adcl
cmp
loope
pop
add
mov
sar
inc
bound
push
scas
mov
jecxz
jg
pop
mov
out
xor
orl
xor
and
orl
add
pushf
add
mov
mov
dec
mov
sbbb
jecxz
inc
and
pop
or
mov
pusha
mov
pushf
and
jge
cmpsl
sub
push
mov
imul
loop
fildl
cli
xchg
stos
aas
push
xchg
popa
mov
ret
test
mov
add
sti
je
jo
adc
adc
bound
xchg
call
in
xlat
adc
or
sti
mov
mov
mov
cld
movsb
addr16
mov
mov
mov
lcall
ljmp
stc
add
adc
test
std
add
mov
enter
or
nop
pop
mov
cmp
adc
fcmovnb
fsubrs
adc
test
loope
iret
loopne
pop
incb
mov
ret
ss
icebp
dec
sbb
aam
cld
push
ret
and
addr16
adc
adc
push
inc
or
mov
adc
repnz
cmpsl
adcb
or
cmpsb
jno
sub
outsb
insl
mov
xorl
movsb
adc
pop
push
add
xchg
mov
cmp
xchg
sub
jle
cmp
xchg
or
movsl
push
arpl
icebp
lds
aaa
shlb
sbb
adc
ret
add
inc
ret
popf
imul
mov
jnp
ss
clc
dec
enter
leave
mov
in
stc
je
scas
mov
lds
call
mov
ret
add
add
das
xchg
xchg
arpl
ret
repz
call
popf
adcb
jno
mov
mov
sbb
inc
add
jp
push
cmp
cmp
imul
xchg
or
adc
ljmp
pop
es
dec
sub
scas
jnp
shrb
iret
xor
mov
repnz
test
pusha
lret
aas
cmpsb
dec
pop
mov
mov
sub
mov
lret
imull
scas
mov
inc
add
movsb
imul
cs
inc
dec
mov
jmp
loop
mov
inc
popf
xor
push
daa
and
insb
pop
dec
xor
dec
addr16
add
cld
test
in
aam
inc
dec
xchg
adc
cmp
neg
push
js
daa
and
add
cmpsl
loope
add
popw
loope
cmpsb
add
je
cltd
test
repnz
xchg
data16
cmp
mov
ror
add
gs
mov
xchg
out
scas
sub
repnz
ljmp
or
mov
je
jae
popf
xchg
xor
cmp
roll
sbb
fmul
add
stc
dec
lods
ljmp
arpl
shll
sbb
fmull
mov
push
fidivrs
jae
fistps
aad
mov
or
int
lds
jo
mov
cmpsb
rorl
insl
dec
pushf
xchg
int
gs
pop
or
test
fisttpl
sub
aad
jecxz
in
xchg
loope
outsl
mov
push
xchg
push
inc
jno
push
cld
xor
jb
addr16
arpl
add
std
pushf
pop
aaa
es
ljmp
fsubs
ja
xor
dec
cmp
ja
add
fcmove
push
rorl
in
xchg
test
push
sub
sub
push
andl
xor
ret
insb
in
jl
sub
xor
nop
addr16
inc
or
outsl
jp
mov
cmp
xchg
dec
dec
ja
sub
inc
pop
sub
bound
xchg
adc
hlt
fbld
subb
cwtl
cmp
popf
popa
loope
or
movsl
std
pop
lods
pop
mov
into
mov
out
push
in
aam
sbb
testb
cmp
test
mov
stc
mov
movsb
pop
adc
hlt
out
jg
fs
icebp
in
sbb
leave
jae
fs
pop
fdiv
mov
loope
jnp
out
or
ljmp
push
mov
lret
std
mov
int3
sub
mulb
push
mov
bound
lahf
fcmovb
adcl
cmc
xchg
subl
xchg
xor
xor
sbb
jae
jge
jno
int
inc
daa
jbe
cld
jecxz
push
mov
lods
sahf
adc
dec
not
ds
pop
repz
test
inc
inc
insb
std
jnp
pop
fwait
popa
adc
and
cli
bound
flds
pop
inc
add
pop
push
pop
pop
adc
mov
int3
fmulp
sub
out
jns
in
outsb
mov
hlt
adc
mov
fsubrl
nop
es
jmp
jns
sbb
jo
lret
je
daa
jo
add
xchg
std
fimull
and
shlb
shr
xor
test
leave
adc
adcl
lcall
jle
jnp
sbb
shld
pop
or
enter
test
adc
and
sti
lret
movsb
inc
and
mov
pop
icebp
lcall
js
pop
test
sbb
jmp
push
inc
xchg
jecxz
pop
push
ficoml
inc
jp
arpl
or
sahf
lea
pop
pop
nop
jge
movsb
scas
mov
adc
jp
xor
jle
hlt
addr16
stos
mov
nop
ljmp
nop
sub
sarb
sarb
imul
movl
sub
shlb
adc
repnz
mov
dec
fisttpl
sub
jg
shll
add
aad
adc
fidivs
add
mov
ds
mov
testb
dec
inc
repz
inc
mov
es
fdivl
lret
pop
out
fsubl
adc
clc
es
mov
test
scas
xchg
mov
gs
dec
add
das
cmp
imull
jbe
rcl
ljmp
and
fstpt
daa
lahf
push
shll
rep
rclb
popa
nop
sbb
push
lock
imull
scas
imul
mov
fcmovnb
negb
dec
sti
lock
mov
inc
loopne
xchg
sub
dec
and
inc
aam
test
pop
pop
dec
jmp
pop
dec
jae
popa
in
push
mov
lret
cwtl
xchg
and
sub
mov
mov
es
imul
or
fildl
fldt
movsl
adc
insb
int
call
cmpsb
jge
fmull
data16
push
ret
pop
test
pop
xlat
dec
pop
xor
sub
loope
mov
xor
mov
nop
push
cs
adcl
push
or
lret
add
mov
ret
aam
mov
adc
inc
adcl
mov
int3
lret
out
pop
mov
leave
repz
js
gs
mov
hlt
jo
mov
cmp
or
dec
dec
pop
das
clc
pop
adc
lods
test
mov
mov
inc
mov
jae
int3
test
mov
jecxz
inc
dec
inc
fidivrl
imul
mov
mov
mov
nop
push
mov
gs
shrb
lods
rol
in
push
lss
shr
daa
imul
shll
adc
xor
fistps
inc
jb
sbb
nop
pusha
dec
cmp
mov
jge
mov
adc
push
add
sbb
sbb
ret
add
xor
clc
xorb
mov
add
xchg
mov
dec
outsl
or
jmp
mov
or
pop
ss
mov
dec
gs
ss
mov
rorl
imul
jae
or
cs
push
jne
cltd
push
add
test
adc
cld
in
sbb
fbld
mov
repz
dec
rcrb
cmpb
mov
dec
fstps
sarl
mov
dec
mov
les
and
or
insb
and
jl
lcall
pop
and
push
test
mov
push
dec
mov
shrb
inc
lock
inc
fadds
jae
setp
cmp
pop
jecxz
bound
sti
lock
xchg
mov
lret
pushf
and
mov
hlt
cmc
mov
mov
sub
mov
pop
push
inc
or
adcl
stos
les
movsb
ljmp
pop
test
js
push
push
sub
add
rolb
jne
outsb
test
xchg
sti
xor
push
inc
push
lret
js
or
xor
and
xchg
push
add
push
and
je
sar
pop
les
sub
cwtl
cli
aaa
fbld
and
dec
fstps
lods
xorl
scas
sbb
insb
sbb
inc
push
mov
cmp
shrb
push
add
adc
or
xor
jecxz
xchg
fs
xlat
fisubs
xchg
sbb
cmp
mov
call
cmp
mov
xchg
subl
add
leave
lds
xorps
fidivrs
inc
mov
rclb
in
pop
in
andb
fdiv
ds
cwtl
push
or
stos
nop
adc
data16
adc
adc
lods
inc
icebp
mov
push
out
mov
cmp
fldenv
xlat
cmpsl
xchg
aas
sbb
push
shrb
out
xor
cli
std
dec
outsb
mov
out
lahf
sbb
adc
jmp
xchg
lcall
ljmp
mov
subl
sub
enter
js
scas
dec
insb
movsl
pop
mov
stos
sub
test
push
rcrl
sub
cmp
aad
leave
enter
xchg
loope
je
inc
push
ret
pop
or
cmp
jbe
adc
xor
dec
or
inc
insl
stos
sti
mov
std
xchg
aas
push
sbb
loope
fisttps
imul
bnd
mov
dec
push
mov
movsl
xchg
inc
bound
pop
and
inc
dec
pushf
lods
cli
ljmp
movsb
stos
movsb
or
mov
cld
das
cmp
ja
mov
mulb
sbb
xor
and
imul
add
clc
adc
or
adc
jg
in
roll
test
daa
je
mov
mov
push
lock
mov
repz
clc
pop
cs
les
or
arpl
pushf
or
hlt
enter
ja
xchg
mov
sub
sbb
mov
jecxz
out
rclb
or
pop
add
push
mov
mov
jmp
subl
in
push
push
cmc
ljmp
fwait
dec
into
clc
mov
sbb
ret
fstp
popf
inc
es
out
ds
inc
hlt
movsb
mov
repz
orb
pop
jb
or
jne
aas
stos
cmc
adc
stos
lock
dec
pop
mov
mov
cmp
adc
movsl
dec
scas
outsl
and
jmp
data16
sbb
jae
roll
out
lret
out
push
test
sub
cs
stos
mov
shll
push
sbb
push
inc
mov
cmp
in
mov
mov
ljmp
lock
loopne
adc
fwait
repnz
mov
test
hlt
stos
out
or
sbb
push
test
or
aaa
addr16
sub
adc
inc
xchg
pop
sub
faddp
popf
push
mov
lods
out
leave
dec
fldenv
jnp
xchg
dec
pop
fistpl
pusha
mov
sti
ljmp
addl
cmpsl
push
ret
xchg
or
popf
fsubrl
in
data16
pop
or
or
xor
mov
jg
push
push
fisubrs
test
movsl
loope
outsl
mov
aaa
jecxz
stos
call
ficoms
pop
sti
mov
mov
push
popa
lea
stos
add
jnp
cmc
int3
adc
movsl
aad
mov
sbb
adc
mov
xchg
or
cli
bound
scas
loope
imul
and
push
out
bound
adc
and
dec
push
dec
outsl
test
movsl
stos
xchg
mov
into
add
sub
leave
jbe
sub
xchg
out
lock
push
rol
insb
jo
sbb
xchg
nop
cmpps
jg
sbb
xor
or
in
mov
jge
int
sub
daa
push
loope
push
push
enter
addb
sub
xchg
stc
mov
jle
xchg
cmp
mov
jno
enter
lds
leave
into
repnz
adc
rorb
xchg
add
enter
lock
iret
jae
push
enter
clc
gs
adc
fs
nop
cmp
lret
sub
pop
test
les
rcpps
dec
push
test
sub
stos
sub
push
mov
pop
ret
xor
or
xchg
mov
cmc
xchg
and
std
les
sbbb
neg
sarb
cmp
dec
push
pushf
inc
add
push
cwtl
add
jb
shrb
sbb
in
insl
fistpll
mov
xchg
mov
cmc
push
inc
bsf
enter
pop
stc
daa
push
cmp
aaa
cld
jne
jmp
push
jne
je
nop
imul
adc
pop
xor
mov
into
test
ss
xorb
mov
adc
call
cmp
jo
sbb
mov
data16
add
xor
subl
pop
popa
adcb
inc
out
push
add
pop
dec
arpl
adc
stc
paddsw
cmpsl
or
out
out
fwait
pop
lahf
add
or
push
mov
outsl
test
inc
inc
sar
mov
xor
jb
sti
pop
dec
div
mulps
ljmp
jo
add
mov
dec
iret
pop
jl
cmp
dec
pop
add
lcall
outsb
aad
out
mov
cmp
jmp
repnz
movsb
loope
add
lods
cmp
mov
scas
jne
xor
sub
shlb
push
xor
cmc
bound
cmp
adc
adc
jbe
dec
cs
or
add
and
push
push
fwait
or
or
pop
outsb
xchg
cld
inc
aam
sub
or
std
pop
fdivs
push
sbb
sbb
divb
pushf
xchg
test
pop
movsb
mov
inc
daa
mov
xchg
jb
sub
addr16
mov
push
xor
mov
xor
dec
mov
dec
dec
ret
adc
fs
cld
cmp
fwait
scas
mov
cmp
imul
shrb
jg
movsb
mov
stos
adc
pop
dec
out
sbb
or
addl
cmp
dec
sub
push
lods
aam
mov
cmp
jmp
sbb
es
loope
icebp
or
gs
and
and
push
jae
mov
popa
dec
dec
ja
out
loopne
xchg
mov
pop
nop
sbb
xor
shlb
popa
push
push
jecxz
sbb
call
in
sub
push
add
pop
ret
mov
fidivrl
mov
movsl
ret
sub
int3
pop
or
rol
mov
fcmovnu
loop
adc
jge
aas
ljmp
loope
add
sub
and
js
pushf
mov
mov
sub
mov
fwait
add
cmpsl
xchg
pop
loope
lods
add
insl
mov
jne
lea
adc
clc
jp
lods
pop
mov
inc
dec
cmp
test
js,pt
shlb
pop
test
sbb
jmp
xor
rorl
cmp
popf
mov
ja
push
xor
push
mov
int3
lods
insl
test
xchg
lahf
jp
cmpsb
push
jnp
ret
pushf
push
xlat
nop
xor
pop
cmp
cmc
sbb
decb
hlt
lahf
sub
sarb
sbb
lods
mov
inc
js
popa
pop
mov
cmp
dec
fwait
jno
xchg
and
adc
and
push
add
dec
mov
sub
popa
mov
xchg
popf
aas
dec
mov
aam
dec
xor
inc
scas
addr16
or
movsl
orl
adc
and
mov
fstpl
mov
mov
enter
rclb
stc
fsubr
push
aas
addb
xor
repz
ljmp
inc
cs
inc
mov
cmp
in
pop
scas
je
stos
in
mov
jne
in
push
daa
inc
sub
imul
out
gs
cmc
mov
adc
shlb
ljmp
push
fs
in
sarl
push
adc
shll
ret
dec
popf
sbb
ds
insb
aad
xor
lret
repz
jo
mov
rcrb
decb
adc
mov
and
stos
cmp
jle
in
xchg
int
cmpsb
sbb
lahf
or
adc
cs
aad
xchg
mov
imul
stos
lock
pop
lret
icebp
fsts
ret
clc
popf
push
dec
lea
movsb
cli
mov
enter
enter
shrb
daa
lcall
mov
push
fstpl
lods
loope
dec
sub
stos
into
and
dec
push
pop
pop
sbb
mov
inc
test
jnp
adcb
in
in
dec
lahf
push
push
xor
jg
in
push
push
xor
pop
mov
push
inc
iret
add
lret
jle
add
out
out
lret
pop
and
push
xchg
shr
pop
test
jno
and
mov
dec
mov
mov
enter
outsb
cwtl
fiadds
mov
subl
stos
or
sbbb
pop
dec
mov
jg
jg
jp
dec
push
rorb
icebp
and
addr16
imul
cmp
inc
mov
jb
pop
gs
lds
sahf
push
adc
clc
cmp
loopne
cmp
enter
test
in
sbb
loopne
sub
nop
xlat
push
add
push
loopne
imul
pop
push
movsb
cmp
and
fldl
icebp
xchg
pop
insb
push
jmp
cld
hlt
xchg
jmp
movsl
hlt
inc
mov
jo
int
mov
or
push
inc
sahf
sbb
popf
pop
pop
js
xchg
jl
jnp
mov
mov
in
iret
jns
push
outsl
mov
mov
mov
fldenv
je
hlt
jnp
pop
fidivrl
cmpsl
lock
add
int3
and
add
test
mov
mov
in
mov
sbb
test
out
imul
outsb
out
push
sub
push
aad
lret
cs
sbb
adc
mov
mov
inc
pushf
xchg
lock
sahf
cmc
cli
pop
mov
mov
lds
xor
xlat
pop
imul
or
or
push
mov
pop
insl
mov
and
mov
jb
mov
jmp
in
fmull
es
imul
shl
sub
ds
mov
push
incl
in
cwtl
cwtl
jns
es
lcall
xor
sahf
les
cmpsl
dec
pop
pop
lds
xchg
sub
inc
mov
lea
sbb
and
fld
in
push
pop
cwtl
jmp
repnz
aam
test
adc
or
lods
sbb
sub
jecxz
mov
sti
lret
mov
es
adc
and
mov
loopne
rclb
cld
inc
fistpl
mov
mov
mov
cmpsl
mov
sub
loopne
cmpb
cmp
cwtl
dec
lods
lods
std
jno
xchg
lret
mov
dec
xchg
pop
mov
pop
mov
aad
loopne
pusha
mov
sahf
mov
add
imul
es
jg
mov
or
insl
rcr
arpl
add
daa
or
dec
orl
leave
mov
add
push
sti
adc
mull
test
fsubrp
mov
and
addl
inc
mov
cmc
mov
fiaddl
scas
cwtl
dec
cmp
ret
and
fcoml
or
xor
adc
mov
pop
dec
add
sbb
jb
xchg
call
ljmp
mov
jecxz
xchg
iret
dec
pop
shll
js
aad
fisubs
icebp
lret
jmp
push
pusha
stos
jo
pop
shl
xchg
in
arpl
adc
mov
add
data16
sub
fs
aaa
call
popa
aad
dec
add
push
jns
xchg
div
or
dec
mov
sbb
setp
mov
sub
dec
and
repnz
out
aam
adc
or
popf
ljmp
pop
xor
pop
les
in
sbb
cmp
jnp
cmp
dec
les
cmpsb
xor
xchg
mov
cld
ss
dec
aas
stc
dec
cli
out
inc
outsb
cld
jp
lret
pop
mov
push
sub
shl
adc
lods
cs
add
pop
scas
push
sub
notl
ja
pop
mov
ljmp
mov
out
js
xchg
pop
cmpsl
rolb
mov
xchg
adcl
daa
mov
mov
stos
adc
and
nop
call
inc
int3
adc
lock
pop
inc
dec
pop
sbb
pop
sbb
jge
jne
mov
xchg
popa
or
push
pushf
or
xor
es
out
xor
outsl
imul
shll
ret
lds
and
push
mov
adc
das
daa
xchg
add
lret
xchg
rorl
and
xchg
repnz
out
imul
mov
jecxz
xor
adc
sbb
mov
jp
std
rcrb
xor
pop
repz
inc
lret
jge
nop
icebp
push
in
jno
ss
adc
push
sar
movsl
cmp
sub
leave
mov
add
sbb
mov
xor
dec
mov
pop
sub
push
adc
or
mov
hlt
cmp
gs
cmc
inc
mov
mov
sbbl
leave
jp
jl
aam
insl
orl
and
jp
jmp
movsl
jmp
lret
pop
pop
xor
scas
out
popf
cmp
lahf
sbb
mov
lea
movsb
test
mov
and
mov
sub
pop
in
pop
das
mov
sbb
cs
xor
rep
hlt
ss
sub
aaa
out
ret
add
out
sub
loopne
lods
xor
in
and
fsubr
std
push
aad
out
push
aam
rcll
repnz
sub
ret
int3
inc
jle
sbb
cs
scas
popf
bound
dec
dec
fisubs
mov
int3
shr
ljmp
nop
rcrl
mov
jbe
pop
scas
jo
xchg
sub
sbb
movsl
xchg
or
movsl
pop
xorl
mov
inc
xor
scas
lock
mov
ret
out
push
push
ss
imul
adc
mov
ja
mov
jl
sub
fs
push
mov
cmp
or
shll
and
sub
lcall
into
push
jg
jmp
fistl
orb
mov
fcompl
dec
lea
rcll
ret
in
sub
dec
inc
sbb
icebp
sub
pop
faddl
orb
pushl
push
push
lahf
cmp
pop
mov
stc
mov
xchg
loopne
xchg
adc
dec
mov
out
ja
clc
cltd
addr16
hlt
rolb
adc
bound
dec
bound
or
pop
xchg
or
sbb
pop
movsl
shl
pushf
cmp
ror
or
xchg
jg
mov
jge
xor
pop
mov
outsb
jo
mov
scas
fisttpl
pop
std
test
sub
and
lock
lods
mov
cmp
popa
dec
ret
pop
les
adc
mov
sub
pop
rcrb
xor
roll
repnz
and
mov
test
mov
lret
cmp
stc
ds
add
fadds
fisubrs
sbb
push
and
cmp
shr
mov
pop
or
scas
mov
jp
push
mov
roll
jp
cltd
and
jle
movsb
add
or
push
push
ror
sbb
addr16
fwait
fs
div
out
dec
cs
add
mov
out
jg
pop
cmp
mov
pop
sarl
jbe
mov
xor
sub
fcmovne
sbb
cmc
cmp
loopne
gs
push
fucomi
mov
cmp
sbb
mov
cmc
mov
lock
and
push
cmpsl
jnp
pop
cld
mov
push
pop
fiadds
stos
jl
dec
scas
les
cltd
mov
mov
mov
out
pop
fidivrs
test
out
sbbb
lds
hlt
les
xor
imulb
fstpt
daa
repnz
les
aam
mull
push
jb
imul
scas
hlt
xor
mov
xchg
fidivrl
jg
scas
cltd
add
loop
add
pop
mov
lods
call
loopne
ficoms
ja
subl
pop
addb
call
cmp
idivl
add
pop
dec
les
push
mov
imul
add
push
dec
test
mov
adc
cmpb
sbb
inc
lret
pushf
dec
mov
inc
fidivrs
and
icebp
or
and
push
in
xor
dec
pop
push
shl
pop
push
mov
aad
jo
adc
jne
jb
insl
ret
pop
arpl
and
mov
xchg
jp
add
test
mov
das
xor
adc
and
xchg
fcmovbe
mov
movsl
scas
mov
or
je
adc
pop
fcompl
or
mov
push
add
inc
stc
pop
cltd
pop
mov
enter
mov
insl
push
sub
push
jg
mov
xchg
pop
jne
out
sub
add
xchg
jg
jns
enter
sub
jae
xor
lcall
xchg
stos
jp
aas
or
fmuls
sbb
call
movsl
pop
in
out
jg
nop
sub
sub
insb
insl
dec
push
popa
lret
mov
mov
pop
ds
sub
cmc
dec
add
stos
mov
jb
std
setge
mov
sbb
cs
in
jns
xchg
jecxz
pop
cli
xor
out
inc
sub
lods
push
add
cltd
in
movsb
xchg
jle
jp
insb
adc
stc
out
inc
mov
cmp
jne
ret
push
xor
das
loopne
xor
mov
mov
add
xor
rclb
cld
mov
jge
dec
push
sbb
mov
or
cmp
sub
add
pop
push
xchg
dec
mov
mov
add
inc
or
mov
push
xchg
or
push
cmp
xchg
data16
stos
fcomps
popa
orl
adc
flds
out
mov
add
out
push
es
adc
inc
out
inc
mov
fsubs
sbb
icebp
lock
arpl
add
cld
push
clc
inc
adc
fistpll
shll
or
fdiv
cmp
adcb
popa
daa
enter
cmpsb
pop
xor
dec
lods
xor
scas
fsubl
pop
cmp
ficoms
xchg
mov
mov
pusha
int3
loope
push
jbe
mov
push
adc
mov
in
out
dec
movl
jne
rcrl
pop
movsb
pop
addr16
jl
dec
mov
or
pop
std
add
add
jg
push
mov
push
add
insl
mov
cmp
xchg
adc
pop
add
push
mov
aad
fdivrs
jg
repnz
aas
lret
in
add
push
je
lea
xchg
mov
mov
adc
sub
jmp
mov
xor
ss
xchg
add
cmp
add
adc
jge
arpl
jbe
push
add
xor
jo
pop
mov
mov
dec
inc
pop
es
ljmp
cmc
lea
mov
es
shll
adc
xor
xchg
nop
pushf
xchg
test
fimull
push
or
shrb
adc
leave
jmp
arpl
in
mov
jnp
xor
jbe
mov
loope
test
ret
fldt
pop
fldl
xchg
mov
pop
add
pop
push
cmp
or
adc
dec
mov
push
mov
mov
pusha
mov
sub
lods
mov
fcmovne
push
xchg
add
sub
incl
test
outsl
dec
pop
out
pop
sbb
xor
pop
arpl
mov
ret
cmc
or
inc
in
add
xchg
scas
jl
inc
jb
int3
pop
imul
adc
jecxz
jno
push
and
adc
xor
in
and
sub
cs
push
je
jo
add
rcrl
in
jle
mov
scas
adc
push
push
sub
fistpl
sub
mov
sub
mov
xor
je
sub
std
xchg
xor
xchg
add
in
sub
pusha
or
ds
mov
mov
sbb
mov
mov
cwtl
repnz
and
iret
or
fistl
and
aad
sub
mov
stos
sbb
or
pop
mov
stc
xchg
sar
lods
mov
cmp
jp
mov
gs
dec
and
jno
xchg
push
xchg
and
ss
insl
in
pop
repz
nop
or
pop
test
and
add
roll
nop
imul
enter
ds
std
sbb
rorb
mov
xlat
mov
push
sbb
ret
sbb
sbb
pusha
adc
add
mov
cmc
inc
mov
test
outsb
rcr
pop
push
and
push
nop
mov
cmp
insb
or
sbb
clc
shlb
adc
adc
mov
mov
test
cmp
pop
cmpsl
cmc
loopne
or
xchg
cmovg
push
out
mov
mov
mov
adc
mov
inc
push
sub
sub
adc
push
popf
dec
lods
repnz
sub
jmp
mov
movsl
inc
call
in
cs
cmpsb
push
jae
scas
fidivl
shrb
dec
ds
popa
mov
xchg
gs
sarl
imul
inc
fldt
pop
and
fsubrs
call
add
lea
dec
icebp
loope
mov
pop
push
jecxz
in
mov
sbb
call
inc
sbb
pop
sbb
cmp
push
mov
mov
jl
adc
xchg
test
es
outsb
push
push
jnp
cmp
cmpb
mov
loope
fbld
mov
movsl
iret
adc
idivl
sti
and
lock
sbb
pop
xchg
push
loopne
aaa
push
int
inc
mov
jmp
mov
decb
push
es
imul
push
fwait
pusha
add
mov
ficoml
out
or
outsb
insl
cmc
inc
pop
xor
jbe
sub
and
rol
pop
dec
lea
or
je
mov
loopne
dec
sar
imul
xchg
les
les
negl
fistpll
jnp
mov
jne
adc
mov
mov
int
mov
loope
adc
pop
xchg
mov
add
pop
push
mov
mov
shll
sub
xchg
fucomp
out
lcall
movsl
sub
xor
xor
adc
dec
mov
clc
leave
pop
fwait
or
sub
adc
inc
sub
mov
push
adc
push
loopne
ja
cs
imul
cltd
cmc
mov
mov
call
stc
jp
add
rcrb
ja
mov
add
insl
int3
pop
lea
stos
and
cmpsb
and
and
insb
movsb
adc
adc
sbb
cli
shld
xor
push
xor
jg
out
dec
push
js
jle
lcall
pop
aam
push
movb
mov
cmpsl
arpl
push
add
ret
xor
mov
adc
mov
add
jo
stos
or
jmp
lea
dec
jg
cmpsl
jg
sbb
test
adc
xchg
fcomps
cmpsl
test
test
daa
mov
adc
xlat
cld
inc
pop
mov
adc
int
pop
xchg
fldt
fdivrs
icebp
cmp
outsb
push
jecxz
enter
inc
fbstp
sbb
jl
mov
lea
xor
inc
jbe
or
push
mov
imul
xor
adc
testb
sbbl
pushf
adc
and
aad
xor
aas
pop
pop
out
mov
add
push
jg
adc
sbb
iret
out
dec
stc
rolb
xchg
push
mov
xchg
sub
xchg
mov
outsl
out
in
mov
shll
pushw
inc
repz
lock
sub
into
sub
add
lds
xchg
mov
jo
mov
pop
in
sti
adc
mov
dec
and
popf
cwtl
and
sub
jb
js
mov
in
fiaddl
push
xchg
add
push
pushf
xor
orps
push
pop
ret
jp
sub
into
mov
daa
jo
ret
sub
add
cmp
repz
addb
shll
pop
xor
in
cmpsb
mov
sti
mov
mov
outsl
xchg
pushf
pusha
aas
ror
dec
sbb
repnz
imul
sarb
les
lret
shrb
fstps
jp
js
push
adc
lret
cmp
rcr
mov
lods
pop
push
or
cs
adc
addr16
nop
cmp
pop
std
jns
sbb
jecxz
clc
mov
xor
std
xor
outsb
jle
inc
pop
mov
test
sahf
lods
vunpckhpd
xor
ja
dec
insl
add
gs
push
dec
push
mov
cmc
cmpb
jp
add
mov
lea
lock
stos
pop
dec
mov
scas
mov
inc
fnstsw
lods
mov
adc
rcrb
test
push
lods
adc
cli
pop
or
lahf
push
out
sub
sahf
sbb
xor
cli
stc
mov
loope
pop
mov
xor
push
jl
out
outsb
inc
push
mov
jge
push
inc
aaa
stos
cmpsb
or
fmull
push
loop
daa
sti
call
cmp
or
dec
or
xchg
pop
mov
data16
xor
sub
cwtl
mov
loop
mov
insb
pop
into
icebp
mov
cmp
pop
ss
imul
cwtl
rol
popa
dec
scas
push
add
test
fnstsw
popa
add
xor
pop
ljmp
movsb
add
jo
pop
aad
or
pop
adc
shrb
fisubl
dec
mov
andl
mov
dec
and
push
aaa
jmp
inc
out
lcall
mov
fstl
outsl
stos
sbb
jp
add
pop
pop
mov
lcall
lcall
push
jb
fneni(8087
fcomps
mov
add
clc
or
lcall
test
movsl
push
lds
jle
pop
call
mov
mov
clc
ja
outsb
jg
cmp
jns
std
test
test
cmp
mov
cmp
insb
lahf
pop
fdivrp
into
pop
inc
mov
outsb
pop
and
inc
mov
lea
push
test
hlt
sarb
les
push
je
cmp
shll
shll
out
test
pop
jl
ss
pop
adc
add
ffree
mov
add
outsl
xor
scas
fsts
push
sub
adc
testl
das
scas
lcall
arpl
mov
in
out
es
cld
sbb
bnd
inc
movsl
adcb
xor
sub
test
fadd
adc
in
ss
bound
icebp
test
jb
xchg
or
shrl
dec
mov
mov
scas
cmp
rorl
dec
push
sub
mov
repnz
psrld
mov
push
xchg
push
mov
cs
xchg
je
pop
cwtl
filds
and
aaa
mov
test
adc
sub
pushf
push
rcrb
inc
add
das
bound
test
push
cltd
xor
test
call
push
cmp
cli
lods
cld
fisttpl
outsl
cmp
xchg
into
sar
stos
and
loope
pop
sub
test
ret
mov
mov
fdivrs
test
or
nop
push
jge
mov
mov
mov
popf
rolb
add
or
sbb
addr16
movl
push
dec
mov
jmp
mov
mov
xchg
sbb
popa
pop
cld
test
stc
inc
push
sarl
das
mov
xlat
push
ds
mov
scas
jo
jne
pop
mov
lcall
stos
test
xchg
repz
dec
sub
mov
or
pop
mov
pop
clc
lahf
cli
addr16
mov
fstp
cmp
lahf
and
pop
or
rol
lahf
pushf
repz
or
inc
repnz
faddl
arpl
outsl
cmp
je
mov
xlat
dec
add
push
cwtl
cwtl
cmp
xor
xor
mov
push
pcmpeqd
mov
cld
aas
cmpb
fcmovbe
xor
sbb
mov
inc
stc
bound
jle
cmp
add
shlb
ljmp
push
jo
adc
fcompl
push
and
dec
js
dec
js
pop
and
mov
mov
aas
mov
cmpsl
adc
sub
xchg
rorl
incl
sarb
arpl
cmp
sahf
in
mov
cwtl
inc
adc
xchg
push
and
dec
jo
jg
dec
popa
icebp
subl
or
inc
movsb
push
int
jmp
jne
and
mov
mov
mov
jae
sbb
shl
mov
add
incb
sub
in
cmp
push
negl
and
mov
inc
xor
sub
data16
cmp
out
mov
lods
js
lret
fstpl
jg
loope
shrl
lods
imul
adc
stos
lea
sbb
fidivrl
pop
inc
xor
adcl
movsl
int3
sbb
mov
jnp
repz
shll
lret
int3
sbb
mov
pop
cmp
and
pop
inc
mov
mov
pushf
iret
xlat
cmpsb
mov
add
out
sbb
push
cmpsl
pop
cmp
jae
fisttps
inc
adc
pop
fisttpl
sub
lods
lahf
cmpsl
xor
ljmp
ds
inc
cmp
push
out
sbb
aad
lcall
xchg
mov
movsl
dec
imul
fldl2e
mov
mov
pop
xor
jg
mov
scas
int
adc
idivl
cmc
leave
jbe
in
int
mov
outsl
pop
out
xchg
mov
jo
fidivrl
jmp
cli
xchg
mov
inc
loopne
push
pop
mov
mov
pusha
jns
lods
cmpl
sar
add
iret
mov
shrl
jne
movsb
or
sub
pop
push
jge
mov
jae
mov
adc
ret
fwait
incb
pop
dec
addl
cmp
out
mov
loope
mov
and
pop
aad
sbb
js
and
pop
push
xor
rcll
mov
nop
ss
adc
pop
adc
lret
add
gs
sahf
sets
in
jmp
push
mov
nop
jae
sbb
or
dec
xor
stc
testb
idivl
stc
xchg
sub
sub
lahf
xlat
inc
pop
mov
jno
sbb
dec
aad
cmpsb
in
shlb
fnstcw
push
sbb
push
adc
jge
fwait
sbb
aaa
inc
and
jb
jle
divl
adc
arpl
daa
stc
shll
pushf
mov
cmp
fstpl
idivb
leave
mov
or
jge
imul
sub
xor
imul
dec
jnp
movsl
test
mov
movsb
cwtl
je
and
cmp
fildll
mov
sub
ret
pop
sbb
int3
mov
aas
and
std
cmp
cmp
ljmp
inc
or
stc
or
lock
jb
repnz
dec
mov
mov
xor
stc
repz
sub
jb
add
or
ds
aad
push
clc
dec
je
hlt
cmp
sub
dec
outsl
and
mov
mov
imul
xor
lret
mov
scas
fistl
scas
adc
push
add
jo
popa
inc
repz
movsl
gs
or
push
mov
subl
or
clc
je
pop
pop
lock
sub
outsb
push
push
cmp
dec
out
mov
and
and
push
jp
es
cmp
dec
jl
loopne
sub
lods
das
imulb
pop
lret
and
mov
outsl
and
jb
in
shlb
adc
addr16
jb
mov
jmp
xchg
stc
test
jmp
add
rclb
sbb
sbb
jne
cld
idivl
xchg
lret
es
mov
xor
repz
xchg
scas
call
inc
shr
lcall
cmpsl
cmc
inc
dec
mov
add
scas
mov
mov
dec
aad
sub
in
push
and
orb
mov
push
insl
rclb
movsb
xchg
mov
popa
dec
test
js
scas
pop
sarl
cmp
lds
adc
mov
xor
hlt
adc
enter
pop
dec
xchg
mov
insb
into
lcall
cmp
hlt
sbb
adc
xchg
mov
add
lock
jl
xor
pop
push
xor
popf
push
lock
sub
sub
mov
pop
int3
jl
push
fisubrl
jbe
call
or
and
aad
les
mov
pop
stos
and
stc
sbb
sub
and
and
xor
push
inc
gs
aad
dec
out
ja
mov
sbb
stos
push
inc
mov
cmpsl
sub
rolb
data16
adc
bound
jge
jnp
test
mov
sarb
in
cmpsb
adc
sub
hlt
xchg
pop
mov
jns
push
movsb
cmpsb
fs
mov
mov
lds
or
aam
cmp
adcl
stc
dec
dec
rol
add
dec
jge
push
mov
add
xchg
mov
pop
test
push
pusha
in
fsubrl
insl
lds
test
lods
jmp
jp
je
dec
fs
mov
cli
sbb
iret
in
les
popf
mov
mov
out
cmpsl
bound
fdivrs
insl
or
mov
xchg
sub
arpl
ret
pop
and
jno
pop
addr16
stc
loopne
jmp
xchg
lds
push
cltd
inc
mov
adc
mov
lods
xor
lret
xchg
or
sahf
fidivrl
push
lock
je
add
sbb
shl
dec
xor
out
push
shl
repnz
icebp
or
adc
dec
arpl
je
nop
adc
jmp
ret
cmp
adc
and
add
mov
aad
push
fldenv
ret
test
std
pop
test
push
push
iret
addr16
mov
stos
xchg
aam
aad
jl
pop
xchg
and
lds
js
rcr
jecxz
cmp
mulb
mov
arpl
sub
subb
jns
xor
int3
pop
xchg
jecxz
mov
dec
stc
jecxz
mov
fsubp
xchg
cmpl
or
movsl
and
int
loope
or
add
dec
cmpsl
inc
mov
cmpsb
mov
cmp
sub
inc
repnz
addr16
push
pop
shlb
outsb
pop
pop
push
movsl
mov
fdivs
fstpt
xchg
jne
aaa
lods
rorl
sub
hlt
fbstp
ret
aas
jbe
in
or
lahf
loopne
loopne
rcl
cli
mov
cmp
push
pop
cwtl
pop
outsb
insb
cmpsb
and
xchg
lret
dec
push
mov
cmpsl
ja
cmc
and
or
inc
shr
push
mov
mov
jns
fidivrs
jo
leave
divb
sarl
mov
imul
pop
out
bound
call
fisttpll
and
dec
cmc
sub
inc
dec
cmpsb
stc
dec
sub
fwait
cwtl
in
jne
lods
pop
cvtps2pi
fisubs
mov
mov
inc
xorl
xor
imul
repnz
cmp
dec
test
mov
xor
shll
pop
inc
test
gs
movsb
push
out
mov
imul
mov
ljmp
cli
sub
dec
and
fldl
and
ret
jae
jae
cld
sbb
dec
inc
push
xchg
lret
jl
in
sbb
push
int3
pop
enter
inc
subb
test
sbb
add
aam
cmp
nop
repnz
or
inc
repz
movsl
stos
outsb
mov
fidivl
je
scas
ja
mov
aam
outsl
ret
mov
es
xlat
popa
mov
leave
aam
sahf
sub
ds
push
sbb
arpl
stos
pop
lcall
push
inc
orl
dec
repz
push
and
jbe
testb
mov
pop
out
fists
imul
and
mov
xor
pop
inc
push
add
cmpsl
mov
out
andl
mov
enter
testb
fucomp
fsubrl
dec
std
push
cli
shl
cmp
ret
pop
push
dec
pop
xlat
movsb
cmp
pop
sbb
mov
lock
mov
mov
rcll
fildl
call
testb
ret
mov
xchg
push
stos
and
arpl
push
arpl
cwtl
pop
xor
sti
add
pop
mov
cmpsb
mov
ljmp
mov
hlt
clc
mov
pop
lods
mov
fisubrl
gs
int3
shll
pop
loope
fcmovnu
cmpl
hlt
out
movsl
jle
inc
scas
jno
and
daa
cmp
scas
pop
lcall
mov
clc
dec
and
test
xor
iret
iret
xchg
pushf
sub
stos
mov
or
jecxz
jge
push
xor
cmpsb
out
test
shr
std
xchg
and
roll
or
fs
xor
data16
cmp
adc
xor
ljmp
or
imul
mov
pop
xchg
in
test
mov
decb
xor
daa
jno,pn
pcmpgtw
out
mov
outsb
ret
test
xchg
pop
fwait
push
loopne
push
repz
mov
loopne
mov
or
mov
pusha
call
mov
xlat
inc
push
inc
xchg
xchg
push
cmovs
int3
sub
movsb
sbb
fiaddl
jns
cmp
leave
pop
ss
out
nop
or
lods
lods
push
jmp
xchg
push
add
mov
cs
dec
mov
lret
jb
mov
jno
lock
inc
out
stos
cltd
push
mov
jne
pop
lret
stc
fs
fdivrl
xchg
push
pop
fnstcw
xchg
aad
fcompl
int3
pop
push
mov
push
test
int3
cmp
mov
and
dec
xor
sub
in
mov
sbb
ret
pusha
mov
rcrb
pop
neg
loopne
xor
fnstcw
xchg
out
sahf
gs
adc
gs
pop
lcall
in
mov
aam
addr16
push
mov
add
jle
jne
das
orb
test
push
add
adc
dec
jae
in
in
sarl
in
out
add
add
outsb
repnz
out
mov
sub
mov
adc
jle
dec
shll
mov
adcb
mov
fstps
imul
mov
shll
in
jecxz
xchg
sub
dec
mov
in
movsb
jns
out
push
and
inc
into
jb
lods
inc
push
movsl
loop
jnp
mov
ljmp
pop
cmp
leave
cltd
aad
enter
add
and
xor
out
int3
and
push
bound
cmp
mov
cmpps
mov
mov
push
testb
cwtl
aas
lods
cmp
xor
push
mov
cltd
mov
cmc
jg
jb
pop
fnsave
outsb
dec
lea
lret
dec
orl
jl
push
jo
mov
hlt
outsb
int
mov
mov
loope
push
adc
mov
push
add
or
repnz
dec
cmp
mov
mov
clc
sub
loopne
dec
sbb
cwtl
push
daa
shrl
xchg
lods
dec
xchg
sbb
pop
push
popf
xchg
je
fs
loope
lret
pop
stos
shrb
add
loope
stos
test
xchg
les
push
enter
cmpsl
in
and
cli
or
es
pop
cli
fnsave
in
or
sti
pop
add
mov
mov
scas
daa
xchg
loop
mov
sbb
or
push
lret
rolb
les
mov
and
mov
mov
push
push
incl
es
and
fnsave
fsub
or
cmp
loop
or
mov
fisubrs
call
sub
or
adc
fsts
sub
jo
adc
pop
push
pop
scas
iret
repz
or
movsb
stos
jp
scas
or
sahf
std
xchg
jb
insl
cmpsl
sub
in
push
aad
femms
mov
imul
cmp
push
repnz
mov
dec
mov
jg
pop
or
fmuls
dec
test
sub
cmp
jb
adc
add
testl
jne
iret
movsb
xor
push
imul
test
lock
mov
xchg
jno
rcr
outsb
fdivs
jecxz
decl
lcall
jle
int3
das
add
int
adc
jb
pop
mov
push
push
into
fwait
or
maxps
mov
movsb
mov
fstps
and
sbb
iret
adc
jmp
je
ja
int
cwtl
lea
lret
xor
gs
aaa
test
aad
iret
inc
xchg
sub
mov
jne
inc
andl
loope
adc
ljmp
sub
vpsraw
mov
jp
or
repnz
adc
loopne
stos
aad
leave
push
jne
mov
loope
inc
xor
sahf
cmc
cwtl
cmp
ja
mov
push
adcl
das
pop
xor
nop
lcall
shll
arpl
jge
rclb
add
imul
xchg
pop
jae
pop
out
pop
rolb
repnz
jge
mov
lea
jge
push
xor
push
jp
fld
ss
xor
jg
mov
ss
xor
popf
xor
js
inc
andb
add
lret
aad
loope
pop
adc
jmp
jns
pop
sbb
jge
daa
mov
inc
xchg
mov
aas
push
push
push
mov
mov
push
lock
dec
daa
call
cmc
or
shll
dec
call
inc
sbb
xor
pop
mov
ds
add
testl
xchg
dec
xor
and
rcll
outsl
loope
mov
ss
xchg
nop
xchg
sbb
mov
or
sbb
adc
push
in
adc
adc
adc
push
fstpl
xchg
sbb
and
mov
jb
ja
clc
fsub
leave
and
stos
cs
cmpsl
ret
scas
out
or
xchg
fucomip
cmc
testb
push
imul
cmpsb
mov
adc
xchg
int3
popf
movl
sbbb
push
jb
mov
and
into
add
imul
xchg
push
cmp
inc
mov
or
fwait
xchg
jge
fcomps
lahf
or
int3
sub
jno
mov
dec
sub
sub
repz
adc
repnz
fwait
add
mov
out
adc
inc
fisubrl
or
lods
mov
stos
inc
iret
sahf
sbb
mov
lods
fidivrs
push
enter
pop
sbb
scas
xchg
push
scas
mov
cmp
rolb
fnstsw
mov
mov
ja
repz
ljmp
add
mov
stos
mov
jo
or
ja
sub
bound
shrb
dec
fcomps
push
fimuls
mov
fdivs
cmp
dec
inc
imul
mov
inc
mov
mov
inc
sbb
js
js
aas
cmp
lahf
mov
push
add
inc
push
filds
nop
add
ja
ret
push
fnstcw
or
sbb
mov
dec
and
jo
bound
rol
cmp
aaa
adc
and
cmpsb
dec
sub
dec
insl
lea
or
bound
jp
add
or
movsb
lret
xchg
sbb
imul
call
lds
mov
outsl
add
sbb
add
popa
fdiv
dec
pushf
push
sti
and
add
shlb
aas
fucomi
faddp
dec
imul
xor
es
mov
jecxz
loopne
xor
inc
cmc
adc
repnz
icebp
adc
pop
mov
jo
sbb
rcl
adc
hlt
mov
push
gs
xlat
dec
xchg
je
shll
stc
jbe
cmp
push
dec
movb
lds
mov
sbb
sbb
aas
loop
mov
xlat
ret
cmp
mov
push
xor
jo
addr16
xchg
movsb
pop
adc
lods
xlat
and
lcall
mov
push
mov
inc
arpl
mov
shll
mov
mov
xchg
sbb
jbe
adc
pop
adc
mov
fstps
push
pusha
loope
das
pop
gs
or
loope
out
add
xchg
and
icebp
xor
lods
das
out
mov
lds
scas
inc
ds
pop
dec
repz
adcl
aam
xchg
repz
inc
sub
test
loop
stos
fdivs
inc
cs
dec
testl
je
sub
ret
es
sbb
decl
adc
fisubl
mov
daa
popl
roll
aaa
mov
and
cwtl
shr
pop
inc
sbb
rorb
push
fsubs
push
sbb
clc
jg
xchg
cmpsb
imul
jmp
jl
adc
out
inc
leave
fimull
adc
call
cmpb
pop
lcall
iret
lock
mov
sbb
add
push
fld
je
fcmovnu
ror
js
bound
cs
jge
fsubr
cld
jge
pop
mov
mov
insl
rol
repz
ljmp
imul
int
add
and
dec
push
cmp
xor
pushf
aam
mov
ret
push
inc
cmpl
mov
pop
ret
mov
push
aas
add
movsb
stos
adc
jp
fnstenv
sahf
jo
fisttpll
xchg
lret
fdivrs
loop
push
and
xor
lock
fsubrs
in
out
ret
lcall
pop
cli
insb
mov
cmp
in
enter
lods
jl,pn
lods
out
xchg
das
inc
mov
adc
popa
add
roll
mov
push
jnp
sahf
mov
mov
les
lret
lahf
push
scas
pusha
in
or
loope
pusha
fsub
pop
or
scas
dec
and
ja
push
pop
gs
dec
scas
std
orl
mov
mov
cli
adc
ljmp
in
or
mov
clc
cld
test
mov
les
sub
cmp
sbb
cmp
mov
push
cld
outsb
jae
mov
xor
into
out
dec
xchg
jmp
and
mov
mov
xor
push
call
into
mov
sahf
push
and
xor
ljmp
enter
dec
out
jecxz
pop
xor
rclb
adc
in
mov
bndldx
mov
cmp
dec
stc
out
fiadds
add
cmp
fildll
cmp
hlt
cld
sub
jo
cmpsl
cltd
or
cwtl
mov
negb
adc
cmc
outsl
cmpsb
cwtl
ds
mov
in
mov
mov
popf
negl
loope
incl
xor
mov
xor
adc
popf
out
mov
out
mov
xor
jns
mov
mov
pop
lods
loop
mov
mov
push
jbe
xchg
mov
pop
in
cmp
fnstcw
sbb
jl
insb
sti
fildl
movsb
int
push
icebp
in
loope
test
add
jl
loope
movb
pop
jns
jns
dec
aad
lret
inc
ljmp
xchg
fistps
in
lret
adc
mov
dec
into
dec
repnz
mov
mov
mov
movsb
xor
jmp
add
push
mov
sub
add
jmp
andb
and
cmpsb
dec
movl
fistps
mov
xchg
sub
pcmpgtd
inc
mov
test
cmpsl
idivb
arpl
into
aad
mov
sub
adc
imull
fwait
mov
sarb
push
sbb
loop
mov
insb
bound
xor
jp
pop
xor
ret
imul
add
out
mov
sbb
aad
cmpps
leave
push
pop
cltd
cmp
mov
les
addr16
mov
push
dec
mov
pop
sbb
cmp
mov
mov
xor
dec
in
sahf
mov
jns
jg
mov
popf
test
jp
int
add
cltd
jne
cmp
xchg
clc
xlat
push
stc
loopne
inc
and
dec
subb
pop
add
sbb
ret
ret
fs
jmp
sti
lret
rcl
mov
xor
lods
lcall
rcrl
dec
or
out
popa
adc
leave
pop
sub
es
jmp
xor
out
icebp
add
aas
adc
jno
pusha
gs
icebp
adc
cs
gs
es
test
inc
xchg
setbe
mov
out
clc
scas
in
cmp
adc
pop
inc
orb
or
mov
jo
mov
das
cld
cmpb
xor
push
cmp
inc
fwait
imul
jbe
or
int
xchg
xor
mov
sub
aas
adc
test
sub
pop
cmp
pop
cmp
inc
jns
xor
in
sti
std
scas
outsb
push
mov
inc
cmp
sub
cmp
push
stos
out
and
sub
mov
stos
ja
icebp
adc
adc
xor
jge
loop
mov
fisttps
dec
inc
call
std
fs
mov
add
push
lods
sub
or
and
sub
add
out
push
xor
jp
in
jb
jp
fiaddl
pushf
dec
popf
in
xor
sub
out
inc
and
mov
push
loope
fcmovbe
mov
repz
lahf
pushf
mov
jle
hlt
or
into
jae
into
in
mov
test
roll
cwtl
mov
add
sbb
push
lret
cmpb
mov
addr16
pop
mov
cmp
daa
js
xchg
shl
test
fwait
mov
inc
mov
pop
dec
jnp
in
ficoml
adc
inc
aaa
cmp
jle
lret
movsl
push
pop
pop
add
aam
in
daa
mov
ljmp
imul
push
jno
leave
and
push
lock
subl
lret
push
xor
sbb
mov
scas
push
lea
incl
enter
sbb
push
cmp
fidivl
shl
and
cs
jg
mov
bound
leave
popf
repnz
cmp
push
cmp
mov
mov
mov
xchg
pop
push
pop
mov
pop
movsl
mov
cld
test
fnsave
pop
inc
mov
jge
push
dec
aad
jp
test
adc
mov
pop
or
sub
xor
add
stos
inc
push
jbe
adc
xchg
and
push
and
mov
adc
sub
and
fs
mov
xchg
mov
es
jo
sahf
push
and
aad
stos
adc
das
jno
std
data16
jne
ljmp
rclb
orb
or
mov
xchg
rorl
stos
pop
subb
mov
pop
imul
lods
sbb
dec
cmp
enter
push
push
cmp
outsb
push
mov
pushf
dec
jmp
adc
cltd
mov
jb
mov
sub
sbb
shlb
dec
xchg
shl
js
xchg
sub
adc
dec
mov
and
pop
test
sbb
sbb
lods
dec
adc
sub
call
xor
xchg
fsubl
add
mov
or
addr16
jbe
push
gs
sbb
adc
lock
mov
pop
lret
fisttpll
inc
rorb
sub
pop
clc
insl
mov
outsb
rcrl
push
addr16
xor
popf
scas
cs
jns
loop
fstpl
pop
push
sbb
mov
push
adcl
xor
pusha
xor
jb
sbb
out
ja
jno
inc
add
and
int3
jo
cld
push
test
cld
push
in
sub
addl
shll
pop
imul
push
pop
shll
clc
idiv
roll
cwtl
pop
stos
or
jg
insb
and
dec
out
cmp
adc
cli
inc
mov
inc
lret
push
push
js
fsubrp
lea
lock
imul
incl
pop
sbb
das
in
or
imulb
stos
fwait
xor
fsubl
incb
shr
or
push
xor
fs
push
mov
add
hlt
js
push
push
xchg
or
dec
cmp
mov
add
push
mov
sub
dec
scas
leave
loope
and
ret
filds
insb
add
fidivl
cmpsl
loop
or
cmp
popf
dec
inc
cmc
test
ja
jge
cmp
xlat
repnz
jno
fmuls
xchg
incb
int3
or
mov
cmp
push
and
adc
pop
fcoms
int
lock
xlat
fsubs
jle
ljmp
in
lcall
pop
addr16
xchg
xchg
ds
pop
dec
or
movsl
adc
fwait
fwait
pop
sub
outsl
pusha
pop
ja
cwtl
in
scas
adcb
cmpsl
pushf
movsl
in
popa
out
dec
loope
push
adc
cmpsl
inc
out
in
push
inc
cmp
cmp
fdivrs
movsb
popf
inc
xchg
push
cltd
sub
pusha
sbb
and
pop
out
stos
rcll
rcl
push
xor
iret
fldcw
xchg
stos
outsb
sahf
sub
fimuls
jge
cmp
aas
adc
pop
jmp
roll
in
icebp
pop
push
das
jo
mov
push
or
inc
and
clc
movsb
clc
subb
push
jg
jle
cld
dec
popf
push
dec
test
xchg
dec
mov
divl
mov
dec
or
int
daa
pop
je
fstp
pop
push
mull
popf
lahf
adcb
outsb
in
mov
add
fcompl
xor
or
jl
out
mov
in
sti
mov
mov
pop
out
mov
aad
or
cmp
dec
push
or
xor
test
outsl
jge
aam
inc
into
sbb
cmc
sbb
lret
push
inc
jae
xchg
xchg
push
push
push
loopne
cwtl
add
mov
fsubl
mov
xchg
add
xor
jmp
inc
adc
sbb
jne
ror
pop
inc
jae
in
mov
pop
outsl
jne
mov
inc
or
rorb
fistps
addl
inc
dec
adc
mov
aad
mov
fstl
xor
xor
pusha
scas
and
cmpb
out
xlat
aaa
jl
aaa
jecxz
xchg
dec
jmp
loopne
push
in
cmc
mov
xlat
and
cmp
fildll
sbb
push
pop
pop
loope
sub
mov
pop
xor
clc
inc
test
adc
jl
jmp
push
jmp
xchg
imul
popa
dec
push
adc
pushf
jae
hlt
jle
xchg
aaa
sbb
ret
xlat
es
and
imul
pop
aaa
and
movsl
jg
icebp
fistpll
xchg
rclb
xchg
push
out
cld
mov
fs
sahf
xchg
sbb
enter
mov
fnstsw
mov
lods
and
pop
mov
add
jno
bound
mov
mov
aam
popf
repz
cmp
cmp
lods
psubw
mov
scas
push
or
mov
cld
outsl
push
ljmp
sahf
dec
xchg
cmpsb
test
sbb
dec
or
jmp
mov
stos
xchg
cmp
and
imul
aam
xor
and
jge,pn
lods
jge
mov
push
pop
mov
mov
jmp
or
js
cld
sub
mov
dec
lods
mov
hlt
sbb
push
or
and
dec
pusha
loop
test
adc
in
mov
inc
movsb
aas
and
in
repz
add
pop
das
mov
sbb
das
lcall
enter
adc
sti
lods
into
mov
sbb
inc
xor
push
lods
repz
mov
pop
in
jno
shl
leave
or
jle
jo
push
cltd
andl
pop
mov
cmpb
movsl
in
mov
mov
jle
jmp
cltd
outsl
add
imul
mov
loope
js
les
es
push
mov
lods
mov
push
mov
mov
mov
aad
mov
or
xchg
sub
shll
xchg
ss
dec
mov
test
mov
popf
fimull
sub
mov
push
dec
dec
inc
lea
hlt
aam
mov
lret
dec
andb
adc
pop
inc
int
mov
mov
invd
xchg
jl
cwtl
mov
test
pop
shl
ja
lcall
rorb
adc
push
dec
mov
les
mov
data16
pop
cmp
pop
jne
and
and
loopne
add
fcoms
int
mov
popa
iret
inc
ret
imul
out
pop
dec
movsl
pop
mov
cmpsl
lea
add
pusha
in
sarb
dec
cmp
stc
stos
pop
test
test
insb
cmc
adc
adc
adc
push
mov
mov
cltd
jp
les
enter
push
rorb
mov
pop
daa
jb
mov
lds
add
push
or
push
test
lock
mov
arpl
cmp
jle
sahf
sbb
adc
ret
mov
jbe
rolb
and
or
push
jl
mov
sub
rol
add
mov
scas
insb
jmp
xchg
inc
xor
jge
pop
adc
lret
sti
in
jae
push
xchg
xchg
scas
dec
sahf
les
cwtl
mov
mov
je
jge
mov
hlt
pop
sti
in
jne
xchg
xorb
fidivrl
mov
stc
push
ret
enter
cwtl
arpl
mov
in
lret
sti
sbb
pop
in
enter
and
movsl
ret
repnz
ds
sbb
addr16
daa
jp
or
lods
pop
push
dec
push
mov
fadd
adc
fcomps
in
jnp
daa
mov
iret
inc
lret
mov
push
cmp
xchg
mov
add
rcll
loop
inc
repnz
xor
xor
push
in
xor
mov
ret
leave
xchg
and
push
ja
sarb
mov
inc
or
push
ja
jo
cmpsb
sbb
xchg
lods
adc
aad
cmp
fmul
aam
mov
cmp
outsl
nop
mov
ja
add
jle
mov
andb
pop
lods
bound
xor
stos
movsl
pushf
sbb
or
jg
ljmp
ja
leave
lcall
cmpsb
sbbl
fldcw
sbb
xchg
xchg
lods
cmpsl
pop
or
or
cmpsl
jo
shrb
sub
pop
shlb
in
push
xchg
xchg
cmpsb
add
imul
imul
gs
xchg
mov
mov
btrl
int3
lahf
stos
mov
in
aas
pop
pop
lods
sub
lods
jbe
mov
adc
mov
inc
jg
into
xor
adc
int3
pop
cltd
pop
inc
cld
push
cmp
test
fsubs
scas
sub
cmc
mov
mov
stc
test
jp
pop
mov
mov
push
insb
jo
stos
sub
xor
inc
mov
sub
or
add
mov
std
mov
imul
jo
repz
test
push
scas
in
sbb
mov
ret
or
outsl
sub
sbb
lock
push
imulb
repz
add
sub
jnp
and
in
js
arpl
mov
cmp
xchg
fwait
or
mov
popl
pop
shrl
mov
and
sub
and
pop
fstp
movsl
mov
adc
sub
out
push
jl
mov
pop
jae
sbb
jbe
hlt
xor
in
cmp
push
fbstp
jno
xor
mov
test
sub
xchg
lea
inc
std
push
jp
fnstenv
imul
sbb
or
stos
push
lret
movb
jae
add
push
loop
je
icebp
test
xchg
loope
mov
out
add
aas
cmc
xchg
ljmp
mov
pusha
xor
loope
aas
sbb
cmp
sahf
pavgw
and
adc
push
fnstcw
add
inc
dec
out
aaa
icebp
add
std
mov
or
neg
dec
outsl
outsl
subb
cmpsl
mov
sbb
mov
or
fnsave
jge
sub
sub
mov
push
data16
loop
sbb
push
ja
push
adc
fs
js
pusha
adc
imul
jge
mov
ljmp
mov
or
scas
daa
jg
xor
cmp
ret
js
adc
cltd
adc
xor
out
in
test
pop
jl
movsl
inc
das
pop
pop
mov
stos
aam
ret
ja
cld
add
les
mov
cli
rcll
imul
icebp
mov
stc
mov
add
and
daa
sbb
or
push
push
lods
aaa
pop
xchg
cmpsb
pushf
sbb
sub
and
movsl
stos
int3
in
xchg
mov
loop
push
test
loop
push
cmpsb
mov
cmpsb
xchg
sbb
addr16
mov
test
adc
xchg
inc
sub
bound
das
movb
and
jmp
mov
mov
or
xchg
mov
stc
add
in
fcomip
je
mov
lock
insb
mov
mov
lea
adc
pop
pop
loope
and
loope
pop
cmpsl
push
jmp
outsb
inc
add
ljmp
adc
jmp
and
jecxz
enter
ret
push
jg
ja
test
aaa
shll
cmp
pushf
jno
and
sub
cwtl
fstl
lret
cmp
xor
sbb
or
cmp
lcall
test
iret
call
cli
or
jb
aas
mov
xor
mov
mov
xchg
pop
xor
data16
ret
fidivrs
mov
mov
mov
lret
jb
and
sub
mov
dec
pop
push
movsl
inc
out
addr16
negl
pusha
cld
jge
les
dec
or
addl
lea
ds
push
lods
jnp
out
out
iret
lcall
fistl
pusha
test
mov
cs
pop
xor
push
jp
mov
jg
sbb
stos
jns
add
clc
push
enter
adc
rcr
ret
fwait
rorb
sti
sub
lcall
bound
push
adc
insb
mov
mov
mov
pop
ds
imul
imul
dec
add
jae
std
rol
add
popf
shl
loopne
mov
jb
lcall
jecxz
inc
aaa
mov
adc
scas
mov
rol
mov
mov
ss
mov
aam
jle
stos
xlat
mov
int3
sub
fcmovb
out
add
cmp
dec
divl
stc
enter
addr16
jbe
arpl
adc
mov
or
mov
loop
jg
xor
rcll
pusha
aaa
jmp
clc
dec
rorb
and
xorb
pop
jl
pop
mov
or
ror
pop
jbe
adc
icebp
rol
sarl
iret
imul
jmp
pusha
fcmovnb
cmp
das
mov
shld
add
icebp
mov
daa
cwtl
push
push
xchg
lcall
jmp
pop
sbb
or
js
mov
xor
mov
outsl
jo
and
lods
shll
xor
pusha
jge
and
mov
gs
cmpsl
decl
dec
test
push
cli
iret
mov
mov
add
rorl
inc
add
jnp
push
sarl
mov
xor
jmp
loope
push
out
pushf
cli
cli
cmp
push
xchg
xor
sbb
or
cmp
scas
or
das
xchg
fnsave
scas
mov
xchg
inc
mov
cmp
push
mov
cltd
add
inc
pushf
sar
icebp
outsb
add
adc
pushf
push
scas
jecxz
jno
lcall
sbb
and
fdivp
fs
mov
loope
xchg
cmp
lods
dec
div
cmp
cmpsb
xlat
pop
stos
fsubs
xchg
push
sub
adc
adc
xor
inc
daa
and
ljmp
mov
ret
iret
std
dec
clc
inc
popa
mov
cwtl
nop
idivb
sub
mov
push
dec
hlt
ds
loope
mov
insb
cli
pop
inc
loope
clc
add
jne
stos
and
xor
or
aas
inc
shll
and
ror
cltd
loopne
mov
sbb
lret
pushf
outsb
sub
pop
cwtl
cltd
fstl
orb
mov
std
cmp
inc
adc
clc
push
add
sbb
jecxz
sbb
mov
xor
lock
shr
jnp
clc
es
fs
ljmp
les
loope
rcrl
cmp
xchg
enter
add
test
inc
sub
or
push
ljmp
xchg
xor
xor
fwait
int3
std
mov
dec
lock
sti
rorb
mov
out
xor
gs
and
sahf
add
add
sub
stos
loop
shrb
dec
push
pushw
out
negl
aaa
inc
mov
inc
or
stos
stos
mov
nop
xchg
movsb
xchg
cld
fsts
xchg
jbe
xor
dec
push
adc
jecxz
adc
pop
stos
cmp
sbb
or
in
push
sbb
mov
dec
js
lock
add
push
mov
inc
adc
sbb
sub
mov
repz
data16
jae
int
add
std
lds
in
mov
popf
mov
mov
pop
into
push
insb
mov
mov
decb
xor
hlt
mov
push
loop
in
test
add
xchg
jge
adc
repz
scas
cmpsl
das
or
insb
dec
outsl
jmp
mov
mov
clc
inc
clc
sbb
push
ret
pusha
pop
ja
and
ficompl
xchg
adc
fnstenv
add
lods
xchg
push
mov
xchg
push
inc
in
imul
dec
hlt
sub
pop
lret
xor
jb
cmc
mov
out
popa
mov
ds
lea
hlt
mov
dec
mov
mov
sbb
data16
out
cs
push
idivb
les
xor
or
pop
ret
data16
out
data16
jnp
les
imul
dec
nop
je
data16
fildl
jl
push
fldl
jno
sarb
je
push
testb
pop
and
jge
push
ljmp
clc
dec
pushf
cli
inc
stos
mov
ret
stos
mov
and
pop
inc
pop
mov
popf
shl
or
mov
push
push
cltd
aad
dec
js
into
subl
and
mov
pop
xchg
sbb
pushf
sti
xor
imul
in
daa
js
out
aas
imul
insl
repz
pop
cmp
inc
sub
mov
cs
cmp
das
jmp
adcb
cmp
pop
push
movsl
testl
aas
je
jae
iret
nop
out
in
je
add
push
jp
jne
mov
movsl
ja
cld
cmp
fidivrs
jo
xchg
ret
mov
loopne
dec
mov
push
add
addr16
shlb
jecxz
fistpll
ret
dec
js
adc
das
push
add
inc
lret
lahf
stos
insl
push
dec
lahf
pop
dec
subb
cltd
dec
add
stos
outsb
sub
cmp
je
pop
scas
and
lds
inc
jmp
stc
std
jns
cltd
add
inc
push
mov
xor
addl
push
cld
mov
fadds
push
jp
mov
or
inc
cmpsb
fdivr
lods
dec
add
rcrb
xor
rclb
pop
movsb
iret
insl
test
stos
mov
scas
sti
dec
loope
or
iret
sbb
mov
in
mov
mov
add
jge
lock
cmc
push
pop
sbb
adc
test
in
arpl
popf
lea
aam
mov
lods
repnz
bound
mov
mov
inc
ret
test
imul
jle
mov
ds
fimull
das
pop
add
lock
jmp
repnz
add
mov
loop
mov
xor
mov
negb
mov
mov
out
jge
addr16
outsb
jg
mov
pusha
sti
stc
in
jno
or
mov
pop
xor
test
test
mov
addb
xor
add
push
or
lea
dec
dec
adc
and
cmp
xor
mov
js
mov
js
ja
sub
jecxz
movsb
fidivs
sub
sbb
mov
js
add
test
adc
cmp
xor
sub
push
inc
orb
add
fnstsw
es
dec
cltd
iret
jp
outsl
inc
dec
orb
cmc
add
mov
ret
mov
cmp
pop
fsub
popa
mov
mov
cmp
push
out
sbbl
pop
add
pop
and
inc
fcomps
push
dec
leave
outsl
lods
insl
xor
dec
prefetch
mov
mov
stos
or
jbe
cmpsl
pushl
sub
aam
xor
idivb
loope
insl
out
push
cmp
fnstsw
sub
mov
fildl
jg
ficompl
mov
fldenv
js
add
daa
cmp
cs
in
int
jne
aaa
icebp
ret
jge
mov
shl
sahf
lahf
sahf
sub
and
mov
cmpsb
or
mov
or
cmc
jecxz
mov
adc
lcall
loopne
cli
scas
push
push
xchg
lea
test
cld
or
lods
jo
push
push
mov
mov
push
mov
mov
es
xchg
call
js
dec
int3
mov
xchg
stos
xor
in
pop
stos
and
pop
inc
mov
pop
and
mov
jb
xor
je
sub
jno
out
mov
pushf
insb
clc
popa
dec
das
ret
pop
lret
xchg
dec
arpl
addr16
stos
fisttps
loope
or
adc
loop
ja
or
xchg
inc
fcoms
out
jg
lods
sbbb
xor
dec
lods
ret
cwtl
out
les
jnp
cmp
lahf
inc
add
insl
adc
out
out
jg
mov
add
adc
or
xchg
inc
xchg
xchg
orb
mov
insb
pop
jb
shrl
cmpsb
adc
out
shlb
stc
rorb
incb
jae
mov
cltd
mov
mov
sahf
call
lahf
test
imul
lahf
fsts
sub
inc
lea
rclb
mov
adcl
mov
mov
frstor
data16
push
xor
inc
mov
rcrb
mov
lods
dec
xor
pop
sahf
mov
sbb
lret
mov
mov
cmp
push
add
or
or
and
out
repz
clc
dec
outsl
push
sbb
mov
or
fimull
ljmp
adc
sti
pop
mov
sbb
mov
lods
jle
mov
jno
mov
push
pop
repz
negl
or
mov
push
mov
lret
es
jle
and
insb
inc
add
inc
xchg
jns
fldt
popf
nop
jge
das
sbb
xor
leave
lcall
pop
enter
jb
enter
enter
pop
aas
pop
stc
insb
inc
and
cmp
aaa
add
lds
into
outsl
fdivrl
mov
sahf
dec
outsl
in
inc
shlb
outsl
mov
push
push
fisttpl
pop
aaa
int
mov
jge
pop
std
js
mov
inc
in
lods
arpl
cli
loopne
adc
dec
jae
gs
mov
cmp
out
add
stos
je
adc
clc
movsl
mov
xchg
sub
push
in
jge
orb
icebp
mov
mov
xchg
mov
lods
fwait
aad
orb
push
jns
add
sub
jns
cltd
dec
sbb
test
xchg
push
or
sbb
out
jb
imul
outsb
in
aad
mov
ja
xor
dec
or
mov
xchg
jmp
pop
cmpsb
jl
dec
adc
jmp
imul
enter
subl
jmp
jne
cmp
add
shlb
call
mov
or
lds
mov
mov
andb
inc
mov
outsl
cmp
outsl
xor
in
dec
das
test
sbb
cltd
nop
add
jne
pusha
icebp
rcrl
pop
sub
sbb
or
les
outsb
test
mov
movsb
mov
lcall
inc
mov
mov
cmp
mov
adc
test
cmpsb
lods
add
ret
xchg
rep
sti
sti
sarl
sbb
cmp
outsl
xor
cmc
add
imul
sub
shl
sub
sub
imul
out
dec
sbb
dec
cltd
jae
rorl
sbb
xchg
xchg
out
jbe
xlat
mov
jns
scas
xor
fmuls
sub
ljmp
sarb
ret
pushf
lock
mov
sbb
ljmp
test
mov
push
mov
add
mov
in
inc
fbld
cwtl
adc
and
push
pop
nop
push
aaa
lret
outsl
in
inc
pop
mov
sub
movsb
fmul
dec
mov
and
xor
int
ja
inc
lret
jecxz
jge
or
stos
mov
dec
addr16
mov
mov
loop
xchg
sbb
jb
int
fdivp
out
ss
aas
lcall
js
ss
in
inc
in
stc
inc
pop
lods
es
push
movsl
imul
movsl
sbb
dec
movsl
repz
mov
inc
out
pop
mov
cmp
rol
inc
sti
and
out
mov
mov
out
aam
fcoms
mov
lret
mov
xor
xor
mov
adc
rorl
popf
and
adc
mov
fisubrl
or
fildll
lret
pop
addr16
mov
shlb
jl
int
pushf
stc
dec
xchg
xor
cli
cwtl
adc
lods
jl
inc
pushf
inc
clc
insb
mov
inc
dec
xchg
pop
pop
sbb
mov
in
test
and
aad
sti
pop
dec
cmp
or
mov
imulb
add
adc
mov
pop
inc
pop
out
outsl
fwait
sub
pop
sub
and
outsl
adc
add
cwtl
and
lock
xchg
test
mov
cs
and
sbb
xchg
movsb
pop
stos
aam
movsl
inc
adc
addr16
lods
mov
fwait
rorl
pop
xor
fldenv
mov
inc
jnp
adc
add
int
int3
jno
dec
movsl
aam
nop
lds
xchg
fcoms
or
inc
add
push
xchg
in
adc
fisttps
cmp
xor
ja
adc
je
adc
addr16
mov
sub
inc
and
pop
sbb
out
jbe
xor
into
imul
arpl
push
mov
pop
push
jb
jb
fldl
push
inc
mov
jns
xchg
fsubl
mov
jbe
ror
sbb
mov
jmp
popa
imul
mov
bound
rcrl
push
add
test
add
jge
inc
jns
mov
cmp
das
sti
mov
stos
dec
dec
and
push
std
outsl
pop
adc
push
mov
popf
or
mov
fwait
punpckhwd
enter
xor
in
mov
adc
aas
pop
dec
stc
fwait
or
out
jne
pusha
leave
sbb
lret
sub
push
inc
jnp
sub
xadd
ljmp
xchg
cld
testb
dec
stos
roll
das
ret
cld
nop
or
enter
ss
mov
out
scas
iret
pushf
test
stos
xchg
adc
enter
adc
mov
cs
jge
jno
stos
and
fld
lcall
stos
lds
lock
mov
mov
pop
daa
lahf
out
pop
repnz
jecxz
divb
in
ljmp
shll
lret
fwait
aaa
out
sti
inc
lret
das
or
jg
sub
pop
inc
jbe
std
sha256rnds2
outsb
test
repnz
sbb
cld
dec
mov
push
imull
push
lahf
ret
cwtl
mov
jbe
xor
bound
test
push
jno
mov
nop
mov
adc
bound
push
push
pop
popf
lods
fmul
push
out
xchg
dec
push
pusha
pop
and
add
sbb
xchg
or
int
lock
fdivrs
push
dec
mov
push
xchg
and
into
lahf
push
adc
push
adc
orb
popa
dec
insb
xchg
in
mov
test
push
mov
aad
les
mov
lret
popf
inc
mov
inc
pop
cli
mov
lret
ds
enter
fcmovb
sbb
mov
es
repnz
and
mov
add
push
pop
xchg
xchg
mov
push
test
test
xor
mov
xor
or
push
ljmp
mov
fisubs
pop
test
ds
and
adc
imul
in
ficoms
ficoms
push
bnd
sahf
push
or
xor
add
mov
sbb
push
xlat
jp
js
int
mov
or
cmp
dec
cmp
adc
and
out
sbb
stos
cmp
or
mov
jnp
out
mov
out
xor
mov
cld
add
nop
stc
cmp
inc
jge
xor
push
and
add
mov
xchg
xchg
test
gs
cli
aad
push
int
jae
in
mov
adc
mov
mov
mov
push
fidivs
fs
insb
xor
cmp
xchg
add
and
and
adc
mov
jbe
or
hlt
adc
dec
jae
cmp
and
inc
stc
dec
pop
mov
imul
mov
pop
cs
pop
xchg
xor
sbb
lret
xor
lret
pusha
insb
inc
bound
ljmp
in
mov
cmpsb
mov
mov
fisubs
jbe
int
jmp
mov
jne
and
lods
popf
movsb
ret
lea
fdivrl
jle
sahf
push
jl
pop
inc
jecxz
imul
xchg
push
xlat
aam
ret
jae
test
das
mov
pop
pusha
orl
aad
mov
dec
xlat
sub
add
subb
dec
push
mov
loop
xor
sub
cmp
mov
cwtl
nop
mov
les
jns
in
mul
lcall
aas
push
push
sti
adc
pop
dec
pop
push
loop
and
call
fcomip
mov
mov
sub
dec
mov
data16
inc
repz
adc
xchg
sbb
inc
push
and
pop
lret
ss
and
lods
xchg
stos
mov
cmp
sub
lret
mov
sbb
lcall
bound
lahf
lcall
inc
jo
mov
aaa
sbb
push
mov
or
into
out
data16
sarb
jge
sub
outsb
in
cld
fbld
out
adc
mov
gs
cld
adcb
cmpsb
pop
fxch
lock
mov
std
ja
jmp
jle
fprem
or
ror
fildl
pop
ds
xchg
lret
shll
dec
jle
pop
in
mov
out
fistl
push
push
dec
sbb
xchg
mov
pop
stc
nop
sbb
popf
stos
ret
in
popa
cmp
mov
inc
xchg
mov
addb
rorl
shr
mov
mov
mov
ja
or
xor
cmc
popf
lods
push
and
adc
js
dec
aad
insb
cli
leave
mov
inc
das
test
fdivs
int
xrstors
out
xchg
and
xchg
adcl
xor
loope
and
push
out
mov
mov
fwait
cltd
or
loop
ja
test
mov
rcrl
inc
push
and
or
and
mov
or
inc
fstpt
push
rorb
xor
jbe
jo
imul
icebp
cmpsl
jno
xor
inc
pop
add
addr16
ja
stos
lcall
or
or
clc
pop
das
sub
pushf
add
push
sub
mov
into
jno
xchg
jp
pop
das
push
dec
ja
mov
sub
pop
movsl
bound
xchg
or
and
daa
push
sbb
fwait
jg
arpl
insl
mov
ljmp
mov
hlt
jbe
adc
pop
xchg
pmuludq
sbb
lods
movsl
xchg
pop
shll
or
test
cmpsl
aaa
jmp
sub
cmp
lock
fnsave
cmpsb
cmp
neg
test
dec
pop
sub
pop
iret
add
jae
sahf
popa
fdivrp
lods
xchg
or
sbb
cmpsb
je
shl
mov
or
mov
and
pushf
enter
fisubrs
fs
loopne
jp
mov
pop
mov
inc
push
dec
out
in
dec
out
mov
cmp
mov
stos
mov
ds
push
adc
mov
xor
add
cmp
lds
frstor
outsb
jl
in
sub
aad
fcmovnbe
mov
sub
mov
scas
mov
inc
nop
iret
mov
xchg
aad
mov
mov
lods
loope
mov
pop
js
and
add
and
out
add
mov
decb
ret
lret
xchg
negb
and
adc
cld
icebp
into
imul
in
pushf
sub
pop
das
popa
adc
mov
adc
aad
inc
arpl
inc
push
sub
mov
scas
mov
fisubs
insb
out
scas
cltd
cli
pop
cmc
iret
pop
add
lock
mov
shrl
push
or
jl
adc
xchg
mov
xchg
xor
sub
orb
stos
clc
push
pop
adc
daa
adc
cmp
out
std
inc
lds
mov
sarb
pop
pop
mov
pop
xchg
cmpsl
inc
pop
jnp
call
bound
int3
int3
adc
jecxz
je
mov
aad
sbb
pop
nop
adc
add
and
sbb
fbld
push
loope
stos
stos
or
pop
xchg
loop
int3
test
jne
ss
xchg
cmp
out
dec
pop
jnp
ja
xor
add
test
daa
lock
add
mov
dec
add
fiadds
jbe
and
add
in
test
dec
xor
xor
xchg
fdivrp
pop
pusha
int
add
mov
loopne
sbb
mov
sahf
and
xor
fwait
leave
sbb
andb
and
lret
outsl
int3
outsl
pop
jge
cli
shl
jg
or
adc
add
mov
cltd
in
fdivl
jnp
ds
mov
push
mov
sti
mov
and
and
leave
and
xchg
xlat
xchg
dec
adc
mov
sbb
loopne
or
push
aaa
insl
ret
jne
jno
imul
ja
movsb
sahf
mov
push
cmp
lds
data16
inc
push
cmp
jl
or
mov
add
sbb
inc
pop
sbb
cmp
xchg
aas
aam
inc
movsb
jbe
cmp
pusha
xchg
jbe
mov
cli
push
nop
pop
in
cmp
into
add
lret
int
in
xchg
addr16
gs
push
insb
in
int
mov
dec
mov
hlt
call
add
sbb
bound
scas
test
mov
xchg
adc
pushf
mov
or
or
xor
inc
iret
fldcw
in
sarb
icebp
sbb
sbb
sub
mov
pop
cmp
ret
and
shl
aam
es
inc
lahf
push
xchg
pop
sbb
fimuls
in
dec
lahf
je
ficompl
fidivs
loope
outsb
add
xchg
xchg
jo
negb
jecxz
insl
ds
and
xchg
in
xchg
mov
sub
sbb
and
sbb
cmc
negb
inc
lret
mov
roll
daa
inc
cltd
jbe
bnd
ret
clc
sbb
sub
lret
scas
fnstsw
dec
cmp
pop
push
mov
push
movsb
in
inc
adc
dec
in
mov
fildl
xchg
sahf
jnp
sbb
pop
sub
add
or
out
hlt
mov
cli
or
div
or
and
push
pop
cmp
push
fsubl
dec
cmpsb
imul
insb
lahf
xor
fldenv
mov
xchg
jmp
cltd
push
dec
push
pop
add
fwait
mov
movsl
cmp
lods
ljmp
xor
lods
mov
mov
nop
sub
cmp
push
dec
cmp
inc
ret
inc
outsb
jle
cmpsb
imul
and
bound
popa
jl
mov
std
enter
add
sti
es
addr16
jmp
pop
subb
andb
xchg
mov
xchg
sbb
test
dec
dec
push
jecxz
cli
and
and
jae
sbb
mov
or
dec
mov
push
jp
mov
jecxz
cwtl
jae
ret
add
imul
scas
adc
jecxz
hlt
xchg
scas
adc
sub
xchg
mov
addl
inc
and
shl
popf
xor
outsl
int
mov
in
enter
inc
and
adc
fdivrl
mov
xchg
or
or
shrl
fists
into
push
bound
ja
mov
push
cmp
cmp
out
sub
and
xor
jae
add
scas
cli
xor
inc
ja
sub
mov
mov
inc
adc
mov
insl
jp
lock
push
xchg
mov
roll
rcll
ret
jb
movsb
and
cmc
mov
and
mov
addr16
adc
jecxz
lods
imul
test
cmpsb
jmp
or
pop
das
adc
push
stos
push
sub
mov
cmp
and
out
lock
test
cli
fldenv
aam
sar
pushf
aad
xor
sbb
aad
mov
inc
clc
scas
sub
sub
les
cwtl
daa
adc
frstor
lods
lock
pop
xor
add
push
mov
push
roll
jecxz
dec
movsl
pop
into
in
stos
repnz
push
dec
clc
push
mov
mov
add
inc
cmpl
cmp
sbb
mov
mov
pop
jno
pop
dec
inc
dec
sbb
add
push
mov
ficoms
pop
xchg
mov
mov
jbe
mov
adc
lret
mov
xlat
cs
leave
loope
ds
mov
jecxz
push
xor
push
xchg
push
xchg
cmp
scas
call
stos
or
xor
mov
iret
jp
shl
hlt
lret
in
or
mov
cli
jmp
mov
fbld
out
jne
push
pop
test
push
mov
mov
orb
add
insb
mov
sub
mov
cmpsl
addr16
inc
pusha
xchg
hlt
add
sbb
or
inc
inc
in
push
and
inc
inc
or
daa
enter
fildl
jecxz
mov
lods
xchg
mov
mov
pop
cmp
jmp
lahf
enter
out
aam
data16
adc
aaa
cltd
sbb
out
sbb
stos
cmpsl
popa
adc
cltd
mov
iret
je
mov
das
test
push
jbe
ficompl
cmp
lods
inc
or
adc
adc
cmp
mov
sub
ljmp
fxch
xor
mov
mov
xor
jae
cmc
lret
scas
adc
cmpsl
and
jb
fidivrs
shr
adc
test
dec
mov
and
mov
testl
cld
or
xchg
insb
icebp
mov
pushf
mov
mov
mov
aas
jg
loope
stc
lds
or
push
jne
je
push
mov
and
jns
mov
cmpsb
dec
cld
sti
mov
xchg
jb
fwait
xlat
inc
inc
jle
add
mov
jp
ss
dec
inc
inc
xor
mov
sbb
loope
out
xchg
decl
negb
mov
or
aad
arpl
push
add
mov
popa
inc
stc
adc
adc
inc
cmp
int
push
dec
xlat
pop
or
flds
das
cld
sub
mov
or
mov
pop
jmp
cmp
daa
call
jge
add
mulb
and
and
inc
jecxz
in
and
mov
or
loope
dec
aam
mov
dec
pop
pavgw
xorl
outsb
adc
push
or
xor
or
outsl
cli
or
mov
inc
xchg
mov
aam
adc
mov
scas
adc
in
or
sub
inc
mov
call
aad
pop
mov
cli
push
pop
fsub
cld
pop
cmp
and
xchg
jp
push
jl
je
dec
push
xor
imul
lret
out
andl
sbb
xchg
fdivrl
add
stc
iret
test
jns
and
out
add
pop
ror
sub
add
xlat
cld
flds
ja
stc
loope,pt
les
inc
inc
loop
aaa
add
fistps
hlt
and
push
dec
cmp
adc
sbb
scas
nop
mov
push
mov
andb
sbb
dec
dec
lock
pop
jbe
test
cmp
jmp
ficompl
popa
xor
pop
out
int
push
xchg
sbb
or
dec
xchg
outsl
enter
push
sbb
lret
sti
lret
aaa
and
inc
xor
mov
pop
out
pop
js
aad
nop
jle
popf
cmp
xorl
rorb
jb
mov
notb
subb
movsb
insb
xchg
mov
frstor
sub
and
les
push
push
sub
stc
cli
fimuls
fmul
lods
das
stos
mov
mov
je
lea
cmp
push
jb
xor
and
pop
popw
jp
iret
fistpl
mov
rorl
fsubr
fcmovb
test
xor
xor
mov
out
daa
mov
jno
xlat
push
or
mov
jb
jo
aas
xchg
adc
stos
mov
sbb
push
clc
push
xor
mov
lcall
mov
loope
push
push
cmc
arpl
cmp
outsb
jmp
into
lods
popa
xchg
adcl
xchg
lret
sbb
mov
sub
cmp
daa
cmp
sub
or
push
pop
mov
movsb
mov
das
fisubl
shr
data16
imul
subb
xchg
cli
add
mov
dec
mov
mov
push
es
sti
leave
dec
mov
mov
xchg
or
movsb
xor
push
add
add
mov
mov
repz
sub
pop
out
scas
out
idiv
add
pop
add
daa
dec
js
mov
ds
push
clc
pop
cmp
subb
shrl
cmpsb
icebp
and
out
lock
popa
pop
xchg
out
negb
adc
and
cs
ror
aaa
je
dec
js
mov
test
pusha
push
and
pop
clc
shl
sbb
lcall
ljmp
jns
ret
dec
cmp
pop
mov
mov
pop
repnz
imul
inc
xor
ljmp
fisubrl
inc
fsubs
push
out
mov
mov
mov
jns
jno
adc
mov
cmc
or
jmp
out
mov
mov
dec
sub
add
aam
xchg
xchg
inc
xchg
subb
sbb
sarl
adc
jecxz
xor
or
fsubrl
cli
inc
dec
ret
or
xor
mov
sti
cld
or
sahf
adc
mov
test
mov
dec
pop
mov
pop
sti
pop
and
test
sbb
or
ret
add
icebp
or
fcmovnb
in
cmpb
mov
inc
jmp
lea
leave
fldl
add
xor
xchg
out
lahf
lahf
cmp
xor
popf
movsb
cmp
xchg
in
push
and
cmp
andl
fstps
pop
cmp
lds
movsb
inc
mov
dec
sbb
adc
inc
shl
mov
inc
in
scas
xchg
adc
int
outsb
js
popa
xor
adc
cli
pop
rcll
push
sbb
in
fiadds
lahf
push
pop
out
dec
pop
cmp
add
dec
jecxz
cmp
inc
outsb
push
loope
ss
push
hlt
aas
aam
out
pop
aad
call
push
mov
bound
scas
call
push
rclb
xlat
cmp
mov
sbb
mov
rcr
daa
sub
adc
and
sarl
fs
jg
and
inc
jecxz
mov
mov
lret
shl
jnp
outsb
cwtl
push
addl
lret
inc
jno
jne
dec
dec
add
rorb
dec
repnz
stos
push
outsb
xor
jb
or
lock
jge
hlt
sbb
sub
rolb
xchg
or
sub
mov
aad
cmc
fmull
dec
xchg
movlps
lods
mov
mov
cmp
mov
loopne
or
dec
enter
nop
dec
lea
call
loope
mov
add
jne
pop
daa
clc
sub
adc
jle
lods
fidivrs
enter
movsl
push
popf
and
fildll
and
pop
aas
int
bound
dec
jo
mov
jmp
cld
push
js
hlt
jb
jp
xchg
jne
inc
scas
sbbl
xchg
or
pusha
lods
movsl
pop
outsb
pop
jmp
popa
jb
ret
adc
out
or
sbb
iret
mov
int3
idivl
xchg
push
sbb
data16
sarl
popa
cmpsl
lret
dec
sub
dec
pop
lret
scas
mov
insb
test
mov
popl
aas
loope
js
and
outsl
jns
and
dec
inc
pushf
mov
mov
adc
and
sub
daa
pop
pop
push
hlt
mov
fsubrs
cltd
mov
sarb
ret
and
add
scas
push
in
andl
call
adc
dec
xorb
adc
jbe
jp
pop
adcl
ret
jno
int
pop
push
std
clc
jmp
pop
inc
cmp
push
ds
inc
inc
and
arpl
lea
stos
sbb
push
add
inc
mov
call
ljmp
jp
lods
dec
popa
cwtl
cmpl
loope
push
fcomps
adc
sub
or
sbb
xchg
jecxz
pop
sarl
sbb
mov
xchg
std
mov
jns
rcrb
add
in
xor
add
fnstsw
mov
in
call
adc
lods
aaa
inc
inc
rdmsr
pop
pushf
mov
jmp
pop
fnstenv
cwtl
stc
mov
scas
xor
cmpsb
push
enter
push
and
lahf
ss
sbbl
cmpsl
out
into
push
lds
shlb
in
pop
pop
xchg
test
or
popa
lock
mov
push
fcoms
lret
repz
cltd
cmpsl
jno
stc
cmp
repz
std
cmp
shrb
push
push
icebp
lahf
mov
add
incl
xor
sbb
repz
push
out
int
inc
out
sub
subb
inc
sbb
cmp
xchg
lock
sbb
fnsave
mov
cmp
cmp
sbb
inc
xor
sbb
ret
bswap
loope
fbld
shll
sbb
or
mov
cmp
imul
cli
in
sbb
mov
std
xchg
xchg
mov
xchg
jne
jl
ljmp
ss
out
or
xchg
mov
push
mov
xor
addr16
pop
sub
mull
mov
cmc
ret
pop
or
pusha
andb
cwtl
jmp
sbb
stos
cltd
js
jnp
notb
data16
dec
mov
dec
mov
xlat
mov
scas
jno
test
xor
loopne
out
pop
iret
pop
push
out
movsb
clc
adc
inc
fildll
lcall
push
pop
push
js
lret
shlb
dec
jp
addb
aam
sub
stos
inc
mov
push
ljmp
push
sahf
clc
test
pusha
loop
xchg
and
pop
sub
adc
add
lahf
and
jns
dec
mov
mov
jnp
insl
fmulp
xor
jne
lds
dec
ja
imul
roll
pop
icebp
inc
inc
and
popa
or
je
dec
aad
addr16
and
scas
xchg
xorb
mov
xor
mov
in
fsts
jg
mov
divl
push
cmp
aaa
repz
sbb
xlat
or
add
push
rcrl
dec
imul
push
and
ljmp
cld
loop
xlat
icebp
dec
aaa
or
sti
and
ljmp
jp
sub
ljmp
lock
mov
jge
int
cmp
jmp
sub
jb
lcall
mov
out
aas
dec
lods
xor
push
jge
add
dec
mov
je
ss
fcmovnu
adc
or
adc
aaa
movsb
movsl
inc
test
adc
push
arpl
adc
cmp
arpl
out
xor
xchg
inc
enter
aas
js
and
adc
fwait
mov
fidivrs
iret
cs
jnp
pushf
andl
jb
xlat
lcall
or
lds
mov
inc
call
es
sti
sub
dec
out
je
stc
loope
mov
cld
mov
outsl
push
xor
rolb
mov
pop
pop
xchg
clc
nop
insb
loopne
pop
loopne
dec
test
aam
jecxz
inc
jmp
insl
mov
pop
sub
cmc
outsl
sub
aad
dec
dec
inc
lret
push
xlat
fucomp
notl
sub
enter
fsubs
aam
add
and
pop
adc
out
adc
mov
repnz
xchg
push
mov
jge
mov
icebp
push
inc
xchg
fdivl
pop
ja
and
mov
inc
test
andb
je
sbb
jl
andb
push
or
mov
clc
in
cmc
fbld
sub
mov
dec
jl
test
pop
xor
add
xor
push
inc
fs
pop
call
popf
pop
in
dec
cltd
lret
cli
mov
mov
sbb
loop
push
aad
movsb
pop
push
push
sub
push
ljmp
stos
mov
pop
lock
fistps
pop
sbb
leave
adc
and
mov
movsb
or
lods
pop
mov
mov
lret
sbb
aam
cmpsb
aaa
pop
stc
inc
mov
jle
jl
fmull
test
mov
adc
popa
sarb
aam
jne
fcomps
int3
mov
pop
or
jmp
in
or
fidivrs
adc
rclb
dec
push
fstpl
or
inc
dec
int
lds
sbb
mov
and
repnz
mov
push
mov
push
into
xchg
loopne
dec
daa
jbe
adcl
push
push
hlt
mov
adc
add
int3
sbb
cmc
push
jns
cli
and
mov
clc
adc
je
xor
mov
xor
iret
sbb
arpl
lods
ret
std
mov
sbbb
push
into
sbb
cmovle
sarl
mov
movsb
add
push
push
lods
out
mov
sub
lock
fisttpl
lods
aaa
xchg
push
scas
add
jb
fbstp
out
rolb
lods
mov
repz
pop
jmp
or
mov
cmpsl
nop
inc
clc
cmp
sub
orl
add
or
or
lahf
or
dec
and
and
aam
pop
mov
sbb
adc
int3
ds
xchg
lret
icebp
mov
adc
jae
push
xchg
int3
popf
inc
push
inc
push
lock
test
add
int
pop
in
scas
into
sbb
mov
dec
jg
mov
shld
lods
loop
nop
push
inc
inc
js
cmp
or
or
xlat
pusha
jo
cmp
imul
rcrb
cmp
nop
leave
inc
pop
insb
sar
test
setl
fnsave
lea
xor
sbb
mov
or
mov
mov
push
rcll
adc
add
add
mov
or
imul
jmp
pop
nop
sbb
and
aam
push
sub
add
pop
stos
dec
ja
or
push
xchg
mov
or
mov
ds
sbb
repnz
adc
jmp
movsb
sub
jo
push
xchg
aad
mov
and
ss
gs
arpl
ljmp
lea
leave
sbb
out
aam
inc
adc
std
insl
pop
pop
dec
sub
shlb
int
pushl
movsl
push
repnz
mov
mov
in
inc
dec
mov
cs
jns
push
cmpsb
jb
mov
in
pop
add
icebp
ljmp
mov
mov
jae
test
pusha
ja
popa
repnz
pop
inc
leave
mov
sti
loopne
gs
inc
imul
andl
stos
addl
sahf
mov
jle
mov
stos
cmp
icebp
cmp
pop
in
pop
or
jmp
jb
mov
rol
insl
mov
movlhps
cmp
mov
and
jl
ss
insb
pop
les
pop
mov
lahf
ds
daa
mov
mov
stos
insl
adc
inc
outsb
lcall
mov
outsb
test
and
xor
movsb
js
push
adc
pop
xor
jp
fs
pop
cltd
mov
rolb
or
in
mul
xor
hlt
jno
xchg
push
je
mov
jg
pop
mov
fdivl
mov
sbb
pushf
cmp
cli
nop
xor
ret
dec
iret
fists
dec
and
dec
or
in
pushf
divl
out
jle
mov
mov
ja
sub
outsb
call
test
cmp
or
push
in
lcall
in
adc
aam
loopne
push
and
xchg
mov
test
rorb
push
inc
xor
pop
setns
xchg
pop
and
add
ret
dec
mov
int3
xchg
sbb
inc
or
lret
mov
icebp
outsl
push
mov
sub
jns
bound
or
stc
lea
stc
inc
cmc
lea
into
push
cld
mov
fdivrs
movsb
jp
mov
mov
addr16
xchg
loope
orb
pop
xlat
mov
xor
mov
ret
aad
ss
cmp
sbb
jmp
clc
std
jbe
lret
cs
das
fwait
pop
enter
test
cld
push
ret
jae
mov
shll
loop
pop
push
sub
adc
sub
or
mov
in
scas
mov
inc
in
cmpsl
stos
mov
mov
dec
inc
and
addr16
push
jl
inc
loopne
data16
push
push
push
jg
dec
xchg
orl
push
pop
xchg
lock
clc
and
xchg
jl
in
and
jo
cli
fprem1
xchg
scas
xor
ficoms
dec
shl
xchg
pop
jne
adc
jecxz
filds
scas
in
test
fistps
xchg
mov
in
test
lea
sub
sub
ret
jl
imul
in
fs
push
pop
and
shll
imul
mov
sbb
mov
mov
icebp
xor
push
mov
lcall
push
pop
mov
inc
shll
adc
mov
xchg
adc
dec
gs
lcall
scas
popf
cs
stos
inc
sbb
pop
mov
sub
in
scas
scas
out
sub
push
lds
cmp
test
imul
dec
sti
ficoms
rcll
push
aad
mov
xchg
pop
cltd
js
push
xlat
xor
jno
in
scas
inc
popa
cld
pop
lret
pop
dec
dec
ret
lock
in
ljmp
pop
push
push
in
or
es
pop
mov
fs
xchg
pop
sbb
push
in
sbb
pop
loop
sub
in
addr16
leave
fists
pushf
pop
cmp
pusha
pusha
mov
test
sbb
ljmp
mov
and
or
sub
mov
cmp
and
cmp
mov
push
rcr
subl
scas
or
lods
ds
sub
adc
das
loope
cltd
xor
mov
lcall
fidivs
mov
push
push
loopne
pop
loopne
clc
sub
dec
clc
sub
mov
xor
in
lods
push
xor
sbb
or
fwait
sbb
shll
jne
popf
lods
mov
icebp
cs
dec
cltd
cmp
adc
imul
adc
fs
nop
mov
std
jnp
sbb
inc
mov
outsb
stos
mov
jae
add
ja
push
inc
mov
push
arpl
jg
leave
sub
popf
ret
test
or
cs
repnz
mov
cmp
dec
decb
jns
jp
mov
mov
in
mov
imul
jo
cmpsb
mov
push
inc
jbe
inc
or
daa
push
hlt
adc
or
and
mov
fisttpl
outsb
mov
adc
cmpsl
cmp
scas
lea
fstpl
mov
xor
dec
adc
sbb
orb
xchg
bnd
push
add
dec
repz
mov
and
xchg
pop
call
xchg
cmp
push
or
daa
into
clc
loope
push
ret
cmp
adc
rcr
ficompl
xchg
push
clc
xor
pop
mov
sbb
out
mov
stc
inc
gs
test
shlb
bound
jne
pop
and
outsb
negb
lock
flds
pusha
mov
nop
std
dec
mov
dec
push
cs
movsl
mov
or
inc
nop
jmp
mov
pop
mov
cmpsl
pop
arpl
sub
sbb
sub
idiv
lods
cmpsb
pop
jmp
fldz
fldcw
mov
rcll
mov
or
ljmp
push
add
mull
inc
xchg
movsb
xor
jb
add
mov
push
lret
xchg
sbb
hlt
jo
call
imul
popa
pop
jb
jbe
clc
and
lcall
push
out
cmc
scas
xor
cmp
mov
out
push
or
ss
mov
inc
push
test
pop
pushf
xor
lret
gs
add
inc
push
in
hlt
call
cld
xchg
dec
out
scas
jo
stos
mov
imul
loopne
push
and
sub
sti
push
sub
into
add
sbb
inc
outsb
sbb
inc
sbb
int
cmove
stos
aas
push
out
sub
or
mov
xchg
or
mov
cld
andl
pop
rorb
jbe
rcll
pop
xchg
call
pop
fistps
lea
fs
xor
mov
dec
xor
adc
mov
aad
inc
rol
dec
cltd
cmp
jmp
in
mov
mov
cmc
xchg
test
andb
aam
push
popa
mov
aas
mov
or
stos
fisubs
and
inc
add
pop
outsb
mov
sbb
iret
and
imul
mov
aaa
in
popa
pop
jae
dec
mov
cli
jbe
jae
mul
mov
jnp
jbe
or
or
rcrl
mov
fstpt
or
lods
adc
mov
pop
mov
aad
out
stos
mov
dec
imull
mov
and
adc
ficoml
mov
orb
movd
fdivl
ss
add
jmp
mov
sbb
xor
ljmp
daa
and
push
mov
push
cmp
or
push
popf
int
sbb
pop
pop
or
pop
movsb
mov
fidivl
lods
mov
jge
cmpsb
inc
jmp
lods
sahf
cmc
xor
fbstp
jl
add
movsb
jmp
add
mov
js
xlat
add
fstpt
mov
in
inc
js
ljmp
fabs
xlat
test
jmp
iret
aaa
inc
xchg
ljmp
fsts
xchg
cmp
dec
out
push
aam
add
into
push
sub
mov
adc
imul
xchg
jb
dec
and
jb
xor
pop
movsl
popaw
sbb
lock
inc
pop
outsl
xor
xor
cmpsl
xchg
add
rol
push
rorb
dec
mov
cmp
push
enter
cmp
inc
push
adc
pushf
pop
add
scas
pushf
mov
push
daa
mov
pmuludq
xor
sub
mov
icebp
rcrb
and
sbb
sbb
add
mov
int3
mov
push
gs
out
enter
rcll
das
dec
in
movsb
andl
pop
test
cmp
xlat
mov
fcoms
pop
pop
nop
mov
xor
push
mov
xor
sub
or
jmp
xor
scas
inc
sbb
mov
ficompl
int
pop
enter
xor
mov
push
push
pop
mov
test
pop
inc
shll
loopne
rcll
mov
xchg
inc
les
scas
jno
cmp
mov
call
cmp
jp
outsb
rorl
mov
in
cwtl
mov
das
sub
mov
sbb
aam
xor
add
aaa
jmp
shlb
push
pushf
shl
push
addr16
fstl
jmp
push
xchg
jl
mov
xor
jge
int3
rcr
xorb
mul
movsb
and
movl
mov
test
sub
push
pushf
sbb
xor
jle
xor
aad
fisttps
aaa
fisttpll
lahf
lret
xchg
sub
cmc
dec
and
aad
aaa
fsts
or
push
xor
adcl
movsl
clc
jbe
or
inc
nop
ja
and
into
pop
lods
cmc
mov
jno
jl
xchg
push
xor
mov
mov
mov
test
loopne
inc
int3
xor
and
rclb
out
fs
and
pop
adc
ret
sbb
cld
dec
push
cltd
ja
cmpsb
or
fistpl
out
int3
mov
push
push
pop
in
test
shll
jl
je
bound
sbb
sbb
cltd
jbe
lock
adc
inc
jp
leave
sub
fs
ret
dec
cmp
push
ds
xchg
cmp
rclb
inc
mov
loop
inc
mov
shll
pop
mov
jle
fwait
lret
nop
testl
inc
xchg
cmp
mov
xchg
int
das
repz
and
adc
popa
add
inc
call
push
jne
cmp
jmp
inc
aas
jns
cmpsl
sub
adc
and
gs
pop
rorl
sbb
int3
ret
adcb
dec
sub
pop
test
imul
pop
xorb
and
mov
xchg
jl
mov
lock
jl
and
push
sub
enter
xchg
cmpsb
cmp
lea
es
inc
mov
mov
ljmp
lea
ds
inc
xchg
dec
repnz
pop
lea
sahf
inc
sbb
popa
dec
outsl
mov
push
rorb
jnp
jno
inc
loope
dec
daa
int
ljmp
add
jbe
stc
daa
or
notb
int
adc
mov
xor
sbb
cmpsb
xchg
sub
add
xchg
sbb
push
pop
call
lock
pop
sub
push
pop
jge
fildl
fistpl
cmc
dec
jnp
fstpl
loop
jb
and
fs
arpl
sbb
in
mov
shrl
lods
sbb
push
jb
icebp
add
jmp
xchg
lret
rorl
inc
mov
adc
leave
ljmp
adc
mov
jbe
test
ret
mov
or
push
stos
lret
xchg
pushf
inc
leave
fwait
mov
cmp
mov
sub
jl
jg
lea
int3
test
cmp
les
sub
lock
nop
pop
cwtl
adc
imul
scas
orb
js
fnstsw
mov
cmp
aas
fs
shlb
mov
inc
clc
data16
and
ljmp
jle
shll
sahf
pop
jno
mov
les
pop
in
mov
push
popf
add
or
mov
scas
enter
pop
mov
xlat
mov
lea
sub
stc
dec
mov
sbb
sbb
leave
and
in
fstps
mov
cmp
mov
add
ljmp
cmp
std
and
in
pop
jg
loopne
scas
sbb
xor
fs
sbb
or
popf
jg
mov
into
cmp
push
pop
in
mov
mov
mov
jns
fsubrs
leave
mov
aam
jne
pop
mov
jae
dec
in
in
pop
push
sub
dec
outsl
stos
mov
add
or
in
inc
imul
int
push
addl
lods
nop
popa
inc
in
adc
xchg
fnsave
fidivs
lret
cmp
out
push
adc
rcrb
arpl
out
xchg
jnp
lret
dec
push
pop
lahf
in
jb
lods
inc
mov
xor
fnstcw
dec
lock
jle
sub
dec
filds
sbb
jp
inc
mov
cs
jl
mov
push
fimull
nop
adc
stc
out
icebp
test
jge
or
xchg
jo
clc
mov
lds
ficomps
jle
rcrb
mov
cmp
add
inc
subl
mov
and
add
cmpsb
lret
pop
sbb
inc
ja
pop
push
mov
lods
add
mov
pop
jl
add
outsb
mov
lret
je
fwait
les
sub
add
lcall
mov
arpl
repnz
or
lahf
iret
adc
push
ds
jmp
sub
xchg
cmp
lea
call
icebp
pop
in
daa
jg
xor
pop
loopne
xlat
dec
test
dec
mov
jbe
nop
push
popf
xchg
repz
das
mov
scas
xchg
iret
das
xchg
push
sbb
adc
adc
cli
add
jae
lahf
insb
dec
mov
adc
pop
sub
inc
fisubl
scas
xlat
loopne
sbb
push
cli
dec
int3
pmulhuw
mov
fadds
scas
push
xor
adc
push
push
push
xchg
test
xchg
sbb
cmp
add
push
push
insl
inc
mov
adc
iret
xchg
test
mov
fmuls
jmp
das
and
mov
dec
push
cmp
cmp
or
jne
jmp
fisubs
jns
mov
xchg
or
or
fisttpl
or
mov
arpl
mov
sub
imul
push
jp
jne
xchg
and
in
jb
sbb
sbb
lcall
adc
cmp
test
stc
repnz
aam
mov
sarb
in
or
out
xlat
xchg
les
es
addr16
bound
rcll
aas
jno
out
aaa
push
lret
in
out
push
pop
sahf
and
mov
adc
int3
shlb
push
cwtl
and
sub
cmpsl
stos
xor
into
sbb
ds
cmp
or
sbb
pop
iret
in
pushf
lret
std
push
jo
fdivs
mov
xchg
lock
mov
sar
cmpsl
push
mov
cmp
insl
sarl
mov
dec
je
adc
repz
fmulp
xchg
pop
loope
insl
push
jge
mov
jns
mov
mov
mov
cmp
test
rorl
shr
inc
mov
shll
out
push
dec
dec
int3
push
lds
int
in
cld
add
or
jg
cmp
and
int
leave
mov
dec
jle,pn
fisubrl
push
push
lea
mov
cmp
sub
lods
loope
mov
les
xchg
xchg
jp
jbe
daa
xchg
or
fisubl
mov
push
std
ret
pop
pushf
dec
sbb
cltd
aaa
mov
setb
mov
push
sbb
outsb
call
jmp
div
xchg
fistpl
les
xchg
mulb
roll
int3
jg
repz
adc
orb
das
sbb
lods
mov
icebp
push
add
or
scas
or
fdivr
dec
push
dec
addl
push
xor
mov
jno
push
cmp
push
cmp
add
sbb
call
cltd
and
aaa
sbb
in
cmp
sub
cltd
aas
in
cs
daa
insl
andl
subl
stc
cwtl
push
xchg
push
clc
xchg
mov
sarl
and
pop
or
add
cmpsl
mov
mov
fsts
cmpsl
je
ror
outsb
xor
mov
mov
test
popa
jnp
mov
lret
rcll
jge
filds
add
xlat
cli
fnsave
xchg
idivb
leave
xor
jbe
fwait
pusha
lea
dec
dec
push
loope
inc
pop
mov
push
repnz
gs
and
jns
int3
fs
inc
cmpsl
jl
imul
dec
ret
xchg
sub
dec
dec
cmp
sbb
sbb
stos
push
ret
jb
and
bound
clc
jne
ja
lret
aad
xchg
cmp
ds
xor
inc
cmp
daa
xor
enter
fisttpll
aam
hlt
sub
gs
mov
ror
enter
sarl
inc
and
mov
mov
shll
outsb
mov
cmp
movsb
xor
je
jbe
repz
mov
xchg
and
jnp
xor
das
pop
lret
testb
lods
scas
leave
paddd
xor
mov
inc
aam
fnstenv
xor
pop
stos
aam
adc
xlat
dec
jp
pop
sbb
adcl
or
push
daa
cmp
dec
daa
sub
rcrl
inc
sbb
fisttps
stos
js
imul
pop
shlb
mov
mulb
mov
cmc
stos
aam
iret
cmp
insl
cmp
pop
add
xchg
pop
xchg
xchg
ja
mov
aas
dec
pop
pop
jmp
inc
jnp
subb
push
stos
ret
fdivl
sbb
ret
or
fwait
and
jo
sub
sbb
nop
jo
push
jg
aaa
mov
mov
jb
or
xchg
push
and
dec
movsl
adc
xchg
fcompl
lock
fistpll
fsubl
cltd
ljmp
mov
test
push
cmp
out
inc
sbb
dec
dec
and
push
insl
subb
dec
cmp
jmp
mov
aam
nop
inc
outsb
test
lock
lds
ret
dec
push
fisubl
pop
mov
mov
cmp
adcb
es
mov
cltd
mov
rclb
adc
lcall
push
lea
jmp
ja
out
xor
in
movsl
insb
shll
adc
call
in
lock
pop
lock
or
cmp
push
jl
xchg
or
sub
nop
sub
xchg
loope
add
and
hlt
sarb
adc
adc
push
mull
int3
cld
mov
loop
lea
xor
movsb
mov
frstor
fildl
sub
inc
aad
cs
inc
cwtl
mov
adc
popa
ret
data16
mov
adc
inc
jg
outsb
bound
bound
pop
lock
xchg
aam
call
mov
orb
xchg
fnstsw
in
xchg
mov
in
pop
xlat
push
and
push
or
mov
movsb
cs
adc
ss
das
lcall
add
push
jbe
js
mov
mov
and
cs
bound
popf
add
mov
scas
mov
icebp
adc
testl
xor
push
cli
sub
inc
cmp
sahf
mov
aas
mov
fnstsw
lret
push
xor
into
dec
movzwl
jae
cmp
inc
mov
jo
insb
sbb
and
or
fsubl
shl
add
sub
pop
or
mov
sub
insb
dec
fnstcw
pop
test
jecxz
push
aad
int3
ds
or
sbb
fbstp
stos
xchg
mov
scas
push
clc
push
xor
xchg
cmp
in
sub
jle
dec
enter
inc
mov
and
gs
gs
in
push
cli
push
xor
dec
sbb
xor
insb
inc
push
ret
push
fidivrl
fisubl
lret
mov
sbb
lods
cmp
es
sahf
call
scas
cmpsb
and
stos
mov
or
add
mov
daa
sub
xchg
push
jg
jg
jo
ds
mov
fnstsw
pop
sbb
daa
cmp
out
cwtl
xlat
mov
dec
ss
sahf
aaa
push
lds
mov
in
loope
fiadds
pushf
test
insl
inc
pop
outsb
cmp
enter
cmc
push
push
fisttpll
lods
xor
incl
fcoms
mov
sbbb
sub
or
xchg
insb
je
rcrb
pop
dec
dec
in
inc
sub
fwait
sub
lods
sbb
inc
lcall
outsl
stos
inc
jg
test
shrl
jl
mov
cmpsb
and
jmp
xchg
lods
push
vcvtsi2sdl
sar
insl
fwait
inc
pop
roll
in
xor
arpl
in
shl
pushf
ficoml
add
push
xor
jp
sbb
fwait
mov
push
push
jbe
fisubrl
adc
enter
dec
mov
in
push
jo
push
loope
push
add
mov
lea
cmp
jns
shlb
in
sbb
mov
daa
mov
dec
hlt
icebp
in
jmp
rcl
les
xor
jo,pn
mov
fildll
cmp
xchg
lret
sub
or
jmp
adc
cmpsl
jnp
push
mov
pop
test
je
das
gs
xorb
inc
dec
push
push
imul
je
cwtl
shlb
jp
imul
ds
rcl
cltd
inc
sub
dec
popa
add
je
push
fbld
test
dec
popf
mov
ljmp
je
push
mov
dec
fptan
jmp
jl
roll
sub
test
mov
mov
adc
pusha
sbb
ret
inc
outsl
popa
sti
dec
sti
or
mov
fldcw
popa
mov
adc
cmp
sbbl
test
push
sbb
jnp
cmp
push
clc
inc
jge
sub
aaa
pop
inc
pop
inc
stos
lret
push
jns
or
js
lock
test
fisttpll
enter
inc
lods
imul
scas
lea
ror
xchg
xor
out
cmovl
pushf
loopne
fidivl
cmova
jo
mov
fdivr
jns
or
mov
ds
ds
sub
add
sahf
pop
adc
stos
std
sub
stos
data16
lret
pushf
movsb
iret
int
jl
lcall
inc
ja
jmp
ret
scas
xor
adc
nop
cmc
clc
inc
mov
or
jl
push
push
repnz
scas
pop
shll
nop
dec
cs
pop
hlt
js
mov
pop
and
cli
out
pop
lds
in
cmp
repnz
in
pop
stc
fidivs
inc
test
pusha
sbb
loop
adc
inc
shlb
xchg
adc
mov
mov
sahf
lods
pushf
mov
and
icebp
xchg
in
mov
pop
insb
sub
sub
out
push
jne
add
push
arpl
mov
clc
mov
dec
mov
int3
push
insb
and
dec
pop
xchg
xor
pushf
xor
jno
sbb
rcll
pop
pop
dec
mov
xchg
and
adc
in
pushf
ss
mov
testl
push
out
xchg
lahf
jae
or
daa
mov
popa
clc
out
sub
movsl
pusha
into
push
mov
outsb
stos
xor
sub
out
shr
pop
fwait
pusha
jge
test
test
enter
mov
ljmp
jo
sub
bound
enter
aas
shlb
inc
sbb
gs
iret
in
sub
inc
and
push
jae
and
xorb
mov
cmp
xchg
xchg
call
mov
out
int
shlb
addr16
push
mov
jnp
iret
cmp
xor
mov
mov
cmp
dec
xchg
jg
imul
repz
js
out
repz
mov
in
sub
jae
sbb
add
add
cmp
out
pop
ja
lock
jae
xchg
cmpsl
pop
adc
adc
bound
fcmovnbe
hlt
outsb
mov
push
mov
jae
call
inc
leave
unpcklps
xchg
movsl
insb
inc
push
sbb
pop
repz
sahf
call
pop
icebp
fucomi
lock
inc
pop
fsubr
lret
outsl
sbb
pop
xor
ljmp
adc
fidivrl
xchg
lods
into
lret
sbb
leave
mov
add
es
mov
xor
ret
sbbb
hlt
arpl
popa
sub
lret
cltd
pop
jg
push
popa
insl
jbe
jb
sbb
inc
push
jo
mov
fwait
inc
mov
loop
mov
dec
push
push
ljmp
int3
shlb
xor
cwtl
aad
adc
mov
jge
cmp
mov
loope
pusha
data16
jle
and
cltd
inc
rcrl
sbb
cmpsb
nop
jae
dec
mov
fidivs
enter
add
jno
int
mov
filds
mov
jg
push
push
push
fnstcw
jmp
mov
in
out
sbb
je
je
scas
xlat
andb
cmpsb
insb
daa
sbb
mov
push
push
cmpsl
xchg
lds
sub
add
pop
incl
jns
and
cmp
std
jp
inc
hlt
outsl
cs
outsb
add
int3
push
sbb
push
xor
lock
xor
pop
lock
sbb
std
jl
loop
adc
in
out
stos
inc
dec
jge
or
rorl
sahf
add
or
lods
xchg
subb
setg
xor
sbb
lods
and
xor
ret
cld
out
roll
aad
pop
add
cmpsl
mov
xchg
or
sbb
loopw
inc
js
xor
lds
sti
sbb
out
mov
outsl
mov
mov
xchg
popf
mov
hlt
pop
aaa
in
jbe
push
dec
sbb
pop
xor
xor
in
popf
test
adc
xor
sbb
andl
push
pop
ret
mov
jnp
cli
fsubr
cmp
les
insb
mov
jo
cwtl
orl
js
add
jmp
shll
sub
loop
shr
dec
ss
ljmp
xor
lret
int3
mov
insb
lcall
ret
out
test
sbb
imul
movsl
fisubs
lahf
sbb
inc
movsw
test
addr16
dec
cmp
sahf
xchg
subb
arpl
dec
mov
mov
and
test
and
xchg
mov
mov
add
addr16
lock
inc
adc
mov
dec
mov
lods
and
cmpsb
arpl
loope
lret
or
mov
jae
push
sbb
jmp
nop
add
inc
testl
sbb
jge
lret
icebp
jo
cmp
fistpll
mov
mov
push
lods
in
ret
mov
in
mov
cmpsb
div
leave
mov
dec
sub
mov
push
xchg
dec
inc
call
adc
ja
inc
imul
push
fs
push
outsl
and
test
lods
movsl
aam
lea
inc
jbe
or
es
add
xchg
jmp
inc
inc
inc
push
not
cltd
frstor
pop
xchg
in
lcall
ret
xchg
mov
or
shll
push
mov
or
jp
je
out
je
rol
cmpsb
lock
insb
cmpl
or
lret
test
js
nop
push
imul
lret
and
xchg
adc
pop
mov
icebp
jns
push
dec
popa
int
ja
repnz
mov
movsl
lret
lret
xchg
insb
dec
push
pop
jo
ficomps
mov
roll
mov
fsubrp
fistpll
mov
rorl
rclb
xorl
shlb
push
clc
jbe
xor
pop
testb
inc
adc
das
adc
sub
xchg
xlat
sahf
push
cmp
shlb
cmpsb
xor
or
bound
adc
and
std
push
movb
sbb
jb
or
ret
push
insb
inc
pop
and
stos
aas
les
sub
cmp
insl
int3
adc
lret
orb
pop
push
dec
test
mov
call
leave
ficomps
jle
es
cmp
or
pop
sub
xchg
ret
lret
inc
stos
xchg
ss
pushl
mov
push
ret
ds
dec
pop
add
aaa
sbb
out
xchg
dec
sub
mov
iret
xchg
jl
cmpb
dec
movsb
sub
test
call
je
fistpll
mov
mov
test
xchg
mov
ret
sahf
xchg
cli
hlt
movsb
fucomi
push
stos
pop
ret
push
mov
xchg
enter
push
lock
std
push
call
adc
jge
push
es
je
or
lock
out
jae
int
nop
sub
bound
and
fidivs
sti
into
sub
fstpt
mov
or
js
lock
xor
xlat
call
test
fstpl
int
nop
cmp
jnp
flds
popf
push
aad
loop
mov
movhps
push
mov
nop
fcoms
stc
and
lahf
lock
mov
mov
mov
mov
add
jg
nop
aaa
gs
pop
and
fwait
cmp
sbb
xor
fs
cmpsb
and
aad
dec
popf
push
jmp
je
mov
or
sub
fnstenv
fwait
movsb
arpl
sbb
cli
pop
cmp
popa
lods
cmc
cmp
push
adc
fld
in
fwait
in
je
push
sub
je
cmp
ret
gs
cmpsb
stc
icebp
lock
std
sbb
cmp
repnz
sub
out
cmpsb
in
xchg
sbb
cwtl
adc
stos
arpl
pop
je
dec
inc
inc
add
jle
xlat
jecxz
fistpll
dec
fildll
loope
sbb
in
lret
fstl
lret
test
subb
cltd
or
dec
sbb
popf
dec
mov
pop
sub
movsl
js,pt
jge
dec
test
push
cmp
mov
inc
add
pop
sti
lods
int
mov
dec
jge
imul
rcl
popa
rcl
faddl
mov
push
pop
push
push
xchg
add
scas
and
pop
test
add
jmp
push
cli
xor
sub
xor
dec
mov
jl
je
or
jmp
or
rclb
in
push
add
out
inc
js
sub
lods
sbb
dec
pop
cld
call
imul
int3
je
add
test
cmpsb
outsb
aas
jns
sarl
in
imul
into
xor
fdivrp
loope
bound
inc
xor
pushf
jmp
lock
dec
mov
sub
ss
sbb
inc
out
cli
in
aaa
push
add
mov
sub
xor
in
das
xchg
adc
cltd
pop
add
push
xchg
mov
arpl
jl
fsts
mov
cwtl
push
ret
jge
push
lahf
icebp
inc
out
add
xchg
jp
push
ljmp
push
cmp
mov
aam
shrl
cmp
and
or
xor
sub
pop
adc
out
loope
mov
mov
push
js
in
mov
pop
mov
xor
aas
lcall
ljmp
outsl
jp
xchg
jae
inc
xchg
mov
xchg
cli
es
fcmovnb
aad
add
and
dec
sbb
bound
movsb
mov
cmp
sub
mov
jb
or
outsl
pop
dec
adc
jno
mov
adc
nop
xchg
cs
addl
mov
lods
lock
dec
mov
stc
mov
mov
addr16
push
jmp
loopne
loope
test
mov
or
xchg
test
jno
mov
mov
les
les
sbb
and
cltd
imul
imul
sahf
pop
addl
out
lahf
in
mov
xchg
mov
jmp
pop
popf
mov
or
mov
or
xor
int3
inc
add
in
arpl
adc
stos
xor
mov
je
ds
mulb
rcll
jns
repnz
lods
lret
add
pop
dec
aad
mov
add
jge
xchg
ret
add
mov
xor
xchg
adc
enter
or
jmp
or
test
jmp
test
xchg
cltd
mov
icebp
lock
lcall
pop
mov
or
adc
add
and
xor
jecxz
cmp
pop
xchg
xlat
test
dec
setl
xchg
xchg
dec
adc
cmp
fldt
popa
test
xchg
sub
dec
popa
arpl
icebp
or
cmp
sbb
or
jbe
lds
or
pop
push
dec
insl
in
js
cli
imul
and
xchg
insl
jl
push
or
sbb
pop
push
sub
stc
popa
cs
or
popa
repz
xchg
outsb
in
daa
vmovsd
fmuls
lahf
inc
test
and
sbb
leave
cmp
mov
lcall
pop
arpl
mov
int3
nop
flds
push
lds
jne
jae
icebp
sti
or
pop
jecxz
cmpsl
cwtl
and
xchg
and
stos
or
int
fwait
mov
dec
mov
clc
shrl
mov
test
xchg
lock
push
adc
push
lods
cli
push
mov
inc
cmc
jmp
fmull
test
arpl
cmc
mov
cwtl
jae
ret
popf
aad
addl
or
add
xchg
xchg
divl
add
loope
test
sbb
lcall
mov
test
jne
aaa
mov
daa
mov
adc
add
or
and
add
add
repnz
or
aas
test
xchg
popa
jne
lret
mov
mov
icebp
jbe
dec
dec
or
jle
std
out
out
aad
xchg
mov
add
jle
int
mov
cmpsb
jmp
jno
movsl
and
cli
test
int3
mov
cld
jl
push
sbb
push
dec
scas
jmp
sbb
push
and
adc
imul
fs
mov
pop
jge
in
sbb
scas
nop
adc
cmp
mov
mov
push
aam
xchg
adc
and
xchg
push
pop
arpl
and
int3
inc
or
sbb
imul
cmp
loop
mov
cmpsl
adc
enter
leave
pop
xor
jae
mov
out
cli
inc
insl
mov
mov
add
adc
popf
sbb
adc
xchg
xor
xor
pop
xor
pop
and
icebp
jl
mov
loopne
aad
pop
fcomps
mov
icebp
mov
jbe
jp
sub
aas
addl
fidivs
inc
aas
dec
fnstcw
ds
popa
jp
or
pop
add
xchg
fiaddl
mov
mov
in
dec
mov
je
icebp
cld
out
lret
adcl
loopne
cmc
cmp
stc
xchg
mov
pop
xor
mov
pop
jmp
imul
jne
cwtl
aaa
pop
push
js
std
mov
lahf
subb
std
push
movb
pop
test
mov
xor
pop
sbb
sbb
movsb
sub
ljmp
mov
pop
repnz
stos
or
push
sub
sub
ffree
mov
xor
or
adc
and
lds
inc
ror
pop
push
push
fwait
scas
mov
mov
mov
push
int3
ret
ljmp
mov
int3
repnz
mov
mov
and
es
rcrb
inc
or
aas
adc
inc
sub
test
lea
ret
jle
push
pop
inc
pop
fcoms
or
mov
aaa
lret
mov
jecxz
adc
js
cmc
ficoml
outsl
ds
in
arpl
out
call
add
adc
rcl
push
addr16
xor
scas
jg
das
dec
jmp
inc
sub
subb
cmp
test
mov
push
ljmp
or
adcl
cmp
xchg
mov
aas
ficoml
lods
sub
pop
out
xchg
repz
jle
adc
js
popa
gs
sarb
and
jne
insl
movsl
cld
clc
js
ja
inc
fldcw
loopne
jbe
cmp
notb
lret
popf
push
push
push
and
insb
push
js
sbb
je
mov
sar
imul
addl
pop
pop
cmp
or
or
pminsw
dec
mov
das
or
push
mov
fs
xorb
jns
mov
mov
aaa
xchg
insl
test
jno
lret
push
sub
and
js
jmp
adc
xor
pop
or
lret
jl
mov
sbb
jo
cld
out
mov
jns
fs
jo
push
push
fidivs
sbb
lret
cmp
xor
cmp
adc
leave
add
lock
mov
repz
test
jmp
mov
out
aad
outsl
jp
std
stos
push
fsubrl
mov
dec
mov
push
aam
cmpsl
adc
pushl
push
insb
mov
lods
subl
push
es
mov
outsl
or
lods
sub
aad
dec
push
mov
or
push
add
xor
xchg
push
push
and
cmp
or
std
pop
xchg
shrb
dec
insl
inc
jns
fldpi
push
mulb
pop
add
jne
clc
sub
ss
dec
sub
mov
cmp
rclb
mov
loop
int
movsl
dec
jns
aas
jb
sarl
lcall
loopne
into
sbb
cltd
mov
and
ljmp
adc
call
adc
into
das
jns
roll
cmpsb
test
rcrl
mov
cmpsb
and
pop
mov
push
adc
clc
and
cmpsl
mov
mov
incb
fwait
call
out
nop
xor
inc
pop
aad
cli
mov
adc
imul
gs
notl
inc
adc
icebp
jae
pop
int
lock
pushf
lods
and
aam
push
push
inc
sbb
sub
xchg
push
stos
push
jb
and
rorl
hlt
mov
mov
mov
add
adc
popf
xorb
xchg
pop
pop
xor
mov
push
gs
jl
shlb
fistl
fldcw
push
sub
gs
fwait
jnp
pop
lahf
dec
add
mov
ss
movsb
sub
jmp
scas
xor
mov
adc
shl
insl
xchg
outsl
loopne
daa
mull
ficoml
orl
adc
movsb
repnz
sub
mov
inc
lret
xlat
push
push
test
mov
jmp
mov
out
iret
jmp
xchg
out
mov
or
and
xchg
mov
mov
cmp
into
out
nop
pop
inc
add
repnz
arpl
inc
pop
mov
mov
test
jp
jmp
mov
inc
test
bound
data16
fsubr
je
test
add
mov
ret
movsb
aas
xchg
aaa
addr16
mov
std
xchg
or
pmaxsw
outsl
push
xor
pop
sub
pop
lea
jp
aas
sub
jl
cmp
out
xor
into
push
lret
cmp
cmpsb
pop
push
js
scas
sub
xchg
jecxz
rorb
outsl
mov
insb
aad
xor
adc
dec
pop
xlat
insb
adc
scas
insl
jge
and
js
data16
ss
mov
sbb
shrb
repnz
inc
and
insl
xor
mov
cmp
xchg
test
lods
rol
fsubs
cs
fiaddl
mov
mov
addl
jecxz
cmpb
pushf
add
xor
inc
lahf
lcall
push
xchg
xchg
push
mov
jnp
dec
jp
adc
arpl
push
lds
pop
in
dec
outsl
add
aaa
or
add
dec
adc
and
pop
add
mov
push
mov
popa
push
or
out
mov
xor
fs
std
test
insl
imul
or
int
sub
out
sbb
mov
inc
data16
fmull
mov
cmpl
arpl
lea
ret
sti
mov
ja
add
pop
xchg
mov
es
dec
mov
push
inc
mov
dec
xor
repz
ds
fcomi
jb
add
cmp
jmp
push
jne
mov
aam
mov
insb
push
stc
inc
cltd
adc
lret
flds
gs
jne
xlat
push
push
mov
xchg
pop
shl
push
mov
orl
call
cmp
and
pushf
or
sti
add
inc
mov
gs
xchg
ss
loope
and
loopne
pop
negb
repnz
loop
jns
mov
frstor
inc
pop
and
cvtps2pi
dec
push
fisttpl
cmp
xor
jns
adc
scas
addr16
cmpsl
popf
dec
pushf
out
xor
mov
shll
mov
pop
push
inc
fcmovnbe
enter
scas
into
in
fisubl
arpl
out
mov
adc
and
call
and
sub
xor
scas
cmp
inc
add
fcomps
xor
popa
add
inc
jle
mov
in
js
stos
cmp
cmc
xchg
and
mov
adc
addb
mov
xor
xchg
mov
dec
ret
clc
pop
dec
inc
sbb
push
mov
inc
xor
lods
nop
push
ja
jecxz
fldt
stc
or
fwait
mov
add
es
fwait
adcl
incb
mov
ja
pushf
mov
push
mov
cmp
inc
nop
shrl
push
mov
pop
repnz
addl
js
lret
jecxz
cli
dec
jnp
sub
sbb
bound
inc
pop
mov
ret
stc
xor
or
mov
and
negb
flds
subb
test
sbb
rcrl
adc
test
mov
popa
mov
es
sub
push
push
out
mov
fstps
ret
pop
jbe
out
jae
inc
in
pop
iret
or
inc
mov
xchg
cmpsl
stos
mov
loop
pop
testl
imul
test
cmp
or
in
loopne
outsl
or
dec
test
cmp
dec
cmp
ljmp
push
jecxz
and
pop
push
xlat
aam
int
pop
stc
xor
std
inc
lods
inc
jg
les
gs
iret
sub
pushf
mov
data16
or
lods
aam
cld
mov
and
popa
cmp
leave
fdivrl
out
mov
xlat
popf
mov
fs
xchg
and
cmp
arpl
fidivrl
scas
mov
or
stc
iret
loop
xchg
xor
jno
outsb
sarl
inc
iret
dec
cmpsb
jno,pn
aad
scas
mov
out
jle
push
inc
fwait
push
cld
decl
mov
fwait
and
std
xor
sbb
es
flds
pop
xchg
aaa
cmp
les
iret
and
mov
mov
mov
xchg
pushf
inc
repz
ss
jno
cmpb
es
jg
xor
outsl
lahf
repz
xlat
jg
bound
addr16
mov
roll
lahf
sub
loope
rcrl
repz
push
scas
xchg
and
lahf
mov
das
clc
inc
shlb
jo
mov
cli
loope
push
dec
pop
push
ror
adc
mov
xchg
roll
int3
xor
pushf
pop
ror
xchg
xchg
mov
rcll
cmc
pop
push
adc
push
cmpsl
mov
jecxz
rolb
sbb
dec
mov
ret
lock
inc
ss
xchg
andb
hlt
fistpll
add
cmpsb
adc
scas
inc
pop
jb
mov
sub
sub
ds
inc
fcomps
pop
mov
call
jno,pt
sbb
clc
jmp
push
mov
add
sbb
sets
mov
lret
pop
les
sub
pop
in
pop
and
sbb
cli
mov
adc
stos
leave
loope
f2xm1
in
lock
add
push
add
aam
mov
bound
imul
push
pop
jmp
push
adc
andl
and
es
inc
fisubrl
and
fld
jnp
jl
cltd
push
xorb
insb
in
out
rcr
jp
adc
add
loopne
and
mov
scas
push
cltd
or
ss
pop
int3
jae
pop
mov
popa
or
pop
sub
lock
push
adc
adc
aas
mov
jno
or
lea
out
ret
repnz
insl
out
jbe
inc
inc
mov
int
fadds
nop
sub
shrb
fwait
psubw
inc
lret
mov
stc
mov
or
mov
dec
aad
pop
push
push
mov
fidivl
pushf
je
outsb
call
mov
in
data16
mov
fdivr
pop
jl
test
js
mov
mov
aaa
mov
ror
jbe
adc
pop
cmp
jno
imul
cmpsl
insl
shlb
repnz
adc
int3
pop
cmp
sbb
sbb
insl
in
mov
mov
in
inc
in
mov
inc
sub
loopne
inc
leave
insb
pop
inc
add
idivl
inc
xlat
push
test
hlt
mov
or
loope
imulb
xor
sahf
pop
push
lahf
lahf
fstpl
ds
clc
aas
repnz
sub
icebp
mov
inc
mov
repnz
xchg
notb
movsb
pop
xor
xor
cmc
cli
pop
push
xchg
pop
stos
add
and
pop
jl
mov
jle
inc
xchg
pop
mov
push
jo
sbb
or
push
cmp
aad
popa
and
out
xchg
sub
lds
arpl
js
mov
aad
imul
pop
fdivrp
pop
loopne
jmp
test
mov
dec
lods
jle
or
cwtl
stos
push
mov
fs
cli
js
aad
mov
lock
test
inc
daa
enter
into
mov
js
outsb
inc
mov
cmpsb
ret
js
or
inc
in
outsl
mov
nop
rcrb
aam
into
pop
test
inc
cs
dec
xchg
bound
mov
std
call
scas
inc
dec
clc
or
bnd
push
lea
add
cwtl
fsubs
xor
movsl
mov
lahf
mov
pop
cmp
clc
aaa
push
movsb
out
call
jecxz
mov
xlat
movsl
mov
mov
fiadds
out
test
rcrl
xor
daa
sub
lods
es
fsubr
push
clc
xor
and
iret
cmp
inc
pop
inc
fwait
mov
mov
imul
jbe
sbb
sub
test
mov
imul
subl
mov
jg
jo
push
ret
pop
into
jae
arpl
lds
jg
push
jmp
dec
rcr
jp
ja
xchg
dec
mov
cltd
push
jp
cmp
mov
xlat
mov
dec
pop
sub
inc
aas
fwait
cmp
inc
and
inc
call
lods
sub
push
out
loopne
sub
aad
cmp
int3
je
das
mov
jp
fcmovbe
pop
mov
mov
jns
sub
push
ljmp
adc
push
daa
hlt
shll
inc
mov
mov
jbe
icebp
mov
icebp
aaa
call
inc
repnz
sbbb
push
push
adc
sbb
xor
in
imul
aas
loope
cmp
inc
cmp
mov
or
cmp
cmpsb
pop
lods
cmp
mov
inc
lahf
cmp
loopne
push
push
lods
push
sbb
out
push
push
into
lret
pop
pmaxsw
dec
stc
ret
dec
out
sbb
xchg
cmp
mov
adc
orl
jle
out
mov
rclb
add
addr16
ja
test
cmpsb
push
cwtl
mov
mov
out
dec
mov
push
mov
add
jae
dec
call
mov
not
outsl
dec
pop
rolb
sbb
push
inc
xchg
rcrb
jb
push
jl
push
xor
push
jecxz
jb
lret
pop
divl
lret
xchg
cmpl
bound
jns
xchg
mov
xchg
jecxz
lret
or
in
sub
mov
or
or
mov
mov
push
dec
popf
pop
mov
dec
shr
pop
insl
mov
mov
dec
sbb
push
cmp
sub
in
dec
ja
and
mov
xchg
xchg
add
out
outsb
and
int3
pop
xchg
mov
dec
inc
jmp
loopne
sbb
or
nop
xchg
add
jae
fwait
adc
ds
in
cmp
leave
cmp
push
xlat
dec
mov
xchg
adc
pop
in
hlt
pop
sub
orl
inc
lods
sahf
dec
sub
ja
sub
outsb
lret
jno
or
pop
loop
pop
sahf
stos
test
adcb
lock
xlat
cwtl
popa
mov
cmp
pop
repnz
nop
lret
sub
loop
push
outsb
stos
inc
test
sub
daa
mov
xor
xor
sub
sbb
addr16
xor
std
cltd
mov
popa
iret
ds
or
loop
jecxz
pop
xor
adc
pop
cmc
inc
leave
cli
xor
cmpsl
mov
psubsb
ja
out
lods
stos
xchg
xchg
insb
js
aam
lcall
lea
sub
push
push
test
sub
mov
outsl
je
mov
jo
or
push
inc
mov
or
orb
add
mov
fiaddl
or
jmp
icebp
push
xchg
add
xchg
test
cmpsl
iret
into
js
testl
cmpb
in
dec
pop
mov
pop
fcompl
into
lahf
pushf
sti
cmpsb
add
aaa
mov
lret
aas
aaa
outsb
push
push
out
sub
jg
push
bnd
mov
dec
inc
dec
nop
xor
leave
mov
out
fdivr
loopne
ss
inc
pushf
xor
fdivrs
mov
sbb
jae
into
scas
into
mov
or
movsb
imul
and
mov
and
loop
pop
test
notb
adc
orb
dec
cmc
pop
mov
ja
sub
adc
fsubrs
bound
jmp
mov
xchg
in
in
mov
stc
push
icebp
jmp
sti
lahf
mov
arpl
xchg
push
repz
push
cwtl
outsl
push
out
ret
and
sbb
ret
push
ficomps
jmp
out
ror
sub
sbb
mov
dec
xor
sahf
lret
pop
and
mov
pop
mov
inc
lret
cmp
xor
mov
rcrl
push
mov
in
leave
movsb
inc
das
daa
lods
push
shl
push
mov
push
pushf
cmp
popf
mov
cltd
fcmovb
aaa
enter
xchg
icebp
and
inc
ds
pushf
push
std
mov
test
adc
dec
inc
andb
jns
sub
jns
push
fisubrs
les
fldl
or
mov
or
inc
scas
addr16
jecxz
jne
iret
iret
lret
mov
add
pusha
mov
daa
imul
into
sub
sub
popf
stos
cmp
pop
leave
popf
ss
mov
dec
xchg
adc
mov
jo
scas
mov
or
mov
cwtl
adc
or
sti
js
lcall
imul
nop
or
push
loop
int
mov
and
nop
loopne
xor
int
ret
dec
loopne
test
cs
inc
repz
in
pop
or
mov
call
mov
push
xor
out
int
xchg
or
aas
xor
add
in
lods
ss
int
dec
lahf
xchg
je
cmc
and
push
cmp
cld
lahf
shl
pop
movsb
out
in
aad
hlt
xchg
and
stos
in
pop
in
lret
js
pop
fs
add
addl
testl
add
pop
adc
lds
sub
mov
fcmovb
jge
testl
cltd
ficomps
movsl
inc
push
lret
ficoms
ds
mov
push
addr16
mov
in
ret
fwait
shll
scas
inc
sti
or
cld
pop
xor
ja
jmp
dec
or
mov
dec
push
cmp
mov
and
loop
stos
mov
dec
movhlps
hlt
sub
push
mov
push
aas
cmpb
jns
fnstcw
pop
jnp
and
push
xor
lahf
jl
cmp
lcall
cwtl
imull
add
scas
in
inc
mov
loop
movsb
out
hlt
mov
dec
mov
adc
hlt
sbb
push
sti
ret
pop
shlb
jo
and
lret
sbb
push
aad
out
scas
aad
mov
cli
pusha
jg
jle
test
adc
xchg
decl
nop
sbb
fnstcw
dec
popa
jg
mov
and
pop
nop
aad
mov
aad
call
pop
xchg
fstpt
mov
insb
test
mov
push
repnz
imul
es
sbb
sbb
cmp
mov
mov
inc
cs
adc
push
loopnew
pusha
mov
push
out
pop
mov
add
dec
and
insb
adc
aaa
and
jmp
add
pop
mov
hlt
inc
or
out
daa
mov
inc
push
xor
test
cltd
mov
jle
test
int
and
fbld
icebp
mov
add
call
mov
or
mov
aaa
push
dec
push
jmp
sub
fstl
sbb
xchg
lock
adc
pop
movsb
std
lahf
mov
jb
cmpsl
xchg
mov
jno
into
fwait
outsl
cltd
adc
push
lahf
int3
mov
pushf
arpl
dec
sbb
adc
lods
ja
push
popa
and
mov
icebp
stos
dec
mov
cwtl
rorb
adc
mov
mov
shll
imull
dec
std
sub
pop
jl
loope
mov
mov
in
shlb
out
lret
push
and
inc
xchg
push
les
cld
out
push
test
xchg
inc
into
imul
jns
fcoms
and
adc
mov
mov
lahf
mov
sub
push
pop
inc
popl
stc
inc
aad
pushl
test
cmc
loope
or
fsubrl
adc
dec
rcr
cmc
pop
in
add
xchg
jb
sbb
bound
xchg
adc
jmp
mov
pop
jae
into
mov
pop
and
int3
dec
inc
push
test
fwait
sub
mov
enter
pop
adc
rcll
pop
push
aam
aas
mov
popa
xor
cmc
cmp
jg
pop
mov
hlt
add
cmc
adc
outsl
jg
cmp
insl
cwtl
lds
cmp
sbb
stos
test
sbb
arpl
repz
dec
pop
mov
cmp
xor
cltd
add
adc
pop
push
cs
xor
sub
xor
mov
push
inc
pop
je
cmp
cld
xchg
rclb
pop
jl
add
push
pop
orb
xlat
test
insb
sahf
jno
lds
pop
aas
push
aaa
mov
xchg
push
cmp
jg
addr16
sahf
mov
sub
mov
inc
sub
mov
add
ret
sbb
cltd
fcoml
mov
mov
sub
pushf
sub
sub
mov
dec
jae
add
int3
fistpl
xchg
add
pop
aaa
add
leave
pop
push
cs
pop
push
adc
lret
in
mov
and
dec
imul
and
or
cwtl
out
push
and
outsb
das
mov
out
sbb
mov
inc
pop
stos
cmc
jb
lods
lods
sub
xor
scas
inc
int
stos
jp
dec
inc
xor
lods
add
lods
out
lods
jmp
mov
outsl
outsl
xchg
inc
les
or
ror
arpl
xchg
adc
add
fsubrs
cmp
je
cmp
or
lahf
out
nop
insl
popf
bound
les
sbb
insb
pop
or
or
popa
data16
pop
push
into
data16
enter
divl
push
or
lock
nop
dec
jmp
int
adc
mov
inc
xor
dec
jle
out
push
rcll
jg
push
dec
xor
sar
std
add
push
cmp
jmp
insb
decl
je
aas
and
sti
or
lahf
iret
xor
ss
ja
idivb
aaa
bound
mov
dec
mov
cmp
pop
push
jmp
xorb
das
sub
sbb
add
imul
push
ljmp
jne
push
aad
mov
dec
out
or
jns
xlat
ret
daa
mov
ja
sbb
fnstenv
pushf
filds
jnp
int3
mov
pop
inc
mov
mov
cmc
push
mov
mov
mov
into
mov
pop
inc
push
and
push
push
daa
gs
add
sti
sbb
in
add
mov
mov
and
xor
imul
mov
clc
test
outsl
mov
call
sbb
jl
sbbl
daa
dec
lcall
scas
sub
sbb
jae
fnstenv
mov
in
ss
pusha
aas
dec
shlb
sbb
and
js
sbb
cmp
inc
mov
adc
mov
and
pop
insb
mov
adc
in
push
inc
lret
cmpsb
mov
jge
loopne
dec
dec
push
xor
imul
sbb
pop
notb
stos
leave
mov
loopne
fildll
pop
jp
jg
cmp
lods
testb
adc
mov
jl
mov
inc
int
push
ret
icebp
ja
inc
mov
mov
or
push
push
jae
fstps
enter
rclb
inc
jo
out
xor
cmp
aad
xchg
mov
jbe
xchg
das
out
fs
frstor
lods
inc
cwtl
push
mov
pop
in
mov
jg
adc
mov
jne
loope
repz
roll
or
scas
in
fs
push
xchg
test
and
mov
aad
aad
mov
fucom
int
push
out
lock
int3
xor
std
sub
repz
rcll
mov
jecxz
xchg
movsl
clc
push
ret
jg
ds
mov
and
rcrb
and
cmp
scas
mov
jbe
dec
xor
les
pop
mov
mov
mov
rcrb
xor
xor
push
lds
fcmovnb
outsl
xchg
push
jp
shrl
xor
mov
out
mov
lahf
pop
es
mov
popa
xchg
add
mov
pop
dec
scas
or
adc
fwait
popa
mov
icebp
cld
lcall
pop
xchg
fdivr
sub
testb
xor
lret
in
mov
push
sub
push
insb
jnp
mov
jle
call
ljmp
add
cmp
scas
mov
insb
sti
mov
ds
rcr
and
xlat
adc
mov
dec
push
jno
and
je
jae
xor
das
inc
daa
iret
dec
jge
movsl
call
mov
fxch
pop
fwait
stos
fidivrl
sti
bound
pushl
fwait
jg
ljmp
mov
inc
aad
pop
jl
xchg
jp
mov
repz
mov
fnstcw
insb
daa
shlb
ficoms
hlt
testl
movsb
fwait
push
out
sub
negb
in
add
popf
pop
dec
lret
repnz
rep
loopne
int3
sti
movsl
imul
enter
clc
inc
mov
sahf
xchg
xor
insb
out
cld
pop
rcll
dec
iret
mov
cld
out
outsb
fwait
xchg
push
cli
or
xor
ljmp
frstor
sub
mov
xor
aaa
aad
cmp
jb
lahf
mov
in
popf
adc
scas
xchg
add
shl
movsl
xchg
adc
mov
xchg
movsl
mov
hlt
inc
mov
cmpsb
in
ja
add
xor
mov
fisubs
int
lods
jnp
cmpsb
xchg
inc
sti
fiaddl
mov
mov
fsubrs
lea
add
rclb
xorb
lods
ficomps
mov
daa
js
mov
int3
mov
sahf
mov
push
jecxz
scas
add
xor
outsb
sub
dec
add
lret
mov
inc
insb
add
test
cmp
push
negl
mov
ja
xorb
jae
ja
in
scas
scas
add
and
and
sub
jmp
push
xchg
mov
data16
loope
je
cmp
inc
dec
scas
rcll
mov
xchg
xchg
test
jl
es
jge
push
lret
mov
test
nop
addr16
in
lretw
sub
lahf
lock
mov
ficomps
sbb
and
push
cmp
adc
and
imul
and
test
cs
cld
xor
xor
fs
sbb
hlt
push
lret
or
mov
fldt
stos
xchg
push
inc
sub
mov
pushf
sub
adc
test
je
or
cmp
sti
fidivl
in
push
push
sarb
pushf
jnp
neg
js
test
lds
sbb
inc
loope
cmp
dec
addps
loope
aam
inc
cmp
xchg
xor
cmc
lea
lods
push
imul
cmpsb
test
fcomp
std
aaa
pop
stos
out
enter
pop
arpl
in
mov
loopne
in
mov
stc
in
push
into
test
jb
jnp
adc
xchg
data16
xlat
add
or
mov
lods
dec
arpl
insl
lock
cmpsl
gs
xlat
jecxz
sub
cmp
ljmp
cmp
cmp
mov
test
sub
insl
jmp
pop
out
push
sahf
jns
fsubs
mov
or
sub
enter
sbb
imul
test
mov
pop
cwtl
movsb
push
and
xchg
jp
fwait
outsb
cmp
mov
rcll
test
andb
test
cmp
test
push
out
push
and
mov
cmp
mov
out
outsl
icebp
push
movsl
cwtl
gs
sbb
sahf
ret
clc
xchg
lret
insl
push
add
sub
adc
fisubs
es
mov
sub
xor
push
jno
sbb
cmp
subb
mov
and
sub
ficompl
clc
xchg
jno
pop
xor
xor
and
ss
xor
cltd
lea
leave
test
mov
fwait
xor
inc
mov
mov
push
movsl
inc
mov
cmpsl
fcomp
mov
inc
sub
or
and
jns
push
fwait
out
xchg
add
pop
test
sbb
imul
sbb
nop
call
inc
repnz
pop
in
adc
cmp
fwait
pushf
in
adcb
adc
lock
jns
cld
dec
jle
push
fucomp
rcl
idivb
pop
int3
pop
push
jge
mov
mov
lea
ret
cmp
inc
lock
call
je
ljmp
aas
hlt
inc
dec
xchg
push
mov
aad
jne
and
mov
xchg
and
cmpsl
dec
ret
push
imul
cmpsb
scas
add
mov
add
inc
sbb
std
pop
inc
inc
inc
dec
pop
sub
add
gs
pop
lret
jge
out
or
sub
in
adc
mov
rorb
jb
add
out
int3
or
adcb
or
movsb
inc
mov
fs
add
imul
xor
jo
dec
popf
cmp
enter
out
inc
cmp
loop
push
add
inc
mov
enter
xor
ljmp
aam
out
xchg
push
and
inc
sub
outsl
xor
stos
ret
lock
jge
pusha
mov
sbb
xchg
aas
jnp
sub
cli
mov
stc
inc
std
mov
pop
xor
xor
mov
into
inc
and
push
imul
mov
or
inc
aam
adc
hlt
jb
adc
mov
xor
xchg
mov
ja
inc
in
lret
pop
and
pop
push
pop
imul
jmp
jg
ss
push
insl
pop
mov
outsb
pop
jno
clc
lea
mov
jmp
lret
ficoml
ljmp
jo
jne
mov
mov
lret
lret
hlt
bsf
xchg
mov
sbb
or
lods
ljmp
adc
rolb
dec
push
push
hlt
clc
adcb
mov
jl
jecxz
xor
in
lcall
mov
pop
mov
mov
insb
arpl
push
pop
jne
push
add
les
je
jnp
xchg
cld
push
xor
mov
popf
push
push
lods
sbb
ds
inc
pushf
cli
mov
or
es
iret
jo
arpl
inc
shll
mov
ja
loopne
cwtl
cli
lcall
testl
orl
and
lret
sahf
and
xorb
mov
xorl
push
addr16
addr16
xor
lahf
out
jge
ficoms
jl
xchg
and
insb
lret
call
fs
and
xor
fsubrl
push
inc
mov
movsb
adc
movsl
pop
xor
ret
lahf
mov
mov
xor
push
mov
push
add
push
sahf
sub
and
fbstp
jge
jmp
nop
fsubrl
and
pushf
bound
dec
xchg
push
out
push
jne
inc
icebp
int3
dec
aaa
jecxz
out
mov
mov
inc
mov
out
shr
out
lahf
cli
nop
ud1
add
and
jg
push
add
jle
lods
cmp
daa
add
add
jae
lahf
pop
pop
mov
inc
mov
push
pop
mov
add
sub
adc
jno
insl
lret
stc
dec
das
test
dec
mov
ljmp
push
ss
sub
cltd
push
stos
imul
add
sarb
xor
mov
mov
fstpl
sbb
or
aas
lcall
sbb
int
dec
pop
stos
xlat
dec
fdivrl
cltd
mov
das
dec
fwait
test
rolb
push
mov
hlt
or
jae
and
and
call
xor
popf
push
cmp
dec
imul
andb
repz
sar
pop
test
fsub
inc
out
or
mov
es
mov
inc
call
xor
jge
jl
pop
xlat
add
mov
int3
mov
arpl
add
ror
mov
mov
or
jge
mov
cmp
cld
neg
adc
jle
cli
lods
pusha
and
cmpsl
mov
push
lock
clc
incl
jne
pop
pushl
mov
test
in
push
push
push
imul
movsb
mov
jnp
rcll
xchg
pusha
mov
push
das
jae
ljmp
mov
shrb
repz
sbb
inc
lret
testb
orl
fwait
leave
mov
push
out
add
xor
in
iret
arpl
cwtl
ja
adc
push
out
call
sub
stos
lcall
dec
std
aam
dec
mov
push
enter
movsb
mov
fistps
sbb
mov
movsb
xchg
sbb
jl
pop
mov
popa
arpl
inc
push
pop
mov
push
sbb
pop
push
js
test
dec
hlt
lret
adc
dec
pop
or
je
jmp
sbb
std
or
or
or
fs
iret
xor
not
dec
dec
test
shlb
sbb
push
je
stos
adc
pop
imul
loop
pop
leave
inc
mov
mov
and
aaa
push
jae
lds
jp
sbb
sbb
push
mov
or
ljmp
nop
leave
mov
jge
pop
enter
ja
fwait
and
sahf
mov
iret
pushf
in
shrb
pop
or
push
dec
js
outsl
mov
push
popa
sarb
imulb
clc
fs
xchg
std
mov
push
into
fcoml
std
mov
mov
jecxz
fwait
lret
pop
int
dec
pop
scas
and
push
mov
mov
sbb
ljmp
mov
dec
les
aam
in
mov
push
test
test
sbb
pavgb
and
rclb
push
movsb
es
sbb
pop
or
inc
jb
pop
movsb
mov
mov
cltd
int3
daa
push
inc
sbb
cmpb
cwtl
or
mov
fisubl
mov
movsl
outsl
mov
fs
jo
cli
es
inc
mov
jmp
dec
in
mov
cmp
xchg
test
or
jg
daa
cmpsl
push
sbb
out
pop
fxch
lcall
and
push
mov
iret
push
iret
addr16
cmp
in
pop
or
sub
dec
cld
push
out
and
jecxz
pusha
jecxz
pusha
xchg
mov
loopne
pop
mov
mov
xchg
scas
dec
arpl
jp
imul
add
sti
jns
aaa
lahf
mov
or
lea
in
mov
aas
dec
test
mov
stc
xchg
mov
jnp
cmpsb
fistpll
aas
mov
mov
das
push
jno
dec
jp
sarb
aas
lcall
test
inc
out
adc
in
popw
dec
mov
adc
push
aad
jp
xchg
popa
bound
mov
fwait
sub
in
int
ficoml
push
hlt
push
adc
mov
lcall
rcrl
sub
fs
inc
mov
stos
or
add
and
pop
in
hlt
push
xchg
ss
jno
xor
int3
cmc
stc
cmp
mov
and
scas
xor
or
mov
es
inc
jb
jl
adc
repnz
sbbb
sbb
jne
xchg
cmp
ljmp
jecxz
mov
mov
cltd
add
test
cmp
xor
cli
in
pop
inc
cmp
sbb
lds
sbb
int3
sbb
rep
pop
sbb
loop
in
push
pop
out
iret
inc
mov
data16
cmp
xor
push
mov
push
test
cmp
adc
pop
scas
push
pop
mov
pop
add
mov
pop
loop
pushf
mov
xchg
dec
and
adc
mov
nop
std
mov
inc
or
add
rolb
adc
notb
jp
rorl
jne
insl
add
cmp
mov
sub
das
push
stos
mov
stos
xorb
test
movsl
dec
cltd
test
ret
rcr
jle
imul
mov
call
mov
aas
or
sub
jbe
push
inc
inc
dec
sahf
jg
insl
add
jp
jns
loop
inc
addr16
inc
jbe
in
inc
pusha
sti
mov
dec
and
aaa
idivl
pop
fists
enter
mov
push
stos
aas
pop
mov
loopne
mov
cmpsb
sti
nop
in
daa
arpl
jmp
add
jne
pop
inc
lahf
adcl
imul
sub
pop
mov
sti
or
pop
push
mov
call
lods
add
sbb
dec
xor
ret
jmp
dec
xlat
sub
sub
les
jne
out
mov
frstor
cs
push
loope
mov
xor
and
push
outsb
sahf
add
rcll
stos
push
cltd
lea
movsl
dec
xor
gs
aas
push
sbb
test
and
ss
loope
call
jp
mov
mov
jno
ljmp
mov
mov
je
scas
dec
fstl
popf
dec
add
out
sbb
push
es
sub
call
mov
test
push
mov
dec
lods
mov
rorl
pop
ljmp
fsubl
pop
adc
xor
pop
std
or
push
icebp
jbe
jmp
pop
hlt
adc
sbbb
out
pop
pop
dec
mov
test
adc
addr16
xchg
mov
push
ljmp
mov
push
cmp
es
cmp
iret
cltd
into
cmpsl
mov
add
xor
mov
ficompl
daa
mov
test
sub
dec
test
jle
or
adc
jge
pop
aaa
es
ret
js
sub
cmp
adc
fisttpl
and
pushf
push
addl
and
xlat
xchg
test
shl
pop
push
jle
or
or
stos
push
je
outsb
es
fs
jno
push
enter
leave
jmp
mov
in
lret
loop
inc
mov
jb
sub
or
mov
adc
daa
sbb
pop
in
mov
or
or
xchg
jg
dec
loop
loope
jno
mov
jns
jecxz
cld
adc
enter
ret
adc
sahf
cmp
inc
lods
pop
cmp
fsts
mov
into
fisttps
or
rclb
xchg
pop
cmp
js
fidivrl
or
lods
cs
and
sub
mov
lcall
in
cmp
cmp
es
xor
cmpsl
sti
ss
pop
add
or
jo
test
adc
sahf
sarb
pop
pop
sub
pop
or
stos
std
xchg
aam
pop
jnp
loop
xchg
and
dec
fcomps
xor
orl
in
push
sub
popa
adc
push
pop
out
or
push
pop
sub
lods
or
mov
cmp
movsl
fsub
cld
cmpsl
push
and
pusha
lods
mov
dec
das
enter
and
or
sub
mov
xor
cmpsb
ja
scas
test
sub
xchg
call
sub
sbb
lods
repnz
imul
clts
push
sarb
or
pop
mov
lret
cmpsl
test
mov
add
and
mov
xchg
mov
scas
push
addb
lea
icebp
cli
ja
push
out
fldcw
and
xchg
fbld
aaa
aam
cmp
mov
ljmp
cltd
push
push
fisubrl
call
leave
inc
aam
xchg
lea
ror
loopne
pop
xor
stos
mov
mulb
sub
inc
inc
call
cmp
stos
mov
dec
adc
or
fnstcw
dec
mov
dec
lds
out
iret
das
cmc
es
pop
inc
test
add
lret
movsl
into
lahf
mov
xchg
dec
inc
and
das
enter
sub
cmp
mov
ffree
jno
mov
test
ss
inc
dec
push
sub
sub
orb
mov
dec
call
pop
add
data16
sbb
sub
adc
popa
int3
test
add
clc
mov
cmp
test
je
jp
jmp
imul
aas
cmp
mov
inc
subl
inc
iret
js
xor
xchg
push
or
pop
outsb
loop
add
inc
insl
dec
jge
xchg
adc
mov
mov
pusha
test
pop
mov
cwtl
pop
mov
push
fstpl
or
pop
sub
aad
movsl
mov
stc
test
mov
adc
inc
add
sub
popf
and
std
sbb
aas
lret
hlt
fcompl
dec
clc
xorl
mov
pop
fnstenv
xor
aad
xchg
dec
lahf
pop
in
aam
add
mov
mov
es
mov
and
cmp
rolb
pusha
rol
or
daa
xor
sub
dec
cmp
push
and
fs
mov
vunpcklpd
je
xchg
mov
stc
jmp
adc
jbe
ljmp
enter
sbb
jb
movsb
dec
popaw
dec
rorb
jno
dec
mov
aaa
mov
stos
std
sbb
jae
std
insb
pushf
sub
rcll
cmp
cmp
pop
bound
adc
mov
cs
pusha
vcvtsd2ss
mov
dec
xadd
sub
xchg
xor
sub
mov
aam
pop
in
repz
aaa
test
je
adc
pushf
pusha
mov
xchg
fldcw
lea
les
in
or
xchg
push
aam
mov
jle
cmc
adc
into
adc
jns
pop
inc
cli
inc
xor
jle
data16
adc
lods
out
or
jb
cltd
scas
imul
lods
popf
add
lds
nop
inc
adc
inc
shll
stos
mov
pop
dec
popa
out
std
mov
pushf
roll
int3
test
xchg
ljmp
lea
rolb
mov
sub
jno
cmpsb
inc
mov
hlt
lret
mov
ja
push
push
mov
ror
adc
push
and
jbe
arpl
inc
inc
sub
lock
mov
lock
jmp
or
lahf
mov
cmpsl
icebp
loopne
ss
jae
jmp
xchg
inc
out
mov
stos
mov
adc
mov
nop
mov
aas
push
jmp
cmpsl
imul
loopne
je
jne
jmp
push
or
aas
push
jp
xor
enter
ficomps
rclb
push
xor
and
mov
call
push
xchg
or
xor
sti
mov
sbb
int3
inc
loop
push
inc
addl
pop
xchg
mov
lcall
jmp
xor
mov
xchg
loop
cmp
mov
loopne
cmpsl
sbb
loopne
lcall
xor
cmpsl
mov
xor
lcall
inc
cmp
mov
loopne
add
mov
xchg
lret
cs
movsl
fcomp
fs
sbb
std
or
or
movsb
sub
push
lcall
push
pop
nop
push
loope
outsl
cwtl
xlat
add
mov
stos
xchg
xor
pop
push
inc
and
mov
inc
repz
xchg
jbe
sub
jecxz
pushf
or
out
push
fcomip
pop
xor
inc
jmp
sub
or
pop
hlt
jecxz
loop
imulb
rorl
fucomip
rorl
and
xchg
xchg
cmp
jo
pop
repnz
icebp
jnp
push
jecxz
mov
and
or
cmpsl
add
int3
dec
das
fdivl
mov
push
push
add
or
imul
movsb
sub
jmp
lret
xchg
imul
std
insl
loopne
mov
mov
cmc
js
pop
aas
dec
sbb
shlb
fisttpl
fucomp
push
cmpsl
jo
pop
and
rcrl
fcoms
add
xchg
xchg
xor
pop
and
stc
std
loope
das
dec
inc
fwait
sbb
mov
push
mov
mov
imul
div
xor
std
add
pop
loop
jmp
jl
sbb
xchg
inc
mov
mov
xor
scas
pop
out
stc
and
fstl
and
add
test
mov
mov
mov
jo
loope
dec
iret
movzwl
mov
sbb
or
ficoms
mov
inc
ret
adc
cmc
ds
mov
lcall
xchg
movsl
cmp
push
rcrl
jae
ds
out
ret
outsb
in
cltd
or
cld
cwtl
mov
andl
push
repnz
push
mov
fwait
sub
xor
xchg
repz
sbb
sbb
repz
mov
faddl
je
in
daa
fildll
stos
fwait
or
cmp
aad
iret
mov
lock
call
cmp
pop
xchg
stos
jmp
cmpsb
inc
fldenv
mov
pop
mov
test
inc
in
xchg
in
jno
xor
les
push
xor
mov
fldt
frndint
movl
shl
hlt
scas
cmpsl
in
mov
and
mov
pop
xor
or
jp
lods
pushf
lds
ds
mov
stos
mov
addr16
mov
loop
in
pop
xor
fistps
divl
rclb
fs
pop
pusha
jg
jecxz
out
fmulp
or
sbb
enter
notl
scas
dec
rcl
fisubrl
xchg
push
icebp
push
jl
dec
jnp
jle
mov
in
in
repnz
xor
push
insb
mov
jne
addr16
test
and
outsb
imul
jbe
mov
ficompl
mov
pop
and
aas
addr16
movsl
sbb
loope
jmp
xchg
or
pop
and
inc
ffreep
fcmovu
lock
dec
outsl
cli
xor
mov
cli
mov
mov
mov
add
sbb
push
or
cmpsl
xor
repnz
call
leave
into
jp
xor
add
mov
sahf
bound
and
es
fsub
mov
arpl
test
xor
and
or
mov
dec
add
and
je
scas
popa
pop
mov
and
ret
or
sarb
inc
aaa
xor
mov
fadds
cmp
cmpsl
add
jnp
push
xlat
into
dec
dec
jo
push
fmull
jo
and
jne
or
mov
push
and
xchg
add
add
push
test
std
pop
ss
or
cmp
std
xchg
sbb
call
aad
cmpsl
insl
cs
mov
xor
adc
mov
jg
add
xor
push
scas
add
sub
insl
std
and
es
xor
and
cmp
lcall
dec
cmp
jge
jg
add
pop
test
call
add
movsl
xor
lock
sbb
jb
sti
add
push
pop
inc
jp
xchg
and
je
ret
rorl
loop
jae
arpl
jle
or
leave
sbb
inc
xchg
push
ljmp
jno
jbe
addr16
dec
mul
dec
or
jb
popf
decl
xor
inc
jge
inc
and
mov
sbb
pop
leave
pop
xchg
out
jnp
add
and
fidivrl
out
stc
cmp
ja
shll
icebp
clc
jne
jmp
loope
push
out
mov
stos
cli
mov
or
lret
xrelease
sub
int
sub
fwait
dec
es
lods
lret
aaa
lret
mov
loop
ret
aam
xchg
lods
cmc
outsl
mov
fcompl
bound
scas
or
push
in
sub
push
mov
inc
sbbb
or
movsl
daa
mov
loopne
movsl
cmp
inc
mov
push
insb
outsl
test
mov
aas
ljmp
sbbb
or
mov
inc
cmp
jmp
inc
divb
xor
call
sub
pop
jns
mov
lea
and
lcall
int3
push
in
enter
icebp
xchg
test
rolb
jmp
ucomiss
jnp
jp
pop
adc
or
xchg
push
out
scas
hlt
mov
mov
push
ret
in
orl
xchg
loope
movsb
dec
or
pop
mov
lds
push
scas
xchg
adc
xor
cmpsb
xor
jle
jle
stos
sahf
loopne
ljmp
movsb
xlat
adc
xor
orl
movsb
or
or
lahf
daa
xchg
js
pop
scas
cmp
loope
ljmp
and
add
push
subb
mov
lds
fwait
pop
adc
mov
test
lods
out
cmp
and
outsb
inc
inc
enter
js
divb
scas
ds
repz
adc
movsb
fsubs
cmp
cltd
pop
test
mov
cmovp
adc
cld
es
in
push
push
out
mov
and
test
or
mov
sbb
dec
add
push
rol
lods
xchg
add
lock
adc
push
outsl
pusha
test
rorb
outsl
add
jno
mov
adc
movsl
clc
cmp
andb
lods
lret
sbb
adc
xchg
push
mov
dec
lods
cs
out
fstpl
dec
gs
lods
sti
mov
inc
insb
dec
sarl
lea
adc
jg
xchg
dec
add
mov
movsb
mov
mov
jns
add
fmul
dec
pop
push
aaa
mov
mov
jne
inc
or
repz
faddp
inc
aas
xchg
aas
into
nop
dec
jge
adc
add
cmpsl
mov
mov
xor
aad
test
dec
and
fmuls
stc
nop
in
dec
notl
not
rorb
outsb
mov
nop
push
faddp
and
int
pop
lea
daa
loope
pushf
lock
or
outsb
dec
xor
sbb
insb
dec
lret
ja
les
mov
dec
xlat
hlt
int
jge
xchg
leave
xchg
js
das
mov
lock
fiadds
pop
sahf
imul
and
ds
jp
push
and
mov
mov
repz
cltd
and
and
dec
sbb
int3
imul
rorb
xchg
push
and
mov
xor
out
sbb
dec
lods
fadd
clc
dec
adc
dec
std
outsl
add
mov
mov
and
sbb
repz
ja
dec
or
nop
mov
push
or
xchg
clc
or
dec
sbb
add
push
mov
jl
stc
xchg
in
enter
repz
xchg
xchg
sub
dec
leave
or
fstpt
nop
fistl
arpl
pop
pop
cmpsb
pop
adc
fisttps
mov
jno
or
ret
dec
jge
and
cmp
cmp
xor
fdivrl
loop
stc
fisubrl
insb
cmp
push
inc
push
cld
daa
es
add
jb
xchg
test
adc
cltd
testb
fidivrl
cmc
and
vorpd
cmp
jns
xchg
cli
es
sbb
fstpl
push
or
mov
lret
sbb
sbb
fldt
outsb
fcmovnbe
inc
xchg
inc
push
inc
xchg
push
and
sbb
sbb
add
or
push
sahf
scas
push
mov
adc
dec
xchg
xchg
es
test
xchg
in
add
pop
sub
mov
mov
jmp
xlat
les
ljmp
lcall
test
test
dec
jecxz
popa
fsubrs
and
stos
ja
xchg
dec
std
aaa
jo
jl
rcll
or
jns
insb
xlat
inc
push
jae
cwtl
negb
aad
inc
into
enter
and
xchg
enter
in
xor
xor
cmp
loop
mov
imul
sbb
push
sbb
pop
or
es
sub
lea
sti
mov
rcr
out
add
lock
xor
test
sub
movsl
lock
xchg
xchg
inc
daa
out
hlt
dec
neg
cmp
sti
imul
or
lods
lods
stos
pop
cmpsl
and
jno
xor
loopne
mov
xor
sub
mov
subb
jge
out
loope
mov
jecxz
pop
out
lock
fisubs
popa
jle
mov
outsb
or
inc
mov
mov
loop
pop
and
mov
xchg
into
xor
mov
iret
jg
rcrb
mov
lcall
cmp
mov
mov
sahf
mov
mov
pushl
push
pop
xchg
aas
das
or
mov
cmp
cmp
popa
dec
mov
outsl
add
lret
pop
mov
ljmp
andb
fidivl
dec
xor
pop
jle
or
push
add
lds
ss
and
pop
add
sbbb
and
and
or
loopne
aad
mov
cmpsl
sub
and
sbbl
or
push
icebp
mov
xor
xchg
in
imulb
enter
push
xchg
mov
xchg
clc
push
lock
cmp
orb
jg
inc
loop
icebp
std
dec
adc
lea
call
ljmp
repnz
iret
add
enter
push
add
lds
push
in
xchg
je
sahf
ror
clc
dec
and
jge
jl
rcrl
repnz
lods
test
ret
push
insb
adc
jo
outsl
dec
mov
and
rcrl
xlat
out
outsb
test
into
into
iret
shrl
clc
not
xchg
push
out
ret
ds
mov
sbb
add
inc
push
mov
push
cmpsb
mov
push
pop
mov
pop
daa
and
xchg
cli
sub
daa
arpl
test
ds
adc
mov
cmp
mov
adc
popa
ret
lods
jecxz
rep
addr16
or
lock
dec
mov
ret
out
out
sbb
adc
mov
mov
adc
mov
fistl
push
mov
ds
cmpsb
mov
addr16
pop
std
mov
pop
xor
shl
push
jae
repnz
stc
out
push
pop
out
cwtl
loope
imull
popf
mov
mov
in
shll
push
aas
jo
mov
out
mov
cld
fsubrl
and
jp
jnp
and
or
sbbb
inc
xchg
sub
icebp
pop
dec
adc
jp
xorb
frstor
cmp
push
pop
aas
push
fneni(8087
shlb
lea
addr16
movups
ds
pop
lcall
rclb
pushl
ss
into
cmc
fisubs
sub
or
and
imul
int
or
mov
ljmp
ret
mov
in
shlb
or
mov
sahf
movsl
cmc
push
sub
lret
adc
lcall
sub
pushaw
push
dec
orl
rcl
loopne
arpl
jp
cmpsl
and
in
or
icebp
in
mov
pop
cmp
jmp
js
pop
std
sbb
in
lods
bound
mov
lods
outsl
mov
mov
xchg
adc
ret
mov
aad
xchg
out
imul
adc
inc
push
cmpsl
mov
lea
mov
in
cmpsb
pushf
jns
fwait
pop
mov
fsubrs
adc
and
add
mov
xor
lods
loop
dec
roll
mov
sbb
sbb
and
sub
ds
rorb
dec
fdivs
sub
in
xchg
aas
mov
jmp
fidivrl
test
fbstp
nop
incl
iret
mov
fstps
stc
jl
pop
inc
cmp
pop
mov
pop
insb
or
test
jne
xor
xchg
icebp
xchg
cwtl
add
hlt
insb
idivb
dec
aaa
nop
rolb
mov
sbb
add
pop
dec
je
roll
mov
xchg
push
inc
sahf
cltd
push
jmp
jg
mov
mov
mov
fistpl
inc
pop
leave
sub
out
shlb
or
xor
loope
ja
pop
enter
mulb
das
and
popf
xchg
lea
dec
iret
and
xchg
int3
and
jge
test
pop
shl
xchg
and
add
xchg
jae
push
jb
mov
inc
mov
ror
jle
mov
std
and
loopne
pop
aad
xor
mov
add
out
int
lahf
scas
daa
push
and
repnz
aas
xchg
adc
pop
dec
add
add
fsubrl
add
shrl
int3
rcrb
je
cmpsb
dec
pop
popf
xor
or
icebp
sbb
lcall
mov
shlb
sbb
cmp
push
xchg
cmp
adc
and
mov
xor
xchg
data16
aaa
sarb
lods
push
add
das
jne
mov
out
jecxz
mov
pop
push
mov
xchg
add
data16
cmp
out
movsl
pop
stc
je
adc
xor
jge
push
mov
xor
cmpsl
xor
inc
test
push
push
cwtl
call
xor
rcl
push
rcll
fsts
nop
mov
push
outsl
and
in
push
cs
lock
push
shll
or
clc
and
add
stos
movsb
mov
test
mov
jbe
pop
fldt
das
mulb
xchg
outsb
fxch
and
xchg
or
fs
pop
out
pop
loopne
cli
mov
sub
dec
aad
xchg
outsb
pop
outsb
xor
mov
aaa
jmp
punpcklbw
insl
jo
push
sbb
adc
imul
fcomp
pop
ja
lds
scas
ficoml
popa
leave
inc
xor
jae
add
sub
popa
add
jnp
sbb
mov
imul
dec
adc
test
int
fsubl
mov
and
adc
sbb
bnd
sub
and
and
sbb
and
fldenv
xchg
xor
clc
add
shl
xchg
push
pop
scas
dec
hlt
mov
lret
jl
mov
inc
cli
dec
out
sbb
sahf
inc
mov
cli
push
push
dec
std
push
into
push
aas
sbb
mov
in
cld
in
shll
fcmovne
and
inc
dec
std
pop
daa
xchg
pop
loope
ret
loopne
test
xchg
jnp
pop
stos
sbb
mov
jbe
shl
cmp
scas
inc
mov
mov
and
insb
adc
ds
sbb
scas
or
add
fwait
mov
cld
push
jp
add
test
out
pop
adcl
xlat
les
lret
xchg
iret
inc
adc
jp
push
mov
cmp
pop
test
movsb
scas
lcall
dec
mov
in
jbe
dec
jmp
inc
and
jbe
inc
sahf
fdivs
cmpsb
aam
pop
or
aam
lods
aam
push
inc
popf
push
fdivrs
fidivs
icebp
lahf
cmp
clc
inc
cmp
sar
sti
cltd
mov
mov
lods
loopne
icebp
lahf
clc
inc
fdivrl
loop
shl
mov
in
jne
out
in
inc
scas
xchg
das
add
sub
add
ds
pop
insb
loopne
pop
add
outsb
test
and
jg
mov
mov
mov
stos
xor
aaa
or
pop
fnstcw
mov
int3
movsl
sub
inc
je
mov
adc
jge
lods
outsb
loop
in
xchg
ja
sbb
hlt
cmp
jns
jno
test
add
lret
and
cmp
lods
jmp
popa
add
jae
xor
adc
push
ja
and
sbb
out
cmpsb
push
mov
mov
and
add
dec
out
loop
xor
int
inc
and
lret
std
inc
add
fsubrp
lea
ljmp
stos
das
das
mov
cli
hlt
dec
sub
pop
xchg
fisttpl
cmp
and
lea
push
mov
sbb
fists
jbe
xor
xor
adc
repnz
xchg
adc
clc
sbbl
insb
pop
and
ret
aad
faddl
ja
mov
or
movsb
es
add
cmpsb
out
iret
mov
fwait
aad
insb
inc
or
mulb
mov
mov
mov
imul
movsl
dec
push
xchg
xchg
icebp
inc
xor
sbb
arpl
pop
comiss
push
jmp
test
cltd
sti
rcrl
mov
mov
mov
xchg
inc
push
mov
or
push
sahf
test
out
push
cmp
pop
sbb
jae
fldt
loopne
cmc
cltd
jg
les
aam
mov
pop
and
int
or
jle
sub
aas
mov
cmp
arpl
mov
lds
mov
movsl
mov
je
out
or
int3
addr16
ret
xchg
xlat
addr16
in
cmp
in
bound
pushl
arpl
jb,pn
aad
jecxz
dec
ficoml
adc
in
xor
add
and
mov
testb
pop
fists
cmpsl
jp
es
aaa
xchg
mov
or
daa
bts
int
lock
or
ljmp
dec
in
fdivs
scas
mov
push
dec
out
sbb
xor
sbb
push
sahf
adc
mov
ret
fwait
cwtl
mov
lock
fsubrl
push
sarb
fildl
cmp
push
or
in
jnp
nop
fdivl
jns
add
jns
inc
jle
and
outsb
fcmovnu
ss
mov
leave
cmp
mov
mov
cld
into
shrl
xlat
shrl
clc
jge
nop
js
testl
mov
xchg
jbe
xor
imul
push
adc
and
sahf
sub
xchg
inc
mov
cmp
mov
cmpsl
and
fldt
cli
xchg
mov
pop
movsl
inc
pop
sbbl
mov
jp
lock
adc
xchg
js
in
add
xor
xor
je
addr16
fsts
cmp
and
add
mov
jge
roll
or
fld
or
rol
mov
mov
xorl
arpl
movsb
pop
xchg
add
mov
sbb
xchg
mov
mov
cltd
clc
pop
dec
movsl
incb
in
pushf
sbb
xchg
xchg
mov
mov
std
out
mov
daa
cmp
negl
jnp
pop
inc
lret
nop
push
std
sbb
xchg
add
stc
mov
sahf
jns
lahf
ret
jge
or
in
insl
mov
xor
movsb
mov
inc
test
add
dec
inc
pop
cs
shrl
jb
jno
sbb
cmp
xchg
shll
sar
ljmp
pop
mov
icebp
ret
cmp
dec
test
xchg
movsl
dec
mov
or
inc
stos
faddp
cmp
das
xchg
xchg
fs
in
mov
push
lahf
pop
jb
out
inc
xlat
and
fsub
xor
jp
cwtl
xchg
push
jge
data16
hlt
mov
mov
or
imul
cmp
ret
cmp
dec
adc
pop
dec
inc
stos
in
inc
mov
shlb
insl
mov
cmc
jo
jmp
mul
push
pop
dec
fdivrs
outsb
mov
mov
sbb
scas
popa
jo
jb
add
dec
aam
fisttpl
enter
repz
std
pop
sub
ret
mov
lock
jne
push
scas
pop
out
cmc
ja
fcmovnu
clc
jmp
mov
lahf
sub
fadd
pop
fldt
inc
jp
out
xor
fimull
sbb
inc
aad
jge
mov
je
sbb
cmpsb
xor
mov
jecxz
in
mov
mov
cmp
in
sbbb
in
pop
pop
dec
pushf
inc
fs
or
mov
or
jp
aam
mov
cmp
sbb
pop
push
cmp
out
lods
fistl
pop
xor
lahf
scas
push
test
xchg
xchg
mov
mov
jp
mov
mov
jno
mov
sbb
loope
in
xor
cmp
and
mov
jmp
shl
setb
movsl
mov
shlb
adc
fidivl
insb
sub
dec
inc
mov
mov
xlat
sti
pop
jnp
cmp
dec
fnstsw
sub
dec
adc
loopne
fwait
mov
dec
loopne
push
jbe
fstl
pop
ss
xor
mov
push
daa
les
adc
mov
xchg
int
bound
cmpsb
push
push
jno
dec
lahf
sbb
xchg
fwait
lea
repnz
cld
cmp
cmpl
in
loopne
xchg
push
in
push
jne
lds
ret
fsubrp
popf
adc
std
inc
xchg
aam
enter
lea
popa
mov
jle
or
insl
mov
jmp
add
icebp
cli
push
pusha
clc
dec
in
mov
push
out
push
or
inc
das
add
mov
xor
add
jae
lds
dec
in
int
mov
sub
push
in
daa
in
push
inc
inc
shlb
xchg
punpckhdq
aaa
ljmp
mov
lock
xor
adc
mov
loop
stos
aad
push
out
pop
add
mov
fwait
cmp
fs
or
pop
stos
mov
push
jbe
mov
push
aas
gs
sarl
aaa
and
and
cmpsl
or
pusha
dec
lea
out
xchg
sbb
cmp
rcr
dec
mov
dec
pop
sahf
or
arpl
inc
jnp
into
add
movsl
dec
push
out
out
dec
pop
aas
lds
mov
jb
fcompl
mov
pop
outsb
xor
inc
or
mov
dec
pop
test
pop
adc
ror
adc
jg
xor
add
cmpsb
cltd
test
adc
push
pop
mov
dec
inc
jae
clc
fs
fbstp
ficoms
sbb
dec
shlb
into
mov
aas
pushf
mov
inc
hlt
rol
cmpsl
shlb
ret
std
lods
pop
pop
pop
jbe
sub
pop
jbe
out
arpl
ret
stc
push
jg
dec
push
mov
xchg
fistpl
sbb
std
sbb
mov
pop
pminub
dec
mulb
xchg
sbb
sub
jne
cmpsb
inc
push
rolb
shl
inc
adcl
out
mov
adc
ror
nop
pop
lret
sar
or
fs
push
sti
cmpsl
lahf
int3
shll
mov
fcoml
out
cmp
andb
or
shlb
or
lret
inc
std
mov
fisttpl
lods
addr16
xor
xor
xor
xorb
ljmp
mov
outsl
mov
loopne
bound
outsb
cmc
insl
jnp
leave
add
jbe
jg
addr16
jo
call
lret
rcrb
mov
mov
test
push
pop
lret
repz
sbb
es
ds
xchg
mov
nop
sbb
repz
push
xor
test
je
fbstp
scas
inc
sbb
addr16
or
jecxz
jecxz
clc
mov
jmp
push
xchg
mov
pushl
fndisi(8087
add
mov
gs
pop
mov
insb
lcall
cwtl
inc
bound
repz
out
aad
sub
add
xor
and
jne
bswap
push
lds
and
push
add
into
push
sub
rorb
test
mov
ror
jo
js
pop
and
mov
push
inc
aad
sub
push
xor
mov
pop
jl
scas
js
fisubrs
cmp
test
mov
and
or
cmpsb
pop
movsl
jmp
arpl
js
xchg
push
and
dec
call
lock
dec
xor
xor
push
cmp
mov
ret
mov
lds
lods
sub
sbb
ja
call
cmp
cld
sub
lock
inc
inc
into
lods
add
and
in
ds
pop
call
and
lods
sahf
es
mov
cltd
pop
out
gs
pop
loope
push
je
jmp
fucom
iret
cwtl
int3
dec
dec
and
mov
sbb
out
xchg
mov
xchg
paddw
sbb
fadds
roll
or
mov
xchg
je
inc
out
rcrb
jl
shlb
mov
std
and
inc
mov
out
xor
fldenv
daa
mov
in
jae
lock
fisttpl
out
xor
mov
push
xor
cli
out
pop
mov
xchg
dec
jns
and
xchg
shrb
in
repz
pop
dec
test
lret
xor
cmp
cmp
subb
sbb
or
add
and
movsb
out
inc
fs
mov
lods
mov
insb
in
es
xchg
mov
xor
or
aam
jae
or
stc
arpl
cltd
lea
lods
pusha
ss
int
sbb
xor
jbe
ret
dec
aaa
jg
dec
cmp
adcl
dec
cld
sub
fnclex
adc
jns
cmpsl
sbb
mov
sahf
mov
mov
lods
and
js
and
std
xlat
insb
sbb
iret
xchg
cltd
jb
ds
out
leave
loope
aaa
or
movsb
xchg
pop
mov
in
jp
imul
mov
shll
scas
push
push
add
fsubl
fistl
inc
xorl
inc
shrb
add
decl
shlb
push
jo
mov
mov
mov
xchg
test
add
adc
push
mov
push
push
repnz
sub
mov
aam
fimull
fnstenv
enter
mov
in
sub
orb
push
and
daa
lds
lret
stos
pop
lret
mov
inc
cmp
adc
ljmp
push
inc
ret
mov
adc
out
dec
orl
add
pop
mov
mov
pop
shlb
iret
sbb
cs
xlat
push
insb
jp
sbb
pop
and
xorb
mov
adc
cmp
sub
les
cltd
sbb
mov
inc
orl
das
pop
add
adc
push
lock
dec
push
jle
mov
pop
or
les
jl
fmul
aam
das
movsb
fs
xchg
mov
dec
popf
test
fdiv
test
mov
in
fnstenv
jg,pt
cmp
ds
shr
loopne
mov
cmpl
adc
cmc
popa
mov
mov
js
std
aas
and
add
xchg
xchg
jge
cli
sub
push
lea
ss
and
mov
cmp
push
pushf
xor
daa
xor
rorl
mov
imul
stos
mov
cld
jbe
fildll
dec
cmpsb
cmp
xlat
mov
inc
mov
icebp
sbb
dec
xchg
or
fimull
mov
or
aaa
xchg
jbe
rol
daa
cmpb
fstpl
jmp
imul
inc
or
in
or
out
push
stos
mov
inc
inc
jne
pusha
clc
dec
addr16
nop
inc
mov
xor
pop
pop
and
data16
lea
or
sbb
icebp
stos
lods
int
mov
lcall
push
dec
mov
adc
pushf
sub
mov
pop
pushf
jne
cmc
call
enter
mov
xchg
pop
xchg
clc
dec
sbb
iret
pushf
and
dec
pusha
xor
pop
add
add
addl
push
cmp
mov
pop
lds
mov
push
popa
icebp
orl
iret
repnz
xchg
lcall
loopne
ds
pop
jge
loope
fs
aas
cmpsb
dec
sbb
cmp
cmp
enter
dec
lahf
stos
xor
shl
sbb
jb
and
mov
fildll
push
mov
push
adc
sbb
add
pop
mov
pop
inc
and
in
adc
inc
imul
insb
mov
in
call
push
jbe
push
sbb
sub
inc
jbe
xor
in
pop
xchg
frstor
std
mov
subb
jb
mov
sub
mov
cmc
xchg
cli
fcmove
and
cltd
push
inc
cmp
fnsave
addr16
sub
movsl
das
movsl
mov
sbb
inc
adc
stos
add
add
movsb
iret
adc
ljmp
mov
sarl
fwait
in
fsubrl
mov
icebp
adc
jle
fmuls
jmp
or
sarb
jmp
dec
adc
push
loope
mov
push
xchg
sti
and
stos
cltd
lret
loop
pop
sahf
outsb
fidivl
sbb
rcl
jl
sub
add
sbb
out
das
fcom
or
sbb
cwtl
mov
cmp
iret
pop
jge
sub
mov
cmp
add
call
outsb
mov
les
out
jae
cli
and
je
nop
xchg
sub
gs
movsb
mov
psllq
lods
add
lods
ss
lahf
or
cli
int
sub
cmp
jo
ljmp
test
push
lea
adc
dec
cmp
pop
cmp
mov
sub
call
inc
push
mov
addl
sbb
std
js
movsb
lea
out
pop
push
pusha
xchg
mov
or
push
fsin
orb
mov
pop
rcrb
xchg
mov
push
xchg
ret
divl
xchg
stc
pop
cmp
adc
data16
imul
rorb
cmc
xchg
jne
xor
pushf
lret
pop
scas
cmp
in
sti
pop
mov
cmp
push
jp
je
cmp
loope
test
out
cmpl
mov
out
push
out
lock
or
ret
xchg
xchg
arpl
lahf
mov
xchg
movsl
lcall
in
pop
fisttpll
push
test
push
push
outsb
ja
cmp
cbtw
movsb
xor
in
inc
ljmp
test
mov
faddl
inc
sub
test
adc
and
jp
notl
loop
sub
dec
push
inc
testb
or
imul
mov
loopne
and
jp
mov
out
add
sbb
test
inc
lods
xor
push
loop
inc
lods
jl
dec
sub
add
jmp
icebp
pop
sbb
cmp
out
jp
cmc
or
adc
push
cmp
je
popa
jns
fcompl
loope
jns
test
inc
stos
mov
addl
ljmp
mov
mov
jns
insb
addr16
pop
cmp
outsb
mov
das
cli
shll
xchg
inc
fmul
mov
adc
fucomi
inc
leave
mov
mov
stc
jnp
push
sub
outsl
imul
je
xor
es
leave
fidivs
decl
les
sub
adc
adc
scas
dec
iret
mov
cmp
xor
dec
divb
cmpsb
add
insl
bound
stos
popw
nop
stos
cltd
bound
pop
push
mov
stos
adc
push
ljmp
jnp
js
lds
lods
mov
movsl
push
mov
push
push
adc
mov
outsb
jb
xchg
xchg
jne
scas
add
push
lahf
dec
fcoms
insb
sbb
test
xchg
cmp
xchg
push
cmpl
rcr
into
nop
movsb
fstpl
push
adc
sbb
dec
mov
nop
ud0
fstp
mov
orb
push
dec
insb
inc
pusha
lock
sub
or
cmc
mov
cmp
aaa
jmp
add
mov
test
rolb
xchg
lret
popa
in
mov
mov
xchg
lahf
pop
std
in
push
sbb
sub
popf
pusha
dec
and
cwtl
mov
mov
cmp
and
xor
out
filds
and
mov
push
mov
push
test
jmp
stc
cli
enter
out
leave
imul
orb
dec
jne
or
mov
ror
adc
mov
dec
push
dec
xchg
add
jbe
ds
mov
stos
sti
mov
sbb
adc
cli
outsb
dec
mov
imul
and
pop
int
mov
and
adc
leave
sub
mov
and
subl
inc
aam
test
test
sbb
mov
dec
adc
arpl
pop
cld
xchg
ja
cmpsl
jecxz
fistpl
rol
or
lea
add
sub
or
push
hlt
cli
mov
mov
mov
mov
pusha
and
mov
or
into
xchg
mov
popa
dec
inc
add
xchg
xchg
push
fsubs
pop
inc
ficompl
stc
mov
mov
or
mov
fdivp
hlt
in
mov
lods
lods
xchg
mov
out
stc
xchg
int3
lahf
push
cltd
mov
loop
push
lock
and
sbb
mov
inc
cmc
and
add
frstor
xlat
dec
cmp
mov
cmp
js
insb
adc
aaa
or
or
inc
inc
ficompl
fists
sbb
cmp
sbb
psubsw
cmp
push
vmovups
loop
push
repnz
arpl
xor
insb
in
dec
xor
data16
xchg
mov
roll
dec
jmp
cmp
or
dec
jl
xchg
nop
shlb
pop
jns
rol
pop
test
arpl
popa
or
testb
fdivs
push
or
dec
inc
sub
adc
mov
clc
negb
pop
shl
or
mov
xchg
les
call
add
mov
cmpb
cmp
ret
dec
push
icebp
and
xchg
mov
mov
mov
mov
cmp
iret
sbbb
clc
inc
stc
xchg
cmp
dec
pop
sahf
jmp
bound
xchg
sahf
aaa
push
test
fstpl
sbb
xor
and
fmul
int
or
inc
fildll
cmp
out
nop
cmp
pop
mov
aaa
dec
lcall
negb
pop
arpl
scas
aad
pop
xchg
add
sub
mov
inc
mov
mov
push
and
icebp
inc
xor
adc
mov
nop
leave
jecxz
in
daa
xor
pop
dec
fstpl
fsubrl
inc
enter
loope
push
aad
dec
lret
sub
roll
iret
dec
cmp
pop
dec
sbb
movsl
sbb
jg
push
call
xchg
mov
iret
sbb
ljmp
call
stc
movb
ret
insb
and
inc
out
aaa
stc
jbe
add
push
sahf
push
dec
adc
cltd
pop
mov
movsl
sub
test
cld
mov
ret
mov
and
jnp
iret
stc
insl
imul
in
jle
xor
mov
add
in
lock
dec
daa
or
data16
sub
mov
inc
jne
pop
or
hlt
mov
mov
out
push
pop
in
cmp
adc
xor
inc
push
pop
fisttpll
push
xor
test
ret
pop
loopew
insl
and
xchg
into
call
xchg
ret
in
sbb
bound
mov
sub
sub
sbb
push
ror
fiadds
push
push
movsl
imul
push
sti
into
dec
jmp
scas
jae
fs
pop
sbb
bound
test
and
lea
cltd
pop
dec
dec
push
sbb
push
in
push
push
rcr
dec
ljmp
sbb
loop
cmp
xchg
jbe
insb
fnstsw
ret
jg
sbb
pop
in
lcall
xchg
mov
lods
aam
test
lds
inc
xchg
mov
es
pop
sti
or
movsb
mov
cmpsl
push
mov
mov
jmp
in
adc
pop
xlat
push
test
arpl
push
stos
jb
loope
xchg
sahf
mov
push
stc
push
or
addr16
inc
shll
lahf
push
dec
xchg
push
jle
push
pusha
adc
push
mov
int3
jbe
sarb
xor
dec
add
sub
or
pop
sahf
xchg
std
fnsave
out
xchg
jo
adcl
add
xlat
shr
inc
and
les
orb
movl
sub
xor
or
cltd
push
les
iret
xor
fbld
neg
cmpsb
xchg
sarb
dec
out
lahf
xor
loop
negb
ds
and
movsl
adc
lock
out
loop
mov
mov
xchg
incb
mov
imul
punpckhwd
xchg
add
mov
jbe
rcrb
pop
arpl
cmp
mov
jge
add
xor
jmp
ret
lea
out
pop
mov
push
out
test
mov
jmp
int
adc
push
outsb
loope
xor
cmpsb
sub
xchg
aam
cld
cwtl
adc
sbb
or
adc
sub
cmp
cmp
je
outsb
loop
insl
into
fs
cmpsb
fnstenv
cmp
jno
and
push
insb
in
pop
in
xor
jae
mov
or
lahf
inc
mov
inc
adc
stos
mov
inc
in
pop
dec
mov
movsl
mov
inc
pop
rcr
dec
sbb
loope
pop
repnz
jle
xlat
xchg
out
stos
popf
sbb
cmp
aam
push
jae
int
push
sbb
cwtl
xchg
and
hlt
jbe
mov
pop
mov
pop
mov
leave
push
mov
add
jg
inc
lcall
hlt
cld
lcall
sbb
pop
sbb
repz
clc
jmp
xlat
jmp
sub
push
bound
and
jns
aam
cltd
jae
pop
rcl
cmp
lcall
mov
xor
add
xchg
addr16
mov
aam
loope
subl
xchg
test
repz
out
pop
stos
shl
push
fiaddl
pop
sub
cwtl
enter
adc
test
movsl
cmp
mov
sbb
jns
adc
mov
pop
mov
push
push
jp
shrl
imull
rclb
sub
adc
xchg
int
cmp
int
pop
lahf
nop
mov
xchg
ret
jecxz
aam
mov
dec
sbb
cmp
xchg
jp
or
sbb
sub
into
xchg
or
xchg
call
cwtl
inc
xchg
dec
cmp
into
adc
pop
mov
fsubrl
insl
sbb
cmp
and
adc
jae
jae
push
inc
add
mov
in
movsb
inc
std
repnz
leavew
inc
clc
sarl
out
popf
and
push
mov
lods
dec
adc
cvtps2pd
lcall
mov
jle
sub
out
dec
into
mov
mov
inc
aas
lret
adcl
fsubs
cmp
int
xchg
dec
jno
pushf
in
cmp
mov
adcb
scas
cli
out
add
in
pushf
pop
cmp
or
jne
xor
xchg
and
jae
inc
fdivr
test
in
push
sub
aad
imul
sbb
add
mov
mov
inc
mov
andl
or
lods
cmc
in
and
test
xacquire
pop
xor
mov
pop
xchg
sbbb
daa
or
iret
lea
fwait
jecxz
cmpb
les
ds
and
addb
dec
dec
xor
lea
cmp
jne
mov
jae
push
mov
cmpb
and
cmpb
add
mov
xchg
xchg
push
or
lock
cmp
adc
xor
push
das
add
push
push
lahf
add
js
lret
or
fcmovu
lods
pop
sbb
push
push
sbb
fimuls
lret
adc
or
add
xchg
mov
stc
or
add
pop
insb
loop
into
fdiv
shld
xchg
fidivl
in
inc
mov
sbb
fisttps
ss
adc
cmp
fbld
sub
movsl
jmp
aas
inc
jo
mov
adc
and
test
pop
je
sbb
pop
mov
in
or
in
outsl
movsl
mov
cmp
orb
pop
mov
pop
add
popf
data16
jl
imulb
in
xor
and
iret
adc
popa
adc
lcall
sahf
add
mov
jb
std
cmp
pop
xor
cmpsl
push
and
or
push
shlb
pop
hlt
inc
aad
jg
fwait
pop
popa
mov
rcr
fdivs
or
outsb
sbb
push
pop
adc
mov
sub
enter
add
inc
xchg
or
sbb
xchg
repz
mov
andb
fwait
divl
cmp
jae
ljmp
dec
in
cld
fwait
cmp
das
xchg
adc
lods
imulb
or
lds
sbb
ret
dec
je
and
dec
cmp
pop
std
mov
pop
adc
enter
xchg
aad
add
lret
sbb
mov
icebp
jmp
out
das
xlat
cmp
insb
adc
mov
cwtl
test
lds
pushf
frstor
push
jl
pop
jno
push
rcr
add
lret
inc
dec
icebp
mov
insl
add
dec
jnp
dec
dec
out
aam
cmovg
clc
sbb
mov
xchg
push
sbb
cmp
sbb
mov
scas
dec
lods
jge
arpl
mov
popf
add
inc
xchg
enter
xchg
inc
cmp
cmp
sahf
pop
cwtl
sarb
jl
into
es
inc
mov
lret
dec
add
jb
add
adc
adc
fcmovb
pop
add
daa
pop
fstps
gs
sub
data16
int
mov
inc
dec
sbb
cmp
and
sbb
outsl
repnz
ror
mov
adcl
fdiv
fisubl
nop
aaa
testb
dec
mov
dec
cs
lret
sub
pop
inc
dec
xchg
iret
pop
into
and
rolb
lds
push
pop
push
xchg
mov
xor
test
cmp
mov
push
lcall
xchg
out
std
jl
in
jne
pop
subl
or
or
jmp
mov
test
mov
inc
lahf
mov
mov
xor
jecxz
mov
ja
and
je
outsl
inc
or
inc
mov
lds
xchg
add
push
mov
jl
cmp
xchg
mov
movb
mov
xchg
and
and
xorl
mov
mov
mov
mov
aad
fsub
shll
popa
jae
pop
add
inc
in
push
jnp
mov
lods
aad
cmpsb
and
and
and
adc
out
dec
sbb
and
or
push
mov
insb
jge
inc
cmp
lea
cmp
xor
mov
dec
mov
in
daa
adc
xor
inc
xchg
lds
fsubs
movsb
pop
sub
sub
and
mov
insb
test
nop
int
in
subl
sbb
stos
xor
or
add
mov
inc
out
push
mov
mov
add
xor
int
dec
lret
ret
fcmovbe
adc
jb
sub
sub
inc
sbb
fwait
das
adcl
jnp
mov
pop
in
xchg
mov
dec
inc
add
sub
mov
stc
mov
insb
bound
add
nop
hlt
mov
push
sbb
arpl
mov
scas
xor
dec
push
por
mov
xchg
jl
pop
inc
xor
mov
jae
mov
cld
ficompl
out
stc
cmp
lret
sub
fisubrs
cld
loope
sbb
js
jno
pop
push
mov
cmp
dec
adcb
imul
cmpsl
arpl
orl
jno
dec
dec
push
adc
inc
jo
sub
mov
xlat
mov
mov
mov
xchg
adc
jb
imul
pop
dec
xor
adc
push
sbb
mov
xchg
fistl
fidivrl
leave
movl
testl
out
in
and
sub
loopne
fstl
cmp
mov
xchg
cmpl
faddp
int
jne
aam
cmp
sub
stc
mov
pushf
push
mov
mov
pop
sti
mov
mov
sti
test
push
shr
ret
add
pop
adc
jae
adc
push
sbb
sub
mov
leave
xlat
test
ss
push
outsl
pop
mov
scas
jge
mov
jne,pt
add
test
jmp
mov
sub
push
testl
mov
cs
jno
outsl
push
mov
mov
leave
mov
inc
shll
xchg
inc
fcoml
call
pop
push
or
out
sti
cmp
jo
mov
and
mov
push
lahf
mov
pop
cmpsl
mov
incb
xor
mov
shlb
dec
insl
fs
push
jne
and
jb
test
gs
cld
imul
sub
jle
adcb
ret
mov
xor
xor
jecxz
and
add
fst
rcr
bnd
inc
mov
mov
mov
push
jg
jne
xchg
test
xor
xlat
mov
lods
dec
adc
repnz
cmp
aas
jae
sbb
test
mov
sahf
pop
push
or
lock
mov
out
adc
outsl
xor
push
sub
inc
sbb
paddd
push
jbe
dec
mov
push
ds
add
mov
push
lret
aas
sti
mov
push
xor
daa
andb
sub
dec
mov
jmp
mov
sub
jns
and
andl
xlat
jmp
es
xchg
jbe
push
sub
fldl
ss
or
out
mov
push
pop
daa
leave
add
push
jmp
mov
sub
stc
stc
out
std
ret
cmp
ja
out
inc
lods
test
data16
mov
mov
test
mov
or
cmp
xchg
jp
mov
movsl
xor
fcomps
into
leave
andl
cld
mov
ja
int3
in
jle
sahf
call
dec
jmp
jmp
dec
stos
pop
sahf
adc
jle
push
fadds
inc
push
imull
mov
aam
add
xor
sbb
or
sarl
mov
mov
dec
pop
jg
adc
jl
fsubs
gs
mov
cmp
aaa
js
into
mov
movsl
fidivs
cmp
shl
call
or
cmp
sbb
push
sbb
addb
adc
data16
cltd
jp
imul
inc
mov
lea
and
fs
mov
jno
nop
xchg
cmp
mov
dec
popa
sub
decb
pop
lcall
test
sbb
adc
cmp
pop
add
movsl
repz
xchg
repnz
xor
out
jg
clc
js
out
mov
ds
mov
xor
icebp
das
out
xchg
push
add
test
add
loopne
adc
movsl
sub
jbe
inc
mov
cli
sub
mov
jae,pn
dec
cmp
outsb
or
cmpsl
sbb
mov
push
and
or
jbe
xchg
cld
fstp
xlat
mov
xorl
ret
test
mov
push
out
cwtl
add
adc
aas
ret
adc
rcll
loopne
test
cmp
mov
sub
les
out
add
cmp
aas
pop
popf
mov
sub
and
test
call
or
insb
out
shll
pop
and
cltd
xlat
xchg
popa
jge
enter
hlt
inc
mov
cmp
shll
or
jno
dec
adc
fwait
sub
jmp
xor
nop
lds
arpl
push
xchg
cld
scas
leave
push
push
push
aad
aad
fistps
loope
inc
out
mov
les
sbb
xchg
push
test
call
loop
mov
lods
dec
jns
test
test
sbb
xchg
or
adc
cmp
add
or
lds
pop
cmp
push
rclb
data16
fisubrs
adc
or
das
mov
jo
or
jl
pop
cmp
loop
jne
push
addb
in
int
cli
lds
iret
jns
addr16
idiv
aam
inc
dec
or
and
mov
jmp
push
ror
aaa
lods
xor
aad
jmp
dec
shll
pusha
mov
pop
jae
push
ja
push
dec
jae
push
and
out
sar
and
outsl
das
lods
shl
inc
into
rorl
mulb
inc
stos
jle,pn
lods
js
sbb
add
notb
add
cmpsl
mov
shl
cmp
inc
xor
mov
repnz
mov
push
cmpb
jle
scas
fcmovbe
cwtl
subl
adc
movsb
cmp
mov
cld
sub
roll
ror
cmp
inc
cmpsl
std
int
jge
sub
jne
mov
test
xchg
addr16
or
sub
or
jno
mov
aas
dec
mov
fidivs
pop
fdivs
out
mov
inc
jl
addr16
push
jecxz
stos
outsl
jns
ficoms
xor
and
mov
in
mov
popa
fs
inc
mov
int
jge
jnp
enter
ror
push
push
sbb
mov
pop
mov
xchg
std
adc
addr16
mov
inc
jo
out
rorl
mov
mul
pop
mov
shr
cmp
pop
push
jmp
sbb
and
loopne
cmp
xchg
sarb
jmp
aas
adc
test
xchg
push
push
add
in
cmp
repnz
mov
das
cmp
or
mov
nop
loope
clc
ficomps
xchg
pop
inc
sahf
inc
xchg
cli
xchg
pop
sbb
mov
lahf
int
outsl
push
xlat
je
sub
push
in
jae
mov
jns
repnz
in
out
in
lods
lea
inc
add
or
f2xm1
cmp
xlat
dec
mov
cmc
mov
and
ss
cmp
dec
lods
mov
lods
orl
loope
rorb
sub
xor
shrl
lahf
cmpsl
into
inc
mov
pop
jns
xchg
insl
or
or
inc
or
jg
andb
cli
out
mov
imul
adc
cmp
inc
sub
lea
fcomps
daa
out
call
jmp
jo
xchg
sub
push
out
gs
sub
mov
pop
push
jge
scas
aas
push
inc
int
sbb
mov
call
outsb
adc
in
out
cmpsb
pop
test
sub
out
jns
xchg
jns
inc
in
jp
xor
repz
je
or
xor
sbb
fdivp
cld
inc
into
call
out
in
lret
icebp
inc
jne
nop
add
adc
in
push
xor
ja
jmp
lock
xlat
xor
cwtl
stos
stos
add
inc
mov
push
add
in
mov
inc
or
push
jmp
shrb
cmp
ja
test
into
adc
add
dec
push
sub
ss
push
shll
or
xor
fildl
test
cmpsl
cld
push
ss
insl
and
and
mov
mov
sahf
cmpsb
fnstsw
dec
or
jg
mov
mov
jno
push
mov
ljmp
ss
adc
pushf
iret
dec
iret
jp
xchg
and
aaa
int
jg
ljmp
mov
inc
movsl
add
mov
jbe
inc
imul
mov
xchg
pop
jnp
dec
xchg
shl
js
lcall
subb
add
fucomp
decb
or
mov
shl
adc
pop
add
pop
fimuls
cmp
int
ss
push
lahf
lret
sub
pop
push
loope
and
mov
xor
into
mov
pop
and
insb
loope
cmpsl
cmp
pop
aas
loopne
les
test
sbb
pop
inc
dec
aaa
cmp
fdivs
adc
pop
cmp
mov
lret
jg
xchg
sbb
inc
inc
add
xor
inc
movsb
pop
enter
jbe
sbb
xor
cmp
arpl
adc
mov
jmp
imul
ret
in
jmp
mov
pop
loope
call
adc
ret
out
int3
nop
inc
xchg
add
or
xlat
cs
fucomp
lods
ret
mov
subl
loopne
pop
xorl
or
insb
push
dec
lods
xor
cmpsb
cmp
lcall
sti
sbb
aas
or
mov
mov
cmp
mov
or
fs
mov
clc
enter
imul
test
and
jb
ret
lahf
scas
xor
xor
psrld
mov
fisttps
add
shll
inc
das
xchg
clc
ret
and
test
mov
adc
mov
mov
test
fisubrl
stos
mov
sbb
je
jb
cmp
clc
je
jae
push
mov
mov
mov
pop
mov
scas
in
fcomps
inc
mov
data16
pusha
stos
jns
push
fdiv
and
cmp
xchg
into
fs
mov
xor
adc
cs
dec
inc
fs
in
jmp
add
push
stos
repnz
dec
mov
fidivrl
mov
pop
test
pop
inc
adc
lret
mov
test
mov
adc
outsl
push
cwtl
pusha
mov
loope
push
push
fildl
icebp
loope
jg
jl
mov
adc
addr16
pushf
nop
fcmovu
outsb
idivb
sbb
daa
fisubrl
lds
jmp
adc
jb
gs
pop
in
pop
inc
pop
xchg
decb
xor
movsl
sbb
jge
arpl
aaa
aaa
dec
mov
jp
mov
sub
outsb
stc
push
push
sub
push
js
sub
cmp
cmpsl
cmpsl
push
mov
jg
xchg
sub
mov
xor
nop
pop
mov
fcmovnb
mov
stc
in
mov
pusha
ljmp
std
mov
xor
dec
popa
jo
icebp
roll
scas
cmc
paddusw
push
into
xor
clc
clc
stos
test
sub
mov
push
fcoml
leave
mov
insb
arpl
fisubl
xor
pop
es
cmp
mov
js
out
lret
aam
mov
cmp
frstor
icebp
into
cltd
lds
pop
adc
lods
push
jle
loop,pn
xor
push
xor
popf
lret
fstpt
sbb
or
jp
mov
or
aas
lods
iret
mov
fidivs
jne
jge
dec
jmp
scas
sbb
ljmp
out
fwait
scas
push
mov
inc
stos
inc
loopne
mov
ss
pop
xor
pop
push
mov
addr16
mov
cmp
sbb
sbb
cmc
ja
lods
ret
pop
mov
lods
es
fiaddl
aaa
aas
insl
mov
loope
cwtl
cmp
inc
insb
rcrw
mov
mov
mov
test
hlt
add
push
outsb
outsl
fisttpl
add
cmp
into
ja
stc
ret
xor
cmpsb
mov
subb
das
out
loope
lcall
pop
push
loop
and
sub
mov
and
pusha
hlt
jle
leave
scas
dec
xchg
data16
xchg
fistpll
jbe
cmp
pop
add
imul
pushl
lcall
sub
mov
sahf
sub
xlat
add
mov
xchg
push
jae
push
int
sub
fistps
pop
adc
pop
mov
mov
mov
mov
add
or
cmc
or
je
cmp
scas
idivl
mov
daa
jp
sub
rorb
adc
dec
test
frstor
mov
arpl
das
aad
dec
mov
fwait
or
les
repz
jg
push
sbb
daa
cwtl
mov
cltd
test
and
ret
adc
adc
mov
adc
mov
jp
inc
inc
sub
mov
repz
lret
repnz
imul
mov
cmc
sahf
test
cwtl
mov
mov
roll
or
scas
aam
mov
testb
test
or
aad
adc
xchg
and
flds
cmp
or
jecxz
pushf
loope
jne
fbstp
fwait
mov
cwtl
add
xor
mov
popa
sarb
lcall
cmp
xchg
inc
pop
cltd
repz
jb
cmp
or
ret
sbb
push
sbb
xchg
xor
mov
pop
pop
adc
jecxz,pt
iret
pop
pop
mov
test
les
scas
clc
xchg
mov
cmpsb
pushf
cmp
push
inc
xlat
xchg
mov
repz
and
in
mov
lcall
push
jecxz
cli
sbb
loop
into
lret
push
push
das
fmull
add
cmp
cmc
scas
pop
loope
sti
loope
out
aas
adc
out
fwait
cmp
mov
rorl
and
mov
sti
aad
shlb
movsl
push
or
data16
mov
pop
dec
cmc
test
xchg
mov
cld
stos
dec
icebp
out
cli
inc
push
mov
aas
inc
aas
jle
fwait
push
aad
or
add
orb
sub
sbb
aaa
fists
mov
sub
xor
jb
icebp
lods
dec
pop
cmp
dec
cmc
movb
and
or
cmpsl
test
jp
inc
sbbb
arpl
push
pop
loop
scas
mov
lret
loope
push
out
addr16
popa
xchg
or
lahf
lret
add
inc
sbb
nop
mov
adc
push
add
shll
out
pusha
test
inc
nop
pop
mov
or
lret
test
test
mov
fisubrs
add
icebp
push
add
pushf
lods
xlat
insl
cmp
lods
and
xor
xchg
lahf
lret
mov
pop
dec
jno
cmp
in
mov
jns
adc
lret
push
or
bound
push
mov
push
aaa
in
xchg
and
mov
cmp
sbb
dec
push
sub
inc
mov
mov
stc
sub
out
or
pop
mov
fwait
mov
jnp
arpl
jo
insl
cmp
mov
cltd
push
lods
repz
sbb
jge
call
add
pop
out
std
test
mov
sub
repnz
sahf
push
mov
inc
fbld
lcall
push
or
push
sbb
mov
mov
and
out
pop
out
mov
dec
fstps
xchg
adc
mov
addr16
lods
aaa
xchg
test
mov
mov
push
push
sub
aad
jecxz
scas
lcall
sub
fistpll
ror
pop
dec
adc
popa
outsl
mov
sub
movsb
scas
or
nop
push
xchg
sub
mov
push
inc
sbb
dec
nop
jnp
add
sub
fwait
scas
shrl
outsb
xor
push
inc
and
xor
mov
cltd
inc
out
xchg
in
add
mov
test
fdivrl
mov
adcb
ret
in
xor
mov
addb
cmp
data16
test
in
je
stos
mov
push
inc
jl
add
aaa
iret
sbb
lea
fidivs
push
popf
lock
mov
cltd
push
or
dec
out
lods
shrb
mov
in
mov
pushf
arpl
and
xlat
sbbl
push
iret
lock
mov
cmpb
inc
popa
sub
push
mov
int
and
pop
std
test
mov
pop
sbb
or
js
icebp
push
push
cs
arpl
xchg
les
sub
setge
add
or
lcall
mov
insb
int
sbb
ss
jmp
jmp
lds
mov
hlt
movsl
xor
sub
mulps
cmp
std
insl
cmp
addr16
xor
and
mov
repz
fists
js
push
nop
insl
fstps
movsb
pop
xlat
jmp
movsl
or
pop
adc
or
lahf
xchg
jg
out
mov
sti
xchg
mov
xchg
xor
mov
loope
jns
iret
out
ds
iret
xor
xor
jo
ja
into
fmull
inc
xor
popa
test
jns
sti
into
mov
dec
mov
pop
bound
dec
std
add
mov
lret
sbbl
leave
pusha
add
adc
or
gs
jecxz
addr16
cwtl
syscall
adc
cmp
cmp
cmp
popf
testl
push
adc
test
adc
shrb
xor
push
jns
fmuls
or
add
push
pop
inc
and
jns
and
divl
push
jo
loopne
data16
fs
rcrl
lret
outsl
hlt
xchg
ljmp
inc
mov
push
xor
mov
fidivl
pushf
and
push
je
and
mov
push
xor
dec
daa
bound
and
pop
js
push
shll
add
xchg
mov
xchg
orl
sbb
hlt
loope
test
inc
int
dec
or
cwtl
jecxz
ds
loopne
dec
dec
pop
jae
jae
push
mov
dec
add
scas
add
data16
inc
daa
mov
inc
int3
out
lods
fnstsw
mov
and
aaa
mov
or
lea
pop
pop
and
add
movsl
out
in
sarl
outsl
inc
xlat
xchg
lods
and
push
lret
or
out
imul
jge
and
sbb
xor
lahf
or
es
aaa
pop
sahf
push
cwtl
sub
mov
call
cmp
adc
insl
mov
adc
es
jne
add
sub
or
fldenv
repnz
xchg
out
jg
cmpsl
push
pop
into
push
sub
repz
or
seto
jl
inc
stos
add
int
push
inc
jl
or
and
inc
xor
cmp
mov
je
inc
popf
stos
sti
xchg
mov
pusha
add
cmp
enter
pop
icebp
jle
push
out
sub
xor
push
xor
cwtl
and
rcrl
mov
mov
push
outsb
mov
adc
stc
push
addb
push
int3
bound
adc
pop
mov
dec
lahf
rcll
push
xchg
sbb
add
ds
add
fisubrl
jns
maskmovq
notl
addr16
fistpll
imul
insb
inc
repz
push
cwtl
pop
imul
mov
arpl
outsb
xchg
push
xchg
lods
push
arpl
push
jp
mov
jb
sahf
mov
aaa
add
jg
outsl
scas
jbe
test
idivl
aam
rcrl
sbb
mov
xor
and
lods
aas
fisubl
test
arpl
pusha
rclb
shlb
cmp
push
inc
sub
div
push
outsb
das
jae
int
or
movsl
jle
fisttpll
jnp
arpl
sbbl
xor
sbb
add
insl
outsb
das
inc
in
fildll
jns
movsb
mov
and
psubq
xor
leave
ljmp
pop
xor
xchg
dec
int3
jl
xchg
hlt
mov
jecxz
or
jns
sbb
and
roll
mov
or
and
and
mov
and
ljmp
es
inc
gs
lcall
dec
dec
popf
repnz
mov
clc
sarl
pop
add
and
cmp
mul
pop
add
add
test
xor
movsl
ljmp
imul
inc
in
enter
jae
outsl
mov
push
mov
xor
mov
mov
mov
in
mov
pushf
outsb
in
mov
push
or
mov
js
popa
inc
mov
test
daa
popl
test
js
mov
mov
test
inc
test
popa
jmp
mov
jbe
xchg
jnp
jne
aad
jo
ljmp
cmp
inc
push
addr16
movsb
xorl
cmp
fwait
or
outsb
dec
inc
pop
notb
aaa
pop
out
pop
jno
stos
adc
pop
outsl
xor
mov
xor
mov
mov
add
push
gs
clc
icebp
js
fstps
mov
int
mov
xchg
fadd
test
enter
pop
adc
lods
and
mov
jbe
xchg
pop
mov
mov
and
adc
dec
cld
mov
inc
mov
stos
xchg
mov
cmp
inc
lds
cmpsb
jnp
pusha
cs
stos
mov
ret
nop
pop
sti
jae
popf
xchg
mov
mov
or
mov
mov
sub
mov
mov
push
sti
xor
ds
sub
lods
push
sbb
push
mov
inc
rorl
std
sub
mov
mov
shr
xchg
lret
sbb
ljmp
rorb
cs
or
jo
cld
loop
sbb
cmp
int3
bound
sbb
sbb
cs
in
cld
jb
stc
push
cmp
insl
add
fwait
xor
ljmp
into
adc
popa
stc
jle
cmp
xchg
xor
mov
push
inc
in
test
push
pop
jp
int
stos
xor
jo
and
jns
andl
cmpsl
mov
fildll
sbb
data16
inc
or
out
lcall
or
mov
std
insb
outsl
mov
dec
lret
push
cmp
aas
push
dec
andb
and
sti
push
shrb
and
out
cltd
add
out
sbb
addl
fnsave
mov
xchg
repz
dec
enter
inc
out
xor
xchg
pushf
and
mov
pop
inc
xorl
leave
adc
aas
fistps
xor
stos
xor
aas
mov
lea
add
and
dec
jecxz
dec
cmp
jl
outsl
xchg
pusha
mov
fcomps
mov
iret
jb
lret
je
lods
xchg
call
sub
inc
adc
mov
dec
mov
fdivrs
test
mov
repnz
sbb
push
pop
xlat
out
fs
mov
or
push
les
mov
jbe
fadds
jnp
movsb
jle
ficomps
bound
aam
insl
loop
dec
mov
or
and
mov
add
cmp
xchg
mov
shr
push
ret
inc
pop
lret
cmpb
or
sahf
jle
adc
jbe
and
sub
inc
movb
leave
mov
stos
fisubrs
enter
sbb
add
xchg
push
pop
or
mov
xchg
cmp
pop
aaa
jge
test
mov
push
out
test
imul
dec
pop
and
ss
out
arpl
les
and
ret
inc
filds
imul
jle
mov
add
push
jmp
jp
in
aam
stos
xchg
jl
mov
lods
ss
and
pusha
adc
stos
cmp
fisubrs
dec
pop
in
pop
sahf
xor
xor
in
jp
push
ja
inc
call
push
out
int3
sbb
sub
adc
out
push
jecxz
mov
dec
mov
jmp
sub
mov
cwtl
xchg
movsl
lods
jg
dec
imul
insl
addl
mov
inc
jmp
jo
ja
jns
fists
clc
outsl
xor
cmp
jge
jp
mov
jmp
and
out
sbb
sahf
jns
inc
inc
mov
leave
into
jecxz
aam
or
orl
or
add
stos
sti
or
mov
pop
jle
stos
stos
jecxz
inc
ret
xorb
ficomps
adc
stc
lcall
neg
movsb
xchg
in
scas
jge
negb
and
loope
jo
cmp
repz
inc
mov
mov
fadds
adcb
jno
mov
jecxz
out
mov
fmuls
je
dec
aas
cmp
cmp
cmp
pop
cmc
loop
faddl
add
and
mov
sbb
iret
lea
in
loop
sub
mov
les
mov
push
mov
push
inc
mov
lahf
addl
lahf
stos
mov
or
jno
jmp
jo
and
loop
sub
mov
mov
outsl
mov
adc
push
inc
out
scas
push
aad
fnsave
loopne
aas
int3
leave
fnsave
push
adc
mov
push
jbe
sbbl
cmp
adc
xor
je
adc
aas
outsb
mov
push
jle
cli
pusha
xorl
lods
in
dec
xor
mov
sbb
cld
int
aam
insb
add
andl
add
add
add
xlat
out
adc
fistpl
push
rorb
cmpsl
repz
xchg
cmp
int3
fisttps
xor
pushf
push
psllq
int3
jb
jmp
mov
cmp
outsb
dec
pop
pop
mov
stc
or
mov
dec
and
dec
mov
sbb
mov
fisubl
aad
mov
orb
icebp
xchg
imul
stos
mov
ljmp
ds
scas
sbb
push
xor
sub
out
aam
pop
mov
push
aam
inc
xor
loopne
sub
sbb
mov
push
jae
je
lret
lods
imul
out
bound
xchg
cmc
dec
mov
mov
jb
push
std
in
adc
leave
int3
dec
sub
daa
or
xor
or
into
stc
or
xchg
mov
into
cmp
loop
cmp
into
inc
push
and
enter
mov
imulb
movsb
mov
cmp
push
int3
and
xchg
jb
jg
xchg
jo
test
lcall
mov
aam
xchg
lahf
into
loopne
cld
hlt
test
ja
add
mov
fsubr
add
imull
mov
daa
fisttpll
or
pop
decb
js
cld
mov
jecxz
xorl
loope
repnz
adc
inc
xchg
outsb
cmp
pop
cmpl
xor
jmp
lret
dec
pop
or
ret
adc
mov
movsb
data16
lret
movsb
push
cs
xchg
leave
nop
mov
add
jne
mov
jbe
pop
dec
rcrl
sti
movsl
or
ret
inc
add
dec
test
arpl
jns
into
ret
int
dec
les
enter
imul
lahf
adc
pop
sbb
xlat
dec
xor
in
mov
hlt
xchg
xor
pop
sahf
into
jge
add
jns
shll
aam
std
daa
xor
aaa
nop
pop
or
in
fiadds
stos
push
incb
cs
or
xchg
push
xorl
or
adc
imul
pop
dec
inc
mov
imul
xchg
dec
mov
lretw
lret
movsl
jp
mov
add
dec
stos
pop
imul
sbb
jne
xchg
shll
fstl
mov
and
shl
outsb
sub
xchg
out
ror
mov
sbb
jmp
push
adc
adc
ficoml
fcomps
cltd
mov
rclb
dec
push
sbb
out
and
sbb
and
mov
add
mov
mov
lds
shr
push
rorl
jnp
inc
mov
xor
scas
adc
shrb
insb
cmp
add
lods
mov
mov
addr16
int3
sti
insl
xor
sub
fst
in
jmp
dec
call
cli
xor
and
pop
fidivrl
rorl
jmp
mov
inc
xchg
lods
jp
and
adc
fwait
fs
sarl
inc
cltd
shl
or
jnp
xchg
lea
cmp
mov
out
dec
inc
inc
jle
inc
iret
mov
nop
sub
sbb
fcmovnb
mov
bound
in
insb
dec
inc
add
or
das
dec
mov
mov
int
dec
lods
xor
sbb
aas
add
push
cmpsb
push
in
movsb
mov
cmp
daa
das
push
mov
xor
dec
scas
pushf
cld
mov
push
lock
outsl
mov
xchg
loop
pop
nop
push
fdiv
xor
mov
push
movsl
movl
push
mov
or
es
mov
das
sbb
inc
hlt
lret
adc
mov
aad
adc
std
popf
lcall
loopne
jp
sub
loope
aaa
lds
lret
inc
popa
in
jmp
enter
jmp
and
inc
jnp
pusha
sti
flds
dec
jo
mov
push
adc
and
jo
movb
push
out
aam
xor
jne
stc
sbb
and
xor
dec
inc
sub
jle
ja,pt
pop
aam
pusha
push
adc
rorl
stos
lea
push
mov
mov
into
daa
jg
xorb
cli
cld
test
mov
or
add
or
imull
aas
in
cli
ret
xor
aas
ds
ljmp
mov
adc
sbb
enter
lds
or
jno
fidivs
test
loopne
ljmp
and
ret
jae
cmpl
pop
mov
fnstsw
xchg
ret
inc
int3
outsl
mov
out
dec
dec
push
cmp
mov
xchg
or
xor
cmpsl
xor
movsl
dec
fst
push
dec
sti
dec
mov
push
in
or
mov
hlt
adc
out
in
int
fwait
in
je
mov
shll
mov
inc
push
addr16
cmp
out
push
jmp
cmpsl
jmp
mov
repnz
mov
lret
sub
cltd
cmc
fcmovbe
fstps
js
mov
inc
hlt
int3
rdpmc
mov
pop
fstpt
into
movsl
sarb
mov
cmp
nop
ds
adc
cli
push
dec
test
push
xchg
add
fidivrl
push
clc
loop
sbb
xchg
inc
cli
das
mov
stos
xchg
and
loopne
lahf
and
insb
mov
out
push
int
jle
mov
orl
sub
scas
and
movsl
fs
jae
scas
and
and
fcoms
ds
push
scas
pop
and
or
ss
add
push
cmpsl
pop
jecxz
add
sarl
jb
jp
and
mov
jmp
shll
and
into
in
aas
call
xor
das
pop
mov
andb
push
lret
xchg
dec
mov
jge
int3
movsb
cmp
jl
gs
xor
xchg
or
xchg
cld
or
cmp
adc
shlb
in
lock
push
cmp
enter
sbb
cmp
sbb
ret
and
test
cmp
out
or
dec
cs
cmp
scas
test
hlt
scas
int
movsl
sbb
loope
popf
out
ret
popa
cmp
pop
leave
pushf
enter
dec
mov
cmp
fld
sub
xchg
cmp
cmc
lea
add
fidivrs
xchg
sub
cwtl
add
loope
aam
mov
push
push
arpl
xor
aaa
pop
std
cld
lahf
cmpsb
jbe
jp
or
jp
or
leave
aad
ret
not
pop
repz
mov
push
dec
fiaddl
les
pusha
mov
push
ds
insl
das
adc
mov
test
inc
lret
mov
cmp
add
test
push
insl
lcall
cwtl
mov
cmp
mov
decl
xlat
cs
iret
mov
lcall
test
dec
push
cmpsl
sub
aad
testl
cs
sbb
jb
cmpsl
shlb
add
push
inc
sbb
pop
fisubrs
jle
pop
shr
addb
or
dec
add
sbb
cmp
adc
lret
jne
in
out
or
test
std
mov
fwait
sbb
shrl
in
pop
pop
std
xchg
lods
test
mov
int3
cmp
lret
bound
sbb
pusha
nop
cli
jne
std
dec
and
mov
adc
pop
sbb
sbb
jne,pn
bound
addl
fwait
dec
ds
data16
pop
adc
sbb
cmp
shl
xchg
xorb
mov
out
cmp
fnstenv
push
mov
lock
shrl
test
cmp
inc
outsl
in
jecxz
aam
mov
imul
pop
test
repz
cmp
cld
mov
push
pop
mov
push
test
repz
sbb
mov
cli
inc
sbb
fdivs
jge
clc
xchg
adc
lock
hlt
addr16
adc
rcl
aam
jp
nop
lock
jl
cmp
ja
iret
jl
xor
or
xor
lret
push
ljmp
scas
rcl
sub
mov
add
jge
popf
dec
lods
xor
mov
loope
inc
mov
xchg
test
inc
pop
or
fisubrs
push
ja
fisttpl
or
test
and
mov
movsb
mov
pop
xor
insl
arpl
xor
inc
push
jecxz
imul
fistpl
xlat
xchg
cs
jb,pn
mov
rclb
xor
and
call
mov
pusha
push
scas
mov
pop
jle
mov
pop
icebp
mov
push
ds
fdivrl
out
pop
cwtl
scas
js
cwtl
test
cmp
mov
inc
inc
adc
xor
les
pop
adc
sbb
push
aad
xorl
scas
xchg
push
xchg
sub
rcll
insb
push
call
sar
es
in
in
mov
in
add
cmpsl
mov
pop
xchg
ja
dec
hlt
sub
sarb
pop
mov
push
mov
jb
pusha
pop
sbb
and
aad
stos
sbb
dec
or
or
sbb
int
xchg
sub
fistpl
mov
mov
rolb
movsl
ja
mov
xchg
xchg
sub
sbb
inc
clc
cld
sbb
pop
dec
popf
xor
mov
outsb
jns
icebp
inc
aam
inc
lock
js
lds
rorb
scas
xlat
pop
push
lods
pop
enter
push
ret
and
std
clc
adc
stos
mov
jbe
pop
pusha
aas
fnsave
or
cmc
sub
pop
into
shll
adc
aam
or
aam
lods
fistps
xor
nop
mov
push
fcomps
test
movsl
jmp
fisttpll
shlb
nop
rep
cmp
mov
test
aaa
mov
jecxz
mov
aam
and
jbe
ljmp
xlat
repnz
and
cmp
cmp
mov
shll
mov
mov
inc
ror
cmpsb
ja
popa
mov
xor
cli
cmp
or
mov
lods
aad
fidivs
dec
bound
mov
repnz
shlb
popf
mov
rorl
ljmp
mov
pop
sub
sub
arpl
int
sbb
es
mov
arpl
jg
nop
cmpsb
or
xchg
and
fadd
dec
and
test
cmc
rclb
or
adc
cld
sub
inc
mov
sub
xchg
lods
inc
into
cwtl
dec
mov
daa
mov
notl
mov
dec
ja
shrb
jb
lret
divl
inc
pushl
outsl
roll
pop
push
fs
sub
movsl
xlat
inc
add
dec
pop
repz
jge
sbb
pop
pop
push
jecxz
lahf
popw
hlt
xchg
and
adc
add
jge
xchg
out
popa
lcall
popa
jecxz
popa
aam
sub
mov
ljmp
ljmp
inc
pop
or
inc
sub
push
xchg
mov
enter
insl
fcmovnbe
insb
imull
xlat
ret
fdiv
sbb
cmp
mov
push
repz
jne
mov
adc
inc
stos
test
aas
fisttpll
or
dec
inc
call
adc
jmp
and
jo
lret
cmp
xchg
pop
shll
ds
mov
cmp
loop
stos
je
inc
push
xchg
lock
and
push
mov
ljmp
test
push
sti
ficomps
stos
push
icebp
fs
fistps
xorb
lods
adc
fbld
sub
mov
adc
adc
loop
lcall
out
in
mov
sub
xchg
mov
jmp
int
lret
sub
jg
andl
sub
scas
sub
jno
fidivs
push
std
sbb
mov
push
sub
js
fs
test
and
mov
or
outsb
sub
push
inc
lods
sti
jp
adc
mov
shl
or
ds
sbb
stc
aaa
dec
inc
dec
inc
adc
ds
outsl
mov
add
das
adc
push
and
xchg
add
ljmp
or
lret
rcll
ja
aas
push
jl
or
in
mov
ret
jecxz
test
pop
fisubl
push
add
fistpll
adc
add
enter
pop
mov
jmp
cmpsb
test
cwtl
cmp
inc
dec
mov
repz
leave
cmc
dec
popa
mov
add
les
mov
pusha
pushf
dec
addl
fs
cltd
movsb
fstpt
cmc
hlt
les
xchg
jb
addr16
adc
ss
lahf
add
xchg
jns
sti
roll
subps
stos
lahf
xchg
insb
inc
push
jp
sub
push
popa
sub
mov
xchg
pop
adc
jb
loope
cmc
in
dec
mov
adc
repnz
insl
and
mov
adc
dec
mov
sbb
push
pop
stos
jb
clc
jecxz
pop
add
xor
pop
mov
lret
cs
es
fcmovnbe
fs
sub
sbb
jp
stc
inc
fcomi
add
pop
cmp
dec
mov
xchg
in
popf
js
pop
adc
sti
mov
movsl
adc
dec
inc
push
in
push
lcall
mov
jp
adc
fimuls
daa
aaa
ret
push
test
cmp
and
fsubp
push
scas
outsb
lods
fs
inc
cs
call
dec
xchg
jecxz
aam
imul
cs
cltd
enter
stos
jmp
add
mov
test
addb
xchg
shll
scas
dec
mov
cli
and
inc
xor
jmp
sub
or
cmpsl
fsubrs
andb
and
sti
sbb
add
cmpsb
jle
push
mov
cs
movsl
ret
jecxz
call
xadd
lahf
les
int3
sub
adc
adc
mov
xchg
sub
or
xor
or
and
mov
lcall
jmp
mov
das
adc
mov
icebp
mov
cmp
cmpsl
push
push
addb
xchg
test
mov
inc
std
test
shrl
sub
js
arpl
dec
mov
scas
repnz
ret
clc
xchg
stc
pop
push
sbb
jnp
jecxz
jecxz
notl
insb
xchg
loope
lock
jecxz
jo
mov
jae
gs
fldt
clc
sbb
bound
xchg
mov
mov
outsb
mov
add
xor
in
lods
jno
pop
inc
popa
outsb
clc
lds
xor
ss
nop
jo
mov
nop
movlps
cltd
cs
cmc
jg
cmp
iret
dec
mov
loope,pt
push
sti
scas
mov
xchg
out
hlt
call
mov
inc
cld
sub
and
or
sub
mov
push
xchg
inc
cmp
cld
pop
lock
jb
add
shl
mov
sub
sarb
mov
xchg
sbb
pop
adc
mov
out
lret
xchg
jb
idivl
jp
sub
jmp
aam
cld
out
lahf
fists
lds
sbb
rorl
pop
arpl
shl
jmp
lods
icebp
test
gs
fnstenv
mov
jns
cmp
mov
dec
repnz
mov
subl
js
xchg
mov
lret
sub
mov
shlb
mov
cwtl
add
es
push
inc
fldcw
hlt
incl
fdivp
dec
or
outsl
cli
mov
mov
daa
int3
push
adcb
add
mov
sbb
mov
test
or
mov
in
out
sub
xor
pushf
roll
pusha
push
in
test
test
and
jnp
lcall
mov
aad
lcall
pop
cmp
dec
loope
pop
jno
loope
fcoms
inc
xchg
dec
mov
and
shlb
outsb
mov
mov
sbb
xor
push
pop
fldcw
inc
xchg
imul
loop
or
movsb
sahf
jp
mov
cmpsb
pop
shlb
add
mov
aas
mov
insb
bound
call
mov
into
in
into
cmp
lea
js
add
hlt
inc
popf
dec
popa
fs
in
outsl
and
xorl
dec
jle
fwait
sbb
xchg
xchg
push
or
and
or
sub
arpl
ficoms
dec
orb
and
clc
mov
sub
mov
ss
mov
aad
iret
mov
jnp
lds
lea
xor
pop
cmp
dec
jns
dec
fwait
mov
add
mov
and
pop
mov
sti
xor
mov
test
enter
inc
and
mov
ja
popf
push
ja
sahf
or
mov
cmp
and
and
leave
js
pop
rclb
int3
jl
arpl
or
popf
aaa
fiaddl
call
insb
stos
xor
jecxz
lds
jle
in
jb
mov
test
dec
mov
mov
ds
in
mov
sti
jmp
pop
lahf
sub
loopne
push
ja
es
pusha
daa
loop
xor
imul
dec
fwait
ljmp
dec
cmp
sub
scas
dec
mov
xor
jns
jg
lahf
and
int3
xlat
mov
jns
jecxz
gs
divl
sub
inc
int3
lcall
mov
dec
iret
pusha
loopne
popf
in
or
leave
jg
icebp
push
adc
push
lds
mov
push
mov
cli
inc
arpl
fadds
movsb
sbb
aam
sbb
pusha
xlat
jo
sbb
xchg
cmp
addr16
fisttps
cmp
test
push
mov
scas
add
out
mov
pop
pop
test
das
popa
int
scas
cltd
mov
pop
or
add
cltd
sti
dec
out
out
add
int3
lock
insl
cmpsb
push
arpl
push
mov
cmp
ror
lods
mov
sarb
jne
mov
xchg
test
mov
adcb
lcall
clc
jno
call
lea
or
test
adcb
push
dec
imul
lds
xchg
mov
mov
mov
add
push
addr16
adc
imul
push
xor
out
xor
push
aaa
mov
sbb
cmc
and
cmp
lcall
cmp
xor
dec
add
xchg
inc
bound
sbb
dec
xchg
mov
nop
push
hlt
adc
xchg
push
cmp
push
inc
cmp
cltd
pop
sub
repnz
divl
push
mov
pop
je
dec
mov
mov
cmp
shrl
sub
dec
xor
and
or
and
jge
xchg
or
call
dec
aas
dec
xor
sub
cmpsb
data16
je
testb
dec
scas
loope
add
mov
lea
mov
sbb
mov
jne
cmp
call
das
negl
jp
dec
adc
mov
or
in
push
adc
ds
jmp
shr
or
mov
xor
cmp
lahf
daa
out
pop
hlt
int3
mov
pushl
mov
jo
nopl
xor
std
clc
in
mov
lock
mov
testl
adc
inc
int
cmp
imul
xchg
shl
out
push
sub
pop
inc
fisttpll
inc
adc
pop
push
mov
mov
jno
lcall
xchg
adc
scas
scas
in
push
inc
sbb
mov
dec
cmp
inc
xchg
adc
les
push
adc
stos
stos
call
push
add
loope
xor
or
mov
or
loope
adc
sti
pop
ret
pushf
iret
mov
shlb
stos
or
jp
rcr
inc
shlb
pop
mov
jle
movsl
push
bound
push
sti
push
mov
negl
push
lods
push
aaa
sbb
cmp
dec
add
cmp
mov
inc
js
push
in
adc
dec
call
in
insb
or
test
push
lahf
and
in
fsubrs
nop
or
mov
sub
out
mov
daa
adc
push
lahf
push
test
int3
lcall
jns
ja
fnstsw
or
dec
mov
mov
das
inc
subb
xchg
imul
imul
repz
fnstenv
popf
dec
adc
dec
into
jmp
fwait
sbb
js
jae
stos
jb
push
xchg
push
mov
mov
repz
xchg
xor
cli
mov
jo
pop
stos
cmpsl
inc
or
inc
loope
push
lea
cli
cmp
inc
iret
xchg
xchg
jo
scas
mov
inc
push
flds
pop
call
sbb
cmp
aaa
movsl
and
cmc
jecxz
pcmpgtb
insl
dec
cmp
pop
or
or
cmpsl
cli
ret
out
dec
fdivp
pop
or
xlat
mov
stos
in
arpl
mov
iret
adc
push
sbb
xor
test
pop
lds
dec
loopne
xor
inc
int3
fcoml
pusha
shl
mov
inc
psubsb
push
inc
popf
in
sub
mov
dec
push
pop
ljmp
xchg
int
xchg
sub
jmp
mov
sbb
mov
loope
add
ret
add
push
push
ljmp
xchg
out
dec
mov
loop
adc
xlat
add
sub
dec
mov
aas
add
fldt
cmc
jo
jbe
out
outsl
pushf
mov
imul
arpl
hlt
hlt
out
add
shll
push
jg
add
incb
xlat
mov
push
inc
mov
mov
sbb
jmp
gs
ffree
in
xor
push
mov
mov
lea
mov
lods
mov
xchg
xchg
out
lock
stos
sub
pop
dec
hlt
sub
cs
lds
xor
push
mov
test
lods
mov
out
scas
push
pop
addr16
mov
inc
movb
out
xorb
les
arpl
xchg
mov
or
or
push
inc
mov
pushf
sub
pop
xor
test
add
ljmp
daa
push
ret
pop
das
push
aam
aaa
movl
outsl
and
pop
mull
pop
call
hlt
sub
aaa
mov
ficoms
andb
jb
adc
aas
fsubs
mov
clc
out
pop
xor
cmp
mov
sub
pop
pop
push
xorl
imul
mov
pushf
paddsw
xchg
loopne
mov
pusha
fsubrl
cmp
clc
test
mov
xlat
or
movsl
dec
outsb
pop
adc
cmp
or
shrl
int
nop
in
out
mov
popf
pop
lret
sub
adc
and
xchg
pushf
xchg
cmp
in
test
jb
scas
movsl
mov
test
mov
les
loope
lret
mov
hlt
sbb
rcrb
push
inc
sbbb
mov
mov
sbb
scas
pop
or
hlt
mov
aad
in
aaa
xchg
and
sbb
add
lods
in
dec
mov
out
jle
ja
dec
and
outsl
inc
mov
loop
or
insb
jl
push
subl
pop
jno
xchg
and
pop
pusha
push
arpl
pop
movsb
sub
ret
jno
std
and
mov
out
dec
leave
xor
sbb
xchg
mov
sub
rclb
lea
inc
fbld
in
stos
mov
out
xor
inc
or
or
fsubrl
pop
or
test
mov
cmp
lret
loop
xor
dec
mov
mov
xchg
or
je
movsb
lods
daa
add
mov
inc
cmc
push
mov
cmc
inc
cmp
test
leave
notb
sub
sbb
fistps
iret
aas
xchg
movsl
inc
xor
mov
mov
cmp
sbb
jmp
lret
ss
jae
or
imul
mov
add
idivb
test
bound
pop
fdivl
sub
jae
insl
aas
mov
icebp
dec
lods
push
mov
pop
gs
imul
callw
cld
stc
in
and
enter
add
call
cmpsb
arpl
jmp
pushf
sub
or
mov
in
mov
movsl
lahf
xor
mov
cmp
adc
push
dec
gs
iret
sbb
into
xor
testb
and
mov
scas
mov
mov
sbb
mov
mov
ss
gs
ret
fstpl
and
mov
and
in
test
scas
xor
rcr
test
mov
mov
add
mov
lahf
push
sbb
cs
insb
jo
leave
and
rcrl
push
mov
push
add
shrb
cmp
push
xchg
cltd
ja
ret
push
pop
cld
pop
push
js
pop
outsl
in
sbb
push
cli
adc
mov
pop
inc
repz
mov
jge
cmc
cmp
xchg
mov
mov
test
mov
inc
mov
mov
pop
leave
inc
int
and
lret
movsl
xchg
pop
fistl
data16
fbstp
push
jae
add
sub
shll
movsb
dec
push
or
lcall
lahf
dec
mov
mov
sbb
lret
cld
mov
popa
push
jecxz
ret
outsl
jnp
arpl
pusha
or
adc
out
dec
je
hlt
ss
mov
or
dec
loope
mov
call
xchg
daa
mov
adc
jno
xchg
int
or
xor
lret
fmull
push
dec
js
call
mov
pushf
dec
aam
jl
mov
and
jns
push
mov
out
lret
pop
xchg
outsl
cmp
roll
fs
add
fldt
cmpsb
lea
insb
int
shll
push
push
fcomps
insb
jnp
aad
lods
data16
scas
outsl
xchg
lcall
fists
or
and
xor
stos
lock
repz
cmc
incb
jecxz
movsb
les
mov
into
mov
out
xor
sbbb
cmpsb
jg
mov
jns
aam
mov
ret
ret
in
xchg
sub
cmp
sbb
xor
pop
leave
pushl
and
jnp
jae
ss
mov
sbb
lcall
mov
sbb
test
fwait
sbb
jae
ds
insb
aaa
push
fsubrs
outsl
andl
ret
mov
xchg
mov
and
repz
jo
inc
fidivrl
and
adc
outsl
dec
rcl
xor
ds
std
jbe
aas
loopne
mov
das
subb
fmull
push
aaa
sbb
outsb
ds
dec
cltd
dec
ds
fnstenv
xchg
test
ret
dec
sti
adc
dec
dec
jg
xchg
inc
dec
shrl
aad
outsb
out
jne
movsl
jmp
lock
jl
in
jo
test
cmp
add
adc
nop
shll
push
jmp
sub
das
inc
ret
cmp
cltd
lret
sub
jno
pop
pop
imul
cmp
pop
inc
cmp
cmpxchg
mov
out
fisttpl
leave
mov
outsb
enter
push
and
daa
rolb
or
addr16
cmp
adc
aas
lahf
rolb
jno
sbb
pop
sub
pop
jecxz
jmp
insl
pop
out
loopne
mov
sub
jmp
pusha
xchg
jp
dec
cli
inc
xchg
sub
or
out
pop
pop
divl
push
jg
mov
cmp
mov
pop
out
repz
pusha
inc
add
xor
xchg
and
jnp
inc
add
mov
dec
pop
xlat
dec
iret
out
arpl
fdivl
das
enter
push
sbb
movsl
xor
inc
leave
out
inc
insb
call
jo
jge
cli
jmp
xchg
lods
or
mov
or
push
clc
push
imul
add
andb
xor
movsl
mov
daa
movsb
out
adc
mov
cmp
pop
sti
jbe
ss
jecxz
mov
pop
negb
xchg
mov
lahf
out
pop
jnp
sub
inc
outsl
out
xchg
mov
jge
xor
and
aas
aam
fdivs
aas
and
mov
pop
scas
lahf
mov
xor
push
inc
icebp
int
cvtpi2ps
mov
bnd
pusha
jge
aas
in
inc
lret
sbb
arpl
lock
push
test
push
out
sub
les
mov
jmp
and
mov
jne
std
inc
scas
cmpsl
jp
gs
lock
popf
out
pop
xor
mov
imul
sub
jle
mov
jge
ss
insb
into
cmp
mov
mov
push
mov
int
jge,pt
rcrb
in
fwait
inc
mov
fidivl
loopne
mov
lock
pop
mov
pop
pop
mov
or
jbe
rolb
in
push
push
hlt
test
or
xchg
hlt
pop
jecxz
xchg
stc
cld
fs
pop
outsb
cmp
popa
fstpl
pushl
inc
xchg
and
xor
jecxz
inc
jnp
mov
cli
aaa
inc
pop
call
cltd
hlt
fbld
pop
arpl
push
mov
test
mov
rorb
test
stos
mull
iret
popa
add
outsl
sbb
shlb
and
lcall
cli
mov
sub
and
int3
pop
sub
adc
mov
and
in
cmp
jge
adc
lahf
mov
mov
imulb
sbb
push
pop
loopne
add
popa
das
cmp
cmp
mov
popf
stos
mov
lret
dec
push
dec
pop
add
ja
dec
movsl
or
dec
push
xchg
lcall
sub
sbb
repnz
xor
cmpl
and
mov
inc
and
and
les
insl
push
addr16
mov
lea
arpl
cli
mov
push
jl,pn
lea
dec
popa
push
add
dec
repz
stos
and
push
stc
cwtl
scas
fildl
xchg
movsb
inc
xchg
push
imul
pop
push
stos
cmp
lods
inc
sahf
jg
sub
ffreep
setl
mov
xchg
xchg
xchg
fistpl
mov
cs
add
jmp
cmp
imul
pop
xchg
and
cmp
adc
dec
pop
jnp
xor
pop
les
imul
cmp
mov
jnp
mov
insl
add
inc
nop
xor
pushl
lods
push
pushf
mov
xchg
lret
jmp
ss
movsl
pop
xlat
outsb
inc
add
mov
pop
inc
jo
lret
push
pop
hlt
or
cmpsl
sahf
imul
call
in
jo
mov
xor
ucomiss
jb
jae
fbld
mov
addr16
mov
mov
out
pop
xor
mov
push
aam
lods
mov
jb
imul
in
cld
sbb
push
dec
or
push
aam
jp
mov
ljmp
sub
mov
hlt
pop
add
push
adcb
dec
ror
aaa
test
out
shlb
rorb
or
test
ds
shrb
test
in
mov
insl
mov
pop
xchg
imul
dec
notb
push
stos
nop
dec
jmp
sbb
push
in
sbb
sbb
rcll
adc
jb
fidivrl
shrl
addr16
cmc
mov
and
out
xchg
inc
xor
mov
cltd
fwait
lcall
inc
fadds
mov
xor
cwtl
ss
jg
xchg
aas
insl
bnd
xchg
mov
out
fs
pushf
and
xchg
or
in
pusha
jnp
sti
in
neg
hlt
repz
mov
cmpl
js
ds
mov
or
in
das
call
pop
cmpsl
jg
insb
cltd
push
movsl
jae
xor
lcall
imul
aas
xchg
or
cmp
and
xor
add
jge
cmp
dec
in
adc
lds
push
push
xchg
ficoms
jo
sub
mov
shlb
mov
mov
adc
rcl
adcl
push
int
movsb
cmpsb
sbb
jnp
fldl
out
repz
inc
mov
or
dec
out
jne
jecxz
sti
jne
fisubrl
psrad
inc
fsubl
sub
mov
sub
inc
cs
xchg
lock
xor
sub
pop
rorl
mov
mov
mov
addr16
xchg
jo
push
popf
stos
mov
mov
fisubl
rcrl
lds
jecxz
mov
push
jns
test
xor
lea
jle
stos
pop
out
pop
adc
xorl
popf
xchg
mov
shr
add
and
lret
jle
sbb
jb
data16
xor
and
imul
mov
enter
lret
ficomps
arpl
push
push
int
hlt
cmp
imul
stc
pop
arpl
sub
mov
popa
ljmp
xchg
stos
push
cmpsb
xchg
xchg
scas
or
mov
inc
ret
xor
ret
pop
aam
stc
or
std
and
icebp
mov
pop
jecxz
stc
rcrb
ja
std
pop
sub
and
push
mov
in
push
lock
mov
repnz
mov
mov
add
mov
mov
sub
jle
jecxz
repnz
ja
aaa
insb
inc
jp
xor
jno
test
sbb
adc
xor
loop
out
aam
sti
cmp
or
ja
shl
push
lods
and
fldt
lea
lcall
mov
in
sarb
push
pop
pop
jno
xchg
mov
aam
stc
imul
pop
xor
mov
pop
adc
cld
mov
es
sahf
dec
push
in
lods
imul
lret
jo
sbb
push
aad
or
mov
repz
aas
fcoml
shl
insl
mov
inc
or
aas
push
adc
enter
addr16
mov
jecxz
test
or
lods
adc
xchg
jne
lea
lea
jg
cli
sbb
nop
cmpsb
mov
push
push
in
rorl
push
fwait
imul
imul
divb
inc
xor
xor
sbb
jbe
ficomps
test
mov
ljmp
xchg
cmp
fwait
rcll
jl
pop
lods
and
xlat
popf
pop
mov
sub
and
outsb
ljmp
leave
adc
sbb
test
fs
std
fsubl
pop
xchg
cmp
push
inc
jmp
mov
dec
xchg
push
insb
inc
xor
fldenv
daa
fistpl
ljmp
lock
cld
fcmovb
fcomi
into
push
adc
mov
stc
je
mov
xchg
lods
cltd
push
fimuls
pop
xor
push
mov
repnz
cwtl
shrl
mov
icebp
in
mov
cmpsl
push
loope
fwait
mov
pusha
pop
cmp
push
stos
xor
inc
and
insb
repnz
or
pmaxsw
or
sub
push
add
test
mov
mov
jne
outsb
jge
dec
jns
loop
and
shl
push
hlt
rolb
add
xchg
or
xchg
int3
sbb
xor
mov
pop
ja
xor
xchg
data16
lock
out
jl
jbe
fwait
rorb
cmp
dec
cmpsb
out
fadds
and
xor
jp
xlat
leave
jno
fsts
pop
dec
or
jl
mov
fidivrs
xchg
jl
out
jbe
and
cmc
inc
and
inc
into
add
sbb
mov
jg
jp
rcr
into
jne
mov
adc
je
sbb
cltd
lret
lahf
jns
fs
push
sbb
push
popf
adc
pushf
lods
push
inc
mov
in
adc
push
in
add
push
jecxz
pushf
sub
and
pop
std
fwait
sub
mov
inc
push
push
jle
lds
ja
mov
dec
shlb
xchg
pushf
aam
pop
mov
lock
pop
mov
test
dec
and
pop
fstl
push
hlt
lcall
push
xchg
xchg
mov
outsb
loopne
les
ss
pop
or
cltd
fidivrl
sbb
out
mov
cmc
dec
lret
dec
sti
push
imul
mov
jmp
pushl
enter
insl
adc
and
clc
ljmp
and
lea
dec
dec
fiadds
mov
push
xor
pop
sub
cmp
pop
fs
fisttpl
adc
xchg
ja
ja
popa
add
addl
cmpsb
sub
dec
and
mov
inc
mov
mov
stos
aaa
into
cld
sbb
imul
mov
aam
sub
mov
xor
std
adc
sub
stos
sahf
add
sub
dec
jmp
sub
mov
mov
mov
add
jb
loop
movsb
cmp
fld
and
and
jns
pop
aas
int
mov
repz
cli
out
xor
sbb
loope
notb
dec
out
lods
or
addr16
lds
sahf
dec
lcall
dec
xor
mov
push
jns
push
stos
ret
cld
xor
sub
out
fistps
test
scas
idivl
xor
bound
scas
pop
inc
clc
in
inc
jl
imul
lret
into
rolb
mulb
out
jp
test
mov
repz
ja
lods
xchg
in
pop
cmpl
push
imul
xor
test
pop
xor
in
in
mov
es
sub
jl
xlat
push
ljmp
push
add
out
stos
cmp
data16
test
out
dec
sbb
into
cmp
lods
fidivs
mov
shl
bound
movsb
std
je
rolb
lret
sub
xor
notb
adc
push
ret
pop
xchg
xor
decb
inc
cli
pop
daa
mov
and
pusha
xor
out
xorl
out
int
and
je
shl
push
loop
fisubrs
lret
add
dec
aad
push
and
cmpl
inc
iret
addb
mov
add
mov
stc
jg
fmuls
jp
adc
push
testb
dec
sub
mov
lahf
shlb
jo
xchg
sub
imul
sahf
insl
outsl
xor
add
xor
mov
repnz
and
and
and
dec
xor
mov
cwtl
negl
jge
sub
lret
or
add
mov
subb
repnz
sub
inc
xchg
shll
push
jl
cmpsb
mov
icebp
into
hlt
jg
loopne
mov
add
add
out
xlat
imul
outsl
shl
xor
mov
mov
pusha
jno
cmp
adc
mov
nop
jmp
mov
outsb
in
sub
stc
push
cwtl
mov
ret
shl
mov
in
mov
loop
inc
imull
adc
dec
imul
loope
enter
loop
push
push
inc
push
out
add
xor
pop
test
mov
stos
clc
movsl
push
cmpsb
and
fiaddl
jno
jbe
inc
outsb
dec
loope
inc
rcl
push
cmpsb
inc
leave
in
movsl
xchg
xchg
les
lret
inc
pusha
add
sbb
in
inc
and
add
pop
sub
xchg
icebp
frstor
movsl
test
xchg
cld
pop
jmp
sbb
add
sbb
enter
clc
nop
xor
cmpsl
xor
stos
mov
inc
sarl
mov
pop
sbb
xchg
cmp
cmp
lods
mov
mov
les
cltd
inc
jbe
lods
cmp
sbb
mov
fstpt
xchg
daa
push
pop
jl
add
fdivrl
mov
aad
mov
sub
and
lret
sbb
popa
cmp
add
movsl
sub
insl
daa
jg
je
xchg
or
cmp
and
testl
orb
push
stos
and
ljmp
sub
and
lret
pop
cmpsl
jo
pop
adc
insl
inc
sub
cmp
loop
cli
push
pop
fwait
lahf
and
in
scas
popa
or
mov
loopne
push
arpl
pop
xchg
mov
jp
jge
mov
hlt
xor
inc
inc
and
mov
repnz
clc
mov
cmp
mov
adc
arpl
mull
lods
lods
inc
movsb
push
js
inc
mov
ret
dec
mov
mov
pusha
lahf
fisubl
out
xchg
ret
xor
push
pusha
jnp
clc
pop
xchg
lea
mov
mov
flds
lahf
or
cmpb
imul
rorb
loop
mov
sbb
or
or
push
mov
and
inc
sub
mov
das
sbb
mov
sbb
out
dec
xor
xor
xlat
jne
push
rorl
test
int
push
or
iret
aaa
xor
js
cmpsl
shlb
xor
cmp
xchg
je
adc
jg
jno
add
test
int3
push
mov
mov
outsb
stos
xor
mov
and
sbb
pop
test
mov
xor
inc
push
lock
xchg
mov
and
sbb
in
ljmp
mov
rorb
repnz
mov
fsub
or
sbb
mov
mov
add
dec
cmp
test
aad
sti
cmpl
xor
jns
lcall
add
mov
pop
adc
xchg
mov
dec
push
bound
insb
add
cmc
mulb
jns
int3
in
fisttpll
sbb
das
cwtl
mov
into
pop
pop
shll
and
subb
ljmp
bound
cmp
fsubrl
xor
mov
sub
dec
adc
jmp
jmp
sub
aad
xlat
repnz
enter
push
aas
jb
or
out
pop
xor
cmpsl
jg
pop
shrb
shll
shlb
cld
loopne
push
xor
movsb
jecxz
xor
out
pop
out
outsl
les
call
inc
jo
mov
mov
pop
sbb
in
cmc
and
xchg
in
jnp
aam
jo
sbb
and
mov
jle
xor
mov
int3
arpl
pop
aad
pop
icebp
daa
lret
dec
out
lods
sub
push
dec
dec
cmp
jns
ss
das
mov
stos
rcrl
icebp
mov
push
lcall
mov
lahf
xchg
pop
jle
push
subb
or
test
push
jle
test
fwait
cmp
test
cmp
lods
inc
movsb
orl
sbb
and
push
and
push
sarl
ret
cltd
push
sub
push
xor
mov
xorl
mov
inc
mov
lods
push
repz
rcrb
ret
mov
or
adc
pop
adc
xchg
pop
fildll
sarl
movsl
mov
aam
out
add
ret
adc
js
stc
jo
into
out
loope
scas
cld
lods
jbe
pop
cwtl
xchg
xchg
std
out
out
sub
pop
add
inc
jo
stc
push
fisttps
add
lahf
mov
jb
cmp
lea
sbb
push
jnp
sarl
cltd
mov
aas
aas
repnz
pop
push
xor
test
inc
pop
aad
movsb
adc
insb
mov
jne
dec
xchg
adcl
inc
xor
pop
jns
addl
outsl
arpl
push
pop
mov
cmp
or
loop
int3
jmp
push
sbb
orb
sub
pop
mov
mov
lret
sub
jno
mov
lcall
adc
daa
insb
test
pop
ret
inc
inc
jp
dec
xlat
js
cs
psubd
push
adc
sub
jb
pop
sti
sbb
mov
lods
add
cmp
rorb
jp
mov
or
into
insl
xchg
adc
mov
in
mov
xor
in
arpl
pop
jp
push
call
push
dec
pop
idivb
je
icebp
mov
jnp
mov
outsb
fadds
inc
fistl
xlat
add
add
pop
add
jne
push
in
arpl
out
xor
mov
icebp
lcall
jecxz
mov
cwtl
movsl
mov
leave
xor
psrad
xor
push
cli
jecxz
or
sbb
bnd
inc
jae
jp
movsl
repz
fidivrl
dec
pop
ficoms
cmp
movsb
dec
add
sti
sub
jge
mov
mov
fistps
cmp
mov
loope
jno
push
leave
or
jno
movsl
ficoml
das
inc
inc
or
fidivl
mov
jae
inc
mov
cmc
aaa
out
dec
sarl
jae
xlat
stos
inc
mov
lret
cld
js
adc
aam
fildll
mov
xor
pop
sti
into
ljmp
inc
mov
dec
enter
scas
adc
scas
ds
sub
rcrb
push
stc
mov
dec
push
outsb
fcmovnbe
loop
sbb
lods
outsb
test
adc
arpl
fnstcw
add
fidivrs
loope
cmp
adc
push
ds
cmpsb
sbb
pusha
sub
sub
sub
sub
mov
ficompl
sbb
sub
pop
ljmp
pop
push
nop
imul
cmp
lock
in
mov
mov
mov
jl
add
sub
sub
pop
das
negl
mov
cmp
cmp
sub
repz
pop
insb
enter
jl
add
add
push
rol
inc
inc
aas
hlt
hlt
mov
mov
adc
jno
movsl
jnp
cltd
dec
in
inc
mov
arpl
push
fdivl
jle
test
and
add
adc
push
pop
xchg
divl
iret
sti
inc
fistl
hlt
mov
loopne
int
shl
test
push
mov
cmp
fsubs
in
mov
xor
mov
test
pop
xor
sub
jmp
movsb
pop
lret
cmpsb
dec
fnsave
repnz
iret
std
mov
jge
faddl
or
pop
pop
fcompp
mov
adc
lcall
sbbb
pop
mov
xchg
inc
adc
lret
inc
mov
sahf
dec
jl
and
mov
jg
lcall
sbb
mov
popf
shr
and
mov
jmp
es
adc
fdivrp
push
outsl
mov
out
sbb
subl
scas
jl
mov
jl
mov
int3
scas
addr16
or
sahf
cmp
mov
mov
xchg
sub
cmp
cmpsl
inc
pop
stos
mov
loopne
or
adc
mov
dec
out
sbb
lret
in
cli
insl
dec
xchg
das
mov
ficoml
ror
mov
lret
pop
push
dec
xchg
notb
and
iret
or
movsl
pop
and
push
cmp
mov
psllw
dec
cmp
les
or
stos
pop
ret
sub
xchg
inc
jle
mov
loop
int3
xlat
mov
or
dec
es
filds
rolb
shlb
pop
mov
adcb
mov
jle
aas
repz
into
into
test
or
mov
pop
jecxz
mov
mov
pop
lahf
jmp
imul
fs
je
jo
movsl
push
cmp
lahf
and
test
mov
pop
cmp
pop
dec
imul
stos
ja
pop
dec
out
adc
sbb
cmp
aad
pop
xorl
imul
inc
mov
jecxz
sbb
rorb
xchg
pusha
cmp
xchg
scas
push
inc
jo
sub
arpl
rclb
add
test
insb
cmp
shr
mull
sahf
mov
dec
push
inc
inc
sarl
inc
jl
sub
xchg
inc
adc
mov
adc
int3
stos
inc
inc
std
arpl
inc
and
mov
xchg
push
sbbl
test
adc
cwtl
or
cmpsl
shlb
sub
bound
xchg
sub
aas
jbe
sub
nop
adc
sub
popf
jg
and
jae
ret
fcomps
mov
add
cs
add
sub
inc
insb
addr16
stos
ror
add
xor
in
push
jl
popf
lods
aam
int3
scas
lret
and
fnsave
hlt
repnz
jno
test
cmpsl
aaa
fs
rolb
pushl
clc
lcall
stc
sar
subb
not
lret
dec
stc
je
mov
icebp
scas
pop
or
adc
insl
pop
adc
adc
xchg
pop
jns
add
pop
mov
cmp
ja
pushf
pop
insb
lds
icebp
lds
mov
bound
gs
push
inc
addr16
loope
inc
pushf
sub
movsl
popf
inc
inc
mov
in
popf
sub
gs
iret
add
popf
rclb
jnp
andb
jmp
sub
aad
pop
add
xlat
mov
or
mov
xchg
clc
jg
jns
loope
add
addr16
xchg
jb
push
testl
mov
pop
loop
inc
xor
dec
cli
and
addr16
adc
aam
shrb
ficoms
fimull
orb
ja
stos
dec
mov
daa
sbb
data16
jl
jg
sbb
pop
sahf
pop
jnp
sub
push
xchg
sub
sti
fmuls
lods
mov
cltd
clc
in
jg
es
adc
scas
push
sub
cld
mov
sub
and
mov
scas
addb
mov
or
pop
loopne
add
mov
cld
sbb
out
rolb
sub
dec
loop
mov
jge
fstps
lds
adc
movsl
movsb
repz
popa
mov
inc
sub
idivl
xchg
push
and
imul
push
xor
jo
lahf
out
test
fwait
mov
std
mov
loopne
filds
cmp
stos
call
sbb
mov
xchg
adc
in
pop
shlb
xchg
jl
cmp
subl
jge
rcrl
pop
or
adc
jge
cmp
jbe
ljmp
push
out
out
xlat
in
mov
add
jmp
arpl
mov
dec
imul
test
repnz
and
xchg
enter
and
outsl
mov
into
sub
addr16
idivl
inc
sti
in
jg
add
xchg
loope
mov
mov
cwtl
in
cmc
in
pop
popa
inc
cs
jge
pushf
jp
imul
gs
adc
cmpsl
bound
pop
and
jmp
lret
or
inc
fwait
pusha
pop
je
mov
cmp
mov
cmpsl
push
rorl
push
das
in
test
push
inc
sub
addr16
dec
xchg
shl
stc
cmc
ds
int3
xor
dec
pop
push
pop
push
ror
jns
aad
pop
sub
jb
insb
pop
andb
outsl
or
adc
inc
mov
sub
pushf
inc
mov
inc
jb
add
addb
cld
push
mov
pushf
out
insb
std
mov
jb
enter
es
repz
sbb
out
jne
ss
sbb
lret
clc
sbbb
xchg
xchg
or
ret
loopne
into
popa
sub
mov
lret
sbb
in
mov
rcr
or
mov
and
loop
jecxz
push
add
push
mov
cltd
mov
mov
mov
and
pop
xor
loopne
fildl
cmp
data16
pusha
cmp
test
or
pop
pop
xor
jle
mov
pop
mov
dec
jle
in
mov
stos
push
add
sbb
push
mov
lea
or
nop
or
push
mov
dec
out
movsb
dec
jo
cmp
and
in
add
xor
mov
shll
mov
sub
lret
sbb
and
mov
sti
or
hlt
imul
pop
out
lret
outsb
int3
mov
arpl
dec
cvtps2pi
inc
inc
jge
lahf
and
cmp
mov
aas
stos
cmp
mov
fisubl
iret
addb
gs
push
add
scas
add
jp
fisubs
mov
dec
lcall
out
sbb
jmp
mov
xchg
popf
addr16
sbb
movsl
cmp
aad
mov
add
sub
lret
mov
nop
or
imulb
imul
pushf
sub
push
iret
jno
int3
in
fidivrl
lea
jp
cwtl
dec
jmp
bound
push
pop
in
cmpsl
mov
dec
add
cmp
mov
xchg
sbb
icebp
mov
xor
mov
scas
cmpb
testl
int3
rcll
les
jnp
mov
mov
cmpsb
xor
fs
push
mov
mov
pop
jge
not
stos
andl
shll
inc
or
inc
fsts
sub
sbb
js
clc
jbe
mov
mov
push
cld
push
mov
jmp
adc
bound
inc
arpl
inc
adcb
mov
or
shlb
xor
mov
jb
cmpsl
jg
push
adc
je
shlb
adc
test
fildll
mov
ljmp
outsl
mov
fld
js
jle
shl
jnp
mov
jo
xchg
push
sar
lcall
sub
or
mov
out
or
rcll
leave
sarb
ret
pop
sarb
sti
sub
mov
int
insb
into
adc
add
push
xor
pop
gs
pop
lds
inc
sub
mov
jge
movsl
mov
mov
add
inc
jl
mov
sahf
jecxz
mov
cmc
lds
in
rol
push
mov
fadds
cmp
fldt
push
adc
addr16
jp
fistpll
rcl
imull
jae
out
enter
shlb
bound
dec
sarb
lods
or
push
rcrb
cmp
sub
cltd
sbb
push
leave
add
aad
shll
out
incl
push
fstps
inc
repnz
sub
flds
adc
xor
jl
xor
loop
sub
xor
xor
movl
pushw
cmp
pop
pop
xchg
in
sub
jmp
popl
popa
jae
daa
or
cwtl
pushf
ja
add
aas
jg
xlat
popa
mov
jle
cmp
mov
and
jmp
jo
aad
les
addr16
jae
clc
es
pop
int3
mov
dec
ds
stc
mov
mov
xchg
lock
add
lds
push
jns
ss
add
add
lods
das
jno
fldt
jno
add
push
jg
sbb
bound
mov
or
add
inc
cs
xchg
pop
stc
xor
pop
push
dec
sub
es
int
push
pop
cmp
fwait
sti
or
push
and
add
pop
and
nop
xchg
or
dec
je
mov
xchg
and
mov
xchg
mov
add
xor
aam
inc
in
and
push
sbb
jp
pop
icebp
cmpsl
adc
data16
in
pop
jo
xchg
ss
fwait
rcll
cmp
testl
sti
scas
push
ljmp
adc
lock
ret
adc
xor
jmp
ret
jb
mov
sbb
xchg
mov
aaa
inc
pop
add
shll
aam
lret
cwtl
push
xchg
out
subb
pop
cmp
mov
int3
notb
repnz
inc
pop
mov
mov
jns
and
inc
jnp
push
bound
mov
arpl
pop
pop
mov
je
inc
jo
sahf
std
xchg
aas
and
cmpsb
ret
subb
mov
or
aam
add
js
jns
dec
addr16
stc
pop
sbb
repnz
xchg
pop
sbb
pushf
xchg
int
outsl
jb
dec
push
dec
dec
xor
ljmp
mov
test
push
cmp
out
cmpb
rcl
adc
and
jno
and
add
popf
sub
cmc
mov
mov
int3
cmp
jns
mov
jecxz
mov
xchg
shlb
cli
pop
ffree
int3
push
mov
lods
dec
inc
aad
repnz
div
bound
jmp
sahf
das
shrl
mov
mov
test
sub
sub
xor
das
jmp
inc
leave
sti
lcall
jnp
xchg
outsb
mov
and
mov
adc
lods
pop
fiadds
or
lahf
jns
cmpsl
test
sarb
int
mov
int
loope
sub
mov
adc
lcall
ljmp
das
pop
pop
pop
push
inc
push
mov
repz
ds
sub
inc
mov
jb
xchg
mov
das
jo
out
lods
mov
mov
xor
push
insb
stos
sub
repz
jecxz
cmp
out
filds
adc
in
xlat
cmp
in
jo
stos
lds
xchg
pop
call
dec
dec
mov
adc
scas
in
mov
mov
mov
jb
pop
popa
xchg
sbb
fldcw
push
cmc
ret
xor
loopne
and
jge
into
aad
jae
daa
mov
dec
nop
lret
inc
jbe
test
adc
jg
call
movl
or
adc
mov
lret
sbb
cs
popa
out
in
jge
jg
mov
stc
movl
dec
mov
mov
mov
mov
rcrb
pop
dec
push
lret
mov
xlat
stc
push
xchg
adc
hlt
add
shrd
push
push
mov
movsl
mov
inc
push
push
xchg
jo,pt
lock
subl
adc
cmp
test
into
gs
and
cmp
int
test
cmpsb
lcall
mov
add
mov
xlat
fwait
shll
sbb
add
sub
dec
repnz
fcompl
dec
popf
or
inc
sbb
outsb
fmul
cmp
aaa
es
sahf
outsb
inc
shl
test
mov
test
or
loopne
mov
outsl
xor
pop
push
cmp
mov
out
pusha
sbb
push
jbe
nop
xchg
sahf
xor
inc
out
inc
mov
iret
sub
inc
test
das
outsb
scas
int3
dec
mov
loopne
sub
mov
sbb
cltd
mov
mov
hlt
xor
or
cmp
mov
fnop
popa
leave
fnsave
mov
mov
sub
mov
lret
inc
mov
sub
std
xchg
lahf
sahf
pop
int
cwtl
test
imulb
add
loop
ret
xor
inc
or
mov
out
jne
pop
sub
imul
neg
fwait
and
jne
mov
or
mov
and
das
test
cmpsl
ror
xchg
inc
aas
push
push
in
cmp
insl
int
mov
fimuls
dec
cmc
jae
cli
test
int
pop
jg
push
dec
das
pop
mov
xchg
mov
mov
shrl
dec
xor
in
nop
int
jbe
sub
push
in
inc
popl
outsb
test
jp
push
mov
mov
repz
adc
hlt
add
xchg
lock
push
or
scas
popa
int
add
cmp
cmp
push
jg
mov
cmpsb
pop
xchg
xlat
and
jb
nop
mov
gs
push
or
jo
insb
rorl
std
xor
ljmp
xchg
iret
jne
adc
xor
pop
fs
stos
xchg
jno
jge
xlat
jecxz
es
jmp
into
xchg
andl
mov
cmpsb
cmp
lea
cmovo
dec
push
lahf
sbb
shlb
loope
arpl
rcrl
add
push
sbb
add
adc
cld
test
cmp
arpl
push
jp
scas
loop
shll
and
mov
fnsave
ss
adc
jmp
adc
mov
inc
cmpsb
mov
inc
sbb
lret
mov
jp
shl
jmp
sbb
push
andl
and
stc
fcompl
fdivrl
imul
call
jbe
push
jmp
notb
cmp
popa
inc
and
daa
arpl
loopne
int
pusha
xchg
xchg
shrb
movsl
mov
pop
pop
sbb
cmp
outsl
inc
lea
or
aam
mov
out
cmp
dec
fs
mov
jl
repz
loope
push
add
sub
cltd
aaa
mov
inc
push
enter
dec
pop
shrl
push
shl
sbb
ret
adc
int
cmp
mov
ss
cmpsb
add
sarl
push
test
pop
xlat
sub
ret
xchg
insl
mov
sarl
icebp
lock
sub
push
mov
int
jl
aaa
sub
mov
ret
dec
add
subl
xchg
push
xor
jle
lahf
mov
mov
es
pop
pop
ljmp
push
jnp
in
sub
jno
mov
les
cmp
mov
cmpsl
mov
movsb
pushf
or
mov
pop
xchg
cmp
je
sub
cmpsb
inc
rsm
outsb
jg
sub
daa
mov
and
fcompl
imul
fdivrp
cmp
xchg
lret
mov
cmp
int
ret
movsl
xchg
lock
and
repnz
sub
jae
int
add
adcl
int
dec
rolb
mov
insl
pop
sub
paddsb
in
fstl
icebp
ljmp
repz
data16
pushf
bound
adc
push
xchg
add
call
add
jl
xchg
sbb
lds
ljmp
push
dec
inc
popa
mov
sbb
hlt
push
rorl
xchg
xor
mov
imul
push
adc
inc
xchg
push
icebp
loopne
mov
inc
xor
pop
test
fisubs
wrmsr
fcmovbe
es
enter
in
push
les
sub
scas
cmp
cld
arpl
jl
scas
mov
pop
and
push
sub
shlb
or
sbb
or
in
scas
ret
mov
xchg
aas
aam
or
jge
cmp
test
xor
std
pop
add
inc
sahf
mov
stos
and
aad
mov
es
hlt
neg
sub
mov
and
dec
sar
das
jnp
aad
out
sbb
clc
fstps
xor
cmp
ret
sub
xor
imul
jl
ss
es
mov
into
add
es
mov
jge
sub
mov
mov
add
enter
xchg
outsb
xchg
jmp
cmpsl
or
jnp
lea
out
aaa
mov
insb
inc
scas
jl
sbb
push
test
adc
cli
js
xor
lahf
inc
aad
repz
mov
or
stos
cmpsl
daa
sbbl
testl
push
add
lcall
dec
popf
mov
dec
imul
js
pusha
gs
leave
xchg
xchg
aas
pop
xor
jae
inc
push
lds
rep
jge
push
mov
loop
lret
add
push
dec
ss
pop
pop
in
adc
push
mov
popa
sbb
adc
push
sbb
push
cmp
pop
dec
aad
mov
addl
inc
mov
test
mov
and
pop
test
mov
mov
call
call
pop
lret
push
repnz
lcall
dec
add
adc
or
aas
iret
stos
fisttpll
mov
cli
mov
scas
fmuls
mov
ret
inc
clc
iret
idiv
mov
xchg
js
and
ss
xchg
je
shlb
add
loope
dec
mov
mov
pop
inc
and
sbb
loop
push
movsl
lahf
cwtl
sub
fcoms
out
inc
insb
adc
fs
jbe
fucompp
loope
sub
lods
dec
mov
es
xchg
sub
lret
or
inc
es
mov
pop
popl
rcll
mov
jg
js
in
mov
mov
mov
xchg
dec
lods
repnz
outsl
pop
push
push
jo
iret
jno
in
cmp
das
test
mov
xor
scas
push
lcall
jle
dec
pop
cmpsl
push
sbb
imul
nop
cmp
xchg
ds
leave
popf
pushf
fwait
stos
push
push
mov
cmp
adc
pop
movsb
mov
loop
mov
xor
mov
ss
pop
dec
mov
xchg
mov
jns
out
sbb
jg
jnp
push
addr16
mov
lods
mov
push
inc
cli
cltd
mov
push
mov
or
outsl
pop
aad
mov
mov
lcall
cmp
into
pop
rcll
pop
lret
outsl
fmul
or
outsl
outsb
mov
gs
cmp
lahf
and
adcl
dec
stc
ret
inc
ss
add
outsb
push
pushf
and
jne
movsb
outsl
popf
or
jbe
pop
adc
adc
adc
scas
incb
jge
outsl
in
sub
push
test
sarb
fmull
mov
adc
lods
ss
aas
pop
xchg
mov
mov
sbbl
out
cmpsl
sbb
mov
xor
pop
dec
xor
mov
mov
sti
push
jmp
aam
xor
shl
les
jmp
cmp
adc
mov
jge
xchg
out
add
pop
mov
jae
outsl
out
mov
repnz
test
test
xor
or
adc
jl
mov
and
gs
test
mov
fisubs
and
pop
ret
push
fcmovne
arpl
xchg
inc
sub
clc
cmp
les
adc
mov
popf
xchg
sub
jecxz
test
scas
sub
or
xor
jmp
out
dec
dec
int
icebp
aam
addl
dec
mov
jne
dec
je
mov
pop
sbb
mov
inc
mov
scas
or
adc
pusha
adc
pop
into
sbb
mov
mov
sbb
dec
mov
inc
inc
mov
aas
cmp
sbb
xchg
mov
insb
int3
cmp
and
sbb
pop
pop
or
stos
mov
andb
xchg
xchg
movsl
add
dec
sub
cwtl
push
mov
add
sarb
pop
cmp
cmp
xor
fisubs
inc
sub
inc
mov
sahf
les
andl
pop
cmp
ss
mov
outsl
lcall
push
fs
add
outsb
fnstcw
in
cltd
sbb
icebp
ss
xchg
int
jge
mov
dec
sbb
outsl
push
inc
add
push
test
leave
cmpsl
sar
push
or
pop
in
nop
push
imul
push
xchg
and
andb
sbb
outsl
cmp
and
filds
pushf
sub
mov
cs
jo
push
stos
testl
addl
inc
pusha
pop
sti
sbb
xchg
fistpl
xchg
daa
cmp
sub
test
mov
pop
fidivl
mov
jns
int
jnp
addr16
or
lret
add
cltd
push
mov
jmp
repz
mov
adc
pop
sub
sbb
jo
fnstsw
mov
xlat
jge
mov
scas
cli
icebp
or
sub
addr16
dec
ja
xor
pusha
dec
push
jno
pushf
lea
sbb
xchg
cwtl
lcall
add
ja
push
fnstsw
hlt
inc
and
adc
or
jns
ljmp
push
out
mov
sub
or
repz
xchg
jbe
orb
icebp
pusha
cltd
scas
lret
call
jo
cld
in
insb
xchg
repz
cmp
fisttpl
pop
cwtl
pop
cltd
std
and
dec
repnz
ret
rcrl
mov
clc
stc
fstl
fwait
jbe
mov
mov
and
push
dec
sub
movsb
jnp
sbb
mov
jno
mov
outsl
bound
fdivl
add
fimull
jge
jae
xor
roll
fstpt
lcall
adc
frstor
jl
xor
nop
cmp
pop
fildl
inc
gs
and
stc
jecxz
push
mov
fwait
stos
loop
mov
ja
pop
stos
add
mov
cmp
adc
sbb
lea
pop
stos
mov
ja
mov
hlt
cltd
addr16
mov
outsb
mov
inc
mov
aam
mov
sub
dec
mov
sub
pop
add
sarl
sbb
mov
inc
push
mov
sub
dec
jns
dec
xor
cmpsb
mov
pop
and
jl
vmread
push
cltd
jg
pop
lods
rolb
test
inc
loope,pt
mov
mov
xchg
faddl
or
pop
call
jp
inc
xor
push
fimull
std
orl
fucomi
iret
pop
outsl
rorb
aad
iret
dec
sti
dec
lods
push
call
notl
mov
add
or
jo
in
xor
andb
push
xchg
int
out
sti
lods
call
inc
fwait
add
jg
lock
ret
dec
test
bound
jg
mov
xchg
dec
bound
jo
imul
add
mov
jmp
add
sub
adc
cmc
push
or
push
pop
es
popf
mov
sbb
pusha
in
add
sbb
dec
test
popa
jg
dec
imul
sbb
nop
roll
mov
ret
sti
mov
mov
pop
mov
loopne
xchg
push
nop
adc
xor
mov
fs
dec
aas
mov
out
sub
jo
dec
sbb
lods
or
lds
pop
jb
mov
push
fldl
mov
je
ljmp
gs
repnz
in
cld
ficoms
test
insb
cmp
aad
mov
cmp
mov
movsl
cmp
push
dec
test
mov
out
push
sub
sbb
mov
and
fwait
mov
mov
mov
test
cmpsl
pop
push
add
jp
cwtl
rorb
mov
lret
movsl
scas
jns
or
in
rorb
incl
cmp
cld
cmpsl
mov
rcrb
stos
imul
inc
lea
aad
mov
or
and
stos
sbb
stc
sbb
xchg
fdivrs
or
ret
call
sub
hlt
sub
add
mov
daa
in
jno
dec
mov
add
xor
dec
rorb
mov
sub
push
outsb
sbb
pop
mov
sahf
aaa
push
inc
jp
gs
adc
lcall
enter
dec
rclb
mov
inc
das
jae
mov
mov
mov
cmpsl
fwait
push
ret
loop
clc
lea
mov
or
arpl
mov
jbe
xchg
aas
jo
addr16
stos
cmovnp
repz
scas
out
inc
sbb
push
mov
and
xchg
test
xchg
mov
mov
push
xchg
sti
sub
sbb
dec
iret
lea
dec
ja
sbb
adc
lock
ret
test
push
cli
cltd
inc
out
js
fcmovnb
mov
mov
sub
sti
mov
adc
movsb
xchg
xor
jns
sti
mull
test
outsl
in
cmpsl
in
mov
mov
scas
sbb
rorb
mov
dec
ficomps
dec
sub
outsb
push
and
in
test
or
dec
mov
pop
sub
sti
out
sub
and
popa
scas
shll
std
sahf
mov
or
rcrl
int3
pop
jg
mov
jb
nop
int
lcall
fwait
call
ljmp
pusha
rcrb
jbe
jno
inc
mov
mov
dec
out
adc
repnz
loope
fwait
jb
or
lds
sub
jo
sahf
loop
sbb
sbb
cld
scas
ficompl
les
jge
mov
jns
jnp
in
sub
adcl
popa
jne
dec
std
adc
sahf
popa
ret
jno
insl
dec
push
mov
rcrl
daa
pop
pop
lcall
cmp
mov
out
adc
sub
shl
jb
movsl
mov
push
out
daa
enter
cmp
movl
call
js
dec
dec
stos
std
xchg
cltd
mov
mov
inc
inc
jle
mov
mov
jnp
jne
out
cmp
icebp
pop
xor
push
fidivl
test
cmpsb
aas
jae
faddl
inc
in
cmpsb
jns
xchg
shll
cmp
mov
sarl
jge
inc
out
into
imul
sarb
mov
or
lahf
test
into
inc
lock
mov
xor
lahf
push
and
clc
lds
fimull
or
mov
sti
mov
addl
jne
leave
ret
stos
in
fists
cmp
cli
mov
outsb
int3
push
sbb
inc
jmp
loope
inc
lods
push
lret
or
cmp
or
push
insl
in
ja
sti
lock
insl
stc
cmp
std
dec
push
xlat
sbb
dec
sbb
xchg
fwait
mov
dec
mov
cmpsl
test
cmp
mov
xor
int3
mov
clc
xchg
filds
xchg
mov
add
sbb
or
add
push
in
inc
dec
pop
jae
pop
rclb
faddl
mov
pop
mov
test
mov
js
popf
adc
clc
cli
pop
and
cld
jbe
aas
lods
push
xchg
adc
es
sbb
loope
pop
enter
mov
jp
stc
jbe
ja
mov
cmc
xor
inc
scas
push
dec
scas
push
pop
addr16
ss
mov
out
inc
out
inc
pop
sub
inc
xchg
sbb
icebp
cmp
pushf
dec
push
jmp
das
sbb
xor
push
xor
xor
or
sub
int3
mov
mov
xor
xor
adc
stc
neg
pop
mov
hlt
dec
outsb
xlat
cld
out
push
mov
and
sub
test
adc
test
lahf
dec
xor
pop
repz
ljmp
dec
push
int3
imul
pop
and
loopne
jmp
mov
cltd
lret
push
mov
loope
mov
int3
arpl
mov
stc
inc
lret
jbe
mov
repnz
sub
or
ss
mov
push
int
test
into
lcall
add
pop
xchg
fs
and
jecxz
lods
mov
lahf
dec
inc
add
icebp
and
pushf
pop
data16
cmp
jl
mov
and
nopl
jbe
jae
dec
cmp
lcall
adc
aam
mov
adc
sti
loop
sarl
and
push
push
or
dec
or
jge
jo
in
push
or
lods
jae
iret
cld
in
repnz
es
lods
out
callw
pop
testb
gs
std
jb
mov
jle
pop
cs
jl
testl
lcall
pop
xchg
mov
incl
or
or
jbe
push
jp
push
dec
push
pop
mov
sbb
iret
outsl
jne
or
lret
sub
or
fcomps
imul
cmpsl
mov
jo
mov
pop
jmp
loope
dec
xor
fmuls
mov
and
sbbb
sub
stos
lahf
dec
pcmpeqw
xor
cmp
mov
int
cmp
adc
ffree
adc
mov
dec
mov
xchg
sub
imul
lea
jbe
andl
test
inc
sub
lods
lds
mov
cmp
push
dec
and
cwtl
dec
lock
inc
jnp
out
jo
test
aas
mov
sub
pop
pop
sbb
and
rol
jp
sbb
test
push
sub
xchg
inc
lock
push
in
xchg
inc
aad
or
xor
fwait
xchg
sbb
mov
leave
pop
pusha
dec
int
in
pop
sbb
mov
pushf
mov
notl
movl
stos
push
jno
lret
cltd
dec
add
push
sarb
call
mov
mov
mov
in
imul
mov
popa
pushf
xchg
rolb
jp
pop
enter
mov
scas
cli
nop
push
repnz
icebp
mov
cmp
arpl
ja
out
pusha
inc
xor
or
aaa
mov
push
mov
ret
pop
call
mov
ror
sar
adcb
xor
in
repnz
jae
push
pop
xchg
imul
push
xchg
adc
pop
lret
stos
mov
loop
cmp
sub
jne
mov
mov
inc
mov
and
push
mov
ret
stc
sub
xchg
icebp
cmpsb
inc
sub
add
mov
xchg
dec
fldt
add
adc
xor
jmp
in
repz
shrl
inc
pop
inc
mov
insb
mov
out
in
mov
sub
mov
mov
jmp
cmp
dec
cmp
popa
mov
push
jb
push
pop
mov
dec
add
xor
adc
hlt
fdivrl
and
cmpsb
xchg
daa
jg
stos
leave
and
mov
mov
cmp
mov
or
sub
adc
jl
push
and
push
push
push
repnz
xchg
sub
inc
adcl
in
xor
pop
push
xor
push
mov
or
pop
lods
mov
es
add
add
faddl
lods
add
int
ret
mov
add
pop
cmp
add
lock
or
lret
lea
and
sbb
mov
cwtl
pop
lea
and
mov
sub
push
outsb
out
inc
push
or
mov
adc
add
or
test
push
mov
fistl
cmp
test
insb
dec
xchg
mov
or
adc
lahf
pop
sub
aaa
nop
jae
mov
pushf
cmp
cld
pusha
push
je
or
rcll
push
std
xchg
mov
cmpsl
imul
add
notl
pop
addr16
fiadds
xchg
or
or
orb
adcl
lret
or
mov
cmp
lret
xorb
add
pop
sti
nop
out
mov
push
insb
sbb
xor
adc
xor
testb
lcall
sub
mulb
push
add
mov
loope
dec
push
shlb
fadds
movsbl
xor
fiaddl
jno
imulb
int3
lods
sub
xchg
movsl
lret
lods
icebp
outsb
scas
mov
std
mov
and
into
bound
push
or
dec
sub
rol
adc
js
jecxz
in
rcll
nop
fwait
xchg
cld
inc
jp
or
or
sub
add
adc
sti
xchg
loopne
add
ja
push
mov
push
stos
in
data16
aam
and
orb
pop
and
pop
add
add
mov
sbb
jp
scas
mov
and
out
mov
mov
push
sub
dec
mov
pop
mov
insb
push
sbb
mov
push
fbld
mov
pop
out
ret
pop
jae
jns
inc
push
pop
insb
out
inc
lret
inc
inc
fcmovnbe
push
sti
pop
xchg
and
stos
adc
pop
int
stos
mov
movsb
out
pop
mov
fldcw
popa
bound
std
imul
jae
and
mov
mov
xchg
dec
out
shlb
ja
push
lret
jg
int
mov
inc
pop
push
ds
mov
mull
push
lock
fsubl
and
push
dec
pop
repnz
negb
gs
insb
push
xchg
jge
xor
fucom
sbb
push
xlat
out
mov
bound
add
test
cmpsb
pop
adc
adc
fwait
sub
push
jle
push
pushf
mov
mov
push
sub
in
insb
test
xchg
xchg
xor
rcl
and
iret
xor
push
or
insl
loop
ja
xor
xor
pop
push
adc
pop
xchg
sarb
pop
scas
xlat
cmc
xchg
data16
push
sbb
insb
stos
inc
push
and
int3
adc
movsb
mov
ss
aaa
sub
sahf
call
movsb
std
fisubrs
insb
daa
das
mov
test
push
or
pop
mov
sarb
insb
popa
iret
out
outsb
shlb
cmp
fnsave
dec
sub
sbb
xor
inc
fidivl
ret
rcrl
push
jle
mov
lods
sub
push
int3
sub
in
sbb
js
fwait
and
and
outsb
das
lcall
ret
dec
fs
jmp
scas
dec
pop
adc
pop
insb
pop
loope
mov
jle
mov
xlat
ret
test
dec
lcall
bound
jp
outsb
dec
xchg
test
mov
dec
int3
sub
mov
cmp
shrb
mov
pop
mov
cmp
rolb
rcl
dec
xor
test
xor
jg
shlb
cmp
leave
and
mov
pushf
popa
aam
aaa
rorb
stos
pop
nop
and
inc
leave
and
push
roll
add
mov
fmul
jne
lret
xor
xor
aam
mov
xchg
sbb
jl
or
ret
mov
push
rorb
inc
popf
sahf
push
mov
lcall
out
and
pop
andnps
jbe
mov
adcb
int3
xor
fdivs
int3
pop
stc
jo
lock
push
sub
inc
xor
mov
xor
xchg
out
cwtl
mov
movsb
test
mov
test
outsb
dec
mov
adc
pop
test
ja
fsts
cmpsl
stos
jecxz
insl
ds
xlat
cmp
shr
jecxz
pop
sbb
hlt
in
jns
push
dec
sbb
ja
mov
lods
frstor
xchg
mov
and
mov
xlat
mov
xchg
sub
mov
adc
xchg
push
fwait
adc
js
stc
sbb
test
add
sub
jae
jl
push
mov
roll
push
xchg
inc
lret
insl
sbb
repz
mov
pushf
mov
sbb
and
and
adc
mov
mov
test
xchg
mov
in
jle
jne
movsl
xor
push
push
repnz
cltd
scas
arpl
aas
xchg
fcoml
inc
out
loop
gs
xchg
divb
push
mov
fidivs
insb
jp
push
arpl
sub
pop
inc
and
cli
pop
push
push
test
cmpsl
inc
mov
nop
xchg
fstps
push
add
inc
xchg
or
shrl
xor
or
jne
mov
xchg
cmp
mov
clc
sbb
push
inc
test
xchg
sbb
pop
add
nop
xchg
test
inc
in
loope
scas
pushf
jne
add
into
ja
ja
push
call
mov
movsl
adc
in
pop
xor
ret
or
shrl
mov
loop
ljmp
fdecstp
or
stos
je
push
inc
test
insl
push
incb
inc
js
cmpb
lret
push
mov
shrl
lds
in
movsl
popf
jle
mov
imul
test
adc
sarl
fwait
rcll
and
mov
push
inc
lret
lea
cmp
mov
lea
cmp
mov
push
add
sub
ljmp
and
cmp
cmp
stos
sub
ja
iret
int3
pop
es
mov
xor
jnp
cmpl
fildll
dec
in
outsl
mov
dec
cli
add
into
pop
push
add
push
mov
rcll
pop
sbb
jae
test
cmp
mov
push
sbb
mov
mov
adc
push
popa
aam
push
xor
push
mov
xchg
sbb
sbb
lea
sub
dec
daa
stos
sbb
sub
stos
and
test
lret
outsb
xor
jbe
ret
mov
shll
aad
cli
call
iret
inc
and
sub
mov
dec
adc
daa
pop
iret
fnsave
cwtl
inc
add
xor
andb
movsl
xlat
inc
fildll
push
jg
mov
repnz
adc
mov
mov
sbb
or
sti
loope
cld
lods
loopne
or
and
repnz
repnz
sbb
in
xchg
scas
xchg
jge
pop
jp
pop
add
cli
outsb
repnz
cmp
jecxz
xchg
popf
rcl
rcrb
adc
mov
dec
shlb
jbe
rolb
test
cltd
adc
push
xor
xchg
push
lea
es
mov
out
imul
mov
fbld
lods
or
mov
push
and
aaa
xchg
jns
dec
mov
fs
ljmp
jae
insb
jge
pop
fmuls
or
int3
aaa
xor
xor
loop
out
push
mov
sbb
arpl
in
movsl
out
lods
inc
pop
sbb
or
testl
int
mov
orl
xor
aas
mov
test
imull
aas
add
xor
ror
sub
lds
push
pop
ljmpw
pop
push
mov
es
into
adc
rclb
rol
mov
mov
push
lret
push
mov
out
inc
ljmp
adc
fcomps
repz
mov
mov
inc
pop
mov
faddl
push
movsl
mov
xor
aam
push
fdivl
lahf
push
sbb
push
repnz
fmuls
jmp
sbb
test
incb
adc
push
dec
or
pop
mov
push
cli
mov
push
loop
xor
mov
xor
pop
enter
dec
ds
aas
xchg
pop
mov
js
stos
loop
flds
adc
mov
cmp
mov
xor
xor
pop
ljmp
loope
jno
test
pop
or
cmp
adc
clc
jmp
test
ljmp
or
lds
imul
sbb
jmp
pop
pop
sarb
adc
std
pop
add
xchg
cmp
andl
int
cmc
outsl
gs
and
push
mov
jns
xchg
test
sub
mov
xorl
popa
adc
xor
rclb
sub
dec
adc
fcmovbe
sti
aas
mov
or
sbb
sbb
popa
fmull
das
mov
sbb
adc
sbb
popf
insl
add
and
cmpsw
push
call
shlb
pop
inc
aaa
fistl
inc
rcrl
and
lock
inc
ffree
jb
pop
bound
inc
add
mov
out
add
psubw
shlb
jae
jp
sarl
xchg
xor
add
mov
outsl
mov
jge
mov
mov
xor
imul
lods
mov
push
sub
or
sub
mov
out
loope
jecxz
lret
sub
cmp
mov
lods
fistps
leave
jg
or
popa
mov
mov
adc
rorl
pop
sub
loop
stos
or
mul
imul
ret
adc
in
popf
in
or
sub
cmp
lds
js
push
hlt
cld
adc
inc
push
dec
sti
pop
and
cli
movsl
popa
push
mov
sbb
inc
repz
out
xchg
int
in
fldenv
rorl
movsl
cmp
lea
mov
lea
pop
xchg
mov
dec
xchg
sub
sbb
mov
push
stos
shll
adc
mov
insb
insl
pop
dec
xchg
sar
stos
push
les
xchg
fwait
xor
sar
jne
mov
lock
test
xchg
aam
in
stos
pushf
lods
pop
fistpll
add
aam
rclb
mov
push
xchg
pop
mov
jg
xor
dec
lock
ss
cmp
or
pmullw
jmp
push
cli
jnp
xor
jge
nop
cmp
mov
add
std
mov
mov
mov
adc
orl
push
adc
jl
shlb
insb
fucompp
dec
mov
in
push
out
fcoml
je
lods
fsubrs
fsubs
ss
jle
imul
cmp
fsubl
push
loop
or
push
test
insl
jo
mov
and
test
pushf
mov
push
cmp
or
jecxz
movsl
out
adc
dec
scas
mov
and
loop
pop
dec
dec
ljmp
cs
sub
cmp
jnp
pop
mov
inc
push
jg
aaa
mov
inc
jns
jmp
xor
inc
adc
inc
adc
in
out
cmovl
lock
fcoms
cs
push
rcll
repz
push
xor
mov
fiaddl
pushf
adc
dec
decl
scas
out
fistpl
add
fsubrp
adc
orl
scas
xchg
cmpsl
and
idivb
sbb
mov
jb
insl
push
jp
cmp
sbb
or
inc
jmp
inc
loop
mov
or
sbb
gs
or
pop
or
aad
icebp
in
adc
inc
sub
out
popl
push
mov
push
sub
and
pop
fdivrs
nop
daa
or
test
or
jbe
ret
in
adc
jne
push
pop
out
in
rol
mov
pop
fs
sub
pop
fstpt
lcall
xchg
cmpsl
and
andl
jo
gs
jle
pop
jecxz
jecxz
cmp
fstpt
and
int3
pop
das
mov
adcb
popa
outsb
add
adc
popa
or
or
push
in
gs
popa
add
ja
xchg
into
jmp
lods
or
sub
xchg
add
add
outsl
xor
lods
aaa
add
add
inc
fninit
jns
pop
mov
gs
sub
pop
pusha
andb
out
mov
cmp
pop
cs
or
jge
movsl
adc
xor
and
xchg
leave
sti
cmp
je
testl
loopne
jg
shlb
outsb
stos
and
mov
test
daa
mov
jecxz
and
sbb
je
xchg
push
cmpsl
dec
mov
in
jmp
cmp
sub
aas
mov
push
xchg
push
mov
mov
pop
pop
cmpb
push
mov
push
dec
push
cmc
sahf
jg
pop
mov
sbb
loop
adc
inc
push
out
push
jp
xchg
or
and
cli
xchg
loop
repnz
roll
pop
push
fsub
xor
inc
movsl
adc
aam
mov
lahf
jns
inc
fsubl
mov
cld
push
sbb
aad
jae
cmp
add
pop
emms
insl
inc
mov
xchg
lcall
xchg
mov
jmp
and
sub
xchg
fcoms
sbb
imul
mov
sbb
mov
pop
dec
cmp
subb
xchg
fadd
or
ret
cld
mov
ljmp
cltd
jle
lods
stos
and
push
icebp
or
jmp
mov
stos
push
inc
xchg
xchg
jo
jno
lcall
pop
jns
cwtl
sbb
fwait
and
subl
inc
pusha
lods
xchg
xchg
dec
icebp
pop
in
pop
sbb
cmc
pop
or
pop
jp
pop
es
or
enter
pop
adc
data16
cmp
inc
aad
in
mov
and
test
pop
lods
in
ljmp
cmp
pop
mov
idivl
inc
lret
mov
ja
and
xchg
inc
fwait
lret
lcall
lods
mov
outsl
shrb
sub
dec
sar
mov
mov
fcoml
mov
sub
push
xor
mov
mov
pop
jne
jp
dec
pop
xor
out
xchg
sub
lds
mov
lret
aam
add
movsl
sub
jl
mov
jno
cli
mov
push
xchg
sub
push
roll
fs
arpl
pop
pop
jp
dec
adc
fnstenv
lock
adc
sbb
popf
jl
pop
mov
loop
push
cmpsb
mov
mov
popa
rolb
dec
sbb
bound
xor
out
xor
push
mov
sub
xchg
xlat
out
lds
xor
testl
mov
scas
movsb
mov
xor
dec
ds
dec
fdiv
aaa
jle
and
xchg
out
addr16
fsubp
stc
mov
mov
pusha
xor
aaa
lods
mov
jecxz
inc
xchg
fsubp
pmulhuw
cmp
imul
mov
std
jo
mov
test
aaa
cmc
jge
movsb
mov
sbb
repz
pop
pop
sti
or
lock
push
fwait
sbb
jb
aas
adc
fwait
and
dec
mov
and
repnz
or
daa
pushf
addl
cmc
mov
cld
and
inc
sbbb
lods
sub
lea
or
push
std
loope
mov
frndint
imul
fistpl
pop
pop
std
inc
shll
les
cmp
into
xlat
loop
inc
stc
aas
lret
push
cmp
xchg
and
hlt
push
inc
push
enter
dec
arpl
je
dec
xor
loop
cli
es
stos
adc
jns
xor
mov
push
movsl
pop
add
push
lods
test
repnz
dec
lock
rcrb
cmp
push
movsl
and
mov
sahf
push
cs
mov
shrl
pop
nop
adc
lahf
mov
push
outsl
dec
jge
aad
repnz
std
pop
cld
test
jge
ret
negl
sti
push
mov
sbb
xchg
adc
fnstsw
xor
mov
cmp
movsb
jnp
sbb
cmpsb
loop
cmpsb
jmp
mov
movsl
jmp
lods
fwait
add
dec
sbb
lods
sahf
adc
pop
movsl
add
pusha
decb
mov
bound
jno
popa
decb
ss
leave
and
inc
fwait
test
shlb
pop
adc
into
xchg
jle
adc
lock
lock
pusha
test
mov
and
enter
aad
popa
mov
mov
add
mov
add
sti
xchg
ds
testl
inc
push
push
lcall
add
jp
adc
jp
lock
pusha
xor
iret
jl
test
lret
jne
js
mov
imul
out
in
and
inc
fs
mov
pop
cltd
push
jg
add
or
sub
addr16
adc
andl
add
pop
shr
jns
test
xor
xchg
inc
xchg
cmpsl
jl
test
jle
bound
cmpsb
dec
ds
push
loopne
mov
push
mov
out
jo
sahf
sub
aas
addr16
call
out
dec
mov
mov
jg
and
sub
dec
xor
aaa
scas
sub
inc
jle
adc
xlat
push
sub
and
insb
mov
fiadds
or
mov
addr16
pop
adc
jne
out
sub
mov
aaa
rolb
inc
push
jp
inc
cmp
lcall
scas
iret
push
adc
imul
stos
push
shlb
cmp
nop
lcall
pushf
jns
pop
adc
rcrl
loop
and
mov
cltd
sbb
cmp
push
push
outsb
aad
jnp
arpl
jl
jecxz
fistps
push
lret
add
inc
jae
xchg
cmp
and
int
push
mov
popa
sahf
shl
ret
push
add
or
jne
xchg
pcmpeqw
lcall
fisttpll
or
leave
lahf
or
pop
sbb
add
les
jb
in
xchg
xor
aaa
dec
adc
pop
push
stos
into
cmp
xchg
push
sub
mov
pop
fwait
pop
ljmp
fadds
ss
jbe
xchg
cmp
insl
hlt
nop
inc
jb
aam
jle
sbb
mov
ret
dec
mov
jmp
mov
mov
inc
adc
lret
pop
pusha
int
and
outsl
outsl
subl
cmp
pop
push
nop
cmp
addl
add
pushf
fsubrl
lahf
rcr
loop
pop
mov
mov
push
scas
shlb
nop
cmc
movsl
sub
out
dec
outsl
mov
outsb
sub
jae
xor
xchg
pop
xchg
mov
aas
hlt
in
cwtl
aas
leave
cmp
jmp
sub
call
mov
jmp
js
pop
rcrb
stc
and
lods
cmp
repnz
lahf
inc
mov
lret
push
dec
jmp
jo
mov
jecxz
ss
movnti
mov
stos
jge
int
inc
loope
insb
es
out
scas
adc
mov
addl
mov
xor
out
push
pop
imul
jmp
in
mov
inc
incb
out
fldenv
fs
push
or
test
inc
mov
sbb
rcrl
adc
pop
jg
fldenv
fldcw
mov
out
out
push
clc
pop
xchg
xor
push
outsl
test
xchg
mov
scas
jae
lret
nop
aad
or
lcall
ret
fisttps
adc
sahf
jnp
jmp
jo
mov
aas
mov
stos
nop
jge
mov
xor
adc
sub
cltd
cmp
add
jp
rol
xor
test
inc
pop
ret
mov
mov
sub
scas
push
mov
dec
shlb
sub
jmp
sti
test
sbb
mov
sub
outsl
mov
sub
adc
cmp
cmp
pushf
nop
outsb
cmpsl
pop
cmpsl
popa
sub
xchg
or
cmp
xchg
push
je
adc
aam
cmp
push
in
push
fldl
popf
lcall
add
inc
mov
cmpsb
ds
mov
orb
scas
mov
ss
inc
jo
sahf
addl
and
xor
je
mov
jne
faddl
gs
push
pusha
push
xor
adc
cmp
jp
sub
cmpsb
add
insb
aam
and
lds
push
pop
lret
jmp
arpl
cs
addb
dec
sti
cli
inc
pop
call
iret
mov
push
imul
pop
mov
stos
adc
cmc
imul
lds
sub
insl
jle
cmp
cmp
sti
mov
in
insl
into
cmp
adc
movsl
imul
mov
shr
or
xchg
stos
sub
add
vminsd
mov
inc
xchg
ret
push
leave
out
cmp
xchg
shll
ret
movsb
xchg
lcall
inc
in
push
aad
add
push
cmp
dec
push
imul
loope
cmp
inc
je
out
dec
or
int
inc
test
pop
andl
insl
inc
inc
insl
mov
adc
add
dec
xor
into
xor
outsl
mov
in
jbe
mov
jns
dec
push
mov
sahf
add
gs
outsl
pop
mov
popl
jge
inc
ficoml
inc
pop
ljmp
cmp
scas
add
rol
mov
sti
dec
cmpb
testl
movsl
xchg
push
dec
repz
test
je
inc
jnp
dec
decl
into
jmp
mov
pop
dec
mov
lods
dec
adc
enter
mov
or
out
in
insb
lea
loopne
jp
cmp
adc
lahf
or
ret
je
mov
add
adc
enter
mov
add
je
jge
pop
sub
cmp
dec
ja
pop
push
repz
test
cmp
imul
add
enter
stc
dec
outsb
dec
adcb
cltd
out
inc
pushf
push
sbb
icebp
or
adc
arpl
lods
xchg
mov
ja
jne
and
and
mov
xor
mov
mov
ljmp
imul
je
pop
mov
fsubrs
in
repnz
pop
jp
js
pushl
inc
mov
sbb
leave
adc
jge
sub
lahf
outsl
inc
dec
mov
jl
mov
and
sub
lea
addr16
decb
cmc
pop
repz
xchg
jbe
popa
into
rclb
rep
add
inc
xlat
mov
jns
sub
push
adc
das
repnz
hlt
pusha
pop
das
ja
and
xchg
xor
out
rcl
mov
mov
shlb
loop
push
cmp
bound
jp
and
inc
or
push
dec
mov
mov
daa
das
sub
push
into
flds
sub
xor
mov
mov
push
push
jg
sbb
and
bound
daa
sarb
mov
lret
in
scas
jbe
outsl
je
jl
push
cmp
das
mov
sbbl
mov
add
adc
lock
dec
add
aam
es
inc
les
leave
inc
dec
push
insb
push
adc
sti
rcll
pop
cmpsb
repnz
jbe
mov
orb
mov
xor
roll
out
jo
mov
test
inc
sar
cmc
and
and
scas
lahf
addl
inc
cmp
lods
inc
jae
inc
xor
in
cmpsb
aam
fistl
ja
and
mov
mov
jl
cltd
inc
mov
mov
xchg
imulb
or
in
push
xor
jne
jge
popa
sbb
push
flds
cmpsl
lahf
lcall
and
mov
neg
movsl
jecxz
jp
frstor
xchg
xlat
fwait
mov
fiadds
xlat
mov
cmp
sbb
mov
sbb
and
cmp
shlb
neg
hlt
adc
lods
les
loop
adc
ds
fs
sbb
dec
mov
or
adc
rolb
popf
sbb
mov
cmpsb
enter
sub
mov
or
inc
and
xorl
fiadds
jb
dec
lmsw
mov
rcl
cmp
inc
ret
pop
out
js
inc
cmp
or
mov
xchg
cmp
cmp
mov
push
into
rolb
in
scas
pop
add
repz
enter
scas
jne
add
ret
mov
dec
jmp
pop
lahf
add
call
outsb
or
popa
outsl
in
mov
adc
xor
aaa
adc
scas
and
fdivrl
fcompl
cmp
stc
mov
and
or
inc
mov
cmpsb
fdiv
push
mov
xor
ljmp
lret
out
pop
call
pop
sbb
fildl
fucomip
test
push
ja
mov
test
std
jnp
cmp
pushf
dec
popa
push
mov
mull
ret
stos
lds
pusha
inc
ljmp
jge
push
push
xor
pushf
test
xchg
scas
cld
dec
aam
xor
test
inc
pop
xor
inc
hlt
add
pop
pop
jne
sbb
outsl
push
lret
ja
xchg
aam
jmp
out
pxor
je
or
adc
mov
adc
sbb
out
pop
aas
adc
mov
or
and
adc
je
enter
flds
test
push
push
dec
and
xor
stos
or
cmp
fistpl
or
mov
sti
sbb
movsb
das
jb
jle
cli
data16
mov
sbb
mov
xchg
test
sbb
cwtl
clc
pop
lods
jne
push
jmp
dec
shl
pop
sbb
inc
jno
adc
and
arpl
dec
cmp
cmc
cmp
pop
mov
xor
adc
mov
mov
dec
inc
stos
mov
aad
lahf
mov
xchg
pop
sahf
push
xchg
xor
xchg
in
mov
jo
push
pop
aas
into
push
mov
mov
pop
add
and
mov
bnd
mov
mov
inc
mov
cwtl
push
mull
inc
mov
pop
pop
push
sbb
stos
xchg
in
lds
sub
mov
jmp
shl
ret
push
out
add
push
sbb
jl
push
mov
pushf
dec
mov
icebp
jmp
xor
stos
inc
scas
stos
rcrb
lock
or
add
sbbl
enter
jmp
stos
push
or
xchg
iret
pop
popa
push
cmp
inc
mov
jmp
mov
fldcw
dec
nop
fadds
hlt
pop
mov
in
enter
sbb
decb
or
dec
loop
add
push
mov
inc
mov
cmpsb
adc
andb
rorl
test
cmc
rcll
or
rcll
jb
insb
sub
ljmp
mov
xchg
lods
jno
cld
or
cmc
sbb
push
inc
inc
insb
xchg
pop
iret
rolb
inc
dec
pop
rolb
popf
rclb
mov
inc
and
xchg
push
movsl
cmpsb
cld
fwait
cmpl
mov
fistpl
xchg
test
sbb
es
movsl
xchg
int3
shll
xor
aad
xchg
mov
xor
pop
cmp
aad
xchg
mov
int
lods
push
or
imulb
cmp
add
sbb
outsb
or
jns
int3
jns
test
testb
push
add
inc
fmul
imul
enter
shll
nop
aad
lret
cmpl
aad
cmc
clc
aaa
loopne
sub
mov
test
fwait
or
inc
mov
mov
fcmovb
mov
or
mov
push
ret
jbe
lret
cld
jmp
ret
in
mov
add
rcr
lock
add
fwait
and
pushf
into
add
stos
push
and
sub
adc
mov
enter
psrad
push
in
mov
jb
insl
push
adc
mov
rcrl
and
push
fstpl
loopne
push
dec
or
cmp
cmp
sbb
scas
cld
xchg
xor
nop
mov
cmp
stc
add
sti
fucomp
adc
lds
pusha
imul
push
or
sarb
jecxz
sbb
sbb
or
pop
adc
ficomps
fs
clc
ficompl
aaa
das
ret
or
iret
test
sbb
shr
jmp
mov
mov
xlat
in
loop
popf
or
mov
xor
ds
call
mov
cli
xchg
les
push
rolb
xchg
movb
pop
and
leave
out
psubsb
mov
es
insl
add
sti
pop
cmp
add
ret
js
lods
lret
or
push
push
rcl
inc
jbe
or
push
pop
clc
xchg
dec
push
faddl
xor
xchg
ss
out
fadd
cmpl
jl
jnp
inc
lcall
and
fnstcw
arpl
push
mov
cmpsl
xor
inc
fsubrl
jae
movsl
ficomps
and
outsb
addr16
dec
cltd
or
jne
faddl
dec
xor
jg
test
pusha
hlt
sub
pop
pop
dec
je
xor
and
lret
popa
fadds
adc
arpl
mov
je
push
mov
push
push
xor
lret
xchg
push
or
dec
fnstenv
fisubrl
push
lcall
cli
insb
scas
cmp
mov
cmp
ret
scas
or
repnz
dec
outsb
call
mov
outsl
aam
push
shrl
into
mov
or
sub
sti
dec
lret
inc
add
lods
std
pop
fwait
loop
das
and
mov
out
ficoms
cmp
jge
and
rorb
pop
fldt
int3
push
cmp
jmp
push
inc
gs
xchg
lods
imull
out
das
push
lea
out
push
test
xchg
adc
sahf
or
jne
cltd
ss
dec
out
xlat
in
and
inc
js
mov
inc
xchg
jp
dec
lret
in
ret
pop
in
lods
mov
out
sub
ja
popf
loopne
outsb
inc
pop
jmp
inc
loope
fildl
dec
out
test
push
dec
call
push
cli
jne
xor
push
inc
movsl
test
ds
mov
jno
cmp
outsl
pushf
ss
inc
fcomp
mov
jbe,pn
ret
pusha
cli
out
pop
iret
aam
roll
stos
aad
test
push
rolb
subl
xchg
insb
in
mov
ret
inc
pop
mov
sub
xchg
or
ret
mov
ss
aam
push
negl
mov
jmp
cli
xor
pop
fwait
mov
loopne
sub
add
imul
arpl
iret
xlat
sub
push
aas
jmp
mov
sahf
add
int
push
cmp
mov
rolb
or
adc
inc
outsb
mov
shll
mov
mov
mov
repnz
add
xchg
cmp
icebp
sarb
pop
es
add
sahf
xor
mov
add
adc
fistpl
sarl
daa
mov
jle
test
pop
add
mov
push
testb
dec
push
mov
xor
mov
mov
outsl
push
adc
pushf
inc
pusha
mov
mov
cwtl
lret
imul
loopne
xchg
shll
imul
fistpl
fst
mov
iret
add
mov
repz
xor
shl
clc
std
int
je
sbb
std
cltd
je
sbb
jle
fcomps
sub
bnd
cwtl
lods
pop
dec
dec
pop
add
add
sub
shll
sub
mov
insl
dec
inc
lods
pop
lret
mov
mov
xor
loop
sbb
mov
aad
repz
xchg
cmp
in
inc
xchg
cltd
out
sti
add
test
add
scas
pop
dec
adc
popf
mov
or
inc
pop
mov
adc
or
jp
fucom
lret
pushl
push
cltd
enter
loopne
push
repz
stos
push
mov
dec
add
movsb
popa
jns
push
push
in
fmull
bound
in
mov
scas
pop
sbb
or
movsl
ja
mulps
xchg
jp
inc
test
adc
addr16
fs
out
fnstcw
sub
sbb
mov
je
pop
sarl
out
push
push
jo
data16
push
or
fcomps
sub
popa
sub
sub
fwait
mov
movsb
repz
jp
popf
add
jbe
push
mov
push
xchg
xor
sbb
inc
sti
push
mov
dec
test
xchg
push
mov
ret
mov
dec
push
push
mov
add
and
dec
imul
xchg
sbb
sub
xchg
int
test
dec
inc
add
mov
jo
xlat
xor
jge
dec
lock
sbb
or
iret
insb
jle
push
pop
sbb
jle
shlb
adc
pop
cmp
cmc
fsubs
pop
out
mov
adc
aaa
cmp
mov
mov
loopne
movsl
push
outsb
in
dec
test
pop
test
xchg
sub
inc
es
adc
stc
inc
mov
aaa
je
outsl
add
pop
mov
pop
lds
mov
data16
addr16
pop
in
jecxz
and
xchg
lock
inc
pop
and
pop
ret
push
lods
and
dec
cs
lods
fcomip
pop
lahf
sub
cmp
cwtl
mov
xchg
rcr
inc
repz
cwtl
sub
roll
adc
add
mov
jmp
adc
aas
mov
sbb
jns
aas
pop
mov
mov
or
stos
mov
mov
imul
jge
jle
jb
jecxz
adc
jno
add
mov
cld
mov
cmc
mov
inc
xchg
icebp
push
jmp
mov
loopne
mov
and
cmc
pop
leave
fldt
test
stos
xchg
clc
sti
shl
add
stos
in
jle
dec
cmp
gs
sti
cltd
js
cmpsb
sub
popa
shl
mov
xchg
push
sbb
les
rorb
enter
rol
sub
cmpl
push
or
aad
push
add
mov
int3
std
subl
or
in
jl
js
lret
inc
mull
mov
addr16
dec
and
mov
test
call
or
pushf
fildll
stc
ficoml
mov
ja
mov
sub
in
sub
dec
push
lcall
inc
mov
stos
lret
outsl
lea
aas
pop
gs
push
jb,pt
movsl
sarb
sbb
int3
sbb
dec
mov
or
test
fnsave
or
pop
push
jle
sub
dec
mov
ljmp
sub
std
sbb
sub
andb
mov
mov
xchg
frstor
fcmovu
rorl
arpl
mov
fcmovbe
pop
test
mov
add
push
test
or
or
mov
add
lods
push
hlt
sbb
inc
cli
dec
mov
int
add
fisttpll
xchg
icebp
push
fildll
dec
push
add
fdivrl
sub
fldcw
lcall
cmp
inc
pop
test
inc
stc
lea
inc
mov
or
push
fwait
mov
dec
push
jnp
iret
mov
lea
insl
dec
cmp
push
loopne
sbb
mov
mov
test
cmp
fxch
cld
stos
mov
fwait
je
push
xchg
ret
mov
fs
jns
cmc
and
lea
insb
out
popf
pop
mov
xlat
and
je
mov
sbb
ret
jl
fsub
push
test
nop
sub
push
mov
push
lods
jns
pop
hlt
fst
mov
add
xchg
mov
adc
add
insl
pop
leave
push
out
js
int
movsl
pushf
sbb
inc
insl
repnz
popf
pop
cmp
test
test
clc
data16
ja
push
lret
sub
out
pop
loope
jae
mov
or
jne
pop
fdivrs
data16
fsubrs
out
test
rorb
cli
fsubrs
scas
jp
xchg
mov
test
leave
jecxz
out
mov
sar
das
and
decl
mov
insl
add
nop
xor
mov
mov
fincstp
int
or
push
les
mov
shll
and
jecxz,pn
das
cmpsb
dec
push
call
insb
dec
fldenv
repnz
scas
xor
and
out
adc
sbb
hlt
push
cltd
das
pop
cmp
out
cld
push
fwait
jnp
xor
gs
ret
add
in
push
ds
loope
or
hlt
je
sub
movsb
lahf
dec
dec
dec
nop
and
xor
movsb
push
ds
mov
lahf
mov
sub
jne
aam
cli
fisttpl
adc
dec
scas
loop
xlat
or
in
mov
out
pop
and
cmpsb
fmuls
popa
pushf
sbb
imul
fdivrl
int
dec
jp
xor
cli
push
movsb
int3
lock
cmpsb
jp
shlb
pop
aas
mov
jecxz
cld
cmp
cmp
mov
int
cmpsl
out
pop
mov
js
dec
loope
dec
scas
cmp
push
push
int3
loop
xchg
jl
enter
popa
jo
add
pushl
xchg
push
or
dec
negb
in
ret
loop
dec
jbe
mov
mov
dec
xchg
dec
mov
add
loop
adcl
int3
addr16
pop
mov
dec
pop
inc
pop
gs
fdivs
sbb
insl
cmpsb
push
aad
adc
xchg
sub
jnp
inc
lea
sbb
add
dec
or
and
and
dec
and
xlat
pop
test
sub
loopne
out
pop
xchg
cmc
cmp
pusha
popf
shlb
jge
decb
in
clc
push
mov
mov
cmpsl
repz
jmp
mov
shll
inc
and
decb
fwait
mov
inc
jnp
mov
and
jg
neg
sti
sub
sbb
push
adc
push
scas
andps
hlt
sbb
pop
aad
movsl
xor
sbb
sub
lds
aam
ss
mov
and
push
adc
inc
mov
jbe
out
lock
dec
aaa
repz
mov
mov
mov
xchg
jne
test
jne
aaa
cmp
mov
mov
xor
cmp
jne
fwait
outsb
xor
fnstsw
pop
pusha
xor
adc
push
lret
xchg
loop
cmpsb
xlat
aaa
int3
mov
jb
fidivs
cs
pop
jge
dec
push
arpl
cli
pushl
mov
fdivrl
out
lods
pop
push
or
out
mov
sub
addl
outsl
mov
loope
nop
or
test
push
jecxz
sbb
loope
and
in
xor
ret
mov
icebp
out
in
and
in
fwait
das
mov
leave
ret
lods
and
push
mov
test
ret
and
iret
dec
sub
jns
addb
mov
loop
mov
push
rorb
inc
ret
gs
sbbb
jo
pusha
dec
shrb
jl
dec
loop
test
sbb
xor
dec
pusha
es
clc
cli
aad
cmp
push
inc
jne
push
ret
clc
jo
lock
sbbb
out
stos
mov
fs
lods
fwait
call
sbb
cmp
arpl
xchg
arpl
jl
lcall
jmp
loop
inc
lods
popa
mov
mov
inc
xchg
or
orb
enter
jg
push
ds
adc
adc
xlat
mov
imul
imul
jle
loop
aam
loopne,pt
icebp
lods
data16
movsb
sbb
ret
jb
je
sbb
cmp
mov
stos
jmp
adc
test
inc
gs
rcll
jns
xchg
adc
cmp
in
lret
mov
jbe
mov
js
and
out
mov
sahf
xlat
div
lret
inc
xchg
pop
adc
dec
add
adc
rorb
inc
sbb
dec
mov
jg
sbb
pusha
into
and
in
inc
fsubs
cmp
mov
xchg
pop
ljmp
or
inc
push
xor
push
adc
gs
xor
pushf
iret
cmpsb
fistpl
jns
shl
imul
cmp
or
rorb
pop
or
pop
inc
and
out
jne
cs
mov
lret
dec
movsl
jg
stos
jp
les
in
outsl
cli
push
xchg
test
push
pop
call
sbbb
flds
ret
dec
aad
loopne
dec
xchg
mov
insb
xor
cld
pop
add
rcr
jae
xchg
or
out
lcall
ljmp
dec
stc
jle
inc
xor
push
pop
imul
mov
fmul
mov
imul
incl
outsl
lcall
fdiv
movsl
mov
in
xchg
jl
and
movsb
insb
es
sub
mov
outsb
int3
std
mov
inc
push
lods
jg
xor
jne
lea
pop
sbb
dec
add
in
dec
add
aaa
fwait
cmp
popf
jns
and
or
adc
mov
jle
pop
jmp
andl
lods
out
in
pop
mov
jmp
mov
fisubl
addl
out
cmpb
cmp
push
jno
add
pop
xor
loopne
inc
or
sbb
or
xor
cmp
add
xchg
aam
stc
jle
mov
mov
sbb
pop
aam
outsb
inc
iret
mov
cli
fucomi
adc
int
adc
in
cmp
dec
adc
dec
icebp
push
in
inc
pop
test
cmp
leave
insl
jne
and
fcomps
into
imul
jmp
cmpsb
int3
push
xor
repz
shl
lret
lock
pop
inc
fwait
xchg
and
or
xchg
dec
cmpsb
jmp
out
pop
mov
outsb
daa
xor
pop
mov
push
jp
out
xlat
arpl
xor
movsl
sub
cmp
int
adc
cmp
std
lret
aas
push
lock
jecxz
or
jmp
out
call
aam
adc
repz
push
sub
push
sub
or
inc
lea
ret
movsb
fists
sub
gs
stos
mov
xor
sahf
jg
sub
add
out
outsb
jns
cli
shll
outsb
jl
xor
xchg
inc
ds
int
mov
jge
test
mov
adc
out
xchg
mov
push
xchg
sahf
test
jbe
jp
imul
adc
mov
data16
sahf
or
jo
scas
fistpll
dec
push
paddsw
sbb
mov
sbb
in
clc
pop
xor
pop
fs
mov
nop
pop
fnstcw
push
sub
sbb
adcb
lret
in
stc
push
sub
pop
push
mov
gs
push
fiaddl
cmp
cltd
outsl
mulb
add
test
scas
jge
add
xchg
movsl
test
add
pushf
aad
mov
pop
loopne
movsb
pop
ss
mov
push
mov
jb
xor
in
push
les
mov
dec
push
adc
pop
int3
inc
outsb
pop
cmc
addr16
jo
lret
je
cmp
cmpb
nop
push
mov
lods
test
hlt
adc
cwtl
mov
test
mov
cmp
decb
iret
outsl
insb
insl
pop
jl
outsl
jns
in
mov
push
mov
jp
pusha
jnp
xchg
fwait
jns
push
movsl
inc
in
pop
cmp
pusha
lcall
xorl
inc
add
adc
add
ss
pop
frstor
mov
movsb
cmpsb
cmp
xor
pop
push
jne
or
jecxz
ss
in
loop
test
or
cltd
stos
add
xor
xor
pop
pop
lods
add
push
cmp
repz
aaa
push
lds
jno
testl
or
jns
out
insb
and
hlt
lods
xlat
xorb
cmc
rol
mov
test
add
inc
ds
xor
out
fucom
sbb
lds
loopne
add
insl
ds
add
imul
xchg
cs
pop
shrb
test
cmp
loope,pt
pop
imul
or
push
daa
mov
adcl
out
mov
dec
xlat
jge
and
in
dec
out
ds
mov
mov
xor
fwait
stc
sahf
jge
les
in
test
mov
inc
das
test
sub
dec
fiaddl
arpl
leave
mov
arpl
add
xchg
call
popa
jae
js
cmp
cmp
xor
add
stc
jp
bound
in
jne
fs
negl
mov
stc
mov
jo
lock
mov
dec
movb
pop
adc
xchg
stc
lret
mov
inc
dec
test
adc
push
mov
lahf
mov
or
sub
lock
sbb
mov
subb
shll
subb
mov
and
and
shll
lahf
jne
xchg
sub
xor
aam
mov
js
mov
cld
inc
decl
mov
dec
test
je
lock
mov
loopne
out
sti
nop
sub
mov
mov
sbb
bound
out
sub
sub
sub
repnz
add
scas
and
cltd
dec
xor
xor
roll
or
or
andl
and
adc
popf
rolb
xchg
mov
cmp
stc
xchg
pop
les
or
lock
inc
mov
nop
and
and
push
cld
jg
call
lret
xor
adc
shll
add
outsb
mov
cmp
and
xchg
dec
pop
sbb
mov
xor
cmp
cmpsl
sti
test
push
add
jno
sbb
out
push
and
mov
push
adc
inc
jmp
push
inc
inc
fisttps
mov
sub
cmp
sub
loop
push
stos
mov
fs
dec
insb
lea
movsb
dec
data16
lods
fwait
fwait
in
inc
xorb
add
rol
repnz
mov
repz
sub
mov
jl
sti
pusha
fldcw
jle
jbe
inc
mov
add
ret
test
inc
fldcw
pop
pop
mov
inc
imul
das
xchg
mov
stos
mov
movsl
mov
jl
scas
add
xor
mov
dec
xor
sarb
xor
ret
clc
jnp
or
enter
mov
add
test
pop
jns
add
xchg
mov
shll
fists
subb
idiv
gs
mov
shlb
in
dec
ljmp
mov
fwait
das
shlb
xchg
sub
mov
in
jl
lret
inc
cwtl
iret
add
adc
and
test
aam
rolb
push
ljmp
mov
mov
insb
sahf
mov
pop
stos
xor
add
les
pop
aad
or
mov
pop
iret
cmp
and
out
mov
push
add
adc
into
inc
lret
sbb
test
lret
xchg
int3
adcb
bound
cli
das
push
loopne
fsub
xor
inc
repz
xchg
aam
mov
loope
fcomp
sub
nop
push
std
dec
cltd
cmp
push
mov
jecxz
adc
sub
jg
lods
inc
cli
sarb
es
stos
hlt
adc
imul
and
lret
xchg
cmp
shlb
jg
loop
ja
int
or
push
mov
daa
add
into
or
sub
mov
pop
cmp
jge
adc
pop
les
inc
adc
cwtl
add
in
fdivrl
fidivrl
mov
outsb
insb
add
mov
mov
in
dec
iret
push
cmp
ret
das
mov
mov
gs
jno
xchg
or
jge
in
xchg
arpl
push
dec
out
mov
lcall
test
cmp
inc
sti
fdivl
pop
pop
cwtl
lods
and
jg
add
mov
vpmaxsw
rolb
shr
inc
stc
and
sub
int
xchg
loopne
idivb
inc
inc
popf
into
mov
gs
inc
pop
mov
push
test
testb
pop
jo
mov
and
int
pop
divl
lds
leave
adc
mov
push
xchg
mov
and
push
adc
adc
sub
pop
sbb
test
sbb
pop
inc
dec
dec
addb
dec
mov
xchg
inc
cli
insb
adc
outsb
mov
push
mov
and
repz
bound
push
pop
mov
sti
testb
mov
repnz
mov
in
mov
stos
pusha
outsb
nop
cwtl
jecxz
pop
and
jbe
sub
insb
fcomps
stos
push
xor
mov
jne
dec
test
bound
js
pushf
aaa
push
sti
and
dec
xor
inc
dec
insb
inc
or
iret
mov
and
mov
inc
in
loopne
dec
lahf
xchg
adcl
fisubrs
repz
cmp
jns
js
sahf
sahf
or
jp
lds
jnp
or
cmc
repz
ret
push
mov
sub
add
scas
popf
cltd
jo
pop
xchg
dec
push
mov
fs
mov
pop
pop
mov
out
popa
in
and
pop
out
movsl
add
mov
xor
mov
inc
push
fcomip
cwtl
lahf
dec
mov
shll
jne
aad
jmp
push
sbbl
jmp
cmp
pop
mov
push
out
jns
push
xor
mov
lahf
or
or
sbb
mov
les
mov
stc
aaa
pop
aas
test
pop
adc
int
push
fmull
jns
std
mov
dec
or
fwait
xor
mov
pusha
in
sub
pop
lock
sti
push
xchg
cmpsb
lret
inc
pop
jb
sub
cmp
cmc
mov
xor
test
and
dec
pop
movsb
cmp
lea
mov
xor
and
sub
loopne
shr
xor
fldt
push
jl
xor
in
xor
scas
cli
mov
lcallw
lods
push
cmp
jo
mov
aam
lcall
push
push
arpl
rcrl
out
adc
or
xor
sbb
cmp
jns
insl
sbb
mov
arpl
sbb
xor
or
cmp
adc
mov
test
cmc
ret
mov
xchg
repnz
ds
fadd
xchg
sarb
jbe
cwtl
dec
sub
cmc
xlat
xor
test
mov
mov
xor
cmp
and
xchg
or
sbb
cmp
dec
push
and
int
xor
imul
or
ds
add
mov
pop
cmc
iret
or
push
pop
scas
orb
mov
or
fldenv
jmp
sbb
cmp
in
popa
outsl
les
dec
jle
stos
cmp
add
filds
xchg
push
addl
int3
in
jno
sbb
mov
jae
test
idivb
sbb
lcall
add
js
mov
mov
subps
xchg
adc
or
scas
mov
jl
leave
push
mov
jnp
cmc
sahf
fbstp
jp
repnz
xor
jle
test
cltd
adc
add
mov
aas
jno
cmc
hlt
cmpsl
push
js
ret
jp
aam
insl
pop
cmc
push
popf
jp
jbe
mov
mov
pop
aad
insb
out
pop
dec
and
mov
fidivrl
dec
lahf
lods
mov
jle
cmpsb
add
adcb
js
xchg
ret
lcall
movsb
sub
shrb
mov
sbb
sbb
jno
pop
sub
sbb
cmc
and
mov
loope
fs
inc
es
sarl
mov
jns
pop
adc
mov
loop
cmp
leave
push
xlat
lcall
outsb
pop
jl
push
mov
sub
into
imul
lret
mov
push
fwait
icebp
inc
push
stc
adc
lahf
mov
mov
mov
sub
mov
mov
jg
cli
aam
daa
outsl
sub
sbb
outsb
ss
dec
daa
lret
popf
inc
repz
mov
cmp
push
mov
pop
sbb
lret
mov
or
mov
inc
inc
cmp
inc
dec
fwait
popa
out
idivb
mov
jo
ret
sti
outsl
jbe
scas
fldcw
add
lods
in
incl
data16
movsl
inc
push
clc
push
add
sub
rorl
dec
fsubp
pop
popl
movsb
into
pop
out
sub
clc
push
sub
cmp
int3
rcll
push
mov
mov
test
mov
in
and
mov
fldenv
fmuls
test
or
adc
jmp
jno
push
fsubrp
inc
sbb
les
xor
jmp
xchg
mov
sti
jbe
mov
jbe
lods
mov
push
mov
cmp
popa
pop
xor
add
into
repnz
aam
paddusb
rcll
or
je
push
pop
enter
jge
insl
and
add
scas
xor
cmp
imul
add
mov
mov
push
mov
cmp
jecxz
or
mov
mov
in
mov
sahf
jmp
loope
enter
fcomps
mov
push
fidivs
fdivl
or
ljmp
inc
fmull
into
adc
nop
mov
rcrl
cmpsb
mov
add
xor
mov
dec
sbb
sbb
fistpll
jae
imul
mov
rcr
sbb
xchg
sub
outsl
mov
jbe
rorb
inc
dec
push
repnz
shl
inc
popf
lods
inc
jl
and
cli
jbe
loopne
xlat
hlt
sub
push
xlat
popf
mov
sbb
jno
std
xor
in
jnp
test
es
addr16
jbe
popa
lds
ds
int
lds
outsb
cmpb
cmc
insb
mov
gs
cmp
jge
adc
aad
cmp
mov
cmp
imul
popf
push
mov
dec
mov
xchg
mov
int
mov
arpl
jecxz
fidivl
cmp
pop
loope
cmpsb
jae
les
imulb
and
sub
mov
cld
lds
sub
mov
mov
mov
scas
adc
notb
fsubs
je
mov
push
pop
lret
mov
adc
call
xorb
fistpll
js
cs
xchg
testb
add
addr16
cmp
xlat
jl
mov
sub
fwait
out
dec
insb
push
ds
jbe
jne
inc
mov
in
nop
cld
imul
xchg
aad
inc
or
mov
push
sarb
and
inc
insb
sbb
popf
in
fs
imul
xor
jg
repnz
jmp
jno
fistpl
out
push
negl
aam
les
es
sub
call
aas
std
push
adc
push
or
dec
push
pop
sbb
xor
add
pop
sub
ret
mov
xchg
push
pop
mov
dec
test
lock
adc
xchg
inc
cmpsl
cld
jecxz
pop
fiaddl
outsl
mov
js
and
add
mov
and
arpl
test
sbb
sub
mov
dec
xlat
inc
dec
jecxz
out
or
stc
xor
or
pop
mov
pushf
hlt
negl
test
mov
xor
jl
je
mov
lahf
add
int3
sub
mov
rcrl
fdiv
arpl
pop
repz
loop
popf
addr16
cmp
call
fwait
cmp
jne
imulb
mov
sub
dec
in
movsb
pop
sbb
dec
shr
and
push
inc
lret
rcr
icebp
push
xchg
leave
scas
dec
and
dec
mov
or
pop
test
addr16
pop
scas
pop
cli
insb
add
cltd
and
shlb
mov
fwait
test
cwtl
mov
pushf
shrb
mov
mov
ret
and
iret
lret
add
fidivl
add
insl
pop
data16
repnz
cmp
and
jne
stc
fs
pop
xor
test
adc
das
in
and
loopne
fbld
pop
mov
sbb
rcrl
mov
inc
cltd
adc
push
or
cmc
fistl
inc
pop
in
lret
and
push
dec
repnz
push
mov
or
pushf
outsb
mov
sub
push
arpl
inc
mov
bound
fwait
out
loopne
test
rcrb
loop
and
insw
ss
mov
add
pop
jo
xor
mull
add
sbb
sti
xchg
std
push
in
int3
add
jp
adc
pushf
mov
xchg
cs
es
inc
fmuls
add
sbb
mov
sub
jmp
out
sarl
out
insb
add
mov
pop
mov
loop
bound
stos
jp
and
jmp
mov
pusha
bound
sbb
add
fidivl
ss
and
in
add
jl
mov
dec
ds
pop
pop
xor
jb
fs
jnp
fisttpll
xlat
lcall
movsb
pushf
cmp
jnp
add
stos
fisubrs
insl
jle
iret
imul
mov
xlat
dec
out
add
push
mov
jle
sub
jae
test
xchg
mov
lret
mov
xchg
ss
mov
lcall
addr16
jae
fwait
in
jns
shll
ds
push
push
in
mov
cmp
fnstenv
push
mov
sahf
xchg
dec
cli
dec
xchg
mov
cmp
jge
scas
mov
idivb
incl
aam
mov
jns
cmp
aad
sbb
sub
pop
lret
lcall
cmpsl
push
inc
xchg
sub
cmpb
dec
loopne
fnstsw
dec
or
xor
out
out
mov
rorl
daa
subb
push
jmp
shl
and
jmp
bndstx
jge
inc
or
pop
sub
int3
arpl
sar
js
stc
psubsw
bound
dec
test
jg
int3
jge
or
push
jne
negb
mov
aad
push
sub
sbb
add
xor
les
ja
mov
sbb
insl
add
inc
sub
mov
rorl
rcll
cli
ds
add
fldt
sub
sbb
outsl
ret
pop
or
adc
mov
negl
pushf
inc
loope
mov
insl
insb
add
xchg
rorb
jl
jle
in
jne
jo
int3
dec
xchg
push
adc
fwait
pop
xchg
mov
das
jne
out
rcll
sub
add
mov
xorl
pmaxsw
and
mov
movsl
push
iret
clc
sub
scas
dec
mov
dec
sub
in
into
add
pop
push
mov
mov
lock
mov
jle
sbb
aad
mov
cli
mov
popf
xor
cwtl
push
cmp
or
or
out
adcb
mov
std
mov
daa
dec
stc
pushf
cmpsl
push
cwtl
cwtl
lods
sbbl
gs
lcall
adc
clc
sbb
cmpsl
hlt
out
int
xor
jle
mov
dec
mov
cmp
sbb
mov
mov
inc
mov
jb
push
sarb
lea
dec
test
pop
adc
cmpsl
or
fimull
sub
out
in
cmpsb
out
fcoms
pop
xor
cwtl
mov
ljmp
mov
jbe
mov
sbb
lea
je
js
xor
and
fidivs
push
pop
or
mov
pop
cmp
dec
mov
pop
loop
inc
add
cltd
lret
pop
fcom
push
jge
mov
jo
and
lret
aam
inc
ds
and
mov
jo
pop
into
mov
out
cwtl
mov
push
lcall
ret
cmp
test
mov
lcall
xor
push
sub
xor
jg
cli
push
xchg
push
test
add
jno
pushf
mov
jns
push
fs
out
int3
sub
xor
or
sbb
loop
addb
int3
dec
pop
inc
imul
int3
int
push
in
js
and
gs
sar
out
cmpl
pop
adc
clc
mov
insb
stos
pop
and
lea
lods
aas
sub
gs
xor
cmc
adc
mov
inc
addl
movsb
das
xchg
ret
xorl
ss
adc
imul
cmp
clc
rorl
sbb
cmp
sbb
pop
les
adc
loop
daa
dec
scas
iret
jno
push
mov
sarb
mov
mov
push
pop
cwtl
iretw
dec
flds
dec
inc
jmp
iret
xchg
jns
mov
stos
inc
push
mov
aaa
mov
leave
adc
push
idivb
add
push
enter
mov
rcll
inc
fstpl
xchg
and
xlat
inc
mov
mov
xchg
out
adc
and
xchg
aam
cmp
mov
pop
iret
sbb
xchg
ljmp
mov
sbb
lds
inc
and
lock
and
add
or
mov
iret
pusha
imul
cld
push
inc
std
push
es
and
xor
or
cs
xor
lods
inc
add
pop
test
sub
inc
mov
push
xchg
negb
notl
into
cmp
data16
loop
sbbl
mov
fildl
fst
mov
aad
shl
xchg
iret
and
push
mov
dec
inc
lcall
gs
push
push
sbb
lods
fwait
lds
out
xor
push
jno
int
mov
cld
lods
and
dec
or
pop
and
je
test
stos
pushf
sub
xor
push
test
pop
xlat
sub
xchg
fbld
pop
add
aad
cmp
adc
push
ljmp
cmc
data16
ret
sub
mov
mov
pop
in
mov
stos
addr16
push
mov
stc
out
xorb
ljmp
sbb
jno
jno
out
push
addr16
mov
popa
movsb
sbb
push
dec
or
mov
pop
push
adc
mov
fists
jb
and
call
stos
sub
xor
repnz
sbb
dec
pop
shll
push
out
adc
fwait
loopne
sub
mov
ret
push
lcall
das
and
sub
push
push
test
adc
idivb
dec
nop
or
jle
addr16
dec
mov
push
xor
lea
lret
test
aam
xchg
je
lahf
das
or
movntq
cmp
test
mov
test
jnp
cmp
jnp
pop
loopne
aaa
outsl
sub
fisttpll
fisubrl
bound
mov
inc
mov
out
pop
dec
xor
mov
inc
and
sub
out
stos
sub
or
inc
push
popa
sbb
sbb
sub
testl
outsb
inc
arpl
xchg
lds
mov
add
sbb
es
jno
mov
call
jno
jmp
scas
adc
cmpl
es
popf
sbb
pushf
xor
je
xor
mov
inc
push
dec
mov
test
ljmp
loope
or
mov
jnp
mov
int
mov
pop
fdivrs
imul
cmp
cmp
loopne
mov
cmp
aad
rclb
push
fnsave
testl
fcoml
mov
mov
add
out
xchg
shll
dec
and
add
lcall
addl
adc
inc
push
rcrl
out
pop
sbb
adc
mov
outsb
ss
aad
sbb
mov
outsb
jp
stc
ret
fwait
mov
loope
in
idivb
sbb
cmpsb
push
iret
inc
fiadds
pusha
loop
lcall
xchg
adc
sbb
pop
mov
mov
lods
sahf
xlat
cmp
fistpl
cmpb
cli
push
lret
mov
sub
lahf
pop
pop
fs
es
mov
nop
jns
mov
push
ljmp
xchg
shrb
inc
sti
hlt
cmp
fldcw
icebp
inc
mov
dec
ret
pushf
fiadds
arpl
lahf
repnz
subl
mov
mov
xor
sub
and
sub
pushf
pop
jae
shrl
jle
jb
mov
or
sub
sbb
mov
ret
push
mov
push
jg
lock
push
cmc
cmp
push
rorl
hlt
and
mov
aad
pop
sbb
int
mov
mov
clc
out
ljmp
popa
ficoms
into
daa
add
fadds
fstpl
cmp
in
es
or
popa
add
fstpt
popa
push
push
outsb
or
mov
les
leave
mov
fstpt
push
mov
and
xor
jp
mov
movsl
sub
mov
and
mov
pop
dec
outsb
iret
xchg
rolb
pop
mov
movsb
or
xchg
push
xor
int
jmp
in
lock
jle
add
inc
scas
add
push
or
mulb
dec
sub
add
aad
adc
int3
or
add
std
cli
popf
xchg
cmp
cmp
or
iret
test
clc
mov
shrb
das
shr
mov
sbb
mov
fs
fsubr
jo
or
loop
add
inc
sub
push
movsb
lods
sbb
ret
aas
adc
xlat
popf
sbb
outsb
out
icebp
mov
dec
push
out
dec
aas
ss
or
sbb
push
clc
imull
jge
test
roll
xor
jl
and
cmc
dec
xchg
cmc
sub
sbb
sbb
jae
incb
push
xchg
pop
sbb
lock
in
jno
xchg
mov
xchg
divl
shr
add
in
lods
sbb
jb
jnp
sub
insl
pop
loope
dec
and
les
push
popa
out
cmp
popf
sbb
pop
clc
xor
sub
ds
add
adc
jbe
inc
fnsave
sbb
out
sbb
mov
lahf
in
inc
cli
mov
and
and
and
mov
ljmp
punpckldq
je
cld
dec
mov
add
add
adc
ret
mov
mov
scas
xor
adc
pop
pop
ljmp
popf
jl
std
dec
push
add
sub
aaa
jp
jecxz
ret
cmp
jns
icebp
push
xchg
mov
ret
scas
or
pop
addr16
imul
addl
lret
xor
cmpl
adc
incl
in
jne
xchg
xchg
dec
insb
xchg
mov
xchg
ds
iret
pushf
dec
mov
xchg
and
xchg
push
aad
xchg
fiadds
mov
pop
arpl
ficoml
clc
out
cmp
popf
mov
insl
sahf
aad
push
push
out
pushl
shl
call
pop
pop
ret
pusha
popa
adc
mov
daa
sti
leave
ficoml
in
sahf
xchg
push
mov
unpcklps
lods
sub
out
mov
jg
jb
xor
pop
or
mov
cmp
lret
xchg
nop
push
fstps
adc
dec
fistpl
pop
push
inc
dec
mov
out
and
sub
mov
sub
sbb
lret
pop
pop
cmpsl
add
xor
pop
dec
lock
fiaddl
negl
test
and
data16
cltd
psubsw
inc
mov
repnz
cs
loop
sysret
fiadds
es
insl
movsl
inc
mov
and
in
inc
mov
cmp
mov
cmp
mov
xchg
test
inc
loop
add
ja
dec
prefetch
push
dec
jle
fucom
or
hlt
sub
adc
mov
mov
jnp
add
inc
cli
outsl
xchg
mov
cmp
mov
cmpb
cld
incl
bound
repnz
xchg
movsb
nop
into
ficoml
das
and
mov
inc
out
xor
xchg
lods
mov
popa
mov
shll
lahf
mov
adc
mov
les
hlt
outsb
mov
in
lret
mov
dec
xchg
mov
pop
test
int3
cmp
push
stc
loopne
or
fisttpl
sub
jno
sub
fisubs
sbb
sub
sbb
sbb
leave
int3
dec
idiv
push
or
inc
xchg
test
clc
ret
push
lods
xor
lcall
call
xor
dec
adcl
sbb
nop
jle
nop
push
lret
and
roll
xor
inc
out
enter
push
inc
mov
or
adc
pop
add
inc
pop
mov
cwtl
imul
xor
jmp
int
inc
dec
enter
dec
sub
sub
or
inc
mov
repnz
mov
inc
add
out
mov
push
inc
gs
shl
push
sti
addb
outsl
loopne
adc
xchg
bound
rolb
in
add
rcrb
adc
pop
mov
push
gs
into
insb
inc
and
or
pop
mov
sub
cmp
jno
push
pop
jo
insb
pusha
bnd
push
cmp
loope
cmp
mov
xor
int3
in
lcall
lods
mov
dec
hlt
sub
in
lods
pop
icebp
fs
clc
push
dec
subb
lods
ja
xor
pushl
cmp
cld
mov
push
inc
sahf
push
push
sub
into
imul
or
jg
jb
lods
push
and
jp
out
lds
iret
movsl
cmpl
repz
ror
dec
mov
sub
jg
xchg
pop
and
clc
scas
jecxz
scas
push
cld
mov
pop
add
sub
repnz
xchg
cmc
ljmp
outsl
orb
jne
fisubrs
jge
push
icebp
inc
or
pop
xchg
outsl
scas
pop
rorb
push
mov
push
add
and
loopne
or
mov
mov
push
cld
and
enter
cli
jecxz
fiadds
test
jns
into
fmul
test
jnp
in
mov
lret
out
mov
xor
pop
mov
xor
xchg
push
jne
clc
ja
call
fimuls
es
in
cmp
jnp
sahf
jmp
jbe
cs
lahf
cmp
inc
ljmp
inc
loopne
push
mov
jnp
jl
mov
xchg
daa
shlb
push
int3
sbb
pop
mov
std
mov
and
fld
sbb
jmp
dec
clc
add
mov
mov
loop
push
push
imul
jno
inc
jae
pop
mov
add
xchg
push
jle
fimuls
loop
sub
adc
push
mov
ds
cs
popa
dec
cwtl
aam
mov
push
rolb
jecxz
es
mov
outsl
setnp
fsubrl
data16
xor
jo
imul
jg
fbstp
ret
inc
dec
cmp
add
test
jl
cmc
jb
pushf
xchg
dec
sbb
in
adc
mov
cmp
dec
dec
frstor
jmp
test
mov
lret
jbe
xchg
pop
push
fs
adc
jge
xchg
popa
and
cmp
out
sub
movsb
push
inc
inc
jmp
outsb
arpl
push
push
cld
es
lcall
out
xor
gs
test
pushf
imul
inc
lret
in
or
dec
pop
ret
test
mov
loop
jnp
hlt
jecxz
inc
mov
dec
sub
xchg
mov
push
push
xchg
push
xlat
psubsb
xchg
pavgw
movsb
jl
mov
inc
push
push
add
pop
mov
test
lret
in
mov
jne
xchg
xchg
scas
call
or
cmc
xor
push
inc
and
push
pop
stos
sub
mov
inc
iret
adc
into
sub
out
adc
mov
jb
mov
add
divl
ds
cmc
cwtl
xchg
fistpl
sub
and
mov
mov
faddl
dec
and
xorb
adc
xor
daa
and
aas
jb
mov
adc
std
inc
in
mov
sub
add
lahf
dec
lods
dec
fxch
pop
lahf
xlat
mov
arpl
aaa
mov
lret
bound
dec
inc
sub
imul
adc
cmp
jge
mov
fimuls
js
mov
or
outsb
and
fwait
fs
out
xchg
dec
xchg
sub
scas
fmuls
stos
addr16
mov
lahf
and
and
loope
lods
dec
test
cmp
imul
mov
ds
mov
push
gs
jle
fdivs
mov
xlat
data16
mov
dec
cmp
out
clc
pop
xchg
test
incl
fisubrs
cmp
lahf
jno
fdiv
lcall
fmul
xor
inc
xchg
pop
enter
call
inc
or
pop
pop
fwait
in
adc
call
pop
loope
inc
pop
lret
or
dec
add
push
fwait
mov
mov
mov
mov
fstpl
lcall
idivl
es
fdivrl
in
push
mov
loope
imul
sub
popa
dec
inc
in
push
jmp
stc
int
cld
cwtl
pop
xor
repz
lods
imul
xchg
sahf
inc
mov
push
shrl
adc
jl
scas
hlt
adc
add
insb
pop
aad
cmpsb
mov
addr16
push
fstl
lock
mov
repnz
mov
jecxz
mov
lret
imulb
movsb
inc
leave
fldcw
jb
pop
aaa
pop
insl
dec
pop
fbld
mov
inc
dec
mov
add
dec
sahf
call
jae
imul
je
inc
lret
cmp
sbb
jle
or
daa
adc
xchg
in
sahf
mov
insb
mov
mov
mov
dec
cmp
xchg
jns
sub
movsb
outsb
call
fldt
shll
inc
ds
fidivrl
xchg
cmp
popf
fsubr
push
mov
lods
out
or
mov
pusha
xor
mov
in
add
mov
push
in
ret
mov
inc
push
dec
aad
xor
push
mov
jg
cmpsb
push
in
dec
cld
inc
out
in
sti
push
rcll
xchg
xchg
ss
std
pop
dec
fidivl
or
ret
push
aas
dec
cmpsb
sti
sub
std
push
push
fadds
cmp
fsubs
in
mov
or
ljmp
xchg
mov
mov
mov
bound
rorl
movsl
sub
fsubl
cli
rcrb
stc
int3
and
les
lcall
popa
xor
aad
adc
rol
xchg
cli
sub
mov
xor
out
movsl
js
dec
arpl
scas
add
push
loope
jp
xchg
fistps
push
fstps
xor
xchg
cmc
xlat
mov
mov
ds
dec
push
and
mov
pushf
pop
notl
test
mov
clc
dec
icebp
jae
fsubr
fs
adc
jne
rol
repz
rorb
into
pop
into
mov
ret
mov
call
std
xlat
pop
mov
pop
test
cmp
fsubs
sti
cmp
cld
fldt
xchg
sub
loope
mov
jmp
cmp
push
cltd
inc
sub
dec
push
cs
test
pop
or
ss
lret
xor
add
push
out
insl
rorl
add
cli
xchg
cmpb
ds
or
push
lock
adc
sub
xorl
not
fcomps
std
xor
and
pusha
dec
mov
dec
mov
sar
adc
sahf
jmp
mov
shl
mov
aas
shlb
mov
push
notb
sub
sbb
fld
repnz
imul
arpl
pop
loop
xor
lahf
push
imulb
insl
enter
lahf
cmp
into
pop
in
inc
imul
mov
in
call
stos
push
in
fldenv
cmp
xor
sarl
test
into
enter
push
push
dec
arpl
mov
inc
ja
addr16
xchg
cmp
xchg
push
xchg
cwtl
adc
mov
inc
inc
neg
scas
xchg
in
lods
rorb
and
push
dec
loope
cmp
jmp
and
sub
xor
movsl
cmp
dec
adc
mov
sbb
fcmovbe
test
arpl
mov
mov
xorl
aaa
cmp
arpl
sub
mov
mov
push
loopne
pushf
mov
xchg
lcall
ja
dec
cmpsl
or
cmp
mov
lock
xor
fsubl
adc
jl
pop
xor
int
aam
cltd
lcall
push
and
xor
mov
or
xchg
xchg
mov
mov
cmp
nop
je
xor
and
push
push
sbb
jne
inc
adc
shll
test
mov
mov
daa
in
sbb
testb
and
push
icebp
out
add
dec
sbb
xchg
sbb
and
ljmp
sahf
inc
xchg
je
in
lret
mov
es
mov
mov
jmp
enter
in
sbb
mov
sub
test
add
sub
icebp
loop
cmp
insb
stos
add
sub
stos
and
inc
fs
popf
adc
popf
jl
xchg
shrl
pop
test
call
jle
out
fwait
loope
test
es
and
jne
xor
pop
ljmp
fisttps
test
sbb
adc
std
mov
push
sti
dec
fsubr
mov
jmp
push
insb
dec
dec
movsb
imul
lods
sbb
or
dec
js
jmp
iret
mov
sbb
and
push
mov
mov
icebp
or
jge
or
scas
int3
cli
cmc
mov
andb
add
mov
test
sbb
lret
out
leave
push
or
xor
xor
bound
sub
xchg
ficoms
dec
jecxz
lods
js
jno
xor
pop
jb
in
adc
xchg
addr16
pop
jbe
jg
xchg
rclb
stc
test
fcmove
push
jle
mov
shll
jp
cwtl
mov
imul
ss
mov
push
jae
inc
mov
in
add
add
jb
fcomip
cmpsl
xchg
mov
ds
movsl
mov
arpl
ss
xor
imul
xor
addr16
push
data16
cmpb
repnz
mov
push
pushf
test
or
pushf
bswap
xchg
cltd
push
xchg
sub
lods
mov
rcll
mov
jnp
negb
or
pop
aaa
cmp
loope
add
adc
push
std
sub
jne
jg
mov
in
adcb
mov
pop
lds
mov
and
xchg
insb
pop
adc
xchg
pop
ds
scas
loope
sbb
dec
mov
rorl
push
out
stc
pop
xor
mov
jb
cmp
inc
mov
sub
notb
movsl
mov
mov
stc
jmp
mov
mov
cmp
loopne
cli
xchg
ljmp
xor
lods
ret
rcrb
mov
ret
fcoml
bswap
cltd
pop
jo
mov
leave
xchg
outsb
fsts
inc
dec
and
lret
cmp
add
inc
rcr
push
sbb
sub
les
in
adc
mov
xor
inc
push
jl
popf
mov
ja
mov
ja
imul
inc
cmp
cmp
lds
cmp
sbb
dec
dec
jle
add
mov
jb
push
leave
mov
test
pop
mov
pmulhw
or
les
or
adc
inc
xor
cmp
addb
xchg
push
clc
jle
mov
pop
cli
xor
xchg
sub
jl
repnz
or
es
stc
ja
imul
daa
adc
jo
sub
inc
aam
mov
aaa
fiaddl
mov
mov
and
or
ds
push
xchg
movsl
mov
lea
inc
aad
adc
cmc
sti
lock
pushf
push
insb
xchg
test
and
movsl
cmpsb
in
insl
das
cs
ljmp
add
adc
lock
and
jbe
aas
sub
pop
lods
mov
sbb
out
scas
dec
xchg
push
push
and
test
call
pop
repnz
or
pop
xchg
push
in
dec
jno
pop
ret
sbb
pusha
sbb
lods
fcmovne
jno
cld
jne
clc
ficoms
arpl
fcomp
cwtl
aaa
jmp
stc
xor
fbstp
int
cmp
sbb
push
adc
int
scas
loopne
scas
sbb
neg
es
in
sbb
add
pop
shrl
xchg
cmpsb
fcompl
or
adc
sub
call
loopne
mov
sub
xchg
out
das
imul
and
idivb
loop
jne
sub
dec
pop
xchg
sbb
std
mov
pop
adc
in
cmpsl
mov
add
je
adc
jl
pop
enter
and
add
jmp
mov
push
mov
das
loop
inc
ret
insl
out
out
dec
das
orb
je
cmp
push
adc
sub
jbe
mov
rcr
outsl
test
mov
xchg
outsl
sbb
mov
popf
dec
dec
add
outsl
xor
daa
adc
mov
push
data16
arpl
nop
and
and
lds
cmp
or
xchg
lcall
idiv
sti
test
fidivrl
inc
shlb
jb
sahf
xor
mov
xchg
cmp
leave
dec
pop
in
mov
jmp
aaa
mov
fstpt
xchg
gs
xchg
out
jp
lds
and
jo
in
sbb
shl
js
jnp
dec
dec
inc
cmp
imul
sbbl
push
pop
or
cmc
scas
push
mov
cmpsl
out
fnstenv
and
pop
ds
xlat
mov
dec
movsl
int3
or
xchg
add
pop
fwait
enter
pop
ret
cmp
mov
pop
xlat
in
je
and
out
push
sarl
pop
decl
fistpll
and
mov
in
lea
repnz
shlb
adc
fnstsw
jle
lret
ret
or
sub
ljmp
pop
jne
jbe
adc
sub
shl
mov
cwtl
test
popa
sub
sbb
aad
mov
sahf
pop
dec
in
fidivs
sbbl
or
xor
pop
lahf
jno
xor
call
push
push
or
sbbb
stos
dec
enter
sarl
lea
or
push
in
lods
dec
pusha
xchg
mov
cmp
mov
out
jns
jmp
add
push
lds
dec
loop
sbb
pop
adc
into
or
arpl
fstpt
or
cmpsb
xlat
repz
push
iret
xchg
sub
dec
xlat
iret
jb
xchg
xchg
cmp
inc
aam
mov
in
imul
negb
push
push
loope
sub
shlb
ss
pop
cwtd
push
pop
movsb
sbb
xchg
pop
pop
mov
shlb
xchg
cmpsl
cltd
ss
stos
pusha
inc
ds
add
xchg
fildl
fcoml
add
push
xor
cmp
mull
orb
leave
pushf
and
icebp
dec
jno
add
lahf
cmp
adc
inc
dec
xor
repz
shl
mov
std
adc
and
mov
xchg
ss
rcrb
in
pusha
inc
ficoml
push
je
insb
test
inc
cwtl
jl
enter
testl
xchg
repz
pusha
stos
xchg
xor
pop
mov
bnd
loop
aas
jp
cli
mov
jne
push
ja
dec
and
pop
and
data16
imull
xchg
aaa
out
sub
push
mov
xchg
xor
leave
divl
pushf
ss
shrb
fimull
jmp
jae
dec
xchg
inc
lea
mov
and
roll
dec
dec
and
jg
fldenv
rcrb
rcll
imulb
gs
insb
add
pushf
jbe
jg
or
addr16
sub
rclb
sbb
ficomps
mov
add
stc
ret
push
aad
sarb
outsl
add
or
pop
and
addb
sahf
or
mov
jns
notl
mov
xor
inc
clc
daa
call
jge
int3
mov
data16
fsub
pop
pop
add
xchg
out
cmc
pop
pop
xor
push
loopne
nop
in
cmp
sub
lods
frstor
pushf
and
mov
mov
xchg
out
adc
cli
call
cmpsb
shrb
mov
test
aam
lcall
fmulp
aas
and
cmp
xor
xchg
push
adc
jmp
pop
adc
dec
ret
repnz
dec
int3
repnz
cmpsl
mov
ljmp
dec
pop
mov
lret
pop
inc
add
mov
push
mov
mov
push
test
push
aaa
xchg
and
imul
out
inc
das
sub
sbb
xlat
aam
mov
arpl
cwtl
jae
dec
xchg
out
sbb
jo
popa
mov
dec
fistpl
cmp
adc
mov
add
push
dec
jl
out
xchg
into
stos
mov
das
jnp
popa
adc
repz
gs
adc
imul
stos
es
cmpsb
cmp
push
or
lahf
loop
arpl
je
insl
adc
push
jbe
jp
or
test
lret
push
test
test
mov
jl
lcall
xchg
addl
mov
jno
es
enter
in
add
les
mov
dec
gs
add
and
in
dec
addr16
or
dec
sbb
into
mov
add
cli
inc
adc
test
xchg
jmp
or
and
outsl
dec
dec
pushf
popa
push
cs
adc
fstpl
xchg
jb
dec
and
jo
orl
leave
test
cmp
or
inc
mov
cmp
loope
inc
ja
push
sbb
clc
cmpsl
aaa
popf
xor
sbb
ljmp
out
test
loope
dec
inc
aad
mov
xchg
pop
pop
xchg
cli
lcall
add
test
pop
rcl
int3
nop
mov
or
mov
jns
mov
sub
test
and
icebp
jle
pushf
mov
xor
cwtl
inc
add
pop
mov
adc
mov
cmp
sbb
mov
mov
scas
mov
fisttpl
shrb
cli
dec
adc
mov
fmul
mov
ljmp
in
cmp
pop
jle
rorl
push
mov
cmp
dec
je
vpshaq
subl
fdivp
dec
icebp
mov
fld
mov
in
pop
mov
add
lock
inc
loopne
mov
mov
inc
xor
aam
sub
roll
in
dec
rorl
mov
dec
fcmovnb
lea
xor
and
fidivl
arpl
rdtsc
sbb
data16
stos
xchg
mov
js
int
add
push
dec
xor
cwtl
aaa
ljmp
into
lods
cwtl
mov
lock
lret
loop
hlt
cmp
mov
mov
push
cli
adc
sub
fadds
cmpsl
cs
sub
div
mov
adc
mov
gs
scas
mov
iret
xchg
stos
cbtw
mov
pop
loope
pop
ss
call
and
lods
inc
add
push
mov
iret
int3
in
pop
xor
jmp
sarb
and
cmc
sub
or
cmpb
repnz
cld
mov
mov
or
mov
and
push
or
popf
arpl
xchg
frstor
out
in
dec
jns
dec
stc
stos
fisubl
out
es
or
adc
stos
rcrl
enter
mov
popf
cld
sbb
xchg
insl
push
jge
lods
pop
ja
insb
mov
daa
sbb
in
cwtl
jae
std
xchg
mov
xchg
in
popf
test
lock
mov
lds
jnp
pop
add
inc
add
jge
adc
pusha
out
mov
xor
sbb
push
mov
xchg
mov
push
or
les
or
cmp
add
mov
data16
push
sub
or
cltd
jb
imul
mov
mov
clc
inc
shrl
inc
mov
mov
xor
pop
cmp
mov
dec
hlt
cmp
mov
sub
addr16
movb
mov
jno
xchg
jl
mov
out
test
idivl
lods
and
scas
stos
fdivr
jnp
pusha
mov
sub
sti
add
data16
js
push
cwtl
lcall
cmp
mov
xchg
lahf
lea
jge
add
inc
jg
movsb
movsb
mov
add
aam
pushf
mov
dec
jb
mov
fs
movsw
cmp
ja
mov
cmpsl
fcmovnu
jecxz
out
cmpsb
lds
cmp
popa
inc
sbb
repnz
repnz
dec
inc
movsl
jl
negl
and
push
or
jle
xchg
stos
scas
sub
push
pop
mov
push
in
pop
rcrb
mov
aas
aad
jnp
mul
mov
mov
sbb
jns
outsl
cltd
adc
xchg
sbb
xchg
mov
jmp
cmp
mov
in
and
xchg
fidivl
loop
and
jne
push
lock
stc
jbe
push
clc
mov
mov
mov
mov
and
lods
pop
jge
or
arpl
aaa
push
pop
outsb
inc
xor
adc
outsb
sub
call
mov
push
mov
lods
es
and
pop
stc
xchg
jecxz
aas
fldt
inc
unpcklps
leave
subl
mov
pop
inc
negl
or
fnstenv
movsl
test
stos
sbb
or
xor
xorl
xchg
push
cmp
dec
out
aam
cmp
sub
xor
out
lahf
fldenv
test
or
stos
mov
andb
pop
sbbl
mov
cli
pop
sub
test
cmp
scas
aam
fimull
push
and
pop
clc
mov
jg
jge
inc
jge
nop
int
adcb
frstor
into
les
nop
fcmovne
and
push
stc
outsl
cmpb
jl
pop
out
adc
into
mov
jge
outsl
leave
js
stos
dec
dec
push
push
in
mov
dec
mov
pop
aas
or
es
sub
push
shll
inc
fidivs
aaa
fdivrl
adc
cmpsl
clc
dec
adcb
lretw
xchg
out
icebp
jns
xor
ljmp
bnd
dec
and
stos
out
icebp
in
shll
push
jbe
call
add
sub
ror
je
push
add
insl
mov
jmp
clc
or
pop
push
idivb
push
paddsb
mov
add
cmp
add
sbb
out
cmp
sub
fsubl
lock
mov
mov
outsl
adc
inc
stos
xchg
sbb
repnz
insb
les
loope
sbb
cmp
arpl
inc
fcomps
adc
and
jecxz
sub
ret
push
push
popf
cmp
inc
sub
sbb
repnz
adc
fcmovnbe
imul
aaa
mov
sub
xor
lods
sbb
sti
inc
inc
and
fnsave
fisubrl
or
jnp
mov
adc
gs
mov
mov
jl
lret
push
jp,pt
movsl
mov
add
lret
jbe
jnp
stc
lods
sub
adc
adc
mov
inc
sahf
push
sbb
in
out
adc
cmp
xor
pop
aaa
mov
loope
push
and
cld
ficoml
push
pop
xor
adc
and
pusha
xlat
ret
mov
or
stc
xor
andb
xchg
mov
in
sbb
ret
xchg
in
movsb
pop
sub
cmp
shlb
sub
int
mov
popa
imul
push
ret
fists
inc
ss
sub
push
or
aaa
pop
loope
push
mov
fnop
and
adc
push
xchg
adc
ljmp
imul
outsb
and
push
mov
aas
inc
pop
mov
jae
out
test
inc
stos
xor
lahf
xchg
loope
xchg
inc
rcrb
nop
ja
loopne
aaa
sti
dec
hlt
ss
andl
iret
lods
mov
fsubrp
cmp
dec
cmp
adcl
sub
pop
test
dec
mov
xor
mov
aad
div
gs
sahf
ja
fsub
cld
out
push
sub
mov
jo
popf
jne
jb
pop
call
clc
jbe
jbe
pop
clc
mov
xchg
mov
iret
or
and
or
repz
addb
or
xorb
xorl
aaa
stos
test
jns
out
clc
pop
andl
int
mov
je
pop
mul
fcoms
out
mov
adcl
push
cmp
pop
imul
sarl
gs
mov
dec
push
dec
mov
inc
bound
inc
aaa
jb
sti
lret
icebp
cmc
push
stos
jns
xor
out
push
cmp
mov
loopne
mov
lret
mov
aad
mov
mov
add
loopne
ficomps
jge
inc
sub
into
pusha
lret
popa
xor
pop
sub
lahf
aas
cmp
inc
push
divb
dec
and
mov
mov
clc
aas
das
jns
scas
pop
mov
lret
lcall
insl
enter
fs
pop
inc
push
sbb
or
sbb
pushf
in
adc
fstl
fiaddl
es
loope
mov
fs
push
inc
inc
shlb
pop
xlat
mov
jns
mov
jne
xchg
cwtl
shlb
xchg
sub
js
ss
in
rorl
cmpl
mov
cmpsb
jnp
stc
dec
movnti
out
mov
hlt
lea
fs
xlat
push
dec
sbb
mov
xchg
cmp
mov
stos
sar
lcall
cmc
xchg
xor
aas
stos
dec
sub
insb
inc
outsl
cmpsb
xor
std
les
repz
testl
mov
add
mov
mov
mov
adc
push
and
pop
je
inc
sbb
push
cli
std
cmp
xchg
sub
jl
js
mov
adc
push
dec
pusha
cmp
cld
push
dec
std
inc
add
cwtl
adc
inc
shll
mov
fadds
sbb
sbb
lcall
rclb
inc
sbb
pop
aad
stos
xor
dec
or
mov
pop
out
mov
and
imul
xchg
call
in
movsl
push
and
cld
aaa
jge
push
sub
xchg
jo
ret
aaa
andl
jle
test
sub
cmp
push
xor
pushf
xor
inc
mov
dec
mov
in
in
sub
mov
popf
adc
hlt
dec
mov
in
and
jae
gs
xor
xchg
or
cmp
cmp
inc
addr16
arpl
inc
mov
gs
jmp
xchg
dec
movsl
push
xchg
in
aas
insb
push
sbb
lods
adcl
xor
ds
sbb
pop
mov
jl
adc
fmull
mov
add
ret
scas
dec
pushl
and
in
jb
or
leave
cmp
pop
lret
xchg
clc
shrl
fdivr
stos
out
pop
xlat
sub
mov
out
popa
cs
jne
jnp
in
mov
aas
sub
mov
stos
lfs
in
mov
pop
aam
add
sub
mov
mov
movsb
jmp
repnz
mov
push
push
popf
jbe
jmp
sbb
sbb
sti
aad
pop
cmp
xchg
sub
xor
add
fwait
mov
sbb
cwtl
out
push
xor
out
mov
push
or
jp
adc
sbb
jp
pmaddwd
inc
sub
pop
jno
or
gs
sub
mov
int
push
icebp
mov
xchg
in
fnstcw
ret
inc
nop
pop
jae
dec
or
scas
mov
jl
cld
mov
insb
dec
mov
inc
outsb
clc
mov
or
sub
ss
jecxz
invd
int3
cmpl
jl
pushaw
lods
repz
andl
mov
lods
mov
mov
outsl
xchg
fsub
movsl
push
aas
add
div
pop
lahf
xchg
push
dec
ljmp
or
add
stos
dec
mov
test
and
out
jnp
or
fisttps
and
sbb
cwtl
xor
push
scas
mov
pusha
mov
jno
por
mov
sbb
loopne
fnstcw
sbbb
add
insb
sbb
jns
adc
jnp
rcrl
sub
or
pop
mov
lods
cmc
les
add
fimuls
pop
mov
in
test
data16
push
mov
xor
aas
dec
xor
mov
lods
mov
shrl
test
mov
push
fstpt
fiadds
gs
bound
adc
adc
dec
or
push
adc
xchg
push
adc
jp
insl
pop
dec
pop
in
dec
jmp
arpl
sub
sbb
imull
mov
fildll
xor
pop
lods
jp
pusha
mov
dec
cmp
xor
push
sub
add
xlat
fwait
pop
rclb
jo
dec
out
js
incb
mov
mov
jnp
xchg
insl
sbb
dec
in
push
movsl
rcl
movsb
outsb
popl
int
das
xchg
ret
stos
outsb
adc
dec
sbb
dec
mov
and
adc
scas
inc
inc
popf
iret
aaa
adc
ret
mov
aas
sub
mov
push
or
xor
mov
pop
or
out
stos
js
lcall
popa
xchg
dec
inc
xlat
push
cmpsl
fdivl
in
mov
cmpsb
mov
and
xchg
into
rclb
xchg
shll
scas
sub
out
call
and
pop
sbbl
xchg
xor
xchg
daa
mov
loope
jne
and
daa
mov
push
fsubs
aas
mov
jmp
int3
add
mov
xchg
dec
jmp
sbb
xor
cld
mov
jns
mov
lcall
psubusw
mov
test
std
mov
mov
cwtl
hlt
pushf
test
into
out
mov
lock
pop
ficompl
lock
decl
jle
mov
cmp
js
mulb
push
rcll
mov
sarb
les
jnp
in
jmp
inc
mov
adc
js
pop
xor
push
inc
fsubr
jb
adc
jno
cwtl
sub
fsubrs
imul
push
xlat
lret
pop
jae
dec
xor
pushf
lahf
out
pop
mov
add
out
insb
xor
mov
lods
mov
add
outsb
ss
mov
arpl
fstl
fs
or
loopne
sub
mov
ret
iret
std
mov
fmuls
inc
cltd
inc
test
inc
faddl
mov
dec
test
dec
dec
clc
mov
adc
lock
cmp
clc
pop
push
cli
call
aas
out
dec
sub
mov
cmp
movsl
mov
sti
xor
sbb
or
xchg
imulb
and
lcall
jecxz
adc
lods
inc
fwait
leave
mov
fidivs
or
sub
ja
jl
jg
rcr
je
pop
dec
adc
enter
sbb
data16
adc
and
sbb
bound
add
push
test
sub
fs
sub
and
cmpsb
jae
loope
call
roll
les
xchg
shll
imul
sti
add
in
mov
inc
in
jbe
test
js
sbb
and
sub
push
mov
mov
mov
xchg
adc
ret
stos
vandnps
insl
nop
dec
push
jmp
test
scas
mov
cmp
add
pop
inc
xchg
fisubrl
in
mov
mov
orb
jg
cli
jns
jb
in
aam
add
movl
push
sub
aam
out
pop
loope
imul
sahf
and
movsb
add
sbb
adc
push
ret
outsb
insb
mov
test
mov
add
xchg
insl
push
insb
lock
loope
jl
sahf
cmp
sbb
sub
xor
inc
xor
das
xor
fcmovnu
mov
out
cmp
enter
nop
ret
cmp
push
or
cmp
scas
testb
popa
xchg
xor
jl
inc
lret
enter
xor
test
add
fmull
loope
sbb
sahf
xchg
and
jle
adcb
fs
xchg
pop
fidivrs
xor
aam
lea
jmp
cmp
addb
mov
fdivp
pop
out
add
pop
ljmp
ds
mov
dec
adc
xchg
and
in
xor
mov
sub
push
mov
out
add
and
lret
cwtd
mov
sub
mov
inc
mov
popa
mov
inc
jns
movsb
mov
push
pop
xor
insl
das
lods
cmpb
rcrl
out
js
xchg
pop
push
inc
xchg
outsb
les
inc
cmp
gs
test
repnz
sbb
xor
xor
mov
inc
pop
rep
inc
insl
stos
shll
add
loop
adc
jae
cmp
cld
mov
jno
push
fwait
mov
cli
js
ss
movsb
jne
ss
fmuls
push
pop
repz
pushf
jmp
sbbl
mov
push
jmp
jp
inc
rclb
mov
push
mov
fidivs
nop
xor
dec
imul
rcll
std
shlb
add
orl
adc
or
cltd
hlt
fwait
inc
stc
pop
and
sbb
jne
test
pop
pop
stos
sbb
fwait
les
dec
fildll
nop
jle
dec
add
lock
pop
leave
push
test
adc
xor
push
pop
dec
loopne
in
xor
push
sub
and
inc
jno
loope
lret
leave
inc
mov
cld
adc
xchg
in
daa
cmp
mov
enter
jg
inc
mov
fistpl
or
neg
cmp
repnz
xor
sub
cmp
jmp
stc
cmp
into
fmull
sub
fisubrs
push
xchg
lock
rcr
or
rcrb
imul
cmc
clc
les
inc
push
cmc
jbe
dec
fldcw
hlt
das
xor
cmp
in
mov
int3
das
cmp
push
out
inc
jo
add
xor
test
xchg
mov
cwtl
ficomps
lahf
pcmpeqb
or
push
scas
test
inc
js
mov
and
aas
sar
xor
fnstsw
sub
sub
iret
and
fistl
sbb
jle
push
nop
lret
cmp
mov
cmp
lahf
sub
out
add
sbb
xchg
loope
int
dec
js
pop
push
int3
sub
sbb
mov
insl
movsl
xchg
and
sub
inc
and
jmp
test
jno
push
add
imul
xor
mov
or
pop
inc
jg
in
in
in
xchg
push
push
roll
jge
testl
in
cmp
dec
loop
jbe
adc
push
scas
cmpsl
into
rolb
jo
es
jne
and
lds
test
test
mov
fdivs
xchg
out
movsb
fldt
test
jge
push
movsl
or
loopne
xor
gs
cwtl
jp
int
and
lods
stos
lret
jb
into
sbb
jbe
call
mov
add
or
out
add
cwtl
repnz
jae
sub
fildl
adc
jg
sti
aad
jecxz
cmpsl
hlt
mov
out
aas
dec
sbb
mov
jge,pt
cmp
scas
cmp
cwtl
adcl
mov
inc
std
jge
jmp
push
fldt
lahf
adc
loop
lods
and
pop
and
cld
mov
lds
nop
je
dec
js
mov
je
call
push
cs
pop
jns
enter
insb
pop
push
sbb
mov
xchg
cmp
dec
jne
xor
addr16
shlb
xchg
xor
aad
movsl
pop
fwait
in
mov
sahf
call
mov
fsubl
mov
pop
fnstsw
sub
and
or
sub
push
ror
in
xor
leave
push
mov
xor
leave
clc
sub
test
lret
les
add
xchg
lock
data16
cmp
mov
mov
pop
ds
adc
xor
cmp
sarl
sti
loopne
imul
shlb
test
xchg
fwait
push
stc
in
ror
pop
xchg
sbb
cmp
or
movsl
movsb
add
push
aad
outsl
rolb
std
loope
ja
data16
sub
shlb
fbstp
jmp
inc
cwtl
hlt
xchg
ljmp
shll
arpl
std
pusha
dec
rorl
inc
jle
int3
adc
dec
xchg
pop
ret
ja
dec
leave
repnz
jl
js
jge
xor
lock
and
stos
lds
dec
nop
sub
cmp
das
lea
or
std
inc
cmpsl
cli
ficompl
xchg
jmp
jo
mov
addb
jmp
mov
mov
push
push
dec
repz
pop
mov
jl
test
push
sbb
mov
adc
pop
push
adc
pop
inc
sub
push
pop
adc
cmc
jns
aas
jge
push
lret
ret
dec
jo
jmp
outsb
sbb
add
push
pop
iret
and
sbb
xchg
and
ja
mov
jmp
and
daa
pop
mov
ljmp
mov
call
movsb
cli
jmp
add
lock
cmp
cs
adc
jmp
add
and
movsb
xchg
fsubl
mov
sub
jo
gs
gs
cmpsl
lods
test
add
jge
sub
out
mov
pop
out
shlb
rcll
std
daa
cmpsb
lea
lea
mov
xor
sti
jne
mov
imul
and
xchg
nop
stos
int
insb
xchg
lret
dec
icebp
icebp
xchg
cmp
hlt
lds
mov
sbb
popa
test
xchg
clc
aad
xchg
in
aam
popf
or
ss
mov
sarl
decl
pop
cmp
mov
incb
lods
jg
rclb
shrl
xchg
push
push
lret
pop
mov
gs
sbb
cli
xor
flds
and
xchg
sub
push
xor
mov
out
jp
ljmp
addr16
adc
push
nop
cmp
push
cmp
jo
inc
adc
addr16
divl
pushf
popl
mov
adc
adc
push
movsl
aad
stos
fwait
in
scas
lds
sub
mov
push
adc
mov
lret
push
mov
push
js
sub
lahf
sbb
fnsave
push
cmpsb
cltd
insb
cmp
std
mov
imul
lods
adc
push
into
mov
sbb
outsl
cld
inc
repnz
outsl
sti
movsb
xchg
push
push
pop
jl
ds
push
fwait
bound
sbb
xor
jo
xchg
mov
cld
cltd
loope
cmc
les
sbb
add
or
and
mov
jmp
rol
das
jmp
incl
loopne
xchg
add
mov
popf
adc
mov
std
adc
push
sahf
xchg
jmp
call
subl
icebp
test
aam
jns
or
dec
sbb
dec
xlat
sti
push
and
loope
aad
or
dec
mov
inc
cli
jmp
movsb
and
dec
cmp
insb
flds
push
stos
push
jmp
subl
add
adc
xchg
outsl
lahf
sbb
ss
mov
add
sub
mov
clc
xor
jge
sbb
add
iret
inc
mov
fmuls
sub
dec
aas
adc
xor
jle
pop
fnstsw
lea
mov
ljmp
mov
mov
les
movsl
out
shr
popf
inc
push
push
xor
fbld
dec
call
inc
jp
dec
int
outsb
sbb
dec
mov
inc
cmp
loopne
mov
fadds
lods
mov
leave
mov
inc
in
cmp
sbb
sub
cmpsl
mov
leave
jcxz
dec
fwait
das
testl
sub
out
addr16
and
mov
push
and
out
jae
or
aam
jno
mov
cmpl
fiadds
cmp
ret
repnz
dec
mov
jns
cmp
dec
rcl
sbb
test
clc
jecxz
jl
imul
push
gs
sub
mov
out
repnz
jl
in
jbe
sbb
push
int3
scas
out
aad
push
mov
cmc
addr16
dec
adc
lods
mov
in
dec
in
cmpsl
jp
in
xor
ljmp
push
cli
jmp
mov
inc
inc
stos
mov
cmp
out
out
fstpl
pop
cmpl
xor
jae
jb
mov
pop
jecxz
xor
bswap
push
push
mov
xchg
aam
cli
cli
push
jg
mov
mov
insl
dec
xor
fs
enter
rcr
pop
arpl
sarb
enter
dec
aad
xchg
push
mov
adc
dec
xor
filds
pop
je
fadds
inc
adc
inc
and
gs
dec
imul
lock
sub
jecxz
mov
pop
jnp
sub
jmp
xchg
dec
cli
pop
imul
push
fimuls
fwait
or
movsb
mov
std
dec
push
mov
les
lods
xchg
add
xor
das
int
fcoml
and
sub
pop
into
and
mov
or
xorb
pop
divb
and
mov
add
clc
pop
sti
call
and
popl
adc
nop
sub
cmp
xor
clc
jge
rolb
adc
pop
fwait
push
adc
cmp
in
into
add
mov
and
out
pushf
mov
cltd
aas
shll
out
adc
leave
fcompl
mov
or
in
jnp
xchg
fsubl
push
popf
loope
test
shlb
push
lods
aaa
or
sbb
add
pusha
adc
push
xlat
stc
inc
mov
ret
cmp
outsl
push
dec
movsb
push
jo
mov
stc
inc
dec
mov
dec
mov
dec
ljmp
popf
leave
fs
daa
cld
imul
sbb
out
rol
dec
fbstp
sbb
xchg
adc
mov
fsubp
push
sbb
fs
mov
add
sbbl
fldl2t
push
orl
add
lahf
daa
popf
out
jecxz
pop
movsl
cmc
stos
jg
cmp
and
fwait
shrb
adcl
aam
std
xrstors
adc
je
test
rcl
fildl
pop
test
test
in
call
cltd
push
dec
or
lret
adc
pop
lret
inc
mov
mov
xor
mov
sbb
mov
insl
adc
pop
and
add
adc
jb
stos
sub
lret
mov
decb
mov
test
dec
add
call
dec
daa
jle
insb
xorb
stos
arpl
std
sbb
leave
fstpt
addr16
test
stos
test
cwtl
popa
push
pop
pusha
inc
jg
mov
sub
xor
pusha
js
movsb
movsl
pop
xorl
shrl
xor
jns
incl
adc
inc
int3
call
out
dec
dec
dec
sub
add
sbb
popf
popf
adc
in
mov
sub
or
cmp
jp
mov
add
aam
das
inc
jne
push
aad
mov
pop
pop
fs
mov
push
movsb
enter
jno
out
xchg
xorl
js
pop
imul
dec
inc
xchg
sub
xor
ss
pusha
push
outsl
mov
push
mov
xor
setle
pop
dec
sub
pop
incl
xchg
mov
pop
and
in
nop
dec
mov
lock
pop
inc
mov
mov
std
pop
out
das
mov
call
push
jp
jae
jg
cld
dec
add
lcall
js
fwait
and
jne
add
stos
and
mov
cmp
sub
cmc
fistl
xchg
adcb
jae
pushf
cltd
push
stc
push
int
test
cmp
sbb
popf
mov
dec
or
sarl
aaa
cmp
lods
inc
lea
xchg
xchg
mov
jbe
push
jge
adcb
mov
and
imul
mov
pop
mov
repnz
mov
movb
dec
leave
jp
cwtl
mov
jmp
sbb
lock
sub
push
mov
movsb
call
xlat
mov
daa
cltd
jmp
out
bound
mov
outsb
jg
sbb
jmp
shlb
dec
in
icebp
xchg
mov
cmpsl
add
stos
mulb
mov
jo
out
mov
int3
outsb
addl
inc
mov
lcall
mov
lods
mov
xor
dec
jbe
aas
lods
bnd
lret
pop
adc
add
sub
sub
js
aad
mov
xchg
pop
pop
push
add
xchg
jae
lods
rcll
sub
add
pop
lock
xor
add
xchg
inc
and
and
insl
push
jae
xor
cmp
jbe
mov
out
ficompl
cmp
and
lret
cmp
adc
xchg
jecxz
jl
outsb
adc
ret
mov
test
jg
js
out
pop
sub
iret
pop
jle
in
sub
push
insb
lods
cmp
imul
mov
push
out
fcoms
loopne
push
outsb
aas
pop
test
pop
mov
cmp
call
push
xchg
dec
push
mov
push
cld
mov
call
loopne
cltd
xchg
hlt
push
pop
xor
mov
cld
xchg
ja
adc
cmp
cmp
or
pop
aad
sbb
mov
test
push
mov
cmp
adc
idiv
mov
cmp
sarl
adc
popf
testl
fisubl
sarb
je
out
sub
cmc
jae
sbb
ljmp
or
push
mov
xchg
dec
sbb
add
fistps
jecxz
ss
out
dec
loopne
std
mov
ret
dec
mov
adcb
fisubrs
insb
adc
lods
clts
mov
iret
insl
bound
rcrl
ds
jg
out
mov
and
and
mov
mov
rcrb
pushf
or
jae
or
ja
loopew
rorb
leave
jb
add
push
mov
mov
sub
std
les
pop
shr
add
jns
out
inc
lds
fcompl
shlb
jnp
insl
jns
into
pop
xchg
sub
enter
fidivrs
loopne
add
mov
dec
in
sub
lds
addl
cmp
fldt
sub
jmp
lret
jge
push
and
out
cmp
add
das
mov
xor
dec
je
jecxz
sub
mov
jg
add
xchg
xchg
xor
movsb
clc
loop
xchg
testl
mov
in
dec
enter
xchg
iret
cld
enter
and
xor
cmc
jns
xchg
adc
sub
pusha
xorb
mov
sub
in
std
xchg
rcrb
sub
mov
push
jg
xlat
inc
add
mov
test
push
dec
adc
out
stos
mov
lcall
shrl
cmpsb
sub
ds
add
sbb
fldcw
call
and
pusha
xlat
xchg
bound
jecxz
cmp
mov
in
pop
and
lods
out
inc
ja
inc
out
sub
xor
cltd
adc
addb
xchg
pusha
in
jmp
dec
xchg
add
fs
adc
clc
ds
jb
cmp
cmp
and
jecxz
push
add
or
in
xlat
and
adc
push
add
jmp
add
dec
mov
dec
popf
ja
loope
mov
insb
xor
in
push
fiaddl
cli
and
fstpl
out
pop
cmp
xor
repz
gs
dec
mov
stc
sub
xchg
push
xchg
jmp
and
ss
add
xchg
lds
out
mov
xchg
icebp
add
idivl
aas
cltd
sub
fwait
add
cmp
aas
sti
mov
dec
pop
mov
jno
int3
inc
out
outsb
cmp
addr16
fcmovne
scas
ss
lcall
cwtl
cld
mov
inc
cmp
ds
adc
ror
sbb
leave
imul
cmpsb
cmpsb
dec
clc
cs
dec
test
repnz
cltd
push
mov
leave
rclb
jge
lret
xor
andb
mov
lock
cmp
subb
inc
xchg
xchg
test
sub
test
loop
addb
shrb
stc
or
mov
jecxz
xor
test
scas
ds
out
or
adc
repnz
mov
pop
imul
mov
cmp
js
lret
fsubrs
add
outsl
popl
pop
sahf
mov
xor
insb
add
mov
rcll
rcrl
dec
mov
or
dec
sbb
aas
outsl
push
std
add
sub
imul
or
adc
sbb
pusha
or
in
and
cmp
add
inc
xchg
inc
sub
pop
mov
and
xor
and
mov
mov
addr16
test
rcl
pusha
lret
mov
mov
bound
xchg
dec
pcmpgtb
movsb
xor
loopne
jle
dec
jp
mov
xor
cld
xchg
movsb
inc
test
mov
dec
addb
xchg
jl
int
or
cmc
in
pop
and
bnd
mov
scas
adc
push
shlb
pop
adc
fisttpl
xor
or
jo
leave
daa
das
mov
cli
xchg
ret
lods
cmp
mov
and
out
popa
sbb
stos
inc
push
dec
dec
mov
mov
cmc
adc
jae
sub
jecxz
mov
push
xchg
xchg
jo
ja
inc
sub
jnp
push
adc
jg
shr
ja
dec
mov
push
stos
push
and
mov
mov
call
push
cmpl
xchg
mov
aaa
jle
lret
or
scas
popf
test
test
xchg
xor
add
dec
rcr
into
arpl
dec
outsb
jne
xor
fabs
aad
fyl2x
iret
cli
sarl
xchg
inc
cwtl
stos
mov
icebp
in
mov
les
out
es
popf
enter
mov
inc
mov
popa
or
and
sbb
push
cli
xchg
inc
fldenv
dec
sub
andl
mov
add
stos
dec
loopne
addr16
outsb
adc
into
fwait
inc
daa
push
push
sub
and
cld
lret
sbb
and
push
lahf
call
movsb
clc
test
push
sub
lcall
cmpsb
xor
out
popa
xchg
stos
sub
xor
aas
mov
jne
xor
xor
jg
cmpsl
in
stc
and
push
or
add
bound
int
inc
dec
sahf
inc
push
xchg
dec
mov
js
int3
mov
outsl
xor
into
test
cmp
test
adc
ret
and
out
pop
leave
add
xchg
add
xlat
clc
test
std
ret
or
arpl
shll
inc
out
pushf
jbe
lods
xchg
sar
sarl
cmc
dec
shr
shrb
rcll
mov
push
imul
inc
ja
dec
cmp
les
or
add
xchg
rorl
inc
jns
outsb
push
pop
adc
lea
xlat
daa
lds
fistps
jo
dec
adc
mov
int3
jecxz
ljmp
mov
jne
stos
sbb
mov
aas
pop
ss
dec
mov
xlat
mov
andl
jecxz
ficoml
add
push
int3
mov
jnp
out
or
sbb
ret
mov
jmp
mov
mov
test
ja
dec
outsl
fdivrl
and
and
sub
in
cld
or
mov
cmc
sbb
ret
icebp
icebp
xchg
loope
dec
lock
xlat
mov
cmpsb
int
cmpb
inc
jnp
or
gs
push
inc
arpl
pop
xchg
lea
ds
jg
cltd
adc
mov
jae
sub
inc
mov
mov
mov
push
and
cwtl
add
jnp
inc
es
and
bswap
sahf
jno
mov
jg
sub
dec
in
in
mov
insl
mov
int3
push
fsts
in
inc
outsl
ss
cwtl
mov
mov
cmp
packuswb
mov
or
cs
sbb
xlat
pop
in
not
xor
fwait
cmpsb
cmp
testb
pop
and
dec
mov
inc
add
pop
lret
pop
subb
add
jns
cltd
sbb
xor
cmc
loop
aam
sub
shrl
fists
xchg
cwtl
mov
and
pusha
and
cmpsb
inc
lcall
xchg
data16
stc
jb
push
push
clc
call
test
jle
fwait
repnz
dec
or
rolb
hlt
cmp
mov
xchg
test
or
push
cmpsb
mov
adc
out
int3
push
stos
out
cmpsl
adc
jb
into
xchg
insb
add
sub
jo
call
aad
push
cmp
lods
sub
les
jns
cmpsl
pusha
jg
mov
add
rcl
push
nop
in
pushf
xchg
adc
inc
in
aaa
xlat
loop
mov
aas
mov
std
stos
xchg
test
sbb
and
xchg
rcrb
cmp
cmp
es
mov
outsl
mov
jmp
cmp
push
ret
and
outsl
mov
cmp
jns
jbe
dec
mov
ret
xchg
lock
mov
mov
aaa
stos
mov
adc
adcb
sti
sahf
lds
mov
jge
add
mov
cmpsb
pop
andl
pop
pop
enter
rcrl
adc
push
and
xchg
inc
roll
mov
xor
adc
hlt
push
addr16
pop
stc
fnstsw
bnd
or
adc
xor
xchg
jge
pop
mov
movlps
mov
push
push
sub
mov
xor
lret
mov
push
xor
push
ss
mov
mov
jge
test
into
dec
push
arpl
xor
scas
push
mov
push
jne
test
aad
add
mov
test
bound
addr16
leave
fimull
into
outsl
in
repz
out
add
cli
dec
in
mov
jmp
dec
adc
cmp
notl
adc
lret
add
dec
orb
sub
psllw
adc
jg
bound
pop
orl
add
dec
xlat
insb
testb
andb
pop
mov
push
jg
lods
or
roll
inc
addr16
or
push
and
mull
adc
mov
pop
sbb
pushf
cmp
test
mov
pop
or
mov
hlt
cmp
ret
cmpsl
push
fimuls
daa
pop
daa
mov
xchg
xor
popa
fisubl
insl
or
imul
test
or
cmc
sub
std
es
mov
ffreep
pop
pop
pop
mov
mov
out
jnp
mov
lret
cld
mov
ja
stc
pop
nop
daa
pop
sbb
dec
mov
mov
shlb
mov
insb
push
enter
popa
iret
cwtl
jmp
in
clc
jmp
xor
push
xlat
mov
xor
lcall
bound
sbb
mov
xchg
mov
mov
add
mov
test
mov
call
in
ss
int3
ret
hlt
jl
loop
outsb
xchg
push
lahf
aad
test
or
or
xlat
fdiv
ljmp
fwait
bnd
dec
stos
mov
jae
mov
cmp
stc
scas
push
xchg
mov
adc
cmp
or
in
cmp
jmp
shrb
js
push
jge
push
cmp
loop
repz
mov
pop
xor
push
pop
out
insl
cmp
cmpsl
sti
lods
cmp
iret
inc
or
popa
cli
sbb
mov
sbb
lcall
adc
xor
jns
pop
inc
dec
adc
and
adc
int
sub
pop
imul
stos
int
fildll
test
jno
cmc
je
push
mov
or
jae
dec
mov
int
jns
cmpl
sahf
aad
cwtl
push
mov
adcl
cwtl
add
inc
aaa
rclb
outsl
neg
jae
pop
cmpsb
pushf
je
xchg
stos
shrl
andb
ljmp
push
xlat
je
loopne
es
jg
adc
cs
es
xor
incb
push
push
cld
mov
mov
mov
mov
cmp
paddusw
cs
imul
push
arpl
roll
call
jmp
add
loop
pop
xchg
pop
int3
inc
cmp
adc
cmpl
je
ljmp
add
pop
sub
or
loope
cmovne
mov
mov
xlat
cld
pop
and
imul
jmp
jmp
cmp
push
adc
xchg
xchg
push
pushf
repz
adc
insl
jge
dec
mov
add
testl
enter
adc
test
stc
mov
loop
or
pop
add
jmp
icebp
popa
cs
xor
arpl
mov
pop
cmp
sbb
in
adc
lcall
jecxz
int3
mov
cwtl
xor
mov
repz
xchg
aam
xor
jmp
adc
mov
test
out
xchg
jae
rorl
es
jb
mov
xchg
aam
nop
shrb
mov
sub
inc
jmp
imul
ja
hlt
jne
jmp
and
loop,pn
test
jo
inc
aam
xchg
jns
jbe
repz
push
xchg
loope
mov
mov
mov
sub
imul
stc
and
mov
cld
or
imul
cmp
ficoml
das
dec
inc
xchg
sub
mov
pop
out
daa
arpl
jl
movsb
mov
lea
mov
cmp
rcl
jo
jle
fimuls
add
lds
lahf
fs
sbb
lods
sbb
leave
sti
dec
or
jl
mov
out
xchg
lret
push
fmuls
sub
mov
ror
sbb
pop
adc
int
mov
push
dec
gs
leave
lahf
inc
movsb
pop
fistps
sbb
js
or
mov
dec
inc
adc
fbstp
sbb
jl
pop
sbb
jae
xchg
in
cmpsb
inc
lods
lcall
pop
adc
dec
add
arpl
dec
xor
vmulpd
cmp
cmp
inc
lahf
and
out
mov
push
sub
sub
or
add
sub
pop
pusha
lret
loop
mov
test
and
test
cmp
mov
in
imul
pop
sbb
mov
test
call
mov
lods
aad
into
ficoms
dec
xchg
addr16
cltd
push
out
cld
mov
arpl
shlb
push
sbb
push
movb
sub
jg
sbbl
sbb
enter
cwtl
cmc
or
xchg
std
xlat
lcall
outsl
pop
jmp
test
mov
and
inc
adc
popa
xchg
imul
dec
add
ljmp
inc
cmp
mov
cmp
adc
jle
sbb
mov
and
iret
fucompp
add
sbb
mov
jecxz
sbb
outsl
out
sti
cmp
xlat
push
mov
cmp
mov
into
iret
sub
pop
jmp
xchg
mov
add
push
bound
push
add
push
addr16
cmpsl
xor
mov
mov
out
fs
sub
inc
mov
fistpll
xchg
fs
sbb
movsb
mov
mov
mov
cld
jnp
xchg
repz
loopne
inc
ljmp
mov
aas
push
inc
test
repz
das
fdivr
inc
cltd
dec
sti
sbb
sub
aas
inc
outsl
test
sub
push
lods
or
pushf
aad
or
mov
cmp
xlat
jmp
imul
mov
mul
inc
lods
mov
jae
push
pop
xor
add
or
test
notb
xor
sbb
inc
je
pushw
mov
jno
or
movsl
xchg
scas
mov
js
in
clc
repnz
mov
sbb
fmull
fld
hlt
pop
cmpsb
cmp
test
fisubl
jns
nop
scas
pop
loope
int
mov
mov
cmc
xchg
pop
lock
mov
push
mov
addr16
pop
xor
aaa
popf
push
xlat
and
jecxz
or
clc
das
lods
adc
pop
sbb
jno
mov
mov
addr16
lcall
and
xchg
mov
xor
cmp
dec
add
xchg
pop
cli
and
inc
jle
mov
aas
stos
gs
push
test
push
insb
inc
pop
lcall
arpl
shrb
xor
jbe
rclb
stos
and
mov
mov
or
mov
and
push
sbb
mov
movsl
adc
rcrb
mov
jmp
or
mov
shlb
jmp
repz
mov
lret
es
pop
loopne
cmpb
movsb
cmp
gs
xor
icebp
xchg
inc
ljmp
repnz
mov
dec
mov
int3
shll
inc
mov
lea
pop
in
in
cmp
in
push
inc
cwtl
xchg
jo
stos
lea
add
push
imul
imul
xor
pop
inc
stos
stc
lret
xchg
mov
cmp
xchg
cmp
add
cwtl
mov
cmp
adc
inc
cs
lret
push
ljmp
test
arpl
dec
cwtl
cmp
ss
lret
cmpsl
ds
xchg
stos
push
xchg
mov
push
clc
mov
mov
jle
insb
testb
mov
aad
mov
rcrl
mov
xor
sub
mov
out
scas
jl
or
adc
out
rolb
inc
ljmpw
sbb
gs
dec
mov
xor
rol
orl
adc
fidivs
adc
pop
add
dec
aam
pop
fisubrs
push
movsl
adc
add
dec
ljmp
imul
ret
pop
fs
repnz
roll
scas
aad
movl
push
mov
lock
outsb
mov
mov
outsb
jl
in
push
add
cld
mov
shrl
rorl
loop
outsl
mov
cmp
sti
push
xor
gs
xlat
dec
xor
adc
out
jbe
add
sahf
cltd
lahf
fwait
sbb
mov
shll
push
call
push
push
shrl
mov
gs
bound
cmp
pop
jp
adc
dec
seta
or
in
mov
lcall
shrl
pop
mov
fwait
push
shrl
push
inc
gs
movsl
data16
out
pop
mov
jae
ja
fldcw
insb
xor
lock
mov
mov
xchg
sbb
and
jno
sub
rcrb
jecxz
in
or
loop
dec
daa
add
imul
mov
jge
and
mov
xchg
mov
pop
sub
jo
imul
clc
push
and
lcall
ja
dec
xchg
add
repnz
jg,pn
in
inc
push
scas
xor
pop
pop
dec
outsl
ljmp
pop
cwtl
mov
mov
mov
jg
jo
pop
jo
ds
cmp
subb
outsl
iret
ret
int3
icebp
push
jge
sbb
mov
aad
add
fcompl
je
add
cmp
adc
mov
sub
aas
push
push
lods
pop
out
enter
sbb
subb
or
out
and
push
jno
sbbl
and
popa
adc
outsl
inc
inc
loop
sub
inc
lea
rcll
ret
pop
adc
lea
fstl
daa
outsl
movsb
loope
jmp
mov
pop
aas
iret
xor
fs
pushf
outsl
loop
shlb
fs
daa
ljmp
mov
fstp
outsb
aas
je
fisubrl
mov
inc
push
sbb
xchg
pop
pop
or
dec
add
hlt
xchg
push
jbe
movsb
adc
jp
add
sbb
lahf
rsqrtps
push
xchg
ja
cld
in
mov
dec
or
inc
xor
hlt
sub
arpl
gs
das
push
push
std
add
jge
ret
mov
leave
outsb
pop
aad
dec
xchg
sub
fistpl
cmpsl
gs
lea
stos
arpl
or
rcr
addl
pop
or
rcrb
cli
pop
jns
dec
aad
dec
test
xorl
jns
popf
jbe
dec
jb
mov
ret
pop
jge
dec
push
or
cmp
jle
jns
jne
mov
hlt
or
gs
lret
in
mov
das
out
in
pop
in
in
test
push
es
test
add
jl
push
inc
in
insl
add
rorb
xor
pop
jecxz
ss
xlat
push
test
pop
hlt
fcmovnbe
movsl
mov
inc
loope
imul
pop
popa
sarb
ret
testl
sub
pop
sbb
lods
sarb
adc
inc
mov
mov
lock
lock
cmpsb
incl
icebp
daa
jne
ljmp
pop
lcall
cmp
repz
xchg
pop
dec
dec
addr16
outsb
lock
leave
jbe,pn
cmp
add
cmp
in
jmp
out
dec
cmp
xchg
aam
mov
adc
sub
dec
sub
movsl
fstpt
aad
or
lods
sub
mov
pop
hlt
cmp
pusha
cmp
adc
xor
cmpsl
xor
dec
push
call
daa
lea
imul
insb
mov
push
cli
sahf
jnp
or
repnz
jb
sbb
fcomps
ljmp
sbb
ret
leave
fdivl
aaa
push
lret
test
jnp
add
aam
push
push
or
dec
pop
xchg
pop
add
aad
call
jl
mov
aas
mov
gs
sub
rcrl
cmpl
nop
xor
lret
add
or
sbb
jp
mov
sbb
pop
mov
sbb
jg
imul
mov
xchg
insl
jl
sti
stc
mov
adc
aaa
push
and
das
lock
xlat
add
sub
aaa
sahf
jg
dec
mov
ret
xor
xchg
out
xlat
mov
sbb
push
cs
cmp
fimuls
pop
pop
adc
sub
pushf
mov
sbb
pop
stos
cmc
or
inc
push
push
add
popa
stos
or
aad
xor
lcall
xlat
add
movsl
xorl
cmp
rorl
sbb
imul
or
jp
out
test
daa
xchg
js
mov
rolb
ret
filds
and
stc
call
mov
dec
les
daa
mov
sub
cli
xor
cmp
xor
ja
add
inc
sbb
rolb
jnp
cmp
les
and
lods
adc
adc
inc
xchg
in
loope
fisttpll
les
or
test
or
sti
or
aaa
sahf
inc
and
call
jecxz
clc
mov
mov
std
loop
mov
cli
fstps
stos
dec
dec
pushf
add
dec
sub
mov
insb
mov
pop
mov
daa
jae
fiadds
dec
aaa
mov
into
loopne
xchg
cltd
lea
jmp
addb
cli
out
jge
pushf
and
adc
inc
pop
pusha
insl
xchg
dec
jbe
dec
inc
loop
aas
loope
jbe
rcr
jo
orl
jl
enter
fst
mov
mov
mov
pop
test
pavgw
popa
xchg
mov
pop
dec
stos
ja
sub
sbb
lcall
inc
or
mov
aad
outsl
pop
data16
iret
cmp
fidivrl
sbb
pop
fucom
aaa
call
loopne
inc
inc
dec
xor
adc
out
bound
mov
in
add
sahf
push
mov
gs
cli
jecxz
ja
sub
test
jno
pop
inc
and
mov
mov
scas
adc
into
push
inc
test
mov
das
cmpsl
dec
sbb
in
and
cmpsb
mov
insl
dec
mov
jo
xchg
es
bound
clc
cmp
popf
bound
adc
leave
mov
dec
cld
pusha
out
add
inc
cmp
pop
xor
pushf
mov
jle
pop
xor
cmp
mov
or
mov
loop
je
mov
iret
push
loopne
popa
clc
pushf
mov
mov
sub
lcall
aam
movsl
test
lret
xlat
subb
mov
lcall
bound
xor
cmc
mov
mov
sbb
fisubs
pop
sarl
cmpsl
stc
pop
inc
out
push
lods
jbe
pop
clc
orl
movsl
in
sahf
mov
or
sahf
add
pusha
jno
cmc
cwtl
insl
pushf
and
cltd
sub
mov
hlt
sarl
insb
pop
and
add
cmp
fs
push
pop
xchg
imul
sub
js
sbbl
jmp
mov
inc
and
cmc
ljmp
lret
push
pop
mov
mov
sub
add
mov
inc
repnz
jb
fs
pop
cmc
push
mov
outsl
xchg
push
jle
pop
pop
jbe
jg
sub
popf
aaa
std
mov
sub
cmp
mov
and
cltd
lcall
insb
jae
adc
sahf
pop
cmpsl
jecxz
jecxz
dec
divb
popa
jge
mov
xchg
imull
lcall
inc
jl
fwait
loope
xor
xchg
out
insb
jbe
insb
test
int
pop
popa
push
pop
jne
pop
and
inc
int3
sbb
cltd
xor
xchg
or
sahf
mov
imul
inc
out
add
aam
mov
loopne
out
jge
or
and
arpl
in
aas
xlat
cld
xor
lds
mov
aad
adc
icebp
rcrb
pop
out
fwait
pop
in
mov
leave
mov
test
xchg
icebp
stos
lret
add
js
loop
xorb
push
mov
mov
sarl
xor
xor
les
leave
inc
xchg
in
cld
daa
mov
mov
pop
insb
fld
and
push
pusha
mov
loope
mov
cmpsl
pop
sub
lock
aas
test
or
push
and
adc
jge
and
xlat
adc
loopne
and
mov
inc
ret
mov
lret
fists
fwait
mov
shl
adc
and
cmp
daa
cmp
dec
sti
test
pop
aaa
push
pop
out
cld
xchg
mov
fs
cmpsb
imul
add
jno
xchg
insb
stc
mov
push
into
sti
pop
stc
jmp
lods
add
mov
inc
xor
mov
dec
hlt
pop
hlt
adc
xor
nop
and
je
pop
ds
loop
loop
clc
aad
pusha
movd
adc
scas
mov
push
je
leave
mov
dec
push
jle
jmp
inc
ret
inc
aam
movsb
cmp
and
cmp
xchg
das
popf
xor
sub
xor
xlat
dec
inc
out
xchg
popa
inc
inc
ds
loop
gs
inc
popf
fs
lret
ret
stos
add
jg
test
add
or
pop
sbb
mov
fdivrl
mov
cmp
jmp
sbb
cwtl
add
or
aas
mov
and
fbstp
iret
out
or
xor
mov
jmp
lret
xchg
cmp
xor
sti
mov
add
jno
std
addr16
lock
imul
or
iret
mov
mov
and
movb
jecxz
adc
arpl
ror
sub
sub
or
jne
jo
or
cmp
out
enter
test
scas
ffree
jge
test
mov
mov
dec
mov
pop
outsl
mov
test
mov
inc
filds
les
push
rorb
push
in
lret
inc
mov
adc
int
rol
dec
call
das
cmp
dec
stos
subb
inc
mov
fstpt
xchg
inc
mov
loop
adc
xchg
sub
fcompl
cwtl
mov
das
xor
and
rorl
sub
test
or
cmp
push
pop
lret
push
xchg
sub
aas
pop
sub
inc
nop
xchg
je
xchg
and
cli
fucomp
mov
push
xchg
jecxz
fisubs
sub
xlat
jge
shlb
mov
sub
dec
cmp
push
iret
out
testl
incb
push
jno
and
add
movsl
dec
sbb
xor
in
inc
mov
mov
and
iret
sub
push
dec
incl
outsb
in
pop
jmp
mov
cmpsl
inc
rcr
clc
pop
jp
daa
loope
inc
fdivrs
push
ret
xchg
sti
mov
ja
mov
mov
and
dec
inc
lret
enter
out
fcoml
and
insl
ret
pusha
out
cli
cmc
push
and
pop
mov
add
sub
mov
mov
xchg
xchg
cmp
jo
lock
xchg
in
aas
je
push
xor
lret
lret
xor
jno
sbb
push
push
dec
call
push
mov
ret
pop
sti
mov
cmpsb
sti
adc
sbb
sbb
or
jae
jb
mov
or
lcall
insw
ret
and
lds
xchg
mov
adc
test
ret
jae
mov
cmpsb
mov
cmp
mov
into
addr16
jmp
es
or
xor
lock
cmpsb
pushf
xchg
int3
imul
pop
pop
leave
lock
mov
push
jno
ja
cs
imul
cmp
xor
jp
das
lcall
ret
stc
push
out
aam
inc
outsb
mov
out
mov
scas
loopne
stos
icebp
sbb
filds
lods
mov
imul
leave
or
add
mov
and
or
mov
mov
lahf
mov
fisttpl
mov
test
mov
add
bound
fcmovnb
mov
incl
scas
push
pop
inc
js
insb
xchg
cmpsb
xor
pop
jo
loopne
inc
arpl
xor
hlt
mov
inc
mov
adc
jns
and
int3
cs
xchg
and
fwait
add
dec
outsb
fisttpll
fstpt
stos
outsb
xor
cmpb
lock
call
sub
in
rclb
syscall
aaa
mov
ljmp
les
es
mov
sub
jmp
pop
add
test
daa
movsb
loopne
pop
addr16
rorl
push
dec
mov
movsb
ja
call
mov
adc
add
and
das
xacquire
jo
pushf
loope
in
popa
rolb
fistps
rcll
or
mov
negl
cmp
mov
or
xchg
je
movsl
enter
jo
push
mov
push
and
xor
int3
je
mov
leave
push
xchg
fbld
outsl
mov
lods
out
push
cmpsb
pusha
popf
xor
shl
leave
add
enter
out
aaa
add
mov
adc
aaa
push
mov
sbb
cmpsb
inc
and
pop
add
popf
lcall
jb
adc
xorb
fmuls
adc
sahf
fistpll
pop
hlt
inc
push
push
inc
cmp
nop
dec
cmp
push
jp
xlat
mov
mov
mov
inc
xor
mov
outsl
popf
mov
insl
sub
add
clc
push
dec
or
ret
adc
adc
jecxz
imul
fdivr
push
lods
aam
mov
fistps
cmpsl
into
mov
sbb
mov
outsb
adc
mov
insl
sub
push
test
dec
add
xor
push
and
jmp
mov
sub
xor
dec
xor
popf
lods
xchg
nop
aaa
lods
fs
scas
mov
mov
and
adc
mov
adcl
adc
xor
jp
je
jecxz
sub
pusha
aam
pushl
mov
loopne
pop
fstpt
pop
fistpll
adc
jae
mov
xchg
lods
jns
fistpll
push
imul
clc
add
add
rorl
rorb
xchg
cmp
mov
negb
dec
cmp
and
cmp
std
bnd
std
lcall
and
sbb
fnsetpm(287
enter
inc
mov
repz
push
inc
inc
cltd
cmp
and
pop
pop
dec
mov
xchg
das
shll
fsts
lea
and
inc
aad
negb
aaa
sbb
roll
daa
and
shrl
xchg
ficoms
imul
iret
cmpsl
mov
mov
sbb
adc
ret
lret
pop
mov
clc
sti
xor
jno
shrl
mov
and
xchg
pop
cmp
int
lea
loop
insl
xor
fdivl
adc
mov
cmpsb
test
adc
push
cwtl
mov
push
mov
fnstcw
pop
lds
dec
jmp
inc
nop
mov
adc
push
push
fistps
sbb
rorb
jg
outsl
fsubrl
jno
insb
lret
or
pop
dec
jno
test
in
imul
pop
loope
fldcw
in
fs
imul
inc
xchg
pop
mov
subl
xchg
out
pushw
popa
cmp
dec
cmp
or
add
sbb
jb
add
stc
jge
pushf
test
popa
scas
js
fidivrl
lahf
dec
lahf
push
xor
adc
addb
jne
test
rclb
sbb
cltd
nop
ds
adc
test
xor
popf
or
sti
clc
fstl
inc
lret
mov
cwtl
rorl
jmp
movsl
movsb
arpl
mov
mov
lret
push
cwtl
in
mov
fucomp
pop
ljmp
lds
mov
enter
or
sbb
cmp
mov
cwtl
sbb
xchg
jno
in
iret
cld
notl
xchg
adc
out
and
sub
cmpsb
ja
inc
xchg
shll
dec
out
add
inc
out
stc
inc
ret
push
mov
xor
dec
jecxz
pop
push
bound
outsl
fiadds
insb
dec
fcomps
pop
mov
xchg
sbbb
cmp
aad
fildl
xchg
dec
aam
add
jne
hlt
mov
in
repz
pop
cltd
fbstp
xchg
mov
shll
xchg
adcl
xor
cwtl
jo
call
in
push
mov
test
pusha
out
or
push
xchg
movsl
sbb
movsb
popa
push
jp
ret
inc
and
not
bound
jge
outsl
sbb
jne
push
insl
hlt
pop
jecxz
in
movsb
xchg
mov
xchg
and
sar
mov
inc
lea
icebp
rcrb
imul
ds
cmp
jp
dec
mov
pop
push
mov
scas
test
std
sbb
xchg
jmp
std
leave
inc
into
inc
mov
loope
test
pop
push
lret
push
ja
js
lods
popf
movsb
xchg
jne
ret
xor
fwait
add
jmp
adc
lahf
jo
outsb
rcrb
adc
arpl
enter
je
and
fcompl
addr16
sbb
jmp
je
and
cmp
rcr
mov
and
cmp
inc
mov
jne
or
mov
sub
int
pop
mov
push
inc
sub
sbb
pop
mov
push
mov
psadbw
jae
shl
xor
sub
mov
dec
push
aam
fnstenv
mov
jnp
jne
cmc
jle
or
jge
xor
pusha
fadd
sbb
push
fildll
xor
jb
out
xchg
mov
or
icebp
std
jnp
fwait
sahf
mov
mov
mov
mov
mov
push
xor
jmp
int3
in
push
cmp
and
clc
shrl
adc
ficomps
mov
sbb
loope
jge
fiadds
scas
rcl
idivl
push
mov
mov
cli
xchg
xchg
fidivrl
cmp
sbb
xchg
clc
adc
mov
jae
fadd
call
icebp
mov
gs
lock
sbb
and
push
insl
out
push
call
stc
outsb
xchg
mov
adc
pushf
push
int
xor
and
mov
cmp
test
rol
gs
cmp
mov
test
cli
cmpsl
dec
mov
cmp
push
xchg
fildll
jge
xchg
insb
fisubrs
in
jb
add
or
icebp
movsl
cmp
dec
jg
data16
fsub
dec
and
testl
ja
xchg
int
mov
insb
sub
testl
and
jb
xor
es
test
inc
cltd
sbb
mov
ss
cltd
mov
ja
or
fwait
test
inc
sbb
push
test
and
push
pop
mov
sbb
enter
leave
lret
iret
lock
pop
mov
cli
out
push
push
xchg
arpl
push
or
stos
cmp
lds
bnd
movl
cmp
loop
pop
mov
call
jge
imul
mov
add
out
push
mov
scas
jo
dec
push
cmp
mov
lahf
mov
addr16
xchg
or
test
idivl
jnp
fidivl
in
or
lea
testl
notb
lcall
inc
cmc
aad
mov
lret
mulb
adc
fidivl
sbb
sti
mov
enter
inc
push
loope
outsl
xor
enter
xchg
clc
inc
lock
push
int3
ror
ret
aad
nop
mov
and
pop
lcall
jb
in
dec
out
add
inc
and
sub
insl
icebp
test
xor
enter
push
jp
jns
jb
adc
outsb
mov
jl
js
loop
xchg
lods
int
ret
lds
cmpl
into
inc
scas
out
call
mov
fidivrs
outsl
pop
adc
out
sbb
cmp
pop
test
stc
fimuls
pop
add
sub
jbe
mov
stos
xchg
jp
sub
stc
jecxz
aad
enter
arpl
sub
loope
xchg
ljmp
mov
into
movsl
addb
test
or
mov
xchg
lea
shrb
lgs
call
dec
xchg
and
hlt
test
sahf
mov
and
nop
and
push
jb
aad
es
sbb
mov
lret
fnstenv
and
xchg
shlb
ret
jne
xchg
push
dec
popa
arpl
stos
rcl
jb
or
sub
jae
jp
sbb
mov
xor
lret
xor
cmp
cwtl
mov
mov
sarl
adc
cltd
in
push
push
cmc
or
repz
movsb
pop
inc
sub
inc
pusha
cmp
xlat
dec
bound
jo
in
sahf
lock
push
pushf
sub
stc
cmp
jp
push
imul
daa
daa
jp
add
pop
push
sbb
rol
pop
scas
cmp
shll
fwait
pop
das
mov
xchg
cmp
fnstcw
ds
mov
in
fisubrl
mov
aad
nop
cmp
ret
loope
push
pusha
fs
fsubrl
inc
scas
cmp
cmp
inc
lods
add
mov
sub
aam
mov
xchg
mov
sbb
lea
mul
fwait
inc
add
pop
stos
subb
inc
push
fnsave
fstps
sahf
inc
adc
ss
test
mov
int3
cs
dec
dec
loop
sahf
cmpsb
aad
mov
imul
filds
test
add
adc
out
test
mov
jae
cmp
sbb
mov
aam
sub
in
and
dec
shll
push
int3
sahf
lcall
aad
jns
mov
out
pop
adcl
adc
lret
jae
pop
add
es
jno
out
jecxz
sbb
cmpsl
push
cmp
xchg
pushf
add
xor
lahf
sbb
rclb
sbb
xor
or
stc
push
enter
pop
dec
dec
fsubrl
xchg
jge
and
adc
dec
xchg
loop
inc
into
cmpb
gs
pop
lret
pop
outsb
fwait
iret
cwtl
inc
mov
xor
jp
or
adc
test
pushf
xchg
add
out
mov
xchg
pop
gs
xor
and
pop
psubb
pop
or
jo
add
jnp
xor
or
cmp
hlt
pop
push
aas
sub
mov
pop
fninit
das
pop
xor
imul
sbb
mov
fwait
mov
dec
sbb
mov
mov
into
pop
cli
jnp
out
fstpt
inc
pop
add
mulb
addr16
xor
sub
jp
imul
mov
push
fs
jnp
sub
xchg
sbb
cmp
es
cld
mov
sub
mov
sbb
mov
add
mov
mov
pop
addr16
push
add
fcoms
repnz
or
scas
pop
sbb
aam
mov
icebp
add
inc
push
jg
out
iret
ret
nop
or
mov
jmp
xchg
in
testl
cltd
daa
mov
cmc
push
xor
xor
lret
or
lods
nop
jle
iret
xlat
arpl
adc
jmp
das
or
mov
in
out
iret
js
icebp
jns
jge
dec
pushl
loopne
jmp
jne
mov
loopne
cmpl
inc
lock
cmp
es
mov
in
mov
pop
pop
lods
cmp
rcll
xchg
pop
fcomps
push
push
xchg
xor
inc
cmp
pushw
mov
and
push
pushf
sub
cwtl
pop
in
ss
iret
mov
cmp
mov
stos
mov
outsl
or
xchg
sbb
cmpsl
jmp
fistps
and
movsl
jle
scas
jp
mov
lock
push
cmp
les
mov
in
inc
out
dec
aas
pop
lcall
add
sub
test
inc
insl
jne
mov
mov
lea
scas
dec
out
stos
sbb
mov
pushf
sub
bound
mov
icebp
push
or
mov
xchg
clc
add
push
insb
int3
and
repnz
cld
inc
adc
add
ret
mov
in
xlat
dec
icebp
adc
push
jmp
inc
push
iret
sbbb
mov
mov
mov
inc
cmp
negb
adc
fildll
xchg
aam
sub
insl
push
or
xchg
loop
gs
daa
sbb
fdivl
sti
mov
xor
outsb
sbb
lret
negb
mov
lret
fldcw
test
loope
cmp
mov
push
stos
push
and
stc
or
ja
mov
pop
decl
xor
bndldx
pushf
add
push
inc
pusha
add
add
inc
cmpsl
dec
push
and
leave
inc
in
jns
repz
cmp
movsl
mov
cwtl
arpl
enter
out
pusha
cmp
iret
inc
sub
fistl
lea
scas
mov
add
in
inc
shll
fdivl
or
or
push
inc
aad
js
add
xor
lret
insl
push
cmp
mov
mov
cmc
stc
negb
xor
mov
test
mov
or
flds
dec
ds
mov
lcall
adcl
jbe
fbstp
push
imul
sahf
sbb
mov
dec
ds
rorl
adc
sbb
insl
scas
xchg
dec
cmp
aad
into
pop
push
sahf
xchg
push
or
mov
push
fcmovnb
shrl
push
mov
pop
scas
pop
jle
mov
cmp
pop
xlat
loopne
lret
sub
pop
les
aaa
inc
fisubs
push
pop
out
insb
adc
aaa
sbb
add
mov
pop
pop
pop
imul
es
fists
dec
and
cmp
adc
movsl
dec
lods
dec
pop
and
movsl
decb
imul
push
push
jmp
or
daa
std
data16
mov
movsl
inc
lahf
mov
jl
movsb
arpl
cwtl
cmp
ja
cmpl
inc
xor
popf
repz
shll
adc
leave
roll
inc
mov
push
sbb
mov
aas
scas
push
ret
inc
fimuls
in
test
jns
mov
in
pop
jbe
loop
rorl
xchg
lock
dec
dec
movsl
mov
mov
mov
push
mov
cmpsl
cmp
cmpsl
gs
add
mov
enter
sub
mov
push
ret
sbb
dec
fcoml
es
xor
repz
inc
mov
shlb
lcall
and
or
sti
mov
mov
xchg
pop
movsl
fs
or
stos
outsl
pop
ljmp
mov
arpl
inc
in
loop
stos
mov
shl
push
iret
lea
dec
cmp
mov
sub
mov
js
pop
adc
mov
gs
nop
push
push
imul
mov
sti
call
jo
jne
int
cmp
pop
push
pop
mov
pop
hlt
add
xchg
lret
xor
pop
in
or
sbb
xor
add
mov
xchg
mov
jecxz
outsl
push
pop
mov
push
add
daa
clc
mov
inc
pop
sub
xchg
inc
loope
lahf
cwtl
mov
sbb
insl
popf
bound
sub
cmp
mov
cmpsb
repnz
dec
movsl
pop
test
lods
dec
out
out
out
lret
insb
xor
shrl
data16
add
and
outsl
incl
dec
sarb
cmp
jmp
or
mov
inc
stos
addr16
std
sbb
mov
orl
je
push
mov
jns
cmp
das
and
ja
les
xchg
insb
rcll
orb
push
push
aad
push
aam
cltd
arpl
lcall
arpl
add
addr16
xor
mov
jbe
pcmpgtd
in
lcall
jbe
loopne
jmp
in
data16
dec
sub
and
aaa
mov
sbb
xchg
ja
addr16
inc
lret
cwtl
xor
dec
ljmp
ret
push
fsubrs
jo
inc
xchg
mov
roll
jb
js
and
add
outsl
idivl
fadd
out
and
sbb
mov
imul
in
jmp
dec
ffreep
das
iret
push
mov
sub
lret
sahf
sbb
xchg
sti
pop
cli
imul
push
in
and
imul
sti
xchg
pop
jmp
or
inc
xor
mov
lea
sub
cmp
cwtl
mov
sti
cmp
loope
int
xchg
cwtl
xchg
stos
xor
cmp
mov
or
ret
lea
lret
dec
iret
sbb
repnz
bnd
ss
xchg
sub
jecxz
push
cs
push
xchg
les
adc
dec
jp
cs
jne
orb
jae
jl
push
mov
dec
add
bnd
cmpsl
sbb
pushf
dec
lret
lret
dec
fists
fimuls
mov
cmp
icebp
xchg
outsl
inc
outsb
popf
orl
jle
repnz
xchg
jnp
ljmp
pcmpgtw
notb
and
jbe
adc
xor
push
je
push
push
je
movsb
test
imul
sbbl
stc
pop
rclb
rolb
push
test
adc
inc
lds
test
sub
mov
sbb
outsl
out
pop
and
mov
fisubrl
out
icebp
iret
sub
sbb
mov
repnz
inc
imul
lahf
cmpsl
pop
push
arpl
decb
jle
popf
mov
mov
loopne
jmp
mov
fidivrs
cld
push
pusha
icebp
orl
cs
jl
jno
mov
test
lock
subl
push
out
pop
mov
push
jge
mov
push
jp
scas
mov
test
fs
addb
cmp
pop
notl
xchg
dec
clc
lcall
or
les
out
cli
addb
cmpsl
mov
std
rcrl
xchg
subb
icebp
xor
dec
les
daa
pop
jae
js
cltd
mov
movsl
std
cmp
daa
cltd
lcall
mov
loop
stos
dec
int3
das
mov
fiaddl
shll
xchg
mov
mov
mov
mov
cmp
out
out
and
mov
fdivr
inc
out
sub
xor
mov
jle
imul
es
mov
push
movsb
push
and
aam
icebp
add
lahf
add
fdivrl
imul
mov
out
lahf
aad
push
loope
xchg
xor
outsb
adc
sub
lcall
scas
jge
mov
or
inc
mov
std
daa
js
cwtl
jae
sub
mov
clc
lods
jle
sti
mov
mov
mov
jne
or
int3
daa
sahf
or
dec
mov
stc
es
pop
loopne
mov
sub
push
movsl
mov
push
push
cmp
pop
call
adc
sub
test
inc
adc
xlat
loopne
sbb
std
xchg
xor
pop
scas
test
xchg
pop
jmp
repz
sbb
cli
repnz
or
xchg
cmpsb
addr16
jb
sahf
inc
xor
sub
in
js
scas
dec
rclb
and
pop
cmp
push
push
mov
movsb
pop
js
jp
fidivrs
test
adc
xlat
xchg
fisttpll
stos
xor
outsl
lock
mov
adcl
push
in
push
fsubrl
jge
loop
xchg
push
sub
mov
data16
filds
cmp
dec
test
fbstp
cmp
push
in
jecxz
bound
loop
add
push
xor
xor
and
mov
cmp
push
cmpsb
push
in
mov
cs
dec
arpl
mov
lds
cmc
add
sbb
das
inc
jle
xor
mov
dec
inc
dec
dec
data16
mov
jnp
inc
jl
fs
ss
out
popf
lcall
pop
push
push
dec
repz
shl
inc
xrelease
jae
insl
cmp
mov
xor
jecxz
xchg
push
cld
xchg
int3
and
outsl
mov
ss
push
mov
loope
insl
sbb
scas
sbb
sub
add
int3
mov
cmp
push
movsb
sarb
adc
loope
xor
adc
out
xor
insb
and
or
push
sub
aaa
rorl
jnp
in
lods
mov
ss
push
sahf
or
imul
aas
dec
je
leave
dec
push
pop
inc
ss
adc
insl
and
mov
adc
push
lret
lret
push
or
jecxz
stc
insb
mov
fadds
add
and
lahf
inc
insl
mov
push
dec
sbb
mov
insb
out
adc
enter
jne
add
mov
adc
cmp
pop
cmp
das
push
mov
add
aas
lahf
push
sbb
aas
jns
lret
mov
cltd
mov
fisubl
mov
test
mov
in
pushf
cmp
jl
jbe
mov
inc
jno
bound
jmp
popa
out
jno
jge
push
mov
cmpsb
jmp
cmp
push
ss
sub
mov
pusha
xchg
sbb
dec
stos
inc
push
inc
inc
ss
out
es
fmuls
pop
daa
xchg
ret
pop
subl
jle
fisubs
aaa
out
clc
pop
mov
mov
cmpsl
pop
mov
cmp
cmp
je
push
je
adc
pop
push
daa
fsubs
sbb
lahf
mov
cmp
jmp
cmpb
add
dec
cmp
cmp
sbb
pop
inc
das
fidivrl
cmp
push
fucomp
addb
int
aad
mov
pop
jnp
mov
lcall
mov
mov
jecxz
push
xor
mov
out
stc
sub
aas
xchg
pop
sub
and
adc
sub
or
shll
xlat
shrl
in
lcall
jg
xor
cmp
test
pop
xlat
ds
xor
sub
lock
fwait
mov
sti
mov
adc
into
push
leave
mov
or
repnz
push
mov
xor
cli
lods
ja
jbe
cmp
mov
mov
in
roll
test
cmp
add
jg
dec
mov
mov
xchg
shrb
ss
xchg
imul
add
mov
push
ds
cld
and
mov
pusha
jl
and
or
fs
inc
dec
out
mov
sbb
fcmovnb
or
lcall
daa
enter
mov
or
push
xor
ret
ja
iret
inc
xlat
or
out
sahf
adc
int
or
jns
inc
sti
or
sbb
jnp
and
sahf
dec
or
insb
sarl
arpl
popa
or
mov
icebp
inc
cmp
insl
arpl
and
jbe
mov
mov
mov
not
jns
sub
lods
xchg
inc
pop
les
jl
shll
test
mov
lock
cld
mov
js
jns
scas
sti
lods
xchg
arpl
push
leave
dec
xchg
mov
sub
mov
ja
rcrl
adc
add
mov
mov
mov
sti
in
mov
adc
and
inc
std
mov
iret
mov
lahf
xchg
jl
shlb
std
jg
jge
repnz
hlt
stos
sbb
ljmp
subl
xchg
insl
adc
in
mov
enter
dec
sub
mov
testl
sahf
popf
and
add
pop
mov
jne
push
and
shrb
cmp
cltd
ffreep
sbb
jne
loopne
shll
adc
bound
imul
dec
faddl
add
filds
jae
int
filds
mov
repz
mov
sub
in
mov
or
mov
push
jb
inc
inc
pop
insl
mov
push
pop
xorb
push
jle
fcoml
and
sbb
mov
aam
in
insl
mov
into
xlat
inc
inc
int3
xchg
fistpll
xchg
inc
cmp
sub
jecxz
xor
mov
push
jae
addr16
adc
stos
xchg
mov
xchg
xor
repnz
mov
dec
cmp
push
scas
xor
push
dec
outsl
dec
mov
jne
dec
inc
inc
sahf
mov
fimuls
dec
aam
sub
pop
mov
xchg
shr
lods
jp
push
or
cli
adc
test
cmp
out
inc
dec
data16
or
xchg
sti
data16
out
xchg
inc
sub
xor
jmp
fsubrs
clc
fst
stc
jmp
ds
lods
push
or
push
cmp
push
test
or
and
cmpsb
test
dec
mov
test
mov
orps
int
jbe
stos
or
cmp
dec
bound
xor
stos
andb
imul
inc
ja
ficoms
ret
jp
andb
pop
push
sar
jmp
das
jns
mov
sub
sub
test
xor
lret
mov
sbb
inc
aaa
mov
xchg
adcb
sbb
pop
xor
gs
bound
arpl
gs
or
and
or
cmp
mov
iret
std
call
pop
cmp
adc
fldt
pop
imul
jo
inc
mov
push
lods
ret
pop
mov
xchg
adcl
movsl
scas
sub
or
jp
call
icebp
add
shll
dec
and
inc
das
jl
mov
insl
fwait
loop
jl
rol
push
les
shlb
lahf
adc
mov
and
repnz
cld
inc
shrb
mov
mov
int3
push
fwait
ret
fdivr
faddl
inc
aas
lea
sbb
fs
je
js
pop
push
pop
mulb
movsl
jno
push
dec
mov
les
mov
shlb
push
cmpsl
cmpsb
jle
outsl
xor
aas
jp
jne
hlt
stc
xchg
test
sub
repz
or
pop
pop
adc
xchg
and
and
jl
fldenv
lret
popa
inc
cmpsl
push
sbb
mov
dec
xchg
jnp
stos
pop
pop
in
mov
or
mov
popa
inc
jno
pop
clc
pushf
adc
bound
shll
adc
scas
lahf
sbb
dec
dec
loop
iret
rcll
jle
push
mov
sti
hlt
xchg
in
test
inc
pusha
or
ss
xchg
stos
stos
pop
push
jp
imul
xchg
and
mov
pop
push
in
or
mov
outsb
sbb
sub
add
cmpsb
pop
jmp
mov
shll
data16
fs
jmp
push
lcall
out
lods
sahf
divl
mov
call
add
test
inc
cmc
xor
in
adc
jle
lret
insb
cltd
shl
scas
pusha
cmc
and
cltd
in
push
cmp
in
std
clc
cmp
dec
lret
jnp
pop
jle
into
fst
sbbb
dec
pop
and
stos
das
mov
pushf
lret
fnstcw
pop
stos
pop
into
cmp
fisubs
mov
inc
xchg
stos
cmp
rclb
jl
dec
dec
lret
das
sbb
scas
jl
fcompl
push
scas
sahf
jp
rcr
in
fisubrs
or
les
rcrl
mov
leave
add
sub
out
aas
das
pop
vrcp14sd
loopne
std
std
pusha
add
mov
mov
out
lock
out
cmp
mov
test
push
inc
sbb
or
jmp
xchg
mov
fwait
jecxz
scas
test
cmpsl
pop
mov
inc
or
mov
insb
xchg
lods
dec
xchg
aam
cmpsb
aad
test
js
jnp
inc
int
loope
adc
push
aaa
fbstp
popa
mov
mov
xor
sbb
enter
lret
movsb
jl
jnp
mov
in
shrb
adc
lods
js
jl
jle
adc
sarl
cmpsl
push
in
cwtl
movsb
insl
jbe
clc
xor
jae
out
popf
jg
movl
and
in
cmp
inc
insb
js
sbb
inc
andl
pop
outsb
sbb
sub
shll
jo
dec
jmp
pop
cmp
arpl
xor
mov
inc
not
popf
xorb
jbe
adcb
scas
ret
loope
test
das
repnz
dec
mov
xor
sbb
lea
insl
xor
leave
dec
xlat
insb
pop
pop
xorb
in
ret
mov
push
fbstp
pop
mov
jne
inc
mov
jp
push
fs
fsubr
cmp
push
cltd
sub
or
hlt
mov
mov
mov
dec
jnp
sbb
inc
xchg
lods
adc
push
iret
dec
jmp
or
mov
or
cmp
or
push
lret
rcl
cmp
clc
fsubs
push
mov
cmpsb
adc
and
sbb
imul
out
xchg
cmp
and
repz
jle
fdivrl
fiadds
xchg
cmpsl
in
xor
adc
xchg
out
mov
sbb
mov
inc
shl
cmp
in
mov
lods
in
and
xchg
pop
cmp
dec
call
mov
push
fwait
call
dec
icebp
or
dec
mov
fs
in
das
mov
mov
xchg
ljmp
or
mov
sbb
mov
jl
mov
cwtl
ficompl
mov
jle
cld
and
in
addl
insl
and
test
fcoml
mov
and
cltd
aam
xchg
xor
push
test
xchg
jo
ficoml
cmp
ja
add
cs
mov
mov
xchg
xchg
insl
jns
sbb
loopne
add
leave
fsubr
fwait
lods
ret
mov
jo
hlt
mov
es
je
scas
das
pop
imul
lahf
shlb
push
mov
mov
aaa
push
dec
add
xchg
cmpsl
mov
addr16
sub
sub
jmp
mov
adc
xchg
gs
call
sub
jmp
std
xlat
xor
dec
mov
mov
mov
fistpll
arpl
or
lahf
adc
shrl
mov
idivl
mov
out
dec
into
mov
je
xchg
jg
cltd
cmp
das
sahf
out
dec
inc
sbb
xor
jle
mov
lds
cltd
push
sbbl
stc
jp
or
rcl
mov
int3
data16
xor
cld
xor
lret
adc
mov
pop
jae
push
mov
fidivl
jecxz
push
notb
xchg
fsubs
cmp
ljmp
xor
cwtl
les
ja
mov
sbb
scas
mov
and
push
xorb
lret
arpl
int3
sahf
insl
repnz
cmpsl
stos
lret
jmp
jmp
xor
fidivrs
mov
and
xor
sahf
sbb
popa
xor
addl
shl
xchg
cwtl
call
test
out
rcr
jb
test
js
or
loopne
inc
out
adc
fxch
dec
push
lds
mov
mov
adc
jecxz
inc
imul
stos
xchg
push
adc
push
je
rol
adc
mov
subb
cld
or
fs
int3
call
roll
add
out
mov
fcmovb
popf
repz
mov
sub
push
mov
inc
es
mov
repz
push
pop
pushf
inc
adcl
cmp
sahf
dec
andl
in
xor
jle
push
test
adc
jl
out
inc
sbb
pop
xchg
mov
dec
repz
and
test
pop
movsb
mov
inc
adc
and
or
dec
cmp
cs
or
sub
loopne
dec
test
hlt
hlt
jp
pop
in
ss
adc
sub
mov
out
call
orb
imul
ficomps
hlt
shrb
lret
pop
adc
ss
inc
mov
fadds
adc
push
js
or
scas
sti
mov
mov
jg
push
mov
repz
lcall
aam
loop
jno
mov
jp
stos
jo
idivb
jmp
and
push
hlt
push
cmc
jmp
add
jo
inc
jge
je
push
mov
jne
push
add
dec
je
mov
jb
or
and
sub
in
inc
xchg
mov
xchg
jle
mov
out
aaa
push
or
and
loop
xorl
movsb
scas
xor
std
sub
xchg
aam
pop
ret
sub
or
push
pop
movsb
add
pop
and
leave
mov
dec
or
adc
nop
mov
test
scas
pop
filds
outsb
or
cmpsl
fidivrl
or
xchg
out
test
cmp
xchg
fildl
mov
into
push
mov
xchg
adcb
lcall
pop
sbbb
rorb
bound
scas
mov
sahf
loope
mov
cltd
ja
jg
adc
and
and
cmp
mov
lahf
xor
or
xchg
sbb
int3
mov
notb
push
pop
les
xchg
lret
rcrl
sbb
iret
fstps
sarl
sub
iret
ret
push
mov
inc
cli
fimull
sbb
cwtl
sbb
sbb
dec
jne
imul
js
and
lret
mov
fsubrp
jo
mov
fstpl
daa
popf
mov
js
les
outsb
mov
xchg
lret
lock
addl
dec
cmpsl
in
stos
aaa
in
xor
cmp
cmp
cld
lock
sti
adc
pusha
shrb
sbb
cmp
pop
das
mov
out
test
lahf
and
dec
dec
mov
or
mov
xor
dec
data16
and
pop
mov
insb
push
xchg
mov
jmp
mov
les
stos
lods
out
js
shrb
jge
out
int3
inc
lods
push
loope
mov
mov
lods
xchg
sarl
inc
dec
movsb
push
xchg
sub
mov
in
add
or
add
pop
fldt
fildll
mov
roll
out
pop
inc
ds
push
cmp
in
mov
jns
inc
xlat
jg
subl
xor
pop
inc
int3
mov
cs
sub
mov
lret
ja
lods
inc
ret
xchg
pop
sub
push
jbe
in
lret
lea
sbbb
pop
jle
outsl
cmp
es
sbb
xor
jns
sbb
sbb
stc
jp
cmp
pop
pop
shlb
lock
mov
mov
fidivl
scas
mov
adc
inc
xchg
inc
imulb
jecxz
fcoms
repz
cmp
jl
add
loope
gs
test
lods
cmp
frstor
inc
aam
cmp
sbb
outsl
test
leave
dec
in
stc
or
rorl
inc
mov
lods
imul
mov
imul
inc
mov
gs
dec
jno
xor
sti
xchg
push
adc
sub
das
scas
cmp
push
mov
adc
fcompl
inc
jo
adc
scas
dec
add
test
xchg
loope
jno
sbb
push
jns
fwait
push
xchg
js
enter
or
sahf
jg
call
sub
jne
addr16
xor
add
sbb
pop
cli
aas
outsl
add
xchg
jecxz
sbb
xor
lahf
outsl
jnp
fbld
fists
pop
mov
lret
ja
bound
jne
push
jo
stos
jo
jmp
add
fcoml
jae
out
xchg
data16
clc
jnp
inc
add
std
pop
imul
cmpsb
ds
xchg
mov
mov
icebp
xor
das
mov
push
xchg
xlat
mov
mov
int
cmp
or
dec
scas
mov
in
repnz
data16
sti
jmp
decb
add
pushf
push
mov
xlat
push
push
shrl
mov
sbb
ss
adc
mov
add
movsb
dec
rcll
xchg
aad
pop
cwtl
xlat
and
loop
addb
or
jno
sarb
or
mov
cs
jne
roll
test
lcall
mov
negb
jp
push
fisubl
add
push
cmpsl
les
xor
adc
cltd
mov
sti
ret
adc
gs
clc
movsl
lcall
cmpb
sahf
rolb
cmpl
cmp
cmp
out
out
notb
ds
and
fistl
jae
movsl
push
sub
or
jo
and
lods
or
pop
enter
sub
sahf
and
jae
int3
call
lock
subl
out
hlt
mov
outsb
int
cli
add
loop
push
fistps
pusha
loopne
addr16
mov
scas
sahf
cmp
add
ljmp
dec
scas
imul
cmpsl
scas
pop
add
mov
leave
sub
adcl
cs
push
adc
rcr
test
repz
test
add
imul
pusha
xchg
cmpsl
jg
mov
sub
sbb
or
mov
mov
outsb
sub
cmp
lret
xor
out
pop
add
aad
push
cmpsb
xchg
fidivl
and
push
mov
aad
insb
mull
repnz
into
inc
sbb
lahf
xchg
cwtl
and
xchg
and
adc
pop
lods
xor
push
movsl
inc
sub
sub
mov
adc
cltd
mov
push
notb
lret
sbb
add
inc
jge
in
les
mov
xchg
xchg
and
repnz
shll
mov
mov
and
pushl
xor
inc
cmpsb
loopne
fldt
movsl
je
jbe
popf
popf
pop
repz
setbe
insb
cmp
aaa
mov
mov
sub
movsb
adc
cltd
adc
cld
int
stos
call
push
cmpsl
scas
inc
neg
enter
jge
scas
repz
or
sbb
lahf
adc
loope
dec
sub
push
lret
lahf
or
xchg
xchg
aam
mov
std
push
inc
mov
push
scas
int
mov
test
mov
mov
imul
pop
lods
sahf
fcmovne
adc
mov
sub
xor
push
xor
and
sti
mov
sbb
mov
rclb
lods
push
inc
jecxz
sbb
pop
push
jbe
xor
mov
lea
loope
jmp
xor
jg
lds
addb
addb
orb
cmpsl
std
inc
sub
mov
mov
sub
les
xchg
mov
adc
mov
add
loopne
mov
or
pop
test
or
cmp
rcrb
dec
mov
test
fdivrl
add
sub
in
mov
jbe
jne
push
jo
in
jmp
pop
aas
jnp
incb
lret
or
rolb
cmpsb
mov
ror
jne
add
inc
loopew
cs
int
sahf
js
insl
jmp
pop
iret
in
scas
outsb
sbb
fisubl
shl
test
clc
jl
movsl
mov
push
jnp
out
xor
es
push
cmp
cmp
enter
inc
cmp
subl
pop
pop
adc
xchg
inc
and
xchg
mov
pop
lret
arpl
loope
loop
cmp
mov
test
pusha
shrl
sar
faddl
inc
push
jl
hlt
fnstsw
aas
cli
outsb
or
push
push
hlt
iret
or
lods
inc
push
cmpsb
xor
mov
mov
add
lahf
mov
xor
or
out
push
dec
push
cli
movsb
pushf
adcw
imul
fisubs
cmp
gs
popa
push
arpl
push
cmp
iret
mov
adc
mov
pop
or
pop
ja
jo
push
fbld
in
insb
push
or
repnz
jge
scas
pop
jecxz
mov
js
clc
dec
arpl
js
jb
mov
test
out
pop
push
popf
push
lahf
out
mov
xor
inc
addr16
pop
in
sbb
jl
mov
stos
lret
int
mov
xor
dec
mov
mov
dec
cmp
iret
test
jnp
lods
pop
ds
push
enter
mov
leave
xor
sbb
loop
movsb
das
lds
inc
dec
jnp
repnz
fistpl
and
mov
mov
dec
mov
sbb
jl
inc
push
ret
popw
shrb
pop
fdivrs
xchg
sbb
dec
xor
test
push
and
pushf
fmull
daa
outsb
add
mov
ret
repz
sbb
add
pop
ret
inc
adc
ret
push
or
pop
std
ror
clc
testl
push
scas
xor
pop
scas
xchg
sbb
out
push
out
test
stc
and
leave
pop
xor
or
mov
cmp
mov
in
mov
fidivl
pop
jbe
mov
jl
cld
int
pop
lds
shlb
das
dec
jae
fwait
add
jle
mov
jmp
inc
repz
mov
aaa
mov
out
or
in
dec
repnz
nop
mov
loop
aam
inc
sar
sbb
sbb
dec
icebp
fsubrl
imul
push
out
mov
cmpsb
push
int3
jo
jb
lds
pop
mov
movsb
or
js
xchg
push
in
jnp
inc
jno
adc
aad
int
and
add
add
mov
mov
ret
bnd
adc
add
test
sti
leave
mov
sbb
pop
fcom
cmp
sti
inc
jmp
gs
xchg
int
inc
jns
ficomps
mov
aas
in
pop
jg
pop
add
movsb
jbe
aas
jae
pop
enter
pop
dec
loope
add
leave
enter
add
push
inc
or
mov
jno
and
push
pop
movl
sti
not
add
pushf
jae
mov
sub
pop
pop
sub
or
loope
mov
mov
jge
lea
adc
add
test
dec
inc
pop
or
sbbl
sub
xchg
sbb
sti
leave
jno
loopne
jmp
mov
mov
dec
imul
test
leave
pop
mov
and
add
mov
add
mov
ret
in
xorl
test
test
mov
sbbb
xchg
add
dec
insl
push
xchg
test
mov
mov
and
lods
xor
jecxz
xchg
xlat
int3
add
movsl
xor
mov
cmp
cli
mov
scas
and
enter
insl
mov
in
pop
out
push
or
cmp
push
xchg
mov
fs
xchg
scas
inc
pop
dec
xchg
shlb
push
loopne
jp
xorl
push
and
mov
push
jns
bts
aas
xor
shr
test
pop
pop
out
pop
add
jle
fwait
test
inc
das
or
stos
pop
mov
sbb
ljmp
sbb
loop
lcall
lea
mov
int
lret
adc
dec
ds
sbb
sub
pop
mov
gs
push
jecxz
mov
inc
in
mov
std
ds
jb
sti
xchg
push
jmp
stos
push
repz
adc
xorb
cmp
adc
push
jne
cmp
pop
std
jae
out
inc
mov
pop
add
sub
xor
ret
movsb
loope
adc
pop
adc
sarb
cs
lea
cld
negb
cmp
inc
mov
addr16
test
sbb
fwait
hlt
lret
jb
jne
into
inc
fcmovnu
sbb
ret
imulb
inc
fsubs
sbb
loopne
xor
push
inc
nop
divb
pop
sarb
inc
scas
rcl
mov
ja
cmpsl
mov
add
dec
pop
fs
mov
iret
in
nop
test
jae
pop
jae
push
xchg
gs
aam
push
sub
adc
jmp
sbb
scas
imul
aam
jg
movsb
inc
iret
sbb
jb
pop
jns
sub
es
cmp
mov
dec
aam
and
mov
shlb
dec
and
mov
leave
pushf
cmp
inc
pop
pushf
mov
inc
fistpl
gs
xor
and
xor
mov
or
cmpl
sbb
lcall
adcl
xor
add
mov
dec
lods
push
shll
sti
out
in
jmp
cmp
xor
and
cs
mov
push
daa
mov
adc
xchg
testl
ret
mov
cmpsl
jbe
insl
sbb
add
je
rorl
push
sub
rol
push
dec
mov
test
jge
push
xor
icebp
xor
sti
jl
in
pop
jno
mov
pushf
lret
bnd
std
and
aad
stc
xor
mov
push
push
in
or
mov
pop
cmp
add
mov
xchg
aaa
loopne
adc
push
jg
pop
aas
jle
inc
sahf
jno
mov
jl
dec
push
bound
sub
adc
pop
addr16
cs
test
mov
int
pop
dec
stos
test
inc
jno
pop
loop
aaa
cmpb
hlt
ror
push
scas
or
cld
mov
or
pop
push
setnp
int
push
and
mov
xor
vxorps
ljmp
xchg
stc
mov
dec
popf
outsb
jns
lahf
push
imul
cmp
and
cmp
mov
inc
mov
cs
dec
sub
mov
xchg
aad
cltd
loope
stos
loop
sarl
pop
cmpsl
int
movsl
mov
jae
sahf
add
add
roll
add
repnz
lahf
mov
xchg
adc
arpl
push
scas
adc
fsub
push
xchg
push
and
dec
arpl
mul
shl
out
shrl
dec
and
in
xor
mov
repz
pusha
pop
adc
xchg
adc
xor
xchg
int3
js
iret
adc
mov
dec
xlat
ds
jae
loopne
dec
inc
or
js
push
hlt
hlt
cmovl
and
enter
or
divb
mov
int
jne
mov
and
das
popa
or
pusha
dec
stos
and
out
cmp
mov
scas
cwtl
fstl
imul
fadd
xchg
data16
movsl
stc
dec
ljmp
fdivrl
loop
adc
cmpsl
mov
inc
int3
icebp
inc
fucomip
jmp
rcr
inc
mov
push
fs
cmpsb
mov
daa
or
push
sub
or
cmp
popf
push
jb
iret
mov
jno
lock
mov
push
sbb
and
subl
out
out
fimull
cmpsb
mov
xchg
sbb
movsl
dec
add
lea
sub
insb
outsb
push
sbb
pop
adc
push
jne
jno
aam
flds
dec
addr16
cli
lahf
mov
dec
push
push
dec
xlat
daa
mov
repz
je
rorb
add
dec
pusha
pop
inc
mov
cmpb
mov
add
cmp
jmp
mov
xchg
push
fistpll
jb
clc
adc
xor
mov
into
add
nop
xor
scas
ret
sbb
js
pusha
in
pop
pop
rolb
and
cld
call
mov
pop
push
pushf
cmp
cmp
out
and
push
nop
aam
lret
movsb
jl
movsb
xor
push
aam
addl
pop
stc
shr
cli
repnz
mov
push
mov
das
test
cli
jecxz
mov
xchg
es
push
xlat
mov
xchg
pop
fsubl
jmp
and
out
loope
pusha
test
cld
fmull
xor
movsl
mov
inc
aam
sbb
mov
fldenv
and
test
jl
mov
ret
ss
les
rclb
iret
mov
jo
xchg
mov
and
sbb
sbb
stos
sub
mov
js
push
fisubl
or
inc
sti
push
movsb
xchg
mov
popa
add
movsb
arpl
out
mov
or
into
dec
sti
mov
sub
xchg
mov
out
movsb
mov
pop
pop
jle
movsb
stos
mov
jo
push
jmp
adc
jecxz
pop
repz
or
inc
inc
sbb
loopne
cli
or
iret
aas
andl
push
mov
adc
mov
cmp
inc
xor
mov
sti
out
inc
push
pop
je
ret
jne,pt
mov
addr16
cmp
fs
lcall
push
fistps
xlat
mov
xor
jecxz
inc
loop
push
into
push
ds
mov
inc
lock
jle
dec
sub
and
insl
pop
ret
mull
enter
out
sbb
cmpsb
push
andb
pushf
jecxz
xor
shrl
adcb
push
addr16
js
sbb
fldenv
jp
xchg
mov
xchg
pop
xor
mov
add
push
mov
mov
jne
stos
int
add
inc
scas
jg
daa
and
sbb
dec
lock
les
sub
jo
loop
out
xchg
and
rcr
mov
or
scas
test
loop
push
lods
and
test
out
data16
push
rcrl
mov
repnz
in
arpl
jl
xchg
jge
mov
sub
enter
sti
mov
mov
movsb
ret
repnz
adc
jp
out
lods
lcall
pop
aam
add
stos
and
inc
and
gs
in
xchg
mov
ljmp
fldenv
or
int3
in
xorb
ljmp
or
out
xorb
or
dec
push
xchg
ljmp
fsubrl
fisubl
jmp
cmp
and
out
rclb
pop
and
movsb
int
jb
mov
dec
cmp
sub
add
aaa
outsl
dec
in
jo
jo
xchg
mov
pop
pusha
rcrb
xor
inc
dec
or
jne
add
dec
jl
not
xchg
repz
adc
lds
movsl
inc
mov
add
adc
int3
rcrb
pop
dec
sub
sarb
dec
movsl
or
cld
sbb
cmp
in
jge
rcr
std
loopne
mov
shl
or
mov
mov
xor
and
pop
sbb
sti
jp
cmp
dec
jae
add
repnz
pusha
out
das
and
out
outsb
lods
daa
mov
daa
std
sub
idivl
lahf
std
arpl
jns
sub
das
xor
xchg
loop
enter
sub
push
or
sub
ss
push
push
push
cmpsl
lods
and
hlt
sbb
ficoms
pop
loopne
and
and
and
in
sub
js
jp
add
jp
aas
or
hlt
sarb
mov
in
mov
imul
dec
aad
push
xchg
jmp
mov
add
mov
push
lret
fs
stc
sbbb
xchg
sahf
jbe
test
in
fildl
and
rcrl
out
push
jne
lcall
push
repz
mov
lods
repz
test
sub
cwtl
lahf
push
push
iret
enter
sbb
dec
mov
jp
lcall
mov
stos
adc
outsb
sub
rcrb
outsl
nop
jl
push
test
dec
fidivs
test
adcb
cmc
stos
push
bound
inc
and
xchg
mov
mov
lahf
jmp
aas
mov
mov
mov
fidivrs
cmp
arpl
in
aad
ret
and
adc
pusha
xchg
outsb
sub
cmp
pop
mov
and
filds
adc
pop
sub
fwait
dec
cwtl
fimuls
scas
out
sub
sub
rolb
lock
dec
daa
mov
dec
cmp
inc
push
mov
lret
sub
inc
call
sbb
inc
push
aad
jmp
push
repz
xor
popa
sub
push
lods
std
sbb
jo
jno
insb
mov
mov
fadd
sub
add
adc
mov
mov
subl
jge
xor
daa
xchg
push
es
inc
sub
cmp
jne
mov
sbb
mov
jmp
leave
jb
bts
pop
aam
mov
pop
ret
push
je
ss
shll
xchg
inc
sub
decb
pop
jecxz
mov
mov
push
aas
adc
and
outsb
or
push
cwtl
iret
dec
mov
adc
pop
ljmp
pop
pop
pop
clc
mov
jmp
push
insb
in
outsl
jp
int
cli
push
negb
lahf
mov
lahf
push
cltd
imul
in
jle
inc
mov
mov
pop
dec
and
push
aas
leave
or
xor
mov
nop
cld
push
or
and
gs
push
popf
leave
xor
adc
mov
addr16
push
xor
mov
xchg
testb
loope
into
sub
sub
stc
scas
sbb
out
popa
adc
push
sub
fwait
int
rorl
cmpsb
mov
mov
pop
jae
mov
out
sub
mov
aas
pop
sub
fstpt
imul
push
mov
push
inc
jnp
in
mov
mov
inc
sbb
mov
rorb
xchg
xor
or
or
sub
mov
into
push
shlb
stos
sbb
sahf
std
and
aam
sbb
push
test
pop
bound
dec
pop
cmp
lds
sahf
push
sbbl
xor
fnstcw
mov
mov
mov
stos
push
out
cmpsb
dec
daa
cs
pusha
jb
xchg
cmp
dec
mov
jns
test
push
out
or
shl
scas
mov
jecxz
test
ret
mov
icebp
or
leave
jg
mov
loope
in
fnsave
adc
mov
outsl
es
add
mov
es
stc
mov
xor
sub
adc
fwait
nop
xor
sbb
mov
idivb
scas
fs
jnp
dec
call
out
fnstsw
outsl
xchg
add
test
imul
adc
incb
add
jb
mov
inc
xchg
sub
sahf
xchg
sbb
push
inc
and
push
jns
iret
xchg
fiaddl
es
movsl
xchg
imul
and
jne
insl
lret
mov
dec
xchg
or
leave
cmp
arpl
adc
push
ljmp
fs
add
adc
addb
adc
inc
ljmp
lds
in
lds
mov
cmc
stos
fisttpll
mov
test
xor
mov
leave
ljmp
andl
aas
rol
in
sub
lcall
call
ret
cmpsl
push
out
xor
inc
roll
lret
jno
mov
orl
loop
xchg
ret
cmpsl
or
sar
icebp
stos
fnsave
push
sub
inc
cmp
das
mov
ficoml
test
or
aaa
movsb
or
sub
shll
jle
movsl
inc
inc
mov
je
xor
movsl
arpl
orb
mov
out
int3
dec
mov
out
mov
xor
ficompl
push
fcom
add
mov
int3
jbe
in
out
mov
adc
and
lds
pushw
dec
cmp
ret
dec
xor
dec
push
pop
cwtl
cmc
or
cmp
or
arpl
cmp
pop
clc
or
ljmp
test
push
scas
jmp
xchg
fldl
cmpsl
mov
mov
or
int3
mov
push
stos
aad
sub
out
inc
sub
arpl
mov
mov
inc
rorl
int
aas
je
clc
mov
movsb
sti
xor
stos
loop
and
fdivrs
scas
insb
hlt
aad
adc
sub
out
sbb
mov
std
xor
jo
mov
stos
add
xor
fcmovb
in
adc
test
fidivrs
lcall
sub
sti
sub
aaa
test
addr16
mov
jecxz
fbld
push
fs
pop
xchg
xor
jbe
scas
sbb
scas
in
inc
push
xchg
jge
sub
mov
or
fistpll
lret
mov
divl
test
push
lcall
dec
jp
gs
xor
add
lret
mov
lods
adc
divl
lcall
les
xchg
pop
shrb
std
jb
inc
jb
pusha
or
sub
ljmp
add
test
mov
pop
ss
jns
dec
pop
int
sub
fldt
pop
dec
mov
dec
and
mov
in
adc
fcmove
mov
dec
jae
lods
pop
xor
mov
ret
pop
mov
fwait
je
pushf
pop
in
cmp
pusha
sti
cmp
inc
les
sbb
add
push
sti
jmp
or
and
push
scas
std
rcl
in
dec
adc
cmp
fsubrp
inc
cmpsb
movsl
sbbb
sub
jne
add
ja
pop
es
test
lcall
sbb
mov
cwtl
xrelease
scas
stos
lret
xchg
inc
pop
lret
pushf
data16
add
hlt
lcall
jno
xchg
js
stos
fdivrl
xor
adc
insb
daa
push
lret
in
test
dec
cli
jbe
das
sti
fs
mov
enter
xchg
ret
xorl
inc
test
jl
mov
or
iret
dec
mov
xchg
stos
gs
out
fucomp
ljmp
mov
dec
test
test
push
pushf
cmp
fadds
dec
jmp
jbe
mov
std
loope
lock
mov
and
push
push
mov
lahf
sub
sub
xchg
adc
prefetch
or
pop
movsb
pop
or
mov
fsubrs
push
test
jae
hlt
mov
sbb
xor
jle
out
cld
mov
ljmp
dec
inc
mov
adc
mov
mov
mov
jne
pop
pop
insb
jmp
jae
cmp
cmp
es
sbb
icebp
push
mov
mov
ljmp
hlt
div
pusha
in
sub
out
mov
sub
aad
or
mov
xchg
push
es
es
leave
or
adc
cltd
sub
cmp
xchg
stos
jbe
cs
and
mulb
sahf
cmc
xchg
cmc
jg
pop
mov
mov
jecxz
dec
jo
int
jg
lea
sbb
andl
cmpsl
jno
mov
out
das
adc
inc
shrl
dec
dec
mov
into
iret
cmp
pushf
cmp
push
lock
out
xor
ds
jmp
jns
mov
mov
je
and
mov
rcr
repz
xor
mov
into
cvtps2pi
pop
movsl
imul
mov
mov
lcall
lea
adc
flds
mov
lret
repnz
stos
adc
ja
incb
cs
push
out
icebp
or
mov
mov
mov
outsb
add
and
mov
movsb
xor
outsl
mov
and
shl
xchg
leave
loopne
jge
xor
cs
in
les
xchg
xchg
mov
push
insb
ret
jns
xor
addl
and
push
adc
int
outsb
push
inc
inc
xchg
cwtl
inc
mov
mov
loop
rclb
add
and
push
in
js
sbb
int
mov
fcoml
imul
mov
ss
popa
pop
dec
cmp
xchg
xchg
sbb
sti
dec
pop
addr16
pusha
mov
out
push
pop
mov
divl
pop
gs
cs
cmp
jle
pusha
mov
and
addr16
test
xchg
icebp
hlt
xor
cltd
sbb
stos
subb
aaa
je
xor
jne
mov
hlt
fimull
or
mov
adc
ficompl
jo
stc
mov
test
dec
repz
shrl
sub
mov
lods
inc
push
push
mov
adc
push
stos
aad
xor
and
jge
mov
popa
fcoml
dec
adc
or
pop
icebp
push
pop
fst
call
sbb
pusha
xor
mov
repnz
cmpsb
aam
negl
adc
mov
je
mov
popl
fsub
pushf
imull
movsb
bound
lods
jb
mov
ja
scas
mov
insb
push
add
lea
lock
mov
inc
or
aaa
mov
jno
lahf
inc
ret
das
lods
and
or
loope
add
adc
inc
push
test
pop
mov
stos
gs
sub
cmc
inc
addr16
push
mov
cmpb
or
jp
lret
and
xorb
jno
icebp
lahf
pop
sbb
daa
shlb
mov
push
mov
gs
or
add
popf
xchg
cs
jl
pop
cmpsl
lret
test
fwait
and
jmp
fwait
sti
adc
xlat
jp
lock
and
inc
pop
dec
lds
inc
sar
ljmp
lahf
xchg
out
sbb
lret
repnz
rcrb
pop
cmc
fcoms
adc
mov
in
lods
mov
lret
addl
adc
mov
imul
repnz
icebp
addr16
add
adcb
mov
or
repnz
mov
xor
sub
jne
rcrl
int3
and
push
fxch
xchg
fnstcw
sub
fldl
push
cwtl
bound
push
xchg
cmpsb
mov
out
out
lds
jg
pop
pop
sti
imul
xor
adc
inc
xchg
sub
lods
in
push
and
dec
inc
jb
and
stos
mov
mov
cmp
mov
addb
stos
pop
mov
outsl
sub
mov
fnsave
add
and
jnp
jbe
loopne
add
inc
xlat
mov
test
or
int
jno
add
ret
xchg
clc
aad
ljmp
mov
add
stos
ja
xchg
jge
cmp
sbb
xor
xchg
repz
negl
mov
cmp
xor
test
push
lret
cmpsb
dec
mov
jno
xor
pop
pushf
mov
pushf
push
ljmp
fisubs
loope
push
sub
dec
frstor
pop
insl
fwait
movsb
jbe
and
cwtl
call
shrl
sub
mov
dec
mov
dec
rclb
outsl
insb
jmp
addb
inc
gs
in
mov
and
pop
adc
add
inc
push
pusha
scas
leave
dec
cmp
xchg
and
cs
mov
sub
jmp
shll
sub
ss
cltd
pop
pusha
xchg
lods
test
pop
jo
adc
int3
cmpsl
and
out
jl
mov
std
cmpsb
movsb
fstl
rolb
lock
pop
or
mov
cmp
mov
mov
cmc
sub
int
js
inc
push
je
cmpb
sbb
sbb
lret
push
xor
jmp
inc
divl
nop
aad
mov
leave
push
inc
mov
aas
cwtl
sbb
sub
push
inc
mov
jecxz
out
push
jae
mov
repnz
push
mov
daa
push
fdivrl
sbb
mov
sahf
xchg
adc
mov
mov
cmc
mov
in
out
lret
push
in
lret
loope
mov
xor
jb
fistpl
pop
or
push
dec
les
adc
fisttps
xor
inc
push
add
scas
in
lods
loope
rcrb
xchg
jl
rcrb
cmp
or
inc
das
fcoms
mov
fnstcw
and
out
js
hlt
sbb
pop
arpl
sbb
test
adc
mov
cwtl
xor
jns
pop
lcall
xor
or
jge
add
adc
imul
testl
stc
outsb
filds
sbb
cmp
add
dec
sub
sub
lahf
push
in
dec
ss
negb
int
iret
sbb
cmpsl
dec
add
fs
mov
sbb
inc
jo
jne
push
orb
aad
dec
add
aaa
ret
adc
fwait
inc
pusha
cli
rcrl
mov
sbb
scas
mov
mov
stos
dec
fstps
insb
push
dec
xlat
inc
push
repz
lods
inc
inc
push
mov
clc
test
add
daa
mov
pusha
push
push
xchg
daa
jae
cmp
add
dec
xlat
sarb
popf
dec
leave
leave
cwtl
mov
nop
pop
xchg
mov
pop
mov
pop
lret
rorb
and
xchg
mov
imul
mov
inc
pop
movsl
mov
push
fnsave
scas
inc
inc
mov
pop
pop
ss
pop
sbb
xor
pop
push
push
jns
mov
cmp
sbb
outsb
fimull
ficompl
adc
stos
imul
aad
sahf
mov
jmp
push
inc
pop
and
out
sbb
nop
aas
lods
in
clc
or
out
cmp
in
sbb
sub
enter
stc
xchg
test
jecxz
push
nop
out
lea
xor
std
imul
pcmpgtb
nop
xchg
outsb
xor
outsl
lcall
sbb
and
push
daa
mov
inc
jno
and
aas
out
mov
or
inc
cmp
dec
mov
lcall
xchg
push
fs
inc
xchg
sub
cmpsl
adc
push
inc
pop
sbbl
fcomp
mov
movsl
mov
jle
cmc
mov
mov
add
dec
addr16
dec
cmc
insb
not
shr
push
dec
stos
imul
inc
jno
imul
adc
mov
sbbl
arpl
dec
fcomp
xchg
and
nop
xor
inc
fwait
sbb
call
ss
ljmp
or
stos
mov
test
sub
sbb
push
jno
cmp
jmp
push
in
outsl
sub
cmp
mov
xor
pop
ds
jmp
or
pop
inc
lods
sub
pop
mov
movsl
jbe
add
jae
push
scas
dec
jecxz
popa
jecxz
iret
cmp
sub
fdivrs
jle
push
scas
addl
jg
outsl
dec
popa
cmpsb
mov
pop
test
fsubrs
mov
fbstp
mov
loop
js
dec
cli
cmp
cmpsl
inc
fldl
stc
into
es
int3
inc
cmp
mov
ja
and
mov
and
movsb
fs
mov
imul
leave
jo
push
mov
xchg
sbb
jne
add
xor
cmp
jmp
add
lea
and
ds
ljmp
jmp
jmp
or
cltd
mov
out
movsb
mov
sti
daa
aas
pop
push
push
xor
inc
out
inc
ret
cmp
dec
add
jns
iret
stos
lds
pushf
mov
inc
adc
ja
cmc
arpl
jbe
hlt
es
rorb
and
push
int
enter
mull
insl
xor
push
rorb
mov
sub
ja
adc
push
push
dec
dec
neg
psllw
int3
mov
mov
mov
nop
jp
scas
lret
mov
and
xchg
xchg
inc
lahf
pop
xor
xchg
lods
sahf
outsl
xor
mov
fwait
addr16
pop
out
mov
push
xor
lahf
mov
xor
shll
push
int
fnstsw
mov
inc
ret
scas
or
mov
or
xchg
xchg
scas
sahf
gs
dec
mov
ret
xchg
and
mov
outsl
adc
xor
in
or
add
dec
xchg
xor
or
ljmp
push
lret
js
sbb
sbb
inc
inc
lret
sbb
xor
loop
mov
adc
pop
shlb
stos
in
loope
mov
mov
out
ss
inc
test
orl
loope
jno
dec
and
xlat
lret
nop
cltd
mov
lahf
xor
adc
sbb
bound
xchg
xor
cmp
cs
jecxz
cmp
or
pusha
aad
cltd
or
mov
int3
in
add
into
sub
insl
pop
pop
in
jnp
scas
rcr
xchg
sub
lahf
xchg
enter
inc
or
enter
adcl
int
shll
icebp
rclb
push
cmp
push
imul
shl
scas
push
dec
mov
or
popa
loope
psubb
rclb
jmp
dec
test
sahf
add
push
icebp
or
in
ret
cmp
sub
into
daa
mov
imul
movsl
in
in
mov
test
mov
cwtl
xchg
iret
ja
enter
ds
add
sub
outsb
jns
xor
xor
push
xor
cs
insb
call
inc
popf
popa
sub
and
jmp
aaa
pop
xchg
cmpsb
aam
repnz
push
xor
leave
stos
sbb
pop
cld
push
sub
dec
inc
test
test
sahf
inc
frstor
clc
sub
rclb
jne
xchg
mov
and
jge
push
jne
push
das
outsb
movsl
fwait
xor
mov
mov
add
add
jg
push
or
push
and
xor
push
inc
push
xor
fiaddl
mov
loope
shll
mov
out
daa
popa
add
jns
aad
sub
test
movsb
mov
cmp
lock
lds
pusha
rcr
dec
xlat
or
mov
stos
mov
aas
pop
push
adc
inc
nop
push
pusha
jb
mov
push
out
lds
and
mov
in
int
sbb
jo
fldenv
pop
add
outsl
imul
inc
sub
sahf
dec
mov
jmp
ror
out
adc
sub
xlat
sbb
popf
sbb
adc
sbb
jg
sahf
lret
mov
std
lods
aam
int3
mov
jo
push
mov
mov
inc
inc
test
rorl
cmp
imul
or
aam
ja
aam
fmuls
mov
scas
movsb
cmpl
pushf
push
cmp
ficoms
out
inc
or
ss
xor
shl
mov
cmc
rcl
fdivs
mov
mov
pop
cld
pusha
in
mov
mov
flds
dec
test
xorb
or
lds
mov
fdivl
mov
loope
gs
fwait
mov
pop
ret
and
dec
jl
xor
loop
mov
jno
je
pop
lea
pop
and
fisubl
mov
shl
push
inc
iret
adc
push
jp
loop
adc
cltd
jns
mov
scas
jp
pop
add
add
mov
sub
shl
jne
stos
jb
mov
sub
sbb
mov
xchg
outsb
lock
bound
xor
nop
mov
in
stc
sbb
xchg
jno
scas
int
cmp
popa
movsl
js
test
neg
out
test
jo
in
fdivrs
cwtl
sub
mov
cmp
aad
pop
push
in
mov
cs
mov
idiv
jg
add
mov
pop
xchg
les
fstl
and
lret
sub
xchg
btr
mov
ret
inc
push
mov
dec
pop
push
pop
lahf
adc
jnp
inc
lcall
or
lds
add
adc
mov
jl
push
repnz
movl
cwtl
mov
aam
in
jl
outsl
icebp
push
xchg
dec
cli
dec
in
test
lea
jbe
inc
mov
push
mov
test
dec
in
dec
std
shl
inc
sbb
addr16
sub
stc
sub
int3
cmpb
movsb
xchg
sbb
subb
daa
push
xchg
sar
mov
pusha
cs
js
lock
jns
mov
push
pushf
mov
sti
lock
insl
xchg
out
sub
add
cltd
and
jno
mov
pusha
add
int
inc
stos
pcmpeqd
jmp
dec
scas
inc
and
popa
sub
aaa
and
adc
int
xchg
and
xorb
xchg
aas
and
js
push
xchg
scas
das
pop
daa
stos
push
test
dec
xchg
ds
mov
lcall
sub
aam
rcrb
inc
enter
jb
mov
popa
in
sbb
fs
insl
or
fs
sbb
and
cli
mov
sub
rol
hlt
pop
loop
and
fimull
ds
xor
iret
add
mov
xlat
stc
push
inc
pop
mov
andb
mov
adc
cmc
sub
lahf
insl
out
xor
in
loope
sbbb
mov
ret
and
pop
das
pop
xor
call
adc
ret
mul
cmp
mov
cwtl
cmp
aaa
or
pop
fdivrs
mov
xchg
shrb
mov
jb
or
jl
xor
in
mov
pushf
push
inc
sti
out
test
push
jo
ret
adc
das
lcall
sti
and
jp
xor
cmpsl
frstor
bound
dec
mul
in
lret
xor
rolb
cld
jle
inc
js
push
es
cmp
pop
sbb
rorl
scas
fnstsw
pop
cmpsl
sbb
icebp
inc
cmpb
scas
mov
test
add
aad
sarl
mov
int
lret
sbb
xorb
loope
xchg
mov
test
lock
mov
fistpl
daa
sarl
pop
daa
pop
into
push
jno
out
sbb
outsl
mov
lret
dec
imul
data16
or
xchg
int
lret
mov
adcl
test
arpl
mov
pop
mov
mov
mov
xor
and
enter
push
clc
mov
sbb
shl
idivb
cmp
jecxz
ljmp
lret
pop
subb
out
mov
aaa
imul
and
leave
mull
add
add
sbb
jns
add
pop
inc
mov
popa
dec
inc
ret
data16
xor
mov
add
xchg
rcl
adc
je
sbb
imul
icebp
test
mov
ds
in
adc
ret
testb
xchg
xlat
sbb
les
xor
inc
inc
repnz
stc
hlt
in
enter
es
pop
into
push
lds
or
test
mov
ja,pn
rolb
negb
arpl
fisubs
push
jecxz
sbb
nop
push
mov
insb
jbe
dec
xchg
and
dec
addr16
push
sbb
cld
jno
popa
ja
mov
lods
sbb
sub
rcrb
int
in
out
xor
lcall
sbb
mov
bound
sub
and
dec
mov
in
jne
add
out
xchg
mov
jae
inc
push
enter
cmpsb
mov
ja
inc
enter
add
loopne
out
lea
adc
pop
push
push
ja
je
xchg
xchg
loop
jge
fdiv
pop
adc
cltd
test
test
jb
loope
push
inc
stos
test
inc
fisttpll
in
decb
mov
jbe
bound
mov
mov
movsl
dec
arpl
loopne
lock
pop
push
adc
dec
pop
out
and
inc
scas
sub
xor
or
xor
fisttps
test
lods
dec
mov
mov
jmp
mov
dec
add
or
in
jae
push
push
pop
push
jge
pop
rcll
std
outsl
lcall
lea
decb
pop
test
call
roll
xor
aad
mov
sub
imul
notb
xor
and
add
insb
test
pop
xchg
xchg
dec
pop
loopne
add
jo
xor
cmp
fsubl
mov
pop
rorb
ret
mov
sbb
xchg
jl
std
out
pop
jge
icebp
dec
test
out
sub
and
stc
jle
icebp
out
adc
lcall
sbb
xor
movsb
jbe
mov
aad
cli
push
or
sub
mov
adc
mov
sbb
popa
loope
jge
rol
cli
sti
mov
ljmp
add
rorl
out
mov
mov
sti
out
mov
fldt
outsb
xor
push
mov
sub
add
and
sbb
and
pop
adc
and
mov
jne
lahf
hlt
jp
and
add
js
stc
std
lahf
adc
mov
ret
sbb
xor
and
jl
sbb
jge
stc
sahf
xchg
cwtl
mov
xchg
lahf
lcall
cmp
mov
mov
shl
sbb
add
addr16
addr16
cmpb
mov
pop
mov
lcall
jg
cli
clc
test
xor
sbb
mov
je
fbstp
or
repnz
dec
stos
mov
and
xchg
sbb
in
sbb
cmp
adcb
mov
lods
inc
jno
and
mov
fcoms
mov
fwait
int3
inc
data16
mov
enter
jb
ss
sarb
add
stos
cs
out
sub
jge
cvtdq2ps
xor
orl
adc
xchg
xor
or
outsl
push
sbb
push
jecxz
inc
sub
out
enter
xchg
xor
das
adcb
cmp
sbb
cmpsb
sub
dec
jno
repz
fwait
jnp
or
fwait
in
mov
mov
inc
push
lods
imul
pop
out
dec
xor
mov
xchg
cmp
sub
imul
inc
sbb
mov
cld
or
dec
mov
push
bound
in
cmp
cld
pop
rcl
mov
mov
sahf
out
js
bound
jl
jp
fdivs
call
mov
fcomip
fmul
mov
sub
sub
inc
inc
lret
push
scas
sbb
loope
outsl
cmpl
je
xlat
lret
fs
cwtl
inc
lahf
call
pop
sti
and
test
mov
pop
lods
push
add
ret
jl
das
mov
push
pop
scas
or
scas
pop
imul
out
ss
fnstcw
ja
mov
popl
scas
and
in
pusha
aaa
call
xchg
mov
jnp
lock
cmp
pop
push
stos
lods
and
or
pop
in
in
mov
orl
call
and
push
fmuls
fisttps
mov
jno
das
daa
push
repz
adc
jecxz
mov
movsb
pop
cmc
fadd
aaa
mov
fwait
pusha
dec
cmp
in
in
addr16
pop
inc
pop
loope
clc
in
insb
icebp
pop
push
add
in
and
movsl
sti
mov
jl
fmulp
and
or
aam
mov
dec
hlt
xorb
and
dec
movsl
inc
xchg
mov
hlt
sub
pop
cltd
aam
push
mov
cmp
push
nop
jnp
aaa
mov
xchg
cmp
cmp
lret
jne
cli
cld
insl
dec
adc
pushf
sub
or
fisttpll
out
call
fdivrs
rep
negl
xchg
stos
mov
cmp
mov
leave
out
iret
mov
loop
jb
and
xchg
int
sbb
mov
inc
inc
dec
repz
movsb
pop
je
lea
sub
iret
aaa
xchg
arpl
adc
xchg
cmpsb
sub
shll
lods
sbb
cwtl
mov
mov
orb
fstpl
xor
clc
mov
and
and
imul
call
xlat
xchg
in
sub
fnstsw
stc
sbbl
mov
sbb
subl
dec
cmpsl
fstpl
fistl
int
adc
test
jno
xchg
xor
add
jl
in
xor
add
push
pop
and
xor
push
jmp
andl
int3
jmp
or
leave
fwait
push
lret
das
rcll
je
add
stos
out
cmp
lret
xor
xor
sti
testl
js
andb
xchg
inc
or
scas
sbb
xor
mov
xchg
adc
xchg
fxch
inc
fisttpll
je
into
mov
pop
int
inc
cmp
sbb
xor
add
adc
xchg
xchg
adc
sub
icebp
xchg
adc
push
mov
cmp
icebp
adc
pop
cmpsb
xor
das
data16
pop
mull
inc
mov
enter
loope
stos
push
cmp
sub
pop
mov
lcall
in
mov
xchg
sbb
clc
ds
mov
int3
or
sub
in
cmpsb
out
add
mov
pushf
jmp
mov
sbb
mov
int3
cmp
aam
add
cmp
and
pusha
mov
mov
mov
mov
sub
fldl
xchg
out
out
and
push
push
xor
pusha
mov
adc
pop
add
adc
adc
insb
xor
add
xor
sub
adc
jp
mov
xchg
in
incb
test
mov
mov
loopne
outsb
push
mov
daa
out
lcall
mov
mov
xor
xor
iret
lods
aaa
inc
cld
aad
pop
push
ljmp
lea
imul
in
scas
popl
lret
inc
and
into
or
cwtl
sbb
push
xor
subl
imul
inc
xchg
mov
or
xor
mov
mov
iret
ljmp
mov
ret
inc
jle
xchg
fnstenv
sbb
lock
pop
nop
mov
xchg
cld
aam
push
adc
inc
scas
xchg
dec
int3
popf
add
xchg
mov
test
mov
mov
ds
mov
jmp
pop
pop
lahf
adc
mov
fs
xlat
out
mov
cmpsl
and
subb
lret
cmpsb
mov
jmp
cmp
mov
lods
and
out
lea
lods
lret
pop
mov
and
add
xorb
jno
call
or
dec
push
sub
jns
cmp
inc
or
mov
rcrl
inc
inc
adc
jnp
dec
in
testl
dec
fxch
pop
popl
cmp
sahf
and
xchg
sahf
sub
pop
mov
mov
in
mov
adc
xchg
cmp
loopne
stc
mov
push
ds
and
push
in
xchg
iret
jns
lock
xor
shll
xor
push
fmull
int
movsb
push
outsb
push
xor
data16
ret
cltd
cmp
cmp
xlat
sbbb
test
pop
jecxz
xchg
pop
outsl
int3
jae
push
fistl
pusha
test
inc
mov
push
insl
shll
mov
bound
mov
dec
push
sub
cmp
mov
je
dec
adc
mov
outsl
ljmp
ljmp
les
xchg
mov
in
inc
stos
mov
jp
inc
jae
lcall
inc
ror
scas
mov
inc
adc
cmpsl
mov
push
and
pop
mov
jecxz
ja
sbb
arpl
jge
and
leave
cmp
scas
lahf
mov
jg
loop
stc
mov
imul
movsl
jae
decl
ja
movsb
mov
mov
filds
adc
popf
jmp
mov
jns
fxch
jge
les
cli
inc
pop
gs
jbe
ss
adc
jp
mov
fiaddl
or
xchg
mov
loope
jo
roll
cmc
inc
fdivrl
pusha
xchg
cltd
jmp
add
rcll
fmull
jle
imul
pop
popa
roll
pop
xor
mov
lods
in
add
push
adc
mov
mov
fwait
in
adc
xor
mov
push
mov
sbb
jne
in
mov
out
jecxz
cltd
or
ficomps
mov
icebp
mov
dec
push
or
push
inc
cmpsb
jbe
stc
jmp
adc
shld
int3
outsl
aas
push
leave
cmpsl
fs
mov
mov
pop
leave
popf
movsl
sub
pop
inc
or
decl
mov
adc
push
lret
dec
push
inc
out
add
mov
adc
xchg
pop
in
cmpsl
out
hlt
std
and
sarb
push
cmp
movsb
xor
xor
sbb
movsl
cmpsl
inc
sbb
jg
mov
or
inc
loopne
xchg
push
mov
ret
dec
mov
xchg
push
shll
in
or
sahf
jbe
sub
enter
mov
mov
xchg
out
cmp
aaa
icebp
pusha
add
mov
cmp
push
cmp
mov
fisttps
out
mov
bound
or
repz
pop
jmp
xchg
add
adc
gs
cmp
jge
xchg
jo
lock
mov
dec
fisttps
leave
sbb
loop
cs
mov
mov
ja
xor
lds
daa
jno
in
inc
cld
jae
pop
popa
mov
xchg
pop
repnz
mov
and
mov
scas
dec
xor
jns
sbb
mov
popf
xor
sahf
repnz
xlat
rcrb
nop
aam
mov
outsl
and
xor
pop
sbb
outsl
fwait
push
sub
mov
lods
hlt
or
jecxz
cmp
fnstenv
test
andl
in
rorl
lcall
push
adc
mov
test
xlat
into
mov
dec
iret
in
das
je
es
notl
dec
cli
adc
fcom
inc
dec
push
mov
or
bound
pop
test
in
inc
andl
inc
fcmovbe
push
ds
int
and
aam
push
cmpsl
xor
loope
mov
xchg
mov
dec
xor
push
repnz
add
les
or
xor
pop
push
mov
dec
mov
or
leave
enter
jno
add
add
push
pop
pushf
loop
or
jp
pop
sti
clc
repz
dec
jns
imulb
push
pop
push
push
jg
scas
insl
addr16
js
out
jg
pop
mov
aad
jg
jge
mov
sub
out
out
sub
es
pop
jle
sbb
sbb
nop
push
enter
sar
add
addb
add
cmp
sbb
lahf
mov
in
dec
test
or
cwtl
jne
std
pop
inc
push
ds
in
das
daa
hlt
repz
cwtl
scas
lock
push
out
and
jle
sarl
push
out
push
fnstcw
mov
test
mov
leave
jns
ret
ja
shrl
mov
pop
lahf
outsl
jle
cmp
push
sahf
jmp
xchg
or
jge
in
inc
jg
xor
xor
cli
add
cmpsl
mov
inc
test
nop
jecxz
fnstsw
adc
roll
inc
sti
shrb
xchg
lea
xor
mov
pop
in
rcrl
xorl
pushl
push
jmp
push
push
jl
mov
mov
push
movsb
mov
scas
lcall
or
addr16
pop
scas
adc
mov
sbb
cli
sbb
dec
ret
dec
mov
jl
jno
sahf
and
xor
aaa
inc
repnz
cmp
pop
out
pop
cmpsl
mov
jae
fnsave
and
fdivrl
scas
into
data16
dec
push
fs
cltd
mov
pop
ret
pop
or
or
addr16
ret
push
out
cmpsb
add
sbb
loopne,pt
cmp
mov
pop
stc
std
cli
popa
xchg
lcall
out
shlb
insl
sarb
lds
adc
inc
sarl
insb
lds
das
popa
sub
jg
enter
addl
sub
cmp
mov
or
lcall
arpl
cli
scas
push
popf
add
or
das
mov
jmp
mov
jnp
xchg
xchg
cmp
clc
add
fstpl
mov
popf
pop
mov
xchg
sub
push
push
rcl
add
gs
sub
mov
and
dec
repnz
out
mov
lret
xchg
subl
cmp
fdecstp
push
dec
cmp
js
pop
in
push
jnp
cmp
cmp
and
pop
hlt
or
and
sbb
cwtl
test
sbb
movsl
outsb
icebp
rorl
adc
out
mov
fistpl
gs
jge,pt
xchg
pop
js
pushf
xchg
xcrypt-ofb
cmpsl
sub
lds
mov
ds
imul
or
push
or
popa
aam
mov
cmp
cmpsb
adc
xchg
ficoms
pusha
add
vphsubbw
icebp
jb
sub
inc
xchg
jae
clc
jge
add
insb
push
lods
cmpsl
push
cld
xor
xor
fildl
lds
fsubl
stos
lds
test
and
xor
lret
in
sub
outsl
outsb
mov
jecxz
sbb
pop
xor
hlt
jb
jge
call
stos
sub
and
fcoms
movsl
testl
ljmp
mov
mov
jbe
xlat
test
and
xor
arpl
push
neg
or
or
adc
fistpl
mov
repz
aaa
lods
xchg
iret
repz
cmp
rcr
pusha
cltd
rcll
insl
xlat
pop
cs
cli
inc
je
adc
mov
add
sbb
xchg
sub
inc
xchg
xchg
cmp
push
clc
dec
gs
loop
stos
push
or
or
test
lret
jno
pop
cld
mov
lret
out
add
sbb
pop
or
outsl
shr
rcll
fnsave
and
cmp
xor
pop
icebp
stos
addr16
adc
test
xorl
in
ficompl
fimull
xchg
lock
lcall
outsl
fbstp
lcall
mov
jne
out
jno
cmp
jmp
ds
mov
push
adc
jne
push
ja
test
xor
movsb
mov
popa
jmp
fs
cmp
xchg
test
push
xchg
dec
and
jg
dec
mov
sub
add
sbb
out
mov
fstps
mov
ret
push
xchg
mov
sub
mov
push
or
cmpl
in
adc
addr16
repz
bnd
jp
loop
bound
inc
daa
fs
sbb
mov
inc
xor
rorl
xchg
xchg
js
mov
aam
out
insb
jns
mov
xchg
popa
scas
divb
pop
mov
jno
insb
nop
ljmp
xor
out
loop
ljmp
rclb
sbb
out
push
lret
fstps
into
rorb
scas
mov
imul
data16
clc
or
jb
es
pop
cwtl
shl
data16
clc
mov
push
fists
xor
bsr
data16
repnz
xor
jo
adc
sub
mov
dec
or
pop
xlat
leave
inc
lahf
sbb
lds
mov
popf
xchg
jns
and
xchg
out
push
mov
in
push
jno
jnp
jmp
call
inc
push
mov
sub
mov
and
push
adc
mov
mov
xchg
insb
pusha
cli
aas
dec
mov
loopne
fs
sbb
xchg
inc
dec
push
mov
jle
stc
pop
shr
mov
cmp
xor
fs
push
sub
roll
popa
and
adc
mov
mov
int3
cli
cld
mov
sti
or
mov
mov
pushf
xlat
mov
dec
sbb
out
adc
add
mov
jp
mov
mov
mov
dec
add
in
insb
iret
leave
jns
insb
lahf
push
xchg
pop
cltd
into
mov
dec
xchg
mov
nop
sbb
ja
push
dec
dec
subw
scas
push
rclb
sub
ljmp
iret
ss
xchg
ss
and
in
jo
popf
data16
jo
adc
jecxz
loope
add
or
mov
stos
add
inc
or
out
pusha
jo
popf
iret
fs
enter
es
mov
sub
roll
enter
aaa
inc
or
scas
xor
mov
sbb
pop
fcoml
inc
dec
sbb
jmp
mulb
loope
sbb
xchg
push
push
loope
xor
add
and
dec
xchg
add
xchg
push
fdivr
xchg
cmp
cmpsb
mull
pushf
inc
mov
repnz
or
fldt
adcl
js
stc
out
test
test
outsb
sub
out
or
insl
into
stos
xchg
mov
cmc
decl
stos
iret
jle
imul
or
and
jbe
xchg
imul
or
mov
adc
mov
mov
cltd
add
lahf
jecxz
push
insl
cltd
mov
shll
jo
sbb
jnp
in
or
loope
test
ret
outsl
call
rcll
mov
movsw
stos
shlb
and
addr16
aam
xchg
out
mov
ret
ds
mov
in
push
repnz
mov
adc
scas
inc
loope
clc
sbb
test
cmpsb
or
mov
iret
cmc
imul
pusha
enter
cmp
loope
dec
push
dec
jb
movsb
xchg
cmp
jo
jl
jge
daa
ror
imul
mov
push
and
pop
test
jle
in
cltd
ret
mov
fs
xor
je
jge
sbb
outsl
ja
and
pop
jno
dec
sub
pushl
mov
sarb
sbb
sarl
andl
ljmp
out
xor
in
dec
test
mov
sbb
test
cld
xchg
mov
addr16
cmp
popf
fldcw
jnp
xchg
adc
insl
sti
lcall
xor
in
int3
inc
out
addr16
sub
scas
jns
push
test
lods
es
repz
mov
loope
or
fwait
inc
and
sub
ds
cmp
cld
dec
jge
xchg
sub
mov
add
adc
ret
fidivl
int3
or
or
mov
and
sub
jbe
cmp
inc
mull
in
mov
sbb
jmp
add
jns
insl
push
sbb
ficompl
popf
push
mov
out
lock
sbb
dec
jg
inc
cmp
xor
in
inc
push
inc
sbb
xchg
adc
int3
cmp
push
fucomp
lea
add
outsl
push
repnz
push
jno
jl
pop
or
fldt
lock
push
adc
or
movsb
jnp
mov
xlat
push
mov
pusha
lret
push
add
faddl
xor
mov
out
cmpb
insl
test
outsb
lret
add
rorb
ds
lret
les
cmpsb
fcoml
shlw
and
jo
sub
clc
cs
xor
pop
jns
imul
pop
fldt
cwtl
pop
push
repnz
mov
mov
mov
push
jno
sti
call
jp
movsb
gs
movsb
mov
bound
inc
xchg
push
into
cmp
ljmp
cmp
adc
out
add
adc
sub
lea
and
int3
mov
cmpsb
test
fcompl
insb
imul
jmp
das
inc
adc
leave
fdivl
mov
jb
nop
jbe
mov
inc
cmp
cwtl
fildll
shr
faddp
ror
lods
aad
xor
sub
mov
pop
xchg
inc
repz
add
mov
out
fs
das
incb
in
push
xchg
and
mov
test
or
sub
shr
xchg
out
aam
pop
xor
adc
mov
inc
mov
mov
and
pop
lret
in
push
push
fldt
dec
pop
imul
test
in
mov
push
sbb
fstpl
inc
test
jb
movsb
add
push
xor
int
mov
xor
ja
decb
mov
ficomps
imul
add
xchg
pop
adc
test
xor
pop
adc
popf
and
jecxz
push
shlb
jle
mov
jns
ja
inc
xchg
adc
sbb
leave
arpl
dec
clc
or
in
or
mov
test
outsl
inc
jecxz
xor
dec
rol
lahf
pop
mov
sbb
jp
sub
das
dec
cwtl
push
movsb
shlb
ss
mov
lahf
push
ds
lds
push
arpl
or
mov
aam
xor
out
test
int3
mov
dec
inc
pop
addr16
pusha
push
lea
mov
pop
inc
repnz
sbb
and
adc
xor
xor
out
xchg
cmc
test
orb
mov
jl
mov
jnp
subl
outsl
inc
aas
bound
mov
jno
xchg
sti
mov
imul
mov
rcr
pop
fs
fisubrl
testl
fnstcw
ds
mov
mov
test
insb
mov
scas
repnz
sub
mov
push
xlat
sub
jns
pop
push
fcmovu
add
jmp
jg
inc
push
andb
sbb
nop
cmpsl
sbb
jmp
cmp
dec
jecxz
lcall
mul
adc
jno
jno
xor
xchg
inc
push
out
sub
fidivl
jg
popf
xchg
sub
push
insb
ret
insl
rcrb
arpl
cmp
fld
pushf
sbb
inc
cmp
fstpl
add
mov
pop
clc
popa
je
cmc
cmp
lock
negl
repnz
lds
cs
xlat
xchg
in
cmc
lock
dec
fidivrl
pop
adc
cli
xchg
jmp
lcall
sbb
mov
cmpsb
push
mov
mov
jp
ror
outsb
adc
imul
fiaddl
daa
or
mov
imul
leave
lods
sub
loope
and
es
sbb
pop
stos
popf
and
pop
stos
add
push
outsb
ret
repz
shll
adc
pop
xchg
subb
hlt
scas
inc
mov
ljmp
aam
ljmp
adc
mov
daa
dec
xor
push
sar
inc
lock
push
xlat
lret
jne
push
lcall
push
je
ss
jle
jne
fnstsw
jmp
mov
adc
sbb
int3
sbb
mov
in
aaa
rclb
xchg
xchg
xor
lods
mov
mov
mov
out
xor
sub
or
pop
and
loope
popf
and
movsb
test
dec
loopne
xchg
mov
test
pop
lods
stos
dec
lods
xchg
mov
out
xchg
jae
dec
jle
lahf
dec
stc
testl
or
cmp
aas
dec
inc
sub
sbb
aam
xor
pop
imul
xor
sbb
pop
in
xchg
addb
xor
add
xor
popa
shrl
in
xor
mov
push
mov
ret
lods
pop
adc
test
loopne
das
imul
movsb
out
call
sbb
orl
dec
mov
ret
push
pushf
cmp
adc
imul
sbb
jmp
inc
mov
mov
dec
cmp
or
nop
cmc
into
and
lods
or
mov
das
lods
retw
mov
mov
add
push
fucomp
jnp
push
ret
fistps
fwait
out
mov
jnp
mov
pop
daa
mov
cmp
pusha
xchg
les
stos
or
mov
hlt
push
mov
scas
idivb
inc
push
and
and
ret
mov
ja
mov
mov
mov
popl
dec
and
orl
sti
jbe
pop
shlb
in
scas
mov
jae
dec
stos
cmp
hlt
sti
adc
mov
fisubl
push
pop
pop
inc
loop
popf
lock
fcmovu
out
cmp
shlb
xchg
jmp
jecxz
pop
xor
or
sub
inc
arpl
xchg
jo
xchg
insl
insl
sub
scas
scas
pop
xchg
jo
pusha
pop
adc
scas
add
pop
pop
out
in
hlt
push
imul
push
scas
cmp
cmpsb
pop
sub
or
xor
mov
fmulp
cld
ja
xchg
aas
cmpsb
mov
es
add
cmpsl
mov
mov
adc
repnz
mov
lock
cmp
mov
mov
aaa
push
push
xor
fdivr
xchg
int
ficoms
fcoml
shlb
movl
enter
mov
popl
xchg
add
ss
aad
xchg
xorl
mov
aaa
nopl
and
call
loop
cmpsb
xchg
jmp
xor
cwtl
xchg
push
lock
fidivrs
leave
outsl
clc
mov
test
lcall
jge
push
adc
jo
adc
and
cmc
jbe
pop
push
sahf
dec
ljmp
sbb
cli
js
rorl
sbbl
hlt
mov
cmp
scas
adc
xor
loopne
loope
outsb
out
pop
popf
push
mov
pop
adc
add
popa
adc
loopne
ds
adc
xor
insb
adc
call
fprem1
push
arpl
out
xorb
jne
pop
les
enter
mov
or
cli
cwtl
sbb
cli
pop
cli
pop
lahf
and
pusha
dec
aas
test
pushf
add
cmpsl
scas
push
pushf
or
cmp
xchg
mov
lea
jge
push
loop
mov
dec
sbb
fsub
jnp
int
loopne
loopne
mov
repnz
insb
cli
sub
sbbb
sub
push
insl
les
dec
fisttpll
fisubs
or
xchg
ret
in
pop
pop
mov
fcmovnbe
jns
dec
and
mov
icebp
xchg
dec
insb
mov
mov
dec
lods
xor
push
lods
lods
lods
orb
jo
sbb
and
xchg
xchg
sub
xor
xor
jbe
aas
inc
rcl
dec
push
jns
in
mov
int
jecxz
in
ds
push
add
and
mov
cmpsb
loope
outsl
pop
ret
subb
dec
jno
push
in
cmp
rcr
mov
lret
out
add
xor
test
pop
insl
div
or
sub
into
test
and
mov
insl
jp
pusha
adc
outsl
in
data16
mov
icebp
mov
sbb
arpl
ret
sbb
imul
cwtl
push
and
js
nop
icebp
sbb
out
in
in
mov
or
add
sbb
jne
add
dec
xchg
mov
test
fisubrl
shll
cmp
cmp
mov
add
fidivrl
test
test
and
mov
mov
mov
jmp
inc
jae
push
xchg
push
addb
sbb
adc
je
jle
inc
adc
imul
mov
mov
jecxz
jno
loope
inc
and
insl
inc
jge
cmp
or
iret
push
repnz
fidivl
cmpl
mov
fcmovnbe
imul
cmp
fmuls
je
ja
inc
insl
ret
add
lea
push
jno
outsb
out
ja
pop
jge
pop
rorb
aaa
xchg
aad
mov
outsl
arpl
in
je
cmp
notb
int
testb
xchg
testb
ds
aad
shll
mov
and
repnz
decl
enter
call
orb
or
stos
leave
cs
out
iret
call
outsb
cmp
jns
xchg
rorl
lods
les
xor
pop
push
rcrb
aad
imul
je
cmpsl
faddp
mov
nop
or
inc
mov
mov
mov
sub
std
xor
insl
mov
inc
insb
mov
movsl
sbb
filds
test
inc
sbb
std
daa
inc
jl
shlb
adc
cltd
loope
orb
lcall
loope
stos
pop
push
movsb
icebp
xlat
fisubrs
cs
int
adc
inc
mov
sub
scas
rcl
shll
cld
arpl
pop
mov
out
fsubs
mov
adc
mov
inc
xor
mov
js
inc
or
lds
sub
push
gs
addb
push
or
int
dec
fldl
xchg
stc
mov
or
jmp
hlt
xchg
popf
push
jno
pop
orb
jge
push
sbb
jb
pusha
cltd
jo
popf
xor
sbb
movsb
scas
push
mov
xlat
scas
and
stos
in
loope
nop
adc
lahf
out
dec
adc
sub
mov
inc
ljmp
leave
push
popl
shlb
stos
lods
sbb
cmp
add
inc
mov
mov
pop
cld
push
sub
mov
stos
cmpsl
nop
push
cmp
ret
incl
je
mov
in
and
dec
test
leave
inc
dec
fnstenv
cmp
or
outsb
hlt
data16
push
push
push
je
xchg
std
jge
jecxz
inc
mov
popa
pop
test
imul
push
xchg
pcmpgtw
lret
nop
pop
cmp
in
les
fimuls
jl
inc
push
stos
jle
out
sub
add
in
lds
sbb
push
fsubs
daa
ja
pop
psrlw
sub
push
push
out
and
add
adc
cmp
int3
insl
stos
or
les
loopne
mov
jle
aam
outsb
insl
insl
or
cmp
ja
stc
and
addr16
leave
inc
cli
ffree
movsb
pop
cmp
pusha
repnz
mov
fs
lods
out
sub
sub
sbb
negb
gs
mov
xchg
stos
mov
es
mov
jb
lods
dec
adc
scas
mov
test
outsb
sarl
mov
adc
jae
arpl
out
add
xorl
or
hlt
sbb
cmp
cmp
or
or
sbb
add
mull
arpl
lret
movsb
dec
cmp
mov
pop
mov
ret
pop
cmp
imul
or
xchg
lods
and
xchg
cmp
jg
inc
fmull
cmpsb
ret
cmp
mov
mov
scas
xlat
adc
sahf
int
jecxz
pusha
sub
and
insl
test
dec
or
pushf
cmp
xor
push
add
jbe
cwtl
stos
aas
popf
movsl
sub
cmc
xor
insl
mov
loop
repz
jns
movsl
jns
in
sub
mov
out
or
adc
mov
inc
mov
jb
sbb
xor
jae
js
mov
jecxz
xor
popa
mov
mov
fistpll
dec
add
fistpl
pushf
jns
in
in
aas
push
jge
popl
dec
mov
xor
sub
lds
xchg
shrl
push
outsl
jnp
cmp
insl
push
jp
xor
mov
int
fistpll
dec
stos
lret
and
jl
data16
xlat
push
lcall
shrb
and
inc
int
sbb
dec
enter
dec
lock
push
sbb
and
inc
arpl
mov
xchg
test
and
push
jmp
test
adc
mov
jecxz
inc
int
mov
xor
into
pop
xor
mov
cmpb
inc
sub
mov
jge
dec
mov
inc
xchg
xchg
adc
add
lcall
pcmpgtd
cwtl
imul
leave
cmp
lea
cmpsl
insb
push
clc
pop
rep
dec
or
adcb
xchg
cmp
jae
jp
cltd
mov
aaa
xchg
sub
ljmp
mov
test
adc
mov
icebp
mov
mov
lods
xor
sub
xor
jmp
rcr
dec
insb
pop
and
js
test
mov
push
lock
aam
cmp
or
sbb
ds
sarb
mov
std
jnp
jge
out
xchg
cmc
test
testl
out
and
and
cs
xor
repnz
cmp
rcl
or
xlat
in
xchg
inc
pop
dec
push
jmp
pusha
mov
jcxz
mov
mov
jg
movsb
pop
rcrb
adc
roll
idivl
push
sub
cmp
stos
mov
push
xor
inc
pop
mov
add
xor
js
inc
leave
jmp
add
push
jae
sahf
jb
pop
or
push
rorl
shlb
sbb
fs
ja
into
ss
call
pushf
and
cmp
mov
mov
filds
jmp
std
add
fldt
and
mov
mov
ror
xor
jbe
lods
sub
mov
jle
cmp
call
mov
adc
in
inc
fidivs
int3
dec
sbb
addb
scas
add
out
shlb
ss
int
lods
repnz
fisubs
insl
sbb
insb
gs
jne
push
mov
repnz
cmp
rcrl
push
repz
mov
inc
pop
test
or
cmp
enter
fcomps
mov
daa
sbbl
roll
adc
ret
in
in
mov
fmul
test
mov
repnz
shrl
and
mov
imul
outsl
hlt
addb
jge
sub
mov
popf
lcall
bound
push
ret
inc
add
push
add
fisttpll
popf
mov
pop
cltd
leave
out
lret
mov
or
jp
and
add
dec
lahf
push
push
pop
rorl
sti
and
xchg
pop
jbe
loope
test
push
fimull
inc
je
loop
sbb
popa
jl
outsb
js
pop
inc
iret
ret
jg
dec
hlt
push
enter
in
testl
xchg
jle
mov
mov
mov
or
int
dec
and
clc
and
stos
sbb
iret
test
inc
ljmp
cmpsl
mov
adc
repz
mov
loopne
testb
adc
sbb
or
insl
add
jbe
je
mov
stos
pop
mov
pop
gs
das
cmp
in
clc
pop
out
call
mov
negl
xchg
xor
adc
push
xchg
data16
and
cltd
adc
and
push
lods
mov
push
jge
cmp
jb
inc
int
mov
sub
in
stos
lods
pop
adc
ret
fisubrl
add
pop
mov
or
imul
scas
adc
scas
js
mov
aad
jecxz
insl
inc
fisubrl
std
jns
loop
call
daa
cwtl
hlt
fidivs
out
imulb
push
test
fldt
aam
aaa
mov
in
imul
in
cmp
push
push
lock
hlt
pop
adc
sbb
jl
pop
cld
pop
stc
push
jmp
loope
pop
ljmp
fstps
xor
mov
sbb
fisubrl
aaa
stos
fistps
dec
mov
lea
lea
lds
test
xor
mov
in
cltd
jecxz
pop
jle
add
andl
adc
or
inc
lock
sub
aam
out
lods
jle
lret
jnp
xlat
mov
mov
sahf
out
jl
and
or
mov
mov
xchg
jns
stos
mov
mov
sub
sbb
inc
insl
mov
sbb
mov
adc
pavgb
sbb
jp
movsl
ljmp
pop
or
insl
int
push
add
aaa
inc
pop
popf
and
fcmove
fmul
inc
push
adc
cmp
push
into
mov
pop
and
jge
repz
mov
cltd
or
not
mov
pusha
dec
or
jg
popa
imull
or
test
sti
lret
ficompl
push
mov
pop
add
movsl
jp
xor
cwtl
imul
ret
fmulp
lret
cmp
pushf
adc
ja
mov
loop
mov
out
push
inc
loope
mov
dec
pop
push
or
pop
xlat
andb
test
imul
push
push
mov
mov
shlb
ret
dec
hlt
sub
jno
sbb
dec
mov
xchg
imul
mov
rcrb
pop
test
cmp
or
imul
cmp
sub
movsb
into
and
mov
test
or
dec
stos
sub
nop
push
xchg
pop
mov
cmc
addr16
rol
xchg
cmpsb
dec
push
mov
movsb
pushf
das
data16
inc
ret
mov
mov
cmp
and
nop
ljmp
or
popf
ficomps
push
add
cmp
into
filds
inc
stos
or
cwtl
xorb
bound
into
das
or
std
pop
dec
xchg
cmp
xlat
aaa
shlb
repz
setb
jmp
inc
scas
ljmp
stos
jmp
imul
adc
ljmp
mov
cmpsl
stos
sbb
cmpsl
mov
push
cmp
fs
mov
xchg
cmp
pop
cmp
outsl
cmp
inc
aad
leave
or
sub
es
repz
je
mov
pop
nop
push
mov
ja
push
mov
xchg
outsb
test
xlat
je
dec
lods
pop
push
mov
inc
xchg
addr16
mov
push
adc
stos
pop
int3
cmp
test
rep
lods
pop
add
mov
icebp
fs
cld
mov
push
adc
icebp
sub
xchg
les
cmp
call
popf
add
out
mov
mov
mov
in
out
pop
mov
cmp
nop
sbb
add
inc
pop
push
aaa
insb
jg
out
mov
mov
dec
pop
jge
das
jmp
sub
movsl
lea
int3
mov
cmp
movsl
jecxz
add
cmp
xor
pop
out
xor
jno
daa
add
jbe
fsubrl
movsl
xchg
push
mov
sbb
mov
or
jb
repnz
pusha
decb
stos
push
jg
mov
dec
cmp
sbb
ljmp
movsl
inc
imul
aam
stc
iret
xchg
pop
jb
cltd
mov
mov
cmp
popf
push
and
dec
mov
std
test
xor
mov
push
ret
nop
lahf
mov
sub
xor
mov
inc
pop
mov
out
int3
lds
inc
test
cmp
pop
mov
mov
sbb
sub
adc
inc
stos
ret
mov
aaa
cmp
pop
fsts
adc
lock
mov
mov
aas
fisttpll
inc
sbbb
fstpt
inc
test
sub
mov
dec
shlb
sub
aad
or
test
repz
andb
jne
repnz
jecxz
add
imul
fdivp
cmp
xchg
adc
cmpsl
mov
nop
mov
lods
insb
lock
sub
cmc
mov
cmp
je
push
xchg
out
jae
mov
mov
rorb
cmp
xor
push
inc
shrd
dec
jp
insl
push
mov
mov
push
mov
clc
inc
dec
lods
in
scas
dec
fnstsw
dec
inc
push
or
ss
add
sbb
in
or
popf
inc
pop
test
test
mov
mov
sbb
mov
inc
sahf
cmp
shlb
sub
pop
shlb
mov
cmp
xchg
pop
xchg
movsl
push
ret
call
cmp
adc
or
cmc
push
stos
cmc
pop
jmp
push
add
xchg
add
mov
mov
cmp
fdivrl
leave
data16
daa
dec
jb
mov
test
cli
push
mov
push
cmovle
or
in
sub
push
sbb
fidivs
inc
mov
faddp
mov
push
add
inc
adc
jp
shll
jp
sub
dec
ja
xchg
add
jp
mov
xchg
outsl
in
insl
ds
rclb
popf
push
pop
sbb
insb
adc
test
mov
out
imul
scas
pop
add
xlat
xor
cmp
int
negl
ret
roll
jne
in
adc
filds
cmp
mov
and
dec
pop
push
mov
icebp
push
mov
cmp
int3
xor
in
mov
xor
inc
mov
fidivs
and
arpl
out
sbb
and
push
xor
addb
insl
xchg
test
icebp
cmpb
daa
and
cmpl
mov
stos
test
int3
scas
dec
dec
movsl
xchg
pushf
in
push
in
cmp
fisttpll
lods
mov
pop
lea
aam
mov
imul
mov
jg
pop
jne
sbb
loopne
xchg
mov
inc
bound
push
inc
xchg
daa
scas
mov
pop
lods
test
push
mov
adc
in
xchg
add
mov
fcompl
add
sub
xor
dec
fisttpll
push
jns
mov
or
aas
cmpsb
adc
cld
pop
cmp
mov
pop
sahf
mov
js
mov
pop
scas
hlt
adc
cmp
dec
inc
cld
sbb
xchg
js
loopne
out
add
jne
and
add
shll
push
fnstsw
sub
xchg
xor
mov
js
jb
lds
mov
cmp
fnstenv
inc
movsb
xchg
cmp
mov
inc
add
int
sti
aas
ret
and
rcrl
jns
cmp
cmp
movlps
push
test
call
movsl
in
shl
push
aaa
das
in
mov
repnz
aas
jns
mov
jecxz
pop
cmc
cld
sub
sub
sbb
imul
aas
push
mov
xchg
mov
int3
inc
insl
sub
xor
fstps
pop
adc
arpl
xor
imul
inc
dec
test
mov
ss
gs
js
inc
mov
call
mov
cmp
and
cmpsb
out
js
ror
pop
fwait
negl
mov
adc
in
leave
cmp
lds
mov
hlt
fisubrs
mul
mov
push
mov
xchg
aad
and
xor
pop
mov
mov
das
out
pop
sbb
jmp
mov
call
push
hlt
in
lods
inc
in
fidivrs
movb
test
clc
movsl
push
stos
adc
cmpsb
xchg
mov
pop
add
mov
dec
add
dec
mov
sbb
push
movsb
imul
popf
dec
inc
repnz
add
mov
inc
mov
xchg
mulb
xor
adc
sahf
ret
fidivrs
cmp
cmpsl
pop
sub
gs
mov
pop
xor
mov
xchg
rol
or
cmp
hlt
xchg
out
addr16
jp
sar
pop
loopne
das
inc
icebp
inc
xor
jae
sub
sub
shll
into
enter
fiadds
cld
pop
lds
sbb
iret
mov
push
stos
mov
mov
inc
popa
pop
mov
dec
lret
inc
test
sub
jb
testl
mov
xlat
adc
xchg
or
mov
repnz
cli
inc
cmc
out
out
xchg
ret
cmp
into
mull
bound
repz
imul
push
fs
inc
dec
clc
hlt
int
xchg
daa
out
mov
add
fucomip
les
pusha
mov
nop
stos
sti
xchg
insl
stos
sbb
cmp
ja
push
int
xchg
loope
fmulp
add
push
leave
mov
xor
xor
push
cmp
mov
and
inc
shr
inc
clc
scas
and
insl
sbb
cmpsl
mov
pop
push
mov
lahf
flds
and
out
arpl
mov
les
pop
mov
addb
add
jo
pop
or
xchg
scas
pop
dec
out
mov
lahf
mov
ljmp
pop
jmp
scas
xor
and
test
leave
cmp
divb
rorb
xchg
int
push
pop
jnp
movb
mov
and
sub
xor
mov
jae
xchg
jmp
insb
pop
jae
xor
shlb
cmp
sbb
and
jle
cmpb
push
and
pushf
pop
mov
jge
es
rcrb
adc
pop
mov
insb
les
jae
cmc
push
lcall
sbb
mov
push
pushf
scas
xor
mov
xchg
add
loop
mov
push
push
inc
loop
cs
mov
mov
mov
pop
pop
and
frstor
movq
daa
movsl
jge
xchg
daa
scas
mov
push
aaa
das
xchg
testb
test
mov
add
repnz
cmp
fs
int
int3
xor
scas
negb
pop
out
sub
xor
test
xchg
adcb
dec
cmp
push
mov
popf
mov
jb
jae
inc
pop
lret
cltd
sub
mov
or
loope
mov
cmp
insl
lods
dec
aam
lahf
dec
leave
in
add
shl
fsubrl
or
pushl
mov
shll
imul
sub
loop
dec
mov
adc
add
nop
mov
stc
push
xchg
leave
adc
add
insl
mov
adc
int3
ljmp
push
mov
sbb
mov
pop
pop
movsl
jl
nop
xchg
push
stos
xor
jg
pop
jge
push
pop
ficompl
ret
shrl
xor
rcr
shrb
rolb
or
add
cmpsb
lahf
mov
pop
outsb
and
cli
cli
mov
ljmp
push
iret
lret
es
mov
xchg
mov
mul
fidivrl
mov
and
or
cmc
lock
jno
je
sbb
or
add
nop
pusha
loopne
inc
loope
lods
out
loopne
and
jno
stos
cli
jnp
into
xchg
lock
jp
or
cmpsl
mov
stos
jnp
lret
rol
pop
std
fildl
hlt
cld
xchg
inc
xchg
adc
jge
mov
cli
fistps
ret
add
lcall
test
ret
add
cmc
pop
pop
out
aaa
out
pop
cmc
push
cmpsl
mov
cwtl
inc
hlt
jnp
jmp
adc
scas
mov
mov
add
or
jle
cmp
rclb
aaa
or
sub
jae
xor
push
in
pop
mov
pop
mov
repz
andb
mov
fs
fildl
cs
jmp
int3
pop
jg
ss
enter
rorl
push
cmp
gs
and
rclb
mov
jno,pn
shl
inc
adcb
pop
sub
mov
cmp
or
ror
and
push
into
inc
mov
adc
fcom
sbb
mov
repnz
adc
imul
into
scas
dec
dec
mov
fcoml
pop
in
mov
mov
pushf
ss
cltd
ds
push
scas
in
int
fstpl
sub
jno
push
sbb
jo
xor
pop
push
dec
sbb
dec
test
daa
push
fistps
out
sbb
pop
mov
ja
pop
push
out
shll
les
dec
pop
sub
xlat
mov
and
stos
jmp
lds
mov
add
dec
or
scas
xor
call
pop
sbb
mov
pop
pop
and
popa
jno
bound
push
hlt
shrb
and
cmp
xlat
fnstenv
leave
cli
sub
fstpt
pop
push
inc
push
imul
into
loop
xchg
pop
in
jno
test
stos
adc
mov
in
add
test
int
xor
sbb
dec
fwait
mov
mov
ja
cltd
xchg
sbb
or
or
cmp
pop
mov
xor
stc
stos
xchg
jl
aam
daa
jp
inc
mov
fsubr
xorb
xlat
adc
dec
lods
pop
or
mov
pop
inc
ficompl
aad
add
lahf
fdivs
daa
fs
hlt
mov
enter
jb
push
xor
mov
and
xor
insb
push
mov
int3
mov
lret
xor
movsl
jo
lods
dec
fadd
jne
adc
xchg
les
cmpsb
sub
repz
imul
and
push
je
xchg
jle
pop
cmpsl
push
pop
inc
call
xor
js
xchg
idiv
fs
repz
adc
add
or
pop
enter
xchg
jnp
movb
mov
jl
xchg
sbb
out
test
pop
mov
push
jp
int
lcall
add
xlat
int3
sub
xchg
jnp
inc
and
shlb
mov
mov
in
sub
iret
in
or
in
inc
and
jae
test
mov
pop
test
pop
add
mov
lahf
inc
mov
out
insl
mov
popa
daa
subl
xor
cli
add
mov
or
jmp
push
cmp
loopne
inc
fs
shrb
hlt
fdivl
out
xchg
inc
clc
xlat
clc
push
dec
cmpb
push
aaa
ljmp
sahf
xor
xor
mov
mov
xchg
test
pop
mov
or
xorl
xor
shrl
repnz
cwtl
lods
mov
lcall
xor
add
inc
in
clc
pop
mov
push
fs
sti
sub
leave
jb
fcmovb
outsb
jmp
outsb
aas
push
sub
mov
push
into
out
popa
and
push
lods
fnsave
push
mov
push
shll
add
js
cmpl
js
fstl
ja
mov
scas
jns
loope
xchg
or
pop
stos
cli
mov
cld
sbb
andl
sbb
add
insl
push
jnp
mov
cli
add
xchg
pop
lahf
or
das
call
jmp
rcl
arpl
push
fmull
test
loop
or
and
rcrl
cmc
add
lock
xchg
int3
jmp
out
aad
fs
std
inc
xor
int
stos
pusha
lock
push
xchg
mov
movsl
or
mov
fiadds
jecxz,pt
add
push
imul
es
jns
inc
xchg
aas
div
sub
addr16
mov
loopne
fadd
mov
pop
rclb
push
mov
xchg
xchg
dec
xor
mov
outsl
scas
push
cmp
scas
fmul
pop
mov
or
and
shll
mov
or
dec
das
dec
add
mov
int
inc
push
ljmp
rcll
neg
enter
addr16
adc
andb
mov
daa
mov
sub
xchg
les
xor
pop
xor
shll
jecxz
sbb
shlb
push
ret
add
pop
addl
jne
adc
aam
iret
mov
sub
add
push
jae
pop
scas
fwait
or
mov
leave
push
fimuls
daa
repnz
fwait
insl
loopne
inc
adc
jp
lret
pop
sbb
lret
ret
jb
add
inc
cmp
jns
add
lods
pop
imul
les
insl
ss
inc
jbe
mov
mov
dec
fidivrs
xor
lea
jmp
stos
xchg
jge
sbb
xor
sub
mov
inc
fsubrp
or
mov
dec
hlt
push
popf
inc
dec
cwtl
inc
mov
subb
cltd
js
lret
stos
frstor
mov
and
pushf
popf
scas
add
mov
xlat
test
jns
mov
cmpsb
cmp
clc
lods
jbe
in
sbb
and
lcall
lock
js
mov
ss
jmp
mov
xchg
mov
jb
cld
xor
cwtl
push
in
pop
adc
insl
aas
jno
test
aad
jo
leave
test
and
les
sbb
sahf
jecxz
xchg
lret
jno
mov
adc
dec
nop
xchg
mov
sub
ror
or
inc
or
insb
xchg
test
mov
test
adc
adc
pop
test
sbb
add
push
mov
fmuls
xchg
add
sub
scas
fldl
jle
std
test
loope
scas
mov
sub
cmp
cmp
add
dec
or
insl
xchg
in
ljmp
xor
bound
lret
jle
mov
dec
cmp
test
lods
jnp
es
sarl
sub
sbb
sub
xlat
mov
jg
sahf
mov
or
movsl
outsl
inc
roll
mov
cs
add
jns
and
mov
jle
sbb
repz
adc
mov
pop
iret
roll
int3
inc
mov
nop
repnz
xorl
push
mov
xchg
in
adc
inc
sbb
popf
repz
cmp
mov
loope
jmp
push
stos
mov
sar
std
cmp
popa
mov
imul
xchg
dec
xchg
cmp
dec
sbb
inc
adc
gs
mov
in
sbb
jp
mov
sarb
scas
dec
pop
jne
push
shlb
or
adc
aas
xor
iret
xchg
push
stc
popa
jecxz
fisttps
dec
sbb
stos
ret
mov
loope
das
add
repnz
movsb
dec
ret
push
jl
fsubrs
mov
aam
push
jecxz
mov
and
push
pop
pop
cs
pop
adc
jbe
in
cmpsb
or
cmp
hlt
lcall
or
add
sti
scas
and
cwtl
xchg
sti
jno
xor
sbb
push
test
inc
jbe
add
add
out
mov
dec
clc
cmpsb
lods
repz
aad
or
repz
mov
fs
push
dec
inc
ret
out
xchg
shlb
cmp
sbb
add
pop
adc
push
push
pop
dec
leave
shrl
inc
cltd
push
in
loop
mov
cmp
cs
jno
dec
dec
mov
dec
pop
mov
popa
dec
fidivl
and
jp
and
sbb
jae
pop
je
inc
je
fstpl
rol
inc
lcall
clc
shrb
lods
jo
fadd
mov
mov
lods
mov
mov
cltd
nop
enter
js
push
mov
dec
inc
mov
movsl
imul
nop
dec
mov
test
jnp
aad
xchg
jg
aas
cmp
test
jecxz
push
js
pusha
add
pop
stos
add
add
sbbl
pop
xchg
int
jle
sti
and
adc
call
movsl
and
adc
je
or
das
int
bound
daa
dec
cwtl
mov
mov
lahf
mov
stc
out
adc
pop
push
pop
jns
inc
xor
jg
cwtl
jne
jns
dec
iret
loopne
lods
xor
insb
and
xlat
push
test
xlat
ja
out
jl
mov
pop
fstpt
mov
fcoml
shrd
pop
hlt
xor
scas
add
into
imulb
adc
fcompl
rcll
mov
pop
xchg
xor
push
adc
sti
mov
scas
fwait
subl
lods
jne
mov
sub
jmp
mov
je
xor
xor
popa
aas
xor
sub
mov
loopne
cmp
lret
adc
mov
xor
aam
mov
jl
in
xchg
aad
xor
stc
pushw
cmp
xchg
sbb
fidivrl
cmp
push
jno
cmp
popf
jmp
loopne
xor
cmp
dec
cli
or
xchg
xchg
sti
nop
in
cmp
jae
cmp
mov
sti
inc
decl
push
push
adc
jp
dec
sahf
inc
notb
xchg
leave
xchg
sbb
xchg
movups
or
mov
pushf
and
ficoms
imul
movsb
dec
mov
enter
mov
mov
mov
mov
mov
int3
sub
cmp
mov
pminsw
adc
lcall
add
cmpsl
push
inc
lret
into
test
jo
stos
ljmp
movsl
fisttps
orb
test
addr16
inc
std
fs
gs
ret
cs
inc
out
lret
cmp
lahf
icebp
aaa
push
pop
fistps
mov
mov
jno
sub
mov
fists
push
dec
cmpsl
xchg
repnz
stc
adc
mov
sub
jns
dec
dec
mov
outsb
cld
scas
add
xorl
mov
sbb
inc
nop
adc
sahf
jae
pop
push
or
ja
int3
aas
mov
mov
repnz
sub
iret
test
sub
add
lret
mov
add
inc
add
jae
jmp
mov
sbb
lret
push
lds
addr16
dec
push
or
jg
lahf
lods
dec
inc
sbb
cs
and
call
jbe
test
lcall
xor
shlb
or
fbstp
cmp
push
cmp
and
dec
outsb
xor
mov
js
sbb
in
cmpsl
jae
fists
outsb
iret
pop
or
xor
mov
add
dec
sub
mov
pop
arpl
iret
xchg
lods
pop
xchg
or
fsubp
pop
inc
xchg
xor
rcr
push
or
push
fcomps
fdivrl
bswap
jecxz
int
jb
add
xor
repz
xor
xchg
divl
mov
imul
mov
pop
shll
mov
add
subb
mov
inc
pushf
dec
lds
leave
adc
mov
xchg
push
jp
rorb
mov
leave
xor
movb
insb
sbb
push
gs
jp
iret
add
jge
lcall
sbb
daa
mov
pop
mov
mov
mov
leave
dec
in
push
jnp
es
imull
imul
dec
cmp
mov
dec
cmp
stc
mov
sub
sahf
add
stos
push
fiaddl
inc
imul
stos
imul
lcall
subl
xor
jnp
stc
jo
xlat
mov
and
imul
jb
mov
jns
inc
rclb
push
push
jae
bound
and
fnstenv
mov
cmp
ret
mov
inc
mov
jbe
add
fiadds
inc
adc
adc
xor
and
and
leave
imul
inc
jae
mov
mov
xchg
scas
shlb
push
sub
out
mov
xchg
mov
xchg
sub
in
incb
cld
and
test
jle
or
sarl
adcl
mul
xor
cmp
pop
jge
jmp
xlat
sbb
cmp
dec
xchg
adc
jl
vfrczps
gs
loope
insl
inc
mov
repnz
nop
filds
dec
aas
push
loope
sti
xorl
mov
mull
hlt
inc
push
lds
hlt
out
jnp
mov
sahf
shl
jl
jecxz
dec
or
loopne
mov
cwtl
jno
shll
adc
outsb
lods
sbb
xchg
mov
dec
or
pop
pop
or
sub
xor
jl
mov
popf
jmp
clc
and
push
pop
jp
add
incl
call
mov
cmp
xor
dec
lods
pop
int3
dec
dec
push
sub
int3
loopne
es
ljmp
lods
cs
orb
mov
or
sbb
iret
lret
xor
das
loopne
ss
loop
sti
addl
mov
jbe
push
data16
fcoms
fs
pop
stos
add
sbb
stc
hlt
push
push
pop
inc
mov
push
shlb
test
mov
sbb
ja
icebp
adc
adc
jp
aad
sub
aam
arpl
stos
mov
pop
loope
shlb
jno
mov
inc
jae
test
sub
cli
adc
lcall
lret
inc
scas
call
sbb
adc
mov
call
fsubl
jg
dec
scas
adc
mov
int3
sbb
cmpsl
sbb
sbb
pop
pop
dec
fnstenv
insl
test
fmul
jb
push
mov
pop
mov
int
mov
pop
mov
loop
push
fdivrs
xchg
sub
andb
xor
in
daa
pop
ret
rcrb
test
mov
imul
and
jbe
loope
stc
mov
outsb
popf
push
pop
sbb
dec
mov
adc
mov
imul
and
pop
mov
dec
xor
and
and
sbb
addr16
shll
mov
je
jecxz
jb
jb
sbb
ja
jns
scas
insl
sub
inc
xchg
sub
mov
and
xor
or
test
scas
aam
xor
roll
jb
lret
dec
test
xchg
ret
push
mov
sbb
inc
cmc
dec
ljmp
xor
cmpsb
test
stos
outsb
and
dec
scas
testl
sub
pop
jne
xor
sub
fcmovnbe
mov
into
lret
inc
vpsrlw
shll
push
or
lret
int
enter
jg
add
js
pop
add
and
stos
pushf
out
ljmp
pop
clc
dec
jge
test
roll
aad
subb
dec
xor
add
cmp
fisubrl
js
loop
out
xor
in
cld
cltd
nop
jmp
jns
adc
sti
jmp
test
addr16
sbb
or
push
cmc
xchg
cmp
cld
imul
ljmp
cs
dec
cmp
addl
leave
jp
and
ljmp
test
imul
movsl
inc
dec
mov
sbb
rcr
std
or
shlb
cmpsl
das
lods
mov
mov
jae
fsubs
jl
popa
imul
jge
cld
cli
cmc
test
jbe
jo
and
vmovsd
icebp
inc
imul
dec
mov
imul
lret
push
sbb
jle
sbb
out
pop
iret
pcmpeqb
mov
xchg
xor
fstl
sub
cmp
cmc
xor
lods
js
repnz
jp
xlat
push
test
sub
mov
sub
xor
adc
mov
xchg
dec
jno
rorb
lods
mull
sub
fwait
arpl
addb
pop
leave
mov
adc
rcll
or
and
rcll
add
mov
fdivl
sarl
mov
inc
in
fcomi
jmp
xchg
pop
adc
cmpsl
jmp
test
xchg
rcrl
bound
fs
and
fwait
pop
test
sar
sub
jno
or
jge
imul
pop
out
or
mov
or
cld
lods
iret
cli
jne
pop
xchg
dec
loop
aam
push
cmpsl
xchg
push
pop
loop
pop
pop
push
ret
adc
jno
dec
push
das
pop
jge
sub
jae
add
arpl
mov
jle
rcrb
test
fs
push
mov
int3
mov
lods
lret
cwtl
lods
jo
sbb
subb
xchg
ret
mov
or
cld
cld
jbe
push
adc
adc
fwait
inc
faddl
adc
cmp
cld
mov
xchg
call
mov
shll
push
xchg
ret
rcl
movsl
out
orl
and
push
icebp
into
js
aad
mov
cwtl
js
dec
pop
addl
cwtl
clc
mov
hlt
mov
out
call
mov
sub
pushf
mov
enter
xor
clc
adc
jp
or
cmp
lea
rorl
mov
adc
xchg
jp
scas
ficoms
jp
sub
jnp
push
f2xm1
jo
out
aam
push
mov
lock
popw
cltd
mov
sbb
or
inc
int3
sub
adc
inc
stos
inc
mov
test
inc
lcall
mov
es
std
adc
sub
pop
jmp
nop
in
sbb
out
mov
sti
and
in
or
mov
and
scas
int3
hlt
jbe
out
enter
sub
or
xlat
or
inc
rclb
and
mov
push
loope
lds
push
pusha
jle
adc
jo
test
push
cmp
mov
loop
roll
test
dec
dec
lea
mov
test
mov
outsb
int3
mov
pop
testl
in
sub
cmp
ljmp
in
pcmpeqw
or
aaa
pop
cmp
loopne
incb
imull
imul
outsl
fidivs
stc
push
jns
adc
shrb
js
pop
xor
mov
pop
aad
dec
xor
aas
int3
stc
testb
cmp
adc
mov
clc
pusha
cmp
aam
pop
push
mov
out
sub
sbb
mov
std
xor
leave
insl
mov
add
xchg
mov
xchg
mov
cmp
cmp
sub
dec
in
cmp
push
int3
imul
es
fiaddl
and
lods
in
popf
ss
roll
xor
cld
ljmp
sub
loope
call
lods
hlt
out
inc
insb
lock
jmp
movsl
sahf
xchg
mov
and
cmp
movsb
idivl
inc
outsl
jmp
int3
repz
push
stos
add
xchg
sbb
hlt
sub
push
lahf
and
cmc
addr16
push
sahf
incb
test
fnstcw
popa
sub
rcrb
dec
stos
out
cmpsb
inc
scas
dec
inc
pop
divl
cmp
int3
addb
stos
hlt
mov
mov
jb
hlt
sub
add
jne
mov
inc
jo
mov
mov
jge
repz
nop
or
lea
cltd
daa
xchg
cmp
inc
xor
xchg
sub
std
hlt
pushf
mov
shr
sqrtps
fcoms
adc
lods
ss
jno
pop
or
or
filds
and
mov
xor
ss
mov
cmc
repnz
pop
mov
outsl
xor
mov
add
ljmp
sbb
dec
sbb
mov
mov
pop
push
pop
fcom
lock
insb
xchg
sahf
loop
dec
negb
cmpsb
mov
lods
mov
push
fwait
sti
push
mov
pushf
inc
dec
aad
inc
fsubrl
int
out
inc
jnp
addr16
roll
addl
pop
sar
jle
pusha
loope
pop
outsb
jmp
cmp
popa
data16
mov
icebp
enter
std
xorb
mov
shr
sub
enter
cmpsb
arpl
pop
jns
in
imul
push
lret
adc
mov
and
add
sbb
daa
das
mov
popa
lods
popf
daa
inc
cmp
lret
fs
popf
popf
popa
adc
cmp
dec
xchg
add
cmpsl
rcll
js
jbe
imul
rolb
jmp
loop
push
es
outsb
mov
sbb
jle
jmp
and
mov
jnp
jl
mov
push
xchg
xchg
and
pushfw
add
shlb
lock
es
outsb
inc
in
jg
cs
fs
cmpl
das
and
xchg
mov
call
xchg
mov
push
pop
push
pop
mov
insb
es
scas
cwtl
xor
add
cld
jl
pop
mov
out
pop
mov
lock
ja
ds
sub
ljmp
movsl
int3
adc
push
loope
in
dec
filds
imul
sbb
shll
cmp
sub
mov
push
and
lock
roll
push
inc
sub
push
jl
imul
rolb
ljmp
adc
and
call
adc
or
rcrl
adc
out
xchg
jl
mov
mov
jbe
jns
fstpt
mov
sub
cmpsl
inc
repz
add
shrl
insb
rclb
cmp
xchg
push
stos
mov
mov
cmp
pop
mov
mov
or
insl
sub
stc
lret
push
daa
pop
repz
mov
adc
pop
inc
dec
fldenv
mov
push
aaa
sbb
pop
push
les
lcall
int
push
push
movntq
jp
in
icebp
in
cmp
popa
arpl
push
jmp
xor
inc
gs
pop
stos
xchg
xor
ja
inc
fcoml
pop
xlat
dec
fcomps
jp
dec
inc
push
andl
xchg
cmpsl
push
xor
cmp
fimuls
cmp
adc
loop
add
push
mov
call
popl
push
sub
test
mov
lods
inc
pop
aam
loopne
or
xchg
pusha
mov
cmp
in
inc
loopne
and
fadds
hlt
dec
cmpl
movsb
push
and
movb
and
in
ficomps
xor
and
cmpsl
mov
mov
cmp
in
mov
pop
rolb
sbb
adc
int
push
int3
and
test
insb
test
or
outsl
xor
cmp
insl
in
cmpsl
aas
sarl
pop
pop
dec
add
sub
mov
movl
lods
addl
orb
lea
shll
mov
lods
imul
add
stc
mov
push
imul
jb
mov
jb
or
sbb
dec
sarb
ret
mov
mov
fsubl
dec
or
cltd
adc
push
repnz
pusha
push
nop
mov
push
xor
fstp
mov
and
cwtl
push
sub
adc
adc
jl
dec
jge
add
rcrl
or
movsl
push
leave
mov
bound
movl
xchg
lods
mov
push
mov
mov
jmp
cmpb
xchg
xor
and
popf
ret
dec
cs
pop
adc
shrb
fmuls
sbb
lea
bound
pop
cmpl
cmpb
inc
dec
sub
lods
mov
adc
and
xchg
xor
testl
popf
or
ficoms
xchg
out
dec
pop
xchg
mov
jno
clc
mov
cmp
pop
insb
es
ss
push
and
jl
movsl
arpl
jnp
cwtd
sbb
pop
mov
jo
jnp
in
loop
in
dec
cli
shll
cmc
mov
or
hlt
scas
popf
rorb
mov
xchg
cs
fnstsw
sub
sub
xchg
push
jne
ja
mov
test
vdivpd
pop
push
cltd
inc
or
push
outsl
ret
ret
orb
mov
push
fidivs
add
aad
jbe
outsb
sub
sti
sarl
mov
shrl
sbb
mov
aam
mov
mov
imul
jb
push
das
xor
or
add
cltd
add
cmp
lods
cmp
jmp
fcmovnb
mov
mov
dec
xor
mov
ds
out
pop
popa
aaa
out
loopne
lods
pop
inc
es
mov
add
add
and
pop
or
push
dec
xor
or
sbb
test
and
sub
addr16
cld
inc
cwtl
jns
out
adc
inc
sbb
jae
xchg
ljmp
test
mov
add
push
jo
cltd
in
and
inc
cli
add
inc
sub
pop
fisttpll
bound
mov
dec
inc
lcall
and
mov
loopne
lret
cmp
repnz
or
aaa
jle
stos
jo
or
mov
faddl
mov
sbb
dec
adc
and
clc
xor
dec
xchg
pushf
xorl
mov
mov
or
and
mov
ss
push
loop
cmp
cld
into
lret
cmp
pop
xor
pop
sub
movsl
or
cmp
jmp
clc
push
xchg
lock
mov
sahf
mov
pushf
mov
and
xor
push
rorb
insl
in
adc
dec
call
outsl
fisttps
xchg
cmp
clc
or
ljmp
rclb
sahf
sbb
mov
ds
and
xor
add
test
sub
data16
xrelease
pushf
test
scas
fisttps
fs
popa
in
adc
jle
loop
sub
lahf
jge
fsub
xchg
mov
ret
sub
mov
dec
mov
fwait
leave
insb
push
jge
imul
mov
jne
jae
popf
sbb
or
cs
xchg
ja
jg
arpl
sbb
imul
fbstp
cmpsb
dec
cltd
xchg
or
jne
dec
outsl
into
or
arpl
loop
xchg
jge
rcr
xor
push
add
cs
xchg
ds
std
jno
jle
mov
insb
add
negb
mov
fsubl
mov
dec
inc
ret
mov
imul
ret
in
sbb
add
cmp
cwtl
pop
cmp
in
testl
and
jnp
lds
dec
cmp
jbe
jae
pop
xchg
mov
ds
mov
push
pop
cmc
das
mov
test
mov
cmovb
push
das
daa
pop
mov
xor
cs
add
nop
sbb
dec
js
mov
push
mov
sahf
mov
in
cmp
shll
movsl
int3
xchg
scas
push
pop
jns
sbb
mov
mov
xlat
addb
popa
or
test
mov
push
cmp
int3
pop
ljmp
xor
add
jo
mov
lea
pusha
jno
inc
adc
lcall
jns
cwtl
xchg
push
jmp
mov
test
shrl
mov
pusha
dec
out
fwait
xor
push
lahf
and
push
in
fadd
imul
sub
das
cli
mov
ret
cmp
xor
cmp
stos
sbb
insl
xor
lahf
pop
insb
and
pushf
fwait
ror
add
outsb
or
jns
mov
loopne
mov
imul
fldenv
mov
ljmp
test
mov
mov
mov
daa
inc
add
je
flds
mov
test
sub
pop
pop
fs
scas
enter
xchg
fsub
xchg
nop
mov
pop
jnp
outsl
pop
scas
sti
mov
out
push
cld
jno
cmpsl
and
cwtl
andnps
jno
cmp
stos
lods
mov
inc
shrl
sarb
sub
es
pop
lods
int
rcrl
sub
jmp
arpl
sub
push
mov
faddl
mov
bound
lock
and
and
stos
add
jnp
int
xor
es
je
je
je
clc
sbb
sub
push
adc
stc
jns
aas
js
jo
mov
jno
bswap
and
out
outsb
gs
lcall
lods
push
mov
push
xor
push
bound
xchg
inc
cmp
out
inc
gs
cli
ret
incl
mov
inc
pop
jno
mov
mov
inc
test
cmc
dec
sbb
and
or
sbb
pop
jge
xchg
inc
lods
inc
mov
add
mov
xor
movb
jecxz
cmpsl
sahf
rorb
test
sub
movsl
and
jmp
push
inc
sbb
ds
aam
int
push
addr16
xor
sub
jae
pop
lods
inc
xchg
xchg
or
stc
insb
lds
or
jecxz
jno
push
test
sub
inc
mov
jb
cmpsb
pop
inc
lret
mov
pushl
popa
cwtl
mov
and
fucomip
nop
sbb
popa
mov
push
in
std
notl
mov
xor
idivb
fiadds
nop
lret
inc
shll
dec
pop
leave
dec
add
adc
inc
test
das
push
mov
repnz
outsb
mov
push
mov
cltd
ja
in
mov
pop
push
fs
outsl
push
ss
sbb
sbb
int
cmp
lret
out
les
stc
stos
hlt
in
mov
add
jge
inc
adc
inc
leave
sbb
pop
xchg
aaa
aas
inc
fwait
out
inc
stc
fcmovnb
ljmp
mov
mov
jg
outsl
jb
sbb
and
jbe
push
icebp
cmp
adc
cmc
mov
pop
push
sahf
aas
divl
jge
sbb
out
mov
mov
push
jle
nop
adc
out
pop
inc
je
clc
adc
ss
or
scas
int3
and
push
push
push
in
into
ficoml
push
adc
fistl
sahf
dec
xchg
xor
mov
nop
adc
out
and
lcall
mov
or
jmp
jnp
pop
xor
push
mov
push
mov
cltd
ja
mov
jae
xchg
pop
sti
mov
adc
int
stos
mov
xchg
mov
popf
sub
fsubl
inc
aas
clc
xor
inc
pop
jae
mov
add
loopne
stos
sbb
mov
and
jmp
or
jg
xlat
dec
push
inc
movsb
push
adc
add
mov
popf
mov
in
cmp
jg
mov
cmp
icebp
push
push
jb
mov
bound
inc
cmp
pop
mov
or
fisubrs
xchg
lock
subl
outsb
jne
push
fwait
cmc
inc
popf
xor
aas
popa
andl
mov
jg
push
imul
xor
fwait
sub
mov
std
popa
adc
inc
insl
fmuls
cmp
sbb
dec
xlat
andb
clc
jnp
adc
push
inc
mov
jmp
lret
in
sub
inc
pop
lods
mov
dec
cmpl
sub
imul
push
loopne
push
jns
mov
push
div
shl
js
fmull
pop
or
mov
imul
les
pop
arpl
mov
inc
lea
jb
sbb
pushf
cmpsb
out
mov
sbb
mov
lcall
fsts
xchg
sti
loop
js
sbbb
lods
cld
mov
lds
adc
rcll
push
inc
push
movb
sub
jmp
lods
inc
mov
mov
adc
mov
fildll
out
aad
leave
test
xor
sub
jo
jbe
mov
out
sbb
fs
mov
loope
inc
icebp
adc
or
cmp
jge
inc
jno
jp
mov
into
mov
mov
int
add
call
or
jcxz
mov
pop
inc
movsb
and
ret
pop
mov
lret
rolb
fxch
leave
pop
lret
orb
ret
mov
dec
jnp
ret
jno
push
pop
jnp
jecxz
inc
stc
sbb
jns
jnp
into
pusha
xlat
pop
sbb
mov
sub
in
sahf
pusha
cmc
add
test
ror
mov
lcall
mov
pop
pop
test
jle
hlt
out
mov
fwait
pop
mov
rcll
mov
add
mov
jae
xchg
pusha
push
mov
adc
inc
xor
addb
xchg
sti
xchg
dec
mov
shll
push
adc
push
cmpl
iret
pop
cmc
sbb
stos
insb
in
mov
insl
adc
mov
movsb
mov
enter
stos
repnz
dec
sub
stos
enter
push
jb
jmp
loopne
inc
or
dec
insl
mov
add
sub
jo
fdivl
mov
es
adc
xor
pop
mov
mov
stos
xor
hlt
loopne
addl
movsb
inc
cwtl
shrb
add
mov
fmuls
xchg
add
add
shlb
sbb
sub
jo
dec
call
negl
in
cli
es
imul
sahf
nop
mov
faddl
cli
pop
jmp
inc
and
jnp
fwait
xor
sub
test
cmpsl
pop
sub
aas
cld
push
daa
stc
or
and
mov
out
sub
push
cmp
mov
aam
outsl
sbb
cmpsb
popf
jg
xor
xor
fcomps
pop
in
pop
shrl
add
inc
xchg
es
cmp
push
fcmovnu
clc
jp
mov
loope
push
or
cwtl
inc
int3
adc
sbb
sub
aad
mov
icebp
mov
and
mov
out
test
push
lds
popa
adcl
jae
scas
xor
cld
mov
test
roll
push
aad
out
cmpl
ljmp
mov
jo
out
daa
scas
add
pushf
shrl
sbb
push
stos
inc
lds
cmp
cmpl
loop
insl
cli
ds
js
into
dec
scas
push
mov
sub
imul
cmc
ret
and
repz
and
fbstp
fnsave
out
sti
inc
ljmp
lahf
xchg
out
iret
push
xor
sahf
lret
xchg
dec
jg
test
mov
hlt
arpl
xchg
sub
xorb
cli
sbb
push
pop
inc
pushf
pop
jge
inc
pop
jae
xchg
sbbl
sub
add
movsb
xchg
lods
mov
shrl
insb
imulb
inc
es
sti
fsubrl
lods
pop
mov
jl
lods
mov
jp
mov
push
int
fildl
mov
loop
lds
adc
out
les
fs
in
inc
andb
lods
add
shrb
xchg
pop
mov
sti
sbb
stos
mov
mov
push
dec
lcall
sub
cmpsb
adc
scas
sub
gs
rclb
sbb
xor
pop
lock
jmp
rcl
sub
outsb
test
scas
adc
out
cmp
lea
fsubs
and
and
pop
fwait
or
jle
dec
xor
push
setb
xchg
negl
jbe
pop
lods
mov
cwtl
mov
xchg
test
lahf
push
popa
jnp
inc
jns
push
out
add
mov
add
push
test
out
mov
jns
cmp
or
fs
in
pusha
and
dec
inc
or
push
cmp
mov
sahf
inc
mov
cmp
aad
ss
fsubrl
imul
jbe
jp
add
jmp
cmpsl
or
jmp
test
sbb
dec
setae
cld
adc
aaa
scas
lret
cmpsl
add
outsb
add
test
xchg
mov
dec
mov
cld
movsl
dec
lods
pushf
in
xchg
test
cld
sbb
mov
test
imul
pop
fldt
inc
sub
lods
mov
rcrl
mov
loope
rorb
subb
jge
add
mov
test
pusha
leave
sub
paddw
xchg
sub
mov
int
imul
cs
or
pop
xchg
or
xlat
clc
cmp
push
pusha
shlb
je
xlat
gs
lds
test
pop
mov
fdivrs
jno
bound
xor
xchg
dec
mov
jns
cmp
aas
lret
push
loopne
xor
scas
movsl
cli
or
fbstp
repz
pushl
or
bound
faddl
or
rclb
jnp
fiaddl
sub
sbb
ss
cli
or
xchg
jp
les
and
nop
cld
add
hlt
dec
pop
push
idivl
jl
and
test
leave
and
std
pop
adc
jl
rcrb
push
pop
insb
jbe
push
pop
popa
fwait
jmp
pushf
cmp
test
mov
inc
hlt
lret
sub
jmpw
lahf
out
sub
mov
pop
movsl
or
push
xor
and
pop
imul
repnz
xchg
in
push
nop
cmp
movsb
xor
and
xchg
out
stc
into
sti
dec
inc
arpl
lcall
std
sbb
dec
adc
movsb
imul
adc
add
cld
les
sbb
fisubrs
or
inc
xlat
cmp
aas
inc
hlt
lds
dec
imul
mov
shlb
divl
fwait
and
out
mov
dec
mov
mov
icebp
jae
adc
mov
mov
cmp
out
fdivrl
arpl
loop
outsl
dec
mov
adc
pop
outsl
flds
in
dec
mov
cmp
jae
inc
test
gs
in
daa
jbe
push
repz
xlat
mov
or
cmp
jbe
lock
xor
out
sahf
sbb
add
sub
inc
mov
sbb
xor
pop
sbb
aad
test
xchg
cmp
movl
sbb
fs
add
push
cltd
stos
nop
jl
jae
lret
lods
and
inc
fs
test
lea
imul
repz
stos
mov
ficomps
mov
mov
mov
scas
dec
insl
nop
xchg
cmc
aas
push
cltd
sahf
pop
fisttpll
mov
xor
add
xchg
scas
out
testl
aam
cmpl
xchg
fst
add
mov
or
jmp
cmp
jnp
push
lock
sahf
mov
add
ror
mov
cwtl
mov
mov
ror
call
dec
jno
or
fadd
push
aam
fisttpl
in
in
xlat
insb
adc
out
es
ds
xchg
movsl
mulb
shr
sub
add
fistpl
insb
jns
inc
jne
lds
xor
adc
cltd
sti
inc
xchg
sbb
sbb
jne
and
fmull
pop
mov
xor
addl
mov
inc
sbb
lcall
outsb
push
mov
mov
and
pusha
and
pop
aad
loope
fcom
mull
int3
jns
test
ret
fcomi
adc
test
leave
test
or
xchg
sub
mov
psllq
pop
xor
movsb
jns
addb
sbb
mov
insb
lods
dec
cmp
lods
mov
arpl
push
into
popf
pop
xor
and
sbb
vphaddbw
mov
movsl
xor
push
and
bound
dec
jae
std
mov
icebp
pop
test
dec
imul
sbbb
fdivs
dec
push
adc
les
lret
jo
pushf
pop
fistpl
lea
push
data16
and
stos
mov
mov
movb
push
je
push
je
xlat
int3
loop
stos
lret
lods
jne
in
test
jae
cltd
hlt
imul
inc
mov
pushf
xchg
scas
inc
arpl
mov
std
add
ja
jge
jnp
cs
xlat
rorl
inc
insb
push
adc
jo
jo
and
outsl
mov
dec
cmpsl
shll
dec
cmp
mov
insb
jp
jmp
or
sarl
jge
lock
inc
iret
loope
outsl
push
pop
and
xor
add
xchg
and
ret
mov
mov
rol
in
push
fistpl
xchg
mov
mov
adc
movsl
icebp
aas
or
dec
sub
popf
in
and
add
pusha
dec
fcmovnu
mov
js
loopne
rcrl
stc
imul
push
xor
lds
stos
stos
push
jno
push
adc
das
imul
cmp
sbb
in
sub
add
cmp
mov
mov
std
jge
dec
xchg
pop
mov
mov
jg
sub
incl
shrb
mov
push
movsb
and
pop
in
xor
add
jmp
loopne
ja
ds
pop
not
jmp
mov
daa
add
xor
int3
bound
xchg
mov
sti
inc
dec
add
cmpsl
or
or
mov
xchg
aad
mov
pop
jae
mov
jns
and
jmp
inc
loopne
or
sbb
outsb
mov
mov
cs
mov
add
and
add
sbb
cmp
shll
mov
pop
mov
fwait
js
fcmovnb
cmp
loopne,pt
inc
nop
xchg
fdivr
xor
fmull
outsb
icebp
in
fs
outsl
mov
mov
js
jns
pop
pop
xor
fmul
out
xchg
or
lcall
lahf
add
dec
test
xchg
or
aaa
out
ja
test
sbb
daa
dec
push
pop
xor
xor
stos
and
cmp
int3
in
sub
std
inc
dec
repnz
push
fstl
out
arpl
idivl
cwtl
mov
data16
add
and
loope
repz
jno
adc
incb
out
leave
out
xor
test
test
xor
test
jge
ficompl
mov
test
clc
enter
pop
push
in
push
scas
loop
lret
insb
ljmp
lds
mov
push
std
int3
sub
nop
scas
pop
and
xchg
jge
lahf
insl
add
test
xchg
mov
fcom
xchg
mov
cmpsl
or
jge
adc
sbb
mov
repz
xor
es
mov
into
jge
ja
inc
jae
aam
jge
out
inc
pop
cmpsl
cmp
arpl
shlb
add
mov
outsb
test
stos
fwait
xor
adc
cmp
ds
dec
movsl
jmp
fcoms
xchg
push
jp
lret
arpl
inc
push
sub
mov
loope
sbb
dec
scas
dec
push
clc
xchg
inc
movl
rcrl
ljmp
or
jbe
jns
or
lcall
inc
je
shr
scas
pop
jg
mov
adc
xor
push
dec
lcall
pop
mov
lcall
mov
cmovnp
shr
cmpl
push
mov
fs
cmp
loope
xchg
rcrl
cs
arpl
loop
das
fists
fisttpll
xchg
jmp
cmc
jno
outsb
mov
insb
sbb
cli
outsb
inc
cld
nop
adc
pop
or
out
fdivp
adc
test
rcl
aam
inc
ret
and
rorb
sbb
bound
jecxz
ret
sbb
loop
mov
jecxz
aad
data16
out
jl
fiadds
aas
hlt
pop
pop
or
iret
pop
rorb
test
dec
cmp
dec
dec
xlat
xchg
jbe
xor
pop
jo
pop
js
xor
sub
sarb
incl
cmp
xchg
inc
fdivs
call
xchg
pop
divb
pop
sbb
push
js
push
cmp
out
xchg
push
loop
mov
fsts
das
aas
stc
push
ret
cld
int
repz
repnz
daa
mov
sbb
cmp
sub
aas
and
stos
in
shlb
pushf
sub
push
out
jp
lods
repz
lcall
mov
call
cli
cmc
xor
into
test
pop
adc
jno
and
imul
out
lahf
sub
cmpsl
adc
popf
inc
mov
jae
ljmp
dec
mov
push
pop
sub
xor
pop
dec
add
lock
push
popa
sbb
jg
flds
out
fisttpll
xchg
jno
ret
inc
nop
or
in
pop
and
clc
rcr
dec
mov
push
out
dec
mov
dec
push
jns
mov
dec
push
xor
or
push
stos
mov
cltd
pushf
mov
jno
inc
lea
popa
aaa
mov
lahf
or
cli
jecxz
jmp
sti
mov
leave
fildll
add
fstl
pop
mov
lods
or
fimuls
cmpsl
rorl
lcall
popf
push
jbe,pn
ficoml
jge
cmp
pop
jp
mov
sub
scas
in
test
or
scas
decb
add
mov
out
mov
popf
or
adcl
movsb
daa
rclb
bound
faddl
pusha
pop
push
out
js
orb
js
xor
je
xchg
imul
xchg
fsubrs
inc
pop
out
push
pop
out
xchg
push
clc
aam
xchg
xor
cs
insl
ds
jl
pop
xchg
in
mov
xchg
aad
jbe
aaa
sbb
sub
rolb
test
push
push
sarl
stos
xor
xchg
ret
dec
int3
push
adc
fs
or
mov
movsl
mov
lods
shrb
out
dec
out
out
outsl
pop
inc
hlt
push
adc
cmp
and
je
push
mov
xchg
sbb
jb
iret
test
pop
in
sub
jns
jp
mov
cmpsb
jecxz
adc
lcall
adc
pop
cmp
xor
mov
xchg
cwtl
out
insb
out
mov
lock
repnz
pop
push
jp
xchg
stc
sbb
and
repz
add
sbb
arpl
mov
pushf
fstpl
and
push
jmp
cmp
push
das
fsubl
movsb
adc
mov
int
ja
nop
repnz
cmpsl
pop
xchg
inc
add
and
sub
and
mov
and
fistps
mov
aaa
imul
dec
cmp
fwait
shr
es
jb
stos
das
add
outsb
addr16
push
pop
ret
push
shrl
out
adc
mov
je
dec
pop
adc
movsl
inc
sub
test
mov
iret
mov
std
push
pop
xchg
stc
jae
xchg
mov
cmp
rcl
and
mov
pop
pop
push
sbb
leave
mov
test
aad
mov
xor
add
mov
lods
or
fisubrl
and
mov
repnz
outsl
push
mov
sub
fsubs
out
subb
push
rcrb
aad
mov
popa
sti
testb
lret
es
jb
or
xchg
ja
and
cltd
insb
mov
sbb
sbb
in
push
flds
pop
rcrb
jp
scas
cmpsb
lret
xor
mov
mov
mov
adcb
lods
cmp
mov
or
jns
clc
inc
ja
jb
sbb
fbstp
loopne
loop
add
inc
hlt
js
int
pop
mov
or
cmp
fcmovnu
add
mov
sti
sbb
lods
scas
loop
cmp
mov
lea
ja
sbb
mov
stos
je
lock
dec
ss
jbe
pop
sub
jb
or
rcrb
popf
cmp
inc
jne
stc
stos
and
pusha
shl
aam
and
sub
loopne
gs
in
fcomps
stc
sbb
es
in
xor
add
frstor
outsl
inc
mov
mov
mov
movsl
call
xchg
xchg
in
mov
xchg
jne
subl
xor
out
xchg
ds
std
dec
cmp
mov
imul
outsb
xchg
int3
sbb
outsb
int
popa
jge
rolb
incb
jno
inc
jae
nop
add
in
popf
adc
mov
jno
push
add
outsl
sbb
push
mov
sub
inc
repz
lea
mov
mov
xchg
mov
rcrb
das
fsubr
inc
cmp
sub
out
shll
mov
fildll
mov
out
add
into
push
mov
jb
cltd
stos
or
inc
add
dec
lret
mov
clc
mov
stc
insb
pop
cmp
cmp
ret
and
jne
push
das
data16
jne
sbb
xchg
mov
mov
sbb
mov
clc
xchg
xor
inc
xchg
cwtl
ljmp
fnsave
adc
inc
arpl
dec
jl
gs
imul
aas
xor
fcmovnbe
and
xor
mov
sbb
stos
clc
repnz
cltd
xchg
pusha
pminsw
sti
iret
cs
adc
lock
es
aaa
int3
imul
fs
jl
dec
push
jecxz
shlb
dec
pop
xor
sbb
loop
mov
or
addr16
insb
xchg
push
pop
xchg
ljmp
jnp
adc
ds
lahf
std
mov
adc
sbb
das
in
pusha
jmp
scas
jne
fists
lods
fildl
cmp
rol
adc
andl
adc
ret
mov
cmp
or
sbb
lods
xor
adc
ss
and
or
scas
cmpsl
mov
sbb
cld
adcb
dec
inc
mov
mov
cltd
movsb
xchg
loope
pusha
popf
xor
loop
cmp
and
repz
outsb
adc
insb
add
pusha
cmp
in
xchg
jb
stos
cmp
xchg
repz
push
and
xor
cmp
push
cmp
ds
fisubs
mov
push
mov
fwait
xchg
inc
movsl
add
add
rolb
loop
bound
pop
mov
mov
add
dec
filds
bound
rcll
jp
wrmsr
jno
lahf
pop
movb
incb
scas
iret
orl
int3
mov
sub
mov
xorl
adc
push
je
daa
xchg
scas
aas
mov
adc
inc
sub
cld
fwait
jecxz
or
out
cld
sti
pushw
push
ja
ljmp
xlat
popf
outsl
mov
scas
xor
ljmp
xor
sbb
into
sub
fmuls
jp
mov
xchg
or
dec
xor
push
fsubrl
addr16
xor
dec
pop
mov
add
test
adc
pop
icebp
jmp
fisubs
cmpsb
mov
xchg
jmp
jl
adc
aas
arpl
lock
out
mov
jle
and
shr
fstp
sub
inc
sub
and
cmp
cmp
es
mov
ja
adc
sti
pop
imul
pop
mov
sbb
inc
hlt
and
push
inc
outsb
xchg
into
jge
lods
sahf
inc
nop
mov
aas
sar
mov
push
sbb
push
push
shrl
into
movsb
mov
popf
stos
push
cmp
lods
adc
data16
cwtl
mov
loopne
out
xor
cmp
pop
cmp
jo
stc
jae
idivl
xlat
dec
mov
cld
inc
jp
xchg
and
rcrb
lahf
lock
xor
imul
js
push
mov
ds
js
mov
push
mov
fisttpl
outsb
fwait
test
aas
add
mov
cmp
jmp
or
pop
jno
call
jo
popf
movsb
push
xchg
out
sub
stc
xlat
sbb
clc
add
enter
inc
jnp
out
rcr
out
xchg
out
mov
mov
fs
nop
dec
pusha
xchg
fnstsw
lahf
add
out
and
inc
sbb
jbe
aas
cmovge
add
loopne
filds
dec
push
lods
xchg
dec
add
jge
inc
scas
pop
call
cmc
mov
fs
out
inc
sbb
pop
dec
inc
adc
mov
sub
cmpsb
mov
xor
stos
ss
xchg
or
jg
outsl
cmp
jb
cmp
mov
push
clc
aaa
pop
bound
imul
xchg
scas
push
and
out
add
test
jle
outsb
das
test
nop
dec
scas
and
cmp
lods
cmp
stos
mov
push
mov
mov
pop
iret
lods
cmp
les
mov
xor
pop
mov
lods
ja
or
xor
push
cwtl
movsb
iret
adc
sub
ljmp
pop
sbb
nop
push
sub
sub
mov
push
cmp
mov
ss
ds
div
jne
mov
test
pop
add
sbb
pop
cmpsb
fisubrl
mov
bsf
inc
shlb
stos
add
je
je
rcr
aas
xchg
hlt
pop
pop
jp
xchg
push
addr16
jmp
out
mov
mov
outsb
je
mov
and
jp
rcrl
xor
push
push
push
lods
dec
push
es
mov
out
cmpsb
into
mov
xchg
popa
xor
cmpl
jne
or
int3
jle
lcall
popa
sahf
push
sbb
loop
or
sar
mov
insb
insb
shlb
mov
mov
cmpsb
aam
ljmp
sbb
int3
loopne
leave
xchg
sbb
jae
add
cwtl
sbb
add
stos
mov
mov
ja
stc
sahf
and
push
fcomps
bsr
popa
add
xlat
js
bnd
ss
mov
mov
mov
pusha
or
ljmp
fildll
les
add
rcl
movsl
jecxz
inc
push
fsubrs
jae
scas
push
push
enter
sbb
arpl
pop
xchg
js
pop
stos
cwtl
in
push
or
aas
sub
stc
add
xchg
in
dec
gs
mov
les
fwait
sub
push
xor
and
js
pop
cmp
dec
mov
jb
pop
add
sub
scas
sub
xchg
xor
mov
mov
inc
cs
out
sahf
sub
fwait
jb
div
fildl
push
sub
add
call
lret
pusha
pop
icebp
mov
data16
pop
mov
movsb
into
cltd
stos
sub
rcll
jbe
adc
sbb
cltd
imul
shl
lds
sub
mov
pop
in
arpl
in
inc
sahf
cltd
push
sbb
xor
jmp
cmp
jle
in
mov
jle
cmpsl
arpl
idiv
xlat
dec
test
cli
std
pop
outsl
call
cwtl
inc
xor
loop
mov
jb
mov
cwtl
mov
es
stc
and
call
cmp
sarl
js
stos
ret
int
cli
xlat
fistl
aad
in
inc
pop
test
cmpb
mov
cltd
test
push
sub
and
call
inc
and
in
addps
leave
incl
loop
stc
adc
adcl
dec
fs
out
mov
scas
mov
pop
jno
sti
push
cmp
cli
mov
scas
jb
and
sbb
fsts
fs
mov
stc
sub
insl
ds
cmpsb
aas
lret
cli
cmpsb
xor
jbe
pop
fwait
xchg
rcr
pop
mov
push
fs
je
int3
adc
loop
dec
add
add
jbe
mov
insb
adc
adc
into
jge
mov
sar
nop
ret
jae
push
cmp
and
fstl
pop
jecxz
mov
add
sti
push
mov
inc
dec
sub
xor
fisubl
mov
in
cmp
jmp
fcoml
sbb
mov
repz
and
int
jl
push
inc
out
jle
stos
fs
push
lods
leave
push
mov
jnp
mov
cmp
dec
dec
push
or
mov
jbe
adc
push
repz
xchg
icebp
in
fstpt
test
lods
test
leave
cmp
in
pop
adc
ficoml
inc
test
lods
stos
jmp
fcompl
in
inc
ret
lret
sub
cmp
pop
fdivrs
push
out
push
dec
dec
jmp
jmp
push
lcall
scas
leave
sbb
inc
sub
mov
scas
les
jg
daa
dec
mov
mov
es
stc
notl
mov
iret
std
or
adc
stc
xchg
jne
lcall
or
inc
in
sbb
add
adc
adc
fnstcw
mov
shll
popa
sbb
sbb
daa
inc
pushf
in
daa
xchg
lret
mov
cld
or
sub
fst
mov
pop
mov
scas
jg
scas
std
popf
loope
xlat
icebp
inc
jnp
adc
pop
sub
pop
and
sti
popa
jmp
jb
fstpt
sub
test
negb
pushf
insl
sbb
mov
push
stos
mov
inc
movsl
jbe
or
mov
scas
xorb
or
cld
add
clc
sbb
addr16
out
add
pop
xchg
das
dec
inc
out
jle
or
aaa
push
xlat
or
notl
arpl
mov
mov
xor
jle
cmp
xorb
sub
adc
shll
mov
dec
js
lods
sbbl
sub
leave
sbb
mov
enter
pop
cltd
fstpt
das
or
xchg
adc
ljmp
pop
xor
iret
mov
dec
jb
fistps
jge
jno
cmp
jg
or
pop
pop
jl
add
cmp
dec
mov
adc
push
push
push
sub
jl
sbb
jnp
lcall
lods
cmp
mov
into
mov
cmp
insb
ljmp
mov
jmp
pop
xchg
and
aas
fisubl
rcrb
insb
jbe
cmp
sbb
shrl
out
fcomp
popa
and
mov
push
and
scas
ds
stos
mov
pop
pop
dec
aam
add
mov
jno
pusha
fistl
xor
enter
call
mov
cltd
and
adc
push
pushf
sarb
mov
insb
movsb
mov
sub
cmp
mov
pop
stc
std
mov
mov
mov
dec
pop
or
cmc
pop
pop
fcompl
aad
ret
lret
mov
or
fildll
loopne
mov
call
repnz
lret
pop
add
dec
xor
or
jns
mov
xchg
pop
or
jp
scas
sbb
movsb
mov
dec
rcrb
add
rorb
loope
addr16
sarb
fmulp
sbb
int
das
mov
add
int
jge
aad
pushf
popf
push
or
dec
and
pusha
sahf
jbe
sbb
call
pusha
fistpl
adc
xchg
or
lret
sbb
mov
inc
and
mov
mov
fldl
inc
inc
jmp
aas
and
mov
dec
jle
pop
sar
adc
pusha
faddl
sub
pushf
insb
orl
pushf
xchg
push
std
mov
xor
cmp
les
inc
add
sbb
aad
mov
loope
hlt
mov
enter
adc
sahf
mov
pop
inc
test
sub
dec
xchg
test
mov
cmc
imul
push
push
dec
lock
mov
imul
xor
pusha
or
cmp
inc
sbb
jg
mov
test
sbb
loopne
je
mov
mov
fcmovnb
pusha
js
pop
jg
jp
sub
jns
pop
sbb
mov
loope
jecxz
lods
sub
push
cli
and
sbb
decb
insl
sub
mov
xor
inc
xchg
push
xchg
cli
leave
bound
pop
jmp
leave
add
aaa
sub
mov
mov
inc
mov
adc
cmpsl
mov
mov
add
int
and
dec
scas
jne
jmp
testl
xlat
mov
mov
or
dec
movsb
mov
mov
mov
stc
testb
in
mov
add
mov
dec
mov
mov
xor
inc
lods
cmpsl
inc
pop
repz
in
ret
in
dec
sub
dec
das
cmp
in
leave
ja
mov
sub
leave
ret
popa
addr16
mov
xchg
arpl
or
sbb
sbb
inc
push
ss
mov
test
sub
inc
jb
mov
int3
icebp
push
push
pop
les
int
add
pop
sbb
push
cmpsb
sub
add
arpl
add
mov
repnz
dec
int
jae
je
xchg
cmpsl
cwtl
cmp
jo
adc
sbb
inc
cmp
mov
cli
push
bound
cltd
mov
mov
cmp
xchg
pop
xor
pop
vpmulhw
mov
push
cs
dec
sub
sub
out
mov
out
fstps
xchg
adc
imul
mov
mov
add
loopne
pop
sahf
pop
jl
adc
pop
pusha
adc
push
out
nop
inc
movsl
pop
std
ja
sbb
adc
adcb
pop
iret
imull
cmpsb
xchg
je
push
jg
adc
mov
and
mov
popa
std
inc
push
mov
add
cs
aaa
scas
rcrb
in
rcll
mul
arpl
push
in
fsubs
iret
in
jmp
cwtl
sub
push
imul
int3
das
subb
xor
icebp
fcompl
shrb
inc
test
and
divl
or
in
ror
xchg
cmp
pop
jmp
aam
add
rcll
push
cmpsl
inc
jle
sarl
cmc
pop
aas
jge
lds
and
lcall
inc
daa
mov
inc
inc
push
pop
out
aam
inc
outsb
orb
out
sbb
mov
lds
pop
test
outsl
int
lret
inc
jno
psubsb
mov
dec
ljmp
add
mov
jg
jno
movsl
cmpl
inc
repnz
aam
xchg
repnz
jecxz
mov
mov
out
scas
ja
loop
adc
jge
movsl
cmp
push
lds
cmpb
cmpsl
cmpb
int
lock
test
nop
cmp
cs
or
addr16
jo
xor
leave
das
mov
imul
je
imul
sub
xor
hlt
test
push
out
in
pop
xchg
imul
test
push
shrl
pop
call
stos
sarl
inc
jmp
shrb
sub
sbb
bound
mov
cltd
push
aad
loope
push
popa
stos
hlt
cmp
out
mov
inc
mov
inc
not
push
data16
movsl
cwtl
fcomp
pushf
pop
pusha
mov
mov
jle
out
cmpsb
cvtps2pi
hlt
mov
ds
dec
clc
mov
in
xchg
repnz
insb
in
popf
ficompl
inc
pop
xchg
jl
dec
shlb
xchg
pop
sti
fwait
xchg
bndstx
xchg
cmp
cmp
inc
lea
nop
dec
add
icebp
sbb
into
pop
pop
adc
add
push
mov
fcoms
jecxz
dec
outsb
cmp
insl
xchg
roll
and
bound
inc
mov
or
push
sbb
ds
adc
inc
dec
xor
dec
jae
pop
mov
pop
stc
inc
cmc
mov
dec
push
sbb
and
adc
jb
dec
adc
add
xlat
inc
imul
test
and
mov
jno
out
bound
push
or
xor
ds
sub
mov
or
sbbl
xor
push
mov
mov
sub
pop
push
pop
fcomi
ja
aam
in
out
das
jg
outsb
rcrb
cmp
inc
insb
xchg
dec
mov
repnz
in
sub
mov
loopne
inc
push
bound
addr16
das
jge
rclb
fdivrl
mov
pusha
and
and
out
ret
das
xchg
adc
push
xlat
sbb
inc
cwtl
mov
xor
insb
sbb
test
xlat
fsts
lods
jle
aam
outsb
jge
xchg
dec
or
mov
in
xchg
clc
fidivrs
cmp
sub
pushl
sbb
adc
dec
inc
sarb
sub
cltd
xor
sbb
sub
sbb
push
stc
into
sub
cs
xchg
sbb
adc
iret
addb
pop
jle
out
ds
mov
fnsave
push
sbb
cli
xchg
aam
pop
repnz
jge
jl
cwtl
fmul
inc
mov
pop
imul
push
stc
imul
jbe
mov
jle
cli
cli
int3
mov
es
js
mov
push
dec
adc
fisttpl
fcmovbe
stc
pop
jo
je
int
mov
scas
les
or
or
xchg
mov
mov
push
sub
sahf
popa
into
add
test
lret
in
ja
aaa
ljmp
movsb
xor
pop
stos
bnd
mov
jb
cmc
aas
jno
mov
or
lcall
xor
lcall
dec
add
rcll
or
fsubs
lods
dec
out
xchg
dec
push
mov
add
jge
push
pushf
dec
scas
push
and
les
std
cmp
loope
mov
call
add
mov
adc
dec
aaa
lret
fildl
cli
sbb
incl
stos
sub
lock
divl
addr16
pop
int3
jle
mov
mov
test
daa
outsb
repnz
rcrb
ja
hlt
psllq
dec
and
push
add
mov
call
fdivrl
sub
fmul
das
cs
test
icebp
sbb
mov
mov
loopne
movsb
ljmp
dec
call
or
sub
jg
xchg
lds
jae
test
pop
dec
call
fistpll
cmp
cmp
shll
imul
and
adc
mov
cwtl
inc
push
in
scas
lea
add
out
cmp
adc
sarl
test
pop
cmp
movsl
or
aam
sub
iret
les
inc
test
cwtl
movsl
jge
lret
jl
stos
cmpsb
cmpsb
xor
jae
test
out
or
pushf
in
add
push
lods
lcall
xor
cmp
pop
loop
xchg
in
lds
jecxz
inc
add
add
jns
push
faddp
cmp
cmp
in
sbb
mov
cmp
imul
push
loope
dec
pop
push
cmovae
inc
dec
ffree
mov
out
jge
cs
stc
out
int3
mov
out
push
je
shlb
or
and
mov
and
inc
jle
and
mov
mov
xchg
lret
xorb
es
clc
jbe
stos
jmp
cmp
add
and
mov
mov
push
xchg
mov
mov
ljmp
ljmp
or
xor
xchg
mov
xchg
push
mov
adc
jmp
in
or
es
ljmp
xor
aad
mov
dec
sahf
pop
clc
cmc
adc
jecxz
fnstenv
xchg
test
or
xor
xor
imul
out
std
jge
dec
ret
jmp
mov
xor
js
jne
jmp
add
inc
sub
pop
ret
push
outsb
das
insb
lret
es
pusha
and
stc
notb
adc
inc
cmp
fistpl
outsb
xor
inc
dec
jle
and
lahf
ds
pusha
cli
inc
outsl
repnz
add
add
push
sub
and
test
pop
pop
icebp
cmp
cltd
mov
adc
fcmovb
mov
out
mov
push
and
jnp
int
add
ja
cmp
and
aad
aaa
ret
and
xor
and
sub
std
lret
and
notl
add
jmp
cltd
jmp
ljmp
sbb
test
fcoms
jae
mov
mov
ret
shll
jb
mov
movsl
faddl
xchg
or
jb
xchg
pop
call
mov
ss
and
shrb
cmp
push
jns
lds
jmp
cmp
sub
into
ss
mov
jbe
push
cmp
seto
or
dec
rclb
cmp
div
cld
inc
and
mov
xchg
out
dec
fstl
jge
jo
or
dec
rcll
dec
dec
mov
test
mov
cmp
shrb
xchg
imul
add
insl
mov
dec
test
pop
add
ds
or
ja
mov
xchg
cli
xchg
stc
push
rclb
xchg
push
push
mov
cs
jge
and
mov
ljmp
out
incl
movsl
aas
mov
jns
fildll
push
movl
mov
sub
jns
fs
stc
in
mov
mov
dec
push
clc
sub
out
subl
push
fcoms
clc
xor
xchg
xlat
add
stc
outsb
xchg
adc
outsl
jge
in
cmp
push
sarb
hlt
in
shlb
push
jmp
ja
daa
out
pusha
push
cmpsl
sub
xchg
xchg
cmpsb
in
xchg
iret
arpl
aaa
cld
data16
push
sbb
push
jnp
jne
mov
mov
ja
adc
cmpsl
push
and
fwait
adc
scas
xor
popa
and
ret
mov
dec
cs
imul
mov
dec
dec
mov
and
sbb
decl
cmp
movsb
ret
pushf
rcrl
add
mov
pushl
adc
dec
mov
jno
icebp
and
add
mov
xchg
jle
scas
push
ja
roll
jecxz
out
je
movsb
mov
or
sub
mov
rorl
lods
loop
arpl
xor
scas
aas
cmp
push
in
pop
repnz
xor
cmc
imul
mov
xchg
or
mov
das
je
daa
out
jle
xchg
and
ret
ret
lcall
sti
sub
mov
fldt
aad
jecxz
inc
add
add
sbb
xor
or
add
pop
push
sahf
xchg
loopne
adc
mov
sahf
mov
sub
lods
mov
icebp
and
or
rorl
insb
or
mov
inc
jg
hlt
and
push
inc
xor
test
hlt
sub
cltd
or
sub
cmpb
mov
rorb
jno
sbb
inc
cli
jns
jo
shl
in
mov
and
fcom
icebp
es
pushf
xchg
in
xor
pop
mov
mov
add
add
jmp
rorb
push
dec
into
in
cwtl
test
es
pop
call
outsb
repnz
aam
out
loopne
dec
ss
pop
subl
jge
mov
push
and
or
push
out
xchg
test
and
adc
sub
mov
roll
lods
lcall
mov
pop
cmpsb
sarb
mov
adc
gs
lahf
roll
cwtl
sub
subb
jb
dec
jmp
in
mov
add
jo
out
ljmp
and
enter
cld
int3
aaa
add
lcall
add
mov
inc
loop
push
xchg
mov
std
cmp
daa
mov
mov
call
dec
hlt
push
ljmp
cmp
ds
jle
sahf
lods
mov
pop
lret
sub
jno
popf
gs
cmc
jno
mov
aam
rclb
add
fisubl
sbb
mov
aaa
add
dec
mov
idiv
shl
adc
add
mov
jl
sti
xchg
xchg
out
ja
vaddsd
add
adcb
and
jle
out
test
and
or
mov
xlat
popf
scas
out
ja
add
aam
mov
sbb
shll
mov
push
sbb
insb
lret
mov
xchg
lods
fisubrl
aas
sub
out
clc
shrb
cmp
negb
es
mov
lock
into
testl
mov
dec
cwtl
jb
jae
sub
xchg
jae
xchg
sbb
inc
cmp
xchg
insb
mov
sbb
cmp
shr
enter
push
mov
mov
out
dec
mov
pop
repnz
cmpsb
or
sbb
mov
daa
cli
daa
jg
inc
enter
fs
sahf
and
scas
inc
add
mov
pmaddwd
fstl
sub
ret
jmp
push
mov
pop
pusha
pop
push
jo
fidivs
push
pop
scas
addr16
iret
cmp
call
fwait
testl
movsb
or
mov
insb
fstl
cmp
rcl
pop
jnp
and
in
pop
aas
cli
cmp
inc
ljmp
sti
scas
aas
and
sbb
push
nop
in
mov
adc
pop
decl
xorl
push
gs
adc
loope
jae
push
into
fstps
sub
nop
dec
cmc
nop
dec
cmpsl
subl
ja
jae
adc
mov
pusha
dec
push
loope
in
iret
cltd
xor
jp
std
in
adc
pushl
push
mov
in
cvtpi2ps
inc
mov
xor
mov
test
lcall
lods
add
fisttps
int3
inc
out
push
adc
idivl
shlb
adc
push
fsubl
sti
negl
mov
out
fwait
jge
and
mov
repz
inc
adc
mov
inc
je
push
dec
adc
mov
inc
mov
ret
xor
lahf
lds
mov
test
dec
add
add
xchg
mov
mov
sbb
aam
into
lock
mov
jb
shrb
cmp
rorl
std
lods
sbbb
roll
int
push
imul
fcoml
shlb
fildl
jge
mov
jp
sbb
lret
insb
into
es
mov
mov
push
test
aad
add
mov
sub
lcall
xchg
add
sbb
cmp
fs
int3
xor
jno
jmp
fsubs
cmc
dec
lea
popf
cli
push
xchg
jp
iret
idivb
jg
popa
frstor
push
mov
mov
sahf
in
jo
add
adc
add
popa
imulb
aas
dec
lcall
adc
fs
rolb
mov
out
jmp
repnz
xchg
out
push
sbbl
cmc
sub
sub
jmp
dec
push
cld
xor
pop
in
push
pop
cltd
mov
dec
lds
adc
popa
in
jge
mov
xor
mov
cmp
test
rolb
sahf
mov
adc
clc
insb
xchg
bnd
push
fnstsw
and
es
and
loop
inc
sub
mov
js
int3
movsb
fsubl
xchg
pop
fimuls
cmp
jo
xchg
cld
push
inc
shrl
dec
arpl
inc
cmp
out
and
mov
cmp
dec
inc
push
xor
add
sti
stc
push
out
mov
or
fnstsw
decb
pop
das
push
mov
xchg
sub
sbb
mov
add
pushf
pop
insb
adc
mov
inc
inc
in
mov
push
bound
out
popf
jae
dec
xor
pop
xchg
mov
or
dec
shlb
adc
fnstcw
or
daa
add
fidivrs
fs
and
lret
xchg
xor
and
movb
jmp
lods
pop
ret
mov
jg
mov
adc
jnp
mov
int3
leave
push
ja
xor
sub
stc
mov
pop
aam
int
push
jg
sub
xchg
gs
stc
pop
out
xchg
xchg
sbb
sub
cwtl
dec
push
jbe
pushf
push
ss
test
cwtl
in
xchg
push
in
inc
fptan
fcomp
push
sbb
in
sbb
xchg
fwait
std
cmp
push
cmp
or
pop
jnp
ret
xchg
int3
icebp
xchg
test
and
xlat
andb
fucomip
imul
adc
mov
repnz
icebp
mov
mov
pop
icebp
in
decl
and
cltd
loope
adc
xchg
push
rol
and
inc
push
outsb
rcrl
xchg
adc
cmc
mov
xchg
pop
adc
mov
push
push
insb
adc
in
dec
pop
push
leave
pusha
mov
test
sub
dec
xchg
adc
aaa
mov
mov
jno
shlb
xchg
xchg
jmp
clc
into
and
aas
cmc
iret
add
fidivrl
mov
js
xchg
sub
jp
stc
jp
push
xchg
lds
pop
out
in
add
add
bound
clc
rcrl
testl
shlb
adc
jg
rcl
js
mov
scas
stos
jmp
insb
and
push
lods
jbe
insb
inc
loopne
stos
test
or
int3
xchg
das
sar
aam
rorb
cmc
add
std
or
sbb
mov
lods
adc
inc
xchg
jne
leave
sar
fcoms
cwtl
std
das
or
test
pop
jnp
pushf
aad
cld
or
rcr
sbb
push
icebp
cmp
insl
xchg
std
pusha
stos
clc
or
and
xor
movsb
out
jne
ret
cli
sbb
ja
lds
jge
jmp
pop
out
nop
hlt
adc
push
loopne
or
sub
sbb
int3
das
add
lahf
cmp
mov
xor
lcall
ja
das
fldl
jle
repz
call
testl
push
sub
emms
mov
xlat
stc
xor
xor
sub
jle
es
pop
pop
cmp
push
rcrl
and
jp
movsl
icebp
enter
inc
in
aas
add
mov
sub
cli
jns
push
and
int3
cmp
jns
sbb
mov
sbb
in
lahf
adc
dec
popa
pop
movsl
out
add
and
neg
into
inc
push
pop
cmpl
sub
or
popl
push
aad
popa
push
imul
xor
lds
xor
jmp
aad
clc
and
push
fbld
cmp
aaa
sub
cmc
bound
scas
dec
mov
es
je
dec
inc
std
add
mov
stos
popa
jge
ljmp
cltd
jns
repnz
ret
xchg
outsb
out
jns
cmc
sbb
dec
pop
sub
xchg
push
sbb
cwtl
adc
scas
sub
xor
cmp
into
scas
iret
xor
sbb
sub
xchg
mov
xorb
fs
imulb
push
lds
hlt
fwait
mov
jge
outsl
or
push
and
or
sub
xchg
ret
stos
push
sub
movsl
int3
iret
je,pt
dec
mov
ja
scas
add
sub
in
pop
shrd
xchg
leave
popf
sti
fld1
lret
mov
out
in
pop
repnz
xor
mov
stos
in
mov
idiv
fwait
jmp
lods
xor
clc
sbb
sub
mov
je
stos
mov
fwait
in
cmp
test
and
inc
sub
and
out
in
jl
insb
fbstp
mov
mov
or
sar
sbb
icebp
pushl
aam
pop
sbb
cmp
push
test
popa
popa
arpl
lods
lods
es
aaa
mov
lock
pop
push
or
xor
mov
popf
fildl
inc
out
inc
loopne
xor
push
cld
fnstcw
sbb
push
mov
stos
pop
mov
adc
dec
rol
es
dec
imul
hlt
mov
push
test
jmp
fucom
sbb
dec
fdivrp
xor
xchg
push
adc
ja
mov
popa
xchg
and
or
cltd
jns
arpl
adc
cmp
mov
pop
movsl
std
dec
imul
mov
mov
lock
test
mov
repz
cmp
into
pop
sbb
andl
dec
jo
js
xchg
popa
mov
test
mov
push
mov
mov
xchg
out
mov
push
adc
stos
lret
sub
sub
scas
out
adc
inc
shl
divb
xlat
mov
mov
aam
mov
xor
pop
cs
insl
je
push
dec
mov
rolb
pop
sar
jle
test
push
xchg
xlat
cmpsb
test
pop
cs
lods
sbbl
ja
fisttpll
shlb
xor
or
dec
pop
mov
lds
outsl
sarb
clc
leave
loop
pop
aam
daa
mov
xchg
or
jmp
mov
inc
scas
nop
insw
outsb
call
ja
dec
or
mov
leave
adc
je
fildl
sub
fimuls
nop
inc
inc
and
in
notl
add
ss
lods
icebp
in
lret
jg
call
mov
lahf
fsts
iret
insl
cmp
addb
mov
cmp
rolb
mov
imull
test
jle
imul
mov
test
aaa
mov
das
aad
cs
test
imul
gs
cwtl
xlat
inc
xor
pop
outsb
test
inc
pusha
mov
jmp
scas
push
or
mov
add
jae,pt
dec
outsb
aaa
movsl
fistl
xor
loopne
imul
inc
push
xorl
fwait
sub
inc
icebp
push
fcoml
xor
sbb
pop
aas
fdivrl
popa
dec
mov
aad
dec
sti
pop
out
sub
mov
icebp
jb,pt
pop
hlt
sbb
fnstenv
loop
mov
mov
fwait
inc
fs
pushf
outsl
jg
mov
xchg
jl
jecxz
lret
mov
add
out
inc
mov
rcll
dec
cmp
adc
pop
pop
inc
jo
sbb
dec
mov
cmp
xor
lahf
xor
pop
lea
sbb
sti
ljmp
inc
inc
mov
loop
xchg
ss
mov
mov
pop
adc
test
xchg
addr16
and
aas
jne
mov
sbb
sbb
add
clc
and
mov
ret
push
aas
cwtl
sub
mov
test
movsb
xor
xchg
gs
add
repz
sarb
scas
loopne
xchg
shr
push
push
popa
hlt
cmp
push
sbb
repnz
dec
insl
movups
inc
add
scas
and
mov
mov
jg
and
xor
adc
xchg
je
dec
push
sbbb
mov
ret
dec
jo
lock
mulb
pop
jno
adc
push
sbb
pop
jne
push
xchg
aam
sub
push
mov
popf
inc
push
jnp
ljmp
push
int3
in
push
push
outsb
in
dec
arpl
loop
aam
sub
jns
dec
icebp
dec
sub
sbb
loop
lcall
and
xor
or
add
cmp
mov
push
jno
fcomps
adc
roll
add
pop
inc
mov
mov
push
sbbb
mov
dec
or
stc
xor
xchg
push
lret
and
mov
mov
lcall
xor
cltd
sbb
call
push
scas
loope,pn
lods
rcl
test
lahf
mov
popf
insl
cmpsb
into
and
xchg
daa
out
add
add
stos
bound
push
xchg
movsb
cmpsb
pop
and
dec
mov
dec
mov
mov
mov
and
xchg
rorb
push
enter
ss
jle
mov
xchg
mov
push
mov
stc
int
mov
fnstcw
cld
aas
jno
lahf
mov
mov
dec
lods
adc
cmp
jne
lock
addb
push
out
or
pop
push
loop
sbb
shr
fs
mov
in
out
mov
xor
sub
fs
add
lret
test
popa
call
ret
xchg
cmp
or
cmc
push
rorb
push
push
mov
iret
xchg
out
popa
jno
adc
fadds
mov
add
dec
sbb
push
dec
test
insb
sar
dec
or
iret
sarl
cmp
push
and
loop
cwtl
jno,pn
adc
and
xor
mov
sub
mov
loop
or
cmpsb
clc
push
and
dec
jge
cld
outsl
pop
cli
je
lret
jp
pop
ss
cmp
shll
imul
adc
push
jne
and
and
movsb
int
jb
popf
out
loopne
inc
cmp
nop
aas
jb
mov
mov
sub
jb
mov
xchg
fstps
sarb
xchg
mov
push
mov
pop
mov
ret
jg
ja
fcom
adc
and
nop
mov
or
or
outsb
fadd
stos
sti
in
mov
push
cld
push
sbb
adc
aaa
outsl
lahf
imul
mov
test
dec
and
outsl
into
add
mov
dec
cmp
in
sub
lret
hlt
lcall
shll
test
movsb
rolb
scas
insl
pop
fidivs
or
das
in
fs
xchg
pop
call
mov
jns
adc
int
mov
stos
xchg
mov
jge
pop
shlb
mov
lret
push
lds
imul
fsubrs
mov
dec
dec
cld
ja
sahf
pop
lret
loopne
dec
mov
nop
or
lods
cltd
xchg
sub
pop
xor
fistpll
mov
or
iret
mov
in
mov
cltd
xlat
mov
fcoms
inc
and
mov
sbb
cmp
jae
loopne
out
dec
aad
mov
cld
mov
push
enter
ret
fmull
xor
dec
xorb
and
mov
sub
stc
enter
scas
xor
rcll
pop
push
mov
aas
rcrl
mov
xor
faddl
cmp
rolb
push
loopne
leave
pop
mov
pop
push
rcr
fsubs
and
mov
jle
je
repz
popf
xor
nop
enter
dec
sahf
fimuls
or
xchg
xor
xor
jne
nop
hlt
fistl
rcl
rcrl
jbe
dec
add
jmp
pop
pop
ret
sub
dec
and
sub
les
je
test
xor
out
sbb
test
add
sbb
mov
xor
and
push
and
shld
inc
jp
test
jnp
daa
and
mov
daa
mov
lcall
lock
sub
cmp
scas
stc
push
loop
repz
jmp
xchg
xchg
mov
or
mov
divb
fnsave
pop
int
and
loopne
add
sub
cmp
cmp
sub
es
mov
inc
jg
xchg
dec
pop
cmpsl
dec
cmp
rorb
dec
das
rol
mov
into
movsb
and
mov
addl
nop
or
or
pop
mov
loope
in
movb
ret
leave
not
or
movsl
sbb
adc
bound
fdivl
mov
nop
mov
sub
xor
or
pop
cmp
sbb
xchg
jno
in
jo,pt
xor
data16
cmc
mov
fistpll
add
mov
testl
jp
mov
fcompl
test
cmp
fdivrl
cmc
sbb
adc
mov
pop
xchg
add
aas
xchg
pusha
cwtl
or
xchg
jecxz
ljmp
rorb
pop
mov
loope
push
stos
add
add
and
test
xor
cmpsb
call
mov
push
into
push
xchg
mov
and
mov
jnp
jne
mov
push
mov
jmp
int3
inc
push
test
add
pop
dec
imull
test
les
xlat
scas
sub
jb
jnp
out
sbb
adc
insl
notb
push
ficomps
outsb
push
sub
push
clc
ja
jbe
push
popf
cs
rorl
xchg
lods
cmpsl
inc
add
jae
iret
jge,pn
into
mov
aaa
test
pop
pop
inc
lods
inc
jl
lea
leave
lcall
pop
punpcklbw
lods
lahf
push
dec
in
cmp
cmp
arpl
cmp
into
lods
and
and
inc
ljmp
mov
mov
mov
lret
mov
mov
pop
sbb
ret
pop
mov
mov
fdivrs
adc
lret
insl
rolb
pop
repnz
aam
in
lock
data16
push
sbb
push
daa
push
ljmp
orb
sbb
push
sub
bound
iret
add
scas
jg
ss
sbb
stos
adc
sub
inc
int3
mov
cmc
push
cwtl
inc
mov
pop
push
sbb
adc
rorl
pop
mov
bnd
popf
fucomip
iret
roll
sbb
cmp
xor
cwtl
addb
xor
into
ficomps
dec
scas
loop
fnstcw
nop
mov
call
push
loop
jmp
aam
gs
xchg
scas
xchg
or
ja
jbe
subb
fists
shl
xor
push
jmp
sarb
mov
add
cld
sub
stos
lea
hlt
int3
inc
sti
mov
mov
cmp
xchg
sub
fcoml
cmp
stos
into
and
pop
inc
xchg
cmp
sti
ret
popf
push
cli
jp
mov
fdivl
jle
cli
mov
movsl
jb
add
inc
gs
xor
sub
mov
pop
and
jnp
out
dec
dec
cmp
jo
mov
ja
mov
lods
lods
or
loopne
mov
loop
movsl
xor
mov
pop
xor
cmp
mov
add
sub
fimuls
push
dec
push
adc
mov
imul
xor
mov
inc
jmp
sbb
test
add
pop
lods
push
test
lods
xor
in
dec
rcll
cmp
cmpl
jbe
mov
cmp
xchg
jns
ficoml
sub
pop
data16
mov
mov
mov
jmp
loopne
xor
xlat
sbb
xor
lods
das
jecxz
inc
subb
mov
andb
iret
sub
mov
cmc
in
aaa
movsl
repnz
popa
sbb
sub
cmc
inc
andl
notb
xchg
push
push
push
dec
das
popf
fwait
cmpsl
repnz
or
rcll
jno
rorl
lods
sbbl
pop
aad
sbbl
ret
popf
mov
data16
mov
nop
lea
and
push
mov
push
fs
hlt
dec
out
inc
ljmp
mov
into
inc
out
sub
imull
xor
dec
jmp
or
dec
sbb
stos
xlat
mov
xchg
jp
or
insl
packuswb
push
notb
sbb
jl
cmp
setge
hlt
xchg
xor
mov
xor
aaa
sbb
adc
xor
ret
pop
sub
fs
inc
inc
mov
mov
add
stos
lds
cmc
mov
or
cmp
fcmovne
test
hlt
lods
cwtl
scas
call
jno
cltd
jno
loopne
shll
subl
mov
mov
mov
outsb
pop
xor
xor
sbb
mov
out
dec
push
pushf
sub
in
add
sbb
xchg
je
int3
ret
mov
aaa
and
xchg
cmp
loope
data16
push
pop
jbe
and
test
jge
in
sub
out
add
and
lcall
and
push
adc
insl
mov
loope
cmpsb
mov
xor
notl
mov
push
stos
jmp
add
lods
outsb
lods
repnz
subb
dec
outsl
mov
adc
in
ret
mov
and
rorl
int3
cmp
imul
ret
xor
pop
es
lods
cmp
pop
mov
inc
inc
mov
lahf
pop
popa
add
pop
sbb
negb
fwait
mov
fcompl
mov
add
jle
inc
sub
aas
dec
mov
loopne
ss
adc
push
xchg
aam
cwtl
dec
mov
out
call
loope
in
pop
mov
pusha
test
xchg
icebp
xor
ret
push
test
rorl
mov
div
pop
es
jge
gs
aam
and
mov
cli
mov
loope
mov
insl
out
fisubrs
cmp
imul
dec
scas
lods
ret
in
pop
int3
adc
xchg
push
loope
int3
leave
rclb
scas
pop
aad
in
pop
mov
inc
xor
xor
push
inc
cmpsl
icebp
sub
insl
adc
sbb
inc
inc
movsb
fstpt
jp
enter
or
jns
scas
nop
cmp
lock
dec
inc
cli
jne
filds
jecxz
cmpsb
add
sub
push
xchg
decb
xor
lods
jnp
int3
mov
cmp
and
lea
cli
outsb
xchg
imul
mov
xchg
adcb
stos
sbb
dec
lods
imul
ljmp
pop
xchg
mov
pop
adc
roll
jmp
jne
sub
or
and
movsb
js
js
idivb
ror
adc
imul
mov
push
and
pop
mov
xchg
jb
mov
pop
cmp
jecxz
inc
add
sahf
cmp
pop
jecxz
mov
jge
shl
in
mov
ja
popa
jo
aas
iret
sub
pusha
push
cmc
inc
adc
xor
mov
xchg
push
fdivrs
push
mov
aas
into
dec
cmpsb
test
inc
daa
inc
push
gs
scas
cmpsb
mov
lods
mov
adc
lret
jno
mov
and
mov
mov
scas
repnz
sub
xchg
mov
or
iret
sahf
cmp
inc
mov
or
mov
lahf
ret
aas
les
dec
mov
outsb
mov
sahf
roll
pop
sbb
and
mov
pop
enter
and
xor
rorb
icebp
in
movsb
addb
dec
loop
hlt
mov
rcrl
jg
cs
mov
mov
movb
movsl
mov
pusha
mov
addr16
push
cmpsb
stos
fs
shlb
in
test
lcall
jecxz
sub
test
xor
mov
push
jo
cmpsl
out
pop
adc
xchg
icebp
jmp
dec
and
mov
sub
or
xor
lods
mov
rolb
xchg
inc
addb
mov
call
push
mov
icebp
and
mov
movsl
inc
andl
or
rep
pop
imul
ljmp
cltd
pop
pop
das
pop
xchg
js
and
xor
push
scas
and
es
add
pop
or
mov
xlat
xor
pop
mov
xchg
into
and
fists
xchg
mov
fildl
or
and
xchg
call
xor
scas
mov
mov
cmp
movsl
lahf
inc
sub
call
ljmp
push
mov
cmpsb
cmp
jae
fsubs
pop
nop
lea
addb
mov
sbb
stos
push
das
pop
push
push
out
outsl
fnstenv
mov
rorb
ror
rcrl
aas
jnp
cmc
adc
inc
mov
pop
inc
test
jae
loop
mov
adc
leave
dec
out
push
adc
outsb
pushf
inc
subl
push
pop
call
int
add
pushf
sbb
add
jnp
push
ja
xor
pop
je
aaa
dec
mov
mov
outsb
mov
leave
cmpsb
jp
sub
inc
pop
outsb
dec
jp
or
sbb
sub
mov
outsb
pop
adc
fidivs
aaa
mov
cmp
aam
in
adc
lcall
test
xor
push
push
pop
jecxz
iret
sbb
int3
lods
shlb
lock
popa
sbb
ret
push
xor
sub
jmp
or
popa
test
shll
jbe
insl
mov
sbb
hlt
jns
push
int3
stos
lea
das
xchg
sub
mov
push
nop
push
sub
or
fucom
ret
lds
pop
gs
call
adc
push
lock
xor
std
mov
outsb
fdivl
es
add
aad
adc
pop
push
mov
mov
packsswb
push
mov
xchg
dec
lcall
ror
mov
dec
mov
jo
mov
cli
jb
sub
pop
xor
fisubs
mov
pop
mov
xchg
orb
mov
jle
pop
hlt
jns
push
outsl
js
mov
adcb
sarl
gs
xlat
and
push
iret
dec
arpl
je
inc
sarl
ret
or
out
pop
push
imul
leave
pop
inc
loop
pop
call
inc
push
nop
pop
add
mov
cmp
fildll
in
in
addr16
jp
out
xor
stos
cmp
ds
mov
cli
aad
or
cmc
cmp
jle
inc
jmp
sbbl
mov
scas
jb
popf
jnp
xor
dec
iret
mov
push
insl
pop
xchg
add
insl
cmpsb
inc
movsl
arpl
shll
mov
push
mov
dec
fsubrl
stos
sub
xlat
inc
movsl
xchg
pushf
mov
sbb
lea
jecxz
pop
xchg
jge
xchg
cmp
outsl
xchg
push
mov
inc
popf
xlat
inc
mov
nop
nop
ret
sbb
ret
add
xor
push
lds
mov
aas
lds
es
divb
cmc
pushf
mov
add
mov
xchg
jmp
mov
bound
call
cmpsl
lahf
in
popf
inc
iret
jno
ret
mov
pushf
lret
in
dec
and
jae
adc
dec
jnp
and
mov
in
jg
lods
sub
push
daa
fiadds
cmpsb
adc
pop
insb
pop
inc
mov
std
daa
movsl
in
adc
mov
mov
cld
mov
cmp
mov
sbb
jnp
jne
fdivl
pop
cmpsl
xor
into
mov
mov
out
dec
pop
sbb
mov
adc
xchg
mov
ret
fldcw
lods
jmp
add
and
mov
insb
sub
aas
push
xlat
leave
xor
imul
lock
movsl
jne
xor
out
lea
int3
lock
out
aas
mov
sbb
addr16
push
fidivrl
push
test
jbe
lahf
adc
scas
xor
adcl
sbbl
aaa
or
adcb
xchg
out
hlt
sbb
mov
or
cmp
push
xor
fidivrs
xor
push
mov
pop
add
rolb
rol
popa
push
call
ret
add
lret
je
and
pop
ret
cmc
stos
jp
out
mov
add
insl
mov
xorb
cmpl
aam
out
scas
cmpsb
faddl
out
int3
rcrb
icebp
addb
mov
xor
xor
cld
mov
shll
push
addl
mov
jmp
and
xor
and
pop
inc
pop
aam
mov
dec
std
xchg
sub
das
lret
xchg
pop
loopne
add
fsubrl
adc
les
fcmove
outsb
jmp
pusha
ljmp
aam
sub
das
adc
and
mov
loopne
repnz
or
leave
mov
rorb
lahf
leave
fs
scas
xor
jle
movsl
or
movsb
inc
mov
or
fldt
adc
mov
test
mov
rorb
jg
rcrl
xor
jb
fsubrp
sbb
gs
rorb
pop
dec
push
lods
mov
lods
loope
and
sbb
jmp
push
enter
dec
push
mov
out
rcr
jle
mov
enter
fwait
aaa
push
xor
mov
xchg
ja
jle
pop
mov
mov
ds
in
or
cmc
sub
inc
ret
in
mov
or
dec
mov
outsl
ss
inc
mov
fnstenv
call
enter
mov
fdivp
jl
add
jae
call
hlt
jg
sarl
cmp
pusha
pushf
stos
push
add
cs
mov
jae
jns
pop
subb
not
fisubrl
add
jne
adc
roll
and
adc
ja
pop
sbb
push
pop
cmpl
lock
dec
lods
cmpsl
xchg
popf
xrelease
sar
mov
adc
push
lcall
rcll
push
add
mov
movsl
and
push
sbbb
filds
adc
clc
dec
pop
dec
dec
jge
cmp
andl
lcall
xchg
mov
fcoms
outsl
jecxz
xor
push
jo
cs
loop
vmovlpd
sbb
push
cmp
daa
or
sbb
repnz
les
cmp
ret
sub
push
push
in
icebp
mov
loop
pusha
or
or
lock
dec
es
test
fistpll
bound
js
cmpsl
ficompl
mov
les
fisttps
bound
push
push
adc
or
xchg
daa
mov
das
sbb
mov
pop
loop
les
mov
mov
fwait
mov
inc
sbb
mov
push
xor
roll
icebp
fsub
sub
and
std
std
push
out
lcall
mov
pushf
push
scas
data16
cmp
popf
mov
add
sbb
pop
das
jbe
sti
das
std
int3
scas
sahf
lcall
lods
test
stos
rep
jo
test
mov
adc
arpl
fsts
ss
inc
lcall
xor
pushf
cmpsb
stc
pop
fidivs
and
insb
inc
faddp
xchg
mov
dec
pop
frstor
leave
test
add
fsubrs
xchg
in
adc
and
popl
xchg
js
insw
icebp
addr16
das
pop
into
scas
std
mov
scas
jecxz
fbld
xchg
mov
outsl
lods
enter
jae
jg,pt
out
imul
sub
test
scas
aaa
add
imul
sbb
stos
out
daa
push
jno
fidivrl
stos
cltd
arpl
jg
cmp
dec
cmc
insl
sahf
mov
pop
push
cs
lea
inc
sti
mov
dec
pushf
cmp
push
ss
or
nop
sbb
xchg
xchg
dec
inc
int
in
ds
into
jge
add
or
sarb
mov
push
adc
dec
js
dec
xchg
sbb
popa
pop
push
add
imul
adc
adc
fldenv
add
cmp
jb
mov
scas
movsl
mov
sti
in
xchg
xchg
and
adc
pop
daa
insb
xchg
pop
imulb
repnz
jmp
cli
pop
dec
scas
pop
mov
pop
sub
aaa
pop
xchg
pop
mov
daa
iret
push
cmp
scas
or
xchg
adc
cs
sub
mov
mov
popa
xchg
push
lock
cltd
not
cmp
pop
xor
push
jbe
add
jns
loopne
push
push
nop
out
lods
push
fldt
stos
pop
sbb
xor
jo
ret
call
and
adc
cmc
lock
inc
and
xchg
push
lock
das
fbstp
jle
in
mov
push
lds
imul
sub
push
push
imul
xchg
mov
mov
pop
xor
arpl
int
add
push
inc
std
xor
push
mov
bound
ret
pop
test
push
je
mov
flds
dec
or
fiadds
and
add
aad
xchg
mov
imul
mov
stos
mov
adc
adc
aad
cmpsb
push
pop
test
ds
movq
cmp
fwait
int
inc
sub
je
pop
ret
sbb
sub
sbb
cmp
stc
or
pop
fisubs
int3
arpl
pusha
fs
data16
bound
dec
test
popa
decl
mov
loopne
lea
nop
dec
add
lds
aad
int3
subb
das
imull
bound
ds
xor
cmp
loope
mov
jbe
mov
dec
mov
sbb
jecxz
push
jns
push
mov
and
sub
push
mov
dec
loop
sbb
sub
stc
aas
lret
xchg
cmp
shll
lea
loopne
movsl
cmpb
mov
test
push
lds
test
out
inc
and
insb
mov
dec
xor
dec
push
xchg
dec
push
push
adc
cwtl
mov
rolb
jns
xor
scas
pop
and
ret
push
mov
xchg
shrl
test
pop
shll
mov
inc
xor
xor
mov
xchg
pushf
or
enter
movsb
fdivl
stc
in
mul
jns
jnp
decl
push
xchg
push
pop
sub
sub
repnz
push
mov
ret
sbb
xor
leave
pop
fildl
out
outsb
mov
xchg
mov
and
stos
mov
aam
mov
and
lret
mov
lcall
mov
ljmp
lds
gs
inc
and
fistps
enter
push
pop
shrl
jge
das
popf
xchg
mov
jns
leave
dec
pop
out
and
scas
test
loopne
add
mov
roll
gs
ss
add
push
cli
clc
into
xchg
pop
jnp
pop
inc
lods
sub
jno
cwtl
cwtl
fmuls
lods
inc
out
pushf
testb
mov
cmp
ret
paddusw
mov
sub
and
orb
and
mov
call
push
pop
xor
mov
ds
inc
out
imul
pushf
add
mov
mulb
loopne
out
loop
dec
jecxz
call
pop
and
mov
cmpsl
bound
dec
inc
outsl
fs
pusha
cld
ds
cwtl
or
js
or
inc
xor
imul
ja
jo
push
out
test
in
ss
das
insb
lret
pop
xchg
mov
adc
enter
adc
cmpsl
bound
xchg
es
and
pop
dec
lods
sbb
push
dec
out
jo
push
push
pop
adc
stos
mov
hlt
pop
mov
mov
idivb
cmp
test
mov
mov
xor
sti
jne
outsb
xchg
pop
sub
cmpsb
jno
insb
dec
int3
xchg
repz
testb
mov
add
sub
sub
clc
push
lret
jp
cli
xchg
xchg
popa
dec
mov
icebp
fcompl
cmpsb
mov
mov
add
push
dec
xchg
notl
jp
rolb
les
cmp
lods
push
jne
mov
pop
jmp
sbb
or
lret
cmpsb
and
test
cmp
into
mov
xchg
xchg
inc
mov
mov
outsb
aad
lods
adc
cli
lcall
inc
sbb
int3
subb
les
xchg
add
sbb
push
push
mov
pop
and
sahf
jne
sbb
sbb
hlt
push
fnsave
xlat
inc
mov
jns
jns
rcr
insl
sbb
push
mov
sbb
adc
pop
cmp
ret
cmp
out
push
out
xchg
cmp
lock
in
cmpsb
outsb
std
lahf
mov
cmp
js
int
add
xlat
int
call
ja
fs
cmp
jbe
aam
push
cltd
into
cmpsl
in
out
test
pusha
dec
imul
or
xor
loop
dec
jl
dec
les
push
push
pop
xchg
xchg
pushf
scas
mov
jle
cmc
insb
or
push
push
mov
into
and
xchg
mov
lods
jmp
xchg
arpl
sbb
movsl
sbb
lds
adc
lods
aam
cwtl
xchg
imul
xchg
loopne
movsl
fimuls
bound
jnp
andb
push
je
int3
cmp
add
stos
sub
out
jne
push
mov
mov
gs
push
add
and
scas
js
lods
cmp
jp
leave
dec
lods
cld
orl
orl
jecxz
inc
leave
sub
ljmp
dec
in
cmp
cltd
xor
pop
je
sub
ja
inc
mov
push
or
std
nop
rcl
roll
ret
movsb
dec
jnp
imul
adc
sub
mov
mov
test
out
cli
sub
fimuls
not
aas
sbb
ret
sub
inc
dec
and
add
enter
mov
ds
dec
jb
cli
enter
and
xlat
cmc
mov
and
wrmsr
push
xchg
je
daa
xchg
dec
flds
adc
out
repnz
nop
jecxz
bound
pushaw
lea
jmp
lret
pop
sub
pop
stos
dec
jae
lahf
push
leave
mov
cmc
sub
pop
xor
fistpll
jbe
sub
xchg
ds
sub
or
dec
adc
push
int3
mov
mov
adc
jbe
mov
addr16
filds
je
adc
push
xchg
mov
mov
mov
imul
das
push
icebp
insl
fadds
ret
mov
aam
out
shlb
orb
cmpsb
mov
mov
imul
mov
das
aaa
mov
lcall
add
mov
ret
pslld
pushf
inc
insb
cli
push
lds
or
mov
pop
cmp
out
fs
dec
jecxz
lret
nop
test
mov
leave
adc
sbb
ret
xor
pushf
js
pop
add
xchg
or
repz
jl
xchg
cs
push
lcall
push
push
xchg
mov
jge
pusha
das
gs
ja
movlps
mov
adc
cltd
loop
dec
rcrl
nop
and
push
and
sbb
mov
lods
inc
shl
push
mov
mov
sbb
andb
icebp
cmp
xchg
ss
repz
lds
push
and
pop
lret
test
jo
shrb
jmp
ret
in
inc
jmp
test
hlt
mov
push
mov
inc
inc
fs
out
test
add
jo
fwait
daa
arpl
mov
mull
loopne
movsb
es
ficoms
aas
ljmp
pop
mov
lcall
repz
add
jae
dec
sbb
dec
push
cmpsb
fst
popa
sahf
pop
data16
mov
bound
ss
adc
bound
idivl
shr
mov
and
jecxz
adc
pop
jmp
cmp
or
mov
mov
das
sti
ret
sub
cwtl
movsb
add
mov
jg
imul
cli
jmp
out
pop
test
fwait
in
aaa
jg
mov
arpl
das
jbe
or
jb
lret
pop
mov
push
into
xor
negl
movsl
jecxz
inc
repz
jno
mov
jle
out
mov
sub
je
icebp
sbb
fwait
or
loopne
dec
ja
sub
pop
xchg
mov
fwait
push
dec
dec
stc
sbb
jecxz
mov
mov
loop
sahf
jno
jb
mov
ret
insb
cmp
jb
push
int3
mov
lods
cmp
shlb
in
push
sub
popf
pop
adc
jo
sub
push
cmp
pop
divb
sbb
mov
imul
push
movsl
mov
xchg
adc
dec
or
mov
lds
pop
pushf
mov
mov
call
mov
loop
xchg
popf
or
xchg
lret
into
xor
mov
in
clc
int3
xorl
jge
test
pop
add
mov
nop
mov
imul
addl
addr16
sbb
add
imul
cmc
xchg
aam
sub
shrl
push
stos
repz
mov
aam
leave
outsb
aad
mov
sbb
fs
dec
out
inc
clc
pop
int3
lock
pop
adc
push
dec
cmp
fwait
mov
mov
hlt
mov
and
push
jg
aaa
popf
repnz
scas
pop
loop
loope
cwtl
lods
aas
int3
push
hlt
inc
lahf
sbb
inc
mov
enter
inc
icebp
cld
cs
sbb
mov
es
loopne
or
push
mov
cmp
imul
or
and
insb
arpl
adc
mov
adc
repnz
loopne
adcb
add
push
cmp
ds
or
imul
xor
jo
mov
xchg
xor
cli
sub
jne
push
cmp
mov
and
adc
pop
lea
gs
lods
and
mov
aad
je
in
dec
movsl
sbb
pop
out
inc
outsl
inc
outsb
call
in
setbe
jae
scas
xlat
cmp
sbbb
sbb
lds
or
adc
call
and
daa
pop
mov
sub
mov
je
test
das
fdivrl
xchg
clc
iret
jae
sub
or
push
pop
insb
les
ret
jbe
inc
fcoml
aam
pop
add
mov
mov
ret
sub
adc
aad
faddl
mov
push
jae
daa
mov
aam
fldl
test
cmc
mov
add
rcll
popa
or
xor
push
mov
cmc
push
pop
mov
dec
clc
aam
mov
into
and
add
push
int
add
mov
mov
inc
frstor
adc
div
xor
nop
sub
ss
mov
xorl
adc
xchg
cmpsb
cmp
pop
iret
enterw
fs
lahf
or
sarb
popa
pop
xor
xor
rol
xor
pop
out
push
inc
xor
imul
mov
jl
mov
push
xchg
and
xor
out
or
lea
mov
fistpll
fistpl
cmp
push
rol
outsl
push
imul
in
roll
cmc
pop
in
inc
sbb
repnz
bndstx
lahf
testl
xor
add
lahf
repnz
mov
sub
into
jl
imull
adcl
add
and
int
and
test
dec
push
add
mov
test
pop
pop
jbe
adc
mov
inc
addr16
rcrl
loope
push
inc
dec
ficoml
in
nop
push
stos
fs
mov
out
leave
rcrl
dec
or
sbb
push
scas
inc
shl
lahf
dec
orl
jb
fdivl
adc
je
pop
push
and
pop
inc
clc
xchg
mov
and
inc
popf
inc
push
movsb
dec
je
clc
icebp
imul
out
pop
cmpl
cld
stc
xor
xchg
pop
filds
xor
jb
sub
cmpl
sbb
pop
mov
imul
jnp
bswap
jne
movsl
lfs
cmp
push
mov
cli
inc
lret
repnz
xor
push
sbb
es
lods
inc
pop
add
adc
fistl
mov
sti
loope
mov
cs
fmul
sub
push
and
pop
cmp
les
push
fiadds
enter
cmp
mov
cld
sub
std
or
push
roll
add
in
aad
xchg
sub
std
jge
pop
fmulp
lret
scas
jmp
fwait
iret
xchg
xor
dec
out
in
jnp
pop
mov
pop
inc
out
mov
arpl
jb
pop
push
mov
and
les
test
ss
pop
bound
outsl
or
sub
inc
cmp
call
clc
bound
mov
imul
and
ret
shlb
jnp
bound
dec
rolb
push
cmc
cmp
sbb
jge
cmc
lcall
into
fcmovu
lret
pop
mov
call
ret
xor
and
jne
repnz
fildl
sbb
fwait
daa
mov
lahf
pop
or
and
fcomi
sbb
shlb
jns
or
or
out
jge
fs
cld
or
ror
mov
inc
jmp
pop
das
loope
cmp
loope
inc
mov
aaa
mov
cmp
roll
outsl
fsubrs
ret
cmpsl
icebp
cmp
loope
jae
cmc
cwtl
adc
jp
adc
adc
sub
stos
pushf
and
adc
mov
cmp
inc
add
mov
ret
mov
push
xchg
pusha
lds
loopne
inc
arpl
in
push
call
lock
fisttpl
pop
scas
sbb
jns
xchg
xchg
movsb
xor
cmc
scas
push
lds
movsl
out
mov
mov
shl
mov
ds
imul
in
addl
or
repnz
daa
jne
fidivrl
adc
out
mov
fidivl
daa
and
push
xor
fstp
nop
and
jno
adc
jne
and
mov
push
cmp
cmc
xor
call
push
jbe
leave
add
dec
out
mov
pop
cmp
in
pushl
cld
push
jnp
out
add
or
jmp
in
pop
mov
pusha
inc
xlat
in
int
sub
cli
and
mov
xchg
fiaddl
imul
inc
xchg
ficoms
mov
test
data16
fcoms
fstpl
enterw
aas
aam
sub
xlat
test
mov
add
xchg
es
pop
std
jle
xchg
jecxz
es
stos
push
movsb
lea
xchg
adc
test
inc
shlb
jmp
aam
inc
pusha
popf
lcall
negl
jp
mov
xlat
aam
cmp
push
mov
insb
adc
loope
adc
fnop
vmread
loope
xchg
das
mov
and
cmp
pop
stc
movsl
push
imul
xor
mov
xchg
push
aad
xchg
addl
push
push
daa
xchg
mov
mov
pop
push
outsl
fdivrl
dec
inc
gs
ret
xchg
sbb
enter
aas
add
jmp
in
in
jmp
push
xor
jl
xchg
es
dec
inc
lahf
cmpsb
popa
xor
pop
fs
rcrb
sbb
xchg
arpl
jb
xchg
pop
push
push
adc
xchg
cmp
xchg
xchg
lods
int3
mov
inc
mov
lds
mov
xor
mov
popf
pusha
cmp
mov
movsl
rol
divl
ret
xor
fisttpll
mov
mov
fyl2x
sub
xor
adc
jae
inc
js
push
jbe
dec
lods
add
xchg
push
jecxz
mov
pop
mov
cwtl
mov
in
imul
out
xor
adc
hlt
shlb
mov
and
adc
outsl
xor
cmpsb
jbe
sub
push
rcl
cmpsb
sbb
cmpsb
and
rolb
out
adc
or
inc
stos
not
je
sbb
add
ficoms
pop
arpl
mov
sub
push
int3
pushf
cmpsl
stc
push
ja
scas
in
sub
lds
adc
ret
sub
push
cmp
jo
lcall
aas
or
jecxz
dec
sub
aam
mov
mov
lret
or
bound
pop
lcall
sbb
movsl
loope
add
inc
pop
pop
push
sbb
push
fadd
cmp
movsl
mov
sbb
leave
jmp
insb
push
fisubrl
or
lahf
sub
add
shlb
lret
repnz
dec
movsl
sarb
rcll
adc
cwtl
ljmp
stos
icebp
rorb
lds
mov
cli
shll
push
mov
cltd
pop
popa
cs
shlb
sub
shlb
or
push
cld
add
jl
daa
out
pop
mov
cmpsb
imul
push
sub
test
fdiv
lahf
push
das
pop
xor
lock
sbb
jp
dec
cs
inc
or
push
stos
sbb
push
push
icebp
push
jmp
mov
stos
inc
push
pop
adc
xor
inc
push
js
sub
ret
inc
dec
inc
add
xchg
push
or
cmp
add
test
dec
pusha
movl
inc
adc
sub
stos
mov
leave
subl
data16
mov
pop
imul
andl
subb
mov
jp
add
mov
pop
sahf
lcallw
cmp
sub
ret
add
add
fsub
sub
and
das
dec
mov
jle
fists
mov
cmp
push
loop
fstps
dec
insl
mov
or
popa
mov
je
sub
fidivrl
cltd
inc
jecxz
repz
sti
push
and
aaa
lods
lods
mov
mov
sub
adc
adc
xchg
adc
mov
jns
in
add
cmp
cli
jnp
mov
or
mov
add
and
sub
enter
adc
test
jg
push
jae
gs
dec
cli
getsec
daa
inc
mov
push
pop
jb
sbb
xor
push
jne
shlb
in
imul
jns
inc
or
or
lods
sub
mov
push
dec
inc
and
pop
dec
outsb
push
fbld
adc
scas
cmc
std
or
xchg
push
movsl
pop
mov
adc
push
xor
push
jno
daa
xor
pushf
hlt
subb
repz
les
dec
pop
sbbb
jl
movsl
shl
jb
rorl
call
xchg
sbbl
push
jl
bswap
idivb
inc
repz
fisttpl
sti
jo
es
movsl
rcl
ret
hlt
push
incb
or
jle
movsl
pushf
test
outsl
call
mov
push
test
pop
insb
lcall
xchg
xchg
pop
adc
jp
outsb
xchg
pop
in
lcall
gs
xchg
jb
or
ja
lock
test
dec
mov
andl
mov
mov
push
insl
xchg
loopne
mov
out
sbb
xchg
add
daa
fdivrl
add
adc
push
sbb
xor
mov
jne
sub
aad
popa
test
adc
dec
push
stos
cs
fwait
sarl
push
xchg
in
adc
or
pop
sti
sbb
ret
cld
test
mov
mov
and
pop
adc
pop
xchg
aas
and
xor
mov
push
daa
jl
jge
jmp
fucom
and
sahf
mov
cmc
or
sub
lcall
addr16
inc
mov
out
lock
pop
loopne
stos
xchg
dec
sbb
pop
jnp
and
lods
pop
cmpb
cmp
adc
mov
loopne
ja
in
push
icebp
sbb
ljmp
jmp
sub
icebp
cld
mov
inc
xchg
stc
ficoml
xchg
and
lahf
pop
addr16
mov
mov
in
movsb
arpl
xor
jb
mov
xor
cli
and
or
rorl
lods
lret
imul
mov
dec
sbb
jbe
out
pop
int
push
adc
ficoml
cltd
ret
bound
imul
mov
andl
mov
push
xlat
dec
cli
insl
imul
cmp
and
sti
mov
bound
cs
fildl
js
mov
scas
inc
addb
pop
xchg
dec
daa
nop
stos
and
sbb
sbb
std
outsb
mov
mov
cmpsb
lret
mov
jg
cmp
in
ret
cmp
xchg
lods
sub
hlt
push
ljmp
stc
les
mov
dec
js
inc
int3
sbb
iret
or
mov
dec
lods
mov
cltd
cltd
sti
push
insl
mov
or
xchg
jg
or
pop
mov
or
loop
lret
shll
push
push
dec
aas
out
add
aas
mov
or
scas
jle
test
mov
push
xchg
into
jp
lret
mov
repnz
push
icebp
in
daa
icebp
push
inc
adc
push
frstor
sbb
pusha
addr16
sub
adc
add
mov
int3
push
in
sbb
jns
subl
stos
inc
xchg
cmp
call
shlb
shlb
daa
dec
dec
mov
and
fucomp
sbb
xchg
gs
mov
mov
lcall
in
repnz
adc
pop
insb
xorl
std
pop
cmpsb
jnp
fwait
pop
cmp
popa
call
cmp
outsl
popf
and
adc
pop
icebp
sbb
arpl
das
adc
cmp
clc
movsl
scas
lds
fbld
loopne
sbb
sub
andb
mov
das
addb
mov
jbe
sbb
cmpsb
jl
cmpsb
arpl
mov
hlt
rol
leave
lcall
xchg
push
or
imul
jmp
mov
test
leave
lcall
lret
shlb
jge
ja
imul
add
decb
xchg
cld
sti
lods
adc
outsb
or
outsl
int3
mov
push
cmp
push
mov
cld
lods
pop
sub
les
jp
shrb
jp
pop
es
lea
xchg
fstl
mov
sarb
loope
push
pop
jnp
sbb
push
lea
pop
mov
lock
push
jge
icebp
mov
movsb
inc
inc
loopne
push
push
jg
fisubrl
js
mov
xor
add
lahf
adc
jne
mov
xchg
mov
mov
dec
cmc
inc
ret
or
rorb
insb
cmpsl
ret
add
mov
fsubrl
xchg
stos
or
icebp
mov
jmp
int
adc
rcll
pop
test
cs
xlat
jns
mov
mov
mov
mov
inc
push
mov
adc
popa
mov
jp
inc
repz
jmp
xchg
call
mov
pop
inc
ljmp
mov
in
cld
adc
add
pushf
mov
fmul
push
in
inc
fbld
ret
add
cmpsl
popa
cwtl
jge
sbbl
mov
leave
adc
mov
pop
lods
mov
mov
and
jnp
mov
adc
jl
xor
mov
dec
pop
sbb
sub
sbb
ja
fwait
negb
push
data16
jmp
sub
aaa
jg
inc
cmp
inc
lods
cmc
in
outsb
sarl
in
cwtl
iret
push
push
dec
xchg
scas
ret
pop
cld
push
add
stc
xchg
fisubs
pop
aaa
adc
pop
imulb
pop
in
push
or
inc
testb
add
cwtl
inc
sub
repz
push
fimuls
int
add
sub
movhps
jp
loop
stc
jbe
jl
testb
std
jmp
or
cmpsl
cmpsl
fistl
pop
scas
repnz
loop
into
mov
mov
push
or
push
mov
fisttpl
xor
inc
lahf
adc
push
test
jae
jmp
out
pop
jbe
mov
cmp
adc
pop
xor
shrl
push
adc
inc
dec
aad
scas
out
leave
test
add
std
cmp
jg
gs
sub
jo
les
xchg
mov
hlt
data16
adc
add
sub
sbb
popa
fs
inc
stc
sub
pop
jo
push
inc
xlat
fwait
push
insl
mov
outsl
dec
imul
stc
fidivl
nop
sub
fs
pop
sbb
mov
daa
in
popf
xor
movsl
jns
xchg
test
push
outsl
or
push
call
sbb
jmp
adc
cmp
push
xchg
pop
push
bound
dec
and
and
orb
imul
lds
lds
test
add
or
and
mov
dec
in
cli
imul
std
ret
cs
inc
sbb
jnp
in
popa
add
push
daa
xor
sahf
scas
ss
sub
cmp
mov
sbb
in
xchg
inc
aas
or
insb
loope
inc
ja
pop
loope
mov
mov
lods
ljmp
icebp
cli
fsubrl
fisttpll
addr16
adc
arpl
clc
jmp
xlat
sub
sub
ret
pop
sub
push
in
lods
cli
add
mov
popf
repz
idivb
dec
movl
dec
jp
mov
test
push
pop
sub
fs
or
mov
xchg
mov
jbe
imul
push
xchg
cwtl
lods
lret
inc
es
inc
cmp
sbb
push
sarl
jecxz
rcr
loopne
mov
outsl
stos
shl
push
jmp
push
sub
cmp
mov
xor
inc
in
in
push
jno
and
cmp
shlb
ret
mov
dec
or
test
inc
fcmovb
mov
xchg
sbb
inc
pushf
jge
lds
mov
into
aas
and
mov
xor
addr16
and
jno
mov
pop
fldenv
in
mov
and
std
mov
aaa
adc
testb
dec
mov
ss
sbbl
xchg
adc
mov
and
fwait
test
push
lahf
inc
out
or
mov
movsl
push
sub
jnp
mov
pop
pop
dec
mov
jns
push
mov
je
mov
push
xchg
inc
stos
popa
insl
xorl
mov
xor
xor
ljmp
out
mov
xor
jo
fstl
daa
xor
lret
ffreep
ja
popa
es
idivb
pop
lcall
fsubs
sub
cmp
lods
insl
jae
data16
into
inc
add
or
ret
mov
push
inc
imul
andb
add
mov
dec
lret
mov
es
clc
or
int3
dec
std
mov
int
xor
in
push
fs
lods
xchg
inc
scas
push
fcom
emms
leave
mov
outsl
icebp
lods
cmpl
adc
add
pop
pop
enter
inc
push
das
xchg
int3
mov
cli
insl
pushf
add
subl
push
jbe
add
dec
or
cld
adc
mov
xor
cltd
testl
mov
imul
add
das
sub
inc
sbb
and
out
pop
sbb
movsl
push
xchg
dec
push
insl
xor
cltd
outsb
ja
nop
or
daa
jle
sbb
inc
fcmovu
and
fs
jmp
pop
out
and
rclb
inc
sti
icebp
mov
adc
xchg
aas
sbb
cli
je
xchg
ss
push
mov
adcb
enter
add
test
out
aam
dec
add
popa
pushf
and
scas
and
push
pop
sub
ljmp
sbb
adc
fdivs
sub
sbb
inc
xchg
mov
and
mov
call
leave
sahf
mov
loope
mov
lret
fcmovnb
pop
sbb
aas
testl
cmp
sbb
das
inc
roll
pop
adc
dec
mov
and
pop
fs
lds
jmp
adc
cmp
mov
outsb
jge
pop
lock
jle
mov
mov
movsb
repnz
cli
clc
shlb
sub
xlat
jno
sbb
fs
out
sub
nop
lahf
adc
aam
les
out
cmp
jno
sub
inc
xor
aad
test
pop
xor
lcall
mov
dec
repnz
and
pop
out
pop
xchg
mov
das
sub
mov
mov
inc
push
sbb
je
repz
shrl
mov
popf
sbb
mov
ljmpw
int
and
mov
mov
mov
aas
fcmovne
scas
and
pushf
nop
jb
mov
dec
mov
jbe
sub
ss
add
aaa
ds
dec
sbbl
sub
and
cmp
hlt
dec
add
fidivs
sbb
repnz
stos
call
cwtl
ret
inc
lock
mov
cmp
sub
push
push
inc
aam
loop
xchg
in
repnz
aam
pop
cltd
mov
hlt
push
aam
mov
sbbb
out
mov
dec
iret
stos
testb
fists
fisubl
fs
lock
lret
sbb
popa
call
rcll
bound
ss
std
fdivrp
xchg
fdiv
cwtl
cmp
adc
mov
xor
lcall
sbbl
dec
nop
repz
test
test
mov
out
and
sbb
add
inc
fildl
add
sbb
mov
aam
sbb
adc
aad
mov
cltd
push
daa
test
pop
pushf
subl
mov
push
decl
mov
loopne
insl
loopne
orl
or
icebp
fadd
jae
int
dec
stos
pop
mov
lahf
mov
rclb
stos
mov
push
enter
add
aaa
outsb
pop
mov
scas
adc
mov
mulb
push
xor
imul
inc
xlat
fisubs
mov
or
mov
sub
lret
inc
mov
sub
lcall
inc
push
lret
lods
add
inc
jle
repz
cmp
dec
clc
mov
int3
pop
lcall
into
out
xor
and
aad
or
negl
mov
lahf
adc
xchg
cmp
movsb
cmp
jae
jo
insb
testb
and
jg
test
dec
in
or
and
dec
add
loope
hlt
in
fs
push
enter
pushf
shrb
repz
add
pop
and
imul
xchg
loope
lret
xor
lods
mov
cs
loope
ret
xchg
sub
repz
adc
es
stos
ficompl
xlat
call
into
loop
into
sbb
fs
or
rorb
insl
xchg
les
adc
sub
push
scas
loop
mov
and
ss
push
cmpb
lds
sbb
aas
add
lahf
jb
and
mov
inc
cwtl
or
xor
inc
mov
mov
add
push
and
jg
push
data16
mov
ds
clc
pop
mov
jge
jb
arpl
xor
loopne
xchg
shr
mov
rclb
add
ja
int3
sbb
aaa
gs
pop
xchg
cwtl
sbb
movsb
cmp
outsb
outsl
dec
jbe
ds
mov
and
aas
sbb
sbb
lret
test
ficoms
xor
fcoms
adc
in
fadds
push
cs
or
or
mov
cli
dec
push
in
cmp
dec
addr16
insb
push
xchg
int
xchg
sbb
mov
push
or
pushf
push
hlt
scas
std
and
lds
pop
pop
test
or
ficompl
fstps
cmp
or
bound
mov
jp
push
lock
jecxz
xchg
insb
xchg
push
mov
add
add
outsb
xchg
adc
adcb
test
pop
jbe
or
mov
and
pshufw
xchg
jno
pushaw
dec
sti
mov
inc
inc
loopne
mov
loop
push
or
fsts
fsub
cmpsl
jp
orb
push
jecxz
inc
outsl
or
test
inc
xchg
cmp
loop
xchg
testl
call
jl
rclb
cli
insb
jecxz
add
repz
inc
and
stos
inc
jb
leave
jmp
cmp
incb
or
add
inc
incb
out
or
xchg
sahf
adc
sub
push
fildl
cli
mov
dec
iret
mov
mov
jl
shl
int
mov
jecxz
rclb
dec
or
arpl
int
sbb
lea
jno
push
or
push
aam
mov
adc
subl
adc
lods
xchg
cld
testl
xorl
inc
and
xchg
insb
cltd
mov
push
clc
aad
inc
mov
mov
jae
lret
jae
cmc
push
aam
xchg
popl
xor
xor
rcr
rolb
testb
loopne
adc
fwait
test
xor
jae
popf
or
sub
and
sub
sti
in
cli
mov
add
and
negb
ljmp
sub
or
scas
inc
testl
sub
push
cltd
adc
repz
fs
loope
push
movsb
xor
test
lret
fsub
outsb
pushf
imul
scas
jle
push
ficoml
lds
jg
cmp
mov
ret
roll
adc
and
jno
out
xchg
cwtl
pop
cwtl
enter
addr16
sub
enter
xor
sti
jns
in
popa
sub
mov
nop
cmp
inc
into
add
cmp
cltd
inc
mov
inc
lock
rorb
mov
ds
dec
mov
sub
sub
daa
lea
mov
xchg
gs
sti
xchg
imul
sbb
gs
xchg
pop
std
add
sub
pusha
mov
ja
ds
out
adc
push
cmp
xor
loope
icebp
and
mov
sub
sub
mov
mov
jne
sbb
mov
jb
je
pusha
inc
pusha
ffree
cltd
lret
test
imul
sahf
or
adc
lock
mov
xor
mov
xchg
adc
jno
xchg
clc
das
jns
sub
ss
ficomps
pop
xor
testb
lret
mov
add
or
sub
jno
idivb
int
push
push
mov
mov
ss
aad
fcoml
ja
hlt
xor
jae
push
loop
cmpsl
pusha
xchg
cli
inc
sub
push
add
mov
faddp
xchg
or
int3
mov
fidivrs
cmp
sbb
or
js
jl
jge
negb
cltd
out
in
jmp
add
mov
jbe
or
cli
or
adc
pop
aas
scas
cmp
add
insb
sbb
jge
inc
into
inc
outsb
pop
insb
in
sbb
xchg
pop
mov
sub
jmp
mov
pop
rolb
push
push
cwtl
jns
push
xor
push
sub
subb
aaa
out
xor
lods
inc
leave
jnp
shrb
clc
test
enter
push
loopne
add
or
mov
pop
bound
pop
in
rcll
sub
cwtl
in
lock
and
jle
rolb
jnp
and
stc
inc
lock
xchg
cltd
add
ret
push
out
jp
mov
mov
jg
pop
inc
ret
sub
leave
push
pop
jo
ret
mov
jns
fmul
addl
imul
scas
adc
add
das
xlat
pop
js
imul
dec
and
or
cmp
cld
pop
adc
in
lcall
mov
fsub
ss
aaa
in
out
jb
out
and
shrb
jmp
fistpl
out
imul
fisttpl
mov
in
je
cwtl
int3
xchg
hlt
xchg
sbb
jo
mov
int3
lock
sub
subl
mov
mov
mov
mov
js
jae
pop
mov
mov
add
adc
push
xchg
in
test
xchg
pop
sbb
mov
pushf
mov
gs
outsb
and
add
jge
daa
sarb
cmp
pop
xor
dec
mov
cmp
sbbl
pop
jnp
test
pop
subb
cmc
cmp
pop
ljmp
push
jecxz
and
adc
ds
dec
je
mov
xor
xorl
xor
and
inc
into
inc
adc
repz
lea
sti
adcb
mov
imul
sbb
adc
push
fsts
rol
loop
push
loopne
sub
xchg
jbe
mov
stc
mov
sbb
push
mov
push
sbb
push
hlt
clc
dec
rol
gs
fcmovu
sahf
imul
sub
in
out
jae
inc
jp
cmpsl
sub
test
or
push
mov
cld
ret
cltd
cs
pop
stos
push
pop
mov
movsb
std
and
jns
idivl
ljmp
adc
std
aam
sti
in
out
xchg
inc
push
xchg
jne
jnp
sub
xor
or
mov
xor
adc
out
pop
ds
pop
dec
negb
inc
data16
sbbb
or
jge
insb
cmpsb
mov
shll
mov
insb
xchg
dec
lds
je
sbb
sbb
stos
sub
push
mov
stos
xchg
sub
in
pop
sub
xor
outsb
repnz
leave
sarl
add
xchg
adc
xchg
xor
js,pt
push
rcll
fdivrs
inc
mov
ja
lods
push
lret
sbb
jl
push
sbb
pop
std
sub
adc
adc
cli
sub
mov
or
repnz
ret
das
mov
push
test
pop
sub
dec
outsb
add
out
gs
push
push
xchg
jle
adc
jge
and
stc
jne
mov
je
push
cmp
scas
jecxz
push
or
cmpsb
mov
mov
adc
nop
inc
cmp
and
add
dec
ss
jne
jae
scas
andl
adc
nop
jl
inc
push
inc
mov
push
scas
jbe
clc
adc
shll
mov
or
lret
in
hlt
xor
mov
cltd
add
cmc
adc
les
xchg
lcall
jmp
dec
inc
repz
out
notb
inc
xchg
out
cli
pop
cmpsb
sbb
mov
sbb
dec
pop
mov
mov
dec
and
lea
mov
mov
mov
test
pop
or
push
das
inc
mov
adc
xor
xchg
push
dec
adc
jbe
xchg
cld
out
lods
shl
sub
or
popa
inc
sub
mov
adc
cmp
xchg
push
sub
jge
or
aas
cs
mov
and
repnz
rolb
enter
cmpsb
fdivs
sbb
les
sbb
mov
shr
xchg
iret
xor
test
push
or
icebp
dec
or
inc
dec
mov
movsb
stc
in
int
fwait
jne
pop
sub
pushf
mov
int
cmp
pusha
in
lods
jge
cmc
push
repnz
inc
jnp
pop
inc
stc
jb
inc
push
push
mov
inc
bound
mov
leave
jb
and
scas
insl
jmp
xchg
ja
cvtdq2ps
jle
cld
mov
mov
sub
mov
int3
pop
lret
xchg
pushf
stos
inc
and
in
es
insb
shlb
out
or
pusha
cs
adc
xor
loopne
xchg
adc
push
test
push
or
jo
int3
and
xchg
jbe
or
mov
enter
das
mov
jnp
inc
fwait
xor
lcall
aad
in
and
push
imul
arpl
test
ja
aaa
inc
mov
in
jno
ret
sub
out
sbb
fisubs
mov
aad
scas
mov
adc
push
push
jl,pn
sbb
mov
sbb
xlat
mov
mov
sbb
lfs
jp
xor
das
inc
fnstcw
pop
pop
loop
loope
mov
cmp
cmc
jge
jne
stos
lock
sub
sub
mov
pop
cltd
clc
or
fs
rcrb
ret
addr16
push
cmpb
or
pop
dec
adc
xchg
sahf
pusha
pop
imul
or
add
inc
mov
sub
jno
xchg
aad
adc
dec
push
enter
jb
aam
cmovl
xor
shll
jg
adc
dec
cmc
scas
pop
int
jb
and
mov
movsb
pop
jecxz
ljmp
pop
sahf
xchg
sub
and
aam
jge
ss
dec
movsb
or
es
fs
add
inc
or
sub
pop
and
xchg
out
jl
inc
imul
push
popa
movb
ljmp
loop
stos
push
lods
adc
call
or
cmc
mov
or
movsb
dec
mov
inc
jno
xchg
lds
movsl
adcb
lods
insl
add
clc
cltd
adc
shll
imul
mov
fidivrs
stc
xchg
cmp
add
cwtl
test
cmp
popf
jg
cmp
stos
mov
inc
adc
pop
adc
iret
inc
add
das
jne
dec
outsl
sub
inc
push
das
jnp
mov
dec
je
mov
jg
dec
dec
adc
xchg
or
test
pop
idivl
xlat
add
sbb
int
mov
jp
lods
iret
pop
pop
xchg
iret
sbb
fsubs
pusha
pop
xor
shrl
mov
movb
nop
and
dec
js
mov
or
pop
push
push
inc
mov
and
test
and
mov
xchg
inc
fadd
jl
lret
movsb
mov
pop
fwait
or
pusha
out
sti
add
bound
out
shr
outsl
mov
lock
dec
sub
jmp
roll
jb
test
fsubrs
mov
mov
add
aaa
jns
pop
inc
pop
lock
add
pushl
push
jbe
cmp
adc
stos
sbb
sub
pop
sbbb
pop
pop
divl
les
cld
out
adc
lock
sti
add
push
pop
leave
fwait
cmpsl
cmpsl
stc
fisttpl
mov
xchg
mov
xchg
pop
jne
push
xor
repnz
push
push
incb
mov
sbb
push
call
xor
jecxz
inc
push
aas
pusha
pop
sbb
adc
int
lret
mov
xchg
dec
test
pop
or
aad
fnop
xlat
adc
pusha
jo
lods
jo
push
aad
icebp
mov
jo
shl
add
fisubs
in
xor
cmp
and
sub
xchg
pop
sbb
aas
mov
push
addb
xchg
dec
inc
lahf
adc
jnp
fwait
inc
std
or
pop
adc
jno
addr16
icebp
jecxz
xchg
mov
ja
outsb
jno
lods
cmc
cmp
mov
scas
aas
rcll
mov
jns
dec
add
rolb
and
push
push
mov
addl
xor
push
lcall
cs
xor
aas
pop
adc
ljmp
fbstp
addr16
inc
add
push
or
movsl
sbb
add
add
cs
adc
or
das
mov
cmpsb
push
mov
popa
and
stc
jp
gs
lods
les
test
sub
adc
lea
fmuls
movsl
sub
inc
das
xor
jecxz
or
call
dec
inc
cmp
push
xchg
rcrl
adc
pop
jge
pop
xchg
in
out
cmp
lahf
repz
jo
xor
sbb
xor
lods
jl
shlb
dec
pop
jp
mov
stos
stc
adc
adc
int
gs
fcomip
mov
sbb
fs
jmp
call
jl
lods
repz
in
test
scas
sbb
mov
mov
xchg
adc
jb
inc
aam
lds
adc
and
outsl
out
incb
je
or
xor
jo
jmp
sub
lret
inc
adc
xchg
ljmp
pop
lcall
mov
add
or
pop
test
or
jmp
icebp
jmp
fcmovne
imul
fistps
enter
into
in
pop
xlat
xor
jb
lret
sbb
aas
or
incb
in
mov
movsb
jge
add
mov
loop
incl
dec
push
sub
sti
dec
mov
dec
out
jno
repz
into
ret
pop
jmp
mov
stos
jmp
jo
cmp
pop
movsb
insl
and
outsl
rorl
push
push
pop
dec
arpl
shr
pop
fdivr
and
inc
fld
push
push
jns
in
ljmp
adc
sbb
and
and
sbb
sub
xor
inc
mov
mov
shrb
nop
sbb
mov
mov
lods
add
push
cli
pop
and
idivl
jbe
mov
rcrb
inc
pushf
movsb
idivb
push
push
pop
lret
sub
jl
adc
aam
push
sbb
adc
test
adc
int
sub
aad
fwait
pop
jp
cld
inc
test
into
mov
jp
xchg
jp
pushf
jg
sbb
lahf
xchg
push
int3
and
lds
xchg
add
jle
sbb
nop
pushl
mov
xor
shrl
into
push
pushl
out
je
jmp
jmp
mov
or
int3
js
cs
nop
outsb
into
sbb
push
stc
aad
leave
jg
insl
test
cmp
shrl
roll
ja
call
lahf
lea
pop
add
mov
add
push
xchg
in
dec
ja
mov
jecxz
outsb
adc
lock
xchg
aad
mov
sahf
in
enter
mov
aad
stc
ret
cmp
insl
loop
dec
scas
test
dec
popa
mov
popa
out
cmpsb
xchg
int
xchg
inc
lahf
inc
imul
mov
xchg
in
outsb
xor
pop
jns
jne
test
lret
in
sbb
mov
int3
andl
shrb
aaa
lds
insb
mov
mov
das
iret
and
mov
aas
pop
or
scas
or
aas
inc
or
hlt
and
pop
push
test
or
arpl
xlat
loopne
jb
aad
mov
lcall
push
in
lcall
mov
mov
inc
in
iret
push
js
dec
dec
mov
inc
arpl
jp
xchg
cmp
jge
ljmp
mov
push
out
imul
lods
mov
or
sbb
push
cmp
enter
iret
lcall
xchg
std
shrb
pusha
ss
mov
pop
jle
dec
sbb
lcall
dec
hlt
mov
sub
add
xchg
inc
or
cmp
shl
mov
or
xor
mov
mov
jo
push
pushl
sub
gs
mov
pop
jb
jg
clc
movsb
jge
add
lds
mov
cmp
add
pop
arpl
das
xchg
lret
push
dec
push
adc
lods
or
and
mov
imul
aam
xor
xchg
rolb
pusha
int3
cltd
insb
jmp
pop
fwait
or
jl
cmp
mov
lds
xor
aad
jge
arpl
xchg
lret
mov
fimull
jmp
push
sbb
repz
push
out
mull
push
aaa
xchg
pop
fsub
rcrl
push
gs
imul
sbb
pop
mov
xchg
sub
mov
sub
mov
and
daa
pop
int3
fidivs
gs
xor
out
push
xorl
xor
leave
mov
stc
xor
dec
mov
inc
fdiv
and
mov
xchg
icebp
arpl
inc
push
fsincos
scas
sbb
test
pop
pop
mov
jmp
jl
stc
dec
imul
fmul
incb
mov
lods
incb
dec
mov
aaa
imul
divb
in
shll
mov
data16
ljmp
sub
lret
out
adc
dec
add
mov
jae
and
dec
cmpl
cmp
mov
fldcw
dec
fidivl
or
data16
xor
dec
loopne
call
lock
pop
subb
int
lret
sbb
push
rolb
es
jb
xchg
imul
xor
daa
into
pop
daa
icebp
outsl
pop
movsb
aas
sub
push
iret
push
xor
jp
dec
ds
test
push
jo
ss
sbb
loope
inc
mov
push
clc
mov
push
pop
cmpsb
insb
dec
jmp
cwtl
out
or
ret
xor
mov
aam
xor
cmp
push
nop
into
ds
inc
mov
and
dec
test
int
lret
pop
es
mov
aam
mov
xchg
mov
shrl
jno
push
scas
outsl
mov
stc
mov
insb
imul
dec
call
jae
ds
add
fnsave
mov
push
push
adc
cli
int3
mov
pop
cmp
xor
das
lret
out
repz
lret
rep
scas
cmc
aam
lods
and
pop
pop
int3
cmp
xchg
jae
cwtl
sub
fldl
repnz
adc
fldcw
jp
bndstx
mov
repnz
sbb
cmpb
fnstenv
jp
orl
adc
sbbl
std
outsl
mov
dec
push
decl
loopne
pop
jp
outsl
or
lods
cmc
pop
dec
sub
sub
in
adc
jl
test
jle
mov
xor
push
getsec
rorb
or
adc
pusha
mov
dec
lods
add
jmp
js
mov
inc
test
std
out
inc
sub
in
pop
jo
out
int
test
fldenv
aam
data16
mov
xchg
jmp
cmp
das
lahf
leave
xchg
adc
pop
mov
push
push
cld
pop
dec
aas
jecxz
pushf
cld
xchg
mov
xchg
aaa
repz
aad
addb
and
dec
filds
lret
mov
add
and
lcall
scas
jbe
adc
ljmp
rcll
inc
lock
push
and
out
mov
xor
sbb
sub
add
mov
jg
lock
jmp
jns
pop
dec
cmpsl
sub
push
xchg
cmp
test
adc
aad
lods
outsb
filds
lods
sti
push
mov
test
orl
push
fs
pop
insl
push
mov
aad
jb
xchg
adc
dec
std
insl
mov
daa
fcmovnu
mov
insl
mov
jmp
in
add
adc
mov
mov
cltd
enter
xchg
add
inc
cmp
xorb
adc
iret
lret
sbb
sub
sbb
mov
xchg
imul
enter
inc
sub
std
xchg
pop
gs
dec
enter
sbb
test
pop
leave
cmp
jl
rclb
mov
shlb
in
mov
rclb
sbb
fisubrl
aas
std
mov
mov
fs
mov
cmp
inc
insl
aad
ds
mov
dec
das
bound
sub
adcl
mov
jo
movsl
push
xchg
dec
xor
and
xchg
fnstenv
ret
lret
outsb
pusha
lock
movsl
inc
jo
push
fnstsw
push
fisubrs
mov
pushf
pop
loope
in
mov
repnz
mov
hlt
mov
inc
subb
lea
rcl
xchg
fsubl
ror
pop
out
xchg
aas
sub
loop
jecxz
pop
ret
in
push
or
lcall
sbb
add
jno
in
fnstenv
cmpsl
inc
mov
jae
lds
iret
lods
sbb
sbb
jns
sbb
loopne
cmp
lods
sbb
out
and
mov
push
pop
inc
adc
fbld
lar
push
or
out
push
pop
mov
or
sub
push
push
ret
push
fnstcw
dec
cmp
cld
cmpl
loope
dec
and
out
pop
pusha
clc
push
pop
rorb
sub
dec
outsb
mov
jbe
dec
fcompp
dec
mov
and
mov
test
mov
cmp
dec
xchg
push
test
lods
add
push
imul
ljmp
lret
inc
imul
mov
movsl
mov
inc
shll
addl
int3
gs
mov
movb
push
add
cld
adc
repz
add
fistps
leave
mov
sub
movsl
call
xchg
out
in
pop
ja
je
inc
ret
enter
bound
xchg
push
xor
test
xchg
push
pop
jbe
add
stos
jmp
xor
in
jl
sbb
and
enter
lods
aad
or
mov
orl
pop
sbb
add
mov
lret
push
ret
int3
test
pop
sahf
pop
inc
inc
in
or
adc
or
adc
dec
mov
and
or
and
pop
xor
xchg
xchg
jns
fiadds
scas
fcom
lcall
lcall
pop
and
ljmp
adc
xchg
in
pusha
push
mov
fisubs
pop
push
ss
arpl
icebp
or
imul
dec
jns
or
mov
cld
xorl
aam
dec
loop
adc
xchg
inc
sbb
push
stos
and
popa
int
cmp
mov
adc
movsb
dec
lcall
push
data16
xlat
or
ljmp
mov
mov
mov
or
arpl
icebp
cmp
push
sbb
and
jnp
dec
inc
lock
push
mov
js
cltd
fs
xor
mov
smsw
add
adc
adc
cmp
xlat
xchg
sub
mov
cld
lods
or
push
cmp
inc
sbb
xor
xor
mov
sub
loope
enter
xor
popf
cs
cmp
mov
inc
and
daa
popa
jl
xorb
or
hlt
pop
sbb
adc
in
hlt
mov
pushf
sarb
insb
adc
xchg
mov
or
js
and
or
out
jne
and
lods
xchg
fmul
inc
addr16
movsb
mov
mov
outsb
mov
pop
push
cli
icebp
cmp
rorb
data16
mov
test
xchg
lcall
fmul
add
cmpsb
rolb
adc
rcl
mov
sbb
cmp
orb
xrelease
sbb
rcr
pop
mov
jnp
ja
aaa
aaa
jmp
jb
mov
insl
mov
test
xchg
sub
psllw
mov
enter
test
xchg
stos
sbb
fwait
inc
aam
cmpsb
add
pop
out
and
leave
shlb
mov
mov
jge
pop
lret
pop
aad
fcoml
stos
loopne
sbb
loope
lds
jo
add
shrl
xchg
rcrl
shrb
imul
fcmovnb
ss
mov
rorl
inc
daa
cltd
and
bound
mov
not
dec
sub
scas
mov
dec
xchg
aam
ror
hlt
ljmp
stos
cmpsl
inc
mov
jmp
pop
dec
int
mov
leave
outsb
fstpl
push
pushf
inc
sbb
sub
mov
ficoml
popl
icebp
add
es
in
xor
insl
push
icebp
call
clc
sbbl
test
dec
push
shll
push
jnp
fdivrl
adc
jnp
add
test
out
xor
jne
stos
in
mov
add
xlat
mov
out
sbb
add
sub
xor
jecxz
jo
insb
inc
push
cmp
call
xchg
js
loopne
imul
lock
add
addr16
cmp
adc
scas
ficompl
adc
sbb
inc
add
lea
pop
movsb
loope
mov
lcall
add
loop
mov
pop
scas
rorw
push
xchg
xchg
xchg
lea
jl
inc
and
inc
lret
push
sahf
add
xchg
cmp
sti
bt
aaa
cltd
add
xchg
or
and
xchg
out
mov
sti
xchg
jno
dec
not
add
push
ljmp
stos
in
mov
add
testb
int
cli
rclb
iretw
pop
int
mov
test
xchg
sbb
pop
fldcw
test
mov
jp
movsl
adcl
pop
sub
mov
leave
mov
cmpsl
aam
sahf
andb
dec
leave
cmpb
hlt
dec
pushl
mov
push
jne
mov
iret
leave
shll
je
adc
cmpsl
xchg
and
adc
mov
out
stos
or
cmp
add
loopne
jle
mov
movsb
leave
dec
adc
int3
mov
mov
inc
in
out
or
sbb
aad
jns
cs
lock
and
icebp
in
mov
fnsave
jecxz
in
bound
adc
mov
push
fcmovnbe
std
or
and
push
pop
xchg
ret
mov
into
adc
mov
push
addr16
enter
pop
andl
js
jl
and
jg
lods
jg
lods
dec
mov
cli
dec
xor
call
pushf
ficoms
cmpsb
mov
pop
sbb
mov
test
and
xbegin
outsl
dec
dec
mov
mov
mov
add
int
mov
xchg
mov
push
add
dec
or
adc
push
clc
test
test
test
add
repnz
dec
mov
fstpl
adc
leave
inc
sub
das
push
jp
adc
jmp
outsb
nop
mov
loope
cmp
pop
addr16
lret
jmp
scas
xchg
imul
test
inc
mov
or
pop
push
jne
loope
imul
and
push
push
sub
shrb
mov
daa
stc
stos
inc
adc
pop
sbb
xor
jge
dec
arpl
cld
pop
adc
out
in
jnp
loope
repz
aad
dec
shll
jle
lods
xchg
out
rcrl
shlb
outsb
fcmovu
lret
ret
inc
inc
pop
cmp
xor
jo
dec
cmp
scas
mov
and
adc
mov
push
add
mov
int3
mov
cltd
jns
fidivrs
lds
mov
or
pop
ja
cli
gs
sbb
loopne
jp
cmc
inc
rolb
leave
popa
or
pop
cs
call
aad
sub
xchg
cld
mov
idivl
jmp
test
mov
movsl
mov
xchg
pop
or
cmp
gs
aad
jno
sub
popa
leave
add
lds
jle
pop
mov
out
jg
call
loope
pop
and
fisubrl
sbb
pusha
sbb
inc
sub
and
ret
inc
sti
jae
out
outsl
ja
xchg
xchg
mov
mov
cmpxchg
xorl
addb
fs
in
mov
cmp
mov
dec
sub
pushf
insl
xlat
jnp
xchg
bound
adc
in
add
test
aas
outsb
stos
pop
ret
xlat
fcmovnb
cli
sbb
push
jno
jg
sti
cmp
pop
nop
mov
dec
mov
push
aam
mov
push
pop
xchg
lods
pop
cmp
les
or
push
or
mov
notb
jecxz
xor
stos
scas
sub
in
mov
xchg
hlt
add
sbb
add
ds
pop
cmpl
push
inc
dec
and
jnp
push
stos
orl
movsb
sub
loopne
sub
popf
popa
icebp
inc
push
jg
sub
nop
mov
jge,pt
in
jns
pusha
hlt
imul
sti
arpl
lahf
fsubl
mov
sti
adc
mov
rcrb
mov
dec
aaa
fldcw
jle
test
inc
iret
mov
jg
sbb
sbb
fdivrl
sbb
xor
cli
in
mov
lcall
mov
inc
iret
jne
push
cld
ret
imul
inc
push
cmp
dec
pop
jnp
arpl
xchg
cmc
aaa
dec
inc
out
mov
lods
sti
lahf
xchg
sbb
cli
insb
iret
or
pop
insb
jno
jo
inc
cmpsb
or
loopne
ret
mov
loop
out
mov
kmovw
add
fcomp
cmp
inc
push
xor
lock
cmpsb
in
jb
scas
popa
mov
mov
xchg
aaa
push
xchg
fmuls
imul
cwtl
aaa
lods
inc
pusha
cmp
jne
sub
cmpsl
pop
pusha
cmp
addr16
jnp
push
inc
dec
adc
sbb
sbb
pop
repz
adc
js
pop
ror
adc
sbb
jns
out
aam
fstpt
sub
insb
nop
lea
cmp
pop
lods
adc
test
push
fbstp
leave
dec
jae
imul
subl
fcoms
xor
imul
add
ss
fstpt
nop
unpckhps
fs
insl
add
loope
sbb
push
into
push
jg
cwtl
cwtl
pop
mov
int3
dec
jp
out
jle
xchg
sub
lahf
inc
push
push
and
jno
inc
hlt
in
add
jp
dec
icebp
jge
loop
int
mov
sti
push
loop
push
enter
int
mov
icebp
int3
pushf
jb
int
adc
aad
addb
stos
lods
xchg
das
pop
cli
shrb
xlat
addr16
add
mov
push
pop
fwait
mov
gs
push
and
jg
mov
cltd
mov
xchg
sbb
cmpsl
nop
popa
dec
mov
inc
leave
rcrb
and
enter
orl
sub
cwtl
add
jnp
ficomps
dec
pop
fwait
or
xchg
shlb
mov
loopne
popa
popl
mov
dec
xchg
mov
mov
data16
adc
inc
andb
cld
jnp
rclb
out
cmp
xor
daa
iret
add
cmpl
xchg
cltd
push
xchg
sub
dec
sbbb
mov
dec
sub
cwtl
inc
aad
inc
jge
and
test
mov
cmpsb
mov
in
jg
and
mov
jmp
outsb
repz
int3
loope
xor
mov
add
std
push
test
mov
dec
xor
mov
daa
mov
scas
data16
adc
push
cli
mov
int3
lret
push
jg
popa
xchg
rcrl
ljmp
cmc
stc
dec
mov
rclb
inc
pop
aam
gs
fnstenv
push
pop
cmp
xor
xchg
and
scas
adc
js
leave
testl
cld
ss
jge
or
pushf
outsb
cmpxchg
in
sti
out
ja
movsb
arpl
add
xlat
mov
faddl
mull
hlt
sub
mov
push
loope
sub
jge
sub
scas
or
push
pop
mov
jmp
out
js
cwtl
sahf
pop
dec
cmpsl
mov
cmpl
xchg
xchg
mov
std
imul
hlt
pop
or
pop
push
jg
xor
xchg
std
out
mov
inc
xchg
sti
lods
into
mov
cmp
rcll
js
sub
sub
push
imul
sub
rorb
rep
jg
loopne
leave
mov
lods
lods
insb
pop
inc
jns
cmp
adc
cmp
inc
pop
ret
cvtpi2ps
aaa
out
jnp
movsl
aaa
fstpl
stos
mov
pop
jns,pt
fcomps
dec
mov
aaa
aas
push
lods
mov
in
pop
pop
xor
dec
cs
dec
cli
fwait
cmp
fwait
dec
rolb
xchg
pop
negb
jp
imul
mul
addr16
xlat
shlb
mov
jb
repz
lods
outsb
xchg
xlat
ja
adc
sbb
sarb
jp
push
leave
and
jae
jbe
std
filds
xchg
negb
jle
imulb
cmp
and
sbbb
vaddpd
sub
fmuls
sub
hlt
jno
cltd
push
push
pminsw
xchg
inc
xor
test
add
adc
push
sbb
dec
shlb
pop
jge
cmp
inc
jb
rorb
stos
cmp
pop
add
push
inc
adc
out
xchg
in
fadds
js
repz
mov
adc
mov
mov
lock
pop
mov
lock
insb
pop
scas
xchg
sahf
lods
or
scas
cwtl
or
or
out
sub
jae,pn
cmpsb
aaa
cs
push
int
push
pop
fstp
sub
mov
mov
stos
call
cltd
dec
inc
aas
fnstsw
adc
call
in
fnstenv
sti
scas
and
push
pop
mov
mov
cmpb
jnp
sbb
jne
out
jo
mov
test
push
mov
lret
ret
adc
stos
fcoms
adc
div
leave
test
inc
imul
dec
pop
aam
mov
cmp
sbb
or
jecxz
mov
inc
jmp
adc
hlt
popf
sub
pop
ljmp
dec
adc
mov
icebp
in
gs
mov
inc
lret
mov
es
jno
rcrb
xchg
push
sub
add
dec
xor
outsb
es
popa
lods
loop
xor
sub
aaa
push
mov
pop
mov
inc
inc
xchg
mov
mov
int
fs
loop
fs
lahf
mov
mov
or
add
out
hlt
inc
les
mov
cmpb
negb
jmp
cmp
test
adc
dec
addl
fldcw
dec
xor
push
xor
outsl
mov
mov
int
lds
mov
pop
in
ret
fdivp
scas
addr16
push
inc
fcompl
mov
lret
sbb
aad
mov
cmp
rcl
and
sbb
in
jb
jmp
es
xor
push
and
sahf
add
js
out
fs
and
repz
xor
cmc
cmp
push
and
push
mov
xor
fs
les
sbb
add
pop
mov
dec
or
sub
pop
iret
xor
je
pop
jecxz
mov
mov
pop
add
mov
int
cli
mov
bound
aas
mov
cmp
mov
les
daa
xor
sarb
push
cmp
movsb
inc
nop
pop
int3
inc
scas
xor
fcomp
xchg
dec
movsb
les
pop
subl
jmp
pop
jecxz
pushf
cmp
sarb
cmpsb
rcll
sbb
ljmp
mov
jbe
jl
arpl
jns
xor
xchg
mov
inc
jge
and
mov
and
testb
push
sbb
pop
fldcw
imul
push
add
mov
cmp
mov
lea
mov
push
jge
push
pop
inc
inc
sbb
outsb
shl
in
mov
mov
pop
mov
mov
mov
or
and
sub
js
test
lea
mov
push
ds
mov
push
ret
outsl
je
icebp
pop
inc
mov
test
adc
mov
gs
out
mov
add
fs
or
add
enter
push
or
jle
push
mov
xchg
inc
mov
push
out
ljmp
xchg
shll
push
out
mov
add
aam
pop
leave
pushf
outsl
mov
pop
cmpb
sbb
jg
or
sbb
out
pop
mov
rclb
sbb
clc
cwtl
pop
sbb
adc
nop
add
out
cwtl
or
pop
and
fidivl
sbb
sbb
into
push
sub
jle
mov
dec
jle
lods
mov
test
inc
dec
shl
push
xchg
call
fnstenv
xor
ret
mov
add
mov
jno
add
std
sbb
enter
int3
cli
and
cmp
cmp
jno
ret
in
jecxz
scas
xor
sbb
lret
fildl
and
pop
jbe
jno
adc
jecxz
mov
mov
mov
mov
cmp
iret
lock
or
xchg
adc
mov
testl
xor
pop
xchg
cmpsl
pushf
mov
repz
in
adc
and
add
mov
jae
lret
xchg
inc
repnz
test
sub
in
mov
loopne
pop
inc
repnz
dec
mov
lds
cld
sub
aaa
orl
or
cwtl
mov
mov
jb
inc
imul
pop
jge
adc
sbb
dec
mov
js
sarl
cmpsl
and
cmpsl
cmp
divl
push
jmp
mov
aam
jae
rcl
jo
bound
sbb
hlt
mov
adc
sbbb
sbb
hlt
cli
ret
pop
ret
pop
nop
andb
lods
mov
push
adc
je
xchg
mov
xlat
ja
rcrl
push
ficoms
in
cmp
je
int3
jmp
fiadds
sub
sti
popf
pop
pushf
push
decl
xchg
rcll
mov
stos
mulb
rclb
mov
icebp
or
nop
xchg
lods
cmpsl
push
insl
lods
ds
cmp
fisttpl
es
mov
sbb
cmp
adc
out
std
push
dec
sbb
hlt
pop
jg
cmp
aam
cmp
out
adc
andl
sub
enter
push
insl
popa
cmp
scas
loop
adc
push
aad
mov
mov
push
jno
xchg
roll
arpl
xor
bnd
push
popa
sbb
and
stc
pop
mov
xchg
hlt
mov
xchg
out
cld
mov
jl
cld
lea
rolb
xor
notb
rol
outsl
dec
es
mov
rcr
cmp
xor
test
inc
xchg
je
sub
clc
aaa
jle
lret
and
out
into
mov
dec
cwtl
stos
lods
dec
loop
das
or
aam
adc
cmpsb
xchg
mov
outsl
lea
pop
shlb
jns
shlb
push
xor
cmp
add
std
int
push
lcall
push
and
mov
fwait
and
push
in
inc
lret
lret
jb
dec
and
jo
rclb
jb
jmp
fists
out
mov
lahf
scas
sbb
jo
lock
cmpl
stc
push
sub
xor
ljmp
push
jp
fs
sbbb
or
cs
inc
pop
aam
vmread
cmp
sub
or
push
cs
mov
xchg
xchg
shlb
pop
or
stc
and
adc
xchg
dec
xor
jne
jne
mov
mov
mov
inc
out
cs
sbb
push
and
rcrb
shrb
call
adc
jae
dec
rol
cmp
out
subb
insl
test
in
loope
ror
cs
sub
sbb
mov
mov
mov
fldenv
mov
mov
das
clc
add
in
pop
inc
movsl
xchg
sub
adc
cmpsb
loop
shlb
jge
stos
mov
adc
shlb
mov
orb
xorl
xor
clc
push
mov
sbb
jb
fiadds
inc
in
test
push
outsl
push
xchg
push
sub
lahf
adc
sbb
jl
push
fstpl
fidivs
cmp
or
pusha
insb
xchg
mov
rclb
mov
mov
les
adc
test
jbe
cmp
inc
scas
mov
and
mov
xchg
jge
sarl
rcr
fwait
lds
out
push
imul
pop
cmp
jmp
sti
xchg
fldenv
inc
in
out
imul
imul
add
mov
aam
mov
int3
fldcw
je
xor
dec
lods
pop
xor
mov
ds
sbb
fisubrs
ljmp
scas
out
sub
xchg
insb
jo
das
inc
pop
pop
mov
int3
popa
jl
sub
jns
ret
outsl
je
cmp
lret
dec
mov
mov
xor
bound
scas
jecxz
fidivl
xor
sti
add
lret
push
fwait
call
ret
inc
lcall
insb
cmpsl
cmp
inc
push
pop
int3
jl
ds
rorl
insl
adc
adc
ljmp
sub
in
mulb
bound
mov
shrb
mov
sub
icebp
divb
add
or
xchg
dec
inc
push
mov
pop
mov
sbb
push
int3
and
inc
aas
sahf
sbb
push
xchg
fwait
xor
mov
push
cmp
jbe
ficomps
popf
cld
jge
gs
add
test
sub
inc
dec
xchg
aam
lods
loopne
sbb
cltd
adc
ja
cmp
jl
adc
xchg
fwait
inc
adcl
xchg
iret
sub
adc
leave
movsb
sub
cmpsb
xor
dec
out
cld
movb
daa
insl
aad
das
enter
push
ds
cmpsl
in
sbb
std
jae
and
test
pop
lods
idivb
sub
ljmp
or
jae
xor
loopne
cs
mov
in
dec
pop
sbb
js
xor
outsb
dec
bound
dec
mov
inc
xlat
bound
mov
popa
lds
xchg
shlb
mov
xchg
clc
jecxz
mov
add
mov
mov
andl
fbld
fcoml
inc
pusha
rcrb
jmp
pop
mov
into
les
in
ljmp
les
inc
and
adcl
in
ret
in
inc
xor
ss
push
rcrb
ljmp
in
stc
aaa
std
hlt
inc
mov
pop
stc
or
add
xchg
sti
xor
pop
mov
pop
sub
insl
js
add
rcrl
jb
pop
lcall
pop
sti
xchg
aas
jge
jl
mov
jp
shrb
adc
loope
test
mov
insl
mov
in
adc
and
ja
es
add
daa
cmp
mov
stos
cs
fidivrs
lahf
ss
xlat
jl
enter
mov
stc
mov
mov
repnz
loop
sbb
lret
sub
mov
inc
movsb
daa
mov
sub
cli
push
mov
lds
cmc
xor
repnz
pavgb
mov
repnz
mov
push
mov
sub
mov
iret
lret
xor
les
xor
insl
cmp
xchg
sub
into
das
jmp
aaa
in
sbb
ljmp
out
push
std
daa
pop
shrb
push
lret
fisubrs
xchg
stos
or
or
cs
adc
sub
sub
or
dec
es
push
fstpl
mov
and
mov
iret
sub
add
xor
mov
adc
pushf
pushf
outsb
pop
rcr
or
movsl
loope
rclb
adc
xchg
loopne
cmp
dec
es
push
flds
popf
pusha
fs
push
jmp
dec
test
cli
fisubrl
sub
testb
push
out
xor
push
inc
dec
mov
sub
add
adc
jo
das
mov
inc
push
iret
repnz
jle
stos
cmp
push
dec
ja
addl
mov
loope
lahf
jnp
and
add
inc
add
adc
pop
aaa
sbb
popa
mov
ficomps
or
mov
cmp
fmull
std
sbb
mov
sub
stc
pushf
sbb
pusha
push
ljmp
add
sbb
mov
pop
add
adcl
fdivl
adc
sti
sbb
test
popa
in
aam
adc
in
sbb
and
push
aaa
nop
push
fdivrl
pop
push
push
mov
push
lret
xchg
pop
loop
imul
inc
aaa
enter
lcall
repnz
push
xor
std
mov
xlat
inc
jb
jae
add
pop
ret
ret
pop
das
iret
out
test
loopne
daa
cmc
insb
push
test
and
imul
lcall
in
dec
pop
jo
sub
cmc
mov
inc
fsubs
lods
cmp
rcrb
jae
filds
xchg
mov
mov
in
pushf
sub
and
jbe
sub
les
xchg
in
divb
insl
lock
daa
mov
rcrb
fcoml
mov
pop
repnz
cmp
fwait
jecxz
mov
xor
mov
xchg
mov
das
jle
cmp
andb
mov
xchg
mov
fwait
xchg
int3
loopne
imul
test
stos
idivb
movsl
mov
jns
es
daa
rolb
pop
or
movsb
fnstenv
cmp
pop
imul
xchg
int3
jp
pusha
adc
imul
xchg
sahf
sub
jp
repz
mov
outsl
jge
cli
les
aad
inc
push
jns
gs
inc
out
mull
add
jno
pop
ja
pop
mov
cmp
ret
xchg
popa
cs
pusha
push
push
dec
rorl
cmpsb
ds
pop
xor
adc
lock
arpl
dec
inc
in
dec
lcall
ret
ja
testl
sahf
xor
jae
add
ja
ds
adc
popf
filds
push
pop
or
sub
lret
jbe
push
push
arpl
hlt
fsubrp
adc
movsb
mov
push
cltd
mov
movsl
popf
in
into
add
outsb
dec
in
cld
dec
add
rep
scas
inc
gs
mov
jb
adc
push
cmp
sub
fs
fsubr
pop
hlt
jl
cli
mov
loop
sbb
jae
or
in
aad
push
loop
imul
lods
xchg
ja
loope
jle
faddl
bound
enter
xchg
mov
and
pop
shll
jnp
mov
out
cltd
lahf
sub
test
ror
push
aaa
bound
cmp
add
mov
ss
mov
mov
mov
imul
gs
cmpsl
std
inc
mov
dec
subb
outsl
leave
insl
mov
lahf
mov
ds
push
jmp
mov
cwtl
adc
push
pop
adc
dec
repz
jne
pop
test
mov
jb
cmc
loopne
mov
jle
jnp
lock
inc
add
nop
add
pusha
xchg
add
inc
push
popf
jmp
push
or
push
pop
pop
fcom
popa
push
js
adcb
imul
pop
lret
mov
mov
jnp
cmpsl
scas
pop
ret
scas
sub
cmpsb
sub
enter
pushf
xchg
cmp
pop
dec
bound
inc
stc
stos
xor
sub
aaa
push
lods
lahf
xchg
push
push
cs
xchg
mov
hlt
and
pop
cld
lret
pop
cmp
mov
xor
es
imul
push
inc
pop
jno
inc
cld
jbe
and
add
mov
in
mov
cmpsb
hlt
lcall
mov
dec
aad
popf
fs
stos
and
lret
outsb
dec
push
push
pop
pop
xor
loopne
pop
jbe
cmpsl
cmovnp
call
pop
mov
jp
dec
jbe
cmc
mov
xchg
xchg
lods
cmpsb
xchg
add
and
dec
xchg
imul
jns
call
push
sbb
xchg
cmp
or
in
mov
mov
fcompl
shrb
mov
dec
xor
mov
in
loopne
mov
pushf
les
jmp
inc
test
pop
in
add
jns
pop
subl
pop
test
dec
les
pushf
sbb
addr16
jl
pop
out
aam
xor
add
roll
and
jmp
lret
adc
rorl
dec
ljmp
mov
ret
inc
xor
push
push
adc
mov
outsl
ja
scas
int
mov
add
insb
and
mov
mov
in
inc
sbb
andb
mov
shll
subb
or
arpl
sub
call
popf
jno
popa
mov
xor
add
cmp
out
iret
push
andb
mov
sbbb
or
aas
mov
addl
xor
imul
imul
sbb
lret
enter
sub
loopne
jecxz
pop
xor
in
inc
out
push
cmp
imul
or
push
addb
test
sahf
aas
jb
push
push
mov
cwtl
add
scas
lods
sbb
mov
sub
xor
sbb
mov
add
aas
cmp
repnz
jg
bound
mov
add
or
mov
je
mov
popf
jp
addr16
frstpm(287
and
mov
in
mov
data16
pop
xor
or
cmp
mov
imul
cmpsl
jp
mov
insl
das
xor
ljmp
and
lret
clc
hlt
push
jmp
iret
mov
cwtl
std
inc
sti
pop
sub
rolb
dec
cmpsb
cmp
sub
clc
cld
cmp
add
inc
xchg
orb
mov
sar
add
rcrl
insb
fldt
mov
insb
pusha
ret
fisttps
jo
movaps
ja
sbb
ljmp
std
movsl
pop
jecxz
adc
out
fistpll
lea
push
jbe
jl
adc
sub
rorb
fsts
rorl
inc
mov
cmp
movsl
mov
fisubl
pop
std
cmp
imul
andb
xor
jge
loope
aas
xchg
jle
add
add
adc
ljmp
pop
fistpll
mov
sub
les
repz
fbstp
in
outsb
fisttps
icebp
sbb
mov
cmpsb
adc
mov
sbb
inc
or
rcrb
inc
scas
aas
ret
in
mov
sahf
mov
test
pushl
cmpsb
sbb
out
negl
clc
js
sub
aaa
adc
dec
je
add
pop
mov
enter
xor
jno
jb
loop
scas
jge
xor
dec
in
imul
data16
xchg
shlb
jae
or
xor
test
or
sub
sbb
adc
mov
jbe
daa
xor
stc
xchg
mov
xorb
xchg
ss
xchg
into
xor
adc
sar
lds
ljmp
xchg
in
test
inc
aam
xchg
jno
call
es
mov
and
scas
call
test
comiss
cmpl
insl
mov
or
add
lret
or
add
or
mov
in
icebp
dec
push
cmp
cli
mov
fs
pop
fs
xchg
sbb
test
jle
jns
cwtl
dec
push
ret
push
and
addr16
test
xchg
or
jl
imul
lods
shrb
ljmp
mov
clc
out
inc
adc
or
les
mov
and
stos
fnsave
ja
inc
cwtl
imul
sub
jl
xor
fld
sbb
xor
pop
cmpsl
pop
inc
insb
cli
fmul
xor
sub
mov
add
leave
aaa
aam
pop
pop
inc
test
inc
sub
pop
push
cmp
inc
stc
pop
xor
in
loop
xlat
pop
aam
push
adc
jns
jno
out
lcall
inc
std
pop
sbb
xchg
dec
shll
jle
inc
xor
add
xchg
xchg
cs
scas
fistpl
aam
insb
int3
pusha
pushf
mov
rclb
xlat
sub
jns
mov
js
cmp
out
cli
cmpsl
mov
dec
fisttps
mov
int3
cmc
shr
mov
dec
sub
inc
and
daa
cwtl
jns
add
sbb
mov
pusha
fiadds
sub
mov
cmpsl
pop
add
stos
aad
pop
add
fmuls
repz
xor
pop
or
in
jnp
push
cmp
push
sbb
push
sbb
mov
xor
and
imul
fs
mov
mov
and
push
sbb
jge
sbb
push
cmp
push
mov
add
mov
dec
insl
cmp
filds
mov
mov
rcrl
ror
rolb
pushf
in
push
fidivl
fucomi
cltd
and
subl
inc
xor
cmp
jp
loope
cmp
ret
add
cltd
call
in
adc
aas
stos
jp
xchg
jp
jg
lods
ret
jecxz
cmpsl
adc
out
push
and
scas
or
imul
adc
and
gs
xlat
add
int3
test
ss
push
imul
sub
xchg
xor
mov
xchg
arpl
test
cmp
pop
ss
xor
fnstsw
cwtl
sbb
out
sbb
lods
push
lock
fisttpll
fidivs
adc
xchg
cmp
arpl
lahf
dec
jo
mov
adc
and
pop
fcompl
iret
cs
mov
add
pop
jmp
mov
inc
test
fmull
pextrw
dec
fwait
mov
or
xchg
arpl
dec
in
push
mov
das
test
jp
adc
mov
mov
xchg
inc
and
push
mov
cmpsb
xchg
stos
int3
pusha
fcomps
mov
mov
push
mov
je
es
lock
lret
jno
scas
jp
jb
or
mov
frstor
dec
xchg
cmc
adc
test
xlat
fs
shl
mov
xor
lret
pop
data16
sub
pop
or
cltd
and
xor
lods
jmp
xor
addr16
movsb
loope
and
push
cs
gs
jae
lret
cwtl
adc
sub
ja
loop
aad
scas
jo
insb
push
rorb
dec
sub
mov
inc
lretw
push
sbb
jne
outsb
nop
mov
dec
sbb
jp
in
sarl
cmpsb
and
mov
pop
mov
mov
mov
push
fbld
mov
test
test
loope
vsqrtsd
lret
mov
jl
popa
jl
testl
push
gs
xor
mov
adc
call
jo
pop
arpl
jne
and
adcl
mov
jp
bound
ret
cs
mov
shl
cmp
imul
cmp
fwait
movsb
pop
addr16
ds
loope
daa
cmp
aad
or
dec
mov
fcoms
mov
test
hlt
mov
fcomps
ret
adc
les
mov
and
push
in
mov
adc
lcall
xor
sub
test
ficompl
add
dec
out
mov
fiaddl
dec
fsubrl
pop
icebp
or
imul
aam
jmp
out
aas
lcall
lds
std
sbb
fistpl
push
jnp
ret
cld
subb
inc
insb
adc
pop
mov
or
xor
ja
sub
repnz
mov
xlat
lahf
out
hlt
in
xchg
xor
sub
rorl
hlt
mull
or
pop
lcall
daa
adc
push
mov
xchg
ds
lret
movsl
ljmp
orb
into
cmpsb
sti
mov
clc
fidivrl
and
lock
sub
int3
fldt
stos
add
mov
ret
push
jne
dec
pop
bound
sar
int
push
out
enter
mov
dec
shl
jp
fnstsw
sbb
popa
sub
adc
std
add
sub
pop
push
stos
stc
cmp
ljmp
jp
and
cmp
ljmp
and
push
js
or
push
out
stos
push
adc
mov
arpl
cmpsb
out
and
daa
mov
jmp
dec
pushf
in
dec
cmpsl
insb
pop
sub
rorb
mov
les
push
xor
xlat
sub
in
mov
sbb
xchg
mov
cmp
movsl
aaa
test
ds
jmp
out
stc
sti
jp
push
xchg
loope
inc
dec
int3
pop
mov
icebp
adc
and
xor
dec
mov
lea
pop
inc
pop
loope
lahf
scas
in
std
call
adc
inc
fwait
push
subb
push
inc
int
loop
jno
pop
ret
out
xor
and
roll
into
int3
rcrl
push
outsb
out
sub
inc
lock
fisttpl
stos
imul
sub
pop
pop
aam
aad
sub
adc
cmp
push
ss
jle
lahf
lcall
jp
lods
lods
decl
lods
lea
iret
or
pop
and
jle
xlat
and
nop
mov
jg
std
xor
rol
lea
bound
divb
pop
out
sahf
xchg
fwait
dec
jne
adc
dec
pop
add
xchg
inc
gs
loopne
fildll
cmp
shrl
popw
jle
push
data16
subb
jge
movsb
daa
in
and
aad
fadds
mov
cmp
in
or
out
arpl
sbb
sub
inc
inc
mov
jo
sti
divl
rolb
xchg
xor
and
cmc
adc
rcr
adc
and
inc
xchg
jno
xor
mov
out
fs
sub
enter
aas
aas
dec
ret
insl
sub
pop
je
orl
and
mov
arpl
mov
inc
cmc
jmp
adc
dec
xor
rcll
mov
cld
ljmp
jp
push
popf
inc
push
mov
ds
pop
cld
dec
dec
jge
dec
sbb
cld
jp
and
in
sbb
cmp
or
jg
in
out
shlb
sbb
and
add
pop
clc
or
jb
cltd
divb
rcr
add
mov
add
lods
add
ficompl
mov
call
popa
xor
popa
adcb
jecxz
popf
and
pop
mov
xchg
mov
testb
rcrb
aam
cmp
leave
mov
mov
pop
mov
push
data16
dec
in
xchg
bound
daa
mov
aas
inc
sub
xchg
xor
mov
cwtl
mov
inc
push
rolb
cmpsl
adc
scas
fxch
push
cmp
xor
mov
mov
dec
loopne
mov
add
ljmp
cmp
testl
mov
jecxz
lahf
xchg
adc
in
jg
lds
mov
enter
or
cld
testb
pop
add
adc
inc
inc
and
and
out
ret
jl
mov
shrl
bound
das
dec
in
push
sbb
jl
xchg
scas
lret
cmp
or
js
pop
push
and
out
jae
into
jb
dec
jo
push
inc
xor
and
mov
push
outsl
dec
sub
and
pop
jl
pop
xlat
sbb
cmp
js
cmpsl
jb
xchg
xor
adc
sbb
add
test
or
sbb
jg
insb
or
mov
popa
lods
rorb
je
or
sbb
dec
out
jge
addr16
lahf
cmpsb
pushf
ja
sbb
addl
ljmp
cli
negl
fsts
test
sahf
jnp
mov
ljmp
rcrl
sub
clc
mov
cmp
lods
aaa
not
pop
dec
mov
repz
dec
jno
lea
jmp
inc
cld
or
outsl
adc
xchg
add
test
adc
adc
gs
nop
push
rorl
fnstcw
js
lcall
aad
sbb
popf
repz
fs
nop
xchg
jae
xor
inc
xchg
aam
in
or
add
das
add
fisttpll
es
cmp
xor
movsl
imul
add
pop
cmp
aas
test
outsl
movsl
mov
push
dec
dec
stc
mov
push
jae
or
cltd
sub
movsl
js
imull
testl
mov
cmp
fdivl
cltd
xor
in
adc
jbe
adc
push
push
in
test
daa
push
mov
je
and
push
sub
mov
add
sbb
sub
repnz
push
pop
clc
shlb
and
mov
fistpl
sub
or
push
and
cli
sbb
mov
std
or
adc
dec
push
inc
push
mov
push
and
push
sbb
into
popl
xlat
xchg
out
sahf
add
std
cmp
or
mov
divl
movsb
test
fists
loopne
mov
shrb
or
arpl
mov
or
mov
jp
mov
xor
iret
dec
test
mov
out
mov
mov
cmpsl
inc
xor
xchg
dec
shrb
call
inc
mov
adc
mov
dec
into
sarl
in
imul
repz
je
mov
enter
xchg
adc
cmc
stc
in
les
pop
fstp
push
or
lret
dec
adc
add
mov
cmp
jbe
sbbl
ret
push
jo
adc
je
stos
and
sbb
dec
das
mov
scas
aam
push
adc
pop
or
mov
jp
fdivrl
xor
and
out
and
stc
dec
sub
enter
enter
jo
cmpsb
in
sbb
jo
shl
jns
cli
add
ret
fcmovbe
mov
jno
aas
icebp
popa
int3
arpl
add
adc
and
cmpsb
mov
decl
gs
mov
mov
mov
sub
jae
divb
icebp
mov
or
lahf
push
fidivs
sbb
js
or
cmp
aaa
jo
dec
sub
push
push
fisttpll
mov
aam
nop
fnstcw
pop
cltd
and
sbb
sub
ret
loope
cmc
fsubrs
jge
lret
lods
sbb
call
jecxz
xchg
and
scas
hlt
aas
mov
gs
gs
xor
aad
fsubs
ret
and
nop
cmp
aam
divl
lret
jecxz
dec
push
shl
cltd
push
or
sub
jge
inc
inc
pop
and
call
mov
adc
imul
xor
inc
out
mov
ljmp
mov
iret
inc
xchg
jb
ret
test
add
mov
or
sub
sbb
push
inc
pop
int3
jg
pop
imul
jmp
repz
imul
or
jbe
xor
scas
out
pop
pusha
or
pushf
into
aam
idivl
xchg
push
mov
pop
pop
in
push
push
aam
std
cmp
enter
gs
imulb
jne
jnp
sub
movsl
aad
add
adc
mov
cmp
jmp
test
push
cmp
dec
mov
pop
neg
adc
test
out
test
inc
scas
js
jmp
or
in
mov
nop
fisttpll
pop
mov
push
stc
push
mov
insl
mov
sub
cmpsl
mov
int
cmpsb
gs
lahf
sub
sub
cmc
js
pop
cmc
and
adcb
cltd
dec
jb
sub
or
loop
into
shl
or
popa
dec
push
adc
pop
sbb
insb
push
rcrl
adc
cltd
mov
xchg
mov
jle
ja
inc
mov
sahf
sbb
test
stos
bound
cmp
ds
mov
mov
jmp
xchg
jb
or
or
loope
cltd
and
and
jp
sysret
and
lcall
in
and
sarl
mov
mov
aad
std
xchg
gs
je
gs
fdivl
das
pop
mov
lret
push
mov
andb
and
jae
ja
cmp
mov
insl
cmp
jecxz
cmpl
add
xorl
jnp
jae
dec
sbb
mulb
mov
pop
test
ja
or
adc
ds
or
dec
xor
imul
inc
addb
test
arpl
pop
test
cs
push
repnz
hlt
mov
popa
jecxz
loope
shrb
test
insl
adc
addl
popw
lods
jns
inc
test
sbb
sub
fimuls
push
sbb
cmc
cmpsb
notl
inc
sahf
inc
push
cld
jne
sbb
jge
jg
and
pop
lret
or
insb
jns
in
lret
shrl
clc
pusha
repz
xchg
jae
inc
repz
fwait
pop
icebp
cmp
sbb
sahf
lret
add
inc
push
sbb
dec
push
test
in
pop
jg
cmp
out
scas
inc
cmpsb
pop
fidivrl
icebp
int
mov
arpl
sarb
xchg
or
push
xchg
fcompl
mov
bts
lret
inc
add
dec
pop
popf
stos
sbb
jl
subl
movsb
fidivs
outsb
jnp
call
mov
mov
fs
mov
repz
add
dec
cld
xchg
dec
cmp
dec
sarl
jb
dec
shl
push
iret
xchg
ss
xor
mov
xchg
sahf
dec
les
pop
mulb
jle
push
adc
adc
xorb
imul
cmp
pop
mov
dec
sub
js
testb
or
mov
mov
jo
and
lock
dec
ljmp
and
jg
ljmp
or
cmpsl
fiadds
shlb
add
ret
std
inc
sub
mov
leave
pop
iret
pop
sbb
xor
mov
dec
sbb
jg
xor
mov
pop
fmull
cmp
push
dec
sbb
jne
lret
fisubrl
leave
mov
lods
loope
pop
repnz
cli
mov
mov
and
fstps
xchg
daa
rorb
xchg
mov
mov
fidivrl
hlt
mov
sub
pop
mov
popf
aas
test
lods
add
and
das
lds
hlt
cmp
stc
ja
dec
mov
pop
and
rorb
fildl
in
jl
test
jb
iret
popa
jae
or
xchg
mov
xor
pop
and
sbbb
stos
stc
add
stos
into
lahf
ljmp
scas
arpl
sub
repz
mov
cltd
in
push
aam
and
jmp
adc
lock
sbb
leave
stc
test
lcall
cmpsb
mov
sbb
cmpsl
xor
fwait
les
xchg
jo
push
mov
dec
mov
repz
sbb
jno
and
cmp
enter
sar
pop
xor
leave
pop
icebp
popa
inc
push
and
lods
inc
add
cmp
xlat
cli
adc
into
frstor
les
fnstcw
jns
dec
dec
imul
mov
inc
ja
pop
or
test
xor
addr16
sub
loopne
push
add
xchg
jne
pop
je
xor
inc
jmp
test
pushf
push
divb
inc
push
adc
ds
sub
movsl
data16
jb
push
pop
pop
cmpsl
cmp
push
or
arpl
xor
mov
into
push
mov
hlt
outsb
leave
ud0
dec
daa
in
fistpl
outsb
outsb
bound
test
mov
roll
pop
dec
pop
out
notb
push
call
clc
sub
add
mov
sub
mov
or
repnz
lret
sbb
xchg
jb
xlat
ficomps
iret
stc
jge
aaa
cmp
je
push
mov
jmp
aaa
sti
fcmovne
jae
movsb
sti
inc
add
mov
out
mulb
push
aas
mov
ds
out
js
mov
inc
cli
mov
dec
mov
jne
jnp
mov
cmp
rcrl
nop
xor
out
mov
jbe
ret
mov
lds
leave
cld
sub
mov
std
and
jge
outsb
mov
xchg
lcall
stos
les
push
mov
mov
pop
popa
aas
push
jo
pop
and
ret
inc
cs
cmp
lods
push
pop
xor
jle
mov
pop
andb
and
jle
jl
sub
das
xchg
out
jnp
cvtps2pi
push
shrb
fistl
jbe
lock
and
mov
and
orb
addr16
in
pop
fildll
das
movsl
pusha
mov
pcmpeqw
mov
push
out
repz
out
div
aad
pop
out
pop
xchg
aad
mov
xchg
pop
sub
push
cmp
push
sub
xor
out
je
lret
std
push
cmp
addr16
fidivs
divl
movsl
lret
ret
in
stos
or
push
lret
cmp
ja
lea
shll
xchg
add
sbbb
movsl
daa
add
cmp
xor
addl
and
cld
mov
push
popa
add
xor
sbb
mov
ret
sub
pop
aas
adc
jmp
sub
roll
add
mov
nop
stc
xchg
rcrb
jecxz
push
adc
fstl
fistl
and
mov
rorl
outsb
pusha
lahf
mov
pop
notl
push
or
enter
popa
xchg
repz
xchg
xchg
adc
cmp
loopne
cmp
iret
cmp
jns
pop
add
xlat
add
adc
pop
int3
or
lea
scas
ljmp
pushf
ficoml
sub
jne
jle
push
dec
outsl
dec
push
das
pop
jmp
or
pop
cld
xor
add
cmp
aaa
arpl
cld
rorl
add
test
stos
int
loope
mov
cmpsb
cmp
sahf
inc
scas
pop
sub
add
fwait
cmp
add
adc
int
inc
adc
sbb
xor
cmc
pop
cmp
mov
mov
pop
outsb
jnp
fimull
sub
or
sbb
cmp
sub
addb
fimuls
mov
dec
cltd
movsb
mov
cmp
inc
or
xor
fcmovb
push
mov
in
mov
popa
dec
sbb
jge
pop
mov
add
push
test
push
rep
pusha
inc
fstpl
dec
push
ret
divb
inc
pop
loope
push
fs
dec
out
inc
pop
mov
mov
out
loope
cmpsl
pop
add
scas
pushf
iret
pop
or
xlat
lahf
std
int
rol
or
push
bound
cli
movsl
dec
mov
mov
cwtl
repz
mov
inc
push
dec
inc
sub
pop
lret
pop
mov
addr16
xchg
test
in
std
or
cmp
mov
mov
dec
not
dec
fwait
cmp
mov
sbb
gs
jae
jl
stos
movsb
jg
je
mov
xchg
or
les
jbe
insb
push
bound
cs
shr
in
test
push
adc
cmc
cmp
push
aaa
cmp
mov
sar
insb
pop
and
cmp
mov
rcrl
cmovp
and
cmp
dec
mov
loope
hlt
mov
dec
xor
cltd
mulb
ja
cmc
mov
mov
gs
jnp
in
ja
addr16
loopne
inc
repnz
inc
lret
cltd
adc
lock
sub
test
pop
in
xchg
mov
mov
mov
enter
adc
loope
pop
push
in
adc
mov
adc
mov
pop
and
xor
in
inc
xorb
clc
pop
cmp
call
addr16
add
push
pushf
sub
or
cmp
sbb
add
subl
inc
notb
inc
jmp
mov
adc
cs
pop
sub
addr16
mov
sbb
inc
mov
mov
dec
mov
push
ja
push
mov
out
out
ljmp
dec
jmp
cmpb
adc
or
xor
aas
in
pcmpeqd
es
lds
outsb
std
inc
push
rcrl
xchg
loop
icebp
rclb
cli
fs
mov
dec
jecxz,pt
ss
aad
pop
xchg
push
mov
daa
lret
lds
subl
aad
mov
mov
lods
pop
mov
push
in
push
scas
pop
pushf
sbb
add
shrl
xchg
cmp
test
mov
cmp
in
cmp
pop
push
jo
mov
pop
popa
and
dec
clc
jbe
push
int
dec
cmp
and
aad
cli
push
lret
or
jl
xor
push
rcrl
sub
mov
clc
push
pop
sahf
jae
jp
mov
cmp
dec
sets
pop
mov
lock
mov
notl
pushf
bound
test
jp
inc
movsb
add
dec
lret
call
sbb
xor
pusha
insb
add
jb
jns
fwait
cmpsb
fsubrl
jp
inc
ret
icebp
pop
ret
adc
mov
sub
popa
mov
jmp
adc
xor
outsb
imul
push
push
pop
add
push
xchg
add
inc
push
popf
jo
mov
inc
leave
movups
fimuls
xchg
mov
popf
and
cmp
loop
add
fistpl
enter
dec
pop
out
pusha
rcl
addr16
pop
and
call
in
aam
cmp
push
dec
aaa
jno
mov
adc
cmpb
pusha
stc
ljmp
jo
scas
fsts
cmc
jecxz
xchg
popa
enter
inc
lret
mov
cmp
or
test
mov
push
test
sub
cltd
call
ret
fwait
mov
jo
aad
mov
nop
test
stos
push
jg
adc
loopne
adc
cmpsl
das
bound
dec
mov
cmp
ja
mov
adc
mov
aad
pop
das
add
push
xchg
pop
jb
insl
test
push
jp
outsb
or
jb
cs
and
lea
stc
cltd
movq
jnp
inc
into
sahf
imul
inc
jge
ss
jo
jl
nop
aam
push
sub
iret
sti
jns
sbb
imull
pop
sub
nop
push
xchg
jmp
pusha
or
cld
pusha
mov
psubusw
mov
movsl
and
add
mov
push
sbb
aas
xlat
mov
sbb
testb
mov
mov
addb
mov
jmp
ficomps
int
call
xchg
and
add
loop
pop
out
jno
repnz
and
cmp
les
pop
sub
aaa
movsb
mov
bound
test
dec
jbe
xchg
imul
cmp
pop
insl
das
xchg
pop
dec
mov
cmp
gs
sub
mov
jo
cwtl
repz
dec
sub
out
pop
mov
fstpt
add
push
mov
adc
cmp
lea
xchg
push
sub
mov
push
aaa
inc
mov
push
jne
mov
sahf
mov
dec
sar
push
mov
sbb
pop
cmp
std
dec
int
mov
pop
psubb
xchg
push
out
sub
lret
loope
out
mov
or
into
addr16
movsb
push
aaa
arpl
jae
xor
or
sbb
mov
xor
loop
sbb
sub
out
jbe
jne
mov
imul
xchg
sub
call
jns
clc
and
fldenv
aam
adc
dec
sub
and
cmp
or
inc
mov
outsb
roll
lock
xor
outsb
push
sbb
bound
xor
addr16
sbb
jp
cmp
adc
push
xchg
rcr
sub
adcl
or
sbb
ds
scas
imul
adc
imul
xor
sbb
push
xlat
cmp
xchg
aad
loope
sbb
mov
xchg
mov
mov
and
out
push
mov
inc
stos
jbe
fmull
jl
jo
pop
orl
xor
mov
das
push
xchg
adc
es
jmp
aad
les
popa
add
adc
in
inc
xchg
enter
or
sub
jmp
das
xor
stos
inc
xchg
aad
add
fcom
pusha
jmp
imull
ret
aad
mov
sbb
rcrl
adc
jle
xchg
call
jo
sbb
adc
jmp
push
add
nop
les
popf
push
dec
cmp
cmpsb
ret
stos
sub
mov
adc
mov
fildll
mov
hlt
xor
mov
mov
add
imul
pop
loopne
mov
mov
adc
mov
sub
mov
push
jl
sti
inc
in
cmp
out
int3
cmp
jnp
in
push
popa
mov
ljmp
in
jp
gs
stos
push
push
xchg
pop
xchg
xchg
xchg
cwtl
pop
jnp
in
out
imul
xchg
sbb
sbb
loope
aas
mov
jbe
pop
and
jno
lds
add
adc
push
pop
fdivrl
pop
xor
movsl
ljmp
outsb
in
xchg
sub
mov
inc
pop
mull
es
and
mov
ret
jbe
and
cmc
sub
add
fadds
int
push
addb
push
or
rolb
mov
loop
test
mov
divb
sahf
cmp
mov
adc
xchg
cmc
pop
aam
jl
fiadds
addr16
adc
inc
cmpsb
jo
adc
adc
into
inc
xchg
sub
divps
jno
outsl
out
cmc
movsb
fadds
out
scas
xchg
or
add
daa
push
test
pop
or
loopne
mov
mov
fildll
pop
cmp
enter
pushl
pop
repz
sub
mov
addr16
ljmp
mov
push
cli
inc
dec
xor
adc
aaa
mov
in
dec
insb
mov
bound
das
push
xchg
call
mov
cmp
cmp
push
mov
fistps
dec
mov
and
inc
and
sahf
add
dec
jnp
xlat
data16
pop
vpmacssdd
xchg
dec
push
push
xchg
xor
sub
jnp
out
leave
movsb
jns
loope
adc
jo
aam
cs
push
mov
aaa
scas
int3
mov
rcll
mov
mov
xchg
or
mov
repnz
xchg
push
enter
icebp
push
sub
cmp
or
xor
dec
hlt
add
scas
addl
xchg
lods
xlat
mov
inc
sti
fcomip
push
and
or
fidivs
mov
mov
insb
adc
mov
dec
scas
arpl
sbb
mov
sbb
push
or
push
jmp
jb
inc
outsl
jg
pop
push
push
shlb
cmpsb
or
test
sbb
popf
insb
xchg
mov
std
push
insl
dec
push
xchg
imul
mov
dec
mov
push
lds
movsb
xchg
popf
in
mov
outsb
push
aam
fs
int3
jmp
test
sbb
push
icebp
int3
adc
fs
dec
popa
or
mov
in
mov
out
loop
adc
int
xor
push
repz
sub
fstl
in
inc
clc
leave
je
rcr
and
add
fsubrs
push
mov
pusha
pop
xor
sub
jl
mov
dec
pop
add
jge
inc
fwait
pop
aaa
imul
adc
mov
inc
in
xchg
pop
orl
cltd
into
loopne
int3
and
fsubs
jge
dec
mov
xchg
xorl
pop
cmp
dec
ds
out
mov
mov
add
mov
adcb
shll
dec
xor
and
out
pop
in
pop
cmp
jge
pop
push
fbstp
imul
lods
setne
imul
push
aaa
dec
test
dec
lods
dec
out
or
mov
mov
stos
popf
xchg
sub
addr16
into
pop
push
sub
mov
leave
push
inc
push
inc
xor
test
and
xchg
incb
cltd
xchg
mov
aam
pop
inc
mov
mov
test
xor
test
cli
push
mov
push
imul
xchg
nop
add
test
adc
fs
cmc
pop
lret
movsb
xchg
push
dec
nop
adc
outsb
lret
mull
or
popf
lcall
addr16
mov
sbb
mov
xor
add
dec
cld
dec
xchg
punpckhdq
xchg
mov
pop
or
sbb
jge
sti
cmp
cli
cmpsl
scas
push
je
out
jecxz
sarl
mov
pushf
mov
push
xchg
popa
out
pop
sti
push
inc
pop
test
inc
pop
mov
or
stos
inc
cmp
adc
jl
in
xchg
fdivl
sub
ret
and
or
lcall
cmp
insb
cmpsb
cmp
je
push
int3
jmp
sbb
aad
aad
or
nop
sub
es
lret
ljmp
fldz
xchg
mov
aaa
ljmp
dec
dec
enter
xlat
aaa
arpl
movsb
js
jg
add
loope
xor
scas
dec
cwtl
es
lods
pop
out
push
fisubs
cmp
enter
ret
adc
pop
and
mov
loope
js
test
mov
adc
push
scas
xchg
sbb
xchg
in
lret
pushf
std
sbb
ret
pop
lret
cmp
scas
inc
add
add
fs
push
loopne
mov
out
cmp
and
xor
push
daa
sbb
nop
add
adc
jmp
ss
pop
jge
cmpsl
ret
pop
and
idiv
or
xor
dec
fwait
call
sahf
jg
mov
fcmovb
es
cwtl
leave
push
ja
lahf
xchg
sbb
call
xor
sub
outsb
and
pop
cld
movsl
lods
cmpsb
mov
call
inc
int
ljmp
fsubp
xor
mov
mov
dec
movups
cltd
mov
and
adc
outsb
scas
mov
sub
into
ret
inc
inc
mov
jnp
lds
jp
push
push
movl
jns
data16
pop
and
jg
mov
mov
notb
scas
cmpsl
mov
mov
in
shrb
in
jne
inc
push
mov
lcall
inc
mov
movsl
daa
adc
lret
in
adc
ss
add
add
pusha
add
sti
add
jg
sub
pop
jg
push
stos
orb
mov
pop
loop
sub
pusha
mov
mov
loope
sub
pop
es
and
jl
cmp
push
scas
ja
dec
lret
sbb
arpl
dec
jmp
stc
jge
xor
imul
mov
mov
inc
dec
push
jns
scas
mov
pop
shrb
ljmp
les
xchg
xlat
das
mov
jg
orl
movsl
dec
sbb
mov
out
inc
jo
mov
stc
inc
xor
out
sbb
pusha
mov
and
add
daa
adc
bnd
in
and
sub
lods
xor
lods
and
aaa
push
xor
ret
cld
dec
inc
sbb
pop
mov
mov
pop
lcall
push
iret
cmp
push
or
jae
add
test
cmp
nop
push
lahf
cmp
in
mov
arpl
outsl
xor
vpmullw
push
mov
mov
shr
jp
jg
mov
mov
and
jb
xchg
adc
inc
sbb
mov
lret
dec
push
mov
repnz
cmpl
in
std
shll
sbb
mov
dec
jne
add
shlb
lret
adc
jnp
mov
in
hlt
iret
out
ja
adc
inc
mov
add
lock
push
mov
jae
push
xchg
insl
mov
orl
cmp
and
or
scas
mov
les
scas
sub
mov
inc
add
out
lods
mov
in
or
aas
subl
push
inc
enter
les
test
imul
dec
and
rorl
push
inc
push
cmp
ja
into
adc
push
mov
sti
jge
int
ss
into
xlat
cs
les
pop
into
sahf
cmpl
dec
int3
loop
sub
lea
mov
cmp
sbb
rep
adc
adc
jl
pop
add
iret
push
add
arpl
mov
fsubrs
insl
js
inc
cmp
pop
stos
push
ffree
fimuls
pop
aam
call
icebp
pop
jns
insl
push
add
cmpsl
cmp
mov
cmc
clc
push
push
pop
ja
mov
mov
int
addr16
xor
stc
add
repz
mov
mov
dec
push
inc
test
je
jne
xchg
jp
xchg
fcompl
push
inc
cmpsb
sahf
sub
or
sbb
mov
and
xorl
dec
clc
ja
push
sub
call
inc
jmp
rcl
mov
adc
aam
stos
stos
xchg
sti
dec
enter
out
lcall
hlt
lods
sub
dec
into
cli
rorb
sti
pusha
subw
ds
inc
in
scas
iret
arpl
mov
adc
mov
loope
ljmp
xchg
pop
dec
add
je
push
rcr
inc
daa
jg
push
bound
in
xor
dec
inc
pop
dec
aam
stos
adc
sbb
test
add
mov
in
push
xor
push
pop
push
addl
inc
pop
xor
xor
ret
mov
mov
dec
adc
outsb
fs
cltd
dec
adc
repnz
hlt
nop
fcomp
leave
pop
jbe
repz
fcompl
negb
pop
cli
xchg
adc
call
dec
mov
das
xor
jne
test
jno
fisttpl
xchg
dec
push
fimull
sbbl
or
or
movsl
loopne
dec
or
adc
push
mov
std
aam
rorb
mov
jle
ret
push
lods
push
das
or
add
dec
sub
push
ret
or
mull
sub
jae
imul
scas
fdivrl
aad
dec
addr16
add
outsb
jne
push
test
fld
sbb
add
and
inc
fs
xor
lods
xor
lret
mov
arpl
in
mov
dec
and
adc
cs
lret
fcmove
push
mov
or
arpl
inc
jbe
aaa
into
and
cmpsl
inc
incl
xor
lds
xchg
push
jmp
mov
test
or
test
dec
dec
mov
add
or
xchg
jno
cvtpi2ps
mov
mov
clc
push
push
inc
shll
imul
dec
test
add
sbb
push
inc
and
lahf
add
push
lods
imul
shl
mov
orl
add
push
out
test
mov
cwtl
pop
and
pushf
mov
jecxz
push
sahf
shrb
push
nop
test
out
fwait
das
cmp
or
add
aam
jge
mov
in
jne
lret
pushf
stos
smsw
or
clc
nop
arpl
or
fcoms
pop
or
sub
sbb
push
xor
int3
arpl
lds
xor
cmpsl
outsb
call
cmp
iret
xor
or
inc
aas
notb
mov
sarb
add
divb
psrad
jbe
jmp
sbb
inc
pop
mov
div
pusha
xchg
popa
adc
inc
cmp
shl
mov
aaa
push
cmpsl
out
pop
movsl
or
fstps
mov
push
testl
aad
and
xor
mov
rorl
inc
cmp
push
fisubs
jecxz
sub
insb
loope
pop
inc
mov
lods
sarl
xchg
test
dec
inc
sahf
push
cld
lea
sbbl
movsl
adc
mov
andb
jne
push
and
es
sub
cli
add
outsl
or
inc
cli
int3
mov
push
fs
or
sub
call
data16
sub
rcll
cwtl
sub
add
testb
in
dec
mov
ret
or
fsubr
sub
xor
push
fstl
repnz
xlat
iret
lret
xor
cmp
cmp
in
and
cmp
outsl
sahf
xor
imul
mov
call
adc
out
hlt
mov
inc
mov
sub
nop
addl
jae
sbb
js
mov
pop
ljmp
imul
cmpsb
pop
dec
mov
ja
pusha
or
imul
adc
arpl
jg
push
or
inc
pop
fs
les
sbb
mov
push
mov
rol
jbe
add
mov
jl
insb
int3
or
rolb
add
xor
fs
push
orb
movzwl
add
into
xor
addr16
scas
cwtl
pusha
cltd
ja
xor
ds
push
mov
aaa
ficomps
cli
mov
movaps
dec
sub
cli
in
stos
sti
or
sti
sbb
test
nop
jmp
push
mov
sbb
sarl
mov
xor
pusha
dec
js
pop
call
or
stc
sbb
lahf
stc
inc
and
jmp
clc
or
pop
pop
movsb
adc
dec
jecxz
mov
and
or
cld
dec
xchg
mov
xorl
scas
fisubs
sti
loop
popf
mov
stos
rclb
mov
cs
outsl
fldl
stc
int
movsl
aas
push
sti
or
jbe
int
daa
xchg
mov
add
adc
pop
ss
movsb
pop
dec
inc
fdivrl
test
loopne
data16
jns
bound
sub
inc
fldt
jecxz
aam
lods
jne
cltd
fistpll
xlat
imul
and
sbb
fwait
pushw
aad
or
divl
scas
jmp
bound
out
dec
inc
ficomps
inc
pop
pop
loopne
adc
and
inc
mov
scas
mov
jg
jp
fcoml
add
pop
shlb
gs
outsl
pop
arpl
mov
and
int
jge
sbb
jne
dec
insb
scas
mov
mov
lock
push
inc
xor
shl
aaa
xor
add
clc
stos
jno
hlt
push
iret
mov
or
xlat
insl
xlat
pop
les
sub
jne
adc
and
test
data16
push
adc
mov
xchg
pop
add
lcall
adc
sbb
add
out
movsb
rclb
push
mov
jo
fstl
outsl
fisubl
mov
mov
add
shll
mov
test
cltd
add
lret
push
imul
insb
mov
jl
and
jae
dec
cmp
adc
bound
and
dec
out
lods
iret
sbb
mov
stos
mov
enter
cmpsl
repnz
push
mov
push
pop
lcall
popa
jmp
call
or
and
cmp
pop
nop
arpl
cmp
repnz
lods
pushf
sub
mov
aam
pop
ja
mov
punpckldq
sub
adc
jge
pop
add
cs
dec
mov
jecxz
loope
pop
xchg
mov
jae
mov
xor
dec
stc
cmp
mov
dec
sub
nop
leave
ret
add
aaa
imulb
sbb
bound
out
xlat
cmc
adc
sub
pop
lock
cmpsl
xor
xor
dec
fcom
test
notl
stos
xchg
addr16
jmp
push
adc
xchg
sub
xchg
pushf
fwait
lahf
push
inc
jne
mov
out
data16
cli
or
lds
leave
jne
call
xchg
fwait
seto
rorl
jp
mov
and
xor
stos
xchg
dec
push
sarl
movl
dec
xchg
fstpl
xor
test
sbb
sbb
mov
aam
cs
mov
adc
aam
and
sub
and
and
aas
movsl
imul
jp
jnp
enter
adc
inc
lock
mov
xor
inc
mov
shll
jbe
hlt
fidivrl
insl
cmp
out
hlt
cmp
or
and
jp
sbb
xor
mov
fimuls
mov
ljmp
inc
mov
ja
adc
sub
mov
cmp
aas
cmp
xchg
mov
dec
out
jge
repz
je
cmp
inc
or
loope
jnp
cmp
mov
imul
or
and
movsb
cmp
mov
dec
test
insl
aad
out
int3
xchg
jle
iret
addr16
sub
fmul
fcoms
or
je
in
sub
arpl
lods
lret
cmp
repnz
dec
mov
mov
push
jecxz
mov
outsb
movsl
in
cmpsb
mov
xchg
shlb
push
dec
cs
test
aam
pop
push
lcall
mov
aam
xlat
fmull
push
mov
push
test
mov
test
sbb
lcall
cmpb
lock
add
xlat
mov
mov
mov
add
inc
jne
out
cmp
inc
aas
pusha
outsl
push
mov
inc
xor
shll
stc
inc
add
mov
daa
scas
push
loop
insb
adc
outsb
arpl
movhps
xchg
es
pop
sub
dec
dec
shlb
xchg
mov
mov
ss
movsl
shlb
adc
add
jl
lock
pusha
push
mov
mov
mov
jmp
cwtl
mov
int3
lret
cmpsb
lcall
jg
int3
mov
mov
push
lods
and
sahf
mov
push
xor
jo
sub
xor
jne
aaa
sub
data16
adc
shrl
mov
sbb
mov
imul
add
push
jl
mov
inc
sub
fists
pop
cli
movsl
add
orl
loopne
sub
jl
push
in
repz
jo
dec
mov
push
test
xor
outsl
push
add
xchg
lahf
les
pop
add
add
in
faddp
jb,pn
scas
hlt
insl
and
jl
leave
mov
cmpsl
jl
sbb
out
jge
stc
mov
jo
add
hlt
subl
dec
fcmovne
mov
jno
test
es
adc
dec
out
adc
daa
mov
fwait
adc
add
aas
addl
mov
or
loop
xchg
scas
pmulhw
aas
test
push
jg
call
push
dec
xchg
dec
mov
mov
or
xor
sbb
cmpsl
jns
bswap
dec
push
and
incl
or
add
cltd
popa
into
push
test
fdivs
or
fsubl
lods
es
enter
mov
sub
popl
inc
test
and
loopne
add
mov
ret
fbstp
lret
aas
repz
pop
pusha
aad
xor
cmp
xchg
sbb
fldt
push
imul
mov
adc
sbb
mov
in
dec
cltd
iret
enter
aam
call
loopne
cltd
push
mov
hlt
cmc
fdiv
mov
arpl
sbb
dec
scas
stos
pop
xlat
sub
add
mov
xchg
mov
rclb
decb
movsl
push
push
mov
aad
repz
dec
loope
ljmp
add
shrb
xor
sub
outsl
jb
pusha
mov
fldenv
cmpsl
jecxz
cmp
out
and
push
pop
xchg
add
test
sub
jns
mov
jb
movsl
call
ffreep
add
clc
pop
push
and
icebp
and
mov
jbe
andps
bnd
ljmp
cmp
xor
nop
loopne
jecxz
and
dec
or
gs
out
out
inc
je
decl
lret
pop
jns
pop
stos
fidivl
fidivrl
dec
mov
sbb
push
test
dec
pop
xchg
movsb
cmp
fdivs
push
xor
cmp
or
mov
xchg
fcoml
mov
and
pop
xor
aad
enter
mov
and
pop
insl
nop
adc
cld
repz
lds
scas
jo
push
jg
imul
mov
aas
jg
sbb
sub
xor
xchg
push
adc
and
insb
sahf
dec
bound
dec
add
pop
cmp
mov
pop
cmp
cwtl
out
mov
mov
xor
adc
inc
inc
push
pop
out
jl,pt
xchg
lahf
xchg
rolb
fisttpll
or
sub
add
rolb
inc
fldcw
incb
xchg
adc
jmp
add
aad
mov
scas
push
mov
fsubrs
in
mov
daa
push
addr16
mov
cld
fs
fwait
adc
int
lock
xor
das
jecxz
jbe
sbb
int
mov
inc
ror
fsubrs
add
je
jle
jb
lahf
xchg
jnp
imul
xchg
les
outsl
cmp
jg
icebp
fcomps
int3
in
cmpsl
pop
jno
pop
mov
leave
out
push
adc
mov
loope
mov
and
inc
sub
pop
mov
enter
cwtl
jo
in
popa
stos
cmp
mov
dec
fistpl
add
icebp
or
ret
inc
dec
cld
sbbl
in
dec
pop
or
xchg
iret
imul
push
lea
inc
insl
inc
push
mov
push
mov
mov
sbb
subl
dec
inc
cltd
arpl
test
negb
test
push
jg
mov
scas
add
aas
mov
scas
jp
pop
movsl
mov
or
loope
shrb
imul
inc
jae
mov
mov
mov
imul
std
sub
rcrl
dec
jecxz
movsb
jnp
xchg
lea
xor
push
lret
cmc
jp
pop
mov
scas
pop
mov
popf
shrl
repz
inc
into
shr
jne
xor
ja
fstl
pop
cltd
cmpsb
addr16
out
xor
out
jb
add
mov
add
push
add
pop
out
inc
and
jecxz
int
xchg
lds
inc
fiaddl
leave
ja
cmpsb
xor
push
idivl
scas
ret
aad
cs
push
test
fisubs
imul
sub
loopne
shlb
xor
xchg
mov
mov
out
pop
xor
xor
fs
push
mov
pop
ds
dec
and
push
in
loope
pusha
andl
or
sbbl
out
push
push
pusha
jae,pt
push
xor
add
lds
das
enter
cmp
mov
pop
pop
push
cmovb
out
pop
sub
call
scas
stos
cmp
xchg
xchg
outsl
cmp
add
add
adc
aad
into
add
xor
popa
jmp
stos
mov
aaa
push
ja
out
xor
sub
inc
ret
call
jo
fstps
out
pusha
jb
sbb
dec
in
xor
dec
cmpsb
roll
adc
popa
push
mov
pop
mov
sub
cltd
sub
push
aam
enter
call
mov
rorb
xlat
jae
cmp
int
aas
fnsetpm(287
fsubp
leave
push
adc
jge
xchg
mov
stos
iret
inc
dec
fistps
cltd
bound
inc
hlt
insl
push
dec
and
jae
lds
pushf
insb
adc
ljmp
in
pop
in
out
xor
mov
insb
cmpsl
dec
dec
push
sub
test
fildl
xchg
gs
lds
or
mov
add
mov
lret
icebp
cli
outsl
dec
int3
push
jmp
sbb
sub
in
inc
fwait
arpl
dec
incb
dec
push
or
stos
enter
mov
mov
test
mov
sub
jmp
or
int
xchg
cmp
dec
cmc
mov
pusha
loop
iret
in
mov
fistps
or
inc
jns
loop
call
mov
xchg
mov
and
add
ds
mov
dec
neg
call
pop
test
and
bound
aad
lds
push
mov
lcall
das
and
hlt
aaa
mov
jnp
push
xchg
ss
sbb
jmp
rclb
dec
in
mov
and
sbb
or
fucomip
adc
sbb
es
pushf
jp
jnp
mov
xchg
xchg
subl
push
add
ret
fdiv
dec
add
mov
sub
sbb
jno
mov
int
inc
lods
xchg
jp
push
push
orb
add
lds
into
push
repnz
xchg
mov
xor
and
mov
add
jno
push
mov
es
xor
adc
out
out
scas
cmpb
push
jae
fwait
add
inc
push
mov
sbb
mov
outsl
push
and
repz
sub
jecxz
add
xor
dec
mov
xchg
imul
adc
mov
inc
sub
faddp
out
lds
xlat
xor
jb
mov
mov
lea
adc
popf
adc
xchg
hlt
xor
jmp
aam
cmpsb
sarb
inc
adc
jp
rcrb
out
in
mov
adc
int
xlat
mov
mov
adc
xor
cmp
and
cmc
js
push
lahf
mov
xchg
popf
outsb
jge
sub
shrl
test
test
shrb
ret
pop
test
insl
fucom
lret
pop
jg
mov
sbbb
rcrl
xor
lea
sub
repnz
push
cmp
adc
xor
xchg
add
jbe
xor
sub
repnz
mov
rcr
xor
xor
movsb
test
and
mov
inc
hlt
jp
inc
incb
ljmp
mov
adc
jnp
in
lds
mov
dec
cmp
andb
nop
sbb
ret
hlt
mov
out
push
dec
repz
leave
jnp
notl
sahf
push
in
mov
in
pop
jno
adc
dec
ds
sub
mov
mov
cmc
dec
xchg
mov
dec
fwait
push
jbe
aas
push
jp
sbb
ds
shlb
mov
cltd
sti
and
xor
adc
push
loop
pop
push
cwtl
movsl
jmp
cmpsb
movsl
fwait
push
inc
ljmp
fisttpl
outsl
jecxz
add
dec
repnz
jmp
test
pop
or
rcr
data16
push
outsl
cltd
dec
cmp
jne
mov
sahf
je
mov
stos
outsl
fcomps
adc
push
jmp
push
push
outsb
sub
or
je
add
jns
xor
push
ss
loopne
mov
aad
mov
stos
push
jmp
insb
pop
mov
je
pop
lds
or
jge
mov
scas
and
lods
or
or
add
aad
and
sbb
pop
xchg
xchg
lret
popa
or
pop
mov
pushf
cmpsl
jecxz
cwtl
inc
sahf
dec
sbb
scas
jmp
xchg
fs
dec
push
sbb
xlat
fistps
stos
jmp
adc
ds
fisttpll
xchg
lcall
push
inc
cmpsb
and
pushl
or
pop
cmpsb
in
xor
imul
in
inc
cmc
lcall
test
aad
dec
fs
mov
int3
push
mov
and
bound
mov
ret
and
popf
mov
xor
push
mov
pop
add
icebp
out
sbbl
dec
and
add
jae
inc
xchg
sub
ds
dec
jb
in
cmp
add
mov
jne
in
cmp
les
leave
pop
inc
mov
cs
lahf
push
push
scas
jnp
hlt
mov
mov
cmp
mov
stos
add
mov
iret
insb
push
popf
gs
loope
addr16
xor
push
mov
ja
enter
jbe
xchg
into
jp
cmpsb
mov
pop
cmpsb
fcoml
adc
mov
add
fdivr
arpl
dec
xchg
outsb
push
add
int3
stos
add
in
sbb
pop
dec
lds
outsl
fists
ficoml
idivl
xor
adc
cmp
aaa
sbb
cwtl
arpl
adc
testb
test
aam
cltd
sub
lcall
cmp
adc
adc
push
ja
add
das
add
mov
rolb
cmpsb
cmp
pop
or
cmpsb
xor
js
cmp
lds
mov
sbb
and
loope
cmp
mov
fistpll
jnp
scas
inc
dec
movsl
adc
sbb
mov
je
push
mov
pop
movsl
adc
cmp
loopne
pop
cwtl
dec
repz
out
notb
add
sub
aaa
sarb
out
jb
xchg
mov
in
mov
test
arpl
inc
popa
adc
sub
lret
mov
jl
push
mov
and
mov
in
xchg
and
in
test
mov
dec
cld
fs
jecxz
pop
arpl
pop
cmc
out
daa
sahf
dec
mov
pop
adc
bound
fs
lahf
push
ror
and
imul
dec
push
jp
mov
iret
shr
mov
mov
jl
xchg
mov
test
push
int3
cld
fdivl
mov
daa
sti
daa
stc
or
aad
jl
jne
scas
push
cltd
clc
jecxz
lahf
pop
mov
popf
push
xlat
pusha
lahf
adc
inc
fwait
pop
pusha
sahf
cmc
jnp
sub
inc
jo
fs
push
xor
bound
inc
adc
insb
cs
inc
and
pop
shlb
stos
ret
enter
inc
notb
in
mov
jecxz
pop
pop
inc
movsl
or
inc
test
mull
daa
fcom
pop
jns
cltd
lods
leave
arpl
lcall
mov
gs
nop
stos
push
push
pop
xchg
mov
stos
xor
lods
mov
outsl
popf
arpl
dec
lret
shrb
je
lock
cmp
inc
cmp
mov
pop
test
jecxz,pt
adc
lcall
mov
fsts
add
int
fistpl
and
sbb
fldcw
out
and
pop
movsb
sbb
lcall
sti
dec
xchg
adc
fdivrl
jae
out
inc
out
jecxz
pop
pop
xchg
pop
mov
loop
arpl
cwtl
mov
fcmove
shr
cmpsb
sti
outsb
out
jle
ja
lret
insb
jo
pop
push
jge,pn
jp
in
ficoms
mov
push
xor
mov
xor
enter
pop
mov
pusha
mov
mov
ljmp
fildll
sub
cmpsb
mov
dec
movsb
dec
dec
mov
mov
fldenv
jnp
pop
push
test
pop
scas
out
xor
movsl
das
push
adc
cmp
mov
cmp
clc
dec
sti
xchg
lock
inc
cmpsb
cmpl
sti
pmuludq
dec
cs
fidivl
mov
jo
jp
pop
xchg
mov
std
scas
fdivr
aas
insb
jle
adc
inc
in
cld
xchg
jp
lret
ficoml
mov
ja
mov
lret
jecxz
and
add
imul
arpl
imul
sbb
xchg
or
mov
xorl
push
mov
imul
cmp
int
adc
jmp
or
shlb
xor
hlt
mov
hlt
xor
fwait
xchg
stos
imul
dec
push
adc
xchg
push
cli
mov
std
sbb
addb
cmp
jnp
pusha
ret
xchg
adc
add
movsb
xchg
cltd
sti
dec
js
lods
ja
mov
hlt
cmpsl
loop
sbb
fcmovnu
arpl
enter
xchg
jge
cmp
ljmp
or
and
scas
jno
push
subb
movsl
repz
test
cmpsl
mov
movsl
and
mov
not
xor
add
mov
sub
xor
fs
mov
push
je
pushf
cmp
mov
nop
dec
leave
ds
xchg
testb
mov
lret
inc
sub
pushf
push
sub
scas
xor
repz
mov
jmp
cmp
xor
pop
repz
xchg
shrb
bound
inc
push
lret
in
mov
fs
cmovle
stos
call
loop
popf
insb
mov
imul
sahf
push
sub
mov
popf
out
pop
iret
sahf
cwtl
jne
je
push
jnp
ss
add
addr16
addl
xor
inc
sub
push
push
movsl
or
inc
std
push
aam
mov
mov
inc
mov
mov
rcll
inc
mov
xchg
pop
imul
cld
mov
sub
push
aad
rcrl
sub
test
imul
sbb
insb
sub
ss
outsl
sub
call
or
sub
pop
and
orl
or
in
mov
divb
mov
dec
insl
fcomip
sub
adc
add
xor
insl
xor
mov
mov
cmp
sub
xorb
icebp
dec
mov
xchg
add
push
xor
scas
stos
cmpsb
jg
cld
fcmovbe
pop
shl
dec
clc
negl
push
out
cld
mov
sbb
popf
lds
xchg
mov
inc
push
ljmp
fisttps
cmp
repz
sbb
fs
daa
xchg
fisubs
cmpsb
and
adc
mov
enter
jnp
mov
test
pop
testl
or
and
shrl
sub
sbbl
aas
add
inc
fidivl
adc
mov
push
mov
loop
jl
ss
inc
movsb
ret
ret
xor
add
repnz
subl
push
pop
test
mov
dec
lret
enter
fs
or
int
aam
in
cmp
sub
cmc
test
dec
int
lret
lods
mov
gs
or
adc
cmp
add
jmp
pop
std
dec
lock
icebp
mov
ror
ret
or
xor
mov
add
jne
ja
insb
icebp
daa
push
fildll
adc
dec
cmc
loop,pt
stos
sub
outsb
outsb
das
pop
xchg
pop
cltd
subl
jp
cltd
leave
mov
sbb
mov
aad
scas
aas
xchg
enter
xor
xor
ret
mov
mov
jnp
dec
insb
mov
mov
scas
test
push
jmp
pop
repz
test
sbb
and
iret
neg
jmp
xlat
dec
add
rcrl
outsb
jo
add
mov
pusha
sub
sub
test
stc
sbb
jo
fwait
or
xchg
ret
sbb
ret
int3
pop
adcl
rolb
popf
mov
push
jge
xchg
fildll
nop
xchg
inc
push
add
jmp
shrd
ss
mov
lahf
in
lods
ficompl
cmc
pop
inc
out
adc
jmp
aad
aam
adc
outsl
inc
mov
cmp
insl
leave
and
adc
loop
mov
ss
jecxz
cmpsb
lock
rcrl
shll
adc
nop
shrb
push
inc
or
out
rcl
fadds
sbb
sub
sub
call
cmpsb
push
fmuls
cltd
xchg
pop
pusha
jno
ss
aaa
fildll
mov
xor
fsub
jge
mov
leave
jbe
lret
movsl
stos
sbb
int3
loopne
bnd
pusha
ficoml
or
sarb
inc
repnz
jmp
mov
lods
inc
rol
ret
inc
gs
adc
je
pop
test
lea
mov
mov
dec
jle
ret
lret
xchg
mov
mov
or
adc
lret
dec
push
arpl
push
popa
push
sub
xchg
nop
xchg
test
movsl
add
pop
es
push
pusha
xor
das
mov
iret
inc
mov
inc
push
mov
dec
and
xchg
and
sbb
sub
decb
sub
xchg
out
mov
adc
push
lds
inc
orb
in
data16
mov
test
lahf
mov
push
jg
jl
sbb
lret
xchg
dec
lods
fwait
sahf
repnz
jg
ret
push
mov
pop
cmpsb
jbe
or
fs
subb
aas
scas
and
or
dec
test
dec
orb
lret
pop
dec
xchg
mov
push
fmuls
cmp
imul
icebp
dec
sbb
test
in
add
cli
in
pop
push
aam
gs
out
cli
cmp
pop
cli
cltd
mov
mov
add
jns
pop
and
fcmovu
mov
jp
pop
push
call
mov
sbbl
pop
push
out
inc
icebp
cmpsl
popf
in
cmp
repz
loope
andl
fadds
test
aad
mov
sub
cmp
dec
enter
sarl
push
dec
mov
aam
inc
xchg
sbb
xchg
dec
lods
or
scas
adc
call
test
cli
outsl
cwtl
subb
cmp
mov
mov
ficoms
pop
test
and
stos
addr16
push
and
mov
insl
xor
jmp
lret
mov
sbb
and
push
rcrb
arpl
pop
ds
mov
rcrb
mov
sbbb
xor
pop
push
dec
arpl
dec
mov
cld
cmp
mov
xor
loop
mov
xor
jne
arpl
xor
test
dec
and
pushf
cwtl
cmp
push
fidivrl
dec
call
pop
dec
mov
jl
mov
nop
incl
data16
mov
stos
repnz
out
ss
dec
pop
movsl
out
ret
in
std
add
imul
xor
out
pop
daa
or
push
ret
stos
mov
mov
rclb
jnp
pop
pop
mov
push
xchg
jg
lret
adc
dec
push
je
hlt
jns
in
xchg
jo
add
loope
aaa
aad
dec
xor
mov
push
jb
adc
inc
inc
cmp
loopne
pop
adc
mov
and
fisubrl
pop
or
mov
cltd
mov
sbb
sub
fildll
dec
sbb
push
mov
stc
lock
add
push
outsb
pop
dec
mov
insb
and
jnp
pop
cmpsb
xorl
mov
les
rolb
xchg
xchg
jns
das
dec
mov
movsl
pop
dec
fs
jl
lahf
sti
std
pop
lret
out
cmp
push
and
inc
add
mov
sahf
std
xchg
xchg
cmc
subl
rcll
push
cmp
push
inc
jno
imul
mov
mov
rorl
cmc
mov
shl
inc
pop
xchg
sub
sbb
cli
lea
add
aam
pop
lahf
in
xor
les
cwtl
adc
into
andl
pop
sbb
sbb
hlt
lds
ffreep
in
jle
add
mov
outsb
pop
xor
mov
dec
jp
nop
lea
sti
sbb
jecxz
push
and
pop
or
fsubs
daa
cltd
mov
scas
xchg
in
and
inc
incb
xor
push
lock
shll
mov
sub
gs
or
jb
pop
dec
ja
call
pushf
add
cmc
sbb
hlt
inc
and
inc
call
push
xlat
dec
cld
cwtl
inc
xor
cmp
das
pop
js
add
mov
jecxz
insb
dec
jo
insl
std
movsl
fistps
int
pushf
sub
loopne
xorb
fadd
mov
or
loope
stc
scas
gs
pop
pop
add
push
test
popf
icebp
mov
cmova
js
imul
arpl
mov
popf
mov
dec
in
jecxz
out
xchg
push
das
sbb
push
xor
cmp
jae
mov
test
pop
out
xor
inc
mov
stos
mov
dec
jno
out
jle
jp
adc
ds
pop
mov
loopne
repnz
in
fidivl
sbb
mov
and
out
loope
pop
cwtl
dec
js
into
jge
jno
inc
mov
push
jbe
sub
sub
jns
clc
or
adc
and
fsubr
test
call
test
mov
fsts
nop
mov
jl
pop
popf
xor
sbb
and
xchg
xor
fmuls
call
out
mov
popa
call
inc
adc
imul
inc
adc
lods
dec
sub
inc
xor
mov
add
xor
mov
mov
mov
mov
movsl
lods
adc
sub
pop
jbe
inc
popf
xorb
mov
test
cmc
jnp
outsb
mov
aaa
xor
fisttpl
lcall
aas
mov
sbbl
call
aad
lock
test
and
jp
popf
jno
in
pop
popf
mov
lret
jb
cltd
aas
mov
cmpsb
push
inc
jbe
and
rclb
jns
cmpsb
inc
or
leave
stos
lret
sub
dec
cltd
test
cmp
cld
ficoml
shrb
add
test
xor
sbb
mov
int
sahf
inc
mov
mov
pop
cli
adc
je
push
out
cmp
xor
mov
dec
push
mov
xchg
push
jmp
add
movsb
sbb
out
push
rcll
stc
inc
rcl
shrl
std
lcall
call
lds
aad
movsb
testw
and
div
ret
pop
or
ret
inc
mov
push
out
jmp
rcrl
fwait
push
sbb
scas
inc
jne
jecxz
and
mov
repz
jno
jne
test
cwtl
or
inc
adc
or
sbb
aas
cmpsb
ror
and
call
cmpsl
iret
push
and
sahf
xor
in
cmp
pop
pop
in
jnp
jmp
dec
sub
loopne
xchg
sti
out
mov
test
xor
cwtl
push
xor
mov
in
xchg
inc
and
into
testb
inc
mov
xchg
push
push
adc
test
or
and
subl
cmc
or
mov
pop
aaa
insl
dec
lcall
mov
leave
mov
notl
pop
iret
mov
adc
jbe
outsl
ds
jno
fistps
pushf
and
xlat
negb
push
frstor
aam
repnz
add
divl
dec
daa
pop
push
lock
fnop
mov
or
lds
dec
repz
shlb
insl
jo
pop
das
mov
pop
dec
cmp
sbbb
fcompl
pop
xor
imul
imul
pop
add
inc
add
mov
iret
addr16
mov
call
adc
push
mov
jns
cwtl
outsb
cld
mov
sbb
mov
cmp
dec
mov
pop
mov
shrl
inc
stos
or
std
pop
ja
mov
fdivrs
push
mov
incb
fwait
push
xor
jno
mov
cmp
std
jb
pusha
add
lret
insb
rcrl
sbb
mov
dec
andl
fs
es
popa
repz
call
stc
pop
jnp
mov
outsl
ja
lods
cmp
ljmp
add
outsl
fst
lea
jns
mov
pop
cs
mov
sbb
aam
dec
cmp
mov
stc
add
dec
lods
aam
leave
ss
adc
sbb
mov
push
ret
sbb
pop
or
dec
sub
pop
ljmp
lret
sub
inc
xchg
lds
cltd
adc
mov
lods
shlb
cwtl
repz
and
ret
loop
jecxz
addr16
iret
inc
fldenv
adc
les
outsl
sub
jge
sbb
ret
cmpsl
ret
insl
add
out
xor
mov
xchg
iret
mov
aam
and
mov
dec
mov
fisttpll
mov
xor
scas
in
dec
dec
jb
les
outsl
test
mov
fsts
push
dec
cmc
cmp
cmp
rorl
ret
call
std
dec
xchg
or
sub
xchg
in
xchg
sarb
les
dec
scas
aam
es
aad
rorb
loop
pop
cmc
push
in
mov
or
inc
xor
mov
pop
cli
sub
and
data16
push
mov
adc
jb
or
jbe
adc
js
inc
push
cmpl
clc
mov
cmp
sbb
mov
dec
pop
adc
and
adc
mov
loop
call
or
jae
add
push
stc
int
ja
addb
xchg
scas
fpatan
imul
push
scas
mov
push
scas
push
dec
dec
mov
int
je
ss
repnz
sub
push
icebp
xor
ret
cmpsl
sub
shll
add
inc
mov
mov
in
push
test
push
cs
das
mov
fcomps
rcrl
data16
add
pop
xchg
hlt
pop
das
lock
and
pop
cltd
add
idivl
xor
test
subb
jns
pop
push
cmp
jge
xchg
pop
imul
jb
bound
movsl
movsl
mov
dec
inc
mov
mov
icebp
inc
addl
mov
jl
sahf
xchg
in
js
orl
jle
test
jno
pushf
lahf
ljmp
imul
pop
pushf
inc
insb
mov
pop
add
jae
xor
push
test
pop
jns
call
mov
push
pop
ljmp
xchg
dec
pop
add
dec
call
inc
adc
aas
or
mov
es
shrl
jg
mov
xlat
imul
mov
xor
mov
mov
xchg
lock
mov
bsr
std
sbb
sbb
mov
xchg
mov
in
pushf
stc
mov
xor
addr16
fistpl
cmpsb
jb
into
push
push
sub
sub
insb
popl
xchg
xchg
dec
and
jmp
mov
adc
lds
ret
ret
mov
adc
mov
mov
ds
sbb
fimull
mov
sbb
sti
les
jmp
dec
mov
mov
push
fidivrl
dec
shll
sbb
cli
cmpsl
push
inc
mov
shl
jb
out
xchg
push
add
lds
icebp
xor
xlat
pop
xlat
push
jmp
cmp
push
xor
cmp
in
mov
sbb
jecxz
in
lcall
add
mov
push
dec
cli
adc
pop
sbb
mov
lret
aas
cmova
incl
or
sarl
jnp
inc
jmp
sbb
push
and
sahf
sub
int
xchg
sub
pop
mov
sbb
rolb
int
pop
mov
mov
mov
sbb
inc
jo
jo
jnp
push
xchg
xor
int3
push
add
inc
iret
int
cwtl
mov
mov
xor
dec
xchg
shll
sbb
icebp
xchg
lret
xchg
adc
std
repz
fisubl
cltd
in
lcall
adc
loop
cmpsl
xlat
inc
mov
out
add
sti
popa
mov
add
repz
and
adc
std
xor
jns
cmp
push
scas
add
fsubrs
pop
into
setg
mov
scas
add
push
cli
mov
xchg
lock
test
push
mov
sbb
pop
test
addr16
jbe
out
jmp
mov
lahf
neg
cld
pusha
js
test
mov
je
scas
add
int3
iret
cmp
and
and
adc
or
lods
roll
or
jge
or
popa
cmp
inc
or
or
mov
dec
faddl
lds
mov
in
lea
lcall
mov
stc
pop
mov
repnz
xchg
je
push
xchg
ret
jg
dec
in
cmpsl
imul
cli
mov
pop
idivl
inc
xor
sub
pop
adc
xchg
xor
and
fstps
mov
xchg
mov
xchg
sbb
dec
dec
jp
xor
mov
ss
js
sbb
in
popf
push
xorl
rcr
inc
mov
inc
mov
and
pop
cltd
scas
jg
sub
or
imul
sbb
rolb
ds
push
sbb
out
and
cwtl
xor
dec
cwtl
movsb
push
jbe
mov
fcompp
xchg
test
or
repnz
testb
push
dec
adc
and
ss
cli
pusha
mov
lds
js
pop
mov
arpl
popl
add
or
jl
loopne
mov
xchg
cmpsl
out
inc
xchg
stos
test
mov
mov
and
and
dec
inc
pop
xorb
lods
movsb
jecxz
and
shrb
test
lret
jns
out
test
jmp
cli
inc
movsl
and
cmc
inc
pop
and
sahf
fisubl
add
push
and
lea
sahf
hlt
mov
push
xchg
fcmovnu
add
movsb
mov
adc
dec
popf
adc
jnp
add
lret
jp
sbb
int
pusha
add
mov
jb
jle
xor
addr16
into
lahf
xchg
mov
xor
xchg
shrl
ss
jae
pop
clc
fucomi
lods
adc
cmp
and
arpl
shrb
repz
in
add
jmp
push
dec
dec
aam
mov
push
sub
mov
test
dec
sub
jecxz
adcl
or
xchg
add
sahf
lcall
stos
mov
out
mov
hlt
stc
mov
dec
sbb
stc
inc
and
in
scas
jne
mov
ficompl
or
out
and
mov
frstor
push
sbbl
daa
mov
call
fiaddl
dec
loopne
cmpsl
pusha
or
shlb
push
adc
mov
fidivrs
and
out
jmp
add
orl
jecxz
mov
nop
sub
jo
inc
hlt
addr16
lock
pop
mov
bound
cmovp
test
test
in
pop
mov
push
nop
test
pop
inc
aam
jo
mov
push
sub
mov
xchg
idivb
mov
mov
test
sbb
push
cld
xor
mov
fimull
loope
sbb
enter
or
ret
pop
pop
sbb
pop
lahf
jae
inc
sbb
jae
shrb
lret
pop
xchg
enter
jmp
test
dec
xchg
movsl
shll
repnz
cmpl
ret
ret
dec
lock
popf
aaa
dec
pop
mov
mov
add
mov
mov
sbb
push
jno
xor
es
jns
add
sub
xchg
test
jmp
add
cmp
into
lret
cmc
cmp
mov
ljmp
jmp
sahf
inc
orb
push
mov
stc
movsb
in
jle
cmp
movsb
pop
test
scas
push
and
cmp
ds
xchg
andb
dec
cmc
jns
or
test
add
lock
cmp
repnz
xchg
jb
add
rcr
inc
sti
mov
lods
pop
scas
push
int3
add
out
or
pusha
mov
push
ret
adc
push
push
imul
dec
fimuls
pushf
aas
clc
pop
insb
mov
outsl
sbb
push
call
mov
and
lea
xor
shll
xchg
into
cltd
and
dec
lret
fwait
add
mov
inc
mov
xor
inc
cmp
stc
das
shrb
scas
push
xchg
outsl
clc
in
les
sti
push
lret
ret
xor
or
pop
add
popf
jmp
lahf
imul
nopl
jecxz
movsb
in
inc
sbb
movsb
or
movsl
dec
icebp
in
xchg
mov
cmpb
jns
js
inc
data16
sbb
popf
mov
jo
mov
mov
scas
ss
lock
pop
cs
int3
xor
pop
inc
jecxz
mov
aas
xchg
loopne
das
data16
xchg
into
push
cmp
mov
sbb
int
call
push
loopne
xchg
adc
xchg
les
movsl
leave
cmp
test
pop
pop
mov
lea
xor
or
or
pushf
fdivp
cwtl
decb
mov
mov
dec
negb
imulb
les
daa
ja
pop
adc
jg
test
mov
arpl
mov
xchg
test
or
add
jo
rdmsr
movsl
sub
push
jbe
mov
cmp
arpl
mov
cmpsl
lods
mov
pop
add
sub
iret
movsb
aad
cmpsb
iret
addr16
test
mov
std
cli
movsb
das
out
dec
jl
cld
push
sub
pop
mov
shll
movsb
xchg
aad
and
push
sub
gs
push
rcl
enter
mov
movsb
sahf
ljmp
mov
mov
repz
les
in
test
dec
repnz
pop
jno
xchg
inc
jno
adc
mov
jne
jmp
push
fisubrs
add
dec
in
pop
pop
je
add
lcall
cmp
and
je
int
inc
mov
pop
sub
lahf
addl
arpl
lods
add
rolb
and
enter
das
sub
jmp
jnp
mov
dec
push
push
cld
mov
jbe
or
out
jg
ljmp
loope,pn
push
dec
sti
pop
dec
scas
sub
jg
in
add
pop
mov
jne
out
mov
or
mov
pop
and
mov
dec
scas
jmp
bound
jl
ds
lret
sbb
or
inc
ljmp
and
adc
inc
and
or
jecxz
shlb
push
pop
scas
cmp
shll
mov
mov
adc
jl
mov
and
fs
adc
ret
inc
bound
mulb
jne
jge
adc
popa
or
push
add
pop
jle
shll
movsb
and
sbb
sub
mov
notb
repnz
test
loop
mov
inc
lds
inc
jo
out
mov
iret
cwtl
adc
rorl
call
das
xchg
sti
pushf
es
std
lds
ret
jae
into
movsl
test
jno
and
add
in
stos
pop
mov
iret
sub
dec
inc
cmc
stos
jge
nop
dec
and
push
dec
int3
xchg
mov
repz
pop
popf
into
jae
or
popf
mov
movsl
arpl
cmp
sub
leave
lods
addr16
pusha
jmp
inc
or
leave
test
cmp
cmp
mov
outsb
mov
fbld
dec
loopne
pop
mov
arpl
enterw
jg
pop
xchg
push
sbb
roll
push
aam
push
aam
jg
jg
dec
sbb
inc
cwtl
lods
cwtl
sub
test
sbb
int
inc
arpl
cmpsb
icebp
out
mov
out
stc
xchg
pop
lahf
lock
mov
mov
out
mov
test
jecxz
mov
mov
stos
cltd
push
in
imul
fwait
add
add
cs
dec
xor
imul
pop
fsubs
xchg
dec
pop
arpl
fiaddl
push
out
lea
inc
les
sahf
loop
dec
or
js
cmpsb
xchg
push
jg
lods
ret
sbb
sbb
fmuls
insb
jns
pusha
bnd
adc
and
js
dec
stos
dec
push
xchg
in
lods
lahf
add
jg
sub
aam
mov
and
es
cmp
out
stos
ss
inc
les
mov
pop
xchg
faddl
std
stos
inc
cwtl
dec
repz
mov
loop
scas
out
cld
mov
inc
push
rolb
mov
adc
pop
ja
pusha
lcall
cmp
fstpl
and
dec
and
jns
add
int
orl
aam
movd
mov
rolb
add
ss
xor
jmp
notb
lret
hlt
lods
and
or
gs
jl
and
data16
or
aaa
xchg
aaa
loope
lgs
and
fisubrl
pop
andl
xor
mov
push
adc
mov
lods
cmp
and
lret
sbb
and
fs
jle
fldcw
and
shrb
sbb
scas
lods
subb
push
loope
lret
test
aas
pop
adc
adc
aam
ja
fnstsw
xchg
stc
data16
pop
jecxz
dec
push
sbb
cs
mov
jl
jns
dec
pop
cmp
dec
xchg
mov
add
sub
into
rcll
mov
lcall
into
rclb
mov
xor
push
mov
ljmp
mov
aaa
adc
mov
adc
sbb
subl
fldl
ficoms
in
cmp
jmp
imul
mov
lret
movb
mov
mov
pop
out
jmp
jno
je
cld
or
dec
mov
rcrl
daa
test
lods
mov
insl
test
cld
or
test
cmpsb
cs
leave
stos
dec
xchg
mov
cmp
mov
xor
out
inc
lds
scas
cpuid
push
mov
push
movsb
sub
mov
jecxz
clc
sub
inc
in
xchg
inc
insb
push
mov
out
popf
push
jo
out
pop
clc
sbb
mov
xlat
push
sbb
sub
dec
dec
cmp
mov
addr16
lret
mov
adc
push
jbe
push
sub
push
insb
fbstp
sahf
idivb
adc
jmp
out
xchg
sbb
inc
inc
jno
das
aad
add
mov
and
inc
pop
imul
pushf
or
jo
sbb
daa
lods
xchg
xor
lock
jmp
rcr
push
aas
jmp
scas
lahf
inc
mov
jecxz
aad
call
dec
clc
scas
repz
inc
inc
sbb
jg
insl
and
les
mov
nop
pop
inc
or
cmp
or
cld
pop
rcrl
mov
in
lock
or
mov
sahf
leave
xchg
inc
mov
cmp
sub
fdivrs
inc
scas
arpl
test
lret
out
daa
sbbb
inc
adc
lahf
xchg
jl
rorb
mov
xor
xchg
test
lret
scas
mov
mov
xchg
push
je
lea
push
cmp
in
out
dec
push
rcr
jle
sbbl
mov
pop
popl
adc
loope
sub
mov
imul
cld
scas
xor
std
mov
sbb
or
xchg
movsl
lds
ja
cmpsl
rcrb
or
push
xchg
movsb
out
ds
int
sub
out
xchg
cmp
sti
lret
add
xchg
hlt
dec
and
icebp
add
push
in
jmp
movsb
adc
imul
sbb
mov
insb
push
push
jo
rol
test
repnz
xchg
add
lods
pop
and
rcrb
out
jb
out
ja
xchg
ficomps
sbb
cli
ret
xor
ljmp
clc
cmp
stos
push
sbb
mov
shrb
push
das
xchg
test
incb
xor
loopne
inc
fidivs
lock
fildll
test
mov
xchg
or
adc
mov
inc
outsl
inc
pop
ffreep
inc
mov
roll
fsubs
sti
je
test
jg
and
mov
aam
and
xor
adc
mov
icebp
sti
imul
inc
test
rorb
push
add
fldcw
mov
jl
pop
add
xlat
enter
mov
sahf
mov
cmp
dec
xchg
add
aam
dec
dec
jne
les
sub
mov
andl
push
push
lods
push
dec
pop
stos
in
jmp
in
or
cmpsl
out
in
push
jbe
lds
lds
sub
inc
dec
dec
xchg
push
jns
mov
je
in
lods
jle
and
push
pop
push
in
lods
cmp
add
adc
xchg
imul
cmc
xchg
pop
lods
inc
and
pop
xlat
ds
sbb
push
mov
mov
and
xchg
insl
and
jecxz
xor
or
push
ss
xlat
jecxz
pop
inc
add
cld
dec
sub
fsubs
pop
pop
jbe
add
push
dec
sbb
clc
pop
fidivs
je
jg
stc
jl
xchg
rep
pop
sub
inc
rorl
jae
sahf
comiss
mov
clc
sub
sbb
cmpsl
bound
negl
cmp
call
xor
addr16
subb
sub
mov
cmc
pushf
shlb
mov
mov
daa
stos
xchg
jne
lea
push
pop
sub
xor
not
xor
popf
inc
jnp
jb
jno
scas
pop
jnp
push
mov
cwtl
inc
mov
outsb
testl
sbbb
jecxz
or
std
pushf
fisttpll
mov
push
fwait
lahf
mov
or
iret
inc
cli
stos
xor
mov
mov
inc
mov
das
xor
sbb
insl
push
add
pop
hlt
and
mov
mov
ret
cmp
movsbl
jne
stos
push
and
fisubrs
fidivrs
xor
out
jge
xchg
add
ret
xchg
xchg
mov
hlt
inc
xchg
int3
data16
sub
sbb
test
and
cld
cmc
scas
adc
pushf
mov
lret
iret
xlat
xor
stos
inc
sar
mov
adc
adc
cmp
popf
push
mov
sub
or
sbb
inc
je
xchg
into
mov
sbb
xchg
icebp
adc
stos
mov
xchg
mov
ja
aaa
sbbb
inc
xlat
push
or
dec
jecxz
jl
push
cmp
cmp
push
into
mov
lret
aad
in
jg
daa
dec
inc
sbb
gs
push
testl
scas
test
test
mov
push
jne
dec
cli
addr16
and
push
pop
mov
adc
and
mov
sbb
das
in
lret
jp
mov
data16
pop
xlat
xorl
add
outsb
cmp
add
cmp
insb
aas
das
jl
notb
shrb
stos
hlt
pop
js
jp
dec
pop
les
and
push
xchg
push
cmpsb
js
pop
fsts
mov
mov
or
fstp
cmpl
jns
in
sub
cmpsb
call
jns
push
iret
lock
icebp
outsl
loope
test
scas
adc
adcl
jo
or
jbe
outsb
lods
adc
rcl
ss
mov
mov
xchg
mov
testl
int
pop
jae
lret
mov
movsl
dec
lea
aas
rcrb
cltd
mov
sbb
addr16
imul
out
mov
ret
push
out
or
lret
mov
dec
inc
lds
pop
cmp
push
in
test
xchg
stc
es
rcrb
adc
pop
lcall
imulb
mov
mov
sbb
hlt
outsl
or
pop
repz
mov
fisubl
scas
loope
in
jg
cli
xlat
cmpsb
shrl
daa
cmp
xor
leave
iret
aaa
and
pushf
xchg
jne
gs
xchg
cltd
pop
shll
cltd
jmp
outsl
pop
sub
dec
cmp
int
adc
lret
xchg
loop
xlat
or
lods
cltd
je
inc
aas
outsl
and
pop
add
adc
pop
and
repz
xchg
cmp
das
std
and
lcall
iret
iret
movsb
pop
pop
sub
cli
cmp
into
xchg
pusha
iret
out
fbstp
lea
cmp
cmc
mov
or
sbb
stos
sbb
cmc
mov
inc
lock
cmpb
shll
add
xchg
in
add
sarb
xor
movntps
lret
ja
cwtl
jnp
dec
sub
jae
inc
pop
fiaddl
enter
sbb
mov
popa
test
dec
inc
push
pop
fucomp
pop
daa
inc
adc
xchg
std
popf
sub
les
sub
or
mov
adcl
in
outsb
daa
sbb
inc
push
in
add
mov
or
push
js
cwtl
mov
jecxz
repz
ljmp
dec
xor
pop
mov
pushf
or
test
pushl
pusha
fsubrs
push
and
loope
mov
and
test
insb
mov
std
out
add
call
mov
pop
sbb
fisttps
sarb
cld
rclb
ret
lea
xchg
imul
nop
inc
outsb
dec
pop
mov
add
ja
add
jbe
add
add
lcall
test
push
imul
mov
dec
testl
mov
das
push
or
test
sbbl
out
sbb
imul
cmpsb
pop
test
jp
je
call
ret
inc
ret
xor
pop
testl
daa
loopne
cli
cmpsb
cmpsb
jp
mov
cmpsb
cmp
in
ja
cld
lods
dec
xor
testl
jge,pt
adc
mov
sub
pop
jl
scas
push
jns
jb
xor
dec
push
out
mov
inc
pop
sub
sbbb
xor
jle
imul
decl
mov
aam
mov
mov
mov
loopne
pushl
int3
sbb
jnp
mov
leave
imul
movsb
lcall
mov
xor
js
mov
sub
sarb
shll
lahf
jecxz
icebp
xor
dec
insb
add
pop
aad
add
mov
and
das
cmp
rcrb
pop
shl
pusha
es
dec
push
lahf
repnz
ja
mov
subl
dec
lret
mov
add
cltd
fcmove
dec
jge
mov
pop
inc
test
jb
cmp
mov
or
stos
xchg
aas
stos
dec
scas
or
add
mov
out
mov
aas
popl
scas
xor
jbe
rcll
aaa
lds
mov
aad
push
pop
sbb
scas
push
fwait
mov
or
jecxz
and
daa
sub
dec
lods
push
xchg
mov
jno
xlat
sbb
in
push
nop
sub
jns
scas
daa
cmp
add
push
adc
xchg
push
dec
mov
xchg
jns
jl
cmp
pop
leave
and
popa
sbb
stos
and
jge
out
and
cltd
cmp
jmp
jb
je
daa
or
bound
test
in
test
in
pushf
repnz
movsl
jecxz
sub
cltd
mov
cmpsl
arpl
out
icebp
push
into
jle
jge
shl
rorb
cmp
jnp
stos
hlt
clc
outsb
fld
pusha
adc
dec
sbb
xor
mov
sub
push
inc
int
mov
push
fisubs
cmc
into
or
testb
fisubrs
jnp
cli
sahf
loopne
xor
data16
mov
ss
data16
repnz
lret
test
push
mov
mov
sbb
pop
insl
div
mov
mov
jge
xor
push
adc
loop
fstps
xchg
divb
mov
cs
rclb
aaa
xchg
mov
cmp
shll
mov
inc
sbb
lahf
mov
pop
sub
lahf
pop
mov
xor
mov
insb
adc
add
add
outsb
pop
xchg
repz
dec
orl
mov
add
cmp
stos
push
sub
fsubl
es
xor
mov
lods
test
int
mov
or
movsl
pop
mov
xor
divl
popf
push
cmpb
inc
push
aas
std
std
imul
sub
sbb
jl
adcl
push
add
in
push
daa
insb
into
setg
xchg
es
ljmp
cmp
mov
add
loopne
mov
shll
xchg
jg
xorl
pop
idiv
add
cmp
scas
test
cmp
repnz
clc
mov
in
or
sahf
adc
inc
cmp
add
mov
cmp
xor
sar
in
enter
pop
xor
test
in
cmp
nop
in
cwtl
stos
lahf
mov
mov
jle
nop
sahf
cwtl
mov
fnstcw
inc
inc
adc
out
add
jg
inc
movsb
sub
aam
rcr
shrl
inc
xchg
dec
lds
out
lcall
or
incb
cmp
jo
imul
sbb
mov
jns
or
lods
aam
mov
int3
fiadds
xchg
adc
and
outsl
mov
jns
add
pop
cmp
add
pop
add
mov
enter
shll
push
sbb
fstpt
fwait
shrl
in
ret
rorl
fimull
push
mov
or
test
outsb
mov
pop
mov
out
out
dec
push
add
js
pop
or
into
push
aas
sbbb
mov
ljmp
cmpsb
dec
or
je
js
fwait
jno
fadds
loope
es
je
add
inc
xchg
sarl
mov
dec
or
pop
and
out
or
out
jne
icebp
xor
enter
fsubrs
pop
add
sub
movsb
push
daa
imul
pop
jge
ljmp
mov
dec
push
or
xchg
xchg
mov
push
inc
cmp
cli
cmpsb
and
aas
push
or
lret
adc
shrd
lock
cmp
imul
sub
imull
and
into
sbb
adc
data16
clc
mov
mov
push
je
loop
inc
out
stos
pop
xor
inc
imul
js
rcrl
out
jp
dec
and
maxps
nop
mov
shrl
jo
add
push
adc
dec
into
mov
fidivrl
shrb
mov
jle
sarb
daa
fwait
rorb
out
test
test
outsb
and
into
dec
scas
xchg
xor
filds
enter
pop
aaa
jecxz
adc
jo
divl
mov
mov
inc
cmp
sbb
push
ljmp
sbb
and
gs
inc
popa
jnp
push
lret
dec
mov
jnp
insl
xor
jp
and
pop
ljmp
arpl
xchg
aas
aas
mov
out
pop
jecxz
cmp
mov
lcall
xor
mov
jns
pop
andl
xor
xor
and
jnp
or
lahf
xor
mov
or
shrb
lods
inc
push
test
pop
dec
push
lret
jl
fsub
push
adc
jbe
pop
jp
loope
xchg
push
pop
clc
ja
lcall
enter
lret
sahf
xchg
shlb
and
xchg
mov
mov
adc
xor
adc
stos
std
out
lds
fldenv
xor
lock
add
xor
or
inc
cld
insb
dec
sbb
cwtl
scas
call
lcall
xchg
test
xor
pop
add
mov
dec
iret
rorb
shrl
inc
repnz
push
into
mov
ss
fisubl
inc
pop
stc
rcr
in
into
push
push
nop
pop
adcb
cmpsb
mov
jl
mov
mov
mov
aad
ja
sbb
outsb
nop
push
lods
or
pop
sbb
gs
mov
push
ljmp
jl
mov
cmp
dec
inc
out
imul
sub
sbb
cmpsl
cs
outsl
mov
sbb
mov
test
and
enter
adc
cld
loop
jmp
loop
clc
rcll
mov
sbb
aam
out
lcall
sub
sbb
movsb
aad
pop
jbe
jne
data16
dec
mov
adc
push
cwtl
stos
jnp
roll
gs
push
mov
sbb
pop
sbb
pop
cmp
nop
sbbb
jbe
mov
lret
mov
push
cmpsl
pop
in
loopne
fs
mov
lcall
xchg
push
adc
addr16
mov
mov
xchg
mov
ret
xchg
mov
sahf
movsb
mov
mov
inc
mov
pop
mov
pop
rcll
ds
lock
je
cld
push
ja
cmpsl
fcoms
fbld
mov
or
or
sbb
push
testb
add
adcb
sbb
repz
pop
outsl
dec
jmp
nop
pop
sbb
lods
test
mov
jp
mov
and
sbb
or
adc
mov
mov
mov
hlt
add
out
jp
xchg
ret
insl
cmp
xchg
fcoml
es
fnsave
andb
imul
xor
jo
xchg
and
add
jae
test
dec
inc
or
popf
cmpb
sbb
mov
push
sbb
sbb
push
ror
ret
dec
movsb
dec
add
insb
jge
ror
pop
push
or
pop
in
add
lret
jmp
je
sub
push
push
or
mov
arpl
add
inc
ret
xchg
jmp
aad
mov
dec
mov
mov
cmp
es
xlat
aam
sbb
cmc
mov
into
jecxz
orb
out
stc
in
pusha
push
das
push
or
pop
test
xor
adc
das
ret
aas
ja
and
pop
add
pop
sub
cmp
incl
ss
push
xchg
jge
jle
xor
xor
mov
jmp
ret
fnstcw
popa
outsl
push
fnsave
or
stos
add
lahf
dec
hlt
ss
enter
adc
lea
rorb
aad
sti
orb
sarb
and
push
jnp
pop
xchg
xor
sbb
in
push
xor
int3
xchg
rcll
mov
cmp
ja
xchg
mov
lret
addr16
pop
xchg
rorb
ds
filds
test
sbb
sar
adc
lock
int
fsubs
daa
mov
pop
ffree
mov
test
jne
push
dec
xchg
pop
mov
outsl
movsb
add
fcoml
mov
xchg
cmpsl
scas
cmp
jns
jp
lods
fdivrp
mov
xchg
outsb
lcall
incl
fdivrl
push
movsl
outsb
mov
test
pop
inc
sbb
fsubr
adc
add
adc
inc
popa
cmp
enter
mov
cmc
in
xor
add
insl
and
shlb
je
mov
ret
and
jg
jge
jmp
fists
and
mov
imul
cmp
mov
ret
call
and
mov
inc
cmpsl
and
add
dec
xor
mov
add
xchg
mov
adc
test
pop
fistpl
into
inc
jno
scas
push
dec
ss
ljmp
lret
stos
jne
pop
push
or
mov
in
ja
call
add
xor
mov
add
dec
in
and
ds
cs
in
xor
loop
inc
push
sbb
pusha
push
iret
cmp
or
push
ss
sub
pop
pop
cmp
fsub
jbe
mov
ret
fidivl
aas
and
fstpl
xor
pop
rcrl
push
jp
mov
mov
add
fwait
push
or
inc
and
ret
push
addr16
xchg
in
enter
jnp
test
sahf
cmp
lret
pop
bound
sbb
out
cltd
sub
je
dec
into
out
dec
cmovae
lcall
mov
lock
add
push
pop
shlb
mov
mov
push
imul
xchg
mov
mov
xor
cli
xchg
cmp
mov
ljmp
call
xor
aam
sbb
pop
sub
enter
pop
push
repz
jg
mov
mov
xlat
test
or
sbb
das
ret
or
push
cmc
call
leave
cmp
jle
or
test
dec
jmp
pusha
les
fsubrs
xchg
subl
fs
fadd
push
mov
sub
add
lock
dec
adc
cmp
in
movsb
pushf
adc
filds
aas
test
arpl
jne
jmp
std
int3
adc
push
cld
cmpsb
ds
xor
fs
jle
mov
jno
ret
in
bound
sbb
call
jge
ficoms
subl
and
ret
or
std
mov
jmp
in
fidivrl
mov
inc
push
inc
sbb
das
add
inc
push
iret
mov
inc
mov
pop
or
lcall
mov
xor
frndint
mov
test
fcom
test
iret
stos
mov
out
stc
adc
out
xor
test
inc
cli
xchg
nop
jo
pop
and
repnz
das
jp
lret
mov
pop
fistpll
mov
inc
mov
out
cmpsl
fwait
dec
xor
push
push
cmpsb
or
sub
xchg
pop
repz
sub
lea
and
sub
add
sbb
add
out
cmp
inc
lret
das
adc
js
push
pop
push
cli
mov
inc
lods
or
lret
jnp
pop
adc
sub
popf
pop
loope
push
add
fstpt
sbb
fs
cmp
hlt
ret
cmp
fistps
and
out
mov
imulb
xchg
leave
inc
notl
fildll
div
sbb
test
mov
adc
push
cmpsb
fsubrp
lock
pop
cmp
lahf
push
adc
sub
scas
or
inc
movsb
hlt
scas
xor
or
clc
and
outsb
pusha
lcall
out
loop
xorl
test
mov
xchg
loopne
clc
lea
aam
iret
js
out
fxch
fidivrs
xlat
cmp
es
mov
mov
adc
loope
pop
jle
cmp
add
ror
fdivrl
mov
adc
xor
cwtl
ss
inc
pop
dec
xor
or
push
adc
adc
xchg
stos
sti
xchg
push
out
jne
dec
aaa
out
pop
mov
lret
cmpsl
mov
cmp
add
pop
push
push
lahf
push
add
xchg
out
add
je
add
iret
pop
loopne
fdivs
inc
das
adc
fstl
adc
enter
mov
pop
cmpsl
stos
mov
cmp
scas
pop
and
fisttps
dec
leave
in
fmuls
and
push
imul
loopne
ret
jno
mov
ret
push
dec
icebp
shrl
xchg
out
cmpsl
out
addr16
aaa
adc
ljmp
mov
push
and
mov
and
repz
aas
loope
repnz
pop
es
and
xchg
dec
ficomps
jl
dec
ds
inc
inc
fstps
dec
adc
xorl
scas
test
xor
lret
data16
pop
out
outsl
jle
push
in
xor
outsb
out
pop
rorl
cmp
lea
lahf
je
pop
call
test
aad
mov
push
add
mov
jnp
adc
adc
insl
mov
inc
insb
mov
mov
movsl
inc
xchg
inc
out
adc
in
push
add
mov
mov
mov
xor
test
in
icebp
xor
mov
push
daa
pop
xchg
xor
mov
fidivs
adc
clc
iret
pushf
mov
cmpsb
int
push
outsb
shl
loop
or
lret
ljmp
sub
into
push
mov
inc
cld
mov
sarb
in
and
iret
pushf
vandnps
dec
sub
sbb
arpl
mov
mov
call
je
mov
or
call
push
scas
ret
rclb
lret
push
je
gs
fbstp
adc
in
ja
in
sub
jne
mov
sti
xor
daa
adc
sub
jecxz
repz
rorl
push
subl
mov
xchg
outsl
jecxz
repz
pop
push
das
xchg
sarl
cld
pop
out
dec
movsb
mov
ss
adc
sbb
lret
jb
push
nop
cmpsl
xchg
jb
lock
mov
dec
xor
mov
movsb
mov
ljmp
sbb
cmp
push
jl
mov
test
add
ljmp
pop
and
ss
ss
inc
and
fmull
inc
test
push
test
loopne
movsl
fstl
add
mov
stos
les
and
pop
jns
es
add
push
hlt
inc
inc
jb
push
iret
xor
and
rorl
jmp
call
pushf
mov
mov
mov
outsb
xchg
test
rcrl
xor
mov
gs
fs
cmp
leave
repz
pusha
addr16
push
push
stc
dec
loopne
push
push
repz
mov
int
cltd
cmp
rorb
push
cs
es
addr16
add
mov
ja
test
movsb
cltd
inc
cmp
push
lcall
push
stc
call
mov
ja
lods
cltd
xor
sub
in
mov
mov
mulb
jge
xchg
in
aas
out
filds
xchg
cmp
rol
xchg
inc
lods
imul
mov
leave
xor
not
cmp
insb
in
dec
movsl
mov
dec
fists
mov
mov
xor
int3
mov
roll
daa
lea
in
inc
xchg
leave
out
xchg
push
daa
mov
jo
ret
push
adc
into
pop
lret
cmpsl
push
pop
cli
pop
sahf
inc
mov
or
jl
rcl
ja
pop
out
test
outsb
mov
iret
shrb
test
cmc
aad
pusha
into
pop
mov
sbb
adc
out
aas
loopne
loope
add
je
out
vpmulhuw
cmpsl
outsb
mov
outsl
and
repz
leave
mov
or
fbstp
lods
sub
push
imull
lcall
mov
lret
or
cmp
fisttpll
sbb
fnstenv
pop
stos
and
jg
mov
fldcw
sub
sub
loope
das
push
or
adc
mov
xchg
cmp
add
arpl
and
enter
mov
or
pop
mov
inc
mov
mov
pop
mov
and
sub
sub
in
mov
out
xorl
movsb
into
call
test
pushf
outsb
insb
test
lret
test
hlt
jmp
sub
jo
sub
js
jne
sub
jmp
repnz
xor
jbe
out
mov
inc
mov
mov
adc
adc
jae
pop
inc
inc
pop
push
jne
call
jns
gs
add
xor
xor
lret
clc
icebp
subl
in
add
loope
mov
cmpsb
fucompp
jae
fs
push
dec
push
in
inc
cmpsb
jbe
fnsetpm(287
lods
dec
push
fcmovu
cmp
dec
lret
dec
dec
rcrl
xchg
lock
or
adc
lret
mov
mov
lea
incb
fsubl
mov
xor
popaw
add
xchg
inc
sub
insb
roll
in
cmp
sub
mov
arpl
jle
lcall
int
mov
lea
pop
mov
mov
cmp
cmp
push
jnp
and
pop
lahf
js
loop
jmp
or
sbb
xchg
stos
add
and
sub
fsubs
das
cmp
lds
roll
andl
push
mov
arpl
mov
pop
sahf
pop
dec
dec
cli
stos
cld
stos
adc
lds
push
loopne
ds
xchg
or
icebp
cmc
sahf
loopne
pop
pop
lock
jns
add
push
dec
mov
test
jmp
lret
xchg
pop
cmp
jle
mov
call
push
inc
lret
jb,pn
clc
pop
aas
mov
dec
pop
rorb
jns
jle
pushf
scas
xor
js
ret
rcll
cmp
icebp
ret
fdiv
and
outsl
fs
jl
adc
push
pop
jns
mov
xchg
mov
jp
mov
test
ljmp
aaa
sub
jmp
iret
pop
leave
mov
sbb
sub
movsl
push
cli
push
icebp
pop
xor
in
add
rcrb
mov
lar
xor
jmp
fistpll
jmp
stos
jbe
lds
adc
cld
test
mov
cmpsl
or
xchg
mov
imul
and
mov
push
mov
outsl
lret
pop
pop
into
pop
in
cli
or
jge
dec
cmp
cltd
ret
mov
js
ficomps
ret
jg
pusha
cmp
lret
out
or
add
mov
stc
push
mov
movsb
fcompl
dec
cmp
push
adc
int
jo
std
push
mov
jb
jno
sbb
imulb
into
andl
add
test
pop
cmpb
adc
movsb
pop
xlat
pop
and
test
dec
xchg
fldt
push
pop
aam
sub
movsb
inc
fstpl
ljmp
push
int3
or
dec
dec
add
sti
cmp
pop
jge
leave
mov
cmp
aam
stos
fstpt
test
test
ss
movsb
cmp
jbe
test
popf
push
xor
rol
mov
add
outsb
jo
enter
pop
incb
cltd
in
inc
jnp
decl
rorb
cmp
push
sbb
scas
scas
fisttpll
outsl
or
data16
inc
mov
pop
sub
ja
sbb
je
icebp
cmp
cld
rcrb
movsl
jp
inc
inc
sub
loope
ror
mov
and
mov
popl
cmp
cmp
clc
stos
leave
je
pop
mov
movsl
or
mov
pop
fisttpl
faddl
push
adc
popf
test
mov
mov
jecxz
shll
xchg
addr16
inc
cmc
mov
cmp
pop
sub
es
cmpsb
shrb
jb
jno
lahf
popa
aaa
pop
repz
jo
lea
sbb
adc
stc
fcomip
push
adc
lret
inc
sub
bound
pop
fdiv
jl
std
mov
call
sub
mov
add
sub
mov
push
testl
push
lock
mov
pop
out
mov
in
cmp
mov
add
fmul
aas
jbe
shl
rcrl
mov
iret
mov
divb
bound
jb
loop
fwait
mov
iret
mov
or
shrl
sbb
mov
in
addl
pop
js
jmp
clc
sub
out
adc
les
fidivrs
shrl
inc
mov
into
scas
push
sbbl
fwait
dec
cwtl
jns
inc
dec
dec
lcall
mov
hlt
pop
mov
shrl
jns
imul
lahf
jp
xchg
adc
pop
xor
scas
bound
jne
stc
ret
pop
ljmp
inc
fnstsw
add
mov
mov
mov
sbb
mov
mov
xor
sbb
out
outsl
mov
cmp
pop
lds
fldz
lret
sbbb
jno
lcall
lods
mov
mov
daa
pop
fadds
push
inc
xlat
in
icebp
fdiv
add
pushf
jg
xor
add
jne
mov
push
hlt
scas
das
or
push
aas
mov
ja
mov
jle
push
fs
sbb
push
lods
aam
jns
repz
loop
pusha
arpl
adc
xchg
insb
iret
popf
push
adc
daa
pop
movsb
outsb
jp,pn
dec
xor
adcl
sbb
add
push
sbb
orl
std
fsubrl
ds
outsl
inc
mov
xchg
hlt
jl
xchg
push
jge
sub
sti
mov
lahf
push
jl
mov
mov
inc
fdivrs
shlb
inc
or
test
mov
bound
mov
sub
cli
jl
or
cmp
adc
mov
fnstsw
loopne
adc
dec
sbb
jb
xlat
jbe
int3
mov
dec
stos
sub
in
xchg
rol
mov
mov
incb
dec
stos
mov
adc
mov
inc
movsl
imul
es
and
push
add
xor
shll
test
pop
jne
and
sub
push
mov
sub
jno
hlt
cmp
lock
jmp
jp
adc
dec
or
and
xor
adcl
sbb
xchg
aaa
inc
mov
pop
pop
fstpl
in
mov
mov
pop
fistpll
push
loopne
or
lret
sub
push
adcl
cli
adc
test
roll
fcompl
mov
mov
pop
shll
sub
jb
inc
ja
pushf
add
or
xchg
lret
mov
aas
arpl
call
pop
xor
push
lods
jne
sbb
je
stos
cmp
pop
cmp
int
pushw
std
stc
test
lcall
sbb
mov
ror
pop
xchg
out
scas
push
pop
inc
push
lods
shrb
xor
add
aas
push
and
adc
in
xlat
rorb
loop
mov
or
scas
ds
and
adc
fucom
jo
cli
in
or
xor
mov
js
adc
jle
cmp
fs
pop
orl
or
and
aas
dec
pop
fwait
mov
dec
cmp
jnp
ss
stc
cs
jno
int
jo
push
or
sub
pop
stc
cmpsl
mov
mov
ss
pop
imul
cmpsl
ret
in
or
mov
popa
jmp
popa
mov
icebp
jmp
add
stos
in
rorl
shll
jg
jo
ret
and
jne
cmpsl
add
js
imul
mov
sahf
out
nop
sahf
inc
cmp
mov
shrb
leave
push
scas
rorl
in
lret
sbbl
pushf
dec
push
xchg
cmp
scas
stc
add
les
cwtl
jmp
add
dec
pop
dec
pusha
call
faddl
sbb
mov
leave
lcall
imul
inc
in
fwait
ret
push
negl
pop
cmpsl
push
add
int
loopne
mov
cwtl
lds
enter
adc
imul
inc
adc
or
mov
xchg
sub
cs
mov
adc
movsb
fistl
icebp
aad
outsl
adc
in
daa
jnp
lahf
fnsave
jae
mov
inc
les
int3
scas
push
jo
fmuls
int
jnp
cld
inc
add
xchg
push
xor
sbb
shrb
jno
negl
adc
ja
push
adc
cwtl
ss
mov
test
sbb
inc
in
cs
mov
popf
scas
jg
push
mov
sbb
mov
jae
sbb
jnp
cmp
inc
or
pop
jb
inc
xchg
ljmp
xor
cmp
gs
lds
cmp
popa
dec
mov
xor
jno
out
sbb
out
fwait
lret
push
mov
inc
fisubl
lahf
adc
sbb
bndstx
inc
mov
ljmp
movsl
push
scas
mov
loop
fldcw
mov
sbb
out
ret
add
dec
iret
cmp
mov
and
vpmovw2m
addr16
pop
lahf
dec
movsb
sbb
repz
pop
lock
mov
dec
les
sbb
in
mov
cwtl
pop
cltd
loope
mov
and
js
lret
mov
js
mov
mov
scas
cs
pop
ret
add
sub
xchg
arpl
enter
push
fdivr
in
sbb
mov
insb
push
sbb
cmpb
sbb
dec
and
jecxz
sub
push
mov
mov
scas
cmp
adc
sub
mov
sbb
cmc
mov
add
out
inc
jp
lahf
shlb
jle
stos
sbb
ja
push
jns
loope
aaa
int3
pop
dec
cltd
inc
sbb
xor
pop
lods
test
jp
xchg
std
jno
sub
inc
imul
pop
loopne
mov
xlat
push
sub
scas
push
xchg
stc
into
test
xor
es
jbe
sbb
sub
or
mov
mov
imul
dec
loop
fs
dec
mov
mov
push
enter
xlat
insb
test
clc
test
ret
fsubrs
ss
rcl
and
cld
add
mov
lahf
mov
mov
ds
jl
lods
in
add
xchg
inc
mov
mov
sbb
iret
in
inc
lods
mov
nop
xor
adc
pop
in
dec
lcall
sub
lcall
bound
pop
lods
xor
ja
cs
xchg
mov
shr
cmpsb
mov
stos
jo
mov
inc
push
leave
or
adc
push
lahf
xchg
push
lds
push
adc
mov
push
xchg
loope
test
or
sbb
mov
add
aaa
sub
das
ret
stos
mov
sub
iret
cli
pop
bound
clc
push
jp
pushf
lret
fmuls
jp
sub
mov
enter
mov
or
jge
mov
aad
xor
inc
sub
sbb
int3
mov
inc
push
sub
add
dec
inc
mov
mov
insb
pop
pop
fiadds
jecxz
testb
mov
aas
ja
outsl
insb
inc
stc
jnp
push
and
icebp
sbb
sarb
and
icebp
push
push
in
pop
sub
dec
cmpsl
mov
mov
xorl
pop
and
pushf
cs
sbb
sub
cmp
and
call
imul
or
ljmp
push
xchg
out
ret
push
jbe
mov
and
popa
cmp
pop
jl
jmp
repz
dec
xchg
cltd
es
mov
stos
or
adc
xor
mov
cld
pop
jmp
adc
xchg
inc
pop
or
les
jmp
repnz
fmull
xchg
jnp
data16
dec
jo
popa
dec
sub
mov
jp
dec
in
icebp
cmp
sti
mov
mov
out
inc
jne
out
shrl
dec
rclb
in
sub
test
push
jecxz
sarl
pushf
adc
das
loope
gs
rol
mov
sbb
jnp
ret
dec
imul
outsb
mov
mov
xchg
lods
push
xor
cld
add
sbbb
xorl
or
dec
jb
or
in
xchg
in
cmc
push
aas
jp
test
movsl
ljmp
sti
dec
sub
fidivs
cwtl
mov
das
mov
and
fmull
or
lret
in
pusha
jmp
aaa
cs
lds
xchg
ret
mov
fistl
and
test
nop
jo
in
loope
push
dec
stos
and
push
jge
push
mov
sbb
push
mov
outsb
pop
xchg
loop
mov
imul
adc
xor
mov
ja
ja
aam
das
push
xchg
xlat
inc
push
mov
and
clc
fcomps
or
xlat
shrl
cmpb
loop
or
push
testb
addr16
sbb
std
lods
xchg
push
adc
push
sbb
cs
push
imull
pop
sbb
out
mov
out
aam
push
xor
lcall
add
mov
mov
cmpsb
add
push
fldt
std
push
pop
clc
in
mul
int3
jb
jmp
sbb
sbb
jno
dec
jns
xor
pop
outsb
aam
and
cmp
or
lods
xor
es
jecxz
popa
cmp
xor
jle
sub
push
or
pop
fnstenv
ret
ret
push
out
mov
pop
xor
mov
mov
int3
dec
ficomps
sbb
cmp
mov
stos
shl
mov
ret
cmp
jns
mov
sti
adc
andl
test
jp
shlb
pop
mull
adc
and
xchg
out
add
cmp
sub
adc
pop
in
int
mov
jmp
in
cmpsb
or
sub
es
fildl
dec
sub
pop
pop
lcall
jno
xchg
or
call
inc
out
lds
int3
fsubl
out
in
mov
les
mov
aas
out
push
add
sti
repnz
in
xor
push
cmp
movsl
rcl
xchg
xor
xchg
int
mov
dec
cmc
push
inc
sub
icebp
inc
jnp
pushl
xchg
mov
pushf
cmp
or
lea
jle
sub
fisttpll
push
loop
je
leave
into
mov
loope
xchg
xchg
rorl
inc
and
adc
mov
xchg
pop
nop
sahf
mov
out
fs
jb
jb
enter
inc
mov
push
inc
xchg
add
inc
call
rorb
adc
icebp
push
xchg
rolb
ss
mov
add
pop
cli
icebp
test
outsb
enter
gs
nop
scas
xchg
fcompl
mov
fldcw
mov
jmp
notb
jmp
add
les
add
daa
sub
inc
aad
dec
jg
pop
or
ljmp
ret
inc
or
mov
cmp
jecxz
or
mov
push
inc
inc
lods
fisttpl
les
dec
and
adc
xchg
mov
test
leave
sbb
imul
jge
mov
inc
adc
lock
lret
stos
cmp
imul
or
mov
push
je,pn
in
adc
test
inc
sbb
push
rcll
in
or
and
repnz
mov
sub
into
cmp
js
shrl
outsb
xchg
repz
mov
stos
fadds
adc
andb
insb
jne
cmp
mov
and
pop
push
lahf
and
mov
ret
addr16
mov
sti
mov
mov
pop
scas
les
scas
ret
pop
push
cmc
or
out
jl
scas
jae
je
movl
dec
fs
scas
fidivrs
and
or
ss
mov
daa
dec
jg
out
gs
sbb
lcall
mov
xor
fnsave
cmp
adc
push
lods
cmp
add
enter
jns
mov
jge
ret
fnstcw
nop
xchg
scas
jl
in
cmp
pusha
adc
inc
push
dec
sub
add
cmp
ret
add
cltd
adc
and
inc
call
cmp
movsl
push
stc
sbb
jne
dec
arpl
inc
lds
fimuls
icebp
fidivs
shl
cmp
mov
out
cltd
or
out
repz
mov
lods
mov
test
xchg
jb
nop
adc
inc
and
daa
jbe
xor
mov
mov
repz
movsb
popa
frstor
fisubrl
adc
pop
push
add
or
jp
xchg
lea
jge
dec
cmp
jbe
addr16
mov
inc
jp
and
add
dec
shrb
loopne
cmpsl
jb
cmp
stos
stos
test
out
xchg
xor
jnp
jp
fs
push
jmp
xchg
clc
push
xlat
call
push
xor
push
fstpt
leave
clc
push
test
cltd
jb
push
cmp
pop
jb
into
cmp
lcall
mov
fistpll
jnp
pushf
out
jne
mov
loopne
jmp
stos
and
cmpsl
addr16
sub
test
push
cltd
dec
pop
and
lods
jg
mov
inc
jnp
mov
in
cmp
loopne
push
aad
inc
sbb
rorl
unpcklps
arpl
add
jecxz
push
xlat
jmp
insl
test
mov
out
ud2
repz
xlat
lret
jnp
shll
inc
inc
xchg
pop
iret
in
sub
stos
mov
into
fsubrs
mov
stos
adc
push
and
test
xchg
xor
cld
lods
jg
adc
xor
mov
sahf
lret
hlt
aas
cmp
xchg
cld
cmp
dec
cwtl
fld
add
fadd
adc
pushf
cli
add
xor
shrb
add
push
push
xor
and
sbb
pop
in
or
push
clc
adc
movswl
xchg
es
pop
dec
call
push
mov
add
or
fs
add
cmpsb
pop
dec
outsb
xor
test
cmp
sub
or
fs
aaa
push
dec
cwtl
repz
dec
push
mov
stc
mov
dec
test
jle
jno
int
or
lret
aaa
mov
adc
cli
sbb
inc
xchg
inc
cld
mov
movsl
inc
inc
cltd
jb
inc
xchg
pusha
adc
xchg
pop
mov
out
push
mov
cmp
pop
add
ss
dec
loope
or
sahf
mov
push
cmp
push
and
aam
mov
push
sarl
dec
test
dec
fwait
loop
cmpb
push
scas
mov
pushf
or
xor
xlat
dec
jnp
mov
scas
adcl
adc
cld
les
xchg
push
or
sbb
add
and
sbb
push
pop
out
ljmp
sti
into
pop
out
inc
sbb
popa
sbbb
cvtps2pd
mov
lock
xchg
je
addr16
in
arpl
mov
mov
call
sub
lahf
xor
loope
out
cmc
pop
ljmp
ja
sub
aaa
cli
cmp
inc
divl
dec
cltd
xchg
lcall
adc
and
shlb
add
fwait
imul
pop
push
xchg
adc
add
lret
enter
cld
jl
xor
xchg
xor
lods
mov
inc
add
cltd
jo
dec
mov
mov
mov
inc
and
add
addr16
shrl
xor
out
adc
scas
add
sub
out
jp
adc
ljmp
xchg
inc
lahf
mov
lock
loop
lods
fst
jne
movb
cmpsl
jl
add
sbb
add
js
pop
mov
push
cmpb
cltd
jp
xor
adcb
popa
pop
shlb
fldt
repz
mov
ja
sub
test
in
dec
cltd
jb
fbld
xchg
fistl
push
jp
in
jb
pop
jno
lods
dec
jno
sbb
out
mov
push
push
aad
frstor
out
ljmp
test
nop
sbb
loopne
pop
mov
jecxz
cltd
add
shrb
pop
dec
fsts
es
sbb
xlat
xchg
mov
push
push
enter
fdivrp
daa
jecxz
aaa
mov
std
mov
repnz
dec
mov
int3
pop
dec
dec
das
pop
adc
cmpsb
ja
mov
lret
out
dec
xor
imul
jns
sub
and
clc
jmp
mov
bound
in
adcb
or
xchg
cltd
lods
call
dec
rcl
inc
in
mov
or
movntq
shrb
and
sbb
nop
jle
lods
dec
jl
fidivrl
ljmp
adc
push
or
or
out
int
fs
pop
imul
mov
mov
sbb
rcrl
cli
inc
push
mov
xchg
cmp
xor
imul
inc
sub
xor
lods
loope
sub
pop
shlb
xchg
xor
cs
hlt
or
out
imull
call
sbb
loope
jmp
in
mov
and
add
push
mov
insl
dec
addr16
filds
ss
pop
sub
sbb
call
jmp
cmp
cmpsl
imul
iret
cmpsl
sbb
xor
and
test
add
ljmp
sti
fmuls
lods
call
inc
xor
cwtl
jae
jge
push
ds
idivb
sahf
sub
pop
push
clc
mov
mov
lea
cmp
insb
add
push
push
pop
mov
out
xchg
leave
jae
jbe
pop
cmp
sbb
in
outsb
in
and
inc
mov
xchg
add
xlat
pop
jg
mov
jecxz
shrl
mov
mov
sti
mov
and
and
pop
mull
fstps
sti
shlb
icebp
es
mov
fwait
mov
add
jmp
and
jb
sub
pop
ficomps
je
and
sbb
inc
repnz
push
dec
push
aas
mov
pop
xlat
lods
jne
mov
ja
jo
push
out
jmp
adc
push
push
inc
jp
dec
pop
xchg
push
mov
aaa
cmp
lods
je
inc
out
dec
js
dec
adc
stos
sub
dec
hlt
aam
jnp
data16
mov
push
xlat
lea
mov
into
push
loopne
dec
fcmove
mov
mov
movsl
mov
sbb
int3
and
arpl
adc
add
jb
das
cmp
jno
in
mov
or
cli
mov
das
mov
jnp,pn
js,pn
movsl
nop
sbb
mov
cs
popa
insb
aad
pop
jle
xor
shl
dec
cmp
jns
sarl
repz
sub
push
sbb
jo
fstpt
test
gs
adc
cld
insl
pop
add
push
cmp
adc
sub
mov
inc
icebp
lods
xor
mov
out
xchg
cmc
or
fiaddl
cmp
ret
jns
xchg
inc
fisubl
popf
dec
push
mov
xchg
stc
xchg
es
xor
pop
xchg
jmp
lods
cmp
loope
pop
mov
push
ret
test
xchg
aaa
xor
push
inc
ret
xlat
jbe
scas
ljmp
mov
aaa
adc
addl
sbb
mov
in
mov
mov
inc
inc
push
int3
lds
inc
lock
popa
and
and
cmp
leave
jae
cmp
mov
inc
sbb
dec
jae
data16
dec
mov
xchg
test
jno
sbb
jne
out
imul
sbb
shl
pop
out
xchg
jae
inc
hlt
cmp
mov
add
sbb
inc
fucomi
xchg
inc
enter
xchg
ret
add
in
int3
aas
ja
push
inc
inc
push
cmp
mov
and
aam
xor
std
pop
loope
push
mov
push
ja
daa
mov
loope
mov
adc
int3
pop
xor
test
xchg
aaa
mov
inc
adc
cmp
jno
sub
aaa
push
loope
aad
in
sbb
pusha
push
leave
push
pop
in
cwtl
cmp
shrb
mov
cmp
fidivrl
inc
scas
cmp
adc
stos
pop
push
push
data16
push
xchg
add
adc
or
ss
inc
lds
xor
icebp
mov
lds
adc
lods
push
dec
int3
out
inc
mov
or
fstl
mov
sahf
mov
jle
mov
jne
sbb
imul
sub
lret
shrb
in
push
jl
mov
push
mov
test
dec
jae
imul
add
sbb
out
movsb
lahf
and
and
loopne
dec
imul
sub
daa
mov
inc
adc
ds
scas
inc
xor
in
mov
mov
xchg
dec
jecxz
shl
mov
or
cmpsl
and
xlat
mov
adc
push
icebp
dec
pop
mov
shrb
xchg
sub
xchg
je
add
loopne
push
xchg
and
scas
insb
mov
lahf
rorl
lock
addb
mov
cmpsl
sub
std
lods
or
sub
inc
mov
and
pop
inc
xchg
or
mov
push
xor
jb
test
pop
test
sub
imul
xchg
or
mov
fcmovnu
adc
or
or
and
lods
loop
pop
movsb
in
cmc
test
push
fs
jae
out
fcmovnb
push
lods
push
imull
xchg
or
rclb
add
nop
cs
testb
xlat
outsb
cmp
rcll
jbe
std
sbb
mov
pop
push
pushf
das
push
addr16
je
add
mov
cmp
jns
clc
maxps
idivl
jnp
loope
jnp
pop
xor
pop
icebp
sar
fwait
movsl
sub
je
ds
and
inc
mov
push
adc
les
cmpsl
repz
fsubrs
sahf
je
push
cmpsl
in
aad
rol
movntq
jmp
sarb
jbe
jno
mov
and
int3
scas
cmp
mov
push
mov
pop
and
add
outsl
xor
jle
push
cmpb
dec
and
dec
or
inc
popa
lock
dec
jbe
flds
jne
xchg
dec
ret
inc
hlt
cmpsb
inc
into
jb
push
je
jmp
and
rorb
push
cli
xor
mov
ss
test
lods
push
adc
push
aas
add
and
fsubp
fsubl
ds
mov
orl
sub
nop
aam
add
dec
sub
fisttpl
sahf
loopne
inc
lods
mull
int
movl
add
or
sarb
pop
dec
rorb
or
fwait
rolb
adc
mov
pop
jmp
shlb
pusha
imul
pop
imul
push
sbb
enter
out
fidivrl
pop
mov
icebp
jg
les
adc
shll
xor
add
scas
adc
mov
data16
scas
pushf
inc
imul
jp
lods
add
into
mov
mov
cmp
insb
gs
js
cmp
fs
pop
push
jo
push
fcmovu
scas
mov
jno
lea
insb
mov
mov
in
jnp
fcomps
mov
sbb
pop
aas
pop
fsts
fstpl
xor
xor
dec
out
adc
mov
insl
daa
inc
sbbl
mov
out
push
fsubrl
sbb
enter
push
shl
int
and
lods
je
sub
cwtl
pop
cmpsb
or
arpl
sahf
xor
pop
add
std
incb
out
sub
loopne
lods
loop
inc
cs
mov
loop
rolb
jle
in
movsb
dec
push
data16
cltd
mov
pop
cmp
test
dec
in
loope
pop
adc
fcoms
xor
jp
cwtl
jns
loope
mov
movsl
xchg
movsl
in
and
enter
aad
xor
in
jmp
xchg
pop
test
push
jnp
js
arpl
jge
add
repz
stos
jb
adc
pop
es
mov
in
sbb
bound
cmpsl
push
fcomip
cli
pop
mov
movsb
cmc
hlt
negl
adc
jp
dec
sub
cmc
sbb
int
stc
jbe
cmpsl
cpuid
jno
or
js
push
into
lret
sbb
jae
xchg
xchg
cmp
mov
in
or
lret
into
dec
adc
cli
cld
imul
push
addb
add
ja
bound
mov
ret
mov
xchg
imul
fisubrs
cltd
jecxz
sbb
mov
mov
inc
adc
imulb
es
pop
inc
imul
std
lods
inc
rorl
xchg
ds
dec
repz
cmpsl
pushf
jnp
fmull
rcrb
dec
dec
xchg
push
dec
mov
out
dec
jmp
cmp
ret
sti
adc
or
sarl
stc
jne
aaa
outsl
int
outsb
int
jle
fildll
in
add
mov
repnz
cli
and
add
sub
xchg
clc
xchg
gs
dec
cmp
outsb
dec
insb
pop
push
xorb
mov
ss
es
cld
add
pcmpgtb
jmp
repz
xorb
shl
int3
pusha
push
stos
into
jne
mov
jae
mov
xor
lret
popf
dec
lcall
mov
stos
mov
inc
and
add
adc
ja
mov
push
xchg
lahf
dec
xchg
adc
mov
push
sbb
lret
jecxz
add
or
jne
push
xchg
or
rolb
clc
pop
movsl
int
rorb
push
mov
lahf
jnp
adc
test
xchg
filds
adc
push
jp
cli
cmp
daa
pop
sti
adc
mov
mov
pop
push
imul
in
iret
loopne
xchg
jae
mov
mov
xchg
xchg
test
adc
int3
pop
mov
clc
loop
sub
stos
es
js
add
fsubl
push
ficomps
cmpb
sub
mov
data16
xchg
ret
loop
aaa
and
jnp
cwtl
lret
lcall
xor
xor
inc
mov
popf
in
daa
out
jp
dec
xchg
cmpsb
ficomps
mov
cmp
add
imul
pop
jae
js
fsts
jb
or
mov
mov
cld
xchg
jnp
cmp
dec
stos
ds
rcl
ficoml
xchg
and
popl
imul
dec
and
push
xchg
jb
adc
lret
int
std
pop
lret
fcomps
push
mov
jecxz
dec
ret
iret
push
mov
push
mov
movsl
push
dec
out
bound
test
adc
fs
sub
gs
sbb
mov
pop
ds
mov
mov
je
loopne
pop
fs
mov
add
dec
icebp
fisubs
cmp
int3
mov
xor
data16
mov
pop
leave
adc
cmc
cltd
dec
out
es
lock
xchg
sti
mov
inc
mov
loope
imul
psubusb
jns
adc
or
cmpsl
ljmp
mov
popa
shl
or
cli
int
xchg
sbb
xchg
call
mov
out
pop
lret
lds
mov
pop
pop
aam
ljmp
sub
cli
lret
adc
dec
lods
pop
out
ret
xor
add
push
push
xchg
cld
lods
push
popa
and
adc
stc
mov
xchg
es
ss
test
cmp
jecxz,pt
mov
sarb
xorb
mov
xor
subl
and
xchg
push
mov
jecxz
mov
pop
out
jp
enter
call
and
scas
aam
jnp
test
into
push
loop
and
adc
or
inc
xchg
xor
cltd
stos
dec
add
adc
jae
adc
pop
nop
out
enter
jnp
mov
out
inc
xchg
jbe
mov
lods
iret
jp
sti
xchg
jmp
js
arpl
inc
sbb
stc
inc
movsl
xchg
aad
into
add
mov
mov
out
enter
int
cmp
push
jecxz
int3
or
cltd
dec
sbb
and
push
bound
or
inc
push
mov
fsubrs
fisttps
sub
sbb
xchg
adc
xchg
mov
addr16
inc
jne
aam
adc
pop
add
inc
and
out
leave
add
pop
sub
cmc
daa
lcall
sbb
pop
cmovle
lds
sbb
xor
jns
les
repnz
fldenv
pop
pushf
call
cwtl
cmovbe
enter
subb
test
mov
mov
lret
jl
mov
lods
jns
sbb
in
mov
mov
sub
cmp
lea
loop
xchg
sbb
out
pop
jge
imul
ds
pop
in
mov
lods
pop
gs
xchg
movsb
add
jge
xchg
cmp
mov
sbb
or
std
jns
shll
js
adcb
int
sub
je
lock
inc
cmc
bound
pop
imul
es
aam
call
pop
pushf
enter
mov
cmp
xor
and
rcrb
xor
hlt
cli
movsb
push
sbb
cmpl
add
popa
adc
dec
enter
or
cmpl
leave
lods
pop
jg,pt
jl
int
loopne
or
jb
push
jb
pop
ret
shr
add
jo
push
daa
fdivr
push
imul
imul
mov
pop
and
dec
lcall
inc
or
rcll
sbb
aas
imul
or
pop
popa
inc
mov
xor
ret
rol
or
xchg
dec
inc
cli
scas
pop
test
mov
call
test
arpl
add
gs
ja
cmp
xchg
xchg
xor
xor
mov
mov
inc
or
push
test
mov
and
xor
cltd
nop
cmpsl
pop
repz
pop
ljmp
scas
add
jle
lahf
push
daa
shrb
ja
dec
or
xchg
shrl
popa
jb
jb
mov
mov
pop
dec
add
sbbl
mov
pop
lods
andb
loop
and
int3
sarl
mov
out
fsubl
pop
push
fmull
fistpll
pop
iret
jecxz
xlat
pop
fisubs
popa
divl
xchg
fbld
idivl
dec
adc
fimull
cmpsl
xchg
outsb
mov
add
or
sbb
or
test
into
lea
pop
lret
lods
mov
das
cmc
jecxz
add
xchg
xor
inc
cmpsl
pop
xor
mov
pop
pop
lcall
cmp
out
loope
fwait
aam
mov
dec
rcrb
push
add
mov
mov
and
add
imul
popf
push
in
pop
pusha
or
adc
mov
lock
pop
mulb
mov
gs
les
mov
jbe
push
int3
or
lds
rclb
repz
loopne
mov
testb
push
lea
int3
mov
mov
xchg
lret
into
ja
jnp
fistpll
call
out
add
dec
cmp
cwtl
movsl
mov
fistps
mov
xchg
mov
pop
jno
hlt
push
mov
push
ret
mov
inc
mov
xchg
hlt
jmp
ss
das
cmpsb
sub
mov
inc
addb
dec
sbb
aad
push
adc
dec
jmp
pop
idiv
cli
xor
cmp
xchg
int
inc
dec
mov
xor
adc
lret
imull
mov
mov
enter
lods
jb
cmp
pop
cmp
fidivrs
mov
rorb
and
push
xor
xlat
dec
fs
inc
mov
push
jne
sub
sub
cmp
fwait
test
jmp
sarb
jmp
sub
ja
repnz
xchg
or
add
xchg
add
push
cmp
rorb
push
pusha
push
lds
pop
pusha
push
adc
inc
add
popf
jo
or
xchg
das
frstor
add
cs
int
inc
adc
add
mov
in
cld
inc
out
inc
cmp
sub
dec
sbbb
test
mov
repz
ror
mov
push
pop
pop
cmpsb
mov
out
mov
sbb
in
push
jle
jne
pop
in
cld
inc
jecxz
fmull
ds
adc
fdivrl
add
mov
xor
cli
out
adc
iret
mov
ja
lds
or
lods
mov
jnp
add
jmp
adc
mulb
inc
pop
add
bound
mov
or
mov
sub
push
mov
ret
dec
fs
jns
das
ror
popa
arpl
shll
imul
sbb
cwtl
inc
mov
sub
dec
mov
push
add
and
or
imul
imul
gs
adc
arpl
push
mov
cmp
pop
ljmp
in
call
xor
and
pop
js
push
gs
xlat
shll
xor
movsb
popf
mov
dec
loope
insb
jbe
push
dec
scas
mov
test
sub
xchg
inc
aam
pusha
ja
mov
dec
or
mov
push
xchg
sub
dec
push
rcrb
movsb
sub
inc
and
mov
or
in
fwait
push
cmp
pop
lret
inc
fldcw
push
jle
rcl
sbb
adc
or
sbb
xor
dec
lcall
std
inc
push
or
mov
dec
adc
and
inc
jns
jnp
mov
dec
ss
fldl
pop
or
jle
out
mov
jle
add
push
push
jb
push
sbb
flds
inc
cmp
cmp
lods
inc
cmp
cmp
js
inc
push
jne
outsl
fistpll
sbbb
jne
push
sbb
cld
cwtl
fs
push
rol
bound
and
add
fiadds
orb
test
lahf
mov
mov
cld
pop
hlt
or
jmp
sbb
loope
dec
mov
lcall
adc
fidivrl
lcall
or
fdivr
das
and
mov
xor
xchg
shrb
xchg
push
dec
das
cmp
xchg
out
mov
pop
fists
push
and
mov
or
movsl
adc
inc
jne
jo
out
push
cwtl
test
xor
or
loope
pop
sub
pmaxsw
lods
mov
sbb
arpl
mov
cld
jbe
ss
aaa
shlb
pop
cmpl
outsl
mov
test
push
call
loop
popf
mov
mov
mov
aam
pushf
xor
xchg
stos
mov
mov
cmp
outsl
pop
in
jno
lret
inc
testl
bound
aad
push
add
push
xor
mov
xor
shll
cmp
inc
cmp
xor
lcall
pop
xchg
add
int3
sti
cmpsb
aas
imul
xchg
and
rcrb
or
jns
movsl
jns
pushf
clc
sub
add
jnp
mov
in
jno
iret
jno
pop
nop
sub
and
or
daa
push
push
scas
cld
fcompl
mov
hlt
outsl
mov
paddusb
add
xchg
mov
rorl
dec
xor
mov
dec
sbb
ret
cmp
mov
add
push
lcall
sub
outsl
orb
repz
mov
sub
lcall
in
decl
daa
mov
clc
fimull
orb
push
call
xor
adc
push
testl
out
neg
out
push
push
adc
add
test
add
and
icebp
stos
jb
imul
mov
adc
pop
or
adc
sahf
ret
fldcw
xchg
fisubrs
adc
push
pop
sbb
sub
inc
sub
push
mov
xor
pop
rorb
inc
addr16
or
adc
jmp
jle
pop
inc
ror
imul
mov
dec
cmp
lret
xor
fdivs
insl
in
jecxz
sub
mov
repz
mov
popf
add
sub
test
fildl
mov
lret
ljmp
nop
es
xor
rol
aam
push
jmp
mov
mov
xor
adc
jg
pop
xchg
repz
mov
xor
xor
loop
lahf
movb
pop
je
je
mov
clc
int
xchg
xor
fnsave
jno
mov
lret
outsb
stos
xlat
in
xchg
jb
lds
jne
stos
adc
mov
adc
mov
test
pusha
push
pushf
int
in
daa
jns
or
xor
mov
jecxz
mov
jmp
mov
test
leave
add
cmp
push
int
fcoml
xchg
push
addl
mov
leave
imul
xor
cltd
lds
lea
sub
xor
mov
adc
clc
dec
cmp
clc
sub
mov
xchg
add
or
push
mov
or
pop
push
pop
mov
test
dec
aam
jg
mov
mov
ljmp
xchg
test
sbb
mov
lds
adc
test
std
stc
sub
xchg
arpl
dec
pop
inc
xlat
add
inc
lahf
add
pop
pop
pop
lahf
jecxz
jp
cli
rorl
mov
in
in
mov
push
movsb
sti
das
sbb
into
leave
aad
mov
jns
ret
je
lret
push
outsl
enter
push
pop
inc
leave
in
pop
rcrl
mov
popa
pop
add
repz
cli
lods
lahf
xor
dec
xchg
es
inc
xchg
stc
negl
sarl
in
push
fists
daa
fimull
mov
push
pop
sbb
dec
arpl
orb
out
xchg
sbb
pop
mov
std
mov
stos
je
dec
jnp
loope
push
aas
dec
mov
shlb
lcall
xchg
jecxz
or
addr16
js
rol
inc
jg
or
popf
aad
xlat
and
stc
vpsubsw
dec
jmp
or
imull
gs
sbbl
insl
push
sub
push
xor
les
outsl
jecxz
inc
lcall
aam
rorb
sbb
sub
jb
adc
ljmp
inc
fcomi
aas
dec
sub
pop
push
push
std
nop
sub
data16
les
movsl
cmp
cwtl
push
rcl
jnp
sub
pop
dec
or
sub
shll
int
inc
dec
popf
icebp
mov
ret
aas
sub
mov
stos
cmp
test
mov
jae
inc
mov
and
xlat
sbb
push
push
lret
mov
xchg
lcall
push
out
jno
adc
cltd
cmp
int
or
arpl
pop
fsubrs
cld
dec
add
int
sub
clc
outsb
stos
pop
cld
in
data16
xor
dec
lret
cmp
stos
lea
inc
imul
ja
out
cmc
xchg
sub
movsl
fwait
les
lret
inc
lret
stc
push
mov
ret
sub
stos
fldcw
popf
xchg
cmc
aaa
mov
xor
pop
sub
icebp
outsl
sbbl
icebp
jae
movb
leave
add
push
mov
push
mov
in
mov
int3
and
xor
pop
or
into
repnz
subb
or
daa
xchg
jg
dec
inc
add
out
inc
insb
pop
lock
mov
xor
or
imul
jg
push
mov
sub
roll
mov
outsl
in
in
or
pop
pop
pop
mov
mov
popa
sub
jmp
lods
mov
cmp
add
fdivr
jo
fdivrs
push
mov
xor
jo
lock
cmp
mov
jp
add
sar
push
call
jle
scas
cld
sbb
fnstenv
pop
bound
add
test
cmpsl
pop
es
jno
int
mov
es
push
sub
inc
lret
filds
call
or
mov
mov
push
call
icebp
inc
inc
xor
sub
jns
sbb
adc
rcr
test
test
jo
mov
push
test
or
push
and
aam
mov
aad
sbb
inc
xor
mov
sbb
clc
adc
inc
std
rcr
mov
aam
jae
fmulp
mov
cli
jno
fstps
out
sub
test
dec
pop
xor
lret
mov
adc
stos
cld
ds
lret
xor
mov
fnstcw
mov
pop
add
cli
std
fdivrs
movsb
int3
cmc
call
cmp
cmc
and
jge
jnp
xchg
aas
xor
mov
adc
icebp
and
ret
stos
mov
mov
dec
dec
ss
mov
mov
ja
jl
pop
dec
sbbl
loop
imul
sbb
mov
mov
xchg
scas
leave
movsl
enter
in
pushf
push
or
sub
mov
imul
xor
and
data16
jbe
sub
push
push
stos
push
fiadds
or
sbb
cmpsl
ficompl
rorl
and
jl
mov
jno
movsl
sbb
add
xor
movsb
dec
dec
mov
inc
idivb
jns
vucomisd
ds
jno
jno
imul
sarb
sbbb
popf
push
mov
movsb
mov
fcoml
loopne
fs
and
pop
je
sbb
loope
jno
das
xor
lock
mov
add
add
popl
loopne
push
cmp
mov
cmpsb
sbb
or
or
sub
insl
push
dec
clc
scas
pushl
inc
jecxz
xor
xchg
nopl
or
push
xor
jmp
movsl
int3
dec
add
test
push
push
add
push
adc
xchg
cmpsl
pop
outsb
imul
push
mov
icebp
das
xor
mov
mov
ss
push
idivl
repnz
xchg
mov
iret
lods
xchg
jle
movsb
ja
jae
jno
pop
sbb
aam
xchg
sar
lea
int3
adc
pop
push
ficomps
push
loop
test
rorl
jmp
and
jmp
lahf
and
mov
sbbl
aad
xor
in
mov
sub
cs
dec
or
cli
leave
repz
es
mov
out
je
daa
dec
xchg
cmpsb
xor
inc
and
sarb
addl
out
iret
fsubrl
xor
outsl
dec
fiaddl
jo
fisttps
mov
mov
xchg
ds
test
pushf
jne
add
pusha
xchg
xor
aam
popa
lock
inc
xor
and
sub
sub
jmp
or
dec
out
jnp
dec
mov
adc
sbb
dec
jg
inc
scas
sub
pop
fisttpl
je
or
xchg
addr16
jmp
bound
jp
int
adc
push
stc
mov
call
repnz
icebp
rcrl
add
xlat
jnp
sub
pop
ljmp
cmp
pop
lock
sub
lahf
cltd
nop
xchg
xchg
or
and
rcrb
test
fadds
fbstp
int3
pop
cmp
dec
les
cli
loope
ljmp
test
push
and
fldcw
xchg
fbld
es
xchg
out
xchg
loope
mov
or
pop
nop
scas
jp
arpl
and
loopne
popf
jl
addr16
cld
lds
aad
inc
iret
cmp
pop
in
sub
xchg
movsl
cmpsl
pop
add
jecxz
and
dec
mov
jb
jle
push
inc
jp
and
and
pop
scas
pop
pop
dec
in
orl
sub
sar
rcr
test
loope
jne
pop
adcl
cmpsl
mov
ret
dec
mov
adc
dec
fsub
push
mov
popf
ds
movsl
add
leave
pushf
xor
or
cmp
lds
sbb
outsl
ja
shl
gs
aam
aad
xchg
pop
in
testl
mov
and
inc
popf
add
shll
gs
or
cs
js,pn
and
or
aam
mov
xchg
subl
outsl
xor
mov
ljmp
push
dec
xchg
aas
cli
stos
je
lret
gs
sahf
inc
jmp
cmp
int
imul
mov
ljmp
sbb
push
xchg
and
fmull
adc
push
les
gs
add
shrl
sub
and
fnstcw
xchg
pop
fldl
notl
push
pusha
push
pop
or
punpckldq
clc
cmp
adc
mov
xchg
pop
fisubrs
jnp
xchg
lock
lds
inc
or
out
adc
in
les
sub
nop
lret
sbb
dec
jae
xlat
dec
jne
sbb
add
mov
and
xchg
jo
xor
adc
jno
call
adc
and
stos
jns
pop
jcxz
iret
arpl
fwait
and
ja
adc
lods
rolb
adc
mov
out
repnz
jl
jne
call
jge
into
in
test
push
xchg
push
mov
mov
xchg
xchg
jns
dec
pusha
mov
aaa
lock
out
and
sub
repz
gs
imul
call
xor
rclb
rclb
arpl
cs
jb
lds
and
shll
arpl
pop
add
inc
dec
mov
insb
shrl
shlb
sub
fstpt
in
imul
push
fwait
shll
xor
mov
or
adc
out
mov
jne
fs
fadd
push
int3
es
push
mov
inc
and
les
push
fwait
mov
lahf
and
jl
fmulp
or
loope
pushl
xchg
pop
sahf
leave
lock
in
scas
sub
xor
fidivl
aam
jle
fisubrs
test
fcmovu
incb
lret
jge
or
movsb
shlb
call
push
out
or
loopne
cmp
jns
xchg
mov
dec
add
pop
or
sbb
jb
sti
daa
cld
jnp
scas
rcrb
pop
shl
lds
pushf
rcr
aam
ljmp
lcall
pop
insb
cmpl
jb
fs
ficomps
pcmpgtd
pop
jecxz
xlat
xlat
in
fnsave
rcrl
icebp
mul
in
sbb
lds
test
lods
mov
xchg
xor
or
and
xor
xchg
arpl
pop
sahf
mov
out
add
enter
add
cs
incb
mov
cmp
add
ret
mov
cmpl
jl
es
cli
push
pop
rorl
push
dec
push
cmp
iret
jno
aam
pop
dec
sbbb
lahf
in
jns
std
stos
push
negl
push
jmp
mov
scas
xor
and
pop
push
mov
daa
push
adc
adc
inc
adc
adc
mov
aaa
rclb
add
xor
cmp
rolb
dec
test
ret
cli
jo
gs
mov
mov
mov
xchg
out
pushf
xorb
enter
inc
aaa
frstor
ljmp
push
fs
pop
lret
cwtl
into
mov
fisubs
hlt
aam
add
mov
push
sub
mov
test
adc
mov
subl
aad
lods
scas
std
imul
adc
aad
cmp
or
sbbb
cwtl
ret
jg
cmp
mov
mov
push
xor
nop
shrl
xlat
inc
fildl
or
hlt
decl
cmp
mov
js
jp
sahf
mov
lcall
pop
jnp
add
xchg
push
xchg
pop
mov
std
mov
iret
push
xchg
negb
sub
pushf
fs
jno
cmpsb
enter
push
dec
add
movsl
push
ret
outsb
sub
popf
aas
pop
pop
dec
out
out
movsb
sarl
pop
cmpsb
jbe
insb
into
pop
fbld
jae
repnz
inc
jl
adc
mov
mov
mov
sbb
fs
xchg
repnz
aad
adc
push
ja
fcoml
rclb
jbe
sub
adc
addr16
xor
iret
xor
mov
jns
iret
pop
jle
aas
inc
out
lahf
mov
push
jae
lahf
negl
jmp
sahf
insb
int
lea
ljmp
fisubrs
ret
sbb
adc
movsl
jae
loopne
scas
pop
fcomps
loopne
shr
xchg
xchg
cmp
out
add
pop
cwtl
sub
out
lahf
stos
les
mov
mov
hlt
sub
popa
in
lahf
stos
testb
sbb
push
mov
stos
out
push
ss
adc
cmp
ss
push
mov
adcl
dec
popf
pop
movsl
adc
das
jnp
pop
and
stc
iret
mov
pop
or
push
jle
jne
das
xchg
sub
aaa
add
shll
mov
cmp
push
ljmp
sub
rcrb
lea
push
adc
fstpl
inc
mov
mov
fsts
ds
add
jne
and
add
test
std
mov
add
test
stc
cmc
jne
pop
mov
aaa
or
ds
sub
jno
fstps
pop
imul
and
lret
mov
in
xchg
inc
xor
outsb
test
outsl
ds
inc
mov
pop
mov
jl
inc
imul
xchg
mov
cmp
mov
femms
pop
fdivr
xchg
push
mov
fwait
xor
rdtsc
mov
push
dec
and
pop
sbb
sbb
inc
mov
mov
fcmovb
dec
add
inc
std
shlb
clc
aas
subb
rcrl
xor
xor
and
bound
jecxz
add
adc
dec
addr16
lcall
sbb
cmp
pop
jl
int3
jb
inc
push
mov
adc
xor
mov
fcomps
test
adc
mov
xchg
push
das
fwait
push
jbe
adc
cmp
mov
stos
inc
sub
popl
adc
sbb
test
imul
inc
adc
dec
pusha
sub
ja
lret
dec
sti
or
cmp
inc
mov
mov
loopne
inc
jmp
popl
lea
adc
and
and
call
icebp
iret
subb
shll
ja
xchg
cmc
cld
mov
jno
shll
popa
jp
fwait
arpl
int
sbb
lds
stos
fdivs
ljmp
sub
push
mov
popa
roll
xchg
nop
mov
mov
add
jns
sbb
rcr
xchg
lds
or
sahf
push
es
pop
jno
add
adc
out
adc
mov
test
xchg
insl
mov
xchg
enter
xchg
push
xchg
jo
test
xchg
dec
and
xor
jl
push
xchg
push
pusha
loop
gs
test
sbb
inc
xlat
scas
mov
jo
mov
pop
push
dec
inc
lret
movsl
sbb
repnz
xchg
inc
xchg
and
outsl
cwtl
push
call
jmp
sarb
cmpsb
dec
mov
jmp
loope
xor
pop
mov
push
inc
movsl
adc
xor
xor
sub
mov
in
pop
fwait
mov
out
incb
or
int3
out
mov
bound
pop
ljmp
pop
xor
mov
ds
pop
jns
nop
cli
cmp
fwait
push
adc
add
and
cld
cmc
inc
in
dec
xor
fidivrl
or
push
xor
add
test
ss
add
push
in
xchg
cmp
push
xchg
adc
in
sbb
add
inc
xchg
mov
rorb
std
lea
adc
out
ljmp
xlat
sbb
sti
and
xchg
cwtl
mov
mov
xchg
fwait
fwait
push
sub
sub
call
leave
clc
dec
mov
insb
lcall
sub
dec
mov
lahf
push
insb
in
scas
cmp
lods
push
mov
cs
cltd
shll
insl
sub
decl
faddl
inc
call
jge
cwtl
push
push
dec
fldln2
in
add
jp
push
xchg
inc
nop
mov
call
dec
cmc
xchg
sahf
out
fs
jo
mov
test
jl
pop
arpl
and
daa
sbb
or
push
push
dec
inc
add
lods
sbb
jne
adc
pop
add
sub
repz
outsl
imull
adc
lock
pop
sbb
or
arpl
test
out
out
cmp
cwtl
gs
cmp
pop
movsb
testb
out
pop
cmp
test
dec
lds
int3
mov
adc
aam
iret
shll
xchg
pop
out
push
xlat
hlt
push
hlt
pop
adc
dec
push
mov
mov
std
xchg
std
jns
push
fcoml
in
mov
add
push
push
sbb
push
sbb
mov
xor
or
xor
xchg
dec
push
test
mov
dec
nop
enter
cmpsl
xchg
lods
inc
imul
repnz
push
push
cld
push
sbb
or
enter
xor
stos
add
decl
dec
ljmp
repz
mov
or
pop
or
mov
cltd
inc
call
loopnew
pop
daa
mov
sbb
scas
rcll
adc
lret
scas
sahf
cmp
mov
pop
or
dec
jnp
cmpsb
call
test
insl
cmp
adc
movsb
or
add
jmp
insb
xor
dec
adc
mov
mov
int3
out
lret
xchg
repz
mov
ss
sbb
jno
cmp
fs
adc
in
xchg
outsl
iret
jg
jmp
xchg
sbb
fadd
loop
sarl
fcoms
dec
std
adc
sti
cs
test
stc
add
rorb
test
bound
or
xlat
test
pop
mov
mov
jns
jl
or
iret
inc
jne
lret
out
mov
imul
fwait
clc
rcrl
pusha
dec
push
mov
mov
xchg
lock
and
inc
cmp
xor
sbbb
imul
adc
jb
ja
push
mov
jl
insl
mov
fdivs
mov
mov
inc
adc
rcrb
dec
and
sbb
cmp
push
adc
in
mov
pop
push
mov
lcall
cwtl
fldenv
sbb
xor
jl
mov
sub
hlt
call
mov
xor
push
andb
xor
cmp
out
imul
xor
fidivrs
mov
add
shl
lock
je
insb
inc
lea
and
popf
ret
pop
fsts
imul
ficoms
mov
push
js
adc
pop
pop
lahf
lea
mov
aas
cmp
jg
inc
cmc
cmp
pop
sbb
dec
xchg
pop
test
cltd
or
add
test
mov
adc
xchg
mov
add
cmp
idivb
lret
mov
pushf
shll
adc
cmc
sbb
xchg
test
xchg
adc
pop
subl
cmp
cmpsb
sbb
mov
hlt
mov
dec
xor
add
outsl
gs
dec
mov
push
cmp
pop
adc
dec
ror
jne
addl
jns
push
dec
ljmp
adc
mov
rcrl
arpl
insl
addl
cltd
mov
mov
fildll
jns
out
fadds
test
lds
arpl
scas
nop
dec
fsub
xor
mov
xchg
sbb
push
dec
das
pop
aam
mov
sbb
js
and
nop
or
or
jle
and
scas
jl
test
dec
add
adc
rcrl
leave
pop
lods
push
fisubrs
mov
cmp
dec
aam
jl
xchg
int
das
dec
mov
mov
jle
test
and
mov
dec
fistps
and
repnz
xor
jecxz
iret
sbb
sti
ss
mov
testl
shrb
out
adc
mov
jmp
std
in
jecxz
sbb
ss
cld
add
push
sbb
add
out
mov
add
push
in
add
rcll
adc
cmpsb
jns
push
jmp
cmp
js
cs
addr16
scas
shl
push
std
call
inc
mov
arpl
push
call
dec
push
mov
adc
xlat
or
fwait
repnz
adcb
xchg
push
add
mov
fimull
jbe
mov
in
cltd
sbb
add
cli
cmpsl
leave
insb
fistl
fsubl
sbb
loop
das
push
push
in
lcall
xchg
xchg
cmpsl
sbb
cmp
test
cmpsl
jmp
and
das
movsb
jae
dec
push
cmpxchg
jo
adc
adc
adc
popa
add
call
fs
aam
push
jle
pop
cld
jae
mov
or
out
sub
jmp
cmp
inc
xchg
adc
push
jns
stos
and
dec
push
test
xrelease
iret
add
repz
and
pop
incl
lock
add
push
mov
andl
xchg
xchg
shl
cmp
xlat
xor
add
in
out
push
popa
int
jb
xlat
fldl
pop
out
shlb
xor
sbb
bound
inc
xchg
lods
and
cmpsl
jle
adc
daa
dec
mov
mov
jge
je
push
hlt
sbbl
mov
pop
inc
notb
lahf
mov
mov
jmp
or
push
xchg
xchg
in
mov
rclb
inc
ficompl
adc
in
shld
jge
rol
fsts
popf
cmc
test
jb
leave
orl
and
int3
adc
sbb
es
cmp
pop
test
lods
dec
je
mov
dec
xchg
pop
in
pop
cmc
cli
sub
cmp
enter
lods
adcb
pop
mov
mov
adcb
mov
jle
push
movsb
xrelease
ja
add
xor
das
inc
xchg
pop
inc
and
js
mov
dec
xchg
clc
loop
icebp
out
inc
inc
and
inc
out
sub
mov
ljmp
mov
das
test
test
popf
dec
jle
decb
imul
mov
loopne
in
in
mov
imul
mov
lea
mov
inc
loop
jno
xchg
dec
js
fsubrs
repz
pop
jno
std
mov
sub
mov
mov
shlb
pop
test
xchg
fiadds
out
sub
xchg
jl
mov
mov
sbb
stc
xlat
cmpsl
clc
jge
ret
xchg
xchg
xchg
call
xorl
lods
mov
lahf
xor
imul
inc
hlt
cmp
push
scas
jecxz
cwtl
add
adc
push
xchg
ljmp
xor
fidivrs
add
push
inc
xlat
mov
pop
out
jno
sbb
neg
mov
adc
out
repz
call
xor
sahf
mov
fucomip
jnp
mov
pop
dec
shll
sbb
mov
sbb
push
cmp
ds
orb
or
test
pop
sbb
pop
movsb
jmp
es
out
mov
loopne
mov
shr
lods
jecxz
in
sahf
fwait
int
push
test
xchg
inc
and
mov
sbb
jnp
scas
sbb
fnstenv
xchg
mov
jecxz
fidivrl
imul
jb
imul
vucomiss
loop
push
cmp
cmp
ja
bound
aam
aam
add
sbb
imul
pop
xchg
mov
cli
xchg
loope
scas
paddw
test
and
cli
add
pop
faddl
inc
into
nop
mov
or
sub
sbb
mov
outsl
mov
insl
sbb
testl
lahf
test
loopne
or
mov
inc
lods
fxch
dec
mov
add
notl
mov
popa
in
cld
mov
xorl
jne
jmp
mov
jno
imul
mov
repnz
inc
xlat
sbb
cmp
shrl
lahf
jmp
lea
inc
mov
inc
fmul
xchg
leave
int
push
mov
jnp
dec
push
insb
popf
xor
shll
add
adc
shlb
mov
add
es
mov
or
or
xchg
adc
insb
mov
lret
and
bound
shll
mov
setno
f2xm1
push
xchg
or
sbb
decb
mov
lds
arpl
and
lret
in
push
test
push
dec
xchg
mov
aad
and
test
jmp
das
cmpb
or
adc
cmp
cmp
sub
lods
fwait
ds
aas
fdivr
lods
add
arpl
mov
xchg
push
outsb
pop
inc
in
jp
gs
iret
in
adc
out
lods
js
jnp
inc
jnp
jmp
gs
and
fdivs
pop
mov
cli
jne
mov
jo
ljmp
test
cmc
fsubl
aad
push
mov
xchg
pop
and
bound
das
or
outsl
jae
pop
arpl
aas
pop
mov
out
aas
pop
repz
and
inc
ret
mov
dec
and
lcall
xchg
out
jg
stc
cmp
push
mov
or
jne
mov
cmp
cmpsb
or
es
imul
in
mov
mov
bnd
mov
orl
jnp
or
xchg
push
in
imul
inc
mov
loop
pop
call
ss
pop
pop
jmp
lret
fstl
aaa
insb
imul
outsl
popa
adc
dec
cmp
pop
imul
iret
xor
push
and
adc
lret
sub
sub
xchg
scas
addr16
fdivs
jecxz
jne
jl
push
inc
cmp
ds
test
adc
xor
push
fwait
pop
mov
rcr
push
mov
add
xchg
pop
arpl
and
loope
lcall
cmpsb
test
paddusw
cmpsl
push
sahf
sub
rorl
mov
mov
and
nop
das
arpl
jmp
jg
dec
mov
dec
mov
imul
or
jmp
outsl
lret
mov
mov
pushf
je
sahf
lcall
pop
dec
rcrb
jbe
mov
push
cli
stos
jne
aam
nop
xor
or
cmc
cld
stc
fptan
sub
les
ja
mov
sti
push
mov
fstp
ficoml
pop
rcll
pop
test
dec
push
pop
cmp
mov
push
cmp
cmp
leave
sbb
std
lock
pop
clc
dec
idivb
adcl
es
jmp
xor
dec
inc
cmpl
sub
jae
xchg
aad
sub
popf
pop
fistps
xchg
inc
pop
push
jno
fs
dec
insb
push
sbb
mov
int
jg
dec
jns
cli
mov
and
inc
cmp
xchg
mov
xor
out
push
sub
mov
divb
out
shll
pop
jns
add
aas
mov
lcall
xlat
fisttpl
cld
in
and
jb
cli
in
jno
push
int
out
gs
enter
dec
jle
negl
or
jmp
xchg
adc
jp
lock
movsl
enter
xor
sbb
push
lods
xchg
imul
push
push
mov
mov
mov
lock
cmp
adc
add
lcall
push
xchg
pop
repz
mov
mov
hlt
cmp
rolb
jl
icebp
les
xchg
or
stos
adc
ret
xor
push
mov
xor
loope
add
xchg
filds
ret
jmp
xchg
or
lds
push
jge
xlat
add
je
cmpsb
sbbb
adc
inc
rep
in
mov
into
push
pop
inc
daa
dec
mul
test
pop
and
scas
mov
scas
hlt
cmp
mov
sbb
push
dec
jbe
or
les
enter
clc
dec
test
inc
fwait
cmp
inc
xchg
xchg
lcall
push
roll
jp
jmp
lock
mov
mov
daa
pop
add
cld
or
stos
pop
adc
dec
or
jle
imul
jo
mov
icebp
xor
stc
in
scas
fdivl
mov
xchg
mov
add
dec
popl
rorl
sbb
jbe
pop
mov
cli
adc
jmp
cld
mov
repz
inc
pop
jnp
pop
push
cs
clc
fildl
push
arpl
in
cmpsb
je
rcrl
jae
mov
cmp
movsl
loopne
aad
jae
call
ljmp
aaa
mov
nop
fsubp
cmpsb
pop
dec
xlat
inc
mov
pop
xor
pop
cmp
jecxz
cs
aas
cmpsl
adc
cmp
jo
jl
fisubrl
and
dec
rcll
loope
xor
dec
jecxz
xchg
rorl
jb
push
mov
sub
or
mov
popf
cmp
push
mov
ficoms
dec
mov
mov
inc
push
cmpsb
cmp
cld
sbb
jnp
gs
push
insl
xchg
mov
sbb
gs
pop
sbb
imul
into
stc
pop
inc
out
mov
jle
sbb
pop
add
xor
mov
call
sub
hlt
fucomip
sbb
inc
cmp
int
jle
and
mov
jnp
cltd
xor
fadds
fcmovne
pushf
pop
jg
mov
jo
pop
or
pop
dec
add
or
jmp
add
jecxz
pop
fdivs
dec
rorb
or
or
and
sbb
cmpsb
fstpt
sbb
scas
out
mov
in
dec
andl
lcall
loopne
cltd
inc
jbe
xor
insb
out
imul
sbb
sub
inc
cwtl
repnz
idiv
lcall
jg
daa
mov
inc
or
mov
aam
lods
inc
mov
cmp
aaa
lret
jne
fwait
push
int3
movsb
test
out
out
mov
or
add
scas
nop
pop
mov
outsl
bound
push
dec
jb,pt
xor
stos
adcb
arpl
aaa
loope
cmp
xor
aad
scas
mov
mov
mov
fcompl
stos
xlat
bound
pop
outsb
push
mov
out
or
in
fadd
mov
sub
out
aad
rorb
sub
js
xor
adc
sti
enter
cmp
clc
pushf
jo
sbb
imul
add
inc
add
aas
adc
or
lds
cmp
mov
push
xor
test
outsl
mov
shl
push
mov
imul
inc
test
add
sub
xchg
das
aaa
jb
sti
addr16
mov
mov
push
cs
sbb
add
mov
ret
outsb
sub
sbb
adc
inc
push
xor
xchg
xchg
pop
lock
mov
push
sub
mov
sub
mov
dec
gs
xchg
fsts
and
inc
sub
pop
xor
scas
lret
loope
mul
in
leave
into
fstl
rcl
xchg
mov
adc
cmp
and
lock
js
or
test
lea
sti
in
sbb
inc
nop
repnz
push
mov
lds
cmpl
pop
roll
xor
dec
cmp
pop
in
adc
inc
lock
add
scas
dec
stos
mov
mov
rcrl
xchg
addr16
test
or
push
add
nop
sub
nop
jecxz
xchg
add
lcall
aas
mov
into
jne
int
test
jp
inc
in
mov
lock
shlb
inc
cmp
push
push
jmp
xlat
xchg
pop
orl
das
mov
loop
lods
sbb
mov
sub
out
fldt
adc
fldenv
adc
into
cmpsl
adc
ljmp
aas
mov
push
lock
in
enter
sbb
lret
jno
ljmp
aas
mov
push
push
dec
js
fidivs
and
popf
push
arpl
and
ret
popf
sub
shll
mov
xchg
jecxz
jecxz
in
cmc
ds
dec
test
mov
dec
jns
jne
adc
xchg
stos
inc
adc
fildl
adc
jg
and
mov
sbb
jns
arpl
rcrl
out
cmc
int
cld
arpl
sbb
test
insl
jmpw
test
sub
adc
leave
sbb
adc
inc
das
fstps
push
or
cmp
subb
das
jp
out
pop
std
pop
pop
dec
into
rcrl
int
xchg
in
mov
rclb
arpl
cs
adc
mov
mov
cmpsl
fsubl
cmpsb
add
jl
adc
push
adc
dec
loopne
sbb
rol
sub
xlat
addr16
adc
repnz
adc
in
and
aaa
pop
addr16
outsl
push
pop
fsubr
bound
ret
lcall
jge
mov
ret
hlt
cmp
jge
adc
lock
out
add
adc
xlat
mov
aam
xchg
aad
test
lahf
idivb
jne
adc
xor
jecxz
test
jg
sub
int
mov
fdivrs
out
dec
mov
adc
lods
cmpsl
gs
scas
dec
xchg
and
lods
imul
scas
lret
or
ds
xor
clc
pushw
jecxz
or
shlb
xchg
int
mov
stos
and
xchg
inc
clc
std
sub
loopne
loope
and
mov
push
aaa
lds
pop
xor
sub
test
cwtl
mov
cmp
and
push
xchg
xchg
sbb
dec
and
out
out
jl
inc
lahf
fsts
add
or
pop
fs
jg
mov
jg
cmp
mov
addb
pop
dec
test
dec
and
lds
cli
mov
jbe
lods
fdivrs
fidivl
add
push
mov
std
pop
push
sbb
in
aaa
jae
jno
pop
iret
sub
lods
push
scas
sarb
cmp
xor
outsl
adc
sub
lock
ljmp
or
dec
aas
imull
insb
mov
outsl
in
mov
cwtl
cmpl
les
ret
jmp
xchg
push
pushf
ja
iret
mov
dec
jo
shrb
mov
or
dec
and
hlt
jle
out
inc
xchg
add
ret
es
cltd
popa
dec
repz
push
fldt
out
add
xchg
insl
xchg
rcll
adc
std
fwait
jle
pop
adcb
testb
sub
sbb
sub
rcl
out
setl
and
hlt
sbbb
outsb
inc
sub
push
jmp
and
xchg
dec
push
jno
ds
enter
xchg
jns
dec
mov
notb
shr
xchg
cmpsb
js
xchg
sub
sahf
xlat
mov
in
mov
int3
jns
adc
pop
push
inc
and
lods
sub
sub
adc
das
pop
cld
sub
divb
je
into
jl
push
fisubl
cli
xchg
pop
loopne
insl
xchg
dec
sarl
mov
out
bound
pop
pop
repnz
in
xlat
iret
or
stc
pop
iret
rcll
fcomps
push
addr16
stos
push
cld
gs
or
jecxz
mov
xchg
sbb
sbb
insl
aad
mov
cmpsb
xchg
loope
rcll
push
dec
cmp
mov
out
ret
jl
mov
adc
or
mov
repnz
dec
sbb
mov
jl
jbe
jb
fsts
sahf
fmuls
aas
adc
mov
sbb
push
shlb
jecxz
jnp
and
xor
testl
cmpsl
xchg
ss
lods
icebp
ret
push
mov
shr
imul
lret
aaa
or
notb
stos
sahf
arpl
sbb
sub
jl
cld
das
cmpsb
movsb
into
push
sub
cmp
stc
or
xchg
lods
dec
sbb
jbe
out
cs
popf
inc
mov
mov
mov
insb
int3
push
and
jb
mov
aam
aad
mov
out
lods
inc
test
xchg
mov
dec
dec
ds
xchg
jg
das
mov
testl
cwtl
nop
mov
adcb
outsb
adc
mov
stos
orl
fwait
pop
add
add
popf
out
mov
fbstp
push
outsb
push
push
je
mov
sub
test
adc
outsb
push
fidivrl
sti
pop
outsl
or
mov
mov
aaa
pop
dec
daa
cmp
ret
scas
and
lods
les
cltd
jmp
jo
cmp
int
lret
shll
mov
inc
mov
enter
inc
add
or
ds
loopne
cmpsb
push
jb
pop
add
ljmp
sarl
mov
sar
sti
aaa
popa
cmp
mov
loop
sub
push
popa
cmp
cs
rcr
pop
push
fldenv
ss
xor
sbb
in
add
lahf
cli
push
dec
xchg
pushf
add
rcll
dec
popf
subb
adc
filds
out
push
or
stos
lds
jmp
lahf
pop
out
sbb
cwtl
mov
inc
sub
and
xor
and
out
cli
cmp
dec
in
or
cmp
sub
jp
xchg
js
xchg
cli
dec
inc
xchg
lds
loopne
sbb
mov
push
xchg
fmul
outsl
int3
sar
loop
mov
xchg
jecxz
jmp
jp
pop
jmp
cwtl
cmpsl
and
mov
mov
aam
push
pop
test
cs
xchg
cmc
es
gs
jne
std
sahf
mov
popf
lods
xor
jmp
out
nop
pop
xchg
ret
mov
fcoml
fnstsw
mov
nop
pusha
jo
popf
add
loope
stos
or
sub
dec
hlt
pop
fistpll
cli
fistl
dec
ret
fs
or
adc
movsb
and
daa
movsb
lds
mov
or
inc
cmp
std
sarb
movsl
sub
xlat
jae
sbb
push
xchg
or
cs
cwtl
popf
sti
lahf
fwait
notb
out
inc
or
in
ds
push
adc
mov
daa
xchg
dec
lea
cld
sahf
inc
and
fs
jl
bound
pop
mov
cs
xchg
or
ret
inc
cmpsb
adc
pop
push
sbb
addr16
int3
loopne
lock
les
fwait
jecxz
daa
sub
repz
mov
repz
xchg
lock
iret
das
jne
push
in
xor
lea
pushf
mov
mov
or
lret
rolb
mov
mov
push
push
xor
pop
rcll
popa
xor
imul
sbb
dec
faddl
scas
fsubr
loopne
sbb
push
and
shlb
imul
adc
add
and
xor
inc
pop
xor
pushf
push
iret
cmp
cmp
ret
xchg
sub
mov
icebp
push
or
dec
pushf
xchg
cwtl
add
aad
sub
pop
popf
jle
cmp
movsl
dec
andl
jo
xor
jecxz
xor
mov
test
movl
and
aam
fwait
mov
subb
in
roll
sbbb
add
mov
jo
xor
je
adc
adc
pop
dec
jl
push
sbb
and
add
inc
mov
fdivs
out
loop
out
add
mov
cmp
xor
and
nop
les
mov
sub
add
nop
cwtl
mov
xor
loope
xchg
sti
sbb
push
arpl
int3
add
testb
xchg
push
xorl
testl
fsubrl
xor
lods
push
sub
pusha
pop
xor
cmpsl
ds
pop
mov
popf
xchg
xor
aad
sub
mov
jg
xchg
mov
stos
divl
mov
out
pop
jno
lahf
jle
jne
push
xor
cmp
jne
outsb
aad
inc
call
adc
cmpsl
cwtl
push
or
cmp
fnstsw
clc
push
mov
or
out
shrb
xchg
dec
inc
cwtl
lods
stos
xchg
movsl
or
cmp
sbb
lods
inc
xchg
mov
in
cs
cmp
pop
xor
mov
inc
es
xor
aas
xchg
pusha
std
lock
inc
push
cwtl
lcall
shrl
mov
mov
jne
mov
arpl
icebp
add
sbb
popa
mov
push
xlat
ja
je
clc
mov
in
rorb
fmul
or
or
xor
out
insl
cmp
repnz
movsl
jne
lds
pushf
adc
mov
cld
arpl
mov
aas
ja
cmp
or
xor
gs
mov
mov
mov
jmp
pop
idivb
jmp
xor
or
addb
mov
or
sub
cmp
std
aaa
mov
fdivrl
in
jmp
out
popa
push
fsqrt
test
jbe
jge
pop
popf
lods
andb
inc
into
inc
jb
push
stos
fisttpll
and
jnp
pop
sbb
mov
shll
xor
jge
dec
sub
pushf
push
mov
int3
or
popa
jae
mov
fmul
xor
mov
out
cmp
aas
enter
mov
in
inc
bound
mov
xchg
inc
adc
or
in
pop
inc
and
xor
ret
add
jp
inc
fisttps
hlt
ljmp
and
icebp
sbb
jb
add
sbb
orl
fnstsw
mov
int3
aad
push
repz
insl
and
scas
icebp
or
jne
add
or
sahf
nop
imul
cltd
pop
sbb
outsl
xor
jp,pn
mov
push
call
jmp
clc
jnp
inc
push
push
fisubs
cmp
mov
pop
ret
mov
lret
push
das
and
or
scas
pop
cmpsb
pop
add
or
and
aas
out
mov
sub
push
fldl
sahf
jnp
lret
outsl
insb
mov
dec
sar
jbe
and
pop
add
mov
cmp
cmp
imul
rclb
cld
pop
mov
pop
mov
cmp
or
not
mov
mov
fldcw
lfs
adcb
xor
lret
int
or
add
mov
in
hlt
push
cmpsl
and
xchg
mov
iret
jl
int
pop
and
loopne
jecxz
push
pop
ss
xlat
inc
mov
mov
aaa
aad
sbb
push
push
dec
aas
ficoms
test
push
jmp
fsubrl
loopne
je
das
icebp
xchg
jp
in
jge
fmul
ljmp
mov
outsb
sahf
movsb
lea
test
xor
ds
mov
pop
mov
inc
inc
cmpsb
cmp
push
jnp
lds
cmp
or
outsb
mov
or
pop
popa
les
pushf
add
xchg
mov
cli
push
ljmp
loop
fwait
icebp
ds
decb
mov
mov
imul
xchg
ret
dec
adc
push
inc
loope
inc
adc
bound
sbb
push
ror
mov
cmp
in
push
jl
jg
or
outsb
sbb
stos
lock
cld
push
test
mov
out
mov
mov
inc
popa
push
jo
xchg
in
aad
enter
sbb
push
xchg
sub
clc
mov
jl
mov
test
nop
dec
jg
pop
mov
or
add
mov
push
mov
push
dec
stos
test
sbb
pop
inc
ja
sbb
xor
add
mov
pop
pushf
xchg
test
and
mov
sub
xchg
inc
popa
mov
mov
clc
out
mov
push
inc
popa
or
jbe
je
fdivrl
add
or
ret
js
js
mov
roll
mov
fwait
jp
jne
and
inc
push
pusha
xor
push
push
popf
or
sub
mov
testl
inc
loopne
fsubp
xchg
adc
sub
ja
mov
dec
push
lcall
cmp
mov
mov
cmc
nop
jbe
push
mov
sti
out
adc
mov
out
pop
sub
test
mov
cmpsb
xor
mov
inc
or
rcrb
and
mov
jp
ss
xor
icebp
out
fninit
daa
aad
int
inc
int
jns
enter
xchg
xor
aaa
mov
test
clc
jg
outsl
test
je
test
mov
test
imul
adc
repnz
cmp
and
out
fsubr
push
clc
push
out
in
adc
mov
lds
push
mov
std
mov
push
cmp
lods
xor
inc
nop
xor
add
enter
pop
cmc
test
int
pop
daa
inc
push
sub
or
mov
cmpsl
push
inc
xchg
je
and
xchg
push
in
cmpsl
js
pop
xchg
pop
sub
imul
add
test
cltd
out
cltd
and
loop
inc
stos
data16
pusha
jns
cmpsb
add
cmc
jge
andb
cmp
mov
and
in
mov
scas
aad
pusha
in
shll
push
ret
sub
jmp
push
shll
fdivrp
addl
not
mov
and
inc
imul
ds
sbb
loopne
adc
jle
lcall
adc
xchg
jns
lea
sub
jae
xor
sbb
mov
adc
cmp
out
arpl
cmpsb
inc
ljmp
jno
and
je
outsb
mov
jb
lret
adc
shll
jne
or
loopne
jecxz
dec
jl
sub
dec
data16
mov
pop
mov
insl
add
sub
push
arpl
cmpsb
xchg
add
sbb
cld
mov
mov
pop
andb
imul
lods
sub
lret
push
mov
outsl
sub
mov
and
repnz
int3
jns
inc
cmpsl
aaa
mov
and
dec
push
cmpsb
into
sub
out
hlt
jge
jb
push
jg
and
lahf
fsts
subl
filds
lods
loope
push
and
andb
jno
dec
xchg
push
ret
pop
mov
cs
fimuls
addb
jge
jle
xchg
adc
dec
jecxz
dec
loopne
push
std
adc
adc
sub
pop
orb
iret
sub
mov
mov
and
sbb
std
push
std
lret
shrb
mov
mov
orb
sub
fwait
pushf
je
roll
jnp
std
and
stos
stos
aaa
cli
and
jg
movsl
jge
xor
jbe
bound
les
out
add
lret
addr16
mov
sar
lret
es
loopne
addr16
iret
xchg
ret
pop
push
or
out
scas
dec
iret
sahf
push
xchg
pop
add
test
or
aad
push
xchg
out
add
jo
adc
mov
jo
mov
jg
jmp
imul
icebp
iret
aaa
aas
outsb
jns
push
xchg
lret
daa
or
adc
jp
cmpl
imul
out
dec
adc
jp
pop
repz
lcall
mov
aas
pusha
mov
loope
push
shll
push
dec
dec
xor
pop
xchg
xchg
lcall
inc
scas
popf
xchg
jns
mov
xor
dec
hlt
std
fistpll
mov
testb
shr
mov
jg
and
xchg
in
xor
cmp
cmp
adc
add
xor
js
stos
mov
sarl
clc
xchg
xchg
jbe
sarl
adc
hlt
dec
mov
movsb
sub
pop
vandnpd
pushf
mov
mov
movb
xchg
mov
jg
mov
dec
adc
jp
nop
or
xchg
inc
add
aas
cmc
mov
dec
popf
and
data16
movsl
sbb
mov
add
dec
je
jns
mov
cmp
dec
call
stos
jbe
cltd
in
xchg
cltd
int
addl
dec
sbb
pop
testb
inc
push
cmp
jb
dec
imul
rol
dec
push
out
mov
sti
pop
aas
pop
xorl
jecxz
roll
lods
pushf
sbb
cmpsb
int
mov
pop
sub
xchg
cmpsb
sbb
pushf
stos
mov
sub
push
mov
adc
outsl
jns
clc
mov
xor
xchg
sti
and
scas
sbb
std
leave
imul
int
push
xchg
iret
rorl
jmp
pushf
sbb
adc
jge
loopne
imul
adc
mov
dec
cmpsb
and
popa
clc
mov
mov
lock
jge
stos
push
mov
push
sbb
nop
flds
test
xchg
xchg
orb
inc
adc
leave
mov
add
popf
inc
or
std
inc
arpl
insl
nop
in
ret
inc
xchg
xchg
test
mov
hlt
push
stos
std
sub
sbb
xorb
int3
mov
mov
pop
add
or
ret
rol
call
aaa
jmp
jg
or
mulb
std
int3
dec
outsb
and
leave
adc
and
inc
mov
sbb
cmp
jecxz
push
mov
bound
repz
inc
mov
mov
mov
icebp
cmp
xor
cs
and
jecxz
cltd
sub
out
push
cmc
push
mov
test
aaa
addl
inc
mov
mov
sbb
stos
pop
movsl
add
dec
fcoml
incl
inc
enter
adc
jecxz
xchg
pop
sub
test
push
dec
and
pop
xorb
out
jno
loop
stos
sbb
lahf
in
mov
imul
mov
push
leave
out
sub
data16
cmpb
jb
sub
outsl
cmp
push
ret
dec
mov
je
xchg
scas
cmp
ficoms
fidivrl
mov
outsl
test
mov
hlt
inc
mov
dec
mov
or
test
pop
lock
bound
fsubs
lock
jno
imul
sbb
sub
mov
fistps
insb
test
fldcw
rolb
mov
sub
aaa
adc
inc
ja
call
pop
jmp
or
inc
jno
stos
mov
mov
rcrl
ds
or
clc
mov
inc
in
pop
mov
cmpsl
cwtl
insb
loope
nop
andb
xor
and
push
jg
push
xor
test
lcall
cwtl
repz
dec
sub
jno
sub
cmpsl
dec
pushf
iret
xor
inc
mov
adc
or
adc
push
cmp
push
mov
add
dec
add
call
push
mov
jg
add
push
dec
adcb
rcll
mov
sbb
int
sbb
xor
pushf
xor
mov
cmp
fisubl
dec
xor
xorb
inc
loope
addl
and
pop
mov
sbb
imul
xchg
push
data16
lahf
hlt
dec
dec
or
add
inc
xchg
stos
rclb
dec
mov
inc
cmp
xchg
cwtl
mov
inc
xchg
les
jbe
aas
clc
test
fstpl
mov
int3
out
xchg
sbb
jne
sub
rcl
ret
mov
ljmp
in
dec
sub
mov
idivl
jmp
or
js
std
xchg
aaa
adc
cmp
jnp
out
frstor
jae
mov
mov
repz
lods
in
pop
nop
mov
cmp
stos
adc
outsl
sahf
setp
divb
sub
das
cmp
xchg
shll
mov
add
xchg
hlt
jp
inc
push
pop
out
pop
lea
repz
clc
mov
fsubs
imul
jle
inc
pop
pop
inc
jle
cmp
push
movsb
jbe
insb
adc
icebp
popf
fistpl
lods
jecxz
fistpll
fisubs
cwtl
inc
psubsb
and
lea
or
xchg
push
jle
incl
add
or
fistps
in
fadds
dec
fdiv
enter
test
cwtl
dec
stos
and
jmp
sbb
pop
mov
movsl
inc
cld
mov
mov
jl
cmp
inc
dec
ror
add
ljmp
pop
inc
mov
pop
adc
xor
dec
scas
xchg
test
call
pop
push
icebp
mov
addr16
xorb
fsubrl
mov
adc
insb
aas
cmp
xchg
std
out
lds
jb
lret
push
jne
sbb
mov
gs
pusha
jmp
adc
pop
push
pop
fldl2t
mov
mov
fnstcw
test
add
xor
mov
mov
mov
cs
in
jb
fsts
xor
cmpsl
ficomps
testb
xor
xor
sahf
imul
cld
in
mov
bound
dec
outsb
dec
mov
pop
xor
jns
pop
inc
xchg
adc
loop
fdivrs
sub
pushf
lea
mov
jge
mov
pop
lock
or
cli
lret
pushf
jmp
inc
shrl
push
sub
cmp
push
sarl
sub
adc
xchg
lcall
rorb
gs
lahf
xor
lods
pop
inc
sahf
pusha
daa
mov
xchg
pop
sbb
mov
xor
lds
mov
and
or
fnstsw
test
rcrb
pop
dec
pop
mov
cmp
test
mov
adc
mov
fcoms
mov
out
fadd
sbbb
out
pop
hlt
out
push
lcall
scas
das
movq
mov
push
test
jp
mov
xchg
in
pop
leave
mov
and
mov
mov
xchg
and
arpl
mov
fs
imul
sbb
fimuls
push
andb
shll
jmp
in
arpl
mov
mov
test
adc
fwait
dec
call
rcrb
insb
mov
adc
mov
aas
push
adc
int3
in
inc
sbbb
dec
sbb
jg
loopne
xchg
pop
jbe
push
sbb
stc
out
and
call
int
cli
mov
jg
in
jmp
mov
mov
dec
pop
push
add
push
push
cltd
aaa
jb
jmp
imul
push
xor
mov
add
aad
std
rcll
sub
mov
add
lock
or
aaa
cmpsl
fwait
mov
mov
mov
jg
out
ds
outsb
repnz
clc
fs
fmull
js
pop
xor
dec
stos
shrb
stos
lret
pop
pop
mov
xorl
js
cmp
pushl
pop
mov
das
xchg
mul
mov
xchg
faddp
shlb
je
sub
cwtl
leave
das
adc
jno
das
cmp
pop
cmp
mov
out
jecxz
enter
pop
jmp
sahf
insb
push
add
stc
dec
out
and
jge
sub
jmp
shrb
dec
or
out
test
and
sti
aad
jo
xor
inc
sub
adc
movsl
std
fsts
mov
nop
sbb
ret
inc
add
inc
mov
cli
cltd
mov
jp
sbb
imul
mov
movsb
jnp
int
std
popa
jnp
mov
pop
cmp
cmp
ds
dec
add
push
sbb
mov
enter
testb
cmp
pusha
sbb
or
call
jae
cmp
lock
add
adc
and
push
cmpl
fwait
les
xchg
and
dec
rcr
cmc
dec
push
mov
xchg
xchg
add
inc
scas
or
leave
sub
push
stc
call
scas
add
adcl
movsb
mov
mov
xor
sub
pop
inc
outsl
and
notb
lret
int
mov
sub
pop
gs
pushf
xchg
mov
cmpsl
aam
sub
jge
pop
jns
xor
pop
and
push
jmp
push
call
imul
pop
scas
dec
xchg
xchg
dec
and
lods
adc
inc
cmc
stos
loope
xor
or
ds
jp
insl
xor
dec
sar
sbb
mov
mov
cmp
or
icebp
ficoms
das
mov
or
pop
arpl
fwait
jle
pop
negl
fdivrl
jbe
pushf
sub
mov
movsl
enter
push
add
pop
and
pop
cmp
push
aad
push
popf
fnstsw
sbbl
pushf
daa
loope
repnz
into
outsb
fildl
clc
pop
lock
pop
ficompl
int3
stos
pop
les
nop
lret
add
add
shll
mov
pop
sub
xor
and
pop
sbb
xchg
sub
mov
cmp
jmp
mov
pop
fs
sbb
div
fistps
xchg
popf
push
ficompl
mov
xor
sub
pop
xchg
nop
sti
mov
xor
mov
out
xchg
imul
adc
imul
jne
pushf
cmpsl
lret
sbb
movsl
cltd
push
repnz
loope
iret
sbb
pop
outsl
outsl
aas
sbb
icebp
xor
jns
je
fs
push
ljmp
pop
push
push
ljmp
and
dec
imul
mov
lret
test
mov
pop
cld
in
pusha
testb
pusha
hlt
pop
sbb
ss
adc
lret
data16
scas
ja
jg
add
cwtl
es
adc
xchg
push
add
jge
bound
jl
cmp
push
out
stc
repz
jae
jo
hlt
gs
and
cmp
fadds
jge
mov
out
data16
insl
fadd
lea
insl
into
je
bound
dec
sarb
or
xor
inc
add
jne
add
lahf
dec
popf
mov
ficomps
fucomip
xchg
lock
imul
jne
push
test
or
std
insb
jp
shrl
loope
mov
enter
lods
mov
sub
shr
fsubl
push
ss
pop
or
mov
popf
push
lret
adc
mov
push
out
jae
dec
add
pop
fwait
outsl
cltd
loop
orl
daa
xor
loop
in
and
jb
add
add
pop
lcall
repnz
aam
push
adc
es
loopne
inc
dec
cmp
adc
sbb
or
lcall
sub
jp
call
bnd
imul
pushf
adc
out
sahf
andb
mov
ljmp
mov
dec
idivl
loop
dec
cmp
or
cmp
sub
rcrb
mov
loope
sbb
std
fsts
or
lea
dec
sbb
sbb
add
adc
mov
cmc
cmc
sub
imul
pusha
sub
sti
loope
aam
pusha
les
and
push
mov
mov
aad
push
mov
test
jbe
andb
dec
icebp
xchg
ljmpw
xchg
or
jmp
int
adc
pusha
and
mov
addb
jecxz
mov
shl
mov
sti
cmp
popa
stc
flds
mov
adc
popf
cmp
mov
add
daa
xchg
lods
inc
mov
popf
adc
add
jmp
lahf
stos
jl
js
cltd
filds
add
or
rcrb
push
aam
shlb
pop
cmpsb
cltd
jo
push
imul
pop
nop
add
push
inc
repz
mov
sbb
cmove
xor
xchg
shr
dec
adc
push
daa
xor
jecxz
xchg
ret
and
imul
push
xchg
or
mov
mov
outsb
sarb
mov
fnstcw
subl
subl
pop
cmp
mov
mov
aam
cmp
push
je
xor
aad
push
gs
add
mov
bound
mov
xor
pop
notb
cmp
aas
push
aam
fmull
or
inc
jae
dec
dec
dec
cltd
ljmp
inc
xor
push
std
das
push
push
jbe
push
not
adc
mov
inc
ss
and
inc
loop
cltd
lcall
inc
xchg
push
xchg
icebp
sahf
dec
pushl
mov
jecxz
xchg
mov
repnz
sbb
dec
add
mov
sbb
int3
push
pusha
inc
sarb
fdivl
fists
test
inc
and
ds
pop
movsb
imul
cltd
loop
mov
fnstenv
into
inc
pop
outsl
and
xchg
filds
scas
xchg
xor
pop
jno
xchg
shlb
sbb
sbb
cmp
cmp
inc
popf
in
lcall
inc
pop
es
push
out
stos
push
mov
sarb
cmc
pop
jbe
imul
mov
call
xchg
cmp
mov
mov
mov
add
subb
cmp
aam
mov
aad
or
fnstenv
mov
mov
pop
push
imul
cli
cmpsb
jge
int3
cmp
aam
stos
push
lds
xchg
mov
sub
add
adc
jge
xchg
decl
je
insb
mov
mov
and
popf
cwtl
cs
cmp
push
inc
test
imul
sbb
or
stos
jnp
mov
ljmp
ror
dec
out
insb
scas
inc
mov
enter
push
leave
jbe
leave
xchg
das
push
mov
jle
and
pop
jp
enter
and
les
inc
cmp
arpl
pop
pop
hlt
sub
fstpt
inc
xor
leave
mov
sbb
mov
xor
sub
int
sbb
dec
shll
and
imul
lret
dec
mov
fidivl
rorb
jmp
mov
adc
subl
dec
or
fs
sub
mov
lds
jb
jmp
imulb
daa
mov
fmul
add
push
cmpsb
idivb
jbe
jmp
inc
or
push
push
jb
aam
pop
lahf
shll
sub
pop
enter
push
adc
cld
adc
imul
repnz
inc
hlt
int
jb
xchg
sub
xorb
xchg
das
inc
add
movsl
je
rcr
rcrl
push
sahf
adc
xchg
insb
das
cmp
xor
or
pop
xchg
cmpsb
jp
sbb
scas
or
ja
scas
out
pop
ss
fdivrs
stos
push
lcall
dec
adc
mov
add
xchg
xor
mov
sarl
cmpsl
lock
shlb
imulb
out
bound
jb
iret
scas
pop
dec
jg
adc
hlt
das
mov
adc
sbb
sbbb
jl
fldcw
fs
in
mov
cld
movb
xor
insl
shrl
xchg
and
xor
or
lret
daa
imul
mov
cwtl
out
std
je
loope
mov
out
stos
in
mov
lds
adc
adc
mov
jae
cmpsl
lds
pop
xor
push
xlat
push
sub
idivl
jmp
scas
sarl
push
xor
nop
cmpsl
enter
popa
mov
in
mov
inc
fidivl
sbb
sub
inc
arpl
mov
mov
int
test
mov
dec
decl
sub
in
scas
or
mov
scas
pmaxsw
sbbl
call
pop
ds
push
push
pop
and
adc
out
call
push
and
shll
out
xor
movl
out
inc
mov
jecxz
aam
push
inc
popa
orl
out
pop
jmp
dec
sub
jne
lods
adc
mov
addr16
jae
out
jnp
repnz
ret
ss
mov
mov
int
mov
jmp
in
aas
rclb
outsl
int
dec
xor
pop
mov
roll
icebp
mov
dec
out
adc
cmp
sti
mov
jmp
mov
sbb
jge
add
jmp
fwait
jb
add
iret
pop
cmp
sbb
popa
fucom
in
lahf
push
cs
cmpsb
aam
mov
pop
shr
jecxz
push
fbstp
and
xchg
in
mov
sub
lods
cs
jo
xor
push
stos
popf
jbe
cmp
sbb
adc
pop
addr16
out
imulb
sbb
and
sarb
idivl
or
add
adcb
push
push
sub
mov
mov
mov
call
mov
push
ret
scas
lea
mov
arpl
jecxz
test
imul
ljmp
xchg
or
xchg
or
mov
mov
dec
mov
sub
xchg
and
cs
aam
cmpsl
jbe
xchg
mov
cmc
xchg
or
hlt
sahf
inc
push
or
inc
leave
and
les
frstor
mov
or
push
push
dec
fwait
out
mov
dec
das
lcall
pop
push
adc
dec
loopne
and
insb
in
test
scas
mov
ret
xchg
xchg
addr16
fmull
add
or
movsl
cmovbe
push
ljmp
int
xchg
lcall
aas
iret
add
ret
add
arpl
push
inc
fsubrs
stos
dec
dec
mov
stos
aas
hlt
rcll
int3
movsl
pop
repz
test
xor
mov
xor
xchg
inc
push
push
popf
sub
cltd
push
cld
mov
nop
sbb
stos
fs
inc
insl
fs
mov
bound
repnz
js
mov
jle
test
inc
cmp
xchg
cwtl
add
test
xchg
dec
ja
jns
into
jns
jp
pop
mov
stos
mov
mov
aad
nop
or
cmpsl
rcrl
hlt
adc
nop
dec
mov
scas
aaa
dec
adc
nop
and
das
aad
cmpsb
in
mov
int3
xchg
lret
jne
ja
lods
pop
cmp
cld
les
lret
push
cmpsl
xor
or
outsl
adc
lcall
and
dec
ret
pop
into
lods
bound
xchg
test
push
cs
sbb
sub
add
dec
mov
ljmp
into
push
arpl
or
mov
xor
sub
lahf
jo
push
pusha
or
mov
mov
mov
xchg
divb
daa
push
xchg
pop
mov
cmp
push
xor
or
movsl
lcall
outsl
lods
xchg
fidivrs
cmp
rorl
dec
mov
xchg
add
sbb
rclb
lds
imul
lret
es
push
roll
xchg
aaa
or
stos
popf
or
xorb
int3
inc
cmc
and
aaa
mov
in
jle
jg
movsl
mov
aad
push
fs
bound
jg
and
cltd
xchg
push
jg
or
enter
imul
je
mov
adc
add
or
add
sub
xor
sub
fidivl
icebp
ljmp
add
cltd
shl
xchg
ss
push
dec
sbb
mov
push
fadds
pop
std
pop
loopne
xor
insb
nop
sarb
gs
push
pop
inc
sbb
push
mov
push
inc
int3
mov
dec
repnz
inc
inc
aaa
ja
jecxz
int3
mov
jmp
mov
mov
cmpsl
xor
outsb
mov
in
mov
loopne
leave
mov
imul
mov
pop
adc
out
xor
daa
lds
sub
lcall
add
mov
xchg
push
loope
push
mov
xchg
xchg
pop
je
andl
cmp
jecxz
xor
icebp
icebp
cmp
adc
xchg
ret
sarl
adc
or
in
pushf
scas
jmp
mov
imul
add
fadds
testl
lds
mov
dec
or
insl
out
and
add
mov
js
push
inc
insb
sub
lahf
sbb
into
dec
push
int
scas
test
jle
repz
rorb
xchg
sbb
or
mov
mov
stc
shll
and
add
bswap
mov
in
negl
loope
adc
fisttps
and
jle
movsl
xchg
shr
mov
pop
daa
test
or
add
fimuls
push
popf
test
push
scas
pop
popf
pushf
int
mov
js
pop
push
cmc
xchg
cmp
cmpsl
push
inc
push
pop
test
stos
test
outsb
pop
push
mov
stc
xor
dec
jne
mov
lea
cmp
xchg
loope
mov
push
xchg
imul
adc
aam
nop
add
out
dec
pop
aaa
lods
out
shlb
adc
in
sbb
das
out
mov
sbb
xchg
cmp
dec
jge
aaa
or
test
adc
jp
push
inc
or
les
lret
xchg
or
in
data16
mov
imul
push
in
daa
out
repnz
insb
stos
ljmp
and
sti
pop
repnz
dec
fnstenv
pop
scas
gs
push
mov
jmp
rclb
andl
pushf
inc
mov
push
push
adc
jge
roll
xchg
xor
jae
in
js
dec
sbb
jb
push
push
dec
stos
enter
jg
push
or
pop
mov
mov
mov
ret
and
xchg
xchg
cmp
imul
rorl
test
aaa
adcb
fs
in
dec
push
cmp
mov
shrl
add
lods
scas
mov
and
aad
out
and
pop
inc
enter
orl
inc
pop
insl
xor
cmp
sahf
fnstsw
add
enter
pop
cmp
dec
cld
jmp
and
xchg
jns
mov
int3
jl
repnz
mov
inc
jne
movb
dec
out
push
callw
notl
jp
out
lea
inc
sarb
or
xchg
call
mov
ja
jg
jo
pop
pop
push
xchg
push
xor
test
or
sub
dec
rclb
pop
dec
pop
insl
dec
mov
xor
jecxz
push
dec
sub
push
out
insb
subl
xor
mov
leave
mov
push
aam
or
adc
mov
cmp
mov
int
and
cmpsl
into
fcmovnb
in
and
je
lods
sub
mov
nop
mov
cmp
out
sti
call
and
fs
lods
into
dec
or
fwait
loop
mov
mov
lds
cwtl
je
shll
nop
bound
cmpb
push
xor
in
fld
icebp
movsb
pop
jbe
fstps
stos
push
rcrl
js,pt
jae
xchg
jbe
add
testl
xchg
das
mov
jmp
or
pop
xorb
insl
mov
sub
push
mov
and
push
loop
fstpt
sub
adc
xchg
icebp
sahf
xchg
roll
iret
mov
movsl
ljmp
cmp
and
or
adc
nop
ficompl
push
inc
pushf
pop
mov
aas
notb
sub
jecxz
decl
xchg
jo
test
sbb
jmp
adc
aam
and
sbb
sub
sbb
repz
les
mov
add
inc
movzwl
orl
icebp
adc
jae
jmp
cli
jnp
xor
fbld
daa
aad
pop
inc
mov
sub
xchg
loope
pusha
cmp
mov
in
mov
clc
out
aas
xor
bound
inc
jnp
sub
and
sub
pop
adc
xor
outsb
movsl
mov
jb,pn
fsubr
loope
push
outsl
mov
adc
sbb
repnz
adc
lock
in
xlat
cmc
out
cmc
popa
int3
wrmsr
rcl
pop
cmp
jg
outsl
in
das
mov
dec
mov
dec
outsb
cld
rclb
scas
cwtl
push
sahf
add
icebp
add
inc
pop
rolb
lahf
or
mov
fsubrs
out
and
jne
inc
pop
push
or
frstor
ja
outsl
insb
lods
push
bound
push
sbb
lock
ja
sub
sbb
adcb
lahf
test
fs
sbb
adc
add
int3
cmp
std
loopnew
mov
jae
rcll
aas
push
repnz
dec
cmp
std
add
repz
lds
xchg
lcall
pop
inc
rorb
je
inc
add
aad
mov
inc
inc
cmpsb
hlt
xor
fnstcw
xor
sbb
pop
outsb
into
imul
or
push
testb
dec
add
and
add
addr16
xor
in
cld
mov
lds
stc
fwait
cmp
ss
icebp
mov
sub
fcmove
sbb
or
lea
inc
cmp
imul
cmp
mov
xorb
add
mov
mov
mov
in
cs
lcall
in
push
xchg
aaa
jnp
mov
cmc
xor
arpl
dec
ss
imul
cmc
sub
or
test
jge
rcrl
outsl
das
cli
add
adc
jbe
scas
nop
pop
lret
mov
mov
jae
pop
push
rcrb
cli
jp
xchg
out
pop
push
xchg
mov
sub
inc
lods
mov
rolb
xchg
dec
sbb
sahf
adc
stc
in
stos
incb
lds
addb
js
lds
outsb
mov
jne
jne
sub
ljmp
popf
mov
push
hlt
jmp
push
xchg
icebp
push
sbb
cld
pop
inc
ljmp
adc
pop
das
mov
shl
xchg
mov
lret
pop
hlt
cmp
dec
out
inc
sbbb
inc
fs
je
xchg
jne
push
ret
inc
mov
jle
xor
mov
pusha
stos
hlt
mov
outsb
inc
inc
loope
add
jbe
mov
dec
repz
sbb
mov
loope
add
adc
add
mov
mov
or
mov
sbbb
inc
adc
xor
shr
icebp
roll
mov
xchg
into
data16
inc
push
sbbl
xor
inc
pop
add
ficoms
loopne,pt
push
test
inc
push
in
xlat
cmp
mov
ds
fs
mov
cltd
pop
xor
orb
inc
les
inc
add
cmp
mov
mov
xchg
mov
insb
das
jnp
lods
jg
xor
ja,pt
jmp
jmp
xor
into
pop
adc
jae
out
rorb
repnz
xchg
dec
fstps
add
or
or
imul
sub
add
fisubrs
ret
pop
xchg
neg
add
imul
push
sub
add
cmp
pop
push
or
mov
jo
int3
and
sub
xchg
push
xchg
fnstenv
dec
cmp
or
lea
mov
jmp
fcomps
pop
mov
push
adc
pushf
sbb
mov
or
in
push
mov
aas
xor
out
xchg
jnp
shlb
sbb
dec
and
lret
out
mov
xchg
insb
int3
mov
lahf
ds
sub
ret
add
mov
out
mov
xor
in
out
es
sbbl
mov
xor
mov
cmp
mov
mov
mov
pop
insb
cmpsl
mov
mov
test
mov
and
push
inc
adc
ljmp
fcomi
sbbb
movsl
sar
repnz
loopne
test
out
ja
adc
fldcw
inc
push
test
mov
pop
and
notl
aad
mov
decb
fs
adc
jecxz
cmp
sbb
pop
xchg
leave
sbb
add
jbe
popf
sbb
ja
dec
insl
mov
mov
cmpsb
inc
std
in
cmp
xor
out
jns
test
fbld
adc
into
test
push
hlt
shll
fbstp
mov
shlb
in
pop
mov
ja
in
aas
lods
vpcmpgtw
icebp
xchg
and
push
outsl
ljmp
les
stos
add
cmp
scas
pop
and
aaa
xor
repz
mov
and
stc
fcmove
dec
push
cli
aam
fldcw
push
mov
push
leave
mov
inc
jecxz
pop
xchg
jecxz
fildll
loope
mov
xor
add
sub
mov
inc
jmp
mov
mov
lock
mov
daa
in
cmc
negl
outsb
outsl
xchg
mov
mov
int3
mov
cmp
cli
insl
mov
addr16
xchg
mov
adc
mov
repz
mulb
cmpsb
dec
xchg
das
jg
pop
dec
mov
jbe
dec
push
std
ror
dec
mov
cmp
nop
lds
adc
sbb
add
add
dec
mov
pop
adc
xchg
popa
in
nop
or
iret
sub
push
or
mov
movsb
cmp
jge
mov
divb
pop
dec
inc
mov
mov
std
adc
add
iret
push
push
sub
jns
jge
mov
imulb
mov
add
daa
add
adc
das
or
xor
sub
jo
push
into
sub
jno
add
cwtl
pop
in
in
cmp
mov
loope
loop
sub
lret
aaa
aaa
fwait
enter
out
je
sub
bnd
sub
out
sbb
xlat
shr
jnp
rcll
icebp
scas
in
out
mov
push
cli
fcmovne
insl
inc
ss
xor
lods
mov
hlt
fistps
sbb
in
test
outsl
les
lret
outsl
cld
mov
fists
cmp
mov
push
inc
inc
pushf
ror
sbb
xor
std
nop
sbb
inc
inc
and
repz
lcall
and
cwtl
mov
add
mov
dec
sbb
idiv
push
cli
jmp
dec
gs
push
dec
push
lret
or
call
mov
sbb
sub
sbb
movsl
or
fwait
mov
inc
adc
push
aam
pop
sub
mov
mov
adc
loope
pop
dec
adc
outsb
pop
jbe
roll
fwait
not
push
mov
sub
pop
add
push
xlat
pushf
mov
call
lock
bound
in
xchg
jno
lods
jge
xchg
in
inc
jb
jp
lret
pop
push
imul
je
pop
cmc
mov
adc
or
push
shll
xchg
jge
int3
mov
push
mov
adc
push
xchg
in
and
mov
out
pop
call
xchg
jns
out
mov
or
aas
mov
sbb
adc
jnp
inc
inc
test
cli
jl
jbe
jg
in
repz
pop
jle
stos
aad
js
jnp
sub
je
out
sub
sbb
inc
movsb
mov
cmovg
mov
das
mov
and
les
inc
std
mov
sub
sbb
sbb
clc
pop
inc
pushf
xchg
lret
cmp
pop
or
call
icebp
mov
in
inc
fsubl
loopne,pn
push
test
cwtl
aam
pop
imul
pop
fstl
xchg
sbb
imul
leave
mov
icebp
adc
dec
jl
push
sbb
push
pushl
js
fs
sbb
pop
xchg
mov
into
loope
mov
or
rcrb
xor
fildll
fistpll
stc
push
dec
aad
xchg
cmp
je
in
xor
loopne
xchg
jle
pop
push
dec
and
add
sbbl
xor
std
mov
call
mov
lods
paddw
push
push
lret
and
out
mov
sti
shrb
data16
sarb
cli
add
lods
mov
push
mov
rorl
lret
mov
clc
and
std
shll
mov
test
add
xchg
mov
ja
js
mov
mov
aas
dec
les
fadds
mov
call
jbe,pn
mov
pop
outsb
fidivrs
enter
cmpb
fstpt
jae
shlb
das
mov
mov
mov
jnp
scas
lods
xor
xchg
imul
int
add
push
divl
xchg
subb
sbbw
jmp
ds
decb
mov
ficompl
lcall
jne
ret
sub
outsl
jg
sbb
fisubrs
sub
shl
bound
rcr
adc
outsb
hlt
cltd
pop
and
cmc
lret
test
dec
pop
sbb
or
xor
loope
int
jne
mov
add
push
jg
lret
push
in
or
inc
iret
pusha
divl
jmp
and
call
inc
sub
sub
lods
cmpsl
fistpll
sub
sbb
loope
or
add
mov
filds
subb
lret
jne
cmp
mov
add
sti
inc
sbb
mov
adc
jp
insl
pop
aaa
push
movsb
int3
sahf
aam
push
mov
cmpsl
inc
push
pop
mov
mov
ds
popa
and
stos
mov
iret
add
mov
fstpl
push
into
shl
fidivrl
cli
mov
scas
daa
and
xchg
dec
jp
shll
add
and
and
stos
push
clc
sarl
jae
sbb
sbb
mov
jae
lcall
sbb
dec
push
pop
xchg
xor
mov
dec
lret
mov
pop
leave
jle
pop
add
jno
das
insb
push
xchg
gs
shl
push
pop
jecxz
fwait
mov
mov
mov
inc
lods
adc
sbb
gs
fldpi
inc
stos
inc
lahf
mov
jecxz
mov
xlat
mov
jne
outsb
dec
ret
pushf
test
mov
lahf
daa
jl
aad
daa
loope
push
call
loop
sub
ljmp
cmp
icebp
leave
ret
mov
xchg
shr
fs
pop
in
out
dec
jp
add
add
clc
dec
cltd
push
scas
les
ss
fildll
sbb
cli
addr16
sub
jnp
bound
repnz
imul
inc
inc
adc
lea
out
outsb
jecxz
popf
jge
loop
outsb
cli
cld
cli
xor
outsb
and
fidivrs
pop
push
pop
into
xor
sbb
jae
pushf
adc
pop
call
pop
xchg
addb
das
push
and
and
xor
cmp
jg
xchg
arpl
bound
out
sbb
add
jl
fsubs
insl
rorl
gs
cld
sub
or
add
enter
pop
mov
pop
cmp
mov
loop
inc
and
popf
aas
call
ds
inc
icebp
outsb
mov
in
loop
imul
pop
imul
leave
lret
sbb
packsswb
mov
rclb
mov
inc
jae
in
sub
loop
push
xchg
lods
jle
or
movsb
fadds
xor
mov
ret
leave
incl
cmpsb
adcl
outsl
inc
pop
or
push
xor
int
imul
ja
inc
xor
xchg
les
fsubr
push
push
add
xchg
mov
hlt
xor
subl
push
je
ja
out
inc
sub
addr16
xchg
and
or
daa
dec
inc
jae
push
xor
popf
mov
inc
cmp
jns
repnz
daa
cli
fisubl
pop
shrb
arpl
cwtl
pop
popf
jl
pop
dec
lret
xchg
cmp
mov
push
sub
mov
sbb
push
ret
push
mov
out
add
movsl
call
pop
pop
out
fdivr
mov
sub
adc
dec
xchg
xchg
dec
inc
and
shlb
mov
jp
push
fst
mov
sbb
sbb
adc
outsb
pop
inc
scas
sahf
sbb
repz
repnz
outsl
popf
xor
dec
inc
and
js
sbb
pusha
adc
add
popa
mov
lock
aaa
sarb
ja
out
inc
and
rolb
aad
pushf
in
dec
xchg
xchg
data16
dec
mov
outsb
push
dec
or
add
sbb
mov
sub
das
leave
sub
rclb
xor
add
sbb
mov
movsl
dec
push
mov
cmp
dec
ror
or
andl
jo
test
hlt
xor
pop
mov
or
adc
test
out
fisttpll
jne
mov
stc
mov
mov
mov
jl
xchg
jbe
arpl
enter
stos
lods
cmp
jne
mov
xlat
or
ds
lock
pop
out
jbe
xchg
pop
aas
dec
bound
or
or
jbe
xchg
inc
sub
sub
mov
xlat
ror
out
test
cmc
pop
mov
push
xchg
addr16
and
mov
ror
inc
cli
inc
imul
xchg
sbb
pop
dec
add
adc
push
pusha
addb
call
mov
les
add
aad
dec
dec
negl
sbb
fmul
jno
mov
pop
ja
jno
add
imul
or
mov
cmp
loopne
push
lcall
or
shlb
aad
addr16
or
cmc
jg
std
les
nop
sbb
cmp
jge
push
imul
mov
mov
or
js
or
outsl
adc
aaa
inc
pop
inc
repnz
or
push
pop
sub
and
ficoml
das
cmp
js
xor
push
std
jno
mov
pushf
mov
add
inc
out
jle
int3
and
jo
jl
mov
or
jp
add
xchg
jnp
lret
movl
add
cmpsb
push
mov
dec
jle
and
out
inc
jmp
push
pop
push
jno
neg
sti
mov
fwait
sub
fstps
cmpsl
jp
stos
and
inc
js
decl
cs
je
add
xor
pop
aaa
fldenv
pop
loopne
adc
fstl
into
aaa
and
xlat
sub
fistl
ja
imul
jne
inc
loopne
mov
aam
mov
mov
push
cltd
cmp
pop
stos
mov
mov
notl
jge
cli
notb
add
jecxz
lret
adc
popf
cmpsl
aas
sbb
xchg
mov
xchg
lcall
sub
popa
out
xchg
adcb
mov
cmpsl
fnsave
jo
ja
xor
add
xor
push
and
or
sbb
popa
add
jns
addb
imul
je
aam
leave
lcall
jle
int
inc
inc
and
push
imul
jb
scas
jge
mov
decl
inc
or
mov
and
push
adc
jae
mov
ss
adc
outsb
shll
or
lcall
cmp
lock
sub
stos
jnp
ljmp
adc
fdivs
sub
xorl
jl
arpl
dec
cld
shl
cmp
xchg
insl
cmp
sbb
in
mov
pop
adc
jae
out
es
stos
repz
pop
push
ds
mov
dec
inc
sbb
aam
lahf
or
push
movsb
test
outsb
stos
testb
or
dec
push
lods
scas
mov
pop
ror
aam
bound
lods
dec
mov
pop
popa
stc
cmp
cld
shrb
and
xchg
and
dec
js
insb
je
or
mov
xor
dec
mov
sub
out
outsl
cli
push
lcall
popf
mov
sbb
xchg
xchg
out
or
repnz
inc
sbb
es
scas
aam
xlat
nop
mov
les
js
jb
pop
fildl
nop
or
inc
xor
rol
rclb
add
popa
inc
or
enter
cld
push
sbb
add
mov
cltd
sub
mov
lock
cmp
imul
sbb
mov
fwait
push
jl
ljmp
shlb
cmpsb
loope
outsl
jg
jo
gs
push
in
fdivs
add
push
outsl
jno
inc
and
jle
lret
mov
fdivrs
sahf
fsubl
arpl
jge
outsb
and
sub
cmp
pop
lods
pusha
xor
adcl
pop
and
cmp
or
stc
cli
clc
cmpsl
jmp
jnp
pop
xchg
push
inc
adc
mov
lods
sbb
push
rcr
into
or
fsubrl
test
xchg
xor
dec
aam
in
pusha
leave
popa
sbb
cmpsb
addr16
sub
sub
pop
mov
push
sub
cmc
mov
inc
mov
inc
mov
and
jl
ljmp
pop
or
popl
jg
or
out
stc
fcmovnbe
push
adc
jo
in
or
sub
push
push
sbb
hlt
les
icebp
jns
arpl
mov
or
aas
fcmove
out
imull
mov
cmpsl
nop
sub
push
in
push
daa
adc
call
mov
jmp
cs
fcomp
sbb
or
pop
in
psubq
dec
add
push
push
lcall
inc
and
sahf
cmp
adc
xor
sbb
data16
icebp
cmpsl
loope
arpl
push
mov
ret
dec
jne
sahf
and
xchg
lock
test
xchg
movq
aam
cmc
adc
or
add
ret
call
ret
fisubrl
mov
stos
and
in
aaa
jg
push
jbe
mov
xchg
into
jno
fstl
sti
xor
ja
sub
jle
popa
push
pop
dec
jecxz
sahf
mov
jno
cmp
cmp
mov
ds
push
insb
ror
mov
xor
push
cmc
push
gs
lock
arpl
xchg
mov
mov
xor
cmp
lret
lcall
xchg
bound
mov
loopne
subb
popf
in
mov
leave
outsb
scas
les
pop
inc
arpl
or
sti
loope
insl
ds
das
js
inc
xor
mov
mov
mov
push
push
addr16
in
push
and
mov
push
cmp
sbb
in
lret
aad
jns
addr16
xorl
lods
out
movsl
push
mov
sub
sub
mov
idiv
push
cmp
enter
mov
test
je
std
push
into
xchg
pop
xchg
test
jp
in
clc
adc
push
adc
bound
loopne
and
xor
adc
adc
sbb
pop
cwtl
outsb
xchg
loope
or
fiadds
and
xor
in
sbb
mov
inc
test
xlat
into
pop
lahf
xor
adc
mov
xchg
add
mov
inc
adc
jecxz
cmp
jb
jbe
sub
or
int
jb
cld
adc
leave
clc
cmp
cmp
xchg
or
jmp
xchg
addr16
data16
enter
adc
mov
pusha
mov
dec
xchg
mov
mov
push
push
push
adc
adc
arpl
shl
iret
aaa
movsl
stos
das
je
inc
push
push
test
pop
jne
in
lcall
sar
std
fs
or
stos
call
jecxz
out
mov
dec
lods
jo
or
dec
mov
imul
add
add
sbbl
mov
sbb
and
cmp
cmp
and
mov
adc
xor
xchg
in
mov
stc
jnp
jl
mov
sbbl
pop
mov
mov
or
and
aas
mov
icebp
inc
jae
hlt
loope
adc
stc
sahf
test
frstor
imul
jp
mov
pop
jg
jle
push
ret
mov
add
cmpsl
jno
pop
aam
test
pushf
mov
or
cmp
cmp
dec
dec
imulb
ja
gs
mov
lods
add
push
push
lret
loop
jns
mov
jecxz
mov
fisttpl
ja
adc
or
hlt
xchg
or
push
cltd
fnstcw
jp
test
test
and
or
repz
dec
mov
xor
cmp
push
loopne
test
pop
adc
push
xorl
lock
add
int
and
or
push
mov
inc
imul
aaa
xchg
mov
ficompl
and
push
dec
js
jp
add
inc
jns
jl
pop
movsb
fildll
inc
fstps
dec
ret
cmp
sahf
test
adc
xor
cwtl
decl
outsl
sub
and
sub
cmp
std
or
jle
mov
aam
mov
mov
xchg
cli
pop
sti
jmp
out
cmp
bound
ss
aas
adc
mov
cmpsb
in
fwait
inc
andb
adc
jb
faddl
jb
sbb
in
sbb
cli
movsl
movsb
repnz
add
lret
mov
out
daa
fadd
lret
xchg
pushf
movsb
shrb
mov
sub
xor
fadd
lods
pop
loop
fadds
popa
data16
and
mov
lods
icebp
mov
dec
popf
and
dec
push
jg
cmpb
inc
aam
cltd
mov
lods
inc
dec
inc
pop
xor
adc
iret
inc
xchg
out
push
inc
rorl
mov
sbb
cmp
imul
push
ss
cmp
cwtl
push
orl
pop
lret
mov
mov
inc
dec
and
sub
xchg
inc
jle
lcall
pop
jae
mov
mov
cmp
add
add
into
scas
mov
add
imul
in
add
xchg
out
pop
xor
inc
xchg
push
into
shll
mov
or
and
lods
jle
shll
dec
jae
push
nop
cmp
outsl
nop
dec
fs
mov
inc
sbb
ret
movsl
movsb
jle
xchg
mov
sahf
fs
mov
lret
jmp
mull
push
cmpsb
stos
fdivl
arpl
jnp
adc
out
add
push
sub
adc
jb
fistpl
jp
mov
fs
mov
inc
call
mov
scas
adc
sbb
aam
add
inc
iret
mov
into
hlt
mov
jecxz
fcoms
test
cli
mov
aaa
popf
jg
adc
ljmp
stos
inc
cmp
pop
cmp
xchg
cmp
mov
aam
mov
mov
icebp
daa
out
popa
stos
out
in
cmp
movsl
jp
mov
and
xchg
jnp
jne
ds
sti
jne
sbb
sub
hlt
add
ds
adc
cmp
aad
das
dec
mov
pop
or
stos
push
test
inc
sbb
inc
vpsubusw
outsb
jb
arpl
fdivs
xchg
pop
pushf
cld
out
mov
movsl
pop
filds
dec
cld
or
test
ja
js
pop
xchg
call
fstpl
jne
mov
xor
and
loope
mov
jmp
ret
inc
cmp
call
adc
jecxz
cld
mov
adc
pop
lds
add
aad
pop
dec
pop
mov
jb
jle
adc
test
sub
push
add
mulb
jo
stos
fmull
in
mov
xor
mov
inc
cmp
cmp
out
sbb
dec
mov
sbb
cmp
aam
out
leave
fists
and
cld
ds
push
in
out
pop
cmp
nop
mov
lret
mov
pop
andb
xchg
je
loopne
mov
es
mov
in
das
jg
dec
jns
sub
imul
dec
pushf
sub
add
cli
out
adc
jbe
sbb
test
es
and
test
mov
push
mov
in
shlb
mov
js
cwtl
jo
xchg
shl
mov
cltd
stos
test
insl
or
pop
sub
jns
test
notl
test
fstpl
jp
out
test
cmp
lret
inc
add
loope
mov
rolb
adc
lcall
inc
xlat
jecxz
mov
insb
push
dec
js
fdivs
into
loope
sbb
and
std
ret
pop
imull
ljmp
hlt
inc
sbb
cmp
pop
ficomps
arpl
cs
cmp
sahf
add
mov
xchg
xlat
icebp
pop
mov
dec
jae
repz
cld
mov
inc
mov
cld
jb
pop
or
sub
push
add
xor
testb
cmp
fcmovu
mov
sahf
push
imul
lcall
stos
outsl
cmp
divb
and
xor
xor
sbb
rcrb
mov
addr16
into
adc
mov
add
xor
xor
aaa
cli
adc
outsb
jle
lret
fmull
jmp
jge
pop
sahf
xchg
jle
jbe
out
call
lret
dec
loope
stc
jge
lods
xchg
lds
jns
insl
inc
jp
xor
mov
sbb
add
xor
inc
jp
sti
test
out
fs
fiadds
xor
fnstsw
dec
cmp
out
mov
push
jae,pn
push
je
cld
je
rclb
lds
mov
xor
or
xchg
pop
outsb
cmp
mov
xor
mov
pop
add
aas
bound
sub
out
lock
movsl
push
daa
cmp
cli
cmp
lds
cmp
pop
movsl
jle
add
movsl
ja
jg
inc
and
and
shrb
mov
inc
orl
inc
fcoms
imul
inc
fcmovbe
out
add
and
xchg
adc
inc
mov
and
or
or
jne
in
adc
lods
mov
pop
addr16
or
xor
loopne
scas
sbb
and
adc
or
pop
outsb
push
addl
inc
jbe
push
pop
jp
insb
cmpsb
pop
je
adc
and
mov
sbb
dec
adc
and
sar
cmp
push
cmc
jl
cltd
arpl
int
xchg
or
aaa
mov
mov
das
and
data16
or
xor
pop
hlt
ds
lcall
subl
add
push
aas
fldt
push
repnz
notb
lods
jo
ss
xor
fwait
and
jno
in
clc
into
cltd
and
or
dec
push
sti
add
mov
imul
mov
mov
cmpsb
dec
xor
adc
jecxz
cs
es
aas
jns
lret
xor
push
dec
lods
es
rcrl
jbe
inc
jno
jno
test
xchg
jne
jmp
xchg
lods
ja
loopne
mov
pushfw
xor
je
sub
cld
fildll
xchg
adc
pop
das
xchg
movsl
sub
fsubr
mov
test
js
scas
jb
ljmp
jp
adc
decb
std
mov
repz
pop
sbb
mov
push
mov
mov
rcr
xchg
jecxz
mov
jb
inc
test
jge
push
lret
push
lock
jmp
dec
test
and
add
test
inc
xchg
frstor
pop
add
mov
and
jg
pusha
mov
push
xor
adc
jmp
jbe
adc
rolb
sbb
inc
dec
mov
and
je
mov
dec
ja
lds
cmp
mull
faddp
movb
aaa
dec
add
push
rcll
adcl
jmp
fidivrs
inc
jg
in
lock
mov
scas
push
aaa
xor
inc
aas
stos
stc
lret
mov
pusha
jns
and
int
mull
fisttps
mov
nop
or
mov
mov
sub
sbb
in
jns
scas
xchg
filds
adc
adc
movsb
dec
into
repz
sbb
int
stos
or
and
div
jno
xchg
std
push
inc
cmp
loope
in
push
sbb
adc
call
out
imul
pop
inc
fbld
rclb
iret
idivb
int
sbb
mov
sub
pop
test
mov
sbb
push
aam
push
inc
cltd
pop
ja
inc
fnsave
push
mov
and
fcoms
iret
stos
jno
movl
cmp
sub
cmpsb
lahf
lahf
lds
mov
xchg
in
rol
push
sbb
pusha
in
test
inc
adc
mov
sub
hlt
jnp
push
movsl
mov
or
push
jbe
shlb
lods
jg
shll
int3
lret
cwtl
sbb
aad
jle
aad
clc
and
mov
or
loope
ficoms
push
in
in
inc
out
push
nop
shll
mov
mov
add
rcrb
icebp
ds
sbb
cmp
sbb
pop
mov
mov
sub
inc
xchg
mov
mov
or
mov
mov
jp
int3
out
aam
jbe
and
in
push
outsb
in
sub
or
lock
icebp
dec
sahf
and
mov
test
push
cs
pop
fistpll
inc
push
mov
cmp
mov
push
aad
sbbl
cmp
or
jge
fdivs
mov
adc
popf
cmpsl
test
ret
mov
stos
lods
mov
pop
push
pop
popa
mov
jmp
gs
sbb
mov
jae
pushf
sub
gs
gs
insl
popf
insl
test
add
mov
ljmp
fldenv
hlt
pop
and
loop
call
cmpsl
push
das
iret
pop
inc
outsl
pop
test
inc
jg,pn
and
lods
lret
out
sbb
or
sub
fcmovu
mov
and
cwtl
in
loope
mov
lcall
insl
in
fisubrs
scas
sub
inc
hlt
jecxz
push
call
mov
xchg
or
fiadds
jns
lods
movl
fbld
scas
mov
roll
enter
scas
pop
test
inc
aas
mov
nop
pop
idivb
inc
pop
lahf
jle
jo
sub
pop
add
in
xchg
inc
insb
pop
fmulp
inc
push
inc
sub
dec
clc
push
loop
sub
adc
cmp
mov
mov
das
fisubs
fisubl
adcl
das
or
ds
adc
pusha
jl
mov
imul
fstpl
mov
rcrb
inc
sarl
testb
push
mov
imul
subl
or
cwtl
xor
das
xchg
pop
adc
imul
movsl
mov
pop
mov
sub
out
push
aas
loopne
cli
jae
push
stc
stos
fldt
ljmp
sbb
cmp
sub
dec
adc
push
adc
or
scas
xchg
rcrl
js
add
mov
ficoml
sub
ror
mov
fnsave
add
movsb
imul
cmovb
test
xor
div
mov
and
push
enter
push
sbb
mov
addr16
or
pop
push
or
mov
sub
or
jle
jne
adc
test
push
jecxz
mov
mov
movsl
jb
cmp
bound
and
arpl
mov
das
sbb
inc
imul
and
pop
xchg
lods
pop
add
pop
inc
insl
mov
push
push
adc
notl
lret
roll
filds
lock
and
out
mov
rcr
fbstp
lods
mov
add
aad
repnz
aad
add
add
daa
lea
pop
das
adc
mov
imul
mov
jns
lcall
cmp
mov
xor
rolb
mov
xchg
or
inc
lahf
hlt
out
or
xchg
fnsave
cmp
popa
sarl
stc
test
pop
into
pop
push
scas
scas
out
pop
or
lahf
mov
and
or
mov
xor
inc
xchg
lcall
ret
jo
xor
aam
int3
cli
mov
jbe
mov
or
xlat
mov
add
mov
bound
or
jg
xchg
sbb
inc
dec
adc
movsl
mov
mov
int
add
push
mov
adc
fstp
xchg
data16
and
lcall
or
cmp
pop
in
sub
insb
jge
mov
pop
test
xor
fisubl
xor
clc
cltd
pop
dec
iret
inc
ret
rcl
ret
in
mov
adc
or
sbb
xor
shll
shll
xchg
in
xor
stc
cmp
jg
fstpt
jp
cmc
popa
pop
fmul
and
mov
push
pop
jmp
jno
dec
add
or
sub
negl
xlat
push
scas
and
mov
cmp
movsl
xchg
ror
rol
lret
push
ret
stc
add
in
mov
mov
pop
or
jns
fwait
push
pop
shll
fldl
mov
das
xchg
xchg
mov
lds
adc
in
out
les
andl
fdivl
lea
mov
rcrl
je
hlt
cmp
rol
aaa
jmp
sub
dec
xlat
jae
mov
shll
push
hlt
fs
repnz
loop
test
push
lcall
sub
push
aaa
clc
and
out
test
push
movsl
les
mov
fs
std
mov
jnp
sarl
cli
jae
bound
xchg
into
pop
push
cmc
pop
xorb
adc
dec
push
imul
aaa
inc
push
fiaddl
scas
inc
add
les
dec
fisttps
adc
cmp
orb
and
xor
sbbb
fwait
arpl
enter
icebp
ja
jae
xlat
pop
bound
loopne
rorl
movsl
sub
rorl
arpl
shrl
mov
add
pop
lahf
and
or
cs
adc
movsl
xor
sub
mov
or
push
popa
pop
lahf
pop
out
xor
cwtl
call
sub
sub
cmc
mov
pop
repnz
inc
dec
xor
xchg
jbe
mov
mov
mov
fdivrl
inc
dec
and
je
sbb
push
adc
cmpsb
adc
xchg
fstps
shlb
js
cmpsb
xor
cld
add
out
cli
into
and
test
mov
clc
cmp
adc
sub
push
jns
jae
pop
pusha
mov
add
cmpsb
mov
push
pop
push
push
fwait
cmp
push
jae
mov
add
sbbb
xor
fadds
sub
inc
xor
imul
pop
in
dec
movups
cmp
js
dec
inc
stc
cmp
test
cmpl
cmp
inc
jno
inc
or
stc
insl
loopne
mov
std
cmp
hlt
xchg
and
mov
cwtl
push
leave
push
sub
in
jle
stc
dec
or
mov
pop
sti
mov
in
clc
in
icebp
testb
mov
aas
pop
in
xchg
popa
xor
jno
xor
pop
cmpb
adc
xchg
and
cmpsl
dec
divl
and
stos
repz
jmp
adc
adc
cltd
sbbb
data16
xchg
xor
jno
or
inc
sbb
or
test
push
in
in
push
mov
loopne
test
xor
add
pop
fisubrl
loop
clc
cmp
sub
dec
pop
ss
lods
lea
push
unpcklps
repnz
stos
icebp
out
and
jo
pop
sub
and
xor
pop
sbb
arpl
jnp
test
dec
cmp
adc
fwait
insl
lods
mov
fiadds
cltd
dec
loope
adc
mov
out
cmp
inc
add
jbe
in
xor
cmp
inc
lds
push
insl
mov
push
aad
or
cwtl
or
mov
test
cli
ficoml
jle
jns
ja
sub
xchg
xchg
cmp
cltd
pop
sarl
in
inc
mov
mov
cmpsb
sub
xchg
sub
add
jo
jp
jnp
ret
test
push
rcll
lock
out
pusha
test
nop
and
cmp
xlat
xchg
xchg
in
test
pop
push
sbb
jl
mov
xchg
jp
addb
push
es
fs
cmp
sbb
maxpd
sub
lds
arpl
mov
inc
mov
int
sub
mov
test
xchg
inc
fnstcw
orl
push
mov
xor
aam
xorl
xor
adc
inc
mov
fsts
rorb
sub
shlb
sarl
mov
inc
enter
xchg
and
imul
scas
ja
fldl
fadd
leave
xchg
dec
imul
dec
xchg
dec
mov
or
mov
jbe
enter
shlb
xchg
dec
cmp
ret
xchg
mov
lahf
sbb
cld
dec
aas
in
stos
fadds
lret
and
fnstcw
cs
pusha
inc
dec
push
sbb
rclb
cwtl
jp
in
and
jne
test
lds
sub
nop
or
pop
and
rcrl
mov
mov
adcb
fs
int3
aad
mov
pop
pop
push
clc
push
add
test
and
xchg
or
sbb
adc
jbe
in
jnp
cmp
mov
mov
xor
xchg
jbe
insl
repz
mov
push
fcom
mov
inc
test
pop
insb
lret
pushf
mov
cltd
pop
push
xchg
sbb
out
bound
out
inc
dec
bound
leave
jo
ficomps
int
cmp
in
adc
pop
xchg
mov
popf
addb
add
xor
loope
mov
sahf
xor
and
mov
shlb
lret
std
fiadds
add
pop
xor
loopne
inc
and
insb
or
mov
nop
filds
sbb
sub
inc
data16
jno
popa
imul
shlb
and
dec
jno
sarb
push
gs
popf
test
mov
rcll
int3
lcall
and
xchg
aas
mov
lea
addr16
cs
cmp
xchg
or
bound
cmp
lods
mov
adc
jmp
pop
jne
mov
test
jnp
leave
mov
push
or
repnz
or
aaa
jle
cs
mov
or
xor
push
push
fwait
xor
std
ror
xchg
movsl
cwtl
xor
and
inc
les
pusha
fisubl
fimull
jno
fdivl
pop
adc
jo
push
test
xchg
loope
popa
pop
jno
jge
aam
mov
xchg
les
fldl
aas
cwtl
mov
stos
adcl
mov
xchg
test
mov
addb
mov
cmpsl
and
out
sarb
adc
and
cmp
xchg
mov
insb
rclb
adc
push
pop
cmp
pusha
or
xlat
adc
inc
mov
loope
jo
dec
lahf
xchg
xchg
xor
imul
arpl
jl
jae
cli
icebp
xor
aas
arpl
pop
aam
lock
loop
ss
mov
ja
stos
pushf
push
cmp
ret
daa
sbb
mov
fs
inc
push
jns
orl
rcl
ljmp
and
cmp
or
jne
enter
jp
test
cwtl
outsb
jle
and
mov
mov
test
inc
fwait
mov
inc
push
lods
adc
lods
mov
ror
fidivrs
mov
stc
sub
cmp
sbbb
mov
icebp
mov
pusha
sbb
sub
sbbl
cwtl
loopne
inc
mov
and
out
sub
add
outsb
and
xchg
std
lock
push
pop
out
pushf
lcall
mov
daa
daa
mov
sahf
subl
arpl
xchg
leave
sub
icebp
lods
cmp
cmp
mov
adc
mov
jge
cltd
mov
dec
jnp
ljmp
ss
cs
push
lret
jns
nop
mov
mov
or
sub
orb
mov
sub
xchg
iret
adc
imul
lea
xor
outsb
ss
mov
lods
push
jecxz
xchg
inc
jae
insl
push
mov
push
cmc
pop
das
and
fisubrs
sbb
sbb
dec
cmpsl
in
adc
les
stos
add
rcl
mov
scas
mov
das
inc
sbb
aas
movups
pusha
dec
insl
mov
jmp
mov
je
or
cmc
sbb
pop
ljmp
cmp
sahf
push
add
popf
jae
sbb
mov
fcomi
xor
xor
aas
mov
inc
mov
nop
sbb
pusha
fwait
sahf
cwtl
sub
and
jno
repnz
mov
in
and
fs
fcomi
js
and
stc
xchg
sti
xchg
aas
push
jl
rorl
adc
mov
out
daa
aas
aam
les
jge
adc
and
test
cltd
sub
xor
loope
lea
adc
jno
das
dec
mov
scas
dec
jl
fwait
aam
test
pop
std
jb
imul
mov
into
or
sub
out
pop
cmp
icebp
jl
mov
mov
mov
cmp
cwtl
cld
xchg
gs
outsb
cli
mov
fsubr
sar
mull
adc
sbb
pop
and
mov
add
or
add
cli
idivl
aad
and
int3
jo
pop
mov
out
in
pop
movsl
lahf
bound
test
adcb
jne
adc
mov
sub
test
xchg
cmp
xor
loope
mov
inc
add
or
mov
int3
repnz
push
out
add
pop
pusha
cs
test
scas
xor
mov
cmc
aad
xor
sbb
sub
jmp
or
xchg
fs
xlat
fs
scas
push
pop
mov
aas
sbb
test
test
sub
push
mov
popf
das
cltd
cmc
das
sub
push
push
pop
dec
sahf
sbb
fnstenv
outsb
notb
inc
add
lret
cmp
jne
cmp
jmp
mov
jle
outsb
test
imul
pop
pop
jb
lret
and
adc
adc
out
sub
push
ret
popf
movsl
aam
jnp
enter
js
lcall
mov
add
xor
flds
pop
push
xor
hlt
lods
lods
push
int3
inc
inc
jl
stos
test
das
enter
mov
dec
nop
add
push
std
jne
add
and
pop
nop
cmovge
or
mov
push
mov
pop
xor
cld
enter
out
and
mov
mov
repnz
jb
enter
fbld
pushf
push
sahf
inc
xchg
mov
test
cltd
dec
adc
rcrb
jmp
jbe
test
rorb
mov
xor
lods
or
mov
aad
leave
cmpb
mov
jb
addr16
mov
mov
imull
test
jae
sti
cltd
mov
es
test
ret
jl
mov
sub
inc
mov
xor
mov
mov
movhps
pop
mov
cld
inc
sbb
xor
out
loope
lock
cmp
bound
xchg
sahf
xor
andb
dec
jbe
es
movsb
fsubrs
jae
aas
xor
pop
sub
mov
popf
mov
and
jecxz
jbe
gs
fstpl
arpl
jl
fwait
cld
sbb
xor
sbb
pop
xor
mov
jl
aaa
jp
fidivs
push
insb
xchg
lods
bound
mov
push
push
sub
ljmp
loopne
out
cmpsl
aaa
jle
dec
fsubp
sahf
repnz
insb
outsb
jg
std
mov
rorl
jae
js
cmc
in
xchg
or
movntps
enter
js
jbe
sbb
fsubr
rorb
mov
push
pop
jne
shlb
insl
imull
jae
xlat
mov
push
adc
imul
pop
in
push
pop
mov
xchg
push
scas
stos
and
sub
cli
adc
inc
ljmp
dec
in
into
cmp
out
addr16
xorb
xor
outsl
adc
lods
lahf
mov
add
and
dec
sub
ficomps
jecxz
and
mov
mul
les
jnp
scas
add
inc
mov
clc
nop
mov
xchg
mov
dec
xchg
test
int
mov
mov
inc
imul
fsubr
lahf
mov
xor
sub
xor
imul
jl
mov
scas
enter
into
loope
jp
cs
test
inc
xor
addr16
jae
fisubl
cli
mov
call
xchg
stc
jns
xor
lods
sub
add
cmpsl
ljmp
push
mov
ret
mov
cmpsl
cmp
push
jecxz
inc
loope
aas
sbb
call
mov
lods
mov
and
jns
pop
push
mov
mov
cmp
scas
add
idiv
movsb
test
pop
js
clc
scas
out
xor
fmuls
sub
sti
sub
sub
xlat
lcall
sbbb
pop
adc
pop
and
and
out
testl
mov
xor
movsb
cmp
repz
andb
cwtl
fwait
or
adc
addl
dec
xor
fstpt
sub
mov
cmp
inc
pusha
xor
jb
sbb
jmp
pop
xor
int
lret
das
out
leave
jb
clc
daa
or
repz
mov
mov
pop
les
in
mov
imul
xchg
inc
cmpsb
pop
test
push
and
lock
stos
out
int
ds
push
pop
mov
ljmp
rcr
cmpsb
scas
faddp
insb
xchg
sub
daa
xchg
dec
hlt
mov
sar
dec
popf
mov
mov
lea
dec
mov
mov
mov
fdiv
mov
mov
mov
les
dec
test
mov
fildll
inc
jno
pop
xor
sbbl
or
fbld
push
stc
lahf
push
push
mov
out
mov
or
std
icebp
jo
mov
push
adc
jae
sbb
loop
lcall
cmp
add
adc
int
cmpsl
mov
adc
insl
pop
sub
ds
in
fwait
mov
sbb
out
subb
xor
push
test
negl
jno
popl
cmpsb
mov
sub
divb
mov
and
test
test
xchg
in
pushf
pusha
test
ret
addl
sub
cld
test
mov
dec
mov
jecxz
cmc
clc
ficoml
and
sti
aas
aaa
ss
jb
aas
mov
jbe
adc
add
enter
dec
sarl
cli
stc
xchg
pop
jb
cs
loop
bound
icebp
add
negb
inc
jno
dec
mov
mov
mov
dec
pushl
inc
dec
sysret
jnp
sub
cli
push
jno
sbb
dec
jge
add
xchg
or
arpl
stos
xchg
push
mov
scas
imul
lret
sub
idivl
mov
sub
cmp
lds
fincstp
testl
xchg
sbb
pop
xor
pinsrw
xor
stos
mov
push
mov
push
mov
data16
pop
cmpsl
sarl
cmp
test
cld
fadd
aad
sbb
mov
or
or
dec
sub
and
icebp
daa
cli
rcll
sbb
ja
scas
rcll
stos
mov
int
mov
push
inc
jg
adcb
scas
adc
inc
clc
adc
fdivl
js
inc
ja
pop
mov
outsb
jae
sti
lds
sub
and
push
pop
std
sti
add
mov
test
in
jmp
hlt
adc
or
int
mov
xchg
repnz
pop
inc
in
mov
xchg
push
mov
fmuls
mov
add
fcoms
fisttpll
bnd
push
cmc
fsubs
jg
xchg
ret
pop
dec
out
pop
jns
and
rol
and
js
aam
mov
int
lea
sbb
jle
sub
push
lods
pop
or
ss
out
lret
repnz
test
outsl
lods
mov
dec
sub
mov
inc
push
xchg
sbb
gs
ljmp
addr16
flds
sub
pop
pushf
mov
scas
jno
lahf
or
imul
pop
jecxz
pop
shlb
jl
ljmp
les
jge
dec
inc
cs
jns
cmp
scas
mov
cmp
pop
adc
push
and
cmp
outsl
nop
jg
push
xchg
add
xor
icebp
inc
mov
add
and
sbb
int3
rol
push
push
insb
mov
dec
scas
sbb
dec
sub
cmp
adc
push
inc
cmpsb
sub
testb
push
in
add
or
mov
into
mov
addr16
and
xchg
cmp
cmp
jb
imul
rorb
jge
aaa
jnp
clc
and
add
xchg
inc
clc
loop
aaa
test
sub
test
je
xchg
mov
sbb
es
mov
jmp
aas
scas
fdivl
std
ss
sbb
inc
inc
add
push
test
cs
scas
jbe
roll
mov
stos
push
sbb
jo
pop
imull
dec
push
test
mov
pop
fimull
mov
imulb
xor
std
mov
das
js
pop
scas
mov
shr
jg
cld
js
sbb
stc
cltd
mov
push
dec
mov
push
adc
pop
and
jb
cmp
jb
push
push
icebp
jge
movsl
dec
arpl
fcomps
cmpsb
mov
pop
mov
xchg
jnp
out
push
jno
outsl
push
xor
aam
jp
popa
notl
cli
inc
fsubrp
pushf
lahf
pop
add
dec
adc
push
jno
mov
xor
imul
cmp
test
sarb
inc
les
int3
hlt
stos
adc
ja
fcmovb
mov
or
in
iret
roll
push
push
stos
in
mov
lea
or
push
push
pop
repz
adc
push
mov
pushf
inc
mov
jb
fcmovnu
add
mov
les
mov
fistl
xor
adc
sbb
mov
cltd
js
in
mov
call
jns
popf
addl
xchg
sahf
mov
lahf
iret
push
inc
clc
jl
in
inc
das
rorl
jmp
adc
movsb
mov
out
mov
aaa
nop
push
ds
sahf
jno
mov
pop
push
mov
rclb
push
dec
outsb
sarl
sub
adc
xor
pop
sbb
sub
adc
sub
ret
into
xchg
insb
mov
mov
and
jge
in
jmp
cmp
daa
stos
mov
pop
jbe
lret
movsb
nop
pop
repnz
test
sbb
stos
jne
cmp
mov
mov
mov
lret
sar
lahf
dec
adc
cmp
and
push
xlat
cs
push
add
adc
outsl
js
aaa
subl
add
negl
fsubs
jl
push
in
outsb
out
movsb
enter
loop
mov
dec
jecxz
adc
cli
icebp
fcmovbe
ljmp
stc
inc
mulb
inc
cmp
pop
mov
pop
daa
jo
sub
cltd
or
stc
mov
cmp
pushf
sti
cmp
mov
in
sbb
das
fdivs
adc
adc
rolb
add
pop
sub
loopne
xchg
sbb
mov
sahf
test
inc
jecxz
pusha
rorl
cli
sub
arpl
mov
jmp
sbb
adc
mov
jbe
fcompl
popf
icebp
xchg
jg
xor
fdivl
mov
inc
mov
dec
adc
pusha
cmp
jmp
ja
adc
push
inc
jo
sbb
inc
and
mov
dec
test
sbb
add
jns
aaa
mov
xor
xchg
sub
mov
jb
sbb
shrb
call
cmp
jle
pop
ret
xlat
ret
pop
sti
leave
xor
mov
out
stc
xchg
adc
iret
fcomi
js
add
mov
scas
sbb
das
into
jnp
push
mov
in
or
xor
lds
mov
mov
mov
adc
std
shrl
icebp
xchg
ror
mov
in
jnp
sbb
std
mov
bound
or
orl
cli
mov
adc
loopne
cld
call
inc
push
sahf
imul
and
sub
fs
mov
push
lcall
lock
pop
mov
fdivl
lahf
push
mov
das
jge
icebp
inc
push
push
out
add
or
lret
xor
fwait
mov
fstl
es
mov
jnp
jge
movsl
fs
pusha
outsl
repnz
mov
pop
push
enter
lods
sbb
aas
inc
sti
lea
cwtl
dec
xchg
pop
push
cmp
adcl
in
fldt
stos
dec
mov
sbb
pop
sbb
ret
sbb
xor
pop
leave
into
jl
ficomps
inc
push
lahf
data16
mov
cwtl
add
shlb
data16
addr16
jg
inc
cmp
jmp
xor
scas
popf
cmp
jle
dec
insb
add
lods
mov
ljmp
mov
adc
xlat
pop
iret
iret
dec
popf
addb
push
mov
faddp
push
repnz
jnp
mov
std
cmp
aas
xor
les
fwait
jb
stc
int
add
mov
fistl
and
jno
push
subl
mov
cmpsl
fidivrs
inc
xchg
jmp
sbb
cmp
jge
mov
mov
hlt
out
outsl
imul
cld
int
push
jo
push
add
xchg
or
mov
popf
mov
push
mov
in
mov
or
mov
xor
or
popa
xorl
pop
lods
insl
and
xor
shlb
fs
scas
rolb
cmpsb
loopne
push
out
rolb
or
cmp
or
mov
dec
mov
push
mov
popa
mov
sbb
ss
cmp
pop
shl
lods
sub
adc
sbb
hlt
push
aaa
aaa
in
push
das
ficomps
jge
mov
mov
pusha
or
or
xchg
insl
mov
pop
out
mov
mov
cmp
pop
jl
sub
int
pop
inc
push
outsb
ds
add
cmp
fbld
xchg
adc
xchg
cli
insl
sub
and
cld
sub
imul
jmp
and
pop
fst
stc
imul
mov
clc
ret
lret
push
add
jecxz
gs
or
jmp
adc
enter
and
mov
in
xchg
ljmp
mov
cmp
push
add
and
pop
test
lahf
loopne
rcl
fdiv
mov
stc
lock
sub
out
adc
and
lret
pop
outsl
pop
mov
mov
loope
mov
sub
mov
mov
lock
xlat
lcall
pop
lret
stc
cmpsb
mov
std
mov
lcall
cli
popf
push
xchg
hlt
xchg
mov
xor
rorb
jae
pop
enter
xor
or
stos
push
push
push
rcl
jl
cmp
jecxz
icebp
sub
xor
outsb
mov
roll
and
lods
pop
shlb
sub
outsb
dec
scas
jae
rcl
and
int
insb
ficomps
xorl
mov
add
lds
js
fdivrs
xor
in
leave
rcll
mov
shlb
scas
xor
lea
fcmovne
daa
mull
push
outsl
pop
ret
dec
rcrb
test
jo
push
mov
or
jb
stc
jle
cli
int
dec
xchg
add
inc
loopne
push
xorb
add
popf
sub
sub
pop
jge
xchg
mov
pop
dec
cmp
addl
out
lods
mov
sub
scas
jno
int
fldt
dec
ret
movl
adc
mov
cmc
dec
loopne
inc
add
xchg
pop
ja
stc
lahf
bound
fimuls
fcoml
pop
fwait
ds
mov
ret
mov
jecxz
jg
jbe
sbb
mov
push
je
push
jb
fldcw
pop
or
lret
and
xorl
dec
jg
aas
mov
cmp
in
lcall
push
out
xor
out
pusha
inc
ljmp
daa
ret
jle,pt
icebp
and
inc
inc
shrb
gs
sub
adc
sub
dec
mulb
hlt
fisttpll
enter
ljmp
cmp
shrb
xchg
mov
add
sub
xchg
push
inc
inc
jns
cmp
dec
sub
cwtl
add
out
testl
shr
or
shrb
sbb
in
mov
push
cltd
gs
add
add
outsl
cmp
nop
js
out
jle
enter
jl
aam
sarb
inc
inc
adc
repnz
into
out
pop
int3
sub
test
xchg
jnp
dec
test
xchg
mov
rorl
sbb
and
mov
lahf
loopne
ljmp
add
inc
jne
jp
mov
cmp
fbld
xor
cmpsl
inc
daa
outsl
int3
int3
test
xchg
int
mov
sti
js
push
push
xchg
adcb
mov
int3
out
daa
add
dec
ljmp
or
pop
fistps
lcall
mov
adc
stos
mov
insl
loop
add
scas
popf
mov
incb
mov
arpl
outsb
je
xor
pop
fldcw
aaa
or
mov
sub
hlt
int3
sahf
mov
call
insb
scas
popf
loope
sbb
sbb
fcmovbe
jp
in
sub
aaa
pop
jns
insl
fidivrs
xor
or
sbb
xor
pop
clc
loopne
adc
xor
or
xlat
or
cmpsb
push
jg
xchg
mov
push
xchg
repz
fwait
js
sub
loop
fsubs
leave
inc
push
aad
push
int
sbb
pushf
dec
into
fcmovnb
xchg
push
aam
mov
in
jbe
or
insb
shl
or
cmp
xchg
cld
insl
cmp
xchg
inc
sahf
xor
push
ss
stc
ljmp
clc
daa
push
aas
mov
sbb
dec
sbb
cli
test
pushf
iret
sbb
sbb
pop
xor
inc
cmp
jb
pop
cli
mov
mov
push
dec
mov
aad
jl
je
int3
cld
mov
add
lds
gs
je
fistpl
and
lret
repnz
movsl
mov
xchg
fcomp
sbb
jo
bound
sub
add
mov
into
addr16
stc
jl
xor
mov
xchg
mov
jnp
mov
shlb
cmc
imul
hlt
call
inc
shrl
ss
inc
dec
jmp
popa
or
das
sub
inc
inc
ja
cmc
xchg
mov
jb
shl
push
cmc
push
and
sbb
shl
or
pop
cmp
cmpsl
sbb
lods
addr16
xchg
pop
subb
xchg
in
xor
neg
gs
or
inc
cmpsl
test
push
cmpsb
pusha
adc
cmpsb
jg
sub
xor
jp
data16
ljmp
add
add
repz
and
jle
bound
cmp
lds
fmuls
shlb
jae
repz
pushf
mov
mov
mov
in
lea
push
lds
es
inc
aad
add
mov
arpl
std
mov
fisttps
aas
cmp
pop
jno
fs
sahf
ret
and
or
mov
dec
orb
cmp
and
mov
and
and
push
mov
xlat
jl
jge
sbb
push
pop
dec
inc
jne
pop
andb
dec
lret
fstpl
das
cmc
out
call
mov
mov
adc
notl
das
sub
sub
cmp
clc
into
xor
aas
in
and
imul
insl
inc
jg
and
inc
nop
fwait
jb
rorl
cmp
fmuls
imul
dec
jecxz
inc
pop
add
int3
pop
mov
pop
in
icebp
jbe
mov
pushf
pmaddwd
jmp
stos
or
sbb
cmp
mov
cmp
cmp
data16
sbb
add
pop
out
fs
jo
xchg
imul
mov
sarl
dec
add
push
lcall
mov
jg
jno
or
adc
cli
scas
rorl
out
cmp
sub
test
repz
push
push
push
sbb
adc
je
mov
mov
jmp
mov
xchg
cmpsl
pusha
xor
int
mov
jo
mov
into
jns
add
pop
rcrb
ja
mov
pop
repz
neg
cmp
or
inc
bound
hlt
xor
aaa
scas
and
outsl
mov
fdiv
push
push
nop
jp
popf
das
mov
lods
dec
fstpl
add
jmp
sbb
pop
and
ret
dec
cmp
ds
lock
movsb
sti
adc
push
and
push
in
xchg
sbb
push
push
xchg
ds
pop
pop
mov
xchg
scas
ja
push
repz
sbb
mov
or
and
popf
xor
mov
mov
scas
push
and
out
cwtl
ret
sbb
mov
xchg
adc
jns
scas
das
enter
jnp
pop
xor
dec
iret
ds
imull
js
pop
pop
cmc
sbb
adc
hlt
es
aad
out
xchg
je
fcomps
pop
mov
mov
xchg
cwtl
mov
shr
stos
pop
ret
adc
aaa
dec
push
out
jg
lea
xor
jae
sbb
and
loopne
push
xor
xor
lock
inc
push
hlt
push
or
fbstp
stc
inc
fwait
add
sbb
sbb
adc
cli
sub
mov
mov
int
inc
cli
sub
test
cmpsl
jo
lds
iret
mov
push
into
imul
ror
mov
or
push
cwtl
aas
mov
stos
xchg
call
lods
in
int
hlt
clc
adc
mov
fcmovu
pop
lret
jmp
out
das
mov
jbe
dec
adc
jne
push
nop
pop
pop
sub
repz
mov
or
jno
shl
mov
dec
sbb
pop
cli
mov
ja
mov
sbb
enter
cmp
inc
sub
ja
test
jg
scas
imull
push
xchg
mov
rcrl
addr16
mov
sahf
loope
movsb
push
call
mov
cltd
lock
ss
jb
cs
xor
lds
test
jnp
xchg
data16
icebp
mov
pop
or
ss
rorl
sub
inc
or
aas
sub
push
repnz
movsb
out
cmp
pop
adc
loop
je
dec
ret
das
push
dec
or
mov
sbb
or
lock
or
or
mov
push
loopne
aas
ljmp
sbbb
adc
push
mov
vmread
xchg
iret
jb
sarb
fpatan
adc
inc
pop
xor
or
fists
scas
call
inc
pop
sbb
push
rolb
mov
mov
repz
xor
xchg
add
pushf
mov
mov
xchg
dec
aaa
inc
scas
das
stc
mov
sbb
jns
fsubs
mov
mov
xchg
or
mov
ja
add
fmuls
or
in
jp
scas
loope
fcmove
or
cmp
and
popf
inc
aam
sbb
lea
jno
iret
mov
shlb
xor
pop
mov
push
in
lods
in
in
insb
lcall
add
pop
ret
in
pop
out
mov
push
pushf
jno
ds
mov
adc
clc
punpcklwd
test
jne
mov
mov
cmp
scas
fcoms
mov
mov
push
sub
jns
dec
or
std
sbb
adc
xor
outsl
call
pop
lods
dec
loop
addl
xor
mov
test
outsb
inc
inc
mov
inc
push
pop
inc
add
orb
lcall
and
xor
or
mov
cli
xor
loope
gs
jle
jns
pop
in
mulb
add
sub
add
mov
cwtl
xor
pop
inc
movsl
jg
jle
pop
incb
rolb
adc
inc
outsb
xor
mov
in
lea
test
ljmp
jg
sub
popa
mov
mov
push
lret
mov
cmc
jmp
shll
fwait
pop
in
stos
xor
xor
pop
lds
mov
lahf
mov
in
ret
int
xor
or
gs
das
pop
inc
stos
ficoms
adc
sbb
imul
mov
cmp
dec
sahf
cmc
mov
clc
movsl
rcrl
push
out
cwtl
mov
sub
sub
js
negl
in
mov
sarl
jns
cmp
mov
es
loopne
cmp
in
inc
add
adc
sub
mov
enter
jae
and
mov
nop
arpl
cmp
rclb
imul
or
mov
out
pop
arpl
int3
jae
and
cmc
xor
sbb
mov
fsubrl
pop
sub
xor
in
lret
leave
push
cld
stos
xor
inc
sbb
shrl
sbb
fadd
inc
mov
add
fcomps
pop
push
psllq
mov
idivb
orb
pop
fstl
in
or
push
lock
cld
mov
pop
dec
pop
leave
pop
mov
or
and
cmp
mov
add
lea
jae
subl
jno
and
je
and
jl
das
es
out
and
popf
fnstsw
add
and
mov
loope
leave
enter
mov
mov
sub
outsb
xor
cmc
jbe
adcl
sbb
adc
fisubrs
in
scas
push
mov
xchg
lret
sbb
mov
sarb
add
bound
das
imul
lock
xchg
pop
add
dec
leave
lcall
into
jecxz
add
mov
jb
jns
and
push
mov
sbb
cmp
lea
xor
shll
pop
lret
fcomp
push
cwtl
js
test
xchg
jb
lods
inc
or
imul
xlat
daa
lahf
mov
mov
popf
pop
add
call
dec
lock
xchg
je
leave
dec
insl
lret
mov
add
xchg
in
xlat
sub
pop
dec
mov
push
pusha
sbb
mov
xor
out
jo
push
dec
sbb
mov
xor
call
xchg
insb
pop
jge
js
imul
push
xchg
imul
or
mov
push
add
push
loope
add
push
repz
in
sub
in
push
and
xchg
xchg
adc
and
int
enter
lret
xchg
mov
inc
xchg
mov
pop
add
sbb
sbbb
pop
icebp
fsubl
fistpl
ss
idivl
add
imul
pop
into
test
adc
out
pop
shl
inc
ds
adc
mov
ret
enter
xchg
mov
mov
mov
push
lret
adcb
pusha
mov
inc
int
lret
imul
cmp
addr16
pop
adc
cmp
adc
aam
addr16
xor
push
test
inc
jns
loopne
mov
push
sub
xor
inc
mov
mov
pop
adc
fstp
into
and
scas
xor
fs
into
jns
mov
in
push
sarl
mov
aas
add
sbb
mov
mov
fnstsw
and
jecxz
lods
sub
outsb
shll
call
clc
je
and
sub
mov
push
addr16
inc
mov
xchg
sub
fadds
rorb
in
inc
and
outsb
cli
jp
sub
xchg
add
mov
xchg
pop
dec
push
movsl
movsl
lea
out
or
arpl
xor
aam
jmp
shlb
jge
mov
imul
clc
pop
add
and
xchg
loopne
pop
shrb
addl
es
inc
mov
pop
pushf
jg
jle
adc
pop
lret
cs
shlb
outsb
into
repz
dec
pop
fimuls
fdivrl
lock
lahf
fs
cltd
xchg
pop
adc
loope
sub
movsl
fs
sbb
js
sti
in
push
lds
push
out
fwait
mov
lcall
or
xchg
mov
out
jg
mov
adc
inc
mov
cmpsb
ja
mov
mov
mov
jmp
push
pop
int3
and
push
inc
push
cmpsl
dec
xor
scas
and
jbe
pop
loop
or
cmp
ret
xchg
aas
xor
xchg
jecxz
jecxz
fwait
pop
sbb
push
mov
pop
fimuls
les
jo
xor
jl
imul
xlat
stc
add
cmp
lret
inc
push
pop
dec
int
jg
in
mov
sbb
test
adcb
pop
stos
pop
pop
negb
xchg
les
movsb
inc
jo
xorb
jmp
dec
les
xor
iret
inc
lret
xchg
scas
cmpsb
or
loopne
loopne
loopne
sbb
mov
aas
cmpb
dec
mov
cmp
mov
mov
shlb
inc
fimuls
hlt
testl
dec
add
xor
call
fwait
clc
cmc
mov
add
dec
dec
into
aas
dec
add
stos
notl
sbb
xor
mov
stc
daa
js
add
jnp
pop
enter
int3
jae
loop
push
pop
in
stos
xchg
sub
int3
cmp
sub
pop
adc
cmpsb
movsb
inc
rclb
sbb
test
jae
faddl
shl
and
aaa
cld
out
fcoms
inc
and
stos
push
mov
xchg
jle
and
lret
sub
sbb
mov
xor
xor
fistpl
fisttpll
stos
divb
loope
call
lock
mov
dec
shl
shl
mov
or
sub
adc
mov
out
or
cmp
cmc
pop
fisubrs
aas
add
ret
insl
mov
adc
inc
mov
mov
push
dec
stos
aaa
push
out
cltd
pop
outsb
pushf
xor
fidivrl
jp
xchg
fldt
fdiv
dec
jbe
inc
mov
add
mov
stos
push
mov
pop
mov
push
pop
jne
sub
fildll
and
adc
sbb
ficoml
fisubrs
cmpsl
push
dec
hlt
jne
xor
jecxz
sbb
adc
mov
inc
out
jecxz
mov
hlt
add
decb
pop
in
scas
gs
dec
roll
les
adc
add
loope
shr
cmp
xchg
sub
stos
add
hlt
and
pop
out
ja
jl
scas
push
arpl
mov
lds
xchg
fnstsw
dec
mov
ret
addr16
sti
dec
cmp
adc
inc
inc
mov
outsb
mov
mov
push
cli
sbb
mov
inc
lods
push
or
neg
sti
repnz
test
jl
loope
push
sbb
or
clc
inc
xor
sub
inc
and
mov
out
int
pop
cli
xchg
out
movsl
jmp
bswap
and
cwtl
frstor
inc
xchg
cmp
push
ljmp
aaa
out
pop
stos
daa
shll
adc
push
in
cmp
or
sti
adc
cmp
jno
mov
dec
repnz
inc
test
push
or
dec
call
ljmp
jg
lret
cwtl
push
pop
sub
mov
iret
xor
jb
int
mov
mov
imul
mov
xchg
inc
lea
sub
cmp
jno
sti
cmp
ss
inc
out
xor
bound
rclb
dec
xchg
and
sahf
or
aad
loop
pusha
pusha
sub
and
mov
xor
mov
add
movaps
aas
xchg
fs
and
out
in
cmpsl
fiaddl
inc
xchg
lods
outsb
lret
and
push
push
mov
adc
shl
inc
dec
rcrb
adc
lret
ret
jae
adc
stos
loopne
js
cmpsb
cs
ss
loope
dec
inc
push
rolb
ljmp
rorl
xorl
or
xor
cmp
div
pop
pop
out
push
mov
xchg
mov
mov
add
test
aaa
ds
outsb
lret
es
mov
mulb
call
imul
cmp
pop
das
sub
sbb
outsb
inc
mov
mov
mov
in
mov
pop
push
adc
xlat
xlat
and
sub
or
mov
outsl
outsb
inc
mov
fwait
cs
inc
push
fcoml
pusha
sbb
cli
lret
add
adc
sub
leave
es
jge
push
cmpsl
fisubs
mov
xor
cmpsl
sbb
dec
loope
push
mov
sahf
xor
lea
lret
jb
jbe
jp
sub
imul
cmpsl
cmp
lds
mov
or
or
mov
ret
xor
sbb
jge
mov
push
test
insl
mov
and
xchg
lcall
dec
aad
mov
mov
adc
mov
sti
aad
dec
jmp
inc
lfs
and
in
data16
sbb
jb
cs
jle
out
pop
fiadds
out
jae
xor
stc
push
pop
cmp
stos
shll
rol
int3
roll
jp
adc
ficomps
aas
psubd
fcoml
inc
push
adc
mov
mov
pop
orl
dec
sub
shrb
inc
scas
push
pop
test
lea
pop
es
mov
ret
into
xchg
dec
jo
pop
into
ret
adc
xorl
push
adcl
xor
dec
xor
cmp
cmpsb
cli
inc
mov
or
cmpsb
loope
dec
and
xor
test
cmp
insl
xchg
sbb
in
fcmovne
insl
fldln2
lods
mov
leave
mov
into
add
or
jecxz
pop
sbb
pop
fdivp
aaa
jno
mov
sbb
aam
xor
fsubrp
xchg
ret
sbb
jns
es
pop
push
mov
inc
rorb
push
mov
push
sbb
and
cmpsb
popa
push
pop
jb
push
test
or
stos
adc
cmc
rorl
jbe
xor
xor
mov
mull
push
rcrb
icebp
mov
xlat
xor
out
fmull
cwtl
mulb
fcoml
mov
push
dec
cmp
lea
push
sbb
push
cmp
adc
sbb
aad
or
out
mov
std
sub
in
lea
and
daa
mov
jno
xor
cltd
xor
es
stos
mov
sbb
ret
mov
or
test
lahf
push
dec
mov
jp
sub
dec
cs
std
pop
lret
inc
mov
outsb
xor
or
cmp
push
cld
shl
jo
mov
ret
fs
lahf
fistpl
fadds
add
jp
or
out
sub
push
adc
sub
lock
or
into
pop
out
mov
into
or
ret
cmp
fsubrs
fdecstp
stos
test
add
mov
ds
jb
lods
cltd
insb
loop
and
movsl
xchg
lret
in
add
inc
sub
xchg
sub
scas
rcrl
div
xor
rcr
test
cwtl
imul
outsb
callw
sub
and
push
mov
in
push
lock
std
mov
cmp
out
and
movq
sbb
mov
call
xor
push
outsl
inc
in
sub
pop
inc
test
daa
mov
add
or
call
push
dec
aam
xor
sbb
jl
push
hlt
fldcw
sub
ret
sub
das
mov
test
clc
or
mov
fsts
jmp
jge
adcl
mov
dec
and
pop
js
test
gs
or
and
ret
ret
jle
xchg
push
lock
mov
xor
sbb
fistpll
andl
xor
call
jmp
das
rcr
gs
mov
shrl
adc
fcmovnbe
xchg
push
int
or
out
mov
gs
inc
lock
inc
cmp
cmp
inc
mov
out
pop
shl
and
in
in
mov
sub
jecxz
stos
jecxz
adc
lds
xor
jecxz
push
out
cmp
out
loope
mov
push
xlat
test
insb
sub
push
lods
push
rclb
adc
dec
cmc
stos
push
int3
aad
push
call
movsl
aaa
pop
enter
test
lahf
or
dec
je
pop
daa
sub
push
out
xor
fstpl
out
add
xchg
or
cld
jns
fptan
jg
xchg
jno
mov
xchg
push
xchg
mov
adc
out
cmpsl
pushf
add
fdivl
mov
xor
sbb
xor
jno
fmulp
jmp
aad
sub
inc
loop
pop
xor
inc
ret
scas
jbe
stos
or
push
cmp
imul
cmp
jae
into
pop
cmpb
xchg
mov
lahf
lret
inc
shll
daa
sahf
mov
push
in
ffreep
mov
icebp
in
mov
loop
jnp
xor
jo
pusha
add
push
sahf
sbb
mov
outsb
fucomp
xchg
stc
inc
ja
testb
call
jns
mov
xchg
idivb
bnd
jae
xor
sub
addr16
outsl
inc
outsb
clc
jbe
xor
sub
int3
int
inc
mov
insl
cmp
pop
mov
mov
mov
lods
dec
aaa
jg
cltd
imul
pop
lods
out
cmp
testl
mov
sub
dec
add
mov
jecxz
add
jo
push
dec
ljmp
jnp
lahf
dec
lret
mov
fs
add
fisubrl
xchg
loop
pop
es
pop
out
cmp
addr16
pop
int
and
aas
mov
repz
jle
decb
or
mov
and
ret
arpl
repnz
cmpsb
in
jle
sbb
fs
lods
or
fcmovb
jecxz
inc
pushf
xchg
cvtdq2ps
out
fwait
add
mov
xchg
pushl
popa
cmp
and
aad
mov
int3
inc
aad
inc
daa
je
outsb
push
mov
aam
or
mov
xor
aad
sub
insl
test
pop
inc
sub
add
cwtl
aaa
lahf
cwtl
mov
xchg
xor
sub
xchg
dec
mov
jns
std
xchg
pop
xchg
sarb
push
push
mov
lods
mov
out
pop
out
mov
jge
push
shll
pop
daa
lea
cmp
dec
cmp
xor
call
in
jg
imul
iret
arpl
mov
imul
sub
lahf
inc
mov
outsl
in
pop
jno
fcmovnu
es
jnp
cltd
stos
nop
mov
and
pop
popa
jp
xchg
loopne
cmp
xchg
xor
call
mov
adc
push
and
push
mov
mov
xchg
es
inc
push
lods
lret
rclb
repz
mov
push
stc
sub
mov
or
inc
int
cwtl
lods
sbb
and
aaa
inc
pop
xchg
movsl
iret
mov
pushf
frstor
push
sbb
incb
ljmp
push
jno
push
stos
fisubl
add
stc
sub
fsts
nop
arpl
rorb
nop
add
jne
jae
dec
sahf
in
jns
stos
shrb
shlb
shlb
andl
mov
pop
push
fsubrl
lods
xchg
xor
test
xlat
dec
fistps
cltd
test
mov
pop
dec
out
mov
out
push
mov
dec
loop
inc
test
mov
mov
ret
push
pop
push
mov
adc
rcll
xchg
xor
stos
shrb
or
mov
add
adc
mov
stos
cmp
cltd
fisubrl
inc
sbb
outsl
or
imul
and
gs
inc
dec
or
insb
adc
push
jcxz
jnp
push
nop
popf
or
mov
xchg
and
mov
mov
shl
neg
inc
sbb
lret
sahf
pusha
push
mov
les
or
icebp
and
cmpsl
ds
inc
or
in
adc
es
xchg
fsubs
or
jl
push
out
cli
cmp
xchg
jae
xchg
subl
adc
pop
fsubrs
and
jno
mov
and
mov
notb
adc
jle
adc
sti
repnz
push
sbb
and
dec
cli
clc
out
out
lahf
out
mov
out
int3
orb
movsb
js
lcall
in
insb
push
mov
arpl
cmp
xchg
stc
jns
stos
cmp
movsl
ja
pop
add
test
testb
xchg
in
add
in
sbb
dec
dec
cmc
inc
fsubrs
es
and
push
test
test
push
arpl
lock
cmp
mov
in
add
mov
jle
pop
sbb
aam
incb
lods
ja
jne
mov
push
jne
mov
pop
push
mov
jle
push
rcrl
hlt
push
adc
xor
sub
cmp
push
jl
je
testb
mov
shl
push
add
adc
movsl
jl
in
dec
loopne
jo
pminsw
jle
outsb
xor
xchg
cmpsb
and
pop
inc
sub
xor
fcoml
cli
jecxz
pmaddwd
inc
test
popa
and
mov
rorb
cmpsb
aas
xchg
jle
jnp
lret
arpl
sbb
inc
mov
jmp
pop
hlt
inc
in
mov
mov
iret
jbe
pop
and
bound
cmp
hlt
sti
push
lods
dec
jno
inc
add
inc
aad
dec
mov
cmp
test
into
mov
ds
jnp
and
mov
inc
sub
mov
pcmpeqb
pop
dec
mov
pop
in
or
ret
pusha
aad
in
arpl
jecxz
stos
scas
aam
prefetch
adc
mov
imul
fildl
jnp
pop
inc
sbb
loop
lds
into
fwait
pop
push
sub
pop
fstpt
iret
jecxz
mov
scas
and
nop
xor
push
dec
clc
cmpsb
jns
lret
ss
sub
leave
aas
test
push
sarb
pop
dec
rcl
xlat
mov
jmp
iret
das
inc
sarb
mov
stos
fdivl
xchg
jno
in
hlt
mov
adc
add
sub
daa
in
out
int3
lods
inc
in
out
adc
insl
sar
scas
xchg
fistps
inc
cmp
push
imul
ljmp
outsl
mov
imul
loope
pop
or
int
mov
and
rorl
paddusb
mov
mov
ret
insb
mov
es
adc
int
test
jmp
mov
sbb
add
in
mov
jle,pn
pop
mov
mov
dec
lock
or
js
push
movsl
scas
adc
aam
int3
cld
ret
mov
rol
idivb
scas
and
cmp
jge
cmp
cs
jo
leave
mov
inc
lods
insb
insl
sub
mov
push
mov
ds
int3
loop
xor
xor
push
sub
xorl
lcall
out
addl
sti
add
mov
jp
xor
dec
sahf
in
icebp
pushf
lock
sub
int3
movl
xor
mov
inc
lahf
sub
push
xor
sbb
cmp
std
jno
es
xchg
xchg
loope
mov
call
popf
push
add
dec
cmc
pop
dec
lods
xchg
les
jns
inc
add
sahf
push
xchg
gs
mov
pop
or
cmpsl
mov
ljmp
ficoml
cmp
mov
dec
sub
popf
pushl
jecxz
sahf
push
xor
add
cs
jge
lock
shrl
fdivr
mov
out
dec
inc
dec
push
cli
rol
sbb
pop
xor
xor
fisttpll
xor
jbe
sub
popa
mov
mov
cltd
outsb
rcrb
xor
cmp
addb
imul
inc
repz
jle
xor
jne
lds
sub
xchg
sub
rcrl
repnz
bts
sub
ret
adc
push
and
xlat
jnp
lock
push
loopne
inc
adc
and
inc
cmp
cld
add
jecxz
imul
pop
in
jns
js
icebp
mov
xchg
jnp
jecxz
inc
std
aas
sbb
sbb
jmp
inc
repnz
popf
sub
push
jne
pop
outsb
loope
mov
xor
xor
push
pop
adcl
popf
fistpll
sub
jnp
lret
sar
xchg
popf
rcr
mov
push
pop
loope
fwait
mov
push
xor
jge
out
jnp
push
cmp
test
stos
imul
popa
push
pop
test
fwait
jge
cld
jns
fs
xchg
cs
sbb
xchg
jl
xor
fwait
push
xor
fidivs
shll
mov
lods
pop
addr16
scas
mov
adc
mov
fsts
mov
inc
call
ss
jno
and
in
mov
mov
outsl
xchg
mov
and
push
and
adc
movsl
in
rcll
adc
fs
push
jae
xchg
xchg
arpl
test
pop
jo
jae
mov
jle
jbe
fmuls
mov
lods
xchg
fnstenv
insl
fmull
cmp
out
aam
adc
mov
repz
mov
in
xchg
xchg
and
test
cmp
add
add
jns
inc
nop
mov
mov
sub
in
cmp
inc
test
push
mov
mov
cmp
dec
test
dec
adc
repz
dec
mov
xchg
lock
insl
push
scas
fwait
mov
out
push
cmpsb
or
add
pushf
push
arpl
jb
fisttps
insl
mov
push
mov
adc
or
notb
xchg
ud1
cmpl
roll
arpl
pop
popa
push
push
cmp
aaa
int
jnp
sub
mov
inc
and
adc
inc
test
sbb
dec
adc
push
movsb
in
aam
out
pop
pop
jmp
inc
adc
aam
enter
dec
pop
cmp
shrb
adc
roll
sbb
push
sub
int
push
xchg
enter
or
aad
sub
sbb
cmp
cmp
rcrb
mov
dec
jo
lahf
jp
pop
add
adc
popa
faddp
adcb
outsl
sbb
sbb
sahf
leave
inc
mov
sub
dec
cmp
mov
addb
jno
xor
leave
jns
out
push
push
sub
jecxz
cmc
int3
jae
xchg
or
or
xor
mov
dec
in
jnp
push
inc
or
mov
push
stos
cwtl
or
and
or
mov
sbb
ret
push
jge
shlb
and
jb
out
in
mov
cld
jae
cmp
fimuls
and
dec
cmp
jne
rorb
int
jae
pop
lcall
ficomps
push
test
xchg
and
nop
cmpsl
lea
mov
call
mov
mov
mov
loope
int
loope
aam
jae
sub
and
xchg
push
mov
rcrb
xor
push
cmc
push
mov
loope
jecxz,pt
cli
ret
push
lret
mov
mov
popf
xchg
aad
dec
mov
aam
and
sub
fs
jae
scas
adc
push
sub
or
mov
mov
aas
push
cli
lods
xor
aas
cmp
mov
lret
sbb
xor
stos
nopl
fs
lea
dec
jnp
popf
mov
repz
imul
js
add
push
je
pop
pop
mov
sbb
jne
inc
and
push
cltd
sbb
sbb
jnp
xchg
xlat
in
and
in
repz
aaa
lret
adc
mov
jae
pop
clc
popa
in
repnz
in
fcomps
rorb
push
std
cmp
sub
cs
and
test
test
xchg
lret
sub
cmp
push
mov
lock
ds
dec
in
gs
push
sbb
sub
push
cmp
dec
sahf
xchg
adc
mov
xchg
lret
mov
mov
jnp
das
ljmp
jp
or
sub
cmp
jge
push
push
xchg
fsubs
cltd
adc
mov
add
out
mov
sub
xor
mov
sub
xor
movl
add
lock
enter
rol
out
mov
int
or
ret
pop
mov
push
push
or
push
add
sbb
adc
sbb
push
push
fistps
xor
and
pop
cld
pop
fnstcw
mov
mov
rcll
out
mov
aas
mov
enter
sahf
xchg
add
push
xor
push
sahf
sbb
mulb
ret
adc
jae
ret
sbb
int3
sahf
dec
bound
push
cmc
xor
cmpsl
cmpl
stos
push
inc
mov
adc
or
cwtl
cmp
jmp
xchg
mov
cmpsb
jae
out
sub
fcmovb
lahf
loop
nop
lock
loope
rep
lahf
mov
pop
inc
jle
cwtl
add
cmpsl
dec
testb
and
xlat
jne
int3
out
jp
hlt
inc
dec
and
jo
sub
or
sbb
aaa
and
cmpsb
ret
js
or
cmp
das
add
dec
or
dec
jp
adc
shrl
rorl
fistl
stos
test
dec
mov
gs
jbe
aas
out
jae
shrl
push
stc
push
cltd
xchg
dec
rcr
and
cmp
lods
jno
pop
or
pop
pop
enter
nop
add
iret
rol
imul
xchg
mov
push
cmp
sub
or
jno
mov
push
lret
mov
pop
scas
fists
lahf
fisttps
sub
aad
push
jne
fdivrl
xchg
fmul
out
cmp
out
popw
std
xlat
ljmp
loopne
xchg
mov
dec
dec
mov
or
push
jno
pop
adc
xchg
or
xor
xor
in
insb
dec
in
cmc
xor
pushf
leave
movsb
loop
addr16
cli
mov
push
int3
lcall
andl
push
std
stc
and
les
xchg
mov
sub
ret
xor
das
adc
mov
cltd
add
fsubrl
setg
bound
outsb
jmp
xchg
or
out
jb
sub
inc
ja
mov
mov
jno
leave
cmpsl
loopne
or
test
and
mov
je
sbbl
push
fdivrp
fs
aam
mov
movsb
adc
mov
and
sub
jo
push
ss
fs
loop
notl
inc
in
pop
fistpll
loop
popaw
aad
ficompl
repnz
roll
push
or
rcrb
push
cli
loop
icebp
pcmpeqb
in
insb
sub
loope
mov
xchg
or
loope
or
js
dec
scas
sub
icebp
mov
lods
jb
xor
lock
iret
cmpsb
mov
insl
mov
inc
enter
daa
popf
pushaw
in
in
or
mov
sbb
dec
sbbb
ret
push
sbb
adc
jle
inc
popf
xchg
sbb
pop
mov
cmpsl
jns
mulb
int3
dec
imul
jne
dec
lea
mov
ljmp
insl
mov
pusha
pop
inc
add
push
rorb
sub
jno
mov
xor
shlb
movsl
mov
jecxz
xchg
adc
sbb
mov
inc
loopne
pop
dec
dec
stos
mov
or
test
jne
pop
push
sbb
jae
adc
mov
outsl
dec
or
adc
dec
sub
in
jb
dec
pop
cli
jbe
dec
inc
mov
lret
mov
xchg
push
popa
cltd
in
cmp
sbb
and
pop
add
jl
popf
mov
cwtl
jae
or
sub
repnz
std
stos
dec
fdivrp
xor
mov
fcomps
stos
ret
addr16
add
push
and
je
outsb
xor
push
xor
jbe
aas
cmp
and
andb
add
inc
in
repz
mov
pop
fldl
ja
pop
mov
stos
or
in
and
mov
add
out
xor
lahf
call
test
out
aas
adc
mov
pop
fisttpl
call
mov
test
push
loopne
push
ret
fwait
pop
xlat
adc
in
inc
jmp
sti
je
aad
xchg
std
pop
jnp
mov
mov
xchg
xor
xchg
cmp
scas
rcrl
xchg
in
mov
push
insl
sub
movsb
adc
ror
cld
int
dec
xor
jecxz
adc
mov
mov
push
mov
xchg
pop
sbb
xor
cmp
mov
shrl
pop
mov
sub
jle
jno
mov
arpl
push
xchg
cld
hlt
mov
std
xor
cmp
fnstcw
out
inc
jge
addr16
lods
inc
lret
rcrl
mov
dec
adc
xor
aam
xchg
pop
cmp
into
sub
pop
faddp
cld
fwait
mov
mov
or
xor
aas
mov
hlt
out
lret
andl
push
jmp
mov
add
xorl
out
xor
inc
add
fdivrp
aad
push
xor
mov
dec
rorl
cwtl
inc
outsb
ljmp
testl
adc
subl
or
xor
stos
inc
fcoml
push
subl
adc
daa
repnz
pushf
jo
scas
stos
and
jb
lods
xor
icebp
test
cmpsl
pop
lret
inc
call
xor
movsl
push
sti
xchg
stc
mul
je
out
fimuls
cmp
scas
in
pushf
fbld
mov
push
xchg
push
mov
jmp
mov
int3
add
and
sti
sub
push
lahf
mov
xchg
int
and
ja
out
jne
push
fwait
mov
mov
adc
cld
rclb
lret
xrelease
mov
jns
movsl
mov
mov
mov
and
out
sub
inc
sbb
xor
pushl
and
jle
cmp
js
lea
test
add
cmp
out
mov
mov
mov
mov
mov
test
subl
test
movsl
fistpll
fiaddl
push
jl
mov
xchg
shll
pushf
adc
fsqrt
test
mov
sub
loopne
push
add
adcb
mov
cmp
icebp
popf
cmp
shll
stc
sbb
aaa
lret
int
inc
lock
push
mov
xchg
int3
mov
pop
dec
insb
inc
mov
cs
jg
pop
jnp
sbb
test
pushf
cmpsl
cld
je
shrl
cld
lods
cmp
dec
add
pop
mov
aaa
add
xor
push
inc
xor
iret
sub
xor
and
mov
pop
xor
sarl
mov
cmovbe
inc
and
mov
adc
bound
out
push
mov
imul
cmp
jp
cwtl
dec
mov
jle
jle
and
mov
fcompl
ds
push
xor
or
xor
and
mov
mov
out
lds
push
ss
sahf
jecxz
test
pusha
xchg
inc
jno
pop
wbinvd
ffreep
sahf
adcl
dec
daa
jo
loopne
pop
shlb
pop
pop
or
cmp
sbb
lods
xchg
shr
icebp
dec
mov
xchg
push
mov
mov
mov
lret
dec
adc
xor
std
sub
in
inc
shl
clc
lods
inc
mov
lods
sti
cmp
stos
sbb
arpl
rcrb
add
cmpsb
ljmp
mov
adc
fnstsw
sub
add
adc
sub
ss
pop
mov
xor
sub
stos
mov
fwait
aad
dec
mov
jo
push
imul
or
adc
aam
sbb
jp
sbb
mov
jge
xchg
int3
xchg
jb
test
les
add
jno
test
pop
pushf
fstl
pop
xor
inc
cmp
dec
lock
fcomps
push
shlb
aaa
inc
dec
shl
jmp
or
hlt
fst
mov
pushf
xor
jp
fcompl
ficompl
lcall
pop
jne
shll
cld
adc
xchg
fnsave
out
or
loope
push
push
movsl
jg
and
sbb
adc
xor
mov
clc
jb
inc
sub
sbb
mov
repnz
pop
fisubrs
add
test
aam
cmpsb
mov
mov
cmp
add
scas
js
popf
inc
xchg
xor
fstl
shl
push
adc
and
outsl
sub
push
push
adc
mov
push
mov
test
and
or
leave
mov
add
add
or
and
testl
movsb
lcall
addr16
std
add
push
popf
mov
lea
imulb
add
ret
xchg
cmp
sub
repz
stos
mov
inc
fiaddl
insl
je
jmp
xor
cs
cltd
sbb
js
jns
adc
pop
cwtl
rcrl
data16
movsl
daa
push
sub
add
sarb
add
mov
ret
adc
insb
or
mov
rolb
hlt
in
mov
push
rcr
sahf
bound
dec
xor
inc
in
ss
frstor
in
insl
cld
cmp
xchg
jb
cli
and
inc
sbb
test
jge
sbb
dec
cwtl
lods
aam
mov
push
mov
mov
aaa
xchg
ret
xor
repnz
arpl
push
arpl
add
pop
movsl
test
fs
jo
mov
lcall
push
sbb
out
sbb
insb
into
mov
imul
or
aaa
lods
lock
shrl
sarl
movsl
std
pusha
pop
jmp
sbb
scas
xchg
xchg
mov
fs
inc
test
testl
cmp
imul
repnz
aas
pop
add
sbb
outsb
sub
mov
and
roll
aaa
push
fisubl
pop
cli
outsb
mov
or
mov
push
mov
cld
scas
sahf
mov
add
cwtl
inc
loope
sbb
xor
scas
sbb
cmp
lea
insb
cmp
pop
enter
mov
out
inc
inc
in
sbb
push
loop
add
ja
push
test
aam
scas
pop
or
cmp
mov
lret
fcmovnb
inc
cmp
sub
mov
mov
dec
or
mov
adc
add
jmp
lret
in
jmp
ffreep
cld
and
lock
add
push
aas
ljmp
cmp
jp
in
xchg
jo
daa
push
pop
aas
loopne
mov
out
pop
aas
sub
xor
mov
mov
inc
push
scas
rorl
xlat
mov
test
pop
or
xchg
jnp
pop
shl
lods
push
push
subl
mov
lods
adc
sbb
pop
inc
ja
cmp
add
xchg
mov
pop
cmp
dec
shl
mov
scas
add
add
or
mov
push
rcll
popf
adc
mov
jae
mov
push
mov
fisubl
fcoms
adc
cmp
je
xchg
ret
loopne
mov
sbb
call
fstpt
jp
mov
mov
xchg
xchg
scas
fisubl
repnz
push
mov
pop
test
movsb
push
mov
addr16
popa
lock
lods
sub
mov
gs
loope
orb
mov
adc
push
outsb
sub
mov
movsl
gs
inc
adc
imul
jmp
lret
bound
sub
push
sub
popl
cmp
js
pop
lods
cmp
in
in
les
daa
cmc
stos
add
mov
add
call
cmp
sar
fdiv
dec
cmpb
pop
mov
lahf
int3
and
insb
das
xchg
and
cmp
lock
mov
outsl
inc
enter
mov
push
in
cwtl
sar
pop
inc
inc
mov
add
mov
pusha
mov
call
adc
sbb
mov
inc
sar
xchg
pop
cmp
push
sub
dec
push
jae
pop
jl
push
cwtl
add
ret
out
xor
add
faddl
jg
fadds
cmp
dec
mov
dec
es
push
mov
mov
mov
loop
ss
mov
in
inc
sbb
fnsave
sbb
pop
pop
cmp
pop
nop
mov
dec
and
jle
inc
clc
out
aam
mov
inc
out
std
mov
sbb
imul
xor
add
cmpsb
mov
mov
ret
lods
imul
mov
or
clc
insb
inc
arpl
hlt
aam
clc
push
mov
xor
mov
mov
movsb
dec
dec
mov
mov
imul
aaa
pop
mov
pusha
and
sub
jo
addr16
ljmp
push
shl
jge
inc
mov
stc
mov
outsb
les
arpl
enter
dec
mov
and
fbld
and
mov
mov
add
mov
std
fists
insl
pop
into
das
lahf
stos
jge
hlt
les
js
inc
fimull
out
fsubrs
push
pop
sub
sub
fisttps
test
or
lock
mov
inc
mov
notl
mov
inc
mov
adc
scas
jp
fidivrl
divb
push
xchg
hlt
and
sub
xor
call
repz
outsb
xor
add
outsl
xchg
cwtl
push
adc
and
dec
add
pop
pop
test
test
and
cltd
test
inc
inc
jp
fdivrl
je
pop
push
dec
adc
rcrb
lods
mov
pusha
dec
enter
das
dec
ds
in
push
pop
ret
xor
pop
arpl
mov
pop
xor
or
shrl
in
jle
and
lret
cmc
mov
xchg
ljmp
dec
pop
stos
mov
ret
fiaddl
add
movsb
sbb
jno
push
lods
es
xor
add
lods
js
mov
fwait
pop
hlt
dec
xchg
dec
adc
cli
emms
xchg
and
pop
jbe
fisubs
movsl
push
cmp
mov
test
xlat
xchg
adc
scas
shr
push
jmp
fisubrs
mov
jle
sarl
add
dec
xor
lea
sarl
jmp
incl
stos
mov
sub
dec
scas
mov
mov
push
daa
sub
jmp
jmp
dec
mov
jl
pop
mov
lret
loop
popa
inc
aad
insl
aad
popa
loope
push
jecxz
jns
inc
mov
dec
mov
in
rclb
adc
and
cmp
ds
outsb
add
outsl
cmp
pop
inc
dec
dec
and
icebp
shll
and
popa
icebp
js
mov
imul
push
mov
fidivrl
mov
or
dec
mov
shl
movsb
arpl
mov
lea
fcmove
out
divb
adc
cmp
lods
xchg
dec
xor
jmp
pop
test
repz
data16
lods
adcb
lcall
mov
leave
movsl
sbb
fs
psubd
push
mov
pop
test
mov
xor
and
mov
sarl
add
dec
cmp
mov
cmp
lret
adc
jae,pn
testb
cmp
iret
jbe
clc
mov
loope
push
inc
add
out
jp
dec
add
sti
lret
push
or
aam
jne
jb
sarl
ljmp
or
mov
push
sbb
aas
scas
cmp
fcoms
repz
mov
adc
nop
test
or
sbb
stos
lret
inc
je
or
dec
fsubs
cmp
jnp
int3
jns
leave
mov
imull
es
xor
inc
and
push
push
nop
js
in
les
xor
cs
sbb
inc
xchg
mov
cmpsb
fnstsw
xchg
add
loopne
jmp
pop
sbb
mov
ja
jmp
and
xchg
insb
mov
mov
mov
dec
aam
imull
xlat
mov
in
sahf
fs
lods
in
mov
inc
fimull
pop
xor
cs
mov
and
dec
xor
mov
push
fisubrs
or
out
outsb
mov
bound
mov
enter
push
jmp
dec
aad
cmp
jb
aad
lcall
pusha
cmp
out
jnp
jl
shl
scas
inc
sbb
mov
and
dec
and
imul
addr16
mov
lret
mov
test
add
adc
mov
popa
popa
dec
jle
notb
xchg
sub
pop
js
fstpt
xchg
mov
stc
xchg
cli
adc
les
and
std
xorl
insb
dec
mov
xor
aad
call
jmp
lods
fst
jne
es
cli
aas
dec
loop
shll
mov
lret
int3
adc
js
push
mov
or
and
pop
in
cli
jnp
mov
insb
ffreep
je
sub
mov
xchg
repnz
mov
jb
sbb
inc
push
movsb
rcrl
xor
mov
push
or
xchg
movsl
pushf
ljmp
pushf
loopne
lds
jo
sub
and
nop
int
popl
jp
fwait
xorb
pop
lods
popa
dec
or
rcrb
dec
ret
out
xchg
xor
inc
mov
fcomps
push
push
dec
xchg
insl
fists
nop
mov
jns
arpl
std
imul
test
mov
inc
icebp
repz
fstps
pop
stos
repz
pusha
push
adc
mov
in
sar
sub
negl
cld
popf
sahf
push
testl
adc
repnz
rolb
or
sub
std
jg,pt
push
cmp
gs
leave
add
and
xor
lods
test
sbb
pushf
add
push
loop
push
push
or
mov
and
lahf
and
sbb
insl
lock
aaa
popf
lret
pop
mov
or
sbb
or
out
or
inc
cli
call
ja
out
imul
xchg
enter
pop
sub
sbb
lea
ds
cltd
jnp
cmp
leave
popf
jae
xchg
mov
ficompl
and
add
pop
imul
push
jg
cmc
mov
xlat
popa
inc
aam
add
stos
adc
add
ret
leave
xchg
stos
mov
ret
xchg
ret
sub
mov
cmc
cltd
pop
or
jnp
aas
icebp
mov
flds
fcomps
outsb
pushf
fsin
sbbb
movsb
mov
mov
pop
xor
inc
inc
and
fimull
mov
mov
fsts
inc
mov
xchg
dec
fs
mov
adc
pop
aas
jmp
pop
pushf
inc
insl
scas
inc
adc
lret
mov
add
push
fcomps
mov
stos
push
lock
push
incl
xchg
mov
ret
pop
lret
out
loopne
mov
in
dec
and
adc
cs
out
fstpt
cmovns
aad
cltd
mov
push
mov
or
popf
ficoms
lret
jae
stc
js
jg
mov
inc
pusha
lret
outsb
shrb
push
addr16
push
and
mov
mov
add
in
xchg
vcvtpd2psx
jne
shlb
mov
scas
jno
pop
add
inc
mov
jnp
rorl
es
mov
lahf
pop
cmpsb
movsl
mov
test
clc
xchg
mov
scas
jae
push
subb
lods
xor
dec
iret
or
inc
inc
mov
addb
in
push
in
jnp
leave
mov
fisubl
and
dec
repz
inc
xlat
and
jge
sbb
or
sarl
or
mov
jmp
jne
fwait
push
dec
xor
movsb
xorb
xor
xchg
cmp
incl
loopne
aam
jg
pop
mov
idiv
sub
stos
fdiv
lret
test
outsl
dec
mov
sbb
inc
inc
mov
push
aas
ljmp
or
insb
mov
scas
mov
sbb
arpl
inc
fmuls
icebp
lret
xor
ficompl
nop
xor
cmp
xor
call
test
dec
or
es
out
int3
idivb
shl
fstpl
sbb
aad
mov
add
fistpll
pop
enter
lock
cmpsb
mov
mov
ljmp
pushl
mov
lea
ss
and
push
sbb
xor
in
inc
inc
int3
xchg
jb
out
popf
outsb
jle
and
imul
ss
xchg
pop
das
mov
mov
jnp
jae
and
into
xchg
repz
scas
in
rcrb
es
pop
cmp
mov
mov
pushf
in
inc
stos
mov
insb
jp
icebp
sti
loopne
or
jecxz
mov
and
jno
mov
mov
pusha
lock
inc
push
adc
mov
leave
decb
inc
dec
cld
loope
daa
xchg
push
aam
mull
push
or
insb
scas
daa
ret
xchg
outsb
jl
cmc
cld
in
and
jae
or
mov
lret
test
fnstcw
and
adc
jl
adc
loope
mov
hlt
arpl
sub
sti
fsubp
and
fmulp
mov
xchg
inc
push
or
jge
loop
mov
xor
xor
jbe
xlat
or
js
hlt
inc
lock
test
data16
call
int3
mov
cmp
mov
aam
popa
inc
lahf
rorb
outsb
in
push
jbe
cmp
sbb
shll
or
in
push
mov
sub
pop
bound
mov
pushf
lahf
jmp
sub
clc
mov
lock
faddl
movsb
sbb
paddusb
lret
mov
add
mov
inc
cmp
and
pop
fscale
lcall
daa
imul
inc
aad
push
in
ljmp
adc
mov
aas
cld
pushf
movsl
mov
mov
mov
or
addr16
mov
repnz
faddl
and
jb
in
pop
fwait
xlat
out
sti
mov
movsl
sub
push
xchg
fwait
xchg
cmp
jmp
enter
mov
cmp
es
mov
cmpsl
xchg
inc
pop
xor
jbe
movsb
repz
je
pop
adc
out
divb
cmp
lret
cmp
test
addl
jae
mov
out
aas
lock
inc
push
sub
out
jns,pt
push
ret
shr
sbb
cmp
pushf
add
mov
push
mov
push
xchg
cwtl
mov
loop
inc
jge
testb
shll
aam
icebp
jnp
pop
jl
addb
lret
stos
pop
mov
into
lret
addr16
xchg
add
call
pusha
mov
adc
rcll
or
xlat
mov
shrb
jg
jbe
add
in
or
add
jecxz
je
mov
mov
daa
fldl2t
shrl
fs
ljmp
push
push
adc
cmc
mov
mov
je,pn
lods
mov
movsl
mov
imul
dec
jb
jbe
cmpsl
and
arpl
adc
flds
or
gs
jnp,pt
movsb
push
add
ljmp
ret
cmpsl
mov
dec
jl
cld
inc
ret
stos
clc
rcrl
js
subb
mull
push
test
ljmp
popf
hlt
int
leave
sub
pop
jmp
lods
cmp
jmp
mov
jecxz
into
sbb
mov
jl
xor
call
jbe
mov
test
aas
xor
xchg
mov
adc
test
mov
sub
cmpsl
mov
fidivs
ret
mov
push
xlat
ja
sbb
jle
adc
add
jo
xchg
lcall
fisttpll
add
xchg
pushf
imulb
dec
xchg
add
rcrb
add
ljmp
jmp
add
lret
xchg
pop
adcb
pop
in
loope
lods
in
repz
aam
or
and
shlb
cli
push
pop
gs
pushf
xchg
dec
push
adc
test
jae
cmp
imul
lds
mov
inc
leave
test
pop
aad
pop
push
nop
mov
out
jp
cmp
daa
test
inc
sahf
les
enter
adc
xor
dec
ljmp
mov
cld
or
les
ret
jnp
pop
fdivl
cltd
pusha
inc
jecxz
push
stos
cmp
scas
xor
movsl
scas
inc
inc
push
loopne
sbb
les
jmp
mov
xlat
adc
lods
js
outsb
push
dec
xorl
add
or
out
push
cmp
push
mov
jle
addr16
test
outsl
fsubr
js
push
pop
popl
jae
jbe
jge
jae
fistpl
inc
repz
xor
aaa
sbb
add
mov
pop
test
add
xchg
jns
fmuls
into
inc
shlb
jp
pop
and
ss
dec
jmp
inc
shll
dec
inc
dec
mov
pushf
add
lock
mov
dec
cmp
jns
imul
xlat
mov
test
push
loopne
cmp
fnstcw
sbb
mov
jecxz
cli
rorb
out
xchg
and
es
mov
xor
push
push
ret
outsl
test
inc
test
call
fcmovne
iret
dec
xchg
jmp
inc
inc
mov
xchg
fwait
and
lea
lahf
push
outsb
xlat
inc
dec
xor
mov
adc
lret
int3
cmc
imul
shrl
lds
pushf
into
in
pop
inc
lret
xchg
sbb
xor
pop
arpl
nop
in
imul
sbb
xchg
movsb
rorb
adc
push
or
adc
dec
sbb
sbb
fs
sub
cmp
mov
cmp
xlat
adc
mov
jle
xor
sub
fsubrs
mov
and
rcrb
dec
push
push
jmp
xchg
mov
mov
pop
aad
cmc
push
inc
push
cli
sbb
lods
pop
jl
mov
pushf
sub
in
rorb
mov
xchg
dec
jg
sbb
popf
push
fisttps
xor
lock
and
xchg
xchg
loopne
mov
sti
inc
cltd
xchg
int
adc
xchg
mov
insl
pop
mov
add
jg
mov
gs
shlb
push
adc
js
add
imul
inc
out
cld
stc
push
dec
inc
mov
sbb
jmp
out
mov
mov
repnz
fs
sbb
sar
in
jecxz
adc
push
xchg
aad
mov
mov
enter
mov
rcll
add
cmpb
cmp
jnp
pop
jo
mov
rclb
ret
dec
inc
xlat
xchg
xor
iret
cmpsb
mov
push
rcll
or
repnz
popa
cmp
mov
fwait
leave
mov
fcmovu
jmp
pop
in
push
push
sbb
sbb
mov
enter
sub
test
jge
lret
fsubl
mov
xlat
pusha
ljmp
cmpsb
mov
adc
imul
jecxz
inc
fmuls
insb
cwtl
fidivs
add
lss
xchg
jnp
mov
add
push
jb
inc
shll
cmp
push
int3
mov
ficoml
mov
add
inc
popf
xor
add
and
sbb
stos
stc
mov
add
aas
clc
shll
cltd
daa
or
popf
rcrl
and
add
into
pusha
mov
cli
xor
insl
dec
mul
sub
pop
push
xchg
scas
mov
cltd
shlb
sbb
push
scas
mov
cmc
sub
mov
hlt
jae
cmp
or
ret
int3
testl
cmp
andl
mov
or
lcall
push
mov
popa
adc
sahf
inc
xor
lcall
adc
or
pop
cmpsl
ja
xor
pop
addr16
xor
in
mov
ret
into
xacquire
pop
leave
mov
dec
int3
psubd
data16
sbb
aas
and
sbb
pop
int3
mov
ss
aam
cmc
mov
movsb
dec
mov
or
mov
pop
and
movsl
std
add
inc
mov
decb
arpl
pop
fstps
or
inc
fists
pop
out
inc
scas
fucomp
das
test
je
out
gs
nop
jl
icebp
add
dec
lock
shrb
dec
inc
mov
cmp
jae
mov
daa
jae
aas
mov
mov
or
insb
call
lock
pop
rcll
and
fwait
lret
or
mov
fstpl
dec
push
lret
subl
cmp
xor
sbb
movsb
out
jo
out
pop
push
popf
jl
xchg
add
ret
fisubrs
lea
add
or
or
jb
inc
ss
jmp
pusha
push
jb
sbb
adcl
cmp
in
sbb
sbbl
mov
xchg
sbb
cltd
pop
fisubl
add
pop
xchg
sbb
xlat
ret
and
leave
clc
mov
jecxz
push
xlat
jbe
pop
inc
icebp
xchg
add
out
lods
add
pop
in
dec
mov
adc
lds
arpl
and
movsb
notl
outsb
jns
sahf
cld
mov
mov
ss
cmp
dec
add
lock
add
ss
jae
stos
ror
mov
jnp
movsl
xchg
cmp
sbb
stos
fldl
push
test
mov
adc
fwait
test
sub
mov
pop
push
out
out
aad
mov
nop
rcrl
push
cs
mov
or
pop
or
aaa
movsb
mov
rclb
and
or
and
or
jle
mov
jle
insb
push
dec
sbb
or
xchg
and
mov
xchg
popa
adc
lods
pop
mov
iret
jmp
cmc
mov
adc
jb
jmp
pop
shrb
sub
add
mov
psraw
pop
push
mov
add
insl
xchg
mov
jnp
jge
aas
sub
jnp
inc
pusha
into
push
xor
mov
mov
lret
dec
cli
mul
or
test
js
mov
out
and
add
push
adc
inc
dec
jecxz
lock
fbstp
sub
sbb
mov
insl
xlat
in
jge
and
cmp
cld
xor
cltd
or
jecxz
xor
or
popa
cmp
out
shlb
aam
or
pop
test
shrb
mov
dec
test
mov
data16
pop
fstpt
xchg
xchg
test
iret
out
push
lock
out
xchg
sahf
iret
jns
pop
mov
fcomps
popa
gs
fidivs
jbe
push
lock
das
push
lods
jno
stos
jo
or
aad
imul
push
roll
mov
xchg
or
mov
dec
jnp
rorb
cmc
mov
jnp
imul
in
sbb
stos
daa
add
mov
jecxz
push
sar
out
xor
dec
arpl
enter
adc
daa
xcrypt-cbc
cmpsl
nop
jne
mov
aas
out
ja
and
add
cmp
push
sub
adc
gs
js
mov
in
mov
sbb
inc
das
add
xchg
push
insb
insl
jmp
sub
push
xor
sbb
xor
out
sub
mov
out
movsb
sub
jns
lods
push
and
push
imul
xchg
inc
push
push
es
es
push
aaa
aaa
daa
dec
imul
cwtl
js
or
mov
xchg
popf
pusha
push
xor
daa
nop
test
das
cwtl
addr16
test
and
in
push
pop
mov
and
dec
xor
insb
sahf
aaa
test
bnd
shl
movsl
jae
clc
pop
cli
cmp
cmpsl
xchg
cmpsb
and
cmp
sbb
sub
push
int3
add
sbb
cmp
fsubrs
sub
mov
loop
repz
push
jne
gs
cld
leave
mov
dec
outsl
xchg
or
and
loop
es
lret
mov
jmp
xchg
jb
cmp
dec
xchg
cltd
sub
sub
xchg
outsb
mov
outsb
dec
pop
pop
test
call
and
pop
outsl
mov
push
cmp
adc
out
xchg
add
vpmadcswd
gs
jl
pop
lods
sbb
dec
popf
and
mov
xchg
jg
out
xchg
xchg
lret
xorb
mov
ss
mov
fiadds
add
dec
nop
push
push
sbb
movsb
sub
push
add
sbb
dec
jecxz
xor
mov
inc
lock
xor
xchg
pop
fs
adc
cmc
lds
inc
hlt
ror
fldcw
hlt
mov
xchg
mov
imul
xchg
lret
adc
jle
out
push
sbb
push
int3
pop
push
icebp
cwtl
jecxz
dec
enter
clc
jno
stos
sbb
mov
rolb
jo
push
lock
xor
pop
inc
mov
jl
call
stos
test
fildl
rorb
hlt
jae
pop
xor
lods
pop
cmpsb
jge
aaa
rcr
push
dec
out
shll
cmpsl
divb
jmp
jecxz
pushf
leave
les
jbe
push
jmp
ror
sbb
adc
cmp
loopne
iret
push
pusha
stc
cmp
add
push
sub
les
fwait
popf
pop
stos
pop
xor
dec
daa
xorb
enter
jmp
shrl
popa
xchg
sub
mov
cld
or
mul
adc
not
loope
push
mov
adc
jp
pmaxub
popf
sub
daa
movsl
andl
pop
or
jb
xor
push
gs
and
fcoml
pop
mov
nop
mov
je
fnstenv
clc
addb
test
cltd
ja
fidivrs
mov
push
mov
movsl
adc
frstor
dec
sbb
push
jg
bound
jnp
sahf
and
push
inc
pop
scas
mov
icebp
ss
pop
mov
cwtl
icebp
inc
adc
and
faddl
sub
aad
iret
mov
div
push
lret
dec
inc
and
jge
cmp
out
ss
lods
dec
inc
dec
pop
stos
xchg
adc
test
imul
dec
shll
add
mov
jns
stc
in
lods
xchg
jno
leave
fwait
int3
xor
sub
fsubrs
add
mov
adc
push
pop
inc
fwait
sbb
icebp
fs
push
mov
loop
pop
cmp
push
divb
loop
jl
cwtl
dec
mov
or
lods
gs
jle
clc
aam
stos
jmp
cmp
mov
cmp
addr16
ficoms
bound
xchg
aam
inc
loopne
mov
fadd
mov
or
lcall
call
aam
push
dec
test
jb
cmp
add
out
add
divl
div
icebp
pop
cmp
cltd
arpl
adc
add
push
scas
lcall
adc
test
mov
jl
fbld
data16
cmp
xor
and
jns
jl
push
fistps
fs
sub
aam
and
cmc
mov
cmc
testl
pop
jl
ret
fs
cmp
fildl
loopne
mov
mov
mov
es
pusha
pop
xchg
adc
icebp
dec
faddl
test
mov
adc
push
out
pop
mov
push
push
mov
cltd
mov
jmp
mov
sbb
adc
aad
hlt
lea
das
test
xchg
add
decl
add
pop
mov
push
ficompl
cmp
mov
aam
pop
push
daa
xor
les
xchg
push
popa
call
dec
mov
add
sbb
icebp
scas
inc
mov
stos
leave
sbb
ret
cmp
ja
clc
not
test
mov
in
insl
cmp
mov
js
dec
imul
adc
xchg
mov
pop
sub
test
das
sbb
sub
dec
test
orb
dec
xchg
adc
mov
adc
dec
cmpsl
xchg
in
sub
fwait
insl
popa
pushf
add
xchg
push
cld
dec
call
cmpsb
ds
pushf
sbb
dec
cmp
jbe
ljmp
push
mov
out
rcl
inc
in
in
in
or
or
fsts
mov
pop
xchg
inc
mov
in
les
xor
dec
sbb
aas
outsb
scas
adc
xchg
lcall
mov
popa
adc
andb
insl
movsl
pop
aas
mov
lahf
sti
lock
jle
rorl
push
stos
out
repz
pop
sbb
mov
jno
sbb
or
mov
shrb
adc
push
push
movsb
movsl
ds
push
inc
adc
lcall
or
outsb
sub
arpl
rcrb
out
gs
and
xchg
sbb
mov
push
or
imul
cmp
sub
orb
mov
mov
cltd
aad
adc
pop
or
mov
push
and
je
push
pop
lock
mov
mov
orb
and
sti
test
outsb
gs
add
mov
jo
sbb
sub
popa
addr16
xchg
sbb
popa
pop
jl
inc
into
cmp
add
clc
stos
les
lret
mov
mov
jae
ss
and
enter
test
imul
mov
lret
jp
rcr
xor
mov
movsl
rcr
je
les
pop
sub
pop
into
jle
sub
arpl
and
inc
mov
clc
cmp
mov
mov
outsl
dec
sbb
jp
daa
cwtl
sbb
divl
loope
lods
mov
pop
sbb
call
andl
adcb
sbb
iret
cld
lods
mov
inc
jae
into
xlat
divb
cmp
in
cli
mov
mov
or
xchg
xor
jne
mov
adc
sub
push
adc
out
jle
adc
int
addl
jbe
outsb
inc
leave
out
aam
outsl
sub
or
jl
sub
pop
insb
clc
clc
pop
pusha
fsub
stos
pop
mov
not
fsub
jp
lock
fisttps
mov
sahf
xchg
dec
xlat
popa
inc
repz
out
divl
xor
imul
jns
sbb
movsl
cld
addr16
or
aas
jo
cmpsb
in
or
dec
lea
in
jecxz
mov
inc
add
loope
adc
leave
popa
mov
imul
add
icebp
sub
sub
push
push
mov
je
adc
movsb
dec
mov
dec
xor
xlat
inc
in
mov
rorb
loope
sarb
adcl
dec
cmp
xor
fs
xor
mov
jo
insb
test
cmc
ljmp
adc
fwait
inc
xor
das
popl
adc
push
and
pop
xchg
sbb
push
ljmp
sti
enter
sub
add
shll
sub
sub
mov
cltd
dec
pushf
adc
pop
jne
call
pop
mov
xor
es
out
ret
jbe
std
adc
test
pop
rcrl
dec
pop
mov
mov
repnz
addr16
sub
or
inc
cltd
pop
cmpsb
hlt
sbb
dec
out
mov
dec
mov
jge
int
cmp
lock
lcall
xlat
cmp
arpl
aam
and
inc
lret
pop
adc
lock
adc
mov
pop
decl
add
add
mov
and
lcall
mov
ds
ja
aas
shrb
mov
mov
insl
test
xchg
pop
push
outsl
sbb
push
int
imul
add
test
cmc
pop
ja
shlb
in
out
movsl
mov
mov
scas
xchg
jo
sub
shlb
mov
into
cmc
testl
sub
movsl
mov
or
cli
and
lock
lret
mov
pop
cwtl
inc
push
jno
push
mov
sub
ficoml
xor
and
xchg
insl
andl
xor
lds
callw
and
and
js
test
mov
dec
jle
lret
popa
push
inc
call
mov
std
movl
or
aad
pop
jg
jno
fxam
push
insb
fld
loope
or
call
adc
leave
jecxz
lock
push
mov
ret
adc
out
inc
mov
cltd
xchg
cld
sub
pop
pop
sbb
out
cs
push
test
adc
cmp
hlt
enter
fstps
sbb
ret
mov
rcrl
pop
shlb
outsb
jo
mov
lret
and
cs
mov
in
sub
xor
shll
inc
cwtl
out
dec
ljmp
push
mov
mov
lods
fistpll
ja
ds
jg
iret
add
or
jg
cmp
faddl
adc
jbe
ret
or
xchg
andb
stos
dec
jae
hlt
xchg
jle
mov
sti
sub
mov
and
mov
sub
and
mov
xor
in
mov
pop
lea
push
shll
push
lcall
adc
movsb
mov
mov
negl
push
sbb
adc
icebp
std
cwtl
jmp
dec
or
pop
cltd
mov
jo
movl
popa
sahf
test
push
call
cmp
push
fldl
add
mov
sub
int
mov
push
in
adc
or
mov
adcl
adc
or
arpl
ret
mov
cmp
shl
lret
es
pop
out
mov
leave
mov
cmc
out
cmp
jle
or
scas
movl
rep
sbb
clc
int
jle
jne
dec
fwait
inc
ret
rorb
xchg
jbe
mov
and
mov
xor
xchg
nop
leave
movsb
pop
fmuls
in
xor
in
pop
stos
sub
dec
fimull
test
lcall
mov
mov
mov
inc
adc
mov
cs
cmpsl
fidivs
adc
dec
ja
sarb
cmpsl
clc
jmp
sub
or
add
mov
ja
pop
out
stc
mov
adc
int
lahf
cwtl
jbe
push
sub
xchg
test
dec
add
jo
je
xor
dec
sbb
mov
and
fiadds
pop
dec
jno
sub
jnp
scas
aad
imull
and
out
mov
sbb
out
pop
xchg
and
add
jno
jnp,pt
cmp
push
mov
jle
flds
jp
and
pop
into
jmp
mov
iret
enter
in
jg
or
pop
ret
enter
shl
mov
iret
aad
fdivl
loope
vunpckhps
dec
and
mov
push
mov
pop
jl
jl
outsl
jecxz
adc
stos
int3
sahf
jmp
mov
inc
xor
roll
incb
mov
cli
pusha
push
and
inc
and
lcall
dec
loopne
mov
adc
push
lock
rcrb
outsl
sub
das
cmp
into
jb
mov
jmp
jmp
imul
leave
stos
addr16
clc
add
jb
mov
leave
lea
dec
out
pushf
sub
fcomps
sub
int
sbb
mov
mov
jno
ret
aas
fadd
xchg
pushf
adc
sub
adc
inc
lahf
lcall
sub
rolb
insb
xor
pusha
mov
rorl
das
and
in
sbb
cs
cltd
data16
dec
aaa
mov
dec
in
aad
call
jo
fs
jb
pusha
imul
out
repnz
or
fadd
mov
push
js
sub
shll
or
push
sti
mov
xor
addb
pop
fs
dec
and
cmp
in
rorl
daa
icebp
and
pop
mov
jb
xor
mov
outsb
lods
cmp
sti
inc
pushf
rol
into
add
dec
loope
lret
in
mov
imul
and
shrl
push
test
mov
cmp
out
dec
jmp
daa
sbb
shlb
mov
jb
pop
out
add
inc
sbb
jp
or
das
mov
addr16
sub
inc
xchg
in
je
sbb
pusha
hlt
mov
inc
and
test
mov
dec
pop
sbb
mov
dec
xchg
adc
std
xchg
dec
ret
and
loop
mov
popl
cli
adc
or
fcmovbe
mov
sbb
test
in
fisubrl
iret
scas
bound
inc
repz
sbb
xor
daa
lret
and
ret
lock
dec
cmpsl
popf
insb
sub
in
push
loope
dec
iret
push
dec
iret
in
cmpsl
lods
sahf
mov
add
sbb
add
pop
inc
stos
dec
pop
andb
mov
cmc
pusha
xchg
cmp
pop
in
repnz
fldt
ljmp
xchg
push
and
push
sbb
cmpl
jmp
mov
aaa
test
les
call
test
mov
sbb
das
push
jo
rorb
cmp
mov
lcall
pop
out
push
xchg
cs
loope
push
mov
add
push
mov
lods
pop
dec
movsl
stos
lds
sysenter
pop
or
sub
push
adc
push
ljmp
nop
dec
cmpsl
psubw
jbe
clc
push
aas
pop
push
mov
cmp
nop
cmpsl
xor
pushf
inc
jne
sub
push
xchg
aaa
pusha
das
ret
pop
xorb
out
mov
or
push
add
into
sbb
and
das
pop
mov
dec
jno
mov
cmp
movsl
push
repnz
adcb
dec
lods
fisttpl
jne
mov
cmc
dec
ds
mov
dec
popa
mov
push
in
xchg
dec
mov
shrl
fstl
js
int
cwtl
sahf
hlt
lcall
cld
ret
inc
loop
insb
loope
addr16
in
cmp
movl
jbe
jno
and
fmuls
das
sti
xchg
mov
jo
stc
mov
sub
lock
fldl
sar
das
dec
hlt
inc
push
xor
mov
fldcw
cwtl
push
sti
in
lahf
cwtl
dec
adcl
sbb
inc
addr16
mov
stc
mov
sbb
insl
lcall
js
int3
adc
shll
testl
ffreep
lock
out
pop
push
addl
pop
cmp
push
xor
or
lahf
inc
imul
lret
popf
ljmp
out
or
mov
inc
lods
mov
loopne
push
push
push
lret
andb
dec
push
fmuls
mov
xor
add
push
sbb
xor
pop
pop
adc
or
cwtl
sbb
push
xor
ss
inc
push
mov
ss
pop
sbb
ds
dec
hlt
sbb
lock
lea
push
sub
aam
lods
jg
inc
loope
and
insl
sbb
cmpsb
int
or
xor
adcl
jae
xor
xlat
es
pop
repz
push
in
fwait
repnz
dec
lea
cwtl
and
jno
jg
mov
lret
ss
shlb
mov
std
xchg
mov
jns
sbb
and
or
cltd
repnz
rcr
inc
aad
dec
pop
pop
pop
out
loope
mov
fisubrl
andl
mov
movsl
pop
and
imul
in
pop
sbb
pop
pop
movsl
add
daa
dec
loopne
pushf
sahf
inc
mov
push
sbb
gs
pop
sbb
jle
mov
and
push
inc
das
hlt
movsb
jno
rorb
loop
in
out
ljmp
push
sub
pop
arpl
pop
nop
les
jg
pop
es
push
add
les
sbb
xchg
loop
daa
mov
pop
sub
negl
scas
xorl
test
bound
sbb
leave
lds
xchg
outsl
sub
sbbb
jae
jno
mov
lcall
dec
outsl
jp
xor
xor
enter
cmpsl
out
jge
pop
mov
or
lock
xchg
mov
dec
inc
dec
mov
inc
out
test
push
gs
scas
aaa
dec
add
repz
ret
in
push
inc
xor
in
sbb
inc
jb
shrb
icebp
lock
cmp
adc
dec
addr16
jne
mov
add
sbb
and
loope
movsb
ljmp
je
push
dec
mov
mov
adc
das
testb
pop
dec
xorl
scas
sbb
sub
mov
cmp
popl
push
cmp
loop
mov
jge
lahf
cltd
imul
adc
dec
inc
in
and
mov
mov
add
mov
es
les
sbb
dec
adc
fcomps
fists
ss
fidivrl
xchg
sbb
jne
imul
ja
stos
fwait
push
daa
cmpsl
xchg
jo
jmp
lea
pusha
xchg
add
cwtl
lods
pop
adcl
loope
lea
sbb
testl
popa
into
mov
pushf
je
mov
notl
addl
xor
inc
arpl
add
jecxz
jb
cmpsb
jle
bound
lock
add
nop
xchg
cmpsb
int
add
adc
sahf
lcall
inc
cs
jg
add
xchg
push
gs
or
rorb
out
icebp
in
push
addr16
push
xchg
jnp
pop
mov
mov
lods
je
adc
sahf
arpl
pusha
out
and
lahf
mov
mov
fistps
sbb
add
leave
cli
or
pop
enter
cmp
jne
xor
add
sbb
movsl
cwtl
xchg
and
sub
jge
mov
mov
add
jle
dec
rcll
xchg
jecxz
jns
nop
stos
bound
cwtl
jne
dec
push
sbb
lcall
idivl
test
mov
repnz
stos
pusha
or
insb
mov
jecxz
lea
pop
inc
and
cs
loop
cmc
sar
divb
lret
shll
cmp
jae
jge
ficompl
loop
adc
loopne
subb
ficoml
mull
ret
aaa
dec
repz
and
push
pushf
ja
subb
sub
arpl
mov
scas
dec
arpl
sarl
adc
and
mov
fistps
ljmp
das
fistl
jno
push
cmp
aad
xlat
filds
or
push
sarb
addr16
inc
enter
rol
hlt
fdivr
sub
jecxz
xlat
fisttps
arpl
out
mov
jg
xor
repnz
ja
sub
lock
xchg
jge
cltd
inc
sub
in
xchg
fs
movsb
lock
aas
dec
mov
inc
ljmp
ficompl
cmp
out
xchg
lods
and
and
sub
movsb
ret
sub
sbb
daa
sub
push
jp
mov
es
lret
imul
jno
movsl
fdivr
sub
fisttpll
filds
inc
dec
test
push
mov
in
sbb
cmp
clc
sub
mov
or
inc
loop
jno
movsl
push
bnd
pop
sub
dec
repz
shlb
push
icebp
lret
das
sbb
dec
das
mov
bound
sbb
xchg
rorb
fbld
aaa
xchg
ds
fsubrp
in
mov
fsubrs
sbb
sub
stos
repnz
add
mov
sbb
push
in
sub
fidivl
jecxz
inc
fidivrs
loope
inc
sub
fnsave
mov
or
cmpsb
cmpsl
mov
shr
cmp
nop
inc
sub
dec
pop
stos
cmp
push
and
mov
xchg
loope
lret
or
rcl
jp
or
out
xor
xor
xchg
stos
pop
pop
adc
ss
sahf
mov
jecxz,pt
cmp
mov
push
and
stos
sbb
add
push
xchg
dec
stc
outsl
mov
dec
pop
lcall
adc
rorb
movsl
mov
mov
gs
ret
jae
mov
outsl
pusha
or
mov
dec
dec
push
mov
fld1
je
jmp
scas
xor
fsubl
jg
shll
lret
mov
scas
pop
imul
push
icebp
clc
das
mov
mov
push
mov
fadd
iret
das
jmp
adc
dec
aas
addr16
inc
pop
es
or
das
or
int3
aas
push
push
icebp
lcall
fcoml
cltd
or
sub
jp
pop
orb
fucom
xor
lret
mov
les
mov
adc
xchg
xor
nop
inc
icebp
std
std
fadds
inc
das
sbb
sbb
mov
flds
mov
mov
add
and
call
xor
or
js
popf
adc
xor
jg
outsb
stos
xor
push
xchg
imul
jno
ret
lahf
into
mov
inc
push
mov
inc
or
or
mov
repz
jl
adc
push
and
pop
sbb
pop
mov
or
mov
mov
push
push
inc
sub
cs
jo
fcoml
push
stos
or
pushf
enter
in
mov
stc
pop
push
push
or
fdivrs
cmp
out
mov
leave
je
inc
add
cmp
jae
push
add
inc
xchg
xchg
fxam
xchg
and
inc
sahf
xor
jp
dec
push
test
jno
jl
jle
stc
icebp
daa
push
xchg
sti
cwtl
adc
jb
bound
pusha
es
ret
sub
lret
shlb
lahf
jg
shrl
sbb
addr16
sub
test
and
mov
fdivrl
lods
shll
xchg
mov
cmp
outsb
mov
popf
icebp
pop
lock
out
pop
and
out
cltd
test
outsb
push
inc
bound
loop
or
lea
jle
inc
jl
or
jle
sbb
xor
inc
mov
loop
adc
mov
jecxz
mov
test
inc
xor
adc
sarb
ljmp
mov
mov
pusha
dec
pop
mov
jmp
cmpsb
pop
lahf
outsb
or
das
fs
fdivrl
push
test
stos
dec
into
inc
pop
inc
fwait
xor
mov
imul
xchg
gs
scas
lods
push
or
pop
clc
mov
cld
data16
sbb
rclb
jne
add
lahf
mov
and
test
stc
sahf
or
sbb
rol
pop
lock
arpl
inc
inc
fildll
sbb
mov
lds
pop
or
mov
insl
lahf
jb
xchg
xchg
jne
das
inc
dec
sbb
add
jmp
enter
gs
aaa
cmc
out
cmp
mov
xor
cwtl
dec
add
mov
rcr
sbb
cli
int3
imul
pop
lods
aas
and
sbbb
xchg
dec
jp
jmp
and
jno
or
stos
cmpsl
test
int
or
xor
adc
add
ljmp
jnp
out
inc
mov
sub
popf
lock
ret
mov
xlat
and
cmc
imul
cmc
inc
ret
and
fcomps
adc
dec
add
jecxz
inc
addl
xor
xchg
scas
push
xor
add
sbb
jecxz
sbb
sarl
sbb
ds
test
cmp
pop
cmp
cmc
add
scas
pmulhw
pusha
cmc
bound
mov
mov
lcall
stos
xchg
mov
sub
aad
adc
hlt
inc
ljmp
into
movsb
in
adcl
sub
xchg
in
dec
ret
pop
fsubs
punpckhwd
xchg
shrl
stos
sub
xchg
loope
icebp
icebp
dec
icebp
out
push
mov
aad
jecxz
orl
cltd
cmp
mov
or
pushf
test
sbb
mov
add
sbbl
dec
and
inc
fdiv
imul
mov
es
in
push
std
andb
jle
pop
pop
insl
mov
adcb
sub
arpl
outsl
outsb
je
jo
add
mov
stos
bnd
push
push
xchg
hlt
ljmp
dec
jb
pmulhw
decl
cmc
insb
xchg
xchg
xor
ss
push
lahf
dec
inc
jo
cmp
cwtl
mov
push
adcb
dec
daa
inc
sbb
repz
or
xchg
sub
inc
xor
mov
faddl
clc
cs
cli
das
loopne
pop
cmc
push
enter
or
mov
mov
jno
fimull
xor
jb
jnp
mov
inc
test
lcall
mov
pop
pushf
add
aas
test
int3
fsave
jae
movsb
and
sarl
fwait
or
lcall
xlat
jbe
add
dec
sbb
inc
out
xchg
jge
and
mov
inc
rorb
sbb
outsb
insl
mov
xor
jnp
sti
sbb
aaa
fwait
mov
ja
aam
shrb
ja
mov
pop
mov
daa
bound
iret
scas
xor
leave
xor
push
adc
add
xchg
push
mov
aaa
ljmp
push
adc
enter
mov
js
add
push
jb
pop
inc
mov
frstor
cltd
fsubrp
lods
shl
cltd
adcb
lods
or
jge
push
fdivl
fmul
sbb
lds
das
jne
int3
gs
push
jg
mov
dec
std
mov
pop
cmpb
out
mov
sbb
mov
fisubrs
mov
and
imul
addr16
fistpl
fldenv
push
push
xor
or
xchg
add
xor
pop
ja
mov
inc
add
scas
lock
mov
mov
inc
mov
lea
push
mov
cmp
and
popf
sub
jnp
jl
mov
sub
test
pop
sub
or
cli
jge
xor
movsb
inc
adc
inc
push
pop
cwtl
and
pop
aas
jg
es
je
fisubl
and
inc
jae
and
jl
xchg
adc
clc
adc
xchg
xchg
test
outsl
or
out
cmp
lret
rcrl
jecxz
in
pop
addr16
sub
sahf
add
mov
sub
dec
bound
popf
pop
outsl
inc
les
and
sti
mov
es
imul
lea
sub
enter
mov
imul
aas
pusha
jmp
xchg
and
mov
or
arpl
lret
ret
ret
orl
sub
or
cltd
adc
fld
fsubr
and
mov
mov
shlb
or
movsl
mov
and
das
test
xchg
pusha
fwait
mov
sahf
pop
mov
mov
in
insb
or
inc
cwtl
xor
cmp
push
outsb
inc
test
sarl
or
inc
fidivrl
inc
pop
mov
enter
pop
imul
aas
and
pop
testb
sarb
aad
jmp
pop
inc
dec
jne
in
out
and
fwait
xchg
add
icebp
mov
int
pop
aaa
jge
fiaddl
jno
aad
js
outsb
out
aaa
jnp
ss
adc
cmc
jae
cmp
and
sti
dec
clc
insl
cmp
inc
pushf
cmpsl
sbb
hlt
adc
adc
in
or
jo
adcl
mov
nop
mov
or
ret
das
sti
cld
hlt
xchg
sbb
xchg
sub
pop
out
aad
adc
out
fst
aam
mov
in
scas
jp
jb
xchg
mov
cmc
cmpsl
jmp
add
mov
mov
and
adc
stc
add
lret
addr16
fistpl
aad
orl
nop
inc
lods
test
aam
jns
ja
mov
fidivl
stos
in
and
xchg
outsb
incl
adc
imul
or
push
js
and
mov
sub
sti
fsubl
cli
outsb
xor
hlt
in
fidivl
std
push
cmp
inc
dec
sub
lahf
push
pop
int
jae
aaa
lret
cmc
mov
jo
adc
and
cmpsb
jp
mov
xor
gs
stos
enter
fdivl
clc
inc
pop
sbb
or
das
imul
and
cmp
imul
pusha
or
out
std
cwtl
test
inc
ret
cmp
push
pop
std
call
popa
stos
rclb
xor
scas
jl
pop
stos
and
push
xchg
sbb
dec
aam
lods
sbb
lds
adc
pop
in
lret
rol
sub
xchg
mov
xchg
insl
or
jecxz
orl
push
push
lods
and
leave
out
lods
and
pinsrw
popf
and
push
js
mov
jnp
sbb
sbb
sahf
fiaddl
lods
mov
push
mov
sbb
test
or
pop
shrl
adc
xchg
fwait
out
leave
jne
xrelease
push
ret
or
sbb
sbb
arpl
xchg
cs
jbe
jb
or
mov
sahf
data16
mov
test
pop
xor
gs
stc
mov
add
imul
rorb
and
iret
xor
nop
rcll
sbb
xor
ret
push
scas
push
popf
shl
jns
and
pop
push
out
and
cmp
cmp
test
outsl
inc
pop
push
or
and
ror
cmp
inc
pop
pop
nop
mov
roll
in
jmp
ds
jl
ja
and
or
xchg
ret
imul
js
jl
dec
lock
mov
maskmovq
testl
fnsave
or
mov
pop
sbbb
mov
enter
pushf
cmc
jne,pt
xchg
push
xchg
jmp
cmp
pop
pop
std
mov
nop
imul
insl
xchg
and
loopne
icebp
jge
mov
lods
xchg
push
push
xor
sbb
ficomps
jae
xchg
inc
les
dec
jbe
inc
cmpsb
js
fidivs
cmpsl
lret
daa
rcrl
mov
inc
mov
and
fwait
daa
dec
inc
cltd
mov
loop
out
adc
std
xorb
lods
pop
mov
and
dec
jmp
jmp
test
mov
push
sti
dec
push
adc
cli
data16
fisubrl
dec
fimuls
call
jge
jno
mov
mov
fsubrl
movsb
push
lods
pop
sub
add
cmp
repnz
fnstenv
dec
mov
push
pop
pop
out
jae
iret
add
das
push
movsl
pop
andl
add
xchg
adc
fcmovu
and
jge
stc
sahf
loope
adc
in
add
pop
xchg
add
add
push
jmp
mov
pop
std
pop
inc
mov
add
sbb
cmp
ret
sbb
incl
into
pop
jae
dec
mov
xchg
mov
mov
xor
xor
ss
sbb
outsl
adc
mov
jg
es
inc
in
jecxz
inc
xchg
jo
xchg
int
and
rcl
dec
sub
sbb
sbb
pusha
push
dec
aad
jb
sbb
scas
fld
imul
shl
fisttpl
mov
xchg
out
or
ficoml
arpl
lahf
jmp
leave
ret
add
mov
dec
push
pusha
movsb
fistl
pushf
fisubs
loope
mov
ljmp
push
or
stos
mov
inc
sbb
stos
popa
xchg
or
xchg
inc
add
cld
bound
repnz
adcb
and
sarl
adc
test
mov
mov
inc
pop
imul
test
dec
pop
std
pop
dec
xor
mov
cmp
fisttps
inc
and
and
push
xchg
aam
ja
dec
mov
jb
imul
js
xchg
add
push
out
xchg
insb
xchg
push
jns
fcom
fcompl
push
addr16
sbb
push
out
inc
lods
sub
ret
repnz
add
popf
pop
fcompl
sbb
cmpps
int3
in
xchg
mov
std
jae
les
push
insb
pop
pop
hlt
add
in
inc
push
fsts
jg
outsl
push
scas
cmpsb
jecxz
test
mov
inc
movsb
es
movb
out
insb
movsl
ficoml
adc
out
cmc
cli
xor
mov
adc
inc
pop
mov
test
out
aam
lods
shlb
sbb
insb
xor
addb
inc
aas
mov
fiadds
in
jne
fstps
dec
jno
xor
mov
lods
js
scas
inc
push
or
mov
mov
jns
push
ss
push
push
aam
xor
pusha
iret
cmp
pop
sarb
ss
and
xor
iret
loope
shll
mov
inc
fwait
mov
add
ss
std
jnp
xchg
jge
sub
decb
aaa
shll
sbb
mov
pusha
push
pop
adc
scas
mov
adc
nop
add
and
in
jg
hlt
aas
lcall
fbstp
ret
fnstenv
jl
mov
jge
xchg
ficoms
or
inc
adc
decb
jle
cmp
sbb
add
lret
out
lods
stc
inc
pop
std
inc
stos
jbe
in
testl
arpl
xchg
imul
inc
and
mov
das
cmp
push
push
fiaddl
pop
mov
xchg
int3
test
adc
imul
mov
pop
adc
xor
sti
cmp
movsb
les
jns
addr16
xor
or
gs
sti
nop
enter
insb
xor
mov
cmp
push
xchg
push
out
jle
ret
and
ret
lret
sub
in
or
cwtl
cmp
popf
mov
fisttps
jns
adc
lods
stc
loope
fwait
xchg
cmp
mov
ja
mov
gs
sbb
cli
leave
packsswb
sub
mov
or
add
push
orb
addr16
cmpsl
shlb
dec
nop
cmp
push
adc
mov
xchg
jo
sub
push
orl
ja
in
push
inc
dec
dec
fwait
loop
jmp
mov
or
in
cmp
cmpsl
test
scas
incb
dec
push
aas
jnp
mov
cmp
mov
adc
mov
and
pop
jp
sub
pop
out
out
repz
mov
lods
lahf
and
cmp
push
notb
movsl
sti
push
and
push
repz
cmp
scas
push
xchg
cli
mov
call
and
cli
push
psllq
rorl
and
in
into
dec
dec
movsl
pop
jge
into
imul
add
fsub
rcll
insb
imul
aaa
pop
test
cmp
pushf
ret
mov
xor
call
dec
stc
dec
push
xor
inc
pop
push
orl
ret
jmp
sbb
mov
jbe
inc
int
pop
fdivrs
mov
fwait
xchg
dec
out
js
mov
mov
adc
push
fucomp
fnstenv
rorl
icebp
out
mov
add
or
stos
or
xchg
push
xor
pusha
and
sub
adcl
cmpsb
dec
jp
mov
pop
mov
popa
dec
filds
xchg
sub
xor
lea
jle
test
in
dec
xchg
cmp
sahf
into
dec
mov
rolb
jo
lock
lret
in
fadd
mov
add
lea
mov
jl
adc
into
dec
int3
lock
inc
adc
jae
cmp
cs
bound
pop
sub
xor
shlb
int
mov
push
sbb
add
jo
xlat
push
ret
addb
sub
jbe
fcmovbe
les
test
movsl
mov
loop
dec
add
add
xchg
mov
lret
dec
or
add
jae
jecxz
pop
out
das
mov
xchg
hlt
fcmovnb
paddusw
int
out
cli
sti
add
lods
jae
push
sbb
push
pop
push
jmp
mov
mov
dec
outsl
pop
test
std
out
mov
pop
movsl
js
aam
or
scas
sbb
dec
xlat
mov
adcb
std
cmpsl
jb
das
das
sub
dec
xchg
dec
ficoml
into
jbe
lds
imul
xchg
imul
xchg
pusha
call
loop
mov
ljmp
cmpsb
out
sbbb
inc
mov
cmp
jle
lods
out
push
jl
aad
dec
mov
push
jns
mov
sub
fcoml
ljmp
cmp
add
xor
pop
sbb
or
add
mov
mov
movsl
and
xor
cld
push
mov
sub
jecxz
enter
scas
sub
inc
sub
dec
adc
push
enter
push
ja
jae
std
rorb
sbb
sbb
and
add
sbb
mov
mov
mov
jae
mov
pop
fimull
aas
jmp
pop
scas
into
aaa
push
cmp
mov
jae
and
clc
cltd
cmp
std
add
and
in
inc
movsb
je
into
incb
mov
cltd
add
jle
mov
pop
bound
loopne
rcrl
and
es
ja
aam
jno
shlb
movsb
xchg
fucomi
cmc
shr
leave
out
jmp
inc
inc
repnz
or
inc
fcomps
sbb
sub
mov
cmp
and
lods
sub
sub
add
mov
fcompl
mov
or
dec
stc
in
inc
lret
xor
mov
inc
and
inc
adc
lret
shrl
cmp
mov
xor
outsb
push
push
in
addr16
xor
scas
sbb
pushf
imul
dec
popa
mov
cmpsb
shlb
adc
test
aam
les
fiaddl
fs
clc
pop
push
mov
push
or
jns
outsb
push
pop
push
jl
add
and
aad
aad
sti
xchg
xchg
in
xor
pushl
gs
out
mov
cmp
sub
pop
leave
xchg
sbb
dec
sarl
out
pop
mov
jno
fdiv
sbb
scas
arpl
sbb
jmp
push
loope
adc
pusha
mov
imulb
push
jecxz
inc
jne
sub
ja
aad
jae
iret
inc
in
and
cs
or
sbb
jecxz
cmp
cli
pop
lahf
clc
cmp
shll
mov
dec
cmp
fwait
cli
clc
mov
dec
in
ret
cwtl
mov
xchg
push
jae
lea
es
push
inc
sar
aaa
sahf
and
cs
pop
lahf
mov
or
cmp
ret
pop
shlb
std
cmc
sbb
call
int
add
xor
pop
add
in
std
mov
movsl
push
shll
daa
mov
ret
loope
and
movsl
sbb
int
aas
fisubrl
xchg
pop
mov
and
mov
jnp
xchg
sbb
inc
jnp
jl
mov
psubsw
mov
in
cmp
js
add
xor
icebp
out
sub
mov
ss
test
mov
cmp
aam
loop
mov
and
sub
mov
imul
mov
pmulhw
test
push
or
sahf
test
cltd
in
sbb
ljmp
outsl
sub
xchg
inc
std
lahf
mov
xchg
sbb
stos
mov
cmp
mov
mov
and
gs
das
or
xchg
adc
ds
sub
push
jmp
inc
lcall
aas
mov
lods
popa
xchg
pop
jnp
aad
adc
lods
js
xor
nop
call
add
push
mov
ret
push
lock
mov
pop
and
xchg
fbstp
dec
sub
xchg
out
fldl
maskmovq
mull
mov
ljmp
hlt
lcall
cmp
inc
mov
fs
int3
fists
xchg
mov
shlb
rcll
movsb
and
lea
inc
xchg
lock
into
cltd
outsb
pop
cwtl
xor
rclb
mov
mov
mov
imul
in
push
push
inc
mov
out
mov
movsb
sub
bound
fldt
clc
adc
push
mov
aas
fs
adc
out
imul
fstp
cli
mov
shrb
push
leave
mov
mov
adc
adc
mov
es
cmpl
mov
int3
sub
sbb
fldcw
mov
out
xor
cmpsl
xchg
xchg
cld
sahf
jns
fbstp
movl
dec
les
mov
ret
mov
xor
mov
ljmp
inc
lret
ss
or
je
sub
mov
xlat
insb
scas
mov
lds
push
xchg
aam
call
loopne
test
cmp
negb
xchg
pop
dec
ja
jbe
adc
jbe
add
adcb
and
mov
adc
in
loop
notl
test
ss
xor
icebp
xchg
inc
xorb
xor
popa
xorl
std
mov
fimull
pop
or
mov
mov
adc
jl
stc
inc
in
and
arpl
or
in
sbb
popa
pop
ret
test
test
scas
and
jecxz
sub
add
test
orb
ja
in
sub
xor
in
into
push
enter
testl
scas
mov
test
or
insl
sbb
stc
outsl
clc
add
jae
sti
insl
push
cli
jle,pt
fstp
inc
sarb
les
sarb
sbb
cltd
dec
andb
cmp
lods
add
push
stos
add
into
daa
insb
sbb
add
rorb
mov
int
mov
and
or
ja
dec
and
cmp
stos
push
std
jno
and
add
shll
xor
xor
mov
popf
ja
dec
jns
add
sub
jo
mov
mov
push
shl
add
call
test
jmp
mov
inc
xchg
movsb
dec
dec
stc
mov
push
mov
ret
adc
into
cmp
pusha
popa
mov
cmp
pushf
icebp
and
mov
pop
adc
add
fs
xchg
xlat
add
add
rclb
leave
adc
fdivl
jno
outsl
dec
add
and
test
pop
adc
add
int
iret
outsl
pushf
add
fsubl
ja
dec
sbb
fnstsw
sub
push
cmp
xchg
inc
sbbb
insl
xchg
mov
mov
loopne
call
and
lds
rolb
dec
iret
add
aaa
mov
rcll
fsubs
ret
push
dec
test
xchg
and
loope
and
mov
jl
stc
das
inc
popa
mov
push
test
test
outsl
xor
jmp
test
stc
cmp
inc
int
popf
shll
ljmp
dec
jo
insb
js
inc
jmp
lahf
inc
push
in
adc
mov
out
out
pop
jmp
xor
std
cmp
mov
lds
cwtl
mov
mov
xor
je
test
mov
xchg
je
add
fwait
xchg
mov
pushl
repz
ficomps
jns
mov
repnz
mov
into
andl
enter
xchg
mov
dec
in
outsl
jns
jne
loope
lcall
test
ret
jecxz
fistpll
sub
mov
cmp
sbb
add
arpl
stos
popa
fwait
loope
fcmovne
pop
xor
push
movsl
imul
lahf
pop
imul
inc
lods
outsb
mov
add
cmp
xlat
lcall
movsl
push
leave
push
push
fldenv
out
inc
in
aas
jnp
cmp
cmp
jne
js
mov
jg
xchg
aam
and
sub
dec
adc
inc
push
pop
mov
jbe
jb
test
sti
add
push
mov
push
push
stos
repnz
and
sbb
sub
popf
mov
jns
push
popf
repnz
cmp
fnstcw
xchg
pop
lea
out
ja
lea
call
js
imul
shrb
adc
pop
leave
fimull
rcrl
sbb
and
js
or
adc
shll
loop
dec
xchg
imul
cmp
cmp
xchg
push
push
ss
mov
mov
inc
cmp
xchg
mov
jae
add
lret
cwtl
stos
push
inc
je
les
sbb
fwait
arpl
mov
jg
out
push
sub
loop
das
or
enter
fistpll
adc
rorl
andb
call
nop
repnz
lahf
scas
inc
repz
jl
iret
add
daa
pop
xchg
outsl
inc
sbbb
jl
fstl
mov
or
scas
push
adc
and
sub
cmc
and
add
imul
aaa
daa
notl
sub
xchg
jne
das
mov
in
aam
push
pop
xchg
xchg
daa
xchg
adc
xor
and
push
jae
sbbb
aas
dec
inc
fdivp
dec
and
or
push
rclb
aas
addl
icebp
inc
push
fsubr
inc
xchg
adc
notb
lcall
xchg
add
inc
insb
je
inc
xchg
or
pushf
mov
movsb
cs
jl
add
stos
xor
hlt
inc
sub
xrelease
insl
mov
sbb
movsl
push
insb
or
stos
sub
fdivrl
dec
aad
and
fsincos
imul
jno
popf
ret
stos
push
sbb
inc
out
stos
xor
nop
sahf
fists
cmp
mov
rclb
std
call
es
push
lds
cmc
ja
jns
les
int3
mov
add
inc
adc
mov
jb
mov
cld
sub
dec
add
rorl
faddl
ret
hlt
addb
fdivl
das
rcll
xlat
dec
in
cmp
andb
and
xor
rorl
jnp
mov
aaa
repz
xchg
pusha
mov
add
arpl
pusha
adc
xor
out
inc
les
rcrb
jmp
fimull
gs
fisttpll
sub
cmp
push
jb
push
data16
orb
sub
enter
repnz
movsb
mov
sbb
and
les
mov
in
clc
dec
and
jg
in
cmp
cmc
test
cmp
ja
lahf
ljmp
mov
cltd
adc
ljmp
mov
jne
cmp
mov
and
jns
je
cld
insb
stc
mov
enter
mov
repnz
repz
push
test
cmpsb
sbb
mov
xor
adc
push
idivl
or
vdivpd
ss
push
gs
dec
movsl
in
ret
sbb
inc
add
shlb
push
sbb
xchg
mov
je
sbb
push
sbb
pop
cmp
in
pop
stos
jne
jmp
cmp
int3
add
pop
mov
pop
mov
outsl
xchg
insl
dec
in
mov
jb
sbb
imul
mov
lcall
roll
test
rcrb
xor
jl
loop
lcall
mov
imul
mov
mov
pop
int3
loopne
frstor
icebp
ds
aas
pop
mov
mov
faddp
jle
stos
cmp
xchg
test
nop
lahf
push
or
pop
mov
loop
push
xor
scas
ds
mov
add
jb
pop
pop
pop
in
mov
in
cmp
gs
xor
jmp
addb
mov
adc
mov
jg
mov
cmpsb
mov
shl
mov
ljmp
imul
ja
sti
dec
cmp
mov
popa
repnz
sbb
xor
jmp
mov
add
or
jp
sbb
adc
in
sub
sub
sub
call
push
mov
gs
dec
pop
xchg
mov
in
sbb
fcomps
dec
fwait
push
inc
lcall
icebp
xchg
fsubl
push
out
and
or
scas
fistl
popf
jp
xchg
adc
lcall
sahf
adc
or
cmp
in
jecxz
xor
test
jp
insb
outsl
add
sbb
jnp
cli
jge
cmp
add
cli
jno
gs
mov
enter
dec
sub
mov
jne
es
addr16
cmp
lret
fadds
lock
test
mov
and
xchg
outsb
push
inc
in
pop
test
insl
lret
mov
push
xchg
xor
push
or
xor
add
mov
insl
jb
test
mov
inc
adc
mov
fbld
repnz
mov
push
pop
and
cmpb
sbb
ficompl
dec
cmp
stc
mov
insl
dec
add
incl
lret
pop
add
lret
std
push
mov
jno
test
add
testb
jne
rolb
mov
out
inc
iret
xor
jmp
test
xchg
pop
iret
lds
push
idiv
sub
xchg
mov
xchg
lahf
inc
push
add
sbb
dec
inc
xchg
outsl
shrl
loop
mul
btsl
or
in
iret
inc
xchg
pop
mov
outsb
mov
mov
call
adc
dec
add
addr16
in
and
sbbb
insb
mov
into
xchg
rorb
mov
add
and
jecxz
mov
pusha
or
mov
enter
stc
ret
sbb
lea
pop
adc
in
mov
das
cmpsl
cmpl
xchg
sbb
dec
inc
out
adc
mov
jle
mov
and
out
enter
lods
sbb
mov
cld
icebp
test
xchg
sbb
push
mov
and
test
dec
xor
data16
xchg
ja
mov
mov
adc
iret
pop
out
movsl
loop
popa
cltd
adc
push
les
iret
push
cwtl
mov
mov
sbb
sar
jno
nop
mov
popa
jnp
mov
inc
xchg
inc
inc
dec
xchg
push
pop
setae
adc
sbb
jle
inc
ret
aas
pop
add
sub
ja
jg
sub
or
or
outsl
or
call
mov
inc
adc
adc
jge
ds
shll
and
mov
sbb
xlat
push
ja
mov
dec
jp
cld
push
add
sub
mov
int3
daa
mov
fldcw
push
or
dec
fcoml
aaa
mov
sbb
xor
inc
mov
data16
test
js
fstl
repnz
aaa
hlt
or
pop
je
cmc
in
pop
js
sub
les
and
jne
push
out
movsl
xor
stos
cltd
stos
jle
mov
aam
adc
mov
pop
fisubl
mov
orb
clc
aad
mov
adcl
aaa
push
ds
gs
ss
cmp
rcrb
adc
lods
push
dec
icebp
sub
lods
sti
icebp
xor
sbb
xor
pop
push
sbb
jmp
push
repz
sbb
xchg
ret
lock
fwait
xchg
sbb
ljmp
xlat
mov
push
add
stos
bound
push
repz
fldenv
cmp
xchg
stos
xchg
ja
xor
fldcw
inc
adc
loope
nop
push
mov
stos
or
scas
scas
mov
insb
push
lcall
stc
push
or
sahf
or
inc
inc
aaa
dec
jl
nop
jne
inc
outsl
sar
mov
adc
arpl
push
bound
cs
fwait
cmc
adc
aas
pop
push
psubsb
lds
in
cmc
or
mov
add
aas
lahf
mov
or
jne
dec
sub
push
inc
ret
subb
test
imul
std
xorl
inc
xchg
xor
and
pop
divl
test
scas
scas
or
into
scas
ret
push
lret
jns
call
inc
sbb
adc
dec
cmp
lods
pop
icebp
or
lock
and
loop
or
lret
mov
xchg
imul
pop
jg
std
out
push
xchg
and
ss
adc
movsb
cmp
xor
pop
ret
mov
roll
push
mov
ss
loope
jecxz
jecxz
jne
or
add
pushf
pushf
mov
outsb
push
mov
outsl
mov
in
or
in
xchg
in
push
in
xchg
inc
mov
insb
jle
stos
and
mov
jns
adc
lea
test
shll
shrb
mov
inc
in
out
fisttpl
shlb
xlat
xor
aas
gs
lds
cmp
jo
sbb
mov
mov
out
nop
shlb
shll
mov
mov
sub
sub
mov
cmp
loop
jmp
les
cmpl
shl
ja
and
pusha
enter
inc
mov
icebp
frstor
iret
in
in
mov
xchg
mov
or
les
je
pop
mov
out
ret
sahf
sub
xor
xchg
dec
mov
aaa
dec
pop
divps
jns
and
pop
sbb
test
inc
sti
mov
and
xchg
ret
jns
add
andb
add
mov
mov
mov
hlt
movsb
jo
dec
jge
push
int
push
mov
xor
xor
lcall
mov
jp
and
fildll
adc
and
in
mov
xchg
mov
or
push
js
movsb
mov
dec
lods
les
jmp
adc
dec
adc
mov
pop
fcmovnb
insl
shl
lods
fs
mov
outsl
les
imulb
fisubrl
adc
adc
jmp
adc
inc
push
jle
jg
movsb
lret
cmp
fisubrl
lahf
xchg
mov
add
popa
sub
in
pop
out
jle
dec
sub
lret
mov
push
int3
gs
hlt
aaa
add
mov
fdivr
push
push
xor
inc
cmpsl
xchg
xchg
in
fstpl
push
ja
mov
andps
rorb
sub
test
push
or
mov
ljmp
or
sbb
fldt
pop
in
sub
lea
aas
ret
in
mov
cmp
addr16
ja
mov
cmpsb
jecxz
adc
jbe
mov
fcmovnb
push
adc
sub
jmp
clc
mov
mov
dec
shrb
mov
mov
daa
clc
clc
lods
mov
leave
cmp
and
adc
jmp
cmp
adc
jmp
or
in
and
push
mov
jg
cmpsb
jne
fs
dec
je
and
mov
bound
pushf
cld
mov
lret
jae
repnz
rclb
in
add
out
jns
mov
mov
cmp
dec
cmp
mov
add
ja
add
push
mov
pusha
shr
ss
test
cmp
call
mov
addb
fidivrl
fwait
mov
shll
mov
ret
jle
roll
lcall
push
mov
inc
sahf
inc
adc
addl
jns
add
xchg
fdivrl
adcl
inc
add
test
cltd
loope
xchg
or
repnz
xchg
fnstcw
push
arpl
aam
mov
lods
imul
lods
repz
add
gs
push
and
fdivrl
cmp
ljmp
clc
outsl
je
mov
cltd
addr16
pusha
ret
and
sbb
into
pop
mov
inc
xor
fidivs
adc
and
mov
dec
lock
xlat
js
testl
sbb
mov
jge
mov
push
xlat
or
daa
les
inc
repnz
or
xchg
or
in
fwait
int
fisubl
push
sbb
repz
mov
sarb
adc
aas
addr16
push
pop
fisttpll
mov
rorl
jo
jge
xorl
pop
jae
pop
mov
insl
add
sub
js
in
jl
movsb
jmp
cmp
enter
sbbb
hlt
pusha
jmp
or
sub
stc
int3
in
mov
add
push
popl
pshufw
mov
adc
imul
xor
sti
mov
or
mov
fisubrs
in
lret
add
fisttps
cli
inc
pop
jnp
sub
mov
loopne
add
pop
jg
out
outsl
mov
jb
mov
push
mov
jnp
ja
sti
in
xchg
sub
sbb
xlat
add
mov
aad
pop
xchg
jecxz
push
repnz
div
subb
inc
cltd
es
xchg
sub
imul
lret
inc
decb
loope
pushf
mov
sahf
pop
outsl
push
movsb
popf
jns
je
ja
imul
loope
add
or
leave
xchg
xchg
dec
adc
bound
cmc
mov
scas
cmp
mov
cltd
pop
fimull
lock
ljmp
or
js
lock
or
imul
mov
rol
mov
es
jge
out
movsl
das
outsl
bound
jp
outsb
sbb
sbb
push
rcll
jmp
scas
inc
out
cs
sub
addr16
outsb
jnp
push
and
xchg
cmp
jge
or
andb
push
sti
out
arpl
inc
stos
push
outsl
clc
or
and
xchg
mov
dec
stc
xor
in
sub
inc
adcl
int3
xchg
fs
mov
pop
pop
xchg
insl
push
mov
in
movsb
xlat
ds
jo
dec
and
dec
push
inc
js
jns
test
dec
xchg
pop
adc
mov
mov
shll
dec
popa
mov
pushf
loopne
mov
shl
mov
and
jmp
push
mov
mov
cmp
lods
inc
cmp
fimull
je
dec
mov
cmpl
in
popa
fdiv
ret
jp
mov
mov
ja
ret
repnz
sub
rorl
jmp
xchg
gs
xorb
adc
or
cmpsb
ja
in
jbe
sbb
mov
mov
cli
ds
jne
sbb
cmc
mov
jbe
cmpsb
and
cmpsb
imul
lret
lods
icebp
outsl
repnz
adc
xchg
imul
xchg
fnstenv
imul
stc
je
sub
sbb
mov
pop
mov
or
adc
movsl
mov
aam
pop
loopne
dec
cmp
mov
lods
es
ss
dec
insl
mov
inc
or
ret
pop
and
and
add
mov
lcall
fistps
adc
test
pop
es
fwait
call
sbb
pusha
ljmp
insl
jns
push
and
xor
lret
cmc
stos
aad
sub
adc
bound
sbb
dec
leave
cmp
ljmp
hlt
sub
xchg
lcall
jns
addr16
push
mov
mov
int
ret
stc
or
fs
mov
or
scas
pop
and
out
xlat
jo
test
cmp
mov
inc
add
pop
popl
lahf
xchg
adc
mov
imul
or
push
fstpt
fsts
jnp
and
stc
popl
repnz
mov
stos
es
scas
aad
into
sbbb
std
add
mov
shr
mov
cltd
aaa
call
push
push
mov
shrl
pop
lret
js
cmp
jmp
ret
lods
inc
xor
movsb
dec
mov
cmpsl
mov
fldt
sub
popf
in
push
xchg
out
jmp
pop
adc
loope
in
loope
mov
sub
fwait
mov
xchg
mov
push
xor
inc
loopne
imulb
dec
push
testl
pop
mov
ds
cs
daa
lret
add
xlat
jns
and
stc
add
fwait
cmp
int
psubsw
jp
xor
xchg
or
push
pop
daa
adc
jo
mov
inc
jle
insb
dec
jmp
int
popl
cmc
mov
movsl
in
push
adc
cmpsb
cmp
popfw
dec
jae
fdivl
xorl
inc
lcall
push
inc
popa
jne
fdivs
les
nop
mov
mov
sub
jae
push
inc
sahf
and
sub
sbb
mov
loope
xchg
out
call
mov
ret
inc
cmpsb
mov
mov
ljmp
adc
sbb
pop
xor
out
mov
mov
mov
lahf
ret
faddl
aad
mov
add
loop
scas
test
pop
fisttpl
clc
xlat
ljmp
inc
stos
xorb
int
inc
sbb
mov
push
inc
insl
out
mov
int3
sarb
mov
addr16
push
outsb
fistpl
cwtl
or
popf
mov
push
push
lahf
stc
adc
adc
js
insl
mov
fildll
pushf
cmp
push
movl
xlat
aad
ret
pop
sub
dec
jmp
mov
xchg
xchg
cltd
pushl
sub
xchg
and
xor
popf
test
sti
mov
ret
mov
lret
daa
es
xchg
mov
jo
dec
dec
jnp
jg
lock
sbb
sti
lahf
xchg
cmp
push
aaa
pop
incb
xlat
jge
das
adc
hlt
and
jle
arpl
mov
sub
movsl
das
adc
push
xchg
cmpsl
clc
repnz
sbb
popf
mov
je
and
cmp
mov
fwait
jmp
mov
push
xorl
dec
push
cmpsb
lret
outsb
xchg
inc
insl
xor
ret
lds
or
ds
ljmp
daa
sub
mov
and
es
sbb
jg
ja
xor
mov
add
aaa
jnp,pt
sub
pop
lret
pop
dec
push
shll
mov
lods
sbb
pop
icebp
cld
jo
xchg
int
adc
jle
lock
outsb
sbb
and
jno
sbb
insb
mov
insb
fsts
mov
cmp
stos
shl
sbb
jo
jnp
mov
ja
fs
mov
jbe
call
je
loope
arpl
lcall
jns
imul
cltd
pop
dec
mov
pop
fidivrl
pop
mov
ficompl
ficoml
ja
insb
les
cltd
pop
iret
pop
dec
jmp
pop
enter
out
inc
test
lret
pushf
loopne
pushf
imul
loopne
das
ret
mov
test
xor
icebp
jmp
int3
mov
xchg
pushf
pop
cmovne
or
out
call
xchg
cwtl
jnp
add
in
mov
test
or
aam
adc
pop
jg
sbb
sbb
roll
pop
jle
sub
adc
rcrb
shll
jmp
repz
scas
idiv
iret
rcrl
jae
fisttpl
aaa
ficomps
pop
pop
xchg
movsb
ja
push
and
popa
in
and
mov
dec
and
pushf
add
add
enter
pop
outsb
xchg
jmp
jns
mov
inc
mov
fisubs
hlt
clc
lock
dec
cmp
fwait
pop
call
dec
mov
stos
jmp
idivl
stc
iret
or
mov
and
adc
ret
fsubrl
xchg
xchg
scas
call
repnz
out
jle
mov
hlt
ja
xor
cld
cmp
adc
pop
jno
loope
notb
or
dec
xor
pop
xchg
clc
cld
push
pop
call
mov
mov
gs
bound
pop
rorb
xchg
sbb
inc
in
pop
or
jmp
in
xorb
stc
repnz
xchg
cmpsb
pop
movd
push
jle
cmp
cmpsl
mov
out
mov
sarl
scas
adc
iret
xor
dec
and
or
jecxz
gs
test
inc
or
in
mov
lret
adc
cmp
jmp
inc
inc
mov
iret
in
lods
into
cmpsl
sub
jle
jnp
xchg
jno
insl
pop
mov
xor
pop
cmc
in
stc
mov
pop
sti
hlt
cmp
add
arpl
aam
dec
test
add
add
jle
dec
adc
out
push
xor
push
inc
cmp
in
lea
mov
leave
imul
out
mov
cld
pushl
rorl
and
les
push
out
bound
or
idivb
xor
shrl
lods
or
sbb
les
addr16
push
mov
dec
inc
or
call
clc
and
lret
sarb
sbb
or
add
cmp
push
mov
aad
inc
xchg
and
scas
push
aaa
mov
std
ret
cmp
rcrb
mov
add
and
repnz
ljmp
popfw
mov
cld
dec
rolb
xlat
adc
adc
mov
or
or
or
mov
or
xor
mov
lock
jns
dec
mov
ficoml
fiaddl
sub
cmp
jo
or
test
adc
sub
stc
xchg
jmp
cmpsb
int3
or
or
hlt
mov
in
push
cmp
gs
xor
xchg
lods
add
arpl
adc
sti
mov
dec
sbb
sub
cmp
mov
cmp
adc
add
nop
test
xchg
dec
insl
les
pop
sub
cmpsb
push
fidivrl
lahf
cmp
pop
fnsave
sbb
mov
xor
pop
nop
jae
xor
or
add
inc
stc
rcrl
movlps
inc
sub
test
mov
pop
inc
adc
jnp
or
pop
pop
push
cmpsl
xchg
inc
jne
loop
mov
ret
sbb
outsl
dec
mov
mov
movsb
cmp
loope
aam
in
pusha
insl
bound
mov
cmp
aam
iret
loop
mov
mov
mov
inc
mov
mov
or
lea
inc
mov
adc
ljmp
push
cmp
jno
adc
clc
jo
test
push
fistpll
and
sbb
cli
scas
mov
xchg
stc
pop
std
gs
jns
int
inc
pusha
fs
pop
push
rclb
sub
ljmp
dec
and
pop
inc
mov
cltd
pop
inc
push
jnp
outsl
mov
and
and
push
fwait
clc
popf
fbld
out
insb
mov
push
inc
stc
lds
inc
jle
outsb
mov
out
xchg
cmp
push
xor
cwtl
stos
outsb
call
dec
sbb
mov
mov
aad
in
mov
push
jecxz
xchg
cmpsb
lock
push
imul
xchg
out
xchg
jne
jmp
jle
dec
shlb
mov
loopne
sbb
data16
or
inc
clc
aad
test
xlat
into
ret
sti
sub
inc
pminub
push
cmp
push
pop
stos
es
cwtl
dec
iret
daa
xorb
iret
xor
daa
push
push
mov
push
dec
or
or
xor
or
movsl
jb
sub
pusha
sub
test
jbe
mov
add
cmp
mov
jae
lret
loope
jno
pop
mov
repnz
lahf
aam
scas
call
sub
je
sub
ss
aam
incb
jp
sub
inc
push
jg
scas
pop
and
pop
xchg
xor
cltd
pop
mov
sti
scas
cmp
xchg
insb
inc
ret
mov
mov
dec
lret
fdivp
add
adc
xchg
enter
xchg
ret
movsb
jnp
and
pop
inc
idiv
cmp
out
or
xchg
inc
daa
clc
out
sar
cmp
push
jecxz
pop
add
jnp
push
push
dec
mov
jmp
mov
xor
lods
hlt
lcall
mov
fucom
add
dec
add
xorb
push
mov
imul
xor
lahf
cmp
fucomip
cwtl
pop
or
push
rcll
in
loop
adc
es
insl
and
pushf
add
push
xchg
mov
or
push
mov
jns
add
add
cwtl
adc
test
repz
iret
shrb
aad
sbb
jbe
into
adcb
add
pop
sbb
add
pop
sbb
or
cmp
aam
mov
negb
inc
xchg
adc
dec
call
or
mov
loop
fisubrl
ss
lahf
jg
cli
rcl
cmp
aad
push
mov
subb
pop
sbb
push
mov
adc
mov
add
movsl
or
pop
push
or
sbb
pop
movsb
ja
lret
imul
mov
incb
or
test
movsb
das
loop
aaa
push
sti
sub
xor
jb
dec
sub
ret
loopne
xchg
js
test
arpl
mov
cs
hlt
xchg
mov
cmp
dec
jg
and
cwtl
jae
jmp
inc
sub
sub
and
push
mov
push
or
sbb
call
push
cmpsl
mov
in
push
stos
mulb
sahf
add
add
pop
in
mov
adc
mov
jbe
mov
jecxz
test
movsl
add
and
cmp
arpl
or
jg
jb
lds
test
or
fsubrl
cmp
mov
adc
jecxz
sub
cmp
sub
jle
sbb
js
sbb
push
push
sahf
push
loop
mov
dec
jg
mov
rolb
lods
xchg
cltd
adc
and
mov
fbstp
sub
loope
insl
cld
push
lea
mov
sub
mov
cmp
pop
enter
icebp
jnp
testb
xchg
outsl
outsl
mov
cli
inc
inc
es
pusha
cs
push
aam
out
push
dec
mov
rcr
repnz
fimull
sbb
ret
mov
mov
push
add
jmp
dec
adc
push
popf
sti
dec
shlb
sarb
mov
into
imul
test
lret
jb
fst
pop
ds
inc
pop
repnz
mov
enter
arpl
pop
leave
sub
pop
aam
mov
pop
cmp
out
iret
xor
insl
addr16
fstl
ret
cs
mov
push
adc
iret
les
jmp
dec
sub
jg
int
jg
lahf
push
ds
and
or
mov
add
sub
pop
inc
repz
nop
jp
mov
or
add
inc
loope
test
push
call
aaa
in
cmp
mov
adc
sub
xlat
outsb
dec
and
add
adc
xchg
xchg
cwtl
adc
call
jnp
fldcw
push
mov
cmp
les
adc
xlat
fsubrs
ds
gs
pop
xchg
or
cli
daa
push
fs
or
icebp
fwait
imul
or
xchg
sahf
mov
fs
sbb
sahf
enter
cld
pop
jle
scas
ss
pop
pop
sub
pop
add
pop
cmp
push
pop
and
pop
popa
in
mov
inc
insl
sub
jg
sbbl
or
and
ret
inc
cmpsb
sbb
cmpb
dec
add
in
pop
arpl
mov
movsl
push
cmp
push
inc
fiaddl
xchg
xchg
js
nop
inc
lahf
icebp
ss
adc
or
mov
pop
jge
jb
jp
test
ffreep
movsl
aad
lods
cmpsl
pop
das
dec
lret
sub
dec
ja
jae
dec
xchg
fs
jo
mov
rcl
cmp
shrb
mov
xor
xchg
lahf
data16
pop
pop
xchg
out
or
nop
insb
xlat
sbb
adc
dec
push
popf
fsub
xchg
add
popa
aad
outsb
or
push
sbb
pop
adc
mov
enter
fadds
xor
sbb
rclb
popa
pop
adc
fwait
pop
mov
fistpl
bound
sub
arpl
loopne
sub
cmp
in
popa
inc
push
dec
mov
fidivrs
pop
or
data16
sbb
jnp
sahf
mov
inc
and
pop
out
sub
cmp
call
jle
cmpsl
push
sub
cld
ret
data16
pusha
cmp
lds
adc
push
scas
add
push
in
mov
daa
dec
das
sub
pop
pop
repz
fistps
fmulp
subb
mov
ret
dec
or
lods
mov
xchg
jp
enter
out
and
pop
sbb
xchg
or
aam
icebp
dec
sahf
js
ljmp
inc
push
cwtl
lret
add
test
sub
pop
sbb
mov
lods
sub
pop
inc
jmp
das
push
xchg
inc
fs
pusha
push
adc
push
fdiv
push
cmc
nop
xchg
cmp
shrl
xchg
jne
mov
dec
or
add
shrl
xchg
mov
mov
push
xlat
ss
fmull
addr16
xchg
mov
push
mov
dec
mov
fsts
andl
insb
sbb
enter
cs
inc
inc
dec
popa
add
adc
ljmp
inc
popf
jae
adc
iret
jle
and
cmp
lock
inc
cmp
loop
mov
ljmp
icebp
out
arpl
sbb
sbb
dec
scas
stos
cltd
mov
sub
xor
insb
and
pop
xor
aam
pusha
movsl
clc
lea
pop
es
gs
cmpb
cwtl
fwait
pop
in
dec
mov
sub
and
lret
xchg
movsb
cwtl
push
gs
jle
into
mov
bound
sahf
loop
daa
jns
pop
mov
test
movsb
pop
iret
les
mov
loopne
repz
add
push
shlb
jle
jae
push
add
test
lods
out
int3
xchg
pop
pop
dec
sbb
sub
jns
pop
xchg
cmp
rclb
ja
aam
iret
imul
or
pop
xchg
sbb
jbe
sub
push
adcl
mov
inc
stos
rolb
jle
rcr
int3
mov
arpl
pop
lcall
outsb
subl
out
push
pop
dec
gs
pop
scas
std
dec
xor
mov
pop
sbb
jecxz
out
and
in
sti
xchg
push
add
ret
mov
xchg
lea
imul
aas
ljmp
cmp
sbb
xchg
outsb
lods
pop
addr16
mov
xchg
int3
pop
cwtl
mov
aad
xchg
js
mov
sbb
aam
xor
adc
and
enter
aas
rol
lods
push
push
push
sbb
mov
push
movsl
push
insb
pop
jl
mov
sub
push
push
push
push
add
xchg
pop
mov
out
mov
and
pop
or
loopne
out
dec
push
push
js
pop
into
in
shll
in
fisttpll
out
xlat
cmc
orl
in
sahf
xchg
pop
scas
xchg
call
cmp
cmp
out
mov
add
fistpl
cmp
xor
mov
into
sahf
jb
ds
xor
repz
test
pop
mov
sub
lods
fidivs
xchg
in
sbb
call
fsub
scas
pop
inc
pop
dec
int3
cld
rcl
test
lods
inc
test
scas
neg
bound
shrl
incb
push
jns
dec
out
loopne
fsts
jbe
jae
outsl
insl
or
pop
mov
test
sub
addr16
je
mov
push
push
out
jge
aam
test
je
sahf
dec
push
loope
arpl
cmpl
lahf
and
xor
inc
xlat
cmpxchg
fidivrs
in
jnp,pt
push
push
xchg
jo
lds
imul
mov
cmp
in
mov
cld
mov
mov
cs
les
nop
jbe
pop
add
add
jne
lret
icebp
sahf
cmpl
cmc
iret
lods
jbe
outsb
in
mov
mov
movsl
sbb
fnstenv
mov
fs
xchg
gs
popa
and
xchg
mov
push
arpl
add
pushf
scas
cltd
xchg
out
or
cs
push
mov
push
dec
fidivrl
movsl
insl
and
imul
addr16
add
xor
jl
dec
mov
jb
push
jge
std
pop
jno
dec
adc
dec
inc
outsl
dec
leave
sarl
call
xchg
or
pop
xchg
fcmovb
out
jmp
xchg
inc
loop
in
jl
lods
out
xor
push
or
test
jnp
sbb
pop
insl
pushf
push
jns
data16
mov
stos
sarl
adc
in
pop
orb
add
sar
mov
lock
and
into
adc
rclb
sbb
out
cltd
mov
sub
sahf
fnstenv
push
mov
and
inc
lods
lock
push
ljmp
mov
xor
pop
shlb
repnz
sbb
icebp
mov
push
repz
into
cmp
enter
sub
xchg
aam
pushf
xor
jp
mov
cmc
movsb
fs
or
sbb
mov
fs
or
or
jbe
popf
int3
loopne
enter
iret
insl
lcall
sti
cli
fnstcw
into
and
loop
mul
push
stos
jle
mov
cltd
and
ds
xor
pop
aam
out
movsl
rcl
push
hlt
in
push
push
bound
daa
ss
je
movsw
jae
fucomi
sub
lock
outsb
dec
or
add
or
shll
pop
adc
dec
mov
ret
rolb
add
sub
data16
fnstcw
and
out
push
popf
scas
xlat
fldenv
aad
insl
jbe
sbb
jo
stos
xchg
cmp
push
pop
push
dec
push
xor
call
pushf
xor
into
ja
popf
push
adc
mov
rorl
stos
fisttpll
lods
cmp
push
aam
les
pop
les
orl
sub
adc
dec
xor
les
mov
fsubrs
jp
scas
inc
cmp
pop
adc
adc
sbb
ds
in
incb
and
imul
adc
jo
popf
and
fstpt
movsl
jge
mov
inc
movsb
pop
xchg
pop
loop
xlat
test
or
es
dec
mov
out
fwait
jl
rcl
jle
test
mov
adc
scas
rorl
add
mov
hlt
insb
sbb
sub
lret
scas
add
mov
or
push
mov
push
je
cmpsl
sbbb
int3
pop
xchg
sub
sbb
xchg
push
movsl
push
out
fisubrl
leave
test
add
in
jne
jge
cltd
pop
call
or
and
sbb
cltd
scas
cwtl
pop
push
inc
sti
insb
jp
cmc
out
mov
xor
add
ljmp
cwtl
insb
ljmp
mov
add
add
dec
data16
adc
mov
sub
addb
ds
outsb
jmp
add
sti
fbstp
dec
mov
movsb
test
and
jne
aaa
cmp
jns
inc
pushl
scas
ja
jae
mov
push
les
icebp
mull
mov
jnp
nop
aas
sbb
sub
out
sbb
push
shll
in
ret
and
cmp
adc
stos
mov
cmp
lods
nop
pop
cmp
xchg
repz
or
sbbb
jo
push
cmp
je
fdivrs
jnp
dec
ja
add
cmc
mov
mov
cmp
xor
es
shll
jle
pop
or
and
call
mov
mov
pop
jp
dec
push
jg
xchg
insb
and
jp
mov
xchg
lret
gs
cmovp
pop
cmp
mov
lods
popa
push
lahf
hlt
leave
lret
insb
outsb
inc
dec
out
push
lea
and
mov
push
push
mov
jmp
mov
inc
pop
hlt
inc
sub
push
or
in
aaa
out
popa
orl
addr16
sub
adc
mov
aad
rol
mov
cwtl
fisubrs
int
test
mov
sti
fiaddl
push
iret
xchg
or
test
out
xchg
rclb
lods
mov
dec
inc
mov
addr16
cmc
adc
push
call
mov
out
adc
sub
xchg
leave
add
mov
xchg
jp
mov
mov
dec
mov
outsl
jecxz
dec
cmp
sti
dec
fcomps
arpl
cmp
xor
movsb
inc
xchg
xchg
and
cmp
xchg
loope,pn
movsb
movsb
mov
xchg
fmull
and
push
cs
fsubrl
loopne
mov
push
mov
xor
push
xchg
or
shrl
mov
inc
in
cmpsl
dec
subl
push
lods
insl
xor
inc
lds
sti
jp
push
icebp
push
sub
aam
push
enter
xor
mov
jne
sub
xchg
outsl
dec
push
dec
push
jecxz
add
or
and
aad
fwait
xor
les
cmpsb
clc
ljmp
lcall
pop
lods
lods
inc
jmp
dec
xchg
cmpl
ljmp
lahf
out
repnz
mov
xchg
cltd
in
sub
jmp
mov
mov
out
testb
adc
fs
out
cmpsb
insb
xor
mov
hlt
bound
dec
mov
dec
ret
into
movl
push
sti
xchg
lret
and
pop
nop
xchg
xor
xchg
std
sub
xor
sub
dec
stos
pop
scas
iret
icebp
sti
sahf
cmpsl
arpl
push
cwtl
repz
jb
pushf
mov
outsb
push
jp
inc
mov
mov
or
divl
sub
dec
xorb
dec
mov
in
cmc
scas
push
cmp
lcall
addl
sbb
add
fcomip
push
sub
icebp
lcall
and
push
rcrl
adc
ljmp
pop
xchg
and
push
mov
aad
ficoms
sbb
sbb
push
push
fcomi
in
add
movsb
ficoml
imul
daa
out
xchg
or
adc
dec
add
and
rcr
dec
aas
adc
imul
out
sub
xchg
icebp
lcall
mov
sahf
mov
mov
out
mov
xor
sub
test
adc
mov
pop
nop
jle
rcrl
sbb
mov
pop
in
iret
popa
jne
adc
add
xor
addb
repz
cmp
or
cltd
ss
cmc
imul
jnp
sbb
and
lcall
addr16
imul
xchg
test
cmp
or
int
jmp
push
jmp
dec
adc
push
or
bound
sbb
mov
aad
aaa
loop
je
arpl
mov
cs
sbb
ret
add
sub
notb
adc
out
std
dec
add
js
negl
les
inc
sarl
lret
mov
pop
mov
scas
push
mov
popf
outsb
sub
or
push
je
mov
scas
mov
shl
dec
shl
lods
subl
lods
mov
repnz
sbb
aam
push
pusha
sti
mov
push
lods
lods
rclb
repz
xor
mov
in
sub
pop
hlt
mov
pop
push
arpl
rol
cmpsb
add
lods
sar
cmova
movsb
xchg
fsts
pop
mov
xor
push
mov
cmc
fwait
ret
add
cmpsl
mov
pop
pop
cmp
jge
inc
test
or
adc
jmp
outsl
jmp
aas
cmp
addr16
mov
mov
jnp
clc
rcr
lds
cltd
js
pop
lret
mov
pop
adc
xorl
iret
orb
add
pop
subb
sub
cld
mov
xor
jmp
cmp
and
cmp
out
popf
xchg
icebp
mov
pop
jl
jecxz
ljmp
mov
cmp
jo
push
mov
cmp
adc
lahf
pop
mov
mov
cmpsl
mov
mov
xor
inc
je
sarl
cwtl
adc
dec
add
or
pusha
lods
mov
add
push
push
push
cmpsl
in
movsb
pushf
pop
xchg
in
mov
stos
sub
adc
fisubs
push
adc
push
adc
push
shrl
adcl
push
cmp
ds
outsb
cld
out
or
lret
stos
outsl
in
icebp
mov
mov
enter
cmpsl
mov
shr
cmp
sti
dec
xor
mov
inc
subb
imul
pop
mov
mov
je
in
inc
add
out
mov
adcl
sahf
sahf
fsubl
gs
mov
and
mov
das
imul
ss
inc
icebp
mov
into
sbb
in
outsl
int
iret
cmp
dec
lret
lock
imul
jnp
leave
push
adc
mov
and
adc
add
add
stos
in
and
lcall
mov
iret
sub
gs
jne
xor
orb
fucom
inc
cmp
scas
sbb
inc
mov
cltd
add
xor
jb
inc
clc
cmp
push
mov
movl
mov
mov
mov
sbb
loope
jmp
add
lcall
rorl
imul
sub
test
jp
popf
or
push
dec
mov
clc
out
movsl
add
int3
jae
cltd
push
cmp
test
jns
gs
add
or
popf
inc
outsl
pop
and
lcall
jp
sub
je
dec
dec
dec
sub
fld
or
push
inc
pop
pop
lock
push
in
jne
sub
cld
out
xlat
cltd
or
adc
scas
sbb
leave
and
loope
lds
mov
mov
insl
or
sarb
jb
stos
cmp
jo
dec
lahf
push
lds
mov
cmp
imul
mov
adc
mov
ljmp
xlat
repnz
icebp
dec
ffreep
rcrb
xchg
cltd
shl
int
xchg
ret
lahf
loopne
sbb
mov
sahf
leave
cmp
xchg
jno
mov
ret
clc
out
ficoml
mov
mov
xor
push
or
push
int3
loope
insb
mov
fisubl
dec
fmull
mov
mov
lret
or
pop
das
xchg
mov
lock
xor
je
test
cltd
and
dec
lods
xchg
aaa
in
add
push
inc
cld
outsb
sarl
lods
les
xor
test
inc
lcall
movsb
scas
sub
pop
pushf
and
sbb
or
xchg
xor
ss
mov
add
push
repz
xchg
aad
inc
xchg
jp
test
sbb
rorl
mov
bound
out
nop
int3
xchg
jnp
mul
cmp
movsb
mov
cli
xchg
in
mov
and
add
es
jge
adc
fisubs
pushf
inc
into
loop
mov
xlat
pop
addb
xchg
sub
sbb
add
loopne
clc
mov
sbb
cmpl
push
sarl
inc
iret
aam
shll
idivl
ds
ret
add
and
sub
sub
inc
bound
out
aas
cld
movsl
lahf
cli
xchg
lahf
in
jl
shl
out
jb
adc
mov
pop
test
pop
mov
testl
cmp
ret
stos
xchg
test
push
xlat
adc
dec
mov
and
jge
daa
insl
push
mov
aad
jp
aaa
bound
push
mov
push
xchg
pop
ds
mov
xor
xor
inc
mov
in
or
cmp
inc
dec
jp
lret
ds
shrd
enter
pop
dec
pop
imul
push
jb
sbb
cmp
shrb
pop
push
stc
fadd
daa
stos
sbb
mov
es
fisubs
inc
push
repz
sub
fwait
pop
push
push
adcb
push
call
dec
sbb
and
jp
test
xchg
popf
push
inc
ljmp
sbbb
xor
roll
daa
xchg
test
sbb
adc
dec
push
sbb
push
scas
cmp
add
pop
xchg
sub
dec
push
mov
mul
adc
cltd
dec
mov
jmp
cmp
jns
outsb
or
aam
hlt
loope
cld
sbb
pop
movsb
cmp
outsb
and
xchg
mov
mov
jo
cmpsl
mov
pop
fimuls
adc
or
add
mov
out
xor
sub
mov
adc
inc
outsb
dec
xchg
lds
push
lret
dec
mov
push
or
outsb
inc
imul
dec
jge
jnp
sahf
jge
sub
jno
inc
aaa
sub
sbb
mov
movsl
mov
sbb
test
repz
add
lea
xchg
and
or
cli
js
adc
sub
sbb
test
sub
xchg
xchg
mov
xchg
cs
and
lods
sbb
ss
addr16
mov
call
ja
arpl
fwait
mov
cltd
leave
push
jle
js
jbe
and
mov
jecxz
dec
add
jb
in
adc
push
lock
ret
insb
lea
adc
sbb
cmp
adcl
push
pop
sti
inc
adc
mov
test
int
dec
and
pop
adc
jns
cmp
and
cmp
xor
and
lods
mov
sub
aad
dec
mov
imul
add
neg
pop
or
daa
jns
adc
xchg
mov
lea
cwtl
dec
mov
into
dec
push
sti
xchg
xor
pop
cmp
ljmp
pop
adc
cmc
nop
imul
lods
inc
out
in
push
movl
mov
pop
push
push
movsb
pop
xchg
pusha
test
xor
lods
shr
cs
sarl
ss
push
mov
cmp
cmp
mov
outsl
xor
or
rorl
jg
add
cmp
dec
mov
insl
int
lods
and
jp
sub
insl
out
subb
sub
insb
out
add
mov
pop
xchg
xchg
loopne
mov
mov
xorl
mov
sub
or
xorb
xchg
stos
lahf
pusha
jne
sub
mov
gs
popf
loopne
inc
bnd
fmull
jbe
pop
sbb
adc
xchg
loope
push
pop
cmp
cs
insb
mov
inc
jno
mov
xchg
cmp
setge
es
jp
mov
adc
mov
cmc
jmp
outsl
push
stos
pop
js
inc
sbb
divl
push
cmc
xchg
jmp
and
shl
mov
and
outsb
pop
loopne
cmp
dec
dec
cwtl
push
jo
xor
mov
icebp
jmp
xorb
dec
inc
mov
xor
dec
nop
lahf
inc
pop
add
inc
insb
ss
std
pop
jmp
push
fstpt
xor
ret
mov
adc
add
sbb
xchg
mov
push
sub
aad
fwait
in
test
dec
xchg
mov
sub
mov
jae
jmp
add
push
insl
mov
push
xor
mov
pusha
mov
mov
addr16
mov
in
sub
and
jmp
scas
xchg
test
jne
ret
and
test
ret
out
or
jle
jl
jle
lds
test
push
cmp
arpl
call
add
mov
mov
bound
dec
mov
dec
fildl
or
pusha
stos
pop
mov
push
xchg
fdivl
test
adc
xchg
inc
into
in
jecxz
cltd
mov
mov
insb
and
push
sub
shlb
push
mov
inc
lcall
xor
push
pushf
push
popa
add
scas
xchg
add
jno
leave
jae
sub
outsl
adc
cltd
js
sbb
xor
jnp
xchg
out
nop
sub
jbe
push
mov
imul
ret
repnz
push
test
fildl
icebp
push
dec
sbb
mov
push
mov
sub
inc
inc
fisttps
mov
add
cli
push
clc
add
ds
fisubrl
xor
mov
and
addr16
push
push
pop
adc
jno
inc
mov
lret
mov
inc
insb
frstor
add
scas
push
andb
sti
cmp
cwtl
loopne
xchg
into
jae
rclb
lret
arpl
pusha
adc
xor
hlt
pop
sarb
bound
pop
sbb
addr16
ror
shrl
cmp
jo
or
lahf
adc
cwtl
adc
out
loop
popl
xlat
into
xor
sbb
adc
pop
test
push
jle
js
cwtl
jle
ja
pop
inc
cmc
test
add
roll
jecxz
call
xor
xor
mov
push
inc
call
mov
das
sub
imul
xchg
inc
xchg
outsb
add
pop
lea
inc
out
scas
aam
lds
addr16
es
mov
xchg
daa
pop
imul
and
jns
in
addl
adc
fildl
mov
pop
pop
push
xchg
adc
lock
rorl
sub
add
iret
xor
mov
out
lea
repnz
adc
add
jbe
fwait
ljmp
xchg
sub
xor
insl
stc
sub
emms
pop
xor
scas
mov
jl
jno
inc
sbb
out
push
outsl
iret
mov
lret
sbb
dec
or
std
fwait
test
outsb
mov
jg
inc
loope
push
or
jbe
jne
push
fmuls
push
jmp
sahf
mov
ja
fcomps
cs
jne
loope
addr16
mov
sbb
icebp
test
jge
int3
pop
adc
mov
or
cmp
pop
imull
ds
cs
inc
mov
inc
cs
inc
aaa
mov
int
inc
and
dec
dec
xchg
mov
mov
add
lahf
mov
std
bswap
cmp
inc
fsubrl
jb
and
xor
adc
inc
lret
or
mov
aaa
mov
dec
jecxz
bound
add
push
mov
lock
inc
nop
sbb
mov
add
sbb
in
or
pop
add
iret
lock
imul
sbb
adc
sub
mov
adc
add
loop
or
cld
pop
scas
loope
jae
fnstenv
mov
cwtl
cs
mov
pop
add
nop
inc
xchg
pop
jbe
pusha
sbbl
xlat
pop
flds
ds
cmpsb
fwait
mov
je
xchg
ljmp
aaa
and
fcompl
add
pop
test
rcll
mov
repnz
pop
push
cmc
xor
mov
mov
sbb
or
add
pop
jns
sti
xchg
pop
outsb
fcmovnb
std
mov
cmc
add
orl
scas
and
pop
mov
xchg
aas
in
fisttps
push
imul
jge
int
in
movsb
popw
pop
lea
cmp
fdivr
sbb
cmp
jecxz
and
lea
cs
out
ss
mov
sar
loopne
cwtl
jne
outsl
mov
inc
in
jg
aam
mov
loope
jg
xlat
test
out
imul
in
mov
mov
ficoml
int3
outsb
repnz
jb
xor
ljmp
mov
inc
imul
add
add
jno
dec
cmc
sbb
sbb
or
dec
jo
lcall
gs
fstpl
pushf
and
add
xchg
cmpsl
add
popa
inc
je
outsl
sarl
cmpsb
fwait
inc
lock
jge
aad
add
movsl
jae
dec
idivb
sti
push
mov
mov
sbb
sbb
sub
shlb
xchg
sub
fidivrl
xor
daa
in
ret
jmp
loopne
mov
fbld
dec
out
mov
sbb
jno
fnsetpm(287
daa
dec
int
jbe
in
aaa
pop
lods
sbb
jno
lahf
in
xchg
inc
scas
shll
out
xchg
dec
jp
jle
pop
jo
or
adc
or
adcb
aas
dec
or
adc
fsub
mul
popa
mov
cmp
lock
fldl
push
lahf
jnp
ss
or
iret
std
icebp
fwait
jge
xor
adcb
es
shl
dec
cld
call
inc
jge
dec
dec
stos
mov
imul
fisttps
xorb
imul
fwait
negb
hlt
add
hlt
iret
les
ret
addr16
sti
pop
aaa
mov
out
cli
mov
mov
aas
sub
mov
push
or
push
inc
pop
sbbl
mov
fimuls
jge
sbb
arpl
addr16
lods
pop
mov
pop
lahf
cs
dec
sbb
sub
addr16
xchg
sbb
leave
sub
outsb
xor
xchg
cmp
push
mov
jns
je
fcomi
nop
push
in
sbb
or
data16
adc
es
pop
ret
fwait
mov
cmp
js
iret
pop
test
subb
mov
jmp
icebp
sbb
shrl
add
inc
js
push
dec
xchg
imul
push
jnp
test
insl
aas
or
dec
cmp
dec
push
popf
dec
loop
cwtl
das
push
sub
negl
mov
inc
xchg
data16
pushf
ret
adc
test
arpl
out
mov
mov
push
cld
out
pop
adc
sti
mov
out
mov
mov
sub
das
out
push
cmp
cmp
int
in
mov
shlb
rcr
in
jae
lods
out
cwtl
jle
cltd
jmp
pop
ret
inc
inc
push
scas
pop
mov
clc
or
iret
ja
sub
fisubrl
push
movsb
ret
jnp
or
sub
sub
fldt
inc
jmp
divb
mov
cmp
cld
mov
and
dec
in
or
or
out
sbb
aam
in
sahf
xor
jb
je
mov
stos
jae
test
stos
or
fcoml
add
dec
cmpsb
inc
add
and
sbb
cli
fcoms
shrb
aad
fstpl
mov
mov
das
push
xor
jp
dec
icebp
pop
pop
fimull
mov
ret
xor
stos
mov
or
scas
fisubs
push
bound
out
movsl
les
xchg
push
cli
pop
jp
xchg
jo
sbb
loopne
sbb
sarb
cmp
fmull
fsubs
mov
push
lcall
test
mov
adc
add
xor
bound
arpl
hlt
mov
lret
inc
adc
mov
iret
jb
push
mov
arpl
out
jb
and
sahf
stos
mov
xor
add
pusha
movsl
movsb
and
aaa
or
and
scas
push
sbb
stos
or
daa
push
rorb
sti
aaa
inc
lods
lock
adc
das
fwait
mov
out
sbb
jo
jnp
inc
cli
jbe
clc
xchg
mov
jmp
inc
lret
xchg
je
xchg
push
xchg
lahf
jl
cwtl
das
and
push
adc
sub
out
push
fldt
hlt
dec
and
jo
aad
push
mov
mov
xchg
sbb
inc
ss
dec
and
cld
mov
adc
fcmovnb
lods
pop
loope
dec
cmp
jle
ds
pop
stos
pop
imul
and
scas
shl
cltd
add
cli
hlt
mov
pushf
repnz
outsb
lret
bound
jae
jno
mov
dec
adc
mov
xor
divb
pop
popf
push
int
pop
divl
xchg
test
push
out
push
or
jg
cmp
sub
sbbl
dec
dec
imul
ljmp
xchg
mov
xchg
in
jo
sub
test
pushf
test
andb
outsl
push
sub
clc
inc
cmp
inc
pop
and
popf
adc
popa
xlat
fildl
sbb
xor
push
mov
test
mov
movsb
mul
or
pop
je
daa
das
test
lcall
pushf
ret
sbb
pushf
lret
add
or
add
pop
or
pop
xchg
mov
cwtl
adcb
out
mov
dec
gs
sbbb
jecxz
inc
dec
push
stos
push
je
pop
js
notb
loop
test
scas
das
dec
rcrb
jo
or
iret
jns
inc
sbb
mov
shlb
jecxz
inc
xor
xchg
jle
jno
sub
mov
mov
push
cmp
lret
test
ljmp
scas
push
iret
or
inc
cmpsl
mov
add
mov
xchg
push
pushl
and
into
aam
divb
or
es
xor
in
mov
stc
mov
pop
cli
lret
lcall
outsl
fnstenv
dec
cld
add
call
push
loop
jecxz
dec
inc
shll
push
xchg
mov
inc
push
mov
pop
fmul
xchg
subl
mov
sbb
push
orl
dec
insb
xchg
jae
loope
loop
popl
fstpt
notl
sbb
xor
in
cmp
mov
xchg
push
imul
lock
insl
shll
das
pop
xchg
dec
or
out
cli
fnsave
jne
jb
loope
pop
int3
or
enter
lds
and
mov
pop
xor
xor
imul
sbb
sub
xor
insl
push
iret
mov
ret
lret
push
pop
loopne
jns
lahf
sub
push
mov
arpl
pushf
lods
sub
lds
outsb
ss
push
nop
push
pop
push
mov
test
mov
lret
lcall
out
mov
ljmp
cmp
arpl
xor
scas
subb
cmp
movzwl
adc
add
decb
add
nop
aam
sti
cmp
test
outsb
mov
sarb
popf
pop
out
lcall
mov
xchg
sbb
les
or
shll
mov
xor
cwtl
out
fmull
leave
mov
mov
js
jg
les
test
jecxz
xchg
xor
xor
mov
repnz
int
stos
sahf
push
mov
jnp
xchg
sbb
mov
push
test
popw
out
mov
fidivl
dec
mov
mov
daa
lock
call
adc
pushf
rcrl
and
sbb
fidivs
clc
rorl
cwtl
ss
mov
out
sti
stos
push
inc
or
ret
loopne
in
xchg
mov
bound
jg
ret
adc
xor
sbb
or
dec
add
or
fisttpll
fimuls
mov
cmp
leave
call
mov
rclb
daa
rcll
sub
inc
imul
gs
ret
enter
and
fildll
test
out
pop
pop
jp
and
cld
cmpsb
or
or
jno
jns
mov
imul
xchg
scas
in
jecxz
inc
leave
xchg
inc
sahf
neg
xchg
outsl
inc
sbb
aam
mov
daa
out
mov
repnz
xor
jp
and
xlat
out
loope
gs
push
adc
cmp
cmp
test
adc
add
add
mov
rclb
dec
jg
xor
sbb
xor
jg
dec
mov
mov
add
sub
jnp
add
dec
sub
cmpsl
add
test
inc
jae
in
adc
jnp
test
gs
xor
shll
xchg
push
std
outsl
mov
test
xor
es
mov
es
jl
incb
push
push
fadd
mov
lahf
mov
pop
sbb
mov
cmp
sub
scas
jb
shl
insl
cmp
jecxz
stos
jle
sub
cmp
push
int3
xchg
lea
movsl
and
dec
popf
mov
shl
fnstsw
push
adc
push
and
subb
setl
add
xor
imul
sbbb
in
jo
xchg
add
pop
adc
fistps
scas
cmpb
inc
pop
jle
cmpsl
sarb
sub
scas
faddl
stos
cmp
or
cld
mov
lods
xchg
mov
jno
nop
mov
lret
or
xchg
dec
push
sti
xchg
and
or
push
cmp
sbbl
mov
lcall
pop
jo
fdivl
sub
adc
mov
xchg
iret
xlat
add
clc
lret
hlt
xor
jecxz,pt
xor
and
jns
int
rorb
sub
ds
pusha
adc
fimuls
ret
vpcmpeqb
pushf
cmp
jne
mov
sub
shr
pop
dec
das
xchg
lods
push
sbbl
pop
iret
fnstsw
mov
cwtl
sbbl
mov
mov
movsl
fistpll
adc
mov
add
lret
test
fwait
adc
cmp
gs
imul
pop
lea
ret
jbe
push
and
fdivs
lahf
es
mov
cmp
outsl
repnz
mov
popa
pop
xchg
sbb
sbb
rcr
loopne
and
adc
mov
xor
ljmp
xor
movsb
or
mulb
sub
sbb
arpl
pushf
jnp
sbb
cmpl
adc
cld
jo
hlt
sbb
sbb
into
nop
insb
or
adc
mov
xchg
add
cmp
cmpsb
js
aad
test
adc
xchg
and
cwtl
jle
loope
fidivl
sbb
jbe
pop
jmp
and
call
mov
dec
lcall
repz
mov
js
rcrb
mov
push
insl
jg
loop
jno
in
cmp
mov
mov
fdivr
inc
or
jbe
adc
je
jmp
or
mov
sub
mov
in
inc
in
outsb
push
test
pop
lret
aas
add
fwait
hlt
or
fistl
clc
xchg
cs
sahf
jp
lds
rorb
ljmp
sbb
adc
inc
sbb
lds
rcl
fwait
mov
cmp
and
sub
jns
xchg
popa
inc
mov
inc
add
jo
stc
xchg
inc
or
jp
in
xor
xor
push
inc
pminub
mov
jbe
out
mov
jmp
hlt
enter
xor
adc
cmp
cmpsb
movsl
push
stos
jl
stos
lock
aas
test
adc
cmp
stos
test
xor
fildll
sbb
or
adc
bound
pop
jl
xor
and
xor
xchg
dec
std
jecxz
and
pop
mov
jo
pop
jg
cmp
je
add
pop
mov
adc
xor
les
mov
mov
and
fwait
cmp
pop
cmc
adc
repnz
pop
pop
or
insl
lcall
xchg
sbb
dec
pop
fimuls
jge
jno
mov
sub
lods
rolb
add
insb
xchg
push
repnz
adc
jg
mov
sbb
pop
pop
mov
pop
ss
lahf
pop
pusha
jb
xchg
or
sbb
adc
cli
push
xor
orl
and
cmpsb
mov
lcall
cmc
pop
inc
icebp
push
loope
dec
xchg
cmp
or
inc
call
xlat
fistpll
or
cli
iret
repnz
leave
cmp
fisubl
icebp
addr16
sbbl
xchg
es
cmpb
movsl
add
jnp
sti
mov
inc
sahf
es
rolb
xrelease
pop
jmp
pop
mov
out
jns
negl
out
adc
sarl
sar
out
mov
xchg
xorb
nop
not
adc
xchg
jecxz
push
ficompl
dec
push
out
push
sbb
jp
xor
jnp
push
loopne
dec
jmp
inc
out
loopne
mov
push
dec
mov
fstps
lods
push
cmp
movsb
pop
cmp
loope
add
pop
in
xlat
mov
js
dec
push
or
and
jmp
stos
push
xor
movb
or
push
push
push
lock
mov
jp
dec
push
ror
sub
add
mov
dec
cmp
pop
shll
mov
je
push
dec
lahf
push
xlat
push
dec
push
and
dec
fldenv
add
inc
cmp
push
loop
cmc
loopne
stos
cwtl
out
ror
add
sbb
xchg
andl
popa
mov
dec
movsl
sbb
push
in
shrl
cld
jp
aas
xchg
jmp
hlt
jmp
into
popf
in
sub
icebp
push
lods
fidivs
xchg
xor
stos
mov
inc
sti
sub
mov
jcxz
insb
pop
iret
xor
xchg
pop
scas
insl
xchg
cmp
sbb
js
and
outsl
mov
stos
aad
sub
fisubs
mov
idivl
insb
pop
jmp
adc
and
sbb
or
lea
dec
mov
lret
fdivrl
inc
fwait
addb
mov
scas
mov
mov
push
and
adc
adc
in
sbb
popa
pusha
fdivrl
cmc
psubb
adc
xchg
ja
pop
or
xchg
pop
push
push
cs
add
or
pop
or
dec
jae
test
jg
mov
push
mov
out
into
into
outsl
adc
jecxz
xchg
loopne
aaa
in
cmp
ss
cmp
sub
sub
pop
out
call
xchg
negl
mov
mov
adc
ret
jbe
mov
rcrl
sbb
rol
adc
loop
imulb
test
mov
enter
testb
xchg
sub
mov
jbe
jmp
das
adc
adc
mov
lahf
jbe
push
enter
dec
xor
pop
jle
pop
fwait
les
jl
fidivrs
mov
adc
cmp
pop
imul
std
insl
cmp
sbb
shr
jae
in
sbb
xchg
fstpt
and
dec
cltd
in
scas
jle
lods
subl
rorb
sbb
lods
cld
popa
cld
stos
and
ss
sahf
mov
fwait
adc
lods
aam
rclb
fwait
add
inc
cmp
lods
sbb
jle
outsb
int3
mov
mov
stos
dec
push
jb
les
add
add
addr16
mov
dec
in
jno
push
leave
pop
dec
push
mov
xor
sub
fwait
lret
pop
cmp
push
or
adc
dec
xor
push
scas
mov
in
adc
out
adc
or
push
clc
loop
ss
inc
or
sbb
push
daa
xchg
mov
mov
pushl
mov
sbb
and
in
aas
sub
pusha
sub
das
xor
outsb
jb
sub
mov
outsl
mov
mov
or
xchg
or
lcall
bound
inc
push
xor
pop
jg
daa
popf
inc
xchg
imul
rorb
xchg
ficompl
into
pop
xor
sub
aam
xchg
fsubl
and
les
lock
fists
dec
enter
mov
loopne
std
arpl
lcall
inc
fildl
fidivrs
sub
test
pop
add
xor
and
cmp
movsb
test
pop
push
daa
les
aad
sub
sbb
mov
out
sub
es
lret
push
stc
js
add
cmpb
inc
insl
mov
addr16
in
mov
jae
outsb
push
in
cld
push
jecxz
mov
add
sub
cs
sub
lods
cmpsl
adc
push
push
fnstenv
or
add
inc
shl
rcrl
pop
or
inc
mov
xchg
cmp
push
sbb
das
call
add
mov
lret
rcl
mov
and
mov
mov
lods
insl
xor
stos
movsl
pop
lock
xchg
scas
enter
stos
and
repz
in
mov
ficompl
inc
sbb
gs
fcoms
test
imul
repnz
jnp
xchg
ds
out
mov
test
outsl
dec
lods
fisttpl
mov
adc
fcmove
mov
int3
scas
lds
mov
lods
pusha
lea
jo
push
inc
bnd
out
mov
inc
or
or
imulb
mov
fildll
lods
mov
cmp
sbb
xor
mov
lods
pop
popf
xor
les
mov
sarl
sbb
std
int3
imul
push
pop
push
out
arpl
and
shll
or
and
push
orl
jno
mov
sub
or
imul
mov
dec
test
mov
lods
ret
and
mov
sarl
mov
add
adc
or
aam
insl
rcr
xorb
fsubrs
mov
loop
xlat
cmc
sub
insb
xor
vpsubusw
ret
inc
bound
sbb
mov
stos
ret
mov
adcl
jb
in
cmp
jne
inc
cwtl
ficompl
sub
and
inc
dec
outsl
fwait
cmp
jne
adc
sub
insl
gs
popf
into
out
stos
rcr
adc
ds
lcall
mov
scas
fstl
das
mov
mov
lods
xor
push
jmp
mov
cwtl
ret
or
decb
scas
jns
lods
sbb
pop
ret
adc
into
mov
cmovnp
nop
and
arpl
fwait
xor
fimull
addb
push
lods
jne
mov
aad
bound
in
jge
fcoml
xchg
or
cmp
adc
loop
addb
outsl
adc
insl
scas
or
mov
pop
je
jge
fildll
incl
mov
inc
leave
xchg
mov
mov
out
andl
add
mov
inc
pop
adc
orl
dec
jnp
test
add
inc
pop
xchg
inc
adc
fildl
lret
fistl
and
push
outsb
push
mov
pusha
scas
rorb
sub
arpl
dec
stc
imul
test
std
clc
in
inc
movsl
adc
cmp
lods
sub
dec
into
data16
pop
aam
or
cli
call
push
lock
out
cs
insl
ficomps
push
das
cvtps2pd
inc
or
xor
lods
mov
jg
xor
outsb
stos
test
xchg
aam
cwtl
inc
mov
adc
push
xchg
mov
lcall
gs
dec
xor
mov
mov
cmpsl
gs
movsl
ja
jp
fs
loop
sub
inc
aad
cs
nop
push
cli
adc
mov
and
stos
pop
ds
xor
pop
sbb
das
out
int3
leave
cmp
test
out
outsl
xor
xor
ffreep
push
cmp
lods
xor
aad
js
push
xchg
dec
js
jle
fwait
cwtl
sbb
inc
outsb
mov
xchg
sbb
cmp
je
jl
shr
xor
ds
aam
movsl
jg
add
mov
xchg
ja
push
jbe
and
inc
push
dec
hlt
or
push
test
ret
cwtl
and
ss
mov
push
cmpsl
adc
sbb
movsl
xchg
fdiv
sbbb
andl
cmp
adc
in
sahf
cmpsl
cmpsb
lret
and
fnstsw
cwtl
outsb
ss
fnstenv
in
and
out
pop
fimull
sbb
jb
pusha
dec
std
mov
filds
mov
or
xor
test
xor
out
addr16
mov
lahf
inc
cs
or
dec
aam
mov
pop
sbb
pop
mov
subb
adc
jnp
inc
jb
dec
lahf
cmp
enter
mov
cli
and
mov
fstps
int3
push
movsl
inc
lret
fbstp
pop
add
jmp
pop
cmp
pop
xchg
sbb
jmp
ret
aad
in
dec
add
adc
and
rcl
gs
ja
mov
inc
xchg
and
stos
pop
cmp
cmp
fsubp
ja
dec
mov
fcompl
fnsave
out
xchg
xchg
or
mov
ret
iret
fwait
jl
cltd
cmp
pop
sbb
outsb
mov
xchg
lret
movsb
dec
mov
or
mov
call
adc
jmp
hlt
add
dec
lock
push
mov
mov
mov
loop
test
push
or
sbb
cld
mov
push
cmc
jmp
sbb
icebp
sarl
xchg
add
mov
insb
mov
icebp
sbb
mov
cmpsl
or
setbe
cmpl
jl
inc
popa
mov
pop
sub
pop
ficompl
push
or
movsl
mov
outsb
mov
jg
pop
stc
pop
jecxz
scas
jns
ret
cld
bnd
adc
jo
sahf
fcompl
bound
jl
shrd
sbb
jmp
aaa
ret
outsl
aam
lahf
lret
data16
add
sub
repnz
test
and
push
push
mov
xchg
xchg
ss
dec
pop
jp
ret
or
xchg
nop
fucomp
pop
lods
sarl
lret
lods
dec
sti
push
lret
daa
cs
ljmp
std
imul
ja
mov
jnp
jb
loope
jo
filds
scas
popf
mov
mov
mov
incb
aaa
in
lret
cmpsb
xchg
aas
fistl
insl
jl
lret
mov
out
sbb
loopne
dec
outsl
out
jb
pop
or
in
pushf
xchg
sbb
repz
sarb
inc
dec
push
inc
push
mov
aas
lock
cmp
cmp
scas
mov
pop
push
and
addr16
sti
fs
mov
dec
inc
sub
cmp
addr16
out
int
sbb
idiv
ja
fst
jno
dec
mov
in
xchg
add
stc
push
ret
push
push
xchg
repz
push
sub
outsb
adc
jo
jle
loopne
xchg
mov
sub
jmp
mov
lcall
ss
or
pop
maskmovq
mull
push
sbb
sub
mov
push
adc
es
leave
xor
test
jge
fwait
pop
cmp
ret
sub
cmp
mov
les
mov
mov
and
mov
mull
aaa
xor
dec
aad
push
pop
addl
icebp
stos
xlat
orl
mov
popa
xor
mov
cmc
into
inc
nop
cmp
mov
into
xchg
ljmp
mov
pusha
mov
or
scas
push
lret
jmp
repz
hlt
sub
dec
das
leave
sub
jb
orb
mov
jge
jb
add
xchg
cmp
dec
not
movsb
xor
std
push
cmp
addr16
xor
fs
outsb
mov
cld
xchg
jp
movsb
cmc
xorb
outsl
lods
add
sbb
and
scas
pop
andl
flds
push
dec
lock
lea
jecxz
js
mov
lcall
cld
pop
repz
test
mov
pop
bound
flds
mov
out
jecxz
jecxz
xchg
adcl
or
mov
cwtl
iret
repz
adc
push
push
test
cltd
pop
leave
sub
adc
nop
bound
jno
adc
dec
out
inc
mov
jl
jnp
push
int
mov
sahf
cmpsb
enter
pop
mov
movsl
es
push
xchg
and
icebp
loop
adc
xchg
push
lret
mov
ret
fdivs
les
push
insb
sbb
and
or
ja
jl
adcl
jnp
cmp
pop
jle
bts
imul
out
iret
test
mov
xchg
push
jne
jne
daa
push
xchg
mov
cmp
pop
jbe
in
fidivrs
les
or
lret
lock
cltd
inc
pop
gs
jae
mov
movsb
mov
xor
in
inc
testl
mov
cmp
addr16
pop
adcb
lds
lcall
inc
xor
pop
shlb
jg
dec
push
cwtl
lods
adc
pop
and
xor
leave
jp
into
rcrb
mov
in
popa
ret
lret
xchg
add
push
or
jae
mov
add
mov
insb
fsubs
mov
dec
in
pop
jbe
fidivs
xor
push
mov
mov
cmp
pop
enter
mov
mulb
sti
sbb
in
loope
push
out
pop
xchg
pop
mov
xor
aas
std
outsl
repz
std
mov
inc
ret
inc
pop
fstp
pop
pushf
lea
and
and
sahf
ret
dec
cmc
test
notl
rcrb
sub
rorl
aaa
cli
lds
add
stc
dec
fnstenv
ja
les
mov
insl
fidivrl
mov
push
or
cmp
and
mulb
int3
xchg
pop
push
test
mov
adc
inc
subb
xchg
xchg
out
inc
cmp
pop
cmp
daa
cld
out
call
orb
sub
jge
add
mov
sbb
aad
add
pop
scas
test
fsubrs
hlt
push
jae
and
hlt
mov
ja
fisubrs
ret
sub
mov
add
rcl
aaa
nop
imul
movsb
pop
clc
lcall
or
xchg
int
xchg
mov
lahf
shr
push
pop
insl
outsb
xlat
cmp
jno
leave
push
mov
ds
inc
jae
sbbl
xor
in
mov
add
adc
pop
pusha
ret
sbb
mov
inc
jecxz
jbe
pusha
add
jb
or
mov
test
inc
test
mov
gs
movsb
xchg
and
cmc
dec
xchg
aam
adc
icebp
dec
mov
mov
fisubl
out
jmp
fdivs
orl
mov
leave
mov
pop
and
dec
cmp
fcomps
dec
lock
sbb
test
and
ds
dec
jns
add
jns
dec
fistpl
xor
call
cli
pop
inc
xchg
xor
bound
push
mov
or
cmp
sbb
inc
shl
popa
lea
jne
adc
mov
lahf
push
dec
test
daa
outsl
subb
push
scas
or
bound
rcrl
pusha
mov
int3
push
push
jns
cmc
popa
outsb
dec
xchg
cli
push
bound
sub
sub
lret
mov
adcl
stos
sarb
popa
jmp
jge
imul
loop
add
cwtl
add
popf
pop
push
paddd
ret
loope
sbb
push
sahf
inc
inc
push
imull
xchg
cmp
xchg
subb
cmp
gs
xchg
adc
icebp
in
mov
sarl
pop
fsubl
call
stos
push
push
fstpl
or
in
inc
jno
ror
popa
rorl
mov
dec
icebp
mov
iret
and
es
mov
cltd
stos
loopne
lds
outsb
push
roll
ja
cmp
lcall
adc
xchg
insl
sbb
das
and
mov
adc
mov
xor
cmpsb
and
stos
xor
enter
lods
rcll
std
lret
dec
lret
shlb
and
jnp
lock
mov
je
and
mov
xchg
mov
pop
jg
sub
xor
pop
shll
cmp
cwtl
sub
out
sbb
jmp
xor
cmpsl
xchg
push
pop
out
aaa
adc
inc
mov
adc
insl
pop
dec
add
xor
pop
fdiv
ret
pop
jmp
xchg
or
xchg
sbb
add
dec
jns
pop
stos
aas
frstor
sub
push
add
sahf
stos
rcrl
push
addr16
mov
dec
pop
and
loop
mov
cld
mov
cwtl
scas
leave
lods
test
loopne
jp
sbb
add
movsb
mov
or
xchg
out
inc
push
xchg
xor
mov
lea
sub
movsl
lods
inc
adc
leave
or
loope
xor
int3
rep
jg
popf
mov
pop
fmul
cmp
leave
push
sbb
or
mov
and
fldl2t
push
nop
outsl
stos
pop
mov
loopne
or
lcall
and
xchg
rorl
xorl
dec
mov
push
pop
jno
gs
andb
push
inc
rcll
xor
ret
xor
jmp
popa
xchg
inc
out
xor
jge
sbb
lods
mov
addb
movl
pop
mov
test
xchg
push
in
sub
pusha
jb
insl
data16
sbb
test
ss
int
or
jge
cmp
aad
out
sub
daa
popa
mov
in
pushf
push
push
xlat
push
xor
lahf
nop
pop
lods
add
daa
jge
jmp
pusha
sub
scas
jg
inc
xchg
sub
ljmp
sti
add
fisttpl
jge
jmp
ja
pop
dec
xor
out
lods
scas
xor
push
js
lods
inc
jmp
ljmp
pop
add
arpl
add
sub
push
adc
addr16
out
sbbl
add
mov
add
mov
and
mov
aas
dec
fwait
inc
scas
jae
imul
xchg
add
sbb
out
pusha
mov
mov
out
js
lods
clc
inc
xor
imul
lahf
mov
lds
popa
adc
xchg
mov
sbb
leave
sub
cmp
std
fstl
mov
pop
je
aas
js
das
add
fisttpll
shll
fbstp
cld
lret
sub
jno
mov
loopne
into
rolb
das
mov
push
inc
lahf
cmpsl
test
push
lods
xorl
stos
xor
mov
adc
mov
fisubrl
loopne
jo
jmp
insl
sub
movsb
push
sbb
xor
push
mov
mov
repnz
push
sti
xor
mov
pop
test
lret
xor
ljmp
gs
mov
pop
push
push
jne
aad
rorb
aaa
cltd
mov
sbb
int3
jecxz
push
sbb
loop
pop
fdivrs
mov
in
push
psraw
sub
xchg
inc
xorb
int
xchg
and
cmpsl
inc
pop
pop
xchg
xor
dec
mov
fldenv
jb
push
into
mov
adc
add
xchg
inc
xchg
adc
sti
mov
pop
and
popa
xlat
jno
mov
ja
insl
rol
hlt
mov
push
xor
dec
xchg
clc
daa
jb
sbb
or
lock
xchg
push
pop
pop
cld
add
jne
loope
xor
fbstp
arpl
mov
push
rol
out
jo
clc
fidivrl
xorl
xchg
xor
mov
pop
fwait
ds
fstpt
rcl
mov
les
push
and
js
push
add
add
mov
lods
xchg
mov
jns
jmp
in
xor
push
mov
leave
iret
push
push
jbe
scas
hlt
shrl
popf
movsb
pop
stc
pop
pop
jmp
stc
pusha
and
pop
test
movsb
xchg
inc
outsb
loopne
xchg
movsl
lea
lea
test
sbb
sub
dec
mov
nop
iret
mov
mov
stc
addr16
popf
jl
sub
sbb
je
cmp
stos
in
xchg
pop
cmpb
in
jne
jp
testb
jge
push
call
sahf
lock
push
cmp
jmp
lcall
xchg
pop
dec
pop
fists
xchg
push
add
cli
jmp
lods
fildl
pop
movsl
nop
pop
jl
mov
loop
adc
mov
mov
and
xchg
or
imulb
inc
push
in
dec
ret
xchg
xchg
add
lods
pop
mov
adc
jbe
inc
std
xchg
pop
stos
aaa
mov
nop
xchg
xchg
shl
push
lret
ja
mov
jmp
pusha
xlat
iret
and
xor
into
int3
aam
movsl
mov
mov
pop
pop
lods
or
std
jb
ret
dec
into
addr16
dec
sub
es
insb
mulb
adc
shrb
das
sbb
fisttpll
xchg
mov
aas
into
push
enter
lock
sbb
loopne
push
inc
push
shll
std
pop
nop
frstor
sbb
mov
pop
movsb
cmp
sub
dec
xor
leave
or
mov
ret
movsb
sahf
adc
das
xor
in
lret
cltd
insl
mov
and
inc
test
jo
in
inc
and
jae
adc
cs
hlt
mov
jmp
push
xorl
das
xchg
inc
jmp
add
pop
adc
mov
xor
jmp
cmc
add
ds
push
xor
loope
out
mov
frstor
aaa
pop
and
pop
iret
mov
lret
or
popf
or
pop
mov
popf
cmpb
or
fnstcw
sbb
pop
xchg
xchg
cmp
cmp
shlb
add
iret
dec
clc
lds
xorb
pop
and
outsl
sub
push
mov
adc
popa
xor
or
fstps
sbb
push
fwait
add
arpl
loopne
lcall
jge
into
mov
std
mov
ja
adc
add
ficomps
rcrl
lcall
jecxz
dec
sti
neg
nop
add
lahf
adc
outsb
mov
aam
mov
cmp
push
jle
lret
mov
fisttps
mov
daa
popf
lock
ret
repz
pop
mov
jae
cmp
and
inc
in
pop
pop
mov
adc
incb
popa
adc
pop
fmuls
test
pop
dec
sarb
lret
adc
adcb
sbb
push
add
jnp
xor
imul
dec
mov
sub
cmp
pop
mov
test
stc
xor
cs
daa
lret
and
mov
pop
mov
jecxz
insb
jecxz
cwtl
push
jge
es
in
sbb
iret
mov
in
adc
add
sti
adc
daa
shll
jg
pop
shrd
adc
mov
adc
mov
add
mov
xor
call
pop
mov
shl
mov
mov
sarl
into
cmpsl
cld
inc
cmp
add
jb
inc
iret
cld
mov
cmpsb
fistpl
xchg
cmp
pop
sbb
enter
pop
xor
shlb
loopne
xchg
pop
jno
aaa
jb
adc
mov
mov
shll
jo
or
jb
jne
mov
xor
fdivrp
push
add
test
fidivrs
test
aad
ljmp
inc
cs
fiadds
setl
nop
fidivrl
xor
ret
je
sub
adc
pop
enter
lods
cmp
imulb
inc
stc
jge
sub
repz
mov
jge
test
stos
mov
dec
dec
imul
add
xchg
nop
js
add
fdivr
cs
outsb
sti
xlat
das
popa
sahf
insl
loopne
xchg
mov
mov
mov
repnz
and
dec
popa
loop
dec
xchg
xchg
into
mov
repnz
xorl
or
sub
adc
imul
mov
mov
pop
mov
cmc
dec
dec
sti
das
mov
inc
mov
adc
std
cmp
add
jae
mov
mov
test
push
cwtl
icebp
ds
xchg
shll
cvtps2pi
sbb
sbb
sbb
inc
dec
inc
cwtl
jmp
add
outsb
add
outsb
iret
adc
dec
int
push
add
push
or
movsl
out
jbe
in
mov
mov
fisttps
cmp
jbe
call
pop
add
mov
or
shl
scas
mov
mov
add
std
inc
cmp
jecxz
incl
mov
mov
dec
insl
mov
jb
test
out
outsb
popf
ss
jge
mov
pop
scas
pop
jbe
inc
pop
mov
jbe
cld
inc
inc
pop
push
sub
add
xchg
xchg
sbb
cmpsb
out
inc
jne
mov
stos
mov
push
popa
insb
add
push
xor
lahf
loop
lods
leave
jge
scas
sahf
stc
dec
aas
inc
filds
int
loop
std
outsl
orl
hlt
sub
xchg
imul
arpl
hlt
cwtl
loopne
dec
push
pop
shrb
jg
in
fsubs
movsb
adc
jle
in
pusha
xchg
sub
es
xor
popf
adc
xor
adc
lods
or
jp
les
pop
or
lret
lret
add
mov
test
jbe
xor
adc
pop
adc
dec
ljmp
mov
or
or
xchg
es
cs
inc
add
dec
idivl
out
pop
bound
test
xor
ffree
inc
mov
imul
fildl
push
pop
movsl
es
ljmp
xchg
out
ret
xor
sahf
lret
push
repnz
loopne
imul
xchg
push
sahf
addr16
push
inc
fisttpl
test
inc
pop
lock
test
adc
mov
pushf
insl
xchg
call
dec
mov
mov
pop
adc
sbb
iret
fsubp
pop
loope
rclb
mov
sbb
push
adc
adc
das
cmp
xor
add
mov
outsl
test
cmp
mov
iret
xor
add
icebp
inc
jmp
or
and
scas
fst
pop
test
jb
out
ret
dec
sbb
xorl
or
push
sti
mov
pop
icebp
xor
nop
jmp
inc
push
push
push
cs
sub
mov
enter
sahf
orb
push
les
sub
mov
xchg
xchg
inc
adc
pop
gs
sahf
pop
dec
mov
cmp
pop
into
adc
mov
inc
ja
repz
jb
sbb
daa
scas
xchg
pop
fcompl
test
lds
mov
fs
lret
ror
push
in
mov
jns
sbb
cltd
addr16
pop
cmp
icebp
mov
xchg
xor
jp
pop
mov
movsb
mov
add
xchg
pushf
rcll
and
pop
or
scas
ret
mov
mov
in
add
in
and
out
sbb
sysenter
and
std
dec
push
mov
push
and
dec
outsb
sbbl
into
aas
mov
call
jne
cs
push
shlb
add
mov
jg
or
and
xchg
lods
or
lods
push
dec
xor
xchg
inc
pop
xchg
mov
xchg
pop
and
push
mov
out
xchg
jge
mov
fchs
out
movsl
sub
mov
call
xchg
andb
xchg
lock
jle
jl
in
loop
leave
dec
dec
daa
xor
push
cmp
push
loope
lret
xor
mov
aam
push
xlat
pushf
fs
lcall
sbb
mov
or
iret
inc
decl
xor
mull
out
mov
enter
xchg
fisttpl
lcall
aam
subb
das
stos
pop
je
std
dec
and
mov
loope
shl
mov
hlt
mov
imul
adc
cmp
out
cld
xlat
pop
xchg
xor
push
mov
sarl
andb
or
lods
xorb
cmpsb
scas
sub
mov
loopne
dec
xor
xor
cmc
scas
jb
push
push
loop
cld
cmp
scas
cmp
jecxz
mov
or
test
lea
mov
cld
push
or
scas
shl
push
clc
nop
ja
divb
and
inc
cmpsl
xor
scas
push
jg
into
inc
dec
shr
adc
push
fcoms
adc
jb
inc
mov
fdivrl
mov
and
rclb
sub
add
xchg
push
push
push
fisttpll
sahf
insb
jle
movsb
push
xchg
pop
mov
loop
sub
xchg
mov
add
cmpsb
lret
imul
lds
ds
dec
inc
nop
cmp
int3
sub
push
cmpb
adc
cmpsb
adc
jg
sbb
mov
outsb
add
mov
dec
inc
xlat
xchg
icebp
or
push
jge
cmpsb
daa
push
xor
xor
cmp
rorb
push
jle
in
mov
mov
dec
xchg
in
call
mov
int3
sbb
add
rcl
popf
fdivl
idivb
cmp
insb
ret
pop
call
adc
jae
jb
mov
mov
cli
dec
fsubp
xor
inc
mov
pop
fidivrs
testl
pop
loopne
xlat
scas
cmpsb
jg
dec
xor
sub
movsb
fs
mov
add
rcll
rorb
cmp
test
sti
push
jnp
mov
pop
clc
adc
lds
out
push
lret
lahf
negl
xchg
fistpl
fsubp
sbb
stos
push
cwtl
in
popf
xchg
mov
jnp
icebp
jmp
add
outsl
aas
sub
xchg
std
xor
xor
mov
push
sbb
mov
mov
je
mov
mov
sub
dec
jge
sub
inc
mov
push
add
xchg
jbe
nop
push
dec
dec
pop
jbe
xor
mov
push
or
mov
inc
out
das
out
dec
or
or
loope
cwtl
je
push
add
rclb
xchg
adc
jno
sub
test
negb
push
mov
stc
dec
ret
jle
out
cmc
cli
int
push
in
lock
jo
mov
dec
jge
sub
movsb
cwtl
push
jge
or
int3
enter
mov
mov
add
or
inc
pop
imul
sbb
pop
mov
sub
fiadds
adc
inc
mov
test
mov
inc
inc
imulb
mov
call
fsubr
movsb
negb
push
jge
dec
les
testb
mov
or
xchg
lea
imull
dec
je
hlt
repz
mov
pop
push
mov
and
mov
arpl
inc
pop
mov
pop
test
mov
push
out
xchg
std
lods
rcr
xchg
lret
or
xchg
es
push
push
jo
jae
pop
call
jg
mov
arpl
scas
scas
pop
movsl
in
xchg
lea
adc
or
js
dec
adc
or
mov
aaa
adc
scas
test
add
and
jg
inc
or
mov
inc
or
ret
shr
pusha
push
orl
les
fs
sub
popf
and
popa
jns
cmp
outsb
xchg
call
shl
dec
lcall
jl
scas
xchg
and
inc
xchg
test
and
add
ss
and
imul
jns
arpl
mov
xor
mov
pop
out
cmp
or
daa
xor
sahf
mov
cmp
xchg
mov
ret
push
insl
fists
pop
jg
adc
mov
xchg
adc
mov
shl
mov
popf
xchg
repz
insb
sbb
xchg
jl
inc
push
test
add
and
or
or
inc
adc
jmp
jle
lahf
mov
and
outsl
push
xchg
cli
sub
scas
add
cli
leave
aaa
dec
into
pop
push
hlt
inc
mov
dec
mov
cmp
imul
dec
stos
cmpsl
and
aam
cs
jg
or
sbb
mov
sbb
lret
push
stos
rcll
adcl
mov
pop
sbb
push
cli
pop
add
mov
cld
test
cmp
in
cmp
sbbl
lock
in
sbb
ds
mov
dec
adc
push
xor
cmp
jbe
adc
rolb
loope
dec
mov
dec
pop
or
xchg
test
lods
jp
add
rcrl
loopne
xchg
pop
push
ljmp
ret
icebp
cs
ss
add
mov
xor
mov
nop
icebp
and
iret
ds
push
push
ds
out
mov
pop
sbb
fildl
jmp
leave
mov
pop
repnz
jae
mov
pop
icebp
fstp
sub
fisttps
or
pop
std
inc
mov
call
inc
push
sub
or
mov
xchg
ret
scas
in
cld
push
fimull
cmp
dec
adc
and
icebp
jecxz
pop
xor
cmp
adc
inc
cs
jg
popf
and
xchg
dec
push
adcb
push
xchg
add
jp
add
int
cmp
lret
cmpsl
rcr
cmp
sbb
sbb
clc
outsb
add
xchg
mov
cmp
cmp
jns
sbb
xchg
cmp
popa
mov
push
lods
push
mov
rorl
inc
insb
mov
dec
test
xchg
sub
ret
cld
arpl
out
xor
stc
mov
or
sbb
pop
cmp
movsb
cmp
xor
aaa
loop
scas
incl
lret
and
lret
sarb
pop
js
xchg
mov
popa
clc
dec
repnz
inc
std
fnsave
jp
loope
ds
test
lods
fsubl
mov
ficompl
inc
int3
add
ret
cmpsl
ljmp
cmp
nop
and
testl
inc
jecxz
pushf
sub
mov
cmp
movsb
iret
push
adc
loopne
sub
nop
cs
call
mov
hlt
or
pop
push
negb
loop
cmp
arpl
fiaddl
mov
fnstenv
pop
aad
insl
sub
fcomps
and
or
ret
out
js
movsl
push
add
fbld
mov
sub
idivb
daa
xlat
jbe
cmp
testb
push
mov
dec
rcll
jbe
outsl
xor
ficompl
loop
or
cwtl
repz
mov
sbb
pop
aad
cmpl
adc
test
adc
fucomp
test
adc
cmp
push
sub
mov
andl
lods
loopne
stc
enter
inc
shr
add
pushf
icebp
cmp
ss
and
xor
adc
mov
mov
mov
push
sbb
mov
pop
addl
xor
cmp
into
cmp
ljmp
dec
cwtl
aas
xorb
push
lds
xchg
sub
mov
cmp
dec
ret
jnp
js
test
sti
mov
add
imul
fnstenv
dec
adc
add
mov
mov
lret
dec
add
mov
cmpsb
mov
imul
jo
test
push
add
ret
sbb
fisubs
mov
cmp
inc
mov
inc
mov
cs
pop
stos
jg
sub
out
inc
jmp
stos
into
pop
mov
adc
pop
mov
pushl
loopne
int
testl
cwtl
pushf
rclb
inc
xlat
push
jmp
mov
mov
xchg
push
and
test
int3
push
mov
in
fs
jae
lods
sarb
lret
push
rorl
push
cltd
sbb
push
mov
pandn
test
cli
lds
je
jns
sbb
out
push
pop
repnz
fimull
pop
idivb
jo
cmpsb
sahf
jnp
mov
xor
push
sbb
xlat
adc
call
out
pop
and
jnp
lods
jmp
push
aas
and
mov
jb
mov
addr16
shl
insb
xor
adc
fwait
outsb
mov
in
into
cld
or
cltd
jg
push
jae
mov
mov
or
mov
clc
cli
andl
cvtps2pd
jno
adc
jl
aam
and
mov
xchg
test
ret
aaa
clc
jne
out
inc
inc
cmp
xor
xor
test
dec
hlt
aad
in
pop
sbbl
ror
mov
es
lods
popaw
adc
xchg
mov
push
lcall
fstpt
jg
in
jmp
mov
or
sub
sbb
cmp
pop
das
and
jns
mov
mov
in
filds
or
outsb
out
adc
fcom
inc
and
xchg
lods
cmp
pop
int
or
add
cs
jb
test
or
xor
or
xchg
fstpl
aas
push
js
outsl
dec
sub
es
adc
popf
rolb
mull
and
leave
dec
test
jnp
cmp
jo
or
xchg
movsl
push
cmpsb
rolb
pushf
loop
insl
leave
pop
push
fwait
add
lcall
inc
sti
sbb
popf
xchg
jg
repz
fs
orb
mov
cmp
sti
push
test
cmp
scas
inc
sbb
cmc
xchg
punpcklbw
stos
and
push
shl
leave
or
inc
add
outsl
cltd
push
in
js
and
sti
mov
arpl
xor
pushf
pop
and
or
clc
call
sarb
inc
mov
mov
mov
jge
mov
sbb
movl
mov
insl
add
jp
sbb
push
xchg
test
cmpsb
lret
mov
mov
test
out
into
arpl
jno
cmp
in
aas
test
out
xor
lods
mov
rcll
or
lcall
cmp
pop
lds
rcrl
sbb
dec
or
out
mov
mov
xor
adc
xor
sub
enter
je
sub
fsubl
xor
sub
fcmovu
mov
stos
into
movsb
add
sarb
mov
aad
fdivrl
cmp
test
es
in
imul
mov
xchg
pop
insl
sbb
cltd
push
and
inc
gs
mov
xor
fdiv
mov
push
in
xor
clc
fcomps
jg
lahf
push
mov
pop
in
xchg
push
or
int3
mov
sbb
jp
mov
in
push
dec
iret
imul
jno
es
mov
dec
movsb
add
pop
ficoml
cs
int
adc
into
in
cmp
lods
adc
sbb
jle
xchg
sbb
lods
mov
rorl
shll
gs
rcr
stos
sbb
jno
push
fwait
nop
test
or
mov
pushf
fwait
sub
pop
mov
in
ljmp
movsl
imul
out
sub
in
cmc
cmpsl
stc
pop
addb
addl
icebp
ss
xor
or
in
or
and
fidivrs
push
mov
cmp
lods
sti
mov
mov
ror
add
andl
xchg
pop
pushf
subl
je
adc
pop
jno
mov
lret
adc
and
sbb
fwait
cli
shlb
outsl
outsl
stos
sbb
enter
movsb
jno
ss
mov
pop
popa
loopne
imul
pop
adc
jno
adc
icebp
andb
and
push
mov
fcmovne
test
hlt
out
or
data16
or
cld
dec
sub
xchg
mov
cmp
sub
push
mov
pop
pop
int
xchg
gs
mov
mov
pop
fdivrp
pop
test
sbb
xchg
lock
sbb
or
std
xchg
xlat
mov
divl
adcl
mov
cmp
es
push
sub
popa
mov
sub
xlat
ljmp
cmc
mov
mov
iret
test
add
cmpsb
outsb
jmp
inc
js
push
loop
js
cltd
arpl
mov
hlt
add
sbbb
popa
push
pop
and
dec
sarb
xchg
dec
mov
cld
es
push
or
push
add
xor
cmpb
push
jecxz
es
mov
mov
sti
mov
sub
mov
jle
das
and
or
adc
xor
xchg
ja
fmuls
cmp
repz
fcoms
push
mov
popf
in
rcll
xchg
movsb
push
mov
negl
addl
push
sbb
std
mov
xchg
sti
popf
jnp
pop
aaa
xchg
adc
shrb
arpl
dec
jg
pop
inc
mov
cmp
jae
insl
cmc
test
mov
jg
cmp
cltd
test
bound
cmp
icebp
pop
std
mov
inc
out
cmc
jbe
shrl
mov
shll
jge
ret
out
dec
clc
sub
sub
mov
cltd
pop
rcrb
arpl
dec
das
or
clc
out
pop
daa
out
dec
xchg
push
and
or
jle
and
mov
jmp
bound
cmc
stos
mov
out
cmp
adc
jle
xor
add
in
push
mov
rol
or
aam
ret
push
jle
add
pop
xchg
stos
push
mov
sbb
out
xor
sub
nop
les
sar
mov
push
mov
jl
out
push
mov
jge
pop
push
sbb
dec
add
loope
daa
in
das
pop
rcrb
mov
mov
xchg
sbb
jmp
sub
int3
jle
add
push
movsl
mov
call
xor
movq
fcoml
aas
rclb
divl
sbbl
sub
daa
lcall
fidivrl
add
leave
lods
jns
test
repnz
in
xor
sbbb
in
jae
push
xchg
mov
stc
shrb
mov
bound
inc
mov
inc
add
lods
sbb
inc
mov
xor
or
dec
xlat
inc
fxam
lds
inc
sbb
lods
sbb
out
in
addr16
lcall
push
inc
xor
dec
pop
and
rcll
mov
xor
lret
add
or
popf
bound
inc
mov
rcr
popa
clc
iret
and
fcom
add
adc
pushf
adc
aas
loopne
jb
outsb
xor
movsbl
stos
std
cltd
jae
clc
adcl
test
mov
mov
jns
test
adc
movsb
jg
out
subb
mov
sub
adcl
xlat
cmpsl
repnz
push
and
push
out
stc
mov
mov
cli
push
mov
hlt
enter
dec
int3
out
cmp
xchg
mov
adc
inc
popa
enter
sub
pop
push
shll
inc
lahf
arpl
pop
lahf
dec
xchg
jl
insb
inc
sbb
xor
inc
ss
cmp
addr16
clc
outsl
push
mov
rclb
mov
ret
add
mov
lret
arpl
fstpl
adc
sbbl
fs
addr16
push
imul
pop
xchg
jo
sub
fstpt
into
dec
dec
aam
cmpsb
jbe
jns
gs
xchg
mov
pop
mov
repnz
xchg
add
mov
icebp
fcomip
and
or
sbb
aas
out
mov
dec
or
test
sbb
mov
in
mov
insb
sbb
dec
loope
pop
pop
mov
adc
add
push
imul
sbb
test
sbb
add
cmp
adc
mov
in
roll
jae
ja
and
and
arpl
stos
mov
hlt
dec
mull
fmul
jnp,pn
jne
or
cmp
adc
int
adc
mov
ds
mov
ss
lcall
in
out
mov
stos
loopne
lcall
sub
mov
xchg
pusha
jbe
jg
ds
in
push
sbb
cltd
cmc
repnz
xchg
js
xor
and
repnz
out
or
lods
std
jae
and
sub
fidivl
xchg
callw
xor
clc
fwait
call
mov
cld
adc
sbb
dec
mov
jp
xchg
and
insb
or
pusha
pop
arpl
imull
inc
orl
inc
btc
iret
outsb
rorl
inc
fnstenv
push
mov
sbb
mov
je
sarl
gs
or
into
pop
sub
jno
dec
into
pop
xchg
dec
shrl
xlat
popf
out
in
sarb
cmp
mov
fnstcw
push
orb
sarb
scas
mov
push
sbb
arpl
and
lock
jb
pop
mov
xor
add
clc
ljmp
cmp
mov
adc
rorb
adc
stos
and
mov
pop
jl
inc
inc
mov
inc
fstps
inc
mov
ret
mov
mov
movsb
shr
xor
jb
lret
mov
xchg
es
testw
add
test
fucomip
repz
add
dec
and
imul
jbe
or
cs
xor
cmp
push
pop
push
mov
loopne
inc
jb
xchg
clc
mov
mov
inc
cltd
jle
jp
adc
cmp
or
xor
jbe
adc
jmp
je
ja
std
add
push
cld
adc
or
dec
cmp
in
mov
xorb
outsb
push
out
pop
mov
fwait
xor
fimull
dec
push
addr16
repz
mov
pop
or
pop
lods
add
push
sti
push
loopne
pop
out
daa
jne
add
cs
imul
pop
xchg
fdiv
cltd
sub
fdivs
arpl
mov
lock
mov
xor
loop
enter
sub
in
repz
aaa
sbb
sarl
add
mov
jg
xchg
int
sbb
push
popa
into
aaa
bound
mov
stos
cwtl
pop
sbb
mov
jne
or
xor
dec
out
xchg
gs
mov
adc
and
movsl
pusha
in
add
fdivl
sub
pop
push
push
test
sti
xchg
cmp
dec
aaa
pushf
mov
pop
int
xor
or
adc
aaa
sbb
data16
ljmp
jns
lret
test
xchg
scas
jg
jae
push
imulb
and
push
daa
mov
adc
stc
stos
imul
and
or
pop
jmp
pop
inc
and
test
push
int
mov
sbb
sahf
jne
or
cmp
stos
xchg
rorl
je
mov
mov
inc
in
and
mov
dec
insl
aad
dec
adc
pop
out
and
and
dec
xor
bound
imull
dec
inc
iret
mov
lock
inc
movsb
xchg
dec
adc
into
sbb
lret
daa
and
or
mov
clc
ss
bound
xor
xor
pop
test
dec
mov
lea
mov
cli
ret
jp
sbb
in
sahf
ds
jns
xchg
aaa
les
mov
or
popa
and
sti
and
adc
mov
xchg
cmp
mov
push
leave
scas
insb
mov
cmpsb
xor
insb
inc
pusha
repnz
pop
leave
jg
pop
adc
push
mov
fiadds
add
fldl
and
pop
das
lret
mov
lock
push
scas
lret
fists
lcall
int
add
movsl
push
dec
test
mov
outsb
xor
inc
jae
xor
pop
in
testb
sub
or
add
dec
dec
mov
pop
xchg
sbb
add
adc
xor
ljmp
out
xchg
xlat
mov
mov
lea
inc
and
xor
jge
push
mov
in
out
iret
imul
xchg
adc
or
mov
push
xchg
jmp
push
pop
pop
add
scas
lret
cltd
repz
mov
hlt
lds
sti
and
orl
xchg
es
pop
jle
adc
hlt
std
cmpsb
add
or
aas
xchg
popa
test
test
sbb
pop
fimuls
xchg
mov
in
jae
xor
add
jbe
enter
push
add
sub
jecxz
cld
stos
or
cmc
and
fistpll
js
pop
xlat
and
xor
xor
lea
lock
ljmp
into
sub
pop
mov
lahf
ret
ficompl
or
sbb
pop
xchg
aad
sbb
push
nop
testl
nop
lret
xchg
ljmp
mov
cld
and
test
repnz
js
mov
movsl
xchg
inc
ret
jmp
mov
pop
stos
lds
sti
push
icebp
mov
or
lods
pop
insb
iret
mov
sbb
insb
xchg
mov
pop
sub
fimull
add
xor
movsl
push
arpl
out
push
mov
jge
leave
push
lcall
inc
push
push
sub
xchg
jno
icebp
nop
xchg
dec
cmp
lret
pop
lods
and
fsubs
jecxz
dec
addr16
push
pop
cmpsb
jns
xor
cli
mov
jo
inc
dec
add
add
fildll
and
lods
lds
or
dec
and
int
inc
clc
std
jl
jmp
test
mov
pop
pop
leave
mov
out
xchg
das
push
xor
in
rcrb
cmp
dec
and
mov
in
gs
das
popf
xor
outsb
icebp
cmpsb
nop
enter
outsl
mov
cmc
shl
arpl
daa
std
daa
and
and
push
test
jecxz
lods
in
shl
scas
push
out
insl
fsubrp
pop
mov
jno
dec
mov
jbe
popf
stos
cmpsl
mov
xor
sbb
push
lock
out
sub
dec
or
push
rorl
and
mov
mov
fcompl
icebp
sbbb
loope
rcr
and
sub
dec
or
pop
movsb
aam
jg
push
in
mov
jns
inc
fcomip
cmc
sub
movsb
sbb
das
repz
mov
lods
mov
mov
xchg
sub
loop
ret
add
imul
xchg
insl
and
jo
add
in
lea
pop
cmc
out
enter
insl
mov
mov
xor
lret
xchg
insl
xor
outsl
ja
dec
loope
or
adc
lock
stc
popa
jg
pop
leave
cs
xchg
insl
in
lcall
cmpsl
outsb
out
push
sub
xchg
lea
jle
pop
sbb
pusha
pop
push
lret
das
inc
push
lahf
sarb
sbb
add
out
sbb
dec
lret
xchg
mov
ret
inc
ss
mov
adc
jge
bnd
test
std
mov
pop
xchg
es
lret
xchg
es
mov
mov
dec
jae
sbb
cs
sbb
das
mov
jle
scas
stc
and
lods
or
jae
rcrl
lcall
inc
xor
mov
pop
sub
arpl
addb
xor
or
pop
mov
dec
inc
push
gs
and
push
push
cmpsb
xchg
divl
lret
rorl
push
jns
mov
dec
sbb
inc
or
xchg
pop
test
xchg
mov
insl
cmp
xchg
fdivs
pop
sub
das
mov
ret
and
outsb
jb
mov
fwait
call
mov
out
ret
pcmpeqd
lods
cmpsb
mov
add
call
sahf
sub
xchg
sbbl
xchg
jp
push
movsb
ret
ret
in
xor
aaa
xor
aad
push
lods
mov
xchg
pop
cwtl
xlat
pop
shrl
adc
xlat
dec
fnclex
mov
test
xchg
popf
push
dec
mov
das
push
push
adcl
inc
divb
xor
push
imul
adc
test
mov
fiaddl
jnp
push
pop
push
test
lds
cmp
add
ret
stc
inc
rcrl
jae
inc
pop
movsb
cmc
jge
scas
fcom
pushf
int3
jae
jp
jp
pushf
lea
mov
jl
leave
sbb
ret
push
mov
ds
push
cld
add
sub
mov
push
mov
push
popa
aas
adc
dec
push
xchg
clc
xchg
and
push
data16
call
xchg
cmp
sub
cwtl
pop
inc
cmp
clc
pusha
lahf
or
sub
lock
mov
popf
lea
das
clc
shll
xchg
pop
std
cltd
cmp
inc
loope
js
scas
lods
and
xchg
add
cs
xor
mov
ljmp
cmp
fcmovu
outsb
out
lods
sub
rcl
pushf
mov
xchg
loopne
xchg
and
lea
cmp
xchg
dec
in
push
sbb
adc
sarl
fbld
mov
lcall
add
fistpl
test
mov
adc
xchg
mov
outsl
mov
inc
jae
and
nop
mov
mov
push
fwait
push
mov
clc
lods
pop
icebp
icebp
add
mov
cmp
jmp
int
jns
add
cmp
in
fs
enter
mov
iret
mov
lret
push
sahf
mov
aas
test
inc
jne
dec
aam
xor
mov
fwait
push
stos
mov
aam
mov
push
add
dec
ret
pusha
adc
push
xchg
jb
or
call
js
rcrl
cltd
stos
or
int3
daa
xchg
jno
insl
pushf
mov
faddl
mov
fwait
and
pop
pop
jne
inc
xchg
xor
pusha
mov
inc
stc
push
add
rolb
jne
push
out
inc
cmp
jl
psubw
xchg
adc
xchg
and
pop
dec
adc
movsb
xor
movsl
mov
jg
movsb
cmovae
insb
insl
je
jle
hlt
fdivp
rcrl
fs
push
lret
xchg
jne
int3
addr16
nop
sub
rol
xchg
mov
push
sbb
jb
cmp
test
sub
ret
call
pop
fdivr
lods
adc
ret
sub
jle
pop
push
add
roll
in
mov
push
or
dec
cmp
mull
adc
xchg
imul
adc
addr16
push
sub
test
popf
mov
lods
outsb
cmpsl
xchg
mov
add
iret
inc
std
ret
fadds
jo
pusha
and
fisubl
ror
inc
inc
fs
icebp
add
sti
outsl
xchg
stos
add
inc
in
adc
int
vcomisd
and
loop
dec
cwtl
sub
xor
sti
data16
repnz
lods
cmc
or
idivb
outsl
sbb
or
ljmp
test
adc
push
movsb
jne
addr16
add
loop
jg
xorb
insb
mov
pop
or
andb
inc
dec
pop
lret
cli
xchg
pop
mov
psrlw
iret
insb
inc
movw
mov
fisttpll
fisubrs
dec
out
push
adc
out
fnstenv
sub
xchg
dec
push
jl
push
pop
lahf
stos
or
roll
adc
movsl
es
mov
push
sarb
outsb
push
outsl
ror
sbb
cld
dec
out
xor
push
or
and
jecxz
xor
out
lods
jg
dec
lea
lods
fdivr
sbb
sbb
ret
and
mov
add
mov
cmp
sub
insb
sub
xchg
mov
das
mov
mov
jl
jl
aam
in
imul
enter
push
pop
popf
add
inc
int3
pushf
xchg
cmpb
inc
ds
adc
cmp
lcall
popa
mov
roll
lret
stos
jmp
ret
mov
loopne
adc
xchg
enter
nop
sahf
ficoml
and
push
and
inc
xchg
jp
loope
flds
out
fwait
jl
movsb
inc
sub
sub
in
adc
push
pop
subl
mov
jp
push
and
loope
ret
cmpsb
aam
and
push
divb
lods
lods
xchg
push
andl
xor
mov
jmp
pop
jmp
sub
inc
pop
pop
mov
dec
mov
mov
outsb
dec
out
leave
shl
rcrl
iret
lds
popa
sbb
jno
popf
fsubl
mov
inc
or
push
popf
clc
mov
inc
or
pop
jae
push
ljmpw
mov
push
mov
in
mov
in
lcall
movsl
shll
cmp
repnz
xor
notb
add
fiadds
xor
daa
imul
xchg
mov
pushf
imul
mov
stos
das
mov
inc
add
add
subb
jbe
dec
dec
stc
jne
push
popa
add
fidivrl
ret
sub
cmpsb
sub
jbe
mov
cmc
pop
pop
lea
inc
xchg
and
inc
add
add
and
mov
mov
test
shll
push
or
int
cmpsb
pop
scas
cli
outsb
add
cmc
adc
out
xor
push
push
cwtl
test
scas
lret
sbb
iret
test
mov
sub
dec
jnp
inc
outsb
data16
sub
ss
or
lahf
inc
cmp
daa
sarb
mov
imul
jg
sbb
pop
sarl
mov
popa
cmp
test
int
add
pop
loope
nop
xchg
inc
ss
push
cmp
cmpsb
sub
repz
loope
aaa
sbbl
mov
in
daa
xchg
cmp
fildl
xor
mov
test
int3
imul
and
dec
rcrb
and
fcmovnb
lret
outsl
mov
test
outsb
sub
cmp
xchg
flds
pop
fnsave
xor
in
dec
in
lods
sbb
jmp
mov
loop
sbb
push
subl
dec
test
pop
jne
mov
lods
mov
cmp
mov
mov
dec
es
call
fwait
mov
pop
sbb
les
jmp
or
jae
jg
mov
ljmp
or
jne
in
ljmp
jae
pshufw
xlat
xor
adc
push
push
jmp
push
mov
jmp
loop
pop
pop
mov
in
imull
std
fldenv
jge
loopne
pop
mov
mov
imul
mov
pop
push
adc
lock
insl
insl
sub
lds
pop
mov
mov
cmc
daa
xchg
push
xorb
sbb
in
jl
fcoml
loop
fldcw
fs
mov
cwtl
loopne
mov
or
ret
jmp
sub
cmp
stc
scas
test
cmp
mov
jge
xchg
and
adc
psubw
sbb
in
sahf
stos
xchg
push
adc
dec
lret
mov
mov
mov
xchg
inc
add
inc
pop
adc
out
push
jecxz
lahf
mov
adc
sub
push
mov
and
int3
sbb
and
shlb
scas
xor
pusha
int
mov
lods
call
push
andl
or
pop
in
data16
gs
fs
out
mov
jns
sbb
xor
cwtl
inc
pop
mov
dec
inc
jp
iret
inc
mov
push
sbb
add
lea
push
push
mov
fisubl
jbe
imull
xchg
sbb
cmpsl
aaa
lret
mov
rcr
jne
lret
inc
jae
mov
pop
jge
add
mov
ficoms
sub
mov
addr16
pop
mov
popa
rorl
push
jbe
arpl
inc
mov
push
bound
gs
sub
cmc
imull
or
mov
fsub
je
loope
inc
sbb
push
fisubl
sub
int3
mov
cmpsb
push
cmp
pop
xchg
jne
xor
mov
ret
pop
push
sti
testl
sbb
cltd
xlat
scas
into
dec
mov
outsl
pop
insl
cli
loop,pt
roll
sub
adc
cmpsb
cmp
cmp
lock
mov
dec
mov
mov
push
test
into
ss
out
cli
mov
fadd
aas
xor
loop
test
in
mov
mov
js
sbb
ss
cs
fwait
push
push
cmpsb
loopne
fisttpl
iret
mov
cmp
out
cmp
mov
leave
fisttpll
mov
das
test
xor
jle
mov
sbb
lret
pop
inc
out
rorb
repz
stos
and
inc
call
sub
rcl
test
sbb
js
lea
movsb
sbb
cs
inc
dec
lcall
jnp
stc
jbe
jge
dec
sbb
jp
imul
out
imul
stos
pop
sbb
jb
sbb
cwtl
inc
push
rcrl
mov
fsubrl
cltd
push
mov
adc
cmpsl
ror
out
hlt
push
movsb
mov
push
idivb
js
pushf
push
sbb
add
popa
out
cltd
fidivrs
loope
imulb
imul
mov
decb
inc
xor
inc
push
push
mov
mov
mov
jb
dec
xchg
mov
mov
out
idivl
scas
adc
xor
test
stos
cmp
jae
pop
adc
mov
lahf
jbe
stc
sbb
lock
jne
aad
daa
ja
cmp
sub
icebp
mov
cltd
mov
push
dec
inc
jne
fstps
sub
sbb
sbb
or
sub
test
das
or
add
lahf
popf
xchg
pop
lcall
and
push
out
bound
xor
jne
xchg
add
js
jecxz
push
pop
movsb
rcrb
cmc
add
inc
mov
dec
xchg
xor
fcmovnu
out
pop
dec
sbb
arpl
test
mull
shll
fcomip
push
xchg
or
rcrb
dec
and
xchg
mov
test
or
sahf
stc
pop
push
mov
mov
push
fsubr
push
mov
mov
test
outsl
lret
mov
inc
xchg
callw
mov
and
push
dec
adc
jae
je
mov
out
test
pop
push
dec
sbbl
mov
out
pop
push
sub
loop
mov
out
enter
je
sbb
lods
add
mov
bound
dec
dec
fadds
adcb
dec
sti
or
sub
mov
mov
lods
and
mov
movsb
lret
jae
cmp
sarb
insl
push
pop
jno
mov
mov
xlat
adc
loop
aad
stos
pop
xor
jecxz
shrb
xchg
cmpsb
cmpsl
adc
ja
dec
pop
sub
jge
dec
fisttps
jae
mov
ljmp
mov
in
in
cmp
data16
dec
jne
mov
add
adc
and
out
into
push
rcll
arpl
adc
inc
jb
cmp
aas
lods
fdivp
rolb
mov
add
push
cmpsb
popf
ret
dec
push
sub
jnp
hlt
divl
pop
repnz
imul
adc
adc
pop
inc
mov
sbb
daa
push
or
fistpll
ss
daa
jecxz
sti
std
jl
mov
shlb
mov
mov
inc
mov
or
gs
mov
mov
sbb
mov
fsubrs
mov
popf
jo
push
in
cmp
xor
outsb
jne
pop
inc
mov
lahf
loopne
mov
out
cltd
push
lds
jl
imulb
pop
in
aad
pop
and
sarb
inc
rclb
stc
mov
mov
jnp
cli
pop
stc
lea
push
mov
repz
xchg
inc
out
and
movsb
into
xor
sahf
cmc
jne
push
mov
mov
data16
jg
jnp
rcr
mov
pushf
sbb
inc
pop
xorb
jb
xchg
push
xor
in
jecxz
repz
dec
fildll
inc
pushf
std
es
imul
imull
cmp
push
out
push
cmp
lea
pusha
cmp
push
inc
pop
orb
gs
or
cmp
add
ljmp
mov
xchg
popf
rorb
pop
adc
xchg
jl
mov
xchg
shr
std
scas
pusha
push
enter
in
pop
lcall
les
and
xchg
movsl
cmpsb
pop
mov
popl
dec
xchg
mov
lock
hlt
push
mov
out
nop
rcl
fs
fwait
adc
out
icebp
jle
adc
mov
subb
ja
dec
and
xchg
out
push
jo
cmp
sub
push
lock
pop
in
rcr
lods
inc
cwtl
mov
vphaddbd
fndisi(8087
sbb
aas
jb
dec
hlt
enter
xchg
outsl
and
les
adc
fidivl
adc
cmp
push
and
xchg
sbb
inc
adcb
movsb
cld
xlat
sbb
add
inc
xchg
sarl
lahf
sub
sbb
lock
sbb
dec
cwtl
orl
or
jp
fildll
add
dec
sub
js
jle
push
mov
fmull
addr16
sahf
sbb
sub
test
xchg
ss
aaa
push
dec
lahf
repz
push
add
pop
ss
cmpsl
pop
cmp
inc
fisubl
popf
lods
adcl
data16
icebp
add
aad
xchg
and
jne
ret
or
xchg
inc
mov
loopne
in
add
shll
xor
jp
sub
lret
scas
insl
ljmp
xor
pop
mov
xchg
mov
aas
and
ret
push
scas
xchg
repz
mov
out
ret
and
pop
inc
jbe
enter
pop
cmp
in
jae
fnstsw
or
int3
loopne
xlat
add
mov
inc
jno
adc
jbe
js
sbb
mov
or
addr16
cmp
inc
divl
gs
push
or
cltd
nop
orl
aam
or
decb
mov
inc
or
xlat
stc
sub
fstps
inc
pop
nop
inc
dec
mov
je
cli
mov
mov
jmp
dec
sub
movsb
inc
out
movsl
mov
add
mov
stc
shrb
ljmp
mov
iret
xor
in
cmp
add
sub
int3
rcl
cmpsl
push
movsb
xorb
divb
fwait
push
cmp
dec
mov
in
push
movsl
addl
sti
in
mov
inc
push
xor
in
js
push
in
inc
aas
cmc
inc
pop
cmp
dec
in
adc
mov
cmpsb
cmpsl
ja
bound
inc
clc
loop
rorl
and
jbe
mov
mov
push
adc
rolb
xor
mov
jmp
add
shll
mov
ja
scas
sbb
push
repnz
les
adc
ss
jge
inc
mov
icebp
cltd
or
into
loope
xor
mov
mov
sub
lods
mov
push
inc
mov
out
mov
xchg
dec
inc
jno
add
add
mov
mov
inc
xchg
or
mov
out
in
int
mov
inc
inc
add
push
fsubrs
divl
cmc
out
aam
pushf
ds
wbinvd
push
jle
insb
sub
dec
in
mov
ret
ds
jle
xor
add
dec
in
loop
nop
sbb
iret
push
jl
xchg
sbb
arpl
jo
add
and
jl
xor
inc
xchg
jmp
das
lds
andb
iret
push
pop
pop
adc
stos
nop
lret
and
mov
pop
lods
cmp
jg
addb
mov
adc
fsubrl
rcr
mov
test
outsb
push
rorl
movsb
aaa
test
mov
mov
add
test
outsl
xor
sub
sti
cwtl
inc
sarl
dec
xchg
shl
scas
cmp
xchg
stos
stos
sahf
xchg
pop
pop
and
jecxz
data16
mov
lahf
out
lahf
arpl
adc
push
sbb
pop
iret
icebp
sub
jge
es
aaa
xorl
movsl
cli
jb
lock
repz
sbb
jne
pop
and
fstpt
sub
xor
inc
nop
inc
movsb
lods
xchg
mov
call
pushl
enterw
pop
cli
pop
push
sbb
into
mov
cmp
xchg
xor
loop
fdivrl
jg
jb
mov
xchg
test
outsb
fs
adc
jmp
test
mov
add
movsb
rcl
dec
repnz
push
test
into
adc
xchg
arpl
or
dec
jmp
xchg
clc
pop
pop
ljmp
negb
int3
inc
sub
and
std
pop
mov
cwtl
add
push
add
js
pop
movsl
enter
je
sbb
bound
out
cmp
lods
in
cmp
xor
cwtl
cmp
ja
movsl
dec
jno
les
gs
xchg
jmp
inc
xor
addr16
mov
repnz
andb
in
xor
adc
mov
and
js
mov
loopne
sub
xchg
push
pop
mov
mov
out
aad
pusha
shlb
call
add
lcall
and
in
mov
pop
dec
jae
js
inc
cmpsl
clc
clc
pop
and
call
push
in
push
push
pop
mov
cmp
sbb
pusha
cmp
stos
add
jl
int3
pushf
xlat
adc
pop
mov
xlat
xchg
add
les
arpl
add
jo
sahf
or
out
inc
sbb
jo
ds
aaa
in
and
arpl
jl
insb
and
bound
pop
jl
sub
cli
or
jno
xor
mov
ret
dec
stos
enter
xchg
notb
cmc
cli
push
mulb
mov
add
inc
jb
out
roll
mov
pop
and
outsb
lret
pop
shll
les
jne
movsl
adc
js
push
xlat
cmp
xchg
push
dec
fcomip
test
je
push
mov
or
pop
push
pop
movsb
out
adc
fwait
inc
and
sub
loopne
ret
jle
mov
call
add
xor
xor
cld
xor
xchg
xchg
icebp
dec
adc
rcl
jo
in
jns
sbb
filds
pop
rorb
mov
mov
insb
jbe
fimuls
imul
rep
and
test
outsb
in
int3
xchg
js
ret
mov
popa
mov
pop
pop
int3
or
shlb
inc
pop
fldl2e
cltd
test
shrb
addr16
xrelease
insl
mov
cs
mov
xor
inc
sub
jns
push
loop
nop
push
mov
xchg
add
and
sbb
mov
pop
mov
dec
insl
inc
sub
repnz
cmp
or
add
lods
jmp
lahf
sbb
cmp
enter
xchg
pop
xor
jl
mov
lods
arpl
pop
xor
dec
int3
loopew
jmp
cmp
scas
data16
sbbb
push
stc
sub
cmp
dec
jecxz
add
cmp
mov
dec
aaa
jmp
cli
inc
outsl
push
cmpsb
rorb
add
xor
into
xchg
lahf
das
jg
and
or
xor
sbb
cli
adc
lcall
test
or
xchg
cmc
jg
cli
ret
xchg
pusha
les
insb
stc
out
dec
dec
out
push
mov
push
sub
xchg
fstps
daa
movsl
add
aad
cld
fcmove
jne
shrl
out
stc
jmp
sub
jge
adc
scas
jbe
fnstenv
divl
jae
push
int3
pop
ljmp
push
push
ficoms
mov
pop
xorl
jl
aam
cltd
addb
insb
push
int3
pop
out
and
aad
ret
sti
ret
test
lds
jnp
call
xchg
sti
pop
xlat
das
int3
incb
aaa
divl
clc
fdivrl
or
imul
test
and
std
rcl
jmp
xlat
ds
pop
popa
jg
fldcw
roll
mov
stos
ss
insb
vstmxcsr
sub
shll
adc
jnp
fcoms
adc
jbe
pop
push
imul
jb
cmp
inc
mov
pop
popa
jnp
push
repnz
fcomps
push
arpl
xchg
into
inc
mov
or
leave
pusha
xchg
test
xchg
xor
add
loopne
dec
jle
sbb
fs
xchg
ja
push
test
int
and
mov
inc
mov
inc
pushf
test
mov
push
je
xor
lods
stos
adc
xor
cli
out
push
adc
iret
stos
cmp
cli
jns
inc
lcall
cli
aaa
sub
xchg
push
out
mov
shrl
outsl
push
iret
and
mov
nop
imul
das
stos
enter
xchg
pop
rclb
mov
popa
and
outsl
dec
mov
jle
je
dec
xchg
ljmp
lods
popf
jmp
mov
or
pcmpgtw
push
inc
pop
aaa
test
sbb
stos
xor
sbb
mull
mov
test
pop
pop
int3
movsl
cmc
jecxz
cld
dec
xchg
in
shrb
leave
test
sti
adc
out
sti
xor
add
jb
imul
cmp
lret
pop
lods
fldl
xchg
lea
leave
insl
sbb
int
cmp
push
in
mov
xchg
into
cmp
cli
cmp
xor
lds
mov
jecxz
xlat
scas
mov
cld
push
push
leave
rolb
dec
std
mov
es
adc
cmp
sbb
enter
loop
mov
push
in
add
std
jmp
jns
mov
stos
int
adc
push
orl
xor
mov
lret
rorb
out
pop
pop
pop
inc
cmpb
cmp
popa
lds
nop
lods
xchg
adc
out
sub
popa
xlat
nop
dec
jg
shlb
mov
push
cmp
or
cltd
testb
hlt
call
cmpsb
or
pop
jb
ror
sti
and
pop
fidivs
jnp
pop
adc
lods
sbb
nop
jge
lds
or
in
ret
fcoml
nop
mov
xor
fs
call
push
xchg
inc
rorb
sbb
popf
loop
push
mov
or
jno
jge
xorb
aas
mov
sub
daa
cmp
in
xchg
mov
cltd
mov
mov
aad
mov
xor
cmp
xor
cmp
and
pusha
je
arpl
in
sbb
ljmp
orl
fstl
pop
arpl
fs
cmp
loopne
fadds
out
fsubrp
add
rcrb
adc
shll
push
fisubs
mov
fbld
jmp
pop
inc
dec
ss
rorb
ds
pop
or
mov
inc
push
mov
and
test
aam
xchg
call
popa
jno
inc
and
test
jno
inc
hlt
int3
mov
mov
sbb
sbb
clc
loop
lea
jl
xchg
dec
jle
adc
inc
sarl
in
lea
in
shll
lahf
pop
xor
fcmovb
xchg
lret
xor
mov
xor
inc
dec
and
lcall
jb
test
cmp
pop
xor
push
mov
rol
or
enter
insb
jnp
pop
mov
sti
adc
mov
inc
fnop
xchg
loop
fcompl
mov
out
icebp
aaa
mov
dec
pusha
dec
cmc
lods
sub
scas
out
push
hlt
cwtl
loope
aaa
icebp
imul
push
fs
and
ljmp
and
jno
jne
sbb
mov
jecxz
mov
and
into
testb
stos
jnp
daa
insb
mov
and
mov
add
outsb
popf
dec
fmull
stc
jle
lret
pop
push
pop
push
and
sahf
out
mov
jns
idiv
push
inc
ficoms
pop
cmpsb
pushf
add
mov
fdivrs
hlt
sti
push
out
dec
sbb
or
fdivs
jp
adc
icebp
outsl
fstl
sbb
mov
inc
sti
sti
sbb
adc
sub
stos
mov
jge
xor
jb
sbb
lret
sti
ds
push
xchg
leave
lods
rorb
sti
les
popl
mov
sub
and
xchg
loop
mov
es
lret
fs
enter
adc
mov
and
jg
mov
mov
call
out
shll
add
or
ljmp
dec
rorl
pushf
sub
sbb
xchg
test
jmp
cmc
scas
imul
push
xchg
inc
test
gs
pop
jmp
push
push
pop
jl
or
popa
cmc
adc
pop
aas
mov
in
icebp
push
mov
mov
mov
stos
loopne
cmp
pusha
fldenv
or
pop
arpl
pop
dec
aad
sbb
stos
xor
jmp
out
loopne
rcr
in
lret
aam
jmp
dec
in
pusha
mov
jns
jne
or
pop
fistps
leave
jmp
icebp
fisubl
insb
in
dec
xlat
adc
push
fs
dec
je
and
inc
mov
in
adc
sub
popa
or
dec
push
and
inc
dec
mov
jo
mov
outsb
addr16
pop
mov
mov
ljmp
shr
das
insb
cli
jae
mov
pop
and
lret
sub
mov
popl
inc
cmovb
ds
adc
xchg
push
dec
rcl
aas
mov
lods
into
add
pop
cmp
adc
jo
adc
cli
pop
ss
imul
enter
lret
xor
clc
adc
daa
inc
sub
xorl
cld
mov
or
add
lds
loop
cwtl
mov
jle
jle
push
adc
inc
repnz
test
mov
xor
push
test
mov
dec
fwait
mov
sub
jg
or
andl
stc
xchg
inc
mov
sbb
xor
and
pop
daa
pop
imul
addr16
or
out
cmp
add
mov
outsl
pop
cmpsb
inc
lret
adc
adc
or
insl
int
fcomip
cmc
cmp
cmp
jge
lods
inc
inc
or
jmp
in
sbb
lock
dec
and
dec
jecxz
and
adc
in
xchg
xor
shld
mov
jmp
push
mov
pop
jbe
test
jmp
popf
mov
cli
lahf
cmpl
xor
dec
lea
adc
mov
mov
sub
out
cmp
ja
push
pop
mov
push
int
insb
enter
push
xlat
jg
ret
cmp
and
es
jns
and
cmp
sbb
cmpsb
add
outsb
sub
lock
popf
jmp
xchg
cmpsb
and
dec
or
shll
out
or
loopne
push
pop
icebp
mov
mov
js
cltd
cmpsb
sbb
dec
xchg
sub
xor
dec
fcomps
ja
xchg
sub
movsb
push
sbb
add
mov
adc
or
loope
pop
pop
orb
add
mov
sub
shr
adc
xchg
cld
movsl
aad
and
sbb
lods
mov
out
mov
sub
jbe
xchg
cmc
outsb
inc
cwtl
rcll
pop
cltd
jno
lret
mov
fcomps
jae
xor
inc
loop
add
imul
fmul
inc
jmp
push
iret
or
pusha
push
jmp
push
mov
movsb
sbb
bound
inc
icebp
scas
lahf
jne
xchg
mov
ret
xor
hlt
subb
clc
mov
sub
in
and
loopne
aaa
shrb
test
aas
jo
sahf
push
xor
jge
out
outsb
dec
stos
jmp
test
mov
std
cmc
dec
push
ss
sbb
sub
jmp
pop
shrb
pop
and
push
pop
fcmovnu
fdiv
dec
mov
in
xchg
test
int3
cmpsb
push
iret
lods
xchg
hlt
jge
lods
jae
pop
sub
stc
sub
loopne
mov
cmp
scas
jg
icebp
sarl
cmp
stos
xor
cmp
jp
lahf
enter
xor
pop
sub
pop
mov
jl
xchg
jae
push
xor
fdivrl
or
scas
xchg
jp
push
xor
push
test
movsb
in
dec
dec
pusha
leave
xchg
push
xor
ja
loopne
lret
pop
sbb
ds
jp
rolb
and
push
sub
test
int3
lock
dec
std
pop
sbb
pop
fwait
in
add
sarl
xlat
xor
cmp
push
adc
pusha
movsb
and
stos
lret
xchg
inc
jg
bound
lahf
jge
daa
sbb
or
xor
rclb
push
inc
in
xchg
cmp
js
lahf
sahf
inc
mov
ret
ja
shl
fmull
dec
adcb
bound
or
cltd
pop
push
loop
icebp
sbb
jb
mov
mov
mov
and
into
movsl
mov
adc
and
dec
rorl
out
dec
jl
imul
clc
test
xor
lds
add
and
mov
jg
mov
outsb
popa
jno
dec
int
xor
mov
push
popa
xchg
pusha
push
lcall
scas
jmp
aam
xchg
imul
test
or
mov
sti
lret
hlt
dec
inc
push
ret
sub
stos
mov
xlat
add
fs
mov
mov
xor
jnp
iret
mov
imulb
ds
int3
jne
mov
push
inc
and
test
aad
xor
add
arpl
fiadds
push
xchg
jnp
mov
or
mov
rorb
pop
shrd
jg
rcrl
adc
bound
mov
sub
pop
jg
fucom
sahf
out
or
fdivl
sub
mov
incl
inc
out
call
or
pusha
insl
sbb
add
lods
stc
movsl
xor
xor
test
push
lock
pushf
dec
mov
fnstenv
cmp
push
movsl
sub
test
dec
stos
sub
push
cmp
mov
orb
and
push
mov
and
stc
enter
inc
int3
pop
inc
sbb
test
dec
xor
or
in
cmp
pmuludq
test
xor
or
xchg
mov
sub
dec
sub
sbb
inc
and
les
push
inc
int
hlt
fldt
iret
fimuls
js
mov
cmp
push
repz
push
jne
add
xor
sysret
movzwl
xor
inc
mov
cltd
shlb
jo
jbe
dec
and
fstpt
add
mov
mov
inc
jge
mov
arpl
ret
into
sub
and
xor
pop
mov
in
clc
in
inc
sbb
mov
mov
add
jecxz
cmpsb
mov
sti
pop
stc
jo
daa
andb
xchg
test
dec
mov
sbb
sbb
cwtl
flds
add
mov
jb
in
adc
loopne
mov
clc
inc
fisubrs
mov
xchg
cltd
pushf
std
inc
mulb
fidivrs
xor
adc
jg
sbb
fsts
inc
lods
mov
inc
add
mov
pop
mov
fstps
enter
push
mov
fs
scas
aas
mov
pop
fscale
out
loop
push
es
inc
mov
insb
in
sbb
fcoml
stc
in
pop
add
fisttpl
pop
call
jle
push
mov
fidivl
lods
insb
xor
push
fcmovnu
xor
and
es
gs
xchg
adc
pop
ret
sbb
mov
subb
aad
das
imul
xor
fisttpll
mov
clc
mov
es
ja
mov
mov
push
sub
add
dec
inc
das
jmp
cmp
stos
mov
or
mov
xchg
outsl
pop
jnp
xorb
jl
jno
pop
xorb
imul
negb
cmpsb
stos
adc
in
scas
inc
pop
sub
in
or
lret
adc
sub
std
hlt
mov
add
xchg
lods
dec
sub
mov
inc
add
es
adc
pop
inc
loop
cmp
jg
xchg
mov
loopne
rcr
xchg
mov
or
test
dec
pop
jno
add
xor
mov
popa
sbb
xchg
mov
mov
int
mov
daa
mov
out
pop
adc
stos
mov
jl
xor
call
cmp
mov
daa
dec
push
popa
mov
jge
mov
xor
push
fwait
mov
xchg
push
mov
scas
jbe
sbb
xchg
mov
or
push
shrl
fwait
xor
fstpt
sbbl
inc
pushf
mov
inc
rclb
pop
cwtl
lds
adc
mov
ljmp
or
mov
ds
out
insl
adc
sbb
ret
aam
leave
xor
fcmovu
xor
ret
outsl
xchg
adc
jl
inc
lea
jmp
adc
push
xchg
jns
out
test
inc
fimuls
sub
or
clc
pushf
in
or
sub
movsl
cmpsb
xchg
adc
mov
push
scas
push
xchg
mov
mov
add
int3
loop
mov
inc
cmpsl
mov
sbb
mov
xor
cmpsb
xor
xchg
sub
std
xor
push
mov
and
xor
in
lods
dec
cmpsb
and
pop
fiadds
sti
add
push
inc
lret
iret
xchg
pop
sbbl
sub
mov
hlt
fsub
dec
fldt
cmpsb
xor
pusha
in
mov
dec
lds
nop
push
xchg
leave
popf
rol
scas
jo
sahf
fcompl
mov
xor
xchg
mov
clc
imul
mov
in
xor
lret
sar
pop
pop
mov
mov
fidivrl
imul
jnp
inc
or
mov
jmp
push
mov
mov
icebp
adc
in
sbb
xchg
xchg
add
and
je
jmp
pusha
mov
leave
or
mov
dec
push
push
push
add
mov
test
cld
and
gs
pop
mov
lods
cld
lcall
shl
pop
jb
jl
sbb
sbb
or
push
xchg
jp
cmp
fsubs
inc
ds
xor
xchg
scas
fs
mov
inc
in
or
fcompl
clc
outsl
lea
lods
sarl
sub
enter
sbb
lock
inc
or
jge
inc
mov
pop
loop
or
cltd
inc
sub
clc
push
jae
mov
mov
mov
insl
cs
idivb
adc
into
inc
or
test
es
stos
sub
and
mov
push
pop
sti
je
test
je
je
test
sarb
mov
push
xchg
jae
jb
dec
mov
cmpsl
push
loope
xchg
cli
aas
fstps
and
mov
lret
cmp
and
push
fdivrp
add
shll
dec
xor
cmpsb
int
rcl
dec
jecxz
cmc
in
aam
insl
gs
lret
xchg
lock
ret
sahf
add
xlat
xor
dec
movsb
and
add
mov
int
mov
loop
xor
or
push
aad
jne
je
jg
stc
cmc
les
push
in
adc
inc
add
push
inc
adc
je
mov
mov
xor
rorl
push
pop
jle
jno
adc
push
xchg
pushl
orl
aaa
dec
int3
popa
add
inc
cmpb
pop
imul
adc
mov
jle
loop
cmp
or
out
jecxz
sahf
xchg
ja
mov
add
or
push
jae
repnz
inc
sti
push
and
pop
in
pop
arpl
js
cmpsl
fdivs
or
cli
or
negb
adcl
jg
iret
stos
shl
cmp
jns
ret
mov
ja
add
inc
lds
jno
jne
loope
cs
xchg
xlat
sbbl
movsl
jb
cmp
sbb
loopne
sbb
fninit
xor
jmp
mov
ljmp
das
cmp
xchg
bound
std
insb
pop
fadds
nopl
cmpsb
loopne
xor
decb
test
andb
add
jg
push
je
add
pop
adc
push
or
mov
ffree
repnz
xor
mulb
jne
adc
enter
aaa
jns
insl
imull
cmp
cmp
ds
iret
or
jmp
fnstsw
fnsave
sub
ss
mov
push
add
fwait
cwtl
jbe
push
inc
cmp
and
sti
jmp
and
loope
push
ret
int
mov
push
ja
in
call
ss
cmp
js
into
xchg
sbb
pop
or
push
fdiv
call
popa
adc
scas
cmp
push
mov
ret
cmpsl
mov
inc
add
sti
xchg
xchg
adc
jge
mov
jp
pop
cmp
xchg
fcomip
stos
or
stc
lea
cltd
sbb
adc
cld
lds
imul
push
push
jge
pop
push
or
leave
outsl
or
sarl
test
pop
push
xchg
or
stos
cmp
fs
aad
mov
fistpl
loope
loopne
inc
clc
or
cmp
sbb
aaa
shll
lahf
inc
pop
stos
js
lods
mov
cld
loopne
not
mov
dec
outsl
push
lret
pop
pop
ret
jg
dec
movl
push
ljmp
ljmp
hlt
stos
xor
data16
mov
in
mov
loop
outsl
adc
ja
aad
xor
xchg
imul
push
push
scas
xchg
inc
stos
or
outsl
cmp
in
adc
into
jmp
mov
test
fildl
xor
pop
cmpsb
cmp
hlt
in
shrl
rcrl
xlat
xor
push
adc
je
sub
inc
xchg
pop
jp
jae
mov
xchg
add
das
push
dec
in
mov
sub
stos
cmpsl
add
add
push
fldenv
lds
sbb
cltd
inc
and
mov
push
cmpsb
imul
cltd
divl
ret
sub
loope
hlt
ret
and
popa
sub
fistpll
inc
push
sbb
test
adc
xor
mov
ljmp
lock
and
push
dec
jo
adc
mov
dec
inc
cmovne
mov
jle
inc
jns
xchg
and
cmp
bound
inc
mov
jg,pt
loopne
inc
or
pop
loopne
outsb
push
fldl
add
inc
in
repnz
adc
push
push
mov
sub
rcl
test
pusha
addl
lock
pop
je
arpl
testb
cs
popa
mov
jb
daa
nop
clc
xor
rolb
cld
pop
fcompl
pop
add
sbb
jle
stos
dec
bound
shlb
mov
xlat
faddl
testl
sbb
es
lret
mov
repz
jb
add
jne
inc
mov
push
adc
xor
sub
les
adc
cli
push
and
cs
adc
flds
or
pusha
xchg
pop
add
cmpsl
lahf
iret
rclb
dec
mov
mov
fwait
pop
and
insb
jmp
pop
pop
icebp
aam
sbb
fisttpll
pop
aas
call
aas
pop
pop
movsb
or
stc
sbb
pop
rcl
push
jecxz
imul
daa
push
gs
sub
mov
in
cmp
mov
jp
ss
shll
push
sbb
or
lock
movsl
adc
outsl
jb
pop
mov
insl
fdivp
jge
mov
jo
loop
mov
repz
aad
dec
mov
jb
xchg
imulb
adc
sbb
push
inc
mov
cmp
roll
lret
dec
dec
sub
push
leave
sub
lods
xor
push
and
mov
loope
pop
aas
or
sahf
dec
enter
cmp
cmp
lea
sbb
inc
negb
stc
inc
sub
push
mov
cltd
cli
jno
sbb
lods
xchg
arpl
orb
adc
mov
mov
popa
adcb
pushf
dec
ljmp
fbld
push
jae
aas
adc
nop
xchg
arpl
xor
and
inc
xchg
mov
jns
and
repz
sbb
lret
call
push
cmp
adcb
cld
es
bsr
je
mov
jae
jmp
push
add
sahf
jle
sub
jmp
ja
jge
in
ret
inc
roll
xor
sub
ljmp
or
xchg
lahf
push
mov
in
inc
push
push
pop
or
lret
icebp
out
push
loopne
or
ljmp
pop
cmp
push
lret
popf
pusha
push
sub
ds
out
imul
outsl
inc
adc
mov
cmpsl
push
xchg
movsl
lret
inc
add
cmp
jne
mov
sub
xchg
inc
pextrw
cmp
cld
xchg
cmp
rclb
leave
xchg
push
pop
sahf
adc
repnz
mov
arpl
mov
ss
inc
imul
aam
jno
mov
pop
cmp
mov
imul
loopne
adc
sbb
inc
or
mov
mov
insl
imul
xchg
xchg
cltd
fnstcw
das
sahf
mov
xchg
mov
add
scas
push
lcall
jmp
nop
or
imul
jbe
out
add
nop
xchg
push
jle
jns
outsl
loop
fucomi
andb
mov
lods
pop
cmp
xor
inc
xor
sbb
mov
xor
inc
xchg
popf
xchg
sub
in
cld
lods
mov
xchg
mov
orb
jno
adc
push
push
dec
mov
jo
cmp
inc
cmp
and
inc
test
push
mov
das
dec
pop
jge,pn
fnstcw
pop
mov
add
mov
andl
popf
mov
xchg
js
jmp
ret
lea
rolb
test
push
sbb
xchg
mov
fldenv
leave
xchg
test
add
xchg
sahf
stos
adc
ds
lods
mov
into
shrb
and
fdiv
lock
xchg
leave
pop
scas
fucompp
mov
stc
pop
adc
sub
cmc
cmp
sub
outsb
gs
and
jbe
pop
js
lds
xor
test
dec
sbb
push
icebp
adc
and
cmpsl
xor
test
mov
cwtl
sarb
in
mov
int
jecxz
xchg
or
test
cmp
aas
fs
pop
mov
js
sbb
dec
in
das
cmp
cmp
push
lea
xor
bnd
mov
sbb
ficomps
cmp
cltd
jp
or
mov
mov
or
xlat
or
inc
lahf
icebp
addr16
push
shll
push
cld
jno
cwtl
jns
ja
fs
xor
xchg
cwtl
mov
sbb
loope
mov
out
xchg
in
mov
rcr
into
and
mov
test
xorl
and
mov
lcall
sbb
aaa
fdivrs
xchg
adc
hlt
cmp
and
mov
inc
push
mov
ja
pop
mov
jge,pt
push
prefetch
ja
sub
enter
xor
jno
mov
push
jo
rclb
jbe
movb
adc
out
add
rolb
clc
mov
dec
lcall
test
stos
lock
jl
xchg
adc
and
fisttpll
sbb
mov
cltd
xlat
xchg
mov
inc
sub
ja
sub
mov
xchg
jae
pop
push
mov
loopne
mov
adc
sbb
mov
push
clc
mul
sbb
mov
mov
cmpsb
sbb
test
repz
push
xor
push
mov
loop
stos
rcll
xor
outsl
or
jnp
lret
iret
and
add
cmp
lods
rorl
pop
xor
mov
pop
mov
jmp
aam
xchg
cmpsl
jle
lea
add
stc
pop
adc
inc
nop
imul
cmp
sbb
imul
out
mov
in
pop
jo
fs
mov
js
mov
pop
xor
fs
fistpll
push
enter
jmp
adc
or
pop
push
cmp
xchg
push
imul
sub
xchg
ss
ret
sub
loope
orb
jp
and
cli
lahf
movsl
push
dec
adc
lret
push
jle
push
fdivp
dec
mov
cmp
lds
mov
ds
jne
mov
cmp
sbb
sahf
inc
outsl
ja
xlat
stos
repnz
sbb
fstpt
push
fmul
mov
lahf
in
jmp
cmp
pop
lds
test
cs
test
pop
mov
xor
mov
outsl
rclb
mov
mov
stc
or
jbe
inc
jle
xchg
lds
cli
push
loope
inc
or
dec
inc
fs
jae
push
or
push
lods
lock
push
mov
nop
mov
add
dec
dec
inc
frstor
ss
push
mov
xor
mov
js
out
je
shl
daa
add
mov
aaa
mov
push
cmp
cmp
mov
and
movsb
xrelease
push
mov
inc
cmp
arpl
pop
int3
push
fbld
nop
mov
icebp
sbb
jnp
push
rclb
mov
cmpsl
push
ret
fisttps
rcrl
xchg
outsb
add
cmpsl
and
arpl
xlat
dec
lea
je
arpl
add
xchg
lret
mov
inc
clc
cmp
sub
aad
daa
outsl
out
inc
movsb
js
push
inc
cmp
mov
test
pop
icebp
pusha
test
ficoml
les
mov
xchg
dec
cmp
sub
iret
and
das
lahf
xor
popf
and
xorb
inc
rol
cli
adcb
fwait
pushw
xor
cmp
leave
mov
fsubr
sub
fsts
loopne
mov
and
cmp
sbb
mov
fs
mov
xlat
adc
out
pop
decl
pusha
mov
stos
nopl
add
xchg
mov
cs
cli
ret
push
imul
icebp
out
inc
imull
test
pushf
push
lods
push
or
std
movsl
jmp
mov
and
cmc
sub
sarb
ret
mov
cld
pop
test
stos
sahf
pop
mov
js
inc
jne
aad
cmp
out
aam
cwtl
test
out
mov
cwtl
leave
int
test
das
repz
mov
std
mov
pusha
fildl
ds
jecxz
and
lret
push
jecxz
fwait
dec
jl
mov
inc
insl
mov
xchg
jl
pusha
sub
jmp
xchg
jmp
je
pop
mulb
clc
xchg
pop
fmull
inc
pminub
rolb
cmc
xor
adc
in
out
jbe
lret
jle
xor
shll
or
movsl
fisubs
sti
arpl
rolb
mov
cmp
ss
out
enter
inc
cmpsb
sub
jns
repnz
inc
lcall
stos
shlb
cli
sbb
movsl
or
push
push
sub
sahf
cmp
pop
inc
jl
inc
dec
lret
sbb
jno
pop
in
fsubs
pop
lret
aaa
xor
shrb
out
mov
dec
pop
mov
pop
scas
mov
test
je
and
mov
clc
xor
inc
arpl
cs
adc
inc
sub
out
xchg
or
and
push
and
out
add
lahf
adcb
div
mov
xchg
dec
lahf
cmc
bound
rcl
jbe
shrb
fwait
ljmp
xor
adc
inc
out
cs
lahf
ja
test
cli
mov
xchg
test
push
sub
mov
xchg
movsl
mov
cli
mov
fcomps
dec
test
insb
call
push
jns
mov
adc
into
rclb
aad
shlb
js
jb
sub
cmp
test
cmp
jmp
xor
mov
pop
or
and
in
fildl
xchg
jno
sbb
outsl
stc
add
dec
repz
or
leave
rol
shl
adcl
enter
lods
inc
sti
into
out
push
xor
shl
jo
stos
iret
inc
add
inc
ja
das
call
inc
sub
ljmp
inc
fstpl
pop
push
ret
cmp
sub
stos
push
rcr
jmp
add
leave
mov
dec
adc
ljmp
insb
add
js
jmp
mov
mov
xchg
sbb
mov
cld
xchg
sub
mov
dec
dec
cmc
cmpsb
rep
lahf
xchg
push
clc
jle
xchg
mov
xlat
jecxz
jle
push
out
icebp
mov
cmp
add
sti
jp
mov
inc
jge
imulb
inc
pop
pop
mov
repnz
mov
insl
popa
into
mov
lods
mov
subl
js
mov
adc
mov
in
jns
push
cmp
pop
fdivrs
lret
cld
les
xchg
jbe
mov
cmp
clc
sub
bnd
jbe
dec
push
das
lods
push
fwait
mov
mov
push
scas
in
mov
xchg
mov
fldenv
inc
call
adc
test
inc
insb
cmpsl
xor
inc
in
popf
push
leave
sbb
sbb
addr16
xchg
sbb
test
mov
rol
pop
outsb
in
and
mov
adc
adc
fildl
xchg
xchg
pop
or
add
addr16
jmp
adc
aam
stos
jnp
cmpsb
mov
inc
dec
testb
xlat
loopne
push
xchg
xchg
xor
cwtl
sub
loopne
jae
push
das
lods
rcl
jns
stc
iret
rolb
pushf
incb
push
lcall
adc
xchg
imul
daa
mov
stos
jns
mov
movsl
push
nop
ja
das
imul
mov
push
notb
aam
clc
or
leave
push
xor
or
scas
and
cmpsb
sbb
jge
stos
jnp
or
adc
fcompl
pusha
pop
pushf
cmpsl
scas
inc
popf
pop
inc
repz
das
cmp
push
aas
in
jecxz
cmp
sbb
and
dec
loop
xchg
sub
mov
adc
cmp
pop
pop
insb
fisubrl
fisttpll
push
sbb
jbe
cltd
lds
outsb
jo
mov
lock
scas
cs
sub
dec
push
jno
cmc
lods
aad
in
mov
adc
fstl
leave
pop
pop
ret
xchg
sbbb
daa
pusha
pop
push
ss
mov
jo
das
or
insl
mov
jecxz
or
shlb
mov
ret
mov
jge
ja
scas
jae
mov
pop
insl
js
jmp
mov
push
mov
push
je
cwtl
push
add
cmpsl
in
and
sub
sub
jo
push
mov
xchg
sahf
mov
mov
inc
outsl
pop
mov
inc
call
add
and
sbbl
lcall
or
or
lds
xchg
out
ds
repnz
cmp
xlat
inc
fmull
mov
pop
movsl
shll
push
inc
fs
es
ljmp
xor
repz
push
lahf
ret
sub
ror
hlt
loopne
push
mov
pop
xchg
cmp
out
sbb
or
pop
out
push
adc
icebp
push
sub
gs
scas
xor
sbb
fisttps
mov
inc
mov
mov
cmp
je
inc
mov
jge
push
and
jge
lea
push
outsl
jae
xor
insb
jecxz
test
jmp
mov
xor
repnz
es
enter
loope
int
pop
mov
dec
scas
stc
lahf
jmp
jo
into
mov
loop
lods
xchg
push
adc
lods
or
dec
je
mov
int
mov
cmp
push
cmp
dec
xchg
pop
cltd
movaps
and
mov
loop
cmpsl
cmp
fs
imul
fwait
cmp
pop
rcr
sub
pop
sbb
mov
jbe
cmpsl
jbe
fs
adc
push
lock
icebp
test
fidivrs
rcll
out
inc
add
cmp
fildl
mov
lea
mul
xchg
inc
aad
test
lea
popf
push
stc
out
sub
cltd
je
xchg
inc
inc
dec
sbb
out
sbbl
cld
sbb
fdiv
mov
aam
push
cltd
sub
imul
lock
xor
in
mov
or
jl
orb
adcb
in
pop
sbb
in
sbb
mov
int
fiadds
push
aam
add
push
repz
call
pop
xchg
in
fildll
adc
arpl
adc
inc
nop
mov
inc
data16
pusha
inc
shll
jns
fs
mov
push
inc
mov
push
mov
in
push
sbb
push
jg
mov
xchg
loopne
lock
cs
leave
jae
mov
or
add
push
repnz
outsl
sbb
pop
sub
cmp
cmpsl
adc
imul
xchg
inc
outsb
out
inc
std
decb
data16
jmp
outsb
cmp
add
adc
fisubrl
loop
add
push
in
mov
scas
jne
fnstsw
fists
dec
out
mov
sbb
jb
inc
lods
mov
or
subb
imul
adc
mov
cmpsl
into
loop
lods
dec
sbb
adc
in
sub
pop
mov
loope
idivl
pop
movsl
in
inc
pop
xchg
dec
mov
pop
lea
mov
and
aam
stc
lock
push
test
mov
cmp
cltd
mov
in
inc
inc
cmp
test
jmp
jnp
jmp
insl
in
and
dec
into
cmp
and
shrl
or
stos
mov
inc
lret
mov
rorb
cmp
aas
xchg
push
mov
popf
sub
inc
and
loop
or
subl
pop
sbb
mov
loope
loop
cltd
and
pop
mov
std
xor
ljmp
fwait
les
mov
pop
pusha
lcall
mov
and
jl
sbb
pop
jo
nop
test
xchg
pop
push
das
loope
icebp
adc
add
and
inc
or
in
add
stos
or
sbb
and
mov
pop
pop
repnz
subl
fdivr
fmul
pop
push
and
xchg
pop
xchg
test
pop
cli
mov
and
mov
xchg
sbb
inc
fistps
mov
xchg
stos
pop
lods
fmuls
sbb
xchg
pop
sub
inc
nop
lds
xchg
ret
sub
fbstp
mov
fbstp
les
inc
jl
jmp
cmp
pop
sub
dec
xchg
aam
test
mov
mov
pop
and
mov
in
push
add
dec
cmc
ret
sub
js
xor
cmp
dec
mov
push
ficompl
pop
xlat
clc
decl
and
lret
loopne
or
scas
lods
lret
insl
das
daa
mov
jbe
lods
lcall
shrl
pop
dec
cwtl
and
aam
inc
dec
popa
clc
inc
sbb
cmp
sub
mov
mov
sbb
mov
pusha
jo
sbb
mov
sub
dec
das
je
mov
jno
push
cmp
cmp
adc
mov
mov
mov
xchg
and
mov
xchg
mov
cwtl
add
sbb
aaa
out
cmpsb
jp
mov
stos
jge
sti
xor
jo
dec
std
push
rorb
xchg
adc
jmp
test
stos
dec
insb
add
subl
pop
lock
xchg
leave
cltd
inc
xlat
aas
lcall
or
inc
cld
test
mov
sbb
adc
into
push
pop
enter
stos
cmp
mov
pushf
or
andb
ja
inc
insb
inc
xchg
mov
fs
adc
mov
pop
int
sub
sbb
mov
dec
xor
fcmovbe
aad
ljmp
xchg
xchg
dec
jecxz
xchg
ds
sub
lcall
pop
or
mov
rclb
out
dec
pushf
mov
lcall
imul
inc
test
mov
aam
sbb
mov
push
jae
xchg
xor
jbe
stc
add
jbe
xchg
ljmp
or
add
das
pop
insb
jl
push
inc
pusha
leave
jle
pop
in
fs
dec
mov
jg
inc
dec
jb
hlt
xor
fs
or
stos
sbb
xchg
and
es
out
gs
int3
inc
fnstenv
xchg
cs
mov
imul
mov
xor
dec
xchg
push
sbb
mov
hlt
xchg
push
leave
sti
inc
pop
clc
leave
sbb
lds
or
int
jbe
subb
pop
sbb
xchg
inc
rorb
int
mov
bound
sbbl
jae
mov
mov
mov
dec
add
sbb
push
push
and
dec
mov
das
jl
push
test
xor
cmp
dec
or
jmp
mov
dec
cmp
jnp
push
adc
mov
jl
mov
mov
out
push
or
lcall
aam
je
cmc
fdiv
sbb
pop
xchg
mov
sub
add
add
dec
mov
out
popa
mov
pop
js
lea
fcmovb
mov
push
pop
inc
pushf
push
and
int
jnp
test
cs
sbb
push
sbb
jb
push
enter
int3
jbe
cvtpi2ps
sub
pop
jmp
outsl
stc
dec
xor
repnz
js
stos
ret
iret
addr16
and
imul
cmp
xchg
dec
sub
jne
iret
dec
mov
rcr
dec
jo
sbb
mov
in
inc
mov
inc
insl
in
filds
cmpxchg8b
int3
icebp
js
into
shrl
and
cmp
mov
divb
loopne
imul
cld
sub
stos
jmp
adc
xchg
inc
movsb
mov
adc
int3
sub
adcl
adc
inc
and
adcb
dec
xchg
out
aam
flds
cmp
std
or
jmp
ss
pop
pop
pop
push
jmp
pop
decb
add
addr16
sub
into
xor
ret
outsl
pop
fchs
inc
mov
ljmp
inc
mov
int3
mov
jmp
and
push
pop
mov
ss
lods
ja
add
sub
sub
sarb
std
in
pcmpeqw
and
incl
cli
mov
dec
xor
nop
add
push
push
mov
or
and
xlat
xchg
stos
mov
ss
dec
and
dec
jmp
pop
adcl
pushl
rcrl
mov
sbb
lret
pop
sbb
movsl
xchg
cmp
push
insl
or
je
jle
aam
and
test
xchg
nop
mov
mov
jecxz
dec
data16
dec
xlat
out
scas
or
cli
ljmp
mov
add
cs
and
xchg
addr16
adc
and
in
adc
insl
or
jnp
mov
out
and
xchg
sbb
dec
out
loop
mov
out
lods
ret
mov
addr16
iret
jo
arpl
mov
std
in
ja
mov
push
fisubrs
shll
or
lcall
stos
or
mov
fwait
push
cmp
mov
jo
lahf
jmp
sbb
lock
insl
imul
orb
adc
mull
and
sahf
jp
lock
jo
xor
push
jb
mov
cmp
jae
lods
dec
xchg
enter
mov
sub
xchg
movsl
mov
add
fs
or
inc
inc
jo
lcall
mov
sub
incl
fistpl
push
dec
mov
gs
and
pop
popf
inc
inc
sub
xor
dec
loope
aaa
orl
aas
jno
push
mov
shll
pusha
adc
out
push
push
sub
mov
outsl
pop
or
pushf
inc
pop
mov
push
nop
pushf
pop
push
inc
mov
xchg
add
into
movsl
sbb
outsb
push
add
int3
into
shl
scas
pop
fcoml
por
jb
push
daa
mov
stc
pop
lret
adc
test
or
in
testb
xor
push
dec
call
mov
xchg
pushf
push
jns
xchg
jb,pn
ds
xor
dec
jle
test
and
inc
push
shll
xchg
add
pop
inc
imul
sbbl
sbb
push
iret
cltd
push
ret
lcall
popf
repz
shrb
mov
shl
push
mov
mov
fnstsw
loop
addr16
adc
dec
push
jge
dec
insl
lods
repnz
pushf
dec
mov
push
sbb
shrb
add
out
and
jb
xchg
in
sahf
sbb
mov
xlat
jecxz
mov
mov
out
and
es
test
or
sahf
aam
sbb
cmp
mov
xchg
divl
iret
pop
scas
lcall
notb
cwtl
adc
adc
daa
jl
add
adc
hlt
dec
push
cs
iret
enter
push
pop
xchg
ljmp
mulb
pop
in
je
add
movsb
xlat
push
out
fldl
pushf
adc
mov
cs
aaa
jbe
sub
push
cmp
add
add
outsl
jl
cwtl
jge
les
int
ja
mov
iret
mov
or
ja
mov
xchg
jb
sub
icebp
jne
dec
leave
adcl
jne
pop
jecxz
lock
pushf
ja
or
in
cmp
and
mov
out
inc
lods
xor
adc
fwait
xchg
gs
push
mov
ja
imul
inc
xorb
stc
in
jno
xlat
cmp
insb
cmp
sbb
inc
sbb
pop
or
and
jne
xor
enter
sarb
repz
addr16
cmp
jo
and
mov
cmp
into
jbe
pop
in
xchg
pop
test
aas
xchg
pop
or
and
push
jae
outsb
aam
cmp
orl
mov
outsl
fwait
inc
imul
pop
push
cmp
mov
call
push
es
stos
icebp
and
popa
cmp
psubsb
lahf
repz
push
sti
stos
das
cltd
mov
pop
add
jns
or
mov
add
and
js
roll
shll
sub
or
or
push
idivb
lods
mov
mov
xor
push
iret
mov
dec
bound
push
lock
fnsave
popf
jle
sub
fcoms
dec
lods
adc
mov
out
sbb
movsl
sbb
xor
push
into
and
dec
int
mov
lea
jmp
push
sub
sti
pop
rorb
insb
mov
inc
aad
pop
mov
subl
seto
lea
xor
xchg
fnsave
outsb
sahf
adc
cmpsl
push
jno
fadd
cltd
outsl
bound
xchg
jae
std
xor
inc
mov
sbb
pop
cli
adc
or
xor
ret
lcall
out
inc
or
mov
enter
movsl
sub
jge
sar
pusha
cli
cmp
mov
testb
push
ja
int3
out
bound
mov
daa
stos
cmp
nop
aas
inc
aaa
jl,pn
cwtl
pop
sahf
add
or
sub
cmp
rcrl
jge
test
sbb
adc
pop
inc
iret
test
mov
jp
mov
icebp
jnp
dec
dec
mov
repnz
or
xchg
aaa
xchg
jbe
sbb
pop
inc
jg
add
xchg
int3
pusha
ljmp
and
icebp
jl
jb
pop
int
add
push
and
mov
xor
mov
fwait
arpl
lock
bswap
pushf
pushf
push
inc
jno
pop
xor
or
mov
lret
enter
dec
aam
sub
xor
ret
test
pop
enter
jecxz
mov
popa
test
xor
data16
jb
ja
mov
ret
cmc
pop
xchg
mov
aas
fadds
cmc
insb
adc
fnstenv
jae
fistpll
int
imul
shl
and
in
mov
pop
pop
jae
mov
shlb
fdivp
or
mov
fwait
adc
add
vpmuludq
or
xchg
xor
jne
push
adc
pop
jge
mov
jns
bound
sbb
xor
xlat
jl
lds
adc
cmp
or
mov
cmc
es
xchg
call
mov
inc
jo
mov
and
push
jne
bound
and
js
xorb
or
mov
mov
xor
jecxz
push
popa
fldl
mov
loopne
lea
js
push
pop
nop
dec
push
xchg
outsl
pop
mov
mov
jl
xor
test
xlat
dec
in
sub
pop
xchg
stos
mov
lret
rclb
popa
outsb
test
add
stos
xchg
popf
add
jae
and
lock
pusha
push
add
push
mov
aad
mov
ret
fistps
mov
push
aad
outsb
out
repnz
pop
jmp
mov
cmp
out
mov
roll
outsl
fimuls
adc
lods
or
iret
xchg
lods
pop
pop
inc
gs
scas
movsl
sti
mov
pusha
or
mov
sub
xor
inc
push
loopne
mov
push
shr
hlt
mov
mov
outsl
xchg
loop
mov
jge
je
das
cltd
fcomps
stc
mov
bound
mov
data16
cmpsl
lods
or
scas
cltd
sbb
sbb
mov
mov
js
lods
mov
xchg
lcall
dec
stos
mov
inc
xor
bound
mov
scas
fxch
and
iret
jno
pop
lret
insl
int3
iret
push
mov
add
lret
mov
xchg
adc
mov
or
clc
xor
jle
inc
pushf
jae
repz
mov
pop
clc
repnz
es
mov
xor
cltd
mov
stos
mov
lahf
sub
mov
or
dec
add
or
jge
decb
jl
mov
fcoms
push
in
xor
sub
or
jecxz
sbb
dec
out
dec
adc
test
je
or
xchg
lret
lea
mov
pop
xchg
pop
lods
pop
xchg
jbe
and
jnp
mov
outsb
loopne
cmpb
cmc
sahf
jo
pop
lahf
adc
adc
mov
lea
sub
mov
jnp
sub
sub
cs
fucompp
push
rcl
cmp
movsl
dec
mov
repz
add
aad
ss
fnstsw
aas
sbb
loope
mov
sub
hlt
adc
out
movsl
mov
jb
outsb
inc
mov
push
mov
les
clc
out
push
xchg
clc
aaa
cmp
pop
bound
lcall
and
mov
or
fcmovnu
or
fcmovb
lret
inc
fistl
iret
adc
jne,pt
adc
push
ffree
cmpl
push
or
push
lea
inc
sub
mov
mov
nop
cmp
leave
mov
shrl
aaa
mov
fdivs
adc
or
mov
dec
popf
pop
sbb
adc
adc
inc
scas
mov
push
adc
lret
pop
test
jno
ljmp
lahf
push
je
mov
pop
sar
or
xchg
xchg
rcll
xchg
add
pop
aam
bound
shrb
inc
ja
mov
enter
subl
mov
icebp
aad
cs
cmp
fidivs
xor
cwtl
fidivl
inc
fs
xlat
push
ss
stc
mov
add
mov
cltd
fsubl
add
jb
aad
jno
aad
jle
mov
jl
movsl
aas
sbb
pop
sbb
js
pop
mov
into
imul
outsl
loop
jne
and
je
push
cmp
jne
dec
and
sbb
fsubs
xchg
mov
pop
add
and
xorl
mov
aad
sarl
aad
out
shlb
xlat
mov
je
pop
mov
and
sti
and
xlat
cmp
mov
push
dec
adc
dec
movsb
sbb
cmpsb
xchg
in
aam
pop
test
outsl
mov
test
lock
mov
inc
xchg
jb
ret
lods
xchg
cmp
pop
sub
ljmp
push
xor
adc
shl
outsb
push
sub
repnz
xlat
movsl
and
fsubrs
xchg
inc
pop
test
xlat
out
mov
aad
stos
xchg
clc
inc
push
scas
cmpsl
push
movsl
push
pop
loopw
sarl
xchg
cmp
push
jle
movsl
je
adc
nop
add
mov
cltd
adc
es
push
xchg
xchg
inc
pusha
adc
push
cs
add
repz
in
mov
mov
lock
das
imul
or
inc
inc
hlt
push
mov
inc
stc
imul
inc
pop
daa
sbb
dec
lock
aam
mov
mov
adc
push
jo
ror
mov
leave
fnstcw
or
out
movsl
cmpsb
lahf
xchg
outsl
in
mov
jl
mov
das
outsl
dec
push
cld
mov
nop
ljmp
pop
movsl
xor
imul
xchg
jmp
insl
data16
dec
mov
and
sbb
sti
iret
adc
mov
mov
loopne
adc
mov
ret
add
mov
pusha
xchg
cmp
and
or
push
push
push
pushl
inc
lret
mov
cltd
loope
int3
push
jmp
js
inc
popf
jno
jae
or
fs
sub
enter
mov
loop
mov
push
xlat
stc
aaa
jecxz
pop
lret
mov
or
repnz
arpl
cmp
std
push
scas
inc
test
push
in
ds
pop
and
sub
scas
insl
jbe
sub
push
inc
sbb
sub
cmpsb
inc
mov
jae
cmp
out
inc
mov
jbe
sbb
imul
push
fnstenv
mov
cmpsl
push
pop
xchg
sub
mov
push
add
pusha
dec
shr
std
lods
data16
es
xchg
push
mov
loope
dec
lcall
inc
push
sbb
sbb
xchg
pop
push
gs
push
inc
test
pusha
lahf
jo
ljmp
jl
insb
dec
and
and
movsb
arpl
mov
fcoml
outsl
push
in
mov
inc
pavgw
das
cmp
fwait
stos
leave
sbb
jecxz
adc
or
movsl
insl
int
insb
sub
inc
mov
mov
sub
or
je
addr16
add
push
jge
stos
and
dec
xor
xor
or
movsl
cld
mov
stos
and
lret
jb
fisttpl
jae
cwtl
cmpl
ds
and
sti
jbe
jge
leave
jmp
pop
inc
sub
dec
lcall
inc
mov
negl
dec
les
aas
imull
xchg
insl
sbb
xor
add
mov
mov
aad
inc
adc
mov
loop
xchg
xchg
negb
cmp
mov
sub
in
and
xchg
sbb
jg
inc
mov
sbb
das
dec
es
push
sbb
je
out
addl
cmp
jae
stos
jae
aam
xchg
sub
out
cmp
pop
jae
mov
xor
push
or
mov
faddl
sbb
dec
xchg
gs
xchg
mov
fists
clc
pop
test
mov
xor
ret
adc
jle
insb
push
clc
mov
fwait
push
fildll
pop
mov
xchg
or
jns
cltd
adc
mov
push
fidivrl
in
cli
sub
or
dec
stos
mov
or
je
add
xor
aaa
out
sub
outsb
inc
subl
xchg
sub
sbb
fiaddl
sbb
shl
inc
jo
lcall
aam
std
jnp
std
dec
fsubrl
xchg
mov
dec
jae
mov
sub
aad
movsb
rcrl
pop
outsl
sti
mov
test
xor
cmpsl
int
out
mov
shrl
xchg
punpckhbw
lods
repz
leave
jge
andb
int3
jns
call
mov
je
gs
cmp
jge
dec
mov
mov
into
xor
das
dec
sbb
mov
push
jmp
bound
pusha
xor
cmp
cmp
pop
test
daa
out
mov
mov
or
mov
nop
fwait
cld
gs
jne
bound
dec
jo
mov
jecxz
js
xchg
mov
out
dec
xor
testb
es
dec
dec
ss
scas
sub
and
ficomps
int
push
je
jmp
imul
in
in
mov
iret
js
nop
adc
mov
cmc
pop
or
ds
push
mov
add
inc
jo
pop
pop
jmp
lahf
cmp
dec
adc
rolb
pop
outsb
push
dec
cmp
pop
jb
int
idivl
mov
mov
fmuls
cmp
lea
adc
leave
dec
daa
cmp
inc
insb
sbb
loop
mov
ja
sbb
insb
iret
jmp
lahf
pop
sub
in
fs
shlb
pop
mov
or
push
dec
push
idivb
icebp
adc
and
and
lret
or
mov
xchg
jl
mov
sarb
xchg
mov
imul
jl
data16
test
mov
fcoms
cmp
repnz
sahf
incw
movsb
add
jae
pop
stos
xchg
and
add
sar
xlat
test
jmp
lea
stc
push
lcall
int3
lea
aam
add
shrb
enter
popf
imul
popa
movsb
int3
add
cwtl
sbb
cltd
addb
xchg
arpl
jno
loop
std
sub
push
pop
jecxz
add
notb
shl
aas
pop
dec
add
sbb
pop
mov
and
insl
ret
mov
mov
pop
lock
sub
jge
iret
jb
ret
sub
pop
lcall
ret
fcomps
lods
std
subb
stos
in
lahf
lock
dec
xchg
scas
pop
repnz
push
cmpsl
jo
cld
or
ljmp
fstpl
repnz
mov
cmp
sub
inc
cwtl
pusha
mov
bound
and
add
or
mov
in
ds
mov
sub
lods
inc
jb
vpaddw
cs
insb
cli
inc
mov
or
test
hlt
or
ret
fistpl
loope
out
pcmpeqw
and
cmp
lea
bound
adc
sbb
arpl
sub
pop
call
sub
push
fisttps
les
loope
pushf
data16
add
pop
popa
add
jg
lret
mov
das
xchg
fwait
jb
mov
inc
xchg
cld
push
jp
data16
movsl
mov
rclb
imull
mov
jne
lret
add
push
pop
cmp
out
mov
rol
dec
movsb
lret
mov
pop
jmp
xchg
jno
mov
das
inc
xor
adc
inc
test
jns
fs
test
sbb
scas
cmc
push
add
ds
scas
mov
and
sarb
mov
in
lcall
jl
push
jmp
scas
divl
data16
insl
pop
and
adc
rcr
lds
clc
loop
sbb
add
je
into
mov
xor
sub
adc
xor
rcrb
inc
xchg
addr16
nop
insl
scas
hlt
dec
es
out
mov
and
cmpxchg
scas
mov
lods
scas
in
and
adc
test
mov
pusha
pop
xchg
dec
and
mov
push
mov
mov
ret
inc
push
test
bound
pop
push
cs
insl
cli
dec
jmpw
adc
repnz
pop
mov
pop
outsl
push
icebp
sbb
data16
dec
push
xchg
push
mov
jp
loope
daa
add
or
jne
push
sub
fmuls
ror
fs
lods
jae
lahf
inc
stos
fsubrp
aas
icebp
jge
rcrb
in
hlt
mov
jmp
inc
jno
xchg
jb
or
scas
test
or
mov
adc
inc
mov
mov
push
mov
lods
mov
aam
imul
pop
out
clc
push
or
dec
test
pop
int3
xchg
pop
fstpt
loopne
mov
cmp
add
xchg
sahf
sub
insl
test
add
push
mov
add
inc
push
inc
cmp
pushf
adc
fstpt
lahf
pop
jecxz
add
out
jp
add
dec
in
cmc
loop
dec
xchg
push
inc
std
xchg
fwait
cmpsb
cmpsb
mov
push
insl
ret
mov
xchg
adc
push
in
or
int
lds
push
fnstsw
addr16
out
mov
gs
cmp
dec
movsl
fucom
cli
arpl
stos
jg
dec
out
dec
dec
pop
xlat
cld
ds
push
clc
cmp
fnstenv
and
and
and
xor
pop
xor
mov
mov
cmp
mov
mov
es
cmp
ficompl
dec
xchg
outsl
fwait
lock
js
lods
mov
test
mov
or
sahf
test
call
mov
int
daa
dec
sti
pop
in
mov
scas
cmpb
xchg
xchg
data16
xor
js
cmpsb
dec
movsl
mov
mov
xchg
push
andb
add
fcompl
and
hlt
bound
stos
mov
loop
adc
push
push
negl
jge
insb
test
ss
sahf
negb
adc
push
push
dec
das
cli
adc
jno
pop
frstor
and
ret
lahf
add
imul
mov
inc
jns
mov
in
and
pushf
int3
xchg
xchg
mov
pusha
cmp
lds
mov
pushf
cmpsb
pusha
jp
movl
mov
lcall
leave
ret
jbe
inc
rolb
rcll
cs
mov
dec
cmp
push
test
push
adc
mov
xor
scas
xchg
sti
aaa
or
out
hlt
fld
les
push
notb
dec
in
pop
scas
enter
outsl
mov
fnstcw
in
jg
jo
sub
sub
andl
pop
add
into
or
mov
push
orl
jp
test
push
mov
popa
ja
jge
cltd
pop
xchg
fwait
xor
into
aam
std
sub
push
icebp
cmp
pop
int3
sub
mov
lea
or
dec
cs
mov
or
arpl
mov
mov
mov
sub
mov
or
cmp
xchg
inc
and
dec
mov
jno
xor
sub
inc
adc
repnz
sbb
xchg
xchg
out
or
lahf
push
add
mov
jne
addr16
mov
orb
cld
jg
fimuls
cmp
sbb
sub
xchg
bound
mov
sub
subb
sbb
add
or
dec
pop
adc
dec
jmp
repnz
in
or
cmp
fwait
imul
mov
jle
pop
iret
pop
fdivl
in
dec
sbb
repnz
inc
sbb
mov
sahf
mov
pop
push
rcll
mov
and
popf
insl
enter
icebp
gs
sbb
xchg
dec
dec
cmp
inc
dec
xor
sub
add
lds
sbb
test
mov
cmovb
sub
push
inc
jnp
leave
push
mov
or
inc
mov
sbb
mov
out
test
fbld
inc
xor
enter
daa
aad
cmp
mov
cmpsl
ffreep
and
es
in
jecxz
sbb
xchg
jle
mov
out
add
or
pushf
jle
dec
inc
mov
pop
push
cmpsl
pop
orb
mov
xor
das
pop
xor
inc
xor
adc
sub
imul
ljmp
andb
add
pop
sar
inc
push
adc
lods
leave
and
jmp
rcrl
fwait
sub
sub
in
daa
or
rol
push
xchg
jno
in
push
sub
adc
lods
dec
dec
xor
xchg
mov
inc
lret
dec
ffreep
in
gs
dec
addr16
mov
insl
adc
inc
xchg
dec
aaa
outsl
insl
push
adc
dec
dec
arpl
or
xor
inc
stos
dec
in
movsl
arpl
xchg
cld
xchg
movsb
fisubl
mov
pop
es
bound
adc
aaa
jno
das
push
es
cmp
and
or
and
jno
loopne
rorl
inc
mov
out
adc
jae
std
loope
mov
mov
cld
ret
push
sub
dec
arpl
push
pusha
mov
pop
insl
in
add
es
jmp
lahf
stc
aas
xchg
repnz
pop
clc
out
testb
sbb
cli
dec
and
mov
pop
adc
les
pop
dec
sub
push
je
loope
pop
aas
push
outsb
xlat
add
enter
movl
and
cltd
push
mov
or
mov
push
sti
in
push
les
ret
jle
in
div
jmp
xchg
icebp
movsl
mov
mov
test
mov
lea
pop
bound
out
cmpsl
sub
out
leave
or
cmp
ljmp
pusha
push
push
pop
adc
xchg
and
cmc
adc
lahf
cmp
cmc
shll
lahf
cmp
jge
pop
or
or
imul
add
out
jae
arpl
arpl
das
stos
aad
pop
add
dec
xor
jae
pusha
jmp
xchg
out
arpl
mov
rcrb
aam
fadds
xlat
push
inc
xchg
sub
mov
mov
push
adc
loop
inc
rol
ja
xlat
jo
jno
xor
mov
scas
les
mov
dec
xchg
das
pop
inc
filds
fsts
push
sub
int
and
cmc
out
xorb
lock
fisubrl
pop
add
jg
popa
sbb
clc
add
and
sbb
or
aam
or
cli
repnz
sub
inc
rorb
dec
repnz
js
inc
xchg
outsb
xor
mov
outsb
cmp
jmp
adc
test
mov
notl
flds
add
dec
xchg
xchg
repnz
pop
data16
and
pop
or
pop
movsb
pop
orb
iret
mov
push
xor
push
stc
push
adc
add
loop
adc
sbb
adc
and
lds
mov
cld
jno
addr16
cs
xlat
ja
cmc
jecxz
sub
jmp
and
inc
out
add
shll
loop
fisttpll
and
in
mov
cltd
and
dec
and
sahf
in
in
lods
jbe
xor
add
add
jno
push
and
or
mov
fnsave
lds
sub
out
lea
fsubrl
adc
and
mov
sbb
xor
sbb
push
daa
lret
fdivrl
add
mov
xchg
mov
mov
mov
sbb
jnp
movsb
inc
jo
repnz
mov
fwait
xchg
and
ljmp
pop
fadds
arpl
mov
sbbl
cmp
add
daa
adc
mov
arpl
ss
dec
and
enter
push
loope
jmp
test
mov
lcall
mov
call
wrmsr
pusha
xchg
pop
notb
lock
pop
fstl
imul
mov
int3
mov
inc
mov
xchg
mov
xchg
jno
dec
mov
xlat
xchg
das
mov
pop
int3
jmp
cmpsb
sbb
cmp
pop
xorb
jl
jo
push
jae
leave
push
inc
inc
popf
call
xor
sarl
inc
dec
xchg
jge
lret
cmp
mov
int3
jnp
rclb
cmp
fdivrs
gs
scas
xchg
push
jnp
call
bound
cwtl
jecxz
mov
pop
dec
aam
ret
leave
adc
fs
sub
push
in
mov
jle
jae
push
xor
and
push
lods
icebp
cmp
dec
sub
sub
sbb
inc
incl
xchg
xchg
sub
lods
nop
test
sbb
fstpl
fadds
stos
or
or
insl
pop
outsl
cmpsb
jo
mov
xor
test
insl
mov
push
aaa
inc
jl
add
pop
sub
dec
imul
loope
add
das
jge
popf
inc
rcrl
aad
cmovns
cltd
mov
outsb
cmpl
and
clc
lret
mov
in
insl
das
cmpsl
movsl
lock
xor
insb
xchg
inc
mov
sbb
fmull
aas
push
add
daa
cmp
mov
std
mov
inc
outsl
cwtl
and
jle
mov
faddl
dec
inc
lods
push
pusha
push
aam
ljmp
and
ljmp
frstor
pushf
faddl
push
mov
std
push
pop
pop
dec
fnstsw
add
pop
pusha
inc
pop
jb
sub
mov
std
imul
cmpsb
push
ss
lahf
dec
cld
stos
adc
pop
and
mov
lods
sub
push
jbe
adc
repz
and
mov
jb
scas
addr16
mov
push
pop
sarl
popf
add
push
pop
pop
xlat
scas
mov
pop
jne
cmpsl
add
pop
add
push
pop
ja
sbb
mov
and
ljmp
repz
mov
dec
mov
adc
pop
test
fstl
stos
dec
push
nop
sbb
xchg
popa
xchg
in
add
fwait
leave
mov
pop
imul
mov
bswap
mov
stos
dec
daa
pop
cli
xchg
int3
cwtl
lret
add
in
les
out
imul
flds
jl
xchg
cs
push
ds
sbb
mov
cmp
cli
xchg
dec
inc
nop
addw
xor
stc
fldenv
jmp
bts
sahf
xchg
addl
jmp
int3
adc
xor
aaa
clc
jno
mov
shr
icebp
xor
and
cli
ret
fcmovnu
xchg
cs
dec
mov
test
icebp
je
int3
es
xchg
negl
inc
push
fwait
mov
push
or
and
test
cs
dec
inc
add
jge
mov
aas
loopne
dec
loop
clc
test
pop
es
imul
push
pop
gs
lods
and
dec
cmpsl
push
jo
leave
adc
mov
nop
xor
mov
sbb
mov
mov
xchg
push
xchg
js
mov
sub
in
imul
jle
sarb
int3
shll
pop
nop
pop
xchg
sub
js
lock
jnp
dec
mov
fistps
pop
loop
das
dec
aaa
test
dec
sub
fwait
cwtl
xchg
inc
lock
cmc
sahf
xor
cltd
add
and
aam
push
mov
dec
sbb
dec
popa
or
inc
push
fs
xchg
ficomps
movsl
mov
dec
sahf
movsb
ja
das
cltd
xchg
and
movsb
and
xchg
mov
push
aad
mov
int
into
inc
sbb
insl
je
mov
or
fistps
gs
xorl
or
arpl
lea
lods
cs
inc
sbb
xlat
push
cltd
mov
enter
cmpsb
cltd
push
push
adc
repz
xchg
push
jge
loopne
les
push
fistl
popa
jbe
inc
movsl
xchg
adc
imul
fisttpl
lcall
mov
jp
out
and
sub
mov
out
cld
in
jnp
jge
movsb
out
test
dec
xchg
dec
ret
xchg
int3
int3
movsb
mov
mov
clc
jbe
xchg
stos
xor
fcomps
mov
push
les
pusha
mov
loop
fisubl
dec
scas
shl
loop
dec
fistpll
sub
pop
pop
adc
mov
inc
aad
cwtl
into
push
out
repz
jb
mov
daa
pop
dec
in
adc
bound
push
jle
popl
cmp
into
out
mov
push
mov
or
push
scas
push
jecxz
nop
inc
or
xor
sbb
out
xor
pop
rcll
dec
and
push
popa
inc
mov
or
jg
add
pusha
inc
sub
and
pusha
sub
xchg
mov
in
es
mov
pusha
fiadds
or
inc
stc
cmp
sbb
mov
pop
inc
repnz
in
leave
dec
sbb
cwtl
sub
mov
cmc
xor
fidivl
call
push
popf
fisubrs
movsb
jmp
iret
mov
fildl
inc
imul
push
cltd
adc
sti
fiaddl
ret
pushf
jnp
jbe
jp
pusha
fisttpll
out
lahf
clc
mov
cmp
jge
shrl
orb
test
jp
push
sti
sbbl
or
les
mov
inc
mov
je
cwtl
aam
addr16
lds
xchg
jnp
adc
jg
popf
push
xchg
lret
jns
dec
jbe
out
pop
roll
insl
xor
add
popa
nop
aam
jbe
stos
mov
cmpl
aad
sub
mov
xor
cmp
mov
in
pop
shlb
ret
stc
out
pop
mov
test
mov
lods
jle
push
sbb
and
mov
std
adc
jge
ds
xor
flds
xchg
xchg
cld
xlat
pop
test
cmp
mov
dec
or
in
cs
stc
inc
rclb
adc
mov
aaa
mov
lds
stos
xchg
mov
daa
mov
jp
push
mov
andl
add
subb
mov
xor
push
adc
in
and
xor
enter
xor
cmp
test
shrb
and
pop
pop
or
pop
movsb
pop
mov
dec
lret
sub
shl
lock
xor
out
lock
xorl
mov
fstpt
add
aaa
popa
lds
and
mov
testl
bound
cmpsl
js
inc
loop
sarl
inc
jnp
jmp
add
std
test
iret
les
test
std
cmp
mov
push
ss
mov
xlat
pop
jb
cmp
ss
aas
push
cmpsl
xchg
jae
imul
or
dec
icebp
dec
cld
out
je
lods
lods
mov
insl
mov
inc
xor
mov
prefetch
sbb
mov
push
lea
ret
sbb
push
xor
jbe
xchg
ror
lret
sbb
nopl
cltd
imul
cmp
mov
out
daa
aaa
jno
inc
or
cli
repnz
push
scas
test
mov
mov
mov
and
hlt
inc
idiv
ret
jge
xchg
lea
or
icebp
or
add
fistl
in
movsl
cmova
cmc
xor
movsl
cmpsb
adc
sub
pop
sarb
inc
dec
sub
fwait
xchg
adc
push
pop
push
mov
aam
fsub
sbb
and
clc
push
test
or
inc
out
sub
add
test
push
stos
in
xchg
pushf
lock
sbb
jmp
xlat
in
push
jno
and
or
push
sbb
or
fbld
xor
notb
mov
cmc
or
test
cli
push
leave
sub
mov
loope
hlt
cmp
jl
mov
rolb
fadds
sub
and
xchg
xor
test
mov
push
push
pop
jecxz
test
ret
ret
xchg
mov
cmpsb
add
jne
test
shlb
out
cmpsb
add
lret
std
loop
adc
andb
aad
jo
aam
pop
pop
jae
sub
mov
mov
mov
sahf
or
add
lock
cltd
adc
sahf
scas
imul
fidivs
popf
inc
out
add
xor
ja
or
pop
and
in
push
jns
movsb
inc
or
and
jbe
shl
push
inc
mov
ret
addr16
pop
movsl
or
cmp
fimull
and
hlt
pop
push
xchg
pop
pop
cmpsb
dec
in
or
lods
and
out
cmp
ffreep
or
xor
daa
add
or
mov
daa
scas
loopne
mov
add
or
jns
sbb
pusha
or
out
sub
jge
mov
sbb
inc
mov
jge
push
xchg
and
push
insl
jmp
daa
mov
das
aaa
es
jae
dec
push
mov
xlat
and
call
adc
jmp
lods
mov
bound
mov
fldenv
pop
icebp
push
mov
dec
test
arpl
lds
in
adc
ds
ret
outsb
mov
clc
stos
dec
and
lret
mov
sub
push
xor
fs
pop
cmc
mov
leave
mov
in
roll
xor
cmp
imul
push
cmpsl
mov
fsubl
jb
xor
ficompl
xchg
dec
mov
add
inc
in
mov
pop
fwait
enter
enter
jae
stc
xchg
xchg
fsubrs
fisubrs
in
pushf
inc
xor
xchg
js
add
cmp
outsl
mov
sub
jge
cs
loopne
and
push
mov
mov
pop
inc
mov
jns
cwtl
push
jb
mov
sub
ljmp
out
pusha
mov
xlat
xorl
sbb
pop
sub
fiaddl
movl
fildl
sbb
incb
push
or
inc
incl
add
lahf
pop
dec
ljmp
sub
pop
cwtl
xor
hlt
mov
out
enter
jmp
inc
fsubrl
inc
jb
popf
dec
jno
adc
pop
lds
lock
mov
jecxz
jno
jl
mov
adc
fistpl
and
sbb
in
xorb
or
jmp
rep
loope
push
jnp
adc
sbb
sub
adc
ss
pop
insb
jnp
andb
in
cmp
pop
or
and
push
xchg
xchg
and
lcall
cld
jo
int3
xchg
lret
push
cld
mov
xor
jmp
push
mov
jecxz
jmp
and
inc
es
rcr
movsb
xchg
inc
dec
add
out
repnz
push
ljmp
sbb
mov
cs
ret
sub
mov
add
pusha
insl
loopne
clc
es
jb
adc
sub
into
and
add
jge
cmpl
xchg
hlt
push
mov
inc
xor
test
sub
jne
mov
rclb
daa
scas
pop
or
rcl
adc
aam
vpsubusw
div
insl
loop
push
adc
adc
out
out
int
push
leave
xchg
arpl
mov
mov
push
add
mov
pushf
clc
add
movsl
pop
les
cmpsl
ja
xor
dec
leave
lods
in
mov
xor
rorb
xchg
mov
xchg
cli
test
pop
test
shl
mov
pop
jle
xchg
xchg
adc
cmpsb
inc
fnsave
mov
cmp
jns
sti
stc
push
data16
imul
push
jae
mov
in
sbb
xchg
sahf
inc
sbb
jecxz
loope
push
add
out
or
outsb
cmc
mov
cwtl
jo
je
add
push
lahf
test
movsl
int3
cmpsb
pop
popf
push
push
xor
imul
insl
je
rcr
nop
mov
es
addl
dec
es
test
ret
mov
dec
push
xor
aas
cld
bnd
cmp
push
fcmove
out
icebp
xchg
cli
in
mov
jbe
movl
adc
push
mov
not
add
arpl
leave
loope
xchg
pop
arpl
fidivs
out
push
out
xchg
lret
sub
sbb
inc
mov
sar
add
enter
xchg
mov
std
fiaddl
jecxz
mov
hlt
mov
out
movsb
sbb
cmp
mov
push
dec
sbbb
repnz
fistpll
mov
jecxz
and
les
js
scas
ret
repnz
xchg
jae
pop
adc
mov
negl
xchg
insl
aaa
mov
mov
int
nop
insl
gs
mov
das
and
mov
inc
adc
lock
push
movsl
aam
pop
sbb
out
lret
mov
stos
lock
mov
pop
mov
and
hlt
add
in
pop
pushf
pop
imul
xor
addl
insl
push
test
jo
cld
int
imul
pop
adc
call
inc
push
call
test
mov
pop
pushf
push
sahf
ljmp
cmp
hlt
dec
imul
jns
xchg
hlt
xchg
popf
add
push
fbstp
jg
jle
ja
ret
cvtdq2ps
dec
push
nop
lret
push
in
cmp
cld
sbb
in
cmp
jg
xchg
pop
lea
mov
movsl
push
pop
movsb
lods
shl
xor
cli
jne
in
lods
sbb
cmp
jae
xchg
mov
and
or
orb
inc
jge
insl
xor
and
icebp
ss
jp
and
std
inc
fst
in
push
sub
shrl
jo
inc
dec
lods
cmp
dec
mov
add
sbb
test
or
popa
rcll
inc
pop
dec
fiadds
xchg
js
fiaddl
adc
mov
adc
fwait
fwait
in
aas
lret
sub
and
mov
xchg
xchg
and
jns
push
push
sahf
and
and
lahf
adc
test
xchg
adc
jp
jmp
sub
cltd
fnstcw
dec
push
inc
and
add
dec
mov
and
in
divl
dec
jb
rcrl
pushf
or
mov
add
mov
push
fldl
or
mov
push
add
mov
sub
mov
in
inc
push
ret
rcrb
xor
push
dec
addb
int3
js
dec
xor
adc
mov
ret
mov
in
or
dec
popf
xchg
not
fs
inc
mov
sbb
xchg
popa
sarb
mov
mov
pop
les
cmp
xor
sbb
stos
xchg
jnp
mulb
popf
arpl
cli
jmp
je
and
cld
shlb
aas
sub
or
xsha1
cmpsb
iret
or
jo
subb
and
fwait
dec
into
add
fcmovne
test
mov
mov
inc
aam
ficoms
or
sub
mov
push
js
xor
inc
sbb
pop
leave
lcall
enter
mov
mov
js
or
sub
and
call
arpl
jle
faddp
push
jne
xchg
inc
mov
dec
fbld
pop
outsl
aas
mov
insl
das
pushf
mov
add
flds
jae
mov
fwait
or
xor
gs
pop
inc
out
adc
divl
xor
cmp
sar
xor
fwait
push
movhlps
mov
pusha
iret
or
cltd
movsl
imul
dec
jl
and
int
pop
mov
and
mov
push
pop
cs
out
push
jecxz
sbb
cmp
fldcw
bound
lret
pop
jge
push
jo
insl
popa
iret
adc
jnp
mov
mov
lock
push
dec
lcall
adc
dec
xor
add
rorl
leave
pop
ss
jmp
pop
outsb
and
lock
das
mov
xchg
push
mov
mov
sbb
adc
outsb
mov
sti
or
mov
mov
movsb
sti
inc
sti
in
pop
dec
jb
pop
sub
xchg
popf
xchg
mov
pop
add
inc
inc
rcl
fwait
sub
or
in
mov
ljmp
add
popf
push
cld
inc
lds
aam
jae
mov
notl
pusha
jnp
add
hlt
movlps
sti
out
xchg
or
xchg
sub
rol
and
sbb
push
push
cmp
fists
ret
mov
and
movsl
in
jge
and
dec
cltd
jne
push
jo
inc
or
jno
and
sub
push
xchg
sbb
loopne
xchg
pop
sub
jmp
stos
xorl
std
add
mov
aaa
mov
subl
pop
loop,pn
or
test
out
mov
cmp
jecxz
fdiv
jp
shlb
push
xchg
push
sub
shlb
outsb
xlat
add
mov
es
or
and
insb
and
adc
cmpsb
or
pop
cltd
jge
mov
stc
mov
mov
xlat
daa
and
push
dec
orb
shll
xorl
sub
in
cltd
jns
in
jns
mov
ss
cli
loopne
cmp
loope
push
add
or
pusha
cli
int
in
lahf
jo
pop
mov
push
lahf
xchg
mov
das
scas
out
xor
outsb
rcl
add
and
imul
jnp
inc
inc
mov
ljmp
repnz
adc
and
push
notb
fisubs
mov
or
mov
jmp
adc
rcll
pop
mov
lcall
xorb
mov
cmp
push
lcall
pushf
mov
adcb
int
adc
rcr
jbe
and
cmp
sbb
test
cmp
fmuls
les
sahf
adc
fiaddl
sub
and
or
popf
out
and
ret
mov
push
in
roll
xor
ret
mov
pushf
imul
int
mov
rorb
and
jg
pop
cs
and
mov
adc
add
mov
mov
dec
cmp
xchg
lea
sub
adcl
pop
mov
and
cmp
ja
rorb
les
push
sub
sub
js
or
clc
shl
ret
shrl
popf
xchg
imul
mov
push
rorl
stos
ret
out
jns
fs
hlt
mov
lahf
dec
sub
push
push
shr
cmp
push
loop
or
outsl
pop
or
mov
lea
sahf
imul
adc
adc
outsb
xor
or
cmp
js
mov
sbb
cli
mov
and
hlt
sahf
inc
and
mov
fwait
ja
bound
mov
addr16
sub
mov
xor
cld
xchg
and
jbe
cmp
stos
decb
inc
mov
clc
add
jne
mov
fistpl
fistpll
adc
add
out
ret
pop
cmp
pushf
in
sbb
das
mov
arpl
sqrtps
cmp
inc
mov
push
jp
add
inc
into
adc
pop
jno
lahf
mov
cltd
or
fimull
int
in
es
fwait
xor
enter
cli
pop
inc
sbb
add
adc
dec
lock
dec
sbb
push
xchg
mov
cli
push
pop
dec
or
mov
sub
push
or
mov
test
fs
xchg
adc
loop
inc
and
xchg
call
jl
mov
or
jge
shlb
inc
xor
xchg
jge
aas
int
mov
call
jl
mov
test
mov
or
in
mov
or
jno
push
cmp
shlb
xor
gs
xchg
sahf
imul
clc
sarb
mov
es
aam
lock
negl
arpl
call
sub
xlat
lock
adc
orl
insl
popa
cmp
out
add
xor
rclb
inc
sbb
js
ja
pushl
mov
or
aas
into
adc
mov
xor
test
add
pushf
insl
dec
enter
aam
fildll
push
popf
sbb
cmp
outsl
mov
and
adc
xor
inc
in
pop
daa
inc
imull
cmp
mov
shrb
inc
in
mov
outsl
js
loop
inc
stos
xchg
out
daa
xor
mov
jl
push
add
divl
cltd
inc
and
andb
fildll
rolb
imull
shl
addb
fimull
das
das
push
hlt
mov
repz
enter
jbe
cld
lds
xchg
subb
jle
bound
fwait
inc
cmpsl
push
int3
ds
fnstsw
ss
into
les
adc
repz
fcmovb
sub
xchg
xor
xchg
leave
push
inc
stos
scas
jmp
les
xchg
mov
push
and
pushf
xlat
add
jae
leave
mov
xor
dec
mov
jle
pop
lock
in
pop
mov
cmp
push
pop
into
dec
fimull
cmp
mov
stos
in
mov
xor
adc
clc
lahf
ljmp
xlat
cmpsb
shlb
shrl
aas
mov
bound
andl
sub
loop
xor
lods
cmpsb
push
mov
push
daa
xor
fsin
sub
ss
ja
mov
push
rorb
cmpsl
push
repz
xlat
xlat
lret
push
inc
cld
in
fcompl
push
jb
int
or
sti
rcrl
mov
orb
popa
scas
adc
xor
ss
ja
dec
xor
das
jno
orb
mov
ja
adc
out
rorl
push
sub
xor
daa
out
sub
add
in
in
into
pop
mov
in
movsb
adc
fstpt
mov
ret
int3
push
pusha
and
in
lcall
int3
pop
lahf
roll
or
xor
and
scas
sbb
popa
iret
xlat
lret
pop
xchg
test
jle
ret
push
adc
fistpl
xchg
das
cmp
scas
pop
out
arpl
mov
sbb
add
cwtl
mov
mov
filds
es
outsb
xchg
loope
jmp
adc
cmp
clc
lock
popf
mov
sub
cltd
popl
sbb
or
add
test
out
xor
jno
push
cs
mov
xor
xchg
test
mov
icebp
inc
in
jne
repz
xchg
and
movsl
test
cmp
jle
lret
gs
push
push
add
dec
shl
ljmp
sbb
jo
cmpsl
ror
out
test
out
jbe
mov
dec
mov
xchg
lds
jmp
cs
call
push
and
xchg
aam
aaa
insb
inc
sub
popf
or
sub
ret
lock
push
sahf
pusha
jb
leave
add
mov
cmpl
jp
sahf
aaa
jp
ret
mov
dec
mov
sub
nop
and
sarb
mov
push
cmp
out
aas
pusha
das
fwait
push
pop
xchg
outsl
mov
dec
repz
lods
jbe
ja
inc
lds
mov
bound
xchg
cmpsl
fwait
mov
fs
call
iret
outsb
fbld
or
mov
jecxz
mov
push
cltd
mov
cs
xchg
xchg
sub
nop
push
mov
and
loop
outsb
int
jbe
dec
sub
adc
fcmovnu
out
fisubl
cmp
xor
dec
cltd
jmp
pop
xchg
push
push
inc
stos
scas
arpl
add
scas
divps
mov
loopne
cld
push
mov
pop
ss
daa
sti
mov
aam
aas
xchg
sub
or
movsb
mov
icebp
jo
addr16
negl
test
int3
ret
jne
mov
loopne
mov
push
fwait
clc
sbb
xchg
pushf
mov
dec
movsl
fwait
inc
test
mov
pop
sbb
inc
fwait
out
sbb
xchg
dec
lods
lahf
std
mov
in
mov
and
les
movl
jnp
insb
cmc
cld
push
je
fneni(8087
in
sub
mov
push
test
test
jo
fcmovnbe
aaa
push
ljmp
int
jno
rclb
mov
mov
fistl
imul
int3
and
lods
cltd
fmulp
lret
inc
cld
xchg
jo
mov
int3
ljmp
and
push
mov
or
mov
mov
mov
mov
adc
lahf
mov
jp
jmp
stc
in
mov
fcmovu
or
pop
or
pushf
xor
pop
cli
pop
daa
cld
leave
dec
das
adc
xchg
in
das
outsl
dec
add
xchg
pop
mov
pop
push
out
sbb
rcrb
or
cld
das
mov
jl
enter
js
lods
test
jmp
int3
adc
cmp
or
inc
psrlq
repz
sub
int3
loope
xor
or
xchg
call
jg
pop
xor
lods
repnz
shlb
mov
xlat
cwtl
iret
arpl
andl
or
xchg
or
daa
jae
outsb
lds
adc
pop
daa
mov
jno
xorl
pop
cltd
jg
in
ds
jg
adc
ljmp
push
data16
mov
loope
mov
mov
roll
dec
idivl
insl
push
mov
std
fdivs
mov
arpl
int
or
ds
lahf
push
dec
jge
iret
aad
sub
mov
ds
sete
das
pop
add
roll
insb
lret
inc
xchg
cmpl
rcll
insl
xchg
sbb
ja
inc
in
enter
ljmp
xor
jle
push
inc
push
xlat
rclb
in
cltd
iret
loop
cmp
jno
jecxz
pop
sarb
jle
or
xchg
dec
inc
push
pop
xchg
mov
xor
daa
in
pop
cmp
mov
pop
adc
jae
mov
adc
scas
sti
push
orl
sub
push
loope
ret
cmp
aaa
mov
shlb
data16
imull
lock
push
mov
mov
insb
shl
sbb
cmp
cld
loopne
sub
push
shr
das
mov
sbb
mov
inc
fbld
lret
xorb
rorb
dec
cmp
jmp
enter
rolb
add
popa
fiaddl
mov
repnz
push
mov
mov
cmp
outsl
int3
push
push
pop
inc
outsl
dec
push
push
test
pop
out
movsl
push
lret
ds
push
dec
jns
cmp
inc
repz
hlt
pop
mov
daa
mov
and
add
push
into
mov
push
repnz
imul
shl
sub
adc
sbb
addb
mov
push
jp
dec
outsl
hlt
jns
xchg
fiaddl
pop
les
inc
mov
xchg
inc
gs
sub
das
and
pushf
mov
mov
sbb
or
es
sub
cwtl
inc
jp
jae
push
and
sub
pop
inc
dec
cwtl
and
jne
ret
cmp
mov
and
lret
cld
out
cmpsl
add
aaa
lcall
loopne
cmp
loope
ja
out
inc
mov
movsbl
sub
jle
fwait
mov
lret
sbb
xor
stos
repnz
dec
repz
lret
in
lcall
jmp
div
xor
mov
pop
jmp
mov
adc
xor
sahf
mov
test
pop
push
sbb
loopne
mov
mov
repnz
mov
xchg
mov
push
cli
push
dec
jl
or
push
mov
xor
lods
xor
testl
enter
dec
cld
out
imul
dec
fistpl
adc
out
xchg
roll
xchg
dec
clc
cli
inc
mov
cmpsl
lds
out
jecxz
iret
outsb
and
adc
aam
cmp
sbb
aam
leave
sub
push
leave
cmp
pop
jle
push
xchg
pop
gs
xchg
ja
test
jae
mov
xor
or
iret
cmpb
or
xor
ss
xchg
and
sub
lods
push
pop
inc
sub
mov
popf
mov
mov
mov
lods
out
nop
xor
push
movsl
dec
out
das
push
inc
in
test
icebp
ds
hlt
fmull
es
enter
jo
add
pusha
inc
insl
jmp
cmpsl
into
push
ja
cmp
adc
cmp
ret
or
inc
pop
xor
sbb
pop
insl
daa
pop
or
sbb
cmc
repnz
bound
test
pop
pop
shlb
jle
scas
ja
sbb
cmpsl
inc
push
iret
push
subps
mov
into
movsb
stos
ret
or
insb
outsb
sar
mov
aam
xchg
adc
pop
hlt
mov
fisttpll
out
sbb
ljmp
stc
cmp
das
xor
dec
scas
ja
lret
push
cmp
test
adc
mov
in
idivl
or
xchg
mov
aaa
rcr
push
jl
stos
divb
inc
or
or
mov
mov
sbb
test
xchg
fistps
adc
mov
mov
mov
mov
ret
mov
or
not
lods
rcrl
pop
jo
push
mov
mov
ds
shll
mov
mov
in
sub
or
xchg
arpl
sarl
test
mov
subb
int
movsb
or
stc
mov
xchg
push
push
mov
and
jae
xchg
sarb
and
js
inc
and
es
adc
xor
lds
xchg
mov
scas
mov
in
add
mov
pop
sub
jecxz
mov
imul
dec
adc
jp
fstps
push
sar
and
or
sub
push
pop
mov
ljmp
adc
outsb
push
mov
mov
fprem
sub
xchg
xlat
aaa
sahf
pop
adc
jbe
mov
and
and
push
jno
lds
jmp
sbb
shll
or
jne
jge
sub
mov
into
mov
or
pop
addb
in
out
arpl
ljmp
sub
or
add
xchg
mov
or
out
dec
mov
imul
mov
lcall
fidivs
call
ret
sbb
mov
jo
fucomp
inc
jns
lods
jnp
popf
ret
cmc
jecxz
xor
rorl
outsl
sbb
cmp
lods
add
pop
mov
xchg
loop
pop
arpl
fs
rorl
mov
test
lret
cmpsl
mov
unpcklps
sub
add
lds
sub
xchg
push
dec
sub
test
test
lea
or
lock
into
jno
add
pop
xchg
add
jne
push
hlt
or
imul
add
adc
cmc
aaa
sbb
cs
cs
inc
aaa
adc
in
nop
in
inc
test
inc
mov
jp
xchg
mov
gs
dec
cld
ficomps
leave
or
int
pop
push
xchg
adc
push
xor
mov
idiv
sbb
outsl
pop
mov
ljmp
pop
or
cmp
cmp
ficompl
mov
xorl
push
jno
mov
sub
int
fs
test
push
fsubr
shrl
sub
dec
int
inc
lods
xor
sbb
repnz
fs
add
fdivp
into
jmp
add
ljmp
push
pop
push
ljmp
jns
inc
mov
out
or
jbe
mov
mull
mov
and
dec
bswap
dec
cmpsb
ud0
mov
ljmp
add
int
je
lret
loop
stc
push
lcall
pop
xchg
inc
addr16
incl
insb
sub
insl
cmp
mov
pop
outsb
lret
xor
mov
fdivl
aam
add
cmpsl
out
xor
hlt
ret
push
jecxz
xchg
outsl
fs
insb
lock
aam
and
pop
dec
ficoms
jg
mov
in
pop
clc
popf
xchg
enter
sub
mov
add
xor
imul
push
lock
scas
jmp
cs
das
dec
cmp
jg
mov
mov
push
shrl
pop
adc
pop
xor
mov
jbe
add
or
iret
insl
or
sub
or
inc
imul
cmp
sbb
and
iret
test
out
add
pop
mov
cmp
inc
inc
aad
push
mov
cld
pop
into
mov
daa
push
and
es
mov
xor
mov
mov
cld
or
test
js
sbb
icebp
xchg
in
dec
and
xchg
inc
adc
push
mov
push
test
mov
das
enter
add
dec
in
jbe
sub
or
lock
imul
js
xlat
pusha
cmp
push
aad
test
aam
add
cwtl
inc
fstps
mov
lods
dec
adc
lods
adc
dec
sub
pushf
adcb
call
xchg
mov
in
in
lods
stos
pop
or
xchg
arpl
inc
and
pop
fwait
movsb
push
arpl
mov
mov
outsb
testb
push
sub
jge
mov
clc
dec
jae
jge
sub
ljmp
xchg
ds
dec
jbe
add
and
mov
add
add
in
fwait
mov
mov
pop
xor
dec
pop
mov
jmp
pop
sbb
in
pushf
add
popf
les
xchg
into
arpl
faddl
ret
xchg
jns
arpl
es
adc
scas
fsubrp
add
pop
jecxz
subl
subl
mov
xchg
jl
aam
sbb
add
das
ficoms
insb
cltd
adc
dec
insl
mov
aas
lock
mov
in
dec
ds
in
loop
je
xor
daa
test
iret
jp
jmp
pop
imul
add
inc
inc
cmc
sub
cmpb
sahf
gs
mov
movsb
imull
das
dec
divb
add
dec
mov
imul
add
imul
cmp
or
jmp
dec
daa
sub
insl
pop
mul
jg
les
push
mov
adc
int
pop
xor
push
call
insb
out
push
pop
push
dec
outsl
pop
loope
sbb
sbb
ret
iret
mov
mov
mov
popf
xor
gs
sbb
adc
ficompl
cmp
ds
adc
add
arpl
mov
mov
pop
fiadds
hlt
loopne
jo
cwtl
xor
cmp
xor
sub
mov
mov
push
add
cwtl
inc
stc
fisubs
lcall
xor
xor
adc
inc
cmpsl
sub
out
loopne
ret
jne
sti
enter
stos
add
pop
pop
xchg
lahf
push
test
xchg
mov
mov
add
int3
and
mov
fnstsw
pop
in
xor
clc
inc
mov
sub
xchg
clc
loop
into
push
dec
jne
inc
add
xchg
and
adc
pop
imul
adc
cmp
push
cmp
shrb
scas
push
sbb
jecxz
jle
mov
gs
cmpl
fs
inc
adc
mov
jno
bound
repz
add
or
fsubs
mov
and
les
pop
xor
enter
sti
cmp
stos
mov
int
aas
fidivl
lock
ljmp
aam
aad
push
pushf
cmp
mov
cltd
xchg
andl
push
lods
dec
xor
ret
xor
jl
mov
xchg
push
ds
loope
sub
sbb
sbb
bound
mov
add
mov
jbe
fsubrl
dec
ret
cmp
adc
and
in
mov
xor
jbe
je
cmp
pop
jecxz
mov
lret
push
mov
out
add
sub
sbb
xchg
mov
cmp
outsb
mov
dec
push
xchg
add
push
cmp
jne
sbbb
dec
fsubs
stos
add
jl
xchg
and
stc
iret
out
lods
xor
loopne
pushf
lahf
shrb
into
jg
sub
adc
sbb
cmp
mov
test
outsb
xorl
mov
dec
dec
out
and
push
enter
dec
scas
shl
pop
subl
add
decl
lods
loope
les
aas
xchg
movsl
push
push
pop
or
pop
das
mov
mov
inc
fwait
mov
inc
and
jo
pop
and
fisubrl
bound
add
xchg
push
hlt
insl
adc
jne
adc
and
cs
test
mov
inc
ss
mov
scas
pushf
rol
lods
push
add
lods
bswap
xor
fdivl
sub
aam
push
push
nop
aas
mov
mov
or
mov
sub
mov
cwtl
xchg
mov
loop
pop
testl
xchg
add
dec
adc
mov
cmp
sub
pop
rorl
mov
dec
sbb
mov
imul
pop
std
lahf
enter
jbe
add
or
push
push
popa
testl
mov
addr16
pushf
nop
adc
jp
dec
jle
mov
jo
sub
sub
xchg
sti
out
popa
insl
insl
dec
sub
insl
popl
inc
sub
shlb
sbbl
lret
testl
lea
mov
mov
inc
mov
mov
fnstcw
pop
jb
push
cltd
fidivrs
movsb
mov
inc
xlat
iret
jae
push
adc
repnz
mov
jns
jns
enter
sbb
jo
mov
loope
and
cmpsb
mov
add
dec
ja
xchg
xchg
push
js
ret
outsl
in
fistpl
xchg
cmpsl
mov
xchg
inc
js
push
insl
les
adc
push
pop
xor
jbe
sub
or
xchg
dec
xchg
add
frstor
jle
mov
rorb
add
andl
adc
mov
hlt
mov
int
sub
jp
fwait
add
add
adc
mov
out
shlb
dec
loopne
aam
sbb
and
mov
icebp
popw
mov
mov
arpl
lds
testl
into
pop
sub
jmp
pop
pop
mov
push
xchg
pop
sub
in
int
pop
jne
sahf
into
mov
les
jae
xor
movsl
pop
out
aas
shrl
xor
pop
inc
sub
int
mov
sbb
inc
loopne
push
iret
icebp
inc
into
std
sub
pop
mov
mov
pusha
daa
popa
fmull
faddl
jno
lods
push
mov
cli
loopne
xchg
ds
jl
pop
repnz
mov
ljmp
xchg
loope
push
cs
enter
xor
loop
test
popa
cld
cmc
lock
stos
outsb
out
lret
fs
mov
test
jmp
mov
movsl
je,pt
add
notl
mov
inc
adc
pop
jns
outsb
mulb
cmp
lcall
adc
sahf
lcall
xor
out
mov
and
pop
nop
shr
imul
push
cltd
adc
jne
out
pop
cli
sbb
dec
ja
repnz
shl
mov
adc
repz
jle
xor
and
nop
add
outsl
xchg
loopne
cmpsb
jne
pop
ficompl
pop
sub
xchg
push
cld
out
and
testl
and
inc
popf
scas
push
aam
int3
add
mov
lods
jmp
pop
lcall
je
sti
mov
pop
jae
scas
andl
ljmp
cmp
frstor
cs
jl
stc
out
add
bound
out
mov
jmp
xor
mov
movsb
pop
repnz
sbb
jecxz
movsl
dec
dec
mov
push
adc
add
xchg
mov
mov
jnp
jl
test
dec
add
push
xchg
add
lret
add
push
gs
pop
mov
push
mov
jns
cmp
mov
aad
je
jno
xchg
test
mov
pop
push
shll
push
add
mov
rcll
add
pop
sub
xor
in
cmp
shr
dec
pop
push
jl
mov
jmp
cmp
out
cmpb
out
mov
int3
add
jbe
and
mov
sbb
clc
test
or
pop
or
mov
xchg
or
mov
arpl
addl
scas
roll
push
sbb
push
in
cmp
xchg
shl
mov
mov
xchg
mov
cmc
es
jns
mov
sti
in
outsb
in
mov
mov
sbb
jmp
aad
mov
cmp
sub
filds
std
test
testb
repnz
or
lahf
adc
les
lods
or
sti
sub
inc
or
pop
in
lret
cltd
sbb
and
repz
mov
es
idivb
push
pusha
mov
arpl
fstpt
cmp
fwait
subb
sbb
xchg
addr16
adc
data16
add
divl
pop
push
add
shr
pop
pop
scas
push
dec
divl
xchg
sub
jle
xchg
mov
mov
in
jbe
inc
in
in
pop
pop
shll
xchg
movsb
xor
pop
mov
ficomps
in
ss
mov
push
mov
cmp
iret
sub
popf
aad
xor
xchg
in
mov
mov
adc
pushf
orl
lcall
dec
push
ret
cmpsl
outsb
bound
cld
andb
push
mov
xchg
fsubrl
clc
daa
push
dec
cmp
js
adc
insb
sub
ljmp
movsl
out
jno
sub
xorl
test
mov
push
and
or
add
ud1
add
scas
inc
aaa
xchg
mov
cmc
test
push
or
xchg
mov
sub
into
aam
push
paddw
out
stc
ds
mov
cld
inc
or
push
and
mov
les
clc
stos
dec
jno
cmp
jg
fwait
xchg
jae
xor
dec
adc
or
adc
sub
xor
aad
or
jge
scas
jo
xchg
std
sub
adc
add
aas
test
xor
in
sub
and
xchg
leave
call
fdivs
adc
xor
je
adc
adc
dec
xchg
cmp
jae
pop
xor
xor
testl
ss
pop
xchg
sbb
js
push
mov
push
inc
and
xchg
scas
lods
iret
cltd
rorb
lret
and
jmp
pop
pop
test
rclb
les
inc
test
je
insb
adc
ficoml
mov
pushf
mov
mov
loope
push
cs
dec
mov
andl
imul
sub
stc
movsb
sub
cmc
inc
out
sub
push
xchg
jnp
cmp
xor
scas
jp
push
in
inc
lock
imull
int
ret
pop
out
hlt
push
in
pushf
pusha
fldcw
jb
es
mov
xchg
hlt
repnz
lds
mov
aas
dec
jno
pop
stc
jo
enter
or
xchg
jae
push
in
into
push
rorl
inc
lcall
mov
sbb
out
cmp
ljmp
push
inc
xor
add
or
jnp
shlb
test
push
sub
jo
pop
xchg
dec
insb
mov
or
imul
push
lock
add
dec
xor
and
ss
mov
or
cmp
cmpsl
leave
push
stos
xlat
adc
push
bound
shl
in
stc
decb
cmp
jmp
stos
or
mov
pop
mov
popa
lret
cmp
lods
xchg
mov
sub
sbb
subb
fsubrs
lret
xor
inc
mov
stos
rorb
sbb
fcomi
lods
cmp
jo
mov
jl
lds
es
subb
adc
mov
mov
adc
push
clc
add
movsb
flds
ja
stc
ljmp
pop
test
loope
or
inc
out
out
leave
mov
fistpll
add
or
push
cmp
mov
out
adc
dec
out
lea
stc
adcl
mov
jb
mov
cli
sbb
adc
xor
test
inc
sub
push
shlb
icebp
call
int3
loop
sbb
inc
in
pop
roll
loop
rcl
cmc
push
xchg
or
out
arpl
xlat
subl
cmp
and
and
push
test
xor
in
sbb
test
outsl
cmpsb
push
das
jns
outsb
das
mov
hlt
lock
sbb
jmp
sub
fmulp
movsw
push
lds
out
imul
iret
movsb
jp
sub
and
xor
jne
or
aad
push
inc
popa
and
nop
lahf
xorb
push
fstl
outsl
jmp
sub
call
xor
lret
sbb
lret
sub
jnp
xchg
sbbl
push
int3
cli
movsl
dec
gs
cmp
sub
inc
mov
lock
xor
sarb
movsb
mov
push
mov
sub
sete
cmp
pop
inc
jno
in
mov
mov
xor
incb
add
sbb
sti
ret
xchg
insl
pop
int3
push
sub
inc
mov
push
aaa
jl
and
pusha
aaa
jb
lret
add
and
ljmp
sub
mov
scas
fs
sti
mov
cmpsl
pop
push
aas
ja
dec
fwait
push
xchg
sub
pop
fistpl
or
mov
sahf
shll
and
cmp
aam
into
jno
es
outsb
scas
jbe
jb
daa
inc
std
sub
lds
sbb
mov
imul
insl
int3
mov
jne
mov
scas
ret
out
add
iret
sarl
out
popa
lret
jne
sub
fisubl
fwait
int3
sbb
push
push
push
cmpsl
es
les
xor
push
pop
fiaddl
xchg
repz
in
cmp
rcrb
pop
setae
insl
std
xchg
mov
xor
xor
fldl
ror
out
das
les
mov
inc
cmpb
imul
pop
mov
mov
pop
imul
dec
mov
pop
push
stos
mov
xchg
adc
mov
and
jmp
popf
imul
mov
push
out
sahf
out
xor
ret
bound
add
inc
jbe
mov
cltd
mov
icebp
pmaxub
data16
add
mov
aam
fwait
arpl
adc
push
adcb
lret
dec
stos
movsb
jmp
push
fistl
dec
lcall
in
into
mov
cmp
pop
clc
dec
movsb
adc
mov
jo
lret
fsub
jg
int
mov
mov
and
xchg
jnp
and
add
insb
pop
jne
jns
dec
das
ss
in
inc
movsb
xchg
scas
mov
ficoml
ss
pop
mov
daa
pop
sbb
and
scas
and
movsl
test
outsl
jnp
rcl
adc
mov
stos
xchg
and
xor
add
rcl
lock
mov
xchg
pop
in
imul
mov
shl
ss
cmp
fwait
and
inc
pop
sbb
icebp
call
nopl
int
insl
frstor
lods
and
lods
daa
sbb
jmp
mov
or
daa
pop
lods
xorb
cmp
scas
psllw
lahf
cli
jmp
jo
pop
jbe
xlat
mov
adc
sub
cld
nop
out
loop
pusha
pop
ja
xor
pushf
int
ds
or
fidivrs
out
cltd
xchg
mov
sbb
dec
cmp
dec
rclb
leave
sahf
add
xchg
and
jns
out
dec
iret
cltd
stos
lods
lods
jno
xchg
imul
inc
movsl
enter
fstpt
lret
pop
shl
inc
pusha
arpl
out
jae
in
or
sub
jg
icebp
jno
loope
gs
xchg
sbb
push
ljmp
dec
mov
sbb
ret
out
pop
out
clc
rorl
call
push
inc
xorl
popa
push
faddl
push
mov
fwait
fwait
sahf
mov
jmp
mov
xor
pop
mov
push
pop
shrb
fwait
aam
stos
adc
lret
test
inc
mov
call
dec
aas
shrb
jne
mov
inc
sbb
xchg
test
pop
adc
jmp
repz
movsl
aaa
div
mov
jmp
ret
xchg
stos
cld
stos
jp
fwait
outsl
push
js
push
cld
jle
out
cmp
sbb
lea
mov
std
clc
cltd
mov
mov
lcall
xchg
and
mov
jecxz
jmp
sahf
inc
imul
xor
test
ss
sub
lds
mov
jo
stos
jg
pop
xchg
mov
add
stc
lods
cs
ja
pusha
fdivs
pop
cmp
mov
rorl
shrb
ficoms
push
inc
outsb
jecxz
int3
cmpsl
jne
lea
mov
ja
and
push
orb
adc
push
imul
or
stc
add
test
mov
scas
cmpsl
sbbl
inc
jecxz
sub
xor
insb
adc
ret
daa
xchg
push
lahf
clc
je
xor
mov
push
jmp
lret
es
cmpsl
outsl
into
andb
sub
arpl
enter
imulb
pop
jge
js
xlat
jge
sbb
popf
ljmp
xchg
shll
decl
or
out
cld
add
mov
adc
pop
ja
icebp
cld
je
cmc
popf
and
inc
lahf
out
ss
test
aad
cld
jle
sbb
repnz
daa
inc
cmpsb
add
js
in
and
cli
inc
adc
nop
add
or
je
std
or
loop
pop
cmp
out
fdivs
adc
clc
enter
jo
sbb
loop
push
and
cltd
lods
or
daa
cmp
push
shll
pop
testl
inc
ja
es
daa
adc
xor
bound
imul
cmc
pop
testl
pop
out
push
dec
loopne
sbb
sub
clc
sub
mov
in
inc
sub
push
mov
fdivrl
outsl
fs
ja
pop
adc
jae
iret
dec
xor
pushf
icebp
adc
nop
or
sbb
popa
push
mov
pushf
push
cmp
gs
mov
iret
xor
data16
in
and
notl
bound
or
aaa
stc
psrlw
std
push
and
pusha
or
lods
jmp
add
idivl
xor
loopne
sahf
fistl
ljmp
cmp
in
mov
mov
xchg
sbb
mov
mov
xchg
xchg
outsl
shll
stos
xor
mov
adc
adc
loopne
daa
scas
and
stos
out
sarl
mov
mov
push
arpl
fwait
jge
jno
sti
xlat
sbb
adc
and
push
inc
push
repnz
mov
and
mov
push
push
popa
xlat
xchg
fs
ret
clc
push
mov
cmp
add
test
dec
incl
inc
mov
pop
inc
es
subl
aad
sbb
mov
adc
push
repnz
inc
sub
jae
stos
inc
or
and
rol
mov
mov
cmpsb
ss
fstps
idivl
sub
ret
bound
sti
dec
cmc
fiadds
pusha
sub
xchg
jno
jo
adc
pop
dec
mov
loope
sbb
es
pop
add
pop
adc
daa
dec
pop
aas
cmp
push
add
cmpsb
mov
add
adc
add
into
loopne
test
je
dec
mov
lret
push
arpl
int
pop
lea
mov
or
pop
stos
in
jns
hlt
xor
xor
or
sbb
cs
push
jge
lods
mov
mov
call
xchg
js
mov
pop
rcpps
arpl
rorb
add
sub
pop
aaa
sbb
out
movsl
dec
adc
cmp
shlb
lcallw
xchg
adc
inc
mov
cld
add
mov
mov
sub
or
xor
lods
push
and
andb
xchg
lds
push
push
mov
add
adc
out
mov
outsb
and
mov
push
mov
cmp
lret
clc
cmp
lods
subb
jg
pushf
push
jae
add
and
pop
into
xor
mov
ja
nop
dec
push
mov
lahf
pusha
aas
and
pop
and
pusha
mov
sbb
pop
push
sub
xchg
sbb
inc
out
lock
stc
aaa
repz
decb
mov
nop
xlat
mov
jp
push
xor
xor
jmp
mov
lock
mov
cwtl
jns
popa
add
lock
sbb
insl
popl
jb
inc
mov
cld
push
fdivrp
jecxz,pt
outsl
daa
lahf
fistps
aad
cltd
sub
lcall
mov
mov
hlt
add
jbe
xor
std
aaa
and
sbb
jb
or
push
push
jmpw
lods
jg
cmpsb
pop
leave
and
ss
hlt
pop
pop
inc
ss
std
test
lret
push
int
push
mov
add
jae
mov
xor
inc
lret
flds
rolb
icebp
xchg
loope
push
cwtl
push
sbb
cmc
sub
cmp
je
cmp
iret
xorb
lods
lret
test
push
test
jg
in
dec
rolb
int3
and
mov
and
in
in
mov
sub
aaa
lods
adc
jbe
scas
mov
ds
jae
inc
or
fwait
add
std
mov
test
jecxz
fstl
and
jl
push
xchg
stos
aas
add
test
aas
inc
mov
lock
xor
mov
or
jno
fbstp
out
je
fisttps
fmulp
out
xor
into
jle
andl
lcall
xor
fiaddl
adc
je
in
mov
in
in
ret
fdivs
and
mov
movb
pop
and
shll
mov
or
add
push
lods
mov
push
mov
adc
inc
dec
mov
bound
xchg
xchg
iret
jno
fadds
outsb
mov
insb
jbe
dec
cmpsb
aas
sti
std
xor
xchg
lods
test
sub
cvtps2pd
sbb
imul
xor
jae
mov
jecxz
aaa
movsb
scas
and
xchg
fbld
jmp
in
cmp
push
test
movsl
fimuls
sub
jae
lods
cmp
xor
lds
shll
sbb
stos
loope
je
je
push
xchg
mov
aas
jae
push
or
dec
add
test
addr16
jp
cltd
push
inc
daa
pusha
sti
push
lods
mov
adc
sub
jmp
pop
int3
rcr
push
jne
stc
aam
ficoml
jl
jle
xorl
inc
loopne
mov
mov
std
stos
loope
loop
loop
xchg
sub
jns
fbld
mov
ljmp
jno
cmp
inc
xchg
pop
mov
out
and
jnp
add
rolb
xchg
push
stos
nop
fiadds
cwtl
loop
inc
in
pop
inc
scas
mov
inc
xchg
mov
xchg
push
xor
sub
fucomip
in
add
js
pop
rol
mov
jge
lcall
jge
xchg
xlat
loopne
ljmp
jo
movsb
sti
int
pop
pop
mov
cld
push
cld
gs
insb
loopne
and
sbb
xor
push
or
and
fwait
or
push
stos
cmpsb
or
inc
jbe
repnz
cwtl
mov
mov
mov
push
arpl
clc
addl
mov
idivb
fcomi
mov
xchg
out
dec
xchg
repnz
xchg
lds
or
xchg
lock
int3
cli
mov
lods
xor
pop
arpl
cmp
cmp
imul
jb
adcb
lcall
dec
and
pop
xlat
into
jb
rcl
mov
clc
sub
or
fs
or
arpl
loope
xchg
cmp
jbe
push
gs
push
add
call
jnp
fildll
dec
inc
or
nop
mov
lods
enter
imul
ja
dec
shl
ja
adc
movsl
iret
into
adcl
arpl
shrl
bnd
lcall
push
adc
sbb
xchg
and
js
sbb
sbb
jbe
jb
jno
cmp
jmp
cmp
jno
lods
imul
lahf
les
mov
and
arpl
mov
fisubl
add
in
stos
cli
fisttpll
lret
int
ljmp
mov
xchg
xor
mov
or
xor
dec
bound
mov
and
push
subl
pop
divl
movsb
cmc
stos
xchg
lea
sub
mov
mov
stc
loope
sbb
adc
xchg
adc
push
sahf
sub
mov
in
nop
add
ffree
out
sbb
push
enter
cmpsl
es
loop
mov
lret
mov
and
es
jmp
outsb
sub
mov
in
add
stos
adc
lods
fdivrs
add
sahf
leave
pushf
and
leave
mov
imul
sub
jecxz
inc
sbb
mov
sbb
outsb
push
pcmpgtb
fs
dec
popa
fiaddl
dec
push
lret
int
sarb
mov
test
loope
xor
aad
jmp
and
add
dec
add
into
cmp
mov
sub
inc
lods
add
xchg
mov
pop
cmp
fdivrp
mov
cmpsb
or
and
in
xlat
cmp
mov
rcr
sbb
scas
pushf
sbb
leave
negb
test
ret
mov
repnz
dec
push
lahf
or
fisttpl
add
jg
xchg
mov
daa
flds
add
sbb
or
cmp
sub
cs
push
daa
jo
inc
fiaddl
into
lahf
cmp
dec
lcall
add
add
add
adc
sti
push
add
cmpsb
mov
cmp
outsl
mov
mov
repz
pop
sub
inc
jl
mov
push
inc
adc
xchg
xor
mov
sub
push
sbb
or
xor
xor
iret
pop
aad
xchg
cmpsl
stos
insb
cmp
paddq
pop
jl
and
loop
pop
push
mov
jo
sub
popf
cmp
sti
shl
push
stos
pop
sbb
pop
inc
out
cmp
mov
add
iret
jb
loope
pop
push
mov
aad
dec
mov
push
jo
testl
outsb
or
or
ret
xchg
sbb
inc
lds
add
imul
mov
shrb
push
dec
xor
cmp
inc
or
and
mov
sbb
clc
mov
imul
mov
dec
notl
mov
push
lahf
test
jo
imul
test
jecxz
shrl
jle
addr16
lods
cmp
mov
stos
push
lret
repz
imul
loop
pop
inc
sbb
popf
xchg
push
fiaddl
or
ds
xor
pop
sub
jecxz
adc
aam
rcl
sub
mov
inc
push
lods
cli
nop
and
popf
or
sti
mov
inc
xor
mov
pop
adc
das
push
inc
test
pop
xor
ret
call
and
sar
fnstcw
int3
inc
fs
insb
push
push
repnz
mov
mov
sub
aaa
xor
scas
inc
pop
aam
addr16
mov
loopne
sbb
pop
pushl
test
add
out
test
and
sbb
sbb
cmpsb
cmpb
jo
xchg
xchg
inc
adc
inc
fmull
cwtl
pop
mov
ss
sbb
jle
popa
mov
mov
cmp
rcll
xor
dec
icebp
mov
pop
loopne
sub
sbb
jnp
sbb
cwtl
push
mov
dec
cmc
dec
adc
inc
mov
into
mov
mov
push
filds
dec
xor
dec
pop
clc
icebp
sbbl
pop
sub
ret
cmp
into
lcall
bound
es
sarl
mov
daa
ret
sub
sbb
fisubl
cmp
repnz
jne
test
dec
add
cmove
out
fnstcw
sbb
mov
inc
aaa
mov
cmp
ljmp
inc
add
hlt
jp
inc
sbb
leave
fstpl
add
or
add
cmp
std
repz
jne
inc
adc
adc
xchg
xlat
inc
sarl
popf
je
rclb
fcomps
mov
aas
sti
inc
loope
xor
test
inc
dec
dec
cld
faddl
ficompl
add
cmpb
dec
test
stc
cwtl
lahf
movsb
aam
and
punpcklwd
aaa
sub
mov
and
inc
xor
jp
push
push
andl
dec
loope
xchg
je
mov
insl
js
iret
call
aas
clc
and
inc
add
testb
cmpb
icebp
out
and
out
stos
loope
pop
mov
xor
enter
jmp
jg
popf
jge
pop
stos
pop
cs
mov
cltd
xchg
into
and
sbb
in
dec
sub
out
add
xchg
mov
dec
xchg
jmp
pop
out
out
sub
sbb
movsl
dec
sub
pop
xchg
fs
ret
insl
pop
call
lahf
gs
push
adc
push
je
and
jns
mov
out
cmpsb
add
mov
dec
repnz
add
or
enter
ja
int3
sbbl
aam
test
push
rcr
fs
movsb
test
daa
inc
xchg
out
adc
push
sub
ret
and
add
icebp
pop
insl
push
mov
lahf
or
mov
pop
rcrl
push
cli
lea
pushf
xchg
test
out
mov
mov
sahf
jbe
jae
xchg
inc
mov
daa
hlt
and
pop
iret
ds
inc
cs
or
fidivl
cs
daa
das
xlat
adc
adc
xchg
push
cltd
cmp
stos
les
mov
hlt
sub
das
je
jl
cli
adc
pop
pushf
sbb
jnp
dec
mov
push
push
movsl
xchg
xchg
push
arpl
inc
cmpsw
lret
jno
jnp
xlat
lcall
ss
jne
lcall
fisttpl
pop
js
sbb
add
add
jb
aam
mov
insb
lcall
aas
pop
jle
mov
cs
rcll
movsb
jae
addr16
mov
push
neg
testb
sbb
adc
inc
ficoms
and
leave
lock
cmpsl
sub
sbb
or
lahf
ds
xchg
sbb
pop
xchg
push
sub
jo
adc
stos
sti
nop
mov
add
jl
dec
testb
push
lock
fists
mov
or
push
and
daa
fsub
xor
hlt
fcompl
cmpsb
nop
add
imul
lcall
inc
insl
xchg
sti
pop
aad
testb
mov
xor
mov
rolb
mov
repz
push
cs
imul
pop
jb
mov
ret
and
sbb
into
cmp
imul
or
xor
mov
mov
pop
inc
sbbl
mov
adc
jge
cmc
dec
jge
inc
jmp
cmp
aaa
paddq
nop
xchg
scas
stc
in
xor
inc
pop
test
jae
fs
and
sub
arpl
xchg
push
flds
fdivrs
push
mov
ljmp
push
lret
or
push
cmpb
jl
lret
adc
sub
gs
ja
xchg
adc
int
lret
xor
push
loope
lock
cmpsl
outsb
cli
pop
pop
jle
aad
test
dec
and
mov
adc
pusha
jmp
mov
or
mov
cs
es
lea
inc
mov
push
fstpt
pushf
insb
imul
andl
add
jo
sahf
pop
fucom
ret
and
mov
sbb
lahf
sbb
mov
mov
pop
pusha
xor
adc
outsl
hlt
cmp
sahf
shlb
and
xchg
lock
mov
cmp
pop
es
mov
je
mov
pop
call
sub
negl
jmp
stc
sbb
loope
ffree
mov
push
mov
pop
or
mov
jb
lods
repnz
je
adc
movsb
mov
dec
cld
pop
cmp
das
jle
out
jne
scas
jno
cmc
clc
pop
adc
std
or
in
movsb
sarb
mov
shrb
lock
mov
popa
sub
adc
pop
movsb
xchg
mov
dec
xchg
into
inc
lds
insb
ret
pusha
fiadds
or
xchg
jnp
mov
sub
pop
fcmovbe
mov
outsl
mov
sti
iret
jge
mov
hlt
fidivrl
and
push
pop
jae
push
dec
mov
add
adc
push
into
xchg
xchg
xchg
cli
js
cmp
sbb
test
in
cli
outsl
test
clc
cmp
jbe
push
loope
mov
ret
or
cmpsl
fisubs
rcrb
xchg
adc
test
mov
xchg
aad
mov
jp
lfs
sub
push
or
lea
fcmovnbe
iret
push
cmp
push
popf
mov
mov
in
shlb
or
jle
outsl
ret
ds
repnz
sub
dec
mov
stc
xor
es
lea
lods
push
mov
or
loope
cltd
mov
sub
jecxz
dec
or
xchg
jmp
icebp
or
jmp
stc
sbb
mov
mov
mov
pop
push
cli
stos
out
popa
loop
inc
das
sub
and
movsl
xchg
jo
mov
les
inc
pushf
imul
aaa
lret
nop
js
xchg
mov
or
mov
popa
mov
jmp
or
sbb
cli
loop
js
ds
sub
je
push
stos
xor
sbb
jbe
fs
cmpsb
cmpsl
dec
shlb
push
jecxz
gs
mov
cmp
and
lcall
add
iret
inc
fcompl
lods
inc
das
xor
cltd
cli
jle
push
and
sbb
loope
cli
push
mov
jnp
pop
mov
mov
movsb
mov
int3
pop
pop
cmc
or
xchg
mov
and
mov
divb
clc
xor
pop
push
insb
nop
leave
mov
scas
in
lcall
loopne
add
in
stos
cltd
rolb
hlt
mov
cmpsl
sub
adc
and
dec
xor
shlb
mov
shrb
xlat
imul
xchg
cs
sbb
jno
out
mov
jmp
repz
insb
repz
sub
xchg
push
xor
test
inc
or
xor
lret
pop
ds
inc
jg
mov
push
dec
dec
icebp
push
fistpll
ss
bnd
lahf
fcmovne
xor
int
adc
out
push
into
cmp
adc
lods
dec
pop
add
aaa
jecxz
sbb
sbb
hlt
mov
and
movsb
or
imul
test
lea
cmpb
jo
mov
fsts
or
inc
lock
mov
shr
mov
mov
mov
pop
lahf
jl
adc
pop
cltd
add
mov
mov
mov
les
aam
in
imul
test
hlt
repz
rorl
sbb
xchg
pusha
test
push
adcb
jmp
xor
mov
dec
test
pushf
pop
cld
sub
test
movsb
inc
mov
ja
push
lds
and
jmp
std
fs
xor
stc
lahf
sub
fcmovu
dec
enter
inc
and
jo
dec
jecxz
js
mov
pop
pusha
and
popf
sbb
add
xchg
fldz
out
add
jl
mov
test
movsb
mov
add
jl
sub
jno
mov
or
into
outsl
or
add
invd
xchg
pop
fsub
dec
mov
nop
test
adc
clc
mov
pop
adcb
jo
hlt
mov
xor
sub
adc
push
or
xor
lahf
outsl
lcall
mov
pop
mov
stc
mov
xchg
adc
pop
insl
add
les
fidivl
mov
sti
xchg
mov
add
fwait
cwtl
or
cmp
ds
test
mov
cmp
in
int
or
fmul
mov
loopne
outsb
sbb
rolb
repnz
cmp
inc
mov
adc
sbbb
int
popf
jmp
out
mov
cmc
ret
jnp
outsb
or
out
dec
fimull
les
push
and
addr16
inc
loopne
stos
adc
sti
cld
mov
std
xor
jle
subl
inc
cmp
jne
push
orb
mov
in
sub
fwait
sbb
imul
xor
cli
bound
cwtl
dec
scas
shll
mov
lahf
add
mov
mov
mov
jl
adc
and
inc
rcll
fnstcw
ret
add
dec
add
lods
pop
mov
mov
scas
lea
push
sbb
in
push
cmpsl
bound
pop
lcall
xchg
popa
call
mov
aaa
jb
fdivr
mov
pop
inc
repnz
outsb
cld
pop
rcll
loop
into
outsl
mov
sbb
mov
pop
ss
out
mov
rcr
das
mov
or
mov
pop
jns
sub
cmp
sbb
and
int
sbb
fsubl
pop
dec
pop
lcall
fistps
cmpsb
cli
pop
shll
mov
mov
fdivr
mov
pop
push
jns
add
mov
les
arpl
movsl
xchg
xchg
dec
lea
test
inc
pushf
fisttpl
mov
adc
xchg
pushf
scas
adc
dec
xchg
jecxz
mov
inc
shrl
push
test
rorl
mov
jnp
add
outsb
mov
aam
dec
mov
adc
mov
sub
jle
imul
pop
sarl
add
mov
add
mov
test
dec
and
movsl
shll
adc
fcmovb
sub
push
push
and
push
aas
inc
clc
or
inc
sbbl
dec
sbb
pop
pop
out
js
sbb
in
mov
popf
mov
test
lcall
xor
nop
insl
mov
outsl
test
aad
fnstcw
jno
arpl
mov
mov
in
xor
pop
push
push
push
fmul
adc
mov
loopne
sbb
cmp
fisttpl
pushf
push
pop
insb
stos
lds
iret
mov
push
clc
push
or
mov
or
cmp
stos
int3
push
and
jnp
shrb
dec
shll
fcomps
inc
or
mov
cwtl
fsubl
subb
shll
aaa
das
fimuls
add
adcl
lds
add
jmp
fadds
sub
es
fdivs
js
fxam
jne
shll
xor
test
sub
bound
fcomps
adc
dec
or
and
mov
push
mov
jae
mov
mov
enter
cli
inc
add
sub
xchg
jmp
ret
jg
dec
cmp
and
mov
and
cmp
pushl
out
repz
fcomp
push
and
add
sbb
xor
mov
js
mov
jg
cmp
push
dec
daa
xchg
and
scas
stc
push
sub
outsl
add
cltd
movsb
hlt
push
cmp
fs
mov
inc
sbb
inc
dec
cmp
xor
jno
push
adc
in
jbe
jp
add
push
mov
and
lret
popf
or
push
or
mov
into
das
jno
cmp
jne
jns
xchg
lcall
jl
iret
ss
stc
add
fistpll
nop
pop
rcr
mov
push
xor
push
call
or
sub
jbe
push
lahf
adc
or
cltd
mov
in
stos
jno
jne
and
xor
cs
push
fsts
lret
test
insb
scas
push
jg
orb
xchg
and
push
inc
sub
fcoms
or
xor
fwait
iret
pop
mov
sbb
decl
fwait
pop
sub
or
arpl
xor
lea
sbb
popf
pop
adc
addr16
ret
repnz
movsb
out
pop
daa
xor
push
pop
fmull
cmc
fidivl
lock
out
leave
insb
outsl
sbb
adc
sahf
xchg
sub
rcrl
outsb
inc
mov
dec
adc
xor
lcall
add
loope
test
adc
shll
mov
ljmp
xchg
jmp
dec
lods
jle
je
sbb
fisubrs
test
imul
popa
les
sub
je
clc
dec
movsl
test
cmp
std
push
idivb
sub
out
add
lret
cmp
outsb
and
sbb
out
aas
fdiv
mov
or
bound
or
addr16
and
ljmp
out
pop
and
sub
jecxz
shrb
out
xchg
stos
sub
sub
dec
pop
cmp
imul
scas
dec
sub
inc
jge
aas
mov
sbb
cltd
or
push
mov
push
push
addb
and
or
mov
in
jmp
shlb
pop
mov
or
pop
sub
iret
loopne
mov
cmpl
adc
loopne
mov
jge
in
dec
xor
dec
imul
sbb
sub
inc
ja
inc
cmp
out
jg
fwait
scas
scas
cmp
xchg
mov
mov
ret
rcrl
sbb
adc
imul
sub
pusha
mov
imul
lcall
pop
dec
les
mov
cmp
xor
mov
fbstp
cmp
insl
mov
ljmp
or
outsl
jne
lret
lea
xor
cld
push
popa
sbb
sti
inc
jns
aas
jbe
movsl
in
adc
mov
push
or
test
inc
cmp
dec
in
jno
pushf
mov
and
cvttps2pi
mov
loope
jg
pushl
inc
rolb
int
loopne
inc
mov
aam
ss
mov
dec
inc
sar
nop
test
lret
nop
jnp
add
or
xchg
iret
add
cmpb
add
push
cld
and
aam
sbb
ss
mov
scas
sarb
clc
int3
jl
adc
das
mov
insl
lcall
push
roll
ds
fbld
filds
cmc
cltd
sarl
push
adcl
aam
call
leave
stos
pusha
cmp
dec
pop
xlat
xchg
push
insb
outsl
je
gs
pop
idivl
std
jns
cmp
mov
dec
popf
outsl
xor
inc
sbb
lea
stos
incl
inc
cmp
call
out
addr16
mov
adc
or
aam
adc
aaa
jecxz
repz
std
xchg
ds
jp
repz
mov
icebp
jbe
xchg
and
mov
pop
out
inc
in
into
scas
into
sub
jmp
scas
ja
and
ret
mov
outsb
cmp
ljmp
cli
or
dec
ficomps
xlat
push
and
mov
push
mov
clc
add
push
inc
sysenter
dec
pop
clc
pop
int
je
daa
out
push
rcl
rclb
in
arpl
or
fbld
addr16
xor
in
mov
fs
push
inc
inc
xor
pusha
push
or
add
gs
push
xor
mov
scas
mov
imul
add
into
pop
ret
xchg
lds
jl
into
pusha
xlat
add
fldt
pop
orb
int3
mov
outsb
dec
xor
hlt
not
in
adc
mov
mov
int
das
fimuls
cltd
jle
int3
pop
cmp
sahf
dec
ljmp
ljmp
mov
mov
mov
mov
aad
mov
cmp
fwait
lods
pop
xchg
adc
sti
and
loop
fld
sbb
int3
jg
mov
mov
les
imul
repz
jmp
sbb
push
jp
imul
cmp
jp
in
idivl
cmpsl
and
fldenv
dec
into
fdivrs
sarb
or
dec
mov
push
jecxz
daa
int
cltd
jnp
fiadds
adc
clc
pmaxsw
mov
cmp
iret
xchg
into
dec
je
mov
inc
jle
dec
mov
xor
outsl
fs
adc
jbe
jmp
nop
add
push
cmp
sub
cmp
arpl
sub
add
js
fsubrs
shl
hlt
mov
xor
jb
sub
or
les
add
das
dec
xchg
sarb
xchg
shrl
push
movsb
or
sbb
mov
xchg
jle
sbb
cmp
add
pop
jb
pop
mov
inc
pop
adc
jb
arpl
xor
imul
mov
xchg
push
dec
xchg
in
jl
pop
inc
addr16
loopne
dec
inc
lock
pop
fneni(8087
clc
fld
dec
popf
xor
data16
loope
adc
outsb
mov
loop
add
mov
jnp
shll
jl
push
scas
dec
negb
pop
adc
cs
xchg
cld
gs
out
mov
inc
cmp
lret
mov
pop
rorl
adc
or
fcmovnbe
or
iret
add
mov
sar
lods
jecxz
inc
sbb
into
mov
or
jb
not
push
loop
iret
inc
add
pop
push
push
mov
push
mov
test
jno
ljmp
hlt
pop
fidivrl
in
xchg
add
fldenv
addb
les
inc
in
mov
negl
addb
ret
aas
aas
idivb
cli
fs
mov
les
std
mov
stos
add
stos
lods
xchg
rol
xor
loop
iret
jb
sbbb
cmp
push
mov
int
cmp
or
faddl
mov
pop
mov
jno
or
aad
bound
dec
out
cmp
loop
pop
sbb
xlat
jmp
imul
cmp
arpl
mov
sbb
sub
test
movsb
bound
ja
cmpsb
rcrb
push
test
cltd
mov
pop
inc
lock
sub
dec
add
mov
jne
dec
shrb
xchg
push
mov
mov
push
jbe
aas
lret
mov
mov
clc
or
cmp
xlat
mov
jno
lea
out
cs
mov
mov
jb
mov
fisttps
pop
or
push
sahf
adc
shlb
sbb
hlt
and
repnz
dec
pop
lods
pop
leave
add
adc
mov
scas
cmp
jno
je
scas
cltd
xor
mov
out
inc
xor
mov
xor
cmp
popf
or
adc
out
into
add
test
xor
xchg
mov
push
mov
lds
stos
js
mov
inc
shlb
push
and
add
mov
xchg
jle
sbb
das
imul
add
pop
ret
pusha
shll
dec
sbb
enter
adc
sub
xchg
inc
push
int3
sbb
xlat
push
xchg
xchg
xchg
sub
out
arpl
aaa
xor
pop
out
sub
fdivrp
add
mov
in
stc
mov
mov
mov
in
data16
pushf
in
lods
in
xor
push
shlb
push
mov
pop
ret
jecxz
mov
xorl
sbb
xor
mov
mov
shrb
add
jns
in
in
push
xlat
mov
xchg
fiaddl
sub
sbb
das
test
xor
mov
mov
cld
outsb
fistpll
clc
cli
adcb
push
repz
aam
mov
gs
nop
mov
or
adc
popf
and
adc
dec
icebp
std
outsb
rcl
leave
xchg
mov
loope
mov
mov
mov
cmp
gs
or
pop
mov
xor
pop
jl
fwait
mov
mov
jl
mov
aam
iret
jmp
fdivs
cmp
insb
mov
popa
out
fistpll
ret
jp
lcall
js
arpl
dec
movsb
lahf
push
bound
or
xlat
rol
ret
sbb
lods
mov
aas
and
or
sub
out
outsb
inc
pop
mov
dec
jns
add
fstl
or
inc
pop
mov
mov
pop
mov
cmp
push
mov
mov
adc
in
jb
outsb
jne
ss
fcomps
scas
addr16
push
mov
and
std
sub
das
cltd
mov
cltd
or
in
shlb
je
ss
dec
movsl
xchg
mov
add
lret
in
js
pop
pop
cmp
xor
in
fbld
and
sbb
fnsetpm(287
pop
push
aam
dec
mov
ja
fiaddl
jnp
cs
push
les
cmp
push
jg
sbb
data16
movsb
xor
out
xor
xchg
test
aad
cmp
sbb
and
xchg
std
icebp
cltd
xchg
inc
xor
sub
pop
jnp
addr16
enter
adcb
stc
sub
mull
sub
xchg
aas
repz
mov
inc
sub
mov
pop
or
push
and
cmc
je
or
and
ljmp
inc
inc
mov
cmp
adc
sub
dec
xchg
inc
movsb
movsb
mov
imul
fstps
inc
lea
fucomi
and
sub
out
out
dec
sti
adc
popa
incl
ljmp
xchg
lods
cli
rcrl
out
scas
movsb
leave
mov
das
jb
enter
loope
inc
sbb
cwtl
pop
int3
pop
xchg
test
je
xchg
or
in
ficomps
sub
loopne
mov
outsl
lret
add
dec
jbe
fidivrs
add
cmpsb
daa
dec
gs
sbb
or
xchg
in
enter
inc
nop
dec
sub
dec
pop
mov
sbb
jmp
test
push
lods
jne
negb
fidivrl
push
push
xor
jnp
pop
push
int
inc
cmc
in
aaa
push
repz
xchg
and
xor
adc
cmpb
adc
adc
adc
test
pop
into
repz
adc
aas
lods
nop
mov
nop
lods
fld
insb
mov
pop
mov
xor
mov
xchg
dec
stos
mov
imul
loope
lods
rclb
jae
leave
jnp
jle
dec
sub
mov
sub
jno
lret
adc
mov
push
pop
xor
jecxz
jmp
jp,pt
push
aad
rorl
es
fistpll
addr16
xchg
scas
test
ret
shll
aaa
mov
push
sub
pop
lret
mov
dec
adc
push
mov
ljmp
repnz
dec
push
clc
xchg
xchg
push
xchg
push
stos
ret
mov
cmp
fwait
adc
add
and
xchg
movsl
test
mov
les
dec
xchg
add
xchg
ds
ud0
lods
jnp
lret
lods
inc
mov
push
cmovg
fldcw
add
pop
stos
mov
mov
sub
div
inc
sbb
xor
test
adc
jno
xchg
cmpsb
add
adc
shrl
sbb
sti
gs
sub
xchg
mov
sar
mov
movsb
rorl
cmp
mov
in
mov
sbb
fmull
jge
sub
pop
pop
or
pusha
sbb
int3
in
jno
xor
lret
sub
in
mov
and
dec
dec
hlt
addr16
xchg
out
fs
sub
inc
iret
enter
jle
adc
jnp
repnz
aad
loope
aam
call
cwtl
stos
or
and
bound
dec
ss
sbb
bound
cmc
cmpb
fwait
dec
xchg
ret
pushf
add
scas
and
sbb
pop
lret
ss
jmp
add
adcb
mov
mov
pushf
lock
es
iret
push
or
lret
mov
xchg
ja
dec
mov
sbb
inc
lods
xor
adc
sub
sub
cmc
enter
inc
shlb
sti
mov
movsb
sbb
sub
ss
arpl
addr16
mov
cmovp
scas
mov
lods
mov
xor
movsl
dec
ret
cli
scas
repz
shrb
cmp
pop
jg
jo
sbb
inc
mov
mov
fwait
int
lods
jmp
xchg
in
and
mov
xor
es
xor
jle
add
movsl
cmp
add
insb
sub
imul
push
and
mov
xorl
mov
push
adc
repnz
js
test
mov
lcall
and
xor
adc
xlat
pop
pop
add
lods
push
imul
cmpsb
mov
mov
mov
xor
mov
loopne
test
push
mov
cmp
div
mul
or
push
into
into
inc
sub
jbe
dec
add
sub
icebp
scas
dec
lds
pop
pusha
jge
nop
push
outsl
ljmp
xor
jns
inc
shll
mov
jecxz
xchg
pop
sbbb
xor
in
and
int3
sbb
cmp
xor
es
pop
in
and
pop
inc
push
xchg
cmp
inc
dec
mov
or
adc
xchg
cmp
popa
clc
or
lock
mov
popf
mov
add
xor
inc
mov
out
push
popa
or
sub
sub
sbb
outsb
std
or
sahf
adc
daa
push
sbb
dec
test
aaa
push
xchg
imul
sbb
or
mov
sbb
sub
lods
cmp
xlat
cmp
xchg
sti
push
addb
sbb
push
je
xchg
fdecstp
jne
lods
das
jb
lahf
mov
dec
sub
add
inc
add
pushf
cwtl
loopne
hlt
sub
clc
scas
add
add
jb
cmpsl
nop
and
or
mov
movsb
xor
enter
adc
cmc
add
xlat
insb
push
enter
in
hlt
rcll
movsb
mov
jnp
inc
add
jecxz
dec
add
outsl
push
mov
sub
notb
jmp
stos
pop
inc
aam
out
cmp
mov
jle
ljmp
in
push
cmpsb
xor
sub
mov
dec
clc
data16
testl
jg,pt
dec
sbb
cmp
pop
pop
cmpsl
inc
inc
mov
leave
jbe
fldl
and
ret
ss
xor
push
fists
mov
leave
fidivs
cld
lret
or
add
xor
out
and
sub
mov
jmp
out
cltd
sub
lret
pushf
push
mov
xchg
jb
loopne
push
lea
dec
data16
or
aas
inc
dec
cltd
mov
insl
out
mov
cmp
xchg
pushf
fldenv
mov
and
push
in
add
roll
lahf
sub
adc
iret
pop
es
mov
aad
sub
mov
inc
pop
addr16
jno
ret
cs
mov
xchg
mov
mov
ja
jle
popf
inc
lds
cli
test
mov
lods
ret
cmp
movl
roll
xchg
movb
stos
sub
jb
mov
in
shrl
cli
aad
dec
loope
mov
pop
stos
out
add
idivb
inc
pop
push
xor
mov
lods
inc
mov
rolb
sub
adc
dec
push
xchg
push
xor
out
shl
inc
test
into
cmc
icebp
mov
cwtl
or
xchg
out
sahf
push
into
negl
adc
push
int
fnsave
cmc
call
call
pop
xor
es
pop
add
cwtl
loop
roll
arpl
ret
daa
stos
in
ret
and
sbb
adc
xchg
inc
cwtl
push
sbb
dec
imul
in
cmp
dec
jmp
xchg
dec
jae
or
adc
or
leave
shl
jno
xchg
dec
adc
lods
mov
or
fildll
pop
xor
xchg
cmpsl
call
cmpsl
push
mov
inc
mov
cwtl
mov
mov
inc
and
xor
xchg
add
push
pop
test
out
or
adc
inc
fs
mul
sahf
jb
fstpt
inc
push
inc
popf
cmpsb
mov
jl
out
xchg
mov
pushf
xor
or
add
sub
rep
push
xchg
ds
add
clc
lods
stos
mov
std
scas
das
std
orb
ret
add
xor
xchg
leave
lret
pop
jno
lods
cwtl
sbb
sub
mov
aas
dec
ds
push
sub
xor
aaa
inc
addr16
xlat
or
xchg
popa
cmp
test
add
fs
pop
scas
pop
test
mov
inc
mov
xchg
xchg
imull
mov
lret
dec
inc
popa
cmp
rclb
and
add
stos
pop
icebp
scas
inc
and
sub
xlat
mov
xchg
out
sbb
pop
xchg
outsb
mov
ljmp
sub
je
mov
repnz
push
mov
sub
insl
mull
adc
add
rclb
cmpb
div
ret
cmc
xchg
jb
pop
sbb
or
or
loope
movsl
ds
cli
and
dec
push
fs
inc
popf
shl
inc
fsubr
adc
pop
and
pop
out
out
add
sub
jno
outsb
int3
test
inc
loope
ljmp
push
dec
cmp
mov
inc
sub
push
pop
sbb
fidivs
loopne
aas
jo
pushf
dec
and
into
pop
pop
cs
cli
divb
lcall
inc
shll
push
mov
sbb
call
into
aam
fsubs
aad
mov
inc
stos
cltd
mov
pop
stc
scas
mov
lods
dec
je
test
mov
sbb
shr
pop
mov
mov
sahf
scas
int3
and
mov
push
xchg
mov
addr16
mov
fisubrs
repnz
push
pop
add
mov
inc
sub
mov
in
cmpsl
xchg
pop
int3
sbb
loop
mov
ljmp
pop
push
fmul
cmc
lcall
sbbb
and
add
sub
push
fsubp
push
int3
xor
add
sbb
dec
sete
je
addr16
mov
dec
pop
add
xchg
pop
xchg
arpl
xor
xchg
sbb
sahf
mov
jb
scas
or
inc
insl
movsb
es
popa
xor
mov
mov
mov
leave
in
and
mov
xor
sbb
cmp
xor
je
shlb
dec
push
std
sbb
imul
cmp
mov
cmp
xchg
les
lods
lods
js
or
addr16
inc
mov
stc
xchg
lret
sub
insb
cwtl
clc
fisttpl
stos
jle
ret
out
push
and
in
imul
adc
sbb
xlat
popa
jne
dec
sahf
add
mov
pop
dec
mov
pop
inc
push
add
sbb
popa
fildl
push
adc
int3
inc
popa
insb
pop
push
sub
pop
andl
and
add
sbb
hlt
lock
pushf
stos
and
cmp
mov
inc
bound
cmc
inc
movsb
fsubrl
sti
pop
pop
xchg
push
jle
in
cs
movsb
jmp
and
xlat
jns
das
jp
add
sub
xchg
or
or
adc
mov
lea
movsb
push
out
outsl
mov
pop
and
or
dec
push
push
mov
jbe
fistpl
or
int
ds
jmp
icebp
lds
adc
mov
lret
mov
decl
xor
sbb
pop
insl
pop
mov
pop
out
mov
daa
dec
cwtl
cmp
dec
pop
push
loope
push
inc
insl
pop
jp
push
mov
test
push
mov
xor
es
aaa
adc
je
push
fwait
pop
movsb
jno
adc
je
data16
loopne
xchg
cmp
addb
jl
cld
mov
outsb
pop
inc
ss
adc
jge
push
jne
mov
cmp
xor
arpl
icebp
aam
repnz
inc
test
sti
popf
subl
xor
sti
orb
loope
stc
jae
dec
push
inc
faddl
pop
inc
fs
adc
ljmp
adc
push
push
cmc
sub
mov
nop
out
push
cltd
mov
push
iret
xchg
xchg
xchg
sub
lahf
cmc
or
out
dec
loopne
mov
int
imul
and
pop
xor
aad
adc
in
std
push
scas
mov
stos
addps
test
or
push
mov
lea
cmc
xor
mov
pushf
cmp
pop
in
mov
pusha
inc
mov
fidivl
dec
cmpsb
mov
adc
mov
xor
incb
xchg
dec
iret
dec
pop
fbld
xor
or
hlt
push
mov
xor
jmp
ja
ds
dec
dec
jmp
dec
sub
scas
stos
je
aad
ds
pop
adc
sub
and
stc
int3
addl
in
jge
pop
lret
push
insb
push
xor
mov
xchg
cmp
test
aam
mov
gs
inc
jno
xorb
rcrb
dec
jl
pop
mov
adc
ret
negb
cltd
cmp
add
adc
sti
dec
add
jnp
sbb
ret
cs
lds
cld
pop
push
bound
push
mov
jnp
popf
or
xlat
aad
decb
xchg
xlat
push
in
sub
out
ja
fldenv
aam
jbe
mov
dec
in
lods
lods
mov
daa
mov
jmp
test
fmull
sub
sub
sbb
arpl
sbb
ss
cmpsl
mov
scas
pop
or
pop
pop
add
cmc
cmp
inc
push
and
xchg
push
mov
mov
test
mov
inc
jg
addr16
lods
je
in
push
add
jl
scas
daa
sub
pop
fistpl
cmp
pop
jp
jg
mov
mov
mov
push
pop
dec
addr16
loopne
xchg
xor
pop
loopne
xor
data16
cwtl
mov
daa
xchg
ret
mov
in
inc
sahf
popa
sbb
xor
push
sti
cltd
addl
xchg
dec
movsl
int3
ss
push
shrl
fildl
pushf
or
test
scas
popf
adc
sub
into
jecxz
in
and
dec
pop
cli
sarb
aad
dec
jge
jle
mov
lods
sti
les
mov
pop
lahf
cwtl
mov
cmp
dec
int3
popf
cmp
sbb
lods
sbb
fsubl
out
je
mov
mov
mov
cmp
jns
inc
sub
inc
mov
adc
mov
mov
add
add
ja
test
shrd
insb
jne
mov
fmull
mov
out
sahf
sub
out
pop
icebp
loopne
sub
cld
lock
sbb
rorb
popa
mov
and
inc
lods
push
jge
and
hlt
imul
insb
sarl
xor
leave
cmp
test
rorl
xchg
or
bound
lock
mov
idivb
int3
jecxz
lahf
in
stos
ja
add
js,pt
pop
dec
or
out
jbe
bound
fstps
jecxz
sahf
movsb
jle
das
cmp
rclb
mov
push
js
out
fsubr
sub
scas
dec
mov
adc
and
mov
cld
lods
dec
stos
clc
pop
mov
addr16
bound
test
cmp
mov
leave
repnz
or
xor
in
cs
jl
dec
jg
jecxz
cmp
mov
imul
mov
dec
bound
in
imull
lea
arpl
xchg
pop
cmc
andl
popa
push
dec
incl
lods
xchg
idivb
sbb
sbb
mov
mov
xchg
sbb
orb
outsb
lds
faddl
sbb
loop
sub
mov
flds
mov
lcall
adc
dec
jecxz
outsb
mov
pop
sbb
inc
lahf
stos
push
mov
add
push
adc
mov
pop
add
ret
mov
pop
jno
jl
cmp
loop
pop
cli
mov
leave
cmp
and
mov
inc
push
xor
repz
fwait
xchg
loop
adc
or
mov
dec
mov
lock
cmc
insb
daa
das
jge
inc
mov
add
cli
mov
fistps
mov
add
cmp
dec
cmp
mov
or
add
xor
movsb
sbb
shl
scas
int
sete
jmp
mov
cmp
loop
cmpsl
andb
lret
xchg
cmpsb
pop
adc
lcall
loopne
pop
test
iret
cmpsl
cmp
adc
inc
mov
jmp
jmp
mov
mov
jb
dec
pop
pushf
push
pop
inc
or
sub
aam
inc
rcrb
push
mov
xor
stos
mov
fcoms
shlb
fildl
sbb
cmp
adc
xor
mov
outsl
cmp
pop
adc
and
bound
push
xchg
sbbb
gs
inc
jge
add
xorb
inc
lods
les
es
in
or
fstps
xchg
lods
ret
in
cli
adc
sbb
adc
mov
jbe
cmp
add
test
pop
fwait
rcrb
imul
mov
and
xor
add
dec
mov
loop
cmp
orl
ljmp
daa
adc
test
push
push
pop
xchg
mov
pop
loopne
jle
mov
and
mov
inc
mov
fdiv
into
adc
cltd
sbb
dec
xor
and
lds
or
sbb
test
aaa
out
or
rcrb
lahf
enter
dec
mov
xchg
cmp
test
inc
pop
and
fs
repz
fidivs
jno
pop
clc
repnz
lret
mov
leave
rorl
mov
arpl
movsl
into
jne
cmc
cltd
xlat
jbe
adc
imul
pop
fwait
push
ljmp
movsb
test
xor
sub
dec
and
jo
adc
aam
jns
pushf
and
mov
dec
pusha
sub
fsubl
or
xor
jle
xchg
aad
xor
clc
cmp
cmpsl
cmp
xchg
xor
mov
out
jg
int3
push
jns
mov
arpl
push
mov
cmovg
xor
sbb
cmp
mov
mov
dec
addr16
popa
addr16
cs
mov
add
cmp
mov
add
ss
stos
mov
mov
loopne
fistpl
les
inc
jbe
dec
mulb
daa
lret
fcomp
cmpb
int3
inc
sub
out
adc
inc
xorb
bound
push
xchg
mov
or
push
jmp
or
popa
out
push
dec
pop
or
mov
test
push
stc
call
nop
lds
data16
cmpsl
jbe
push
leave
inc
aas
rorl
pop
cs
repz
mov
inc
and
and
inc
push
test
or
aas
inc
sti
sbb
scas
jne
dec
mov
mov
dec
popa
leave
pushf
es
shr
mov
sub
lea
pop
jnp
es
jl
or
call
xchg
and
inc
push
lcall
sahf
jo
jno
add
jg
push
jb
lcall
lahf
lock
xchg
movsl
xchg
fsubrl
pop
cmp
hlt
push
shl
dec
ja
pop
or
push
mov
cld
adc
sbb
xor
out
or
push
push
or
stos
sbb
cs
lret
jge
data16
mulb
scas
jne
cwtl
lods
jle
adc
leave
xchg
adcl
lds
shrb
loopne
add
adc
pop
das
jb
push
cmp
std
jmp
ret
pop
ja
sub
jno
je
clc
repz
sahf
sbb
lods
adcl
mov
lods
dec
mov
dec
inc
xchg
es
cli
popl
inc
int
lods
lods
sti
aad
push
cmovge
shlb
adc
adc
popl
push
pop
lds
add
lcall
push
popf
adc
outsb
popf
insl
inc
adcb
jg
dec
sti
rclb
mov
push
push
push
jmp
pop
dec
out
lret
mov
bound
cs
mov
sub
in
sub
pop
pop
cmp
stos
or
xchg
cs
dec
lret
or
jne
push
enter
inc
add
js
ficoms
fisubs
stos
mov
out
pop
pop
mov
xor
pop
stos
mov
fists
out
and
fnstenv
cmp
aam
shlb
inc
sbb
xchg
test
fstpt
push
leave
mov
test
sub
inc
jno
sbb
js
fisubl
out
mov
pop
popa
ds
mov
idivl
push
insb
xchg
push
test
mov
cmp
xchg
push
enter
in
mov
out
cld
inc
adc
pop
xchg
or
push
loopne
sub
sbb
mov
inc
mov
jg
pusha
and
mov
rcrl
xchg
in
mov
jne
push
or
xchg
and
pop
adc
ds
push
dec
std
mov
lods
leave
imul
test
mov
mov
in
in
into
xchg
scas
insl
les
repnz
sti
inc
or
stos
jmp
arpl
fdivrs
mov
stos
lret
imul
add
add
add
dec
jbe
js
rcl
dec
lods
dec
clc
push
cmp
scas
shlb
dec
jl
mov
sbb
sbb
sub
pushf
into
mov
imul
test
repz
xor
sar
inc
stc
std
fcmovnbe
nop
int
cmpsl
outsl
dec
cmp
jno
je
call
xchg
imull
enter
sbb
pop
mov
dec
pop
cmp
bound
mov
mov
idiv
repz
cmp
adc
lret
imul
and
mov
stos
dec
xor
mov
pop
add
jmp
mov
xchg
pop
cli
push
out
mov
pop
outsl
hlt
dec
mov
mov
and
movsb
ds
nop
sub
je
or
mov
mov
push
mov
xor
loopne
notb
dec
or
adc
or
pop
loope
out
aad
mov
stos
testb
or
lret
fmull
jne
add
jg
and
das
jge
xlat
mov
sbb
inc
and
pop
test
in
xor
cmp
inc
adc
shlb
shll
xchg
mov
cmpsl
loop
xor
sti
test
lods
jns
xor
shrl
dec
mov
inc
int
cli
or
lds
xor
add
fistpll
hlt
xor
push
loope
bound
mov
lea
jmp
xchg
adc
or
mov
push
pushf
int
test
lea
aad
push
aas
in
adc
out
inc
iret
out
push
sarl
ds
in
roll
dec
inc
ficoms
ret
sahf
xchg
imul
rcll
test
sbb
icebp
push
xchg
adc
inc
je
sbb
lahf
xor
pop
sbb
jl
leave
push
rorb
add
in
xchg
sahf
jg
jns
mov
adc
enter
hlt
jbe
push
jnp
xchg
and
or
and
lods
sbb
xor
icebp
mov
insl
mov
insl
subb
and
and
mov
scas
or
iret
dec
sub
ret
and
or
pop
push
mov
cltd
insb
mov
xor
xor
fwait
sbb
sbb
lods
repz
or
push
addb
movsb
sub
test
cmpsl
in
mov
shrb
ljmp
xor
cmp
fildll
icebp
push
call
subl
mov
or
pusha
xchg
mov
add
iret
aam
mov
insl
cmp
movsb
xchg
push
repnz
mov
scas
adc
fwait
or
or
push
inc
icebp
gs
push
dec
stos
loop
cmc
test
mov
dec
ss
ret
fcmovnb
pushf
xor
sub
xchg
jge
adcl
lcall
mov
es
lods
in
or
and
mov
push
adc
add
cmpsl
test
push
outsl
nop
pop
mov
push
jbe
push
and
jns
xchg
andb
and
loope
or
insb
push
cltd
cmp
inc
and
orb
add
lods
or
mov
dec
add
mov
jno
fs
aaa
rcrl
jne
insl
jp
sarl
mov
jae
xlat
mov
add
sub
imul
cli
inc
and
pop
jae
insl
fimuls
push
scas
loopne
and
xchg
jl
fisttpll
mov
and
fwait
test
rol
sub
in
xor
aaa
mov
test
neg
mov
pop
cltd
sub
adc
or
mov
mov
data16
xchg
cmp
bound
mov
stos
dec
adc
int3
js
lods
or
shrb
and
popa
rclb
leave
call
xchg
bound
js
enter
push
lods
arpl
rol
lcall
mull
add
dec
rorl
adc
push
and
inc
loopne
popf
fnstsw
add
xchg
sub
mov
add
fidivrl
sub
mov
adc
outsb
cmp
nop
sbb
pop
mov
loopne
sbb
popa
xor
xor
shr
mov
or
mov
pop
test
pop
imul
mov
cmovno
popf
daa
adcl
xchg
mov
movsl
std
stc
addr16
push
xor
xchg
mov
fistl
sbb
inc
rcrb
sbb
sbb
dec
inc
iret
aaa
andb
pop
in
or
fsubl
bound
rolb
mov
fiaddl
mov
jg
scas
xchg
xchg
lcall
sbb
and
and
dec
je
in
and
ror
jo
sti
pusha
rclb
push
mov
lret
push
arpl
xchg
or
loopne
in
outsl
inc
mov
add
pop
mov
and
push
insl
push
enter
jle
xlat
xchg
lahf
adc
mov
je
in
adc
call
or
xor
fisttpl
jmp
cmp
mov
and
push
mov
fsubs
pushf
dec
or
test
fwait
pmaxsw
cmp
test
jg
cmovl
lret
mov
fs
rcll
inc
jo
cmp
loopne
out
adc
shr
mov
in
inc
mov
in
jge
das
jbe
je
pop
xchg
mov
add
xchg
xchg
loop
cmp
inc
mov
push
gs
lods
mov
movsl
scas
dec
mov
sbb
shrl
push
mov
add
inc
dec
sub
das
or
dec
mov
inc
repnz
mov
jecxz
lea
cmpsl
std
lods
subl
jnp
and
jns
sahf
mov
data16
lods
xor
inc
push
mov
dec
pop
and
xchg
loope
fstpl
movsl
loop
fdivl
insl
push
inc
mov
iret
cmp
jnp
jmp
icebp
aam
lcall
fdiv
imul
ja
mov
adc
lods
in
std
mov
pop
decb
dec
adc
arpl
or
inc
or
lahf
loopne
sub
jmp
dec
lret
lods
jl
out
cmpb
repnz
sub
xchg
pop
dec
fildl
and
mov
dec
testl
call
push
push
inc
dec
push
nop
adc
imul
sahf
cmp
push
movsb
faddp
test
adc
insb
idiv
cmc
shl
loop
mov
popa
pop
jbe
push
pop
adc
popa
push
and
cmp
xchg
idivb
mov
cmp
jae
lock
scas
aas
das
inc
icebp
leave
ljmp
out
xchg
sub
or
pop
not
xor
dec
decl
cmp
or
clc
in
shll
xchg
ds
push
pop
adc
fwait
outsb
jmp
sub
add
mov
add
xchg
test
dec
push
and
adc
fnstcw
sahf
fdivrl
rcrl
mov
std
clc
cld
add
xchg
data16
xchg
sbb
mov
adc
ljmp
je
and
dec
xchg
push
add
aam
xchg
movsl
iret
adc
mov
mov
mov
dec
add
add
jnp
adc
mov
imul
and
jne
fld
jmp
mov
sub
inc
stc
mov
test
add
outsb
jg
sahf
or
fs
sbb
data16
movsb
xchg
push
orl
push
mov
or
adc
push
sub
or
jmp
mov
imul
mov
dec
sub
adc
mov
mov
insb
mov
xchg
inc
popa
mov
add
gs
pop
sbb
rclb
add
fwait
mov
lock
repnz
jmp
and
mov
test
into
in
add
sahf
fdivr
cmpsb
jae
mov
and
push
jns
idivl
out
movsl
arpl
adc
pop
sub
icebp
xchg
loop
cmp
push
jbe
data16
and
add
inc
push
in
js
jp
in
test
xor
xchg
sar
add
sti
lea
mov
pop
mov
fdivr
ret
push
sub
mov
jl
push
fs
fldt
stos
sbb
pop
mov
mov
pushl
or
je
mov
in
mov
sarb
lret
popf
outsb
in
cld
sub
push
mov
stos
push
jnp
outsl
mov
and
fcoms
daa
nop
sti
inc
dec
hlt
push
cwtl
js
jbe
or
cmp
mov
repnz
jae
ret
lahf
dec
loop
lods
pop
loopne,pn
adc
mov
jl
xorl
ss
adcb
jns
and
add
mov
push
mov
xor
imull
aam
js
enter
dec
push
ja
int
rorl
fisubrs
mov
xor
cwtl
addr16
fimull
sbb
stos
pop
stos
pop
popf
sbb
das
aas
jl
and
les
dec
sub
mov
ret
adc
lret
mov
mov
lahf
mov
test
or
icebp
std
xor
bound
inc
mov
cmp
mov
and
lret
jg
add
dec
mov
aad
bnd
mov
mov
fs
out
pop
xchg
pop
dec
and
icebp
xor
pop
leave
pusha
mov
sub
sub
cmp
lea
subl
mov
loop
push
mov
mov
or
arpl
cmpsb
cmp
sbb
inc
loop
faddl
fldenv
cs
xchg
xchg
and
push
lahf
into
fistl
cld
bnd
cmp
mov
out
xor
outsb
sbb
insl
imull
loope
xchg
and
cmp
in
cs
cmp
jp
dec
imul
sub
sub
inc
push
out
stos
mov
rorb
xor
roll
in
push
or
ret
ja
pop
loope
hlt
je
icebp
push
jmp
fs
xchg
mov
test
push
add
pushf
cmp
std
xor
push
or
pop
fbstp
add
push
lods
in
xor
pop
push
es
add
hlt
popf
out
je
popa
ljmp
add
icebp
inc
jle
push
sbb
or
pusha
pop
mov
mov
cmp
xchg
movsl
push
jge
mov
js
sub
frstor
addr16
pop
sub
in
movsl
sub
fwait
divb
and
or
pop
cwtl
push
xchg
mov
mov
nop
lea
stos
fidivrl
scas
adc
cmp
hlt
divb
mov
inc
in
repnz
out
jge
inc
mov
and
in
lret
insb
adc
ja
repz
mov
addl
pop
push
inc
sarb
mov
sahf
cmpsb
rcrl
pop
cmp
les
sub
arpl
testl
out
sub
and
push
test
jg
in
test
cmp
push
loop
sbb
sub
mov
imul
push
push
lret
or
leave
aas
inc
jl
push
xor
int3
inc
fistl
cwtl
xchg
sub
call
adc
dec
hlt
out
mov
or
movsl
jo
inc
or
and
xchg
push
mov
jg
scas
or
inc
vprotq
sub
in
xor
out
test
mov
loopne
subl
stc
push
push
nop
inc
lret
repnz
pop
out
idivb
mov
daa
fidivl
call
lock
mov
cmp
mov
cmc
les
or
cmpb
clc
leave
daa
sahf
sub
pop
aam
or
mov
sub
aaa
pop
scas
je
cmpsb
xchg
in
cmp
orb
iret
test
xor
shl
mov
or
xchg
sbb
enter
sbb
movsl
test
lods
mov
mov
xor
add
inc
loop
js
sub
mov
xchg
repz
xor
enter
add
dec
rol
push
cmpsl
imul
xchg
mov
xor
adc
xlat
dec
mov
popa
lods
in
jecxz
das
sub
int
jbe
mov
sub
mov
mov
lcall
cmp
inc
or
std
push
xor
sbb
push
sahf
rolb
cmpsl
adc
lods
push
add
sub
push
jmp
dec
inc
mov
mov
dec
les
hlt
std
jg
cmp
gs
and
stc
mov
shrl
sti
cmp
ds
hlt
cs
pop
dec
lods
cmp
sahf
inc
add
mov
lods
inc
pop
adc
adc
pop
outsl
orl
jb
cmc
jns
fmuls
mov
xchg
mov
mov
imul
js
dec
aam
fsubp
inc
loop
sti
push
mov
add
xchg
jmp
xor
or
sbb
out
push
mov
int3
cmpsb
mov
loop
fsubs
mov
push
sarl
push
sbb
je
bsf
mov
mov
push
pop
int
stc
pop
lret
mov
jbe
cmp
add
push
dec
sahf
mov
and
popa
sarb
out
jbe
mov
out
dec
cli
sub
test
mov
pop
imul
aad
push
cmp
fistpl
movsl
xor
leave
arpl
cmp
insb
mov
or
jbe
mov
jecxz
sub
sbbl
jl
or
cmp
loopne
out
mov
push
aaa
call
inc
xor
aaa
jp
pop
jmp
lods
mov
std
cltd
stos
addl
push
popl
std
test
std
in
pop
jl
cmp
cld
test
lret
push
clc
and
dec
xchg
xchg
aaa
out
out
insl
fidivs
lcall
push
into
and
jg
data16
sbb
sahf
test
mov
loopne
jl
pop
add
into
sahf
shl
cmp
es
mov
fwait
jnp
dec
out
dec
out
xchg
iret
jg
xchg
jg
mov
or
or
add
ja
inc
mov
adc
push
add
lods
inc
mov
cltd
xor
and
lcall
pop
mov
pop
push
lahf
jge
jp
mov
dec
pusha
mov
cmpsl
das
xchg
andb
lock
inc
js
sahf
push
mov
push
stos
pop
sahf
or
sub
jge
ror
mov
aaa
addb
insl
subl
pop
jbe
imul
add
das
xor
in
inc
xchg
push
loope
and
xor
cmc
js
hlt
imul
inc
loope
sbb
sub
dec
cmp
cmpl
mov
loop
push
jl
push
mov
shlb
cmp
push
and
and
mov
mov
and
mov
push
imul
push
lahf
jl
xchg
sbb
push
cli
mov
loop
pop
cmp
ror
ret
sbb
fdivs
mov
push
and
lcall
sti
cmp
xor
pusha
popa
dec
mov
mov
insl
arpl
add
lods
and
xor
xchg
popa
dec
push
xchg
fsubrs
out
dec
imul
jo
add
lods
pop
ds
iret
sub
add
je
mov
mov
xlat
sbb
imul
fildl
mov
dec
xchg
xchg
sbb
adc
test
jnp
sub
cmp
shr
lods
pop
idivl
xor
xchg
dec
pop
xchg
into
aas
mov
test
push
push
pop
jo
push
popf
sbb
push
push
push
sub
and
cmp
mov
mov
xchg
mov
jno
dec
adc
repz
out
sub
mov
les
cmp
mov
iret
sub
inc
sbb
adc
and
cmpsl
pop
pop
mov
jno
push
mov
int
cmp
arpl
xchg
jns
mov
ficompl
lods
mov
stc
shlb
sahf
adc
popa
dec
mov
push
mov
push
cltd
push
icebp
pop
loope
jno
daa
dec
fbstp
lea
pop
dec
push
test
rclb
inc
daa
or
mov
pop
hlt
icebp
imul
mov
push
dec
push
inc
cmp
xor
shrb
inc
xor
xchg
mov
adc
sbb
xchg
pop
jge
dec
aaa
cpuid
daa
mov
add
cmpsl
jp
mov
pop
dec
repz
dec
cmp
push
xchg
aaa
gs
and
scas
cld
jb
mov
jbe
jle
mov
pop
sbb
push
adcl
stc
test
call
int3
mov
std
int3
stos
lds
cld
aad
sub
ja
push
pop
imul
push
pop
pop
jecxz
mov
push
add
mov
hlt
rcrl
scas
lret
test
dec
dec
xchg
ljmp
or
jo
pusha
loopne
or
inc
mov
xor
dec
xchg
inc
or
inc
imul
mov
xchg
lods
repnz
push
cmp
sbb
cli
addr16
sub
xor
cli
and
push
add
inc
mov
push
add
insb
or
mov
jp
notl
mov
inc
fs
mov
inc
in
mov
mov
loopne
test
sbb
scas
lods
pop
adc
pop
inc
in
lods
xchg
je
add
movsl
imul
aam
in
xchg
outsb
mov
sbbb
mov
inc
in
dec
jl
jecxz
or
rcll
out
mov
jge
test
lods
xor
add
negb
pushf
les
or
jbe
push
dec
pop
sbb
ffreep
pop
jbe
push
into
xor
mov
mov
xchg
sub
arpl
xchg
ret
pop
jmp
pop
ja
mov
xor
fdivrs
xor
sbbl
cmpsl
negb
pop
lret
mov
and
in
jne
mov
cs
loopne
mov
mov
and
cwtl
insl
movsb
add
pop
and
mov
or
cmc
mov
lahf
xor
push
outsl
imul
xor
mov
or
test
add
das
je
in
test
in
sub
movb
sbb
pop
inc
xor
mov
loop
xchg
jne
push
or
ja
push
imul
adc
jno
jbe
fnstcw
pusha
adc
idivl
aad
ss
mov
std
scas
dec
pop
dec
add
dec
xchg
push
test
mov
ja
pop
sbb
aas
or
jl
out
out
stc
popf
lret
sbb
movsb
stos
loopne
lods
popa
shr
mov
xor
ja
cmp
lahf
jo
push
mov
push
add
push
popf
xchg
add
push
in
ret
push
jne
andl
sub
repnz
xchg
test
lret
in
lret
je
jge
into
nop
xchg
sbb
adc
mov
mov
ss
int
daa
push
mov
and
dec
lcall
dec
inc
and
sbb
lret
call
push
aas
into
hlt
test
fildl
imul
in
xchg
int3
std
adcb
insl
adc
mov
mov
les
test
mov
test
add
daa
movl
incl
ds
sub
dec
fsubs
idivl
imulb
jns
sbb
jno
jns
hlt
cli
fbld
and
and
leave
and
mov
out
xorb
xor
sarb
xor
pushf
jns
cltd
mov
xor
popl
mov
leave
adc
cmc
gs
pop
push
rorl
loop
push
add
xor
les
push
adc
push
out
pusha
loopne
mov
sub
aas
enter
js
je
cld
pop
cld
adc
mov
adc
mov
cmp
out
dec
int
fcompl
popf
push
or
imul
test
fidivrs
add
cmp
in
and
cwtl
mov
pop
dec
stos
adc
aam
mov
je
cmp
iret
xor
mov
adc
aaa
push
xchg
loope
idivb
shrl
rcr
cmp
repnz
xor
push
fwait
push
mov
xor
sti
lods
rorb
jl
insb
mov
push
pop
imul
test
cmpl
inc
into
lods
dec
jns
jno
cmp
cld
out
je
fiadds
cmpsl
xchg
and
jmp
mov
inc
test
in
cmpsl
test
fcomps
sti
sub
jnp
mov
pop
sbb
loope
sub
int3
shrl
enter
dec
cmp
inc
and
ja
popf
sbb
sbb
movsl
lcall
les
cwtl
mov
push
imul
pusha
dec
popa
mov
lea
and
aad
pusha
shr
push
int3
mov
cltd
dec
sub
orb
sbb
xchg
push
ret
add
mov
add
push
pop
push
adc
jl
into
push
pop
call
xchg
xchg
xor
mov
mov
orl
jnp
icebp
dec
inc
dec
jb
mov
test
xchg
mov
shlb
jae
mov
pop
lret
les
adcl
popa
out
lahf
mov
lods
mov
cmp
lock
xrelease
inc
movsb
mov
mov
leave
jmp
imul
cli
push
pushf
repz
jle
or
fstp
out
cmpsl
jge
pop
inc
xchg
loopne
rcrl
stc
push
ja
or
arpl
add
ds
cmp
ret
lret
roll
push
jle
push
bnd
movsb
xchg
in
dec
clc
jb
mov
fdivrl
mov
daa
xlat
pop
add
jl
jbe
in
decb
jl
test
fwait
push
aam
sar
mov
xchg
add
rep
push
mov
repnz
mov
jle
jmpw
sbb
xchg
shlb
mov
and
pop
push
jne
subb
xchg
dec
cwtl
hlt
mov
pop
jbe
jmp
dec
inc
inc
sub
sahf
incl
std
xor
rcrb
arpl
jae
test
shrb
pop
fists
stos
add
lock
push
push
cmp
popl
popa
mov
and
xchg
and
mov
and
xchg
cmp
scas
rorl
fsubrs
out
sbb
je
les
xchg
test
ud0
add
push
fcoml
out
mov
test
inc
cmc
idivl
imul
xor
les
cmp
mov
cmpsl
into
call
cmp
inc
in
mov
test
sbb
cmpsl
jmp
jg
js
es
mov
cmp
mov
inc
xor
fs
push
push
inc
in
sbb
nop
push
lahf
dec
movsb
xor
cli
lods
mov
xchg
cmpsl
pusha
jmp
or
fwait
jmp
lock
mov
mov
outsl
fildll
int
imul
pop
mov
and
jl
push
xor
xlat
cmp
popa
jnp
icebp
dec
lds
xchg
ret
dec
ret
testl
stos
push
pop
cmp
insb
aaa
or
jl
inc
ds
popf
pop
xor
aad
dec
in
adc
repnz
mov
jmp
mov
adc
xchg
cmpsb
mov
lods
mov
rcll
out
add
mov
adcb
dec
mov
sub
fucomp
push
enter
mov
shr
xchg
jl
clc
push
sbb
sub
jge
lahf
in
in
add
sub
rcrl
shrl
pop
mov
sarb
fs
mov
sub
mov
cwtl
in
or
mov
filds
inc
loop
mov
out
scas
sub
popa
test
gs
push
imulb
dec
sbb
xor
mov
pushf
loopne
movsl
lcall
and
xor
icebp
lock
jnp
popf
int3
cmpsl
jns
mov
xchg
add
ficoml
or
in
arpl
outsb
imul
incl
and
inc
out
out
fdivrp
mov
xchg
sbb
sbb
adc
data16
adc
mov
fcmovnu
lods
mov
aad
out
lret
and
jle
test
dec
addb
mov
in
pop
xchg
jnp
inc
and
scas
ja
mov
es
pop
mov
inc
es
nop
arpl
lods
xor
sti
cmp
cmpsb
inc
push
jle
sbb
popa
push
mov
adc
inc
loop
pop
cmp
leave
mov
test
cld
jp
js
sbb
sub
xor
fmuls
xchg
fwait
dec
sbb
mov
dec
mov
sub
xchg
dec
mov
test
fwait
xor
push
sub
mov
scas
push
or
jl
mov
popa
sti
outsl
orl
pushf
pop
clc
sbb
repnz
adc
aad
aam
cld
cld
mov
dec
movsb
jg
pop
sub
leave
push
shrl
inc
jnp
sahf
aad
sub
dec
fcoms
jns
inc
in
stc
mov
in
ficoml
mov
jg
pop
pop
mov
and
pop
jl
mov
cld
mov
lock
fwait
in
fprem
push
and
lods
insl
push
push
mov
sub
mov
cs
notl
mov
insl
imul
loope
test
add
std
mov
mov
in
das
cmc
mov
push
pop
cltd
pop
xchg
pop
loop
in
cld
cmc
xor
jmp
sbb
gs
sahf
je
test
imul
add
fists
mov
jns
xchg
adc
fxch
mov
call
mov
sbb
jl
jno
pushf
pop
push
mov
or
movsb
ds
nop
inc
mov
repnz
sbb
jecxz
fimuls
scas
fidivrl
loope
xor
push
cmp
aaa
adc
sub
and
les
push
inc
pusha
inc
cmp
clc
idivl
push
xchg
call
pop
push
push
mov
mov
js
adc
cmpsb
jbe
scas
jmp
xchg
in
pop
shll
xchg
nop
mov
cltd
frstor
sub
jnp
leave
jb
mov
push
scas
outsb
push
xor
imul
data16
add
dec
inc
xchg
cli
xor
fnstenv
mov
and
jb
and
fistl
jnp
imul
mov
jae
test
cmp
sbb
push
call
mov
ret
bound
mov
insb
xchg
shlb
push
dec
lret
andl
mov
es
outsb
sub
lea
mov
mov
cmp
xchg
cwtl
loope
push
lahf
mov
sbb
jae
in
inc
shll
jnp
push
mov
mov
pop
add
xchg
jno
xorb
push
mov
out
bound
test
push
mov
xchg
gs
enter
leave
das
jecxz
or
jnp
xchg
dec
mov
shr
mov
lock
jmp
aaa
mov
call
arpl
icebp
mov
pop
adc
cmp
add
gs
mov
cwtl
pop
pop
andl
lret
sbb
shrb
les
inc
sbb
div
imul
js
dec
sbb
ret
inc
inc
addr16
rcrb
or
outsb
jno
xchg
mov
cltd
gs
out
rcll
call
cmpb
and
sti
add
mov
pop
xor
cmpsb
sbb
inc
push
sub
and
add
lret
mov
lcall
sub
pushf
les
ds
pop
push
jmp
leave
sarl
push
mov
mov
pop
xorl
xor
test
cmp
xchg
outsb
xchg
cmp
add
cmp
test
loopne
xchg
dec
popa
xlat
jne
sub
mov
outsb
cmp
int3
mov
inc
cmp
xorl
insl
arpl
mov
xor
dec
xor
fnstenv
dec
push
dec
lcall
pmulhw
jmp
and
sbb
lock
push
inc
rcll
test
hlt
pop
ljmp
lock
inc
cmp
movsb
add
out
ret
push
dec
faddp
jno
fidivl
cmc
mov
adc
fnstcw
adc
and
stc
lret
stc
dec
inc
mov
adc
sar
sbb
jmp
adc
xchg
jmp
and
cmpsl
hlt
adc
xlat
shll
mov
push
mov
imul
sub
std
leave
jg
cld
or
lahf
or
sarl
das
in
mov
jl
add
add
pop
add
pop
sub
or
adc
repz
inc
gs
cld
out
xor
jg
cmp
test
push
mov
mov
out
and
ss
cmp
mov
call
mov
and
pop
xchg
mov
or
and
cmovnp
loope
out
sbb
pop
xlat
push
shll
fisubs
lcall
into
ljmp
cmp
pusha
add
jle
in
xchg
xchg
add
adc
clc
test
je
add
mov
hlt
push
movsb
nop
outsb
cmc
sarl
cltd
mov
shl
insb
mov
fs
popf
jge
adc
rcrl
loope
inc
xor
loope
sub
jge
xchg
imul
mov
cmpsl
lret
aad
sbb
push
pop
jb
mov
mov
fisubl
xor
mov
fwait
in
movsl
lcall
and
jp
jo
cmpsb
mov
shl
ret
lods
inc
xor
lcall
into
nop
xor
inc
inc
fs
stc
xchg
frstor
adc
sub
lods
dec
repz
int3
js
or
lcall
sti
push
sahf
or
push
test
mov
mov
cwtl
add
sbb
sahf
outsl
xchg
xchg
mull
push
xor
and
js
inc
rorb
mov
xchg
adc
sarl
std
sub
jno
jle
je
aam
adcb
in
fmuls
out
jp
xchg
xchg
int3
and
mov
mov
adc
push
shlb
cmpsb
stc
push
mov
aaa
fistpl
sbb
mov
ljmp
sbb
cmpsl
movsl
xchg
mov
adc
rorl
std
arpl
pusha
inc
jmp
jecxz
daa
cmp
and
jmp
test
cmp
sub
int
rolb
ds
jp
outsb
fiadds
cwtl
lods
xor
inc
push
enter
dec
popa
mov
sub
cmpsb
mov
leave
out
and
js
es
xchg
sub
js
leave
jae
enter
jle
cmp
xor
pop
inc
aam
xchg
jmp
popa
test
mov
gs
pop
jle
or
ss
pop
ds
or
repnz
or
jno
mov
mov
in
stos
into
sbb
jno
cltd
and
jns
test
cli
out
lret
sub
cld
inc
mov
lods
test
cwtl
push
cli
js
sbb
loop
cmp
dec
adc
mov
or
mov
repz
jg
dec
dec
movsb
pop
insb
inc
cmc
mov
imul
inc
push
out
xchg
xchg
jnp
sub
stos
test
mov
lods
xor
jo
hlt
or
inc
pop
or
adc
push
scas
aam
ret
fs
aas
jge
pushf
add
psllw
jae
pop
add
aas
push
sbb
mov
dec
and
mov
jmp
dec
in
dec
lock
mov
notl
jge
pop
add
ss
outsl
mov
xor
push
fwait
out
and
ljmp
cmp
push
aaa
stc
rol
mov
xor
pop
xchg
mov
pop
sbb
sarb
pop
insb
xchg
mov
outsb
ret
popa
jg
jo
ret
insb
test
xor
add
pop
repnz
inc
rcl
add
jl
mov
lret
cmp
adc
cmp
cmp
outsb
jb
stc
xor
and
aaa
push
xchg
or
cmp
lods
sbb
cmc
push
filds
sub
pop
js
dec
aas
dec
je
adc
jge
pushf
push
aaa
xchg
xchg
out
clc
push
dec
mov
cmp
push
pavgw
icebp
nop
xchg
cmp
daa
sarl
int
out
or
jno
dec
lcall
or
mov
in
adc
xor
fisttpll
pop
sahf
hlt
push
int
lock
adc
dec
sub
or
dec
out
ss
div
rolb
jmp
push
clc
sarb
shrb
ds
or
sahf
aaa
pop
xchg
adc
xchg
jb
shr
or
inc
jmp
inc
xor
mov
cmp
fwait
ret
inc
push
test
pop
leave
test
ret
push
push
mov
add
aad
ss
sbb
jo
sbbl
push
sti
daa
loope
xlat
es
or
je
mov
loopne
jg
add
mov
mov
adc
scas
call
xchg
dec
divl
and
jg
cmp
dec
ret
cmp
push
pusha
ss
and
push
mov
dec
rclb
pop
mov
scas
lahf
sbb
out
inc
push
add
repnz
lods
repnz
inc
neg
add
aam
ds
jge
mov
in
or
cs
push
rcrb
js
cs
or
mov
lret
sub
decb
add
mov
ja
sub
or
sbb
sbb
xor
xor
xchg
jmp
xchg
pop
jnp
aaa
pop
push
cmpsl
fld1
mov
movsb
cmp
sub
leave
aas
ljmp
aam
adc
leave
imul
and
xchg
jnp
add
inc
rcll
inc
jg
cmpsb
iret
notl
push
aam
xchg
pop
cmp
fcmovb
jb
aaa
mov
jmp
fistl
and
cld
add
lea
arpl
popa
rclb
aas
dec
push
adcl
lret
sbb
lds
dec
mov
pop
outsb
push
std
cmp
mov
xchg
imul
sti
mov
popa
cmp
aad
aas
in
push
inc
mov
jle
loopne
add
orb
stc
in
insl
or
dec
xchg
sbb
in
lods
or
adc
mul
fbstp
jmp
out
or
sub
fwait
sar
das
xchg
imul
mov
dec
sahf
jns
pop
xchg
cmpsl
sub
pop
sti
xchg
jnp
clc
mov
pop
jnp
call
sub
mov
neg
rclb
xor
ss
cld
test
cmp
scas
jl
dec
test
out
ja
mov
mov
repnz
int
jns
dec
xlat
pop
lea
rolb
outsl
push
mov
shll
pusha
ret
enter
rorl
add
jnp
mov
icebp
cld
add
cwtl
mov
cmpsb
pop
stos
pop
cwtl
gs
ficomps
dec
sbb
ja
cld
repz
xchg
pop
mov
mov
test
xchg
inc
insb
and
cmpsb
sub
mov
mov
xchg
mov
cmp
aaa
clc
inc
sbb
lds
cld
in
iret
in
jg,pn
idivb
fs
add
rorl
xchg
and
ljmp
ret
push
and
cmp
nopl
clc
pop
jns
aas
jo
jb
ret
pminsw
cmp
xchg
or
fldl
xchg
aaa
mov
jns
int3
out
ds
jge
in
jecxz
jns
xor
cmp
mov
sbb
lock
mov
or
sbb
int
imul
sbb
jle
stos
push
mov
sbb
hlt
pushf
loopne
scas
int3
xchg
jae
push
cltd
loopne
mov
add
dec
mov
gs
pop
jae
push
or
sub
xor
fcmovnu
inc
jbe
adc
mov
or
ss
sbb
cld
repz
cmp
pop
mov
mov
jle
lahf
sahf
jb
enter
pusha
mov
cmp
insl
outsl
sbb
mov
fs
rcll
sahf
adc
ljmp
dec
fldcw
lea
loopne
xor
jne
xchg
test
roll
mov
xchg
in
sub
adc
cmp
testb
xchg
dec
jle
dec
std
mov
add
fnstenv
pop
mov
adc
shlb
cld
std
stc
push
mov
sub
lds
dec
cmc
jno
in
jne
cmp
xchg
pop
imul
inc
jecxz
sbb
mov
lret
xchg
add
sarl
cld
ljmp
fldl
pusha
push
mov
ret
addr16
movsl
mov
popa
add
pusha
dec
xor
stos
mov
idivl
push
inc
imul
cmp
cs
ljmp
jp
mov
dec
cmp
and
ja
orb
lods
js
idivl
sub
dec
pop
leave
aaa
mov
sbb
cmpsb
dec
push
pushf
sbb
sbb
iret
ss
sub
jge
dec
push
mov
aad
nop
and
ret
in
sub
int3
out
rorb
push
adc
jl
sub
and
rcr
das
inc
pop
jo
int3
jecxz
dec
hlt
std
int
repz
call
cmc
fistl
or
dec
xor
mov
mov
lea
outsl
hlt
dec
cmp
xchg
adcb
xor
loop
jp
je
nop
xor
out
sahf
push
xor
fs
sbbl
mov
subl
mov
mov
outsl
and
ljmp
mov
sub
mov
ja
xchg
stc
mov
mov
sbb
imul
cmp
ss
or
lahf
and
aam
adc
jae
lahf
mov
push
ror
insb
out
pusha
lods
mov
clc
les
or
push
sbb
loopne
sbb
mov
shr
and
fucomip
sub
xor
xchg
and
push
fwait
aaa
sub
repz
cmp
jo
imul
push
hlt
or
insb
jo
imul
pop
loope
mov
insb
pop
add
in
push
cmpsb
popf
inc
pop
lock
imul
fmuls
mov
mov
repnz
xchg
into
mov
imul
pop
das
filds
adc
cmc
mov
add
clc
addb
xchg
push
lahf
and
lahf
cmp
lahf
inc
and
scas
and
jecxz
sbb
mov
mov
lods
dec
mov
stc
cld
xchg
sti
mov
mov
mov
out
cmpsl
out
xchg
sbbb
mov
repnz
loop
adc
cmp
mov
outsb
jg
imul
rcrl
jnp
mov
cltd
adc
sbb
ljmp
pop
sti
je
xchg
shlb
and
inc
daa
sub
dec
testb
aam
scas
sub
out
cmpsb
mov
xor
push
jle
mov
add
imul
jnp
mov
jno
lret
mov
imul
bound
stos
dec
mov
inc
inc
or
loope
sbb
or
sub
mov
cmp
mov
add
push
xlat
fdivr
push
dec
rorl
add
mov
sbb
outsb
dec
pop
insb
adc
xor
adc
sbb
pop
pop
das
movsl
mov
idivl
xor
add
add
push
les
hlt
daa
aad
sbb
jl
test
pusha
or
pop
insl
loopne
or
cmpsb
jle
clc
mov
fnstsw
dec
push
insl
orb
imul
ret
mov
fbstp
jbe
call
mov
mov
push
xchg
int
testb
fimuls
add
iret
push
movsl
mov
adc
xor
shll
xchg
push
or
sti
movsb
out
call
dec
dec
lret
xchg
push
add
xchg
popa
ss
outsb
iret
adc
dec
cmpsb
sub
cli
add
cmp
int3
xchg
dec
xchg
adc
mov
add
jno
adc
dec
nop
pop
mov
pop
xchg
ja
cmp
inc
pop
dec
sub
fnstsw
ret
lock
xor
aam
mov
dec
xchg
add
bound
pop
jmp
es
cmp
mov
shr
shrb
add
mov
sahf
jbe
adc
fwait
add
mov
insb
test
in
pop
gs
sub
inc
cmp
arpl
sub
cmp
ret
stc
jae
xor
mov
cmp
sub
iret
jg
negl
stos
xor
cmc
or
mov
xchg
rclb
jns
pop
cmpsb
int3
pop
cmp
int3
pop
and
mov
mov
daa
ds
mov
mov
push
mov
cli
push
push
sbb
jne
xchg
cmc
add
push
pop
pushf
dec
jbe
push
push
ret
imul
mov
inc
movb
or
mov
stos
or
push
xorb
mov
sbb
les
lds
mov
outsb
jecxz
push
push
scas
push
iret
das
rolb
test
andl
call
in
arpl
mov
sub
scas
scas
lahf
loopne
pop
imul
sbb
test
sub
mov
daa
in
mov
das
rolb
mov
fs
aas
ds
test
lods
inc
stos
repnz
call
mov
outsb
rol
les
adc
int3
in
dec
pushf
and
jp
dec
xchg
push
cmc
dec
popa
fnstenv
mov
loope
popf
xlat
inc
mov
rorl
mov
mov
stc
scas
push
mov
les
int
lds
push
push
faddl
popf
cltd
dec
pop
ja
adc
or
push
test
xor
test
mov
jae
cmp
jae
add
outsb
xchg
push
and
mov
ret
inc
inc
repnz
pop
add
inc
leave
jo
mov
pop
cltd
and
mov
scas
mov
lahf
and
insb
mov
scas
pop
mov
loop
imul
xchg
repnz
jae
clc
inc
pop
dec
sbb
jnp
rorb
shll
out
roll
popa
xor
inc
jo
xchg
sbb
sti
fistps
stos
jbe
rcrl
xor
mov
sub
iret
mov
jp
subl
dec
icebp
inc
inc
push
and
call
dec
pop
cmp
mov
movsl
fnstcw
dec
sbb
inc
test
decl
add
mov
xlat
sbb
pop
mov
call
xchg
jno
push
test
and
xchg
std
or
out
mov
jl
loop
add
push
jp
pop
gs
adc
mov
or
mov
bound
jmp
adc
xor
adc
mov
and
or
jae
mov
ds
leave
mov
mov
fsts
add
jp
aas
inc
mov
pop
int3
inc
add
jle
inc
mov
lahf
xor
cmp
jge
in
repz
sti
cli
inc
jb
pop
adc
in
les
jmp
aam
repnz
or
aaa
das
lret
adc
push
call
mov
pop
test
pop
fmul
pop
add
jge
ret
ds
adc
lock
movb
add
jnp
mov
dec
jmp
mov
addr16
jo
aas
xor
dec
repz
test
mov
into
adc
push
mov
in
inc
shrb
mov
mov
dec
shrl
test
sbb
inc
inc
adc
mov
and
daa
jle
pop
inc
sarb
jecxz
data16
xor
mov
enter
mov
xor
jecxz
fldt
out
cmp
add
stc
shlb
mov
sub
cmp
imul
pushf
jmp
push
notb
bound
nop
out
test
push
int
loop
jae
dec
sbb
dec
sti
cwtl
jno
cmp
xchg
fsubrl
jae
cmpb
pusha
xor
rorb
adc
push
loopne
push
cli
push
mov
pop
rolb
jl
sbb
fstl
adc
je
out
rcll
inc
cmp
shrb
mov
sbb
jmp
mov
loope
push
or
and
fsubr
dec
xor
mov
xchg
fisttpl
lods
mov
add
add
cs
xchg
out
loopne
xchg
in
push
mov
and
dec
adc
jbe
dec
mov
mul
add
fsts
popa
pushf
and
out
cmp
leave
mov
jmp
sub
pop
lea
push
pop
mov
push
xchg
icebp
mov
pop
insb
aas
lds
cmp
addb
or
sub
mov
idivl
and
lods
ljmp
imul
hlt
das
shr
xor
test
sub
sbb
inc
push
scas
aam
dec
cmp
adc
and
fcomps
xchg
add
andl
ret
insl
mov
xorl
sub
jl
out
sub
mov
pop
push
xlat
mov
cmp
pop
test
or
push
ljmp
cld
sbb
inc
xor
jecxz
dec
cmpsl
mov
incl
or
cmp
imul
adc
mov
dec
xchg
mov
pop
test
mov
sub
decb
out
outsl
lds
mov
clc
adc
frstor
pusha
pop
fs
aaa
mov
push
rclb
mov
pop
ljmp
mov
pop
andl
daa
cmp
and
inc
dec
ja
fwait
or
or
shlb
ret
ss
stos
push
lea
data16
shrl
xchg
dec
pop
rorl
jns
sarb
loopne
loopne
fstps
xchg
sbb
int3
sub
jne
xor
scas
movsl
aaa
jle
imul
aas
popa
into
sub
bound
add
lret
out
add
mov
scas
sbb
je
sbb
xchg
and
rorl
test
push
shrb
faddl
add
ret
pusha
sbb
loop
lds
dec
ficoms
cmp
cmp
mov
in
and
inc
mov
add
inc
mov
xlat
stos
ja
popa
lcall
jnp
adc
mov
out
jg
out
je
stos
jno
or
adc
inc
sahf
and
loope
popa
sbb
xchg
lods
fwait
push
push
neg
pop
or
mov
imull
es
sti
mov
push
in
mov
jo
popa
aam
mov
fwait
jns
adc
and
dec
rcr
and
sbb
or
xor
popa
cmc
pushf
pop
xorl
lods
mov
mov
decb
push
add
loop
inc
pushf
lea
xor
or
sub
xlat
rolb
stc
lahf
dec
fcomp
ja
in
stos
jae
arpl
imul
divb
lea
jae
lcall
pop
push
add
jp
add
sbb
jo
mov
dec
insb
lcall
daa
push
dec
enter
mov
or
sbb
repnz
or
and
nop
fidivrs
push
inc
xchg
pop
cld
push
cs
loope
sbb
dec
int3
ret
les
inc
cmp
xchg
sbb
test
jnp
mov
imul
mov
lds
testl
or
xchg
and
push
inc
shr
mov
fisubl
dec
iret
or
outsl
les
push
push
add
out
sbb
pop
lock
data16
outsb
add
mov
mov
repz
jge
adc
mov
bound
push
setle
cmp
adc
js
xor
push
in
daa
mov
lret
mov
inc
mov
or
push
insl
and
jmp
nop
hlt
inc
cmc
xor
add
ret
jl
inc
shll
dec
mov
or
sub
andl
dec
cmp
xorl
dec
cmpsl
int
sub
sbb
bound
aaa
sbb
ficoml
popl
inc
inc
add
sbb
mov
mov
pop
or
xor
mov
scas
cli
xchg
cmc
test
sub
idiv
and
fucom
in
or
hlt
jge
mov
mov
fs
pop
loopne
cltd
outsl
xor
mov
pop
jmp
pop
test
cmpsl
sbbl
dec
sbb
pop
sub
cltd
jb
xabort
mov
sbb
mov
mov
jp
in
cmpsb
insl
ljmp
insl
or
push
sbb
sub
adc
dec
into
xor
and
dec
cmp
sub
cmpsb
fcomi
arpl
xchg
dec
xor
stos
lcall
add
ljmp
stos
lds
push
mov
lods
jo
inc
or
mov
or
adc
jecxz
jle
loop
loopne
test
jo
dec
jne
adc
sbb
mov
ja
cltd
jmp
outsb
push
cmp
cmp
dec
pop
adc
cmp
jbe
stos
popa
out
jmp
cmp
imul
mov
shl
mov
xor
fsubs
mov
cmp
dec
loopne
js
mov
jnp
sbb
xchg
int
popl
clc
mov
imul
push
aam
mov
int
xor
dec
or
iret
jge
in
pop
cld
pop
adc
and
mov
pop
sub
sbb
imul
jae
sbb
leave
sub
imul
xor
mov
mov
cmpsb
notl
push
push
mov
nop
xchg
out
inc
mov
mov
pop
xorl
leave
ficoms
icebp
ss
jno
pop
mov
add
mov
imul
scas
jne
popa
je
mov
imul
cmp
add
push
sub
fwait
into
test
push
das
xor
ds
fimull
mov
loop
push
mov
add
cmp
scas
cwtl
mov
push
pop
pushw
inc
mov
into
jp
xchg
push
test
push
push
lret
push
sbb
push
mov
daa
xchg
xchg
test
imul
dec
jecxz
testl
push
ljmp
aad
ljmp
cmpsb
jecxz
aas
mov
cmp
xor
ficomps
into
ss
aam
flds
fldcw
dec
pushf
adc
mov
xchg
cmpsl
bound
push
adc
les
sub
jecxz
incb
mov
and
ror
xchg
push
mov
in
mov
xchg
jmp
sub
mov
pminsw
daa
out
sti
add
lret
or
sub
mov
push
jnp
xchg
pushf
and
add
xor
push
adc
fistpll
rorb
shlb
mov
cmp
inc
aaa
fstpl
lret
test
or
ds
pop
mov
or
ret
rolb
cmp
fs
xchg
xchg
jp
mov
inc
aas
jno
push
data16
insl
fsts
push
sub
in
xchg
push
dec
mov
xchg
daa
vpunpckhbw
pop
jg
dec
stos
roll
xchg
lock
aad
mov
adc
bound
mov
out
and
je
xchg
sti
lods
ja
dec
xor
sahf
pop
adc
repnz
push
fwait
xchg
sar
cmp
aaa
pushf
cmp
sbb
xchg
xor
fcmove
mov
dec
jbe
xchg
ret
add
shl
sbb
sub
and
je
and
inc
pop
out
pushl
sbb
cwtl
push
jge
into
jge
mov
xchg
arpl
sub
jo
mov
push
jl
fsubs
movsl
xor
jno
cmp
cmp
stos
sub
or
mov
bound
sub
mov
rcrb
outsl
pop
pop
mov
mov
icebp
ljmp
mov
xor
popa
inc
in
loopne
and
dec
std
add
mov
and
sub
scas
jge
in
imul
pop
mov
pop
ja
lret
das
out
out
cmp
push
dec
add
sbb
or
ljmp
add
les
mov
je
mov
shlb
cwtl
and
sti
xor
fcoml
jns
inc
mov
dec
shlb
inc
jle
mov
out
scas
inc
fsubs
mov
sbb
sub
lahf
add
aad
or
xacquire
mov
imul
daa
out
mov
mov
mov
nop
fcomps
andb
icebp
jp
cmpsb
jmp
aam
sub
lds
cmc
jecxz
lods
jge
test
gs
test
mov
xor
push
lret
hlt
inc
shr
pop
lahf
and
mov
add
into
movsb
mov
adc
pusha
mov
scas
inc
xor
jmp
inc
aam
bound
ljmp
fwait
into
test
push
aad
outsl
pop
jmp
xchg
in
jecxz,pn
xlat
insl
fists
out
pusha
sti
and
jne
sbb
dec
or
push
mov
inc
mov
jb
jno,pt
stc
outsb
add
dec
test
cmpsl
sbb
push
shlb
cmpb
imul
in
movb
dec
gs
mov
jo
dec
sbb
icebp
pop
xlat
inc
in
jo
dec
enter
or
push
shrl
adc
push
rcll
xchg
imul
dec
mov
push
mov
jne
subl
test
and
dec
lea
leave
in
insl
push
cltd
jp
das
jae
incb
movsl
testb
cmp
cltd
xchg
dec
movsb
mov
popa
fsubl
jmp
outsl
and
movaps
mov
or
js
int3
dec
add
sub
bound
das
pop
add
int3
adc
mov
inc
dec
jns
mov
adc
or
das
adc
mov
cld
or
jno
mov
cmp
cmp
push
and
pop
cmp
cmp
sbb
cmc
pop
add
loope
dec
and
shll
push
mov
cmp
stc
bound
pop
xor
xchg
ja
loop
fucomi
and
or
push
push
cmp
lods
sub
sub
sahf
in
inc
mov
test
data16
mov
inc
sub
sbb
jle
sbbl
cmpsb
mul
aaa
mov
jp,pt
pop
xchg
cmpsb
pop
test
xchg
pop
adc
mov
aam
sahf
jb
out
je
push
leave
data16
sub
jae
cmp
sub
cmpsb
adc
push
pop
push
cmp
mov
xor
sbb
jmp
fldt
pop
jnp
cltd
sbb
cmp
jbe
imul
stc
sti
divl
dec
imul
push
jmp
inc
sub
and
loop
nop
int3
loope
jae
in
or
inc
shlb
pop
popf
and
inc
cld
ficomps
xchg
insl
xor
sbb
add
ret
shrl
pop
xor
dec
jecxz
aam
dec
cwtl
cli
inc
pop
leave
filds
pop
mov
shrb
in
xor
mov
mov
enter
jae
cmp
inc
inc
cmp
mov
fsts
nop
dec
dec
out
lods
sbb
add
sub
jo
lods
loope
movsl
pusha
xlat
inc
mov
pop
aas
cmpsl
jg
xor
out
incl
les
sub
push
xchg
jg
push
daa
adc
xchg
into
xchg
pusha
mov
push
cs
in
clc
div
mov
xor
in
jmp
int3
pop
mov
pop
scas
fidivs
iret
data16
lods
or
xchg
lods
fsubrl
sub
sbb
hlt
arpl
add
cmp
xlat
jnp
dec
xor
mov
mov
add
addr16
xor
sub
movsb
test
mul
jo
cmpsb
call
mov
into
mov
lcall
decb
cld
inc
dec
cmpsb
add
mov
in
lret
les
mull
aad
or
aam
add
dec
and
mov
jge
cmp
sbb
pop
or
mov
xchg
arpl
nop
pusha
push
daa
pop
pop
jae
xor
mov
fs
mov
test
scas
push
and
cmp
mov
negb
shll
mov
cmp
xlat
xlat
pop
jns
sbb
out
stos
sub
cmp
inc
cmp
and
int
dec
imull
bound
mov
icebp
pop
imul
rorl
mov
ret
adc
and
test
inc
xchg
fdiv
xchg
sti
or
jp
negb
push
insl
add
pop
imul
and
jl
add
lds
xchg
mov
js
pop
ds
push
push
pop
adc
adc
test
sbb
je
jecxz
inc
test
pop
sahf
pop
aaa
push
fs
into
rorl
jmp
or
fadd
addb
pop
push
stos
shrl
mov
jle
xor
add
dec
mov
movsb
push
cmp
movsb
sbb
imul
mov
mov
popa
adc
aam
push
add
adc
inc
mov
sbb
dec
daa
stc
sbb
jp
or
test
inc
fstl
lahf
sbb
inc
inc
mov
fwait
and
lcall
push
out
out
cmpsl
mov
mov
mov
inc
sbb
inc
mov
pop
out
pop
xor
in
or
ss
mov
popa
pop
mov
sub
xchg
ljmp
adc
adc
push
add
mov
sbb
xor
mov
jb
loopne
or
and
mov
mov
faddl
ljmp
dec
fidivl
inc
mov
clc
push
cmp
daa
xor
xor
inc
pop
sub
push
fwait
push
ds
sbb
mov
ds
test
xchg
push
loopne
lods
xlat
test
aam
enter
pushf
sti
clc
jl
inc
push
dec
inc
out
movsb
cmp
lock
mov
pushf
push
jb
jl
icebp
dec
shrb
stc
xor
dec
sbb
ds
in
inc
ljmp
mov
in
fisubl
inc
and
dec
xlat
aad
lods
sbb
jo
inc
notb
aas
into
imul
or
xor
xor
call
ret
inc
jmp
mov
lret
dec
aaa
and
xchg
xchg
je
insl
cmp
or
enter
cmp
cltd
mov
xchg
add
mov
fwait
xchg
push
insl
and
into
push
outsb
daa
je
repz
add
pop
jae
sbb
xor
xchg
loope
push
ja
jp
and
cmp
mov
out
test
insl
ja
push
mov
ficomps
dec
popf
leave
inc
nop
jb
addl
nop
pop
fwait
cli
pop
jl
gs
fdivrs
jge
test
pop
push
stc
mov
push
nop
stos
cld
movsl
mov
push
xlat
dec
mov
in
mov
inc
lcall
xor
push
pop
jae
out
mov
cmpsb
inc
sbb
je
inc
gs
mov
aas
jmp
dec
fisubrs
mov
iret
in
sub
jne
ds
iret
dec
inc
test
sub
mov
and
scas
inc
xchg
push
mov
ljmp
bound
xchg
adc
pusha
pop
iret
lcall
dec
dec
dec
iret
in
xlat
xor
xor
adc
mov
fldln2
aas
fmul
jge
sub
pop
lea
add
les
stc
mov
dec
sbb
xchg
iret
jbe
or
mov
fildll
cmp
jns
sbb
xchg
mov
add
insb
popa
jne
repz
push
lcall
cmp
cmp
rolb
mov
out
sbb
fldz
es
mov
add
dec
xor
cmpsb
mov
pop
push
and
hlt
iret
adc
sub
dec
mov
xchg
movsb
popf
push
or
add
cmp
into
addb
mov
shll
fldl
jo
adc
and
out
lea
inc
into
jl
sarl
dec
and
pop
aam
sbb
movsl
or
jns
ds
pop
test
fisubs
jg
push
mov
outsl
sbb
shl
jge
xchg
inc
loopne
ror
jg
pop
jp
push
pop
inc
popa
or
and
movsl
pop
jno
mov
xor
add
cmp
mov
pop
stc
cmpsl
jne
mov
mov
cmpb
pop
ret
sub
add
sbb
scas
or
int3
shr
imul
ret
testl
adc
dec
add
push
pop
aaa
xor
cli
pop
mov
and
push
ja
mov
inc
fidivl
aaa
js
dec
js
mov
fstpt
fnstsw
inc
lahf
or
fcomip
xchg
scas
ret
popf
xlat
enter
jbe
xor
sub
cltd
or
mov
ss
push
xorl
leave
adc
dec
int
arpl
push
inc
cmp
out
jmp
push
icebp
inc
insl
out
roll
jno
popa
pop
ret
push
stos
repnz
push
mov
lcall
xchg
push
iret
stos
cli
test
mov
fwait
jo
repz
lods
sbb
and
and
mov
mov
into
adc
and
data16
std
add
fcmovnb
sbb
out
lds
mov
data16
push
sub
pop
or
inc
call
fcomip
add
mov
adc
bound
pop
jl
pop
cmc
cwtl
xchg
fmuls
push
jno
pop
add
sub
mov
rcrl
mov
lahf
sub
pop
add
xchg
or
fildll
aad
add
rcrl
push
aaa
jl
mov
call
jmp
sbb
mov
cli
adc
std
pop
repnz
pop
lock
mov
inc
mov
subl
inc
dec
sbb
dec
inc
lea
ror
in
mov
xchg
std
add
mov
add
shrb
pushl
stos
jle
test
inc
aas
dec
insl
int
cmp
lret
sub
dec
clc
cmp
jl
mov
sub
and
divl
loop
aam
and
lods
sub
cmp
or
std
addr16
cmp
add
adc
sbb
lods
inc
jno
and
xor
fwait
push
dec
scas
xchg
mov
ds
in
test
repz
lret
xchg
or
loop
dec
test
pop
in
mov
out
push
xor
sahf
scas
movsl
jle
das
pop
mov
mov
dec
loope
sub
jb
shl
movsb
lods
mov
call
cld
into
data16
in
sti
jnp
insb
popf
jns
pop
imul
push
add
push
xor
mov
jg
orb
jne
xlat
mov
dec
test
adc
or
mov
into
out
inc
sbb
imul
ficomps
xorb
cmp
cmp
test
push
or
pop
in
addr16
push
dec
xchg
test
enter
sub
push
adc
ss
add
push
repnz
enter
adc
rclb
lret
sbb
push
bound
popf
push
push
mov
push
data16
popf
add
es
addr16
sbb
lret
push
or
cmpsb
sbb
xor
mov
or
mov
iret
cmp
ss
adc
fcmovnu
rcrb
mov
jb
dec
fwait
lods
call
xor
dec
mov
sub
inc
cmp
mov
mov
xor
stos
std
mov
out
testb
imul
stc
xchg
decb
xchg
mov
adc
jge
addl
push
mov
pop
jb
cmp
cmpsb
out
es
jmp
aad
inc
test
xchg
lahf
mov
popa
mov
in
dec
test
sahf
add
mov
rorb
xor
scas
or
and
std
repz
popa
hlt
mov
mov
test
in
xor
mov
imul
movq
hlt
inc
cmp
sbb
aas
cli
sub
shr
imul
outsb
mov
arpl
pusha
and
or
in
mov
add
jnp
or
pop
fcomps
xchg
enter
mov
fmul
push
insl
cmp
pop
imul
cmpsb
xchg
adc
fcompl
pop
cmpsb
xchg
rol
cmc
push
mov
fsincos
negl
sub
faddl
xor
or
cmc
out
cmpsl
mov
movsl
cmpsb
lret
dec
filds
ret
or
popa
jp
ja
xchg
imul
and
in
and
mov
imul
pop
insl
dec
jle
pop
arpl
pusha
js
je
sub
jae
leave
rcl
sub
lret
jmp
into
sub
pop
int3
xor
dec
inc
or
cmpsl
movsb
mov
add
repnz
adc
adc
inc
test
lds
addr16
fs
cmp
fdivrs
pop
adc
in
cmc
mov
and
test
and
sub
ds
js
pop
lret
outsb
xchg
sub
stos
flds
bound
lea
xchg
je
xchg
mov
ja
movsb
jmp
push
mov
pop
push
out
or
mov
mov
fidivs
xchg
shll
jne
adc
rcrl
clc
test
dec
and
into
jg
jo
aaa
je
or
xor
dec
fdivrp
js
cmc
xchg
fdivs
add
inc
icebp
mov
xorb
mov
mov
rolb
lea
jo
push
inc
pusha
inc
push
loopne
xor
jae
jl
pop
xchg
add
int
scas
mov
xchg
cld
aad
xchg
dec
cmp
pusha
ljmp
cmpsl
push
shrl
cli
das
cmp
add
mov
scas
out
jmp
cmp
repnz
rcll
cmp
mov
or
jne
idivl
push
jo
jmp
jno
fidivl
fiadds
mov
into
jb
pop
mov
hlt
in
mov
scas
and
outsb
cmp
lods
dec
inc
mov
or
and
adc
dec
dec
and
adc
addl
cmp
in
sub
cmpsb
inc
dec
call
xchg
adc
xchg
mov
addr16
cmpsl
mov
mov
shr
test
fiaddl
jno
adc
fsubrs
jnp
leave
add
stos
subb
mov
aad
into
mov
xchg
pusha
push
fstl
movzwl
iret
int
lea
or
jecxz
fbstp
outsl
adc
mov
push
out
shrb
call
push
push
andb
push
cmp
sahf
mov
fisubrl
lds
xor
mov
lods
scas
insl
mov
xchg
rclb
insb
jmp
scas
xlat
int3
add
adc
insb
fstl
gs
or
push
xor
and
mov
jns
and
adc
jne
cmpsb
pop
lds
jg
jbe
clc
add
cmp
fs
and
jb
jp
leave
fsubrs
push
in
hlt
ret
xchg
jle
dec
cmp
add
or
out
sti
int3
incb
jle
cmp
cmp
loopne
cld
jns
mov
add
mov
int3
sahf
mov
inc
insb
jns
stos
jg
inc
out
fldenv
fsubl
enter
sbb
pop
fbld
subl
js
scas
mov
and
xchg
inc
fldenv
aas
and
sbb
or
mov
addr16
sti
lds
or
jne
lret
icebp
and
daa
ss
jne
pop
aaa
cmp
adc
pop
gs
dec
push
fadds
test
dec
mov
add
insb
out
inc
dec
mov
push
jl
fildl
push
or
adc
jb
pop
shl
test
movsl
lea
pop
loope
inc
je
dec
inc
cli
iret
and
sub
xchg
add
and
and
dec
scas
pop
jno
rolb
mov
pop
subb
in
jg
data16
pop
rcll
je
mov
inc
sub
test
jge
cmp
rcrb
lcall
fnsave
fisttpl
cmpsb
in
in
and
jae
sarb
inc
and
stc
nop
mov
rcrl
jmp
cmpsl
sbb
out
sbb
iret
ffree
aaa
das
sbb
loop
adc
loop,pt
cmpsl
pop
cmp
pop
in
arpl
dec
popf
insb
dec
mov
test
or
stos
in
out
fadds
aas
sahf
cli
shll
mov
and
lock
out
adc
jae
mov
out
hlt
in
mov
add
inc
out
std
jb
sbbl
scas
ja
xchg
lods
add
xor
and
xchg
cmp
mov
xchg
push
add
ds
push
fistl
jl
out
pop
inc
aad
fisttpll
xchg
xchg
gs
cmp
stos
testb
pushf
ret
bound
fsts
xchg
cld
int
or
dec
mov
xor
sub
sbb
mov
mov
mov
cwtl
cmp
stos
mov
aam
jns
insb
mov
add
pop
and
and
popa
sub
xchg
out
icebp
and
inc
pop
push
mov
fcomps
fwait
mov
pop
lds
push
xor
jl
mov
rol
ss
xchg
or
lret
call
outsb
mov
mov
push
cmpsl
imull
dec
stc
scas
adc
inc
shrl
jle
mov
add
incb
mov
in
je
ror
arpl
retw
outsl
or
mov
adc
popa
pop
push
push
pop
fldenv
inc
mov
inc
mov
adcl
shll
movsl
scas
mov
pop
mov
push
push
jne
and
jge
xchg
setns
push
push
mov
clc
inc
dec
mov
ljmp
insl
jb
std
mov
pop
lods
ss
lea
andb
inc
out
jle
cmp
sub
xchg
cmp
ficoml
fcmovnb
out
cmp
movsl
cltd
xchg
aam
adc
or
mov
mov
cli
out
shl
aad
iret
push
xor
mov
popf
jbe
adc
and
add
shrl
adc
pop
xor
divl
mov
mov
aaa
int
cmp
into
in
inc
into
in
loope
sbb
cmp
mov
daa
test
lock
lods
cmp
push
stos
pop
jns
mov
in
fs
seta
scas
imul
stos
lahf
int3
jl
sbb
dec
adc
xor
loopne
in
ljmp
jo
mov
filds
or
movsl
sti
mov
add
test
adc
xor
mov
add
jno
cld
lock
xchg
xor
inc
popa
in
inc
lods
sub
and
out
cmp
sbb
imul
ljmp
push
push
cmp
xor
scas
push
jbe
repnz
xchg
inc
movsb
test
inc
adc
mov
xchg
jge
push
pop
in
cmc
add
rolb
pop
mov
aaa
mov
xchg
push
mov
jecxz
mov
dec
jmp
cmp
int
mov
xchg
add
pop
out
pusha
cmpsl
lcall
outsb
and
ret
loope
inc
add
fdivs
pop
mov
fdivrs
inc
and
mov
mov
cmpsl
inc
aas
dec
addr16
inc
addr16
push
daa
lahf
fadds
or
cli
out
and
jecxz
jge
cltd
stos
adc
mov
jmp
test
pop
and
mov
add
adc
cs
fcmovu
mov
movsl
push
je
lea
xorb
jae
rcll
or
add
je
cwtl
imul
or
sti
jns
cwtl
mov
repnz
jno
pop
fst
push
cli
pop
jnp
pusha
sti
pop
cmp
aaa
cmp
pop
sub
xor
rcll
jl
xor
lcall
flds
cltd
jmp
popa
inc
sub
in
cltd
adc
add
fiadds
push
mov
xchg
adc
mov
xchg
xchg
test
jno
loope
jb
loop
xor
adc
imul
jne
jg
add
sbb
or
push
call
push
loop
sub
imul
and
outsb
sbbl
cmp
into
mov
dec
sti
shll
ss
std
into
jne
push
mov
js
cmp
loop
cmp
stos
rcl
pop
jge
pop
aad
scas
iret
rcrb
xlat
out
push
or
rcrb
popf
lcall
repz
fistpll
or
pop
and
push
sbb
in
sbbl
push
fimull
pop
adc
xchg
jl
inc
xor
adc
mov
fwait
imul
mov
ds
repz
cmpsl
add
push
inc
sar
cwtl
mov
test
test
jle
aad
mov
roll
fbld
js
lods
cmpsl
test
xor
addl
xchg
lcall
sub
sbb
lods
std
jp
outsl
lret
sub
cld
cmp
push
cmp
dec
arpl
dec
sbb
int
dec
fidivs
cmpsb
les
mov
or
and
push
sub
pop
mov
js
jbe
push
int
adc
push
sahf
es
mov
cwtl
cmp
sub
mov
fdivrp
xchg
cld
sub
sub
stos
bound
lcall
or
test
jp
iret
pop
or
aaa
cld
insb
pop
push
cmpl
jbe
aas
and
push
xor
push
andl
push
xchg
idivb
mov
push
xor
dec
cli
jne
mov
iret
mov
sbb
mov
addr16
add
mov
xchg
jle
dec
xor
xchg
mov
test
pop
stos
movsb
mov
in
mov
mov
jp
sbb
negb
or
stos
fwait
cwtl
inc
inc
out
int3
addl
and
imul
ret
cli
push
call
push
rcr
xchg
adc
mov
add
push
mov
xchg
cmp
cli
cwtl
into
push
ret
jne
jmp
rorb
cltd
ret
aad
lea
inc
add
shr
mov
imul
ljmp
xchg
addr16
popa
cmp
repz
push
in
and
stc
sub
call
stc
insb
fbld
mov
adc
call
sti
push
add
cmp
rclb
lods
push
jb
movsl
mov
xlat
mov
xchg
loope
es
cmp
out
sub
pop
jne
lret
pusha
lods
popa
xorl
mov
jmp
es
add
cmc
mov
add
add
scas
popl
pop
push
add
jns
mov
rorb
push
cmpsl
or
fists
cmpsl
out
daa
sarl
ftst
xor
jae
into
xor
mov
in
cld
loope
inc
dec
imulb
mov
movsl
and
mov
cmpsb
cmp
adc
cld
sub
fcmovnu
fwait
dec
inc
sbb
jbe
or
nop
pop
jne
fwait
negb
push
lea
pop
dec
pop
jecxz
repz
mov
loopne
int3
scas
lret
andb
sbb
inc
aaa
jbe
addl
add
je
or
sahf
mov
mov
adc
xchg
xchg
sar
pop
add
inc
push
loop
jnp
add
ss
jnp
test
nop
mov
pop
cmp
adc
sbb
mov
or
test
insb
sar
inc
fdivp
inc
mov
aad
jo
aam
add
mov
mov
cltd
mov
push
mov
lds
imul
adc
mov
rolb
cmp
pushf
in
hlt
mov
cmp
ret
adc
lods
test
imul
cmc
lock
dec
sbb
lock
add
leave
int3
popf
into
into
cltd
push
or
pop
cli
jbe
dec
stos
inc
ret
sbb
test
movb
xchg
adc
adcb
jns
aad
test
fidivs
mov
lods
add
cltd
mov
lret
xchg
lcall
inc
mov
jae
idivb
ret
and
addr16
pop
push
push
or
mov
jle
daa
insb
hlt
mov
sub
popa
les
pop
in
mov
lock
and
push
subl
inc
call
aam
push
in
cmp
push
mov
in
cmp
mov
sarb
scas
inc
and
push
adc
testb
jno
push
adc
fcmovbe
add
dec
push
addr16
jge
cmp
xchg
adc
mulb
pop
sbb
xor
pop
push
push
and
lret
push
mov
mov
mov
mov
pop
fisubrs
rorb
lods
or
into
jle
iret
ja
add
push
xlat
jge
pop
sbbl
jle
gs
pop
movsl
or
lods
clc
lahf
lods
cmp
xchg
mov
or
jno
ja
fnsave
xchg
movsb
mov
sub
mov
jae
or
repnz
out
mov
xchg
add
jge
mov
inc
or
mov
ret
jle
in
lock
push
mov
add
aas
mov
xorb
outsl
xor
jnp
je
sub
pop
or
aam
sti
mov
pushf
push
cmc
mov
pop
xchg
rorb
mov
rcrl
and
mov
sbb
push
dec
lods
xor
or
shrl
setns
and
test
fs
mov
mov
int3
mov
xchg
xor
insl
cmp
inc
xchg
jb
pop
push
mov
xorb
pop
inc
xor
jmp
popa
aas
add
ret
push
stos
loopne
outsl
int3
adcb
and
pop
enter
sahf
or
hlt
mov
ret
mov
pop
sub
loope
and
jns
cwtl
jb
inc
bound
cmp
pop
movsb
pop
sub
cmp
lret
sbb
jne
arpl
xchg
loop
movsb
in
ds
in
popf
lods
mov
jo
out
lret
aad
loop
and
push
clc
add
and
icebp
sbb
jmp
xor
scas
xchg
push
repnz
add
arpl
inc
jae
ret
stos
cmp
int
hlt
fildll
adc
push
leave
and
ja
aad
push
push
mov
pop
adc
or
rorl
fists
ss
enter
mov
mov
shrb
stc
sub
sbb
frstor
xor
pop
shl
mov
addl
sub
imul
aas
cmp
lock
cmp
add
inc
lods
jnp
cmp
cmp
xor
inc
or
lods
and
jno
pop
mov
add
add
cmp
lcall
sti
and
lods
roll
jge
imul
test
mov
aaa
and
lods
inc
out
stos
dec
imulb
mov
push
xor
sti
xor
jne
mov
push
fwait
xlat
xchg
mov
loop
ja
loop
js
add
outsb
leave
mov
xor
pusha
pop
inc
pop
je
addr16
ret
clc
cmpsb
mov
xor
adc
add
mov
ret
dec
add
and
leave
jb
notb
mov
sub
lds
inc
and
test
dec
or
jmp
dec
addb
loopne
jbe
add
cmp
cmp
cltd
cwtl
jae
sbbb
push
mov
subl
in
jecxz
es
mov
arpl
div
lret
xor
cmpsb
loopne
lock
jl
xor
hlt
jno
imul
lret
push
mov
mov
push
sahf
cmp
cli
pusha
call
add
dec
popa
in
gs
enter
rorl
int3
jno
ret
notl
ret
mov
and
cli
inc
cmpb
pop
mov
xchg
pop
adc
popf
inc
mov
fmuls
setns
aam
pushf
lcall
mov
movsl
lock
movsb
pop
sti
cmp
mov
xchg
jle
pop
push
dec
jle
aas
hlt
pop
cli
lds
fdivr
subb
xor
ljmp
test
mov
cs
sub
shlb
adc
rclb
inc
pushf
sub
or
fdivr
test
fistl
mov
stos
lcall
ret
mov
es
xchg
scas
lods
push
sbb
inc
or
outsb
dec
aad
out
stos
jb
jne
ficomps
rorl
cmc
lock
call
rorl
xchg
jno
xorl
lcall
std
fistl
and
cmp
pop
add
sbb
lcall
enter
push
shll
rol
repnz
loop
cmpsb
mov
push
sub
ja
pop
out
shlb
loope
sub
int
sub
mov
ret
mov
xchg
xor
scas
inc
dec
cld
inc
out
jbe
jno
xor
out
sub
mov
inc
imul
adc
add
push
cmpsl
fs
mov
decl
and
xlat
jb
leave
or
mov
repz
mov
jge
movsb
aas
hlt
lods
push
pop
push
pop
setge
xor
sub
jle
sub
cmp
xor
out
aam
andb
pushf
movsl
add
hlt
cli
sbb
push
stc
andb
mov
stc
sub
sbb
bound
in
sti
int
scas
in
out
add
dec
mov
out
mov
mov
pushf
rolb
pop
dec
test
repz
ja
ret
jb
xor
jne
fstl
fwait
xor
pop
inc
adc
insl
ficoms
sub
in
decb
lea
les
incl
scas
inc
int3
xchg
bnd
pop
mov
xor
fdivrp
mov
inc
cmp
dec
xor
pop
mov
sub
repnz
adc
mov
test
ds
inc
push
pop
shl
pop
push
frstor
lret
or
xchg
dec
pop
shl
cwtl
sub
test
aaa
inc
inc
mov
sub
mov
inc
xchg
pop
adc
adc
incl
push
arpl
xchg
sub
adc
add
test
ss
pop
cltd
mov
inc
jbe
pop
flds
inc
imul
xchg
jno
out
mov
sahf
subl
inc
test
cmpsb
adc
add
mov
iret
mov
out
xor
leave
repz
icebp
push
pop
shll
jns
cmpsl
mov
pop
or
pushf
add
cmc
pop
dec
out
popa
push
sub
ljmp
gs
sub
and
iret
xchg
fs
call
jbe
push
popa
call
dec
stos
jle
push
push
sbb
add
lea
addr16
add
fsubrs
cmp
mov
pushf
cmp
enter
outsl
sbb
mov
lea
je
int
jecxz
bound
xlat
or
jo
dec
hlt
add
popf
dec
adc
sub
scas
cmp
arpl
int
fstl
nop
mov
mov
dec
adc
les
jg
pop
and
sbb
inc
leave
js
dec
in
arpl
insb
cwtl
inc
push
push
mulb
mov
push
add
int
mov
dec
push
test
push
pop
je
and
enter
xor
int3
mov
and
jle
int
xorl
mov
pusha
push
fisttpl
inc
mov
xchg
jmp
jo
pop
mov
xor
sub
jb
mov
rcl
loop
xchg
or
sub
lahf
mov
mov
adc
insl
xchg
xor
push
mov
in
mov
imul
xchg
fistps
test
mov
ja
sahf
fistps
std
cmp
or
ds
lds
scas
ljmp
sub
adc
pop
cltd
loop
lahf
lods
nop
push
aas
lahf
mov
lods
mov
es
mov
cmpsl
mov
xor
mov
addr16
lcall
xchg
nop
imull
sti
pop
xchg
fdiv
jnp
rclb
sti
repz
adc
inc
or
popf
mov
popa
and
test
ljmp
and
lcall
add
adc
aad
push
or
fcompl
push
ret
iret
imul
test
mov
scas
repz
or
add
inc
in
fsubrl
into
push
lea
dec
adc
mov
or
sub
xchg
addr16
xor
inc
lret
scas
push
mov
mov
fcmovu
sbb
pop
aad
pop
xchg
fldcw
clc
repz
xchg
cmp
into
aas
ss
cmp
dec
sbb
xchg
nop
test
cmpsl
jmp
push
cld
push
sub
jge
mov
jae
outsb
adcb
fucomi
rcll
sub
cltd
sub
mov
push
bound
cmp
lret
mov
divb
push
lea
repz
push
icebp
pushl
xchg
shlb
in
cwtl
jb
and
adc
mov
cmp
out
pop
and
xchg
cmpsl
dec
mov
mov
and
xchg
insl
mov
es
repz
pop
or
nop
push
push
dec
or
test
jne
in
jg
dec
fisubrl
push
mov
pusha
xor
and
in
and
xchg
arpl
shrb
dec
add
pop
shlb
add
int3
iret
repz
xchg
cmpsl
psraw
sti
pop
pushf
loopne
add
inc
mov
out
adcl
mov
push
and
mov
sub
add
mov
mov
outsb
sub
push
jl
dec
in
ljmp
xor
ds
push
cld
sbb
fcmovne
sbb
xor
push
add
mov
jecxz
mov
repnz
lods
xchg
outsb
xlat
xchg
mov
sbb
aaa
jbe
sub
stc
icebp
cwtl
sbb
jbe
inc
sub
or
jge
mov
testb
push
dec
push
imul
fisttpl
imul
mov
in
xor
sub
fidivrl
add
popf
lock
cmp
dec
xor
negb
jl
or
leave
jbe
push
outsl
test
mov
push
je
out
lds
xchg
mov
push
imul
stos
rcrl
movsb
mov
push
call
mov
or
cmc
and
mov
or
mov
jle
dec
rcrb
mov
mov
decb
xor
jmp
aam
lods
cmpsb
mov
xchg
push
jo
adc
outsl
cwtl
imul
ss
scas
sbbl
or
popf
mov
xchg
fstpl
scas
fucom
mov
sbb
pop
mov
jl
inc
lock
xchg
push
pop
push
in
lock
adc
adc
dec
mov
or
addr16
mov
cs
dec
cmp
mov
stos
mov
cmpsb
cltd
dec
loopne
and
xorl
push
pop
sub
dec
jne
and
js
loopne
aas
pop
out
addr16
inc
adc
jle
jne
nop
les
scas
pop
mov
sub
xchg
jns
mov
sub
jecxz
mov
mov
sti
add
mov
dec
jne
loope
push
add
jne
iret
mov
call
mov
sbb
mov
icebp
dec
or
sbb
dec
push
ja
jno
jns
jnp
in
das
arpl
dec
push
xchg
pop
xchg
es
xlat
mov
lods
sbb
iret
cmpsb
push
sbb
xor
mov
fidivrl
ret
jmp
sub
arpl
divl
adc
and
loopne
pop
es
cmp
inc
jnp
daa
fiaddl
pushf
add
roll
imul
outsl
js
imul
push
pop
in
push
cmpsb
dec
or
mov
rcrb
push
scas
jns
inc
xchg
outsb
mov
hlt
pop
pop
cmpsl
push
and
fcmovnu
aad
imul
sbb
push
sahf
add
xor
hlt
test
pop
fmull
in
mov
jne
dec
daa
adc
mov
das
test
cmp
andb
add
iret
pop
adc
pop
pop
fisubs
pop
or
mov
dec
outsb
fsub
add
mov
fstl
daa
scas
gs
dec
jb
xchg
push
stc
sub
cltd
xchg
sbb
pop
scas
ja
ret
xor
or
dec
cs
out
pop
ret
ljmp
rorl
or
xor
push
adc
xchg
push
data16
test
or
xor
mov
cwtl
pop
xor
push
and
xor
xor
int3
arpl
push
imull
mov
fs
dec
sub
xor
aaa
fsts
xchg
xchg
rclb
scas
ljmp
and
mov
arpl
stc
push
mov
mov
mov
frstor
sub
jp
scas
stos
push
inc
push
mov
jl
or
push
mov
cld
adc
cltd
adc
push
jae
push
fldpi
dec
loope
add
mov
and
or
dec
bound
cmp
and
loop
xor
add
xor
add
cmc
push
pushf
push
adc
push
mov
mov
pop
mov
subl
jb
ja
push
sarl
js
cmp
imulb
mov
adc
cmp
int3
pop
in
cmp
jle
lret
ss
xchg
sbb
pop
ljmp
aad
js
js
jp
fldt
pop
orl
adc
scas
pusha
pop
sub
sub
push
mov
lahf
add
lea
stc
push
mov
jnp
xchg
call
fnstenv
cmp
leave
xor
add
lcall
mov
inc
ds
dec
jbe
sahf
rolb
add
leave
out
fmulp
push
loopne
pushf
jns
and
xor
jae
out
mov
inc
les
xlat
lods
dec
dec
mov
add
daa
mov
notb
dec
xor
jne
int
lea
daa
cmp
cmc
in
cmp
cmp
fucomi
inc
repz
js
lods
in
lcall
in
scas
clc
xchg
aas
lods
push
rorl
out
sub
cwtl
mov
pop
pop
push
xchg
rorb
xchg
cmpsl
enter
mov
jne
or
adc
sub
scas
daa
cld
xchg
int3
cmpsb
mov
cmpsb
aaa
push
pop
sahf
inc
out
inc
cwtl
mov
or
add
iret
dec
je
mov
and
repnz
ljmp
dec
jle
pop
fwait
mov
jnp
dec
mov
add
mov
fnsave
mov
mov
pushl
outsb
or
rcl
jne
xor
inc
push
rorb
pop
out
cmp
adc
jl
js
mov
xchg
inc
push
es
xor
and
add
pop
ss
dec
xchg
aad
inc
cld
xchg
lock
lods
jns
loop
push
push
pop
and
mov
and
ds
add
mov
mov
or
cmp
fimull
rorl
stos
cmpsl
int3
pop
mov
add
lds
pop
ret
adc
mov
cmpsl
dec
xor
mov
mov
aaa
sub
call
mov
mov
pop
fidivs
xor
push
mov
sub
inc
setnp
adc
mov
mov
dec
ss
outsl
and
adc
ss
in
fdivrl
loopne
dec
adc
fadd
lea
xchg
xor
gs
dec
add
stos
mov
sahf
in
push
adc
jae
fwait
jae
fiadds
cld
xchg
pushf
lcall
outsl
js
adc
lods
sti
push
jl
cs
ret
out
mov
lahf
test
mov
sub
xchg
adc
cmp
xor
neg
cmp
cmp
sbb
mov
pop
cmp
lret
or
dec
dec
xor
sbb
std
pop
std
and
xor
std
rcrb
js
roll
adc
add
or
pusha
fisttps
push
outsl
jmp
xorb
cmp
lret
dec
clc
adc
aad
sbb
or
jmp
xor
dec
jmp
mov
mov
popa
fs
subb
lret
lret
or
lea
sub
lahf
mov
imul
pop
shrl
xor
in
pusha
pop
insb
xchg
out
mov
sub
dec
mov
imul
lret
cltd
lret
xchg
lods
negl
repnz
mov
ds
cmc
std
push
pop
cld
int3
pop
xor
movsl
jmp
cmpb
loope
mov
pusha
or
pop
rol
push
dec
sbb
pop
or
and
jmp
in
lret
pop
test
test
cmpl
xchg
mov
mov
sahf
mov
inc
and
ljmp
cmp
inc
add
addr16
and
mov
jge
scas
adc
je
jb
xchg
xchg
adcb
rorl
mov
aam
adc
test
inc
out
pushf
push
iret
insb
xchg
jg
xchg
lea
test
ljmp
push
data16
stc
xchg
cwtl
shrl
iret
aas
ret
call
cmpsb
pop
cmp
frstor
and
xchg
addr16
xchg
mov
js
cli
and
or
rcl
enter
mov
sub
sub
inc
je
mov
or
imul
stos
sub
fsts
or
arpl
jne
enter
adc
dec
fldl
test
int3
in
xor
fildll
imul
nop
and
out
arpl
shl
cmpsl
pop
jae
aam
sarl
sub
jb
pop
pop
adc
cli
pop
imulb
xchg
into
push
shll
cmp
mov
push
ret
sbb
jb
imul
jnp
pop
rcrb
push
sti
popf
add
sbb
leave
pusha
dec
jb
bound
rcr
dec
adc
push
insl
pop
pop
inc
ja
cs
push
out
mov
xchg
daa
inc
add
jne
sbb
inc
cmp
cltd
mov
sbb
sub
xchg
push
out
and
lods
in
jle
sti
mov
shrb
mov
fwait
dec
xor
mov
jecxz
push
divl
cmp
add
outsl
push
repnz
dec
lret
lahf
test
adc
out
fadd
fdivr
mov
fdivrl
lods
pop
mov
in
inc
add
stc
fsts
in
jnp
pop
movsb
add
lahf
loope
aad
lea
xchg
shlb
jnp
push
ret
mov
or
and
jne
inc
or
jle
mov
jg
mov
shl
pusha
lods
int
sbb
ret
sub
pop
sbb
add
into
xor
test
sbb
mov
repnz
icebp
cwtl
ret
mov
repnz
js
loop
aam
inc
jne
fdivl
inc
add
lods
push
fdivrl
add
shlb
push
adc
pop
mov
out
mov
push
mov
out
and
sbb
or
mov
pop
or
lods
and
mul
add
push
ljmp
push
roll
jg
and
data16
stc
cmpsb
sti
ss
lahf
rcll
pop
sbb
scas
sub
test
in
insl
out
or
js
pop
out
in
outsb
int
jecxz
jp
mov
mov
xchg
movsl
cmc
jp
push
jb
mov
fistps
out
je
jae
cld
lcall
out
int3
test
in
jb
push
loopne
sbb
je
cmp
imul
mov
orl
jno
clc
mov
in
hlt
pop
xor
mov
cmp
push
fcompl
adc
add
cwtl
push
mov
mov
sahf
inc
xor
jbe
mov
jge
add
and
icebp
repnz
and
mov
inc
fs
dec
loope
stc
add
ret
loop
pushf
fbstp
popf
sbb
lret
push
xor
jo
imul
test
sbb
push
ja
in
fnsave
ret
add
pop
movsl
ds
and
mov
or
mov
fcomps
adc
or
hlt
test
xchg
pop
sub
dec
pop
scas
les
jecxz
push
sub
stos
scas
jecxz
stc
movsl
je
push
or
inc
mov
pop
aam
call
in
xor
xchg
and
mov
daa
mov
out
sbb
pusha
and
push
sarl
pop
push
cmp
mov
push
inc
mov
cmpb
xchg
inc
jle
inc
notb
aaa
add
pop
jnp
mov
lock
add
outsl
mov
stos
stos
push
stos
sbb
ds
cmc
icebp
es
repnz
stos
test
test
lods
lcall
lods
lea
lods
and
add
mov
and
rorl
adc
int3
inc
sti
cmpsl
pop
jb
rclb
push
inc
negb
cmpsl
pop
adc
js
ds
jmp
fstpl
xchg
aam
push
into
aas
and
aas
add
pop
sub
xor
add
push
bnd
mov
add
add
test
pop
scas
pusha
outsb
cmpsb
or
push
popf
fistpl
gs
sbb
faddl
pop
enter
pushf
insb
insb
pop
movsl
daa
into
pop
lea
mov
mov
filds
pop
mov
and
dec
ds
ljmp
movsb
movsl
insb
aas
sbb
mov
dec
fsts
mov
pop
pushf
subl
das
arpl
mov
dec
jb
aam
rcl
push
testb
and
push
xor
pop
out
cmpsb
stos
inc
out
outsb
stos
lods
xor
loopne
icebp
mov
fcmove
aaa
repnz
fsubrs
pop
stos
or
clc
repz
sbb
ss
int3
mov
loop
into
popf
or
iret
mov
ret
push
sub
inc
xchg
sbb
lahf
inc
or
mov
xchg
enter
push
leave
dec
or
dec
dec
out
adc
push
jg
in
cmpsb
sbb
loopne
lahf
pop
hlt
stc
push
aad
inc
bound
sbb
jne
movsl
cs
dec
ja
lea
adc
push
mov
jbe
fidivrs
push
outsl
sub
jae
add
mov
in
add
decb
shrl
mov
push
add
xchg
xor
inc
fstl
jb
add
dec
fldenv
or
lods
mov
aas
mov
shlb
popf
stos
mov
fcompl
dec
flds
iret
out
test
add
mov
adc
cmp
fmuls
xchg
sbb
xchg
daa
and
int3
inc
dec
push
sub
gs
mov
sbb
pushf
sbb
sti
dec
popf
add
sahf
ss
pop
pop
jbe
imul
mov
aam
fwait
cltd
rclb
gs
pushf
sbb
imul
test
jmp
push
jns
aas
mov
xchg
lret
or
dec
adc
and
sbb
add
jge
push
add
mov
jg
outsl
push
inc
addr16
outsb
inc
add
and
inc
xchg
imul
pop
mov
cmpb
icebp
sub
aad
jmp
xor
or
xor
leave
push
lret
fucomip
cld
mov
mov
das
cmp
ljmp
mov
ret
data16
loope
jl
dec
xor
sti
shlb
and
in
push
jecxz
add
aad
cmpsl
testl
push
imulb
hlt
cs
xchg
push
or
mov
nop
jne
pusha
push
inc
pop
jmp
inc
xchg
sbb
bound
ja
pop
sahf
scas
add
bound
push
arpl
add
mov
xchg
ljmp
std
sbb
sub
movsb
xchg
jbe
in
test
fists
xor
js
insb
xchg
ret
jecxz
fidivs
mov
jbe
psubd
in
mov
mov
mov
std
mov
mov
addr16
xchg
out
push
aad
gs
loopne
jb
test
inc
xlat
gs
fimuls
lret
mov
jno
mov
or
ret
add
ljmp
repnz
adc
cmp
push
sbb
add
in
fwait
cs
pop
pop
ret
iret
cwtl
mov
fdivl
js
mov
or
pop
mov
sub
popf
adc
scas
cmp
loope
fildl
nop
lds
and
stos
sub
ret
push
out
add
sub
or
xchg
push
lock
lods
fwait
aas
mov
nop
push
pushf
jp
mov
pop
imul
cmpsl
xor
orb
push
aam
fdivrs
out
sbbb
sub
xchg
add
cwtl
xchg
dec
nop
hlt
pusha
xor
adcb
dec
loopne
addr16
mov
cmc
repz
add
sbb
out
mov
pushf
xchg
sub
mov
pop
arpl
push
mov
and
into
out
cmp
jne
scas
push
dec
mov
shl
imul
cmp
js
cs
lcall
int
imul
arpl
test
out
dec
test
mov
dec
test
xchg
popa
addps
xchg
sar
pop
xchg
sbb
dec
push
into
in
mov
xor
adc
or
or
pop
loop
dec
clc
fisubs
in
dec
sahf
and
popf
out
xor
pop
pop
cmp
mov
aad
cmp
inc
fidivrs
in
ss
pop
mov
ss
xor
sub
push
inc
int
and
jecxz
loop
jl
stos
fsts
jb
icebp
mov
jmp
or
ja
loopne
hlt
pusha
loop
sbb
adc
adc
xor
mov
repz
adc
call
jb
add
imul
or
rcrb
cmpsb
jbe
xor
add
test
jne
je
shl
add
mov
cld
inc
and
mov
push
mov
mov
xor
adc
stos
jnp
mov
lret
mov
sti
push
xor
lret
xor
jnp
fldenv
sub
mov
push
pop
mov
fmul
push
cs
sbb
popf
xchg
dec
cmp
jne
xlat
mov
in
repz
fnsave
inc
std
cmpsl
cltd
testl
xorl
mov
pop
insl
fdivrp
stos
pop
cmp
imul
and
sub
ljmp
and
dec
aad
adc
outsl
xor
adc
out
dec
dec
mov
mov
jecxz
inc
mov
adc
inc
xchg
inc
out
push
rolb
sbb
adc
cmp
xor
dec
add
scas
dec
lock
sbb
pop
test
sub
inc
arpl
xchg
sbb
loop
sub
mov
jae
jmp
lret
cmp
leave
sahf
push
or
sub
out
outsl
mov
test
jnp
or
lea
mov
sti
jl
adc
add
dec
mov
add
sub
stos
inc
cmc
add
mov
jae
inc
sub
inc
pop
mov
popa
mov
mov
mov
mov
fcom
out
mov
movsl
cmp
inc
cld
jnp
push
jbe
add
mov
push
ja
pop
or
xchg
mov
push
sub
out
ficoms
cmc
sbb
inc
setle
andl
pop
cwtl
int3
ret
popf
inc
loop
icebp
outsb
mov
movsl
shlb
dec
xor
pop
and
xchg
inc
mov
push
pop
loop
adcl
imul
push
mov
adc
fwait
pop
repnz
call
cltd
insl
jge
clc
lahf
pop
push
xchg
push
stos
jno
add
cmp
mov
mov
in
inc
xchg
inc
adc
mov
mov
pop
aaa
sub
fwait
cmp
mov
push
into
sahf
push
inc
xor
adc
mulb
nop
fsts
out
jl
sub
movsl
clc
mov
sbb
or
fcoml
push
mov
pop
add
ds
mov
mov
cwtl
outsl
cltd
push
inc
mov
jp
mov
sbb
mov
lock
mov
outsl
mov
dec
fcoms
jmp
call
adc
testl
mov
movsl
add
pushf
dec
test
sbb
sbb
push
mov
xlat
xchg
xor
adc
mov
push
repnz
sub
add
jecxz
loop
cs
jns
sbb
mov
ss
cmp
daa
daa
lahf
stc
adc
fcmovnbe
inc
inc
inc
sbb
gs
std
lret
imul
loope
call
filds
add
or
sbb
mov
popa
call
push
scas
aad
test
jae
pop
and
sbb
movsl
add
sbb
int
movsl
dec
pop
mov
or
and
fisubs
test
orb
and
test
inc
pusha
lods
mov
rcr
push
sbb
cli
and
pop
add
out
movsb
sbb
or
jnp
dec
sarb
xchg
bound
sub
addr16
int3
mov
mov
push
ja
ret
shl
iret
jbe
cmp
pop
sbb
jmp
out
mov
fwait
aad
iret
in
mov
xor
cld
inc
and
cs
std
outsb
fwait
and
lahf
mov
pop
jmp
dec
leave
pop
and
or
popf
mov
rcll
pop
faddl
or
fscale
movsl
dec
mov
dec
test
add
inc
jne
push
jno
dec
and
in
fsubr
cltd
stos
mov
pop
jecxz
imull
ds
inc
jp
fldcw
ss
std
jmp
and
lods
inc
pop
nop
jge
shrb
mov
repnz
loope
push
out
and
lret
jnp
pushf
cli
js
mov
pushl
ss
jno
into
stos
mov
sbb
mov
mov
jg
push
ss
mov
mov
pop
fisttpll
out
mov
cmp
mov
shll
pop
dec
mov
xchg
out
xchg
ss
ret
les
mov
addl
subl
popf
fs
sbb
jg
xchg
cmp
mov
sbb
cmc
cltd
or
cli
pop
sub
or
and
push
in
jmp
sub
mov
or
leave
divl
pop
push
mov
test
data16
mov
sbb
aam
dec
jg
mov
mov
mov
sbb
loope
or
pop
lcall
test
sbb
mov
icebp
fisttpl
addr16
and
cmp
adc
cmpsl
std
jg
popf
leave
sarb
iret
xor
nop
imul
loope
aaa
push
xor
shrl
imul
add
sahf
push
out
xchg
jb
mov
pop
outsb
pop
mov
mov
xchg
inc
jge
dec
dec
imul
addb
icebp
jle
and
mov
loopne
je
sub
push
mov
push
xor
cwtl
dec
movsb
jp
xor
pop
addr16
subb
imul
mov
iret
arpl
lods
mov
cld
lds
cmpsl
popf
mov
dec
ret
scas
popa
cmp
push
dec
pop
rol
xlat
out
fisttpl
stos
fbstp
adc
in
int3
mov
mov
sbb
js
jae
push
add
sub
jp
xor
stc
push
jecxz
sub
out
push
jae
sbb
adcb
xor
gs
sbb
mov
jecxz
push
mov
std
lods
dec
enter
add
and
je
ds
push
test
adc
pop
jnp
lret
mull
fwait
inc
or
not
lret
mov
or
push
mov
jns
dec
jl
jg
ja
adc
aad
into
imul
cwtl
fwait
mov
sub
imul
sti
cmc
dec
fbld
out
pusha
push
xor
xchg
mov
addr16
xor
cmp
pop
out
ret
lods
aam
mov
xchg
maskmovq
imull
and
ret
pop
out
js
inc
mov
cmp
jb
inc
jl
sub
sub
je
cs
mov
insb
add
jno
push
repnz
xchg
lds
sbb
mov
push
std
lods
lods
orl
push
jp
js
add
adc
roll
out
shr
lcall
dec
arpl
movsl
xchg
dec
pop
sub
stc
mov
je
add
cltd
lcall
or
fisttpl
shrb
or
mov
fadd
inc
mov
dec
push
dec
jns
jno
pushf
mov
stc
in
sub
mov
call
xchg
repz
add
movsl
xchg
fdivrl
sbb
popf
mov
jo
pop
hlt
mull
dec
add
and
aas
lock
je
mov
fbld
in
fsubrs
xchg
add
push
adc
shrb
retw
adcl
subb
mov
pop
je
les
lock
imul
es
fidivs
jb
ffree
pop
adc
enter
mov
sub
mov
jl
mov
xlat
testb
aam
add
in
dec
mov
push
xchg
test
xorl
cmpsl
or
rorl
mov
sub
jo
call
mov
in
mov
adc
mov
jnp
mov
idivb
xchg
mov
shlb
xor
insb
inc
stos
mov
mov
mov
mov
daa
pop
add
cmp
mov
push
lret
fsubl
xchg
lcall
add
pop
fistl
pop
lret
aaa
xor
ret
dec
cmc
stc
movb
aad
loop
negb
insb
out
cmp
inc
enter
jne
popf
adc
lds
and
test
jne
adc
loope
sub
add
loopne
cmp
data16
jecxz
insb
cmp
inc
mov
mov
inc
pop
inc
stos
bound
notl
fidivs
loopne
xchg
shlb
pusha
xor
cmp
dec
pop
cli
sbb
rolb
cmp
loopne
jno
dec
sarl
in
push
bound
jp
test
xor
fsub
or
aaa
orb
ficoml
xlat
or
pop
in
mov
testl
inc
insl
add
push
dec
shrb
out
and
fistpl
iret
cmp
add
and
in
push
std
add
jecxz
xor
lods
inc
popf
jl
gs
add
ficoms
ss
push
xchg
dec
scas
addr16
mov
add
sbb
lret
insl
movsb
mov
stc
adc
sbb
icebp
sub
mov
jmp
fidivrl
cmpsb
cmpsb
ds
pop
in
add
sub
roll
insl
jae
mov
xor
int3
jle
inc
nop
jo
xlat
mov
aaa
out
mov
call
xor
cmp
mov
es
mov
jl
mov
int3
pop
push
mov
mov
mov
pop
fimull
or
bound
push
dec
dec
cmp
xlat
push
inc
std
mov
pop
out
test
lock
dec
aad
inc
fdivs
nop
pop
lahf
fwait
aaa
ret
xlat
in
ljmp
cs
push
xor
cmp
scas
and
and
shll
push
cmp
les
adc
es
imul
mov
les
out
sbbb
mov
fisubs
daa
inc
cmp
xchg
fnstenv
cmp
jo
jbe
mulb
bound
push
mov
test
enter
dec
or
fxch
add
popf
fisttpll
andb
lods
dec
cmpb
js
adc
cwtl
rcll
mov
outsb
rep
into
push
and
pop
xchg
repz
and
fiaddl
dec
mov
adc
cmp
sbb
add
je
pop
in
addb
mov
lret
outsb
add
aam
and
adc
mov
pop
pop
cltd
pop
jmp
sub
mov
stc
dec
sti
pop
lahf
fcompl
es
ds
jp
fdivl
inc
sub
ret
scas
rolb
ja
mov
jmp
add
inc
fsubrl
je
or
arpl
outsb
fcomps
push
sbb
sbb
cltd
jae
and
stos
xchg
das
daa
and
jbe
adc
and
inc
sub
push
in
inc
add
mov
cmp
scas
mov
xor
cmpsb
add
add
push
add
adc
lret
adc
push
jbe
arpl
cmp
xlat
mov
lcall
pop
add
in
js
into
movsl
sbb
ljmp
push
lgs
mov
and
fcmovu
sarb
xchg
jnp
ds
loope
mov
repnz
repz
jecxz
movsb
sar
cmp
jbe
mov
pop
push
nop
bound
std
add
jae
adc
inc
cmp
mov
pop
fldcw
add
push
cmp
sbbb
fimuls
xchg
sbb
test
mov
mov
add
ret
popf
adc
mov
test
jecxz
adc
cmp
or
cmp
push
mov
or
or
jo
mov
xor
addr16
push
xchg
aaa
lea
jo
inc
lcall
fs
cwtl
adc
jbe
inc
rol
inc
ret
xor
fwait
jo
lret
les
fistpll
imul
dec
xchg
fprem
cmpsb
stos
insb
ja
fldl
pop
mov
ror
mov
loopne
adc
mov
and
xchg
xchg
and
xor
xchg
sub
dec
fisttpll
jae
or
mov
bound
mov
rclb
pop
mov
cmc
orb
or
hlt
mov
add
int
inc
lcall
push
add
loope
jno
sub
mov
test
dec
cmpsl
sbb
rolb
gs
iret
repz
mov
std
out
vcvtdq2ps
or
sbb
pop
push
jmp
in
icebp
cmp
sub
pop
rorl
mov
jae
cmp
sbbb
and
pop
insb
xchg
xor
jo
jb
adc
test
loope
cmpb
clc
mov
shll
and
jg
ret
icebp
out
push
inc
inc
inc
sub
push
cmp
sbbb
imul
inc
jge
jmp
dec
repnz
fisubs
test
push
push
pop
sub
sbb
jp
jg
fnstsw
popa
adc
pop
sbb
mov
enter
insb
push
push
push
dec
and
sub
addl
repz
orb
cmp
mov
int
outsl
ret
push
pop
movsl
jmp
xor
inc
sarb
test
fcomps
bound
adc
std
pop
pop
pop
pop
jne
leave
ds
inc
scas
jmp
mov
sbb
lcall
push
push
add
mov
outsl
adcb
shll
dec
ret
cmp
xchg
shl
jns
cmpsb
sbb
pop
xchg
nop
lock
jge
ficoml
rcrb
iret
outsb
in
jl
push
call
add
bnd
testb
in
mov
fdecstp
add
imul
popf
negl
std
jnp
fs
int
inc
push
dec
je
inc
dec
xchg
or
mov
nop
popf
mov
mov
or
inc
fsubp
inc
icebp
pop
adc
out
add
jecxz
aam
push
xchg
and
into
xchg
xchg
imulb
and
lods
lcall
rcr
lret
icebp
cmpsl
xchg
lock
jbe
adc
lods
movl
cmpsl
and
or
les
sbb
aaa
mov
lcall
call
mov
in
sbb
push
cmp
popf
loopne
add
andl
ret
mov
jns
mov
add
push
push
mov
cmpsl
cmp
push
dec
test
jg
int
and
cmp
mov
jge
mov
pop
data16
sahf
js
or
daa
mov
and
mov
mov
and
outsb
cmp
push
call
jl
daa
sbb
cmc
pusha
icebp
aad
js
inc
sub
push
lret
add
add
cmp
dec
mov
negl
stc
add
js
js
pop
jg
xchg
orl
mov
mov
out
xor
jno
hlt
hlt
pop
or
dec
add
enter
ljmp
insb
xchg
or
leave
shlb
xchg
clc
jb
jno
faddl
lret
adc
mov
jecxz
sub
pop
xor
cmp
movsl
pop
popa
jbe
hlt
jmp
fldcw
popa
xchg
call
or
enter
inc
imul
bound
sbb
jae
sbb
push
push
xor
test
add
je
ja
ss
cmp
sbb
sbb
push
daa
jo
lock
pop
sbb
sbb
sub
cld
dec
aad
shrl
cmpsl
or
sub
in
dec
fsts
in
movsb
mov
pop
icebp
and
dec
mov
es
pop
es
cltd
and
iret
xlat
pusha
jae
and
shlb
xchg
xor
push
pushf
inc
mulb
xchg
hlt
sub
mov
ret
and
out
sbb
jmp
sahf
sub
fsqrt
inc
jecxz
bound
jae
dec
inc
in
dec
idivb
cwtl
sbb
jbe
lahf
sbb
xchg
popa
sub
ja
xor
cli
sbbw
cmp
mov
fcomi
cli
cli
cmp
lods
sub
lcall
mov
cld
test
xor
jnp
movsl
mov
subb
mov
and
xor
mov
movsb
xchg
mov
mov
mov
int
sbb
cmp
jo
loop
mov
push
cmp
jmp
adc
push
addr16
scas
idivl
cmp
add
in
sbb
dec
insl
iret
sti
lea
dec
mov
inc
orb
sbb
mov
cmp
cmpsb
test
push
dec
in
rcr
cmc
and
int
xor
mov
lods
xchg
inc
dec
add
xlat
das
sub
imul
sub
bound
add
aaa
out
jns
inc
or
pop
les
inc
pop
mov
addr16
ret
movsl
pop
mov
lret
and
pop
push
fsts
xchg
sar
arpl
mov
fwait
adc
je
push
je
dec
int3
mov
push
cltd
lret
ja
jp
xor
inc
mov
je
js
cmc
das
lods
cld
xchg
gs
xor
pop
dec
mov
sbb
jnp
insb
aas
mov
adc
xchg
insl
mov
es
movsl
out
push
test
cmpsb
enter
nop
ficomps
sbb
das
dec
sub
add
scas
pop
xor
ret
add
push
lock
sbb
sub
push
daa
addr16
ret
adc
cmp
jbe
push
add
stc
push
dec
leave
xlat
cmpsb
mov
adc
cmp
xlat
leave
fsubrl
stos
out
rorb
cmc
pusha
and
clc
push
or
and
stos
aas
adc
call
jp
es
mov
add
pop
sbb
sub
je
fstpt
and
sbb
adc
loopne
cmpsl
xor
xor
push
subb
mov
mov
insl
sbb
mov
rcr
fsubrl
stos
insl
cld
sbb
cwtl
push
add
push
lcall
arpl
and
pusha
ljmp
mov
inc
mov
mov
or
test
push
test
cmp
push
repnz
call
inc
movsb
cmp
insb
das
mov
insb
cs
push
or
insl
xchg
cmp
mov
mov
aam
test
or
pushf
jmp
insl
bound
mov
xor
xchg
cmp
rcrl
pusha
jecxz
sbb
xchg
push
sahf
jecxz
icebp
fisubs
push
adc
adcl
or
lcall
in
loope
fisubs
or
mov
and
inc
xor
jmp
xchg
in
nop/reserved
aam
cmp
dec
xchg
add
rolb
pop
jle
inc
xor
or
dec
fcomps
shl
inc
test
mov
cwtl
aaa
lods
push
out
cli
cld
and
lods
xchg
or
pop
cmpsl
jb
faddl
mov
push
or
test
and
imul
fs
sub
in
dec
push
loope
or
mov
xor
inc
je
xchg
outsb
push
fnstsw
mov
cli
and
mov
sub
push
stos
insb
iret
pop
jno
movsl
sbb
cmp
jo
test
cmp
ss
pop
jecxz
clc
mov
sub
mulb
hlt
scas
in
in
dec
mov
data16
push
lock
pop
inc
jae
pusha
inc
xchg
lods
fbld
lret
dec
add
xchg
pop
leave
add
mov
xchg
out
add
lret
dec
sbb
arpl
inc
add
fimull
add
popl
into
clc
cmpb
mov
data16
mov
fsubrl
sub
dec
push
idiv
test
inc
nop
pop
or
out
xor
mov
xchg
out
mov
das
cs
lea
lods
or
scas
xor
cmpsl
push
outsb
repnz
insb
movsl
mov
subl
jp
dec
adc
jnp
incl
mov
cmp
jno
or
adc
pushf
pop
pop
movsl
mov
out
bound
xchg
ret
jle
mov
pusha
and
inc
int3
xorb
inc
imul
jb,pt
adc
stos
movl
adc
ja
test
fisubs
mov
pop
fwait
movsb
adc
add
mov
lret
shlb
addb
and
inc
pop
nop
fistpll
mov
cwtl
sbb
out
or
inc
add
fstpl
hlt
mov
into
mov
jns
jg,pn
jno
add
push
or
xor
adc
cltd
mov
cmc
cmp
or
ret
negl
and
fxch
arpl
loope
pop
repnz
mov
adc
cmp
push
sub
pop
sub
mov
hlt
int
aam
add
lcall
idivb
dec
test
mov
pop
popa
bswap
out
and
ja
leave
nop
rorl
dec
pop
dec
rolb
mov
cmp
je
cmpsb
inc
dec
pop
fcomps
pop
popf
xchg
arpl
push
xlat
into
xor
mulb
add
xor
sbb
jmp
mov
sub
leave
sbb
xorl
outsl
out
lahf
push
sub
andb
fcom
mov
and
sbb
dec
push
push
and
std
push
cmp
in
fnsave
dec
hlt
dec
shlb
pop
lcall
xlat
adc
inc
movsb
leave
enter
es
xlat
dec
and
jnp
mov
scas
xor
test
lock
jle
and
lds
xchg
xor
ret
subb
push
push
ret
mov
push
stos
les
and
pop
je
pop
cmp
cmpsl
xlat
movsb
js
dec
int3
jmp
or
test
jns
inc
push
sbb
cmc
out
loop
xchg
icebp
cmpsb
push
pop
mov
cmp
push
pop
cmpb
push
les
mov
jmp
in
les
mov
inc
mov
shl
js
lods
mov
lea
icebp
shrl
fcomip
dec
and
mov
out
pop
fnstenv
push
or
jp
outsb
mov
je
lds
push
daa
sbb
push
sti
inc
lds
and
add
xchg
jge
cltd
pop
push
jle
dec
mov
dec
mov
pop
mov
adcb
pop
out
gs
in
cld
add
xchg
hlt
std
call
imul
clc
data16
jo
jle
clc
jg
and
jae
ljmp
scas
hlt
out
xor
add
orl
call
mov
test
xor
mov
mov
sub
pop
lret
mov
lahf
push
rorb
jbe
loope
mov
and
add
pop
repz
adc
in
mov
add
push
push
les
sub
cwtl
popa
cmp
test
push
xor
hlt
ja
sub
aad
inc
mov
sub
lret
scas
bound
mov
adc
subb
imul
mov
xchg
sub
cmp
jle
test
or
xor
ljmp
adc
lods
les
jl
xchg
mov
inc
dec
xchg
aaa
xor
xor
xor
int3
lret
pop
sub
cmp
pop
dec
push
fcmovnu
jb
push
mov
loope
in
out
aam
pop
sbb
in
pop
lock
aas
ss
mov
lret
add
or
jge
mov
jnp
lahf
daa
fwait
ds
jecxz
stos
jecxz
dec
das
sub
ljmp
mov
imul
adc
xlat
dec
mov
leave
out
or
lods
pop
call
aam
sbb
mov
lds
nop
int3
test
ffreep
mov
or
dec
dec
cmp
xchg
cmp
mov
shr
xor
stos
popf
repnz
movsb
fwait
xchg
test
sbb
inc
rorb
cs
cmp
sahf
call
lods
xor
push
xor
lcall
out
jg
shrl
mov
sbb
insb
dec
stos
gs
lods
in
pop
mov
push
js
ss
sub
xchg
push
stc
movsb
in
pop
inc
js
inc
sub
xor
add
push
addr16
in
fmull
push
insl
jecxz
jg
adc
ret
push
gs
mov
frstor
imull
xchg
lds
fidivrs
fcoml
scas
ss
outsl
dec
dec
adc
data16
ja
or
jle
out
push
push
add
jecxz
scas
ja
mov
push
lret
or
mov
sbb
ja
out
jmp
aas
pop
dec
jecxz
mov
cli
xorb
movsb
push
aaa
test
jmp
sub
popa
mov
ret
and
mov
scas
dec
insb
mov
std
sub
ds
xor
shrl
movsl
pop
sahf
pop
push
jge
xchg
push
cmc
inc
cmp
out
add
repnz
sub
stos
out
mov
into
xor
outsl
and
test
gs
rcl
pusha
lahf
mov
push
sbb
adc
jle
rcll
cmp
and
shlb
xor
popf
ffreep
rcll
push
pop
int
sbb
push
imul
and
in
aas
mov
sub
test
jne
enter
mov
adc
pop
xor
fisttpll
xchg
in
mov
pop
ss
in
movsb
xchg
sbb
sbb
jnp
cmp
cmp
and
fstpl
push
xchg
cs
ja
in
std
je
mov
clc
js
dec
hlt
pop
cltd
dec
cmpsb
ljmp
aas
aaa
hlt
push
lock
adc
subl
aaa
pop
sbb
jb
test
data16
pusha
std
jecxz
aas
mov
xor
cmove
sbbb
fadds
add
ret
cmp
pop
or
mov
mov
sbb
mov
sbb
xchg
or
lret
les
sete
jb
push
insb
imul
mov
and
stos
mov
jae
cmp
pop
adc
lahf
jns
and
jle
inc
xchg
adc
fisttpll
push
hlt
loop
outsb
lea
in
cmp
sbb
shll
inc
jne
jo
cmp
fstpt
mov
push
cwtl
push
inc
jns
add
mov
dec
sbb
wbinvd
cltd
mov
or
push
and
push
adc
fildl
and
lods
es
mov
lret
pop
xchg
mov
lods
cltd
call
insb
cmc
insb
int
test
adc
pop
ret
stos
orb
and
rorb
add
mov
and
ds
push
xor
das
out
clc
jne
fmul
fmuls
push
jg
mov
add
xor
push
pop
repz
arpl
sbb
xchg
sub
jbe
ret
das
adc
push
ret
jbe
sti
adc
jno
and
xchg
add
icebp
and
add
mov
dec
dec
fildl
xchg
ficompl
jns
cld
lock
xchg
mov
jg
jl
inc
leave
fwait
sbb
push
stos
mov
jp
dec
push
pop
mov
fcmovb
pop
pop
je
sub
loopne
inc
push
push
xchg
add
gs
int
jnp
test
push
iret
pop
dec
hlt
adc
mov
inc
in
test
cmp
and
dec
popf
add
xor
out
jns
into
mov
out
test
and
repz
inc
mov
jg
cmp
cltd
or
jae
shrl
mov
in
inc
cmpsb
call
lcall
jbe
pop
sub
mov
inc
leave
icebp
idivb
dec
push
into
mov
push
addr16
xor
out
push
cmp
mov
pop
iret
add
nop
mov
cmc
jmp
fsubrs
jae
jmp
xchg
xor
data16
mov
or
fiadds
sub
xchg
clc
adc
sarb
sbb
mov
fcmovnu
int3
mov
fisubl
or
mov
popf
pop
dec
popa
pushf
cmp
ljmp
dec
mov
lret
aad
shl
in
shrb
add
sub
jb
sbbb
sahf
clc
mov
je
fld
jae
ja
inc
lahf
mov
xchg
or
dec
imul
movsb
jg
ss
sub
add
push
stc
inc
shl
add
pop
push
cwtl
cmc
ja
in
out
ficoml
push
sbb
loope
sbb
sbb
jo
mov
xchg
mov
dec
iret
jge
pop
shl
outsl
adc
and
adcb
leave
dec
add
into
int
dec
jge
xor
lret
outsb
mov
popf
lcall
nop
or
sbb
outsb
push
push
test
ficoms
orb
xorl
scas
imul
jns
fdivl
subb
cmp
jmp
addr16
fidivs
lahf
ret
and
stos
loop
js
stos
xor
test
loop
xor
jge
mov
xchg
fwait
insb
mov
cmpsb
sbb
shlb
mov
fidivl
es
sub
stc
pxor
pop
stos
and
call
insb
pop
mov
add
add
lret
inc
in
adc
sbb
je
jmp
dec
mov
fsubs
sbb
icebp
fcoms
and
in
mov
je
mov
inc
sbb
fucomi
in
cmp
aam
xorl
outsl
xlat
xor
dec
in
adc
push
or
inc
aad
stos
cmpsl
mov
popa
shll
push
xlat
push
lea
inc
pop
mov
outsl
dec
fcompl
rorb
cmp
or
fadd
pop
das
cltd
decb
sbb
rcll
std
sti
jmp
pop
jb
data16
pop
push
xor
leave
jns
mov
pop
mov
pop
out
mov
mov
lods
cltd
mov
mov
push
sti
pusha
jge
repnz
popa
or
popf
cmc
repz
cli
sub
cmp
lock
pop
repnz
lods
repz
jge
cmp
lea
mov
push
and
mov
fucomi
testl
movsl
les
xchg
ds
arpl
or
inc
lea
in
mov
lret
in
push
nop
and
pop
out
xchg
push
hlt
cs
mov
pop
lahf
adc
daa
push
pop
scas
jecxz
add
mov
aad
jle
out
ja
cmp
cld
repnz
ds
adc
lahf
sub
cltd
fstl
xor
aam
into
mov
jne
or
outsl
dec
pop
push
fildl
push
test
sub
pop
inc
lea
inc
fidivs
adcb
repnz
push
push
jecxz
xor
sub
jnp
inc
mov
bound
pop
fstpl
shlb
sbb
fimuls
test
popf
or
jns
out
sti
dec
sbb
mov
jle
dec
inc
stos
and
les
lea
fs
repz
sub
xchg
mov
and
rclb
es
enter
int
sbb
outsb
rcll
insb
mov
push
jnp
jmp
aas
xor
pop
jo
inc
jbe
iret
add
xor
adc
cmc
test
adc
lea
mov
cld
dec
in
cmpsl
jmp
out
inc
cli
sbb
ret
mov
test
sbb
xchg
pushf
lret
aas
fadds
fwait
or
sahf
cmc
or
das
out
cmp
lods
mov
popf
adc
cld
dec
std
sbb
xchg
mov
xchg
dec
mov
dec
cmpsl
push
vmwrite
pusha
mov
mov
aam
add
test
jp
mov
cmc
lea
cmc
jl
mov
outsb
out
mov
push
movsb
mov
jbe
mov
orb
fisubs
or
clc
and
lods
add
jnp
add
dec
fistpll
out
add
jecxz
mov
mov
arpl
lret
roll
mov
inc
or
lcall
out
pushf
scas
mov
std
das
testl
push
mov
gs
rcrl
shrl
fcomps
mov
outsb
xchg
test
popa
negb
push
mov
and
inc
and
fldl
jl
add
xor
push
push
pop
pop
pop
push
daa
sbb
lock
in
lods
in
jg
lahf
xchg
bnd
mov
fcoml
bound
add
push
cwtl
sbb
jecxz
inc
push
pop
leave
pop
lods
xor
cmc
nop
fisubrl
ficomps
mov
dec
movsb
aam
es
add
lahf
int
pop
ret
xor
mov
test
sub
dec
popf
in
inc
repnz
xor
mov
mov
daa
sbb
les
rol
xor
mov
sar
cltd
out
cmpsl
or
and
cmpsb
push
or
jb
data16
leave
mov
jnp
jb
jb
rcll
mov
stc
repnz
in
xchg
dec
mov
adc
adcb
push
mov
jl
cltd
loope
lret
mov
scas
fistps
push
int3
int
dec
push
imul
stos
out
sbb
or
sub
sti
out
sub
mov
xchg
dec
les
es
sahf
movsb
into
sbb
mov
clc
sbb
ljmp
mov
outsl
sti
mov
push
popa
lds
stc
ljmp
ss
cmp
das
xor
push
loope
out
pop
inc
icebp
sub
xor
mov
ficoml
cs
addps
mov
push
sahf
cli
roll
and
xchg
movsb
scas
sub
add
in
out
dec
lods
xor
jne
movsl
inc
xchg
sahf
ljmp
mov
lods
push
aad
test
ficompl
loop
insl
dec
xchg
push
pop
fisubrs
dec
add
in
std
ss
cltd
jle
daa
hlt
mov
xor
out
add
mov
cli
xor
adc
out
and
pop
xor
pushf
mov
fistps
scas
add
iret
iret
pop
mov
sbb
mov
movsb
sbbl
fistps
arpl
jl
addl
xchg
loope
clc
mov
and
ret
mov
movsb
mov
popa
mov
and
xchg
test
xor
lods
out
addr16
xchg
push
sar
lahf
or
outsl
push
push
fwait
shll
mov
inc
jne
negl
daa
sub
lock
dec
jo
test
ror
cli
jnp
outsb
sbb
daa
xchg
pop
aas
inc
sbb
xor
adcl
pop
out
inc
push
ffree
xchg
decb
or
mov
cltd
aas
mov
mov
mov
cmp
pushf
cmp
pop
fs
lock
fsubp
cltd
sub
adc
dec
cmc
repz
sub
dec
insl
fsub
dec
decl
adc
sub
add
in
mov
xchg
inc
xor
out
mov
mov
mov
mov
jg
pop
mov
add
mov
jb
arpl
or
subb
jecxz
jo
cld
aaa
jmp
daa
mov
pusha
daa
ret
adc
add
jg
mov
mov
jbe
fcoml
mov
jbe
loopne
xchg
data16
and
push
jne
jl
shlb
pop
mov
enter
push
orb
stos
out
xchg
inc
test
inc
xchg
pop
repnz
mov
xchg
lock
cmpsb
test
fcompl
add
push
mov
in
mov
add
cmp
cmp
sarb
jecxz
call
xorl
lret
and
clc
inc
jne
dec
jb
das
or
xchg
aad
lret
xchg
push
dec
mov
dec
or
add
sahf
dec
adc
or
arpl
rcl
jecxz
popw
sahf
mov
arpl
popa
sub
and
fs
dec
or
enter
pop
cwtl
std
add
or
aam
ds
test
push
push
mov
fsubp
rorb
inc
fdivs
enter
mov
push
cwtl
jne
aad
fdivl
movsb
and
mov
cli
in
lret
cli
cmc
sub
in
insb
mov
leave
sbb
cld
in
or
arpl
xor
sti
in
lahf
cmp
ja
mov
xor
pop
int3
mov
addr16
out
xchg
sbb
clc
lret
pop
push
pop
sub
leave
add
mov
in
int
jle
jns
xor
test
in
mov
dec
or
jl
push
andb
inc
das
inc
jg
xor
mov
repz
gs
cwtl
cmc
stc
and
pop
cmpsl
push
dec
int
and
les
push
or
or
cs
push
leave
push
faddl
cmp
push
aad
out
in
fwait
cmpsl
add
stos
fiaddl
dec
xor
dec
btr
push
push
stos
lahf
pop
xor
cmpsl
loope
pop
jmp
jae
stc
loopne
pushf
sbb
in
pusha
mov
adc
jbe
iret
xor
or
or
stos
bound
jmp
jl
movsl
dec
insl
int3
dec
add
das
and
mov
arpl
add
xchg
add
jae
and
or
loopne
sbb
jns
add
mov
cmp
mov
insb
sbb
adc
rcll
xchg
roll
jns
pop
inc
fwait
jl
lods
cmc
pop
mov
adc
push
cmp
rclb
fstpt
mov
and
sbb
add
xchg
fmul
cmc
adc
cs
xchg
je
cmp
mov
or
jbe
sub
cmp
mov
fistpll
mov
or
imul
mov
ljmp
dec
outsl
lret
xchg
dec
cmp
or
jne
and
aas
test
test
cli
pushf
fldl
dec
lds
adc
cwtl
sbb
fistps
push
push
sub
sbb
push
xlat
inc
dec
lea
mov
jbe
cmp
adc
jnp
fmulp
js
push
xchg
fidivl
cli
jmp
or
inc
imul
in
movsb
mov
cli
ss
lds
cmp
movsb
stos
dec
and
pop
mov
pop
xchg
pop
adc
jno
add
adc
in
jmp
xchg
mov
clc
xor
imull
inc
stos
push
call
int3
rcll
mov
in
pop
cmp
jb
push
insl
gs
mov
adc
mov
lret
sti
xchg
mov
and
xchg
bound
clc
bound
sub
insl
scas
inc
sub
xchg
aad
mov
fisttpl
pop
hlt
jne
push
scas
mov
push
test
ss
stos
out
scas
shlb
lret
pop
ret
pushf
mov
filds
push
rorl
orl
out
mov
call
out
test
sti
or
loop
or
test
mov
jmp
jmp
pushf
pop
jne
sub
sub
fsubrs
aas
pop
jbe
loopne
fs
sub
jmp
loopne
movsl
loope
adc
jge
dec
inc
divb
mov
dec
jge
jb
xchg
mov
ds
adc
or
adc
add
frstor
pop
dec
loopne
gs
lret
mov
add
dec
es
pusha
mov
fsubrl
data16
dec
inc
fiadds
das
lods
fnop
adc
adc
mov
rorb
dec
xor
mov
xchg
scas
lahf
adc
xchg
dec
stc
stc
sub
inc
movntps
int
pop
mov
pushf
sbb
rcll
lods
test
ja
mov
pop
inc
xor
add
clc
aad
mov
sbb
cmpsb
inc
dec
or
mov
add
push
push
mov
dec
in
or
ja
fadd
icebp
ret
adc
fwait
jmp
mov
jle
mov
je
push
in
sahf
mov
and
iret
bound
dec
cwtl
sti
sub
push
cwtl
sbb
lock
pop
mov
out
inc
sub
push
ret
add
repz
inc
mov
arpl
pop
cmc
shll
les
dec
imul
repnz
jle
and
mov
pusha
xchg
or
test
lods
int3
inc
dec
test
ja
mov
push
xchg
imul
jecxz
imul
push
hlt
dec
daa
pusha
sti
or
jb
adc
adc
adc
sbb
and
cmp
pusha
jge
mov
push
mov
shll
test
fs
mov
and
dec
rol
imul
jno
add
fs
stos
into
add
out
mov
das
and
pop
es
ficomps
sahf
push
mov
dec
push
push
mov
and
shr
push
iret
lods
push
pop
hlt
adc
popf
lcall
pusha
add
loope
dec
mov
mov
lahf
dec
pop
inc
icebp
adc
mov
add
pop
imul
add
repnz
inc
pop
lods
lods
adc
cmpb
movsl
xorl
mov
push
cmp
sub
sub
sbb
cmp
sbb
sbb
xchg
or
sub
ret
cmpsl
cmc
xor
in
sti
mov
pop
and
nop
dec
insl
jbe
push
fisubrs
movsb
fnstenv
cmp
shr
int
inc
mov
sbb
ret
fstpl
dec
jecxz
mov
rclb
adc
jnp
rclb
or
sbb
sarl
cmp
and
cltd
sub
push
xchg
jle
popf
and
xlat
add
ret
xor
roll
and
repnz
sbb
mul
xchg
scas
imulb
insl
xchg
sahf
push
test
push
push
pop
dec
shr
int
jns
jp
fcoms
mov
jns
loop
repz
test
cmpsl
cmp
insl
lds
push
in
jecxz
pop
ret
xchg
hlt
stos
mov
loopne
arpl
jne
mov
lahf
out
mov
mov
rolb
popf
or
or
ret
cli
and
fdivrl
dec
push
inc
repz
dec
insl
shlb
pop
fsave
mov
xor
shlb
sub
inc
int
dec
negl
mov
xchg
jno
mov
sbb
mov
imul
push
cmc
repnz
std
jmp
jmp
push
std
dec
inc
cmp
gs
fsubl
clc
cmp
ja
pushf
inc
sub
arpl
adc
push
mov
push
mov
and
andb
jmp
fnstenv
sbb
cmp
sub
pop
inc
push
fildl
push
cmp
imul
repnz
repnz
xchg
or
mov
lret
sbb
in
mov
push
lea
idivb
push
pop
jle
push
shl
inc
cmp
pop
mov
jae
or
aaa
jmp
push
fidivrl
repnz
dec
add
rcrl
xchg
roll
sub
mov
cmp
and
jl
shrl
int3
xor
pop
fdivrs
popf
or
fadds
aaa
lea
jge
push
push
lret
pop
fisttps
mov
out
int3
hlt
pushf
push
insb
mov
icebp
int3
lret
cmp
aaa
pusha
jg
stc
cmp
cmpsl
fcmovnb
loop
add
pop
dec
lds
andl
shl
fdivl
jl
mov
lcall
jl
mov
xchg
pop
int
pop
jmp
les
orl
mov
les
sub
gs
mov
jo
inc
xchg
sbb
cwtl
add
and
and
mov
jae
jno
sub
cld
sbbb
out
test
rol
mov
add
std
pop
jbe
jle
pop
jns
out
mov
fcomps
and
inc
push
push
sbb
push
xor
movsb
push
mov
sti
sbb
mov
adc
inc
hlt
mov
lret
out
lcall
idivl
sbb
jle
jge
into
movsl
cmp
mov
movsl
pop
int
test
repnz
or
or
ss
cli
je,pt
aad
mov
mov
cld
lret
ja
push
push
cmpsb
test
iret
cwtl
mov
cmp
pop
test
jmp
into
out
outsl
xor
lret
das
and
cmp
jb
jnp
sub
xchg
loop
nop
inc
mov
dec
sub
xchg
nop
jp
mov
shrb
mov
and
ljmp
pushf
push
add
mov
loopne
rol
lods
fsubrl
hlt
insl
cmp
jp
fwait
push
jecxz
xchg
inc
push
movsb
mov
mov
out
out
jne
rorl
pop
in
pop
bound
sub
xchg
movsb
cmpsb
adc
test
push
add
pushf
mov
jl
aam
jl
xchg
leave
push
mov
mov
loope
xor
mov
subl
inc
ss
bound
xchg
ljmp
sbb
dec
pop
mov
and
mov
xor
popa
rorb
pushf
out
arpl
fsub
add
adc
xlat
push
xchg
dec
insl
xlat
ret
ret
sbb
cltd
adc
add
outsb
pop
les
jle
push
insl
pop
dec
pushw
pop
jae
inc
add
mov
pushf
movsb
cmpsl
leave
jp
sbb
repnz
sbb
jl
sti
in
out
add
mov
dec
mov
std
in
sbb
jmp
sbb
icebp
test
dec
push
ja
stos
add
cmp
mov
pop
repnz
imul
mov
popa
testb
pusha
loopne
pop
sub
loopne
test
mov
test
push
adc
sub
jle
icebp
mov
and
add
or
mov
mov
stos
xchg
aam
loop
jb
push
inc
adc
lret
jb
jae
pusha
inc
push
sub
in
jae
xchg
pop
nop
sbb
mov
arpl
mov
mov
jne
push
sub
dec
addr16
into
insl
xchg
push
mov
faddp
gs
inc
dec
lahf
cmp
hlt
es
test
xor
mov
jno
outsl
jne
mov
push
pop
jnp
mov
divl
mov
pop
mov
repz
out
repz
insb
add
mov
add
cmp
into
int3
jmp
inc
dec
cmpsb
mov
cmp
popa
lock
inc
jns
fildl
adc
add
mov
popl
fnstsw
jg
fs
mov
into
ds
push
dec
mov
js
mov
lods
in
adc
andb
jecxz
xchg
dec
ds
push
push
sub
data16
add
mov
push
inc
push
std
loopne
inc
jmp
loopne
and
xor
hlt
sbb
push
sbb
jae
jl
mov
imul
or
prefetch
or
mov
aaa
push
leave
out
jle
divl
stos
adc
jg
stos
outsl
cli
sub
jno
mov
or
lods
dec
mov
mov
pushf
sbb
adc
stos
mov
push
int
popf
sbb
push
sub
adc
push
push
lock
sbb
lods
or
add
scas
add
dec
inc
mov
fwait
pop
dec
out
sbb
in
mov
push
adc
mov
sub
rorl
repnz
das
adc
pop
imul
mov
jno
stos
test
nop
and
push
pop
jo
in
sub
rcl
xor
shr
std
cmp
mov
test
mov
push
js
dec
neg
nop
fld1
mov
lods
jno
or
cmp
call
int
lods
mov
xchg
out
mov
sub
repnz
outsl
mov
push
imul
movsb
mov
jb
scas
mov
stos
in
xor
and
mov
lcall
sbb
add
loope
popf
lret
sarl
shll
dec
dec
cltd
mov
das
je
inc
adc
xchg
hlt
add
adc
push
sub
mov
jmp
mov
pop
and
in
shrl
std
lahf
rcrb
xchg
enter
loop
push
les
aaa
push
jo
dec
push
imul
mov
or
mov
sbb
mov
xchg
jbe
xlat
xchg
xchg
xchg
and
jnp
pop
push
int3
jmp
inc
pop
sbb
lods
popa
inc
fimuls
cwtl
mov
and
jge
sub
ret
cld
add
xor
addl
mov
insb
cmp
lock
pop
testl
int
sub
or
call
cmpsl
mov
lods
ljmp
mov
jle
popf
jb
int3
cmpsl
jge
enter
fisubrl
xor
scas
xchg
hlt
mov
nop
dec
ja
xor
hlt
dec
and
lcall
pop
cwtl
nop
sbb
in
lods
fistpl
mov
stc
mov
stos
testb
out
pop
sbb
xchg
dec
les
scas
xchg
and
push
lcall
aam
fcmovu
xchg
xor
shlb
mov
out
and
testl
mov
and
xchg
cmp
mov
or
pop
inc
ss
lret
sahf
xchg
mov
adc
cmp
dec
ret
jbe
push
push
mov
pop
sub
and
push
sarb
xchg
orl
insb
push
pop
mov
daa
mov
mov
mov
je
xor
xor
call
push
and
enter
insl
sub
push
in
shll
xlat
sub
out
ftst
sar
jg
cmp
jno
mov
jnp
scas
mov
mov
loope
xor
jge
call
or
jo
jp
cwtl
aas
ftst
dec
rol
and
xor
adc
enter
mov
js
jg
sbbl
jl
out
loope
decl
idiv
je
add
xor
inc
cltd
aas
data16
lret
movsl
xchg
idivl
fstpl
pop
lods
lahf
push
lods
mov
push
inc
jbe
lret
add
mov
xchg
das
mov
push
jo
xchg
and
xchg
shll
pop
and
push
dec
mov
add
pusha
popa
stc
xchg
pop
fisubrs
test
clc
movsb
in
stc
xchg
loope
cmpsb
mov
scas
fldt
loopne
out
movsb
enter
push
fs
dec
mov
stos
cs
lds
push
fdivrl
mov
mov
movsl
rorl
sub
addr16
lret
in
mov
arpl
negb
inc
sbb
or
sbb
cmp
ljmp
xchg
rcll
mov
pop
mov
stc
jmp
mov
int3
nop
insb
addr16
push
xlat
push
dec
popa
jb
in
jle
ss
les
movsl
bswap
fxch
je
or
mov
xlat
repnz
dec
daa
inc
jp
loop
or
cltd
mov
mov
xchg
adc
shll
std
ret
and
jae
pop
inc
pop
std
xchg
inc
sub
lahf
into
enter
loopne
and
mov
mov
cmp
rcrb
jo
inc
dec
popa
mov
in
xor
push
add
ficompl
push
or
mov
fucom
mov
pop
pop
jo
add
lret
pusha
mov
ljmp
test
xor
ret
jle
push
cmp
jmp
test
mov
inc
daa
int3
fsubrs
dec
loop
shr
push
jo
rcll
push
ds
popf
mov
neg
mov
lods
or
or
dec
add
int
mov
jle
lret
and
cmp
sbb
fldt
push
in
popa
das
add
and
nop
push
and
sub
pop
repz
in
popa
fidivrs
xchg
gs
sarb
mov
loopne
stos
mov
movsb
or
pop
pextrw
mov
mov
movsb
add
je
sub
ficompl
and
mov
idivb
insl
subb
jne
xchg
sub
into
sbb
test
inc
outsb
cmp
andb
test
pop
in
mov
mov
cld
xchg
sbb
test
dec
test
cmp
andl
sbb
mov
rorb
fcmovbe
les
sub
in
movsl
xchg
and
out
mov
ja
ss
ja
inc
dec
iret
aaa
add
mov
xchg
push
data16
jno
adc
jg
pop
shll
mov
movsl
fs
mov
push
xchg
fimull
sbb
inc
sbb
aas
notb
movsl
in
pop
lcall
lods
into
sbb
pmullw
mov
cmp
inc
inc
push
int3
pop
add
add
insb
cs
jmp
sub
cmpsl
cmpsb
stos
movsl
jle
cmp
push
int3
jne
mov
jg
rorl
mov
jne
subb
ljmp
adc
je
jg
inc
push
cld
push
outsl
ror
push
pop
mov
data16
jns
add
lods
out
and
iret
cmpsl
jge
lahf
or
mov
scas
repz
popf
jg
mov
mov
dec
inc
cmp
cmp
test
int3
data16
fwait
data16
mov
mov
inc
fwait
lret
testl
dec
lea
jne
in
dec
je
xor
sub
fcoms
jb
rolb
scas
sarb
test
insl
jbe
sahf
add
insb
mov
dec
std
fildl
mov
inc
mov
stc
loope
sbb
lahf
loope
imul
cmpsb
cmp
imul
push
xchg
jg
add
ds
sub
or
dec
rclb
mov
mov
in
lret
sbb
mov
push
xchg
pop
scas
call
subb
mov
xchg
pop
xchg
cli
movsb
popl
ret
xchg
int
cmpsb
adc
loopne
cld
test
imul
out
mov
gs
mov
pop
sub
jbe
sub
push
jo
dec
pop
cmp
push
popa
pop
cmpsb
mov
add
inc
pop
push
hlt
lret
gs
sbb
push
adc
jo
rclb
rorb
xchg
push
cmpb
push
push
lcall
pusha
pop
insl
inc
out
scas
fsub
cmp
pushf
jmp
mov
cmpsl
pop
or
sub
mov
adc
add
arpl
jg
sarb
sahf
dec
xchg
cmp
je
xchg
dec
mov
call
lret
std
and
aaa
and
pop
sbb
jp
fsts
xor
cld
or
and
jge
inc
xor
scas
jmp
cmp
lds
jae
fsubs
or
mov
mov
and
fidivl
or
in
rol
int
jns
push
and
xlat
adc
lods
adc
scas
fcompl
int3
xor
pop
mov
mov
mov
sarl
lea
push
jno
xchg
jbe
dec
mov
cmp
mov
push
lock
popa
lcall
stc
outsb
outsl
xchg
iret
jg
add
xchg
jl
dec
outsl
imul
mov
jno
sbb
push
fstl
fists
pop
jl
dec
mov
into
push
jnp
mov
jle
ss
imul
xchg
test
jmp
pop
fimull
sbb
jne
add
fiaddl
pusha
jo
das
push
mov
int3
repz
dec
push
rcll
pop
xor
jp
inc
mov
cmpsb
pop
jp
add
cmp
stc
outsb
mov
jae
sbb
pop
jp
subl
add
cld
xor
stos
mov
out
in
dec
insb
gs
lret
push
ds
add
cmc
cmp
cmp
mov
mov
bound
and
add
pop
or
and
inc
loope
xchg
mov
pop
nop
push
mov
pop
adc
xor
popa
enter
fmulp
cs
sub
andb
stos
in
sub
dec
xor
out
repnz
mov
rcr
cmovbe
dec
test
mov
xlat
andl
ss
and
mov
cmpsl
mov
das
test
aam
push
stos
or
adc
inc
pusha
dec
test
mov
adc
or
movsb
xchg
arpl
cmpl
pop
mov
pop
ss
data16
clc
test
mov
test
push
nop
js
push
dec
adc
jecxz
mov
xchg
and
add
and
test
popf
and
and
mov
iret
xchg
mov
pop
ret
lea
stc
js
cmp
pop
or
and
xorl
add
and
jb
pop
jno
mov
std
mov
cwtl
aam
jle
aas
and
jno
jmp
adc
outsl
out
out
daa
iret
xor
ret
pop
rolb
out
out
sahf
add
lods
jle
jb
scas
mov
xchg
xchg
popa
pushf
cli
jge
xchg
jg
sahf
aad
jge
inc
and
inc
lods
add
push
push
lret
in
xor
in
or
push
ret
clc
cld
jno
int
push
push
fsubrl
test
push
push
jno
dec
nop
lea
bound
jp
orl
and
cmp
xchg
pop
pop
dec
data16
in
sarb
shlb
and
or
mov
dec
fnstsw
orb
push
or
xchg
call
insb
ja
mov
jl
movsl
cs
outsl
pop
int
mov
jbe
stos
lds
cs
lods
ljmp
hlt
std
repz
xchg
add
jno
xor
mov
es
mov
pop
dec
mov
inc
imul
xor
scas
sbb
jle
jne
xchg
mov
mov
mov
fistps
push
push
cltd
jb
mov
add
xorb
enter
dec
shlb
xlat
out
sbb
clc
pop
sbb
mov
jns
lret
mov
es
add
icebp
out
mov
push
mov
jnp
cmp
shlb
and
jo
xchg
ja
xchg
add
or
sbb
xchg
mov
sti
mov
iret
mov
jae
mov
out
bound
test
pop
mulb
xor
inc
mov
mov
mov
fidivl
popa
push
or
mov
fldenv
cmc
dec
fnstsw
pop
ficoms
xor
imul
clc
inc
adcb
ljmp
into
mov
mov
xchg
xchg
test
dec
loop
and
adc
sbb
cmpsb
jle
xlat
sub
pop
or
cwtl
sub
aaa
out
stos
push
push
adc
mov
lret
stos
xchg
jecxz
rcll
fbld
test
inc
mov
mov
frstor
mov
adc
mov
mov
adc
cmp
inc
fs
pop
outsb
add
dec
jne
aad
pop
movsb
push
push
push
push
loopne
push
cwtl
add
sbb
xchg
stc
in
or
cmpsb
dec
dec
icebp
dec
or
and
push
mov
dec
js
lods
call
sub
mov
mov
pop
cli
repnz
mov
in
xchg
lods
lcall
jmp
lcall
das
cltd
pushf
call
es
fs
call
xchg
fldenv
mov
cmc
in
cmp
jae
shlb
aas
insl
cmp
imul
cltd
dec
arpl
push
mov
int
mov
and
pop
xchg
sbb
fwait
sub
loop
sbb
xchg
ss
mov
fstpt
dec
adc
loopne
loopne
ret
mov
clc
lret
lcall
loopne
or
mov
sbb
adc
xchg
sub
fs
xor
dec
mov
arpl
jno
call
pop
mov
jle
in
stos
adc
mov
pop
cwtl
pop
out
cmc
fistps
iret
push
sub
fisubs
xlat
fdivrl
rcrl
jnp
movb
aaa
fs
fstps
inc
std
pop
cmp
imul
add
nop
fs
movsl
xchg
jge
movsb
add
in
and
mov
jno
stc
pop
out
push
int3
pushf
push
mov
test
inc
jno
aam
xor
lahf
cmp
add
test
adc
call
outsl
scas
int3
sahf
sub
fnstenv
pop
mov
or
iret
jnp
sbb
imul
out
sbb
dec
jbe
mov
cmp
sbb
movsl
dec
lcall
stos
xchg
inc
fistl
cltd
cmp
js
push
js
popf
xlat
cmc
popa
ja
aaa
fbld
mov
out
sahf
xor
clc
add
fwait
cmpsb
lods
xchg
fwait
dec
push
lods
stos
pop
mov
daa
stos
stos
jmp
into
push
pop
dec
out
dec
fidivrs
adc
pushl
inc
test
insb
cmp
pop
pushf
pop
push
addr16
sahf
mov
push
ss
or
or
xor
add
mov
or
ljmp
inc
imul
add
cmp
int3
sub
roll
xor
mov
add
imul
and
xchg
cmc
or
aam
popa
xor
push
and
xchg
in
adc
fdiv
dec
cwtl
sbb
out
bound
movsb
cmp
js
and
shrl
and
adcl
jne
cmp
xor
push
pusha
xor
hlt
mov
jge
fs
pop
or
aaa
mov
jecxz
mov
notl
jb
clc
xchg
insb
cmpsl
add
ss
in
xor
cmpsl
adc
adc
or
lahf
xor
cmp
shl
mov
dec
loop
pop
repnz
xorb
xchg
jnp
or
jmp
dec
xor
lds
jo,pn
pushf
cmp
xor
aas
sbb
shlb
mov
repz
jae
mov
or
xchg
adc
loopne
insb
xchg
mov
mov
mov
iret
jmp
dec
arpl
fcoms
inc
leave
lock
dec
data16
ret
mov
pusha
jp
in
pop
mov
cld
jnp
loope
xorb
jle,pt
jle
lds
push
pop
cli
out
push
loopne
aam
pop
int3
and
imul
xchg
inc
addr16
mov
icebp
sub
cmp
pop
dec
hlt
test
sbb
xchg
adc
jg
pop
xor
cwtl
shr
jmp
pop
jnp
and
in
or
adc
ret
fidivs
or
mull
jae
cltd
mov
or
mov
outsb
pop
cli
int
jb
fwait
inc
push
pop
lahf
pop
daa
inc
movsl
xchg
popf
lcall
xor
xchg
fldcw
jo
jp
pop
ja
jae
jmp
jle
loope
xchg
dec
and
pop
fwait
cwtl
out
mov
push
sub
fbld
outsl
stos
lds
mov
mov
push
or
and
lods
mov
out
nop
sub
mov
ss
push
cmpsb
jl
pushf
adc
dec
fisubl
sbbl
movsl
lret
pop
pop
popf
out
mov
xorb
push
sub
push
insb
testb
xor
push
pusha
mov
ret
arpl
pop
fs
das
sbb
rcl
jecxz
popf
push
notl
inc
sub
jge
and
sbb
into
icebp
jns
xchg
pop
mov
push
bnd
add
mov
jns
dec
adc
shll
xor
adc
cwtl
int3
pop
stc
jecxz
cld
xlat
or
pop
jp
inc
mov
add
inc
cmp
adc
vmovss
lods
pop
daa
dec
stc
fldt
add
mov
jno
insl
in
aad
dec
ret
pop
adc
in
mov
in
movsl
iret
je
pop
stos
jmp
mov
and
test
sbb
and
sbb
inc
mov
lret
and
cmp
scas
insl
ljmp
orl
lods
adc
jp
lods
js
sahf
inc
cltd
sub
imul
mov
sub
orl
mov
cmp
cmc
xor
jae
fistpll
xor
jecxz
jmp
mov
call
imul
cmpb
repz
scas
sbb
lea
sahf
adc
mov
scas
inc
movsb
lret
roll
jmp
cli
pusha
push
jno
pop
or
mov
fucomp
xchg
andl
inc
rcrb
in
xchg
jae
cmp
repnz
xor
add
movsb
aaa
lret
push
adc
xchg
je
sahf
push
lods
pop
hlt
mov
shlb
jmp
cmpsl
mov
dec
js
sahf
stos
add
stos
jle
repnz
mov
fwait
or
out
xchg
sbb
lock
mov
jp
push
imul
enter
stc
pop
jle
insb
xor
stos
ficomps
stos
and
mov
cmc
pop
sbb
mov
jbe
mov
in
stos
aas
arpl
imul
stos
mov
mov
mov
cmp
sar
inc
cs
fs
xchg
int
lds
and
adc
mov
add
push
pop
cmp
dec
push
inc
leave
int3
mov
sub
ja
loop
lahf
cmp
popf
pushf
cmp
jnp
je
hlt
mov
mov
push
inc
pop
sbb
jl
jmp
outsl
add
insl
xchg
cvttps2pi
std
jmp
imul
dec
mov
mov
repz
stc
inc
inc
xchg
mov
stos
imul
rol
pop
test
sahf
pop
cmpsb
imul
mov
je
xchg
cmpsl
inc
into
sbb
cmpsl
mov
push
pop
lds
jo
outsl
push
inc
jle
inc
xchg
mov
pop
divb
dec
das
adc
pop
jns
aad
cltd
in
cwtl
mov
sub
xchg
push
testb
out
enter
push
jp
jno
and
out
xor
out
adc
loope
outsl
push
push
mov
cltd
dec
xor
push
pcmpeqd
sti
adc
stos
sub
xchg
loope
pop
sbb
cwtl
mov
push
insl
mov
pop
add
cmp
mov
call
add
iret
int
dec
sbbb
aad
stos
jp
out
and
xor
add
andb
ja
stos
imul
xlat
daa
aad
cwtl
xchg
jb
cwtl
add
sbb
inc
aaa
xchg
jno
xor
int3
jne
lahf
pop
nop
rcrl
stc
or
cmp
dec
dec
jge
aaa
dec
dec
jbe
cmpsb
pop
divl
adcb
movsb
js
aad
cmp
cltd
cmp
cltd
sbb
test
jecxz
jno
aas
imul
lret
inc
xchg
sbb
mov
sti
js
inc
mov
adc
ljmp
sub
fwait
mov
outsb
sub
dec
fidivrs
jmp
hlt
scas
pushf
addr16
jp
stos
out
cltd
stc
mov
mov
pusha
mov
js
pop
fsubrl
mov
lds
pop
mov
push
test
dec
repnz
addr16
or
stos
xchg
inc
pop
and
mov
jp
adc
loop
inc
lret
mov
fs
sbb
shll
xchg
fildl
xlat
ror
pop
pop
and
mov
push
adcb
sbb
xlat
push
lahf
out
loopne
stos
cltd
jae
adc
xor
mov
lods
xchg
hlt
sbb
pop
jns
fimuls
xor
bound
inc
test
pusha
subb
imul
sub
add
push
sub
stos
mov
jle
mov
loop
clc
sbb
imul
push
daa
mov
push
or
rcl
xor
mov
jne
std
icebp
cmp
ss
mov
jne
ficoms
or
cwtl
mov
jg
push
leave
aam
mov
lahf
jp
nop
mov
pop
sub
outsb
ss
mov
mov
ljmp
stos
lea
push
pop
and
js
popf
outsb
cmp
mov
jl
sbb
and
jo
insb
aaa
int3
inc
mov
jmp
hlt
xchg
jge,pt
sub
push
jmp
xchg
cmp
jge
push
push
and
pop
fdivr
inc
mov
cmp
push
lods
inc
push
testb
lods
push
or
jno
pushf
lock
fnstcw
jge
mov
fcoms
pop
mov
sub
jbe
push
call
dec
inc
inc
jnp
movsl
mov
mul
mov
fs
pop
and
jp
aas
das
inc
push
mov
and
sahf
push
dec
cwtl
lods
fidivrl
xchg
test
mov
outsb
pop
adc
sahf
adc
lds
mov
popf
mov
cmp
mov
pop
add
shrb
push
mov
cmp
jb
out
pop
mov
add
adc
mov
cmp
fnstenv
insb
stc
push
cmp
cwtl
rclb
out
js
dec
xchg
into
sub
sar
jno
test
lahf
shlb
aaa
fstl
xor
xchg
mov
xlat
mov
test
mov
xchg
mov
mov
cmp
mov
arpl
xchg
and
rorb
test
cmp
pop
sub
fwait
and
xor
mov
xor
in
mov
ds
loope
xchg
psubsb
pop
aam
mov
lret
daa
out
or
lcall
fstpt
ficomps
aad
pop
mov
or
ffreep
bound
push
sub
push
mov
xor
add
popa
fs
sub
leave
loope
jo
pop
push
dec
ret
ljmp
data16
mov
mov
ds
scas
or
xor
dec
lret
iret
jbe
jne
pop
dec
aad
in
jb
dec
push
adc
outsl
xor
add
dec
je
adc
mov
sub
mov
mov
add
cmpsl
fdivrs
mov
popf
xor
push
movsb
mov
adc
js
cmc
and
dec
dec
bound
sbb
pop
pop
lds
dec
mov
push
test
inc
fiaddl
sub
cmp
popf
sti
shr
mov
xchg
pusha
bound
and
jnp
jge
sbb
les
test
in
cli
mov
lock
leave
pop
jmp
fs
outsl
das
in
sub
cli
ljmp
insl
outsb
jb
push
mov
repz
jae
int
mov
xchg
pop
sub
sar
lock
add
dec
xchg
rclb
pushf
cmc
xchg
xlat
fcoml
out
out
inc
leave
hlt
arpl
addr16
aam
imul
into
test
and
jb
fbstp
jge
adc
adc
or
loope
dec
fnstcw
movsb
test
out
movsl
jo
jl
mov
lret
cltd
cld
pushf
add
data16
jo
pop
lock
xchg
lea
in
xor
fs
stos
leave
or
out
mov
fisttpl
mov
dec
loopne
or
push
inc
inc
sahf
icebp
sub
jb
jbe
addr16
in
subb
bts
data16
popf
dec
adc
push
xor
dec
scas
rcll
adc
lahf
mov
mov
inc
test
cmp
dec
call
fisubl
sbb
and
mov
out
iret
inc
xchg
call
inc
sbb
call
jae
jb
inc
pop
add
gs
mov
out
mov
xchg
lret
push
addb
adcb
xchg
loope
ret
shlb
cwtl
fstpl
adc
mov
arpl
xchg
out
sbb
inc
stc
nop
arpl
stc
out
movsb
and
dec
mov
mov
gs
mov
sarl
or
cmp
lahf
or
add
mov
sbb
bound
pop
xor
test
mov
dec
push
int3
xchg
test
mov
aam
cmp
jnp
xchg
aas
mov
addb
push
jo
out
addb
xor
jge
mov
xor
and
xor
out
daa
pop
add
push
mov
mov
or
inc
fstp
icebp
jae
cmpsl
repz
insb
push
arpl
into
arpl
and
pop
xchg
popf
and
jecxz
cmc
pop
hlt
imul
mull
ret
mov
ds
jbe
lea
ficomps
scas
imul
sbbl
rcrb
jge
ljmp
loop
movsb
int
adc
mov
cmpsb
in
cmp
aad
repz
movsl
mov
sub
xchg
sub
cmpsb
mov
push
sbb
sar
loopne
dec
pop
lret
fisttpll
out
push
push
mov
and
stos
repnz
pop
add
aad
mov
adc
xor
ret
imul
inc
dec
outsl
mov
or
add
repz
pop
mov
dec
cmp
lock
mov
jb
push
imul
das
mov
cltd
bound
jp
stos
xlat
sub
cwtl
inc
ja
dec
jns
es
nop
dec
or
or
scas
aas
outsl
pop
scas
loope
sbb
xchg
mov
movsb
and
stos
mov
lds
into
lea
push
icebp
dec
mov
sti
ret
lea
inc
loope
addr16
sub
cld
lcall
loop
mov
pop
pop
pop
sahf
pushl
pop
cltd
rcrb
repz
scas
and
pop
decl
xchg
push
aam
pop
add
outsb
pop
add
jb
pop
pop
pop
sub
adc
pop
push
enter
xchg
ljmp
out
lods
cmp
in
lea
repnz
iret
stos
inc
out
add
mov
call
lret
aas
and
add
xor
mov
lods
lahf
fstpl
call
sbb
fwait
add
jb
mov
nop
mov
sbb
push
sbb
out
inc
negw
repz
mov
das
jns
push
pop
pop
cmp
dec
jns
cmp
pop
sahf
ficompl
ret
dec
jge
js
jae
test
rorb
adc
subb
bound
xchg
enter
call
test
repnz
bound
je
adc
xchg
popa
pusha
mov
loopne
fwait
mov
pop
adc
jmp
mov
push
cs
inc
and
ret
orb
cmpsb
out
sbb
std
xchg
mov
and
push
mov
xchg
cmc
mov
int3
enter
inc
or
mov
lret
mov
vxorps
sub
cs
ljmp
push
push
add
dec
sub
inc
cmp
out
clc
cmp
cli
rcr
addl
adc
dec
hlt
mov
lahf
loope
insb
sbb
mov
notb
shll
mov
or
out
in
jne
inc
jecxz
dec
mov
cltd
jle
jg
rcl
xchg
mov
out
test
movsl
fwait
sub
mov
jmp
push
ror
test
mov
inc
je
dec
out
jbe
rcll
jge
push
xchg
ja
jbe
aam
push
int3
ret
push
xchg
lea
pop
xchg
std
xchg
xchg
adc
aaa
rcll
fidivrl
scas
int3
out
cmp
cltd
add
dec
push
aas
cmpsb
add
and
sbb
cmp
pop
test
and
fs
xor
pop
jbe
js
and
mov
adc
in
sub
nop
int3
incl
js
lea
fdivr
pop
arpl
movsl
popf
stc
decl
sub
dec
jne
jge
mov
adc
scas
fcompl
clc
ret
sub
dec
int
gs
enter
sbb
pop
jle
outsb
pop
lods
ja
push
imul
sub
inc
test
sbb
test
ljmp
lahf
pop
push
adc
push
xor
shlb
mov
loopne
aas
mov
mov
lahf
fwait
jmp
into
fsubrs
sahf
in
sub
inc
jg,pt
btc
jmp
push
fs
mov
test
stos
mov
push
mov
repnz
mov
inc
jns
cmp
fsubrs
jns
jmp
sarb
lret
sti
mov
in
cmc
jl
push
sub
int
or
push
aas
push
mov
sti
ret
out
fdivp
jmp
add
clc
inc
xchg
xchg
xchg
repnz
fcoml
mov
inc
addr16
fistps
jae
push
mov
lock
xor
out
add
xchg
xchg
lret
xor
dec
xchg
jle
pop
pop
das
pop
pop
sub
lds
jp
jg
stc
pusha
call
inc
pusha
and
dec
mov
test
int
xchg
insb
popf
xor
cld
cmpsl
ret
daa
cmpsb
mov
or
lea
push
or
test
jmp
and
das
out
mov
sub
push
mov
fidivrs
xchg
inc
scas
dec
iret
mov
popf
testl
add
cli
cmp
adc
sti
in
adc
aas
repz
flds
xorb
sbb
adc
lret
mov
pop
and
mov
add
jmp
cld
fs
mov
mov
jmp
add
cmpsl
and
xchg
mov
push
jle
rorb
mov
or
cwtl
and
lock
pop
stos
and
jmp
iret
jp
out
ret
push
mov
mov
dec
xchg
xor
mov
call
push
inc
pop
jmp
pop
test
xlat
mov
int
cmp
dec
in
pop
jecxz
hlt
scas
int3
mov
xor
xorb
lret
shll
testl
xor
adc
int3
cmp
cmp
mov
xor
cmp
addr16
inc
pop
sub
sbb
sarl
repz
jne
cmpsb
add
jo
jmp
andb
aaa
xchg
test
xorb
cmp
scas
or
jmp
mov
sar
sbb
fsincos
int3
movsl
aad
fistps
pop
add
xchg
out
arpl
cmpsb
test
push
dec
out
pop
aaa
xchg
out
push
out
aas
pop
cmp
push
je
push
push
mov
sbb
imul
scas
cld
dec
fistps
and
mov
mov
lds
notw
stos
inc
pop
cmp
ljmp
pop
in
fwait
arpl
mov
repz
pop
loopne
pop
int
push
and
cmp
rclb
add
test
jge
xchg
mov
imul
je
fs
int3
pop
lods
js
sarb
pop
scas
in
rcrb
jns
and
lods
push
jl
add
fs
and
or
testb
dec
push
repz
sti
std
cli
pop
inc
push
stos
fcompl
enter
faddl
push
xchg
scas
iret
adc
sub
imul
xor
cwtl
jo
inc
jb
xchg
shlb
xor
mov
aam
or
xchg
cmp
stc
cmpsb
mov
jg
xchg
ret
mov
daa
push
loopne
test
push
xchg
fsubs
pusha
rolb
inc
insb
sub
inc
inc
call
mov
shll
dec
sbb
add
pop
ds
mov
mov
jl
test
cmp
jne
shufps
insb
or
sbb
imul
rcl
out
outsl
xor
adc
and
imul
push
mov
or
jns
pop
fcoms
xchg
sahf
das
aaa
data16
jl
mov
rcll
stc
xchg
test
xchg
inc
and
dec
cmc
adc
sub
dec
stc
call
and
ds
pop
and
push
jl
jns
mov
movsl
cmp
fisubrl
ds
and
inc
push
and
push
loopne
icebp
xor
jp
adc
daa
repz
and
in
jmp
test
and
add
adc
jmp
bnd
xor
scas
incl
ljmp
in
in
and
aas
pop
adc
aam
fs
fldcw
aad
dec
das
stc
pop
pop
mov
cmp
enter
pop
mov
popf
mov
sub
inc
xor
xchg
cli
push
lds
add
repz
jo
or
sbb
adc
shlb
xor
fdivrl
sub
push
dec
and
nop
scas
pop
mov
mov
adc
push
cs
cld
cmp
lods
add
aas
iret
gs
data16
stos
xchg
and
sbb
out
aaa
adc
xchg
das
mov
push
incb
enter
mov
jmp
sbb
out
pusha
movsl
fisttpll
shlb
push
xlat
and
and
push
jns
fidivrl
enter
or
sbb
lret
push
push
icebp
adc
jg
cmp
or
outsl
xchg
popa
or
pop
mov
xchg
daa
outsb
arpl
pop
and
gs
test
push
inc
cmp
lahf
pop
mov
xchg
mov
push
inc
mov
stos
mov
add
pop
cmp
push
jge
cwtl
xor
xor
std
das
into
mov
loopne
xor
inc
mov
imul
sbb
in
fwait
xor
pop
xor
jno
cmpsb
jl
aas
in
xor
test
iret
enter
lea
pop
enter
je
xchg
xor
dec
sub
std
xchg
test
or
rcll
cmc
mov
inc
sbbb
xchg
sbb
mov
inc
add
cmpsl
repz
jmp
test
mov
sbb
mov
fwait
mov
lret
cmp
loope
test
jp
pop
stos
js
jbe
cs
pop
int
in
mov
loope
lahf
cmp
pop
pop
repnz
dec
lret
icebp
xor
mov
fdivl
scas
jl
mov
mov
sbb
leave
adc
pop
jmp
shlb
mov
jns
inc
xor
sbb
imul
lods
or
das
inc
dec
push
sbb
xchg
jmp
lods
push
jmp
je
mov
test
adc
pop
sub
jne
aad
test
pop
shr
jg
jmp
xor
test
int
jl
mov
adc
mov
add
out
sbb
push
scas
adc
mov
aas
test
loope
or
xor
fnstsw
movsl
inc
mov
inc
push
aaa
or
fldt
mov
xor
addr16
cmpsl
lret
ljmp
lods
sub
iret
pop
fbstp
jmp
aad
cmp
adc
push
adc
pop
push
and
inc
cs
push
data16
mov
mov
jecxz
sahf
idivl
inc
popf
fiaddl
jp
mov
sbb
mov
cmpsb
fbstp
movsb
shrl
pop
lcall
jns
fsubl
ljmp
push
call
enter
cld
adc
pop
mov
mov
std
adcl
das
or
rcrl
lahf
jl
pop
in
adc
jge
jbe
popa
dec
push
lret
pop
leave
bound
sub
std
pop
in
add
jo
popa
and
sub
testb
or
fcos
xchg
mov
push
mov
sub
rorb
cmpsb
mov
cmp
sbb
jnp
loope
shll
fistl
or
cmp
sub
ret
xchg
outsl
dec
push
pop
shll
sub
movq
imul
scas
pop
divl
and
bnd
xor
sbb
xor
dec
movsl
cltd
mov
popf
enterw
imul
in
in
xor
mov
mov
sti
sbb
add
jns
jl
push
and
inc
imul
lods
jae
xor
push
je
popf
pop
nop
rolb
mov
jmp
xor
xlat
fnstcw
mov
faddl
pusha
mov
mull
jp
andb
neg
addr16
pop
mov
or
xchg
ret
mov
push
cmp
xchg
repz
mov
xor
stos
push
add
aam
pop
dec
ja
sti
dec
scas
dec
jl
cs
and
daa
ss
add
cmpsb
push
iret
icebp
insb
imul
adc
cmp
push
or
sub
xor
pop
mov
mov
dec
out
mov
outsb
mov
pushf
mov
sub
mull
je
je
jne
jge
sub
cmpsb
mov
jle
icebp
pshufw
xor
xlat
frstor
push
pop
sbb
mov
xchg
rcrl
std
enter
cltd
mov
jnp
mov
xor
rol
push
xchg
leave
push
pop
and
in
ss
js
rorl
dec
hlt
sub
mov
pop
stos
leave
or
jp
ret
scas
jns
divb
mov
mov
mov
mov
lds
add
ror
adc
jp
hlt
int3
scas
sub
xor
cli
loop
lock
cmpsl
jae
xlat
repnz
mov
or
fs
adc
dec
negb
add
stos
jnp
jno
fs
and
pop
pop
push
mov
in
nop
dec
or
jns
jge
sbb
dec
movsl
js
inc
jno
int3
push
cmpsl
sbb
fsubrl
add
pop
cmp
xchg
add
xchg
pop
fnstenv
pop
inc
js
mov
sub
in
pop
jl
sub
cmpsl
xchg
jno
mov
inc
jp
push
popf
int3
add
mov
pop
jb
inc
adc
arpl
and
fdivrl
adc
mov
mov
aas
sub
out
xor
movsl
ret
cli
adc
inc
js
mov
fs
pop
jb
cmp
fidivl
pop
push
loope
out
xchg
xchg
cmpsl
insl
addb
mov
rolb
jno
leave
inc
hlt
jge
fs
mov
push
jle
outsb
in
adc
aam
jmp
in
lcall
out
enter
mov
hlt
fiaddl
lret
push
popf
jb
push
imul
rcll
mov
arpl
fimull
sbb
enter
scas
subb
stos
lret
into
shl
or
adcl
xchg
test
lcall
push
outsb
popf
bound
xchg
mov
pop
mov
es
in
mov
test
inc
insl
push
fmul
xorl
push
les
mov
mov
es
rclb
rclb
in
push
insb
ss
data16
jl
dec
xchg
and
cmc
test
mov
stos
mov
mov
fstpt
cmp
int3
add
loop
pop
mov
and
push
sbb
push
scas
jne
ret
jecxz
and
out
mov
hlt
push
andl
inc
pop
not
jecxz
lret
mov
cmpsb
aas
nop
pop
filds
mov
jno
fdivrs
in
mov
or
jbe
dec
mov
test
inc
jae
xchg
arpl
cmp
test
jmp
lds
jmp
in
inc
ds
lea
xchg
pushf
out
xorl
hlt
hlt
add
sub
cmp
out
pop
out
test
add
popa
push
sub
sbbl
in
movsl
jmp
loope
repz
pushf
mov
cwtl
push
lret
out
add
bound
jne
mov
das
jle
fsubrl
push
aam
gs
ljmp
push
fmuls
or
cs
cmp
insl
movsl
push
xor
inc
pop
xor
out
hlt
in
test
sbbl
and
pop
bound
adc
idivl
imul
outsb
inc
add
jnp
xor
cmp
lret
xor
scas
scas
xlat
push
movsb
out
out
sbb
or
xor
mov
adc
cmpsl
mov
mov
sbb
aam
stos
sahf
lods
mov
mov
iret
scas
inc
scas
ds
fistpll
outsl
xor
pop
or
adc
xor
or
and
fbld
nop
leave
inc
adc
imulb
aam
lcall
in
cmp
shl
ljmp
out
test
add
sub
pushf
ss
inc
jbe
push
out
aam
jb
mov
xor
adc
arpl
cli
pop
lock
notb
inc
mov
lock
jle
test
adc
jg
add
jecxz
add
bsr
xchg
and
xchg
jae
sub
leave
cltd
pop
add
mov
test
stos
add
xchg
bound
jg
je
fsubl
jl
push
xchg
in
ret
cwtl
dec
in
adc
test
push
or
das
sbb
cmc
cmpsb
inc
pop
jecxz
divb
ja
push
mov
push
cwtl
adc
jnp
mov
lret
pop
push
cwtl
sti
sbb
push
cmpsb
movsb
shrl
incl
fldt
in
jp
das
sub
fadds
pop
inc
aaa
sbb
add
or
fildl
stos
ds
insb
das
sub
push
xchg
sbb
xor
das
xchg
push
dec
bound
inc
shll
push
jle
movsb
insb
inc
dec
push
push
mov
push
add
jmp
ljmp
in
jo
pop
pop
jle
inc
adcl
mov
lock
mov
call
hlt
sub
mov
std
gs
paddsw
fucomp
cmpxchg
cli
aam
sub
repz
outsl
fcoms
testb
test
dec
movsl
push
xchg
imul
jg
lock
mov
and
sti
mov
in
aam
jge
xor
pop
repnz
out
sbb
sbb
push
lods
aas
adc
add
mov
icebp
pop
inc
addl
xor
inc
insl
sub
lcall
sbb
and
sarl
sbb
mov
cmp
and
aad
lcall
je
mov
xchg
sbb
push
mov
mov
jmp
int3
sub
push
mov
scas
jne
cs
movsl
pop
mov
pop
inc
jns
jne
stc
dec
cmp
jp
mov
adc
sub
xor
sub
stos
xchg
enter
add
push
xor
push
mov
xlat
dec
cmp
push
and
pop
xor
mov
insl
inc
jbe
outsb
repz
pop
fnstcw
mov
jno
dec
aas
cwtl
imul
push
cmc
pop
pop
cs
fdivr
mov
inc
mov
push
rolb
push
jmp
mov
sbb
mov
cmp
pop
mov
mov
nop
pop
lcall
inc
call
inc
movsb
mov
mov
and
lock
popf
and
jne
add
test
ret
mov
jle
sbb
adc
insl
mulb
push
mov
pop
sbb
jno
push
fimull
and
ds
sahf
inc
fdivrs
leave
fidivs
mov
xchg
cmc
jno
test
fmuls
repnz
dec
lds
push
jmp
lods
xor
clc
jnp
in
es
mov
pop
xlat
dec
cwtl
xorl
xchg
iret
sbb
jb
data16
push
and
add
pop
mov
mov
fisttps
mov
enter
xchg
sahf
mov
loop
xchg
outsb
pushf
lods
mov
push
and
sub
dec
sub
vmread
aad
xchg
div
mov
pop
dec
cs
and
add
xor
lods
sub
mov
leave
lret
ficomps
jb
mov
fmull
fdiv
cmp
pop
pop
push
mov
cmpsl
loope
pop
repnz
jle
sahf
stos
lds
or
sbb
and
int
cltd
fdivs
add
cltd
and
dec
ja
sbb
icebp
mov
sbb
sub
add
rcl
jnp
out
jle
cmc
jge
push
cmp
jnp
jl
mov
dec
dec
and
enter
cmp
xchg
adc
jge
mov
xlat
movsb
mov
or
inc
test
leave
loopne
out
xchg
mov
jo
loop
imul
cltd
cmpsb
sbb
add
jae
pop
pusha
cmc
insl
andb
add
push
mov
pop
fwait
test
and
jle
in
out
mov
push
jbe
fistl
fsubrp
repz
push
adc
mov
jle
cltd
loopne
arpl
sub
jne
xchg
push
xor
add
and
fwait
jp
cmpb
xchg
or
add
fwait
je
in
fldcw
sahf
inc
out
sbb
and
xor
add
out
sti
adc
xor
dec
and
lret
rorl
stc
jge
adc
std
jle
je
mov
cmc
movsb
mov
cmp
and
xor
mov
adc
push
mov
nop
cmp
shrb
loopne
push
fwait
dec
test
push
das
adcl
or
in
loop
popa
into
in
scas
sub
cmp
ja
leave
cmpsl
dec
sub
xchg
pop
sub
mov
jno
imul
lods
mov
xor
inc
enter
dec
ret
adc
jo
push
insl
xor
or
es
push
addr16
ja
repz
or
inc
mov
loopne
cmp
add
fisubl
push
stos
icebp
stos
push
std
inc
cs
inc
stos
stos
insl
mov
fmul
pop
fbld
mov
dec
ljmp
dec
stos
adc
or
jmp
xor
xor
sub
push
test
sub
xor
xor
das
jge
inc
int
and
adc
dec
xor
lret
mov
jp
push
xor
lahf
add
loopne
mov
jl
icebp
sbb
fcom
sahf
rolb
mov
cmpsb
sub
gs
jl
repz
icebp
pop
lcall
adc
iret
mov
adcl
je
mov
cmpsb
scas
movsb
jle
mov
sarl
dec
enter
xor
fnstsw
jmp
xor
push
faddl
pop
fidivl
gs
ljmp
cwtl
divb
popf
movsb
in
ss
add
sahf
cwtl
in
or
xchg
jns
addr16
cltd
mov
cmp
jno
xchg
cltd
inc
les
xor
adc
mov
xor
inc
push
mov
imul
mov
decl
arpl
subb
push
insb
cmpsl
sbb
flds
jle
fwait
mov
int3
out
lds
mov
call
es
push
aas
in
dec
adc
mov
test
xor
push
cltd
ret
push
scas
out
xchg
cwtl
cmp
lock
sbb
outsl
sub
sub
push
call
lea
mov
stc
cmpsb
cmpsb
sub
xchg
xlat
cmpsl
sti
insb
mov
mov
xchg
mov
pop
sub
push
pop
movsb
lcall
cwtl
or
dec
mov
lods
and
adc
into
mov
pop
inc
inc
or
or
out
mov
and
dec
mov
aaa
adc
lcall
add
fadds
mov
adc
lock
rclb
movsl
sti
orl
push
jmp
jae
mov
mov
inc
nop
test
pop
sbb
xchg
cmp
mov
std
sbb
int
lret
jge
xchg
mov
push
rorl
or
icebp
scas
jmp
mov
mov
loop
jg
sahf
adc
add
cmp
out
fidivs
pop
dec
scas
testl
or
xchg
push
mov
ds
pop
push
out
fstps
scas
pop
data16
pop
andb
lret
xchg
xlat
enter
imul
ret
add
dec
inc
testl
dec
mov
add
mov
ds
cmp
xchg
xchg
jle
inc
xchg
cwtl
les
xchg
jl
shl
xlat
fdivl
dec
or
scas
fwait
idivb
shrl
pop
rcrb
pop
fnstcw
dec
mov
fwait
mov
adc
imul
and
jns
mov
out
push
das
std
adc
shl
inc
and
dec
sti
lret
dec
push
mov
inc
sub
mov
std
into
sbb
xchg
clc
subl
clc
bound
fildl
pop
imul
jo
cmp
arpl
rsm
xor
in
add
shll
iret
mov
mov
movsb
adc
sahf
dec
loop
jp
in
mov
stc
jbe
or
fstps
inc
xchg
lds
repnz
rorb
mov
ficompl
out
and
imulb
and
iret
inc
int
in
mov
std
movsl
sahf
add
fbld
clc
cmp
shlb
jg
mov
pop
add
lret
aam
jne
push
shll
cmp
or
xor
daa
adc
xor
stc
leave
shll
sbb
iret
mov
aas
lret
dec
xchg
or
cmp
std
pop
test
nop
out
pop
ss
data16
add
out
fmull
popa
ficompl
in
rorb
jnp
in
clc
mov
sarl
mov
or
sbb
fnstsw
xor
sbb
mov
imul
fs
xchg
test
xor
and
jecxz
rorb
stos
int3
cli
dec
mov
sti
fnstcw
push
popa
jb
jbe
dec
lret
push
xchg
cli
mov
rol
fdivrp
test
push
loope
int3
cli
stc
dec
loope
mov
ret
int
inc
cmp
sub
cmp
mov
popa
call
sbb
and
sbb
inc
arpl
imul
loope
ja
sbb
sbb
ljmp
push
and
mov
mov
push
lock
mov
mov
and
or
in
mov
or
xchg
orb
sar
dec
pop
aam
mov
sbb
add
pop
lret
scas
sbb
push
sbb
test
adc
and
daa
inc
jns
cwtl
imul
push
adc
jb
lock
flds
inc
adc
pop
mov
adc
adc
jg
pushf
leave
xchg
sub
mov
or
or
iret
fsubl
rcl
jne
enter
mov
mov
pop
je
dec
xchg
cmp
mov
scas
fwait
aad
sbb
repnz
inc
dec
sub
mov
push
imul
mov
xchg
out
adc
add
mov
mov
xor
xorl
lret
add
jno
dec
test
pop
mov
adc
mov
mov
jg
pop
sti
push
xorl
cwtl
jecxz
adc
fbstp
and
jb
outsb
lods
fs
cmp
mov
in
popl
mov
pop
push
insb
mov
pop
dec
out
insl
out
xchg
fnstsw
pushf
push
jmp
jmp
sub
inc
hlt
test
xlat
jnp
sub
shrb
jle
and
cld
pop
xchg
mov
clc
dec
xchg
fst
or
test
aad
mov
cmp
loope
bound
pop
shlb
fwait
ljmp
aam
loop
xchg
jbe
cli
rorb
adc
add
int3
cmp
push
loop
and
mov
pushf
mov
jb
xchg
pushf
mov
lret
lods
popf
inc
jns
mov
ljmp
dec
pop
sti
pop
mov
and
mov
inc
arpl
jne
mov
into
imul
mov
cmp
in
push
out
ds
xor
xchg
inc
push
testb
gs
stc
lret
pop
call
daa
stos
pusha
aam
push
les
cltd
add
int3
pop
jmp
lea
mov
jnp
mov
pop
dec
int
mov
jge
addr16
inc
and
xlat
out
leave
or
scas
test
inc
int3
inc
adc
cmp
or
mov
pop
or
data16
rclb
mov
xchg
push
ret
stc
sbb
jae
aaa
icebp
mov
add
insb
outsb
lahf
sbb
shlb
cld
rcll
lds
or
jbe
sbb
bound
push
mov
loope
push
sbb
loope
xor
push
adc
movsl
in
sbb
iret
cli
sbb
jb
lsl
andb
ds
push
add
sub
pop
mov
push
jne
lcall
repz
sbb
nop
fmull
fbld
ljmp
scas
pop
bound
mov
sarb
push
xchg
pop
inc
stos
cs
fsubrl
out
adc
cltd
loope
add
addl
int3
add
scas
faddl
insl
cmpsl
jge
movsl
pop
call
push
pop
and
mov
cmp
push
pop
in
or
js
push
sarl
ret
xchg
or
mov
cmp
cmp
loop
imul
cld
cs
dec
lods
scas
ss
mov
scas
push
rcrl
or
adc
out
push
mov
sbb
xchg
xchg
insb
xor
imul
fimuls
add
jp
cltd
js
fisttpll
mov
call
mov
jp
fdivr
rol
add
imul
cmp
bound
es
jne
cwtl
roll
into
pusha
adc
jmp
inc
ficomps
sarb
sbb
aaa
dec
jl
inc
std
dec
addl
push
in
out
test
jmp
push
push
andb
mov
outsb
mov
adc
lcall
add
jle
xchg
push
push
pushw
xchg
sub
adc
sbb
or
mov
packuswb
push
idivb
test
div
rolb
mov
cmp
xor
jg
add
mov
adc
adcl
jge
mov
pusha
iret
repz
iret
adc
push
in
mov
xchg
push
cmpsb
xor
sbb
and
sub
test
outsb
jle
mov
jae
push
jne
mov
cmp
mov
mov
mov
fldl
push
outsl
rcrl
mov
mov
daa
pop
repz
sub
test
and
jmp
mov
xlat
push
pop
inc
sbb
fdivs
shlb
insl
add
dec
inc
test
rcr
push
cmp
fdivrs
jp
jae
inc
inc
pushf
lods
les
dec
subb
into
push
subb
xor
sbb
xlat
in
dec
int3
sub
andb
pop
xor
xor
dec
addr16
lock
pop
adc
xchg
xchg
lret
mov
int3
rol
xchg
ljmp
dec
repz
xor
leave
sbb
nop
cmp
mov
andl
mov
fdivr
mov
mov
sub
sbb
je
push
scas
call
ljmp
dec
add
imul
add
frstor
and
cmp
and
push
adc
mov
out
inc
mov
jle
ds
loopne
aas
lods
sbb
scas
xor
push
mov
and
movsl
outsb
xchg
push
xchg
scas
test
and
arpl
rcrb
xor
hlt
xchg
sub
jne
mov
jmp
cld
int
jnp
sbbl
push
int
scas
xlat
insl
pop
xor
mov
pop
enter
push
fldt
adc
push
jne
add
fbld
xchg
ja
jg
popa
inc
jo
fldl
dec
jno
lcall
loope
xlat
test
aas
dec
inc
daa
lods
dec
dec
into
mov
mov
cmp
jl
cmova
mov
sbbl
mov
jae
dec
dec
movsb
cmpsb
clc
xlat
xchg
jbe
or
dec
adc
adc
jl
jnp
xchg
int3
sub
inc
cmp
rolb
rcrb
mov
hlt
push
test
xlat
pop
mov
fwait
int
dec
addr16
jne
out
ja
cmp
in
testb
cld
stos
sub
cmp
mov
inc
mov
es
frstor
out
into
out
add
or
xor
insl
cmpsb
add
shlb
cmpsb
adc
xchg
dec
or
mov
lock
xchg
sub
jmp
jae
adcb
push
xor
divb
movb
adc
fcompl
adc
jecxz
mov
mov
in
sbb
xchg
cmp
sbb
shll
sub
sbb
cli
into
inc
ret
cwtl
dec
jp
adc
aam
sti
les
mov
std
inc
mov
sti
jge
aas
mov
pop
adc
mov
cmp
dec
insb
lods
fstpt
stos
subl
call
and
xchg
push
aam
lret
fwait
lret
mov
add
and
xchg
mov
jecxz
mov
xchg
xchg
pop
adc
js
and
nop
pop
mov
jb
sub
shrl
fisttps
lock
lret
adc
add
fiadds
roll
inc
mov
mov
nop
repz
imul
adc
loopne
sub
int
or
fwait
mov
outsb
sarb
mov
stc
inc
cltd
mov
aam
popf
pop
mov
sar
lods
sub
rol
pop
fs
mov
les
mov
adc
cmp
hlt
add
mov
push
mov
mov
jnp
lock
or
dec
notl
jg
rcrb
insl
idiv
mov
fimull
or
es
idiv
xchg
int3
enter
push
pop
flds
lock
jno
sbb
sub
and
iret
fucomi
std
cmp
mov
add
push
jo
in
mov
or
dec
movsl
xchg
ret
add
xchg
cmp
mov
bound
pop
mov
pop
add
hlt
inc
xchg
sti
aas
mov
add
add
jg
inc
clc
sub
cli
jnp
jnp
lock
pushf
dec
sub
fcmovnu
mov
pop
or
jbe
sub
mov
dec
or
dec
mov
mov
mov
add
sub
iret
repnz
lods
mov
pop
inc
lock
jmp
mov
stos
test
cmpsb
rorl
cmpsb
lea
cmpsl
in
fmull
push
adc
les
out
leave
call
lret
cld
adc
cwtl
xchg
fidivl
xor
ja
pop
dec
int
fwait
daa
cwtl
pop
jg
add
hlt
daa
push
pop
movb
push
xchg
or
jnp
push
jp
inc
cmp
stos
or
sbb
jle
lea
push
test
push
in
out
stos
cld
mov
push
adc
inc
dec
in
out
xor
sub
cmp
mov
xlat
adc
icebp
lds
orl
les
cltd
andl
ja
push
jp
ud2
mov
cmp
xor
xchg
xor
adc
sub
das
jge
adc
es
outsb
les
test
push
stos
inc
sbbb
daa
call
stos
iret
or
mov
xchg
js
mov
mov
mov
imul
jecxz
orl
mov
dec
test
and
pusha
cwtl
lret
stos
in
push
push
enter
out
dec
fdivl
test
pop
out
pop
inc
ljmp
pushf
cld
xor
dec
mov
ss
cwtl
bound
sub
xor
mov
cmpsl
jne
jmp
pushf
cmp
shrl
mov
mov
jge
push
psubsw
flds
cld
dec
imul
test
dec
xchg
push
pop
mov
mov
sbb
int3
adc
adc
repz
movsb
fwait
inc
push
jnp
push
cs
out
fwait
or
or
push
inc
aam
lock
cmp
pop
test
pop
push
push
rcrb
dec
inc
jno
dec
cmp
add
sbb
inc
loope
push
cli
or
xchg
xchg
div
dec
push
repz
pop
xchg
push
pop
dec
sbb
or
xchg
notb
push
cmpsb
mov
stc
outsb
cmp
loop
std
lock
enter
fwait
cmpsl
stos
ficoml
iret
fbstp
mov
popf
sub
mov
xor
push
lods
fwait
int
xchg
xor
mov
cmc
sub
cmp
or
sub
mov
cmpsl
pop
sbb
fildl
repz
mov
sub
pushf
jle
in
jle
jecxz
mov
js
je
pop
mov
daa
mov
insl
xchg
loopne
pop
dec
in
aas
sub
popl
add
mov
xor
les
in
and
mov
into
imul
adc
sti
and
sub
leave
cli
andl
sbb
add
sub
pop
sbb
xor
popf
jle
cmp
sbb
mov
mov
daa
xchg
fnstenv
out
jge
pop
cmpsl
mov
stos
xor
mov
mov
xchg
jmp
jmp
or
out
push
fcompl
mov
sub
gs
movsb
mov
in
mov
jae
call
enter
addr16
ds
and
into
andl
pop
push
jle
cld
add
mov
fldcw
dec
std
pop
mov
outsb
pop
push
cli
scas
pushf
movsb
sub
popf
add
jecxz
je
loopne
insl
inc
or
fnsave
mov
insb
push
lcall
cmp
jg
xlat
mov
lods
sub
sbb
clc
xchg
xor
cmp
push
or
ja
cmpl
pop
add
das
call
sub
insl
mov
pusha
test
dec
cmp
and
dec
xor
addr16
mov
or
push
sbb
add
int
clc
mov
or
and
push
sbb
jl
jge
cwtl
or
dec
fldcw
push
mov
cmp
inc
mov
mov
xlat
pop
mov
mov
jnp
mov
in
mov
push
aam
pushf
mov
push
xchg
outsb
sti
sub
loopne
shll
sub
dec
cli
insl
cld
and
dec
imul
std
push
lods
pop
sbb
scas
dec
repz
popa
rorl
jmp
sbb
jo
xor
test
lods
xor
movsb
push
pop
mov
adc
xchg
pop
jmp
mov
or
cmp
mov
imul
add
dec
clc
jns
pop
arpl
out
xchg
ljmp
or
mov
mov
fsubrs
scas
rol
push
sbb
mov
pop
mov
outsl
mov
std
ret
mov
adc
lahf
or
loopne
mov
push
mov
jne
movsb
sub
cwtl
add
dec
sub
cmp
stos
push
jae
hlt
cmp
call
fwait
loop
dec
cmpsl
test
xor
lds
xor
jg
ja
push
test
mov
pop
lret
in
xchg
lret
mov
mov
mov
insb
loopne
fsub
cmp
push
sti
stc
or
out
mov
lods
inc
aad
lahf
movsb
xchg
flds
inc
loop
filds
mov
in
daa
push
pushf
imul
fidivrl
cmp
xchg
repnz
hlt
loope
inc
xorl
stc
je
dec
stos
cmc
sbb
add
sahf
lds
push
lret
jmp
in
call
les
jb
mov
inc
inc
mov
xor
fnstcw
and
dec
notw
sbb
push
hlt
mov
jp
fwait
push
enter
arpl
push
stc
ret
or
ret
adc
pop
and
push
inc
jecxz
fucom
mov
gs
and
push
int
ss
mov
mov
stos
imul
and
data16
les
mov
pop
aas
rolb
notb
negl
cmp
int
push
pop
xadd
push
scas
enter
mov
into
inc
out
add
loope
push
pop
xchg
int
cmp
fldt
mov
sub
mov
xor
pusha
fisttpll
sbb
fiaddl
add
mov
push
jmp
lods
ret
push
xor
push
xlat
and
std
sub
push
addr16
xchg
lcall
jl
add
xchg
in
mov
outsb
mov
cmp
cmp
std
xor
je
pop
popf
inc
jle
jp
outsl
add
cmp
scas
in
pop
xchg
scas
movsl
sub
fsts
add
mov
or
xchg
jl
adc
loopne
add
push
xorb
and
popa
dec
ljmp
loopne
jo
loope
jno
mov
mov
adc
add
or
scas
dec
iret
jecxz
jp
fidivl
mov
mov
cmpsb
dec
in
daa
js
fs
add
pop
mov
bound
mov
fcmovb
mov
outsl
out
imul
test
arpl
fsubr
dec
sub
scas
fwait
pop
test
arpl
pushf
mov
add
mov
cmpsl
popa
shrb
push
or
in
mov
pushf
outsl
sbb
push
js
loope
mov
insb
xor
jae
inc
mov
mov
pop
cmp
fcomip
jecxz
mov
ljmp
xchg
mov
in
adc
lahf
bound
test
cmp
sti
hlt
cmp
call
mov
repz
add
aam
fldl
push
lods
dec
lea
lods
ja
rcll
inc
cmp
in
insl
xchg
sub
test
jg
ljmp
mov
rclb
xchg
mov
cmpsl
pop
cwtl
sbb
fidivrl
testb
cwtl
xor
loope
add
xor
jb
pop
lret
fiaddl
lea
iret
cmpsl
aam
cmp
push
mov
mov
popf
scas
push
aad
ja
push
dec
cld
imul
inc
xchg
inc
mov
out
or
xlat
xor
es
cs
ljmp
cmc
imul
popf
and
fidivrl
or
and
lahf
xlat
cmp
iret
imul
add
dec
push
cmpsl
xlat
fwait
mov
loop
icebp
mov
xor
arpl
test
mov
push
xor
xchg
or
or
jecxz
outsb
jbe
add
jg
das
je
sub
or
stos
fwait
add
add
jmp
push
xchg
not
loope
xor
movsb
sbb
inc
dec
rep
aaa
test
or
mov
or
mov
xchg
repnz
pop
cltd
popa
xchg
add
inc
inc
mov
imul
rcrb
mov
push
sub
add
mov
xchg
js
cli
jbe
adc
xor
sbb
and
cmc
mov
dec
sbb
sbb
test
pop
mov
push
data16
incl
rolb
ss
popa
cs
fmul
xor
or
lock
xchg
xchg
mov
push
jno
or
imul
dec
xchg
cmpsl
dec
mov
pop
loop
push
sbb
sbb
xor
push
xchg
mov
mov
pop
mov
add
mov
add
insb
out
jnp
clc
jnp
pop
add
sbb
fs
inc
loopne
mov
into
mov
mov
int
and
cltd
shrl
jo
mov
push
inc
jp
mov
pop
sub
jnp
pop
std
sar
rolb
mov
push
push
test
adc
loop
mov
xlat
cmp
push
jmp
push
mov
repz
push
aas
sbb
mov
fs
out
movsb
mov
movb
pusha
dec
cmp
stos
xchg
and
fistps
push
xor
fstl
sub
test
mov
xor
es
pop
out
arpl
pop
push
or
inc
pop
clc
loopne
pop
ljmp
test
jno
sub
push
cmovae
xchg
push
stos
cld
movsb
fwait
xchg
mov
push
xor
stc
xor
inc
ds
andb
mov
dec
xchg
or
cwtl
aad
cmpl
bound
pop
sub
fcomps
mov
sbb
cmp
xorb
shr
mov
mov
pop
lds
mov
and
sub
adc
je
sub
popf
icebp
aaa
mov
sub
push
sbb
xchg
data16
lret
cmp
mov
jmp
push
xchg
dec
inc
dec
roll
es
gs
pop
out
cmp
sbb
test
ja
adc
shrb
and
sbb
pop
lret
xchg
mov
push
mov
pop
or
loope
lcall
mov
push
test
shll
das
aas
fisttpl
pop
nop
mov
pop
xorl
dec
sbb
insb
mov
xchg
xor
filds
inc
pop
rcr
sub
mov
imul
imul
test
mov
jge
add
sarl
movsb
xchg
roll
adc
pop
pop
lods
mov
cmpsb
lock
push
lret
cmp
xor
jle
add
push
sub
xchg
mull
xor
cmpsl
iret
and
lcall
adcl
loope
stos
ds
shrb
sub
mov
test
pusha
jg
pop
scas
shr
cs
and
and
scas
xchg
fmuls
mov
mov
mov
lret
jge
jno
jb
pop
mov
add
cmp
or
inc
cmp
add
adc
sarl
sbbb
dec
mov
iret
dec
push
rcrb
or
fisubrs
pop
inc
daa
sub
jns
mov
jecxz
pop
dec
clc
mov
pop
and
ja
movsl
orl
xchg
pop
mov
push
adc
mov
les
ljmp
es
std
pop
rclb
add
hlt
xchg
jecxz
cmp
out
sbb
lahf
mov
iret
data16
aas
sub
pop
jmp
cli
push
mov
mov
xor
lods
xchg
outsb
out
sub
cmp
dec
cld
in
adc
cmpsb
lods
xor
dec
test
jge
xchg
jecxz
lock
cs
in
cmp
iret
cmp
cmpsl
add
test
and
enter
xchg
loop
insb
jmp
pop
push
inc
or
dec
xchg
inc
outsl
or
icebp
mov
dec
xchg
lcall
and
cli
and
test
fldenv
nop
add
mov
xor
sbb
rorl
xchg
lahf
aas
in
xor
je
push
sub
xchg
movsb
and
mov
in
inc
js
sbb
mov
mov
and
add
add
iret
xchg
inc
insb
inc
xchg
add
xchg
ret
dec
sbb
leave
mov
lret
xchg
dec
sub
cmp
outsb
repz
cs
push
jp
imul
pop
fs
daa
sub
or
insb
sbb
aaa
and
xchg
in
jno
xor
notb
xor
ljmp
jnp
test
decl
sbb
push
out
pop
pop
ss
fs
push
sub
sub
push
xchg
aam
filds
mov
or
mov
add
sub
loop
lcall
push
xchg
sbb
loop
xorb
cmpsb
pop
and
cmpsl
leave
push
arpl
xchg
push
bnd
mov
dec
aas
cmp
movsb
mov
dec
or
sub
stos
pop
jmp
int
insl
adc
movsb
int3
inc
stc
ds
mov
and
imul
and
xchg
add
pop
int3
cwtl
pop
xchg
pop
daa
lods
mul
and
iret
add
inc
loop
push
cmp
jge
mov
scas
jne
xor
fsub
lods
out
dec
mov
pushf
imul
into
out
cmp
adc
sbbb
lea
inc
fcoml
inc
out
cli
mov
inc
jecxz
xchg
lock
outsl
add
and
push
xchg
pop
test
jmp
pop
and
dec
or
hlt
sti
push
jge
popf
push
dec
sub
stos
enter
jmp
dec
int3
lret
dec
and
sub
push
sbb
incl
pop
xor
arpl
mov
loope
and
js
cmpsb
out
push
jle
xorb
daa
push
cmp
and
dec
jne
stos
stos
mov
repz
pop
sbb
iret
sub
dec
pop
inc
into
ljmp
xchg
cltd
filds
daa
push
bound
fdivrs
nop
xchg
cmp
out
aad
xabort
and
mov
mov
xchg
or
inc
ds
lret
mov
add
int
cmp
mov
insb
ljmp
outsb
jae
and
shl
sbb
cmp
cmpb
fdiv
outsb
cmpsb
idivl
fcomps
cmp
cmp
sbb
movsl
fidivrl
mov
push
test
pop
lea
cmpsl
sub
movsl
add
popf
push
in
mov
fdivs
sub
jle
sbb
sub
stc
push
inc
fadds
cmp
loope
test
jmp
mov
and
and
bnd
or
xchg
out
test
mov
inc
lret
dec
mov
mov
push
or
imul
enter
filds
or
bound
xor
inc
mov
dec
jnp
imul
enter
pop
mov
lods
aaa
cmp
or
cmp
push
test
rsqrtps
pop
gs
iret
in
stos
and
cmp
push
outsb
adc
jg
sub
adc
insb
sub
movsb
cli
fmuls
mov
adc
call
push
call
pop
inc
xorb
fistps
aas
xchg
mov
jb
cmp
add
inc
xor
aaa
int3
or
add
jno
scas
and
dec
jl
jp
cmpsl
jmp
push
xorb
ljmp
imul
and
xchg
mov
fdivrs
sub
push
xchg
mov
add
mov
mov
xchg
ret
add
into
mov
push
and
xor
js
xor
cmp
loop
mov
popa
daa
test
out
cli
push
xchg
cmp
xor
in
mov
je
out
ss
aam
addb
add
push
push
dec
aam
sahf
mov
int3
mov
xor
xor
jecxz
and
sets
xor
push
test
std
xor
and
ror
mov
or
add
dec
mov
cmp
mov
mov
jl
cmpsb
aam
lods
or
insb
pop
test
push
or
push
add
hlt
cmp
xchg
xor
lret
mov
aad
adc
or
ds
jae
sti
sbb
jo
ljmp
xchg
inc
pop
fstl
pop
popa
ret
mov
outsb
xor
mov
adc
jp
sub
lahf
pop
adc
int3
inc
dec
sbb
fldcw
popf
inc
test
mov
scas
mov
inc
mov
mov
in
in
xchg
jecxz
push
lods
rorl
fstpt
in
mov
xor
aas
xchg
test
inc
jmp
pop
push
mov
testl
sarb
ret
cmp
sub
fst
mov
push
hlt
or
rcrl
cmp
bound
ret
push
mov
mov
ja
inc
xchg
loope
out
movsb
mov
mov
out
and
sbb
lds
ret
mov
cmpsb
fcmovne
xor
into
dec
aaa
pusha
cmp
lea
pop
fadds
les
pop
mov
add
mov
inc
pop
pop
out
cmp
movsl
fdivrp
les
xlat
xor
mov
xchg
jo
jp
sti
jecxz
daa
icebp
mov
xlat
pop
aaa
test
lcall
out
xchg
fs
insb
jae
mov
iret
pop
sub
or
sbb
add
jmp
test
pop
mov
loope
pop
jl
punpcklwd
pop
movsl
aad
dec
sbb
sbbl
loope
cli
movhps
cld
push
inc
js
xchg
sbb
mov
ds
sbb
ja
out
pushf
jae
cmp
daa
or
push
in
iret
push
or
push
stc
mov
movsb
lret
cld
loopne
arpl
enter
fstps
test
mov
arpl
stos
dec
dec
pop
orb
cmc
pop
fucomip
loop
pop
sahf
and
inc
xchg
cmpb
ret
mov
mov
orl
dec
sarb
mov
fs
insl
std
push
inc
out
mov
cmp
xor
out
iret
sub
movsl
pop
sti
pop
mov
push
into
mov
inc
xor
mov
ja
pop
inc
lahf
cmpsl
dec
fists
add
sahf
xor
pushf
bound
mov
test
cli
loope
add
rcl
pop
or
cmp
xchg
mov
dec
add
rol
jb
mov
jbe
lret
addb
sub
test
push
and
enter
pop
cli
xor
les
xlat
les
fbld
rcll
ret
sub
cmpsb
xchg
mov
popf
xlat
out
adc
gs
je
add
mov
in
adc
sbbb
inc
ds
fwait
pop
push
sti
stos
cmpsb
insb
imul
or
loop
aas
dec
adc
dec
mov
sbb
sbb
push
les
jmp
push
xchg
scas
sbb
jno
pop
inc
pushl
fisttpll
fucomp
into
xor
adc
lods
adc
jecxz
jge
insl
cmp
leave
out
add
mov
cmp
ds
cmp
pop
inc
scas
jae
sbb
mov
jecxz
inc
xchg
repnz
jg
and
add
jb
mov
xchg
int3
mov
inc
inc
xor
fdivrs
lods
into
cmp
scas
loope
xchg
mov
jbe
xchg
mov
loopne
mov
popl
mov
jge
ss
jne
popf
add
lea
icebp
mov
or
stos
xor
cmpsl
test
std
arpl
out
xor
bnd
les
ret
js
xor
mov
push
and
jg
fmulp
js
pop
push
pop
pusha
es
mov
push
addb
leave
lcall
or
js
jnp
mov
ret
mov
inc
std
lods
shl
inc
out
cmc
inc
fwait
cwtl
nop
rorb
in
mov
jns
sbb
sbbb
dec
test
mov
sub
repz
data16
adc
mov
sahf
mov
jnp
mov
fiadds
imull
clc
mov
jg
sbb
cmpsb
mov
adc
movsl
mov
sti
leave
cmp
mov
in
inc
dec
or
jge
shrl
test
jecxz
nop
pop
clc
mov
cmp
push
inc
add
fiadds
and
jb
sbb
lock
enter
and
popa
pop
repz
fistl
add
inc
int
mov
add
sub
adc
dec
mov
loopne
fimuls
loope
fstl
xchg
mov
push
jbe
and
psubw
sbb
stos
ficomps
or
push
sub
hlt
aaa
stc
push
data16
std
and
xchg
lods
mov
inc
cmpsl
daa
push
sub
dec
dec
mov
jl
jg
add
mov
push
xor
sub
je
adc
lock
xchg
push
daa
rolb
xor
pop
pop
jae
push
dec
or
inc
outsl
popa
jecxz
test
add
roll
adc
nop
mov
adc
jne
leave
shlb
cmp
push
ret
cmp
test
adc
ss
sbb
scas
gs
into
pop
sub
mov
subb
test
inc
repz
and
dec
and
add
mov
sub
push
inc
push
xor
out
ror
mov
cmp
or
xor
jp
fidivrs
bound
repz
inc
inc
enter
sarb
mov
fcoms
icebp
stos
ret
mov
jne
add
ljmp
cmc
in
lret
push
icebp
aad
out
cmpsb
jne
lods
sub
sub
push
out
jne
das
pop
data16
ljmp
mov
insl
ds
mov
sub
jo
mov
js
outsb
rcr
mov
mov
xor
xchg
jle
outsb
sahf
in
addl
xorl
int
pop
insl
pop
pop
add
inc
es
jnp
or
pop
imul
jg
mov
jge
leave
mov
insb
and
ret
cmpsb
dec
inc
test
xlat
xor
xchg
sbb
in
int3
xchg
xorl
mov
lea
cmpsl
pop
leave
lcall
test
jl
cmc
inc
mov
dec
cmp
ss
dec
push
sahf
test
std
xor
push
mov
adc
adc
popf
jl
out
and
pop
mov
cmp
jp
mov
jns
dec
neg
gs
cmpsb
jnp
repz
rcrl
fcoms
pop
pop
fs
fs
or
lcall
andl
pop
mov
jg
pop
loopne
ret
in
rclb
das
and
sbb
scas
lods
inc
jb
insl
jno
test
push
es
popa
dec
xchg
mov
adc
enter
rcr
sub
push
cwtl
push
pusha
adcl
and
in
movl
das
outsl
inc
jl
insb
push
icebp
pop
mov
add
jl
bound
ss
insl
xchg
int3
movb
and
scas
les
sub
out
addr16
gs
push
test
and
dec
sub
test
loopne
pop
cs
mov
mov
mov
jmp
push
movsb
jge
mov
adc
shrb
and
and
leave
dec
add
incb
ljmp
lea
cmp
fisttpl
cmp
cwtl
popa
dec
pop
scas
or
std
xor
insl
ret
lahf
and
push
adc
fnstcw
insl
ja
data16
gs
jl
mov
push
mov
cltd
enter
adc
shrl
xchg
jno
popa
xchg
testl
fisttpll
imul
or
xchg
xor
inc
popf
xchg
sub
and
adcl
or
dec
or
shll
add
push
push
fwait
xlat
xor
imul
sub
xchg
pusha
mov
xchg
jge
xchg
xchg
xchg
in
xchg
test
jo
jmp
xchg
sti
jnp
dec
jo
mov
popa
xchg
sub
lret
lods
dec
inc
insl
das
cmpsb
inc
inc
or
popf
cltd
in
loop
inc
daa
mov
mov
mov
cltd
jnp
out
mov
mov
mov
lcall
jns
mov
std
sub
fstpl
lods
test
cmpsl
in
or
inc
arpl
movsb
cld
and
jne
jae
gs
movsl
and
sbb
imul
and
or
add
mov
sub
jle
movsl
mov
push
lret
outsl
pushf
pushf
icebp
xlat
xor
xchg
sbb
ss
dec
fisttpl
stc
into
stos
cmpsb
mov
imul
aaa
push
and
lods
pavgb
jmp
addl
insl
jae,pt
push
lds
pop
xchg
lcall
rol
mov
adc
inc
push
xor
pop
int3
sbb
jmp
cltd
mov
repz
sbb
cmp
lret
push
inc
jle
mov
mov
test
movsl
cmp
adc
stos
cmpsb
es
and
hlt
add
jo
or
lahf
xchg
push
cwtl
outsb
pop
scas
ret
pop
jnp
loope
add
flds
lea
cmp
pop
jmp
shlb
mov
mov
add
test
stc
cs
inc
dec
out
xor
pusha
shl
shll
adcb
mov
pop
daa
and
and
shll
push
les
xchg
jmp
andl
push
inc
adc
mov
test
xor
push
in
push
sub
inc
adc
les
jl
jns
rcll
jae
pop
and
mov
cld
add
mov
ret
dec
or
push
dec
sbb
repz
add
fists
fsubl
xor
adc
enter
xlat
bound
mov
jb
loope
cmp
sbb
roll
fisttpl
scas
mov
push
sbb
sahf
enter
xchg
aaa
mov
movsb
test
cmp
inc
cmp
clc
pop
mov
popa
xor
mov
jae
rcr
out
jg
pop
ljmp
bound
push
inc
pop
pushf
mov
adc
sahf
iret
push
lret
decl
mov
hlt
aaa
mov
cmpsb
inc
enter
flds
loop
inc
sbb
lahf
and
loope
jae
mov
sub
aam
les
push
mov
aam
imul
es
and
sbb
bound
sbb
in
jmp
push
and
int3
sbb
fstpl
inc
movsl
pop
dec
lods
adc
mov
xchg
push
fstps
pop
jecxz
icebp
out
cli
outsl
mov
repnz
mov
inc
adc
aas
dec
push
rorl
pop
sbbl
jns
call
sbb
push
pop
or
jp
in
lds
pop
xor
fxtract
xchg
cmpsb
andl
mov
xor
lea
xchg
or
out
jnp
pop
leave
xchg
sbb
test
mov
pop
mov
push
adc
mov
lods
sbb
lret
pop
pop
dec
movsl
scas
xchg
dec
out
inc
mov
lcall
pop
test
sbbb
inc
inc
in
sub
jg
ret
mov
sbb
mov
add
std
sub
cwtl
repz
dec
insl
in
xchg
pop
push
sub
sti
mov
push
jo
leave
push
jecxz
push
std
sbb
jle
icebp
leave
es
adc
sub
stos
subb
data16
pop
test
in
cmc
lock
add
jb
and
nop
mov
das
scas
nop
shrl
xchg
jp
daa
aas
adc
repnz
xchg
pop
test
add
jbe
cmp
sbb
out
pop
jne
xchg
arpl
jg
push
or
push
xchg
sub
faddl
pop
xchg
lahf
insl
negb
or
and
fsubrp
sbb
fdivs
pop
add
mov
xor
and
push
inc
or
inc
lods
xor
in
pusha
sub
mov
jne
dec
push
add
into
cmpsl
andb
or
shl
roll
cmp
in
mov
jae
lds
test
adc
lock
hlt
and
pop
xor
pop
loop
mov
mov
xchg
imul
pop
icebp
push
inc
mov
popa
pop
movsb
dec
out
and
add
mov
bound
fisubrs
es
mov
pop
mov
aaa
clc
nop
fidivrl
xor
ret
es
xchg
xor
push
push
mov
mov
call
mov
mov
fs
and
outsl
fwait
push
in
pop
xchg
lret
repnz
and
cld
mov
out
cmpsb
popf
call
push
ret
jge
sbb
add
mov
push
bound
outsb
ljmp
push
xchg
mov
adc
xchg
pop
push
aaa
pop
inc
ficompl
jb
jnp
xorb
pop
pop
cld
push
bound
jns
icebp
or
loop
adc
fdivr
rol
js
insl
and
inc
adc
pop
test
pop
jb
enter
xor
bound
push
cwtl
add
cmp
xor
pop
std
dec
leave
enter
hlt
push
into
mov
stos
mov
test
sub
shrb
divl
gs
adc
jg
fwait
pop
out
loop
jb
iret
loop
mov
std
mov
cmpsl
data16
xlat
mov
pop
arpl
cmp
adc
push
shrb
mov
insb
dec
negl
mov
dec
jge
cmpsl
je
push
jmp
xchg
cmp
xor
call
dec
cmp
add
mov
je
orb
mov
sbb
cmpb
loope
pushf
xor
imul
movsb
or
in
jp
loopne
loope
lcall
out
out
jb
test
stos
arpl
inc
pop
jno
out
fidivs
add
leave
adc
in
movsl
sub
jno
mov
ljmp
dec
push
adc
or
int3
add
mov
adc
and
sub
vsqrtss
insb
xchg
add
stc
mov
dec
nop
jmp
jae
push
jno
rorl
sub
cwtl
dec
dec
dec
ret
cli
jno
xchg
sub
fcoml
test
clc
sub
int3
mov
lea
sub
mov
sub
mov
mov
cld
and
into
sti
adc
std
insl
pop
sub
das
bound
and
stos
in
push
adc
imul
imul
add
xchg
mov
inc
mov
xchg
aam
mov
daa
jecxz
ret
fdivl
clc
mov
nop
loopne
mov
outsb
mov
icebp
rorb
lds
data16
cmc
pop
test
sub
cmp
mov
clc
xchg
dec
add
mov
mov
or
mov
add
sub
mov
add
outsl
scas
pop
and
jno
inc
fbstp
push
imul
push
mov
shrb
xor
inc
xchg
mov
into
jae
call
adc
stos
jecxz
or
pop
addr16
imul
jp
cmp
mov
sahf
outsl
xchg
pop
gs
fimull
aas
cmp
je
cmp
xor
dec
inc
repnz
add
inc
mov
les
data16
fwait
leave
iret
pop
sub
inc
mov
lods
dec
fiaddl
sub
adc
leave
jecxz
cltd
jl
arpl
jo
jno
enter
xchg
xchg
lods
popf
addr16
out
mov
mov
mov
jno
add
xchg
jecxz
pop
addb
sar
push
lea
movsb
add
push
aad
and
xor
div
das
push
dec
mov
orl
fdivrl
in
or
aas
fmul
hlt
addr16
pop
xor
pop
cmp
mov
add
push
in
dec
les
loop
pushf
push
fidivs
ret
into
adc
sahf
shll
jnp
lret
cs
andl
inc
xchg
loop
and
int
sbb
jmp
and
pop
test
bswap
fdivrp
cmc
xor
xchg
subl
jns
cmpsl
push
mov
enter
clc
int3
test
push
mov
dec
jno
addr16
xchg
jmp
sbb
sbbb
insl
test
mov
adc
push
insb
sbb
test
pop
jns
aad
cltd
pop
pop
mov
in
cmp
shll
sub
cmp
and
nop
ret
cmp
in
sti
pop
fildll
das
or
std
and
adc
inc
fisttps
out
clc
aam
test
and
cli
add
push
roll
or
mov
aas
pop
dec
fidivs
mov
or
test
mov
jbe
push
repz
sub
sbb
push
sub
add
push
cli
jle,pt
out
lock
fidivl
call
adc
adc
mov
jne
xchg
sbb
or
pop
lcall
in
cmp
shlb
fwait
popf
xchg
int3
mov
in
cmp
scas
pop
push
fistps
cmp
fcmovne
sbb
push
push
ret
mov
jmp
jecxz
sub
lea
push
pop
xchg
movsb
jae
sub
scas
xor
cmp
les
xor
hlt
in
addl
push
pop
test
jp
test
les
push
mov
ja
test
sub
int
cs
inc
mov
adc
jg
and
std
loope
pop
lods
xor
lods
pop
adc
cli
push
sahf
or
mov
jo
add
mov
into
test
sarb
push
mov
adc
cmp
int3
scas
rorw
mov
cmc
pop
dec
lahf
ss
sahf
movl
mov
out
push
icebp
mov
dec
add
jns
adc
push
sub
push
jl
mov
xor
cmp
ss
add
cmc
int3
pop
xor
aaa
jne
cmp
aad
ret
add
les
es
add
mov
int3
loope
xchg
add
js
test
ret
fwait
pop
pop
jl
push
mov
imul
sub
mov
je
lds
xorb
adc
inc
shll
stc
fsubs
rorl
lret
mov
push
stos
jge
xor
negb
imul
push
pop
jo
ret
sub
fistpl
les
mov
sub
cltd
inc
lcall
jb
mov
xlat
xadd
mov
ss
xor
imul
cmp
fwait
xchg
pop
jecxz
or
adc
pop
aaa
stos
dec
outsb
stos
push
scas
push
mov
mov
push
shl
jecxz
icebp
hlt
xor
movsl
push
xchg
add
dec
lret
sbb
dec
sbbl
loopne
jle
mov
xor
jp
ret
pop
test
xchg
sbb
inc
mov
aad
adc
xor
rcll
je
pop
and
jbe
lahf
mov
add
fidivs
into
stc
iret
dec
cli
sbb
mov
xchg
in
call
stos
bound
jnp
lahf
loopew
sti
fistpll
pop
xor
cli
mov
push
pop
das
xlat
sahf
sbb
outsb
adc
mov
lds
ljmp
dec
es
sbb
stc
xor
push
or
mov
pop
cmpb
xor
pop
pop
out
int
lods
fnsave
pop
ss
add
sub
fisubl
call
loope
jnp
jecxz
mov
cmp
cltd
push
lock
test
xor
push
out
sub
or
test
mov
adc
push
lret
cmpsl
movsb
popa
fisttps
jecxz
stos
out
pop
cmp
out
in
jns
lock
adc
mov
jno
sub
jno
das
pop
dec
out
and
sub
lcall
call
roll
sub
scas
xchg
and
lock
loop
inc
xor
dec
notl
aaa
pop
sub
xchg
and
ret
sbb
add
jp
jmp
lock
xor
inc
add
sub
int3
lods
std
int3
rcl
cmc
xor
pop
loopne
sub
jg
dec
lods
xchg
ja
pusha
mov
movsl
mov
sbb
fwait
pop
pop
add
ret
lds
add
mov
and
xor
sub
clc
int
or
adc
out
fcoms
sub
ljmp
popa
shrl
mov
nop
pusha
enter
cmp
test
ret
into
arpl
jb
es
mov
test
xchg
lock
fwait
or
adc
lods
in
call
lret
pop
scas
fsub
xorl
xchg
adc
int3
mov
mov
stc
dec
dec
mov
js
lretw
pop
xor
inc
xchg
je
inc
mov
lahf
loop
je
inc
xor
fcompl
jne
push
xor
out
pop
cmp
leave
xor
sub
push
push
sahf
fnsave
outsl
adc
and
adc
daa
pop
lea
mov
les
jl
andb
mov
repz
mov
mov
xchg
mov
cmp
or
lret
fs
sbb
push
dec
cld
movsl
push
cltd
fwait
insl
sbb
mov
or
fcompl
mov
test
subb
push
aad
pusha
pop
xchg
arpl
out
push
cli
inc
outsl
cmp
out
mov
cmc
inc
enter
xchg
mov
add
jl
das
data16
mov
stc
mov
adc
xor
iret
ljmp
ds
fldt
lahf
mov
jo
pop
movntq
mov
mov
adc
in
sub
dec
in
jbe
cmpsb
push
cmp
bound
shrl
dec
pop
out
lret
call
je
addr16
add
xchg
mov
shrb
push
scas
test
lea
push
push
sahf
mov
cmp
data16
or
mov
pop
pop
mov
loopne
add
pop
jmp
pusha
add
adc
rcl
push
rcrl
shr
adcl
xchg
cmpsb
add
and
lods
push
or
mov
lahf
std
pop
subl
sub
cmpsl
push
imul
inc
lds
sahf
lea
mov
lock
lret
repz
cmp
pushf
cmp
cmp
dec
or
sub
jb
test
cwtl
das
rclb
lret
add
mov
popa
push
push
popf
xchg
test
sub
into
cmp
fmull
cmp
lret
dec
dec
ljmp
addr16
and
imul
push
lods
dec
sub
pop
hlt
ja
mov
add
fistl
clc
push
popf
push
fidivrl
out
scas
sub
adc
cld
mov
sti
es
inc
jmp
inc
xchg
loope
jmp
outsl
test
push
or
and
cmp
ja
mov
sub
mov
or
mov
cmp
mov
jae
add
ror
lods
in
cmpsl
xor
mov
fs
cmpsb
xchg
js
std
inc
stc
xchg
xchg
cmp
das
dec
fildll
in
xchg
push
sti
xor
sahf
pop
scas
jnp
scas
cmp
out
ss
shrb
add
mov
fmull
into
sub
iret
add
aam
sbb
jmp
ss
push
sbb
dec
dec
xor
mov
sbb
push
pop
je
scas
lret
xchg
fldcw
mov
dec
inc
mov
int3
add
xor
adc
cmp
mov
in
pop
fistps
jnp
enter
out
xchg
add
jo
lret
cs
push
mov
pop
jg
rolb
inc
shl
cmp
testb
or
orb
add
dec
xchg
add
sub
repz
jle
negb
mov
adc
mov
cmpl
and
rcrl
dec
inc
mov
andl
mov
fdivl
sbb
xor
jl
jp
ss
or
lods
cmc
aaa
pop
subb
mov
dec
fwait
mov
mov
add
dec
add
pop
aaa
cli
lret
pop
imul
pop
fstp
mov
scas
jp
sub
sbb
and
add
das
sbb
jnp
xchg
leave
cmp
subb
lods
xor
xorb
mov
orb
jbe
ds
in
loop
aam
in
mov
sbb
mov
out
ficompl
sarl
scas
insl
sbb
iret
fs
cltd
mov
inc
lret
fmuls
dec
fnstenv
mov
jo
and
sahf
cs
dec
std
or
lock
int
sbbb
xchg
test
pop
jns
mov
cld
pop
inc
test
imul
das
leave
inc
mov
mov
pop
sti
xor
mov
sbb
cmp
or
dec
ret
repnz
daa
leave
push
int
std
test
std
cmc
dec
mov
xchg
jecxz
pop
mov
out
ds
xchg
lock
or
into
testb
call
enter
insl
sbb
jmp
stc
xor
loope
psrlw
xor
xor
mov
and
mov
mov
xchg
lock
and
add
mov
ljmp
adc
xchg
aam
mov
rclb
inc
sub
jmp
adc
fidivrs
aaa
fcmovnu
test
sbb
sbb
fwait
cwtl
std
js
inc
loope
mov
ja
aaa
cmp
std
push
outsb
mov
pop
dec
pushf
pop
sbb
loope
push
iret
pop
mov
inc
adc
xchg
mov
cmpsl
adcl
and
sbb
data16
xor
pop
sub
decl
mov
xchg
add
mov
push
cmpsl
out
pop
and
movsl
fistpll
ljmp
dec
inc
fisubrl
push
int
inc
xor
pop
xorb
repnz
fisttpl
pop
pop
popf
mov
pop
into
mov
outsl
cmpl
js
lock
mov
mov
push
sub
sbb
or
lret
fwait
cmp
fbld
jmp
mov
inc
aam
dec
cmpsl
popf
in
gs
mov
sub
dec
into
jg
lahf
std
pop
pop
jge
lock
mov
push
push
ds
call
mov
fisubl
loop
scas
outsb
mov
mov
lds
sbb
call
loop
mov
je
lahf
int
bound
lock
pop
imul
xchg
aam
cmp
dec
mov
cld
mov
pop
jne
mov
push
mov
clc
xchg
in
lahf
cltd
xor
adc
outsb
aas
shll
scas
mov
mov
xor
and
pop
mov
add
jbe
pushf
push
adc
aas
add
stc
dec
outsl
pop
add
ss
and
imul
sub
mov
adc
pop
cmp
in
outsl
cmpsl
cmpsb
outsl
sahf
jns
dec
icebp
fstpl
pushf
pop
jns
dec
in
add
xor
mov
mov
inc
xchg
mov
imul
repz
mov
dec
lods
mov
lcall
sbb
or
in
aam
outsb
pop
jo
fwait
jne
pop
lret
lds
mov
sbb
xchg
xlat
std
push
pushf
mov
int3
mov
push
test
pop
push
aad
mov
repnz
fists
pop
test
jo,pt
aaa
pusha
pop
jae
or
out
push
fwait
outsb
cmp
cmp
out
ret
and
arpl
push
sbb
js
inc
adc
push
fisttpll
mov
and
cmp
jp
fisttpll
pop
mov
cli
mov
or
scas
ret
add
inc
sub
and
pop
xchg
cmp
js
ficomps
jne
sbb
mov
push
orb
or
fs
add
aad
sbb
mov
repz
outsl
cmp
stos
mov
dec
add
inc
jg
dec
sbb
cmpsl
jno
ja
jbe
fidivs
jno
sub
dec
loopne
and
mov
and
pop
jnp
inc
sbb
das
fcmovnu
cwtl
adc
fimuls
jp
inc
aad
arpl
les
js
sub
or
rolb
aad
and
xor
jle,pn
pop
push
imul
mov
inc
pop
ss
sub
xchg
shlb
mov
mov
cs
insl
push
aam
addr16
jg
add
mov
xchg
pop
cs
ds
pop
adc
movsb
add
push
ret
and
mov
je
mov
mov
adc
jmp
xor
adc
scas
pop
or
insb
xor
shrb
xor
sbb
xchg
bnd
cmpsb
sarb
inc
test
test
adcl
jp
and
icebp
fistpl
mov
xlat
jle
mov
push
shlb
or
fiadds
xchg
and
inc
xchg
pop
aad
fisubl
push
push
cmc
dec
add
cltd
jp
jne
ficompl
es
adc
mov
jge
inc
fwait
cld
les
pop
sub
das
in
xor
xchg
in
jecxz
inc
inc
test
inc
out
xchg
cmpsl
mov
rolb
shrb
adc
lds
into
subps
sbb
dec
jae
pop
sub
push
push
cs
add
pop
nop
mov
push
aas
stos
xchg
dec
movsl
lods
xchg
aam
pop
in
fldcw
test
xor
mov
testb
int
xchg
sub
movsb
in
cmc
int3
sbb
xchg
jnp
xor
int
fidivl
sub
popa
cmp
dec
push
cmpb
xchg
negl
fcmovbe
jns
pop
je
jmp
das
jmp
adc
cmp
mov
popf
jbe
aam
stc
repz
and
lds
xlat
popf
fistps
std
inc
iret
stc
adc
cmp
cli
jmp
test
js
lret
ds
lock
clc
add
jns
xor
mov
dec
idivb
addl
mov
xor
push
popa
xor
mov
fdivrs
inc
inc
test
mov
xor
roll
test
push
dec
into
sub
jo
xchg
lahf
enter
fstpt
sbb
shrb
push
fcoml
add
out
or
bound
add
mov
push
outsl
xor
neg
xchg
aad
xlat
insl
leave
xchg
hlt
dec
pop
out
and
pop
sahf
jge
cmp
cmp
mov
movl
das
and
and
jg
fcomp
adc
dec
hlt
fs
cmp
xorl
lret
inc
pop
daa
add
mov
xchg
or
adc
in
inc
out
pushf
pop
xchg
sbb
mov
dec
or
dec
pop
inc
add
mov
daa
adc
xor
inc
sub
xchg
or
add
into
or
adc
cmpsl
sbb
addr16
inc
popf
cmc
je
adc
xor
add
int
lret
psubw
bound
jmp
stc
xchg
imul
jle
fstpl
lret
xlat
mov
mov
jo
sub
sbb
in
popa
xchg
adc
inc
or
scas
inc
aas
sbb
int
imul
fisubrl
call
mov
and
sbb
and
mov
and
daa
cmp
mov
mov
pop
dec
int3
inc
mov
jle
mov
jae
or
test
add
push
pop
and
and
sub
mov
test
hlt
ret
lods
push
pop
cmpsl
mov
mov
and
iret
xor
and
add
inc
xor
xor
sbb
leave
add
adc
push
sub
cmc
fistps
arpl
shlb
fwait
mov
sbb
cmp
pop
es
sti
inc
decl
das
jne
dec
xchg
sub
and
jge
adc
jmp
daa
sbb
dec
in
xchg
xrelease
sbb
arpl
sahf
loop
movsb
lret
sbb
fldl
push
loope
sub
ds
mov
and
mov
fildl
loop
fwait
sarl
xor
scas
mov
cltd
jns
icebp
xchg
pop
inc
pop
orl
adc
jno
xchg
lcall
gs
les
sbb
mov
mov
inc
inc
jmp
shl
sahf
pusha
sbb
aad
add
cld
xor
lds
sub
lcall
jb
rcll
ss
and
repnz
enter
lahf
pushf
ret
or
mov
rol
mov
pop
mov
inc
mov
sub
mull
les
and
lea
push
mov
pop
jge
call
movsl
popf
mov
enter
jo
rorl
pop
cwtl
aas
sub
mov
je
mov
lret
push
insl
into
and
xor
test
mov
xor
andl
stos
lods
ljmp
out
adc
test
xor
jge
sub
fdivp
mov
push
push
jecxz
lret
sbb
cltd
movl
dec
mov
add
and
stos
lcall
pop
xor
loopne
xor
pop
pop
sbb
mov
mov
lock
fisubs
int3
or
dec
sbb
cmp
xor
pop
in
in
ljmp
pop
or
sub
mov
inc
mov
fldenv
lods
jbe
aam
es
scas
and
fwait
sub
movsl
sbbl
push
or
adc
outsb
jbe
ljmp
jl
push
cld
popa
dec
and
xchg
nop
cmp
jb
out
push
in
hlt
daa
push
jns
mov
cwtl
pop
pop
pop
sbb
inc
push
adc
mov
mov
mov
sub
jne
insb
arpl
ret
add
dec
or
add
cmp
leave
lahf
xor
push
dec
sub
xchg
cli
in
jmp
mov
cwtl
inc
mov
push
jae
or
bound
sub
pop
jnp
cld
shr
outsl
dec
lret
jbe
ret
pop
call
or
outsl
fisttpll
or
or
sbb
mov
inc
xchg
sbb
decb
sbb
and
mov
std
in
or
mov
scas
insl
or
lock
sbb
cld
ljmp
fldl
sbb
or
inc
cs
out
cmpsl
js
pop
inc
divb
jmp
das
and
insb
scas
pop
dec
jl
fwait
mov
mov
adc
or
rclb
sbb
add
test
mov
jecxz
or
data16
push
xchg
jo
pop
pushf
sbb
lods
mov
pop
mov
jmp
lret
aaa
jmp
dec
clc
jnp
sbb
in
leave
ret
xchg
pop
js
push
add
push
repz
jp
mov
scas
inc
inc
xchg
fistpl
cmp
test
xchg
sbb
insb
jnp
dec
in
fwait
movsl
mov
mov
lods
sbbl
movsb
popa
lcall
or
adc
int3
test
pop
xlat
jbe
in
fistl
inc
ror
xchg
jae
ja
stc
scas
std
repz
mov
addr16
call
inc
mov
sub
mov
mov
lret
pop
fnstsw
aaa
push
cltd
cmp
push
mov
ficoml
sub
xor
pop
or
mov
pop
out
cmpsl
movsb
push
in
adc
jns
fcmovu
dec
aad
imul
jg
jecxz
adc
pop
dec
dec
sbb
test
jno
pop
popa
pop
jnp
xchg
cmp
mov
fstpl
xor
xor
mov
pop
inc
push
fildll
int3
dec
cmp
cmp
fiaddl
jg
dec
cmp
test
push
xchg
jne
jecxz
ss
iret
jbe
insl
iret
pushf
ds
cmc
dec
nop
imul
enter
rolb
sbb
stc
jp,pn
shrb
enter
out
sbb
jg
cmp
mov
int3
stos
inc
xor
ds
leave
and
mov
jne
mov
adc
pop
lahf
dec
adc
sub
cmp
and
das
inc
sub
jbe
cmp
pop
add
lcall
fidivs
jo
inc
insl
mov
movsl
daa
aad
inc
cmp
xchg
addr16
cs
mov
jge
in
ror
sbb
push
push
pop
test
clc
jnp
sub
sub
sub
ror
rorb
neg
pop
lret
sbb
adc
adc
sbb
aad
sub
xor
cmp
pop
inc
xlat
mov
rolb
ud2
or
jne
stos
sbb
push
xor
adc
push
xchg
test
push
pop
aas
je
mov
or
cmp
pop
cmp
add
sbb
inc
std
shrb
fadd
xchg
sbb
setns
add
add
bound
insl
xchg
mov
inc
pop
xchg
lahf
mov
cs
fadd
jns
fst
insb
pop
sbb
sub
mov
or
xchg
je
cmp
out
mov
inc
stc
stos
arpl
push
or
rcrb
js
jo
cmp
push
int3
cmpsl
dec
and
mov
xor
leave
mov
ds
js
sbb
dec
and
leave
rorb
cwtl
xchg
jl
adc
cmpsl
pop
mov
ljmp
frstor
lret
inc
pop
outsb
xchg
dec
inc
cmp
and
movups
xchg
jp
fdiv
repz
xchg
push
jns
iret
cli
loopne
push
loopne
shl
and
and
je
pop
add
xchg
mov
cmp
fs
dec
mov
or
pop
iret
shl
sbb
mov
mov
mov
sahf
mov
popa
js
mov
ret
test
jp
xchg
dec
push
mov
pop
cld
int3
push
add
into
int
fcomps
dec
pop
imul
fwait
bnd
in
imul
xchg
pop
sub
mov
sub
sub
dec
ja
cmp
test
fdiv
lea
imul
dec
adc
mov
clc
mov
int
mov
pop
outsl
fwait
pusha
out
fisubrl
mov
inc
fucomi
jae
mov
mov
dec
push
dec
lock
ljmp
xchg
or
sub
fildl
sub
dec
xchg
loop
imul
ja
in
jecxz
pop
adc
in
test
sahf
fsubrs
sub
into
addr16
inc
push
jecxz
pop
inc
movsl
movl
arpl
out
or
stc
inc
repnz
pop
dec
push
xor
sahf
imul
pop
lock
retw
dec
aaa
or
sub
push
xor
loopne
lds
pop
pop
out
push
sub
push
jmp
pop
hlt
and
rcrl
push
sbb
out
push
push
mov
xor
mulps
xchg
aas
sub
scas
call
xor
inc
mov
in
jns
ret
outsb
movsb
xor
jl
movb
sahf
scas
in
sbb
stos
add
ret
cmpb
out
mov
cmc
dec
stos
movsb
gs
jp
inc
aaa
sub
sub
cmpsb
push
add
arpl
inc
pushl
imul
bound
mov
cmp
mov
iret
into
stc
adc
hlt
mov
test
jne
rcrb
mov
jb
addb
cmpsb
gs
test
mov
sbb
mov
iret
out
imul
jae
xchg
fadd
sahf
into
or
loope
xor
mov
inc
scas
mov
cmpsl
sahf
pop
cmp
cltd
mov
dec
jb
mov
out
jb
fdivr
loop
mov
dec
add
enter
outsb
push
mov
adc
loope
loopne
dec
sahf
and
mov
and
xchg
shlb
lret
bound
ret
xor
ret
fcoms
mov
pop
test
add
dec
cwtl
inc
rcll
cmc
and
movsl
sub
sar
inc
out
shlb
les
add
sub
shlb
push
aad
pop
faddp
ljmp
fadds
or
or
xor
mov
mov
imul
out
mov
jmp
and
daa
dec
pop
fnsave
in
sbb
call
mov
dec
popa
jge
outsb
cld
mov
jae
mov
call
lds
js
push
popa
ss
in
fistpll
ja
das
shll
lds
lods
dec
lcall
xchg
bswap
add
add
mov
cmp
clc
fsts
leave
lahf
cmp
sahf
xor
lret
sbb
addb
mov
cmpsb
inc
lcall
mov
pop
mov
fsubrp
lods
mov
sahf
push
push
fcomps
cwtl
mov
ficompl
bound
movsl
inc
jmp
or
pusha
mov
mov
add
aam
jp
dec
jns
sub
xchg
mov
nop
or
in
jl
out
scas
sbb
ss
pop
push
orl
xor
sub
mov
stos
jae
lods
dec
ljmp
xchg
mov
push
xchg
cmp
ret
xchg
outsl
std
sbb
mov
push
outsb
xor
cmovnp
xchg
dec
add
arpl
arpl
pop
aam
xchg
push
pushf
divb
mov
test
mov
daa
mov
mov
dec
cmpb
in
mov
jns
call
xor
insl
lcall
dec
jmp
test
out
jb
imulb
jle
sub
cltd
outsb
adc
push
ret
jmp
ljmp
rcl
adc
inc
test
mov
imul
sub
pushf
call
lret
jmp
fdiv
scas
sbb
mov
and
pop
stos
andl
jmp
push
fsts
rcrb
aad
xchg
jae
and
jmp
and
and
pop
xchg
jmp
loopne
les
pop
push
mov
mov
rolb
rolb
and
pop
js
jbe
xchg
addr16
sub
cmpsl
cli
lret
pop
sub
lcall
out
sbb
imul
fdivrs
lcall
mov
push
fisubrs
imul
call
inc
cld
xor
rcrl
jns
xchg
add
test
pop
mov
hlt
int3
pop
cmpsb
jp
mov
sbb
adc
addr16
inc
jb
ja
adc
cmp
add
ds
adc
aaa
inc
out
adc
aam
out
aaa
pusha
xor
mov
jnp
lock
addb
out
outsl
jo
lock
ror
orl
call
push
dec
and
mov
jmp
dec
and
adc
push
ficompl
dec
pushf
mov
xchg
sbb
sub
aas
and
mov
push
ss
rorl
adc
cld
decl
aas
in
mov
imulb
scas
xor
jle
push
sub
and
inc
ret
int
movsb
pop
inc
stos
push
push
inc
in
mov
pop
dec
test
aad
sbb
sbb
lods
test
adc
jg
in
popa
push
and
mov
xor
mov
or
push
add
mov
mov
imul
adc
push
repnz
push
loopne
push
mov
push
jnp
mov
and
aad
mov
mov
pusha
xchg
inc
pushf
xor
xchg
sbb
cvtpi2ps
cmc
aas
xor
xchg
scas
sahf
hlt
push
push
cld
js
cmc
sub
cmp
ret
sbb
push
pushl
ficoml
ret
or
push
push
mov
popf
into
xchg
cmp
mov
call
jae
fnstcw
das
dec
insl
arpl
shrl
xchg
or
inc
or
ja
xchg
rcll
scas
cs
xor
sub
jg
dec
loop
xchg
jo
into
dec
dec
hlt
outsl
push
fldenv
movsl
sbb
out
pop
mov
push
mov
dec
xor
xchg
lret
xchg
fdivrs
jnp
and
sbb
iret
dec
fidivrl
adc
inc
popf
sbb
or
pop
cli
sbb
sub
inc
iret
clc
pop
dec
xchg
push
add
repnz
in
push
out
lock
cmpsb
cmc
loop
fwait
jbe
popf
sbb
stc
or
hlt
std
xchg
shll
mov
inc
push
xchg
mov
es
jmp
pop
aam
jns
scas
jno
or
enter
pop
popf
ljmp
lret
dec
arpl
xchg
stos
ret
lret
lds
rolb
jnp
push
ljmp
orb
mov
call
loop
in
std
push
add
pop
add
jmp
inc
insl
push
mov
int3
and
xchg
pop
jge
filds
rclb
mov
lcall
jecxz
push
mov
xor
inc
xor
jp
add
mov
das
push
mov
or
xor
sub
mov
ds
and
mov
mov
mov
jb
and
push
mov
xchg
fdivrl
lods
push
lahf
mov
cmp
jnp
sub
inc
xor
adc
xchg
addr16
cmp
cmp
imul
lahf
lods
mov
hlt
and
mov
adc
invd
fadds
xor
sti
into
fwait
inc
outsl
xchg
arpl
iret
mov
add
ret
hlt
ds
imul
cwtl
lcall
fimull
negl
insb
adc
sub
int3
push
adc
dec
inc
pop
int3
pop
mov
inc
xchg
subb
push
xchg
sbb
jne
ficomps
in
enter
leave
push
sub
insl
push
mov
fsubs
push
repz
mov
or
push
add
jle
insb
mov
insl
push
xchg
pop
enter
pushf
repz
xor
pop
xchg
push
mov
dec
xor
ljmp
xchg
xchg
pop
adcb
sub
lcall
mov
mov
bnd
out
hlt
aad
repnz
cmp
pop
lock
loop
add
or
mov
or
cmpsb
hlt
inc
mov
inc
jg
sub
popa
and
rcrb
push
fidivs
add
sub
inc
sti
jecxz
aad
data16
rcrb
in
add
fidivrl
xor
loop
cmp
or
pop
in
mov
fbstp
mov
dec
add
or
pop
mov
lods
fstpt
outsb
jne
xchg
mov
pop
sub
xchg
punpckhbw
add
js
push
hlt
xchg
jmp
gs
inc
mov
test
stc
dec
mov
mov
sub
clc
inc
pop
or
aam
sub
cmp
insl
pop
dec
dec
jo
cmp
rclb
cmpsb
adc
sub
addl
push
fcoml
and
inc
aaa
fbld
pop
sbb
scas
cmp
xchg
inc
aas
cmp
call
call
ror
cli
jg
jnp
push
mov
test
or
sub
add
mov
cmpsl
mov
stc
pop
xor
pusha
jl
mov
aad
into
push
rorb
rol
mov
add
xchg
call
movsl
sahf
lret
cmp
iret
sub
and
mov
movsl
test
mov
pushf
jno
repnz
add
cs
xchg
adc
fstl
mov
fwait
or
jno
hlt
div
enter
gs
lret
adc
fwait
pushf
int3
xchg
sbb
or
xchg
cmp
jp
les
add
push
dec
les
call
shll
mov
push
dec
fcoms
jmp
pop
repnz
cmpsl
dec
stc
push
das
sbb
push
into
fcoml
mov
icebp
and
movsb
ficomps
outsl
cs
sti
pop
push
insl
fs
roll
popa
pop
lahf
jne
aam
mov
inc
or
dec
movsb
cmp
xchg
cld
xor
inc
test
add
dec
cltd
mov
sbb
xor
imul
out
in
mov
adc
jbe
stos
jns
lock
inc
push
mov
jne
push
out
lods
addr16
push
les
stos
dec
inc
xor
dec
cltd
outsb
movsl
lds
dec
loope
mov
rol
test
ja
mov
cld
pop
rclb
pop
ret
lcall
loopne
inc
ret
and
dec
pop
pop
inc
repz
jl
push
add
mov
ljmp
xchg
lahf
call
rcrb
in
out
xor
fwait
roll
cmp
adc
push
add
scas
cmp
jbe
clc
rcrb
mov
xchg
cmpsl
idiv
push
andb
add
xchg
pop
aas
inc
in
inc
popa
outsb
fcmovb
sub
inc
shrl
cmp
ss
in
dec
ss
sub
fdivs
xchg
pop
fists
int
shlb
adc
or
jmp
sbb
push
mov
lret
in
test
cs
jle
aad
push
les
sub
or
js
add
out
adc
or
cwtl
insl
jmp
call
cs
dec
sbb
jns
sbb
fldcw
pop
ret
in
push
pop
jnp
sbb
fs
push
into
out
adc
popa
or
cmovge
cli
loopne
push
mov
push
fcoml
sbb
xor
jmp
dec
inc
shr
inc
ja
mov
dec
clc
inc
or
es
test
add
pop
or
testl
js
xchg
repnz
jnp
push
cmpsl
shlb
scas
jp
popf
shlb
enter
cmp
cld
in
cmp
aam
xor
aad
mov
in
adc
imul
xchg
imul
frstor
in
xchg
scas
pop
or
cli
jge
mov
pushf
inc
and
outsl
les
outsl
dec
cmpsl
enter
push
rorl
cmp
lds
xchg
stc
test
iret
mov
into
xlat
and
les
mov
dec
pop
sbb
out
popa
cwtl
sub
pusha
iret
je
xchg
inc
fucomi
jmp
pop
or
and
inc
dec
iret
inc
xchg
push
inc
dec
in
fiaddl
icebp
ret
pop
push
out
xchg
pop
pushf
test
sub
pop
xchg
cmpsl
adc
push
pop
adc
mov
cmpsb
scas
idivl
in
cmp
in
test
stos
cltd
dec
call
jnp
aaa
iret
enter
aas
cs
out
xchg
jae
mov
orb
cmp
sbb
ficomps
xor
sarl
mov
loope
inc
rcl
adc
xchg
icebp
jno
jg
dec
ds
call
outsb
or
lds
or
push
adc
xchg
fbstp
ljmp
repz
sub
icebp
popf
dec
and
add
sub
push
fadds
outsl
xorb
scas
sahf
rolb
xor
push
test
ret
decb
jg
insl
push
add
xor
aas
test
xor
sbbl
cli
inc
sub
or
sub
add
add
dec
cmpsl
shll
xchg
aad
cltd
or
mov
push
mov
loop
mov
out
cmp
xor
pop
xchg
cmp
movsb
cltd
stos
mov
arpl
mov
pop
mov
jae
addb
leave
out
rorl
and
jecxz
pop
or
addr16
lret
xor
outsl
lret
cltd
insb
cmp
inc
adcb
ss
jno
mov
loope
xor
sti
lods
and
fs
pushf
cmp
rorl
or
aas
xor
ja
movsl
push
inc
cs
push
nop
add
movups
push
sub
test
rorb
cmp
mov
inc
sbb
pop
outsl
mov
mov
xchg
mov
psubq
inc
daa
mov
inc
ja
jge
rorb
fisubl
lret
dec
jl
fmul
nop
jmp
inc
add
mov
mov
ss
hlt
mov
enter
test
lock
in
cmpsb
mov
mov
data16
cmc
mov
mov
or
ret
call
pop
test
dec
xchg
sub
bound
xchg
ss
inc
xor
subss
clc
insl
dec
pop
pop
shr
jg
subl
xchg
sbb
bound
push
cmpsb
sti
push
out
xchg
ss
loop
cmpb
add
shlb
lret
orl
ja
mov
xor
stos
aad
dec
sub
dec
mov
in
pop
mov
into
inc
mov
inc
fcoml
adc
pop
mov
ss
stc
mov
fdiv
lods
gs
out
into
sub
je
inc
mov
xor
rcl
loopne
cmpl
aad
call
lds
icebp
fisttpll
mov
mov
int
jp
ljmp
and
outsb
mov
or
mov
cmp
add
and
pusha
test
lds
stos
dec
sub
arpl
push
and
push
inc
fwait
inc
adc
insb
cld
jle
out
sub
xchg
mov
sbb
or
movswl
pusha
cltd
mov
cmp
hlt
and
add
sbb
fiaddl
ret
mov
mov
je
mov
sahf
ja
sarb
jbe
add
jo
xor
test
xorb
int
jbe
ret
add
mov
sti
daa
sbb
and
push
dec
sarb
inc
or
stos
pop
gs
pop
cmp
mov
aas
insl
mov
xchg
rclb
data16
dec
aas
and
push
pop
sub
out
scas
lds
iret
dec
xor
fidivrl
adc
push
fdivrl
add
pop
adc
and
stos
mov
push
jge
ss
sarb
cmp
addr16
lcall
movl
mov
stos
movsl
dec
push
repnz
xor
sbbl
loopne
pop
inc
scas
outsb
fisttpll
in
cmp
add
dec
jns
sti
lea
lea
jmp
test
xchg
icebp
loope
repnz
fbld
shrb
jno
lahf
aaa
xor
js
jl
sbb
iret
or
inc
jmp
jge
fstpt
jmp
andb
sbb
insb
nop
popf
xchg
scas
das
into
mov
and
aam
adc
cmp
push
jno
mov
test
lcall
es
out
inc
je
imul
xor
xchg
test
inc
push
xor
fisttpll
mov
add
lcall
outsl
shlb
stc
inc
xor
mov
ret
push
cmp
mov
jg
test
mov
pushf
xchg
popf
sbb
mov
cwtl
and
inc
add
cmp
pop
popf
cmp
mov
cmpsb
sahf
leave
mov
popf
lods
pop
popf
xchg
cltd
or
pop
jmp
rcrl
js
pop
xchg
daa
cmp
cmp
cwtl
aaa
jnp
mov
mov
push
psubw
jge
lahf
roll
loop
mov
data16
fs
pop
adc
push
or
pop
lods
cwtl
loop
xor
pop
dec
push
cmp
adc
jp
add
jb
pop
mov
and
inc
in
popf
pop
insb
loopne
push
mov
sbb
int
cwtl
out
add
ds
push
into
int3
add
jecxz
idiv
das
je
rcr
jp
outsb
jle
inc
push
leave
ds
and
adc
sub
fucomip
jl
bound
stos
pop
ret
out
popl
or
ljmp
xchg
test
cwtl
mov
addr16
idivb
cli
xchg
jle
ja
mov
jp
and
push
xchg
push
xchg
or
pop
and
inc
adc
pop
mov
fwait
pop
pop
jmp
mov
mov
pop
loopne
push
fbld
popf
sbbl
in
iret
jno
decl
inc
push
add
pop
xchg
stos
stc
or
mov
push
sub
and
mov
in
hlt
fldcw
xor
in
fs
cmp
pop
out
dec
xor
mov
enter
or
or
or
test
jmp
inc
push
mov
in
outsl
stos
xor
jb
test
or
hlt
add
pop
xchg
jb
lea
rcrb
cmp
xor
sub
adc
mov
imul
imull
pop
gs
lahf
jg
fwait
loope
lock
mov
dec
insb
sub
xor
dec
cmp
cwtl
mov
iret
movb
mov
movsl
repnz
test
lret
das
mov
add
xchg
sub
addl
leave
xor
pop
repnz
pop
stos
in
outsl
push
fsubl
sub
pop
lock
adcb
sub
sub
push
movsb
loop
adc
daa
and
mov
mov
lret
icebp
mov
add
leave
mov
out
sahf
xchg
jae
out
cmp
add
xorb
xchg
mov
sbb
cmp
pop
adc
pop
fdivs
arpl
daa
jbe
fildl
aas
aas
loop
cwtl
inc
test
add
and
loopne
ljmp
mov
aad
push
insl
js
loop
mov
mov
push
xor
xchg
mov
data16
mov
and
adc
mov
mov
xor
and
shrb
and
adc
lahf
sub
sti
push
or
pop
adc
mov
pop
scas
in
insl
adc
dec
fwait
call
pop
sub
mov
ss
push
aam
mov
lahf
rol
and
dec
push
jbe
jnp
pop
ljmp
scas
dec
aam
xchg
popa
sbb
mov
les
push
sar
mov
out
cld
and
cmp
inc
dec
sarl
test
std
mov
adc
arpl
fwait
jge
push
push
sbb
cmpsl
arpl
or
jge
insl
mov
lahf
insb
dec
rcrl
arpl
add
mov
stos
jb
insl
out
rorb
push
in
subb
mov
push
or
push
testb
inc
test
fadd
add
or
pop
sub
xchg
out
aas
add
les
mov
in
mov
push
sbb
inc
lds
xchg
pop
ss
add
imul
xor
dec
sbb
xchg
xorl
test
mov
outsb
dec
jb
loop
dec
aas
ja
or
enter
add
cmp
cmpsl
stos
hlt
inc
pusha
push
int
jne
push
out
xchg
sub
fnstenv
inc
push
inc
outsb
sbb
test
jne
mov
std
adc
mov
loope
out
and
mov
push
sbb
xchg
mov
mull
cmp
dec
cmp
ljmp
mov
jo
mov
add
xor
fs
jb
mov
bound
pop
mov
xchg
mov
subb
fidivs
dec
push
pop
or
jae
out
addr16
jne
inc
sbb
out
push
mov
jle
xchg
push
fisttpll
mov
push
rep
push
lds
push
ljmp
inc
test
int3
outsl
cs
mov
xchg
gs
sub
cltd
ja
sub
pusha
data16
scas
repnz
fdivr
mov
mov
dec
in
xchg
and
jne
xor
cmp
pop
mov
cmp
in
mov
sub
xor
pop
pop
cmp
cltd
xchg
push
dec
dec
mov
cmp
mov
lds
jmp
adc
add
xchg
shll
ret
inc
ss
xor
sbbb
out
lret
adc
dec
mov
pop
ja
xchg
push
mov
dec
add
cmp
mov
dec
daa
or
roll
xor
icebp
inc
add
lds
pop
sbb
rol
enter
in
icebp
jo
adc
cld
testb
jnp
sbb
clc
push
mov
xor
pop
ja
add
lret
mov
inc
pop
fwait
adc
dec
xchg
test
test
into
xchg
xchg
jb
or
movl
or
pushf
cmp
inc
push
push
pop
cld
sbb
xchg
cmp
adc
into
cmpsl
movsl
out
lret
pop
jns
je
arpl
mov
adc
fcmovu
es
ds
rcrb
lret
mov
clc
movsl
roll
mov
adc
lds
xor
sti
repz
inc
mov
iret
out
xor
hlt
and
popf
push
aaa
je
jg
sbb
dec
notb
pop
mov
int3
div
dec
push
dec
sarl
and
jle
ss
jae
push
jb
out
inc
rorl
or
xor
cwtl
pop
pop
shr
xchg
out
sbb
add
loope
popf
mov
mov
mov
sub
lds
in
mov
stos
pop
pushf
mov
mov
enter
dec
push
cmpsb
mov
outsb
test
es
mov
lret
cmp
cmpsb
roll
sbb
and
pop
pushw
lods
das
stos
pop
pushf
jp
or
in
push
jae
mov
ss
xor
cmp
adc
stos
lahf
loop
dec
movsl
call
xor
mov
and
sbbb
inc
jl
test
cmp
pop
jl
pusha
data16
loopne
sub
sbb
ret
cwtl
out
jne
xchg
mov
loope
mov
push
sub
pop
popf
cld
jb
stos
adc
mov
jbe
insb
sti
int3
iret
test
mov
push
iret
jns
jl
sbb
out
std
pop
std
aas
inc
inc
sub
jb
out
xor
cs
or
xchg
sti
pop
pop
pop
iret
iret
cwtl
sbb
scas
push
js
pop
ret
out
push
xlat
push
dec
jmp
int
into
sub
dec
outsb
rolb
pop
inc
popf
lret
inc
shrl
repnz
decb
aaa
fldenv
in
popa
fnstenv
inc
pop
nop
insb
lods
jmp
lret
add
leave
or
dec
jmp
sti
adc
test
out
cmp
pusha
clc
xchg
or
mov
aaa
lret
cwtl
push
or
dec
xchg
pop
aaa
movsb
test
dec
js
lcall
push
sbb
cmp
movsw
and
scas
dec
fstps
mov
lods
jno
in
sbb
clc
jge
les
pop
neg
nop
gs
std
sbb
lock
adc
pop
addr16
mov
ret
aam
mov
jle
adcb
and
daa
sub
mov
jno
mov
push
mov
push
pusha
popf
adc
cmp
test
in
sti
mov
or
lock
mov
jno
and
sahf
fs
cmc
fisttpll
or
das
mov
sahf
cmp
and
adc
das
jno
adc
fimull
inc
movl
jge
pop
pop
pop
xor
mov
and
jmp
pavgw
sub
fisttpll
jb
xchg
pop
leave
test
in
pop
pushf
and
xchg
daa
fcomi
jb
mov
xor
hlt
mov
mov
addr16
cmpsl
rcll
inc
jmp
jo
xor
shrl
sbbb
test
xchg
sbb
pop
int3
mov
adc
lds
enter
nop
jno
sahf
fstl
push
jp
mov
add
xor
pop
jmp
hlt
ret
scas
xor
int3
inc
jmp
jge
fwait
mov
xchg
loop
sbb
inc
cmpsl
sbb
mov
and
cltd
sub
insl
jmp
add
arpl
outsb
pop
out
test
in
jmp
fwait
add
je
es
fstpl
pop
jmp
sbb
sbb
call
jp
and
xchg
fildll
aas
int
imul
insl
leave
in
pop
pop
das
jb
lock
les
pop
test
dec
stc
xor
and
jbe
shll
dec
mov
dec
pop
icebp
mov
dec
and
bsf
cmpsl
and
inc
dec
adc
andl
inc
xchg
push
pop
pop
fwait
and
add
sub
imul
add
inc
mov
scas
cmp
movsl
or
mov
dec
outsl
sub
enter
xor
fsubs
xchg
push
mov
mov
testl
pop
in
mov
lods
hlt
lock
cwtl
add
or
and
popl
add
xchg
add
and
xor
ja
jg
sbb
inc
test
mov
push
sbb
pop
outsb
lods
sbb
fistps
shrl
outsl
sbb
cmp
es
scas
fdivrp
into
sti
int
sahf
enter
adc
push
cmp
iret
movsl
notb
and
sbb
push
push
push
movsb
jp
xchg
das
pop
jne
aam
pop
or
popa
gs
xor
lahf
aas
in
xchg
dec
scas
aad
dec
sbb
test
push
cwtl
dec
jl
int
inc
movsl
push
jo
cwtl
inc
arpl
sbb
or
mov
decl
bound
fistl
jno
push
sub
pop
mov
push
push
negb
add
inc
mov
sahf
hlt
sub
les
sbb
and
jl,pt
scas
lahf
sbb
xchg
ret
adcl
push
jle
push
mov
cltd
pop
stc
pop
mov
loop
mov
dec
push
cltd
test
outsl
and
repz
push
lret
or
mov
pop
aad
int3
adc
cld
mov
add
mov
mov
mov
pop
std
xchg
scas
add
pushf
daa
cmp
gs
idivl
fdivrs
sbb
cmp
ds
ss
aad
pusha
in
mov
repnz
imul
adc
adc
xchg
hlt
pop
arpl
mov
xor
mov
mov
cld
in
xlat
cld
adc
inc
int3
xchg
add
sbb
aam
outsl
mov
push
subb
dec
sbb
data16
adc
adc
ficoms
imul
dec
pusha
imul
cmp
ljmp
fwait
ds
jmp
in
int3
sub
jnp
mov
mov
push
cmp
enter
dec
mull
cmp
xor
mov
rolb
shlb
aas
push
out
jp
js
xchg
pop
mov
rcr
xor
xchg
popf
aaa
int
xor
les
fcom
lcall
mov
inc
mov
jmp
dec
enter
sbb
cltd
dec
clc
push
pop
inc
mov
imulb
mov
pop
cmpsl
dec
out
in
ds
cmp
aad
testl
insb
jmp
mov
pop
enter
xlat
rolb
dec
das
inc
inc
pusha
jae
popf
mov
xchg
in
jbe
xor
cwtl
mov
ljmp
xchg
ror
pushf
mov
sbb
xchg
xor
sar
or
add
fbld
push
add
repnz
sub
add
xchg
sub
iret
pop
adc
arpl
inc
sub
inc
cmpl
mov
scas
push
ja,pt
ja
aam
popa
out
ret
xor
cmp
rcl
aaa
push
adc
cmpsb
testb
add
push
xchg
gs
mov
cmp
inc
jo
lcall
int3
xchg
inc
fbstp
stc
jns
in
ljmp
dec
push
lods
outsl
mov
lret
int
and
push
xchg
mov
xchg
cmp
in
dec
pop
add
data16
xchg
xlat
push
dec
xor
mov
ficomps
dec
jge
scas
scas
das
or
repz
jno
lock
je
out
out
jg
pop
mov
sti
les
arpl
and
jns
insl
jae
push
jp
insb
push
fs
push
push
cmp
or
movsl
mov
int3
ljmp
hlt
cli
call
out
stc
testl
clts
sub
lea
loopne
mov
jp
aam
dec
out
push
jmp
and
jl
sub
cld
fwait
outsl
mov
sbb
fprem
outsl
inc
jg
xchg
fldt
sub
clc
mov
adc
mov
and
fwait
adc
cmp
adc
mov
sbb
or
sub
test
push
lret
imul
and
inc
lods
mov
stos
mov
inc
dec
call
test
ljmp
cmp
push
cmpsb
push
inc
int
cmc
sub
or
fwait
mov
sahf
mov
sahf
outsl
jb
ja
and
fcomps
sarl
adc
icebp
fists
pop
xchg
cmpsb
es
fldenv
and
stc
and
popa
dec
fldl
addr16
push
inc
scas
clc
cmpsb
pop
sub
push
mov
cmpb
in
mov
cltd
push
ret
arpl
lret
popa
les
nop
lahf
mov
mov
lock
pop
sti
test
jecxz
clc
enter
aaa
mov
xchg
jl
push
mov
sar
sti
adcb
and
cwtl
call
mov
loopne
push
pop
jno
icebp
lock
mov
es
push
xchg
sub
stos
iret
fucomi
xchg
gs
and
test
xchg
xchg
imulb
movsl
and
jbe
cmp
lea
adc
inc
in
cmp
dec
rorb
xor
or
test
sub
jp
pop
sbb
les
push
mov
fwait
ljmp
popa
jb
sbb
cmpsb
and
mov
mov
xor
aas
aas
ret
push
jecxz
pop
je
imul
or
sub
pusha
jb
mov
push
mov
or
jg
imul
xor
arpl
xor
mov
dec
pop
fldenv
pop
mov
rol
pop
daa
ficoml
mov
mov
movsb
push
mov
loopne
push
sbb
dec
cmp
aaa
fimull
iret
mov
jbe
xor
das
push
cmp
adc
icebp
lcall
or
or
xchg
inc
xor
xor
lock
push
or
jecxz
jae
arpl
aas
push
pushf
inc
mov
sbbb
push
aaa
dec
pop
mov
cmp
pushf
mov
flds
lret
nop
loope
cmpsl
into
cmp
cmp
sbb
or
adc
or
je
mov
lret
pushf
mov
push
sahf
fs
push
jae
mov
or
mov
rolb
inc
lret
jo
aam
sbbb
xchg
stos
and
xor
mov
sbb
inc
movsl
adc
and
insb
fistps
jo
icebp
push
mov
aad
aas
lret
ja
inc
pop
call
mov
adc
mov
mov
rcll
inc
push
and
push
adcl
mov
push
pop
add
insb
into
daa
mov
shrl
xchg
jns
pop
repz
pop
sub
je
cwtl
jg
in
shlb
jp
lock
insl
int
xor
push
fsubp
lock
mov
fsubs
push
mov
icebp
repnz
pushf
dec
and
imul
or
js
jecxz
xor
mov
cmp
sahf
or
lods
hlt
or
push
adc
repz
je
inc
ss
xor
ss
push
clc
sub
les
fsub
pop
shlb
cmpb
cmc
fiadds
pop
mov
push
inc
addl
xor
pop
xor
push
rol
and
loopne
inc
jae
or
sub
pop
lahf
adc
shlb
sub
shr
and
sub
push
in
push
loopne
xchg
push
es
loopne
dec
iret
dec
std
jecxz
pop
test
push
cmpsl
mov
sbb
mov
adc
out
lahf
dec
out
lea
xorb
stos
fwait
mov
inc
cmp
and
into
pop
jp
xchg
ficoms
xor
fisttpll
or
pop
push
clc
aas
xchg
push
sbb
pop
mov
jl
fs
clc
push
xchg
arpl
arpl
sbb
sti
mov
mov
jge
and
ret
xchg
call
sub
jecxz
test
add
sbb
mov
testb
xchg
insb
or
sub
inc
out
movsl
jmp
fwait
mov
pop
dec
xchg
jg
or
push
inc
mov
out
movsb
arpl
stos
movsl
push
lods
cmc
testl
xor
mov
mov
filds
inc
fcom
mull
pop
rclb
vshufps
fbld
mov
jo
mov
mov
int3
adc
add
cmc
xchg
or
rcr
jmp
xchg
addr16
mov
jo
sti
outsb
fs
mov
aad
ss
sub
lock
or
cmp
fs
loope
and
jb
movsl
daa
mov
jae
es
mov
or
pop
aaa
aad
add
test
cmp
jne
push
bound
jmp
push
fs
jb
adc
add
cmp
xchg
aaa
xchg
scas
mov
iret
push
int
shr
in
add
and
call
push
lret
ss
xchg
stos
call
cmpsl
imul
pop
daa
movsb
decb
or
xor
fsub
and
inc
or
and
jne
test
xor
inc
mov
push
lea
shrb
je
sti
xor
loope
imul
inc
sub
and
int
sbb
cmpsb
inc
fdivr
scas
adc
fwait
shlb
out
sti
cmc
lret
dec
add
fwait
jnp
rclb
mov
add
cmp
test
aas
mov
mov
mov
mov
or
jne
iret
fs
push
imul
popa
mov
mov
test
inc
or
mov
pop
inc
push
adc
add
xchg
fisttpll
std
sti
push
js
loopne
das
mov
mov
sub
jl
mov
xor
or
mov
repnz
mov
cmpsl
mov
mov
icebp
loop
aaa
mov
loop
xor
add
insl
add
add
add
je
out
mov
jns
adc
or
push
mov
aad
fs
mov
test
gs
jns
fwait
pop
pop
andl
dec
rcrl
mov
repnz
mov
inc
out
xor
les
mov
mov
stc
pop
xchg
or
push
ret
jo
or
aad
inc
xor
push
mov
pop
dec
lahf
sbb
lds
jns
adc
dec
xor
mov
cli
loope
bound
dec
pop
xchg
xchg
ja
enter
inc
sbb
mov
jb
lret
daa
cli
or
jmp
lea
testb
pop
or
rcll
repnz
incl
mov
and
sbb
lahf
scas
jmp
xor
xor
mov
mov
je
insl
mov
pop
in
lret
xchg
sbb
pop
push
xor
rorl
das
lock
lock
out
andb
js
cltd
pop
xor
cmp
scas
sbb
sbb
sub
mov
inc
cwtl
test
adcl
mov
ret
movsb
aam
push
inc
je
xor
mov
out
stos
inc
nop
and
rclb
test
sub
mov
fmull
shlb
js
std
imul
out
cmp
lret
call
out
sar
or
or
out
je
sbb
fmuls
xchg
pop
mov
mov
mov
ds
rorb
ja
movsl
sub
sbb
and
in
push
shrb
movsb
les
aas
mov
mov
cmp
aad
push
shl
loop
cmp
push
sbb
inc
dec
stc
xor
adc
add
and
xor
insl
ud0
lock
jmp
fidivrs
ret
push
push
popa
bound
cmp
mov
push
push
cltd
loopne
test
sbb
adc
mov
jno
je
sbb
scas
pop
test
cmp
jno
in
cmp
mov
sub
ljmp
pusha
test
aas
and
imul
stos
loopne
push
mov
xchg
subl
and
mov
jp
inc
enter
mov
add
lods
mov
mov
mov
fidivrl
in
jle
jp
mov
dec
or
jae
inc
add
out
ret
jp
add
fnsave
sub
lock
sub
lret
seta
addb
mov
mov
bound
push
and
adc
movsb
jle
cmp
jle
jmp
push
jg
test
inc
aad
adc
dec
aaa
mov
mov
adc
add
mov
jge
int3
mov
dec
pop
dec
sub
in
or
std
adc
leave
cli
jmp
mov
dec
add
jmp
cmpb
cwtl
scas
popa
in
sbb
dec
hlt
insl
add
outsl
bound
mov
pop
xchg
cld
pop
fsts
cltd
mov
add
cs
xchg
mov
mov
xor
mov
mov
fcomps
xor
lcall
xor
mov
mov
stos
mov
nop
sub
pusha
add
ja
cmp
fcmovnb
xchg
sbb
xchg
lock
add
mov
sub
ja
lods
adc
or
das
les
pop
push
and
mov
fldt
stos
dec
je
mov
or
bound
add
out
mov
int
mov
sbb
stos
sti
add
cwtl
sarl
xchg
xor
movsl
ret
pusha
mov
inc
add
lock
fxam
pop
iret
push
jne
cmp
pop
arpl
push
mov
test
out
add
jne,pt
lahf
pop
arpl
adc
repz
lret
jmp
mov
cli
push
cmp
test
sub
inc
xor
and
dec
shrb
pop
nop
xor
or
cmc
sub
leave
shlb
daa
xchg
pusha
xchg
jo
pop
jecxz
inc
test
jl
fists
inc
in
aad
cmp
dec
gs
jmp
sbb
fcmovne
and
cli
jno
mov
shrb
je
and
loopne
iret
jge
push
adc
gs
inc
mov
mov
lcall
xchg
mov
nop
cs
mov
cwtl
add
scas
xor
jo
push
shrl
inc
jmp
out
lret
fisubrs
pop
pop
popl
and
xchg
sub
call
leave
rcrl
orb
aas
pop
mov
lods
mov
imul
out
dec
add
mov
inc
sahf
mov
pop
fs
cmp
pop
sub
xchg
testl
jg
imul
sti
loop
pop
push
sbb
pop
and
add
mov
sti
push
adc
stc
scas
bound
cli
dec
add
jg
pop
cmpsl
std
push
pop
push
sbb
dec
jg
or
xchg
pop
les
mov
rclb
repnz
push
out
das
test
pavgw
into
cmp
push
mov
outsb
arpl
mov
jp
mov
shll
es
subb
inc
leave
inc
inc
aaa
adc
dec
daa
sbb
popa
and
push
aad
ret
jmp
add
or
pop
fldl
clc
jmp
mov
mov
cmp
mov
das
adc
inc
ret
cmp
lahf
or
and
jge
or
dec
cmp
sub
xor
cmpsl
loopne
xorb
add
dec
out
loop
je
jge
test
call
fisubrl
fwait
mov
jge
fisubl
mull
jae
test
in
into
int
jecxz
daa
push
push
xchg
loopne
mov
fs
push
and
lods
sti
mov
xchg
sub
addr16
pop
std
mov
sbb
fistl
shlb
repz
jecxz
xor
push
push
jecxz
mov
fwait
push
push
mov
adc
mov
push
pop
push
push
shll
ja
lods
xor
xchg
rclb
pop
out
leave
mov
inc
out
ret
cwtl
fprem1
addr16
nop
pop
mov
cli
push
int
sahf
inc
push
gs
out
cmc
rclb
cmpsb
fldl
lret
rcll
out
mov
enter
xchg
push
addr16
ds
inc
push
fstpl
dec
test
rep
lods
shrb
loop
xor
sub
repz
pushf
add
pop
jae
jl
jmp
adc
int
jp
in
mov
push
xor
jno
neg
repnz
mov
aam
es
cli
nop
les
pop
loop
pop
pop
out
xor
not
das
adc
fwait
adc
inc
lret
inc
aaa
mov
sbb
sbb
int3
jle
out
jnp
jge
jae
xchg
or
push
jo
aam
push
mov
jg
xor
xchg
ret
sbb
aas
sub
cmp
jecxz
cmp
movsl
cs
xor
or
int3
and
out
push
lcall
ret
int3
xchg
add
mov
into
dec
stc
and
jp
int
adc
cmpsl
pop
sub
in
mov
leave
sub
lahf
inc
cmp
add
mov
mov
mov
jo
mov
lcall
arpl
repnz
adc
mov
or
sbb
sbb
sti
std
mov
hlt
jo
xchg
es
out
push
daa
mov
mov
jmp
or
repz
xor
inc
clc
pushf
int
fistpl
loop
dec
dec
test
das
and
dec
add
jns
add
cli
int
push
lcall
pop
lret
mov
movsl
lds
adc
int
lock
test
je
daa
mov
mov
dec
mov
dec
cmpsl
jle
xor
or
jp
rcrl
mov
sbb
push
pop
mov
jbe
xchg
lret
adc
dec
pop
enter
mov
mov
jae
cmp
xlat
jmp
mull
in
mov
pusha
jno
scas
data16
subl
icebp
xchg
pop
or
dec
je
push
into
dec
and
pop
icebp
jge
popf
and
or
ficompl
xchg
test
lret
pop
ss
push
xchg
sub
shlb
popa
incl
pop
mov
into
adc
pop
data16
mov
and
std
jl
cmpsb
mov
jecxz
lock
adc
sbb
in
sahf
adcl
or
scas
sub
out
js
mov
add
sbb
std
movsb
repnz
cli
leave
sahf
xchg
pop
dec
pop
mov
rcl
jo
mov
ljmp
xorb
xor
bound
mov
lock
xor
mov
mov
xor
fldt
stos
shll
roll
or
jbe
cmc
add
adc
das
inc
stc
or
mov
lods
outsl
sahf
push
mov
cld
fldl
call
pop
dec
sahf
aad
mov
pop
out
or
bound
push
pop
das
lock
aad
fisubs
movsb
xor
pushf
lret
movsb
xchg
ljmp
xorb
fstps
shll
mov
cwtl
pop
or
dec
ss
sub
lds
xor
rcrl
xchg
pushf
sahf
pop
mov
push
jge
pushf
push
sbb
xor
arpl
cs
pop
aam
data16
mov
sahf
movsl
pushf
out
inc
pop
cs
cmp
add
mov
pop
out
mov
push
nop
loope
mov
push
mov
out
mov
add
repnz
and
cltd
addr16
repnz
lahf
pop
loop
sbb
lea
jg
xor
daa
jle
jecxz
inc
xchg
pop
test
pop
hlt
lock
test
jle
mov
push
jns
xorb
xchg
je
cmp
xchg
cmp
out
scas
jg
test
and
add
aam
and
inc
jg
xchg
jmp
shll
outsb
push
loopne
jg
ret
adc
add
jnp
push
inc
stos
push
jno
push
inc
jae
cwtl
aad
add
je
jne
inc
imul
mov
lcall
push
pop
outsb
inc
imul
xor
cmp
cmp
pop
mov
jmp
xchg
nop
lock
shl
lret
push
mov
popa
arpl
outsb
lods
shrl
aaa
sub
pop
mov
sti
iret
clc
popf
jno
sti
outsb
mov
stc
mov
pop
in
loope
pop
adc
addb
cmc
cwtl
sbb
call
daa
cmp
mov
adc
mov
add
fcompp
mov
cmpsb
insl
jae
test
xchg
xchg
and
and
sahf
push
and
xor
mov
inc
mov
mov
je
ret
add
imul
gs
aaa
pop
xchg
or
imul
mov
cmpsl
fwait
sub
shll
scas
lret
pop
lea
xlat
mov
sub
jg
inc
push
std
sbb
xor
push
daa
pop
lret
dec
fadds
fisttpll
dec
orb
sub
or
mov
push
dec
test
mov
xchg
pop
and
xor
outsb
jl
pusha
sbb
mov
xchg
cmpsb
push
das
into
add
sbb
pop
cmp
lret
out
xor
xchg
and
mov
push
out
rol
movsb
jmp
pop
loop
add
dec
in
dec
test
sbb
fisubrs
scas
fildll
mov
nop
mov
addr16
push
pusha
jg
pop
cmp
mov
dec
xchg
pop
dec
mov
rorb
stc
cmp
rolb
in
mov
jmp
ja
aad
push
mul
das
neg
dec
pop
stos
sub
test
scas
gs
test
xor
adc
mov
mov
and
mov
movb
add
and
fidivs
pop
iret
jl
mov
pop
mov
sahf
dec
sbb
cltd
mov
sbb
in
popf
sbb
leave
and
pop
in
adc
xor
jae
aam
xchg
inc
mov
ret
pop
test
jo
dec
mov
cld
inc
in
leave
andb
fisttps
call
and
and
stc
jns
test
and
shr
cmp
dec
dec
inc
ljmp
popf
xchg
adc
xor
mov
inc
shl
cwtl
rcl
test
cmp
cwtl
jge
adc
cmp
jmp
inc
fsub
mov
loop
out
pop
out
icebp
leave
mov
jno
pop
push
jl
cmp
xchg
push
fwait
xchg
inc
lods
mov
jl
les
out
and
sub
sbb
mov
aam
sahf
and
xchg
sbb
jmp
pop
push
cmc
dec
push
shll
in
adc
sub
pop
cmp
push
fwait
cmpsl
or
and
push
dec
pop
gs
shr
addr16
lret
dec
mov
sub
mov
jns
dec
mov
sub
xor
dec
roll
adc
push
add
mov
jle
or
add
cmpsl
jne
dec
jnp
lea
seto
popf
imul
lret
mov
sub
and
jle
push
outsl
fsubl
or
inc
jbe
cmp
push
lea
repnz
jno
lock
gs
mov
push
push
push
mov
pop
xor
sub
std
mov
es
imul
sub
inc
loopne
inc
test
sbb
sub
pop
sub
push
inc
hlt
in
pop
cmpsl
mov
ja
jg
jecxz
scas
lock
ret
jecxz
int3
cltd
call
lret
cmp
cmp
rcll
out
mov
sbb
cli
out
mov
inc
sub
lods
stc
xchg
sbb
std
mov
mov
sarb
aaa
movsl
loope
pushf
and
push
icebp
int3
out
push
rcrl
sti
daa
jb
jl
and
cmp
call
mov
cmp
pop
lds
pop
dec
pushl
sbb
aad
pop
dec
mov
inc
push
cmp
cmp
stos
jecxz
ljmp
xchg
sbb
out
nop
pop
push
sti
in
rolb
bound
jae
and
aaa
sub
ret
push
iret
and
test
stos
xchg
out
push
shll
and
jle
call
mov
cltd
inc
push
nop
aad
jmp
dec
mov
clc
inc
adc
pusha
sbb
inc
clc
daa
test
mov
pop
or
jo
pop
shll
adc
inc
adcb
xor
and
outsl
in
add
mov
nop
imull
neg
daa
sbbb
sbbb
scas
push
jno
inc
push
clc
mov
mov
or
add
xchg
lahf
and
or
jbe
xchg
sbb
fistpl
pushf
push
enter
ret
mov
orb
adc
rclb
push
jl
or
xor
xor
dec
push
dec
mov
mov
push
enter
inc
jns
mov
adc
push
rep
lret
mov
mov
dec
imul
or
filds
stos
ljmp
negb
sahf
ret
fsts
rcrl
xlat
insb
mov
mov
repnz
aad
leave
add
jno
sbb
push
out
push
fidivl
cmpsl
adc
ffree
pusha
jge
frstor
and
out
flds
sbb
pop
xor
and
addb
or
data16
mov
and
outsb
xor
pop
arpl
sbb
inc
cs
jae
fs
mov
push
in
loop
dec
xchg
int
rorl
loop
outsl
pop
inc
mov
and
lock
leave
xchg
adc
imul
ja
jo
cwtl
imul
mov
iret
pop
push
je
lea
rcr
shr
inc
cmp
insb
aad
add
inc
lods
outsl
or
sub
sub
sbb
fs
ds
mov
repnz
data16
xchg
push
push
dec
adc
call
or
cmc
push
flds
or
out
shrl
pop
mov
pop
iret
inc
sub
test
inc
loop
fsubrs
push
int
mov
and
or
and
iret
add
gs
or
mov
addl
ret
aad
lods
or
rolb
push
loopne
test
dec
push
test
js
jmp
lods
dec
rorb
dec
mov
outsl
shlb
sahf
cli
xor
or
std
jnp
call
lret
pushf
dec
xchg
popl
dec
push
adc
mov
dec
loope
pop
xchg
cwtl
mov
xchg
in
push
sbb
test
push
fsubr
in
daa
lret
hlt
movsb
stos
sub
fwait
cltd
mov
repz
cld
loope
fwait
leave
divps
gs
lcall
stc
or
adc
repz
xlat
imul
add
enter
push
jbe
sbb
loop
js
js
xchg
xor
or
pop
clc
frstor
fidivrl
mov
sub
jo
leave
in
sub
mov
add
loopne
mov
addl
inc
jmp
lods
mov
dec
mov
test
jmp
inc
xchg
lock
push
inc
into
or
cmp
je
jle
imul
test
push
enter
fcoms
dec
imul
test
jno
jg
je
test
xchg
aas
mov
es
icebp
inc
bound
popa
sbb
adc
cwtl
stos
push
int
inc
sti
xchg
pusha
ja
mov
popl
ljmp
lret
jmp
add
jecxz
call
push
cmp
pop
xchg
add
dec
bnd
rcrl
dec
and
or
mov
cld
mov
int
shr
or
repnz
dec
jmp
rcrb
out
mov
inc
outsb
push
jne
in
mov
sbb
fidivl
fs
inc
sahf
loop
outsl
mov
push
sub
sub
xchg
mov
data16
sub
adc
test
insl
pop
pop
out
lahf
enter
xchg
jl
in
add
pop
repnz
add
incb
out
xor
loopne
push
cmp
inc
inc
jne
add
sub
inc
pop
movsl
and
sbb
cmc
icebp
inc
sar
and
into
sub
sub
mov
jb
mov
mov
lahf
lret
and
fsubrl
lcall
fchs
shll
enter
cltd
add
adc
addr16
jl
aaa
cmp
adc
and
les
in
arpl
lods
arpl
out
adcl
pop
test
js
ds
adc
mov
outsl
inc
adc
aad
cmp
dec
repnz
xor
mov
sbb
clc
stc
shll
mov
inc
and
dec
leave
imul
inc
xor
je
mov
jb
in
cwtl
mov
movsb
add
pop
movsb
mov
mov
pusha
xchg
xor
clc
jge
pmaxub
dec
mov
pop
sbb
jno
adc
stc
jg
hlt
push
ret
test
xor
and
inc
imul
adc
add
stos
mov
mov
out
les
mov
cmc
xchg
loopne
or
pop
loope
lcall
jecxz
mov
sbb
push
dec
cmpl
jno
lret
out
mov
js
addr16
in
jp
fcomi
bound
je,pn
adc
jno
mov
jno
push
das
cmp
mov
arpl
test
push
clc
scas
loop
mov
pop
mov
xchg
testb
aam
mov
lds
fists
je
jno
movq
es
adc
cmp
push
std
pop
mov
jl
lahf
cmp
sbb
test
leave
daa
in
cmp
jl
jle
cmpb
jmp
daa
pusha
xor
movsl
sbb
sbb
repz
jle
xchg
xchg
mov
scas
jne
int3
loope
loop
enter
sub
fistpl
pop
es
xor
dec
ret
es
hlt
js
push
xor
sbb
cs
or
mov
adc
sub
in
cmc
fbstp
stc
arpl
hlt
not
jne
test
lcall
jg
mov
xchg
mov
jecxz
sub
aad
and
push
adc
sbb
pop
cs
xlat
aaa
or
mov
addr16
adc
xlat
mov
fldenv
out
dec
sub
sbb
gs
lret
jae
and
test
push
popf
xchg
add
scas
or
inc
push
adcl
lahf
lea
pop
ret
push
mov
in
and
xchg
push
cli
jle
mov
lds
test
lahf
add
jg
cli
cmp
bound
in
rclb
aas
or
add
xlat
dec
or
arpl
not
rcrb
mov
cld
arpl
incl
push
lock
push
and
add
int3
pop
add
mov
push
xchg
adc
mov
jae
add
je
scas
jnp
js
mov
add
and
jmp
daa
lods
dec
mov
mov
mov
loopne
and
out
sub
mov
adc
sub
jbe
mov
cwtl
repnz
das
fistl
mov
hlt
sbb
inc
mov
mov
outsb
push
push
mov
or
lea
rcrl
out
xchg
push
xchg
fisubl
inc
mov
add
dec
xchg
shrb
lods
scas
dec
jb
or
push
mov
sub
fistpll
sub
enter
sbb
xchg
into
addl
push
mov
aad
push
lods
push
xchg
mov
dec
iret
add
mov
int
jg
add
scas
sub
sbb
rcrb
aam
rclb
sub
xchg
mov
sub
dec
testb
add
test
and
nop
es
int
jmp
orb
aas
sbb
jge
or
sbb
rcl
sarl
pop
adc
mov
sbb
or
mov
cs
push
pop
imul
inc
addr16
nop
mov
jb
mov
stos
clc
mov
mov
out
rorb
inc
jbe
and
insl
sub
xor
xchg
fmull
xor
gs
mov
imul
pop
or
cmp
sub
dec
shlb
pop
mov
mov
inc
jno
addl
mov
add
push
mov
or
mov
mull
iret
pusha
shl
sub
mov
stos
lahf
mov
into
std
push
mov
out
das
inc
jns
xor
push
push
repnz
cwtl
mov
or
cli
in
fidivrs
cmpsb
push
cli
mov
subl
add
pop
lret
clc
pop
or
mov
cmpsl
jns
push
pop
pop
pushf
or
dec
cmpsl
pop
aas
hlt
mov
mov
push
pop
jp
rol
movsl
sub
repnz
or
dec
aas
mov
jge
mov
mov
dec
bswap
fistps
adc
mov
mov
jge
push
xchg
mov
jmp
insl
mov
sub
loopne
fs
mov
lods
dec
mov
xor
aam
fcompp
xchg
shlb
cli
jne
mov
ficoms
inc
and
jmp
mov
rcrb
ret
adc
imul
push
sub
push
add
cmpb
in
addl
dec
xor
pop
enter
pop
movsl
pop
push
xor
jecxz
jp
jne
test
xor
inc
sarb
xor
mov
outsb
mov
fistpll
shrb
repnz
cmp
fsubp
sub
ljmp
add
pop
sbb
adc
stc
pop
xchg
ds
pop
into
adc
push
das
jae
and
mov
sahf
mov
and
lds
or
pop
outsl
rcr
adc
movsl
push
sub
outsl
push
jp
jle
scas
jbe
pop
push
cwtl
xchg
roll
ret
inc
scas
push
pop
jne
out
std
xor
pop
mov
add
sbb
cmp
sarl
call
mov
test
ljmp
cli
and
rcrb
adc
fsub
das
cmp
enter
push
pop
sbb
inc
mov
dec
sbb
std
pushf
int
xor
sbb
test
fs
or
fnstcw
sarb
add
and
mov
aas
pop
push
sub
dec
lret
adcb
inc
scas
xor
imul
sbb
jl
push
push
xor
in
test
imul
xor
negb
jp
loope
pop
inc
push
das
add
loop
and
adcl
fidivrs
push
test
test
jnp
cmpb
mov
mov
ds
pcmpgtb
hlt
add
sbb
sahf
sub
xchg
sub
jmp
mov
dec
ret
in
jns
jo
out
push
arpl
popf
arpl
add
xchg
into
adc
xchg
repnz
lods
test
mov
sub
scas
test
jo
add
lcall
fstpt
and
add
dec
int3
push
pop
cmp
sub
lcall
pop
fsin
pusha
mov
cld
push
in
test
push
and
push
sub
lods
cmp
jmp
arpl
in
mov
fcoms
pop
rclb
cmp
loopne
mov
ret
es
adc
ss
push
dec
mov
repz
adc
loop
ret
lea
push
xchg
jne
sub
inc
push
lret
pop
or
icebp
aas
addr16
xchg
mov
lods
xchg
xlat
xchg
imul
cmpsb
inc
inc
pop
rorl
mov
adc
enter
outsb
add
sbb
pop
cmp
jge
stc
lods
mov
lahf
jl
fbld
data16
aas
cwtl
scas
xchg
test
repnz
not
and
fisttpl
jge
mov
loop
ret
es
mov
jae
outsb
mov
pop
out
cmp
xor
jo
and
dec
vhsubps
aam
jge
mov
lahf
imull
dec
dec
pop
jmp
and
and
imul
jmp
ljmp
stos
sub
add
xor
inc
loopne,pt
mov
addl
add
sbb
call
rcrb
jp
loop
mov
sbb
out
sub
sub
pop
or
inc
add
and
ss
dec
cmp
adc
pop
ja
test
jp
add
test
cmc
fwait
cmp
sub
lock
push
mov
sbb
ret
and
sub
ret
repz
outsl
cmp
dec
or
jae
push
jmp
pop
mov
cmp
nop
push
out
jns
xor
daa
adc
fstps
add
xchg
es
enter
sar
xlat
sub
aam
cmp
cs
inc
andl
aad
ja
les
jecxz
sbb
mov
mov
in
cmp
mov
xlat
bound
int3
and
outsl
nop
ja
mov
dec
mov
repz
push
lahf
cs
out
inc
push
add
push
pop
and
add
jle
xlat
push
cmp
out
or
xchg
xor
sub
pop
or
clc
lods
adc
jmp
frstor
out
or
pop
xor
mov
cmp
jno
dec
inc
out
xchg
pop
in
push
jmp
push
stos
and
sub
xchg
js
pop
sti
or
repz
nop
xor
in
xor
stc
movsb
dec
dec
in
out
inc
add
pop
iret
xor
jbe
sub
mov
or
sbb
jnp
mov
jns
jl
jle
sahf
dec
inc
ret
cmp
mov
dec
mul
add
in
ficomps
fwait
loop
lods
push
pop
je
stos
in
out
mov
out
mov
jg
rcll
and
xor
xor
jp
ja
and
in
fdivl
inc
inc
fidivl
fistps
jae
inc
cld
aam
jecxz
pop
cmp
sbb
mov
lcall
add
cmc
inc
stos
aas
std
sub
ja
cmpsl
sub
mov
sub
adc
test
inc
rcrl
mov
mov
xchg
push
jnp
int
test
pop
add
cmp
sar
cmp
add
lea
sarb
enter
pop
fadd
xor
push
xor
js
out
mov
mov
out
je
fistps
xor
lock
test
in
jno
call
ficomps
out
dec
movl
adcb
cli
sub
imul
lods
jno
ja
adcl
sub
push
xor
ss
mov
shrl
sub
push
mov
or
jp
imul
ja
jmp
dec
cmp
lret
jg
sbb
mov
ja
cmpsb
push
mov
aad
mov
loope
inc
and
sahf
sub
pop
inc
add
adc
add
fistpl
mov
leave
testl
movsb
repnz
mov
dec
mov
push
pop
push
jnp
pop
into
mov
aam
in
dec
inc
ljmp
ljmp
or
xchg
and
daa
jle
and
mov
sarb
loopne
imul
aad
in
movsb
stos
pushf
dec
adc
sbbl
sub
push
jge
add
in
cmpsl
lds
inc
into
popa
insb
dec
cmp
je
std
je
testb
cmpsl
loop
cwtl
pop
mov
pop
sub
popa
in
in
xchg
pop
les
inc
sub
inc
gs
imul
mov
jbe
add
jle
sbb
add
jg
daa
cmp
negb
shl
jno
repnz
jb
or
ret
in
push
or
inc
mov
mov
push
inc
cmpl
lahf
outsl
push
mov
sti
scas
loopne
cltd
jmp
repz
cmp
sub
mov
xchg
test
fldt
push
mov
xor
outsl
jmp
adc
fs
add
xchg
scas
pop
push
pop
fidivrl
adc
fwait
xor
movsb
mov
int
int
pop
mov
jmp
enter
adc
mov
movsl
rorb
pop
mov
mov
loop
lret
rcrl
mov
jne
mov
test
ds
aaa
sbb
std
mov
sub
aas
test
loop
mov
pop
enter
mov
mov
cmp
fistpll
lahf
or
adc
mov
jne
stos
pop
pop
cli
mov
int3
pusha
adcb
inc
test
sbb
clc
adc
notl
insb
inc
mov
ret
mov
shlb
dec
ret
adc
fnstenv
sub
sub
out
ds
movsb
mov
stos
sbb
lods
cwtl
pop
mov
mov
aas
lahf
ret
into
mov
cltd
xchg
iret
pop
stos
lods
pusha
add
cmp
jnp
outsl
pop
mov
push
mov
enter
ss
popf
adc
dec
xor
loope
mov
or
cwtl
sbb
inc
xor
cmpsl
add
mov
jo
scas
negl
addr16
roll
mov
pop
mov
jp
pop
in
sbb
xchg
gs
dec
cli
or
dec
out
maxps
or
stc
push
cmp
sub
in
add
imul
and
dec
dec
aad
dec
mov
push
inc
js
cld
xchg
iret
sahf
sarb
movsl
push
mov
mov
data16
jo
cmc
imul
push
pusha
decl
xchg
enter
mov
unpcklps
out
sbb
push
test
xor
fsubrl
or
jo
mov
push
clc
xor
jp
inc
scas
cmp
dec
mov
scas
stos
rcr
xchg
mov
push
pusha
arpl
or
notl
sub
bound
jne
sub
aaa
cmpsb
outsb
sarb
xor
test
repnz
inc
inc
in
les
jle
and
push
cmp
daa
test
daa
jae
call
pusha
sarb
movsl
aad
test
insl
push
mov
lcall
std
jecxz
pop
xchg
jp
add
bound
mov
push
pop
adc
ja
lds
mov
sbb
mov
imul
mov
adc
inc
pop
adc
pop
jp
popf
ljmp
add
jecxz
movsb
and
inc
int
or
jb
std
push
xor
neg
lcall
or
arpl
mov
sbb
dec
cmp
xchg
pop
pop
xor
mov
arpl
pop
dec
push
outsl
lods
mov
add
lods
daa
scas
jmp
or
cmp
test
jl
mov
cmp
stos
and
or
pop
enter
aas
stos
jmp
mov
sbb
sti
shl
push
mov
mov
sti
mov
pop
aaa
dec
inc
cmp
mull
xchg
mov
in
cmp
lods
push
loop
jmp
adc
mov
jg
scas
inc
pop
mov
les
mov
ja
push
xchg
and
pop
inc
sub
and
xchg
test
and
sarl
sub
movsb
lret
mov
sub
or
outsl
dec
dec
xlat
fiadds
xchg
dec
sub
leave
sahf
clc
jo
int3
xchg
jmp
xchg
insl
in
cs
or
ja
adc
shrb
pushf
movsl
cmp
inc
sbb
test
loop
sahf
adc
cltd
lock
sbb
mov
add
pushf
mov
cmp
flds
cmpb
and
add
ret
mov
loop
cmp
mov
push
in
nop
jg
aam
clc
xor
cmc
pop
xchg
jp
in
add
jge
sar
in
leave
adc
push
mov
jbe
mov
or
inc
dec
ds
pop
dec
sbb
jno
repnz
imul
jg
es
sbb
ja
sbb
mov
ficomps
cmp
out
outsl
mov
xor
ret
cltd
adc
inc
jl
inc
pop
push
ss
dec
mov
xor
push
pop
jge
testl
jne
mov
pcmpeqw
push
xchg
adc
lahf
inc
test
into
mov
xor
jae
lea
push
fidivl
push
push
hlt
add
mov
xchg
in
int
cmp
lret
ds
mov
int
mov
mov
jne,pn
ret
pop
mov
mov
gs
pop
insb
push
cmp
sub
and
sbb
addr16
out
add
repz
int3
mov
ret
cmc
testl
pop
stos
mov
fdiv
enter
inc
inc
xor
jp
sbb
pusha
adc
loope
icebp
aaa
test
mov
mov
xor
data16
cmpsb
addr16
call
jne
jp
in
sbb
fidivrs
sbb
cmp
int
cld
ror
pop
repz
or
adc
bound
xchg
dec
add
aaa
jmp
dec
push
lock
ljmp
mov
push
adc
shrb
sub
xchg
push
push
cli
inc
cli
dec
jns
test
xor
dec
popl
xchg
mov
mov
xor
mov
jp
fnstsw
outsb
adc
cmp
daa
mov
add
mov
push
xchg
aad
icebp
lods
mov
and
out
xchg
lcall
gs
outsl
imul
add
arpl
jle
js
ljmp
or
adc
test
sahf
jo
jg
cmp
dec
in
add
and
mov
mov
bound
dec
aas
add
addr16
outsb
pop
pusha
testb
adc
rcrb
fwait
pop
mov
movsl
cli
pusha
xchg
nop
inc
mov
pop
mov
int
dec
mov
movsb
xor
jne
sub
cld
popa
loope
aad
add
aam
stos
or
xor
and
call
jge
fimuls
jne
xor
mov
adc
adc
jb
adc
or
dec
lret
test
in
aad
adc
mov
fs
push
jne
stc
sub
lcall
out
or
sbb
mov
push
clc
jecxz
and
dec
or
cwtl
popa
push
dec
hlt
dec
test
adc
sbbb
mov
jne
and
xchg
jae,pn
iret
imul
adc
add
ret
clc
adc
pop
iret
lods
or
imul
loopne
mov
inc
xchg
idivb
mov
popa
divb
mov
fldcw
shll
xchg
pop
sarl
punpcklwd
sub
test
ds
add
rcll
pusha
leave
mov
loop
bound
mov
hlt
jecxz
lret
lret
aaa
imul
lret
stc
jnp
les
pop
ljmp
inc
andl
test
js
mov
sbb
and
loop
ljmp
xchg
test
cmp
pushf
shrb
add
or
daa
fstps
insb
mov
dec
pop
sbb
sarb
adc
ljmp
test
xchg
mov
sub
arpl
push
mov
adc
imul
lahf
shll
push
lret
dec
addb
jbe
test
add
rcll
adc
aaa
std
rolb
rcrb
lahf
pop
test
sar
test
mov
xchg
jmp
inc
fnstenv
ds
cmp
out
repz
adc
push
movsl
test
test
mov
adc
pusha
add
pop
pop
les
ret
push
je
xor
dec
lods
xor
fists
leave
idivl
sub
or
arpl
data16
jg
pop
fwait
call
test
pop
loop
iret
mov
push
cmp
sub
xlat
sbb
push
push
and
mov
and
addr16
sub
cmp
lods
loopne
outsl
pop
outsb
in
and
pop
cld
and
push
cmp
and
lock
and
aas
sbb
into
notl
les
movsl
fmull
repz
mov
lahf
insl
sti
push
cmpsl
inc
testl
jmp
sub
test
push
mov
push
rcl
inc
repnz
cmp
add
sbb
shll
jb
jne
pop
xor
push
test
mov
mov
xchg
add
idivl
lcall
pop
popa
loopne
nop
xchg
subb
lds
pop
adc
out
cmp
arpl
lcall
repnz
add
decl
std
xchg
inc
inc
int3
add
in
mov
jg
nop
aam
pop
inc
imul
icebp
decb
filds
repz
jmp
loop
sbb
push
mov
cmp
loope
pop
pop
outsl
xchg
xchg
nop
xor
in
insb
ss
and
shrb
stc
inc
cmpsb
mov
or
fsubp
push
shrb
push
fistps
es
call
mov
add
mov
in
mov
mov
push
push
ret
mov
mov
je
int
mov
mov
repnz
gs
js
xor
aaa
cmpsl
dec
push
sahf
out
fs
pushf
rclb
mov
inc
push
dec
and
jne
fwait
dec
xchg
lahf
test
cmp
adc
test
mov
out
and
scas
xchg
mov
mov
mov
lds
leave
cmc
aas
xor
mov
pop
and
loop
adcl
sbb
jns
xchg
lds
pop
cmp
sbb
and
add
inc
add
mov
into
add
sub
test
sub
fninit
push
int
rorl
pop
sub
pop
mov
lahf
rcrl
imul
mov
xchg
xchg
into
fnstcw
jbe
mov
adc
xchg
fucomi
sarb
pop
inc
mov
mov
sarb
popa
fs
scas
ljmp
mov
adc
jle
adc
popa
bound
icebp
dec
lcall
pop
mov
rorb
insl
cmpsl
fnstenv
ficoms
xchg
mov
add
mov
jnp
xchg
sub
hlt
inc
jp
je
sbb
and
mov
fcomp
inc
pop
or
fisttps
int3
movsl
cmp
push
cmp
loop
mov
push
imul
inc
fnstenv
mov
int
sbb
aad
sbbb
push
js
adc
push
xchg
sbb
pop
fldl
sbb
or
or
lret
pop
add
sbb
icebp
jae
mov
jg
jle
add
push
cmp
scas
xchg
pop
inc
adc
andl
in
pop
xor
gs
aam
push
out
or
mov
sub
cmp
pop
mov
mov
push
fs
fimuls
sarb
or
xor
mov
loopne
sbb
mov
add
cmp
jo
mull
cmpsl
adc
lcall
xchg
xor
jecxz
xchg
sbb
adc
sbb
daa
inc
movsb
mov
in
jb
push
xor
or
loopne
cmp
dec
movsl
nop
cmpsl
add
fstpl
fcomip
mov
lock
mov
adc
cmp
aam
inc
movsl
fbld
pushw
adc
xor
mov
jle
adc
int3
popl
mov
scas
test
lea
jecxz
push
xchg
loope
imul
add
ja
or
je
adc
js
sbb
into
int3
mov
stc
movsl
enter
cli
je
insl
fstpl
in
lcall
dec
fucomi
test
pop
sbb
mov
loopne
inc
scas
dec
aas
cltd
mov
inc
inc
sbb
inc
add
mov
test
adc
inc
mov
rcrl
ds
dec
inc
xor
mov
push
dec
xor
inc
cmpsb
insl
cltd
push
pop
sahf
push
and
iret
sbb
mov
neg
repnz
pop
rcl
add
inc
mov
push
dec
test
jl
mov
test
sarl
mov
xor
cmpb
jnp
out
test
data16
push
pop
daa
dec
push
out
addr16
sub
cld
lahf
and
xchg
popa
iret
bound
jns
fstl
imul
adc
pusha
inc
rorl
lods
addr16
insl
loop
or
stos
mov
and
pop
jge
xor
in
aas
adc
jne
sub
cmp
divb
add
push
ret
gs
inc
dec
test
dec
outsl
inc
nop
push
lea
push
add
xor
out
dec
pop
cmp
movsb
jmp
fstpt
mov
test
xor
and
cmp
rolb
fsubp
out
lds
je
fisubs
repnz
xor
pop
outsl
inc
xchg
or
out
nop
mov
xchg
xor
stos
jp
xor
pop
mov
loopne
setno
adcb
aam
mov
int3
enter
fists
jae
fs
or
ret
cli
adc
in
sti
sub
addr16
cwtl
cmp
aas
inc
loope
pusha
movsb
icebp
cmpsb
out
mov
lods
jl
add
gs
sbb
pop
pop
sbb
lds
cwtl
pusha
lods
mov
lahf
mov
loopne
fidivl
test
ret
cmp
push
pusha
pushf
mov
gs
push
fs
push
push
xchg
mov
out
mov
dec
dec
sub
and
pop
add
dec
loopne
test
nop
fucomp
data16
jge
inc
mov
add
movsl
pop
mov
dec
mov
and
insl
xchg
movsb
out
pop
mov
cmp
testl
and
incb
cltd
fs
sub
sub
pop
add
data16
adcb
cmp
test
aaa
dec
or
dec
mov
adc
sbb
lock
aaa
loopne
maxps
sub
inc
shll
cmpsb
add
data16
add
lret
push
pusha
bound
mov
data16
daa
xor
inc
test
jmp
jne
push
sub
out
cmc
fcoms
push
dec
dec
dec
in
es
xchg
and
inc
sbb
push
pop
jbe
iret
fdivp
and
add
clc
mov
mov
mov
cwtl
jle
lods
xor
fidivl
test
imul
scas
out
inc
dec
fstl
push
mov
xlat
mov
cwtl
int
mov
mov
bound
icebp
push
outsb
out
outsb
dec
loop
loopne
sbb
jmp
push
jl
call
dec
cmpsb
pop
or
push
insl
pop
and
mov
outsb
in
mov
jle
push
das
dec
es
imull
fdiv
jge
cmc
mov
pushf
sbb
arpl
call
ret
movsb
movsl
cli
mov
fimuls
sub
repz
fildl
inc
mov
test
xor
into
xchg
movsl
and
jmp
or
je
add
fnsave
cltd
dec
sub
add
cltd
mul
add
fnsave
hlt
out
mulb
sbb
mov
repnz
mov
movsb
push
xchg
cmp
xchg
xor
xchg
fucomip
addr16
rorl
aad
mov
lods
aas
outsl
mov
outsl
mov
loope
dec
lahf
iret
sbb
or
sbb
dec
das
enter
out
ljmp
std
jmp
subb
rcrl
subl
and
cmp
js
out
shlb
stos
sti
inc
push
push
mov
mov
in
fmuls
rcr
sbb
dec
xor
adc
mov
pop
addr16
mov
nop
sub
sarb
push
ljmp
insb
ljmpw
xchg
mov
sahf
movsb
enter
cmp
insb
pop
cmc
push
into
ret
loop
mov
ret
fiadds
jb
sub
daa
das
js
inc
aam
adc
test
js
cmp
aam
fs
mov
lock
aad
inc
pop
scas
mov
sub
cmpsl
jle
and
scas
js
cmp
sub
mov
lea
jns
dec
push
sbb
jp
jecxz
or
jle
or
lahf
das
jle
jmp
sbb
cmp
adc
cltd
pusha
adc
shl
mov
or
inc
cmp
ud2
mov
adc
push
add
or
fists
mov
mov
mov
into
add
pop
fdivrs
gs
lods
jp
add
mov
or
mov
movsb
lret
jno
pop
dec
jns
in
popa
jnp
icebp
fidivs
mov
inc
fs
sbb
jnp
or
subl
push
push
repz
es
push
xchg
mov
out
aas
fdivs
lock
jl
shrl
adc
mov
and
add
push
test
jmp
stc
fscale
mov
popa
push
enter
fiadds
mov
fistpl
es
loopne
cmp
push
into
mov
cmp
or
or
bound
push
mov
sub
int
mov
mov
pop
jnp
pop
xchg
add
ret
rcl
les
jno
inc
xor
sbb
push
dec
fimull
inc
sarb
cmp
sbb
dec
xchg
ss
mov
jbe
sbb
nop
push
loop
iret
mov
mov
insl
jle
cld
push
shll
lock
pop
pop
cltd
pop
xchg
jb
rol
push
es
das
push
sbb
jle
out
sarb
cmp
and
dec
lcall
push
and
daa
out
pushf
icebp
adcb
loope
lods
inc
adc
xchg
mov
data16
rorb
outsl
lret
mov
xchg
xchg
fisttpl
andb
dec
decb
sbb
pop
mov
push
daa
dec
addr16
push
orb
pop
fbstp
mov
jns
mov
cmp
sub
out
mov
adc
popl
cmpsl
cs
sete
mov
mov
inc
ret
sbb
cli
enter
ret
fbstp
ja
push
aam
mov
adc
lret
or
inc
fs
fmul
fists
int3
mov
cmpsb
lret
dec
imul
adc
adc
mov
cmp
mov
mov
pop
xorl
aas
mov
notb
loopne
mov
add
shl
adc
mov
es
loope
out
inc
pushf
sub
clc
popf
int3
vprotw
lret
sbb
inc
xor
add
add
scas
pop
fs
xor
insl
int3
shll
repnz
ret
sbb
add
push
leave
adc
mov
rclb
dec
xchg
stos
push
sub
lock
xchg
dec
test
cltd
sbb
add
out
jnp
xchg
outsb
in
andb
cli
lock
xor
add
jmp
lret
mov
test
adc
es
adc
jle
sahf
or
dec
int
scas
mov
dec
cmpsl
sub
ds
mov
in
lea
cmp
loopne
fldl
add
ljmp
insb
sub
pop
jge
adc
push
and
jecxz
int3
pop
add
pop
mov
fisttpll
xchg
sub
jnp
pushl
bound
push
push
adc
aad
inc
loope
mov
and
daa
jp
gs
mov
pop
mov
pop
jmp
pop
imul
xor
cwtl
jmp
push
dec
or
lahf
std
stc
mov
cltd
movsl
xor
addl
jmp
adc
mov
adc
inc
mov
mov
adc
insb
rolb
cwtl
mov
fcomi
daa
cmp
jb
sub
inc
sub
repz
andl
jge
sbb
cmp
xchg
add
mov
mov
and
out
fadds
and
sub
sub
pop
mov
mov
push
inc
adc
push
or
dec
add
orl
pop
mov
and
sahf
test
orb
rcrb
pop
sub
pusha
arpl
test
inc
cmpsb
inc
push
dec
movsb
data16
mov
mov
sub
dec
cmpsl
clts
orb
jp
data16
push
loope
cmp
sarb
cmpsl
arpl
mov
imul
insl
inc
loop
mov
adc
bswap
int
enter
out
dec
xchg
pop
add
mov
into
sar
cmp
rcrl
push
jb
cltd
enter
xor
sub
fs
pop
sub
in
adc
pop
or
iret
and
and
dec
addb
jno
and
mov
sahf
test
push
cmpsb
dec
int3
sub
js
in
push
dec
imul
test
lret
xchg
jl
mov
pop
mov
pop
xor
push
out
test
cli
xchg
nop
cmpsb
xor
ficomps
leave
jne
div
adc
mov
cmc
mov
xchg
add
adc
fwait
icebp
xor
jne
data16
adc
mov
cmp
xor
xchg
and
dec
test
or
pop
or
aad
lds
xor
dec
cmp
popa
jge
or
out
or
addr16
pop
add
mov
cli
dec
xchg
and
test
sub
mov
push
cld
rol
jo
shl
fcmovbe
xor
xchg
cmc
dec
push
xor
push
add
outsb
and
sar
push
pop
xchg
popa
inc
repz
inc
cs
outsl
cmp
shr
inc
jne
in
mov
push
mov
mov
ljmp
movsb
inc
xor
mov
fildl
icebp
aad
stos
stc
pop
pop
into
gs
imul
lds
xchg
aaa
loope
dec
enter
clc
cmp
js
mov
xchg
pop
shlb
mov
cmp
pop
mov
sub
xchg
dec
lds
test
jmp
bound
or
adc
cmpsl
sub
inc
ja
push
mov
xchg
outsl
shlb
pop
rol
dec
lds
cli
mov
pop
push
lret
mov
and
push
xor
je
lahf
adc
mov
jae
in
inc
inc
jnp
push
lds
ret
xchg
add
push
push
mov
or
pop
dec
test
sub
fnstcw
fiaddl
cwtl
shl
mov
lcall
mov
pop
scas
adc
jne
aaa
mov
cltd
pop
add
in
pop
sbb
jo
xchg
jne
daa
in
rorl
push
scas
mov
add
xchg
push
imul
cmp
lock
pop
clc
xlat
enter
mov
mov
sti
popl
push
sbb
test
sub
insl
xchg
cmp
xchg
mov
mov
mov
xchg
mov
divb
mov
push
push
lods
pmulhuw
jne,pn
or
lds
or
repnz
mov
sub
rorb
xor
in
cmc
aaa
adc
jle
scas
gs
inc
push
fldcw
ret
dec
stos
data16
push
sbb
gs
outsl
jle
inc
fadds
xchg
dec
in
adc
imul
mov
int
into
lds
loop
ret
xchg
stos
insl
divps
mov
add
rcll
mov
inc
loope
lcall
mov
aaa
ljmp
inc
outsb
adc
cmp
out
cmp
xchg
or
dec
jns
repz
xchg
inc
mov
cmp
js
add
daa
pop
loopne
and
cmp
jp
in
imul
and
dec
add
pop
adc
mov
or
mov
push
lods
xchg
mov
aaa
inc
rcrb
jg
or
call
stc
shlb
enter
sub
push
pushl
lods
leave
inc
loop
or
std
add
adc
or
add
lea
cli
cmp
daa
xor
mov
fldcw
and
cmp
pop
dec
int
cmp
pop
pop
insb
insb
paddq
and
call
add
sarl
aas
clc
iret
jns
loopne
out
mov
ljmp
loop
xor
push
test
notb
mov
ret
cmp
aad
mov
stos
or
in
aas
cmp
inc
sti
mov
mov
lds
sub
add
dec
out
mov
mov
sub
in
inc
int3
xor
pop
aas
adc
test
dec
xor
iret
add
das
aad
mov
in
rorb
sbb
lock
mov
loopne
jl
push
pop
mov
pushf
xchg
jecxz
xor
mov
jp
xor
jecxz
and
cwtl
and
loope
push
sahf
and
out
testl
push
lock
jnp
and
fisubrl
dec
lods
aam
xor
adc
sbb
mov
lds
shlb
stc
mov
fstpl
or
aad
nop
stos
jns
ret
adc
cmp
test
mov
jb
and
fcoms
cs
roll
dec
cmp
out
xchg
loop
xchg
pusha
cmp
mov
push
int
popf
mov
and
call
push
mov
jae
dec
dec
in
or
adc
fnsave
pop
sahf
dec
pop
sahf
loop
xor
leave
xchg
cld
sub
out
negb
lods
jmp
pop
sahf
adc
rcl
add
iret
xlat
sub
int3
loop
adc
sti
jbe
jo
test
test
fisttpl
or
mov
mov
mov
scas
sbb
mov
mov
sub
sbb
mov
mov
push
roll
add
mov
mov
push
mov
dec
insl
jnp
mov
enter
enter
adc
sbb
mov
out
cli
shrb
push
pusha
fwait
leave
stos
addr16
arpl
into
push
arpl
jnp
leave
mov
mov
push
gs
dec
in
cmpl
xor
push
pop
shl
enter
out
scas
loope
push
cmp
xlat
xlat
jno
movsb
inc
je
scas
mov
fs
cmp
mov
jns
add
cmp
cmp
cmp
leave
dec
dec
into
jnp
addl
daa
and
je
ret
push
movsl
lahf
pop
mov
xchg
in
cmp
ret
jo
xor
sbb
icebp
or
or
aad
sbb
roll
and
push
fldcw
dec
jb
inc
mov
out
fs
adc
shrl
add
bound
xchg
jae
test
in
sbb
and
movsl
imul
cmp
dec
cltd
mov
das
int
inc
and
pop
add
push
inc
inc
xchg
dec
pop
pop
sbb
test
mov
dec
cs
lcall
mov
pop
mov
ljmp
xchg
in
xor
mov
les
sub
cmp
in
xchg
ljmp
addr16
xor
xor
mov
push
jno
popf
ljmp
stos
fidivrl
cmp
out
lods
xor
add
cmc
and
add
and
mov
adc
push
xor
jmp
gs
push
or
pop
push
jp
pop
mov
push
push
in
shll
or
pop
mov
inc
mov
mov
lods
mov
mov
sti
rcrb
pop
jmp
bound
mov
xchg
pop
in
or
mov
dec
add
jmp
dec
push
shlb
lret
adc
movl
mov
and
mov
ja
jno
inc
dec
xchg
cmp
mov
ffree
jle
or
push
lret
sbb
enter
gs
jb
mov
test
jmp
inc
jp
dec
je
ss
lahf
dec
mov
pusha
mov
lcall
add
shll
pop
inc
jmp
xor
mov
lcall
in
push
mov
sub
cwtl
rcrb
repnz
int
mov
mov
leave
mov
inc
sub
jne
out
mov
and
mov
enter
shll
int
ficoml
mov
pop
insl
loope
inc
xor
lret
imul
pop
int
repnz
lcall
xchg
ss
sbb
pop
mov
mov
jg
mov
aam
xchg
inc
mov
into
sub
andl
loopne
repz
or
or
test
ljmp
mov
sbb
cmp
es
or
add
sub
jl
icebp
andl
adc
movsb
outsb
inc
loope
jnp
or
dec
xor
hlt
add
outsl
xor
cmc
mov
or
or
loope
popa
push
pop
cld
movl
sbb
and
ret
scas
mov
jle
push
jmp
and
jge
jbe
mov
gs
imul
adc
shrb
shll
or
adc
xor
inc
xlat
xchg
jg
sahf
pop
loop
js
lods
frstor
js
rcrb
in
fsubrl
jecxz
pop
addl
pop
push
xchg
push
loop
loopne
sub
hlt
xor
pop
jno
mov
adc
mov
fildl
dec
aaa
xor
push
sarb
push
mov
ret
popa
lret
mov
push
flds
push
jno
xchg
mov
aas
icebp
push
xor
pop
push
sbb
cmp
cmp
push
jne
cmp
pop
sbb
and
lcall
sbb
rol
loope
sub
and
push
jbe
cltd
hlt
sbbl
fsubl
dec
dec
pop
lcall
filds
push
adcb
jbe
test
inc
pushl
xor
enter
push
jge
clc
xchg
fsubl
or
pusha
insb
xor
and
jecxz
nop
mov
lret
sub
popf
inc
jnp
ret
insl
mov
add
inc
adc
lock
mov
hlt
and
dec
sub
push
and
mov
cli
mov
mov
xor
shlb
js
xchg
aam
in
inc
push
adc
add
push
lahf
push
mov
push
xchg
sbb
icebp
std
fstpl
in
mov
test
adc
inc
ljmp
mov
lods
mov
cmpsl
out
int3
xlat
jno,pn
sbb
push
test
ret
roll
mov
add
or
xor
mov
call
shll
cmp
cwtl
lds
and
shrb
in
inc
jg
out
arpl
xchg
push
mov
mov
data16
scas
mov
stos
shll
jnp
hlt
aaa
cmp
jecxz
fs
into
clc
mov
iret
mov
or
popa
ss
pushl
mov
imul
cs
cld
in
dec
mov
data16
ds
imul
loope
xor
lret
out
enter
adc
adc
mov
or
inc
lea
ret
ds
fs
jmp
aad
dec
xchg
or
pusha
cmp
popa
push
xlat
inc
dec
imul
jbe
ret
add
and
cmp
jae
sbb
inc
imul
dec
jnp
mov
movsb
outsl
mov
lahf
pop
pop
push
mov
mov
add
adc
fnsave
dec
sub
ljmp
cmp
loop
mov
cli
jp
jmp
insb
adc
inc
pop
scas
jle
inc
dec
add
sbb
mov
imul
jl
lret
arpl
push
or
cld
add
mov
fs
xor
loop
ja
cltd
insl
fldcw
xchg
data16
inc
or
lret
add
jmp
sbb
sbb
push
sub
mov
ds
nop
iret
negb
dec
inc
out
addr16
int3
xor
pop
movsl
ret
inc
data16
push
cmp
lock
pop
add
pusha
ficoml
mov
xor
cmpsl
xchg
shll
test
jl
cltd
mov
pop
shl
add
das
and
adc
ret
xor
and
xchg
mov
gs
sahf
les
inc
and
lret
xor
or
jl
xchg
repnz
sub
data16
lea
into
mov
jo
aaa
push
mov
push
push
in
inc
enter
mov
movsb
dec
mov
scas
cmp
inc
cmp
xchg
push
push
pop
push
lock
jecxz
ds
mov
mov
stc
dec
xor
ss
fisubl
gs
dec
lds
arpl
scas
jmp
sbb
in
movsl
cmp
arpl
or
scas
or
push
loop
push
inc
sbb
sub
sub
fistpll
xor
outsl
out
addr16
jle
dec
sahf
arpl
jbe
lcall
mov
and
repnz
icebp
push
push
or
push
aaa
and
or
cvtps2pi
sbb
sub
test
movsb
dec
rorl
and
add
jmp
pop
je
cltd
push
movsl
pop
add
lret
popa
mul
adc
lock
xlat
dec
mov
mov
je
jbe
movsl
pop
lock
adc
mov
xor
xor
lods
sbb
xchg
mov
push
push
pop
jecxz
or
pop
xchg
aad
jb
jnp
sub
in
xchg
jmp
sbb
ffree
dec
addr16
pop
fistps
add
or
jae
adc
mov
scas
fistpl
mov
mov
shr
cmp
out
cwtl
mov
mov
push
or
loope
xchg
pop
test
mov
lods
xor
mov
push
pop
pop
sub
repnz
popf
dec
fsubrs
sub
lret
cmp
push
xchg
pop
loopne
inc
insb
das
dec
mov
jg,pn
mov
movsl
add
xchg
icebp
xor
int
insl
movsb
xchg
mov
mov
xchg
aad
cmp
mov
xor
out
sbb
xor
icebp
jmp
jb
mov
or
pop
push
push
daa
gs
mov
push
or
popf
push
and
and
jg
adc
shrb
or
test
shl
fcmovbe
inc
push
inc
cltd
jle
loop
sahf
loopne
jb
sbb
fisttpl
out
add
pop
and
mov
or
pop
push
in
insb
or
mov
cld
dec
test
call
mull
xchg
mov
dec
icebp
dec
xor
cld
jecxz
cmp
ret
dec
cmp
ljmp
mov
and
push
sbb
cmpsl
fistpl
lds
jp
test
je
jg
ss
repnz
jnp
and
cmpsl
js
inc
pop
sbb
and
and
out
out
mov
test
mov
call
xor
jno
leave
rorl
mov
cmpsb
mov
lds
mov
push
aam
lods
push
push
outsl
fildl
scas
xchg
mov
mov
dec
sbb
adc
cli
mov
sub
xchg
jo
imul
fcmovnu
mov
jbe
mov
inc
mov
and
xchg
stos
cmp
pop
lods
movsl
cld
jecxz
and
sarl
stos
addl
dec
mov
add
push
je
push
mov
ja
ficomps
lods
jb
je
lock
or
adc
cltd
cmp
inc
add
push
and
mov
mov
cwtl
scas
aam
das
fisttpll
adc
pop
mov
mov
lock
call
jp
int3
fwait
and
outsb
jno
mov
loopne
push
mov
mov
push
mov
or
cmpsb
fdivrl
movsl
cmpsl
xchg
push
jbe
push
jnp
jae
and
cmpsl
cmp
add
sub
mov
push
inc
icebp
cmp
pop
cmc
xor
mov
cld
jae
repz
jmp
dec
inc
cmp
cwtl
mov
repnz
and
sub
adc
dec
add
mov
sbb
mov
mov
std
and
icebp
mov
outsb
inc
xor
cmp
gs
imul
ljmp
push
push
lods
jae
rcrl
xchg
pop
or
add
xlat
mov
adcb
sub
lods
mov
inc
loopne
inc
jno
out
xor
pop
dec
mov
in
add
out
movb
xor
fwait
mov
xchg
mov
hlt
push
or
fidivl
jb
fistl
rcl
or
adc
xchg
or
jmp
push
xor
mov
loopne
and
dec
mov
call
sahf
sbb
sub
sti
test
sbb
jo
xchg
cmpsb
popf
scas
repz
into
xchg
call
sub
mov
out
movsl
xlat
stos
and
repnz
ret
iret
and
xchg
in
scas
outsl
stos
out
stos
mov
pop
ljmp
pop
imul
and
xor
dec
push
jne
fucomi
add
fisttpl
lds
ret
clc
mov
adc
lret
cmp
mov
jo
pop
out
sbb
xchg
aaa
add
lahf
adc
nop
gs
rolb
add
push
dec
in
ret
and
sbb
scas
rcll
loope
popa
dec
and
cmpsl
dec
in
sbb
push
mov
jno
mov
cltd
mov
xor
lahf
adc
push
cmp
imul
lret
inc
sbb
insl
std
js
adc
pop
sbb
adcl
xchg
js
mov
or
mov
cmp
insl
sbb
pop
jb
pop
xchg
fidivl
mov
inc
frstpm(287
js
test
daa
sbb
xchg
gs
not
xchg
int
adc
daa
insl
push
mov
les
scas
adc
add
stc
mov
pop
push
mov
std
lea
inc
ja
test
icebp
push
add
sub
mov
cmp
inc
xchg
loop
adc
ja
dec
mov
xorl
mov
or
jg
dec
mov
mov
cli
jo
mov
jle
ret
outsb
repnz
scas
mov
iret
inc
xchg
cmpsb
jmp
aad
push
or
push
cli
mov
movb
push
push
daa
and
imul
roll
pusha
ret
mov
fidivrs
rorl
pop
jle
add
adc
bound
aam
test
aad
mov
push
xchg
mov
jge
popf
inc
push
js
and
and
les
xchg
orl
test
mov
or
lea
push
call
or
pop
cmp
xchg
dec
mov
pop
and
and
mov
xchg
hlt
jecxz
test
xchg
out
lahf
mov
dec
jb
out
stc
fidivrl
sbb
pop
mov
cwtl
sti
jl
arpl
les
xchg
hlt
mov
adc
rcl
call
xchg
in
fs
pop
cmpsl
aad
add
mov
into
in
nop
sub
daa
mov
or
pushf
fisubrl
adc
lea
sbb
clc
aad
cmp
xchg
imull
push
or
in
adc
jb
mov
enter
subb
push
add
insl
lock
add
mov
pop
xchg
in
push
or
lods
je
fstp
xor
mov
shrl
jmp
aad
ja
ss
stc
xlat
out
test
inc
add
jg
cmp
mov
pop
out
pop
test
or
rcl
push
rcll
mov
mov
cmp
xor
stc
scas
in
and
xchg
or
mov
add
push
pusha
and
das
inc
movsl
mov
subl
lods
mov
xor
xchg
insb
mov
fwait
push
or
xchg
das
adc
sbb
dec
and
leave
mov
cmp
daa
push
std
std
outsl
lret
xor
pop
jo
xchg
mov
nop
neg
test
aam
jecxz
dec
aad
sub
sbb
or
xor
leave
leave
shl
push
and
addr16
sbb
xor
enter
xchg
or
mov
mov
mov
inc
add
dec
cmp
jb
and
xchg
es
mov
add
mov
ja
sub
jb
add
sbb
mov
out
ret
push
push
cmc
sub
add
pop
in
xchg
andl
and
test
mov
xor
into
jno
icebp
pop
jne
xchg
xor
mov
sbb
inc
enter
or
pop
insb
insb
mov
cs
inc
sahf
mov
jecxz
leave
cmc
mov
inc
jl
xchg
or
ja
faddl
insb
cli
cmp
or
fsubrl
or
xchg
push
into
iret
jl
mov
test
inc
or
pop
mov
adc
addr16
dec
inc
in
shlb
add
insl
outsl
jb
sti
ret
mov
fistl
and
cmp
test
xor
mov
push
int
aas
push
sti
rcrb
push
dec
jp
inc
mov
mov
scas
mov
jmp
out
or
insl
lahf
jae
jecxz
fwait
xor
mov
sbb
repz
ja
adc
fldl
mov
pop
lcall
rep
out
mov
cwtl
or
inc
xchg
ja
popl
into
xchg
mov
out
or
lret
loopne
rolb
cmp
cmp
lret
push
pushf
inc
mov
xchg
sbb
xchg
cmp
mov
std
mov
jp
inc
lods
and
jl
or
scas
ret
jae
pop
popf
hlt
in
sbb
dec
sbb
xor
lods
ja
and
jns
add
sub
leave
cmp
inc
aad
cmp
xchg
lea
leave
jg
aad
jbe
iret
icebp
popf
shl
aaa
dec
divb
adc
sub
push
jp
xorl
mov
or
inc
fistps
cmc
insb
les
xor
in
dec
aad
xor
or
in
cmp
clc
leave
stc
ss
subl
insb
cmp
dec
jae
iret
sub
sbb
xlat
push
pushf
cltd
leave
and
sbb
push
pop
cmp
stos
cmp
repz
mov
ds
ljmp
leave
call
js
imulb
jp,pn
jg
or
sub
fxch
in
je
cld
xchg
cmp
outsl
icebp
ror
sbb
push
mov
mov
lahf
je
test
xor
out
cmpsl
rcrb
sahf
pop
idivl
add
rcrl
mov
mov
add
mov
xor
inc
dec
xlat
cmp
jge
insb
jb,pt
rcrl
fcoms
cwtl
pop
fistl
je
xor
pop
call
jnp
mov
cmpsb
scas
mov
popf
pop
aaa
ljmp
sbb
sub
das
outsl
jo
sub
mov
sub
mov
sar
cmp
lret
fstl
shrb
mov
movb
add
bound
pop
in
bound
pop
jmp
iret
or
add
add
test
cmp
outsl
mov
mov
lahf
sbb
and
fstpt
jle
outsl
shll
add
push
mov
sbbb
fs
xor
pushf
enter
mov
mov
les
add
dec
stc
push
push
jo
js
mov
pop
aas
aas
rcl
xor
outsl
xchg
jmp
cltd
cltd
sbb
sbb
mov
fdivl
test
adc
pop
sub
test
sbb
dec
insl
fnstcw
rolb
out
mov
xchg
rolb
cmp
cmp
push
pop
cmpsl
pushf
imul
pop
js
call
dec
inc
roll
jno
imul
or
fisubl
inc
das
mov
push
les
sub
mov
jo
cmpsl
xchg
xchg
int3
test
movsb
or
lahf
jg
and
or
nop
fldenv
or
addb
lods
adc
ret
and
data16
xchg
lret
enter
aas
xchg
arpl
xor
xchg
pop
mov
dec
xorl
dec
es
xchg
add
pushl
test
pop
movsb
add
cld
xor
or
xor
add
out
popf
xor
mov
into
icebp
xchg
or
or
in
inc
out
lcall
test
xchg
inc
out
mov
pop
mov
mov
jecxz
mov
xor
scas
rcrb
push
stc
add
pop
popf
cmp
inc
mov
jno
xor
je
or
repz
sub
push
adc
fists
fcompl
mov
stos
ficompl
adc
dec
add
shll
xor
and
mov
stc
hlt
sbb
sbb
int3
pop
xor
into
aaa
into
fcom
in
sbbl
mov
test
gs
out
mov
sbb
sahf
xor
xchg
and
mov
mov
inc
push
in
popf
add
pop
in
das
stos
repnz
out
fidivs
jg
push
add
loop
rcll
inc
fiaddl
xchg
or
inc
pop
test
sbb
loope
push
mov
inc
dec
mov
in
stos
xchg
adc
loopne
push
adc
sbb
or
bound
mov
pop
testl
sub
lds
cmp
pusha
aam
cwtl
sub
jnp
icebp
or
out
pop
mov
jne
inc
dec
mov
inc
mov
or
jo
push
xor
stos
or
sbb
shl
xor
pop
mov
cmp
clc
xor
popl
and
mov
imul
loope
xchg
and
adc
sub
repnz
jae
or
repz
and
push
dec
inc
repz
push
int3
jmp
shlb
ret
in
shlb
popf
movsb
xchg
or
aam
in
loopne
outsb
sbb
pop
or
push
aam
popa
pop
dec
cmc
push
sub
pop
xchg
fldcw
pop
push
push
mov
in
xor
je
test
push
out
jns
pop
mov
pop
push
sub
pop
jmp
xchg
adc
push
imul
xchg
sub
jmp
dec
push
xchg
pop
push
inc
fnstcw
idivb
jne
das
xchg
add
incb
loop
dec
cmp
test
scas
mov
push
add
daa
popf
shl
jns
loopne
fstps
lret
sbbb
mov
imul
pop
and
ret
inc
cmp
pop
fcmovne
int
lret
push
cmp
hlt
xchg
test
int
mov
aad
out
xchg
xor
mov
scas
sub
mov
lods
popa
data16
movsb
mov
rolb
jne
into
xchg
idiv
xlat
push
lock
sbb
mov
mov
mov
movsl
stc
add
fistps
into
call
or
adc
and
mov
or
test
mov
clc
pushf
in
dec
dec
sbb
cmp
cmp
lret
fdivrl
xor
and
addr16
jge
cwtl
jge
mov
repnz
mov
dec
sub
repnz
cmpsl
fs
sbbb
mov
ljmp
scas
inc
inc
in
lret
in
fmuls
xor
lods
in
xchg
aad
jge
je
dec
jne
out
push
mov
pusha
mov
mov
jo
movsl
out
jo
sti
adc
sub
push
daa
adc
mov
rcr
push
hlt
mov
repz
cmpsb
push
ret
std
leave
cmp
mov
movsl
xor
jne
push
mov
testb
ficoml
incb
push
mov
jge
jns
jle
jge
test
xchg
xchg
data16
shr
insl
mov
pop
xchg
cmp
or
push
sbb
test
imul
cmp
xchg
or
xor
xor
pop
sbb
into
dec
arpl
jp
xlat
popa
sub
jl
and
pop
lea
and
stos
imull
out
out
loopne
clc
scas
in
sbb
in
in
sahf
adc
cmp
mov
lods
adc
jge
inc
cmp
sub
aaa
popf
ss
pop
and
xor
inc
lods
pushf
pop
gs
or
ja
es
mov
mov
int
cmp
sahf
aaa
ljmp
mov
and
out
push
jecxz
xchg
mov
fsubs
imul
sub
sub
cmp
ja
fstl
ret
push
pusha
mov
mov
ret
popa
loopne
inc
and
sub
repnz
insl
xor
out
int3
jecxz
adc
jge
adcb
sbb
mov
and
div
pop
addr16
lret
imul
adc
and
mov
cs
sub
fnstcw
cmp
sti
pop
mov
push
fnstsw
sbb
and
or
sbb
out
add
ficoms
mov
push
icebp
xchg
push
js
lahf
cmp
and
scas
sub
push
mov
icebp
cmc
mov
mov
leave
add
pop
sub
mov
mov
dec
or
rcrl
xor
data16
jae
es
in
pop
xchg
test
outsb
push
stc
or
push
out
pop
xchg
icebp
mov
rcrl
sahf
ljmp
mov
fs
push
clc
cmp
sbb
ljmp
lea
jb
mov
xchg
aam
insl
popa
stc
shll
stos
pusha
les
adc
mov
push
pushl
mov
stos
andb
cltd
dec
imul
jmp
scas
sub
into
out
pop
call
mov
cmp
enter
push
cmpsb
cli
pop
popl
cmpsl
aaa
into
push
fcoml
mov
daa
jp
mov
loopne
jbe,pn
cmpsb
mov
or
pop
mov
xchg
popa
int
insl
jae
pop
cmpl
mov
test
cmpsl
ja
jno
mov
gs
jo
movsl
xchg
and
mov
xor
stos
ds
cmpsl
popa
cmp
dec
cmp
je
push
cmp
cli
adc
push
stos
lds
pop
xchg
hlt
aam
pop
adc
mov
jle
dec
gs
clc
cmpb
aas
xor
fsts
inc
movsb
inc
loop
adc
jno
and
ret
sub
out
jnp
jmp
xor
sbb
adc
call
cmc
adc
in
bound
cld
pop
jno
cmpsb
pop
jnp
add
mov
xchg
jge
xor
or
push
dec
sub
ficomps
jnp
nop
imul
and
getsec
xlat
fs
push
subl
dec
out
push
xchg
jns
inc
and
cmp
lea
icebp
or
adc
pop
outsb
popf
sbb
int3
jg
mov
inc
cmp
cs
lret
int3
xchg
into
mov
dec
aad
popf
stc
mov
jge
ljmp
cwtl
mov
sbb
push
imul
js
imul
sbb
jle
pop
dec
out
fistps
sub
nop
cmc
xchg
jns
pop
pop
pop
test
push
mov
or
test
mov
daa
cld
push
dec
push
in
shrl
xchg
mov
sub
jecxz
cmc
sub
push
cmpl
jae
repnz
jmp
out
xorb
gs
sbb
xchg
xchg
out
push
icebp
push
cmp
mov
mov
test
pop
cmpsl
cmp
or
daa
lcall
insb
push
stc
fs
jne
dec
stc
add
popf
cmpsb
test
nop
adc
movsb
call
insb
aas
inc
or
lret
lahf
push
lods
stos
jno
xchg
mov
lock
pusha
sub
pop
cmpsb
jmp
call
xor
mov
pop
lcall
xchg
mov
aam
addr16
js
sarb
loopne
cld
adc
push
lret
mul
push
je
mov
testl
out
pop
sbb
and
pop
adc
sbb
mov
iret
test
jo
mov
xchg
mov
xchg
sbb
fidivs
call
imul
adc
std
das
arpl
into
popa
cmp
xor
jnp
lods
jmp
es
pop
push
fsts
sbb
push
push
clc
add
xor
stc
cmp
push
mov
mov
pop
push
enter
pmulhuw
mov
nop
sub
loopne
inc
lea
pop
andb
pop
mov
xchg
xchg
and
out
cmpsl
aaa
insb
xchg
hlt
sbb
xor
repz
inc
push
and
xor
mov
icebp
adc
add
mov
shrb
test
inc
push
mov
xchg
dec
sbb
ss
enter
icebp
sub
andb
inc
xor
mov
inc
mov
xlat
xlat
push
xchg
aad
dec
sbb
ss
jnp
or
add
outsb
pop
repnz
cmpsl
stos
repnz
push
cmpl
or
inc
fisubrl
cmp
jne
pop
push
sbb
pushf
clc
mov
inc
sti
xor
popf
dec
adc
clc
dec
mov
rclb
and
fwait
test
cmp
mov
xor
add
lods
adc
ss
fildll
inc
jbe
sahf
push
out
push
pusha
jnp
adc
jmp
jl
xchg
mov
loop
cwtl
ret
testb
jp
sub
pop
mov
lods
adc
jae
addr16
inc
dec
inc
xchg
sbb
stos
out
sbb
xchg
inc
push
inc
in
leave
cmp
aam
cmp
adc
xchg
lods
xlat
dec
enter
fmull
dec
and
xchg
insb
enter
sbb
pop
xor
pop
stos
xor
cli
jl
jle
ret
dec
mov
leave
repnz
jle
xchg
loop
lcall
dec
push
adc
add
popf
sub
push
addr16
mov
lahf
add
xor
mov
adc
jb
scas
dec
mov
movsb
sub
jle
out
mov
stos
jle
mov
or
das
and
mov
xchg
mov
inc
xor
dec
stos
in
cmpl
xchg
insl
into
daa
dec
popa
adc
dec
pop
test
or
add
cmp
imul
jbe
adc
mov
aas
addl
mov
pop
ds
or
mov
inc
imul
dec
lods
test
pop
movsb
insb
adc
push
cld
jb
fnstsw
and
xchg
lcall
sbb
lret
jmp
sub
ss
aad
hlt
mov
fdiv
andl
inc
loopne
mov
push
jae
lcall
or
mov
stos
rcrb
into
or
sub
sahf
imul
enter
aam
xor
rclb
or
jecxz
into
mov
movsb
fdivl
out
lock
stc
mov
fildl
xchg
pop
push
mov
je
push
or
xchg
dec
ficoml
push
psrad
subb
iret
xlat
inc
mov
jbe
xor
adcb
leave
xchg
mov
cmp
push
clc
xor
aaa
jl
test
mov
decb
pop
shl
and
loopne
subb
loop
leave
cmpsb
inc
sub
xlat
fldl
pusha
test
scas
leave
loop
iret
stos
pop
imul
pop
inc
jnp
popf
test
cmpsl
and
adc
pop
aaa
mov
les
or
cmp
and
or
stos
pop
sub
mov
int3
inc
push
sbb
xor
imul
or
mov
push
mov
push
outsb
sbb
sbb
pop
sbb
scas
xchg
bound
lahf
dec
shlb
inc
xchg
push
int3
ret
rcrl
in
fdivrs
cltd
add
sbb
xchg
mov
dec
adc
ret
ljmp
and
jo
inc
push
das
push
fdivrs
lahf
mov
mov
cltd
out
aam
testb
adc
in
pop
jecxz
jle
xchg
push
push
push
into
and
pop
mov
jbe
jnp
subl
push
mov
sar
out
add
jb
push
in
pop
sbb
loop
xor
stos
and
ret
sahf
test
jb
das
in
cmc
sub
add
es
add
push
pop
call
aaa
add
into
sub
fnsave
cmpsl
push
nop
insl
dec
or
push
push
arpl
sbb
adc
push
sub
aam
inc
or
add
cmp
outsb
xchg
xorb
jge
xor
sbbb
mov
in
add
movsb
push
popa
bound
jle
jb
outsb
cwtl
ds
pop
outsl
les
clc
sahf
aas
mov
mov
fs
lret
cmp
jecxz
push
add
dec
push
push
movsl
shll
pushf
mov
xchg
cmpsb
add
or
add
inc
sbb
movsb
subb
and
pop
into
test
sub
in
lahf
idivb
loopne
call
cmp
shll
popf
push
xor
scas
mov
sbb
xorl
enter
ret
movsl
shrl
or
add
pop
dec
add
xlat
add
movsl
aas
int
ret
lahf
stos
jge
sar
adc
or
xchg
xchg
rorb
stos
add
cs
xchg
test
jno
les
pop
in
aas
and
jo
jecxz
fistps
xchg
aam
leave
or
pcmpgtw
pop
loop
jecxz
push
xchg
xchg
push
jle
outsb
ljmp
jo
sbb
cmp
icebp
fdecstp
mov
jb,pt
ljmp
std
xchg
gs
lahf
lret
cmp
xchg
outsb
int
fiaddl
je
aam
xor
push
gs
stos
mov
stos
sub
lret
dec
mov
div
loopew
test
insl
popa
xchg
cmpl
xchg
jae,pt
loopne
sub
dec
pop
out
mov
pop
adc
pop
in
hlt
cmp
out
sub
pop
adc
push
pop
xchg
add
inc
stc
sarl
nop
cmp
cmp
shlb
cmp
shlb
dec
ficompl
stc
aaa
fisubs
lds
xchg
cmp
daa
push
imul
sub
add
pushf
mov
movsb
push
jmp
or
test
mov
sbb
inc
jbe
adc
lret
dec
into
pop
sbb
idivb
iret
pop
inc
xchg
je
cmp
test
xor
sub
jg
xchg
xchg
rorb
pop
repz
adc
leave
test
cli
jmp
clc
ja
imul
ret
popf
aas
or
and
mov
rcrl
loope
scas
leave
cli
push
imul
push
adc
pushf
fidivs
ror
fs
lds
lret
fldcw
mov
out
jle
scas
cmp
adc
in
adc
jne
iret
dec
fucom
push
aas
pop
stos
and
push
fisubl
lods
cld
push
pop
iret
cmc
in
cltd
ja
xor
lods
movsb
or
inc
les
xor
lock
les
inc
pop
sbb
xchg
xor
mov
push
nop
cmp
das
add
mov
fisttps
in
call
mov
mov
and
pop
jno
or
btc
cmp
addr16
mov
ja
es
adc
jbe
rolb
sub
in
xchg
push
sbb
and
dec
shr
and
lds
dec
dec
cmp
arpl
adc
loop
mov
mov
cmc
cs
jae
mov
arpl
cmp
aam
neg
pop
xchg
in
enter
adc
lods
test
cli
mov
jns
imul
scas
es
dec
out
testl
daa
and
lret
push
add
movl
pusha
mov
push
sub
cwtl
sti
jnp
aam
cmp
leave
adc
mov
xor
gs
scas
mov
xchg
ja
xchg
jp
inc
bound
ret
mov
fbld
mov
inc
xor
icebp
pusha
mov
adcb
test
adc
call
nop
loope
imul
into
mov
xlat
pop
xor
stos
mov
adc
ja
jge
test
outsb
xchg
out
mov
mov
jp
pop
add
xor
sbb
mov
test
dec
pusha
insl
out
les
jo
sbb
mov
and
push
sub
add
icebp
mov
mov
mov
aam
and
js
cs
rcrb
loopne
mov
or
xor
lods
mov
jmp
xor
ret
xor
js
out
lock
adc
add
lretw
xor
ret
dec
cmp
inc
jne
or
push
ds
fisubrl
in
and
rcrl
push
fistpl
shrl
mov
lock
cmc
aas
pop
movsb
divb
dec
test
pop
cmp
sub
loopne
in
jb
adc
pop
xor
lret
xchg
sub
cmp
aad
xor
pop
add
in
jns
lahf
into
outsl
cmpsb
jbe
sarb
cltd
pop
mov
dec
add
xor
int
lahf
adc
or
jbe
icebp
pop
mov
cmp
mov
daa
mov
xor
aaa
sub
cltd
flds
cwtl
jmp
jns
ret
test
and
jp
lret
pop
mov
shrb
in
and
push
lahf
cmp
pusha
inc
push
je
bound
loope
xor
shrb
fwait
ret
lret
lock
ljmp
jo
push
dec
mov
iret
inc
jge
push
lds
xchg
fimuls
dec
ss
mov
mov
fsubl
push
pusha
adc
cmp
rcrl
inc
aad
pop
pop
shl
js
push
xchg
fldcw
loop
pop
imul
sub
pop
and
mov
jle
int3
stc
lods
fucomp
fmuls
out
or
fld
aad
les
mov
loopne
rol
mov
rorb
pop
sub
inc
loope
xor
insb
jno
sbb
cli
xchg
loopne
popa
sbb
roll
pop
push
pop
sti
push
dec
add
scas
xchg
fiaddl
mov
mov
mov
negl
std
dec
mov
xchg
movsb
lret
pop
add
imul
nop
push
cltd
xchg
icebp
pop
pop
idivb
stos
ret
pop
xchg
push
xor
fmuls
cmp
pop
imul
xlat
fisttpl
mov
xchg
xchg
aaa
jmp
sahf
lret
dec
or
xor
sbb
in
cmpsb
enter
repz
lds
push
or
adc
call
cli
inc
pop
cwtl
mov
xchg
mov
add
cwtl
in
sbb
pop
sub
mov
adcb
xchg
shll
push
mov
sbbb
int
push
imul
xorl
addr16
mov
dec
gs
xchg
pop
sbb
xchg
pushf
in
xchg
inc
pusha
ja
gs
or
mov
sbb
inc
pop
adc
xor
or
repnz
cmpsb
xchg
enter
or
or
mov
push
cmp
and
shl
mov
adc
rcrb
push
pushf
mov
sub
jb
add
in
jp
in
ss
insb
test
repz
int
sbb
xchg
fwait
loopne,pt
pop
out
cli
add
or
out
cmp
xchg
fwait
mov
movsl
popf
ljmp
cmc
xchg
outsb
add
mov
inc
jge
pop
fsub
pop
pop
lods
lock
jp
nop
scas
sub
cmp
enter
push
inc
and
mov
sbb
sub
xor
push
out
pop
push
add
mov
cmp
icebp
xchg
dec
mov
loop
leave
dec
inc
sbb
nop
jne
fwait
int
inc
icebp
dec
aas
daa
sub
xchg
icebp
cmovge
push
in
push
dec
lods
dec
dec
test
xchg
adc
adc
sbb
jecxz
lock
gs
fildll
xchg
mov
cmp
jns
mov
jne
xor
ss
or
sbbb
mov
or
sub
test
push
mov
adcl
jo
dec
hlt
loopne
int
les
pop
sahf
movl
dec
aad
lea
and
lods
dec
filds
adc
cwtl
fcomps
lret
hlt
xchg
xchg
push
or
or
lds
xchg
test
or
xchg
jle
fnstsw
aad
adc
repnz
cwtl
push
xchg
or
pop
fstp
push
cli
and
push
mov
and
and
les
insb
cmpsb
or
cmp
adc
lds
lret
test
adc
add
push
mov
mov
add
lret
or
cmpsl
mov
fstpl
ret
lea
pop
rcr
aad
fmul
insl
enter
sar
mov
add
inc
int
lods
repz
mov
shl
into
sbb
loopne
pop
dec
push
sbb
ret
jecxz
pop
bnd
sbb
or
xor
mov
fdivs
dec
mov
mov
in
shr
cs
add
xor
shll
jg
inc
mov
ret
sub
outsb
add
jl
fnsave
cs
addr16
mov
fcmovnbe
and
jmp
sub
mov
jp
jmp
ret
outsb
push
dec
push
xchg
mov
jmp
mov
mov
jl
loopne
std
or
rorb
stc
inc
jnp
ljmp
int
xchg
shlb
popa
lea
xor
cltd
in
adc
rorl
out
push
mov
fcompl
mov
ret
mov
mov
cmpsb
jnp
mov
or
jnp
paddd
jle
loopne
inc
adc
xchg
sbb
push
sbb
insb
jge
loope
shll
popa
mov
mov
ret
repnz
adc
ror
sub
mov
in
inc
movsb
push
xor
and
sahf
xor
std
adc
mov
jne
jbe
add
push
xor
push
movsb
cltd
stos
aad
and
punpckhbw
sbb
mov
popl
lcall
scas
enter
shr
fistl
xchg
push
jle
jne
push
cmpsb
dec
xchg
mov
popl
into
mov
scas
mov
into
sbb
push
gs
movl
inc
je
push
push
dec
adc
jmp
or
jb
aam
lods
nop
lock
fwait
divb
push
mov
sub
pop
mov
push
mov
add
dec
fwait
in
mov
shl
pop
imul
or
xchg
arpl
sub
test
jge
mov
dec
push
mov
jno
mov
add
pop
xchg
push
add
or
fistps
pop
or
inc
mov
bound
xchg
mov
adc
pusha
ffreep
mov
rcrl
rolb
lcall
cmpsl
dec
inc
mov
push
xchg
or
out
je
je
arpl
cmp
inc
pop
push
loopne
fdivs
xchg
lods
pop
out
clc
call
lret
pop
xchg
shrl
fldenv
cmp
js
cli
mov
std
push
add
testl
cmp
push
data16
aas
pop
test
push
les
sub
lret
in
cwtl
jecxz
scas
xchg
cwtl
je
sbb
test
jg
leave
lcall
in
inc
adc
insl
mov
loop
xchg
sbb
xchg
sub
adc
xchg
mov
mov
cwtl
imul
cltd
mov
add
std
push
daa
jno
or
fs
call
stos
dec
addl
stos
sbb
aam
nop
leave
mov
xchg
arpl
add
fs
mov
fmuls
push
lock
fidivs
cmp
call
ret
or
sub
dec
cmp
fistps
and
xor
pushf
fisttpl
xorl
insl
jg
aad
cld
lcall
and
mov
lahf
ret
push
cmpl
lea
pop
int3
push
shll
pop
insl
sbb
mov
enter
test
xchg
inc
lods
mov
fwait
cs
shll
cmp
movsl
push
mov
leave
shll
js
pop
out
pusha
xchg
lds
popa
lods
xchg
or
sahf
fwait
sub
or
inc
shl
or
dec
or
jne
pop
mov
push
shlb
mov
and
pop
nop
sarl
stos
mov
shll
mov
jb
test
jo
jbe
in
popf
mov
jle
out
xchg
lods
arpl
xchg
cmc
int3
sti
rorl
loop
mov
fnstsw
lret
and
dec
out
push
shrb
aaa
jbe
push
xor
pop
dec
mov
fdivrl
mov
lcall
xor
jp
sbb
adc
rorb
insl
ret
lahf
or
movsl
stos
mov
sti
add
mov
inc
and
and
sahf
stos
jmp
pop
xlat
jno
ljmp
inc
je
jbe
lods
jbe
jmp
dec
dec
pusha
mov
out
push
adc
add
leave
fs
jns
xor
bound
shrl
push
test
sbbl
fneni(8087
std
xor
dec
lahf
popa
fidivl
cld
lods
fidivs
xchg
in
imul
mov
mov
jmp
xlat
inc
ja
sub
jp
add
scas
cmpsl
insl
icebp
pop
push
pop
pop
outsl
test
daa
cmp
add
pusha
jbe
jnp
cld
dec
test
mov
mov
jmp
lret
mov
je
push
push
xor
rcrl
jl
cli
std
pushf
test
inc
in
add
xchg
dec
fsubp
jns
jle
gs
xchg
rol
or
mov
cmp
lods
in
and
inc
sbb
sub
or
js
dec
cmp
jmp
or
jp,pn
pop
add
aas
adc
jmp
xchg
adc
pop
stos
stc
cmpsl
ffree
aam
in
mov
data16
mov
mov
push
xchg
adc
cmpsb
xchg
ljmp
push
icebp
xor
mov
jne
sub
xlat
and
dec
or
inc
mov
int
lea
fnstenv
sub
jno
mov
lock
push
xor
lea
arpl
adc
test
jae
into
sti
cli
jmp
jno
cmp
leave
push
push
dec
out
xchg
nop
mov
daa
jmp
gs
mov
movsb
stos
jnp
rorl
inc
xor
add
pop
in
stos
aas
cmpsb
add
bnd
adc
cmc
mov
outsl
jno
pop
sbb
and
xchg
push
imul
or
push
jecxz
xlat
mov
repnz
add
into
mov
adc
mov
mov
lods
in
add
addl
mov
xor
xor
int
out
jns
xchg
jbe
and
pop
inc
int3
cltd
xor
adc
ja
lret
sahf
add
iret
jl
xchg
and
mov
jb
in
xchg
add
sbb
cwtl
mov
gs
and
data16
jno
shlb
sub
xchg
ja
subl
pop
shlb
mov
and
push
adc
or
cmp
lea
cmp
mov
nop
bound
out
outsb
into
push
imul
jo
inc
and
dec
push
and
in
daa
dec
test
ret
imul
ljmp
pop
outsb
xchg
das
loopne
mov
push
subb
xchg
sub
lret
stos
cld
fwait
in
loope
cmc
lahf
dec
sub
dec
incl
mov
mov
popf
mov
push
mov
je
jg
mov
lcall
cltd
lcall
add
mov
fildll
lock
adc
xor
jns
or
jne
inc
mov
insb
dec
add
and
inc
mov
jl
mov
push
cmp
inc
xor
or
adc
nop
sbb
xor
jae
dec
mov
or
and
xlat
cmp
mov
andl
and
xor
fimuls
call
xor
stos
lret
fdivr
sub
xor
or
xor
add
jne,pt
cli
push
pop
sbb
xchg
push
jl
fisttpll
ljmp
insb
or
adc
pusha
sub
mov
outsb
dec
sbb
mov
mov
add
cmp
imul
sbb
cwtl
mov
mov
jl
mov
pop
pusha
fs
push
xchg
lods
sbb
mov
nop
pop
cmp
jb
dec
push
mov
push
pop
pop
push
pop
push
call
lcall
js
sub
add
in
jg
leave
lea
cmpsb
aas
push
dec
push
add
push
loopne
push
adc
xchg
arpl
pop
arpl
popf
or
in
sub
sbb
lret
adc
fisttpll
std
xchg
jns
pop
and
cwtl
decl
add
stos
mov
ds
mov
scas
sbb
arpl
movsb
mov
imul
orl
nop
xchg
adc
lcall
mov
pop
push
inc
jb
test
lods
mov
dec
rcrl
sbb
or
adc
faddl
xor
arpl
ja
dec
and
add
xchg
ficompl
pop
cmpl
sub
xor
sbbl
icebp
adc
jecxz
es
xor
dec
testl
arpl
pop
pop
jne
mov
hlt
fldl
sub
and
add
icebp
cmp
push
outsb
pop
sub
jbe
inc
mov
xchg
imul
fdivl
call
xchg
or
ss
scas
lds
sbb
insl
push
movsb
popa
icebp
jae
fnstcw
pop
push
inc
or
sbb
pop
cmp
mul
push
cmpsb
shll
inc
add
aas
aam
dec
mov
dec
ss
xchg
rorb
dec
xor
loopne
sub
test
inc
add
lds
cli
test
mov
lods
sub
decl
test
aaa
movsb
pop
inc
pusha
jg
sbb
in
inc
stc
addr16
and
sub
mov
mov
mov
cld
add
adc
mov
jg
push
xchg
dec
push
test
fisubl
push
std
mov
mov
mov
xchg
arpl
sub
lret
cwtl
mov
and
mov
incl
rorb
pushf
out
mov
sub
mov
daa
cmp
ljmp
aad
dec
dec
jp
repnz
cmp
and
popa
js
or
test
jb
repnz
hlt
sbb
addr16
push
fstpl
arpl
std
jle
cmc
push
xchg
xchg
das
stos
or
test
dec
cmp
push
push
and
dec
int
aad
xor
cld
xchg
mov
dec
addr16
cmpsl
add
imul
test
sub
in
inc
inc
divb
add
mov
aam
add
pusha
and
mov
fistpll
jecxz
dec
fs
clc
je
out
push
sub
and
mov
mov
arpl
push
loope
cmp
dec
sahf
add
lods
push
xchg
imul
ret
dec
ja
xor
outsb
insb
aad
test
pop
cs
inc
mov
mov
add
push
sbb
and
add
jp
cmc
xlat
or
repz
xchg
or
test
imul
adc
xor
sahf
mov
repnz
jecxz
sar
cld
dec
mov
push
add
add
and
cld
inc
inc
mov
cmc
sub
imul
dec
jecxz
lods
sti
clc
sbb
in
cltd
pop
jmp
xchg
fdivrs
xor
mov
mov
xor
push
arpl
jg
in
pop
mov
cmp
test
add
ja
dec
mov
sbb
pop
cmp
xchg
sarl
mov
push
add
push
push
aaa
ds
mov
lock
adc
or
arpl
maskmovq
testl
sub
mov
pop
sbb
cmp
pop
outsb
pop
ja
cwtl
movb
insb
and
jg
xchg
mov
dec
out
jne
xchg
fabs
scas
loop
adc
jecxz
fnstenv
add
stc
int
out
fimull
mov
fcoms
xchg
mov
mov
sahf
xchg
repz
iret
repnz
sbb
stc
adc
lods
aaa
jp
add
lds
xchg
inc
mov
cmc
add
ss
ds
cs
arpl
call
arpl
es
aam
sub
dec
nop
or
adc
out
xchg
aam
arpl
repnz
roll
xchg
and
inc
inc
test
lcall
pop
popf
jb
dec
cmp
hlt
test
jae
js
daa
mov
jmp
dec
int3
or
jecxz
jno
pop
sbb
fwait
mov
dec
sub
sbb
and
adc
inc
cli
jmp
lcall
add
sbb
lock
add
jbe
fs
jle
subb
scas
out
in
stos
lds
push
or
es
movsl
inc
dec
shrl
fistpl
and
stc
sbb
jne
cld
jg
mov
popl
pop
mov
push
push
fisttps
aaa
jbe
pop
add
pop
and
in
out
pop
inc
fisubs
push
das
jmp
jnp
fsubr
into
push
fistl
ror
out
aas
xor
push
das
cli
and
xor
push
jae
jp
push
dec
lea
inc
cli
xor
push
imul
data16
je
cmc
dec
push
rcrl
pop
inc
push
xchg
mov
lock
cmp
test
ljmp
xlat
inc
fwait
mov
pop
dec
int3
push
lret
rclb
cmp
mov
sbb
inc
je
push
adc
es
jo
jl
mov
testb
cmp
divb
mov
ljmp
cmp
cmc
xlat
xchg
loopne
jnp
insb
mov
pop
aad
pop
push
movsl
dec
cmp
and
pop
lret
in
fldt
xor
xchg
call
xchg
rcrb
jmp
sahf
divl
subb
idivl
push
pop
lods
test
rclb
push
jae
ja
mov
and
sbb
dec
mov
into
mov
clc
cwtl
push
adc
inc
push
repz
cmp
movsb
dec
mov
data16
or
sub
jmp
out
inc
aaa
in
divl
jbe
enter
js
ljmp
outsb
faddl
jl
mov
int3
or
pop
sub
adc
in
push
test
push
repz
mov
imul
xchg
scas
ficoml
in
mov
mov
xchg
xchg
xchg
mov
jmp
mov
ret
shl
gs
sahf
jle
lock
add
add
pop
arpl
in
out
inc
push
mov
jne
dec
aam
stc
mov
mov
push
and
add
xchg
insb
sbb
push
xchg
pop
mov
xor
xchg
dec
std
mov
and
pop
loop
xchg
sub
fisubrs
bsr
test
rcrl
fcmovbe
in
fistpll
and
add
cmp
pop
mov
repnz
inc
lret
lea
ds
push
lret
fwait
mov
mov
dec
cmp
adc
xchg
adc
mov
or
mov
cmpsb
pop
sbb
push
mov
repz
std
xchg
andl
inc
dec
push
and
mov
pop
xlat
jb
rol
push
aas
mov
or
and
inc
or
cmc
faddl
cmpl
or
imul
add
out
adc
ss
aad
push
dec
inc
push
push
add
and
cmpsl
mov
add
mov
bnd
push
leave
cmc
jp
sti
push
daa
adc
jae
sbb
push
test
jno
cmpl
pop
ds
adc
mov
pop
ret
add
cmpl
push
or
xchg
xchg
mov
push
sub
fs
out
and
or
test
aaa
enter
mov
cld
sbb
add
test
cmp
xor
imul
jnp
sub
fwait
and
mov
orb
sub
lock
sub
jecxz
adc
nop
mull
jne
lret
call
shl
cmp
movsb
fdivs
negl
out
push
rcl
jb
cmp
and
cli
pop
imul
and
add
xor
xchg
xchg
dec
pop
mov
adc
cld
xor
mov
cmp
mov
push
loope
dec
push
pop
aad
dec
xchg
clc
movb
push
sti
cmp
push
dec
xor
ret
lret
sub
leave
add
repz
leave
cmp
movsl
test
mov
lods
inc
lods
dec
inc
lret
jge
ret
cmp
ja
outsb
stc
sub
lret
inc
dec
je
cmpsb
xor
jp
out
aam
sub
mov
push
in
sbb
test
adc
pop
cmp
jne
sub
xchg
clc
sub
in
cmp
inc
negl
inc
jle
mov
sahf
mov
xor
icebp
jb
aas
adc
dec
push
or
test
punpcklwd
xor
xchg
and
pop
add
inc
cmc
mov
push
rcl
push
mov
in
test
adc
adc
pop
pop
jb
std
mov
xchg
adc
iret
mov
sub
inc
stc
add
and
sbb
sub
or
pop
and
and
sbb
lret
and
std
mov
movsb
or
in
jns
sbb
test
mov
pop
inc
jb
popf
mov
int3
mov
mov
sarl
cmp
mov
sub
sbb
mov
sub
dec
pop
sub
in
fdivrs
pop
lods
insb
dec
fidivrl
mov
insb
xchg
sbb
xorb
dec
hlt
fucom
lcall
fcmovbe
and
ss
pop
xchg
ret
jbe
lcall
loopne
dec
xchg
xor
aam
adc
jb
das
pushf
mov
aas
lods
or
jnp
jno
stos
cs
imul
xchg
xchg
sub
inc
and
push
and
inc
ret
xor
movsl
loop
ds
movsl
sahf
rclb
or
outsb
sub
xchg
xchg
fistpl
adc
xor
jle
pop
sahf
ret
out
test
mov
push
xor
fimuls
hlt
sub
fstpt
dec
inc
dec
cmp
or
scas
push
push
addb
or
add
add
mov
pop
or
pop
punpckhwd
add
mov
inc
mov
xor
dec
divb
fmulp
jecxz
mov
jb
mov
lret
out
pop
xchg
mov
loopne
pop
push
dec
mov
push
mov
jl
cmp
push
xchg
xchg
pop
imul
pusha
cmpsb
outsb
cwtl
ja
cmp
xchg
dec
inc
dec
or
and
pushf
fwait
fcoml
insl
sbb
test
aam
cmpsb
pop
and
adc
mov
jae
in
jecxz
sar
mov
out
cmpsb
in
xor
popa
push
idivb
orl
jns
inc
xor
lcall
cmp
adc
scas
mov
aaa
pop
push
in
ss
mull
movsl
hlt
pop
push
cmpsb
sti
mov
and
push
ret
add
scas
xor
sbb
jbe,pt
insb
sbb
je
jne
ret
xor
shr
mov
mov
lds
paddusw
lods
js
lods
xchg
add
test
in
push
pop
xchg
test
gs
outsb
test
in
cmpsb
or
fs
dec
push
ficoms
cli
ds
or
lret
mov
repnz
pop
cmp
add
addr16
add
mov
call
jl
sbb
mov
popa
push
xchg
das
inc
add
push
adc
imul
lods
test
add
roll
push
imul
cmp
cmpl
add
mov
aam
ret
inc
sub
outsb
outsl
fistpl
loop
jmp
lods
push
jmp
outsl
leave
cmp
ffreep
sbb
pop
out
fimuls
ret
mov
shll
mov
and
jo
pmuludq
push
push
cmp
or
daa
lcall
stos
sub
inc
fmull
loop
inc
xchg
adc
jg
fistpll
imul
jnp
inc
fdivrl
mov
ljmp
aad
adc
inc
std
fisttpl
jo
pop
sub
js
xchg
dec
addr16
inc
mov
cmp
shll
mov
inc
pop
inc
sbb
push
inc
pop
add
mov
loopne
pop
push
lret
push
jo
xor
in
test
movsb
cmp
jge
stos
inc
icebp
and
lret
faddl
mov
xor
mov
jecxz
jb
repnz
mov
pop
rclb
xchg
ds
jecxz
mov
stc
insb
aaa
push
in
dec
fcoms
pop
mov
lcall
mov
gs
pop
inc
pop
movsl
sub
inc
es
sub
hlt
pop
add
sbb
lock
dec
adc
mov
xor
adc
jnp
pop
cwtl
out
andb
popf
loope
add
pop
pop
push
ss
inc
inc
shrb
fisubl
roll
test
push
or
nop
or
mov
imul
xor
add
stos
and
shl
adc
inc
push
sbb
sbb
sbb
dec
rolb
jmp
xor
pop
mov
mov
add
pop
sub
push
adc
movsb
mov
andb
call
aas
sar
mov
std
fistl
mov
pop
andl
push
in
ret
daa
and
fdivrp
sub
push
push
ljmp
mov
inc
int
out
jp
imul
mov
jg
mov
sbb
inc
mov
push
jns
sahf
add
push
mov
push
pop
pop
push
in
movb
loope
push
xchg
sub
adc
mov
cmp
inc
cmp
sarb
ret
inc
pop
cmp
incb
and
and
fistpl
aas
clc
jle
jmp
adc
ret
xchg
and
orl
xchg
pop
inc
arpl
lock
adcb
outsb
xchg
sbb
lcall
push
and
jecxz
popa
test
dec
fwait
test
cmp
jp
jl
insl
in
push
add
xchg
les
jb
popf
mov
les
xchg
mov
cmpl
outsl
cli
jecxz
or
xchg
repnz
ja
mov
jns
mov
jp
mov
hlt
cwtl
cmp
xchg
repnz
dec
inc
xchg
out
pop
icebp
mov
mov
mov
xor
push
mov
dec
jae
jecxz
mov
jno
lods
inc
push
xlat
xchg
ret
cs
iret
push
iret
andl
movl
jbe
adc
sub
loope
sti
lret
fdivrl
rolb
out
pusha
cmc
test
ret
inc
in
sub
stos
inc
addr16
cs
sub
pop
in
push
sub
and
add
stc
xor
fldenv
popf
out
in
mov
push
into
outsb
mov
cli
xlat
cmp
pop
push
jge
push
lret
int
jle
popf
xlat
sub
pop
push
fldl
iret
xor
or
mov
mov
dec
dec
mov
std
inc
and
mov
sbb
jno
andl
add
ljmp
popa
pop
adc
pop
adc
adc
push
lea
pop
cmp
pop
repnz
lahf
sub
outsb
pop
shrl
in
sub
sbb
xchg
test
pop
fcompl
xlat
fwait
sbb
jp
push
add
push
out
mov
cmp
jne
or
mov
scas
and
mov
inc
notb
mov
lret
push
mov
std
mov
sbb
out
data16
gs
sub
jp
incb
mov
mov
cmpsb
or
stc
movsl
lret
push
push
inc
inc
dec
out
and
ret
pop
cmp
mov
or
add
sub
std
adc
push
adc
xchg
lahf
add
xchg
adc
push
cmpsl
cwtl
stos
dec
idivl
xchg
sbb
adc
pop
xor
pusha
fstpt
pushf
push
and
sub
or
add
fld
mov
sub
daa
mov
fsts
push
sub
es
pop
mov
out
pop
mov
or
repnz
push
inc
jne
inc
idiv
lock
ds
ja
mov
rol
sub
mov
add
sahf
sub
pusha
stc
movsb
dec
and
xchg
stos
sub
and
mov
insb
fwait
insb
pop
in
push
fsubrs
xchg
hlt
jge
bts
and
movl
xchg
aaa
push
add
adc
cmp
stos
or
bound
cltd
insl
leave
xchg
in
fcoml
pop
out
lods
sbb
sbb
fisttps
xchg
rorl
push
sbb
sbb
cmp
imul
or
stc
ficoml
or
jnp
inc
jo
pop
movsl
push
xor
cli
or
nop
add
inc
arpl
test
mov
repz
aaa
les
push
sub
test
xchg
sub
aad
gs
stos
repz
cmp
cmp
sub
subb
stos
dec
push
jno
ret
mov
jl
push
fisttpl
pop
pop
mov
push
add
int3
lds
icebp
loope
or
aas
xor
mov
jl
xchg
adc
call
jns
mov
mov
add
mov
mov
sub
pushf
add
push
xchg
out
sub
or
out
cld
test
les
rcl
sub
adc
and
sub
xor
sbb
lods
sbb
jae
cs
xlat
sub
or
call
and
imul
pop
bound
pop
ret
or
xor
fildll
xchg
stc
pushf
pusha
push
jns
shl
int3
je
cli
lods
lret
dec
icebp
cs
cli
mov
add
imul
dec
mov
jmp
daa
pop
xor
xor
pop
fwait
push
mov
repnz
and
scas
pop
jmp
ret
mov
jmp
pop
lret
adc
imul
xchg
daa
adc
sub
inc
adc
out
adc
push
push
xor
dec
cmp
dec
xchg
pushf
sub
loope
jnp
add
int
adc
test
jmp
fucompp
clc
sub
pop
out
xchg
xor
leave
insb
sahf
rcll
inc
add
push
sbb
jbe
int3
adc
mulb
mov
mov
jae
iret
test
cmc
push
aas
icebp
xchg
sbb
dec
rcrl
aad
shrb
mov
loope
loopne
inc
dec
xchg
bound
pushf
xor
dec
inc
pop
adc
pushf
cmp
xor
mov
xor
lcall
inc
or
sbb
dec
push
int
loopne
mov
hlt
shrl
das
mov
pop
out
pop
or
inc
sbb
icebp
mov
mov
scas
jl
mov
je
mov
mov
mov
lods
jmp
xor
dec
cwtl
js
test
fsubrl
clc
pusha
jae
add
in
mov
into
lock
sbb
xor
cld
cmp
rol
inc
mov
bound
inc
mov
std
addr16
insl
scas
pop
cld
add
sub
notl
std
xchg
or
xchg
dec
lcall
jnp
mov
ljmp
inc
pop
pop
cmpsb
jo
xchg
cwtl
lret
mov
hlt
fwait
jns
aas
sub
adc
lock
or
js
dec
stos
jae
js
cmp
mov
mov
mov
loopne
mov
pop
test
shrl
js
ret
jne
inc
imulb
dec
dec
leave
stos
ffreep
out
mov
jns
cltd
loope
cmp
cmpb
int
adc
pop
bound
push
and
ret
or
mov
sbb
inc
cmp
test
cwtl
out
js
fs
xchg
lahf
mov
leave
or
xchg
fprem
xlat
pop
jns
outsb
xchg
cli
push
sbb
add
test
sub
mov
xor
fwait
data16
les
xchg
leave
jb
aam
in
or
mov
nop
or
jl
mov
mov
dec
idivl
aam
pushf
ret
lds
fucomp
xor
loopne
cltd
dec
jmp
push
jmp
add
movsb
int3
push
mov
pop
cmpsl
dec
jg
mov
imul
into
je
popl
pusha
jmp
jmp
mov
rcl
add
addl
sub
insb
sti
inc
out
nop
and
push
scas
jg
fnstsw
mov
leave
ficoml
mov
imul
pop
mov
push
xor
orb
sub
mov
push
sub
or
test
rcl
out
loopne
jae
sbb
push
dec
or
rol
push
lds
cmp
xchg
xor
bound
adc
mov
mov
js
in
xlat
les
into
mov
mov
in
or
inc
and
push
push
push
inc
loope
ret
rcll
adc
jmp
sub
shl
mov
mov
push
leave
aas
and
stos
xchg
loope
mov
es
outsb
and
pop
dec
test
sbb
sub
dec
jecxz
loop
mov
cmp
mov
mov
xchg
gs
repz
das
add
and
xlat
sbb
sub
jne
into
add
mov
add
outsb
and
lds
arpl
sbb
dec
mov
xchg
in
int
pop
lret
and
mov
add
cmp
pop
shll
in
inc
push
dec
arpl
iret
leave
outsb
fistpl
pop
fstl
rcr
jns
sub
push
cmp
and
jno
push
cmp
xor
adc
push
mov
lods
rcrl
pop
sbb
pop
sbb
sub
push
mov
leave
cmc
cmp
out
ret
mov
ret
add
dec
stos
insb
testb
and
mov
orb
cmc
data16
cltd
adc
shll
jecxz
incl
push
fidivs
dec
pop
cmpsb
sbb
loopne
lahf
insl
cmpsl
mov
gs
add
sahf
inc
dec
and
loopne
and
cmp
daa
pushf
icebp
sbb
jg
pushf
and
mov
cltd
sbb
sbb
sbb
dec
push
enter
jno
popf
stos
mov
or
mov
adc
sbb
orl
jb
sub
sbb
mov
adc
pop
or
inc
mov
jno
int
jl
fcoml
mov
or
adc
adc
int
mov
fs
pop
jge
dec
or
inc
inc
call
dec
mov
xchg
fsub
inc
mov
pusha
pmaxsw
outsl
stc
jg
sbb
or
sbb
pop
pop
xlat
or
xchg
stos
dec
xchg
xchg
dec
jne
pop
ja
and
mov
sbb
sbb
cmp
mov
popf
in
imul
cmc
insl
aam
enter
in
and
or
dec
fistl
sbb
clc
mov
mov
or
rorb
fidivs
push
inc
push
cltd
sbb
stos
dec
cli
and
jnp
or
push
and
jmp
mov
cmp
push
stos
mov
push
or
push
test
xchg
cli
dec
data16
in
ret
xor
dec
test
out
mov
arpl
add
in
test
mov
aaa
ror
cltd
inc
out
addb
mov
jns
jl
xor
leave
clc
not
ficoml
cmpb
shl
lcall
imul
aas
mov
aas
add
add
push
push
mov
xor
push
lahf
shlb
fs
or
int
mov
out
icebp
ss
fwait
ds
mov
loope
jmp
rorl
pushf
cmp
loopne
scas
push
ficompl
loopne
pop
clc
jbe
fcomp
notb
pop
push
mov
outsl
imul
cltd
lahf
les
popf
jmp
sti
push
push
sarl
in
daa
push
cmp
push
pop
out
push
and
xor
xor
std
ds
sub
mov
jae
jg
xor
or
xchg
sub
or
ds
fsubr
inc
ret
xorb
loopne
adc
ret
mov
sub
adc
aaa
mov
shl
cmpsl
fsubrl
or
leave
mov
cmp
pop
mov
lahf
mov
xor
push
push
cmp
lahf
add
adc
std
and
fstpl
test
or
add
cmpsl
fcompl
scas
cmpsb
mov
mov
jae
fidivrl
xchg
cmpsb
push
inc
scas
pop
xchg
jbe
xor
mov
lock
add
leave
les
cli
xchg
sbb
push
divl
push
lcall
ficompl
pop
xor
sub
ljmp
add
inc
testl
clc
xchg
jp
dec
fwait
cmc
pop
pop
leave
das
or
sub
sahf
repnz
push
pusha
sub
and
cli
or
xchg
int
pusha
in
ja
jnp
jne
mov
stos
test
movsb
rcrb
cli
mov
xlat
xor
nop
clc
mov
jg
push
aas
shlb
jns
push
inc
xchg
insl
mov
sarb
cli
mov
jae
inc
loopne
scas
outsb
dec
pop
push
mov
and
sub
cs
nop
jg
mov
arpl
int
popa
jp
push
fcomps
and
push
jle
inc
pop
ljmp
ret
rolb
jg
sub
push
cmp
mov
mov
fcmovne
test
push
les
sarl
cmp
movsb
test
mov
inc
sub
and
scas
into
imul
push
adc
mov
cwtl
aad
mov
add
inc
imul
push
inc
jae
pushf
jne
cmpsb
xor
test
cs
jne
std
dec
jno
ret
bound
or
inc
or
out
lahf
das
aas
hlt
aas
int3
mov
out
out
add
outsb
movsl
rcl
in
stc
out
and
mov
mov
sub
daa
iret
inc
movsb
insl
pop
lds
stos
push
not
addr16
xchg
and
daa
xor
jae
negl
mov
xor
rcr
jns
cmp
stos
cwtl
adc
cmp
cmc
pop
stc
bound
dec
mov
cmp
dec
loop
pop
ret
push
push
xchg
mov
add
add
push
and
dec
add
pop
sub
push
or
ret
jb
jl
pusha
inc
ds
push
cli
bound
jge
and
add
stc
push
loopne
in
test
xchg
and
cmpsl
mov
dec
or
or
and
ljmp
cmp
inc
push
mov
fcmovbe
mov
fiadds
add
xor
enter
shr
xchg
movsl
or
insl
fwait
enter
inc
pop
shrl
fmuls
pop
xor
or
sub
shlb
movsl
cli
enter
sbb
xchg
sub
jne
pushf
xor
outsl
fldenv
imul
js
or
lcall
faddl
jnp
mov
out
repz
jp
inc
add
mov
push
out
jp
cmc
sahf
sbb
daa
push
push
mov
rorl
inc
cmc
jmp
and
mov
fdivp
pop
sbb
mov
dec
jae
mov
mov
xchg
iret
stc
cwtl
pop
dec
xchg
dec
out
xor
or
dec
bound
je
jg
sbb
inc
cld
hlt
pusha
sub
mov
pop
sub
lret
push
les
cltd
adc
rcll
pop
jae
gs
pop
out
cs
imul
sti
push
mov
mov
sbb
sbb
test
sub
adc
bswap
jp
pushf
int
inc
es
push
js
jb
push
sbb
movsl
and
orb
aas
imul
mov
xchg
adc
add
pusha
pushf
xchg
lcall
xor
mov
mov
call
dec
inc
mov
cltd
inc
and
or
iret
lahf
xchg
xchg
imulb
sbb
fldcw
or
aad
dec
cmp
in
pusha
cli
jecxz
adc
xlat
xchg
mov
mov
mov
stos
jo
sti
lahf
jl
lds
inc
call
iret
roll
je
jg
mov
adc
xor
cs
pusha
pop
adc
ret
cmp
dec
call
mov
pop
sbb
insb
mov
jb
into
xchg
jg
jl
pop
pop
es
and
insb
adc
dec
mov
ja
pop
inc
jle
outsl
mov
mov
push
inc
mov
cmc
inc
sub
sbb
pop
iret
jl
jmp
sahf
and
repz
dec
fbstp
xchg
repnz
add
aas
div
or
cmp
clc
scas
cmp
xchg
pop
ja
test
pop
int
cmp
xchg
mov
mov
add
stc
lret
push
rcr
divl
aas
test
dec
ret
sbb
jecxz
add
imul
hlt
enter
or
mov
movsb
cwtl
dec
or
jg
push
ss
adc
sub
popa
scas
push
jo
push
rol
push
int
in
insb
clc
sbb
xchg
cmpsb
jecxz
mov
or
xor
dec
sub
pop
lock
in
lea
mov
into
cltd
mov
push
stos
stc
scas
sub
outsl
in
jecxz
int3
sub
in
add
or
mov
adc
dec
mov
add
out
and
aas
push
fwait
xchg
dec
pop
add
xor
movsb
lock
xchg
int3
pop
repz
rcrb
shlb
aam
sub
mulb
jns
icebp
inc
into
add
bound
movsl
lahf
stc
test
xchg
dec
push
lret
fs
jne
mov
and
add
mov
xchg
adc
in
int
xchg
xchg
add
rolb
mov
sbb
mov
dec
mov
mov
loope
xor
cs
mov
lods
fisttpll
mov
pop
jp
push
add
imul
cmpsb
fsubrs
mov
test
push
ljmp
pop
imul
test
cs
jle,pt
idivb
pop
out
in
enter
or
xchg
sbb
cmp
test
movsb
add
test
inc
shl
je
lahf
cmp
sarl
lods
xchg
sbb
sbb
jle
pop
out
push
pop
jae
shr
dec
js
adc
push
mov
call
test
das
rcrb
mov
shr
loopne
sub
jne
pop
xchg
fs
test
push
pop
mov
pop
mov
aam
sub
mov
cmp
movsl
orb
lret
xchg
dec
sahf
ret
out
sub
dec
jl
fnstenv
mov
ds
outsl
xlat
pop
jmp
sub
xchg
push
mov
rcrb
lods
in
xor
jne
popf
aas
out
roll
adc
repz
inc
push
stos
sbb
xchg
xlat
push
and
fdiv
and
push
fistpll
lods
cmp
ss
sub
and
or
pop
mov
data16
fnsave
pop
int
imul
mov
pusha
mov
xor
sbb
push
mov
repnz
jns
jg
fcomps
xor
xchg
ffreep
mov
xlat
fdivp
daa
lret
sbb
and
test
ss
pop
push
dec
xchg
fsubl
adc
and
lods
cmp
pop
push
jle
dec
hlt
xchg
sbb
xchg
or
aas
scas
push
test
movsb
add
fs
enter
lcall
xor
data16
and
fbstp
xchg
or
inc
sbb
push
jp
rcrb
sub
mov
in
stc
ljmp
and
addr16
imul
fadds
jmp
enter
mov
dec
fsubrs
cmp
push
and
addb
lea
sub
xor
ja
repnz
mov
xchg
xchg
int3
and
inc
jne
xor
aas
push
add
lret
mov
aad
orl
mov
jmp
loop
popf
push
scas
std
jne
and
cwtd
fsts
out
outsb
sbb
ds
lock
pop
push
mov
hlt
jecxz
lret
rorb
fcomps
mov
bound
in
sbb
jb
fwait
add
xchg
add
daa
sti
xor
pop
je
sbb
lahf
and
and
jnp
pop
loop
loop
add
inc
int3
jmp
adc
lds
xchg
or
pop
pop
aaa
xor
xlat
adc
adc
push
adc
fmuls
sub
mov
lods
sub
cmc
int3
insl
add
test
xor
inc
sub
xor
test
popa
pop
leave
je
ret
cmp
and
lret
push
test
push
and
repz
mov
xchg
pop
test
add
jnp
sbb
jae
mov
shrb
dec
and
and
or
jp
imul
loope
mov
push
in
push
xor
dec
adc
repz
cmp
scas
leave
imul
test
mov
pop
cwtl
test
lea
fldt
dec
ror
addr16
repz
aas
sub
xor
adcl
add
adc
call
lock
fwait
pusha
ljmp
jb
push
add
lock
sub
jnp
loopne
dec
jg
aaa
shl
and
sti
xchg
xchg
cmp
cmp
cmc
data16
in
stos
mov
sbb
mov
cmp
arpl
lret
jecxz
push
js
les
or
es
push
sub
ficoml
pop
push
and
pop
cmp
dec
pop
idiv
fstl
rcll
ljmp
enter
aas
sti
xor
push
pop
rorb
int3
sub
popa
adc
mov
dec
scas
cmpsl
ljmp
jp
jmp
int
sub
mov
shr
fcompl
push
fmull
sahf
pop
inc
bound
popf
in
jo
fbstp
mov
inc
jmp
aas
push
clc
lea
and
add
xchg
adc
out
mov
pop
or
pushl
hlt
and
insb
daa
cmc
shll
add
aam
push
pop
pop
test
xchg
arpl
mov
jl
jns
xchg
pusha
out
and
push
cmc
push
jecxz
xchg
and
out
inc
mov
mov
mov
pushf
inc
lret
shll
xor
pop
pop
jns
jns
stc
mov
fwait
lcall
scas
jne
or
ror
cld
inc
jne
cli
lods
and
cli
cli
shll
icebp
adc
imul
stos
lcall
pop
lods
push
ds
cmp
push
aam
xchg
je
nop
lea
and
mov
movnti
push
xchg
inc
jbe
and
push
fcmovb
sbb
mov
mov
xchg
imul
push
adc
popf
ret
push
sbb
movsb
ret
xlat
mov
loopne
or
cwtl
loop
ljmp
jo
or
addr16
arpl
and
das
dec
gs
pop
sub
ljmp
je
push
mov
xor
insl
icebp
lods
in
or
enter
out
push
das
notb
jle
in
xchg
sbb
imulb
sub
fildl
xor
scas
js
pop
insb
add
xor
or
xor
into
aam
inc
cwtl
jno
in
shrl
adc
repnz
test
je
insl
stos
push
in
jmp
dec
addr16
icebp
push
ss
fmul
jecxz
xor
push
call
dec
insl
inc
ljmp
out
push
clc
pop
dec
push
daa
push
frstor
or
jne
inc
jl
mov
mov
ds
stos
setnp
add
cwtl
sti
fs
lds
repnz
or
sbb
mov
dec
cltd
das
sub
and
pop
fucomp
dec
mov
jnp
jg
mov
fiadds
into
push
mov
sbb
pop
aam
adc
movsb
rclb
sub
mov
jmp
mov
in
mulb
int3
cmc
cmp
stc
sbbl
sarl
stc
adc
add
adc
dec
dec
loopne
push
jo
dec
clc
sub
cmp
or
inc
sub
sub
adc
aad
test
jge
imul
std
cmpsl
cld
test
test
mov
dec
jecxz
rcll
add
mov
and
icebp
inc
movsb
dec
dec
inc
dec
fcomi
mov
add
mov
int
leave
mov
add
xlat
jle
scas
xchg
out
xchg
mov
outsb
mov
pop
mov
fs
adc
jmp
cmp
movsb
daa
xchg
sbb
mov
xchg
push
push
jbe
sbb
add
add
jge
mov
cmpsb
mov
andb
and
jnp
popa
ljmp
mov
xchg
xor
dec
fnstsw
iret
pop
out
and
ss
ret
xchg
out
adc
outsl
leave
sub
mov
pop
in
sub
ljmp
jle
push
loopne
out
jnp
and
adcb
pop
daa
fmuls
stos
jg
xchg
mov
push
insl
sbb
adc
int3
xchg
mov
adc
mov
mov
jl
push
xchg
adc
lods
mov
es
rol
mov
cmpsb
mov
push
sbb
ret
movsl
out
xchg
and
cli
pop
inc
and
push
or
stos
jp
mov
mov
jb
dec
addb
lea
dec
cltd
lods
cmp
or
xor
pop
xchg
sahf
mov
mov
and
in
push
repz
adc
lock
mov
loope
inc
pop
dec
push
push
mov
adc
imul
imull
mov
mov
inc
push
sbbl
andb
xor
and
out
cmpsl
cmp
mov
arpl
hlt
test
js
cmp
lods
sbb
cltd
sti
mov
dec
inc
jns
ficompl
fildll
jge
cmc
cltd
arpl
test
addl
jbe
je
pop
fidivrs
xchg
jecxz
out
mov
test
mov
nop
mov
push
mov
add
adc
dec
pop
sbb
test
pop
dec
sbb
scas
into
push
xor
cmp
mov
jb
aaa
mov
push
mov
fwait
mov
mov
shrb
mov
not
xor
popf
mov
sahf
aad
pop
sti
scas
test
xor
insb
sub
cmpsl
cmp
push
mov
sahf
loop
pop
inc
mov
mov
sbb
mov
fnstsw
int3
popa
jp
test
sbb
xchg
out
xlat
das
mov
decl
sbb
out
inc
movb
add
sahf
aas
lods
mov
cmp
xchg
push
xor
fidivl
add
jnp
gs
cmp
jne
pop
and
xchg
imul
jmp
popa
push
movsb
push
nop
and
lods
inc
sti
test
xor
sbb
jl
mov
lahf
cmp
mov
repz
mov
shlb
inc
inc
cmpl
add
xchg
sub
subb
push
lock
pop
push
in
mov
push
mov
rcrb
out
jp
xchg
pop
vpaddq
inc
xchg
pop
dec
fcoml
jg
sub
sub
out
fcoml
pop
gs
mov
adc
rorl
push
mov
mov
push
mov
or
pop
pop
lods
fstpt
int
scas
pop
mov
ds
testb
lds
add
and
mov
inc
fwait
into
std
xchg
push
cmpl
pop
jmp
mov
jae
scas
out
fistpll
out
inc
repz
jp
pop
push
pop
lods
xor
out
add
adc
inc
mov
dec
daa
push
repnz
mov
add
pop
xchg
in
ss
xchg
repnz
out
clc
cltd
add
std
testl
cmpl
mov
xchg
xchg
ja
or
lret
lret
add
mov
movsb
lret
sti
xchg
adc
cltd
fisubrs
mov
test
fstps
mov
push
jno
dec
ds
nop
sti
pop
inc
jnp
or
xchg
mov
ficompl
jb
xchg
cli
push
sub
xchg
mov
aaa
movsl
jg
lret
jmp
cmp
cmp
inc
push
adc
test
xchg
and
sub
cs
pusha
mov
orb
inc
dec
imul
cmp
pop
leave
nop
ljmp
cld
ljmp
imul
addr16
cld
call
addr16
jo
pop
jnp
sbb
dec
dec
dec
sbb
pop
fcoml
sti
sub
xchg
sarb
or
inc
insl
cmp
sbb
stos
movsb
xchg
iret
mov
out
push
or
and
pushf
inc
pushl
push
je
mov
pop
aam
cmp
xor
mov
ret
xchg
sti
inc
imul
sbb
lock
test
pop
mov
or
or
pop
lahf
stos
sbb
and
or
mov
jl
xor
stc
sub
push
xchg
clc
hlt
loopne
call
loope
push
addl
jbe
inc
or
cmp
imul
stos
pop
fs
lods
and
cltd
and
cmp
push
xchg
lcall
inc
test
and
sub
sub
fistpl
insb
pop
out
mov
adc
sub
sbb
inc
shll
cwtl
push
cmp
or
stos
jae
shrb
clc
mov
sbb
or
lcall
pop
and
add
mov
outsb
mov
ret
mov
outsl
testl
mov
sub
mov
orl
daa
jp
jo
dec
jl
insl
loopne
push
sarl
pop
insb
call
cmp
dec
cs
cmpsl
push
adc
fcmovnu
imul
fstps
inc
arpl
inc
jge
jns
sbb
dec
mov
mov
xchg
inc
jecxz
test
sbb
in
in
xchg
shlb
push
cmp
adc
call
test
ja,pt
jecxz
mov
fdivrs
cmpsl
add
push
adc
scas
fcmovnu
aad
jo
int
stos
repnz
fs
out
xor
xor
arpl
inc
nop
push
xchg
popa
lret
jmp
arpl
adc
or
cs
xor
out
pop
int3
test
and
and
jl
xlat
jge
cmpb
les
mov
dec
cmp
cmc
out
mov
in
or
xorb
cli
pop
jecxz
mov
add
adc
jae
scas
stc
mov
cmpsl
rorb
ret
movsb
lea
inc
in
insl
dec
xchg
jno
mov
push
sub
in
out
push
pop
int
push
and
pop
dec
lcall
push
cli
cld
fwait
pop
cmpsl
dec
jge
out
stos
push
push
imul
or
enter
mov
ficompl
pop
sbb
jb
mov
dec
push
add
mov
or
js
push
lret
ret
daa
inc
and
popa
outsb
sub
xchg
mov
lods
mov
sub
loope
push
and
rorl
jle
jne
rorl
mov
add
or
mov
pop
xlat
push
mov
push
mov
cmpsb
dec
in
jno
add
daa
add
mov
call
call
adc
pop
fsubrl
insl
xor
pmaxsw
fldt
ljmp
imul
sbb
or
es
out
shlb
jnp
inc
in
xchg
hlt
aad
fcompl
mov
loop
xchg
push
shlb
fidivrl
xchg
js
stc
test
in
mov
icebp
and
fdiv
scas
out
jns
add
arpl
lcall
js
inc
xchg
push
insl
rorb
mov
lea
add
icebp
popa
jae
xchg
adc
in
add
cli
fwait
lods
ret
xchg
lods
ja
fisubrs
pop
jl
add
and
sub
inc
fcompl
faddl
mov
pusha
add
stc
mov
jb
rcl
dec
add
test
jge
clc
jle
sarl
and
cmpb
daa
nop
inc
sub
xchg
out
adc
popa
mov
out
xor
or
lcall
movsl
shl
inc
mov
inc
insb
stc
lock
cld
dec
sbb
sub
fldt
pushl
lea
imul
push
aaa
and
lret
sbbb
and
dec
aad
pop
pop
xchg
sub
cmp
test
cmp
mov
dec
andl
cmp
scas
mov
idivb
inc
outsb
xor
xchg
or
and
push
push
or
jns
repz
fs
cltd
cmpsb
mull
xchg
jb
push
cmpsb
xchg
mov
mov
xor
pop
dec
daa
pop
mov
jbe
jmp
add
mov
pop
ret
fildl
dec
and
fdivrl
sbb
hlt
inc
jmp
xor
xor
test
pushw
mov
ja
imul
mov
xlat
fistps
cmp
popa
dec
adc
pop
test
fcoms
or
xchg
int3
push
jle
sbb
andb
add
repnz
inc
cwtl
stos
mov
cli
inc
push
sub
mov
lock
mov
xchg
out
repz
popf
cmp
sahf
cmp
push
pop
outsb
or
test
jmp
out
mov
or
insl
cmovae
andb
gs
sub
out
out
icebp
push
dec
cltd
xor
or
icebp
mov
outsl
loope
into
cmp
pop
push
cmp
mov
loope
mov
lea
dec
pop
jnp
sbb
jl
sub
arpl
bound
cmp
xor
ret
mulb
and
push
pop
ds
pusha
shrb
jne
inc
xchg
stos
pop
les
jmp
fcmove
mov
insl
outsb
mov
jnp
sbb
jmp
sti
test
dec
mov
inc
loope
lret
pop
sub
notl
gs
pop
push
pop
cmp
sub
shrl
icebp
or
sub
add
xchg
mov
mov
jae
xchg
xchg
pop
loop
std
dec
clc
aas
out
pop
or
cmp
xchg
ss
sub
xor
int3
push
lea
sahf
iret
xlat
jmp
lods
lret
lret
push
cld
dec
cmpsb
fsubrl
or
call
dec
jne
rcl
adc
sbbl
inc
enter
or
loope
ss
mov
stos
mov
sahf
mov
xchg
jns
stc
fstp
dec
pop
test
mov
jo
mov
repnz
and
push
xlat
out
adc
dec
dec
add
push
jge
dec
stos
and
add
dec
dec
pop
js
adc
add
fcmove
jae
push
aaa
mov
mov
xor
fdivr
lods
jg
nop
mov
test
stos
xor
jecxz
leave
sbb
sti
jo
and
cmpsb
jne
inc
fdivl
daa
xchg
in
cwtl
inc
xchg
xchg
test
cld
dec
push
fdivl
inc
out
and
std
js
das
orl
ljmp
mov
ret
pop
repnz
sbb
push
data16
xchg
sbb
mov
out
js
ja
dec
std
lock
xchg
les
ljmp
ficoms
xorl
or
or
xchg
test
iret
add
cmp
or
xor
nop
dec
rclb
and
push
leave
pop
mov
shll
jl
andl
mov
lret
push
sarl
icebp
ja
inc
lret
adc
js
imul
stos
clc
cmp
daa
lahf
sub
xor
lret
cmp
add
cmp
subl
mov
and
cld
cli
mov
fsubrl
inc
xchg
in
fdivl
scas
push
push
pop
adc
call
push
insl
mov
int3
stos
int
in
pop
fwait
imul
mov
dec
repz
bound
lahf
andl
cmpl
xor
push
mov
ficompl
scas
sbb
sub
imul
fildl
inc
jbe
insl
push
arpl
lcall
cld
xor
loope
imul
sbb
out
add
and
or
sbb
lods
test
mov
push
repnz
aam
movsl
and
or
dec
push
fs
rcrb
clc
pop
and
mov
cmpsl
mov
packssdw
sub
cld
out
ss
fstps
pusha
dec
push
inc
push
scas
dec
and
out
and
jle
ficoms
push
mov
aad
in
push
mov
hlt
push
mov
xchg
push
in
sub
jl
mov
in
lods
arpl
lret
mov
ljmp
adc
out
mov
lods
out
adc
leave
das
pop
add
push
fcoms
jg
cmc
xchg
popa
sbb
xchg
inc
pop
jno
jns
loope
push
inc
add
cld
dec
mov
loope
or
cmc
int
cmp
fimuls
and
xor
mov
or
mov
adc
and
xchg
fldt
addr16
int3
lret
cmp
mov
mov
push
xor
jle
add
ds
lret
mov
setae
int3
mul
inc
sarl
nop
aaa
lods
fistl
movsl
or
outsb
stc
pop
mov
test
sbb
add
negl
or
mov
or
cli
ds
negb
jp
dec
push
out
bound
or
push
mov
sbb
add
push
sub
loop
movsl
sti
in
scas
push
adc
pop
pop
aam
loope
mov
test
mov
push
rcll
mov
jno
adc
push
hlt
mov
subb
sub
push
into
or
xor
fisubrl
mov
jp
jo
jle
inc
ja
inc
pop
mov
adc
dec
mov
add
fld
xor
ret
inc
mov
js
lods
mov
mov
mov
cltd
or
dec
ds
aaa
jmp
pop
bound
fiadds
dec
cmp
mov
jecxz
pop
shlb
rcl
sub
shrl
mov
pop
dec
add
cmpsl
xor
inc
push
push
fisubl
mov
ds
inc
jo
mov
mov
mov
inc
loope
outsl
or
in
inc
loop
sti
mov
fnstsw
mov
int3
xor
mov
fdivrl
int
hlt
jmp
or
imul
lods
das
mov
test
jecxz
cmp
test
or
mov
and
aam
adc
sub
rcrl
cmpsb
fwait
dec
or
daa
pop
lds
pop
test
pop
fsubrp
outsb
scas
jmp
mov
fcoml
jno
je
cld
insb
popa
dec
add
lea
mov
roll
gs
das
fsubrl
mov
mov
sub
out
and
pop
sbb
mov
cmc
xor
rol
fwait
ljmp
arpl
or
dec
imul
inc
out
movsb
mov
jno
cmpsl
out
jl
add
repnz
xchg
mov
movsb
add
jl
hlt
pop
insl
insl
in
add
loop
mov
dec
in
pop
mov
lods
push
jns
fcoms
push
lret
dec
jns
lahf
jl
lock
sbb
mov
imul
dec
cmp
or
into
xchg
rcll
xlat
faddp
daa
dec
jbe
jno
mov
jecxz
popa
nop
xlat
sbb
js
push
pop
push
in
addr16
sbb
ret
sub
fistpll
push
repnz
int3
mov
push
das
push
dec
and
cmp
movsl
or
dec
out
xchg
jecxz
push
enter
fs
stos
fnstsw
adc
inc
sub
les
lea
cmp
sub
mov
sbb
test
inc
das
js
les
int
mov
fcomps
mov
sbb
aad
lods
incl
out
mov
lods
cmp
stos
mov
add
into
cli
xlat
iret
xor
cs
mov
int
add
push
mov
fldt
cwtl
adc
stos
negb
inc
clc
loopne
add
mov
loop
lahf
mov
fbld
lods
ror
iret
ljmp
or
aad
mov
cmp
dec
mov
sub
push
dec
sub
mov
repnz
data16
xor
mov
shrl
push
mov
call
sbb
pop
pop
cmp
jecxz
leave
lods
icebp
push
in
roll
out
inc
xchg
pushf
mov
adc
arpl
mov
out
scas
fistpl
ds
jno
cmp
sub
mov
hlt
xchg
jle
fs
mov
mov
xor
pop
adc
lds
push
sub
lods
and
ss
sbb
lahf
xor
inc
packssdw
pop
ds
or
xchg
ds
js
pop
out
xor
cli
das
outsl
cmp
ds
das
pop
mov
std
stos
and
jle
std
add
jae
insb
jl
pop
aas
push
jne
iret
cmpsb
mov
mov
push
fbstp
jmp
fnstcw
xchg
int
mov
les
sarl
sub
jne
and
push
insl
movsb
leave
dec
scas
cmp
mov
shlb
outsl
adc
or
mov
jo
fbstp
ret
fwait
mov
push
popa
mov
xchg
clc
add
mov
adc
and
mov
test
jecxz
enter
sbb
inc
out
mov
cmp
xchg
lea
push
repz
ret
cmpsl
fdivl
andb
sub
rolb
add
popf
mov
mov
imul
daa
test
mov
sub
mov
sub
not
orl
xchg
lds
xchg
pop
jb
sbb
cmp
movsb
add
fiadds
insb
lret
ret
in
mov
push
dec
jl
lods
mov
lds
lahf
mov
xchg
fstpl
aas
add
out
cmp
sub
pop
dec
iretw
mov
and
stos
mov
push
xchg
xor
ja
jle
xchg
and
in
bnd
sbb
loop
call
dec
add
push
aad
ljmp
addr16
or
push
fwait
insl
gs
lods
xor
mov
xchg
mov
pusha
stos
mov
pushf
repnz
pop
imul
pusha
mov
iret
sti
and
lea
inc
mov
lahf
sbb
adc
cld
outsl
jmp
lea
lods
iret
aaa
aam
lahf
fcomi
push
movsb
loopne
imul
lahf
movsb
cmp
lret
lahf
xchg
mov
sbbl
inc
out
loopne
sub
add
imul
lcall
aaa
mov
pop
pop
dec
xor
mov
fs
and
cmc
mov
inc
sub
adc
into
cmp
out
push
lock
orb
push
xor
popa
mov
loopne
push
cmp
imul
mov
or
in
bound
into
xchg
ljmp
mov
in
sarb
add
mov
loop
pop
push
ret
jp
push
es
out
sub
out
pop
cmp
mov
std
push
into
je
lea
es
test
iret
xor
mov
cmp
sarb
test
or
scas
rcrb
lock
insb
call
dec
lret
mov
les
mov
push
mov
xchg
jno
repz
push
das
pushf
mov
mov
sbb
aam
xchg
lods
shrl
dec
lret
pusha
pop
or
and
aam
movsl
movsl
sub
data16
cmp
or
push
jmp
popa
lods
in
push
cmp
cmp
imul
fsubrp
stos
push
test
loope
test
sbb
movsb
lcall
adc
mov
xchg
sti
cli
jl
sbbb
sbb
sub
sar
add
pop
in
xchg
sub
scas
xchg
cmpb
mov
mov
fstpl
mov
in
xor
push
imul
fildll
push
mov
and
in
adc
mov
movb
dec
push
xchg
aam
aam
out
xchg
ljmp
xor
insb
out
or
movsl
hlt
cmp
jae
or
cmpb
jns
sbbb
mov
lods
rorb
call
insl
loop
fimull
ja
call
jb
and
lahf
jo
lcall
ret
sbb
adc
dec
mov
and
xor
mov
mov
ss
xlat
dec
ret
jae
and
push
ffree
and
sub
lds
jg
cltd
push
lea
add
mov
dec
out
loop
shlb
pop
std
mov
mov
pop
icebp
pop
push
or
jb
pop
mov
bound
xchg
or
lods
dec
mov
sbb
xorb
xchg
repnz
in
pusha
js,pt
out
pop
ss
mov
and
xor
xchg
sbb
sti
cs
imulb
dec
and
mov
mov
dec
jbe
sbb
insl
pushf
and
imul
addb
mov
and
aad
fld
ja
mov
les
repz
fstpt
fwait
jb
shl
stos
loop
pinsrw
mov
mov
mov
mov
enter
leave
inc
xor
lods
insb
jbe
rolb
or
inc
test
jne
mov
js
jno
aas
add
xchg
nop
or
or
sbb
pop
dec
inc
jecxz
push
lahf
adc
rcll
fldt
mov
jecxz
aad
mov
imul
inc
push
fcoml
cmpsb
jnp
sbb
dec
pop
and
shlb
add
dec
mov
push
push
aad
aaa
icebp
xchg
jg
push
sahf
mov
and
sub
loop
xchg
loop
inc
repnz
dec
insb
rorb
sti
xchg
js
dec
xchg
scas
stos
nop
sbb
add
je
push
pop
push
int3
shr
add
dec
leave
mov
pop
cltd
mov
daa
scas
sbb
xchg
outsl
shlb
addr16
adc
add
shl
xchg
mov
mov
sub
mov
push
pop
xchg
mov
enter
fs
popf
xchg
sub
lahf
test
pop
repz
adc
pop
and
ss
addl
pop
stc
pop
enter
push
leave
adc
cld
xchg
out
cli
xchg
out
push
fisubs
jmp
jl
vmaxss
dec
sub
adc
push
lods
aaa
xchg
fisubrl
pop
insb
insb
daa
movsl
xchg
dec
mov
sub
scas
or
dec
add
add
cli
lcall
lock
dec
pop
outsb
lret
adc
cmpsl
jge
lock
test
mov
push
sarb
lret
jl
lret
lret
aam
popf
leave
out
rcrl
mov
fisubrs
sahf
lcall
mov
scas
add
into
jmp
into
mov
xor
pop
push
out
pop
outsb
mov
add
inc
das
jbe
mov
pop
dec
cmp
fwait
imul
shl
jecxz
xchg
pop
bswap
shr
xchg
dec
addr16
xor
mov
inc
inc
xchg
dec
xor
push
jb
fmuls
sub
sbb
hlt
jae
js
ja
cmp
push
push
mov
andl
scas
cwtl
mov
dec
in
test
cmpsl
ds
scas
std
addr16
push
or
or
cmpsl
xorl
jecxz
pop
mov
fcomi
cltd
jl
push
jae
mov
and
addr16
pop
imul
outsl
jbe
sbb
insl
lea
jns
es
lods
fdivs
jnp
icebp
ret
or
cmp
ror
in
imul
cmp
xlat
cmc
cmpsb
sbb
pop
jg
adc
mov
adc
in
imull
jnp
inc
shlb
lea
clc
push
dec
mov
pop
cmc
fcmovnbe
mov
cmp
xchg
jp
in
mov
add
les
ret
mov
iret
adc
loop
aam
jnp
jbe
push
xor
and
fsubl
add
adc
jns
fistpll
mov
xor
int
xchg
unpckhps
push
push
cltd
aam
xlat
push
push
mov
shl
movb
out
xchg
add
out
scas
negb
fdivrp
adc
pusha
pusha
add
mov
dec
cmpsl
sbb
inc
or
jmp
mov
out
data16
addr16
mov
push
lods
pushf
push
adc
xchg
icebp
add
mov
mov
lods
cmp
xchg
mov
repnz
popf
aad
fwait
sti
daa
leave
orb
loopne
push
mov
mov
inc
ss
jmp
jle
jge
add
out
mov
cld
ss
cmpb
mov
ficompl
jo
xchg
pop
bound
push
pop
push
dec
aas
popa
movsl
iret
dec
xor
add
mov
fcomps
pop
mov
push
inc
mov
out
in
stos
xchg
inc
mov
mov
mov
xchg
adc
scas
repz
scas
xor
dec
jne
xchg
int3
pop
fdivs
xchg
scas
pushf
dec
mov
adc
mov
lods
hlt
mov
mov
cmp
in
xchg
xchg
dec
lcall
mov
adc
call
and
out
shl
data16
push
std
pop
andl
xchg
movsl
mov
cwtl
aad
sub
mov
jl
mov
push
out
imul
cmpsl
adc
adcl
inc
push
bound
mov
pop
mov
iret
inc
or
pushf
das
stos
jle
mov
jecxz
mov
in
or
paddsw
mov
sub
jmp
nop
dec
inc
insb
cwtl
sarl
dec
insb
test
mov
sarl
xor
sub
lods
jle
cmpb
or
insl
jnp
mov
adc
test
sub
pop
push
jb
mov
mov
xor
imul
std
and
dec
sbb
push
je
addr16
sbb
outsl
push
fisubrl
mov
repnz
das
jecxz
and
roll
jg
jne
push
pop
push
aaa
pop
xor
test
mul
jg
aas
das
imul
mov
dec
loop
lock
pop
test
xchg
out
jns
frstor
out
xor
or
pop
rcrb
sbb
adc
js
lds
shlb
popf
pop
fnstcw
push
cmpsb
into
sbb
loopne
or
imul
or
or
stc
jns
icebp
jge
mov
bound
daa
arpl
add
jle
dec
push
jae
popf
ds
cmp
lods
in
out
mov
cmpsb
push
stc
cmp
popa
insb
and
xchg
enter
or
adc
mov
mov
insl
add
movsl
xor
push
ds
cmp
xorb
lret
repnz
repnz
sbb
stos
nop
sbb
xchg
sti
mov
fildll
add
aaa
pop
faddl
stos
xchg
iret
call
mov
popa
sbb
insl
pop
pop
rclb
cld
adc
js,pt
push
sub
cmp
mov
jae
mov
addr16
fwait
mov
stos
or
cmpl
push
jne
mov
and
psraw
cld
jne
xor
mov
cltd
cmp
stos
std
jb
ss
mov
inc
incb
mov
inc
fs
inc
in
and
mov
out
daa
sub
inc
jo
sbb
lock
ficoml
xor
sbbb
mov
addr16
mov
sub
adc
enter
jnp
push
jl
jmp
jp
dec
loopne
and
outsl
add
jae,pt
movsl
xchg
mov
test
or
in
sbb
jb
int
in
pop
leave
ljmp
stos
fwait
insl
xchg
adc
shl
mov
push
repnz
shl
test
adc
pop
mov
push
dec
int3
jge
imul
and
and
int
jp
add
frstor
and
cmpsb
rclb
pop
mov
fimull
mov
sub
ja
add
jp
push
lods
and
iret
ss
mov
inc
ljmp
xlat
jge
mov
jl
imulb
fiadds
jno
fwait
jle
adc
sbb
test
mov
test
fstpt
push
xor
nop
mov
fists
pushf
xor
lods
mov
pop
or
and
lods
fstpt
xchg
pop
mov
sub
jne
sbb
jns
in
sub
arpl
push
pop
movsb
mov
and
jle
aaa
adc
push
pop
scas
sub
sub
ja
repz
mov
lcall
xchg
xor
push
popf
popa
mov
es
lret
movsb
in
in
jb
in
mov
rclb
cmp
rorl
sbb
mov
jecxz
cmp
mov
push
loope
scas
out
test
daa
push
lcall
and
adc
mov
ja
adc
iret
pop
pusha
daa
sub
adc
sub
or
jle
hlt
lock
outsb
dec
daa
fmuls
mov
lea
int
fisttpl
and
and
hlt
dec
inc
sub
add
stos
shlb
mov
loop
lret
out
cmp
lret
mov
mov
ljmp
cmpsl
or
ljmp
jp
jle
das
sub
in
sbb
clc
rorl
push
mov
call
addl
jne
shl
add
test
outsb
sub
aad
sub
sbb
call
add
aas
setno
out
or
aas
cmp
test
ljmp
inc
mov
cld
lcall
lahf
mov
mov
jp
adc
inc
dec
cmpsl
and
fisubl
jo
lock
loopne
inc
and
movsl
jbe
push
js
xchg
and
aad
mov
mov
in
jmp
and
dec
jl
add
mov
jp
scas
and
movsb
mov
push
pop
xor
and
cmpb
push
mov
mov
or
adcl
shll
xor
pop
dec
mov
loopne
adc
test
enter
ret
dec
ljmp
jl
popf
loopne
pop
push
xor
adc
push
out
adc
insb
jno
imul
push
dec
mov
xchg
cmp
mov
lretw
jle
adc
faddp
mov
stos
roll
rorl
dec
add
mov
mov
or
sahf
cs
jp
and
movsb
and
orb
xor
dec
jecxz
cmp
inc
jbe
fwait
leave
iret
jb
jno
add
jno
shll
or
sbbl
orps
jecxz
mov
aam
pushf
xchg
sbbl
clc
adcb
cmp
xor
dec
dec
test
jns
jg
ljmp
sahf
xor
sub
add
cmp
jns
adc
inc
jmp
mov
xchg
mov
mov
sub
mov
aad
cld
cli
cmp
loope
xchg
stos
pop
dec
fcmovbe
push
pop
adc
push
pop
jo
je
popa
mov
sub
ljmp
clc
fbld
rorl
aam
inc
add
ficompl
out
or
out
aam
jmp
movsl
loope
xlat
mov
lahf
aad
jp
aad
and
sub
fdivrl
jb
mov
xorb
mov
inc
push
sahf
lods
sub
shll
bound
mov
fisubs
or
out
in
and
xchg
xchg
push
es
mov
out
cs
leave
mulb
addb
mov
and
mov
pop
sub
push
push
mov
fcmove
das
xor
jns
cmpsb
int3
jle
in
mov
adc
sub
or
adc
lret
xchg
std
or
stc
and
sub
and
cmc
push
push
and
pop
sub
push
mov
popf
inc
test
stos
jle
and
cmp
es
mov
cmp
mov
clc
call
cmpsl
fsubp
ss
jl
mov
jae
int
je
movsl
ss
jbe
icebp
inc
xchg
insl
fistps
imul
js
dec
jp
inc
imul
pop
dec
push
jge
je
stos
jmp
pop
cmp
xlat
std
sar
cmpsb
fisttps
test
lods
push
fsubl
push
imul
lock
pushf
add
pop
mov
adc
outsb
mov
cltd
loope
inc
sahf
sti
cs
scas
and
and
push
inc
mov
push
sets
push
sub
push
jmp
cmp
mov
push
adc
scas
or
add
mov
jmp
xor
xor
jo
sbb
adc
push
loope
pop
ljmp
xor
adc
xor
add
or
adc
lods
pop
push
push
data16
jo
dec
cmp
jae
daa
shll
pop
cmc
mov
adc
xorb
roll
stos
mov
sub
sbb
dec
pop
adc
test
mov
inc
cld
adc
jl
mov
movsb
lahf
mov
adc
inc
jne
pop
xchg
cmp
jbe
jb
push
jo
or
sbb
mov
mov
and
lea
pop
xchg
mov
push
push
enter
push
dec
push
fwait
inc
daa
xchg
lea
push
hlt
std
inc
inc
sti
popf
dec
sub
and
lea
jp
hlt
cmpsb
cmp
ss
mov
nop
stos
in
imul
adc
xchg
popf
test
and
sbb
sbb
nop
xchg
mov
push
inc
inc
dec
mov
cmp
adc
out
inc
add
test
xchg
and
shlb
push
ficompl
loop
pusha
sbb
mov
into
inc
outsl
mov
idivb
icebp
out
dec
mov
cltd
or
cmp
aaa
int3
sbb
or
xchg
pusha
imul
fldcw
repz
fs
imul
js
out
lods
lcall
pop
ss
or
pushf
out
and
cwtl
aad
mov
xchg
filds
dec
cli
cmp
movsl
pop
add
cmpsl
jle
sub
mul
fsubp
and
js
shl
mov
inc
mov
xor
fucomp
and
dec
test
mov
mov
pop
xlat
hlt
jnp
adc
mov
mov
jl
cmc
das
out
pop
lahf
and
xchg
test
cmpb
sahf
loopne
shl
and
sbb
jbe
out
out
xchg
lahf
jae
cltd
into
outsb
mov
rcrl
lret
outsl
frstor
in
push
fidivl
or
push
or
ja
lret
and
es
jae
cltd
jecxz
fs
ret
jb
lods
xchg
push
mov
cld
ret
fbld
or
jne
mov
ss
repz
or
lahf
lock
loope
pop
pop
fwait
mov
xor
xor
mov
pop
mov
in
out
cmp
push
pusha
dec
outsl
aam
push
jb
fidivl
fistl
or
ljmp
rolb
sbb
lret
pop
inc
out
vxorps
loopne
in
and
xorl
dec
or
pop
xchg
jne
pop
jmp
inc
cwtl
nop
adc
or
cwtl
repz
fisttpl
inc
icebp
iret
sub
bound
sbb
subb
mov
sub
std
leave
int
fnstenv
push
xor
jg
sbb
inc
sub
sbb
fdivp
jp
and
mov
nop
aaa
mov
imul
lret
jae
jo
pop
mov
add
cmp
out
out
adc
ljmp
sbb
nop
pop
pop
and
adc
icebp
adc
pop
fcoms
adc
icebp
imul
pop
ffree
xchg
pop
das
out
push
push
lcall
lods
sub
mov
cltd
std
lea
push
call
lods
jo
xchg
lods
sarb
xor
shrl
add
cmp
or
or
in
jo
popa
lcall
xchg
mov
mov
cmpb
std
push
inc
pop
das
mov
mov
popf
call
mov
cmp
push
push
and
frstor
scas
inc
add
loop
in
in
and
cli
repz
jecxz
jp
adc
mov
lods
xchg
jl
sbb
pop
push
fildl
dec
jp
clc
xor
rcrb
testb
into
inc
mov
sub
pop
xor
inc
add
rol
mov
gs
cs
fcmovu
jne
out
mov
lgs
and
mov
lods
push
xor
popa
cld
sahf
fwait
int3
test
and
clc
rclb
push
cmp
call
xorb
insl
xor
jmp
pop
nop
and
xor
fcmovnbe
aad
insb
xchg
mov
dec
lea
js
jne
mov
push
adc
or
pushf
jmp
pop
enter
mov
jg
mov
sbb
movsb
and
outsb
mov
cltd
push
xor
idivb
mov
popa
stos
imul
lcall
repz
push
mov
dec
mov
cmp
ret
or
inc
fcompl
mov
or
ss
loop
mov
cmp
inc
out
dec
mov
inc
push
imul
and
jp
add
and
cmp
mov
jg
sub
sbb
adc
xchg
arpl
repz
xchg
es
pop
cltd
movsl
clc
inc
and
sarb
push
mov
jb
adc
push
push
rcr
push
lock
xchg
rolb
cld
mov
cmp
xchg
push
scas
jo
xchg
aaa
sub
push
add
movsb
or
pop
mov
fisubrs
push
fs
jmp
jmp
adc
ss
xor
mov
out
jle
sbb
fwait
cmc
mov
push
das
xor
lds
jle
mov
repz
sbb
fisubrs
gs
cmp
and
mov
repnz
jne
cltd
aam
pop
inc
ds
arpl
jne
mov
sub
scas
lods
pop
xor
or
jnp
sub
incb
cmc
movsl
je
jo
add
inc
pop
das
loop
les
push
mov
pop
dec
mov
imul
aam
and
fmull
xor
in
sahf
dec
adc
or
lods
dec
out
lods
loop
movsl
pusha
jmp
mov
pop
jg
imul
jo
out
subb
iret
movsl
dec
insb
push
jp
pop
xor
jo
cmp
sbbb
popa
frstor
rcll
lmsw
rolb
psubd
cmc
mov
jl
push
jne
hlt
sub
pop
cmp
cld
out
push
jbe
mov
fsts
sbb
ljmp
sahf
pop
mov
mov
sub
pop
sub
incl
stc
hlt
mov
std
mov
test
xchg
arpl
sar
outsl
cmpsb
jp
inc
xlat
pop
addb
mov
mov
mov
push
push
cmp
pop
mov
jo
push
mov
mov
xor
stc
adc
xor
and
push
adc
add
loope
cmp
cmp
repz
pushf
dec
xor
mov
cmp
jnp
dec
jns
int
es
outsl
push
pop
inc
test
mov
mov
mov
pop
pop
xor
cmp
sbb
mov
arpl
fadds
fnstcw
cmpsl
and
out
mov
and
xchg
mov
lea
xchg
xor
cmpsb
jo
push
out
xchg
xchg
fsts
das
mov
mov
nop
sub
jne
cltd
int3
addl
fs
int
xor
pushl
and
add
daa
adc
in
mov
lcall
inc
mov
or
leave
jle
outsl
shrl
xchg
mov
xchg
lahf
idivl
jno
dec
push
inc
mov
or
mov
out
ja
mov
jmp
in
les
call
das
mov
ss
orl
adc
push
ljmp
mov
pop
xorb
int
js
inc
nop
or
int
inc
outsb
jmp
jecxz
push
sub
or
adc
scas
mov
dec
mov
mov
es
push
out
mov
push
fwait
mov
popf
mov
fsubr
popa
push
adc
mov
cli
mov
pop
mov
adc
pop
dec
mov
fldl
movsl
lret
lret
mov
xchg
mov
das
cmpsl
xchg
outsb
outsl
mov
adc
lcall
dec
ror
sub
dec
pop
xchg
jo
push
cld
divl
ja
into
xor
xchg
xchg
inc
push
or
xor
int3
add
xor
mov
sahf
out
ja
mov
arpl
dec
push
lock
sub
sub
repnz
cmpsb
out
inc
or
je
xor
sbbb
jne
push
ficomps
iret
push
xchg
push
popa
jge
notl
inc
je
testl
bound
inc
adc
andb
sbb
js
push
movb
add
jnp
inc
testl
sahf
mov
movsb
xchg
ja
mov
loopne
xchg
icebp
sbb
adc
mov
xchg
jnp
or
cmp
jmp
fucomp
lods
fisttps
xchg
outsl
repz
cmp
adc
lds
clc
pop
sub
mov
sub
push
insb
ss
mov
lock
flds
push
imul
inc
dec
adc
scas
pop
add
xorb
rol
pop
xchg
jae
pushl
outsb
jecxz
pop
push
in
inc
cmpsl
in
push
or
sbb
add
ret
outsb
mov
aas
inc
fmuls
adc
mov
mov
sbb
pop
shrb
pop
mov
mov
push
pop
dec
mov
adcb
dec
cmpsb
loop
sbb
jecxz
arpl
add
xchg
and
jne
lret
cmp
loopne
jbe
inc
adc
jle
imul
je
cmp
daa
loope,pn
aas
mov
es
insl
fs
jb
ss
jns
in
ds
fistpl
pop
cmpl
pop
lods
mov
int
dec
dec
int
sub
or
aam
fisttpll
enter
jnp
mov
adc
roll
mov
jge
mov
mov
mov
sahf
mov
and
jae
inc
test
lods
mov
jb
fcmovnb
mov
js
fimuls
arpl
pop
cwtl
int3
cltd
or
dec
adc
repz
xor
ss
xor
adc
cmp
sbbb
ss
sub
or
ret
inc
jmp
sbb
sbb
xchg
xchg
out
mov
xor
push
sbb
inc
clc
repnz
mov
jge
shll
mov
mov
jmp
cld
mov
push
cltd
mov
pushf
xor
adc
std
sbb
or
mov
mov
xchg
xchg
push
arpl
dec
pop
stc
repz
sbb
rol
sub
imul
pop
mulb
ljmp
or
pop
loopne
loopne
dec
repz
push
jecxz
push
pop
mov
dec
push
cmp
cmpsb
iret
mov
jmp
mov
adc
adc
push
sbb
int3
ficoms
jbe
add
cmp
and
mov
lods
outsb
in
cmpsl
repnz
cmpl
sbb
lds
leave
adc
insb
int3
popf
call
inc
imull
std
imull
pop
lfs
dec
pop
xor
pop
loop
and
and
cli
push
ret
push
push
in
jns
adc
push
lea
xchg
inc
fs
cmp
mov
mov
adc
sub
cmp
mov
pop
in
mov
add
mov
sub
cmp
dec
cld
jmp
cmp
mov
push
and
cltd
mov
pop
xor
jne
in
push
mov
inc
aam
adc
cmp
mov
ret
add
gs
das
mov
pop
mov
loop
xor
fdivr
sahf
mov
dec
push
mov
dec
addr16
ja
fisubrl
mov
repz
aad
and
outsl
or
push
flds
sub
adc
repnz
lods
out
sarb
adc
sbb
sub
loopne
cmc
pop
call
movsl
outsl
aaa
add
lret
aas
addr16
mov
dec
push
mov
in
rorl
ss
in
push
imul
jle
lret
mov
pushf
pop
cwtl
mov
stos
jno
pusha
aad
push
lret
dec
adc
cmp
mov
xor
inc
nop
cmpsl
ret
xchg
dec
cmp
les
mov
stos
cwtl
gs
xor
or
cmpb
jg
mov
adc
dec
adc
fisubs
push
cwtl
gs
inc
stc
push
jecxz
fsubs
mov
pop
pop
gs
pop
add
subl
scas
mov
lcall
add
lahf
repnz
lds
fcompl
mov
out
mov
inc
pop
inc
fdivl
fidivl
mov
pushf
push
add
adc
add
xchg
cmp
les
popa
sub
sbb
repz
xchg
aam
faddl
xchg
dec
imul
add
out
sub
xor
pop
or
stos
loopne
jo
or
icebp
jg
xchg
dec
repnz
mov
mov
or
or
pop
inc
and
fst
and
mov
inc
mov
mov
and
data16
pushf
pop
mov
mov
lea
stc
outsl
mov
dec
nop
and
pop
adc
bound
and
lods
mov
cmpl
and
pop
sbb
or
mov
and
sbb
int
mov
arpl
adc
mov
push
out
push
sahf
in
negl
sti
sbb
pop
test
lea
popf
sub
sub
loop
sub
mov
cmp
jmp
cs
call
in
add
push
mov
pop
xor
or
sbb
clc
outsl
add
bound
mov
pop
je
push
jno
dec
lret
pop
xor
arpl
push
ss
inc
xchg
in
or
dec
mov
jae
mov
pusha
mov
inc
mov
sahf
faddl
cltd
xor
mov
cmp
xchg
and
test
mov
push
scas
stos
pop
test
inc
xchg
add
push
pop
pop
push
pop
out
push
lods
je
xchg
xchg
out
dec
pushf
icebp
and
xchg
mov
mov
int
push
aas
mov
xchg
cmp
cmpsl
xchg
sub
or
xor
xchg
in
loope
add
and
sub
mov
mov
or
test
ja
in
scas
or
insb
pop
inc
xchg
rclb
mov
arpl
ficoml
or
cmpsl
xchg
enter
out
jecxz
adc
nop
mov
inc
pop
sub
mov
mov
push
loop
inc
or
xor
or
xchg
jl
push
test
sbb
inc
mov
divb
scas
dec
cmpsl
sbb
adc
mov
push
or
sahf
dec
adc
sbb
pop
xor
inc
push
lods
jl
xchg
sbb
icebp
mov
mov
add
or
xor
testl
sbb
mov
mov
adc
les
cmp
lods
dec
arpl
inc
mov
rolb
in
pop
mov
fistps
icebp
jae
repnz
mov
call
push
aaa
sbb
std
pushf
aam
sarl
push
sub
sbb
push
stos
and
sbb
dec
test
xchg
inc
sbb
js
pop
sub
insl
pop
jp
cmp
sbb
adc
fildl
sahf
add
adc
or
xchg
nop
mov
cmp
or
jo
lcall
add
jl
stos
stos
cs
mov
fwait
test
mov
adc
lods
jecxz
mov
sbb
inc
in
loopne
sub
sbb
xchg
xchg
mov
ret
scas
in
loop
add
mov
in
xlat
mov
mov
out
push
push
shlb
mov
inc
mov
cmp
int
inc
and
inc
pop
xchg
incb
int3
int
jnp
fdiv
stos
inc
les
stos
icebp
jp
sti
pop
pop
mov
add
fmull
mov
scas
filds
adcl
iret
pop
sbb
popf
loop
out
pop
add
or
jp
sbb
adc
xlat
call
in
aad
xor
jg
movsb
or
lods
in
cmpsl
shll
imul
adc
data16
arpl
aad
daa
sub
rcll
sbb
or
jmp
decl
mov
and
sahf
inc
icebp
aam
pop
ret
mov
cwtl
lea
insb
jmp
push
or
fistpl
aaa
in
lock
xor
sbb
and
dec
mov
test
sbb
cmp
aas
cmpl
pop
pop
jl
movsl
test
into
stos
inc
mov
cld
inc
and
jns
adc
negb
sub
leave
or
sbb
mov
cmp
insl
sbbl
clc
sbb
in
mov
pcmpgtw
bound
fisubrs
mov
xchg
in
addr16
and
sahf
or
dec
xorb
pop
fwait
rolb
divl
dec
or
repz
or
dec
add
fdivl
jne
mov
cmc
aad
rol
and
pop
xchg
and
arpl
sti
push
divb
and
testb
xor
mov
pop
inc
loopne
lahf
pushf
sbb
fistl
xchg
lods
dec
stos
push
cli
xchg
push
push
ret
inc
xchg
in
or
adc
das
inc
ss
mov
gs
ror
sti
push
getsec
xchg
ja
shrl
xchg
and
ljmp
sub
add
cmp
popf
and
mov
mov
dec
inc
cmp
pop
xor
shrb
xor
scas
pusha
lods
lahf
pextrw
mov
push
sbb
and
push
addr16
dec
dec
xchg
ret
or
mov
lret
mov
mov
jmp
sub
push
sarl
jno
mov
das
push
lret
sub
fdivrl
mov
addr16
sub
dec
repz
stc
lret
push
cmc
inc
sub
lods
mov
popf
push
xlat
cmc
outsl
insl
les
int
add
mov
mov
jns
jb
or
adc
stc
loop
push
xor
mov
das
vpmacsww
sub
call
std
xor
dec
pop
push
test
ficomps
call
gs
add
popa
in
mov
mov
sbbb
inc
fsubrl
out
mov
nop
cmp
push
repz
adc
push
popf
in
cli
lahf
popa
dec
lret
sti
cmpsl
cmc
rolb
pop
jb
lcall
mov
add
cmp
pusha
sub
ss
dec
fsubrs
cs
mov
loopne
push
or
lcall
inc
imul
cmc
add
push
fs
xchg
jnp
push
lock
push
mov
xor
aaa
sbb
xor
lcall
cmpsl
pop
jp
xor
push
and
lea
or
fstpt
add
js
cwtl
inc
ret
pop
das
ljmp
add
xor
cmp
cmp
ficoml
xchg
shlb
lods
or
dec
adc
or
sbb
jge
js
out
dec
inc
jb
mov
pop
or
loop
mov
inc
pop
mov
cwtl
dec
jmp
jb
jo
adc
mov
outsl
push
jp
in
insb
mov
dec
in
xchg
cmp
dec
and
lret
ds
mov
out
push
jbe
into
lods
pop
xor
push
dec
insl
xchg
xchg
xchg
outsb
dec
popf
xchg
hlt
mov
mov
insb
adc
popf
cmp
mov
sub
or
dec
inc
les
cwtl
repnz
cmp
cmc
cmpsb
mov
inc
push
xlat
shl
in
jg
cmp
ss
test
adc
jle
mov
mov
cmp
insb
cmp
mov
add
ret
push
or
clc
rolb
adc
arpl
adc
test
pop
fstpt
xchg
outsb
sti
das
mov
iret
arpl
mov
mov
pop
hlt
mov
movsb
in
imul
xor
test
sub
push
cltd
cmp
fldenv
daa
lret
rorb
les
repnz
jecxz
add
add
dec
in
xchg
pop
add
pusha
cmpsl
lods
pop
jns
add
jb
lret
lret
add
push
inc
inc
mov
out
mov
fdivp
lcall
sub
sbb
je
jno
arpl
inc
das
or
xlat
mov
shlb
sarb
inc
inc
clc
lods
xor
cmp
out
sbb
nop
or
push
jno
pop
stc
int
test
mov
sbb
mov
es
pop
in
adc
fdivl
imul
bound
cli
jecxz
jl
cmc
or
dec
cmp
pop
jnp
sahf
imul
mov
or
dec
inc
jns
inc
nop
inc
repnz
push
mov
cltd
pop
mov
add
lahf
add
mov
sbb
loope
test
shlb
mov
sbb
lock
or
dec
leave
aam
mov
mov
lcall
and
mov
out
dec
pop
in
and
jno
mov
adc
jge
scas
mov
sub
xchg
dec
cmpsl
mov
xchg
xor
pop
sbb
adc
sub
sbb
dec
sahf
xchg
xlat
outsb
call
stc
push
sub
xchg
xor
adc
jge
xchg
push
adc
in
push
xor
rcr
add
xchg
or
mov
mov
cmp
popa
xchg
in
fldl
mov
jge
mov
and
cmpsl
inc
dec
xor
addl
je
mov
movsl
inc
stos
adc
sub
hlt
outsl
inc
into
adc
sti
pop
ss
push
jb
out
sbb
xor
ja
sbb
daa
push
xchg
xor
jnp
loope
sub
in
or
test
sbb
jno
push
pop
rcrl
and
or
jmp
sub
enter
and
lods
roll
xchg
cld
mov
push
mov
mov
dec
loope
and
cmp
or
mov
sahf
sbb
mov
pop
ja
call
negl
sahf
rcrb
insl
dec
lds
xor
xor
enter
adc
insb
aam
aas
cmc
sbb
pop
inc
xor
flds
adc
push
lods
mov
pop
inc
and
adc
sbb
fbld
lock
adc
mov
mov
dec
sbb
xchg
mov
push
mov
push
inc
jb
add
gs
add
push
aas
imul
fimuls
inc
adc
mov
sahf
pop
stos
cmp
aas
add
mov
cld
stc
stos
cli
pop
mov
stos
xchg
mov
shrb
popa
imul
push
test
ret
aad
scas
lods
jnp
mov
rcrb
enter
push
insb
repz
imul
jp
movsl
sbb
cld
jno
or
add
and
int3
in
inc
outsl
pop
cltd
jmp
pop
jne
add
xchg
lods
dec
push
loope
leave
pop
loop
mov
and
outsb
lods
sbb
add
and
jne
jp
mov
or
pop
ja
in
fs
jmp
lods
add
cmp
test
adc
adc
cmp
mov
loopne
or
loope
lods
xchg
jb
filds
push
js
or
bound
xchg
cmp
std
sub
cld
cmp
mov
pop
sub
ds
nop
sub
xor
std
inc
mov
pusha
jmp
into
add
idivb
rcll
pop
shrb
clc
fcompl
push
dec
mov
fiaddl
lahf
cmpsl
incb
mov
fadds
ja
cltd
mov
pop
xor
xacquire
repnz
xsavec
loopne
dec
sub
mov
popa
es
sbb
addr16
insb
iret
pop
in
pop
or
ret
je
pushf
sbb
sub
fwait
lods
ljmpw
xor
lcall
pop
mov
push
sbb
inc
into
data16
jns
adc
hlt
int3
hlt
imul
or
call
loope
int
hlt
push
mov
in
pusha
pop
jmp
pusha
cs
cmp
adc
arpl
mov
ds
xor
in
sub
sbb
and
rolb
cs
xor
stos
xor
adc
inc
test
push
imul
fdivp
or
dec
sbb
xor
inc
pop
js
fidivs
dec
test
dec
jmp
cmp
inc
mov
xor
loope
xor
mov
stos
add
jo
js
xchg
xor
xor
sub
mov
xor
adc
insl
dec
dec
sub
cmp
jmp
loopne
outsb
popa
dec
xchg
mov
mov
loop
in
out
mov
adc
push
in
daa
gs
fldt
enter
fdivrl
jns
jmp
pop
aad
repz
sbb
xchg
jno
in
mov
jns
dec
shrl
out
bound
xchg
jg
dec
mov
mov
mov
sub
scas
pop
dec
outsl
ret
cmp
cwtl
cmc
dec
mov
arpl
ljmp
cmp
int3
ret
push
movsb
es
mov
lods
xchg
add
and
dec
pop
pop
xchg
jge
les
aaa
loope,pn
pop
adc
cli
cmp
inc
jg
lahf
or
push
cs
fimuls
sub
mov
cmc
movsb
repnz
inc
out
or
out
jns
push
ljmp
int3
xchg
add
push
test
push
jl
cs
pop
xchg
mov
cmpsl
cmc
dec
add
pop
int
icebp
in
dec
inc
and
xchg
jp
dec
lahf
jns
push
push
sub
add
cmp
scas
cmc
js
repnz
inc
stc
scas
and
jns
jnp
icebp
mov
dec
mov
call
adc
pop
lret
sub
pushf
mov
xor
dec
sbb
int3
shll
stc
jns
ret
popa
add
add
mov
jl
fsubs
in
hlt
mov
add
sbb
insl
pop
js
iret
add
fidivrl
fucomi
adc
cmp
inc
loope
out
cmp
and
loopne
cmp
mov
movsl
aaa
adc
ljmp
sbb
shr
sub
jle
ss
push
cmp
xchg
leave
xchg
fwait
adc
fidivs
cwtl
and
scas
out
dec
jo
or
imul
les
cmp
add
movsb
push
ss
shll
fwait
pop
insb
sbb
sub
dec
mov
cmpsl
cltd
mov
inc
sarl
sbb
inc
popf
lcall
fnstenv
fistpl
pop
xor
mov
pop
popa
loope
mov
ljmp
xchg
and
out
outsl
cmc
add
push
sub
test
inc
sub
call
fsubl
xchg
ret
pop
pop
sahf
xchg
pop
push
mov
push
mov
and
cmpsb
pop
mov
fstp
lret
loop
and
call
rcll
pop
sbb
lds
fcom
mulb
sbb
mov
xorl
sbb
clc
or
mov
jle
pop
pop
icebp
dec
mov
jnp
adc
jns
xchg
popa
push
ds
mov
nop
mov
lods
dec
lcall
sbb
mov
bound
push
push
das
sbb
in
or
das
call
jae
movsb
arpl
repz
mov
in
leave
insl
inc
xchg
popf
js
dec
xor
imul
jl
add
sub
sub
lods
mov
in
insb
xorb
xchg
in
in
push
shrl
scas
loop
fidivl
dec
pop
testl
jmp
hlt
fsubs
mov
inc
stos
rcll
subb
xchg
fs
xchg
cmp
loopne
xchg
testb
jecxz
sarb
enter
shlb
ss
push
btc
ljmp
fwait
mov
out
mov
arpl
cmp
or
xor
sbb
or
fisttpll
outsl
in
xchg
shrb
cwtl
cmpsb
je
push
dec
jg
jb
enter
data16
arpl
imul
dec
rcrl
int3
outsl
adc
call
sahf
mov
pushl
sbb
sbb
or
fisttpll
push
std
push
pop
adc
push
movmskps
dec
sub
imul
iret
repnz
mov
xchg
rorl
arpl
pushf
mov
aas
add
xchg
add
mov
fstps
paddw
fs
add
mov
in
sub
inc
xchg
andl
addr16
jl
push
dec
xor
mov
js
add
pop
movq
jne
cmp
sub
mov
cs
dec
cmpl
pop
sub
pop
or
xchg
aad
loope
cltd
jo
mov
dec
jp
out
cmp
ss
jg
lods
mov
dec
lret
xchg
mov
setbe
push
call
pop
fldl
jno
icebp
inc
shlb
jne
fwait
cmpsb
pop
mov
cmp
push
sbb
or
jl
dec
fnstenv
repz
inc
test
or
dec
jb
mov
mov
pop
cli
push
loope
mov
pop
adc
mov
pop
dec
jae
cmpsb
gs
push
inc
sbb
push
ja
rorb
cs
test
sbb
sahf
and
push
es
dec
mov
pop
inc
push
pusha
addl
sub
cmp
or
bound
int
stos
cmp
scas
jb
in
clc
mov
out
cmp
gs
insl
mov
cli
rcr
push
out
and
stc
scas
leave
lret
mov
jl
subb
test
inc
cld
repnz
in
push
cs
xlat
fwait
push
ljmp
dec
cld
pop
pop
loope
add
xlat
mov
int
add
and
ret
or
push
inc
ret
adc
pop
mov
pop
xchg
mov
data16
push
fisttpll
cld
mov
loope
sbb
xchg
jne
push
lahf
jnp
mov
and
or
sbb
mov
mov
dec
movsb
lret
add
inc
mov
or
or
adc
fdivl
xchg
data16
inc
loopne
xchg
mov
bound
jae
inc
rcrb
add
pop
mov
push
xchg
pop
xchg
xor
loopne
cwtl
cmc
dec
push
push
adc
xchg
out
bound
cmc
fists
fcomi
enter
mov
or
push
pop
cli
dec
push
bound
jnp
add
xor
push
test
ljmp
pushf
cmp
mov
mov
out
fdivrs
xor
cmpsl
jns
push
jb
pusha
in
rcll
lods
push
mov
insl
lods
mov
icebp
js
sahf
push
test
xlat
lea
xchg
sbb
sbb
mov
cmc
mov
rorl
test
roll
pop
fldenv
and
pop
inc
ret
dec
jo
mov
pop
sub
pop
hlt
imul
mov
sub
mov
adc
loope
cltd
jge
mov
mov
mov
dec
inc
mov
imul
push
sbb
in
arpl
xchg
inc
mov
insl
shll
adc
xchg
cmpsb
cld
cmp
add
pop
popf
push
mov
cltd
inc
fwait
enter
push
stc
jg
mov
call
push
in
add
in
pop
push
xchg
jno
sbb
lods
cmp
xchg
inc
rcrl
or
jl
mov
lods
add
sub
add
sub
xor
mov
pop
stc
test
pop
cmp
jb
mov
adc
push
je
push
jle
pushf
jae
sbb
aaa
imul
sbb
lods
decb
pop
fwait
mov
in
int
pop
dec
aaa
sahf
push
lahf
mov
xlat
lret
roll
or
mov
inc
pop
jp
mov
idivb
xchg
int3
ljmp
test
mov
sarb
adc
popa
das
sbb
jno
pop
dec
jge
cmp
dec
add
dec
cmp
mov
popa
pop
inc
sahf
jmp
sub
fwait
hlt
daa
leave
pop
icebp
sub
mov
sbb
aad
icebp
in
mov
sub
and
adc
in
mov
jl
xor
mov
cld
pop
xchg
ficomps
xchg
test
cmp
xchg
adc
les
add
test
das
stos
and
and
xchg
jmp
ljmp
adc
js
mov
push
scas
fcomps
lds
add
mov
or
adc
out
or
push
inc
mov
jo
orb
imul
mov
pop
dec
in
or
hlt
mov
sub
fwait
inc
pop
imul
jle
lcall
es
stc
scas
mov
xor
pop
push
add
stc
dec
fs
and
add
lods
mov
or
xor
in
adc
or
shll
lock
fbstp
call
aaa
stc
sar
jp
jmp
pop
rcrb
fnsave
mov
jo
in
push
sti
paddq
loop
mov
cmpsl
inc
lock
sbb
inc
fcoml
scas
mov
roll
sub
icebp
subl
and
cmp
jg
pop
sub
dec
mov
sbb
or
les
divb
aad
cwtl
cmp
sbb
sub
mov
popa
push
in
jb
popa
je
sbb
call
inc
lods
lret
cmpsl
mov
xchg
mov
popl
ja
mov
loope
xchg
adc
shll
fst
adc
cmp
shlb
out
inc
mov
jecxz
ret
mov
sbb
xor
in
rolb
insb
jb
inc
cmc
sar
pusha
dec
sbb
add
or
gs
cmp
dec
pop
shr
outsl
addl
sahf
inc
std
lock
int3
sbb
imul
int3
xchg
dec
mov
les
repnz
jl
mov
or
mov
mov
jl
sbbl
jae
clc
jmp
or
call
cmpsl
cmpsb
test
xchg
bound
inc
xchg
es
cmp
cmp
movsb
aad
out
cwtl
mov
dec
movswl
jno
stos
aaa
pop
aad
sti
adc
out
xchg
shll
add
dec
mov
fldcw
or
mov
pop
pop
mov
shll
mov
in
outsl
sbb
sbb
mov
inc
jp
arpl
pop
pop
out
stc
jg
add
cld
xchg
nop
ficomps
aad
sbb
push
hlt
cmp
ljmp
pop
xor
mov
lock
sbb
test
cmc
push
add
cmp
jbe
cltd
pop
xchg
adc
xchg
mov
mov
inc
xor
jnp
add
addr16
aas
cmpsl
insb
in
mov
dec
popf
mov
or
jne
jl
loope
adc
inc
cmpsl
jmp
sbb
pop
add
jg
into
jnp
add
xchg
mov
lods
jo
loop
call
movsb
pop
xchg
ror
arpl
mov
push
push
sub
test
jmp
sbb
cmp
orl
das
aam
jmp
rcl
inc
ret
sub
adc
ljmp
lret
sti
bound
addl
out
test
jle
mov
and
sbb
push
testb
xchg
icebp
cmp
mov
cmp
inc
fidivrl
cmp
sbb
out
cmp
dec
inc
cmp
pop
jmp
xchg
outsb
imul
dec
fstpl
cltd
push
add
je
cwtl
push
stc
add
lret
jb
and
insb
xchg
daa
incl
lea
xchg
push
fnsave
dec
xchg
pop
dec
dec
test
rolb
sub
cmp
push
pop
std
xchg
cmovnp
xchg
jo
xor
sub
inc
clc
inc
push
inc
sub
loope
sbb
mov
ljmp
xor
jg
sahf
sub
les
cmp
xchg
cltd
adcl
lret
xchg
test
xchg
imull
int3
pop
int3
add
test
aad
pop
push
sbbl
les
push
addr16
mov
out
inc
jbe
ds
test
pop
mov
hlt
xchg
mov
push
les
push
cmp
or
mov
lods
pop
jns
rcll
into
inc
aam
into
dec
inc
add
add
imul
and
xor
mov
jle
and
int3
insb
test
dec
mov
or
jo
stos
ja,pn
imul
call
jecxz
jne
mov
inc
in
pop
hlt
push
jae
into
repz
pushf
out
push
shll
add
daa
int
loopne
shrl
fistpll
mov
lcall
shrb
jae
xorb
insb
or
test
push
cld
stos
lods
cmp
xor
cli
mov
jl
or
cli
rorl
inc
jne
popa
pop
xchg
dec
cli
xchg
stos
mov
mov
ss
repnz
jno
je
fucomi
and
out
les
pop
sub
push
ss
lret
sahf
jo
cld
aaa
jb
fs
jl
aaa
pop
push
jae
sub
inc
es
adc
movsb
adc
or
aaa
ret
pop
add
cmp
mov
ljmp
and
jl
mov
roll
lret
bound
das
int
or
sbb
insl
push
scas
sbb
sub
mov
or
xchg
push
shlb
icebp
cmp
push
ss
inc
mov
dec
mov
inc
sbb
pop
and
pop
inc
sti
test
inc
gs
leave
sub
shl
daa
push
out
xor
shlb
dec
cmp
cld
lret
fnsave
outsl
sbb
push
lcall
push
fiadds
std
or
dec
aad
mov
add
sbb
lods
and
cld
les
xchg
jl
mov
into
lahf
jl
lock
inc
add
scas
cmp
pop
setp
xchg
pop
lods
jecxz
fiadds
mov
sbb
xchg
adc
pop
jl
pop
inc
mov
gs
mov
mov
ds
push
neg
jp
das
imull
mov
mov
testl
arpl
jmp
vmptrst
dec
sahf
pop
mov
shlb
mov
push
movsb
sub
xchg
movsb
int3
test
add
inc
cltd
mov
cmpsl
sbb
add
xchg
cmp
test
loop
and
ds
out
test
mov
mov
cwtl
push
jle
cmpsl
jl
int3
sbb
push
mov
cmp
mov
sbbb
cwtl
lods
and
ret
loop
xor
rcr
dec
aam
cmp
jb
into
aas
ljmp
int
es
movsl
cld
mov
std
or
inc
ret
xlat
sub
lret
in
or
inc
lds
sbb
or
adc
jg
lods
push
ret
or
mov
adc
and
add
in
hlt
sti
jg
test
daa
xor
pushf
or
mov
fldenv
xor
test
jl
loopne
nop
lcall
lds
out
repnz
fisttpll
out
jmp
loope
shll
jl,pt
or
xor
sbbl
in
or
pop
xchg
out
jg
dec
add
pop
push
xchg
cmpsb
fdiv
imul
imul
in
enter
stc
sbb
rcrb
mov
mov
push
std
stos
bnd
cmc
pop
inc
lret
add
stc
sub
cmpsl
testl
lock
xor
in
cwtl
addb
jle
jle
lock
push
inc
fadds
jb
in
add
and
ja
pop
pop
cmp
adc
cs
pop
push
stc
push
into
scas
jmp
or
dec
jl
mov
pushf
movsl
jnp
hlt
mov
insl
lds
pop
xchg
add
pop
dec
rcrb
bound
xor
aas
xor
hlt
loope
ss
test
push
enter
inc
add
loop
out
pusha
xorb
imul
popf
xor
test
cmp
lods
add
ret
cmp
push
aas
push
dec
arpl
mov
aad
cmp
lea
jne
movb
jge
or
push
xchg
mov
jb
cmpsl
ret
mov
aas
push
push
and
jnp
inc
js
ss
jmp
dec
shll
jns
fists
rclb
aaa
adc
cmp
shlb
arpl
or
dec
xchg
out
push
out
cmc
or
dec
out
in
clc
test
test
movsl
bound
cmc
aaa
fldt
mov
ret
gs
test
fstpt
xchg
pop
insb
mov
add
imul
and
lret
cld
cmc
in
xchg
dec
add
out
clc
jp
jne
xor
popa
les
cwtl
push
mov
cmp
mov
cmp
js
stc
movsl
adc
loope
testl
inc
lock
fcompl
test
jne
sbb
jp
dec
fwait
test
xor
cld
mov
lahf
mov
test
mov
add
jmp
daa
mov
outsb
lret
pop
mov
push
popa
push
jb
sub
cltd
pop
leave
cmp
and
or
xor
mov
cmpsb
sbb
mov
js
movsb
xchg
into
lods
add
inc
call
lcall
jp
out
sahf
add
xor
mov
imul
adc
adc
cmp
dec
push
pop
cmpsl
gs
xor
dec
push
out
bound
pop
lret
outsl
mov
out
pushf
jo
push
mov
jg
push
iret
fcompl
add
mov
test
les
test
pop
mov
jnp
add
popf
nopl
jnp
inc
lcall
lods
shlb
and
std
jp
imul
pusha
push
iret
cmp
movsb
mov
fcmovu
or
xchg
sub
stc
push
pop
lods
and
pop
and
add
fisttpl
mov
ss
cmp
movsb
xor
outsb
pop
aad
enter
sbb
into
stc
cmpb
lods
push
addr16
imul
pop
xor
push
je
test
fcomi
popl
cwtl
aad
dec
mov
jp
aas
test
shrl
and
mov
jp
stos
imul
pop
jge
movsl
sti
frstor
jg
testl
sub
push
sbb
dec
in
jnp
and
sbb
push
iret
pushf
sarl
mov
lock
jle
arpl
mov
les
out
mov
sbb
mov
add
dec
fstpl
jge
cmp
lods
jns
pop
jns
and
sbb
outsb
mov
stos
jb
xchg
jl
mov
ret
xchg
add
stos
icebp
mov
xchg
pop
mov
pop
fsubrl
mov
and
clc
repnz
shrb
sub
jno
imul
mov
loopne
rorl
aam
inc
bnd
fnstsw
fwait
xchg
inc
and
mov
stos
mov
test
outsb
ds
dec
or
inc
inc
cmpsl
fcmove
inc
scas
rolb
inc
and
sti
mov
mov
hlt
xlat
lock
sub
or
cmp
dec
aam
dec
mov
mov
stos
repz
mov
jl
xchg
imul
push
mov
xchg
xor
sbb
pop
imul
mov
jo
sbbb
inc
add
out
push
outsl
loope
sti
cli
jg
xchg
ret
jb
cmpsb
xchg
lret
or
cmp
jg
imul
xor
shll
and
mov
or
push
pop
dec
and
inc
insb
jns
dec
mov
inc
xchg
out
sub
or
jne
jg
test
xchg
jne
aam
adc
xchg
jno
loope
out
push
jnp
dec
repz
leave
out
xchg
push
pop
dec
ja
arpl
add
out
pop
fcmove
add
add
add
adc
mov
out
mov
std
enter
mov
pop
jns
pop
mov
cmp
mov
pusha
loope
data16
pop
add
push
mov
xacquire
outsl
in
jge
xor
bound
orl
test
dec
mov
sbb
sub
add
je
inc
clc
cmp
imul
popf
add
pop
adc
dec
sub
movsb
dec
jmp
pop
mov
add
push
pop
pop
dec
pop
jmp
mov
sqrtps
cmp
imul
outsb
xchg
notb
pop
dec
lods
aas
fisubs
insb
psllw
notl
mov
sbb
jb
ds
cwtl
mov
jne
popa
pop
scas
rcrb
in
lea
mov
push
mov
or
out
aam
ss
jle
mov
sub
cmp
imul
push
mov
jbe
or
repz
sbb
cmp
push
pop
sti
jp
mov
jne
xor
mov
sbb
xor
sahf
std
push
loopne
stc
push
push
mov
rcrl
xor
pop
inc
mov
pop
bound
inc
stos
jnp
mov
stos
aad
js
jg
fistpl
push
and
addr16
outsb
push
popa
lock
scas
fdiv
ds
mov
pushl
cmpsl
jle
cli
mov
mov
mov
sbb
loope
and
cmpsb
sti
and
fldt
gs
dec
clc
xor
pop
jae
aad
sub
pop
mov
or
or
aaa
or
inc
neg
mov
aaa
xchg
add
pop
fwait
in
aad
insb
dec
pop
push
add
add
stos
jnp
fdivrs
sub
jp
cmp
sarb
mov
scas
es
mov
lods
shrb
int3
stos
mov
cwtl
movsl
loope
cmp
push
in
jecxz
push
stos
leave
lods
popa
daa
mov
lds
mov
xor
imul
out
fmulp
enter
loopne
les
pop
dec
cmpsb
out
mov
dec
pop
sbb
sub
fld
jge
jl
sbb
and
ret
adc
dec
repnz
xor
mov
shrb
arpl
and
leave
mov
mov
mov
lods
pop
add
roll
push
jle
cs
or
sbb
jno
repz
push
fstpl
xlat
insb
pop
jg
and
or
mov
negb
dec
lods
jle
xchg
inc
push
imul
pop
xor
test
ja
clc
dec
das
add
jnp
nop
and
movsb
sbb
mov
pop
repz
mov
mov
or
push
lods
test
mov
jl
inc
lahf
inc
dec
daa
push
js
inc
nop
ret
xorl
js
fcoms
mov
add
imul
movsb
fyl2x
arpl
cmp
pusha
ljmp
inc
cmc
jecxz
jne
pop
sahf
push
imul
sub
pushf
flds
cmp
xor
or
hlt
add
xlat
fadds
lret
pushf
sbbb
inc
les
add
repz
ss
jmp
pop
sbb
jmp
pop
jmp
test
andb
and
dec
push
xor
cmp
mov
mov
dec
push
ficoml
jmp
jmp
and
mov
mov
inc
lock
add
and
shl
dec
sub
push
leave
xlat
xor
aam
imul
rorl
in
stos
call
add
sub
mov
lea
cmp
mov
mov
adc
xor
adc
pop
add
nop
sbb
data16
dec
lea
or
sbb
mov
andb
es
sarb
or
das
in
ljmp
rorl
or
mov
mov
testb
stos
pop
pop
mov
insb
pop
cmp
add
sti
gs
dec
sbb
ficoms
leave
push
jno
cmp
lds
es
jns
or
inc
xchg
mov
or
jecxz
data16
mov
ret
sub
xchg
adc
pop
jge
and
add
sbb
scas
addr16
scas
cmp
mov
loop
xchg
push
popa
dec
inc
mov
pop
mov
lods
mov
daa
mov
add
test
xchg
es
into
or
aam
sbb
and
ljmp
in
je
rcrl
dec
push
in
mov
ficoml
pop
and
xor
or
jg
lcall
push
pop
jg
out
cvtps2pd
pop
out
movsb
mov
sbb
push
out
test
or
or
push
lock
cmp
je
mov
lret
fldt
sbb
sbb
repnz
mov
test
fucom
mull
xchg
popf
vmwrite
cmp
jbe
adc
xchg
popf
stos
mov
cmp
stc
jl
rorb
imul
mov
and
iret
in
testb
dec
out
inc
int3
mov
outsl
or
mov
ret
lds
jo
push
mov
adc
xlat
sbb
xchg
out
pop
dec
jbe
add
or
and
movsb
ljmp
lea
push
rclb
in
jl
push
stos
and
scas
jns
push
xchg
jo
jo
push
sbb
scas
or
cmpxchg
movsl
sub
push
push
std
push
fiadds
inc
shrl
cmp
cmp
pop
jne
lret
xchg
dec
jl
cmpsb
jb
out
jp
lea
pop
mov
aam
test
sahf
sbb
fisttps
cwtl
or
mov
pop
add
push
sub
xchg
ffreep
adc
jo
shll
xlat
ljmp
add
test
out
adc
dec
push
cmp
cs
rolb
mov
stc
add
rclb
pop
sbbb
jne
int
sbb
cmpsl
and
cmp
jmp
stos
jg
adc
and
imul
shll
add
rcrl
je
mov
xor
fcomip
xchg
mov
fdivl
xchg
pop
jne
sbb
dec
notl
sbb
add
mov
fadds
out
cmpsl
add
test
adc
lret
gs
xor
call
sbb
dec
pop
addr16
jb
mov
shll
or
push
out
lock
xchg
xchg
jbe
mov
xor
pop
stos
inc
mov
mov
xchg
dec
mov
xchg
aaa
jg
addr16
gs
imul
fstpt
push
xchg
mov
filds
cmp
frstor
ljmp
cmc
pop
mov
adc
xlat
xchg
mov
adc
lret
in
mov
out
pop
daa
xchg
inc
ficompl
sub
and
lret
dec
mov
arpl
call
mov
dec
pop
sbb
and
jne
popa
sbb
mov
xchg
add
dec
dec
roll
adc
lods
sbb
dec
xchg
stos
stc
mov
movsb
popa
pushf
div
pop
insl
mov
mov
push
sbb
cltd
push
adc
jae
xchg
or
or
scas
out
xchg
rcll
and
sarl
pop
leave
mov
fdivs
rep
push
dec
jge
scas
cmpsl
leave
sub
pop
adc
dec
aaa
test
pop
mov
es
ret
lods
repnz
cmp
and
aam
xchg
push
sbb
jb
popf
andl
mov
sub
add
cwtl
lds
ja
lret
xor
kandnw
jns
xchg
or
gs
jo
adc
stos
pop
mov
xchg
cmc
mov
lock
push
adc
fsubrl
adc
repnz
push
adc
inc
mov
xor
sub
xor
hlt
daa
popw
loope
pushf
push
dec
jmp
sahf
or
fstl
add
or
xlat
ret
jl
push
xchg
mov
test
daa
vpcmpgtw
test
dec
jno
jbe
test
outsb
push
test
xchg
ja
dec
sub
jb
fstps
pop
insl
push
push
cmpsb
lods
cld
aad
fistpl
xchg
sbbl
cmc
into
xlat
pop
dec
pop
mov
jbe
scas
jbe
lock
imul
ja
into
rorl
in
orb
dec
mov
adc
or
push
popa
mov
push
fld
shll
mov
imul
mov
xchg
mov
insl
xchg
or
cs
and
out
push
out
jmp
fwait
loopne
sbb
pop
rorb
pop
sub
jbe
divb
push
adc
mov
iret
bound
mov
rol
jb
xchg
or
imul
ds
pusha
jno
cmp
mov
repz
push
mov
xchg
in
repnz
or
enter
and
or
xor
arpl
mov
out
mov
test
jns
xchg
fisubrs
mov
movsbl
mov
sti
push
jnp
mov
cmp
sub
in
mov
test
repnz
mov
ja
push
insb
and
ret
push
mov
call
push
pop
push
xor
push
das
dec
mov
xor
aam
test
jns
stos
in
insb
push
bound
and
dec
adc
sub
mov
mov
mov
mov
cmp
lea
pushf
cli
imul
dec
loope
dec
jp
out
or
mulb
inc
add
mov
sti
dec
mov
sub
pusha
ja
divb
inc
pop
xchg
inc
inc
and
icebp
lea
lret
jo
add
pushl
pop
pop
mov
inc
leave
sub
mov
jae
jbe
xchg
mov
jp
xor
stc
stos
xor
insl
loope
call
int
aad
int
mov
lahf
addb
jp
sub
popf
shll
cmp
xchg
mov
cmp
loopne
xchg
xchg
dec
pop
or
les
bnd
jne
or
pop
lock
push
xor
add
insb
xchg
imul
inc
push
jns
inc
sub
cmpsb
ljmp
jbe
sbb
jle
movsb
cwtl
pushf
add
loope
push
pop
out
sbb
icebp
cmc
popf
cmp
jnp
sarb
sbb
and
orl
lds
add
divl
int
shr
pop
jne
sub
out
mov
sbb
aas
mov
sbb
test
or
lds
mov
insl
dec
repnz
bound
or
loope
mov
repz
cmp
jns
les
paddw
subb
stos
stc
xchg
aam
push
popa
into
pop
inc
sahf
lods
mov
cmp
xor
inc
test
int
sti
pop
pop
pop
push
mov
fistpl
cld
inc
movsl
ret
mov
or
xor
adc
mov
jns
cmp
dec
gs
in
push
xchg
pop
jbe
in
pop
addr16
mov
or
jg
add
ds
pop
push
sub
xor
cmp
iret
lds
mov
pop
lea
test
xchg
sti
push
mov
inc
scas
adc
rcrl
fs
loopne
pop
mov
mov
orb
loope
ret
sub
arpl
imul
lea
xchg
inc
push
xchg
mov
and
mov
repz
test
adc
daa
xor
mov
lds
sub
jno
jo
popa
ss
mov
mov
xor
sahf
out
pop
imul
jae
jmp
mov
je
push
incb
cld
lods
dec
test
sub
push
mov
xor
fildl
clc
dec
push
adc
xor
mov
movsl
jmp
imul
xchg
insl
xor
jne
sti
nop
adc
fwait
and
gs
xlat
shlb
mov
into
out
push
incb
inc
in
aam
jae
cwtl
bound
adc
adc
lahf
movb
nop
xor
cmp
sbb
sub
mov
ficoms
mov
mov
mov
into
pop
arpl
dec
aas
and
gs
ja
add
gs
jnp
add
sbb
inc
stc
mov
and
xchg
adc
in
nop
xchg
rcr
xor
push
pop
sub
popa
xchg
fidivl
scas
lret
gs
test
or
hlt
push
mov
mov
mov
mov
xchg
aaa
popf
test
mov
jecxz
add
into
or
fmull
sub
test
fs
cmp
loope
inc
pop
stos
add
daa
push
shlb
push
pusha
pusha
mov
sub
xorl
in
lret
dec
xor
mov
pop
imulb
mov
push
ljmp
add
imul
lock
adc
or
sbb
insl
outsl
out
in
cs
cwtl
sti
xor
xorl
sti
jecxz
leave
das
popa
sub
loopne
dec
push
jmp
iret
subb
pusha
mov
mov
movsb
mov
fisttpll
out
jno
bnd
inc
adc
outsb
icebp
cwtl
pop
jns
pavgw
leave
and
sarl
add
pop
je
je
dec
mov
and
xorb
sub
jmp
shll
xchg
lods
pop
push
adc
inc
inc
pop
jecxz
cmpb
jmp
mov
add
sbb
jp
mov
sti
xor
test
scas
bound
adc
inc
cmp
cmp
test
loope
test
rorl
jg
add
sahf
jecxz
or
or
fdivrs
pop
sbb
sub
bound
ds
push
insb
adc
dec
inc
sbb
and
mov
sahf
inc
xor
push
add
sub
mov
fwait
repnz
pop
in
cmp
or
or
outsl
lods
aad
push
mov
scas
xor
lods
dec
lods
repz
cmp
repz
imul
cmc
pushf
push
xchg
push
mov
and
pop
sbb
lcall
push
fs
je
xchg
cmp
mov
add
xor
mov
mov
xchg
sub
xchg
push
dec
dec
sub
xorl
inc
outsb
out
fdivrl
sub
sbb
jns
icebp
cwtl
cmp
cmp
cwtl
jle
cmpsb
daa
lret
pop
cmp
dec
out
inc
xchg
push
xchg
test
test
inc
ror
push
test
push
sbb
js
xchg
outsb
push
push
mov
mov
pop
sub
xchg
mov
sub
mov
inc
shll
test
sbb
fisttpl
mov
das
out
dec
out
addb
js
ficomps
xlat
cmpsl
xchg
jle
ljmp
add
sub
in
add
cs
jae
adc
adc
sahf
or
mov
or
mov
iret
mov
pop
loopne
push
cmpsl
lea
and
xchg
bound
xchg
in
adc
adc
rcl
mov
fnsave
xor
push
adc
mov
cmpsb
pop
mov
fstl
and
jg
int
outsb
mov
cmp
inc
jo
loope
push
mov
bound
nop
push
jmp
sub
arpl
xchg
mov
jo
test
int3
fwait
push
add
sbbl
sub
xchg
fisubs
jnp
jmp
aad
ret
gs
ret
lcall
dec
fxch
sbb
pop
cld
xchg
dec
insl
ret
add
jne
sub
nop
cmpb
imul
inc
insb
or
mov
stc
push
pop
inc
jo
jne
push
jbe
sbb
mov
inc
mov
insl
aaa
andb
and
pop
divw
dec
sbb
mov
inc
cltd
and
stos
cmp
add
or
fcmovnbe
test
mov
cmp
cs
les
cmpsl
fildll
stos
cli
jecxz
daa
shrl
stc
fldt
rcrl
pop
cmp
cmpsb
jmp
dec
vmwrite
pop
sub
xchg
add
mov
insb
out
in
xor
test
mov
cld
and
xor
aad
rcrl
mov
lcall
fdivl
adc
ficoms
aas
enter
adc
nop
mov
faddp
cs
inc
fstpl
push
mov
int3
clc
cmp
enter
in
testb
rorb
outsb
dec
mov
lahf
iret
adc
mov
fcompl
jns
hlt
inc
jecxz
fldenv
jmp
jnp
xchg
ljmp
daa
inc
icebp
pop
sbb
pop
cpuid
inc
stc
add
xchg
or
or
fistpll
push
ret
jg
dec
cmpsb
lahf
lods
ret
shrl
dec
add
mov
push
dec
pop
inc
push
lret
jle
rorb
fdivr
mov
jg
sub
push
cmp
mov
lods
fcoml
push
mov
loop
mov
fildll
cltd
cmp
pusha
push
push
fisubl
mov
inc
outsb
inc
jmp
aaa
loope
das
es
push
add
mov
xorl
inc
insb
xchg
int
add
pop
cmp
jae
dec
fisubl
push
ror
loopne
cmpsl
test
mov
fxch
inc
outsb
mov
repz
dec
scas
call
outsl
arpl
mov
push
cli
int3
xchg
inc
xchg
cmpsl
cmpsb
mov
icebp
xor
mov
outsl
inc
stos
push
js
jg
push
roll
adc
mov
mov
dec
loope
pop
rcrl
test
decb
push
sbb
sbb
fldcw
fnstcw
icebp
mov
scas
shrb
sti
ja
aas
add
call
cmc
push
jp
push
mov
mov
insb
fisubl
add
pusha
lret
std
sahf
mov
scas
cmc
insl
cmp
stos
push
daa
faddl
mov
daa
mov
xor
xchg
aas
lock
stos
inc
popa
dec
cmp
mov
pop
lock
sbb
cmp
and
pop
std
fistpl
cltd
js
inc
out
scas
sub
mov
jge
mov
outsl
cmp
mov
cli
adc
test
cmp
fiadds
leave
xchg
xchg
sarb
xchg
movsl
xorw
lret
mov
xchg
xor
cld
leave
shlb
sbb
rorl
ljmp
add
xchg
loopne
or
bound
mov
mov
mulb
jmp
test
mov
mov
or
sbb
inc
dec
pop
inc
aaa
jno
lcall
popf
push
jg
sub
pop
fcoml
shl
daa
int3
pop
xchg
fimull
push
test
add
sub
jmp
sub
cmp
fnstcw
addr16
xor
lret
arpl
cmp
pop
fdivr
stos
rcrb
sbb
daa
adc
leave
add
stos
ret
pop
cmpsb
clc
pop
cmp
inc
aas
mov
xchg
jmp
cli
popl
std
psadbw
xor
cmp
adc
addl
sub
lds
sub
or
jbe
addr16
xchg
ror
ficoml
pushf
or
leave
jbe
mov
jle
cmpsl
push
adc
adc
cmp
bound
adc
mov
add
xor
orb
mov
add
lcall
jge
xor
mov
and
out
call
inc
jecxz
scas
xchg
js
test
sti
cmpsb
add
hlt
sti
in
ret
push
inc
fsubl
inc
lahf
cld
sub
imul
daa
scas
mov
cmp
mov
add
mov
icebp
mov
cwtl
test
test
jg
xchg
jp
shr
into
mov
or
mov
adc
or
repnz
cltd
xchg
add
adc
mov
data16
insb
stos
dec
xlat
insl
xor
add
mov
mov
add
leave
add
fst
mov
data16
jmp
aam
and
enter
dec
pop
in
adc
popa
arpl
adc
loop
and
sarb
ret
adc
inc
jnp
iret
arpl
or
addr16
and
xchg
sub
dec
xchg
push
or
mov
cwtl
pusha
dec
sub
loope
mov
sub
push
hlt
jge
mov
movsb
lods
imul
popf
mov
loopne
fcoml
jmp
cwtl
adc
mov
loop
mov
pop
insl
jno
imul
push
ja
dec
popf
test
push
xor
jl
adc
ret
sub
repz
add
aas
or
imull
sbb
xor
test
push
outsl
das
sub
sti
pop
cmpsl
pop
adc
jne
cli
pop
movsb
lds
jecxz
push
mov
dec
les
iret
adc
cmp
sti
aaa
sbb
cmpl
movsl
into
test
inc
xlat
adc
test
daa
fwait
cwtl
inc
jne
inc
xor
push
cltd
shll
dec
mov
cmp
lea
adc
adc
jge
adc
mov
lahf
xchg
push
add
cs
pop
pop
aaa
cli
popf
mov
and
popa
outsl
jmp
es
sar
pop
mov
js
aad
or
cld
jmp
adc
mov
push
mov
mov
bound
dec
cmp
insb
mov
dec
negb
fiaddl
push
xor
mov
sub
mov
out
mov
dec
push
sbb
repz
enter
cmp
popf
mov
or
cmp
xchg
enter
mov
sub
in
shlb
mov
mov
les
pop
movsb
cmp
pop
pop
add
dec
and
adc
pop
xor
adc
mov
into
in
pop
fwait
xchg
lea
ffree
sbb
mov
mov
add
sbbl
xor
cs
mov
lcall
iret
cwtl
pop
pop
popf
in
cli
arpl
filds
decb
sub
fidivrs
cmpsl
xor
sbb
adc
mov
inc
pop
lods
cli
out
leave
xor
adc
push
fadds
xchg
mov
fstl
dec
sbb
push
es
xor
pop
mov
mov
das
dec
push
mov
icebp
mov
jecxz
mov
lret
pop
adc
cli
fs
mov
dec
jb
adc
popa
xor
mov
push
scas
jno
mov
ss
out
test
xor
dec
xchg
mov
jae
adc
insl
dec
fwait
sub
sbb
mov
jle
jmp
dec
mov
es
push
add
cmpsl
rorl
loope
sub
push
jge
xlat
lods
xlat
outsl
shrl
popf
mov
add
mov
lea
adc
test
sti
fisttps
scas
test
out
xor
push
incl
mov
ljmp
lcall
mov
insb
mov
int3
fdivrl
lret
orl
push
xchg
add
fsubr
repnz
lods
mov
jae,pt
adc
js
shll
cmc
push
sub
push
loope
jmp
imulw
fstpt
dec
cwtl
cld
pop
xchg
adc
dec
add
jb
mulb
push
adc
test
jno
das
jnp
fisubl
xchg
pop
adc
out
andb
add
lods
and
xchg
fs
dec
cmp
ja
gs
and
push
lret
sti
fwait
jecxz
xorb
push
push
or
cmpsl
adc
nop
in
cmp
fwait
sbb
mov
jo
or
int
jp
xchg
daa
jecxz
or
adc
add
jae
lret
sbb
mov
sub
aam
imul
jecxz
pop
xor
and
iret
cmp
sbb
test
fimull
js
subl
outsb
inc
mov
imul
push
mov
fwait
test
and
xchg
adc
jnp
sbb
aad
loope
adcb
inc
xor
hlt
pushf
in
insl
cli
and
cmp
add
stc
fistl
jecxz,pn
sub
outsl
cld
in
and
inc
outsb
cltd
les
add
ljmp
jno
cld
int
pop
mov
into
push
filds
addl
stos
pop
fildl
sbb
iret
pop
popa
cmpsl
dec
lds
mov
jnp
add
outsb
pusha
dec
call
ss
test
lods
lahf
xor
push
rcll
data16
adc
ja
mov
sti
pop
rorb
or
in
cltd
or
mov
mov
shlb
mov
dec
pop
mov
inc
mov
xchg
jns
sbb
jne
and
outsl
cld
fs
ss
dec
sub
call
mov
inc
loopne
loope
iret
icebp
repnz
and
les
add
or
rep
sub
mov
fistl
lock
xor
xor
mov
ja
dec
mov
in
les
xchg
lret
xchg
xchg
fwait
int3
inc
lods
mov
in
jecxz
xchg
stc
das
cmpb
pop
btr
cmp
push
fbld
bound
mov
dec
dec
into
or
adc
jb
int
inc
jno
jb
xor
mov
inc
push
shrl
ror
js
mov
dec
aad
or
jl
out
aas
jl
fldl
je
mov
das
repnz
scas
das
test
jle
mov
mov
adc
xor
filds
or
pop
xlat
sbb
in
xor
mov
outsl
imul
hlt
and
xor
xor
imul
into
insl
sbb
in
jp
stos
push
adc
out
iret
xorb
mov
push
iret
stc
cmp
lods
sub
adc
sahf
inc
lea
xchg
and
inc
scas
add
test
sub
add
aam
mov
mov
add
cmp
ds
pushf
dec
jbe
xchg
jg
into
jae
fsubrs
ss
incl
mov
cmpb
adc
sbb
gs
and
mov
outsl
cmc
popa
adc
mov
pop
xor
adc
pop
inc
cs
jle
push
lret
fnsave
cs
ret
mulb
xchg
cmpb
mov
pop
cmpsl
movsb
movsb
shll
inc
mov
cmp
mov
lcall
js
pop
test
cltd
inc
inc
sti
gs
hlt
inc
jbe
out
into
cmp
cmp
xchg
add
push
push
sub
mov
pop
shr
and
lahf
mov
mov
sti
orl
jl
popa
and
mov
push
lods
addr16
call
xchg
dec
movsb
fcmovnu
dec
jp
ds
rol
jb
xchg
test
shrl
add
enter
in
iret
inc
fwait
jo
and
adc
in
mov
hlt
dec
mov
adc
sbb
mov
and
jmp
mov
dec
fistpl
mov
or
inc
movsb
cmp
outsb
ss
scas
or
cmp
mov
bound
notl
test
lahf
cwtl
pop
or
in
pop
and
movsl
mov
add
cld
loopne
and
mov
push
jmp
cmp
pop
out
pusha
sbb
cmp
jmp
scas
jg
dec
mov
pop
sbb
sub
jae
es
or
pop
icebp
pop
pop
loop
and
mov
std
or
mov
push
imul
ror
or
xchg
cwtl
std
repz
inc
scas
push
jmp
xchg
into
cmp
sti
xchg
mov
sbb
pop
inc
outsb
sbb
shl
pop
push
icebp
and
push
sub
xchg
cmp
les
test
add
sub
dec
or
movsl
jns
push
mov
pusha
inc
push
cwtl
nop
mov
jno
jne
pop
js
mov
pop
mov
adc
aad
call
add
xorb
out
popa
push
mov
bsf
movsl
inc
mov
xorl
cmc
inc
mov
sar
das
fisubs
popf
jo
add
adc
sahf
mov
cli
aaa
fwait
scas
xchg
popf
pop
mov
dec
xchg
arpl
repnz
stos
les
out
mov
lods
adc
dec
jecxz
add
push
movsl
shlb
movsb
xchg
push
cmc
cmp
push
repz
dec
loope
shrb
icebp
pop
pop
shlb
fnsave
or
cmp
mov
movsl
aam
fdivr
jg
outsb
lds
mull
add
mov
adc
push
cmp
xor
dec
std
mov
sbb
push
cmpsl
cld
jg
repnz
negl
sti
addb
popa
repz
lcall
or
fiaddl
scas
ljmp
out
inc
jp
ss
cmp
lods
aas
mov
in
aaa
fdivl
repnz
out
movlps
dec
out
push
xor
pop
jne
int
mov
xchg
das
push
loope
mov
cmp
je
jnp
xor
inc
rep
inc
xchg
mov
push
cmp
push
popf
ds
pusha
xor
pop
mov
pop
fcoml
fildl
mov
jnp
push
lods
ds
inc
cld
shll
out
popa
xchg
ss
repz
arpl
cmp
xor
mov
or
in
jecxz
pop
je
jle
repz
push
insl
imul
in
icebp
outsl
cwtl
cmp
adc
mov
test
xchg
lock
into
jmp
and
jp
inc
push
sbb
cmp
lods
aas
mov
mov
lcall
insl
lock
mov
push
movsl
cmp
push
insb
push
gs
sbb
pop
imul
mov
das
hlt
cmc
xorl
hlt
cwtl
int3
insb
pop
and
and
mov
xor
outsb
inc
xchg
push
inc
out
inc
stos
clc
mov
add
cld
scas
es
inc
mov
mov
lret
outsl
iret
popa
cmp
xchg
inc
fcomp
insl
pushw
sub
push
add
icebp
xor
push
mov
loopne
shlb
dec
divl
xor
and
sub
xor
popa
mov
mov
mov
or
pusha
hlt
pop
movsb
mov
push
push
push
subb
or
cltd
out
jle
fiadds
jp
push
inc
shlb
xor
push
ficoml
push
loopne
add
out
or
and
xor
movsl
adc
out
sub
fsincos
outsl
enter
mov
popf
in
add
add
outsb
xchg
pop
or
dec
insl
push
iret
sub
sbb
and
icebp
pop
repz
dec
lret
test
int3
jns
ljmp
es
daa
pushf
xchg
lods
dec
clc
je
sbb
mov
pop
lcall
mov
loope
jmp
sar
jns
cli
mov
shrb
mov
outsb
mov
pop
cmc
int
test
loopne
cld
add
addb
nop
imul
rcrl
imul
movsl
mov
sahf
hlt
mov
pop
mov
adc
fidivrl
mov
or
mov
add
inc
and
sbb
call
mov
out
cmc
sti
es
gs
rcll
in
adc
and
push
movsb
pop
pop
mov
repnz
lods
dec
cmc
push
jae
jne
sub
xor
clc
dec
hlt
roll
push
xchg
cmp
testl
outsb
adc
jb
inc
addb
icebp
push
out
jne
rclb
adc
jl
mov
mov
or
lods
dec
push
bound
jnp
cltd
add
repz
mov
out
push
xchg
loope
fcom
iret
push
scas
repnz
sub
hlt
pop
adc
mov
jae
xchg
add
mov
push
inc
mov
popa
push
inc
jmp
add
jmp
jbe
int3
popf
mov
xor
ljmp
ja
or
inc
test
mov
imul
adc
js
lcall
stos
into
aas
std
ret
xchg
xor
mov
add
cmpsl
jmp
lret
stos
lcall
mov
or
xor
xor
and
and
adc
jb
jno
mov
call
testl
dec
icebp
loop
cmp
mov
imul
dec
jl
ja
std
lret
push
xchg
lret
xor
sub
data16
adc
mov
jecxz
sub
pop
jle
sbb
daa
sbb
adcl
cmpl
nop
xor
subl
mov
cli
cmp
mov
jb
ret
push
inc
movsb
pop
shrl
repz
xor
ds
mov
iret
cmp
push
in
pop
push
in
or
xchg
fisttpll
cmpsl
sub
mov
push
lds
mov
jle
adc
pop
jecxz
mov
stc
in
das
fisubrs
loope
add
mov
outsb
lcall
dec
sbb
popl
mov
xor
mov
lcall
mov
stos
sub
sub
xchg
jecxz
push
into
cmp
mov
arpl
xor
enter
outsb
inc
push
xor
dec
jns
loop
add
in
and
icebp
cld
ficomps
test
mov
fmuls
and
js
mov
inc
xlat
pushf
fdivl
lods
clc
or
mov
dec
xchg
mov
cltd
mov
leave
das
enter
adc
rorl
bound
nop
popa
js
fisttpl
loop
out
push
enter
cmpsl
push
jl
mov
cmpsl
push
dec
xlat
and
pop
shlb
in
dec
push
es
test
adc
es
fwait
cld
outsb
in
dec
mov
mov
fxch
push
gs
cmp
sbb
aas
or
shll
jnp
aad
sbb
lret
fisubrl
xchg
xor
movl
push
jnp
jns
notb
xor
into
arpl
pop
jo
mov
dec
inc
loope
test
sub
mov
fstpt
mov
pop
sbb
mov
aas
inc
cli
loope
ret
lret
outsb
ja
sub
jge
cmp
jbe
mov
dec
dec
xchg
push
jne
ljmp
imul
rcll
outsb
or
pop
mov
add
movsl
mov
sub
lcall
sbb
or
xchg
cmpb
jae
pop
cmp
lret
add
or
lcall
int
scas
mov
mov
dec
cs
test
push
push
arpl
imul
inc
pop
cmp
jg
iret
ret
cmp
pop
in
pop
outsl
mov
addr16
rclb
jbe
ljmp
jl
mov
or
orl
dec
push
cwtl
cltd
cwtl
es
or
jne
adc
addr16
test
adc
das
or
fisttpll
mov
dec
pop
inc
ret
enter
lcall
dec
xchg
imul
stos
push
cmpsl
mov
out
je
push
and
mov
aas
and
dec
in
adc
inc
rcll
and
dec
ret
mov
int3
lea
lock
call
jge
and
nop
jo
gs
push
sub
int3
dec
aam
sbb
mov
shr
ja
adc
inc
insl
dec
faddl
inc
loop
comiss
orl
clc
stos
aas
mov
and
jmp
dec
sbb
xchg
ja
inc
stos
into
pusha
imul
iretw
les
lock
fwait
push
test
mov
mov
fidivl
adc
jge
repz
lods
aad
cwtl
or
lods
inc
fbld
cmp
std
pop
mov
in
jg
out
cmp
pop
ret
stc
std
int
xlat
add
mov
sbbl
negl
inc
pop
imul
fldenv
add
lahf
loope
test
sbb
es
nop
icebp
sub
mov
cmp
addr16
sahf
push
sbb
mov
lcall
stc
mov
sub
xor
xchg
cmp
shrl
mov
cli
dec
lock
aam
xor
leave
xchg
ja
push
bnd
or
outsl
pushf
pushl
lret
pop
sti
scas
lahf
sbb
ljmp
and
push
call
ret
mov
lcall
int3
fnstenv
mov
das
and
jge
xchg
pusha
rclb
gs
adc
or
sub
into
loop
sbb
roll
sub
inc
or
sbb
jnp
mov
std
xchg
leave
cmp
fisubrs
lea
pop
sbbl
lret
mov
call
nop
dec
push
xchg
ljmp
dec
fs
inc
xchg
cmp
lret
insb
cmc
sar
std
mov
inc
push
push
out
or
or
mov
dec
fisttps
xchg
aad
or
loop
adc
or
inc
adc
sbb
cmp
jnp
aaa
nop
enter
push
inc
insb
outsb
dec
xchg
enter
rorl
nop
loope
sbb
stos
inc
in
add
mov
mov
and
mov
adc
and
rol
in
stc
xorb
lea
rcll
pop
add
lods
mov
daa
or
sar
xor
add
or
inc
adc
stc
je
or
xchg
mov
fistl
enter
outsb
adc
mov
mov
popa
xor
cmc
lea
or
mov
mov
mov
add
pushf
add
arpl
pop
fwait
bndldx
mov
mov
fildll
lods
pop
and
inc
data16
adc
jo
mov
stc
mov
cld
fildl
fmul
mov
mov
je
add
cmp
jge
push
mov
adc
arpl
add
mov
call
xorb
fisubs
cmp
cwtl
inc
fstpt
xor
ficompl
sbb
mov
sub
repnz
mov
sub
xchg
xchg
lcall
xchg
cmpsl
jecxz
mov
das
pop
xor
dec
sbb
scas
push
mov
sti
stos
lcall
fwait
outsl
cmp
jge
and
dec
dec
ljmp
xchg
dec
stos
sbb
sub
jnp
ret
dec
inc
test
pop
out
lret
push
cmp
js
sub
fcomps
pop
inc
fstl
xor
push
sahf
out
cmpl
ss
scas
andl
sub
jae
int3
xchg
movsl
lds
ret
insb
scas
sti
lock
call
xchg
aam
daa
push
or
cmpsl
pop
inc
jmp
sub
mov
jo
xor
scas
dec
ret
fistpll
jae
int3
arpl
sub
jb
sti
sahf
insb
xor
jge
lret
mov
stos
aam
test
inc
push
test
cltd
push
das
in
mov
or
or
sub
inc
xchg
pop
loop
jp
cmp
test
cmp
mov
adc
jmp
sub
cmpsl
sti
push
addl
cwtl
popf
outsl
xor
fcom
mov
push
xor
scas
repz
inc
jo
mov
adc
jg
repnz
push
cmp
and
ficoms
arpl
add
and
xor
sahf
loope
jp
jmp
icebp
mov
and
leave
jo
add
push
sub
movsb
fld1
mov
out
lea
push
pop
xor
pusha
mov
jbe
loop
cmp
mov
out
jns
add
out
fsubs
mov
cli
insb
cwtl
adc
mov
fldt
push
int
pop
in
mov
stos
or
and
js
shrb
and
push
les
jle
push
fwait
sbb
inc
lret
push
daa
mov
dec
in
out
inc
push
out
pop
call
clc
push
xchg
addb
sub
add
leave
out
add
jmp
inc
mov
sbb
mov
or
out
cltd
subb
lcall
inc
xchg
pop
outsl
add
or
inc
xor
ja
cmp
divb
mov
pop
out
pop
xor
shll
pop
push
mov
imul
mov
sbb
cmp
jl
pop
lret
rorb
inc
aaa
movsb
or
cmp
fnstenv
xor
inc
insl
mov
xchg
push
out
push
xor
jl
inc
lret
pusha
mov
push
add
cld
fisttpll
add
and
push
add
sbb
mov
inc
es
imul
int
mov
loop
lret
imul
xor
mov
mov
sti
pop
fcmovnu
dec
sahf
shl
fsubrl
xor
cld
lds
repnz
sbb
test
aaa
decl
dec
lcall
leave
outsb
cmp
cwtl
jno
aam
xchg
and
jle
scas
ss
ret
mov
shrb
lock
popf
jge
cmp
in
fcmovb
lcall
push
out
jo
mov
push
out
lahf
jp
sbb
cmpsl
push
add
mov
xchg
popa
sbb
dec
pop
fnstsw
xor
in
mov
mov
pop
mov
daa
rorb
mov
cmp
add
add
cmp
mov
lahf
inc
es
mov
push
xor
cmpsl
fs
testl
fisttps
and
mov
mov
daa
rcr
cmpsb
fisttpl
inc
imul
cld
loopne
mov
ss
fwait
mull
push
dec
inc
in
jae
test
pop
mov
roll
es
xchg
icebp
loope
mov
or
or
cltd
lret
adc
sub
dec
cmc
pop
xor
popf
ss
lods
xorl
cmc
push
lds
addl
lahf
push
addb
add
loop
jge
ljmp
call
scas
jae
bound
adc
aam
cmpsb
imul
pop
push
add
pop
ret
inc
cmpb
and
fildl
cmc
cwtl
and
xchg
int3
xor
int
test
pop
psubw
dec
pop
sbb
bound
popf
rcrb
pushf
test
adc
cmpsb
lahf
into
fdivp
jp
cmp
dec
enter
aaa
lods
out
add
shl
pop
fs
jge
pop
out
cld
cmc
and
repnz
xchg
xor
sbb
stos
jb
xchg
mov
xor
jno
xorl
stos
std
push
mov
and
xor
push
repnz
out
mov
inc
pop
fimuls
orl
and
jne
jne
xchg
jae
loope
nop
arpl
push
popf
in
lahf
into
pusha
sahf
mov
jmp
in
cltd
cmpsb
dec
xor
cmp
mov
cltd
es
loope
pop
in
fcmovb
lcall
inc
das
in
gs
sbb
cltd
adc
in
fmul
lahf
enter
fisubl
push
mov
mov
add
and
or
mov
aaa
repz
cld
or
mov
xchg
cwtl
loopne
lret
cld
cltd
lahf
sbb
scas
mov
mov
sbb
imulb
cmp
jno
fdivrl
addl
lret
mov
sbb
leave
fstps
xor
pop
bound
popf
subb
pop
mov
cmpsl
jmp
push
sub
and
inc
xchg
out
in
lahf
ret
mov
dec
movsb
shlb
mov
mov
sbb
cmp
xor
negl
push
adc
pop
push
ret
pop
adc
push
fwait
mov
repz
and
adc
out
icebp
jle
shll
enter
mov
add
insb
xor
insb
mov
iret
ds
leave
in
sbb
mov
test
mov
dec
sahf
cs
cli
mov
dec
fldt
cmc
outsb
push
out
jmp
adc
inc
pop
pushl
mov
daa
mov
lock
pop
push
or
aaa
enter
mov
cmp
into
or
and
push
mov
mov
pushf
lods
das
inc
mov
shlb
js
mov
popf
jle
popf
pop
jb
std
push
in
or
mov
out
pop
dec
movsb
outsl
push
mov
adc
cli
xor
loope
fucomp
inc
dec
mov
mov
pop
les
jecxz
mov
xor
mov
add
inc
mov
les
inc
mov
mov
jae
outsl
filds
lret
incl
pop
push
jnp
push
cltd
sbbb
aaa
mov
mov
lock
jl
xchg
repz
jne
jecxz
outsb
pop
mov
push
xor
or
cmpsl
cld
jecxz
adc
sbb
decl
mov
cs
rcll
push
cli
add
popa
in
push
mov
xchg
aam
adcl
and
incb
fucom
mov
cmp
lods
cmp
imul
push
dec
rol
mov
jp
movsl
sbb
dec
loop
int
xor
cmp
adcb
fiadds
sbb
mov
jo
cld
aam
mov
pop
pop
pop
mov
aad
aam
pop
xchg
fsubs
test
sbb
ret
dec
imul
mov
jl
push
dec
movb
dec
xchg
push
stos
sub
xchg
push
inc
loope
mov
scas
xor
push
sar
push
and
aas
dec
jp
dec
dec
dec
dec
fptan
and
adc
out
lock
mov
cwtl
jo
dec
out
mov
out
lock
frstor
repnz
insl
cmpb
xorb
iret
in
call
pop
xor
ds
push
push
mov
add
int
pop
xchg
lods
jecxz
into
ret
shl
mov
xchg
xor
es
mov
fmuls
test
jno
or
xchg
or
sbb
sub
adc
sub
adcl
negl
xchg
sub
imul
call
stos
jo
mov
sbb
adc
xchg
stc
push
adc
les
jle
ret
lds
bound
rorb
jno
out
mov
sbb
stos
or
into
lock
mov
and
or
out
pop
mov
mov
xor
popa
lea
jne
es
aas
stos
xchg
mov
jg
repz
fdivp
xchg
fdivl
insb
outsb
popa
and
int3
pop
nop
out
push
adc
xchg
bound
mov
push
inc
pop
adc
sbb
adc
in
fisubrs
push
test
popa
pop
in
add
inc
pushl
and
push
cmc
push
jl
in
xchg
sub
lahf
cld
cltd
push
pop
cmpsl
in
hlt
in
fsubrl
push
es
out
ss
mov
cli
ret
aad
mov
sub
mov
pop
aaa
inc
sbb
cmc
xchg
pop
loopne
mov
idivb
or
pop
jnp
add
stc
sti
xchg
push
pop
cs
dec
xlat
jmp
and
mov
xlat
cmp
arpl
pusha
pop
push
mov
push
mov
add
jle
mov
inc
mov
xlat
iret
out
notl
out
xchg
cltd
notl
fwait
rol
cmp
sbb
sub
adc
pop
sbb
outsl
or
xor
cmp
mov
adc
shlb
push
or
inc
inc
scas
jg
jne
jbe
pop
pop
sub
out
cli
pop
jl
jle
sub
push
sub
ja
mov
adc
dec
bound
sub
pop
mov
mov
lret
pushf
sbb
mov
jb
inc
mov
cmp
sti
mov
rorl
inc
or
xor
cmp
xchg
xor
mov
xor
mov
mov
push
xchg
sbb
lock
popa
jnp
imul
or
leave
xchg
adc
jno
pop
mov
andb
adc
testb
sub
lods
ja
xor
enter
or
pop
add
aas
dec
jnp
jp
daa
aaa
jne
jmp
cld
bswap
cmpsl
mov
lds
push
aas
mov
daa
jg
stos
add
repz
and
movsl
and
into
outsl
es
mov
cli
sbb
adc
test
push
lock
fcoms
inc
sahf
in
test
fwait
sbb
cs
jmp
out
inc
push
stos
push
or
cmpsl
jae
dec
push
enter
inc
in
test
and
adc
idiv
jmp
or
sub
popf
or
pop
pushf
mov
and
push
sbb
pushf
in
iret
push
lock
cmc
or
mov
repz
ds
cmpsb
cmpsb
addb
shrl
adc
ret
cli
lock
dec
daa
jne
sbb
test
insl
push
loop
pop
cmp
or
popf
faddl
gs
imulb
jge
pop
scas
sti
popf
roll
shrb
adc
outsl
mov
mov
pop
mov
in
cltd
cwtl
lods
jmp
ret
jmp
jg
push
xchg
cwtl
clc
push
and
cwtl
and
cmp
sbb
jmp
movsb
leave
leave
movaps
inc
subb
push
movsb
jmp
ds
xchg
sub
addr16
xchg
mov
mov
in
rcrl
xor
pop
enter
int
in
ficoml
icebp
daa
pushf
into
cltd
stos
leave
mov
push
pop
iret
pusha
mov
out
adcl
pop
iret
out
adc
or
xchg
iret
movsl
insb
add
iret
cmp
mov
pop
xchg
popf
mov
aad
jae
repz
mov
les
inc
loop
ficoml
pop
xchg
push
adc
div
shll
movsb
hlt
mov
push
xlat
stc
imul
mov
sahf
dec
mov
mov
stc
imul
mov
adc
pop
mov
arpl
ss
dec
cld
dec
out
leave
aad
add
loop
insb
and
mov
sub
incl
adc
fidivs
icebp
mov
pusha
jnp
inc
jmp
mov
adc
xlat
push
xchg
add
stc
and
cwtl
add
cltd
out
in
in
movsb
inc
mov
out
push
fldcw
jl
or
lock
jl
push
stc
cmpsb
cld
clc
mov
add
cs
outsl
dec
xorb
push
aam
andl
mov
int
push
xchg
push
pop
cli
out
add
andb
cltd
nop
and
mov
sbb
inc
jmp
jl
test
or
push
add
sahf
lret
sahf
xchg
xchg
addr16
cmp
pusha
cmp
lcall
cmp
ljmp
cld
cwtl
lods
fldenv
or
jne
push
jmp
mov
push
push
mov
sbb
stos
pop
pop
jg
lods
sti
pop
add
push
sub
cmp
pop
insb
jae
lret
pop
or
andl
mov
add
add
daa
cmp
cli
xor
xchg
inc
adc
sahf
call
push
xchg
pop
or
add
dec
mov
test
xchg
push
adcb
cli
dec
outsl
fdivs
mov
fwait
fs
xchg
aad
aam
gs
jno
dec
or
and
movsl
dec
out
dec
xor
jnp
icebp
test
notb
sub
adc
fsubrs
pop
ja
jno
jg
sbb
aad
dec
cmp
mov
adc
inc
test
fisubrs
push
cli
xor
cs
negb
dec
cmp
xchg
cmp
bound
movsb
pusha
cmp
into
popa
and
fsub
add
sub
imul
adc
or
jmp
fnsave
pop
mov
es
push
mov
rcl
stos
scas
xlat
repnz
xchg
lds
mov
cmp
xchg
pop
pusha
stc
inc
pop
out
or
cmp
and
rcl
out
push
xor
cmp
push
out
lods
loopne
push
sbb
pop
pop
push
mov
xor
out
inc
out
jmp
test
in
cmp
sbb
stos
sub
pop
push
cmpsb
and
repz
lods
aad
xor
inc
jno
lds
in
add
sub
xor
ss
jne
sbb
into
imul
inc
mov
xchg
mov
adc
jg
ret
cmc
mov
sub
sub
popa
ret
jle
sbb
scas
jb
js
sbb
popf
mov
int3
repnz
mov
jo
adc
lahf
daa
pop
push
sbb
and
mov
out
popf
pusha
cmp
mov
cli
jo
in
dec
addr16
and
sub
xor
stos
mov
inc
mov
repnz
aad
mov
fcoms
aaa
insl
jb
stos
sahf
lahf
mov
sub
popf
adc
imul
sub
xor
dec
scas
dec
mov
add
push
jb
add
jl
jne
into
enter
in
dec
xor
icebp
or
mov
mov
mov
inc
fs
std
dec
xchg
adc
out
push
push
pusha
inc
pusha
jns
out
xor
sub
pop
pop
sti
mov
mov
xor
cld
and
imul
addr16
lret
mov
bound
ret
fwait
call
out
xor
mov
scas
pop
push
ja
insb
mov
icebp
movl
xchg
push
mov
cmc
add
lcall
jl
jb
cmp
loope
icebp
xor
xchg
and
sub
xor
cmp
jmp
int3
and
push
inc
fwait
mov
les
dec
mov
cmp
pusha
sbb
jno
outsl
sti
fwait
xor
jle
test
cmpsl
aaa
pop
cmp
inc
xor
cmp
nop
cmp
sahf
xchg
in
mov
jo
mov
pop
mov
xchg
ds
pop
fcom
ss
or
nop
test
loopne
inc
inc
jae
rcrb
lret
loope
mov
scas
cmp
mov
je
rcr
das
dec
aas
aas
and
mov
fs
inc
rcl
mov
repz
mov
mov
aas
mov
negb
push
repnz
icebp
dec
push
xchg
sbb
mov
xor
xor
inc
cwtl
inc
xor
mov
jle
lret
popf
mov
scas
adc
xchg
jno
add
lahf
mov
pop
pop
pusha
push
xchg
cwtl
sbb
add
and
jle
and
and
and
sub
nop
jl
out
mov
jg
lods
mov
jb
jo
insl
sbb
stos
jecxz
aaa
xor
mov
sbb
mov
lods
mov
fmul
enter
shll
xchg
and
gs
les
dec
mov
cs
out
nop
arpl
mov
push
movl
mov
mov
mov
lea
mov
roll
push
dec
and
sar
mov
xor
mov
mov
es
mov
cld
adc
hlt
push
push
xor
adc
jne
or
pop
sub
mov
mov
or
vminss
mov
das
mov
daa
mov
xlat
lods
shll
testb
add
inc
into
testl
cwtl
adc
fadds
mov
add
imul
xchg
mov
push
insb
push
jle
shl
mov
sbb
jecxz
mov
daa
mov
push
lret
push
cltd
enter
lods
testl
dec
popf
mov
sub
in
cmp
es
adc
mov
out
int
adc
xchg
popf
mov
inc
add
imul
stos
inc
sbb
cmp
out
adc
xchg
dec
in
ja
sarl
rorl
or
pop
cmp
stos
inc
cmp
popa
popa
cmp
ss
or
pop
xor
or
cmc
loopne
inc
shr
sbb
mov
adc
mov
dec
xchg
push
xchg
clc
mov
fistpl
or
sbb
lahf
inc
in
loope
and
shll
inc
mov
stos
dec
pop
mov
mov
loopne
cmpsl
xchg
mov
sbb
out
inc
daa
daa
cmp
add
xchg
sbb
cmpl
flds
xor
test
jg
insl
inc
stc
inc
pop
pushf
adc
hlt
imul
sub
xchg
dec
or
sub
inc
in
mov
inc
mov
in
repnz
aaa
pusha
lret
jl
push
jge
in
addb
test
sbb
mov
push
or
fcoml
jge
mov
mov
and
mov
and
adc
outsb
lahf
push
lahf
xchg
add
popf
xor
jp
je
jo
dec
mov
cmp
outsb
jbe
lret
stc
outsl
in
add
sub
loop
mov
adc
ret
pop
repz
ss
nop
cmpsb
fndisi(8087
loopne
rclb
test
inc
bound
add
lahf
dec
mov
test
or
into
push
imul
push
aas
dec
sahf
mov
pop
sbb
xor
jne
lock
sub
and
sub
cwtl
jns
cmp
divb
inc
loop
test
and
dec
mov
dec
jb
outsl
aam
enter
inc
or
push
outsb
jbe
repnz
test
movsl
test
fcomp
dec
dec
movsb
mov
lret
sub
in
adc
mov
iret
dec
loop
pop
push
in
jle
sub
add
sub
sarb
out
jae
cmpb
sahf
cmpsb
push
hlt
mov
sbb
aam
std
lds
orb
cmp
dec
mov
dec
addr16
push
stc
icebp
ret
adcb
addr16
pop
es
mov
mov
fcomps
stos
dec
in
lret
mov
or
jnp
bnd
and
jns
ds
or
lods
call
ds
aad
cmpsb
xchg
out
adc
push
or
fidivrs
icebp
sbb
add
mov
mov
repz
rorl
xor
cmp
pop
out
in
repnz
in
popf
push
movsl
sbbl
sbb
and
iret
call
stc
gs
inc
stc
and
scas
mov
push
mov
mov
sbb
aaa
aad
cmp
addr16
add
mov
cs
pop
cli
push
pop
cmpsb
or
cltd
mov
pop
and
add
rcr
push
cwtl
loope
sub
lea
xlat
sbb
in
jp
pop
pusha
loop
fs
movsb
cmp
lock
sub
pop
cmp
mov
clc
sti
repnz
inc
cwtl
lret
flds
mov
rcr
mov
scas
or
xchg
neg
adc
stos
stos
fwait
and
cmpsl
insb
jae
scas
repz
pop
icebp
popa
sti
xchg
sbb
jle
push
and
jns
cmpsl
mov
jae
push
jae
notl
push
cli
or
sbb
and
mov
notl
jmp
lods
xor
add
or
mov
and
dec
sub
andl
jae
jbe
xchg
movsb
inc
adc
xchg
mov
outsl
cli
movsb
in
sbb
sbb
pushf
mov
jge
loope
jo
jmp
push
mov
repz
mov
pop
adc
loope
mov
xchg
fistl
out
ljmp
cmpl
push
jmp
xor
add
cmc
pop
adc
ja
rcr
cmpsl
sub
ja
shll
fwait
cmp
dec
add
and
jnp
adc
test
cmpsb
fstl
push
sarb
std
push
or
fs
movsl
mov
lds
out
push
and
faddp
adc
int3
stc
or
in
dec
pop
js
mov
je
in
and
mov
push
jne
pop
push
xor
xlat
les
xchg
scas
push
mov
dec
loopne
clc
adc
repz
mov
dec
lcall
push
insl
iret
mov
insl
mov
mov
mov
push
jo
inc
pop
dec
xor
fs
dec
xchg
loop
pop
popf
sbb
in
mov
jbe
cmp
repz
sub
mov
loop
inc
testb
aam
sub
jb
scas
push
sub
and
fwait
into
inc
mov
loop
iret
cli
frstor
add
sbb
dec
mov
mov
push
mov
push
mov
dec
lock
stos
cmpsb
sarb
sub
xchg
jne
cmpsl
nop
mov
aam
mov
hlt
or
jge
pop
out
test
sub
cmp
xchg
ret
jo
jg
sahf
jmp
popf
rorl
fistps
pop
cmp
mov
sub
sub
aas
jnp
testb
into
inc
inc
mov
cmp
pop
adc
jecxz
hlt
enter
pop
mov
pop
adc
aas
add
xor
lods
enter
vmaxpd
cwtl
xchg
movsl
mov
mov
push
je
gs
and
std
jo
mov
and
loop
inc
das
into
lea
lods
cwtl
dec
mov
lcall
cld
mov
jl
loope
mov
pop
jo
add
and
sub
sbb
pusha
add
lahf
inc
sbb
push
sbb
dec
mov
outsb
sub
mov
into
sub
add
dec
xorl
int3
rolb
jns
in
dec
lret
add
movsl
jnp
scas
lahf
push
fildll
jecxz
loopne
xchg
cs
mov
nop
mov
movb
je
mov
sahf
inc
test
pop
dec
sub
push
mull
enter
xchg
adc
dec
push
in
sbb
pushf
and
mov
out
orb
fs
jnp
fbld
stc
jle
xchg
cmp
out
int
repnz
movsb
mov
fnstenv
adc
inc
mov
mov
icebp
popa
dec
push
sbb
mov
push
ret
push
mov
cmp
loope
in
push
lea
xchg
adc
jb
mov
test
sbb
sbb
mov
lods
cmpsl
or
jns
arpl
enter
jl
enter
xchg
fwait
sub
dec
cmp
imulb
xor
aas
jne
or
sarb
mov
fld1
mov
xchg
scas
adc
xchg
stos
cs
mov
push
sti
adc
mov
mov
cmp
or
lea
mov
mov
rcr
in
adc
xchg
inc
popf
ds
movsb
dec
jbe
ds
std
sbb
jecxz
pop
imul
lds
jmp
scas
cmp
add
sarl
mov
bnd
shl
loop
sbb
lods
dec
popl
sti
add
enter
out
mov
decb
pop
jle
jo
test
inc
inc
aam
xor
jbe
adc
jecxz
cmp
xchg
jmp
ss
les
sub
dec
fsubl
dec
push
cmp
mull
xlat
xor
ljmp
xchg
cltd
pop
shr
jg
fsub
js
test
int
xchg
and
iret
stos
popa
inc
mov
outsb
jg
push
mov
xchg
pop
xor
inc
mov
movsl
mov
mov
ja
mov
mov
pop
fisttpll
idiv
movsl
stc
push
sub
and
sub
adc
push
std
jmp
pop
dec
fildll
notb
cwtl
jmp
loop
push
xlat
inc
sti
dec
arpl
xchg
mov
sbb
xchg
and
repnz
int
push
pop
add
fs
test
xchg
inc
jmp
movsb
je
or
sarl
mov
and
sbb
xlat
sub
sbb
loop
dec
aaa
pop
fdivl
mov
into
and
pop
mov
and
jmp
jle
add
or
cmp
inc
pop
jbe
mov
and
call
pop
lea
adc
int3
jo
ja
xchg
inc
pop
imul
stos
scas
lea
jns
pop
cmp
inc
add
pusha
or
fistps
push
jne
into
out
fsts
pop
mov
adc
jl
fsubrs
sahf
ljmp
mov
inc
xchg
sbb
or
jle
rcrl
pop
lock
stos
mov
imul
push
cmp
je
mov
incb
inc
mov
push
xor
jo
xor
int3
mov
dec
call
lea
jo
jnp
les
adc
icebp
fidivrs
and
inc
add
xchg
and
out
xchg
ds
push
sbb
js
int
mov
std
push
push
xchg
mov
mov
shrb
repz
or
pop
ret
pop
xor
xor
jno
insl
mov
sub
push
enter
das
rcrb
mov
dec
stos
out
outsl
rolb
in
xor
xchg
arpl
lea
mov
sbb
dec
cwtl
outsl
xor
mov
mov
push
loop
out
dec
sbb
jns
adc
bound
aad
xchg
add
pop
fwait
iret
negb
adc
hlt
in
lods
cld
out
insl
xchg
and
sbb
ficoml
cmp
jbe
add
and
subb
call
or
cltd
add
pushf
outsb
lret
push
jns
xor
sbb
insb
jnp
mov
ret
sub
test
notb
lock
pushf
push
out
cmp
lds
sahf
push
sbb
sarb
mov
xor
lcall
test
and
add
sbb
lret
push
adc
jbe
testb
jns
outsb
idivb
test
adc
mov
inc
dec
add
mov
push
adc
push
mov
insl
dec
ret
lahf
and
shl
cli
push
sub
or
mov
fwait
iret
rcrl
mov
fildll
and
imul
mov
addl
data16
or
div
dec
or
fs
mov
jae
jl
xchg
mov
sbb
inc
xchg
call
ret
pop
xchg
jecxz
insl
mov
in
push
jge
xchg
ljmp
imul
cld
lcall
test
xor
or
test
fdivrl
sbb
mov
xor
inc
popf
push
icebp
aas
jne
or
jge
aas
fwait
cmp
mov
add
mov
shrb
jp
xor
call
or
inc
cs
lea
add
cltd
sbb
aad
jnp
out
dec
in
mov
fistpl
inc
fists
push
sbb
fs
fucomi
or
push
aaa
rol
mov
int3
pop
push
xor
xor
test
arpl
and
mov
xor
dec
insb
lea
fdivrl
sbb
in
mov
cmpsb
imul
or
and
dec
inc
xchg
xor
lods
mov
adc
mov
sub
testl
das
inc
aam
mul
xchg
pop
and
adc
jne
out
or
dec
repnz
ds
testb
in
adc
fdivrs
das
and
push
jno
xor
push
dec
loopne
mov
mov
repz
jecxz
aad
inc
cmp
mov
xchg
xchg
lock
nop
int
int
mov
sub
inc
sbb
xchg
lods
mov
mov
sub
out
cld
inc
je
shrb
push
dec
pop
pop
sub
jle
cli
push
lret
fnstenv
push
sar
bnd
jg
in
add
popf
xor
cmp
shl
test
mov
and
xchg
js
cmp
call
scas
cmpsb
xchg
decl
fidivl
mov
imul
inc
mov
dec
cwtl
push
clc
adc
call
in
movd
int3
cmp
dec
add
push
xacquire
cmpsl
push
jns
ficoml
add
mov
lcall
lock
inc
fstpt
clc
and
rclb
repnz
mov
lret
mov
rcrl
dec
mov
outsl
mov
mov
lods
lea
mov
ds
add
fisubrs
js
movb
dec
mov
mov
cld
and
sbb
cmpsb
lods
sub
sbb
lds
sub
ja
arpl
pop
and
add
push
test
subl
xorl
rol
andb
mov
adc
cmp
dec
xchg
and
cs
pop
mov
lahf
and
sub
int3
in
ljmp
xor
rorb
jbe
lods
or
inc
push
mov
imul
fcmovnb
in
sbb
insl
bswap
gs
scas
test
clc
ljmp
dec
inc
or
leave
adcl
jle
enter
sbb
adc
xchg
jne
mov
aam
cmp
test
sbb
stos
cmc
cld
dec
mov
test
and
scas
popa
mov
subl
ret
es
rcrb
test
cmpsb
jmp
pushf
mov
mov
cwtl
pop
mov
shlb
data16
cmp
out
fidivrs
les
fistl
fwait
rolb
mov
mov
sbb
ja
mov
jbe
daa
cs
test
dec
or
jno
dec
ljmp
xchg
js
rcll
outsb
mov
lcall
clc
insl
scas
loope
lods
loope
xchg
xchg
sbb
bnd
pop
arpl
dec
aas
cmp
xor
push
mov
lods
int
sbb
int
insl
mov
xchg
lock
xchg
ljmp
mov
mov
sbb
push
icebp
js
xchg
iret
inc
push
fwait
popa
aaa
sub
jb
adc
pop
test
push
mov
cmp
sub
jmp
fwait
xchg
roll
leave
movsl
push
mov
insb
cmp
popf
mov
adc
ds
ds
add
je
sbb
ss
fcomps
xor
out
and
push
hlt
mov
ds
jbe
aad
pop
testl
mov
inc
dec
fcoml
jo
addr16
xchg
roll
insl
jecxz
sahf
push
mov
push
mov
data16
cmp
jl
xor
jg
int3
push
cmp
and
aam
call
aas
into
sub
mov
iret
xchg
lret
cmp
fnstcw
lods
insb
loopne
xchg
cmp
dec
pusha
pop
popa
mov
sub
fimull
pop
mov
adc
sbbl
out
sub
aad
pushf
movhps
add
pop
mov
inc
call
push
ficoml
lret
inc
cmp
pop
inc
jle
enter
push
pop
pop
push
scas
add
pusha
leave
dec
push
scas
aas
adc
outsb
cmp
insb
rorb
and
mov
enter
movsb
mov
cmpsb
xchg
in
cmp
jne
jge
divb
fdivr
add
and
rcl
jne
mov
jb
mov
push
jb
mov
pop
les
std
inc
cmp
mov
fs
iret
fcom
mov
fistpll
adc
jae
das
aad
icebp
xor
mov
dec
outsb
adc
dec
jmp
jg
mov
xchg
jl
fsubl
mov
cmc
mov
jl
xor
fwait
lods
push
loope
push
enter
lcall
mov
cmp
dec
lock
dec
xchg
xor
gs
outsl
in
jmp
lahf
stos
xchg
add
inc
cltd
fxch
aas
dec
add
insb
in
cwtl
push
lock
xor
fs
aad
push
dec
lock
popf
inc
mov
int3
les
xchg
cmp
mov
mov
pop
stc
test
js
inc
mov
mov
movsb
inc
add
int
mov
adc
xchg
sub
sbb
mov
notl
xor
and
jns
dec
push
cmpsl
icebp
mulb
xchg
push
mov
mov
inc
or
jo
daa
cli
lods
or
push
push
push
mov
xchg
inc
xchg
repz
jle
mov
sub
mov
push
inc
xchg
jb
je
imul
push
adc
stos
fbld
and
loope
das
loopne
or
cmpsb
bound
cmc
out
or
lea
mov
xchg
hlt
rcl
cmp
add
ss
mov
dec
sub
push
jg
movsl
in
mov
and
adc
daa
push
icebp
mov
bound
and
lock
jo
cmp
mov
mov
dec
cmp
rol
cs
xchg
mov
outsl
mov
dec
test
or
xlat
xor
cwtl
pop
ror
sar
lds
add
push
inc
mov
mov
les
jb
outsb
gs
lahf
repnz
jno
push
ss
imul
cmp
mov
fiaddl
loopne
dec
iret
adc
inc
push
mov
js
lods
int3
inc
in
movsb
xchg
outsb
outsb
gs
insb
push
pop
das
repz
addl
push
aam
rcll
sbb
setb
incb
fwait
cli
add
sub
pop
or
addr16
enter
imul
mov
loope
out
mov
sbb
mov
loop
pushf
push
push
xchg
enter
push
popa
pop
mov
pop
mov
and
sti
mov
cmp
mov
repnz
test
call
cmp
rorb
rclb
adcl
das
movsl
jno
fildll
mov
ret
fcomip
ret
or
sbb
and
pop
stc
push
or
mov
lods
sbb
test
add
enter
test
out
xchg
jbe
enter
and
or
add
dec
clc
xchg
sarb
pop
add
mov
or
leave
add
xor
lock
sbb
pop
bound
cmp
sti
divl
mov
cmp
js
shll
sub
jg
jl
jmp
cmp
cmp
pop
push
in
in
jne
mov
jno
icebp
or
push
clc
scas
adcb
imulb
add
or
inc
lahf
adc
mov
out
movsl
negb
stos
mov
mov
and
fdivr
icebp
sub
xchg
inc
and
add
adc
jecxz
insb
int3
lret
dec
pop
je
sub
mov
pop
jl
call
lods
movl
or
mov
cmp
pop
or
test
sbb
xchg
sahf
pop
jl
rol
orb
cmpsl
sbb
cmp
fadds
cmp
loopne
cmpl
out
sbb
push
out
rorl
add
jmp
fwait
inc
pusha
test
jge
or
dec
in
je
pop
xchg
clc
fwait
jne
gs
pop
xchg
cmp
push
mov
cmp
inc
dec
movsb
mov
jbe
sbb
or
xchg
or
das
mov
test
test
mov
xor
ret
adc
inc
loop
xlat
mov
mov
mov
adc
bound
enter
pop
sti
jne
mov
enter
adc
mov
pop
cld
or
ret
xor
add
or
sbb
in
ds
xchg
ljmp
std
jmp
sub
sub
xlat
mov
imul
ja
sbb
pushf
xor
les
enter
or
dec
pop
cwtl
lods
add
mov
cmpsl
push
cmp
cmpsb
das
inc
imul
or
adc
movsb
dec
leave
dec
mov
lret
gs
popa
pop
pop
bound
popf
fcoml
mov
add
mov
js
mov
sahf
imul
or
pause
rcr
jne
test
jno
mov
sahf
ja
sub
mov
push
pop
cs
int
lods
ds
push
stos
push
es
test
inc
jb
sarb
mov
mov
fisubs
lods
adc
pop
mov
push
inc
call
and
mov
mov
loop
and
jno
push
sbb
mov
test
repnz
adc
pushf
sbb
xor
das
cmp
push
shlb
bswap
daa
cs
inc
mov
pusha
cmpsl
daa
mov
repz
or
xchg
rcr
repz
or
scas
aam
adc
pop
xchg
scas
scas
mov
jecxz
dec
ja
les
ss
add
jne
lds
test
cmp
fiaddl
inc
pushf
sahf
mov
sub
mov
pusha
and
std
repz
jp
daa
pop
lods
je
out
shrl
or
inc
out
scas
mov
mov
xchg
aas
mov
aaa
inc
movsb
mov
shlb
test
adc
loope
mov
jecxz
dec
jns
js
les
subl
add
ret
pop
shrl
push
pop
dec
dec
push
aas
addb
push
sbbl
cmc
cmp
mov
mov
and
mov
xchg
pop
mov
adc
pop
sub
or
add
mov
and
xchg
subl
mov
call
outsb
clc
or
mov
push
jmp
add
sub
or
adc
test
loope
mov
andl
mov
mov
jae
pushf
pop
popf
inc
mov
loope
xor
mov
xchg
mov
repnz
scas
jg
push
cmp
sbb
add
push
lods
fsubs
cmp
lcall
cmpsl
pop
lods
pop
int
loopne
aam
mov
out
cmp
xchg
lods
shll
add
push
fists
xchg
jnp
mov
xchg
jno
mov
adc
cmp
sub
fdivrl
mov
mov
sbb
mov
out
popa
xlat
cmpsl
cmp
push
out
xlat
inc
xor
fisttpl
pop
inc
and
mov
scas
lods
mov
lock
add
insb
nop
mov
add
pop
fistpl
and
xchg
inc
aaa
mov
pop
cmp
mov
dec
adc
push
jp
jle
push
ror
push
call
xor
ds
push
fldl
jmp
rolb
movsb
aaa
jno
pop
lods
movl
xor
xor
outsl
shll
and
inc
pop
inc
fwait
call
in
push
mov
pushf
cld
mov
loopne
sub
jle
mov
dec
je
pop
enter
mov
dec
shll
pop
les
scas
fbstp
mov
push
aam
lret
loope
out
or
shll
fidivrl
adc
test
bnd
fnstcw
jne
loop
sbb
mov
pop
lds
aam
inc
ret
cld
inc
mov
out
les
and
xlat
sbb
rorl
sbb
rcrl
xchg
fdivrs
sub
in
out
loopne
loopne
clc
dec
push
into
aaa
add
scas
scas
mov
mov
mov
add
shl
sub
aas
enter
inc
add
fcompl
pop
loopne
test
subb
pop
out
jne
pop
sbb
jae
adc
xchg
addr16
add
pushf
icebp
mov
subl
popf
out
xchg
jmp
fcmovbe
sub
add
std
cwtl
xor
add
into
push
pop
and
push
inc
push
sbb
loopne
stos
subb
push
outsl
popl
test
jmp
push
aam
dec
das
negl
sbb
cmp
sar
push
mov
dec
mov
repz
insl
sub
mov
out
and
lods
push
jns
xchg
fwait
inc
mov
jb
cmp
popa
arpl
outsl
stos
xor
insl
jb
mov
sub
cmp
stos
push
push
cmp
hlt
bound
xchg
push
dec
arpl
and
movsl
in
cltd
lcall
sub
cwtl
adc
fstpt
sbb
xchg
jno
test
jle
lret
lds
les
inc
nop
pcmpeqw
pop
cs
mov
cmp
adc
aam
je
xchg
inc
dec
dec
clc
rolb
mov
fbld
sbb
test
xchg
fwait
clc
int
jl
pushl
xor
out
lods
pop
cld
inc
pop
xchg
jno
mov
test
mov
pop
nop
iret
cltd
lcall
dec
xchg
mov
jle
sub
rcrl
negb
popa
loopne
test
dec
mov
add
cmp
xchg
clc
test
mov
enter
pop
jp
ja
jbe
mov
ds
hlt
sbb
sub
or
jle
pop
and
sub
repz
push
mov
loope
arpl
sub
iret
sbb
add
cmp
shll
test
fldcw
push
imull
inc
mov
in
mov
jnp
iret
sbb
fildll
inc
inc
xor
pop
adc
push
mov
cmp
mov
pop
dec
test
jo
adc
mov
adcl
ret
push
push
cmp
fiadds
sbb
out
add
mov
aas
test
cmc
sbb
push
lcall
ljmp
pop
lret
xchg
sub
or
out
push
and
imul
mov
inc
cmp
imull
jl
jo
subl
mov
hlt
xchg
mov
pop
shll
push
xchg
movsb
sbb
das
bound
or
cltd
xor
pop
repnz
mov
out
ja
ret
in
cmp
ds
bound
xchg
insb
les
and
outsl
mov
sbb
hlt
in
adc
cltd
clc
test
sbb
std
out
mov
lds
in
in
cld
aad
popf
jecxz
jge
into
jae
arpl
sub
add
cmc
repnz
xchg
nop
mov
sub
iret
xchg
ret
mov
cmp
add
lret
jmp
leave
dec
xchg
int
add
jmp
jecxz
sub
xor
out
mov
mov
in
pop
adc
adc
pushf
xchg
xchg
mov
lcall
mov
imul
or
add
in
shll
rol
push
cwtl
mov
inc
jg
push
jo
das
sub
and
cwtl
fiadds
jmp
inc
loope
xlat
loope
add
or
add
sbb
mov
jmp
iret
fidivrs
lahf
icebp
mov
or
mov
push
xor
fisttpl
push
test
ret
popa
outsl
adc
cli
ret
pushf
sub
in
add
aam
stos
loope
jnp
sub
pop
negb
das
mov
pop
cs
or
loopne
mov
mov
push
inc
cltd
pusha
sub
push
loope
add
xchg
sub
imul
cld
idivl
fmull
jno
mov
in
xchg
sub
xor
iret
shrb
adc
xor
jecxz
sub
dec
mov
pop
outsb
popw
or
push
daa
sbb
add
mov
add
outsb
aas
sub
sahf
mov
jecxz
inc
add
roll
add
inc
mov
imul
inc
bound
dec
push
ss
leave
nop
test
ljmp
adc
adc
fbstp
ficoml
lods
and
bound
xor
test
decb
inc
mov
sub
jae
add
mov
jp
add
jmp
push
cld
inc
and
xchg
or
test
icebp
jne
push
push
shll
lahf
mov
pop
fcomip
pop
scas
dec
hlt
lret
inc
sbb
enter
or
xchg
sbb
inc
nop
add
mov
mov
lea
jecxz
sbb
pushl
mov
std
adc
fildll
mov
xchg
add
cmpsl
pop
popf
mov
loop
xchg
lret
push
icebp
cwtl
aad
enter
xchg
and
aas
mov
sub
stc
add
iret
push
inc
xor
inc
test
jb
push
inc
gs
fdivs
cmp
xlat
dec
add
fabs
testb
out
out
jae
push
mov
movsb
into
cmpsl
cmpsb
test
data16
cmp
mov
scas
xor
mov
sub
cltd
jge
jle
jbe
sub
mov
repnz
das
negl
xor
test
and
jno
sbb
cli
mov
cli
in
dec
enter
or
lea
test
push
push
ljmp
clc
roll
rcrl
mov
inc
mov
popf
xor
lods
stos
jge
loopne
ret
jne
cmpsb
xor
data16
or
cmpsb
fnstcw
pop
loopne
bound
cmp
pop
mov
adc
addb
cmpsb
add
inc
jp
xchg
rorl
loop
jnp
jmp
stos
mov
std
imul
sub
inc
ret
out
jecxz
out
xor
xor
outsb
xchg
inc
sbb
push
aam
pop
xor
rcrl
or
sbb
aad
lock
inc
push
dec
mov
iret
push
sbb
mov
pusha
and
inc
push
jge
push
mov
dec
icebp
mov
inc
sub
les
test
jmp
push
and
xor
add
jmp
dec
mov
pusha
aaa
fldl
push
adc
clc
pushf
xchg
enter
in
adc
xchg
les
in
lcall
outsb
loopne
cmp
fiaddl
sub
insl
je
nop
popf
loope
hlt
add
lods
adc
pop
test
icebp
xor
inc
mov
outsb
pop
mov
xor
pop
cmp
pop
xor
lea
sbbl
cmpsb
xor
pushf
mov
xor
in
aad
sbb
lea
mov
sbb
add
push
rclb
loope
mov
addr16
jl
dec
fs
and
repz
or
sub
xor
push
xor
lret
lcall
or
xchg
mov
mov
sbb
mov
sbb
add
call
std
or
mov
cs
mov
mov
shll
push
push
mov
cmpxchg
dec
xchg
int
iret
sbb
mov
push
or
sub
add
sar
xor
cmpsl
call
pusha
jmp
sub
inc
ds
dec
in
adc
mov
push
mov
call
cmp
jecxz
mov
jae
jo
push
jecxz
aam
push
pop
and
in
popa
mov
ret
jmp
pop
jno
stos
or
cltd
pop
cmp
jle
mov
push
cmp
lea
push
adc
cmp
adc
lock
icebp
mov
scas
enter
inc
jb
les
or
mov
faddl
or
and
andb
stc
and
push
xchg
data16
cmp
mov
and
inc
mov
jl
pop
stos
dec
aad
xchg
loopne
dec
mov
cmp
and
daa
cmp
mov
xlat
shll
push
mov
ljmp
out
ffree
loope
fwait
inc
ja
and
inc
out
pushf
push
imul
mov
add
jnp
xchg
gs
sbb
and
pop
sub
inc
jmp
xchg
xchg
cmc
pop
or
mov
test
lods
sbb
or
inc
insb
mov
adc
fsubl
cwtl
add
movsb
inc
fcmovne
aam
sbb
aaa
inc
or
hlt
std
popa
stos
jmp
shl
ret
adc
mov
push
ds
xchg
inc
add
stos
dec
aam
mov
pop
sub
pop
pop
daa
out
xor
pop
mov
test
lret
xchg
enter
mov
fdiv
in
sti
push
lods
lods
shr
mov
pop
rolb
insb
out
jnp
add
dec
xchg
jge
shll
pushf
aaa
jg
sbb
imull
dec
xor
inc
hlt
test
sub
fmulp
sar
clc
das
jmp
movsb
mov
and
sahf
push
cltd
cmp
or
es
fstl
out
ds
scas
pop
cmp
and
sbb
inc
sarb
mov
push
stos
mov
imul
sbbb
push
sbb
enter
or
mov
ffreep
cmp
shlb
jae
dec
stos
lea
sub
lds
div
dec
mov
cld
pop
jns
cmp
xor
add
mov
idivl
dec
pop
push
jge
ret
shrb
or
add
or
xchg
pop
fistps
xchg
jns
pop
xchg
xor
sbb
int
in
push
stos
imul
sub
int
mov
pop
movsb
jns
mov
xor
dec
lds
mov
cltd
mov
mov
add
sbb
push
pop
mov
arpl
dec
cmp
pop
mov
jb
push
xchg
mov
hlt
mov
hlt
jbe
test
push
sbb
pushl
movl
andl
mov
mov
jle
cmp
stc
dec
jne
dec
fs
cmp
fisttpll
adc
ficoml
and
adc
add
rcll
jne
pop
cmp
pop
popa
clc
sete
or
shll
es
stc
cli
inc
or
and
pop
rorb
xor
jp
add
inc
gs
je
inc
inc
inc
xchg
xchg
repz
pop
mov
and
mov
popa
inc
inc
mov
fdivs
ret
scas
inc
test
lea
cmc
lret
cli
xor
xor
and
ret
jle
or
lods
pushl
and
fsubl
loope
push
aam
aam
out
je
inc
icebp
rclb
test
pusha
mov
or
jnp
sbb
mov
out
popf
push
xchg
jbe
idivl
inc
jg
mov
rcrb
ficompl
pop
dec
push
push
fistpll
jo
mov
movsl
mov
lods
sbb
popa
or
or
arpl
negl
in
sar
xchg
push
sbb
andl
sbb
cmp
jne
bound
jmp
push
mov
adc
mov
popf
mov
pop
pop
in
xchg
dec
mov
mov
add
imul
subl
lret
mov
cmpsl
jge
or
xchg
enter
dec
xor
pusha
cmp
cmc
mov
mov
inc
push
ret
pusha
ds
test
insb
fstps
pop
movsl
mov
mov
in
jo
inc
xchg
test
bound
mov
xor
fwait
js
cli
int3
addr16
push
into
out
mov
pop
xor
icebp
insb
push
mov
mov
int3
out
fdivr
scas
xor
add
add
push
jmp
gs
xchg
or
repnz
dec
fs
dec
mov
mov
or
movsb
or
bound
mov
cs
mov
mov
xchg
popf
mov
mov
jp
xchg
cmp
push
pop
sbb
cmp
enter
mov
int
inc
mov
mov
inc
les
jl
xchg
sbb
in
and
mov
outsl
cmp
add
cmpsb
in
xchg
xchg
repz
out
dec
xor
sbb
fdivs
inc
sub
fcoml
mov
bound
loop
lea
xchg
in
aaa
rsqrtps
mov
into
in
test
out
ror
pusha
mov
mov
test
je
cwtl
jmp
and
adc
sub
cmc
sahf
stos
xchg
cli
push
mov
daa
in
xchg
ja
xor
dec
jbe
mov
std
pop
in
add
ret
inc
ret
repnz
xor
lret
jmp
int
adc
jmp
call
push
mov
add
mov
inc
push
loope
std
ret
dec
repnz
jg
jge
aas
xchg
int3
pop
movsb
sub
stc
pop
push
insb
loope
inc
dec
movb
xor
push
pop
imull
aad
jne
into
cmc
add
dec
fnstsw
inc
cli
mov
test
aam
cmp
aam
mov
dec
xor
adc
add
movsb
pushf
push
jbe
inc
aam
push
mov
sub
mov
xchg
and
rol
fwait
xor
negl
jne
aaa
jg,pt
sbb
leave
ja
int3
inc
gs
pop
int3
adc
pop
fs
mov
out
in
scas
sub
lds
stos
int
sahf
je
pop
hlt
adc
pop
je
adc
lds
les
push
jne
mov
int3
push
pop
sub
mov
lods
push
rol
lret
fnsave
or
idivl
adc
or
jne
sahf
xchg
rorl
rol
ljmp
popf
inc
cs
sbb
sti
push
mov
or
inc
imulb
mov
gs
das
xor
inc
lock
test
out
or
rolb
les
out
add
push
xchg
les
subb
push
scas
mov
imul
push
divb
and
lahf
sbb
scas
jmp
je
in
dec
jg
and
cmpsl
xor
mul
lods
and
lea
iret
jbe
sbb
push
cld
cld
scas
push
shl
pushf
mov
fwait
dec
aad
xchg
stc
or
lods
imul
aaa
sub
fisubrs
pop
mov
movsb
test
xor
test
subl
pop
mov
inc
push
jnp
mov
shrb
inc
pusha
fisttpll
push
inc
lret
les
pusha
pop
pop
aam
or
pop
mov
push
sbb
ret
pop
xchg
cmp
jae
subb
xchg
dec
pusha
pushf
push
and
add
and
inc
mov
mov
call
movb
dec
mov
movsb
pushf
ss
mov
xor
and
out
push
inc
cmp
jecxz
loopne
scas
add
push
mov
mov
and
mov
ficomps
loopne
ja
scas
in
shll
xor
jge
sbb
inc
ret
addb
mov
mov
mov
pop
mov
mov
cmp
mov
insb
daa
loop
sti
and
cld
pushf
iret
sub
aad
jbe
popa
shll
add
dec
leave
ret
xchg
pop
daa
addr16
jbe
repz
or
sbb
pop
pop
push
mov
mov
cmp
jnp
es
dec
in
xlat
mov
mov
adc
mov
movsl
push
pop
aam
cmc
sub
rolb
inc
mov
xor
ror
sub
add
jne
movsb
lods
in
mov
lret
fistl
jae
das
and
add
xor
ss
iret
push
cmp
dec
mov
inc
xchg
stos
out
test
test
loopne
xchg
jbe
dec
lods
es
mov
adc
mov
into
mov
bound
cwtl
sbb
mov
fwait
mov
and
adc
inc
loop
pusha
jmp
loope
xchg
int
test
cs
clc
fwait
in
insb
cmpsl
push
mov
jp
jo
fcomp
dec
pop
ss
xchg
sbb
push
or
fbld
test
mov
icebp
jns
cs
fsub
adc
or
movsb
mov
xlat
inc
movsb
sub
and
insb
cmp
movsl
icebp
das
push
rorb
cwtl
ljmp
lahf
push
add
xor
and
lds
mov
or
jp
jo
jne
mov
daa
mov
push
out
push
ja
lods
in
sbb
loop
push
add
adcl
arpl
cmp
stc
xor
repnz
clc
imul
out
stos
xchg
out
jns
aad
rcll
or
lcall
fcompl
insb
pop
jmp
fdivs
lret
jae
add
lret
cmp
xor
push
dec
xchg
xchg
filds
mov
cmp
dec
mov
ret
adc
dec
mov
xchg
stos
shlb
loope
mov
icebp
cmp
int
add
add
imul
addr16
dec
fidivrl
inc
out
sub
xchg
mov
divl
mov
ss
lock
mov
ss
jb
in
cmp
xor
lret
jns
push
push
stc
pop
fs
mov
test
stos
xchg
lret
push
aad
push
mov
mov
cmp
sbb
inc
or
repnz
adc
inc
fucomi
rcrb
dec
xor
repz
in
inc
mov
mov
push
outsb
lcall
and
scas
mov
scas
rolb
xor
iret
movsb
xchg
inc
add
adc
stos
mov
push
aaa
test
jg
xchg
je
cld
enter
push
jo
fsubrs
mov
mov
and
sub
xchg
rcll
sub
std
mov
inc
or
cmp
mov
movsl
scas
and
xor
div
flds
xchg
cmp
fisubs
cwtl
lea
xor
cmpsb
jecxz
sub
out
aas
aad
push
ja
scas
loopne
xlat
mov
rorb
pop
or
in
push
add
and
inc
pop
mov
push
es
xor
std
pop
jae
lock
mov
or
push
and
inc
negb
lods
push
test
into
cmc
cmp
xchg
pop
dec
rolb
cmc
dec
push
dec
in
ds
dec
aaa
leave
fisttpl
sub
push
imul
or
inc
dec
push
add
jmp
addr16
ret
sub
add
xorb
and
jmp
xchg
sti
mov
lret
call
fiaddl
leave
push
mov
pop
mulb
mov
inc
cmpb
call
roll
sub
cmpsl
negb
out
jnp
popf
sbb
jbe
imul
mov
pop
jp
subb
or
stos
jmp
cmp
add
test
sub
lds
ret
imul
xor
into
into
push
push
out
popf
cmp
int
movl
dec
pop
xchg
stos
cmp
insl
mov
inc
push
ret
rclb
sub
cmp
push
ja
xchg
in
mov
outsb
pushf
movsb
cmp
adc
pusha
sti
scas
inc
cmp
cmp
out
push
nop
sahf
add
jo
sbb
and
jne
iret
pop
xchg
pop
negl
mov
inc
leave
sbb
jp
add
scas
sbb
bound
jno
xchg
loope
icebp
push
xchg
imul
cmp
push
ds
pop
jl
push
loopne
sbb
lock
pop
and
aas
inc
mov
dec
repnz
adc
fimull
loop
in
xor
dec
ret
xchg
int
loope
outsl
ret
pop
pop
testb
jns
mov
aam
outsb
pop
int3
std
leave
push
data16
inc
xchg
test
cmpsl
stc
inc
aas
sahf
mov
mov
pop
jecxz
sub
cmpl
das
jb
xchg
arpl
sub
jae
add
shl
xor
rcrl
mov
ss
cs
int3
inc
int
pop
cmpsl
cwtl
aaa
les
push
in
nop
out
jmpw
stc
mov
imul
and
in
mov
push
jo
xor
clc
je
scas
adc
xlat
and
push
jmp
shl
jnp
and
cmc
arpl
dec
pusha
gs
dec
addb
jnp
xchg
int
je
dec
in
adc
push
mov
add
jle
repnz
inc
aaa
pop
rorb
insb
sbb
imul
inc
cmp
loope
and
pushf
push
sti
hlt
fstpl
pop
stos
mov
xlat
lock
xor
push
sbb
cltd
mov
repz
insl
push
mov
jmp
arpl
andb
mov
pop
or
cld
icebp
or
dec
xor
cmp
shll
add
call
and
sbb
in
in
pop
cmp
sbb
iret
lock
cld
lahf
jns
or
ss
icebp
das
in
pop
mov
cmc
inc
push
insl
xor
lds
loopne
std
outsl
gs
lret
mov
or
call
xchg
lret
pop
outsb
jecxz
dec
and
movsl
xchg
xor
cmc
scas
sbb
negl
or
pusha
call
push
std
cli
in
and
pop
aaa
lea
sbbl
leave
xchg
cld
sub
fisubl
decb
pop
fsubrs
cmpb
adcb
pop
test
loopne
lock
cmp
pusha
pop
or
push
mov
cwtl
iret
inc
fwait
pushl
or
addr16
js
loop
scas
jecxz
push
lods
jp
mov
push
dec
xor
or
dec
ret
faddl
jmp
mov
sub
cmp
int3
dec
ss
lds
iret
enter
or
adc
notl
sti
aaa
rolb
dec
pop
je
mov
icebp
xchg
test
leave
arpl
xchg
addr16
divl
inc
aas
mov
push
lret
mov
cmp
into
fbld
pop
leave
lods
jno
inc
stos
jmp
sub
lods
das
mov
push
cmp
adc
lea
cmpsb
hlt
das
add
outsb
dec
or
cmc
mov
sbb
ljmp
ret
shl
fcmovu
jno
aas
xor
dec
repnz
push
mov
andb
sub
repnz
std
ds
jne
dec
sti
or
sbb
add
imul
dec
loopne
call
mov
sbb
jb
ss
inc
es
pop
shll
dec
movsl
cwtl
xchg
jle
rcrl
pop
jae
adc
sub
mov
push
mull
cmp
jl
int
pusha
mov
push
mov
nop
xchg
loopne
cmp
out
scas
cmp
pop
push
enter
pop
and
sub
adc
or
push
or
lret
aas
jae
cmp
pusha
call
cltd
jo
adcl
cwtl
movsb
sub
scas
shll
xchg
dec
aam
adc
out
sahf
jge
push
fdiv
or
fistpl
daa
inc
xor
addl
push
add
jne
pop
and
cmp
adc
movsl
mov
popf
inc
ret
sub
inc
es
ljmp
out
popf
cmpl
adc
sbb
sbb
incl
dec
jmp
lods
push
imul
pop
fidivrs
addr16
out
xor
pop
sub
dec
outsb
pop
mov
in
ljmp
inc
imul
pop
xchg
xlat
negb
cmp
push
xchg
sbb
bound
add
loopne
add
push
ljmp
mov
cmp
addl
xor
or
std
aad
cld
push
test
mov
mov
roll
call
int3
cld
sub
adc
xchg
fimuls
hlt
in
sub
cmp
push
into
outsb
dec
loope
not
ss
xchg
data16
push
xchg
sbb
inc
dec
cli
test
xchg
jge
fwait
push
call
fnstsw
test
ljmp
pop
or
mov
fldt
add
mov
nop
dec
lock
push
int3
pop
and
sbb
ret
loop
mov
shr
test
insb
mov
lret
pop
xchg
xchg
or
sti
sub
xchg
add
jl
subb
dec
jb
ss
cmp
fisubrs
add
push
cmpsl
dec
and
inc
sbb
scas
mov
push
call
stos
les
or
and
loope
dec
pop
dec
inc
push
out
mov
mov
xchg
orl
jns
aam
out
fidivl
std
cli
es
mov
jmp
inc
cmp
and
mov
sub
test
push
inc
lods
cmp
pop
push
loop
adc
test
mov
icebp
adc
rol
sub
and
xor
adc
sub
popl
sbb
push
add
xchg
and
sbb
jl
inc
gs
dec
fnstsw
sbb
push
xor
inc
cs
xchg
and
inc
mov
cli
push
out
push
icebp
jno
outsb
xorb
stc
out
lret
sub
loope
xchg
outsb
mov
shlb
sbb
sbb
loope
arpl
jp
mov
dec
cmp
or
mov
clc
enter
pop
mov
lret
push
decb
or
pop
pop
fcmovu
ljmp
jmp
or
leave
outsb
mov
push
pop
dec
and
and
inc
or
add
in
sbb
lret
push
jg
aaa
nop
cmp
pop
mov
fxch
popa
loop
or
mov
or
fiadds
mov
adc
mov
imul
push
pop
in
jnp
pop
push
fcmovnb
dec
sbb
xor
jns
gs
dec
push
flds
rcll
jnp
fmul
jb
dec
ffree
dec
mov
popw
lods
nop
pop
push
pop
mov
into
je
xor
jae
gs
mov
push
mov
lods
push
inc
lret
xchg
mov
inc
subb
xor
push
daa
dec
pop
inc
mov
sub
icebp
mov
sub
or
fsubl
lret
inc
adc
ret
adc
push
fsubrl
cld
xchg
lock
js
push
xchg
and
xlat
mov
mov
jbe
negb
ret
int3
dec
iret
rcr
jge
mov
push
mov
push
jp
inc
lcall
or
push
repnz
shlb
lcall
mov
xchg
int3
aas
lods
or
aaa
fidivrs
mov
loope
loopne
ss
int
xchg
xchg
dec
js
in
loop
pop
sub
test
enter
push
mov
imul
shll
cmp
xor
rcl
add
lods
loopne
jge
add
adc
repz
pop
ljmp
int
adc
testl
je
and
xchg
mov
mov
inc
mov
cmpsl
sti
lcall
inc
fwait
inc
jb
mov
imul
mov
inc
or
out
mov
mov
int3
cmp
mov
or
push
jecxz
xor
enter
jno
or
iret
repnz
dec
or
adc
mov
ret
sbb
out
nop
and
popa
fsubl
inc
in
push
xor
in
mov
out
ja
pop
test
push
int3
sbb
and
lock
insl
cwtl
out
mov
xchg
dec
lret
mov
outsl
dec
mov
mov
sub
pop
mov
leave
ret
jnp
shrl
jo
test
je
insl
cwtl
icebp
jns
loope
cltd
add
mov
sbb
std
lcall
gs
fdivs
outsb
adc
xlat
fiaddl
push
mov
mov
and
cli
mov
andb
scas
sti
out
adc
adc
dec
outsb
scas
adc
pop
stos
cmc
push
xchg
cmpsb
or
sub
cmpsb
jle
mov
and
popa
push
mov
add
mov
mov
and
scas
dec
mov
dec
in
lds
pop
cmp
movsb
cmp
push
jns
out
push
xor
bound
mov
mov
mov
jecxz
mov
mov
mov
aas
fistpl
push
popf
mov
mov
adc
sub
aam
push
sbb
fwait
push
ret
imul
xchg
inc
lock
sbb
imul
fnsave
pusha
jg
stc
add
insb
push
jmp
push
mov
cli
xor
aad
cmc
lret
test
je
addr16
jae
sbb
mov
pop
add
addb
push
outsb
mov
mov
addl
cmp
push
mov
jl
adc
and
stos
aam
je
mov
inc
mov
xchg
mov
rorl
add
or
ror
mov
add
adc
cmp
in
bound
mov
pop
and
test
fildl
mov
mov
or
xchg
mov
shrb
inc
shll
outsl
jg
leave
dec
insl
mov
xchg
sar
shll
jb
cmp
sbb
push
jge
mov
fstl
cld
cmp
pusha
adc
and
div
and
in
inc
sbb
jle
shlb
sub
cltd
mov
ss
stos
out
and
test
orl
fstl
daa
sub
out
adc
loopne
rol
addr16
mov
add
clc
or
add
div
cld
movsl
imul
mov
sbb
jecxz
jb
add
subb
insb
xor
xchg
mov
and
mov
stos
adc
cmp
cmp
xor
push
sub
pop
scas
cmp
adc
push
and
xchg
inc
js
mov
dec
push
push
loop
ds
inc
fmull
sbb
outsl
movsbl
jecxz
int3
fisubs
stos
subb
das
insb
insb
loop
shll
jno
lds
fs
push
repz
fs
dec
cmpsb
xor
std
jle
and
iret
mov
fwait
mov
notb
stc
and
and
lcall
lcall
pop
push
jae
sbb
in
lret
popa
cwtl
lahf
repz
jl
ss
jns
adc
pop
mov
lea
fbstp
cmp
subl
in
gs
mov
pop
push
jmp
lds
bsr
and
aaa
mov
pop
add
sub
lret
inc
fsub
mov
jne
adc
sbb
and
mov
insl
inc
hlt
adc
jne
and
jp
in
pop
jmp
or
push
mov
push
es
mov
mov
or
test
jno
imul
sbb
jmp
pushf
mov
mov
in
add
repz
mov
out
mov
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
adcl
fdivrp
xchg
inc
popa
or
cli
xchg
es
sbb
or
out
out
test
loope
ds
xchg
push
scas
add
adc
je
pop
mov
inc
js
aad
inc
add
adc
aaa
and
test
push
xchg
lret
fnstsw
add
ss
std
lock
jl
lret
mov
mov
mov
int
mov
sarb
lods
sbb
outsl
bound
push
mov
popf
sbb
pop
pop
fwait
mov
or
out
nop
xchg
mov
jecxz
aam
loope
inc
sub
inc
jb
or
jp
mov
cltd
shl
arpl
adc
dec
and
repz
add
xchg
and
sbb
fdivr
pop
mov
je
test
or
popa
clc
divb
ficoms
push
cltd
pop
lods
dec
or
mov
call
rol
push
cmp
dec
add
push
lcall
data16
cltd
lods
sbb
test
icebp
cmc
jne
pushf
dec
loope
mov
xchg
pop
pop
stc
jg
std
lret
pusha
push
and
inc
out
pop
repnz
mov
hlt
xor
inc
push
xor
lods
lcall
xlat
clc
inc
shld
pop
int
sbb
in
jl
jle
push
es
xor
clc
adc
dec
mov
push
push
jge
mov
call
subl
sbbb
mov
jl
push
adc
xchg
movnti
test
fisttpl
loope
sub
push
sbb
rep
rcrb
cmp
cmp
fsubrl
das
mov
push
or
dec
lahf
pushl
and
lds
out
notb
or
adc
add
jne
pop
lahf
sub
lods
cmpsl
pop
sub
shr
cmp
jl
and
jbe
insb
and
cwtl
and
js
xchg
jns
fbld
js
jl
rorb
cmp
jnp
dec
aaa
cwtl
mov
sub
mov
pusha
fisubs
loopne
fidivs
scas
push
addb
sbb
xlat
push
adc
add
or
call
lock
pop
sbb
pop
jb
ljmp
jmp
setl
int
adc
lcall
inc
mov
jo
lea
cmp
in
and
out
xchg
xchg
aam
mov
rcll
loop
xor
and
cmpb
ror
sbb
xor
aas
xor
mov
cli
mov
movsl
hlt
pop
stos
sub
nop
stos
xchg
insl
scas
inc
jno
enter
shlb
jb
sub
add
out
in
loopne
mov
stc
push
mulb
das
mov
or
dec
jo
adc
notb
jae
arpl
lods
push
out
shlb
jg
mov
outsl
jnp
xor
pop
lcall
out
or
lods
loopne
adc
fcompl
add
xadd
leave
xchg
inc
mov
je
outsb
shll
xor
test
push
inc
xchg
mov
fistl
pop
mov
lret
xchg
or
mov
inc
ficoml
in
mov
arpl
clc
in
ret
pusha
icebp
or
cmp
lret
inc
inc
test
dec
ss
mov
jbe
pop
loope
mov
mov
jmp
fsubr
cmp
add
mov
xor
push
lcall
ret
aad
repz
decb
push
cmpsb
xor
sti
sub
mov
dec
shlb
xchg
or
mov
mov
movsl
fs
leave
xchg
adc
mov
inc
adc
push
jge
sub
lds
stos
pop
pop
dec
mov
and
xor
stos
aas
addb
dec
into
fwait
sub
addr16
mov
icebp
int3
mov
movsb
mov
mov
push
sub
pop
adc
jae
push
insl
mov
adc
jge
addr16
mov
in
rolb
fmuls
test
pop
xchg
add
loope
xor
sub
sarb
sub
ja
inc
jecxz
pop
inc
out
push
mov
frstor
lahf
je
dec
push
jns
fbstp
or
mov
ds
or
popa
or
stos
push
push
sbb
mov
imul
in
jnp
insb
jnp
cmp
fstl
and
cwtl
inc
jae
mov
cltd
mov
sub
xchg
shl
cmp
sbb
xchg
or
outsb
inc
out
imul
jo
jmp
inc
pop
fsubs
ret
xor
cmp
xchg
fmull
cwtl
and
mov
xor
rorl
pop
push
fwait
popa
pop
xor
push
cmpsb
test
or
pop
aaa
add
scas
ret
sbb
fisubrs
dec
repnz
mov
test
lret
fadd
jbe
incl
stos
push
pop
or
jmp
inc
daa
pop
add
je
ficompl
push
ss
daa
sbb
jmp
sti
mov
xlat
jns
dec
sbb
roll
orb
imul
adc
arpl
int3
mov
add
xchg
aam
mov
push
fnsave
ljmp
lcall
ljmp
pop
popa
imul
rcll
sti
mov
mov
rol
ds
pop
cli
jmp
lret
rcr
xchg
sub
add
inc
mov
dec
jnp
push
mov
or
ds
cmc
xchg
xchg
lret
pop
or
xchg
ds
test
movsl
jp
pop
push
or
pop
stc
add
fcoml
repz
mov
jmp
outsl
xor
inc
outsl
lret
fwait
into
lea
movsl
sbb
lds
jl
inc
or
rcr
adc
push
sar
lods
out
push
sbb
outsb
add
pusha
push
add
sbbl
or
stc
int3
mov
xchg
xchg
nop
xchg
inc
xchg
loopne
cmp
cmp
cmp
or
loope
mov
push
cli
in
or
sub
imul
and
in
jmp
mov
ret
fsubl
add
sbb
test
push
and
loopne
mov
mov
out
mov
pop
outsb
xor
xchg
enter
adc
xor
push
fistps
leave
imul
in
std
and
jns
jle
or
in
xchg
or
decl
nop
addb
hlt
xor
xchg
cmp
pop
push
push
iret
pop
mov
mov
mov
mov
std
pop
push
loop
xlat
imul
pmaddwd
push
inc
das
add
rolb
aam
in
adc
sbb
in
leave
jne
stc
leave
inc
pop
fidivrs
lret
add
jecxz
fwait
scas
dec
sub
loope
mov
addr16
add
pop
int
mov
loope
sbb
movsl
popf
sarb
inc
xchg
xorl
hlt
sub
mov
fildll
mov
int
popa
aad
adc
push
xchg
xor
lcall
jnp
jns
daa
jge
inc
shlb
stos
sub
mov
leave
add
imul
imulb
sub
jno
mov
sbb
cmp
aaa
aas
cmpl
stc
add
mov
ficomps
push
cmc
push
adc
push
andb
mov
adc
mov
push
xor
ja
dec
dec
xchg
ljmp
adc
cltd
inc
add
rcr
int
dec
cmp
mov
lds
test
lret
xchg
daa
test
cmp
lea
inc
mov
and
cmp
push
pop
xchg
jno
xor
lods
inc
xchg
aaa
cmpsb
mov
xor
pop
mov
std
into
jo
dec
push
sbb
in
mov
es
push
ret
mov
push
or
subl
ficoml
xchg
xchg
xor
sbb
cmp
push
call
nop
sub
sbb
cld
push
pop
movsb
aas
mov
out
or
jae
jg
pop
popf
scas
cld
add
enter
sbb
mov
inc
pop
mov
std
adc
ja
and
outsb
xchg
data16
add
out
cvtps2pd
sub
dec
jns
imul
jp
sub
mov
jp
addr16
push
cmpb
subb
lahf
xchg
mov
dec
mov
jle
and
cmp
andb
pop
xor
and
sub
xor
aam
lock
stc
dec
mov
dec
nop
ficoml
fwait
sub
negl
ficomps
fdivs
or
xchg
hlt
xor
dec
test
mov
push
scas
inc
sbb
xor
les
fadds
mov
das
cli
int
and
jp
scas
fstpl
stos
jne
das
or
out
pop
sub
aad
or
mov
and
popf
jnp
pusha
sub
imul
in
mov
faddl
decl
add
loop
cmp
mov
repz
xchg
xchg
and
or
pop
or
adc
push
or
movsb
js
adc
pushf
shll
adc
jns
and
shrb
and
popa
adc
jmp
mul
and
dec
push
stos
sahf
cwtl
cmc
mov
xor
mov
in
addr16
mov
cmp
xchg
lock
out
and
cmp
push
sub
mov
das
movsl
fdivl
mov
repnz
and
loopne
lds
cmpsb
dec
cli
pop
lea
sbb
lds
in
call
shrb
sti
mov
int
xchg
jmp
or
fwait
sub
cmpsl
rolb
xor
packsswb
loope
xchg
fimuls
inc
sbb
adc
rclb
outsb
gs
rcl
pop
ds
fsub
mov
bound
mov
jge
sbb
lock
sbb
xchg
xor
xor
jno
jg
push
out
lods
sbb
daa
cwtl
rorb
lods
jmp
adc
scas
daa
cmpl
cwtl
bound
jb
inc
push
pop
repz
jb
call
add
jp
outsl
push
lods
mov
and
add
ret
daa
sti
mov
sbb
pop
cmp
mov
dec
pop
adc
mov
fmuls
xor
scas
mov
rcrl
inc
lahf
js
cmpsb
xchg
xlat
or
out
adc
mov
popa
in
pop
adc
xchg
add
push
cmp
es
sub
mov
fsts
and
jle
clc
pop
add
mov
lret
push
fwait
jne
gs
mov
mov
adc
stos
push
xor
mov
pop
push
mov
inc
clc
js
xor
sbb
add
ss
out
mov
sarl
popf
or
cmp
fiadds
ficomps
mov
iret
in
xchg
add
test
test
mov
cmp
ret
jo
mov
fsubl
mov
pop
push
rcr
stc
test
shll
insb
pop
add
and
mov
outsb
loop
outsl
out
dec
fmulp
negb
or
mov
dec
push
inc
bound
pop
std
dec
cmp
int
xor
inc
std
adc
sbb
sahf
xchg
sbb
jge,pn
pop
shlb
dec
out
popf
in
enter
in
icebp
xchg
jbe
add
pop
and
aam
mov
and
inc
inc
pop
mov
dec
add
jle
mov
test
std
fdivrs
sbb
andb
mov
leave
inc
enter
insl
stos
pusha
jnp
jp
loope
fcmovu
hlt
or
push
push
or
mov
mov
inc
and
les
xchg
repz
push
mov
aaa
sub
ljmp
dec
sub
push
icebp
adc
cld
fadd
push
idiv
dec
js
push
repz
jb
cmp
hlt
popf
leave
lret
lret
push
cld
test
sbb
mov
pop
enter
sbb
push
cmp
addr16
inc
cltd
leave
jle
ret
dec
nop
xchg
insl
or
test
jg
lock
or
cmp
jne
push
inc
push
mov
xchg
in
adcb
imull
aam
sbb
pop
push
fsubs
add
xor
xchg
xor
push
push
and
dec
sub
cmp
cmpxchg
cld
or
jmp
sbb
stos
fcomps
sbb
popa
sbb
xchg
icebp
stos
add
pop
dec
add
out
adc
jl
jle
lcall
cmp
add
add
add
add
inc
xchg
pop
add
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
add
lahf
