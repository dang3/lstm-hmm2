or
jge
leave
lea
icebp
xor
push
xor
jne
jae
xor
push
adc
ffreep
lods
daa
jmp
in
test
jbe
test
inc
and
adc
cmpsl
rorb
adc
rorb
std
stos
pop
fsts
loope
xchg
sbb
jae
pop
push
adc
pop
mov
nop
cmpsb
pop
push
adc
pop
mov
nop
daa
mov
inc
das
sbb
inc
and
fsubrs
hlt
mov
jbe
mov
cltd
scas
enter
lret
xor
mov
lock
inc
adc
sbb
adc
jl
das
mov
ficompl
aaa
or
add
sub
cmp
lods
add
sub
aaa
mov
scas
push
sarb
add
pop
mov
loop
dec
iret
pop
out
movsb
in
outsb
xor
inc
xchg
jno
ljmp
sub
or
dec
jecxz
iret
sub
push
mov
fcoms
xchg
imul
dec
cmp
stos
sbb
sbb
dec
and
ret
sub
and
inc
in
pusha
mov
flds
cmp
bound
repz
test
push
lods
inc
insb
icebp
roll
lock
pop
sbbl
flds
ds
inc
in
cmp
dec
and
pop
lret
popa
sbb
enter
pop
test
lds
xchg
pusha
pcmpeqd
inc
inc
movsl
rclb
cmp
repnz
push
mov
sbb
xor
sub
push
xchg
sbb
nop
jbe
loopne
pop
and
xor
andl
cli
scas
adc
fstpt
daa
repz
mov
cmp
cltd
dec
cmp
or
xlat
pop
push
and
sbb
adc
ret
hlt
sub
std
or
pop
mov
xor
mov
mov
es
lea
in
dec
or
xor
mov
push
jmp
call
adc
packuswb
mov
sbb
push
pop
cmp
push
jne
or
lcall
out
mov
mov
sbb
jae
out
lret
outsl
jns
mov
lcall
jb
jecxz
add
adc
jns
mov
lods
jae
adc
push
pop
mov
dec
adc
sbb
pop
cmc
dec
adc
sbb
pop
jne
rcl
shll
and
rolb
lock
jo
imul
cs
inc
adc
xor
push
xor
aad
mov
fdivs
mov
pop
xor
fbstp
jmp
inc
adc
mov
fbstp
inc
xchg
sub
jae
andb
les
mov
test
frstor
ret
xchg
mov
mov
xor
push
jge
adc
repz
insb
mov
xor
add
inc
adc
pusha
xchg
mov
pop
mov
ficomps
les
lret
jl
sbb
outsb
lods
dec
fcomps
pop
mov
and
fcomp
xchg
sub
jg
mov
add
push
sbb
mov
dec
xor
cld
sub
jbe
icebp
and
fmull
xor
pop
push
in
es
mov
int
fsubl
adc
insl
les
loopne
mov
add
filds
fiaddl
insb
dec
test
test
inc
mov
jl
test
sbb
mov
fcompp
add
sysexit
pop
insb
in
je
loop
ret
jl
test
insl
mov
sti
aas
cltd
jmp
fistpll
sti
inc
cwtl
fsubr
pop
or
jmp
xor
cmpsl
arpl
pop
ljmp
jne
shrb
jne
lcall
fcmovb
ficomps
inc
adc
mov
inc
inc
shll
das
test
dec
aad
jge
mov
fmulp
je
pusha
jne
sbb
inc
fcomps
sbb
and
test
and
add
jnp
repnz
pop
pop
mov
sysexit
pop
test
jbe
xor
push
in
or
imul
mov
insb
pop
mov
repnz
mov
fstl
js
and
mov
pusha
test
or
jecxz
push
and
adc
push
sbb
mov
xchg
js
icebp
xor
mov
mov
dec
rcrl
mov
push
xor
fsubs
cmp
mov
and
cld
sarl
rcll
mov
icebp
mov
cmpb
mov
gs
das
cmp
je
push
pop
mov
inc
sarl
adc
jns
fsubrl
xor
push
jp
mov
flds
xor
mov
popa
cmc
mov
sbb
outsl
fistl
mov
jl
addl
pop
push
add
push
std
mov
ret
arpl
pop
jne
jl
mov
sbbl
jne
out
mov
adc
orl
mov
ds
and
fcmovnu
lods
pop
fldenv
sbb
sbbl
jne
ficomps
stos
push
adc
int
scas
jecxz
push
cmp
ret
popa
push
and
cmp
jns
sbb
mov
push
movsb
add
adc
mov
mov
xchg
pop
sub
push
add
dec
mov
jne
cld
inc
adc
sbb
xor
addl
pop
movsl
pushl
pop
mov
loop
lods
mov
and
loopne
addl
in
sbb
jns
out
stos
add
out
xchg
mov
pop
test
or
add
and
cld
fstpl
and
in
xchg
or
mov
pop
mov
fbstp
pop
jbe
ficomps
pushf
ficomps
inc
ficomps
jne
ficomps
test
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
xchg
les
mov
pushf
xor
insb
out
jmp
sarl
js
fdivrs
xor
cld
cmp
sbb
push
daa
sub
jo
mov
inc
ficomps
jne
ficomps
jne
ficomps
inc
mov
pop
inc
inc
dec
adc
ficomps
jne
ficomps
jne
sahf
pop
popf
test
pop
xor
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jno
ficomps
jne
fstps
jne
out
pop
jne
ficomps
jne
ficomps
cmc
ret
je
ficomps
jne
ficomps
jbe
ficomps
jne
fstps
jne
ficomps
cmc
ret
ficomps
jne
ficomps
jne
ficomps
jne
ficompl
jne
ficomps
jne
ficomps
jne
ficomps
jno
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
fstps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
cmc
xchg
insb
ficomps
jp
fstps
jne
ficomps
jne
ficomps
jne
ficomps
cmc
ret
ficomps
jne
ficomps
jne
ficomps
jne
fidivs
insl
les
in
jg
pop
jge
ficomps
jne
ficomps
jne
ficomps
cmc
dec
ficomps
jne
ficomps
jne
ficomps
jne
fimuls
test
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
ficomps
jne
pop
push
sbb
pop
dec
adc
pop
jne
ficomps
fwait
les
push
pop
mov
sahf
jne,pt
jl
in
push
add
mov
or
mov
ficoml
jg
fstl
call
fisubrs
adc
jo,pt
or
xor
repnz
or
mov
cli
mov
mov
cmp
sbb
or
jg
js
or
lahf
fbld
bt
je
lahf
jnp
push
xor
jp
mov
das
cli
pop
fmull
mov
call
jae
xchg
sahf
add
push
xchg
xchg
jl
mull
adc
je
cmp
loop
rcll
into
test
ficomps
lahf
scas
bound
popl
mov
mov
test
rcll
lret
jmp
rclb
add
fdivrl
pop
inc
and
in
mov
fsubr
loopne
loop
sarb
pop
jmp
fabs
sbb
mov
mov
add
pop
jne
cld
rcll
loope
popa
push
mov
mov
or
push
popf
sub
push
loop
outsl
roll
sbb
in
mov
sbb
ficomps
jne
dec
stc
ljmp
cltd
dec
jno
fbld
push
icebp
pop
stos
loope
mov
jecxz
arpl
mov
jl
xchg
sti
cmp
rcrb
jne
movsb
rolb
loope
arpl
scas
xchg
push
mov
sarb
out
aaa
loopne
sahf
fists
fistps
jne
sahf
add
mov
pop
xchg
jmp
xor
xchg
and
loope
outsl
hlt
outsb
sbb
sahf
add
test
pushf
add
nop
gs
xor
ja
mov
sub
xchg
pop
fs
jl
mov
mov
bound
pop
loop
fists
ftst
cmc
ja
push
stc
rcl
nop
xor
loope
lret
xor
adc
fildl
jne
pcmpeqw
cld
push
add
mov
ret
jl
jns
inc
and
loope
xchg
nop
inc
pop
mov
loopne
orl
mov
sbb
es
ficomps
jne
dec
stc
ljmp
jp
inc
icebp
mov
push
popf
jmp
pop
bound
lahf
xchg
add
add
jl
jns
in
xor
mov
scas
and
add
pop
push
mov
out
jb
jecxz
xorb
sahf
stc
jnp
lcall
push
mov
out
pop
or
adc
or
xor
fbld
sbb
xor
mov
fists
jg
shlb
add
fs
loope
xchg
nop
inc
pop
mov
loop
orl
jne
sbbb
es
ficomps
jne
push
stc
stos
rorb
shlb
jl
sbb
ss
adc
push
mov
out
fsts
mov
jecxz
das
mov
test
adc
into
xor
in
cmp
fistps
fwait
jmp
push
bound
les
ret
jl
sbbl
xor
jl
mov
loope
outsl
hlt
cs
jmp
add
test
fwait
add
mov
call
mov
fcompl
les
pop
add
inc
push
mov
mul
add
add
bound
fists
mov
rcll
loope
shll
xor
hlt
cs
jmp
add
loopne
orl
mov
sbb
es
repz
loope
fists
les
icebp
hlt
rcll
pop
push
mov
ja
mov
pushf
loope
icebp
adc
push
mov
rolb
adcl
lcall
xor
xchg
sahf
arpl
loopne
fcomp
fistps
or
push
popf
jmp
pusha
int
or
bound
lahf
xchg
jl
add
pop
add
fs
loope
xchg
nop
inc
pop
mov
loop
orl
jne
sbbb
es
ficomps
jne
push
stc
stos
rorb
ret
cmp
sbb
push
sbb
nop
add
xchg
pop
fs
sub
sahf
add
jmp
mov
lcall
mov
adc
mov
popa
sub
into
divl
fsubrp
xor
push
mov
scas
xor
dec
faddl
mov
pop
mov
mov
xor
add
cmpsl
pop
in
ja
push
stc
rcl
nop
shll
mov
mov
lret
jmp
inc
push
mov
rolb
adc
rorb
out
pop
pop
jmp
xor
lcall
cwtl
ficomps
xor
test
inc
push
mov
aad
sub
div
fucomp
xor
push
mov
out
xor
dec
faddl
mov
pop
mov
mov
xor
add
sarl
loope
mov
in
ja
push
stc
rcl
nop
in
dec
sahf
pop
jne
xor
push
mov
inc
push
mov
aad
sub
div
fucomp
xor
push
mov
out
addb
loope
pop
mov
add
and
jne
popf
fcoms
push
mov
lea
jne
ficomps
mov
rcr
pop
jne
movsb
push
fisttpl
mov
xor
fs
add
fmulp
and
in
das
jbe
fcmovu
test
ficomps
popf
ret
mov
jl
test
fistps
loop
push
adc
add
jne
loope
popa
push
mov
mov
xor
push
popf
sub
push
loop
inc
xchg
pop
adc
mov
mov
jns
mov
sub
xchg
sahf
bound
loop
or
dec
test
pusha
xor
cmp
push
popf
jmp
pop
mov
mov
mov
test
pop
adc
loop
movsb
repz
aam
push
jl
lcall
shlb
test
pop
xchg
add
push
push
sub
jns
jg
xor
dec
pop
data16
and
les
push
mov
loope
outsl
hlt
cs
repz
add
test
sbb
mov
dec
stc
adc
xorl
sbb
es
ficomps
jne
dec
stc
ljmp
sub
out
push
fildl
xchg
add
xchg
sahf
fs
loopne
loopne
pop
push
mov
ds
cmp
push
lds
fcmovnb
rclb
pop
lahf
les
push
aad
sbb
nop
pop
add
sub
cmp
jmp
les
aam
jecxz
fbld
sbb
mov
jl
jns
inc
and
mov
pop
mov
stc
addl
pushf
sub
aas
lock
lcall
mov
rcrl
mov
and
jl
hlt
jmp
pop
loop
fbld
sbb
mov
jl
jns
inc
and
mov
pop
mov
fiaddl
and
mov
xor
jae
pop
fcompl
xor
add
cwtl
jmp
jns
xchg
add
xchg
sahf
bound
aam
pop
sbb
pusha
mov
pop
cmc
pusha
mov
out
js
loop
or
mov
xor
loope
push
inc
or
mov
repz
sbb
push
mov
jl
aad
pop
gs
mov
lar
pop
xchg
ljmp
int
shlb
sbb
fstl
dec
xchg
xor
pop
incl
adc
bound
ss
jecxz
stos
dec
mov
out
mov
jmp
and
je
imulb
out
mov
xlat
pop
mov
popf
inc
mov
jecxz
loope
ds
mov
das
cmpsb
pusha
mov
mov
fadd
dec
gs
icebp
sbb
pop
adc
jno
pop
cltd
add
jo
movsl
push
scas
xchg
fcomip
mov
lret
test
adc
mov
xlat
in
mov
mov
fdivrs
std
sbb
mov
xchg
repz
push
imul
mov
mov
mov
iret
inc
rcll
mov
mov
mov
nop
dec
push
jecxz
movsb
js
xor
mov
mov
push
and
mov
sbb
dec
or
xchg
out
and
dec
lds
inc
fndisi(8087
movsb
ss
ss
out
xchg
xchg
ret
xchg
adcl
mov
ficoms
or
mov
inc
test
mov
call
imul
in
inc
dec
sbb
fstpt
sub
in
mov
cmp
pop
fistps
push
jp
stc
fdivrs
sbb
jo
add
or
int
mov
pop
outsb
js
dec
out
and
mov
mov
mov
and
andl
popl
mov
sbb
movsb
popa
mov
shrl
fisttpll
sbb
js
insb
push
jp
lock
cwtl
data16
xor
lret
jge
mov
mov
loopne
push
and
push
aas
shl
or
sar
movsl
negb
pop
shl
jno
pusha
jae
iret
ret
popf
shlb
inc
push
in
and
stos
pop
push
cld
test
lods
sbb
jo
test
cltd
loope
rcrb
mov
pop
jbe
and
add
push
mov
movl
sub
adc
cmc
dec
mov
and
lcall
pop
and
jle
aad
adcl
push
mov
cmpsl
cltd
cmc
mov
adcl
std
movsb
and
insl
pop
mov
sbb
xchg
push
movsl
ficoml
jae
adc
pop
js
mov
cmp
cli
shl
je
ret
mov
testl
testb
pop
jnp
dec
add
pop
call
add
fdivs
notl
xchg
into
mov
or
or
loope
cld
jg
jl
mov
fidivrl
add
cmp
jno
push
fstl
fmuls
insb
jecxz
ja
mov
lret
adc
xor
jo
pushf
imul
popa
or
fsubrl
cltd
dec
mov
jg
lcall
fiadds
iret
sar
jb
pop
xchg
cwtl
aaa
inc
sar
test
push
mov
test
or
nop
rcrl
sub
je
jmp
inc
mov
add
push
gs
jp
pop
int
hlt
or
mov
icebp
inc
pop
inc
add
push
stc
shll
nop
shlb
into
cld
scas
imul
mov
mov
imul
and
repnz
pop
movsl
idivb
cmp
dec
and
mov
lahf
fstpl
mov
push
lea
int
test
xor
xor
mov
bnd
mov
bound
insl
jbe
xchg
test
stc
sarl
xlat
in
sbb
xchg
mov
mov
popf
xchg
addb
jbe
lret
dec
and
xor
insl
lret
inc
xchg
adc
push
ss
subl
ds
pop
dec
push
inc
lret
sub
xchg
stos
jo
cmpsl
inc
xchg
lock
out
repz
jns
pop
sti
cmpsl
data16
aaa
dec
mov
in
mov
andl
test
pop
sub
clc
or
lret
pop
insb
mov
pop
mov
loop
ret
loopne
mov
aaa
xchg
ret
or
cltd
mov
mov
cmpsl
lods
jno
lret
lds
in
mov
sbb
add
and
xchg
xor
push
push
es
mov
jp
xchg
testb
out
ret
les
pop
push
dec
pusha
xor
cltd
js
pop
je
inc
and
cwtl
inc
and
pop
mov
fcompl
icebp
rcl
clc
int3
push
sbb
pop
push
push
add
sbb
loop
mov
cld
jecxz
inc
pop
xchg
lcall
jge
dec
pop
popf
jle
push
mov
mov
lret
add
fstpt
add
std
ret
fwait
clc
cmp
or
outsb
in
add
or
insl
pop
jb
lds
xlat
push
or
cmc
outsb
test
and
imul
pop
jmp
pop
xlat
stc
and
and
push
fisttps
add
dec
mov
ljmp
jnp
sahf
jnp
insb
lods
and
nop
pop
sub
cmp
pop
lahf
daa
mov
push
roll
pop
out
cmc
test
lcall
mov
mov
adc
xchg
pushf
mov
jg
sbb
sbb
jl
clc
int3
xor
xor
out
sbb
dec
or
orl
js
fnsave
int
flds
pop
stos
inc
pop
faddl
in
or
sub
jbe
scas
add
jbe
fwait
xor
aad
repnz
stos
std
xchg
xchg
xchg
es
or
fadds
xchg
push
hlt
dec
into
cmp
fsubrl
xor
dec
lock
jp
das
in
insl
mov
dec
stos
adc
popf
inc
xor
in
insb
test
ljmp
bound
xchg
cltd
fmull
lahf
out
sub
inc
xchg
xchg
pop
xchg
xchg
sub
pop
lods
xchg
mov
leave
mov
nop
jns
xchg
jnp
cs
es
in
dec
push
pop
and
test
out
mov
cmp
cs
mov
xchg
sub
inc
xchg
lods
xchg
or
fyl2xp1
enter
imul
out
or
mov
push
faddl
cmp
push
push
push
or
xchg
loope
shrl
add
fisubrl
mov
mov
pop
jns
jecxz
inc
push
and
pop
jo
add
lahf
enter
push
stos
push
xchg
inc
lea
scas
jb
pop
fisubs
sahf
fsubrs
int3
sub
sbb
idivb
and
cwtl
imul
ret
cli
push
repnz
xchg
add
inc
cltd
sub
dec
sti
aam
adc
outsl
loopne
mov
rorl
sub
mov
nop
mov
fisttpl
lods
adc
test
mov
cwtl
sbb
gs
jbe
sbb
aas
push
sbb
hlt
test
and
cmpl
cs
stc
pushf
sub
xlat
jne
jle
lds
mov
into
fsubrl
shlb
push
mov
push
aas
jne
iret
mov
mov
icebp
in
cmp
mov
popa
insl
mov
sti
iret
cltd
ror
cwtl
hlt
jecxz
int
scas
push
ret
mov
sub
dec
inc
mov
aad
out
loopne
loope
fucomp
adc
mov
je
jne
add
test
inc
lock
hlt
in
mov
or
jns
jmp
div
jp
mov
rcll
insb
aas
or
adc
jae
addr16
or
rol
xor
lods
out
xor
std
cmp
push
or
fs
xor
stos
arpl
add
mov
popf
mov
mov
mov
fmul
int
stc
movsb
cmpsl
shlb
repnz
das
in
or
adc
ret
mov
pop
add
mov
test
in
xor
daa
jns
loopne
arpl
hlt
jno
push
cmp
dec
xchg
bound
mov
sub
or
in
xchg
jne
adc
xor
mov
fldt
lcall
lock
fxtract
xor
scas
das
test
mov
sarl
sub
stos
push
ds
add
das
add
repz
pop
add
in
pop
add
cmp
cmp
stc
xchg
adc
jbe
cmp
into
ret
pop
sbb
lea
pop
cmpsl
xchg
out
lahf
mov
xchg
call
adc
mov
mov
add
scas
mov
mov
stos
xchg
push
cwtl
mov
cmpsl
push
pop
push
hlt
insl
mov
hlt
lret
jl
adcl
jno
bound
scas
mov
fsts
es
test
mov
in
loopne
inc
loopne
pop
in
dec
jae
es
adc
jns
movsl
xchg
sub
scas
jae
addr16
cltd
test
mov
jae
cwtl
shrl
dec
jns
xchg
outsb
adc
or
inc
jl
sub
mov
jnp
mov
cmp
cmp
aad
or
insl
cmpsl
lods
xchg
loopne
cmpsl
mov
adc
aam
out
or
xchg
sub
adc
push
push
push
rorl
lods
and
and
xchg
and
dec
shrl
pop
sbb
mov
lds
inc
ss
js
dec
ficoml
mov
pop
and
jno
into
pop
jg
cmp
jl
pop
icebp
jb
and
dec
dec
rol
rclb
out
xlat
xor
mov
fwait
mov
pusha
mov
mov
sbb
pop
leave
rcrl
inc
inc
repnz
sub
xchg
scas
shll
pop
cmpsl
test
out
icebp
mov
ds
sbb
test
outsb
gs
daa
call
and
sbb
mov
pop
enter
mov
and
into
ljmp
mov
jo
push
hlt
xchg
pop
shll
push
shr
sbb
dec
push
das
mov
rclb
push
mov
jnp
fimuls
cmp
jp
push
lcall
and
cmc
mov
and
adc
adc
leave
pop
in
pop
push
pop
mov
hlt
scas
int3
mov
pop
push
daa
dec
inc
arpl
fnstsw
mov
es
in
hlt
mov
xor
repz
ljmp
in
push
fadd
mov
int
mov
inc
sub
in
xchg
mov
sbb
shll
add
pop
or
xlat
in
clc
inc
scas
push
push
repz
sbb
call
xchg
mov
fcompl
xlat
dec
imul
inc
iret
add
into
test
cmp
cltd
dec
adc
rclb
out
clc
mov
sub
adc
fucomp
xor
and
shlb
or
leave
mov
sti
ret
les
push
add
pop
sbb
push
jae
and
jno
dec
repz
in
jnp
pop
sbb
lock
xlat
sub
arpl
or
rol
xchg
add
les
iret
pop
fsubs
mov
roll
xchg
daa
insb
pshufw
scas
adc
ss
fimuls
adc
mov
cmp
dec
lcall
lahf
mov
inc
lock
pop
push
and
sub
push
fs
into
fsubrs
cmc
loop
mov
jnp
sub
xchg
adc
mov
lods
jg
or
xchg
dec
repnz
fisubl
addr16
xor
sbbl
pop
xlat
xor
test
cmpsl
jmp
or
aaa
imul
jae
enter
in
fsubrs
ret
mov
sub
pop
aas
ret
push
sbb
mov
ds
daa
or
rcr
pop
pushf
cmp
cmp
gs
into
dec
jecxz
loop
fisttpll
sarb
iret
mov
cmp
int3
fwait
addr16
sti
cmp
in
sbb
add
inc
inc
cmp
fucomp
dec
shlb
or
movsb
ss
push
daa
push
mov
mov
and
adcb
pusha
fidivrl
and
rcll
test
loope
cmpb
faddp
xchg
mov
test
jmp
cmp
ss
sar
rcl
sub
imul
mov
lret
daa
shrl
mov
mov
je
xor
cmpsl
sti
xchg
dec
mov
jmp
mov
jno
fldenv
cs
ret
pop
push
xchg
or
jo
mov
ror
rol
or
mov
fidivl
mov
outsb
push
repnz
jge
loop
inc
xor
sbb
mov
sbb
repz
push
push
icebp
cmp
iret
jae
push
adc
lds
push
insl
xlat
ds
cmpsb
clc
imul
jae
inc
sbb
add
cmp
pop
sbb
xor
pushf
jmp
jg
test
jne
loope
movsb
sahf
addr16
lret
push
mov
cmp
enter
cmp
int3
adc
push
movsl
das
push
sbb
fs
into
scas
pminsw
out
inc
xor
inc
scas
fsqrt
sub
push
xor
dec
arpl
xchg
lcall
xchg
xchg
sub
xchg
pop
scas
xchg
call
inc
add
fistpll
cwtl
rcll
stos
jmp
insb
mov
and
mov
inc
arpl
test
cli
mov
sub
xor
dec
mov
lods
add
mov
and
sarl
xchg
jo
jl
dec
mov
dec
test
pop
or
xor
mull
add
loope
addl
xchg
out
xor
int3
lea
pop
cmp
cmp
clc
jmp
fsub
push
imul
ljmp
daa
pop
jge
inc
dec
sbb
sbb
leave
loopne
jl
cltd
je
icebp
shll
icebp
or
call
insb
loop
xchg
testb
loop
hlt
ja
inc
mov
iret
push
lret
fsts
cs
lock
pop
cmc
fcmovnb
xchg
test
stos
xor
mov
aam
bound
mov
je
or
inc
mov
cmpsb
shll
cltd
fwait
ret
xor
ss
lcall
negb
daa
ret
mov
loope
sahf
cmp
mov
mov
mov
scas
pop
or
mov
fidivs
add
pop
jb
or
add
cmp
ja
mov
adc
stc
mov
mov
sub
push
dec
cltd
movsb
sub
adc
and
mov
add
gs
sub
ja
mov
push
or
fdivrs
mov
dec
arpl
jmp
scas
inc
lods
int
mov
test
jle
mov
or
inc
lret
popa
push
mov
pop
xor
jp
outsb
pushf
divl
sbb
mov
mov
jmp
adc
mov
pop
or
fs
or
ss
xchg
push
add
sub
ljmp
adc
dec
sub
rcll
orl
push
lret
pop
sbb
push
pop
cmp
jp
insl
enter
lods
ja
leave
or
pop
mov
rcrb
dec
andl
mov
cmpl
jg
mov
outsl
shll
popa
push
inc
mov
out
or
dec
lahf
das
pop
xor
ds
pop
dec
jo
pop
sub
into
mov
add
sbb
adcb
push
sub
or
pop
push
jbe
cmp
pop
mov
jecxz
aas
mov
jg
and
xchg
test
mov
fisttps
sub
scas
lds
mov
push
lcall
sarb
cmpsb
xlat
fwait
inc
stos
push
sub
lods
rcrl
imul
lret
inc
push
adc
adc
cmp
xor
clc
idivl
cld
mov
pop
mov
jo
cvttps2pi
fucomp
out
sub
jb
popf
push
test
addl
mov
jb
outsb
xchg
dec
pop
or
jmp
test
adc
xor
push
xchg
sti
sbb
cmp
aas
call
cmp
leave
xor
inc
add
xchg
es
in
adc
pushf
stos
cmc
cmpsb
ffreep
xchg
inc
inc
outsl
andl
fcomps
scas
pop
stos
pop
pop
outsb
dec
dec
lahf
xchg
shrl
add
mov
mov
mov
ficoms
xor
lea
movsl
iret
xor
pop
or
sti
out
adc
cmp
jb
fdivr
outsb
rolb
into
aam
jne
push
sahf
pop
cmc
xor
xor
push
cmp
test
sub
push
sti
mov
in
pop
jbe
sbb
ficoms
dec
fisubrl
and
roll
push
rcll
mov
fadds
dec
jb
cmpsl
mov
sarb
rcr
dec
ret
inc
jns
jmp
mov
mov
arpl
lock
adc
cmp
repnz
pop
dec
xchg
and
rclb
jnp
ffreep
pop
push
jg
inc
ret
inc
aam
popf
lahf
mov
or
mov
adc
and
push
and
add
cmpsl
call
jg
adc
pushl
pop
outsb
mov
ljmp
sbb
repz
pop
imul
out
repnz
jo
and
pop
dec
mov
ljmp
negb
inc
shl
ret
mov
pushf
lea
pop
add
popf
pushf
arpl
sbb
mov
xchg
sbb
jo
outsb
jbe
jne
addl
jno
mov
jge
adc
sbb
nop
push
jle
inc
sbb
mov
pusha
movsb
adc
add
roll
int
or
adc
xchg
mov
enter
pushf
mov
imul
fld1
imul
fsubs
mov
pop
jle
lret
leave
add
xchg
mov
movsb
cmpl
sbbl
xchg
aam
jmp
inc
cmp
lret
mov
test
mov
aam
jle
mov
xchg
popa
jb
aam
out
shll
inc
xchg
pop
ss
adcl
stos
lods
addr16
int
test
push
out
xchg
inc
or
pop
pop
add
fistps
xchg
pushf
out
adcb
je
mov
js
adc
setne
insl
mov
push
dec
jge
cwtl
pop
iret
xchg
mov
push
into
int
add
xchg
hlt
dec
pop
jmp
popa
push
fcom
fwait
lahf
adc
stos
and
in
shll
je
mov
or
xor
cmc
in
inc
das
gs
mov
cli
pop
cltd
inc
lret
jno
insw
inc
scas
inc
jg
xchg
cltd
rolb
outsl
adc
aas
add
ljmp
repz
cmp
push
xor
divl
cmc
lock
test
data16
lret
in
mov
xchg
fs
dec
mov
mov
add
vmwrite
jle
xor
add
dec
jecxz
cmpsb
jg
int3
and
cmp
js
clc
adc
sbb
jb
mov
ss
scas
cli
adc
or
lahf
arpl
inc
mov
push
mov
adc
xor
into
scas
xchg
inc
mov
cs
rorb
cmp
lods
ret
push
mov
cmovnp
xchg
and
leave
push
popf
or
out
push
pop
jg
xchg
addr16
dec
add
orb
sbb
sbb
add
pop
mov
out
pop
or
xor
mov
cmp
lcall
cmpsl
outsb
push
daa
hlt
in
mov
mov
pop
or
shll
jp
push
in
or
inc
cwtl
stos
sub
popa
xchg
inc
icebp
popf
xor
xor
test
rorb
sbb
mov
mov
nop
clc
xchg
pop
or
icebp
xchg
jnp
in
int3
pop
testb
data16
cmp
adc
sbb
inc
adc
push
das
and
movsl
mov
push
ret
cmc
add
loopne
xchg
fdivrp
lock
adc
dec
cmp
cmc
fisttps
xorb
mov
jnp
mov
testb
cmpsl
repz
jge
pop
sub
ljmp
sti
jne
ficoms
out
sbb
dec
scas
dec
mov
pop
js
sbb
out
in
mov
pop
lcall
push
bound
scas
div
mov
xor
mov
dec
sbb
popa
test
dec
incb
sbb
lods
xor
xor
inc
outsb
xor
mov
adc
mov
inc
call
test
call
dec
fs
mov
xor
andb
rorb
pop
push
loope
inc
fdivrl
mov
inc
enter
fnsave
xchg
sbb
imul
sbb
xchg
mov
push
mov
ss
sahf
sub
inc
jg
cmpsb
inc
ja
ret
or
divl
mov
fsubl
sub
pop
inc
dec
in
mov
in
adc
jl
and
pop
loope
pop
enter
dec
and
cmp
out
mov
imulb
je
out
mov
xchg
test
inc
test
notb
scas
cmc
pop
adc
addr16
push
ror
jp
imul
mov
lret
inc
mov
test
mov
cmc
xor
push
imul
xchg
test
rcl
xchg
sti
daa
mov
and
xor
repnz
mov
mov
and
mov
mov
addr16
push
dec
mov
pushf
dec
jp
mov
lret
pop
and
sub
mov
xchg
pop
jne
lods
jae
stos
dec
enter
add
sub
and
aad
add
sti
test
test
outsb
mov
in
mov
mov
leave
cmp
rorb
int
cwtl
jp
mov
push
lret
inc
xchg
int3
dec
ja
or
xor
stos
pop
in
adc
out
sbb
inc
adc
jo
out
xor
mov
xor
pop
mov
lods
repnz
mov
in
add
js
std
repz
hlt
push
pop
push
pop
and
dec
out
movsb
pop
test
loope
and
cmp
lahf
push
add
mov
idivl
fs
fstpl
sub
int
out
mov
aad
loope
cmpsl
pop
das
mov
add
cmp
adc
push
mov
jb
call
aas
shlb
setg
nop
push
mov
roll
test
inc
sbb
in
stos
push
les
pop
retw
int
out
sbb
mov
add
in
push
push
mov
jp
xor
imull
xrelease
dec
jnp
mov
loop
add
clc
fdivrs
push
push
adc
rorb
bound
jge
enter
push
je
and
pop
jb
ret
sbb
stos
jno
outsb
imul
and
cli
imull
imul
rcll
cmpsb
add
sub
dec
enter
lods
into
cmpsb
out
add
xchg
cmc
pop
add
dec
mov
pop
rcrb
xchg
mov
xor
popa
fistpl
insb
pop
and
into
je
or
mov
xchg
push
imul
test
cmp
add
lds
push
mov
outsb
repnz
ret
stos
push
fildl
pop
jp
dec
xor
adc
fisttpll
jp
or
movsb
imul
es
mov
xlat
inc
xchg
cli
fs
pusha
in
imul
jle
stc
push
adc
dec
aam
mov
cs
cmp
mov
push
or
jbe
mov
inc
lea
aam
shl
ret
lea
es
sbbb
push
inc
stc
fsubrl
lea
mov
sahf
outsb
jl
std
fsubl
cmp
fcompl
out
mov
leave
fstl
inc
pop
push
insl
outsl
sub
test
jne
cltd
xchg
cmc
jp
dec
xor
pop
outsb
and
inc
pusha
mov
jb
mov
loopne
xchg
and
mov
ja
daa
push
sti
ficomps
dec
out
xor
popf
daa
push
add
push
dec
mov
shrl
lret
push
hlt
adc
jb
stos
jl
divb
pop
add
and
sbb
xchg
fsub
arpl
fwait
or
dec
sub
insb
add
sbb
fidivs
adc
nop
mov
adc
int
push
stos
add
les
jg
cli
mov
shll
out
out
xchg
mov
or
mov
rolb
enter
mov
mov
pop
testl
addb
outsl
in
repz
sbb
ljmp
xchg
xor
cmp
mov
mov
insb
cltd
or
lcall
cmp
adc
pop
mov
gs
ds
mov
stos
mov
ljmp
out
mov
mov
sahf
orl
fs
imul
ja
cld
xchg
cld
pop
idiv
arpl
nopl
sbb
les
mov
notb
jbe
iret
rcrb
pop
push
out
pop
sub
stos
sti
out
cmp
xor
cmp
cs
jo
mov
stc
xchg
scas
insb
jo
xchg
outsl
inc
or
xchg
pop
dec
push
dec
mov
pushf
jae
dec
jg
mov
ja
inc
ss
and
mov
insb
xchg
dec
sub
scas
rcrb
sbb
inc
aad
push
test
cmp
pop
jp
insb
mov
mov
in
mov
sub
pop
out
xor
push
mov
inc
je
lahf
jbe
sahf
add
rclb
or
cmpb
jo
xchg
bnd
lret
les
inc
jbe
jo
dec
out
fimuls
lea
or
test
mov
fsubrl
mov
rcr
jp
xor
out
addr16
adc
sti
pop
dec
enter
cmpb
pop
gs
push
jns
sub
push
rcrl
cmp
shlb
adc
aad
rorb
in
loopnew
dec
dec
push
loop
push
sbb
cmpsb
int3
aas
adc
sbb
xorl
push
push
icebp
es
xchg
loopne
and
popa
push
xchg
icebp
inc
idivl
fcomps
cltd
adc
dec
jne
xchg
loop
incl
sbb
jmp
xor
les
xorb
aad
xchg
push
ret
lds
cmp
and
lods
movsl
enter
mov
shl
movsl
push
mov
mov
pop
sub
movsl
sahf
mov
xchg
inc
dec
adc
jg
mov
lahf
jge
cmp
mov
push
or
push
mov
and
xor
jle
mov
pop
in
fdiv
lock
push
insb
push
fisttpl
test
sbb
loop
sti
pop
mov
add
jb
popa
cld
sbb
mov
aaa
add
subb
mov
out
cld
jbe
jns
pop
fnstcw
push
loopne
in
mov
or
insb
sbb
jle
sub
pop
lret
shr
in
in
es
cmp
mov
in
cmp
sub
inc
inc
xor
into
shl
in
adc
add
repz
inc
xor
int
sub
pusha
dec
xor
jbe
jbe
push
mulb
lods
repnz
jns
int3
dec
sub
out
stc
xor
pop
dec
inc
add
iret
loope
sbb
or
or
repz
sub
push
stc
sub
std
dec
adc
push
je
fld
mov
xchg
push
inc
mov
push
push
pop
test
sbb
push
push
xor
pop
push
xchg
test
call
sub
int
or
icebp
testl
lahf
out
cmpsl
aam
imul
mov
packssdw
and
dec
dec
int3
sub
adc
add
rcrb
add
mov
push
mov
xchg
adc
lret
xchg
sbb
push
xor
dec
add
insl
iret
adc
mov
add
icebp
add
add
xchg
ds
adc
in
shll
fldt
mov
sbb
icebp
pop
mov
cld
hlt
xor
fisubs
in
insb
xchg
out
xlat
mov
sbb
adc
dec
icebp
loope
dec
add
mov
push
jge
iret
fmuls
pop
daa
add
mov
sbb
mov
inc
pop
pop
pop
repz
ret
dec
lds
das
inc
xor
inc
subl
nop
neg
nop
cmc
add
push
aam
push
movsl
enter
dec
aam
fmuls
call
and
testb
xchg
mov
cmp
insl
shrb
aam
bnd
les
imul
mov
mov
mov
mov
push
imul
push
fisubrs
xchg
push
mov
mov
dec
inc
jae
adcb
mov
push
push
outsb
shr
out
and
and
daa
xlat
scas
and
pop
mov
pushf
out
xchg
pushl
mov
sbb
cltd
inc
lds
loop
arpl
out
mov
nop
popf
lret
es
sti
addr16
sbb
mov
pop
mov
jmp
jb
sub
mov
cltd
outsb
sub
cmp
jg
jmp
scas
dec
xor
fnstenv
xlat
push
or
cli
inc
fs
dec
mov
sub
inc
outsl
loopne
mov
cmp
pusha
aad
dec
xchg
ds
add
out
gs
loope
cmp
push
add
js
rorb
or
stos
jmp
js
adc
out
shll
jne
es
jno
js
mov
call
mov
pop
rolb
xlat
icebp
insl
mov
xchg
or
sbb
scas
mov
pop
fnstcw
add
cmp
test
pop
lods
or
mov
xlat
dec
lods
sti
fistl
mov
xchg
adc
aaa
mov
dec
mov
mov
push
xor
dec
mov
sub
mov
jg
jo
pop
adc
bnd
push
mov
dec
jl
insb
pop
jge
hlt
xor
insl
sub
cmpsb
pop
les
nop
test
mulb
mov
int
mov
adc
sahf
xor
cmp
adc
cmp
push
mov
bound
cmp
stos
leave
fiaddl
loop
add
push
jno
shll
pushf
push
cmp
mov
xor
add
in
jmp
and
stos
sbb
pop
dec
sub
xor
lods
jno
dec
sub
movsb
bound
shr
lock
jmp
jnp
idivb
mov
and
out
push
cld
pop
push
rcll
and
push
push
and
mov
inc
lcall
pop
jl
xor
push
sub
ret
sub
fs
test
inc
dec
jns
inc
pop
push
sub
cli
lret
and
shl
std
sar
or
cmp
aaa
int
cmpsl
gs
xchg
mov
insb
in
sahf
fwait
shlb
sbb
adc
popf
loopne
mov
mov
mov
mov
inc
xchg
inc
aad
cli
and
outsb
xchg
fidivrs
dec
adc
orb
lea
insl
cltd
mov
je
mov
leave
dec
sbb
lret
add
ss
dec
loope
jmp
cmp
cmpsb
xor
les
cwtl
insb
aas
mov
lods
ds
out
jmp
fs
das
shll
int
popf
imul
loop
lcall
out
sbb
paddq
test
cwtl
pop
xchg
das
pushf
nop
xor
add
push
movsb
negb
lcall
mov
add
in
cmpsl
jns
push
jno
int
sub
inc
xor
jns
jg
pop
test
ret
rcrb
jge
hlt
mov
pushf
sbb
test
cs
ja
cmp
xchg
ret
adc
lcall
xchg
push
sbb
mov
pop
pop
xchg
clc
sbb
xchg
into
cld
xchg
sbb
xchg
mov
pop
daa
and
or
add
mov
addl
into
and
sbb
dec
add
out
stos
outsl
movsl
lret
aaa
in
sub
pop
cltd
mov
sbb
aaa
or
cmp
das
dec
hlt
adc
sti
xor
and
lds
lahf
vmptrld
xchg
mov
lds
add
mov
cltd
je
cmp
out
jb
int
in
lods
or
jo
jmp
jno
ss
int3
pop
test
ljmp
hlt
cs
inc
xchg
cs
xchg
cmp
enter
jae
daa
ljmp
mov
lods
mov
cld
mov
xchg
sbb
shrb
cmp
movsb
sbb
jno
dec
mov
sub
je
xchg
mov
mov
pop
xchg
out
icebp
dec
mov
mov
jne
popa
pop
fisubl
jp
in
lods
lods
and
subb
xor
call
inc
hlt
pop
clc
insl
or
lea
lret
adc
sub
idiv
stos
inc
push
aaa
dec
jge
push
jg
in
cwtl
notl
mov
jmp
daa
push
adc
out
mov
int3
scas
test
xchg
mov
pop
xlat
in
jae
movsl
movb
pop
outsl
int
popa
pop
insb
jne
das
outsb
mov
pop
jl
xchg
pusha
pop
cmp
xor
dec
rcll
ja
inc
repz
mov
fdivs
sub
rcrl
lods
ret
scas
jns
dec
adc
mov
sbb
adc
and
mov
sub
iret
cs
xor
add
iret
repnz
rorb
outsb
sbbl
das
fstl
jge
jb
and
ret
sbb
ljmp
mov
rcr
adc
jge
adc
xchg
xor
mov
and
aas
jmp
adc
mov
stos
mov
xor
sbb
call
imul
daa
jl
sub
mov
push
iret
push
mov
adc
xchg
fs
cltd
clc
mov
mov
mov
mov
es
adc
push
cli
nop
sbb
lret
mov
ja
mov
bound
pushf
mov
or
push
sahf
jle
mov
jne
push
cltd
pop
fs
mov
int
sub
push
push
dec
push
das
mov
mov
add
cmp
or
ss
insb
and
repnz
mov
pop
push
ror
xchg
jnp
sub
imul
cwtl
mov
xor
or
cmc
add
bound
xor
add
int3
andb
pop
jl
xrelease
lret
scas
xchg
out
imul
push
rcl
aam
xor
jo
mov
xor
aad
movsb
mov
ja
add
out
rcr
push
xlat
or
mov
mov
push
daa
fsubrs
inc
mov
data16
cltd
fdivrs
addr16
pop
sub
int3
adc
xor
call
das
pop
mov
imull
js
jno
adcl
xchg
lods
or
aas
out
ja
mov
sbb
jle
cmp
push
test
lret
scas
jno
pop
repz
sbb
inc
aam
dec
dec
pop
pop
push
or
ficomps
repnz
jbe
movsb
arpl
mov
mov
je
mov
lds
daa
ret
lcall
test
in
lret
cltd
sbb
ss
or
cmpsl
std
loopne
inc
aad
mov
adc
icebp
and
aad
push
bound
ret
add
icebp
mov
sub
or
add
inc
adc
cltd
jb
stos
in
xchg
adc
xor
jbe
pop
sub
mov
js
pop
filds
and
cmc
push
dec
pop
xchg
test
xor
fldenv
mov
int3
xor
sbb
mov
inc
cli
lods
scas
cwtl
fxch
mov
pusha
adc
clc
mov
repnz
ret
jle
adc
jo
imul
sti
jae
sbb
xor
xchg
enter
flds
xchg
xchg
scas
stos
inc
mov
loopne
rclb
inc
icebp
cld
jecxz
pop
jns
arpl
loopne
adc
ja
sub
and
pushf
xchg
inc
dec
ss
adc
rcll
out
cld
popf
out
in
jo
mov
scas
mov
xor
jge
pushf
xchg
ret
dec
in
outsb
dec
subl
jno
mov
xchg
out
outsb
clc
flds
jle
push
cld
cmp
sbb
sub
jp
cld
sbb
dec
mov
sarl
dec
cmp
xlat
movsb
push
pop
and
into
adc
cld
push
clc
cmpsl
test
sbb
push
or
add
bound
xor
sub
fiadds
addr16
mov
mov
in
push
nop
std
fnstenv
outsb
and
pop
test
adc
cli
push
pop
pop
push
jg
pop
sti
pop
mov
or
xor
test
call
leave
dec
pushf
jbe
adc
sbb
pop
mov
lock
lcall
sub
add
mov
pop
inc
adc
mov
sbb
dec
xor
mov
cmpsb
lock
test
push
loope
fisttpl
outsl
js
lods
std
sahf
mov
jae
jnp
adc
in
mov
in
ret
ss
pop
dec
or
xchg
cmpsb
jecxz
xchg
pop
cli
sti
mov
mov
pusha
stos
add
cmp
lods
gs
pop
hlt
scas
jne
jle
xchg
pop
xchg
adc
push
inc
cmpsb
data16
lret
push
jmp
mov
jnp
or
sbb
aas
dec
dec
and
adc
fwait
mov
mov
add
jl
cld
adc
adc
ss
icebp
dec
jo
fsubl
int3
or
inc
int3
lahf
adc
and
repnz
or
fnstenv
xor
and
and
fadd
shrb
sub
sbb
in
mov
inc
daa
inc
icebp
test
push
add
fucomip
jge
jo
cmpsl
cld
or
fdivl
xlat
mov
mov
sbb
mov
adc
mov
dec
cmp
mov
sub
xchg
clc
das
loope
dec
mov
in
mov
orl
rcl
mov
ljmp
lds
out
jl
scas
fmuls
shlb
and
push
iret
iret
movsb
mov
mov
pop
add
arpl
push
dec
push
repnz
fidivs
push
mov
pop
mov
and
stc
mov
cmpsl
mov
mov
out
dec
sub
lock
loop
js
in
sub
lcall
lea
test
sub
in
push
enter
inc
idivb
enter
test
test
test
mov
in
jns
push
aad
sub
cmpsb
addl
cld
popa
xchg
ljmp
loopne
pop
sbb
pop
loope
sbb
lahf
int
mov
mov
aas
mov
ja
hlt
out
add
jle
add
push
sbb
cmpsb
gs
inc
sub
in
aas
stos
in
sbb
imul
roll
cmp
scas
ljmp
in
mov
stos
jl
popf
cmpsl
add
mov
mov
push
pop
fld
xorl
shlb
das
dec
sub
add
jb
inc
lahf
mov
xchg
xor
test
mov
dec
pushf
adc
mov
or
sub
xchg
loopne
adc
mov
gs
stos
or
stos
dec
adc
iret
fisubrs
xor
lahf
sahf
jp
sub
add
rolb
in
inc
add
addr16
push
pop
mov
rcr
adc
lret
lods
ja
add
dec
or
xor
xchg
cmp
xchg
movsb
ljmp
cld
nop
test
mov
mov
push
rorl
iret
xor
scas
inc
and
jle
pop
std
xchg
je
sbb
leave
push
rorb
sub
sti
pop
dec
xor
sub
int
xchg
jecxz
add
lods
dec
cld
int
ficoms
push
sub
lods
dec
push
xor
sbbb
notb
push
xor
daa
in
icebp
xchg
cmp
sub
cmp
outsl
and
mov
popa
int3
jbe
and
outsb
jo
sbb
jecxz
insl
and
adc
inc
iret
mov
or
pop
mov
xor
aaa
pop
sbb
inc
sbb
cmp
push
push
out
mov
mov
cld
test
fsubr
sbb
lret
xlat
subb
xchg
insb
xor
inc
jmp
pusha
xchg
loop
and
clc
lock
cltd
add
and
pop
movsb
mov
sahf
inc
ret
pop
aas
and
jb
pop
repz
dec
fdivrs
jae
adcl
pop
ss
lds
push
mov
push
push
or
mov
pop
cmpsb
or
shll
out
add
rcrl
and
xor
xor
sarl
insb
testb
and
pop
sti
bound
mov
sarl
shr
xchg
mov
inc
arpl
loop
jb
add
pop
ljmp
loope
mov
sub
xor
dec
aad
insl
xor
neg
mov
fwait
in
sbb
je
add
inc
add
and
mov
pop
jg
sahf
mov
out
xorl
fldenv
repnz
lahf
or
cmpsb
leave
xchg
xchg
xor
movsl
pop
jg
scas
dec
ret
fidivrs
insb
mov
jle
sbb
xor
sar
adc
mov
pop
adc
mov
push
out
clc
cmp
or
in
xor
jg
jbe
loope
subb
insl
dec
mov
sub
lock
mov
jo
jb
lea
xchg
test
std
out
mov
pop
or
out
and
inc
jge
out
repz
cmp
pop
mov
addr16
xchg
push
jae
shlb
bound
je
mov
xchg
daa
int3
add
imulb
popa
jo
clc
cltd
jno
in
jae
fs
cs
pop
shrl
push
lret
out
cmp
popf
sbbb
push
mov
xchg
mov
sub
fidivl
cmp
es
out
push
data16
aas
sti
fs
arpl
pusha
fisubl
negl
adc
pop
pop
push
fscale
or
xchg
ficompl
and
mov
adc
cwtl
shr
ret
insb
add
or
icebp
not
test
call
das
test
mov
or
mov
cmp
adc
cltd
xor
rol
lret
fwait
dec
scas
icebp
dec
mov
and
jae
dec
cmp
repz
dec
into
xchg
clc
cmp
and
mov
xchg
sub
incb
push
sub
cmc
notb
add
inc
cmp
cmp
movsl
cmp
lcall
bound
jns
lea
xor
cld
sub
mov
cmp
rorb
dec
test
adc
adc
lods
adc
fs
fildll
test
jne
ss
andb
mov
bound
cmpl
push
add
inc
push
mov
or
mov
test
aam
inc
xlat
inc
push
into
sbb
push
fidivrl
je
sub
pop
push
out
push
cwtl
imul
sub
lock
es
xor
pop
mov
in
decl
negl
addr16
clc
cmp
dec
loopne
sub
sbb
nop
mov
push
shrl
mov
add
dec
lock
rcrb
movsl
aas
xor
shll
sub
adc
int3
aaa
in
mov
daa
cmp
mov
add
mov
inc
xor
and
lret
jecxz
outsb
dec
inc
sub
pop
das
mov
jmp
pop
daa
mov
mov
in
mov
mov
add
xor
loope
add
pushl
insl
adc
xchg
mov
mov
sti
rcrb
iret
lret
ds
sub
cmp
cmp
into
mov
movsl
fimuls
aaa
mov
lret
lock
or
in
sub
xchg
icebp
xchg
ja
or
call
mov
and
cs
or
push
sbb
test
mov
repnz
sbb
push
add
or
mov
and
cld
data16
outsl
mov
mov
icebp
cwtl
push
push
xchg
push
xchg
nop
cmp
dec
sti
cmp
jg
push
adc
jnp
out
aad
ficompl
xor
shld
push
cmpsb
sub
dec
jbe
scas
in
ret
mov
lock
sbb
jg
insl
xchg
es
imulb
es
je
rcl
cld
cwtl
in
cwtl
sbb
pop
xor
push
inc
inc
adc
nop
pusha
sarb
or
and
fs
ficoms
pop
or
xchg
pop
popf
xor
sarb
cmp
cmpsb
xor
adc
test
sub
stos
divb
out
loope,pn
add
xacquire
push
cmpsl
outsl
scas
ljmp
push
shrb
insl
and
mov
xor
popf
shll
in
movsb
jecxz
inc
enter
jb
inc
mov
cli
sbb
and
test
jmp
rolb
xchg
cmpsb
push
loopne
aas
call
fdivrl
inc
sub
dec
cli
xor
cmpsl
xor
sub
mov
and
mov
repnz
pop
adc
iret
lret
insl
pop
out
xor
jno
push
push
das
jecxz
ret
xchg
scas
jg
out
data16
icebp
pop
dec
xor
xchg
outsb
out
xor
and
jno
adc
rorb
lcall
add
xchg
sub
and
push
imul
jmp
lahf
fwait
test
loopne
and
pop
pop
inc
in
push
lea
into
mov
xchg
dec
sub
js
mov
cld
mov
and
mov
push
xlat
cmp
sbb
xlat
jb
dec
pushf
adc
push
sub
jne
js
pop
dec
imul
dec
pusha
out
and
scas
cmp
es
pusha
leave
xor
gs
or
xor
mov
sarl
jns
dec
movsb
rolb
push
xchg
andb
test
jg
mov
pop
lds
and
out
or
lods
clc
out
adc
pop
lcall
loope
negl
inc
jge
xlat
pop
sti
lods
jo
sahf
test
jno
out
inc
jmp
fneni(8087
scas
pop
or
mov
mov
cmp
xchg
or
inc
lods
fnsave
push
xor
pop
loop
shll
xchg
mov
out
mov
adc
ficoms
mov
das
hlt
fistps
les
fadds
jns
mov
call
pop
gs
pop
das
rcrb
xchg
sub
pop
jecxz
ret
mov
or
pop
ja
jp
mov
xchg
sbb
lahf
rcl
fcompl
sbb
mov
ret
int
or
cmp
shrb
aam
jbe
push
pop
inc
jne
cmp
sub
fiadds
test
add
jmp
call
repnz
clc
inc
dec
aad
lods
movsl
cld
test
in
js
cmc
dec
jb
and
movl
push
hlt
cmpsb
fwait
rorb
in
lahf
loopne
aam
icebp
cmp
gs
add
mov
fcompl
ds
jg
dec
lahf
adc
lods
inc
ficomps
sbb
stc
sbb
or
mov
outsb
xchg
loope
sbb
inc
stos
pop
mov
mov
test
sar
daa
cmp
fisttps
lret
xchg
gs
adc
push
test
pushf
jp
push
lods
hlt
dec
or
xor
push
fs
mov
cmp
adc
cwtl
or
xor
fidivrl
push
push
dec
inc
cli
imul
rcrl
jmp
out
sub
ja
pushf
pop
adc
lods
or
jmp
sahf
pushl
ja
adc
iret
repz
push
and
cmp
jl
push
fucomi
mov
movsl
fninit
fs
mov
fidivrl
loop,pn
cmpsl
clc
inc
mov
cmp
aaa
sbb
shrd
cmpsb
test
repz
jbe
mov
jmp
cmp
inc
out
outsl
mov
mov
pand
jmp
or
cmp
in
mov
leave
sarb
mov
sub
inc
aaa
sub
pop
iret
pushf
and
test
push
imul
xchg
jecxz
decb
push
ficompl
sahf
dec
jno
mov
mov
lods
or
sbb
pop
outsb
gs
loopne
gs
mov
sbb
adc
lods
adc
adc
test
div
sub
repnz
adc
in
push
ja
inc
xchg
rclb
jne
jb
cwtl
jne
shrl
aaa
shrl
push
ret
and
pop
clc
pusha
mov
or
aas
aaa
mov
pcmpeqw
ja
fsubs
mov
bound
movups
push
stc
loop
popf
insb
roll
es
pop
cmc
mov
and
or
fistpl
inc
sbb
scas
cmc
rsm
je
xchg
lret
imul
in
add
into
int
pop
bound
push
shll
imull
mov
push
pop
push
pop
xchg
push
pop
add
in
clc
and
std
es
jmp
ficoml
scas
cmc
xchg
lods
push
shlb
push
xchg
fstps
or
fdivrl
ficoms
sbb
call
ss
xchg
or
stos
jp
call
int3
imul
out
sbbb
and
stos
push
sbb
xchg
nop
dec
sarl
jbe
cmpb
sbb
insl
push
iret
out
incl
xchg
les
loop
ret
and
lret
out
dec
pop
hlt
xchg
test
aaa
in
and
jecxz
and
lea
nop
push
roll
adc
orl
inc
in
or
push
dec
jns
or
sbb
loop
fcoml
or
jae
and
sub
iret
repnz
call
xor
mov
xchg
sbb
in
dec
adcl
out
mov
and
es
popa
arpl
in
mov
add
scas
fmul
rcrl
push
shld
dec
push
movsb
xlat
pop
cmp
adc
pop
decl
sbb
testb
cmp
xchg
mov
outsl
sbb
push
add
mov
jmp
je
ja
movsb
je
dec
pop
adc
xchg
push
adc
adc
dec
jmp
lret
sbb
movsb
push
pop
jecxz
push
mov
xchg
push
mov
and
test
cmp
data16
jecxz
and
dec
ljmp
out
add
cld
sbb
inc
movsl
clc
jnp
mov
mov
imul
mov
mov
sbb
popf
adc
jmp
mov
aad
loopne
ficomps
daa
icebp
fisubs
std
nop
js
cli
sub
cmp
fsubr
xor
dec
xchg
add
jo
addr16
pop
xchg
xchg
mov
pop
lods
jae
loope
add
xor
aad
add
xchg
cmp
and
insb
adc
aad
sbb
pop
lods
mov
ficoms
cmc
push
icebp
rclb
shrb
pop
clc
pushf
cmp
push
arpl
pusha
pop
jno
dec
cmp
hlt
inc
call
adc
sub
out
hlt
scas
fsubl
push
dec
lret
jb
pop
sbb
in
inc
imul
push
xchg
xchg
push
mov
in
push
xor
shl
and
lahf
imul
mov
push
les
push
das
cmp
mov
mov
test
bound
xchg
mov
in
sbb
daa
loop
sarl
fdivr
push
lods
cmp
cmpsl
jnp
out
xor
xor
cld
or
test
iret
loopne
mov
jbe
pop
inc
in
mov
cld
or
enter
orl
testl
sbb
fwait
xchg
add
mov
scas
adc
popf
xchg
sbb
or
mov
bound
dec
inc
push
hlt
pop
rolb
pop
jno
shll
call
sahf
repnz
adc
testl
push
cwtl
popf
mov
mov
push
mov
mul
push
sbbb
div
nop
jmp
imul
inc
inc
push
leave
sub
xchg
lcall
add
fisttpll
lods
jne
shrb
xor
fnstenv
cs
jb
xor
inc
adc
int
mov
lock
jae
out
fimull
adc
or
or
fmul
mov
and
jo
dec
xor
dec
jp
push
into
push
xor
ffreep
inc
test
mov
jecxz
fsubrs
int3
lock
dec
test
xchg
aas
xor
xchg
popf
dec
mov
xlat
mov
inc
mov
enter
imul
enter
pop
cmp
mov
mov
mov
adc
inc
outsb
inc
sti
das
xchg
pop
or
outsl
imul
sbb
adc
jle
push
and
sti
adc
pop
xchg
cmp
lret
inc
xor
adc
add
repnz
arpl
das
mov
out
mov
mov
cvttps2pi
pop
dec
xor
dec
pop
xchg
bound
pop
jns
test
sbb
stos
loop
mov
lods
test
dec
test
and
invd
stos
or
sub
repz
dec
data16
ljmp
clc
xchg
es
push
mov
mov
jns
fwait
js
xchg
test
cmp
test
test
push
sahf
fwait
add
mov
mov
push
loope
mov
outsb
jmp
push
test
mov
cmp
cmp
iret
lds
xchg
lods
dec
inc
scas
cmp
sahf
push
jecxz
lods
out
scas
sbb
sbb
mov
std
lret
xchg
mov
out
stc
jg
dec
movsb
out
rcrl
cmpb
xor
cmpl
mov
shl
xor
movsb
cmp
mov
add
inc
sbb
or
test
les
push
mov
orb
mov
mov
insl
outsl
xchg
mov
bound
cmp
cltd
sub
cmp
jecxz
test
addr16
icebp
enter
mov
xlat
push
xchg
mov
inc
mov
xor
addr16
sub
leave
jae
dec
xchg
add
loope
mov
hlt
dec
xor
sbbb
mov
jne
cmc
cmc
cli
inc
lods
pop
pop
jo
jbe
outsl
aaa
jecxz
jo
xor
mov
xchg
xchg
sarl
pop
adcb
repnz
sbb
adc
lods
aas
movsl
lods
fdiv
push
rorl
loopne
mov
sbb
xchg
lds
pushf
mov
popa
push
or
xlat
mov
inc
xchg
test
pop
jmp
enter
fsubl
xchg
fs
jnp
lcall
cwtl
mov
cmp
ret
mov
fwait
mov
or
jns
in
inc
insb
sub
test
loopne
insl
sub
cmp
testl
sub
jmp
outsl
mov
xchg
mov
sub
and
nop
repnz
or
pop
inc
aaa
stos
repnz
test
mov
inc
jge
or
pop
pop
imul
cmp
cmc
cmovp
push
fidivl
or
jle
andnps
in
lods
test
sahf
std
sar
inc
insb
jo
jnp
jp
push
shll
popf
adc
xchg
xchg
cwtl
mov
das
add
xchg
mov
out
push
popw
test
push
dec
mov
stos
xchg
cmp
dec
inc
xor
mov
cmp
and
jne
jmp
loop
pop
movsl
test
cmp
sub
ljmp
xchg
mov
insb
xchg
push
add
pop
adc
mov
push
xchg
mov
sub
outsb
xchg
mov
repz
lahf
push
aaa
fcompp
pop
mov
in
fistpll
inc
jo
mov
test
push
pop
jle
ss
mov
subb
adc
inc
inc
pushf
scas
and
sahf
adc
cltd
adc
dec
or
mov
imulb
add
mov
outsb
dec
and
pop
sub
jle
std
dec
push
lods
loopne
and
cmpsb
lahf
mov
sub
lds
jecxz
nop
iret
mov
lcall
imul
in
in
mov
lcall
xlat
rcrl
dec
cmp
aas
mov
fadd
test
dec
lahf
lcall
inc
adcb
ljmp
xchg
gs
aad
and
inc
push
les
movsl
cltd
sub
inc
loope
or
mov
push
xchg
xchg
mov
rcr
lcall
and
cmp
push
xchg
jle
xor
clc
pop
lret
jbe
jo
dec
movsl
lret
outsb
cmp
addr16
lret
ret
insl
sub
mov
dec
jne
cmc
std
or
adc
adc
scas
out
xor
dec
fiaddl
add
cwtl
in
hlt
or
jl
xchg
pop
shrb
cmp
leave
repnz
iret
pop
movsl
xchg
mov
fcmovu
and
cmp
fildll
ja
or
sbbl
aaa
inc
xchg
jg
lock
xor
xchg
adc
loopne
mov
cmpsb
xchg
lock
inc
jg
cs
inc
cmpsb
fmuls
pop
or
add
xchg
pop
divb
out
mov
sub
cmp
call
sarl
adc
push
jle
aam
mov
sub
pop
dec
pop
fldenv
roll
mov
mov
rol
icebp
add
or
xchg
pop
mov
lods
inc
mov
jb
inc
inc
xor
mov
adc
leave
push
push
imul
pop
dec
sub
xor
xchg
mov
cmp
fbld
in
repnz
pop
int
xlat
iret
inc
je
adc
aas
adc
pop
fadd
xchg
jnp
sbb
cs
in
inc
mov
mov
cmpsl
mov
inc
pop
sub
repnz
add
cmpsb
jg
movups
lds
fwait
incb
int3
imul
addb
xor
sub
test
xchg
test
dec
movsl
lcall
leave
sub
pop
test
aam
in
jne
ret
push
int
ret
movsb
movsb
mov
lds
inc
imul
sub
mov
int3
test
adc
outsl
or
ret
test
ljmp
aaa
lcall
popa
or
dec
lcall
push
push
inc
jbe
sbb
ja
lret
mov
outsb
cmpl
xchg
xchg
xchg
push
ret
pop
imul
lcall
iret
cli
cmpsl
test
fsts
xchg
cmp
or
jl
test
into
cmp
inc
push
insl
stos
in
sti
and
jg
dec
adc
mov
das
and
std
add
xchg
push
pop
outsb
cmp
pop
aas
adcb
out
enter
ljmp
xlat
enter
mov
cwtl
cmp
out
jno
sbb
je
in
push
test
push
scas
adc
dec
cld
in
mov
int3
hlt
cmpsb
mov
jmp
insl
scas
mov
data16
je
int
mov
dec
scas
push
ret
inc
xchg
adc
or
cs
movsl
dec
shl
sbb
test
xorl
inc
sahf
lds
sbb
cmp
fcomps
in
xor
sbb
add
rorl
jecxz
daa
ds
fsubl
sbb
push
rclb
mov
sub
adc
test
mov
sbb
aad
mov
mov
xor
xor
cmc
mov
out
hlt
xlat
xchg
adc
dec
mov
or
lahf
test
and
inc
adc
mov
outsl
pop
dec
popa
cmp
movsl
cmpsb
inc
aaa
inc
dec
adc
jns
xchg
xchg
jae
test
lock
mov
jo
insb
js
inc
stos
popa
jg
iret
dec
sub
jae
out
addr16
movsb
out
popa
inc
add
hlt
inc
mov
btr
jbe
dec
push
xchg
mov
leave
sub
jp
pushf
insl
pop
mov
pop
enter
mov
mov
ja
sub
dec
and
or
jne
ss
ret
fidivrs
rcrl
sti
outsb
xor
sahf
cmp
adc
das
hlt
call
out
flds
mov
xchg
stos
lods
dec
xor
xchg
fdivrl
lods
jo
pop
xchg
cmp
fadds
sti
mov
sbbb
bnd
jne
pop
nop
rorl
imul
movsb
cmp
dec
leave
fisubs
xchg
jmp
xor
subb
int
fs
and
sub
mov
jg
fidivl
mov
std
and
pop
dec
faddl
pusha
pushf
cmp
inc
pushf
and
add
add
in
mov
clc
frstor
xorb
sub
mov
mov
jb
adc
xchg
inc
mov
cli
mov
in
lret
incb
mov
lcall
push
in
xor
pop
out
jg
pop
adc
hlt
nop
mov
sbb
shl
xor
pusha
std
pop
outsb
enter
aad
pop
push
loope
xchg
cmp
mov
out
adc
jae
push
jbe
bound
lock
and
fcoms
adc
inc
fistl
jl
mov
dec
fs
ret
aas
xchg
xor
and
xlat
out
dec
outsl
cmp
aas
test
dec
mov
and
xchg
cld
jl
in
outsb
cmp
out
outsl
mov
sub
js
js
push
mov
iret
lods
stos
ret
mov
mov
mov
pusha
push
sahf
mov
outsb
mov
hlt
pop
dec
xchg
aaa
ficoml
xor
aaa
addl
sahf
pop
cli
rclb
fisubrl
scas
mov
xchg
repnz
cmp
jl
fldenv
xlat
sub
pop
stc
push
jmp
push
stos
push
fildll
outsl
or
fisttpl
movsb
stc
in
push
xor
popf
inc
stc
mov
push
repz
push
push
jnp
mov
cmp
mov
jbe
adc
pushf
cmp
ret
movsb
or
mov
int3
add
mov
test
inc
push
adc
sbb
cmp
and
jb
sub
popa
xor
cmp
mov
rorb
fisubrl
sbb
push
sub
lea
pop
sti
cmp
sti
mov
divb
orl
rclb
shlb
add
jp
out
sbb
popf
ficomps
and
es
inc
mov
ss
adc
adc
movsb
test
std
pop
cmp
push
fcoms
cmp
test
fistps
ret
lods
addr16
push
sahf
dec
xor
sub
int3
out
mov
aam
jo
sub
shrl
out
lret
andb
or
stos
sti
pop
es
pop
es
sahf
ss
fdivrp
bound
fdivrp
imul
add
adc
daa
sub
fwait
xchg
les
inc
nop
push
mov
jae
inc
push
pop
jmp
dec
out
inc
inc
nop
lret
or
test
cld
repz
aad
mov
cmp
and
push
mov
leave
or
sub
daa
cmc
mov
out
sbb
test
ret
mov
rorl
pop
or
ret
sbb
mov
pop
inc
daa
push
insb
ret
and
xchg
or
inc
xor
jae
push
xlat
das
sub
sub
cmp
imul
cmpsl
in
xchg
aaa
dec
loopne
mov
push
dec
in
lods
inc
ja
andb
lea
movsb
fcmovnb
aam
fcmovne
outsl
push
adc
pop
fwait
in
mov
scas
fsubrs
ljmp
cwtl
lahf
insb
addr16
cmp
cmp
jge
daa
pop
mov
gs
test
inc
or
gs
dec
js
mov
daa
cmp
push
repnz
inc
jo
cmp
jge
jnp
fcoms
jle
ret
cmp
sub
scas
inc
fisubrl
out
imul
mov
movups
aas
mov
jg
decl
cld
testb
adc
sub
mov
xchg
sti
call
scas
pop
push
fimuls
pop
mov
mov
adcl
cmpsl
int
xchg
push
xchg
mov
fldl
std
xor
mov
adc
xlat
icebp
inc
scas
hlt
jp
xor
cmc
enter
cli
divb
pop
outsb
pop
xor
bound
cmp
bound
push
push
scas
enter
xor
sbb
xor
pop
and
shrl
pop
mov
insb
xor
mov
nop
dec
std
lea
adc
icebp
mov
cmp
lock
test
add
and
mov
aaa
xor
fs
in
inc
popf
pusha
pop
pop
or
jecxz
out
rcrl
ja
cmp
add
repz
daa
aaa
xor
cmp
outsl
add
mov
dec
insb
xchg
mov
int3
pop
xchg
mov
testb
repnz
push
call
shl
stc
mov
pop
bound
iret
sbb
lcall
xchg
gs
imul
mov
push
pushf
cmp
or
loopne
mov
es
in
sbb
mov
outsb
ja
ljmp
mov
sub
movsl
xchg
push
adc
js
ss
and
jmp
test
nop
arpl
mov
cmp
dec
lods
sub
sarb
push
mov
sti
out
cmp
or
jo
dec
add
add
push
rcll
ja
fidivl
dec
bound
leave
adc
jp
lret
xor
popa
sbbl
add
sub
mov
cmp
addr16
cmpsb
cmpsb
daa
xor
adc
and
loop
dec
inc
inc
add
int
icebp
in
add
test
mov
popa
sarl
cld
inc
dec
scas
mov
out
test
cld
rcr
push
pop
faddl
stos
lret
and
mov
test
outsl
cmp
out
lcall
loop
mov
inc
flds
mov
lods
lds
fnstcw
mov
push
ret
push
aaa
mov
stc
lods
mov
inc
dec
xor
xorb
test
mov
add
imul
cld
xchg
push
inc
mov
cmp
aas
xor
dec
cmp
and
jne
inc
adc
rcrl
dec
rcl
pusha
xchg
xor
loope
add
lahf
in
add
int3
and
jae
and
flds
fcmovne
sbb
scas
or
or
pop
fld
sub
sub
leave
stc
subb
int3
scas
mov
es
push
or
dec
or
rclb
mov
adc
fs
dec
mov
mov
xchg
shlb
jmp
pop
imul
jmp
xor
pop
ljmp
lea
lea
outsl
adcl
sbb
cltd
dec
popf
add
cld
or
push
jbe
mov
pop
cmp
sub
xchg
jle
sub
push
mov
js
mov
insb
leave
push
mov
push
sub
enter
xor
xchg
sahf
push
pop
pop
adc
mov
divl
xchg
push
or
sbb
xor
mulb
sti
movsb
push
test
rclb
or
xor
or
xor
mov
mov
or
dec
push
sub
xchg
lds
fwait
mov
and
push
leave
in
popa
cld
jo
out
mov
inc
xchg
jne
pop
fldl
push
roll
lahf
adc
fxtract
fs
ret
xchg
push
or
jg
sbb
cmc
jmp
push
ljmp
xchg
int3
in
push
and
mov
push
mov
sbb
sub
cmp
push
cmc
les
std
sub
sub
sub
jo
js,pt
push
add
mov
out
iret
sbb
rclb
out
mov
fwait
cmpsb
jecxz
add
push
imul
push
xor
test
xor
mov
inc
fistpll
sbb
addb
sub
adc
aad
cli
mov
call
dec
cmc
daa
js
dec
push
sub
and
stos
sbb
and
insb
pop
and
in
loop
xor
jbe
push
dec
push
sub
jo
stc
pop
sub
andb
adc
xchg
lods
pop
jl
or
pop
shlb
into
std
jae
stos
mov
sub
popa
fnstenv
dec
jg,pn
push
shll
imull
cli
inc
push
mov
lods
sub
dec
insb
pop
or
sbb
mov
incl
push
mov
fdivs
pop
data16
push
bound
jle
jl,pn
shr
sbbl
and
jb
adc
lcall
imul
fcmovnbe
jp
push
jg
test
mov
dec
mov
mov
sahf
call
or
pop
and
mov
loopne
fisttpl
mov
jno
call
imul
xor
and
push
xchg
sbb
mov
xchg
adc
adc
pop
or
fdivl
dec
mov
repz
notl
insl
loope
xor
cmp
ret
jg
leave
test
push
push
in
subl
negl
mov
mov
lret
mov
scas
jmp
mov
js
outsl
cmp
test
inc
adc
lods
test
mov
mov
in
sbb
stos
ret
inc
mov
shl
and
adc
inc
xchg
gs
pop
inc
rclb
jmp
push
mov
push
fisttpll
iret
in
popl
dec
out
scas
cmp
adc
shll
test
or
sub
and
mov
mov
pop
jae
fs
or
arpl
mov
or
push
popa
mull
pop
cmp
test
outsl
jbe
clc
fstpl
push
shll
fldenv
int
mov
scas
push
cmp
jle
mov
aas
sub
sbb
or
mov
xchg
push
movsb
inc
mov
ret
jmp
lahf
xchg
insl
jmp
cmp
mov
lock
sar
sbb
push
inc
pop
mov
mov
push
scas
daa
decl
pop
sbb
add
gs
outsb
loop
xchg
sbb
in
aam
jp
orl
lahf
pop
fucomi
popf
inc
stos
sbb
xor
cs
call
mov
daa
sub
mov
push
push
mov
sbbb
and
loope
rcr
rcl
addb
mov
jb
push
push
leave
aad
xchg
mov
pop
xor
mov
add
lds
jnp
mov
adc
mov
jmp
aaa
dec
cmp
test
or
pop
es
and
js
push
aaa
aam
jne
adc
cmpsl
lret
pop
test
mov
mov
add
xchg
mov
xchg
xchg
testb
pop
jbe
jns
je
add
inc
mov
add
loope
push
or
xchg
push
enter
add
pushf
xchg
ds
ffreep
scas
sub
xchg
add
mov
and
jne
push
loop
ret
gs
arpl
sbb
decb
testb
mov
xlat
cmp
mov
cmp
jg
dec
inc
xorb
mov
jle
jl
or
adc
iret
and
jl
sbb
lret
sub
ret
push
hlt
sub
inc
cmpsb
dec
fwait
xor
iret
sub
sahf
add
loope
rorb
aaa
and
mov
icebp
insl
hlt
fcoml
pop
or
sub
xchg
or
insl
mov
mov
add
pop
mov
test
xor
out
sti
out
sbb
mov
fmull
rclb
dec
test
ficoml
stos
cmp
js
ret
mov
sub
dec
push
push
cmp
test
scas
push
fistpll
sbb
add
jge
mov
bound
push
test
hlt
push
jmp
mov
xor
and
push
clc
sub
test
mov
es
cmp
jp
icebp
sub
adc
cwtl
push
fsubs
push
sub
mov
xchg
into
xchg
icebp
inc
mov
lcall
arpl
pop
cmp
jo
enter
or
imul
in
cmpsl
into
shlb
mov
sub
int
arpl
imul
ljmp
dec
loop
push
push
orl
add
insb
roll
rorb
das
xchg
adc
mov
mov
into
xor
push
int3
cmp
mov
mov
jecxz
cmp
mov
sbb
repz
mov
push
jno
js
stos
mov
test
or
jmp
mov
mov
arpl
lahf
incb
or
lock
jne
mov
and
mov
sbb
sub
ud1
cmp
into
nop
push
jmp
and
dec
push
into
or
dec
fwait
movsb
mov
repz
rcrl
call
cmpsb
sti
les
push
clc
inc
add
sub
fneni(8087
cmpl
xchg
jg
repnz
stos
dec
cmp
jbe
jb
xor
mov
std
out
mov
push
lds
adc
stc
add
jnp
mov
sub
jnp
mov
les
mov
add
ret
nop
adc
shr
test
sbb
pusha
jo
push
adc
lcall
jb
inc
sub
push
aas
or
mov
mov
sbb
and
pop
cld
xor
pop
pop
pop
hlt
cmpsl
jge
jecxz
ficompl
adc
pop
out
sahf
movsl
mov
enter
je
fisttps
cmp
lea
xchg
cwtl
mov
jno
dec
or
push
fnstenv
imul
pop
imul
inc
insb
fimuls
fcmovnbe
hlt
mov
sbbb
mov
mov
nop
adc
nop
lret
sub
sti
xor
push
pusha
jmp
dec
or
in
inc
bnd
shll
or
push
test
imull
aaa
add
push
pop
fistpl
std
adc
lret
add
add
xchg
ret
rol
bound
repz
js
mov
mov
fnstsw
push
mov
loope
std
xor
mov
sub
adc
lock
adc
scas
push
adc
mov
cmp
pop
out
adc
cld
pushf
insl
bound
add
push
pop
push
scas
push
out
or
mov
mov
dec
xchg
sbb
loop
popa
je
sbb
mov
dec
push
rcrb
and
leave
add
es
repz
lock
out
mov
sti
jl
push
sahf
fwait
out
rclb
clc
ja
daa
xchg
add
loope
adc
notl
rorl
bound
adc
inc
inc
loop
lods
mov
xor
popa
out
int
scas
addl
loope
adc
xor
pop
stc
add
call
xor
jb
push
xor
and
xchg
jbe
and
pop
lds
out
xchg
sub
push
enter
mov
dec
sahf
ret
mov
xchg
push
or
inc
push
or
push
sahf
mov
sub
inc
mov
gs
out
jne
push
xlat
fcomps
sub
rolb
inc
add
out
push
leave
rcrb
sbb
or
push
fisubs
add
and
and
cmp
sbb
or
mov
cmp
jnp
mov
test
lret
mov
cltd
push
sbb
adc
daa
aad
push
mov
in
ss
mov
and
fcmove
test
push
mov
insl
loope
xor
jg
xchg
dec
lret
xchg
test
cli
subb
mov
popa
add
addr16
cli
mov
loope
imul
sbb
mull
mov
cmp
sbb
sub
mov
rol
je
xor
lods
xchg
rcll
imul
cld
insl
cs
test
mov
lret
fwait
mov
push
popf
daa
icebp
lods
cmc
cmp
hlt
sbb
mov
add
push
sarb
sbb
int
sub
push
add
call
mov
pop
enter
jnp
xchg
rclb
sbb
mov
pushf
push
je
cmp
adc
inc
sub
sub
pop
adc
jbe
insl
orb
es
push
sahf
lahf
shrl
in
and
fmulp
rcll
add
ds
scas
lret
out
pop
dec
jecxz
xor
mov
movsb
leave
push
or
repnz
push
mov
jae
push
cmpsl
mov
jge
inc
pop
push
clc
int
xor
repnz
cltd
nop
fwait
pop
inc
loope
test
mov
daa
jno
mov
xor
xor
jg
fwait
cmp
in
pop
mov
xchg
sbb
inc
jne
push
outsl
les
stos
mov
xchg
mov
icebp
xor
jno
mov
in
xchg
insb
loope
mov
nop
int3
cmp
lcall
mov
mov
arpl
xlat
rorl
jno
sti
pop
cmp
mov
sarb
jo
rcrb
push
mov
gs
lret
sub
stc
xor
sbb
into
sbb
inc
loope
push
xor
ret
push
fldl
ds
xchg
mov
push
inc
orb
out
aad
mov
xor
pop
jle
lcall
movsb
xchg
mov
outsl
cmp
adc
popa
or
cld
int
cltd
add
and
xor
or
xor
mov
lret
iret
sbb
lahf
inc
lcall
insb
cmpsb
add
fsubrs
add
mov
xor
lret
hlt
or
jle
ds
aas
push
inc
inc
fsubrs
movl
add
push
fnstenv
inc
rolb
sub
imul
sbb
xchg
rcrb
xor
pop
les
in
inc
testb
jmp
cmp
popa
jne
and
mov
adc
imul
mov
faddp
inc
int
or
jo
popa
mov
insl
xor
in
fdiv
inc
adc
lret
data16
fwait
mov
pop
sbb
add
mov
jl
hlt
sub
loopne
sub
scas
lret
jo
mov
fists
push
loope
pop
ror
inc
mov
mov
lret
mov
sub
icebp
clc
xchg
adc
pop
and
xchg
push
testl
ljmp
mov
and
cmp
mov
repnz
ret
incb
dec
out
int
mov
or
jbe
push
or
clc
test
movntq
out
lret
pop
push
test
sub
mov
imul
jle
push
push
mov
scas
es
loope
add
xlat
in
mov
cmp
mov
inc
sub
xor
clc
sarb
mov
pop
negl
cmp
jns
pop
or
and
into
jg
push
cmp
addb
jmp
push
ffreep
sarb
mov
movsl
mov
daa
mov
pop
repnz
cmp
das
or
into
clc
int3
jno
ds
out
xchg
add
je
jnp
xchg
push
ds
notl
pop
add
js
add
xor
mov
pop
in
pop
jp
mov
add
in
stc
jp
lret
xchg
mov
aaa
cmp
fisttpll
inc
and
jp
adcb
outsl
lea
xorb
add
lea
in
xchg
or
into
outsl
loop
out
inc
cld
jecxz
push
inc
sbb
lea
inc
stos
movsl
repz
andb
mov
jno
or
cwtl
nop
and
mov
dec
repz
fs
ret
cmp
bnd
dec
in
mov
insl
sahf
or
aad
cmc
pop
jl
dec
push
cmpsl
push
sbbb
pushf
dec
jbe
xlat
dec
sarl
fwait
out
es
push
jns
rol
les
mov
loopne
jmp
push
jne
dec
leave
sbb
push
mov
icebp
jae
int
lods
jl
cmpsb
add
and
mov
xorl
cmp
mov
call
pop
ret
aam
out
dec
adc
sbb
stos
push
mov
dec
cs
pop
pop
stos
mov
icebp
rcr
cmp
nop
fs
insl
repnz
loope
test
cmp
fwait
mov
movsl
sarl
add
loopne
neg
inc
in
push
testb
loope
sbb
repz
inc
js
orl
xchg
add
and
std
or
call
add
inc
stos
lahf
addr16
les
jp
sbb
pop
dec
test
cmp
test
jge
cltd
jnp
es
xchg
adc
push
loopne
ror
lcall
fidivrs
ja
fsubrl
sar
cmp
sahf
xor
testl
mov
cmp
cmpl
aaa
lods
movsl
push
cmpsb
dec
push
inc
and
loopne
jmp
pusha
inc
scas
pop
jb
xchg
jle
adc
lcall
or
cmpl
cmp
andb
data16
stos
cmp
pop
pop
fwait
insl
arpl
sbb
fsubl
dec
jno
cltd
addr16
xor
mov
int
lahf
out
imul
add
fidivrl
cltd
mov
repz
xchg
int3
xchg
or
scas
shld
lea
sti
add
movsl
push
push
cmp
into
enter
mov
pop
jl
pusha
xlat
rcrb
xchg
cmp
pop
into
in
pop
add
mov
sahf
insl
push
lods
xchg
ja
push
cltd
pop
rcl
cs
test
cmp
in
mov
xor
xor
mov
or
mov
or
in
cmp
inc
add
jge
aaa
into
xor
ljmp
stos
dec
in
mov
mov
bound
std
popf
mov
fildl
inc
and
push
mov
sbb
fbld
add
into
aam
sub
aam
cmp
ficoms
xor
fildll
push
xchg
test
ret
das
cld
outsl
int
into
mov
mov
xor
pop
cltd
xchg
les
add
iret
test
inc
jp
ljmp
add
dec
test
jo
mov
inc
jecxz
aaa
dec
ds
fldenv
pop
out
lods
insb
fisubl
jae
jne
inc
push
jle
lea
dec
adc
es
fstpl
insl
mov
jbe
inc
pop
das
fnstenv
in
cltd
pop
inc
flds
movsb
adc
loope
test
leave
mov
rcr
jns
jmp
adc
das
mov
jecxz
hlt
mov
dec
push
xchg
and
clc
mov
mov
imul
dec
fcomps
mov
inc
ss
fdivrs
in
mov
daa
mov
mov
jg
divb
dec
gs
pop
adc
in
adc
sahf
inc
dec
or
and
mov
fsub
or
sub
fistl
notb
in
out
or
arpl
inc
hlt
xor
push
xor
rolb
scas
xchg
pop
js
pop
cmp
aas
jae
icebp
sti
dec
in
shrb
mov
cmp
push
mov
lock
scas
inc
cmc
xchg
push
test
std
pop
sub
or
dec
jg
add
repnz
cmpsb
lods
out
xchg
fisubs
or
mov
in
cmc
imul
mov
jne
int3
lahf
pushf
out
or
loopne
mov
lahf
ss
cmovle
add
dec
int
cld
sbb
pop
in
push
push
jo
js
cmpsb
bound
fildl
fidivrs
js
dec
push
jl
mov
and
out
cmp
sub
and
adc
push
pop
fisttpl
inc
lea
lret
andl
push
xor
jmp
dec
popf
outsb
pushf
outsl
fcmovnb
popa
shr
push
add
adc
sbb
iret
out
adc
xor
enter
and
je
xor
add
gs
push
in
cmp
add
scas
pop
out
out
or
bnd
fisttps
lds
rclb
fldt
mov
push
std
loopne
sub
sbbb
out
loopne
clc
push
inc
mov
xor
inc
fdivl
and
stos
mov
inc
das
mov
fsubrs
sti
es
loop
pop
xchg
mov
aaa
es
roll
mov
test
mov
sbb
push
jge
mov
stos
push
xchg
lea
xor
cmp
sbb
sbb
push
and
xchg
mov
sub
fidivl
decl
sub
testb
lods
ja
jp
or
mov
nop
mov
call
mov
fst
mov
loop
pop
xchg
jno
lods
ret
jecxz
enter
pop
rolb
cmp
or
mov
mov
iret
mov
stos
and
sbb
movsb
lock
sahf
inc
cwtl
jnp
cltd
cmpsl
mov
xlat
stos
fimull
pop
pop
mov
and
fcom
mov
cmp
sbb
or
push
movsb
shrl
xor
jae
mov
dec
lahf
add
mov
cmc
cld
incb
inc
dec
aaa
dec
shll
push
das
adc
and
mov
or
push
in
jecxz
jns
push
jmp
sti
pushf
les
inc
xor
scas
scas
int3
mov
cltd
mov
rorb
jae
enter
or
dec
or
xchg
cmp
aad
dec
iret
stos
mov
sbbl
sub
lret
fld
ja
rorl
cld
je
in
inc
xchg
inc
mov
lcall
jl
sbb
sbb
mov
xchg
dec
shll
orl
sub
pop
mov
mov
in
orl
add
mov
int
arpl
xor
loope
cmpl
mov
xor
adc
scas
cmp
dec
and
mov
sbb
outsb
inc
mov
add
xorl
adc
out
xchg
in
into
mov
push
rol
popa
push
inc
xchg
int
adc
jle
jmp
adc
clc
or
cwtl
and
rorl
aad
lods
into
sahf
sbb
jmp
test
xchg
sub
repz
scas
test
jl
ja
das
adc
lea
or
push
xchg
mov
out
jmp
mov
lcall
or
cltd
push
lods
sbb
adc
insl
inc
dec
int
leave
mov
and
out
addr16
cmpb
ljmp
cmpb
sub
jnp
mov
dec
call
adc
sub
adc
enter
sub
xchg
fadds
mov
test
cld
cmpl
pop
add
cmp
jl
pop
lret
ss
adc
xchg
sub
add
mov
test
pop
sahf
jae
dec
mov
imul
mov
pop
cs
mov
mov
in
scas
nop
adc
cld
cmp
pop
shll
pop
xchg
pop
mov
repz
les
arpl
nop
nop
add
adc
mov
cwtl
ror
mov
sbb
xor
jecxz
adc
fadd
inc
adc
fsubp
cld
jbe
std
xorb
ja
lds
adcb
mov
arpl
gs
cmp
scas
movsl
test
icebp
mov
mov
aad
lea
loop
loope
sahf
sub
sub
xor
cmp
fists
mov
inc
and
inc
pop
and
aas
scas
xchg
mov
call
inc
pop
loope
jecxz
sbbb
sbb
pushf
mov
lea
lods
js
movsl
lret
mov
cmpsb
and
stc
sub
shlb
pop
pop
not
pusha
jo
adc
lret
mov
lds
loop
sbb
popf
mov
mov
in
repnz
jnp
jnp
test
outsl
pop
js
cmp
leave
cmp
mov
adc
mov
mov
xor
pop
pop
push
fwait
scas
cwtl
add
ret
mov
sub
jmp
xchg
fisubrs
push
or
lcall
es
dec
imul
lahf
scas
test
mov
sbb
rcrl
mov
cmp
xchg
or
mov
out
adc
xor
loop
adc
pushf
mov
sbb
mov
stc
xor
push
mov
loope
cld
xchg
popa
call
fists
adc
je
fcmovu
aam
mov
mov
xchg
xchg
fs
notb
push
mov
aad
and
xchg
mov
iret
stos
lods
or
popf
jg
jbe
xchg
cmp
add
jecxz
dec
cmc
cli
rol
nop
push
jns
add
cmpsb
adc
cltd
pop
lcall
jle
and
cmp
cmp
xchg
cmp
mov
movl
sbb
mov
cli
lea
or
lret
xor
leave
pop
mov
or
movsl
inc
fnsave
jmp
pop
int3
dec
imul
ljmp
cmc
mov
lcall
ds
pop
push
xchg
test
lock
pop
out
xchg
bound
xchg
and
aam
jbe
icebp
call
fdivrs
aam
test
jae
mov
shlb
repz
push
paddq
out
pop
adc
test
or
push
cmpsl
es
cmp
or
push
jmp
aaa
mov
in
out
mov
xchg
xor
fnstcw
not
xchg
lahf
loop
std
fsubr
inc
dec
cld
fsts
icebp
pop
cwtl
in
mov
xchg
int
aam
and
sarl
jbe
or
cmp
imul
fdivrl
adc
fisttpll
or
add
aad
fdivl
inc
adc
inc
adc
pop
pop
adc
dec
xor
sbb
pop
adcl
lcall
in
xor
pop
sub
int
ljmp
push
pop
in
jno
out
sti
pop
jg
test
out
enter
stc
rorl
mov
in
iret
xchg
add
or
lea
loopne
xchg
shlb
pop
push
sub
add
jecxz
test
mov
ret
bound
sub
or
pop
pop
call
movsl
cli
ret
icebp
xchg
sub
enter
xor
fs
clc
jg
movsl
mov
or
mov
mov
xchg
mov
mov
or
sbb
movsl
lock
push
les
jecxz
adc
pop
repz
and
shl
xor
loop
in
xor
movsl
push
or
mov
jbe
leave
mov
cmp
movsb
cli
test
pop
pop
ret
sbb
jl
push
push
aad
test
jns
mov
fisubrl
cmpsb
mov
cmp
add
cwtl
fistps
push
scas
mov
pop
scas
cmc
sbb
mov
and
mov
cmpsb
cmp
push
jp
xor
mov
testl
jbe
sbb
test
fs
mov
rcr
divb
scas
movsl
jae
xor
pop
or
insl
inc
cltd
sbb
cmp
mov
js
sti
outsb
xchg
pop
pop
adc
inc
jb
movsb
sub
sub
enter
mov
icebp
jl
sti
xor
mov
movsl
and
into
pop
je
sti
jmp
or
or
test
jmp
loope
push
cwtl
shrb
or
xchg
jmp
push
out
push
stos
ss
pushf
movsl
xor
xchg
aas
lock
cld
gs
arpl
stc
incb
in
test
xchg
push
fwait
push
push
and
push
add
sbb
sub
xchg
fcomip
sub
push
or
jp
xchg
mov
scas
mov
jb
ret
gs
stos
orl
lret
outsl
cmp
mov
jb
cmpsl
mov
pop
pushf
data16
xchg
dec
mov
push
imul
stc
cwtl
dec
repz
in
pop
iret
repnz
push
push
repnz
testl
scas
mov
stc
jbe
imul
cli
push
mov
jle
mov
dec
dec
and
stos
fstpl
push
outsl
mov
es
inc
jo
push
mov
test
add
shr
mov
jmp
xor
or
inc
pop
pop
and
stc
mov
pop
pop
scas
ret
aas
pop
movsl
nop
fcmove
loop
std
daa
and
mov
push
inc
cmp
dec
js
ret
xor
insl
lahf
or
int
out
pop
jns
jae
push
xor
xor
daa
cmpsb
xor
push
stos
jns
aam
lret
mov
mov
je
test
or
fists
fldl
daa
cltd
push
fwait
or
pop
jne
cwtl
lret
inc
cmc
inc
lcall
movsb
imulb
packuswb
cmc
int3
movsl
mov
inc
outsl
jecxz
push
dec
push
ja
and
mov
and
lcall
ret
push
inc
pop
fs
xchg
flds
ds
cmp
mov
cwtl
jle
inc
dec
jl
adc
ja
cmpsl
inc
push
jle
mov
mov
ja
jecxz
cmp
ret
call
adc
dec
pmulhuw
sbb
pop
dec
popf
pop
inc
ret
xor
or
cld
add
sarl
sub
jp
mov
jmp
inc
stos
jge
data16
mov
ret
in
xchg
faddl
push
jae
mov
in
fisubs
iret
dec
stc
aaa
out
nop
and
test
add
xchg
sub
flds
dec
test
and
jo
sbb
pop
xchg
adc
in
or
lret
push
js
call
push
jb
sbb
aaa
jp
add
std
mov
jl
push
popa
push
cli
mov
xchg
jb
cltd
cmp
mov
lea
jecxz
dec
pop
sub
vpacksswb
iret
adcb
and
lret
mov
iret
loop
push
mov
popf
cli
movb
les
aas
cmp
pop
jge
dec
add
das
mulb
lret
std
adc
das
inc
xchg
pop
inc
jo
std
xor
xchg
stc
mov
out
xchg
fwait
lea
imull
cmp
add
lds
adc
mov
or
les
pop
sub
mov
cmp
cmp
aas
out
push
mov
in
dec
xor
stc
pushf
inc
outsb
xchg
and
out
mov
enter
cmp
mov
lock
andb
push
sbb
shrl
fldt
lods
adc
lock
fistl
in
xchg
pop
pop
les
inc
das
or
sub
mov
push
out
inc
mov
ffreep
into
fcmovnbe
mov
rcrl
jecxz
jge
xor
or
mov
shll
mov
in
aas
mov
in
mov
adc
inc
sub
repnz
push
push
pushf
dec
jle
or
xor
push
cmc
in
adc
stos
jl
pop
dec
cli
addr16
enter
sbb
sub
jge
or
or
push
cmp
mov
pop
imul
ss
pop
add
sub
pop
and
gs
or
bound
mov
push
mov
sbb
out
cmp
push
mov
or
in
xchg
or
mov
sbb
mov
bound
or
mov
ret
dec
hlt
shlb
xchg
xor
shl
push
loope
mov
inc
jae
stos
xchg
es
icebp
mov
mov
sub
psraw
pop
cmpsl
jl
xchg
ljmp
cmp
imul
inc
insb
push
mov
pop
mov
jo
xchg
stos
push
movsb
xchg
xchg
out
pop
fisubs
push
or
or
sbb
lea
mov
sbb
lret
fs
add
jmp
inc
inc
push
adc
pop
mov
dec
sbb
fwait
ljmp
test
testb
and
out
cltd
pop
inc
pop
inc
jae
pop
out
push
sbb
or
into
aam
add
jg
dec
and
pushf
dec
cltd
mov
inc
popf
lret
mov
push
aam
mov
cmpsb
cs
ja
xorb
xchg
imul
in
das
mov
pop
mov
popa
cmp
dec
ds
add
and
les
mov
xchg
xchg
std
mov
inc
sbb
out
ss
cli
dec
popa
fnsave
dec
fsts
cmc
fs
aad
mov
loopne
je
mov
repz
pusha
and
stos
cmp
imul
into
push
dec
dec
mov
push
xorl
mov
jno
adc
adc
addr16
cmpsb
cmp
sbb
test
xchg
pop
adc
scas
ds
add
mov
mov
jmp
xor
incb
lcall
mulb
mov
addl
hlt
lahf
sbb
push
ljmp
fsubrl
push
cld
jp
jmp
lods
and
adc
jg
mov
cmc
mov
out
push
jg
push
xor
mov
cmp
mov
or
rcll
mov
cmp
ljmp
pop
jbe
jmp
rorb
shll
sbb
push
addr16
fcoms
jo
ror
in
rclb
mov
adc
loope
mov
xor
in
test
icebp
push
sbb
bound
xlat
loopne
mov
or
adc
hlt
cld
fdivr
add
pop
mov
jmp
pop
out
jmp
jmp
mov
mov
leave
xor
stc
add
xor
sub
mov
loopne
or
shrb
pop
mov
ljmp
jns
ljmp
mov
cmp
sub
xchg
mov
aas
cmpsl
cmp
out
mov
mov
xorb
xor
icebp
push
fidivrl
inc
dec
pop
mov
sub
jns
sahf
jl
aas
xchg
push
leave
sub
hlt
aaa
inc
mov
cmp
and
xor
mov
in
shrl
aaa
jg
add
xor
and
sub
int3
shl
or
int3
aad
sub
nop
jecxz
sub
addr16
mov
mov
jg
add
iret
sbb
popf
enter
int
idiv
popf
cwtl
lcall
lahf
and
and
push
dec
iret
test
outsb
mov
gs
test
iret
adc
dec
ds
test
push
pop
inc
pop
xor
adc
std
sbb
sub
idiv
jecxz
sub
inc
in
outsl
fisttps
loopne
rcl
int3
pop
xor
out
xchg
cmpsb
out
sbb
pop
mov
in
sbb
rep
psubusb
or
cmpb
sub
ja
push
dec
inc
sti
test
add
mov
pop
popf
adc
mulb
adc
fimuls
xchg
in
jg
lret
cmp
int3
mov
shld
bound
cmp
mov
or
out
rolb
stos
outsb
dec
fisubrl
lock
xchg
push
mov
repz
adc
imul
out
popf
out
jae
ljmp
iret
mov
rclb
dec
pusha
insl
test
and
testl
cmp
pop
jg
cld
hlt
push
xor
xchg
push
outsl
push
xchg
inc
cmp
lcall
mov
adc
sub
adc
push
jo
inc
push
out
inc
mov
push
ret
push
scas
mov
pop
test
jne
movsb
cmp
mov
or
out
mov
scas
repnz
and
mov
lods
ret
xchg
jmp
mov
jmp
cmp
lods
adc
xchg
xor
mov
pop
nop
push
bound
jmp
mov
and
pop
add
sub
xor
mov
imulb
xchg
int
aaa
aaa
subl
xor
cltd
out
cmp
cmpsb
scas
in
fwait
movsl
sti
pushl
push
sub
xchg
push
dec
aaa
ja
aas
push
dec
jbe
sub
pushf
inc
orl
sub
out
mov
mov
jno
fiadds
std
or
cmp
cli
lods
and
add
bnd
pop
add
add
cmp
in
sbb
add
jns
mov
shl
sub
adc
mov
rcr
add
lea
pop
lods
sahf
mov
fs
or
mov
sub
xchg
test
cmp
sub
xor
lcall
shld
pop
cmc
gs
cmovg
sub
push
mov
clc
nop
mov
jg
add
stos
or
cmc
cmp
mov
jp
add
add
push
ret
repz
mov
mov
loope
loope
test
add
lods
mov
aaa
subb
pop
sub
aam
popf
sub
mov
arpl
adc
xchg
mov
sub
ljmp
pop
data16
les
fcompl
mov
sub
imul
test
push
sbb
xlat
cmp
sub
lock
stos
cmp
rol
and
xor
les
xchg
cmp
push
mov
xchg
or
iret
outsb
mov
dec
adc
in
or
cmpsl
pop
jae
or
lds
dec
sbb
inc
jns
jecxz
mov
lea
cmp
ret
jle
mov
inc
adc
and
pop
stos
lahf
lods
mov
insb
push
les
pop
lods
data16
outsl
stos
das
xlat
mov
jge
push
iret
js
shll
add
jns
mov
adc
inc
or
and
adc
out
aad
int
and
pushf
xor
xchg
fwait
dec
nop
add
jae
dec
jno
xchg
test
sahf
jge
repz
jp
mov
es
cmpsl
int3
fisubrl
fildl
mov
jle
push
jo
outsl
jb
fcomps
or
insl
pushf
es
ljmp
mov
jmp
scas
sbb
cmp
xor
out
adcb
test
int3
shll
fwait
adc
call
jge
pop
int3
enter
stos
jg
dec
inc
lahf
scas
insb
pusha
push
popa
cmpsl
rcr
pop
push
sbb
and
movl
mov
insb
dec
xchg
dec
lea
mov
jae
je
in
mov
and
aas
sbb
adc
add
ja
outsb
dec
xchg
cmp
in
xchg
testl
mov
gs
jb
movsb
scas
iret
cmp
mov
subl
xcrypt-ecb
cmpsl
push
nop
into
pop
fimuls
clc
mov
stos
popf
pusha
stc
pop
adc
mov
sbb
sahf
ficoms
xlat
mov
xlat
mov
subb
fimull
adc
iret
sbb
bound
sub
sbb
mul
xchg
addr16
xchg
add
ja
mov
xchg
or
adc
fs
faddp
jmp
jmp
inc
mov
add
mov
or
lods
repz
ret
sti
adc
and
das
inc
lods
xchg
les
or
pop
test
ds
sahf
xchg
into
repnz
or
leave
loopne
mov
out
sbb
mulb
xchg
add
inc
mov
xor
or
sahf
xor
sbb
fistl
inc
jno
jge
mov
mov
inc
stos
or
ret
aaa
lock
and
les
mov
add
das
mov
sub
cld
lods
ja
xor
push
imul
clc
xorl
jl
jbe
ret
jg
adc
test
xor
fmuls
pushf
cli
jns
pop
aam
push
out
sub
es
pop
test
imul
inc
or
ljmp
ljmp
cmpsb
pop
mov
mov
sahf
js
insl
sti
sarl
pop
repnz
push
xor
jne
push
daa
in
push
xchg
mov
test
cmp
push
pop
test
pop
add
gs
pop
test
outsb
pushf
push
ja
imul
ja
cs
insb
mov
lret
push
test
call
sbb
mov
cmp
jge
xchg
shrb
out
sbb
fcom
push
pop
into
and
or
aaa
sbb
into
stc
imul
push
loope
fsub
int
fldenv
dec
clc
xchg
mov
jge
sbb
adc
in
cmc
nop
cmp
xchg
sub
jae
add
shrd
add
popf
mov
nop
mov
mov
and
ss
pop
sbbb
imul
ror
aad
add
ret
lock
mov
mov
cmp
dec
cs
ja
cmpl
fwait
jp
jle
inc
and
jne
out
cmpsb
xor
test
pop
xor
in
xchg
enter
push
lret
cltd
ds
adc
adc
and
xchg
or
pop
call
jecxz
mov
sub
ret
mov
mov
clc
sahf
add
leave
movsl
sub
gs
in
shll
test
push
xchg
aad
pop
add
test
scas
pop
sbb
lret
aaa
pop
test
mov
rcrl
and
mov
xchg
aad
xlat
imull
scas
mov
jecxz
cli
inc
iret
leave
xor
decl
and
rol
daa
lods
cmp
mov
movsl
clc
or
fldcw
int3
call
cs
into
shrb
mov
mull
pop
in
jle
adc
sub
daa
inc
leave
pcmpeqw
nop
add
leave
xchg
fcomps
xor
add
lods
std
fucomi
fisttps
jp
mov
dec
nop
xchg
jge
xor
and
filds
rclb
add
repz
push
stos
in
stc
test
push
cmc
rorl
xchg
int
in
shl
jo
mov
xor
and
push
das
push
aam
xchg
stos
and
shr
mov
outsl
outsb
pop
sbb
in
int3
and
icebp
mov
in
lahf
addr16
add
bound
jge
sbb
mov
fs
into
sbb
jge
in
adc
adc
sub
adc
xchg
dec
int
sbb
sbb
lds
and
out
fwait
leave
dec
jl
or
mov
push
popa
and
pop
ret
lahf
jle
mov
or
or
pop
sbb
mov
sbb
mov
sub
sub
inc
inc
jae
sbb
jno
loope
out
mov
xor
mov
push
push
in
out
cmpsl
ja
cmpsl
xchg
ja
adc
mov
lcall
lcall
call
nop
mov
mov
mov
or
lock
inc
pop
ljmp
mov
daa
lods
dec
mov
out
and
int
mov
add
cmpsl
sub
call
fstpl
aad
adc
push
test
mov
pusha
pop
flds
shl
fldt
ret
arpl
push
add
mov
jge
sahf
in
lret
sbb
out
push
scas
testb
sarb
xrelease
emms
cltd
mov
insl
pop
subb
int
cltd
mov
fldcw
adc
add
push
mov
popa
pusha
push
jae
fcompl
mov
pop
cmp
sub
dec
mov
stos
push
lret
inc
sub
sti
imul
addl
pusha
xchg
loop
adc
stc
imul
dec
fidivl
mov
pop
jge
or
add
dec
add
jp
jp
cmp
xchg
addr16
mov
clc
mov
test
mov
sub
dec
dec
pop
pop
outsl
adc
xchg
sub
shrl
clc
stos
loop
sbb
pop
jg
lds
sti
or
fldpi
decl
stos
inc
sbb
adc
xchg
mov
dec
or
xor
les
es
xchg
in
or
aaa
jmp
es
movsb
inc
dec
and
lret
call
jle
jbe
inc
fwait
mov
adc
push
adc
fstp
lds
cld
adcl
xchg
push
mov
push
data16
dec
pop
pop
adc
in
iret
xchg
xchg
adcl
and
add
mov
pop
stos
rolb
roll
das
mov
inc
insb
or
adcb
loopne
jmp
scas
out
inc
cltd
mov
ret
jl
add
jg
mov
jp
lock
jmp
jg
xchg
fisubl
jns
sbb
push
ficompl
sub
lahf
mov
xorb
shlb
cmpsb
je
imul
lahf
fwait
adc
pop
pop
pop
int
cli
dec
fsubp
pop
leave
and
out
xor
mov
mov
ror
add
mov
add
xor
fstpl
pop
push
xor
mov
sbb
testl
add
add
inc
ss
fs
xor
fisttpll
sub
ds
fidivrl
nop
pop
push
push
or
mov
aas
je
jge
lods
jecxz
call
mov
pop
scas
mov
mov
dec
pushf
inc
test
mov
mov
push
add
add
push
jnp
add
sbb
test
shrl
xor
bound
jns
fidivl
aaa
inc
mov
cmp
jae
in
pop
inc
xchg
cmp
inc
divl
push
orl
rcr
mov
shl
jg
dec
adc
sub
push
push
mov
xchg
ret
sbbb
mov
dec
fisttps
pusha
in
push
lea
addr16
pop
mov
data16
test
jmp
cld
lcall
sti
inc
mov
push
push
push
loope
ljmp
fcmovb
test
jge
xchg
outsl
pop
pop
push
lahf
dec
sti
shrb
cld
add
popa
imul
iret
push
mov
fdivrp
or
pxor
cmpsl
shll
outsb
popa
jne
je
sbb
or
mov
xor
inc
pop
outsb
adc
popa
mov
fcompl
pop
sub
shl
leave
cmpsb
push
jnp
xor
xchg
data16
stos
in
inc
int
jmp
push
rclb
es
pop
pushf
mov
mov
loop
adc
fidivrs
int3
aaa
dec
test
and
mov
lcall
xor
sub
adc
mov
jns
add
or
pop
mov
inc
mov
fwait
scas
cmp
out
jo
adc
or
pop
sub
push
inc
cli
mov
sbb
cld
popf
xchg
or
inc
lds
ret
data16
inc
pop
jmp
filds
push
adcb
push
jmp
adc
push
push
adc
push
cmpsl
out
lds
jmp
enter
mov
movsb
cmp
daa
push
fsts
out
inc
sub
inc
pop
insl
cmp
xor
das
sbb
loope
mov
sbb
adc
jecxz
push
xchg
mov
shll
inc
daa
sub
hlt
pusha
inc
mov
dec
xor
mov
pop
mov
jmp
je
shll
pop
test
inc
add
loope
cltd
dec
pushf
add
ss
lcall
das
jns
fisubrl
fcoml
in
cld
xchg
hlt
pop
movsl
cmc
and
sub
mov
mov
jbe
test
xor
lods
lret
shll
outsb
mul
or
cmp
xchg
xor
cwtl
aaa
jp
iret
dec
mov
and
lret
push
sbb
dec
in
mov
aam
imul
in
outsl
sub
std
lret
sub
or
dec
test
cmp
shll
pop
cld
stos
mov
xchg
cltd
sbb
jecxz
call
iret
int3
popf
lock
popa
add
lahf
int
push
pushf
pop
sbb
sbb
pop
sti
das
dec
jge
push
out
jp
lret
mov
arpl
hlt
cmpsb
sbb
and
dec
lds
xor
je
jns
nop
hlt
push
nop
shrl
or
popa
pop
loopne
mov
xchg
lret
test
and
mov
in
in
and
and
outsl
mov
add
fwait
mov
push
push
mov
fld1
pop
out
push
ljmp
in
lock
outsl
jne
repnz
mov
scas
stc
out
add
repz
popf
pop
jb
pop
std
push
or
and
sub
enter
in
addb
inc
pop
inc
add
sbb
dec
xchg
xchg
fidivrs
out
aaa
pushf
int
icebp
inc
mov
pop
xor
into
test
mov
rcll
shl
adc
jg
pop
rcrl
mov
push
mov
sti
xlat
into
js
add
mov
mov
rcl
daa
loopne
sbbb
fwait
or
inc
and
xchg
jge
push
fucomip
lock
push
cmpsb
cmp
inc
sub
xchg
shlb
sbb
xchg
pop
mov
cmp
lcall
and
xor
fbld
sbb
cmp
sbb
pop
xor
lds
push
scas
sub
inc
enter
sub
dec
mov
cld
mov
push
lret
push
xor
pop
ljmp
mov
out
mov
pop
push
sub
es
out
sub
or
jmp
push
in
movsl
fwait
mov
scas
adc
outsb
test
int3
add
call
lret
mov
and
fmuls
stos
mov
mov
cmp
push
xor
mov
in
popf
rcl
xor
or
outsl
or
push
icebp
jp
pusha
imul
cltd
xchg
sbb
fdivrl
into
icebp
inc
mov
sbb
outsl
sti
push
jb
push
dec
inc
cwtl
dec
aam
fildll
push
sub
ljmp
rolb
outsl
fcmovnbe
xor
jge
pop
mov
sub
insb
xchg
cmp
data16
cli
push
cltd
pop
mov
inc
jo
mov
mov
jmp
pop
sub
movsl
test
call
test
cmp
aad
add
repnz
aaa
pop
mov
ds
pop
xor
cmpsb
cli
sub
dec
lds
icebp
stos
mov
popa
das
sub
push
lcall
mov
cmp
push
movups
int3
decb
sub
lcall
nop
mov
push
out
icebp
cli
test
bound
jl
dec
lock
in
pop
dec
aad
ja
push
pop
ficoms
aam
inc
mov
dec
das
cwtl
sbb
sub
int3
stc
insl
add
mov
bound
and
mov
xchg
test
cld
pop
notl
push
jb
nop
fdivrs
xor
or
adc
mov
outsl
mov
jp
outsl
scas
mov
mov
testl
inc
adcl
ret
xor
mov
int
addr16
ret
adc
arpl
mov
and
lcall
out
dec
leave
or
lahf
fistpll
in
jp
mov
or
mov
xor
pop
stc
fistps
and
outsb
icebp
call
mov
imul
lret
les
cmp
jg
int
fisubrl
aad
dec
out
mov
inc
nop
adc
or
push
idivl
adc
pop
lahf
xor
shrb
sbbb
xchg
idivl
xlat
test
add
pushf
rclb
inc
bound
icebp
out
lock
add
stos
cmp
jmp
sahf
pop
adc
push
lret
push
sbb
inc
into
int
cmp
mov
mov
movsb
or
jae
es
pop
lret
and
sbb
fs
jmp
cmp
scas
lahf
inc
sub
jle
flds
push
jne
aad
xor
leave
sbb
aaa
mov
mov
fsub
push
bound
sub
repz
ljmp
xchg
std
cmp
inc
push
clc
jns
daa
inc
inc
jae
or
and
insl
lds
testb
pop
mov
or
bt
inc
fwait
ret
sarl
cmpsb
frstor
jbe,pn
jno
sbb
add
imul
ret
outsb
dec
mov
sub
insb
dec
leave
dec
mov
push
movl
mov
insl
cmp
icebp
stos
cli
ficoml
jge
outsl
adc
cld
and
lret
adc
shrb
pop
sbb
leave
lret
aas
and
mov
out
cld
mov
or
inc
or
push
mov
mov
scas
das
mov
add
fldt
repnz
test
cmp
jp
adc
ss
jae
mov
pop
call
daa
push
js
movsb
not
loope
test
sbb
cs
cwtl
sbb
adc
adc
negb
popf
into
pop
or
ret
xchg
fimuls
out
cltd
ljmp
in
clc
mov
mov
sar
int3
lret
les
imul
rcll
popa
test
adc
int
jno
fst
imul
mov
repz
flds
movsb
sbb
cwtl
or
or
imul
mov
nop
xchg
out
sub
fmuls
mov
jp
fists
adc
addr16
lret
movsl
cwtl
xchg
and
mov
mov
jbe
roll
push
xor
pop
popf
push
fisubs
in
aad
rolb
push
out
jle
addr16
jbe
fwait
push
xor
and
mov
jnp
out
xor
sub
mov
mov
ja
and
mov
into
dec
popf
fistl
adc
imul
popl
mov
dec
arpl
xchg
inc
mov
pop
sahf
xor
push
and
arpl
arpl
je
cmp
out
xor
cwtl
add
mov
cmp
jb
pushf
xor
iret
rcr
out
jo
mov
ror
jmp
sub
jns
popf
repnz
or
sub
cmp
xchg
push
dec
xlat
dec
sub
cmp
dec
and
jb
or
fisubs
jno
or
fwait
mov
scas
inc
out
pop
push
leave
fstpt
je
mov
imul
mov
sbb
pusha
adc
dec
or
out
ds
loop
sub
lret
in
pop
jmp
sub
lock
mov
dec
xorb
push
push
xchg
movsl
bound
xchg
push
adc
or
adc
mov
and
cmpsb
inc
test
and
cmp
dec
xchg
out
and
sub
adc
fcmovb
adc
pop
push
mov
jnp
jo
ljmp
cmp
xor
xor
jo
mov
jae
lahf
dec
loop
sbb
mov
jo
xor
xor
fs
jo
into
inc
adc
cmp
ret
jnp
inc
or
push
jbe
xor
out
xor
in
ljmp
xchg
nop
mov
pop
sub
fdivl
inc
xor
mov
mov
mov
xor
dec
ds
sub
icebp
out
fcom
aad
repz
ja
aam
or
inc
jo
fstpt
fnstenv
into
jns
loope
mov
jmp
cmp
insl
jo
cmp
sub
movsb
add
sub
adc
shll
cld
inc
push
xchg
fmull
jge
call
sub
and
dec
mov
push
inc
stos
add
mov
pop
ror
cs
cltd
cld
mov
add
jno
mov
pop
jb
xchg
push
sti
xlat
add
repnz
in
stos
xlat
lret
inc
push
lods
cltd
in
call
scas
and
fucomi
cmpsl
je
ljmp
out
lret
ret
sarb
sub
dec
adc
push
testl
icebp
imul
imul
add
scas
mov
inc
and
sar
push
jb
mov
mov
pop
jo
xorl
sti
repnz
in
out
cmp
mov
mov
xor
std
imul
xor
loop
out
cltd
jecxz
ficoms
mov
ljmp
pop
je
test
xlat
lock
mov
xorl
mov
mov
subl
data16
repz
push
push
or
mov
mov
into
sbb
idivb
jbe
lods
rorb
loop,pn
popa
fildl
mov
nop
lock
cmpsl
pop
mov
sahf
dec
mov
jmp
fstpt
inc
scas
popf
fstl
loope
inc
push
inc
pop
mov
popf
lea
mov
and
lret
fcomps
lock
lock
hlt
movsb
bound
mov
dec
es
xchg
pop
mov
outsl
mov
jno
fwait
out
in
xor
xchg
fldcw
sub
mov
lods
call
or
leave
ljmp
push
push
jl
test
loop
adc
insb
xchg
pop
jle
cmp
jmp
mov
mov
int3
ljmp
popf
sub
outsl
pop
add
test
xor
mov
pandn
or
mov
lcall
jns
aaa
pusha
mov
imull
rol
jbe
std
xor
pop
je
stos
jae
pop
pushf
cmp
sbb
fsubr
inc
das
aad
mov
jb
push
fistpl
daa
pop
jo
cmpsb
mov
push
mov
push
stc
sbb
mov
adc
out
sub
mov
repz
inc
xchg
sar
cli
outsl
das
push
inc
mov
je
mov
push
cmp
sbbb
jns
mov
adc
add
mov
adc
ds
repnz
pop
aad
inc
xor
push
sub
inc
dec
std
and
inc
jle
mov
addr16
cmc
push
idivl
aaa
xor
push
adc
inc
outsb
in
and
push
repnz
mov
pushf
jg
pop
and
pushl
imul
ret
add
mov
mov
pushf
dec
jb
lods
popf
inc
mov
and
pop
dec
sbb
mov
push
adc
push
add
sti
sar
xchg
dec
loopne
sbb
in
icebp
fisubrs
fcomip
out
mov
xor
cmp
mov
les
jae
sbb
pop
xchg
out
popa
or
movsb
dec
jmp
cltd
sarl
jbe
or
lods
add
and
scas
insb
push
mov
mov
cmp
xchg
mov
repz
add
hlt
jl
in
fcomps
xchg
xchg
outsb
lods
dec
push
in
bound
sub
int
mov
cmp
les
xor
or
jno
push
icebp
jbe
mov
imul
pusha
mov
orb
stc
and
rolb
daa
xchg
std
jno
dec
out
or
out
add
mov
imul
pop
int3
xlat
int
add
mov
nop
pop
sub
icebp
fdivl
dec
out
mov
mov
sahf
outsl
mov
xor
aas
rorl
or
popa
int3
jle
test
mov
adc
outsl
call
ret
cwtl
push
push
popf
xor
cmp
bound
cmp
mov
push
jge
cltd
dec
jae
dec
and
xchg
mov
repz
mov
das
fs
movsl
cmp
push
push
shll
adc
shl
jne
into
jp
nop
pop
inc
ss
xchg
jp
cmpsl
rcrl
pop
push
pushf
ror
push
dec
in
xchg
cmpsl
shll
in
xchg
ja
inc
mov
movq
lock
fimuls
or
dec
xchg
arpl
sbb
in
jo
inc
inc
cli
cli
in
jmp
lahf
adc
add
mov
inc
sbb
jle
sbb
stos
jno
and
stc
sub
lods
repz
ja
adc
cmp
push
sub
xor
or
lahf
testl
aaa
bnd
lods
xlat
pop
out
sar
cmp
adc
cmp
jo
jg
sub
cli
xor
rclb
push
sbb
call
dec
cmp
or
imul
pusha
mov
outsb
dec
pop
mov
add
and
or
push
push
push
mov
push
das
pop
or
add
stos
xor
and
jg
inc
iret
push
jno
int
push
aad
push
cmp
inc
fisubs
jl
xchg
xor
cmp
popa
movsl
insl
xchg
andb
and
sbb
mov
fdiv
pop
pop
inc
std
add
jg
inc
data16
fisttpll
push
cmp
fidivrs
mov
xor
data16
dec
in
in
scas
daa
push
mov
daa
jp
adc
mov
push
fadd
add
imul
add
cmp
or
pop
lret
sub
push
jo
sahf
pop
and
sbb
adc
push
repz
add
cs
sti
pusha
enter
nop
adc
cmp
xor
sarb
mov
divb
lods
inc
shll
cmp
js
popf
cmp
pusha
cld
lcall
addb
rcll
jle
lret
dec
mov
cmp
out
fimuls
loopne
das
fsubr
and
pop
dec
xchg
stos
inc
xorb
mov
mov
sub
sbbb
gs
and
rcr
jae
js
call
hlt
sti
popf
cs
fwait
int3
dec
xor
aaa
cmp
sar
ss
divps
xor
mov
sub
xor
stos
cmp
movsb
lretw
pop
out
jb
cmp
jnp
cmc
outsb
out
ret
int
xor
sar
insl
pusha
subb
dec
cmpsb
adc
sbbb
mov
gs
mov
in
mov
cmc
inc
lea
jnp
inc
lods
clc
xchg
push
pop
lds
mov
scas
loope
in
or
movl
xchg
and
mov
fidivl
mov
sub
mov
loope
nop
inc
xchg
hlt
das
push
icebp
cs
mov
fcoms
aam
test
cmp
sbb
jl
add
dec
es
push
jnp
mov
inc
test
sbb
jb
and
sbbl
fcmovbe
pushf
sahf
xlat
les
stos
jmp
lds
jge
ds
mov
push
push
push
ja
test
in
stos
cli
clc
cmp
imul
mov
enter
out
popa
imul
push
sahf
arpl
push
adc
rcll
movsl
in
imul
out
je
stc
push
jo
inc
jae
in
lds
test
sbb
sbb
mov
push
inc
inc
push
jns
nop
and
mov
ljmp
or
and
scas
outsb
mov
addb
mov
test
insl
xlat
pop
stos
push
xchg
rcl
or
adc
insb
pop
into
pop
in
insb
xor
mov
fidivs
cmp
sbb
sarb
mov
test
xchg
inc
cmp
sbb
cmp
push
push
pop
fmul
movsb
mov
sbb
je
cmpsl
push
cld
scas
mov
paddq
test
or
andb
xor
jns
pop
jge
sti
push
lds
cltd
repz
and
mov
or
addb
lea
xor
sub
popa
pop
jbe
sbb
lea
jp
arpl
lret
pop
addr16
dec
mov
pop
addb
enter
andb
icebp
rcrl
filds
mov
inc
sub
lods
cmp
inc
pop
vandps
inc
mov
shll
repnz
fcoms
push
xchg
pop
mov
inc
pop
out
jno
jbe
xchg
xchg
cmp
or
gs
fmull
dec
xchg
nop
adc
sbbl
add
fwait
push
into
fsubl
roll
push
das
faddl
mov
sub
xor
repz
pop
cwtl
jb
sbb
sarl
pop
imul
lahf
icebp
lods
mov
scas
jnp
and
inc
scas
es
add
pop
and
pop
popf
adc
inc
scas
xor
mov
pop
scas
sub
jecxz
mov
popa
xchg
aad
mov
cli
dec
xchg
int
xor
ficompl
inc
sub
pop
cli
mov
mull
mov
pop
bound
addl
jmp
inc
bnd
insb
xor
jmp
lods
into
mov
js
lea
call
xchg
movsw
ret
xchg
pop
test
clc
pop
or
incl
test
test
jae
negl
int
jb
imul
pop
push
jo
jge
andl
call
arpl
jae
and
cmpsb
lahf
mov
out
lret
test
jecxz
data16
sub
icebp
ja
ficompl
xchg
hlt
add
scas
mov
rorl
testl
mov
xchg
loopne
gs
dec
add
mov
xchg
push
sahf
test
fidivl
jnp
repnz
xor
hlt
fistps
lea
xchg
repz
cmpsb
lcall
xor
ret
mov
repz
cmpl
test
cmpsl
in
ret
shlb
ret
gs
cmpb
mov
js
inc
shll
sti
rolb
orb
add
cmp
xchg
shr
push
mov
stc
cmp
mov
cli
stc
popf
jne
jge
lds
mull
cmp
lahf
jle
lods
shl
repnz
xor
insl
push
xor
andb
ljmp
test
enter
inc
lret
xchg
les
daa
clc
fstpl
adc
jb
rorb
icebp
adc
sbb
cmp
pop
mov
mov
mov
je
sbb
sar
inc
push
es
mov
sbb
sub
cmpsl
leave
push
push
inc
test
jb
xchg
mov
fidivrl
sbb
loope
fcoms
iret
pop
cmpb
or
inc
aam
loopne
cmp
imul
xchg
jge
lea
out
add
dec
iret
leave
cmp
fs
xor
sub
lds
adc
bound
jo
jo
scas
test
sahf
sbb
stos
pop
insl
cmpsl
lock
add
lock
jnp
clc
sub
push
cmp
push
fwait
push
gs
xor
or
jno
ffreep
cs
sub
sub
jnp
inc
clc
adc
dec
jnp
xchg
mov
cmc
fistpl
lahf
mov
mov
and
stc
push
std
lds
movsw
aad
push
mov
xchg
test
add
jge
orb
sub
mov
insl
sahf
mov
and
nop
xchg
out
adc
sbb
xchg
leave
inc
jno
or
lret
push
popa
dec
adc
fcmovbe
push
cmp
inc
test
mov
mov
movzwl
xlat
inc
add
inc
add
jmp
lret
js
dec
in
sar
rol
push
gs
loope
cltd
adc
subl
cli
or
stos
enter
in
iret
mov
fs
and
push
or
sbb
lock
fadds
call
je
mov
jo
test
mov
bnd
xor
mov
cmp
pushf
mov
mov
aad
jle
jne
jns
jle
cli
mov
ja
sub
test
xor
rcll
stos
aad
insl
addr16
repnz
rolb
jmp
orl
stos
jmp
gs
rolb
or
mov
sub
jns
outsl
sub
fcmovb
dec
mov
cmpsl
lea
arpl
cmp
aad
lcall
xor
iret
sahf
popf
iret
setns
ret
and
lea
insb
xor
scas
mov
cwtl
cmp
pushf
nop
jbe
test
mov
adc
mov
mov
sti
inc
lahf
ds
pop
jae,pt
mov
sbb
inc
cmp
popf
popf
fstpl
mov
mov
push
test
xchg
scas
lcall
sub
ds
xlat
or
jl
mov
adc
dec
mov
loope
cs
incl
movsb
mov
mov
pmaxub
pop
adc
push
cs
jae
dec
scas
sub
pop
dec
xor
stos
aas
cmp
stc
cmpsb
or
jecxz
aad
cmpsl
movsb
divl
mov
loopne
test
jae
or
sbb
pusha
pop
xchg
arpl
ds
and
mov
cmp
add
lods
das
and
and
in
add
cmp
sub
or
and
in
aam
test
pusha
imul
xorb
mov
aad
or
and
mov
push
xor
pop
aad
mov
adc
pusha
push
fstp
insb
xor
arpl
xchg
and
scas
inc
jmp
xor
js
push
mov
sbb
mull
mov
xlat
ja
fcoms
xor
out
sti
push
or
cmp
ja
sahf
push
loopne
jo
dec
pop
cmp
data16
dec
sbb
faddl
adc
push
andl
lods
in
mov
sbb
jle
rolb
push
and
iret
loop
fsubrs
mov
xchg
mov
lds
outsl
enter
aam
mov
icebp
or
or
scas
stos
ja
add
sub
xchg
mov
nop
xlat
mov
or
sbb
mov
add
cs
lret
xchg
pop
mov
lret
xchg
test
sbb
lahf
test
or
push
lret
jo
mov
fcoms
or
int3
das
and
loopne
push
add
xlat
sbb
dec
lret
xchg
inc
dec
cwtl
add
fimull
jo
xchg
in
ljmp
notl
pop
xorb
inc
inc
lods
aaa
stos
pop
add
jae
insb
loope
add
psrlq
adc
mov
mov
out
sub
repz
and
adc
repz
inc
xor
mov
jns
xor
faddl
push
push
fisubl
or
jmp
lahf
cmp
xor
push
mov
mov
push
in
inc
or
outsl
lahf
cmp
cmp
lcall
mov
jle
jb
lcall
fwait
mov
dec
add
popf
pop
mov
mov
nop
jns
sub
and
sbb
xor
mov
pop
pop
nop
arpl
test
sub
pop
and
adc
out
sarl
or
dec
pop
movsb
das
jo
or
cmp
fs
fadd
icebp
jae
aaa
mov
adc
int
jp
std
dec
jb
lcall
jg
sub
sti
js
cmp
loopne
lods
add
pop
push
lahf
aad
jno
cs
mov
fisubrl
ss
jnp
imul
cmp
push
pop
movsb
popa
or
push
sbb
insb
out
xchg
addr16
adcb
cmc
mov
jecxz
mov
mov
gs
xor
out
jl
inc
mov
cmpl
es
test
repnz
add
push
testb
shlb
pop
test
add
mov
mov
mov
push
fimull
xchg
mov
in
les
sub
dec
int
adc
lcall
or
mov
dec
push
and
jno
pop
mov
decl
push
adc
fs
jmp
arpl
and
sub
dec
sbb
xchg
test
mov
out
jnp
dec
out
sub
icebp
fisubrs
aaa
mov
pop
sub
pop
mov
outsb
lock
cmp
sub
add
negb
pop
ljmp
ret
imul
nop
cmpl
xlat
in
movsl
out
adc
jg
in
outsb
lods
mov
clc
mov
and
int3
enter
pop
sbb
dec
sti
adc
jle
push
aas
cli
push
out
jb
js
fbstp
jg
cmp
mov
xor
add
lahf
and
cmc
into
pop
cmp
ljmp
mov
or
sahf
push
sub
xchg
sbb
jnp
mov
in
dec
add
or
push
xor
push
hlt
imul
or
dec
ds
push
std
scas
or
xchg
insb
in
cmp
dec
nop
lea
shll
pop
stos
lods
jg
push
mov
push
out
pop
sub
adcb
stc
lds
loop
or
mov
rcrb
sub
shrb
and
mov
inc
sub
add
aam
sbb
xor
cmp
lea
aas
inc
mov
mov
lods
dec
sbb
pusha
out
ja
adc
xchg
bound
lahf
sbb
outsb
cmc
dec
jp
xchg
inc
xchg
mov
rolb
test
scas
lret
loop
pop
popa
inc
xlat
jp
mov
cmc
in
pop
cmpsl
iret
and
pushf
sbb
out
cmpsb
push
xchg
loopne
add
data16
inc
imul
pop
and
ret
fnstsw
add
mov
outsl
std
rcr
inc
pop
and
pop
fneni(8087
sub
cmp
mov
sub
xchg
aas
loope
push
dec
hlt
mov
test
imul
fists
push
jmp
fidivrl
jl
cmp
test
mov
pop
pop
jno
jns
sub
loop
ret
pop
fisubrs
shrb
mov
insb
insb
xchg
shlb
aam
sub
cmp
ficoml
push
addr16
dec
shrl
frstor
mov
or
adc
repnz
sub
lcall
negl
lret
or
mov
leave
jle
push
into
fcompl
sub
mov
leave
pop
stos
int
and
xchg
test
jb
adc
shll
dec
xchg
mov
in
dec
orb
and
xchg
in
mov
lods
and
jnp
mov
dec
push
jbe
push
mov
cmpsl
mov
pop
scas
push
or
jae
mov
jg
xchg
mov
push
xor
mov
cwtl
add
cmp
mov
in
jne
dec
mov
pop
mov
mov
iret
pop
ljmp
scas
icebp
stos
mov
mov
aas
shrb
lea
inc
lahf
xorb
arpl
shr
mov
jecxz
push
add
pop
cwtl
stos
jo
icebp
lods
imul
rcrl
jle
dec
mov
add
jge
sbb
lods
out
test
lcall
mov
std
filds
mov
movsl
lock
jne
ss
push
addb
int
dec
sti
hlt
int3
mov
rorb
and
and
dec
cwtl
sub
pop
out
add
lret
sub
jns
rcll
sbb
into
jge
in
mov
sti
imul
push
cmp
add
lods
and
mov
addr16
enter
or
cmp
and
fisttpl
testl
jno
adc
xor
les
cmc
sub
test
add
add
jge
jae
inc
fwait
aam
mov
stc
movb
out
mov
adc
daa
or
decb
std
movsb
jb
mov
stos
sbb
loop
jne
or
pop
sets
sbb
sarl
movsb
xchg
mov
aas
jge
ret
and
jb
mov
sub
outsl
je
fistl
xor
xorb
pop
movsb
and
sbb
shll
outsb
dec
fadd
jp
test
jg
add
pop
in
sub
flds
out
movsb
nop
and
mov
or
idivb
stc
arpl
std
or
rcrb
fldenv
jnp
mov
ficoms
and
lods
inc
test
icebp
mov
jecxz
scas
push
push
adc
icebp
or
jns
dec
jo
sbb
push
fsubrs
sbb
fiaddl
outsb
add
jb
cmpl
inc
into
xor
mov
lcall
aam
pusha
stos
fadds
jnp
cmpsl
adc
push
sarl
add
sub
mov
inc
in
jns
jl
jp
addb
or
adc
aam
mov
fiaddl
push
mov
jg
stc
jbe
repnz
xchg
lret
mov
je
jae
push
or
sbb
xchg
pop
repnz
out
loope
push
les
sbb
xchg
sub
inc
sbb
aas
enter
and
fdivl
xor
xor
jae
xor
mov
imul
lret
movsb
push
out
mov
hlt
aad
call
dec
and
sub
mov
cmp
call
add
push
inc
xor
ret
stc
aad
and
addl
mov
adcb
mov
dec
fsub
ds
fstpl
repnz
cmpsb
push
xchg
pop
mov
lret
adc
cwtl
adc
pop
in
lds
lea
in
scas
mov
repnz
add
imul
mov
lcall
popa
ja
sub
push
insl
icebp
jae
jnp
mov
xchg
mov
jns
test
mov
lods
xchg
sub
in
mov
jbe
mov
jbe
adc
xchg
sbb
stos
adc
ret
popa
test
pop
jmp
add
pop
pop
mov
movsl
js
out
or
mov
add
mov
lret
pop
xchg
xchg
jno
mov
pusha
xor
repz
ja
loope
add
out
out
xor
mov
pop
iret
pop
mov
xchg
in
aad
xchg
mov
sub
jns
dec
lods
jle
cmp
out
mov
es
xchg
pop
fistpl
sbb
xor
rcr
in
es
xchg
or
and
ss
mov
or
dec
adc
pop
inc
ja
jo
pop
fdivl
popw
fistps
pusha
test
fnstcw
data16
fsubp
inc
ja
lea
std
movb
in
mov
fisubrl
lods
mov
mov
lret
pop
out
push
xchg
rol
xor
pop
outsl
pop
inc
push
inc
shl
sti
mov
jmp
cmpw
aad
adc
push
pop
cmp
pop
das
mov
pop
roll
and
fs
test
or
fs
sbb
lahf
jmp
mov
stos
movl
jbe
mov
xlat
sub
jo
cmp
aad
fisubrl
outsb
cmp
in
or
insb
arpl
pop
lea
sub
sub
mov
out
mov
or
sub
pusha
inc
sub
pop
pop
mov
pop
jmp
sti
cmp
sbb
ficomps
xchg
pop
mov
cmpl
push
mov
and
pusha
mov
or
add
sub
les
sbb
aad
mov
shr
mov
mov
sbb
ljmp
movsb
ret
cmpsl
aas
or
cli
addr16
and
pusha
mov
inc
ror
hlt
jns
lret
add
sub
mov
ficoms
mov
lahf
insl
inc
fmull
pop
adc
insb
fwait
push
lods
lcall
xlat
fidivrl
pop
fldt
mov
or
mov
in
add
jbe
stos
sbb
lods
fldenv
push
rorl
xchg
orb
call
sub
or
mov
cmpsl
dec
test
mov
cmpsb
pop
test
jmp
and
sub
cmp
jmp
mov
xchg
loope
arpl
and
jb
dec
and
cmp
test
push
out
push
mov
inc
sarl
shrl
push
out
out
add
repnz
and
push
adc
das
test
addr16
pop
and
add
xor
sbb
or
mov
jle
lret
daa
mov
rcrb
stc
inc
cld
cmpsl
mov
and
adc
loope
mov
dec
push
scas
adc
cmc
in
mov
icebp
in
inc
ret
mov
or
mov
outsl
lcall
stos
pop
mov
sbb
imul
adc
jp
shl
fwait
outsb
mov
and
ss
cmp
cmp
rclb
push
mov
mov
cltd
mov
aas
dec
jo
sub
fisttpll
push
jns
cmpsb
mov
fadd
mov
aam
xor
push
outsl
in
pop
test
cmc
add
xor
lret
jnp
push
lds
push
test
sbb
int
push
sbb
add
int
out
mov
inc
icebp
xchg
add
rcr
ja
ret
test
loope
insl
xchg
inc
gs
xchg
sbb
and
xchg
add
pop
add
js
adc
in
pushf
in
mov
out
inc
lea
push
sbb
mov
and
mov
sbb
popa
jp
pop
and
mov
lods
std
out
in
das
add
push
sbb
xchg
jns
mov
jecxz
xor
pop
push
inc
icebp
mov
fstpt
lret
les
mov
push
add
into
movsl
jle
icebp
or
add
fcoml
xchg
into
aam
cmp
pop
je
sbb
fwait
cmpsl
insl
push
push
add
xchg
mov
mov
aas
stos
push
cwtl
mov
ja
fidivrs
jnp
std
pusha
cmpsl
and
ljmp
and
lahf
xchg
movsl
add
fcomps
push
add
popa
xchg
sub
xor
das
push
inc
test
jnp,pt
push
movsl
adc
jno
inc
lcall
cmpsl
ljmp
sbb
mul
add
clc
inc
fadds
jno
sahf
daa
sbbl
mov
jno
test
sub
and
sbb
sub
loope
push
mov
jg
out
mov
aam
scas
incl
xor
cs
test
pop
xchg
push
push
clc
dec
or
loop
pop
inc
or
ja
int3
inc
fadds
dec
sub
lods
cmp
cmp
pushf
sub
cltd
movl
adc
and
loope
out
fdivl
or
mov
nop
idivl
testb
push
pop
rorl
inc
sahf
or
mov
xchg
dec
or
xchg
negl
cmp
ret
push
add
sub
scas
daa
inc
stos
shr
add
es
mov
cmp
sbb
and
dec
scas
mov
mov
icebp
xor
sti
ja
popa
dec
lahf
adc
push
stc
stos
and
adc
shrb
jb
push
mov
mov
cmp
xchg
xchg
aad
mov
ret
sbb
iret
pop
pop
push
int
aas
pop
xchg
leave
cmp
rcrl
dec
sub
andb
mov
adc
mov
pop
cmc
insl
test
push
adc
rcll
call
call
fmul
cmpsb
mov
fldl
mov
test
mov
out
inc
cmp
std
mov
mov
lods
mov
lcall
andl
inc
jmp
sub
or
pop
dec
sbb
dec
fimuls
mov
or
and
jge
into
outsl
mov
mov
pop
rcl
jno
inc
aad
out
dec
mov
sub
fs
icebp
testb
stc
cmp
cmp
mov
xorb
inc
adc
andl
jge
adc
test
dec
sbb
clc
add
and
xor
daa
sbb
cmp
ficompl
ljmp
cmp
inc
mov
cs
clc
mov
cmc
das
xor
js
pusha
xchg
or
inc
mov
xor
jno
push
adcl
xor
jp
xchg
ret
mov
sar
mov
pop
jmp
mov
test
imull
ret
test
dec
and
mov
fcoms
cmpsl
popa
lcall
and
inc
inc
jg
pop
inc
jb
pop
ss
push
cmpsl
ljmp
pop
les
orb
add
subl
xlat
sub
xchg
and
or
cli
aam
fs
lahf
push
sti
or
push
popw
stc
or
pop
cmp
jp
mov
cmp
out
mov
lock
fsts
and
sbb
popf
pop
adc
clc
out
cmp
stos
mov
mov
jecxz
cmp
sbb
inc
ficomps
mov
mov
call
dec
mov
outsb
pop
xor
pop
rorl
xchg
das
adc
add
cmc
adc
lods
adc
cwtl
gs
out
xor
gs
push
mov
xchg
scas
adc
push
test
loope
push
pop
dec
mov
pop
and
pop
ficomps
scas
push
jno
jnp
cmp
jae
std
dec
cmp
dec
shll
sub
pop
scas
sub
insb
test
test
lods
lret
sub
and
orl
jmp
mov
pop
mov
mov
push
push
daa
daa
mov
enter
mov
sti
or
inc
std
dec
daa
dec
jb
clc
out
lahf
jae
ret
cltd
push
into
adc
add
cli
lds
or
js
xor
stos
jne
roll
mov
pusha
jmp
mulb
movsl
fs
popf
mov
dec
push
mov
mov
popf
lret
fidivrs
and
sub
mov
scas
and
cmp
int
mov
xchg
addb
sub
dec
lret
adc
jle
mov
jns
call
or
popf
sarb
inc
rol
xchg
mov
outsb
cmp
pushl
popa
pop
xor
lods
aas
add
xchg
and
pop
sbb
andl
test
xchg
dec
es
lret
div
jle
add
sub
inc
nop
insl
movsb
ja
adc
sbb
or
jecxz
ret
pop
lock
xchg
lea
outsl
push
cmp
js
or
jne
std
sahf
jg
xchg
daa
lret
sbb
adc
lret
adc
add
fwait
out
lcall
test
xchg
jo
cld
mov
pop
jmp
lcall
nop
fildll
rol
xor
rcrl
adc
aaa
out
ret
roll
insl
lahf
jg
addr16
mov
ds
addr16
out
aam
fisubrl
arpl
int
insl
int
lahf
sarl
add
jecxz
push
dec
xor
testl
insb
repnz
rcrb
test
fwait
iret
mov
incl
pop
fld
shrl
adc
popa
sti
inc
popa
cmp
mov
push
ret
mov
out
sbb
inc
imul
mov
and
fwait
in
clc
xchg
sub
repz
xlat
sub
ret
xchg
sti
pop
add
jmp
inc
stc
mov
or
outsb
xor
pop
pop
pop
inc
mov
push
push
adc
mov
sbb
fsub
mov
xor
rol
xchg
cmp
add
push
jae
lret
adc
dec
sbb
fcmovnb
cmpb
fs
das
lcall
xchg
loope
xor
jmp
insb
jecxz
fwait
imulb
lds
and
addl
aad
lock
jae
ret
mov
andl
scas
in
pop
adc
add
inc
jl
jmp
jp
mov
insb
imul
pushf
aam
add
add
push
adc
sbb
sbb
fcomps
pop
and
shlb
enter
xor
stos
lds
in
data16
fwait
adc
mov
test
xchg
push
mov
lret
in
iret
outsb
dec
imul
inc
push
arpl
push
mov
mov
cli
add
jecxz
push
shl
shrb
mov
ss
cmp
xchg
cs
push
or
decb
cmp
dec
test
cld
sbb
aas
mov
je
cmp
lods
leave
add
bound
mov
mov
ffree
lahf
xor
mov
push
cli
out
dec
scas
push
jge
push
adc
lods
mulb
sbb
stc
popa
mov
push
ja
push
hlt
out
or
out
sbb
aas
out
repz
inc
dec
mov
mov
mov
scas
imul
xchg
scas
dec
sbbb
daa
cmp
sub
and
inc
xchg
and
ja
aaa
out
add
add
div
push
pop
dec
mov
subl
jo
fdivrs
mov
fdivrs
sub
ficompl
inc
dec
adc
cmp
loop
inc
mov
movsb
iret
mov
ds
pop
andl
sub
inc
leave
sbb
jbe
shlb
stc
adc
loope
adc
lock
inc
sub
pop
xchg
stc
int
bound
sbb
dec
aas
mov
and
test
popl
cmp
sub
push
loope
testl
mov
push
das
push
mov
sarl
push
test
sub
out
mov
sahf
std
bound
sbb
or
adc
inc
pop
sub
cmp
inc
add
movsl
int
popf
inc
push
lahf
popa
xchg
addr16
insb
sti
out
cmc
call
inc
push
lods
addr16
mov
xlat
fisubs
jl
sub
stos
iret
or
das
pop
mov
sbb
push
insl
jge
dec
popf
jnp
cmp
clc
jp
test
jl
jg
cmp
icebp
lcall
sbb
es
add
pop
lret
mov
push
mov
mov
shrb
sbb
mov
sbb
pop
adcl
adcb
dec
mov
mov
lahf
sub
mov
pop
movsb
sbb
xchg
push
inc
push
aam
push
cmp
lds
mov
cmp
mov
push
test
pop
test
lock
jp
insb
or
lret
lret
insl
mov
sub
mov
dec
popf
cs
in
push
popf
mov
inc
js
mov
adc
sub
fimull
lret
jg
dec
push
addr16
std
lock
jnp
adc
mov
out
popa
inc
mov
cli
jg
scas
fnstcw
ret
test
leave
xlat
push
fistps
fnstsw
pop
jns
lods
fistpll
loope
out
int
adc
ret
imul
mov
gs
int3
jmp
mov
in
dec
pop
mov
fdivs
adcl
mov
push
and
pop
out
gs
adc
cmp
sbb
loop
pop
stc
gs
sbb
mov
leave
pop
xorl
mov
jge
jmp
rclb
pushf
mov
xchg
arpl
jmp
sbb
icebp
lret
bound
pop
fcomp
lcall
mov
dec
adc
xlat
adc
incl
jle
arpl
outsl
sub
sbb
mov
mov
popa
ljmp
arpl
pop
push
aas
ret
mov
data16
pop
cld
sub
and
cmp
sub
and
je
fstpl
sbb
movsb
sub
dec
push
add
outsb
leave
jge
adc
xchg
fcmovb
and
in
xchg
pop
pop
xlat
out
jbe
jae
and
jne
mov
imul
sarb
notb
clc
ljmp
xchg
lock
push
pop
popa
xlat
movsb
dec
add
int3
pop
xchg
lret
lret
cmp
lods
mov
test
push
inc
rolb
int
jo
xchg
into
adcl
js
lret
jns
dec
pop
jmp
test
lcall
xchg
int
jne
pop
mov
loop
movsl
mov
dec
push
sbb
gs
sbb
cli
jge
cmc
mov
mov
xor
mov
inc
pushf
dec
out
dec
iret
rcrl
std
icebp
stos
dec
ret
mov
or
loopne
cmp
sahf
ljmp
aaa
mov
fistpll
cld
push
mov
jl
jle
imul
add
sbb
pop
imull
addb
cmp
pop
sarl
and
sbb
ss
or
and
mov
dec
lret
sub
cmp
sbb
sbb
jg
daa
not
xor
cmc
xchg
mov
mov
scas
es
or
cmp
sub
fildll
lahf
pop
sub
xchg
add
jp
subl
xchg
je
mov
lods
push
iret
push
pop
mull
mov
aad
mov
test
fstps
inc
stos
push
lahf
xor
xchg
insl
or
pop
outsl
add
add
lcall
icebp
push
sbb
push
sarb
inc
loop
mov
test
mov
inc
call
or
mov
push
xchg
push
rclb
push
aaa
dec
jg
shrl
sub
insl
pop
push
aas
sbb
scas
movsb
bound
cltd
pop
outsb
xchg
popf
sub
pop
or
inc
push
popa
ss
iret
lods
rorl
ss
imul
stos
sbb
je
cltd
jb
lea
daa
pop
jl
fwait
dec
and
out
cmc
rcll
lock
mov
inc
jmp
sbb
xchg
add
adc
das
aaa
push
ja
or
ja
das
mulb
fdivrs
push
push
jno
popl
mov
and
pop
lea
mov
call
enter
cwtl
or
push
inc
mov
mov
cmp
dec
js
aaa
ss
into
xchg
int3
dec
or
shrl
imul
mov
cmp
or
add
jno
pop
mov
cmp
fsubrs
mov
push
push
cli
add
sub
enter
xor
pop
xchg
repz
sbb
push
lcall
out
js
popf
mov
shll
mov
pop
dec
addr16
add
push
mov
mov
icebp
push
xor
mov
push
addr16
or
dec
lock
arpl
push
adc
add
mov
adc
cld
sbb
iret
rorl
shrl
xchg
mov
sbb
test
mov
pop
icebp
sub
lea
sahf
dec
pusha
push
dec
pop
push
adc
movsl
xlat
pop
insl
jmp
hlt
jge
ss
adc
sub
int
mov
psllw
jp
test
inc
dec
sub
dec
je
inc
aas
xchg
sub
jo
mov
jnp
test
insl
jmp
popf
sti
xchg
and
xchg
repz
pushf
xor
fs
pusha
xor
mov
cmp
cmp
xor
sbb
xor
sbb
lods
nop
setge
xor
adc
and
stos
mov
adc
mov
ja
add
faddl
in
orb
sub
and
stc
lret
mov
shl
std
push
filds
sbb
cmp
add
sbb
mov
mov
sub
dec
pop
push
fmul
jne
dec
test
and
test
cwtl
insl
out
ret
mov
lcall
xchg
fs
mov
add
testl
shll
scas
xchg
sub
les
mov
or
pushf
dec
cmp
sarb
pop
or
lret
cmpsl
mov
jns
push
pop
das
leave
movsl
mov
dec
xchg
jae
pop
mov
jecxz
add
mov
sbb
dec
sub
cmp
jg
dec
dec
rclb
pmulhw
push
fwait
gs
fisubrs
dec
xchg
inc
movsb
cmp
lods
hlt
cld
cmc
in
aas
fisubrl
fdivs
or
cmp
push
ss
mov
leave
xchg
xchg
rcrl
aas
enter
mov
adc
mov
or
push
push
cli
cmpsl
stos
in
sub
sbb
stos
aas
adc
jg
mov
ret
pop
mov
xchg
dec
mov
loop
mov
pop
xchg
jge
out
int
sub
js
out
out
cltd
pop
out
or
popl
or
mov
in
pop
pop
cld
xchg
aas
xor
fisubs
outsl
mov
xor
sarb
or
push
ljmp
insl
cli
lret
cmp
push
xchg
push
pop
movsb
cld
pop
pop
jnp
shrl
stos
fst
in
cmc
xchg
inc
push
pop
test
ret
push
lds
jnp
cwtl
popa
mov
lods
inc
inc
jns
dec
data16
mov
mov
int3
push
jmp
or
fstps
xchg
fldl
rorl
stc
idivb
test
mov
xor
in
add
popa
jb
jns
rep
dec
pop
adc
inc
xorl
fs
insl
les
inc
pop
out
cs
adc
sahf
ljmp
add
iret
fidivl
and
cmp
xchg
leave
shll
sar
sar
movsl
cmp
xchg
sbb
push
jns
mov
pushf
ret
mov
mov
ficomps
in
jno
jne
mov
out
jno
aas
fcomps
aaa
ret
fistpll
aad
hlt
xchg
jbe
js
push
int
fwait
dec
xor
repnz
pop
and
mov
loopne
adc
mov
rcr
arpl
or
xor
push
je
fsub
stc
mov
xchg
pop
nop
addl
xchg
gs
cmp
mov
clc
call
jg
fcmovu
xorl
scas
imul
jp
shl
add
cltd
jns
cmp
inc
jmp
mov
add
lods
mov
add
pushf
jnp
push
add
pop
mov
es
push
mov
sti
jns
push
push
jp
loope
shll
enter
inc
inc
inc
jl
jg
test
loop
pop
rcrl
mov
cmp
lcall
jns
popa
daa
rorb
out
out
mov
fisubrs
dec
lahf
cmp
jno
clc
aam
clc
jne
inc
mov
jg
fistl
popa
mov
jae
sub
pop
xor
cwtl
mov
inc
push
jg,pt
push
push
mov
rol
mov
lods
stos
repz
inc
mov
xor
mov
pop
enter
push
mov
fistpl
pop
imul
adc
mov
xor
mov
fnsave
pop
scas
push
rcrb
fiadds
push
pop
jbe
adc
call
arpl
mov
add
hlt
sub
insl
pop
in
cwtl
or
adc
aaa
adc
ds
or
dec
in
hlt
sbb
inc
cmp
sbb
sti
adc
inc
lea
inc
mov
lds
inc
mov
test
les
stc
lds
loop
fsubr
push
sti
out
addb
aas
xor
push
out
xchg
cli
into
es
shll
lea
push
cmp
xor
movsb
shr
incl
and
inc
mov
xlat
es
or
ja
out
daa
xchg
mov
fdivp
adc
mov
stos
fistpll
mov
and
cmpsb
cltd
add
cmpsb
mov
jge
lahf
jl
lret
daa
sub
pop
orb
and
push
loope
shl
pop
hlt
dec
nop
push
divb
pop
jae
or
fs
bound
push
mov
adc
ret
adc
addb
mov
fwait
add
jle
mov
fistpl
fucompp
loop
inc
scas
in
adc
hlt
test
andb
mov
xchg
rcr
rclb
mov
packsswb
xor
adc
stos
loop
clc
or
movsb
jl
xor
pop
push
nop
out
xor
xchg
out
insl
imull
push
dec
leave
or
sar
adc
pop
sahf
test
das
or
rorb
mov
cmp
daa
popf
xchg
jge
insb
shlb
jnp
mov
dec
cmpsl
dec
add
idivb
test
sub
jmp
aas
add
cmp
or
es
jl
adc
jp
icebp
or
mov
cltd
pop
or
dec
outsb
mov
mov
es
and
adc
pop
das
mov
pushf
arpl
xor
mov
jmp
xor
out
push
je
jb
inc
imul
jge
fwait
and
push
scas
js
jnp
or
sub
or
sub
dec
fldl
push
push
jge
fdivrl
mulb
pop
xlat
xor
jge
xor
iret
pop
popa
pop
sub
inc
pop
cmp
scas
sbb
adc
xchg
das
mov
inc
lds
adc
push
call
jb
push
sub
repnz
or
xchg
mov
pop
xor
xchg
outsl
push
lahf
mov
jge
push
or
inc
popa
jnp
sbb
es
add
add
add
adc
in
les
jae
cli
je
imul
add
cwtl
pop
adc
ja
aam
outsb
xor
pop
test
jns
lea
imul
arpl
mov
fimuls
sub
sbb
push
pop
push
jno
jmp
dec
fs
cvttps2pi
lret
out
adc
into
pop
mov
int3
xor
sbb
sbb
mov
mov
add
mov
ret
loopne
lds
mov
sub
mov
jp
call
cltd
xchg
aam
lcall
in
xchg
mov
jns
or
mov
les
inc
sub
mov
icebp
xchg
pop
xor
rorl
ret
fidivl
inc
sub
iret
or
inc
jbe
hlt
mov
out
popa
pushf
push
mov
mov
es
mov
rclb
jmp
repz
test
arpl
pushf
cmp
shr
sarb
push
xchg
jbe
aaa
xlat
add
or
fsubr
or
stc
in
hlt
cwtl
jp
cs
inc
adcl
dec
pusha
xchg
and
popf
testl
stos
mov
push
push
rcrl
mov
addl
test
mov
xlat
jge
sbb
sbb
push
addr16
sbb
cmp
push
ret
cwtl
icebp
cmp
mov
test
mov
fmuls
push
test
or
jmp
and
rcr
push
push
je
jl
iret
loop
repnz
enter
xchg
xor
or
dec
xchg
mov
push
test
ret
push
mov
or
xchg
fidivrl
lret
xchg
repz
stos
cmp
imul
cld
leave
aaa
adc
push
in
sbb
xchg
jnp
sti
ret
jp
mov
icebp
push
loopne
out
mov
les
xchg
dec
mov
sarl
mov
push
mov
aas
int3
mov
jg
push
insl
mov
or
lcall
dec
inc
xchg
std
pop
push
push
sahf
sub
adc
movsl
pop
test
mov
jecxz
cmp
cmp
pusha
aad
push
cmc
jne
sub
mov
notb
es
xlat
aam
or
ret
jp
push
mov
fnstenv
xor
cmp
xchg
xchg
or
iret
jno
insb
cmp
jge
sbb
test
out
adcb
push
mov
lcall
scas
mov
js
mov
repz
sub
inc
sub
lret
sub
dec
push
ret
xor
or
pop
gs
fidivrs
ja
std
lcall
stos
pop
jb
mov
int3
es
push
jno
mov
mov
jge
pop
mov
mov
andps
inc
pusha
mov
jns
aam
xor
xchg
push
mov
out
and
xor
scas
call
push
cltd
scas
cwtl
in
or
xchg
cs
aaa
xchg
rol
ficoml
or
shl
scas
mov
es
jbe
divl
mull
cmc
push
sbb
xchg
bound
add
jnp
popa
xor
mov
xchg
popfw
adc
sub
fadd
lret
fsubr
inc
jno
daa
rol
push
cli
add
js
ljmp
cmp
mov
clc
jne
jno
es
and
cmp
mov
or
jbe
int
jmp
andb
xchg
shrl
push
inc
pusha
xchg
lds
dec
mov
es
add
incl
mov
push
dec
add
jmp
int3
and
push
in
cld
mov
sarl
xchg
lods
xor
daa
dec
inc
xchg
xchg
sbb
cs
lods
sarl
out
movsb
subl
cmpsl
ficompl
inc
stc
dec
pop
or
aam
xchg
imul
in
or
into
jno
fisubs
scas
aad
jo
dec
in
push
jae
sbb
sbb
arpl
ficomps
mov
outsl
pop
jbe
push
loopne
push
mov
aas
sub
xchg
xchg
push
inc
out
cmp
shll
sub
popa
cmp
jmp
pop
nop
or
outsl
dec
in
xor
imul
jnp
fwait
enter
loope
mov
insl
adc
out
sarb
inc
mov
xchg
mov
rcl
movsl
sub
mov
and
add
scas
or
add
insb
outsb
push
leave
test
aam
jecxz
int3
decb
aam
or
fists
inc
test
xchg
inc
inc
jns
movsl
mov
out
ds
push
mov
out
jg
and
bound
scas
fstpl
add
push
xchg
out
cmp
fdivrs
push
btr
cmc
jo
cmp
arpl
xchg
repz
test
and
stc
popa
or
xchg
enter
jnp
inc
push
and
or
pop
mov
or
mov
xchg
out
imul
rcrl
mov
xchg
xor
jo
lds
xlat
dec
aas
pusha
outsl
jp
daa
repnz
mov
test
xchg
mov
arpl
shll
inc
dec
into
sub
jecxz
pop
sub
mov
jmp
hlt
arpl
jb
out
mov
mov
mov
aas
aad
mov
sub
xchg
xor
mov
xchg
iret
adc
add
push
test
sbb
flds
test
add
jo
test
int
mov
iret
ret
sbb
mov
sbb
imul
dec
out
xchg
push
stos
arpl
or
sbb
data16
dec
out
decb
leave
xchg
inc
add
stos
popa
sub
xor
mov
popa
mov
cs
scas
adc
cltd
mov
pop
pop
and
cld
add
or
or
or
xor
xor
xor
in
arpl
shr
push
push
ret
inc
jbe
jp
adcb
ljmp
lret
cwtl
in
sbb
scas
xchg
and
xchg
mov
negb
ljmp
daa
pusha
jne
js
daa
dec
ss
scas
and
fsubl
push
pop
aam
or
cltd
lcall
push
inc
dec
or
push
not
and
dec
xor
and
cmp
insl
adc
add
and
jl
adc
shll
in
out
mov
lahf
ret
fisttps
add
xor
pop
or
clc
or
es
add
cmp
push
insl
repnz
inc
mov
cs
lds
sti
dec
xor
mov
sub
adc
xor
mov
data16
cmp
pop
fs
xchg
sbb
xor
fildll
or
mov
mov
leave
out
icebp
push
jmp
or
inc
in
int
and
lret
fsubrs
lock
mov
leave
mov
notl
xchg
jmp
sbbb
in
push
mov
cld
incb
into
push
orb
fidivrl
lds
pop
mov
xchg
and
sub
ret
mov
jge
nop
mov
push
mov
adc
inc
inc
repnz
bound
or
xlat
cld
stos
mov
cs
adc
popf
pop
xor
inc
cmc
lock
mov
sub
lret
mov
sub
push
sbb
movsl
inc
and
movsl
sub
xchg
jecxz
call
lahf
or
dec
jge
fisttps
fiadds
out
or
jl
lock
add
cmc
bound
add
cs
stos
mov
cmp
pop
cmp
lds
mov
cmc
and
insl
sub
hlt
mov
jae
sub
xchg
xchg
fadd
xlat
and
icebp
sar
je
subl
add
mov
mov
test
das
mov
imul
inc
repz
scas
adc
push
lahf
out
cmpsl
push
icebp
out
fwait
and
inc
push
add
aad
pop
clc
inc
cmp
add
into
or
and
gs
lea
dec
pop
jl
ljmp
shrl
cwtl
cmpsl
push
mov
inc
lahf
add
pop
and
mov
xchg
sbb
xchg
dec
nop
scas
inc
cmp
xchg
mov
cmp
jae
imul
jb
inc
and
aas
enter
add
out
test
xor
lods
stos
test
jle
in
popf
jo
pop
mov
cmp
mov
jno
sub
adc
movsl
jl
test
inc
popa
mov
sub
fcmovbe
mov
pusha
push
fcomip
dec
cli
scas
or
xor
into
insl
inc
push
mov
arpl
icebp
mov
out
jnp
pop
and
vpminub
cli
data16
mov
push
cmp
dec
js
sbb
jecxz
rcrb
and
stos
mov
jb
cmp
mov
cmp
into
or
testl
jp
mov
sbb
push
dec
rcr
lret
aam
lret
cwtl
cli
push
inc
test
sbb
nop
mov
mov
sti
mov
xchg
inc
or
adc
imul
pop
out
ret
dec
mov
jo
cmpsl
cmpsb
aas
adc
fnstcw
mov
and
ret
push
aaa
int3
add
sbb
inc
sbb
mov
mov
icebp
xor
fldt
xchg
pop
les
outsl
dec
out
jle
push
and
pop
fildl
loop
je
in
ret
test
into
ret
cmp
movl
mov
sti
out
popf
mov
ja
or
mov
jnp
in
in
push
lret
aaa
inc
jne
ds
xor
mov
hlt
inc
sub
and
and
addr16
out
jge
xlat
sti
and
pop
push
mov
aam
xchg
jmp
bound
rclb
sahf
mov
stc
xor
enter
out
shr
daa
mov
sahf
pop
popa
mov
sbb
cltd
push
insl
pop
inc
push
subb
les
dec
push
daa
mov
fnstenv
or
mov
cmpsl
movsb
push
test
xor
cmp
popf
jge
rcll
push
call
sub
mov
mov
repnz
sbb
out
decb
pop
xlat
mov
xchg
dec
or
mov
out
mov
pop
and
ret
pushl
mov
mov
cmpsb
lods
ljmp
fcomip
pop
cmc
xchg
bound
add
adc
mov
ret
jle
fldcw
dec
push
icebp
xchg
jo
sub
jecxz
fnstsw
cwtl
and
or
add
jae
int3
stos
jmp
daa
mov
clc
scas
clc
div
pop
popf
sub
mov
mov
outsl
stos
mov
sub
shrb
subb
mov
xchg
push
xchg
xchg
das
pop
pop
notl
repnz
xchg
lds
scas
or
outsl
cld
jns
and
out
sub
inc
mov
mov
dec
into
imul
test
mov
mov
sub
scas
test
push
fdivrs
or
out
shll
call
in
movsl
cld
loope
ss
and
xor
in
pop
lds
or
out
adc
adc
xor
lahf
sub
mov
repnz
bound
adc
iret
leave
es
repnz
pop
mov
pushf
lahf
sub
inc
jb
or
pop
mov
stos
scas
icebp
lcall
addb
pusha
push
lods
xchg
mov
jo
sti
mov
ficomps
imull
jmp
ljmp
bound
test
icebp
pop
fwait
test
out
cmp
mov
add
jns
mov
and
mov
arpl
addb
dec
sub
stos
lahf
test
and
and
shrl
lods
cmpsb
js
repz
push
ds
sti
add
push
movsl
adc
sbb
add
bnd
out
imul
stc
in
cmpsl
push
into
mov
icebp
popf
cltd
sbb
lahf
test
faddp
loope,pt
decb
cmp
hlt
pop
outsb
mov
mov
jnp
roll
jns
and
in
jne
mov
movsl
dec
xor
xchg
lds
sbb
fcmovb
mov
pop
jb
test
sti
pop
mov
jmp
and
mov
or
cs
out
fsubrl
movq
out
add
cmp
add
pusha
decl
add
xchg
sbb
push
rolb
push
xor
clc
enter
in
xor
jle
sbb
inc
adc
les
pop
sub
push
mull
mov
adc
data16
pusha
adc
inc
popf
shlb
mov
stos
popa
cwtl
int3
mov
movsb
or
dec
les
jne
mov
mov
mov
mov
call
mov
pop
pop
mov
int3
in
sbb
jge
into
jns
add
lods
sub
push
leave
jmp
add
aaa
std
icebp
add
or
dec
sbb
pop
aam
sbb
mov
push
popf
jg
dec
jp
xchg
push
sbb
fnop
inc
jl
sbb
add
gs
dec
dec
outsl
sbb
xchg
loopne
leave
scas
push
outsb
mov
jle
jae
repz
lcall
xchg
or
pop
sub
lock
xorl
inc
adc
sarl
int3
pop
pushf
aad
pop
pop
adc
loope
ja
pop
pop
dec
and
and
add
sbb
popa
sub
ret
inc
pop
adc
cmpsl
pop
sbb
bnd
and
popa
dec
mov
insb
std
out
loope
or
pop
sahf
mov
mov
pop
ss
loop
xchg
xor
in
outsl
shrl
div
or
xor
lcall
mov
lahf
add
test
add
sub
and
lock
mov
stc
mov
add
mov
aaa
pop
ljmp
mov
cmp
mov
lods
push
dec
jmp
xchg
out
push
lret
idiv
mov
mov
mov
mov
xchg
adc
jns
sbb
mov
pop
sbb
xchg
mov
pop
sbb
push
in
inc
jbe
sub
or
dec
les
rorb
hlt
sub
aaa
mov
data16
mov
pushf
or
xor
mov
imul
in
jb
aaa
xor
fistl
stos
xchg
push
inc
and
pop
int
xor
push
js
std
mov
pop
cli
push
pop
or
adc
fsubr
movsl
lea
outsb
rol
repnz
int3
jno
dec
jge
xchg
or
ljmp
add
rcr
mov
xchg
test
mov
out
mov
stc
xor
push
repz
xor
movsb
out
enter
add
popf
iret
jb
mov
inc
inc
insb
pusha
stos
mov
cmpsb
xchg
lahf
cmp
ja
xchg
xchg
xchg
test
push
clc
sbb
xchg
pop
aam
mov
outsb
sub
sub
shrb
dec
xor
mov
mov
loope
mov
cs
xchg
movsb
lock
xor
inc
cltd
inc
pop
insb
into
jo
push
in
loopne
lods
mov
adc
rol
inc
jl
sub
cmpsb
cmp
push
adc
in
add
cmp
loopnew
shlb
mov
push
push
movl
and
mov
std
sub
sub
sub
cmp
fucomi
int
pop
popl
xchg
jg
cmp
daa
jl
imul
insb
or
ds
cs
mov
int3
movsb
push
and
iret
jge
xor
dec
outsb
js
push
cli
xchg
cmpsl
stos
pushf
mov
xchg
dec
ret
sbb
cwtl
lods
in
ds
ja
scas
mov
mov
cmp
fadd
and
sub
mov
aas
mov
push
cwtl
sub
jae
ss
jg
jge
pop
in
inc
aaa
enter
mov
cltd
adc
ds
sbb
xor
lahf
push
mov
lock
iret
push
mov
insb
popa
in
jo
inc
jge
push
xchg
into
movsb
arpl
int
sarb
pushf
dec
jo
inc
or
sbb
mov
jmp
sub
rcll
add
xor
outsl
lds
lods
je
hlt
rcll
rolb
out
sub
sbb
les
out
sahf
insb
push
adc
stc
xchg
push
adc
xchg
or
lea
into
cmpsb
loop
loopne
sbb
sahf
and
xlat
loope
jo
pop
sbb
push
fxch
cmpsl
ljmp
jp
adc
dec
dec
jmp
fs
imul
jae
aaa
inc
in
out
pusha
cltd
cmpsb
mov
inc
jne
mov
test
mov
add
mov
or
std
out
jmp
mov
sbb
pop
mov
in
lret
loop
pop
inc
pop
int3
movsb
pop
xchg
pop
fwait
push
jbe
cs
adc
or
mulb
nop
jns
add
bnd
cmp
sub
sbbb
push
push
stc
mov
xor
mov
add
imul
fs
es
mov
dec
aad
xor
adc
jne,pt
pop
out
jg
test
mov
pop
in
ret
fiaddl
pop
mov
ret
dec
in
rol
xchg
cltd
test
jp
in
psraw
dec
sub
je
cs
jmp
arpl
lods
inc
inc
mov
std
cmp
hlt
mov
jge
mov
push
sbb
jp
mov
hlt
sbb
push
sbb
and
das
pop
addr16
out
popa
mov
sbb
int3
fsubrl
fmuls
inc
xorl
shrl
sti
loopne
lods
push
adc
pop
pop
fdivs
pop
fmull
rorb
and
mov
sahf
pop
cmp
dec
inc
cwtl
push
scas
test
mov
cmpsb
adc
mov
pop
outsb
test
push
ds
imul
cmpsb
dec
push
pop
xlat
and
push
mov
fucom
out
mov
xor
and
xchg
mov
pusha
adc
xor
mov
or
push
sti
dec
inc
inc
mov
mov
cmc
aam
bound
jbe
das
cmp
mov
jno
or
add
inc
cltd
roll
inc
movsb
cmpsl
jne
stc
mov
es
xor
into
loopne
adc
out
xor
lea
dec
dec
stc
add
orb
inc
or
adc
mov
and
jl
in
push
adc
lds
daa
fimull
or
jle
add
out
test
scas
rcr
insl
cs
fidivs
pop
inc
jae
mov
mov
stc
push
adc
pop
mov
xor
mov
or
ss
mov
daa
test
repnz
rorl
cmp
cld
je
clc
test
stc
pop
push
aad
inc
mov
xchg
sti
xchg
arpl
in
ja
lods
cmpsl
pushf
pop
stos
cli
rclb
jne
pop
jo
fisttps
jbe
out
lret
xchg
inc
push
repnz
mov
pop
bound
mov
pop
xor
not
pushf
cli
arpl
mov
xchg
mov
dec
fsubs
fsubrl
xor
and
cmpsl
aas
inc
popa
sti
gs
fs
int
popa
in
shlb
dec
mov
lods
push
jmp
mov
adc
inc
ret
cld
mov
inc
mov
mov
enter
pop
aaa
add
cwtl
andb
popl
int
mov
sub
or
cmc
or
xchg
xchg
xor
or
lret
cmp
mov
sub
cli
mov
pop
bsf
inc
cmp
cmp
sub
xor
dec
jp
inc
mov
lcall
inc
mov
dec
dec
pop
mov
add
test
ret
xor
inc
push
add
pop
dec
movsb
dec
test
add
mov
popf
fwait
push
push
or
cs
ja
add
iret
cmp
xor
push
jge
lods
jns
jle
aas
insl
mov
xor
push
repnz
fnsave
jge
mov
adc
enter
push
sti
jp
lds
xor
and
ja
jg
std
cmc
add
mov
scas
and
sbb
test
jmp
nop
add
movsb
xlat
add
mov
inc
and
mov
das
scas
dec
mov
inc
inc
xchg
iret
adc
push
lea
dec
push
push
mov
mov
pop
aad
or
sbb
aas
cmp
jb
lcall
movsb
lods
mov
sub
clc
mov
mov
mov
fstpt
sub
dec
xlat
stos
test
movsl
push
mov
cmp
dec
and
or
cmp
lret
int
or
jo
sub
sub
lods
fbstp
inc
bound
jae
jge
shr
jmp
xor
jns
lock
add
cmp
fisttpl
or
jae
sarb
sbb
sbbl
or
xchg
push
dec
shlb
outsb
dec
into
test
or
jae
dec
xchg
pop
mov
gs
addr16
inc
push
mov
cmp
fldl2t
sahf
pop
mov
xor
leave
stos
mov
out
mov
notb
mov
mov
aad
inc
inc
jmp
aaa
push
popa
mov
add
push
fcoms
addl
daa
xor
xchg
fisubs
jg
inc
adcb
xchg
or
das
mov
mov
aam
mov
loop
mov
jbe
pop
mov
lods
syscall
out
cmp
add
cli
cs
mov
stc
stos
sub
dec
mov
mov
inc
jno
data16
jg
and
jecxz
scas
std
mov
loopne
fsubrl
mov
push
xchg
and
cmp
dec
jge
stos
fadds
loop
jmp
subb
test
sub
mov
jl
stos
add
imulb
cmp
repz
dec
outsl
jge
add
dec
popf
xchg
in
mov
lds
jp
addb
aad
bound
lods
rcrl
cmovs
mov
mov
repz
jb
fisubrl
push
inc
lahf
inc
movsb
mov
loop
sbb
cmpsb
pop
les
cmp
test
xor
imull
imul
stos
jae
pop
add
divl
push
adc
xlat
and
xor
inc
mov
loopne
fisubl
jg
pop
out
xchg
add
movl
mov
add
jb
adcb
sub
push
outsl
lahf
mov
shl
pushw
and
adc
pop
pusha
data16
loope
out
cmpsb
lea
sbb
data16
push
push
rolb
cmp
int
jg
hlt
xchg
test
xchg
push
pushf
adc
mov
jnp
push
or
push
cmp
jg
add
jle,pn
xchg
inc
out
je
pop
mov
out
fwait
leave
pushf
push
add
adc
jae
pop
or
mov
sub
push
mov
adc
idiv
imul
bswap
cli
ss
leave
movsb
scas
adc
or
pavgb
inc
and
cmp
mov
lret
cmpsb
int3
pop
lretw
icebp
and
pop
shl
jge
jl
inc
imul
adc
ljmp
mov
mov
add
mov
xor
sbb
insl
icebp
cli
insl
mov
adc
clc
ds
mov
shll
xor
mov
jp
jb
mov
mov
aad
xor
in
aas
cltd
xchg
dec
jge
push
jg
mov
lret
mov
cmp
aad
cmp
cmp
lahf
loopne
movsl
mov
dec
test
test
mov
mov
es
ja
shlb
mov
sbb
in
addr16
xor
xor
hlt
sarb
mov
mov
jo
dec
push
fisttpll
add
fstp
mov
dec
hlt
dec
pop
aaa
call
sub
pop
out
xor
push
test
fisttps
and
popa
sahf
roll
bound
popf
aam
mov
shrb
cmp
enter
insb
push
inc
rcll
sbb
xlat
xlat
mov
jecxz
inc
jl
add
cmp
cmp
test
mov
shlb
pop
leave
std
sbb
or
sbb
push
dec
jo
shld
xchg
in
loop
fsubrl
shlb
mov
js
cld
stos
into
pop
jo
push
jnp
int3
sub
out
mov
adc
sub
imul
jo
or
mov
adc
aam
sbb
push
sar
aam
fisubrl
ret
aaa
adc
cmp
sbb
mov
or
aas
pop
popf
shlb
into
mov
mov
or
jge
adc
call
jne
ret
xchg
mov
fldz
mov
push
test
sbb
leave
cmp
jbe
shll
push
or
jne
test
add
lea
jecxz,pn
xchg
cmp
push
ret
orb
mov
in
imul
xlat
adc
inc
jge
add
enter
mov
mov
sub
cs
adc
lods
push
int
mov
mov
ds
je
sub
sub
jecxz
cld
xor
nop
sub
lds
pushf
xchg
jg
leave
inc
dec
out
mov
jecxz
scas
sub
bound
repnz
sbb
movsb
dec
fimuls
adc
xor
imul
fsts
cli
and
leave
sbb
shr
cmp
dec
lret
dec
clc
popa
ds
dec
clc
mov
jl
adc
nop
test
test
call
mov
pushf
mov
clc
adc
jo
dec
cmpsb
aaa
leave
std
xor
addr16
ss
xchg
nop
lods
out
imul
fs
out
mov
stos
sub
mov
dec
jbe
jns
rcrl
nop
mov
das
push
xchg
andl
lods
and
xchg
and
jne
or
and
jl
push
jmp
cli
inc
mov
jo
sbb
insl
imul
add
push
sub
add
mov
adc
adc
sahf
cld
mov
je
fnsave
and
mov
pop
lret
dec
push
imul
lcall
imul
jmp
pop
inc
das
clc
mov
xor
push
fdivrl
sbb
in
mov
loope
inc
imul
push
sub
mov
and
jg
mov
mov
or
lret
orl
ds
sbb
outsb
cwtl
cmp
mov
ficomps
lret
and
jmp
imul
cmp
add
cld
pop
in
popa
ret
icebp
push
rcl
pushf
inc
push
sbb
push
dec
mov
daa
or
jnp
and
jae
push
sar
fdivl
mov
les
xor
cmpsb
outsb
jns
inc
jne
loopne
into
fdivs
fdivrl
adc
adc
sti
xchg
add
xor
out
stc
push
dec
add
insb
add
cmp
push
shr
cli
addr16
inc
inc
fldenv
pop
xorb
pop
or
rorb
jne
adc
ret
loop
xchg
icebp
adc
mov
lret
jg
mov
pop
xor
fs
call
xchg
lcall
mov
rcr
jne
cs
sub
cmpsl
mov
fdivl
fiaddl
fidivrs
mov
push
test
push
bound
pop
dec
mov
cltd
lods
aam
and
imul
xchg
pop
adc
les
inc
adc
cltd
dec
jmp
mov
addb
int
mov
inc
and
cmpsl
sarl
xchg
pop
aaa
loopne
sahf
mov
ds
cmc
add
idiv
pop
fidivrs
dec
jg
cld
pusha
call
in
repz
cmp
mov
lods
xlat
in
in
ja
cltd
pop
sarb
into
lods
adc
adc
push
test
subl
add
push
int
in
pop
sbb
mov
lret
xchg
mov
adcl
sbb
nop
jg
cltd
cli
or
repnz
cltd
xor
lret
mov
repz
fs
loopne
mov
adcl
xlat
push
inc
pushf
loopne
cld
push
xchg
mov
lock
pop
loop
jb
in
sub
sbb
push
arpl
test
fistl
fldl
shlb
pop
leave
xchg
pop
shlb
into
sub
lock
xchg
pusha
lock
test
into
or
mov
cmp
mov
push
aas
rcrl
lea
jp
push
frstor
sbb
arpl
gs
mov
nop
push
test
shlb
sbb
add
loopne
push
gs
cmp
orb
lds
sbb
sbb
pop
bnd
ljmp
adc
jne
insb
out
cs
shrl
mov
in
mov
rolb
lods
stos
sbb
mov
negb
test
jo
mov
inc
pop
jge
mov
xchg
dec
fs
fstps
lcall
imul
stos
jno
lret
paddb
jnp
cmp
gs
test
or
mov
jne
and
inc
adc
ja
clc
sbb
in
je
orb
fdivrp
fidivl
arpl
nop
stos
nop
sarl
shll
and
fwait
js
dec
jmp
inc
xor
gs
js
pop
das
adc
dec
addr16
cmc
mov
add
mov
add
subl
mov
fidivs
pop
mov
gs
mov
std
aaa
xor
sub
in
lods
jae
pop
in
scas
ja
notl
cmp
repz
cld
mov
and
lods
call
mov
mov
mov
mov
lahf
sarl
adc
push
xchg
int
mov
jo
iret
xchg
push
pop
cmpsb
add
cli
sub
xchg
pop
mov
cmc
cli
pusha
ja
cli
scas
fcomps
pushf
xchg
xor
mov
ljmp
mov
in
lods
lahf
or
sbb
push
jmp
or
and
nop
addr16
adc
pop
cmp
xor
inc
out
repnz
mov
jae
xchg
or
ss
sub
test
xchg
inc
inc
cwtl
fidivs
jb
inc
daa
dec
push
adc
movsb
out
mov
jnp
pop
je
sub
pop
cli
mov
in
ret
fistpl
sub
inc
in
outsl
pusha
dec
in
mov
or
mov
mov
mov
pop
pop
into
jb
push
sbb
cmp
push
ret
cmpsl
iret
dec
jae
or
xor
pop
negb
pop
movsl
mov
std
push
mov
jb
inc
inc
mov
aas
gs
pslld
in
cwtl
shll
push
int3
mov
cmp
shll
movsl
xchg
xor
mov
sbb
je
dec
cmpsb
push
adc
insl
and
xor
xchg
push
ja
movsl
dec
or
imul
jmp
add
ret
jb
push
mov
cs
stos
mov
xor
xchg
push
dec
addb
cwtl
repnz
mov
std
sbb
psrlw
in
push
add
mov
mov
xor
jae
push
int
mov
idivl
int
xchg
dec
push
sahf
pop
pop
or
scas
iret
lret
cld
push
js
mov
adc
daa
popa
sarl
and
dec
dec
mov
cmp
mov
jnp
movsl
in
fmuls
add
push
lods
in
movsb
mov
scas
clc
sahf
dec
sahf
jno
jnp
push
xchg
jae
jbe
mov
cmpsl
mov
mov
stc
movsb
jbe
jecxz
rdmsr
xchg
shl
std
and
pop
sbb
mov
mov
jp
cmpsb
cmp
bswap
and
mov
pinsrw
push
sbb
push
lahf
lret
sub
popf
xorl
cmp
jns
inc
jno
mov
lds
cmc
and
sbb
ss
dec
push
std
pop
sbb
mov
push
sub
xchg
rclb
xchg
mov
test
outsb
xor
repz
xchg
je
push
push
add
jg
movsb
stos
xlat
xchg
xchg
mov
jmp
xor
mov
iret
ss
pop
mov
loope
push
mov
das
loope
ja
sti
ljmp
jmp
aaa
xchg
hlt
fwait
push
pushf
subl
xchg
dec
lds
shlb
ret
mov
push
and
mov
clflush
dec
and
adc
icebp
cs
in
cmp
out
push
sbb
lcall
mov
push
pop
sbb
inc
repz
jge
push
cmpsb
sbb
push
test
fwait
pop
jp
pop
dec
xchg
orb
adc
add
sti
mov
sbb
pop
or
push
mov
jmp
addr16
jb
adc
cmpb
nop
jno
jo
jg
shlb
data16
roll
clc
loopne
das
lods
cltd
inc
fimull
std
int
das
mov
imul
rcrb
call
loopne
adcb
sbb
mov
out
cltd
jbe
inc
push
push
adc
out
in
sbb
insl
push
xchg
and
aaa
sti
or
test
scas
jo
int
ret
les
neg
insl
add
xchg
cwtl
pop
lods
cmp
loopne
insl
xor
loopne
lds
icebp
cmpsb
out
pop
andps
enter
or
sbb
fidivl
cmpl
mov
fwait
xor
xchg
into
ds
inc
pop
mov
sbb
test
stos
clc
lods
mov
pop
cvtps2pd
enter
test
rolb
pop
xchg
in
int
testl
lahf
jp
inc
inc
movsb
leave
jge
test
mov
int
ds
scas
add
xchg
lahf
cmpsb
or
popa
jecxz
mov
jns
pop
cmpsl
dec
hlt
fdivr
bound
fwait
dec
cmc
jnp
push
int3
inc
add
cmp
out
pop
stos
push
lcall
jl
adc
adc
ret
in
push
lock
mov
out
int3
cmp
stos
test
cli
pop
mov
mov
cwtl
lret
mov
imul
in
pop
add
les
imul
ds
fwait
cmpsb
xorb
mov
add
stc
or
push
push
flds
nop
scas
ljmp
sbb
mov
inc
outsl
imul
push
sbb
push
xchg
cmc
fsubp
push
ss
push
ss
cwtl
shl
mov
lahf
mov
add
loop
popa
call
cmp
cmp
inc
mov
cmp
shll
jmp
dec
dec
scas
imul
mov
xchg
cmp
sarl
arpl
jno
adc
sub
mov
sub
mov
out
enter
inc
push
mov
jmp
or
mov
sub
in
xlat
mov
fs
jnp,pt
mov
test
inc
add
cmp
arpl
js
and
lret
add
shl
notl
je
imul
and
push
fistpll
pop
js
addr16
sbb
xor
call
cmpsl
test
mov
clc
xchg
push
dec
xor
js
aaa
jmp
bound
xor
in
test
pop
mov
and
stc
push
out
and
andb
repz
push
cmp
xor
xor
scas
dec
decl
test
xchg
lahf
inc
fwait
loope
cmp
jo
icebp
insb
popa
mov
xor
or
xchg
cmp
sarl
test
jl
push
icebp
jae
pusha
fucom
dec
js
shll
jl
sub
and
and
lock
add
cltd
fisttps
inc
jo
out
push
pop
andb
test
jp
fidivrl
dec
inc
cmp
fcmovne
insl
pop
jl
mov
cs
insb
xlat
int3
mov
jg
imul
push
dec
xchg
out
incb
mov
xchg
lcall
sub
mov
bound
push
pop
dec
das
jmp
xchg
cmpsl
repz
das
mov
stos
jmp
lahf
iret
pop
int3
scas
cli
scas
add
sub
push
test
aas
fisubl
cmp
inc
decl
arpl
sbb
mov
cmp
imul
sub
xchg
mov
aas
xor
lret
dec
test
gs
push
ljmp
outsl
or
push
in
xor
cmpsb
sti
jne
jne
push
test
iret
sbb
hlt
or
mov
ljmp
jae
sbb
xchg
cmc
cltd
cwtl
fdivrs
sarb
mov
push
and
mov
add
sub
pop
mov
stos
push
insb
cmp
dec
xor
sbb
push
loopne
or
mov
movsb
cli
ja
in
inc
out
daa
mov
and
sub
out
mov
out
mov
ror
pop
in
push
gs
mov
stc
js
add
inc
mov
outsb
aas
mov
jecxz
loop
push
mov
mov
adc
mov
xchg
dec
xor
aad
gs
add
andb
mov
repz
sbb
stos
pop
lcall
mov
xchg
imul
mov
movsb
adc
pop
movsb
mov
xchg
dec
ret
dec
test
je
add
xlat
pop
sub
imull
test
pop
insl
pop
sahf
push
push
or
jae
in
fimull
insl
out
out
and
xchg
andb
sbbb
jl
and
jb
stos
mov
pop
lea
sub
add
in
mov
cmp
ret
pushl
xor
xchg
jg
idiv
aam
xor
jb
stc
stc
outsb
xchg
adc
push
dec
mov
test
add
xor
ds
xor
jbe
lods
mov
inc
mov
ja
adc
xorb
cld
xchg
push
lock
sbbl
or
cmpl
jae
or
cmp
pop
xchg
pop
fsubrs
imul
clc
stc
movsl
iret
add
test
cltd
sti
mov
xor
dec
ret
push
jbe
add
push
or
lea
js
or
push
pop
fwait
bound
fldcw
push
pusha
jg
cmp
lea
dec
insl
pop
cs
lret
jne
das
push
push
pusha
or
xor
mov
adc
mov
imul
cmp
push
popa
fs
into
test
adc
cmp
adc
sbb
adc
psllw
filds
xor
mov
push
enter
push
in
popa
insb
pop
repnz
add
lret
adc
aaa
xor
sbb
test
jnp
xchg
repz
adc
test
dec
mov
dec
cmpsl
lods
aas
lret
push
mov
imull
sahf
inc
daa
mov
adc
fisttpl
sub
jl
call
mov
aas
dec
mov
xor
push
mov
xchg
cmp
and
pop
cmp
movb
dec
jae
movsl
or
rolb
xor
out
xor
ret
xchg
cld
rolb
insb
mov
mov
inc
repz
push
lock
stos
enter
adc
jo
sti
add
pushf
mov
call
cmpsl
data16
sbb
add
cmp
js
push
adc
mov
popa
pushf
sub
cmp
mov
lcall
aad
jo
adc
movsb
mov
call
sub
cmp
dec
push
mov
pop
lcall
out
repz
fsubl
dec
lods
adc
leave
jp
inc
mov
rolb
mov
pop
loope
jmp
add
pop
roll
sub
and
push
int
inc
mov
mov
int3
mov
mov
in
sar
daa
pop
mov
sbb
and
sbb
out
pop
rclb
xchg
xchg
adc
mov
adc
insl
idivl
mov
mov
inc
cmpsl
pop
int3
sbb
outsb
pop
pusha
or
xchg
hlt
pop
mov
mov
pop
sbb
faddl
std
pop
pusha
jo
cltd
mov
stc
adc
cmp
in
mov
dec
mov
ss
sub
cwtl
push
out
and
call
insb
cmp
mov
in
pusha
in
mov
addr16
and
loop
push
addl
jb
sub
inc
push
xchg
or
enter
mov
push
idivl
adcl
test
mov
add
aad
popf
pop
imul
and
pop
xor
stos
cmpsb
daa
sub
xchg
mov
mov
lea
sbb
xchg
movsb
xchg
jg
and
sub
mov
fcompl
inc
aam
movsb
add
push
mov
dec
in
ret
push
sbb
xchg
xor
jns
jb
dec
popf
lods
rolb
push
in
fmuls
pushf
fdivl
mov
je
sub
fcmovu
and
insb
pop
push
mov
jp
pop
xor
push
inc
lds
cmp
push
into
cmp
mov
mov
and
jno
mov
cmp
stc
push
cmp
pop
sub
push
fwait
movsl
sub
dec
lods
jmp
lret
push
xor
xchg
add
mov
adc
and
inc
push
pop
add
jp
cmp
outsb
adc
ret
cltd
aaa
xor
and
xchg
out
push
or
fadds
sbb
adc
mov
and
push
dec
movsb
mov
movsl
adc
loope,pt
shrl
repnz
mov
addb
popf
outsl
clc
lret
rol
call
imul
pop
lcall
fisubrl
in
adc
mov
or
clc
adc
dec
out
sti
aam
pcmpeqb
mov
cmp
fldenv
pop
mov
push
cmp
xchg
add
cmp
test
les
sub
sub
adc
push
xor
xchg
jne
cmp
sbb
fs
loopne
cmp
mov
mov
imul
dec
out
cld
mov
enter
std
jle
stos
mov
inc
xchg
jns
int3
xchg
aad
push
mov
sub
and
aaa
dec
lret
jmp
in
mov
mov
loope
push
movsl
mov
repz
cltd
incb
push
loop
in
call
out
fisubrl
mov
xor
lea
adc
mov
ss
mov
cmp
rolb
adc
xchg
cld
sbb
call
sbb
inc
pop
push
push
int
ss
sbb
and
ret
xor
push
mov
fidivrl
mov
jno
addr16
cmpsl
cmp
inc
lods
adc
pushl
bound
es
imul
mov
fwait
xor
lret
xchg
dec
xchg
dec
in
imul
sub
test
xlat
bound
dec
inc
inc
sub
xchg
fsubrs
repz
mov
ficoml
incb
push
movd
popa
adc
mov
inc
jmp
xchg
out
pushl
cmc
fyl2x
and
xor
lret
push
xor
and
fldt
pop
je
outsl
push
cs
xor
jb
lcall
cmp
push
adc
out
push
sahf
xor
mov
nop
and
pop
or
movsb
pop
imul
pop
xlat
mov
mov
mov
cmp
jl
push
fdivrp
sbb
pop
rolb
test
sbb
loopne
xchg
push
aas
push
imul
cwtl
mov
and
and
jbe
push
mov
aas
jb
arpl
xchg
mov
inc
ret
mov
jne
xchg
dec
mov
push
aam
xchg
mov
pmulhuw
mov
cmp
xchg
jmp
mov
sub
push
mov
push
iret
xchg
add
and
push
jns
xchg
mov
popf
aas
jg
mov
lock
xlat
loope
imul
mov
push
test
std
out
jne
int3
stc
hlt
lods
cmp
inc
aas
rcrb
adc
cs
and
adc
fimull
mov
push
mov
mov
ljmp
std
fidivs
insl
out
push
fisubrs
out
ficompl
mov
or
xor
sub
rcr
inc
mov
loopne
cwtl
jno
adc
lret
loop
and
add
pop
jle
repnz
jp
push
ret
mov
int
mov
or
into
lret
call
roll
faddl
test
or
lea
jmp
add
pop
decl
push
stc
movsb
lods
mov
aad
push
mov
push
pop
push
int3
out
fwait
pop
pcmpeqb
or
mov
jbe
push
and
xchg
fisubrl
fninit
imul
or
jl
mov
sbb
rcrl
aad
mov
gs
enter
jns,pt
lods
jno
data16
jmp
fidivrl
or
sbb
fsubrl
mov
stc
in
data16
lods
outsl
in
js
or
push
mov
sarb
shlb
and
mov
cmpsb
or
pop
sti
or
notb
add
dec
and
invd
sbb
mov
clc
inc
push
fwait
inc
jnp
popf
mov
cwtl
mov
inc
xchg
push
mov
mov
icebp
mov
jae
xchg
sub
sub
les
mov
adc
out
xor
xor
das
jmp
test
in
push
arpl
scas
cli
sbb
push
jg
jb
repz
sbb
pop
daa
cld
cli
data16
mov
sub
or
dec
push
cs
jp
out
ja
xor
nop
sti
and
mov
fldenv
dec
popa
cs
xchg
scas
lea
xor
sub
rorb
push
rorl
dec
das
int3
sar
push
mov
hlt
notl
cli
stos
xchg
pop
pop
sub
mov
xor
jae
inc
adc
mov
repz
imul
push
mov
std
sub
out
ret
sbb
arpl
adc
xor
ja
sub
add
adc
push
sub
xchg
pop
mov
mov
mov
mov
inc
pusha
adc
repz
mov
inc
iret
mov
inc
push
loop
pop
mov
stc
xchg
xor
sbb
mov
cmp
aam
shll
xchg
lods
mov
in
cmp
inc
stc
repnz
jcxz
adc
push
cmpsl
nop
cmp
iret
iret
lahf
das
adc
dec
or
inc
addr16
adc
out
xchg
xor
hlt
xchg
push
imul
data16
mov
das
jl
mov
sbb
incl
std
adc
push
xor
push
call
into
and
lcall
push
inc
xlat
mov
jg
imul
mov
and
addl
xor
or
mov
mov
std
pusha
in
sbb
jns
shll
test
arpl
fdivs
ljmp
add
fnstenv
ret
jecxz
sahf
movsb
xor
fcoms
pusha
ror
subl
out
cwtl
xchg
dec
adc
sub
pop
cmc
push
xchg
cmp
cmc
iret
xchg
inc
or
inc
jbe
cmp
addr16
mov
dec
pop
mov
xor
adc
mov
mov
popf
je
lds
push
xchg
mov
xchg
cld
inc
jle
gs
push
and
scas
dec
cs
push
cmp
lock
inc
pop
mov
xchg
mov
inc
sub
mov
push
adcl
jp
adc
negl
mov
scas
int3
test
inc
inc
pop
mov
cmp
pushf
test
scas
xchg
inc
lea
repnz
push
and
add
sbb
push
fwait
cltd
imul
lds
fidivrs
mov
inc
cli
aas
sub
clc
jo
insb
cmp
xchg
xor
push
cwtl
jge
jnp
or
sub
lods
push
lods
hlt
dec
popa
punpckhdq
movsl
jg
sbb
rclb
xchg
lret
enter
adc
adc
and
int
sub
dec
cld
mov
je
cs
ss
push
enter
clc
cs
leave
lds
fstpl
scas
dec
insb
scas
xor
inc
shl
xor
jmp
addb
mov
adc
sahf
arpl
xlat
adc
inc
inc
push
sub
cld
out
in
fsts
jg
pop
fists
mov
iret
jae
into
jno
cmpsb
je
cmpsb
mov
imul
push
xor
push
js
jle
xchg
movsl
aaa
cmp
mulb
ljmp
or
aas
dec
xorl
cmpl
pop
jo
dec
imul
inc
sbbb
lock
and
jns
sbb
aad
cmp
outsl
cmp
insb
in
and
dec
adc
push
lea
into
adc
push
xchg
shr
mov
dec
lcall
push
jle
dec
aaa
ret
or
fs
push
xchg
push
lods
add
add
cltd
sub
push
xchg
dec
dec
sbb
sbb
and
into
ss
fdivrl
mov
inc
cmc
imul
adc
or
or
outsb
into
ljmp
fisttps
xchg
cmpsl
adc
hlt
popa
sbb
sarb
adc
sub
in
inc
enter
or
xchg
adc
cld
pop
lds
jl
add
mov
push
test
jo
call
nop
rcrl
pop
arpl
or
or
sub
shrl
fs
cmc
lret
push
cmp
and
ret
mov
fsubl
jl
cltd
mov
test
push
jb
cmp
int3
test
adc
aad
sub
stc
xchg
push
pusha
addb
aam
pop
cmc
xor
testb
jne
fdivp
jo
in
add
fcompl
mov
scas
icebp
sub
adc
lods
mov
push
enter
xor
adc
jle
xchg
cmp
nop
cld
div
test
test
pop
lret
mov
and
lahf
jecxz
jg
jmp
jp
cmp
pop
add
aaa
ficomps
movsb
xor
pop
adc
sub
push
dec
jle
cli
cmp
mov
fldt
cmp
sub
push
outsl
lcall
xchg
jle
mov
out
in
dec
das
push
lods
mov
loopne
out
test
cmp
and
mov
jno
sbbl
or
dec
mov
pop
dec
inc
mov
movsb
mov
sbb
xchg
sub
jecxz
xor
adc
mov
dec
inc
ljmp
inc
pop
sub
or
jl
mov
xchg
mov
mov
add
sbbb
loope
pop
jg
enter
std
adcl
ret
dec
fcomp
jg
cmpb
popf
cs
add
sbb
jbe,pn
mov
and
xchg
xchg
xor
pop
cmp
add
sarb
xchg
or
xor
add
rcr
push
mov
repz
mov
cli
call
sbb
dec
ja
push
xchg
pushf
ret
sub
adc
cmpsl
mov
cmp
outsb
mov
mov
leave
mov
jns
mov
addr16
ds
pop
daa
in
push
iret
jns
mov
lcall
das
inc
xor
fs
enter
sub
inc
std
sbb
in
xchg
fstp
or
and
test
mov
lds
xchg
pop
lds
daa
xchg
mov
and
mov
xlat
lods
outsl
xor
xchg
pop
stc
mov
dec
jle
jecxz
fadds
lds
in
jae
pop
outsl
cmp
ds
cwtl
popf
insl
cmc
sub
add
inc
mov
pop
sbb
div
dec
and
jno
inc
add
xchg
xchg
sub
pop
shll
mov
movsl
cmp
pop
or
aad
data16
es
test
sbb
xor
sbb
frstor
int3
call
and
add
fdivs
add
dec
loop
mov
rcl
xor
nop
out
pop
mov
stos
dec
mov
mov
or
cli
push
or
fwait
sbb
movsl
in
ret
or
loope
xchg
and
jae
flds
push
push
mov
add
adc
adc
mov
or
add
out
pop
test
jg
push
jne
test
adc
pop
push
lods
idiv
push
rcll
xchg
shrb
or
cwtl
lret
sbbb
pop
fs
xchg
xchg
adc
cld
imul
lret
cmp
rcrb
push
mov
jg
lret
fxch
jae
mov
inc
dec
lods
cmpsl
jecxz
out
inc
push
jecxz
sbb
mov
add
test
xchg
ss
push
ljmp
inc
mov
loope
aaa
add
sub
fs
mov
pop
loopne
cmp
and
mov
dec
jo
add
cmp
xor
or
mov
pop
mov
sarb
cmc
push
fmull
add
and
jp
imul
sbb
mov
js
call
filds
ret
adc
add
popa
inc
les
sub
out
test
inc
frndint
enter
xchg
mov
pop
push
mov
mov
push
movzwl
mov
mov
sub
dec
icebp
xlat
popa
out
loopne
jb
xchg
mov
mov
sbb
pop
add
xchg
fcmovu
sub
add
mov
test
xchg
inc
out
out
mov
pop
mov
xchg
shl
and
test
unpcklps
mov
xchg
outsl
add
pop
rcrl
inc
fcomps
test
push
mov
jl
sub
out
push
pop
pop
push
push
jnp
xchg
jo
jecxz
cmpsb
push
mov
pop
mov
push
xlat
sbb
lea
xchg
and
cmp
addb
jbe
xor
jns
push
mov
dec
mov
in
and
push
dec
pop
sbb
jno
ss
stos
loope
arpl
jge
mov
xchg
or
loopne
xor
push
pop
sub
lea
das
aam
xchg
lock
push
lock
leave
idivl
xchg
mov
pop
outsb
popl
es
int3
ja
roll
jno
sbbl
mov
xchg
pop
fcoml
xor
movsl
mov
lret
xchg
psrld
and
mov
dec
dec
or
cmc
imull
pop
out
or
xchg
jae
adc
dec
das
clc
das
pop
out
push
sub
sbb
xor
inc
xor
aad
and
jnp
xchg
mov
push
add
fisubs
dec
sbbl
xchg
add
adc
cmpsl
and
xchg
loope
push
fsubrs
inc
ret
hlt
enter
imull
jge
inc
sbb
pop
lret
mov
sub
fs
jge
std
push
xchg
cmp
clc
mov
clc
test
push
les
mov
dec
inc
mov
aas
mov
mov
sub
loope
sub
popf
fs
testb
outsb
sbbb
movsl
push
repz
ss
inc
xchg
or
dec
stos
fwait
rcrl
idivb
cs
cmp
xchg
test
mov
inc
int3
addl
cmp
lock
xlat
mov
or
dec
cmpsl
fmuls
pop
call
in
in
push
out
mov
push
jge
test
sarl
cld
das
cmp
or
lods
std
mov
xchg
mov
dec
das
ss
cltd
sbb
add
lods
imul
jl
jae
loopne
loop
adc
adc
call
sub
packuswb
nop
dec
stos
mov
jge
es
or
das
xchg
pop
push
ja
movsl
or
cltd
or
cmpsb
xor
add
push
push
mull
or
jae
and
xchg
pop
insl
fildll
cld
hlt
movsl
or
dec
mov
lahf
ret
xchg
mov
xchg
sbb
pop
inc
inc
push
int
mov
cld
cwtl
pop
push
add
pop
popf
pop
adc
ds
xor
pop
cmpsb
ss
cli
cmp
jns
sub
inc
mov
ds
movb
enter
dec
jns
sbb
movsl
incl
xchg
rorb
xchg
loopne
mov
sub
jo
push
loop
lods
lds
jp
mov
leave
pushf
rcll
aam
adc
pop
adc
pop
mov
movsb
rcl
shll
mov
mov
jmp
jg
dec
cmpsl
or
xchg
lods
data16
dec
add
out
push
out
adc
fsubs
pop
adc
inc
push
sub
and
ljmp
mov
mov
stos
fstl
or
ss
lahf
scas
int
in
leave
test
dec
push
fisubrs
aaa
aas
add
pop
inc
mov
inc
and
jne
adc
scas
notb
cmova
xor
insb
jo
and
inc
in
imul
adc
cmpl
xchg
mov
inc
hlt
in
dec
popf
sbb
not
lahf
cs
jg
rorb
in
cwtl
push
loope
movsb
xchg
adc
shlb
aam
xchg
mov
rcl
push
fnstsw
jb
xor
and
cltd
fcoms
mov
push
mov
jmp
push
push
lds
mov
jle
cmp
cmp
mov
inc
popa
sbb
add
or
pop
inc
inc
mov
cmpsb
mov
imul
sbb
xchg
push
or
mov
std
sub
dec
mov
push
aam
out
test
pop
xchg
fistpll
mov
sub
out
leave
inc
mov
jnp
dec
popl
push
shrb
fiadds
push
loop
lahf
xchg
pop
xor
repz
adc
arpl
dec
cmc
lcall
and
pop
scas
adc
and
fildll
ret
call
pop
clc
jbe
pop
test
lods
leave
jmp
clc
push
mov
add
add
pop
xchg
lahf
push
add
mov
mov
fidivrl
js
mov
add
adc
xlat
xor
in
or
inc
inc
cmp
aam
popf
adc
mov
movsl
mov
or
adcl
mov
aam
xchg
adc
xor
push
cli
adc
in
loope
adc
mul
push
xor
push
ja
aaa
sbb
ret
sbb
jl
cmp
stc
mov
cmp
xchg
jo
dec
loop
push
sbb
and
cwtl
xor
scas
add
jmp
cs
mov
add
fsubl
sbb
dec
scas
mov
jle
dec
lds
sbb
in
cmp
mov
shll
fmul
scas
add
lcall
mov
mov
inc
cmp
enter
sar
in
rcrl
pop
inc
imul
cmpb
dec
xchg
pop
jg
sub
sub
push
adc
loope
push
pop
imul
jl
jge
and
xchg
cmc
mov
cmpsb
or
sub
mov
aas
dec
fnstenv
or
add
dec
ss
cltd
sbb
imul
mov
mov
es
stos
push
movsl
sbb
xchg
mov
out
cwtl
cmp
pushf
fcmovnu
std
jno
scas
mov
or
push
popf
mov
fmuls
aas
mov
and
mov
xchg
mov
sub
dec
das
push
lret
repz
daa
sbb
shlb
adc
cmc
ja
pop
mov
lret
adc
bound
rclb
leave
push
sbb
lahf
inc
sti
lret
lret
loopne
sbb
loopne
shll
xlat
mov
xor
ds
loope
dec
mov
mov
mov
add
pop
test
lea
push
lds
faddp
push
mov
lods
inc
xchg
cmp
sbb
cwtl
andb
or
pop
jmp
dec
sub
mov
push
and
inc
mov
call
enter
lret
xchg
adc
ret
ljmp
pop
xlat
rcrl
inc
lcall
cwtl
cmpb
inc
mov
pop
mov
popf
mov
mov
cmpb
xor
sbb
dec
shll
lods
enter
and
push
out
movsl
mov
movsb
sub
test
cmpsb
fsubs
lds
lcall
mov
bound
push
jnp
imul
in
ljmp
ljmp
sub
mov
mov
adc
mov
mov
cmp
mov
xorb
mov
cmp
out
sbb
lock
cmp
mov
ficomps
dec
jle
cld
pop
pop
jle
push
cmp
lret
cwtl
lret
sbb
push
or
pop
mov
add
enter
cmp
ss
js
out
testb
js
sbb
inc
out
or
inc
loopne
outsl
jle
mov
mov
inc
call
push
mov
adc
push
dec
sub
bound
sbb
adc
imul
std
push
sbb
sub
roll
jo
mov
mov
cwtl
or
js
les
add
fwait
lret
data16
test
ljmp
lock
test
push
push
dec
inc
mov
adc
sub
test
jo
sub
scas
imul
jo
decl
scas
pop
xor
dec
inc
xor
aas
fxtract
xchg
sahf
test
fistps
imul
fwait
adc
push
sub
into
or
push
in
sub
mov
stos
or
out
jbe
sub
iretw
int3
movsl
das
xchg
aam
jg
push
xlat
ljmp
dec
sub
dec
ljmp
movsl
jo
push
stos
xor
cltd
fsubrl
arpl
cmpsl
mov
pushf
mov
subb
and
adc
push
bound
dec
lea
loopne
fsubr
addr16
orb
pop
jnp
cmpsb
jmp
out
xor
jo
pop
pop
enter
pop
pop
xor
shlb
xchg
pusha
jge
out
repz
mov
xchg
int
dec
and
mov
in
sub
jo
add
lock
pop
les
fldz
jle
cmp
mov
mov
daa
hlt
enter
pushw
mov
cmp
js
flds
sbb
ret
daa
adc
and
jnp
outsl
pop
sbb
xor
in
xchg
cwtl
xor
push
loop
ret
movsb
xchg
fisttpll
test
dec
or
aas
outsb
stos
xor
fs
into
cld
nop
xchg
push
out
cltd
lret
mov
test
rorl
sti
sbb
jae
out
shrl
xchg
imul
lret
mov
xor
popf
jns
sbb
repz
subb
sbb
sti
mov
fnstenv
into
sub
xchg
mov
dec
push
int
in
mov
shll
imul
cmp
mov
cmc
mov
push
hlt
in
push
xchg
or
ljmp
aaa
nop
inc
cmp
inc
mov
test
sub
adc
pop
dec
inc
dec
mov
pop
iret
pushf
in
mov
addl
sbb
dec
cmp
cmp
push
pop
and
xor
test
cltd
push
fs
sub
imul
pop
das
std
pop
into
adc
lret
adc
idivb
cmpsl
call
insb
push
jnp
mov
imul
lret
cmpl
scas
out
outsl
push
xor
fnstenv
inc
icebp
fstps
std
jns
lret
push
and
sub
insl
outsb
adcl
dec
push
aam
shl
cmp
int3
mov
pop
sbb
jno
bound
mov
push
ja
mov
movsb
or
inc
sub
add
imull
xchg
jo
loopne
jae
nop
dec
pop
das
fld
das
dec
popa
gs
inc
sbb
pop
sub
lods
xor
ret
jp
ds
add
jp
jl
or
ds
pop
jae
or
push
cmpsl
adc
inc
push
mov
movsb
notl
push
jp
xor
lahf
mov
fbld
jl
xchg
aam
jecxz
push
pop
loop
out
dec
mov
pushf
test
stc
or
mov
out
adc
sbb
dec
or
cmc
sbb
lock
fiaddl
out
in
inc
cltd
ror
or
movsb
inc
test
dec
jge
cmpsb
jnp
int3
or
test
fwait
clc
test
out
dec
shll
cwtl
cmp
sub
jnp
sub
xchg
mov
jae
mov
sub
xchg
ljmp
cld
jo
mov
cld
inc
mov
push
cltd
fisubrl
or
jbe
mov
adcb
mov
loopne
or
mov
lea
or
inc
movsl
xchg
push
adc
arpl
rsm
xlat
mov
inc
push
cmpsb
mov
ffreep
cmc
repnz
jg
pop
adcl
mov
in
mov
lods
cmp
stc
loope
inc
push
out
lret
rolb
gs
test
cmpsl
cmpb
jnp
jbe
les
inc
leave
push
cmpsl
js
mov
daa
sbb
adc
test
lea
sub
mov
sub
dec
pop
mov
mov
mov
aam
sbb
cmpb
inc
cmpb
test
mov
fldcw
test
sub
push
xor
mov
lods
adc
sbb
and
in
xchg
mov
cmc
pop
aam
addr16
pusha
inc
mov
call
pop
or
xchg
or
test
inc
ret
int
clc
mov
jmp
mov
mov
decb
pop
jae
jbe
cmp
sti
aaa
xchg
push
adc
xchg
mov
cmc
xor
mov
out
stos
add
adc
cwtl
inc
loop
test
sbb
test
cltd
pop
testl
adc
pushf
std
mov
push
and
popa
ret
jne
jmp
adc
ds
outsb
mov
inc
das
rorl
cmc
mov
clc
push
inc
mov
sbb
rcrl
sbb
pop
mov
fcomps
std
repz
popa
cmpsl
vpcmpeqb
insb
loopne
popf
ja
inc
or
in
xchg
das
pop
add
jbe
fmul
xchg
lret
mov
sbb
jo
cltd
andl
push
sbb
fsubrs
call
cmp
sbb
repz
push
mov
adc
inc
rcrl
test
rcrb
ljmp
daa
or
mov
or
mov
add
push
inc
negb
pop
and
xchg
or
mov
jp,pn
inc
lods
test
or
cmpl
xor
adc
mov
cmp
fimull
push
pop
push
sahf
lods
movsb
lahf
lcall
xor
xor
mov
in
cld
sub
or
gs
mov
cmp
movb
pop
pop
fstpl
outsl
ss
inc
xor
pop
inc
push
mov
and
jg
sbb
out
xor
icebp
fstpt
rolb
or
hlt
jno
xchg
nop
shrl
inc
mov
pushf
mov
pushf
fiaddl
dec
mov
adc
mov
sbb
sbbw
test
mov
hlt
xor
jae
xor
pop
int3
and
jno
pop
sti
mov
jp
shrb
xor
faddp
xor
dec
mov
mov
scas
aam
mov
xchg
in
sarb
xchg
imull
lods
imul
adc
mov
jnp
push
cld
cmp
imul
or
bnd
pop
call
dec
sub
sahf
adcl
sub
push
aad
jge
cmp
je
dec
xchg
stos
int3
subb
add
push
pop
jg
sbb
call
insl
lds
jbe
in
test
pop
imul
xchg
ja
mov
add
out
fmuls
jnp,pt
in
jnp
adc
or
fadd
scas
jae
inc
addr16
leave
xchg
cmpsb
and
add
inc
loope
adc
mov
or
cmp
xorb
pop
outsb
bound
xchg
or
jnp
cld
pop
inc
jae
adc
or
jg
xor
inc
addr16
jo
gs
adc
ret
adc
adc
sub
test
jg
outsb
push
pop
add
jb
cli
jg
mov
dec
mov
sti
aaa
pop
add
jbe
push
push
cwtl
cmpsb
adc
or
out
int3
nop
rcrb
jnp
and
imul
push
mov
mov
lret
fldenv
sbb
add
sbb
int3
in
repz
gs
xchg
movsb
mov
lds
rcr
push
cmp
into
mov
loopne
pusha
xchg
clc
jg,pt
rorb
mov
pop
push
scas
fldcw
push
jo
cmp
add
mov
dec
sbb
mov
mov
push
mov
test
imul
dec
mov
push
mov
ljmp
ficoml
mov
add
pop
xchg
push
aad
mov
or
inc
ljmp
inc
sub
lock
leave
into
push
shl
in
dec
jp
fists
sarb
cmp
dec
add
or
hlt
test
push
insl
cmc
mov
arpl
or
adc
in
xor
lock
sub
mov
xor
inc
sub
das
sbb
arpl
in
inc
gs
sti
in
hlt
push
inc
in
roll
mov
leave
sub
outsl
mov
push
mov
mov
mov
shr
mov
add
xor
xor
rorl
xor
xor
addl
xor
add
dec
jne
leave
ret
jae
push
mov
add
push
call
push
push
push
push
push
push
push
call
mov
call
mov
call
push
pushl
call
pushl
call
call
mov
push
pushl
call
push
push
push
push
push
push
push
push
call
mov
cmp
jne
push
push
push
push
push
push
push
push
call
mov
push
call
call
mov
pushl
call
pushl
call
mov
mov
call
push
push
push
push
push
push
push
call
mov
cmp
jne
xorl
addl
pushl
call
call
push
push
push
push
push
push
push
call
mov
cmp
jne
nop
lea
push
push
push
push
push
push
push
push
push
call
mov
push
pushl
call
call
push
call
pushl
pushl
call
push
push
mov
mov
call
subl
addl
push
pushl
call
call
push
push
push
push
push
push
push
call
mov
cmp
jne
call
leave
ret
inc
lods
jp
aaa
std
xor
int3
inc
fwait
.byte
lods
xor
