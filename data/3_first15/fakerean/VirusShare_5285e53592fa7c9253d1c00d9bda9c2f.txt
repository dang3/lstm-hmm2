jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
sub
or
xor
add
leave
sub
call
and
and
dec
add
or
xor
add
mov
or
or
mov
or
sub
and
jmp
mov
dec
xor
or
push
add
and
sub
push
xor
dec
inc
and
push
inc
add
add
dec
call
xor
xor
push
inc
mov
xor
add
call
mov
mov
cmp
mov
mov
mov
mov
je
xor
or
mov
je
xor
sub
or
mov
sub
and
cmp
mov
mov
mov
je
and
push
and
sub
mov
call
xor
sub
mov
sub
xor
mov
and
inc
sub
push
dec
push
sub
sub
push
or
and
and
push
and
and
add
inc
push
xor
sub
xor
call
or
xor
and
mov
add
sub
or
xor
mov
shr
dec
or
dec
lods
sub
mov
mov
xor
xor
and
or
mov
add
xor
inc
xor
dec
mov
jne
inc
sub
inc
add
pop
or
pop
pop
mov
or
and
or
jmp
cs
push
xor
ja
xor
lahf
popa
imul
lahf
pushf
mov
mov
lods
xor
mov
mov
dec
lret
mov
xchg
into
push
push
xor
test
in
in
sbb
out
cmpsb
fnstcw
push
imul
jae
in
fstpt
sub
lret
inc
pop
cli
push
mov
lahf
push
mov
lret
mov
mulb
adc
lahf
js
insb
stc
adc
ret
push
xor
adc
dec
loop
cwtl
cli
fisubrs
lds
ret
xor
arpl
lods
cli
insb
pop
mov
lahf
dec
sub
ljmp
stos
repz
xor
aaa
xchg
fnstsw
xor
sbb
aaa
add
ljmp
test
sbb
fsubr
pusha
loope
ficoml
inc
sub
aaa
xchg
arpl
add
ss
mov
cmpb
xor
adc
lret
mov
testb
pusha
loope
inc
fwait
cmp
xchg
adc
mov
addr16
adcl
push
inc
cmpsl
push
outsb
mov
push
fbstp
push
pop
cmp
lahf
push
xor
push
xor
and
adc
nop
stc
fistps
aaa
inc
aaa
and
pop
int3
lods
fbstp
negb
je
scas
aad
cli
iret
ja
lret
cmp
jno
adc
enter
jne
lahf
xchg
mov
xor
adc
or
pcmpgtb
sub
mov
adc
lods
cltd
stc
fistps
gs
push
xor
insb
mov
mov
mov
push
dec
push
movsl
nop
stc
fistps
mov
insb
mov
je
adc
enter
cmc
das
popf
das
xor
in
andl
data16
sbb
pusha
cmp
pop
and
imul
popf
fldt
mov
stos
cmpsb
fcompl
xor
bound
out
clc
test
gs
sub
jae
adc
movsb
and
lea
out
jae
xor
js
in
mov
fistpl
fcmovnu
sub
sbb
jno
ds
popa
fsub
clc
std
xchg
add
decb
clc
test
gs
movsb
xchg
mov
test
pushf
enter
clc
test
inc
push
into
adc
mov
sbb
clc
and
std
inc
jmp
insl
in
cld
mov
or
outsl
fwait
xchg
adc
jbe
lret
outsl
test
mov
jmp
lods
loopne
ret
xchg
xchg
scas
subb
xchg
or
sbb
clc
test
in
cmp
clc
adc
fucom
push
pop
push
in
mov
test
push
push
in
shr
fwait
pop
jns
in
lods
push
adc
in
sti
in
out
gs
stos
fldenv
mov
xor
out
lods
and
adc
push
in
jg
imul
push
test
rorl
repnz
sbb
pushf
test
out
mov
out
clc
fstpt
pop
cli
jmp
sbb
clc
mov
and
mov
xor
or
mov
xorb
xor
jg
imul
out
clc
test
out
test
out
mov
sbb
dec
test
ljmp
jp
jmp
mov
sub
mov
push
or
adc
adc
sub
jno
ds
popa
fsub
clc
std
xchg
add
out
mov
adc
clc
pop
in
sahf
sub
mov
adc
stos
lock
sbb
clc
test
ret
and
cld
test
in
jae
and
xchg
call
sbb
cmc
adc
or
in
jno
out
dec
push
adc
loop
daa
add
pop
and
sbb
sbb
sbb
dec
jg
scas
clc
repnz
jnp
and
cli
test
adc
and
leave
fsubl
adc
and
repz
sbb
jae
dec
mov
pop
xchg
cltd
xor
call
sbb
clc
clc
dec
push
jbe
in
ret
sub
xlat
mov
stos
sbb
jae
adc
pop
mov
sbb
into
stos
addr16
fstl
mov
or
jno
or
mov
sbb
xchg
call
outsl
out
xchg
call
push
inc
test
aam
mov
xchg
cmpsl
lods
pop
mov
mov
cmpsl
lods
movsl
cmpsl
lods
popf
in
and
dec
test
push
out
jmp
cmpsb
sti
pusha
in
pop
cli
ficompl
jae
push
mov
out
or
mov
outsb
xor
push
outsl
sbb
inc
int3
adc
push
xchg
gs
sbb
sbb
xchg
jne
test
out
sti
cmc
adc
movsb
adc
mov
sbb
popf
cs
push
dec
push
in
repz
xchg
push
cmp
in
sub
popa
jae
adc
lea
adc
test
push
loope
pop
add
out
call
in
test
lahf
add
inc
lds
mov
adc
mov
dec
fimull
or
mov
cltd
push
pop
test
out
clc
fsubl
pop
pop
test
out
jae
sbb
jnp
adc
adc
inc
push
into
mov
push
test
lcall
sbb
rorb
mov
test
out
sti
sub
push
mov
gs
sbb
sbb
xchg
pop
cmp
adc
lods
xor
jnp
push
mov
mov
adc
push
loop
jno
jle
aam
sbb
jae
adc
cli
test
out
clc
and
clc
stos
outsl
out
ficoms
in
fmull
inc
repz
adc
pop
fstl
adc
leave
icebp
add
clc
test
scas
hlt
and
jae
add
mov
sbb
testb
inc
out
lock
movsl
lods
jnp
lret
push
sbb
adc
out
pop
in
mov
nop
sbb
pop
sub
sub
imul
mulb
sbb
cmp
in
in
shlb
fadds
pushf
xchg
iret
aad
xchg
cmpsb
jns
xchg
xchg
test
frstors
mov
xchg
int3
jg
cmc
mov
in
pop
cli
cmp
push
popa
xchg
xchg
or
test
pop
inc
mov
lods
inc
call
add
shlb
mov
mov
stos
outsb
or
fmuls
lock
repnz
fwait
rclb
mov
stos
lock
sbb
out
mov
add
push
imul
fsubl
or
jb
lods
jp
mov
sub
xor
inc
adc
mull
arpl
jmp
add
nop
out
jle
stc
push
cmp
stos
scas
icebp
sti
xchg
xorb
dec
fimull
in
fsubs
rorb
test
add
sub
cld
mov
xor
fildll
dec
jecxz
mov
xor
ror
jecxz
mov
lret
mov
daa
jo
rolb
sub
lret
popa
and
negl
push
cli
xor
push
stos
out
outsb
fdivrs
fsubr
ret
pop
xchg
stos
add
out
jnp
push
scas
js
sub
adc
xchg
outsl
push
clc
fstpt
inc
scas
dec
push
jne
xor
lea
icebp
out
cmp
in
sub
add
test
push
xchg
sub
mov
gs
ret
mov
enter
test
insb
adc
shll
into
mov
lds
xchg
leave
or
loop
push
out
mov
std
or
xor
sbb
repnz
out
sbb
pop
stos
imul
test
cltd
pop
dec
inc
sbb
not
sub
cld
cmp
mov
push
cs
imul
cltd
cmpsb
pusha
push
adc
push
xchg
imul
xchg
inc
es
enter
cmp
sti
scas
ret
and
lret
xor
sbbb
mov
xchg
nop
sub
push
scas
mov
loope,pn
rorb
mov
mov
push
movsb
cltd
sti
lods
jp
outsb
mov
jmp
movsl
cli
sbb
lret
mov
mov
pop
imull
testb
cmp
cld
rol
call
xor
add
rcrl
mov
cmpsl
outsb
mov
mov
xor
into
xchg
int3
in
das
mov
adc
insb
hlt
sub
cmc
push
mov
repz
jnp
dec
int3
mov
xor
rclb
sbb
or
insl
call
mov
imul
sbb
add
hlt
mov
outsl
sti
hlt
inc
jbe
out
fmulp
movsb
outsb
rcl
xchg
xchg
lods
scas
pusha
xor
jne
mov
lock
rcrb
and
ror
xor
adc
adc
mov
stc
push
sti
mov
pop
jl
dec
cmp
lds
pop
cmc
loopne
lret
lret
pop
fists
sbb
mov
shlb
sub
xchg
loopne
in
lret
test
sub
sbb
lret
ds
mov
cmp
sar
cmp
jmp
scas
stc
and
pop
repz
sub
enter
jnp
pop
push
mov
mov
cmp
pop
add
lods
outsb
mov
repnz
pusha
loop
orb
pop
push
andb
pushf
or
les
adc
in
dec
mov
xor
adc
aam
clc
and
js
adc
mov
movsl
xor
inc
mov
repnz
loopne
sub
shrb
bound
pop
lcall
lods
xor
or
sarl
push
adc
inc
dec
xchg
xchg
iret
jno
ret
push
hlt
dec
xchg
pop
lock
sahf
iret
xchg
mov
data16
pop
std
in
in
pop
inc
jo
add
pop
js
insl
jmp
into
fwait
idiv
ret
and
mov
mov
xor
cmp
mov
add
into
or
sub
adc
out
add
or
jo
fimuls
add
inc
loopne
pop
sti
pop
and
dec
arpl
cmp
lods
pusha
mov
push
sub
push
and
vmovapd
ret
push
mov
pop
push
call
ljmp
aam
dec
add
movsb
sub
jb
sbb
mov
jns
dec
nop
mov
pop
lret
sub
xchg
dec
movsl
jb
xor
leave
ljmp
mov
push
mov
adc
jecxz
jl
push
popa
jo
sbb
outsb
dec
sub
in
fs
mov
testl
mov
scas
jne
sahf
mov
arpl
orl
mov
imul
mov
lcall
mov
sahf
lea
and
adc
mov
hlt
pop
sarb
mov
jo
lret
mov
sahf
and
int
daa
lcall
or
adc
pop
mov
icebp
mov
and
adc
and
pop
push
loop
dec
test
aas
xchg
test
cmp
ret
lods
xchg
std
notl
xor
push
mov
imul
or
pop
jo
aad
out
push
lcall
fisubrs
aas
inc
ss
cmp
xchg
push
adc
mov
push
call
mov
mov
mov
fwait
pop
aas
sub
negb
and
mov
outsl
shlb
hlt
sbb
les
dec
xchg
lods
sar
stc
xchg
add
mov
xor
ret
pop
adc
mov
rorl
pop
popf
jae
dec
daa
scas
or
push
xor
push
jne
mov
addr16
imull
mov
repz
push
jp
and
stos
dec
mov
adc
sti
in
jecxz
call
scas
pop
aad
fcmovb
and
fsubrl
stos
pop
ds
push
xchg
mov
mov
dec
xor
xor
sbb
mov
sbb
xchg
and
aaa
xchg
sahf
bound
jp
imul
enter
mov
lret
jl
fwait
mov
fidivrl
fsubrl
mov
or
movsl
into
mov
insb
sub
ss
pop
fidivl
shrb
push
scas
xchg
fstpt
xchg
rcll
mov
cmp
inc
inc
sbb
and
dec
mov
mov
movsl
or
lret
add
stc
ljmp
cltd
out
idivb
lds
xchg
icebp
js
adc
faddl
lea
gs
lahf
add
and
push
out
push
decb
lods
jmp
push
pusha
xchg
les
or
out
sub
sub
icebp
and
adc
negl
std
push
mov
idiv
repnz
xlat
sbb
jb
sahf
cs
test
fmull
inc
sbb
dec
ljmp
dec
cld
cltd
mov
loope
push
pop
jae
mov
hlt
ror
imul
pop
mov
hlt
loope
stos
ret
jb
enter
pusha
cli
mov
insl
scas
pop
mov
cmc
lods
ds
out
mov
or
cmpsb
inc
jns
xchg
xchg
xor
stc
mov
sub
mov
mov
jecxz
mov
cmp
pop
out
dec
mov
cmp
xorb
sub
add
dec
fidivrs
mov
push
ljmp
lcall
jne
sbb
or
mov
iret
ljmp
jae
jb
outsl
lcall
into
mov
mov
inc
cmp
mov
decb
xchg
enter
stos
or
scas
sbb
dec
in
lcall
lods
push
mov
imul
adc
sahf
jno
xor
xchg
add
lock
push
pop
pop
mov
int
sub
mov
push
lret
ret
cmp
call
fsubrs
inc
cltd
push
lahf
je
cltd
jo
or
cmpb
lods
pusha
in
xor
sub
data16
js
inc
or
ss
add
xor
or
add
leave
insb
adc
cmp
cmp
repz
lret
nop
or
mov
mov
enter
xor
jl
xchg
inc
lock
mov
call
mov
cmp
push
ficomps
jmp
leave
repz
mov
sbb
jbe
loopne
xchg
or
pop
cmpsb
xor
ds
mov
cmpsb
jo
inc
sub
es
sub
cs
dec
and
scas
add
iret
pusha
adc
stc
and
movsb
es
push
int
lret
out
cli
and
cmp
xchg
xor
outsl
xorb
inc
mov
icebp
in
mov
ret
je
inc
es
fcoml
adc
adc
mov
fcompl
das
jmp
shl
dec
daa
inc
sub
jo
pop
mov
lock
jle
mov
or
fisubrl
push
in
jo
je
or
lods
fnstcw
push
imull
repz
mov
adc
inc
push
int
or
es
into
cmp
dec
push
cmpsb
insb
aam
xchg
dec
ficomps
xchg
push
xchg
jmp
mov
mov
pop
lahf
in
mov
flds
lods
cmp
mov
int3
pop
mov
ljmp
add
jp
nop
pop
sbb
insb
sbbb
cmp
aad
out
push
scas
xor
sub
mov
pop
adc
mov
mov
pop
fimull
cli
loope
outsb
inc
fs
sub
add
lea
addl
mov
sub
mov
mov
ret
and
fs
icebp
dec
data16
cmc
insl
imul
fs
sbb
sahf
push
loope
into
in
jl
imul
lcall
lds
inc
pop
ret
mov
stc
inc
adc
dec
cmp
into
in
and
cmovns
pop
mov
loope
rol
jno
adc
adc
pop
adc
aaa
and
repz
sub
mov
jle
add
aaa
and
fldenv
and
fsubr
push
fmulp
sbb
nop
jbe
loopne
adc
mov
icebp
mov
int3
movsb
and
out
test
and
or
pop
add
cli
cmp
xor
lea
shlb
into
dec
aad
sbb
outsl
sub
gs
and
lock
add
push
shlb
mov
mov
xchg
fnstenv
call
test
outsl
push
sub
stos
cmp
das
aam
mov
cld
adc
fs
xorl
int3
in
data16
icebp
xor
pop
ret
jae
sti
xlat
and
xlat
cmp
add
das
cs
push
jp
mov
adc
sbb
push
fcoms
xchg
test
outsl
clc
in
mov
mov
mov
loop
mov
jle
inc
pop
cmpsl
loopne
push
outsl
push
sub
call
jo
in
jno
ja
jb
mulb
sub
jle
ret
mov
ds
dec
mov
inc
sbb
sti
pop
data16
outsl
pushf
fs
hlt
test
nop
dec
jle
jns
mov
mov
xor
pop
xchg
mov
adc
cmc
mov
inc
int3
sbb
mov
add
nop
cmp
inc
cmp
xchg
add
arpl
sub
and
mov
inc
sub
in
pop
mov
sbb
popa
aad
xchg
mov
push
hlt
add
mov
ljmp
mov
lret
bound
fnstenv
icebp
mov
repz
divl
adc
and
xor
dec
cmp
pop
pop
fisttpl
pushf
add
insb
icebp
ja
mov
jns
je
and
sub
xchg
pop
pushl
scas
adc
pop
addr16
add
jge
sti
xor
adc
ret
lret
ret
in
lcall
push
sub
loopne
add
mov
cmp
add
or
aas
cltd
scas
cmpsb
and
cmpsl
mulb
fisubl
scas
xchg
inc
fsubs
les
sbb
call
and
mov
mov
out
out
stc
jns
test
out
push
sub
test
mov
xchg
lods
aam
lahf
or
xor
test
fs
mov
cmpsl
mov
cmp
test
add
mov
scas
call
push
aam
jns
pushf
jmp
pop
int3
fbld
fadd
aas
js
mov
arpl
sub
jge
imul
in
cmp
out
shlb
ror
fnstsw
push
or
cld
rol
scas
mov
leave
xchg
fdivs
scas
xchg
and
stc
ror
lea
adc
mov
pop
addr16
outsb
repz
popa
push
ret
in
out
ret
pusha
sbb
dec
test
outsb
lock
in
push
aaa
add
daa
loopne
out
cmc
jb
xchg
adcb
lds
fsubrl
es
jno
enter
and
loop
enter
push
mov
adcl
repnz
repz
jne
pop
pop
cmp
sti
outsb
pop
ljmp
data16
cwtl
data16
cmpsb
mov
clc
addr16
xchg
cwtl
hlt
and
cmc
sub
mov
mov
inc
sbb
mov
in
xchg
rcrb
sub
popf
and
pop
mov
fistpll
in
stos
or
or
rorb
cltd
fwait
movsl
adc
jl
stos
or
lcall
or
push
sbb
das
fbld
push
lcall
fst
xorl
movsb
push
test
sbb
fsubs
insl
mov
test
sbb
ljmp
mov
mov
mov
stos
cwtl
lock
ret
lret
mov
in
inc
or
xor
aad
fcompl
and
xor
lods
adc
outsl
mov
mov
in
sub
notl
pop
aad
into
jnp
out
movsb
int3
aad
fcompl
into
or
test
out
cmpsl
xchg
in
fstpl
push
pop
and
jl
xchg
rcl
sbb
std
scas
ljmp
cld
popf
jge
and
shll
cwtl
jg
sub
cmpsl
jl
mov
push
mov
les
inc
leave
mov
lretw
xor
and
loop
outsb
adc
mov
stc
stc
clc
xchg
dec
call
push
adc
adc
mov
ljmp
mov
cmp
les
shll
fdivs
int3
outsb
pop
pop
adc
xlat
test
pop
push
in
out
or
mov
add
and
movsl
hlt
icebp
inc
mov
in
shlb
outsl
rol
jno
sbb
stc
cmpsb
xor
in
xchg
mov
dec
jge
fidivl
and
push
mov
cwtl
repnz
insb
mov
push
mov
push
sub
jp
mov
lods
and
in
mov
scas
in
js
pop
add
jns
lods
inc
pop
xchg
cltd
cmpsb
xlat
pushf
sub
sbb
bnd
gs
jne
das
sbb
adc
stc
out
push
mov
movsb
test
ljmp
sti
ficomps
pop
mov
adc
inc
cmc
fcoms
add
jl
dec
loope
push
sub
dec
fbld
out
xchg
imul
cli
jp
je
daa
shrl
cwtl
jge
addr16
sub
imul
js
pop
sub
sbb
jl
cmpb
mov
mov
jno
cmp
push
mov
jo
inc
jbe
adc
sti
jle
clc
sahf
lds
cmpsl
cltd
stc
popf
sbb
xchg
mov
and
mov
jae
roll
push
xor
cmp
test
jge
xchg
or
inc
dec
jg
ljmp
or
or
cmp
rcrb
es
jge
cmp
not
out
and
cld
and
out
outsl
jno
repz
xchg
add
outsl
mov
rcrl
test
cmp
sti
xchg
xor
sahf
rcrb
push
jno
sbb
mov
adc
fwait
sbb
xor
pop
ret
fmull
push
dec
mov
pop
sub
insb
xchg
lret
and
mov
push
mov
and
dec
xorb
cli
scas
mov
fdiv
inc
ss
stc
or
jo
mov
das
add
aad
sarl
sti
stc
ja
sti
hlt
cmp
jmp
mov
add
push
xchg
push
push
mov
movsb
mov
rclb
call
nop
stos
lea
sub
adc
jns
fistl
jae
lcall
jae
dec
out
push
stos
int
push
ret
ja
ret
outsb
and
fdivrp
mov
jb
xor
or
cld
test
sub
inc
cs
sbb
mov
sbb
pushf
pusha
mov
jmp
xchg
mov
dec
adc
fidivs
insl
in
ret
xchg
outsl
or
std
and
add
stc
out
jl
xorl
xchg
mov
mov
repnz
mov
mov
and
mov
inc
fistl
mov
cmp
push
int
push
cmp
iret
and
push
out
push
xchg
je
adc
fs
push
rcll
mov
jge
cmp
fsubl
inc
stos
insb
iret
inc
mov
and
movsb
and
sub
xor
call
std
push
adc
or
mov
jecxz
iret
and
mov
mov
cmpsl
jo
cmp
inc
out
imul
cmp
lock
popf
adc
aaa
cmp
jb
lahf
test
cmp
shlb
mov
dec
loope
sbb
inc
xchg
in
cli
xchg
imul
or
leave
fisubrl
mov
mov
mov
push
out
scas
pushf
stc
lods
xchg
or
out
in
repnz
sub
mov
and
mov
test
aad
test
iret
mov
sub
repnz
mov
lods
stc
add
push
pop
adc
cmpsl
pusha
mov
mov
push
movsl
mov
outsb
inc
jle
sub
lret
arpl
cmc
or
mov
mov
and
aas
leave
or
lods
mov
lods
dec
ljmp
repz
sti
outsl
lods
cmp
cmp
mov
stc
jmp
mov
or
mov
icebp
cmp
pop
jp
je
lret
xchg
stos
mov
mov
nop
dec
stos
mov
ffree
adc
pop
cmp
push
or
inc
lock
jmp
lock
push
mov
adc
mull
sahf
jl
cwtl
rolb
dec
test
adc
mov
rol
adc
in
and
testb
daa
add
and
sub
sbb
dec
xchg
mov
int
fists
add
push
stc
js
pop
stc
ss
cmp
adc
xchg
sub
ret
mov
xor
xchg
fldenv
enter
js
ss
sub
cwtl
je
adc
ret
adc
push
cmp
jns
mov
and
pop
cmc
ds
mov
add
in
mov
sbb
lcall
pop
sti
lahf
in
mov
dec
out
jmp
sub
pop
inc
sahf
inc
or
pusha
or
cwtl
loopne
ljmp
dec
ja
xor
aaa
sbb
ss
in
roll
cmc
or
push
inc
mov
outsl
lods
mov
lret
sti
mov
insb
jae
mov
test
imul
movsl
lret
mov
addr16
push
lock
push
test
add
mov
push
rcl
scas
push
insl
cltd
faddl
lret
add
icebp
ljmp
jae
dec
mov
mov
cli
lea
inc
push
sahf
add
inc
push
cmp
inc
aam
inc
test
inc
xchg
sbb
mov
xor
cmpsb
imul
ds
aad
imul
jle
pop
icebp
or
scas
push
out
iret
xor
jmp
dec
pop
aas
lret
mov
xchg
movsl
mov
scas
mov
jae
mov
in
mov
ja
mov
sub
shl
es
xchg
repnz
mov
sub
aam
inc
pop
mov
push
mov
ljmp
fiaddl
dec
imul
mov
mov
jo
out
jge
xchg
mov
jmp
jns
leave
pop
insb
mov
in
stos
pop
mov
push
ficoms
lods
mov
std
cmpsb
mov
stos
dec
dec
and
sub
idiv
mov
and
jne
fs
inc
or
pop
testl
test
scas
jmp
data16
jg
movsb
xor
outsl
jle
sub
or
push
cmp
aam
pop
jo
rcrb
push
inc
into
pop
fdivl
cmp
adc
movsl
dec
mov
sub
movsl
pushf
dec
pop
jo
xchg
sbbb
mov
add
and
scas
idivb
movsl
xchg
adc
scas
gs
cmp
push
mov
rcll
nop
pushf
bound
scas
xor
mov
mov
lds
cmpsb
shll
push
adc
in
aaa
popw
adc
add
outsb
jae
jp
or
fsubl
mov
sub
xchg
mov
or
jle
adc
loop
inc
test
pop
pop
mov
shlb
mov
adc
out
sub
mov
dec
cs
inc
xor
scas
mov
inc
stos
in
xor
push
cmp
mov
js
inc
cmp
and
adc
mov
dec
lds
dec
mov
inc
pusha
dec
stos
lods
push
in
xchg
pop
iret
mov
sbb
cmpsb
testl
mov
sub
jle
fwait
sarl
out
mov
dec
xor
adc
repnz
push
ror
adc
or
movsl
and
push
mov
sti
jb
push
mov
shr
cld
icebp
pop
or
sub
mov
scas
mov
enter
stos
fstl
adc
cvtps2pd
mov
adc
dec
in
sbb
xchg
mov
pop
in
mov
mov
mov
stc
push
es
in
pop
mov
push
push
negl
sbb
data16
mov
cld
sub
les
stos
adc
dec
xor
mov
mov
push
pushf
sub
sbb
out
jo
ds
lock
mov
aas
je
paddsw
push
inc
icebp
fsubrl
mov
mov
out
fisubrs
adc
ljmp
mov
nop
cmp
mov
pop
rolb
in
mov
lahf
lock
mov
xchg
add
fimull
sbb
mov
push
cmp
dec
ljmp
ja
lods
jmp
xchg
add
push
call
xlat
mov
push
aas
sti
loope
into
pop
bound
mov
sub
or
imulb
adc
pop
mov
addr16
jp
lahf
sub
gs
xor
mov
iret
popl
dec
mov
mov
imul
icebp
das
fdivl
push
popf
stc
mov
mov
pop
push
fwait
mov
imul
popf
shrb
sbb
shll
hlt
xchg
clc
xor
insb
pop
inc
mov
fimull
cmp
add
iret
fwait
insb
subl
xchg
lea
loopne
adc
gs
xor
cmpsl
and
pop
ficoms
fiadds
cmp
cld
dec
jge
cld
and
aad
pop
cmp
mov
cwtl
or
add
lods
pop
cs
sub
cli
xlat
pusha
jo
mov
repnz
in
ror
ret
nop
fmuls
hlt
jp
adc
mov
lock
mov
test
fdivl
cmpsb
imul
push
cmp
lcall
pop
into
mov
cmpsb
pushf
mov
push
sub
lahf
cmp
testb
call
mov
sbb
fisttpll
mov
outsl
test
insb
fisubl
jl
sbb
shlb
xchg
sub
in
fisubrs
cmp
lea
out
lock
jmp
call
cmp
outsb
lock
push
out
cmp
out
mov
adc
loop
sahf
inc
fs
mov
add
adc
pop
imul
rcr
push
mov
aad
jo
push
test
mov
xchg
push
sti
push
sbb
add
lret
mov
fimull
mov
es
movsb
dec
test
lret
xchg
mov
lods
mov
cltd
push
aas
inc
jle
out
or
cmp
fisubrl
mov
test
rcrb
ret
cs
or
ficoml
jbe
clc
lock
jg
movsb
xor
test
adc
push
cltd
xchg
outsl
imul
xchg
or
sahf
mov
ss
call
scas
ds
adc
and
test
xchg
sbb
scas
jle
pop
in
test
sbbl
inc
arpl
lock
loopne
imul
idivl
test
fwait
sub
int
ljmp
insl
jl
jne
mov
push
fists
adc
mov
rcrl
xchg
cwtl
sbb
leave
out
cmp
cld
mov
out
pushf
repz
inc
mov
cmc
stos
sub
mov
out
sub
in
cs
jnp
adc
xchg
fmul
xchg
xchg
cmpsb
cmp
pop
jo
xlat
push
mov
adc
dec
aam
lods
in
add
or
imul
mov
cwtl
sbb
aam
add
lret
out
sbb
repnz
fisubrs
out
mov
in
stc
add
popa
idiv
lea
push
xor
cli
push
mov
cld
jmp
ss
icebp
add
add
nop
mov
push
std
fdivrl
mov
push
mov
dec
negb
inc
pop
mov
jno
sbb
outsb
jg
leave
outsb
jae
mov
repz
sub
movsb
mov
xor
cld
loopne
jle
mov
mov
loop
nop
xor
pop
in
or
ret
or
jo
or
pop
inc
stos
sub
add
lods
cli
push
push
dec
shlb
inc
insl
push
out
cmp
or
jns
mov
ret
push
sbb
push
fnstsw
outsl
scas
pop
push
in
mov
rcrb
sarb
cmpb
jle
jns
iret
mov
test
mov
hlt
out
dec
xor
loop
xlat
sbb
push
jp
flds
lods
adc
add
mov
mov
lcall
bound
test
adc
jb
xor
dec
fmul
stc
shl
jo
test
mov
push
sbb
lods
loope
jecxz
mov
xchg
or
aas
in
jae
out
dec
mov
hlt
cltd
push
movsl
bound
jmp
outsb
loope
test
or
or
sti
mov
dec
mov
xchg
cmc
repnz
addl
inc
jne
jbe
sub
outsb
push
xchg
bound
imul
xor
jle
scas
add
and
sub
and
stos
in
sti
test
loopne
out
mov
aas
dec
jp
in
jecxz
loopne
xchg
lea
pop
inc
nop
mov
jmp
mov
cmc
add
xlat
xor
int
sbb
dec
adc
jne
das
in
mov
inc
inc
push
dec
test
test
push
gs
pop
repnz
stos
jbe
js
insb
cli
push
insl
out
arpl
in
cs
cmp
negb
cmp
fsubr
mov
or
cmp
cmp
adc
insl
push
leave
sbb
push
add
movsb
inc
push
stos
leave
lds
leave
lods
and
cmp
lcall
pop
faddp
inc
fmull
cmp
add
jp
loope
cltd
fldt
sbb
into
aas
sbb
pop
cmpsb
imul
inc
cmp
int
or
jbe
push
sbb
ds
mov
adc
mov
cmp
shl
std
hlt
popa
in
mov
pop
sub
imul
notb
test
jbe
aas
ljmp
mov
lret
or
call
cwtl
fsubrp
jmp
push
pop
cmp
enter
jb
inc
test
jp,pt
lods
imulb
outsl
aam
mov
sbb
call
push
cmp
call
mov
inc
data16
rcr
mov
out
pop
dec
pop
dec
stos
in
cmc
enter
test
test
prefetch
adc
cltd
mov
pop
adc
adc
adc
push
xchg
mov
push
pushf
push
inc
mov
cmp
rorw
xor
and
pop
fildl
xchg
stc
push
add
dec
mov
pop
sbb
imul
dec
fmull
ss
xor
aam
xor
lahf
jg
loopne
adc
inc
stos
mov
movups
jecxz
inc
loopne
insl
mov
repnz
out
mov
mov
jmp
jns
call
cmp
in
clc
aam
hlt
pusha
jg
push
rclb
mov
mov
sub
inc
cmp
inc
ss
add
dec
shr
ss
mov
aam
adc
movsl
mov
aam
ret
xlat
rorl
lea
push
sub
sbb
jecxz
add
mov
or
push
xchg
cmp
call
gs
dec
mov
and
push
mov
shrl
int3
mov
sahf
jo
fists
push
sbb
add
jmp
into
iret
mov
xchg
stos
test
imul
cwtl
pop
sbb
xor
pop
jo
adc
into
cli
xchg
sbb
mov
mov
ret
jnp
cmp
xchg
sti
shr
xorb
mov
outsl
inc
dec
pop
or
pop
or
aad
div
pop
cmp
or
pop
or
xor
cmp
sub
or
inc
and
and
movsl
and
fs
or
sub
mov
sub
cmpsl
and
sti
out
and
xchg
dec
lahf
dec
int
and
sub
int
in
mov
push
sub
lods
insl
xlat
rcrl
movsb
mov
push
lret
ffreep
mov
insb
pop
fptan
cpuid
orl
cli
dec
pushf
or
mov
mov
mov
jp
jecxz
pushf
cli
mov
mov
cltd
dec
les
cli
jle
jmp
cwtl
xchg
and
in
sbb
pop
outsb
xchg
inc
push
cmp
fildll
add
jae
shrl
outsl
cli
dec
push
mov
pop
pushf
movsb
lods
dec
xchg
mov
pop
fidivl
enter
lret
mov
cmp
push
notl
sub
pop
fwait
stos
rclb
push
cli
cs
daa
inc
shlb
lods
call
push
jmp
out
sub
out
and
cmp
or
cld
mov
mov
leave
fucomip
insl
jmp
fildl
push
iret
call
insl
adc
jmp
les
xchg
adc
js
mov
clc
inc
jmp
or
pop
add
xlat
pop
call
jnp
mov
mov
sar
dec
inc
cltd
cmovns
push
inc
add
fmuls
push
mov
aam
cmp
push
daa
mov
pop
xor
inc
dec
ret
loope
subl
xchg
outsl
pop
sub
pop
cmp
xor
jb
mov
dec
sbbb
pop
fs
push
andl
enter
mov
leave
adc
sarl
dec
mov
shlb
mov
sbb
jb
sarb
mov
pop
inc
inc
sarb
clc
shlb
clc
cmpb
bound
imull
icebp
mov
ror
sti
add
adc
notl
pop
sub
shlb
xchg
imul
mov
mov
jo
dec
data16
pop
push
std
xchg
adc
imul
scas
pop
ret
ljmp
push
movsl
lret
or
mov
movsb
pop
add
aad
repnz
mov
in
jmp
cmp
scas
sahf
das
jae
mov
mov
iret
or
daa
xchg
outsb
xchg
stos
xchg
test
adc
or
push
ret
lods
sub
arpl
outsb
xorb
jge
sti
jmp
rorb
xchg
pop
fadds
fsubs
imul
sbb
jbe
movl
push
jg
adc
les
mov
and
adc
inc
and
push
stc
mov
add
cmpsb
xor
ljmp
push
inc
lock
fnstcw
xchg
dec
nop
lcall
sti
cmpl
jo
push
mov
mov
in
rep
stos
mov
or
pop
or
shrb
jecxz
movsb
push
inc
call
cli
inc
lcall
fdivrl
jb
lock
movsb
mov
adc
mov
in
rol
sbb
mov
fdivrp
push
dec
lcall
inc
or
pop
cmc
mov
pop
outsb
cmc
call
dec
outsl
or
popf
lahf
mov
push
test
fmuls
stos
in
xor
mov
push
mov
sub
pushf
nop
out
popf
rclb
ret
fisttpl
jecxz
adc
adc
mov
popa
lcall
movsb
add
dec
popa
daa
mov
daa
int
inc
or
jp
sub
leave
adc
adc
stos
inc
dec
insb
icebp
cmp
sub
push
cli
pop
push
ret
js
sub
test
mov
push
sub
fsubl
movsb
add
aam
xor
in
jnp
sub
adc
imul
inc
iret
xchg
adc
mov
lock
jno
pop
rorb
fcoml
ljmp
loopne
cmp
adc
int
xchg
mov
xchg
sbb
lods
imul
imul
sbb
push
jb
sahf
mov
enter
mov
push
cmp
in
movsb
cmp
mov
pusha
pop
push
push
movsl
fldl
in
idivb
xchg
sahf
cmp
in
repnz
adc
mov
adc
jmp
ficompl
cmp
mov
lret
xchg
cmp
pslld
les
or
in
mov
pop
dec
je
out
ret
pushf
and
or
int3
js
jp
ret
cmp
js
or
mov
cmp
mov
pushf
lcall
lret
idivl
sbb
xor
adc
fldt
push
stc
jge
fs
out
cwtl
fstl
cmpps
cs
popf
mov
ljmp
add
out
inc
outsl
insl
pop
into
cld
js
mov
nop
sbb
aas
movsl
pop
ficompl
test
mov
dec
repnz
repz
or
rcl
scas
sarl
or
orb
sti
sub
pop
bound
and
mov
decb
push
negb
jp
jns
repnz
imul
sub
stos
or
cli
notb
fists
test
stc
mov
arpl
scas
and
test
xor
mov
jbe
lods
shlb
cmp
mov
mov
xor
cmp
push
mov
insb
xor
insl
ljmp
in
mov
nop
notl
addr16
daa
icebp
mov
rorl
xor
js
xor
imul
sti
inc
xchg
in
rol
or
pushl
loop
nop
mov
or
cmp
or
sub
test
and
sbb
xor
sub
xchg
jmp
ds
pushf
filds
rcrb
mov
mov
leave
iret
jb
shlb
cmp
xchg
stc
ffreep
xor
jo
sbb
out
andb
out
push
incl
lret
std
sbb
inc
testb
lea
ret
push
sub
aaa
fsubl
jp
nop
pop
xchg
mov
add
shrl
fwait
out
lcall
mov
inc
pop
outsl
test
arpl
loope
popf
nop
cmp
add
mov
mov
imul
pop
loop
mov
mov
hlt
adc
addr16
fmulp
imul
push
je
xor
faddl
push
sbb
pop
mov
imul
sub
mov
xchg
pop
insb
mov
jne
mov
in
mov
pop
out
sti
jae
cmpsb
into
jl
loop
add
in
frstor
ss
sbb
mov
mov
lcall
out
jo
or
mov
jns
xlat
jp
cmp
or
cmpsl
test
sub
fstpl
mov
xchg
stos
push
mov
push
shl
inc
or
mov
outsb
loope
mov
insb
xchg
push
scas
outsl
mov
out
pushf
add
fimuls
imul
pop
add
in
cmp
in
inc
mov
call
add
insl
mov
ss
mov
lret
cld
rol
mov
jmp
sbb
mov
pop
cmp
out
lcall
ljmp
mov
out
lret
es
mov
cmp
enter
mov
jmp
jp
lret
adc
push
dec
ret
call
push
fldenv
ljmp
cli
pop
adc
and
ds
sbb
inc
or
out
push
dec
adc
mov
call
out
cmp
jmp
mov
test
mov
roll
mov
dec
jnp
jg
mov
stos
movsb
pop
xchg
adc
stos
cmpsb
push
mov
loopne
adc
nop
aaa
cmp
inc
mov
fucom
jl
pop
fidivl
mov
mov
insl
mov
ja,pn
mov
jg
jns
data16
aam
js
in
cld
lods
and
or
and
test
rcl
mov
pop
cmp
test
ja
jbe
loop
push
cmc
fidivrs
pop
scas
lock
shlb
js
jno
jns
jo
loop
dec
and
notl
popf
cmp
jo
inc
lods
and
mov
inc
out
in
mov
rolb
mov
divb
mov
mov
scas
sbb
loope
pusha
pop
fwait
push
sub
jp
xor
ljmp
aam
lea
adc
ss
ret
cmp
sbb
bound
jp
adc
push
fists
sbb
lods
jg
daa
inc
aam
mov
pushf
mov
imul
aam
add
inc
mov
sahf
push
or
push
stc
dec
inc
mov
cld
dec
pushf
mov
adc
xchg
jae
pop
fistpl
mov
mov
insl
int3
cmp
cltd
mov
imul
mov
popa
mov
ljmp
data16
movsl
ret
push
sbb
ret
lret
leave
xchg
xor
adc
fnsave
push
push
jns
dec
pop
into
ret
cmc
into
clc
inc
jle
sub
inc
jae
lods
enter
and
pop
mov
cwtl
mov
sub
pop
push
jecxz
add
mov
daa
stc
scas
and
cmp
mov
push
jne
cs
dec
clc
sar
mov
gs
xor
call
in
fwait
adc
int
jb
hlt
jp
push
and
int3
out
loop
jns
or
inc
in
fmull
test
push
notb
aas
push
lahf
dec
or
xchg
adcb
jo
das
stos
sarl
xchg
mov
inc
ja
mov
add
jnp
adc
mov
mov
inc
and
div
cmp
inc
push
shll
scas
xchg
add
pushf
mov
imul
mov
fidivs
jl
pushf
sub
in
xchg
mov
xchg
loope
xchg
lods
sub
mov
test
aad
test
or
cmp
into
jnp
and
leave
xchg
pushf
sub
inc
mul
lea
mov
and
imul
jns
xlat
jmp
mov
add
lods
repnz
jnp
std
icebp
lea
push
outsb
leave
lds
pop
mov
andb
punpckldq
es
xor
mov
xor
adc
push
jne
cwtl
adc
icebp
insl
repnz
outsl
inc
shrl
lcall
cltd
cli
andb
cmp
shlb
adc
aad
dec
insb
sbb
les
clc
cmpsl
or
mov
lods
cwtl
dec
mov
addb
mov
jle
cmpsb
adc
cltd
mov
push
fnstcw
fsts
mov
lods
out
jecxz
insl
pop
and
mov
mov
or
leave
popa
add
scas
push
and
addb
ret
or
test
add
fistpll
ficoms
push
fdivl
or
testb
in
hlt
adc
push
sbb
push
xor
or
outsl
popf
push
mov
sti
lea
inc
push
sub
xor
xchg
pop
and
pop
dec
push
movsb
mov
sbb
cld
jl
in
movsb
adc
jno
push
sbb
cltd
mov
cs
addr16
ljmp
inc
mov
insl
and
xor
fisubrs
jl
sti
xchg
movsb
sbb
in
push
fistpll
dec
adc
jecxz
lea
imul
cltd
into
roll
cmp
popf
loope
push
jmp
jnp
pop
xchg
sbb
mov
addr16
std
jle
int
jno
outsb
les
and
repz
jne
enter
xor
dec
bound
mov
mov
sbb
loope
push
cmpb
mov
out
mov
pop
lods
mov
xchg
jmp
sub
mov
adc
lahf
hlt
jmp
inc
jmp
daa
fbld
push
push
fwait
pop
cmp
mov
mov
xchg
ja
mov
incl
negb
pop
and
cmp
xor
lods
sbb
stos
rolb
std
aam
insl
ss
movsl
sarl
adc
faddl
aas
lods
enter
test
sbb
js
jl
ret
loop
movsl
pop
jle
xor
ficomps
add
push
movsb
stos
bound
pusha
and
mov
and
mov
lret
adc
ljmp
push
cmp
inc
mov
cli
cltd
mov
jecxz
sti
sub
sub
cmp
mov
pop
movsl
pop
xchg
sub
mov
in
out
cli
dec
lock
cwtl
nop
mov
xor
jle
lcall
outsb
mov
and
jle
sub
lret
push
jmp
lcall
sbb
jg
mov
repnz
cmpsb
fsubrl
push
and
xor
cli
mov
push
jmp
mov
mov
imul
and
lret
mov
adc
popl
push
shll
xlat
mov
imul
in
push
fucomp
call
push
into
faddl
add
dec
leave
aaa
repz
pmaxub
lods
add
fcomps
arpl
lods
sub
aad
mov
sbb
loop
mov
jmp
notl
jnp
jae
jb
popf
dec
mulb
fistl
idivb
push
adc
mov
in
clc
adc
inc
jg
inc
scas
mov
je
sbb
pushf
sahf
mov
je
in
or
outsl
mov
adc
adc
push
inc
movsb
xchg
nop
aam
lock
addr16
lock
data16
and
fisubl
outsb
jo
adc
or
in
adc
xchg
jae
fistl
mov
pop
ljmp
and
dec
flds
jnp
out
xchg
and
arpl
mov
or
cld
loopne
hlt
mov
adcl
icebp
outsl
sti
outsb
and
in
loope
and
adc
jl
dec
scas
add
test
jecxz
xchg
faddp
jne
stos
xchg
xor
sub
mov
sti
std
adc
fidivrs
decb
pop
sub
inc
xor
in
mov
imul
mov
inc
xchg
dec
and
add
insb
lock
das
xchg
mov
int3
das
in
out
sbb
test
leave
std
imul
adc
add
fdivrs
hlt
sub
movsb
jg
das
int
aas
pushw
popa
sahf
repz
repnz
pop
mov
lods
sub
rclb
sub
lock
push
or
and
in
movsb
scas
jne
pop
jo
insl
psubusb
adc
test
mov
push
cld
and
cmp
aas
sub
cs
pop
into
mov
das
fiadds
sahf
jno
sbb
into
outsb
xor
lods
aam
repnz
or
scas
insl
into
mov
sub
inc
sub
jnp
sub
and
and
ss
stos
icebp
add
loop
mov
jnp
scas
mov
scas
jo
dec
mov
out
push
stos
and
addr16
in
sbbl
into
test
sar
scas
in
adc
outsl
repnz
pop
loop
hlt
fsubrl
idivl
lds
xchg
and
repnz
cmpsl
jle
test
cli
notl
jne
mov
adc
or
xchg
loop
xchg
shlb
xchg
or
adc
jp
sbb
pop
gs
rclb
pop
inc
mov
sub
mov
ljmp
sbb
add
mov
shrb
pop
into
pop
popa
pop
sbb
push
pop
lret
cmp
das
ret
mov
mov
mov
imul
inc
add
or
pop
ret
jp
out
add
xchg
in
mov
outsb
loopne
fwait
lea
dec
les
xchg
lock
aad
dec
dec
test
and
movsb
int3
and
mov
jle
xor
fidivrl
jmp
data16
pop
mov
imul
push
or
stos
push
lods
cli
icebp
mov
cmpsl
sub
xor
lcall
adc
mov
push
bts
neg
outsb
inc
mov
dec
movsl
pusha
mov
rcrb
loopne
xchg
sub
dec
and
icebp
leave
repnz
cltd
nop
popa
js
call
sbb
xchg
andb
cld
sarb
in
cmp
xchg
xchg
mov
repz
fsts
lods
mov
add
repnz
and
sti
outsl
sbb
pop
push
icebp
jmp
cmp
mov
lea
insb
loopne
gs
xor
cmp
sti
adc
inc
mov
daa
dec
or
in
std
push
jl
subl
or
jmp
addr16
stos
ja
stos
cmp
pop
sbb
outsl
sahf
es
ret
sub
sbb
in
and
and
rcll
out
scas
pop
cmc
push
sub
call
sub
icebp
scas
pop
inc
xchg
or
and
repnz
mov
ljmp
stos
in
sub
call
mov
insl
and
xlat
xchg
and
insb
cs
inc
pop
inc
imul
jns
icebp
cli
in
xor
jmp
inc
les
pop
pop
rcll
mov
inc
mov
fmuls
jg
xchg
push
add
sbb
sahf
jbe
mov
mov
loop
jnp
ljmp
fnsave
push
dec
push
int3
mov
mov
xchg
sbb
sub
loop
pop
movsb
pop
jmp
mov
xor
jle
cmovno
stos
or
ljmp
cmp
mov
andb
movsl
cld
fsubp
in
mov
call
loope
mov
out
std
or
out
push
lcall
stc
jecxz
push
insb
ret
hlt
cli
lock
scas
pop
repnz
push
dec
jae
sbb
push
aad
push
push
inc
mov
mov
movb
cwtl
in
adc
movsb
jp
leave
sar
sbb
ja
cmc
pop
in
jg
shrb
xchg
sbbl
lock
sub
jne
insb
jno
pop
mov
sub
sbb
in
in
test
adc
inc
or
mov
jnp
das
jp
xor
lock
adc
adc
pushf
mov
inc
stc
out
inc
mov
or
push
or
test
outsb
test
xor
test
xchg
jecxz
xchg
xchg
in
add
mov
mov
xor
and
arpl
dec
mov
xchg
xor
mov
mov
gs
xchg
dec
stc
push
loop
arpl
cmp
cli
sub
sbb
jns
jg
ret
xlat
movsb
inc
test
mov
sahf
rcl
jns
push
hlt
sub
test
sahf
jb
pop
cmpsl
push
fdivl
mov
push
sbb
lret
cmp
sbb
ljmp
cwtl
jnp
bound
int3
dec
fsubrl
xchg
lcall
pop
idiv
push
scas
pop
lock
xchg
xchg
cld
dec
cli
mov
sub
mov
jl
mov
sbb
mov
lods
sub
int
push
daa
dec
insb
xchg
jo
stos
aas
icebp
stos
and
int
mov
adc
lea
xchg
in
adc
dec
xchg
loopne
enter
fiaddl
push
add
add
push
add
cmp
add
cltd
sub
pop
adc
push
pop
cmpsb
mov
jle
fdivl
test
pop
repnz
in
clc
adc
sub
cs
nop
cmp
xor
mov
jp
push
sahf
push
and
iret
das
push
mov
xor
jge
loop
pop
pusha
into
ss
xchg
lds
jecxz
xor
sub
inc
ja
mov
push
orb
out
mov
push
std
dec
outsb
sbb
cwtl
jne
cwtl
and
loope
add
pop
adc
push
push
push
add
mov
scas
add
loope
bound
lahf
add
pop
sti
cmp
ror
in
add
ret
push
mov
fcoml
ss
loop
daa
and
fisttpll
mov
rclb
mov
sbb
fimull
scas
xchg
call
adc
fs
outsl
imul
add
sub
arpl
cli
and
cmc
movsb
rclb
mov
mov
shll
movsb
aam
xlat
push
cmpsl
clc
loope
mov
aas
test
dec
xchg
inc
push
pop
adc
in
dec
jl
pushf
lret
cs
out
ss
fsubrs
xchg
call
enter
lock
lods
out
sbb
push
aas
ficompl
mov
mov
pop
jmp
es
add
xchg
or
hlt
push
xchg
mov
in
aam
add
push
xacquire
aaa
int
mov
jne
sbb
lcall
and
fisubrl
or
mov
pushl
rclb
mov
mov
ds
push
ret
pop
xlat
movsl
test
jno
mov
push
jnp,pt
icebp
and
mov
mov
pop
fistpll
ret
mov
cli
mov
sub
out
sub
insl
insb
dec
mov
mov
mov
mov
mov
pop
mov
rcrl
mov
jae
cs
jb
or
daa
out
jp
lea
jo
push
call
aaa
jge
test
faddp
xrelease
lret
add
aas
or
dec
lcall
adc
add
jge
add
sub
movsb
inc
mov
lods
lods
and
scas
fstl
cmpsl
mov
mov
sbb
or
mov
cld
mov
adc
xchg
pop
fsubl
sub
in
jp
push
add
out
mov
out
das
daa
sar
pop
adc
and
in
sub
out
icebp
inc
inc
xor
loop
push
inc
data16
xor
push
inc
jno
xor
adc
inc
in
mov
add
or
scas
popf
mov
or
pop
xchg
cmpsl
in
outsb
ret
push
in
xchg
fucomp
mov
sbb
mov
mov
adc
divl
xlat
jo
sbb
xchg
aaa
insb
notl
push
inc
mov
xchg
bound
aad
add
mov
imul
stos
aad
push
pop
sub
mov
les
popf
push
scas
adc
adc
orl
jg
lods
mov
mov
leave
lock
push
mov
cli
cmp
xor
je
es
mov
imul
iret
stc
insb
or
xchg
gs
jecxz
mov
out
pop
cmp
repnz
notl
mov
sub
push
lds
addb
loop
push
push
push
pop
fs
sub
cmp
xor
imul
dec
xchg
fxch
stc
pop
mov
cld
jl
mov
cmp
sbb
sbb
mov
sub
sti
cvtpi2ps
cmp
mov
sub
test
fcoms
lods
mov
adc
push
sbb
dec
push
cmp
xor
out
xchg
and
sub
mov
lods
js
fadds
repz
mov
dec
aas
in
sub
scas
flds
fcmovnbe
pushf
mov
push
pop
clc
stc
sarl
xlat
cwtl
dec
je
sub
xchg
ret
movsb
dec
cmp
loopne
arpl
pop
enter
adc
icebp
jmp
idivl
mov
jp
mov
imul
scas
inc
sub
adc
enter
andb
or
xchg
je
pop
std
clc
test
ljmpw
sbb
push
fsubr
lods
fucomp
dec
jg
faddp
in
fcomp
cmp
loopne
mov
rcrb
aam
push
fidivrs
insb
es
sbb
fistpll
iret
mov
ljmp
not
arpl
lret
pop
mov
lock
js
nop
sti
bswap
cmp
mov
out
mov
jbe
inc
fistl
outsl
mov
mov
insb
bound
mov
or
mov
add
nop
out
arpl
pop
mov
add
fnsave
leave
or
sub
sbb
mov
or
neg
and
in
pushf
mov
and
stc
mov
push
addr16
ds
push
mov
jmp
jg
xchg
jno
mov
fsubrs
int
lret
sub
fcomp
insl
jo
and
add
ja
test
in
mov
mov
in
sbb
mov
es
xchg
es
add
subb
xor
pushf
fbld
clc
pop
push
xchg
mov
push
in
imul
in
cmp
cs
shl
and
sbb
leave
push
dec
inc
cmp
mov
jg
aas
mov
cmpl
pop
sbb
popf
mov
mov
aam
mov
repnz
xlat
ljmp
mov
push
or
loop
sub
repz
mov
test
movsb
mov
cmpsb
imul
add
push
xchg
ror
and
adc
mov
in
sbb
mov
push
sub
xlat
insl
and
dec
lea
inc
out
lods
and
test
in
into
mov
jno
js
test
stos
js
mov
dec
push
push
push
sub
jmp
insl
arpl
xor
adc
sysexit
xor
jno
movsl
std
jg
xchg
fwait
lret
stos
mov
stos
or
rolb
mov
sti
mov
or
push
jae
dec
test
sub
lahf
stos
inc
xchg
inc
data16
pop
xor
mov
je
cmpsl
testl
daa
ja
lds
or
mov
lahf
std
enter
or
and
shr
inc
daa
das
aam
or
xchg
stos
adc
fcmovnbe
in
out
scas
mov
test
xchg
inc
mov
cmp
mov
pop
xchg
test
xor
enter
jge
and
cld
subl
divl
inc
cmpsl
push
out
add
jae
add
cmc
xlat
pop
loop
pushf
mov
insl
out
popa
fs
push
and
push
mov
pop
mull
xor
push
push
sub
scas
and
jge
es
dec
or
mov
and
sbb
int3
dec
pop
cmpsb
popa
lea
fdivl
adc
sbb
pop
push
jmp
dec
pushl
mov
sub
loop
xchg
inc
testb
push
insl
xchg
push
xchg
iret
xchg
repnz
loopew
stc
shr
sub
mov
mov
mov
int3
and
push
movsb
sub
test
pop
scas
into
lods
jae
scas
lds
push
push
in
xchg
ljmp
mov
sub
cmpsb
inc
shrl
movsl
lret
xor
js
rol
cmp
sbb
fisubrs
std
imul
jl
repz
jle
jmp
insl
cwtl
lods
sub
loopne
push
repnz
orb
xchg
test
add
xlat
xchg
mov
pop
cmp
dec
mov
add
sarl
inc
std
iret
loopne
mov
fsubl
mov
int3
jne
sti
cwtl
push
xchg
xor
addr16
jmp
adc
and
lods
scas
mov
incb
in
inc
sub
adc
mov
dec
adc
sbb
sub
push
jb
sub
les
insl
sbb
cmp
movsl
cwtl
and
push
pop
dec
pop
insb
sub
inc
mov
adc
lock
and
inc
scas
jl
mov
jb
pop
add
repnz
pop
add
lcall
addr16
jle
pop
jl
push
mov
out
sub
cmpsl
push
movl
jecxz
loope
push
sub
mov
out
jb
mov
mov
dec
add
pop
sub
adc
mov
dec
in
mov
mov
jl
ret
push
dec
shrb
in
sbb
movsl
pop
mov
stos
pop
test
stc
and
scas
repz
dec
jmp
or
lds
sub
test
dec
mov
addb
jb
push
pop
imul
push
test
jge
sti
push
stos
ret
adc
js
dec
fisubrl
data16
insl
enter
sahf
jno
sbb
fadd
push
xlat
mov
call
cltd
in
int
loopne
mov
mov
cli
add
filds
shrb
in
xchg
cli
dec
pop
dec
mov
fsqrt
mov
flds
lcall
ss
adc
loope
cmp
ss
nop
mov
lret
inc
mov
shrb
mov
and
or
inc
mov
rdtsc
xacquire
mov
cmp
mov
outsl
xchg
rcll
rorb
xchg
call
mov
sbb
movsb
mov
mov
mov
xchg
lds
push
ret
push
push
cmp
and
nop
mov
lods
or
inc
mov
imul
insb
xchg
cmp
mulb
mov
xchg
subl
call
cmp
pusha
dec
mov
jne,pt
mov
cmp
in
shrl
mov
pop
xor
pop
mov
scas
icebp
decl
fdivr
cmpsb
inc
test
dec
mov
in
test
mov
arpl
icebp
jle
shlb
decb
lret
inc
xor
das
cmpsb
shr
push
xchg
lock
repnz
aad
mov
stos
jae
data16
xor
stos
inc
xchg
fiaddl
lcall
adc
cmp
out
in
jns
imul
mov
and
sbb
push
dec
and
sbb
sbb
ret
cld
push
and
js
push
mov
or
inc
jns
ds
mov
adc
fstpt
ljmp
add
adc
roll
cltd
push
jmp
cltd
clc
in
loop
sbb
cmp
data16
xchg
rol
pop
aaa
mov
in
mov
in
in
jnp
jge
mov
or
ret
sub
add
fisttps
scas
pop
cmp
int
mov
sub
xchg
pop
add
lahf
cs
out
repnz
sub
test
dec
cmp
adc
cli
mov
jne
or
es
scas
jl
repz
leave
mov
rorb
dec
jbe
or
test
push
mov
mov
ret
or
aam
enter
jmp
push
cltd
cli
push
cmpsb
nop
mov
xor
stc
or
or
sub
cmpsl
fdivp
push
cld
jg
or
mov
xchg
jmp
xchg
inc
stos
jnp
pop
out
rorb
inc
pop
dec
push
cmp
mov
and
mov
nop
xchg
and
xor
sbb
sub
repz
xchg
pop
lock
stos
jge
sub
jge
xor
lcall
mov
outsl
sbb
mov
stc
fs
add
aad
cltd
or
xlat
rolw
add
in
add
xchg
ljmp
hlt
aas
jp
push
pop
jmp
outsl
notb
cmp
mov
out
loope
xor
fisttpl
subb
inc
jmp
cld
ja
out
ds
loop
mov
inc
insl
enter
xchg
rcrl
scas
mov
fmuls
test
nop
inc
std
inc
testl
xchg
add
pop
outsl
lock
fidivs
push
sub
aad
fcmovne
loope
out
add
dec
loop
mov
mov
push
iret
cmc
sub
ret
push
bound
cmpsl
loopne
int
mov
mov
lods
or
cmp
cli
mov
mov
loopne
fwait
cmpsb
hlt
rclb
and
mov
pop
mov
outsb
mov
sar
jae
xchg
jnp
negl
xchg
jb
pop
mov
and
call
stc
cmp
lods
out
add
int3
inc
jecxz
jb,pt
and
lret
push
int
outsb
adc
inc
lock
call
or
repz
xor
icebp
test
jno
cmp
xchg
adc
adc
xor
xchg
int3
and
mov
mov
lods
pop
cmp
mov
pop
dec
fimuls
inc
xchg
mov
jp
xchg
or
mov
cwtl
outsl
ret
push
sbb
inc
add
adc
icebp
lea
imul
lret
add
cmp
mov
sub
push
mov
insb
into
mov
repnz
loop
mov
pop
sub
push
fildll
push
lret
in
pop
add
inc
mov
cltd
lret
lahf
push
rolb
mov
rclb
xchg
adc
call
test
enter
inc
fildl
iret
and
mov
scas
push
je
cs
outsl
sahf
in
pshufw
xor
pop
fwait
test
cmp
or
fwait
mov
cmp
cmpsl
sub
sbb
jno
push
and
dec
inc
fsubl
jb
mov
loope
adc
pushl
mov
aad
popa
adc
out
jl
fdivrl
insb
sbb
mov
or
pop
jg
jo
or
cmpsb
movsl
loope
adc
push
cltd
fs
sti
push
xchg
pop
cltd
xchg
fmuls
out
push
test
pushf
fcoml
mov
mov
cwtl
jnp
lret
stos
mov
inc
cmc
xlat
je
pop
fs
stos
jne
mov
sub
jmp
sbb
mov
adc
cld
sub
dec
test
mov
call
push
dec
in
shlb
lcall
sub
pop
lods
push
ja
push
pop
into
fnstcw
xchg
or
mov
cs
mov
int3
inc
rolb
hlt
ljmp
adc
sbb
sbb
std
pop
scas
es
xchg
cmp
ljmp
push
mov
sahf
sbbb
repnz
lea
ljmp
or
push
test
rorl
push
cld
fmuls
inc
xor
xlat
sbb
xchg
out
loopne
nop
scas
ljmp
sarl
jno
xchg
push
add
shll
inc
xchg
mov
lock
mov
adc
sbb
mov
cmp
xchg
sub
xchg
or
add
xor
mov
sub
push
repz
pop
fldl
cwtl
mov
jl
mov
scas
int3
mov
xorl
ds
lret
cmp
mov
mov
mov
daa
cmpsl
jns
pop
xor
ds
jl
cwtl
mov
in
mov
insl
fistpll
clc
movsb
imul
pop
pop
mov
loopne
cwtl
xor
jo
ss
inc
cmp
in
jne
mov
fcoms
cld
sarb
jno
mov
jns
mov
out
xchg
out
loopne
mov
xchg
sub
dec
test
insb
mov
adc
pop
mov
dec
xchg
mov
sbb
fneni(8087
cmp
and
adc
sahf
cli
push
and
mov
pushf
daa
jg
in
nop
dec
sbb
jno
push
cmp
popf
or
lods
jge
pop
out
mov
imul
sub
cli
dec
dec
dec
fldt
adc
sub
aad
movsb
add
mov
lock
lds
cmp
lock
stos
arpl
mov
std
test
push
jno
cmp
in
cmp
inc
data16
cld
lods
pushf
sarb
pop
mov
aad
ss
test
and
xchg
inc
cwtl
mov
imul
idiv
sti
out
loopne
out
jae
cmp
and
out
adc
jbe
ds
stos
sarb
mov
and
mov
adc
mov
push
in
loope
test
sub
and
xchg
dec
mov
mov
adc
mov
aad
mov
cmp
sub
lret
gs
sahf
int
lret
push
sub
push
adc
data16
push
adc
testl
shlb
popf
mov
aas
push
xchg
cmp
rorb
rcr
aas
imul
int3
push
jg
andl
push
or
pop
jge
xchg
scas
dec
adcl
or
icebp
push
pop
xlat
fwait
loopne
testl
mov
es
cld
cwtl
pop
jne
mov
out
test
insl
and
inc
sar
mov
push
lret
leave
test
mov
fnstsw
pop
rcrl
push
or
mov
test
add
add
or
das
negl
lcall
mov
adc
fcomps
adcb
pop
outsl
lock
sbb
pop
adc
or
clc
mov
mov
popa
jns
in
pusha
inc
cltd
in
adc
iret
cmp
data16
dec
mov
popa
repz
adc
cs
out
frstor
mov
mov
shll
mov
inc
or
jecxz
in
and
fadd
sbb
lods
and
decb
sbb
adc
ja
into
lods
xor
mov
ss
dec
add
lcall
ret
shr
xchg
or
adc
dec
std
lods
lds
and
jno
or
and
fcmove
xchg
outsb
sub
and
aaa
je
push
or
pop
inc
pop
mov
aaa
data16
dec
out
add
xchg
test
xchg
mov
and
fwait
xorl
inc
lods
std
test
mov
xor
out
add
rolb
inc
lahf
or
in
push
fdiv
mov
push
adc
addb
jmp
mov
mov
adc
scas
mov
and
and
pop
mov
sub
fdivrp
mov
sub
push
js
add
pop
add
add
loope
sti
xchg
pusha
dec
test
loopne
dec
mov
pop
sbb
push
loop
cmp
stos
in
inc
jae,pt
aas
inc
cwtl
fdivl
daa
mov
insl
mov
leave
into
xchg
test
or
fs
leave
ds
ds
adc
push
push
mov
lds
call
mov
outsl
loop
shll
adc
mov
cmp
fwait
loop
or
or
mov
pushf
ret
shlb
repz
cmp
sub
sub
adc
add
jge
inc
push
shrb
lock
sub
push
pop
ficoms
fs
mov
and
fildll
or
adc
pop
dec
pop
ret
jmp
push
in
mov
data16
mov
call
scas
mov
adc
jb
rcrb
loopne
mov
decb
inc
inc
movsb
cmp
imul
shl
enter
jne
mov
es
stos
loop
mov
and
not
clc
lret
in
fs
inc
stos
sar
ret
testl
mov
mov
in
push
ret
mov
cmc
vmread
mov
scas
xchg
mov
push
pop
sbb
insb
xor
test
pop
mov
test
add
cmp
ret
stos
sbb
or
and
aas
loope
jl
js
fimuls
or
push
xor
lea
pop
jmp
push
stos
push
pop
test
in
ja
out
jnp
addr16
sbb
aaa
mov
rclb
mov
xchg
stos
lret
test
clc
mov
or
insl
fcomi
cs
sarl
xor
icebp
push
mov
xchg
push
sub
test
mov
in
push
in
adc
out
negb
ret
push
js
arpl
push
mov
mul
cmp
scas
sub
movsl
testl
push
mov
push
mov
inc
mov
jg
xchg
aad
inc
jle
pop
dec
inc
mov
lcall
fcoml
cli
fnstsw
pop
js
jmp
das
inc
sub
jno
push
gs
ficoms
stc
jp
mov
push
sti
xchg
icebp
shlb
adc
hlt
xorb
mov
pushf
or
ljmp
mov
push
and
js
je
mov
ljmp
push
sub
test
clc
movsl
xchg
or
sbb
sbb
mov
and
lods
pop
pop
test
cmpsb
sbb
dec
push
sti
sub
mov
pop
sti
mov
mov
leave
mov
mov
push
jmp
cld
mov
cwtl
dec
adc
inc
sub
stc
adc
nop
cmovns
ljmp
notb
jmp
cltd
jns
jge
pushf
mov
lret
sub
clc
jecxz
test
ret
test
int3
pop
mov
shrl
xchg
js
jbe
sub
insb
stc
cwtl
repnz
jecxz
loope
xor
jle
add
icebp
inc
adc
in
sbb
orb
push
ret
lahf
push
mov
ds
movsl
cltd
dec
out
jo
xor
cs
lcall
repz
push
lods
mov
push
in
mov
int3
rorb
mov
in
rolb
data16
xor
shll
dec
sub
mov
or
cmp
hlt
sti
adc
mov
xchg
loopne
jecxz
iret
mov
or
loop
pop
lahf
push
mov
clc
sarl
insb
ljmp
loope
mov
nop
int3
xchg
lahf
dec
sub
xlat
dec
out
or
cmc
sbb
and
adc
add
loope
popa
mov
mov
push
inc
jl
sti
std
jle
dec
sub
push
dec
ljmp
mov
pop
loope
imul
cmp
jae
popa
pop
loope
push
and
mov
mov
out
push
mov
sub
lcall
xor
mov
pop
jecxz
pop
cmpsl
pop
sub
pop
je
dec
mov
cltd
adc
fsubrl
rorl
xor
aad
push
cwtl
xor
adc
out
out
shll
mov
aas
ret
push
cli
mov
addr16
outsb
idiv
inc
es
mov
paddd
mov
mov
fdivrs
add
dec
imul
add
push
sbb
aaa
mov
rorb
mov
insl
sub
mov
insl
xchg
int
or
cmpl
adc
test
outsl
test
loop,pn
push
adc
aam
insl
jo
inc
or
movsb
jnp
mov
aam
ss
adc
popf
int
movsl
testb
dec
ds
mov
fcompl
pop
jmp
inc
in
push
mov
aaa
jge
push
imul
push
enter
pop
sub
sarb
es
and
add
aam
mov
dec
jns
adc
scas
loopne
push
jl
out
stos
pop
sti
dec
pop
pop
mov
jbe
mov
outsb
lret
rcr
or
lret
popa
and
mov
hlt
mov
aam
call
cld
xor
fwait
shlb
xor
sbb
ds
imul
mov
aas
test
rcrl
mov
mov
testb
inc
and
mov
add
fimuls
loopne
nop
loopne
enter
scas
scas
xchg
lods
scas
sub
sub
push
or
nop
imul
hlt
sbb
sti
in
cltd
adc
repnz
fldenv
mov
leave
fbld
inc
dec
and
nop
or
push
test
push
popa
out
jb
sub
fmuls
ret
test
enter
movsb
mov
pop
cmc
or
test
mov
push
ja
cmpl
out
frstor
or
imul
mov
lock
xchg
push
mov
les
stc
jb
jecxz
jne
jl
pop
push
mov
test
mov
out
ljmp
mov
cmpb
xchg
mov
xlat
mov
mov
and
inc
lods
inc
mov
out
lret
or
jp
sub
arpl
mov
dec
and
push
stos
in
out
jmp
adc
pop
dec
mov
xchg
lcall
push
std
test
test
jle
cltd
push
pop
push
xor
inc
push
mull
and
sub
fscale
and
fs
sets
mov
loope
cmp
pop
mov
and
xchg
mov
cmp
push
pop
push
nop
inc
or
dec
sub
xor
xchg
pop
outsb
mov
mov
loopne
mov
adc
popa
rolb
clc
pusha
and
fistps
mov
cmp
cmpsl
lods
mov
sbb
notl
sbb
sbb
in
sbb
in
jb
ljmp
mov
aaa
nop
je
cmpb
nop
xchg
sbb
dec
adc
mov
dec
aas
jle
inc
and
push
sub
and
ficoms
dec
sti
cld
mov
test
push
pushf
mov
movsl
jle
mov
sub
nop
out
inc
clc
or
nop
mov
jp
loope
ljmp
cmp
pop
fmul
jb
int3
add
push
fs
pop
sub
imul
cwtl
bound
push
pop
pushf
out
push
xor
icebp
pop
lret
int
insb
rcrb
rcll
imul
pop
int3
xor
and
cli
pop
aad
inc
sti
arpl
mov
and
sbb
mov
imul
jecxz
ss
out
loopne
fs
mov
or
ds
jle
or
and
out
jle
loop
add
mov
xor
push
lret
fcoml
sbb
fldt
std
xlat
scas
push
aad
stos
mov
xchg
xor
cli
dec
mov
push
pop
jns
mov
sub
pop
pop
stc
mov
ljmp
das
add
ljmp
xchg
cmp
adc
mov
push
lcall
sub
add
mov
into
andl
mov
sub
in
push
stos
out
pop
or
mov
and
xchg
pop
insb
sbb
jge
push
cmp
mov
ss
leave
push
sbb
xor
mov
pop
push
stc
lcall
sub
xor
pop
lock
adc
out
pop
xchg
add
mov
subl
in
stos
movsl
push
xor
pop
sti
orb
or
repz
adc
pusha
cmp
shl
stos
lock
xchg
cmp
mov
cld
xchg
int
mov
shll
push
dec
jno
sbb
sbb
scas
fucomip
out
into
pop
push
sbb
in
jmp
lret
sahf
addr16
mov
es
ds
mov
pop
lock
sbb
xchg
imul
sbb
adc
push
sbb
inc
std
mov
test
sbb
hlt
xchg
lret
popf
decl
dec
mov
lock
mov
ljmp
xlat
neg
lret
sahf
cmp
arpl
adc
imul
xchg
push
mov
xchg
pop
out
jno
and
cmp
test
push
popa
sub
mov
and
jecxz
shll
mov
lods
mov
test
jmp
pop
push
or
insb
and
test
add
mov
cmp
push
in
xlat
pusha
les
mov
push
sbb
pop
dec
jne
lods
.byte
