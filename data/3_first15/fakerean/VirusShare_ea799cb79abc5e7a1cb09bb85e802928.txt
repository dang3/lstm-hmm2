sbb
add
mov
xchg
mov
movsl
js
or
cltd
or
xor
aas
aas
push
outsb
ss
sub
out
loope
add
jae
sbb
in
je
xchg
push
sub
mov
pop
mov
imul
mov
ret
imul
sub
imul
cmp
and
aam
mov
fisttpl
aaa
movsl
push
sbb
fsubrl
sbb
pop
jmp
jbe
sub
dec
sub
rclb
dec
add
out
cmp
lods
or
leave
add
fwait
insl
data16
adc
in
pop
js
sbbb
dec
xor
adc
stos
mov
negl
movsl
lret
pushf
jle
repnz
jmp
imul
js
mov
and
fwait
pop
jo
mov
std
sti
pop
mov
pop
loopne
sub
or
aam
mov
fidivrs
xor
pop
adc
push
std
jg
fadds
in
rolb
ja
dec
adcb
push
inc
lcall
jmp
mov
call
or
clc
aaa
fldt
jae
mov
dec
mov
fldl
pop
pop
mov
divl
push
lods
test
lea
adc
ror
jo
pop
idivb
repz
inc
xchg
pop
or
movsb
shl
cmp
inc
test
xor
xor
sbb
mov
dec
lea
imul
xchg
pusha
popl
add
ret
sti
xor
loope
or
ljmp
pop
ljmp
or
jnp
mulb
enter
mov
pop
rorb
in
dec
push
test
in
loopne
push
into
pop
inc
repz
xchg
imul
cmp
dec
lods
push
jae
mov
int3
xchg
aaa
pop
mov
dec
push
stos
dec
sub
xor
rolb
jmp
rcrl
and
cmpsl
aad
mov
sbb
shl
mov
xchg
call
loop
rcrb
test
ljmp
push
jo
loop
std
add
std
nop
pop
fistps
movsl
lods
imul
xchg
cmp
push
mov
or
int
mov
sub
jns
std
mov
or
loope
pop
jno
jp
inc
jp
mov
ret
sub
pop
popa
insb
das
push
outsb
xor
jge
ss
push
push
xchg
dec
mov
popf
fisubrs
push
xchg
push
adc
insb
and
rorb
leave
adc
mov
sbb
mov
pop
jmp
cltd
jl
cmp
jnp
es
cs
fldlg2
and
add
jecxz
mov
lods
daa
fnstenv
ljmp
xlat
inc
sti
sbb
lds
and
mov
mov
mov
repnz
in
loopne
fs
pop
lret
jns
cmc
and
mov
dec
lods
fisubrs
xor
test
enter
adc
push
cmpsl
mov
cwtl
sar
fimull
inc
or
mov
cmpsb
fcomi
fs
dec
sbb
in
cmp
jnp
scas
notb
js
adc
cltd
fisubl
in
xchg
mov
and
loopne
push
adc
cmp
xchg
insl
xor
dec
fstpt
xor
fmuls
es
pop
mov
cmpsb
jns
sub
mov
outsl
dec
mov
cmp
test
adc
in
dec
xchg
dec
rorl
or
or
mov
cmpsb
sub
cmp
stos
jmp
nop
jle
stc
pushaw
fs
fs
cmp
loop
ret
scas
xchg
mov
push
es
movsb
out
mov
jns
push
ret
cld
es
add
push
xchg
jno,pt
ret
xor
jnp
pop
inc
movsl
inc
mov
pop
lock
fdivrl
mov
jns
and
inc
in
push
dec
repnz
aaa
lods
sbbl
fs
dec
inc
mov
pop
imul
cmovns
jo
in
push
aas
and
jo
je
sti
xor
mov
das
adc
inc
pop
mov
lods
and
xchg
pop
daa
imul
ljmp
add
sub
add
jbe
clc
jne
loopne
iret
push
mov
mov
out
push
cmpsb
subl
es
or
fwait
and
pushf
sbb
inc
inc
movsb
add
sbb
insl
jge
int3
call
jb
and
and
daa
data16
cmpsl
fsubs
jg
dec
xor
xchg
imul
xchg
mov
cld
and
mov
xor
lret
sbb
xor
pusha
pop
xchg
fnsave
iret
jle
sub
aam
jle
inc
xor
popa
add
mov
imul
push
pop
pop
lcall
test
shlb
add
je
mov
mov
roll
ljmp
shrl
xchg
inc
rorl
sub
inc
mov
mov
cmc
add
imul
mov
jle
call
dec
lock
mov
or
ret
ret
dec
sub
roll
jnp
clc
jbe
pop
pop
mov
or
and
mov
scas
add
inc
jbe
push
inc
inc
pop
jl
lcall
ret
or
xor
in
sahf
push
divl
ljmp
dec
jmp
cmp
loop
sbb
adc
in
andl
xchg
xrelease
mov
insl
mov
jne
jne
cmp
xor
xchg
roll
push
shlb
notb
mulb
lea
fs
dec
push
xchg
cmc
dec
fsubrs
or
xchg
inc
les
xor
int3
nop
outsl
and
jmp
in
xchg
mov
or
fistps
sub
clc
adc
shlb
cli
mov
pop
hlt
mov
sub
sbb
jo
adc
or
jae
add
cmp
mov
loope
leave
sbbb
ret
sub
inc
cmpl
adc
xor
les
add
xlat
jmp
xchg
call
jmp
fwait
aas
cmp
add
out
dec
adc
lods
dec
movsl
add
popa
shrl
lcall
test
or
rcrl
fadd
mov
mov
xor
pop
xor
je
xor
je
jmp
pop
bound
ret
mov
cmc
mov
int
cs
jl
std
cmpsl
ficompl
pop
push
push
sbb
adc
or
icebp
icebp
ret
sbbb
adc
std
pushf
fs
test
pop
mov
stos
std
jl
jno
cmp
cmp
stos
sbb
push
fistpl
mov
sbb
mov
dec
sub
pop
and
ja
push
outsb
inc
lock
test
pushf
xchg
insl
mov
and
fiaddl
adc
add
or
sbb
popf
mov
mov
sub
inc
add
loope
sub
lods
cmp
je
mov
mov
cmp
push
mov
out
lret
push
mov
lahf
adc
fdivp
add
jo
test
push
aaa
add
imul
and
mov
mov
add
xchg
xchg
stos
popf
pop
test
ja
inc
mov
xchg
imul
and
mov
sahf
lcall
aad
bound
push
iret
subl
loop
and
cld
jae
adc
fldt
in
scas
pop
and
xor
shlb
js
pop
loopne
je
loopne
mov
push
icebp
out
xor
add
outsl
call
aas
test
imul
push
add
sub
dec
dec
dec
adc
enter
and
jecxz
lret
mov
add
fucomp
lret
dec
jge
out
lods
mov
jne
mov
loope
adc
adc
mov
jo
jns
jbe
repnz
inc
jge
jg
sub
push
xor
shrl
add
jl
dec
jge
push
jne
loopne
mov
or
mov
mov
out
mov
pop
dec
dec
pop
pop
sub
mov
jb
scas
mov
ljmp
movsl
ljmp
aad
test
das
or
jnp
gs
test
jbe
sub
cmpsb
mov
movsl
ja
ret
inc
je
loop
popa
adc
std
mov
dec
pop
lock
int3
push
push
push
daa
sbbl
pop
mov
lds
cmp
sti
push
push
mov
stos
add
mov
int
test
enter
ja
in
and
test
sahf
popf
jo
jle
mov
pop
mov
mov
fidivs
icebp
subb
shlb
pop
popf
pop
mov
dec
xor
movsb
or
pop
outsl
icebp
pop
mov
mov
ja
pop
mov
scas
sub
jle
fstpt
je
add
stc
mov
mov
je
mov
and
out
xlat
xor
pop
mov
ja
and
xchg
stos
frstor
pop
outsb
sahf
dec
pop
pop
sbb
test
adc
sub
sub
dec
and
sub
fisttpll
test
out
cmp
lods
jmp
insl
xchg
adc
xchg
mov
mov
cmp
push
push
mov
in
dec
scas
test
sbb
or
int3
mov
cmp
push
mov
imul
dec
xchg
maxps
inc
push
cmp
fsubrl
ret
je
cli
imull
stos
dec
add
loopne
fistl
sbb
mov
rorl
dec
xlat
or
rolb
pop
loop
add
sbb
jae
ja
cmpsl
cmp
lock
jecxz
js
adc
mov
inc
push
pop
cmpb
jae
mov
inc
mov
adc
fidivrs
insb
jne
rcrb
lcall
rep
mov
mov
lret
sub
shrl
daa
mov
ss
cwtl
xchg
pop
xor
cli
push
out
jecxz
jp
ljmp
jmp
push
cmpsb
cs
in
cmp
adc
pushf
out
jmp
pop
mov
outsl
push
pop
dec
push
ret
das
xlat
dec
dec
mov
jmp
and
repnz
sbb
iret
push
sub
jp
pop
jae
neg
add
push
stc
jno
xchg
ret
aad
or
rorb
icebp
sub
aam
mov
push
rorb
cmp
inc
mov
xor
out
outsl
lds
fisubrl
flds
dec
pop
mov
mov
jle
in
push
xor
out
bound
jb
xorl
adc
lea
stos
xor
xchg
rcrl
in
cmp
insl
popf
mov
fadd
cltd
arpl
pop
sbb
push
rclb
stos
cmp
ds
pop
insb
or
pop
sub
lods
xor
js
adc
je
lret
icebp
add
repnz
outsw
pop
shrb
xchg
mov
pusha
insb
push
stc
adc
leave
mov
int3
push
sahf
test
or
or
lcall
dec
leave
adc
mov
mov
mov
je
pop
shlb
cltd
add
or
push
dec
sub
ds
push
pop
push
test
bound
outsb
mov
js
add
in
popa
scas
fwait
push
adc
sub
or
inc
imul
cmp
inc
or
adc
pop
ss
jbe
inc
mov
xchg
pushw
or
ja
scas
aam
and
loopne
sub
mov
fidivl
push
jno
cmpsl
daa
push
lods
xor
jge
mov
mov
jecxz
dec
inc
fimuls
pop
lock
pop
in
sti
sbb
xchg
lock
push
push
jbe
xor
add
testb
daa
test
dec
dec
mov
ret
fucomip
add
xor
cld
test
jo
scas
cmpsb
popf
lods
push
and
sbb
insl
or
in
and
scas
mov
add
xchg
fldcw
push
and
inc
adc
cmpsl
mov
push
sub
inc
iret
hlt
es
pop
mov
push
pop
mov
fists
mov
orl
test
jmp
les
lahf
aaa
and
jne
rcll
hlt
ljmp
clc
stos
insl
mov
sbb
dec
int3
push
imul
sti
dec
aas
je
aas
jecxz
mov
lock
into
or
fnstsw
cmpsb
mov
jne
lcall
pop
adc
pop
fs
push
loopne
or
aaa
mov
jne
push
jbe
lret
sub
add
lods
sub
jnp
inc
into
pop
push
pop
decl
out
xchg
xor
out
xchg
jp
test
in
cld
sbb
xor
inc
xchg
fldl
xor
rorb
nop
xchg
lret
mov
pop
or
lret
and
mov
dec
adc
addl
scas
pusha
inc
aas
bound
xchg
divl
mov
xlat
push
xchg
jl
cld
cltd
mov
xchg
cmp
inc
sbb
fsubrs
or
xor
scas
in
fs
fs
ficompl
sar
mov
jo
dec
push
imul
jg
jb
pushf
fwait
add
cwtl
xor
and
enter
mov
pop
repnz
inc
into
nop
jmp
clc
loope
xchg
bound
loopne
fucomip
cmpsb
sarl
pop
pop
xchg
jb
jmp
mov
lret
cmpsl
out
inc
rcrb
aaa
into
outsb
lcall
adc
fwait
sbb
lret
or
cltd
xchg
mov
mov
aaa
sbb
lcall
pop
mov
fwait
stos
dec
imul
xor
pop
inc
cmpsl
pop
xchg
insb
cld
xchg
orl
adc
dec
fs
mov
xor
pop
scas
add
addl
loope
gs
addr16
out
inc
pop
fimull
dec
sub
xlat
inc
test
wrmsr
adc
loop
add
xchg
lahf
pop
ret
frstor
les
and
int3
mov
pop
mov
insl
add
mov
add
xchg
add
test
jae
test
push
mov
mov
inc
jae
dec
sahf
push
mov
xor
lods
pushf
sarb
pop
inc
outsb
sbb
into
or
call
sub
jecxz
xlat
lock
xchg
ja
outsb
aad
out
push
push
jp
inc
jns
pop
add
xchg
or
ss
mov
fwait
mov
jo
mov
cmp
adc
and
in
pop
inc
pop
adc
mov
and
xchg
stos
adc
mov
int3
xchg
push
cmp
movsl
or
jg
stos
mov
sub
rcll
xlat
mov
adc
arpl
movsb
jmp
xor
stos
ffree
push
sub
lahf
dec
enter
fisttpll
fnstsw
movsl
push
mov
loop
ds
inc
ds
mov
jo
daa
cmp
cli
mov
push
push
mov
push
movsl
jge
stos
mov
add
std
shl
fsubrp
push
jmp
int
jmp
es
mov
cli
nop
or
jne
xor
push
sbb
clc
dec
cmp
mov
ss
sbb
jo
adcb
inc
ret
outsl
sbb
movsl
mov
lods
testl
mov
push
fldl
outsl
adc
mov
fimuls
je
xchg
cmp
inc
pop
mov
push
je
push
xchg
push
inc
mov
and
dec
mov
hlt
inc
push
dec
xor
xor
repz
pop
pop
dec
inc
push
nop
in
mov
add
inc
inc
aam
outsl
mov
push
les
int3
dec
adc
cmp
sbb
mov
or
xchg
cmp
add
out
jo
fcmovne
mul
add
xor
xor
daa
pop
xchg
inc
dec
mov
leave
loop
movsl
pop
jnp
or
stos
mov
xchg
jge
sub
push
into
aas
push
mov
aam
push
mov
adc
ja
mov
mov
push
pop
sub
les
mov
jne
fdivrl
inc
inc
push
dec
gs
cmp
dec
sub
or
dec
cmp
sub
push
test
lods
xchg
in
jnp
lock
push
or
xor
add
dec
inc
jbe
sbb
adc
inc
pop
sbb
loop
pop
dec
sbb
hlt
xor
mov
rolb
sbb
add
mov
xchg
movsb
ljmp
aas
out
outsl
dec
pusha
and
call
jge
jno
ret
xchg
push
xchg
xchg
lods
mov
int3
inc
sbb
shlb
into
push
push
ss
sbbb
sub
cmp
rcll
mov
cmp
inc
outsl
jne
mov
mov
lcall
inc
dec
lcall
sbb
xchg
mov
xor
clc
mov
jns
jg
push
jnp
rclb
lcall
mov
das
lret
ret
push
xor
mov
add
scas
mov
mov
mov
icebp
add
adc
mov
les
mov
sti
push
std
fdivrl
sbb
arpl
pop
and
insl
mov
aaa
dec
push
stc
jo
icebp
lods
outsl
in
xchg
sub
test
pop
sbb
mov
push
call
repnz
pushf
pop
movsb
or
sarb
push
xor
arpl
mov
js
jo
push
jno
push
cmp
leave
idivl
or
inc
movsl
push
cmp
out
in
int3
jo
inc
inc
insl
loop
add
xchg
inc
inc
xchg
cmpsl
aas
and
roll
ds
pop
out
sbb
out
lea
mov
in
in
das
dec
in
cmp
inc
and
push
mov
sub
popa
inc
and
and
dec
fdecstp
jnp
shlb
mov
mov
jo
xchg
xor
dec
cmp
xchg
pop
adc
jbe
inc
mov
sub
ljmp
hlt
jg
jecxz
into
shlb
ret
shl
inc
fisubrl
in
dec
pop
lahf
sbb
lods
sti
cmp
xor
cmp
push
xor
lods
or
cmpsb
ja
repnz
push
jle
arpl
inc
rcr
fsubrp
in
out
dec
inc
cmp
jns
sbb
push
fildl
xchg
adc
push
lods
push
cltd
xor
shlb
leave
fnstsw
arpl
fucom
in
faddl
fbld
pop
push
mov
add
mov
sbb
lea
dec
mov
aad
js
xor
data16
cmc
ds
idivb
and
cwtl
add
scas
cli
iret
pop
dec
and
mov
sbb
mov
sbb
add
daa
rcl
cmp
cmpsb
mov
xlat
xchg
ds
sub
outsb
xchg
stos
in
repnz
fsubrs
jg
and
out
xchg
testb
inc
in
dec
shlb
movsl
and
loop
out
ljmp
push
mov
and
sub
and
push
sub
add
and
adc
les
push
stos
pop
jae
stos
mov
sub
jnp
outsl
ljmp
jne
xchg
pop
pop
cld
in
je
repz
nop
xor
adc
outsb
into
test
leave
clc
jns
fstps
mov
js
add
mov
sub
sub
lock
jl
insb
stos
pop
insl
jecxz
mov
xor
inc
inc
outsb
nop
aaa
lret
push
loopne
cli
test
xor
or
and
pop
aas
int
loope
jns
xchg
sbb
xchg
and
into
pop
ret
jno
int3
out
test
sbb
fistps
test
ret
fs
addl
les
pop
lock
sbb
hlt
divb
in
ljmp
pop
ss
negb
sub
jp
xchg
sub
pop
pop
mov
stc
sarb
adc
inc
daa
cmp
dec
insb
enter
es
popf
mov
pop
test
sbb
pop
lret
add
cmp
neg
jge
and
mov
mov
lods
mov
sti
out
ljmp
lods
fiaddl
jb
sbb
aam
mov
shrl
insl
repnz
xor
pop
jne
nop
test
push
pusha
scas
jne
dec
fsubl
jg
xor
xchg
jmp
in
fildl
aad
dec
add
cltd
inc
add
pop
pop
jp
ja
movd
mov
icebp
lahf
push
cmpsl
mov
les
loop
repnz
dec
sub
jnp
ret
mov
out
or
test
jae
mov
pusha
daa
xchg
fcoms
inc
push
jno
sbb
addl
int3
push
ret
xor
out
mov
push
dec
xlat
out
cmp
cmpsl
rorb
sahf
jb
inc
jo
aad
cmp
jp
lcall
scas
jmp
das
out
stos
out
xor
or
int3
popf
inc
push
pop
in
and
shl
sub
mov
dec
adc
cltd
inc
jmp
jo
inc
hlt
xchg
mov
push
fs
orl
or
or
add
pop
loop
add
enter
dec
dec
or
xor
adc
push
sub
mov
ret
or
xchg
into
dec
decb
or
fadd
fistl
pushf
jmp
not
add
clc
push
pop
jne
fbstp
fs
js
mov
push
pusha
loope
pusha
inc
xlat
xchg
jne
xlat
movsb
aad
pop
fucom
sub
pop
vmovd
aad
addr16
outsb
or
shl
dec
outsb
imul
hlt
xchg
cmp
mov
mov
mov
jl
mov
dec
arpl
shrb
in
aaa
dec
or
adc
fiaddl
sub
lahf
jmp
aam
sub
lahf
arpl
fidivrl
iret
mov
loop
and
pushf
enter
fs
add
ret
push
inc
movsl
jge
xchg
mov
mov
sbb
cmp
addr16
push
adc
es
and
push
jle
jge
add
mov
pop
les
lahf
daa
lahf
mov
or
hlt
js
lret
inc
xor
imul
mov
push
mov
sbb
mov
hlt
mov
mov
or
cmc
and
cmp
inc
mov
fnstcw
jge
mov
mov
mov
jns
inc
stc
sahf
dec
cwtl
cmp
fwait
sub
jne
jmp
mul
pop
fdivrs
xlat
fisubs
add
lret
cmp
cmp
push
imull
jo
sub
mov
jl
mov
je
xchg
cmp
cmp
stos
mov
push
les
frstor
mov
mov
mov
lea
rolb
ret
ret
mov
test
mov
cmp
pop
xchg
cmpsl
dec
fstps
mov
add
loop
xchg
mov
data16
and
mov
inc
jns
mov
test
or
fnstsw
loop
mov
lret
inc
push
pop
fmull
adc
dec
lods
fwait
inc
fprem1
jecxz
jmp
xor
or
pusha
jmp
mov
sbb
xor
imul
sti
repnz
xchg
cmp
movzwl
es
xchg
or
jns
loopne
add
dec
mov
push
jnp
lea
nop
lods
xchg
lcall
jp
ret
test
inc
mov
xor
pushf
ret
jno
sub
dec
mov
stc
out
push
in
lea
dec
data16
jp
jae
stos
pop
js
jmp
in
dec
cmp
adcb
nop
lcall
xchg
lock
jnp
sahf
adc
xchg
scas
out
xor
into
mov
mov
mov
and
dec
mov
in
or
inc
in
js
or
pop
push
add
movaps
fisttps
mov
pop
pop
add
shlb
xor
pop
call
scas
pop
sbb
les
xor
sbb
loopne
xchg
cwtl
xor
bound
cld
das
dec
cli
test
push
xchg
lods
hlt
jns
add
pushf
or
inc
fdivs
decl
push
jge
mov
push
jnp
repz
fiaddl
popa
nop
dec
les
mov
lret
daa
adc
sbb
mov
pop
mov
inc
orb
mov
sbb
fnstenv
std
dec
push
mov
insl
mov
jp
imul
leave
out
adc
subl
mov
push
xchg
test
popa
in
xor
jnp
mov
test
cmpb
jecxz
daa
in
cld
sbbb
mov
test
out
xchg
mov
in
jp
xor
mov
lods
fldcw
movsl
lret
jns
mov
in
sbb
jne
fwait
xchg
repz
adc
lahf
xchg
push
cld
test
fisttpl
dec
adc
ficomps
test
mov
loopne
rclb
mov
fsubrs
xor
xor
pop
sbb
mov
ljmp
insl
popf
outsl
stc
push
mov
stc
sbb
inc
inc
cmc
push
pop
xchg
push
inc
fdivrs
mov
jno
pop
fs
dec
push
mov
mov
icebp
sub
mov
repz
dec
lock
inc
lcall
cmp
pop
test
stos
int3
xchg
sahf
ss
xchg
jno
rorl
sub
fstps
clc
lds
add
mov
pop
xchg
xchg
aaa
sub
aam
leave
ss
or
and
imul
add
mov
inc
inc
or
or
leavew
pop
inc
xlat
mov
xor
inc
inc
or
psubd
jae
adc
jb
fimull
inc
shll
fs
mov
lret
cltd
cmp
mov
push
mov
sahf
add
das
add
or
jge
mov
sbb
jg
into
dec
outsb
xorl
cs
jg
out
out
xor
clc
jne
xlat
rol
sub
mov
or
out
clc
test
mov
addb
daa
push
aam
lock
dec
test
jnp
cmpsl
in
sub
imul
shll
stos
dec
int3
jne
push
filds
sbb
cmpsb
mov
fs
insl
mov
jg
cs
andb
fdivs
stc
cli
cwtl
loopne
jp
push
xchg
scas
mov
xchg
repz
sub
repz
pop
sub
pushf
dec
xchg
and
sub
push
pop
mov
cmpb
jl
sbb
dec
add
insb
mov
dec
mov
popa
scas
fistpl
adc
cmpsb
push
mov
sti
sahf
pop
pop
stos
rol
dec
outsl
inc
or
testl
and
xchg
aam
imulb
jl
lret
mov
xchg
mov
pusha
fisubrl
cmp
imul
in
imul
iret
push
pop
mov
lea
push
enter
xchg
xchg
in
dec
scas
push
lret
std
fcoml
dec
xor
mov
dec
push
fsub
jle
xchg
in
xchg
and
popa
or
out
repnz
ret
lret
orb
mov
jmp
xchg
xor
lcall
cmpsl
sub
pop
ss
imul
jmp
xor
mov
xor
lock
jno
or
in
pop
ficompl
xchg
stos
lock
cmp
jmp
int3
sti
sub
add
nop
outsb
add
jo
pop
adcl
data16
pop
jle
ja
stc
fcmovb
repz
jecxz
lods
lock
filds
sahf
sti
add
inc
sbb
leave
enter
int
jmp
mov
push
jecxz
orb
lods
mov
mov
mov
aad
and
xchg
dec
xlat
jno
insb
mov
mov
andl
movl
xor
and
fmull
out
mov
cli
fisubl
stc
lea
decl
outsl
mov
orl
fstpl
sub
int3
fdivrl
adc
sti
icebp
ja
mov
cmp
sbb
and
mov
push
sub
fldcw
cmp
inc
es
mov
in
or
idivb
and
mov
sub
sahf
imul
sbb
jbe
or
je
sub
xchg
dec
push
pushf
aas
sbb
xor
aam
mov
shlb
mov
clc
sbb
inc
lcall
adcb
add
lea
outsl
pop
loop,pt
push
insl
int
push
lods
and
or
repnz
cmp
jbe
xor
jg
fstpl
daa
icebp
xchg
mov
je
ret
gs
push
sub
mov
jg
mov
iret
mov
sahf
pushf
scas
pop
cmpsl
js
fldl2t
dec
push
cmovne
cmp
fs
lret
xor
and
js
out
mov
push
bnd
cltd
mov
xor
push
mov
and
pop
xchg
push
jle
inc
inc
repnz
or
sbb
add
jne
mov
jg
movsl
outsl
xchg
add
mov
mov
cmpsl
push
pop
leave
in
insb
out
xor
push
int3
xchg
jbe
sti
je
fildl
jb
iret
mov
mov
gs
test
xor
shlb
or
std
movsb
leave
fidivl
cmp
lea
sti
rclb
adc
cmp
and
clc
popf
in
pop
pop
pushf
xchg
icebp
cmp
mov
out
xor
or
sbb
add
rclb
negl
mov
and
les
cmp
jge
fwait
cwtl
adc
inc
add
adc
push
iret
push
aad
rcll
pusha
xchg
flds
mov
lods
cld
fwait
into
and
insl
out
jge
jle
pextrw
add
cwtl
leave
pop
jnp
filds
adc
movsl
leave
insl
repnz
dec
test
fs
push
fcoms
sahf
and
in
or
pop
adc
mov
or
pop
adc
repnz
and
lods
lret
push
test
push
aam
push
mov
out
push
stos
stos
cs
lea
movsl
fstl
movsl
pop
insl
std
les
push
and
mov
xor
push
or
shrl
int
in
std
cmp
jno
mov
sub
mov
test
and
fnstenv
push
sbbb
xlat
mov
dec
push
mov
shrl
add
lret
xor
sub
inc
sysret
push
add
hlt
xor
mov
push
adcl
dec
or
inc
clc
push
inc
push
fsubp
lahf
xchg
into
aad
nop
and
imul
std
push
std
das
loop
cmp
test
adc
and
jns
and
inc
movsl
add
ljmp
insl
xchg
lods
sub
aas
stos
push
lcall
rol
adc
add
scas
xlat
xor
add
daa
lahf
inc
dec
ljmp
dec
jo
sub
sub
mov
mov
sub
add
and
add
dec
test
pop
out
ror
or
cli
and
cmp
dec
jg
push
cmp
xchg
inc
stos
fcomp
aas
outsb
dec
popf
ss
cmpsb
nop
lea
xchg
xchg
or
inc
xorl
test
mov
jp
xchg
out
rorl
cmpsl
fildl
xor
fnsave
jbe
test
mov
xchg
fs
push
mov
and
out
test
inc
inc
adc
imul
fbstp
stos
pop
dec
or
test
or
sbb
jnp
stos
mov
ret
jns
popf
sub
jp
push
repnz
call
loope
xor
lret
imul
bound
ja
jp
cs
adc
mov
sbb
sbb
arpl
pushl
shll
add
cmpsl
lahf
sbb
jbe
subb
sbb
repz
xchg
lret
sub
ds
mov
dec
push
js
pop
in
repz
repz
fcoml
js
in
adc
sbbl
or
push
shll
mov
in
jle
add
out
stc
and
xchg
adc
add
sbb
addr16
adc
jns
dec
ljmp
inc
ds
xchg
je
aaa
fxch
addr16
and
inc
push
xlat
imul
sub
or
xor
lcall
adc
and
jo
inc
mov
sti
lret
and
outsl
sbb
mov
push
cltd
cli
ret
mov
push
mov
and
pop
xchg
dec
sar
movsb
hlt
lods
cmp
fdivrl
cmpsl
push
scas
rcr
inc
dec
mov
pop
jb
xor
adc
inc
push
push
push
jnp
inc
adc
push
mov
dec
int3
insl
push
scas
stc
loopne
xchg
mov
push
sub
add
aas
inc
or
out
lock
enter
or
adc
pop
sbb
data16
lds
std
mov
jg
jb
cwtl
jo
xchg
inc
adc
push
add
push
pop
mov
cmp
test
popa
xor
push
fs
cmpsl
inc
mov
sbb
or
loope
out
xor
push
test
sbb
add
adc
inc
or
adc
int
sub
lods
xchg
repz
rcrl
jge
insb
dec
cwtl
push
aas
push
and
and
or
inc
jne
add
mov
shrb
pop
mov
pushf
repnz
stos
and
enter
cmp
ss
cmc
pusha
push
aas
adc
and
movl
lock
push
mov
roll
mov
hlt
fbstp
pop
loope
leave
mov
out
sti
or
jns
sbb
call
test
das
loope
and
mov
mov
enter
ljmp
cmp
testb
movsl
mov
cmp
outsl
cltd
in
adc
mov
mov
outsl
cltd
push
sub
scas
or
pusha
sahf
mov
int3
adc
inc
rclb
add
lret
out
in
jne
push
lret
int3
jmp
mov
setg
js
jb
mov
ds
out
addl
nop
cltd
into
mov
xchg
xchg
imul
xchg
repnz
push
or
into
lcall
aad
push
mov
push
aas
mov
in
ja
push
bound
and
ds
ret
fs
insl
test
cmp
jle
or
popf
adc
dec
in
inc
test
movsl
js
xlat
enter
scas
sbb
scas
test
pop
sbb
sbb
shl
pop
outsb
incb
xchg
mov
mov
decl
sarb
mov
sub
cwtl
in
shlb
ja
mov
sahf
add
sub
clc
sti
inc
test
repz
cmp
and
jmp
das
hlt
rcrb
push
sub
sub
pop
or
push
mov
or
inc
push
cwtl
add
insl
sahf
jae
xor
out
push
sbb
gs
inc
xor
popa
add
aas
lds
cmpsb
push
loope
es
dec
pop
inc
pushf
dec
orl
lods
mov
les
mov
insl
out
or
test
push
lret
pop
xchg
push
xchg
lock
xor
jbe
or
cmc
xor
dec
mov
cmp
sarb
mov
xchg
pop
sar
xchg
fcompl
mov
add
jmp
add
xchg
cmp
inc
inc
jnp
push
push
daa
mov
pop
push
and
call
lods
push
jmp
sub
rcr
fiaddl
xchg
fwait
pop
imulb
rorb
dec
lods
movsl
roll
out
or
cmp
mov
lahf
mov
pushf
daa
pop
cs
test
mov
pop
or
sub
in
sub
loop
out
mov
add
cmp
movsl
jne
pop
adc
add
pop
jecxz
mov
scas
nop
popl
cmp
das
inc
mov
mov
mov
lods
mov
leave
test
scas
lcall
adc
sbb
pop
nop
cwtl
cmp
aam
aaa
das
cmpsb
sub
sbb
add
out
fisubrl
dec
pop
inc
xor
jmp
cmp
dec
xor
jg
ret
decb
gs
pop
leave
xchg
popl
push
cs
jle
mov
sbb
frstor
or
mov
fimuls
jo
adc
subl
jle
mov
xchg
jno
pop
mov
jns
xlat
movsl
shrb
ljmp
pop
call
pop
sbb
ja
not
pop
rclb
adc
andb
dec
adc
dec
xchg
jg
fldcw
push
sub
add
xchg
pop
pop
cs
mov
data16
push
es
jmp
mov
adc
jb
xor
pop
xchg
es
sbb
adc
cmp
cmp
testb
subw
int3
lds
and
mov
test
sbb
push
sbb
xor
jnp
xorb
push
rolb
cmc
pop
inc
loope
or
inc
jmp
pop
fmull
sub
push
test
jb
nop
mov
push
mov
mov
add
add
into
out
mov
aad
loop
adc
xor
pop
out
mov
mov
jb
add
or
pop
adc
movsl
data16
inc
and
sub
lods
insl
imulb
sbb
cmc
sub
mov
sub
sbb
sub
or
jo
pop
and
xor
push
fsubrs
jle
push
pop
push
lock
lahf
es
in
sti
cmpsl
out
cmp
xlat
sbb
jae
push
xor
cmp
nop
in
add
cmp
cmp
inc
mov
ja
and
enter
mov
pop
jecxz
rcr
loope
inc
pop
les
sbb
jb
mov
adc
in
lcall
cmc
cmpsb
add
fwait
loopne
pop
xchg
inc
sbb
aaa
imul
jl
sub
movsl
inc
dec
imul
xchg
sub
fcoms
ss
ss
das
repnz
aas
int
jnp
arpl
pop
clc
mov
lods
mov
dec
mov
pop
mov
cmp
ljmp
ror
js
or
enter
sub
jnp
xchg
inc
adc
out
jmp
in
repz
adc
cld
stos
xor
push
cmc
test
mov
jmp
mov
enter
or
jge
mov
jns
ror
mov
xlat
dec
inc
aaa
or
push
aam
ds
in
test
fldt
lahf
scas
into
add
jno
dec
loopne
sub
cld
mov
adc
daa
fcoml
xchg
loop
fcoms
add
dec
or
jp
lret
in
cld
adc
fcoml
imulb
inc
scas
test
lret
mov
loopne
jbe
adc
aad
mov
sub
sub
lock
xchg
test
iret
jbe
sub
mov
icebp
stc
out
push
imul
or
mov
mov
push
cs
inc
add
adcl
shll
inc
adc
leave
push
mov
lret
mov
testl
pushf
pop
scas
popf
sar
push
movsl
lods
sub
cli
mov
imul
push
mov
jb
jae
xor
push
orb
push
push
push
jmp
fwait
mov
xchg
imul
mov
xor
movsl
insb
aad
dec
shrb
sbb
fdiv
ds
pop
movb
xor
loop
cld
addr16
jno
cmp
scas
mov
add
push
lcall
les
mov
and
mov
int3
cmp
mov
jecxz
fdivrs
rolb
loopne
pop
xlat
rol
xor
cmp
test
aam
xor
dec
or
outsl
pop
mov
popf
dec
pop
push
adc
lcall
jmp
add
sbb
xchg
decl
std
push
cmc
or
xor
loop
push
gs
fs
cld
mov
movsb
sub
jl
jae
mov
mov
push
mov
cwtl
xchg
sbb
popa
add
inc
jecxz
pop
push
aad
cmpsl
jae
jns
and
xor
or
or
jle
xchg
xchg
push
leave
rclb
pop
and
cmp
pop
sti
mov
shlb
mov
add
sub
cmpl
lock
bswap
push
enter
dec
test
inc
or
jle
lcall
lcall
mov
mov
mov
adc
sub
call
mov
push
mov
sbb
inc
push
mov
pop
jg
xchg
mov
and
jbe
fsubrs
sarl
and
test
pop
movsb
cmpsl
cmp
jnp
xor
sbb
jae
imul
ficompl
mov
mov
xchg
xchg
xor
testb
stos
xlat
xchg
iret
sub
dec
sub
push
cmp
movb
out
add
jbe
imull
xchg
test
jp
stc
stos
mov
lods
push
xchg
in
imul
lods
cli
fwait
ss
pop
and
imul
jo
fidivrl
scas
jl
mov
cmp
xchg
repz
jl
inc
sbb
fwait
jle
push
adcl
lret
pop
into
adc
push
out
bswap
xchg
leave
fwait
pop
or
cmp
sbb
sub
jle
push
enter
loope
mov
cmp
mov
fisubrl
sub
push
pop
fdivs
pusha
jmp
xchg
dec
push
add
cltd
loop
cmp
lret
loopne
call
sub
shlb
fdivr
dec
in
sbb
loop
stos
sub
jle
lods
mov
fmull
popa
ss
fcmovnb
dec
cmpsl
test
insb
std
pop
lcall
cmp
mov
fbld
sarl
idiv
add
leave
xor
bound
mov
int3
mov
dec
mov
mov
test
lods
testb
jo
cs
test
cmp
cld
out
jb
imul
inc
insb
les
sbb
mov
sahf
add
dec
pop
mov
or
mov
xor
movsb
insb
pop
imul
icebp
insl
psubb
push
mov
movb
or
push
aaa
dec
mov
dec
stc
mov
outsb
inc
cs
sub
and
out
fs
fdivrs
mov
fdivrs
js
cwtl
daa
dec
fsubp
loopne
xchg
lds
cmp
gs
mov
or
mov
jle,pt
leave
dec
jl
andl
mov
adc
ficoml
xchg
dec
pop
lods
out
fcoml
stos
mov
mov
je
aam
pop
rcrl
aaa
xorb
jp
add
cwtl
mov
pop
imul
enter
aaa
xchg
nop
bnd
fmull
icebp
inc
cld
pop
jb
xor
pop
les
push
sbb
cld
ret
repz
ds
xchg
cmpsb
mov
cmp
jmp
stc
mov
pop
jno
pusha
movsl
inc
scas
jbe
push
mov
push
rcl
push
lea
shlb
movsl
cltd
repnz
lds
hlt
pop
jo
jmp
mov
mov
les
sbb
into
aas
rorb
add
xchg
lds
xchg
mov
js
inc
daa
addl
mov
jne
pop
dec
mov
push
inc
gs
sbb
jp
pushf
dec
das
mov
and
fs
mov
int
pop
dec
ds
stos
inc
mov
rclb
pop
xchg
fistpl
sub
in
xchg
dec
test
imul
jle
xchg
cwtl
jg
icebp
push
rclb
mov
cs
dec
fxch
aad
insl
fcoml
add
cltd
mov
leave
aas
mov
mov
and
xor
data16
clc
sti
sub
pop
add
mov
fisubl
pushf
ficoms
pop
repz
mov
popa
loopne
pushf
test
lahf
or
loop
cmp
aas
shlb
stc
lds
fsts
into
popa
cli
insb
loope
mov
jmp
cmp
xchg
xor
pop
dec
sahf
test
cmp
pop
mov
das
mov
mov
stos
loop
sub
mov
adc
dec
add
loope
pop
mov
sarl
hlt
or
jno
inc
mov
loop
pop
insb
ss
outsb
mov
add
inc
je
ret
or
mov
jne
push
clc
icebp
mov
mov
xchg
and
jo
pop
lock
cli
pushf
into
pop
rol
fldt
dec
cmp
leave
mov
xchg
adc
js
cld
adc
stos
adc
jmp
leave
aaa
add
enter
stos
jmp
jge
xor
es
in
pop
push
fndisi(8087
xchg
adc
out
mov
inc
adc
sbb
fdivrp
aaa
sbb
and
imull
sbb
xchg
arpl
jo
pusha
std
xchg
mov
imul
dec
lret
fisubl
and
dec
push
insb
xchg
jg
mov
push
pusha
lret
lcall
andl
clc
sub
pop
arpl
roll
sub
cmp
sub
dec
jno
push
and
pop
add
xor
cmp
jmp
xchg
jb
ja
jbe
mov
imul
fwait
sub
lock
roll
jno
xchg
xor
sbb
add
push
pop
jno
push
cwtl
and
ja
xor
jbe
rolb
sbb
mov
jg
add
or
pop
and
xchg
mov
bound
or
js
ljmp
cwtl
dec
shr
movsb
dec
sub
adc
mov
lahf
sub
add
pop
sbb
dec
enter
inc
pop
jb
and
cmp
pop
cmp
push
or
das
mov
loope
sub
push
sbbb
dec
and
jle
ja
mov
popa
mov
pop
push
push
clc
hlt
rcrb
dec
mov
lret
push
add
adc
dec
repz
cli
push
pop
cmp
and
in
pushf
mov
sub
mov
test
mov
test
in
push
xchg
push
or
sbb
loope
jne
mov
and
mov
xor
xchg
clc
sbb
add
fldcw
pop
popa
inc
and
inc
cmpsl
and
adc
in
mov
sub
out
add
fs
popf
cmp
push
mov
jns
lock
push
stc
loop
or
mov
adcb
dec
insb
xchg
sub
jge
cmp
je
adc
cld
inc
std
into
sub
fidivl
idiv
bnd
and
insb
dec
mov
lret
mov
cltd
mov
in
and
mov
test
sbb
add
mov
shrb
xchg
and
ds
nop
or
enter
pop
or
mov
xchg
sti
outsl
js
lret
adc
xor
cmpsb
adc
or
mov
mov
insl
push
inc
sbb
push
sub
inc
dec
push
or
addl
sbb
jmp
mov
pop
mov
jge
mov
mov
sbb
push
test
and
jg
mov
push
push
cmp
out
lds
mov
jp
mov
aaa
stc
xchg
and
loopne
arpl
mov
xor
test
ds
ret
and
pop
xor
sbb
jbe
add
adcb
mov
bound
pop
jle
or
adc
push
test
dec
pop
lret
hlt
loopne
jo
or
pusha
aad
fidivs
arpl
jnp
imul
stc
cwtl
into
push
nop
and
scas
lds
scas
hlt
push
cmpsb
push
push
xor
outsb
daa
daa
jmp
cltd
clc
ds
dec
sarl
jl
lea
mov
lds
sti
push
dec
and
sbb
cmp
test
cmp
fidivs
jcxz
lcall
sbb
int3
in
in
out
mov
cli
icebp
hlt
push
pop
sub
xchg
jl
rolb
shrb
les
imulb
cmpsl
inc
jmp
stc
cwtl
sub
imul
sbb
lods
add
hlt
push
fisubrl
or
mov
mov
push
adc
jbe
or
loopne
mov
push
ja
ss
cli
or
adc
adc
xlat
and
push
cmc
lahf
in
push
hlt
movsl
cli
popf
xchg
sub
xchg
fs
sbb
push
push
push
push
push
cmp
dec
outsb
push
pop
cmp
and
mov
daa
lds
imulb
js
fldt
movsb
inc
add
or
push
xchg
push
push
xor
sbb
fisubrl
cli
es
dec
arpl
fidivrl
push
call
mov
xor
loop
xchg
int
and
loope
ja
mov
adc
stos
cmpsb
clc
mov
clc
sub
mov
insb
mov
or
ds
pop
imul
push
sti
sub
push
jmp
jmp
sahf
jne
in
cmp
sbb
into
in
gs
add
and
pop
cld
mov
jnp
push
roll
xchg
xchg
das
xchg
mov
and
cmc
lods
xchg
int3
frstor
cmpl
popf
or
leave
clc
mov
adc
imul
xor
jo
cmp
sbb
mov
lods
xor
cmp
inc
fadds
xlat
mov
mov
in
inc
jle
pop
sub
aas
pop
jo
or
loop
fcoml
mov
js
pop
add
cmp
xchg
cwtl
dec
ja
loope
enter
sbb
cld
push
sub
rclb
jmp
mov
sarl
stos
xlat
movswl
sbb
or
xchg
aam
cs
pop
jge
insb
pusha
jp
cs
das
and
push
fstpl
dec
pop
xchg
mov
dec
inc
push
push
mov
and
mov
push
and
dec
push
add
int3
sub
lock
fdivs
xlat
fbstp
cwtl
jg
ja
lea
dec
popa
pop
lret
pop
rcl
mov
ficoml
data16
and
jg
xchg
imul
sub
ljmp
icebp
dec
mov
pop
inc
mov
ja
lock
fsubs
in
repz
or
imul
dec
jle
movsb
out
inc
jns
cmpsb
bound
jne
insl
enter
hlt
shlb
les
pop
inc
mov
out
mov
mov
xchg
xchg
or
mov
mov
sub
aam
shr
popa
testb
out
addl
jnp
jmp
adc
and
add
dec
or
or
test
dec
test
fistps
adc
jb
adc
and
mov
sub
int3
cwtl
addr16
sbb
fs
jmp
pop
bound
adc
pop
pop
scas
fdivp
jle
xlat
gs
xor
add
xchg
leave
pop
roll
adc
sbbb
shrl
test
jbe
dec
repnz
add
mov
xor
sbb
lret
jb
jnp
ret
mov
loopne
and
mov
roll
ja
mov
jecxz
adc
arpl
jb
push
imul
sbb
xchg
stc
das
sbb
das
dec
jae
mov
xlat
xor
loopne
je
imul
xor
pop
shll
sub
and
jno
mov
sbb
out
jnp
test
cmpsl
mov
leave
fstpl
pushf
dec
push
pop
clc
or
jp
xchg
mov
jo
iret
adc
nop
sub
addr16
adc
lret
lret
mov
ficoml
dec
rorb
ficompl
lods
cmp
movsl
dec
repnz
xlat
lock
and
mov
pop
xchg
sti
pop
and
fdivrs
and
imul
jns
cmp
or
vcvtsi2sd
mov
out
daa
jg
lods
jg
sub
lcall
push
mov
ss
jns
mov
imul
enter
jae
scas
dec
xchg
sub
out
push
int3
mov
outsl
jbe
inc
xchg
scas
cmp
ds
jo
fidivl
filds
mov
or
jae
data16
repz
xchg
rclb
add
mov
ss
xor
pop
push
mov
jns
mov
call
mov
mov
mov
push
in
jae
and
dec
cmp
insl
xor
lret
xor
and
fdivp
out
roll
ficompl
sub
fmull
loopne
dec
jecxz
rcrb
fdivr
add
cmp
push
push
add
jl
repnz
clc
pop
lahf
lods
iret
ja
cmp
aaa
nop
int
rcrl
mov
cs
mov
jae
push
int3
xchg
mov
out
jge
dec
adc
adc
loope
cmp
inc
test
fcoml
sub
in
inc
or
lods
dec
int
shlb
jae
mov
lods
popf
mov
pop
int3
push
ret
push
xor
das
popf
adcb
mov
das
fs
pop
js
incl
ret
mov
and
mov
pusha
or
fmull
pop
jno
jmp
jl
div
sbb
cltd
sub
adc
rcr
pop
adc
mov
roll
cmpsb
jl
btr
mov
xchg
outsb
lods
dec
mov
es
and
inc
cmc
sbb
fwait
loope
inc
dec
lea
inc
mov
or
in
bswap
adcl
loopne
or
xchg
movsb
dec
push
loop
pop
add
xchg
jmp
jae
aad
sub
sahf
gs
sahf
mov
ja
adc
cmp
inc
adcl
pusha
jae
js
repnz
repz
jp
test
jmp
adc
sbb
out
push
xchg
mov
cmc
ljmp
mov
inc
and
int
jmp
sahf
ds
jne
add
aam
push
mov
push
aad
xor
xchg
pop
lods
adc
xchg
pop
mov
fimull
add
call
and
push
icebp
je
mov
mov
lds
mov
stos
jp
enter
adc
addb
in
ss
insl
fs
int
inc
lret
std
cmp
test
mov
sbb
hlt
aam
mov
pop
cmpsl
shlb
lret
and
and
std
jbe
adc
pop
scas
scas
and
call
sub
fisubrs
sub
and
cli
jbe
or
dec
sbb
jmp
rcrl
xor
and
and
push
mov
test
jle
fisttps
ret
mov
stos
in
aaa
sub
inc
lock
rclb
xor
jnp
and
aam
aam
testl
adc
ficompl
mov
scas
ret
cmp
mov
or
popa
scas
mov
lret
insb
aad
mov
sub
dec
mov
dec
aaa
js
dec
hlt
fcoml
pop
xchg
push
cltd
mov
jmp
aam
mov
arpl
movsb
enter
pushl
fcmovnb
pop
ds
mov
enter
mov
data16
mov
adc
btc
loop
mov
mov
or
and
fstl
call
aas
sub
mov
push
lret
mov
lret
mov
enter
mov
stos
sarl
fstps
paddw
test
outsl
idivl
cmp
loopne
dec
addr16
push
fnstsw
je
push
jns
call
sbb
jns
std
sub
in
into
fcomip
js
add
pop
movsb
sub
mov
outsb
std
mov
push
xlat
fwait
mov
test
sub
outsb
xchg
bound
divb
jp
adc
xor
clc
inc
sti
outsb
xor
cwtl
je
mov
push
pop
dec
inc
cmp
clc
imul
or
aaa
mov
jae
pop
mov
cmp
mov
lret
aas
loope
mov
sbb
insb
jmp
filds
addr16
fcoms
add
outsl
mov
xorl
sbb
daa
mov
outsb
or
mov
insb
popf
push
repz
push
pushf
mov
cmpsl
dec
push
cmpsb
mov
ret
test
fisubl
js
and
xchg
cltd
xor
popa
cmpsb
shrb
addr16
mov
andl
imul
pop
std
dec
inc
mov
ljmp
cld
mov
int
pop
test
mov
sub
push
repnz
and
push
out
filds
int
notl
lahf
push
adc
sbb
xor
mov
mov
addl
iret
inc
sub
test
add
in
dec
xor
xor
sub
cmp
jle
std
adc
int
test
int3
mov
xlat
int3
sahf
mov
ds
xor
mov
sbb
mov
inc
stos
imul
gs
pop
xchg
leave
xlat
mov
or
imul
sbb
push
xorb
orl
inc
mov
add
or
sbb
pop
lea
movsb
mov
push
movhps
mov
lahf
jne
jo
add
scas
adc
xchg
ret
xor
rcll
lock
mov
out
sub
and
test
mov
pusha
add
and
lock
mov
sub
or
mov
mov
mov
mov
push
repnz
mov
or
negl
and
idivl
sub
ret
xor
sbbb
aaa
lods
and
es
outsl
jo
pop
jne
lods
xchg
ret
cmp
stos
imul
jb
outsb
mov
ljmp
sbb
ret
into
jg
push
xor
mov
test
jmp
es
mov
or
inc
fcoml
mov
jp
std
fimull
xlat
pop
xor
dec
inc
xchg
out
and
ljmp
dec
shlb
push
mov
push
and
push
lcall
add
push
js
in
sbb
cmp
and
jns
pop
mov
jg
and
test
and
fldl
fstps
mov
push
pop
fildll
mov
fisubl
scas
stc
jnp
daa
mov
nopl
push
jnp
inc
inc
dec
ljmp
mov
mov
cwtl
or
dec
inc
leave
cmp
push
ljmp
rcll
into
jno
mov
scas
mov
dec
cmp
pop
sub
stos
pop
xchg
xchg
aad
pushf
mov
and
popl
lods
mov
jmp
sub
jmp
xchg
loope
shlb
xor
lock
xchg
jp
sbb
nop
imul
adc
popf
pop
cmp
mov
xlat
test
adc
inc
xchg
dec
sbb
jl
sub
cmpsb
lock
test
push
rorb
add
aas
jmp
push
lahf
inc
fwait
imul
cmc
fsubs
dec
test
mov
loop
je
pop
scas
aam
mov
pop
mov
aam
lahf
inc
mov
fidivs
or
push
push
and
or
cltd
das
xor
mov
imul
imul
daa
push
adc
xor
add
stos
jecxz
out
push
lcall
mov
inc
xchg
addl
add
and
mov
sbb
es
sub
and
shr
pop
dec
mov
mov
mov
push
mov
or
popa
cmp
mov
jnp
cmpsb
mov
daa
call
lahf
add
out
xchg
clc
jbe
pop
fidivrl
in
mov
insb
adcl
int3
jmp
jp
mov
add
dec
or
jne
dec
ljmp
push
imul
inc
ja
aam
lret
inc
mov
lret
sub
lds
into
inc
iret
dec
mov
pusha
push
jl
inc
ret
xor
mov
stos
repnz
xchg
cmp
add
sbb
sub
pop
xor
mov
xchg
jp
pop
repnz
adc
or
mov
cmp
mov
fcoml
add
jne
sub
jne
mov
sbb
and
aad
pop
mov
jmp
mov
inc
notl
loope
sbb
push
xchg
dec
inc
popf
and
sbb
enter
in
das
cld
arpl
xor
out
in
in
cmp
cmpsb
mov
sbb
sbb
mov
inc
xlat
xor
cmp
mov
push
pop
xchg
and
mov
cs
roll
fidivs
add
xchg
pushf
inc
lahf
lret
adc
fldcw
adc
inc
inc
jnp
mov
sbb
xorl
pop
ficomps
lods
icebp
les
out
and
mov
lcall
out
adc
pop
outsb
test
jbe
popa
mov
ds
ret
or
inc
jg
shlb
mov
dec
adc
push
mov
xorb
cld
inc
movsb
faddp
lret
loopne
sbb
lret
sub
loope
in
dec
mov
mov
fs
jne
lcall
xor
mov
add
inc
pop
lods
rcr
jmp
push
arpl
ja
mov
je
out
insl
loop
push
lret
mov
sub
jge
push
jmp
fldt
xchg
shrb
roll
popf
xor
or
test
mov
mov
sbb
mov
cmpsl
repz
sbb
mov
or
pop
cs
call
xchg
xchg
scas
lcall
mov
mov
sbb
icebp
xchg
mov
mov
mov
add
movsb
adc
pop
inc
inc
add
sbb
imul
sbb
sub
lcall
xchg
inc
sbb
stc
lret
mov
sarb
nop
fwait
and
add
and
mov
das
dec
jo
dec
mov
pop
dec
pop
pop
nop
xchg
push
jg
inc
mov
xorl
xor
pop
addr16
push
or
notl
mov
ret
repz
bound
outsb
imul
fstl
lods
xchg
push
push
fsubl
sbb
jl
mov
sti
mov
inc
or
push
push
fisubs
lret
into
inc
fld
mov
pop
les
pop
das
adc
push
outsb
xchg
pop
outsl
cmp
lret
ret
sub
loope
repnz
mov
cltd
mov
and
sub
xchg
and
aaa
pop
sbb
arpl
sbb
jg
xchg
adc
xor
repnz
xor
push
fistl
das
cmp
adc
pop
lret
jbe
cs
or
sbb
mov
addr16
dec
and
testl
push
dec
cmpsb
inc
push
mov
jno
mov
mov
sub
fisttps
sbb
fucomip
das
push
loop
cmc
scas
scas
pop
sbb
sbb
enter
mov
dec
mov
repnz
add
sub
add
loopne
mov
lock
test
inc
fwait
orb
mov
ja
lods
dec
pop
hlt
inc
fldl
push
xor
mov
out
fadds
cmp
mov
je
outsb
push
lcall
sub
lds
sbb
loop
and
inc
xchg
movsb
or
fldt
adc
call
sbb
test
cmp
cmp
cs
jbe
sbb
and
subb
xor
push
stos
lods
addr16
adc
ret
je
push
enter
es
lock
pop
leave
mov
jmp
std
mov
adc
andl
mov
int
in
inc
push
ds
fwait
jle
and
mov
js
orl
cmc
mov
jae
sbb
add
es
mov
ljmp
pop
cmp
inc
rcr
andb
shll
dec
jne
mov
xor
stc
lock
mov
xchg
call
fcmove
arpl
insb
stos
sbb
or
mov
out
stos
cltd
xchg
inc
dec
sub
add
enter
sahf
test
cli
xor
sti
add
ret
ret
mov
leave
jb
pop
ljmp
inc
xchg
jbe
cs
shrb
jp
and
cmpsl
xor
jne
add
leave
repnz
stos
loopne
hlt
dec
rorl
cmpsb
sahf
inc
ds
jge
sub
inc
lcall
fcoms
sub
sahf
popa
mov
jl
sbb
add
jo
imul
ss
rorl
mov
inc
and
or
aaa
jne
sub
rorb
jmp
jle
fmuls
inc
pop
ja
inc
cltd
lods
cli
cwtl
mov
xchg
jmp
push
pop
pushf
cs
idiv
inc
arpl
adc
mov
cmpsl
decl
xor
mov
mov
or
fisubrl
or
inc
lcall
hlt
mov
lock
fbld
push
pop
fstpt
iret
cmp
ficoms
adc
or
jno
scas
das
adc
push
inc
push
sub
test
imul
cmp
dec
mov
ficomps
bound
inc
sar
lcall
sbb
add
lock
jb,pt
dec
hlt
xchg
cmp
test
cltd
test
fdivs
arpl
dec
mov
push
aas
add
negl
repnz
ljmp
mov
orl
mov
mov
xor
mov
mov
push
ljmp
in
in
dec
jnp
leave
lea
icebp
lds
mov
cmp
test
jge
dec
xchg
sub
lcall
insl
orl
sub
pop
jnp
test
test
jo
mov
addl
jo
fimull
fwait
cmp
jecxz
or
add
mov
mov
hlt
popf
out
dec
mov
jns
pusha
and
sbb
pop
dec
mov
adc
lret
stos
lret
sub
cli
mov
cmpsb
fs
xor
sub
push
aam
push
or
mov
xor
fwait
loope
aam
daa
jae
sub
in
cwtl
mov
sub
popa
out
jp
pop
adc
xor
imul
push
xor
pop
inc
sbb
jns
fsubl
sub
mov
push
and
mov
test
pop
lock
pop
and
imul
add
cmp
repz
or
sub
aas
pop
cmp
jecxz
clc
cmp
fwait
orb
sbb
jne
xchg
andb
fcoms
cmpb
and
xchg
sbb
mov
jb
mov
push
mov
aam
mov
insl
jg
mov
ljmp
sub
push
icebp
cltd
mov
pop
mov
dec
das
int3
dec
rcr
jge
jge
and
cmp
insl
popf
sbb
adc
ret
je
loopne
pop
sti
lock
inc
sub
pop
int3
pop
cs
lret
inc
incb
jle
cmp
push
nop
mov
fidivs
adc
jae
push
dec
int3
add
je
dec
loopne
push
repz
int3
xor
int
dec
mov
fidivrl
rorb
out
bound
pop
movsl
adcl
arpl
pop
aad
sbb
pop
cmp
daa
mov
xor
xor
pop
and
push
mov
push
testl
sbb
bound
imul
jae
push
clc
and
ds
int
loopne
int
adc
loopne
mov
push
out
imul
fs
jecxz
insb
cmc
scas
jnp
xor
pop
jno
cmpb
cmp
cmpsl
mov
je
add
adc
fmul
shlb
ret
in
imul
xor
sbb
xor
mov
adc
movsb
pop
mov
jo
mov
xchg
mov
or
in
mov
cli
mov
in
lret
adc
aad
cmpsl
jle
ret
pop
lea
mov
insl
mov
pop
lret
or
data16
outsl
cltd
jbe
pop
jl
repz
cmpsb
pop
fnstcw
rcr
jo
xor
sub
aad
mov
aas
xor
addr16
clc
push
mov
or
mov
push
sahf
leave
or
push
insl
cld
cmp
movsl
mov
jne
mov
and
xchg
cmp
mov
mul
out
dec
das
cmp
inc
xchg
insb
cmpsb
out
cmc
mov
mov
jle
int
out
add
dec
in
ret
xchg
jecxz
out
mov
fcoml
mov
pop
push
cmp
inc
mov
sarl
scas
jecxz
test
fadds
xor
sub
mov
shrl
xor
cmp
mov
dec
jl
jnp
mov
sub
or
adcb
dec
int3
jne
js
addr16
outsb
pop
out
out
mov
pop
int3
mov
adc
jl
ret
add
int
aad
jmp
int3
xchg
push
pop
rcl
mov
jbe
lret
icebp
push
dec
stc
and
add
je
mov
jmp
pop
mov
push
xchg
movsl
movsb
xor
int
pushf
push
inc
adc
mov
lds
sbb
lret
and
and
cmpsl
jg
cli
movsb
xchg
pop
cmp
pop
scas
mov
fnstcw
jle
inc
hlt
mov
fucomp
pop
fildll
std
popa
mov
jecxz
fiaddl
aad
and
addr16
cmc
dec
insl
int3
ret
xor
mov
enter
imull
out
and
pop
and
scas
fs
jmp
pop
dec
xchg
shlb
xchg
gs
pusha
mov
icebp
xor
xchg
sbbl
lahf
or
adc
mov
roll
dec
popf
add
mov
cmp
movsb
bound
push
mov
int3
pop
push
test
pushf
push
fistpl
dec
jnp
call
mov
int
jl
mov
sahf
lds
add
or
mov
sub
dec
ss
dec
std
sbb
movsl
outsb
into
shr
xchg
cmp
cmp
mov
dec
push
andl
frstor
sbb
scas
inc
rol
lods
and
fwait
pop
sbb
addl
hlt
and
dec
add
dec
stos
inc
fsts
mov
cmp
jnp
dec
mov
fsubs
lock
leave
or
xrelease
add
rcl
xchg
ret
push
pop
sbb
or
mov
js
inc
fstps
sbb
jnp
je
lahf
jge
or
and
adc
push
mov
outsb
bsf
call
hlt
movsl
out
push
fbstp
cli
push
mov
sub
daa
pop
andl
std
jb
sbb
mov
mov
xchg
mov
and
inc
int
loopne
mov
repz
mov
orb
inc
push
mov
inc
dec
xor
es
and
dec
cmp
out
push
icebp
ret
leave
and
aas
sub
xchg
and
sub
sbb
ds
mov
test
sbb
call
push
mov
jae
icebp
insb
cmp
add
bound
dec
jle
fs
xor
ds
push
cmp
cmp
xor
cwtl
jo
std
mov
or
pop
sbb
jb
mov
add
or
sti
sbb
sbb
inc
call
mov
ret
jge
cmp
pop
or
jb
orl
cmpsl
cmp
sub
aas
arpl
mov
mov
adc
inc
push
inc
into
das
pop
pop
jle
shlb
mov
test
xchg
outsb
xlat
aaa
mov
mulb
cld
ds
test
push
int
push
mov
cmp
or
ljmp
shll
in
mov
cmp
bound
mov
push
xlat
shrb
push
cli
push
xchg
addl
mov
mov
dec
inc
imull
inc
leave
js
mov
mov
std
shr
outsl
or
scas
clc
repnz
shr
dec
scas
gs
mov
xchg
sbb
ja
sahf
mov
int3
int3
mov
mov
sbb
xor
mov
lret
inc
adc
scas
fmul
imul
sbb
cltd
pop
dec
sbb
les
sti
push
push
xchg
xor
xchg
push
je
ss
aaa
mov
inc
adc
dec
test
add
ret
mov
aas
dec
pop
push
hlt
andl
cmpsl
lock
int
out
pop
in
push
fadds
push
mov
icebp
jp
test
cmpsb
lcall
aas
jo
lcall
gs
jg
dec
scas
and
out
fsubrl
fdivrp
xor
cwtl
js
add
pop
in
sbb
mov
scas
ficoms
imul
nop
sub
shr
enter
jle
cmp
cmc
stos
shrl
pop
ficoms
loop
jmp
jmp
xchg
dec
dec
mov
xorl
nop
mov
pusha
inc
and
lock
jp
test
jl
push
ljmp
pushf
jg
jo
sahf
test
jbe,pn
sub
pop
shl
add
dec
xlat
push
mov
lahf
in
sbb
loope
jne
dec
xchg
test
xrelease
sub
pushl
push
roll
lahf
lods
gs
mov
gs
lahf
outsl
xchg
push
cmp
scas
sbb
shll
push
shrl
adc
rolb
cwtl
push
scas
xchg
cltd
inc
xchg
sub
jmp
jecxz
pop
faddl
cs
jnp
mov
sbb
rol
jae
test
mov
ss
sti
cs
mov
enter
sub
fsubrl
stos
int3
and
std
adc
es
fsubrs
add
gs
ja
cltd
and
mov
sbb
cltd
add
faddl
popa
push
pop
aam
js
fcmovb
adc
mov
stos
xchg
stos
sub
jns
clc
aad
scas
mov
sbb
sbb
clc
mov
out
sub
push
or
lods
lock
std
imul
jmp
imul
lods
mov
mov
lret
jno
clc
dec
dec
pop
shrb
stos
movsb
mov
fadds
std
in
testl
inc
ret
mov
jb
scas
repz
xor
jnp
add
insb
scas
jle
sbb
stos
outsl
dec
out
test
mov
dec
sbb
push
lods
bound
aam
into
cltd
jg
cs
cmp
mov
jno
inc
stos
scas
push
inc
daa
push
mov
aas
inc
xor
xchg
test
faddl
mov
hlt
ficompl
ret
out
test
push
lret
sbb
mov
jp
jecxz
and
jo
jmp
inc
es
stc
push
mov
insl
je
mov
ret
movsl
sbb
pop
cmpsb
int3
loopne
jl
loopne
add
out
sbb
and
or
inc
mov
cmp
ret
popa
test
ret
pop
fidivs
js
jbe
xchg
mov
loop
ljmp
inc
dec
outsb
push
jmp
pop
cmp
jae
mov
in
das
mov
or
add
sub
popa
xor
loope
inc
sub
fidivl
sarl
and
fwait
pop
mov
add
adc
movsl
xchg
cltd
sub
mov
arpl
inc
mov
push
test
xchg
insl
enter
adc
fisubrs
xor
fsubrs
and
lahf
dec
mov
mov
aas
push
push
adc
xchg
dec
xchg
xchg
sbb
xor
jp
push
mov
cld
stos
cld
cmpb
jl
orl
mov
repnz
scas
cmp
dec
pop
lods
push
movsl
outsb
jne
pop
xchg
das
sahf
adcl
pop
xchg
mov
test
mov
jno
dec
dec
mov
ja
iret
xor
mov
icebp
repz
inc
fstl
insl
push
sarb
std
dec
stos
mov
dec
out
fnstenv
movsb
jae
push
jmp
pop
add
mov
mov
jmp
xor
sbb
sti
andl
push
int3
fdivp
add
addb
sub
push
fidivrl
mov
ret
mov
mov
adc
rorl
test
xor
lcall
ljmp
mov
xor
pop
push
sar
rorb
shl
jno
xchg
movsw
xor
pop
lcall
fbstp
arpl
and
jbe
movsb
nop
xor
adc
ret
mov
inc
sub
stos
sbb
loopne
push
or
mov
addr16
iret
pop
imul
pop
mov
scas
das
dec
mov
out
test
test
pop
mov
enter
mov
loop
fstps
push
std
and
lods
adc
mov
sbb
ljmp
repnz
pop
push
pop
mov
mov
ss
push
lock
cmp
mov
jmp
jns
mov
xorb
push
or
ds
pop
aam
xor
movsb
pop
mov
int
jne
enter
out
ficoms
dec
xchg
int3
jp
in
dec
pop
lret
test
mov
mov
sarb
lret
fstpl
stos
mov
jecxz
aad
test
aaa
dec
sub
jmp
dec
mov
bndldx
cld
push
add
scas
sbb
push
fsts
ffreep
pop
pop
sti
pop
jg
mov
cmp
inc
mov
mov
and
mov
fldenv
lret
sbb
in
mov
cs
outsb
fidivrl
in
fwait
mov
lea
fwait
les
pop
nop
sahf
lock
mov
incl
int3
cmc
push
or
pop
xor
ret
fstpt
mov
aad
outsl
mov
out
xor
imul
pushf
mov
xlat
shl
push
cld
aaa
outsl
sub
xor
out
aad
push
xchg
subl
fldenv
mov
xchg
shlb
xchg
das
mov
dec
shll
ffreep
mov
mov
jge
lods
inc
xor
jp
lcall
lods
arpl
insl
dec
inc
push
push
mov
mov
lret
sub
jp
rcrl
repnz
outsl
mov
or
fcompl
mov
jbe
cmp
subl
clc
cs
mov
push
pop
pop
inc
jge
mov
lods
fisubrl
sub
adc
push
add
adc
pop
les
jp
inc
arpl
stos
pusha
jecxz
mov
call
out
aas
cmpsl
sarl
adc
pushf
out
xlat
lods
cs
test
pop
cmp
xchg
insb
lea
movb
aas
std
int3
into
mov
mov
jg
push
dec
mov
ds
scas
lds
xchg
scas
push
idivb
nop
mov
adc
adc
movsb
mov
sbbb
lahf
pop
dec
cmpb
xor
cmp
push
scas
outsb
mov
adc
fdivs
popa
js
mov
inc
stos
fidivs
bound
pop
cmc
xor
lahf
mov
dec
xor
lret
xchg
xchg
cli
fs
add
fistpll
mov
dec
jg
sti
jmp
cmp
mov
dec
aaa
inc
pop
sbb
jg
enter
fs
gs
xor
lds
popa
scas
push
ja
mov
nop
cld
int
ret
xchg
xlat
das
jmp
not
mov
cmp
int
lret
jmp
cmp
mov
data16
mov
sub
xchg
lds
adc
jmp
sub
jbe
cld
xor
mov
sbb
push
cmp
aam
mov
rorb
cmc
mov
bound
xor
cmp
scas
cmc
mov
movsb
enter
addr16
or
jnp
hlt
enter
fmulp
dec
mov
popa
add
jp
xchg
sub
sbb
out
sub
jne
or
bound
pop
mov
dec
jecxz
pusha
out
aaa
mov
fdivp
or
nop
mov
xchg
jl
out
mov
out
pop
incl
xor
das
outsb
mov
adc
push
fcomps
add
jb
lcall
inc
or
jbe
movsb
mov
ret
into
test
cltd
cltd
xchg
stc
out
loopne
fdiv
xchg
pop
orps
fstpt
in
cltd
push
adc
jnp
fwait
mov
adcl
dec
test
lcall
pop
xor
loopew
sbb
sbb
push
push
lret
pop
in
mov
xor
sbb
shlb
pop
and
push
jle
int
xchg
cmpb
and
dec
popa
push
mov
jne
jo
pop
xchg
jbe
jle
sub
stos
out
int
and
pop
cmp
sbb
adc
jbe
adc
hlt
iret
adc
bound
out
andb
mov
mov
rol
push
dec
int3
add
shrl
push
push
mov
adc
or
cmp
mov
adc
shll
mov
xchg
cmp
jp
into
mov
lock
adc
ljmp
cmp
mov
add
and
sarl
xchg
call
out
xchg
dec
mov
fwait
hlt
adc
lods
or
std
jge
aad
mov
loopne
mov
rcll
inc
scas
test
lods
call
sahf
sub
js
sete
inc
xor
bnd
out
cmpsl
push
ja
push
jbe
xchg
jne
ret
adc
sti
mov
mov
jp
or
jnp
push
inc
sbb
mov
sub
ret
inc
fidivrl
pop
xchg
sbb
and
jg
xor
and
test
mov
xchg
imul
lods
jno
xchg
stc
sbb
add
and
fdivr
test
aaa
dec
std
mov
nop
mov
jae
std
insb
pop
jp
js
cmp
es
mov
lods
fdivrp
xor
mov
ss
loop
add
ljmp
test
shlb
ds
mov
add
sti
pop
push
orl
bound
sub
inc
imul
lcall
insb
out
popf
notb
sub
int3
aaa
pop
in
mov
mov
sarb
test
cltd
add
jnp
imul
aad
jmp
adc
push
push
cmp
scas
adc
popa
push
fsubrl
je
dec
mov
ds
lock
or
jae
jge
lds
push
loope
ja
add
pop
es
call
stc
ja
dec
addr16
jb
cmpsb
adc
shll
lods
jns
repnz
mov
sub
out
ret
mov
cltd
add
xchg
addl
in
push
sub
enter
sbb
adc
pop
ret
test
push
xor
movsb
cmp
dec
ljmp
fs
imull
stos
addl
loop
jnp
dec
cmp
icebp
add
loop
jge
fstl
pop
pusha
mov
adc
add
push
cltd
cmp
ret
xchg
and
and
mov
sbb
jno
jb
pop
int3
fwait
sbbl
pop
pusha
mov
outsb
or
test
cmpb
leave
lods
adc
and
sbb
loopne
add
mov
test
push
pop
aam
cltd
and
jg
out
sarb
lods
lret
ret
flds
enter
inc
cltd
into
jp
push
stos
mov
mov
add
xor
xchg
ljmp
jno
scas
mov
loop
push
das
add
outsl
std
and
mov
jns
xchg
adc
aas
dec
pop
ja
sbb
call
fbld
xchg
jb,pn
insl
adc
mov
fldenv
dec
dec
aam
dec
cs
std
repnz
scas
xor
iret
out
and
add
sbb
fisubl
and
mov
ja
xchg
jno
push
cmp
mov
aas
andl
xor
sarb
mul
sbb
jno
xchg
pmaxub
fcmovnb
mov
sub
fstl
jo
mov
mov
stos
rolb
inc
stos
add
pop
mov
jb
iret
sub
fnstcw
in
jg
sbb
and
test
sarl
jge
sbbl
scas
and
mov
mov
inc
xchg
popf
mov
out
jno
jb
cwtl
mov
fldl
jno
imul
in
add
pop
dec
into
jns
push
pop
ficoms
dec
push
xchg
jmp
fwait
or
push
scas
xchg
mov
repz
mov
dec
push
dec
ffreep
les
inc
repnz
adc
push
insl
bound
push
xchg
jge
adc
add
jns
imul
adc
cmp
imul
ja
leave
outsb
jbe
int
fadds
outsb
bound
sub
pop
xchg
fsubrs
mov
out
push
out
jecxz
push
in
mov
add
or
mov
jne
clc
or
mov
mov
ja
popa
mov
shlb
or
add
aam
stos
stos
mov
pop
mov
pop
mov
jne
insl
cmp
and
lock
je
in
es
divl
cmp
mov
pop
xchg
out
mov
push
and
fs
jns
movhps
repnz
push
cmp
push
sub
xor
jnp
xor
lods
sub
rcr
mov
stc
jno
scas
or
push
mull
cmpsb
xor
mov
xchg
cmpl
inc
flds
cmpsb
pushf
xor
scas
cmp
out
push
sub
and
enter
outsl
and
cmpsl
and
xchg
int
mov
cmp
es
loope
cmpsb
mov
adc
add
mov
mov
xor
inc
xchg
ja
mov
add
cltd
jle
mov
mov
stc
push
xchg
nop
adc
jno
pop
push
cs
rcrb
int3
je
sbb
stos
cmp
lret
xlat
xlat
jae
xor
ret
ds
or
icebp
test
out
ljmp
test
hlt
inc
jecxz
mov
sub
push
insb
pop
push
imul
cs
xor
mov
jns
sarb
mov
xchg
cmp
cli
inc
xlat
xchg
aas
push
adc
scas
xchg
sbb
sti
jge
pushf
outsl
or
mov
lret
sahf
mov
push
dec
pop
xchg
add
add
xchg
pop
aaa
push
push
mov
inc
mov
inc
adc
sub
scas
bnd
fwait
or
push
sbbb
ja
fimull
mov
and
dec
push
mov
cmpsl
mov
push
data16
xlat
dec
mov
jmp
xlat
inc
sbb
rcrl
lods
in
mov
lret
or
std
and
jg
in
les
mov
xor
les
inc
cld
or
cmp
into
xchg
dec
push
repz
lds
lahf
std
inc
sub
cltd
shl
loope
ss
bound
ljmp
or
iret
and
test
repz
je
adc
and
xor
mov
mov
add
jae
out
adc
xchg
mov
push
test
mov
pop
cmp
mov
mov
bound
push
sub
mov
xor
jno
flds
sub
cmpsb
inc
daa
sub
clc
jmp
call
test
xor
inc
aas
int3
es
dec
movsl
dec
test
adc
rolb
and
in
add
je
adc
testb
out
fs
lcall
sub
sbb
cmpsb
pop
mov
push
dec
mov
movsl
movhlps
pop
sbb
pop
jge
aas
add
in
popf
lods
push
add
adc
mov
xlat
cmp
cmpsb
jne
push
ret
adc
inc
dec
mov
push
xor
xchg
lea
sbb
nop
icebp
fisttpl
xchg
mov
jmp
inc
gs
into
jo
or
icebp
xor
mov
lcall
stos
hlt
lea
addb
pop
push
ficoms
sbbl
iret
push
test
and
arpl
arpl
jle
inc
andl
jb
movsb
jae
adc
js
cmp
inc
and
and
xor
inc
repnz
imul
jbe
mov
repnz
rcll
lret
sub
mov
out
lahf
push
cmpb
cmpsb
jp
imul
xor
pop
lret
dec
ljmp
inc
int
sub
inc
std
icebp
fwait
iret
and
jle
mov
rclb
pop
xchg
xchg
adc
lret
pop
mov
nop
das
es
shl
les
js
sbb
int
sub
add
inc
pop
into
xchg
arpl
mov
outsl
adc
jns
std
xchg
or
pop
fisttpll
test
or
jns
rolb
mov
push
adc
popf
mov
mov
sahf
pop
add
add
jns
cld
xor
addb
adc
sbb
push
test
push
dec
mov
or
xchg
dec
xchg
out
sbb
pop
push
mov
or
pop
cmp
jns
sbb
dec
jne
roll
and
mov
lret
fiaddl
mov
push
xor
xchg
pop
lds
ss
mov
xor
add
imul
sub
loopne
adc
xchg
hlt
sub
jge
fwait
inc
sbb
cmp
loopne
and
roll
jno
mov
inc
mov
ror
pushf
mov
je
arpl
sub
xor
outsl
and
loope
cld
bound
addr16
mov
test
lcall
sub
push
push
mov
insb
or
iret
inc
xor
dec
in
push
dec
xchg
aad
out
jae
int
xchg
sbb
lcall
mov
out
cli
xchg
sbb
cmpsl
addr16
sbb
or
and
pop
mov
mov
xchg
iret
pop
lods
test
scas
push
in
or
out
cmpsl
sbb
add
add
mov
mov
mov
jne
ret
daa
or
push
sbb
outsl
cs
scas
lcall
jle
sub
in
mov
mov
frstor
insl
adc
je
mov
fcmovnb
loope
sbb
mov
mov
lock
enter
fimull
dec
mov
flds
xor
cmp
jg
cmpsb
notl
pop
adc
dec
push
dec
call
sbb
mov
daa
or
sub
and
fists
xchg
pushl
icebp
imulb
add
aas
insb
fdivrs
iret
lods
out
sbb
mov
jl
xor
icebp
adc
push
fistpl
cmpsb
dec
jae
lods
sbb
mov
imul
movsl
cltd
pushf
js
cmp
lock
adc
mov
or
insb
and
and
popa
and
daa
mov
arpl
shrl
repnz
lea
popf
push
ss
adc
repz
lcall
mov
shll
data16
test
mov
pushf
mov
lea
scas
mov
jl
leave
scas
sti
jb
stc
jnp
jno
imul
in
dec
mov
xor
cmpsl
xor
sub
push
mov
das
mov
js
jmp
outsb
mov
mov
cmpsl
dec
mov
jnp
cmp
xor
jp
inc
inc
enter
pop
mov
mov
stos
xor
xchg
into
sti
pop
or
call
sbb
hlt
or
xor
sti
or
or
ficoms
addb
push
push
inc
adc
sub
enter
add
jg
add
in
push
mov
jno
adc
nop
fimull
cmp
jmp
add
loop
push
aam
hlt
shrl
inc
jecxz
jmp
rcll
push
mov
cmpsl
bound
mov
sbb
sbb
das
push
nop
ucomiss
xchg
xor
add
push
jp
sub
mov
xchg
mov
lods
scas
xor
add
lods
leave
dec
gs
imul
jge
mov
rol
jne
std
push
sbb
push
fiadds
xchg
shrb
mov
sub
lock
dec
xlat
sub
mov
fsubrl
jo
sbbb
popl
and
jp
punpcklbw
stos
pop
xor
jae
je
imul
mov
fcompl
icebp
adc
cmpsb
mov
scas
jbe
into
xchg
inc
xchg
mov
jnp
insl
jecxz
daa
int
jno
jl
sbb
or
mov
adc
mov
mov
in
insl
cli
cmp
cld
shlb
out
testb
jle
inc
lods
jns
push
daa
in
addr16
jge
sahf
sub
or
out
mov
das
mov
popa
ficoml
inc
imul
jae
out
stos
in
push
jecxz
insb
outsl
push
cmp
sub
inc
mov
inc
or
pop
push
outsb
jl
imul
shll
rcl
nop
mov
ss
mov
cmp
mov
mov
insl
mov
mov
lret
mov
cmp
test
clc
scas
out
lock
xor
xor
test
xchg
sbb
cmpsb
lret
mov
adc
cwtl
jns
and
push
daa
mov
pop
mov
fdivrs
jle
mov
cltd
sub
adc
add
nop
sbb
ret
cmp
push
loopne
xchg
arpl
mov
jle
cli
sub
lock
adc
adcb
lahf
ret
xorl
mov
and
rorl
xor
dec
xlat
pop
aam
lods
mov
mov
das
in
or
pop
dec
das
cli
cmp
fcoml
lret
in
xchg
push
out
pop
xchg
scas
inc
xchg
push
push
je
sbb
movsl
xchg
sbb
xchg
jg
test
int
mov
test
dec
mov
sbb
mov
je
shlb
jno
addr16
sub
movsb
sbb
jmp
fstps
xchg
stc
xor
in
aaa
and
and
clc
and
in
cmpsb
mov
push
jp
mov
sub
xchg
xchg
sub
push
cs
aam
repz
add
je
lcall
lahf
mov
mov
mov
pop
mov
adc
fdivrp
cltd
jae
call
mov
test
adc
lahf
xchg
hlt
movsb
sti
lcall
mov
and
pop
cmpsb
call
sub
xchg
xchg
xor
enter
scas
iret
sbb
and
mov
mov
mov
push
inc
jl
dec
test
sahf
inc
shll
fdivs
fdivl
and
les
or
and
push
mov
jp
sbbl
push
in
mov
enter
adc
out
dec
mov
negl
add
jp
lret
leave
mov
mov
sbb
mov
xor
sub
push
and
mov
mov
leave
pop
mov
xchg
pop
xchg
gs
cmovge
and
loopne,pn
test
mov
mov
scas
or
int3
xchg
push
dec
testb
dec
mov
addl
mov
pop
lcall
pop
jge
cmp
cmp
mov
mov
inc
div
sbb
mov
out
fldl
sti
push
push
aad
imul
cld
testb
push
pop
xchg
pusha
adc
enter
jmp
jne
daa
repz
lock
jg
call
xchg
jge
jnp
jo
lods
or
nop
sbb
mov
sbbl
gs
aas
pusha
int3
push
or
pop
mov
lcall
mov
jl
dec
daa
std
scas
xchg
leave
mov
dec
push
mov
jg
js
pop
neg
or
xor
mov
lods
jp
push
pop
and
xchg
dec
loope
mov
adc
fisttps
les
push
or
pop
outsb
inc
jge
add
add
sub
std
test
pop
js
loop
shll
jl
jb
cs
out
push
scas
pop
stos
sub
inc
scas
je
cs
mov
cmp
rcrl
mov
ds
adc
cmp
je
mov
loopne
fwait
sahf
dec
jg
out
pop
adc
or
repz
sbb
sbb
data16
cmp
jl
inc
fsubrl
xor
or
xchg
insb
sbb
push
or
mov
cmp
sub
adc
cli
jecxz
add
clc
call
xchg
adc
jnp
jp
inc
ret
mov
mov
out
cwtl
cmp
adc
add
or
jo
shlb
insb
xchg
inc
xchg
mov
lahf
xlat
scas
lock
imul
add
jns
push
mov
lds
scas
jmp
sbb
fcmovb
lods
popf
sahf
add
add
mov
loope
or
mov
sub
push
xor
out
push
orl
scas
bound
bound
mov
pop
xor
mov
clc
test
cmpsb
insb
push
out
out
jle
jg
push
sbb
popa
lds
out
movsl
cld
hlt
lret
or
js
xor
inc
or
cmpsb
jmp
xchg
out
push
aad
push
mov
dec
in
mov
push
or
mov
nop
repnz
dec
std
jmp
shrb
pop
jl
jl
cli
cmp
jno
xchg
inc
lods
mov
fistpll
add
xor
cmp
sbb
sub
es
sti
lods
loopne
lods
and
inc
mov
inc
pop
sbb
sbb
dec
lcall
jb
jge
mov
popa
mov
lahf
jecxz
inc
shrb
push
mov
lds
mov
xor
iret
leave
adc
sbb
movsb
out
xchg
cmpsb
test
mov
xchg
movl
jo
adc
mov
fmuls
jnp
ficoms
mov
nop
adc
cmpsl
testl
push
dec
test
pusha
pop
pop
or
loop
cmp
and
movsb
mov
fs
es
ja
adc
pop
pop
xor
leave
push
dec
pop
mov
dec
call
xchg
int3
jbe
adc
out
fwait
aam
mov
es
dec
stc
dec
frstor
mov
adc
push
xchg
fistpll
popa
wrmsr
cmpb
push
dec
jle
cmp
jmp
imul
adc
push
xchg
dec
test
pop
mov
sub
jno
ret
mov
pop
sti
add
mov
dec
adc
add
test
fnstcw
ret
jo
and
fisubs
xchg
das
pop
pop
roll
and
or
add
sahf
mov
repnz
inc
jl
sub
sar
xor
outsb
inc
inc
pop
cmp
or
dec
test
aas
dec
pop
mov
mov
push
fisubs
cmpb
adc
push
mov
enter
fisttpl
loope
xor
pop
xor
mov
mov
add
xor
sbbb
inc
aam
shll
add
pop
sbb
je
mov
fldt
mov
dec
out
jnp
jnp
pushf
sub
jl
rcrl
mov
push
inc
mov
pushf
and
push
or
pop
pop
stc
mov
hlt
mov
shr
mov
pop
lahf
scas
cmp
mov
sbbb
mov
adc
enter
rcrl
cmp
lcall
sbb
or
inc
int3
cltd
xlat
std
sbb
aaa
pop
or
jnp
xchg
dec
push
mov
mov
or
shll
lret
xchg
pop
add
or
je
fs
insb
call
xchg
cwtl
ret
fcompl
je
js
fldenv
lret
xchg
sub
add
push
sub
iret
insb
lea
xor
mov
dec
das
mov
or
fwait
fwait
inc
jne
fwait
or
test
icebp
pop
dec
xchg
repz
xchg
enter
and
pop
cwtl
fmuls
in
sahf
mov
scas
mov
arpl
pop
fs
aad
popa
call
mov
outsl
push
outsb
loop
inc
inc
in
ds
jbe
cmc
aad
fs
sub
sub
inc
push
mov
stos
mov
ja
arpl
jno
stos
sbb
jecxz
xchg
aam
dec
xlat
test
adc
xor
shll
pusha
lods
jge
in
ja
hlt
in
xchg
imul
cmp
aaa
cltd
daa
pop
out
call
fsubrp
pop
addr16
pop
inc
fs
hlt
in
pusha
or
pmuludq
mov
push
mov
aam
dec
pop
inc
adc
sub
xchg
fldenv
inc
sbb
xchg
inc
jo
addb
cmpsl
and
sbb
fdivr
and
in
sub
out
push
jmp
int
adc
jbe
movsl
pop
repnz
xlat
fcmovb
inc
fwait
subb
scas
push
jns
rcrb
sarl
add
pop
cmp
iret
or
add
or
pop
sub
div
xor
sub
and
fwait
icebp
mov
push
scas
imul
xor
mov
test
fcmovne
clc
ja
cmp
mov
xchg
xor
xchg
sub
filds
mov
and
cs
andl
xor
push
iret
add
aam
mov
xor
pop
inc
inc
dec
jb
cld
stos
push
mov
das
xchg
gs
dec
outsb
xchg
fbstp
xchg
xchg
sbb
repz
dec
aam
ds
or
es
arpl
test
push
cmpsl
stos
lret
lret
stos
xor
sbb
inc
cli
and
jne
add
stos
mov
lds
jle
imul
push
lahf
leave
jg
movsb
push
daa
mov
or
push
ret
cmp
test
mov
mov
in
loope
pop
inc
add
push
dec
shl
fnstenv
insl
adc
lods
neg
xchg
movsl
sbb
ljmp
lahf
mov
sarl
fcom
in
inc
ja
push
out
fsubrs
cmpl
add
mov
in
mov
dec
mov
orl
dec
xor
inc
mov
inc
imul
pop
sahf
iret
dec
sbb
mov
and
ds
into
cli
in
movsb
lret
jns
in
xchg
and
lods
cmp
js
mov
pop
cmpsl
filds
inc
pop
cmp
xchg
mov
or
scas
xchg
mov
int3
das
ss
xchg
mov
or
add
insl
rcrb
hlt
cmpsl
or
cld
mov
ljmp
cld
bnd
push
mov
add
iret
mov
push
and
jmp
lods
inc
sub
cli
into
jg
shrl
xchg
mov
adc
lea
rorb
pusha
stos
div
dec
mov
sbbl
pop
out
mov
icebp
sahf
pop
test
dec
and
pop
pushf
mov
in
adc
add
xchg
cltd
adc
mov
gs
js
lahf
push
dec
pop
int
popf
shll
push
add
pop
cld
clc
pop
inc
dec
fcompl
adc
das
and
sub
inc
movsb
lret
and
pop
adc
mov
lds
cltd
fisttps
mov
test
fidivs
cltd
or
inc
ds
xor
xchg
or
push
inc
adc
imul
cmpsl
mov
xlat
or
or
adc
cmpb
jp
and
sbb
cs
out
inc
jp
mov
adc
pop
fdivrl
cmp
cmpsb
fisubl
or
scas
jg
push
jo
fwait
into
or
daa
movsb
ret
mov
ret
je
inc
or
les
cltd
xchg
jns
sub
in
dec
leave
jmp
cmc
xchg
stos
leave
pop
and
mov
mov
in
aas
jnp
xor
fdivrs
outsb
jno
fnstenv
lods
jne
cmp
repz
inc
xor
jne
call
out
loope
dec
out
test
mov
lret
add
mov
push
in
femms
test
push
int
dec
fdivrl
push
mov
cmc
ret
mov
mov
adc
cmp
mov
inc
jecxz
int3
mov
test
pushf
mov
push
fwait
dec
fnsave
gs
cmp
scas
xchg
rcr
add
scas
xchg
sbb
imul
sahf
mov
es
dec
xchg
cmp
xchg
pop
mov
or
gs
fistl
pop
adc
test
ss
out
sub
aam
and
movb
push
es
lods
outsl
xchg
nop
inc
in
ret
aas
mov
sub
or
sahf
add
setne
cmp
test
pop
and
push
or
mov
cmp
mov
xor
pop
out
loope
in
out
sbb
dec
jo
pop
fwait
sub
es
pop
pushf
xchg
or
int3
addb
fidivrl
dec
sahf
adc
jge
push
or
cmp
mov
mov
loopne
lret
test
mov
shrb
inc
not
mov
xchg
addr16
push
out
cmp
mov
jmp
pop
pop
cmc
cmpsb
and
aas
rcr
pop
ss
cmp
lods
pop
or
popa
std
adc
lret
ljmp
push
and
adc
fstl
test
sub
mov
or
lret
mov
mov
sbb
test
inc
cltd
push
neg
push
hlt
push
inc
scas
ss
mov
jae
ret
inc
adc
inc
aad
out
add
sbb
pop
jnp
int
ret
cltd
out
leave
adc
mov
and
jg
roll
push
xchg
sbbb
out
mov
out
aaa
addb
icebp
or
cmp
jb
jmp
call
adc
adc
out
lods
sbb
setno
jle
stos
cmp
ljmp
in
lds
loopne
mov
enter
add
push
mov
leave
xchg
bound
push
jmp
into
jb
mov
mov
movsb
dec
jno
push
cmpsb
insb
adc
fisttpl
mov
mov
mov
sub
xor
out
leave
jno
push
pop
dec
fnstcw
and
inc
js
std
nop
fdivs
xor
xchg
insl
push
cmovl
gs
aas
sbb
or
pushf
jnp
out
mov
loopne
xchg
int3
stos
nop
test
mov
cli
inc
lds
sbb
cld
jne
icebp
xor
mov
and
mov
jp
push
xor
loop
mov
sbb
aas
and
dec
iret
jb,pt
lret
sbb
mov
push
dec
mov
xchg
pushf
lock
jecxz
sub
xor
stc
dec
add
nop
daa
mov
mov
pop
int3
sub
adc
in
repnz
xor
sub
push
add
sub
sub
jmp
aas
fildl
inc
clc
push
popa
ror
test
adc
fimuls
mov
push
mov
xchg
ret
das
cs
sbb
and
incb
inc
jnp
lahf
subl
pop
jmp
mov
push
mov
xchg
or
clc
inc
ja
mov
repnz
js
cwtl
fcmovbe
xchg
call
adc
and
or
aaa
repz
arpl
shlb
fbstp
adc
fs
sub
push
mov
or
cmp
jp
cmp
loopnew
sarl
push
sbb
out
ljmp
jb
int3
sbb
push
jecxz
loope
mov
jecxz
sbb
test
aaa
xchg
xor
dec
mov
in
mov
jle
dec
dec
jo
cld
pop
iret
repnz
xchg
mov
xor
jnp
ds
cmp
push
mov
and
mov
mov
adc
jp
es
cmp
xchg
lcall
int
xchg
jge
adcl
test
shlb
outsl
shrb
dec
fadds
mov
cmp
dec
mov
jne
fadds
mulb
jbe
enter
inc
mov
test
fbld
mov
mov
imul
jecxz,pt
inc
movsb
ret
push
jg
insl
adc
mov
cld
jl
jno
jg
xorl
push
pop
mov
push
add
into
in
and
push
ret
sbb
mov
xor
mov
push
push
xchg
shlb
jno
test
stos
pop
adc
pop
scas
sbb
inc
sbb
mov
fs
scas
inc
aad
add
out
hlt
adc
or
push
fstps
outsl
shll
inc
cmp
xchg
inc
imul
push
xor
jl
ficoms
cmp
call
mov
ss
sbb
cwtl
pop
cmpsl
sbb
das
sbb
rol
jae
mov
fwait
xor
jg
push
pushf
shll
cmpsl
pop
add
xor
mov
jno
jle
jmp
cltd
fcoms
repz
out
mov
adc
or
inc
dec
xor
or
ret
xor
subl
push
inc
cmp
out
jno
int3
fildll
test
pop
iret
jl
cmp
faddl
xor
mov
cmp
aas
mov
aam
pop
cmp
fnstenv
dec
pop
sub
mov
jae
mov
pop
mov
mov
mov
mov
push
mov
add
iret
jno
xor
int
xor
sub
lea
xchg
aas
jnp
iret
mov
scas
ret
push
movsb
cmp
jl
outsl
stos
cmp
out
out
fidivl
mov
rclb
ret
add
insb
int3
fcomps
icebp
sbbb
dec
repnz
iret
call
xor
cwtl
loop
dec
xlat
ss
and
add
clc
sub
add
and
inc
jbe
das
outsl
movl
shl
xchg
jnp
adc
stc
icebp
or
fidivl
imull
fstpt
push
pop
dec
xchg
inc
sbb
and
lcall
pop
ret
ret
in
pop
outsb
popa
and
aad
jnp
xchg
cli
xor
arpl
stos
push
pop
or
lock
cpuid
repz
mov
xchg
popl
test
cmp
fucomip
lea
int3
out
movsl
insl
mov
sahf
test
repnz
push
movsl
adc
xor
push
in
adc
loopne
out
loop
jne
adc
mov
leave
xchg
add
je
adc
inc
dec
fs
addr16
dec
mov
shll
mov
mov
dec
push
addr16
jno
loope
hlt
movsl
lret
lret
fidivrl
sbb
mov
lret
cmp
test
ffreep
and
int
out
repz
mov
push
sbb
xor
lret
mov
pop
sbb
hlt
in
aam
lods
push
fwait
adc
cld
and
cmp
loope
call
dec
popf
test
das
out
ljmp
sbb
stc
fs
das
mov
push
mov
iret
lods
arpl
push
mov
jl
mov
xchg
lret
aas
adc
adc
inc
cmp
sbb
rcl
sbb
lahf
ljmp
insb
sbb
jp
add
mov
jp
pushf
shlb
and
js
xlat
xchg
fidivrl
and
xchg
mov
xchg
mov
add
xor
ds
jb
mov
mov
or
scas
push
and
jns
cwtl
mov
push
aam
push
call
mov
loopne,pt
stc
shlb
sbb
inc
mov
sbb
and
jle
adc
push
pop
lahf
in
nop
cmpsl
push
sbb
and
sbb
mov
mov
add
das
mov
xchg
lods
faddl
or
fmuls
enter
or
leave
adc
or
leave
adc
test
jnp
inc
or
in
fldenv
in
fnsetpm(287
out
inc
nop
flds
je
sub
add
sbb
xchg
cmp
push
cmc
and
repnz
pop
je
ja
and
jne
hlt
or
and
icebp
pop
nop
pop
cmp
scas
js
add
into
jae
movsl
mov
add
pop
push
xor
in
push
mov
jno
int
enter
test
jne
jnp
pop
xchg
cmpsb
test
or
shlb
push
jbe
jle
jbe
jo
int3
or
cmpsl
inc
push
pop
das
leave
sbb
pop
adc
lcall
and
cmc
icebp
cs
shr
aad
push
imul
in
fdecstp
sbb
adc
xchg
icebp
xchg
retw
mov
fldl
mov
and
adc
jae
sbb
out
mov
sub
inc
cmp
fldl
cs
push
add
adc
hlt
push
xchg
popa
mov
outsb
aaa
push
js
sarb
cmpsb
inc
adc
mov
dec
xor
mov
pusha
les
fcom
mov
or
adc
addr16
decb
sub
jg
sbb
subl
pop
mov
shr
fsubrl
rorl
push
mov
cmp
aad
sbb
jnp
pop
pop
mov
xchg
fnsave
imull
in
sub
pop
nop
lds
hlt
add
mov
test
jae
mov
xor
sub
push
loopne
xor
je
movsb
in
cmp
jbe
pop
sub
scas
inc
and
ret
inc
mov
std
mov
pop
add
mov
or
icebp
push
xor
adc
sti
jecxz
insl
push
test
push
push
andl
or
cmpsl
cmpsl
dec
jge
mov
inc
sub
mov
clc
add
cmp
loop
fbstp
unpcklps
mov
mov
outsb
inc
sub
mov
fisttps
ret
stc
xor
mov
lods
inc
and
pushf
add
out
sbb
das
shrl
jbe
fwait
ljmp
lods
loop
lahf
cmc
prefetcht0
adc
adc
mov
std
rcrb
in
mov
fistpl
push
xchg
aam
ret
loop
cmpsb
pop
fimull
fwait
imul
mov
repz
push
scas
lret
push
mov
roll
jp
sub
cmc
mov
sarl
add
pusha
inc
lret
retw
push
arpl
addr16
scas
jecxz,pn
sbb
cs
call
xor
imul
cmovs
sbb
cmpsb
leave
xchg
cmp
int3
pushf
sti
xor
stos
fiadds
jmp
cltd
xchg
jo
inc
out
inc
clc
sub
pop
mov
in
jp
inc
xchg
xor
into
xchg
push
out
adc
xchg
lock
push
xchg
je
imulb
mov
and
fs
out
mov
or
inc
rclb
mov
movsl
push
cmpsb
aam
sbb
mov
push
push
in
xor
lea
dec
cmpsl
outsb
adc
rorb
push
mov
mov
add
das
test
mov
mov
xor
fcompl
mov
push
mov
lock
movsl
call
push
subl
mov
and
ja
adc
jbe
mov
and
xchg
out
repnz
addl
stos
divl
outsl
adc
cmpl
cltd
cmp
cmp
dec
xor
push
pop
mov
push
pusha
inc
push
iret
pusha
or
std
jne
mov
fstp
sub
call
in
jmp
xor
xchg
loopne
sbb
jl
mov
dec
es
jbe
sub
aas
pop
sub
daa
jg
fs
mov
xlat
mov
daa
int
stos
inc
test
aaa
cmp
in
sbb
cmp
push
rorb
sub
sbb
xchg
mov
imul
jp
pop
xchg
je
push
ljmp
fisubrl
jnp
rep
add
xchg
mov
test
and
stc
pop
jnp
push
repnz
mov
mov
or
add
mov
adc
aam
in
cmp
lret
int
das
in
push
adc
mov
sub
in
mov
or
mov
in
cmp
cld
out
pushf
inc
aam
fidivl
imul
lret
es
fmull
mov
mov
pop
test
sub
stos
fildll
adc
in
and
icebp
xlat
in
stos
push
sub
sahf
mov
xor
mov
mov
lds
cwtl
ljmp
lret
bound
add
inc
imul
xor
dec
dec
lods
imul
out
jp
add
int3
ds
xorb
push
das
ds
xor
or
inc
in
in
mov
push
mull
inc
xor
pop
fcoml
and
mov
mov
xchg
lods
movb
fwait
cmp
and
ss
dec
xor
stos
les
das
pop
ja
inc
xchg
aas
insl
cmp
and
and
addr16
push
nop
sahf
out
jp
inc
bound
and
push
mov
fnstcw
inc
popa
cwtl
sbb
cltd
mov
daa
mov
iret
cwtl
push
rep
int3
loope
pop
call
in
or
push
and
push
cmp
in
push
inc
mov
push
bound
call
xor
fimull
push
dec
push
cmp
add
addr16
dec
lcall
pop
jge
xchg
mov
xchg
sbb
arpl
lret
xchg
cltd
out
and
in
lret
push
rolb
mov
jge
dec
sub
or
mov
cs
xchg
mov
je
jp
inc
xchg
pop
and
fwait
cwtl
repnz
cmpsb
mov
sub
push
and
lock
cs
shl
sub
pop
sub
push
xchg
into
jbe
cmpsb
xor
les
mov
movw
adcb
push
push
sarl
out
mov
sub
sbb
dec
xlat
push
arpl
in
inc
insb
call
in
mov
iret
and
js
push
mov
pop
add
repnz
mov
and
loop
out
ret
mov
push
cmp
in
cld
xchg
or
scas
sub
inc
out
pop
pop
jns
or
shrl
push
lret
push
ficompl
pop
js
xor
and
cli
popf
cmp
loop
xor
bound
xor
or
mov
in
fisubs
lods
push
jecxz
jp
lds
call
inc
or
rcll
lods
cmp
xor
sbb
call
ret
lods
or
dec
add
jge
jb
add
popa
out
mov
jo
jno
cli
ljmp
jb
push
and
sarb
jns
sub
divl
std
fmuls
adc
mov
std
mov
sbb
out
nop
sbb
sbb
mov
add
scas
pop
in
pop
sub
cmp
hlt
negb
scas
loope
push
mov
xor
pushf
rclb
adc
pop
icebp
cs
insl
movsl
jp
repz
movd
bound
push
ret
sbb
lahf
and
repnz
daa
int3
shlb
subb
popa
jo
fs
shlb
cltd
lret
mov
push
mov
push
into
dec
dec
adc
add
sbb
mov
add
jnp
ss
jne
in
add
jo
mov
pop
push
or
and
cmc
cs
sahf
push
aad
popf
lcall
cwtl
pop
adc
inc
pop
repz
jns
cmp
and
fcmovnbe
enter
daa
popf
lods
adc
mov
subl
xchg
xor
out
sbb
pop
xor
mov
lret
mov
iret
inc
aaa
lods
dec
les
aam
in
pop
repz
repnz
xchg
mov
pop
std
nop
cli
cld
lock
inc
call
xchg
rolb
imul
mov
in
sub
sarl
ret
mov
mov
sar
adc
fsubs
mov
rol
and
mov
test
pushf
adc
push
jp
adc
xor
inc
std
push
jb
fs
jecxz
pushl
lock
aam
dec
lea
sbbl
push
sub
mov
mov
mov
lods
dec
push
fsubl
fs
sub
cmp
lods
daa
in
dec
mov
and
jo
stos
pushf
cmp
aas
repz
lcall
mov
or
fistl
in
aad
popf
cmp
or
fimull
rcll
or
mov
cmp
xchg
leave
or
jmp
inc
lds
dec
pop
ds
cltd
jno
add
inc
inc
xchg
cmc
test
mov
addr16
jne
sbb
ror
insb
pminub
cli
leave
mov
je
loope
into
push
popa
push
cld
mov
je
ljmp
icebp
sub
jecxz
cmc
push
cwtl
mov
sahf
iret
loopne
dec
mov
je
lcall
and
inc
ja
aaa
stc
movb
je
js
pusha
mov
pop
cmpsl
movsl
xchg
jle
or
pop
imul
fdivrs
test
or
mov
mov
jns
or
xchg
xor
popa
and
out
adc
adc
and
mov
test
jbe
pop
inc
loop
jg
xchg
imul
mov
push
cmpb
lds
ja
inc
aaa
pop
jb
push
movsb
mov
add
in
bsr
insb
arpl
lods
and
adc
ja
add
sahf
in
mov
aaa
jl
popa
push
lds
jno
sub
mov
fs
test
les
notb
adc
insb
outsb
push
pop
lods
and
aad
push
xor
push
pop
xor
jno
test
cld
pop
cltd
mov
xchg
sub
imul
fimull
mov
dec
mov
jg
sbb
sub
adc
bound
mov
mov
aad
jle
push
mov
mov
inc
cwtl
push
aaa
stos
jb
mov
out
clc
inc
bound
add
jbe
cwtl
mov
decb
jge
fs
pop
cmp
xchg
xor
and
inc
idivl
mov
outsl
enter
cmp
xchg
push
and
and
sbbl
sbb
ja
pop
hlt
stos
int3
sub
cwtl
clc
testl
shl
lods
imul
jb
pop
ss
dec
into
lahf
rcrb
xchg
sahf
sti
icebp
mov
fdivl
testl
sub
xlat
movsl
pop
movsl
aas
ss
xchg
stos
popf
cmp
xchg
xor
jnp
cmp
loope
inc
in
mov
ftst
dec
jge
or
aaa
dec
push
pop
shr
xor
lea
adc
ss
dec
push
mov
fidivl
enter
adc
mov
fildll
hlt
cmpsb
cmp
mov
adc
inc
pop
lds
incl
push
ljmp
jmp
push
leave
out
mov
or
dec
jno
dec
dec
int3
arpl
jge
dec
inc
pop
dec
or
das
jl
mov
adc
ret
fnstcw
pop
es
dec
popa
mov
ret
adc
mov
cmp
sub
stos
pop
inc
mov
push
or
ret
shll
mov
daa
rcll
jle
sub
xchg
sub
adc
xchg
fmull
jo
sbb
xor
lret
adc
cli
movsb
es
mov
nop
imul
outsl
sbb
push
jp
xchg
vmovapd
pop
pushf
movsl
sub
xor
jne,pn
movsb
xchg
loope
insl
pop
push
test
daa
and
push
shll
push
pop
pop
add
dec
xchg
jne
push
pop
jmp
xchg
aaa
xchg
bound
popa
xorl
adc
daa
rcr
add
mov
jno
subb
nop
in
pop
inc
dec
push
stos
fwait
and
mov
out
and
mov
ja
outsl
xchg
rclb
cmp
sti
push
push
mov
inc
push
mov
outsl
pop
scas
daa
stos
inc
test
jnp
cld
int3
or
in
jb
stc
or
pop
cmp
jb
outsl
mov
pop
inc
jmp
divl
adc
outsb
popa
cmp
sub
xchg
pushf
inc
mov
and
ret
cmc
cmpsl
ljmp
pusha
push
ret
repz
dec
inc
pop
cwtl
and
hlt
mov
xchg
push
mov
ss
test
lock
xchg
outsb
andb
pusha
jno
xchg
mov
int
adc
and
push
mov
lea
mov
and
or
mov
xchg
test
dec
stos
xor
lcall
fnstsw
stos
sub
scas
outsb
js
inc
test
fadds
andb
sub
push
jmp
out
test
sub
ret
dec
push
scas
pop
sub
rcr
jo
mov
mov
jl
push
enter
hlt
inc
xor
sahf
mov
dec
xor
or
push
sbb
sbb
popa
dec
mov
inc
pop
js
nop
gs
inc
iret
adc
mov
les
test
negb
xor
jno
sub
lods
pushf
sbb
hlt
mov
push
add
scas
iret
dec
add
sbb
cwtl
cltd
lret
cmp
jge
neg
sbb
insb
jo
dec
jb
pop
xor
cmp
push
call
arpl
sub
icebp
loopew
mov
rolb
stos
ds
mov
out
jns
and
repnz
adc
xchg
sarb
inc
pop
sbb
dec
push
jg
fnstcw
push
xchg
push
mov
add
sahf
adc
jno
enter
aas
cmp
fstpt
sub
in
xchg
lahf
xchg
loope
outsl
adc
xchg
mov
adcl
xorb
cmpsl
add
scas
aam
mov
mov
jmp
insb
and
cmp
jne
iret
in
roll
or
cwtl
jecxz
push
sahf
lret
neg
push
jl
adc
gs
fsubrl
xchg
addr16
loopne
jp
fldt
mov
push
push
add
adc
sarl
xchg
ja
cmpb
and
or
sub
mov
and
ror
stos
sub
data16
subl
inc
movl
or
aas
push
sub
divl
pop
loop
sar
loope
xchg
pop
cltd
loopne
loop
jmp
sbb
sub
shrl
cmp
pop
cmp
ljmp
push
push
mov
scas
jns
cltd
sub
dec
xor
xor
mov
sub
clc
sbb
mov
jo
jbe
leave
sub
loope
fidivrs
scas
loopne
into
sbb
pop
pop
cmp
fcoms
cli
mov
cmp
fisttpl
ror
lds
mov
jae
xor
rsqrtps
filds
imul
add
cmp
jns
xchg
xor
cwtl
push
sub
bound
bound
mov
or
or
cmp
xchg
jmp
int3
gs
insb
xor
ds
outsl
gs
fcoml
xchg
in
repnz
lds
pusha
clc
fmuls
fldl
nop
cmpsb
inc
push
movsl
lcall
dec
xor
les
orl
mov
push
mov
jecxz
push
int3
nop
push
push
div
pop
popf
enter
cli
ret
and
lcall
inc
adc
pop
out
xchg
xor
push
push
inc
loop
xor
adc
scas
stos
cmp
test
cmp
icebp
js
bound
insl
cmc
scas
and
pop
xor
mov
pusha
rorb
inc
in
loopne
sarb
out
lret
test
cmp
jb
cmp
add
adc
pushf
and
push
jmp
push
xor
adc
jg
pop
cmp
pushl
push
jns
std
and
cltd
repz
sbb
mov
fildl
push
xor
cli
adc
or
mov
popf
int
pop
push
sbbl
adc
mov
into
pop
push
in
dec
mov
push
mov
push
mov
inc
mov
dec
lds
adc
ret
aaa
mov
imul
push
inc
xchg
cmp
cmp
sub
jae
shll
into
inc
bound
xor
pop
push
inc
add
repnz
loopne
and
cmpsl
push
aad
movsl
xchg
push
cmp
aad
lret
mov
repnz
mov
mov
js
dec
add
cmp
in
test
scas
popa
dec
and
mov
bnd
daa
mov
cwtl
fnstsw
out
loop
dec
inc
pop
ficompl
xchg
js
ret
cltd
lods
sub
mov
dec
xlat
xchg
add
insl
shlb
mov
pop
out
add
jecxz
and
inc
and
push
cmp
jae
fisttpl
fdiv
sub
ffree
adc
cmpsb
outsl
xor
inc
mov
jbe
push
inc
add
dec
jo
or
xchg
lea
loope
les
repz
shr
mov
push
loope
sbb
or
inc
and
leave
cmp
pop
das
push
lods
out
in
cmp
test
in
addl
leave
xchg
mov
push
jmp
cmc
shll
lcall
jle
or
mov
mov
lea
mov
into
inc
imul
sti
dec
inc
andb
aam
mov
lock
int3
in
mull
inc
pop
mov
aam
sbb
cmp
dec
das
pop
add
mov
jno
movsl
adc
mov
mov
dec
xchg
adc
ds
movsb
mov
enter
bound
testb
ja
shl
jmp
pop
add
rorl
jmp
jmp
sbb
or
mov
inc
jbe
daa
pop
fimull
xchg
mov
xchg
iret
out
leave
pop
lea
test
cmpsb
std
mov
cltd
flds
sub
movsb
mov
call
fidivrl
inc
inc
pusha
jo
aas
hlt
mov
xor
scas
adc
mov
in
sub
pop
xchg
sub
and
pop
into
lods
daa
inc
jle
es
push
rclb
sahf
cmc
iret
popf
test
sub
mov
and
or
push
and
mov
mov
lea
pop
fwait
inc
scas
lret
push
outsb
cltd
add
out
js
mov
adc
adc
stos
scas
push
inc
sbb
ljmp
lods
push
and
sbb
es
mov
ja
into
popa
sbb
cmp
dec
dec
dec
loopne
out
push
xor
out
dec
xchg
mov
xchg
pop
jg
fcomip
adc
insb
jl
cmp
jle
cmpsl
imul
enter
push
inc
lret
sbb
push
xchg
pushf
lret
ss
cmp
nop
pushf
mov
jb
in
or
or
and
shrb
cmpsl
push
icebp
rorl
in
mov
add
or
push
fcomps
xchg
jbe
jle
decl
fdivrs
mov
jle
cmp
push
fcomip
arpl
mov
sti
push
dec
and
test
jo
aas
fnstsw
fldcw
dec
les
in
fwait
push
fidivrs
push
push
lret
dec
sbb
cmp
paddb
xchg
insl
xchg
cli
pop
imul
test
imul
fimuls
insb
sbb
clc
xchg
add
fisttps
pop
mov
xor
popf
adc
and
imul
or
mov
push
ja
outsl
or
adc
divl
icebp
xchg
dec
mov
fstps
movsb
push
testl
stos
scas
cmp
ret
push
rorb
cmp
and
pop
cmp
enter
adc
or
jle
mulb
subb
add
xor
insb
movsl
adc
in
mov
stc
mov
fimull
mov
loop
sub
dec
push
jg
ja
arpl
rclb
adc
sbb
cs
fistl
fnsave
push
xlat
lods
stos
insb
inc
test
in
rorl
inc
mov
inc
jp
cmp
js
pop
aaa
in
scas
or
stc
and
adc
aaa
jg
sbb
cmc
pop
pop
daa
push
dec
leave
aaa
fs
xor
out
cmc
xchg
test
inc
mov
aas
bound
push
xchg
adc
xor
jmp
scas
xor
inc
cld
push
orl
xchg
and
arpl
cld
lret
pushf
adc
call
sbb
mov
adc
iret
nop
lea
in
in
jns
movsb
pusha
mov
arpl
shrl
bound
jns
xor
fdivrs
adcb
or
inc
cmp
idivl
inc
hlt
leave
and
in
lahf
test
and
sub
rcrb
aad
jnp
adc
or
xlat
dec
cmp
jg
mov
pop
jnp
test
shlb
inc
push
dec
int
or
jle
aad
cmc
add
out
cmp
pop
scas
mov
inc
scas
out
stos
ljmp
inc
adc
lds
iret
ret
fstpt
dec
gs
mov
jmp
mov
lods
sti
pop
dec
pop
sub
add
imull
test
ljmp
dec
push
filds
or
pop
lods
sbb
xchg
mull
lock
sub
mov
sub
test
mov
shlb
fsub
push
and
sbb
mov
xchg
dec
xchg
cmc
out
testb
movsb
iret
or
jno
pop
movsl
scas
mov
imul
rolb
mov
add
shlb
fnstsw
sub
scas
popf
je
xor
push
aad
mov
sbb
pop
push
push
scas
sahf
les
adc
jge
shll
push
xchg
jno
sbb
sub
dec
lods
inc
nop
clc
pop
imul
xor
bound
mov
out
pop
sbb
popa
cmp
inc
adc
sahf
inc
push
js,pn
mov
jbe
loop
lahf
mov
fdiv
outsl
mov
dec
jns
add
xchg
sub
or
fldcw
jle
push
inc
imulb
rcrl
jl
pop
shlb
mov
sysret
stc
arpl
ds
popa
into
ds
cli
pop
ja
clc
pushf
ret
scas
push
mov
gs
mov
mov
rorb
xchg
inc
out
cmp
dec
pop
stos
xor
xchg
xchg
clc
add
mov
jnp
clc
pop
mov
stos
jge
outsl
mov
adc
rcl
jns
pusha
inc
mov
clc
cmp
cmpsl
cmp
inc
and
pop
js
imull
clc
data16
rcll
sbb
arpl
je
rclb
call
sbb
pop
or
mov
dec
enter
xor
inc
pushf
fucomi
add
dec
push
aas
mov
sub
into
sub
cmp
scas
add
cmp
test
enter
arpl
push
dec
cmp
mov
ja
push
pusha
add
jle
clc
and
outsl
notl
clc
dec
insb
in
push
jle
mov
pop
ret
repz
adc
jge
fcompl
pusha
sbb
cmp
nop
xchg
sbb
inc
inc
int
in
sbb
das
aam
jae
xchg
sbb
out
loope
push
xchg
lds
xlat
ds
or
insb
and
jne
xchg
loope
adc
mov
mov
das
stc
imul
cmp
cmpsb
mov
add
or
jmp
lcall
leave
jno
pop
ret
les
call
shrl
dec
mov
mov
js
test
jle
cmpsb
push
aaa
adc
movsl
adc
int
fimuls
pop
mov
cmpsl
mov
aaa
jp
push
loopne
mov
orl
adc
fbstp
inc
sbb
sub
cmpsb
dec
je
das
adc
pop
out
mov
mov
inc
std
aam
ja
or
xchg
in
leave
sub
test
pusha
cli
ljmp
and
inc
or
inc
outsb
lds
faddp
je
aam
xchg
ficoml
dec
mov
push
push
lret
repnz
in
out
mov
jbe
test
xchg
jmp
icebp
mov
int
data16
pushf
imul
xchg
cltd
call
aas
outsb
repnz
sbb
xor
out
adc
xor
out
sub
sub
es
test
out
xchg
lea
add
mov
inc
and
or
or
and
jge
dec
push
arpl
mov
out
mov
imull
inc
ds
mov
cmp
scas
dec
cmp
in
sbb
push
in
dec
lahf
mov
inc
inc
adc
test
pusha
hlt
dec
or
out
dec
je
mov
mov
ljmp
in
loop
ss
lcall
mov
sahf
cmp
adc
inc
push
mov
jmp
daa
mov
rcr
fmul
in
lods
mov
test
clc
push
ja
or
jo
lock
mov
sbbb
lcall
adc
dec
fcoml
test
adc
notl
hlt
and
mov
cmp
fisubl
out
cli
lcall
sub
jg
movl
orb
jae
and
into
lds
shl
andl
fcompl
pop
ja
rorl
adc
mov
pop
adc
fdivr
sub
mov
add
icebp
cmp
loopne
lds
push
test
and
or
imul
add
loope
push
ja
dec
lcall
or
sbb
jmp
jno
int3
or
lret
repnz
ret
jbe
fcomps
stc
xor
loop
cmc
push
jmp
test
mov
push
pminub
int
sbb
mov
lods
in
mov
mov
test
rcr
jo
loop
xchg
pop
ficoms
cmp
fldenv
int
mov
jne
lods
std
inc
push
popa
ljmp
xor
fistl
dec
insl
adc
into
aad
push
xchg
ret
xchg
leave
pop
xor
cmp
scas
jnp
push
jb
jae
sub
pop
test
jne
outsb
aas
cwtl
mov
pop
pop
push
or
fmull
sub
aas
lds
sub
fisubrs
pop
push
shrl
fyl2xp1
adc
mov
push
sub
leavew
sbb
cmp
add
ds
loope
out
push
lock
and
sbb
fdivl
sbb
jmp
fidivrs
lods
popa
shr
inc
xor
pusha
cmp
movl
cmp
cmp
outsb
lea
orl
lea
gs
pop
jmp
adc
sub
add
ds
push
dec
out
lods
push
pop
loope
stos
out
push
cltd
popaw
in
stos
iret
mov
push
jp
arpl
aam
pop
dec
imul
jl
lods
gs
push
loopne
popf
lods
loop
in
jbe
lea
push
imul
dec
push
les
in
popl
pushl
jb
loope
rcrl
aad
rolb
hlt
cmc
xchg
outsl
sahf
gs
and
sbb
lea
ljmp
inc
enter
pop
mov
ret
pop
and
rorl
fmul
rclb
imul
orb
push
fidivs
imull
push
xchg
cltd
int3
out
shl
mov
cmp
stos
and
les
shlb
je
push
lret
in
call
mov
sub
xor
add
mov
rcr
loop
in
cmp
je
ds
cmpsl
cmp
out
jnp
lods
adc
fwait
pop
dec
clc
loope
loopne
mov
xchg
lret
in
aam
push
test
test
push
jl
sti
lods
adc
stos
in
xor
cmp
jbe
adc
popa
enter
push
adc
stos
lahf
clc
bound
mov
adc
push
mov
cltd
aas
mov
jecxz
inc
lcall
adc
sub
xor
add
mov
cs
pop
xchg
mov
pop
push
cmc
int
mov
pushl
sub
pop
push
loopne
sbb
test
into
xor
mov
mov
mov
fimuls
jg
jae
aad
stos
add
xchg
lods
sub
cmp
dec
shlb
test
add
push
test
sbb
push
pop
aas
sbb
divl
lds
lods
push
test
mov
jns
or
nop
sbb
enter
in
mov
orl
call
xorl
xchg
addl
and
into
enter
xor
fisttps
stc
fs
mov
loope
js
xor
inc
push
adc
mov
rcrb
lds
pop
push
dec
pop
dec
mov
or
adc
jae
add
mov
shll
out
test
test
fcomps
or
insb
pop
xchg
data16
or
xor
in
imul
xor
mov
adc
js
mov
sub
push
int3
mov
leave
out
mov
scas
fmul
dec
mov
aaa
cmp
push
xchg
scas
hlt
pop
or
adcl
popa
mov
cwtl
iret
pop
das
add
mov
cli
pop
out
mov
sahf
repnz
dec
movsl
pusha
xor
mov
shl
sbb
adc
pop
mov
jg
xor
cmp
lea
mov
inc
pop
xor
jbe
aaa
mov
or
scas
into
popa
pop
test
scas
adc
add
ja
adc
and
inc
call
dec
out
imul
js
movsb
or
sbb
xor
out
mov
sub
jo
loope
loope
cld
nop
movsl
shl
mov
or
fcoms
jp
mov
jno
pop
out
fdivr
lahf
inc
xchg
fisubrl
std
out
lret
jle
lahf
lahf
das
jns
push
out
xchg
adc
mov
cs
and
jmp
fldcw
inc
cmc
cwtl
scas
lret
push
rcll
cmp
inc
xor
dec
in
sbb
push
cmpsb
pop
outsl
adc
movsb
push
cmp
fidivrl
add
movsb
pusha
jmp
lret
imul
test
xor
push
jle
bound
and
cmpsb
sahf
adc
push
addr16
xor
iret
inc
sub
mov
xchg
or
hlt
jae
and
or
mov
test
or
lret
xchg
scas
dec
sub
aad
xchg
mov
std
sbbb
sbb
in
mov
and
rcr
insb
mov
jg
lcall
cmp
dec
mov
sub
jmp
mov
lods
pop
dec
dec
inc
arpl
inc
je
sbb
mov
repnz
shl
jp
and
cmpsl
add
and
xor
inc
call
push
push
pop
hlt
dec
ss
mov
std
push
sti
fsubr
mov
outsb
pushf
call
pusha
xchg
dec
push
mov
mov
or
and
js
out
hlt
mov
cmpsb
js
stc
add
mov
ja
mov
data16
mov
lahf
lock
or
aaa
cltd
repnz
adc
cli
fisttpl
hlt
rcrl
sbb
push
or
sahf
out
out
test
bound
inc
jae
inc
shll
jg
test
in
and
test
pusha
ss
jb
mov
push
int
inc
jle
imul
es
shll
push
push
push
lods
inc
mov
and
dec
add
movsl
jmp
pop
pop
inc
cs
and
ss
icebp
nop
push
iret
add
mov
xchg
iret
dec
ret
sti
cmp
push
push
or
seta
daa
adc
jne
test
mov
or
xchg
adc
neg
fstps
mov
pop
loop
add
fisttpll
adc
popf
lock
pop
das
sub
ret
or
push
dec
stos
leave
shlb
or
in
sub
flds
jne
push
mov
repnz
call
scas
and
in
dec
pop
mov
fldl
cltd
jmp
xor
mov
xorl
pop
push
push
or
xchg
push
xchg
or
sub
cmpsb
and
call
sbb
cwtl
sub
rorb
pop
xchg
out
push
jp
out
aad
je
dec
sub
je
jb
orl
cmp
rcll
fsubrl
mulb
movsb
jecxz
jnp
mov
das
xor
jb
mov
scas
cmp
jnp
and
xor
xchg
hlt
jo
cld
test
jno
dec
daa
test
outsl
add
pop
jb
dec
jae
jae
dec
cmp
loope
repnz
push
daa
lods
rorb
or
xchg
popf
push
xor
xor
pop
push
add
sbb
jl
shll
sub
pop
push
mov
dec
in
push
mov
sub
ret
mov
cmp
ljmp
ja
mov
jge
pop
sbb
das
adc
jmp
es
push
mov
adc
sub
lcall
arpl
test
adc
scas
fistps
testb
add
mov
add
cmp
scas
js
fcoms
adc
xchg
aaa
cmp
pop
lea
lock
cmpl
insb
jns
add
out
je
inc
sub
and
mov
dec
out
ljmp
fldl
shrb
clc
das
add
add
sbb
mov
push
mov
push
mov
or
inc
mov
std
and
enter
addl
push
ja
cmp
sbbl
xchg
inc
outsl
jecxz
pop
shll
data16
push
add
sub
xor
add
mov
mov
insl
cmpsl
fs
mov
stc
jmp
cltd
pop
fimuls
out
xlat
inc
mov
ja
fst
and
ficompl
enter
imul
push
scas
lret
imulb
cmp
or
arpl
int3
ficomps
outsb
dec
add
push
sub
mov
je
xchg
rorl
push
movntq
sbb
aad
or
mov
out
xor
pop
pop
inc
and
stos
cmp
lea
or
ret
pop
divl
push
scas
add
ret
pusha
shl
ljmp
icebp
add
inc
std
jnp
xor
lcall
out
pop
cs
out
in
icebp
shll
test
movsl
jb
dec
mov
das
movsl
fidivrl
sub
cltd
pop
mov
xchg
cmp
inc
push
mov
push
loop
jmp
movsl
cwtl
lock
dec
js
pop
adc
pop
inc
in
push
inc
xor
dec
add
into
xor
push
cmpl
cs
fimull
sub
sub
daa
jl
jb
push
dec
leave
sahf
xor
push
add
fidivrs
pop
sub
or
cmpsb
arpl
dec
insl
push
repz
repz
mull
mov
inc
dec
add
dec
std
ljmp
pop
out
mov
mov
push
sti
movb
push
hlt
sub
cmc
push
stos
stos
lock
rcl
shll
dec
jg
lock
and
pusha
cld
and
xor
aad
push
jl
repnz
sub
and
rol
jg
cwtl
fwait
cmp
push
rcl
test
jae
js
push
mov
mov
adcb
mov
cwtl
jmp
mov
arpl
call
adc
pop
xchg
xchg
sarb
repnz
xchg
xor
and
iret
cli
fcmovnb
cmp
pop
lods
adc
stc
scas
jns
test
movsb
outsl
mov
call
jmp
rcrl
ja
mov
out
inc
and
mov
sbb
pop
adc
lods
and
dec
jle
cltd
cmp
imul
mov
add
jge
cmp
outsl
mov
cmp
adcl
sti
mov
popf
xchg
test
mov
pop
repnz
pop
mov
aaa
jae
rcrb
jae
dec
mov
sarl
add
frstor
jle
out
or
shl
mov
mov
lea
add
pushf
mov
cmp
loope
call
inc
shr
jae
cmp
jnp
xlat
movsl
or
jbe
aam
inc
das
mov
jbe
mov
test
imul
inc
ljmp
add
jne
xor
jno
mov
pushf
shrb
scas
add
cld
loope
data16
movsb
and
or
adc
push
pop
hlt
sub
clc
pop
jecxz
pop
adc
adc
inc
adc
mov
jne
pushf
sub
inc
or
test
lret
lds
scas
xchg
jg
test
clc
mov
sbb
iret
pop
mov
outsl
adc
shll
rcrl
cltd
jnp
lret
inc
push
es
jno
out
lods
xchg
xor
sub
mov
loop
pop
mov
loope
cmc
psubsb
add
jno
mov
rorb
cltd
inc
push
add
pop
xchg
pop
hlt
fisubrs
mov
int3
inc
xchg
dec
inc
js
adc
mov
add
pop
pop
jg
movsb
sub
nop
pop
js
addr16
jns,pt
rcll
mov
xor
and
fdivs
xchg
popa
adc
out
cmp
jp
and
push
cmpl
sbb
out
xor
cmp
jg
hlt
inc
mov
scas
in
test
imul
inc
sbbb
adc
outsl
mov
jg
sub
inc
testl
aam
push
sub
out
sub
pop
out
xor
xor
iret
mov
push
scas
cs
int
iret
xchg
sub
mov
cltd
lock
pop
mov
push
bound
lret
mov
adc
out
cmp
sahf
lds
pop
xchg
mov
mov
xor
push
mov
gs
push
mov
and
mov
lds
jnp
sub
imulb
hlt
pop
xchg
jle
scas
or
cmc
or
bound
sub
dec
fcoms
jb
pop
mov
lds
sub
hlt
jns
test
mov
imul
mov
out
push
popf
and
xor
lods
cmc
fdiv
gs
enter
loopne
cmpsl
xchg
add
lcall
scas
cmpsl
iret
fs
or
insb
mov
push
jl
fisttpl
mov
insb
test
std
jp
cmpl
in
and
add
xchg
xchg
pop
add
mov
cmpsl
dec
jmp
jbe
xor
mov
out
push
mov
cmpsl
jecxz
sbb
push
popa
jle
inc
jl
call
and
out
in
pop
inc
scas
inc
fwait
iret
out
sbb
push
lea
push
aaa
repnz
mov
xchg
and
into
ret
inc
sbb
sbb
or
incb
shlb
enter
add
inc
mov
out
pop
cmc
sahf
and
popa
xlat
lahf
fistpll
mov
daa
into
popa
sbb
fsub
gs
sub
repz
test
leave
lret
sbb
cmpl
pop
pop
mov
shr
in
jecxz
gs
jns
lds
ret
clc
lock
ret
cmp
pcmpgtd
aam
rorl
sub
pop
or
fwait
mov
outsl
into
pushf
int
roll
mov
dec
mov
cmp
aam
jp
jl
test
pop
repz
je
fidivrl
add
xchg
std
sahf
xchg
lret
xchg
mov
aam
pop
xor
cltd
fs
mov
add
pop
ja
cwtl
pop
test
mov
jmp
sti
jo
fisttpll
fnsave
mov
push
and
dec
lds
pushf
dec
loop
test
and
shr
aad
sar
popf
push
mov
clc
xchg
sub
test
imull
roll
lds
orb
int
pop
mov
or
in
lret
dec
ja
aam
pop
outsl
jle
push
arpl
das
mov
adc
cld
loopne
push
mov
mov
rorb
fsub
mov
test
negb
add
inc
push
adc
and
popa
addr16
cwtl
popf
adc
and
cwtl
sarl
push
or
addr16
push
clc
insb
mov
pushf
and
and
inc
xor
lret
pop
cmp
aam
lods
and
loope
sbb
and
rcr
mov
jmp
and
xor
inc
aaa
bound
mov
in
xchg
icebp
lret
jne
pop
jp
icebp
xchg
insb
stos
hlt
cltd
mov
lock
rclb
dec
add
and
xor
cmc
pop
jns
aad
mov
sub
cltd
sbbl
test
pop
mov
sbb
pop
hlt
jns
nop
ret
adc
pushf
sub
mov
mov
icebp
inc
stos
rcll
jnp
or
push
fwait
test
jns
je
idiv
jnp
cld
add
adc
out
mov
cs
and
inc
mov
mov
ret
sub
xchg
stos
cmpsl
out
xor
mov
xchg
pop
dec
xchg
ret
movsb
or
icebp
mov
pop
pushf
gs
mov
cwtl
pusha
jecxz
shl
push
sbb
xor
daa
out
outsl
test
lods
or
sarb
cmp
pop
xchg
cmp
daa
xchg
jns
les
push
pop
stos
pushf
jne
test
leave
lret
lock
mov
pusha
enter
inc
and
lahf
aam
dec
into
rolb
pop
cmc
lret
out
lcall
push
pop
mov
lods
cwtl
int
mov
movsb
test
sbb
ds
into
jge
cmp
jbe
loopne
push
addr16
sbb
and
jb
sbb
fnstenv
andl
loopne
inc
lahf
cld
les
or
push
jae
add
pop
fwait
mov
pop
orl
in
push
push
push
test
mov
gs
and
aaa
dec
imul
xor
movsb
movb
cmc
inc
push
jns
pushf
negb
cwtl
andb
inc
in
jecxz
push
mov
sub
and
sub
ret
mov
mov
jg
mov
jmp
jle
in
inc
cmp
stos
sbb
add
inc
push
fwait
imul
fcoml
mov
mov
sub
clc
adc
popf
addr16
flds
pop
push
mov
or
push
iret
mov
movsb
push
xor
fnstcw
loop
ss
cmc
je
inc
jl
add
mov
loope
cmp
mov
lcall
inc
sub
rcrb
push
mov
push
push
mov
movsb
xchg
int
data16
nop
into
sub
add
ret
cmc
sub
fidivrl
mov
cmp
shll
shr
or
mov
xor
cmp
lret
mov
inc
sahf
and
in
daa
add
push
jno
dec
dec
in
pop
mov
sbb
fcoml
inc
xor
dec
les
mov
cwtl
sub
test
ret
in
ret
in
mov
inc
aam
jmp
push
dec
insb
and
mov
stos
icebp
dec
dec
negb
lret
insb
inc
pop
fwait
add
rol
outsb
xchg
pop
jno
jnp
pop
or
or
outsb
mov
out
into
xchg
xor
jl
sbb
lods
pop
ret
scas
adc
adc
cmp
popf
andl
mov
and
dec
inc
or
sbb
imul
fisttpl
mov
and
push
mov
xor
sub
mov
jbe
filds
rcr
jne
sub
clc
mov
adc
aam
je
mov
pop
movsl
pop
xor
xorl
jmp
sbb
sbb
loop
adcl
dec
push
dec
pop
scas
jbe
dec
pop
mov
mov
pop
cld
ss
pop
xchg
inc
add
iret
lock
dec
sub
inc
popa
inc
jnp
jmp
rcrb
push
lea
sub
sbb
xchg
sbb
push
cmpsl
pop
mov
ljmp
push
or
mov
divl
movsl
scas
mov
test
pop
add
pop
in
jl
lahf
dec
lcall
cwtl
cwtl
lcall
sub
or
mov
or
inc
sbb
test
mov
sub
dec
cmp
lret
xor
xchg
or
jo
addl
pop
and
bound
int
mov
cmp
sbbl
out
sub
push
inc
ja
das
xchg
les
setp
xlat
and
fwait
je
fistpl
pop
lock
dec
into
mov
sub
cmpsb
cmpsl
filds
clc
add
daa
loopne
mov
std
lret
mov
ljmp
filds
fwait
xrelease
mov
shlb
fwait
loope
sbb
leave
into
mov
stc
xchg
pop
test
add
push
dec
out
adc
or
push
push
xor
mov
ret
pop
inc
cld
lret
jno
aaa
pushf
xor
sub
push
sub
lods
lret
lahf
into
jnp
fcmovbe
mov
inc
aas
test
xor
lret
fistpll
jb
pushf
adc
sub
out
adc
adc
adc
pop
and
imul
jae
jbe
push
sub
mov
jne
xor
aad
cmp
stos
push
scas
mov
lahf
insl
wbinvd
pop
call
sub
sbb
iret
push
and
mov
jo
les
mov
into
mov
mov
xor
enter
insl
fsubs
mov
out
mov
and
xchg
cmp
adc
pop
ret
movsb
in
add
pop
mov
shlb
push
cld
xor
test
dec
xchg
outsb
xor
out
arpl
mov
mov
out
imul
jno
pop
xor
mov
push
xor
stos
sbb
inc
sub
push
and
outsb
xor
push
sub
mov
sub
or
mov
jp
mov
jb
cmp
cmp
sarb
lods
sub
jmp
sub
pop
xor
jne
pop
cmp
pop
push
pop
cli
adc
xchg
xlat
addb
daa
jp
dec
xlat
dec
cmpl
xchg
cmp
in
mov
xor
pop
xchg
cmp
loope
sub
stc
sbb
xchg
adc
test
jno
fistps
adc
repz
sysenter
inc
fwait
movzbl
rcrb
fnstenv
mov
adcb
mov
pop
push
push
mov
push
gs
je
or
jle
and
les
scas
mov
rorl
push
mov
mov
xchg
adc
inc
and
cmc
fadds
mov
sarl
cmp
adc
in
or
pop
add
mov
cmp
in
icebp
in
shrl
or
sub
xor
xchg
fcomps
out
int
xor
and
loop
mov
andl
mov
das
ret
adc
xchg
test
inc
iret
sub
pushf
ja
mov
sub
insb
jmp
testl
ret
dec
rorl
gs
or
stos
mov
mov
out
jecxz
add
add
int3
mov
pop
sub
xorl
stc
jno
mov
call
pop
into
jnp
leave
bound
movsb
xchg
movsl
test
enter
psrlq
push
ss
or
cltd
jecxz
add
dec
popf
mov
mov
inc
sbb
insl
push
ja
adc
in
into
or
aam
cltd
dec
cli
loopne
lds
jge
dec
or
into
cmp
adcl
dec
stc
mov
inc
out
ljmp
add
inc
movsb
mov
in
sahf
shlb
mov
fistl
sub
mov
loop
pop
into
leave
push
fnstcw
pop
cmp
mov
scas
stos
inc
cltd
sti
push
call
xchg
push
adc
xorb
into
mov
frstpm(287
mov
push
sarl
gs
lret
jno
sbb
lret
lret
rorl
popf
xchg
xchg
sbb
mov
addr16
ret
frstor
int3
push
mov
jmp
rcrl
or
js
pop
sub
or
fs
frstor
ljmp
shrw
test
in
xor
cltd
jne
daa
sbb
add
cmp
push
xchg
xchg
add
lcall
xor
popa
sub
xchg
test
test
hlt
dec
es
push
fs
les
lret
sub
ljmp
mov
les
sub
ret
bound
jl
cmp
push
xchg
inc
lahf
cmp
mov
inc
pop
mov
mov
icebp
pop
cmp
and
mov
roll
pop
inc
leave
jbe
mov
push
icebp
inc
pop
push
shl
sub
imul
cmpsl
pop
and
int
cmp
sub
insl
fscale
mov
cmpsb
sbb
fcomps
ret
cmp
mov
push
or
fsubrl
xchg
in
loope
mov
sub
mov
sbb
mov
test
shl
mov
and
mov
mov
push
cmp
es
cmp
lcall
arpl
call
adc
mov
dec
cmp
mov
pop
fwait
loope
dec
mov
add
and
bound
lea
stc
xchg
pop
xor
dec
add
call
mov
out
adc
mov
mov
pop
cmc
call
mov
sahf
lret
inc
pop
xlat
jge
in
repz
push
lock
rcrb
inc
bnd
pop
sub
clc
sar
mov
cmc
mov
inc
vrcpps
and
shl
aas
out
dec
push
stos
lods
insl
mov
add
mov
movsl
jp
mov
insb
dec
pextrw
jnp
call
lret
daa
push
dec
aas
mov
out
ljmp
in
xor
rorb
test
xchg
icebp
mov
sbb
push
cmpsb
movsl
ja
pop
push
lret
add
in
out
mov
dec
push
dec
pop
add
cmpb
sbb
outsb
pop
icebp
xchg
mull
sbb
data16
add
cmp
pop
push
mov
push
test
push
cmc
inc
fs
or
sub
xchg
incb
cs
mov
imul
pop
cmp
or
fwait
mov
mov
and
cli
jge
add
cli
xlat
ljmp
xchg
xchg
or
loope
inc
divb
jmp
stos
push
cmp
mov
jbe
mov
js
push
dec
mov
lea
test
repnz
in
cmc
xchg
xchg
cmc
cwtl
pop
pop
int
jb
cmpsb
in
cmpsl
mov
inc
sub
add
push
mov
mov
sti
add
lods
mov
pop
mov
xor
mov
or
push
push
aaa
push
pusha
sbb
cmp
xchg
gs
outsl
call
xor
inc
add
cmpl
xchg
mov
push
std
rcrb
xor
pop
xchg
jne
lcallw
sahf
sbb
mov
push
push
jne
mov
imull
jbe
int3
mov
sbb
andb
stos
leave
and
stos
xchg
push
mov
mov
jns
mov
and
ret
ja
mov
loopne
ficoml
lock
dec
xchg
mov
adc
cltd
movb
fistpll
outsb
test
xchg
push
shlb
mov
insb
stos
in
aam
and
jno
cmpsb
outsb
or
xchg
dec
lcall
pushf
mov
push
repz
push
xor
or
out
mov
out
push
pop
cli
xchg
dec
loope
mov
div
fbstp
sbbb
jmp
sti
icebp
adc
aad
mov
loope
jmp
and
jecxz
mov
insl
cmpsl
sbb
push
push
push
push
movsb
mov
fwait
xor
sbb
test
jns
imul
and
mov
xor
dec
or
pushf
mov
dec
rorb
bound
dec
std
loope
add
shlb
scas
lret
mov
mov
xor
fdivr
es
jp
cmpsb
ljmp
ss
and
daa
ljmp
dec
pop
sub
push
or
jmp
shll
fdivs
sub
ljmp
inc
sub
nop
shll
mov
inc
test
adc
xchg
shl
jae
jmp
xchg
cmpsb
sahf
in
add
fs
mov
iret
add
cmp
jmp
dec
sbb
scas
xlat
ja
addl
add
iret
cltd
out
cmpsb
shrb
jns
xor
cmp
jmp
ret
test
pop
and
xchg
cld
mov
mov
out
xchg
mov
mov
mov
adc
in
lods
fmull
xor
movq
mov
repz
jo
cwtl
lock
pop
aaa
cmp
sbb
jnp
and
popa
scas
add
sbbb
lret
add
adc
dec
jmp
adc
mov
mov
mov
push
cmpsb
cli
outsl
jb
pop
sbb
add
fmull
adc
push
jl
mov
lea
and
dec
and
ljmp
add
popf
pop
arpl
xchg
mov
adc
push
xor
xchg
jno
or
ds
arpl
sub
fistl
xchg
jne
inc
add
in
push
into
insl
jecxz
jle
pop
stos
lea
pop
xchg
fcomps
adc
mov
inc
xchg
es
imul
pop
push
lahf
fisttpll
mov
hlt
into
ficoml
sub
adc
shr
dec
rol
or
sbb
imul
push
sti
and
movsl
mov
mov
jnp
jns
mov
fwait
dec
xchg
sbb
dec
sarb
inc
adc
subb
jg
js
sbb
cld
data16
cmpsl
cmc
iret
scas
pop
mov
out
push
push
add
pop
dec
sbb
fwait
repnz
jge
or
and
loopne
leave
lds
daa
dec
lds
sub
insl
inc
std
and
test
filds
mov
sbb
clc
jecxz
aaa
loope
or
aaa
in
dec
fsubrs
sbb
enter
inc
inc
mov
or
add
mov
cmpb
das
mov
and
lea
pop
cmp
cs
movsb
jae
in
je
pop
sub
subb
bound
add
and
dec
pop
push
and
lock
popa
jne
aad
pop
sbb
stos
dec
jmp
jp
pop
and
push
sub
push
addl
in
adc
popf
popa
push
popf
lds
jbe
pop
dec
inc
imul
je
andb
mov
push
cmp
cwtl
test
or
xor
int
movsl
dec
cmpsl
filds
jle
loope
dec
and
clc
mov
test
mov
rcr
xchg
dec
dec
add
mov
aam
and
sub
push
repnz
orb
inc
mov
lods
jmp
push
push
shr
je
loope
cmp
jns
into
je
sbb
mov
xchg
fcomi
cwtl
cmp
sub
into
es
and
xchg
test
sahf
or
ja
and
mov
jecxz
mov
mov
icebp
mov
xor
andl
imul
mov
cmpsl
or
push
ljmp
mov
and
cmp
cltd
scas
jp
mov
les
rclb
sbb
push
xor
sbbb
or
jns
lret
stos
jle
call
ss
scas
hlt
js
insl
adc
shll
scas
and
inc
shll
repnz
pop
lock
dec
mov
sbb
int3
cmpsb
mov
adc
hlt
daa
jp
mov
jecxz
cmp
lahf
cs
pushl
cli
xorl
adc
fmull
gs
push
add
mov
std
clc
push
sub
adc
dec
or
push
movsl
push
push
pop
ss
mov
sub
adc
and
inc
or
inc
sbb
inc
loope
sub
jle
out
loopne
jae
popa
push
pushf
fcmovnb
loop
sub
js
lds
js
inc
cmp
insl
std
out
xchg
in
xor
dec
mov
ret
mov
pusha
mov
push
stos
mull
lods
or
out
faddl
sahf
lahf
mov
xchg
dec
int
mov
cs
xchg
dec
push
mov
sti
aas
pushl
hlt
inc
mov
xor
cs
aaa
mov
outsl
aam
mov
push
outsl
jnp
sahf
dec
mov
push
out
mov
test
das
jnp
ret
xchg
dec
sbb
aaa
xor
repnz
jae
xor
out
in
stos
mov
jae
push
in
xchg
and
inc
and
addl
fisubrs
lock
adc
out
xor
adc
cmc
lock
ss
cltd
lahf
lret
or
xchg
mov
push
sub
addl
pop
xchg
push
popa
dec
scas
into
cmp
xchg
adc
movsl
cli
pushf
pop
sbb
jne
xor
push
mov
mov
cwtl
jecxz
in
and
out
lock
inc
stc
jl
mov
cmc
fucomp
inc
das
stos
cmpsl
iret
dec
inc
ret
test
push
fists
adc
dec
lods
incl
aaa
stc
lret
insb
xchg
push
popa
rclb
cmc
iret
mov
jb
imul
adc
mov
sbb
movsl
popa
add
mov
sub
cmp
cld
cmp
push
sub
repz
in
jmp
fcmovnb
add
fimuls
adc
pop
jg
sti
lcall
test
add
out
mov
xchg
cli
into
repnz
mov
xchg
inc
and
pop
push
aaa
cli
incl
cmp
xlat
jns
jle
fisubs
movsl
xchg
fwait
xor
jno
dec
jne
sbb
xor
je
dec
hlt
sbb
mov
enter
jg
popa
pop
xchg
je
enter
mov
add
insl
aam
cmp
mov
dec
sub
sarl
mov
stos
xchg
loope
mov
push
sbb
daa
into
imul
repnz
dec
mov
leave
repnz
popa
aaa
aas
mov
or
xchg
add
and
mov
jecxz
pushf
inc
xchg
jp
jmp
mov
jmp
mov
jo
xchg
insb
lock
jns
xchg
lret
mov
flds
xor
mov
lods
jecxz
std
test
data16
lods
imul
mull
jnp
loopne
mov
inc
xlat
push
hlt
or
lahf
sbb
jp
or
sahf
lcall
sti
jecxz
add
fcompl
sahf
dec
jo
cmp
add
sub
or
jp
push
ljmp
pop
aad
je
test
cmp
jae,pt
add
dec
inc
cld
push
xor
mov
out
out
push
lahf
mov
cmp
lret
push
push
and
mov
sub
ss
push
icebp
enter
cmpsb
lret
push
inc
push
jmp
add
sbb
imul
xor
adc
ja
xor
fildll
jecxz
sbb
movsb
xchg
rclb
sarl
daa
loopne
loope
or
in
repz
gs
adc
and
xor
xchg
xchg
pop
push
inc
cmp
push
xchg
push
fldenv
cld
cmp
sbb
push
shlb
sub
cmp
pop
mov
xchg
ss
cli
fcomps
aam
cmpsb
inc
cmp
jle
jp
imul
xchg
xchg
xchg
xor
cmp
jne
or
xor
clc
xor
in
loopne
sub
dec
sahf
jae
cltd
aam
icebp
xor
mov
add
dec
cmc
shll
sbb
mov
cmp
nop
jg
lds
xorb
fs
testb
adc
int3
sbb
std
sets
xchg
int3
or
push
fwait
xor
popf
or
in
mov
rcl
pop
mov
imul
jae
xchg
jl
int
jo
sbbb
inc
sbb
cmp
cmp
pusha
subl
repz
leave
xchg
into
ss
mov
test
mov
cmp
aaa
adc
call
xchg
inc
fnsave
mov
add
pop
dec
jb
fucomp
rcl
in
pop
cmp
push
and
lea
dec
ret
into
dec
pushf
or
aam
aas
adc
scas
push
ja
cmc
mov
cmp
sbb
jp
lea
xchg
fmuls
sbb
in
jo
mov
aas
fdivs
daa
mov
mov
in
scas
xchg
test
stc
pushf
adc
hlt
shrb
cmpsb
test
les
sub
hlt
jge
pop
sahf
test
fiadds
imul
mov
fwait
fwait
or
lock
mov
pusha
cld
stc
das
pop
cld
push
sub
iret
add
andl
pop
or
popa
aam
pop
pop
sub
rorl
cmp
arpl
addr16
lods
xchg
pop
pushf
adc
mov
push
jae
sub
popa
ds
pop
xchg
or
push
inc
addr16
xor
xchg
repz
and
cmp
push
orb
jno
mov
das
xchg
lods
das
mov
mov
jge
add
push
mov
nop
icebp
sub
iret
lods
clc
pop
sar
daa
insb
jmp
mov
cmp
mov
dec
push
push
aaa
cmp
ja
mov
lock
cmc
imul
lea
xchg
mov
sub
cmp
jecxz
rorb
ret
mov
popf
jns
sti
dec
cld
or
imul
in
aad
scas
pop
cmp
xchg
push
clc
push
sti
jmp
test
fbld
mov
xlat
out
insl
xlat
in
popa
scas
jecxz
jle
xchg
out
pop
les
clc
add
cmpsb
out
sub
sub
and
add
call
inc
cld
adc
js
or
jl
addr16
sahf
scas
add
pusha
rcr
sub
loopne
adc
inc
jo
adc
pop
push
add
movsl
xchg
aam
hlt
push
mov
andb
mov
add
cli
adc
inc
sbb
call
hlt
dec
and
iret
mov
test
jge
cmp
aas
push
mov
mov
pop
and
pop
icebp
inc
and
rorl
loop
push
out
push
jge
fisttpll
cmp
daa
adc
push
or
xor
push
and
stos
gs
jg
mov
stos
mov
call
pop
fwait
push
cmpsb
data16
inc
inc
xchg
or
pmaxub
sbb
cmp
test
js
push
incb
sub
mov
jno
testb
push
and
loop
les
xchg
mov
in
dec
out
inc
mov
int3
inc
push
popf
push
or
lahf
and
or
fs
or
cmp
mov
daa
add
push
xchg
int3
dec
imul
mov
pop
xchg
jle
outsl
or
mov
jg
mov
adc
jp
cmp
shl
or
dec
cwtl
push
or
push
out
add
inc
push
add
adc
scas
adc
popa
and
cltd
jae
mov
pop
xorb
mov
mov
mov
add
loopne
sbb
fimuls
jl
scas
std
gs
in
in
jo
adc
ss
mov
icebp
xor
in
std
test
jns
pusha
test
xchg
aaa
sbb
out
sub
gs
pop
cmpb
jns
mov
dec
movsb
arpl
xor
mov
in
mov
dec
mov
test
fbstp
adc
dec
cmp
imul
push
and
call
cmp
push
test
std
sbb
push
out
push
std
js
mov
orl
mov
lcall
cmp
int
or
jecxz
push
out
jo
aaa
adc
mov
mov
loop
push
dec
ret
fisubs
sbb
outsl
cmc
aad
add
int3
pop
enter
leave
sub
sahf
xchg
jb
movsb
pop
xchg
jnp
stos
xlat
lahf
aas
xorl
cwtl
dec
repnz
testb
jecxz
or
adc
arpl
in
mov
inc
sti
sub
push
ja
jecxz
cmc
xor
add
sub
sbb
nop
xchg
in
arpl
push
xchg
clc
or
push
popa
pop
inc
cwtl
pop
inc
xchg
rol
inc
call
mov
ret
add
fxam
rcl
xchg
nop
xchg
jo
sbb
push
push
js
mov
pusha
cmp
lods
mov
cmp
jnp
movsl
lea
mov
cld
jecxz
mov
imul
or
test
sub
lds
in
pushf
fildll
adc
pushf
pop
or
in
lahf
dec
jmp
xchg
pop
int
pushf
and
enter
lock
fcom
lds
cmp
cmpsl
add
pop
mov
cmc
js
test
fs
les
call
les
push
xor
in
and
test
mov
push
stos
mov
and
push
push
dec
mov
fnsave
rcrl
jb
pop
stos
sbb
sarb
lcall
ret
push
inc
xchg
xchg
xor
dec
aas
test
cs
xchg
lret
sub
orb
daa
mov
lcall
xor
cld
mov
int3
cwtl
push
ret
push
or
stos
in
inc
test
xchg
adc
adc
xchg
dec
jmp
test
xchg
scas
pop
xchg
into
insb
mov
fbld
jl
fwait
lcall
sub
lcall
sub
jne
mov
popl
int
lods
ljmp
mov
in
enter
inc
adc
in
and
popa
jo
inc
adc
bound
stc
push
push
lret
arpl
cmpsb
ja
mov
mov
adc
jne
pusha
mov
mov
cli
mov
sbbw
shr
jp
lahf
pusha
outsl
dec
gs
push
scas
cmp
cmc
pop
sub
jbe,pt
and
jp
ljmp
ds
jne
in
leave
xlat
cltd
pop
ja
cmp
adc
or
add
and
in
jns
add
sti
sub
lcall
data16
js
pop
call
adc
xchg
in
adc
ds
mov
cmpsl
sbb
cmp
cmpsb
inc
xorl
jno
push
mov
test
mov
fadds
push
es
push
out
pusha
es
xchg
inc
arpl
sbb
aaa
shll
push
mov
adc
push
adc
scas
call
sub
or
push
and
enter
pop
cmp
xchg
pop
push
out
in
push
cmpsb
insb
ffreep
mov
clc
scas
jbe
cmp
inc
repnz
mov
push
daa
cs
push
sub
out
mov
das
push
push
sbb
pop
fs
jecxz
nop
ds
sbb
sub
loopne
out
scas
adc
or
lds
push
shl
dec
ret
adc
or
sarl
clc
pop
movsl
sub
loop
outsb
xor
jae
jno
dec
test
je
mov
mov
sub
lcall
rcrb
mov
push
or
insb
sub
ljmp
dec
aas
or
and
xor
cmp
shrb
sub
out
inc
adc
adc
in
inc
cmp
jbe
push
popf
into
test
shlb
das
xchg
bound
std
sbbl
push
xor
cld
jl
adc
mov
fidivrs
mov
xorl
pushf
dec
adc
js
repz
test
sub
inc
pop
inc
cmpsb
inc
nop
fs
xor
and
stos
xchg
mov
add
sbb
outsb
imul
aam
test
imul
enter
loop
pushf
repz
mov
or
cmpsl
hlt
sbb
dec
stos
insl
cltd
push
pop
cmpsb
pmaxsw
inc
cwtl
outsl
cmp
push
lea
pusha
lcall
loop
and
inc
pop
test
fdivs
lcall
je
xor
adc
test
xchg
adc
outsl
add
cmp
sub
mov
or
add
sub
adc
push
jg
loopne
mov
push
fwait
sbb
shr
or
push
pop
xchg
icebp
mov
adc
mov
sbb
xchg
clc
sbb
repz
jb
mov
inc
test
inc
roll
in
out
sub
int
and
mov
mov
xor
addr16
ss
mov
subl
and
gs
or
lret
jle
sub
inc
ss
test
andb
adcl
mov
int
aaa
and
sbb
dec
xchg
in
xchg
cwtl
and
add
mov
sbb
lods
jl
sti
sub
mov
jecxz
mov
jo
xlat
and
into
int3
xchg
adc
std
test
adc
jnp
sub
jp
or
popf
cmpl
dec
int
into
ficompl
fimuls
sbb
pusha
test
inc
jg
sbb
nop
inc
xchg
imul
mov
std
lock
push
cmp
ja
shlb
xchg
mov
out
or
ss
out
fists
cltd
xor
push
subl
sbbl
sbb
xchg
cmp
adc
push
mov
es
ja
cmp
cmc
aaa
cmp
loop
jmp
fmul
loop
fcmovnb
fcmovb
push
lock
mov
jp
fsubs
imul
incl
test
ret
add
push
shrl
out
push
xchg
cmpsb
mov
aam
sub
enter
int3
mov
or
fildll
outsb
pop
xor
bound
xchg
movsl
sub
les
jge
ret
stc
outsb
test
and
add
int
push
int
jle
mov
pop
add
outsl
pop
aam
fcoms
cs
fcomps
mov
repnz
xchg
cmp
sbb
lret
fcoml
andl
arpl
fldl
sbb
jns
push
loope
mov
xchg
out
xlat
dec
loop
clc
aad
dec
aad
jl
pop
adc
cmp
jno
daa
jnp
jge
lret
dec
lcall
movsl
insl
faddl
adc
mov
sbb
xchg
xchg
shrb
xlat
shl
xchg
loope
xor
bound
aad
mov
jnp
imul
xor
lods
aas
mov
or
sub
and
xor
xor
scas
sub
scas
xor
adc
xor
inc
or
or
cmp
adc
mov
lock
sub
repz
jl
jno
xlat
cli
les
adc
imul
bound
out
loop
sbb
or
scas
pushf
outsb
xchg
fdivl
divl
in
adc
mov
jp
add
mov
testl
leave
and
pop
test
bound
lret
scas
ss
adc
dec
andb
icebp
popf
call
sbb
push
in
add
loop
cltd
sub
sahf
mov
or
mov
and
mov
ss
rep
sbb
sbb
add
cmp
push
sub
mov
cld
jno
jb
fisubrl
sub
push
test
pushf
xchg
mov
int3
jo
add
loopne
pop
arpl
cmp
rorb
dec
and
mov
std
cltd
push
pop
sub
sub
enter
inc
xlat
mov
pop
into
into
shrb
into
shrl
adc
adc
fcmovnb
in
loopne
pusha
out
imul
fiadds
subb
dec
in
pop
out
lods
iret
int3
push
mov
sbb
xchg
es
scas
push
mull
cmc
mov
lock
inc
jne
out
mov
sti
ret
mov
loope
test
sarl
movsl
xchg
sub
pushf
cwtl
xor
bound
out
pop
flds
sub
jns
xchg
std
or
mov
stos
mov
dec
cmp
ret
push
outsb
jae
mov
push
mov
gs
mov
push
cld
pop
push
ds
inc
xchg
or
xorl
jle
xor
mov
mov
test
or
push
xor
pop
rcll
movsl
inc
or
mov
je
js
xchg
lahf
das
mov
xor
adc
dec
sarb
pop
or
stos
mov
pop
mov
pop
jge
mov
sub
cwtl
out
cmp
imul
add
push
pop
cli
adc
xchg
aad
inc
mov
mov
daa
fstl
fsubr
or
pushf
inc
aad
imul
jle
ret
lds
pop
ret
aaa
add
stc
dec
jne
mov
lea
out
shrb
popa
dec
xor
adc
loopne
jmp
inc
es
faddl
shr
into
bound
sbbl
mov
mov
jecxz,pn
cmpsl
or
pop
dec
pop
mov
push
nop
aas
mov
jb
xchg
je
xchg
inc
call
add
inc
adc
lods
bswap
push
sahf
pop
sub
inc
jmp
ja
loop
pusha
test
sub
arpl
pop
cmpsl
pop
push
nop
movsb
test
cmp
int3
dec
icebp
dec
or
cmp
stos
and
adc
jecxz
aaa
mov
rcrl
out
enter
int
push
jg
and
setae
and
mov
push
xor
lock
adc
stc
sarl
pop
push
outsl
das
inc
adc
or
lcall
add
pop
in
and
stos
test
aas
dec
push
xor
dec
xorb
sub
dec
jbe
sub
push
lods
sbb
push
imul
add
and
into
nop
and
bnd
dec
or
inc
jno
stc
ja
or
insl
push
adc
adc
int3
test
insl
sti
sbb
xorb
inc
scas
push
imul
dec
ret
fiadds
loope
mov
cli
mov
pushf
push
xor
ja
lahf
fimull
jne
inc
jge
fnstenv
sbb
imul
cwtl
xchg
jb
loopne
sub
cmp
out
pop
out
movsl
int3
fs
popa
mov
fsubrp
and
lahf
bound
pop
out
fnstcw
sub
jbe
xchg
out
clc
mov
sti
in
cmp
int
dec
and
lock
test
mov
fcmove
mov
out
int
mov
out
scas
fnstsw
cmpsb
mov
je
cwtl
inc
lcall
dec
mov
cmp
cltd
cmpsl
xor
xchg
sbb
shl
and
rcrl
bound
out
aaa
je
xchg
filds
lock
lock
adcl
or
sahf
sub
cltd
add
inc
pop
fmul
sub
lea
xchg
ds
fdivl
js
nop
and
icebp
mov
aaa
push
scas
clc
mov
flds
push
xchg
out
add
inc
or
add
jmp
lret
pop
add
shlb
js
sbb
jns
xchg
or
mov
jmp
das
cmp
mov
pop
aaa
pop
push
sti
call
xchg
je
stos
arpl
jno
imul
aam
push
inc
roll
push
fbld
std
rol
push
loope
cwtl
outsb
fisubrl
adc
rcrl
adc
or
xor
out
xlat
test
add
xchg
aam
mov
mov
imul
dec
mov
dec
lods
out
xchg
or
les
lahf
and
jno
outsl
gs
pop
adc
xchg
mov
jno
or
jb
inc
fisubs
xlat
push
inc
lcall
setle
dec
dec
jecxz
cwtl
stos
out
imul
dec
jbe
and
adc
add
or
into
decb
jae
aas
mov
loop
add
sti
add
dec
xchg
mov
jns
xor
pop
lret
push
xchg
or
imul
out
test
xchg
sbb
imul
adc
out
addl
mov
push
roll
adcl
adc
test
out
add
mov
push
jae
or
mov
mov
push
inc
mov
out
xchg
pop
das
add
mov
push
call
dec
dec
iret
cmp
jno
mov
test
fnstcw
into
cltd
xchg
xchg
aas
imul
jne
hlt
jo
adc
scas
pop
sub
push
test
out
push
enter
into
dec
jbe
xchg
pop
negl
pop
jp
adc
mov
pop
fnsave
add
fists
lcall
jle
imul
jmp
lea
nop
cli
xchg
pop
fildll
mov
and
mov
jecxz
push
fsubrl
fs
repz
popa
outsl
lret
sbb
pusha
jp
fidivrl
push
jbe
pushf
mov
cld
sub
jb
jno
out
push
mov
fdivrs
das
lret
fldcw
inc
rclb
push
jmp
fcos
loop
pop
aad
incb
sahf
cmp
pusha
sub
push
imul
outsl
and
inc
pop
push
pusha
popa
pop
mov
rcrb
sub
xor
push
jl
mov
or
cli
mov
in
pop
cld
jge
add
andb
push
mov
add
outsl
sbb
cli
outsb
adc
pushf
call
les
shl
es
jmp
pop
popa
cmpsb
dec
movb
je
jp
movsb
fistl
aas
test
mov
or
pop
out
pop
popa
jae
test
inc
sub
push
lret
bnd
pop
xchg
mov
push
mov
add
pop
cmp
push
adc
adc
repnz
inc
xchg
movsb
inc
push
jno
je
sbb
fistpl
sub
pop
mov
or
imull
rcrl
dec
into
jcxz
sbb
ds
and
push
mov
ret
nop
repnz
lods
fists
adc
scas
mov
push
cmp
jne
movsl
cmp
imul
sbb
adc
xchg
mov
adc
vpsubb
outsl
adc
jl
in
aam
inc
ret
jb
or
jmp
mov
ror
xor
testb
xchg
inc
pusha
xorl
sbb
cmp
push
sbb
stc
mov
rcl
jg
pop
mov
jge
ja
dec
je
xchg
mov
or
jle
stos
push
pop
mov
aas
adc
sarl
pop
or
sbb
fstpt
fwait
and
sbb
lods
movsl
fiaddl
add
mov
jae
or
sahf
pop
ficoms
lods
push
xor
sbb
jp
out
mov
cltd
cli
bound
fwait
fidivs
dec
lods
rclb
test
mov
les
movsbl
mov
pop
hlt
mov
gs
jp
mov
xlat
mov
jmp
mov
lret
pusha
jle
xchg
movsl
leave
stos
sbb
dec
jp
frstor
stos
stos
nop
in
dec
scas
shll
stos
aad
movsl
sbb
loop
push
cld
mov
das
jmp
pop
in
push
jae
mov
jecxz
pop
cmp
pop
outsb
ljmp
xchg
lret
jae
inc
mov
das
lret
lods
data16
xlat
sti
inc
lahf
icebp
ss
mov
icebp
sub
pop
sbb
mov
sub
fldl
div
xchg
xor
inc
inc
cmpsb
mov
xor
push
push
sbb
stos
and
push
cmp
dec
shlb
sub
aam
mov
mov
sahf
popa
sbb
or
loop
sbb
sub
addr16
xchg
lods
out
hlt
jne
or
in
push
add
hlt
mov
and
inc
cs
inc
xchg
mov
popa
jbe
aad
jmp
add
orl
fdivrs
popa
stos
imul
fimuls
bound
movsl
lahf
xchg
js
repnz
sub
cmpsb
or
xor
mov
int
repz
jno
push
jne
pop
sub
dec
jg
pop
xchg
std
int3
call
dec
push
mov
sbb
mov
mov
addb
fnstsw
xchg
mov
lds
popl
in
or
add
add
sahf
inc
xor
jnp
mov
pusha
scas
lret
pop
jge
mov
sub
and
cmpsb
mov
pop
lock
outsl
sbb
iret
dec
mov
pop
pop
push
push
fsubp
dec
xchg
or
and
pop
jae
mov
cmp
lret
bound
scas
push
int
stos
cmp
push
ss
mov
dec
mov
cmpsl
cmp
inc
cwtl
sbb
xchg
add
lea
push
add
loop
xchg
push
popa
into
jmp
or
or
xchg
mov
inc
jmp
inc
jae
enter
inc
cmc
popa
push
dec
dec
jecxz
out
mov
sahf
popa
aad
in
inc
orb
lods
ss
push
das
cmp
mov
mov
xchg
xchg
or
mov
mov
popf
gs
ds
cli
pop
xchg
lcall
xchg
in
jl
arpl
fs
xchg
sbb
cmp
hlt
xor
js
and
loop
repnz
xor
cltd
or
cmp
push
out
adc
and
std
je
pop
jbe
xor
sub
mov
xchg
adc
add
test
inc
and
xchg
jmp
jecxz
dec
dec
dec
or
cmp
and
icebp
ds
in
decl
lahf
aaa
frstor
xchg
int
xchg
adc
mov
lahf
shl
dec
fcom
rcr
decl
sub
cs
shlb
pop
daa
int3
outsb
sbb
pop
lahf
or
cltd
pop
xlat
lret
xor
fisubrl
inc
je
and
mov
pop
test
les
sub
cmpsl
xlat
dec
jl
lret
insb
enter
in
adc
mov
jns
test
std
fs
addr16
out
data16
or
add
mov
aas
sbb
mov
in
or
pop
shrb
rcll
xorb
mov
repz
jmp
pop
sub
adc
imul
xlat
daa
imull
fisttpl
mov
loopne
adc
insl
inc
jmp
jp
and
xor
xor
dec
push
mov
fisubrs
stos
pop
mov
cmc
ds
movsb
push
pop
sbb
dec
and
icebp
and
lods
clc
test
push
pop
hlt
in
inc
jmp
pop
pop
clc
stos
mov
push
movsb
mov
jecxz
jge
inc
jb
xchg
jbe
into
or
mov
test
insb
pop
sbb
fmuls
int
mov
jns
xchg
sahf
xchg
push
cltd
push
jne
insb
sbb
inc
jno
push
add
in
pop
mov
push
pop
and
cmovp
iret
aam
call
sub
ret
cmc
fs
push
imul
xchg
cwtl
cltd
les
lods
fs
outsb
mov
mov
mov
lahf
pop
inc
cld
in
js
inc
pushf
psadbw
dec
pop
ds
push
cmp
xchg
push
mov
stos
cmp
fbld
nop
stos
int3
or
fcomps
ret
and
mov
inc
fld
push
add
fcom
pop
mov
loopne
ja
or
test
out
addr16
div
xor
push
jns
pop
rcrl
ficoml
movsb
repz
add
sar
inc
push
add
push
push
pushf
push
mov
push
popf
adc
arpl
inc
mov
movsb
jae
inc
or
push
aas
stos
xchg
mov
add
jae
jg
mov
test
jb
inc
jl
xchg
add
xchg
out
pushf
aaa
add
add
pop
fisttpll
shlb
std
cmc
jns
stc
je
push
aad
imul
test
inc
shlb
stc
popa
ja
lahf
arpl
or
sbb
inc
sbb
pop
mov
mov
repz
jge
or
xor
aas
fdivrl
stos
int
fdivrl
hlt
icebp
fidivrl
outsl
pop
pop
rol
test
enter
dec
cmc
fdivr
mov
shrl
mov
jb
mov
fdivrl
dec
cmp
movhps
std
stos
enter
shll
mov
sbb
cmovg
int
nop
mov
push
inc
insl
jp
inc
nop
lods
repnz
addr16
add
xchg
in
cltd
mov
lds
mov
imul
or
xchg
push
insl
clc
cmpsb
aad
xchg
outsl
jns
or
arpl
data16
xchg
addl
jnp
ja
sub
roll
dec
add
sarl
aam
sbb
pop
push
lea
pop
aaa
into
mov
mov
ret
cmpsl
jae
dec
jb
stos
mov
mov
stos
scas
sub
mov
adc
and
enter
push
fnstenv
mov
imul
out
xchg
cmc
pop
jnp
mov
iret
pop
or
or
or
jmp
out
xlat
imul
or
mov
in
js
mov
adc
ficomps
mov
fs
pop
insb
inc
dec
lods
ret
test
adc
outsl
xchg
jg
add
movsb
mov
ret
test
cmp
xor
das
sub
push
pusha
mov
sub
movsl
cmp
hlt
fdiv
into
pop
jg
mov
and
mov
pop
outsb
dec
xor
mov
dec
cmp
jecxz
mov
xor
bound
call
pop
sahf
and
sti
mov
shrb
sbb
mov
mov
and
push
pop
push
aad
sahf
mov
pop
adc
rcrl
dec
mov
push
lds
dec
imul
loope
clc
push
cmp
rorb
jl
mov
out
scas
cmp
push
ret
fcmove
jle
and
dec
push
dec
cltd
ret
jb
pop
cmpsl
in
mov
adc
js
inc
ret
and
mov
in
fcoml
sbb
cmp
jge
push
daa
xchg
mov
mov
rcrl
stos
xchg
mov
fldcw
aaa
mov
movsb
in
dec
mov
sub
jb
dec
sub
jecxz
mov
testb
add
xchg
sahf
push
hlt
mov
xor
xor
adc
fldl
jl
ljmp
rclb
nop
cli
xlat
addb
fwait
loop
mov
xchg
int3
arpl
rorl
mov
cli
dec
dec
lret
xlat
cs
xor
pop
cmpb
jo
test
sub
adc
mov
jge
das
fwait
dec
jno
test
jns
cmp
or
sbb
popa
and
test
xchg
js
jbe
sub
mov
mov
dec
xor
or
inc
lods
xchg
push
call
popa
pushf
fwait
es
enter
dec
pop
stc
sti
xor
push
test
dec
sti
sub
mov
adc
fmull
sbb
xor
cmpsb
ficompl
mov
rcrl
cmp
sub
sub
js
test
aad
sbb
cmp
cmp
push
outsb
xor
cmp
mov
mov
ja
pop
mov
ret
add
push
push
add
pop
sbb
add
sub
and
loopne
dec
fildl
je
mov
xchg
push
js
sbb
cmp
jns
call
dec
and
popl
jg
adc
jo
inc
pop
aad
xor
faddl
push
fucomi
or
or
cmp
sbb
mov
add
sahf
xor
fisttpll
fisubrs
jae
insl
iret
lods
xchg
sahf
test
cmp
xchg
rorl
pushf
insb
fs
int3
mov
cmp
xchg
or
xchg
push
outsb
int3
jb
pop
inc
les
dec
mov
xor
inc
sub
jo
mov
hlt
add
inc
jl
lcall
sbb
cwtl
jmp
ljmp
jp
and
fs
scas
pop
push
lods
xchg
or
sahf
xor
sahf
and
add
rcrb
nop
pop
xor
fisubs
or
jb
mov
fmul
or
test
mov
cmp
fimull
push
mov
out
cmp
adc
in
lds
mov
and
testb
popa
and
adc
adc
adc
xor
shrb
test
out
cmp
rcrb
xor
fnstsw
stos
mov
imul
or
xor
loop
xor
int3
sub
pop
imul
add
ja
mov
daa
mov
sub
cmp
sbb
inc
mov
push
insl
pop
cmc
gs
cltd
pop
aad
sub
cmp
mov
fsts
mov
pop
repz
mov
inc
out
xlat
lds
pop
add
push
mov
jne
xchg
std
imul
add
filds
test
cli
loop
jle
mov
mov
or
in
out
sbb
popf
fists
mov
dec
cltd
mov
imull
jno
push
xchg
or
je
add
stc
sbb
mov
xchg
or
mov
and
int
sub
pop
adc
sbb
cli
leave
call
pop
faddl
out
repz
mov
lret
jne
mov
lds
in
adcb
popf
lods
xchg
pop
inc
jae
sub
bound
dec
pop
jae
xchg
push
outsl
sbb
cmpb
or
in
add
cmc
push
lret
fucomip
sub
loope
inc
aad
add
mov
ljmp
mov
jns
enter
adc
andb
call
or
mov
xchg
fdivrp
push
jo
xorb
and
fwait
lods
es
or
jne
scas
inc
stc
sbb
mov
cmp
pop
aas
sub
loopne
xchg
aas
jmp
mov
sub
mov
push
out
repnz
cmp
rorb
fsubp
inc
mov
jle
rcrb
shrb
jo
sahf
mov
repz
sbb
inc
scas
mov
aam
cmc
mov
cmp
lock
xor
push
push
fsubs
sbb
cmp
sbb
jno
das
sbb
or
jl
inc
rep
or
lahf
out
jno
add
mov
push
cmpsl
and
adc
aaa
jl
notb
push
sbb
lret
and
sbb
lea
pop
xchg
lahf
mov
dec
shrb
push
xchg
sar
dec
subl
testb
jb
pop
xor
cmp
lahf
dec
pusha
inc
push
bound
popa
sahf
sub
stos
fmuls
jbe
cltd
sbb
fistps
lret
pop
imul
cmpsb
mov
and
fs
in
lock
add
out
sahf
mov
fimull
ret
pop
sti
repz
mov
sub
divl
push
xchg
push
lea
div
xchg
js
jns
ss
and
xor
pop
mov
sbb
insl
inc
arpl
mov
mov
mov
jmp
out
imul
dec
mov
mov
mov
shlb
loope
dec
lods
push
bound
jp
push
popa
and
cmp
dec
dec
lock
rolb
pop
mov
inc
shll
negl
cmpsl
adc
sub
dec
cmp
cmp
int
adc
cmp
sub
test
jp
das
dec
pushf
out
je
inc
pushf
push
mov
std
dec
test
xchg
push
stos
push
inc
scas
xor
mov
dec
pop
sub
add
in
mov
les
lret
push
fistpl
mov
cmp
popa
push
mov
call
inc
mov
inc
push
jl
hlt
cli
mov
outsl
mov
lret
out
xchg
and
out
aad
push
fidivl
out
mov
pop
cs
outsb
lock
std
push
sbb
jmp
inc
adc
cli
dec
mov
xchg
in
sub
push
inc
push
inc
mov
mov
outsl
int3
sbb
cmc
gs
add
imul
push
std
adc
xchg
out
rol
out
jnp
popf
push
xchg
ret
outsb
je
rorb
jg
xor
cmpsl
lret
inc
mov
movsl
xor
repnz
xchg
push
mov
xchg
cmp
mov
sbbl
inc
gs
clc
call
dec
cmpb
nop
jmp
ret
dec
mov
aad
pop
xchg
lcall
jmp
lock
sub
adc
jle
and
iret
inc
jl
xchg
pop
jae
rcrb
mov
adc
mov
sbb
xor
std
fnstsw
stos
inc
imul
sbb
and
movsl
pop
ret
mov
jl
sbb
loope
nop
scas
pop
fistps
lock
sahf
cld
pop
leave
mov
lahf
lret
sbb
je
imul
xor
insl
xor
pushf
movsl
xchg
in
pop
test
sbb
add
cltd
int3
std
dec
push
out
dec
push
mov
ret
mov
push
and
mov
lret
pop
mov
das
repz
aas
insl
repz
sbb
cmp
outsb
jp
mov
lahf
sub
add
sbb
xchg
mov
push
sbb
pop
test
arpl
inc
push
mov
inc
push
shrl
xchg
xchg
adc
xchg
xor
xchg
xchg
jp
aam
testb
ja
xchg
rorb
imul
mov
div
mov
fdivr
dec
lret
insb
imul
mov
lret
jno
mov
stos
cmp
xor
pop
mov
fists
add
stos
cld
int3
jae
ret
or
adc
add
lret
aad
mov
xchg
add
xlat
je
and
xor
fnstsw
xor
leave
in
mov
aam
xor
out
push
xchg
fimull
test
in
dec
and
test
ret
xchg
fxch
mov
cmp
cmp
sub
stos
adc
lods
fistps
notl
dec
test
push
inc
sub
pop
add
sub
and
push
jge
pop
cmp
mov
inc
mov
xchg
fldcw
imul
mov
sti
shrb
and
je
stos
sbb
jg
lea
or
pusha
xchg
sub
xchg
inc
popa
shrb
mov
pop
push
sbb
filds
adc
sbb
jge
push
jnp
lods
mov
push
inc
pop
lcall
fs
sub
pop
jo
pop
divb
add
or
mov
xchg
or
cmpsb
cmp
dec
pushf
in
adc
bound
push
fcomps
loopne
xchg
call
popf
shlb
outsl
adc
lcall
neg
or
addr16
push
aas
sbb
add
jle
xor
stc
fsubrs
xchg
repnz
adc
pop
mov
idivl
inc
dec
mov
push
dec
in
clc
popf
mov
cmp
das
movsl
mov
mov
cmp
sarl
mov
pop
xor
and
cwtl
lcall
push
loope
add
sub
shlb
mov
repnz
mov
sbb
dec
fadd
push
xor
and
cld
push
jecxz
call
mov
hlt
mov
inc
loopne
xor
sub
add
xor
jns
mov
xchg
ja
adc
fwait
arpl
xchg
inc
mov
sub
adc
test
add
test
push
pop
push
int3
dec
cli
jb
seto
sahf
inc
iret
jne
lret
daa
cmp
repnz
leave
in
insl
insb
and
sbb
incl
sub
jmp
xchg
mull
mov
pop
loopne
call
mov
call
xlat
fcmovnbe
dec
jae
dec
cli
aas
rol
and
jns
add
jl
outsl
insb
xchg
es
mov
scas
insl
notb
sub
in
addr16
cmpsl
add
sub
dec
sbb
data16
pusha
xchg
add
ror
xor
cmp
pop
mov
daa
mov
test
or
fldcw
loopne
add
in
sbbl
inc
inc
jae
imul
jge
xchg
push
fcompl
adc
add
inc
or
or
idivb
push
sub
clc
nop
push
xor
sub
xor
cltd
or
push
mov
scas
aaa
jnp
fcmove
mov
gs
loope
pop
add
call
or
dec
fists
sbb
mov
in
cmp
in
or
movsl
xchg
scas
pop
call
call
push
push
js
scas
into
lahf
inc
inc
cmp
xor
enter
or
sub
dec
popa
push
ja
jle
sub
inc
icebp
out
mov
sub
das
lods
mov
mov
loopne
pop
icebp
dec
inc
push
stos
pop
jno
les
jmp
imul
arpl
mov
jno
mov
pushf
inc
stos
sbbb
lods
cmp
cmp
push
mov
jns
rcrl
sbb
cltd
xor
insl
ror
cmp
add
jl
ret
aas
cld
das
addr16
sub
mov
mov
fwait
idiv
in
and
add
push
std
test
call
loopnew
test
cmc
das
gs
cmp
xlat
mov
shr
sbb
jb
roll
mov
inc
dec
mov
imul
loop
in
jge
rorb
sub
scas
enter
xchg
out
mov
insb
sub
dec
mov
addr16
sti
inc
adc
into
mov
xchg
add
mov
loop
int3
mov
mov
xor
jbe
cwtl
imul
subl
shll
or
pushf
stc
imul
aad
mov
das
and
mov
mov
cmc
push
leave
iret
cmpsl
test
jecxz
mov
call
add
pop
mov
mov
out
adc
stos
test
mov
cli
push
cmc
int
leave
cmp
adc
das
pop
xor
js
jge
pop
mov
or
xor
mov
push
jp
incb
pop
outsl
test
cld
pop
mov
movsb
repnz
clc
xor
fs
sti
bound
in
xor
cmpsb
sbb
cwtl
mov
push
mov
jmp
xlat
inc
jl
cmpsb
jg
loopne
loope
and
fadds
and
leave
addr16
test
xchg
outsl
gs
lods
cmp
icebp
in
sub
xchg
add
dec
insb
jl
add
scas
lret
cmp
out
dec
in
or
mov
roll
ret
inc
into
push
sbb
xchg
add
pop
jl
sbbb
cmp
adc
rorb
mov
sbb
cmp
fdivr
and
leave
and
pop
and
mov
and
fldt
fidivs
notl
out
in
cmp
loopne
push
mov
push
insb
jno
pusha
and
xbegin
inc
ljmp
icebp
mov
xchg
jne
sub
cwtl
clc
scas
into
cmp
loop
sub
outsb
mov
ficoms
cmpsl
out
adc
inc
mov
out
mov
add
xchg
xchg
or
pop
lock
sub
add
addr16
stos
outsl
jno
mov
lahf
ja
jge
adcb
fs
mov
xchg
in
shlb
divl
out
dec
or
push
push
mov
lahf
dec
adc
jp
cmp
adc
jp
icebp
stos
push
rcll
adc
fisubs
cld
xor
rcrb
icebp
inc
sbb
and
jecxz
fmuls
clc
out
cmp
xor
outsb
in
jge
js
leave
inc
mov
mov
cs
mov
movsl
jp
mov
xor
out
loope
lret
scas
mov
cli
leave
jecxz
push
mov
lret
sub
test
loop
pop
gs
push
or
rcrb
and
adc
mov
xor
dec
push
xchg
inc
shld
pop
out
jno
shr
add
into
les
cmp
jg
jmp
jge
call
ds
xchg
fistps
push
push
jle
jle
pushf
mov
mov
xor
adc
lahf
or
mov
cmpl
sbb
int
call
out
push
std
push
cmp
mov
popf
mov
mov
dec
mov
add
lret
lcall
ffree
stos
jbe
sti
into
outsb
dec
pop
or
mov
test
ljmp
push
add
cmpsl
imul
jmp
inc
xor
xor
dec
cmp
pop
in
sub
add
out
or
cmpb
rolb
cli
inc
xor
inc
mov
outsb
mov
fldcw
jge
sbb
push
jg
add
lahf
and
xor
movsl
push
mov
pop
sbb
fbstp
ds
insl
cs
out
mov
cltd
js
sub
dec
mov
cmpsb
adc
sub
stos
sub
push
inc
psubsb
mov
test
mov
dec
and
jb
fildl
aaa
sbb
into
imul
add
dec
js
xor
out
sbb
cli
push
xor
loop
scas
fisttpll
push
or
inc
cmp
cmpsb
into
sub
cmp
inc
dec
mov
xchg
mov
daa
add
in
imul
mov
cli
insb
cwtl
mov
and
movsl
xor
pop
ljmp
or
sbb
mov
pop
icebp
lock
adc
pop
xlat
cmc
jl
push
push
inc
jns
xchg
sub
enter
pusha
push
outsl
rcrb
push
lcall
outsl
lret
rorl
xor
xchg
pop
test
ror
scas
das
outsl
bound
outsb
test
lea
insl
or
xor
pop
test
rclb
xor
mov
push
pusha
cli
hlt
xlat
das
sub
dec
cmp
stos
mov
clc
scas
xor
lock
sahf
lahf
xor
pop
adc
jnp
scas
lret
aad
fcmovb
push
call
mov
cmc
and
pop
or
jnp
xor
inc
das
push
mov
add
xor
sub
in
mov
pop
jne
int
add
in
xchg
aas
icebp
popf
and
push
push
stos
jmp
xchg
and
cltd
mov
js
test
test
and
adc
mov
dec
sbb
push
dec
das
mov
icebp
cmp
push
pop
cli
call
in
jnp
adc
push
data16
xchg
enter
mov
inc
pusha
xchg
xchg
dec
mov
mov
inc
jns
movsl
jbe
mov
sahf
lcall
fsubl
sub
sbb
fdivs
fisubs
jg
mov
js
aad
ds
mov
jne
dec
loope
xchg
out
mov
and
push
add
dec
jae
iret
mov
inc
xor
sub
in
js
lds
pusha
stc
pusha
cmp
sbb
andb
lahf
or
mov
jns
xchg
iret
js
call
ret
inc
data16
aas
inc
into
push
mov
inc
mov
pop
cltd
xchg
and
stos
test
insb
dec
mov
adc
cli
scas
push
push
mov
inc
mov
filds
loope
mov
sbb
mov
jecxz
fiadds
push
stc
inc
mov
inc
xchg
adcb
jmp
daa
and
pop
out
xor
ja
and
adcl
jne
int
pop
ret
sub
sahf
pop
jnp
inc
cmp
or
jb
stos
pushf
test
xor
push
sub
push
lods
pop
mov
hlt
adc
sbb
cmpsl
ja
out
nop
dec
xchg
push
stos
dec
and
mov
pop
jno
cmc
and
scas
xchg
pusha
and
mov
jge
adc
cmp
inc
sar
cld
leave
hlt
push
mov
push
and
mov
dec
and
pop
xchg
into
jle
and
mov
and
lahf
xchg
and
jne
fdivs
scas
in
mov
out
sub
into
fxch
aaa
imul
int
orl
mov
inc
stos
mov
cmp
jg
add
in
add
push
aas
jno
or
xchg
lock
les
mov
pushf
mov
js
mov
push
aad
imul
push
and
or
nop
int3
loope
sti
sub
roll
std
leave
and
mov
fdivp
or
add
cmp
movsb
sahf
adc
sahf
lret
xor
jmp
pop
movsb
jg
cli
hlt
ret
mov
aaa
test
lods
dec
shrl
int
adc
cmp
inc
pop
fsubrl
mov
and
jmp
xchg
push
mov
sbb
fs
sub
jmp
mov
scas
pop
scas
lcall
push
xchg
roll
sub
jne
mov
imul
lahf
adc
mov
sub
xchg
jl
sbb
aam
divb
in
push
bound
add
stos
jge
sbb
and
cltd
xchg
aas
mov
mov
sahf
sbb
and
add
es
pushf
roll
aaa
push
lret
push
lods
nop
dec
dec
out
inc
add
push
sbb
loopne
xlat
xlat
ret
jns
push
xchg
mov
ret
mov
repnz
loop
add
sbb
fdivl
xchg
mov
or
aas
pop
loope
pushf
xchg
std
fsubs
mov
mov
fwait
push
lea
dec
or
cmp
pop
xchg
sub
ds
bound
and
cli
bound
sub
push
pop
ja
mov
mov
push
stos
subl
imul
icebp
xchg
shl
dec
stc
adc
js
mov
and
mov
xchg
pop
cwtl
aas
xor
cmpb
push
xchg
mov
jl
jge
push
jbe
das
dec
int
rcrb
mov
ret
add
inc
imul
pop
pop
andl
lea
arpl
cmp
inc
and
ja
push
ss
dec
je
inc
scas
int3
pop
jbe
int3
stos
loopne
or
std
lcall
cmp
std
mov
dec
repnz
add
cmp
mov
xor
sbb
js
out
loope
cld
and
cmpl
popf
xchg
testb
xchg
in
outsb
or
and
aaa
jo
adc
fistpll
mov
arpl
ret
mov
out
pop
inc
out
cltd
repz
lret
addr16
jnp
sub
inc
cli
sbbl
pop
in
push
cltd
in
dec
inc
test
mov
jg
jo
or
mov
and
and
dec
adc
repz
les
inc
mov
loope
and
fistpl
cltd
dec
and
jmp
push
rclb
enter
xor
push
pop
insb
or
iret
mov
div
pusha
and
xchg
mov
push
push
jbe
hlt
jmp
movsb
ret
pop
xor
lret
scas
clc
sbb
lret
sbb
and
push
sub
addr16
push
jb
inc
orl
sbb
xlat
and
jne
movsb
pop
mov
in
mov
loop
jno
stos
push
ljmp
mov
dec
dec
or
call
add
inc
mov
sub
inc
pop
cmp
sarb
dec
xchg
lds
jp
mov
xchg
das
pop
das
dec
adc
orl
push
mov
xor
mov
mov
pushf
in
adc
jbe
in
shlb
lret
fwait
or
and
dec
idivl
add
movsl
std
jge
jecxz
sub
cmp
push
lahf
jmp
jo
shl
movsb
adc
adc
lods
mov
jns
jg
insl
mov
lret
dec
xor
dec
inc
or
mov
ja
and
imul
sub
lods
in
dec
popa
sub
cmp
xor
adc
cwtl
int
nop
fstl
push
sbb
rolb
and
mov
xchg
imul
jmp
frstor
adc
sbb
insl
lock
sub
daa
out
mov
or
cmc
jne
js
ja
int
mov
cli
adc
pop
arpl
adc
pop
push
jno
adc
adc
outsl
jnp
or
test
add
xor
fildl
jl
popf
sahf
lea
jae
ficomps
and
cld
test
jmp
pop
push
xor
dec
insl
cmpb
sahf
out
aaa
dec
mov
jecxz
push
mov
cwtl
arpl
adc
fcmovb
xor
mov
sub
arpl
or
pop
cmp
cmp
in
js
mov
sbb
xor
and
push
es
xlat
dec
sub
jnp
sub
inc
pop
cmp
add
jbe
sahf
xchg
and
aam
rcl
orb
xchg
mov
shlb
insl
mov
stc
xor
mov
jb
sti
and
icebp
gs
popf
and
push
es
cmp
mov
xchg
addr16
gs
push
ljmp
ret
or
mov
mov
shlb
ret
icebp
xchg
mov
hlt
jmp
lret
pop
clc
stos
ja
mov
int3
jmp
add
xlat
cmp
push
repz
mov
jmp
xchg
jb
add
mov
mov
sbb
lret
jae
mov
xchg
cmp
rclb
sub
jg
push
insb
shrl
int3
fadds
inc
pop
shl
in
stos
outsl
mov
push
xor
pop
rol
stos
rcll
into
sbb
adc
xchg
sti
push
leave
insl
in
jae
jns
stc
call
jnp
pushf
push
mov
fwait
or
xor
add
pop
mov
mov
lods
data16
jns
jb
loopne
ss
repnz
xchg
mov
stc
iret
xchg
loopne
cmp
mov
push
pushl
push
pushf
jp
stos
movsl
cld
pop
pop
dec
in
jp
or
cmp
pop
stos
inc
dec
sub
dec
mov
insl
ss
inc
call
jne
pop
js
repz
mov
push
dec
mov
mov
imul
cltd
push
adc
or
and
fmul
aad
lret
loope
jb
popa
push
arpl
push
je
ret
or
jae
sbb
pop
jnp
xor
dec
loope
mov
into
pusha
jp
cmp
and
inc
movsb
int3
loop
imul
xchg
call
pop
sub
ja
add
push
mov
mov
sbb
mov
sti
or
sbb
insl
mov
mov
adc
leave
or
in
int3
pop
pushf
jnp
int
std
xor
mov
and
mov
popa
sarl
pop
fwait
push
mov
shl
mov
pop
or
stc
and
int3
and
shl
push
mov
mov
jp
shll
xchg
addr16
fistpll
test
daa
test
dec
cmp
cltd
mov
nop
adc
scas
aad
daa
movb
fs
inc
cld
jl
jg
mov
pop
imul
mov
std
add
lret
jns
cmc
or
test
pop
dec
and
outsb
mov
cmp
test
cmpsb
mov
dec
and
mov
addr16
rorb
or
dec
pop
dec
lret
inc
es
ds
test
insb
jmp
stos
jo
stos
xor
ds
ljmp
cmp
movsl
add
sbb
xchg
pop
pushf
das
mov
mov
mov
mov
pop
pop
cmp
les
pop
add
rcl
add
jne
in
gs
sub
movsb
sub
push
or
xchg
lock
push
in
or
scas
hlt
mov
push
shl
dec
sti
jae
sbb
testl
loop
bound
daa
and
cs
mov
lods
cltd
sti
inc
sbb
out
addr16
mov
loope
addr16
out
pop
or
hlt
and
pushf
scas
or
enter
adc
sub
cwtl
or
lcall
xchg
aas
mov
cmp
cmp
adcl
cmp
mov
and
outsl
cmpsb
data16
stos
pshufw
jle
push
push
push
mov
push
hlt
subb
pop
mov
and
add
and
and
xchg
out
clc
pop
pop
enter
in
adcb
xor
push
pusha
dec
lock
jne
push
es
sub
xchg
aam
andl
lock
jne
divb
jle
pusha
mov
mov
popf
sbb
lcall
inc
mov
mov
sbb
ja
popf
stc
cmp
push
inc
test
jle
pop
cltd
sub
arpl
jmp
and
std
movsl
mov
inc
aas
push
cwtl
jns
push
sahf
jge
stos
xor
mov
or
push
lret
les
sti
adc
rcll
roll
mov
das
inc
add
cmp
jecxz
and
add
das
xchg
ffreep
lcall
adc
cld
cmp
movsb
leave
sbb
adc
pop
pop
jecxz
push
lret
and
sub
jecxz
cmpsb
jg
clc
imul
dec
lret
adc
cwtl
fidivrl
in
imul
insb
les
cwtl
mull
fbld
loop
push
rclb
mov
xorb
cs
lcall
out
jmp
fs
inc
adc
cmp
xor
scas
jp
adc
nop
enter
shrb
orl
inc
fmuls
lret
es
data16
inc
jae
xchg
or
add
mov
arpl
leave
and
or
mov
mov
stos
ss
dec
or
cmp
xor
addr16
mov
mov
lock
dec
shl
xchg
or
xchg
loope
out
fsubl
inc
inc
or
sub
sbb
sbb
and
inc
inc
inc
mov
fchs
insl
popa
dec
dec
cmp
test
das
push
test
icebp
lds
ss
jne
dec
aad
lahf
push
mov
mov
jl
or
lods
nop
aad
les
rcll
aaa
jae
dec
dec
adc
clc
xor
cmp
fisttpll
sub
lds
int3
inc
push
jl
lods
mov
dec
mov
js
add
popf
data16
xchg
and
xchg
loop
add
and
aam
xchg
jecxz
ror
and
sub
xchg
int3
cmpsb
and
sbb
cmp
fbstp
mov
mov
mov
sbb
lods
movsl
ret
repnz
mov
lods
adc
jmp
out
mov
mov
ret
outsl
shrb
arpl
sbb
out
pop
dec
jg
mov
and
mov
mov
add
add
scas
testb
or
ljmp
hlt
jne
je
lock
in
sub
cmpsl
dec
sub
call
push
outsb
push
dec
fstl
mov
mov
scas
xchg
inc
mov
popa
out
es
jno
or
jmp
push
je
addr16
loope
mov
test
hlt
cs
pusha
cld
cmpsl
pop
sbb
cli
leave
repz
ja
je
pusha
fs
in
aaa
sbb
add
das
scas
ds
in
mov
aam
jns
es
mov
add
mov
jbe
popa
repnz
cli
cmp
fmul
cmp
and
scas
pop
imul
push
or
inc
js
shl
or
fnstsw
pop
enter
mov
or
stos
inc
xchg
shrl
outsl
ret
inc
or
sub
push
int3
out
xor
lock
dec
mov
dec
mov
iret
dec
jp
push
div
repz
pop
inc
lcall
loope
pop
lods
mov
cmc
mov
inc
testb
dec
fisttpll
push
add
cmp
sbb
jno
hlt
lock
lahf
cmp
shll
fildl
into
call
cmp
ljmp
imul
cmp
sbb
push
loopne
sti
xchg
xchg
imulb
cwtl
and
jno
jae
sbb
jnp
cmp
jle
mov
fidivrl
ret
adc
jmp
mov
xchg
sbb
loop
xchg
lret
sbbb
iret
fnsave
xchg
loopne
add
cmp
and
shll
and
push
pop
mov
iret
push
fwait
jecxz
int3
mov
mov
gs
int3
rcrl
jp
test
shrl
jbe
cs
xchg
mov
xchg
sbb
sbb
push
repz
or
iret
or
push
xlat
shll
add
call
fmul
lea
push
xchg
pop
cmp
inc
xchg
ja
je
inc
arpl
movsl
pop
jns
adc
or
jne
aad
push
xchg
and
outsl
mov
xchg
adc
cmp
btc
repz
dec
and
push
cmp
dec
out
sub
dec
adc
mov
xchg
pop
mov
aaa
cmp
mov
pop
mov
inc
cwtl
jl
mov
sbb
sbb
cs
push
inc
fldt
aas
pop
loope,pn
push
adc
mov
mov
add
lret
test
fdivs
pop
add
addr16
add
punpckhbw
push
ret
push
add
lret
das
movsl
arpl
xor
pop
add
pop
and
imul
mov
add
or
stc
fwait
cs
lock
inc
lcall
ret
enter
mov
pop
nop
and
mul
mov
sub
and
pushf
clc
push
add
ret
and
test
and
add
or
mov
push
inc
sahf
adc
push
or
sbb
cmp
mov
jle
xchg
push
mov
sub
push
add
jno
push
push
push
lret
sub
pop
stos
jo
jecxz
lock
stc
aad
sbb
jnp
lods
xchg
dec
std
arpl
push
dec
pop
in
orl
shl
mov
sub
lods
or
mov
push
rolb
dec
or
and
inc
cs
test
cs
mov
xchg
cltd
stos
leave
lahf
pushf
pop
lds
jbe
mov
or
mov
jne
add
outsl
int3
mov
cmpl
ret
adc
or
cltd
pop
ds
sarb
inc
sahf
xchg
mov
nop
sti
adc
cmp
mulb
popf
mov
jnp
rcrl
xor
push
repz
inc
inc
loope
jno
mov
lds
sbb
lcall
sbb
sbbl
rolb
iret
mov
popa
int3
or
cli
clc
test
push
out
xlat
mov
adc
popf
inc
lret
cltd
dec
dec
stc
sub
mov
adc
mov
xchg
sub
mov
push
lret
lret
dec
jns
mov
sub
or
ficoml
inc
add
push
xlat
cs
stos
cmc
jnp
dec
sahf
popf
inc
push
push
test
cld
mov
adc
adc
rol
ja
movsl
pop
sub
int3
mov
cmpsl
cld
inc
in
jg
mov
cmp
jns
or
push
push
mov
xchg
idivl
adc
lcall
rcl
add
pushf
outsb
mov
pushf
jp
loopne
adc
repz
insb
sub
jge
inc
inc
in
cmpsl
lds
fwait
cs
bts
faddl
lret
push
dec
mov
xor
movsl
and
jg
pop
fst
and
add
xchg
fisttpll
add
dec
jp
jns
ja
ret
fadds
loopnew
cli
fwait
repz
inc
add
dec
ret
ja
rorb
pop
test
cmp
scas
adc
sub
sub
rclb
fsubr
rcr
lds
ljmp
adc
jb
jne
std
adc
or
rorl
jnp
mov
in
stos
jno
cmc
int
and
xchg
mov
data16
pop
sbb
add
insl
cld
pop
cmpsb
xchg
pop
sub
adc
jno
adc
lret
leave
stos
leave
dec
mov
iret
pushf
adc
add
and
repz
push
testb
sbb
fwait
lods
test
rcrl
fwait
aam
stc
stos
data16
mov
adc
pushf
dec
sub
les
xchg
adc
outsb
lods
dec
stos
popf
push
imul
cli
inc
shll
ffreep
ds
test
mov
mov
sbb
or
rcr
dec
mov
mov
test
dec
imul
cmp
das
pop
sub
loope
push
sbb
jecxz
or
ret
sbb
add
cmc
adc
cltd
dec
scas
xor
fldl
repz
popf
lock
jp
in
fnstcw
mov
jecxz
mov
mov
lret
and
fldl
rclb
add
adc
cltd
loopne
stc
jl
sbb
es
add
sbb
insl
out
or
fsubrs
mov
arpl
inc
sub
and
cmc
jmp
pop
mov
imull
out
cmc
jl
inc
or
dec
xchg
mov
aad
dec
fcmovnbe
ljmp
inc
jp
push
push
movsl
mov
jb
mov
fwait
stc
add
data16
popa
ficomps
cld
test
sub
cld
mov
lods
lret
and
call
cmp
lods
cmp
das
xchg
add
sub
movsb
sub
out
leave
rcll
and
daa
and
pop
push
add
sti
test
pop
fstl
lret
fmull
movsl
pop
push
jmp
or
sub
add
aam
sbb
pop
pop
cli
jnp
sahf
xor
bound
stos
pop
ljmp
jg
arpl
jne
mov
xchg
cmpl
shlb
jg
sbb
mov
mov
ss
faddl
cmp
sbbb
insl
jns
adc
out
and
sub
testl
scas
jae
dec
test
xchg
inc
sub
cld
shlb
mov
pop
add
flds
sahf
jne
popf
scas
mov
sbb
sbb
cmp
inc
xor
cli
bound
mov
cld
dec
sarl
jne
test
mov
hlt
repnz
jae
movsl
cmp
std
mov
jne
or
inc
push
in
and
xor
and
mov
sti
test
mov
imul
push
xchg
mov
jnp
out
imul
stos
dec
ja
bound
loope
aaa
lods
mov
mov
lret
ficoml
addb
in
cmp
mov
jbe
hlt
mov
fimull
sub
cmp
adc
xchg
mov
insl
pop
push
subb
icebp
adc
js
testl
stc
test
xchg
es
jnp
aaa
pop
adc
mov
cmp
or
faddp
push
mov
repz
aas
inc
pushf
les
and
mull
xchg
loopne
js
rcrb
es
and
int3
arpl
lahf
shr
sub
mov
push
sub
lock
pop
cmpsb
daa
mov
pop
xor
jne
adc
add
leave
ja
mov
adc
out
mov
sahf
inc
mov
fwait
xchg
mov
enter
sub
dec
jno
cmc
lret
push
gs
movsl
pop
aam
jecxz
adc
jns
loop
cmp
icebp
mov
cmp
sbb
imul
scas
sbb
xchg
lret
out
mov
jae
or
test
adc
es
pop
pop
movsl
mov
ss
mov
aam
cmp
or
fistpl
sbb
mov
sbb
jmp
xor
push
inc
movsl
add
mov
jo
negb
dec
sub
and
cs
sbb
sbb
lea
jae
daa
xchg
lock
or
shll
inc
cmp
mov
in
xor
mov
iret
outsb
aad
fstpt
jecxz
ja
and
lret
sahf
cmc
mov
inc
sti
call
xchg
jg
movsb
int3
in
in
outsl
repz
and
lcall
stc
xchg
bound
pop
cmp
cmp
test
jbe
out
xor
out
int3
add
test
lds
or
in
aas
jbe
mov
leave
xchg
lcall
in
out
test
fbld
stos
mov
mov
lods
and
jp
loopne
push
inc
bound
mov
mov
dec
dec
sbb
push
adc
scas
or
scas
or
lea
dec
loope
sbb
in
movsb
adc
pop
xor
out
fbstp
jnp
or
jg
xorb
out
out
cld
sbb
popf
in
xchg
inc
jno
lods
pop
dec
mov
xor
fistl
jle
lcall
sbb
mov
imul
mov
adc
lods
pushf
rcl
mov
sahf
jno
push
inc
insb
lock
add
ficomps
mov
pop
testb
xchg
stos
jmp
push
pop
pop
mov
and
dec
jb
es
insl
inc
sub
popf
hlt
jp
sarl
dec
and
xchg
sti
test
jne
dec
jns
push
jbe
dec
bound
push
sbb
or
ljmp
nop
and
pop
ret
dec
int3
pop
cmp
insb
jb
or
or
ljmp
fimull
fwait
outsb
cmc
adc
fs
cli
clc
sbb
outsb
arpl
aam
and
cmpsl
int
leave
push
mov
pop
testb
lcall
inc
sbb
sbb
or
js
xor
fdivrs
inc
insl
add
sub
enter
cmp
lret
out
and
jg
mov
push
adc
xchg
jmp
jnp
jge
in
out
cmp
dec
mov
arpl
dec
or
xchg
inc
int3
jne
ret
add
popa
cli
push
or
jnp
cltd
adc
imul
xchg
cmp
sub
ja
std
aas
call
loope
and
pop
add
xor
mov
jge
pop
mov
push
imul
mov
push
movsl
cmpsb
in
add
push
mov
fstp
mov
sbb
clc
loop
incl
add
rcrl
int
xchg
mov
loope
lret
xchg
jae
sbb
push
insb
idiv
scas
test
or
cmpsb
mov
pop
clc
in
mov
adc
pop
mov
out
ret
jge
adc
sbbb
mov
mov
push
xor
shrd
in
mov
or
xor
mov
mov
cmp
jecxz
fisttps
arpl
mov
xchg
xor
rolb
xchg
lods
cmp
adc
pop
jne
shlb
adc
mov
pop
xchg
inc
daa
ror
out
lods
and
mov
sti
ret
fsubrs
les
pop
xchg
dec
dec
test
xor
cld
dec
mov
loopne
or
dec
gs
test
inc
jb
movsl
push
add
cmpsb
pop
pop
jp
dec
push
and
sbb
cmp
or
sbb
cmp
add
test
int3
sahf
rorl
adc
dec
lods
jo
pop
js
mov
cmpsb
ja
into
cmp
cs
nop
dec
or
sbb
idivl
pop
mov
add
rcrl
pop
arpl
jg
push
sub
in
mov
dec
pop
dec
sub
push
mov
xchg
clc
stos
in
jb
push
xchg
dec
mov
push
jge
or
js
cs
cmpsl
push
cmp
jge
lock
ret
out
int
push
repnz
sub
pop
adc
mov
lods
jb
leave
pop
mov
cltd
jne
mov
cmpsb
jp
sub
mov
add
push
push
inc
push
loope
fs
dec
adc
mov
sbb
sbb
ja
dec
jb
loopne
push
dec
xchg
push
cmp
pop
fnstcw
push
in
push
jns
mov
cmp
jae
popa
jp
ret
cld
jne
push
xchg
xchg
lahf
mov
in
and
js
or
xchg
adc
pusha
mov
add
insl
sub
jge
mov
testl
in
and
mov
inc
sub
inc
mov
sub
or
clc
xor
fldcw
es
pusha
fcompl
mov
mov
xchg
aaa
or
fiadds
xchg
popf
inc
jbe
inc
pushf
insl
iret
jmp
push
stos
dec
cmpsb
push
add
ret
inc
fwait
std
cltd
stos
test
or
subb
dec
movsb
adc
adc
jae
jno
push
mov
adc
add
sbb
sub
fsubl
pop
orb
mov
xor
outsb
push
mov
aaa
test
subb
loopne
notb
add
out
dec
outsb
cmp
and
inc
mov
jge
pop
iret
int
jmp
push
ficoms
iret
daa
xor
pop
add
jo
int3
xchg
jg
jb
les
insb
in
xchg
out
fcmovu
add
jp
xorb
jmp
mov
inc
cmc
push
sub
inc
arpl
ljmp
inc
imul
sub
inc
jo
aas
mov
mov
pop
into
cmp
lret
cmp
ja
push
out
and
push
dec
lret
cmp
push
inc
add
push
lods
mov
xchg
xor
xor
lock
and
pop
icebp
aam
rcl
out
les
pop
push
jl
jle
mov
mov
mov
pop
ljmp
in
mov
jmp
test
push
ss
mov
addr16
inc
call
cmpsl
sbb
mov
ljmp
testb
ret
sub
inc
test
shrb
es
insl
mov
xlat
add
movsb
adc
xor
dec
scas
clc
xchg
inc
and
mov
push
adc
ds
lahf
push
mov
add
mov
ds
xchg
mov
idiv
mov
adc
mov
mov
dec
test
sub
jecxz
shlb
aad
fisubrs
fsubs
jae
cli
ret
adc
fsubs
rcrl
xchg
and
sub
in
std
push
mov
std
pop
cltd
adc
divb
mov
sbb
sbb
enter
cmp
sub
dec
lods
test
fisubrs
mov
cmpsb
or
shll
lcall
xor
pop
push
and
cmp
sub
test
mov
dec
pop
sti
jl
xchg
addb
testb
pop
fstpl
jmp
sbb
ret
leave
sub
cmpsl
outsl
lahf
adc
mov
mov
xchg
sbb
push
inc
pop
movsl
shrl
cltd
lods
dec
shlb
subb
jecxz
jge
xchg
xchg
in
sub
pop
js
or
jo
mov
sahf
xchg
add
fsub
sub
add
adc
aaa
dec
jbe
les
xchg
dec
std
fcmovbe
aaa
std
push
movsb
scas
nop
in
stos
jnp
mov
push
leave
je
push
cmpsl
test
in
cmp
inc
and
cmp
push
cmpsl
flds
sbb
pop
fdivl
xchg
xchg
mov
lahf
inc
mov
mov
mov
lret
repz
hlt
lret
cmpsb
adc
rcl
jne
xchg
xlat
out
call
pop
je
ss
pushw
scas
les
outsl
dec
mov
pop
push
mov
dec
insb
sub
leave
rorl
jl
mov
test
push
xchg
cmp
cmc
out
iret
adc
xchg
rcl
fdivrp
dec
jg
xchg
into
movsl
xchg
push
push
or
mov
fisubs
xchg
mov
add
add
adc
pop
sbb
fcompl
mov
mov
lahf
fucomip
iret
mov
stos
int
add
push
add
aas
adc
lahf
scas
pop
mov
pop
sbb
lret
addr16
mov
fdivr
scas
dec
test
mov
xchg
aaa
mov
xor
add
sahf
mov
fists
sub
sub
add
xor
push
push
jl
adc
js
xor
sbb
dec
test
sbb
jmp
fwait
in
fsubs
cmp
scas
es
addl
mov
dec
roll
ret
mov
jns
or
cmpb
mov
das
push
into
mov
insb
jbe
pop
xchg
orb
test
sbb
or
mov
icebp
repnz
add
int3
fs
pushf
jno
inc
or
aam
push
lcall
or
push
lods
jo
mov
rcrb
loope
inc
adc
ret
mov
cltd
cmp
sbb
outsb
sub
clc
outsb
fwait
mov
flds
dec
sub
mov
sti
xlat
inc
sbb
std
push
xchg
jae
std
dec
xor
inc
add
pop
js
mov
and
xor
call
mov
es
add
and
sub
add
stos
js
adc
adc
hlt
jecxz
sbb
in
mov
pop
sbb
pop
push
adc
ret
scas
dec
jno
into
out
loope
mov
xchg
jge
lcall
push
jae
mov
pop
je
pop
jbe
jge
push
cmp
dec
lods
mov
les
pop
sub
xor
sub
jmp
cmpsl
cmpsb
mov
int3
sbb
int3
out
push
stos
push
leave
dec
jne
mov
scas
fdivs
xor
test
andl
jg
xchg
fwait
pop
sub
push
jg
out
xor
rolb
sub
xchg
stc
sbb
out
pop
cs
enter
and
fisttps
or
mov
adc
inc
mov
out
int
fsts
push
pop
mov
cmp
or
add
pop
fsts
addr16
loop
mov
lcall
sub
mov
fwait
lcall
push
xchg
jmp
les
rorb
adc
xor
inc
stos
cmp
mov
jno
ret
and
jnp
test
push
add
mov
xchg
lea
ljmp
add
int
sbb
dec
shll
jo
in
call
data16
into
xchg
dec
sub
cmc
out
dec
popa
jbe
cmc
push
push
nop
cs
lahf
leave
push
push
es
push
inc
add
stc
orl
sbb
test
std
insb
or
movsb
in
int
cmpsb
push
ja
dec
ficoms
xor
call
jge
inc
xchg
lcall
pop
inc
fldenv
lcall
pop
rolb
xchg
sub
add
mov
scas
mov
dec
mov
adc
adc
xchg
adc
sti
inc
loope
sub
lock
test
and
aam
ret
cmp
insl
movsl
stc
das
leave
or
movsl
mov
fisubs
xchg
in
sbb
out
lret
xchg
scas
push
es
pusha
mov
movsb
mov
js
test
adc
ret
les
xor
cs
jecxz
xchg
clc
pop
in
adc
sub
shll
xor
lret
cmpsl
fsubs
shrb
push
dec
or
mov
pop
cwtl
push
jae
scas
push
add
inc
test
push
dec
popa
pop
cmpsb
gs
cmpsl
inc
mov
pop
outsl
mov
fistl
fstps
mov
xor
ret
jg
dec
jge
ds
leave
loop
incb
jmp
rolb
mov
sbb
inc
adc
sbb
out
and
inc
mov
ds
lret
gs
push
xchg
scas
jbe
sbbb
push
cmp
fnsave
xchg
dec
or
mov
and
pop
mov
shll
sbb
mov
push
std
jmp
xchg
pop
mov
out
ds
pop
push
mov
add
inc
push
mov
ss
es
int3
cmc
fucomip
insb
rcr
dec
notb
js
sub
jecxz
fldcw
mov
pop
lcall
sub
repnz
push
stos
mov
jo
xchg
or
jns
or
xor
lods
sahf
lods
and
xchg
je
jp
aad
ror
lock
xchg
ljmp
popl
xchg
xor
or
mov
pop
add
push
jne
pop
adc
lock
sub
sub
fists
mov
mov
adc
adc
pop
aas
hlt
and
sbb
je
data16
fcompl
sbb
inc
outsb
shrb
mov
sarb
xor
xor
mov
shlb
jne
push
dec
sbb
mov
mov
scas
or
mov
mov
jno
stc
jne
pop
hlt
out
rolb
mov
sub
mov
jle
cmp
notb
cmpsb
lahf
xchg
xor
mov
sbb
mov
enter
jmp
out
xor
enter
cmpl
ljmp
pop
fdivs
out
pop
test
push
lds
jno
pop
nop
push
mov
xchg
imul
jecxz
imul
pop
nop
insl
jne
aaa
add
dec
add
dec
aad
pop
adc
cmpb
sbb
pop
or
call
mov
aad
into
mov
out
sbb
movsb
mov
jae
nop
cmp
or
adc
mov
icebp
sbb
outsl
loop
push
mov
push
adc
sub
sbb
std
lret
icebp
and
rorb
sti
sub
dec
shlb
sbb
dec
adc
popl
mov
pop
sbbl
pop
hlt
xchg
cmp
sub
leave
add
call
jns
mov
xor
xchg
inc
movb
std
shll
outsl
adc
pushl
mov
in
or
repnz
ret
outsl
xchg
dec
out
arpl
aad
add
jns
cmp
jnp
xchg
das
add
inc
imul
or
push
xor
repz
cmp
mov
idivb
dec
jo
xchg
ret
cwtl
ret
in
xchg
rcrl
or
jne
jl
jecxz
faddl
pop
ret
cmp
sub
jg
dec
les
outsl
add
int
jg
rcrb
mov
and
mov
in
fadd
dec
sahf
or
repnz
in
inc
mov
jmp
hlt
mov
mov
daa
clc
andl
lods
sub
xchg
adc
push
inc
dec
gs
mov
aam
push
mov
shl
dec
call
sbb
pop
lods
or
rorl
jo
sbb
inc
pop
outsb
inc
test
ret
lds
jl
mov
pop
add
into
inc
xor
adc
push
js
icebp
mov
stos
stos
pop
mov
dec
jns
add
cmp
mov
push
cmp
sbb
adc
jmp
mov
pusha
outsb
mov
cmp
out
cwtl
cs
mov
pop
test
jle
fimuls
popa
mov
sahf
pop
gs
xor
dec
pop
jle
sub
popf
std
dec
pop
sub
js
xlat
jae
popa
shrb
out
icebp
or
push
fwait
mov
ret
push
push
jmp
and
xchg
out
orb
and
xor
xor
xchg
push
xchg
or
xor
in
pop
leave
push
lcall
cmp
pop
add
incb
jge
push
push
mov
jbe
sub
mov
fwait
inc
daa
jmp
fwait
repz
std
xchg
lea
cmpsl
cmp
stos
pop
inc
adc
adc
cmpsb
call
faddl
adc
adc
pushf
adc
mov
jmp
popa
lahf
ds
sbb
je
add
fcoml
and
add
pop
std
in
call
adc
movsb
or
jns
test
mov
dec
fwait
xchg
imul
add
mov
jnp
sahf
mov
leave
mov
sub
cs
test
leave
scas
adc
insl
push
popa
and
sbb
pop
pop
dec
mov
mov
clc
mov
cmp
jecxz
xor
add
ds
push
sbb
and
sbb
popf
mov
push
or
cmp
sbb
adc
jl
dec
cwtl
fsubrp
inc
cld
clc
dec
add
out
subb
pop
andl
and
inc
and
xrelease
pop
icebp
dec
mov
mov
adc
xchg
loope
jns
mov
sti
testb
stc
sbb
mov
pop
movsb
not
repz
fbstp
and
adc
popa
xchg
mov
into
iret
xchg
sahf
daa
push
lods
cs
repz
and
mov
sti
fbstp
xor
adc
mov
adc
out
cltd
push
outsl
cli
mov
scas
sub
adc
mov
add
sahf
ss
cmc
insb
cwtl
inc
aad
aad
repnz
mov
lods
and
lret
xchg
data16
repz
xor
mov
adc
jle
jbe
adc
test
dec
bndstx
es
fnsave
and
aaa
inc
mov
das
mov
daa
pusha
addb
mov
jne
xchg
xchg
out
std
push
xchg
mov
lcall
mov
adc
mov
fisttpl
sbb
mov
es
subb
enter
movsl
mov
fcoml
mov
add
mov
mov
push
cmp
out
mov
xor
jbe
jnp
push
outsl
xor
mov
push
adc
xchg
cld
jg
push
shlb
dec
daa
gs
push
loopne
jbe
pusha
js
shr
xchg
and
cmc
clc
scas
int3
loop
ret
enter
negb
sti
sbb
sub
loope
nop
jle
out
push
test
lock
pop
into
rol
les
out
dec
sbb
pop
push
mov
pop
nop
dec
cmp
insl
sub
outsl
insb
rcrb
mov
push
aad
inc
sbb
outsl
pop
leave
push
insb
jne
ret
pop
dec
jo
into
jo
aad
sbb
pop
mov
loop
lahf
jae
pop
mov
jae
lods
out
jbe
adc
adc
fnstsw
int
pushf
mov
jp
sbb
mov
lock
repz
mov
imul
cmp
cmp
imull
test
lcall
inc
out
cmc
pop
decb
enter
inc
shrb
cltd
mov
sbb
ja
fisubl
daa
jle
mov
in
inc
ljmp
stos
sub
mov
xchg
push
cld
jle
xchg
adc
inc
add
push
fimuls
popf
or
aad
neg
xor
jge
and
das
mov
xchg
jo
jbe
stos
push
cmp
rorb
in
or
stos
mov
adc
fsts
jnp
arpl
pop
cld
xchg
and
fsubr
out
and
aad
dec
lock
push
inc
push
pop
stos
stos
cwtl
adc
in
lods
in
test
into
ret
cmp
inc
add
xchg
scas
clc
clc
call
mov
ljmp
jo
dec
stos
fisttps
rcrb
loop
cmp
mov
push
repnz
call
inc
dec
rolb
jg
xchg
xchg
popf
aaa
scas
xor
adc
lret
mov
sub
and
xchg
mov
out
insl
fsts
leave
cld
cmp
cmp
cmp
mov
lcall
xor
dec
nop
xor
pop
scas
stc
test
inc
dec
in
sbb
imul
aaa
mov
ds
enter
imul
xchg
fistpll
xchg
test
sub
out
lods
inc
inc
or
jg
or
jns
lret
pop
iret
push
icebp
ficomps
movsb
mov
push
pop
insl
addr16
inc
sbb
xor
call
hlt
xor
sub
sbb
je
xchg
inc
inc
fs
and
int
insb
jo
jg
add
cmpsl
add
clc
lock
jmp
sub
add
cli
add
mov
sar
push
pushf
push
push
jge
pop
sbb
xor
sbb
out
inc
mov
xor
cmp
int3
clc
popl
push
enter
gs
mov
fwait
stos
push
and
lret
mov
cli
mov
out
cmpsl
cmp
test
cmc
lcall
pop
pop
mov
lcall
stos
icebp
mov
je
fwait
loop
jnp
xchg
rcrb
sti
fisttps
jle
add
fisubrl
and
cmp
dec
pop
adc
stc
ja
clc
mov
popa
enter
clc
xchg
movsl
lahf
mov
jecxz
lret
testl
adc
cmpsl
jmp
daa
loope
jl
mov
mov
cld
add
jmp
jle
mov
and
adc
mov
adc
hlt
sbb
adc
mov
dec
mov
stc
ret
in
andb
rcr
sub
dec
dec
movsb
xchg
scas
push
mov
dec
inc
jb
dec
lea
test
out
fiadds
xor
sub
push
xchg
push
pop
test
cwtl
xchg
lea
shll
sbb
or
xchg
mov
adc
mov
xchg
in
shlb
cmpsl
icebp
adc
mov
cmp
pop
adc
mov
mov
sbb
iret
jbe
fdivp
inc
mov
jg
outsl
ret
loopne
add
js
sub
and
xchg
pushl
mulb
mov
cmpsl
mov
adc
mov
mov
sub
loop
das
xor
jae
shlb
and
jle
inc
dec
sbb
jmp
shr
add
or
xor
data16
cwtl
cmp
mov
aaa
sbb
mov
pop
ret
mov
mov
cli
xchg
out
jmp
xor
test
mov
mov
xorl
or
jbe
shll
js
fs
aam
repz
sub
mov
cmpsb
out
cmpsl
lahf
repz
and
addr16
cmpsb
jno
sub
mov
xor
jg
cmpsb
sub
stos
sub
xor
or
mov
nop
jge
add
repnz
and
xor
jbe
ljmp
dec
inc
cmpb
pushl
rcrl
sbb
xor
mov
mov
xchg
fists
outsb
pop
dec
mov
ror
divl
les
pop
sub
push
insb
fwait
sbb
lock
jecxz
gs
scas
lret
sub
faddl
hlt
dec
cmp
jecxz
xchg
cmp
clc
push
add
pop
outsl
es
rol
sarl
test
imul
enter
xchg
sub
cmc
fs
dec
call
stos
je
jns
mov
xchg
nop
mov
inc
int3
jle
sbb
insb
test
mov
cmp
cmp
lret
nop
dec
mov
adc
jnp
mov
jne
xchg
scas
pop
mov
mov
mov
xchg
push
shrl
jne
test
jbe
lahf
push
fsubs
pop
sti
ljmp
adc
lds
cmp
ret
xor
dec
dec
dec
mov
and
and
cmpsb
xchg
and
out
ss
push
or
aad
jns
lock
clc
inc
jmp
adc
inc
scas
ret
sbb
das
ret
and
mov
ljmp
jle
jmp
mov
mov
int3
adc
push
jno
pop
faddl
add
pop
cli
leave
add
notl
mov
inc
cwtl
xchg
mov
fwait
pop
and
icebp
bound
test
sarb
arpl
and
jae
scas
push
ja
or
cmc
shll
fistpl
stc
not
lea
mov
movsb
cmp
aam
xchg
shrl
dec
clc
push
inc
mov
pop
push
das
xchg
dec
jb
nop
pop
jmp
leave
push
sahf
mov
sub
push
rcrb
sub
jne
pushf
stc
insb
add
outsl
leave
cmp
nop
rcrb
xchg
mov
sti
pushf
xchg
mov
sahf
mov
repnz
mov
negb
lods
pusha
xchg
mov
rorl
jle
pop
pop
pop
imul
lods
push
pop
dec
pop
xor
addr16
js
xor
imul
push
ret
fwait
outsl
sub
jo
jmp
int3
push
or
jmp
lds
bound
pop
cli
adc
cmc
pushf
test
repz
mov
cmpsb
outsb
xchg
cli
xor
xchg
out
sarb
out
inc
xorb
mov
imul
shlb
xchg
sbb
inc
xlat
outsb
pop
inc
mov
mov
dec
fs
sbb
jl
lret
ret
icebp
rolb
push
outsl
fisttps
push
mov
pop
int
push
cmp
aas
mov
jp
mov
push
movsb
mov
cmp
and
stos
mov
xor
pop
sbb
enter
sub
in
xchg
dec
xchg
mov
sub
add
ss
inc
sub
js
mov
sub
xchg
lock
add
scas
dec
mov
xor
scas
int
jbe
sti
arpl
andl
cmp
and
pop
lcall
fdivr
pop
mov
push
clc
pop
dec
mov
adc
mov
mov
fildll
in
xchg
jle
addr16
inc
ss
push
xor
add
push
rcrl
and
cltd
hlt
xlat
adc
stos
jecxz
pop
jl
stc
xchg
in
fsubr
out
sbb
sti
mov
push
push
js
jecxz
jmp
adc
fildll
rclb
push
jns
loopne
xor
push
push
mov
ja
pusha
arpl
in
xchg
cmp
scas
test
mov
add
or
aam
decb
out
or
push
jo
fistps
xchg
test
rol
and
xor
jb
cmp
es
jmp
jbe
mov
pop
je
or
sbb
mov
lret
lea
or
loope
inc
iret
and
icebp
jo
jge
lods
mov
in
stos
pop
mov
jb
sbb
sarl
xor
loop
mov
xlat
xchg
scas
xchg
test
push
add
mov
loop
jns
jg
mov
outsl
mov
cld
ss
xor
pusha
mov
out
clc
jecxz
lds
mov
and
and
sbb
mov
ret
test
mov
into
sub
ljmp
popf
pop
inc
mov
or
adc
int3
mov
pop
aas
mov
fbld
call
cmc
negb
lea
dec
dec
int3
repz
and
scas
push
lock
xor
imul
and
push
call
leave
jo
push
shr
mov
fcomps
pop
popa
and
leave
or
in
out
inc
jle
popa
sbb
fbld
test
jge
je
xchg
push
cmp
lock
cmpsl
mov
xor
xchg
in
adc
and
int
sbb
push
notb
and
inc
testb
sub
stos
adc
iret
pop
iret
xchg
aam
jae
adc
jae
mov
or
add
xchg
xor
popa
adcb
add
and
fs
sqrtps
icebp
insb
out
and
jge
push
push
cmpsb
xchg
lods
test
rorl
outsl
pop
das
xchg
or
inc
les
daa
add
push
xor
push
pop
cli
mov
imul
mov
cmpsl
mov
mov
insb
adc
mov
inc
into
sbb
and
pushf
inc
dec
pop
jmp
xor
mov
adc
clc
pop
cmp
and
mov
cwtl
lea
push
push
jp
sbbb
inc
xchg
test
fs
or
dec
lods
cmpsl
jl
xchg
aaa
xchg
xor
mov
pop
cld
add
adc
dec
lods
out
jo
mov
iret
jae
sahf
jbe
push
inc
dec
adc
incb
or
or
cmp
lods
in
stos
and
sbb
mov
test
mov
mov
and
repnz
rcrb
push
mov
sbb
xchg
jne
cmp
cltd
test
mov
inc
pop
cwtl
jl
push
mov
adcl
jle
pop
enter
scas
int
sub
rcl
and
and
push
jno
mov
into
mov
nop
mov
mov
cmp
pop
mov
inc
aam
pop
add
mov
dec
inc
fisubrl
add
aam
push
pop
push
mov
movzbl
cli
cmp
ss
pop
or
cmp
in
jge
inc
inc
dec
mov
inc
mov
dec
adc
jb,pt
in
mov
test
mov
sbb
jae
enter
xor
mov
rcr
jae
xor
test
sub
xchg
xor
inc
pop
adc
pop
cs
xchg
stos
faddp
xchg
insb
aad
dec
dec
or
inc
adc
sbb
scas
inc
jg
pop
sbb
push
dec
fcom
sbb
jge
repnz
std
mov
push
psubusw
xor
iret
xor
ret
cmpsb
push
add
in
mov
push
stos
stc
add
push
xor
cs
sub
mov
dec
jmp
repnz
iret
cmp
sbb
and
scas
aas
repz
pop
into
mov
mov
or
jl
hlt
int
push
gs
push
outsb
les
je
enter
loop
loop
pop
jl
adc
ss
leave
fbld
cmpsb
add
insl
mov
mov
xchg
in
sti
xchg
xor
cmp
pop
jne
xchg
and
cmp
gs
popf
in
mov
fcomps
inc
sbb
inc
lock
xor
ret
or
xor
loopne
cmp
roll
pop
xchg
test
sub
inc
les
inc
sbbb
jg
lahf
mov
call
sub
sarl
cmpsl
pushf
or
adc
mov
cmpsb
or
adc
mov
gs
dec
repnz
out
sub
je
mov
dec
mov
xchg
jecxz
icebp
mov
pusha
mov
ja
jno
and
ss
and
cmc
push
xchg
shll
jle
cmp
movsl
sbbb
clc
dec
repnz
mov
xchg
dec
loop
push
mov
sarl
pushf
mov
jne
xchg
pop
jne
lret
arpl
xorb
jecxz
popf
push
mov
cwtl
ret
push
imul
cmp
test
imul
test
sahf
loopne
sub
test
clc
mov
pop
mov
sbb
or
je
xor
jae
dec
inc
mov
test
or
dec
movsl
test
xor
pop
jnp
stc
adc
xchg
sub
bound
testl
test
lods
ret
push
test
out
inc
jb
xor
adc
or
les
jmp
and
lcall
test
jbe
mov
test
popa
push
insl
sub
push
inc
sub
js
cli
push
shlb
mov
js
or
jno
aaa
outsb
xor
pusha
xchg
cmp
xlat
jg
scas
push
test
out
and
mov
push
push
int
sti
mov
inc
test
insl
jmp
jg
ljmp
inc
inc
xor
adc
fisttpl
in
mov
sub
jle
cmp
sbbl
adc
insb
dec
cmp
leave
and
cld
xchg
fists
adc
scas
in
sub
push
and
les
mov
and
mov
mov
imul
inc
scas
jmp
xchg
xchg
push
je
jnp
xor
bound
hlt
pop
cmc
jp
cmpsl
xlat
stc
cld
adc
imul
jbe
scas
lods
shll
push
jmp
push
mov
fstpt
mov
sub
out
cmp
mov
lahf
xchg
mov
adc
dec
insb
adc
fmulp
jae
push
aaa
sub
mov
mov
ret
repnz
stc
cmpsb
ljmp
or
addr16
inc
pop
test
sbb
pusha
xchg
and
dec
fists
xor
push
outsl
xchg
xor
push
clc
int
pop
add
pop
aas
fistpl
scas
bound
adc
xchg
sub
pop
push
mov
pop
call
push
ja
cmc
js
push
mov
xchg
outsb
push
rol
xorl
mov
mov
or
fisttpll
dec
pusha
call
int3
jne
jge
in
ja
lcall
sbb
ljmp
sbb
inc
pop
sbb
inc
mov
mov
sbb
mov
in
adc
in
sarb
pop
or
popf
outsl
fcoml
popa
fdivs
fidivl
movsb
xor
mov
subl
out
insl
and
pop
mov
mov
int
lods
int
and
bound
mov
jne
mov
mov
jno
add
in
jp
mov
lock
mov
leave
xchg
hlt
mov
shlb
dec
call
sbb
add
jns
in
into
les
roll
push
adc
testl
popa
pusha
add
shl
or
hlt
loop
sbb
mov
lahf
scas
jnp
dec
int3
xor
into
movsb
lcall
andb
insl
xchg
repz
div
jae
daa
push
mov
mov
or
jle
and
jae
pop
popa
mov
stos
mov
pop
jmp
push
xchg
sbb
nop
pop
jb
or
or
add
mov
cmpsl
xchg
ret
mov
mov
out
vmovaps
mov
out
pop
scas
push
sti
out
pop
ja
mov
and
xor
mov
loopne
mov
sbb
daa
test
push
mov
add
jecxz
or
cmp
pop
dec
and
enter
mov
xchg
xchg
pop
in
sarl
and
jmp
pop
fcoml
push
loope
sub
jmp
push
pop
or
cmp
inc
rcrl
jp
ja
add
shrd
iret
lcall
movlps
xchg
js
xor
sbb
pop
jae
pop
or
fldt
fcomi
les
loop
movsl
mov
lret
rcr
cmpsl
push
test
pop
add
mov
aam
cld
inc
outsb
in
jnp
dec
cld
lods
mov
push
xor
push
enter
out
outsl
insb
orb
jg
inc
add
dec
mov
xchg
rcll
ret
out
dec
push
movsl
cmp
inc
push
daa
xlat
mov
lret
or
xchg
mov
dec
mov
sub
fistps
daa
ret
test
fmuls
aad
mov
fsubs
popf
cmpsb
ret
sub
subb
dec
mov
jg
push
dec
pop
out
test
int
mov
outsb
mov
jae
pop
sub
mov
insl
js
inc
sbb
xchg
mov
das
aam
ret
push
pop
cld
outsb
jecxz
adcb
sbb
push
rorb
mov
test
arpl
in
xor
xor
daa
and
adc
mov
push
rcll
and
jmp
cld
xchg
pop
add
rcrb
cwtl
adc
out
daa
inc
iret
sub
mov
jg
mov
jecxz
fs
push
outsl
fdivrs
cmp
scas
shll
lcall
std
leave
or
faddp
out
mov
xor
add
jmp
aaa
mov
pop
mov
sub
mov
in
call
cld
cwtl
popf
sub
add
sbb
push
std
xor
mov
or
add
mov
jmp
mov
inc
pop
mov
pusha
or
dec
repz
push
jp
or
orb
jmp
out
add
dec
lahf
or
mov
jae
fwait
repz
jae
loope
bnd
stos
or
loopne
mov
push
pop
loop
cmp
xor
and
push
add
repnz
mov
scas
mov
inc
scas
xchg
iret
push
rclb
push
lods
shll
pop
sub
mov
in
jno
xchg
xlat
gs
xchg
and
inc
or
or
test
mov
jg
shr
sub
dec
jmp
daa
fstpt
push
rcl
popa
xchg
sbb
cli
add
es
jmp
repz
fdivl
insb
rorb
mov
xor
sbb
outsb
addr16
sbb
lcall
xchg
xor
fldl
mov
jae
aas
lea
mov
mulb
ss
insb
push
push
dec
inc
push
inc
int3
in
pop
pop
xor
adc
pop
outsl
mov
ds
mul
pop
push
jle
sbb
mov
or
in
cmpsl
cmp
sub
or
and
xor
in
movsb
pop
sbbb
and
add
imul
xor
jge
iret
push
les
into
jns
testb
stc
mov
mov
mov
je
jge
daa
xchg
jp
je
orb
mov
jne
adc
movsl
add
cmpsb
es
cwtl
daa
xor
cmp
lds
xor
aas
inc
sbb
push
push
xchg
pop
stc
mov
pop
cmp
cltd
xchg
aad
adc
inc
ret
lret
faddl
popa
mov
ret
sbb
out
lret
cmp
add
daa
mov
pop
lods
xor
pushf
dec
xchg
fs
or
push
mov
insl
cmp
cmpsl
aad
and
incb
mov
xchg
es
dec
iret
lock
scas
fwait
xor
cmp
in
mov
or
js
jno
sbb
ret
mov
pop
fistl
pop
int
add
sub
mov
pop
mov
lcall
and
das
pop
push
jge
sub
cmp
jb
movsb
pop
or
adc
jnp
fstl
les
lds
fcomps
push
cmpsl
xchg
xchg
int3
in
jae
rorb
test
mov
xchg
mov
ret
std
inc
xchg
popa
xchg
and
mov
lcall
sub
push
or
pop
mov
mov
outsl
dec
mov
mov
fcoms
test
fbld
mov
or
jle
rcrb
mov
out
mov
dec
mov
in
sub
xor
mov
idivb
push
mov
dec
and
xor
pop
je
jno,pt
adcl
xchg
jp
add
enter
pop
jl
jle
pushf
mov
mov
jmp
rcr
xchg
sub
shl
js
pop
or
cltd
fstl
bound
jl
inc
into
inc
repz
sub
out
shrl
xchg
xchg
or
inc
mov
or
jle
ljmp
push
loopne
fxch
ds
and
ret
je
fs
jmp
xor
sbb
push
rcll
cmp
mov
lret
shll
push
mov
lods
mov
add
pusha
jge
mov
int3
adc
aaa
loop
pushf
gs
dec
mov
mov
sti
subb
daa
in
inc
mov
push
fisubrl
cmp
lret
ja
push
arpl
mov
lods
out
scas
inc
lret
cmp
popl
jg
data16
mov
jno
movsb
push
ljmp
cwtl
mov
mov
jno
cmp
add
lret
movb
adc
jbe
mov
cli
popf
jae
add
adc
fstpt
and
push
lods
or
sbb
dec
call
dec
shll
bound
xchg
cmc
mov
sub
loopne
xor
rclb
roll
popf
test
jp
push
test
pop
mov
jns
mov
sti
imul
imul
jge
test
xor
mov
inc
gs
sub
out
add
adc
fimull
push
bound
in
bound
js
or
popf
adc
shl
jle
cmp
push
sub
mov
in
gs
cmpsb
inc
cmp
sub
lret
xor
sbb
scas
add
aam
mov
mov
inc
mov
hlt
sub
inc
movb
mov
hlt
or
cmp
pop
xchg
add
xchg
jns
pop
push
leave
sub
cltd
adc
movsb
clc
xchg
lea
shrb
cmp
and
inc
repz
and
fbstp
fisttpl
xchg
add
pusha
add
mov
jnp
jle
dec
fwait
mov
cli
sub
aaa
ficoml
cmpsl
iret
add
hlt
pushf
xor
and
je
out
sbbb
push
xchg
mov
insl
sub
js
push
push
data16
dec
mov
cli
and
les
inc
fdiv
cmpsb
inc
or
mov
jne
dec
scas
cmp
jno
adc
movsb
sub
sub
mov
push
mov
push
push
add
or
mov
adc
mov
mov
adc
ds
imul
mov
lahf
jnp
adc
nop
ja
int
adc
mov
nop
pushf
ja
mov
loope
andl
jg
addr16
js
loopne
gs
out
add
lret
adc
fpatan
push
dec
ja
mov
loop
xchg
imul
js
mov
push
dec
mov
cmp
cmp
adc
iret
add
iret
enter
jb
ja
push
mov
sarl
test
jmp
pop
xor
das
notb
ljmp
stos
mov
ret
cmpsb
xchg
cli
sahf
and
pop
fucomi
xor
cmc
inc
lcall
fistl
test
je
pop
out
mov
push
je
jl
dec
popa
imul
inc
shll
outsl
mov
loope
inc
out
jecxz
mov
ja
pop
dec
movsl
xlat
dec
jge
outsl
lea
xchg
jbe
pop
mov
hlt
test
popa
xchg
add
mov
mov
dec
iret
pop
mov
xchg
call
cmp
adc
test
sbb
push
add
push
cmp
mov
and
lds
jle
arpl
pushf
ja
fiaddl
dec
call
jp
push
jno
stos
sub
adc
fmull
ja
scas
push
test
adc
push
xchg
ret
and
add
mov
pop
pushf
jnp
xor
lret
mov
cmpsl
and
cld
pop
mov
icebp
mov
jl
xor
adc
mov
fldl
pop
push
mov
push
arpl
adc
or
push
imul
or
call
push
and
shlb
or
lock
stc
cmc
xchg
xchg
fs
fdivr
hlt
sbb
sarb
inc
jge
insl
adc
sarl
ret
in
adc
dec
imul
fs
add
xchg
add
mov
dec
dec
cmp
dec
out
push
and
mov
sbb
cmpb
lcall
leave
push
adc
clc
sti
packsswb
xchg
sti
push
cvtps2pd
cmpl
jo
push
lea
cmpl
jge
rcll
stos
push
or
mov
sub
add
sti
sahf
sbb
mov
popf
adc
push
and
sub
inc
sbb
sub
out
inc
fiadds
scas
insb
add
inc
push
test
or
ret
inc
lea
mov
dec
pusha
scas
adc
dec
push
enter
icebp
adc
dec
clc
andb
call
or
data16
lcall
repnz
xchg
decl
fcomps
or
sub
movsb
in
shl
xor
addr16
stc
jle
loope
outsl
sarl
xorl
addl
pop
addr16
lods
aam
pop
ja
ds
rcl
pop
call
fdiv
mov
fdivl
dec
icebp
sbb
mov
icebp
add
xorb
fcoms
xchg
pop
xor
dec
mov
xor
loopne
push
inc
sahf
mov
das
ret
jmp
aas
std
mov
loop
out
add
pop
and
mov
bnd
ret
xchg
sub
mov
adc
lds
sub
jp
jo
add
pop
fwait
mov
mov
enter
rol
pop
add
fimuls
mov
scas
in
pop
jmp
ficompl
out
loop
pop
scas
ficomps
jmp
fisttpll
mov
int3
sub
push
lock
insl
or
shl
clc
dec
cld
adc
mov
mov
daa
pop
sub
out
dec
mov
lcall
mov
ljmp
dec
inc
arpl
lods
cmp
lock
lds
jg
dec
dec
mov
fsubrl
filds
pop
outsl
aas
cmp
dec
enter
mov
push
mov
dec
leave
and
mov
std
loopne
mov
jg
addl
or
ror
nop
mov
das
mov
push
and
mov
dec
cmc
iret
outsl
test
sbb
stos
sub
pop
jp
data16
ss
js
sahf
lret
test
and
std
pop
and
mov
push
addr16
fsubrl
pop
xchg
imul
mov
pushf
pop
sub
push
lock
cmpsl
lcall
pusha
inc
test
or
sarl
sub
mov
mov
sbb
mov
fwait
and
stc
daa
shlb
adc
loopne
enter
imul
call
push
stos
cwtl
xchg
fxch
cmp
adc
pop
mov
data16
mov
in
sub
loopne
mov
inc
sub
fnstsw
or
fidivl
imul
je
jmp
cmc
bnd
pushl
and
aad
xchg
jmp
pop
leave
xchg
xor
jp
movsb
in
dec
and
int
roll
dec
mov
pop
dec
pop
dec
add
ja
xor
loop
push
push
lahf
repnz
into
filds
in
dec
mov
rorb
leave
nop
mov
out
mov
mov
in
sbb
bndldx
arpl
pop
out
in
sbb
xor
cmp
fistps
mov
or
push
add
in
cmp
lahf
in
addr16
shl
arpl
iret
dec
popa
push
mov
add
mov
sbb
out
push
addr16
out
enter
popf
adc
cmp
out
lods
into
jns
xorb
cmp
out
popa
mov
mov
jo
adc
movsb
ljmp
insl
push
fdivl
incb
adc
adc
imul
fcmovnu
xor
shrl
inc
and
xor
adcb
arpl
push
iret
clc
in
add
cmpsb
xor
lret
faddl
and
divl
aad
icebp
jo
cwtl
adc
push
cs
dec
test
ret
jo
pop
mov
add
lcall
out
andl
lcall
ret
jbe
pop
sub
js
imul
mov
cmp
mov
rolb
pop
push
xchg
mov
lcall
das
repnz
and
and
sbb
fbstp
in
xor
pushf
jnp
mov
push
mov
lahf
xchg
pop
xchg
mov
adc
pusha
sbb
lods
ret
and
cmp
lret
mov
jne
sub
sbb
jae
and
adc
mov
dec
adc
push
push
dec
pop
mov
cmp
repz
movsb
in
push
int
adc
stos
cmp
inc
rorl
push
adc
xlat
loopne
psrlq
ucomiss
cmp
stc
jb
test
or
aad
mov
inc
adc
ret
jns
sub
andl
add
xor
xchg
mov
jmp
inc
cmp
dec
les
inc
sub
sbb
mov
sbb
aad
and
neg
inc
je
ljmp
in
mov
imulb
pop
mov
mov
mov
jp
scas
pusha
xor
fcomps
sbb
push
mov
or
movl
lock
mov
push
push
insl
ror
out
cmp
fimull
mov
pop
adc
out
ja
jmp
in
sbb
mov
dec
ret
repz
test
sbb
mov
lds
lods
mov
mov
lods
add
push
cmp
in
das
fistpll
scas
rorb
enter
cmp
nop
dec
jae
ja
cmp
xor
adc
pop
dec
ret
push
xchg
or
std
pop
lods
cmp
fiaddl
bound
or
test
hlt
cmc
cmp
mov
xor
sahf
adc
push
pop
dec
and
inc
mov
jns
and
ja
add
rcll
mov
arpl
sbbb
adc
stos
sbb
xchg
movsb
popa
xchg
jne
and
push
js
push
jecxz
scas
sub
shll
bound
pop
shrb
mov
std
xchg
je,pn
push
test
sbb
and
xor
mov
movsl
push
pop
sbb
cmp
sbb
js
mov
outsl
test
insb
jl
mov
mov
test
test
shll
jno
add
jp
sbb
lods
iret
fidivrs
push
dec
xchg
sub
in
ficompl
xchg
aaa
test
adc
or
or
outsl
jecxz
test
arpl
adc
mov
pop
cltd
lea
inc
int3
mov
dec
lods
push
cmpsb
mov
les
mov
xchg
mov
dec
xchg
in
push
inc
mov
lea
clc
clc
stc
push
push
aad
jmp
xchg
fcomps
scas
mov
mov
js
enter
sarl
dec
pminsw
fiaddl
and
sub
scas
outsl
add
out
lret
daa
cmp
jge
movsb
inc
mov
dec
daa
xor
insb
mov
std
aad
pushl
mov
mov
out
in
out
xor
fisttpll
nop
clc
gs
mov
mov
mov
and
pusha
lret
ret
dec
daa
or
leave
test
pop
add
add
dec
hlt
xchg
xor
mov
sbb
pop
cwtl
push
sub
mov
pop
filds
mov
call
mov
sbbb
adc
add
pusha
loopne
mov
es
jmp
orl
cmpsl
jg
roll
xchg
inc
jno
mov
push
push
mov
ss
mov
mov
popa
mov
andl
sbb
ss
aad
push
or
xchg
cltd
dec
jo
test
fdivrl
adc
or
lods
mov
cld
inc
call
movsl
mov
addl
pmulhuw
jb
pop
mov
vmovdqa
subb
scas
sahf
aam
xchg
jg
ror
dec
lods
cltd
mov
fiaddl
outsb
iret
pop
jmp
mov
ss
pop
push
ja
adc
test
sbb
inc
xor
push
ds
jnp
xor
mov
inc
ss
sub
pop
sbb
mov
dec
clc
adc
sbb
loop
movsl
pop
or
mov
das
pushf
push
in
jno
insl
mov
enter
xchg
adc
mov
inc
cmp
sbb
push
pop
push
repnz
jb
sbb
sbb
sub
sub
cli
movsl
sbb
cmp
popa
mov
movsl
insb
enter
mov
and
or
out
stos
adc
mov
orl
lods
jnp
lods
jle
jae
jp
fldt
mov
mov
loope
xor
pop
insl
or
mov
icebp
iret
scas
pop
cltd
or
popa
loop
aas
cmp
sub
or
mov
mov
dec
in
mov
fwait
and
insb
pop
into
xor
add
cwtl
fnstcw
add
nop
push
movsl
popl
pop
imulb
leave
hlt
shrl
pop
cmp
pop
aad
jo
jno
gs
leave
and
test
lea
test
int
xchg
imul
xchg
mov
adc
jmp
push
out
pop
xor
add
jmp
pop
fdivl
leave
mov
icebp
aam
icebp
fldl
sbb
xor
lods
cs
inc
aad
inc
sub
pop
pop
pop
push
adc
mov
push
inc
out
xor
xchg
add
das
ret
pop
mov
mov
push
scas
xor
shr
add
lret
cmpb
xchg
mov
mov
mov
jge
repz
pusha
movsb
cmpl
pop
popa
mov
loopne
lcall
addr16
roll
add
cld
mov
cs
fdivrs
xchg
mov
imul
xchg
aas
dec
stos
loop
sahf
fwait
inc
jmp
xor
in
mov
pop
cmp
rcll
pusha
inc
fnstsw
inc
cmpsb
xor
aas
stc
inc
mov
repz
xchg
insb
lahf
shrl
out
mov
xor
rcrl
pop
pop
sbb
and
orb
push
or
test
mov
loopne
mov
sbb
adc
fistpl
lea
mov
fadd
cmp
xchg
gs
imul
jle
popf
outsb
enter
jge
ja
and
jo
jne
mov
pop
rcrl
mov
or
add
mov
dec
mov
jns
sbb
xor
mov
mov
addr16
pushf
sub
cli
mov
xlat
sub
sub
pop
push
ficoml
xchg
xchg
jne
test
inc
popf
mov
mov
pop
xchg
cmovp
in
aam
sub
test
xchg
movsb
lock
inc
sub
fbld
lcall
lea
mov
mov
jae
imul
ficomps
scas
or
cmp
stc
fildll
scas
push
jge
sahf
mov
sbb
xlat
sbb
lods
pusha
je
fwait
push
inc
pop
pusha
in
pop
ds
out
inc
xchg
mov
movsb
nop
xchg
test
int3
jnp
and
lods
daa
or
jns
adc
sarl
fdivrs
mov
sub
in
stc
and
pop
push
andb
xor
cltd
lahf
add
xchg
push
sub
gs
rcrl
sbb
mov
sub
jnp
inc
mov
addl
xlat
out
lods
sub
push
jae
scas
adc
les
cmp
xor
mov
shl
scas
ljmp
fstps
test
inc
xchg
les
lods
mov
cmpsl
jae
fs
test
jb
repnz
in
push
inc
out
xor
fldt
mov
dec
fucomp
inc
sbb
ds
mov
call
mov
je
push
adc
fsubs
sbb
js
test
je
pop
into
orb
push
adc
xor
fdivs
movsl
scas
rolb
out
movsl
stc
test
mov
iret
xchg
mov
mov
dec
jbe
pop
xor
fsubs
cmp
pusha
mov
lods
mov
jge
gs
outsl
test
aas
mov
cmpsb
adcb
sbb
add
mov
cmp
shlb
sub
repz
aam
xchg
sbb
movb
mov
jl
and
xor
into
mov
adc
ja
sbb
lods
rep
lock
mov
std
repz
jbe
or
in
push
in
mov
dec
mov
pop
cmp
js
xchg
imul
ret
js
lret
mov
mov
idivb
mov
dec
int
cmp
lods
pop
push
enter
out
or
icebp
testl
fucom
cmp
ret
icebp
arpl
mov
and
cmp
add
push
lods
and
sbbl
test
arpl
push
xor
pop
aaa
sub
leave
movsl
push
dec
outsl
dec
xchg
pop
sahf
stos
inc
adc
movsl
mov
fistpl
dec
lret
out
pushf
inc
cwtl
insb
loop
scas
sti
cmove
inc
scas
leave
jp
pop
jns
mov
xor
mov
push
in
cmp
out
xor
cmp
jbe
inc
dec
test
arpl
mov
xchg
fwait
test
inc
dec
push
push
dec
dec
rcr
icebp
out
test
icebp
xor
jp
int3
dec
icebp
cld
bound
aam
stos
xchg
sub
xor
pop
stos
cwtl
inc
test
xchg
lds
arpl
in
mov
inc
or
adc
jp
arpl
aam
or
push
jl
fidivs
or
sbb
dec
adc
fsubr
push
fisttpll
dec
dec
xor
lea
sub
cli
in
ret
gs
lahf
mov
sub
add
and
iret
rolb
jecxz
in
mov
sbb
ret
mov
adc
int
jns
jg
mov
push
cli
clc
dec
xchg
jnp
add
inc
sbb
enter
add
lds
outsl
or
xchg
jne
rcr
jl
sub
and
jmp
fdivrs
bound
xchg
or
lock
xchg
adc
adc
lds
pop
ret
repnz
mov
pop
hlt
adc
loop
into
popa
push
cmp
and
das
into
ss
xchg
fwait
ret
jp
inc
imul
movsb
sti
mov
sbb
cmpsl
jl
xor
adc
test
inc
iret
imul
mov
gs
out
xor
loopne
outsl
fdivrp
lock
push
jb
xchg
into
fbld
subb
pushf
aad
inc
insb
movsl
pop
outsl
push
mov
sub
xchg
or
mov
mov
incb
lock
aaa
enter
sahf
jmp
sub
xor
adc
mov
insb
sbb
add
cmpsb
loopne
mov
and
push
jge
cmc
fstpl
mov
push
adc
int
cmc
xor
adc
mov
jge
mov
add
clc
xchg
sahf
inc
mov
xor
insl
rorl
xor
mov
fdivr
xchg
push
out
stc
scas
xchg
jg
aaa
and
adc
int3
lcall
and
xchg
sbb
inc
cwtl
sub
aas
hlt
mov
push
cli
lock
test
xor
aas
adc
add
ret
aas
pop
dec
xorb
inc
xchg
loopne
in
movsl
stc
mov
jecxz
adc
test
dec
nop
cwtl
xchg
cmp
jns
or
cmp
adc
stos
roll
or
addl
outsb
pop
jp
ror
icebp
sub
sub
mov
inc
repnz
mov
pushf
push
sub
inc
or
pop
jge
xchg
notl
jg
mov
xor
sbb
xchg
jl
push
dec
test
dec
push
shrl
scas
lds
out
or
sbb
icebp
roll
bound
ret
mov
adc
iret
adc
sbb
xor
adc
dec
dec
xor
repz
jae
lahf
aam
pop
sub
out
movsb
cmpsl
jle
movsl
icebp
xor
js
sti
pop
sbb
push
inc
js
add
loopne
push
loopne
je
std
and
mov
mov
xor
gs
adc
sbb
xchg
xchg
dec
cmp
cld
loope
push
xor
pop
push
es
or
gs
and
insl
fdivrs
cmp
mov
cmc
pop
loope
popf
push
addr16
ljmp
add
cli
stos
mov
mulps
xor
adc
fistpll
cld
out
add
xlat
out
xchg
addr16
jmp
lret
repz
mov
in
pop
cli
mov
rorb
push
xlat
sub
xor
fwait
cmp
sbbb
sbb
pop
pop
in
xor
inc
mov
inc
lahf
jle
add
mov
bound
outsb
outsl
fwait
sti
fcompl
dec
and
jge
adc
in
push
pop
testl
xor
aad
pusha
xor
clc
mov
or
je
ret
mov
fnstsw
and
in
xchg
push
pop
fisubrl
pushf
sbb
or
mov
fsubrs
push
push
fistpl
lahf
cmc
sbb
out
imul
scas
fnsave
mulb
cmp
idivb
mov
xchg
and
dec
jne
outsl
fisubl
mov
mov
mov
jmp
pop
xchg
scas
leave
pop
aaa
test
or
mov
mov
add
imul
imul
jge
mov
rolb
xlat
and
inc
addr16
pushf
clc
push
mov
std
fistps
scas
into
loope
sbb
jo
stos
mov
cltd
popf
js
ficompl
inc
xchg
sbb
loope
mov
stos
jnp
ss
stos
inc
sbb
push
data16
popa
xor
mov
push
pop
rcl
stc
cmp
jg
jo
fcoms
add
fdivrl
xor
cmpb
adc
addb
add
sub
stos
hlt
jl
ja
icebp
roll
adc
sub
mov
sub
in
and
add
adc
push
icebp
or
iret
shrb
sbb
loop
xor
test
inc
push
iret
out
inc
push
lds
out
xchg
repnz
jge
pmaxsw
sahf
xchg
dec
push
jb
jg
push
adc
popa
sub
push
cmc
sbb
movsl
test
dec
xor
lcall
xor
out
jl
jge
or
jle
pop
daa
cltd
mov
fnsave
mov
pushf
mov
mov
sbb
lcall
xchg
test
hlt
jl
pop
jne
dec
sub
scas
adc
xor
mov
or
or
cmp
sti
ja
daa
out
dec
scas
jb
jecxz
xchg
mov
ljmp
das
pop
test
dec
push
or
popa
jae
cmp
and
das
and
out
inc
mov
pop
insb
sahf
sbb
dec
lcall
out
into
popf
testb
std
add
adc
or
dec
sti
jno
rolb
stos
sbbl
outsb
dec
aas
inc
stos
icebp
movsl
aaa
ss
das
inc
dec
add
add
stc
mov
adc
cmp
cmp
dec
das
sub
push
stc
adc
dec
test
and
in
sub
insb
wbinvd
fmuls
mov
mov
cmp
and
push
push
or
mov
jecxz
jecxz
pop
bound
push
jo
sbb
dec
out
or
out
jns
xor
xor
adcb
add
fsts
pop
and
fcomp
xor
dec
adc
mov
jbe
and
enter
and
in
std
addb
xchg
stc
jbe
jmp
sbb
scas
gs
cltd
add
movsb
stos
rol
mov
add
xlat
cwtl
add
pop
pop
enter
nop
and
adc
into
std
sub
fs
pop
xor
roll
sysexit
rorb
pop
enter
mov
xchg
jg
sbb
jg
dec
xchg
add
iret
cmp
pop
pop
adc
jp
xor
repz
adc
lahf
movlhps
adc
adc
out
jae
ret
jno
inc
jbe
fdivrs
sub
sub
push
rclb
mov
aas
fisubrl
scas
mov
rcrb
out
stos
mov
out
nop
sub
cld
adc
mov
push
mov
inc
dec
dec
dec
std
jmp
push
fdivl
ret
pop
inc
cmp
jge
mov
cmp
enter
jb
test
inc
jge
mov
and
sbbb
sbb
imul
mov
out
jle
jnp
cs
fldt
stos
lock
jmp
cmc
stc
adc
and
pop
lret
sahf
test
pop
or
test
cmpsb
cmp
fstpl
movsb
dec
sarl
lods
add
jmp
dec
out
xor
sbb
cmp
out
push
sti
fs
sub
lcall
ja
push
sub
or
xchg
mov
out
test
ljmp
or
xchg
pop
and
mov
jl
test
dec
pop
or
lret
std
imul
sub
or
mov
add
lret
movsl
sbb
enter
lahf
div
adc
push
scas
fsub
dec
lcall
sbb
jle
fmulp
pop
push
inc
mov
pop
jmp
leave
or
addr16
pop
and
cmpl
or
mov
sbb
or
sub
cmp
or
add
xor
das
lods
push
and
test
enter
xchg
stc
jnp
and
lea
mov
pop
fwait
stc
lret
dec
dec
sub
mov
imul
mov
cmp
in
mov
inc
movsl
or
mov
shl
xchg
pop
out
movb
roll
clc
shlb
jns
mov
out
mov
lods
mov
inc
out
mov
mull
mov
stos
int
clc
rclb
sbb
add
adc
stc
cltd
iret
cmc
sub
xor
sbb
xchg
mov
lock
ljmp
clc
push
shll
ret
push
sub
fisubl
push
dec
loope
in
das
iret
repnz
pop
das
sti
xor
adc
dec
lods
jns
test
or
data16
xchg
js
test
in
dec
cmpb
lods
xor
xlat
fidivl
sbb
xorl
or
lock
rcrb
sbb
es
shl
inc
jo
pop
gs
frstor
stos
addl
sub
xlat
aas
push
jae
xor
leave
xlat
ja
mov
addr16
shrb
enter
pop
lahf
inc
int3
xchg
pop
or
and
clc
in
cmp
aaa
fmuls
add
scas
and
sbb
xchg
int3
adc
nop
push
jns
push
adc
mov
out
dec
mov
icebp
adc
xchg
mov
or
into
sbb
jae
test
fcmovnb
lret
ret
and
pop
dec
sub
mov
arpl
and
sub
jp
push
in
jno
loop
sbb
xchg
cmp
into
test
insb
cmp
xchg
inc
cmp
scas
pop
mov
mov
mov
cmp
movsb
xor
insb
pop
and
outsb
adc
mov
or
ja
imulb
insb
jmp
pop
ja
adc
out
cmc
xor
xor
shlb
clc
push
stos
mov
dec
inc
jmp
jmp
dec
ss
pop
adc
dec
xor
out
xchg
clc
lds
or
dec
xchg
add
aam
data16
repz
xchg
rcl
cmpsb
roll
add
leave
leave
push
push
mov
out
mov
idiv
faddl
stos
pop
insb
xor
mov
and
clc
pop
dec
dec
insl
mov
mov
div
xor
in
lock
outsb
ljmp
cmc
pop
cmc
inc
ljmp
xorl
or
test
push
sbb
inc
cmp
mov
shlb
iret
movsb
xchg
fistpll
in
inc
dec
sahf
insb
ficompl
dec
aam
iret
int3
stos
or
sub
popf
scas
mov
sub
sbb
or
push
and
aas
rcrl
dec
xchg
sbb
add
jno
mov
pop
xor
sbb
mov
lock
mov
jo
test
mov
cmp
xor
push
lods
jmp
xor
sbb
bound
cli
push
out
xchg
jns
pop
hlt
int3
push
enter
sub
add
inc
inc
fistpll
jl
repnz
adc
in
test
push
cmp
cmc
mov
rorb
lods
adc
arpl
lcall
cmpsb
call
pop
fistpl
nop
fnstsw
sti
out
pop
jbe
out
add
xchg
std
iret
orb
and
dec
mov
std
lret
rcll
andb
inc
jnp
stc
inc
sti
fnstenv
fsts
push
sub
js
lret
outsb
push
xor
xchg
test
adc
cli
ss
js
cwtl
hlt
push
xor
mov
cld
mov
nop
xchg
fdivrl
sbb
cmp
push
xchg
push
add
xor
inc
jbe
jecxz
or
popf
mov
enter
add
aaa
pop
out
adc
cmc
push
xchg
out
bound
pop
jge
mov
stos
fcmove
mov
mov
xchg
xor
lds
add
sub
mov
popa
mov
test
push
dec
das
packsswb
fs
xchg
ret
imul
add
xchg
loop
mov
dec
push
fistl
sti
movsl
or
adc
mov
pop
out
add
sbb
push
sahf
test
adc
iret
shlb
jge
xchg
xor
and
add
jp
dec
loope
lock
divl
push
pop
int3
jbe
dec
aam
mov
inc
push
xor
nop
addl
xor
sbb
mov
fmull
xor
hlt
mov
fsubs
xchg
jnp
push
fwait
addl
jae
dec
mov
out
adc
movsl
scas
call
jnp
jno
mov
pop
out
pop
jns
dec
xchg
adc
ret
xchg
cld
dec
push
je
xor
fisttps
imul
mov
sbb
lock
pop
mov
jge
fcmovnu
scas
cmp
inc
ret
or
ja
dec
dec
xor
mov
jle
push
cmp
xchg
fistpl
int
inc
add
aas
or
bound
mov
flds
gs
cmc
adc
scas
dec
xchg
pop
mov
push
leave
cwtl
push
int3
test
xor
sbb
repz
push
lea
mov
sbb
mov
jmp
fnstsw
rcrl
push
xchg
xor
repnz
mov
pop
frstor
sbb
orb
dec
in
das
aad
cltd
cmpsb
test
shl
mov
cmp
push
outsl
out
stc
fisttpl
lods
dec
das
out
push
sbbl
lahf
mov
push
xor
and
lea
or
sub
rcr
xor
cltd
ret
sbb
pop
mov
mov
push
or
push
sbb
push
mov
sub
pop
cwtl
aad
adc
movsb
sub
push
push
inc
mov
repz
jne
or
stos
inc
loopne
mov
inc
fstl
cltd
negl
cmp
imulw
data16
pop
and
icebp
and
pop
imul
jno
add
and
icebp
cmp
clc
cmp
jns
push
mov
mov
je
inc
stc
out
cwtl
cli
jge
add
test
cmp
mov
sub
xor
hlt
hlt
mov
xchg
mov
out
fincstp
cmpl
add
xchg
xchg
aaa
inc
push
cmp
leave
inc
jb
xchg
xchg
loop
popa
or
call
mov
lods
mov
add
lea
mov
aas
ss
iret
imul
cwtl
mov
sbbl
push
cwtl
mov
mov
je
in
add
xchg
push
push
or
jp
aad
movsl
adc
hlt
loopne
sbb
scas
pop
xor
push
cmpsl
jae
repnz
pop
or
out
pop
sahf
jnp
sub
add
enter
inc
inc
push
mov
cmp
fisubs
aas
std
std
xchg
out
and
cmc
leave
dec
add
shl
popa
and
jb
ret
add
sub
lea
imulb
rcll
inc
stc
dec
jae
mov
sbb
mov
sbb
das
mov
movsb
or
inc
sbb
mov
stos
lock
ret
in
xchg
add
pushf
push
fimuls
movsb
adc
push
jnp
cld
jp
mov
incl
sub
and
out
jmp
and
adc
sbb
push
sub
jge
mov
dec
out
adc
in
dec
push
cmp
inc
out
xor
addb
add
cli
test
push
push
fs
movsl
cmpsb
sbb
add
xchg
rclb
cmp
xor
adc
cmp
popa
mov
aad
xor
inc
mov
icebp
notl
jno
sbb
aam
mov
scas
pop
aam
icebp
movsl
cli
xchg
pop
call
divl
xchg
add
jnp
psubd
aad
shll
movsb
lods
push
out
shll
lods
mov
inc
loope
cmp
incb
clc
addl
jp
and
ficompl
mov
cmp
movsb
movhps
mov
pusha
test
cmp
pop
out
movsb
jl
or
addr16
mov
push
pop
iret
fisttpll
lds
andb
xchg
and
or
mov
mov
in
xchg
inc
jecxz
and
adc
mov
mov
sub
rcl
add
mov
mov
mov
xchg
insb
repz
shrb
and
jg
inc
mov
jb
fcomp
and
push
mov
mov
sbb
icebp
add
add
pop
in
scas
lret
ficomps
mov
jmp
cltd
mov
je
lcall
icebp
pop
mov
pop
in
cmc
stos
enter
dec
jl
mov
pop
jge
out
mov
popa
pop
xchg
test
fldt
daa
test
iret
cltd
in
test
jns
xor
add
jp
adc
inc
inc
jae
xchg
cmp
popa
jno
pop
mov
cli
iret
pushf
sahf
repnz
jnp
pop
jmp
push
pop
loopne
jecxz
call
push
arpl
push
pop
ja
movsb
or
push
cltd
fbstp
sub
push
add
movsb
jne
xchg
sub
add
xchg
jmp
mov
iret
xchg
and
popa
dec
mov
movsb
fistpl
sbb
jae
ss
lret
inc
jo
add
cmpb
mov
sbb
mov
xor
sahf
mov
out
cmc
xchg
cmp
sahf
dec
fdivl
add
ret
and
dec
gs
sub
push
ret
push
mov
arpl
dec
icebp
cs
sbb
xorl
or
call
adc
in
cmp
jg
cmp
push
cli
ja
mov
and
jae
lea
jne
repz
xchg
icebp
fwait
jne
imul
nop
xchg
add
rorb
movsl
lahf
dec
mov
jnp
xchg
icebp
call
add
loope
lahf
xor
rcll
addb
test
add
cwtl
hlt
add
in
mov
push
sbb
test
mov
rcr
add
fdivs
cmp
xor
mov
dec
push
push
in
cmp
out
xchg
outsb
sub
dec
mov
stc
hlt
jle
notb
sub
leave
insb
add
jle
shlb
and
lret
adc
sahf
cmpl
cs
or
lcall
inc
test
test
fdivrs
xor
jg
or
std
hlt
shl
les
xchg
jle
negl
push
jb
shrl
test
pop
sbb
divl
mov
pop
xor
stc
pop
cwtl
sti
push
jb
fmuls
outsl
and
mov
mov
add
xchg
repnz
and
pop
cmp
mov
sarb
xchg
mov
add
inc
ret
xor
cmp
pop
xor
mov
sbb
push
xchg
ds
or
into
repnz
xchg
imul
inc
loope
jmp
mov
xor
dec
push
cmp
xchg
mov
es
dec
rorl
cmc
dec
mov
bound
int3
cmp
jbe
popf
addb
adc
dec
pop
push
pop
xchg
cmp
popa
loop
dec
shlb
imul
and
mov
inc
scas
jle
mov
test
bound
jmp
into
fistps
movsb
fdivrl
xor
negl
cs
imul
ss
xor
jg
jne
add
pop
shll
and
stc
or
lea
pushf
sahf
fistpll
pop
aas
in
lods
push
fwait
inc
pop
mov
and
daa
cwtl
stc
xchg
push
mov
shrl
lods
xchg
mov
pop
imul
add
jle
popf
pop
mov
aad
loope
dec
xlat
es
jo
mov
repz
cs
add
lods
jns
test
pop
imul
lods
test
sahf
stc
xor
fisubs
lcall
jg
xor
mov
pop
pop
je
addr16
jns
loope
aam
add
fs
mov
pusha
mov
push
adc
sysret
incb
push
push
loope
dec
jp
push
sbb
jecxz
dec
dec
icebp
xchg
out
maxps
jl
fnstcw
xor
push
inc
leave
push
testl
adc
sbb
sbb
pop
mov
adcl
inc
insl
push
mov
xchg
lds
jge
add
add
add
scas
cmp
popa
pushf
jge
mov
imul
clc
xchg
je
jno
add
jg
je
int
xchg
loopne
jecxz
add
in
mov
mov
fs
negb
addps
mov
xor
mov
xchg
pop
aad
js
dec
jno
fildll
jno
rol
std
pop
mov
loop
ja
sub
maxps
sbb
and
pushf
xor
lea
scas
mov
dec
push
xchg
xchg
push
imul
jecxz
subb
ljmp
mov
pop
lahf
and
cmpl
cmp
jno
cld
movsb
mov
jo
bound
push
xchg
dec
sub
ja
and
pop
sub
test
jno
jmp
es
and
out
icebp
inc
mov
std
ljmp
mov
and
movsl
and
cmpsb
dec
xor
shrl
loope
out
mov
in
imul
cwtl
sbb
popf
pop
out
aad
std
lahf
sbb
mov
addb
mov
aas
sbb
push
sbb
gs
mov
cld
jno
pop
lret
shrb
aaa
jne
cs
sahf
mov
fs
pop
xor
xor
sti
push
fwait
sti
push
shll
imulb
ror
mov
dec
stos
jmp
inc
outsb
inc
ds
sbb
std
es
mov
push
stos
scas
rcrl
mov
popa
loope
scas
ja
int
hlt
fldl
stos
cmp
pop
mov
ja
jp
xchg
cmp
iret
lds
inc
xor
call
int
clc
out
pushf
pop
cmpsb
lods
cmp
call
xor
leave
ljmp
jbe
arpl
and
add
pop
mov
ljmp
adc
aaa
mov
xchg
xor
aas
mov
mov
and
fisubs
push
adc
sub
fldt
inc
call
push
cmp
stc
aaa
arpl
hlt
jmp
mov
sarl
das
jle
es
xchg
iret
lret
into
or
in
sbb
cs
push
push
pusha
scas
je
add
div
pop
jb
jecxz
push
rcrl
mov
mov
xchg
shlb
mov
into
adcl
adc
sahf
inc
push
push
adc
ret
aam
cli
in
jb
xchg
or
mov
and
mov
push
sub
inc
pop
xchg
pop
sbb
cmp
sbb
mov
scas
gs
cs
int
and
push
push
loop
adc
jmp
mov
in
pushl
cmpsl
ss
mov
outsl
adc
adc
xchg
mov
xor
cmpsl
dec
dec
icebp
popf
fadd
mov
pop
faddl
mov
pop
and
shll
mov
push
jae
bound
cmp
add
cwtl
fnstcw
push
sub
xchg
loopne
push
mov
push
leave
out
and
fwait
es
ja
pop
clc
mov
cmc
or
out
jnp
andl
push
mov
movsb
sar
dec
addr16
push
jae
adc
add
int
leavew
insl
clc
push
fisttps
and
xor
ja
arpl
test
cmp
mov
decb
adc
push
push
arpl
add
or
mov
aaa
inc
aam
cmp
stc
mov
cmp
fdivrl
rdpmc
mov
mov
sti
fisttps
call
xchg
cmp
fcmovu
jb
mov
icebp
jmp
mov
xor
jbe
mov
dec
rorl
mov
jb
inc
push
jnp
in
jae
int
pushf
fisubl
adc
cmpsl
icebp
adc
out
cmp
cmp
gs
mov
push
ljmp
sub
jmp
dec
rclb
dec
add
cmpsb
rcr
xchg
fxsave
jmp
add
lock
push
pop
lock
adc
cmp
inc
add
cmp
imul
sub
call
out
test
xor
xor
ja
icebp
ficompl
outsl
add
sahf
cmpsl
rcrb
jle
dec
dec
es
dec
push
mov
insl
mov
lahf
cmpsb
mov
cld
outsl
pop
push
movsb
mov
ljmp
ret
or
out
push
cmp
loope
jno
shlb
mov
jecxz
adcb
and
ja
pop
mov
repnz
mov
push
push
xor
sub
inc
fistpll
test
xor
sti
lock
addr16
arpl
mov
gs
xchg
push
rol
or
sbb
mov
jl
int
sbb
out
das
push
scas
bound
cmp
lcall
rcrl
adc
ret
loop
jbe
fwait
pop
stos
adc
stos
inc
ret
xor
loopne
outsb
out
sbb
mov
push
push
pusha
cltd
mov
push
mov
arpl
in
ss
jmp
push
dec
adc
pusha
mov
jecxz
leave
jge
int3
add
decl
jnp
sub
xor
sahf
mov
imul
mov
das
pop
pop
rcrl
xor
sarb
cmpsb
xor
dec
dec
xlat
sarl
mov
fbld
jo
mov
es
sub
fwait
xchg
imul
or
js
push
inc
push
mov
xor
jne
enter
sbb
jnp
mov
fld
lds
xchg
pop
mov
imul
push
mov
outsb
lret
pop
xor
gs
loope
popf
clc
add
mov
roll
sbb
sbb
sbb
sbb
or
xchg
movsl
outsl
push
ss
inc
stc
lea
cmp
jo
mov
jns
mov
sti
lahf
dec
mov
push
shlb
jbe
mov
movsl
push
mov
dec
aas
mov
lods
pop
mov
adc
aad
push
adc
mov
lea
ja
nop
outsl
sbb
xor
fwait
mov
and
xchg
push
fildll
test
mov
lods
repnz
test
mov
pop
cwtl
out
and
jne
pop
dec
push
inc
addr16
sbb
decl
and
xor
sbb
pop
sarb
ss
lock
cmp
adc
mov
jg
dec
push
xchg
hlt
decb
mov
cmp
sarb
rcll
or
repz
imul
sbb
inc
or
add
cltd
xor
lret
or
jne
cwtl
lret
mov
push
jnp
orl
adc
sub
adc
rcrb
mov
ret
push
dec
cmp
fxch
mov
add
fimuls
mov
fnstsw
dec
scas
loopne
inc
mov
add
and
inc
sbb
jmp
xchg
iret
mov
xchg
aaa
jg
idivb
pop
inc
inc
mov
loop
dec
pop
add
xchg
xchg
arpl
mov
dec
add
push
mov
shrb
xor
lret
int
dec
rcl
in
aad
inc
pop
out
xchg
pop
and
push
mov
pop
jecxz
mov
and
adcb
cmpsl
lock
out
xadd
jg
mov
sub
pop
test
aaa
test
insl
loopne
lds
test
push
insb
cmp
sbb
push
push
jmp
or
outsb
js
sub
pusha
nop
leave
aad
lahf
int3
dec
cmc
scas
adc
les
and
ljmp
and
add
jne
mov
jo
inc
mov
cli
adc
jnp
cmp
loopne
and
dec
mov
lret
or
cmp
adc
call
pusha
adc
stos
pop
stos
add
or
sti
xchg
dec
pop
int3
sbbb
ja
jae
xlat
sbb
xchg
movsb
or
imul
test
push
mov
inc
sub
sub
test
shrl
out
scas
in
xor
mov
push
mov
test
cld
orb
ljmp
idivb
fidivl
adcl
loop
pop
dec
stos
pop
test
sbb
sbb
jb
jmp
mov
gs
jg
cli
ljmp
inc
pop
dec
das
lock
mov
jp
jecxz
hlt
jge
mov
in
and
stc
adc
popf
mov
scas
shll
pop
jne
adc
rol
divl
test
inc
frstor
addl
test
mov
rcrl
outsl
inc
insb
dec
pop
fstpt
push
in
sub
xor
nop
in
mov
xchg
jle
fidivs
addl
cmpsl
pop
mov
das
jp
jo
dec
aas
add
iret
dec
mov
jns
push
test
dec
push
inc
into
cmp
repnz
jne
jge
sbb
ret
jge
adc
mov
adc
ja
cmp
int
lahf
loop
push
scas
popa
and
popf
sub
push
fistps
clc
push
jl
int
cmp
gs
cmp
loopne
pop
fld
mov
mov
out
jmp
mov
repz
mov
mov
std
push
sbb
std
add
int3
loop
pop
mov
or
and
xor
shrl
jmp
gs
sarl
mov
jmp
xchg
imul
ss
cmc
mov
movsl
adc
cmp
inc
jmp
jle
js
gs
mov
mov
pop
cwtl
push
jbe
pop
mov
mov
inc
jns
push
mov
outsb
sbb
ljmp
push
jp
push
sub
and
scas
jle
shlb
ds
out
pop
mov
xor
dec
les
or
ja
push
push
jmp
icebp
out
bound
jg
or
pop
jle
std
pop
rcrl
or
aaa
xor
push
cli
pop
test
sub
lcall
jl
sbb
lcall
out
cmp
icebp
out
sbb
mov
jmp
xor
pop
lods
dec
jb
lock
shll
lahf
cmp
xor
push
mov
lods
mov
jp
lcall
sti
sbb
inc
mov
lret
ds
aas
sbb
out
xchg
arpl
scas
and
sbb
lea
loop
sub
int3
movsb
mov
mov
pusha
test
std
xchg
scas
mov
mov
cwtl
xchg
cwtl
loop
lods
daa
jg
mov
sbbl
jl
or
or
inc
push
fwait
inc
rcrl
sbb
ret
into
movsb
mov
ja
les
mov
add
daa
push
mov
mov
rorl
pop
adc
rolb
lods
push
movb
ficoms
cmpsl
leave
cli
fwait
dec
cmpb
and
push
rcl
pop
insb
ss
fcomps
shll
shll
add
movsb
enter
andl
daa
xor
je
xor
gs
clc
add
mov
or
enter
cmp
push
in
inc
loopne
shrl
mov
pop
inc
inc
inc
std
push
insl
rorb
cmp
fwait
xchg
frstor
push
int3
sub
inc
and
inc
fisttpll
test
sti
dec
sbb
inc
cmp
insl
test
fs
pop
mov
test
ja
mov
sbb
dec
sbb
in
jp
inc
push
xlat
pop
and
inc
jg
fdivrs
lods
mov
subl
scas
aad
jmp
cwtl
imul
dec
in
out
or
mov
jmp
loop
push
cmpsb
outsl
lret
xchg
cwtl
lgs
pop
xor
jle
fs
out
push
mov
push
push
popa
inc
mov
lret
lock
popa
xor
inc
inc
add
push
stos
lret
data16
mov
fadd
push
int3
mov
add
xor
scas
push
std
in
out
cs
mov
sbb
mov
gs
xor
insb
mov
add
pop
lds
int
orb
movsb
mov
cli
mov
dec
popf
int
popf
mov
pop
adc
inc
sbb
shll
sub
mov
add
les
xor
int3
in
frstor
jnp
jl,pn
ja
fldlg2
mov
and
fadd
cmp
data16
xor
and
cmp
mov
inc
pop
jmp
mov
push
imulb
adc
in
cld
sub
dec
xor
cld
in
pop
mov
dec
out
xor
dec
cmp
jg
arpl
push
ljmp
jo
mov
lods
lcall
fidivrl
xor
mov
fstpt
in
lock
mov
mov
add
xchg
fwait
iret
inc
mov
mov
push
stos
out
and
mov
or
les
mov
pushf
xchg
test
push
sbb
add
loope
mov
push
ja
xor
iret
jp
adc
inc
loop
mov
mov
mov
xor
pop
shlb
add
mov
pop
dec
or
fildll
or
add
xchg
jmp
pop
mov
add
add
push
sahf
push
pushf
mov
jb
push
leave
jl
sbb
dec
sub
jnp
sbbl
sub
movsl
push
and
insb
adc
pop
ds
bound
idivb
sbb
rol
stos
lods
xchg
popf
out
es
mov
pop
or
inc
mov
mov
popa
push
sbb
push
or
jno
cmp
cli
adc
fimull
rcll
rolb
and
das
pop
push
sbb
dec
cld
das
dec
jb
adc
rcl
scas
in
jmp
add
sar
popa
gs
inc
jbe
mov
sub
rcrb
test
xchg
or
mov
scas
std
mov
xor
sbb
push
leave
fsts
mov
pop
mov
adc
stos
je
push
cmp
mov
inc
push
pusha
fnstcw
mov
cmc
push
sub
out
addl
add
stc
push
and
daa
dec
jns
pop
push
lods
jge
pop
cmp
add
inc
mov
lret
std
addr16
icebp
push
jg
jno
xchg
repnz
inc
insb
cwtl
call
ds
cmp
and
or
andnps
xchg
clc
ljmp
push
nop
fcoms
cli
std
int3
into
mov
mov
lods
mov
sbb
fucomip
xchg
lods
lea
inc
js
push
xchg
popf
push
fstpl
cmp
xor
shll
icebp
rolb
test
jmp
hlt
dec
popa
inc
xor
xchg
xchg
sbb
dec
cwtl
divb
push
or
mov
ficoml
loop
arpl
pop
adc
icebp
push
aas
fnstcw
xchg
outsl
or
inc
xorl
out
stos
outsl
cmpsb
ss
mov
faddp
push
jmp
shl
mov
aad
out
insl
pop
or
jmp
fs
sub
sub
ja
lret
cmp
popa
aaa
fwait
cmp
lock
pop
shll
mov
nop
jl
sub
out
stos
inc
pop
scas
js
je
fdivrs
mov
or
nop
mov
aas
xor
inc
orb
mov
in
sub
out
push
sar
sbb
jns
popw
adc
je
inc
cmpsl
addr16
rcl
pop
lret
xlat
pop
insl
ja
loope
pop
mov
xchg
dec
roll
pop
js
test
push
out
pop
or
lods
popf
pop
sub
jp
jae
loopne
jge
sbb
pusha
or
nop
addr16
dec
shl
loope
int3
rclb
adc
popa
pop
sbb
outsl
je
lahf
or
push
sub
lods
cltd
faddp
adc
lcall
jmp
notb
mov
cld
lahf
add
mov
hlt
mov
inc
xchg
call
pop
les
push
outsb
imul
jne
sbb
stos
inc
insb
and
in
dec
jns
pop
rorb
loope
cmpsb
adc
cmpsb
cli
pop
leave
inc
lahf
dec
sbb
cwtl
fidivs
or
cmc
mov
ss
imul
and
dec
dec
pop
adc
sti
div
adc
push
aad
shll
popa
xchg
repz
mov
jmp
pop
jge,pt
jbe
fwait
xchg
std
adc
aas
cmovs
pop
sar
and
cwtl
pop
xor
sbb
sti
sub
pop
sub
cmp
inc
stos
dec
add
shlb
lret
cltd
lds
out
lret
nop
iret
inc
inc
popa
rolb
inc
test
cmp
lea
outsl
or
sbb
aad
xchg
test
test
xchg
mov
mulb
cmp
xor
cltd
cmc
dec
insl
mov
out
jns
adc
dec
dec
add
daa
or
sbbl
lods
mov
outsb
add
rcrl
cmpsb
mov
mov
fidivrs
lret
xor
icebp
inc
pop
mov
dec
mov
pop
push
mov
cmc
popf
xor
inc
or
xchg
push
xor
les
mov
jge
outsb
sbb
test
idivb
dec
jmp
movsl
push
mulps
or
gs
js
loope
xor
rclb
cmp
lahf
sub
add
jl
iret
fs
out
mov
xor
mov
lret
cmp
inc
mov
out
add
or
js
out
xor
enter
imul
jmp
jae
fidivs
xchg
mov
sbb
clc
imul
in
sbb
push
push
ds
jb
xchg
jmp
add
ds
enter
mov
sbb
ljmp
cmp
add
push
push
test
push
stos
lcall
inc
xadd
sub
data16
rcll
pop
jb
inc
jp
add
mov
js
jne
out
sub
cmp
mov
test
mov
mul
add
xchg
adc
test
divb
loop
or
mov
jl
add
cmp
sbb
mov
bound
push
outsl
fsub
sti
and
idiv
das
inc
daa
inc
sbb
dec
sbb
mov
or
jbe
shll
mov
mov
aaa
daa
push
outsl
mov
inc
pop
adc
mov
je
sbbb
cmp
mov
jnp
cmpsl
test
cld
mov
xorl
ret
lcall
sti
xchg
fldenv
mov
dec
lock
jl
daa
test
out
out
dec
ds
push
push
push
and
scas
dec
xor
divb
repz
jecxz
sbbb
cmp
add
outsb
or
xchg
cltd
xlat
sub
inc
jo
pop
and
xor
fisubrl
and
gs
xchg
or
fdiv
dec
xor
sub
jecxz
fmuls
pop
xor
add
pop
xor
fcoms
in
iret
fwait
sub
jecxz
inc
mov
xchg
dec
inc
mov
cmpsb
pushf
repz
pop
sti
shl
insb
sub
mov
or
jge
shll
cld
adc
jmp
out
xchg
mov
adc
rcll
loop
pop
xchg
jecxz
jl
xor
in
jmp
mov
daa
cltd
dec
movsb
pop
inc
mov
ja
pusha
repnz
mov
and
adc
push
inc
cmp
data16
inc
sbb
xchg
data16
xor
js
mov
push
pop
or
mov
clc
inc
das
loop
cmp
in
pop
popf
divb
dec
ja
cmc
ljmp
jl
rolb
call
les
or
inc
les
or
add
push
add
or
pop
mov
sub
aaa
and
stos
mov
mov
xchg
ljmp
repnz
out
add
cs
fistpll
dec
std
in
xor
scas
repz
shlb
or
sub
icebp
fisttpl
and
stos
shrl
sub
sbb
pop
xchg
loopne
in
push
clc
into
mov
cs
pop
fs
call
mov
imul
jne
jnp
xchg
or
insb
dec
loopne
push
dec
add
jnp
mov
xchg
xchg
cld
add
daa
jp
rorb
jnp
call
pop
sub
out
and
dec
add
test
aad
push
sub
mov
std
inc
insb
adc
xchg
in
flds
in
lods
add
fldenv
xor
imul
sbb
inc
int
popa
sub
cmp
pop
sbb
int3
popa
push
repz
sbbl
aas
gs
jo
cmc
sub
leave
sbb
aaa
xchg
push
xchg
dec
neg
lahf
mov
pushf
lret
sub
sar
ds
subb
or
fists
push
push
orb
or
xchg
cld
cmpsl
stos
push
cmp
dec
cli
andb
imul
stos
lds
push
dec
cmc
mov
pop
inc
sbb
dec
pop
lret
or
inc
xchg
sub
insb
mov
pusha
dec
cmpsb
mov
dec
push
inc
fcmovnbe
mov
hlt
adc
fldcw
outsl
movsb
vmwrite
mov
test
mov
sbb
movsb
cld
fsubrp
jmp
mov
jbe
push
mov
repz
mov
int3
int3
pop
mov
repnz
pop
je
pop
int3
sub
pop
mov
jb
sub
leave
mov
rep
bound
cmp
or
shll
rorb
out
cmp
test
mov
sub
ficomps
js
mov
test
mov
sti
rolb
jle
stc
sbb
or
out
mov
mov
ret
push
imul
sti
cwtl
mov
sbbl
mov
arpl
arpl
in
mov
sarb
lret
lds
mov
jecxz
and
xor
mov
fs
adc
sub
call
pusha
int3
push
rol
lods
pusha
cli
xor
cmp
dec
add
jle
repnz
and
xorl
sti
sahf
cmc
xchg
stc
cmc
ljmp
xor
inc
sub
pop
and
adc
and
jmp
les
dec
sarl
mov
and
mov
cs
and
mov
pop
jmp
jo
inc
lret
pop
mov
pop
mov
out
mov
or
mov
dec
fmuls
fwait
jb
dec
leave
jg
shr
xor
and
push
icebp
sub
push
or
add
pop
outsb
cmp
stc
jge
dec
gs
push
push
dec
and
pop
mov
dec
or
lods
js
ret
or
pop
xor
int3
movsl
mov
adc
ljmp
cmp
xchg
mov
fidivrs
arpl
adc
rcrb
adc
popf
hlt
adc
push
mov
cmpsb
dec
adc
cmp
leave
stos
or
and
adc
mov
mov
loopne
call
shrb
mov
das
mov
lods
das
ret
loopne
lret
push
sub
or
lock
shlb
insb
lods
and
fsubrs
xchg
fdivrl
arpl
xor
lock
clc
xlat
jle
xchg
sub
and
test
add
jecxz
dec
xchg
push
out
push
loopne
mov
lahf
fidivs
xchg
dec
sub
mov
xchg
dec
movsb
lods
into
mov
jp
movsl
setb
lock
insb
stos
adc
js
inc
testl
sbb
fisubs
mov
lock
ret
std
cs
arpl
call
adc
out
push
xor
lahf
xor
inc
lds
pop
xor
xor
insb
fnstcw
dec
sbb
or
dec
jne
lods
push
mov
xchg
shll
cmp
sub
add
xorb
push
mov
movsl
testl
in
adc
lock
jg
adc
sbb
pushf
shll
mov
mov
push
jnp
xor
fdivp
ret
popa
push
out
sbb
fcoms
mov
mov
call
movl
adc
outsl
shrl
pop
and
dec
ds
das
shl
jns
jle
cwtl
lods
xor
repz
jmp
mov
loop
add
in
xor
out
push
icebp
jo
xchg
loopne
iret
push
mov
xor
enter
fisubrs
fnsave
call
out
mov
xor
sub
cmp
mov
xchg
push
andl
and
mov
adc
inc
xchg
jmp
pop
mov
ss
adc
loopne
dec
sahf
inc
sub
cld
jae
aad
mov
push
fdivl
movsl
leave
push
inc
test
jne
cmp
scas
sbb
cmp
or
mov
movsb
add
lcall
idivl
jecxz
cmpsl
mov
or
movd
iret
pusha
xor
push
out
pop
std
test
and
lock
dec
mov
mov
cmp
cmp
add
push
lock
push
in
int3
inc
std
jne
loopne
stos
and
lahf
test
mov
aad
aaa
imul
mov
in
aas
cmc
sbb
sub
xor
adc
push
testb
das
loopne
cmpsb
cwtl
push
ja
inc
mov
xor
xor
mov
inc
dec
repnz
cltd
pop
test
inc
pop
mov
ljmp
xor
ss
and
into
push
dec
or
pop
sarb
bound
inc
sbb
dec
cld
sbb
cltd
icebp
cltd
adc
sub
push
ret
out
xor
outsb
sbb
mov
test
dec
lods
dec
aad
in
add
xchg
ret
or
xor
aam
push
pop
mov
orb
gs
ja
clc
jge
inc
loopne
mov
and
lock
data16
xor
jmp
loope
sbb
push
sbb
lock
cltd
out
sbb
add
push
dec
sbb
push
dec
stc
xlat
adc
adc
and
jmp
rcrb
iret
lds
pop
ja
and
in
repz
xchg
mov
sbb
xor
xchg
pop
and
mov
or
hlt
pop
mov
repz
sbb
imul
out
jecxz
fdivs
inc
cmp
popa
insb
mov
jmp
dec
hlt
enter
xchg
clc
mov
rcrb
push
adc
lahf
scas
push
leave
clc
and
sbb
movsl
imulb
adc
adc
adc
stos
inc
adc
icebp
out
dec
clc
outsl
push
arpl
sarb
or
lahf
pop
repz
imull
mov
call
loop
sub
lret
ds
int3
push
pop
out
xchg
or
shrb
lods
dec
xchg
or
mov
inc
iret
into
incl
pop
sarb
mov
pop
adc
das
dec
and
jmp
cltd
mov
or
pop
cmpsl
stos
cmc
push
dec
lret
cli
xor
jns
call
cmp
and
sbb
inc
pop
movsb
adc
dec
cmp
mov
sahf
mov
or
jl
mov
adc
jmp
push
test
lea
repz
lods
fisttps
bound
mov
mov
pop
std
pop
pop
pop
dec
loopne
mov
cwtl
call
mov
xchg
popf
push
in
cld
jno
add
dec
movsl
arpl
pop
bound
scas
xchg
cmp
bound
xor
jno
sub
aaa
clc
or
orl
jno
jae
bound
xor
cmpsl
xchg
pop
dec
push
jo
gs
jmp
ret
test
jo
nop
push
jo
js
loop
xchg
cmpl
in
and
andl
xchg
mov
addr16
ds
fisubrs
daa
mov
mov
push
mov
sub
outsl
mov
pusha
sahf
cmpsb
jne
outsb
movaps
mov
inc
xchg
xchg
or
jns
mov
sbb
inc
notb
test
outsb
iret
dec
cmp
xchg
cltd
and
dec
sbb
int3
daa
fcompl
iret
fwait
mov
jno
mov
ret
push
cmpsb
jp
mov
xor
repz
jge
fildll
ljmp
stc
fsubs
imulb
sub
aad
push
test
or
int
xor
into
sbb
ret
pop
push
sub
mov
mov
xchg
mov
adc
inc
inc
aam
dec
add
pop
fimull
ss
jmp
daa
xor
inc
lret
pop
mov
push
inc
cmp
movsb
outsb
cltd
push
flds
pop
mov
mov
add
cmp
pop
int
fs
fsubrl
mov
push
imul
insl
addr16
jne
cwtl
xor
pop
inc
test
outsb
movsl
adc
cli
jb
inc
push
imul
cmp
or
mov
out
add
jo
loop
jno
mov
in
sub
mov
inc
cwtl
repz
fstl
or
ds
mov
aas
dec
mov
mov
ficomps
mov
jne
sbb
testb
adcl
cmc
movsl
inc
or
fistl
lods
push
gs
leave
lds
sarb
push
or
xchg
jns
jbe
jns
cmpsl
into
icebp
lods
cmp
je
int3
dec
mov
fidivrs
mov
mov
sub
pextrw
arpl
lcall
mov
or
xor
lods
decl
stos
cwtl
addr16
ss
push
outsl
repz
dec
fimull
or
sub
int3
and
dec
fwait
fs
lea
outsl
pop
mov
jecxz
ficompl
inc
cmp
mov
xlat
sahf
or
jg
test
setbe
pop
sbb
hlt
mov
int
and
push
mov
adc
gs
jg
mov
add
popa
push
out
pop
push
pop
push
test
ss
pusha
mov
cmpsl
mov
in
outsb
add
ss
loope
mov
jle
or
fistpl
mov
lds
rcrb
cmp
pop
dec
jge
lret
add
push
into
daa
out
test
lock
jl
loop
cmc
push
mov
push
lahf
insb
pushl
jge
add
dec
movsl
daa
shlb
xor
push
mov
aaa
jmp
cmp
pop
cmp
push
out
jge
loope
in
adc
int
lcall
fld1
out
sub
sbb
inc
aaa
fidivrl
adc
mov
sbb
xchg
and
or
sub
xor
sub
dec
cli
cmp
lock
push
icebp
fsts
jbe
sbb
mov
enter
add
inc
adc
js
dec
imul
shr
repnz
sub
push
push
mov
aas
out
inc
insl
call
cmp
adc
outsb
pusha
outsl
jp
push
or
imulb
mov
rcrl
movsl
rcrb
fcompl
aas
inc
add
pushf
xchg
mov
mov
mov
xchg
cmp
mov
push
in
sbb
push
push
pop
cmp
mov
mov
pushf
mov
in
adc
add
xchg
xchg
add
std
push
arpl
and
sbb
imul
adc
push
aad
mov
sub
dec
js
sub
in
shll
loope
mov
push
xchg
int
push
adc
or
fwait
pop
dec
icebp
dec
in
dec
jl
fnsave
ret
xchg
push
lods
mov
scas
insl
jbe
mov
mov
cmc
test
lcall
fimull
or
mov
popf
das
jnp
test
xchg
ret
es
sbb
adc
push
mov
dec
fs
mov
cmc
scas
mov
jo
subb
push
or
cmovo
sub
lret
fnstcw
mov
ljmp
jle
enter
ss
mov
adc
add
lods
xor
sti
jnp
xchg
fwait
gs
stc
les
cmp
clc
sbb
mov
ror
aaa
imulb
and
sarb
in
and
sbb
ror
or
inc
insl
jbe
dec
notb
mov
cli
aaa
jnp
mov
xchg
dec
xchg
shlb
pop
mov
xor
inc
sbb
and
imul
in
andl
jle
fwait
and
loope
je
dec
and
or
jo
jns
sbb
dec
adc
inc
pusha
and
int
aas
cmc
and
sbb
icebp
sub
scas
movsl
movsl
test
or
sbb
jmp
inc
sbb
mov
test
sarb
ja
fsubl
add
pushf
pop
push
sbb
clc
pop
fldenv
sbb
jle
outsl
pushf
mov
fdivs
cmp
xor
sbb
cmp
xor
jae
jne
in
fimuls
or
jmp
xlat
add
dec
cmp
xlat
bound
out
gs
mov
daa
jg
xchg
clc
add
out
xchg
dec
rclb
or
test
sub
mov
sar
pop
inc
negl
push
rorl
dec
daa
iretw
je
je
in
adc
jbe
scas
les
iret
cmc
adc
cmp
pop
and
in
and
xchg
rorb
jbe
cwtl
mov
and
xor
xchg
imul
xor
pop
negb
popa
jbe
ficomps
movaps
mov
sti
xchg
xor
or
or
push
enter
add
in
xchg
adc
or
adc
and
xor
cmp
mov
xor
adc
xor
pop
rep
add
sub
scas
mov
mov
xlat
fistl
sub
jno
and
push
in
clc
adc
mov
jl
test
push
or
adc
outsb
inc
add
cmp
in
or
and
mov
jecxz
imul
loope
negb
adc
aad
cmpsb
cmp
stos
and
mov
andl
xchg
sbb
push
mov
je
pop
movsl
jecxz
testb
mov
pop
pushf
jp
sbb
push
add
adc
in
mov
sbb
rcrl
cmpsb
cmc
push
daa
jns
fdivs
xlat
dec
inc
jl
pusha
dec
pop
add
adc
dec
mov
daa
adc
push
and
lahf
xchg
or
mov
js
nop
daa
incb
xchg
or
sbb
fwait
cmp
test
hlt
push
cltd
jb
fidivl
sub
and
pop
lcall
add
push
mov
in
cwtl
adc
aaa
cmp
sub
add
imul
pop
add
je
pop
test
sbb
mov
shrl
std
and
sbb
push
xchg
pop
clc
mov
sar
into
dec
jge
pop
sbb
and
or
fs
sahf
ficompl
mov
fadd
pusha
mov
insl
cmp
pop
mov
dec
sbb
aaa
inc
into
cli
sbb
sbb
sub
lcall
lcall
js
js
out
xlat
mov
xchg
stos
fidivl
arpl
jnp
ljmp
mov
jmp
punpcklwd
shl
sub
adc
int
xor
mov
lods
jle
adc
jg
mov
or
sti
call
inc
mov
mov
cmp
mov
out
sbb
push
mov
xchg
scas
inc
in
insl
out
in
ss
add
push
pop
or
sub
mov
int
rcl
and
mov
push
cs
movsl
movsl
sbb
mov
into
pop
adc
cld
sbb
outsl
add
cmp
es
nop
and
je
push
fisttpl
jnp
mov
cmp
ds
sbbb
sysret
repz
sub
add
push
ret
jle
decl
ret
imul
jae
adc
arpl
popa
rol
insl
stos
in
test
movsl
mov
mov
jno
xor
pop
sti
push
add
outsb
rorb
pop
dec
xchg
adc
inc
loope
fwait
stc
ret
sahf
cmp
dec
mov
cmpsl
cwtl
gs
adc
pop
test
inc
pop
out
push
cwtl
and
xchg
imul
inc
pushf
cli
mov
add
mov
add
xchg
jl
mov
mov
push
jo
or
cld
pop
std
mov
test
es
mov
mov
insb
cmc
in
jmp
dec
scas
mulb
push
jge
xchg
shr
andl
out
dec
mov
movsl
adc
jl
dec
dec
icebp
lahf
in
ret
cmc
lret
push
cwtl
mov
mov
pushf
andb
dec
push
jp
adc
lea
fbstp
stc
push
out
sbb
pop
xchg
adc
lcall
or
xlat
push
scas
inc
push
repz
scas
je
and
mov
out
cmpsl
sub
clc
into
rorl
xor
dec
push
jmp
jnp
stos
js
out
hlt
or
adc
mov
adc
jg
pop
pop
sbb
push
movsl
je
cmp
sub
out
xor
lds
mov
sub
rorb
or
stos
in
sub
jmp
popa
mov
outsl
jbe
lret
sbbb
popf
rcrl
stos
ffreep
fistps
pop
aaa
dec
jge
xchg
jne
fstps
loopne
das
pop
imul
shl
stos
cmp
adc
imul
mov
and
mov
test
andl
mov
cmpsl
sub
mov
and
pop
add
mov
jo
jnp
scas
cmp
mov
mov
icebp
xchg
subb
cmc
loop
lahf
adc
leave
mov
sub
addr16
cmp
sarl
addb
and
outsb
and
sahf
stos
push
push
sub
sub
mov
and
push
and
inc
cs
aad
jbe
adc
lcall
xchg
pushf
popa
pusha
push
call
xlat
add
mov
aaa
scas
and
cmp
cmp
in
rcll
pop
lcall
push
push
je
dec
aas
push
mov
pop
insb
scas
je
dec
push
cmp
jl
pop
aas
int3
loope
pop
ret
test
divb
inc
insb
xchg
dec
loope
jl
mov
and
push
mov
pushl
cmp
mov
push
xchg
mov
dec
or
call
inc
ret
and
sahf
fsubr
aaa
arpl
mov
push
cmp
and
sub
mov
dec
ja
and
mov
jmp
std
mov
cltd
outsb
inc
gs
jmp
decb
mov
popf
mov
pop
test
cwtl
pusha
lea
mov
sbb
lea
loopne
lds
mov
xor
test
loopne
xchg
repnz
add
jle
xchg
psubd
adc
test
out
or
imul
sub
out
or
daa
into
inc
movl
shlb
push
addr16
sbb
scas
divb
fildll
orl
push
setne
out
icebp
je
mov
loopne
pop
pop
xor
or
xlat
and
sub
push
ds
andl
or
xchg
xchg
insl
push
xor
sbbl
jmp
pop
jmp
sbb
js
pop
pop
fwait
in
mov
vpminub
adc
dec
jmp
insb
cltd
wbinvd
mov
sub
ds
cmc
cmpsl
iret
in
paddw
stc
in
fisttpl
pop
inc
shll
ja
outsb
dec
mov
mov
fcmovne
je
mov
sub
inc
cltd
std
in
push
imul
sub
xchg
pop
mov
inc
es
cs
jp
xlat
mov
imul
xchg
fs
xor
xor
mov
mov
or
rorl
jp
nop
popf
pop
mov
xchg
and
fwait
das
outsb
jne
insl
movsb
inc
sbb
dec
xchg
sub
out
jns
out
mov
loopne
mov
leave
inc
mov
out
cltd
or
popa
pop
outsb
jmp
fimull
int
xchg
out
xchg
xchg
fldcw
sbb
mov
jbe
jle
out
xchg
or
or
xchg
inc
loopne
lock
adc
test
jno
mov
lock
dec
popf
nop
and
pop
mov
sbb
mov
ret
sub
rcrb
dec
jp
adcl
jmp
xor
cltd
lods
int
cmp
xchg
inc
push
stc
dec
push
push
mov
cmpsb
xor
es
scas
cli
sbb
mov
sbb
mov
lds
rolb
aas
cmp
and
cld
addr16
xchg
mov
aaa
iret
rorb
fldl
fistl
cmp
xor
out
lods
ljmp
cmp
in
inc
jp
out
mov
in
jge
das
lahf
push
jae
mov
add
jo
out
into
clc
cmp
cmova
xchg
out
xor
mov
ret
jl
sub
xor
ljmp
cmpsl
cvtps2pi
scas
xor
xor
mov
test
inc
mov
or
sbb
rol
inc
in
insl
push
nop
pop
push
imul
jp
pop
adc
xchg
fimuls
clc
sbb
cltd
testb
repnz
cmp
add
ds
fs
jae
push
jo
lods
cmc
jmp
and
sub
push
mov
hlt
dec
ret
lds
xor
pop
call
or
shl
cwtl
btl
loope
cmpl
es
test
cwtl
fwait
notl
jbe
loop
push
cwtl
std
lds
mov
idivb
test
popa
aad
leave
dec
punpckldq
jne
mov
adc
mov
mov
repnz
mov
mul
jo
sub
cmp
ljmp
inc
in
xor
sbb
aad
xchg
mov
inc
lds
cmp
add
inc
dec
xor
xlat
ja
test
xchg
scas
pop
jg
add
pop
mov
xchg
mov
in
aam
ret
test
sbb
in
testb
out
pop
ficomps
cwtl
add
repz
mov
mov
pop
jmp
mov
dec
xorb
jb
xchg
into
xchg
fmuls
fisttps
cmp
cmc
js
icebp
test
mov
xorb
popf
mov
mov
iret
fsubl
inc
lret
xor
lret
inc
sbb
add
and
lahf
and
in
andb
ja
pop
sub
mov
cmp
mov
jno
into
push
cmp
enter
cltd
mov
xorl
aaa
stc
lods
into
dec
sub
call
mov
mov
shrb
fneni(8087
test
or
add
test
enter
xchg
ja
icebp
int
arpl
or
adc
adc
adc
sbb
jbe
adc
dec
dec
out
mov
pop
jmp
orb
add
mov
jae
fdivrs
sub
mov
test
cmp
fistps
cmp
jnp
cmp
mov
in
xchg
xor
popa
outsb
cmp
das
inc
pop
lock
push
and
enter
mov
jae
std
rorl
aaa
rorb
popf
pushf
add
lods
adc
dec
insb
test
xor
adc
mov
lods
lock
or
sbb
mov
and
arpl
mov
sbbl
mov
mov
jg
xchg
jb
push
les
mov
data16
jns
movsb
inc
fdiv
mov
adc
xor
and
fists
les
lock
or
test
lret
repnz
mov
sub
rorb
push
sub
test
pop
inc
push
test
pop
imul
cmp
andb
das
ljmp
add
aad
push
xchg
mov
dec
jmp
push
movsl
movsl
ss
push
xor
fsubs
jb
add
sub
cmpsl
cmp
jae
popf
sbb
fdivs
loope
add
test
repnz
inc
jmp
orb
dec
cmp
pusha
xchg
testl
xchg
xor
mov
cmp
mov
xor
arpl
loopne
les
adc
and
das
iret
jo
mov
sub
mov
repz
mov
push
xchg
jbe
and
dec
push
inc
inc
ds
stc
call
lods
jl
out
in
les
mov
mov
or
add
loop
mov
xor
sbb
aad
adc
ss
mov
cmp
outsl
jb
jo
daa
pop
call
into
sub
shrl
xchg
ljmp
ljmp
mov
addr16
cmp
sbb
xchg
pop
push
add
jmp
lret
rcl
and
in
push
in
mov
in
daa
rcrb
mov
repnz
bound
pop
ss
mov
out
pop
sbb
je
sub
lret
gs
push
jbe
cltd
insb
scas
cmp
pop
in
push
xchg
mov
int3
add
jl
mov
xchg
pop
xor
out
js
or
in
cwtl
fsub
out
jge
cmp
jbe
jns
sti
sbbl
dec
push
repz
imul
sbb
stos
lods
aad
jp
mov
cmp
divb
inc
pushl
mov
sbb
decb
ja
cmc
repnz
xchg
xchg
roll
mov
ret
mov
stos
mov
in
cltd
fsubrl
cmc
xchg
push
cmp
hlt
xchg
sahf
xchg
sub
mov
aad
and
icebp
push
lods
sub
mov
insl
lds
adc
mov
movsl
sarb
or
test
jg
xor
cmpsl
mov
xchg
mov
dec
xor
stc
inc
arpl
rorb
and
fincstp
aad
inc
aas
jp
loopne
xchg
aam
jecxz
and
aad
dec
ds
inc
negb
inc
add
dec
mov
cmp
frstor
mov
fisttpl
fnsave
mov
loope
mov
pop
inc
sbb
adc
fs
push
and
and
pop
and
jle
test
ds
fld
dec
jb
jecxz
xor
jg
out
jnp
sub
jae
cmpsl
mov
icebp
aaa
cmp
and
xor
pop
aad
out
ds
jne
movsb
mov
mov
gs
loop
pop
in
cmp
adc
lods
cwtl
ljmp
xor
cmp
enter
add
arpl
pop
jae
imul
popf
addr16
adc
push
iret
xchg
out
ljmp
lahf
jle
stos
dec
dec
xchg
adc
and
jnp
jg
je
fistl
and
fcmovnb
add
fidivs
std
mov
hlt
stos
cmp
add
int
mov
xchg
jecxz
cmpsl
xor
pop
enter
popf
xor
popa
and
push
jbe
jnp
cmc
shlb
cli
popa
andb
jl
testb
insl
daa
bound
pop
mov
std
das
sbb
pop
movsl
fstl
icebp
mov
test
inc
pop
rcr
lahf
rclb
sub
jge
or
out
test
jecxz
aam
push
xchg
jbe
stos
dec
lret
rdtsc
jecxz
out
lea
cmpsl
pop
dec
or
dec
aaa
repnz
pop
xchg
xchg
cmpsb
cmc
and
sbb
mov
sti
sbb
jecxz
mov
xor
push
scas
dec
mov
or
and
shrb
aad
mov
or
add
in
sub
cli
ja
sub
sub
sbb
dec
insl
jmp
arpl
jecxz
mov
mov
jg
mov
xor
aas
les
xchg
ror
mov
es
ds
sarb
mov
call
jl
pop
sub
lret
and
std
adc
xor
stos
add
cld
scas
push
cld
int3
pop
mov
daa
test
inc
mov
and
jg
sahf
gs
test
mov
sbb
xchg
xor
jmp
popf
icebp
fs
or
or
rolb
lcall
pop
add
les
push
push
cmp
jecxz
inc
iret
lods
rcrb
ds
and
lods
sbb
addr16
jmp
mov
cmp
test
push
call
inc
sbbl
lock
pop
jmp
jb
dec
adc
sbb
inc
iret
sub
push
gs
dec
cmpsl
popf
cmp
fstpl
cmp
pop
cmpsb
adcb
push
iret
les
addl
stos
stc
xchg
xchg
xchg
popa
mov
test
pushf
out
cmp
sbbb
mov
xchg
inc
stc
cmpsb
scas
and
icebp
cld
ret
jmp
in
cmp
scas
and
aas
imul
dec
sub
pusha
and
adc
hlt
ret
mov
lret
rol
popa
mov
leave
outsl
mov
js
mov
imul
xchg
std
mov
outsl
call
dec
lea
pop
gs
or
bnd
outsb
push
push
adc
test
paddusb
fadds
xchg
adc
cmp
push
jle
pop
lods
fisubrs
iret
pusha
xchg
sub
movsl
push
arpl
jg
push
imul
pop
data16
or
pop
push
or
call
xchg
lret
test
in
dec
push
jnp
ljmp
popf
fwait
jp
je
test
dec
and
dec
adc
dec
js
jne
cmp
add
mov
daa
lret
add
cmp
adc
out
pop
jp
imul
pop
fdivrs
int
or
ror
cli
test
cmc
pushl
enter
iret
hlt
jle
jp
nop
ret
pop
test
aaa
dec
ds
sbb
inc
loope
and
lea
cmpsb
cmc
aas
sbb
push
or
inc
cwtl
lods
adc
cmp
push
jmp
fbstp
arpl
adc
arpl
xor
lock
popf
xlat
xor
jp
cs
testl
leave
sub
mov
add
jne
push
pushf
dec
lret
mov
mov
pop
shl
cs
dec
fldl2t
mov
sar
sbb
or
mov
cld
cmp
inc
adc
push
mov
dec
daa
push
fldenv
scas
lods
stos
insl
jbe
out
and
clc
xchg
lock
mov
test
adc
cmp
mov
pop
xor
push
mov
inc
push
sub
pop
jne
scas
sti
mov
mov
in
shlb
xchg
jecxz
fistps
in
fisttpl
aaa
popa
ret
loope
add
into
and
daa
and
in
pop
mov
dec
fwait
jne
mov
mov
pusha
fstps
in
and
xor
scas
push
cwtl
mov
ret
push
cmpsl
sbb
xchg
loop
pop
xor
lods
dec
mov
and
push
adc
and
cmp
jae
cltd
int3
and
push
cmp
mov
lret
xchg
inc
mov
sub
add
cs
das
pushf
pop
std
mov
xchg
xchg
xchg
jecxz
jno
fs
nop
insl
push
mov
inc
adc
xor
jns
in
insb
inc
testl
rdtsc
lock
cmc
sub
mov
and
mov
out
sub
mov
je
mov
sub
inc
test
mov
mov
test
sbb
mov
dec
sub
jo
dec
xchg
mov
mov
sbb
or
sbb
outsb
push
cs
mov
mov
xchg
dec
xor
xchg
lea
out
fimuls
cli
push
add
mov
inc
outsb
in
pop
dec
mov
call
insl
rolb
add
sbbb
push
sbb
sbb
sbb
jb
pop
bnd
clc
xor
xor
mov
std
cs
int3
add
insl
sub
cmc
je
enter
pop
sbb
mov
adc
je
and
out
aas
shll
mov
sub
mov
push
jne
pop
mov
sti
or
xchg
popa
mov
ljmp
sti
fimull
mov
divb
jle
into
das
push
leave
sti
pop
sahf
loope
push
pop
rorb
shlb
pop
mov
cmp
lret
icebp
test
push
sbb
int
dec
test
ficomps
movsb
mov
xor
dec
pop
mov
mov
divb
xchg
fsubl
sub
inc
sbb
xlat
test
fs
mov
and
xchg
inc
add
jbe
push
sti
push
cmp
fstps
cwtl
cld
xlat
arpl
jnp
scas
aam
pop
jmp
cmpsb
mov
xor
mov
pop
roll
movsb
gs
or
mov
xor
mov
push
sub
adc
pop
xor
mov
adc
dec
int3
scas
lea
dec
xchg
pop
mov
xchg
jb
sti
out
pop
cltd
test
popa
mov
popa
dec
fstpt
fistps
xor
stos
xor
in
pop
dec
or
push
test
or
mov
push
lea
push
pop
xor
jnp
dec
mov
sub
out
addr16
jb
cli
cmp
loope
into
xchg
into
xchg
inc
xchg
cmpb
test
daa
test
or
pop
test
leave
push
jmp
and
mov
stos
js
rol
jle
mov
dec
jg
push
fbstp
xchg
loopne
std
and
aaa
sbb
inc
into
pop
cmpsb
adcl
sbb
loopne
popf
xchg
mov
pop
loopne
mov
add
pop
sbb
leave
jnp
hlt
test
mov
push
push
xchg
mov
sbb
nop
mov
adc
rol
repz
iret
pushl
cmp
movsb
mov
lock
shrb
clc
call
lret
mov
icebp
and
fsubs
mov
sbb
add
jbe
jo
sub
mov
mov
add
mov
pop
xchg
inc
out
adc
lcall
cld
mov
out
icebp
sub
mov
xchg
and
sbb
ja
sbb
push
mov
ss
enter
pushf
cwtl
repnz
and
test
add
cmp
pop
mov
sub
fs
in
popa
lret
mov
movsb
inc
mov
bound
andl
fwait
mov
mov
test
sti
out
cmpl
or
adc
or
dec
pop
out
daa
pop
or
cmpsl
leave
movsb
push
pop
sti
movsl
test
cmp
ljmp
or
mov
in
xor
cmp
xor
push
das
push
test
fistpl
inc
bswap
faddl
nop
inc
rcr
and
xchg
xlat
mov
ss
or
xchg
pop
ror
mov
pusha
shrb
lods
sbb
outsb
jecxz
stc
xchg
lret
push
add
cltd
xchg
lahf
mov
aaa
push
fs
ljmp
sub
and
shrl
mov
cmp
cmp
mov
mov
rcr
sub
jnp,pt
call
mov
imul
outsl
sub
cmp
inc
dec
xchg
adc
mov
mov
pop
sub
cwtl
andb
adc
mov
hlt
ficompl
outsb
movb
cmp
xchg
ja
mov
push
dec
jne
pushf
mov
or
fwait
lock
decb
mov
mov
push
inc
rcll
pushf
mov
xor
adc
pop
int3
fisubrs
jge
insb
arpl
lock
sbb
fadd
fstps
rcr
addb
adc
push
sbb
cld
sahf
int3
inc
adc
xor
cmp
pop
adc
es
jp
shll
loope
shll
dec
sub
xlat
testl
cmpsl
dec
mov
cmpsl
cwtl
pop
fimuls
inc
ds
and
loope,pn
outsl
push
loopne
cwtl
loopne
es
xor
roll
imul
sub
xlat
cwtl
rcr
js
insl
jno
xor
or
sbb
mov
adc
push
sub
inc
jg
not
pop
lods
pop
enter
out
xchg
movsl
shr
cli
or
push
mov
cmc
imul
xor
insb
int3
stc
out
push
mov
mov
push
push
loope
orl
add
mov
mov
xchg
das
and
notl
in
aad
mov
jp
hlt
aas
inc
pop
xor
push
in
movsl
incb
sub
jnp
sbb
lret
push
cltd
xor
arpl
jns
data16
push
movsl
add
ja
lods
jne
mov
xchg
jb
pop
sbb
pop
dec
fdivs
int3
mov
cli
stc
gs
inc
loop
lods
stc
xor
dec
inc
mov
imul
pop
mov
sub
pop
shr
and
pop
jns
mov
outsb
pop
bound
jl
pop
pop
dec
imul
fmulp
jg
sti
and
push
cmpsb
adc
pop
cmp
cmp
in
iret
repz
dec
dec
jp
cmpsl
pop
in
add
lds
mov
mov
in
jnp
movsb
xor
and
jne
cld
sahf
jo
pop
dec
jecxz
arpl
pushf
push
inc
mov
outsl
outsb
mov
mov
imul
popa
iret
outsb
mov
xchg
sub
fdivrs
popf
aam
pop
mov
push
iret
in
push
sbb
ficompl
mov
jmp
repnz
push
sbb
pop
dec
lret
mov
mov
pop
pop
or
fidivl
rcr
mov
rorb
cmp
cltd
rol
inc
and
sbb
decb
loope
cltd
fcmovnb
loopne
mov
lea
mov
inc
movsb
add
loopne
pop
xor
ljmp
clc
mov
pop
fsubp
and
pop
mov
int
dec
adc
mov
cmp
fstps
mov
cmp
pop
mov
cmp
adc
sub
pop
pop
xchg
sub
xchg
adc
or
gs
stos
jle
shr
ds
or
cmp
aad
movsb
adc
sbb
fnstcw
mov
mov
imull
bound
sub
iret
std
lahf
xor
adc
test
push
jb
jecxz
mov
hlt
mov
mov
xor
lea
stos
call
leave
stos
dec
lods
frstor
xchg
jl
add
fisubl
mov
or
add
and
fnsave
jmp
pop
or
jb
xchg
xlat
pop
add
cli
das
and
lcall
nop
rcrb
mov
sbb
push
jbe
in
xor
dec
and
mov
push
cld
mov
xchg
adc
pop
out
dec
mov
and
mov
sahf
xor
push
ret
sub
in
mov
pop
and
push
dec
pusha
push
xor
xchg
lahf
imul
insb
in
inc
add
or
add
imul
push
test
mov
lcall
fdivrl
push
leave
add
xlat
mov
or
cwtl
int
adc
sbb
and
add
bound
outsb
mov
cmp
mov
mov
cmpsl
in
mov
lea
rclb
dec
mov
cmp
push
inc
incl
xorb
mov
sbb
lds
sbb
pop
scas
shrd
hlt
push
mov
mov
jno
add
fiaddl
jmp
and
idiv
mov
or
cmc
sub
pop
or
cmp
movsl
ret
int3
enter
ret
fcomi
xor
cwtl
push
jnp
leave
cmpsb
inc
into
sub
testl
scas
das
xor
pop
fmuls
clc
mov
push
or
jo
je
test
jge
pusha
xchg
jge
loope
mov
cmp
fcmovu
dec
hlt
jns
loope
mov
add
add
clc
mov
mov
movl
dec
jl
and
jmp
jg
repz
jmp
or
dec
dec
sub
pop
js
lret
push
sub
cmp
and
jmp
mov
das
mov
cs
scas
test
add
fstl
mov
leave
in
xor
and
fsub
jp
push
fisubrs
xor
test
mov
mov
jg
mov
adc
fs
pushf
aam
ja
xor
repz
scas
push
jp
insb
lret
sbb
arpl
mov
push
divb
cmp
pop
fldenv
inc
or
push
fldl
fidivl
sbb
jge
rolb
or
outsl
push
mov
lret
pop
xor
vpcmpeqb
and
lods
push
pushf
push
lds
pop
sbb
leave
xchg
and
pop
pop
jb
push
fldenv
or
adc
in
inc
int3
lods
lret
push
push
pop
or
adc
ss
popf
roll
cs
test
add
inc
mov
pop
pop
cmp
xor
jns
fsubrl
out
jecxz
push
imul
ret
lret
mov
push
pushl
mov
jge
jge
mov
fwait
jge
jmp
add
fdivrl
es
lcall
popf
loope
cwtl
icebp
mov
add
or
lods
out
jb
test
js
mov
imul
dec
lock
js
test
jl
jmp
js
push
pop
outsl
sbb
xor
outsb
push
pop
sbb
lock
mov
repz
cmp
add
add
movsb
adc
jmp
mov
hlt
jecxz
xchg
test
test
out
daa
adc
rorb
jp
sub
nop
lahf
sbb
loope
imull
call
fbstp
popf
fcompl
jmp
jmp
stc
fidivs
sub
or
lock
add
pmullw
and
pop
dec
pop
cmp
sub
cmpsb
fs
shrb
sbb
pop
aaa
jbe
sarl
jmp
stos
out
sti
jecxz
scas
dec
cwtl
imul
movsb
imul
pop
cli
cs
push
seta
and
sub
lods
cmp
enter
jecxz
in
inc
ret
data16
mov
cmp
adc
cmp
pushf
gs
cmc
js
push
cmp
add
addr16
jmp
jmp
cmp
jbe
shrb
ficompl
les
inc
or
lea
mov
mov
aas
movsb
scas
push
lods
ror
push
xchg
cmp
fsubrs
hlt
inc
out
lods
jmp
mov
jle
cmc
mov
lock
cmpsb
iret
iret
fstps
imul
rclb
cltd
test
pop
pop
sub
mov
test
in
xchg
adc
xor
into
inc
out
mov
call
xor
and
es
adc
mov
stos
lahf
mov
repz
call
inc
negl
adc
imul
stos
daa
rcr
fs
jnp
sahf
loop
xlat
push
sti
add
add
notb
mov
cmp
inc
imul
dec
outsb
sbb
das
enter
mov
dec
leave
sti
test
and
sbb
cmp
psubsw
ja
xchg
xchg
in
shll
pop
fistps
bound
ret
xor
mov
lahf
popa
mov
add
jno
cmpsl
lods
aaa
jae
sub
cmpsl
repnz
ret
mov
fldt
adc
dec
mov
add
ds
rcr
mov
jle
push
sbb
ja
repnz
nopl
lahf
in
add
cli
mov
test
and
lock
cmp
xchg
lcall
jbe
cmp
or
fnstsw
rcrl
dec
movsb
push
dec
cwtl
push
xchg
in
clc
mov
mov
xor
cmp
mov
lahf
jbe
adc
into
lret
rcrl
mov
lcall
daa
mov
and
rcl
movsb
cmp
shrb
int
fcmove
cmp
sub
mov
adc
enter
arpl
or
lods
std
stc
cmp
loope
jae
mov
imul
jb
mov
out
rcr
out
mov
sbb
sub
rolb
movsb
test
jae
inc
lea
jb
mov
out
dec
clc
xchg
mov
push
lock
das
xor
mov
pop
stc
pop
ljmp
mov
xor
or
cmpb
out
ret
mov
dec
mov
lods
add
js
push
pop
dec
shlb
dec
je
mov
lcall
fbstp
rcr
call
pop
cmpsl
pushf
cmpsl
sub
cmp
out
pop
sub
sbb
popa
dec
push
mov
or
sub
pop
cmp
popf
lds
inc
push
cmp
stos
xchg
iret
dec
ss
or
std
jnp
sbbl
mov
xchg
aas
add
mov
mov
pop
es
sub
pop
cld
dec
or
or
rclb
decl
cmpsb
xchg
int3
enter
inc
rcrl
lock
cmc
testb
push
pusha
fdivrl
call
adc
outsb
jg
aam
aad
cltd
and
jnp
decl
rcrb
roll
mov
pop
cmpsl
aaa
sbb
jg
jo
lcall
sti
xchg
jle
out
nop
sbb
scas
ret
sbb
nop
hlt
mov
pushf
dec
xchg
cmp
lret
les
jg
fwait
scas
xchg
dec
xor
xchg
pop
mov
in
and
sbb
sub
fidivrl
sahf
xlat
cli
xor
lods
inc
js
cmp
loop
mov
or
mov
push
pop
mov
rep
sub
sub
mov
mov
pop
outsb
cs
push
into
stos
es
iret
jnp,pn
sub
and
sarb
cli
addr16
inc
or
insl
aam
seto
add
push
pop
pop
or
inc
js
xchg
orb
outsb
mov
lret
stc
jg
mov
push
jns
jns
rcrb
dec
sti
xor
leave
cmp
mov
pop
adc
stc
add
mov
push
adc
call
adc
cmp
in
add
inc
pop
and
jno
fnstcw
bound
mov
xchg
orb
mov
rcll
xchg
xchg
and
pop
imul
and
dec
cltd
mov
repnz
sbb
scas
adc
out
add
sbbl
aaa
fbld
popf
ss
ficoms
or
aas
sbb
aam
fwait
xchg
mov
pop
xchg
mov
or
or
sub
rcrb
adc
jecxz
jb
gs
adc
add
clc
movd
xchg
das
mov
jecxz
stos
jge
clc
mov
xor
and
iret
xlat
jge
add
shlb
out
mov
mov
push
test
subb
xlat
int3
aam
fs
orb
sbb
xchg
lcall
dec
test
pop
jne
in
cmp
cmp
inc
arpl
jmp
cmpsb
mov
fdivs
xor
cmp
test
fsubl
je
scas
jle
popf
inc
push
nop
mov
lds
xorb
jp
mov
mov
push
push
sub
mov
sbb
pop
jmp
es
xchg
lahf
sbb
xchg
mov
cmp
inc
fwait
aad
movb
pop
inc
lock
cmp
adc
sbb
jge
mov
jno,pt
dec
push
mov
clc
push
sub
pop
cmpsl
jb
enter
imul
or
imul
loopne
sbb
loopne
pop
push
mov
out
mov
add
loope
insl
loopne
push
or
jg
cmp
sub
test
pop
mov
out
fnsave
loopne
pushf
pushf
mov
mov
fadds
add
xor
rol
jbe
inc
shll
xor
or
movsb
imulb
repnz
sub
push
jo
jo
repz
add
or
xor
jb
mov
es
rclb
in
adc
adcl
fs
inc
inc
loope
insl
in
cmp
ljmp
jl
sub
xchg
push
xchg
cli
and
xor
adc
mov
push
dec
inc
popa
xchg
cmp
iret
push
xchg
xor
xchg
cmp
aas
shlb
xor
cmp
gs
in
add
adc
dec
xchg
xor
inc
jbe
and
fidivs
mov
popf
test
or
imul
xor
xchg
mov
les
mov
lcall
xlat
add
jbe
je
push
inc
iret
and
pop
mov
jbe
adc
scas
test
out
orb
test
sbb
mov
out
je
popa
imul
pop
lods
adc
mov
scas
ret
imul
les
in
mov
push
xor
iret
pop
pop
outsb
add
inc
mov
push
gs
mov
push
mov
mov
jmp
inc
mov
in
sbb
cmpb
pop
push
pop
inc
jmp
or
cmpb
sub
mov
mov
jns
jp
adc
cmpb
loope
dec
insl
int3
testb
and
loope
int3
sub
and
dec
decb
cmpsl
add
mov
add
pop
pop
paddsb
push
push
mov
push
in
aas
cmc
sub
inc
xor
cmp
cli
lds
popl
adc
jb
mov
stos
mov
or
das
in
repnz
push
fs
popa
pop
cmp
push
pop
mov
xor
mov
cmp
jns
xchg
mov
mov
push
sub
xchg
and
fildl
mov
pop
pop
rcr
lahf
xchg
xor
jmp
dec
sub
adc
es
lahf
mov
xchg
bound
sub
testl
push
cmp
out
out
mull
nop
cmpsl
dec
addb
jne
adc
outsl
pusha
fsubl
fwait
pop
jnp
push
imul
in
outsl
sub
dec
jae
pushw
mov
lret
pop
jge
sbb
xor
iret
lods
jg
cli
enter
aad
cmp
test
pop
out
mov
jne
roll
add
sti
mov
cmp
ret
int
adc
cmc
or
add
outsb
mov
push
lret
xor
in
sbb
repz
push
pop
cld
jle
in
cmp
dec
adc
inc
daa
scas
jae
movsb
sbb
mov
cmc
cmp
cs
pop
pop
fistpll
fs
pop
jecxz
xchg
data16
sub
mov
mov
add
clc
sub
xor
pop
adc
mov
xchg
adc
inc
outsb
jno
hlt
and
mov
lret
fimuls
arpl
and
jae
pusha
fcmovnb
jecxz
push
jg
cmp
mov
mov
mov
ss
je
or
fwait
pop
jnp
xchg
daa
sbb
adc
or
xlat
in
imul
les
sarb
add
cmp
popa
sub
jle
cmpsl
outsb
or
xor
cmp
cmp
in
mov
shll
test
jg
sub
decl
out
xchg
cmp
sbb
pusha
xchg
dec
ret
lock
in
pop
int3
fldt
mov
or
fdiv
ficomps
jmp
les
xchg
dec
cmp
sti
jno
pop
lock
aam
sub
out
pop
inc
inc
jmp
or
ss
xacquire
bound
xor
or
push
icebp
pop
cltd
jno
inc
das
int
jae
shlb
pushf
decl
adc
pusha
fwait
test
cmp
and
mov
xor
lret
pcmpgtw
pop
mov
out
pop
cmp
stos
insb
aam
cs
pop
pop
cmpsl
or
and
mov
subb
in
imul
mov
enter
cmc
mov
add
lock
mov
sbb
je
jp
mov
repnz
sti
insl
mull
ficoms
and
add
mov
loope
xor
cmp
adc
int
lock
mov
mov
push
inc
cmp
idivl
xchg
es
add
and
jge
out
push
jp
inc
mov
xchg
repz
inc
in
sbb
rcr
pop
arpl
sbb
push
sbb
adc
add
pop
push
xchg
fsubs
mov
aad
mov
scas
jecxz
imul
cmp
inc
mov
pop
jb
fcoml
dec
or
mov
int
push
sti
in
jns
push
insb
mov
lahf
fnsave
inc
or
jnp
xor
test
inc
cmp
mov
shrl
cwtl
ds
push
mov
add
pop
cmp
cmp
mov
cmc
mov
jb
js
adc
xchg
out
xorb
jno
mov
outsb
nop
mov
scas
movsb
icebp
mov
cwtl
js
and
or
fcoml
sub
pop
inc
dec
sbb
dec
imul
jg
data16
mov
xor
in
xor
pop
lret
clc
adc
stos
stos
mov
aaa
repnz
xchg
subb
xchg
rclb
adc
popf
test
xchg
aad
pushf
fimuls
and
negl
in
cmp
shrl
xchg
or
ja
mov
fisubl
mov
xchg
mov
cmp
into
ljmp
fnstsw
fcmovnu
movmskps
in
insl
fstpl
xchg
sbb
mov
imul
pusha
hlt
std
xchg
iret
pop
inc
scas
ljmp
bndstx
adc
inc
jbe
push
add
in
inc
lahf
cs
sbb
xor
cli
xor
xor
je
arpl
or
call
mov
jbe
cwtl
and
fbld
and
leave
push
jge
and
out
repz
ret
movb
inc
in
call
jne
sarb
ljmp
sarb
ficoml
adc
scas
cmp
cmp
mov
sbbl
xor
fldcw
lods
jne
hlt
or
jmp
jae
mov
pop
les
mov
ljmp
and
cmp
jb
jb
sub
adc
xchg
out
jno
xor
sub
shl
and
push
pop
js
je
aad
hlt
add
xchg
add
test
add
mov
loopne
enter
imul
adc
addr16
push
in
daa
shlb
aas
xchg
test
incl
pop
call
fldt
mov
leave
mov
inc
lahf
and
or
xchg
sbb
out
arpl
or
daa
test
sub
cmpsb
or
lea
mov
fcoml
call
adc
xchg
pop
mov
dec
mov
push
ds
jg
movq
and
pushf
ja
adcl
push
xor
xor
pop
fisubrs
shlb
pop
jnp
jle
mov
es
add
inc
pop
sub
das
int
je
sbb
sahf
orl
outsb
pop
loopne
fwait
mov
cmp
and
paddsw
ja
push
or
inc
idivl
mov
int
ss
inc
push
test
sub
dec
and
xor
dec
mov
out
sub
mov
cmpsl
jmp
fdivs
in
test
cs
sub
cmpl
adc
or
xchg
scas
or
mov
mov
fdivr
aas
inc
inc
mov
js
mov
adc
xchg
sub
and
insb
int3
pop
add
mov
pop
fisttpll
ljmp
dec
xchg
orl
add
and
adc
movsb
xchg
test
mov
insl
cmp
and
adc
and
jno
dec
in
xchg
ds
inc
pop
mov
shrb
out
cmp
sbbl
fdivrs
pop
sub
mov
or
mov
jns
jno
push
mov
pushf
outsl
inc
sahf
dec
inc
jbe
jge
jb
faddp
mov
mov
xor
clc
inc
clc
je
loope
arpl
or
aas
xor
call
dec
in
dec
xchg
cmp
fdivl
popa
xor
movb
push
mov
incl
cmp
sbb
insb
js
divb
or
cs
or
pop
lret
pop
shlb
lret
pop
adc
pop
scas
jno
leave
adc
lcall
mov
adc
jnp
dec
mov
cld
dec
sub
and
adc
dec
sbb
xchg
adc
clc
jb
sahf
stos
mov
gs
lret
lahf
addl
inc
pop
test
pusha
jecxz
int
push
outsb
mov
xchg
cmp
or
push
ficoms
inc
cld
hlt
mov
scas
mov
push
into
shll
les
lahf
out
xlat
mov
lret
mov
cs
pop
adc
in
dec
roll
mov
or
or
push
push
sbb
pop
mov
dec
jae
outsl
inc
add
jnp
mov
rolb
xlat
pop
adcb
jle
imul
mov
jmp
fisttpll
fadd
dec
cltd
pop
out
sbb
cmp
out
cmpsl
or
pop
sahf
push
ret
orb
add
test
add
repz
cmp
pop
lock
in
movsl
aaa
dec
mov
rcrb
and
ljmp
cmpsl
fisubs
xor
inc
mov
fnstcw
and
ficoml
mov
jns
mov
and
sbb
xorb
aas
pop
or
test
cmpsl
mov
add
mull
mov
fcmovu
pop
cltd
jb
cmp
and
shl
mov
cmp
inc
push
xor
icebp
inc
subps
cmp
cmpsl
mov
and
outsb
pop
pop
loop
lds
test
rcl
mov
sub
aad
jg
lcall
adc
add
js
out
mov
clc
insl
cmp
mov
fs
flds
cli
sub
xchg
mov
imul
dec
mov
jp
or
daa
ret
mov
out
nop
ja
insl
cmpsb
add
cmc
out
mov
insb
pop
xlat
ficoml
add
out
mov
std
sub
cmp
rcrb
inc
inc
js
and
and
xchg
pop
jmp
adc
sub
cmc
dec
mov
pop
cmp
ljmp
roll
mov
pop
movsb
push
push
inc
push
mov
add
test
cli
push
fsubr
or
std
jl
nop
add
add
and
xchg
xor
mov
sub
dec
mov
sbb
sbbb
push
add
outsb
dec
xchg
dec
xchg
xchg
xchg
dec
mov
test
je
cmpsb
mov
cmpsl
mov
or
fs
add
mov
ja
jmp
dec
push
inc
inc
mov
stos
cmp
jl
jg
sbb
shll
xchg
outsb
or
mov
xlat
mov
pop
or
inc
mov
stc
fisttps
sbb
xchg
lcall
lret
cli
arpl
sub
lret
nop
lds
mov
addb
std
lcall
dec
or
iret
or
push
fisttps
icebp
pop
fidivl
hlt
push
fdivrp
cmp
sti
pop
aad
addr16
dec
mov
rclb
push
mov
push
in
pop
push
cmp
dec
push
mov
mov
outsb
or
test
jge
add
es
scas
push
sbb
inc
fs
movsb
dec
add
jns
pop
dec
jbe
inc
pop
cmc
lcall
push
pushf
mov
sti
add
ja
out
lret
jge
loopne
push
ja
andb
push
or
or
lods
into
adc
push
lret
sbbl
mov
adc
aas
dec
xorb
xchg
inc
mov
jge
sarb
pushf
ss
dec
in
sub
mov
cmp
test
mov
or
cmpsb
adc
popa
popa
test
xchg
mov
xor
rorl
mov
fstpl
sbb
push
xor
cmc
adc
jmp
cmpl
ror
addr16
fwait
mov
mov
outsb
popf
mov
mov
sbb
das
jecxz
jbe
in
xor
or
sbb
imul
mov
adc
ds
jl
dec
mov
mov
push
in
fmul
inc
mov
cmp
cmp
ljmp
push
inc
jecxz
add
data16
push
xlat
xor
jl
mov
sahf
dec
xor
add
push
xchg
daa
add
push
xor
pushf
mov
jmp
jge
xor
imul
lcall
cld
fstpl
lds
xchg
addl
das
and
cmpsl
repnz
js
push
dec
pop
hlt
mov
mov
xor
repz
into
push
xchg
and
clc
mov
push
jns
mov
or
ror
xchg
fiadds
sub
ss
sti
lods
pop
lcall
data16
push
jnp
sub
in
rcrb
and
and
ss
adc
loop
fdivrs
push
std
ds
or
jecxz
aaa
mov
rcll
mov
push
int3
mov
mov
pop
shlb
adc
mov
mov
pop
push
leave
jg
jmp
sbb
mov
mov
shrb
psrlw
add
flds
in
sub
xlat
loope
cltd
push
jle
ljmp
inc
fwait
dec
mov
je
mov
jl
lret
loope
dec
idiv
pop
dec
push
divl
cli
push
in
imul
pop
clc
std
jne
aaa
cli
aam
pop
inc
xor
lret
adc
pusha
test
sti
testl
xor
ja
sahf
lea
add
mov
in
push
ljmp
das
test
mov
test
daa
sbb
mov
pop
int3
push
js
lea
sbb
and
jno
jno
es
sub
and
cmp
sbb
push
icebp
outsl
inc
sti
flds
vunpcklps
jecxz
pop
pushf
fdivp
or
xor
ljmp
sbb
inc
cmpsb
jno
mov
int3
dec
push
clc
and
loop
adc
stos
out
inc
icebp
push
pop
pop
mov
cmp
inc
ret
testl
lea
mov
cmp
inc
lock
repz
imul
mov
sbb
add
sub
push
bound
sahf
cwtl
iret
jl
vmovapd
mov
bswap
inc
or
addl
dec
xchg
mov
aas
pushf
fisttpl
stc
mov
cmp
out
and
mov
push
xchg
dec
jecxz
add
les
pop
call
mov
iret
test
lret
xchg
jl
mov
jmp
cmovns
mov
fcoms
jl
scas
sti
in
rorl
pop
mov
xor
pop
inc
pop
pop
outsb
sbb
mov
nop
cmpb
mov
or
xor
xor
mov
sbb
dec
loope
dec
mov
jg
sbb
xchg
xchg
dec
into
les
adc
icebp
enter
add
ret
add
repz
lods
push
loope
jns
cmpsl
out
push
cwtl
mov
fadd
test
sbb
pop
sahf
fld
into
sbb
xchg
cmp
add
mov
pop
push
icebp
fldt
andl
xchg
test
fs
lcall
cmp
enter
push
test
xchg
cmp
ret
mov
stc
outsb
shl
pushf
cli
push
mov
jg
mov
cmpsl
mov
stc
out
ss
sub
push
add
mov
xchg
jbe
mov
mov
lea
lods
in
sub
sti
xchg
lock
xor
and
xor
mov
mov
jns
mov
pop
cmpsb
inc
addl
xor
jne
jno
std
cmpsb
clc
push
cmc
sub
sub
shrl
nop
xchg
xchg
call
and
add
or
cld
shlb
mov
loope
ret
dec
add
mov
jno
jae
aam
shll
jo
in
in
pop
xor
mov
je
addl
test
orl
jae
lret
lret
rolb
sub
inc
insb
inc
loope
mov
cmpsl
stc
push
loope
xorl
cmp
mov
imul
jbe
jns
andb
and
sahf
pop
nop
aam
in
mov
push
cmpb
addl
push
mull
push
into
or
jbe
push
popf
popa
push
jge
pop
xchg
test
pop
mov
divb
pop
cli
daa
fdivp
pushf
xor
xor
mov
ja
scas
sub
xchg
jbe
sbb
imul
or
daa
sbbl
mov
imul
lock
popl
xchg
test
mov
lahf
mov
pop
sbb
andb
dec
jne
pop
test
cmc
inc
xlat
sahf
testb
mov
je
ret
cmp
decb
insl
mov
adc
dec
insb
mov
fbstp
int
xchg
movsb
test
test
test
or
dec
int3
ss
cld
les
jno
in
scas
inc
or
addr16
enter
sbb
call
mov
sub
mov
mov
int
pop
jbe
mov
mov
insl
imul
push
fwait
out
jmp
mov
insb
loope
ret
cmp
aas
sbb
sbb
pop
fcmove
sub
push
je
lahf
lea
subb
push
jo
pop
pusha
xchg
je
icebp
inc
movsb
pop
xor
add
jbe
iret
mov
sbb
dec
roll
lds
adc
xchg
jns
dec
mov
push
and
or
roll
gs
fnsave
jnp
test
out
mov
out
push
mov
inc
imul
xchg
and
pop
movsb
pusha
fistl
inc
fdivr
cs
sarb
push
mov
xchg
pop
int
mov
xchg
add
and
push
sbb
out
out
cmp
add
xor
add
mov
movsl
jg
mov
sub
es
fimuls
or
stc
ja
sub
shl
subl
or
and
push
fsubl
mov
push
and
or
fists
push
mov
loopne
rcrb
sbb
lret
lods
stos
adc
lods
mov
or
mov
cmpl
in
and
lahf
push
testb
in
mov
jbe
imul
xchg
dec
cmp
lcall
rol
mov
and
or
mov
or
xchg
push
lods
out
jns
iret
pop
enter
lods
hlt
popa
scas
ds
cwtl
lret
lods
adc
add
pop
mov
push
scas
jae
addl
fs
fistpll
mov
adc
insl
ljmp
mov
test
outsb
cs
inc
ds
insl
xchg
pushf
xchg
or
xor
xor
jl
inc
mov
jl
and
dec
sbb
lods
jae
clc
inc
cmpsb
in
shll
pushw
fildll
lods
push
mov
add
sub
pop
xchg
and
test
sbb
inc
cmp
xor
mov
aaa
adc
mov
sub
xchg
adc
lods
call
mov
cmp
jle
gs
jb
push
loopne
add
insb
bound
mov
jg
xchg
sbb
xchg
push
cmp
popf
push
cs
in
fistl
aad
adc
lret
insl
sbb
xor
shrl
out
subl
inc
adc
movsb
lds
test
cmp
mov
js
inc
xchg
mov
movsl
call
dec
pop
jns
test
insl
adc
mov
ja
jbe
xchg
sbb
mov
and
lret
add
and
mov
mov
cmp
mov
sub
stc
ds
mov
imulb
xor
lahf
lret
cmc
popa
push
and
in
pop
es
das
stc
movsb
push
stc
iret
repz
call
repnz
mov
lock
xchg
jge
mov
xor
pushf
pop
fxch
fcmovb
imul
loopne
add
pushl
jge
mov
bound
add
lret
orb
pop
mov
mov
push
das
or
sbb
aaa
icebp
sbb
cmp
mov
iret
mov
test
test
pop
sub
mov
repnz
mov
les
sbb
ds
cmp
or
dec
sbb
mov
xchg
mov
jmp
outsl
test
lds
arpl
pop
pop
fs
adc
imul
mov
aad
sahf
jle
cld
nop
xor
mulb
mov
test
fisttpl
out
aad
mov
inc
dec
mov
adc
dec
jmp
cli
cld
data16
cmpsl
pop
pop
sbb
inc
bound
outsb
icebp
repnz
mov
mov
or
in
xor
repnz
scas
mov
roll
xor
int3
inc
je
cwtl
xlat
adc
int
insb
rcrl
bnd
in
jne
stc
ljmp
insl
mov
jne
arpl
cmp
sub
add
mov
and
cmp
mov
pop
divl
lret
mov
mov
loopne
insb
or
dec
mov
addb
loope
add
xor
aaa
test
add
dec
pushf
mov
leave
les
and
mov
jp
xchg
fld
lea
pop
push
pop
sbb
and
out
sub
lds
fmul
aad
sub
xchg
insb
sub
push
fistpl
or
mov
inc
pop
push
lret
and
gs
push
xchg
das
mov
movsl
sub
into
lock
gs
mov
insl
shll
adc
fadds
cmp
cli
inc
mov
cmp
jg
fwait
lret
sbb
cmc
or
icebp
je
sbb
roll
and
mov
in
cmp
mov
and
jge
dec
dec
dec
imul
mov
and
xor
aaa
sub
cmc
mov
aas
nop
jo
inc
inc
movsl
sbb
pushf
test
sahf
mov
and
add
mov
les
std
into
sbb
mov
and
push
jmp
sar
ljmp
cmp
sbb
push
adc
xlat
push
cmc
mov
or
mov
push
push
jae
mov
in
jbe
or
cmp
outsl
xor
inc
mov
push
mov
jle
ljmp
movsl
pusha
sub
mov
mov
cmpl
nop
or
nop
ret
sbb
xchg
in
dec
lds
add
decl
sbb
cmp
jbe
sbb
stos
mov
lret
dec
mov
test
pushf
inc
push
mov
ror
mov
cmc
fists
xchg
movsb
hlt
loop
pop
xchg
inc
sub
lods
push
dec
popa
aad
int
add
mov
mov
pop
sbb
add
stos
inc
push
sub
pop
push
imul
data16
push
push
push
scas
jmp
daa
test
sti
or
sarb
in
test
out
nop
fmul
add
inc
xorb
jecxz
push
cld
in
andl
xchg
inc
lock
sub
ljmp
scas
fisubs
dec
push
pop
pop
add
add
ret
push
inc
roll
jne
aas
adc
mov
insb
fisttpll
data16
in
faddl
divl
lcall
testb
scas
pop
flds
pop
xchg
add
jo
mov
inc
jae
test
idiv
adc
fildll
sbbl
xorl
xchg
fsts
adc
mov
lret
sbb
sub
aaa
mov
lock
mov
rep
in
test
jmp
subl
pop
xchg
fidivrs
lahf
sbb
stc
imul
inc
dec
stc
and
jg
and
sbb
gs
pop
cmp
push
and
pop
and
mov
dec
cmp
cmp
jp
mov
mov
repnz
adc
push
jp
pop
add
mov
std
mov
in
xor
mov
xchg
ficoms
lahf
stos
dec
lds
je
fwait
xor
cli
fdivl
xor
addr16
fidivl
push
into
sbb
std
or
test
lahf
lahf
fs
leave
mov
jb
sbb
add
push
or
movsl
pop
cmp
in
cltd
cmp
push
cmpb
je
cmp
sbb
or
mov
or
adc
aaa
xchg
pop
lret
add
shrb
gs
mov
incb
movsb
push
mov
faddl
aas
inc
lock
push
push
jmp
sbb
pop
mov
cmp
inc
lret
mov
mov
adc
fs
sti
call
mov
les
cmpsl
adc
js
inc
or
lret
lods
shll
mov
popf
ret
lahf
push
insl
pushl
xor
loope
lods
sub
ret
outsb
or
outsl
and
outsb
fs
push
inc
add
xchg
in
cmc
mov
sahf
adc
dec
cmp
jge
push
xor
imul
fstpl
jae
adc
mov
sbb
sbb
subl
iret
call
push
hlt
jb
mov
cli
movsb
cmp
xor
push
lcall
mov
sub
scas
and
nop
push
mov
mov
xchg
push
imul
xchg
xchg
pop
movsb
pusha
or
cmp
mov
shlb
rclb
cmpsl
xor
xchg
inc
dec
add
ja
and
jnp
adc
sar
cmp
imul
pushf
in
jge
jg
xchg
cmp
je
sti
mov
pop
insb
stc
movsb
dec
push
mov
arpl
mov
mov
pop
xlat
es
imul
shrl
lds
mov
jmp
lahf
push
and
into
cmp
push
cmc
sub
pop
ss
jp
mov
cmpsb
imul
jo
clc
inc
mov
sbb
ret
add
fstp
cmovnp
sbb
pushf
in
xchg
ret
sub
mov
lahf
pop
ret
cmp
push
lds
call
cmp
mov
jmp
sbb
data16
add
pop
dec
imul
pop
and
mov
addr16
mov
adc
mov
xchg
pop
bound
xchg
add
outsb
jo
mov
shlb
cwtl
push
roll
push
in
repnz
mov
pusha
std
pop
addr16
inc
repz
in
pop
xorl
iret
incl
cmp
push
in
daa
fnstcw
jnp
mov
pop
iret
out
sti
adc
and
mov
aam
insb
ret
lds
lock
and
pusha
push
xor
mov
dec
inc
add
das
cmp
xchg
fadd
popl
clc
lea
and
sub
mov
mov
pop
mov
les
or
jo
cli
fisubrl
int3
xor
sub
daa
sti
xor
imul
popa
push
and
push
daa
ja
mov
jmp
insb
dec
dec
push
mov
mov
jl
xor
lret
repnz
jmp
cmp
mov
pop
inc
ret
add
aas
or
lods
pop
pop
aas
ljmp
jl
jb
int3
xor
es
movsl
clc
shrl
xchg
dec
xchg
jmp
pusha
shl
vpsllq
cmpsl
pop
rcrb
mov
xchg
iret
add
and
ret
xchg
pop
out
and
mov
cmpl
mov
sbb
sahf
sub
pop
and
inc
mov
incb
cmpsb
jbe
xchg
sub
pop
add
out
add
jne
dec
addr16
fwait
mov
loopne
mov
push
or
push
mov
add
mov
cmp
xchg
jae
repz
mov
test
add
push
bts
aas
ljmp
push
push
fwait
jno
jb
loop
sub
dec
xchg
fs
dec
icebp
pop
hlt
sub
and
add
fsubs
loope
bound
xlat
mov
jle
aad
mov
lds
bound
sub
mov
inc
cmp
inc
stc
jo
test
sbb
and
pop
jmp
dec
test
adc
cmp
rcrb
lret
cmp
arpl
jno
xchg
insl
movl
pop
dec
test
out
setns
outsb
lods
ror
loop
push
push
xor
cltd
xchg
rorb
cmpsl
shlb
out
outsb
leave
mov
sbb
mov
les
adc
pop
test
or
jbe
mov
pop
cmp
lret
push
push
imul
ss
xchg
add
or
or
and
movsb
in
push
adc
xchg
lcall
sbb
push
data16
add
aas
cmp
and
arpl
scas
mov
fisttpl
cmp
cmp
cltd
mov
add
push
dec
gs
or
fst
loope
pop
scas
adc
mov
adc
pop
pusha
aam
inc
push
fstpl
mov
push
jo
je
rorb
inc
inc
out
in
or
add
add
ret
outsb
pop
test
sub
jnp
cmc
dec
or
mov
pushf
addl
mov
fnstcw
push
rorl
jne
adc
cwtl
pop
jae
mov
dec
aam
repnz
scas
ss
inc
lret
jmp
cli
mov
aas
ficoms
dec
fsubl
scas
leave
dec
addr16
es
and
ss
mov
fcmovb
fmull
and
arpl
jnp
dec
xchg
rcr
mov
sbb
mov
dec
or
cwtl
push
inc
xchg
xor
loope
int
mov
mov
call
jae
data16
enter
aaa
jle
mov
aad
divl
not
js
jle
lahf
mov
add
popf
je
js
mov
pop
out
pop
dec
dec
sbb
pop
sub
iret
inc
adc
xchg
cmp
cltd
subb
cmp
cmpsl
dec
mov
mov
mov
mov
and
dec
ja
jl
hlt
jmp
mov
out
or
aam
push
lods
and
sti
stos
xchg
pop
pop
out
cld
gs
dec
xor
dec
lods
and
mov
push
sub
jmp
mov
mov
jge
popf
push
sub
xor
test
sbb
lods
cmc
aas
pop
in
jo
pop
push
jbe
add
pop
clc
adc
xor
ss
loopne
lea
sarb
fstp
push
xchg
xchg
dec
je
dec
test
adc
faddl
or
cmpb
inc
jmp
fchs
arpl
mov
add
mov
in
test
cs
sti
js
stos
outsb
and
jp
test
sub
cmpsl
prefetch
dec
inc
jg
adc
leave
pop
cmp
lcall
test
pop
stos
fsts
fucom
out
xchg
add
test
adcb
pop
xchg
add
fldenv
mov
cmpsb
jecxz
les
push
mov
xchg
je
imul
shrl
loop
lock
pop
das
jle
or
stos
sub
xchg
push
lods
pushf
daa
in
cltd
pop
cmp
rolb
push
pop
adc
aad
mov
loope
enter
push
mov
jmp
cld
add
aas
sub
add
loopne
xchg
pop
into
mov
inc
pop
popf
dec
jl
shrb
test
popf
adc
scas
mov
push
aas
jmp
addr16
pop
jge
mov
pop
adc
insl
cmp
notb
pop
push
mov
mov
add
inc
das
stc
sbb
jecxz
inc
pop
subb
sbb
fs
jnp
add
int3
negb
call
push
push
adc
or
les
sbb
xchg
enter
outsb
mov
dec
inc
stc
jmp
push
jle
mov
shrb
int
xchg
clc
pop
jae
dec
fisttpll
dec
xor
adc
mov
mov
cs
xchg
push
test
mov
loopne
icebp
push
cmc
in
test
jns
lock
arpl
cmp
sti
xchg
sub
and
dec
or
bound
in
inc
xlat
repz
xchg
bound
or
enter
jle
sbb
xchg
pop
int3
mov
dec
cmp
mov
jp
sub
sti
pop
jecxz
bnd
mov
inc
in
cmpsb
jle
mov
sub
xchg
mov
mov
inc
inc
cmp
xchg
std
cmp
inc
jle
pop
xchg
aam
imul
inc
mov
ja
push
xchg
jno
add
mov
dec
cmc
arpl
popa
adc
cli
push
movsb
jecxz,pn
lret
clc
adc
add
push
shl
loope
lock
rol
mov
fs
adc
sub
rol
inc
setno
rorb
es
sbb
ss
mov
gs
sub
mov
loop
jb
jbe
mov
pop
inc
inc
sub
test
shrl
sar
pop
hlt
pop
divb
sbb
mov
jns
rcrl
imul
stc
mov
enter
fiadds
cmp
scas
pop
mov
cmp
mov
xor
xchg
js
jmp
enter
fisubrs
xrelease
ret
dec
in
mov
in
mov
outsb
movsb
inc
adc
lods
cmpsb
inc
stos
outsb
jns
dec
mov
dec
outsl
mov
cmpsl
addb
sbb
subb
inc
movsb
sub
push
sahf
repz
inc
es
jmp
xchg
loopne
push
sub
push
imul
hlt
mov
clc
jo
dec
xchg
inc
or
pusha
aas
sbb
jmp
cmp
xchg
or
jnp
xchg
sub
push
and
mov
lods
mov
jmp
scas
test
mov
daa
cs
xor
xor
mov
mov
cmp
xor
ret
cmp
cmpsl
or
xlat
int
int3
cmp
jb
out
cltd
fstl
mov
pop
lret
mov
xchg
outsl
sub
jmp
pop
ss
fldt
adc
mov
int
sub
push
dec
enter
and
pusha
xchg
xchg
cmp
stos
rcrl
sbb
mov
fdivrs
cwtl
xor
xor
mov
push
test
push
inc
roll
push
or
add
mov
mov
xchg
cld
mov
insl
leave
fdiv
lods
enter
and
gs
push
and
adc
adc
mov
jbe
subb
and
push
js
aad
sub
xchg
pop
mov
pop
adc
sbb
ds
or
fdivl
leave
aad
add
mov
out
pusha
stos
test
in
aas
clc
movsl
cmpsb
lea
or
testl
mov
ficoml
dec
shlb
orb
enter
adc
std
push
test
sbb
xchg
daa
mov
cmp
dec
lret
sbb
mov
cmpsb
or
lock
call
lcall
dec
cmp
mov
inc
xor
sbb
aas
test
fistpl
iret
pop
dec
dec
leave
inc
sahf
divl
xchg
inc
mov
ljmp
and
popf
sub
push
test
pop
xchg
fimull
adc
cmp
idivb
sbb
cmp
jno
inc
fwait
stc
test
in
inc
das
add
jp
push
or
jp
jnp
xchg
push
and
jmp
popl
mov
jns
test
pop
ret
test
xchg
mov
fistl
cmc
push
jnp
sbbb
out
daa
cmp
and
jl
es
lods
cmp
pop
sub
lret
jb
in
xchg
lock
push
mov
lock
mov
lcall
stos
mov
loop
cmc
adc
jp
lcall
mov
jmp
xchg
xor
mov
insl
int
jg
push
fistpl
xchg
fwait
sbb
das
dec
lret
inc
subl
cmpsb
mov
xchg
mov
pop
push
iret
sub
stos
lds
or
and
pop
pop
add
std
xchg
cmp
es
imul
mov
xlat
add
pop
mov
push
mov
or
and
pop
push
pusha
jl
adcb
je
test
in
pop
mov
mov
mov
int3
cmp
push
ret
jae
jge
data16
mov
aad
jno
repnz
jb
es
mov
mov
and
mov
es
aas
xchg
mov
out
mov
addr16
mov
adc
call
mov
or
pop
push
adc
loope
cmp
fwait
aam
cs
pop
xor
mov
push
rorl
pop
inc
notl
in
loop
cmp
hlt
pop
adc
dec
mov
lea
push
jl
fcoml
rcll
or
les
inc
jg
in
jg
mov
sbb
mov
xor
jecxz
cld
adc
and
leave
and
sub
pop
daa
cltd
inc
sbb
pop
sub
stos
push
adc
mov
push
movsl
mov
lea
aam
cmpsb
pop
xchg
sub
inc
ja
push
les
add
pop
mov
clc
lods
mov
and
xchg
mov
push
xor
xor
fisttpll
lahf
rclb
xchg
ds
int
push
cmpsw
and
notb
push
jg
dec
loopne
and
and
shrb
mov
push
or
imul
or
fadds
fsubrs
cli
inc
popa
adc
sbb
lods
stos
mov
into
out
movsb
repnz
out
jae
out
lds
or
sub
sbbl
fcoms
test
push
mov
loop
fistl
xor
outsl
mov
cmp
cmpsl
sub
test
jbe
in
xor
mov
xchg
pushl
xor
aad
rcrb
xchg
push
mov
int3
sub
push
repz
das
mov
mov
mov
mov
fs
mov
xor
int3
mov
mov
push
xchg
rcrb
aas
mov
and
push
cmp
inc
nop
xlat
jle
mov
jle
sar
sbb
cmp
sbb
push
push
lock
loopne
idiv
imull
xor
xchg
fmull
in
sub
sub
mov
or
sub
jl
sbb
inc
enter
jno
mov
rcr
jae
or
int
push
push
test
enter
and
add
in
sbb
lods
enter
ds
xlat
mov
sbb
sub
mov
fimull
cs
xor
mov
loop
subb
adcb
dec
sub
std
adcb
sbb
jp
addl
shlb
imul
mov
mov
mov
push
cltd
in
add
insb
hlt
fs
pop
sbb
call
xchg
inc
pop
or
ljmp
xor
mov
jns
in
push
mov
mov
mov
cmp
sbb
in
mov
sub
jmp
cltd
pop
jecxz
inc
jmp
cmc
loop
push
lea
outsl
pop
xchg
add
dec
movsl
xor
mov
jnp
or
xor
out
cli
xor
xchg
pop
mov
sbb
lods
insb
fldcw
cs
pop
push
rolb
mov
mov
mov
sbb
pop
mov
shl
test
jns
fidivl
mov
leave
cwtl
push
or
dec
inc
jns
add
sub
or
sbb
mov
aam
mov
and
xor
dec
inc
lea
clc
xor
je
cld
inc
inc
push
jecxz
lea
outsl
pop
mov
xor
lods
jmp
mov
test
dec
rolb
sub
add
je
adc
lea
adc
jbe
push
clc
inc
repnz
jp
loopne
cmp
cwtl
adc
scas
mov
add
fwait
lret
iret
inc
and
aam
sbb
out
cmp
mov
and
add
xor
push
sub
in
xchg
inc
jl
sub
sbb
dec
xor
aas
std
sub
push
not
pop
mov
lea
dec
sub
lret
cwtl
push
mov
out
inc
pop
stos
les
adc
jbe
in
mov
in
push
push
mov
ror
fwait
hlt
clc
icebp
jns
fisttps
push
inc
andb
mov
dec
inc
push
jmp
mov
jnp
popaw
adc
lods
scas
push
andl
cmpb
int
jecxz
or
mov
and
loopne
lds
cmp
dec
ffreep
out
xchg
mov
call
or
jnp
xchg
out
adc
pop
fs
or
ret
xor
aas
fisubrs
xchg
fmuls
pop
xor
imul
jo
movl
jp
cmpl
pop
lds
jb
jecxz
and
mov
push
call
jle
pop
lahf
push
loope
push
xchg
jne
jae
xor
loope
inc
je
sarb
add
and
sbb
imul
lods
sbb
lret
or
das
fbstp
or
cmp
pushf
into
cmp
cmp
cmp
fwait
and
imul
push
or
test
nop
inc
pushf
add
aad
or
sub
addr16
and
mulb
mov
lods
adc
cmc
sbb
iret
xor
lods
jb
mov
xchg
mov
fwait
cli
movsl
sbb
sub
rorb
ret
push
or
adc
inc
stc
sbb
mov
sbb
sbb
dec
ffree
xchg
in
dec
push
dec
loope
add
lea
or
jecxz
dec
dec
add
push
pop
xor
sub
rorb
js
clc
int
pop
aaa
and
inc
lock
ds
mov
les
adc
lahf
ss
inc
mov
inc
adc
xor
lock
adc
mov
pop
cmpsl
ljmp
xor
pop
dec
xor
pop
loop
idivl
mov
mov
das
outsl
insb
inc
sbb
jbe
pop
mov
lahf
imul
iret
cmp
inc
mov
cmp
pop
inc
jbe
lcall
jmp
lret
xchg
loop
xor
pop
sub
jmp
pop
cli
inc
int
adc
into
nop
ja
cs
out
mov
ljmp
adc
inc
xchg
int
jle
in
loop
sbb
repnz
cmp
or
jno
je
jmp
sahf
sahf
sarb
sbb
subl
jo
lock
mov
aas
cltd
mov
dec
enter
xor
rorb
dec
les
mov
adc
repz
xorl
bound
jbe
lcall
pop
push
sub
inc
sbb
dec
fidivrl
sub
pop
adc
mov
mov
dec
xor
jae
enter
testl
ljmp
push
sti
lret
xchg
mov
js
mov
out
ficoml
or
out
js
mov
xchg
pushf
sarl
gs
inc
popa
push
xor
outsl
movsl
ret
mov
dec
jo
daa
popa
pop
dec
lret
dec
dec
xchg
xchg
fnstcw
imul
or
jmp
or
lds
sub
pop
movsl
add
fists
ret
lds
sub
add
jecxz
xor
int3
lods
jmp
add
outsl
pop
sti
inc
push
cli
aad
push
lock
sbb
mov
shl
jg
push
popf
scas
adc
stos
dec
xlat
mov
pop
icebp
mov
out
sti
jb
adc
and
pop
std
jge
mov
sub
icebp
ror
lock
es
outsb
mov
bound
mov
mov
movsl
mov
pop
cmp
cmp
gs
rolb
mov
lds
pop
jno
dec
cmpsb
mov
mov
jb
or
dec
pop
sbb
xchg
sbb
stc
dec
cs
cmp
roll
sub
jecxz
push
push
ret
sub
add
mov
cmp
roll
mov
or
adc
das
mov
out
popa
cmpsb
add
iret
stc
pop
jne
pop
rorl
and
adc
loopne
out
pop
sbb
xchg
stos
or
mov
mov
and
jnp
lods
inc
pop
in
push
mov
jns
sbb
pushf
pop
enter
push
cltd
cltd
ret
pop
cmp
scas
stc
out
lods
xor
ds
lea
sti
and
mov
xchg
sbb
push
and
imul
lahf
jnp
or
popa
shll
sbb
data16
push
inc
add
dec
fldcw
and
add
or
xchg
pop
adc
popa
push
cld
pop
mov
pop
jmp
dec
rclb
movsb
xchg
sbb
cmpsb
xchg
popw
mov
mov
clc
in
and
xchg
mov
dec
fs
leave
dec
loopne
mov
in
decl
addl
fnsetpm(287
das
xor
insl
aaa
repnz
mov
xor
mull
js
js
out
movsb
bound
xchg
ror
push
nop
cmp
and
ret
ficompl
push
testl
pop
mov
fnstenv
shlb
outsb
call
cmpsb
movsl
inc
pop
cmp
sahf
arpl
leave
daa
sbb
std
mov
pop
or
sub
xlat
aam
imulb
imul
imul
stos
leave
cltd
adc
call
cmpsl
int3
xor
pop
pop
inc
jne
or
jno
lock
movsb
push
mov
mov
sbb
mov
dec
aas
xor
push
rcrl
insl
aaa
xchg
aaa
xor
add
dec
jmp
bsf
or
cmp
cmp
jnp
mov
enter
or
cwtl
push
xor
jnp
sahf
pusha
xlat
ja
ljmp
sub
nop
idivb
fsin
das
fisubrs
dec
shll
jnp
mov
sbb
scas
jge
adc
add
mul
or
jle
push
push
push
mov
xchg
adc
in
popa
lea
inc
loop
rcrb
popa
jle
jbe
pushf
fs
xor
movsb
ss
sbb
aam
ficoms
faddp
leave
mov
jmp
ja
fcompl
xorl
scas
ret
jecxz
dec
cmp
dec
fcmovnbe
cld
gs
pop
addr16
or
test
adc
dec
in
lret
scas
pop
lock
rcll
mov
xor
sub
and
ret
imul
mov
sbb
mov
arpl
jb
inc
push
fstl
cmp
jecxz
lods
xchg
pop
fisubs
insl
cmp
sbb
lods
movsl
lahf
lret
mov
xor
ljmp
ficomps
lods
add
dec
sti
xor
lret
cmp
cli
dec
cmp
ficoml
outsl
dec
jmp
inc
inc
adc
push
dec
xor
and
js
inc
popf
cmp
pusha
rolb
aas
mov
add
popa
jg
mov
and
lock
dec
mov
iret
xor
push
addl
xchg
mov
mov
in
imul
mov
mov
jmp
scas
inc
and
cltd
into
xor
mov
lods
stos
sub
aad
aad
addl
ja
mov
add
dec
fs
into
rcrb
cmpsb
out
pop
sbb
push
and
sub
call
lcall
adc
negl
sbb
jae
pop
add
mov
jne
outsb
aad
cmc
imull
sub
pop
xchg
por
jno
push
ds
cld
add
fldcw
add
call
loope
subl
xor
nop
inc
pusha
loope
ret
adc
arpl
enter
xor
cmp
add
mov
sub
and
mov
or
lahf
pop
repz
add
mov
cwtl
and
xchg
cmp
and
movsb
in
push
fsts
xor
pop
sub
imul
adc
pusha
push
jmp
xor
fisttps
pusha
mov
add
jg
jge
pop
imul
movsb
scas
out
sub
mov
sti
fnstsw
cli
xchg
push
mov
cmc
jl
xchg
jbe
loope
movsl
lods
pop
push
hlt
mov
lcall
cmp
xlat
popf
sub
incb
push
aam
or
push
mov
inc
cmp
add
pop
inc
fsubl
or
push
xor
pop
jns
jae
inc
fnstsw
or
mov
cmp
sbb
jmp
cmp
jl
repz
enter
sub
sbb
jnp
push
mov
dec
sub
daa
ret
xchg
and
jecxz
mov
nop
push
daa
or
add
stos
fs
scas
and
mov
sbb
leave
les
popf
es
dec
int3
pop
xchg
sbb
gs
pop
les
or
scas
test
mov
adcb
lret
rcrb
xchg
movsb
mov
sub
into
jae
mov
mov
xchg
jmp
pop
je
mov
xchg
cmp
jb
sbb
push
int3
lea
int
inc
cmpsb
cmp
mov
gs
cmpsb
imul
pop
mov
sub
or
in
jmp
adc
xor
pop
cltd
nop
sbb
push
and
sub
jno
pop
push
mov
dec
pop
sub
incb
mov
scas
xchg
test
push
ds
mov
dec
notb
out
mov
jb
std
sbb
jo
andl
lahf
push
pushf
lcall
cs
mov
push
stos
or
mov
lock
push
push
call
cmp
out
mov
and
pop
adc
or
jae
repnz
fsubr
push
jo
adc
xchg
int3
sub
pop
mov
dec
or
sbb
jl
cli
out
jae
stos
add
ss
lods
iret
sub
bound
xchg
cmpsb
push
insl
inc
and
jns
test
dec
rclb
mov
and
adc
mov
dec
cmc
dec
pavgw
or
popa
in
stos
in
outsb
mull
sahf
mov
out
out
or
push
pop
add
adc
inc
cs
xor
ret
fnstenv
sub
or
mov
cltd
push
mov
jo
add
mov
mov
std
into
test
and
in
adc
loopne
imulb
and
data16
fdivs
stos
rorb
clc
xor
imul
sbb
fidivs
out
jnp
jecxz,pn
stc
cmp
push
testl
xchg
ja
frstor
ret
inc
dec
push
add
mov
mov
mov
loopne
inc
sbb
imul
adc
fs
inc
call
inc
mov
icebp
lds
test
shrb
dec
adc
lcall
ja
mov
loopne
orb
sbb
jae
pop
iret
and
ret
push
pop
ret
xor
jle
lods
enter
adc
lds
xchg
test
dec
lahf
fnstcw
mov
push
stc
std
mov
push
clc
mov
sub
xchg
int3
sti
mov
neg
faddl
js
test
cwtl
mov
je
outsb
pop
cltd
mov
fcomp
insb
jnp
ficoml
cmpsb
mov
mov
adc
or
das
xchg
add
push
mov
inc
xchg
fstl
fnstenv
inc
pop
loop
cmpsl
test
addr16
cmp
jbe
lods
repnz
loope
sub
test
push
movsb
add
or
inc
jnp
inc
fcompl
scas
js
movsb
addr16
jno
jmp
fdivr
scas
mov
std
dec
outsb
push
test
ret
lahf
mov
in
mov
jae
or
xor
cmp
sub
lods
xchg
and
or
mov
lods
movb
sahf
adc
stos
and
mov
lock
pop
es
jmp
cmpsl
add
cmp
clc
aaa
pop
call
popf
add
dec
nop
lea
adc
mov
or
inc
out
inc
test
enter
push
sub
xor
and
pop
xor
xor
shrl
sub
add
shrb
shlb
int
cmp
stc
xchg
sbb
repnz
fsub
pop
add
xchg
pop
in
into
mov
out
adc
movsl
iret
pop
xor
pop
int3
fisttpll
and
add
push
test
push
xchg
push
push
pop
xor
sbb
and
or
mov
insb
mov
xchg
xchg
push
mov
xor
push
scas
mov
je
cmp
movsb
xchg
out
ret
mov
inc
sub
scas
sbb
push
das
je
inc
xchg
nop
inc
in
pop
bnd
inc
mov
sub
into
lahf
sbb
sub
mov
push
adc
pop
fsubr
jl
cwtl
sub
sub
sub
dec
addr16
jbe
and
cmpsl
lahf
xor
orl
cmp
sub
inc
xchg
xchg
and
sbb
xchg
loop
cs
sbbb
jb
lods
jg
mov
fstp
dec
jmp
jmp
xor
mov
mov
adc
stc
adc
icebp
insl
push
mov
push
nop
jo
ljmp
pop
test
and
mov
sti
negl
mov
mov
pusha
outsb
push
jbe
cmpsl
mov
into
mov
rcr
cmpps
ljmp
dec
dec
cmp
scas
out
pop
inc
das
loop
inc
pop
sti
fidivrs
hlt
push
aas
mov
inc
inc
or
insl
pop
std
or
add
and
xchg
mov
mov
push
fst
mov
push
mov
pop
stos
fnstsw
sbb
popa
ret
jecxz
pop
xor
repz
sbb
and
lods
mov
pusha
ds
scas
xor
mov
in
sbb
loope
mov
push
arpl
mov
dec
jne
shl
clc
or
add
dec
ljmp
es
jmp
insl
std
ret
mov
icebp
mov
shufps
addb
cmpsl
sbb
or
ret
sub
xchg
dec
adcb
xchg
test
imul
test
popf
jae
mov
lock
pop
into
lds
test
les
sub
cltd
mov
mov
std
test
popf
test
inc
push
enter
movsb
xchg
cmc
repz
in
sub
icebp
stos
cmp
push
dec
sub
rorl
jo
push
out
xor
add
fmuls
imul
push
add
sub
scas
push
shl
movl
add
sti
dec
adc
xchg
and
inc
popf
xchg
lods
mov
xchg
or
shll
js
dec
mov
mov
cmpl
xchg
pusha
stos
cmpsb
popf
mov
push
and
pop
int3
int3
mov
scas
inc
add
add
pop
jno
pop
push
mov
xchg
mov
or
js
jbe
mov
loop
xor
sbb
dec
popa
dec
mov
fstpl
mov
mov
jbe
repz
pop
jmp
ljmp
int3
push
sub
jbe
cmp
xrelease
sbb
gs
sub
shr
das
fdivl
sbb
mov
sbb
pop
adc
xor
inc
in
cmp
cmpsl
int3
xor
jnp
and
pop
loopne
jb
xlat
jmp
shll
stos
add
fisttpll
incb
aas
scas
push
data16
pusha
es
xchg
pop
std
roll
dec
sti
mov
sbb
adc
sbb
push
notb
xor
cli
movsl
pushf
aad
aad
fldcw
repz
sbb
out
shrl
fs
int3
and
ret
cmp
jae
ljmp
cmp
push
nop
call
add
jo
add
loop
pop
cmpsb
popl
or
int
aad
xchg
xor
std
mov
addb
int3
test
xor
enter
and
mov
bound
jp
fiadds
cmp
adc
xor
cmc
xor
in
clc
aam
xchg
loop
mov
lods
add
das
mov
lcall
fsubr
fidivrs
leave
icebp
xchg
es
add
lods
and
xchg
test
pop
push
lea
mov
and
lods
stos
sbb
arpl
jnp
mov
out
sar
or
ljmp
pop
jns
and
shll
test
lock
mov
in
mov
mov
repnz
cmp
inc
push
arpl
jno
cmp
push
push
lret
aaa
mov
scas
mov
dec
xor
cmpsl
dec
divb
push
call
cmp
cmpsb
test
xchg
xor
sbb
jecxz
lock
adc
adc
cmp
out
lret
cmpsl
inc
push
pop
jge
outsb
push
mov
inc
mov
push
or
inc
push
push
add
dec
adc
cmpsl
iret
push
push
xchg
sub
push
mov
jle
mov
rolb
cmp
mov
pop
in
add
adc
inc
shl
mov
out
cmpps
pop
mov
dec
pop
daa
shlb
jecxz
lods
scas
loop
xchg
jno
movsl
push
movsb
and
mov
stc
popf
sbb
jbe
das
es
stos
xchg
divl
pusha
insl
mov
test
push
pop
jle
xchg
jne
not
dec
movsl
push
xor
xchg
in
xchg
dec
das
popf
out
das
fs
inc
shl
cmpsl
and
je
scas
mov
xchg
push
fs
ljmp
push
popa
lea
xor
sub
sub
fdivrl
lods
push
mov
imul
fsubrl
push
jo
xor
ja
adc
xchg
cwtl
jg
jnp
inc
xchg
scas
sub
xorl
and
push
pop
inc
mov
cmp
or
repnz
testb
leave
mov
jle
pop
insb
adc
dec
push
sub
push
dec
in
push
out
adc
cmpsb
jo
pop
jmp
sbb
sub
popa
nop
jns
repz
sbb
cmp
adc
push
push
pop
inc
push
sub
xor
sbb
push
fdivr
or
and
aas
jg
adc
xchg
sub
add
mov
mov
and
inc
outsl
inc
jno
pop
and
daa
dec
ds
cli
mov
and
jp
movsb
rclb
pushl
push
adc
outsl
xor
dec
mov
int3
or
hlt
xchg
xor
add
andb
dec
dec
cmp
pop
jp
sahf
lock
or
xchg
xchg
into
out
dec
push
sub
out
push
or
push
adc
cli
mov
pusha
xchg
cmp
test
mov
jl
push
mov
mov
imul
jns
loop
nop
test
mov
lds
cmp
rorl
das
js
lret
sbb
ja
enter
sar
addr16
sbb
mull
cltd
iret
fcomps
fisttps
sbb
fwait
and
mov
rcr
cltd
jg
leave
jae
jecxz
jp
in
push
scas
sti
xchg
mov
inc
mov
xor
insb
ret
push
ja
test
and
cmpsb
cli
dec
cltd
xchg
addr16
and
xchg
cmp
and
iret
enter
pusha
dec
pushf
push
sub
popf
loop
test
lods
push
xchg
or
enter
push
pop
es
xor
ss
cs
mov
mov
cli
push
cltd
cs
xchg
jg
fs
sub
fs
insl
jge
cs
call
add
je
movsb
jno
lcall
adc
push
sbb
sti
shll
jae
adc
inc
and
out
subl
cli
loopne
xor
and
mov
mov
nop
cltd
aaa
pusha
shl
add
jne
fadd
or
loope
inc
push
cmpl
clc
cmpsb
cwtl
stc
fsts
inc
mov
inc
pushf
cmpsl
push
pop
jmp
fsubr
xor
dec
xchg
xchg
dec
mov
sbb
pop
xchg
inc
sbb
mov
call
nop
xlat
lret
mov
mov
mov
fadds
push
or
add
adc
dec
into
sub
cmpsb
add
dec
jmp
pushf
scas
jbe
jne
sub
outsb
mov
pop
imul
jg
sub
inc
aas
dec
scas
int
adc
ljmp
mov
push
mov
fiadds
ljmp
sahf
jp
xchg
fcmovu
lock
bound
mov
rcrb
shl
pop
stos
ljmp
out
sbb
loopne
lea
pop
mov
xor
into
adc
mov
adc
sbb
fwait
push
int3
cmc
sub
mov
insb
pop
int3
cmp
mov
mov
jmp
idivb
mov
sbb
xchg
fstl
mov
sti
add
ret
add
pop
sbbl
and
xchg
mov
xchg
push
lea
inc
lods
popf
sub
sbb
outsl
mov
inc
into
adc
pop
sti
or
mov
push
sub
xor
cmp
das
mov
dec
mov
popa
mov
int3
mov
mov
lahf
mov
shll
out
mov
adc
out
push
enter
sbb
lods
divb
aas
cmp
imul
mov
push
add
mov
pushf
jecxz
mov
sti
jmp
mov
rorb
popa
lret
call
sahf
mov
cmp
addb
movsb
pop
imul
cmp
fwait
sub
xlat
enter
or
loop
mov
dec
popa
sbb
mov
inc
shrl
jo
fs
mov
jge
cmpsl
jo
repz
scas
fwait
mov
std
movsl
xor
cli
call
xor
in
rcr
test
rcr
mov
vpperm
ds
or
ret
lds
jb
xlat
xchg
mov
lds
pop
aad
jge
xchg
fsubl
dec
gs
push
int
and
dec
fiaddl
out
ja
mov
mov
dec
dec
daa
jnp
lds
insl
fwait
push
mov
adc
lds
test
imul
lock
cmpl
push
add
cmpsb
ret
sbb
popf
repnz
mov
std
js
or
filds
xchg
pop
xor
gs
orb
cmp
es
push
sbb
in
aas
adcl
mov
add
xchg
fs
sub
mov
adc
adc
test
mov
repz
jp
add
imul
jle
lds
pop
jns
outsl
lret
movsb
sahf
inc
je
pop
in
or
or
mov
mov
dec
mov
aaa
insb
push
and
fistps
pop
movsl
adc
mov
ja
push
insl
and
mov
pop
mov
mov
arpl
nop
xchg
enter
add
scas
cmpsb
push
xor
jmp
nop
pop
scas
cs
add
repz
fwait
or
xchg
in
pushf
fistpll
mov
xlat
sub
sar
lds
mov
scas
pop
out
nop
lock
sub
jge
and
das
cwtl
test
aaa
daa
aaa
popf
pop
fs
pop
dec
jecxz
add
sub
inc
in
imull
dec
push
sahf
ret
scas
imul
or
jb
cmp
leave
lret
xor
xchg
stc
and
or
cs
fstpt
jbe
and
adc
negl
pop
push
push
sbb
inc
mov
sahf
outsb
mov
shl
add
and
jno
in
dec
cmp
mov
mov
subb
pop
mov
pop
int3
jle
xchg
cmp
inc
dec
push
dec
add
lahf
daa
movsb
cmp
mov
sbb
lods
push
rcrb
mov
pop
jae
sbb
xor
mov
and
cmp
push
pop
push
and
dec
jle
add
not
cld
lretw
jbe
addr16
push
stc
mov
xchg
sbb
xor
hlt
dec
lock
movsb
add
cmp
mov
inc
xchg
and
lcall
repz
iret
or
fsin
ljmp
and
jns
movsb
lds
push
cmp
mov
fs
sbb
les
xchg
ds
out
and
xchg
mov
aam
pushf
notb
pop
repnz
or
and
ljmp
inc
sub
add
push
xorb
js
adc
popf
rcr
dec
push
xor
test
push
mov
cmp
aad
in
mov
pop
lcall
add
scas
aas
sub
imul
or
cmp
sub
pop
or
add
movsb
xchg
pop
loope
mov
sti
cmc
loop
mov
movsb
jg
scas
js
xlat
add
jnp
fucompp
mov
dec
adc
insb
cmp
mov
lcall
xorb
out
xor
lock
les
sbb
mov
sti
xchg
cmp
sbb
inc
or
lods
jb
xchg
jge
jnp
shll
fistpl
jb,pt
push
scas
jecxz,pn
or
or
inc
xor
mov
xor
mov
push
bound
push
shlb
mov
push
shlb
ljmp
enter
and
xchg
cmp
incl
mov
outsb
xor
xchg
mov
jmp
mov
push
push
shrb
push
bound
pushf
divb
insl
add
sub
cwtl
fcoms
cmp
scas
out
jle
stos
loopne
pusha
jecxz
cmp
lods
bound
mov
in
lods
sbb
jg
popf
and
add
mov
stc
xchg
and
ret
pop
orb
push
pop
and
push
ja
jb
and
mov
xchg
and
add
and
sub
and
jnp
scas
aaa
stc
inc
pop
xor
hlt
mov
popa
push
icebp
test
xchg
jecxz
js
pop
fldt
pop
fwait
insl
ret
inc
xor
clc
sbb
rcll
cmp
out
subb
sub
push
iret
mov
outsb
ret
jns
pop
or
test
mov
mov
rol
inc
aaa
adc
outsb
leave
lock
adc
movsb
cmp
pop
arpl
aaa
mov
leave
or
sub
loopne
inc
xor
and
lahf
aaa
sub
sub
clc
mov
imul
movsl
pop
xor
je
xchg
fistl
cli
xor
mov
ljmp
mov
into
outsl
int3
pop
pop
cmpsl
and
fcmovnbe
int3
divb
mov
mov
xor
sub
jae
jl
addb
jno
loope
sub
dec
scas
adc
or
test
es
leave
jnp
cltd
add
mov
cmp
jecxz
sbb
cmp
cld
lcall
mov
aad
jmp
add
pusha
aad
push
ret
sarl
mov
cmc
dec
outsl
push
ret
inc
xchg
sub
or
sti
dec
frstor
mov
dec
fdivp
mov
jmp
mov
and
lcall
outsb
cmpl
insl
adc
mov
pop
scas
arpl
mov
pushf
loope
fdivs
gs
or
dec
adc
neg
in
divb
out
mov
cs
stos
stos
lcall
popa
inc
mov
xor
xor
jne
fnstenv
shll
ret
inc
repz
cmc
aam
inc
push
and
sbb
lds
pop
in
sbb
dec
sbb
add
push
mov
sub
lret
mov
lods
ja
insb
sub
sbb
stc
popf
mov
xlat
sbb
ret
js
pause
iretw
pop
dec
imul
mov
roll
sbb
fsubr
popf
stos
or
fistpl
jbe
jge
push
dec
les
push
sub
test
jle
gs
lds
or
mov
popf
adc
sbb
scas
jmp
cmp
outsl
movsl
nop
orb
and
push
ret
fsubrl
adc
or
sbb
les
enter
cld
mov
movsl
jnp
add
in
scas
sbb
adc
enter
mov
rcrb
data16
lods
jmp
fsubrl
out
js
push
pop
dec
loopne
jae
stos
cmc
jp
sub
shl
mov
xchg
push
mov
or
fcoml
ss
rcr
adcb
push
outsl
mov
cmp
fisttps
cmp
pop
add
ret
mov
add
les
scas
cwtl
loope
sbb
inc
lods
sti
pop
dec
and
mov
outsb
and
sbb
adc
xchg
push
into
mov
in
push
ds
sub
push
inc
test
mov
cs
sbb
pop
cmpb
push
cmp
notl
push
addl
testl
gs
cmp
jg
pop
or
movsb
sbb
cmpl
or
xlat
inc
sbb
rorb
or
outsl
test
inc
mov
sub
mov
lret
scas
out
stc
sbb
cmp
xor
mov
mov
and
jle
pusha
xlat
test
dec
pop
stos
mov
xor
or
mov
xor
sti
fildll
cli
jae
out
mov
pop
aam
lret
sbb
cltd
in
mov
mov
ljmp
and
jo
and
xchg
ja
xor
lret
pop
sbb
sub
and
cmp
scas
jle
cmp
push
fwait
arpl
mov
inc
popf
mov
int
lods
pop
data16
cs
sbb
fiadds
and
push
popa
ret
imul
stc
jae
fdivrl
pop
adc
sti
xor
iret
lock
rorb
loopne
stos
fistpll
mov
popw
arpl
sub
dec
repz
or
sbb
inc
cmc
add
cwtl
jne
pop
stc
addr16
call
sub
test
cltd
cwtl
inc
pop
sbbl
int3
outsl
mov
leave
or
jo
je
mov
and
push
call
sub
push
push
jle
data16
adc
or
sbb
xchg
adc
mov
or
ds
or
ret
scas
sub
push
ja
mov
jae
std
xor
jle
xchg
cmp
movsb
or
orb
xor
xor
imul
xchg
push
bound
ds
xchg
sti
cmc
lea
adc
ret
and
cmp
outsl
pop
or
mov
push
sbb
cmp
mov
mov
rol
cmpb
inc
dec
jb
inc
enter
xchg
lods
xor
lods
ljmp
cs
in
and
les
and
xchg
fisttpll
xor
jno
lahf
push
lcall
jg
andb
mov
xor
xorl
ror
xlat
xchg
jns
sbbl
jl
decb
push
xchg
lods
aas
xchg
addl
jae
cltd
sub
repz
dec
mov
stos
or
les
scas
repz
sbb
mov
sub
xchg
xor
mov
ljmp
add
lea
pop
sub
or
scas
dec
and
mov
or
addl
pop
out
pop
adc
adc
pmulhw
call
pop
sub
incl
or
and
jne
aam
lahf
cmp
jl
push
or
mov
xchg
out
lret
or
scas
test
gs
and
mov
js
sub
mov
out
imul
cltd
ljmp
in
pop
or
push
cld
mov
cmp
cmp
pushf
jecxz
subl
sahf
push
shll
sbb
pop
sub
sahf
and
jp
testl
and
inc
stos
leave
cmpsl
movsl
sub
push
les
shlb
aas
call
mov
push
insb
ficoml
xor
out
daa
lret
hlt
loopne
hlt
lds
addl
fiadds
dec
and
pop
lock
fbld
sbb
fld
jmp
enter
dec
mov
jge
lods
cld
in
rcr
clc
dec
inc
cmp
push
adcl
pop
push
push
fs
test
sbb
pusha
fidivrl
dec
cmp
sbb
hlt
adc
popa
sbb
inc
push
sbb
dec
sub
cld
popf
cs
dec
js
xchg
push
cmpsw
sbb
pushf
and
push
aaa
imul
xor
inc
or
test
add
cmp
sarl
sbb
movsl
adc
jmp
ror
lret
xor
xchg
repz
push
sbb
loope
and
mov
push
pop
icebp
pop
or
mov
xchg
arpl
stos
arpl
bound
rorb
cs
push
test
push
add
xchg
cmp
lret
fistl
into
push
stos
insl
iret
and
push
dec
cwtl
lahf
ss
sub
stc
and
or
mov
xor
push
leave
filds
ss
insb
push
pop
add
sbb
nop
lods
or
pop
es
xchg
movsl
daa
inc
mov
inc
mov
aaa
pop
lret
xchg
enter
xchg
dec
jmp
outsl
divb
dec
jne
enter
out
mov
jp
in
mov
add
or
ja
mov
test
jae
jmp
sub
repz
sub
add
dec
push
fsubr
ljmp
in
add
mov
icebp
test
addr16
jno
stc
stc
mov
mov
movsl
popa
ss
cmp
inc
mov
xchg
loopne
js
jno
testb
or
xchg
sti
push
pop
push
xor
mov
jge
xor
movsb
movsl
sub
push
dec
push
lds
or
or
fisubrl
mov
roll
int
dec
sbb
loop
cmpsl
and
rorl
hlt
mov
jno
mov
out
and
pop
xlat
gs
int3
cmp
int
loop
pop
popa
int
cli
lret
mov
dec
cld
xor
int3
or
inc
mov
lds
adc
lods
pop
aad
or
lea
movb
std
mov
rorl
sahf
push
fnstcw
sub
lds
popf
movsl
fidivrl
and
in
orl
idivl
mov
jne
movsl
popa
lds
xor
sbb
jb
addl
sahf
mov
stos
idivb
xchg
mov
call
lods
cmp
jb
jp
lret
pushf
es
add
inc
dec
adc
mov
lock
adc
loopne
add
xchg
stos
sbb
pop
sar
and
xor
fstps
mov
xorl
jae
lret
out
push
pop
pop
xchg
in
sub
outsl
mov
addr16
decl
push
js
mov
je
add
sub
mov
jbe
cmpl
xchg
pop
pop
lock
lahf
jle
dec
in
fildll
push
das
sbb
arpl
filds
jge
pop
push
cli
into
ret
icebp
stc
test
fistl
cltd
xor
bound
adc
adc
sbb
mov
add
icebp
std
pop
shrb
mov
pop
dec
cli
or
and
leave
rcr
into
ret
push
pusha
test
xchg
xor
mov
mov
cltd
popa
movsb
in
push
ds
add
or
ds
dec
int3
inc
shr
sahf
xor
pusha
jge
cmpsb
negb
push
insb
push
out
jae
push
fstpt
push
mov
ljmp
pop
movsb
orb
push
not
mov
ret
filds
cltd
sub
fldl
movsl
loop
out
inc
mov
push
imul
out
sub
adc
jl
add
daa
lret
enter
stc
cld
push
lret
push
mov
jecxz
jmp
inc
fcmovb
and
inc
je
loopne
add
popa
insl
movsl
lahf
mov
ret
rorb
aad
scas
or
push
roll
push
pop
and
or
mov
cltd
das
or
mov
lcall
mov
sbb
jle
dec
cmp
imul
mov
pop
mov
mov
fbld
adc
cld
insb
int
fidivl
xor
xor
mov
sub
adcl
shl
xor
aaa
ja
xchg
pop
and
popf
dec
pop
jb
dec
adc
add
cld
rcrl
add
add
outsl
cmc
out
arpl
pop
sti
lret
sti
rcrl
aaa
testl
push
pop
dec
icebp
cmp
jae
stos
mov
cld
xor
sub
hlt
or
cmp
cmp
mov
js
mov
mov
jl
xchg
mov
xor
sbb
xor
fbstp
shlb
mov
adc
fwait
hlt
jle
stos
xor
jge
mov
fistpl
bnd
dec
orl
xchg
pushf
fisubs
inc
sbb
and
sbb
jle
dec
lret
mov
mov
out
pop
xor
fnsave
rclb
adc
sbb
mov
das
icebp
and
push
xor
enter
test
int
xchg
jecxz
xor
mov
push
mov
nop
cwtl
fnstsw
push
sbb
out
ret
pop
add
push
mov
mov
adc
mov
fcompl
push
adc
add
xchg
push
fnstenv
mov
sbb
int
pusha
pop
pushf
pop
add
lret
outsb
ss
fldenv
push
ja
jg
scas
mov
xor
add
call
lods
out
jg
cmp
ficomps
mov
jmp
mov
test
jnp
push
xor
add
mov
xor
and
sbb
adc
testl
addr16
stc
push
push
cmp
xchg
out
movsl
int3
mov
out
outsl
stos
sbb
sub
cmp
cmp
dec
sbb
inc
add
pop
test
fists
daa
imull
ret
or
outsb
lahf
xlat
and
shl
jp
or
push
push
jbe
push
imul
pop
inc
daa
ficomps
add
icebp
xchg
clc
clc
mov
sahf
mov
dec
bound
lret
mov
adc
inc
pusha
rol
mov
cmpsl
mov
loope
sbb
stc
neg
stos
int
mov
mov
shll
adc
int
test
lods
popf
in
andb
and
jbe
notb
cmpsl
and
xlat
dec
pop
inc
jbe
insb
aaa
nop
aad
dec
push
mov
aas
fimull
cmpsb
pop
pop
xor
mov
pop
lret
and
mov
jle
sbb
sbb
mov
test
sti
push
stc
xor
mov
test
sub
mov
ret
loope
pop
cmp
adc
pop
add
xchg
mov
mov
jmp
jb
dec
cmp
mov
lcall
bound
cwtl
or
and
ds
sbb
mov
arpl
mov
movl
shl
lods
test
and
and
or
scas
aam
mov
dec
sub
push
mov
inc
ret
dec
movsl
adc
add
add
test
inc
add
sbb
add
in
in
xchg
outsl
repz
jge
movsl
ret
push
ror
inc
xor
sub
into
loope
sub
cmp
arpl
jbe
or
ss
xchg
push
jp
lea
gs
add
shl
es
sbb
les
fcmovnbe
push
jl
add
mov
pop
dec
into
add
lock
sbb
dec
movsb
hlt
inc
test
mov
shrb
push
ja
enter
repz
jo
sbb
push
lea
mov
cs
add
inc
jg
and
popa
adc
jno
gs
jae
sti
pop
adc
repz
dec
mov
rclb
or
pop
cmpsl
stc
xor
pop
or
aas
mov
or
or
stos
loop
xlat
push
popf
leave
push
pop
mov
je
cmpsl
fsubs
ja
xchg
int
mov
fldcw
cmc
or
outsb
test
cli
rorb
aad
cmp
jg
cltd
sbb
inc
xor
shlb
aaa
rcl
lds
push
stos
cmp
mov
imul
cmc
xchg
out
into
dec
xchg
mov
cli
fstl
jo
mov
pushf
sub
mov
sbb
sarl
outsl
xchg
std
es
pop
mov
cs
lcall
push
shl
pop
test
nop
dec
add
jmp
jl
movsl
imul
pop
or
mov
mov
shll
inc
daa
cld
pop
cwtl
xchg
andb
es
scas
push
jle,pt
sbb
hlt
sahf
cmp
cmp
xor
dec
push
xchg
idivl
pop
dec
les
lods
mov
inc
repnz
and
divb
sahf
sbb
mov
push
loope
addr16
jb
pop
mov
std
aas
lock
inc
cmc
and
shll
mov
mov
pop
xchg
dec
sbb
bound
xchg
fdivs
es
mov
jmp
insl
or
add
xor
call
mov
push
xor
xor
movsl
int3
jmp
insb
sti
inc
mov
mov
outsl
movsl
cmp
push
aas
mov
push
sar
and
push
imul
mov
adc
into
in
add
stc
inc
xchg
lret
mov
pcmpgtd
cmp
sub
xor
loope
mov
fstpt
mov
jb
ss
cmp
out
push
add
insl
cmc
inc
push
cmp
mov
idivl
xor
mov
repz
mov
mov
shrb
mov
mov
inc
and
pushf
sub
fldenv
loopne
inc
call
xor
mov
jnp
sub
adc
mov
pop
mov
cmp
pop
test
loope
mov
sahf
jle
imul
push
hlt
ret
fidivrl
scas
pop
jge
loopne
stos
cs
subb
xchg
arpl
in
xchg
fisubrl
and
mov
jp
pop
lods
jle
dec
push
fldt
stc
clc
xchg
inc
pop
jge
aam
xor
pop
cwtl
mov
jo
test
mov
pop
dec
into
das
fucom
mov
ret
and
and
cmc
loope
mov
cmp
shll
mulb
outsb
cltd
adc
cmpsl
pop
rcl
sarl
mov
les
in
mov
lods
sti
sbb
sub
fucom
fs
xchg
scas
test
gs
mov
jae
sub
sub
jne
mov
mov
xchg
or
xchg
xlat
lret
in
jg
add
mov
das
push
cmp
cwtl
or
mov
jb
jle
sbb
dec
xchg
int
pop
xchg
cs
test
jae
js
int
cmpsb
mov
js
lds
mov
xchg
scas
es
fs
adc
inc
in
imul
push
fwait
mov
dec
outsl
adc
add
in
mov
cmp
fisubl
mov
adc
inc
and
xorl
jo
int
enter
orl
mov
mov
mov
jecxz
lods
xchg
outsb
ret
pop
aaa
stos
sub
inc
mov
lcall
movsb
sub
add
and
mov
mov
leave
inc
ds
xchg
jp
fmul
ret
xchg
daa
xor
xor
aas
push
mov
dec
das
daa
fs
es
mov
cmp
outsl
xchg
add
mov
shll
xorb
cltd
cmpsl
add
dec
hlt
xchg
adc
xchg
popf
mov
ss
xchg
lock
xchg
cmp
int3
push
lret
addr16
xchg
sbbl
adc
loopne
repz
test
mov
imulb
push
pushf
pop
ret
xor
sbb
mov
push
mov
sub
cli
sub
mov
push
adc
test
or
int3
gs
xchg
cs
push
aad
notl
push
or
rcrb
pop
stos
adc
add
cltd
or
mov
add
xchg
sub
sbb
fldt
cmpb
mov
loop
or
mov
lret
enter
xor
in
pop
cs
std
sbbl
stos
mov
dec
mov
sub
push
push
aad
cmpl
fnstcw
jp
ljmp
xchg
test
jl
jle
inc
jnp
adc
sbb
inc
push
ret
leave
aam
jno
shrb
or
push
loope
mov
lret
lods
popa
inc
dec
movsl
fs
addr16
push
lret
cs
sbb
push
fsubs
mov
cmp
or
pop
ret
cli
sbb
insl
cmp
mov
cmp
clc
jno
cmpsb
pop
xlat
jo
movsl
push
mov
lods
test
push
pop
and
data16
addl
mov
sahf
outsb
jns
cmpsl
mov
adc
movl
je
xchg
pop
push
mov
mov
rcll
pcmpeqw
xchg
je
enter
stc
and
xchg
std
lret
dec
pop
jns
push
xor
enter
fldt
pop
inc
push
pop
into
aad
sub
dec
fisubrs
mov
arpl
lahf
popa
mul
sub
mov
mov
lock
mov
inc
jno
cld
jo
popa
pop
ja
pop
shrb
pop
push
js
pop
aas
xchg
enter
vpmaxsw
ljmp
adc
movl
push
push
inc
mov
leave
out
jg
mov
sbb
enter
jne
scas
aaa
add
idivl
enter
scas
jl
loop
dec
aas
decl
xor
push
sub
jl
and
jae
lea
or
or
push
adc
pop
push
addr16
fwait
bound
push
adc
test
xor
sbb
inc
cli
lahf
mov
cmp
mov
sub
test
mov
icebp
push
sbb
loop
imul
arpl
mov
js
inc
mov
jg
sbb
jp
sub
sbb
push
iret
outsb
sub
sbb
mov
or
movsb
sbb
and
and
mov
fidivrs
stos
mov
mov
and
in
scas
lods
push
wbinvd
add
insl
sub
xchg
out
push
mov
lds
imul
imul
mov
pop
outsb
xor
adc
call
add
push
push
mov
shll
insl
outsb
push
in
mov
xor
orb
xor
std
in
adc
sahf
add
sbb
xchg
aas
mulb
dec
lahf
scas
lahf
loop
adc
cmp
mov
pop
pop
fidivs
mov
loopne
mov
pop
fdivs
insl
mov
or
mov
or
in
and
adc
xchg
push
adc
fadds
sub
adc
cs
sub
cmp
aaa
xchg
repz
mov
sub
aad
xor
je
cltd
or
dec
fsubrs
aad
jb
nop
ljmp
pusha
or
les
xor
cmp
dec
ljmp
clc
std
out
ret
fsubrp
popf
push
les
mov
add
shl
adc
fbld
leave
setge
test
inc
and
or
loop
lods
inc
mov
addr16
popf
mov
das
mov
pop
pop
out
xchg
aas
dec
aam
cmp
les
movsl
insl
push
mov
fsubs
bound
jno
stos
fistpl
jp
call
je
xor
cs
jb
jb
fmull
bound
adc
popa
pusha
xlat
xor
mov
imul
xor
iret
roll
and
insb
push
xor
mov
test
pop
lahf
dec
or
pop
lret
and
jnp
lcall
fisubrs
and
mov
and
mov
cmpsl
sub
push
sub
push
dec
inc
int
mov
fsincos
xor
sbb
adc
adc
cmp
sbb
sbb
jns
lock
xchg
mov
xchg
pushf
mov
mov
fcompl
xor
mov
sarl
push
xor
or
mov
push
add
and
mov
inc
fsubl
leave
mov
out
fists
aam
pop
cmpsl
adc
mov
mov
pop
or
js
lcall
movsl
addl
loopne
aad
cwtl
jae
andl
dec
xor
add
les
jno
int
push
shll
in
push
outsl
shr
jecxz
adc
inc
mov
xor
icebp
xor
test
aaa
insl
jecxz
in
pop
mov
jne
filds
sub
out
or
sbb
aaa
mov
negb
ss
add
les
outsl
sub
aaa
inc
mov
inc
jno
andl
pop
aad
or
out
add
data16
jns
sub
shll
idivb
icebp
mov
dec
cmc
incb
xchg
adcl
movsl
rol
jmp
push
call
out
mov
adcl
push
cmp
std
xchg
sub
popf
xchg
rcrl
pop
inc
jno
int
mov
test
push
add
aaa
or
mov
sbb
movsb
push
mov
xchg
xchg
jmp
sub
rcrb
int3
push
cmp
push
mov
fists
jge
inc
leave
mov
or
loope
add
nop
mov
pop
jae
pop
bnd
pushf
lcall
aad
mov
push
insl
popf
dec
lret
push
imul
addr16
cld
or
aam
call
jmp
lcall
mov
push
pop
adc
cmpsl
jne
push
sbb
test
mov
jae
pop
int
imul
shlb
insb
mov
rorl
lods
sbb
lret
loop
mov
mov
mulb
pusha
cld
shl
mov
cli
test
iret
push
adc
xchg
pushf
jge
cltd
cmpps
sbb
in
repnz
xor
dec
mov
fs
sbb
iret
aaa
lea
sub
inc
push
pop
cmp
fnstsw
pop
outsb
or
outsl
pop
rcll
cmc
cmp
loop
mov
pop
xchg
or
mov
jmp
sbb
adc
fldcw
xchg
mov
jnp
ds
mov
add
sub
push
loopne
popf
inc
jmp
mov
cwtl
lcall
sbb
mov
imul
out
aad
mov
jecxz
push
test
push
mov
pop
sahf
lock
pop
call
unpckhps
scas
mov
lahf
mov
fidivrl
pop
mov
mov
daa
aaa
es
insl
inc
or
pop
dec
sbb
in
gs
call
fxch
aaa
mov
sub
sub
int3
push
sbb
movsb
btc
testb
cli
pushw
pushf
cld
cmpb
push
sub
push
test
shrl
cs
adc
jmp
jmp
lcall
cmp
mov
lcall
mov
push
mov
xorps
dec
notl
dec
and
or
cmpsl
stc
push
xchg
ja
dec
xchg
jno
push
sub
mov
lods
mov
push
int3
into
scas
shlb
inc
mov
or
xchg
jge
mov
mov
loopne
sbb
sbb
inc
fistps
add
test
cwtl
out
out
xchg
cltd
call
cmpsl
mov
fiadds
inc
imul
add
jge
jecxz
sub
orl
ret
sbb
xchg
mov
mov
outsb
adc
mov
movq
in
pop
repnz
dec
jmp
jns
daa
out
mov
and
addl
hlt
and
fsubs
clc
pop
add
cli
dec
jmp
pop
inc
hlt
in
jge
outsb
into
fbstp
sbb
mov
aad
xchg
icebp
and
jne
xchg
daa
xchg
inc
les
addr16
push
inc
mov
test
and
mov
mov
pop
and
or
mov
mov
adc
out
scas
sub
xchg
mov
cltd
add
ret
add
xchg
call
cmp
or
cmp
add
or
loope
insb
sub
in
sbb
ret
out
cmpsl
in
aam
movsl
or
int3
push
mov
outsb
mov
inc
sub
rcl
cmp
insb
cld
sbb
repnz
xchg
lret
fldz
movsl
add
lods
enter
jg
dec
inc
pop
sti
sub
dec
mov
mov
push
or
jns
fwait
jg
ret
lret
insl
leave
popa
adc
cld
icebp
rep
cmp
mov
mov
fdivs
lcall
and
das
jecxz
push
dec
xor
inc
add
jmp
cwtl
movsl
mov
out
insb
es
outsb
fcmovu
ljmp
ljmp
outsb
sub
sbb
shrl
loope
adc
pop
repnz
sbb
push
les
lds
data16
xchg
ss
sbb
cmp
out
stc
xor
sub
inc
dec
std
adc
je
push
addr16
sub
mov
xchg
inc
jl
jne
mov
lock
ds
stc
jge
data16
xor
nop
adc
movsl
lcall
xchg
mov
push
cltd
sub
push
stc
pop
and
xchg
repz
push
mov
dec
lcall
fbld
fs
sbb
lret
sub
fdivrs
jmp
cmpxchg
mov
fisubrl
rcll
enter
es
sbb
mov
into
lods
sub
inc
test
adc
cmpl
inc
inc
hlt
pop
sbb
popf
dec
add
xchg
repz
mov
xchg
sarb
fsub
loopne
or
xrelease
or
add
popf
add
ss
sbb
sti
lret
mov
add
xchg
test
push
adc
mov
xchg
jo
ror
js
icebp
shlb
cmp
pop
adc
jae
insb
je
mov
lods
sbbb
push
xchg
int3
mov
out
xor
mov
add
dec
sub
call
test
pushf
dec
shrl
xchg
mov
shlb
repz
mov
negb
cmpsl
xlat
mov
fcmovnbe
test
je
dec
stos
pop
fbld
fnsave
mov
mov
cwtl
sbb
mov
lock
and
lods
sbb
dec
xor
or
sbb
dec
xor
lods
inc
rclb
in
lock
jo
pop
aaa
out
inc
jecxz
lods
or
and
pop
push
mov
mov
popa
sti
xlat
inc
test
in
cmpl
rol
mov
aam
subb
cmpsl
push
adc
mov
mov
cmp
and
out
repnz
fwait
jge
loope
or
test
lret
mov
out
stos
fists
movsl
cwtl
add
sbb
push
and
in
int
out
lret
pop
mov
fwait
push
pop
cld
pop
ja
xchg
sbb
push
sub
scas
mov
add
push
push
jg
shrb
lret
leave
pop
mov
mov
mov
jl
push
xchg
scas
jmp
xor
sub
mov
test
mov
xor
mov
sub
inc
bts
cmp
or
outsl
jnp
mov
and
mov
out
mov
repz
fcoms
jl
sub
pushf
mov
popf
loopne
fnstsw
jge
jno
test
nop
cld
pop
dec
mov
mov
pop
mov
mov
push
adc
fwait
xlat
int3
std
cmc
bound
rcrl
stos
int
cld
insb
jge
mov
jl
mov
ret
repnz
fld
jne
cli
sub
dec
rolb
jo
lret
repz
lds
bound
add
jb
jge
fs
loope
ja
loop
sarl
jle
mov
mul
leave
lcall
rolb
pop
aad
sub
add
cmpsb
xchg
xchg
sub
xchg
mov
into
cld
jo
push
pop
or
cmp
orl
leave
scas
sub
fs
or
jbe
and
push
sbb
nop
mov
or
xchg
sub
jbe
in
fidivl
cmp
test
adc
nop
hlt
not
cmc
sub
js
fisttpll
push
adc
arpl
sub
jmp
jl
dec
jg
scas
jnp
lods
and
mov
ss
js
repnz
aaa
je
lock
aad
ret
fsts
pop
inc
lret
cmp
test
pop
mov
add
push
bound
das
add
mov
rcl
sbb
inc
icebp
shr
int
insb
inc
push
loop
jge
dec
jecxz
jo
cmc
sbb
and
cmp
cmpsl
mov
inc
mov
pop
push
out
imul
sbb
dec
push
fcomps
lret
cmp
insb
adc
xlat
push
add
dec
jnp
mov
pop
mov
stc
mov
adc
mov
or
and
jl
dec
xor
std
movsl
loopne
imul
mov
test
cmp
cltd
les
xchg
fidivrs
or
push
sbb
xchg
movsb
pop
sahf
shlb
loop
dec
daa
out
mov
mov
out
lea
cli
lods
flds
fs
pop
jns
push
addr16
cmp
movsl
fistps
or
fsub
pushf
fdivrl
mov
add
roll
mov
in
xor
sbb
inc
xor
xor
sub
adc
inc
pushf
cli
and
pusha
dec
fwait
sbb
outsb
in
and
scas
cmpb
mov
lods
popa
adc
sarl
and
into
adc
jb
out
fstpt
shrl
shl
sbb
mov
inc
scas
incb
rolb
jne
inc
js
lret
sbb
adc
jecxz
and
or
cltd
into
enter
pop
loop
xchg
sbb
inc
jbe
fcmove
lret
std
pop
dec
sub
cmp
dec
out
scas
or
or
enter
jmp
xor
xchg
xorl
loop
mov
push
arpl
pop
xorl
cmp
push
fwait
pop
dec
test
int
cs
add
mov
outsl
test
les
hlt
push
lods
inc
or
shll
dec
or
fsubrl
ret
fildl
jno
decl
lock
push
stc
sub
mov
insb
add
cltd
inc
adc
pop
jae
xchg
lret
push
inc
lret
int3
mov
cwtl
or
scas
xor
mov
jge
mov
dec
stc
cmp
loope
das
cmp
pop
xor
cld
sub
loopne
mov
xchg
mov
dec
inc
mov
mov
out
inc
fdivl
jp
xchg
fstpl
xlat
lds
xor
js
insb
sub
pop
imul
pop
jg
daa
adc
cmp
testb
pop
sub
mov
mov
xchg
out
xlat
fwait
and
lret
mov
pop
fwait
dec
sub
in
add
scas
adc
ja
inc
and
aas
iret
mov
inc
les
test
mov
or
or
sub
xchg
testb
and
mov
cmp
ja
ret
mov
icebp
es
scas
scas
sub
fiadds
inc
push
fs
daa
fstps
mov
mov
dec
pop
dec
insl
cmp
inc
pop
dec
out
cmpsl
sbb
pushl
jl
scas
iret
fadds
in
dec
or
shll
ficoms
and
dec
pop
stos
or
ja
stos
mov
sub
mov
pop
jg
inc
or
scas
inc
sbb
fnstsw
pop
ret
xchg
mov
inc
mov
loopne
sub
pop
icebp
inc
or
mov
pop
sub
pushf
cs
jns
cmc
in
or
mov
cli
lods
or
sbb
mov
mov
and
jbe
fadds
add
popa
xlat
xor
mov
jo
sti
pop
sub
imul
lret
nop
mov
pop
test
sub
cs
rcr
pushf
lcall
jl
dec
cmpsl
int
or
dec
cmp
ja
or
sbb
jmp
sub
inc
mov
sub
fdivr
mov
lock
inc
push
gs
je
xorl
cs
jo
inc
jnp
dec
ss
cmp
out
repnz
sbb
and
cmp
mov
js
dec
add
pop
cmp
scas
out
lods
das
mov
mov
pop
in
pop
or
btr
je
jmp
adc
mov
mov
lcall
adc
out
jg
adc
xchg
je
jb
cld
push
pop
xor
mov
mov
push
ss
jb
xor
sub
orl
jo
xor
dec
out
test
nop
adc
mov
cmpl
insl
cmp
out
mov
mov
xchg
push
add
sbb
sbb
jl
test
sbb
es
sub
loop
ss
stos
lock
jae
adc
adc
arpl
sub
dec
push
mov
jns
stc
bound
add
and
ja
adc
dec
rcr
in
jmp
sahf
jne
mov
push
sub
sbb
xor
add
sub
scas
les
cmpsb
mov
jp
test
sahf
jg
mov
mov
mov
dec
sti
movsb
lods
lcall
and
and
shlb
lods
xor
jmp
shr
test
in
xor
mov
in
pop
jecxz
insl
jp
insl
push
cmp
pop
mov
pusha
addb
xor
rorl
sbb
mov
pop
loope
mov
in
sub
test
mov
push
shl
push
shl
cmp
dec
stos
mov
out
mov
mov
push
jl
xor
cmpsl
xor
lret
pop
fsub
mov
push
jmp
dec
xchg
dec
sahf
and
js
dec
enter
pop
jb
cwtl
rcrb
mov
sub
subb
cmp
sbb
jbe
sbb
and
mov
mov
fcompl
aas
adcl
sub
mov
incb
arpl
das
test
pop
lock
div
push
inc
fistpl
sub
test
fbld
mov
mov
outsb
inc
sar
movsb
dec
stos
or
arpl
cld
cmp
nop
test
loope
xchg
movsl
xor
int
adc
lods
jne
push
pop
push
shll
cwtl
mov
sub
sub
xor
jp
fimull
dec
sbbl
jbe
push
jle
fdivrp
mov
rclb
jecxz
aad
sbb
sub
shrl
enter
pop
nop
pop
inc
pop
pop
into
push
lret
and
add
sbb
fwait
xchg
mov
jae
cmp
cmp
mov
mov
push
sbb
fiaddl
inc
add
fisttps
ds
cmpl
dec
nop
jg
shrb
xor
sbb
dec
cmp
xor
lock
xchg
test
popf
pushf
or
inc
fbstp
jb
adc
sub
mov
lahf
xor
inc
lahf
fdivrl
adc
xchg
push
out
cmpsb
mov
xchg
xor
sbb
das
adcl
push
loope
scas
rcrl
nop
jmp
aaa
xor
scas
and
mov
push
push
pop
xchg
dec
das
xchg
call
mov
fcomip
xor
movq
mov
scas
push
dec
test
jmp
rcrb
push
push
sti
or
or
pop
inc
pop
push
icebp
outsl
mov
inc
dec
xor
mov
or
mov
pop
repnz
mov
cmc
fldcw
xchg
push
sbb
enter
shlb
pop
sbb
cmp
mov
push
outsl
push
xor
xor
repz
gs
jno
scas
mov
outsl
jne
xor
jne
push
loop
pop
or
mov
lcall
cmpl
lods
lds
pop
stos
repz
test
and
and
mov
push
jno
jmp
fwait
cmp
into
dec
xchg
out
and
loope
dec
xor
and
pushf
sub
test
sbb
or
int3
dec
add
test
dec
mov
or
pushf
dec
lods
xor
mov
das
push
decb
cmp
or
push
jmp
jg
sub
xor
data16
pushf
ret
sbb
decb
mov
aas
sbb
out
pushf
sti
incl
cmp
sbb
outsb
inc
testl
mov
pop
push
and
mov
adc
or
out
dec
std
outsb
stos
xor
xchg
add
loopne
add
and
dec
imul
test
and
pusha
sub
inc
mov
loop
pusha
jmp
push
cmp
jae
adc
addr16
mov
inc
pop
pop
lods
sbb
sub
inc
mov
int3
fstps
addr16
pop
push
in
and
push
fisubrl
push
fistl
icebp
or
call
repz
jecxz
inc
sbb
aad
xchg
mov
push
aaa
fiadds
inc
arpl
jae
add
jb
push
popl
inc
out
push
xor
outsb
mov
fcomip
mov
scas
popa
mov
push
or
jno
loop
add
dec
push
push
and
push
mov
dec
pop
xchg
pop
sub
pusha
mov
dec
ds
jo
cmc
lea
loope
jecxz
cltd
sbb
add
inc
fcompl
cmp
leave
adc
jbe
lret
scas
int3
mov
jbe
xchg
ficompl
push
lret
lea
xor
mov
and
mov
cmpsb
lea
cs
push
mov
pop
cmp
adc
mov
xor
icebp
lock
or
scas
add
int
in
or
daa
xchg
aam
js
negl
mov
adc
xchg
inc
cmpsl
push
mov
cmp
cld
mov
sbb
test
pushf
sbb
mov
std
leave
int3
loop
sbb
adc
xchg
int3
insl
mov
loopne
cmpsl
mov
out
adc
dec
loop
rcll
sub
push
xchg
sbb
pop
stos
daa
xchg
cmp
sub
lcall
data16
cmp
out
sahf
pop
push
inc
push
iret
xchg
rcr
mov
fld
jl
cwtl
adc
push
jmp
cmp
jns
int
outsl
cli
xor
es
dec
jae
addr16
wrmsr
inc
jo
mov
xor
shll
xor
test
inc
push
cld
loope
dec
xor
xchg
test
mov
cmc
jo
stos
xchg
mov
and
aam
mov
loop
aam
rclb
fwait
mov
enter
mov
dec
popa
movsl
or
xor
notl
inc
add
and
mov
in
mov
sbb
rolb
data16
jbe
dec
lahf
mov
mov
pop
cmp
push
mov
push
out
pop
mov
popf
stc
test
test
lock
add
xchg
and
mov
inc
cmp
outsl
push
xchg
adc
pop
adc
mov
je
sti
add
add
adc
js
cltd
mov
cmpsb
mov
mov
inc
pop
add
mov
mov
pop
sbb
out
bswap
sub
mov
inc
inc
mov
mov
ljmp
imul
sub
mov
ror
mov
and
and
mov
inc
sbb
inc
fists
mov
inc
stos
jle
xorb
mul
sbb
push
pop
xchg
ret
movb
xlat
pop
jmp
out
imul
leave
mov
mov
cmp
mov
or
inc
lds
mull
sub
sub
stc
pusha
and
push
je
jmp
andl
and
dec
sub
mov
shrl
mov
mov
push
stc
cmp
stc
stos
lea
inc
inc
mov
std
inc
lahf
mov
insb
push
dec
mov
pusha
push
inc
int3
or
jecxz
jb
push
add
jp
and
ss
adc
push
loope
mov
jno
fistl
popa
lods
adc
lret
cltd
cwtl
sub
pushf
jns
fs
xchg
push
ds
dec
mov
add
pop
test
pop
dec
jns
stos
fidivs
or
test
lods
inc
outsl
cwtl
roll
sub
mov
cwtl
cmp
xor
fs
negl
jb
pop
cmp
stc
imul
push
leave
push
xchg
sar
lds
xorl
or
or
adc
mov
insb
push
in
jns
xchg
or
aam
or
inc
mov
lods
xor
mov
bound
dec
dec
xlat
mov
jecxz
push
dec
inc
or
sub
mov
test
pop
pop
mov
hlt
mov
popa
ret
aad
lods
inc
jae
roll
in
ret
mov
mov
imul
or
pop
movsb
andl
call
pop
mov
jg
popa
xor
popa
loope
adc
mov
data16
dec
mov
ret
test
push
inc
push
pushf
ds
js
int3
mov
lahf
fsts
aas
push
mov
push
sbb
push
dec
sub
or
adc
lcall
into
fadds
into
mov
mov
xor
xchg
lret
push
push
inc
jmp
lock
sbb
ss
fisttpl
jecxz
and
das
and
xor
rol
xchg
sub
sub
fmuls
xor
sbb
mov
mov
scas
call
jmp
push
sbb
test
stos
outsl
in
dec
repnz
icebp
js
idiv
loop
mov
sarb
repnz
inc
inc
push
rcr
lret
cs
cmpsl
fwait
mov
fsubrp
mov
sub
mov
test
inc
aas
pusha
push
lea
add
mov
mov
test
dec
sbb
or
mov
cwtl
ret
push
xchg
cmp
adc
push
add
orl
push
int3
stos
inc
pop
xchg
mov
in
mov
inc
shl
jecxz
aaa
mov
sbb
push
dec
outsb
cmp
mov
jmp
inc
jnp
int
mov
mov
in
adc
xlat
xor
mov
psubb
mov
cltd
popa
pop
cmp
lock
cmpsb
aas
fistpll
mov
arpl
cwtl
sahf
mov
push
mov
lret
pop
shrl
mov
loope
fwait
test
loopne
scas
push
movsl
mov
mov
cmp
dec
cs
sahf
jns
adc
or
jmp
cmpsl
mov
imul
pop
adc
ror
lret
xchg
mov
jmp
mov
leave
push
cltd
movsb
fcomps
loop
xchg
js
push
xchg
pop
cmp
stos
stc
jl
dec
cmp
iret
cmpsb
mov
lods
or
inc
push
in
dec
divb
jnp
rcl
add
shlb
and
in
push
test
pop
sub
mov
xor
xor
cmpsl
in
jne
xchg
mov
cmpl
fbld
fstpt
add
ficoml
xchg
and
xchg
cmp
fists
and
xlat
hlt
mov
sub
repnz
addr16
mov
addr16
call
push
mov
mov
outsb
enter
xchg
lcall
cmp
mov
mov
mov
lret
in
imul
jns
popa
aam
adc
aad
mov
sbb
adcl
pop
js
push
dec
scas
bound
mov
xlat
lods
inc
add
and
cmpsl
mov
add
inc
ja
dec
cmp
push
mov
in
push
das
je
test
or
sbb
inc
cmpsl
lret
mov
imul
push
cmp
into
mov
popf
movsb
sub
cmp
and
xor
mov
pop
sub
orl
in
adc
sti
push
ficomps
outsl
hlt
fucomi
aad
lods
iret
in
pop
imul
out
push
or
xchg
push
popa
xchg
repnz
adcb
mov
pop
and
cltd
pmuludq
mov
lock
stos
mov
stc
mov
inc
xchg
mov
sub
or
sbb
pop
addb
in
int3
mov
daa
clc
scas
xchg
pop
scas
cmp
jnp
lods
sbb
pop
fcmovne
jne
mov
subl
sbb
push
xchg
std
lahf
jg
jb
mov
push
adc
pop
fsubr
xorl
sbb
stc
dec
add
es
mov
test
dec
js
dec
int3
dec
cld
add
adc
daa
jge
xlat
sar
jbe
idiv
dec
sub
les
in
mov
xor
incl
sbb
jp
inc
xor
cmp
fisubrs
divb
mov
notb
inc
scas
insb
lret
stos
xchg
cs
jb
repnz
pop
mov
fimuls
loope
mov
ljmp
fsubl
fidivrl
jnp
dec
mov
in
nop
mov
in
int
gs
jmp
xchg
js
pop
inc
mov
mov
stos
ret
call
aas
dec
out
stc
ffree
add
mov
or
cmp
orb
fists
mov
in
sbb
not
sub
test
imul
ja
clc
mov
add
das
hlt
sahf
push
cs
and
pop
daa
and
fimuls
and
cmp
sbb
repz
fistps
in
and
jle
arpl
xchg
cmpsl
sub
lea
and
popa
sub
jae
xor
imul
mov
sbb
push
cmp
add
jnp
xchg
dec
je
insl
sub
sub
push
adc
hlt
jo
xchg
aam
repnz
xchg
out
add
iret
je
into
push
mov
stos
fisttpl
dec
stos
push
xchg
adc
sub
jb
pop
mov
iret
mov
mov
mov
pop
imul
adc
andl
adc
out
ja
repz
pop
sub
or
test
mov
lods
fldl
sbb
pop
stos
insb
test
aam
daa
out
enter
mov
dec
adc
pop
sub
mov
pop
adc
clc
mov
in
fwait
shl
jbe
jge
data16
and
ss
pop
xor
and
xchg
and
and
mov
mov
mov
push
cli
push
jns
push
cmp
es
in
lcall
push
mov
gs
and
cmp
mov
in
cltd
clc
test
push
cmpsl
dec
aas
orl
cmpsb
adc
ret
push
mov
dec
ret
incb
add
pop
clc
test
cmp
in
cltd
leave
xchg
jbe
xor
ja
pop
jmp
dec
outsb
lock
xlat
sub
xchg
xchg
sbb
fistpl
push
mov
sub
stos
add
negb
mov
mov
xor
outsb
dec
or
xchg
clc
es
int
jge
dec
inc
jmp
roll
enter
mov
sub
mov
mov
fstp
pop
sbb
adc
insl
in
cmp
adc
jnp
xor
jl
clc
inc
mov
inc
pop
xor
jg
dec
xor
xchg
mov
or
cli
das
cmp
mov
ljmp
xor
dec
sub
or
cmp
in
cwtl
push
xchg
cwtl
leave
sub
mov
nop
add
fs
and
fnstenv
push
mov
cmp
sbb
pop
mov
pop
push
cmc
xor
test
aad
pushl
mov
std
pop
or
adc
inc
xchg
mull
sub
sub
mov
decb
ja
pop
add
push
pushf
dec
fisttpl
push
sbb
loope
cmpw
movsb
inc
in
or
pop
xor
mov
je
js
and
cmpsb
out
pop
test
dec
loope
mov
lds
or
scas
stos
fildl
std
lret
pusha
lock
shrl
pop
xchg
movsb
shll
jae
bound
cli
sub
mov
sbb
sahf
scas
mov
push
sbb
xchg
jle
pop
ffreep
sbb
xlat
jb
pop
sahf
sbb
jmp
stos
loop
inc
mov
dec
adc
xor
or
or
das
mov
xchg
enter
or
mov
jmp
xchg
shll
sub
push
mov
pop
daa
sbbb
lea
push
ret
popf
sbb
mov
in
and
sahf
cld
mov
push
inc
push
mov
cmp
shl
test
mov
and
fs
mov
mov
int
dec
sbb
int
movsl
sbb
add
repz
sbb
mov
push
jge
jmp
rcll
lcall
mov
push
add
dec
cmp
inc
scas
in
xorb
mov
pop
arpl
adc
cmpsb
in
stc
pop
add
divb
pushf
xchg
sub
mov
xlat
jno
scas
sub
lea
push
out
dec
cwtl
pusha
aam
jb
je
push
and
jl
inc
pop
aad
jp
pop
add
xor
std
shl
pop
mov
mov
dec
pop
iret
pushf
jge
aaa
lret
mov
movsb
pop
ret
lock
js
test
and
ret
insl
push
xchg
pop
push
sbb
mov
in
dec
jnp
xchg
dec
clc
push
daa
mov
xchg
and
into
mov
dec
out
mov
ss
mulb
add
inc
sbb
inc
sub
xchg
jbe
pop
push
adc
iret
fsubrl
xchg
aad
pushf
sub
sbb
test
add
xlat
out
mov
push
aam
pop
ljmp
cli
pop
aaa
addr16
add
mov
in
or
fnsave
insb
ljmp
mov
xor
in
ljmp
mov
out
adc
inc
xchg
sahf
nop
pop
lahf
std
test
scas
addr16
fidivs
xor
pop
mov
dec
inc
lock
test
inc
and
xor
xor
daa
cmpsb
cmp
jmp
adc
ret
jnp
push
or
testb
adcl
std
filds
in
pusha
mov
inc
jns
ret
hlt
dec
sub
push
or
jne
sahf
cmp
orb
out
loope
rcrb
pop
xchg
mov
inc
imul
mov
lods
cmp
xor
ja
xchg
pop
mov
sar
ret
cmp
sbb
jge
ljmp
adc
dec
mov
sbb
imul
mov
clc
iret
and
scas
lods
or
jne
inc
inc
fdivl
jae
and
sbb
out
idivl
rcrb
aam
repnz
int3
xchg
fsubl
xlat
fs
clc
xor
lds
mov
lret
push
mov
xchg
je
inc
lock
jnp
mul
push
or
pushf
xor
popf
rcrl
shr
mov
fisubs
leave
lret
aas
push
mov
mov
lahf
out
fs
lods
pop
popf
adc
clc
adc
sbb
cli
mov
adc
mov
add
cmp
movsb
fwait
rolw
jp
pop
sub
jnp
stos
insl
mov
xor
les
push
movsb
jl
adc
mov
xchg
cld
pop
pop
aad
jne
lods
rolb
call
std
pop
out
movsl
enter
das
push
dec
lcall
xlat
xor
lods
pop
dec
aas
es
sub
dec
cltd
enter
pop
iret
or
or
and
or
insl
cwtl
mov
mov
mov
insl
and
xchg
dec
bound
stos
jp
xor
mov
xor
idivl
ds
pop
xchg
dec
test
pushf
cmc
mov
cld
das
xchg
jns
popf
imul
add
mov
adc
xchg
loope
js
mov
xorb
lcall
pop
jns
adc
lcall
aad
dec
mov
out
sub
jnp
cli
mov
xlat
add
lretw
push
test
mov
ja
loop
sub
dec
dec
pop
jmp
mov
push
cli
dec
dec
pop
or
sub
pop
cmpsb
jnp
lea
outsb
movsl
push
stos
mov
xlat
push
cli
xchg
inc
or
in
idivb
mov
leave
jne
jb,pt
scas
scas
pop
inc
jp,pn
test
xchg
fisubs
divb
mov
in
jg
bound
push
std
push
cli
cmp
jmp
inc
mov
loop
fidivrs
popf
imul
pusha
fisttpl
mov
pushf
insb
stos
repz
push
push
das
pop
xlat
push
pop
cs
push
sahf
push
sub
and
xor
pop
outsl
fmull
sub
add
out
mov
push
sub
cli
sbb
xor
or
repnz
jnp
mov
dec
test
mov
daa
xor
mov
test
out
fwait
mov
popa
fmulp
cli
add
out
imul
pop
call
cld
sub
mov
sub
int
test
push
outsb
lret
sub
dec
in
ja
pop
enter
scas
mov
xor
push
popf
daa
lret
push
sbb
or
fisubl
sbb
mov
nop
fmul
ret
xlat
loop
or
data16
enter
sbb
xchg
dec
dec
popf
or
clc
leave
xchg
repz
jge
shll
or
fs
adcb
inc
imul
add
jae
in
repz
push
mov
mov
cmp
jl
cmc
mov
rcrl
mov
jg
pushf
and
fcoml
int3
aaa
add
xorl
mov
out
mov
jns
in
xor
ss
xor
insb
shll
scas
jbe
scas
inc
scas
cmpsl
out
iret
in
pop
es
and
ret
push
push
ror
pop
xorb
adc
cmpsb
mov
outsb
icebp
addl
cmp
leave
push
pop
addr16
mov
insl
leave
xchg
test
xchg
sub
xor
mov
cmp
aad
lret
mov
xchg
pop
cmp
mov
jo
lahf
aaa
jne,pt
in
and
add
add
pop
pop
jnp
jmp
sub
loop
rol
mov
testb
adc
xor
mov
cmp
sbb
inc
xchg
sti
sub
push
inc
aam
sti
adc
lahf
adc
js
out
arpl
jge
mov
push
mov
dec
mov
icebp
adc
in
clc
pop
adc
sbb
pop
mov
jns
ret
and
test
hlt
and
adc
mov
sti
mov
fsts
cmp
imul
cmp
test
mov
insl
xchg
dec
jo
cld
xchg
iret
xchg
sub
push
jmp
clc
enter
push
and
jb
stos
fwait
add
mov
cmp
shl
mov
jp
stc
xchg
jns
or
fdivrl
outsb
inc
mov
jne
and
xchg
cmp
cmpsl
icebp
xlat
test
sub
mov
outsb
sbb
xchg
ret
loop
mov
inc
push
cmp
shrl
mov
sbb
mov
inc
imul
sbb
movl
cmpsb
mov
cmp
fimuls
lret
cltd
fistpl
ss
mov
in
pop
mov
fidivrs
adc
outsb
es
dec
flds
sub
adc
inc
in
inc
dec
dec
push
lods
xchg
gs
adc
adc
ficoms
movsb
stos
andb
sub
push
ffreep
out
adc
lods
lea
mov
in
ss
shlb
pop
outsl
les
mov
movb
adc
or
std
jg
stos
or
adc
mov
dec
xchg
dec
mov
push
nop
jmp
sti
es
sub
and
dec
cltd
fisttpl
es
or
xor
jne
push
out
imul
icebp
stos
push
mov
xor
mov
xor
mov
inc
push
sbb
cmovo
pop
dec
data16
or
cltd
inc
stc
sbb
and
sbbl
xor
addr16
cmpb
add
mov
inc
xchg
mov
stc
shll
fdivrs
xor
stos
lods
enter
xchg
dec
add
xchg
lock
ficompl
mov
out
cwtl
inc
mov
shll
daa
push
xchg
sub
cmc
mov
push
xchg
pop
mov
loop
rcrl
push
repz
iret
xchg
cwtl
lcall
repnz
lea
pop
xchg
fildll
js
jl
stos
pop
ret
idivl
lret
cltd
jae
adc
cmc
cmp
leave
int
adc
dec
inc
push
sbb
inc
add
aas
push
pop
mov
lahf
dec
out
clc
pop
fwait
adc
dec
mov
bound
cmp
roll
xchg
sub
lret
and
jae
sbb
jb
test
fisubs
push
scas
jg
roll
cmp
mov
fadd
leave
push
fwait
movsl
cltd
mov
ficompl
dec
mov
out
dec
fs
jmp
pop
out
mov
dec
add
xchg
xor
mov
repz
sarl
outsb
push
push
test
xor
sbbl
push
lods
add
je
jecxz
cld
lahf
mov
gs
ss
push
pop
cmp
in
cmp
push
or
aaa
rclb
ss
les
xchg
cmpsl
push
loop
xor
cmp
sahf
les
mull
call
cmc
jae
repnz
sbb
or
test
adc
and
cmp
cmc
jb
lods
cltd
dec
jno
sahf
sbb
xchg
sti
out
mov
push
mov
pusha
jno
dec
mov
mov
mov
cmp
popa
sbb
xchg
scas
mov
inc
movsb
dec
loope
cs
ljmp
clc
inc
je
lret
xor
lahf
adc
mov
repnz
in
mov
push
fldcw
out
xchg
mov
lods
push
call
rcll
outsl
xchg
adc
cltd
loop
add
cmc
lock
shrb
popf
lods
rcl
adc
mov
ljmp
inc
ja
std
lahf
int
pop
cli
es
push
mov
dec
lret
xor
jp
pop
out
jecxz
flds
in
ja
out
sti
les
lea
jo
pop
or
les
push
sub
xor
insl
jmp
xchg
outsb
mov
aas
add
or
jbe
and
inc
adcl
in
inc
xor
sub
dec
adc
mov
and
mov
jmp
mov
adc
pop
push
daa
push
shll
dec
adc
inc
add
push
jl
lcall
ljmp
sub
outsb
or
push
push
cld
mov
cmc
enter
pop
cmpsb
inc
and
repz
pop
sbb
shlb
ja
dec
dec
add
sbb
pop
sub
fdivr
arpl
push
out
out
pop
mov
je
sub
loop
xchg
std
and
jle
push
mov
mov
jp
rolb
cmpsb
mov
mov
popf
xchg
xor
mov
stos
rcrb
adc
fistps
and
mov
jae
add
xor
loop
cmp
rcrl
push
ljmp
push
and
xor
imul
mov
xlat
mov
stos
fisubrs
sub
inc
ljmp
les
push
fidivrs
pusha
stos
inc
jo
mov
in
clc
inc
push
int3
loop
xor
popf
jmp
mov
xchg
push
mov
or
mov
loope
and
push
call
dec
push
outsl
ja
mov
xchg
in
lahf
aaa
mov
pop
out
push
sahf
bound
sub
test
push
push
xchg
push
fadd
fwait
push
imul
out
push
das
clc
inc
jb
and
lret
mov
cmp
and
mov
inc
cmc
in
jb
jnp
sub
jb
fidivrl
lahf
jbe
jle
xor
sub
xchg
insb
dec
cltd
daa
div
sarl
imul
int3
mov
sbb
mov
add
adc
xchg
pop
jnp
sti
addb
push
popa
ds
sahf
nop
test
rorl
add
jl
push
xor
icebp
pushf
mov
clts
stos
xor
imul
push
push
jecxz
push
cli
movsl
pop
jp
pop
dec
mov
and
mov
push
jge
test
rcr
or
shlb
mov
jge
pop
addb
shll
push
loope
jecxz
loop
xchg
out
inc
push
or
std
and
adc
mov
sbb
dec
dec
mov
ret
imul
fsub
xor
sub
mov
out
test
imul
mov
sti
test
pop
mov
and
jecxz
xor
adcl
and
int3
hlt
mov
dec
imul
mov
sbb
lds
and
xchg
mov
inc
mov
xchg
call
jle
or
push
es
loope
lcall
inc
arpl
movsb
icebp
or
inc
pop
jae
out
lret
lods
lds
jmp
adc
les
sarb
dec
add
mov
xchg
icebp
in
movsb
rcll
stos
pop
adc
imul
push
stos
jl
gs
loopne
int
pushf
and
xor
pop
inc
ljmp
in
pop
jbe
xor
stos
mov
or
push
inc
bound
xor
mov
mov
es
jbe
repz
lods
jmp
cmp
in
mov
cmpsl
cmc
mov
add
jg
stos
lahf
cmp
test
sub
iret
std
jmp
in
pop
pusha
fstps
xor
out
in
xlat
es
mov
out
mov
mov
add
out
pop
mov
daa
xchg
in
loope
test
jecxz
scas
sub
xor
mov
and
xor
push
test
jno
mov
xchg
rcrl
fucom
or
sub
lcall
pop
in
out
es
insl
sub
push
lds
test
fiaddl
leave
add
jnp
shrb
pop
aas
dec
icebp
sub
repz
fwait
or
cmp
mov
mov
cltd
imul
mov
clc
and
test
adc
inc
xchg
ret
inc
push
add
loop
arpl
jle
daa
lock
ret
add
jnp
sbb
mov
decl
sub
jl
push
sbb
sbbl
xchg
scas
mov
push
sahf
test
inc
cmpsb
push
xchg
cmp
inc
dec
sahf
lds
movsl
dec
xor
adc
shlb
icebp
ljmp
shlb
repz
push
mov
test
imul
dec
lock
pop
popa
into
roll
lds
cmp
jecxz
sub
mov
divl
lcall
int
mov
leave
xorl
jg
push
mov
fnstenv
xor
sbbl
cmp
je
inc
pop
mov
xor
pop
or
jp
stos
xlat
cmpl
int
xor
in
sbb
lock
push
dec
lds
jns
lcall
xchg
adc
out
mov
cmpsl
dec
or
xor
mov
jnp
cmpsl
sub
add
or
andb
mov
inc
fnstenv
pop
test
sbb
pushf
sahf
and
add
push
fldcw
xlat
clc
pop
fimuls
repnz
add
cld
jmp
mov
adc
flds
push
dec
xchg
call
out
add
push
divl
in
or
pop
xchg
jbe
push
dec
pop
pop
out
mov
nop
and
jnp
mov
cmpsl
fwait
inc
in
gs
pop
or
xorl
add
sbb
out
sub
lret
fimuls
arpl
sub
push
sbb
daa
xor
pop
dec
stc
xchg
push
stc
jecxz
mov
push
jne
add
jle
das
and
adc
in
pop
mov
jne
sar
jno
ror
lds
xchg
mov
test
lcall
mov
xchg
sbb
push
cmp
insb
repnz
push
cmc
cli
cmpl
adc
mov
sub
sub
negb
sarb
icebp
mov
lea
pop
flds
sbb
out
or
mov
jmp
out
jl
jns
mov
int
cli
insl
dec
insb
orb
gs
shr
sahf
cmpsb
in
fwait
orb
xor
outsl
and
mov
sub
jp
movsl
sbb
fbld
xchg
in
or
push
push
sbbb
shr
inc
xchg
hlt
mov
roll
rorl
out
inc
scas
fsubs
dec
pop
inc
add
xchg
jo
mov
cltd
jb
daa
add
mov
pop
jecxz
and
push
xchg
in
sbb
not
sbb
add
test
bound
or
sbb
pop
add
test
xor
fadd
lods
jnp
pop
bound
xchg
inc
test
aad
push
in
cwtl
or
adcb
jne
mov
dec
add
push
add
insl
jne
mov
or
or
or
mov
push
mov
sub
and
ja
or
scas
leave
stc
fistps
fisubl
push
aaa
fcoml
pusha
ffree
dec
and
push
mov
mov
and
mov
pushf
or
pop
cmp
or
addr16
lock
lock
je
mov
dec
cmp
scas
loope
bound
sub
out
daa
mov
dec
loope
movsl
popa
xchg
jg
xchg
fsubr
in
mov
dec
mov
mov
jle
mov
jne
rcl
push
jmp
mov
daa
mov
lcall
or
lock
std
jmp
aaa
lods
ja
mov
pop
rclb
xlat
xchg
repnz
xchg
outsb
and
jge
cmp
imul
out
push
ss
or
sbb
frstor
std
mov
inc
bound
out
push
test
xchg
jecxz
dec
mov
jp
xorl
add
jae
outsb
ficoml
dec
xchg
jmp
mov
insl
lds
cmp
sbb
jmp
or
cwtl
push
push
lcall
mov
out
and
jbe
daa
in
jmp
push
sbb
xor
mov
int3
inc
jne
pop
xchg
xor
push
aas
and
in
inc
pop
dec
xchg
js
jb
das
leave
xchg
ret
or
jns
leave
inc
inc
cltd
std
fmul
lret
popf
pop
das
outsl
call
enter
stc
dec
or
xchg
enter
dec
mov
sti
stc
inc
jb
mov
stos
jno
rolb
stc
xor
fiadds
mov
push
iret
xor
sbb
adc
jmp
fwait
sar
out
cmp
ss
push
enter
mov
xchg
xor
mov
pop
stos
add
je
xlat
mov
push
imul
in
cli
mov
xchg
mov
or
pop
adc
mov
scas
mov
popa
fcmove
xchg
pop
mov
xor
sbb
cmp
and
sbb
fidivrl
adc
mov
sub
pop
dec
dec
scas
repnz
mov
mov
mov
jecxz,pt
movb
jno
add
scas
push
fildll
fists
pop
mov
sub
ss
das
and
aas
out
cmp
div
movsb
inc
pop
push
popa
test
push
fisttpll
adc
cmpsb
inc
sbb
sbbb
push
adc
sbb
repz
insl
jo
xchg
int3
mov
cmpsl
lahf
insl
mov
stc
xchg
aad
stc
dec
cltd
ljmp
pop
pop
outsb
das
outsb
out
cmp
dec
mov
lds
push
mov
ljmp
add
xchg
adc
frstor
mov
jno
pop
xchg
shrl
mov
stos
frstor
xor
aaa
je
or
push
pop
addl
push
push
mov
push
out
mov
jmp
inc
icebp
push
add
sbb
mov
popa
add
leave
mov
daa
aad
mov
pop
repnz
jne
jle
vmwrite
lret
xchg
enter
popa
jne
into
imul
mov
scas
push
xchg
jmp
jo
test
mov
repnz
ficoms
dec
clc
mov
shll
and
lcall
in
xchg
mov
pusha
ret
sarb
mov
insl
adc
add
pop
roll
mov
shrb
xor
adc
imul
test
addb
outsb
and
jg
lock
addb
jnp
xor
push
mov
rorb
mov
dec
enter
fisubs
push
rcll
aad
add
jl
xor
out
subl
sbb
repz
test
aam
inc
mov
xchg
sahf
mov
cmc
imul
les
pop
mov
pop
imul
push
sub
orb
inc
ret
sub
mov
movb
mov
iret
mov
xchg
imul
cmpsb
aad
outsb
inc
clc
outsl
jg
mov
sar
test
out
cmpl
or
cs
push
add
lods
xlat
or
lea
dec
xlat
push
jl
shr
and
and
lahf
repz
je
fcmovnu
rorb
push
mov
fwait
cltd
xor
pop
addr16
push
in
loop
adcb
adc
scas
pop
add
push
cmp
xchg
popa
je
inc
jmp
cwtl
in
lret
adc
repz
add
mov
pop
sar
pushf
fcoml
push
clc
inc
test
xchg
shlb
jp
stos
outsb
pop
insb
idivb
jge
push
mov
sub
push
jge
inc
cltd
mov
arpl
pop
jb
adc
pop
aad
fmull
test
mov
or
repz
test
pop
mov
mov
cmc
push
mov
lret
push
mov
or
cmp
insb
jo
std
xchg
pop
push
notl
stos
add
scas
std
xlat
sub
xchg
inc
cli
push
pop
xor
add
imul
mov
bound
push
add
std
push
pop
xchg
jl
sbb
or
movsl
pop
rorl
lds
mov
push
ret
int3
mov
xor
push
movsb
out
rcl
mov
add
pop
push
out
out
mov
out
int3
xchg
dec
adc
stc
callw
aad
je
cmpb
lret
clc
insb
data16
neg
ret
dec
push
pop
mov
sti
decl
sub
cmp
cli
fdivrs
into
lds
out
xorl
ss
adc
dec
fldl
je
sbb
cmpsl
mov
dec
in
xorl
mov
mov
movl
jg
sub
jno
shll
or
mov
dec
arpl
fstl
lret
pop
push
jb
aas
es
inc
and
sbb
push
adc
adc
mulb
inc
lret
sub
cmp
stos
xlat
lcall
xor
dec
out
jo
movsb
in
imul
adc
ljmp
subb
cli
cmpsb
call
sub
cmpsl
fists
pop
xlat
frstor
int3
aam
add
ljmp
rcrb
arpl
in
mov
and
sbbl
fwait
jp
aas
pop
bt
adc
lods
int3
enter
rdmsr
inc
jb
cmp
add
in
xorl
dec
nop
push
push
adc
mov
scas
inc
adc
push
cmp
lret
rcll
push
cmp
imul
inc
aas
mov
xor
out
out
in
hlt
stos
push
mov
sub
in
pop
popf
pop
pop
or
cmp
cltd
dec
shll
dec
or
cli
inc
inc
movsl
cld
inc
mov
shr
mov
xchg
cmp
jo
adc
jp
push
lcall
inc
ja
ficoms
jnp
je
and
outsb
popa
cmp
dec
pushf
jo
shll
fnstcw
stos
xor
stos
fisubs
inc
sub
rclb
mov
popf
and
inc
or
cmpsl
jmp
adc
mov
and
lds
fstps
test
shrb
fwait
cmp
ljmp
pop
mov
cmp
mov
push
loope
stc
inc
gs
pop
sub
fisttps
outsl
mov
or
ljmp
ret
push
cmpsl
sub
mov
mov
cmp
fadds
pop
shll
inc
aam
mov
ja
pop
mov
inc
dec
pop
aad
adc
xor
pop
jnp
adc
in
das
xorl
lds
or
adc
mov
add
bound
inc
mov
add
sub
scas
sti
mov
cmp
mov
fdivs
mov
loopne
adc
les
and
ljmp
out
jbe
fidivrl
mov
ds
mov
mov
rorb
ret
in
mov
ret
push
xchg
or
mov
push
rorb
mov
or
bound
in
out
popf
ljmp
sub
lcall
iret
data16
mov
pop
mov
sbb
jbe
xchg
or
xchg
ds
movsl
in
xor
mov
ds
lret
fcomp
cmp
inc
push
in
idiv
test
mov
mov
push
adc
scas
inc
mov
jne
dec
push
jge
push
mov
loope
ljmp
lahf
idivb
popf
cwtl
inc
cwtl
cs
push
sub
lret
push
cltd
hlt
sub
adc
in
fisttpll
sub
sbb
mov
jg
popf
and
xor
mov
xchg
sub
sahf
cltd
push
dec
pop
ret
mov
and
dec
arpl
xchg
mov
out
adc
test
movsl
sub
adc
data16
in
loope
or
mov
inc
cs
pop
xchg
mov
aas
aaa
dec
and
adc
movsb
inc
in
pop
pop
fstpt
jb
fisubs
fwait
cmpsl
adc
loop
or
cmp
stos
adcb
mov
mov
jb
movsb
and
mov
mov
fldlg2
and
int3
cmp
pop
sbb
xorl
fdiv
in
rolb
andl
lea
cmp
insl
and
sub
lock
loopne
mov
leave
inc
leave
push
lret
pop
xlat
icebp
loop
cvtps2pd
mov
sbb
into
test
mov
gs
jne
cmpsl
in
xor
insb
lret
lahf
inc
clc
repnz
outsl
push
rcrl
cmp
fs
adc
ss
mov
push
xor
push
mov
xor
or
dec
pop
add
mov
jecxz
sbb
pop
pushf
jmp
adc
pop
orb
cmp
inc
inc
mov
and
cmpsb
addr16
imul
in
adc
mov
mov
insb
test
xor
test
sti
jae
roll
lods
push
daa
dec
sarl
es
adc
mov
out
dec
scas
push
pop
adc
inc
stos
xchg
inc
inc
sub
test
or
clc
je
and
popa
rcr
mov
cmp
and
je
repnz
fdivrs
adc
pop
test
cmp
cmovbe
and
scas
inc
test
ret
js
sub
test
ret
shll
add
inc
shr
sub
das
in
gs
lods
or
jns
mov
mov
mov
mov
pop
jbe
push
rcrl
lea
add
rcl
mov
fcmovb
sbb
lea
faddl
jmp
in
imul
je
push
lcall
scas
pop
test
lods
lcall
sbb
cli
and
movsb
mov
jno
mov
movsl
adc
stos
cli
out
add
ljmp
insl
push
dec
or
loop
or
loop
dec
ljmp
lea
sbb
fstl
sub
fdivrs
mov
je
pop
pop
mov
clc
jnp
lods
loop
push
out
or
fdivp
daa
mov
mov
or
inc
outsb
insl
and
push
mov
dec
lea
mov
ljmp
sarb
aam
mov
cmp
sub
inc
popa
in
jnp
and
movsl
cmp
jne
scas
and
ss
clc
lock
daa
or
dec
js
nop
aam
out
push
jl
cmp
sbb
cmc
mov
shl
lock
pop
gs
gs
xor
push
mov
leave
fisubl
ljmp
stos
shrl
out
lock
jb
mov
fists
and
jecxz
cmp
lods
inc
mov
mov
inc
mov
dec
jl
cmpsb
sbb
loopne
or
jmp
in
insl
sub
and
popa
sbb
push
arpl
inc
fwait
push
in
jb
lret
repz
mov
pop
pusha
daa
adc
loopne
fwait
cmpsl
fs
push
daa
push
aas
xchg
sbb
pop
xchg
jmp
dec
jnp
je
in
call
mov
xchg
mov
inc
outsl
ds
xadd
push
sbb
jle
dec
mov
mov
push
fisubrs
sub
dec
fwait
sti
hlt
nop
shll
test
cmpsl
fnstcw
rol
add
lods
jle
and
aas
icebp
adc
shl
out
pop
mov
jbe
in
shr
insb
lret
jb
mov
or
scas
divl
pop
mov
add
dec
ret
sub
pushf
mov
mov
mov
jle
sbb
stos
or
sbb
sbb
cmp
mov
lock
push
mov
stos
and
adc
mov
or
ljmp
add
mov
or
dec
mov
aad
jns
dec
pop
xor
inc
cld
jne
or
subl
cmpb
inc
les
test
jle
sub
jge
and
pushl
add
aad
cmpb
hlt
and
inc
add
cs
xchg
js
jb
mov
jle
cmp
push
dec
popf
xor
ss
aam
push
popl
ljmp
xchg
das
add
pop
sarb
mov
scas
xor
imul
mov
dec
sbb
in
mov
cmp
ja
rcrl
clc
xchg
jmp
mov
je
pop
sarl
lods
fucompp
mov
fmuls
or
scas
imul
gs
ret
mov
xor
add
rcrb
in
fidivrs
jne
out
sbb
mov
lcall
mov
mov
mov
dec
xlat
inc
push
in
lcall
bound
iret
out
repnz
mov
xchg
out
aas
sbb
lcall
adc
mov
es
mov
dec
jne
dec
insl
in
js
aas
sub
lcall
scas
or
out
cmc
fidivrl
icebp
or
jg
mov
or
sub
jne
repnz
mov
divl
push
imul
sub
mov
dec
xchg
mov
or
xchg
adc
out
fucomi
js
rorb
hlt
insl
dec
insl
daa
sub
shlb
adc
imul
cmp
lods
out
test
daa
mov
ljmp
mov
in
cmpsb
and
in
incl
imul
push
and
xchg
xchg
pop
popa
pushf
dec
jno
push
cmpsl
add
add
lds
lods
sub
xor
fsubrl
xchg
pop
push
push
mov
test
bound
mov
aam
mov
and
sahf
pop
push
sbb
xchg
mov
sub
adc
add
jb
hlt
cld
or
push
jl
xor
push
ss
pop
xor
aam
fsubrs
stos
pop
jb
ss
push
dec
mov
sbb
rcrl
or
clc
dec
and
iret
loope
pop
data16
xchg
jno
mov
shrb
mov
clc
lods
test
aad
movsb
cmpsl
mov
pusha
mov
lret
jmp
test
iret
imul
cmp
jns
fidivrs
mov
cmp
outsb
or
push
les
sub
inc
arpl
cld
mov
cmp
pop
adc
or
aaa
jae
insl
test
sbb
insb
mov
imul
xor
and
and
jmp
xchg
mov
push
lret
data16
add
repnz
bound
les
int
stos
fsts
push
inc
je
in
aam
push
mov
mov
repz
sarl
sub
xchg
imul
push
cmc
stc
cmp
aad
cmp
sbb
lret
adc
mov
sbb
int3
shlb
enter
cmpsl
add
hlt
inc
pushf
mov
mov
mov
lock
mov
mov
xor
jl
mov
push
data16
push
rorl
shll
jmp
mov
push
in
rclb
aad
sub
shll
loope
bound
inc
push
aas
or
xchg
mov
inc
push
xchg
mov
neg
sahf
sub
loope
push
sti
sbb
mov
std
pop
xchg
jns
mov
pusha
ss
push
cmpsl
xchg
xor
jmp
mov
in
lods
adc
xchg
icebp
gs
jo
je
adc
or
adc
mov
sub
sarl
in
cld
imul
sti
mov
push
sub
jno
add
add
fsubs
sub
jp
iret
cwtl
out
in
mov
dec
ja
pop
xchg
inc
jecxz
cwtl
mov
dec
subl
jno
lods
movb
jmp
jo
ret
add
repnz
dec
lds
int
xlat
and
loopne
xchg
scas
pop
jg
sti
sbb
inc
jmp
pop
adc
aad
aaa
ljmp
xchg
mov
lea
or
lds
cwtl
fdivp
mov
les
sbb
push
push
jle
mov
ret
imul
loopne
jle
xor
shlb
in
cmp
enter
adc
push
ds
pop
lods
sub
xchg
je
or
scas
movsb
sub
loopne
pop
or
mov
jecxz
mov
and
fimuls
and
add
leave
int
inc
jnp
cmp
test
repnz
fldenv
repz
cmp
add
rol
cs
stc
pop
or
push
imul
cmp
xchg
jmp
pop
call
lds
cld
jle
jno
xchg
sub
movsl
xchg
daa
push
push
gs
fidivs
dec
push
add
cmpl
mov
push
movsl
in
dec
in
dec
jp
adc
xchg
fisubrl
or
add
xorl
movl
mov
push
movsl
rcrb
mov
and
aad
fnstcw
outsb
lock
daa
out
outsb
xchg
test
xor
lret
push
ljmp
or
sbb
xchg
inc
mov
mov
rcrl
xor
jnp
into
or
lcall
dec
or
popf
cld
outsb
inc
pop
inc
push
ficoml
faddl
enter
sub
aas
mov
bnd
inc
arpl
bound
gs
push
sub
loope
xor
pop
loop
mov
pop
shrb
daa
cmp
mov
adc
movsb
lods
lcall
mov
loop
mov
popa
inc
cmp
enter
mov
ja
daa
arpl
out
repz
or
ljmp
scas
sub
pop
lahf
cld
incl
mov
in
lret
mov
test
stos
jecxz
ja
mov
shl
sub
iret
xor
jns
lods
cltd
add
pop
xchg
mov
sub
ljmp
cmp
int3
clc
int3
or
and
adc
test
loop
dec
adc
cmp
mov
icebp
outsb
and
jbe
jo
incb
push
sub
xchg
dec
pop
insl
sub
push
or
push
test
popf
addr16
pop
or
dec
add
push
push
ret
adc
push
lods
cmp
mov
push
mov
bound
inc
sub
push
jo
mov
aam
add
xchg
add
xorb
or
js
cmpsl
push
xor
xor
rcr
mov
cltd
loopne
fdivrl
lock
pushl
jb
mov
fucomi
clc
fcompl
xchg
pop
in
mov
and
pop
push
sbb
jns
ss
push
cltd
add
pop
imul
adc
push
cmpsl
pop
int3
lcall
mov
mov
xor
cmpsb
jbe
lea
push
mov
adc
stos
in
repnz
xchg
jmp
stos
clc
pop
or
lret
or
mov
xchg
mov
in
int3
call
or
bound
or
sub
inc
bound
xor
ret
in
pusha
or
cmp
xor
push
test
scas
sbb
mov
jg
aas
push
insl
mov
xlat
bound
push
int
mov
push
lret
in
push
in
pop
adc
cmpsb
cmp
jno
mov
jne
fcmovb
cmp
xchg
push
shrl
jl
xor
mov
shll
dec
xchg
or
add
nop
xchg
xor
fcmovnbe
out
push
mov
ds
nop
shll
add
sub
cmpsl
filds
xorb
xchg
and
gs
scas
test
cmp
or
lahf
mov
inc
sbb
out
xor
push
adc
cmc
cmpsb
test
fsubl
dec
lcall
daa
dec
mov
hlt
mov
sub
insl
mov
push
out
dec
sub
cmp
sarb
mul
mov
add
dec
xor
les
js
and
iret
inc
mov
jmp
push
and
mov
and
repz
sahf
cmp
pop
adcb
mov
rcrl
stos
in
fldenv
and
mov
inc
ljmp
xlat
aas
sarl
sub
dec
mov
push
xchg
add
push
cmp
mov
mov
mov
cmp
inc
addr16
roll
aas
pop
xchg
fnstenv
push
or
fincstp
push
rol
and
push
mov
push
adc
cmp
dec
dec
mov
ficompl
rolb
out
gs
pop
dec
ret
es
daa
mov
inc
xorb
or
dec
mov
xchg
lret
insb
les
add
fucom
fucom
hlt
sti
xlat
push
mov
push
xor
cmp
xor
sbb
sub
jns
xor
add
jns
push
mov
das
mov
pop
hlt
xlat
je
lea
subb
hlt
outsl
mov
bound
shlb
fs
xchg
leave
hlt
sbb
outsl
lcall
add
push
outsl
xor
add
pusha
pop
ret
push
jbe
push
inc
add
leave
jae
aas
mov
test
jg
sub
dec
repnz
data16
push
xor
xlat
pop
xorb
inc
sarl
inc
sbb
mov
arpl
and
dec
inc
mov
dec
adc
lds
es
push
push
mov
mov
jbe
dec
adc
pop
jmp
jbe
pop
xchg
mov
mov
jle
nop
add
rcll
loop
fistpl
out
pop
mov
imul
stc
lahf
pop
rclb
push
test
mov
js
xor
jecxz
jmp
inc
cmpsb
push
sub
fnstsw
dec
stc
sbb
out
aas
into
jae
fdivrl
adc
push
mov
cmp
cmp
testb
jb
pop
cwtl
je
inc
inc
pop
fs
rcr
dec
ret
add
loope
cmpsb
gs
add
outsb
aaa
inc
and
insl
outsb
pop
push
pop
ss
xor
cmp
push
daa
pop
mov
lock
imul
sub
xor
lods
cwtl
xor
pushf
cmpsb
pushf
sub
mov
je
insb
fs
xor
mov
orl
out
xlat
and
int3
jae
xor
jnp
movsl
xchg
push
lcall
push
cld
ljmp
cld
sub
repnz
or
jno
xor
lock
dec
nop
jbe
mov
dec
sbb
pop
mov
pop
jo
repnz
add
push
jle
in
mov
sbb
mov
jb
push
std
sbb
rol
pop
mov
push
xor
lods
xor
sti
iret
bound
xchg
cmp
jl
add
pop
push
imul
and
xor
std
fs
dec
push
je
add
pushw
jl
pop
sub
fisubrs
aam
repnz
repnz
xor
fnclex
or
xchg
loop
shll
gs
js
pop
cwtl
loopne
jne
mov
mov
sub
repnz
ds
push
xor
mov
jg
sub
dec
outsb
fadd
iret
dec
ljmp
inc
iret
gs
sub
jne
push
or
out
pop
cmp
jnp
sub
lret
mov
jmp
enter
pop
sbb
ss
addr16
shrl
cld
mov
test
test
cmp
mov
ja
mov
insb
adc
and
gs
mov
inc
inc
stc
dec
or
scas
test
push
loopne
movsl
gs
cmc
jg
data16
push
stos
ss
movsb
push
test
mov
inc
push
div
jbe
test
lret
mov
out
rorb
inc
or
lret
pop
sbb
inc
fidivrs
or
jle
sbb
mov
cltd
dec
push
sub
lret
scas
ds
in
jp
mov
and
lods
cmc
xor
inc
sbb
xor
xchg
test
into
into
and
mov
add
cld
ss
mov
loopne
pusha
pop
pop
lret
pusha
lods
xchg
and
scas
jl
cmpsb
ret
or
xchg
sub
lahf
or
push
aam
mov
sub
or
push
and
mov
dec
xchg
stos
push
jmp
out
dec
cmc
push
sub
fsubs
add
orb
fimuls
sbb
loope
icebp
push
jl
sarb
mov
jecxz
jecxz
or
and
shrl
repnz
out
lret
js
gs
icebp
xor
mov
arpl
push
push
pushl
loop
cmpsl
sti
mov
out
stc
mov
dec
shlb
ja
loop
fildl
div
pop
int
add
hlt
mov
sbb
dec
jne
and
inc
mov
mov
fbstp
stc
mov
xchg
dec
aad
sbb
mov
mov
into
jbe
sub
dec
mov
hlt
cld
fldcw
cltd
iret
lea
push
fwait
roll
sub
and
xor
cmp
or
jecxz
mov
sbb
outsb
enter
cs
xchg
call
jne
scas
mov
lods
movsl
out
xor
cmpsl
pop
fcoms
fs
and
push
inc
daa
or
addr16
fsts
stos
push
arpl
orb
add
xchg
lret
sar
ljmp
jmp
jle
outsb
pushf
cld
pusha
or
mov
pop
pop
iret
loop
fadd
jns
sub
xor
pop
inc
mov
sub
sbb
loopne
imul
enter
mov
cwtl
popf
out
test
pop
cmp
pop
mov
rorl
adc
mov
lods
ficompl
int3
inc
push
sahf
adc
lock
jb
popa
xchg
jecxz
inc
fldcw
add
sbb
mov
jae
cwtl
cs
sub
insl
xor
hlt
dec
inc
into
cmp
cmp
out
ja
sbb
movsb
fnstenv
jge
dec
frstor
and
lahf
ss
outsl
sub
fs
lahf
fildl
add
add
out
lahf
mov
cmc
adc
cmp
jmp
dec
je
sub
mov
icebp
es
dec
fidivrs
adc
daa
mov
mov
not
sub
push
xor
pop
and
cmpsb
sahf
push
repnz
mov
ljmp
loope
jo
mov
negl
fists
pop
fst
mov
pop
push
in
or
mov
cmp
insl
stc
push
push
vcmpps
outsl
inc
lcall
in
aaa
loop
mov
mov
mov
pop
rorl
sbb
inc
mov
jne
cld
out
jp
cmp
insl
test
pop
xchg
or
jg
cltd
lahf
insb
pop
push
addr16
lea
xor
jg
iret
push
je
ljmp
jb
xor
cmpsb
in
out
lods
popf
test
and
inc
imul
xchg
sub
dec
jp
or
jmp
xchg
stos
mov
pop
push
sub
mov
jbe
cmp
fdivrl
mov
out
dec
mov
outsl
jp
aaa
mov
leave
leave
xor
cli
mov
jne
cmpsb
adc
xchg
sub
mov
sti
je
vpaddusw
sbb
and
inc
mov
shl
sub
lock
pop
add
jle
mov
xchg
pop
sar
nop
cmpsl
lods
cmp
sub
sbb
lea
xor
subl
fwait
test
fisttpll
mov
mov
outsb
xchg
mov
sarb
or
loop
lahf
push
es
js
notb
inc
inc
xchg
jns
jge
nop
stos
push
mov
popa
sub
ljmp
fmull
mov
clc
add
cwtl
pop
xor
test
cmp
sti
cli
sbb
test
or
int3
je
test
mov
jno
pop
imul
jg
lahf
mov
out
dec
and
insb
dec
mov
push
mov
loopne
mov
cmpsb
cmpsb
lods
cmp
xor
cwtl
mov
mov
nop
faddl
outsb
sti
dec
popa
xchg
rolb
xchg
xor
mov
test
dec
inc
in
arpl
sti
jecxz
adc
orb
adc
adc
popa
das
or
mov
fwait
jne
cmpsl
dec
mov
into
fiaddl
pop
lods
clc
sbb
xchg
fs
ret
xchg
mov
xchg
insl
out
test
shrb
push
or
xchg
mov
rorb
adc
and
aaa
adc
pop
mov
push
push
mov
test
pushl
lret
hlt
mov
scas
pop
pop
push
lods
shrb
mov
xchg
jg
lea
sahf
cmpsb
sub
aaa
jmp
fsubl
pop
divl
xchg
and
mov
mov
xor
in
filds
cmp
xlat
xchg
mov
inc
adc
aam
out
add
fst
pop
xchg
sub
dec
sub
push
jg
in
pop
push
addr16
iret
jp
iret
lds
popf
cltd
in
fwait
shlb
call
dec
in
add
or
scas
call
sub
push
mov
lcall
pop
add
push
push
mov
in
aaa
into
cs
push
push
mov
add
fidivs
cmp
push
jae
or
lcall
or
adc
popa
mov
scas
hlt
insl
popf
pop
bound
push
call
jge
jno
sarl
sub
into
push
fldcw
cld
dec
inc
mov
mov
inc
jp
mov
lds
sbb
inc
inc
ret
test
insl
pop
stos
xchg
xchg
int3
das
xchg
scas
ja
lods
pmaddwd
jo
cmp
mov
mov
add
popf
bound
stc
dec
or
or
cltd
out
cli
jae
xor
add
jo
and
int
test
out
jnp
cmpsb
sti
pop
movsl
loopne
pop
ljmp
sub
push
adc
mov
inc
jecxz
test
pop
add
cmp
stc
mov
and
adc
popa
mov
in
incl
cs
in
shrl
cmp
xor
shrb
scas
cmpsb
jno
sti
in
push
cmp
push
push
mov
scas
ja
mov
insb
or
mov
repz
outsb
inc
push
push
pop
mov
ret
xchg
mov
add
dec
mov
dec
test
loopnew
out
mov
scas
popa
push
mov
loop
xchg
cmp
inc
sbb
fsubl
les
dec
out
dec
movsb
sbb
neg
jge
inc
pop
push
add
fwait
hlt
xorb
into
inc
jmp
leave
and
icebp
fcomp
mov
push
inc
push
inc
gs
lahf
mov
jns
sbb
loopne
sbb
cmpsb
add
inc
sub
jne
in
fdivl
push
mov
push
sarl
mov
push
loop
adc
aaa
jl
mov
pushf
mov
in
mov
insl
les
lret
std
cmp
bound
jno
ja
add
out
mov
scas
or
test
scas
push
adc
into
in
jns
dec
mov
fnstsw
bnd
mov
mov
ror
or
ja
sub
cmpsl
out
aad
mov
and
pop
mov
sbb
mov
sbb
out
cmp
dec
mov
int
pop
xchg
scas
in
movsl
ljmp
sahf
push
push
jp
or
js
cld
mov
mov
mov
ficomps
in
push
sub
repnz
xchg
dec
pop
and
mov
cmp
mov
jnp
or
push
cwtl
scas
push
mov
sti
shlb
int
and
cmp
movsb
inc
ds
mov
sbb
cmc
push
addr16
or
pop
and
xchg
inc
xor
mov
std
push
and
sub
add
lock
sub
fcomi
inc
push
dec
xorb
sub
push
add
fwait
push
cmpsl
test
jo
or
xorl
jbe
pop
adcl
or
call
aad
jae
scas
mov
inc
and
ds
addb
pop
enter
adc
orl
sub
add
cmc
xchg
fldcw
ds
mov
sbb
rcr
fucomip
ds
pop
sbb
xchg
pop
mov
in
pop
mov
shll
fsubrs
or
mov
data16
sahf
or
mov
fnstenv
aaa
mov
xchg
stos
adc
mov
andb
out
cltd
cmp
shrl
mov
mov
mov
push
sub
add
clc
lea
ja
in
cmp
out
xor
xor
loopne,pn
cmp
mov
xchg
popf
jge
ret
sbb
aaa
pop
outsl
rol
mov
repnz
test
mov
iret
lahf
push
jmp
xchg
push
test
insl
push
das
das
les
dec
pop
lock
dec
jns
das
mov
mov
dec
scas
dec
adc
lods
cld
inc
cli
loopne
js
pushf
jg
add
popf
add
dec
jne
inc
push
cwtl
push
nop
decl
jp
and
cmp
mov
imul
mov
lret
mov
popf
xchg
push
fs
jo
cld
int3
mov
lret
pop
je
pop
xor
sbb
enter
mov
arpl
icebp
cld
cmp
cld
sbb
pop
out
int
rcl
pop
xor
pushf
pushf
mov
shrb
sub
repz
daa
xchg
and
mov
jg
loope
pop
inc
int3
fists
sub
adc
push
scas
push
xor
dec
sub
popf
push
jecxz
fldcw
bound
mov
mov
ret
push
jecxz
lods
lcall
mov
movsb
std
das
add
pop
mov
sbb
sbb
push
insl
xor
pop
jp
das
pop
xchg
xor
jbe
inc
add
push
inc
int3
lret
and
orl
es
notl
mov
jge
pop
popf
in
lret
stc
cwtl
pop
mov
pop
mov
sbb
adc
lods
and
out
xor
insb
sub
sbb
ret
add
test
cli
jbe
loopne
sbb
adc
popa
fdivl
int
mov
in
push
shr
push
dec
xchg
rolb
sub
jo
lahf
mov
push
mov
into
jo
fwait
loop
inc
fs
dec
sub
add
mov
les
cli
sbb
pop
sbb
aas
popf
cwtl
xor
shl
xlat
popf
adc
sub
ret
mov
int3
les
in
push
mov
out
cmpsl
and
sahf
add
mov
ror
jbe
addr16
sbbb
mov
bound
and
mov
pushf
stos
lret
push
inc
aas
aas
and
push
mov
xchg
or
adc
loope
ljmp
add
bound
leave
adc
rorl
jae
rorb
cltd
mov
xor
mov
test
dec
ret
pushf
inc
and
cmp
iret
and
xchg
jae
pop
cmpsl
nop
ret
imul
dec
jae
popf
es
flds
data16
test
inc
outsl
lgs
mov
fstpl
ret
push
fmul
mov
cmpsl
and
pop
imul
cmp
push
and
out
or
ret
jmp
jmp
mov
mov
testb
jge
das
lret
stc
ja
lock
cmp
push
repnz
or
mov
cbtw
test
dec
dec
ficoms
cmc
cld
cmp
gs
xchg
xchg
int3
pop
inc
popf
je
pop
mov
pop
mov
sahf
and
out
mov
add
popa
ret
mul
mov
jno
mov
shl
mov
shrb
cmpsb
insl
repz
negb
test
cli
scas
into
sub
adc
jle
jg
and
add
inc
enter
out
mov
shlb
imul
out
fcmovne
jo
icebp
mov
inc
es
out
pop
hlt
sar
xchg
sub
aaa
lods
mov
push
mov
or
pop
int3
rcl
adc
xchg
fisubrs
xor
inc
ds
int
jns
xor
cmp
jno
xor
xlat
cmp
repz
std
std
pop
mov
int3
inc
bound
adc
aam
arpl
mov
adc
cmp
enter
sbbb
in
rorb
inc
inc
mov
fucomip
cld
loope
xor
cmp
mov
xchg
or
fcoms
popf
push
ret
mov
in
cs
push
std
xchg
pop
cmp
iret
push
xadd
jne
loop
in
jl
jns
out
mov
push
sub
outsl
arpl
nop
lret
pop
push
jle
mov
out
daa
pop
jmp
adc
dec
mov
arpl
xchg
pop
jmp
clc
push
leave
out
je
mov
in
test
pop
lock
xor
adc
loope
mov
cmc
adc
jp
lods
dec
cmc
inc
and
pop
xchg
lds
inc
jae
fsubr
in
xor
sbb
pop
jne
fcoml
call
xor
adc
or
dec
sbb
cli
hlt
addr16
cltd
sub
push
icebp
pop
and
arpl
ds
fnsave
fnstsw
mov
icebp
xchg
loope
imul
adc
test
fs
pop
add
cmpb
and
pop
sub
or
xchg
test
int3
mov
cmp
jecxz
mov
sub
adc
push
jae
jge
out
inc
push
xor
or
pop
hlt
mov
pop
cmp
hlt
push
scas
sub
jmp
imulb
mov
movsb
shll
bound
divb
add
test
cli
and
iret
xor
mov
orl
and
inc
jle
ljmp
rol
push
clc
outsl
gs
fcompl
xor
jae
jo
lods
push
out
test
sub
daa
pop
push
mov
jg
mov
icebp
push
mov
andb
lods
sbb
cmc
add
inc
jae
rcr
xchg
xor
and
nop
call
leave
xor
push
mov
pusha
lock
bound
rcrl
data16
add
scas
hlt
push
dec
ljmp
pop
pop
cmc
adc
pop
and
lcall
xchg
call
push
mov
je
js
stos
add
add
push
mov
adc
mov
jae
sub
cmc
std
call
mov
xchg
shl
lahf
mov
out
push
sbb
cmc
clc
ljmp
push
sbb
cwtl
test
push
movsl
mov
cmpsl
test
dec
sub
jbe
jle
xchg
adc
jnp
comiss
inc
xchg
mov
pop
cmp
push
pop
inc
sar
xchg
or
jge
mov
add
xor
lret
jmp
popa
roll
js
xchg
icebp
sub
fldcw
dec
in
dec
insb
sub
lds
inc
xchg
retw
lods
test
inc
or
shl
add
mov
mov
repnz
rolb
cmpsl
cs
orl
loop
int
xor
or
aaa
adc
add
lahf
mov
imul
nop
data16
fnsave
cmpl
orb
movsl
push
movb
mov
pop
dec
out
sbb
int
mov
loop
adc
and
shrl
sbbb
pop
popa
stos
sbb
fs
dec
jecxz
mov
mov
mov
in
in
push
add
sbb
inc
sbb
in
int
mov
in
sbb
lret
sub
lock
mov
jmp
add
outsl
or
jne
xchg
cmp
test
push
mov
es
adc
cs
mov
xor
in
push
cmp
imul
out
ljmp
mov
push
mov
sbb
xor
pop
ja
xchg
popa
adc
add
mov
loopne
cmp
jg
bound
dec
or
movsl
sbb
dec
mov
xchg
jne
mov
stos
ja
mov
nop
imul
imul
mov
cwtl
sbb
scas
jne
jmp
mov
xchg
add
popf
xchg
cmpb
mov
push
push
pop
sub
dec
xchg
sbb
mulb
cs
sbb
lods
js
mov
push
mov
jbe
loope
loope
dec
mov
cwtl
cltd
sbb
inc
fs
push
add
pop
inc
mul
insb
cli
dec
lahf
sbb
jge
jge
rclb
roll
dec
xchg
daa
into
in
ret
in
mov
sub
xor
call
cwtl
dec
roll
movsb
xchg
insl
imul
fistl
pop
mov
inc
gs
mov
test
mov
mov
outsb
jne
repz
lahf
iret
ds
test
jbe
adcl
sarl
adc
in
imul
xor
add
pop
dec
fbstp
dec
mov
inc
mulb
add
mov
xor
inc
hlt
lcall
cmpsl
sub
fs
divb
mov
ljmp
mov
cmpb
adc
push
jbe
cli
cmp
dec
sarl
cli
call
mov
sub
pop
mov
jle
push
mov
inc
adc
jnp
shr
sbb
mov
pusha
or
sbb
icebp
pop
mov
sub
gs
repnz
std
dec
push
lods
aas
mov
imul
bound
xchg
push
jge
push
push
sarl
das
pop
adc
adc
fsubrl
or
or
mov
pusha
cmp
pop
pop
ds
out
in
xchg
das
stos
rcrb
repnz
lods
cmc
adc
sub
inc
lds
outsb
and
pop
lea
jne
dec
aas
or
insl
add
push
stc
jmp
push
in
out
mov
jno
into
scas
sub
add
mov
sub
iret
iret
jl
out
loope
loopne
data16
rcrl
out
sub
or
int
dec
dec
sti
dec
sbb
pushf
dec
and
in
jge
inc
jbe
push
movsb
sbb
int3
sub
sub
lret
lahf
sbb
and
pop
sub
adc
jo
rol
fadd
push
call
orb
inc
jg
xlat
inc
add
cmc
dec
mov
pusha
pop
jns
adc
mov
or
fsts
adc
call
sti
js
popf
sarl
lret
out
mov
mov
adc
mov
sbb
pop
bnd
push
ss
outsl
lret
push
push
lret
mov
dec
pop
fiadds
xchg
dec
mov
push
das
push
adc
out
stc
sbb
mov
int
push
dec
xchg
push
gs
shrb
aad
jo
and
scas
inc
jae
imul
clc
or
lock
mov
popa
and
insb
xchg
lcall
xchg
pop
aas
test
and
xchg
adc
loope
lods
cld
mov
in
dec
dec
xchg
jae
sub
and
mov
jae
mov
add
sbb
mov
adc
dec
jmp
cmp
repnz
mov
ret
mov
cmpsl
jno
js
ja
mov
sti
fdiv
jo
movsb
ljmp
add
dec
ret
inc
inc
push
cmpsb
bound
xchg
adc
cmp
and
test
cwtl
cmp
stc
and
and
pusha
jb
rolb
adc
in
mov
fdiv
fistl
jns
dec
loope
lret
test
jp
cld
fidivs
add
jp
sti
mov
arpl
fdiv
jge
popf
jle
lcall
mov
imulb
mov
int3
or
addr16
incl
xorl
pop
adc
sub
test
push
imul
cltd
xchg
inc
sub
mov
xlat
add
aam
dec
leave
in
nopl
mov
inc
int
xchg
pusha
adc
cmp
mov
xchg
ret
repz
mov
dec
mov
lods
inc
rolb
ret
push
out
ja
je
repz
pop
inc
push
ret
jns
pop
jb
mov
inc
sbb
aad
jbe
fnstsw
loop
je
jns
ljmp
outsb
adcl
sbbb
cmp
cli
dec
in
xor
sbb
stos
mov
mov
or
aad
xchg
std
pop
sub
push
add
cli
mov
inc
pop
pop
cmc
mov
adc
xchg
jno
jl
incl
jbe
sbb
cmp
xor
adc
pop
adcl
pop
jmp
pop
jle
fstpt
sbb
insl
sub
dec
fs
test
test
push
es
fnstcw
xchg
lods
mov
pop
in
or
jb
pop
adc
mov
push
sahf
jno
cmp
ljmp
lcall
call
sbb
mov
cmp
or
jno
in
bound
jecxz
jmp
xchg
jmp
je
or
scas
xor
or
and
icebp
roll
sahf
ja
imul
nop
aaa
inc
add
xchg
xchg
and
in
int
inc
shlb
repnz
gs
jbe
rcll
mov
adc
mov
or
faddl
aad
out
ljmp
push
in
fistl
adc
mov
sbb
inc
push
push
insl
inc
out
les
or
pop
pop
lret
ret
iret
bnd
sahf
hlt
imulb
mov
or
xor
incb
add
clc
pop
sub
cmp
stc
movsl
jecxz
adc
adc
out
cltd
pop
sbb
xlat
inc
fsub
adc
mov
mov
push
mov
and
cmp
and
xor
popa
in
cmp
and
dec
push
popa
xchg
lahf
sbb
xchg
out
fistpll
dec
cmp
repz
and
push
push
lods
dec
jb
out
xor
pop
rorl
jecxz
idiv
xor
iret
xlat
mov
mov
repz
pop
outsl
testb
xchg
mov
xor
push
ja
iret
fimull
loopne
daa
movsl
add
aas
mov
fwait
out
mov
mov
ss
ret
and
scas
adc
lcall
jo
mov
scas
pop
arpl
ja
ja
dec
xchg
lret
hlt
lock
shll
fucomp
inc
cmpsb
call
test
repz
cld
enter
in
ljmp
cs
cmc
cld
or
fucom
jb
scas
in
jo
data16
mov
incl
pop
lock
mov
shlb
jp
mov
fwait
push
fsub
icebp
loop
dec
mov
push
test
jecxz
jbe
ds
pusha
fcmovnu
inc
mov
jmp
int
negl
xchg
push
or
mov
cmpsl
rcrl
adc
out
adc
cs
adc
loop
inc
shll
add
int3
icebp
cld
sti
loopne
mov
sub
adc
sub
xor
xor
orl
inc
outsb
or
adcl
leave
bswap
or
inc
push
pop
xlat
pop
loop
sbb
dec
das
std
test
mov
adc
add
in
scas
jno
xchg
sbb
dec
inc
mov
iret
sbb
xchg
in
ret
mov
cmpsb
pop
rorb
jmp
cmpsb
push
fisubrl
imul
mov
insb
out
rcrl
loopne
mov
scas
gs
xor
out
mov
pop
jns
dec
mov
sub
xchg
scas
aam
cli
popf
scas
sub
mov
ja
std
mov
xorb
ljmp
mov
std
insb
cmpb
or
js
icebp
enter
sbb
psubusw
push
call
cs
popf
and
sub
xor
jno
sub
loope
insb
mov
pop
adc
and
cmp
outsb
sbb
jmp
mov
in
outsl
inc
xor
and
fcmovnb
xor
lahf
lods
push
dec
das
mov
cmp
stos
and
inc
nop
cmp
mov
and
adc
std
cmpb
out
cwtl
mov
mov
cmc
sub
sbb
sbb
fcmovb
insb
mov
xchg
std
loop
outsb
mov
lock
mov
mov
mov
inc
mov
aad
clc
add
fsubs
sbb
pop
adc
leave
push
clc
hlt
mov
mov
jb
enter
leave
aaa
mov
cwtl
fcoml
pop
or
or
xchg
in
pop
repnz
lods
dec
inc
dec
and
sbb
std
dec
sti
and
test
jo
push
push
mov
sub
jo
push
jle
int
mov
mov
scas
lock
jge
sub
and
mov
dec
adc
adc
clc
lods
mov
push
outsb
pop
cwtl
ss
sbb
or
cmp
pusha
data16
subl
mov
dec
mov
xchg
xorb
mov
ret
cld
mov
xor
test
mov
sub
out
dec
repz
test
pop
insb
inc
rolb
dec
adc
shlb
cmp
push
imul
add
jb
xor
dec
enter
mov
aam
xlat
addr16
sub
stos
in
jo
scas
sub
inc
mov
jb
inc
push
mov
jae
cmp
fcomi
arpl
lds
imul
lret
lds
cmp
adc
or
cmp
lcall
in
dec
sub
jle
inc
pusha
and
cmp
inc
jne
xor
inc
ja
mov
rcr
in
mov
push
pop
loopne
cli
dec
push
outsb
xchg
js
push
clc
gs
jne
inc
cld
aam
cbtw
pop
add
daa
pop
dec
and
fldcw
repz
cwtl
jns
mov
pusha
cmp
push
pop
mov
dec
fsub
and
push
icebp
xchg
dec
cltd
cld
sbb
mov
clc
cmpsl
outsl
lcall
dec
ljmp
or
in
repnz
js
pop
add
imul
stc
lea
add
hlt
leave
stc
lret
push
outsb
mov
adc
mull
out
iret
daa
pop
imul
and
sub
jmp
mov
fwait
and
mov
push
adc
dec
lds
or
mov
jmp
jbe
sub
jg
mov
pop
sub
mov
dec
imul
push
add
jp
or
add
mov
mov
imul
xor
mov
or
and
jne
std
mul
mov
and
popf
popa
fildll
xor
and
leave
pop
aam
mov
dec
ficompl
cmp
rorl
mov
mov
mov
pusha
cld
sbb
mov
push
inc
mov
call
scas
sti
mov
sub
test
jmp
addr16
dec
mov
push
mov
lcall
daa
fcoml
sti
dec
fwait
test
mov
mov
mov
jp
dec
inc
mov
cltd
mov
dec
pop
loope
mov
and
inc
sti
mov
dec
loope
add
or
cmp
or
stc
pop
mov
or
inc
xchg
adc
fdivl
xlat
lds
insb
inc
shll
outsl
outsl
jbe
mov
adc
in
lahf
xor
sarl
js
lret
repnz
adc
loope
xor
add
lea
mov
movsb
sub
inc
mov
jle
lods
push
stos
jp
sbb
and
std
fsubl
push
shll
loopne
mov
pop
cli
pop
adc
in
call
out
push
inc
cwtl
mov
dec
jbe
mov
rcrb
sbb
lds
addb
and
cli
clc
imul
push
fs
push
ja
mov
push
ror
xchg
push
jle
fidivrs
out
or
sarl
pop
ror
imul
xchg
lds
sub
add
daa
mov
imul
jecxz
dec
stos
pop
in
sub
shlb
add
push
or
movsl
insl
lock
popf
leave
sar
push
push
insl
cmp
xor
cs
rcl
push
xor
jmp
daa
ret
mov
rcll
xchg
sub
push
ss
lock
cmpb
xchg
push
or
dec
inc
js
xchg
xor
in
sahf
mov
aaa
movl
cmp
mov
in
xor
inc
pop
mov
push
aaa
gs
cltd
pop
sbb
lcall
aaa
loope
dec
push
cmp
mov
fadd
enter
jno
test
cmp
pop
gs
js
movsb
shll
lret
push
stos
fisttpl
cwtl
pop
xchg
sbb
sub
cltd
mov
dec
insl
fmull
xchg
push
cmp
stos
sti
inc
cmp
sarl
pop
test
test
jne
inc
mov
inc
movsb
dec
mov
inc
dec
mov
imul
push
adc
je
push
pushf
jp
dec
decl
and
dec
cmpsb
jle
imul
jg
in
pop
leave
loope
loopne
out
lcall
xchg
mov
dec
mov
nop
pop
sbb
enter
popa
addl
mov
inc
int3
sbb
aaa
dec
lret
lods
std
ret
push
inc
mov
fnsave
or
rorl
jp
mov
icebp
add
and
dec
jecxz
movsl
lods
and
sbb
in
pop
and
pushf
das
mov
in
loopne
aas
push
or
jne
jb
jno
fs
sti
repz
in
out
aam
cli
jo
sub
in
mov
in
xchg
jecxz
inc
aaa
sbb
fisttps
iret
mov
adc
cs
mov
inc
push
adc
shlb
out
and
adc
add
data16
mov
test
into
mov
jb
sti
out
dec
pop
mov
movsl
mov
lcall
adc
lods
or
shll
or
mov
orb
dec
notb
adc
notl
stc
roll
lods
jle
add
add
pop
jo
lcall
insb
lds
inc
pop
jnp
jno
ja
in
push
bound
imul
xchg
inc
sub
add
cld
setle
mov
in
jnp
jg
icebp
mov
sbb
fdivrl
in
sub
mov
adc
add
lret
insl
mov
inc
aam
push
ret
imul
scas
push
jnp
push
inc
push
mov
jns
lods
inc
xchg
xor
ss
push
push
mov
sbb
dec
orl
mov
inc
jle
lcall
xchg
test
repz
loope
and
pop
sub
ret
clc
test
mov
mull
jb
jne
popa
fdivl
sbb
dec
sub
iret
dec
and
pop
push
fildl
ds
inc
push
popa
or
lods
sub
push
cmc
mov
mov
xor
je
fiadds
mov
sbb
mov
pop
js
sub
lcall
push
sti
cs
daa
adc
add
dec
data16
xchg
mov
push
push
cmpsb
enter
push
cli
adc
pop
mov
pop
ja
pop
lock
and
sub
js
mov
clc
lods
and
xchg
dec
jnp
pop
xchg
jnp
fldcw
jbe
jno
cmp
fcoml
fnstcw
outsb
mov
mov
fisubl
inc
cmpsl
in
jmp
push
dec
in
and
mov
xor
shlb
pop
lods
mov
and
xor
fisubrs
pop
sarl
dec
cwtl
lock
cld
jecxz
ret
into
xor
stc
sub
mov
enter
clc
adc
pop
jl
stc
rcrb
mov
cmp
jg
movb
xor
xchg
aad
inc
in
imul
clc
inc
jmp
aam
xchg
mov
lods
push
aam
pop
test
pop
pushf
rorb
hlt
mov
adc
dec
out
aad
stc
jecxz
stos
jecxz
ja
imul
dec
adc
and
mov
movsb
aam
jne
loop
bound
mov
or
and
push
xchg
insb
cltd
mov
sahf
sbb
pop
inc
dec
add
push
mov
aad
xor
call
scas
lret
scas
inc
mov
data16
lods
aam
xchg
arpl
cmp
arpl
inc
je
mov
mov
lea
jno
in
neg
fs
dec
pop
sub
fstpt
sbb
ret
popl
loope
pop
nop
push
or
movsl
mov
fidivl
push
fldcw
xor
inc
arpl
arpl
dec
inc
pusha
xor
out
lret
push
jge
test
dec
xchg
inc
mov
pusha
jp
iret
mov
in
cmp
sub
jns
insl
and
iret
fdivs
and
and
loop
add
dec
inc
or
push
stos
arpl
jl
ja
add
add
mov
aaa
push
leave
xchg
enter
xchg
lock
pop
std
out
pop
mov
push
sti
lahf
int3
mov
jecxz
and
pop
pushf
xchg
test
out
loop
mov
mov
ss
push
push
out
inc
pop
fs
inc
lahf
mov
inc
push
pusha
sub
hlt
inc
int3
adc
out
mov
inc
add
lds
sbb
mov
mov
sub
movb
outsl
cltd
es
push
jge
jp
dec
cmp
xchg
ret
xor
mov
popa
es
outsl
cmp
lds
lret
dec
mov
xor
mov
addr16
jp
inc
inc
jmp
xor
das
fldcw
mov
std
inc
iret
mov
mov
inc
jp
js
jmp
xchg
sub
imulb
ret
push
xchg
lock
das
sbb
pop
cmpsl
dec
arpl
mov
mov
push
inc
jge
and
leave
test
mov
push
stos
mov
mov
xchg
test
ss
cmpsl
sbb
adc
adc
cmc
sub
xchg
inc
dec
mov
int
fwait
ret
jae
lods
push
jp
inc
mov
pusha
jmp
pop
xchg
test
mov
sbb
cmp
loope
popa
jnp
or
xchg
inc
xor
ja
dec
clc
notb
xchg
repnz
inc
out
std
xlat
cltd
maxps
imul
push
jo
push
inc
xchg
pop
xor
ja
out
cld
push
inc
aaa
mov
in
stos
push
dec
or
popa
jno
fxch
push
repz
ss
or
push
mov
in
jmp
stos
or
jg
int
dec
addl
cmp
push
stos
push
jmp
scas
jnp
es
pushf
lret
sbb
mov
push
add
adc
xchg
sbb
pop
push
push
fwait
mov
adc
int
mov
cwtl
and
push
fsubrl
mov
inc
xchg
cltd
jae
rol
cli
dec
cld
repz
mov
inc
xchg
pop
in
mov
dec
xchg
jp
add
jae
add
sub
pusha
loop
xchg
xor
shl
and
std
mov
icebp
leave
pop
out
imul
fwait
sub
jp
sub
inc
bound
or
adc
mov
inc
dec
aaa
cli
mov
cmpsb
lret
pop
xlat
jae
xor
pextrw
sbb
and
jp
mov
add
mov
cld
and
or
jno
lods
pop
stos
loope
push
adc
insl
test
shl
mov
mov
sbb
cmpsb
fs
jne
int
adc
or
add
mov
cmpsb
jp
out
int
jo
xchg
sarb
push
lahf
mov
or
push
mov
nop
stos
clc
movsb
subb
sub
leave
loope
jnp
fidivrs
popfw
call
jnp
cmpsl
pop
inc
pop
add
mov
or
dec
mov
and
cmp
jp
in
add
mov
bnd
iret
inc
icebp
shl
stc
lds
pusha
mov
lret
test
idiv
call
movsb
test
push
dec
ja
xchg
push
and
sbb
xchg
lret
ss
jl
mov
jmp
insb
pop
adc
xor
scas
jns
inc
insl
mov
adc
enter
sbb
fs
inc
and
in
in
xlat
imul
aas
dec
popl
lods
aad
xchg
inc
sbb
adc
dec
cmp
xor
xor
xor
and
cmp
in
es
inc
mov
xor
call
push
mov
jae
jp
or
divl
sbb
pop
mov
push
lret
cltd
sbb
test
iret
insl
adc
out
dec
mov
or
push
fucomi
inc
cmp
pop
pop
cmc
into
mov
mov
adc
out
push
sbb
std
xchg
push
sbb
out
fsubl
in
int
lahf
cmpsl
jne
sbb
push
sbbb
push
mov
or
sub
jge
pop
int
out
repz
and
out
pop
aad
pop
or
or
test
int3
loope
add
push
cltd
test
add
fisubrl
imul
push
into
dec
and
jg
mov
adc
sbb
aad
mov
mov
push
inc
cld
fiadds
inc
pop
call
in
sub
ss
cmpb
dec
cmp
test
jo
popf
enter
shlb
push
clc
orl
mov
decb
and
mov
dec
call
sti
jle
addr16
pusha
fisttpll
mov
std
in
jge
outsl
or
mov
cs
fcomi
test
push
cmp
or
xor
in
dec
adc
add
pop
jne
fdivr
jae
aaa
adc
aad
dec
stos
xor
lcall
aaa
xchg
sbb
rol
fisttpll
dec
aas
adc
cli
aas
xchg
push
adc
fyl2xp1
dec
js
push
fidivl
pop
loopne
jecxz
shrl
pop
mov
pop
cmp
cmp
mov
js
fsubrp
lcall
push
ljmp
fnstenv
mov
daa
fs
outsb
aad
pop
jbe
xchg
into
jle
xchg
dec
push
adc
sub
and
sub
sti
sbb
mov
xor
or
jg
and
add
mov
pushf
adcb
push
lods
std
dec
pop
les
sub
lods
inc
inc
adc
mov
fdiv
aaa
and
and
mov
sub
aaa
adc
ret
insl
jbe
test
xor
nop
dec
jnp
xor
out
xor
inc
pusha
mov
push
xlat
jb
fistpll
faddl
adc
mov
imul
into
pop
xor
jl
stc
xchg
pop
xor
in
push
ret
dec
ljmp
cli
cli
jbe
je
setl
stos
sbb
push
fwait
pop
and
xlat
cli
xlat
jp
inc
mov
int3
addr16
xchg
inc
push
bound
adc
daa
mov
jge
js
mov
mov
stc
std
or
test
in
xor
insb
adc
ss
outsl
push
push
jmp
mov
sbb
cmpsb
pop
add
and
lods
jg
or
int3
mov
and
mov
sahf
fldl
xchg
and
xchg
in
ja
leave
xchg
fmulp
into
mov
inc
adc
insb
add
jp
ljmp
jnp
scas
inc
add
cltd
xlat
sbb
xor
popa
hlt
pop
mov
sbb
adc
sub
dec
push
js
adc
rcrb
out
daa
testb
push
xchg
or
cld
dec
jno
dec
std
ss
mov
mov
mov
mov
sbbl
lret
dec
imul
jns
stos
inc
inc
pop
xor
jmp
imul
xor
insb
out
into
sahf
das
push
inc
imull
nop
lahf
int3
mov
das
imulb
nop
mov
pop
add
add
jb
mov
insl
mov
and
insb
je
xor
out
pop
idivl
movsb
mov
adcb
or
mov
mov
lock
and
jnp
xor
addr16
ret
cltd
xlat
jo
lds
stc
mov
jo
and
dec
inc
inc
shlb
fisubs
int3
into
dec
jno
mov
xchg
sahf
push
daa
inc
mov
in
leave
and
mov
lret
roll
dec
cmpsb
pop
mov
xchg
mov
xchg
inc
js
adc
mov
mov
xchg
hlt
test
jnp
rorb
or
ret
stos
sahf
orb
mov
mov
ret
outsb
pop
out
das
jle
push
pushf
jbe
add
xchg
fwait
sub
test
push
pusha
sbb
xchg
ja
push
lea
cld
adc
mov
mov
arpl
sbb
xchg
sub
add
rcll
ljmp
inc
inc
and
cltd
fmulp
sub
sbb
jae
cmc
cmp
xchg
inc
xorb
xor
jmp
dec
sbb
and
push
sub
cmpxchg
adc
xlat
pop
jecxz
lcall
mov
inc
jnp
das
pop
lds
sahf
loop
adc
je
xor
jns
sti
and
push
out
inc
push
sbb
pop
jge
jmp
nop
mov
jl
in
mul
cld
push
mov
adc
sbb
sub
xor
mov
xchg
test
fiadds
or
ret
pop
xor
and
jnp
jmp
push
fs
loop
mov
cmpsl
xor
pop
add
cmp
sahf
fidivl
sub
fstp
lahf
jb
sub
aas
clc
sbb
dec
cld
lock
in
adc
push
cmp
into
mov
xchg
jle
jbe
pop
jno
and
adc
mov
dec
lock
lret
out
inc
cmp
inc
add
pop
imul
addr16
test
idiv
fsubl
xor
sub
jae
stos
dec
xorl
sahf
cmpsb
xchg
cmp
pop
movsl
aam
lcall
and
mov
mov
in
mov
push
pop
fimuls
stos
push
sub
push
aas
sub
out
rclb
stc
cmp
xchg
mov
fs
xor
add
aam
mov
not
mov
mov
mov
sub
push
int3
jl
xchg
cmp
bound
fcmovnu
enter
xor
aaa
sub
xchg
jb
mov
cmp
cltd
mov
inc
imul
repnz
cmp
aad
ds
mov
in
lods
mulb
mov
scas
pop
mov
mov
fs
sub
jmp
or
inc
mov
xchg
push
jp
js
cmp
daa
into
or
outsb
and
sbb
repz
jbe
and
in
int
addl
dec
dec
rolb
fmuls
in
push
sub
popa
in
push
fisubs
data16
or
daa
adc
or
push
lahf
push
adc
shl
sub
lods
ficoml
cmp
fnstenv
pop
out
push
cld
jle
mov
adc
fcoms
shlb
pop
or
and
cwtl
shlb
call
xchg
push
push
push
je
ja
xor
leave
adc
daa
enter
sbb
xor
pusha
xchg
mov
xor
xchg
mov
mov
fwait
add
icebp
or
repz
dec
dec
mov
inc
lcall
rcll
mov
inc
out
mov
dec
call
jmp
pusha
pop
push
mov
shll
push
das
and
mov
stos
sarb
sub
rclb
lock
dec
rorl
dec
fldl
daa
enter
sub
xlat
movsbl
pop
xor
lret
loop
clc
pop
adc
and
decb
jmp
xchg
sbb
jbe
dec
lea
mov
sbb
test
xor
cli
adc
rorb
push
push
inc
sbb
notb
adc
aam
push
rclb
fdivs
jae
popa
cmp
enter
push
cmp
pop
push
jecxz
repnz
sub
mov
mov
xor
fsub
mov
ret
aaa
cmpsl
pop
jns
loope
movsl
ljmp
ljmpw
dec
pop
or
push
enter
pop
in
and
and
mov
xchg
or
pop
cs
rorb
pop
pushf
pop
sbb
push
push
mov
mov
dec
aad
fucomip
push
jl
sub
dec
push
loopne
cmpsl
mov
push
aaa
orl
mov
shl
and
jle
cmpsb
mov
cli
addr16
sbb
cmp
loopne
loop
mov
mov
and
sub
adc
mov
sub
js
shll
mov
mov
pop
jl
ficoms
dec
and
pop
inc
adc
push
inc
cmpsl
xchg
cmpsl
and
lret
leave
mov
or
and
pop
cli
fwait
push
insb
pop
lds
imul
xor
dec
pushf
scas
sbb
js
out
jnp
xchg
mov
arpl
loopne
dec
in
cld
cltd
pop
in
adc
je
mov
inc
scas
movsb
into
mov
mov
mov
mov
leave
sub
sub
inc
adc
xchg
jo
jmp
push
jmp
inc
ds
addr16
arpl
sti
popa
aam
sbb
lods
mov
push
ror
sub
adc
and
enter
dec
clc
addr16
aas
sub
sub
or
dec
jecxz
ja
inc
xchg
cmp
jno
js
lds
jne
pop
dec
and
cmp
cmpsl
jg
inc
xlat
pop
adc
cmp
idivb
mov
adc
and
lret
popa
add
pushf
sbb
idivl
xlat
out
mov
inc
out
fisubrs
jae
dec
mov
aad
push
outsb
pushf
int3
fisttpll
out
or
std
movsb
mov
stc
mov
shr
ja
ret
int
jno
jle
jg
fldt
jmp
add
and
mov
lret
enter
insl
sbb
mov
push
or
subb
lock
sbb
ret
push
mov
add
das
faddp
xchg
inc
or
jae
cmp
xchg
push
or
jne
adcl
ficoml
xorb
xchg
out
jb
push
mov
stc
aas
sbb
lret
loopne
movsb
pop
outsl
mov
adc
out
gs
add
xchg
pop
ret
lret
int
cwtl
out
mov
dec
cmpb
and
inc
and
mov
mov
cmp
dec
mov
icebp
push
ficomps
mov
sahf
rclb
mov
dec
mov
xor
mov
scas
ss
imul
xor
cwtl
shlb
mov
bound
popf
das
insb
mov
out
mov
scas
out
dec
cli
jmp
and
and
cmp
inc
enter
push
cmp
out
fcoml
gs
outsl
xchg
sub
fs
into
cmp
inc
into
sbb
jb
fidivs
push
mov
push
in
std
hlt
push
into
inc
and
scas
and
jb
mov
adc
stc
orb
fneni(8087
pop
fsubp
pop
loopne
pusha
adc
rcrb
rcll
cmp
push
lea
rcl
in
popa
mov
cwtl
cmp
push
or
addr16
push
jmp
repnz
jp
movl
mov
dec
mov
movsb
inc
xchg
or
nop
mov
ret
mov
insl
inc
clc
xchg
mov
mov
loopne
in
xor
pop
lods
xor
cld
fadds
cld
jl
push
imull
pop
mov
data16
das
jo
push
inc
ja
xchg
or
lds
jle
push
lock
imul
inc
push
pop
adc
insl
loope
lret
mov
push
mov
mov
cmp
pusha
pop
add
ror
xchg
movsl
aas
es
stc
mov
xor
into
jno
xor
nop
jne
insl
adc
jne
fs
jmp
leave
or
mov
icebp
inc
and
rcrl
mov
es
out
jb
ljmp
sti
dec
sarl
add
sahf
jmp
jbe
hlt
cmp
sbb
xrelease
dec
mov
repnz
std
andb
push
lahf
cmp
mov
std
xchg
nop
sub
loop
hlt
testl
fwait
test
push
pop
mov
mov
sub
or
inc
adc
out
cltd
or
leave
add
ficomps
ret
lret
cld
and
xchg
mov
xchg
mov
test
cmp
fwait
and
dec
mov
dec
and
mov
and
dec
out
stos
push
xchg
or
stc
jno
cmp
sbb
jne
mov
or
daa
mov
pusha
subl
scas
ja
cmpsb
movsl
xor
and
scas
jge
test
mov
je
add
push
cmp
lods
insl
jg
mov
add
mov
std
mov
mov
stos
sub
daa
jno
push
pop
mov
repz
xor
call
lret
sbb
rorl
cld
rorl
mov
das
dec
mov
sahf
sar
cmp
inc
ret
mov
mov
add
lret
cmp
imul
scas
cld
hlt
andb
sbb
adc
fs
repz
dec
cmp
cmpsl
aam
jb
inc
movsb
mov
imul
mov
adc
adc
enter
mov
subl
dec
std
jmp
ja
shl
inc
jge
int3
stc
sbb
movsb
mov
cmpsl
and
adc
mov
ljmp
lods
add
push
dec
je
inc
mov
incb
xchg
sub
adc
test
push
xlat
ror
es
es
insl
into
movsb
cmp
out
popf
and
sub
cmpsb
push
lds
jl
push
jo
cmpsl
lea
adc
adc
fisubrl
fcoml
mov
sbb
dec
fldcw
lret
jns
sbb
cmp
mov
nop
jns
mov
subl
aad
cmp
dec
test
mov
inc
pop
mov
cmpsb
sbb
mov
stos
add
je
js
dec
outsb
repz
inc
push
insb
daa
in
data16
je
add
das
out
neg
loope
int
sub
jnp
and
and
xchg
or
pusha
mov
arpl
mov
adc
fcomps
mov
scas
adc
push
jp
push
aam
mov
adc
cmpsb
add
xor
cld
jle
inc
mov
movsb
add
mov
das
mov
je
push
out
dec
jbe
sub
push
les
sub
and
pop
inc
pop
cltd
jbe
sub
mov
imul
rcll
xor
shlb
test
ss
in
push
xchg
lock
mov
ja
mov
pop
push
scas
and
mov
cld
sbb
imul
jge
out
loope
rorl
add
mov
sti
jae
add
dec
mov
mov
cwtl
into
and
and
clc
ljmp
fsub
in
xor
xor
fdivrl
stos
dec
jb
fwait
push
push
pop
inc
jle
add
in
test
mov
sub
rorl
adc
dec
adc
fisubrl
call
sub
cmp
push
pop
dec
daa
neg
ja
out
mov
jnp
or
ljmp
add
inc
xchg
mov
adc
cmp
orb
dec
jecxz
shll
push
mov
cmp
fnstenv
and
rclb
cld
sub
data16
jle
sbb
repz
fmul
push
add
and
leave
pop
lcall
std
loop
mov
out
xor
pusha
leave
pop
sbb
add
daa
clc
push
jb
add
and
push
and
cltd
mov
jb
adc
jb
dec
sub
enter
cmp
nop
aam
outsl
stc
lock
lods
jbe
icebp
icebp
je
sti
lcall
push
mov
shr
movsl
pushf
add
xchg
cmp
loopne
lret
push
test
sbbb
push
cli
sarl
and
sarl
popa
sbb
sbb
test
cmp
outsb
dec
out
mov
xchg
lcall
sbb
cmp
nop
fldl
xor
pop
gs
cli
loopne
inc
adc
sar
lret
sub
ljmp
cli
test
scas
xchg
fwait
inc
pop
sub
fwait
pop
sub
loop
ss
enter
mov
inc
stc
mov
movsb
nop
cmpsl
rorb
fstps
xchg
aaa
cmp
iret
dec
xchg
jbe
jmp
lret
out
jno
stos
cmp
ljmp
sbb
popf
adc
pop
imul
inc
xchg
fdivl
addr16
mov
xor
ret
and
faddl
xchg
movsl
das
enter
loopne
and
cmpsb
dec
push
and
popl
fs
sub
inc
or
sub
lods
shr
lea
imul
push
jbe
aaa
add
rolb
adc
inc
repz
test
or
jp
mov
bound
push
shlb
mov
out
rolb
cmp
sbb
lea
add
jb
jo
and
push
in
xchg
push
ror
push
leave
dec
sub
sbbb
nop
mov
cmpl
add
and
cmp
xchg
mov
jecxz
mov
js
out
xchg
dec
xchg
test
pop
fmuls
push
dec
pushf
pop
push
adc
pop
out
and
inc
out
xor
sub
jecxz
sbb
mov
mov
mov
negl
mov
sbb
pop
sub
rclb
fidivrs
negb
adc
or
mov
add
imul
test
xchg
cmp
cmp
in
pop
outsl
push
or
imul
addb
jg
jns
xchg
mov
cwtl
pop
or
lahf
push
imul
push
aam
mov
adc
movsl
pop
lods
aaa
and
dec
cmp
or
sbb
pop
arpl
ret
push
int
jge
push
xchg
inc
or
jmp
int
sbb
je
and
cmc
sbb
bound
pavgb
popa
cli
aam
fdiv
xchg
jl
push
add
push
add
imul
cmp
pop
imulb
mov
hlt
ljmp
enter
lret
andl
sbb
xchg
inc
push
ret
xchg
fists
loope
jnp
aad
dec
stos
add
sbb
mov
fistl
jmp
jge
pop
adc
cwtl
outsl
cli
jl
xorb
fldl2t
imul
out
inc
sub
or
popf
push
imul
jnp
mov
stos
jno
pop
mov
pop
sub
mov
cmpsb
dec
xchg
shl
mov
mov
mov
mov
test
inc
xchg
sub
cmp
cltd
jnp
inc
mov
cmp
cmpsl
outsb
cmpsl
daa
jg
adc
je
into
std
mov
sub
pop
test
or
mov
mov
adc
arpl
daa
cld
jp
mov
or
mov
aad
dec
add
les
std
loope
xor
or
call
cmp
cmp
test
ret
and
mov
pop
je
dec
or
popf
std
out
lock
outsl
fsubr
mov
inc
scas
insl
xchg
push
xchg
fwait
cmp
lods
mov
cmp
arpl
ja
in
call
test
out
fldl
adc
mov
out
je
dec
add
rcr
push
stc
cmp
push
js
repz
mov
push
fwait
xchg
xchg
xchg
dec
adc
mov
in
sub
mov
sub
int
aam
xor
sti
dec
cld
out
mov
addr16
jnp
in
cmp
xlat
out
xorl
xor
adc
popf
lret
jecxz
ljmp
movl
addl
inc
mov
sbb
mov
push
into
mov
inc
mov
mov
sbb
inc
sti
in
jecxz
rorl
mov
cmpsb
scas
push
dec
in
mov
dec
incb
xor
aas
adc
lcall
mov
inc
sub
lret
repnz
xor
stos
mov
test
cmpsb
sbb
push
test
push
mov
andl
sub
dec
sahf
jmp
mov
pop
xor
xor
loopne
lret
lret
jge
addl
adc
pop
adc
and
pop
cmp
inc
pop
or
ret
hlt
jno
lcall
jp
mov
daa
xorb
adc
inc
cmc
xor
mov
je
repz
xchg
xchg
mov
fsubrl
fimull
pop
test
mov
out
fists
cmp
pop
jg
inc
rclb
add
pop
jne
jle
and
repnz
pop
fstpl
cmpsb
sbb
cltd
jae
roll
filds
ljmp
push
jmp
stos
or
out
sar
popa
cwtl
dec
pop
imul
cmp
enter
sbb
or
fnstsw
or
xchg
sub
pop
mov
cmpsl
pop
out
mov
sbb
fsubr
push
lret
ret
outsb
addb
xchg
add
mov
xchg
inc
mov
and
adc
jae
popf
insb
inc
lock
jle
movsl
inc
daa
ret
push
dec
cmp
add
lods
stos
scas
cwtl
push
push
push
outsl
sub
sub
lods
out
cmp
daa
dec
into
jl,pn
not
pop
cld
cmpsl
inc
inc
std
and
lock
xchg
lock
jne
push
push
sub
mov
inc
pop
cmpl
je
js
mov
push
ds
sub
ja
lret
lods
mov
adc
imul
mov
aas
mov
or
lcall
ss
jbe
inc
jp
arpl
xchg
pop
enter
ret
ror
pop
sub
loopne
stc
in
dec
dec
mov
push
outsl
push
dec
bound
lock
outsl
loopne
dec
incb
cmp
mov
mov
ss
pop
insb
aaa
adc
sbb
sub
jb
rcrb
xor
jne
outsb
insb
cmp
mov
std
cmpsl
addb
push
push
out
clc
mov
fldln2
mov
out
outsl
test
inc
adc
mov
add
jge
rorb
mov
int
add
jbe
mov
and
and
aaa
mov
lods
cwtl
lcall
xchg
mov
push
pop
adc
xor
cld
dec
out
and
add
ret
cmpsb
and
and
testl
mov
sbb
sub
jmp
jg
int
push
in
popf
daa
dec
mov
cli
scas
arpl
xlat
mov
mov
pop
fcom
test
mov
lret
jge
push
or
outsl
loope
in
iret
add
xlat
popa
jns
lcall
push
in
int
sbb
pop
cmpsl
xchg
imul
jne
or
inc
and
bound
sbb
mov
adc
clc
and
lahf
cmc
add
pop
sbb
jle
movsl
push
jb
lea
pushf
jno
ss
int
xchg
jo
lret
adc
cmpsl
dec
pop
pop
out
mov
loop
mov
stc
in
push
and
mov
loopne
sub
push
pop
jno
jp
adc
mov
mov
out
or
add
mull
xchg
sbbl
ljmp
add
mov
stos
test
adc
and
movsb
sub
jge
out
jecxz
mov
test
sub
cmpsl
hlt
jns
arpl
dec
adc
and
adc
lahf
jecxz
popf
lock
jp,pt
into
gs
sahf
inc
enter
pushf
push
inc
cmc
xorl
aam
and
sub
or
jb
cltd
mov
cmp
and
hlt
in
and
ja
addb
mov
pop
pop
loopne
daa
test
xchg
aaa
dec
leave
add
call
outsl
fcmovnbe
fdivr
pop
cmpsl
es
sbb
in
call
enter
sbb
sbb
adc
jp
fimull
jmp
out
in
andl
test
gs
test
cmp
pushw
mov
mov
das
lds
sbb
fdivl
or
mov
das
es
jnp
test
lcall
mov
outsb
or
loopne
fs
bswap
jecxz
push
jmp
mov
push
scas
or
inc
add
out
inc
mov
ret
add
fisubs
in
lds
adc
std
rcll
inc
test
add
jne
loope
adc
cmp
xchg
inc
je
aad
xchg
iret
je
add
mov
inc
shll
arpl
mov
lods
mov
stos
sub
push
jl
mov
mov
call
jnp
xor
jmp
arpl
lock
xor
mulb
insb
push
call
popa
xchg
sbb
out
pop
out
xchg
fcom
push
arpl
inc
arpl
cmpsl
imul
add
mov
movsl
cmp
std
cmp
insl
add
pop
sbb
stos
jle
std
sbbb
jl
sbb
xor
loope
outsb
inc
mov
lods
lcall
jns
inc
ljmp
jne
sub
jo
sub
popa
test
movsb
mov
cmp
shrb
add
pop
or
xorl
inc
rorl
cmpsl
mov
in
pop
dec
xchg
mov
xchg
inc
ljmp
xor
enter
and
lea
and
lahf
ds
dec
repnz
fs
pop
cmpsl
push
cmp
loop
cmc
loopne
pop
cmp
and
js
insl
add
mov
arpl
or
ljmp
dec
mov
jecxz
inc
call
push
out
inc
nop
adc
dec
adc
addr16
iret
xchg
enter
push
ret
leave
out
scas
shlb
cmp
and
or
adc
vpsubw
and
mov
xchg
out
aas
push
cmp
lret
shl
inc
inc
stos
scas
mov
add
lock
push
aas
xor
sub
mov
jne
add
push
xlat
xchg
xchg
into
add
or
sti
push
pop
or
xor
mov
mov
add
adc
shlb
push
push
outsl
pop
mov
or
push
mov
andl
hlt
push
mov
xor
mov
mov
lcall
int3
mov
mov
pushf
sbb
xchg
sti
gs
mov
in
test
loopne
movsb
jne
jmp
out
jno
sbb
test
fadds
hlt
dec
and
loopne
xchg
test
lds
push
gs
mov
mov
fstps
sub
dec
out
je
daa
daa
push
dec
or
mov
cmc
popl
cs
ljmp
push
lret
pop
or
cwtl
xchg
dec
lock
dec
pop
out
xchg
inc
xor
and
and
jge
shrb
sub
mov
ffree
les
and
pop
cli
jo
jb
add
aas
shll
push
sub
cmpsb
mov
mov
inc
cltd
push
jnp
in
fcoml
in
xchg
imul
shlb
mov
loope
xchg
jne
add
jecxz
sahf
mov
xchg
push
jmp
jns
push
frstor
xchg
mov
xchg
dec
push
mov
les
xor
cli
lret
mov
add
pop
fimull
ljmp
outsb
hlt
cmp
push
sub
cmp
xor
adc
mov
add
mov
js
fs
loope
sbb
out
in
jg
rolb
adc
sub
aam
popl
loop
push
and
add
fstl
jp
xor
pop
mov
sbb
mov
int
adc
add
mov
push
aaa
inc
jbe
and
mov
push
loope
divb
push
jle
adc
xlat
xor
inc
sub
pop
cmp
shrl
pop
in
lahf
jne
push
push
xchg
clc
arpl
mov
outsl
in
int3
les
je
jl
mov
push
inc
loop
mov
out
cmc
add
inc
push
xchg
cmp
push
ja
jecxz
jl
fadd
push
cmc
out
aaa
mov
imul
jne
jge
inc
cmp
cld
divl
add
pop
leave
imul
sub
mov
idivl
mov
test
adc
or
push
imul
mov
push
xchg
leave
test
std
aad
rol
mov
pop
into
ja
scas
xchg
jg
int3
jmp
push
addb
mov
push
push
add
out
int3
sub
aas
mov
jle
xlat
sbb
icebp
ffree
add
test
mov
or
loopne
arpl
jnp
dec
out
outsl
sbb
jnp
sub
add
fcompl
test
pop
jb
shrb
fcomps
or
outsl
pusha
sbb
fs
dec
pop
push
mov
insl
loope
pop
xchg
aaa
pop
pop
into
shrl
das
les
push
jle
cmc
popa
dec
test
je
adc
das
icebp
dec
jp
rolb
aas
adc
xor
mov
or
mov
jge
aas
jns
push
jecxz
jl
inc
add
popa
xorl
jg
jnp
or
push
pop
es
adc
add
xchg
fcoml
push
jg
out
and
es
mov
adc
inc
mov
mov
mov
cmp
adc
pop
lret
xchg
inc
xchg
mov
loopne
xlat
popa
shlb
punpckhdq
sbb
and
into
xchg
mov
fs
pop
cmp
sub
stc
push
mov
mov
fcoml
jb
mov
in
push
fsubs
test
sub
jo
and
cwtl
push
add
and
gs
mov
dec
cmc
cmp
add
lds
pop
pushf
cmp
mov
pusha
mov
push
std
sar
scas
test
in
sbb
xchg
fisubrl
mov
pop
pop
lods
pop
iret
xor
je
mov
mov
cmp
dec
pop
xchg
push
cmp
mov
sub
mov
or
inc
or
lahf
loopne
sbb
into
sbb
jge
repz
xor
and
inc
je
filds
jge
ja
pop
pop
xor
in
pop
and
add
gs
and
lret
movsb
pop
push
sahf
and
jno
call
push
jae
imul
xchg
pop
test
ljmp
adc
dec
mov
js
cmp
mov
mov
or
insl
stos
mov
lods
sub
push
sbb
cmp
push
loopne
xor
xchg
xchg
jb
insl
cmc
xor
add
jecxz
insl
mov
fdiv
push
push
adc
push
mov
dec
das
int3
sub
and
xchg
aas
dec
lret
shrb
fwait
pusha
and
int
stos
cld
mov
ljmp
mov
lods
jge
mov
lds
in
jae
outsb
int3
test
add
insl
loopne
dec
cmpsb
ljmp
fdivr
jno
ret
jecxz
rclb
imul
ret
pop
js
inc
pop
cmp
dec
adc
rcrl
add
shrb
sub
iret
mov
loop
sbb
fldenv
push
rcrl
xor
jge
xchg
push
daa
dec
mov
popa
sub
mov
shl
adc
pop
jo
rclb
cld
push
mov
hlt
outsb
mov
addl
imul
push
fdiv
ja
cmp
mov
or
mov
pop
aad
out
imul
and
sub
and
repz
dec
push
pop
mov
adc
das
cmp
dec
mov
das
pop
lods
out
test
cwtl
mov
sbb
idiv
xlat
cmp
adc
push
xchg
les
push
fnstsw
push
ret
int3
cmpb
test
push
fidivs
fwait
aam
push
mov
mov
aam
data16
cwtl
sahf
ljmp
out
lahf
adc
adc
notl
sub
cmp
call
leave
dec
mov
lcall
lahf
mov
push
ret
sbb
push
jno
mov
lret
mov
push
mov
add
ret
jle
inc
cs
dec
popf
loop
xchg
in
cs
and
pop
leave
add
fcmovnb
dec
popa
fists
mov
dec
xor
sarl
mov
ret
jmp
loopne
in
cmpsl
ret
sbbl
inc
outsl
xchg
fistps
daa
les
fcoms
xchg
inc
daa
sub
out
jb
data16
xchg
jg
enter
mov
inc
fsubs
fnstsw
push
test
jns
mov
jmp
mov
sub
movsl
aas
daa
push
mov
and
sar
add
jns
push
dec
push
lock
pop
je
push
fisubrs
inc
imul
xlat
sub
cmp
iret
cs
and
and
push
mov
sbb
in
bnd
lods
jl
faddl
pop
mov
pusha
xchg
sbb
adc
sub
sbb
andl
push
into
xor
shlb
dec
mov
movsl
repnz
js
mov
sbb
in
sbb
jbe
inc
out
subb
icebp
ret
xchg
in
dec
mov
mov
mov
imul
jb
adc
out
pop
pushw
cmc
es
fcom
cmp
leave
shlb
sub
mov
les
in
xchg
jne
jno
int
loopne
sbb
cmc
jae
fidivs
xor
mov
cmpsl
jb
or
cwtl
sti
mov
xor
cs
dec
std
adc
push
repz
call
jo
xchg
mov
pop
je
fdivs
push
flds
xchg
and
push
push
repz
and
inc
imul
inc
add
test
rcrl
inc
adc
imul
or
pop
push
cli
shll
or
shrl
int3
inc
jne
loop
cmp
aaa
add
out
sar
cwtl
mov
out
pushf
push
cmp
mov
inc
daa
sahf
outsl
push
gs
leave
jge
jbe
jbe
and
sbb
cmpsl
aaa
test
sbb
fnstsw
push
pusha
cmp
xor
out
mov
push
cmp
or
mov
sbb
aam
mov
adc
xchg
sub
lea
jae
xor
mov
repz
inc
bound
mov
inc
pop
pop
and
aas
and
push
push
jmp
popf
enter
dec
cmp
push
cmpsb
enter
mov
sub
push
adc
lods
mov
mov
jl
cmp
xor
rolb
scas
and
adc
ret
outsl
nop
or
adc
cmp
adc
cmpsb
mov
jo
insb
pop
popw
or
in
fldl
aaa
das
test
leave
outsl
les
jge
jae
mov
fstpt
ja
push
adc
xchg
cltd
jmp
mov
xorl
jb
out
inc
mov
mov
sbb
or
mov
fs
repnz
iret
lds
and
jg
lret
cmp
mov
inc
out
sub
call
adc
outsb
fwait
ljmp
sub
adc
repnz
sbbl
daa
inc
dec
push
sub
pop
in
aad
cld
and
aam
lahf
mov
in
lods
adc
xor
mov
or
sbb
xchg
push
dec
mov
mov
gs
jo
int
pop
and
and
es
int3
pop
push
xchg
fsubs
fsubp
pop
or
stos
dec
push
test
mov
mov
lea
frstor
mov
icebp
in
pop
cmc
push
fdivl
and
outsb
jnp
movsb
pop
xchg
sti
in
sbbb
push
mov
sar
fbld
mov
ret
fldt
cmc
cwtl
lds
inc
ret
aad
pop
mov
movsb
test
mov
fwait
jecxz
mov
mov
movsb
mov
nop
jl
sbb
addr16
inc
cltd
adc
sbb
out
std
loope
push
popa
push
int3
or
loop
and
das
sbb
pop
mov
add
xchg
imul
jo
movsl
sahf
mov
push
in
enter
outsb
sbb
stos
inc
sub
aaa
sub
mov
aad
inc
push
ss
icebp
dec
xchg
add
cmp
scas
imul
leave
inc
and
push
cmpsb
pop
fmuls
mov
nop
stos
ja
inc
fidivrs
ficoms
aad
aad
pop
ret
pushf
sbbb
and
movsb
pop
cltd
mov
lea
xchg
test
test
pop
mov
push
mov
dec
lock
mov
dec
sbb
cmovnp
cmpsl
jne
sbb
pop
in
out
imulb
ds
or
or
shlb
out
sbb
fldenv
mov
or
push
pop
xchg
je
mov
jecxz
and
sbb
or
adc
test
and
into
addr16
test
mov
xchg
iret
in
mov
lods
or
pop
inc
iret
pushf
pop
push
fistl
xchg
imul
fstps
je
repz
adcb
xchg
out
repnz
and
mov
xor
outsl
outsb
jecxz
fdivrl
cmp
cmp
jmp
mov
xchg
dec
lret
sarb
mov
pop
mov
inc
addr16
aaa
sbb
test
dec
or
add
cwtl
cmp
inc
repz
jmp
sub
mov
dec
adc
cmp
cmpsb
xchg
cli
imul
outsb
push
insl
lds
cmpsl
scas
add
pop
pushf
cmp
lcall
or
roll
push
test
movsl
cmp
inc
ret
icebp
sub
les
add
sub
jle
stos
hlt
jp
clc
test
jnp
fisttpll
sub
pop
or
js
loope
fmull
and
xchg
inc
fst
dec
inc
es
repnz
outsb
pop
jp
mov
mov
mov
sbb
sub
or
pop
cmp
test
ret
push
mov
enter
push
xor
outsb
inc
or
mov
in
dec
sub
adcb
pusha
xlat
je
and
add
stos
popf
or
xchg
insl
mov
adcb
rorb
push
push
jp
dec
popa
clts
dec
mov
xor
je
xchg
sbb
pop
lds
ret
stos
test
sbb
es
jnp
mov
test
xor
and
fldt
pop
jge
cmp
cmp
iret
xor
or
jno
test
out
jnp
xchg
xchg
cmp
inc
sti
push
sbb
xchg
jg
pop
ret
mov
adc
into
into
decl
filds
or
out
sbb
enter
mov
xchg
inc
jae
orb
cli
outsl
pop
sub
sub
pushl
test
sti
leave
pop
adc
sti
nop
xor
mov
stos
cmp
in
lahf
jecxz
mov
lret
insl
enter
and
cwtl
xchg
mov
loopne
jns
imul
sub
xor
mov
int
inc
cmpsb
testl
xchg
cmp
adc
push
je
stos
clc
mov
cmp
cmp
out
and
movsl
adc
movsb
push
out
jmp
or
lret
and
mov
jp
dec
cmc
pop
adcl
mov
push
lock
das
lret
mov
sbb
jmp
pop
xchg
dec
fstpt
fistl
sbbl
cli
int
cmp
cmpb
adc
ss
sub
and
cmc
lock
loopne
sbb
jae
pop
pop
movsl
pop
pop
adc
mov
fsubl
push
sbb
mov
mov
sti
loope
out
sub
dec
mov
xchg
xor
lods
or
dec
in
xcrypt-cbc
cmpsl
adc
test
fadds
arpl
xchg
scas
popa
cli
cli
adc
dec
add
fwait
mov
les
dec
imul
fisubrl
lret
je
pop
mov
lds
adc
test
lahf
inc
aaa
lds
negl
xchg
adc
imul
sbb
pop
cmp
fimull
pushf
mov
daa
sbbb
inc
hlt
xchg
sub
xor
leave
xorl
xchg
jo
out
mov
or
lret
cmp
dec
mov
pop
push
ret
mov
iret
mov
adc
aad
cmp
and
setb
loopne
inc
lcall
rorb
adc
jbe
js
test
ror
xchg
xor
inc
int3
cmp
push
sbb
mov
mov
mov
roll
xor
icebp
movsb
jg
orl
loop
stos
mov
test
xchg
cwtl
add
xchg
in
dec
pop
subb
js
scas
adc
xor
roll
xchg
call
jmp
faddl
xchg
les
int3
lahf
sar
mov
mov
repnz
mov
sbb
in
lods
dec
mov
inc
icebp
bswap
cltd
push
jmp
sub
and
cmp
nop
gs
add
jge
gs
pop
push
dec
push
cltd
pop
jb
scas
std
adc
repz
xchg
cmp
out
mov
cli
xor
mov
int
negb
jge
xchg
adc
or
inc
mov
jae
jle
ret
ljmp
pop
xor
in
and
rcrl
rcrb
cmp
movsl
and
jl
in
int
or
mov
ja
adc
stos
shr
clc
les
dec
xor
and
into
rolb
into
xchg
or
test
lods
push
cmp
mov
int
sbb
mov
popf
xor
dec
inc
pusha
mov
punpckldq
rorb
mov
or
xchg
daa
loope
ja
out
add
add
ja
sub
lds
decb
adc
add
arpl
pop
inc
mov
xor
mov
fwait
mov
cmpsb
cmp
mov
test
add
push
xchg
inc
fiadds
inc
cs
pusha
jecxz
jle
aas
cltd
popf
sbb
stos
int3
or
sbb
sarl
xchg
mov
cmp
shlb
sbbl
cmpsl
lret
cmp
push
test
inc
shrl
rorl
out
mov
jmp
add
push
fidivl
inc
pusha
dec
pop
repz
mov
push
stos
sub
mov
mov
xor
adc
dec
jns
fsubp
mov
jl
jle
mov
mov
mov
push
or
adcl
mov
js
jnp
fdivrl
jmp
inc
xor
push
push
cs
xchg
mov
cli
mov
aaa
mov
stos
xchg
mov
std
and
sahf
gs
aaa
pusha
mov
dec
insl
xchg
add
lods
dec
pusha
stc
cmpsl
arpl
and
or
mov
sbb
js
mov
fldcw
in
fs
cmc
shlb
jmp
in
movhps
fldz
pushf
ficompl
jb
pushf
mov
mov
ja
pop
ds
les
xchg
cwtl
enter
daa
xor
insl
fimuls
iret
or
subb
dec
xor
push
jle
adc
cmpsb
es
inc
xor
lcall
xchg
pop
outsl
icebp
mov
outsb
mov
fistpll
jge
xchg
mov
push
sub
test
aad
push
adc
push
pop
mov
jmp
sbb
cmp
xchg
push
cwtl
ret
and
dec
cmp
out
add
aad
xchg
out
and
add
lods
jae
ret
jecxz
or
incl
scas
movsl
iret
xchg
push
enter
push
jb
add
push
fs
xlat
rclb
mov
sub
sub
sbb
lea
notb
adc
jo
scas
mov
pop
push
xlat
ret
xor
sbb
add
mov
lock
dec
lahf
inc
inc
add
mov
popa
and
xchg
mov
pusha
addb
add
jno
push
mov
lcall
push
ret
jp
data16
or
ja
dec
xor
pushf
ljmp
push
pusha
xor
add
icebp
xchg
xchg
dec
inc
into
xchg
aad
mov
jne
js
js
pop
push
pushf
push
dec
mov
imul
aad
or
loopne
and
idiv
fcoms
adc
mov
sub
fsubrp
fimuls
outsl
or
mov
cmpsl
test
push
push
adc
sub
xchg
mov
pop
call
call
adc
push
push
dec
cmp
mov
jo
push
xchg
mov
cld
movsb
sub
lods
push
out
inc
sbb
outsl
xor
and
mov
std
cmc
outsl
sbbl
push
cwtl
or
fs
or
xor
cwtl
fwait
inc
push
rcll
lret
call
sub
mov
inc
cmpsb
stos
push
out
out
popf
add
sti
nop
lods
mov
sti
xor
cld
mov
or
xor
inc
in
jns
push
in
jnp
sarl
lods
fs
addb
push
and
jp
je
gs
xor
lret
pop
mov
jnp
js
xchg
lods
lods
aad
pushl
shll
inc
mov
xor
stos
es
inc
sub
mov
inc
add
push
sbb
cmp
ret
ds
adc
sub
push
mov
test
cltd
push
bound
xor
pslld
movsb
lret
push
fmull
aad
cmp
mov
int
pop
daa
push
ja
ret
mov
leave
dec
pop
ss
cwtl
sahf
popa
add
jbe
rorl
push
dec
and
scas
xchg
pop
dec
scas
jb
xor
loop
mov
inc
cli
test
xchg
pop
arpl
iret
lret
out
int
stos
dec
cmc
aam
inc
dec
or
dec
in
out
outsb
jbe
inc
fwait
mov
xchg
xchg
hlt
movsl
inc
outsl
scas
sbb
mov
dec
movsb
js
dec
mov
cs
mov
nop
ds
mov
nop
jno
shl
hlt
in
clc
push
adc
mov
into
sub
setp
imul
push
divb
jbe
xchg
xchg
out
js
repz
ja
mov
mov
jns
aam
imul
out
or
push
or
mov
pop
inc
mov
bound
pop
aad
xor
int3
jo
loopne
sub
sub
xor
xchg
sbb
aad
out
das
movsl
sbb
sub
or
xchg
cmp
out
inc
jle
inc
and
aad
js
pop
cmp
xor
pop
icebp
pop
inc
cmpsb
outsl
xorb
pusha
xchg
xor
clc
mov
fadds
jge
mov
mov
shrb
jo
adc
stc
pop
add
or
fcomps
adc
lods
das
fs
sub
add
xchg
aad
xchg
inc
imul
sbb
loope
add
loopne
ret
pushf
and
leave
inc
sub
jge
jno
test
ja
jae
or
inc
jns
xchg
xor
arpl
incb
xor
inc
cmp
sub
stos
jmp
pop
push
dec
xor
sbb
xor
sbb
in
mov
int
pop
xlat
cmp
movsb
sbb
leave
and
loope
and
sbb
in
orb
rcrb
and
jae
jbe
inc
pop
lahf
jl
add
push
adc
mov
xor
cmc
mov
test
cmp
ljmp
lds
mov
repnz
or
mov
mov
mov
dec
cmp
inc
jnp
adc
shufps
in
cltd
call
add
into
inc
sub
xchg
movsl
ss
movsb
mov
inc
stos
fcomps
jle
jns
push
sbbb
and
inc
xchg
repnz
inc
sub
xlat
add
dec
sbb
sbb
mov
stos
xor
adc
mov
movl
xchg
inc
lods
mov
and
pop
addl
push
sub
sub
repz
or
mov
int3
dec
mov
mov
mov
sbb
mov
out
jmp
mov
subl
sub
mov
inc
inc
rolb
xor
or
push
sbb
out
leave
sbbb
lods
mov
mov
andl
add
push
ltr
push
mov
iret
sub
mov
pop
and
sub
addr16
adc
sbb
xchg
pop
lcall
and
cmp
jne
outsl
andb
out
fs
dec
ss
jg
shl
jg,pt
sub
scas
clc
adc
outsb
call
pop
push
std
andl
fidivs
mov
pop
ret
pop
rolb
add
cmp
mov
stos
cmc
jle
inc
daa
add
iret
cmc
xchg
shr
sbb
jnp
jp
or
shll
dec
xchg
ret
jae
and
and
popf
insl
aaa
shl
pushw
cwtl
jmp
inc
lret
pop
push
nop
xchg
ljmp
xchg
ljmp
pop
popa
adc
pop
add
jg
lock
mov
xchg
out
popf
xchg
dec
shrb
cltd
sbb
mov
sbb
aam
inc
xchg
in
mov
mov
mov
push
loopne
fcomps
into
mov
dec
add
insb
add
mov
dec
xor
inc
js
inc
insl
data16
mov
cli
jnp
hlt
imul
mov
call
add
insl
push
adc
daa
push
fs
loopne
cmp
cs
popa
cmc
sbb
jmp
rclb
data16
call
into
subl
pushf
cld
ja
sub
sub
insl
xchg
mov
and
loope
push
mov
jp
adc
jl
loop
mov
sbb
push
aas
dec
xor
pushf
out
icebp
xor
jp
ror
pop
push
inc
lock
sti
mov
roll
mov
js
inc
or
mov
xchg
xchg
ret
dec
cmc
sti
mov
pushf
inc
mov
dec
out
lds
push
test
inc
dec
mov
pop
icebp
call
sbb
inc
push
test
dec
adc
popf
rcrb
sbb
push
sbb
divb
fbld
inc
mov
fiaddl
mov
xchg
pusha
rcr
scas
and
ljmp
push
jnp
mov
gs
scas
pop
pop
scas
stc
mov
aaa
dec
in
push
adc
jo
dec
and
sub
xchg
loopne
loopne
mov
cmpsb
pop
test
push
ss
test
adc
pop
out
iret
std
or
call
jo
sub
sub
or
clc
das
aad
mov
imul
int3
cmp
pop
xor
xchg
jns
mov
movq
mov
dec
in
movsl
loope
repnz
mov
test
fisttpll
pop
pop
mov
sbb
pop
jecxz
push
jge
test
pop
movsl
pop
fisttpll
aam
xchg
or
push
sub
out
pop
adc
dec
testl
mov
stos
jae
test
sub
lds
cmp
outsb
cmp
mov
insl
fwait
scas
sbb
ljmp
pop
outsb
sub
insl
jnp
mov
xor
sbb
cmp
je
mov
iret
push
andb
push
add
pusha
inc
inc
mov
pop
shl
ret
add
adc
aam
cwtl
rorl
inc
out
cmp
jns
or
sub
sub
sarb
push
add
test
adc
lods
dec
pop
bound
push
inc
insl
xchg
cmp
leave
add
int3
repnz
xor
cs
lock
pop
jge
andl
push
lods
and
mov
sbb
lret
bound
jns
dec
addb
dec
mov
lret
and
outsb
xlat
pop
sub
out
sbb
cli
adc
lret
cmp
sarb
rolb
mov
cmpsl
fisttpl
mov
jo
cmp
fisubrl
out
add
jb
ss
ja
je
loop
mov
push
mov
sahf
jns
cmp
or
adc
mov
xchg
jle
cs
dec
sub
add
pushf
call
push
or
stc
and
les
aas
test
mov
adcl
mov
sub
mov
pop
fidivs
rcrl
jnp
xor
js
sub
mov
and
lahf
mov
insb
int3
lds
out
stos
lods
ret
adc
push
stos
ficoms
mov
mov
jno
pop
lret
push
loopne
test
sbb
imul
test
sub
decl
jmp
fistps
aas
imul
cmc
nop
notb
xchg
push
or
jae
push
test
pop
js
jnp
scas
mov
mov
cmp
inc
imul
jl
jo
pop
sub
mov
and
adc
adc
and
arpl
jmp
lods
fstl
lock
test
test
jne
pop
push
ss
shll
das
mov
fimuls
sarl
adc
hlt
xchg
in
sbb
add
jp
rcrl
nopl
adc
dec
int3
cmp
cmp
and
repnz
mov
scas
scas
pushf
push
xorb
out
dec
jae
jle
add
inc
xchg
pop
and
sbb
add
sahf
cltd
push
inc
or
mov
fwait
ja
dec
pushf
outsl
loope
jg
sub
roll
pop
das
inc
rcrb
mov
sbb
popf
mov
sbb
stos
cwtl
dec
test
data16
mov
mov
mov
or
add
xor
js
pop
xchg
hlt
les
icebp
push
movhps
enter
xchg
int
pop
mov
push
ret
mov
pop
dec
mov
hlt
ss
movsb
pop
adc
mov
add
jg
insb
faddl
pushf
cld
push
fildll
popl
or
xor
mov
out
imul
mov
mov
xor
jns
sub
lods
hlt
pop
jmp
sahf
jbe
dec
jle
mov
ss
and
in
lret
sub
adc
insl
add
sbb
mov
add
mov
daa
jg
sub
jbe
sbb
lahf
mov
jnp
dec
lods
das
test
inc
xchg
ljmp
sub
push
test
mov
mov
add
xor
inc
je
pop
add
jp
push
in
imulb
push
jb
shl
aad
clc
mov
xchg
das
lods
cld
js
cmp
je
push
pop
inc
lret
sub
test
sub
cs
sub
mov
outsb
mov
dec
imul
aad
inc
shlb
in
cmp
lods
filds
aam
sarb
lret
addr16
es
std
bound
das
lret
in
cmp
test
sbb
icebp
stos
inc
adc
add
cmp
shl
xchg
addr16
sbb
pop
test
leave
jbe
mov
mov
out
jle
mov
or
pop
or
mov
filds
or
fsubs
std
ret
cmc
push
jns
and
jb
daa
jmp
sti
daa
les
or
fs
stc
lods
pushf
inc
dec
push
pushf
xchg
inc
pop
hlt
out
adc
or
or
mov
jecxz
popa
je
fwait
out
in
in
pop
imul
xor
and
cmp
adc
repz
mov
mov
xorl
and
inc
movsl
push
pop
aaa
or
mov
and
jbe
mov
mov
jnp
xchg
mov
out
mov
ds
jl
mov
ss
gs
xor
jge
jb
test
mov
fsubrs
xor
cmp
add
pop
pop
xchg
push
in
testl
mov
rclb
pushl
adc
jl
add
jle
add
cmc
mov
jns
xor
xor
mov
sbbb
xor
jae
outsb
std
inc
jg
outsb
ficomps
push
bound
lds
in
in
cmp
xor
fistps
sahf
mov
test
out
les
push
add
div
pop
cmp
lea
and
mov
xor
mov
xlat
xor
das
pop
push
jp
lahf
cwtl
mov
or
jne
shlb
lret
jne
jmp
inc
nop
aas
push
loopne
add
or
lds
in
adc
arpl
mov
pop
mov
nop
call
add
sbb
aam
call
and
fisubrs
adc
dec
push
call
fwait
sbb
sub
into
adc
mov
add
clc
add
mov
add
pop
ret
cmpsl
out
cs
out
mov
xor
cmpsl
mov
xor
ja
divps
jnp
mov
repnz
roll
outsl
push
rorb
ss
int
mov
pop
repnz
lea
aaa
or
pop
or
adc
popf
mov
in
stos
add
push
cmp
mov
jne
ja
rcll
xchg
pop
sarb
pop
repz
mov
rcl
or
xchg
ljmp
push
cmc
mov
lret
int3
out
xchg
aaa
pop
mov
jae
xchg
test
ljmp
sarl
scas
jo
stos
jmp
popf
je
jmp
lea
jmp
pop
jns
ja
outsl
pop
or
pushf
mov
add
mov
cvtpd2ps
jp
mov
jns
cld
ds
and
aad
mov
test
ficompl
int
ret
mov
test
scas
sbb
rcrb
inc
xor
fwait
sub
mov
mov
out
cmp
rorb
aad
cmp
mov
cmp
mov
jecxz
mov
das
fcomp
and
fwait
inc
les
insl
adc
inc
xchg
xor
add
jecxz
mov
jnp
cmp
mov
xchg
xchg
dec
push
xchg
sbb
notl
pushl
lea
pop
and
cld
xchg
cmp
int
out
int
or
fwait
cli
push
xchg
or
mov
xchg
inc
cmp
pop
movl
mov
add
cwtl
aaa
inc
and
cmp
ret
aaa
jecxz
sti
mov
adc
cmc
out
scas
or
cmpl
addr16
je
insl
cld
dec
enter
dec
dec
xchg
lahf
pop
mov
out
add
add
adc
or
and
mov
mov
cmp
repnz
and
mov
popf
dec
mov
ds
inc
subb
int
fwait
mov
mov
popa
aam
pop
ja
inc
iretw
data16
call
jns
fwait
les
dec
shlb
dec
mov
cmp
lret
jb
repz
jecxz
push
dec
push
xchg
cmpsb
push
mov
cltd
movsl
lret
mov
repnz
cld
mov
push
inc
cli
frstor
cli
sbb
dec
add
jo
mov
js
mov
xor
and
or
push
mov
cli
lea
mov
mov
es
loopne
jne
cld
cmp
mov
in
xor
sbb
sbb
data16
subb
push
jecxz
popa
leave
mov
iret
cmp
pop
xchg
sub
jae
sbb
mov
pop
aam
shrl
inc
inc
xchg
xchg
cld
pusha
jecxz
mov
mov
pop
fsub
pushf
je
mov
or
mov
pop
incb
out
cmpsl
fildl
sbb
cmpl
mov
mov
mov
loope
std
push
xor
aad
outsb
add
add
xor
incb
je
pop
cmp
call
sahf
dec
repz
shrb
js
and
aaa
mov
popf
leave
or
jecxz
mov
inc
out
hlt
mov
and
test
cmp
pop
fs
cmp
imul
out
popa
in
je
aam
sahf
mov
jns
lcall
cmpsb
int
cmc
out
mov
fstp
insl
mov
lock
and
adc
xlat
std
mov
lods
gs
popa
es
inc
mov
rcl
push
pop
push
push
sti
or
dec
cmc
mov
sub
in
push
inc
jge
iret
adc
test
sub
push
jecxz
xor
sub
push
jge,pn
dec
push
subb
lret
inc
push
pop
mov
imul
push
or
lods
pop
sbb
cmpsb
rol
mov
js
mov
cmpsl
movsl
lock
test
out
loope
fnstenv
ljmp
outsl
adc
mov
xchg
mov
push
jae
jg
je
mov
or
fwait
mov
fsubrl
movsb
jecxz
enter
mov
jb
out
push
lcall
stos
lret
into
xchg
lahf
aaa
xor
test
fisubrl
jo
ja
adc
cwtl
mov
shlb
add
sbb
or
arpl
mov
xor
popf
stos
cwtl
out
mov
addr16
js
sub
subb
pop
loop
push
mov
push
mov
iret
sbb
mov
test
or
ret
insb
insl
push
inc
sbb
pop
lods
int3
cmp
and
inc
and
movsb
sub
add
or
ret
lock
scas
pop
pop
inc
addr16
sahf
fcmovnb
push
mov
repz
pop
xlat
xor
push
data16
stos
jb
ret
mov
jns
pop
loopne
aam
ss
jns
pushf
push
pop
call
mov
mov
pcmpgtw
jp
push
jb
mov
mov
lcall
outsl
xchg
adcl
std
mov
cwtl
decb
and
sbb
push
pop
out
xor
pop
insl
outsl
sub
daa
fcompl
add
mov
aad
in
pop
popa
xor
icebp
jmp
scas
pop
mov
sbb
push
mov
stos
stos
outsl
and
xchg
rorb
dec
cmp
js
shr
mov
adc
shrl
loop
mov
push
dec
add
cmp
stos
sub
push
test
andb
or
xor
mov
lock
add
test
nop
repnz
cmp
sbb
movsl
into
inc
aad
orb
cld
sub
pusha
sub
push
xor
mov
push
xor
xchg
push
in
test
lods
xchg
cmp
in
mov
cs
lods
stc
stos
daa
cld
sub
bound
adc
xchg
push
or
jno
int
and
sub
mov
mov
jge
pop
dec
lret
ds
sub
mov
mov
jp
or
push
repz
push
adc
outsb
mov
inc
jmp
and
xor
mov
xor
jmp
fs
add
pop
mov
add
leave
push
dec
subb
cld
fstpl
divl
out
ds
xor
std
mov
push
adc
push
inc
mov
inc
fildll
sti
call
fisubl
push
inc
sub
xchg
pop
add
adc
adc
cwtl
jl
movsb
jecxz
cwtl
lret
cmpsl
in
xor
movsl
popf
gs
insb
jne
or
das
push
nop
jno
loope
imul
rorb
cmp
shrb
and
test
loop
or
in
mov
out
aas
hlt
mov
jne
out
lahf
adc
mov
mov
mov
je
xchg
test
enter
or
aas
int3
jo
or
movsb
ret
ja
sarb
out
mov
adc
out
shll
xor
dec
insb
mov
scas
daa
outsl
add
decl
dec
xchg
in
lods
xchg
fwait
mov
xlat
mov
push
push
jo
or
test
sbbb
xchg
jnp
popf
testl
mov
aam
adc
sbb
push
add
adc
negb
and
sbb
fildll
movl
and
mov
arpl
mov
mov
sti
jl
mov
movsb
fwait
daa
popa
movsb
jb
fmul
or
lock
dec
and
cltd
flds
dec
mov
loopne
jmp
inc
mov
outsl
shll
js
pusha
pusha
lds
add
pop
mov
add
xchg
jp
divl
sbb
out
call
jp
les
das
fisubl
cmpsl
jne
std
pop
mov
xchg
aaa
into
in
fcomps
xor
in
rorb
dec
add
sbb
xchg
ret
jbe
sti
xchg
insl
add
test
mov
push
push
fcmovbe
mov
lret
stos
push
mov
bound
mov
dec
pop
inc
pop
adcl
mov
clc
pushl
inc
mov
push
ret
pop
cld
pop
into
scas
lods
in
dec
loop
dec
xor
adc
push
test
rorl
inc
out
sahf
mov
in
xchg
fisubs
or
fs
fnsave
push
jle
mov
add
mov
es
popf
shlb
mov
enter
mov
sub
mov
jae
stos
cld
and
ja
add
leave
out
sub
add
call
push
jno
loope
outsb
xor
nop
movsb
mov
hlt
mov
test
aas
pop
outsb
and
dec
lret
cli
and
push
sbb
jg
xchg
sbb
je
repnz
mov
inc
dec
pop
pop
push
xchg
divb
xchg
fdivp
sti
sbb
mov
sbb
js
push
ja
mov
pop
lods
or
andb
pop
daa
sbb
push
in
repnz
dec
sub
fs
stos
pop
mov
cltd
orl
mov
mov
adc
ss
jecxz
scas
es
in
data16
or
imul
scas
sub
mov
jne
sarl
int3
sbb
mov
mov
es
or
cmp
nop
mov
std
sub
lock
sbb
test
xlat
inc
mov
stc
xchg
sbb
adc
stos
add
sub
inc
scas
push
int
enter
sbb
fnstcw
push
mov
call
fldenv
in
pop
pop
jae
adc
loopne
cmpsb
mov
dec
or
xor
pop
lret
push
pop
rclb
inc
add
dec
mov
pop
js
movsl
add
adc
test
imul
push
negl
das
roll
or
push
fldcw
and
or
lcall
mov
lret
xor
iret
loop
xchg
aad
scas
out
pop
mov
mov
fbstp
and
cmc
mov
shrb
das
pusha
das
lods
mov
negb
mov
dec
lret
cmpsb
dec
repnz
out
cmp
mov
and
add
sub
sbbl
push
les
inc
pop
pushf
ljmp
iret
jbe
imulb
int
dec
addr16
mov
adc
pushf
jge
mov
xor
xor
push
cmpsb
call
loopne
and
cs
les
jb
xbegin
jns
pusha
cmc
pop
sub
mov
aaa
mov
dec
js
mov
sbb
xlat
dec
mov
fsubl
mov
popa
aad
ret
pop
adc
mov
es
outsl
or
stc
test
icebp
aam
xchg
sub
loop
xor
lret
mov
xchg
movb
ret
sub
mov
add
jecxz
shll
jle
jle
lret
sbb
add
pop
fldl
xlat
jp
push
js
mov
pushf
and
xor
aad
stos
rcll
sbb
ret
fisttpl
addl
mov
pushf
das
mov
addr16
sub
sbb
push
xor
add
aam
xor
and
add
in
imul
out
push
dec
push
mov
push
jmp
cmp
jno
or
or
or
ret
sti
jmp
xor
mov
xor
cmp
rcrb
loopne
and
lcall
mov
and
fistl
shlb
mov
addr16
mov
cltd
notl
add
hlt
xchg
xor
in
sub
add
and
mov
cmp
pop
cmp
sub
inc
aaa
sub
sbb
int3
pop
xchg
xor
outsl
cld
sub
fstps
push
add
sbb
push
cli
mov
pop
sarl
push
ret
and
sub
sbb
ret
inc
and
loope
outsl
dec
cmp
shrl
scas
out
movsl
mov
icebp
xor
pop
mov
jo
sub
pop
test
aad
inc
dec
sub
iret
outsl
outsb
out
test
andl
clc
sarl
movsl
outsb
ret
mov
stos
dec
pop
int3
shl
jp
ficomps
pushf
xchg
xchg
mov
xchg
arpl
push
ret
idiv
mov
xchg
mov
jns
sub
mov
das
mov
aaa
dec
pop
inc
push
mov
and
pop
cmp
mov
sub
pushf
sub
imul
pop
adc
pop
cs
xchg
ljmp
lret
enter
pop
stos
xor
sbb
imul
jg
sub
stos
pop
or
and
mov
clc
int3
ret
xor
or
mov
aad
and
inc
sahf
rorb
mov
cld
inc
scas
mov
aaa
or
push
sbb
inc
adc
roll
cmp
sar
pop
inc
std
test
and
shl
inc
mov
pop
pop
xor
mov
xor
enter
jo
sbb
or
shll
rol
mov
andb
movsl
notb
in
push
fdivs
push
mov
dec
and
das
add
loopne
jmp
push
lods
sbb
sbb
js
and
adc
or
xor
mov
jns,pt
add
lds
or
in
push
popf
mov
movsl
xor
add
push
into
mov
out
push
mov
push
xchg
ljmp
sub
mov
jb
decb
xor
sti
xor
mov
lods
add
leave
daa
pusha
mov
add
dec
cld
cmp
mov
lods
mov
dec
mov
sbbb
pop
in
xchg
push
add
inc
pop
ja
out
sbb
dec
mov
loop
and
es
sbb
outsl
repz
sbb
cmpsb
stc
rorb
sub
cmp
fmull
pop
sub
nop
sbb
mov
mov
enter
push
mov
sub
shll
lock
mov
sti
cmpsb
sbb
or
mov
lods
scas
jp
popl
mov
mov
or
cmp
pushf
cmp
ljmp
or
mov
mov
pop
movsl
jmp
in
push
pop
clc
dec
dec
sbb
xlat
jecxz
push
call
das
fs
test
cs
jns
xchg
rol
and
mov
fucomp
in
push
push
adc
sub
or
clc
mov
sub
int
cmpsb
jmp
stc
sbbb
push
push
xor
imul
fadds
push
pop
stos
mov
inc
test
add
mov
mov
jae
adc
pusha
ret
mov
pop
jecxz
sarl
pop
xor
lcall
roll
inc
pusha
outsl
jl
push
push
or
pop
sbb
loope
mov
repnz
mov
push
ljmp
in
pop
das
pop
jmp
mov
cmp
aad
xchg
dec
in
fstl
xchg
fwait
push
push
xchg
adc
push
cmp
inc
mov
xor
lcall
enter
jmp
pop
dec
notb
shl
scas
cmp
jno
lods
fldenv
sbb
rcrl
and
lock
aas
xchg
fistps
sbb
in
dec
cmpsb
fdivl
hlt
sub
sbb
lea
sahf
adc
jns
mov
into
ja
sarb
push
lods
cmp
fcomps
or
out
mov
sub
cltd
lret
insb
cli
movsl
mov
fmull
or
rorl
add
clc
test
fwait
sbbl
dec
cs
and
sbb
adc
std
xor
clc
pop
out
fisubrl
in
popa
pop
lret
mov
sti
dec
mov
and
lods
test
ja
js
mov
add
push
mov
xchg
xchg
shrb
cmc
fimuls
mov
jno
fs
fisubrs
mov
sub
stos
test
in
push
and
pop
jg
sbb
sbb
ja
scas
sti
negl
or
adc
jmp
dec
or
lret
loope
insb
or
mov
mov
cmp
andb
jmp
dec
leave
inc
mov
add
xor
iret
dec
mov
dec
xchg
iret
iret
je
gs
dec
icebp
mov
mov
shll
and
pop
shlb
dec
push
into
in
adc
mov
enter
pop
jno
rcl
sub
mov
cmp
mov
rolb
and
data16
pop
pushf
into
es
subb
cmc
test
pop
ret
mov
test
push
push
mov
dec
cmp
dec
xor
movsb
mov
sbb
cmp
adc
add
push
lahf
das
or
stos
or
ss
xchg
adc
imul
lods
mov
int
xor
xchg
shrb
lock
inc
sbb
add
sbb
xor
je
push
dec
mov
push
and
push
adc
mov
movsb
and
ret
cmpsb
mov
gs
xchg
adc
lds
mov
iret
and
pop
bound
dec
jb
mov
es
inc
aas
sbb
sbb
inc
movb
mov
mov
scas
sub
imull
fbstp
adc
nop
ss
jnp
xchg
push
imul
divb
mov
cltd
sub
mov
or
add
pop
and
insb
or
cmpsb
add
xor
push
into
shrb
fwait
xchg
or
sbb
outsl
adc
lds
sbb
sahf
xchg
xchg
addr16
push
pop
aad
out
repz
sti
add
dec
scas
ljmp
push
mov
sbb
dec
leave
aad
arpl
cmc
mov
xchg
sub
jle
mov
fs
mov
data16
mov
cltd
pop
mov
loop
push
mov
push
or
mov
mov
and
test
pop
iret
sub
fcomps
pop
rclb
xchg
lret
xor
ss
jmp
aam
add
sub
mov
aad
in
pop
mov
mov
sarl
iret
jb
xor
add
rcrb
mov
ret
mov
ljmp
iret
xor
lcall
scas
dec
testb
addr16
mov
lock
arpl
scas
lcall
push
loopne
imul
inc
hlt
imul
leave
mov
in
jmp
pop
ret
enter
push
pop
jl
out
popa
xor
xchg
test
lret
lcall
lods
inc
jne
sub
push
outsl
fsubs
adc
loop
inc
jecxz
in
pop
pop
lock
js
mov
add
mov
xor
mov
xchg
xchg
addr16
shlb
daa
cmp
jge
dec
lret
cmc
addl
mov
aaa
stos
and
popf
das
xor
cmp
in
mov
out
fwait
push
jg
test
dec
jmp
shrl
and
iret
adc
cltd
scas
pop
push
inc
sbb
pusha
idiv
divb
xchg
je
xchg
lods
or
push
xchg
mov
in
add
or
ret
cli
jp
in
ds
stos
ret
push
pop
movsb
out
ror
fstps
and
push
clc
sti
stos
adc
push
repnz
xchg
jae
sti
add
test
sahf
loopne
pusha
or
jo
jp
daa
inc
mov
mov
sbb
pop
arpl
sbb
add
movsl
lock
lret
jmp
pop
in
pop
cmpsl
inc
push
cmpl
decb
sti
lock
xchg
int3
fbld
cmp
call
mov
add
jbe
movsb
arpl
push
fisubrl
jle
in
sub
and
cwtl
fisttpll
mov
mov
add
xor
push
xor
arpl
in
dec
add
cld
push
xor
mov
xorl
aaa
mov
fcoms
les
and
dec
int3
push
cmp
mov
test
mov
fnstsw
loope
sub
mov
outsl
pusha
fs
addb
outsb
cmp
jo
jmp
lea
loope
inc
mov
jb
dec
inc
scas
out
pop
or
rorl
sbb
adc
sahf
subb
insb
push
mov
ds
fistl
add
dec
outsb
dec
faddl
mov
sbb
and
mov
pop
xchg
nop
loop
push
inc
aam
bound
xchg
jmp
mov
xchg
xor
stos
ss
std
test
push
inc
shlb
pop
mov
lret
adc
jb
sub
rclb
push
sbb
xchg
ret
cld
dec
mov
movsb
out
in
xor
add
add
xchg
dec
and
cmpl
cmp
sbb
sbb
ficoml
aam
adc
push
push
pop
data16
pushf
mov
daa
data16
sbb
ja
dec
cmc
and
arpl
xor
rcrl
jns
fsts
jg
add
add
push
xchg
or
push
into
cwtl
jo
int
fbstp
sbb
aaa
mov
sub
jne
sub
push
adc
xchg
stos
and
fisttpl
xchg
sub
xor
fs
mov
jb
mov
nop
insb
imul
out
xchg
std
sbb
dec
stos
jo
push
loope
dec
stos
mov
dec
movsb
mov
or
dec
popa
push
lea
mov
cmp
sub
lret
repnz
iret
in
fwait
fbld
jne
or
inc
test
clc
incl
jp
sub
mov
sbbl
lds
ficomps
pop
pop
sbb
xchg
mov
mov
fists
mov
int3
push
int
fs
scas
ljmp
mov
pop
adc
stc
push
dec
imul
ffreep
movsb
cmc
stc
leave
mov
xchg
xchg
mov
das
clc
and
stos
popa
sub
test
movsl
add
hlt
adc
dec
sbbb
dec
mov
int
cltd
push
mov
adc
inc
jle
sbb
pop
lret
int
pop
xor
or
decb
add
test
test
mov
and
cmp
jle
sbb
std
pop
sub
ret
lea
sub
mov
in
je
fwait
mov
push
cld
sbb
in
jbe
cmp
adc
or
jmp
out
test
jnp
xchg
adc
imul
inc
jl
dec
and
dec
mov
imul
push
mov
mov
dec
lock
ret
leave
push
out
test
dec
sbb
enter
lea
dec
hlt
call
lret
lea
and
add
or
jns
jne
sub
das
add
pop
cmp
xchg
mov
jne
in
sub
add
insb
and
gs
arpl
sbb
mov
pop
xor
cli
jecxz
cli
push
lds
ret
xchg
push
cmpsb
lea
fs
mov
mov
iret
jle
jecxz
daa
push
mov
inc
cs
mov
movsl
dec
fnstcw
xor
mov
lods
fisttpl
out
cmp
mov
adc
in
leave
jbe
push
dec
lret
stos
sub
das
outsl
xchg
adc
jg
mov
jl
push
xor
in
cmp
dec
dec
lret
das
orl
fildl
mov
pop
add
aas
repz
or
add
outsb
jmp
ljmp
in
test
std
les
out
jne
cs
mov
inc
out
push
stc
adc
sahf
dec
rcrl
xchg
cmp
fildll
push
jb
repz
pop
jo
je
xchg
xor
inc
xchg
pop
inc
cld
mov
insl
shrl
mov
jbe
stos
cmp
cmp
fstpt
sub
cmc
inc
call
pop
aaa
mov
jecxz
ret
in
fisttps
fstpt
push
mov
push
pop
adc
iret
pop
lds
mov
dec
pop
jne
ret
jmp
in
jge
pop
cld
outsl
inc
inc
xchg
pop
cld
push
cld
xor
fisubl
clc
lock
add
add
movsb
push
dec
es
jb
mov
pop
jmp
lods
pop
jno
inc
aam
xchg
lods
arpl
pop
das
ss
mov
or
inc
in
pop
dec
mov
in
test
mov
jmp
insb
xchg
and
xor
test
pop
lods
cmp
mov
jne
jb
test
inc
jno
mov
inc
adc
outsl
rclb
scas
lret
push
adc
enter
testb
mov
mov
sub
lahf
js
push
add
inc
pushf
jg
pop
xor
outsl
in
push
dec
mov
dec
cmp
and
clc
cmp
aas
mov
cmp
sub
ljmp
fmull
ret
ja
sbb
fstpl
dec
jo
mov
js
cmp
and
aaa
jle
outsb
mov
push
cmpsl
cs
les
and
adc
in
lea
cmpsl
not
out
pushf
adc
ss
jnp
dec
ret
xor
sub
cmp
popa
fdivs
cmp
mov
mov
or
jne
gs
loope
inc
cs
jnp
leave
out
cmp
jno
jns
inc
stos
fcmovb
jle
add
pop
mov
push
cmp
scas
adc
test
fdivrl
aam
pop
jp
loopne
shlb
jle
push
add
mov
xchg
lahf
stc
loopne
loopne
sub
ljmp
fdivrs
mov
inc
rcrb
imul
icebp
lret
out
xlat
rclb
push
cs
mov
out
pextrw
sbb
rcll
mov
les
push
sbb
movsl
dec
daa
dec
mov
repnz
jo
daa
dec
dec
jmp
imulb
lahf
daa
cmp
jb
push
mov
xlat
stos
sub
pop
cwtl
mov
out
push
xchg
andps
sub
in
das
jle
sub
insl
adc
fs
mov
outsl
mov
push
jg
dec
jns
sbb
xchg
add
lods
or
lret
test
xchg
loopne
xchg
mov
shlb
and
pushf
or
or
test
cmp
cli
lfs
mov
mov
pushf
sub
pop
inc
fisttpll
hlt
lahf
shl
inc
cmp
dec
ret
pop
je
stos
repnz
subb
sahf
lods
mov
mov
out
mov
shll
sahf
mov
in
push
aad
aad
or
adc
jmp
push
insb
ret
jg
out
cmp
mov
push
and
cmpsl
and
xor
push
inc
push
lcall
pop
pusha
mov
inc
sub
ljmp
rol
mov
and
test
loop
test
add
dec
insl
xchg
mov
and
roll
jne
cmp
push
ja
xchg
inc
cmp
stc
cmp
and
test
inc
fsubl
leave
add
shl
iret
shrb
ds
inc
ja
xor
in
mov
xchg
xchg
lahf
insb
cmp
pop
adc
xchg
inc
mov
sahf
pop
loopne
push
mov
mov
scas
mov
fs
adc
mov
xchg
into
cmp
push
xchg
sbb
and
lds
fs
in
jno
leave
pop
lret
jnp
pop
cmc
cltd
and
push
jp
hlt
imul
inc
fsubrl
or
mov
movmskps
cltd
je
inc
rolb
mov
adc
jbe
shrb
cld
cmp
sarl
jbe
icebp
adc
sub
jl
mulb
jge
arpl
scas
adc
or
jecxz
nop
jno
shlb
xchg
fiadds
or
xchg
insb
out
xor
in
pop
or
shrb
sbb
mov
int3
cmp
ljmp
mov
jbe
sbb
cli
xchg
sub
mov
pusha
popf
push
mov
mov
shlb
daa
and
sub
divb
jecxz
sub
mov
mov
js
cmp
subb
jo
cld
or
inc
mov
ficompl
mov
xchg
jne
jne
inc
loop
pop
enter
addr16
sbb
push
bound
lret
fisttps
sub
mov
pop
test
cmp
std
pushf
jne
call
and
hlt
sub
out
rcll
in
cmp
out
imul
push
inc
add
inc
ja
sub
inc
mov
es
dec
pop
mov
aaa
imul
xchg
adc
sbb
stc
push
shrb
xchg
sub
sbb
adc
imul
gs
add
inc
mov
jo
insl
and
aad
pop
push
ds
lds
dec
mov
and
lahf
ljmp
mov
mov
iret
stc
sbb
cwtl
push
pop
adc
lods
xchg
push
std
sbb
mov
ret
pop
push
cmp
sarb
cmp
sbb
enter
pop
scas
sub
outsl
push
mov
aas
mov
pop
jmp
lea
movsl
jecxz
push
outsb
enter
sbb
dec
pop
lahf
mov
mov
jns
jle
add
add
test
xchg
ror
fstpl
in
jae
imul
lods
and
push
push
xlat
aaa
add
cs
stos
cmc
pusha
push
pushf
mov
lods
dec
mov
in
std
or
add
jp
mov
pop
jge
repz
test
ds
lcall
push
jle
out
mov
jp
das
fldcw
push
lds
dec
mov
push
cmp
xchg
xlat
jo,pt
sub
pop
clc
or
cmpsl
test
out
imul
fldl
stos
sahf
lods
das
inc
xor
fstp
cs
ret
push
aad
xchg
add
and
cli
push
xorl
cs
lahf
cmp
xor
xor
push
mov
loope
jo
out
jmp
pushf
arpl
mov
fsts
hlt
out
jg
mov
loopne
mov
scas
add
test
and
pop
icebp
adcb
test
inc
clc
pusha
cmp
divl
xor
xor
jns
shll
cmp
sahf
sbb
test
loope
mov
add
sbb
pop
push
inc
ret
mov
mov
into
popf
sub
enter
and
std
cmp
add
jns
sbb
andb
mov
cmp
fmul
dec
sbb
and
or
lds
movsl
jp
ja
incl
push
sub
lds
hlt
jp
ret
inc
cmpsb
cmp
dec
aam
stos
push
mov
lea
bound
pop
orl
js
rorl
ss
test
pop
pushf
lahf
add
push
mov
lock
fisubrs
dec
pop
decl
push
lods
mov
neg
or
or
pop
arpl
push
jb
aas
lea
jl
mov
sbb
in
lods
pop
outsb
lret
add
out
jg
jmp
sub
cmpsb
in
push
ljmp
push
testb
xor
mov
insl
jl
aam
out
cs
and
icebp
pop
inc
cmpsb
mov
cmp
jns
add
lret
pusha
daa
mov
ret
dec
xchg
sub
out
mov
xchg
sbb
daa
jge
push
add
or
jae
push
xlat
rorb
in
jnp
xor
ficompl
adc
jns
incl
enter
aad
pusha
xchg
jne
int
push
inc
jae
stos
shlb
mov
xor
add
rolb
pushf
ds
or
pop
pop
aas
jg
jbe
or
push
xchg
xlat
loope
or
mov
or
jb
lods
add
test
push
push
sbb
xor
xor
push
mov
imul
mov
dec
rol
sub
add
sbb
jne
popf
enter
hlt
cmp
into
scas
dec
push
in
jp
hlt
mov
inc
in
pop
scas
dec
fsubr
dec
popf
stos
fdivrl
repz
inc
call
xchg
fwait
pop
fbstp
orl
dec
paddb
mov
das
pop
push
test
mov
cmp
fistl
shlb
fwait
pop
ret
lods
inc
mov
aaa
aad
xor
cmp
adcb
dec
adc
roll
mov
out
and
xor
imul
pushl
mov
outsl
adcl
pop
push
bound
mov
icebp
sub
push
mov
jmp
ffree
mov
lods
cmpsl
pop
mov
cmp
jge
mov
ds
inc
xor
xchg
inc
pop
push
and
mov
pop
or
jbe
enter
sbb
in
jmp
leave
loope
jb
dec
sub
int3
ja
imul
inc
lds
test
roll
mov
inc
js
fsubrl
push
dec
dec
xchg
aas
push
cmpsb
sub
mov
cmp
push
scas
or
scas
fldenv
ss
sbb
ror
xor
jge
pop
mov
test
dec
lret
or
mov
dec
aas
fwait
inc
rorl
sarb
sbb
loopne
push
shll
mov
lahf
jmp
xor
sub
and
rcrl
sbb
in
shl
lcall
jge
and
stc
bound
les
test
mov
xchg
mov
dec
jns
mov
ud1
cmc
add
in
ret
sbb
mov
call
mov
stos
lds
orb
in
cltd
add
fldl
arpl
mov
push
jno
and
or
sbb
mov
mov
jo
lock
mov
inc
in
jbe
jecxz
addl
push
sbb
xor
ds
out
mov
sbb
xor
repnz
xor
dec
xchg
jne
xchg
das
xchg
fstpl
test
std
mov
arpl
movsl
leave
fs
ljmp
data16
jae
scas
and
sarl
cmp
arpl
imul
mov
mov
mov
ficoml
sarb
dec
xchg
orl
sbb
cmc
stos
xlat
xchg
mov
cwtl
lret
popa
inc
int3
cmp
movsl
mov
aaa
loop
mov
xchg
es
pop
int3
lret
out
mov
cmp
roll
jg
pop
pop
iret
idivl
adcb
hlt
ret
sti
mov
or
push
jo
cmp
xor
jno
fcoml
or
in
aad
js
pop
iret
sbb
mov
jns
sub
enter
cltd
outsl
insl
pusha
mov
add
bound
into
shrb
daa
push
pop
rol
pop
xchg
insb
or
lret
fstpl
dec
push
fwait
pop
daa
push
pop
mov
lcall
sbb
scas
push
insb
add
das
aad
int3
mov
loop
inc
add
jo
inc
mov
xchg
leave
xor
or
dec
xor
or
cmp
inc
mov
add
les
ficoml
and
jbe
je
adc
pop
out
sbb
fcoml
cmp
imulb
mov
sbb
cltd
pop
push
mov
push
cmp
aad
mov
mov
xor
stos
sti
test
pause
out
mov
push
add
ss
mov
jl
loopne
imull
pop
xchg
inc
sbb
jg
inc
jb
push
mov
hlt
mov
pop
inc
xor
push
cli
popa
pushf
add
push
adc
cmp
cmp
clc
mov
fwait
adc
ret
sbb
inc
sbb
lret
push
stc
dec
inc
lret
shrl
shrl
jecxz
sub
or
cmp
push
test
push
ss
inc
cmpsb
dec
mov
push
insl
ret
pop
dec
sbb
cmpsb
pusha
dec
lds
ljmp
or
fwait
mov
push
jo
pop
mov
es
xor
sti
lock
sahf
mov
pop
jmp
dec
push
test
pop
scas
loop
js
mov
mov
scas
aaa
sti
movsl
pop
sarl
ds
sub
lock
push
fwait
cmovb
fisttpll
mov
data16
inc
add
jle
add
shlb
mov
mov
inc
pop
pop
push
or
imull
inc
imul
arpl
out
mov
mov
mov
mov
mov
sub
ds
cmc
ja
mov
push
jnp
cltd
fistl
insb
repz
xor
cmpsb
jle
in
push
jg
dec
xchg
in
in
and
mov
es
dec
inc
add
mov
sub
stc
cwtl
movsl
xorl
and
mov
add
cmpsb
aas
sub
push
adcl
addl
negl
inc
sti
popf
add
sbb
lea
dec
mov
dec
sub
mov
and
mov
sti
orl
inc
or
lds
jae
cmpsl
cmp
sub
insl
adc
loopne
mov
cmp
ja
cmp
xlat
fs
mov
les
add
and
sub
cmp
mov
sbb
inc
cmp
mov
insl
inc
lods
mov
loop
adc
jo
mov
sub
add
push
mov
ljmp
sub
dec
sbb
test
mov
push
push
mov
aam
or
mov
lret
adc
movsl
pop
mov
push
xlat
prefetch
test
stos
pop
mov
sahf
ss
mov
lods
lret
push
call
push
xor
and
xchg
or
inc
jnp
add
cmpsb
fisubrl
movsl
addr16
nop
test
mov
aam
add
les
push
js
push
pop
pop
xchg
mov
ljmp
sub
inc
scas
jp
mulb
inc
jge
or
and
aaa
jge
pushl
jae
xor
data16
adc
push
mov
jmp
pop
push
lods
mov
cmp
mov
inc
dec
daa
push
out
mov
loopne
sbb
sub
inc
aam
mov
sbb
repz
xor
cmp
jl
rorl
xchg
ret
int3
sub
inc
dec
inc
aam
imul
test
xor
pop
mov
xchg
xchg
pop
cwtl
es
jne
movb
jno
push
repnz
xor
jmp
sub
mov
dec
sub
mov
movlhps
mov
mov
enter
testb
cmp
int3
lret
mov
enter
and
hlt
loope
stc
adc
sbb
jae
mov
in
jns
ja
lea
sbb
fcmovnbe
mov
or
xor
mov
repz
ret
sub
mov
repnz
mov
outsl
mov
incl
stc
aam
dec
xchg
or
xor
loopne
test
mov
pop
mov
sub
lret
jbe
cli
lret
popf
jg
mov
mov
jg
pop
sti
daa
ds
adc
jmp
xor
jmp
pushf
clc
jl
mov
mov
mov
adc
xor
dec
into
push
fstpl
jg
and
jle
xchg
sbb
pushf
sub
cmc
fbld
out
or
test
loope
outsl
mov
mov
push
test
pop
pop
jle
iret
mov
inc
orb
pop
incl
aad
sub
hlt
mov
test
add
fsubr
dec
in
call
outsl
mov
xor
push
cmpsb
xor
adc
inc
fcmovnb
or
mov
cld
cmc
ret
sarl
push
rolb
shlb
xchg
pop
dec
ss
mov
or
jns
es
es
jns
movsl
inc
out
out
stc
cmp
dec
jle
clc
fildl
inc
cli
inc
push
pop
int
add
xor
lss
iret
mov
dec
ret
decl
jecxz
xor
mov
lret
xor
sbb
push
ja
and
xor
jmp
loop
add
lret
rol
mov
pop
pop
stos
lahf
arpl
jge
mov
add
mov
aam
out
sar
xlat
int3
add
or
jne
aaa
movsl
fistpl
jmp
jp
mov
mov
adc
data16
leave
push
shll
stos
inc
jae
lret
push
fwait
sarb
jnp,pt
jl
ffreep
xchg
mov
pop
or
loope
jp
xchg
sbb
dec
pop
aas
lcall
mov
mov
ret
rcll
xor
jns
call
ds
rclb
xchg
add
repz
jae
or
lock
dec
mov
mov
jb
mov
inc
mov
push
sub
aaa
push
jb
test
js
faddp
scas
jnp
mov
bound
mov
das
add
test
addr16
sub
test
pusha
sub
fsubl
lea
and
pop
stc
cmp
das
adc
dec
push
out
mov
mov
mov
pop
andl
pop
cld
fs
icebp
mov
mov
cmp
jge
call
jmp
sbb
pop
mov
mov
bnd
fldcw
les
or
popa
jno
rcrb
das
fsubrp
rorl
push
movb
jl
push
lea
ja
add
sbb
sbb
out
push
gs
in
and
sub
imul
push
push
pop
jnp
nop
push
aaa
scas
std
negb
fsubrs
bound
mov
mov
mov
mov
pop
and
decl
ljmp
mov
mov
testb
sbb
fprem
add
cwtl
inc
mov
jl
sbb
mov
and
ja
aam
xchg
cmp
sub
sbb
adc
lret
xchg
xor
jecxz
cmp
jp
pushw
push
xlat
inc
test
jg
outsb
aam
jns
dec
xor
or
sub
fstpl
jmp
sbb
in
sub
mov
lea
sbb
add
push
bound
fnsave
lds
mulb
mov
xchg
pop
add
dec
jo
test
aad
testb
push
mov
test
and
mov
mov
adc
fistl
xchg
mov
fnstcw
rclb
adc
fadd
sbb
xor
inc
cmp
adc
movsl
and
mov
add
pop
jmp
out
dec
sbb
add
push
mov
data16
fwait
sarl
fs
in
jo
dec
bound
inc
sub
jmp
and
or
sbb
icebp
pop
adc
pop
mov
dec
pop
cmp
and
dec
push
adc
ret
xor
loop
ret
iret
sub
out
inc
cmc
fs
stos
add
sub
mov
add
pop
mov
dec
rol
sub
sbb
adc
cmc
push
mov
mov
lret
fdivrl
jmp
repnz
mov
mov
sub
and
lods
adc
inc
jno
int
out
mov
ja
daa
outsb
arpl
lods
mov
sbb
add
test
ljmp
push
xchg
mov
loopne
mov
popf
fnstsw
lods
jno
adc
cmpb
push
in
pop
add
adc
xor
leave
sar
fiaddl
xor
fnstenv
push
stos
adc
mov
div
jecxz
adc
addr16
pop
sahf
pop
out
popl
xor
and
add
mov
outsb
or
xor
sbb
daa
jae
popa
sub
push
xor
xlat
dec
fwait
std
ret
cld
cmp
add
xchg
mov
adc
mov
jmp
ficoms
fmull
xchg
cmp
xchg
dec
ret
adc
out
aaa
push
cs
jl
add
lahf
or
jne
aaa
jg
ror
inc
fisubl
daa
sbb
push
add
aam
push
dec
test
fabs
fistpl
sub
stc
pushf
fstps
cwtl
or
pusha
fbstp
sub
jne
repnz
ds
cmpsl
mov
push
add
mov
adc
and
xor
pushf
leave
sub
decl
mov
mov
test
int
sub
push
outsl
and
testl
adc
test
test
outsl
out
xor
insl
xchg
inc
insb
in
test
jge
add
pop
dec
enter
movsb
dec
xor
add
mov
dec
pop
jecxz
jb
fwait
loop
inc
and
push
xchg
push
ret
fldenv
adc
xor
mov
vpshuflw
popf
fistpll
xchg
push
es
add
pop
lcall
xchg
stc
leave
push
pop
jecxz
sub
into
pop
pushf
rcr
push
out
ljmp
inc
pop
mov
cmpsl
testb
in
insb
xchg
in
dec
testl
iret
xor
or
mov
jb
mov
push
pop
or
dec
and
add
and
xchg
jb
aam
call
filds
test
fldt
push
mov
insb
sub
sbb
xlat
fmuls
xchg
pop
mov
repnz
inc
jb
fdivs
jae
ficoml
or
pop
pop
inc
mov
cmp
mov
lea
bound
xchg
mov
leave
xchg
xor
sub
lock
pop
insl
cli
inc
aaa
mov
cmpl
push
stc
dec
mov
dec
lods
or
or
repnz
sbb
mov
pop
int
sbb
sub
adc
enter
jns
lds
sbb
jo
or
inc
aaa
pop
mov
rolb
push
test
xchg
sub
mov
lahf
cmp
daa
insl
lahf
loopne
pop
jle
rclb
aad
push
sub
push
add
dec
add
add
mov
and
fists
loop
dec
popa
cmpb
hlt
in
int
xchg
pushf
cmpl
adc
inc
cwtl
and
mov
mov
push
mov
pop
cs
popf
jmp
adc
out
dec
decl
dec
inc
imul
sub
out
jl
and
std
cld
pop
rorl
jnp
cmp
mov
mov
test
mov
cmpsb
jecxz
mov
cmp
xchg
fistpl
push
call
shrl
adc
fnsave
andl
in
test
sub
push
aaa
lea
out
lds
ds
scas
adc
punpckhwd
add
mov
test
and
push
jne
xor
pusha
sub
xchg
xchg
xor
int
loop
pusha
fnstcw
js
stos
shlb
inc
add
lea
mov
inc
pop
xchg
les
sbb
loop
in
mov
mov
and
push
pop
rclb
aas
mulb
inc
pushf
out
in
je
jae
loop
pop
je
jb
lret
push
rep
inc
imul
pop
fnsave
fbld
out
fs
pop
enter
add
xor
mov
sub
inc
outsl
into
jno
fisttpl
jl
mov
lahf
in
aam
je
add
jae
in
jg
in
dec
xchg
sub
movsl
and
cmpb
xchg
ss
cmp
roll
jb
push
insb
sub
mov
lret
insl
jmp
test
fs
loope
cmpsl
enter
xchg
xchg
or
xor
ret
aam
fwait
xchg
jmp
repnz
movsb
scas
cld
mov
or
cmp
pop
and
shlb
repnz
push
dec
stc
sahf
inc
dec
mov
mov
stc
std
xchg
daa
outsb
pop
out
or
xchg
mov
push
fwait
push
icebp
les
cmp
pop
cmpsb
rcll
pop
push
sahf
xchg
stos
stos
push
negl
fs
inc
xchg
sub
jle
and
push
mov
repz
mov
hlt
xchg
dec
jbe
mov
testl
enter
cmpsb
enter
test
xchg
xchg
push
inc
add
clc
cltd
adc
gs
mov
xchg
mov
clc
add
nop
and
sbb
sub
incb
mov
inc
les
push
fwait
xor
sbb
mov
adc
loop
repz
push
les
and
and
mov
into
je
shll
dec
int
mov
xor
js
in
sbbl
xor
dec
mov
push
jge
mov
fisubrl
test
filds
push
fwait
lret
xchg
xchg
cli
adc
movsl
pop
icebp
adcb
js
jge
fwait
sbbl
or
add
out
aam
jl
cmp
and
std
fwait
cltd
adc
jg
enter
or
sub
imul
pop
and
cwtl
sbb
inc
popf
or
mov
fsts
xor
cltd
or
insl
sbb
in
in
mov
fmul
orb
addr16
loope
xor
push
adc
xchg
pushf
les
sub
sbbl
jmp
movsb
mov
sbb
xor
lods
mov
pop
mov
mov
lret
rclb
sub
enter
imul
mov
xchg
test
fsubs
cmpsb
add
aam
clc
addr16
or
addr16
adc
xor
and
pop
repnz
fbld
int
push
shl
mov
je
in
outsl
mov
mov
divl
call
mov
and
ret
ds
mov
pushf
fadd
dec
mov
addr16
out
push
mov
push
push
jb
in
insl
xchg
pop
aam
aaa
and
push
xor
out
add
cltd
in
das
aas
lock
orb
sub
xchg
sbb
push
movsl
jns
adcb
data16
cmpsl
sbb
mov
adc
in
pop
mov
aas
add
inc
test
mov
xor
je
test
dec
jge
mov
or
cld
and
out
mov
and
push
testl
jns
dec
push
adc
lock
enter
pop
dec
push
pop
insl
aas
es
bound
mov
into
adc
subl
cli
out
ljmp
xchg
sahf
ret
les
test
jo
pop
aad
adcb
push
xchg
je
shll
mov
jnp
sti
adc
loopne
test
inc
pop
mov
adc
adc
xor
or
fabs
fidivrl
or
loop
jns
add
fsubrs
adc
in
inc
roll
stos
mov
mov
xchg
inc
flds
xchg
aam
add
scas
es
pop
mov
out
jmp
inc
jmp
fwait
cltd
cmpsl
mov
inc
ret
pushf
icebp
andb
movsl
fwait
ss
cs
or
lds
ffreep
inc
xchg
cltd
push
icebp
adc
jp
sbb
and
fldcw
jno
mov
fistpll
sub
jecxz
xchg
pop
lret
in
xchg
jecxz
rclb
mov
in
xchg
mov
cmp
add
mov
mov
es
or
fwait
das
and
data16
roll
outsb
lret
icebp
ja
outsb
addb
push
imul
test
sbb
push
not
pop
and
enter
jae
scas
test
mov
scas
outsb
int
imul
xchg
es
mov
jb
cltd
cmp
pop
add
xchg
add
scas
xchg
pop
push
fnstenv
nop
adc
inc
rolb
dec
leave
or
cmp
icebp
add
mov
bound
lret
adc
push
insb
push
pop
jo
push
add
jmp
inc
aad
ret
out
adc
add
repz
inc
adcb
cli
pop
daa
adc
xchg
sahf
nop
cmp
jp
jns
pop
iret
xchg
test
std
into
jecxz
in
lret
lock
test
mov
mov
jb
nop
imul
dec
movsl
lret
imul
cwtl
push
dec
aad
dec
jb
nop
cmp
gs
mov
int
in
movsl
inc
test
divl
rclb
int3
outsl
icebp
add
sub
outsb
into
repz
mov
and
out
inc
testb
jns
dec
push
jns
jp
cmp
inc
jmp
cld
jbe
jbe
mov
and
jo
adc
mov
xor
dec
aas
push
dec
gs
mov
lea
js
mov
lcall
mov
adc
pushf
push
sahf
xchg
adc
add
adc
imulb
and
jle
pop
es
aam
bound
jnp
mov
mov
int3
push
sub
and
sub
sub
push
cmp
add
inc
fcmovne
call
call
xchg
aas
pop
sub
in
cmp
xor
cmp
stos
pop
lea
iret
pushf
and
aas
nop
fildl
dec
movsw
aas
std
xchg
mov
rcrl
xchg
xlat
add
imul
mov
hlt
and
punpckhdq
jns
shll
icebp
aad
xor
push
mov
mov
ljmp
push
push
xor
icebp
add
pop
jnp
into
lock
stc
stos
lods
xor
push
outsb
movsl
dec
push
sbb
test
aad
addr16
sbbl
pusha
cmp
dec
dec
ljmp
push
mov
jge
lret
int3
mov
subb
dec
cli
sub
and
div
cs
lods
decb
in
jl
xor
xlat
ss
scas
in
push
sbb
icebp
mov
int
jnp
ss
cli
add
cmp
mov
arpl
imul
fnstenv
xchg
fwait
ret
cmpsb
mov
xor
add
sahf
out
push
movsb
sub
fimuls
lcall
mov
pop
dec
or
aam
add
mov
sbb
test
inc
add
mov
lret
dec
inc
push
jp
ds
inc
cmp
iret
out
movsl
sub
testl
insl
or
xor
iret
cmp
cwtl
mov
and
inc
mov
push
sbb
test
push
sub
daa
mov
lret
ds
push
pop
stos
add
dec
imul
and
fldcw
xchg
lret
add
xchg
fwait
push
lock
mov
lcall
loope
fidivrl
mov
mov
lret
sbb
ja
sub
xor
cmc
mov
and
mov
rorb
pop
cmc
xchg
and
inc
sbb
cwtl
xchg
jo
in
filds
xor
mov
sbb
and
icebp
sub
incb
lret
inc
out
testb
movsb
xchg
sub
call
adc
sub
or
adc
fisttpl
pushf
insb
xchg
push
sub
sbb
mov
imul
mov
ja
insl
add
push
cld
xchg
insb
fldcw
test
pop
scas
and
mov
cmp
fs
cmp
push
lea
out
sbb
ss
dec
inc
imul
in
push
shl
xchg
je
pop
clc
rorl
push
repnz
test
xor
xchg
mov
xor
jo
ja
cmpsl
xor
loop
cmpl
std
or
push
and
mov
xchg
mov
das
call
mov
test
lods
or
adc
mov
dec
mov
mov
push
and
xor
add
mov
repnz
pop
add
les
js
or
mov
push
in
popl
jmp
mov
cmpsb
mov
dec
mov
push
mov
jno
mov
mov
jne
pop
sub
negb
dec
fists
pop
cmp
lods
je
xchg
ret
rcrb
into
inc
or
outsl
xor
lcall
sbb
sbb
loopne
adc
test
ss
and
push
mov
sub
bound
mov
aad
xchg
mov
pop
jnp
popa
xor
fisubs
fcmovnb
mov
dec
jb
stc
jp
lods
jnp
pushf
push
stos
fwait
mov
ss
in
jp
push
adc
fwait
ss
cltd
mov
push
add
sahf
pop
lret
mov
out
stc
repz
jne
xchg
cltd
jns
xor
pop
lea
aam
sbb
idivl
mov
loope
cmpsl
push
adc
jns
neg
mov
call
stc
mov
jnp
jo
loope
sbb
fisttpll
testl
cmp
sahf
call
subb
clc
xchg
jne
xor
cld
mov
mov
sbb
inc
mov
sbb
movups
repnz
mov
cli
mov
pushl
sbb
clc
aas
dec
pop
dec
lea
aas
adc
xchg
mov
ficomps
jmp
pop
dec
jp,pt
test
cmp
jg
push
loopne
outsb
mov
cmpsl
in
cmpsl
mov
mov
mov
lcall
cmpsl
cmpsl
out
xchg
cmpsl
cli
or
add
pop
xor
jne
mov
ret
cmp
mov
cmpsb
cmp
xchg
mov
cmp
aaa
dec
call
addl
mov
dec
pop
insl
loopne
mov
inc
jno
jg
lea
dec
push
xor
rcrl
ja
popf
cwtl
mov
pop
test
jecxz
cwtl
mov
insl
mov
inc
pop
stc
test
imul
mov
out
xor
insb
faddp
mov
xchg
push
shrb
mov
pop
mov
inc
rol
call
dec
lods
scas
sbb
xor
int
clc
or
push
pop
cmp
clc
out
daa
fwait
sub
cmc
push
fwait
ret
sbb
cmp
cmpsl
mov
xor
rep
iret
rclb
sar
jnp
loopne
and
iret
lock
test
jmp
mov
cmp
call
xor
add
jp
daa
inc
scas
cmp
push
lock
lret
stos
test
jnp
add
push
xchg
mov
jo
jns
jbe
call
inc
ja
imul
mov
jmp
out
int
mov
jne
ds
jecxz
cmp
imulb
mov
xchg
sbb
popa
mov
mov
mov
sbb
int
mov
and
test
out
and
mov
pop
inc
and
lahf
aas
mov
dec
int3
cmpsb
mov
sahf
enter
dec
xor
mov
mov
dec
jne
xor
movsb
in
popf
das
ffreep
es
jae
cmc
call
mov
mov
mov
rclb
xchg
sti
adc
fisttps
add
das
subl
add
stc
mov
imul
lss
cmp
push
mov
sti
imulb
xor
dec
ljmp
lock
sub
cmpsl
adcl
mov
jbe
js
iret
xchg
mov
mov
xor
fildl
mov
or
je
int3
nop
bound
test
cmp
xor
dec
lods
inc
jo
cmpsl
or
or
xchg
inc
pop
jnp,pn
push
nop
xchg
testb
test
cmpsb
lds
and
dec
divl
cmp
jge
cmpsb
aas
cwtl
sbb
sub
pop
push
andb
and
lret
test
sbb
or
sbb
lcall
mov
sub
dec
insb
test
loope
xchg
push
int3
shrl
xor
lods
sbb
adc
adc
insl
pop
movsl
xor
aam
adc
call
sbb
sbb
inc
mov
std
sbb
mov
sub
fisttpll
xchg
inc
movsl
sbb
bound
shll
push
pusha
imul
xor
sbb
lret
ja
or
cmc
call
ss
push
pushf
int
mov
setp
push
inc
lret
sub
xor
xorl
test
push
jle
sbb
loop
hlt
inc
data16
dec
mov
es
ja
push
shl
push
or
lcall
bound
push
in
sbb
cmp
int3
clc
jbe
daa
inc
inc
nop
jae
fs
ljmp
jmp
cmpsb
pushf
loope
notb
xchg
xor
sub
add
outsb
push
data16
loopne
sub
movsl
mov
out
div
out
aas
mov
mov
fnstcw
roll
mov
jbe
mov
dec
insl
stos
clc
mov
or
push
xlat
inc
pop
and
test
mov
push
sub
in
dec
lahf
dec
fs
ret
orb
cmp
inc
call
aaa
mov
lret
loope
fimuls
test
clc
ror
mov
loope
ds
xor
pop
push
jae
cmp
sti
add
sub
jl
dec
addl
mov
add
xor
xor
xchg
out
sbb
add
jno
pop
lods
enter
int3
mov
pop
addr16
incl
rcll
mov
pop
iret
movsl
and
inc
xor
inc
xorl
loop
out
jecxz,pn
aas
xlat
stos
enter
xor
fsqrt
lret
lret
mov
sbb
ret
call
or
fwait
push
test
xchg
insb
dec
fnstenv
or
lcall
cltd
mov
icebp
pop
fisubrs
test
pop
fwait
mov
pushf
inc
fisubrl
or
xchg
inc
xor
rclb
subl
cwtl
mov
dec
mov
iret
sti
mov
mov
jb
loope
and
and
nop
sbb
fwait
push
jl
pop
clc
xchg
mov
int
icebp
sub
cmp
adc
jmp
mov
outsb
jp
mov
nop
pop
aad
inc
pop
pop
fnstcw
mov
jp
lcall
sbb
push
roll
jns
push
sahf
popa
dec
cmp
imull
out
jp
sub
in
shll
mov
adc
movsb
rcll
not
inc
test
dec
push
jge
or
pop
lret
test
sub
fmuls
mov
mov
mov
mov
popa
pavgw
add
shl
mov
cmp
clc
and
push
inc
or
pop
adc
addl
mov
iret
add
or
sbb
iret
cmp
shl
scas
nop
inc
sbb
push
and
or
pop
push
arpl
popf
mov
mov
cmp
repnz
mov
cld
icebp
mov
popf
cmp
cli
fisttps
in
inc
add
jb
inc
push
or
mov
cmp
inc
cwtl
ret
mov
fcom
ret
xor
adcb
lret
dec
jmp
push
lret
jecxz
bound
xchg
dec
adc
ljmp
xor
fnstenv
xchg
aad
rcl
psubusb
pop
ret
dec
mov
pushf
and
aaa
je
pop
rorb
adc
adc
insb
mov
negl
inc
fcomps
mov
push
mov
lds
fimull
cmpb
xchg
xor
fs
mov
xor
ret
and
shl
dec
outsl
test
cmpsl
in
cmpsl
or
mov
mov
dec
mov
xchg
xchg
mov
cwtl
cli
mov
jge
mov
jnp
push
fisttps
xchg
shr
dec
lret
fs
fisubs
add
dec
mov
jne
sbb
mov
test
ljmp
cmp
jae
cwtl
sahf
or
or
push
repnz
sbb
mov
ret
lret
jmp
adc
cltd
inc
test
dec
and
xchg
faddl
sbb
scas
xor
pop
xchg
imul
insl
pop
lahf
scas
pop
movsb
pop
mov
and
adc
add
mov
jae
jo
sub
addb
jae
insl
nop
lret
cmp
add
test
add
cmp
pop
cmc
fsub
les
flds
sti
or
pop
and
push
scas
jmp
popa
push
dec
bound
mov
pop
out
jo
leave
dec
pushl
mov
push
test
dec
jmp
pop
inc
cli
repnz
fmull
jae
xor
mov
sahf
pop
iret
hlt
loop
mov
xchg
push
xchg
lea
push
inc
add
cmp
icebp
add
sar
pusha
outsb
rol
xor
xchg
movsb
bound
push
jb
adc
sqrtps
mov
sahf
aaa
and
or
mov
dec
repz
test
adc
lret
mov
dec
sti
dec
out
mov
test
push
xchg
xor
add
dec
cld
lods
push
subl
not
cltd
push
fisttpl
sub
cmp
mov
cmp
dec
cli
pushf
cmp
lahf
fnsave
xorl
or
cmp
movsb
in
incb
sbb
sbb
pop
mov
mov
les
sar
lahf
mov
imul
sbb
outsl
stos
call
or
enter
mov
cmp
push
in
mov
add
add
inc
sub
mov
dec
ret
add
cmp
mov
xor
jle
std
add
das
divl
or
or
and
push
lea
out
or
jmp
clc
dec
push
ds
rcrl
fldl2e
nop
pop
addr16
xor
into
shr
adc
push
sbb
int3
mov
push
sbb
sub
dec
add
in
mov
or
repnz
loopne
jge
xor
repnz
mov
rcrb
fnstcw
scas
cli
clc
add
pop
sub
out
pushf
arpl
pop
jne
imul
pop
lret
dec
mov
and
imul
shrl
mov
sbb
std
stos
add
mov
mov
stc
rcrb
aad
test
lock
dec
inc
inc
aaa
sbb
mov
fs
in
aad
inc
mov
xchg
stos
scas
fwait
pop
jne
mov
mov
fisttpl
and
lock
mov
pop
or
push
add
enter
in
shlb
lock
xchg
mov
sbb
int
and
sub
pop
push
push
mov
in
jecxz
jbe
cs
mov
dec
lahf
cmp
pusha
push
hlt
stos
dec
fdivrl
cmpsl
xor
movsb
jmp
mov
pop
daa
leave
xor
jg
cmpsb
pop
popa
ja
fisttps
or
jle
or
pop
mov
ret
popf
xor
cld
push
xchg
rcrb
lcall
adc
in
ljmp
pop
cmp
arpl
mov
pop
fcmovnbe
jb
adc
int
xor
sub
bound
push
loopne
pusha
lds
cmc
sti
sbb
jle
push
add
or
popf
aad
call
mov
xchg
js
cmp
adc
ljmp
inc
ljmp
cwtl
and
mov
xor
push
repz
aad
roll
dec
sub
jle
jl
mov
pop
repnz
loop
add
inc
cmpsl
dec
cld
mov
call
xchg
xchg
cmpsb
pop
xor
and
in
popa
push
popa
jns
jp
xor
inc
mov
movsb
in
repnz
clc
cmpb
ss
sti
test
or
add
mov
out
nop
mov
popf
test
cli
sbb
iret
pop
pushf
fs
hlt
fstpl
jp
ret
mov
fwait
push
hlt
sub
mov
mov
les
or
push
push
call
sub
xchg
aam
and
inc
jbe
hlt
mov
sbb
popf
repz
push
fisttpl
stos
icebp
xchg
jns
out
out
sub
insl
mov
lods
pop
scas
pop
cmp
dec
dec
push
es
sub
add
mov
cmp
mov
and
jmp
pushf
jnp
lret
push
dec
ret
dec
shll
inc
mov
rolb
sbb
xchg
add
clc
sbb
gs
stos
hlt
inc
cmp
sub
and
aad
mov
sarl
xchg
in
xchg
sub
cld
int
je
into
jmp
sbb
add
inc
mov
cmp
jns
adc
cwtl
sbb
dec
addr16
roll
pop
xor
jmp
and
push
js
push
jae
mov
cmpsl
mov
test
sti
mov
cmpl
inc
mov
sub
ljmp
dec
mov
rcl
mov
xchg
inc
loopne
or
sbb
mulb
lret
xor
in
stos
jmp
xor
call
xor
fwait
int3
mov
adc
xchg
sbb
scas
or
add
sbb
imul
add
rcrl
lret
dec
pusha
xor
hlt
fisttpl
outsl
sbb
ljmp
shlb
mov
mov
movsl
bound
mov
jno
pop
lods
cmp
mov
cmp
mov
xor
xlat
mov
jg
push
mov
test
cmp
out
js
pop
pusha
or
sub
xchg
cmp
int
jge
cmp
outsl
sub
push
xchg
leave
push
xchg
xchg
push
xlat
push
idivb
push
pop
push
cmpb
pop
pusha
ret
and
icebp
pop
test
lret
inc
ret
sbb
subb
mov
pop
jecxz
mov
push
hlt
sub
mov
xchg
jae
scas
or
push
xlat
push
push
push
mov
inc
cmp
xor
jnp
pop
stc
bound
outsb
push
and
xor
filds
je
xor
sti
es
lock
pop
add
clc
mov
insl
cmp
mov
pushf
xor
int
je
mov
or
je
mov
hlt
bound
cmp
cmp
popf
aas
pop
lcall
dec
sub
cmp
loop
inc
movsb
push
cs
sarb
mov
push
cmp
inc
add
push
punpckldq
imul
bound
nop
and
aaa
push
dec
fldl
fdivr
inc
rorb
lods
dec
dec
mov
jg
std
icebp
movsl
test
cltd
imul
push
sbb
rorb
jge
repnz
cmp
dec
sub
dec
cmpsl
inc
xchg
outsl
rorl
pop
repz
pop
or
mov
arpl
out
jecxz
mov
add
into
adc
and
pop
xchg
jle
cmc
dec
pop
add
inc
mov
jne
stos
dec
adc
cmp
gs
jge
imul
sahf
nop
addr16
movsl
in
mov
jo
pop
dec
jbe
loop
movlps
out
clc
fildll
ljmp
in
sub
sbb
lods
jl
xchg
test
add
imul
inc
dec
mov
cmp
push
loop
in
push
lds
sti
jae
insl
mov
icebp
mov
adc
flds
out
sub
inc
leave
mov
add
mov
mov
adc
jp
or
adc
rorb
fsubl
jns
mov
pop
or
stos
sarb
mov
adc
jb
insl
out
or
sub
lods
cmp
jge
mov
inc
cwtl
xchg
insb
addb
adc
sub
les
mov
lahf
fcmovb
push
pop
and
push
pop
add
ss
sbb
xchg
es
cmp
xchg
rolb
xchg
iret
test
cmc
add
rorl
movb
sub
mov
mov
sub
sbb
mov
loope
jl
add
mov
fsubr
push
add
into
mov
xchg
je
dec
cmp
aad
lahf
outsl
dec
jno
jl
ja
dec
jno
aam
mov
sub
xlat
xor
addr16
ret
jne
insb
pop
ss
sbb
push
or
mov
xor
push
das
aad
pop
test
in
ret
jp
rcll
fs
pop
or
in
sub
or
mov
outsb
pushf
cld
mov
mov
imul
or
std
fistpll
xor
out
mov
inc
ds
jmp
int
lds
fcoml
pop
jp
add
mov
test
nop
push
push
outsb
and
jl
pusha
test
arpl
leave
dec
pop
dec
inc
dec
mov
jb
lcall
stos
mov
mov
inc
and
jns
add
sub
jmp
orb
mov
adc
imul
ret
test
sub
inc
cwtl
arpl
push
aaa
jns
movsl
lods
dec
shll
cmp
addr16
iret
jmp
pop
jns
in
je
popf
mov
inc
lret
jb
in
scas
and
out
das
cmpsl
and
fiadds
insl
pop
xchg
sbb
xchg
stos
push
lods
test
add
fs
jge
cmp
lea
adc
xchg
or
add
idivl
xor
and
pusha
mov
pop
std
mov
testb
dec
inc
dec
outsb
xchg
push
js
cmp
mov
pop
xor
jnp
pop
imul
adc
sbb
fsts
mov
fldenv
lret
inc
rcrl
adc
pop
push
sti
out
mov
sarb
int3
ret
adc
rclb
clc
push
inc
outsb
cmp
add
xchg
push
inc
inc
addr16
mov
xchg
subl
jp
sbb
pop
stos
hlt
mov
jb
adc
push
ror
ret
xchg
loope
mov
jo
sub
and
push
xchg
scas
gs
push
shrl
loope
cmp
test
repnz
inc
jmp
fbstp
test
inc
aaa
inc
shrl
pop
or
fcmovu
add
push
ret
cmp
cmp
cld
cmp
mov
mov
out
jo
cmc
enter
or
daa
pop
sub
iret
movsb
pop
rcl
test
test
jb
jg
sarb
push
or
ret
jp
imul
inc
sbb
orl
xchg
repnz
jno
movsb
pop
mov
inc
arpl
bound
xor
dec
lcall
ljmp
adc
inc
xchg
cmp
dec
enter
loopne
add
push
or
sub
mov
fmull
nop
inc
pop
mov
pop
scas
in
scas
mov
rclb
or
pop
scas
rolb
rclb
hlt
shl
push
mov
movsl
or
dec
mov
outsb
sbb
pop
popa
dec
add
mov
int3
sbb
test
mov
in
sahf
loope
loop
adc
shrl
push
xchg
jae
test
sbb
cmc
mov
inc
xor
jge
add
xchg
xchg
push
cmpsb
stc
mov
aam
mulb
jg
pop
arpl
inc
dec
cli
loopne
and
dec
test
xlat
jno
lahf
popf
lcall
mov
cmp
shll
iret
in
add
or
push
insb
mov
iret
or
lahf
imul
xchg
mov
mov
xor
imul
xchg
scas
sub
mov
cmp
and
or
insl
jae
fstl
inc
aam
popa
adc
mov
out
adc
xchg
js
jmp
mov
xchg
ds
mov
mov
andl
inc
inc
notb
nop
or
jnp
xor
or
sahf
or
pop
pop
xor
sbb
dec
orps
ds
xchg
mov
movsl
and
cmp
sub
outsb
cli
addr16
cmpsl
sahf
push
mov
fnsave
fsubrl
cltd
cmp
jp
pusha
jns
xchg
push
jecxz
incb
mov
jb
movsl
idivb
out
push
push
das
les
hlt
das
mov
icebp
movsb
inc
mov
mov
push
outsl
lret
cmc
stc
ficomps
dec
push
mov
notb
lahf
cli
in
jmp
inc
test
cmp
xchg
or
inc
imulb
cmc
sbb
bound
add
inc
pusha
dec
sbb
notb
data16
movsb
cwtl
mov
aaa
out
in
cli
and
sbb
pop
rcl
add
or
imul
clc
push
jmp
es
cltd
shl
mov
orl
outsl
push
and
mov
pusha
push
jne
push
add
jmp
add
in
ret
xchg
and
lods
mov
jecxz
aam
push
lret
addr16
negl
arpl
cmp
xor
jp
inc
nop
sub
cld
sbb
call
and
jb
fcoms
push
jge
in
pop
mov
loope
mov
push
or
push
add
lea
pop
les
lock
outsb
inc
jo
mov
xchg
mov
jmp
xchg
xchg
popf
call
push
lods
sub
jbe
and
add
and
push
cmp
mov
mov
stos
inc
cmpsb
add
xchg
add
inc
adc
xchg
adc
repz
cmp
xchg
test
jge
movsl
and
fldcw
adc
mov
xchg
dec
cwtl
dec
incb
jecxz
leave
lea
jmp
cli
push
inc
or
cmpsb
pop
jmp
sub
ret
sbb
les
adc
iret
mov
mov
sbb
mov
jmp
push
jo
popf
adc
jmp
mov
addl
jle
lret
fwait
lahf
push
mov
in
fiaddl
pop
jae
aas
mov
call
imul
movsl
dec
rolb
mov
in
in
or
push
call
or
xchg
aaa
mov
pop
scas
mov
pop
mov
push
jbe
rorl
cmp
jl
or
cli
sub
add
or
mov
and
dec
popa
in
mov
repnz
mov
loopne
in
xchg
das
mov
xor
adc
nop
push
adc
inc
cmpsb
jne
cmc
cmp
xchg
pop
adc
shl
mov
lret
or
xorl
pushf
movsb
xchg
shrl
cmpsb
xchg
xchg
ror
xchg
cmp
mov
mov
lcall
aad
mov
and
push
lahf
mov
xor
in
push
imul
jo
mov
pop
cmpsb
into
pusha
pop
sub
mov
in
or
cli
sbb
sti
jle
adc
lcall
or
sbb
out
cmc
sbb
andb
lret
fildl
jecxz
inc
ficompl
inc
adc
jl
xchg
repz
or
nop
sahf
ds
sbb
xor
sub
lods
sub
lods
or
jne
push
sbb
sar
test
and
or
push
xchg
sti
mov
mov
divl
repz
mov
or
sub
mov
jp
xor
fstp
pushf
lds
fs
out
adc
pop
in
testl
dec
xorl
lock
mov
shll
lahf
and
pop
mov
loop
arpl
int3
cmc
ficompl
je
pop
sbb
jne
inc
ror
mov
adc
adc
mov
dec
jge
mov
add
popa
outsl
and
jbe
mov
call
mov
dec
xlat
add
push
nop
jbe
cmpsb
adc
sbb
cmp
mov
loop
test
sbb
pop
movsb
dec
pop
pop
incb
push
popa
fsub
mov
repnz
pop
mov
inc
xchg
pop
push
push
jno
mov
rcl
leave
mov
mov
inc
xchg
inc
pop
xchg
mov
das
jnp
push
int3
mov
lahf
pop
xchg
sub
scas
test
xlat
pop
bound
mov
xchg
xchg
ret
cmp
sbb
scas
insb
sbb
repz
popf
mov
jg
mov
cmc
sub
sub
sub
pop
repz
sbb
mov
aam
xor
jle
mov
mov
inc
cmp
xor
lds
aam
push
cltd
and
jb
in
adc
mov
movb
inc
call
cmp
arpl
or
mov
cld
xchg
mov
aaa
xchg
fstl
cmpsb
pop
in
mov
mov
push
inc
adc
mov
ds
aas
jp
xor
nop
mov
adc
mov
cmp
test
out
jl
xchg
pop
push
les
pop
jne
xlat
pop
mov
push
mov
movsl
pop
lcall
mov
mov
test
arpl
push
xor
shrb
jne
inc
addr16
xor
cmp
test
mov
loopne
gs
mov
sbb
sub
jecxz
lods
test
pusha
jnp
fmull
les
cmp
pushf
rorb
rolb
fsubrs
cmpsl
call
adc
jnp
mov
and
pop
xchg
mov
out
pop
jge
xchg
icebp
push
insb
push
fbstp
dec
dec
emms
mov
push
inc
inc
and
popa
pusha
jb
jg
subb
dec
xchg
into
es
push
pop
cmc
iret
pusha
jbe
das
add
xchg
hlt
or
jecxz
mov
test
xchg
cmp
sub
push
lds
addr16
stos
popa
jl
outsb
nop
scas
xorb
aam
lds
testl
jmp
pop
repnz
out
imul
cmp
adc
loope
push
sti
push
push
pushf
stos
mov
jns
xchg
pop
nop
adc
pop
jno
in
cld
and
outsl
sahf
outsl
fwait
cmpsl
mov
fadds
xchg
mov
xor
iret
inc
xor
sahf
mov
sarl
jbe
mov
rcrb
cmc
aad
scas
fadds
mov
repnz
cltd
push
pop
ss
loopne
clc
push
test
push
out
push
test
jp
nop
jecxz
call
cmp
stos
xor
pop
inc
adc
in
jle
mov
outsb
lcallw
lods
cmp
leave
adc
adc
mov
out
repz
xchg
mov
or
mov
sbb
pop
movsb
or
js
testb
pusha
mov
inc
sahf
jnp
cltd
xlat
pop
cmpsb
fmuls
int
pop
outsl
jne
aam
jecxz
cmpl
cltd
xlat
jecxz
xchg
and
xor
lock
jmp
orl
insb
mov
lock
dec
pop
sbb
fwait
xlat
popf
scas
fisubs
das
pop
mov
sub
push
xlat
adcb
lock
inc
mov
add
push
or
movsb
rolb
jg
aaa
out
xchg
popa
mov
sbb
adc
push
loop
mov
pop
leave
inc
push
loope
lret
test
sbb
push
mov
mov
xor
pop
imul
push
push
push
test
shll
es
sub
outsl
insb
int3
dec
ficompl
leave
cwtl
jae
mov
and
push
stos
or
mov
repnz
xchg
add
scas
adc
adc
push
lcall
popf
outsb
xchg
sbb
call
les
cmc
call
cli
xor
and
add
inc
dec
gs
in
insl
mov
and
jne
dec
jl
xor
movsb
pop
mov
pushf
stos
adcl
mov
push
out
mov
jnp
push
mov
jns
ljmp
mov
fisubrl
in
cmp
mov
mov
mov
aad
jp
test
jmp
adc
xchg
hlt
in
scas
push
xchg
das
out
xchg
add
js
dec
jae
out
mov
std
loopne
gs
popa
pusha
mov
add
lret
xchg
xchg
call
push
test
xor
mov
repz
xchg
orb
xchg
filds
xchg
lea
movb
popf
dec
into
inc
lea
sbbb
xor
mov
cwtl
pushf
cmc
lods
ss
mov
jmp
sbb
push
lret
sub
out
pop
sbb
pop
mov
xlat
jg
pop
fcmovnbe
mov
add
dec
neg
pop
lret
in
fsts
dec
repnz
shl
arpl
and
cmp
cmp
adc
pop
sub
outsl
lret
jne
sub
ret
push
fst
cmp
sub
xor
xchg
sbb
mov
into
cmc
or
and
add
addl
adc
cmp
adc
sti
mov
bound
push
mov
stc
loopne
lea
xor
pop
mov
pop
dec
push
lcall
xor
mov
push
and
cmp
pusha
daa
ljmp
xor
lods
fs
rcl
mov
pop
aam
ja
and
mov
push
aam
cmp
scas
icebp
and
mov
adc
enter
popf
pushf
pop
mov
out
daa
ljmp
xchg
cmp
les
aas
mov
addb
jnp
add
xlat
sbb
or
inc
loopne
test
jns
popa
mov
push
mov
and
call
mov
jne
insl
lods
fdivrl
push
fsubr
fldenv
sbb
hlt
and
cs
in
out
dec
lret
pop
and
adc
vpsraw
ret
xor
lds
orl
call
ret
dec
mov
pop
pop
loop
aas
cltd
lahf
sub
mov
or
mov
pop
dec
movsl
rorl
cmp
pop
fdivr
dec
decl
push
in
mov
call
stc
sbb
movsl
stos
repz
aam
cmp
push
insl
pop
ja
loop
out
in
xor
sahf
push
fldt
into
and
xor
xchg
xchg
mov
mov
sbb
sbb
sbb
movsl
loop
or
xor
xchg
mov
aad
jge
cmp
movsb
icebp
aaa
mov
push
sbbb
jae
xchg
fdivl
cmp
pop
adcb
scas
jnp
ret
sbb
jno
hlt
mov
mov
aam
lahf
cltd
push
frstor
xchg
in
mov
sbb
lcall
sbb
mov
popa
mov
inc
dec
push
sbb
pop
push
add
jbe
xchg
jg
imul
mov
daa
das
sbb
aaa
add
xchg
hlt
push
mov
mov
add
xchg
mov
push
and
shrb
mov
test
leave
cmp
sub
test
lock
jp
jns
mov
cld
xchg
enter
das
nop
or
or
les
mov
push
push
mov
pop
mov
xchg
dec
orb
or
xlat
rcll
pop
xor
ljmp
add
notb
mov
test
stos
popf
mov
dec
dec
xchg
repz
sbb
pop
mov
je
sub
push
insl
cmp
shll
adc
xchg
cld
shrl
adc
cltd
pop
xchg
ret
and
pop
cmp
pop
imulb
in
jns
mov
bound
fwait
scas
jg
xor
mov
jge
jg
inc
aad
lea
add
sbb
pusha
aaa
add
pop
mov
mov
mov
mov
cs
or
sbb
das
lock
sahf
push
popf
in
sahf
mov
ds
test
test
lds
mov
bound
xchg
inc
jae
mov
pushf
sarl
stc
jmp
outsb
sub
lret
xor
out
stos
and
fcom
in
or
shl
cmp
cwtl
fsubp
mov
adc
mov
or
xor
xor
in
push
sbb
jae
cmp
jl
pop
cmp
cmp
or
sbb
mov
xchg
xor
arpl
ficoms
cmp
push
dec
cltd
shr
dec
add
cmp
push
pop
sbb
xor
jnp
jo
cmp
stc
fwait
daa
jbe
pop
pop
cmpsl
jle
pushf
mov
xchg
data16
jne
mov
jnp
and
mov
test
jb
lods
adc
add
test
test
inc
rcrb
testb
mov
pop
push
push
push
mov
jns
dec
or
dec
out
hlt
cld
dec
and
adc
das
adcl
stos
sbb
sub
loop
cmpsl
xor
scas
xchg
ret
sbb
sahf
mov
mov
jae
lock
cli
and
pop
add
clc
cmp
stc
hlt
jl
in
test
andb
sub
ret
cmp
cltd
je
push
scas
sbb
and
inc
imul
popf
es
push
cmp
cld
push
sti
add
aam
jo
data16
jno
lods
or
leave
stos
jg
mov
add
adc
loope
repz
adc
inc
lods
mov
imul
repz
jo
int3
jb
add
nop
cmp
or
adc
incl
mov
mov
fmull
aaa
xchg
addb
add
icebp
lret
mov
iret
je
or
xchg
cmp
repnz
insl
aam
rorb
out
push
sbb
pusha
lcall
mov
and
pop
xchg
inc
and
stc
fidivl
sarl
mov
in
mov
jnp
out
xor
dec
ljmp
mov
sub
adc
sbb
dec
and
xor
pop
jns
cmpsl
lcall
jns
rclb
sbb
or
aad
loope
pop
out
and
xchg
cmp
nop
and
dec
addr16
je
xor
mov
pop
shl
cli
jle
aaa
dec
jae
sub
int3
movsb
adc
and
lret
ja
inc
rcrl
dec
add
int3
call
xor
cld
pop
pop
rcrl
out
push
cmp
mull
cmpsl
fnstcw
mov
push
cmp
clc
ret
mov
int3
je
out
aad
xor
out
sub
jbe
sbb
in
call
sub
adc
jmp
test
dec
movsb
lods
outsb
pop
adc
jecxz
or
sbb
lahf
cmp
mov
out
xchg
les
xor
add
pop
rcrl
mov
jne
imul
cwtl
inc
add
aas
cli
lods
xchg
mov
aad
cli
cmp
and
lcall
sub
imul
mov
jp
push
ret
cmp
jne
push
mov
test
fcoms
fisubs
out
aad
shl
mov
mov
addl
or
adc
mov
pop
stos
jmp
les
dec
fwait
mov
clc
xchg
cmp
sub
jae
fiadds
mov
mov
cmp
stc
mov
jns
imul
aaa
jmp
cmp
inc
cwtl
insb
iret
push
daa
ljmp
mov
jmp
dec
mov
mov
ljmp
cmpsl
stos
dec
clc
and
jns
out
fucomi
ss
pusha
pop
and
sbbl
test
lret
scas
pop
fs
push
rolb
xchg
push
xchg
das
lcall
cltd
and
into
jp
xor
mov
inc
leave
adc
movsb
pop
pop
sub
jb
cmp
scas
add
cwtl
in
lret
xchg
xchg
adc
cmpsb
flds
xor
loope
and
in
add
call
sub
fsubs
dec
not
or
dec
rcl
rclb
shl
fwait
shll
cmp
mov
lret
cmpb
jp
lea
mov
sarb
sub
out
add
mov
cmpsb
and
shl
cli
push
scas
mov
mov
aad
bound
pop
mov
or
xlat
hlt
mov
pop
sub
fsubl
sbb
call
sbb
rcl
out
mov
mov
or
scas
mov
movsl
mov
inc
add
ret
repz
enter
inc
and
xchg
dec
and
das
adc
sub
test
add
inc
sub
xor
dec
insb
xor
xor
sub
sub
shrb
loop
dec
xor
test
push
sbb
push
adc
mov
jle
lods
clc
leave
inc
fcompl
cli
fsubl
shr
jmp
push
cmp
push
dec
stos
and
sbb
inc
jae
stos
test
int3
mov
add
cmp
jae
add
out
pop
push
pop
sbb
sub
dec
add
movsb
rcll
sbb
jae
rcrl
lcall
out
lret
push
cmpsl
mov
orl
das
mov
inc
jecxz
pop
mov
hlt
cmp
jg
flds
add
or
add
inc
insw
test
sbb
dec
pusha
inc
push
sub
add
nop
add
dec
fstpl
fstps
ror
aaa
push
fs
nop
pop
and
inc
push
stc
jle
push
push
jge
icebp
pop
xor
xor
gs
aad
and
sbb
ficoml
pop
jmp
movsb
or
rcrl
xchg
inc
les
movsl
addr16
sbb
daa
jbe
jg
fisttps
ds
loope
push
stos
jge
or
insb
repz
sbb
mov
mov
stos
mov
test
xchg
popf
push
mov
fimuls
xchg
jns
in
push
jns
rol
inc
scas
mov
xchg
inc
movsl
jg
cmp
mov
gs
lea
jno,pn
lds
mov
and
push
lea
push
push
jno
sbb
loop
xor
xchg
inc
rcll
outsb
sbb
xchg
pushl
sub
jbe
inc
jnp
bound
jnp
sub
loope
sbb
dec
jae
cld
mov
loope
push
stos
outsl
clc
mov
xor
xor
xchg
fs
inc
out
lods
repz
in
iret
mov
push
mov
mov
sub
inc
lods
cmp
jl
jb
ja
mov
pop
jl
mov
jge
in
jecxz
lahf
mov
xchg
shl
pusha
add
test
cmpb
stos
lahf
out
nop
jp
scas
test
mov
aaa
pushf
imul
dec
lds
leave
xor
mov
fists
scas
subb
pop
repz
adcb
pop
andl
js
adc
cmp
sub
inc
and
ret
popf
push
fadds
lea
mov
lret
push
xchg
mov
subl
out
cmp
push
sbb
rcll
adc
ficoml
test
outsl
fldlg2
in
jbe
popf
pusha
fwait
rcr
cmpsb
pop
fisttpl
add
push
xchg
or
push
mov
lahf
fildl
inc
jno
outsl
cmpsl
call
mov
sub
mov
sub
sbb
sbb
mov
jecxz
shlb
rol
repnz
xchg
dec
adc
daa
push
ret
aad
jae
jmp
push
fnstsw
xchg
out
pop
dec
xchg
jp
push
out
mov
lods
int3
jmp
push
inc
adc
adc
lods
out
mov
adc
mov
inc
test
cmp
scas
inc
xlat
aas
adc
lahf
leave
lea
mov
repz
inc
and
int3
add
test
ljmp
dec
jo
or
mov
aam
mov
pop
adc
jmp
test
enter
cmp
mov
adc
or
jmp
adc
fimull
mov
fwait
in
mov
sbb
push
mov
out
lret
jns
jg
scas
js
pop
mov
push
jno
pushf
test
scas
jge
jg
mov
mov
ret
add
xchg
packssdw
in
clc
cmp
inc
cli
jge
fs
movsb
and
stos
or
or
mov
cmpsb
aaa
stos
jbe
cwtl
xlat
push
les
mov
adc
sbb
jg
xor
dec
lock
aas
aaa
sub
dec
out
add
mov
iret
pop
mov
sbbl
mov
fisubrs
sahf
test
sub
loope
int
pop
cmp
push
adc
jmp
and
inc
jb
cmp
negl
ret
inc
jno
shlb
xor
mov
in
push
out
idivl
mov
les
mull
dec
mov
jl
fstl
add
inc
stc
fadds
mov
out
data16
lahf
mov
add
pop
stc
addb
stos
xor
and
outsb
test
roll
push
das
dec
ret
adc
fwait
push
and
pop
mov
rcl
adc
nop
sbb
shll
aaa
xchg
out
mov
test
mov
inc
cmp
out
stos
mov
xchg
adc
shl
jle
mov
repnz
push
fildl
into
jp
push
lods
aas
repnz
popa
pop
popf
lcall
sub
mov
or
mov
jb
xchg
sub
jns
jp
addb
es
out
es
popw
push
adc
int3
inc
xor
xor
fisttpll
and
xchg
outsl
icebp
xchg
push
mov
mulb
outsl
in
dec
jg
ret
repz
in
into
int
div
xor
iret
sbb
add
xchg
xchg
and
not
and
sub
cmp
xchg
xor
adc
ret
mov
insb
dec
jbe
stos
je
cmp
testb
push
ds
mov
test
ret
jecxz
jge
adc
loope
mov
ret
cmpsb
mov
sub
and
add
and
jne
mov
outsb
movsl
ljmp
add
sub
lret
mov
xor
jmp
shll
inc
jb
pop
sbbl
mov
xor
push
stos
adc
pop
pop
movsb
dec
or
ror
dec
repz
jmp
testl
pop
adc
clc
mov
outsl
add
pop
cld
sbb
repnz
dec
fwait
sub
pop
jp
pop
push
sbb
cmp
nop
push
test
test
mov
fwait
mov
in
or
xor
loopne
jle
xchg
pusha
lret
mov
xor
xor
push
push
shrl
adc
iret
cwtl
cmpsl
cmp
mov
mov
pop
push
mov
pushf
or
imul
enter
fidivrl
xor
cmc
push
scas
fdivr
rolb
sbb
pop
aad
pushf
lds
lret
adc
push
cmp
xchg
push
sub
les
inc
dec
mov
rorl
mov
fwait
jmp
stc
jb
xchg
or
jae
mov
cli
aas
mov
data16
ret
mov
xor
fidivrl
aas
sub
mulb
push
dec
test
sbb
xchg
add
out
rcrl
sbb
adc
adc
pop
hlt
mov
xchg
xchg
lock
cs
mov
lahf
add
xlat
stc
mov
pop
push
int3
ja
cmpsl
jl
fisttps
pop
daa
enter
sbb
insb
cmp
xchg
add
rorl
dec
add
and
pop
jecxz
insl
adc
sbb
out
imul
push
push
pop
fldl
lods
test
push
jno
ds
stos
add
lds
cltd
popf
shlb
aam
ja
adc
pusha
mov
push
cmp
stc
and
rcll
incb
and
sub
and
icebp
pop
add
sbb
int3
sbb
fmuls
xor
pop
ja
mov
lcall
dec
add
js
sbb
inc
out
jmp
sarb
mull
lock
mov
inc
scas
lds
jae
cmpsl
cli
out
aad
cmpsb
xchg
data16
ljmp
daa
xchg
insb
aas
outsb
sub
aaa
sub
mov
push
mov
stc
aaa
add
xchg
test
test
loope
and
pop
push
lahf
sub
fdivrs
movsl
mov
frstor
jg
popf
loop
insl
push
je
xchg
mov
jo
adc
mov
mov
test
leave
pop
mov
pop
mov
sbb
flds
inc
hlt
sub
mov
xchg
lret
xchg
dec
dec
pop
test
sbb
pushl
loopne
je
dec
push
xor
ret
lea
dec
push
mov
ja
mov
xchg
sbb
iret
sarl
call
ljmp
mov
add
shrb
lea
lcall
or
dec
adc
xor
xchg
adc
dec
iret
xchg
fstl
push
xchg
xor
xor
test
push
int3
insb
out
or
sbb
sub
or
bound
je
lret
mov
jp
push
scas
repnz
mov
jmp
scas
adc
mov
pusha
adc
push
leave
fildl
pop
dec
popa
sbb
rcl
add
cwtl
in
add
je
push
clc
inc
call
sub
cmp
dec
cbtw
mov
fadds
inc
jmp
xor
mov
xchg
add
xchg
pusha
bound
mov
xor
jle
xor
and
mov
xor
rcr
adc
sbb
lea
arpl
jp
and
scas
inc
jns
mov
bound
jge
sub
fwait
mov
push
out
fbld
jns
jmp
jb
push
jl
mov
pop
mov
inc
xchg
setp
push
xchg
cs
sbb
loope
clc
lret
add
dec
push
sti
popf
cmpsb
cmp
sub
test
and
cmc
daa
and
push
in
cli
scas
inc
iret
xor
inc
outsl
insl
dec
pop
mov
or
or
dec
sub
add
and
push
pushf
and
xor
mov
inc
and
daa
sahf
mov
and
scas
ror
mov
or
push
scas
or
frstor
push
aaa
pop
fisubs
enter
rclb
pop
popf
sahf
nop
test
mov
adc
out
rorb
mov
icebp
out
sbb
test
mov
movsb
sahf
hlt
aam
sbb
mov
push
ss
sub
loopne
out
mov
cmova
inc
xchg
sbb
xchg
xchg
mov
mov
pop
mov
add
sahf
outsl
or
add
or
aaa
pop
sahf
sbb
push
mov
jmp
ja
mov
popa
mov
outsl
inc
lcall
or
bound
mov
imul
aam
fidivrl
cmp
outsb
inc
and
mov
mov
out
hlt
xchg
jo
mov
cmpsl
aaa
mov
lret
adc
lcall
repnz
sub
repz
rcll
mov
pop
aas
xchg
sbb
lea
fs
pop
add
and
and
push
mov
andb
adc
sub
testl
fbld
pop
not
adc
into
push
sbb
push
jae
push
dec
mov
pusha
xchg
sbbb
xlat
add
lods
rcl
mov
add
pop
mov
js
loop
push
pusha
stos
mov
push
jns
or
je
lods
add
outsl
mov
setno
repz
xchg
sub
popf
aad
loop
push
frstor
sbb
dec
jo
sub
push
mov
icebp
jge
std
nop
stos
gs
xchg
ret
sub
jb
sbb
in
in
adcb
sti
test
sbb
add
stos
sub
dec
or
iret
dec
mov
enter
xor
pop
jno
mov
push
popf
push
pop
lret
add
dec
adc
mov
rorl
pushl
fidivl
fiaddl
xor
hlt
cli
push
jns
sbb
int
sbb
sub
xor
or
rclb
leave
sub
jmp
loop
xchg
shlb
jp
sub
in
mov
std
test
sbb
outsl
sbb
mov
filds
sbb
aaa
pop
negb
sbb
cmpsb
push
popf
push
push
sbbl
bound
push
xchg
xlat
mov
jl
and
fisubl
push
adc
out
jne
rorb
sbb
push
cwtl
add
imul
fstps
call
addr16
in
xlat
lahf
cmp
mov
jns
or
push
mov
out
das
push
mov
or
pop
mov
stc
in
xchg
scas
or
push
mov
stc
cmp
cld
mov
nop
dec
int3
pop
pusha
bound
rcrl
sbb
in
mov
push
sbb
enter
ret
ret
sbb
fcoml
adc
xlat
dec
dec
lahf
dec
adc
add
push
dec
sbb
sbb
pop
jae
push
dec
dec
inc
outsl
adc
push
and
clc
mov
mov
fnstenv
pop
loop
filds
jns
dec
mulb
jne
pop
jne
jecxz
enter
clc
out
mov
call
je
push
push
mov
std
scas
jno
fdivr
dec
ret
xor
aaa
cmp
mov
nop
push
mov
divb
ljmp
cmp
jbe
test
lods
int3
xchg
cmp
jae
pop
insb
dec
jge
ljmp
jl
sub
lds
sub
inc
pop
sbb
fisttps
int
sbb
addr16
repnz
pop
cmc
inc
mov
jne
jb
sbb
loope
inc
dec
sbbl
cmp
insl
pop
std
or
sbb
aad
inc
in
adc
pop
xor
lret
mov
dec
sbbb
fwait
out
mov
cmp
push
jno
pop
addl
int
mov
cwtl
pop
test
dec
inc
and
dec
roll
repnz
orl
fdivrl
pop
xchg
adc
data16
faddl
pop
jnp
stos
cwtl
out
pop
dec
jnp
pop
insl
xor
mov
mov
xchg
jecxz
cmp
cmp
out
js
rclb
js
in
adc
jbe
xor
adc
ljmp
dec
xor
xchg
bound
jns
call
mov
inc
add
cmc
cs
adc
cs
daa
movsb
cwtl
out
push
and
adc
sbb
gs
push
and
fst
xor
in
pop
lds
mov
or
out
int
gs
xchg
pop
pop
mov
dec
aam
mov
xchg
add
jg
or
mov
jg
iret
cmpsl
neg
xor
sbb
roll
pop
push
insb
bound
sub
imul
cmpsb
ret
movsl
xchg
add
aam
call
hlt
ret
jnp
mov
pop
out
and
aaa
jne
in
lock
mov
adc
aam
shrb
pop
inc
repz
add
int3
shrl
xchg
pusha
nop
ljmp
mov
adcb
adc
inc
sbb
push
mull
ret
fxch
mov
les
pop
lods
scas
jecxz
xchg
push
je
adc
jp
ret
sub
into
cmp
pusha
daa
cmpl
enter
stc
fdivrp
mov
inc
jge
jne
aas
aaa
js,pn
sbb
wbinvd
rep
dec
push
cmp
pop
dec
fnstenv
lea
sbb
push
cmp
into
mov
mov
mov
das
jae
cmp
pop
test
out
inc
sub
lahf
cmp
mov
hlt
gs
mov
iret
and
mov
mov
je
fnsave
push
pop
imul
sbb
test
inc
mov
daa
or
lods
stos
lds
mov
mov
shlb
or
test
and
pop
mov
mov
and
xchg
mov
mov
push
in
aam
repnz
jno
xchg
cwtl
xchg
xorb
sub
inc
pop
fisttpl
mov
out
movsl
inc
sti
sub
int
imul
mov
test
fs
adc
sbb
mov
fidivrl
call
dec
pop
rol
es
fstps
call
fstl
sbb
mov
je
xchg
sbb
xor
dec
js
scas
jne,pt
dec
pop
mov
jecxz
aam
ss
out
xchg
fmull
fnsave
cmc
fwait
push
and
cmp
inc
jbe
cmp
or
cmpsl
pop
jae
test
jecxz
out
aaa
cmp
in
mov
out
mov
bound
lret
imul
loopne
into
dec
mov
push
enter
shr
into
jno
test
fistps
mov
and
fsubrs
xor
dec
ljmp
cwtl
sbb
inc
xor
push
out
jae
scas
lcall
push
sub
mov
sbb
fisttpll
or
mov
push
js
push
add
mov
cmp
int
mov
sbb
and
stos
pusha
mov
add
mov
cld
xchg
dec
rolb
xchg
mov
insl
sub
pop
and
jecxz
dec
or
jns
or
mov
sarb
es
add
xor
mov
sti
mov
mov
pushf
push
nop
inc
mov
mov
fimuls
and
ret
mov
faddl
int3
inc
mov
shll
pop
cld
scas
sub
loopne
sub
add
mov
scas
xor
shlb
push
rcr
les
in
fidivrs
pop
or
js
xor
mov
xor
xor
fwait
mov
cmp
cmc
and
out
mov
es
fcmovb
in
test
pop
out
mov
nop
dec
mov
in
lret
scas
or
cmpsb
stos
mov
pop
push
jg
js
adc
mov
std
xor
or
mov
inc
fsubl
in
retw
xor
aad
jl
test
lret
add
ret
in
adc
test
dec
lret
and
add
push
xchg
mov
sbb
cmpsb
div
ljmp
mov
mov
cmp
mov
test
ljmp
mov
imul
les
sub
mov
xchg
in
sahf
imul
mov
sbb
adc
fcmove
sbb
xor
lods
scas
mov
insl
aaa
xor
adc
bound
jns
mov
push
ds
fstp
sbb
out
sub
aam
shl
xchg
sub
add
push
pushf
xor
popa
lods
mov
out
mov
aad
fnstenv
mov
push
pop
sub
adc
sbb
jae
addr16
add
sbb
and
dec
push
sub
clc
and
mov
cmp
addr16
pop
pushw
sub
and
repnz
xchg
jp
push
mov
cmp
xlat
lret
adc
push
lret
shll
mov
adc
lret
pop
add
or
mov
or
into
jnp
lret
bound
add
pop
xchg
arpl
xlat
push
aas
push
aas
cmp
dec
sub
inc
xchg
push
cmp
xor
push
adc
cmpsl
xchg
ja
xor
add
inc
dec
icebp
stos
lret
pop
dec
in
jecxz
rcll
xchg
xor
push
addb
jae
mov
inc
pop
je
outsb
mov
pop
sbb
push
mov
push
loopne
push
nop
push
pushf
sbb
lret
jecxz
mov
clc
dec
adc
jb
std
push
movsl
sahf
lods
sub
arpl
js
inc
mov
adc
in
ficompl
es
or
add
dec
push
mov
decl
or
mov
jg
xlat
pop
and
repz
fsubrs
test
lods
ss
cltd
setbe
mov
inc
mov
inc
push
testb
ret
je
adc
pop
adc
adc
mov
jno
mov
xor
mov
xor
lods
jg
push
xorl
dec
aas
mov
inc
lret
aas
ljmp
dec
sbb
adc
xchg
in
jbe
adc
mov
xchg
push
and
jl
or
js
inc
cmp
dec
insb
cmc
sub
rorb
adc
add
in
rolb
rolb
icebp
adc
jo
or
test
rcr
mov
scas
je
loop
aas
loop
xchg
jp
test
pop
rol
addb
out
push
add
leave
inc
pop
iret
fidivl
pop
mov
mov
cli
and
test
or
or
sahf
mov
jp
dec
test
sub
dec
inc
sub
mov
mov
cli
push
jle
and
and
stos
cmp
mov
cmpl
pop
pop
ss
pusha
std
js
xchg
cmpsl
mov
add
mov
in
ja
std
jmp
subl
test
sub
pop
test
cmp
scas
sti
pop
adc
push
ud0
push
xor
stc
cld
mov
or
sub
test
mov
lret
jg
jp
and
mov
xchg
lret
dec
shl
sbb
subl
imulb
repnz
cmp
inc
nop
mov
mov
hlt
fs
fs
xchg
jne
scas
sbb
mov
shl
fdivl
mov
cwtl
cmp
in
xor
in
in
pop
mov
dec
mov
mov
pusha
cmpl
jmp
mov
int
jg
daa
or
bound
leave
jecxz
sbb
xlat
or
jge
mov
data16
adc
jnp
lret
shl
adc
push
daa
inc
pop
add
or
jb
fwait
test
mov
lcall
out
sbb
mov
pushf
add
hlt
sbb
ljmp
lea
mov
adc
test
lea
scas
sti
rclb
inc
add
mov
fisubl
test
lods
addr16
stos
jp
mov
or
hlt
aas
inc
inc
outsl
int3
stos
push
lods
nop
inc
les
jecxz
cmp
jne
sbb
xor
or
aam
sahf
pop
roll
stos
loop
jmp
icebp
imul
xchg
push
loopne
iret
mov
mov
popf
mov
ljmp
imul
fs
insl
jnp
adc
cmp
adc
lock
jb
sbb
xchg
stos
inc
jmp
mov
fwait
mov
lretw
clc
push
add
pop
ficompl
in
cmovl
sbb
sti
lcall
dec
or
inc
iret
fdivl
faddl
mov
or
mov
cwtl
push
ja
fidivs
mov
lods
das
mov
in
mov
fwait
imul
pop
and
dec
and
pop
jecxz
cli
push
xor
push
sub
push
dec
ret
les
add
dec
sub
xor
pushl
in
lods
xchg
aad
cmpsb
ja
dec
call
jp
xchg
mov
iret
mov
mov
sbb
cmp
adc
lods
mov
or
adc
mov
scas
mov
lock
xorl
cmpsb
lea
iret
and
mov
enter
xorl
iret
je
adc
jae
pop
test
mov
push
or
outsl
mov
inc
push
das
xchg
inc
pushf
cs
push
jo
xor
out
loope
xchg
ss
and
xchg
daa
xchg
rcrl
sub
jbe
or
pop
or
shll
cmp
ret
xor
cmpsb
fdivl
or
or
mov
ja
xor
enter
scas
push
jmp
test
cmpsl
aad
cwtl
out
push
mov
sub
jge
xchg
fidivl
ljmp
mov
sub
xchg
dec
mov
test
enter
mov
pop
mov
and
lea
pop
lea
jle
sub
outsb
sub
fcoml
sbb
adc
sbb
stc
adc
and
bound
mov
arpl
movsb
adc
xchg
jecxz
stos
sub
adc
popa
add
jne
ss
out
fdivl
add
adc
sbb
leave
xlat
add
gs
iret
mov
test
mov
mov
sbb
enter
dec
movsl
xorl
pop
cmpsl
repnz
mov
ljmp
cmp
cmpsb
in
mov
out
ljmp
mov
fiadds
adc
inc
jbe
push
adc
xor
out
and
mov
stc
cmp
shl
xor
ret
pushw
xchg
mov
sbb
punpckhbw
jne
xor
xor
fdivl
jg
repz
adc
sbb
push
pop
mov
cwtl
cmp
push
out
insl
lret
jg
sbb
into
push
pushf
jl
cmc
popa
mov
mov
pop
sbb
inc
cmpsb
xchg
jns
cmpsl
outsb
pop
fcmove
inc
and
cmp
arpl
sub
lds
or
jge
push
mov
arpl
cmp
jecxz
jo,pt
cld
mov
clc
mov
std
sub
sbb
sti
inc
xor
aas
or
imul
ljmp
mov
icebp
pop
fldt
clc
xchg
loope
movsb
ret
pop
lods
mov
cmpsl
pop
neg
jmp
stc
insl
dec
jns
sub
pop
rorl
push
jge
xchg
mov
flds
pop
push
movlhps
mov
in
dec
mov
add
sbb
in
scas
adc
and
test
nop
or
adc
mov
inc
mov
fwait
call
xchg
rolb
cld
push
mov
push
stos
mov
pop
xchg
add
dec
movsb
pop
mov
imulb
movsl
and
jp
inc
pop
sub
lods
test
lret
daa
icebp
push
lea
inc
lahf
out
jmp
in
fisubl
dec
icebp
pop
add
loop
lea
pop
sbb
cwtl
sbb
pop
fbld
cs
dec
adc
adc
inc
mov
jnp
rcrb
sub
push
lock
nop
sysret
xchg
lret
sub
scas
ljmp
sti
inc
xchg
stos
insb
dec
or
xchg
xor
pop
or
and
call
add
test
lods
scas
inc
pop
imul
fldcw
push
push
cmp
jno
add
xor
and
push
stos
sbb
cmp
inc
mov
or
mov
inc
xor
rorb
and
mov
mov
dec
lock
movsb
cmp
dec
pop
push
xchg
sbb
sbb
sbb
mull
std
mov
lds
mov
into
xchg
clc
or
lret
or
adc
sub
or
in
pop
add
mov
cmc
iret
cs
adcb
jg
mov
das
dec
mov
daa
xchg
mov
add
ret
inc
push
and
test
shlb
push
out
dec
jle
add
mov
cwtl
ds
dec
mov
cld
mov
shl
pop
add
jge
or
dec
int3
and
negl
lret
call
mov
dec
push
inc
mov
gs
xchg
inc
xchg
stc
push
xchg
fadds
jns
dec
adc
push
shl
lds
cmc
lret
sbb
or
add
pop
sbb
movsb
xor
sub
cmp
adc
mov
std
cmp
mov
rol
cwtl
movsl
and
gs
sub
fisubs
xchg
in
movsl
int3
xchg
fsubs
lods
or
jmp
stc
ficompl
test
cmp
fldenv
and
int
cltd
jo
jo
inc
mov
divl
out
les
pop
xor
sub
jmp
mov
inc
testl
out
imul
mov
cmpsl
pop
or
xchg
jb
jns
xor
pop
mov
aaa
cmpxchg
inc
jnp
jg
or
adc
pop
bound
push
sahf
inc
fwait
cltd
in
leave
and
out
mov
arpl
pop
push
inc
stos
lret
mov
adc
adc
out
jns
testl
sub
clc
std
cmc
and
add
xor
cmp
add
fstpt
cmp
pop
cmc
ja
pop
mov
mov
lods
int3
sbb
out
mov
mov
subl
pushl
or
js
fistpll
jmp
mov
push
inc
mov
test
stc
mov
nop
cmp
mov
adc
fcomip
lods
pop
mull
negb
xor
jmp
orb
loop
inc
cmp
cmp
cmp
inc
mov
jp
push
inc
xchg
dec
push
jno
stos
imul
jae
push
xchg
mov
sub
jb
mov
mov
adc
jbe
in
dec
stc
or
add
inc
out
xchg
xor
mov
jo
or
fisttpll
pushf
mov
and
sbb
fdiv
ja
pop
cmpsb
xor
jb
push
stc
push
ret
jmp
sub
movsb
jge,pn
repnz
imul
mov
mov
jo
inc
and
add
xor
add
pop
in
mov
fildll
loop
mov
sbb
cs
inc
inc
adc
push
sbb
pusha
loopne
arpl
pop
arpl
test
lds
sub
imull
mov
xchg
push
and
xchg
insl
int3
or
clc
jl
ds
push
lahf
and
std
xchg
es
repnz
mov
adc
pop
cmp
add
faddl
loopne
sti
rorl
in
xchg
mov
mov
pusha
stc
cmp
cmp
dec
cmp
xchg
jb
cmp
cwtl
std
fdivl
js
rol
dec
adc
inc
adc
pop
fisubrs
inc
mov
cmp
enter
out
mov
mov
xor
sbb
fldcw
std
rol
cli
ss
push
in
es
out
mov
bound
pop
xchg
les
mov
xchg
fstl
cwtl
ret
shrl
loope
jne
scas
mov
cmpl
ret
xorl
call
xchg
inc
sbb
pop
je
jne
lods
lods
test
enter
in
adc
sbb
sar
enter
aaa
cmp
shrb
pop
mov
fdivp
out
testb
neg
icebp
hlt
mov
lahf
lds
jae
aas
insl
xchg
sub
dec
or
dec
add
push
lahf
inc
jg
stos
notb
dec
gs
xor
in
out
subl
mov
jo
scas
mov
icebp
dec
dec
xlat
jp
cmp
loop
pop
movsl
pusha
push
sbb
sbb
ret
push
mov
pop
leave
pop
imul
cli
inc
mov
pop
jp
fcoms
inc
insl
mov
dec
test
jae
xchg
inc
sbb
pop
adc
ret
scas
lea
mov
jmp
fadd
mov
dec
dec
pop
mov
jmp
push
or
mov
push
adc
sbb
rol
movsl
dec
jge
xor
sub
push
subb
scas
adc
and
inc
jae
cs
cmpl
pop
into
pop
bnd
bound
xchg
xchg
aad
repnz
cmp
add
sub
fptan
out
imul
push
dec
push
push
xchg
adc
iret
aas
lret
xchg
pushf
out
mov
pop
push
cmpsl
cmp
lcall
loop
sub
cmp
inc
outsb
jno
xor
add
pop
ss
das
xor
sbb
xor
aaa
cmc
ja
jge
mov
pop
int3
fldcw
movsl
push
in
adc
dec
pop
imul
sbb
pop
cwtl
dec
push
sub
fwait
and
test
mov
xor
lcall
outsb
fst
jb
or
push
lds
jnp
xchg
or
mov
sub
rolb
aad
xor
inc
mov
xor
xchg
popa
mov
je
aad
push
in
adc
jnp
mov
cltd
add
lret
dec
in
lea
add
test
inc
adc
sbbl
out
inc
imul
mov
mov
imul
xor
aaa
rorb
cld
ljmp
inc
fs
test
mov
mov
pop
xchg
int3
adc
ret
xor
aam
fistps
pop
aad
mov
pop
lock
xchg
sbb
xor
lods
dec
ror
pop
data16
fmull
aad
inc
inc
rcl
push
xor
movsl
adc
sbb
push
repnz
xor
inc
mov
into
lret
scas
es
inc
fdivrs
aas
pop
lods
cld
and
cwtl
cmp
cmp
xchg
cmp
push
and
or
jne
xor
outsl
cmp
pop
mov
xchg
popf
jg
test
mov
dec
jnp
fxch
dec
mov
test
in
test
dec
jbe
adc
push
jb
sarb
pop
ds
popa
ja
fisubrl
mov
shrb
jmp
test
pop
ljmp
pusha
bound
push
negb
xor
pop
dec
outsl
fmul
cmp
cmp
mov
sub
xchg
xchg
mov
adc
adc
jnp
fs
inc
or
int
fninit
sbb
cmp
inc
sbb
jecxz
or
insl
push
dec
cmp
lock
les
loopne
shrl
lds
loopne
fcmove
fiaddl
fwait
hlt
ja
hlt
js
lds
xchg
dec
cs
sbb
jl
push
stos
std
paddsw
je
pop
cltd
push
push
fisttps
mov
dec
push
testl
notb
cltd
and
loopne,pn
jno
jle
lds
mov
and
sub
fwait
sub
sti
mov
call
fistpl
mov
mov
sub
shrb
repz
xor
push
outsl
sub
cmp
pop
xor
clc
lock
loopne
cltd
shrb
adc
repnz
shl
jne
insb
pop
ja
rcll
ffreep
and
xchg
jp
movsl
popf
cs
test
adc
lahf
sub
leave
pop
cmp
add
cli
std
data16
pop
jo
and
add
sub
push
mov
or
outsl
subb
loop
pop
out
adc
ja
lcall
ja
or
fldl
out
xor
or
sub
mov
mov
push
xchg
inc
je
jo
idiv
insb
fs
pop
stc
jmp
outsl
mov
dec
loope
add
lret
arpl
vpsllq
mov
and
pop
adc
bound
inc
loop
xchg
xor
mov
sub
sub
ds
xorb
lods
loopne
sub
push
adc
lret
cltd
jecxz
adc
dec
jno
fsub
cmc
sbb
jb
and
scas
adc
into
inc
cwtl
jp
rcll
dec
idivl
fmul
cmp
xor
cmpsl
mull
sti
pop
jl
mov
push
lds
adc
and
daa
aam
cmpsb
pop
addr16
jns
lcall
test
pusha
nop
jmp
pop
or
test
xchg
xlat
jge
adc
ret
sbb
movsb
adc
dec
imul
xor
repnz
dec
rorl
movsl
std
gs
repz
addr16
push
flds
into
or
pushf
sarb
icebp
lea
and
push
fcompl
inc
sub
scas
jns
out
out
xchg
pop
mov
sub
push
stos
xor
enter
mov
jns
int
inc
lds
ss
ficompl
jle
cwtl
mov
out
jle
xorb
push
andl
cmp
mov
cmpsl
xchg
je
xchg
gs
fistpll
aas
dec
mov
dec
packssdw
jp
test
outsb
mov
fists
sahf
cmc
outsb
negb
in
test
push
sub
lsl
lret
rclb
sub
mov
mov
rclb
cmp
test
insb
inc
mov
es
in
mov
hlt
mov
repnz
jbe
pop
and
insl
cli
mov
jbe
sub
ss
outsl
outsl
loop
jae
inc
test
jg
out
in
test
jnp
or
jp
ja
in
lods
mov
inc
repz
push
jo
in
test
addb
rclb
inc
movsb
fimuls
jge
scas
inc
mov
jae
stc
clc
pop
fwait
repz
adc
mov
adc
add
std
lret
mov
mov
inc
ret
test
scas
push
popf
pushf
pop
aad
sar
cmp
call
sbb
fsubl
orl
loopne
dec
and
dec
sbb
add
mov
test
push
adc
jecxz
cli
jge
aaa
jns
lret
add
add
mov
subl
jbe
jbe
insb
xchg
add
imul
and
rcll
jae
lds
sub
or
dec
inc
or
add
rorb
add
jp
sbb
iret
flds
sub
and
clc
pushf
xor
push
push
mov
adc
cmp
adc
cmp
add
push
cld
pop
test
xor
mov
fwait
sub
mov
mov
mov
pushf
push
cmpl
jae
sub
in
push
jbe
mov
cmp
sarl
stos
dec
sbb
loop
nop
adc
xlat
cmp
add
mov
iret
pop
ss
sub
fidivrl
pushf
sbb
movsl
push
aam
lea
dec
push
pop
js
les
pop
cli
fimull
sub
cmp
movsl
xor
sbb
lret
lahf
mov
out
or
fwait
mov
and
push
out
divl
loopne
sahf
aaa
mov
mov
stos
in
orl
pop
in
xor
push
icebp
and
mov
lods
outsb
pop
pop
sub
sbb
adc
pop
sbb
add
lods
push
pop
popa
push
imul
outsl
jae
add
rorl
cmp
and
int
ss
inc
lods
inc
addr16
pop
leave
inc
js
std
mov
add
mov
mov
imull
xor
bound
push
stos
inc
inc
fidivrs
sbb
jge
adc
mov
sbbb
stos
mov
xchg
jbe,pt
bound
arpl
lods
mov
aas
inc
fs
scas
and
sub
arpl
add
in
movl
aad
mov
xchg
jl
cmpsb
rclb
and
sbb
jmp
fcom
pushf
cmp
ret
sub
rcll
push
pop
inc
lods
jb
cld
insl
scas
adc
jne
stos
subb
mov
out
and
aaa
add
arpl
lods
insl
scas
mov
rolb
outsl
add
ret
xchg
mov
aaa
into
sbb
and
rclb
push
pop
call
mov
adc
pusha
imul
push
pusha
push
fldcw
jbe
add
rolb
shll
xor
or
int3
cli
pop
xchg
out
add
iret
lcall
mov
mov
jns
xchg
cmp
les
es
hlt
enter
in
insl
jmp
dec
shrl
scas
cmp
xchg
mov
jp
dec
imul
xor
outsl
add
filds
cmp
sub
mov
rorb
addl
inc
xchg
jne
fcomps
xor
sbb
jmp
iret
mov
push
icebp
or
ds
xor
pusha
xchg
fwait
pop
sahf
add
fbld
pop
lock
fimull
pop
lea
and
call
xchg
sbb
mov
loope
xor
mov
pushw
jo
jmp
and
ja
inc
mov
cli
je
mov
inc
xchg
mov
mov
jo
movsb
fimuls
test
jnp
or
cltd
push
aas
sbb
jl
mov
test
mov
add
dec
aad
push
fucomp
nop
cmp
push
inc
rorb
mov
js
pop
lret
and
jns
and
or
lret
pop
add
in
lods
xor
jb
lcall
in
xchg
out
movl
leave
push
and
mov
data16
cmpsb
mov
adc
jmp
shr
sub
shlb
mov
and
lds
outsl
call
jmp
icebp
mov
mov
fdivrl
sti
outsl
in
jmp
dec
pop
leave
popf
inc
xor
mov
push
and
sbb
mov
add
in
leave
out
and
adc
fistps
mov
ljmp
andl
outsl
mov
adc
stos
es
cmc
movsbl
push
icebp
cmp
sbb
xchg
fstpt
aas
mov
jbe
cmp
loop
cltd
push
xchg
les
int
stc
das
mov
or
sub
push
mov
pushf
shlb
sub
xor
pop
mov
pop
push
in
ds
cmp
pushf
divl
sub
int3
lods
lahf
xor
xor
inc
inc
xor
int
sbb
int3
jb
addr16
lea
adc
cmpsl
cmp
aaa
bound
xchg
aaa
int
xchg
add
xlat
add
lds
nop
sti
mov
repnz
scas
jne
and
sbb
cltd
insl
mov
mov
out
dec
add
aas
aad
and
jns
dec
pop
out
fs
rolb
push
ret
aaa
outsl
test
fimull
fisttps
lods
mov
mov
mov
dec
lret
outsb
aaa
xor
adc
test
shrb
xchg
cmp
pop
lds
sub
nop
add
lds
mov
dec
jae
insl
sbb
daa
loope
loop
shrb
pusha
jnp
mov
jp
dec
mov
mov
enter
xchg
addr16
sbb
sbb
outsl
jl
and
or
or
das
xor
inc
jle
dec
inc
out
dec
out
movb
shlb
xor
lock
cltd
daa
xchg
inc
shlb
push
mov
icebp
adc
inc
push
xlat
inc
ljmp
mov
lock
or
jns
int3
shl
mov
mov
pushf
arpl
push
push
lahf
call
add
je
dec
sub
shl
ds
sbb
add
fdivs
je
cmc
xlat
xchg
les
test
mov
rorl
jecxz
lcall
das
inc
cmpsb
lods
fimuls
cmpsl
dec
cmp
push
mov
pop
fstpt
shll
push
dec
or
inc
push
push
xchg
std
fnstenv
shlb
sbb
out
test
mov
icebp
sbb
sub
dec
fs
cmpsb
xor
cwtl
push
scas
pop
int3
cmp
out
xor
imul
dec
mov
and
adc
jle
scas
pop
xor
cmp
push
cltd
lret
bound
inc
dec
lods
mov
cs
jecxz
stc
addr16
and
outsl
je
pop
inc
dec
je
roll
pop
int
icebp
pusha
and
scas
pushf
cmpl
cwtl
jno
lods
add
in
bound
outsl
cmp
pop
fisttpll
or
xchg
mov
inc
lret
push
bound
daa
lret
int
inc
add
test
cmp
pop
add
stc
scas
pop
fistpll
addl
push
xchg
testl
mov
inc
imul
push
fdivl
loop
xchg
lahf
and
inc
sbb
outsb
pop
xchg
mov
lret
clc
orl
mov
test
aaa
test
push
test
inc
and
xchg
fidivrs
push
push
fsubp
ret
dec
movsl
and
pop
jge
les
cmp
test
stc
pop
addb
sbb
pop
jbe
out
xor
gs
xchg
mov
dec
pusha
push
lahf
push
mov
std
inc
mul
stc
daa
jp
pcmpeqd
jle
pop
cld
les
out
dec
mov
repnz
adc
pop
pop
mov
inc
lret
cmp
fimuls
out
adc
mov
mov
inc
or
mov
xchg
or
cmp
sub
int
jo
lods
sub
xchg
ds
das
stos
jbe
rclb
insb
mov
mov
divl
rorl
sbb
mov
mov
outsb
cmp
psubb
push
lods
pop
mov
aad
lret
xchg
cmp
pop
hlt
leave
push
faddl
sarb
inc
xchg
ds
xchg
mov
mov
mov
ljmp
xlat
adc
dec
mov
cmpsl
out
mov
cli
test
iret
test
mov
push
or
dec
sbb
jg
jbe
push
stos
lret
clc
cmp
imul
fcom
jnp
mov
arpl
jns
out
pop
mov
outsb
mov
out
fidivrl
sub
cltd
ss
mov
stc
fwait
jp
jo
add
pop
push
fs
cs
lds
xchg
loopne
cmp
mov
adc
dec
popf
fidivrl
jge
cmp
push
push
pop
inc
dec
sbb
movsl
push
mov
ss
mov
xorb
loope
jns
jge
dec
rcl
pop
xlat
ss
lods
mov
mov
or
mov
dec
rcr
and
add
arpl
int3
call
bound
fxch
push
or
loopne
icebp
cmpsl
repnz
jne
lret
out
cli
mov
or
fidivs
shll
mov
mov
add
cmpb
pop
push
cmpsb
sbb
clc
rorb
pop
add
stos
jecxz
mov
sbb
sbb
outsb
mov
or
fidivrs
mov
cs
pop
enter
cld
pop
insl
aas
adc
lcall
fwait
mov
inc
scas
adc
push
mov
jnp
adc
insl
subl
or
std
or
icebp
dec
inc
mov
adc
sub
cmp
mov
xchg
les
in
cmp
xor
mov
popa
dec
adc
test
jmp
imul
mov
xchg
ss
inc
and
loope
inc
fsts
sbb
push
pop
dec
xor
iret
push
pop
dec
xchg
or
dec
es
fcoml
pusha
jnp
push
xor
jmp
and
ja
sbb
sbb
pop
mov
popa
xor
adc
daa
aas
cmp
lea
mov
adc
and
xor
push
outsb
insb
loope
comiss
or
push
stos
popa
outsl
xchg
add
jle
mov
add
lods
movsb
dec
mov
sub
dec
pop
mov
xchg
movsb
ja
xchg
dec
mov
mov
or
loopne
push
iret
or
je
aaa
mov
out
mov
mov
jg
imulb
push
cld
mov
add
xchg
ss
test
arpl
stc
aas
lds
and
cmp
sti
fsubs
fbld
push
dec
pushf
out
mov
ret
and
leave
or
mov
cld
add
mov
sub
fnstsw
into
xor
cmpsb
add
out
mov
push
divl
daa
xor
rclb
les
lock
fucomip
lock
cmpsb
shrb
cmp
dec
mov
jle
add
cmp
sub
pop
ja
xor
negl
leave
adc
xor
int3
outsb
jecxz
mov
and
cmc
out
add
add
paddsw
mov
aad
repz
rcrl
out
mov
dec
out
mov
sbb
fsubr
stos
lods
cmp
jl
mov
inc
jns
leave
inc
push
iret
sub
sbb
mov
stos
mov
enter
push
int3
xchg
fmul
pop
xchg
sbb
jmp
mov
sbb
inc
fwait
inc
jecxz
xchg
fldt
pop
xchg
push
scas
xorl
or
lods
xchg
cmp
push
sbb
jno
sbbl
inc
ljmp
sbb
lret
pop
in
enter
jmp
mov
cmpsl
sahf
andb
aam
mov
ss
imul
mov
mov
hlt
and
loopne
inc
xchg
inc
cmp
cmpsl
xchg
fiadds
xchg
int3
popf
xor
cmpsb
cmp
xor
push
pop
jae
jg,pn
adc
adc
and
or
adc
fadds
xor
jecxz
and
sbb
aam
jb
out
jo
or
push
call
and
and
cmpsb
and
push
lahf
es
jmp
pop
decb
pop
dec
adc
fwait
mov
idivb
xor
jnp
sbb
push
sbb
adc
aam
ja
repz
aaa
sub
imul
jae
jae
lahf
shrl
push
nop
leave
in
orb
xchg
cmpsb
or
cmpb
pop
imul
inc
adc
les
clc
outsb
inc
lret
stos
imulb
fs
fmull
sub
das
sub
rcrb
push
adc
xor
adc
lret
mov
mov
xchg
ds
roll
bound
leave
xor
jge
loope
idivb
test
sub
ss
and
mov
mov
into
jno
sub
push
jle
fsubrl
lods
add
and
sub
cli
jns
inc
into
in
mov
inc
sub
fcompl
sub
and
popa
or
and
test
xchg
mov
lods
sbb
add
dec
adc
mov
inc
push
lahf
lods
pop
insl
cmpsl
shlb
jmp
or
xchg
rcr
push
and
add
int3
sbb
iret
mov
mov
xchg
cmpsb
test
cmp
xchg
scas
sub
sbb
jae
clc
pusha
mov
xchg
imulb
and
out
stos
fucomi
test
push
lret
std
jno
push
mov
jmp
ret
cli
fnop
mov
xchg
lret
mov
push
wrmsr
cwtl
mov
sbb
movsl
adc
sub
xchg
hlt
and
or
fbld
xchg
fwait
test
adc
jg
lds
pusha
fsubl
imul
test
fistpll
push
mov
mov
inc
inc
adc
mov
inc
jno
mov
adc
and
shrl
pop
cmpsl
cld
lea
sub
and
cli
pop
pop
mov
jl
add
mov
pop
fsubrs
sbb
lds
xchg
dec
dec
adc
inc
cmp
push
aam
dec
addr16
lcall
xor
or
movsl
fs
sub
sbb
test
xor
cmp
cmp
mov
jnp
dec
and
jne
in
les
in
pushf
push
outsb
insl
rol
fwait
fs
mov
push
sub
dec
inc
shrl
and
mov
es
add
lock
push
fsubrp
xchg
in
cmp
sub
mov
dec
iret
aam
in
inc
mov
imul
mov
scas
addr16
push
and
ficoml
sub
jb
jmp
xor
or
enter
push
mov
xchg
sbb
push
cmp
scas
test
jbe
gs
inc
aam
out
sub
cmpsb
jae
or
shl
mov
inc
loope
or
xchg
rorl
cmpsb
cmp
daa
fst
sar
mov
xchg
mov
scas
in
inc
jbe
es
dec
sub
inc
subb
mov
mov
mov
imul
fdivr
cmpsb
mov
popa
adcb
cwtl
out
js
idivl
dec
cmp
mov
and
cmc
les
lcall
jecxz
ret
cmp
lret
pusha
int3
or
xchg
or
fsub
cmpsb
adc
lock
sub
mov
mov
leave
xchg
icebp
sub
push
xchg
pop
lods
dec
or
into
call
inc
outsb
scas
sub
xor
ficoms
push
mov
pusha
adc
sub
fbld
popf
out
adc
sbb
scas
cltd
mul
dec
rcrb
fcoms
scas
push
cmc
push
dec
not
and
jge
aam
sub
repnz
push
push
fsubs
adc
add
push
in
sbb
xlat
add
cmc
dec
xchg
in
pop
test
rorl
in
cmp
in
sub
mov
mov
ror
pop
sbb
lods
or
push
jecxz,pn
push
loopne
dec
sub
add
mov
adc
add
les
lret
adc
in
mov
inc
imul
rolb
inc
or
dec
pop
adc
adc
test
popf
xor
or
pusha
mov
pop
dec
ret
ret
adc
cmpsl
push
pop
mov
fsubrs
lds
add
subl
fmuls
adc
clc
in
xchg
lods
in
dec
dec
jne
and
jnp
mov
test
mov
xchg
push
mov
xor
lock
sbb
mov
test
add
fmull
mov
popf
fisttps
movsb
mov
mov
add
xchg
bound
inc
int3
sub
xor
dec
dec
std
aaa
dec
mov
dec
mov
aas
cli
out
jnp
mov
xchg
lods
push
mov
cmp
loop
mov
or
lods
fidivl
lret
cli
mov
imul
stos
push
repnz
or
add
imull
les
mov
jae
lock
pop
fisttpl
les
xchg
mov
into
jecxz
mov
pop
mov
arpl
jp
fwait
pop
add
mov
lds
dec
lock
xor
push
arpl
adc
lret
data16
pop
clc
bound
mov
clc
ret
test
xchg
ret
fcomps
test
int3
in
icebp
inc
pusha
mull
std
xor
jns
mov
ficoml
into
mov
pushf
add
jl
dec
js
jae
test
and
cmp
inc
dec
aas
repz
ja
xchg
aam
add
xor
jmp
pop
xlat
loop
pop
mov
cltd
mov
xor
jns
clc
insl
cli
sub
outsb
xchg
or
adc
and
ds
rcrb
test
mull
pushf
jb
jo
mov
sub
pusha
cltd
mov
sahf
xchg
push
cmp
add
mov
int3
loop
jl
cs
loop
nop
rorl
mov
fwait
push
mov
sti
inc
cmpsl
int
jae
xor
jb
mov
mov
pop
jo
push
dec
scas
mov
xor
mov
mov
leave
cmpsl
mov
inc
mov
pusha
nop
fisubrs
stos
xlat
jl
sti
lds
arpl
mov
lret
popf
cwtl
sti
addl
push
notl
cmp
jbe
inc
cmpl
pusha
movsb
scas
mov
mov
cltd
fwait
pop
lahf
mov
fsubs
jnp
dec
stos
imul
popa
mov
mov
sbb
divl
mov
icebp
and
cmp
inc
icebp
jl
lea
out
scas
mov
sub
mov
dec
sbb
xlat
mov
push
popa
add
add
bound
popa
cmp
adc
je
ret
xor
cmc
fptan
and
and
inc
mov
test
jl
fs
mov
mov
sbb
cwtl
sarl
int
pushf
push
or
push
es
lods
inc
adc
test
xchg
cwtl
sarb
test
lock
push
mov
lcall
mov
cmc
ret
xchg
aad
xchg
cld
imul
test
inc
insl
mov
fstpl
jl
ljmp
fs
call
jae,pt
dec
jae
mov
adc
test
pop
dec
mov
adc
and
inc
dec
sbb
or
xor
mov
cvttps2pi
cmp
fmulp
push
mov
xor
mov
sub
arpl
imul
mov
xlat
mov
scas
cmp
shlb
xchg
mov
int3
not
mov
nop
xor
bound
jne
pushf
outsl
fwait
xchg
pop
test
lea
rclb
adc
or
gs
hlt
jecxz
pusha
cmc
fprem1
shl
daa
xchg
subl
stos
cli
flds
jne
or
add
jne
pop
jmp
aam
stos
mov
movb
mov
sbb
dec
and
mov
lods
ja
cli
dec
or
pop
mov
and
cmp
ficompl
mov
sti
jle
notl
popa
mov
jge
dec
push
sbb
pushf
xor
aaa
sub
repnz
test
les
jg
arpl
jge
and
xor
xor
pop
jno
in
xchg
mov
inc
pop
mov
lea
fisttpl
int
mov
add
nop
dec
mov
int3
stos
jbe
xor
push
mov
je
rorb
icebp
adc
xchg
int3
ss
mov
lea
adc
mov
leave
imul
mul
into
movb
add
jg
sbb
pop
test
divb
popf
aam
icebp
stc
mov
jne
pop
xchg
xorb
sub
incl
sar
push
xchg
mov
stos
mov
inc
inc
leave
call
add
je
hlt
imul
adc
ror
xchg
sahf
inc
in
sbb
cltd
xor
cltd
pop
mov
cmp
std
add
mov
jbe
loope
sub
xchg
add
fiadds
aas
addr16
jb
call
dec
rcrl
pop
sub
setge
jg
sub
addl
jbe
fcompl
and
cmp
sbb
insl
lret
or
sub
add
push
out
jo
inc
rcrl
aaa
lock
push
cmp
jb
fdiv
push
inc
sti
lret
shrl
aaa
pop
push
lods
call
push
add
jne
sbb
mov
and
loop
or
std
xor
inc
push
xchg
cmp
icebp
iret
jg
and
mov
andl
shll
mov
cmpb
fdivr
inc
sbb
pop
jle
dec
bound
cwtl
gs
into
ds
test
cltd
sub
xor
leave
testb
in
cmpsl
mov
push
cmpsl
and
cmpsl
cmp
pop
addl
bound
ret
pop
mov
fistpl
shr
pop
push
test
mov
mov
mov
sbb
mov
xchg
adc
int3
cs
mov
insl
mov
jmp
add
cltd
push
cmovs
mov
divb
adc
mov
imul
sahf
mov
add
scas
aam
xchg
lahf
xor
adc
arpl
and
xlat
and
sarl
xor
test
rorb
mov
ss
and
aaa
pop
pop
rorb
mov
fldl
pop
inc
enter
out
add
or
rorb
xchg
xchg
lahf
pop
out
les
xlat
dec
and
int
lods
dec
mov
fmuls
adc
lret
dec
xchg
pop
xor
lea
jg
js
pop
int3
sbb
xchg
rcrb
fwait
dec
or
mov
xchg
ljmp
clc
pop
test
shl
push
or
pop
cltd
mov
mov
stos
dec
pop
cmpsl
fildl
mov
push
adc
call
dec
inc
mov
roll
add
push
dec
xor
sub
les
fbstp
jmp
int3
and
mov
pushf
lret
adc
negb
enter
sahf
insl
int
pop
xchg
or
insl
cmpsl
inc
and
jmp
test
pop
shrl
imul
mov
movsb
mov
xchg
lds
pushf
test
inc
clc
jo
fwait
andl
pusha
incb
in
shr
mov
lret
add
cltd
adc
fldl
cmpsl
scas
or
lcall
adc
ss
sbb
mov
adc
cs
fnstenv
mov
rorb
nop
stos
cmpsl
add
std
movsl
or
cmp
in
insl
loopne
idivl
add
cmp
fbld
es
mov
lea
and
cmpsl
cld
dec
mov
out
mov
mov
sub
cwtl
icebp
sub
mov
mov
repz
jbe
pushf
xor
sti
insl
adc
and
inc
push
pop
call
test
imul
sub
push
mov
outsl
icebp
in
mov
cwtl
hlt
dec
cmp
jecxz
mov
xchg
sti
push
stos
and
mov
mov
fisubl
bound
fsubrl
mov
mov
jmp
int3
cmp
mov
lret
loopne
sbb
adcl
repz
fiaddl
mov
es
add
pop
rcrb
je
test
scas
das
in
pop
pop
jecxz
adcb
loope
sbb
icebp
mov
or
fdivrl
dec
or
shrb
cmpsl
jmp
cwtl
adc
mov
add
int
sub
mov
push
pop
lcall
stos
sub
jmp
add
bound
mov
loope
aaa
bound
es
pop
or
mov
rcr
mov
pop
adc
xchg
jno
inc
mov
cld
mov
hlt
cwtl
jg
pop
and
cmc
fs
bound
mov
fisttpll
xchg
lcall
shlb
stos
rolb
pop
mov
inc
repnz
mov
cwtl
xor
adc
push
ljmp
fstp
pop
mov
xchg
pop
int
cmp
ljmp
mov
in
repz
inc
repz
scas
xchg
jnp
add
lods
cld
insl
mov
push
adc
mov
bound
pop
cld
notl
push
test
hlt
out
clc
mov
ror
sub
xor
in
sbb
nop
les
xorb
test
out
lock
outsl
std
push
lcall
movsb
pop
xchg
fneni(8087
scas
std
fdivrl
movsb
cmpsb
in
das
mov
out
add
jge
adc
daa
xor
leave
mov
push
jg
iret
mov
pop
cs
add
std
cmc
mov
insl
sub
addr16
shrb
and
data16
push
mov
nop
mov
pusha
dec
insl
cmp
mov
jmp
add
repz
in
in
xor
and
xor
rorl
shlb
sbb
lahf
test
xor
mov
cwtl
adc
iret
pop
inc
loop
inc
mov
cmp
out
mov
pop
mov
fucomp
aad
cltd
sahf
cs
adc
inc
adc
and
sub
sbb
jnp
mov
das
jae
xor
sub
inc
pop
dec
jne
enter
scas
cwtl
or
push
dec
rcr
nop
pop
in
and
xchg
arpl
and
into
push
scas
mov
adc
or
mov
ss
and
jg
rcrb
add
inc
add
and
push
cmp
int
enter
and
dec
enter
mov
loopne
cmc
int3
popf
and
inc
nop
sbb
js
mov
pop
or
aas
jmp
roll
pop
xchg
jo
mov
insl
fmull
xor
mov
adc
fnstcw
shlb
cmpsl
stc
jno
add
mov
lods
pop
push
jne
cli
sbbl
pop
dec
sahf
imul
sbb
stos
fstl
cmp
xchg
xor
pop
sub
rcr
xchg
mov
lret
sbb
fcmovnbe
inc
jp
lds
int
outsl
fdivl
push
lds
stc
decb
sti
popa
pop
mov
jge
dec
add
pop
stc
ljmp
fnsave
dec
and
hlt
bound
out
adc
andps
out
iret
push
sbb
and
sbb
mov
rolb
pop
imul
aam
imul
in
xchg
movsl
cmp
dec
test
dec
lcall
dec
add
mov
mov
adc
adc
fwait
insb
add
repnz
sub
jne
mov
sbb
sbb
pushf
sbb
xchg
sbb
push
sub
cmpsl
pop
jae
or
nop
push
mov
mov
rcr
pop
push
outsb
push
addr16
loope
outsb
les
test
repz
inc
pusha
mov
in
sbb
mov
mov
ds
sbbl
and
icebp
nop
scas
hlt
add
adc
fld1
add
out
lods
inc
lods
add
cli
pusha
pushf
and
aas
or
or
lcall
mov
sub
pushf
or
pop
stc
daa
jge
lock
mov
loopne
mov
cld
jno
or
inc
int
ds
shll
out
adc
std
lret
push
mov
outsl
sbb
stc
and
stos
mov
push
outsl
rol
inc
test
in
mov
or
dec
cmp
jns
outsl
jmp
add
xor
fisubrs
mov
daa
xchg
xchg
pushf
scas
dec
outsb
mov
add
or
scas
scas
inc
mov
and
add
jge
test
bnd
push
cld
int3
les
insl
cmp
mov
stos
sbb
xor
cwtl
sub
ja
jmp
jb
push
or
mov
int3
repnz
and
add
lcall
xchg
js
jl
xchg
or
mov
aaa
arpl
cmc
stos
jmp
cmp
cmp
push
icebp
inc
xor
push
mov
adc
loope
ljmp
loope
mov
mov
aaa
enter
sub
mov
cmp
inc
adc
imul
mov
inc
test
mov
pop
arpl
bound
lcall
add
int3
mov
inc
jecxz
and
fadds
negl
xor
dec
maxps
int3
jmp
adc
push
lods
add
subb
lods
pop
stc
subb
mov
pop
push
int
mov
into
pop
cmpsl
aad
or
xchg
or
push
push
xchg
sbb
add
jb
std
sbbl
les
xchg
jp
andl
std
je
repz
icebp
pushf
fs
dec
iret
push
loopne
shlb
sahf
mov
xor
dec
push
jb
sbb
lret
dec
xchg
cs
rorl
popf
fwait
mov
nop
or
fcoml
repnz
xchg
push
fidivrl
mov
mov
or
mov
mov
mov
loop
push
es
popa
jmp
fwait
sub
adc
mov
bound
and
push
popl
cmp
sahf
inc
jp
sbb
loope
xchg
sbb
mov
insl
lds
adc
inc
arpl
push
rol
divl
test
and
je
stc
adc
xor
add
cmp
xor
mov
mov
cli
inc
dec
aas
and
and
or
mov
sbb
fildll
in
sahf
shrl
iret
sub
push
xor
sbb
jne
or
cli
and
xchg
inc
std
inc
sbb
aam
sub
push
lea
dec
add
insl
shrl
push
mov
sahf
andl
add
inc
inc
push
test
lock
inc
fisubs
rcrb
int
out
ret
push
arpl
stos
xchg
jb
movsb
arpl
jno
and
flds
or
sbb
or
out
push
lea
cmpsb
and
dec
test
mov
push
pop
and
dec
cltd
arpl
sbb
jb
test
jnp
in
clc
push
pushf
sub
mov
sub
sub
jg
mov
cmp
or
pushf
dec
inc
in
mov
cli
loop
insb
pop
mov
push
sub
rorl
stos
mov
cmpl
std
or
adc
xor
cmp
pop
add
jecxz
mov
cmp
xchg
adc
aad
mov
jp
mov
jne
je
mov
imul
pop
jb
push
jl
repnz
call
jle
iret
push
cmp
jmp
les
scas
les
mov
sarb
xchg
shrl
in
in
scas
in
adc
scas
mov
ficoml
adc
jbe
outsl
xor
and
dec
call
test
stc
mov
shrb
in
pop
xchg
icebp
ljmp
or
dec
jle
and
aaa
ds
add
mov
mov
xor
es
inc
rolb
test
xor
pop
push
xchg
mov
sti
pop
push
pop
push
or
xchg
xchg
mov
fldcw
ss
mov
lret
data16
stos
jae
imul
push
sbb
mov
xchg
stc
rcrl
sbb
dec
push
insl
mov
add
cld
ja
leave
imul
xor
out
scas
push
shr
aas
sbb
test
push
cmpsl
cld
scas
push
cmpl
mov
mov
nop
enter
fsub
stc
mov
dec
hlt
divb
js
xchg
mov
xchg
push
out
cmp
imull
es
sbb
das
movsb
and
inc
sbb
aas
test
cmc
xor
xchg
sub
out
idivl
or
pop
xchg
lcall
or
mov
lock
je
rcll
mov
push
adc
sbb
jns
adc
jle
inc
mov
adc
imul
lcall
xchg
fs
dec
popa
pop
or
in
jmp
movsb
cmpsl
or
adc
xchg
pusha
mov
rcll
sahf
shl
mov
push
cmp
repnz
jge
push
scas
push
movsb
mov
sub
ficompl
xor
into
mov
push
mov
fsubrs
das
out
mov
pop
popf
mov
push
imul
outsl
mov
stc
cwtl
cmp
clc
shll
aam
xor
fldl
mov
scas
scas
and
jmp
pop
mov
push
ret
and
sub
stc
in
stos
ja
xchg
ss
int3
jge
decb
popa
pop
aad
add
adc
shrl
inc
add
in
xchg
add
and
pop
cmp
xchg
test
jecxz
dec
jle
mov
lret
movsl
pop
push
inc
push
mov
ds
sbb
stc
rcrb
and
loop
test
mov
lock
pop
xor
sub
iret
cwtl
les
dec
or
outsb
pop
sbb
fcompl
push
jnp
mov
scas
mov
xchg
dec
ljmp
ret
nop
sub
sbbl
clc
pop
shlb
insl
pop
pop
stos
push
jne
repnz
fiaddl
push
gs
jecxz
and
sar
cmp
sub
and
xlat
mov
clc
jns
es
fcom
stos
loop
dec
jg
mov
movsb
add
roll
sub
loopne
pop
out
sahf
adc
lahf
rcll
jge
and
test
inc
aam
dec
aaa
sub
adc
bound
and
imul
push
mov
jae
adc
push
cld
jmp
and
sub
in
or
sbb
popf
inc
sbb
and
imul
dec
push
in
dec
cltd
sahf
es
push
fsubrl
ss
in
mov
pop
xchg
or
and
test
ret
fldenv
jne
leave
mov
pushf
imul
es
push
insl
cmp
jecxz
jg
outsb
and
fucomi
gs
leave
pop
pop
pop
lds
or
orl
cmp
lahf
outsl
push
decb
sub
pushf
lods
hlt
xchg
or
and
push
and
imul
and
jns
sbb
daa
mov
aaa
in
xchg
mov
orl
dec
jp
add
sub
adc
mov
fcmovne
imul
dec
mov
clc
movl
or
aas
push
cli
cmpsb
sub
cmpsb
push
push
mov
xchg
push
jnp
lods
outsb
fcoml
pop
rclb
push
mov
jb
sbb
fchs
xor
inc
cmpsl
push
adc
jl
mov
or
mov
dec
fsubs
movsb
ljmp
sbb
mov
scas
or
jne
sbb
cmp
lods
cs
aas
pop
pop
xlat
sbb
lret
cli
and
leave
cmp
cmpsb
ds
loop
cs
repz
jmp
lret
outsb
pop
fistl
and
pop
add
mov
ds
xchg
pop
ret
add
pop
or
cmpsb
int3
and
mov
insl
xor
inc
add
mov
jle
in
add
lahf
dec
fstps
popf
sub
add
xchg
sub
in
jno
and
mov
or
ja
push
push
int3
sub
or
sub
jle
mov
mov
sbb
loop
xchg
scas
std
das
into
addr16
dec
sub
fldcw
jbe
and
inc
inc
pop
pop
pop
js
xchg
stos
cli
pop
leave
cmp
pop
sbb
xorl
push
imul
cmp
movsl
fdivr
loope
push
push
in
mov
jg
out
push
sahf
clc
loopne
mov
gs
adc
xor
cmp
lea
lods
pop
mov
mov
rorb
les
xlat
loope
cltd
ret
out
cli
xor
adc
insb
imul
aas
jo
sbbb
adc
in
push
and
imul
hlt
cmp
mov
xchg
xchg
loopne
test
incl
mov
sarb
jae
lods
push
sbb
arpl
ljmp
xor
and
mov
xor
jg
pop
cmc
jmp
add
mov
rclb
push
push
std
mov
fldenv
aad
das
lds
cwtl
sarb
scas
xchg
jns
repz
aaa
popf
out
xchg
dec
das
xchg
int3
lahf
sub
adc
adc
add
outsl
mov
and
mov
test
sub
adc
xor
movsl
outsb
lods
adc
dec
add
sbb
cmc
scas
cli
sub
push
neg
cmp
cwtl
addr16
imul
xor
xchg
jmp
mov
sub
lret
xchg
mov
pop
mov
rcrl
cwtl
fiaddl
add
test
ja
pop
mov
mov
ret
mov
jl
pop
pop
out
jmp
insb
xor
sbb
das
loope
pop
hlt
es
aaa
adc
addr16
rorl
in
clc
lcall
cmpsb
in
ret
pop
cmp
nop
outsb
sarl
jbe
es
dec
pop
push
int
jno
and
cwtl
push
sub
sbb
mov
outsb
xchg
sbb
popa
fidivrs
push
daa
fwait
bound
sub
jmp
or
sbb
push
imul
in
lea
fisubrs
push
lods
add
imul
into
popa
imul
sub
rcll
gs
adc
jne
mov
pop
ljmp
sahf
mov
movsb
ja
adc
jge
aas
jp
xchg
jae
xor
cmp
stc
add
cmpsl
mov
mov
xor
repz
scas
push
jg
pop
mov
or
frstor
sub
mov
or
jnp
movsl
pop
push
pop
repz
and
repz
cmpsb
cmc
adc
sbb
mov
xor
sbb
pop
dec
push
lock
jge
mov
sti
pop
mov
test
mov
xchg
dec
jp
inc
ljmp
lcall
xchg
jle
loop
mov
shlb
sbb
call
in
jecxz
mov
dec
insb
xor
out
mov
xchg
scas
dec
mov
jge
bound
fwait
xchg
xchg
push
loop
xchg
pop
xchg
lods
inc
pop
in
addb
pop
pop
xchg
out
pop
dec
add
rcll
jmp
in
shrb
leave
and
out
je
mul
push
push
lret
fs
lds
hlt
jb
aas
mov
rcl
add
xchg
mov
out
test
insb
push
fidivs
dec
call
inc
fiaddl
std
add
icebp
xchg
lods
push
push
hlt
xor
jge
mov
in
mov
fadds
hlt
repnz
mov
adc
cwtl
dec
fcoml
push
dec
rdpmc
sarb
pop
pop
inc
xchg
pminub
pop
icebp
mov
lcall
clc
push
gs
shrb
push
and
jo
sub
fmuls
mov
mov
dec
insb
fldcw
adc
icebp
ja
cmp
mov
loopne
addr16
cld
push
cmp
adc
mov
shlb
xchg
ljmp
into
das
lods
adc
in
test
jle
jle
aad
fwait
leave
inc
or
out
jp
pop
cmp
xor
clc
cmovle
fidivrl
xchg
data16
xchg
jge
mov
pop
mov
mov
lret
or
jmp
out
cwtl
xlat
mov
inc
in
and
jae
call
imul
sub
bound
add
inc
popf
test
inc
mov
sarb
mov
nopl
in
scas
mov
js
rorb
mov
xor
rclb
or
std
adc
sbb
push
test
leave
outsl
push
imul
xchg
lahf
push
dec
push
xchg
pop
and
mov
das
sbb
jns
insb
jecxz
daa
add
inc
push
dec
mov
push
les
je
ds
jb
std
mov
mov
sub
pop
and
jae
cmp
sti
adcl
imul
xchg
jb
les
pop
ficomps
and
lahf
and
mov
mov
pop
add
movsl
fwait
in
adc
mov
inc
ss
pop
bound
aad
test
fildl
xchg
push
outsb
push
repnz
fnstsw
cmc
in
mov
cmpsb
std
mov
cmc
and
fdivrs
out
ds
das
pushf
inc
sbb
repz
fistps
mov
adc
ja
inc
addr16
jg
filds
les
insb
fstpl
mov
inc
inc
add
dec
aaa
iret
into
cmp
jecxz
sub
lods
push
dec
data16
sub
adc
test
jmp
push
sub
cmc
adc
and
mov
in
test
outsb
movsl
sub
inc
unpcklps
mov
int
cmp
and
mov
inc
movsl
push
and
aaa
dec
lcall
out
int
pop
ror
fstl
lds
push
mov
mov
cmp
adc
mov
sbb
push
adc
int3
fldenv
jle
mov
or
xchg
push
fadds
adc
jns
rcll
push
pop
je
lods
rcl
xchg
ds
mov
out
aaa
inc
add
test
push
xor
sub
adc
call
shr
push
sub
pop
int
mov
popf
pop
push
mov
pop
xchg
fists
push
fwait
vpsadbw
out
or
loop
push
mov
std
ljmp
imul
and
cmp
dec
insl
pop
call
xlat
popf
xchg
bound
xor
add
in
imul
adcl
pop
clc
ds
call
add
cmp
push
in
iret
sbb
repnz
fstl
test
and
mov
mov
mov
out
sub
dec
mov
ja
mov
push
stos
xchg
push
sahf
xchg
divl
jb
pop
push
rclb
push
inc
adc
je
lret
add
adc
dec
iret
cmp
rorl
jp
mov
pop
call
dec
sub
lods
movsb
dec
aam
out
xor
xor
in
cmc
popf
iret
outsl
mov
pop
dec
sbb
mov
mov
xor
jmp
ret
jp
inc
lods
addr16
popf
cltd
in
es
fists
add
lcall
lea
inc
sub
repz
das
xchg
and
out
adc
xorb
ds
cmp
adc
cltd
push
jl
dec
mov
in
call
sti
sbb
sub
insb
addr16
dec
jmp
sbbb
cmp
out
fdivrp
flds
into
push
mov
faddl
jle
mov
mov
cli
fmuls
inc
xor
sub
xlat
testl
insl
shlb
mov
std
mov
test
inc
lods
sbb
scas
out
fstpt
es
jge,pn
lea
shll
or
addr16
and
xchg
mov
sbb
das
jecxz
mov
cld
andb
pop
movsl
mov
jl
int3
ja
fcomp
les
sti
out
xor
xchg
clc
je
outsl
popa
jg
out
inc
out
inc
adc
cmpb
js
in
pop
pop
xchg
mov
add
jb
or
mov
imul
cli
dec
lock
les
dec
aas
push
jo
inc
jbe
add
pop
gs
and
aas
lods
aaa
mov
or
clc
lahf
mov
test
sbb
je
outsb
icebp
jno
mov
pop
push
jp
mov
stc
addr16
and
cmp
dec
fwait
jns
repnz
push
in
adcl
push
and
push
addb
aaa
inc
loope
and
xchg
mov
pop
add
cmp
ficomps
inc
mov
cmp
jns
shlb
sbb
fildll
mov
sub
or
push
cmp
add
ds
mov
aad
cwtl
inc
push
jp
dec
pusha
push
pop
pop
filds
mov
popf
addr16
das
xchg
movsb
and
inc
xchg
cmc
subl
pop
push
pushf
inc
lods
mov
cmp
outsl
nop
aam
pop
lret
inc
iret
in
ficoms
cwtl
cmpb
hlt
jp
daa
dec
lret
andl
in
mov
pop
out
pop
shrb
gs
add
mov
sti
push
dec
xchg
pop
andl
push
scas
sub
scas
lret
jnp
stos
movsb
movsb
imul
loop
add
ds
data16
std
dec
and
mov
scas
pop
imull
xchg
out
cmp
mov
xor
fnstenv
addr16
stos
test
shll
aam
arpl
pop
add
in
fidivl
cmp
ja
imul
icebp
outsb
stos
call
cmp
aas
mov
push
lods
jl
in
cmp
cmp
push
sub
or
outsb
neg
filds
test
xchg
adc
sub
jnp
scas
and
mov
mov
rcll
test
cwtl
mov
add
add
push
fistps
leave
scas
pop
add
and
adc
lahf
jb
imul
sbb
adc
inc
cmpl
stos
repz
push
das
inc
cmpsl
dec
arpl
pop
jo
kortestw
pushf
lods
xchg
pop
jl
call
pop
pop
in
jg
inc
add
mov
jg
mov
ja
out
sub
xor
xor
cmp
add
mov
dec
add
loopne
insb
xor
pop
outsl
mov
daa
hlt
jle
jmp
push
movsl
sub
loope
mov
and
lock
hlt
push
adc
push
jg
addr16
cs
xchg
loope
jo
cmpsl
popf
dec
add
in
mov
jecxz
lahf
dec
das
inc
pop
popf
ja
mov
or
pop
mov
bound
addl
xor
rorl
sbb
pop
call
roll
dec
pop
std
je
ja
add
push
inc
and
jns
mov
jo
xor
push
lea
push
lahf
in
cld
addr16
ja
insl
fnstcw
and
adc
in
dec
les
mov
cli
jb
and
cmp
fwait
mov
mov
xor
cli
adc
mov
pop
sti
lahf
jne
clc
add
cmpsl
add
outsl
cmp
mov
cmp
aad
fidivrs
mov
lcall
mov
inc
jae
fdivrs
xor
push
test
mov
jno
cmpsb
lret
cmpsl
iret
cwtl
icebp
cltd
and
call
jmp
out
rcl
mov
jno
push
and
or
jae
adc
and
push
cmp
xorb
incb
mov
sub
or
mov
int
test
sarl
sub
dec
into
out
xchg
sbb
or
ret
or
inc
adc
mov
cmp
jo
xchg
lret
movsb
lret
addr16
fiadds
push
out
ss
orb
inc
data16
and
xchg
incl
rcrl
mov
add
out
jl
and
imul
inc
dec
push
ret
fwait
idivb
jmp
sub
test
inc
jle
hlt
and
imulb
leave
pop
cmp
cmpsl
shl
push
sub
jl
dec
rcrb
add
cld
cmpsl
sbb
inc
xor
aas
push
mov
popa
popf
lods
dec
or
aam
push
fiaddl
jnp
mov
jecxz
ss
jecxz
mov
mov
push
push
xor
nop
mov
enter
stos
add
les
out
clc
cwtd
lcall
nop
sbb
pop
dec
xchg
xchg
mov
sbb
out
int3
fimull
adc
xlat
hlt
rclb
in
inc
mov
adc
push
bound
fs
les
pop
pop
adc
sub
popf
push
xorb
or
aad
sti
jb
inc
inc
gs
mov
mov
push
pop
data16
fdivrp
into
sbb
mov
sub
push
imul
dec
add
loop
and
mov
add
mov
imul
imul
sub
xchg
add
ds
mov
xlat
jns
mov
mov
cmp
std
in
inc
xchg
int3
mov
pop
iret
mov
dec
test
and
neg
jl
add
pushf
test
lds
inc
push
mov
sbb
orl
arpl
idivb
sub
xchg
sbb
xchg
add
cmp
mov
daa
in
mov
lock
xor
hlt
mov
lods
xlat
inc
je
pop
mov
rclb
xor
or
cmp
andb
loopne
add
and
insl
adc
mov
mov
jle
mov
mov
repz
divb
pop
sbb
in
fidivrs
xchg
cs
sbb
gs
jle
shl
fisubrs
js
insl
push
cmp
roll
dec
inc
mov
fildl
andb
xchg
loopne
into
clc
hlt
mov
pop
iret
testb
in
add
or
clc
adc
call
mov
in
lcall
in
sbb
dec
jo
clc
jb
or
or
sub
fstps
arpl
dec
add
stos
mov
sub
sbb
xchg
jmp
out
subb
xor
and
mov
aam
adc
xor
popa
mov
and
dec
outsb
pop
scas
or
adc
in
inc
adc
cmp
add
push
cld
sbb
aad
movsl
jle
dec
jmp
push
fisubs
fidivrs
mov
mov
jg
out
pop
cmp
lds
jp
add
pop
mov
out
in
sub
cmp
and
add
shrd
sbb
lcall
mov
test
clc
and
mov
and
push
repnz
ss
sbb
pushf
inc
jo
pop
dec
movsl
cmp
lret
lock
push
xchg
js,pn
pop
adc
or
cli
cs
hlt
nop
cs
lret
cmpb
mov
sub
cmp
push
dec
out
pop
or
je
fdivs
test
push
push
mov
xchg
imul
pop
pop
in
jo
jle
xor
push
mov
mov
jns
sbb
mov
jg
sub
sbb
outsl
jo
cltd
icebp
dec
je
xchg
ja
std
or
add
sbb
les
push
sub
xchg
sub
mov
xlat
dec
rclb
and
xchg
out
stos
adc
fs
sub
xor
shll
test
inc
je
lea
nop
pop
rorb
fwait
jge
std
push
adc
fidivrs
insb
jecxz
inc
notl
xor
imul
std
add
das
xor
inc
test
add
xor
test
dec
push
in
sub
daa
aam
scas
fisubl
sub
cmp
sub
mov
mov
and
vmovq
fcmovnu
insl
mov
mov
inc
in
es
pop
inc
mov
xchg
jbe
sub
sbb
test
out
imul
roll
loopne
iret
mov
inc
gs
jmp
inc
arpl
mov
dec
pushl
cmp
or
jb
cmp
fs
in
test
inc
arpl
pop
das
push
push
aad
jmp
xor
stos
fstl
cmp
push
imul
ss
lds
push
add
mov
aas
pop
jbe
in
jae
push
push
inc
jl
push
xlat
div
push
dec
mov
lahf
mov
jl
add
jns
jecxz
mov
enter
andb
add
or
out
or
fdiv
inc
pop
div
adc
test
shrb
nop
orb
fldcw
mov
hlt
mov
out
test
mov
or
push
pusha
mov
xchg
dec
daa
lea
or
sub
xchg
mov
xchg
pop
mov
mov
in
inc
lcall
enter
aad
sub
dec
loop
imul
and
movsl
stc
jns
inc
mov
fcmovne
stc
daa
inc
data16
mov
push
xchg
cmp
cpuid
xlat
cmp
or
xchg
or
cmp
int
push
xchg
inc
jno
mov
mov
cltd
add
popf
add
dec
cmp
scas
leave
adc
sti
scas
cpuid
fwait
ds
fstpl
xchg
jb
or
and
popa
pop
sbb
cmc
jp
dec
scas
shlb
fcom
test
mov
add
pop
pusha
adc
aam
mov
inc
mov
mov
jns
in
stc
mov
pop
aas
and
shll
stc
loopne
movsl
fwait
adc
das
sbb
xchg
lds
inc
fdivr
cwtl
adc
aam
out
fxch
lcall
stc
jge
jp
mov
cwtl
std
mov
jne
jle
loope
rolb
sub
push
jl
hlt
jae
ret
pop
das
cwtl
jle
jnp
jmp
mov
leave
mov
xchg
mov
xchg
xlat
cmp
dec
adc
mov
dec
adc
pop
sbb
jp
jb
aaa
add
xor
negb
out
lahf
xor
push
xor
and
mov
imul
addr16
cmp
adc
stc
xor
in
leave
jmp
mov
dec
pop
js
lret
and
xchg
dec
lock
insb
fs
xor
sbb
aam
arpl
xchg
stos
jnp
arpl
rorl
mov
jp
sti
sub
jae
fildl
push
nop
shrb
arpl
test
mov
cs
pop
lret
adc
shlb
add
stc
inc
pop
jnp
sub
fsubrs
jmp
test
in
dec
dec
pop
pop
add
cmp
push
jecxz
in
lret
push
inc
adc
sahf
mov
stos
or
outsb
out
inc
jb
sbb
mov
pop
pusha
mov
mov
or
stos
aad
adc
and
addl
stc
or
js
mov
int
jns
inc
cmpsb
mov
fstps
xlat
xlat
pushl
out
cmpsb
push
pushf
icebp
fsubl
fistpl
push
test
add
loop
out
movsb
shlb
es
dec
add
mov
dec
mov
adc
pop
pop
sub
sarb
jo
cmp
mov
repz
mov
dec
pop
fs
push
arpl
adc
addr16
adc
push
leave
arpl
fsts
pop
mov
cwtl
mov
lock
mov
cmp
repnz
xchg
stos
fnstenv
mov
sbb
sbb
ljmp
xor
jo
repnz
rcrl
push
or
je
ret
cmp
lods
js
xor
jnp
lock
out
jl
loop
sub
adc
mov
adcb
xchg
hlt
push
inc
xchg
movsl
ja
jns
out
shr
jne
mov
loop
sub
add
movsb
mov
pop
push
pusha
test
loope
daa
cs
js
dec
fldenv
and
lret
and
in
and
inc
loop
jbe
mov
test
push
fisubrl
outsb
xchg
add
cld
xchg
das
xchg
stc
add
insb
inc
mov
or
push
adc
xchg
cmpsb
fwait
add
das
mov
push
das
adc
loopne
stc
or
and
mov
jbe
push
dec
push
imul
mov
lret
pop
pop
fwait
dec
mov
pop
mov
xchg
mov
mov
sbb
out
mov
int3
mov
fisttps
popa
mov
outsb
inc
push
sub
lods
jb
sahf
iret
icebp
add
jg
stc
sbb
movsl
leave
movsb
andl
pushf
pop
add
pop
push
or
iret
push
push
stc
inc
xor
lcall
adc
inc
and
jp
sub
aas
dec
insl
ret
std
mov
mov
or
jb
pusha
insb
out
shr
sbb
inc
jecxz
pop
enter
mov
xchg
mov
ret
mov
mov
cltd
sbb
imul
popf
imul
pop
xchg
aad
dec
out
imul
aam
xor
pop
stos
mov
lahf
scas
out
jae
sub
int
dec
clc
aas
xor
inc
fsts
jecxz
mov
sub
xor
movsl
mov
xchg
adc
sub
popa
adc
add
or
mov
sub
adc
dec
mov
xor
or
test
fwait
lds
fnstenv
adc
adc
cmpb
xchg
ds
inc
adc
mov
test
lock
gs
push
shlb
shlb
call
aad
mov
dec
aam
sub
lea
sbb
gs
inc
in
mov
das
xor
xorl
imul
mov
and
bound
test
aas
les
jp
scas
sbb
arpl
push
fs
stos
out
inc
dec
cmc
sbb
inc
imul
mov
dec
dec
mull
mov
sarb
jecxz
ret
add
jno
lret
sahf
mov
scas
mov
mov
movsl
cmp
sub
cmp
and
sub
movsb
lahf
repnz
inc
std
jg
push
push
inc
jae
xchg
xor
mov
mov
fcom
fst
out
popa
imul
sahf
dec
jne
shlb
sub
aas
imul
fdivl
ja
imul
xchg
rcrb
sub
xor
jnp
outsb
ret
sbbb
pop
jge
enter
push
and
mov
adc
pop
mov
push
or
add
sub
jns
jmp
or
xchg
ret
loope
mov
mov
fmul
jns,pn
ss
add
or
je
xchg
mov
jb
jnp
clc
cmc
shr
jle
call
lea
ret
lds
lea
outsl
out
jo
jno
mov
pop
js
fmull
cmpsl
push
xchg
adc
inc
jb
jge
lods
xchg
cmpsb
aam
dec
pop
push
gs
mov
mov
pusha
in
fdivrs
sbb
call
int
inc
mov
les
add
xor
jne,pt
popf
cmp
dec
push
lcall
jnp
mov
jne
jb
pop
test
sub
daa
jl
sahf
cmpb
iret
and
mov
inc
in
xor
and
jbe
bound
and
sub
iret
test
lcall
test
xor
cltd
ret
shrb
jmp
sbbl
sbb
inc
or
xor
sub
sahf
and
cli
aad
dec
sub
cmpsl
shlb
adc
gs
or
add
jae
pop
push
and
hlt
jb
inc
add
mov
pop
jl
aas
inc
or
cli
lock
and
in
and
mov
fiaddl
mov
clc
lock
mov
sub
cld
fs
xor
inc
jnp
data16
sub
dec
mov
addb
jmp
inc
dec
and
pop
xor
pop
aad
push
test
inc
std
je
cld
incb
inc
push
dec
xchg
push
stos
scas
enter
clc
xlat
hlt
lds
add
sub
adc
out
mov
add
cli
xor
int3
cmp
dec
leave
mulb
shrb
mov
cmpsb
dec
xor
and
push
xchg
pop
cmp
pop
aaa
pop
cmp
pop
testl
pop
mov
out
stos
inc
scas
xlat
mov
push
inc
sbb
sbb
popa
loopne
cmpsb
int3
sub
shll
sbb
push
mov
lret
sub
mov
js
jg
clc
daa
test
jmp
cmp
mov
stc
int
sar
shlb
mov
inc
pop
mov
dec
jp
sub
sub
push
push
data16
pop
cmpb
inc
mov
adc
std
inc
xchg
stc
xchg
mov
leave
cmc
jg
fucompp
mov
outsl
adc
lock
int3
jnp
mov
int
adc
adc
lds
adc
pop
jae
inc
cmp
es
mov
sbb
jle
lea
loop
aaa
or
xchg
insb
push
jg
enter
cmp
cs
xchg
pusha
frstor
aam
cmp
lds
mov
pop
sbb
cmp
mov
jl
mov
pop
stc
sbb
dec
and
mov
inc
and
testl
push
jl
fldcw
mov
call
xchg
insb
out
xchg
push
cld
andl
inc
addr16
data16
sahf
mov
jno
sti
fistpll
pusha
xchg
mov
mov
sbb
adc
movsl
pop
cmp
push
sarl
xchg
inc
jl
and
mov
jmp
xor
xchg
dec
xor
je
mov
test
pop
repz
ret
dec
sub
sub
lods
mov
out
int
sbb
fisubrs
cltd
mov
cmpsb
xchg
arpl
adc
jo
jle
into
xchg
repnz
inc
mov
fwait
pop
clc
dec
mov
adc
xor
xchg
and
cmc
pop
loope
das
loop
mov
jns
adc
mov
push
xor
shll
push
inc
mov
out
int
fs
jmp
in
outsb
hlt
add
mov
addl
inc
dec
fnstenv
xchg
lds
loope
sbb
fcompl
int3
scas
xchg
hlt
jg
jo
hlt
mov
lret
out
adcl
jb
mov
cltd
out
dec
inc
cwtl
jne
adc
cmpsl
pop
cmp
ret
mov
jae
sbb
out
mov
xorb
jmp
jnp
push
cli
andl
cmpsl
jecxz
rep
cmp
mov
rolb
jne
int
cmp
push
mov
cwtl
ljmp
sub
and
xchg
pop
mov
je
mov
xchg
iret
popa
adc
cmp
inc
jecxz
incb
xor
int
ljmp
insl
xchg
mov
div
out
add
shl
cmpb
jns
stos
dec
add
dec
push
jmp
stc
jbe
inc
sub
outsl
mov
sub
jo
mov
insl
mov
into
rcll
iret
dec
push
push
xor
mov
jns
cmp
mov
repz
in
mov
stos
les
pop
fs
test
fwait
cmp
sbb
sbbb
loopne
adc
xor
jo
or
mov
fwait
inc
xchg
pop
dec
and
pop
sbb
out
sarb
mov
out
daa
notb
mov
popa
mov
inc
cmp
test
outsb
in
xlat
stos
sub
loop
push
mov
mov
lret
dec
dec
adc
sbb
negl
lcall
and
inc
mov
pusha
inc
mov
movsb
cmovp
test
xor
jo
xchg
push
adc
adcl
sub
bound
imul
sub
dec
cs
aaa
mov
and
sbb
shll
pushf
adc
test
push
icebp
add
in
movsb
jns
in
mov
and
stos
pushf
pusha
pop
and
cltd
into
xchg
cld
xchg
adc
scas
pop
mov
jp
lea
dec
mov
ss
stc
negl
jmp
leave
sub
lret
xchg
mov
repz
jae
xor
adc
dec
imul
dec
daa
ljmp
xchg
adc
test
ja
jb
mov
add
and
mov
cmp
inc
loope
push
jnp
add
imul
in
inc
mov
mul
shll
jmp
xchg
call
fcompl
pop
imul
fcomps
lods
dec
es
mov
scas
ret
loopne
fwait
inc
xlat
cltd
jl
dec
and
inc
leave
xlat
push
lret
shl
jo
or
stos
mov
mov
loop
test
dec
scas
addb
psubusb
mov
sub
fsubrl
ret
inc
sub
hlt
inc
pop
adc
cltd
xor
jno
idivb
or
cmp
in
jb
nop
mov
or
sub
out
or
test
jge
loopne
mov
mov
add
jmp
movsl
fdivrl
int
dec
fists
mov
out
cwtl
push
mov
pop
xchg
ljmp
ret
inc
clc
sub
push
sahf
repz
lret
shl
icebp
inc
adc
roll
xor
stc
jl
decb
xor
mov
fs
adc
dec
push
cmp
inc
pop
cmpsl
shll
sbb
les
cld
mov
lcall
xor
aaa
push
ja
sbb
mov
scas
cmp
xchg
cmc
cmpsb
stc
pop
ljmp
test
cmp
sub
aas
push
mov
sbbb
push
pop
mov
inc
lock
insb
add
mov
inc
and
sbb
das
pusha
push
addl
popa
sahf
push
sti
in
lret
push
xor
sub
mov
mov
pop
in
sbb
fcmovnb
add
add
movsb
aad
cs
addr16
in
rorl
lods
xor
out
mov
les
push
adc
in
repnz
outsl
sahf
xchg
cmp
xor
in
push
lret
repnz
push
jecxz,pt
mov
inc
ficoml
xor
mov
inc
je
or
mov
out
jb
xchg
sbb
jp
in
and
jg
mov
push
inc
lods
cmp
sub
ss
and
push
sbb
repz
sub
jg
dec
mov
jno
lahf
outsl
or
cmp
xchg
popa
jg
inc
in
daa
sete
add
leavew
sahf
test
les
push
mov
ljmp
push
rcl
pop
and
sarl
stos
fsubrl
jl
pop
inc
inc
repnz
data16
popf
cmp
adc
push
ds
jecxz
mov
mov
push
and
in
xchg
xor
mov
lea
push
dec
cmp
testb
inc
shl
outsl
outsb
sub
push
xor
push
dec
or
insl
cmp
dec
std
inc
cmpsl
pop
test
push
lds
cmp
mov
adc
cs
xchg
shll
loope
js
xor
aas
cmpsb
mov
mov
jb
sub
or
les
sahf
xchg
out
pushf
test
and
imul
xchg
sub
xor
and
in
lds
pop
xor
jns
adc
mov
xchg
or
dec
daa
int
sbb
or
test
pop
mov
push
sub
jne
cmp
cmp
testl
xor
xor
xchg
jbe
aaa
fildll
or
in
scas
sub
out
aaa
pop
or
fstpl
jl
dec
aas
orl
adc
fucomip
and
scas
jp
rcrl
mov
out
xor
push
pop
ja
ss
mov
mov
push
adc
out
lahf
inc
or
roll
add
fimull
sti
cmpsl
mov
ret
jnp
pop
adcb
add
movb
pop
outsl
aad
dec
add
in
adc
lods
lods
mov
int3
lahf
adc
je
dec
push
test
inc
push
subl
xor
inc
hlt
lods
mov
aad
mov
push
insl
adc
inc
ds
leave
ret
imul
mov
sub
ret
push
sbb
andb
sbb
aas
pop
imull
adc
popa
sbb
bound
sbbb
push
inc
sub
lea
aam
xchg
sti
test
add
mov
dec
dec
cmpsb
ret
jnp
pop
push
xor
stc
js
mov
sub
pop
mov
mov
int
ja
sbb
repnz
movsl
cmp
mov
mov
inc
int3
leave
cli
das
sarl
nop
scas
out
mov
dec
pushf
and
lcall
xor
fwait
subl
cmc
jo
pop
mov
cmp
jnp
inc
sbb
cmpsb
loop
lret
add
mov
fwait
pop
pop
fwait
shr
mov
pop
sub
andb
fists
dec
shlb
clc
cmp
cmp
push
dec
adc
into
or
xlat
in
fwait
jg
pop
xor
int
pop
push
stos
fiadds
pop
dec
scas
int3
in
mov
lret
mov
in
mov
push
inc
xchg
sub
xor
mov
cmp
loope
dec
mov
hlt
mov
pushl
sub
push
sub
out
imul
scas
push
loop
out
test
adc
fldz
pop
xadd
push
jge
das
lret
mov
arpl
mov
sub
fwait
push
popf
xchg
cmpsl
lea
or
inc
jge
cld
mov
aad
fisubrs
in
mov
dec
mov
cwtl
mov
call
cmpsb
pop
fs
xchg
inc
loop
out
xchg
in
flds
mov
fs
jle
int3
mov
mov
stos
sub
xchg
out
jge
or
dec
pop
push
in
stos
clc
aaa
sahf
flds
insb
ror
push
loop
inc
ss
data16
sub
mov
push
push
popa
out
test
mov
jmp
jnp
sbb
testb
mov
jmp
push
cmp
std
stos
push
pop
pop
cmp
into
data16
or
mov
or
push
pop
lret
movsb
mov
repz
out
sub
int
mov
jne
sub
and
popa
fsubl
mov
mov
dec
mov
mov
inc
add
data16
test
pop
loop
rorb
jo
je
andps
or
inc
pop
add
js
pop
sub
shlb
mov
push
stc
int
pop
cltd
lret
hlt
push
add
sub
repz
daa
push
int
inc
and
in
stos
mov
xor
rcll
idivl
sub
cmp
add
dec
pop
test
pop
inc
jecxz
lret
inc
inc
cmp
test
push
and
xor
sahf
enter
clc
ds
aam
cmpsb
or
add
cmp
out
sbb
jp
xchg
mov
popf
inc
insl
outsl
jl
mov
jb
mov
pop
lods
jno
cmp
mov
inc
fwait
pop
in
lock
mov
imul
mov
arpl
xchg
leave
cmp
out
popa
cmc
jbe
mov
pop
jo
jl
push
xor
inc
movl
add
sub
gs
sahf
mov
jle
and
add
loop
mov
mov
sbb
mov
or
or
adc
sub
xchg
ret
mulb
cmp
test
jae
jbe
cli
mov
call
les
je
rcl
cli
sarb
rclb
ja
jecxz
mov
jne
mov
aam
ljmp
mov
loope
sbb
push
add
cmc
xorl
cmp
out
jg
jmp
js
mov
imul
sbb
repz
cmp
cld
cli
fdivrp
dec
mov
lahf
sub
jp
sbb
sub
stos
imul
ret
bsf
std
cmp
xchg
mov
neg
xor
cmp
arpl
icebp
jmp
cmp
scas
jmp
nop
mov
repz
lret
popf
es
jno
negb
loope
cmpl
daa
lret
scas
sbb
push
push
shrl
iret
xor
jbe
add
mov
addl
clc
add
sub
cmp
pushf
pusha
fwait
lahf
jl
mov
xor
out
fldenv
inc
mov
dec
jg
or
or
repz
or
push
in
pushf
test
xchg
cli
cwtl
addb
mov
sbb
lods
loopne
adc
loopne
or
mov
fsubl
clc
jbe
inc
sbb
mov
push
jmp
repnz
cmp
das
mov
push
inc
jne
lock
adc
js
mov
xchg
stos
mulb
leave
outsl
dec
pop
enter
movsb
push
cwtl
movl
sbb
data16
push
bound
repz
push
adc
and
sub
rclb
aas
mov
add
xlat
insb
pop
jecxz
and
mov
dec
mov
push
jmp
pushf
inc
sbb
jg
rolb
jae
leave
add
jp
lahf
push
inc
xchg
movsb
jecxz
or
fisubrs
push
leave
scas
or
mov
loopne
insl
xor
data16
pop
mov
test
inc
lods
icebp
int3
arpl
cmpsb
lret
icebp
mov
sub
outsb
test
add
push
xor
mov
stos
daa
aad
or
inc
test
xlat
js
mov
mov
int
mov
dec
adc
push
js
push
sub
dec
xor
push
mov
add
fidivrs
inc
xchg
xchg
add
cld
cmpsb
xor
xor
push
pop
mov
sbb
jmp
jmp
inc
stos
subl
aaa
mov
sbb
push
enter
push
and
pop
pop
neg
pushf
pop
cld
insb
mov
out
mov
jno
jl
lret
push
arpl
je
roll
fildll
jge
or
inc
or
sbb
cld
or
mov
adc
hlt
in
pop
cld
xchg
xorl
push
mov
mov
test
xchg
dec
add
push
das
pop
insb
mov
xchg
cltd
fstpl
out
or
and
dec
test
jno
into
push
cwtl
jl
aad
sbbl
daa
sub
push
gs
iret
jp
repnz
lret
and
shrl
sti
inc
xor
inc
sbb
dec
fnstenv
push
and
push
and
sti
push
mov
decl
pop
scas
dec
adc
incb
rolb
mov
iret
addl
popa
inc
sub
ret
testb
lock
in
inc
adc
jne
push
or
or
mov
test
inc
sub
fstl
pop
cltd
dec
outsl
repz
mov
call
fcomip
and
andb
mov
ljmp
jg
stc
push
and
mov
cmpsl
or
pop
jge
loopne
lcall
adcl
pop
cmp
cld
lret
test
aaa
daa
movsb
icebp
pop
lods
jle
xchg
rolb
and
call
mov
pop
in
mov
dec
pop
movb
insb
in
repz
inc
vpmulhuw
mov
ljmp
jp
outsb
popaw
jge
mov
jns
outsl
jmp
dec
and
ss
xor
push
dec
cli
jecxz
push
js
add
addr16
popf
testl
ret
sub
push
xor
inc
test
mov
add
push
icebp
pop
scas
jb
mov
decl
dec
xchg
pop
repz
jl
outsl
imul
dec
pusha
xor
out
notl
and
scas
pop
or
nop
sbb
add
mov
push
sti
push
inc
sbb
push
cld
mov
movl
push
xor
add
xchg
call
add
push
sub
sbb
and
jge
dec
in
outsl
cmpsb
je
cmc
std
inc
out
xchg
jp
fs
adc
subb
repz
inc
xchg
pop
out
dec
or
mov
fisttpl
into
je
insl
push
lods
jb
cwtl
das
ss
ficompl
xlat
lea
repnz
or
sti
and
enter
dec
movsl
xor
nop
out
add
mov
xchg
xor
xlat
sub
or
fwait
cmp
outsl
mov
ret
push
outsl
jnp
dec
scas
sbb
cwtl
mov
dec
xor
cwtl
adc
mov
jge
aaa
cs
xchg
nop
and
xor
test
xor
pop
lret
dec
incl
add
jns
and
stos
mov
insl
test
mov
adc
mov
sbb
inc
cmp
loope
mov
repnz
fstpl
mov
out
push
movb
and
and
in
roll
push
arpl
and
orl
adc
jbe
testl
xchg
jo
stos
aas
push
cltd
jge
cmp
jmp
movsl
in
jae
rclb
fcmovnu
push
loopne
int
icebp
dec
and
pop
cltd
mov
push
cmp
outsb
lods
negl
xchg
xor
xchg
lahf
and
arpl
aaa
push
in
sbb
mov
jle
mov
push
ret
inc
jne
cmp
or
or
je
inc
in
out
mov
fistpl
dec
mov
outsl
cmp
loopne
and
and
or
mov
shll
in
jae
sub
repz
test
divl
call
mov
scas
test
clc
sbb
ret
aad
in
dec
pop
imul
hlt
mov
mov
pusha
push
inc
mov
aam
push
fstpl
or
or
arpl
imulb
mov
pop
imul
push
fsubl
mov
out
xor
cmc
add
inc
jnp
iret
mov
stc
push
push
mov
jae
push
outsl
mov
push
sbb
je
adc
push
mov
pusha
jbe
enter
stc
mov
stos
push
mov
movsl
aaa
jo
pop
adc
pop
bound
loop
mov
add
lds
inc
jge
add
outsb
ret
movsb
push
pop
hlt
cmp
xorb
ja
jl
or
mov
jmp
xor
je
gs
into
in
jnp
xor
ret
and
fsubs
sbb
adc
xchg
sub
cmp
sub
arpl
sub
mov
ja
or
push
rclb
and
repz
push
pusha
addr16
jno
out
jge
loopne
imull
ds
sbb
lcall
mov
popf
mov
jbe
push
aas
iret
sub
xor
shl
pushf
aam
push
xchg
cmpsl
sub
dec
ja
mov
jns
stos
lock
ret
jp
push
cmp
insl
sub
in
mov
js
add
push
mov
dec
das
stc
push
test
pusha
bnd
clc
fmulp
dec
ret
xor
cltd
xchg
pop
inc
xor
sarl
test
adc
aaa
fdivr
push
cwtl
call
mov
jg
test
sub
es
int
aam
xor
cwtl
xor
and
sahf
push
loop
scas
push
adc
mov
fwait
test
scas
aaa
in
xchg
xchg
push
ljmp
mov
and
pop
cmp
xor
inc
mov
out
jae
lret
inc
filds
cmp
mov
mov
mov
mov
lods
cmpsl
dec
pop
inc
mov
push
out
mull
jbe
frstor
ret
sti
cmpsb
and
pop
sbb
pop
lret
insb
pop
fsubl
or
dec
sub
adc
es
mov
xor
sub
push
rcrb
xor
mov
test
and
pop
es
fs
ds
in
popf
push
out
mov
jne
mov
jae
xorb
jno
aaa
testb
push
loope
ret
and
ret
cmpsl
rcrl
stos
arpl
inc
pop
xchg
mov
jl
pop
jae
xchg
aaa
mov
push
xchg
push
cmpsl
jae
aaa
xchg
aad
add
std
mov
ret
js
jle
dec
xor
sub
xchg
xchg
popa
sbb
bnd
or
js
dec
push
in
imul
ds
imul
shrb
fisubrs
xor
adc
adc
sub
mov
arpl
jp
sahf
adc
mov
adc
and
jle
sbb
and
jo
mov
add
cltd
test
pushf
cmpsl
mov
sub
mov
sub
mov
and
inc
sahf
xchg
dec
push
ret
dec
aas
pop
sbb
inc
ret
and
stos
dec
pop
sbbl
mov
iret
xor
mov
nop
and
cltd
and
xchg
or
inc
sub
dec
stos
jmp
pop
imull
inc
mov
fcompl
loop
pop
push
stos
rcl
rcrb
addr16
insb
push
fcmovnu
ficomps
out
daa
mov
xor
adc
jmp
imul
adc
or
or
mov
sub
cli
ljmp
insl
ja
jge
push
xchg
mov
ror
fsubr
sbb
int
ja
inc
popf
dec
mov
mov
mov
sbb
dec
mov
test
push
aas
pop
add
sub
loope
push
xchg
push
popf
jbe
int3
mov
arpl
stc
mov
xchg
mov
pop
jg
pop
jecxz
add
notl
push
inc
pop
adc
sub
adcl
push
imul
pushf
xor
cmpb
sbb
dec
jmp
and
movsl
and
sbb
inc
pop
or
sbb
loopne
ds
sub
or
pop
cld
sti
xor
xchg
sub
mov
add
mov
cmpsl
cmp
aam
lret
cltd
cmp
pop
pushf
setb
pop
test
decb
xor
mov
add
dec
stos
shll
in
testb
ljmp
hlt
scas
hlt
sbb
rorb
push
mov
xor
dec
cwtl
and
testl
adc
mov
push
push
adc
cs
cmpsl
sbb
leave
in
cwtl
add
lock
fisubrs
mov
jb
adc
mov
das
out
push
fdivr
das
imul
mov
fistl
adc
xchg
pop
cmp
pop
mov
jbe
pusha
loope
andl
hlt
pop
inc
xchg
adc
jecxz
outsl
test
test
cmpsb
adc
rcl
fs
fidivs
xchg
nop
mov
stc
sbb
fstps
jno
dec
adc
mov
dec
xor
call
xchg
pop
int
push
sub
shrb
fnsave
in
xor
das
ror
xchg
push
in
add
cmp
pop
xchg
inc
xor
shrb
adc
dec
push
test
mov
dec
jbe
out
sub
xchg
pop
bound
arpl
das
js
mov
inc
adc
addr16
jmp
sarb
xchg
ds
ror
xor
fstpt
inc
je
cmp
jb
jb
mov
negl
int
ljmp
jge
and
mov
fadd
dec
scas
mov
jge
jle
push
and
jno
xorb
mov
and
out
out
in
fsubrl
cmp
hlt
and
mov
mov
jg
cli
rcll
jns
and
nop
rclb
nop
mov
pop
clc
sub
and
push
jnp
idivb
movsb
aas
je
lahf
je
inc
pop
pop
push
imul
xor
pop
xchg
xor
cmc
jns
jmp
nopl
data16
cmp
loopnew
ret
push
xchg
jb
cld
aad
movsb
in
mov
fstpt
orb
js
inc
js
mov
mov
test
xchg
loopne
cmp
dec
loope
xchg
inc
ja
cmpsl
dec
into
arpl
fcoms
pushf
fiadds
jle
mov
sti
or
divl
les
outsl
mov
sbbl
andb
cmp
aam
xor
neg
outsl
adc
cs
comiss
jns
push
or
ret
dec
ljmp
daa
xchg
sbb
or
jno
outsl
xchg
mov
dec
out
xchg
movsb
xchg
xchg
xor
lret
mov
mov
sub
ds
mov
pop
lret
nop
xor
cltd
jecxz
loop
jle
mov
cs
mov
out
pop
decb
and
mov
fcoml
push
cli
add
dec
sbb
bound
xor
jmp
pop
lea
mov
jecxz
in
fwait
inc
cmp
cld
and
sub
push
lods
std
leave
ss
xlat
dec
js
ffree
ja
decb
mov
mov
jl
cmp
rcl
fnstsw
movsb
push
push
adc
dec
jle
mov
xchg
or
bound
icebp
ss
divps
lods
cmp
push
test
jb
pushf
dec
fadds
add
addr16
jns
xchg
dec
jge
pop
jle
aam
sub
aad
repz
add
jo
mov
outsb
std
shr
add
add
stc
inc
push
lret
out
mov
xor
scas
mov
repnz
fdivrs
mov
ja
sbb
enter
push
test
add
bound
es
rcr
shll
addb
les
mov
popf
scas
jg
fucomi
xchg
jnp
jne
sbb
sub
xchg
shrl
jo
fists
fcmovne
test
cld
sub
sbbb
and
sbb
pop
cmpl
mov
mov
pop
aaa
out
or
xchg
loopne
ret
loope
jp
mov
movsb
mov
sub
icebp
cmpl
push
xchg
jo
xchg
push
ds
mov
inc
mov
test
dec
push
cmpb
cltd
les
or
addr16
sbb
or
lcall
int
arpl
dec
addr16
icebp
cli
cwtl
in
mov
repz
pop
mov
sbb
push
in
pop
outsb
dec
ds
stc
xlat
push
shl
das
push
add
xlat
push
inc
cmc
mov
fcmovb
fmul
sbb
es
mov
xchg
fildl
mov
and
xlat
sbbl
and
out
mov
add
mov
cmp
out
cmp
or
cmpsl
pop
mov
pop
int3
sub
ja
outsl
addb
or
pop
add
fstps
or
ljmp
add
icebp
fdivrl
out
arpl
add
add
mov
nop
js
or
shrl
lock
push
dec
lea
inc
or
and
stc
push
es
in
lahf
jl
hlt
push
lcall
cltd
fsubrl
xor
fbld
dec
xlat
jnp
stos
test
test
cmp
or
jle
sub
mov
loopne
test
sub
xor
je
pop
xchg
and
mov
mov
cmp
lods
pop
mov
sarl
leave
bound
mov
cmc
sub
dec
xchg
sub
jle
sbb
add
outsl
push
jp
or
pop
jge
xchg
flds
out
out
adc
inc
das
dec
xor
or
jno
inc
aam
xchg
es
mulb
jl
in
test
add
mov
lret
in
out
in
insl
jb
inc
shll
aad
decb
mov
push
ret
pop
jno
rcll
aam
call
push
xor
sbb
movsb
inc
jp
cmp
and
mov
stos
adc
mov
xchg
inc
jne
ret
mov
and
lahf
mov
cmpsl
fs
sti
daa
out
imul
xchg
mov
cmpsl
xchg
outsl
mov
adc
push
mov
mov
enter
pushf
xchg
jnp
dec
leave
sub
jl
push
push
dec
bound
fs
push
hlt
leave
inc
jae
in
cld
or
push
pop
test
jo
adc
jo
jnp
sbb
frstor
aaa
adc
ljmp
inc
add
mov
sti
mov
push
scas
gs
push
test
shrl
fmuls
push
stc
sbb
dec
insl
and
mov
or
int3
stos
sbb
jne
mov
cld
sbb
ficoms
in
pushl
pop
out
push
movsl
jle
lock
mov
mov
in
insb
mov
popa
inc
jae
dec
mov
push
imul
cmp
les
je
sub
inc
scas
inc
cmpsb
or
xchg
push
lods
sbb
sarb
testb
imul
push
xor
mov
jl
inc
jo
cmp
adc
test
mov
sarb
bound
jmp
pop
mov
xor
push
push
test
jl
cmp
sbb
lea
push
mov
ret
or
stos
or
mov
imul
sarl
call
dec
and
jns
dec
mov
aad
inc
cmp
pop
ss
rcrl
imul
cmp
pop
xchg
push
lret
lods
push
ds
pop
test
pop
dec
loop
pop
popa
inc
cmp
shl
aam
dec
repnz
mov
scas
or
mov
push
scas
cmpsl
push
clc
out
int
js
or
xchg
rcll
add
call
sbb
cs
jne
mov
pop
imull
dec
dec
xchg
ret
out
lret
out
fs
cmpsl
dec
leave
insb
in
andb
sub
call
arpl
pop
lds
sbb
aam
mov
push
lret
jp
movsl
out
mov
in
cmp
int
jb
add
xor
lods
test
or
in
dec
icebp
push
pop
dec
xor
jl
mov
lds
pop
fnstenv
ds
mov
xchg
add
fcompl
add
mov
lods
jl
fs
cwtl
cwtl
xor
fs
or
cmp
pop
fdivrl
insl
stos
ret
and
adc
dec
xchg
bswap
fs
enter
dec
inc
dec
test
or
insl
sub
outsb
jecxz
iret
adc
fsubp
push
push
sub
mov
inc
mov
aad
adc
iret
pop
mov
pop
lods
push
xchg
les
cltd
and
and
push
decl
scas
mov
mov
xor
xor
mov
mov
popf
jmp
cmp
xchg
inc
das
inc
je
lcall
xchg
in
scas
xchg
lods
xchg
jb
and
mov
popa
or
jns
lods
aad
ja
add
sahf
mov
pop
dec
fs
inc
add
sub
mov
xchg
stos
popf
and
xchg
sbb
sub
outsl
shlb
sub
fwait
xor
jmp
sub
inc
and
lret
adc
out
fdivl
insl
int
movsl
pop
add
jb
cmp
pop
aam
in
dec
pop
sti
inc
inc
xchg
pushw
and
mov
jle
pop
xor
push
je
mov
push
addr16
mov
lock
xchg
xor
mov
dec
frstor
or
bsf
cltd
je
repz
jmp
mov
int
adc
sbb
sbb
jecxz
faddl
insb
mov
push
inc
xor
mov
push
xchg
jle
das
or
xchg
pop
xchg
repnz
and
xor
pop
mov
std
enter
cmp
loope
je
adc
dec
jb
out
jle
jmp
stos
mov
fnstenv
mov
mov
adc
mov
and
inc
repnz
mov
shl
add
cld
or
dec
test
dec
test
xchg
and
test
ss
and
jnp
xor
jae
fsub
push
scas
xor
int3
cli
repnz
roll
mov
js
scas
cmp
test
ljmp
fsubrl
dec
aam
adc
lds
mov
cltd
dec
cmpsl
inc
imul
dec
dec
in
cmp
je
inc
out
cmp
mov
ficomps
rol
dec
enter
add
or
in
fbld
movswl
out
adc
test
mov
inc
pop
ja
or
cld
out
hlt
bound
xchg
dec
add
lcall
cmpsb
bound
jns
movsb
jnp
xor
pusha
cmp
mov
lahf
imul
push
fstps
sti
jmp
push
lds
lods
and
cli
push
jl
leave
dec
sbb
cmp
fcmovbe
lahf
sbb
pop
pop
mov
mov
push
pop
dec
adc
pop
sub
outsb
ret
jbe
das
dec
ss
aam
or
xor
push
dec
pop
and
jb
inc
dec
push
stos
dec
out
leave
xchg
pop
stc
sar
dec
push
aaa
mov
jnp
loopne
push
dec
pop
int3
jg
xchg
mov
dec
sbb
lret
test
aaa
jl
sbb
sub
jge
jae
aad
imul
adc
out
inc
cmp
push
push
xchg
pop
data16
mov
out
mov
sti
fwait
sbb
mov
ljmp
fcmovnu
jl
mov
repnz
pop
jnp
or
fsts
mov
int
xlat
addl
sbb
bound
mov
sbb
or
add
leave
xchg
jmp
mov
and
test
cmp
popa
ret
es
cli
js
neg
xchg
pop
or
mov
xchg
sbb
adc
aaa
mov
pop
stos
or
shl
mov
sbb
into
jecxz
aas
jnp
in
inc
into
sti
or
int
jne
jmp
scas
push
mov
fbld
dec
push
lds
inc
negl
jo
mov
aaa
icebp
ja
out
sbb
xor
sbb
jg
mov
cmp
mov
push
pop
repnz
and
fdivrs
add
lcall
aad
imul
data16
bound
dec
mov
fiaddl
cli
cltd
notb
mov
mov
xchg
or
sbb
mov
mulb
ja
pop
pop
jg
mov
fs
or
ss
lods
or
stos
or
pop
test
adc
push
add
js
ret
int3
cmp
adc
xor
pop
cmc
adc
aas
pop
inc
lds
lcall
std
and
int
daa
add
addr16
and
cmp
xchg
sbb
push
sub
aas
pop
dec
push
dec
sbb
xchg
pop
push
adc
xchg
std
jge
pop
out
mov
cmp
mov
xchg
or
jno
jg
push
cmpsl
cwtl
aam
or
or
adc
jo
std
and
aaa
cmp
ja
xor
imull
movl
fmuls
adc
or
adc
dec
test
add
jbe
mov
adc
idivb
lods
mov
sti
sahf
or
aaa
adc
jecxz
push
rorl
mov
sub
mov
push
rcll
in
jl
pop
push
push
adc
adcl
outsb
fistpll
cmp
add
push
pop
cli
jecxz
add
iret
leave
mov
lods
push
cmp
pop
push
adcb
mov
mov
adc
and
xchg
cmp
sub
mov
inc
jle
fcompl
out
xchg
jb
movsl
cmpsb
aaa
outsl
fdivl
lahf
fisubs
jo
push
sar
sub
dec
lret
pop
clc
push
rclb
xor
rclb
in
add
outsb
or
sub
lret
mov
push
test
outsl
lcall
xchg
sbb
rol
shrl
and
add
hlt
add
loop
out
lret
xchg
fs
cs
in
lods
je
mov
aaa
cmpb
sarb
and
cmpsb
bound
xchg
adc
ret
sub
push
sub
xor
xchg
sarl
aaa
pop
ds
or
sbb
ds
xchg
push
cli
out
inc
jl
push
in
push
jo
js
cmpsb
aaa
mov
sbbb
test
xchg
repnz
and
jle
push
pop
lcall
cmc
mov
pop
cld
dec
and
adc
mov
mov
in
aad
jecxz
mov
jno
adc
out
push
and
and
sub
loopne
and
mov
std
imul
es
fisubl
adc
andb
aas
in
ret
cmpsb
xchg
dec
in
inc
xchg
mov
jne
lret
nop
sbb
jo
sub
test
pusha
pop
xchg
or
lret
ljmp
or
imul
jmp
fwait
xor
inc
out
bound
mov
cmpsb
daa
iret
xchg
mov
sub
popa
xlat
dec
jecxz
sbbb
out
and
mov
call
call
sbb
fs
xchg
or
cwtl
push
rolb
sub
fmul
out
cmpsb
lea
adc
push
xorl
lds
mov
fcomps
movsb
dec
pop
cmp
std
add
cmpsl
in
inc
repz
in
sbb
xchg
jecxz
das
mov
nop
addr16
ljmp
test
lea
lcall
ja
cmc
lods
outsl
repz
mov
jae
push
scas
jle
pop
and
shlb
pusha
ljmp
jbe,pn
mov
dec
pop
mov
pop
push
lcall
and
pop
add
or
mov
mov
rolb
dec
pop
mov
in
mov
repnz
sbb
insl
and
ret
fsubl
inc
ss
pop
cmp
jae
jmp
mov
or
jmp
mov
cltd
fs
cwtl
sar
les
shlb
add
in
ja
pop
jmp
flds
add
add
push
mov
xchg
xchg
in
xchg
clc
dec
inc
mov
in
les
enter
ffree
xchg
mov
xor
push
xor
and
pop
sub
push
aam
push
sub
je
mov
lcall
outsb
fs
or
push
and
sahf
jb
xchg
push
sbb
hlt
mov
sbb
mov
xor
add
push
lret
js
jg
push
inc
in
sbb
fistpl
sti
rcll
test
sarb
nop
push
sub
ljmp
ret
dec
cmp
adc
stc
cmpsl
push
lods
add
out
pop
inc
mov
rcl
fwait
icebp
insl
dec
scas
shll
lret
jae
clc
jne
adc
mov
repnz
ss
adc
sti
cmpsl
mov
stc
sti
lahf
inc
mov
addr16
sbb
notb
inc
dec
mov
insb
fstpt
iret
dec
aaa
mov
cmc
mov
dec
push
dec
stc
sti
cmpsb
push
cmp
jb
sub
test
lods
enter
in
inc
lahf
xor
mov
pop
mov
jp
push
pop
aad
call
mov
icebp
mov
mov
push
cmp
xor
out
fists
pop
js
enter
lods
xlat
push
repnz
mov
movsl
lds
fwait
xor
inc
les
push
stc
inc
movaps
dec
imul
cmp
roll
push
sub
sar
push
out
xchg
popa
lods
scas
sbb
mov
xor
std
and
xchg
pop
lret
push
mov
gs
pop
mov
lahf
xchg
test
fcmovu
adc
pop
sarb
les
in
clc
subb
sub
sbb
xchg
jl
inc
not
mov
test
push
cmpsb
mov
and
xchg
pop
jg
scas
inc
lock
outsl
loopne
inc
out
mov
cmp
pop
dec
jae
or
push
mov
mov
jg
hlt
push
je,pn
lcall
ss
mov
and
xor
mov
sub
fwait
out
cli
mov
fisttps
mov
imull
jnp
mov
sub
xchg
test
lahf
mov
int3
loope
insb
lret
in
lock
iret
xor
test
xchg
inc
mov
xlat
out
jo
test
addr16
mov
gs
add
push
sbb
lcall
jae
inc
inc
pop
aad
leave
xchg
sahf
sbb
in
sbbb
and
dec
shlb
push
fiaddl
adc
xchg
outsl
mov
out
xchg
xchg
dec
mov
sbb
je
inc
mov
xchg
inc
mov
adc
adc
jl
imul
js
mov
cmp
inc
push
popl
mov
mov
cmpsl
scas
xchg
into
xor
mov
sbb
mov
sbb
sbb
in
ss
mov
in
mov
add
repnz
lods
mov
movl
daa
popf
gs
sti
sub
push
mov
xchg
lret
mov
sub
mov
sub
adc
out
and
out
outsb
lock
push
adcl
xlat
idivb
sub
enter
ret
cmp
mov
inc
inc
sbb
pusha
cld
sahf
lret
jge
into
jb
pop
std
in
pop
incl
dec
sahf
pop
lock
popa
cmpsl
xchg
lcall
mov
inc
adc
mov
fildl
ss
or
inc
mov
xor
fdivrs
les
lea
int3
stos
jmp
insb
sti
jae
adc
stos
es
or
push
pop
cs
xchg
or
cmp
test
jns
je
fiadds
fwait
sarl
jmp
add
imulb
sub
cltd
mov
aaa
ret
negl
xchg
fadd
loope
pop
xchg
mov
lcall
stos
pop
dec
pop
movsl
dec
ficoml
cmp
inc
cmc
xchg
dec
shll
mov
or
mov
sub
xchg
dec
out
divb
or
loopne
movsb
or
inc
popf
fidivl
jo
popf
lea
lcall
mov
sbb
sbb
sbb
addr16
outsl
dec
jl
cmp
mov
adc
sbb
mov
inc
js
mov
add
dec
fists
mov
inc
iret
xchg
mov
jmp
or
popa
nop
mov
movsl
lahf
nop
call
add
loope
inc
in
fs
or
or
jo
mov
bound
lea
jae
jb
adc
xor
pop
mov
jbe
or
push
pop
cmp
frstor
stc
popf
rcrl
aaa
sub
popa
xchg
xchg
mov
xor
mulb
mov
cmp
jmp
pop
lock
lea
push
push
cs
aaa
lock
xor
pop
fsubs
dec
aam
add
add
stos
jmp
int
pop
adc
outsb
mov
mov
xchg
lcall
mov
out
insb
and
je
loope
add
jo
jle
test
and
fcomps
xchg
cwtl
cmc
add
cmc
cld
mov
js
icebp
outsl
stos
shll
outsb
lret
clc
mov
lahf
cmp
flds
hlt
push
inc
hlt
inc
inc
xor
mov
ljmp
aad
fldcw
pushl
pop
repnz
push
mov
push
jne
fsubr
mov
sahf
push
pop
fildl
iret
add
pop
les
divl
test
xchg
xor
lahf
loope
stc
fmul
shrl
inc
mov
lcall
push
pop
sub
mov
xchg
imul
and
push
sub
mov
mov
cmc
fldenv
jg
in
mov
mov
dec
loope
and
mov
mov
frstor
je
push
repz
sbbb
shlb
rcr
stos
jg
aad
icebp
mov
push
mov
jp
and
sub
mov
outsl
pushf
inc
mov
pusha
sub
lret
pop
dec
ret
clc
push
fnstcw
bound
gs
dec
icebp
jecxz
fs
mov
mov
inc
mov
sub
mov
push
jmp
scas
aam
sbb
sti
dec
and
scas
jbe
mov
sbb
cmpsb
inc
je
stos
cmpsb
ja
cmpsl
fdivl
testl
shrl
loope
cwtl
jns
cmpsl
mov
mov
mov
shrl
daa
jns
lret
sub
in
or
jno
cmpsb
lods
push
cmpb
cmpl
dec
lret
jle
lret
mov
in
icebp
sub
mov
cli
xor
xlat
rcrb
movsb
out
xchg
push
scas
call
cmpsl
push
call
cli
movsl
jle
or
je
push
push
cmp
jb
scas
jb
push
shr
push
ja
mov
jmp
inc
addb
out
dec
and
mov
dec
lds
jmp
div
fs
ds
add
or
and
jne
add
repnz
push
ja
repnz
adcl
push
insb
enter
push
mov
dec
std
xchg
imul
lret
xlat
cmp
fisubrl
push
test
lds
mov
mov
outsb
pop
inc
push
xlat
dec
testb
cmovbe
das
call
test
dec
dec
jge
or
iret
lods
mov
jecxz
or
das
test
mov
dec
dec
jb
pop
mov
add
es
in
sbb
call
xchg
inc
clc
jp
jns
sarb
mov
lcall
and
or
aam
sbb
cmp
lret
pushf
lahf
mov
leave
nop
scas
inc
pop
fnsave
iret
jp
int
dec
adc
les
mov
push
out
sbb
dec
jp
lahf
pop
data16
test
ds
xchg
and
rorb
imul
jae
stos
repz
roll
add
out
mov
cli
pop
dec
aad
fcoml
xchg
cmp
cwtl
aad
push
repz
mov
adc
lds
stos
sbb
mov
sahf
in
in
sbb
imul
fwait
imull
push
shll
into
pop
jns
inc
in
mov
jbe
mov
in
or
adc
aad
fs
or
sbb
cmpsl
xor
mov
cwtl
fs
cmp
js
lock
outsl
loop
add
push
cmp
jge
xchg
jnp
in
xchg
sbb
sahf
cli
jmp
mov
mov
push
andl
sahf
icebp
repnz
insl
subb
cmp
xor
cmp
lcall
dec
mov
mov
cmp
xor
xor
jb
stc
xchg
insl
shlb
icebp
mov
rolb
aad
nop
jns
ret
das
ss
roll
jne
and
adc
sahf
push
adc
sbb
mov
in
pminsw
adcb
and
pop
cmp
dec
pop
lret
adc
mov
fcomps
or
in
jg
loopne
inc
lods
sbb
jae
mov
adc
imul
std
xor
sarl
insl
xorl
pop
aaa
into
or
xor
lock
or
adc
popf
sarl
xchg
roll
mov
dec
push
test
fistps
in
cmpsb
adc
mov
arpl
icebp
xchg
in
insl
insb
jno
loope
enter
out
aad
icebp
lret
mov
mov
and
pop
pop
in
or
push
mov
push
pop
fs
and
dec
jno
les
mov
fwait
xor
push
cmp
popf
dec
or
cmp
insl
in
bound
or
add
sbb
bound
adc
jns
add
pop
insl
fcmovnu
pop
fidivl
lods
jg
fists
fistpl
xor
push
xchg
push
push
cmp
inc
outsb
and
lahf
lahf
sub
aad
cld
rorb
cmpsb
sbb
inc
ljmp
jmp
mov
fndisi(8087
fcompl
enter
pop
adc
int3
dec
mov
mov
mov
stos
fcomip
add
xor
xchg
sbb
mov
int3
sahf
push
imul
les
aaa
insl
cmp
in
sub
jo
mov
popf
push
test
sar
dec
lods
stc
orl
or
inc
sub
adc
nop
fwait
inc
lds
push
cmp
mov
aas
cmpsb
rorl
arpl
pop
xor
out
nop
jo
dec
out
jg
jbe
dec
and
adc
test
mov
test
pop
sbb
lahf
mov
pop
dec
jae
and
in
enter
add
idiv
arpl
jle
pop
or
mov
lret
fidivrs
xchg
sysret
loope
ljmp
fsubrp
and
xor
dec
push
sub
idivl
aam
stos
mov
push
sarl
fcomi
int3
jmp
clc
and
in
std
ror
loopne
hlt
cli
mov
out
xchg
rcll
iret
push
cmc
jb
lret
dec
add
push
in
push
clts
cmp
cs
rolb
pop
push
ja
mov
pusha
gs
jbe
xor
std
scas
scas
mov
mov
inc
ja
sarb
sahf
in
xor
xchg
mov
jae
mov
xchg
insb
jg
int3
pop
or
inc
fwait
mov
push
sub
pop
jmp
and
cmc
pop
rcrb
fs
fs
or
popf
clc
jae
xor
push
mov
scas
or
dec
pop
mov
ret
and
lock
push
xor
test
shr
cmp
or
mov
sti
loopne
pop
imul
aam
cmc
push
dec
sub
mov
jnp
sub
icebp
mov
mov
pop
and
jle
int3
xor
mov
test
nop
jo
inc
fistpl
loop
xchg
bound
test
sti
mov
sbb
into
fisubrl
or
fstps
cmc
addr16
jo
inc
push
add
loope
jne
in
mov
mov
shlb
adc
sbb
shrb
loope
sbb
outsb
xor
clc
call
pop
ja
dec
mov
sub
out
jno
mov
jmp
js
push
out
stc
stos
push
fmulp
add
into
test
lret
inc
mov
test
pop
dec
or
add
test
ficomps
mov
xchg
cltd
outsl
pop
cmp
push
scas
sub
inc
add
mov
mov
add
lock
mov
addr16
addr16
push
shll
mov
sub
repnz
lret
xor
and
dec
mov
mov
cs
pop
inc
lret
push
adc
xchg
cwtl
test
xor
int3
jp
enter
sub
mov
dec
sub
sbb
sub
stos
ds
loop
cmc
imul
stc
adc
xor
insl
imul
xor
lds
pusha
add
cld
loop
mov
pop
clc
lods
cmp
adc
aam
mov
sub
xor
ss
aad
cmp
fwait
shll
sahf
es
pop
push
jmp
add
push
movsl
mov
cmpb
sbb
loope
jb
dec
xchg
sub
mov
adc
jmp
repnz
js
xchg
add
xchg
jge
push
mov
lods
cltd
lahf
jo
sub
mov
cwtl
or
mov
daa
aad
pop
fsts
xchg
sti
cmp
xchg
out
inc
jecxz
das
dec
jmp
push
aad
xacquire
sub
ljmp
mov
fsubrs
out
pop
adc
inc
mov
out
mov
inc
negb
int
ret
movsl
sbb
pop
mov
adc
imul
addb
push
jns
imul
call
cwtl
arpl
loop
cmp
mov
mov
aaa
or
mov
test
push
loop
mov
sub
test
jp
and
add
stc
dec
xor
dec
xchg
cmpsb
dec
and
pushf
enter
rolb
dec
enter
mov
jecxz
imul
mov
pop
addr16
dec
ds
imul
mov
add
mov
int
sub
call
shrl
pop
dec
mov
xchg
push
movzwl
out
cmp
enter
inc
pop
out
add
jle
inc
lahf
xor
sbb
cmc
xchg
mov
sub
test
cmp
arpl
cmp
inc
cwtl
fstpl
movsl
stos
aaa
cmp
xlat
movsb
xchg
repz
lcall
add
rcrl
mov
inc
jg
sub
adcb
loop
pop
xchg
and
testb
dec
ds
add
push
mov
loop
mov
icebp
fs
fists
in
cmp
cmp
ja
jo
pop
repnz
imul
repnz
fisttpl
addr16
imul
aas
cmp
mov
or
add
pop
dec
add
dec
or
shr
mov
loop
mov
arpl
cmp
jne
leave
fisubrs
cmc
mov
rorb
adc
in
pushf
lods
mov
orb
les
cltd
sahf
addr16
xchg
test
aad
std
imulb
nop/reserved
aam
sbb
cli
fadd
imul
xchg
test
cmpsl
jg
mov
loopne
loopne
rorb
out
sbb
sbb
aad
push
out
mov
jl
rclb
mov
adc
sarb
addb
inc
fwait
add
mov
push
inc
mov
clc
jle
sti
jb
pop
inc
mov
cmp
xor
addr16
test
sbb
jmp
popf
jne
add
or
or
popf
insl
adc
fwait
lods
js
inc
out
out
push
imul
adcl
int3
push
int
lret
and
andb
imul
std
and
adc
add
inc
ficoms
in
sub
sub
enter
pop
jno
out
popa
xor
cltd
mov
bound
fbld
inc
testb
xor
pop
imul
pop
nop
dec
adc
notl
aam
xchg
das
movl
pop
cvtps2pi
xor
jmp
ljmp
outsl
push
mov
fidivs
mov
ret
cwtl
scas
cmp
or
fisttpll
iret
cmpl
ljmp
ret
aas
hlt
pop
lcall
or
ja
pop
jns
repz
add
and
pop
hlt
sbb
mov
adc
mov
pop
fwait
in
mov
adc
out
inc
sbb
mov
add
add
lret
jb
les
lret
add
stc
inc
mov
fildll
adc
mov
and
loope
xchg
mov
test
sbb
inc
mov
int
xchg
push
std
stc
push
and
lods
inc
imulb
out
in
pop
pop
dec
mov
jb
leave
xlat
jge
pop
and
and
jmp
enter
mov
aas
xor
adc
shl
dec
loop
sbb
std
movsl
pop
mov
dec
cmpsl
and
dec
adc
rorb
jg
jecxz
test
shlb
roll
int
cwtl
pusha
pop
aaa
sub
jg
push
int3
les
mov
sub
pop
fmulp
fiadds
sub
xchg
fstpt
out
sbb
xchg
lcall
mov
lods
dec
dec
out
mov
sbb
lret
jmp
repz
xorl
dec
cmc
icebp
popa
movsb
pop
inc
sahf
fdivrl
lds
jae
pop
std
ljmp
mov
mov
int
push
adc
lcall
testl
jno
icebp
adc
adc
iret
fdiv
inc
das
push
outsl
push
pop
or
sub
add
insb
je
mov
pushf
sbb
aam
ret
xchg
jbe
fcoms
dec
insb
out
jge
out
xchg
rcrb
popa
stos
jb
pushl
inc
sbb
push
mov
xor
imul
push
mov
mov
mov
xchg
push
clc
cs
insb
and
ljmp
pushf
sarl
ret
or
enter
push
push
adc
adc
je
shr
lahf
icebp
xorl
push
add
inc
mov
inc
xchg
ds
loope
add
adc
mov
inc
ret
cmp
hlt
add
lret
roll
hlt
lods
sub
data16
fs
jg
popa
xor
sbb
mov
pushf
mov
ss
add
add
orb
mov
enter
jecxz
mov
nop
push
and
add
jmp
jb
jo
icebp
inc
out
lgs
cwtl
mov
push
stc
sbb
dec
lds
shrl
or
pop
sbb
ss
sub
movsl
arpl
fcomi
xchg
jl
cltd
call
rcr
int3
in
shlb
ret
or
fiadds
out
xor
add
ficoml
mov
xor
pusha
and
add
or
scas
loop
movsb
mov
fdivs
mov
cmp
f2xm1
rcrb
cmp
inc
xor
shll
and
popf
mov
imul
sbb
xor
imul
std
in
pop
xchg
nop
sub
mov
iret
xor
out
mov
add
rclb
mov
std
jle
lods
sar
dec
sarb
cmp
je
push
rcl
popf
push
lret
xor
push
bound
mov
cmp
or
loop
sbb
ret
ret
or
mov
pop
test
pop
mov
mov
jo
add
pop
xorb
inc
mov
xor
out
pop
test
cmp
push
xchg
popa
xchg
loop
xorb
idivb
js
cwtl
mov
mov
sbb
and
sti
addr16
jmp
test
jge
lahf
test
sub
shlb
mov
push
adc
cmpsl
insl
stos
test
push
pop
addr16
cmpsb
imul
ds
sti
fisttpll
sbb
or
push
cmp
cmp
movsl
xor
sti
bound
inc
outsl
sbb
xchg
lcall
loop
jb
test
jge
and
add
xchg
jg
xchg
adc
shll
scas
pop
out
push
inc
in
jp
xchg
stc
xchg
and
mov
push
movsb
xor
testl
jbe
add
scas
jbe
ss
dec
cmpsl
xchg
fprem1
adc
mov
repnz
sbb
int
pop
push
jmp
mov
mov
pop
mov
push
push
or
std
loop
call
ljmp
inc
sbb
mov
test
inc
pop
xor
push
sub
dec
nop
mov
jmp
mov
cli
in
rorl
mov
or
std
jl
mov
pop
jne
sub
add
out
fiadds
push
jmp
fnsave
mov
inc
add
sbb
fisubl
mov
loope
and
in
lods
xchg
fistpl
mov
enter
nop
repnz
call
cld
sarb
push
popa
fisubrl
pop
mov
and
sub
xchg
and
lcall
mov
in
out
or
gs
out
imul
stc
pop
jmp
out
rcr
mov
test
jo
ss
sub
out
fadds
test
and
imul
addl
ja
stos
mov
xor
pop
rcrl
in
mov
fs
or
data16
mov
ds
or
mov
fsub
fucomp
sbb
aas
sub
jp
jl
jne
lcall
cmp
adc
es
dec
enter
dec
les
lods
pop
popa
cmp
jmp
cwtl
je
loope
xchg
mov
jmp
push
andl
jge
cmc
imul
mov
fstps
ficompl
adc
dec
int3
je
pop
mov
sub
rolb
mov
icebp
divl
dec
xchg
imul
jo
mov
push
aas
fstpt
repz
popa
cmc
push
jg
mov
cmpl
out
jmp
cmc
or
lret
jg
jl
dec
or
icebp
cmpsl
loopne
int
push
sbbl
ja
adc
ret
jno
push
clc
pop
stos
test
mov
insl
jecxz
dec
or
inc
outsb
add
cmp
mov
mov
sbb
shll
ret
push
dec
xor
add
xor
lea
and
imul
cltd
cwtl
inc
fsubrs
push
out
or
jb
xor
fidivrs
push
sbb
pop
push
push
sahf
jno
mov
or
dec
nop
inc
test
fldl
xor
adc
sbb
int3
inc
data16
hlt
or
dec
dec
pop
test
jne
lods
adc
pop
mov
cmp
psrad
jmp
and
test
pop
sbb
cmpsl
sub
int
je
subb
int3
leave
int
test
out
xchg
lret
loopne
outsl
sbb
jo
sub
insl
shlb
sub
stos
or
ds
mov
test
arpl
pushf
loop
arpl
test
gs
mov
icebp
inc
push
fistl
sbb
imul
inc
or
pop
add
push
mov
clc
and
jno
scas
sahf
mov
inc
or
jno
dec
mov
mov
imul
insl
inc
add
roll
xchg
int
aas
pop
jle
or
aaa
adc
out
jae
pop
mulb
jb
rorl
fucomip
rcll
cmp
in
out
ljmp
lcall
pop
testl
and
insl
dec
dec
popa
mov
xchg
cld
or
or
lea
pop
or
jb
dec
popf
das
mov
sub
fcmovnu
hlt
add
or
pop
or
lock
fsubrl
pop
pop
lock
ss
mov
inc
add
mov
push
inc
xchg
inc
dec
add
in
int
xor
cmp
and
cmpsb
pop
les
and
mov
mov
nop
mov
mov
lds
mov
and
insl
jl
lcall
push
lds
xchg
scas
cltd
mov
push
sti
mov
adc
cmp
in
adc
sub
adc
jo
jne
gs
sbb
in
dec
std
mov
sti
xchg
shll
pop
add
cmp
fcmovb
mov
push
cmp
out
inc
andl
lods
push
jp
inc
xchg
into
rep
xchg
mov
fbstp
cmp
jmp
clc
outsb
popf
clc
cmpsb
in
pop
addl
pop
repz
mov
mov
shrl
or
jge
iret
std
and
pushf
inc
scas
jb
loopne
daa
xor
pop
stos
and
jmp
ficoms
push
inc
enter
call
movsb
lcall
gs
add
sub
xor
mov
sub
imul
sbb
xchg
aas
push
sarb
mov
push
mov
jl
aaa
ret
jbe
add
and
mov
dec
sub
mov
mov
nop
loopne
nop
negl
sbb
rolb
or
xchg
xchg
push
das
mov
test
xchg
data16
call
movsb
jae
int
icebp
movsl
sbb
jge
movsl
fisubrs
sbb
push
int3
clc
dec
pop
dec
ds
lods
inc
cld
sub
xchg
push
pavgb
fcomps
push
mov
stc
jne
mov
lret
push
pop
js
xchg
mov
push
jbe
pop
add
je
xlat
push
or
mov
xor
xchg
xchg
cmp
lock
xchg
lret
xlat
mov
adcl
lret
sahf
or
movsb
arpl
adc
jmp
lea
cmpb
shrb
and
mov
test
xlat
ja
test
push
pop
test
mov
sbb
loope
cli
scas
mov
jnp
mov
das
or
dec
push
lock
dec
repz
inc
push
fwait
icebp
push
mov
pop
add
popa
test
mov
xor
cmpb
std
or
and
scas
mov
and
cmpl
int3
addr16
mov
lock
mov
call
arpl
sbb
dec
fwait
xchg
aam
push
lea
mov
dec
nop
inc
incl
addr16
push
loopne
aam
out
xchg
inc
jbe
jns
mov
sbb
popa
xchg
jne
ds
push
out
jnp
outsb
clc
mov
mov
xor
push
or
sarb
or
sub
popf
es
pusha
scas
outsb
mov
jg
push
jecxz
stos
mov
jnp
adc
leave
sub
xchg
shll
pop
ret
sbb
in
pushl
inc
xchg
sub
pop
cmpsl
lods
xor
jmp
xor
scas
sub
sub
popa
push
fiadds
int
xor
mov
inc
js
cmp
xchg
shrl
cs
pusha
dec
scas
push
ds
xchg
fstpl
loopne
xchg
iret
mov
pop
jmp
dec
mov
popa
jnp
popl
xchg
sub
leave
outsb
mov
lret
cmpsb
pop
add
sub
or
mov
stc
mov
add
jmp
lcall
add
fistl
fistpll
in
mov
or
rorl
or
cmp
or
call
xchg
cmp
sbb
adc
jg
push
push
test
mov
cwtl
ficoml
cmpl
xlat
incb
scas
aaa
fsubl
fisubrl
mov
or
cld
jg
dec
aas
popa
stos
mov
hlt
lcall
sub
or
cmp
pop
dec
cmpb
daa
and
test
push
aad
dec
insb
push
insb
cmp
mov
pop
mov
pushf
pop
mov
adc
mov
or
and
movsl
add
jno
push
scas
mov
mov
push
inc
bound
xor
roll
xchg
jo
ss
lock
sahf
imulb
mov
es
in
sub
ss
cmc
adc
xchg
jle
mov
push
jo
int
jnp
sbb
jp
into
rcrl
push
pop
rclb
xchg
add
lods
loope
push
pop
lahf
rorb
push
add
mov
push
pop
lret
nop
push
xor
pop
dec
stos
iret
mov
jno
xor
pop
movsl
push
add
xchg
je
ret
rcll
xor
jecxz
or
ret
cli
cmp
ss
pop
xchg
jo
dec
push
inc
repnz
inc
pop
shrb
xor
xchg
mov
into
cmc
aas
jmp
pop
hlt
popf
dec
mov
jnp
add
out
mov
arpl
mov
xchg
bound
push
adc
fdivrl
xor
jecxz
sbb
cmp
xchg
imulb
sbb
or
ret
sbb
sbb
add
movsb
mov
nop
sbb
hlt
movsb
pop
outsb
xor
imul
cmpsb
xchg
lods
and
and
aaa
inc
or
testb
xchg
push
add
jnp
sahf
repnz
mov
xor
jle
xor
inc
fistl
xchg
jb
mov
sbb
add
int
dec
data16
push
xchg
jecxz
jl
ret
pop
pop
clc
enter
jp
test
mov
mov
lcall
out
in
repz
jecxz
jecxz
imulb
or
jo
ret
in
inc
fwait
jecxz
cmp
inc
or
sbb
push
data16
push
dec
in
jmp
outsl
xor
add
int
or
adc
insl
push
or
sub
lret
outsb
lds
cmpb
jne
int
cmp
cltd
add
into
cmpsb
jae
xor
push
or
leave
pop
sub
and
fldenv
add
push
mov
fldl
mov
and
scas
or
jae
or
push
add
addl
test
push
enter
inc
out
faddp
xchg
scas
or
lcall
into
cltd
filds
and
mov
push
jg
mov
loop
fcoms
stc
popa
push
stos
xchg
popa
mov
loop
scas
cltd
cmp
mov
ds
xchg
scas
ljmp
fmuls
fistps
sub
push
xlat
pop
or
xor
movsb
cmpsb
xor
jne
cmp
ss
inc
add
lret
jne
or
cmpsb
xchg
add
adc
cmp
mov
sub
xchg
lds
rorl
sbbb
mov
push
test
and
pop
repz
enter
dec
loope
adc
push
arpl
xor
out
out
mov
mov
mov
pop
push
mov
sahf
call
jg
mov
jnp
sbb
pushf
jle
sarb
arpl
inc
sub
cmp
sub
aas
cld
out
jmp
gs
pop
orb
or
sbb
dec
push
mov
rcll
push
ja
or
shlb
or
stos
mov
mov
or
dec
fisttpl
jno
stos
std
add
xor
dec
xchg
cmpb
je
adc
loope
jns
mov
pop
xchg
lock
jp
pop
ds
bound
add
jno
int
gs
sub
mov
or
rcrl
jle
ret
cmpsl
js
mov
lock
mov
js
in
xorl
movsb
in
cmp
dec
div
sahf
jl
cmp
sahf
and
push
push
cmc
aam
jnp
xchg
inc
ja
dec
adcb
mov
push
jo
mov
ficoml
je
fcmovb
mov
imul
icebp
fildl
push
ljmp
pop
jmp
out
jno
sub
xor
mov
mov
dec
mov
enter
pop
outsl
shrb
add
mov
cmp
sub
in
sub
call
leave
xchg
sbb
repnz
jbe
mov
mov
mov
out
sarb
jmp
or
shl
xchg
xchg
cmpsb
jg
cmpsl
inc
lods
xchg
mov
inc
pop
jmp
shlb
xchg
jge
inc
out
lret
test
rorl
outsl
xor
mov
popf
jl
or
les
pop
sbb
imul
mov
push
push
das
inc
fptan
es
out
xchg
inc
mov
mov
cwtl
mov
dec
in
mulb
orl
out
and
jecxz
adc
mov
rorb
pop
jne
scas
mov
imul
call
outsb
pop
and
aad
pusha
jnp
int3
cmp
inc
movsb
add
add
jge
pop
jl
out
fstpt
outsb
dec
bound
ret
es
test
cmp
or
mov
mov
out
pop
stos
pushf
rcrb
sbbb
fwait
cmp
push
adc
popf
mov
pop
rcr
movsl
decb
in
sti
xchg
shl
xchg
int3
mov
scas
out
ret
and
rcrb
mov
fdiv
push
cwtl
dec
shll
dec
data16
mov
push
jb
mov
cmpb
jp
jnp
enter
cmpsl
arpl
in
ss
adc
sbb
cmpsb
inc
cmp
push
dec
pop
pusha
and
lahf
and
pushf
insl
jp
jecxz
adc
xchg
dec
adc
or
and
pop
and
cmp
mul
and
cmp
sbb
mov
pop
mov
jp
add
or
cs
xchg
mov
mov
add
lret
mov
jbe
lock
icebp
cwtl
mov
push
add
mov
into
fs
add
in
imul
mov
xor
in
and
mov
test
cmp
xor
xor
and
ret
pop
data16
daa
dec
repz
adc
ret
cmpsl
ret
stos
je
aaa
cmc
shl
or
stos
bound
and
inc
mov
mov
and
jp
xlat
and
pushf
mov
sbb
scas
sti
and
pushl
popa
push
add
sub
ljmp
xchg
aam
inc
or
add
cwtl
push
sbb
fcmovbe
adc
loope
je
dec
push
and
movsb
pushf
iret
push
jge
scas
cmp
loopne
mov
ds
fsubrl
adc
clc
jecxz
daa
xchg
push
fildl
repnz
fs
mov
popa
cmp
imul
push
adc
out
pop
adc
mov
icebp
xchg
ja
arpl
add
jp
gs
lret
in
stos
fistpll
xor
push
pop
xchg
sbb
stc
xlat
cmp
cli
push
bound
clc
pop
xchg
xchg
cmp
adc
jle
test
and
dec
pop
or
movsl
sub
pop
cld
mov
adc
push
xor
mov
fsubl
outsb
and
mov
push
ss
jo
push
and
fsubrs
nop
pop
push
daa
test
dec
sti
scas
add
scas
fdivrl
inc
mov
or
idivb
test
sbb
aam
mov
lds
ret
xor
add
dec
addr16
js
out
xchg
icebp
in
aas
jnp
fs
shrl
cwtl
insl
loop
ds
and
subb
lea
cmp
addr16
rcl
or
mov
cmp
mov
cs
test
pop
jg
lds
push
cmc
sub
or
movsl
test
lock
cmp
insl
mov
stc
stos
mov
dec
inc
cmp
sarl
je
push
xchg
add
cwtl
nop
loop
sub
mov
xor
loop
push
fdiv
add
es
push
mov
jae
call
dec
xor
adc
dec
push
lcall
push
xchg
repz
pop
jmp
out
in
in
in
cs
shrb
sbb
out
xor
xchg
loope
int3
insb
mov
mov
in
pop
mov
push
inc
fwait
nop
shrb
jnp
rorb
jg
mov
arpl
jmp
aas
push
xor
aaa
pop
mov
mov
stos
adcb
nop
xchg
lcall
loopne
sbb
push
sbb
fadds
push
dec
mov
push
fsubl
into
cmpsl
jnp
out
jae
sub
pop
mov
sbb
ss
stos
je
pop
aaa
popa
jmp
lods
xlat
jne
loop
sub
inc
out
dec
bound
es
pop
fiadds
cmp
movsl
jmp
xorl
inc
add
shlb
push
lods
lahf
mov
fidivs
inc
jnp
cmpsb
or
movsl
and
xchg
lods
jns
aas
ds
add
or
adc
test
mov
mov
aad
or
fldl
jno
mov
jbe,pt
xchg
push
rcr
sbb
aaa
sbb
lahf
dec
vmovups
dec
mov
roll
mov
je
adc
std
repz
add
insl
cmp
movsl
test
test
xor
in
sahf
adc
fnsave
jb
xor
hlt
cmc
fstpt
dec
dec
mov
mov
pop
push
cmp
aaa
fs
in
and
in
outsb
loope
test
sub
test
icebp
mov
mov
add
sub
clc
loop
add
mov
shlb
xchg
inc
shll
scas
cwtl
push
pop
adc
or
jl
dec
mov
ret
fwait
xchg
sub
into
jp
aam
das
pop
loop
leave
xchg
jmp
call
test
push
scas
ret
aad
push
icebp
add
mov
scas
xchg
or
jnp
jnp
clc
xorl
frstor
bound
or
cmp
xchg
sbb
cwtl
js
test
and
xchg
mov
ds
push
push
mov
repz
or
mov
enter
cmpsl
sar
cwtl
inc
jae
sbb
scas
int3
jl
out
insb
cmp
jmp
xchg
cmp
jns
dec
push
shrb
mov
jo
adc
pop
sbb
imul
pop
dec
xchg
adc
lcall
sbb
ljmp
test
adcl
inc
or
cmpsl
loope
dec
jl
sbb
dec
mov
push
mov
inc
lahf
lcall
icebp
test
jbe
mov
push
movsb
or
adc
xor
add
jge
sbb
add
lret
adcb
pop
std
xor
int3
pop
movsb
jnp
cmpl
insl
je
mov
mov
arpl
in
gs
cmpsl
mov
enter
push
sub
aam
mov
lds
mov
ret
andl
cli
fld
movsl
jb
mov
and
lods
mov
mov
pushf
mov
xchg
mov
or
pop
cmp
pop
shl
ljmp
xchg
xchg
xchg
shll
sbb
sbb
sti
cltd
jp
jbe
test
mov
mov
popf
push
testb
sub
data16
xchg
inc
mov
shrl
lds
out
xchg
xor
subl
jbe
push
xlat
jp
pop
ss
xor
xor
mov
push
xlat
mov
call
sbb
fimuls
pop
rcrb
sub
daa
jnp
dec
outsl
outsb
pop
inc
push
outsl
jo
adc
pop
iret
outsl
inc
dec
push
mov
aam
ja
xchg
add
jmp
enter
mulb
ljmp
int3
addb
cltd
sub
jbe
nop
dec
inc
inc
mov
cwtl
pop
jno
pop
imul
lcall
movsb
adc
shll
cmp
pop
and
dec
inc
outsl
je
mov
cltd
sub
mov
cmp
add
int
jecxz
lds
test
addr16
xchg
rolb
push
jno
sub
or
cmc
push
outsl
add
inc
dec
cld
in
enter
imul
imul
dec
scas
or
test
mov
inc
push
adc
cwtl
jmp
ss
jnp
aad
repz
fistpl
ds
aam
mov
and
imul
mov
orps
rclb
sub
jl
cmp
mov
in
and
lahf
adc
adc
mov
cltd
leave
nop
inc
cmc
insb
mov
mov
mov
movsl
cmpsl
idivb
mov
je
mov
or
sbb
loopne
push
and
daa
iret
or
dec
mov
enter
cltd
sbb
cmc
stos
mov
xchg
sarb
aaa
fildll
loopne
aad
dec
lods
mov
xor
and
push
aas
xlat
lcall
jbe
mov
pop
mov
lcall
xor
repz
mov
mov
pavgw
pop
imull
and
outsb
fdivrs
mov
inc
or
cmp
inc
mov
rcr
jge
inc
rep
jecxz
add
mov
push
mov
jp
mov
fbld
aad
sbb
mov
and
inc
int3
popf
cmp
mov
and
fildl
test
sub
scas
push
push
dec
lea
sub
fdivrs
mov
cs
ret
mov
mov
add
inc
cltd
pop
subl
mov
test
xor
out
or
xor
jle
and
scas
lods
in
in
repnz
rclb
ja
stc
push
repz
imul
fiadds
adc
add
cmp
int3
cmp
and
adc
sti
adc
cmp
dec
aad
insl
mov
lds
popa
mov
scas
aam
inc
sub
andb
mov
jo
repz
aam
inc
cld
xchg
aaa
call
cmp
push
sbb
test
cltd
cmc
xlat
lahf
scas
cmp
andb
adc
ret
xlat
jecxz
in
mov
cmpsl
rcrl
mov
adc
test
pop
inc
mov
push
ud1
pusha
icebp
cmp
mov
outsb
mov
fadds
jnp
mov
stos
lds
cmc
xchg
push
into
jb
and
xor
push
jo
inc
insl
push
loop
roll
and
iret
das
hlt
lret
pop
mov
jmp
out
repnz
xchg
jbe
into
mov
stos
and
pop
orps
xor
pop
xchg
xchg
or
xchg
cmp
lds
sub
sbb
adc
inc
pop
movsb
add
add
inc
push
mov
js
mov
andl
sbb
aad
push
mov
ja
js
mov
orl
sbb
push
cli
int
in
jae
cmc
test
or
in
das
mov
fdiv
cmp
cmp
xchg
push
out
cli
sub
adc
icebp
stos
adc
clc
loopne
push
ss
adc
xor
sbb
in
lret
int3
adc
pusha
mov
loope
enter
stc
jae
jg
dec
sarl
dec
pop
leave
pop
push
or
mov
xchg
add
sbb
pop
sti
leave
dec
jmp
push
add
in
dec
stos
jno
push
mov
lea
imul
xor
loope
cltd
test
iret
cmp
sub
decb
imul
stos
pop
mov
fidivrl
pop
aam
mov
dec
aas
into
xor
sbb
inc
arpl
pop
add
or
mov
sub
fsubs
mulb
adc
push
push
test
xchg
mov
and
movsb
lcall
ss
daa
push
mov
xchg
fwait
mov
mov
scas
xchg
adc
xchg
clc
jmp
push
lret
adc
fidivl
aad
push
jg
dec
sub
shll
and
flds
or
stos
popa
pop
out
xor
pop
ja
pop
inc
pop
sub
push
cltd
in
adc
int3
pushf
sarb
mov
xchg
stos
adc
repnz
jecxz
test
inc
mov
leave
push
inc
pop
jg
or
rorb
int3
jg
mov
push
fs
aaa
push
addr16
dec
jp
and
or
inc
push
xlat
sbb
pop
mov
mov
inc
shr
mov
mov
push
cmp
lcall
fwait
dec
mov
cmp
stos
fbstp
xchg
in
rcrb
movsb
xchg
inc
cli
jmp
mov
push
enter
out
imul
inc
push
in
mov
pop
jecxz
fidivs
inc
sarl
push
add
jb
and
adc
jbe
leave
or
or
adc
mov
rclb
sbb
add
aaa
inc
push
adc
inc
stc
fs
pop
scas
cli
xor
xor
mov
mov
mov
and
es
adc
pop
sbb
xchg
push
jp
mov
push
add
mov
insl
imul
fidivrl
dec
js
jg
push
mov
outsl
jp
mov
inc
scas
pop
jmp
stos
cltd
repz
ss
fisttpll
cmp
and
mov
or
aam
pop
dec
movsl
out
push
jl
xchg
aaa
xchg
movsb
rorl
add
nop
jno
push
ja
je
mov
jecxz
in
lret
std
push
and
sti
int
and
push
push
ret
sbb
push
stc
pop
xchg
push
out
mov
arpl
mov
mov
mov
pop
or
dec
lret
imul
shrw
idivl
out
movsl
sub
sub
jnp
pop
mov
mov
mov
sub
pop
push
popf
pop
cmp
mov
jmp
or
add
in
jne
dec
xor
cmp
dec
or
jbe
repz
ss
mov
test
inc
test
jnp
cli
pop
pop
or
int3
fcomp
dec
js
mov
dec
inc
jbe
loope
inc
sahf
xchg
xchg
adcl
addl
out
push
lret
je
sar
movsl
dec
xor
dec
test
mov
addl
xchg
sbb
bnd
in
jo
jns
in
cli
nop
pop
sti
repnz
mov
xor
dec
pop
push
sub
cs
mov
movsb
jne
xor
frstor
adc
fsubrp
in
jnp
test
ja
mov
not
fdivs
rcrl
jl
test
add
cmp
fwait
add
or
divl
out
mov
xchg
hlt
shll
inc
push
outsl
xor
and
out
repnz
out
jbe
insl
jle
imul
xchg
add
pop
loope
into
dec
mov
pop
aaa
adc
stc
inc
and
or
lret
mov
scas
sub
lret
inc
out
test
push
cmp
rclb
out
xor
andb
into
cmp
addb
mov
jne
arpl
jmp
mov
mov
cmc
fbstp
loope
cmpsb
mov
lds
mov
subps
dec
adc
out
or
cmp
ret
lret
hlt
in
or
rcrb
scas
sbb
adc
ljmp
sbb
aam
shl
push
jmp
insb
shr
push
fisubs
xchg
pusha
mov
es
popf
and
repnz
inc
and
fsubs
cwtl
cltd
xchg
add
add
decb
pop
pusha
ds
adcb
inc
cmc
cmp
dec
mov
or
in
iret
adc
push
aas
mov
mov
addr16
xchg
es
repz
stos
jns
shlb
mov
xor
test
pop
sub
sbb
lods
lea
dec
call
xor
dec
xchg
mov
dec
mov
xor
mov
sahf
dec
xchg
cli
mov
addb
xor
jge
call
lods
into
xchg
push
sbb
sub
adc
add
lret
shlb
lds
mov
mov
lea
aad
mov
insl
out
ljmp
mov
adc
pop
lahf
or
outsb
xchg
add
movb
clc
fcoms
arpl
lods
mov
mov
pusha
sbb
test
stos
jecxz
aad
sbb
pusha
icebp
loopne
jge
jg
out
test
hlt
xchg
mov
cs
lods
pop
push
xor
out
mov
and
add
fwait
and
dec
mov
lahf
movsl
xchg
mov
mov
lcall
and
mov
push
jg
imul
mov
jmp
andl
fstpt
dec
lcall
mov
inc
ss
in
lods
sbb
adc
sti
sbb
mov
jnp
inc
iret
ljmp
cmp
imul
ja
mov
push
shl
loope
or
mov
jmp
push
mov
push
loop
xor
add
pop
push
daa
sbb
mov
push
inc
stos
sahf
dec
adc
out
lods
leave
xor
mov
add
dec
jle
je
cwtl
lds
adc
iret
lds
add
dec
sbb
nop
push
lahf
mov
push
stos
push
jmp
mov
xor
dec
ljmp
icebp
dec
xchg
andl
clc
push
push
or
xchg
mov
rcrb
jle
hlt
lods
jnp
leave
flds
loopne
sbb
sub
leave
int
push
xor
addl
sbb
xlat
cmpl
js
andl
in
xchg
push
fisubrs
inc
js
and
add
push
and
arpl
inc
fbstp
gs
push
add
and
pop
add
xchg
shll
or
mov
into
push
sub
cmpsl
push
adc
cli
dec
lods
pop
adc
int3
mov
jg
jle
sti
and
xchg
xchg
xchg
ret
inc
jns
fcmovnbe
sbb
mov
mov
ljmp
test
das
loop
addr16
std
test
add
sahf
rcrl
lods
and
jmp
mov
adc
cmpsb
fbld
pop
mov
mov
jae
pop
ja
test
jnp
inc
xchg
in
mov
stos
cli
inc
add
or
adc
inc
adc
xor
ljmp
cs
lret
jmp
gs
addr16
sbb
enter
pop
and
lods
sub
jp
push
insb
icebp
sub
cmp
xor
test
jg
mov
out
jg
dec
push
dec
test
and
clc
sub
adc
jno
sbb
and
icebp
or
mov
cltd
jno
nop
movsl
pusha
adc
cmc
sbb
leave
loopne
rclb
call
lret
nop
js
call
add
adc
bsr
out
adc
mov
push
push
mov
call
out
lods
xchg
fldenv
pop
xchg
in
cmpsl
pop
mov
push
loopne
push
jno
xchg
mov
ljmp
and
lods
push
sbb
jle
jl
int
fsubs
out
inc
rorb
cmp
pop
add
sarb
pusha
pop
lret
push
jns
bound
mov
mov
call
fiadds
add
dec
pop
pop
fisubrl
sbb
sub
sarb
push
add
test
repnz
je
sub
adc
fcompl
cmp
push
cli
cwtl
mov
icebp
clc
or
js
pushl
push
fildl
daa
inc
xlat
pop
shrl
or
sarb
cld
rcrb
mov
mov
cmpb
lea
pop
jno
ret
outsb
out
mov
or
std
dec
pop
arpl
xchg
add
sahf
fxch
daa
dec
pusha
mov
scas
xchg
arpl
in
lahf
out
pop
hlt
push
mov
data16
pop
xor
je
int3
scas
rolb
sbb
out
leave
repnz
je
aaa
inc
and
xlat
imul
jae
leave
pop
mov
dec
jl
xchg
cmc
xchg
fildl
mov
mov
cmp
lods
dec
mov
inc
add
loopne
or
jmp
in
cmc
pop
mov
and
xchg
inc
adc
lods
and
mov
mov
repz
jge
and
icebp
fisubrs
inc
pop
mov
adc
stc
adc
sub
cmp
adcl
cmp
int
inc
lods
cltd
jecxz
repnz
push
add
sub
icebp
sbb
mulps
add
mov
mov
dec
cwtl
aad
daa
ss
mov
mov
popf
jge
and
mov
jmp
int3
inc
ss
fldl
aas
movsb
mov
test
push
out
xor
pushf
push
in
in
cmpsb
xor
aam
add
mov
loopne
and
enter
sarl
add
add
nop
dec
vfixupimmss
jge
push
ds
xor
push
ljmpw
pop
xchg
mov
je
push
cli
and
mov
stos
outsl
xchg
std
xchg
lret
sbb
dec
xchg
and
xchg
mov
inc
in
and
and
xlat
sub
xchg
vpunpckhwd
addr16
sahf
sub
hlt
and
stos
or
adc
push
pop
and
xchg
mov
loopne
mov
inc
xor
ss
testl
es
push
shll
and
lret
jno
push
shll
aaa
outsb
insl
jbe
and
mov
mov
xorb
sbb
clc
jmp
push
xor
lock
pop
fcomps
enter
sbb
inc
iret
sbb
movsb
pop
cmp
cwtl
es
push
push
cmc
sub
popl
push
pusha
push
mov
inc
cmpsl
jp
jg
popf
rcr
adc
mov
lods
dec
cs
jae
std
out
test
push
xor
or
mov
cmpsb
or
jle
pushf
addr16
cmpl
push
add
sbb
incb
fisubrl
cmpsl
shl
int3
aam
mov
movsl
xchg
add
js
adc
out
jb
in
int
sbb
data16
jns
add
mov
enter
inc
jl
pop
lds
mov
mov
inc
insb
lahf
out
orl
js
mov
or
inc
cmpsl
inc
int3
ficoms
or
test
roll
stos
xchg
aam
inc
daa
ret
inc
scas
outsb
mov
mov
fisttps
or
sarl
mov
mov
sub
adc
fs
enter
mov
scas
jg
sbbb
add
pop
sbb
into
repz
repz
movsb
mov
jge
pop
xor
fcoms
bound
jns
aaa
sbb
pop
adc
pop
out
sti
mov
mov
sub
mov
sub
mov
jnp
testl
daa
lret
inc
sbb
xor
div
push
pop
xchg
xlat
push
movsb
sub
fmull
add
sub
mov
mov
shrl
xor
push
aad
add
mov
jecxz
nop
aaa
hlt
ja
jmp
or
inc
outsl
dec
inc
mov
dec
lahf
loope
adc
orb
cmp
aad
add
aaa
ret
les
movsl
xor
movsb
cmp
jne
or
std
mov
andb
or
out
daa
push
imul
sub
negl
add
sbb
adc
les
sub
adc
movsl
adc
fwait
leave
adc
xchg
scas
aad
mov
adc
xchg
xchg
popa
mov
push
fisubrl
cmp
cld
insl
and
adc
jb
push
push
push
dec
adcl
cmpsl
pop
mov
roll
adc
mov
mov
lds
test
sub
and
xchg
in
mov
sbb
int
pop
sti
add
out
and
cmp
int3
movsl
shrl
sub
fsubrs
xor
sbb
out
jns
inc
push
dec
sub
lds
and
out
pop
ss
push
stos
out
adc
xor
push
scas
mov
push
push
and
jne
loope
movsb
cmp
popa
imul
mov
mov
xchg
aam
mov
lcall
jae
push
mov
lcall
lods
mov
and
popa
xor
inc
cmp
loopne
jo
movsl
dec
pop
or
push
test
fwait
int
in
pop
fldenv
adc
xchg
outsl
cmp
sub
mov
push
sub
mov
movsl
leave
adc
dec
nop
ljmp
ss
insb
adc
faddl
sub
into
sbb
imul
adc
xchg
jmp
xlat
lea
out
push
out
xor
cld
popa
gs
cmc
leave
xchg
cmp
add
xor
jle
jne
jb
imul
movsl
rcl
pop
lret
jmp
pop
sbb
jge
mov
sahf
jle
xlat
ret
dec
inc
mov
bound
inc
add
dec
pop
cmc
mov
rorl
sub
pop
pop
dec
cmc
cmp
xchg
or
cld
push
adc
xchg
mov
faddl
cmpsb
cmp
lock
std
mov
xlat
sbb
fwait
arpl
popa
lods
cmpsl
jae
sbbb
popf
and
push
popf
fwait
icebp
mov
add
push
hlt
sbb
pop
ret
sub
adc
push
sub
stos
repnz
xchg
xchg
sti
rclb
sbb
loope
inc
or
lds
pop
repz
pop
add
push
pop
mov
out
sbb
pop
jg
mov
dec
clc
loop
clc
lds
dec
rcrl
loop
hlt
and
clc
mov
call
stos
in
jo
cmp
or
loope
xor
dec
dec
mov
loopne
pop
stos
pop
push
shlb
stos
sub
loop
mov
ljmp
xor
aaa
dec
push
add
loop
test
or
pusha
dec
dec
jl
into
leave
mov
xor
adc
jno
xor
adc
iret
jp
push
cmpsl
add
scas
pushf
nop
add
xchg
jp
and
cmpsb
jecxz
pop
jge
pop
or
inc
into
mov
mov
push
fdivrs
incl
pop
scas
dec
jo
fdivrl
insb
imul
loopne
pushf
xchg
mov
andl
test
in
imul
imul
add
addr16
cmp
inc
pusha
sbb
push
cmpsb
adc
test
mov
daa
lods
push
in
dec
push
scas
pop
gs
les
push
adc
dec
rorb
dec
cmp
pop
inc
je
xchg
pusha
std
jae
and
lahf
insb
aam
pop
fsubrl
mov
xchg
mov
cmp
loope
scas
mov
cmp
jb
dec
fdivl
or
test
dec
pop
mov
xor
add
xchg
sbb
insl
stos
lahf
jmp
rorb
insb
add
fwait
mov
insl
add
sbb
push
push
fiaddl
negl
mov
movsl
dec
xchg
test
mov
aaa
pop
stos
sahf
rorl
das
aaa
imul
mov
inc
icebp
ret
dec
in
sti
jge
imul
ljmpw
imul
dec
dec
sub
call
popl
divb
add
sbb
pop
stos
xchg
lret
inc
pop
and
or
mov
call
daa
mov
push
dec
aam
adc
or
mov
leave
test
add
je
mov
pop
aam
push
testb
cmp
mov
fs
jecxz
stos
pop
mov
out
push
mov
fldl
lock
mov
sub
xor
lea
dec
loopne
sub
out
adc
sbb
test
fs
push
or
jns
test
or
and
into
icebp
icebp
cmpl
and
mov
add
jecxz
jno
jmp
cmp
and
push
sbb
fwait
cmpsb
mul
int3
push
xor
dec
add
es
mov
lds
mov
inc
hlt
mov
jnp
dec
and
clc
xchg
sub
int
or
jnp
aad
mov
aas
ss
lods
pop
ret
jmp
es
pop
pop
es
or
jbe
inc
daa
inc
shl
cli
outsb
sub
sub
inc
daa
popf
clc
setnp
rcl
in
pop
popa
cltd
popa
leave
iret
movlps
inc
jge
lock
pop
jb
mov
aam
or
jle
test
stos
mov
adc
shlb
js
mov
aad
xor
shrl
and
xor
sbb
mov
rorl
mov
pop
out
add
fists
inc
or
mov
repnz
insb
das
pop
xor
dec
ds
call
sub
push
imul
inc
sub
shrb
inc
dec
ret
mov
clc
mov
lock
icebp
cwtl
and
int3
pop
das
dec
and
xor
mov
scas
push
sub
sub
lcall
ss
mov
cmpl
popa
push
push
add
cmp
popf
stos
add
sub
imull
pop
scas
xor
insb
jno
das
out
out
in
jb
mov
or
insl
fidivrl
fisubrl
push
push
mov
ljmp
adc
leave
add
dec
xor
push
clc
inc
repz
jbe
inc
or
aaa
adc
sub
mov
cld
test
clc
sahf
ss
cmpl
dec
lds
adcl
cmpsb
dec
movsl
xor
cmp
aas
push
lock
ja
mov
xor
mov
lahf
mov
adc
hlt
fwait
popa
clc
inc
push
not
dec
lahf
shl
lods
jecxz
or
sbb
jne
mov
int3
notl
mov
mov
movsb
inc
xchg
roll
call
in
sar
jb
out
push
mov
mov
mov
mov
and
sub
imul
xchg
jmp
loope
xchg
daa
bnd
push
aas
fwait
call
and
ret
ss
pop
lcall
and
sub
cld
in
adc
or
int
xor
sbb
sti
and
lret
or
scas
pop
ret
jg
pushf
leave
scas
mov
adc
arpl
adc
jnp
mov
or
fidivrl
jg
push
mov
push
mov
test
inc
mov
popa
xor
enter
data16
ja
int
mov
cmc
in
inc
pop
jo
push
mov
jg
mov
dec
mov
js
push
adc
add
andb
jns
mov
fbstp
push
push
icebp
mov
lret
push
nop
fimull
jge
scas
push
scas
xchg
cli
clc
sub
xchg
add
jno
jo
push
push
stc
ret
cmp
push
and
sbb
cmp
mov
sub
pop
aam
scas
xor
mov
ds
push
lret
outsl
sub
jnp
out
lret
mov
inc
jnp
adc
mov
xor
dec
mov
cld
fnstcw
data16
cmp
sarl
jge
mov
or
mulb
out
jbe
out
inc
bound
popf
dec
ja
clc
enter
push
rol
mov
mov
inc
or
icebp
shrl
sbb
js
cwtl
sbb
scas
stos
push
pop
movsb
push
jmp
sti
push
rcll
fmulp
repz
addr16
jle
xor
outsb
in
dec
roll
lcall
fcom
test
push
mov
ljmp
adcb
jbe
or
fildl
and
out
mov
push
outsl
call
mov
jg
xchg
mov
jg
mov
jmp
imul
arpl
xor
popf
stc
jl
outsl
mov
int
call
lcall
leave
outsl
nop
popf
mov
mov
add
pushf
sbb
jmp
xchg
aas
mov
das
test
cmpsl
push
add
jbe
push
subps
enter
daa
cwtl
cmp
mov
ljmp
ret
pop
inc
jo
in
enter
shrb
jge
mov
mov
scas
adc
dec
sbb
xor
mov
icebp
std
mov
mov
sub
outsl
hlt
fs
mov
test
nop
jp
sub
movl
ljmp
cmp
adc
mov
mov
movsl
inc
gs
adc
or
stos
out
sub
inc
push
xchg
ret
or
mov
repz
cs
pop
shlb
xchg
sbb
mov
dec
jecxz
fstps
mov
test
lds
add
inc
fnstenv
and
xor
push
mov
decl
lret
jo
movaps
pop
call
js
pop
cmpsb
js
adc
out
pop
jmp
inc
int
mov
xor
sbb
push
aam
ds
js
lea
testb
fldt
in
pop
call
jmp
adc
pushf
pushf
or
and
incb
mov
mov
popa
push
inc
lcall
xchg
out
and
je
imul
repnz
popa
push
cmc
push
xchg
sbb
cmpsw
pushf
mov
ljmp
test
lods
jns
push
sub
mov
or
and
lock
xchg
aam
cmp
fwait
mov
ljmp
sub
loopne
andb
add
mov
pusha
sarb
daa
das
jns
inc
inc
mov
lret
outsl
jl
ficompl
lock
jg
pop
mov
xchg
stos
movsb
out
loope
inc
adc
adc
push
jo
mov
inc
push
jmp
pop
pop
dec
push
adc
mov
subl
aad
add
clc
push
sub
aad
push
jp
xchg
jns
clc
mov
cmpsl
sub
pop
jns
xchg
shrl
call
adc
push
jl
sub
jmp
or
js
stos
push
iret
ja
or
adc
test
inc
jecxz
sbb
je
or
push
hlt
scas
push
adc
rcl
add
mov
add
enter
stc
repz
dec
out
dec
xor
cli
and
loop
frstor
scas
sub
and
aam
pop
cli
add
movsl
inc
jp
push
movsl
push
xchg
mov
add
cmpsb
mov
je
jae,pn
pop
int
pop
push
out
shrb
mov
xor
out
ss
outsl
int
sbb
call
pop
xchg
loop
mov
mov
xor
xchg
clc
inc
int3
std
lahf
decb
ja
pop
mov
mov
mov
dec
xchg
pop
daa
push
call
lret
add
or
shr
test
stos
push
outsl
in
je
dec
in
sub
lea
and
out
mov
stc
out
xchg
push
adc
jge
in
and
cmpsl
sub
adc
out
dec
hlt
inc
lock
movsb
mov
xlat
hlt
xlat
lret
mov
sub
add
cmp
rclb
jne
movsb
or
sub
loope
and
jb
cli
jae
jne
pop
or
aam
bound
clc
push
lock
xchg
sti
mov
fcoms
js
outsb
cld
dec
hlt
ds
cmp
sbb
sub
pop
outsl
or
xchg
mov
jg
or
aam
mov
scas
shll
ss
lods
les
int
das
sbb
add
mov
pop
jns
mov
jmp
or
inc
xchg
mov
mov
pop
mov
outsb
sub
scas
xchg
aaa
out
mov
repnz
push
mov
mov
mov
dec
pop
cmp
imul
dec
jge
sub
mov
xorb
dec
add
pop
sbb
rol
xchg
jo
jne
mov
push
pushf
add
scas
mov
nop
xor
cmp
iret
subl
push
mov
sub
mov
inc
or
lock
and
jno
inc
adc
dec
adc
mov
fcompl
xchg
sub
call
out
push
out
stc
loopne
sbb
jne
in
jns
xchg
test
or
dec
push
rol
pop
pop
pop
adc
roll
in
cmp
mov
inc
ss
das
add
mov
bound
adc
cmp
mov
lcall
aam
cmp
cmp
jae
test
enter
xor
jge
jne
movsb
mov
out
rcrl
add
lea
mov
out
xor
fs
test
inc
cmc
repnz
sbbl
cltd
inc
mov
mov
ds
or
out
out
and
add
ja
dec
aad
fcoms
xchg
xlat
dec
scas
xor
es
mov
inc
adc
mov
pusha
fprem1
add
fsts
shll
or
or
jecxz
cmp
cmc
stos
adc
ja
mov
leave
repz
cwtl
in
repz
es
xchg
lcall
ret
inc
sbb
push
push
fisttpll
in
inc
jle
in
stos
in
in
xchg
jo
rcrb
and
jno,pn
lret
push
sti
repz
push
inc
mov
jns
push
cli
push
scas
mov
xor
add
repz
fists
and
aad
jo
sbb
pop
test
push
xor
cs
fsubl
bound
push
pop
scas
and
sbb
inc
lcall
fsubl
stc
inc
pop
push
or
xor
jne
lahf
push
mul
shlb
push
pop
or
iret
sbb
add
rcrb
test
cs
or
mov
cli
push
add
cs
sub
xchg
insl
into
and
nop
scas
jmp
push
push
adc
cmp
imul
int3
mov
jg
push
cmp
negb
mov
leave
aam
adc
data16
in
ljmp
scas
inc
lods
push
xchg
rclb
inc
sub
fwait
lahf
testb
cwtd
sub
scas
insb
lods
add
cmp
dec
jg
je
div
int3
inc
cmp
bnd
sub
jb
stc
out
sub
mov
lahf
je
xchg
roll
std
mov
lret
and
out
dec
lds
or
test
arpl
shll
rcrb
sub
out
cs
out
and
push
and
popa
gs
inc
adc
dec
orl
nop
xchg
cmp
dec
ljmp
ret
js
xchg
out
push
pop
xlat
jb
xor
dec
push
das
loope
leave
jp
fisttpll
cmp
fistpl
jg
int
and
lahf
dec
cmp
out
lcall
cmp
pop
cwtl
sahf
lahf
sub
insl
into
cmp
shll
test
push
adc
sbb
adc
outsb
imul
pcmpeqb
lods
adc
cs
mov
hlt
xchg
mov
cmpsb
jne
push
cld
les
push
mov
mov
popf
pop
mov
fldcw
pop
cmp
outsb
std
pop
cmpsl
mov
cmp
pop
movsl
dec
movsb
ljmp
scas
mov
and
xor
or
clc
ljmp
int
pop
fstl
lds
ss
inc
jbe
aaa
inc
js
pop
aas
mov
push
out
ss
and
jp
gs
dec
jo
in
mov
inc
lcall
and
add
fildl
mov
xorl
push
mov
mov
and
sahf
mov
adc
cltd
push
mov
or
cmpsb
adc
fwait
pop
adc
xchg
pop
mov
test
sub
jne
xchg
in
cmp
jno
aam
add
mov
divl
out
mov
imul
or
pop
movsb
xor
iret
movl
pop
jae
repz
lahf
ror
xor
sub
sub
xchg
testb
rclb
mov
shr
inc
int3
jg
pop
das
idivl
fstps
cs
sbb
sbb
ret
sub
je
and
or
mov
mov
bound
neg
jp
addr16
shrb
add
aad
popa
ret
int3
xchg
push
jo
cmpsb
jl
or
adc
in
mov
test
xchg
ret
into
mov
xor
and
aam
ss
push
dec
dec
jo
push
inc
sbb
pop
xlat
inc
out
push
pusha
in
jnp
lcall
push
or
xchg
mov
notb
mov
adc
test
mov
add
mov
xchg
ja
popf
adc
sbb
xor
loopne
pop
mov
inc
mov
ljmp
addr16
jmp
lods
jae
adc
push
jns
pushf
jge
shl
std
cmc
push
add
andl
add
iret
adc
and
jo
adc
enter
push
jnp
adc
sbb
repnz
push
aad
enter
add
aad
cmpsb
xlat
out
mov
les
sbb
andl
push
jb
popa
xchg
aad
cmp
cli
sti
push
sbb
xor
xchg
negb
sub
movsb
inc
loopne
adc
out
repnz
icebp
adc
mov
movsl
int
adc
xchg
push
shlb
add
int
ds
sbb
repz
stc
jl
mov
adc
nop
mov
add
push
orb
cmp
pushf
and
xchg
xchg
xchg
aas
xchg
mov
andb
lret
jns
fwait
aam
adc
or
dec
sub
test
cmc
jmp
sub
xor
scas
sarl
imul
faddl
les
je
dec
mov
pop
adc
or
out
sub
sub
daa
sbb
push
hlt
stos
mov
test
nop
lods
repnz
add
rorb
and
xor
shlb
fwait
xchg
xlat
sbb
aam
and
jge
scas
jbe
jae
push
aas
and
inc
scas
aas
adc
jp
cwtl
in
mov
cmc
sbb
sar
lock
xchg
in
mov
add
dec
shll
outsl
pop
in
pop
test
push
push
inc
or
and
sti
outsl
pop
pop
dec
jo
hlt
add
cli
inc
aad
mov
or
dec
orb
pusha
sbb
push
inc
mov
lds
push
mov
loopne
aaa
cmpsb
es
xor
or
sub
mov
lds
push
push
mov
js
cld
mov
jge
xchg
mov
pop
jmp
jge
inc
movsl
xchg
push
in
cmp
jl
mov
pop
fcmovbe
js
js
xor
jae
clc
inc
std
mov
mov
sbb
cltd
sarl
aas
push
xchg
inc
or
clc
push
sti
add
mov
movsl
in
sarl
js
inc
arpl
cmp
hlt
push
or
mov
pop
sub
mov
scas
or
dec
mov
push
mov
les
filds
pop
fildl
xor
popf
xchg
je
xor
and
dec
aad
mov
lods
mov
sahf
sub
addr16
jae
shlb
pushf
push
adc
icebp
mov
clc
adc
lret
or
iret
rcrl
sub
test
jno
jno
mov
sbb
addl
lds
cmp
mov
sub
cltd
pop
sub
lret
leave
insb
test
fs
lods
cltd
or
jno
cmp
test
or
mov
ljmp
jb
sub
pusha
ret
dec
push
arpl
pop
sti
inc
jns
loopne
int
mov
add
sbb
ljmp
xchg
xchg
fs
or
cmp
mov
leave
pusha
mov
das
cmpb
xor
pop
sahf
addr16
adc
sarl
jg
dec
sarl
cmpsb
inc
dec
xor
xchg
push
adc
bound
inc
movsl
mov
inc
inc
cmp
sahf
mov
insb
xor
hlt
cmpsl
repnz
dec
divl
mov
xchg
inc
cmp
sbb
jb
xor
pop
push
and
push
push
fiaddl
mov
call
mov
pop
jns
fisubrl
xor
xor
mov
xor
es
lods
popa
ljmp
sbbb
xchg
jno
pop
sahf
cltd
aaa
lcall
sub
jbe
push
and
jle
sub
ret
lret
mov
shll
cli
add
sub
bound
sbb
pushf
dec
je
push
mov
mov
jp
les
mov
jbe
addr16
int
mov
mov
movsl
lahf
sbb
outsl
test
icebp
add
jne
adc
ret
cmpsl
cli
add
pop
and
cmp
xchg
push
push
mov
in
subb
dec
in
xchg
fsubrs
je
push
cs
jnp
into
xlat
pop
pop
inc
repz
cmp
mov
pop
cmp
outsl
pushf
push
xorl
xor
call
out
sbb
adc
sub
sub
lock
lcall
xchg
inc
cli
or
mov
xor
mov
dec
cmc
jb
jl
cmpsl
test
xchg
jne
mov
mov
inc
mov
inc
dec
xchg
inc
pop
sub
dec
xchg
das
insb
push
mov
bound
cld
xor
lods
mov
movsl
mov
sbb
jp
out
inc
scas
out
sbb
xchg
int
mov
out
paddw
out
add
mov
xorl
cltd
xchg
cld
xchg
adc
pusha
dec
mov
insb
je
daa
out
frstor
repz
lds
sbb
fucomi
test
in
cs
sub
inc
loop
jp
cltd
fwait
clc
js
pop
dec
ret
aas
push
pop
daa
jnp
cltd
pop
mul
mov
xlat
dec
cmc
out
daa
add
pop
sub
sub
add
mov
hlt
cmp
bound
in
push
cmpsl
add
push
sbb
adc
jecxz
fbld
or
imul
pop
xchg
subb
call
sub
sbb
dec
dec
incl
dec
inc
jp
mov
jmp
or
imul
adc
fidivl
xor
jnp
push
dec
daa
cmp
sbb
cli
insl
fldcw
sbb
jmp
fldenv
and
xchg
adcb
leave
mov
push
cld
in
mov
dec
cmc
sub
cmpsb
in
adc
push
add
aad
in
ret
sub
rcll
push
jbe
lahf
lahf
out
push
mov
inc
inc
push
icebp
jle
push
out
push
inc
roll
pop
mov
ljmp
icebp
adc
mov
sbb
movb
sub
sbb
jecxz
mov
iret
mov
add
push
daa
mov
or
loop
dec
push
push
out
push
insb
mov
filds
pop
fwait
cmpb
es
push
aaa
pop
xor
cltd
fld
cmp
lret
out
xchg
lcall
mov
xchg
mov
and
bound
inc
jb
mov
sbb
push
shlb
xlat
jle
int3
push
cwtl
fimuls
sub
cmp
rcrb
xor
in
xchg
loopne
fistps
bound
dec
adc
fstps
cld
sbb
mov
sbb
test
push
add
adc
pop
repz
mov
mov
mov
daa
popa
sbb
aas
movsb
and
and
mov
mov
ja
ror
push
sarb
cmp
push
sbb
das
cmpsl
data16
scas
or
sbb
jnp
push
push
icebp
mov
push
repnz
sti
jbe
pop
pop
pop
xchg
loopne
dec
jne
lds
sbb
mov
pusha
cli
jle
mov
xchg
adc
jmp
sub
fs
fmulp
lds
jno
mov
cmp
mov
mov
sub
add
mov
push
cltd
test
cwtl
sarl
mov
movsb
subb
dec
push
jae
cmp
mov
mov
test
out
cmc
outsb
jmp
outsb
jbe
add
pop
cltd
xchg
aas
clc
sbb
inc
fcoml
inc
popf
fcoms
cwtl
lret
nopl
xor
mov
jmp
pop
sbb
repz
jecxz
or
fnstsw
xor
leave
std
cmpsl
insl
xor
pop
scas
push
xchg
addr16
pop
scas
mov
add
movsl
mov
hlt
mov
sbb
fwait
add
cmp
mov
in
ret
repz
cld
test
mov
and
pop
jbe
xlat
pop
inc
add
in
int3
mov
subl
and
insl
mov
pop
stc
les
jge
inc
aas
stos
repz
bound
xchg
jno
sub
mov
aam
push
ficomps
popa
push
jbe
cmp
sti
sub
and
data16
or
scas
jle
je
loop
pop
sahf
dec
sub
push
test
sbb
jbe
push
mov
loope
aaa
mov
add
stos
dec
push
popf
notl
movsl
lret
je
ja
in
fdivrl
sbb
outsl
mov
push
stos
xchg
push
out
mov
sub
push
and
nop
leave
adc
and
and
lds
jmp
mov
jae
cmp
inc
lcall
jo
ljmp
in
aas
sbb
orb
mov
xor
pop
ret
ja
pop
dec
jb
les
mov
shll
cltd
mov
sub
lds
pop
ja
cld
lcall
adc
dec
scas
xor
popl
mov
inc
jbe
orb
cmp
out
jmp
shlb
test
inc
sti
jo
popf
je
ja
ds
mov
aas
or
enter
scas
pop
xchg
lods
inc
cld
out
rorl
xchg
mov
and
mov
mov
xor
pop
push
mov
arpl
addr16
xchg
fisubrs
push
std
xchg
aas
hlt
xor
scas
push
jbe
mov
jnp
push
push
inc
rol
and
loope
outsb
jb
addr16
adc
loope
out
test
add
xchg
mov
in
imul
sbb
xchg
test
sbb
inc
popa
pop
sbb
sbb
mov
inc
jae
insb
push
mov
push
movsb
add
inc
sub
cli
fdivrs
int
or
hlt
add
nop
mov
or
adc
lahf
ss
jnp
jp
aas
push
inc
gs
mov
fiaddl
jo
fcompl
and
xchg
decb
pop
push
push
lods
add
or
loop
pop
in
mov
shll
fs
out
aad
fdivp
sub
sub
dec
sub
and
popa
xchg
mov
cmp
add
xchg
gs
outsl
cmpsl
xor
lds
cmpsl
mov
sub
and
jne
adc
aam
cmpsb
push
icebp
subb
or
lahf
jnp
fists
or
push
mov
test
dec
sbb
loope
xchg
sbb
xor
mov
testb
pop
pop
dec
std
sbb
push
sahf
or
in
lcall
mov
subl
jbe
mov
lret
pop
into
jb
bound
in
imulb
dec
push
jle
pop
or
call
and
nop
mov
jp
mov
out
outsb
push
fldt
mov
scas
repz
sbb
mov
repz
xchg
fsts
xchg
mov
push
lret
clc
into
cmpsb
pop
mov
push
adc
fadd
test
push
frstor
test
and
pop
into
shlb
repz
mov
dec
xchg
out
fnstenv
loope
pop
push
ds
xchg
rcrb
arpl
aad
leave
cmp
and
je
push
mov
pop
jne
adc
pushf
les
mov
mov
icebp
in
loopne
sub
nop
xchg
insb
outsl
push
jg
mov
dec
lods
push
push
fwait
adc
nop
mov
push
fcomi
dec
inc
cld
pop
and
fistpll
sub
rolb
lret
push
sarl
sti
fnsave
push
outsl
or
push
neg
data16
mov
cmpsl
dec
enter
push
or
js
pop
sahf
mov
cmp
in
pop
jnp
fs
lds
pop
out
pop
ds
out
xchg
and
clc
and
cmp
lahf
dec
mov
dec
sbb
sub
push
dec
divl
push
push
nop
imul
cmp
stos
mov
and
jnp
hlt
jmp
outsb
inc
cld
leave
pop
adc
iret
push
rcrl
stc
dec
sbb
addl
loopw
pop
call
sar
into
jmp
leave
fisubrl
cmpsl
std
xchg
push
fsubs
vmwrite
int
cwtl
push
inc
mov
xchg
imul
xor
mov
andb
xlat
roll
hlt
out
hlt
lcall
lds
pusha
mov
in
sahf
dec
imul
push
inc
pop
icebp
sub
stc
je
aas
add
nop
mov
out
in
and
push
pushf
jle
das
sub
ljmp
cltd
movb
lret
mov
daa
mov
jae
in
stos
or
sarl
pop
cmpsl
lret
repz
bsf
into
mov
jbe
mov
test
mov
stc
pusha
in
inc
xor
mov
jmp
nop
or
dec
or
mov
adc
loopne
mov
jp
inc
je
das
insl
inc
ret
lahf
cmp
xchg
lods
sbb
adc
out
xchg
inc
xchg
jg
cwtl
ja
xchg
add
push
aam
lret
xor
jg
jno
movsl
mov
loopne
sbb
mov
rolb
sub
aam
inc
or
mov
xchg
inc
sbb
xchg
mov
fnsetpm(287
jae
sub
into
bswap
popf
div
inc
aas
add
pop
push
push
mov
dec
enter
inc
loopne
sbb
pop
xor
inc
scas
xchg
js
mov
aam
sbb
lahf
popf
push
mov
je
sbb
cmc
mov
dec
scas
adc
adc
addr16
and
pop
lcall
imul
pop
lock
or
mov
pop
jg
push
pop
push
mov
outsb
sub
imul
cmpsl
aam
popa
popl
pop
fbld
sti
mov
outsb
mov
lcall
jg
movsb
jge
xchg
dec
aas
or
jbe
pop
and
add
pop
popa
dec
pop
ret
jmp
mov
je
add
cltd
daa
or
mov
in
xchg
arpl
sahf
jmp
push
orb
shl
test
fdivl
rcrl
in
mov
xchg
mov
add
cmpsb
xor
aam
xor
inc
cli
mov
jne
push
and
loop
mov
adc
cli
movsl
jmp
mov
shlb
aad
lods
push
or
mov
sub
dec
decl
sbb
icebp
and
jno
xor
cli
aad
imul
sub
leave
je
adc
test
fsubrl
mov
mov
fwait
push
shrb
les
adc
sarl
int3
mov
and
sbb
sbbb
imul
pop
jnp
or
xchg
fwait
and
push
insb
inc
ss
cs
pop
lret
push
lahf
stos
scas
call
xchg
or
xchg
sub
insb
jnp
jle
inc
imul
imul
inc
movsb
mov
mov
movsl
xchg
push
enter
adc
and
xchg
loopne
aas
mov
test
rcll
sbb
sbb
jno
subl
mov
or
in
xor
sub
arpl
mov
test
lds
push
leave
jno
in
xchg
arpl
sar
cmp
leave
pusha
fs
call
test
outsb
xor
add
inc
jb
roll
xchg
imul
aaa
push
inc
or
stc
cmp
imul
sbbl
test
lcall
bound
mov
fwait
sbb
rcll
adc
into
jl
mov
test
cli
jnp
movsb
push
mov
popa
add
scas
lcall
adc
jb
aaa
jl
xor
lods
mov
sub
cmpsl
add
xor
sub
in
pop
out
fwait
rclb
inc
and
mov
pop
mov
mov
shll
test
xor
inc
mov
stc
insl
pop
mov
orl
aad
inc
leave
or
imul
mov
mov
es
mov
mov
sbb
add
jl
jae
xor
dec
mov
add
cmpsl
mov
loop
inc
xchg
cld
cs
inc
dec
insl
dec
xchg
pop
dec
mov
outsb
jbe
pop
inc
repnz
lods
loope
loopne
fsub
inc
ret
sbb
cld
lcall
xor
adc
xor
jo
dec
es
jle
cmp
popa
push
std
test
repz
mov
sbb
scas
jmp
xor
ja
xor
cmp
cmovge
test
lret
pusha
fs
xor
xchg
setge
mov
aad
adc
scas
repnz
dec
dec
daa
call
pop
decl
ret
inc
shll
pop
aad
mov
push
pop
je
xor
pop
jl
sbb
fisttps
mov
jmp
movb
test
icebp
xchg
cmp
pop
arpl
push
sahf
test
dec
cli
push
push
insb
or
aad
mov
pop
pop
mov
fnsave
call
ja
inc
aad
es
and
or
lahf
icebp
inc
rol
out
sbb
ds
inc
mov
inc
leave
push
out
std
adc
push
adcb
jg
lds
fcomps
incl
shll
cmpl
push
xchg
adc
rcrb
test
sti
inc
push
nop
dec
xor
int3
jbe
inc
lret
insb
mov
arpl
mov
sbb
ljmp
xlat
inc
and
or
mov
iret
test
jg
int3
push
lret
xchg
jbe
adc
and
shll
and
adc
dec
push
sub
insb
pop
jbe
mov
mov
and
sub
jae
mov
aas
into
call
imul
cs
fcomps
testl
push
add
xlat
mov
popa
push
hlt
jo
push
leave
rcrb
imul
mov
and
dec
jl
cmp
ret
outsb
mov
ret
je
lret
push
jecxz
mov
mov
test
xchg
add
or
lods
xchg
add
mov
pusha
adc
push
sbb
cmpl
sbb
pop
push
xor
xlat
mov
push
mov
ljmp
lea
mov
xchg
mov
inc
data16
sbb
push
int3
pop
push
popa
or
sti
xchg
ja
adc
lret
or
add
sbbb
fsubrs
push
imul
subl
aam
sub
add
imul
xchg
mov
movl
mov
loop
jp
fnstsw
mov
or
xor
pop
or
inc
sbb
inc
cmp
rolb
insb
mov
cld
adc
add
xchg
icebp
pop
mov
push
inc
push
xor
pop
cltd
jne
call
and
xchg
jp
sub
mov
xor
or
xrelease
jo
sbb
rol
add
pop
addr16
dec
sbb
mov
jmp
jne,pn
xor
sbb
std
pop
testl
aad
and
lcall
cmp
mov
cmp
adc
clc
sbb
mov
fsubl
out
dec
add
xlat
push
sahf
or
hlt
shl
push
lahf
out
mov
pop
and
push
and
jne
jbe
xchg
push
dec
mov
call
fdivl
sub
ret
mov
fwait
xor
mov
and
push
xchg
jg
jae
push
xchg
pop
lods
xchg
fs
imul
iret
leave
pop
push
dec
add
ret
cmpsl
xlat
dec
cmp
xchg
pop
xchg
mov
fwait
sbb
lods
dec
push
aad
int3
jbe
call
xor
das
adc
xor
in
js
adc
mov
add
sub
loope
sti
mov
push
sarb
fnsave
aas
jmp
mov
inc
dec
cmpsl
jns
and
fcmovnu
mov
rorl
sbb
mov
insl
fistpl
gs
arpl
xchg
popa
and
cwtl
outsl
insl
stos
lcall
push
cli
loopne
mov
push
shll
push
inc
fwait
imul
lods
mov
movsb
inc
popa
jle
xchg
subl
pop
into
push
imul
xor
adc
loopne
call
dec
loopne
xor
mov
js
pop
sbb
fsubrl
mov
insl
std
and
cmc
leave
xchg
insb
cmpsl
sar
jo
test
mov
mov
xchg
fcomps
ret
mov
mov
cmp
scas
jge
es
mov
pop
pop
loop
mov
cmpsb
or
insl
add
sub
xchg
scas
out
es
xor
xor
aaa
call
or
push
xchg
mov
lret
inc
insl
xor
aam
fsubrp
lret
lahf
cs
repnz
mov
scas
mov
adc
inc
adc
sahf
stc
loop
movb
add
aas
imul
mov
in
jne
mov
sbb
movl
stos
loopne
test
mov
or
mov
mov
std
or
mov
cmpsl
stc
cmp
lock
dec
sub
adc
stc
jo
mov
scas
and
sub
mov
xchg
cli
cmp
hlt
and
cmpsb
in
fmuls
push
in
popa
pop
xchg
xor
pop
sti
stc
xchg
es
addr16
mov
lahf
mov
or
rcl
js
xchg
js
pusha
dec
and
push
or
inc
and
out
adc
popf
lret
inc
jge
fistpl
scas
scas
cmp
sub
scas
mov
pop
jmp
les
mov
arpl
loope
pop
ljmp
cmpsl
mov
push
ljmp
or
sub
popf
fstpl
xchg
dec
and
mov
jle
in
enter
and
mov
es
push
notl
push
jno
aam
xchg
or
dec
xchg
aad
jb
jmp
dec
sub
ljmp
inc
and
cmp
dec
dec
inc
inc
mov
sbb
push
aad
mov
hlt
mov
jg
dec
adc
push
mov
adc
sbb
jmp
sbb
cmp
fwait
pop
repnz
sub
mov
sbb
xchg
xchg
fisttps
in
cltd
sahf
sbb
lret
lret
movb
stos
insl
or
mov
jle
mov
fisttps
es
ljmp
push
mov
test
push
fsubrs
pop
mov
mov
cmpsl
jle
mov
dec
lret
cmp
sub
inc
std
mov
mov
dec
mov
mov
inc
les
imul
fs
das
sub
outsb
push
sbb
rol
nop
add
mov
out
imul
mov
insb
cli
ja
jae
xchg
fildll
call
xor
push
mul
inc
sub
subl
popa
mov
add
fisubrl
in
sbb
mov
cltd
inc
mov
and
adc
dec
ret
shrb
xchg
sbb
fidivs
jo
rorl
insl
jle
mov
testl
mov
pop
rorb
lock
das
out
add
test
int3
add
mov
call
int
inc
popa
mov
sub
pop
decl
clc
pop
outsl
icebp
inc
push
xchg
pop
movsl
and
insb
or
lods
loop
addl
mov
mov
popf
or
or
push
popf
push
popf
xor
insl
sub
push
lcall
jle
jle
data16
xchg
ret
arpl
fwait
je
xor
vmovshdup
jp
int3
xchg
divb
push
push
ljmp
jp
adc
ja
mov
xchg
lahf
repz
inc
inc
imul
sbb
sub
hlt
adc
jbe
test
fucomip
inc
andl
push
icebp
and
pop
sub
data16
xor
push
pop
and
and
xchg
cmp
popa
outsb
sti
maskmovq
idivl
dec
push
xchg
inc
xor
repnz
jmp
cmp
mov
or
sbb
adc
jb
addb
insl
jmp
aad
xchg
jge
jg
and
sub
xchg
insb
insl
pusha
jo
icebp
push
int
daa
repnz
adc
pop
dec
push
adc
dec
imul
add
ss
add
xor
cmp
jl
add
in
in
stos
pusha
dec
jmp
outsl
pusha
repnz
aad
xchg
enter
jmp
arpl
pop
popa
aam
inc
inc
dec
test
xchg
xchg
xor
test
push
aaa
sub
les
cmp
dec
dec
dec
repnz
jge
mov
jp
pop
sub
jb
cmpsl
mov
xor
lock
into
mov
adc
pop
sbb
mov
cmp
lock
jb
jae
mov
jmp
adc
and
add
pop
leave
cltd
inc
stos
push
xor
dec
shlb
in
in
ds
sub
popf
mov
cmp
inc
lcall
js
mov
scas
fnstenv
loope
je
pop
aam
lcall
jp
scas
jl
mov
aaa
pop
jo
mov
repnz
sub
or
movsl
mov
xchg
pop
sbb
cmp
inc
aas
jge
enter
xchg
scas
add
js
fidivs
scas
mov
addb
xor
or
jle
mov
cmp
push
out
push
xchg
fstpl
xchg
and
test
out
mov
jge
xor
rcrl
cmpb
mov
inc
iret
mov
testl
sysenter
xor
sbb
int
push
sarl
xchg
xor
dec
jmp
mov
cmpsl
or
scas
lds
fstpl
mov
sub
jmp
push
pop
gs
push
icebp
stos
cmpsl
push
dec
nop
out
popa
das
loopne
mov
xchg
pop
js
scas
sbb
pusha
pop
pushf
fs
lret
mov
addr16
leave
pop
jno
ja
mov
cmpb
ja
push
xchg
or
or
dec
or
nop
lock
jno
sti
add
push
cmp
notl
data16
test
jo
sub
scas
mov
mov
and
ret
js
xchg
push
cli
cmp
cmp
popf
lret
cmpsl
cld
aas
in
mov
xchg
sbb
scas
mov
sub
dec
cltd
std
int3
fwait
xor
cld
pop
pop
dec
test
out
mov
jp
xchg
fwait
out
cmp
adc
lahf
mov
jge
jnp
enter
sbb
xor
lea
inc
dec
popf
mov
push
loopne
jmp
xchg
imul
fsubrs
gs
sbb
adc
cmp
adc
cmp
xor
and
fucomp
sbb
in
mov
xchg
das
daa
in
push
gs
jl
repz
shrl
test
sub
fwait
mov
sahf
sub
enter
int
loope
add
test
in
das
jne
add
cmc
idivl
addr16
cmp
mov
sbb
sarb
mov
ljmp
out
into
lret
cmpb
and
mov
fsubl
mov
dec
out
mov
mov
jae
std
jne
movsb
les
cli
mov
ds
mov
insl
adc
cli
cmp
sbb
cltd
cmp
or
push
xor
ljmp
movsl
sti
out
sub
push
stos
inc
andl
mov
sti
dec
pop
inc
and
add
dec
ljmp
mov
popl
in
test
pusha
add
daa
mov
xchg
cmpsb
repz
sbb
cmp
adc
ja
cwtl
sbb
push
or
pop
inc
fstl
lret
cmp
scas
shrb
mov
dec
mov
pop
cltd
out
std
ds
or
mov
or
sub
push
adc
adc
clc
jp
add
inc
pop
ret
adc
inc
in
and
cltd
dec
insb
push
adc
sub
dec
sub
push
and
add
adc
jbe
mov
gs
sti
pop
pushf
dec
data16
adc
mov
mov
xor
into
and
loopne
imul
hlt
mov
lret
add
loopne
test
and
int
outsb
in
inc
dec
add
int3
pop
cmp
pop
sbb
inc
xchg
lcall
pop
stos
adc
cltd
mov
lret
sbb
cmp
push
pushf
sti
lods
mov
out
repz
lods
jns
mov
add
fiaddl
pop
sub
cmp
lret
shll
jno
loopne
loopne
icebp
dec
push
mov
je
sbb
insb
movsb
sbb
jns
jmp
dec
icebp
sbb
and
insl
lock
mov
cmp
inc
jg
xchg
in
popa
pop
sahf
js
mov
repz
and
xor
sbbl
mov
rorl
cmp
pop
loop
sbb
or
xor
mov
scas
xchg
mov
lods
xchg
jmp
gs
mov
sub
in
and
cld
lea
fsubrs
ficompl
lret
or
and
rorb
enter
mov
mov
xor
enter
push
addl
aaa
sbb
fcompp
inc
xor
sub
addr16
adc
cmp
rorl
lcall
push
jl
imul
sbb
push
je
lret
notb
sub
leave
lcall
sbb
sub
push
int3
fildll
push
xor
cmpsb
inc
cmpb
fidivl
mov
rep
dec
push
sbb
icebp
inc
sbb
dec
or
push
je
mov
in
sbb
aad
pop
mov
roll
xchg
mov
add
in
mov
or
dec
jns
loope
sbb
gs
cli
popf
inc
xchg
mov
mov
cmc
loop
sbb
inc
push
rorl
mov
ljmp
sub
xchg
pop
out
jle
or
jno
dec
push
mov
js
mov
cli
mov
roll
dec
fisubs
bound
lods
outsb
push
or
stc
ja
mov
ret
in
insl
jge
repnz
hlt
push
jl
cmpsb
push
fistl
inc
imul
hlt
add
add
pop
mov
cmp
dec
in
bound
and
pushf
cmc
emms
shlb
ffree
sbb
fists
xor
sub
jecxz
test
fs
sub
fstps
aas
add
leave
aad
mov
pop
lock
aad
xor
sub
fcmovbe
sub
dec
into
lods
pop
mov
jl
repnz
push
mov
push
pop
fidivrs
dec
js
jle
mov
push
fmull
push
and
add
and
mov
lret
inc
jle
push
lret
and
inc
enter
jmp
out
loopne
fnstsw
cmp
push
leave
imul
add
lahf
lock
jl,pt
dec
fwait
shlb
dec
xor
xchg
sahf
adc
xor
inc
dec
or
adc
cmp
mov
cs
sti
inc
sbb
sub
mov
push
test
leave
jns
mov
in
jb
insb
mov
scas
xlat
idiv
push
cmp
inc
mov
adc
add
daa
pop
fucom
sbb
rcrb
ljmp
xchg
xchg
repz
movsl
mov
jnp
and
jbe
mov
sub
sub
cld
sub
stos
lahf
call
mov
in
and
jae
and
xlat
mov
out
add
ucomiss
push
jo
mov
lods
dec
jmp
ret
daa
sbb
xor
mov
pop
ret
add
cmpsl
mov
addr16
popf
lcall
les
pop
push
repz
dec
into
insl
xor
mov
repnz
imulb
mov
fstp
aam
cwtl
or
int3
and
in
pushf
sbb
dec
cwtl
pop
dec
inc
stos
sbb
int
fsub
ror
push
into
xor
mov
test
xor
jp
xor
imul
outsl
sti
push
nop
mov
sub
fstpt
enter
add
lcall
lock
test
pop
pop
int
mov
inc
or
dec
mov
mov
inc
adc
aaa
movsl
pop
push
add
mov
lods
jecxz
pop
cs
add
mov
mov
xchg
cld
out
sarb
mov
pop
mov
lret
idivl
loopne
movsl
shrl
pop
nop
into
mov
push
dec
pop
stc
jg
mov
mov
fdiv
fsubrp
pop
and
repnz
xor
pop
mov
hlt
adc
pop
out
xchg
inc
rcrb
stc
lea
rcll
pop
add
setns
loope
xor
cmc
sbb
sbbb
adc
cld
inc
xchg
ss
pusha
pop
mov
test
mov
dec
sahf
adc
lods
lret
cltd
inc
cmpl
and
js
sbb
addb
adc
cltd
xchg
mov
addr16
xchg
sub
outsb
add
aad
mov
jp
xchg
push
pop
mov
xchg
in
popa
mov
imul
dec
cs
jmp
sbb
inc
jmp
mov
and
xchg
cmp
push
hlt
dec
mov
out
adc
les
and
xchg
xchg
icebp
cli
pusha
cli
into
fwait
stc
daa
and
or
les
test
lret
arpl
and
push
data16
push
xchg
loopne
mov
mov
mov
adc
test
sub
aad
inc
into
push
adc
les
inc
sub
mov
and
cmpsb
scas
mov
mov
mov
xor
pop
sbb
hlt
lock
inc
push
mov
mov
fcompl
jmp
scas
sbb
xor
pushf
mov
stos
sub
aaa
out
xchg
je
sub
mov
mov
cld
pop
xor
out
or
jl
pop
stos
cmp
xchg
movsb
adc
mov
test
insb
sub
sbb
rclb
ret
call
scas
xor
lods
fldcw
add
jle
outsb
mov
scas
adc
stc
mov
inc
dec
fwait
sub
shlb
insb
jno
cld
mov
push
mov
dec
mov
mov
mov
inc
cmp
inc
mov
bound
in
sub
int
mov
xchg
data16
call
out
loop
cmp
cltd
adc
pop
jb
imulw
rcrl
or
sub
shrl
mov
dec
mov
insb
scas
add
fnstsw
sar
mov
mov
test
pop
insb
stos
add
inc
push
push
aas
mov
pusha
mov
outsl
inc
ret
xchg
mov
clc
xor
jae
jb
adcb
addr16
cmpsb
mov
stos
sub
mov
fidivrl
repz
xor
test
fs
scas
shll
out
sbb
lret
icebp
add
sbb
leave
jne
mov
jns
test
test
std
out
jae
push
jl
adc
jnp
cmpsb
and
std
int3
push
test
addr16
ret
and
scas
and
fwait
jp
fidivl
in
icebp
sub
aas
lods
fmul
dec
ds
mov
push
adc
jmp
lods
stos
cli
ss
outsl
fbld
mov
jns
cli
mov
loop
fisubl
pop
aas
push
or
sbb
test
dec
stc
inc
insl
sbb
dec
aad
sub
adc
hlt
pop
rcrb
addb
jg
fdivs
fwait
stc
dec
dec
mov
addr16
xlat
mov
fs
int
push
aas
les
or
jecxz
push
nop
dec
mov
push
mov
mov
mov
jnp
pop
pusha
rcl
lahf
pop
adc
inc
lea
adc
int
lret
or
lock
mov
mov
int3
popa
sbb
repnz
insl
dec
or
pop
and
mov
cmp
stos
pop
daa
clc
repnz
lret
cmc
js
and
js
mov
cmp
mov
xor
mov
jecxz
daa
adc
mov
add
fidivl
lret
adc
sub
push
dec
pop
push
mov
fnstenv
imul
clc
push
call
push
clc
and
mov
pusha
and
fimull
fmull
sbb
lret
or
les
jp
stc
inc
add
push
add
and
jae
push
lea
insb
mov
xchg
pop
in
inc
xlat
xchg
jmp
sub
mov
dec
cmpsb
mov
rol
push
imul
in
adc
loope
std
push
leave
in
inc
fidivrl
push
sbb
inc
push
adc
les
repnz
push
or
inc
rorl
ret
into
push
test
sbb
ja
lods
xchg
adc
or
adc
aaa
xor
sub
xor
pusha
push
in
mov
loopne
cmp
mulb
sub
inc
rcr
jg
push
jmp
scas
pop
mov
test
dec
dec
out
sbb
lock
cmp
clc
push
andl
daa
adc
mov
pop
cld
daa
pop
aas
bound
inc
jns
lods
jmp
popa
add
repz
jbe
push
and
push
pop
mov
leave
lock
hlt
leave
in
add
inc
mov
lds
mov
sub
data16
mov
shlb
les
xchg
dec
lret
push
pop
jmp
push
repz
mov
push
jnp
ret
push
adc
sahf
popa
stc
clc
inc
fidivrs
xor
cltd
mulb
pop
push
dec
fnstenv
xlat
lock
idiv
stc
or
cs
stc
mov
jno
add
sbb
push
mov
push
xchg
jne
int3
push
push
iret
push
mov
por
pop
sbb
subb
aad
sub
int3
push
imul
inc
xor
push
dec
adc
mov
stos
jnp
jp
push
pop
cli
das
popf
jns
cltd
fbstp
cmp
fwait
add
mov
adc
fstpt
loopne
jge
in
pop
pop
xchg
pop
sub
xlat
or
add
mov
ret
lea
push
jl
nop
jae
push
push
mov
into
ds
cld
mov
mov
nop
xchg
fistpl
sbb
sti
enter
enter
lret
lret
ja
sub
outsl
in
mov
jae
movsl
and
fwait
xor
int
das
inc
rclb
subb
inc
adc
dec
cmp
jnp
lret
mov
imul
cmc
in
add
bnd
in
sbb
pop
das
into
jnp
jmp
jnp
and
es
fst
push
mov
pop
and
adc
imul
add
cwtl
mov
loop
push
repz
test
mov
mov
push
adc
lahf
lds
lea
dec
cmovg
inc
insb
rcrl
scas
mov
outsl
sbb
in
inc
movsb
shll
mov
pop
add
mov
sub
push
cmpsb
ja
mov
jns
push
jnp
jg
push
dec
push
mov
das
testb
data16
mov
cli
mov
sbbb
les
jle
add
stos
inc
and
mov
and
push
in
dec
cmp
inc
xchg
add
mov
repz
mov
mov
roll
cmpb
xchg
fildl
xor
mov
pop
out
jbe
pop
arpl
addr16
je
push
int3
xchg
push
in
mov
lea
aam
jbe
mov
cmpsl
lea
shr
xcrypt-cfb
cmpsl
es
or
xor
or
imul
push
inc
xor
pop
sub
cmp
push
dec
jns
sub
lret
inc
mov
push
add
mov
outsl
or
pushf
dec
loop
jbe
mov
sub
fcomps
sub
in
test
fisttpll
sub
cmp
shll
jb
nop
shrb
out
lods
stos
fdiv
jo
lea
js
cmc
xor
xchg
jne
scas
insb
out
pop
mov
mov
or
dec
je
sub
inc
sub
xchg
test
sub
je
cmp
sub
sub
cwtl
mov
inc
rorb
aad
jmp
pusha
mov
out
add
cmp
inc
mov
xchg
mov
repz
aaa
in
adc
cli
xchg
mov
fdivl
addb
pop
fdivs
xchg
arpl
fnsave
adc
sub
fbstp
cmp
adc
mov
outsl
ss
sub
add
or
and
add
test
out
or
add
push
mov
mov
push
dec
or
sub
stos
js
mov
mov
sbb
mov
xchg
pop
mov
shll
cmc
mov
xor
imul
cmp
popa
popa
inc
dec
pop
dec
imul
mov
pop
xchg
js
push
xor
jb
fldt
fmulp
test
mov
push
icebp
inc
xor
sub
bound
lea
sbb
aas
xchg
inc
sti
jno
in
push
movsl
adc
cltd
hlt
cmp
pop
sbbb
mov
insl
aaa
bound
mov
sub
adc
arpl
mov
std
xor
mov
cmpsl
jbe
inc
in
adcb
or
pushf
cwtl
mov
cmp
out
clc
jb
xchg
lods
pop
xchg
xchg
fbld
add
pop
mov
mov
or
sbb
mov
add
and
mov
mov
fildll
push
cmp
adc
movsb
push
iret
nop
adc
popf
fs
es
xchg
inc
test
pop
dec
aaa
test
sub
xchg
idiv
pop
push
cwtl
adc
mov
mov
out
mov
fistps
or
and
cmp
and
sbb
jns
cmp
xor
fstpl
aad
sbb
dec
sub
push
dec
push
sti
movsb
push
imul
mov
jle
out
cmpl
scas
jb
arpl
jmp
in
loopne
icebp
test
jb
aaa
rol
int3
insl
sub
mov
push
nop
or
in
sbb
mov
mov
jbe
pop
hlt
push
out
push
dec
lds
dec
xor
fwait
add
movsl
mov
xchg
pop
sbb
fimull
pop
inc
mov
out
sahf
pop
jmp
dec
adc
ret
jne
xchg
or
popa
xor
ljmp
or
mov
jp
clc
cmp
pop
data16
pop
insl
sbb
adc
jmp
mov
popa
dec
inc
push
icebp
and
jle
cmc
in
and
xor
sti
cmpsl
hlt
mov
sub
push
dec
cmpb
test
mov
xchg
js
mov
lahf
sbb
dec
rorb
es
and
popl
mov
jmp
out
es
mov
rcl
aam
sub
subl
pop
jmp
jmp
push
push
in
inc
rcrb
addb
jae
repnz
pusha
jp
es
lahf
fwait
cmp
or
je
sbb
sub
sub
push
sti
nopl
cwtl
cmp
dec
leave
jne
loope,pt
push
fdivrs
sbb
inc
lea
mov
ja
test
mov
push
dec
jle
or
cs
mov
loopne
arpl
add
out
mov
xchg
fcoms
cmp
stos
jl
shll
fistpll
and
mov
popa
daa
and
call
adc
mov
pop
xor
pop
aam
or
push
inc
lret
or
mov
imul
push
lret
repnz
push
mov
mov
test
push
ljmp
mov
mov
arpl
and
lret
mov
fidivs
mov
push
cmp
pusha
mov
sub
outsb
sub
js
dec
cs
dec
bound
sbb
add
mov
out
out
mov
mov
sbb
stos
inc
fnstsw
mov
mov
cmc
in
repnz
lea
or
push
pop
lea
aas
xlat
ficoms
push
and
jnp
inc
mov
sbb
pop
imul
pushf
push
jnp
lret
fists
call
mov
lods
xchg
cmp
adcb
loop
push
cld
sub
mov
jno
imul
divl
lods
xor
xor
pop
cmp
add
int3
xchg
movsb
je
mov
push
cvtdq2ps
sub
cld
ss
mov
mov
loope
fsub
stos
stc
jg
dec
pop
xchg
ret
rclb
pushf
add
test
ret
in
aam
or
cmp
sub
xchg
xchg
mov
test
xor
shrb
lods
outsl
and
dec
inc
bound
gs
out
push
lret
add
les
test
in
xor
lret
inc
repz
shrb
jmp
js
les
pop
cmp
fstps
mov
sbb
mov
mov
lret
nop
cld
jp
jg
cmp
das
lret
movsl
popf
jecxz
mov
imul
push
dec
rorb
sbb
push
lods
or
sub
lcall
add
outsb
lods
add
cmp
jb
push
dec
repz
fidivs
in
pop
adc
dec
orl
sahf
stos
jle
xchg
lret
shrb
mov
jne
mov
xlat
mov
and
sub
jns
sbb
jmp
xlat
in
mov
mov
ljmp
test
es
movsb
popf
mov
jne
xor
fdivrs
inc
jle
test
shl
aaa
jo
aas
inc
push
shrl
add
xor
and
fcmovnu
jns
xor
and
jno
mov
test
pop
push
in
xchg
push
adc
dec
mov
pusha
push
fisubs
mov
nop
popa
mov
jmp
aad
fisubl
cmp
push
or
pop
aam
dec
add
xor
lret
push
lret
sub
test
xchg
aas
pop
xchg
sar
add
mov
sbb
fsts
mov
shl
sub
es
in
data16
fs
adc
lds
outsl
xor
in
push
call
lea
dec
sahf
cld
imul
mov
fs
subl
sbb
imul
jnp
stc
pushf
pop
xchg
aas
mov
push
mov
stc
inc
mov
ret
dec
dec
xchg
popa
mov
adc
inc
and
inc
jle
gs
cmp
icebp
movsl
js
xchg
aas
mov
mov
xchg
inc
mov
push
fsubs
dec
int3
xor
aad
mov
iret
sub
je
pop
dec
loope
stos
fpatan
addb
fldenv
xchg
in
out
ja
push
pop
icebp
jbe
clc
scas
cmp
dec
loopne
xchg
add
adc
sbb
add
jmp
popf
pushf
aaa
stos
aas
sbb
je
popa
test
jge
or
stos
adc
xchg
or
ret
leave
or
movsl
lods
xlat
inc
sbb
stos
push
popa
mov
or
rclb
sub
push
bsr
lea
mov
pop
xor
adc
sub
or
sbb
jmp
mov
add
popf
aam
ja
andb
push
add
fcmovb
in
jmp
addr16
lods
repnz
inc
sub
mov
cmp
adc
cld
dec
and
outsl
inc
outsb
adc
ret
in
xchg
and
nop
or
jb
and
bound
pop
xor
addr16
mov
pop
aam
testb
ljmp
nop
xorl
movsl
mov
js
push
sbb
mov
dec
dec
ret
or
inc
mov
repnz
jns
sub
jbe
inc
fadds
stos
dec
out
jo
mov
xor
aas
and
notl
or
inc
push
jp
mov
icebp
cmc
imul
and
in
sahf
leave
pop
jle
je
and
mov
shll
ret
shr
addr16
cmpsb
lret
lods
mov
scas
jecxz
icebp
sub
jle
pop
adc
mov
sbb
push
push
jo
dec
push
orl
sbb
jne
mov
loopne
pop
lods
sbb
sub
mov
nop
fstp
lahf
mov
std
mov
sub
push
lods
jne
inc
shl
mov
imul
sahf
add
arpl
xchg
add
sbb
pop
jle
dec
jmp
xchg
rcrl
test
into
push
stc
addr16
inc
pop
shll
jb
push
lods
cli
addl
cmp
ljmp
jp
mov
push
jecxz
sub
xor
insb
pop
lahf
and
decl
inc
xchg
js
adc
pop
mov
sbb
xchg
adc
insb
mov
imulb
adc
xchg
jns
lret
das
rorb
and
in
movsl
int
mov
ja
test
jno
fstl
sbb
cs
ffreep
ja
xchg
imul
in
or
fidivrs
sub
loop
into
sbb
mov
jnp
adc
jne
pop
lahf
cmp
pop
jb
data16
fiadds
inc
enter
inc
pop
adcb
out
mov
lods
stos
mov
scas
inc
xchg
mov
adc
pop
jge
nop
sub
xchg
mov
repnz
push
inc
lock
xchg
rorb
movsl
je
pop
ret
jg
lds
shrl
lret
cmp
and
sbb
adc
xchg
add
or
mov
outsl
pop
movhps
popf
pusha
inc
jae
inc
shl
in
jecxz
iret
sub
lahf
or
jg
and
mov
dec
leave
int3
xchg
inc
rcll
scas
push
xchg
mov
aas
rorl
xor
test
jp
lock
cmpsl
cmp
mov
xchg
out
push
jmp
movsl
ds
pop
test
divl
lea
mov
loope
sbb
push
mov
fldt
xchg
inc
xor
push
das
pop
je
push
sub
fs
xor
jp
sub
jle
fistpll
and
fmuls
mov
xchg
lds
insl
hlt
and
jo
jp
adc
xchg
faddl
cli
cld
shll
push
and
or
repz
dec
mov
hlt
mov
mov
mov
push
lcall
pop
imul
cli
push
sub
sarb
jmp
testb
std
aad
mov
lret
inc
inc
push
fs
pop
jecxz
lock
jo
pop
outsl
mov
inc
pop
push
test
enter
push
mov
mov
test
scas
arpl
mov
add
pop
sbb
rcr
mov
out
fisttps
add
lods
inc
or
das
in
and
jno
push
or
insb
inc
jmp
lahf
into
nop
insb
fcmovne
dec
xchg
dec
call
xchg
popa
icebp
add
and
push
fsts
ret
fcomps
in
lock
sub
in
std
sbb
mov
icebp
push
cmpsb
cmp
xor
popf
in
loop
add
dec
and
jae
in
ficomps
decb
imul
dec
mov
into
adc
xchg
loop
pop
stc
fildll
push
shlb
xor
mov
lea
and
inc
mov
adc
xor
push
ja
and
rclb
adc
popf
and
sub
cmpb
outsl
push
stos
xchg
cmp
pop
push
fcom
jg
int3
ss
pushf
dec
cmp
dec
addr16
testl
cmpsb
add
jne
jg
daa
outsb
xchg
pop
xchg
outsb
popa
pop
loop
cmpsb
jbe
dec
stc
out
and
sbb
adc
push
lods
jl
pmulhuw
or
xor
test
loop
push
sti
or
in
xchg
stos
mov
mov
icebp
xchg
stos
ret
dec
inc
dec
push
cmp
jg
lods
pop
imul
fcoms
mov
sub
pusha
in
lret
popa
or
pop
push
push
xor
pop
imul
lea
enter
rorl
dec
testb
xchg
sbb
loop
adcb
imulb
cld
inc
pop
test
mov
das
loop
adc
fistpl
sub
fdivrp
pop
or
xor
xchg
and
add
imul
xlat
sub
lock
push
push
pop
mov
or
int3
inc
mov
add
inc
iret
mov
in
push
movsl
insl
lods
mov
orb
outsb
rcr
les
adc
jae
mov
clc
out
sub
lea
jns
fsts
or
popa
scas
mov
aas
push
sahf
jle
iret
sub
out
mov
dec
push
lea
sub
push
inc
and
aad
jmp
jns
adc
call
hlt
andl
ds
push
stos
push
icebp
xor
dec
push
jmp
push
and
jb
pop
xor
xchg
aas
mov
out
cmc
add
and
je
push
std
mov
ret
inc
sbb
pop
clc
inc
icebp
out
das
mov
cmp
aaa
aaa
cmc
stc
movsb
clc
push
popa
aaa
xchg
pop
xchg
adc
in
arpl
clc
cltd
jo
mov
ja
cmp
pusha
gs
enter
dec
mov
sbb
xchg
mov
popa
jle
cmp
test
call
insl
lret
push
lds
and
popf
bound
inc
stos
xchg
push
cltd
negb
push
xchg
mov
fcoml
or
add
sbb
jns
or
roll
cld
lods
cmpsl
arpl
adc
divb
ss
bound
inc
mov
inc
pop
jae
push
push
les
dec
ljmp
dec
push
sub
dec
mov
add
or
pop
fst
repnz
das
fstpl
cmp
mov
repnz
insb
pushl
sbb
test
add
mov
or
jle
jno
movsl
inc
sbb
jecxz
dec
jl
pop
or
jo
push
ret
in
jmp
rcrb
xchg
sbb
imul
fnstenv
lahf
iret
lret
in
ds
push
jae
fidivl
insl
inc
data16
les
test
cmc
andb
push
xchg
pop
rep
in
add
sbb
lods
pushl
lods
and
lock
sbb
jno
sbb
sub
mov
gs
cmc
mov
sti
pop
xchg
push
fcompl
xor
arpl
aaa
pusha
sub
mov
and
pop
clc
sub
inc
testb
insl
or
ret
or
fwait
adc
sub
mov
fbstp
xlat
sub
stos
mov
lods
les
int
jge
fldt
cwtl
xor
adc
sbbl
sbb
xchg
inc
jae
xchg
negl
ljmp
retw
pop
xchg
sti
xor
cmp
cmp
mov
pop
or
sbb
push
add
es
mov
rcll
mov
cmp
aad
xchg
mov
mov
out
jns
mov
cli
inc
push
push
xor
xchg
adc
loope
add
dec
into
lock
fs
pop
dec
push
fistpl
stos
mov
insb
xor
addl
xchg
cmp
andl
and
dec
mov
sbb
dec
xor
data16
icebp
out
xorl
adc
inc
push
xchg
dec
push
cld
lods
lret
adc
in
jns
or
insl
push
insb
jno
in
pushf
lcall
adc
pushf
hlt
adc
in
and
out
shufps
mov
popa
call
xchg
aaa
repnz
xchg
add
jl
xor
mov
or
mov
or
fisttps
sub
push
sbb
jae
jp
jbe
xor
xchg
inc
testl
popf
adc
and
call
inc
cltd
sub
and
lods
push
xor
test
inc
fsubs
inc
inc
shrb
xchg
repz
fcmovne
clc
mov
iret
push
repnz
push
push
jmp
test
stos
pop
enter
enter
pop
inc
pop
insl
ret
insb
adc
fdivs
lods
xacquire
xchg
rcl
loope
loope
out
xchg
lds
fs
adc
ds
pop
insb
jp
pushf
das
js
inc
and
jo
adc
or
mov
push
or
mov
sub
out
mov
mov
and
inc
sarb
rcrb
jb
cmc
adc
push
jmp
insl
xlat
cltd
stos
flds
mov
bound
int3
mov
sbb
aad
or
cld
shl
mov
in
push
das
or
inc
push
int3
insl
idivb
orl
ss
pushl
popf
gs
push
lods
xor
inc
and
inc
aas
inc
sahf
lds
pop
sbb
dec
adc
and
imul
aad
fcomp
cmpsl
call
jo
fsubl
mov
mov
and
and
dec
sub
fisttpl
add
mov
andl
xor
adc
push
dec
mov
pop
pop
xor
lods
hlt
fwait
sahf
ja
in
lret
in
jle
leave
notb
jp
jb
addb
jae
pushf
icebp
adc
sbb
cmpb
sarl
mov
out
mov
loop
gs
mov
and
into
sbb
pop
adc
add
cmpsl
xor
mov
jno
and
ja
stc
pop
push
pop
gs
jmp
fs
shlb
mov
insb
fisubrl
fcomps
fistpl
xchg
adc
adc
or
inc
dec
out
movsl
mov
repz
mov
stos
cmc
addl
xchg
xchg
push
jmp
jno
or
push
fidivrs
xchg
hlt
mul
mov
jmp
cmp
cmpsl
scas
dec
mov
lods
shr
add
mov
das
inc
shl
fdiv
xchg
inc
mov
xchg
inc
jae
sub
pop
push
dec
inc
cltd
xorl
mov
insb
rcll
or
cmpsb
inc
movsb
cs
cli
or
push
mov
lret
jno
add
add
ficomps
mov
xorb
pop
ds
add
popa
in
cltd
div
xchg
ror
test
repz
aaa
arpl
pop
sahf
dec
aam
out
dec
mov
ds
les
sub
mov
sbb
outsl
mov
sbbl
out
cld
imul
sub
daa
adc
imul
pop
lods
jae
jmp
out
cmpsl
add
sub
mov
cmp
repnz
fimuls
test
pop
lret
ffree
mov
mov
data16
sbb
pop
hlt
jg
jo
xlat
mov
rclb
mov
cmp
xorb
cltd
push
outsl
xchg
popf
lods
and
cwtl
movhlps
and
push
pop
pop
jbe
dec
push
jne
in
cmp
jmp
out
jle
mov
leave
fwait
arpl
sbb
movsb
loopne
icebp
push
add
push
mov
mov
pop
mov
add
call
sub
jnp
jns
mov
les
or
or
sub
lock
mov
sahf
insl
push
jae
je
test
and
cmp
inc
xchg
call
les
dec
std
pop
adc
mov
out
dec
pusha
les
mov
dec
lea
outsb
jb,pn
or
cmp
and
xor
in
test
fisubrl
popf
and
mov
sbb
lock
dec
push
sbb
movsb
out
aad
jg
mov
cwtl
cmp
jbe
xorl
and
xchg
stos
pop
aas
repz
cmp
mov
das
lods
xor
xchg
sbb
mov
mov
pop
mov
dec
mov
int3
pop
pop
inc
psubsw
das
shrl
jne
xor
adc
cmp
aad
xchg
es
sub
cmp
add
mov
push
sarl
xchg
xchg
lret
xor
imul
aam
cltd
shlb
fidivs
cmp
cmp
push
cltd
mov
jb
es
mov
loopne
insb
loop
and
jle
sub
add
es
mov
push
adc
iret
push
in
fwait
das
sti
jns
in
push
jbe
shl
and
insl
mov
dec
xor
out
sub
or
xchg
xchg
out
rcrl
outsb
dec
arpl
pushf
xor
dec
mov
adc
mov
stc
push
sub
jbe
or
pop
xor
jb
sub
adc
inc
sbb
jb
pop
sahf
inc
divb
sbb
insl
jl
jne
lret
mov
dec
test
jno
jns
pusha
sbb
jle
mov
fldl
jge
stc
sahf
jp
loopne
push
int3
cs
cwtl
sbb
outsb
lret
mov
xchg
pop
fiadds
mov
notl
cmc
jo
cmpsl
ds
arpl
enter
adc
std
or
data16
in
mov
mov
pop
jmp
data16
movsb
insb
and
setno
les
cbtw
inc
shrl
sub
cmpsb
movsl
ret
popf
inc
lock
adc
mov
mov
js
push
divl
sub
repz
sub
xor
xor
mov
dec
jmp
cs
dec
out
sbb
pop
lds
test
push
xchg
test
idiv
pop
jmp
xchg
add
mov
cli
inc
mov
lcall
outsl
and
or
push
leave
into
roll
adc
int3
xchg
or
jo
out
mov
stos
mov
orl
pop
dec
jo
push
add
or
push
repz
fs
es
pop
jle
cmc
andl
insb
jl
aaa
xchg
mov
or
daa
aas
jae
xor
xchg
adc
loope
xchg
dec
sbb
push
enter
dec
adc
mov
xor
adc
mov
dec
xchg
or
dec
insl
ja
pop
jb
mov
outsb
mov
or
mov
mov
mov
dec
jp
rolb
fbld
mov
lret
xchg
sti
push
dec
ret
xor
hlt
xchg
fsubrl
int
ljmp
jno
pop
pop
xor
or
pop
fcmove
cmpsb
sbb
cmc
jnp
mov
or
decl
into
xor
aaa
mov
or
xchg
test
jno
add
add
sbb
mov
insb
xchg
ss
iret
push
xchg
std
cmpsb
dec
fstps
add
jae
pop
xchg
outsl
stc
or
mov
leave
add
rorl
das
imul
dec
aam
jb
imul
outsl
mov
jne
and
push
push
jecxz
mov
movsb
or
dec
dec
aad
xor
hlt
push
daa
sub
mov
xchg
lahf
mov
ja
idivb
dec
jmp
aad
jmp
or
aaa
mov
std
ljmp
xchg
iret
xlat
cwtl
add
pop
or
fs
adc
or
pop
sbb
sub
inc
pop
ds
movups
aas
scas
stos
aaa
mov
xchg
js
lea
push
bound
jg
movsl
mov
mov
or
or
jle
jnp
lods
imul
adcb
xor
jecxz
or
and
loopne
mov
notl
fsubrl
inc
aas
push
addl
or
fldl
lret
cli
mov
push
or
imul
pop
pop
add
cmp
jmp
push
mov
jne
test
fnsave
mov
and
ja
mov
and
repz
jecxz
ljmp
cmp
mov
pop
mov
and
fcmovbe
outsb
std
stos
and
fldcw
mov
in
sbb
add
sub
dec
cs
sub
addr16
push
lods
jg
jbe
jmp
mov
push
roll
inc
mov
cmp
xchg
dec
js
sbb
mov
xor
idivb
add
pushf
mov
cmp
mov
push
push
push
fcomp
ja
xchg
jne
sub
scas
add
daa
sti
outsl
jns
dec
push
dec
scas
in
pop
mov
mov
mov
movl
jp
test
jnp
push
lock
cli
add
imul
sti
loopne
push
fmuls
lahf
addr16
hlt
jae
frstor
inc
hlt
mov
mov
and
sbb
jo
jge
mov
or
scas
sbb
std
je,pn
pop
mov
je
and
cmp
lret
test
das
inc
xchg
jo
mov
jle
inc
push
adc
mul
test
cmp
nop
sti
add
orb
getsec
mov
pop
mov
or
pop
movsl
jnp
jo
add
je
scas
inc
jns
xchg
push
out
pop
sub
fcom
sub
xor
lcall
adc
mov
jae
pop
pop
fadd
or
rolb
sar
inc
add
out
mov
xchg
movsl
or
movsl
sbb
scas
adc
pop
adc
adc
xor
pop
les
daa
fcoml
xchg
xchg
pushl
adc
xor
scas
movsl
mov
mov
dec
inc
or
leave
mov
inc
lock
push
pop
rcll
fwait
mov
sbb
pusha
scas
gs
inc
frstor
testb
repnz
setno
test
test
scas
fsts
push
sub
mov
mov
lahf
scas
test
jbe
jb
mov
sub
jbe
fcmovu
jns
aam
lea
std
mov
xor
mov
lock
sub
hlt
jmp
movb
scas
adc
pop
dec
push
push
mov
lods
cmpsl
ret
in
cltd
out
das
shlb
pop
mov
clc
sbb
cltd
jmp
mov
or
je
xchg
mov
jecxz
and
mov
lock
jns
xchg
push
mov
imul
sub
ret
test
mov
movsl
lcall
inc
fmuls
xchg
inc
je
out
mov
xchg
fcoml
xlat
loopne
dec
mov
sbb
sub
aad
jmp
dec
pop
lods
cmc
enter
xor
lret
fisttpl
mov
dec
leave
lea
sbb
repz
inc
or
stos
or
xchg
js
orb
insl
cs
test
and
jbe
push
cmp
cltd
loopne
sub
cmpsb
mov
xlat
testl
xchg
sub
pop
repz
aad
push
mov
popa
jb
mov
sarb
je
add
mov
jg
mov
andb
cmp
mov
mov
mov
cltd
outsl
cmp
pusha
das
jmp
cmp
pop
cmc
jb
lds
cltd
inc
adc
xor
push
mov
cwtl
cltd
jp
adc
popf
xlat
fbstp
ror
js
pop
mov
sbb
sub
dec
cmp
test
test
lcall
pop
push
mov
fsubrs
or
sbb
mov
enter
popa
inc
inc
adcb
outsb
jp
xchg
sub
in
mov
xorb
testl
aad
add
inc
add
outsl
push
imul
ds
dec
jb
xchg
negb
jns
mov
cld
and
repnz
jp
pop
ret
cmp
jae
inc
jle
add
sub
or
scas
inc
cmc
fwait
push
xchg
loop
fdivrs
dec
sub
dec
adc
sub
movsl
xor
test
fldcw
cmp
mov
shl
cmpsb
mov
shrb
lea
cmpxchg
test
and
fadd
mov
adc
cmp
dec
imul
repz
xchg
out
xor
pop
xlat
mov
add
push
mov
xor
adc
mov
inc
mov
and
iret
cli
or
jecxz
inc
lea
mov
mov
and
ret
sbb
rcrl
mov
mov
subl
xor
lret
pusha
into
test
xor
imul
pusha
cs
mov
shll
mov
sub
mov
dec
out
clc
and
cmc
ja
sbbl
fistpll
cmpsb
mov
js
psubusw
push
das
pop
add
out
sbb
addl
insb
mov
mov
mov
mov
fmul
inc
hlt
and
or
xchg
push
into
in
scas
out
fiaddl
cmpsl
cmc
outsb
or
movsb
jmp
mov
jp
push
pop
sbb
pop
xor
bound
and
hlt
insb
repz
lds
mov
sub
std
jp
lret
dec
ljmp
mov
jno
repnz
ret
cmp
mov
cli
fcmovnu
icebp
rorl
sub
jle
cwtl
sbb
int
ret
inc
test
mov
out
lret
push
and
jmp
and
out
sti
int
adc
inc
outsl
xor
mov
cmc
jne
mov
fwait
dec
jns
jmp
lock
scas
insb
jl
cmp
and
xor
lock
mov
add
inc
inc
cmp
or
scas
mov
test
ds
add
std
mov
icebp
cltd
leave
dec
sahf
jle
xchg
seta
call
scas
and
mov
push
cs
or
sub
ss
icebp
mov
xor
jae
popf
movsl
ljmp
stos
notl
orb
cmc
inc
lock
sub
jle
cpuid
aam
fiadds
mov
inc
int3
xchg
cmpsb
std
adcl
xchg
lds
scas
and
lahf
shr
or
lock
cltd
fildl
inc
rclb
fdiv
xchg
popf
ss
or
pop
mov
pop
clc
test
ret
loope
shl
in
lcall
sub
mov
dec
xlat
and
add
xchg
push
hlt
call
hlt
mov
stc
cmpsb
xor
add
adc
jmp
cld
inc
xchg
or
dec
mov
fbstp
mov
stos
insl
out
fnstcw
ret
lret
adc
cltd
cmpsl
fwait
call
pop
arpl
push
or
add
sub
pop
rorb
inc
sub
sbb
lea
and
push
cwtl
es
or
sbb
add
dec
add
push
xchg
adc
jle
jle
repz
pop
dec
std
ja
inc
and
push
enter
mov
aam
xchg
daa
mov
test
dec
ret
mov
mov
xor
aas
pop
add
cld
jae
mov
jp
lea
pushf
pop
mov
adc
xor
mov
fsts
and
rclb
add
sarl
inc
fcmove
lock
pop
push
cmp
ljmp
shlb
mov
inc
notb
in
imul
repnz
imul
into
js
mov
jbe
inc
sub
or
lcall
test
orl
cltd
xor
dec
out
pop
jne
data16
ror
movsb
jmp
sbb
inc
ja
lds
int
adc
movsl
jnp
push
mov
jnp
mov
inc
gs
push
js
arpl
fimuls
adc
sarl
inc
test
test
mov
ficompl
and
loopne
or
lcall
xlat
sub
hlt
lock
mov
cmpsl
cltd
jg
js
sub
mov
cmp
mov
and
jmp
mov
mov
ja
sub
jl
cwtl
mov
push
jae
arpl
gs
and
add
gs
fistpll
arpl
bound
push
into
fwait
and
nop
xor
push
in
sub
mov
jmp
cmc
push
lret
loope
inc
iret
dec
bound
repnz
into
ljmp
mov
cmc
jmp
test
pusha
push
std
andl
roll
or
mov
or
jb
push
and
and
or
or
pop
decl
xor
lcall
les
mov
sbb
pop
xor
movsl
sub
in
xchg
jle
jmp
dec
mull
or
push
mov
pop
mov
aam
push
sub
jge
daa
jae
mov
repz
xchg
xor
xchg
push
inc
add
add
xchg
mov
test
decw
dec
cmp
movsb
or
xchg
mov
add
jle
push
inc
sar
testb
jmp
adc
sub
xor
mov
cltd
stos
pop
pop
add
adcl
sahf
pop
push
sbb
test
push
and
mov
mov
jne
fnsave
cs
pop
mov
jmp
mov
mov
cmp
mov
mov
hlt
or
mov
iret
hlt
mov
push
mov
jecxz
stos
push
mov
out
ja
iret
mov
shrb
pop
sar
sbb
jnp
pop
push
sbb
cmp
pminsw
sub
cld
or
pop
je
inc
cwtl
filds
mov
xchg
or
push
jl
cwtl
push
enter
adc
loop
sub
movsb
cmp
sub
lods
loope
mov
cmp
mov
mov
stos
mov
loop
mov
xor
cs
mov
test
xchg
xor
jecxz
jge
mov
aaa
xor
les
or
scas
jns
cmp
enter
sbb
push
shll
mov
pop
loopne
lock
test
xor
jmp
mov
pop
cmp
mov
incl
add
into
or
daa
mov
lcall
mov
mov
fcmovu
dec
ret
fists
outsb
repz
in
or
leave
ds
lods
inc
or
jge
mov
and
dec
jo
inc
test
ret
inc
or
xchg
outsb
lock
sbb
gs
test
cmpsl
pop
ficoms
cmp
add
cli
std
inc
jmp
fcomps
xchg
xchg
test
mov
pop
and
fcompl
mov
xchg
mov
sbb
lock
ljmp
dec
sbb
lods
dec
aaa
into
lret
or
mov
dec
imul
push
adc
push
jns
pop
outsb
mov
clc
or
adc
in
mov
cmpsb
mov
vpmaxub
inc
xor
and
popf
fcom
sub
adc
test
mov
and
jl
add
mov
scas
mov
dec
outsl
inc
push
mov
or
ds
or
iret
pop
flds
and
cltd
aad
test
and
and
lock
jle
mov
xchg
pop
mov
dec
jbe
inc
pusha
or
mov
push
sti
dec
mov
je
push
rcr
cmp
push
or
push
insb
dec
xchg
cld
inc
fwait
push
push
sbb
mov
mov
add
pusha
push
test
sbb
xor
iret
mov
add
adc
dec
es
sbb
pushf
and
fistpll
leave
xor
lds
mov
aam
data16
dec
fisttps
insb
inc
divl
mov
mov
cmpsb
adc
ljmp
cli
pop
jg
sahf
or
jae
clc
aas
xor
xor
js
outsl
xor
xchg
mov
lret
add
jp
aad
ljmp
imul
les
or
push
jne
jmp
out
cmp
rcrl
shr
push
pop
mov
xchg
aam
mov
dec
std
in
mov
mov
jb
adc
js
add
pop
xor
sub
mov
imul
mov
rorl
mov
lret
pusha
out
lods
scas
xchg
insb
scas
in
xor
pop
lods
xchg
cmp
inc
push
jmp
repnz
out
pop
and
in
add
test
cmc
iret
mov
or
hlt
ds
sbb
mov
imul
jbe
pop
dec
outsb
mov
push
movb
shll
mov
lcall
out
sbb
jnp
inc
mov
add
pop
sbb
dec
fdivrs
and
lock
add
jno
add
lret
jo
fstpt
pop
jle
ficoms
add
cwtl
mov
subl
fldenv
leave
arpl
mov
xorb
negb
mov
insl
insb
adc
xor
jge
pop
inc
cmpl
ficomps
or
xchg
add
mov
jl
pop
push
push
cmp
and
bound
imul
bound
lods
cs
add
jecxz
imul
int
outsl
dec
lret
pop
mov
mov
mov
xor
mov
and
add
fwait
and
pop
inc
lret
sbb
outsl
dec
push
xor
push
xor
sbb
pop
nop
inc
sub
lret
hlt
xchg
frstor
push
cmp
out
pop
push
sub
jg
xchg
mov
jg
sarb
int3
popf
push
push
xchg
jb
sbb
loope
pop
shlb
push
loope
cmp
cld
inc
mov
rorb
fstpl
cmp
lock
mov
ja
ja
push
das
and
or
push
and
bound
js
cmpsb
inc
cmp
mov
pushf
jg
or
pop
std
add
iret
sbb
lea
jnp
insl
mov
pop
mov
jnp
xchg
cmp
inc
push
cmp
lret
mov
lret
fwait
and
jnp
pop
mov
xchg
mov
sub
cmp
xor
push
sub
ret
mov
movsb
pop
call
ret
jl
xchg
pusha
add
mov
jg
jne
jb
mov
mov
fwait
hlt
xor
inc
or
jno
mov
adc
jp
xchg
inc
dec
fistps
sbb
add
int
dec
mov
fadds
mov
daa
mull
mov
or
cmpsb
insb
inc
jns
imul
data16
mov
inc
mov
dec
jp
dec
mov
out
cmp
jge
loop
adc
sbb
dec
add
push
shl
mov
push
dec
nop
loope
sbb
mov
xor
lods
rolb
jns
insb
and
icebp
push
jp
aam
xor
call
sub
mov
push
stc
bound
and
cmpsb
imul
lcall
aad
fisttps
jge
jne
fcoms
test
roll
adc
ret
jne
xchg
mov
mov
out
or
jnp
fnstenv
pop
xchg
xchg
outsb
mov
push
or
push
push
dec
xor
add
sbb
repz
mov
mov
dec
das
sarb
dec
or
add
ret
stos
sbb
aam
add
es
and
rclb
rolb
enter
sbb
imul
cmp
mov
jo
jns
mov
mov
pop
mov
sbb
pop
mov
ds
fdivrs
shll
mov
xchg
ret
repz
and
xchg
stos
sti
xor
jmp
out
push
or
mov
into
jmp
mov
or
arpl
ljmp
lds
test
cmc
add
dec
jne
xor
clts
sahf
in
push
call
inc
shrb
in
xchg
dec
rcr
jecxz
cmp
push
mov
mov
push
leave
mov
jecxz
sub
sub
mov
jmp
hlt
es
movsl
inc
cmpsb
and
enter
and
xor
test
mov
mov
sub
cmp
xor
addl
shll
mov
mov
outsb
int3
mov
das
lods
xor
push
mov
je
dec
out
adc
sub
cli
xor
cld
pshufw
xchg
out
arpl
das
je
xlat
out
icebp
mov
pusha
mov
xchg
cs
dec
mov
ffree
sub
mov
icebp
or
pop
roll
mov
invd
pop
fidivrl
frstor
mov
lcall
sti
cmp
std
adc
or
push
cwtl
ja
adc
scas
js
scas
push
mov
or
jp
mov
xor
in
and
mov
arpl
cs
lahf
mov
jnp
cmp
push
shl
cmp
in
sar
icebp
xor
jo
loopne
lds
shrl
lods
iret
xchg
lret
ds
pushl
inc
adc
test
dec
mov
lahf
push
in
sbbl
hlt
and
mov
fs
mov
repnz
sbb
or
pop
stos
pushf
sub
out
add
lods
leave
mov
pop
mov
ljmp
or
inc
xchg
shll
pop
sub
jmp
or
add
inc
mov
pop
or
or
mov
xchg
adc
mov
mov
test
or
cld
xlat
mov
arpl
mov
xchg
leave
jo
dec
jmp
inc
insl
stc
mov
mov
shld
pop
repnz
adc
ss
insb
scas
pop
nop
jo
mov
mov
add
mov
je
movsl
jnp
int3
xchg
and
fmuls
mov
push
pandn
pop
mov
pop
dec
push
add
xor
daa
testl
sbb
add
inc
pop
int3
daa
cmp
scas
cmpsl
sub
pop
lahf
xchg
pop
int3
sarb
or
inc
in
test
fbld
xor
xor
or
int
jmp
adc
scas
mov
push
hlt
das
push
add
adc
push
shll
aas
dec
fistpl
and
mov
adc
mov
adc
mov
data16
out
jns
les
iret
jle
cld
in
mov
das
sbb
inc
jns
jmp
lcall
lds
jnp
push
jl
aaa
xchg
pop
dec
cld
out
pushf
or
daa
inc
sub
nop
push
pop
stos
in
pop
push
lahf
in
jl
and
and
cmp
das
cwtl
and
adc
popa
cmp
loope
push
or
push
pop
mov
pop
xchg
rorl
stc
addl
in
arpl
mov
stc
jmp
mov
test
adc
adc
enter
push
shlb
mov
pushf
insl
clc
mov
dec
push
sti
mov
adc
lret
jae
mov
or
jb
xor
cmp
sub
xchg
adc
push
js
add
lods
and
sub
inc
cmc
call
mov
mov
mov
mov
ja
in
sbb
jns
inc
pop
xor
fimuls
lods
mov
cmp
sti
iret
jo
arpl
movsl
xor
dec
insb
inc
or
test
mov
xor
inc
aad
aas
cmpsb
imul
pop
shlb
inc
mov
fisttpll
push
xchg
pushf
add
lock
loopne
mov
push
pop
sub
cmp
ljmp
xor
xchg
jle
test
pop
stc
out
pop
pop
xchg
adc
bound
or
popf
pop
mov
push
shlb
inc
inc
fbld
ret
in
lahf
jecxz
hlt
test
and
in
aad
cld
ficoms
mov
jg
xchg
mov
int
adc
mov
loope
lahf
or
into
mov
loope
inc
inc
mov
sbb
mov
sbb
jo
add
dec
lods
cmc
subb
sbb
pop
sub
pop
xlat
cmp
dec
notl
in
sub
loope
ficompl
mov
inc
je
push
out
dec
je
sub
or
fwait
jle
shrb
sti
or
cmp
je
xor
mov
pop
or
xchg
lret
imul
pushf
cwtl
dec
jno
adc
cltd
xchg
out
lods
stos
mov
jno
sbb
test
enter
test
sbb
filds
in
inc
sub
xchg
cld
aas
enter
out
lahf
jnp
sub
ficoms
fs
lods
xor
add
hlt
paddb
sub
lds
cmp
popa
cmp
cmc
and
or
mov
add
xchg
aas
sbb
mov
or
dec
push
jecxz
ret
xchg
out
call
add
mov
mov
jecxz
pop
push
pop
aad
cmp
cmpsb
xor
cwtl
movsb
push
inc
ret
bound
hlt
in
and
jl
jbe
ret
dec
bound
jmp
and
scas
repnz
ljmp
inc
pop
and
sub
clc
sbb
pop
adc
mov
mov
stos
popw
cmp
xchg
aas
orl
mov
inc
sbb
test
inc
js
dec
shrl
mov
jmp
and
cltd
sub
aaa
addb
imul
int
or
and
mov
xchg
sbb
inc
jg
push
inc
adc
mov
mov
fwait
mov
mull
adc
leave
xchg
mov
rcrb
cmp
or
jnp
out
jmp
xor
sbbb
and
adc
mov
test
sbb
sar
dec
mov
adc
push
pop
shlb
std
cmpsb
lock
push
stos
iret
rclb
bound
arpl
cmpsl
dec
sbb
adc
loope
push
push
mov
xchg
inc
rcll
lock
cltd
mov
or
sub
mov
fildl
mov
adc
andl
insb
inc
mov
daa
mov
push
push
insl
popf
jae
jmp
mov
adc
cmp
int
aad
xorb
or
add
add
or
sub
mov
pusha
mov
mov
fs
cld
loop
ljmp
mov
cmp
jne,pn
add
ret
sub
mov
mov
ja
add
xchg
divl
repz
push
cmp
xchg
inc
das
jecxz
mov
fsts
bound
in
xchg
es
cmp
lret
pop
clc
sbb
add
in
mov
clc
or
cmp
lods
pop
mov
jmp
aad
fidivl
imulb
in
add
or
mov
orb
mov
cli
inc
xor
jno
jmp
ret
mov
adc
adc
daa
sbb
dec
xchg
jae
pop
xorl
jmp
rol
in
mov
dec
call
dec
adc
pop
lock
mov
shll
into
push
cltd
xor
je
vpmacsswd
push
push
mov
mov
adc
xor
stos
and
push
mov
test
inc
push
jo
in
ficomps
sub
xchg
jp
mov
cltd
andb
fcmovbe
or
xchg
lods
inc
sub
mov
js
out
or
xchg
pop
xor
mov
rorb
std
fsub
jg
notl
jp
cld
mov
cmp
scas
mov
jne
popa
xchg
addr16
mov
pop
xor
call
and
mov
js
aad
xor
fwait
pop
pushf
aad
push
mov
fimuls
xchg
mov
sarl
icebp
das
push
push
dec
mov
xchg
scas
rorl
pop
xchg
xor
bound
sub
sbbl
rorl
in
pusha
and
mov
mov
mov
pop
adc
fidivs
stc
stos
adc
outsb
pop
or
shlb
aam
sbb
push
xor
lret
xchg
shll
int3
stos
sbb
xor
pop
nop
push
add
ret
sahf
sub
lock
fdivrs
or
ja
dec
test
xchg
rorb
inc
dec
inc
jb
inc
js
aam
das
xchg
aad
imul
jb
subb
or
icebp
xor
sub
pop
shlb
or
insl
inc
push
xor
out
cmp
xor
fnstsw
cltd
xlat
dec
dec
sbb
xchg
shrb
popf
fistl
sbb
xchg
call
fwait
ss
dec
jle
adc
outsb
lcall
adc
scas
popa
movaps
adc
or
xchg
or
rolb
or
or
rorb
stos
cmp
out
mov
adc
clc
int3
orb
push
xchg
dec
add
in
inc
movsb
sar
sbb
mov
mov
jo
int
push
and
lods
xorl
fdivl
xchg
sti
cmp
xor
jo
and
insb
cmc
jo
lcall
mov
fsubrs
pop
cmpsl
mov
jp
shll
xchg
adc
adc
es
xor
dec
pop
frstor
incb
push
or
mov
mov
mov
sub
adc
outsl
punpckhbw
and
gs
or
xchg
or
add
fcompl
push
xchg
adc
jbe
mov
inc
adc
imul
lahf
xchg
movsl
mov
mov
divl
iret
testb
test
push
pop
mov
jns
outsb
inc
jge
dec
sbbl
sbb
push
dec
mov
pop
outsb
test
repnz
fisubs
mov
out
cmp
sbb
push
add
adc
mov
inc
push
ret
clc
fwait
mov
mov
push
dec
sahf
sub
pop
dec
adc
ljmp
cmp
jl
cmp
cmp
out
pop
insb
xchg
js
push
jns
push
mov
dec
mov
outsb
pusha
mov
inc
scas
pushf
mov
dec
lock
push
push
pop
sbb
mov
jg
fnstcw
out
jno
nop
mov
mov
test
pop
scas
push
xor
loop
mov
fs
cmp
mov
xor
lret
dec
add
mov
jmp
jmp
sub
insl
cmc
inc
jo
ljmp
out
shlb
out
sub
jmp
ds
mov
xchg
adc
jno
fistpll
cwtl
inc
and
movsl
mov
addl
ficompl
jbe
adc
hlt
movsb
xor
in
ret
pop
jnp
stos
jle
pop
inc
jns
adc
in
shlb
mov
data16
lods
mov
scas
in
fnstcw
incl
ds
aam
inc
popa
sub
lahf
mov
pop
mov
cli
or
pushf
rol
mov
imul
int
mov
or
iret
out
sbb
in
cmp
popa
cmp
adc
push
mov
cmp
aas
popa
mov
cmp
sti
mov
jmp
lahf
fistpll
sarl
inc
jb
push
insb
or
shll
fchs
jb
mov
mov
scas
and
push
dec
pop
in
dec
push
jae
push
inc
divl
fists
and
mov
pushl
inc
ds
dec
jb
jnp
daa
adcb
mov
xchg
xchg
mov
jo
dec
cmp
pop
int3
mov
inc
xor
call
mov
xlat
ja
int3
ficompl
push
pop
jle
cltd
push
in
out
jmp
mov
sub
push
add
pop
inc
pop
pop
pop
or
out
int3
adc
imul
loop
push
sub
add
jne
mov
out
or
jb
push
mov
jg
decl
push
jns
pushf
mov
fcmovnbe
data16
sbb
pop
aad
pop
xchg
xor
stos
arpl
arpl
dec
aad
add
out
rorb
or
cld
sbb
dec
cmp
scas
pop
negb
std
pusha
add
mov
sub
ja
mov
jne
mov
xor
scas
sbbl
sub
xlat
mov
shlb
xlat
mov
ja
subl
push
sbb
negb
and
ret
add
add
outsl
into
push
dec
mov
loope
jbe
insl
movsb
and
mov
sub
stc
test
inc
mov
push
jb
jp
std
lret
jae
mov
mov
mov
cmp
sub
lea
fnstsw
pop
push
addb
adc
xor
or
jmp
mov
sarb
sub
into
popa
addb
push
movsb
jmp
xchg
fists
adc
leave
fbstp
cmp
fadds
stc
in
jno
push
loopne
sbb
sub
repnz
fiadds
mov
mov
pop
or
cmp
sbb
in
rcll
add
xor
cmp
sub
std
and
jmp
jnp
cmc
test
xchg
pop
pop
xchg
aas
mov
xor
imul
cmp
jnp
adcl
popa
and
cmp
jbe
xor
aaa
and
imul
leave
xor
pop
sbb
add
rcll
pop
mov
icebp
jecxz
xor
add
or
test
les
push
es
insb
std
and
sbb
fwait
and
in
aad
cld
data16
aas
arpl
fcompl
sbb
int3
push
add
lock
xor
sbb
sbb
dec
cmp
sbb
mov
arpl
test
clc
popa
xchg
cmp
cltd
add
repnz
sub
lock
dec
or
mov
aad
sub
aaa
movsb
aad
mov
or
pushf
std
out
jno
xor
cmp
push
or
lock
adc
vaddsubps
test
and
les
into
xor
hlt
xchg
add
mov
sarb
adc
xchg
clc
jae
fs
push
cltd
inc
cmp
pop
fsubl
adc
jne
sahf
mov
adc
inc
mov
mov
cmp
mov
js
xlat
imulb
cmp
dec
lret
in
lahf
xchg
les
inc
or
lcall
int3
les
inc
jb
mov
mov
or
icebp
test
or
jge
pop
lock
cltd
xor
xchg
sbb
out
push
into
or
mov
sbb
and
repz
sahf
and
pop
gs
test
cwtl
inc
sbb
add
mov
mov
pop
movsl
xor
adc
bound
cmp
inc
std
aad
sub
inc
mov
in
pop
sub
in
xor
mov
out
or
das
aam
inc
movsl
xor
mov
lret
mul
push
cmp
ret
xchg
icebp
adc
jecxz
push
cwtl
xchg
int
scas
inc
lret
jmp
pop
xchg
add
hlt
in
rcll
enter
xchg
pop
xchg
and
mov
jae
jle
dec
stc
jle
xchg
fisubrs
sub
adc
mov
dec
outsl
out
scas
in
mov
nop
jb
add
test
push
sbb
or
cmpsl
inc
push
sub
sub
xchg
mov
mov
xchg
mov
pop
insl
flds
dec
imul
shlb
fsubl
mov
lods
out
test
adc
lcall
stos
cmp
shll
in
add
add
sbb
rol
lock
inc
jge
or
cmpsl
adc
fs
and
cltd
cmp
xchg
mov
xchg
out
out
push
loope
xchg
inc
pushf
sub
ret
leave
outsb
jmp
pop
sub
jle
mov
sbb
test
jmp
data16
aas
cmp
jle
insb
push
jge
jbe
aas
inc
scas
mov
sbb
lock
jmp
jno
xchg
mov
stos
js
ror
or
dec
xchg
dec
iret
cmp
sbb
fsubrs
stc
stos
aam
push
sbb
nop
xchg
clc
sbb
cmp
sti
pop
je
or
cs
sbb
in
out
push
jae
inc
jno
push
pop
test
repz
mov
push
dec
mov
push
xchg
idivl
dec
movsb
and
in
xchg
push
sub
inc
call
cltd
fstl
gs
das
jo
sub
int
gs
jmp
aaa
sub
mov
enter
addb
and
cli
lcall
out
scas
test
ret
mov
fwait
aam
inc
rcll
inc
mov
mov
mov
insb
add
jno
mov
add
data16
movsl
daa
xchg
arpl
movsb
xchg
adc
mov
mov
inc
loop
addl
mov
fdiv
scas
mov
push
es
inc
daa
mov
shl
lods
out
mov
mov
rorb
mov
mov
lea
jmp
jo
pop
decl
std
lods
movsl
mov
mov
mov
dec
inc
loope
jg
cmp
test
pop
push
sub
mov
adc
aam
inc
shl
jns
or
pop
sub
incl
mov
jns
push
mov
xchg
mov
cmp
jmp
fmull
push
adc
sub
push
mov
bound
lret
mov
ja
leave
add
push
and
and
dec
dec
dec
mov
jle
aaa
scas
sub
push
inc
or
enter
sahf
push
sbb
out
stos
jbe
cmp
data16
adc
or
sbb
xor
pushf
mov
pop
jl
sub
daa
or
jp
bound
pop
and
dec
lods
cmp
cmp
xchg
bound
stos
out
ficomps
pop
sbb
push
scas
call
jae
push
jbe
mov
cmpsb
insb
mov
cli
ret
xor
sub
leave
repz
rcr
jo
mov
mov
xor
xchg
dec
pushf
iret
add
and
mulb
out
mov
pop
repz
xorb
pop
push
mov
push
popa
dec
xchg
ja
gs
jge
sahf
mov
loop
pop
lods
mov
cmpsb
mov
or
mov
pop
jecxz
xchg
jle
sub
loope
rclb
test
pop
cmc
mov
jns
lret
lds
inc
ret
add
fucomi
inc
out
imul
xor
cmpsl
xor
stc
clc
push
push
inc
sti
dec
push
sub
cmp
or
stos
cltd
mov
dec
add
ja
jmp
adc
test
ret
imul
inc
iret
push
enter
pop
pop
jnp
add
sbb
gs
jle
mov
in
and
and
push
arpl
add
or
push
sbb
push
fdivr
ds
pop
and
xchg
testl
stos
cmp
pushl
adc
outsl
test
mov
dec
mull
sti
add
adc
mov
addl
in
int
neg
xchg
clc
cmp
mov
sbb
lds
call
jl
mov
pop
aam
das
and
pop
pusha
fbstp
xlat
insl
lret
jg
ja
les
les
ss
js
repnz
xchg
movsl
push
pop
sti
adc
jp
test
popf
pushf
pushl
gs
into
push
mov
cmpsl
adc
mov
dec
mov
pop
sub
sub
std
mov
xchg
aaa
test
outsb
ret
fidivl
lock
fimull
jb
dec
inc
popa
repnz
icebp
das
dec
and
stos
outsb
movsl
int3
pushf
or
addr16
fs
push
iret
add
sti
xlat
inc
push
insl
movsb
shr
dec
adc
lods
xorl
sub
mov
mov
dec
jle
mov
outsl
push
push
jle
add
pop
and
inc
aas
mov
imul
cli
dec
int
cwtl
sub
js
movsl
sbb
add
loope
dec
add
aam
ss
cltd
divps
add
cltd
jl
xor
or
pop
pop
repz
fbld
mov
lret
aam
push
push
cwtl
pop
adc
fimull
outsl
inc
cmp
enter
jmp
sub
cmp
mov
lcall
hlt
lret
sub
push
in
cmp
mov
nop
cmc
and
and
clc
sub
bound
inc
add
movb
mov
dec
xor
rol
cmc
push
lret
mov
add
aam
dec
in
in
adc
and
cmc
sti
mov
sbb
lock
adc
add
hlt
adc
daa
or
aas
aaa
lods
sbb
jmp
jg
xor
stc
add
adc
imul
out
sub
nop
in
mov
add
rclw
dec
hlt
fsubrl
ss
fnsave
mov
rcrl
and
or
xchg
stos
into
mov
sbb
sbb
out
dec
xchg
arpl
dec
mov
aaa
in
mov
rcrl
lret
ds
into
clc
xchg
jecxz
adc
and
xchg
lods
jbe
mov
fmuls
cmp
sahf
xor
repz
lret
sub
test
xor
xor
test
divl
sti
push
xor
roll
push
lret
data16
jnp
sbb
jg
and
mov
jecxz
fnsave
mov
sarb
mov
mov
adcl
mov
mov
call
push
mov
addb
dec
xchg
std
fs
mov
cmp
sbb
popa
mov
cltd
clc
push
fimull
mov
repnz
out
inc
cwtl
mov
xor
mov
jp
push
sbb
add
arpl
sbb
jbe
lcall
jae
clc
add
sbb
outsb
aad
aas
mov
inc
cmp
pop
or
insl
cmc
fwait
jle
add
outsl
popf
or
adc
hlt
rcrb
jle
hlt
push
or
mov
movl
xchg
andb
push
jmp
push
ret
jae
aam
fstenv
bound
adc
cmc
int3
xchg
popl
dec
call
and
adc
xor
adc
fistps
cmpsl
push
data16
jl
jno,pt
push
dec
sarl
lods
rorl
pop
lret
fwait
cmp
loopne
sbb
stc
push
xor
outsb
mov
sub
dec
testl
jbe
shrb
fnsave
inc
cmpsb
xchg
imul
sarl
sub
mov
lods
pop
bound
outsb
and
test
testb
ds
pusha
sbb
fistpll
dec
add
push
cmp
fsubs
xor
imul
adc
mov
adc
sbb
xchg
push
jp
xchg
lcall
and
aad
ja
int
enter
sbb
es
inc
cmp
lret
enter
inc
sbb
cmpsl
mov
sbb
movsb
les
or
xchg
stos
fs
cmp
out
test
sbb
je
ljmp
adc
scas
inc
mov
inc
inc
andnps
cmpsb
test
inc
push
icebp
push
and
test
movsb
sub
cmp
or
lock
add
lret
jmp
xchg
lcall
loop
leave
jge
inc
adc
cltd
fwait
cmp
sub
fisttpll
repnz
inc
cmc
nop
ja
pop
pop
in
add
std
testl
jo
cmpsb
push
faddl
and
xor
cmp
jnp
out
call
mov
and
cmc
pop
mov
call
pop
inc
fsubr
mov
aas
int
dec
pop
add
jno
push
pop
test
popa
xchg
sub
ret
mov
sbb
test
repnz
mov
jg
outsb
cli
mov
push
xor
popa
in
rcrb
lcallw
pop
pop
inc
into
pop
loop
enter
xor
call
mov
nop
sbb
mov
jb
pop
dec
pop
stc
mov
mov
jmp
mov
loopne
jp
clc
pusha
imul
pop
xchg
popf
sti
stos
pop
pop
dec
stos
and
cmp
fcomip
jmp
and
push
xchg
add
sub
push
push
int
fsubrl
pusha
mov
or
adc
repz
or
xchg
test
pushf
sbb
dec
xchg
scas
inc
pop
cmp
outsl
mov
mov
dec
pop
or
sbbb
in
dec
add
stos
inc
mov
pop
outsb
ss
sysexit
leave
cmpsl
lea
jl
mov
xor
sub
enter
jnp
aaa
xor
pop
int
sub
add
rclb
cmp
mov
pop
mov
jno
push
loope
lds
or
sbb
mov
pusha
js
cmp
scas
movsb
xchg
jmp
mov
sub
loop
ficomps
iret
and
repz
clc
pop
mov
or
lods
ret
outsl
test
or
popa
adc
mov
roll
aam
stos
sbbb
mov
sub
test
cs
sarb
add
clc
sub
test
jb
test
dec
ja
bound
xchg
cltd
popa
sub
rcll
sbb
dec
out
xchg
cmp
or
and
out
stos
cltd
jle
out
jne
dec
dec
hlt
rclb
xchg
xor
and
jmp
cmc
outsb
fstpl
daa
jbe
mov
mov
sahf
jns
test
dec
fadds
cmp
jecxz
outsl
mov
jbe
jle
lods
or
xor
mov
push
adc
sbb
mov
jmp
mov
test
xor
fiaddl
das
leave
mov
or
arpl
es
dec
and
outsb
into
fstpt
cmpsl
jmp
mov
and
inc
or
rorb
stos
enter
jo
in
mov
mov
mov
hlt
gs
mov
dec
mov
xor
xchg
push
loope
int
and
in
adc
ret
icebp
jae
fdivrs
sarb
lods
insl
sahf
popf
daa
fcomip
shlb
lock
sub
xchg
xchg
dec
je
clc
lret
imul
jge
mov
sahf
aas
xor
std
xchg
packuswb
lret
shrl
loop
insl
mov
shrl
addr16
add
fdivl
adc
push
sbb
in
repz
push
xchg
fxch
sbb
arpl
cmp
icebp
cmp
call
push
jge
or
leave
mov
std
test
repz
sahf
cmp
in
scas
xchg
xchg
lcall
ss
push
sbbb
cmp
orb
cmpl
mov
insl
mov
dec
cltd
lods
idivl
aas
cmc
push
pop
xchg
hlt
fdivr
fwait
mov
pushf
popl
cmpsl
cld
add
push
sub
mov
decb
rcll
loop
jb
aam
mov
and
mov
xchg
shr
lahf
jecxz
xchg
pop
or
inc
xchg
outsb
jp
jle
shll
repz
hlt
dec
cmp
shrl
mov
or
inc
imul
aam
mov
or
sub
jmp
dec
or
daa
mov
inc
dec
mov
aam
mov
adc
or
fmul
imul
and
or
ret
mov
mov
in
daa
pop
addr16
push
mov
sti
pop
jne
cli
into
aaa
push
mov
test
fs
lods
mov
loop
adc
cli
roll
inc
mov
jne
sub
je
std
out
push
sahf
aam
pop
sbb
jmp
jo
imul
jnp
outsb
dec
idiv
jne,pt
fwait
adc
lock
xchg
lds
leave
fistl
sbb
in
shll
xchg
lcall
std
in
pusha
loopne
lret
icebp
jns
jg
fldt
aas
push
ja
daa
adc
pop
or
loope
mov
add
bound
inc
ja
xor
aaa
sbb
sub
shl
mov
aaa
dec
jns
jae
insb
shrb
mov
dec
icebp
sahf
inc
imul
roll
loopne
push
cld
je
out
cmp
les
out
scas
jno
pushf
add
push
mov
test
cmp
sub
jo
fsub
lahf
cmp
aas
iret
std
and
outsb
push
arpl
adc
xor
xchg
test
data16
jp
push
nop
pushf
pop
mov
mov
mov
add
cmp
fwait
outsl
add
hlt
fildl
cmc
push
add
jnp
mov
pop
pop
cmpb
add
fcomi
mov
fisubs
das
sub
cmpsl
outsb
testb
adc
jmp
cmpsl
shlb
add
aam
int3
pop
stos
shld
inc
dec
cmpl
ljmp
dec
dec
xchg
test
jb
test
push
xchg
mov
push
jb
fisubrs
jnp
dec
pushf
jmp
jecxz
vxorps
ret
mov
popl
shlb
mov
xchg
push
sub
and
lcall
cmp
cltd
inc
and
mov
push
rol
js
pop
xchg
adc
add
or
pop
adcb
xchg
fsts
outsb
adc
out
mov
adc
xchg
ret
lahf
dec
cmp
js
ja
lods
xorb
or
sbb
push
loop
dec
jle
enter
dec
inc
add
mov
push
jl
mov
lret
adc
or
xchg
ret
mov
mov
xchg
mov
mov
outsl
ljmp
out
ss
nop
xor
adc
and
sbb
in
jecxz
sbb
lahf
ja
mov
addl
pop
fs
xchg
jecxz
sarl
icebp
jmp
lods
loopne
rcrl
dec
ja
mov
and
mov
nop
and
jle
roll
adc
mov
jno
lret
test
pop
mov
dec
aaa
xor
sbb
loopne
xchg
jp
in
jmp
inc
inc
lahf
lods
push
and
int
mov
push
xchg
sub
rorb
mov
or
fwait
int3
jg
cmpsb
ds
pop
mov
inc
mov
jne
add
dec
cmpsl
pop
test
mov
add
mov
adc
in
push
add
pop
cmc
xchg
insl
fmull
xorb
gs
jp
or
imul
xchg
sbb
fstl
dec
adc
xor
cli
inc
dec
es
xchg
rcrl
cmpl
pusha
scas
jb
sbb
cmp
push
fisttps
xlat
fwait
xor
je
stc
mov
and
cmp
stos
fcmovnb
pop
xchg
mov
shrb
push
push
inc
fwait
test
ja
dec
mov
in
push
and
shrb
mov
push
inc
fldenv
push
cmp
imulb
mov
repnz
jae
lret
jb
cmp
push
mov
inc
add
imul
mov
repnz
in
cmp
xchg
and
sub
pushf
and
test
sbb
inc
cmpsb
jnp
sbb
or
xor
mov
sti
mov
call
inc
test
inc
mov
nop
xchg
mov
insb
pop
into
arpl
jnp
xchg
xlat
movsl
xchg
std
loop
in
dec
outsl
add
mov
mov
pop
icebp
pop
lock
out
push
pop
fadds
cmp
out
or
scas
fimull
shl
cmp
lods
jmp
ja
repnz
lods
cmp
lret
nop
cs
pushf
mov
dec
xchg
repnz
xor
xchg
into
sub
cld
cmp
fistps
insb
movhps
mov
sti
jmp
add
jns
cmc
lds
push
sbb
mov
ret
fwait
call
add
xor
sub
in
xor
filds
rorb
xor
push
push
outsb
lret
mov
and
and
js
imul
incl
pop
adc
cmp
inc
dec
popa
push
imul
jbe
pop
xchg
sbb
enter
inc
popf
push
cmpsl
push
inc
iret
aad
mov
mov
pop
add
and
jge
sbb
jbe
cld
xchg
xchg
movsb
fwait
and
out
shr
mov
fldcw
pop
cmp
xchg
sbb
dec
aas
sub
xor
loope
mov
loope
mov
pop
jne
inc
dec
int
mov
pop
out
xor
inc
lcall
cli
sahf
or
subl
ja
sub
fildll
mov
jl
mov
int
pop
xchg
imulb
popf
add
cmp
test
stos
add
dec
stos
inc
xor
popa
ds
mov
jb
rcl
test
adc
pop
push
mov
mov
ja
imul
jb
ret
xchg
pop
xor
fwait
pop
pop
xchg
inc
stc
aas
mov
pop
divl
mov
stc
add
decb
in
inc
in
mov
xchg
add
gs
call
mov
mov
out
dec
push
lods
xchg
cmc
jo
mov
fcomi
leave
out
push
mov
mov
cmpsl
in
addb
xlat
push
xor
sbb
ret
sbb
popa
mov
out
cld
jmp
sub
mov
outsl
add
fldenv
stos
jno
loop
cmp
cmp
sbb
mov
push
push
cld
lahf
cwtl
jbe
hlt
pop
xor
xor
test
dec
repnz
xchg
mov
repnz
add
div
mov
xchg
xor
jnp
fists
stc
xorl
sbb
je
or
inc
std
ja
cmovg
scas
int
dec
lahf
add
mov
hlt
cmp
ljmp
mov
cltd
xchg
jnp
cmpsl
cs
int
lock
andb
mov
push
mov
je
andl
int3
cmpsl
cmp
into
cs
or
jge
popa
push
mov
mov
popfw
repz
or
das
test
ljmp
imul
sbb
dec
or
cmp
jo
outsb
mov
mov
fs
mov
shrl
rcl
std
int
jmp
or
mov
test
jp
orl
scas
js
sub
inc
fstps
pop
les
bound
test
imul
inc
xchg
outsb
aas
sub
insl
fnstenv
xor
sbb
push
into
jb
adc
cltd
and
jmp
arpl
mov
mov
repz
pop
pop
ja
shl
hlt
adc
mov
mov
mov
xchg
adc
mov
cmp
inc
gs
mov
and
in
lahf
dec
push
stos
pop
xchg
dec
push
rcll
lds
sub
sbb
dec
das
out
stos
popa
sbb
mov
xchg
dec
mov
and
in
test
in
icebp
imul
fwait
or
ds
nop
pop
dec
sar
mov
sbb
and
clc
mov
push
sbb
adc
nop
xchg
adc
push
fwait
dec
fildll
push
mov
cld
and
sbb
loope
cmp
sti
subb
sbb
cvtps2pd
imul
push
adc
cltd
add
xchg
cmp
push
mov
popa
cli
stos
and
pop
mov
std
lds
cltd
xchg
mov
or
jle
xchg
jg
insb
mov
push
test
sar
jnp
dec
aam
sbb
sarb
jge
push
sub
lea
jl
push
in
inc
xchg
cmp
sbb
and
cli
dec
and
sub
mov
test
int
and
outsb
outsb
leave
cmp
ret
popa
inc
scas
sub
jae
andb
ljmp
sbb
loopne
jecxz
push
pop
gs
and
xchg
xchg
sbb
push
sbb
in
push
leave
test
add
aad
movsl
scas
sbb
daa
mov
cli
add
jae
inc
sub
call
ret
dec
mov
movhps
clc
cmp
add
mov
ds
hlt
rcrl
sti
jae
jno
adc
fmull
and
dec
cmpsb
add
mov
mov
mov
stos
dec
xor
xchg
mov
mov
arpl
mov
jge
ret
scas
sub
add
inc
adc
ljmp
push
adc
pop
and
push
sub
jo
mov
mov
xor
loope
jb
dec
push
sub
mov
cli
repz
int
sub
adc
xchg
enter
pop
and
and
jbe
xchg
and
mov
jnp
push
aad
gs
dec
ficomps
fnsave
bound
fbstp
movsb
jne
loope
inc
cmp
movsb
mov
repz
fldcw
jns
mov
js
orps
xchg
xor
mov
ficomps
arpl
push
xlat
xchg
lahf
push
mov
daa
daa
test
outsl
mov
scas
dec
pop
xchg
xor
popf
orl
xor
lods
pop
xchg
cld
push
popf
ja
mov
aam
sub
adc
inc
cwtl
ret
and
shlb
sbb
push
out
loop
pop
sub
in
push
add
out
gs
hlt
mov
sub
adc
mov
movsl
imul
popa
jge
fcoml
popf
mov
lock
daa
fldenv
lods
dec
cmp
scas
aad
add
outsb
divl
test
xchg
movsb
insl
inc
xor
cmp
push
xchg
je
mov
int
sbb
mov
cmpsl
push
iret
dec
xchg
loope
xchg
in
jae
pop
inc
lret
jl
les
mov
push
daa
outsl
cmc
lahf
pop
sbb
dec
lds
mov
hlt
inc
add
push
lcall
mov
icebp
ja
into
lret
inc
inc
lock
lret
cmp
scas
les
enter
aam
mov
cmc
ret
iret
fdivs
push
and
cmp
add
movb
cld
subb
bound
stos
pop
mov
jge
imul
push
pop
adc
jb
test
or
push
inc
mov
sub
or
mov
adc
into
lcall
mov
push
add
push
aas
testl
aad
fwait
ret
divb
pop
aam
roll
out
and
dec
push
ja
sub
popf
inc
ret
xchg
adc
test
inc
imul
jnp
push
pop
shlb
daa
in
mov
sarb
adc
xor
pushl
xchg
test
sbb
dec
aam
pop
mov
jae
leave
xor
push
paddsw
adc
pop
es
and
jae
push
lahf
scas
pop
or
mov
push
and
into
xchg
outsb
roll
ja
mov
pusha
jecxz,pt
stos
out
push
dec
jb
sbb
inc
mov
cmpsb
cmp
sub
imul
pop
add
out
mov
pop
shll
push
ror
push
cmp
push
ss
xchg
sbb
xor
inc
lods
lds
ds
rcll
inc
push
cltd
or
shlb
out
sbb
xchg
test
or
lret
sbb
test
pushf
pushf
out
jecxz
stc
sahf
mov
lods
popa
pop
adc
test
andl
into
jae
icebp
xlat
sub
pop
out
arpl
jns
jecxz
xlat
mov
sub
lret
repnz
cmp
js
pusha
scas
xorb
dec
jmp
das
xchg
ljmp
sub
mov
out
je
jg
mov
adc
ss
int
dec
and
and
sub
fmuls
test
dec
lods
push
push
add
ja
mov
aam
dec
mov
ja
clc
shl
mov
js
jns
iret
inc
cwtl
lahf
cwtl
mov
pop
addr16
mov
mov
imul
jnp
xchg
mov
cwtl
xor
in
mov
sbb
inc
pop
arpl
data16
scas
sub
out
fucomip
pop
or
outsb
icebp
jb
pop
add
adc
shlb
mov
push
fists
lds
push
pop
clc
lsl
hlt
push
rclb
sbb
jle
lret
push
add
out
int
sbb
jmp
push
mov
cwtl
mov
cmpsb
cmp
push
dec
lods
mov
imul
lret
out
lret
stc
fsubl
cmp
cmp
mov
outsb
mov
sub
js
sub
mov
push
stos
jnp
jb
mov
lret
and
movsb
xchg
xor
cmpsb
loop
ret
imul
mov
jo
adc
pushf
mov
adc
lret
mov
pusha
shll
add
dec
aaa
lret
inc
add
frstor
jl
repz
mov
stos
cmp
sub
das
repnz
mov
je
fmull
pushf
lret
pop
cmpsb
xchg
push
pop
jge
sbb
hlt
cmp
or
sub
and
mov
sub
out
jl
cli
inc
les
lods
cs
aad
mov
add
arpl
dec
xchg
and
or
in
ja
je
mov
or
dec
adc
mov
sub
jne
sub
ss
mov
enter
adcl
mov
jmp
add
sbb
dec
and
call
mov
mov
idivb
push
jg
jmp
pop
imul
push
sub
insw
mov
fdiv
and
mov
mov
push
cmp
pop
xchg
jne
push
adc
lret
stc
fnstenv
pusha
fldl
test
fiaddl
test
loopne
dec
add
adc
mov
sarb
std
mov
test
mov
sbb
or
dec
std
bound
sub
fucomi
and
sub
data16
lcall
into
not
fbstp
mov
stos
mov
push
xchg
push
insb
out
out
in
xor
shll
inc
imul
xchg
jg
aaa
mov
adc
bound
dec
jp
jo
inc
cmpsl
data16
pop
enter
cmpsl
jno
pop
pop
leave
dec
xorb
and
mov
mov
dec
jae
pop
mov
sbb
sub
jmp
cli
jae
add
adc
pop
sarb
loopne
insl
pop
loope
sbb
jb
xor
pop
outsl
imul
imul
xchg
adc
inc
scas
push
adc
xchg
xchg
mov
mov
pop
aaa
imul
pop
mov
pop
mul
jle
mov
lock
adc
jg
roll
inc
sbb
inc
aas
dec
pop
lret
pop
enter
aas
pop
pop
inc
mov
add
and
loope
add
shll
aam
xor
xchg
mov
das
repnz
pop
mov
int3
ss
mov
cmova
or
lret
inc
dec
dec
std
int3
fnstenv
sbb
jnp
pushl
xor
mov
mov
cmpsl
jecxz
andl
cmp
or
test
lds
xor
popa
pop
lods
mov
out
rcll
mov
sub
jg
inc
push
xor
sub
inc
scas
sahf
sbbl
iret
addr16
int
mov
sbb
sbb
xor
adc
aad
mov
mov
dec
mov
sub
jp
testl
xor
push
mov
enter
add
or
or
fwait
outsl
jle
in
aas
adc
lea
cwtl
xchg
dec
mov
in
shlb
xor
insb
or
cmp
and
mov
xor
stos
or
xor
jbe
adc
int
xor
mov
fwait
pop
xchg
adc
mov
int
movsb
in
cmp
fldcw
fisubrl
pop
loope
fmulp
xchg
inc
pop
loop
fadd
repz
mov
ret
dec
jmp
and
ss
jae
dec
cmp
nop
adc
iret
shrb
sub
insl
jp
cltd
xor
mov
pop
cmovle
pop
movsb
call
mov
mov
pushf
xchg
and
mov
dec
scas
mov
mov
pop
or
bound
mov
cmp
jo
rclb
fs
adc
inc
xchg
cmp
mov
cmc
xchg
clc
sub
dec
inc
xor
add
jp
outsb
nop
mov
xchg
xchg
scas
test
sub
fsubl
push
xor
and
mov
xor
xorl
mov
jbe
mov
inc
adc
out
cmp
add
andl
push
ret
lahf
out
mov
or
xchg
adc
jno
sub
and
jp
decl
pop
push
push
mov
stos
repz
mov
lock
sbb
jl
xchg
push
dec
add
sub
je
jbe
and
push
icebp
sar
sbb
or
adc
popa
dec
adc
cmp
enter
jmp
std
stc
shlb
mov
jecxz
adc
fucom
sti
cs
sbb
xchg
push
xor
sub
jmp
inc
xchg
fimuls
ljmp
sbb
cmp
pop
push
mov
xor
push
or
out
stos
and
adc
adc
pop
icebp
imul
push
loopne
adc
push
lea
jle
mov
pop
dec
push
cmp
xor
aaa
lea
sbb
aas
or
adc
mov
addb
bound
adc
in
aam
pop
cwtl
cmpsl
stos
sti
cli
jb
xchg
fisttpl
lahf
inc
push
icebp
js
inc
outsl
xor
inc
out
mov
cmp
mov
test
rep
in
mov
mov
enter
or
outsb
or
rcrl
pusha
ljmp
jge
leave
mov
push
loope
aas
push
out
jl
aas
int
push
repz
jns
nop
fimull
adc
mov
testl
scas
out
js
xchg
shlb
mov
add
es
out
imul
and
xor
xorl
mov
out
pop
mov
mov
pusha
pop
dec
pop
xchg
cmc
imull
inc
pop
cmpsl
and
mov
and
stos
or
jp
arpl
aaa
mov
mov
dec
mov
mov
fnstsw
les
lods
subl
add
jmp
xchg
mov
test
sahf
ds
out
arpl
lret
jb
xchg
lods
popf
jmp
inc
xchg
add
lea
js
cmp
lods
jne
je
fcoms
movsl
out
push
repnz
inc
test
pop
divb
push
pop
daa
mov
pop
call
xchg
nop
loop
add
scas
and
icebp
dec
aas
addr16
sbb
int3
aad
jns
adc
mov
loope
mov
clc
xor
das
sbb
hlt
add
neg
mov
pop
and
lahf
gs
outsl
ret
addr16
xchg
cmpsb
in
fbld
cltd
jle
jne
fiadds
in
jp
or
mov
fnstenv
in
add
ss
in
and
iret
push
inc
pop
movsb
and
jo
lock
pop
lds
push
jnp
lcall
xchg
jnp
sbb
or
shrl
sbb
jns
adc
leave
test
roll
add
fs
or
add
pop
or
clc
push
mov
dec
push
mov
leave
imul
and
sub
roll
int
std
lcall
sahf
idivl
bound
push
sbb
jg
lea
sub
jbe
xor
jle
je
aaa
xchg
idivl
popa
ret
mov
stc
jae
lret
cmpsb
pop
inc
jns
adc
pop
adc
sub
mov
rorl
push
and
mov
or
mull
xchg
jge
icebp
repnz
add
adc
xchg
add
push
hlt
jbe
loope
out
push
add
adc
jl
mov
and
lock
shlb
addl
lods
aam
movsl
jbe
or
cmp
out
xchg
and
and
jmp
outsl
data16
into
sbb
push
scas
stc
mov
mov
movsl
xchg
add
xor
jnp
sbb
gs
pop
jbe
shlb
data16
mov
or
push
fsts
movsl
lret
mov
lods
shrb
sbb
cmp
sbb
cld
lret
hlt
std
bound
popa
sahf
dec
insb
stos
insl
shr
and
xchg
push
add
add
js
cmp
gs
addb
shrl
lcall
inc
add
int3
mov
ja
add
das
or
sahf
or
inc
pop
aas
inc
dec
lods
dec
jp
iret
push
fildll
adc
xlat
adc
push
enter
repnz
cwtl
push
push
lret
mov
clc
push
repz
pand
pop
xor
mov
and
jae
rcrb
push
xchg
shll
adc
test
mov
leave
in
dec
mov
sbb
jmp
mov
js
add
loope
xor
cmp
jo
pop
jp
cmp
jmp
sub
fdivp
mov
in
inc
lcall
jl
jmp
mov
push
adc
dec
jno
lea
int
mov
xchg
adc
inc
or
dec
mov
aas
bound
es
push
ljmp
repz
push
pop
adc
es
xor
cmp
pop
mov
sub
jge
sbb
lret
sub
ljmp
push
lret
test
div
movsb
pop
out
inc
push
lea
fstps
add
sbb
js
incl
jg
icebp
cs
or
adc
arpl
sub
ja
xchg
pop
inc
insl
push
push
jmp
mov
push
cmpl
push
movsl
pop
js
cmp
xor
adc
xlat
lret
daa
sub
xchg
inc
cs
icebp
cli
mov
jae,pn
aad
mov
popf
scas
xchg
mov
sti
cmpsb
mov
les
and
pop
lods
push
in
adc
dec
pop
mov
insl
add
fmulp
lret
movsl
ret
jl
movsb
sub
jle
sub
xor
xchg
ja
aam
lea
jo
cmpb
movsl
test
push
inc
adc
lock
repz
dec
aad
jl
das
or
cld
dec
aas
ficompl
pop
add
inc
rcll
jbe
jo
and
mov
mov
sbbl
and
bnd
out
shll
or
pushf
mov
jecxz
call
imul
sbb
xor
lcall
cmp
lds
sub
fxch
jnp
sub
fnstcw
gs
mov
test
or
push
je
dec
das
sbb
lods
movsb
sbb
adc
inc
xlat
addr16
mulb
mov
out
lahf
ljmp
pop
insl
cmpsl
fildl
ret
aam
pop
movb
shll
test
xor
subb
mov
shrb
jne
jmp
decb
xchg
jae
pop
gs
mov
or
dec
cmp
sub
mov
aas
add
dec
test
loop
xor
ret
cmp
outsl
push
xor
test
cli
and
lods
inc
or
out
jne
inc
and
fists
mov
ret
mov
repz
xchg
xchg
movsb
or
mov
dec
or
xchg
push
xor
pop
gs
shrl
outsb
mov
dec
adcl
out
les
push
cld
dec
jns
fwait
scas
lods
push
dec
or
icebp
dec
stos
imul
in
push
pop
lea
push
out
xchg
in
mov
repz
adc
gs
xchg
mov
outsl
fidivs
mov
imul
into
sub
pusha
mul
ss
test
cmpsb
mov
dec
imul
stc
push
icebp
mov
xchg
mov
dec
sub
xchg
pop
cmc
pop
aam
jle
mov
or
test
leave
pop
orl
jbe
pushf
cld
sub
sbb
xor
scas
insb
in
cmpsb
xor
mov
inc
call
or
lods
cmpsl
xor
or
movsb
int3
ja
cmp
pop
fimuls
push
xchg
repz
or
add
shlb
outsb
ret
jb
aaa
in
push
testl
ret
mov
rcrl
inc
mov
insl
xchg
or
inc
and
andl
fdivs
xor
pop
pop
loope
int3
loop
and
mov
sub
jns
xor
push
jne
xor
or
inc
popa
pushf
cmc
insl
mov
icebp
push
mov
mov
sbb
ss
daa
fstpl
pop
stos
sbb
push
jae
call
je
xor
inc
leave
es
cmc
inc
les
pop
sub
adc
xchg
out
sbb
xchg
aas
xchg
xor
inc
movsl
stc
clc
dec
pop
cmp
mov
mov
mov
cmp
inc
mov
adc
arpl
jb
out
xchg
nop
jae
leave
rcl
outsb
cltd
xchg
pop
dec
jecxz
mov
leave
into
ret
and
test
fwait
push
in
xchg
lea
or
sbbl
popf
fnsave
adc
inc
add
movsl
pop
cltd
les
xor
je
mov
aaa
nop
add
sub
and
into
pop
scas
xor
add
pop
out
fwait
addl
lea
mov
mov
es
sbb
mulb
outsl
pop
or
ret
addr16
jae
pop
mov
mov
adc
ret
mov
cltd
daa
pop
data16
push
xchg
sti
imul
cmpsl
inc
and
add
dec
outsb
lret
loop
daa
les
shl
scas
or
addr16
xchg
lahf
bound
push
fiaddl
jne
mov
sbb
pop
daa
and
xorl
xor
mov
mov
dec
adc
and
push
pop
dec
insl
sbb
popa
ljmp
popa
pop
inc
jno
lret
leave
arpl
add
int
adc
test
mov
stos
cmpsl
dec
xorl
addb
popf
imul
js
rcll
lea
stos
popa
out
push
stos
fimull
mov
rclb
and
arpl
pop
arpl
scas
mov
xchg
hlt
adc
cmp
movsl
test
push
xor
aad
xor
ljmp
and
icebp
pop
arpl
mov
shlb
in
lcall
mov
clc
into
ja
ret
jp
sbb
mov
push
cs
sbb
idivb
out
pop
sub
inc
add
sti
clc
add
dec
adc
dec
jo
jo
in
mov
lds
pop
out
or
ret
popf
sub
dec
hlt
ret
cld
push
or
int3
cmpsb
pop
dec
adc
arpl
aad
ss
fwait
jg
shrd
imul
push
mov
movsl
mov
ljmp
ss
in
aaa
mov
stc
clc
mov
push
add
hlt
sbb
dec
idivl
fsubr
adc
in
negb
xchg
fbld
aaa
and
inc
xchg
out
ret
imul
xchg
xor
cs
sti
pop
pop
dec
dec
fmull
sub
add
mov
push
fisttpll
mov
jnp
iret
cmpxchg
cld
push
jle
jne
jb
ds
movsl
jge
das
lahf
xchg
mov
fucomi
bound
add
je
pop
repz
scas
out
mov
inc
mov
dec
or
sub
notl
loopne
cld
shlb
imul
aaa
paddusw
mov
scas
pop
test
and
out
flds
negb
and
mov
adc
and
pop
xchg
mov
xor
sbb
jmp
xchg
sbb
cmp
lea
ja
jae
lods
cs
adc
imul
jnp
jb
int3
mov
imul
xor
daa
fldenv
push
xor
mov
fsubp
mov
sbb
mov
inc
dec
sbb
push
and
das
xor
xchg
movsb
insb
leave
jnp
xor
sub
xlat
xchg
arpl
imul
out
loop
test
mov
cli
in
out
in
setg
testl
idiv
cmp
test
sub
ficompl
ljmp
out
jg
cmp
inc
nop
ljmp
xor
into
outsb
xor
and
push
out
and
lods
mov
into
add
mov
cmp
jl
fwait
sahf
xor
pop
add
adc
aad
mov
adc
pop
outsb
imul
pop
push
xlat
jbe
mov
and
loope
or
mov
stc
xor
hlt
call
or
mov
insb
inc
pop
jnp
movsb
sub
mov
es
cmpsl
jno
imul
gs
add
mov
dec
rolb
fwait
jle
xchg
ljmp
mov
bound
cmp
jne
cmpsb
push
in
shl
mov
cmp
mov
xor
filds
shr
fdivrl
push
out
mov
or
jnp
sar
mov
sub
scas
sub
fbld
or
data16
adc
ret
cmp
jns
push
bound
adc
add
pop
cmpsl
cmc
xor
push
cld
cltd
pop
mov
jb
gs
imul
inc
or
inc
xchg
jp
add
test
imul
dec
xchg
pop
cmc
js
lds
or
into
mov
push
aam
mov
jmp
xlat
call
stos
push
xor
push
push
test
fcmovnu
jge
inc
inc
and
pop
std
mov
dec
push
orb
sbb
jg
push
inc
outsb
cmp
cltd
push
orl
out
mov
jno
cltd
nop
cli
imul
outsb
ja
fs
andb
iret
pop
dec
jns
dec
adc
ret
cmp
pop
popf
or
or
js
repnz
shlb
iret
xchg
jnp
push
out
in
inc
mov
sbb
dec
jle
aad
daa
dec
in
into
pop
pop
pop
jp
push
out
jecxz
and
inc
and
repz
dec
fisttpl
jle
and
xchg
push
push
rcrb
mov
lea
pop
out
push
mov
push
xchg
adcl
mov
adc
in
and
or
sub
mov
cmp
enter
std
clc
bound
dec
jmp
push
fildll
adc
cmp
mov
mov
dec
cmp
jle
cld
sbbb
pop
jl
xor
mov
add
inc
mov
mov
or
je
aas
popa
and
leave
int3
pop
push
hlt
add
repnz
sbb
dec
repnz
xor
das
or
cs
mov
inc
xchg
inc
xchg
jb
xchg
xchg
int3
jns
push
fsubl
push
push
stc
jae
nop
cmp
dec
lret
andl
loope
dec
push
iret
icebp
cmp
mov
sub
popf
aas
icebp
dec
and
mov
stos
daa
scas
pop
lds
jb
sbbl
in
mov
mov
fldenv
icebp
divb
xor
out
ret
dec
popa
icebp
xor
xor
push
xchg
cmp
jnp
jg
movsb
int3
insb
xchg
stc
xlat
leave
call
sub
aam
ljmp
scas
mov
loop
test
in
xor
out
cmp
mov
xchg
outsl
jmp
lret
fld
loope
fs
mov
sub
push
ljmp
sbb
adc
outsb
fnsave
fdivl
push
adc
sti
adc
push
adc
fcmovnb
shl
push
adc
cmp
push
cmp
leave
jbe
adc
cs
push
sbb
int
test
insb
jns
std
jmp
xor
lcall
cltd
push
outsb
out
in
cmc
xchg
xlat
or
and
xlat
xchg
int
dec
je
cld
adc
sub
sub
je
movsbl
dec
jbe
lods
out
mov
and
mov
adc
fidivrl
int3
or
dec
scas
cmp
loopne
inc
cmp
sbb
and
xor
loopne
sub
dec
add
mov
test
out
stc
push
in
aas
jl
out
mov
and
iret
cli
imul
push
and
popf
xor
xchg
test
call
mov
ret
aaa
adc
popa
cs
andb
jns
test
dec
pushf
xchg
stc
add
cld
scas
inc
fcom
cmc
ss
rorl
inc
lock
addr16
scas
in
test
sti
xchg
mov
dec
roll
test
icebp
xor
or
xor
fimuls
mov
jne
pop
inc
pop
sub
jo
push
dec
add
rcr
out
fisttps
push
push
jg
lea
mov
dec
lcall
jae
mov
or
add
mov
shll
or
ret
jno
add
jb
jns
leave
sub
or
adc
mov
add
addr16
mov
leave
mov
xchg
jbe
push
jmp
leave
iret
addr16
sbb
fcomps
add
lds
or
xor
in
mov
insb
add
test
dec
dec
cmpsb
pop
negl
cmp
or
dec
cmp
in
sti
jo
fs
cmpsb
fcomps
outsl
cmp
push
add
loope
cmp
or
xor
clc
cmpsl
into
arpl
adc
push
std
jb
jnp
sbb
push
pop
aaa
xchg
out
cmp
cmp
ret
scas
int
les
shr
pop
es
mov
jne
or
imul
ss
sti
xchg
shrl
in
cmp
push
add
inc
fbstp
pop
sbb
jg
inc
stos
and
lds
pop
stos
mull
cmp
xor
cpuid
and
pop
jecxz
pop
push
jbe
mov
push
cmpxchg
jmp
cmpsb
idivl
shll
ja
mov
add
imul
imul
fwait
push
iret
out
pop
pop
dec
mov
push
dec
fwait
xor
hlt
pop
sti
and
and
sbb
jecxz
or
inc
aam
jbe
int3
inc
and
in
shlb
and
mov
sahf
out
int
sub
pusha
in
insb
and
jmp
in
imul
ret
xor
clc
sbb
mov
jg
and
xchg
out
mov
nop
nop
and
mov
cwtl
std
pop
lret
pop
pop
sub
jns
cli
dec
dec
dec
add
std
jmp
sub
mov
fwait
rol
pop
xchg
push
pop
xchg
cwtl
mov
mov
pop
mov
dec
ds
xor
sub
shlb
inc
in
shlb
call
lds
xor
xchg
sti
fistl
stos
adc
imul
pop
js
lahf
aad
or
shr
pop
mov
xchg
jne
inc
adc
int3
xorl
jo
jbe
icebp
mov
lcall
inc
dec
pop
xor
xor
repnz
lret
testl
fsubl
stos
movsl
stc
bound
lock
mov
pusha
daa
push
popf
sub
repnz
or
ss
pop
iret
repz
bound
or
cmp
push
add
clc
dec
sbb
mov
pop
add
out
mov
pusha
call
cmpsl
js
inc
pop
jle
push
pop
dec
incl
push
mov
movsl
or
inc
fisubl
mov
xchg
jbe
jg
pop
or
sub
jmp
mov
inc
dec
push
jle
insl
sarb
sub
sub
stc
pop
pop
ss
dec
and
popf
in
sbb
xor
mov
adc
lock
mov
xor
dec
popf
cwtl
loop
xlat
ret
test
loop
inc
or
scas
aas
mulb
sub
fimuls
ja
fstpt
xor
sub
mov
mov
out
popa
pop
mov
dec
inc
aaa
call
loopne
jne
in
mov
ret
aam
call
fldenv
add
and
mov
jb
dec
adc
dec
rclb
dec
or
cmpsb
sub
testb
scas
lcall
lcall
mov
add
push
out
shlb
cld
sub
lahf
fdivrs
sub
mov
inc
cmc
mov
adc
sub
rorb
adc
xchg
adc
sub
dec
out
out
dec
hlt
mov
mov
lock
jns
push
pusha
lods
leave
sbb
fmul
jmp
leave
cmp
mov
ds
push
fisttpll
jp
cmc
repnz
rcl
pop
pop
and
mov
dec
dec
jb
push
jle
mov
cmc
push
mov
xor
lret
sbb
sub
cmp
add
dec
in
inc
mov
jmp
sub
add
andb
repz
push
push
push
xchg
xchg
dec
mov
in
adc
pop
les
loopne
pmaxsw
or
xchg
xchg
cmp
pop
insb
sub
data16
xchg
insl
jbe
lea
stc
pop
cmp
iret
mov
xlat
jnp
in
pusha
popf
aam
sahf
es
mov
mov
cmp
adc
outsb
lcall
mov
xchg
frstor
repnz
clc
push
adc
jns
lret
inc
mov
cmp
fs
dec
pop
pop
ror
sub
mov
dec
sbb
je
dec
and
jmp
mov
pop
jg
jmp
dec
push
test
leave
jmp
pop
adc
or
clc
je
sub
sub
sbb
sub
fsubrl
adc
or
or
sbbb
push
mov
jle
sarb
rolb
xor
iret
test
xchg
or
xchg
frstor
mov
pop
adc
hlt
lret
xchg
ret
outsb
xchg
cld
mov
pop
mov
clc
loop
call
arpl
pop
push
mov
es
loopne
mov
sub
mov
and
adc
mov
test
push
subl
push
stos
and
mov
pop
gs
stos
fcoml
inc
xchg
sub
rcll
xchg
push
int
ret
mov
add
sbb
cmp
cwtl
outsl
es
dec
dec
xchg
sub
into
adc
es
shll
cmp
or
test
sub
jmp
fbld
jbe
loopne
jns
sub
cmp
and
fistpl
or
and
icebp
jae
jne
ret
push
mov
test
pop
inc
mov
and
pop
mov
jecxz
pop
dec
cmp
pop
push
xor
hlt
icebp
aad
mov
push
ds
outsb
cltd
incl
les
cwtl
inc
xchg
addr16
adc
sub
jns
cmp
push
mov
cmp
cmp
jb
jle
fs
sbb
xlat
imul
into
sbb
and
in
dec
cmp
xor
ljmp
cmp
lods
push
enter
mov
mov
add
mov
out
dec
enter
lods
bound
cmp
and
outsb
inc
or
daa
lret
stos
sub
leave
cmp
icebp
in
lods
das
or
pop
outsb
ret
rcrl
sahf
mov
xor
jge
sbb
call
arpl
cltd
jae
scas
bnd
xchg
xlat
cmp
mov
adc
push
rolb
and
fcompl
iret
pop
sbb
sarb
cmp
sub
repz
or
pop
cmp
iret
pop
shrb
inc
daa
mov
inc
dec
mov
sahf
in
mov
adc
sbb
inc
xchg
cmp
ja
and
cmpsl
pop
xor
repz
pusha
xchg
pop
cwtl
cmp
repnz
xor
cld
push
adc
or
pushf
jb
cmc
cld
test
test
jbe
jne
test
mov
pop
xor
rcrb
gs
daa
stos
dec
adc
dec
pop
enter
stc
cwtl
cmc
sbb
into
sub
mov
cltd
ret
jl
push
loopne
cltd
cmp
add
inc
cmove
pusha
leave
inc
mov
shrl
sub
pop
shll
xchg
push
leave
mov
repnz
mov
sub
dec
adcb
rorb
push
add
into
or
jb
inc
in
lea
sub
int
imul
lea
mov
out
aam
testl
fbld
sub
jmp
mov
call
cli
sbb
mov
lea
mov
xor
icebp
jns
rcll
es
mov
lahf
mov
fsubr
lods
push
gs
pop
daa
push
into
lret
ljmp
and
mov
push
std
sti
repz
lea
stos
data16
pop
in
lds
adc
std
pop
push
cwtl
fwait
or
cmp
sbb
loop
test
mov
daa
adc
dec
jno
mov
cwtl
movsb
pop
mov
daa
loopne
shrb
adc
roll
lcall
xchg
loop
mov
aad
out
lret
mul
iret
or
imul
rcrl
cld
outsb
ja
out
mov
cmpsl
mov
in
xchg
loopne
ror
cmp
sub
mov
cmpsl
jne
pop
out
xchg
cmp
jmp
mov
loopne
sbb
scas
jp
push
mov
jo
arpl
push
leave
fisttps
in
adc
mov
adc
js
test
je
test
xorl
roll
mov
adcb
lcall
mov
mov
lods
jecxz
mov
jne
lock
jg
mov
jns
and
inc
int3
jle
ljmp
jnp
gs
repz
ret
cli
rol
sbb
test
clc
rcll
mov
and
and
pop
dec
xor
lods
nop
dec
inc
js,pt
shll
dec
mov
sub
jg
sub
dec
lcall
icebp
enter
push
cmp
jnp
or
mov
into
dec
xor
mov
daa
popa
sbb
inc
dec
fcmovbe
add
ja
mov
loopne
dec
aaa
dec
fcmovnbe
pop
xor
clc
pop
roll
lods
pop
cmp
mov
push
into
push
and
mov
loop
jle
pop
cmp
mov
sub
jmp
scas
sbb
sub
loopne
cmpl
xchg
sarl
xchg
mov
clc
push
or
sub
sbb
pop
mov
jno
es
jl
ja
jl
dec
xchg
bound
xchg
ds
and
test
cmp
sbb
je
popa
push
icebp
gs
mov
pop
insb
int3
dec
cld
repz
cmpsb
dec
int
inc
js
lods
js
imul
arpl
cmp
test
jbe
mov
hlt
pop
lods
lods
xor
xchg
js
xor
testl
sar
lds
shll
adc
lret
cmp
push
and
pop
mov
out
mov
and
out
mov
adc
inc
add
cld
inc
xor
pop
pavgb
adc
mov
mov
lret
rep
push
cs
gs
pop
cs
mov
inc
adc
or
xchg
test
cmp
pop
cmc
add
fnstsw
xchg
les
xchg
push
xor
xchg
mov
push
repz
mov
push
push
arpl
jne
insl
fstl
sbb
imul
add
ljmp
loop
pop
mov
je
push
mov
xor
xchg
shrb
dec
ss
sahf
xor
inc
mov
mov
push
pushf
outsb
daa
sahf
sub
jecxz
aaa
call
add
ret
je
in
mov
fsubrl
fadds
xor
xchg
add
shrb
inc
mov
or
mov
sbb
cmp
jnp
pop
jns
sbb
or
das
filds
adcl
mov
sub
mov
call
addr16
inc
push
sbb
adc
push
int
mov
xchg
stos
movsl
fwait
push
lcall
cmc
pop
fistpll
push
pop
stc
test
fstpl
and
cmp
not
adc
out
add
in
test
sahf
xchg
pop
hlt
mov
jp
push
xchg
pop
sbb
insl
mov
mov
cmp
jecxz
push
cltd
xchg
adcl
or
outsl
popa
cmp
inc
adc
lock
mov
inc
ss
cmp
adc
mov
lahf
mov
pop
sahf
fldcw
repz
xchg
mov
addr16
lret
xor
into
pop
out
xor
sti
mov
cld
notb
das
jo
out
mov
aas
pop
xor
and
stos
inc
test
push
lahf
mov
icebp
repnz
loopne
es
dec
fsubrs
ljmp
jmp
das
int3
scas
cmp
aaa
xor
aas
xchg
ret
pop
and
cmpb
test
aaa
rolb
scas
stos
mov
jg
dec
std
inc
xchg
in
cltd
arpl
dec
pop
pusha
cmc
and
jns
leave
inc
outsb
push
mov
cld
ja
adc
gs
sbb
sti
mov
inc
cmp
andl
sbb
out
cld
imull
mov
mov
xor
and
sti
dec
cs
in
dec
lds
ds
jns
notb
add
out
jmp
addr16
aaa
xor
adc
sarb
out
ret
inc
mov
inc
xor
fsub
sahf
in
xorb
or
pusha
push
push
loope
xchg
adc
mov
mov
imul
mov
sub
loope
test
ficoms
mov
popa
in
cltd
int
xor
dec
cld
adc
das
aas
push
imul
mov
inc
push
clc
mov
fdiv
sarb
pushf
sbbl
push
ljmp
and
sub
pop
or
mov
push
cs
test
cld
cli
dec
push
daa
arpl
sbb
mov
xchg
xchg
dec
pop
test
out
adc
push
popl
dec
add
cmp
je
stos
mov
pop
mov
outsb
sti
ret
test
pusha
xchg
sahf
mov
and
out
dec
inc
and
in
add
jl
push
pop
pop
sbb
and
ds
mov
inc
incb
test
outsb
jne
or
loopne
xchg
imul
fistps
pop
inc
pop
in
mov
mov
imul
cmp
xchg
jno
in
cli
je
lods
push
cmp
lock
mov
jb
loop
hlt
sbb
imul
jle
add
sub
repnz
aaa
mov
pushf
push
adc
ret
aam
inc
cmpsb
and
push
cmp
adc
arpl
imul
addr16
stos
ljmp
fistpl
adcb
add
jo
les
cmp
stos
arpl
pop
adc
leave
ds
lock
push
jge
hlt
notb
xchg
xlat
push
mov
mov
mov
roll
lahf
cmpb
iret
rcll
mov
mov
pop
sbb
in
adc
adc
or
rorb
xor
xor
inc
mov
iret
shl
mov
cs
push
sbb
addr16
movsb
shll
push
mov
adc
fwait
dec
aas
cmp
cmc
or
xchg
mov
mov
psubq
xchg
jle
ss
jecxz
sub
xchg
pop
cld
je
les
jnp
cld
roll
jo
fs
xchg
and
cmpsl
je
popf
or
xchg
mov
pushf
lea
not
enter
sbb
push
sbb
jle
sub
mov
sub
je
rcl
iret
xchg
scas
sbb
pop
icebp
or
inc
insl
add
add
repz
ja
xchg
sbb
repnz
test
inc
cmp
fidivrl
aam
das
adc
fldl
shlb
hlt
and
adc
popf
lret
sbb
out
imul
and
jg
xchg
pop
outsl
mov
sub
pop
test
pop
pop
adc
mov
ret
fs
mov
test
stos
xor
push
out
and
repnz
scas
fisubrl
enter
cmp
insl
dec
cmp
inc
cs
fisubs
aaa
popa
sti
bound
outsb
testb
jge
and
ret
movsl
mov
sub
pusha
loope
loop
nop
or
nop
movsb
mov
setns
or
daa
rclb
gs
or
add
pop
fistpll
fsubrl
push
cmpsl
mov
mov
pushf
shrl
inc
push
and
pop
inc
dec
add
mov
imul
inc
mov
push
or
ja
and
mov
adc
jmp
push
or
loope
mov
and
clc
daa
je
paddusw
imul
nop
sub
pop
cwtl
loop
xchg
movb
mov
mov
dec
inc
jecxz
pushf
adc
pop
mov
out
mov
lock
cltd
fldcw
xchg
pop
pop
hlt
sbb
icebp
notb
jl
shr
mov
in
mov
adc
mov
mov
mov
call
inc
jb
inc
pop
pop
outsb
pusha
jmp
int3
out
sarl
fdivr
mov
clc
xchg
enter
imul
outsb
nop
jae
cmp
insb
add
push
idivl
mov
adc
aas
cwtl
rorb
lret
mov
push
shl
sbb
inc
adc
fdivp
idivl
or
fwait
mov
push
aaa
mov
stos
cmp
lcall
in
jno
jne
mov
xchg
push
inc
jmp
xchg
lcall
into
mov
cltd
and
jg
fstp
test
dec
mov
loope
ret
jno
outsb
outsb
loop
and
xlat
xor
mov
rcr
fdiv
pop
or
sbb
xchg
setle
cmpsb
xlat
in
xchg
sti
rcrl
cmp
ds
lods
cli
scas
je
out
cltd
addl
dec
outsl
test
roll
mov
jnp
jp
mov
loop
jno
adc
in
mov
jmp
iret
cmc
mov
stos
or
or
call
push
jbe
hlt
push
jo
jp
mov
stos
mov
mov
dec
push
mov
sub
stos
loopne
outsl
cwtl
jo
sbb
rclb
int
insl
xor
inc
pop
test
dec
jnp
clc
adc
push
adc
imul
cmpl
call
in
dec
mov
adc
fadd
or
xchg
lea
and
push
orb
or
and
mov
sub
cmc
popf
inc
xchg
in
aas
push
ljmp
pushf
lahf
inc
jne
cmp
mov
orb
pop
jle
cmc
hlt
xchg
or
mov
imul
jne
jmp
bound
das
imul
out
cmp
cmp
fwait
scas
call
scas
and
or
ljmp
cmp
fnstsw
repnz
sub
add
hlt
lock
and
fdivrs
sub
dec
mov
push
cmp
sub
inc
shrl
jmp
in
pop
int
push
test
mov
sbb
inc
shll
call
push
jb
jno
push
mov
jne
or
push
mov
insl
imul
mov
scas
xchg
cmc
or
out
sbbb
das
cmpsb
or
sub
adc
sahf
lret
fstpt
mull
pusha
dec
cmp
mov
scas
xorl
add
mov
arpl
mov
xchg
cmp
mov
outsb
adc
or
loope
dec
jg
mov
push
cmc
movsl
outsl
std
mov
xchg
add
imul
int3
gs
mov
inc
rcrb
xor
fmuls
dec
popa
cmp
inc
loope
push
aam
dec
pop
test
and
stc
insl
push
sub
stos
xor
scas
jecxz
push
pushl
xchg
and
lcall
dec
mov
inc
sbb
mov
sarb
xor
mov
es
aaa
pop
icebp
mov
stc
sti
pusha
and
rcll
int
adc
jae
push
mov
int3
cmp
sub
add
pop
mov
xor
mov
mov
lret
xor
jl
mov
es
jae
adc
inc
lods
jle
xor
notb
scas
mov
jg
test
lods
dec
xchg
xor
stos
stos
lods
mov
and
sarb
ret
mov
xor
inc
pop
add
xor
push
test
in
push
add
mov
test
add
loope
push
adcl
pushf
fldcw
lods
sbb
jp
mov
repz
dec
das
les
mov
adc
sbb
mulb
shlb
mov
xchg
lds
mov
rol
lea
mov
shll
dec
xor
mov
subl
das
repz
mov
test
xor
inc
bound
hlt
and
stos
lcall
add
inc
loope
pop
call
std
inc
mov
xor
hlt
push
out
js
pop
push
sti
sahf
sub
icebp
jl
flds
add
xor
cli
jmp
mov
lret
fmull
adc
and
lret
push
jl
mov
psrlq
inc
pop
adc
adc
adc
addr16
data16
std
and
cmpb
mov
pop
dec
sub
sbb
pop
sbb
push
sbb
jge
xchg
or
mov
stc
pop
mov
incb
iret
loop
mov
ror
push
addr16
mov
xor
mov
in
xchg
jb
or
repz
inc
test
xor
mov
inc
sbb
das
outsb
jno
pusha
push
nop
pop
lret
lret
lock
or
dec
pop
sahf
lock
cli
jge
pop
cmp
jg
jns
nop
dec
cmpsb
push
hlt
stos
dec
mov
inc
call
jbe
ja
fs
and
daa
push
fsts
jp
adc
fistpl
inc
insl
daa
cli
pushf
out
xchg
mov
out
push
pop
js
push
push
mov
adc
aaa
push
push
loop
test
adc
out
fbld
xor
test
adc
or
adc
push
and
test
fistpll
and
xchg
xchg
or
sub
clc
mov
jae
mov
loop
jo
xor
mov
mov
dec
dec
das
jnp
xor
jle
xchg
mov
loopne
bound
push
adc
inc
mov
push
mov
and
js
jg
sbb
test
xchg
outsb
ss
add
and
cmc
sahf
filds
addl
jb
jmp
int3
sbb
xor
roll
cmp
cmpsb
movsl
inc
push
xor
cs
stos
les
nop
lcall
cmp
icebp
push
sub
pop
adc
mov
loope
jno
xchg
mov
std
mov
pop
fidivs
add
cmp
mov
sub
inc
pop
lret
xor
aad
loopne
mov
jo
popa
mov
clc
mov
push
dec
push
mov
in
cld
add
outsl
dec
cmp
fstl
pushf
icebp
or
lahf
aas
push
sub
cmc
mov
leave
int3
xlat
push
push
xlat
stos
cltd
sti
rcrb
jo
je
lods
loopne
sbb
lahf
aaa
adc
and
jp
cmp
mov
push
inc
xchg
and
ss
clc
and
addl
and
rcrl
sub
pop
xor
and
in
add
push
xlat
rcrb
daa
mov
lcall
rcll
int
shl
inc
xor
in
and
in
and
mov
adc
filds
es
pop
lahf
mov
xchg
inc
fstl
std
adcl
inc
data16
mov
mov
fwait
outsb
sub
out
lret
push
push
adc
xor
scas
push
popf
and
lods
adc
jmp
lds
cmp
push
ja
bound
scas
pop
inc
cmp
sub
sub
mov
jbe
std
sub
loopne
xor
sbb
in
mov
pop
fdivrs
and
mov
and
and
fmul
xchg
add
iret
sbb
inc
mov
adc
aad
orb
dec
js
cmpsl
add
aas
mov
jecxz
stc
stc
sti
inc
sub
mov
in
fisubrl
lret
dec
insb
xchg
xor
jno
and
arpl
mov
push
fcmovne
xchg
popf
pop
cmpsl
pop
push
lcall
add
mov
add
xchg
push
sbb
in
ds
sbb
jle
into
into
and
rcl
xor
inc
nop
iret
aas
gs
cwtl
stos
xchg
popl
lcall
jae
imul
pop
mov
and
mov
sub
xchg
int
aam
ret
outsb
mov
xlat
sbb
and
push
outsb
popa
xor
shlb
mov
jne
inc
pop
jl
movsl
lds
sub
out
lods
outsb
sub
inc
in
cs
js
mov
pop
mov
jp
inc
sbb
mov
clc
stos
in
test
cmp
into
rcrb
mov
mov
test
push
cmp
and
in
andb
leave
scas
repnz
lods
inc
sbb
lret
sub
mov
mov
rcll
xchg
xor
mov
imul
mov
test
jge
adc
or
mov
mov
pop
xchg
mov
push
and
push
inc
jne
and
dec
pop
mov
ja
jbe
or
xor
jno
sbb
dec
mov
mov
xchg
mov
sbb
dec
sarl
push
or
push
inc
pop
mov
mov
sbb
in
out
jbe
mov
jbe,pt
cmpsl
mov
mov
cmc
int3
cli
adc
jge
push
call
or
lods
popa
mov
fldt
bound
imul
addr16
cmp
popf
movl
mov
lahf
dec
xlat
mov
jg
adcl
hlt
mov
stos
push
outsl
outsl
into
ret
loope
jge
lods
mov
push
xorb
pop
mov
xchg
vpshufd
sar
fsub
xchg
pop
in
out
shll
enter
mov
sbb
mov
mov
call
jg
jp
movsb
mov
or
inc
push
sbb
mov
sbb
lcall
xor
cmpsb
imul
pushf
loope
jle
xor
dec
push
sub
dec
in
inc
f2xm1
or
into
pop
iret
lahf
fiaddl
outsb
cli
mov
out
mov
test
pop
mov
inc
add
fimuls
sbb
das
or
rol
les
mov
mov
xchg
xorb
pop
out
and
push
aad
inc
push
rorb
cmp
dec
std
in
inc
sahf
pop
fnstsw
out
push
inc
addr16
stos
sub
jo
inc
imul
mov
push
mov
sti
outsb
add
ret
xchg
bound
sbb
jl
add
add
call
enter
rclb
mov
mov
jnp
adc
lods
cld
fidivrl
cmp
ret
mov
loope
pop
lret
cmp
inc
ss
notrack
jecxz
movl
xchg
xchg
hlt
mov
outsl
popa
and
xchg
data16
mov
in
cmpsb
pop
arpl
dec
ljmp
mov
add
aas
lods
cmp
add
stos
cld
push
in
push
aas
mov
out
dec
bound
pop
mov
aas
fdivs
mov
bnd
loope
push
fiaddl
jnp
outsl
adc
lcall
lcall
out
or
mov
shll
cmpb
or
inc
lret
add
jns
jbe
lret
loope
movsl
push
cld
ljmp
mov
icebp
aad
jp
scas
mov
es
push
xor
add
std
addr16
cmp
inc
pushf
cs
push
pop
xlat
sbb
test
jg
push
pop
inc
sub
cli
xchg
sahf
push
faddl
mov
lcall
fld
fcmovnbe
popf
dec
mov
xlat
adc
add
cwtl
cltd
fmuls
std
adc
xchg
mov
dec
xchg
data16
mov
lea
insl
or
dec
mov
xchg
lret
imul
pop
cmc
mov
jns
mov
push
adc
sub
jg
inc
or
and
dec
test
and
mov
repnz
pop
data16
arpl
jle
popa
push
jbe
fidivl
nop
test
sbb
cld
or
sbb
mov
psubusw
adc
jo
push
jmp
dec
pop
xchg
aam
push
ret
in
sub
adc
ljmp
icebp
cmp
mov
pslld
or
xor
mov
out
nop
out
fwait
test
xchg
xor
adc
mov
dec
sbb
dec
dec
add
dec
sarl
mov
sub
loopne
xchg
xchg
xchg
cmpsb
xor
fs
cmpw
mov
xchg
ret
jmp
sub
sbb
test
lods
pop
popf
stos
inc
int
rcl
popf
lock
xchg
jns
mov
leave
xchg
inc
jb
and
movsl
mov
sbb
xorb
mov
fsubs
xchg
push
jo
xlat
mov
xor
ss
mov
push
jle
ja
or
stos
mov
leave
mov
aad
inc
mov
sub
xchg
out
movsb
mov
sub
and
xchg
push
jne
push
imul
popf
stos
aam
jae
int
iret
xlat
fistps
jp
nop
sbb
mov
sbb
fdivrs
push
fidivrs
jecxz
mov
fucom
sbb
jl
mulb
xchg
arpl
push
lds
or
jg
dec
adc
in
insb
xchg
cmp
sub
lret
pop
nop
pop
or
adc
test
int
movsl
xchg
popa
or
sbb
and
pop
push
cmpsb
pop
adc
movsb
test
jge
lods
iret
in
pusha
cmp
loope
sbb
ja
pop
adc
negl
push
stos
cmc
ds
leave
push
cmp
insl
mov
fstp
pop
or
mov
in
jecxz
pop
repz
push
jp
fistpl
sarb
leave
mov
jmp
aad
in
out
mov
test
xchg
rclb
add
in
stc
outsb
sub
arpl
jecxz
mov
push
arpl
lahf
pop
add
out
fnstsw
xchg
and
ss
xor
leave
lods
mov
int3
sbb
push
test
dec
mov
xlat
cmp
pop
int3
xor
mov
mov
mov
push
imul
mov
inc
pop
cmp
cmc
rcll
roll
jae
in
ret
inc
pop
icebp
aad
rcrb
call
xchg
sbb
movsb
inc
aad
jbe
in
dec
shlb
imulb
jg
push
out
in
and
test
adc
jmp
pop
jl
jl
and
sarl
sbb
adc
lods
dec
pop
mov
mov
pop
fwait
lret
fcoml
pop
cmc
aaa
sti
cmpsb
mov
cltd
xabort
pop
fwait
dec
mov
dec
call
test
ret
or
scas
pop
daa
pop
movsl
mov
shll
sub
jns
cs
jae
sbb
stos
adc
push
mov
subb
stos
das
movsb
dec
shll
pop
inc
insl
scas
dec
mov
int3
cmpsb
out
daa
fdivrl
dec
lahf
pop
movhps
push
int
and
add
jecxz
mov
subb
or
push
mov
pop
add
jo
adc
ljmp
push
and
dec
mov
mov
insb
inc
mov
xor
xchg
cli
dec
fadds
push
xchg
mov
mov
daa
pop
jmp
lods
and
scas
insb
dec
cld
mov
mov
xchg
lods
sarb
sub
loope
and
scas
jge
loope
in
sar
fsubp
fmuls
push
sub
xchg
pop
sbb
cld
dec
fnstcw
test
mov
push
jecxz
dec
sbb
roll
jne
movsb
pop
in
jmp
cld
sbb
icebp
mov
test
jp
jb
dec
icebp
cmp
mov
lods
shl
scas
stos
pusha
mov
mov
test
pop
enter
sbb
lret
and
imul
stos
cli
jecxz
mov
mov
push
mov
sti
imul
loope
fcmovb
sahf
dec
sahf
mov
mov
lods
loopne
imul
mov
aam
jge
mov
lahf
inc
mov
ret
inc
push
sub
fbstp
sti
mov
call
adc
mov
and
test
jle
mov
ret
pop
js
cmpw
mov
push
in
into
cmp
add
cli
loop
xchg
mov
cli
jno
sarl
sub
xor
cmp
mov
ja
inc
sub
shlb
jbe
sar
mov
insl
and
adc
cwtl
mov
das
je
xor
adc
cltd
dec
rorb
fldl
pop
inc
in
shrl
mov
jb
mov
sub
jbe
cmpsb
subl
jg
lahf
or
lret
aaa
dec
ret
retw
in
pop
cltd
xchg
adc
sub
mov
in
in
push
mov
stc
in
clc
nop
int
scas
mov
mov
mov
push
push
jle
sahf
add
fsubl
sbb
std
xchg
sarl
inc
inc
xchg
xor
cmp
jge
repnz
add
push
mov
in
mov
mov
pop
inc
sbb
dec
sbb
out
push
rcrb
jnp
in
cli
dec
test
push
sar
push
cmp
insb
mov
xor
inc
lahf
cmp
int3
sub
xchg
mov
dec
pushf
add
neg
add
xchg
addr16
lods
cli
and
mov
dec
jae
or
int
sub
mov
push
test
insl
out
in
inc
pop
cmp
mov
add
lods
jbe
in
in
ljmp
loope
in
mov
cmp
lods
push
add
mov
fwait
or
pusha
sbb
cmpsl
mov
mov
cmpsb
je
les
out
jl
dec
pushf
clc
add
push
stos
push
sub
lock
pop
cmp
add
daa
sub
cld
jl
mov
inc
mov
lret
jg
rclb
push
xor
bound
mov
je
mov
sbb
or
das
inc
jnp
pop
dec
mov
and
fistpll
lods
sbb
out
mov
loop
lret
test
ss
icebp
mov
mov
mov
pop
movsl
add
popa
xchg
or
rcrb
ja
lret
imul
fidivl
adc
pavgw
xchg
xlat
xchg
inc
daa
xchg
popa
out
mov
sbb
mov
push
ss
negl
push
aam
mov
fcoml
pop
je
jnp
popa
xlat
fwait
push
aad
pop
sti
mov
aaa
mov
sub
dec
lahf
cs
jns
lock
out
lret
xor
xchg
and
mov
ja
and
pop
jge
gs
push
fucomp
dec
mov
xchg
xor
push
mov
loop
or
add
leave
cmp
mov
fisubrs
out
fisttps
in
insb
out
scas
sbb
std
jp
and
out
sub
dec
xor
and
dec
mov
data16
sbb
in
xchg
insl
pop
lahf
mov
jg
sub
getsec
mov
ja
testb
jmp
ret
and
mov
mov
sbb
sbb
push
pop
scas
sar
add
insl
testl
mov
pop
dec
xchg
pop
lret
jmp
sbb
and
enter
dec
xor
fs
or
test
xchg
adc
inc
fldt
leave
mov
out
mov
sahf
ja
lea
xchg
adc
inc
mov
stc
iret
add
iret
adc
popf
jb
arpl
mov
mov
pop
insb
fidivrl
loope
xchg
push
dec
sbb
jno
ret
or
outsb
scas
xchg
push
nop
aad
cld
out
and
sbb
cmp
push
frstor
dec
leave
test
mov
add
xor
lods
mov
push
pop
sub
inc
xchg
out
pop
jns
mov
loope
nop
push
sti
push
xchg
sbb
cs
sub
pop
or
jmp
sub
in
outsl
clc
in
mov
ljmp
jmp
add
mov
adc
sbb
data16
push
xchg
inc
sub
sbb
rorl
push
popl
ja
push
orb
push
pop
movsl
icebp
loop
jg
popf
mov
push
out
lea
outsb
imul
pop
hlt
add
mov
cs
xchg
lcall
shll
movsl
mov
push
negb
cmp
inc
jge
mov
movsl
dec
and
xchg
dec
roll
add
xchg
ljmp
xor
xlat
or
les
xchg
negb
lcall
cmc
shlb
cmp
ret
xchg
shrb
inc
lods
or
bound
xchg
mov
and
jnp
in
out
dec
push
imul
mov
pop
aad
dec
cmpsb
repnz
fnstsw
pop
cmp
cmp
test
push
inc
inc
fucomi
stos
loope
sbb
jb
cmp
jmp
lods
movsb
sub
mov
ljmp
test
sub
dec
repz
cmpsl
xlat
or
outsl
jg
ret
add
push
inc
adc
push
das
sub
or
ret
xor
mov
or
cs
or
cmp
stos
pop
push
fsub
popa
popa
add
sti
negb
jno
adcl
xor
cltd
adc
jae
add
and
mov
movsb
or
mov
lea
test
aaa
lds
xchg
mov
mov
sub
jbe
push
lock
leave
mov
mov
std
sahf
push
cmp
jecxz
push
cmp
into
test
xchg
insb
fwait
pop
dec
ret
imul
xor
and
jp
xchg
dec
test
xor
orl
xor
fs
outsl
and
inc
fiaddl
jp
sub
or
sbb
xor
push
push
int
cmp
mov
fwait
inc
push
in
cltd
idiv
into
lret
xchg
fs
dec
les
sbb
dec
jnp
arpl
push
xor
pop
and
setg
sub
xchg
xchg
aas
and
mov
cli
xchg
rorl
loop
xchg
ss
adc
rcrb
mov
adc
jbe
jne
jecxz
jg
insl
pop
xor
fistps
pop
sub
stos
in
movl
pop
mov
dec
mov
rolb
sahf
inc
adc
adc
cmp
adc
addr16
mov
xlat
outsb
jg
fiaddl
sub
xchg
jle
cmp
loopne
push
xchg
push
movsb
jmp
xchg
sub
jns
adc
mov
jae
xchg
adc
xor
dec
stos
or
dec
xorl
sarb
andb
xchg
roll
inc
pop
mov
adc
andl
jb
sub
push
aam
icebp
pop
aad
push
xor
iret
lods
and
mov
inc
enter
mov
arpl
je
inc
mov
xor
test
cli
sti
push
sub
daa
xorl
mov
fildll
inc
lahf
push
ss
pop
gs
ja
inc
or
bound
lods
push
sub
stc
dec
cmp
rorl
xchg
jg
das
and
rcl
inc
xchg
mov
ret
inc
push
jbe
pop
pop
stos
xchg
out
fisubrs
jnp
cmp
inc
inc
push
repz
and
enter
push
decl
inc
mov
add
out
adc
loop
xchg
js
mov
mov
mov
pop
mov
idivb
scas
mov
xchg
dec
cmp
lahf
jo
mov
xchg
mov
sbb
das
ds
or
int
add
push
into
pop
hlt
adc
insb
out
pop
xor
int3
push
test
lcall
pop
jno
fsubl
cmp
sbb
inc
aas
scas
jne
jno
es
push
push
stos
xchg
ss
call
push
andl
jnp
shlb
popa
jns
scas
ret
mov
out
pushf
sub
sub
cmp
jecxz
fisttps
repz
and
mov
into
adc
cmpsb
pop
push
dec
or
ds
cmp
dec
jnp
and
fisttpl
sub
cmp
sbb
sti
and
jo
outsl
and
sbb
push
movsl
mov
inc
pop
sbbl
repnz
inc
cld
mov
pop
imul
inc
lahf
fldenv
sbb
inc
fs
insl
add
inc
lds
xchg
jmp
push
scas
imul
or
xor
mov
xor
je
in
adc
in
pop
adc
push
js
rcr
mov
ret
cwtl
das
or
ret
jle
xorl
ret
pop
jmp
pop
mov
and
fwait
and
add
dec
lock
das
ret
pushf
push
dec
and
imul
outsl
rcr
std
int
xchg
dec
pop
insb
call
jl
jecxz
sbb
test
das
dec
ret
pop
and
leave
add
jb
mov
xchg
mov
stos
mov
aam
icebp
jecxz
add
mov
adc
pop
loop
jecxz
mov
xlat
sub
push
dec
nop
jb
push
test
mov
adc
jb
adc
and
shll
js
call
ret
hlt
ljmp
stos
xchg
hlt
dec
xlat
fldl
leave
in
sahf
iret
cmp
cmp
loop
jne
dec
nop
inc
xor
mov
jae
adc
xchg
pushf
adc
or
inc
test
fwait
xchg
scas
mov
mov
inc
inc
inc
fcom
sbb
addr16
add
dec
add
dec
push
std
pushf
cmp
jl
rcrl
outsl
rolw
push
add
ret
dec
ret
imul
iret
fistl
test
arpl
adcl
rcll
mov
ret
das
inc
hlt
sub
lds
mov
add
push
in
push
arpl
test
dec
pop
enter
dec
xchg
and
add
insl
push
push
mov
mov
cmpsb
out
mov
in
xor
add
in
cmp
add
notl
xchg
rorl
gs
aas
out
lret
jno
push
xor
enter
push
cwtl
pop
xor
xchg
cli
mov
cmp
xor
jg
repz
ds
int
mov
loope
add
scas
fldenv
outsb
mov
xchg
pop
jle
sub
out
icebp
stos
mov
les
lods
lods
subl
test
lds
fnsave
or
test
pushf
pop
sub
mov
cmpsl
in
cmpsl
cmpsb
mov
jb
int
pop
and
xchg
shrb
repz
movsl
repz
in
aaa
pop
bound
and
inc
add
pop
sbb
pop
das
or
cld
xchg
lahf
fistl
addr16
out
inc
cmpsb
mov
pop
and
adc
pushf
data16
std
mov
inc
dec
or
xor
pop
sahf
in
int
and
lds
out
fildl
and
jecxz,pn
aas
in
jge
pmaddwd
aad
fcoml
push
cld
fs
fistl
mov
lret
xchg
into
insb
hlt
sbb
mov
lds
dec
in
xlat
daa
lret
enter
sub
mov
incb
cmp
in
jmp
push
adc
int3
in
fadd
push
dec
sbb
mov
jo
and
test
push
and
addr16
xor
add
sbb
mov
jno
add
mov
test
je
xchg
mov
movswl
stos
test
fcmovbe
push
pop
push
pop
imul
xchg
lock
lods
add
imul
cmp
dec
sub
mov
adc
lods
stos
call
mov
pop
bound
push
ljmp
mov
mov
cli
ja
pusha
jg
and
xor
add
fcomi
loope
nop
incl
pop
outsb
in
or
cmpsb
add
movsl
lret
in
addr16
lea
push
enter
jl
or
aad
push
mov
adc
jge
icebp
mov
fs
jmp
xchg
and
mov
dec
cmp
imul
mov
ret
fldt
sbb
sub
xchg
clc
popf
aas
sbb
mov
mov
pop
lods
add
notb
mov
jl
adc
out
lods
push
cs
es
mov
jne
mov
and
xchg
addr16
lock
lahf
push
add
ret
adc
lret
cmp
inc
shl
push
out
rclb
adc
mov
add
test
pop
out
test
xchg
sub
negb
dec
mov
shl
pop
and
add
lret
adc
mov
mov
es
les
dec
and
in
pop
iret
ficoml
movsl
and
mov
mov
out
in
mov
jge
test
jns
or
js
sub
pop
add
test
repnz
or
add
adc
gs
xchg
cmpsl
incb
jbe
ror
lods
jl
mov
sub
dec
ret
push
bound
add
pop
add
add
cmp
push
out
pop
dec
es
mov
mov
mov
sbb
add
std
push
in
pushf
aaa
or
mov
sub
inc
clc
xor
mov
out
xchg
ret
loopne
movb
mov
icebp
and
pop
lret
xor
push
test
push
push
pop
sub
pop
mov
sub
dec
xlat
sub
inc
aad
cmp
dec
or
sbb
scas
adc
jae
mov
cmpsl
lret
jecxz
mov
push
xchg
in
add
adc
aad
mov
mov
fnsave
icebp
jne
lods
pop
lds
in
lods
jge
or
mov
push
sub
dec
inc
inc
cli
je
or
sub
jne
pop
dec
sub
adc
cmp
les
jne
es
cmp
aam
push
addr16
mov
hlt
mov
or
jae
and
cli
enter
pop
jp
out
lods
cmp
cmpsl
mov
cmp
scas
inc
add
into
js
mov
pop
lods
sbb
sub
push
xor
xor
pop
movsb
sub
dec
mov
mov
jl
mov
sbb
inc
cltd
add
inc
push
call
lret
inc
xchg
popa
xlat
dec
movsl
sahf
push
inc
add
inc
out
fadds
test
fdivr
fsubr
cmpsb
lret
pop
or
insb
push
sub
jg
dec
mov
add
xor
jge
lret
xchg
jo
or
mov
and
les
push
pop
mov
std
adc
inc
loopne
daa
push
icebp
jbe
pop
and
out
das
fsubrs
dec
rol
lock
inc
xor
rolb
mov
xor
push
nop
push
stos
cmpl
mov
fs
jno
mov
mov
jnp
push
pop
repz
loop
pop
sbb
jle
sbbb
lcall
add
ljmp
sbb
rol
mov
cmp
xchg
lret
js
out
loop
push
dec
icebp
mov
jecxz
dec
mov
mov
and
fwait
aad
jmp
pop
mov
scas
out
push
lds
mov
sbb
sahf
shll
insb
fcoms
test
push
fs
rcll
add
lcall
or
and
scas
lret
shlb
inc
and
loopne
xor
or
push
xor
push
test
ss
adc
imul
xor
test
lods
data16
imul
leave
push
ret
jo
xchg
push
icebp
aaa
pop
or
rcr
call
pop
mov
in
push
jae
push
cli
rolb
cmpsb
addr16
adc
sbb
or
pushf
pop
sub
lods
mov
call
xchg
dec
inc
inc
inc
pop
lock
mov
pop
adc
fidivrl
fistpll
pop
gs
out
movsb
repnz
ja
cmp
mov
dec
rcrb
adc
in
adc
mov
adc
jnp
dec
cld
mov
jge
data16
push
cli
mov
lods
jne
rolb
in
mov
stos
out
aas
movsb
jno
jp
mov
cmpsb
mov
ljmp
or
cmpsl
jle
in
ljmp
testb
push
and
lret
or
cli
push
cli
push
and
pop
mov
scas
cmpsl
sub
enter
add
jge
add
les
jnp
jle
rcrb
pop
shll
mov
imul
hlt
or
xchg
jno
ja
lock
sarb
out
sbbl
lret
popa
mov
outsb
mov
bound
mov
stos
cmpsl
je
js
xchg
rorl
cmpsl
mov
jmp
pop
leave
int3
ret
rolb
jnp
mov
rorb
movsl
mov
push
jnp
jns
in
add
test
fwait
repz
push
adc
imul
ds
jnp
sub
pop
jnp
ficomps
add
pop
shll
popa
test
xchg
jo
es
push
pop
pop
ret
shlb
sarl
out
mov
sbb
leave
sbb
cmp
fwait
leave
pop
loop
movsl
xchg
push
lahf
das
or
rol
sub
lods
pushf
lret
hlt
faddp
scas
loope
scas
mov
lcall
cli
clc
dec
mov
pusha
lock
cld
loopne
mov
fcomip
mull
roll
xor
stc
sbb
mov
dec
rclb
fildl
outsb
outsl
jns
pop
nop
popf
pop
test
sahf
sbb
push
xor
push
mov
jo
sub
ja
mov
mov
into
ss
ret
jl
bound
into
adc
outsl
cmp
daa
imulb
in
out
jns
loop
jp
push
push
push
call
or
pop
push
xchg
push
mov
xor
xor
mov
es
imul
adcl
popf
sub
ret
mov
pop
fwait
dec
jp
insl
jg
outsb
dec
movsl
jne
push
push
aaa
outsb
sub
ret
mov
fistl
lahf
stos
and
and
adc
sti
xchg
inc
dec
cmp
es
push
and
and
jnp
or
mov
pop
andl
push
mov
scas
mov
mov
stos
mov
popa
sti
sbb
es
scas
jns
fsubp
testl
or
icebp
mov
fs
adc
mov
bound
popf
lret
xor
lahf
jp
push
mov
sbbb
mov
inc
sbb
ja
xchg
mov
xor
test
fcmovu
mov
je
movsl
out
aaa
push
cs
cmc
lea
testb
and
sub
fdivrl
mov
jp
rcrb
insl
clc
clc
scas
ss
rcll
rol
mov
push
inc
fidivs
sbb
or
push
das
mov
lds
daa
lds
sbb
ljmp
in
push
adc
mov
cli
leave
mov
lret
test
and
push
jp
fdivrs
repnz
loopne
in
popa
sti
das
inc
and
jg
dec
fs
fiaddl
lea
ja
cmp
lahf
dec
pop
push
xchg
scas
cmpsl
cmpsl
jg
pusha
mov
scas
out
push
xchg
sahf
add
mov
test
mov
dec
pop
sub
or
dec
dec
xchg
inc
scas
lret
mov
in
sbb
cmpsl
xchg
or
lds
jle
in
mov
add
xlat
enter
aad
aaa
mov
lods
inc
int3
test
pop
mov
push
ds
ja
out
and
loopne
dec
inc
lret
lret
adc
mov
fsubrl
mov
xor
adc
insl
arpl
rorl
xchg
lret
cmp
inc
sub
inc
dec
push
out
pop
cld
lret
pusha
and
stc
mov
xor
inc
cwtl
jle
sbb
sub
das
out
mov
mov
or
clc
adc
stc
inc
mov
mov
pop
mov
cli
rorl
repz
arpl
add
sub
jl
xlat
pushf
ljmp
mov
add
jbe
cmp
add
decb
and
out
adc
dec
push
lret
testb
push
mov
push
das
cld
sbb
jbe
or
fisttpll
xorl
adc
inc
stc
fidivl
and
xchg
fidivrl
outsl
outsb
add
mov
fiaddl
mov
mov
fucomi
adc
mov
repnz
movl
out
lcall
xchg
cmp
xor
fdivrl
mov
dec
pop
sbb
nop
inc
fucomip
movsb
xchg
pusha
stc
sbb
js
mov
std
add
cwtl
push
jb
daa
or
mov
mov
movsl
sarl
xchg
pop
xlat
dec
and
push
and
stc
aaa
sub
test
out
daa
int3
add
sbbb
fdivrl
lock
out
pushf
and
adc
stc
push
pop
ss
xchg
insb
fsubrp
out
mov
rol
int3
int3
cmp
sub
shr
sub
jb
orl
lcall
mov
cwtl
add
lds
adc
movsb
andl
loopne
std
scas
inc
aaa
mov
and
ss
dec
push
fsubrp
fisubrl
in
inc
ret
test
popf
data16
out
pop
xchg
mov
adc
ljmp
in
in
mov
imul
pop
imul
int
pop
imul
cli
cmp
dec
inc
and
rep
jmp
arpl
push
inc
push
addr16
xor
push
xchg
push
mov
cmp
in
stos
inc
popa
mov
pop
icebp
sub
pop
mov
jge
jmp
outsl
sub
test
pushf
in
lea
sbb
adc
push
outsb
nop
test
loope
or
cli
sub
xor
add
mov
pop
cmp
int
and
hlt
inc
push
xchg
mov
in
or
jge
pop
hlt
movsl
sbb
xlat
push
jno
stos
mov
mov
mov
cwtl
cmp
inc
in
and
aad
aam
jne
pop
adc
mov
stos
dec
cmp
sbb
out
pushf
enter
mov
test
out
xlat
addb
leave
or
es
dec
out
sub
call
sbb
cmpsl
fnstsw
fwait
adc
inc
fs
fidivl
push
push
xchg
jbe
mov
orb
js
xor
stc
pop
loopne
nop
dec
arpl
je
jp
ljmp
mov
movsb
mov
jno
stos
lea
mov
sub
and
adc
scas
int3
movsb
sti
ljmp
and
mov
jge
pop
dec
jne
adc
aad
sub
fs
cmp
flds
sbb
fs
lods
mov
xchg
stos
jl
cmp
ljmp
xchg
ljmp
cvtps2pi
mov
fcoms
adc
cmp
dec
rcrl
sbb
add
imulb
push
adc
sbb
fiadds
adc
test
sbb
adcb
sbbb
shll
and
pop
or
lods
or
dec
xor
sbb
test
lret
cmpsl
mov
mov
mov
das
ret
pop
cmpsb
mov
push
popa
push
push
jle
mov
movsl
adc
test
das
lret
pop
shlb
xchg
sub
shl
and
ret
jb
pop
das
cmp
xor
mov
pop
mov
int3
dec
cmpsb
sub
div
repz
aam
cmc
mov
mov
pop
jo
loop
push
mov
and
xor
cmp
add
push
mov
repnz
sbb
jnp
ss
push
mov
aaa
and
or
sbb
lret
imull
pop
fmulp
inc
xor
mov
das
pop
and
adc
or
frstor
lahf
popa
xor
sub
xchg
shlb
out
jbe
movsb
movsb
inc
cmp
in
adc
pop
test
mov
in
jp
or
mov
push
bnd
test
lahf
xor
jg
in
xchg
out
dec
mov
adc
pop
dec
imul
addr16
jecxz
pusha
js
icebp
insb
pop
mov
mov
mov
adc
sbb
push
into
add
dec
std
comiss
jg
mov
int
inc
mov
dec
pop
mov
pushf
adc
aad
xchg
jl
push
dec
mov
lods
xor
mov
or
xor
lret
arpl
mov
ljmp
mov
in
adc
fiadds
xchg
js
xchg
imulb
dec
jl
cs
test
sub
call
push
icebp
out
incb
pop
sub
ja
test
daa
adc
jo
lcall
pop
test
out
mov
add
popf
push
pop
xor
pop
cmp
repz
xor
and
mulb
add
cmp
mov
mov
xor
add
jae
mov
inc
adc
push
lock
andb
clc
shrl
popl
and
jl
pop
in
add
mov
adc
cmp
and
mov
loopne
jns
inc
mov
adc
lods
inc
imul
sti
push
arpl
shlb
add
mov
add
inc
jl
into
mov
stos
outsb
add
or
jmp
adc
or
mov
loopew
xor
pop
xchg
cmp
lods
push
cld
fisttps
lds
ja
repz
jnp
dec
inc
sbb
mov
dec
mov
add
pop
aam
pop
jb
mov
pop
jl
dec
adc
addr16
sarb
sub
out
cmp
nop
push
fst
ffree
push
jae
testl
jl
mov
push
rcrl
ljmp
dec
fisttpl
xor
test
fwait
pop
pop
sbbl
test
fs
into
sahf
mov
adc
sub
mov
cltd
testb
lcall
sub
mov
mov
icebp
arpl
hlt
mov
pop
bound
and
orl
in
icebp
mov
jb
nop
lds
or
nop
movsl
add
mov
inc
pop
jg
fstpt
fstps
sub
out
nop
jmp
jge
ljmp
jmp
stos
ja
sub
cs
scas
aad
cmp
sbbl
sub
frstor
lods
cmpsl
mov
pop
pop
shll
push
xlat
stc
push
jno
mov
stos
outsb
addr16
push
push
and
test
fwait
and
jnp
mov
lods
pop
shlb
xlat
aaa
mov
cmp
cmp
sarb
lock
out
jl
mov
cmp
pop
or
movsl
mov
sub
or
inc
jecxz
mov
shll
aas
jno
xchg
dec
scas
mov
int
mov
xchg
imul
sbb
jne
mov
xor
icebp
arpl
lcall
mov
cmc
ret
or
into
sti
testb
pop
hlt
and
xchg
xchg
pop
push
adc
push
dec
or
lret
jge
insl
jno
sbb
sti
jmp
or
hlt
cli
jle
adc
in
jg
lret
xchg
jno
fisubl
test
mov
mov
aad
mov
mov
cmp
cmc
cmpsb
pop
cmp
add
jo
mov
scas
xor
sti
sub
dec
dec
popf
ljmp
ret
xor
pop
aam
and
ret
pop
mov
outsb
ljmp
ss
xor
push
pusha
cwtl
repz
dec
daa
or
daa
shlb
dec
lock
inc
or
mov
jmpw
sub
pop
mov
inc
test
jb
fdivrs
mov
add
cltd
push
pop
js
sti
insl
pop
aad
fcoms
call
roll
mov
pop
sbb
cmp
jge
movsb
adc
clc
mov
inc
sub
and
pop
lret
add
notl
cmp
mov
insl
dec
push
outsb
jl
test
insb
push
data16
sub
lret
pop
test
cmc
mov
dec
jp
stos
cwtl
push
add
and
arpl
adcl
fnstcw
sbb
cld
add
pop
imul
pop
jmp
sub
xchg
cmpsl
andl
dec
dec
aaa
iret
cli
or
mov
cld
mov
xchg
and
movsl
sub
inc
in
cmp
movsl
andb
repnz
and
sbb
cmpsb
xchg
jne
lcall
mov
mov
pushf
and
jmp
popf
loope
xchg
pop
out
fptan
jb
repz
pop
ret
repnz
xchg
xor
pop
mov
xorb
test
or
xchg
lcall
cld
in
xor
inc
jo
hlt
scas
mov
jae
pop
inc
outsl
stos
or
jo
fistpll
pop
scas
mov
lock
jnp
popl
mov
mov
mov
iret
outsb
xor
mov
mov
dec
imul
inc
jb
iret
cmp
dec
sbb
push
mov
and
xor
dec
mov
mov
push
loope
lret
mov
pop
pop
jle
ficompl
adc
test
fnstcw
mov
leave
sbb
sti
negl
jae
mov
jmp
sbb
xchg
imul
lcall
aam
lock
and
push
test
adc
push
jecxz
add
in
xor
lods
push
jo
sub
gs
fistl
pop
add
cmp
and
jecxz
and
mov
mov
or
xchg
rcrb
mov
sub
or
xor
imul
lret
or
mov
imul
ds
jp
and
pop
stos
divl
xor
inc
fistpll
mov
lea
pop
test
aas
xchg
jbe
mov
push
cmovbe
jge
icebp
mov
xor
dec
int
and
inc
ja
cli
cld
fcmovnbe
push
movsl
sbb
std
mov
std
jecxz
or
rcrb
push
inc
xchg
inc
dec
aaa
mov
jo
in
test
fs
ss
push
cmp
scas
xchg
xor
push
ss
incl
sub
cmp
inc
roll
test
in
pop
pushf
in
lds
and
mov
fwait
lds
ds
jg
push
aad
sbb
in
pop
adc
lret
xchg
push
fcmovnbe
ljmp
stos
jo
out
imul
mov
cmp
dec
lret
mov
cmpb
icebp
mov
or
or
fsincos
xchg
push
pushf
jp
arpl
or
dec
push
bswap
jmp
cmp
jnp
xor
out
into
ficompl
and
pop
sahf
ret
or
sub
mov
pop
inc
lret
mov
addr16
jbe
clc
arpl
call
fnstsw
adcl
dec
in
push
out
stos
les
stc
sbbb
mov
popa
cs
xchg
sbb
mov
xor
xchg
inc
daa
sub
dec
int
scas
dec
or
stos
mov
fidivl
sti
push
idivl
cltd
jg
dec
sbb
ret
jmp
in
ficoml
xor
pop
shll
mov
jbe
mov
sbb
je
pop
mov
cmpl
push
cld
mov
decl
leave
push
and
xor
orl
dec
loopne
mov
add
mov
outsl
mov
sbbb
cmc
nop
inc
into
cmc
repnz
aad
js
enter
lds
and
out
xchg
xchg
jp
aas
adc
sti
sub
pop
mov
mov
push
push
pop
outsb
inc
push
test
adc
cmc
inc
sub
aas
js
popf
call
dec
jmp
outsl
xlat
push
repz
lea
sub
add
or
lret
xchg
xchg
jp
cmp
inc
leave
lods
dec
popa
pop
mov
mov
adc
fsubl
sub
fistps
sbb
ret
int
sub
jno
in
push
or
add
jne
shr
sti
cs
adc
enter
loope
into
jae
mov
insl
push
scas
clc
imulb
sub
movb
insl
push
fwait
cmpsl
sbb
add
cltd
dec
pushf
push
sbb
rcl
mov
cli
xchg
divl
fstpl
or
lds
jle
xchg
jb
inc
jg
cmpl
int
aam
fisttpll
cmp
lods
dec
mov
push
stos
sahf
lret
lods
lea
daa
pop
push
ss
sub
out
out
xor
incb
xchg
mov
ja
mov
pusha
mov
xor
dec
dec
mov
push
imul
add
fstpl
adc
cltd
push
and
movsb
lea
xor
add
push
aad
pop
cmp
add
sbb
je
jno
or
add
and
test
pop
inc
outsb
pop
jns
repnz
and
add
xchg
xor
rcr
imul
aaa
xor
dec
push
xor
mov
mov
shl
sbb
icebp
mov
adc
lret
mov
lods
jecxz
nop
xor
jge
mov
testl
sub
stos
enter
jae
pop
lods
pop
ds
jb
dec
push
push
in
sub
out
test
lcall
sbb
or
pop
add
and
push
roll
jp
or
jno
fimuls
into
cmpsl
lods
jl
inc
dec
mov
repnz
cmp
movsb
sub
pop
or
popf
stos
sub
leave
test
inc
mov
bnd
mov
enter
dec
jmp
pop
inc
cmc
fldl
jbe
adc
mov
pushf
stc
sbb
push
mov
add
sub
jae
bound
adc
fistl
aas
push
imul
or
jo
mov
stos
div
cmc
lock
inc
lret
inc
push
or
cmp
mov
loop
dec
repz
jl
pop
add
cmpsl
mov
jns
repnz
and
push
imulb
je
jecxz
or
jle
decl
push
stc
out
scas
addr16
jnp
push
mov
lock
push
sub
adc
ljmp
mov
dec
scas
push
adc
inc
mov
mov
aas
jae
pop
mov
mov
lahf
leave
xor
xor
push
push
movsb
jp
xor
xor
insl
outsb
pushf
decl
push
outsb
pusha
outsl
cmp
outsb
ret
mov
push
or
pop
out
out
cmp
and
mov
pop
test
sbb
pusha
inc
bswap
jmp
js
popf
mov
out
out
mov
pushf
inc
mov
cltd
mov
push
call
dec
fs
sub
cmp
add
daa
cs
inc
or
jae
out
mov
mov
cmp
xchg
lret
repnz
dec
out
sub
movsl
outsb
xor
pop
ds
int
xlat
mov
sub
aas
das
or
sbb
adc
lret
cltd
jmp
add
jb
js
aam
rcl
cli
mov
das
or
sbb
fldcw
push
loopne
pop
push
cmp
push
add
mov
std
ret
add
sbbl
jg
mov
or
cmp
dec
xchg
jmp
ja
movsb
mov
cs
adc
cmc
xor
rol
adc
mov
cli
dec
or
mov
roll
push
lea
shlb
xor
clc
popl
xor
arpl
mov
pusha
push
mov
fs
arpl
lret
imul
call
and
lock
sbb
aaa
shrl
and
jp
mov
aaa
out
gs
jns
in
aam
test
mov
xchg
iret
repnz
scas
ror
gs
outsl
cld
cmpsl
xor
mov
sbb
cmp
nop
loopne
xlat
mov
pop
sbb
cmp
and
sub
cld
scas
stos
cwtl
jnp
jb
dec
or
fldl
mov
test
pop
dec
nop
cmp
inc
imul
dec
mov
cmp
outsb
lods
roll
gs
mov
push
in
dec
and
jecxz
pop
fsubl
cmpsl
clc
outsl
or
sti
scas
cmp
adc
mov
pusha
xchg
cmp
jno
xchg
push
cli
mov
mov
or
loope
into
jne
scas
mov
xor
mov
arpl
lret
dec
mov
idiv
cmp
aad
mov
jne
cmpl
lcall
sub
and
lock
les
mov
xor
movsb
in
ret
mov
and
sbb
fiadds
leave
js
into
mov
loop
je
hlt
xchg
mov
pushl
int3
sbb
test
out
je
cli
mov
adc
fisttps
sub
mov
sub
jp
or
or
cmp
inc
jno
out
or
mov
xor
mov
pop
jbe
mov
mov
xor
pop
push
ss
enter
enter
add
sbb
sub
movsb
iret
mov
loop
dec
mov
xor
xchg
fucomi
xchg
add
lahf
add
cmpsl
fistps
aaa
or
push
and
aaa
mov
mov
in
mov
dec
xchg
dec
test
jmp
pop
les
test
sarl
movsb
roll
pop
sub
inc
inc
xchg
mov
mov
push
fisubs
dec
faddl
out
adc
mov
xchg
lods
clc
sub
mov
call
repz
jno
cmpsb
ret
stos
sub
pushf
push
out
xor
dec
xor
insl
inc
int
lods
test
xor
pop
pusha
mov
xchg
push
jnp
stos
or
pusha
mov
fwait
add
mov
test
and
lret
mov
stc
addr16
mov
daa
xchg
ret
xor
push
fisttps
sbb
movsl
inc
add
xchg
cld
jecxz
dec
sub
in
fisttpll
ljmp
pop
bound
jno
adc
push
dec
push
stos
loopne
lea
push
lret
jbe
shr
adc
in
lea
subl
repnz
dec
cmp
repnz
test
fdivrp
das
xchg
lock
cmp
loopne
pop
adc
mov
inc
cwtl
rorb
out
cmpsb
loop
mov
outsb
mov
add
or
xchg
or
push
ret
loopne
pop
call
or
addr16
mov
sub
fisttpll
repnz
fldt
nop
adcb
out
mov
aad
stc
push
mov
mov
or
cmp
or
xchg
cmp
mov
or
stc
pusha
sahf
cltd
xlat
fwait
sbb
andb
out
jnp
pop
stos
or
or
sub
dec
lea
jno
je
hlt
clc
movsl
mov
fnstcw
push
pop
lret
cld
mov
xor
push
mov
xor
mov
push
loope
mov
fsubl
xchg
data16
sahf
daa
push
lret
repnz
jne
mov
xchg
out
xchg
mov
fnsave
cs
unpcklps
sahf
push
arpl
mov
sarl
out
aas
int3
dec
js
inc
mov
xor
cmpsb
push
push
cltd
push
mov
pop
icebp
pop
ss
fcomps
stc
mov
push
sub
scas
cmc
jns
and
xor
adc
pop
adc
xor
repnz
outsl
or
call
sbb
pop
xchg
insb
mov
fdivl
cmpsl
aaa
test
push
push
xchg
les
sbb
add
pop
sub
icebp
pop
fldl
push
xor
dec
jle
shlb
fcom
je
gs
mov
lahf
xor
push
shrb
xorl
movsb
xorb
mov
movsl
pop
xchg
sti
cmp
mov
mov
sbb
inc
sti
out
cltd
cltd
rcrl
test
cwtl
jl
ficoms
inc
iret
add
enter
leave
push
xchg
imul
cmp
and
repnz
nop
sbb
push
mov
and
call
pop
mov
lods
mov
push
and
jge
and
xor
mov
imul
cltd
pop
cmp
push
icebp
aas
add
dec
cmp
mov
shl
mov
rorl
andb
mov
int
mov
movsb
int3
clc
mov
in
mov
jbe
les
repz
mov
inc
dec
cmp
push
xcrypt-ofb
cmpsl
in
xor
hlt
add
popf
mov
fwait
mov
push
je
xor
pop
or
push
daa
jns
cmpsl
adc
lea
jecxz
fs
dec
cmpsl
pop
push
sbb
add
lret
pop
push
ret
arpl
mov
imul
inc
xor
fbstp
into
aaa
clc
push
gs
adc
int3
jle
stc
clc
jns
lahf
jb
push
lock
dec
jl
inc
adc
call
inc
movsb
outsb
inc
jmp
lahf
or
and
mov
mov
cmp
mov
lret
js
sahf
sbb
jp
pop
daa
imul
in
bound
jae
adc
cmp
out
sub
retw
pop
or
and
cmp
sub
mov
pusha
mov
mov
je
xchg
fstpt
jnp
lock
sbb
xchg
rcll
daa
addr16
push
add
cmpsb
loope,pn
aad
push
repnz
mov
mov
mov
test
pop
push
std
pop
dec
jae
shll
mov
mov
jno
call
cmp
int3
sbb
pop
out
notb
lds
push
in
mov
mov
cmpsb
jo
add
stos
inc
lds
scas
mov
hlt
popf
xchg
cli
mov
sbb
cli
scas
dec
sbb
add
dec
jns
popf
popf
ret
jp
ss
mov
mov
daa
xor
adc
sbb
outsb
leave
mov
hlt
outsl
xor
das
fdivrl
sub
push
dec
sahf
mov
jae
call
outsl
cmc
lret
adc
lds
and
insl
xchg
ljmp
xor
dec
sub
popf
cs
repnz
int
test
out
push
dec
repnz
cmpb
test
cld
insl
cmp
stc
adc
cmpsl
stos
mov
sbb
inc
call
fs
jmp
xchg
mov
xchg
faddl
mov
aad
push
add
mov
pop
inc
movsl
pop
xchg
and
jbe
xchg
mov
stos
inc
jo
sahf
sub
push
mov
and
stos
push
add
and
decb
pop
ljmp
lea
sbb
clc
dec
sub
xchg
inc
cmp
movsb
sbb
jnp
mov
adc
xchg
dec
mov
adc
pop
inc
pop
xchg
mov
test
out
cmp
loopne
cmp
pmuludq
mov
ss
addr16
pop
outsl
pop
stos
loopne
push
add
orb
aaa
mov
pop
lret
hlt
fstps
fucom
sarb
test
arpl
mov
or
mov
popa
movsb
cmp
push
mov
cmc
and
cmpsl
lds
lock
xchg
inc
push
sbb
adc
add
and
mov
ds
movsb
out
movsb
xor
je
sub
dec
dec
dec
pop
pop
mov
sub
inc
jno
out
shll
insb
xor
adc
pop
adc
pop
dec
jp
push
aad
pop
or
stc
dec
in
pop
movsl
std
in
daa
pop
mov
and
cmp
inc
cmp
or
push
mov
test
fidivrl
insb
sub
ljmp
add
or
shl
pop
pusha
or
inc
mov
inc
icebp
push
dec
les
inc
rcrb
pop
inc
lcall
es
cmp
fs
mov
stos
data16
jle
lret
jne
pop
out
lea
mov
out
push
mov
out
jl
dec
clc
paddb
jmp
mov
fcoms
pop
std
pusha
in
mov
inc
pop
pop
cmp
pop
or
push
lcall
and
inc
sub
add
ss
cli
insb
int
cmp
popf
mov
imul
rorb
mov
push
mov
pop
add
out
mov
jl
into
pushf
pop
nop
idiv
out
ja
xchg
out
lret
loopne
out
mov
es
add
push
jno
ret
or
repnz
jecxz
jae
rclb
add
sub
or
sbb
ja
das
bound
inc
mov
push
xchg
data16
scas
dec
dec
dec
mov
test
aam
xchg
cs
aas
lahf
arpl
dec
mov
test
test
ds
ret
icebp
sbb
stos
test
fs
out
adc
jmp
loopne
xor
jae
aad
pmuludq
pop
cli
iret
sbb
cwtl
cli
adc
addr16
test
daa
test
aas
aad
mov
add
cmpsl
mov
sbb
fcoml
push
jne
adc
mov
stos
jno
in
inc
std
test
sarl
and
mov
mov
or
jo
addr16
sbb
fistl
pop
xor
orl
js
mov
outsb
lock
push
cmc
pop
lcall
mov
arpl
xchg
and
cmpsb
mov
jmp
in
sarb
mov
mov
pop
pop
aam
mov
sbb
and
jge
jecxz
jp
popf
ja
xor
out
mov
dec
popa
sub
outsl
adc
idivl
icebp
sub
and
mov
fidivs
add
andb
js
call
sub
dec
jae
cmp
out
push
in
push
repnz
pusha
jne
das
cs
mov
ret
test
mov
fisubrl
xchg
jne
dec
mov
pop
je
cltd
sar
stos
add
jmp
dec
test
lds
dec
pop
or
xchg
fdivrs
xor
dec
sub
sahf
addr16
ljmp
push
cmp
outsb
cmc
sbb
shlb
inc
test
or
push
add
aaa
insl
add
fucomp
mov
add
ret
sbb
insb
sti
xchg
iret
shlb
test
stos
stos
outsb
lahf
sahf
mov
iret
sub
orl
ljmp
sub
pop
adcb
mov
insl
cli
in
jno
popf
int
ja
ret
test
xor
mov
lods
stos
jecxz
int3
jg
push
cmpsb
mov
adc
sub
pop
in
decb
xchg
pop
aam
ror
push
add
lods
and
or
adc
xor
dec
cs
jge
mov
lret
imul
mov
xchg
ret
adc
lea
arpl
fdiv
sbbb
add
out
sahf
or
rcl
fwait
inc
cmpsb
out
xor
and
mov
test
sbb
or
shrl
das
jg
mov
mov
leave
les
aaa
mov
xchg
mov
hlt
int3
add
orl
in
pusha
pop
sbb
lods
xchg
mov
aad
mov
addr16
adc
mov
xchg
pop
jae
push
in
mov
rcl
pushf
wbinvd
push
aad
in
pop
sub
inc
inc
cmpsl
call
cmp
mov
test
and
jmp
pop
sbb
jno
movsl
mov
sub
jle
mov
stc
push
lcall
inc
in
movsl
cmpsb
add
ljmp
push
or
faddl
mov
cmp
dec
add
outsb
fstl
scas
repz
flds
inc
shrl
ja
sahf
sbb
and
hlt
test
mov
push
pop
pop
jg
jecxz
push
push
mov
fsubp
int
sbb
fistl
fidivs
arpl
jnp
leave
outsb
add
xor
insb
repz
cmp
aas
cmpsl
push
inc
xchg
cmpsb
and
sub
incl
repz
js
test
adcb
xchg
ja
stos
cmc
cmpsl
inc
adc
lret
frstpm(287
xchg
xor
shl
popa
xlat
cmpsl
int
icebp
sti
ljmp
sbb
jle
test
mov
add
or
fs
pop
les
pop
pop
test
jnp
mov
push
in
push
mov
mov
lret
int
mov
lea
push
fdivrs
gs
add
lock
mov
pop
shl
mov
fidivl
xchg
mov
les
mov
popf
in
adc
add
cld
sub
xor
add
jecxz
lods
orl
jne
lods
rorl
insl
hlt
push
leave
push
ret
js
jne
mov
inc
sahf
daa
das
push
imul
lcall
stos
and
or
xchg
cmp
mov
cmpsb
pushf
pop
jl
insl
inc
or
add
pop
dec
loop
xor
push
and
mov
nop
repnz
rcll
test
add
jne
popa
aaa
xchg
out
lods
push
and
gs
aaa
add
loop
sbbl
inc
test
xor
ds
test
aad
cmc
ret
mov
or
pusha
ja
sub
jnp
sar
and
sbb
mov
loopne
sbb
add
adc
pop
lods
pop
repnz
movsb
popa
iret
fistpl
or
xchg
dec
push
add
jmp
out
cld
enter
das
cltd
cmc
fldpi
fsubs
test
pusha
test
xchg
pop
stos
mov
sarl
pop
cld
call
dec
sub
jl
adc
jb
ret
jle
cli
push
lahf
test
int
mov
mov
sub
cmp
popf
imul
pop
ss
out
addr16
xlat
in
add
out
inc
adc
in
jbe
stc
pop
ret
data16
add
jo
jle
cmp
mov
movsb
sub
std
movsl
repnz
fsubs
clc
pop
xlat
loopne
mov
xlat
mov
insl
mov
pop
dec
push
fstl
neg
xchg
and
ss
xor
scas
test
lret
lock
jb
shl
inc
xchg
ds
sbb
or
sub
outsb
mov
xor
in
cmp
jnp
outsl
mov
mov
mov
lods
push
popa
hlt
in
mov
cmp
dec
enter
adc
fisubs
xchg
test
repnz
js
mov
in
xorb
pop
jmp
sub
adc
cmpsl
push
mov
dec
dec
xorl
cmp
lods
pushf
int
mov
xchg
cli
ret
rclb
dec
shrl
jae
sub
cmc
into
pop
out
aas
push
jp
xchg
loopne
dec
fisubrs
addr16
lock
lods
sti
sbb
jmp
fstpl
push
es
sbb
in
scas
das
je
and
mov
cmp
sub
push
outsl
std
push
mov
xor
pushl
or
in
push
mov
xchg
mov
adc
sbb
and
xor
clc
pop
dec
aad
aas
into
fwait
xor
jp
shlb
pop
and
test
ret
push
xchg
jle
sub
rcrb
lods
xor
cmc
cmp
outsl
outsl
add
loop
mov
hlt
add
jae
ficomps
mov
je
out
cmp
ja
loopne
iret
xchg
aaa
xor
sbbb
fisubrl
cmp
xchg
mov
mov
xorb
sbb
and
jne
add
stc
int
ret
loop
cltd
push
cwtl
int3
mov
xor
jl
in
and
xor
sub
fstps
pop
test
pop
lea
mov
fwait
or
inc
xchg
fnstenv
pop
les
jnp
adc
add
xor
stos
cltd
shrb
jno
insl
inc
es
push
push
mov
movsb
or
sbb
mov
lds
stos
lea
jp
mov
inc
pop
add
ret
mov
ficomps
and
lahf
adc
sti
lret
je
xor
out
jne
sub
push
filds
pusha
pop
and
repnz
mov
pshufw
or
popa
add
mov
cs
scas
jns
sbb
and
fsubrp
test
arpl
ds
or
aas
mov
pusha
sbb
cmp
sbb
sti
gs
test
xchg
stos
scas
paddusb
mov
mov
xchg
test
inc
push
cmp
and
outsl
in
scas
add
mov
fisubrs
mov
cmp
inc
push
lock
mov
imul
xchg
dec
mov
push
xchg
out
pop
loop
ljmp
lret
mov
sahf
pop
es
mov
cmpsl
add
cmp
sub
sub
dec
in
adc
icebp
push
sbbl
stos
jg
lret
stos
mov
inc
mov
adc
inc
jae
adcb
mov
sbb
jbe
mov
mov
dec
dec
sub
or
outsl
pop
vcvtsi2sdl
std
out
test
mov
lahf
orb
mov
sti
mov
cmc
shlb
xchg
fisubl
arpl
xor
cld
push
lcall
mov
jo
mov
cbtw
jg
xchg
test
lds
popf
ljmp
cltd
jae
jns
repz
orl
icebp
push
cmpsl
and
ficoms
loope
jo
jg
shr
jne
sub
push
outsl
out
dec
sub
cmpsl
mov
jns
dec
insl
into
mov
lea
add
add
or
push
pop
daa
or
shl
xor
in
mov
out
roll
rorb
xchg
imul
jne
imul
mov
xchg
sbb
jecxz
sbb
or
jbe
mov
or
mov
ret
int
cmp
test
fwait
and
mov
stc
adc
fmuls
out
cmp
mov
mov
push
and
mov
rcrl
cltd
push
cltd
ljmp
inc
std
repz
test
sbb
adc
jl
sbb
lea
sti
and
pushf
into
inc
pop
lods
xchg
mov
stc
push
pop
add
cmp
mov
jle
insb
inc
mov
mov
adc
jne
fnstsw
xchg
push
and
fmull
in
and
mov
inc
adc
ret
mov
cmp
xchg
icebp
add
mov
js
push
scas
pop
add
idivb
dec
jo
and
push
testl
mov
and
out
insl
sbbl
cmp
jge
outsb
scas
or
mov
incb
mov
inc
loope
scas
fldt
aaa
add
ret
ljmp
jb
cmp
and
es
addl
or
mov
int3
ljmp
rcrb
mov
inc
or
push
in
inc
jmp
cmp
mov
adcb
xchg
dec
insb
lds
mov
inc
jecxz
rcll
xor
es
jne
cmp
fnstenv
andl
cmc
mov
xor
xor
cltd
sti
jns
pop
out
inc
rol
dec
xchg
testl
sbb
inc
add
push
outsl
jp
fdivs
test
sub
push
jle
inc
pop
adc
movsl
cmp
push
dec
cmp
lahf
sbb
xor
cmp
sub
cmp
xor
xor
or
or
cmp
ror
fdivrs
fcomps
sahf
clc
test
dec
cltd
subl
gs
adc
inc
rol
xchg
ficoml
sarl
dec
sbb
jno
jle
stc
add
sbb
mov
sbb
sbb
es
xchg
loopne
test
dec
out
jns
jecxz
jle
loop
leave
mov
gs
cmpb
sbbb
ret
push
nop
xor
mov
push
mov
in
popa
mov
iret
mov
mov
aas
adc
jg
stos
xor
adc
jle
int3
mov
sbb
cltd
das
mov
movb
jg
mov
xchg
sti
sbb
cmp
sbb
jmp
ret
push
or
inc
xor
sbb
fstp
mov
mov
data16
dec
lcall
push
inc
jne
popl
push
adc
push
jbe
nop
insl
in
push
test
aas
cmp
rolb
je
out
imul
mov
and
xor
sbb
jmp
mov
call
lret
mov
cs
xchg
adc
jae
ds
mov
repnz
and
nop
lret
notl
sub
jmp
hlt
orl
mov
inc
imul
sarb
jmp
mov
or
mov
sbb
xor
push
push
jle
aad
stos
or
shlb
ret
sbb
out
pop
or
adc
inc
insl
jmp
std
cli
icebp
adcb
mov
dec
imul
add
aas
xor
fsts
std
insl
outsb
pop
rcrl
lods
mov
xchg
int
fistps
xor
fstl
xchg
cwtl
jne
pop
pop
push
das
jbe
sbb
lret
rolb
push
lods
outsb
lret
cmp
push
rcll
adc
imul
and
movsb
into
add
repz
addr16
in
and
movsb
push
sub
in
cwtd
adc
movsb
xchg
mov
test
popf
sub
mov
or
adc
adc
inc
push
push
shl
repz
xor
mov
scas
int3
dec
loop
icebp
jo
mov
jle
push
ljmp
push
mov
pop
or
mov
inc
arpl
sub
enter
lretw
dec
sub
push
dec
inc
push
dec
shrb
or
dec
js
dec
pop
je
test
jecxz
and
lcall
sbb
dec
xchg
xchg
adc
stos
psllq
xor
incl
fbstp
in
cmp
mov
nop
icebp
pop
shrb
outsl
sbbl
jle
push
scas
jp
mov
cmp
shr
adc
jns
fadds
loopne
sbb
in
cmpsb
and
inc
cli
inc
popa
or
jecxz
mov
dec
and
and
mov
ret
gs
and
or
popa
cltd
loop
clc
test
outsl
dec
test
cltd
sahf
or
or
add
jecxz
dec
or
push
add
ret
xchg
int3
gs
andb
or
shrb
mov
cmp
add
or
repz
inc
outsl
pop
xchg
push
lods
andb
mov
add
addb
mov
mov
mov
aam
aas
add
or
push
jl
mov
inc
cmc
pop
pop
and
fs
enter
rorb
lea
sbb
cmpb
adc
loope
scas
lahf
nop
xchg
and
test
int3
push
cs
inc
test
mov
adc
vaddsubpd
ret
jl
cmpsl
dec
cmc
aam
mov
mov
push
dec
add
push
mov
xor
enter
xchg
add
sub
add
and
ljmp
dec
lock
xor
aam
xorl
xorb
ficompl
sub
cwtl
call
js
push
stos
add
cwtl
scas
pop
cwtl
inc
xchg
xor
mov
add
inc
in
ret
push
pop
lahf
daa
mov
faddp
jl
push
push
pop
xlat
push
leave
andl
in
cwtl
cmpl
repz
lcall
dec
and
xchg
jmp
call
stc
repz
push
hlt
pop
mov
and
lea
iret
or
inc
insl
mov
pop
inc
scas
lea
pop
jo
cmpsb
movsl
jns
fcmovbe
mov
xor
dec
jns
mov
inc
ret
repz
fisubs
mov
cmpb
fdivl
jg
cmpsb
mov
repnz
ret
daa
scas
clc
xlat
lods
cmpsb
rclb
dec
add
faddl
ficoml
inc
jl
xchg
xchg
pop
push
test
cmpsb
adc
pop
in
outsb
in
mov
ficomps
ror
and
mov
outsb
pop
cld
sub
mov
xor
outsl
add
popa
into
lahf
filds
xor
jne
sarb
mov
jp
add
xchg
push
mov
jecxz
je
ss
loope
cmp
iret
movsl
repnz
aaa
aas
jne
or
mov
aad
das
js
push
adc
xchg
mov
add
adc
push
out
imul
fsubl
imul
testl
fsubrs
mov
scas
mov
sub
adc
add
cltd
jo
cmpsl
mov
mov
mov
in
sub
dec
push
fidivl
es
subb
lods
xchg
in
sbb
stos
or
xor
sub
push
dec
daa
jae
add
dec
fldl
addr16
int
add
jbe
jg
pop
lea
xor
xchg
loope
or
xor
fwait
sahf
jmp
insl
mov
and
mov
scas
sahf
mov
nop
and
leave
or
cltd
push
pop
sub
jbe
imul
jns
rcr
xor
js
jmp
repz
andb
push
cld
xchg
ss
add
jae
rorl
inc
ficoms
mov
test
inc
repz
jne
pop
jns
pop
and
cmp
shlb
cltd
xor
icebp
fwait
rcrl
mov
test
in
cmp
popf
lret
cmp
sahf
mov
call
xchg
cmp
mov
sbb
bnd
sub
lds
push
ja
mov
push
jge
mov
cli
ficoms
push
pop
cmpb
shl
fnstsw
xchg
xchg
loopne
add
inc
pop
movsl
mov
xchg
ljmp
adcb
cmp
movsb
insl
out
lock
les
in
imul
inc
bound
test
xor
pop
xchg
in
mov
movsb
nop
add
push
pop
dec
stos
ret
or
sahf
stos
xchg
and
out
pop
mov
jecxz
movsl
or
aas
addb
push
xchg
lret
and
xchg
push
fucom
in
cmp
mov
push
and
ja
and
mov
adc
xchg
lock
mov
mov
xlat
daa
ret
out
jnp
mov
xor
fsubr
jl
jne
xchg
mov
adc
sub
cltd
sub
jecxz
mov
mov
dec
movsl
push
xor
push
faddp
mov
insb
inc
push
xor
out
loopne
pop
add
and
int
xchg
dec
pop
addr16
dec
mov
in
sbb
addb
or
inc
or
imul
pop
or
lret
arpl
adc
clc
sbb
shl
inc
cmp
ljmp
dec
inc
sarb
stc
push
mov
xchg
xor
xor
xor
pop
cwtl
and
dec
iret
in
cmp
lahf
or
xlat
jb
inc
adc
sbb
mov
rcrb
outsl
add
inc
and
push
movsl
xor
ljmp
mov
xchg
lret
ss
outsb
mov
and
enter
idiv
xchg
repz
mov
mov
sbb
lea
popl
jle
xlat
pop
pop
ja
popa
movsl
xchg
cmpps
aaa
jae
ret
mov
dec
add
hlt
lds
popf
sbb
mov
adc
sub
pop
adc
movsb
and
inc
mov
jae
dec
int3
ss
outsb
sarb
dec
jno
mov
add
mov
push
and
mov
push
cmpsl
jne
stos
push
inc
jno
arpl
or
outsb
sbb
je
faddl
lock
cmp
icebp
pop
pushf
and
and
negl
ficoms
ret
insl
jge
push
ljmp
mov
test
adc
inc
jne
push
push
paddusb
push
pop
jno
or
sti
and
or
outsl
sarl
xchg
dec
pop
bound
cs
jnp
out
insl
js
xchg
faddl
mov
mov
insl
jo
shrb
sti
sub
pop
jmp
andb
inc
movl
and
movsb
lods
sub
sarb
xlat
dec
in
xor
sahf
shrb
sub
jge
pop
lahf
ja
int
cltd
movsb
sbb
aam
in
sbb
push
cmp
repz
ljmp
adc
sbbb
test
mov
push
lock
dec
xor
cmpsl
mov
or
sub
imul
and
repz
push
xor
cmpl
adc
sti
xor
jg
adc
xchg
jmp
out
iret
cs
jnp
sub
imul
or
jno
sub
cmc
mov
xorb
xor
es
sub
iret
cmp
lret
aas
es
popa
fldl
inc
int3
push
dec
fdivl
and
cwtl
outsb
loopne
xchg
cmp
ds
dec
fs
jbe
pop
and
cmp
push
jl
popa
pop
xchg
jge
aaa
lret
inc
jbe
adc
and
sti
xchg
jo
jge
mov
fnsave
add
push
scas
jns
xor
flds
sahf
dec
and
pushf
mov
testl
hlt
rcll
dec
lods
je
xchg
xchg
imul
push
add
cmp
xorl
rclb
fdivs
into
or
pop
cmc
mov
iret
or
and
outsb
pop
sbb
ret
pop
jmp
cmp
or
xor
xchg
mov
stos
stc
stc
jl
dec
das
nop
jbe
cmp
lea
mov
ret
xchg
ss
or
in
jg
pop
test
cmp
jne
cld
push
sub
jg
pop
out
cmp
loop
sub
lods
pop
movsb
popa
push
inc
push
sbbl
test
mov
push
jno
arpl
filds
hlt
fdivl
loop
into
xor
xor
or
movsb
ds
test
xor
dec
cmp
outsl
add
cli
add
repnz
lret
xchg
sbb
test
mov
inc
push
ret
adc
or
les
shlb
sbb
je
jecxz
cli
dec
mov
xor
push
imul
xchg
adc
cmp
mov
popa
sbb
mov
adc
les
sub
pop
in
mov
xlat
mov
arpl
xor
sbb
rol
mov
xchg
xchg
in
adc
xor
cmp
scas
sub
jecxz
push
jmp
shrl
adc
pop
ss
andl
mov
insl
ret
out
imul
test
shlb
outsb
pop
test
in
pop
ret
inc
or
mov
mov
cmp
pop
in
fisttps
add
dec
add
cs
lods
ret
and
dec
pop
cs
mov
add
cld
out
pop
xchg
cmp
push
cld
add
adc
cs
push
sub
cmp
xor
jne
mov
bound
cltd
mov
je
pop
add
stos
dec
dec
loope
shl
das
or
pop
js
xchg
adc
imul
sub
xor
xchg
xlat
pop
jmp
dec
mov
loopne
jge
std
inc
loop
mov
xchg
das
mov
xchg
sub
subb
clc
mov
mov
shlb
in
repnz
inc
cmpsl
js
pop
dec
jb
add
mov
pusha
mov
je
jno
and
push
or
sub
fimull
sbb
and
pop
lcall
sahf
push
pop
dec
dec
ss
dec
mov
adc
push
pop
faddp
and
les
xchg
jo
cmp
outsl
xor
pop
xchg
or
jg
test
outsl
stc
jle
out
jg
inc
hlt
aaa
jl
leave
cmp
mov
fadds
mov
dec
decb
pop
push
fistps
shll
push
test
mov
int
jnp
push
mov
into
movsl
push
stc
jne
in
ja
mov
subb
xchg
pop
dec
sbb
cmp
jnp
out
fwait
jmp
movsl
cmp
ljmp
mov
adcl
xor
xor
push
popf
cmpsl
rorb
test
out
lock
inc
popf
testb
out
and
fisubrs
mov
adc
lds
fisttpll
mov
repnz
jle
xor
rolb
jno
das
test
pop
inc
xchg
dec
xchg
xor
dec
sbb
sbb
push
cmp
fcoms
mov
jne
add
mov
cmc
faddp
aas
mov
data16
fcmovnb
jge
jecxz
aaa
add
sti
inc
or
cmpl
mov
adc
inc
test
in
fwait
push
std
clc
lea
jnp
cmp
das
std
out
inc
iret
aam
mov
in
daa
sub
pop
sub
stc
ret
jnp
cmpb
repz
lahf
fiadds
mov
mov
jns
pop
push
xor
sahf
outsb
push
jnp
popa
mov
pop
ret
arpl
aam
dec
xlat
lret
cld
in
dec
xorl
addr16
cmp
or
pop
and
mov
xor
push
aam
icebp
jo
mov
inc
enter
pop
pushf
lret
mov
mov
jne
mov
adc
test
push
xor
jb
jl
das
sbb
aas
cmp
push
dec
push
out
aad
xor
mov
dec
icebp
mov
ds
dec
aad
popa
mov
sbbb
iret
push
inc
lds
sub
sub
movsl
or
add
mov
fldl
imul
int
mov
mov
sub
movsl
xlat
jp
ror
rcrl
es
push
andb
cmp
jp
pusha
sub
rcll
sti
jns
and
xchg
repz
imull
lahf
call
jge
xchg
dec
test
jbe
jl
addl
mov
mov
mov
cs
add
push
xor
icebp
testl
push
push
mov
xchg
lds
leave
xlat
out
cs
push
clc
insl
cmp
hlt
shll
push
jne
cmpsl
fnstenv
lods
mov
sbb
push
ds
push
fsubrl
pop
roll
xchg
je
mov
pop
insl
push
or
xor
lret
jge
jp
add
in
dec
inc
mov
mov
sub
shrb
aad
pusha
lret
lods
mov
pop
sub
mov
out
mov
xor
push
mov
loop
jp
dec
pop
into
dec
push
popa
mov
sbb
sbb
lock
push
loop
popa
in
rorl
pop
popl
dec
cmp
fbld
and
jp
into
push
xor
shll
xor
lahf
push
sbb
movsl
jb
mov
sbb
or
out
mov
adc
test
out
inc
sti
cltd
sub
pcmpeqb
cltd
dec
gs
push
insb
xchg
xchg
dec
dec
movsl
scas
and
cmpb
add
inc
out
imull
loope
inc
mov
repz
dec
sahf
and
iret
pop
enter
xchg
inc
test
pop
dec
xchg
into
shrb
in
out
iret
pop
test
popa
mov
pop
cli
jle
or
cmpsl
cmp
std
jecxz
add
or
scas
addb
xchg
in
ss
fcoms
dec
lret
xor
push
in
jae
xor
jg
imul
cltd
dec
sub
cltd
xchg
or
ja
pop
lods
ret
push
and
pop
loope
mov
loop
xchg
shrb
mov
fxch
push
mov
mov
xchg
inc
mov
stos
push
int
mov
jbe
cmp
mov
imul
cmp
adc
jmp
popa
shll
sbb
ficompl
and
dec
jne
and
pusha
adc
xchg
jmp
xor
dec
xchg
scas
inc
push
jb
shl
pop
xor
push
inc
push
xchg
aaa
jg
aas
ds
add
cmp
cmp
xchg
pop
push
mov
jp
mov
jnp
mov
fists
xlat
or
fstl
sub
aaa
mov
mov
pop
xchg
pop
dec
mov
pop
jns
sub
mov
xchg
xor
ss
dec
or
xchg
jb
cmp
ficomps
fstps
or
inc
loope
xor
loop
aam
cmp
push
dec
sbb
pop
enter
divl
or
fs
adc
fwait
cld
lea
mov
xchg
mov
inc
jbe
xchg
mul
lods
cmpsl
push
fsubs
cmpsl
jne
movsl
in
stos
aaa
repnz
xor
or
mov
push
idiv
mov
out
sbb
sub
xchg
dec
lcall
sarl
fwait
mov
loope
pushf
out
imul
inc
fwait
mov
test
sbb
sbb
cmp
test
xorb
outsb
mov
pop
cmp
das
out
inc
out
mov
xchg
xchg
mov
push
xchg
out
jne
lret
jge
js
mov
scas
cli
pushf
cmp
push
and
xchg
sbb
movb
mov
idivl
popf
cmpsb
andl
xchg
push
in
out
mov
cli
mov
inc
jle
dec
pushf
sbb
add
ds
xor
and
push
repnz
sub
lret
repnz
mov
push
pop
int3
and
jl
and
inc
shl
mov
mov
xchg
imul
je
xor
sub
lcall
call
push
add
sbb
in
pop
lods
adc
cmp
iret
ss
movsb
xchg
rcll
roll
inc
mov
and
pop
sbb
mov
imul
daa
xor
jmp
outsb
into
fdivrl
mov
popf
inc
pop
mov
inc
sub
or
pop
and
imul
or
popa
mov
pop
addr16
inc
ja
xor
mov
and
and
nop
and
sti
cli
cmp
mov
flds
push
inc
inc
jge
push
mov
push
jo
je
cwtl
inc
out
adc
pushf
cmp
negl
jne
or
arpl
out
mov
cmp
push
mov
dec
test
mov
hlt
pop
lahf
add
rcrl
pop
inc
sub
bound
dec
adc
dec
addl
push
outsl
loop
das
sub
push
inc
push
and
mov
add
xchg
xor
add
and
inc
adc
lods
ljmp
jo
mov
pop
push
movsl
xchg
xor
insl
aas
cmp
push
dec
push
imul
repnz
lds
sbb
pop
out
rol
frstor
leave
xchg
fcomi
adcb
ret
adc
out
sbb
into
xor
shrl
mov
mov
les
lcall
add
pushf
xchg
fdivs
jp
xchg
mov
sub
and
cmp
xchg
js
xchg
icebp
shr
push
js
inc
jae
or
scas
mov
adc
pushf
dec
cmpsl
xchg
inc
frstor
stc
cmpsl
xchg
sbbl
or
jo
out
movups
fwait
les
pusha
cli
repnz
lahf
cmp
add
ja
sbb
ss
jmp
mov
movsl
jg
xor
dec
std
mov
mov
and
stos
sbb
jl
pop
push
aaa
ret
pusha
int3
push
adc
cmpl
xchg
ja
xor
scas
cmc
movsl
or
ret
jae
roll
loope
mov
leave
aaa
mov
imul
jp
imul
shlb
mov
inc
xchg
call
lahf
mov
int3
push
imulb
mov
int
xchg
cmc
dec
into
loopne
xchg
mov
sub
jle
hlt
mov
and
hlt
push
out
jle
xor
mov
push
inc
je
test
mov
call
and
mov
filds
cmp
push
outsb
mov
pop
nop
and
and
jnp
or
jge
pop
loop
fists
aaa
xor
sbb
and
xor
aad
cmc
jbe
scas
adc
outsl
push
ja
cmpsb
cs
xchg
cmp
bound
push
jl
mov
out
stos
jmp
popa
jg
test
iret
pop
dec
cltd
dec
stc
sub
sbb
mov
ss
loope
pop
ljmp
insb
lods
mov
push
or
mov
xor
lds
rcrb
adc
push
mov
stc
jns
xor
mov
push
loope
or
movsb
out
ficompl
into
cmp
and
jno
orl
stos
xchg
mov
xchg
les
fistpl
daa
loope
mov
mov
adc
cmpsb
xor
jnp
aad
mov
iret
push
out
xchg
add
rcrl
add
lods
adc
cmp
inc
or
frstor
pop
mov
lcall
mov
int3
mov
xor
cmpsb
aas
xchg
pop
ret
cmp
clc
loope
jg,pt
fstpl
in
add
push
xchg
fs
mov
daa
mov
sub
les
outsb
sti
mov
lods
ss
fldcw
xchg
mov
add
rcrb
in
sbb
pop
in
pop
inc
ss
out
cmp
adc
dec
shlb
leave
adc
sbb
xor
pop
das
fistl
and
xchg
or
roll
xlat
sub
pushf
daa
int3
xor
mov
aad
jmp
cmp
mov
stos
in
dec
push
sahf
enter
in
test
int3
jne
fimull
ret
mov
jg
xchg
mov
lcall
push
add
in
call
stos
jp
jb
dec
mov
xchg
out
out
sbb
cmp
xchg
or
pushf
lret
enter
ljmp
mov
mov
mov
sbb
lods
jl
xchg
pop
hlt
cmp
scas
hlt
pop
in
inc
add
dec
mov
jle
nop
xchg
das
inc
ret
rcr
xor
out
jle
cs
mov
mov
jp
push
dec
inc
dec
shrl
leave
jb
repz
cli
icebp
fisubl
idivb
imul
cmp
subb
sti
rcrl
xor
ret
gs
xlat
pop
add
push
sbb
bswap
and
xor
xchg
and
dec
mov
repz
repz
push
sbb
xlat
clc
mov
xchg
fadds
dec
mov
ret
cmp
jg
test
ljmp
das
ficomps
inc
cmp
xchg
add
adc
inc
jo
mov
ds
xchg
ret
dec
ljmp
incl
scas
push
testl
push
mov
or
test
adc
cwtl
call
push
jp
movsl
inc
fwait
push
lds
popa
rclb
sbb
mov
jecxz
sbb
jo
repnz
test
pop
negl
out
dec
cmpsb
rol
mov
push
push
pushf
push
jne
mov
in
sbb
inc
sarl
cmpsb
iret
mov
jnp
test
cmp
lods
xchg
jl
cmpsl
data16
mov
call
test
loop
mov
popa
movsl
lods
xor
xchg
mov
pop
cmp
mov
dec
adc
outsl
add
cmp
sbb
and
jmp
or
or
shrb
icebp
popa
fldenv
xchg
mov
or
dec
ljmp
lock
fmull
cmpsb
push
mov
push
or
inc
xchg
mov
out
mov
mov
sub
popa
and
adc
lock
or
jb
mov
mov
or
push
imul
daa
stc
or
and
xchg
cmp
das
insb
addb
ss
xor
icebp
leave
mov
fcoms
add
jb
lret
xchg
out
add
inc
ljmp
pop
sbb
dec
dec
adc
in
repz
push
xlat
lea
cmp
and
fistps
add
hlt
hlt
and
sub
cmp
sti
lret
lea
inc
mov
jnp
and
daa
aas
jae
jle
xchg
add
in
add
cwtl
sub
mov
aad
test
and
aad
sub
mov
push
mul
or
in
in
das
fldz
push
pop
fildl
test
cmp
inc
jp
scas
push
orl
addr16
and
lea
cmp
xchg
scas
mov
mov
loop
jb
pop
ss
stos
gs
in
and
sarb
cmp
lea
add
adcl
out
addr16
loop
in
jns
add
pop
inc
sub
and
push
jge
dec
out
fcoml
aam
rcl
mov
mov
xchg
mov
test
in
mov
sahf
int
jae
hlt
cmp
xchg
sub
jl
xchg
in
lock
push
ror
add
mov
mov
loopne
dec
xchg
cltd
xor
pusha
aas
repnz
hlt
call
and
lcall
fidivrl
jne
or
adc
adc
lea
cmp
push
push
fs
aas
xorl
loop
aam
fidivrs
sbb
jo
in
lahf
dec
xor
pop
push
push
bound
pop
je
cmc
add
and
adc
int
dec
inc
fdivs
adc
sbb
jl
add
mov
movsl
shlb
loopne
jecxz
jge
movsb
outsl
mov
xorw
jb
add
stos
mov
sahf
nop
mov
sub
movsl
cs
mov
idivl
jmp
into
aam
jmp
call
repz
jo
mov
popa
mov
adc
jne
int
pop
sub
or
push
data16
loopne
push
cmp
iret
xor
jmp
mov
dec
add
cmc
adc
subl
pop
fs
mov
cmp
push
daa
das
mov
push
hlt
sub
in
push
in
mov
adc
mov
or
aad
lcall
pop
flds
ss
mov
adc
pop
jb
ljmp
dec
fwait
mov
das
push
icebp
insl
inc
repnz
push
and
out
fidivs
xor
popa
xorb
ror
push
insb
fsubr
mov
mov
xor
jl
sub
mov
xlat
scas
adc
sbb
jbe
sub
icebp
xchg
repz
daa
cltd
testl
lcall
sbb
int3
mov
cmpsl
push
repz
cs
push
in
dec
into
push
daa
mov
inc
daa
adc
incb
push
ret
daa
sbbl
inc
subl
mov
sbb
dec
push
sbb
xor
std
aas
shl
mov
xorl
ror
in
dec
adc
xlat
sub
jb
jge
scas
test
fwait
je
cld
add
push
xchg
and
daa
fcmovu
jecxz
lret
movb
dec
add
jge
mov
and
inc
adc
mov
mov
xlat
jmp
push
mov
in
lcall
push
mov
push
mov
xor
roll
gs
cmp
pop
gs
in
aam
repz
int3
in
fs
movsb
lahf
lds
insb
jns
mov
jno
popf
imul
andps
jl
mov
pop
pop
lea
movsb
imul
adc
enter
cwtl
cmpsb
popf
in
mov
xchg
lahf
cwtl
mov
cmpsb
push
mov
push
enter
jno
sbb
test
jle
fisttpl
mov
inc
je
sarl
gs
sub
mov
pop
jg
push
cmpsl
out
jmp
mov
adc
lods
jns
daa
jns
ret
fists
xchg
mov
mov
call
adc
adc
dec
xorb
xchg
inc
loop
mov
int3
pop
mov
out
clc
add
inc
sarb
clc
pop
sub
leave
xchg
sbb
rclb
fdivs
faddl
dec
pushf
push
add
mov
ret
dec
inc
dec
push
or
jb
push
gs
push
mov
adc
and
mov
dec
les
push
mov
cmc
lds
imul
pop
sbb
sbb
inc
inc
pop
push
mov
scas
inc
cs
in
jo
arpl
repnz
jp
les
lds
mov
add
inc
jge
jnp
xor
pop
in
mov
or
jge
dec
hlt
out
sahf
lahf
leave
jo
lea
inc
mov
mov
out
cmpb
in
pop
dec
sbb
jecxz
sbb
dec
xorb
cmpsb
mov
pop
pop
cmc
mov
push
lods
pop
mov
lock
sti
jmp
or
dec
lods
aaa
fbstp
pop
out
outsb
fistps
sbb
inc
scas
xorb
out
rorl
xchg
cmp
int
push
xor
mov
sbb
lea
fsts
pushl
jne
jg
jnp
std
push
not
mov
test
and
and
imull
jae
lret
gs
shll
ja
xor
shll
clc
dec
adc
xor
mov
and
test
pop
out
xchg
and
in
xchg
ljmp
xchg
and
adc
dec
arpl
cld
lret
dec
iret
pop
mov
daa
shlb
das
sti
out
scas
and
cmpsl
sbb
lahf
or
and
dec
out
dec
in
pop
sahf
addr16
sub
movsl
insl
dec
mov
cmpsl
push
add
in
dec
aaa
sahf
popf
xchg
sub
mov
add
xchg
inc
jns
mov
aad
sbb
pop
xchg
shl
cmp
fcmovbe
mov
pop
test
dec
jae
stos
push
loopne
std
inc
int3
rol
aas
jns,pn
mov
pop
shr
fwait
jmp
int
sbb
jne
mov
xchg
sub
pusha
mov
in
mov
aas
mov
mov
test
and
fidivl
or
mov
ss
cmc
push
dec
xlat
lret
and
pop
cmp
loope
adc
stos
iret
out
andb
push
adc
leave
adc
xorb
sbb
es
std
jae
test
jmp
mov
rdtsc
and
cmc
cmp
dec
mov
fistl
or
jne
or
enter
adc
xchg
mov
sub
out
je
xlat
repnz
fists
ss
xabort
shrb
sub
popf
xor
movsl
mov
test
mov
inc
insl
movsl
dec
arpl
aam
mov
lods
rclb
add
jno
lret
js
xor
jecxz
jbe
push
mov
aad
hlt
pop
ffreep
dec
roll
dec
mov
fistps
dec
cmpsb
movd
data16
iret
imul
xor
adc
mov
xor
pop
jbe
sub
lret
add
ret
fidivl
movsb
outsb
stos
icebp
mov
xor
xlat
cmp
arpl
push
sbb
cs
push
divb
clc
mov
sbb
mov
cmc
push
and
frstor
adc
aam
roll
xchg
data16
or
cmp
lods
add
jecxz
and
cmc
andl
sub
sub
inc
dec
pop
mov
loop
lds
test
aas
adc
shrl
adc
sbb
call
sti
add
jae
push
arpl
enter
ret
cli
movsl
add
daa
mov
mov
adc
out
xchg
mov
mov
out
inc
add
fdivl
xchg
sub
push
sub
lods
inc
or
mov
or
lds
inc
lret
push
or
cmpsl
mov
dec
cltd
outsb
add
aas
xor
sbb
mov
adcb
fisttps
xor
in
enter
shl
push
scas
fidivs
or
mov
xor
test
add
push
lcall
gs
or
in
mov
loope
add
and
pextrw
cmp
dec
mov
fbstp
pop
cmp
add
mov
les
mov
into
jp
cmc
cmp
xchg
sbb
xchg
cmpsl
cmp
pop
insb
push
push
inc
movsl
iret
sti
dec
inc
jl
mov
inc
test
out
rolb
or
mov
movsl
sbb
mov
in
inc
push
xchg
outsb
cmc
pop
es
mov
jge
in
jecxz
loope
imul
pop
cmpsb
lret
push
clc
sbb
adc
pop
push
inc
movsl
cld
ss
lods
push
or
fsubrl
xor
lret
pop
cltd
fdivs
push
jecxz
cltd
outsl
push
push
lods
jmp
scas
pop
pop
data16
push
xchg
lret
popa
dec
rcl
rolb
nop
loopne
stos
mov
or
mov
std
push
adc
add
addl
neg
cmc
mov
push
sbb
data16
jg
cmpsb
into
int3
ja
cmpsb
inc
and
leave
or
movsb
testl
outsb
jb
mov
and
pop
mov
mov
shrb
loop
and
hlt
ja
xor
pop
jg
pushf
loopne
pop
call
mov
mov
dec
fistps
ret
xchg
in
loop
es
mov
adc
data16
mov
mov
xchg
cmp
jl
outsl
mov
jo
loope
int3
aas
adc
pusha
add
jge
and
and
cmpsb
jl
out
cmpsb
rorb
xor
fiaddl
loop
pop
test
dec
in
mov
mov
dec
inc
mov
pop
mov
lret
and
mov
clc
cltd
jbe
in
std
ret
adc
insl
scas
push
fwait
xor
xchg
push
imul
aam
and
inc
add
test
jle
inc
push
pop
jmp
subb
inc
repnz
dec
mov
stos
mov
fstps
insl
lods
mov
pop
jno
leave
pushf
xchg
sub
jl
jle
in
es
mov
mov
scas
mov
cmc
hlt
lcall
imul
test
and
add
mov
xchg
out
inc
sbb
xor
int
push
das
pop
sbb
sarl
call
and
dec
sbb
arpl
xor
inc
movsl
mov
sbb
mov
xor
adc
cs
orb
flds
mov
xchg
sbb
in
cmc
imul
mov
mov
add
cmp
pop
out
push
push
repz
aaa
mov
fwait
xchg
ds
in
cmpsl
flds
lods
or
and
stos
sbb
repnz
sbb
push
add
push
sti
mov
outsl
pusha
pop
mov
cmovns
aad
out
sbb
push
sub
mov
lcall
dec
cmp
sbb
cmpsl
dec
sbb
in
pop
adc
dec
dec
or
xchg
lret
xchg
in
cmp
or
pop
pop
das
pop
dec
call
xor
mov
inc
mov
lods
popf
test
shll
cmp
movsl
sbb
mov
fcomps
and
test
inc
aaa
std
jo
and
jge
sub
fsts
sbb
es
push
inc
jmp
adc
repnz
inc
xchg
xor
xorb
mov
dec
pop
aam
ja
xchg
cmpsb
or
and
cmp
out
mov
xchg
gs
fwait
ret
js
xor
pop
and
pop
out
test
stos
mov
jp
cmp
jae
jmp
cmp
nop
bound
cmp
dec
cmp
cwtl
or
test
scas
dec
movsb
sarl
out
mov
fisubrs
cs
add
jb
fstl
cmc
fwait
add
or
mov
mov
shrb
push
inc
adc
and
xchg
shll
or
jo
mov
insl
jg
adc
pop
xor
dec
lahf
cmp
lock
dec
incl
test
sbb
jbe
mov
cmpsl
mov
std
pop
mov
shlb
or
mov
imul
mov
mov
mov
mov
jns
xchg
jp
lcall
aaa
arpl
mov
xor
sbb
mov
pop
xor
sbb
mov
fadds
insb
rclb
iret
scas
mov
push
mov
repnz
xchg
fisttpl
sbb
pop
mov
pop
xor
xchg
cmc
xchg
inc
add
xor
mov
dec
add
jae
jmp
lods
cltd
mov
arpl
test
out
mov
jl
das
cmp
outsb
js
xor
jbe
push
shrl
pop
sub
jecxz
add
int3
out
mov
lea
into
data16
daa
jnp
stos
int3
cmpsl
ret
stc
lock
push
inc
adc
mov
or
mov
push
xlat
mov
lahf
clc
cli
mov
test
mov
mov
imul
cmp
imul
jmp
out
ss
jp
xlat
sub
xchg
negb
rorl
dec
pusha
sti
cmp
fildl
out
pop
call
test
std
fdivrs
sub
sub
push
and
pop
lock
ret
xchg
cmp
jb
pusha
popf
sub
ss
xor
or
ja
ss
scas
cld
pushf
and
push
push
xorb
cmp
cmp
jnp
cmp
sbb
jle
fisubrs
loopne
push
addl
push
jmp
mov
mov
ret
sbb
test
xchg
aas
fmull
xchg
and
aas
les
xchg
fwait
adc
push
jno
xchg
mov
gs
daa
pop
and
jne
pop
and
insl
jle
bound
stos
pop
int
jge
adcb
aad
inc
jge
push
xchg
mov
push
aam
add
test
and
mov
jmp
loop
arpl
inc
mov
sahf
mov
or
subb
mov
and
popf
daa
fstl
addr16
mov
dec
out
out
lods
add
adc
stos
clc
jl
or
andb
in
pushl
pop
out
xchg
push
pop
push
cld
inc
jb
pop
pop
sbb
fisttpll
jno
fmuls
jp
push
pop
scas
inc
mov
add
push
testb
test
xchg
mov
fidivs
out
and
or
leave
push
cmp
and
cmc
cmpsl
dec
pusha
jp
or
test
out
push
mov
add
outsl
add
lahf
mov
js
cltd
popf
jnp
push
stc
or
rclb
dec
sbb
and
jg
test
negl
sub
mov
insl
xor
push
pop
jp
inc
cld
jg
jl
fcmovnbe
jecxz
mov
add
imul
cmpsb
cs
pop
adc
ljmp
xchg
sbb
pop
sbb
data16
sub
jno
jo
notb
jmp
lock
xchg
std
out
push
mov
repz
lea
lret
jmp
inc
stos
mov
push
mov
xor
xchg
insl
cwtl
mov
xlat
sub
cmp
sub
out
rorl
test
stos
mov
xchg
call
mov
xchg
fsubrl
loope
loope
sbb
sub
stos
idivb
hlt
scas
fiadds
mov
sbb
insl
test
adcl
das
dec
movl
add
inc
xor
fdivrs
stos
div
fs
pop
loope
call
inc
rol
dec
hlt
iret
fwait
push
cs
jo
sti
mov
jmp
add
insl
mov
inc
out
jo
testl
mov
rcll
iret
popa
or
fiaddl
test
in
add
aaa
xor
xchg
fs
rcrl
out
pop
roll
mov
rcll
outsb
xor
pop
fsub
inc
sub
push
xor
push
xchg
filds
bound
mov
push
stos
inc
cmp
pop
sbb
push
push
inc
leave
pop
orl
pop
cltd
mov
mov
mov
add
dec
jle
push
or
addr16
ret
push
mov
pop
jl
jbe
xor
mov
aas
sub
mov
push
test
sbb
sub
les
jns
sahf
sahf
xor
add
pop
cmp
xchg
iret
jmp
jns
aam
popf
pop
nop
pop
ds
pop
pop
pop
inc
out
mov
or
leave
in
mov
aaa
iret
mov
inc
rolb
aaa
scas
add
pop
cli
scas
mov
fmuls
push
fld
call
dec
inc
xchg
out
lods
and
daa
mov
xchg
jae
rcrl
lcall
jb
jle
inc
jbe
shrl
fs
inc
mov
ret
jno
cmc
jb
sarl
adc
jns
cmp
stos
out
dec
fcom
sub
push
negl
imul
sbb
sub
dec
and
popa
dec
add
or
and
fdivrp
sbb
loope
je
push
mov
aas
aad
popf
test
inc
popf
sbb
adc
repnz
or
and
movsb
lods
add
push
hlt
scas
sub
leave
mov
pop
pop
jae
das
movsl
stos
scas
nop
js
jmp
es
and
outsb
xchg
ret
lea
pop
aam
int3
cmp
jbe
push
hlt
stos
pop
adc
mov
ds
dec
sar
jmp
cs
sub
lahf
pop
sub
repnz
add
lret
or
cmp
push
lcall
movsl
and
movsl
pop
sub
push
sub
push
fsubrp
cmp
jb
aaa
shl
xchg
adc
pop
fimuls
or
sbb
sub
xorb
push
sbb
fstpt
jmp
imul
xchg
enter
test
sub
enter
and
imul
loop
adc
or
mov
mov
cmpsl
jmp
fwait
out
stos
jae
out
xchg
mov
cld
pop
cwtl
push
inc
push
mov
add
stc
mov
mov
cltd
pop
jle
leave
cmp
in
lods
cmp
ror
and
in
clc
mov
aad
mov
movlps
dec
pop
pop
mov
push
sbb
addr16
fimuls
clc
les
aaa
addb
jp
jb
xchg
bound
jecxz
lods
pop
jo
aaa
out
cmp
inc
cmp
cmp
adc
dec
add
hlt
mov
xchg
shrb
mov
mov
repnz
scas
xor
orl
cs
imul
gs
xchg
fcoml
into
icebp
cld
xor
data16
ljmp
dec
xchg
push
push
xorl
jno
dec
por
dec
and
xchg
rolb
aas
inc
inc
cld
mov
push
jne
stos
mull
dec
mov
adc
or
jp
xor
test
mov
rorb
imul
aas
pop
xor
dec
popa
dec
shrb
xlat
shll
adc
aaa
mov
ficomps
icebp
or
addl
or
push
in
shlb
outsb
nop
sti
mov
popa
push
pop
inc
lret
es
jo
rclb
loopne
hlt
push
shl
sahf
xchg
push
and
cmc
adc
repnz
sti
inc
bound
cmpb
cltd
icebp
lret
fnsave
or
scas
push
andb
pop
ret
aam
popa
sbb
roll
push
pop
aam
xchg
mov
mov
xchg
sahf
ja
repnz
rcrb
sub
sub
inc
into
insl
inc
pop
mov
int3
jns,pn
jbe
push
mov
mov
and
pop
in
in
cmpl
pop
hlt
out
mov
repz
and
sbbl
add
mov
jg
popf
jmp
inc
insl
ret
cmpl
sti
jae
mov
sbb
sbb
popa
in
sub
ds
in
aaa
ljmp
jnp
hlt
lret
scas
stc
daa
int3
movntps
ss
je
and
repnz
and
test
cmc
mov
mov
and
mov
sbb
aaa
in
stos
orb
lcall
jo
jge
rcll
call
jno
or
mov
dec
scas
addr16
call
lcall
adc
rcrl
fld
shll
and
xchg
fisttpll
les
daa
ss
jno
sub
fs
pop
rorl
pop
add
stos
into
fcom
adc
cmp
mov
cmc
aam
xchg
jge
fwait
xchg
inc
sahf
mov
xchg
add
and
addr16
add
dec
leave
add
lahf
notb
int3
jl
lds
insl
aad
loop
je
add
cmpsl
push
movsb
jbe
fisubrl
and
inc
bound
movsb
xchg
xchg
sbb
negb
jnp
cmp
sbb
loopne
out
jecxz
leave
out
mov
fs
inc
dec
cmc
push
mov
into
jl
lret
outsl
iret
fildl
dec
fcoms
pop
sbb
in
mov
cmp
jne
mov
in
ja
xchg
inc
add
sbb
test
sbb
xor
mov
stc
mov
test
mov
adc
and
cli
pop
dec
mov
push
fsts
xchg
jo
dec
mov
ljmp
cmp
jae
mov
xchg
rcr
cmpsb
dec
xchg
add
fnstcw
lock
das
pop
adc
push
pop
dec
lds
cmc
and
xor
aaa
push
push
popf
xchg
stos
jns
sahf
or
mov
movsb
mov
add
pop
jbe
and
jne
and
push
mov
sahf
sbb
or
loope
dec
and
inc
jmp
mov
pop
in
and
cs
cmp
sbb
xchg
cmpsb
mov
cmp
in
leave
shll
xorb
add
jmp
in
arpl
jo
xor
cld
repz
sub
adc
js
jp
adc
mov
ljmp
ficompl
pop
outsb
stc
sahf
pusha
rcll
aaa
and
and
push
in
fnsave
jge
fldcw
mov
mov
sbbb
in
sahf
in
cmp
inc
imul
aas
fbld
test
lea
push
adc
pop
std
mov
or
mov
aas
jo
lahf
or
outsb
mov
popf
lods
test
scas
pop
movsl
repnz
sbb
xchg
pop
mov
lcall
insl
and
sbb
hlt
mov
add
orb
in
cld
pushf
ja
sub
push
mov
pop
dec
ret
ljmp
test
lods
push
out
adc
outsb
jp
mov
mov
mov
push
xor
sbb
xchg
mov
fs
push
mov
bound
mov
push
and
mov
inc
aas
repnz
inc
push
inc
xchg
dec
scas
pop
inc
shlb
in
jne
fistpl
imul
pop
push
cmp
mov
dec
push
mov
ret
and
sub
repz
inc
pop
cld
xlat
clc
std
imul
cmp
mov
add
and
sub
dec
subb
lds
insl
in
cmp
mov
lods
lock
push
jle
and
sbb
jns
sub
adc
lea
mov
dec
mov
xchg
notb
dec
gs
cmp
das
jnp
mov
int3
inc
pop
iret
hlt
insb
dec
daa
mov
cmp
call
sub
jmp
jbe
jl
das
nop
pushf
ja
incb
mov
add
clc
sarl
push
ljmp
das
jp
out
hlt
jle
xor
mov
cmpsl
xor
fwait
push
call
pop
stos
pop
jge
jbe
out
sub
repnz
gs
and
pop
stos
aaa
dec
push
sub
lcall
hlt
mov
dec
mov
testl
sbbb
sti
stos
and
test
into
push
fadd
push
push
in
repnz
jmp
dec
or
aam
cmpsb
cmpsl
sub
fistps
adc
test
mov
andl
ja
ja
mov
mov
push
jle
mov
aam
pop
mov
jno
mov
cmp
or
popa
cmovno
mov
dec
and
push
add
pushf
inc
jmp
inc
push
cmp
push
jge
xor
and
dec
adc
movsl
mov
dec
sahf
aaa
fwait
icebp
repnz
nop
or
jmp
and
push
aad
subb
push
cs
leave
lret
ss
inc
or
inc
or
cmpsb
repz
adc
xchg
nop
cmp
outsl
test
dec
iret
sub
mull
mov
hlt
add
push
pop
mov
shlb
jmp
jg
es
jno
add
in
mov
or
fs
mul
jno
fcomps
lds
cmp
rorb
adc
jae
xchg
fidivl
xorb
xor
sub
adc
cld
sbb
pop
adc
dec
lock
loop
and
ret
mov
mov
cmp
mov
mov
sbb
xchg
push
ret
imul
stos
dec
dec
push
pop
jp
xchg
fistps
sub
adc
adc
in
fs
sub
cmpsl
dec
idivl
and
add
ds
sti
nop
pop
jmp
mov
push
jne
push
or
mov
mov
lahf
sar
or
rol
xchg
dec
jne
sbb
inc
ljmp
bound
sub
sbb
push
outsb
loop
insl
adc
ljmp
push
test
iret
xor
lds
fistl
enter
dec
push
test
mov
daa
insb
xor
and
pusha
test
inc
addr16
sub
jnp
pop
xor
xchg
jns
xlat
pop
sar
adc
add
inc
addb
jns
jne
adc
in
aad
push
sbb
imul
add
popa
mov
dec
test
add
add
testb
movsl
mov
rcr
sbb
mov
cmp
mov
adc
mov
pop
cs
lret
ljmp
fucom
or
and
hlt
mov
add
int3
ret
xor
sbb
mov
mov
sahf
in
movsb
add
add
aad
sbb
push
dec
out
in
rolb
add
rcl
sub
sub
pop
repnz
insl
mov
or
das
cltd
and
fistps
jno
test
or
adc
dec
lahf
loop
mov
outsl
imul
mov
mov
xor
lcall
cltd
sbb
lahf
outsl
cld
arpl
scas
xor
pop
loop
and
add
jae
or
jmp
mov
xor
cli
xchg
or
lea
loope
or
shlb
insl
xchg
sbb
fwait
pop
add
xchg
jae
adc
jp
xchg
adc
and
rcll
ret
and
jnp
add
ret
lds
mov
repz
push
int3
out
xchg
mov
or
add
mov
adc
pop
aas
mov
ja
imul
fdivl
out
push
pop
ja
mov
jnp
jno
jmp
scas
test
fldcw
push
sub
jbe
in
mov
mov
adc
rolb
or
subl
jb
pop
nop
or
sti
jecxz
xchg
sub
or
fcomps
sti
movsl
dec
push
or
xor
mov
or
mov
popf
add
xor
insl
sti
ja
mov
iret
mov
psllq
addr16
divl
xchg
sbb
insb
xlat
fxch
lock
jne
pop
outsl
dec
pop
addr16
cmp
and
cmp
stc
mov
mov
inc
cmpb
scas
into
mov
cltd
inc
out
add
dec
push
jmp
xchg
les
sbb
pop
fs
bound
mov
addb
pop
push
or
lahf
das
mov
enter
push
jge
fwait
lahf
dec
adc
xchg
lds
cmp
jg
fcomp
xor
bound
xchg
pusha
mov
xor
xchg
mov
int
jo
sbbl
out
test
pop
pop
sub
cmp
push
xor
sbb
les
subps
add
or
test
inc
movsb
pop
ret
sbb
lods
mov
leave
sub
lahf
pushf
mov
xchg
jno
jae
mov
or
cs
xchg
xor
mov
pop
lods
mov
fidivrs
dec
jno
int3
inc
pop
inc
add
dec
adc
pop
add
cmc
test
inc
jae
fldenv
cmp
shlb
mov
cmp
out
movsl
test
fstpt
ss
sbb
test
add
push
cmp
or
in
sti
xchg
adc
cli
sub
les
popa
rorb
xor
dec
jae
pop
add
and
mov
xchg
dec
sub
jno
cmp
mov
jmp
sub
pushl
push
xchg
mov
mov
xlat
ss
stc
clc
mov
int3
push
int
into
and
lods
cmp
xor
push
movl
mov
cmp
mov
lods
test
movsl
repz
lret
cmp
jmp
ret
pop
adc
mov
pushf
mov
clc
pop
es
div
adc
cltd
jp
mov
and
outsl
adc
arpl
jae
mov
cmp
jae
fcoml
in
or
mov
pushf
sbb
enter
les
mov
mov
fists
mov
out
imul
xor
adc
testl
dec
in
cmc
shlb
ret
adc
sub
xchg
sbb
js
int
sbb
cmp
pop
call
call
fldl
or
sarl
mov
xor
cmp
mov
sbb
icebp
mov
out
mov
mov
js
repz
sbb
inc
and
call
je
push
mov
insb
mov
sahf
int3
cltd
or
repz
pop
jp
xchg
loop
mov
outsl
jae
pop
xchg
mov
pop
insb
xor
cli
xchg
negl
les
xor
jne
mov
inc
or
daa
jae
call
sbbb
mov
adc
dec
cmp
cltd
sbb
outsl
pop
fwait
lods
sbb
rclb
fsubp
mov
jmp
in
mov
inc
fbstp
push
adc
pop
loop
sbb
inc
jns
and
adc
dec
add
adc
adc
xchg
inc
add
pop
fsts
push
add
mov
addr16
adc
sarl
or
out
cmp
dec
sub
dec
test
or
push
mov
test
idivb
xor
inc
inc
or
sbbb
push
pop
adc
ljmp
and
fnstsw
inc
je
sub
pop
lock
mov
cs
aad
mov
xor
inc
insb
sub
pop
jae
cmpl
dec
insb
mov
lods
mov
mov
mov
xchg
jecxz
lock
movsb
ds
lods
stos
into
or
sahf
cmpsb
stos
mov
ficompl
xlat
outsl
leave
xchg
insl
es
in
dec
jnp
mov
in
xchg
shll
test
xor
jge
mov
pop
lret
push
pop
jl
mov
leave
push
dec
mov
pusha
mov
sbbl
roll
mov
fmuls
xor
sub
jno
cmp
fcom
xchg
lahf
inc
loope
in
ds
mov
push
and
test
mov
push
pop
mov
push
shlb
icebp
out
jbe
imul
out
insb
cs
and
jle
push
loop
xchg
aam
jnp
insl
cmp
sbb
jbe
push
pop
notl
push
xchg
sbb
in
jo
xchg
loopne
test
and
cmp
or
inc
rdpmc
cwtl
sub
cmp
sbb
xor
jb
mov
loop
scas
sub
cs
sub
xor
mov
push
aas
mov
inc
sub
adc
shrl
fwait
cmp
sahf
in
jns
lahf
jns
mov
mov
and
cmp
out
lret
pop
dec
jmp
push
lock
jle
cli
mov
jp
dec
arpl
stos
sbb
sub
cli
movsb
addr16
lods
jb,pt
insl
lods
jecxz
push
icebp
in
iret
inc
dec
fisubs
xor
or
dec
sbb
enter
pop
inc
ret
ret
adc
adc
popa
add
dec
xlat
and
push
inc
aas
popa
imul
fdivrl
mov
inc
xor
lds
push
xchg
scas
adc
jbe
mov
rcl
popa
adc
fmuls
adc
fsubrl
push
cmpsl
andb
shlb
mov
jle
jbe
or
xchg
sub
mov
repnz
rcr
scas
jmp
mov
pop
push
loop
jg
arpl
inc
mov
fidivrl
mov
xor
xor
cltd
js
enter
push
mov
cmp
jle
lret
jp
inc
inc
push
stos
orb
jg
mov
inc
mov
cwtl
ret
daa
icebp
jmp
es
xchg
push
inc
js
dec
jl
xchg
mov
sarl
out
insb
xchg
imul
pop
repnz
fmull
dec
loope
and
in
push
lcall
subb
insl
jo
jno
call
add
cmp
insl
and
mov
jge
add
dec
push
lret
ret
test
movl
lds
outsl
clc
stos
dec
mov
xchg
loopne
mul
js
xchg
jbe
in
fwait
daa
pop
push
pusha
sbb
aaa
adc
lock
xchg
dec
cli
mov
dec
rcll
decb
flds
fxch
mov
sub
bound
sbb
out
nop
xchg
clc
jb
dec
mov
int
insb
sub
xor
mov
sbb
aas
aam
mov
je
and
push
in
std
rcr
decl
jge
gs
hlt
dec
push
inc
test
je
add
rol
xlat
popf
mov
pop
int3
scas
fstp
std
imul
cmp
pushf
rolb
push
xlat
mov
inc
out
rorb
insb
jo
leave
and
lret
mov
adc
cmp
lret
pop
push
popf
mov
dec
enter
lods
cmp
call
mov
aad
cwtl
jp
or
pushf
das
mov
ja
push
or
fidivrl
neg
ss
xor
iret
mov
lret
pop
ret
sti
imul
mov
fwait
pop
add
pop
divb
add
inc
aas
push
insl
or
cwtl
and
pop
nop
icebp
inc
sti
fdivs
xor
leave
jo
mov
andb
scas
iret
push
xchg
xchg
add
inc
bound
push
stc
jnp
jbe
add
mov
mov
mov
sub
loop
push
dec
sub
popa
in
fmull
dec
daa
fs
es
or
jg
sbb
in
cmpsl
xor
cmp
lcall
test
pop
pop
and
cmc
fdivl
and
imul
mov
movsb
mov
rcrl
dec
mov
pop
das
je
movsl
pop
xchg
pop
sbb
test
and
sub
pop
xchg
mov
into
mov
ret
cmp
lahf
cmpb
das
jns
cld
cltd
pop
jle
fildl
pushl
pop
mov
dec
lahf
lcall
pushf
inc
ret
mov
dec
mov
out
sbb
cmp
scas
or
lods
rcrb
jae
jp
push
or
mov
xor
push
jne
or
xor
cmp
xlat
cli
xchg
and
adc
cmc
push
in
dec
add
pop
pop
jg
sbb
mov
inc
fs
or
inc
xchg
mov
and
daa
in
adc
test
insl
cmp
xor
int
mov
inc
lea
sub
dec
mov
imul
lods
ja
xor
js
jmp
mov
and
test
sub
js
sub
out
xchg
mov
sub
loope
stc
mov
inc
stc
sbb
pop
lahf
in
bound
or
and
lahf
in
lds
inc
sub
adcb
fwait
addr16
xlat
dec
jecxz
mov
push
movsl
test
stos
leave
scas
mov
push
pop
sbb
popf
lea
in
popf
mov
rorb
ret
pushf
and
jnp
popf
insl
je
popf
mov
stc
adc
popa
dec
fstpt
sub
mov
push
fmuls
lret
icebp
jecxz
fstl
dec
sbb
mov
push
scas
and
xchg
xchg
pushf
dec
dec
sub
mov
push
inc
or
fucomip
movsl
pop
loop
stos
adc
inc
stos
js
aad
repz
jge
dec
dec
jno
sbb
cmc
leave
mov
sbb
fwait
das
stos
sub
imull
stos
or
mov
int
inc
ss
adc
sub
mov
jl
gs
or
jmp
int3
mov
push
sub
dec
jbe
pop
insb
or
mov
sahf
mov
mov
out
push
push
lret
jne
dec
movsb
insb
jnp
lock
test
mov
inc
std
iret
and
jp
add
mov
mov
ficoml
loope
push
mov
fists
xchg
test
cmpsb
cwtl
and
das
add
aad
jne
dec
push
in
push
mov
sub
xchg
xchg
cmp
add
xlat
inc
in
pushf
fnstsw
jecxz
mov
out
data16
out
mov
pop
repz
stc
subl
mov
jecxz
jl
cmc
int
rcll
pop
xor
mov
loope
out
loop
pop
ss
out
enter
jl
frstor
int3
sub
xchg
xchg
push
mov
and
pop
mov
or
lods
jmp
or
jg
loop
adc
xor
ret
and
xor
or
add
and
scas
jne
mov
shlb
push
pop
aas
dec
xchg
sub
pusha
cmp
xchg
dec
add
jge
test
lret
cs
mov
loopne
jne
cmp
jg
movsl
arpl
out
push
aaa
sub
xorb
ljmp
mov
jmp
out
adc
repz
xor
dec
out
pop
jl
xor
adc
pop
or
arpl
pop
xchg
std
lea
jno
cmp
imul
fwait
out
push
mov
add
inc
add
out
vdivsd
mov
add
popf
pop
stos
cmp
inc
and
dec
in
mov
repnz
add
testb
sbb
push
out
icebp
xchg
fstpl
in
movsl
push
movsl
xchg
xchg
fistl
out
lods
movsb
ret
test
cmp
dec
iret
test
mov
imul
lods
sub
xor
mov
mov
pop
clc
je
and
adc
push
je
icebp
mov
xor
dec
mov
jg
mov
cmp
scas
out
or
xor
cmp
xchg
sbb
loope
dec
dec
push
aaa
lds
xchg
jbe
jmp
add
pusha
imul
push
add
mull
sub
sbb
mov
cmp
mov
leave
cmpsb
movl
sbb
pminsw
jg
or
rolb
les
test
dec
mov
loopne
fcmove
xor
xor
push
pop
insl
lcall
inc
push
xor
pop
push
mov
ss
dec
or
sahf
mov
aas
mov
outsl
test
nop
dec
push
aam
fdivl
xor
xor
sub
movsb
inc
mov
cmp
mov
and
inc
jmp
jmp
and
jge
pop
aam
mov
sub
roll
lahf
and
shlb
in
or
dec
jno
popf
push
mov
cs
push
pushf
xchg
inc
xchg
mov
push
ror
mov
push
repnz
push
inc
insl
ds
mov
repz
out
imul
shll
pop
dec
and
pop
icebp
cmpsl
sub
pop
das
jmp
pop
outsl
and
jp
inc
xchg
jge
std
stos
cmp
jmp
mov
xorb
jecxz
js
sarl
mov
fimull
dec
hlt
mov
mov
jnp
jl
push
cltd
jge
mov
loopne
lret
lods
mov
fcmovnu
mov
int
xchg
arpl
into
in
or
push
imul
in
call
mov
jl
push
sub
stos
enter
or
jg
xor
bound
mov
sub
loope
push
xchg
ljmp
pop
sbb
ret
push
call
sbb
cmpsb
xor
jecxz
mov
mov
jp
inc
xchg
rcrl
out
jle
loop
aaa
inc
xchg
fsts
mov
cmp
nop
not
pushf
mov
pop
mov
or
add
and
sub
lret
mov
imul
sbb
dec
dec
xchg
sbb
pop
jo
popa
cmp
xor
sub
arpl
mov
loopne
mov
pusha
adc
push
sub
mov
lods
sti
cmc
stc
sub
xchg
rcr
addr16
pushf
inc
js
jecxz
xchg
daa
sbb
cld
out
movsl
xor
jno
mov
and
mov
jbe
pop
mov
cwtl
out
dec
dec
push
cmp
cld
inc
sub
xor
add
add
cld
cmp
sub
xchg
fisttpll
out
test
cmpsb
xor
movsb
push
repnz
inc
pop
ret
pop
adc
push
xchg
movsl
cmc
outsl
pop
dec
and
out
and
lret
mov
mov
popl
adc
aas
push
lods
and
mov
shll
pop
out
repz
xchg
adc
fwait
loopne
jg
push
push
inc
leave
cmp
test
fisubrl
xor
mov
xor
leave
sti
hlt
lret
ss
xor
cld
cmp
jbe
pop
test
es
cld
pop
mov
push
insb
xchg
fldenv
cmp
push
ret
lods
sarl
xchg
pop
ss
jne
fstp
sti
scas
arpl
push
iret
fmull
sbb
js
pop
ljmp
push
dec
fwait
arpl
addr16
ficoml
cmc
push
call
pop
push
lea
pop
mov
imul
aam
scas
incb
cmpsl
pop
xor
sub
mov
fisttps
pop
lahf
xor
adc
adcb
sub
mov
inc
adc
test
dec
xchg
or
xor
sub
out
out
sbb
and
inc
pop
pop
sub
sbb
mov
adc
xchg
shr
mov
jmp
sub
dec
and
imul
sbb
aad
mov
xor
bound
xor
mov
into
sbb
pop
inc
pop
jg
sub
daa
pop
shl
cs
leave
sbb
fnstsw
mov
in
jl
sub
outsb
mov
outsb
loope
ret
orl
inc
pop
aad
add
scas
cmp
int
pop
adc
out
sbb
jmp
out
cmpsl
push
les
and
inc
call
jg
xchg
fdivrs
mov
mov
mulb
xor
pop
jae
jmp
jmp
mov
push
jae
cld
and
fsubs
mov
hlt
jecxz
bound
out
pop
andl
push
pop
push
push
loopne
in
cmp
gs
cld
pop
inc
push
je
testb
repz
out
jge
mov
sbb
je
in
fisubrl
aaa
jnp
cli
ss
clc
lods
loope
movsb
dec
negl
test
testl
push
addr16
mov
outsl
jno
in
xchg
js
mov
jecxz
stc
dec
push
fs
adc
fistpl
jbe
int3
push
dec
cmc
rcrl
rcr
sbbb
dec
inc
add
fdivrs
mov
pop
pop
cmp
loop
xchg
bound
xlat
push
ds
into
movsb
inc
enter
clc
cwtd
push
xor
mov
test
clc
push
sbb
fwait
aad
xor
cmp
xchg
sub
leave
add
lods
js
pop
sbbl
aad
dec
pop
cs
fstps
add
fistpl
sbb
sti
inc
mov
jecxz
jb
repnz
or
mov
addl
push
inc
sbb
xchg
push
adc
sbb
xor
test
inc
fstps
out
mov
addr16
lods
xchg
pusha
sarb
fdivrp
xchg
sbb
rcr
push
cld
and
sub
test
mov
test
fs
sub
mov
sub
push
in
stos
lods
dec
ljmp
sub
and
stos
push
mov
pusha
insb
outsb
jp
inc
fsubs
jae
push
ss
mov
add
adc
sbb
xchg
push
fcoml
shr
test
mov
cli
jecxz
cmpsb
inc
nop
adc
mov
mov
push
or
test
in
enter
stos
cwtl
cmpsb
movsb
lods
aas
jno
iret
pop
lret
les
aad
outsb
nop
add
mov
popa
or
out
mov
hlt
fiadds
cmp
and
cmp
out
sub
push
or
add
stos
xchg
pusha
int
jb
sub
out
pusha
cs
rcr
sbb
mov
push
adc
lods
push
sahf
cmpsb
or
mov
iret
or
sbb
rcrb
cld
js
subl
fiadds
incl
xor
ja
int
jl
sub
or
and
mov
shll
add
std
insl
clc
rolb
push
ljmp
jecxz
sub
imul
mov
fcmovb
cwtl
mov
pop
stos
mov
push
pop
cmp
or
dec
sti
sarl
outsb
inc
lcall
sub
mov
scas
testb
push
out
enter
pop
in
subb
mov
mov
fmulp
dec
testl
shll
xorl
test
frstor
ss
pop
imul
and
shlb
push
cmp
jbe
into
cmp
pushf
out
ret
fwait
sub
mov
pop
sbb
movb
fcomps
xchg
cli
push
dec
dec
cltd
out
es
popa
inc
xchg
push
repnz
push
or
stc
orl
mov
sub
sbb
cmpsl
fwait
imulb
mov
pop
xor
jmp
in
daa
sbb
push
int3
out
gs
add
mov
aad
fdivrp
mov
mov
add
sub
outsb
adc
out
cld
mov
sbb
daa
arpl
and
les
js
sub
or
sub
adcb
ljmp
or
insb
and
notl
fdivl
mov
sub
sub
fiaddl
pop
ret
ljmp
lods
xor
lock
outsb
out
inc
dec
jnp
arpl
shll
pop
xchg
mov
dec
jne
cmp
bound
cmc
and
push
dec
adc
push
xchg
nop
addl
sbb
inc
mov
nop
jbe
cli
add
cwtl
daa
cmpsl
sti
xchg
dec
clc
mov
mov
lea
aam
cmp
inc
or
stc
js
enter
xorb
mov
adc
jle
or
sub
icebp
sbb
enter
xchg
lds
or
out
jp
lods
jb
mov
inc
sbb
and
and
xchg
fcmovne
xor
movsb
jge
cmp
jl
mov
cmp
movsl
mov
jno
mov
mov
sbb
shll
push
push
hlt
sti
out
cmp
mov
popf
mov
pop
xchg
or
or
cmp
pusha
adc
hlt
mov
fneni(8087
insl
sahf
push
jge
sbb
movlps
push
stos
push
sahf
push
shrl
stc
gs
insl
inc
add
adc
out
ret
or
cmc
xlat
aas
sub
and
repz
mov
sbb
sti
aaa
mov
jae
int3
outsl
jno
or
xor
fmuls
es
lods
adc
shlb
jle,pn
lcall
and
add
das
mov
aad
mov
and
dec
sub
stos
shrb
ret
insl
sar
fbstp
int3
inc
jmp
sub
shrb
call
inc
lods
push
into
mov
arpl
push
xchg
push
repnz
or
adc
or
sbb
lea
pusha
mov
jns
jae
or
add
outsb
lahf
mov
or
dec
push
mov
push
cmpsb
loopne
push
or
sti
int
mov
movsb
or
and
stos
es
nop
xchg
cvtpi2ps
pusha
ret
inc
adc
pop
mov
stc
test
stc
pop
divl
cld
nop
jge
out
ret
inc
shlb
jo
clc
fadds
in
push
data16
add
push
bound
mov
sub
jmp
and
pop
dec
jle
in
cs
mov
stos
cltd
dec
push
rcpps
repnz
mov
sahf
lods
xor
mov
sti
inc
into
jmp
roll
sub
out
and
into
cmp
sahf
nop
jae
inc
and
add
cmp
sbb
cmp
sub
xor
lcall
pop
jge
dec
scas
dec
cltd
loope
shl
jp
test
pushaw
in
daa
sub
inc
pop
adc
fcomi
inc
mov
sti
stos
xor
and
leave
inc
sbb
in
and
add
pop
mov
push
lea
xchg
mov
adc
movsb
hlt
je
pop
lret
mov
adc
int
mov
mov
push
shll
js
dec
cmc
mov
jge
divb
leave
xlat
mov
fnsave
fcompl
outsb
xor
jne
out
jle
jne
aas
test
es
je
jl
mov
dec
jns
arpl
scas
out
les
cld
fiadds
scas
fs
fstps
or
ret
enter
ret
lea
movsl
mov
inc
roll
mov
inc
aad
push
sti
xor
jmp
adc
and
add
fs
dec
outsb
push
and
into
out
addr16
xchg
dec
faddl
push
in
cmp
mov
push
mov
xor
cmc
mov
stos
push
xchg
jge
and
jb
sti
fs
in
js
lahf
popa
rolb
xlat
mov
mov
pop
shll
shll
mov
mov
xchg
mov
sbb
mov
adc
or
push
neg
mov
in
idivb
inc
les
pop
inc
adc
add
dec
pop
pushf
dec
add
jbe
test
ja
loop
push
mov
xchg
sub
loope
jp
mov
jp
add
stc
jbe
xor
cmp
std
jbe
pusha
push
pop
icebp
enter
cmp
into
popa
mov
inc
lods
xor
cmpsl
and
je
cmpsl
into
xchg
push
jbe
out
mov
and
pop
fisttpll
inc
adc
aam
outsl
stc
ljmp
push
sbb
add
pusha
rcrl
imul
xchg
addr16
jmp
adc
stc
js
dec
loopne
pop
adc
dec
lea
sub
enter
lret
sbb
jle
push
in
gs
mov
inc
jno
cmc
sub
sbb
mov
scas
mov
inc
rorl
xor
ret
sbb
xor
pop
pop
dec
aam
and
sahf
call
jmp
enter
mov
cmp
xor
popl
xor
xchg
mov
mov
mov
daa
lcall
jnp
mov
test
je
shll
es
sbb
std
fmuls
mov
cs
jbe
xchg
loopne
add
pop
call
jb
lods
icebp
push
std
cmp
mulb
pop
add
push
cltd
repnz
inc
mov
iret
dec
gs
sbb
xchg
fistpl
outsl
inc
call
loop
cltd
scas
jae
int3
add
or
cmpsb
repnz
imul
lret
mov
stos
add
add
shlb
int
dec
xchg
scas
imul
mov
mov
lea
enter
popf
test
add
lcall
ljmpw
and
fmuls
popf
in
adc
in
dec
or
jbe
mov
sti
icebp
lret
cmovno
cmp
cwtl
mov
mov
fimuls
rcr
xor
dec
xor
dec
subl
jecxz
out
adc
loope
insl
mov
lahf
mov
test
sub
adc
jno
outsb
pusha
shll
out
mov
or
movsb
test
mov
clc
push
test
mov
xor
cmp
inc
push
testb
popa
push
mov
pop
jg
hlt
out
or
fwait
add
or
push
aad
jl
das
sbb
bnd
mov
lret
into
sbb
dec
pop
pop
lods
and
and
popa
mov
mov
jae
arpl
dec
pop
cmpsl
mov
xor
adcl
das
mov
fimuls
or
rorl
lea
imul
pop
popf
call
shl
sub
add
sub
sub
ret
mov
jbe
mov
cli
aas
cli
aaa
or
sbbb
pop
inc
add
inc
mov
imul
sahf
scas
shrb
adc
or
sub
adc
cld
add
lret
lcall
mov
popa
pop
pusha
dec
mov
add
mov
daa
mov
push
mov
out
les
mov
jnp
shlb
sub
clc
hlt
stos
fsub
dec
lods
addr16
push
jmp
imul
xor
lret
enter
mov
mov
imul
and
fimull
cltd
sbbb
shl
inc
stc
pop
pop
add
push
je
mov
jae
scas
aam
sbbb
loopne
addr16
sbbb
arpl
jno
fsubs
push
or
xchg
jbe
scas
test
inc
jle
add
inc
push
sub
pop
incl
ret
cmpsb
add
in
cli
add
es
sub
dec
adc
adc
gs
loopne
jcxz
inc
dec
sti
mov
inc
sahf
sub
mov
insb
in
and
hlt
out
stos
cmp
push
in
dec
mov
bound
imul
aaa
dec
jns
ljmp
int
pop
sbb
or
arpl
stos
loope
jge
and
jns
clc
mov
cltd
jl
and
stc
fsubl
inc
xchg
repz
push
lcall
jns
xlat
dec
mov
sar
pop
cmc
shrb
out
lods
shll
js
mov
adc
xor
popa
packuswb
inc
xlat
jno
pop
add
ljmp
insb
xchg
dec
adc
cmp
cmc
fs
mov
sbbb
repnz
and
xchg
je
mov
outsl
jg
fmuls
pop
sahf
dec
arpl
fidivrl
jns
sub
iret
xor
pop
add
jns
int3
les
fsts
jg
push
jb
fcomps
cld
fnstsw
jl
push
popf
adc
fildl
xor
sub
stc
idivl
sti
popf
inc
sbbb
cmpsl
mov
inc
mov
xchg
sbb
sbb
test
push
cmpsb
jecxz
jae
mov
testl
mov
test
xchg
mov
dec
xor
mov
pop
imul
orl
out
fcom
mov
adc
aam
pop
pusha
xor
out
push
movsl
je
and
push
iret
bound
xor
addr16
sbb
jo,pt
and
addl
dec
cld
movsb
dec
call
jo
xor
mov
push
xor
adc
jg
pop
icebp
or
repz
lahf
inc
fists
mov
jp
xchg
or
add
out
mov
ret
dec
jns
movsl
mov
aam
popf
push
cmp
sub
cwtl
adc
pop
int
or
xor
clc
push
lret
mov
xor
inc
in
jmp
xor
push
push
mov
sbb
xor
fs
ja
out
test
jns
inc
out
cmpsb
imull
popa
add
lock
pop
pop
pop
mov
mov
push
mov
cmp
cmp
in
lock
push
add
mov
mov
shrb
in
dec
adc
scas
mov
mov
sbb
gs
fisttpll
fidivrs
fsubrs
mov
and
sahf
sarl
enter
cmp
int
aaa
mov
xor
aad
int
xor
test
cmpsb
arpl
xor
mov
stos
jb
and
jbe
outsl
insl
add
add
xor
mov
testb
sbb
rcrb
pop
std
pop
cmpsb
xor
dec
ud1
stc
mov
mov
push
les
sbb
mov
scas
pop
or
pop
jp
jo
sub
mov
inc
sub
add
int
push
pop
xchg
adc
push
lods
leave
aam
stc
xor
mov
xor
clc
xchg
add
inc
mov
pop
imul
out
pushf
lds
shll
js
loop
jns
sbb
stos
loop
in
enter
repnz
fdivrs
pop
xchg
cmp
nop
or
pop
mov
fcmovb
pop
inc
cltd
push
lock
mov
frstor
cwtl
dec
or
ret
das
clc
fst
sub
daa
add
pop
mov
aam
inc
pop
sbb
push
xchg
lret
inc
sub
movsl
xor
and
nop
fsts
int3
push
ja
fdivrp
rcrl
mov
mov
sub
in
pop
dec
jno
cmp
std
jo
ja
negb
xor
mov
push
mov
jb
pusha
and
aam
mov
repnz
fisubrl
std
mov
xlat
pop
inc
mov
add
int
ret
jge
out
js
in
xor
cltd
mov
mov
mov
cltd
jbe
adc
cwtl
xor
loop
jecxz
loope
out
sahf
movsl
cmp
jbe
xchg
outsl
adc
inc
idivb
add
sti
push
mov
or
sub
test
mov
popf
push
mov
inc
leave
inc
mov
aaa
cwtl
and
xchg
or
jg
aad
xchg
and
and
mov
mov
xchg
data16
sbb
cmpsb
sub
ja,pt
std
mov
xchg
pop
inc
push
xchg
das
push
hlt
test
pop
jne
xchg
outsl
ror
push
shl
or
and
aam
lret
lcall
gs
out
lea
stc
call
sub
in
sar
fdivrs
xchg
mov
imul
out
iret
addr16
sub
imul
cli
es
aam
jge
out
cmp
pop
int
mov
lods
sbb
mov
or
push
int
popf
aad
bound
dec
cmpsl
jp
loop
xor
cmp
cs
hlt
push
push
mov
add
arpl
int
inc
shll
dec
stc
lock
mov
cs
pop
sub
sub
inc
xchg
daa
mov
sub
ficomps
shlb
popa
rcrb
fisttpll
jae
rolb
cmpl
mov
xchg
dec
fs
cmp
xor
enter
xchg
jl
jle
cld
sbb
xor
pushf
mov
jae
shrb
cmp
test
jmp
inc
jl
push
movsb
clc
xor
jge
aas
adc
cvtps2pi
mov
add
adc
mov
iret
stos
mov
mov
stos
push
lret
add
pop
icebp
idivb
inc
push
ljmp
in
mov
mov
or
inc
xorb
jge
push
addr16
jbe
hlt
popf
rolb
jge
add
mov
and
push
cmpsl
pop
jno
and
ret
or
mov
fs
lods
fwait
and
mov
jecxz
add
flds
popa
out
fildll
std
jo
shll
xor
dec
pop
dec
mov
addr16
orl
or
divl
fmuls
scas
sbb
les
cwtl
inc
adc
adc
ja
scas
outsl
sbb
movsb
pop
and
cmp
jns
pop
in
mov
push
sbb
mov
mov
jns
rolb
add
xor
aas
lret
ja
mov
in
lock
js
sbb
mov
sub
pop
push
inc
outsb
movsl
inc
iret
inc
stos
popa
idiv
mov
clc
inc
adcl
repnz
mov
adc
fldt
mov
sub
es
call
add
loope
icebp
mov
in
inc
into
push
mov
icebp
rsqrtps
push
or
jg
cmp
shrl
add
orb
movsl
mov
xor
daa
jo
xor
xchg
in
subb
push
ret
out
xchg
mov
and
outsb
xor
add
gs
insl
movsl
xchg
lret
ja
sarb
ret
aas
daa
cmp
sti
adc
pop
out
scas
add
popa
cmp
rorl
fwait
adcb
cmc
sub
xchg
pop
mov
sub
pop
rcrb
jle
xchg
push
aas
es
sub
pop
and
jo
sbb
aam
mov
in
add
push
mov
pop
jge
push
mov
imul
fistl
and
adc
das
inc
mov
push
ret
mov
sahf
ja
jmp
lds
test
mov
rcll
adc
sti
xor
cmp
xorb
ljmp
fwait
add
jns
rclb
sub
repnz
dec
cmpb
inc
sub
pop
jl
mov
cmp
mov
addr16
mov
sti
call
xlat
ds
out
push
aam
es
shll
int
dec
pusha
mov
mov
xchg
or
or
add
xchg
sarb
cmc
cmpsl
sbb
lds
inc
rcr
filds
and
push
lcall
insb
pop
cmp
lret
push
jp
cmpsb
lds
sbb
into
nop
test
cmp
or
shrl
scas
cwtl
fdivrs
mov
in
fcom
jg
add
pop
jnp
fsts
pushf
or
pop
pop
sbb
in
sbb
or
lret
xchg
outsb
add
cmp
and
mov
mov
adc
call
shlb
sbbb
das
or
sbb
push
xor
sarb
out
mov
inc
adc
sbb
test
mov
pusha
cmpsb
dec
jmp
push
pop
test
pop
add
es
sbb
lods
mov
push
pushf
pop
cltd
call
aas
sahf
jp
pushf
fcmovne
fildl
mov
movsb
loopne
inc
xchg
cmp
xor
imul
out
stos
rdtsc
shrl
fucomip
pop
dec
std
push
xor
shr
test
pop
cmpb
ljmp
mov
leave
cmc
mov
sub
xchg
inc
push
movsb
int
jge
cmp
xor
fstps
pop
pop
mov
or
xor
dec
lea
lret
and
mov
enter
scas
or
jae
push
imul
sbb
testl
mov
mov
push
jne
mov
std
sbb
mov
adc
mov
or
out
xor
jne
fdivrs
mov
add
outsl
mov
jle
divl
pop
roll
ljmp
in
ds
insl
lods
pusha
pop
push
push
pop
and
sub
dec
push
movsb
stc
int3
imul
cmc
dec
mov
icebp
mov
jnp
push
cmp
lret
mov
int
adc
sub
jge
xor
imul
les
fidivl
adc
in
mov
sub
dec
leave
mov
cld
das
aaa
add
add
aaa
enter
shrb
int3
mov
jle
mov
xlat
sbb
dec
push
jo
or
fildl
sub
add
jae
xchg
sbb
adc
xor
mov
test
fadds
rorb
mul
mov
push
aad
mov
add
es
dec
test
jns
mov
xchg
outsl
lods
jae
daa
ja
mov
les
stos
push
mov
shll
addr16
push
and
repz
xchg
mov
outsb
lds
enter
aam
pop
mov
adc
mov
dec
mov
gs
mov
nop
sub
mov
outsl
ss
cmp
jae
pop
mov
pushf
mov
cmpsb
lods
push
out
mull
mov
dec
push
jns
stc
mov
orb
xchg
or
add
test
jno
mov
mov
sub
cmpsb
mov
jle
int
loopne
sub
dec
sbb
dec
mov
int
ds
mov
out
push
pop
jbe
lcall
shrl
lret
mov
jle
add
or
dec
xchg
jns
in
mov
mov
mov
xor
negl
sti
cltd
out
test
fsubrp
mov
push
sub
ljmp
in
xchg
mov
pop
jle
adcl
into
pushf
or
mov
jne
or
pop
in
jle
xor
aad
push
pop
cmp
and
sbb
call
mov
mov
test
lcall
frstor
sub
outsl
xor
jne
sub
jmp
in
decl
sahf
test
jo
pusha
js
push
dec
out
mov
cmp
jg
xor
lret
test
lret
xlat
or
sub
fnstsw
das
or
pop
out
fbstp
lds
adc
mov
aad
subb
xchg
jnp
std
cs
jns
movl
loopne
mov
jo
icebp
test
mov
clc
stos
decb
mov
xchg
out
out
lds
push
jno
xchg
cli
mov
test
sbb
xchg
and
movsl
stc
jo
insb
xchg
adcl
xor
rcrl
stc
out
inc
cld
out
aad
mov
cmp
loop
dec
inc
xchg
add
cmpb
ja
iret
adc
lock
ret
out
sahf
adc
xchg
jp
icebp
not
fisubl
push
push
sbb
mov
sbb
mov
pop
sbb
cmp
into
cmc
jmp
daa
faddp
and
cmc
clc
fstpl
mov
stos
lods
lock
ret
jb
aaa
pushf
adc
push
push
jge
mov
negl
test
sbb
mov
cmc
lret
mov
add
std
inc
mov
out
pusha
push
lock
mov
push
test
insb
sbb
das
mov
lds
stc
cmp
add
fisubl
scas
clc
push
aad
ds
das
and
jb
xor
sahf
pop
jbe
icebp
cmp
lret
jae
push
rorl
dec
xchg
and
arpl
sub
add
pop
mov
pop
cli
aad
add
imul
xchg
out
xchg
rorb
and
push
stos
inc
cltd
addr16
xchg
out
lock
push
mov
test
ss
and
call
inc
stc
bound
out
hlt
push
insb
out
xor
inc
sub
and
push
nop
shll
fs
xchg
in
ljmp
push
lahf
dec
scas
daa
xchg
cmpsb
jns
and
xchg
jnp
outsb
xor
jb
ljmp
inc
das
out
fstps
push
xchg
push
mov
out
pop
cmp
mov
adc
mov
push
stos
xor
jecxz
or
mov
pop
roll
int
sti
hlt
xchg
mov
add
sahf
divb
insl
in
push
pop
nop
fistpl
and
scas
push
xchg
insb
add
add
pop
push
inc
or
or
cmc
clc
faddl
push
mov
gs
push
fwait
arpl
daa
dec
xchg
xchg
fsubrs
sbb
lds
inc
xor
daa
or
arpl
mov
cmp
test
dec
movsl
pop
or
insl
sub
cmc
in
or
pop
pop
pop
mov
jne
jg
mov
mov
imul
loop
xchg
insb
xor
dec
dec
addl
or
ret
mov
adc
inc
hlt
push
neg
push
jp
xchg
push
mov
ss
pop
xorl
pop
fdivp
lcall
dec
stos
rcll
lret
jnp
lds
mov
insb
out
ss
xchg
pop
xchg
push
pop
push
jmp
jl
add
mov
push
es
cltd
cmp
cltd
fstl
incl
mov
push
rolb
push
cmpsb
loope
subb
femms
ljmp
rol
sub
les
jecxz
sub
mov
fsubs
popf
jae
dec
rorl
rcrb
inc
adc
mov
stc
and
pushf
shrl
adc
call
cmp
or
pop
pop
cmpsl
outsl
pusha
mov
fidivs
mov
adc
test
enter
enter
mov
mov
pop
xor
add
xlat
jg
lock
xor
mov
addr16
jl
das
or
iret
inc
jle
dec
ljmp
xlat
cs
in
out
adc
inc
int
dec
cmp
mov
sbb
inc
pop
rorl
sub
ja
pop
es
jo
scas
in
icebp
fs
ret
jmp
aas
fwait
adc
jg
and
nop
imull
pop
sub
push
xchg
arpl
inc
push
pop
push
rcll
loope
inc
inc
add
mov
aam
jno
aam
cmp
cmp
lds
cmp
out
lock
ss
adc
into
aam
mov
xchg
pop
sbb
mov
loopne
or
repz
inc
add
jo
enter
daa
jg
add
orl
aas
add
enter
cmp
sbb
sbb
mov
loop
loope
push
iret
pushf
fsubrl
icebp
enter
pusha
xchg
push
out
leave
cmovo
cmpsb
int3
add
lahf
nop
push
pop
mov
xor
arpl
and
int3
xchg
hlt
or
jg
fmull
mov
ret
fnsave
mov
stos
mov
mov
movsl
mov
scas
dec
fisubl
and
je
mov
mov
mov
sbb
aad
jns
pop
mov
lods
lret
out
sub
push
jge
mov
push
bound
daa
mov
ffreep
push
shll
inc
cmp
pop
mov
inc
scas
push
sbb
xchg
jge
inc
or
push
scas
repnz
addr16
out
rep
loopne
sub
or
jmp
xchg
add
icebp
and
test
test
daa
dec
aam
mov
imulb
mov
jnp
roll
mov
dec
sbb
sbb
add
add
mov
xchg
xor
cmp
mov
aam
and
cmp
call
and
xor
xor
lea
xchg
cmpsl
jecxz
cs
sub
subb
nop
xlat
xchg
cld
mov
shlb
in
cld
xadd
xor
in
fwait
sub
ret
cmp
mov
shll
leave
fwait
xchg
xchg
outsl
loop
lcall
adc
add
pop
out
jno
iret
incl
cmovo
insl
dec
and
pushf
dec
lods
repnz
or
adc
push
pop
pop
test
dec
xchg
sub
addr16
daa
push
xor
dec
stos
adc
inc
xor
dec
cwtl
push
push
xlat
ret
add
das
imul
xor
filds
or
inc
hlt
daa
cmp
test
in
push
push
jne
jae
sti
aam
mov
aad
addl
orb
jle
jge
aad
iret
imul
jae
jo
addl
dec
or
les
repz
popf
jne
mov
ficompl
stc
ficompl
push
jle
cmpsl
sub
add
dec
push
addb
sbb
push
leave
insl
ljmp
or
stc
dec
pop
enter
pop
lds
xchg
add
jnp
fs
add
cmpsl
out
into
mov
dec
into
stos
jns
and
pushf
dec
jbe
xchg
push
xor
notb
mov
inc
cmc
shlb
adc
xchg
mov
lret
push
lahf
pop
mov
inc
out
ret
pusha
not
std
aaa
jle
sub
ret
lock
jl
jl
nop
mov
test
inc
cs
xor
mov
mov
repz
fisttpl
mov
push
fsubrs
push
lea
and
inc
inc
inc
push
push
inc
shlb
sbb
xlat
or
jbe
shrl
mov
push
or
outsl
and
mov
adc
in
aas
or
iret
fcoml
fistps
jle
repnz
movsb
or
mov
push
lahf
or
stos
loop
into
pop
sbb
cs
icebp
nop
inc
iret
sbb
enter
pop
call
and
jbe
frstor
pop
push
int3
sub
pop
sub
mov
pop
and
sub
xchg
inc
andb
aam
sub
push
faddl
rcrl
xlat
outsb
jne
pusha
paddusw
pop
jo
cli
jae
xchg
shlb
mov
and
mov
mov
sub
fisttps
les
inc
dec
shll
sub
adc
lcall
push
adcb
daa
notl
push
das
xchg
cmp
pop
jnp
pop
out
jecxz
mov
xchg
cmp
pop
sbb
addr16
xor
xchg
js
out
sbb
jl
push
int
cmp
pop
dec
pop
into
ret
call
push
int
inc
jnp
sbb
andl
fisubrs
jle
stos
pop
mov
int
pop
push
out
sub
daa
mov
cmp
mov
jb
add
mov
sub
push
stos
jns
mov
fiaddl
lea
jo
ja
stos
ds
push
sub
out
inc
imul
dec
sbb
and
xor
stos
pop
aas
sbb
dec
mov
sbb
add
xchg
out
je
mov
cwtl
ds
outsl
adc
mov
jb
leave
ja
push
call
je
sbb
sbbl
adc
xchg
pushf
sub
addr16
push
dec
cmp
mov
lcall
test
dec
xchg
push
cli
insl
push
inc
push
cld
dec
xor
dec
jle
xchg
sbb
insb
in
add
test
fcompl
out
and
xlat
jbe
mov
mov
inc
mov
pop
aad
cmp
iret
xor
in
jb
mov
notb
in
push
ds
sti
fwait
cmp
inc
popf
adc
aaa
jmp
xchg
daa
cmpl
or
or
test
dec
int
test
lock
outsb
in
movsb
mul
rcrl
testb
sbbl
cmp
mov
out
push
add
jp
and
sbb
lcall
scas
repz
rcrl
xchg
mov
jle
lret
sbb
jge
jmp
loope
int
pop
lcall
push
test
loopne
sbbl
iret
cltd
sub
inc
ret
adc
loope
pushaw
scas
or
nop
inc
jmp
mov
mov
js
stos
or
mov
testb
pop
sub
jge
aas
test
push
loopne
add
fldt
xor
jnp
aad
dec
mov
or
int
test
jno
push
push
cmc
hlt
xchg
jns
add
jmp
rcrl
dec
sbb
dec
xchg
orb
out
jns
mov
mov
inc
movsb
xorl
loop
test
add
stos
cmp
lods
mov
inc
stc
lea
mov
pop
loopne
lods
stos
iret
jl
sbb
and
sarl
xchg
push
adc
jp
dec
jp
dec
fs
aaa
fldt
leave
and
outsl
push
cli
into
and
es
xorl
pop
ljmp
cld
adc
sub
out
pushf
rcrl
cmp
out
mov
ret
in
popf
or
inc
adc
xchg
fistps
imul
mov
or
inc
inc
inc
inc
cmp
mov
dec
in
test
adcl
mov
js
out
pop
mov
repnz
jne
jg
pop
inc
dec
push
js
loope
icebp
dec
xchg
ljmp
sahf
sub
add
xor
jl
cmp
aas
fmul
fs
jbe
xor
inc
int
cmp
in
pop
fadds
leave
add
repz
mov
pushf
pop
arpl
lahf
jecxz
aas
fnsave
xlat
fs
pop
add
adc
ret
xchg
inc
testl
sbb
pop
mov
sbb
in
outsb
scas
push
lock
les
push
fmulp
out
test
rcrl
sub
add
fstpt
dec
and
test
ret
mov
sub
or
dec
enter
dec
mov
scas
sub
sub
push
std
notb
cmc
loop
aad
or
arpl
insb
subl
xor
orl
mov
pop
jg
xchg
cmpsb
mov
loop
sbb
mov
xor
dec
mov
daa
sub
ret
jecxz
dec
into
add
cmp
cmpsl
cmpxchg
adc
mov
in
jle,pn
mov
mov
push
dec
mov
fisubrs
sbb
mov
add
and
cmp
dec
mov
dec
mov
mov
jbe
loop
das
adc
jmp
cmpsl
shlb
xchg
add
out
lock
inc
cmpb
cmp
cmpsl
sbb
dec
out
fs
adc
and
idiv
gs
cmpsb
test
sarl
mov
pop
sahf
cltd
lods
cmp
mov
adc
in
or
dec
lcall
into
mov
pop
jnp
xor
mov
sbb
out
pusha
negl
jl
aam
cltd
std
arpl
jo
mov
jne
mov
out
enter
jno
cli
lret
loopne
das
sub
jp
dec
sub
jge
push
sahf
xchg
enter
addr16
sbb
push
das
dec
xor
stc
dec
jp
dec
mov
xlat
outsl
push
mov
in
inc
mov
dec
sbb
xchg
dec
in
cmp
or
add
or
mov
stos
xor
sbb
fstpl
mov
add
mov
adc
insb
pop
adc
mov
sub
mov
xchg
add
stos
push
dec
jle
clc
push
jecxz
int3
mulb
in
inc
adc
mulb
fwait
jge
push
jno
xchg
and
mov
lods
pop
push
stos
xchg
or
call
add
pop
addr16
dec
daa
sub
lret
lea
adc
lea
xchg
mov
test
and
cmpsl
inc
and
insl
aas
in
mov
pop
fldl
outsl
mov
xor
sub
lcall
add
test
cli
testl
scas
stos
sbb
jmp
dec
jno
and
push
pushf
mov
daa
sub
sbb
mov
and
pop
arpl
mov
inc
mov
cmc
or
mov
pop
jns
cltd
add
bound
in
xchg
aad
daa
icebp
pop
popa
mov
stos
mov
adc
pop
cmp
shrl
loop
sub
xchg
xchg
mov
jg
jbe
add
jmp
xor
add
xor
enter
pop
sti
cli
mov
mov
cmp
out
push
stc
pushf
out
mov
add
mov
jg
js
sar
cltd
xchg
orb
leave
xor
mov
test
sbb
popa
pop
jns
jle
push
adc
dec
or
sbb
test
and
cs
addb
testb
dec
and
push
sub
popf
leave
in
sub
stc
daa
fwait
mov
in
pop
lods
gs
dec
push
inc
cmp
xchg
push
and
test
add
jno
xchg
dec
cltd
out
push
pushf
mov
dec
mov
cltd
cmp
push
mov
xchg
xchg
shrb
jl
dec
sub
mov
ss
xchg
mov
aas
cwtl
xchg
dec
fisubs
lea
popa
cwtl
cli
sbb
sbb
fcmovnb
mov
inc
ret
rclb
in
push
stos
in
pop
mov
and
insb
nop
es
push
stc
xchg
push
push
stc
xchg
test
bound
sbb
movsb
sbb
test
mov
sbb
sub
sub
sub
les
pop
mov
shrb
sbb
syscall
in
cmp
xorl
call
movsl
imul
sahf
inc
pop
mov
jnp
mov
push
subl
mov
sbb
ja
pop
sub
sub
popa
jecxz
cmc
imul
push
nop
fsincos
insb
push
xlat
push
dec
ljmp
fst
jnp
jecxz
and
insl
ret
jmp
cmpl
pop
and
in
nop
gs
cltd
test
int
leave
es
pushf
pop
fcompl
xchg
repz
jge
leave
pop
bound
int
lds
dec
mov
fidivl
int3
mov
outsb
in
xchg
push
pop
jmp
mov
mov
mov
fadd
fisttps
and
psraw
int
aaa
dec
outsb
lock
xchg
test
sbb
xor
lret
popa
mov
mov
mov
rclb
cld
imul
xor
ss
int
pop
mov
pop
push
push
sbb
outsb
call
fstpl
jg
pop
and
imul
adc
xchg
ret
int3
shl
bound
scas
adc
jns
mov
call
lods
push
push
sub
pop
sub
stc
push
ret
cmp
loop
das
sbb
pop
icebp
xchg
xchg
xchg
push
stc
ja
cmc
push
jle
sub
rclb
push
js
push
or
shrb
dec
insl
stos
and
inc
inc
fbstp
lcall
fnsave
xchg
push
cmpb
or
xor
iret
push
mov
or
xchg
into
fcoms
movsl
mov
divb
dec
rcrl
loope
dec
mov
or
pushf
cltd
andl
mov
insl
push
cmpb
pop
dec
jno
push
aad
jmp
xor
xchg
adc
sahf
sub
sbb
mov
jb
inc
pop
fsubrs
lret
pop
sub
pop
popa
jns
sbb
sub
sub
icebp
mov
inc
aas
push
out
push
in
ljmp
cli
and
push
notb
sbb
test
lcall
mov
leave
dec
rdpmc
inc
lahf
xchg
push
pop
cmp
cmp
sub
dec
stos
xchg
inc
cwtl
cld
pop
xchg
xor
aam
clc
repnz
outsl
add
cli
sbb
gs
dec
jecxz
adc
xchg
sti
cmpps
add
rclb
lcall
push
shll
jo
mov
pop
shrl
mov
jecxz
shll
jnp
inc
inc
sbb
das
mov
or
jecxz
scas
inc
cmp
out
outsb
aam
lods
outsb
sub
lds
push
jg
adc
cwtl
push
jle
jmp
adc
add
inc
std
scas
adc
sbb
and
cmc
pop
aaa
call
aaa
shll
jne
test
pop
insb
cmp
lds
dec
add
inc
test
shrb
xchg
xor
mov
orb
add
js
mov
imul
add
sbb
xchg
adc
pop
arpl
dec
stos
cmp
shl
pop
rorl
insl
mov
int
mov
gs
and
bound
mov
xchg
and
fs
lock
fldl
repnz
dec
mov
pop
jo
sub
and
movsb
aas
fmull
jnp
xchg
dec
mov
lods
std
shr
fdivl
shrb
js
dec
or
aam
imul
sbb
lods
sbb
jl
sub
lock
lahf
cmc
inc
sbb
popf
and
int3
icebp
mov
cld
mov
decb
jmp
cmp
scas
lock
jbe
out
and
xor
dec
sub
mov
aad
mov
imul
stc
pop
aad
lea
fwait
lods
out
mov
aam
xchg
jle
pop
sbb
pop
aas
sbb
mov
xchg
xor
out
pop
test
or
in
setne
dec
or
xor
xor
cmp
jl
pop
imul
test
mov
ret
fcomps
pop
stc
decl
mov
and
adc
xlat
inc
cmp
jge
int
es
push
jb
sbb
inc
insb
ret
xchg
cmp
cwtl
movsl
mov
in
adc
and
dec
push
inc
or
clc
jl
mov
cmp
ret
outsb
nop
sti
outsb
or
or
es
nop
rolb
jmp
dec
movsb
stos
add
mov
sub
shll
xor
sbb
xchg
int
lods
jmp
cwtl
mov
and
sub
sub
mov
mov
xor
xor
inc
lahf
std
pushf
add
inc
arpl
sub
divb
loope
mov
js
mov
and
mov
dec
sub
push
jl
jge
inc
les
pop
out
jnp
aad
pop
insb
enter
cmpsb
movsb
jg
cld
push
xor
xor
bound
lock
push
aam
pop
dec
jno
mov
cmp
sub
and
cmp
mov
nop
mov
xchg
pop
pushf
movsb
out
cmp
mov
dec
push
xchg
addr16
mov
cmp
imul
data16
out
pop
lods
jg
rcrl
shl
movsb
push
add
std
test
or
out
xor
mov
pusha
ss
dec
push
shll
add
or
inc
mov
int3
mov
jno
loop
push
bound
mov
in
pushf
sub
repz
lds
mull
mov
ljmp
mov
pop
xor
pop
aam
cmp
sbb
jp
push
out
mov
lds
add
and
sub
lea
fsubl
arpl
jp
insb
dec
add
mov
stos
outsl
or
mov
scas
and
repz
or
sub
aaa
and
ficoml
mov
push
adc
leave
js
insb
lret
lret
das
sub
adc
add
lcall
lock
cmp
and
movsl
xchg
jnp
pop
mov
gs
call
mov
jg
cwtl
xchg
mov
pop
loope
or
jl
or
sub
test
andl
xlat
pop
gs
mov
neg
fisubs
xchg
bound
dec
ret
testb
pop
jp
insb
popf
mov
test
mov
and
xor
pop
inc
xchg
data16
jmp
mov
test
xor
cmc
jle
test
enter
sbb
dec
or
add
mov
xor
leave
mov
loope
xor
cmpsl
js
outsb
xchg
xor
or
pop
jns
aas
adcl
mov
sbb
pusha
addr16
or
pop
mov
arpl
repnz
mov
dec
mov
mov
mov
or
insb
repnz
add
aas
andb
sahf
cld
mov
dec
das
lods
jo
pop
jno
imul
cwtl
fdiv
push
mov
push
popa
cmpsl
pop
mov
fmulp
data16
cld
sub
inc
scas
fisubrl
mov
fldt
push
in
lcall
jne
jae
pop
sub
fs
mov
testl
sti
stos
mull
scas
jns
aam
je
ss
dec
add
lret
cmp
cmp
imulb
push
adc
inc
jns
movsl
jmp
and
insl
and
lods
xor
mov
pop
test
jle
loope
xorl
mov
imul
lcall
push
fstl
push
jle
int3
adcb
sub
sar
ffreep
cmpsb
push
mov
imul
aam
lods
iret
jecxz
or
and
adc
testl
dec
pop
loop
ret
push
sub
mov
out
inc
inc
push
mov
andb
mov
mov
dec
push
jge
push
cli
xchg
fdiv
call
mov
jno
rcrl
fsqrt
xchg
iret
mov
cwtl
add
xor
arpl
jle
test
dec
in
and
mov
aaa
sbb
adc
mov
and
mov
fs
dec
push
int3
push
jb
in
push
ds
xchg
mov
or
bound
pop
lahf
jo
xor
inc
and
pop
leave
aas
cmp
in
xor
pushf
sti
mov
inc
adc
mov
pop
jne
lret
mov
xor
std
or
in
mov
stos
enter
mov
repnz
sahf
andl
adc
es
out
cmp
xor
movsl
jecxz
je
popa
pop
fwait
addl
adc
dec
data16
insb
dec
cmp
out
out
addb
pop
add
xor
sbb
sti
mov
pop
adc
push
inc
stos
sub
adcb
mov
add
gs
movb
in
imul
fisubrl
sbb
ror
cmc
mov
mov
sti
hlt
jne
cmp
dec
pop
xchg
sub
sbb
dec
dec
mov
hlt
test
cwtl
push
push
mov
xchg
mov
ret
push
dec
in
adc
jmp
pop
imul
or
popa
enter
popa
fs
cli
mov
test
push
pop
cmp
arpl
das
cmpl
in
add
loop
stos
fs
xchg
inc
dec
xchg
jne
dec
fwait
loop
andl
addr16
cmpsl
xor
push
mov
cmpsb
add
ds
jl
in
test
cmp
jp
cmp
mov
clc
sbb
popf
mov
push
mov
mov
imul
sar
jecxz
insb
int
mov
sbb
and
decl
fisubrl
and
scas
mov
dec
mov
sub
je
mov
cmp
adc
cmp
or
gs
or
dec
mov
cmp
pop
das
xchg
jnp
sub
add
sahf
stc
adc
dec
or
or
jns
xchg
test
out
add
cmp
popf
sub
adc
clc
repnz
mov
je
les
push
or
dec
int
mov
mov
dec
jb
mov
mov
lods
sbb
jb
shlb
push
xor
insb
sbb
xor
gs
popa
scas
xor
pop
add
cli
xchg
outsl
ret
push
std
xor
pop
dec
cltd
xor
lods
and
push
in
hlt
sbb
mov
push
sub
loop
std
sbb
adc
movsl
subl
inc
pop
cmp
adc
push
add
cmp
leave
je
ds
mov
loope
clc
inc
mov
ss
insl
or
shlb
add
inc
mov
xor
mov
popf
int
mov
out
mov
add
enter
or
ja
or
mov
pop
xchg
or
mov
xchg
cmpsb
test
and
xor
insb
mov
jg
repnz
dec
insl
push
jne
or
es
repz
mov
inc
push
xchg
es
adc
nop
cmc
negb
cmpsb
and
add
iret
mov
mov
je
xchg
pop
sub
jne
pop
mov
enter
mov
push
or
hlt
and
xchg
imul
jbe
push
std
lret
adc
mov
lods
jl
adc
inc
hlt
inc
and
inc
ret
jmp
andl
sub
dec
inc
dec
mov
xor
into
sbb
push
lcall
insb
icebp
adc
ja
xchg
mov
dec
ljmp
cmp
int3
or
push
sub
push
out
ds
mov
xchg
inc
fcmovu
aas
fcoms
cli
mov
cwtl
add
mov
dec
incl
repz
inc
sub
cwtl
out
lea
inc
test
dec
out
int
inc
xchg
cmp
pop
or
cs
iret
jl
mov
push
mov
pop
popa
add
lret
insb
dec
pop
cs
icebp
lock
iret
out
cwtl
lahf
repz
xchg
or
aad
data16
pop
cmp
mov
sbb
xchg
and
test
cmp
jns
adc
cmp
mov
pop
ret
int
or
cmp
xchg
cmp
jbe
xchg
sbb
mov
push
bound
mov
cmp
test
xchg
in
xchg
addb
stos
jg
sub
adc
xchg
mov
xchg
test
jno
mov
fucom
mov
mov
push
xor
xor
std
or
ljmp
fs
jle
fs
add
cmc
adc
mov
mov
inc
or
notl
scas
push
mov
int
sbb
pusha
loopne
fimull
inc
and
gs
sbb
pop
xchg
das
xor
in
cmp
jb
scas
adc
mov
pop
hlt
cmpsb
xor
adc
outsl
sub
mov
shll
add
adc
jnp
xor
in
jne
cmpsl
push
aaa
adcl
mov
leave
xor
jno
mov
dec
fbld
mov
sbb
sbb
or
mov
sbb
add
insl
stos
pop
dec
ficoml
or
lds
insb
les
cmp
in
jnp
loope
scas
movsl
lret
xor
mov
and
adc
adc
les
nop
or
testl
and
test
fists
outsb
fwait
push
jbe
out
insb
shrb
aas
mov
push
pop
mov
and
sub
cli
cwtl
rolb
and
icebp
cmp
jo
mov
lret
xor
mov
repnz
test
pop
jo
add
pop
stos
loope
insl
rcrb
lods
add
cli
das
call
pop
mov
jo
cltd
sbb
jns
mov
lods
arpl
sbb
pushf
inc
jmp
inc
xchg
ret
jnp
adc
outsl
or
faddl
imul
pop
cmpsl
add
and
dec
and
pusha
iret
adc
out
mov
xchg
xorb
lea
xor
cmp
mov
bound
mov
dec
add
mov
ret
mov
mov
jl
lock
and
and
es
fdivl
adc
push
xchg
push
mov
shl
xchg
iret
adc
push
stc
adcb
push
out
sbb
stos
cld
filds
fisubl
hlt
outsb
sti
insl
dec
jp
inc
xchg
arpl
push
es
test
or
xchg
mov
xchg
pop
mov
mov
mov
mov
sub
cmp
sarb
aaa
das
mov
inc
add
push
sub
sbb
jb
sub
arpl
es
in
or
clc
pushf
jp
or
sub
aaa
cmp
mov
test
int
push
mov
rcll
clc
ror
cld
inc
dec
decl
pop
fwait
pusha
push
jp
and
mov
adc
pushf
mov
hlt
ja
popa
in
test
icebp
cmp
mov
movsb
outsl
cmc
cmpsb
orl
je
shl
sbb
pop
js
mov
jmp
xor
loop
ret
int
add
sub
lea
or
mov
and
frstor
jbe
gs
add
pop
mov
sub
adc
fs
mov
sahf
int
fwait
daa
mov
inc
stc
dec
outsb
lods
add
or
pop
mov
xchg
mov
mov
jge
lock
int
insl
iret
das
imul
pop
call
pop
and
loope
mov
xor
inc
push
and
sub
jmp
mov
int3
loopne
cwtl
out
cwtl
or
pop
icebp
add
mov
xor
es
sub
sbb
sub
push
dec
xchg
sub
insl
cmc
inc
out
mov
jl
loope
clc
inc
add
sbb
mov
sti
push
push
inc
out
lret
sub
out
lea
mov
call
xchg
mov
pop
dec
pop
sub
xchg
test
sub
in
jbe
icebp
xor
add
js
addr16
nop
xor
jbe
jl
daa
imul
xchg
jo
mov
mov
adc
fsts
mov
add
or
dec
lock
jge
cmp
inc
je
loopne
dec
ljmp
dec
sub
sub
ja
movl
mov
push
int
sbb
xchg
pop
push
sahf
dec
jmp
mov
andl
adc
repnz
insb
ds
mov
xor
mov
pop
xor
cmpsb
add
push
cmp
dec
jns
inc
sbb
dec
out
sbb
imul
arpl
pop
mov
mov
jb
sti
adc
ret
lea
mov
cltd
pushf
adc
es
fldl
test
and
mov
cli
lds
lock
int
insb
int3
cmp
lock
addb
repnz
pop
jp
mov
sub
push
adc
cmp
ficoml
push
sub
lret
outsl
sub
ret
jp
dec
mov
aaa
pop
aaa
xor
adc
mov
cmpsl
push
add
mov
cld
or
movsb
inc
push
loop
push
in
scas
xor
popf
xchg
xor
out
mov
cld
jne
push
adcl
popa
bts
cwtl
mov
push
push
push
jo
cwtl
jo
addb
movsl
mov
mov
clc
push
and
mov
xor
movsl
add
sbb
bound
lret
lret
and
in
int3
ds
in
cmp
jmp
popa
inc
enter
push
mov
cmpsb
dec
mov
dec
hlt
jns
adc
sub
int3
adc
cmp
ja
mov
cmc
xor
cmc
mov
dec
and
fdivrl
add
xor
pop
aaa
cltd
andl
adc
push
xor
aam
in
scas
lods
dec
jae
int
and
adc
dec
addr16
lahf
jg
jle
leave
xor
nop
insl
pop
lods
in
insl
rcrl
pop
mov
and
stos
pop
dec
cli
imull
call
xor
lcall
iret
jg
mov
jbe
pop
mov
xchg
and
int
ja
push
cmp
jp
dec
fs
out
add
mov
push
mov
xchg
mov
jl
cmc
imul
sub
ja
cmp
push
mov
pop
arpl
inc
xor
and
lret
sub
inc
mov
repnz
nop
int3
mov
mul
inc
dec
stc
push
cld
cltd
xor
jmp
dec
bound
mov
adc
test
repz
pop
rcrl
mov
iret
dec
mov
pop
in
fists
shll
push
xlat
jp
fimull
sub
mov
cmp
insb
mov
push
rcr
addb
or
inc
and
jbe
leave
sbb
out
mov
cmp
lcall
insb
stos
stos
pusha
jae
call
iret
push
out
pop
rclb
jg
xchg
insb
cld
xchg
bound
daa
inc
daa
dec
pushf
or
and
out
inc
idivb
mov
lahf
sbb
or
jnp
sub
int3
rolb
xor
mov
xchg
jmp
xchg
bound
aad
dec
cld
lds
lret
adc
mov
daa
out
xchg
sub
out
pop
pop
shlb
xor
xor
ljmp
leave
mov
xor
mov
std
mov
dec
xchg
xorb
inc
add
into
pop
pop
in
mov
mov
mov
pop
inc
inc
push
xchg
push
jno
sbbb
jmp
mov
lret
js
jmp
out
fstp
cli
mov
ss
pop
jns
sub
loope
std
shll
cmp
aaa
pushf
fists
notl
pop
mov
loope
ljmp
aam
and
pop
ljmp
sub
dec
inc
dec
sub
mov
imul
and
and
clc
add
push
or
mov
inc
ret
add
sbb
xchg
movsl
xor
jmp
out
mov
enter
cs
insl
out
dec
or
in
jmp
push
loope
ffreep
sbb
in
fldenv
jmp
shrl
enter
xchg
and
lahf
ljmp
and
and
add
push
fbld
sub
mov
and
sub
sti
lea
inc
mov
lret
cltd
in
xchg
xchg
call
cmp
cmp
iret
xchg
movsb
xor
add
loopw
cmp
or
push
and
shll
xor
mov
js
xchg
pop
aad
dec
cltd
push
mov
add
pusha
imul
js
outsb
test
cltd
ja
lea
stos
mov
imul
jge
jg
adc
imul
enter
sub
sbb
loope
sub
inc
sarb
cli
clc
shlb
mov
inc
xchg
enter
sarb
cmpsl
divl
cwtl
call
out
push
pop
mov
inc
xchg
std
push
movsl
mov
dec
jo
mov
rclb
rcr
or
and
repz
popa
dec
adc
pop
repnz
push
adc
pop
xor
test
cmpb
or
mov
stos
cmp
notb
insb
std
pop
outsb
sbb
jns
xorb
aaa
mov
mov
adc
jbe
jo
sub
sub
xchg
dec
dec
inc
cwtl
or
mov
repz
adc
in
daa
ja
xchg
pop
stos
in
sub
mov
popf
jo
mov
ret
cld
jge
ss
stc
or
xchg
xchg
dec
inc
mov
cmpsb
daa
lret
aad
push
and
out
mov
dec
jmp
loope
cmp
pop
shrb
mov
sub
cmp
repnz
xchg
jp
js
add
or
rorl
push
lods
sbb
add
and
push
mov
test
icebp
inc
sub
scas
sahf
mov
pop
xor
cmp
xor
pop
bound
cmp
adc
daa
push
mov
adc
inc
in
pushf
lcall
out
stos
push
fstps
aam
sub
enter
push
cmpsl
aas
push
mov
sbb
mov
xchg
dec
repz
out
orl
push
cmc
pop
lods
or
faddp
lea
leave
mov
xchg
sbb
stos
cmpsb
add
insl
or
pop
rolb
std
paddb
scas
das
fdivrl
cmp
out
add
xchg
mov
imul
inc
pop
pop
lret
lock
icebp
inc
cmp
bound
lcall
sbb
loop
loop
sub
pop
out
repz
mov
and
mov
loop
push
push
sbb
push
sahf
popl
inc
push
lea
ds
enter
popf
popf
mov
or
mov
pushf
jecxz
icebp
jmp
add
loop
aam
push
fadds
data16
call
lcall
sub
inc
xor
and
jp
rcrl
mov
sbb
pop
out
or
pop
insl
addr16
int
daa
addr16
movsl
jnp
iret
outsl
inc
js
cmp
scas
and
jecxz
or
out
mov
das
cmc
sub
push
aam
mov
decb
insl
dec
jmp
pop
mov
dec
and
fsubl
adc
xor
fs
fsubrs
jbe
aaa
jle
popa
cs
mov
xchg
fwait
loopne
xlat
sbb
lods
call
mov
sub
sub
ds
int3
clc
jb
fnstsw
movsl
test
jp
xor
jmp
aam
push
mov
push
cld
sbb
lret
add
sbb
aaa
clc
jo
fwait
or
test
insl
xchg
loop
mov
je
and
aaa
cmp
and
push
and
pusha
popf
cmpsl
xchg
xor
lahf
pop
scas
adc
div
fcomip
add
push
or
cmpsb
xlat
sti
stc
sub
pop
fisubs
hlt
pop
adc
out
mov
or
int3
rorb
shlb
mov
dec
mov
and
inc
outsl
push
lods
adc
scas
pop
decb
es
xor
mov
jp
sub
outsl
sahf
fiadds
shrl
imul
sub
frstor
sub
test
fwait
mov
sahf
mov
inc
add
push
in
xchg
clc
cmp
mov
loopne
outsb
stos
loope
push
inc
arpl
scas
das
mov
adc
mov
leave
push
test
xchg
pushf
scas
fbstp
fwait
jns
loope
repz
push
xchg
adc
bound
sub
add
sbb
aad
sub
jge
sti
xchg
aad
adc
dec
adc
je
xlat
adc
sub
pushf
in
lcall
shrl
mov
test
and
dec
pop
sbb
cmp
fwait
adc
inc
pop
aaa
fadd
jb
push
in
lcall
xor
in
ja
testb
in
inc
jno
and
mov
cmpsb
ljmp
or
aam
test
or
dec
sahf
into
mov
jno
inc
add
icebp
fwait
dec
add
sub
adc
xor
inc
xchg
rorl
mov
push
jle
data16
leave
and
push
push
mov
add
aad
shll
jno
mov
out
inc
jb
xchg
outsl
xlat
xor
inc
idiv
add
outsl
adc
mov
in
dec
fwait
lods
sub
scas
bound
lcall
dec
or
sarb
pushf
dec
mov
dec
pop
fimull
mov
pop
pusha
addr16
movsl
dec
and
mov
fiaddl
xlat
insl
xchg
pop
mov
stos
std
xchg
push
inc
pop
aad
jb
inc
mov
in
jle
shll
enter
pop
xchg
inc
pop
das
scas
out
popa
hlt
or
pop
push
lret
enter
mov
sbbl
inc
pop
pop
mov
add
mov
scas
push
incl
loop
jo
mov
xchg
add
test
xchg
out
in
int
sar
imul
cmp
mov
test
xchg
mov
lret
add
out
out
mov
adc
test
icebp
bound
cmp
pop
iret
mov
push
xor
xchg
aam
adc
fmull
and
pop
cmpsb
push
inc
xor
adc
repz
push
cltd
mov
mov
cmc
jge
push
shll
mov
outsl
jb
lahf
out
int
push
pop
cmp
in
fcompl
mov
push
xchg
stos
or
rcll
rcl
mov
dec
negb
int
pop
in
push
cld
icebp
push
sarb
aaa
popa
dec
mov
shll
push
jbe
sbb
nop
stos
data16
sub
test
into
insb
insb
jg
pop
in
sahf
gs
jmp
fdivrl
outsb
leave
ljmp
mov
cmp
cmp
ret
out
lods
sbb
xchg
rorb
mov
popa
iret
movsb
push
in
inc
cmp
mov
aaa
mov
cmp
mov
nop
call
fisubrl
xchg
pop
mov
push
ret
in
roll
lds
iret
pop
jp
arpl
popl
jae
add
xchg
shrl
dec
push
pushf
add
out
jle
cmc
jp
int
sti
inc
fidivl
leave
stos
fcomps
fdivr
jle
dec
mov
nop
cmc
sti
aaa
fldlg2
ss
int
push
stos
clc
out
or
push
sbb
adc
sbb
pushf
or
lods
scas
dec
pop
aas
push
push
jp
mov
call
enter
xchg
test
repnz
repnz
clc
scas
mov
cmp
xor
sub
add
xor
mov
inc
ja
lret
bound
sub
imul
in
dec
mov
xchg
adc
jns
repz
out
bound
or
or
mov
mov
pop
mov
test
adc
gs
leave
outsl
pop
add
pop
repz
add
jno
out
popa
mov
mov
jns
xor
sub
cmp
das
pop
ljmp
mov
fbld
stos
ds
xchg
push
inc
out
stos
lods
and
out
les
inc
daa
jbe
cmp
pop
inc
and
addr16
inc
lock
movsb
repnz
mov
repz
ficomps
cld
push
dec
mov
cmc
bnd
rcrl
insl
fbstp
sub
test
lods
hlt
sbb
test
imul
mov
stos
adc
mov
xor
test
adc
outsl
jae
and
jmp
rcrb
mov
sbbb
fsubl
jecxz
pop
icebp
scas
iret
mov
fidivs
aaa
xchg
mov
sbb
lds
adc
pop
fiadds
or
pop
test
jo
imul
icebp
cmp
int
lock
mov
mov
adc
adcl
lret
push
andb
arpl
xor
dec
xor
add
or
outsb
pop
dec
mov
or
push
push
mov
mov
aaa
mov
jmp
mov
cwtl
jbe
test
push
dec
xchg
cmp
fcoms
cmp
pop
int
mov
mov
in
mov
xchg
mov
les
mov
fcoml
jne
push
sbb
leave
mov
jnp
lea
pushf
rorl
pop
out
fstps
pop
sub
shl
or
gs
sbb
lahf
sahf
ss
and
xor
adc
mov
push
incl
sub
sar
into
pop
dec
jge
bswap
fsubrp
jmp
in
pop
xor
sbb
sarb
addl
lret
jecxz
call
or
mov
mov
and
roll
jnp
sbb
arpl
mov
inc
in
and
inc
fisubrl
xchg
push
insb
xchg
fldenv
fldl
mov
mov
sbb
or
call
fcmovbe
into
cmpsb
repnz
rol
push
imulb
mov
inc
jp
inc
push
out
pop
cmp
jbe
popf
pop
mov
lcall
push
test
ret
mov
iret
into
enter
xor
adc
sbb
mov
aas
lcall
add
js
jl
insb
fwait
test
add
cltd
dec
repnz
or
hlt
pop
repz
lahf
pushf
leave
dec
mov
add
fwait
lcall
leave
xchg
aad
cmc
cltd
xchg
cli
int3
and
pop
mov
jns
fldcw
mov
imul
jnp
dec
lock
xchg
jae
cmpsl
jg
or
imul
mov
sbb
dec
mov
xchg
ret
sub
hlt
xchg
push
and
scas
push
psadbw
scas
xor
dec
sub
in
or
add
in
or
push
dec
icebp
aad
add
les
stos
pop
inc
jle
jmp
sbb
popf
push
cmp
stos
sbb
sbb
sbb
js
lcall
xor
shrl
adc
mov
shlb
jp
jno
mov
xor
xor
jle
leave
addb
rorl
xlat
cmp
cmp
adc
sbb
mov
cmp
inc
lcall
xchg
dec
cmc
in
mov
mov
or
push
jg
mov
lahf
enter
int
test
inc
dec
icebp
aam
cwtl
xor
ljmp
jnp
sub
cmp
int3
rcrb
mov
imul
insl
lahf
rcrl
inc
ret
dec
xchg
jge
int3
das
mov
pop
add
xor
jecxz
lods
fdivp
cwtl
loope
movsb
lahf
and
popa
pushf
jnp
lds
xor
mov
pop
ljmp
push
jbe
pop
cwtl
cltd
xchg
fldl
lahf
cli
lods
xor
push
aaa
inc
jmp
dec
je
insl
jne
sbb
adc
xchg
push
sub
jnp
rorb
test
adc
repnz
fstps
shrb
sub
ds
fisttpl
loop
mov
int
les
sub
xor
stos
gs
lods
cmp
out
push
jecxz
bound
mov
outsl
out
xor
mov
lods
movsb
and
push
mov
xor
adc
cmpsb
dec
mov
adc
imulb
fcmovnbe
cmp
push
rol
lret
jb
and
cld
push
jg
pop
outsl
cmp
popa
flds
mov
jecxz
xchg
xchg
movsl
fnsave
sbb
mov
aad
imul
pop
jle
rolb
stc
sti
bound
aam
push
sub
das
cmp
jl
push
add
jle
test
es
mov
sbb
imul
xchg
testb
xchg
push
cmp
sarb
push
adc
push
xor
jl
insb
lds
and
pop
repz
outsb
rcll
in
lret
dec
and
dec
aaa
sub
call
adc
push
mov
jl
aam
sub
mov
scas
mov
mov
adc
pop
cli
inc
jg
aas
adc
imul
xor
push
test
lahf
test
mov
fwait
sti
std
insb
outsl
ja
inc
fnstenv
insb
dec
scas
rclb
stos
push
add
push
adc
add
in
jle
jns
push
mov
mov
cltd
mov
ja
out
scas
jno
adc
jne
push
adc
jae
adc
inc
mov
daa
pop
or
inc
and
lods
dec
loope
lods
rcll
cli
popa
dec
scas
jns
xor
mov
rcrb
imull
pop
iret
fs
push
ss
icebp
sbb
sahf
leave
pop
nop
aad
jg
adc
ss
mov
add
xor
adc
sbb
xor
repnz
clc
notb
xor
dec
adc
or
outsb
cmp
mov
mov
scas
outsl
jle
cmc
sbb
or
arpl
xor
cmp
pop
dec
mov
xor
push
mov
popf
and
sahf
loopne
test
dec
mov
jmp
popf
xor
mov
lock
popa
cmp
popf
push
add
inc
or
ljmp
pop
xlat
xlat
ss
cltd
mov
xchg
and
add
ret
add
daa
dec
leave
insl
push
add
xlat
lock
jle
aaa
mov
cmp
mov
push
mov
pop
lods
and
mov
cli
mov
cmpsl
arpl
in
jge
xchg
fildl
scas
jbe
pop
mov
adc
dec
dec
clc
adc
cmp
stc
adc
cltd
push
sbb
mov
fistpl
cmpsl
cmp
addl
mov
cmpsl
jl
imul
nop
pushf
cmc
sbb
stos
mov
lretw
cs
jge
inc
popa
jo
loopne
movsl
dec
mov
xchg
icebp
and
mov
dec
jb
sub
mov
lahf
icebp
inc
lcall
lds
pop
pop
pop
test
mov
mov
out
sbb
or
nop
jge
pop
enter
push
mov
jo
mov
out
insl
jns
and
outsb
cmpsl
mov
and
mov
push
cmp
fcmovnu
xchg
jbe
bound
mov
je
mov
adc
es
ds
sbb
sub
in
ret
mov
pop
add
mov
cmpsl
dec
js
fdivs
ljmp
ja
mov
mov
and
push
xchg
dec
dec
enter
imul
test
aad
fwait
dec
js
pop
inc
cmp
add
fcmovbe
dec
sarb
dec
push
and
sub
dec
aas
mov
jb
inc
push
das
jge
push
dec
iret
mov
in
outsb
repz
shlb
cmp
rcl
push
nop
sbb
add
sbb
cmpb
adc
movsb
hlt
insb
mov
sahf
and
cwtl
xor
or
mov
lock
inc
nop
fsubl
ljmp
lret
cmpsl
mov
or
push
test
cmc
movsb
adc
or
xor
mov
push
test
jo
sbb
mov
arpl
cmpsb
cmpsb
cmpl
rorb
jmp
int
test
dec
cmp
test
dec
std
mov
inc
rol
pop
xor
mov
repz
adc
in
cmpsl
fnstsw
jle
mov
and
daa
cmp
pop
sbb
pop
sahf
test
cwtl
nop
jmp
je
dec
push
ja
cmp
cmp
pop
jns
add
leave
sarl
xor
push
adc
pop
pop
push
into
xchg
andl
subb
mov
stos
add
popa
call
popf
xor
mov
leave
adc
repnz
je
sub
xor
inc
xor
dec
pop
push
aas
ljmp
cwtl
add
stos
dec
mov
pop
mov
mov
js
out
jbe
or
clc
sbb
dec
sbb
xchg
xor
out
subb
cmp
push
adc
sbb
aam
mov
sbb
add
pop
cwtl
lret
push
xchg
out
jge
divb
mov
je
outsl
dec
mov
call
xor
imul
ret
jbe
xchg
push
out
mov
lods
xchg
pop
jmp
push
sti
inc
sbb
inc
nop
or
nop
jbe
data16
int3
pop
shlb
add
adc
rcl
scas
cltd
sub
lret
addl
adc
bound
xchg
ss
pushf
std
pop
icebp
imul
add
shrb
jge
ljmp
and
push
sub
sub
mov
and
push
cs
sub
cmp
xor
push
or
push
push
mov
cmpsb
imul
inc
mov
mov
js
push
lcall
lods
mov
jb
jo
ljmp
addr16
xchg
test
jno
xchg
shl
sbb
setns
roll
pop
aam
and
inc
pop
js
xor
pop
repz
jnp
loopne
repz
push
adc
stos
mov
push
int3
mov
jnp
es
add
sub
sbb
sub
or
sahf
sbb
dec
ljmp
cmp
fisttpl
push
in
out
push
and
jnp
out
push
jnp
imul
popa
fnsave
cmc
push
xchg
leave
and
mov
shrb
cmp
mov
or
mov
xor
aam
adc
enter
xchg
scas
fidivrs
cmc
mov
stos
inc
loop
sbb
out
movsb
dec
fwait
adc
call
nop
pop
push
add
jmp
in
pop
lods
cs
push
aam
sarl
dec
or
push
js
xor
or
iret
stc
jnp
mov
shlb
lea
push
sub
arpl
stos
sarb
lret
push
mov
xchg
cmc
xchg
addl
aam
mov
xchg
mov
xchg
inc
in
mov
daa
adc
inc
pushf
or
inc
pop
imul
shll
es
jmp
imul
sbb
mov
adc
scas
mov
cmc
imulb
adc
insb
fidivl
ret
leave
outsb
lods
pop
test
gs
das
out
mov
cmp
mov
sub
pop
sbb
stos
cmp
ljmp
cwtl
ret
scas
je
outsl
xchg
fmuls
or
sub
jno
mov
mov
pop
mov
push
rep
andl
cmp
mov
stos
mull
pop
pop
lahf
xor
popa
pop
push
aad
popa
xchg
int
fisubrs
xor
jno
pop
fisubl
insb
incl
shlb
sub
fiadds
sbb
mov
fdivp
sbb
outsb
into
cmp
rolb
jl
movsb
add
leave
inc
dec
dec
sbb
ret
rcrb
lret
cli
pop
or
ret
jb
jmp
scas
test
cmp
imul
mov
scas
or
mov
adc
insl
sub
call
adc
ja
sbbl
idivl
ret
push
add
inc
ja
xorb
push
lea
ret
sub
jge
mov
sbb
popa
loope
faddl
adc
cmp
js
lea
push
or
orl
shrb
jne
mov
pop
movsl
test
add
mov
push
ret
jmp
loop
mov
hlt
sbb
pop
mov
push
or
out
mov
test
sub
push
pop
inc
test
jp
stc
jl
shr
mov
jp
sarl
push
ja
mov
js
icebp
sti
rclw
sti
insb
fisubs
je
xor
stos
dec
js
cs
ja
jle
les
aad
testl
scas
fsubl
out
add
mov
addr16
mov
xlat
or
mov
insb
int3
pushf
and
loopne
pop
mov
outsb
mov
dec
lret
aad
jge
fadd
sahf
xchg
lods
mov
push
std
in
and
pusha
ds
push
dec
fdivrl
icebp
xorl
dec
or
and
rclb
nop
in
xchg
cld
rolb
lea
subl
mov
paddsw
pop
push
jl
xchg
adc
je
imul
sbb
push
mov
das
imul
fcoms
imul
psubd
mov
sbb
inc
jns
sarb
dec
test
stc
lds
cwtl
push
cmpsb
adc
pop
decl
ja
add
xchg
aaa
mov
stc
cltd
fstpt
xchg
adc
sub
xchg
mov
insb
adc
arpl
or
pcmpeqd
push
outsl
shrb
cwtl
pop
jns
dec
jno
lret
push
jge
roll
es
and
lahf
in
jecxz
jae
test
push
jl
pushf
scas
pop
pop
daa
jne
jae
fistpll
ds
sub
mov
pop
enter
movsl
and
jno
mov
xchg
lret
adc
sbb
add
xchg
loope
xchg
cmp
inc
mov
scas
xor
push
mov
je
frstor
lods
inc
pusha
loopne
inc
adc
dec
mov
mov
out
rcrb
dec
xchg
or
mov
sbb
dec
adc
push
pop
insl
cmp
jae
leave
xor
jae
sti
pop
loopne
jbe
xchg
push
xor
or
mov
mov
in
gs
xchg
push
sbb
rcr
sbb
xchg
pop
or
dec
iret
cmpsl
sbb
insb
ljmp
or
or
sub
andb
fidivl
xlat
sub
mov
adc
stc
call
dec
cmp
out
cmp
aas
jb
and
mov
into
xchg
in
adc
nop
imul
cmp
cwtl
out
mov
shrb
dec
mov
push
lods
nop
imul
xchg
stc
fwait
mov
inc
jle
xchg
into
or
nop
addr16
jns
nop
push
lods
and
inc
ja
jp
daa
push
add
sub
xchg
dec
push
add
shrl
xchg
xchg
pop
dec
lods
mov
mov
into
cmpsb
hlt
into
lods
fdivrl
mov
jnp
lock
xor
mov
inc
jns
cmc
sbb
jns
or
jno
lds
aas
test
lret
or
stc
in
sti
dec
pop
sub
iret
lock
cmp
sub
sbb
sub
mov
mov
push
es
mov
mov
mov
xchg
lret
aad
adc
dec
mov
test
mov
and
sbb
aad
mov
or
adc
cmpsb
mov
jbe
sbb
iret
lods
das
arpl
mov
enter
xor
xor
xor
out
cmp
push
jb
jno
lret
lea
lahf
mov
jmp
divps
sub
pop
cmp
inc
bound
jbe
ss
hlt
cmp
sub
insb
mov
xor
fimuls
ds
sub
pushf
fbstp
bound
inc
adc
outsl
fprem
fwait
es
mov
int
inc
sub
and
sbb
aam
mov
cld
out
lea
in
addr16
push
mov
mov
mov
imulb
fnop
aad
into
mov
cmp
mov
nop
hlt
fwait
jnp
push
lahf
sub
js
test
dec
sbb
xchg
popa
xor
aas
repnz
stos
cmc
in
push
fidivrs
mov
int
add
out
aad
lret
push
or
push
mov
imul
mov
xchg
dec
shll
lret
dec
test
ret
sub
xor
out
mov
aaa
jl
cmpb
aam
fbstp
sub
test
xchg
inc
adc
pop
clc
lds
push
fwait
insl
sbb
dec
and
add
fwait
xor
inc
ja
pop
and
mov
push
xchg
subb
jge
int
js
andl
xchg
ret
in
imul
jl,pt
pop
pop
repnz
movsb
sub
mov
pop
in
adc
loope
push
and
jmp
pop
jle
fldenv
scas
lret
decb
aaa
mov
fnstenv
dec
ds
dec
xchg
fistps
inc
xor
imul
stc
cld
dec
push
inc
out
push
push
imul
and
fcoms
sub
in
jge
scas
xor
jae
outsl
mov
adc
sbb
pop
or
cwtl
in
add
pop
scas
mov
repnz
arpl
mov
or
jne
aam
ret
xchg
inc
gs
cmp
xor
data16
sar
mov
popa
and
fidivs
inc
pop
ljmp
adc
jns
sub
sbbl
insl
xor
add
cmpsl
pop
loopne
cltd
or
fxch
mull
repnz
xlat
push
repnz
cmpsl
inc
stos
push
xor
and
push
or
jle
fwait
adc
push
roll
cmp
jg
out
sbb
push
repz
jns
fstpt
dec
mov
sbb
xor
imul
cmp
out
loop
lods
xchg
sahf
and
push
jmp
push
cmp
push
popa
or
int
insl
mov
jno
out
je
dec
sub
mov
xor
fbstp
push
fildll
push
mov
or
rcl
jle
iret
mov
stos
addr16
adc
js
mov
std
sbb
push
cmp
sbb
jns
push
lcall
jmp
cmp
rcrb
add
je
ss
add
fyl2x
xor
sub
out
mov
stc
pusha
lock
inc
mov
mov
mov
cmp
dec
jg
pop
sub
add
cmp
lcall
or
xchg
repnz
cmp
xchg
jo
mov
adc
pop
sub
js
add
inc
mov
inc
cmp
ss
aam
aad
jecxz
dec
and
mov
out
dec
enter
gs
ret
sbb
lock
xor
cli
pop
divb
add
bound
sbb
cmpsb
mov
shl
cmp
sub
push
repz
lret
cltd
decb
cmp
sti
push
jb
jo
mov
lcall
test
xchg
cmc
call
outsl
mov
roll
push
push
adc
mov
xchg
dec
sub
shlb
cmp
mov
or
jl
lcall
xchg
gs
sbb
mov
push
mov
mov
jb
ss
xchg
xchg
call
loope
out
jmp
or
subb
loopne
andl
inc
pop
inc
sti
xchg
add
dec
leave
aas
xchg
sbb
inc
jmp
lods
into
cmpl
les
divb
push
add
xor
cld
out
xor
fcmovnb
bound
data16
out
add
std
lods
jne
nop
inc
sub
sbb
push
test
popa
repnz
mov
cmpsl
test
mov
ret
popa
push
mov
fists
std
mov
hlt
inc
pop
dec
and
shlb
jmp
mov
cmp
addr16
shll
push
sub
push
xchg
mov
inc
jg
insb
mov
mov
inc
ficompl
sbb
mov
jge
test
jl
inc
rcrb
pop
jbe
sub
inc
jmp
fildll
ret
xchg
int
dec
mov
or
jo
pop
jno
dec
dec
mov
stos
or
fcmovnu
pop
xchg
xlat
stc
jne
adc
pop
xor
je
scas
loopne
enter
jmp
jb
cmp
add
pop
nop
push
xor
decl
in
sub
test
cmp
jnp
fwait
xchg
xchg
xchg
dec
sbb
les
orl
pop
dec
pop
insb
pop
xor
or
fs
movsb
addr16
xor
icebp
sub
mov
aaa
icebp
sbb
dec
dec
xchg
ret
add
stos
lock
lret
sbbb
inc
xchg
dec
mov
pop
cmpsb
lret
lods
push
mov
inc
pusha
enter
leave
fsubs
sub
popa
jb
rol
and
js
mov
push
imul
rolb
imul
fists
and
aam
enter
xchg
mov
pop
pmaxub
orl
or
dec
ret
inc
add
cmp
clc
ss
int3
sbb
push
mov
sub
inc
cmp
add
xorb
mov
call
mov
mov
aad
or
das
push
push
shll
rorb
mov
xchg
or
scas
inc
mov
pop
add
xchg
lock
cld
xchg
hlt
aas
xor
fistpll
icebp
mov
es
add
inc
cld
sub
sub
mov
imul
dec
and
test
add
ds
dec
sbb
push
subb
push
aas
pop
push
popa
lahf
addl
sbb
scas
xor
push
jmp
addr16
cmp
and
arpl
jle
sti
shll
into
outsl
stos
cmpsb
cwtl
xor
scas
lret
jle
enter
into
jg
and
mov
sbb
nop
bound
lcall
xor
add
xchg
repnz
mov
mov
or
mov
test
dec
out
inc
enter
out
in
xchg
xor
add
out
lea
dec
add
dec
dec
fdivr
adc
jl
xchg
insb
cmpsb
inc
shll
inc
cltd
les
jns
pop
test
add
stos
imulb
dec
xchg
into
mov
jl
std
pop
test
stc
sbb
loopne
xorb
lret
data16
fisubrs
fidivs
into
test
aam
dec
xor
mov
xor
js
pop
test
jo,pt
cmp
faddl
test
mov
adc
xchg
push
dec
pop
out
daa
shlb
sti
adc
int
add
lcall
in
dec
lock
bound
hlt
mov
outsb
hlt
fs
and
dec
lret
test
cmpsl
or
xor
enter
mov
icebp
arpl
inc
push
mov
lret
rorl
icebp
mov
mov
mull
lods
inc
mov
rcrb
adc
xchg
rcll
pushf
push
pop
pop
std
dec
mov
shrl
add
cmc
push
cmp
into
insl
gs
jecxz
cli
jle
jne
in
das
iret
outsb
popf
pop
test
shlb
shlb
ljmp
sbb
sbb
sti
or
andl
filds
ja
ror
push
mov
cli
jno
mov
xchg
shlb
dec
ss
sbb
fwait
mov
xchg
into
adc
push
add
xchg
dec
call
repnz
inc
faddl
xor
push
std
push
mov
dec
xor
sub
xor
movsl
jmp
notb
imul
pop
rcl
mov
out
cmpsb
push
outsl
cli
inc
lds
xor
js
jmp
incb
jg
push
ror
je
cmc
sub
push
pop
xor
out
movsl
test
loop
push
or
aas
mov
dec
cmp
push
jmp
imul
jg
test
ds
xchg
xchg
dec
cmp
xor
mov
sub
lds
pop
sub
lods
sub
sti
addb
std
nop
push
mov
push
pop
hlt
or
dec
aam
popa
xchg
and
ljmp
jle
fmuls
dec
sbb
dec
mov
add
iret
scas
dec
and
scas
lahf
or
insb
clc
stos
mov
out
xor
insb
xor
outsb
jge
sti
shll
sub
insb
popw
bound
mov
jp
jmp
or
std
mov
daa
inc
mov
ss
fcomps
nop
push
inc
jno
subb
int
lahf
ja
inc
lret
inc
rcl
and
cmpsl
push
sub
push
jl
movq
pop
sub
stos
lea
fs
dec
xor
pushf
adc
xchg
push
push
cli
mov
add
test
ficompl
mov
mov
stc
inc
xor
sbb
jl
mov
adc
push
xor
mov
wbinvd
push
stc
fildll
fldenv
iret
inc
and
fistpll
insb
xorb
or
lea
fwait
or
in
jl
les
mov
pop
sub
push
cmp
dec
sbb
popf
test
add
mov
leave
lcall
lea
shrb
push
out
rorb
mov
std
dec
jo
cmp
dec
xchg
lcall
imull
jp
adc
mov
xor
idivl
pushf
inc
xor
cmc
cmp
lods
rcll
pop
cmp
xchg
xor
int3
cmc
xor
or
jmp
adc
enter
loopne
ja
cmp
dec
test
cmpsl
cmp
ret
jg
imul
or
and
mov
ds
ror
and
mov
pop
adc
push
das
xchg
cmp
popa
pop
scas
cmp
lods
test
insl
cmp
scas
sub
jnp
movsb
mov
cmp
sbb
sbb
pop
lcall
out
fs
add
mov
inc
inc
call
mov
aad
jmp
mov
cmp
xchg
push
inc
push
cmp
mov
data16
aam
in
sbb
jle
sbbb
push
and
add
pop
lods
fstps
andb
pop
xor
arpl
mov
dec
or
add
push
aaa
xchg
out
mov
insb
out
aaa
pop
std
fstl
cmp
cmp
inc
inc
adc
pop
mov
es
push
sbb
mov
inc
out
rorb
inc
movl
sbb
repz
and
fsubr
iret
clc
and
add
es
js
dec
mov
jb
dec
ficoms
add
dec
lret
sub
xor
test
inc
int
mov
push
vzeroupper
ds
mov
mov
and
jae
arpl
ljmp
lods
test
sbb
dec
mov
imul
pop
cli
aam
out
sbbl
fimull
or
sub
out
jo
repnz
popf
icebp
divl
inc
jg
fmul
mov
divb
inc
hlt
or
fsubrl
mov
jo
and
in
int
push
clc
das
jae
xchg
xchg
sbb
pop
add
xchg
repz
pshufw
dec
pop
fsubrl
rol
aas
push
ret
mov
cltd
lahf
dec
movsl
loope
and
mov
test
xor
dec
clc
cld
cs
std
movsb
aaa
imul
out
pop
out
mov
test
test
xchg
mov
lretw
lods
rcrl
fisttps
adcl
sub
mov
imul
cs
test
das
mov
cmp
pop
lcall
xlat
outsl
xor
ljmp
bound
and
xor
lods
in
iret
nop
pop
push
xchg
popf
cltd
mov
fdivrl
orb
repz
je
ret
test
or
scas
fcom
push
aaa
jne
add
mov
sahf
mov
das
jge
push
out
mov
popf
int3
js
jbe
fwait
push
lds
int
sbb
out
clc
add
hlt
fdivr
popa
loopne
ret
lret
jae
ss
jnp
fildl
fldenv
add
lds
and
or
out
loop
mov
sbb
mov
jb
rorb
imul
popa
js
xchg
pop
call
das
scas
lahf
xlat
cmp
cmp
push
or
sub
ds
jns
mov
lods
xchg
loopne
mov
mov
nop
movsl
xchg
movsb
inc
jle
add
test
cmp
mov
adc
shr
xchg
sarl
popa
mov
shrb
pop
into
das
dec
shl
bound
pop
inc
mov
dec
into
mov
outsl
mov
mov
dec
mov
push
popf
inc
pop
jns
mov
cltd
rorb
jnp
out
mov
cmp
cmp
xchg
xlat
test
push
pop
adcb
pop
cmc
mov
scas
cmp
test
xor
pop
out
pop
pop
mov
sub
arpl
decl
outsl
add
cmpsb
adc
rorl
lret
in
xor
jne
push
pop
mov
popa
jecxz
mov
xorb
cmpsb
xchg
inc
jmp
dec
push
enter
popf
sub
xchg
xor
js
insl
xchg
push
sub
mov
mov
push
jbe
es
ds
add
cld
fwait
sbb
push
ds
lea
negb
jge
es
push
cld
add
out
clc
fbld
adc
lret
and
sub
das
sub
lcall
mov
mov
int
inc
sub
or
jl
aas
and
les
ja
pop
fs
sbb
aas
mov
jle
pushl
mov
add
jp
cwtl
es
mov
pushf
in
xchg
aam
xor
mov
sahf
in
inc
xor
xchg
mov
sbb
adc
cmpsb
int
std
pop
and
popf
divb
mov
dec
xlat
iret
mov
cmpsl
add
popa
cmp
mov
xorb
insb
ljmp
lret
lods
add
and
xor
mov
fidivrl
in
scas
aad
push
cmp
mov
ss
in
add
outsl
imul
inc
aam
into
ret
outsb
ret
mov
std
sbb
pusha
loop
daa
cmpb
push
jnp
push
dec
mov
xor
and
jb
in
fbld
lock
push
jne
mov
fldenv
adc
pop
mov
les
test
mov
and
inc
movsb
push
jb
jecxz
jae
int
ja
push
pop
xor
insb
push
outsb
xchg
push
shl
mov
xlat
movsl
push
in
xchg
movsl
out
shll
popa
dec
dec
in
inc
lods
addr16
inc
lds
clc
pop
dec
ret
push
int
push
inc
pop
call
mov
fisubrs
xchg
scas
mov
pop
adc
push
fs
sbb
mov
ja
ljmp
bound
jnp
inc
cmp
mov
popa
cmp
xor
arpl
push
jns
fisubs
fldl
ja
fnstcw
sub
scas
hlt
flds
insb
clc
mov
cld
cmpsl
repnz
in
xchg
xchg
dec
xlat
or
repz
dec
add
lret
adc
and
cmpsb
cltd
cltd
mov
pop
dec
jno
in
mov
cmp
pushl
push
cld
loop
nop
gs
inc
xchg
lret
mov
and
pusha
mov
add
jbe
ret
mov
fisubl
filds
scas
out
add
cltd
xchg
push
xchg
hlt
xchg
xor
mov
cltd
jge
push
dec
cmp
xchg
sbb
lock
sbb
push
iret
xlat
enter
pop
xchg
loopne
out
rcrb
cmp
inc
pop
frstor
pop
jmp
inc
inc
sub
cmp
pop
or
xor
roll
adc
movsb
lret
pop
int3
mov
fs
xor
lret
cmp
enter
mov
mov
push
xor
incl
and
sub
mov
addr16
les
repz
cmp
mov
negl
adc
dec
jge
insl
inc
dec
nop
push
sahf
test
mulb
dec
jb
jns
shl
mov
mov
loop
adc
mov
adc
xchg
jbe
insb
mov
cld
push
xor
xor
fcoml
mov
mov
jae
sub
adc
gs
lcall
fstpl
xchg
cwtl
sbb
jns
jl
jp
pop
out
jl
mov
sbb
push
push
ja
fidivrs
shrb
xchg
inc
sub
clc
mov
adc
std
cmp
mov
repnz
or
bound
in
inc
xor
lods
xchg
aaa
mov
mov
cli
and
test
pusha
call
cmp
sti
mulb
or
sbb
push
cmp
and
mov
daa
fistps
jge
stos
pop
push
jae
call
xchg
cmpsl
xchg
mov
ds
mul
das
or
out
jecxz
xor
jge
dec
mov
jp
or
in
std
movsb
xor
shll
or
inc
push
add
pop
adc
xor
and
mov
mov
jno
es
repnz
xchg
mov
xorb
mov
ljmp
lret
fdivrl
jp
ss
fstpt
pop
faddl
and
inc
testb
enter
jo
pop
or
mov
dec
pop
stos
sti
icebp
xor
xor
movl
mov
inc
in
add
lret
adc
cwtl
iret
mov
push
ss
mov
mov
and
xchg
stc
push
dec
dec
add
xchg
xchg
add
add
xor
clc
cld
xchg
jecxz
dec
cmp
les
push
adc
pop
adc
pop
dec
xchg
push
fwait
hlt
ror
push
nop
loope
mov
adc
jbe
xchg
pop
and
loopne
mov
pop
cmp
std
test
mov
mov
xor
mov
jbe
cld
lods
push
ret
jns
inc
add
jnp
imul
insb
sub
sbb
ret
out
aas
adc
jns
test
or
xor
adc
cmp
sbbb
outsl
ja
aaa
mov
fwait
mov
mov
mov
xor
push
sub
jno
fsubs
lret
clc
rorl
jle
lock
xor
cmp
push
pop
out
inc
leave
push
push
mov
push
cmpsb
mov
cmp
lock
out
scas
lock
enter
faddl
inc
insl
push
dec
scas
dec
loopne
or
scas
mov
and
adc
push
sub
dec
out
mov
or
popa
sub
jp
mov
decl
pop
jg
lods
jg
ss
mov
mov
jnp
fistps
mov
and
push
fs
pop
imull
ret
mov
ljmp
pop
mov
mov
pop
call
sub
pop
shll
in
xchg
cli
pop
rolb
ds
dec
inc
lret
lcall
sahf
in
scas
jbe
stos
mov
add
push
test
xchg
cmp
xchg
stc
cmpsb
or
sbb
add
and
mov
sub
xchg
xor
sbb
lret
mov
cld
push
adc
inc
adcb
lock
aam
add
inc
dec
xchg
push
daa
repnz
fdivr
mov
push
into
xchg
pop
cmp
mov
outsl
dec
clc
or
sbb
cwtl
dec
in
call
scas
out
sbb
les
jnp
cwtl
adc
cld
lock
pop
dec
fs
pop
pop
sbb
aam
jbe
in
shlb
or
test
add
inc
or
sti
or
popa
fdivrl
dec
mov
push
push
xchg
cmp
sub
push
mov
mov
call
ret
rcrl
imul
xor
pushf
cwtl
xchg
xor
xchg
pop
push
hlt
pop
jge
aaa
xchg
lods
push
aam
popa
mov
inc
aad
cmp
cs
in
stos
xchg
in
lret
std
andb
je
mov
stos
adc
mov
xchg
cmp
xchg
scas
stos
push
fst
lahf
push
nop
and
xor
pop
mov
mov
mov
adc
pop
push
cmp
into
jge
adc
inc
sbb
je
sbb
fwait
insl
in
sbb
rorb
push
push
ret
pop
insb
sub
mov
mov
pop
cmpsb
dec
repnz
jge
mov
and
fbld
sub
or
inc
mov
xchg
mov
pop
mov
gs
cs
or
xchg
das
mov
or
xchg
push
dec
sti
inc
insl
pop
adc
or
cmpsb
or
cmpsb
or
jo
sub
mov
ss
mov
lea
lods
jo
clc
jne
pushf
fs
jmp
push
ret
nop
int
inc
cmc
and
dec
sahf
lret
add
fwait
ja
push
jmp
xchg
aad
xor
pop
cmc
mov
xchg
mov
not
stos
jl
pop
pop
inc
icebp
add
enter
addr16
pop
shlb
add
sbb
inc
mov
aam
push
mov
pop
hlt
or
mov
mov
and
loope
and
push
ja
adc
test
sub
add
adc
xor
mov
jecxz
xchg
in
leave
bound
add
push
push
out
mov
mov
sbb
scas
inc
mov
out
push
sti
xchg
pusha
sbb
push
jns
adc
mov
inc
xchg
sbb
inc
iret
or
fldenv
lods
cmovno
stc
mov
cltd
ljmp
cmpsl
adc
xchg
jb
int
clc
or
add
in
xchg
pop
outsl
lods
insb
aas
test
dec
das
inc
inc
cmp
lcall
jle
in
mov
pop
pop
xchg
pop
xchg
in
out
sub
dec
push
dec
xchg
outsb
add
mov
pushf
cmpsb
xchg
xor
sub
inc
test
and
mov
push
jo
mov
stos
pushf
pop
or
push
xchg
sti
stc
stos
scas
inc
mov
call
notb
push
fucomi
stc
pop
les
ljmp
cmp
out
cld
pop
xchg
dec
in
jl
aad
nop
push
fcmovnb
out
cmp
jo
clc
or
fmulp
jns
jmp
xor
lods
js
repz
cmc
sub
mov
or
cwtd
mov
push
in
mov
add
mov
push
or
dec
fisttpl
cmc
push
out
jge
adc
roll
or
test
rcrb
fcmovbe
mov
insb
and
cmc
and
stc
cmp
mov
mov
imul
inc
xor
add
inc
fwait
jne
addb
adc
mov
outsl
dec
gs
add
mov
outsl
add
stc
das
imul
nop
sbb
sub
out
mov
divb
data16
icebp
or
cmp
jne
js
jp
mov
sub
iret
add
out
cmc
lock
out
jecxz
pushf
test
xor
cmp
cmp
dec
adc
jo
into
sbb
cltd
dec
lock
lock
push
lret
xchg
pushl
int
pop
cmp
mov
dec
lret
xor
negl
and
aas
pop
aas
cmpsl
or
adc
pop
int3
ret
push
sbb
jecxz
pop
bound
out
sbb
aam
rol
sub
push
xchg
mov
into
cmp
xchg
xor
and
ret
push
inc
adc
je
insl
loop
inc
sbb
insl
mov
loope
loope
stc
mov
std
outsl
or
or
int3
ret
cmp
xlat
mov
push
adc
and
les
xchg
das
call
mov
sahf
jg
xchg
mov
adc
dec
jg
mov
mov
nop
arpl
dec
or
push
jns
lods
aas
in
mov
cmpsl
lods
pushf
data16
mov
inc
inc
xorl
pop
jb
sbb
jg
push
fbstp
or
lcall
mov
cmp
insl
test
add
mov
mov
cmpsb
dec
jo
pop
sub
pop
mov
or
add
inc
sahf
jle
jno,pn
dec
jl
mov
loope
jmp
cmp
jno
rcl
cwtl
data16
pop
pop
and
ror
mov
fistpl
pop
mov
inc
and
gs
cwtl
add
sub
jl
out
adc
into
scas
fnstenv
xor
cmp
dec
js
fxch
cwtl
orb
mov
out
out
ret
push
sub
test
test
mov
out
aaa
test
into
xor
cld
repz
sub
jo
and
dec
insl
shlb
fmull
roll
call
pusha
xor
cmp
xor
mov
xor
ljmp
push
and
test
jle
dec
pop
push
sbb
cmp
xor
rcll
in
movq
mov
inc
xchg
jo
clc
popf
pop
mov
sbb
int3
sahf
insb
rcrb
push
arpl
leave
movsl
fsts
xchg
test
jg
out
lcall
ds
or
jnp
mov
add
rorl
lock
mov
jg
cmp
jge
pushw
into
xchg
dec
sub
mov
pusha
push
sbb
shlb
jg
inc
jb
mov
mov
scas
lret
mov
clc
adc
push
stc
inc
stos
mov
sub
cmp
adc
pop
movsb
mov
or
jecxz
jle
int3
scas
or
mov
push
decl
jg
int
mov
add
sar
iret
xor
jmp
xorl
out
jp
fidivrs
sbb
and
mov
sbb
cmp
jne
es
rcr
testb
inc
inc
push
sub
out
xchg
inc
adc
scas
inc
adc
sti
xchg
and
lods
add
call
push
roll
jno
inc
mov
or
jb
cmpb
add
jnp
cmc
data16
mov
popa
and
lock
sbb
inc
xor
roll
mov
in
arpl
push
inc
sbb
mov
enter
in
subb
xchg
arpl
test
xchg
sub
mov
push
dec
mov
test
cmp
inc
fs
dec
sbb
cld
insl
inc
mov
jne
adc
add
push
ds
jns
adcl
dec
cmc
xor
xor
xor
addr16
sbb
mov
dec
add
mov
inc
xchg
inc
loop
jo
iret
inc
in
fmull
sbb
xchg
xor
into
jle
mov
test
imul
sbb
popl
dec
fldl
sub
mov
jno
test
popf
out
inc
icebp
xchg
stos
or
jo
fldenv
loopne
addr16
clc
icebp
sub
fbstp
aam
xchg
push
mov
stc
scas
mov
int3
or
sbb
mov
lods
loopne
out
mov
xchg
mov
add
jnp
inc
sbb
shll
dec
and
clc
std
test
pop
jmp
out
pop
into
mov
inc
pop
adc
shr
push
xor
adc
ds
dec
je
add
mov
sub
adc
inc
jo
cld
sub
jo
dec
inc
sbb
xchg
push
cmpb
cmp
fdivs
stos
pop
jbe
dec
in
hlt
mov
into
daa
mov
cmc
push
cmp
inc
and
jmp
aaa
cmp
dec
push
fdivl
in
les
mov
mov
jle
mov
mov
jp
mov
movsb
movsb
stos
bound
push
leave
sub
and
sub
mov
fadds
ja
jo
ja
jecxz
xchg
mov
in
pop
or
fxch
scas
jl
repz
pusha
push
lahf
cmp
add
iret
dec
aad
pop
out
shlb
xchg
or
push
out
outsl
cmp
scas
dec
icebp
nop
dec
imul
loope
rol
incb
pop
loopne
imul
mov
or
or
sub
xor
adc
push
xchg
aas
sbb
pop
jo
pop
lret
ficoml
cmp
push
xor
push
fbstp
mov
pushf
mov
pop
xor
push
addl
loopne
ss
xor
lods
shlb
lea
ret
test
add
jno
jo
popf
push
xchg
loop
ss
jecxz
fptan
aad
fistpll
out
aam
roll
or
cmp
sub
fldcw
push
ss
push
lea
pop
cmc
loop
and
sahf
pop
mov
adcl
xor
in
arpl
adc
out
mov
cs
xor
pop
push
adc
pop
repz
call
pop
xlat
jg
sub
jl
cmp
test
movsl
daa
sub
and
filds
ds
sbbb
pop
jge
cs
push
sbb
leave
data16
xor
jno
jmp
fisttpl
jno
cwtl
movsb
sub
cmpsb
mov
jo
test
lods
mov
repnz
in
jmp
lods
int
test
ja
dec
xorb
in
dec
cltd
cmpsl
cmc
xor
mov
aad
pop
js
sbbl
sbb
fidivrl
and
bnd
ljmp
lcall
lock
stos
push
cmp
fsub
lock
jne
lahf
inc
std
in
sub
sbb
gs
mov
call
leave
mov
je
test
pusha
sbb
sub
cs
mov
pushf
das
and
out
lcall
xchg
add
mov
xchg
shll
mov
jecxz
out
sub
push
and
or
xor
cwtl
dec
and
or
jmp
ljmp
mov
ret
je
repz
adc
popf
adc
adc
jp
cld
sahf
xchg
lcall
push
shl
out
loope
idivb
dec
pusha
repnz
mov
int3
inc
fdivs
orb
xlat
xchg
mov
popf
mov
xchg
jge
dec
or
xchg
dec
xchg
jnp
insb
adc
rol
sbb
aaa
jno
push
sub
xor
add
adc
xor
adc
mov
cmp
jae
les
stc
push
outsb
pop
cmc
fldt
cli
fs
pop
mov
push
xor
jl
arpl
cmpsb
adc
or
leave
mov
shl
scas
ja
scas
jbe
out
inc
adc
inc
bound
cmp
adc
push
cltd
and
jmp
test
and
push
lods
data16
mov
and
in
mov
sbbb
pop
stos
push
and
pop
adc
pop
xlat
fisubrs
xchg
xor
lret
mov
rol
dec
or
jmp
inc
xchg
mov
lret
aam
add
aaa
xor
dec
call
xor
inc
outsl
jmp
mov
and
pop
test
add
fs
jns
into
test
out
scas
inc
cmpsl
outsl
push
or
adc
std
lds
jns
stos
push
mov
sbb
mov
adc
cmp
sbb
repz
cmpsl
xchg
int
int3
add
fs
pop
mov
pushf
pop
dec
add
mov
push
lds
jo
add
dec
cltd
lcall
or
push
mov
aaa
push
push
aam
xchg
xchg
lret
push
or
mov
stos
pop
jmp
and
sub
das
mov
loopne
jnp
lret
test
and
mov
fisubrs
pop
mov
xchg
mov
and
in
adc
fisttps
sbb
popf
jecxz
daa
lds
jmp
xor
jp
xchg
test
add
mov
cmpsl
jnp
inc
cmp
cmp
insl
imul
loop
pop
jnp
xorb
imul
shlb
mov
call
aaa
xor
sub
movsl
jp
cld
cmp
pop
sbb
dec
sub
or
fwait
mov
sub
jne
les
jl
xchg
into
xchg
aad
in
repnz
int
mov
and
cli
jle
pop
jae
aas
cld
insl
sub
inc
jl
jnp
rcrb
add
jp
xor
xor
lods
cmc
push
es
adcb
cmc
ret
repz
inc
outsb
sbbl
lea
jg
loopne
sti
cmpsb
add
sub
fidivs
test
andb
stc
lret
iret
cmp
xor
xchg
jge
xchg
add
mov
cmp
fs
mov
mov
notb
mov
and
pop
ss
sti
jnp
mov
test
popf
add
cmp
repz
sub
sbb
jbe
jle
int3
fistpl
xchg
and
loopne
xchg
jmp
dec
dec
insb
sbb
cmp
or
mov
daa
mov
add
aas
cmp
jmp
outsl
mov
and
sub
and
stc
in
cmp
fwait
or
inc
adc
push
mov
movsl
jo
add
mov
push
mov
xchg
js
stos
jae
or
cld
mov
adc
mov
sbb
xchg
enterw
jnp
pushf
jecxz
push
xchg
mov
iret
js
sar
mov
shr
daa
int3
jne
adcb
pop
fwait
pop
loop
mov
std
and
xchg
data16
mov
test
mov
pop
outsl
add
mov
push
cmpsl
push
imul
outsb
dec
inc
loopne
jecxz
movsb
clc
leave
pop
sub
xor
dec
pop
sub
xlat
shll
cmp
pop
aad
rcr
xchg
sti
leave
scas
mov
data16
xor
cmpsb
mov
into
cltd
jb
enter
mov
jmp
sahf
sbb
sbb
mov
aam
dec
or
pushf
test
lahf
jnp
outsb
push
sub
rclb
mov
in
stos
sub
mov
pop
outsb
addr16
fnstsw
jb
sub
daa
ds
nop
mov
push
and
sub
ljmp
fildll
loope
mov
jb
jb
sub
dec
loop
into
imul
add
fcomps
jo
mov
ret
cmp
mov
push
ja
mov
and
xlat
pop
pop
or
in
sar
out
jbe
movsb
adc
jae
insl
out
popa
imul
cmp
imul
pop
push
lea
sbb
mov
jmp
mov
daa
dec
stc
xchg
movsl
fs
push
dec
jnp
ret
sub
adc
mov
test
popa
popa
int3
sub
mov
fwait
js
mov
dec
sahf
adc
push
cmp
inc
cmp
add
rol
loop
add
lods
cwtl
cld
xchg
pop
or
or
out
mov
push
aad
fwait
lods
cwtl
cwtl
pop
sbb
fcompl
sbb
js
sbb
ds
adc
cmp
lock
add
fcomps
or
jp
and
adc
stos
stc
xchg
mov
mov
ret
adc
jg
mov
in
out
jmp
jo
insl
lds
loop
fs
pop
sbb
addr16
faddp
push
bound
lods
mov
into
mov
psrad
iret
sub
mov
sub
and
inc
mov
movsb
mov
cmp
in
sub
icebp
scas
mov
xchg
loop
push
cltd
xrelease
aaa
and
fildll
jmp
ret
jmp
hlt
lret
dec
scas
mull
adc
adc
sbb
fstpl
xchg
rolb
mov
das
and
mov
shrl
fndisi(8087
jo
dec
jbe
mov
dec
mov
sti
fimull
xchg
or
das
sub
inc
cli
and
stos
lahf
aaa
dec
bnd
out
mov
jge
cs
add
pop
mov
inc
or
and
lock
mov
add
je
out
pcmpgtb
sub
outsl
aas
aas
fs
sbb
dec
call
out
cmp
dec
insb
cld
xchg
jo
ret
push
test
push
test
cmp
add
push
aam
mov
pop
hlt
mov
dec
jns
fimuls
out
movsb
repz
insb
xchg
sub
das
mov
mov
rorl
cwtl
mov
rol
mov
jmp
pop
jnp
push
adc
bound
cmpsl
popf
jo
lods
cmp
xor
movsb
aas
arpl
mov
mov
jo
xor
lds
jge
std
mov
ljmp
repnz
insb
xchg
aam
fnstcw
xor
jb
xchg
jecxz
je
incl
dec
sub
stc
mov
adc
add
adc
or
push
add
add
mov
jle
divl
stos
sub
jmp
fs
xchg
mov
mov
nop
lock
sbb
cmc
pop
jbe
imul
ja
rclb
les
cmp
testb
lcall
sbb
jl
lods
es
mov
das
cmpsb
xchg
push
loopne
jle
mov
out
adc
jmp
aad
inc
add
test
lea
test
negb
loopne
mov
push
pusha
mov
push
icebp
aad
repz
xchg
mov
out
je
add
adc
rcrl
push
fisttps
imul
adc
ret
cmpb
xchg
lahf
movsb
loope
idivl
jle
sub
rorb
xchg
dec
loope
cmp
sti
sub
cmp
lds
cmp
daa
mov
xchg
sbb
ss
mov
lret
adc
push
inc
pop
fcmovne
into
fistpll
dec
xchg
loop
mov
push
je
adcl
in
lret
pop
ds
aad
xor
clc
popa
cltd
sbb
mov
adc
fwait
das
fstpt
pop
sbb
dec
adc
jp
mov
data16
xor
fstps
rorl
dec
stos
cmp
scas
fdivrs
or
fcmove
popa
cld
jle
add
jmp
cld
pop
int3
orl
scas
scas
clc
insb
adc
push
xor
lea
call
test
push
xlat
repz
xorb
leave
in
adc
call
in
ret
cmp
fisttpl
iret
fstps
xlat
fs
lcall
mov
xchg
push
inc
mov
daa
xchg
mov
addr16
inc
xor
push
lea
sbb
es
call
aam
sub
dec
rcrb
mov
jb
push
sub
push
test
mov
xor
outsb
popf
cmp
and
pop
pop
movsb
cld
aad
pop
inc
ret
mov
sti
adc
pop
or
adc
popf
into
js,pt
fidivrs
push
xor
jbe
sub
data16
mov
out
add
ja
pusha
add
xchg
mov
push
gs
pop
js
mov
dec
pop
sbb
pusha
pushf
xor
inc
repnz
jne
cmp
mov
bound
stc
retw
jle
lret
cltd
dec
mov
sub
inc
imul
xor
shl
rclb
or
stos
orl
pop
add
mov
adc
call
jo
add
xor
cmp
lahf
pop
pop
cltd
sbb
lahf
inc
sbbl
std
push
jbe
pop
add
jl
test
jl
ljmp
xchg
mov
push
push
sbb
in
lock
mull
xor
imul
pop
adc
sub
inc
and
fwait
inc
insl
cmpsb
je
pop
mov
roll
mov
dec
mov
push
mov
dec
xchg
sub
jno
lcall
shll
enter
rol
xor
and
or
es
pop
sub
inc
add
jne
in
or
inc
lds
dec
fsubrl
fldt
jbe
mov
mov
int
cld
in
imul
test
push
push
add
in
sbb
sbb
std
sbb
testb
aam
icebp
test
lret
mov
xor
cmp
cmpsl
mov
das
out
or
rcll
cld
lds
daa
fs
add
jmp
mov
push
dec
dec
aad
enter
lock
mov
xchg
push
inc
mov
sub
pop
sbb
cld
cmpsl
mov
push
mov
or
and
shrl
sahf
ja
lods
stos
mov
cmp
aam
iret
jns
push
xchg
xchg
xchg
pop
data16
pop
xchg
cld
daa
pop
mov
xlat
popa
aad
dec
sbb
or
xchg
jo
push
dec
mov
cmp
pop
mov
rorl
fldl
xchg
outsl
jo
push
rorl
jp
push
idiv
pop
pop
sub
int3
or
mov
xchg
jle
push
int3
movsb
jo
int3
in
ret
mov
push
int
sub
and
xchg
or
fldenv
fwait
mov
mov
dec
adc
or
dec
pop
mov
call
jnp
adc
jae
dec
out
xorl
mov
repnz
shl
inc
adc
mov
or
push
sub
mov
push
repz
sahf
mov
pusha
mov
pop
cmp
rcrl
loop
sub
pop
movsb
jecxz
into
cmpsl
dec
mov
sarl
imul
insb
sub
dec
repnz
cmc
xchg
dec
push
sbb
data16
mov
push
add
cmpsb
clc
and
and
jnp
lret
inc
enter
fdivl
ja
pop
pop
add
jo
scas
or
jns
ss
loop
rclb
lret
cs
repnz
ja
push
push
out
popf
sbb
andb
sarl
test
nop
and
loope
and
test
lods
icebp
mov
orb
test
sbb
jbe
ret
and
jo
and
shrl
xchg
call
push
shrl
mov
call
xchg
clc
mov
decl
add
in
adc
mov
inc
cmpsl
xor
stos
aas
ffreep
pop
pop
outsl
cmpsl
out
and
add
movsl
pop
push
cltd
in
inc
shll
push
adc
xor
mov
repz
jecxz
xchg
test
jle
push
in
push
xor
push
mov
push
push
jg
jmp
imul
mov
stos
inc
add
or
mov
shrl
cmp
xchg
mov
push
and
gs
xlat
stc
outsb
sbb
mov
aad
xchg
lahf
sbb
push
dec
mov
es
lret
jl
inc
in
roll
push
push
lods
adc
enter
aad
xlat
push
jne
fxch
dec
adc
dec
call
mov
bound
pop
dec
jns
stos
add
sbb
inc
adc
mov
aad
mov
mov
cmp
or
xor
incl
aad
cltd
add
xor
popa
jg
lea
or
bound
pusha
jp
imul
mov
jbe
fdivp
sbb
daa
jbe
inc
sub
loope
dec
dec
enter
int
and
cmp
add
stc
push
loop
enter
mov
adc
mov
nop
jp
sub
lahf
lock
dec
mov
pop
jns
rcll
pop
movsb
dec
fdivrl
sub
call
xor
loope
outsl
pop
clc
add
ds
mov
inc
pop
mov
pop
in
dec
call
addr16
and
xchg
lcall
mov
sbb
imul
mov
test
xor
iret
xchg
adc
fs
or
and
mov
std
inc
idivl
jg
mov
jmp
and
in
in
inc
fldcw
mov
in
fimuls
cld
les
or
or
sbb
or
cmp
inc
xchg
gs
pop
cmpsl
cmp
iret
jnp
iret
cmp
mov
cmp
xor
jno
lods
inc
lahf
pop
lret
in
jmp
mov
pop
stos
push
mov
mov
add
cmp
dec
dec
xor
repz
orb
xchg
adc
cmpsl
outsl
fnstsw
mov
pusha
mov
in
or
sub
stos
cmp
aaa
adc
dec
fs
lea
mov
mov
jae
fsubs
pop
pop
daa
jb
push
popa
shrb
sbb
xlat
cli
fsubs
hlt
xor
xchg
call
add
and
gs
pop
jle
mov
das
fstpl
mov
ds
xchg
push
mov
movsb
xchg
mov
mov
push
dec
popa
or
addr16
out
clc
negb
inc
pop
call
cld
mov
adc
jge
lods
pop
inc
imul
sub
sbbb
jbe
out
lods
std
fidivs
push
adc
cmp
sbb
or
xchg
sub
clc
push
dec
mov
lret
sahf
xor
mov
sti
jns
cmpsb
lret
jbe
fs
dec
pop
fidivrl
mov
cmp
xorl
dec
repnz
lret
pop
mov
push
pop
jl
add
cli
jmp
adc
shlb
leave
push
and
sub
inc
pop
fdiv
sbb
popa
bound
jb
cmp
imul
js
scas
cld
or
aad
insl
cmp
jle
data16
sbb
andl
sub
pop
stos
adc
inc
repz
addr16
sub
jl
or
inc
pop
sub
adc
sbbb
push
xor
mov
jp
shrb
xchg
inc
mov
mov
cmp
mov
enter
call
cmp
in
dec
adc
icebp
and
movsb
jmp
pop
data16
call
add
jmp
lret
out
push
or
fidivl
aam
cmpsb
mov
out
fdivrs
jae
outsl
testl
xchg
rcrl
push
mov
inc
rorl
jp
cmp
pop
test
lock
sbb
xor
xor
nop
inc
cmp
jnp
mov
aad
or
sub
imul
mov
into
lods
std
mov
addr16
stos
cmpsl
jno
sbb
lahf
xor
and
push
test
loope
inc
imul
and
in
cmp
pop
in
fdivrs
rol
daa
pop
and
subb
pop
cmp
jo
insb
sub
ror
pop
mov
repnz
mov
sahf
cmp
cmp
int3
pop
idivl
sub
std
imul
shrl
push
cs
or
mov
orl
fisubs
lock
je
mov
sbb
mov
movsl
mov
pusha
fnsave
insl
inc
mov
into
dec
mov
loope
fisubrl
inc
pusha
cwtl
lock
pop
xchg
daa
mov
xor
in
mov
fdivr
dec
rol
dec
lret
sbbb
mov
adc
outsb
dec
shlb
loop
nop
lret
add
inc
repnz
call
mov
sahf
repnz
xchg
dec
mov
inc
test
xor
xor
xor
jecxz
cmc
mov
rcll
add
dec
cmc
test
pop
xchg
or
cmpsb
cltd
jp
jbe
fsubp
cmpsl
shlb
cld
inc
mov
push
pop
jmp
mov
loope
mov
stos
push
or
lods
jne
mov
stc
outsl
enter
insb
adc
pop
sbb
cltd
pushf
sub
test
lcall
mov
in
and
jo
aad
dec
shl
lods
dec
out
sub
push
push
enter
ret
test
pop
outsb
loop
jno
xchg
lods
and
xchg
dec
lock
xor
inc
mov
xor
cmp
mov
fimull
mov
popf
inc
lock
shl
test
sub
xor
sbbl
cmpb
sarb
xchg
bound
mov
push
or
xchg
mov
push
out
cmc
mov
xchg
xor
fwait
arpl
les
cmp
xchg
dec
mov
pop
fdivl
cld
fwait
stos
popa
cs
sbb
lcall
lcall
mov
xchg
cld
mov
add
ja
jg
or
push
test
test
mov
test
mov
and
inc
test
xchg
test
sahf
scas
dec
mov
int
dec
mov
ss
cmpsl
int
pop
mov
jns
test
lea
mov
stc
rcrb
inc
jae
fwait
lods
push
pop
ljmp
mov
aaa
dec
sub
push
jp
mov
jne
fs
dec
mov
mov
enter
test
in
push
and
inc
fwait
loop
rorb
out
rorb
andl
ljmp
into
add
les
xchg
lock
inc
test
pop
xor
add
lds
xchg
and
mov
lds
dec
adc
mov
es
jmp
dec
loop
ret
movsb
sbb
mov
mov
lcall
popf
clc
inc
dec
jb
cld
xchg
dec
pop
add
lea
lret
xchg
and
lret
xchg
sbbl
or
fidivl
lock
add
sub
cmpsl
outsb
mov
sub
cmp
or
adc
cmc
inc
mov
fcompl
lods
imul
jg
pop
jmp
aad
dec
add
cltd
stc
aam
movb
add
sub
js
ret
xchg
loopne
ror
inc
test
int3
jle
aam
in
inc
push
push
mov
sbb
push
and
out
lods
sbb
push
aad
js
jmp
mov
mov
pop
loope
pop
cwtl
sti
mov
mov
int
xor
jns
pop
ret
aam
mov
push
clc
sbb
mov
lods
dec
aam
push
insb
push
testb
adc
sbb
mov
stc
pop
fistpll
adc
test
es
jae
loopne
cli
clc
pop
xor
push
subb
loop
cmp
enter
sbb
int3
pop
inc
sub
scas
jno
test
test
sbb
jecxz
into
icebp
rclb
shll
sbb
xchg
sbb
jp
xor
ja
addr16
faddl
xchg
repnz
jo
jae
dec
or
jne
jge
mov
xchg
or
inc
loopne
and
mov
sti
pushf
movl
popf
cmp
mov
repz
lret
ret
or
imul
or
enter
jge
xchg
lods
popf
adc
test
scas
loope
push
pop
nop
xchg
dec
adc
mov
es
out
jns
adc
imul
and
je
xchg
jno
dec
mov
test
in
sub
sub
inc
mov
iret
daa
jb
int3
cmp
jae
mov
push
mov
pop
ja
cmpsl
enter
int3
add
ficomps
add
and
pop
xor
push
pusha
rol
test
mov
movsl
dec
out
pop
daa
scas
loop
fnstenv
repnz
adc
xor
out
or
cmp
cltd
mov
pushf
sbb
in
aas
jae
mov
stos
push
dec
fwait
sbb
repz
cmpsl
cld
hlt
call
nop
arpl
xchg
sub
stos
test
out
pusha
fnsave
sub
xor
addr16
repnz
mov
pop
cmpsl
sahf
pushf
xor
sub
jo
test
sbb
jp
sbb
lss
fdivs
adc
push
sub
jne
mov
fimull
insb
xchg
and
dec
mov
cmp
stos
mov
push
fwait
shll
push
mov
popl
dec
inc
loopne
xchg
jo
xchg
sub
out
cwtl
mov
arpl
xor
jge
mov
popf
iret
out
cmp
mov
add
xor
int3
inc
clc
push
sub
cmc
mov
pcmpeqw
fildll
imul
sub
xor
jb
in
dec
cmp
mov
shlb
cmpsb
push
push
lds
in
push
data16
cmp
xor
loopne
outsb
and
mov
mov
mov
jnp
or
fwait
adc
aam
pop
hlt
js
xor
pop
jl
std
jb
cli
ret
sub
and
sub
jo
movsl
addr16
mov
cwtl
and
lahf
xchg
ret
cmc
inc
push
dec
enter
jle
pop
mov
pop
dec
mov
push
cmc
dec
inc
jne
xchg
inc
xchg
or
and
jo
cltd
jnp
xchg
iret
iret
les
mov
sbb
sahf
jmp
ljmp
into
ficomps
adc
push
repz
popf
lcall
mov
test
loopne
jne
iret
xchg
adc
adc
les
call
aad
pop
popf
pop
or
push
cmpsl
fistpll
xor
lods
lret
pop
pop
sbb
fwait
cs
fnstenv
lret
test
in
and
xchg
xchg
sbb
mov
rolb
xlat
and
inc
mov
push
insb
outsb
loope
adcl
int3
adc
push
mov
test
mov
xor
inc
test
cmp
adc
cli
out
push
push
inc
js
sti
pop
dec
sbb
and
adc
mov
xchg
cmp
je
inc
pop
jp
sub
jbe
or
notl
push
outsl
sub
mov
roll
jg
outsb
jge
sti
sahf
lcall
loopne
jp
fwait
xor
je
sub
sbb
jne
test
out
sbb
push
mov
fmulp
idivl
lret
dec
lahf
push
push
jns
js
icebp
fadds
or
or
sub
pop
in
out
icebp
mov
and
xor
inc
cmp
cmp
insb
nop
mov
scas
or
hlt
jb
adc
sbb
mov
les
fcomip
xor
lods
dec
fcompl
imul
push
pop
mov
imul
ja
call
shlb
push
inc
xchg
mov
mov
loope
psllq
popf
cmp
enter
mov
fsts
and
jge
adc
cmpsl
das
xchg
sbb
hlt
dec
jl
adc
sbb
movsb
mov
insb
mov
and
jb
lea
sub
loope
lock
or
xlat
icebp
daa
sub
push
pop
mov
into
inc
cli
cmc
sub
test
ja
mov
and
push
push
aaa
add
mov
daa
sarb
add
daa
sti
or
aas
cmp
pop
scas
pop
sub
cltd
pop
faddp
xchg
sbb
ja
ret
mov
add
dec
or
push
or
adc
inc
shll
test
dec
popf
mov
in
sbb
mov
cwtl
mov
xor
and
pop
cmp
mov
mov
jle
sahf
xchg
lds
mov
add
lret
push
fisubrs
xchg
cmp
sub
out
ret
cld
dec
push
pop
shlb
cwtl
shl
mov
sahf
jl
mov
xchg
push
popa
push
test
call
aam
and
iret
cmp
xor
mov
movsb
stos
fcom
sahf
cwtl
push
test
and
sbb
sbb
inc
mov
cmp
lods
iret
mov
xor
cld
cwtl
lods
or
test
arpl
sbb
add
add
orl
imulb
iret
ret
push
sub
ret
xchg
dec
adc
stc
sbb
repnz
adc
out
ljmp
dec
dec
test
xor
push
leave
dec
sub
loop
mov
pop
jecxz
fcmovnu
test
mull
add
popf
cmp
cmpsl
sahf
mov
mov
arpl
es
pop
dec
xor
mov
pop
push
sub
negb
stc
test
andl
xor
aas
out
sbb
dec
fcompl
push
lret
jne
movsb
lret
adc
rep
jb
inc
cwtl
dec
pop
mov
cmpsl
nop
jp
fistps
inc
inc
or
push
sbb
push
cmp
sub
imul
fdivrl
mov
fidivrl
lds
ret
pop
xor
stos
dec
inc
into
mov
fs
fcoms
mov
xchg
xor
sti
imul
mov
jp
test
or
mov
xor
stos
xor
mov
fwait
jp
jbe
setns
add
pop
fnstcw
call
incl
jae
rcrb
fcoms
ror
cs
lret
test
cmp
lret
and
jbe
sub
pop
pop
add
cmp
int
imul
fdivr
sub
dec
aad
sub
xor
lcall
nop
xchg
in
stc
and
jmp
add
arpl
xchg
nop
imul
sbb
sbb
pop
mov
pop
mov
push
les
dec
out
or
xor
push
cmp
push
lcall
jp
and
fstp
xor
rorb
xlat
pop
sub
pop
xchg
shr
loop
or
loope
jp
inc
jmp
jecxz
mov
mov
cmpsl
mov
pop
cmp
test
jg
sub
xlat
lea
cmp
subb
jg
mov
movsl
ret
jmp
push
jnp
xchg
pop
test
xorl
mov
enter
repnz
dec
and
std
dec
pop
mov
sbb
hlt
lods
loop
icebp
xchg
or
mov
loop
adc
xchg
xchg
dec
cmp
outsb
xor
inc
or
ja
in
add
mulb
gs
inc
xchg
mov
rcr
add
shl
xchg
movsb
mov
jb
cmp
cmp
sub
aam
and
imull
in
aaa
sub
aas
xor
in
adc
or
ret
js
mov
sub
cmp
stos
and
jmp
add
mov
imul
push
sub
jne
mov
or
outsl
inc
dec
mov
sahf
xlat
stos
cmp
cmpsb
sub
sub
insb
jb
xorb
mov
stos
stos
std
adc
fcmove
shl
xchg
cmp
pop
pop
and
sub
sub
inc
fdivl
mov
and
mov
clc
mov
fsts
inc
xor
mov
fstp
sbb
sbb
imul
fadd
loop
jg
xchg
lea
mov
add
shlb
imul
call
mov
cmp
xchg
inc
imul
test
mov
aam
mov
dec
inc
cmp
aaa
xor
cltd
cmp
repnz
sti
or
sub
jmp
or
nop
loope
stc
add
pop
nop
push
and
dec
or
dec
aad
xchg
shll
sub
push
shll
aaa
ret
xor
inc
aad
mov
mov
jp
insb
into
xchg
push
jno
mov
adc
sarb
add
and
or
repnz
mov
jl
dec
pop
lea
pop
inc
into
gs
xor
push
call
inc
movsb
stos
hlt
in
push
push
into
int
mov
mov
lcall
in
popa
popa
ja
into
addr16
into
pop
int3
rcrl
jmp
mov
icebp
mov
and
adc
dec
dec
lahf
sbb
push
fcoml
fwait
cmp
cwtl
bound
mov
mov
aaa
out
adc
std
mov
pop
inc
or
out
mov
or
ret
sub
cmp
lea
push
mov
inc
jae
in
mov
pusha
inc
jbe
in
scas
mov
push
and
inc
inc
mov
pop
mov
andl
inc
nop
stos
std
sahf
iret
out
sarl
push
cli
bnd
push
subl
or
fcomps
jp
xchg
push
push
gs
popl
and
cmpsl
enter
pop
lods
sar
push
pushf
cmc
fidivrl
adc
and
inc
cltd
orl
and
sub
mov
mov
xchg
scas
adc
jecxz,pn
jmp
arpl
inc
stos
lea
inc
dec
xchg
xor
lds
cld
rcll
add
xor
adc
mov
dec
leave
aam
inc
dec
xchg
enter
icebp
leave
mov
arpl
sbb
pop
or
loope
sub
pop
adc
insl
sub
pushf
dec
je
stc
pushf
add
in
add
in
and
lock
push
aam
cld
sahf
iret
stos
je
sahf
xchg
mov
enter
mov
adc
fnsave
jmp
dec
xor
pop
push
movsl
fildl
lret
js
popa
lea
dec
mov
mov
stos
mov
fistl
icebp
adc
sbb
push
sub
testl
stc
loop
dec
and
jp
or
mov
sbb
lock
roll
push
pusha
sbb
pop
jge
aaa
icebp
jns
aaa
dec
push
iret
test
out
orl
xchg
popa
xchg
xchg
jno
aas
lahf
inc
clc
shll
inc
mov
bound
push
cmpsl
jle
stos
dec
in
lret
repz
data16
aaa
int3
cmp
mov
out
pop
incb
xchg
rcrb
dec
mov
mov
dec
add
shlb
fadds
call
insb
cli
in
clts
sub
mov
adc
lret
add
dec
xorl
cmpsl
cmpsl
ljmp
ds
cmp
xor
pop
ljmp
ror
add
fprem1
add
mov
les
mov
in
mov
push
mov
and
adc
arpl
icebp
in
xor
pop
dec
in
mov
mov
jb
inc
push
mov
add
nop
ret
jbe
test
xor
leave
popa
je
add
adc
ljmp
inc
sub
pusha
aad
and
call
fidivrs
aas
les
jmp
jle
outsl
cmp
outsl
mov
adc
dec
mov
or
sarl
mov
out
imul
daa
mulb
push
and
push
sub
jbe
aas
pcmpeqd
push
idivb
or
inc
stos
aas
mov
push
sbb
cmc
int
pushf
inc
push
ret
roll
lret
push
adc
xor
fdivs
imul
or
push
xchg
mov
jno
rcrb
imul
xchg
sarb
and
out
stos
movsb
and
mov
mov
mov
es
loopne
shll
test
jb
fwait
pop
adc
cmp
add
or
sub
add
jle
add
lret
mov
jmp
push
out
inc
jo
xchg
jo
pop
jbe
ljmp
shrl
mov
jbe
and
nop
push
lea
push
fildll
movsb
cmpsl
dec
adc
jb
scas
ret
pop
push
mov
jl
cmp
and
push
sbb
divl
ds
test
mov
inc
mov
popf
mov
sbb
xlat
sar
call
pop
adc
nop
aad
rcrl
std
fstpl
pushl
inc
inc
xchg
mov
in
sbb
out
mov
sub
inc
push
mov
and
out
cmp
jnp
scas
mov
xor
xchg
xchg
icebp
loope
cs
jns
sbb
and
jbe
or
xorb
movsb
sbb
loope
cs
mov
jns
xchg
rcll
adc
mov
fsubr
dec
pop
sub
mov
repnz
push
jl
test
jecxz
mov
jns
das
inc
xchg
aad
arpl
movsb
xchg
sarb
mov
lahf
enter
sbb
sbb
pop
cmc
arpl
gs
loopne
pop
std
mov
or
mov
push
insb
mov
imul
mov
mov
bound
fbld
or
movsl
mov
mov
mov
sbb
lods
lods
or
or
ja
arpl
sub
in
and
imul
in
pop
fmuls
out
in
sti
cmc
dec
fistpl
xchg
or
inc
movsl
es
mov
dec
sbb
fimuls
xchg
sbb
mov
lods
xchg
pop
xor
js
cli
push
and
cwtl
cld
fidivrs
roll
out
cmp
pop
in
lock
cmp
test
loope
jb
fwait
cltd
or
adc
in
mov
dec
enter
shlb
ficoms
shlb
jns
ret
dec
mov
in
nop
mov
cmp
inc
fistpl
rorl
rcrb
out
xor
or
mov
dec
pop
sbb
xchg
test
sub
push
ljmp
push
or
enter
loopne
imul
mov
cmc
add
nop
mov
adc
call
push
jecxz
jae
addr16
rcr
sbb
pop
clc
and
insb
test
push
fcomi
enter
dec
addr16
adc
mov
sub
je
push
fisubrl
sbb
dec
inc
mov
push
xor
pop
testl
lods
push
loop
or
scas
lods
repnz
out
pop
jns
faddp
mov
inc
jecxz
jns
adc
adc
insl
inc
cmpb
addb
inc
nop
loop
rorl
xor
arpl
dec
scas
mov
xor
pop
rol
adcb
xchg
mov
pop
shl
aas
push
xor
pop
add
mov
sahf
mov
cmpsb
push
aas
add
lret
test
ret
jnp
shlb
or
mov
pop
aaa
popf
add
es
mov
pusha
mov
mov
sbb
movsl
lcall
mov
out
push
push
jbe
xorb
sarl
pop
into
jbe
test
push
sub
cmp
and
dec
hlt
leave
dec
xor
movsb
lret
pop
add
ja
pop
ds
push
adc
outsl
shr
cmp
cwtl
clc
sub
bound
call
dec
mov
jne
xchg
xchg
jl
xor
lock
jo
daa
icebp
arpl
cmc
icebp
inc
imul
loope
pop
cmp
test
clc
adc
adc
scas
cmpsb
add
fistpll
out
lea
mov
imul
pushf
push
addr16
or
call
adc
cld
mov
sub
jmp
enter
fst
addr16
mov
and
sbb
ds
or
test
and
or
into
cli
cmp
xchg
je
scas
cmp
popf
inc
or
lea
popf
iret
sbb
shlb
jl
and
jle
push
push
imul
or
test
xchg
sub
lahf
arpl
mov
or
push
mov
imul
jno
in
and
cmp
mov
xchg
or
push
add
aaa
mov
push
cld
bound
dec
mov
or
push
cmp
es
jmp
int3
sbb
and
out
dec
dec
pusha
ret
push
loopne
test
scas
add
jp
std
add
dec
pop
ss
add
pop
xlat
adc
dec
vshufps
mov
fcmovnbe
push
xchg
and
pusha
sbb
outsb
scas
cmpsl
imul
inc
ljmp
add
in
sub
pushf
outsl
mov
lret
cmc
leave
mov
cld
enter
jmp
stos
adc
cmp
adc
push
mov
cmpsl
push
test
loopne
out
xor
mov
inc
xchg
cld
div
icebp
test
stos
test
jo
jmp
sub
test
inc
int
faddl
in
pop
xor
outsl
push
push
add
or
adc
mov
dec
adc
xchg
stos
cmp
cmp
int3
add
out
xor
insb
cmp
lods
mov
lds
jnp
cmpsb
int
fsubr
jl
fdivrl
imul
pop
je
scas
ja
push
pop
cltd
fildl
pop
xchg
push
hlt
into
mov
sahf
sub
sti
mov
mov
pop
pop
das
cli
bound
or
jp
jo
mov
arpl
fs
fs
insl
mov
out
push
out
mov
cmp
push
jecxz
push
mov
sub
mov
les
notl
test
aad
add
out
dec
into
in
add
push
ljmp
xor
psubd
js
repz
cld
and
data16
stos
push
test
pop
sub
or
call
pop
nop
sub
mov
sbb
jnp
pop
aam
shrb
gs
push
notb
negl
mov
xor
push
xor
and
pop
ljmp
loopne
sarl
mov
sbb
cld
mov
fdivl
cwtl
arpl
fstpl
scas
xchg
push
pop
mov
call
or
push
pop
and
out
xor
xor
popa
or
icebp
push
xlat
dec
xor
mov
bound
adc
xor
popf
enter
cmpsb
push
sti
xor
mov
dec
xor
sbb
add
xchg
xchg
jge
je
add
adc
orl
stos
jns
clc
daa
nop
push
mov
daa
adc
inc
xlat
lods
stos
mov
or
outsb
xlat
jge
add
push
xor
fcoms
cmp
mov
push
add
popa
stos
int3
dec
inc
xor
push
cmp
mov
xchg
out
bound
xchg
adc
insl
pop
iret
imul
adc
das
rcll
arpl
push
aaa
fldenv
push
cli
sub
cmp
inc
pop
pop
adc
mov
jecxz
lock
stos
inc
out
nop
jle
int
xor
adc
adc
jp
or
cli
pop
clc
test
das
inc
lcall
in
cmp
test
test
mov
inc
jbe
sbb
lret
inc
sbbl
imul
jge
mov
stc
dec
mov
test
lods
loopne
cmp
cwtl
loop
test
cmp
and
das
mov
push
enter
es
xchg
mov
arpl
pop
mov
jnp
repnz
out
dec
inc
and
insl
cmp
iret
ret
xor
cmp
daa
scas
adc
mov
insl
add
out
pushaw
add
inc
aaa
xor
jb
dec
negb
es
ja
jle
sub
mov
test
data16
sar
xchg
sub
dec
clc
stc
inc
xchg
xchg
stos
push
mov
jp
dec
lods
cmp
or
mov
je
xchg
jl
aam
xchg
sbb
pop
fidivrs
xchg
js
push
push
in
repnz
setns
stos
sahf
popa
lods
sbb
pusha
xchg
sbb
aam
imul
nop
lret
inc
loopne
ret
adc
xchg
cmp
adc
test
cltd
add
dec
adcl
sub
sahf
cmpsl
push
stos
jae
int
sahf
lret
mov
popf
flds
leave
lahf
add
in
shll
dec
xchg
jb
dec
loop
jnp
xor
inc
jns
ljmp
xchg
data16
dec
idiv
shlb
jb
xchg
stos
pop
mov
or
add
sbb
sub
nop
inc
mov
ret
mov
push
nop
shll
cmpsb
iret
cmp
movsb
inc
into
pop
std
fiaddl
cmp
mov
std
mov
data16
test
xchg
jb
subl
call
loope
addr16
cmp
jne
rcrb
ljmp
mov
jmp
lods
xchg
push
enter
xor
adc
jns
xchg
ja
push
jmp
mov
test
fists
gs
subl
cmp
adc
mov
mov
xchg
push
clc
inc
cmp
pop
lea
add
mov
jo
pop
sub
adc
sti
jo
xchg
iret
lock
scas
outsl
dec
aaa
sub
je
dec
mov
mov
sbb
push
xor
loop
shrb
xor
xor
nop
hlt
jne
cmp
int3
inc
pop
xchg
xchg
push
leave
aam
or
insb
mov
mov
movsl
aam
push
xor
sub
dec
daa
xor
rolb
ljmp
gs
cltd
cmpsb
or
popa
and
ret
mov
xchg
testl
jp
pop
mov
cld
lods
jmp
cmc
push
sar
jo
add
mov
xchg
cmp
movsb
pop
cwtl
cmp
xchg
push
shll
add
icebp
pop
fistl
fmull
icebp
js
loope
cmpsb
xchg
pop
and
cld
das
or
shr
jbe
and
nop
sahf
mov
js
jbe
mov
outsl
mov
cwtl
add
mov
pop
inc
xchg
js
add
cmpsb
or
imul
stc
jae
jl
ret
and
repnz
mov
inc
popa
lret
or
popa
dec
aas
inc
inc
ret
sub
xchg
cmp
inc
popa
mov
jnp
jecxz
push
xchg
stos
iret
xor
sub
in
mov
cmpsb
stos
imul
jp
insl
dec
push
jp
mov
jb
and
xchg
sbb
fimuls
cmpsb
add
sbb
mov
imul
into
mov
loopne
push
pop
inc
mov
aaa
inc
fiadds
mov
sbb
mov
pop
add
push
mov
cli
jl
push
add
mov
neg
cmc
das
fld
jecxz
and
fs
jns
cmpsb
cmc
cli
xchg
jecxz
stc
arpl
xchg
pop
cmp
mov
pusha
jns,pt
or
sbb
pop
in
pop
int3
imul
adc
jg
sbb
cmp
mov
stc
lock
pop
push
repz
inc
mov
inc
out
jo
ss
cmp
inc
mov
mov
xlat
negb
repnz
aaa
popf
roll
test
ret
std
loop
sub
or
dec
aas
out
and
cmp
jmp
cltd
add
cmp
cmp
aad
cwtl
inc
add
jle
mov
mov
pop
addr16
lahf
mov
mov
push
stc
mov
and
test
jb
cwtl
stc
outsl
push
je
inc
sbb
jp
cmc
aam
loope
outsb
shlb
mov
pop
dec
jae
mov
into
aad
fbstp
insl
fisubrs
adc
xor
xor
je
in
addr16
xchg
dec
aas
mov
inc
rcrl
aas
jo
jbe
sub
cmp
sahf
adc
push
dec
cmp
jns
push
push
inc
je
mov
sub
out
maxps
xchg
movsb
add
repnz
scas
and
ja
jmp
hlt
mov
pop
ljmp
xor
pop
push
jbe
mov
mov
jno
insb
lods
mov
xchg
outsb
fisubs
mov
sub
and
andb
mov
stos
call
jg
pop
cmp
cmp
dec
fcmovu
flds
add
xchg
push
add
aaa
out
rcrb
cmp
sub
sbb
jg
int3
rcll
xchg
hlt
test
or
sub
mov
push
xor
mov
mov
mov
adc
fcomip
movsl
ret
cmpsl
inc
push
sbb
cmpsb
push
shrl
mov
cwtl
pop
std
adc
in
in
cli
mov
pop
sbb
outsb
je
jae
add
mov
cmpsl
idivb
and
insb
popa
or
repnz
xchg
xor
xorl
mov
mov
imulb
out
xchg
adc
mov
clc
sbb
sub
int
repnz
aaa
lock
add
mov
push
mov
popl
movsl
and
mov
inc
movsb
sub
jmp
pop
mov
pushf
icebp
sub
pop
sub
jmp
lar
adc
jnp
es
andb
jp
pusha
in
mov
popl
ror
lods
xchg
cmp
dec
push
xchg
jle
jle
mov
sarb
add
xchg
adc
cmp
dec
lea
mov
mov
in
jl
flds
pop
pop
in
pop
sbb
movsl
clc
and
mov
or
lods
mov
outsb
mov
cmpsl
loop
xchg
inc
and
jo
sar
scas
dec
xchg
sub
fidivrs
dec
test
int
sbb
sti
sub
mov
jne
and
enter
int
jb
xor
mov
fldcw
cmp
sub
pop
or
cli
out
cmp
and
xor
mul
lea
adc
dec
stos
mov
popa
lcall
ljmp
into
leave
ss
iretw
dec
aaa
mov
adc
cmp
jg
call
push
loope
adc
ret
jae
adc
aad
int3
subb
xchg
xor
jno
inc
insl
cmc
dec
addl
std
sbb
xor
frstor
pusha
int
inc
jge
sub
mov
ljmp
jno
sub
fstpl
in
sub
push
addr16
mov
push
pop
cwtl
lret
jl
mov
pop
pop
leave
mov
movsl
sbb
mov
push
or
js
leave
scas
or
mov
xor
loop
adc
fstps
pop
or
sbb
lcall
adc
lret
dec
outsb
mov
mov
add
xor
in
stc
cwtl
inc
jae
sub
call
jl
out
test
xlat
in
xchg
jmp
mov
add
dec
sbb
int
mov
adc
nop
pop
repnz
pop
inc
sar
leave
insl
inc
ret
lahf
mov
icebp
fbld
arpl
subb
and
int3
movsl
jo
loop
stos
imul
pop
lret
decb
leave
xor
repz
cmp
dec
xchg
push
cmpsl
test
lahf
dec
push
shlb
cmp
rol
inc
fisttpll
adc
adc
inc
push
pusha
push
sbbb
out
out
in
lods
aas
and
lahf
stos
vpsubq
fcmovnbe
and
lods
push
xchg
or
and
fists
adc
add
mov
push
pop
xchg
mov
test
out
ret
cmp
cmovae
push
jecxz
inc
hlt
pop
jle
mov
sbb
imul
or
pop
jnp
sub
fs
xchg
jns
cmp
jns
inc
inc
inc
adc
cli
jb
jnp
add
jb
xchg
mov
and
inc
dec
sub
pop
mov
sbb
push
mov
push
xchg
insl
and
cli
xor
in
in
xchg
test
add
mov
dec
pushf
movhps
xchg
xor
or
mov
in
ficoms
fisubrs
int
enter
cmp
fs
ss
push
in
incl
rorl
es
fsubs
adc
ficoms
dec
dec
std
adc
mov
adc
test
stos
cmp
out
sarl
push
in
call
rorl
daa
sbb
lret
dec
fcoms
and
cld
cmp
lods
mov
mov
imul
push
cli
pop
adc
mov
repz
cmp
adc
pop
sub
sub
jecxz
push
sub
scas
jecxz
sub
jg
int
xchg
xor
scas
test
fimuls
push
adc
or
test
loop
mov
cmp
xor
push
cmp
out
xor
int3
scas
mov
cwtl
je
data16
lods
aaa
movsl
in
lods
bnd
mov
cwtl
ret
int
jnp
idivb
invd
dec
push
add
ljmp
add
mov
loopne
fiaddl
cmp
shl
dec
lock
std
dec
mov
add
jecxz
push
sbb
cmp
adc
push
aas
inc
movsl
roll
dec
popa
lods
cli
es
and
xchg
imul
push
mov
cmc
mov
std
pop
ret
pop
test
fdivrl
adc
scas
ret
mov
xor
sahf
mov
imul
or
imul
dec
adc
js
push
call
mov
pop
and
push
out
adc
rolb
add
out
mov
cltd
fnstsw
mov
sarl
outsb
jl
mov
mov
xlat
leave
clc
dec
adcb
xchg
test
or
mov
xchg
and
imul
lahf
jl
and
inc
pop
xchg
js
cmp
outsb
mov
lret
insb
or
data16
xor
lock
adc
jb
inc
adc
xchg
cmpsl
add
mov
xchg
push
pop
dec
xor
stos
or
cmp
or
push
xchg
xor
xor
es
add
rorl
xor
add
shr
mov
mov
cmp
cmp
cmpsl
mov
dec
jns
or
mov
or
icebp
or
mov
push
imul
cmp
negl
call
push
mov
cmp
out
push
scas
mov
mov
ss
testl
js
jo
pop
popf
mov
mov
hlt
decl
push
repnz
or
shrb
add
cwtl
mov
mov
mov
je
mov
or
add
mov
std
xlat
adc
cwtl
dec
movsb
lea
bound
loope
mov
icebp
mov
lea
push
mov
xlat
sbbb
cmp
bound
cli
pusha
jae
or
cli
leave
push
fstpt
icebp
outsb
add
cmc
pop
outsb
pusha
xor
int
adc
sbb
lcall
gs
xchg
inc
inc
cmp
xor
int3
xchg
idivb
rol
aas
out
inc
rcll
call
lods
dec
shl
into
shrb
cmp
pop
jecxz
test
mov
adc
pop
inc
cli
jge
sub
addr16
push
jge
push
popa
mov
daa
fistps
enter
lds
rcl
fdivrs
fdivl
rolb
loop
aad
insb
rclb
mov
test
shll
pop
ret
pop
sub
dec
mov
out
push
rcl
and
adc
mov
or
and
or
xchg
lret
push
mov
sub
hlt
cmpsl
xchg
cld
mov
mov
pop
adc
subb
add
rol
xlat
jnp
sub
and
loope
cmp
jbe
pop
scas
xor
pushf
loop
adc
mov
fcomip
ja
data16
sahf
push
pop
adc
sbb
sti
enter
dec
leave
mov
idiv
repnz
repnz
or
divb
push
repz
mov
or
add
mov
sbb
outsb
outsb
mov
das
stc
adc
js
mov
into
pop
out
sbb
xchg
int3
lods
mov
push
rcr
das
xchg
pop
sub
add
les
cli
inc
in
idiv
jno
xor
xchg
movsb
ficoms
int
adc
mov
test
int
sahf
cld
fwait
insl
loop
pop
mov
adc
roll
ljmp
rcll
mov
jbe
jmp
dec
inc
sbb
popf
repnz
clc
fdiv
in
jecxz
popf
sbb
or
jb
jne
shrb
dec
add
ds
orl
add
jmp
and
jnp
adc
mov
dec
repz
xor
mov
cmp
outsb
dec
lret
or
cmp
jo
or
sub
mov
int3
sub
cli
jnp
rclb
decl
lahf
sahf
lock
fbld
imul
mov
loop
out
jge
pop
inc
add
outsb
out
mov
lret
mov
test
cmp
stos
sbb
jecxz
inc
mov
mov
fs
in
add
ds
int
data16
pop
cmp
fldcw
fcompl
pop
std
sar
loope
lods
jmp
outsl
cmp
pop
shll
mov
hlt
pop
xor
ljmp
pusha
test
loope
movsl
les
enter
int
cmp
push
data16
fbld
ret
mov
jo
xorb
dec
sub
adc
xor
lock
ja
pop
out
lods
inc
das
clc
div
mov
dec
mov
xchg
mov
je
sbb
andl
in
mov
and
jmp
rclb
pop
jbe
movl
imul
xchg
xchg
xchg
sbb
ja
xor
sahf
cmp
jne
xchg
or
pop
adcl
pop
xchg
xor
jle
scas
xchg
subl
mov
add
addr16
pop
pusha
mov
imul
fidivl
and
push
jge
jmp
jg
insl
out
jecxz
xchg
outsb
inc
xchg
inc
jge
fadds
mov
ret
or
jmp
idivb
lcall
push
add
sbb
fnstenv
popa
scas
pushf
out
sti
dec
testl
and
jmp
sti
adc
or
add
shl
pop
ja
push
xchg
leave
rcl
jo
xchg
mov
outsl
ds
stos
mov
rcrl
in
test
push
insb
int3
mov
sub
xor
or
pop
jmp
inc
lret
and
push
pop
das
pop
sbb
xor
repnz
mov
loopne
test
jo
mov
pop
stos
leave
cwtl
pop
lods
adc
aas
ljmp
cmp
add
xor
cltd
shrb
outsb
repnz
iret
mov
int
cmp
mov
into
insl
pop
or
ds
lods
stos
bound
pop
das
loopne
cmp
aad
nop
sti
lcall
shlb
pop
testl
jg
mov
jns
scas
repnz
sti
mov
cltd
or
lds
in
and
mov
and
repnz
pop
adc
xchg
outsl
fiadds
js
fistps
jno
es
or
cli
pop
adc
dec
dec
jge
sti
cwtl
out
sub
into
inc
lcall
pop
fistps
dec
jmp
cmpb
fwait
shr
sbb
dec
dec
insl
push
mov
sub
dec
stos
and
adc
inc
and
mov
fcmovu
enter
mov
xchg
mov
mov
ret
fs
fsubrp
js
pop
call
and
fsubs
addr16
repz
cs
cwtl
cmp
adc
or
shr
rcll
mov
scas
add
mov
fdivl
xchg
cmp
js
push
dec
push
cmc
shrb
mov
inc
and
push
insl
jbe
adc
mov
es
sbb
and
iret
jae
sbb
adc
subl
pop
js
push
bound
sahf
jp
mov
inc
cmp
xor
movsl
dec
mov
sub
jbe
pop
adc
mov
mov
xor
cmp
iret
popl
push
lea
gs
pop
pushl
sti
push
addr16
dec
test
insb
and
cmp
mov
cmp
hlt
push
push
fdivr
popf
loope
adc
repnz
lds
fnsave
stos
mov
in
mov
jecxz
subl
aaa
sbb
loope
jnp
popf
mov
rcrl
bound
jne
fldenv
js
sahf
sbb
and
sub
xchg
in
dec
sar
mov
shll
leave
pusha
or
and
add
jae
dec
cmp
daa
sub
xchg
lret
xchg
push
or
cmpl
pop
add
rcrb
aam
mov
stos
add
out
call
mov
fmul
aam
mov
lods
cltd
repnz
jb
outsl
xchg
pusha
mov
dec
rcrb
and
stos
jae
push
loope
js
push
jae
into
and
sub
lret
and
iret
xchg
stos
repz
shl
pop
mov
dec
adc
inc
insl
mov
cli
xor
call
pop
out
jb
dec
adc
inc
and
js
xchg
cwtl
push
shll
mov
test
pop
call
in
mov
xlat
dec
mov
mov
jmp
fsubr
hlt
test
jno
adcl
sub
jns
xchg
mov
xchg
ljmp
cld
push
fdivl
or
cmp
cli
push
push
and
jmp
adc
inc
icebp
lods
insb
pop
xor
xchg
push
dec
mov
sub
popl
mov
les
pop
outsl
adcl
out
mov
cmp
bound
mov
add
mov
dec
inc
xchg
dec
rolb
sub
fsub
lret
add
mov
jnp
xchg
test
insl
add
in
enter
push
inc
test
stos
add
pop
loopne
add
pushf
pop
roll
sbb
pop
sbbl
in
fisubs
sub
addr16
mov
mov
dec
push
jnp
mov
sub
and
jecxz
mov
cs
movsl
mov
movhps
add
outsb
push
cwtl
pusha
xchg
leave
stos
mov
ds
mov
push
jns
jle
fists
loopnew
es
loope
pop
xor
xchg
push
shll
test
mov
or
out
int
popf
std
scas
or
xchg
xchg
mov
mov
popa
inc
pop
das
mov
inc
sbb
out
pop
pop
jns
jg
push
nop
mov
stos
cwtl
push
scas
mov
gs
mov
mov
popf
adc
jo
xchg
sti
dec
mov
call
icebp
add
adc
enter
sub
and
lcall
xchg
out
fwait
pop
test
popa
push
bound
cmp
mov
fcoml
fstpt
push
fisttps
xor
test
inc
xchg
iret
jecxz
jo
sarl
jge
outsl
add
icebp
or
out
sub
insb
ret
xorl
push
adc
pop
fbstp
gs
cltd
scas
or
jns
adc
push
dec
in
ds
icebp
fildll
sbb
and
out
mov
pop
jb
outsb
dec
xor
lret
push
dec
mov
xlat
jle
add
mov
shrd
sub
or
enter
lock
sub
inc
loope
movsl
dec
mov
repz
jns
in
mov
add
jge
xor
test
and
int3
mov
in
cmp
dec
js
sub
daa
jl
sub
pushf
push
mov
push
loop
adc
xor
out
sub
or
aam
jp
mov
mov
lock
call
fisttpll
adc
fs
bound
inc
add
pop
out
out
scas
ljmp
rorb
lahf
popf
testl
clc
rorl
pop
mov
gs
adc
mov
lret
cwtl
lcall
pop
movsl
rclb
movsl
mov
pushf
mov
insb
faddl
xchg
cmp
pop
add
cmp
cmp
lods
push
pop
jns
shr
sub
mov
jmp
test
mov
or
pop
ss
mov
xor
jb
jbe
dec
stos
jg
mov
addr16
mov
scas
jl
test
sbb
aad
push
std
icebp
aaa
lret
addr16
ds
and
scas
mov
mov
mov
subl
or
sbb
enter
pop
dec
mov
push
lock
leave
in
xor
pop
push
rorl
jg
loope
jne
jo
js
xchg
cli
mov
push
pop
rclb
ss
push
sbb
lret
xor
ss
inc
push
mov
je
xor
je
cmp
dec
lahf
sbb
lahf
icebp
mov
outsb
jo
adc
dec
lods
fnstcw
cmp
xchg
lret
or
jge
sbb
outsl
push
pop
jl
adc
sub
jbe
out
adc
jmp
aas
jl
mov
add
and
adc
stos
mov
push
lds
cld
sbb
push
out
ljmp
dec
pop
je
icebp
fimuls
inc
dec
lods
loopne
lret
sbb
push
fbstp
xchg
cmp
pushf
fs
in
sti
sub
mov
pop
shr
and
sahf
jae
out
mov
insb
outsb
add
sbb
push
dec
mov
and
or
movsb
rclb
xchg
xor
scas
inc
adc
test
mov
leave
fs
lods
add
outsb
cmp
cli
jo
popf
pop
nop
add
and
rorb
push
je
jnp
dec
jmp
inc
sbb
mov
iret
and
ret
mov
xor
lcall
inc
ljmp
dec
ds
insl
mov
les
flds
push
mov
fcompl
aad
cmp
in
addr16
repz
mov
cmp
add
push
js
inc
movsb
cmp
cmp
push
push
out
mov
sub
adc
push
mov
lcall
dec
mov
popf
mov
mov
sub
stos
push
mov
xchg
flds
repz
orb
sbb
stos
mov
mov
push
push
lods
sub
add
subl
leave
rcll
pop
add
mov
inc
push
adc
xor
rorl
imul
jae
xor
inc
and
push
push
out
loop
mov
and
data16
mov
icebp
and
xor
mov
mov
xor
lret
jge
sbb
sub
jmp
sbb
shll
in
outsb
fists
inc
jg
aad
iret
ret
test
mov
jg
dec
test
imul
das
add
pop
lea
add
mov
or
ja
test
jg
adc
mov
aad
test
xor
cmp
push
push
cmpsb
inc
rorb
mov
or
or
xchg
lods
push
or
mov
push
sub
dec
jo
setne
ss
das
loope
adc
mov
or
cmp
cs
cmpsb
insb
sub
pop
call
fmull
push
lods
push
adc
std
or
push
cli
stos
sbb
pushl
fidivrl
movsl
loopne
and
cmovle
shr
pushl
cmp
stc
jmp
arpl
aas
leave
test
js
xor
pop
enter
mov
xor
mov
es
int
xchg
mov
mov
jge
sub
sbb
xchg
stc
adc
push
arpl
and
push
mov
jg
cmc
mov
mov
jb
sbb
mov
out
sub
sbb
sub
ror
mov
in
ds
cmpsl
aaa
adc
lds
bnd
and
int
call
or
lock
sbb
xor
mov
cmp
inc
aaa
jl
test
mov
mov
dec
dec
sbb
mov
jns
adc
jbe
jl
lcall
mov
pushf
jbe
adc
cmp
push
jo
cwtl
ret
jg
loopne
push
inc
jnp
data16
lds
in
add
ss
and
pushf
movsb
ret
test
sub
outsb
sbb
adc
push
mov
insl
jns
outsb
mov
mov
stos
pop
es
test
cmp
sub
data16
stos
xchg
adc
push
add
jbe
cltd
sub
xchg
cmp
add
cmp
movsl
jne
fstl
ja
sub
popa
push
or
pop
or
jp
xor
inc
loopne
and
push
jle
jno
dec
push
push
jmp
ss
pop
popf
je
je
in
pop
or
dec
jo
int3
inc
xor
jbe
push
adc
xor
enter
mov
pop
jmp
jg
lahf
jle
cmp
inc
cltd
mov
iret
push
xchg
sub
sbb
movntq
jle
jle
jo
out
or
add
ss
arpl
pop
cmp
jb
xlat
lahf
mov
cmc
insb
jp
push
adc
loope
hlt
leave
jp
inc
mov
add
scas
je
jmp
decb
pop
jl
mov
pop
push
sbb
push
movsl
mov
mulb
xchg
mov
push
ret
cmpsl
or
lock
dec
lods
in
inc
ficomps
jbe
pop
push
pop
push
pop
xor
or
inc
sarb
cs
ljmp
push
add
sub
push
sub
dec
out
iret
xor
jmp
aaa
jnp
xor
scas
fdiv
hlt
loope
dec
dec
aad
test
loopne
sbb
je
pushf
push
jne
lcall
lock
imul
mov
in
and
fimuls
push
mov
sti
cltd
cmc
lds
shll
aad
xor
ffreep
in
lcall
or
nop
test
pop
fmuls
inc
fnsave
sahf
stos
cmc
aaa
outsb
or
cmc
ret
scas
imul
and
or
das
aam
xor
mov
fwait
scas
xchg
imul
shlb
cmpsb
xchg
das
test
clc
push
push
pop
std
test
jne
lcall
popf
push
pop
test
pop
jbe
lcall
ljmp
sub
mov
jno
in
ret
loopne
sub
test
dec
dec
setnp
or
loopne
lcall
cmp
std
sub
jmp
add
ficompl
adc
xchg
mov
insb
mov
dec
test
pop
cmp
loop
icebp
pop
daa
push
out
je
mov
dec
mov
cs
jmp
ret
out
mov
xchg
xor
or
out
ret
das
movsb
sub
mov
fucomi
ss
aam
nop
es
mov
add
mov
into
les
xchg
jecxz
dec
and
test
or
icebp
lea
push
xchg
add
lcall
adc
mulb
and
out
pop
mov
inc
or
outsl
mov
in
add
stos
ss
or
adc
xchg
fstpl
cmp
js
and
pop
dec
pushf
cs
fisttpll
in
jle
outsb
rcll
sti
and
pop
xor
aad
sbb
push
cltd
jne
xor
mov
repz
fbld
mov
push
jl
leave
inc
xor
sbbl
dec
addr16
jnp
inc
adc
pop
xchg
aas
ret
fimull
mov
jg
insl
xchg
insl
imul
int
mov
mov
and
adc
cmpsl
stos
shlb
fistl
and
jno
mov
dec
stos
lods
xchg
mov
pop
jl
inc
xchg
ret
in
sub
push
adc
addl
fisubrs
mov
div
shr
sub
and
out
jnp
andl
dec
mov
in
jl
mov
xor
cli
push
pop
sbb
out
fidivl
lods
mov
outsb
das
push
inc
inc
into
push
jae
sbb
addb
lds
mov
lods
insb
xlat
cltd
std
orb
sbb
es
lods
xchg
adc
lcall
xor
nop
cmp
andb
jl
mov
cmp
gs
adc
ja
fsubs
ret
inc
mov
push
jb
lcall
outsb
cmp
adc
inc
mov
ret
and
mov
dec
push
adc
loop
cmpsb
sbb
notb
jbe
in
hlt
lods
pop
mov
inc
mov
pop
sbb
dec
loopne
cltd
jno
push
sarl
sbb
lock
jmp
out
push
ret
xchg
mov
jecxz
xchg
repz
push
cmp
in
pop
and
pop
and
cmc
inc
cmp
dec
sbb
xchg
add
ds
mov
add
jb
jmp
cmp
dec
orl
incb
leave
jl
scas
sub
lret
and
mov
xor
icebp
das
stos
jp
fmuls
lds
dec
sbb
cmp
mov
scas
lret
lahf
mov
or
ret
out
fstl
xor
mov
ret
push
xor
push
cmp
or
xor
ds
mov
cmpsb
lods
jl
xchg
shlb
push
mov
shll
mov
outsb
sbb
loop
icebp
push
and
pop
lcall
add
xlat
inc
movsl
and
incb
call
das
mov
sbb
jb
xor
pop
test
add
push
lcall
mov
fisubl
xchg
mov
js
add
pop
adc
mov
or
pop
add
pop
scas
dec
mov
pop
imull
adc
adc
mov
sub
and
mov
jge
cmp
pop
icebp
pop
pop
mul
stc
aas
imul
xchg
lock
lds
push
shll
add
repz
lcall
mov
jecxz
mov
aaa
mov
fld
push
lahf
outsl
push
in
mov
mov
cs
insb
std
orl
in
adc
sub
sbb
stos
fisubs
xor
inc
mov
test
or
push
mov
inc
bound
or
stos
mov
stc
lret
dec
xchg
inc
sub
inc
push
mov
or
fstpl
xchg
sbb
jle
xor
movups
cmp
scas
lea
jns
mov
xchg
pop
push
xor
out
add
mov
cmpsl
lock
jle
sub
or
and
cmp
adc
inc
les
outsl
add
xchg
and
mov
mov
push
pop
dec
movsb
xor
and
std
cli
push
add
mov
mov
push
adc
repz
arpl
loopne
hlt
loop
fwait
mov
addl
push
mov
hlt
sub
test
daa
adc
adcl
adc
adc
dec
lds
xor
ss
jnp
aad
mov
add
data16
test
dec
pop
outsl
insl
lret
push
mov
xor
out
ds
out
int3
fdivp
mov
ds
in
dec
jno
jbe
jle
xchg
mov
sub
lcall
js
ja
sbb
fdivrl
pop
or
sbb
cmpsb
rcll
cltd
xor
rcl
imul
rorl
jae
xor
sbb
out
dec
shll
loop,pn
andb
loopne
xor
rcll
lret
inc
in
pop
cmpsl
push
dec
pop
icebp
jo
mov
cld
test
sub
cs
pop
mov
xchg
iret
stos
push
out
mov
enter
sub
push
fcomps
mov
jb
xchg
push
pop
inc
push
enter
ret
dec
insl
pop
and
cmp
mov
push
pop
loopne
movsb
mov
arpl
bnd
push
stc
mov
adc
push
mov
sahf
sbb
ds
push
xchg
out
aaa
lret
pop
mov
leave
push
sarb
outsl
push
mov
ss
mov
xchg
pop
mov
outsb
testl
movsl
cltd
cmpsl
mov
push
sbb
dec
cmp
mov
aaa
mov
pop
or
mov
cmp
inc
dec
xchg
repz
dec
jno
push
stos
jmp
repnz
and
push
pop
lea
add
jecxz
jge
cmc
and
inc
dec
pusha
ds
test
adc
mov
xor
mov
jb
mov
test
int3
stos
xor
lret
adc
dec
sti
mov
xchg
es
rolb
inc
mov
movsb
js
adc
jle
sbb
loopne
lret
insl
icebp
cmpsb
sub
ret
movsb
rclb
cmp
sbb
sub
imulb
testl
xchg
enter
daa
jmp
cmp
mov
pop
pop
pusha
aad
mov
and
lods
jb
out
adc
mov
mov
add
shlb
inc
lret
cmp
repz
int
xchg
ja
mov
daa
inc
mov
sahf
add
popf
stos
or
xor
rcl
lods
out
add
cmp
scas
mov
and
dec
lods
pusha
pop
js
enter
inc
cld
dec
cmp
cmp
cld
addr16
imul
inc
mov
cwtl
in
insl
xor
sbb
mov
jo
mov
jge
adc
pop
in
inc
cmp
outsl
orb
push
nop
dec
fidivs
inc
dec
pop
imulb
xchg
data16
cltd
mov
jg
call
pop
xchg
adc
sub
das
add
push
xchg
adc
jo
shr
pop
fimuls
xchg
mov
sbb
inc
or
and
int3
movsb
ret
popf
pop
dec
sub
scas
cmp
add
xlat
lods
lret
or
sub
decb
out
inc
int
test
outsb
mov
scas
xlat
sbb
stos
out
icebp
icebp
mov
mov
xor
dec
ret
mov
hlt
lea
push
gs
or
and
xchg
daa
in
stos
and
int3
cs
add
xchg
add
mov
xchg
outsb
push
jne
clc
adc
cli
adc
fsub
mov
add
cwtl
or
sub
push
int
add
and
std
sbb
aam
dec
ret
outsl
cwtl
aam
xchg
leave
sub
jmp
mov
lcall
imul
mov
mov
mov
fwait
rclb
mov
aad
lcall
test
inc
fisttpl
pop
jle
dec
push
xchg
pop
and
les
loop
pop
repz
cld
dec
dec
mov
push
adc
adc
aad
pop
adc
subl
lret
loopne
hlt
or
add
sub
lock
sbb
xchg
cltd
adc
test
dec
push
add
sbb
ds
adc
jae
mov
divl
or
sbbb
pop
fadds
xchg
iret
pop
repz
ss
dec
leave
cltd
mov
imulb
aaa
cmp
adc
movsl
outsb
or
in
ret
popa
mov
inc
shrb
icebp
and
sbb
push
mov
or
mov
inc
mov
sub
mov
add
and
xor
cmpsl
pop
sbb
in
ljmp
daa
pop
dec
enter
dec
mov
and
xchg
sub
sahf
movsl
hlt
pushf
add
aas
sub
out
dec
lret
stos
orb
cmpb
inc
inc
fwait
repnz
add
sahf
movsb
in
outsb
or
push
test
push
aam
push
pop
test
mov
push
popf
imul
test
aaa
into
ficomps
sbb
sti
xor
xor
subb
clc
test
into
pop
xor
fiadds
gs
mov
cmpsb
fs
dec
push
xchg
int
pop
cmp
imul
aaa
push
cli
push
inc
lret
filds
mov
rorb
jl
push
movsb
in
pop
lods
mov
add
mov
xchg
xor
inc
rcrl
outsb
rep
js
test
xor
jb
inc
ret
and
lret
arpl
add
aaa
testl
sub
ds
pop
jbe
dec
loopne
mov
mov
jp
pop
fistpll
dec
ss
and
loop
push
sbb
pop
push
xchg
push
push
dec
out
fwait
iret
loopne
je
je
push
fmull
jns
mov
sbbl
icebp
lret
jge
sbb
je
shr
imul
shl
loop
lahf
dec
dec
es
ret
cli
mov
push
pop
xor
mov
xor
push
repnz
mov
xor
ja
cmp
dec
jp
iret
push
fistpl
push
and
jo
sub
inc
xchg
lock
push
hlt
xor
adc
and
out
insb
test
or
outsb
cmp
push
ljmp
cld
mov
xchg
jl
push
adc
mov
cmp
xchg
filds
xor
adc
and
out
jge
xchg
cmp
fisttpl
loop
sar
push
pop
mov
outsl
mov
in
push
add
in
insb
or
test
orw
in
xchg
and
sbb
lods
call
ret
test
dec
rol
adc
pusha
jle
sbb
lahf
adc
fmull
mov
mov
adc
xor
mov
outsl
addl
push
jns
sti
cmpsb
xorl
mov
test
enter
aaa
jno
push
xchg
add
mov
sbb
pusha
lods
outsl
add
and
push
and
jle
fbld
call
inc
cmp
sub
cli
xchg
ficomps
stos
inc
aad
in
push
add
imulb
xor
in
in
push
ja
jp
pop
mov
imul
pop
clc
mov
out
mov
mov
adc
es
pop
cmp
sbb
jecxz
jge
lods
cmp
cli
push
inc
out
out
jnp
xchg
inc
cli
mov
in
pushf
dec
mov
out
je
dec
orb
xchg
adc
sbb
mov
fistpll
jmp
enter
lret
imul
test
lcall
fdivp
push
sbb
xchg
call
jae
jmp
cmp
iret
mov
cmpsb
add
cmp
mov
or
cmp
cmp
lock
popa
adc
adc
or
sarl
sub
cwtl
outsb
xor
mov
lea
loop,pn
negb
add
adc
fcmovu
call
in
push
xchg
les
lahf
out
ds
jmp
out
mov
xchg
or
adc
movsb
sbb
outsb
out
cmp
or
pusha
and
dec
xchg
jp
ja
mov
lret
jg
out
cmpl
stos
lahf
insb
push
in
adc
pushf
lock
adc
movsb
mov
icebp
or
leave
and
lods
rclb
pop
or
les
iret
cmpsb
jg
test
inc
sbb
imul
lea
cmp
jmpw
aam
lret
mov
add
stc
mov
xchg
daa
push
lcall
mov
mov
stos
mov
inc
and
cwtl
decl
gs
pop
sbbl
xor
xor
jnp
fsubs
loope
mov
mov
pushl
lret
add
filds
adc
imul
jmp
mov
xor
test
xchg
adc
cmc
pop
sub
add
pop
nop
mov
nop
inc
or
sub
and
add
out
and
icebp
addb
lods
sahf
adc
cmc
bound
push
ljmp
adc
mov
and
inc
js
push
int3
fninit
jo
dec
dec
movsb
shl
inc
ja
in
adcb
xor
rol
movsl
dec
sti
jns
fwait
orl
mov
jg
loope
ret
pop
adcl
daa
and
pop
jle
dec
dec
fcompp
loopne
pop
into
pushf
pop
and
or
push
inc
sub
mov
and
add
sbbl
stc
lock
and
stc
das
xor
ret
cmc
fistpll
mov
xchg
xchg
sub
mov
icebp
enter
push
push
add
je
data16
fmul
add
out
pop
add
daa
fsubs
add
cmpsl
jne
cmp
jecxz,pt
jp
cli
push
hlt
xchg
sarb
mov
roll
xor
js
adc
mov
xor
cmp
sbb
add
sub
push
dec
fwait
push
adc
add
sbb
mov
lcall
loop
mov
test
out
jno
dec
adc
dec
std
test
int
cmp
sub
jno
jnp
fiaddl
lcall
xchg
push
sub
dec
ret
test
and
data16
out
add
repz
adc
add
adc
push
add
mov
lods
cmpsb
aad
ds
pop
lahf
cmp
loope
scas
data16
xchg
adc
jnp
sbbl
call
stos
iret
mov
sbb
jecxz
adc
sub
pop
ds
cmp
mov
addb
or
popa
fmul
mov
cmp
mov
adc
or
adc
pushf
xlat
repz
out
test
leave
mov
scas
or
loopne
ss
in
cld
mov
cmp
pop
dec
ds
or
loop
inc
pop
popf
xor
cmp
jne
push
mov
cmp
cmp
xchg
xchg
mov
out
mov
sbb
xchg
fimuls
add
aaa
dec
ret
shl
mov
mov
xchg
jmp
ja
dec
inc
clc
dec
xchg
mov
fisttps
or
popa
or
or
daa
sbb
adc
out
push
xchg
push
outsb
test
popa
pop
adc
movsb
int
ljmp
push
scas
mov
icebp
cmpsl
cmp
mov
cmpsl
mov
rorl
adc
xor
or
mov
sub
icebp
popa
pop
jno
cltd
pusha
das
bound
sub
and
out
mov
xchg
push
mov
lods
mov
fmul
ljmp
push
loope
test
dec
xor
shlb
std
cli
push
hlt
sarl
pusha
sti
lea
jbe
mov
jecxz
mov
pop
cmp
repz
mov
adc
into
sub
adc
pop
daa
and
sbbl
dec
ljmp
pop
push
cmp
aam
xchg
loope
clc
mov
cltd
push
int
popf
stc
test
xchg
outsl
adc
adc
imul
mov
mov
jbe
mov
cmp
and
mov
outsl
outsb
out
xor
out
jns
or
test
fs
lds
push
push
test
and
outsb
ret
fcoml
lret
jmp
mov
mov
xchg
cli
outsl
push
fsts
es
sbb
mov
loope
ja
pop
jmp
push
out
idivb
inc
xor
jmp
neg
fidivl
pusha
out
dec
stc
sbb
ja
push
scas
movsb
aam
or
mov
pop
bound
mov
addb
pop
ss
mov
jns
in
push
jnp,pt
loopne
cli
imul
out
pop
lret
fucomi
stc
mov
dec
cltd
jbe
pop
lahf
xor
int
push
loopne
out
mov
jnp
test
mov
icebp
cmpsl
scas
in
sub
divb
xchg
lods
fiaddl
xor
jne
movsl
and
sub
test
stos
ret
stc
mov
cmp
mov
outsl
sbb
call
push
fisttpll
inc
push
mov
mov
or
jno
fidivs
pop
pop
adc
out
inc
loopne
sub
sub
sbb
imul
mov
das
inc
xchg
inc
xchg
cmp
and
push
in
enter
mov
jnp
dec
lea
jnp
adc
stc
inc
leave
inc
or
adc
sub
sbb
in
jp
ss
xchg
test
inc
or
inc
in
nop
dec
and
push
jns
push
xor
sbb
pop
push
mov
xchg
ljmp
inc
xor
enter
lcall
push
cmp
xchg
imul
out
pop
push
xchg
jle
and
popa
nop
jle
cmp
or
inc
dec
add
sti
inc
pop
out
jns
mov
fdivrl
mov
in
push
out
pop
sbb
in
das
or
imul
mov
xor
idiv
mov
mov
stos
add
test
les
sbbl
cmp
add
push
test
mov
cmp
or
push
jle
outsl
mov
int
je
ljmp
ds
popf
xchg
sahf
jo
std
inc
shl
hlt
mov
mov
scas
fstpl
mov
je
decb
push
and
jnp
adc
data16
push
or
dec
in
repz
insb
ds
jno
jmp
xor
add
push
sbb
lcall
sub
aas
lock
orb
cwtl
insb
test
iret
pop
push
insl
lret
cmp
gs
sbbl
je
jnp
push
bound
jnp
std
cmpsb
push
fmuls
mov
test
movsb
jmp
sarb
sbb
ljmp
shl
aad
jmp
push
fstpt
cmpsl
jae
repz
pop
imul
js
sahf
add
push
jl
dec
mov
xor
cmp
in
aad
test
push
imull
push
shrl
pop
mov
adc
mov
cld
arpl
pop
xor
push
mov
adc
cld
bound
stos
out
fcom
imul
scas
jne
rorl
inc
popf
loopne
dec
mov
in
lcall
inc
xor
jl,pn
sub
pop
pop
add
pop
dec
orl
std
out
fnsave
mov
cs
pop
and
dec
mov
flds
mov
xchg
fwait
iret
mov
push
enter
pop
pop
test
daa
imul
ficoms
mov
insb
lods
les
sbb
loope
dec
xchg
sub
adc
push
push
stos
sbb
jo
mov
scas
push
fiadds
pop
inc
aad
mov
hlt
outsb
les
fcomp
fs
stc
push
adc
adc
mov
inc
pusha
jns
adc
mov
push
cmpsb
and
mov
cmpsl
pop
insl
dec
pop
and
scas
pop
xchg
mov
mov
std
stc
pop
sbb
scas
pop
pop
mov
add
mov
mov
mull
test
mov
cmp
xchg
inc
nop
std
loope
cmpsl
push
shlb
mov
loop
test
pop
jns
push
outsl
mov
jle
mov
lods
sbb
ret
mov
sbb
popf
fdiv
add
lret
fnstcw
cltd
xchg
std
popa
fstpl
icebp
xchg
insb
or
fsts
lods
and
and
sahf
add
jo
aas
rcl
jae
jne
cltd
nop
jnp
mov
ja
out
into
imulb
jmp
aaa
or
sub
adc
jns
push
sbb
jg
lahf
jg
fistpl
cmp
pop
xor
int3
stos
mov
sbb
call
mov
mov
in
pop
icebp
sub
and
jmp
insl
mov
push
xor
popa
adc
cmp
frstor
mov
mov
fistpll
lock
out
out
ss
inc
fcmovb
sub
shrl
mov
pop
je
pop
cld
sbb
cmp
xor
movsb
push
das
adc
pop
cmpsb
int3
cmp
fidivrs
xor
sub
xchg
adc
mov
or
jnp
push
push
cmpl
mov
mov
dec
xchg
mov
pushf
inc
into
adc
pop
or
aam
popf
jecxz
mov
sbb
faddp
inc
sbb
push
mov
lahf
sub
movq
xor
movb
pop
fcmove
cltd
mov
out
push
pushf
jo
rcrl
push
mov
jne
sbb
mov
push
icebp
jb
xchg
and
scas
dec
pushf
int3
push
daa
les
mov
inc
testl
push
shrb
rcl
jg
dec
aam
push
gs
in
hlt
dec
adc
sbb
addl
xchg
inc
out
outsb
pop
aas
sub
out
fsubrl
or
pop
popa
xor
mov
jle
fmulp
pop
cmc
movsb
popa
imul
ret
fiaddl
mov
add
mov
daa
pop
xchg
call
in
test
mov
into
je
sahf
push
and
jns
sbb
into
xchg
cli
push
fcmove
xor
pop
sarb
push
nop
das
pop
dec
mov
sbb
out
push
and
sahf
mov
dec
pop
or
das
scas
jmp
jle
std
push
loopne
adc
mov
lret
pop
and
jmp
lea
lea
aaa
insl
adc
ljmp
pop
add
sub
push
fmuls
movsl
pop
lods
popf
fucomip
jecxz
stos
loopne
pushf
popf
xchg
fs
xchg
ljmp
add
mov
jbe
mov
repz
pop
mov
add
cmp
push
pop
jmp
xchg
es
pop
std
xor
adc
push
popf
jnp
adc
rol
in
pop
les
and
mov
push
dec
cmpsb
xlat
test
les
pop
std
sbb
and
ret
roll
mov
es
nop
pop
inc
imul
jns
rclb
inc
push
repz
imul
mov
mov
xor
jae
not
je
movsl
xchg
xchg
lods
aaa
loope
test
sub
or
sub
rclb
xor
rep
lods
icebp
xchg
ss
jb
shlb
pushf
jl
adc
mov
movsb
cmpsl
mov
xor
push
adc
add
add
out
andb
or
xchg
sub
mov
or
sub
lods
sbb
sbb
add
push
inc
test
imul
pop
popf
int
insb
xorl
cmpb
mov
sub
ret
in
btc
in
mov
jne
jmp
insl
mov
xor
push
xor
push
mov
mov
scas
insl
mov
or
movsb
cmc
sub
sbb
gs
gs
xchg
mov
lock
push
dec
pop
push
xchg
orw
sub
inc
jecxz
push
mov
scas
add
cmpsl
outsb
popf
cmp
pop
pop
mov
inc
fs
es
mov
jge
fildl
dec
jb
mov
xchg
mov
and
negl
mov
mov
lods
mov
pop
aas
mov
and
test
lods
push
int
std
jne
out
gs
mov
xor
mov
ja
mov
iret
addr16
cmp
stos
in
adc
cmp
add
fisttps
add
testl
out
mov
sbb
sahf
mov
scas
addr16
adc
mov
les
cmp
jbe
dec
sbb
repnz
lods
pop
dec
daa
xchg
cmc
outsl
inc
in
cmpsb
jg
jg
aam
dec
sbb
in
aam
mov
push
fistps
cmc
inc
jne
ret
subl
popa
mulb
xchg
inc
rcl
sub
sub
sub
adc
movsl
or
les
mov
adc
inc
mov
pop
push
cmp
xor
or
pop
mov
and
push
aas
cmc
xchg
sbb
inc
in
bound
addl
mov
cmc
iret
lock
xchg
testb
mov
adc
fcmove
sti
mov
push
mov
addr16
aam
mov
movsb
shll
inc
cmp
xchg
cmp
out
and
mov
addr16
cmp
rclb
jp
mov
int3
push
lds
xchg
rolb
pop
sbb
adc
js
sahf
fildl
das
nop
pushf
sub
mov
mov
jl
nop
sbb
cltd
icebp
pop
mov
pop
dec
shlb
adc
es
inc
rcrb
repnz
xchg
pusha
mov
jg
lock
adc
fwait
pusha
pop
cli
scas
adc
push
push
lcall
cmp
aas
cld
bnd
fcmovnbe
cmc
lds
das
mov
and
xlat
notl
adc
pusha
sub
mov
icebp
sub
js
cmp
lcall
roll
or
fnstcw
pop
pop
popa
adc
inc
push
lcall
mov
push
gs
sub
jbe
shll
sbbl
gs
out
jl
dec
icebp
arpl
jmp
jnp
pop
lahf
andb
push
insb
push
push
mov
pop
dec
out
rolb
ds
mov
and
rcrl
pop
pop
iret
subb
push
repz
mov
jg
movsb
mov
insb
gs
mov
pushw
movl
mov
shlb
pop
aad
aas
sbb
pop
je
lret
pop
add
loopne
cltd
divb
xchg
dec
outsb
xchg
fcmovu
clc
jnp
push
adc
pop
xchg
mulb
mov
out
pop
into
xor
and
push
xor
jle
shl
into
mov
stos
ljmp
fcmovb
addr16
pop
lret
inc
cmc
sti
pop
inc
popf
push
scas
fsubs
add
push
pop
js
dec
cwtl
int
mov
out
xchg
dec
or
mov
hlt
lret
popf
bound
imul
jbe
mov
jo
jg
int
jmp
lcall
enter
fisttpll
and
call
xchg
adc
sbb
mov
idivb
pop
and
push
mov
mov
and
aad
inc
cmp
cmp
xlat
or
xchg
mov
pushf
cmpsb
mov
imul
dec
and
les
data16
pop
adc
loope
ret
ja
das
daa
mov
mov
ret
insb
out
add
mull
or
adc
push
test
ret
pop
popa
and
stc
and
adc
lock
mov
push
mov
lods
popf
adc
jo
fildl
addb
adc
test
mov
push
add
mov
dec
movsl
sahf
pop
in
xchg
stc
mov
xor
mov
xor
fsubrs
mov
and
bound
inc
sbb
xor
fistpll
jmp
sub
jnp
or
clc
pop
cmp
or
insb
mov
cmp
xchg
imul
movsb
shlb
add
dec
adc
inc
test
divb
xchg
test
sub
pop
mov
jae
xor
out
mov
inc
mov
cs
jbe
push
shll
push
divl
lock
sbb
push
dec
es
jns
cmpl
pop
lahf
out
pop
mov
lea
cltd
pop
mov
clc
sub
add
enter
xor
aam
dec
into
push
push
push
sbb
adc
sub
push
jae
gs
mov
loope
xchg
and
or
push
jns
adc
lahf
outsb
out
repnz
xchg
in
sub
scas
andb
lods
mov
sbb
stos
into
cltd
test
fs
cmpsl
addb
fcoml
pop
mov
pop
add
pop
jno
jb
pop
pop
pusha
push
loop
aaa
xchg
test
in
add
pop
dec
xchg
sub
fldenv
outsl
and
jb
push
sub
loope
mov
stos
test
xor
fs
jns
jp
push
push
fisttpl
repnz
cmpsb
sub
out
mov
mov
mov
dec
pushf
iret
jmp
adc
dec
inc
cmp
push
cltd
ret
into
fabs
fsub
push
repz
insl
popf
and
fisttpll
inc
sti
lcall
inc
fildl
push
clc
xor
dec
mov
push
fcompl
push
cwtl
les
ss
in
sub
and
ds
ds
cmpb
repz
pop
insb
into
jle
adc
ret
and
xor
popa
roll
inc
push
add
loopne
mov
popa
pop
push
ja
mov
mov
icebp
out
js
daa
push
mov
in
es
clc
add
pusha
inc
stos
fwait
inc
inc
jb
ja
add
push
dec
cmp
daa
jg
or
jae
and
mov
inc
cmc
jae
mov
jae
sahf
lcall
and
hlt
xchg
dec
inc
notl
ja
and
jecxz
inc
vpshufhw
rcll
xor
mov
test
push
in
jo
sub
in
or
mov
cld
mov
mov
mov
test
out
and
out
loopne
pop
pop
sub
push
fbstp
sub
cwtl
jnp
pop
dec
and
lods
cli
or
sahf
cltd
in
ja
clc
xor
fs
sbb
xchg
lods
mov
cmpsl
stc
or
jno
adc
mov
sbb
sub
mov
adc
jbe
push
inc
mov
sub
mov
sbb
mov
lods
push
adc
mov
push
fldl
outsl
sub
adc
repnz
push
add
sub
fiadds
push
dec
inc
fiaddl
xor
insl
adc
inc
das
das
ret
pop
or
or
sub
inc
and
push
subb
xlat
sub
stc
repz
bound
sub
iret
je
mov
sub
mov
xor
fsub
push
push
sbbb
mov
xlat
insb
xchg
push
xchg
mov
mov
cwtl
jecxz
fildll
andb
into
add
lods
inc
bound
mov
dec
test
mov
fimull
shll
sahf
xorb
jecxz
pop
xlat
jmp
mov
mov
mov
cld
and
mov
sub
mov
add
pop
fstl
call
or
fldl
in
sub
out
cmp
arpl
rcll
dec
jg
aam
int3
sar
rcll
pop
jp
in
sub
addl
and
mov
mov
test
inc
fistpll
cmc
dec
pop
and
fs
hlt
pop
lods
dec
hlt
imul
dec
aam
jbe
cmpsb
fcompl
or
in
scas
movsb
pop
adc
xchg
in
imul
pop
mov
scas
jmp
stos
add
lock
xor
aas
int
addr16
repz
mov
pop
out
leave
sbb
push
dec
inc
mov
sbb
mov
lcall
dec
das
jbe
sbb
xor
push
pop
inc
sti
out
test
jge
xor
sub
stos
ljmp
sbb
jl
sbb
jmp
inc
xchg
scas
add
into
jge
fdivr
dec
push
pop
scas
testl
mov
test
mov
inc
inc
scas
mov
aam
cltd
idiv
addb
mov
push
pop
jge
sub
mov
call
out
sub
lock
imul
outsl
ret
shl
cmp
xchg
sbb
cli
fldenv
es
adc
loopne
pop
mov
in
push
mov
add
pop
inc
jecxz
pop
pushf
imul
fsubp
xor
roll
scas
std
ljmp
jle
decb
in
int3
and
xchg
xchg
fstl
and
test
imul
lods
sub
jecxz
ja
jns
mov
dec
pop
mov
call
stos
adc
dec
subl
enter
push
call
inc
aas
push
mov
push
fcmovb
xor
inc
imulb
jge
cmc
iret
sbb
mov
jne
xor
sub
xor
daa
ret
int
scas
sahf
add
adc
inc
mov
or
lods
ja
mov
xor
movsl
xchg
cmp
lods
jecxz
xchg
scas
mov
rolb
sub
lahf
pop
add
fdivrl
inc
dec
adc
fistl
push
jnp
push
jno
inc
push
cs
int3
scas
insl
repnz
jmp
xor
or
addr16
bound
push
jae
out
adc
mov
jl
cmp
hlt
inc
bound
popf
jne
cmpsl
lods
fiaddl
int3
aaa
int
dec
xor
pop
inc
std
arpl
jp
inc
xchg
xorb
scas
daa
dec
hlt
mov
jae
mov
hlt
mov
imul
imul
pop
sahf
jns
jne
fadds
insl
mov
jl
dec
mov
mov
loopne
xchg
xchg
mov
mov
jns
hlt
mov
loope
xor
xor
sub
lods
mov
adc
push
jmp
pop
pshufw
pop
ljmp
dec
push
test
cmp
and
cmc
movsb
and
sahf
ret
xor
push
mov
cld
repnz
dec
cli
mov
add
sub
xor
aas
mov
mov
xchg
leave
leave
popa
loopne
and
fsubrp
lahf
inc
scas
fwait
xor
test
jecxz
insl
jns
adc
adc
sbb
shr
notb
fldt
mov
sbb
or
dec
push
stos
mov
jmp
leave
inc
leave
xchg
cmc
adcl
xlat
test
pop
dec
lret
test
arpl
dec
push
aad
iret
mov
call
aaa
sub
cld
jns
clc
xor
out
xor
mov
mov
andl
sbb
loop
daa
jae
sub
outsb
sub
sahf
or
sbb
cmc
xor
fs
push
lahf
out
mov
and
leave
mov
faddl
dec
std
sbb
insl
jnp
insl
daa
inc
stos
lret
and
jb
xorl
cmpb
rcrl
rcl
inc
pop
shrb
mov
clc
cmp
fmull
in
add
xor
shll
fdivrs
scas
push
xchg
gs
cmp
lods
jmp
daa
leave
xchg
mov
mov
push
mov
std
mov
popf
push
mov
xchg
icebp
shll
sbb
leave
pushf
ljmp
cld
sub
aaa
sub
add
xorb
std
sti
or
and
movsl
arpl
add
pop
cmc
movsb
inc
push
jnp
mov
jae
sub
jae
fsubs
pop
jo
cmp
gs
repz
fwait
pusha
jo
mov
xchg
adc
mov
int3
stos
dec
in
cmpsl
xor
xor
mov
jo
add
std
roll
jp
xor
jnp
dec
xchg
mov
cli
adcb
push
callw
aaa
mov
mov
dec
add
fsubrs
ret
stos
js
jmp
xlat
push
cmc
mov
cvttps2pi
mov
xchg
imul
cld
lahf
mov
push
jno
xor
test
pop
test
pop
add
sub
add
mov
and
call
inc
cmc
insb
sahf
stos
mov
fcoml
ss
in
popl
lods
pop
ficoml
lcall
sbb
mov
cmc
shlb
mov
sbb
gs
stos
mov
leave
cltd
in
stos
js
or
jo
jnp
aam
fs
scas
mov
js
or
test
les
iret
and
lods
cmpsb
mov
aas
in
mov
and
jns
lret
or
test
dec
push
popa
mov
cmc
stos
testl
nop
mov
dec
adc
mov
mov
xor
test
xchg
gs
imul
test
cmpsl
movsb
out
mov
fwait
push
and
sbb
lods
cli
pop
jmp
repz
dec
insl
cmp
pop
and
cmp
sbb
fstps
add
repnz
fstps
mov
shll
fs
cmp
jle
push
pause
pop
jb
lret
lret
ficomps
outsb
loopnew
es
xchg
inc
cmp
and
adc
mov
mov
rclb
les
jge
xor
aaa
fs
imul
lret
imul
pop
mov
sub
pop
mov
sub
addl
sbb
xchg
pop
mov
xor
mov
mov
popf
xchg
jns
pop
rcll
data16
mov
lock
loope
stc
and
scas
shrb
xchg
inc
mov
sub
pop
test
jg
jns
mov
out
xor
insb
sbb
jl
loopne
mov
mov
inc
jns
fadd
jl
sbb
inc
jo
jb
or
mov
ljmp
push
inc
mov
lock
mov
sbb
aas
addr16
lods
push
adc
pop
push
jb
xchg
sub
sbb
inc
xlat
cmp
popa
dec
mov
jmp
fidivs
mov
shl
ds
lods
test
test
ret
sbb
ja
dec
xor
and
fisubrl
push
scas
push
push
inc
and
popf
popf
cmp
add
addr16
xlat
test
jns
cli
rolb
fbld
scas
fcomip
pop
mov
std
or
add
add
in
pop
or
call
bound
xchg
add
adc
mov
or
pop
sub
jns
stos
shll
mov
jmp
popf
sub
fdivs
inc
mov
cli
add
sub
out
call
gs
dec
mov
popf
stc
mov
dec
int
jmp
loope
leave
loopne
cmp
dec
fs
daa
adc
push
lds
push
dec
lods
ja
mov
loopne
and
repz
jno
mov
and
sbb
in
cmp
pop
adc
movsb
jbe
repz
sbb
hlt
js
ficoml
inc
push
and
mov
mov
aaa
cmp
sbb
fldl
xlat
push
xchg
test
shlb
imul
xchg
adc
std
lods
imul
push
clc
cmp
mov
mov
sub
scas
imul
jns
pop
mov
jp
cmp
imulb
mov
push
sbb
xor
clc
icebp
lret
stc
fwait
aad
jbe
pop
scas
mov
sbb
andl
xlat
dec
sahf
xor
mov
push
pop
inc
xchg
and
call
outsl
and
loop
popf
sbb
lock
arpl
hlt
bnd
jo
mov
cli
xorl
loopne
movsb
fldenv
popa
rcll
sbb
jbe
aaa
pop
stc
mov
sub
cmp
cmp
mov
imul
lret
ss
mov
mov
test
arpl
xor
scas
shl
pop
aam
adc
test
dec
mov
mov
mov
xor
dec
mov
jnp
push
outsl
rolb
out
cmp
xlat
pop
mov
jne
pop
outsb
cmp
inc
push
add
lret
out
shl
lret
sahf
cmp
cmp
outsl
xchg
je
dec
fnstcw
dec
lcall
lods
sub
push
ret
cmp
push
sbb
push
sub
call
push
inc
shlb
pop
cmp
ja
hlt
or
jge
cwtl
xchg
and
daa
xchg
shll
outsb
ret
scas
pusha
sbb
out
add
inc
cltd
cmp
pop
dec
mov
jge
ret
cltd
es
mov
and
mov
int3
das
inc
out
rclb
cmp
fists
xor
fistpl
and
insb
push
push
loopne
cmp
shl
and
mov
mov
jg
insb
pop
jge
cld
lods
sub
mul
shrb
scas
xchg
pop
pop
mov
push
lahf
push
loop,pt
ret
pop
push
cmc
xchg
add
int
push
pop
xlat
ss
add
mov
dec
jmp
inc
dec
aas
in
push
push
or
ficomps
repnz
lods
pop
or
les
lods
scas
jo
adc
jp
or
nop
vpcmpgtb
jg
scas
mov
dec
aas
pop
adc
popa
inc
rcrl
lret
fsubs
pop
out
or
sbb
jmp
ffree
fs
jae
fstl
adc
inc
jns
mov
pop
push
or
imul
sbb
cmpsl
out
aaa
push
dec
int
dec
cmpsb
leave
jb
mov
cmp
mov
mov
xchg
mov
test
jl
xchg
shlb
mov
sar
mov
insl
adc
stos
pop
mov
fistpl
adc
lods
sbb
inc
fistpll
bound
sbb
cmp
test
and
adc
mov
push
aad
lods
adc
jnp
movsl
js
ss
dec
sub
xchg
gs
in
push
rolb
push
jns
jae
pop
push
inc
mov
ja
dec
push
rol
es
fmull
ja
xchg
sub
gs
push
add
test
mov
dec
add
jl
inc
addr16
and
cld
lret
fistl
inc
loop
push
adc
cmp
fld
add
mov
mov
push
mov
or
loop
ss
in
call
stos
movsl
jp
xchg
repz
xchg
bound
pop
cmp
insl
nop
or
icebp
xchg
xor
cli
in
fs
sbb
pushf
out
or
xor
jecxz
mov
popa
sbb
dec
jl
outsb
mov
sbb
std
sub
lea
jae
push
dec
aam
in
bound
mov
into
xor
jb
std
inc
gs
stos
int3
ljmp
pop
adc
sub
sbb
mov
fbld
inc
ret
mov
jb
aad
das
movsl
pusha
jne
sub
mov
push
jb
xchg
mov
push
pop
nop
xor
mov
pushf
cltd
mov
shl
mov
pop
mov
lahf
mov
ja
mov
cli
pusha
ret
xor
mov
or
es
mov
cld
sti
cmpl
jge
dec
cltd
call
sub
aaa
arpl
lds
or
cli
inc
icebp
iret
jmp
jns
and
and
cmp
xchg
xorl
dec
adc
inc
pop
out
lods
loopne
push
outsl
insb
jmp
push
sub
pusha
mov
ss
cmp
aam
stos
pop
xor
roll
fsubrp
addr16
jnp
push
cmpb
pop
inc
aaa
bound
popf
aas
sub
cmp
pusha
rclb
dec
lds
jg
and
inc
nop
mov
popl
lods
pushf
rclb
or
in
in
dec
int3
xchg
jae
test
scas
sarl
gs
into
loope
pop
sub
dec
negb
and
dec
jbe
mov
adc
xor
aaa
popa
add
out
shlb
rorb
jbe
cmpsl
pop
adc
mov
sbb
cmpsb
sub
cltd
stos
add
push
adc
sbb
pop
idivl
test
and
test
jecxz
add
xchg
fcmovne
push
arpl
xlat
stos
imul
cmpb
push
mov
xchg
mov
push
xchg
cmp
mov
jecxz
push
pop
push
add
or
pop
sti
data16
add
jb
push
fwait
sub
std
sub
dec
mov
adcl
mov
xorb
jo
xor
adc
shlb
sbb
dec
scas
popf
mov
pop
imul
loopne
xor
jecxz
inc
pop
test
das
cmp
call
cmpsl
xor
rcrb
dec
pop
cmpb
jle
mov
mov
hlt
fildll
sub
test
loope
leave
jmp
sub
jmp
inc
push
loopne
adcl
jmp
add
dec
stos
add
scas
jg
jo
ljmp
push
mov
cmpb
mov
repnz
in
xchg
outsl
in
out
push
scas
rcll
mov
add
mov
gs
xchg
int3
xchg
mov
jecxz
xchg
stos
sbb
ret
pushf
cmp
iret
das
in
inc
movsl
test
dec
gs
adc
shrb
jb
mov
mov
call
fcmovne
mov
sbb
cmpsb
push
mov
pop
lahf
push
xchg
pop
xchg
addr16
and
add
jmp
rcll
nop
cld
aas
addr16
adc
cld
insb
imul
jecxz
int3
addr16
adc
sbb
call
rorl
or
cmp
shrb
adc
mov
jbe
ja
lods
das
and
js
pop
cmc
in
xor
cmp
sub
fidivrs
insl
cmp
ret
or
dec
or
and
scas
xor
andl
pop
jmp
sub
sbb
mov
lock
push
inc
cmpsl
xchg
pusha
std
mov
sbb
pop
sbb
insb
mov
divl
push
out
xor
cmc
xchg
xchg
adc
sub
jge
test
xchg
out
mov
push
pop
inc
dec
mov
push
imul
dec
push
test
pusha
push
pop
inc
xchg
jge
mov
mov
shll
std
repnz
xor
stc
lds
mov
xchg
int3
and
subb
sti
push
inc
pop
int
sbb
pop
in
out
mov
pop
mov
add
popf
aaa
sub
stc
popa
add
dec
mov
adc
mov
in
in
cmpsl
xor
imul
js
rolw
aas
shrl
add
sub
xchg
jg
adc
lcall
clc
cld
mov
stos
out
stos
push
rclb
pop
add
xchg
inc
cmp
jbe
daa
test
das
mov
push
mov
cmp
adc
adc
pop
ss
std
mov
add
sbb
xor
and
daa
imulb
pop
dec
jp
popa
test
mov
cmp
mov
jecxz
sbb
jle
and
push
jnp
inc
daa
in
xchg
fnsave
and
push
sbb
pop
dec
or
out
sub
xchg
xchg
out
sbbb
cs
xchg
push
addr16
sti
cmpsb
addr16
pop
jg
cmp
inc
test
mov
icebp
dec
inc
adc
or
push
cmp
dec
pop
push
cmpsl
mov
enter
mov
arpl
bound
or
test
popf
lods
mov
xor
push
stos
mov
inc
sbb
leave
imul
or
xor
push
mov
add
push
addr16
outsb
scas
and
xor
imul
or
sbb
push
popa
jnp
cmpsb
mov
pop
sbb
lahf
movb
les
mov
dec
fsub
mov
mov
and
popf
test
dec
hlt
mov
lahf
stc
push
leave
adc
ret
nop
add
mov
add
push
jno
push
mov
js
scas
dec
sahf
cmpsl
push
xor
lock
dec
cwtl
test
or
xchg
and
sbb
in
lahf
adc
mov
xor
test
sub
cmp
aas
ds
cmp
jp
out
add
jb
shl
cmpsb
inc
mov
push
push
add
es
mov
xor
sub
aad
je
sbb
mov
mov
xor
mov
or
dec
dec
xchg
pushf
mov
in
leave
test
or
add
repnz
ss
add
cmp
dec
push
test
or
jae
pushf
rcl
fidivrl
dec
loop
popa
pop
jno
add
mov
mov
pop
adc
mov
cwtl
mov
push
xor
xchg
imul
js
mov
push
popa
jae
pop
xor
and
sbb
rcrl
shll
fs
cmp
or
xor
and
cld
aam
in
push
dec
pop
shl
js
mov
mov
ja
pop
cwtl
dec
fmuls
inc
inc
push
shlb
pop
cmp
dec
xchg
sti
jbe
sbb
cmp
jae
xchg
fwait
mov
jmp
jp
mov
add
mov
cmp
dec
xor
pusha
pop
repnz
nop
repnz
xor
int3
fwait
xor
and
mov
pop
adc
aaa
or
ret
mov
in
enter
mov
pop
mov
in
popf
mov
mov
call
jecxz
in
pop
je
js
fsubl
push
jp
inc
iret
and
or
outsl
int
sbb
cs
lods
xchg
cmpsl
jae
jns
stc
in
lahf
int3
shrb
scas
dec
adc
xor
add
enter
movsl
sbb
ficoml
push
mov
scas
pop
ficoml
adc
std
sbb
cmp
cmp
jnp
jb
lcall
mov
mov
sti
dec
lcall
ss
add
xchg
arpl
int
loop
aad
movsl
dec
or
es
out
not
pop
cmpb
pop
xor
and
test
jns
ja
jae
les
scas
imul
jae
jecxz
mov
outsb
out
leave
xchg
sbb
xchg
push
xor
popa
xor
adc
jns
sbb
jmp
lcall
xchg
cmp
add
add
add
cs
enter
jb
jge
in
rep
mov
lret
add
adc
out
cld
or
clc
mov
add
test
arpl
xor
movsl
ret
adc
mov
subb
fadds
and
xorb
sbb
mov
es
roll
sub
pop
cmpsb
dec
xchg
rcrl
add
push
into
insb
add
outsb
mov
add
and
dec
mov
lret
add
inc
test
mov
orl
push
mov
or
sbb
je
lods
dec
xchg
adc
movsl
sbbl
or
fwait
xor
push
cmp
mov
and
pop
cmpsb
push
popl
push
mov
cmp
sti
dec
push
add
xchg
add
sub
mov
dec
jnp
adcl
and
add
adc
mov
mov
xor
jl
aam
test
mov
scas
push
sub
adc
lcall
xchg
push
sbb
lock
insl
arpl
push
add
sub
dec
std
repnz
cmp
test
cmp
addr16
xchg
outsl
es
push
mov
fcomip
xlat
adc
sbb
inc
lods
out
pop
loope
pop
sub
divb
mov
inc
add
cmp
adc
push
roll
push
push
mov
outsb
xchg
mov
pop
outsb
cmp
lahf
outsl
xchg
pop
decl
mov
fldl
push
pop
dec
lods
jp
adc
ja
sbb
test
dec
ja
pop
sub
add
fcmovbe
or
add
repz
in
ja
hlt
shl
cmp
xchg
inc
jb
and
mov
fmull
in
mov
int3
scas
cmc
push
mov
sbb
mov
lods
outsl
hlt
insl
imul
and
dec
mov
push
jae
and
sbb
lods
xor
loopne
pop
jne
mov
xorl
jnp
jae
inc
lcall
and
shrb
ret
or
insl
je
scas
outsl
pusha
shlb
xchg
fucomp
rclb
push
sbb
xor
dec
sbb
push
jno
repnz
cld
adc
mov
mov
sbb
inc
movsl
push
fadd
ret
outsb
mov
add
sub
pushf
fnstenv
or
loop
add
lret
push
cli
into
pushf
hlt
lods
dec
les
xchg
call
ficompl
adc
mov
movsl
push
mov
in
add
inc
enter
fst
push
mov
aad
into
out
jns
gs
lods
jnp
mov
push
popf
mov
and
mov
fiaddl
push
push
and
adc
sub
scas
subb
fsubl
fildl
jge
inc
sbb
in
es
ret
out
into
pop
out
filds
mov
push
pop
mov
xchg
pushf
and
jae
stos
or
in
subl
xchg
dec
push
cmp
mov
inc
ja
in
pushf
mov
jns
lahf
jle
dec
sbb
mov
mov
pop
stos
gs
cmpsl
jmp
sbb
xchg
cli
mov
mov
jb
mov
or
mov
fidivl
add
push
std
fisubs
pop
mov
mov
test
jnp
cs
inc
pop
inc
lret
cmp
sub
adc
sbb
in
iret
imul
xor
leave
mov
repnz
pop
dec
dec
js
pop
leave
outsb
adc
hlt
mov
dec
pusha
inc
push
mov
int3
cltd
xchg
insb
sahf
mov
dec
jne
push
aad
mov
insl
gs
jecxz
push
fnstenv
adc
xchg
fistpll
jns
pop
dec
jb
inc
sub
aam
jns
loop
int3
pop
mov
jae
push
jno
xchg
repz
adc
jo
add
xchg
data16
cmpsb
iret
in
hlt
cmp
jl
and
push
jno
js
pop
pop
sti
pop
mov
inc
data16
popf
inc
movsl
shlb
fwait
in
fstpl
stos
js
xor
pop
cmc
outsb
ljmp
mov
add
push
cmc
ljmp
notb
mov
mov
mov
push
jno
mov
adc
jle
mov
jl
pop
add
add
adc
imul
stos
bound
add
idivl
rep
fdivs
int
jns
je
sub
cmp
out
pop
lea
imul
lods
xchg
in
or
push
test
xchg
add
pushf
adc
adc
hlt
mov
and
sbb
cs
jp
push
or
sbb
pop
popa
sub
andb
xor
mov
sti
lea
mov
lds
inc
push
xlat
inc
push
cli
mov
mov
push
fs
cmp
call
cli
cmp
mov
mov
aad
xchg
stos
bound
imul
push
ds
push
jb
jl
lock
mov
sarb
pop
das
or
add
or
xorb
out
fbstp
cmp
add
xor
stos
aas
shlb
int3
push
loope
popa
das
out
in
xor
push
pusha
call
sahf
pop
clc
mov
inc
scas
roll
adc
vrcpps
stos
cli
push
fisubrl
sub
and
das
push
mov
cmpsb
xor
or
xor
or
aaa
cmp
lods
dec
dec
jb
fcoms
mov
sub
and
pusha
dec
mov
jp
mov
cmc
mov
add
loopne
mov
lods
sub
xchg
mov
pop
xchg
lods
mov
ret
push
sbb
jbe
out
daa
mov
adc
xchg
je
stos
movsb
dec
dec
repz
ret
pop
mov
loop
daa
fsubs
mov
stc
add
push
xorl
lcall
inc
pusha
sbb
pop
sub
test
movsb
add
xchg
xchg
outsb
lds
int3
pop
loop
inc
sti
push
cltd
cmpsl
adc
sbb
leave
scas
mov
aaa
lds
les
lret
aad
inc
inc
pushf
jo
hlt
sbb
pusha
mov
movsl
in
clc
xchg
cmp
adc
jne
pop
out
pop
fdivp
dec
push
sub
mov
dec
les
imul
mov
arpl
add
mov
scas
sub
mov
inc
push
imul
pop
mov
filds
jno
cmpsl
arpl
out
add
pop
mov
push
jge
ret
inc
ficomps
sub
add
in
jno
xor
int3
inc
pop
dec
cmp
nop
pop
inc
xor
mov
dec
xchg
in
push
mov
mov
ljmp
shrb
dec
lcall
mov
nop
cmp
xchg
mov
or
mov
fs
xor
inc
pusha
iret
xor
push
sub
xchg
in
mov
imul
xor
inc
push
inc
mov
data16
jne
and
push
inc
jp
pop
add
pop
in
pop
and
call
inc
aad
pusha
sbb
out
sbb
jle
or
push
fadds
push
xchg
or
push
shlb
sahf
in
aad
mov
jge
dec
divb
sbb
add
or
fldt
xor
dec
loopne
mov
enter
mov
or
outsb
clc
pop
mov
sbb
push
fwait
enter
dec
lods
push
roll
test
mov
xchg
dec
cmp
leave
cmpsb
imul
inc
and
xchg
loope
pusha
mov
notl
cltd
rclb
ss
push
fisubrs
add
cmpsb
sbb
das
mov
imul
push
or
xor
xchg
ror
mov
inc
xchg
faddp
out
sub
rcrb
sub
mov
inc
adc
into
into
inc
cwtl
lock
test
add
jp
mov
xor
out
ds
repz
xor
insb
xchg
push
mov
pop
iret
pop
mov
ret
negl
test
cmpl
in
pop
sub
xor
push
imul
cmp
and
icebp
setbe
xchg
mov
adc
cld
je
stos
or
jle
add
or
sbb
fcoms
add
pop
push
movsl
mov
sbb
pop
xor
das
and
dec
mov
gs
mov
gs
repnz
lret
scas
xchg
jno
stc
lahf
dec
sbb
inc
mov
ljmp
or
lret
xchg
and
leave
dec
iret
dec
mov
das
mov
sahf
call
enter
lea
in
mov
xchg
cli
mov
jg
test
iret
out
inc
lret
xchg
es
call
add
xchg
je
ret
cmpsl
lods
ret
cmp
sahf
inc
ret
adc
sub
lea
fs
and
mov
ficomps
in
push
or
jge
mov
aaa
leave
push
jo
iret
lcall
loopne
cmp
inc
clc
out
xchg
testl
enter
test
lock
std
and
mov
fsubrs
push
int3
pop
lret
and
push
jbe
popa
insl
lret
jge
or
insl
mov
jg
and
adc
sbb
test
ss
aad
dec
scas
cmc
shlb
or
data16
cs
rcrb
mov
in
inc
sahf
sub
mov
fisttpll
mov
push
rcrl
add
jns
xor
lock
xchg
xor
fstpl
and
cmp
adc
fwait
dec
mov
scas
stos
jns
mov
jp
aaa
mov
aad
stc
pop
mov
add
mov
add
or
push
push
xchg
pop
mov
mov
int3
sti
adc
add
subb
enter
stos
xchg
jns
enter
cs
pop
jo
dec
cli
fsubrp
mov
sub
repz
inc
adc
popa
xor
test
test
push
movsl
ss
fldt
dec
ss
adc
lock
outsb
and
stc
call
test
mov
add
mov
addb
std
loop
test
sbb
inc
subb
pop
mov
incb
imul
cmp
das
mov
cmp
pop
mov
jl
pop
xchg
add
in
push
jmp
scas
add
jbe
cmpsb
inc
imul
and
sub
inc
mov
add
inc
inc
push
adc
imul
stc
mov
sub
lret
int3
sbbb
xor
push
outsl
mov
data16
mov
scas
in
mov
fsubp
push
cli
pop
pop
xchg
pop
out
fdivrs
xor
outsl
lds
and
sub
mov
das
and
ljmp
test
test
xchg
nop
out
lods
lcall
adc
inc
es
scas
out
dec
pop
lahf
cmp
fdivr
xor
sub
xor
mov
dec
mov
mov
sbb
jl
fidivrl
cmpsb
and
stos
movsb
inc
inc
jae
mov
or
or
xor
inc
mov
nop
divl
daa
sub
pop
lock
lahf
push
mov
inc
xorl
mov
mov
lcall
das
bndldx
mov
xchg
aad
or
jbe
and
leave
fisubrs
sarb
popa
rorb
sbb
cmp
xchg
or
ret
jle
push
xchg
into
jp
repz
adcb
outsb
scas
sub
jp
push
cmp
or
push
jns
fwait
idivb
in
inc
and
out
pavgb
cs
adc
popf
popf
dec
inc
rorb
xor
ss
adc
jns
mov
mov
or
repnz
in
aaa
in
out
or
mov
shr
push
sbb
mov
adc
push
pop
adc
and
xchg
push
scas
cmpsl
push
pop
repnz
mov
inc
lods
mov
adc
mov
jne
pop
mov
inc
pop
adc
addr16
adc
pop
inc
lahf
inc
aad
jnp
sub
xchg
pusha
or
call
mov
push
dec
inc
mov
repz
ds
add
mov
jns
pop
or
mov
test
stos
fmull
js
push
loopne
lret
cltd
sbb
inc
xorl
mov
pop
cmp
push
mov
aas
jno
andb
popa
sahf
out
jbe
push
mov
imul
nopl
add
xchg
int3
cli
dec
pop
jl
into
lret
cmp
std
cwtl
mov
insl
sub
imul
or
test
mov
add
lods
popa
fs
hlt
and
out
sub
lock
dec
jmp
push
test
sub
into
pop
cmpsl
adc
leave
dec
lret
scas
stos
sub
iret
into
mov
or
in
bound
stos
cltd
sbb
outsb
lahf
xor
inc
lcall
sbb
mov
in
cmp
mov
mov
and
js
test
xchg
cli
mov
mov
cmp
lcall
sbb
testb
mov
inc
aam
add
jmp
out
adc
les
les
sbb
out
push
dec
xor
fadd
push
aam
negl
es
xor
pushf
in
enter
jo
aaa
imul
insl
rclb
mov
xlat
ja
fsubl
inc
push
testb
std
out
imul
sbb
lret
mov
sub
cmp
enter
clc
je
jle
dec
sub
mov
lock
gs
repnz
and
pop
push
clc
insb
and
repz
stos
imul
lret
jle
les
inc
jecxz
mul
jo
xchg
cs
gs
and
add
mov
pushf
in
adc
push
or
pop
jae
addb
test
mov
inc
add
das
pop
push
adc
addr16
cli
xchg
adc
pop
aam
adc
clc
es
stos
and
pushf
push
or
sub
orl
in
cmp
or
inc
shlb
repz
fs
daa
cmp
jg
sti
stc
inc
sub
mov
sub
inc
pop
sub
int3
cmp
mov
mov
pusha
js
les
fsubrp
sub
add
test
out
cmp
roll
ret
push
repnz
hlt
fisubrs
cmp
popa
pop
pop
mov
mov
mov
xchg
add
fs
adc
mov
dec
mov
jo
ds
push
xor
dec
inc
insl
cld
out
push
ljmp
mov
xorb
cmp
or
push
jg
inc
jp
cmp
fstl
xchg
mov
stos
nop
hlt
out
inc
into
add
cmp
test
stos
fisttps
xlat
fsubp
ja
add
in
mov
fwait
jl
mov
and
call
enter
outsb
and
movsl
add
js
and
test
xchg
fwait
and
jae
mov
dec
test
icebp
sub
dec
movsb
cld
or
and
int
in
sbb
sbb
es
xchg
test
in
mov
sub
cltd
in
xor
mov
xchg
and
and
mov
mov
push
or
scas
iret
add
popa
jo
or
std
idivb
inc
cli
xchg
mov
sbb
pop
test
cmp
push
aas
mov
bound
cmp
and
dec
test
sub
inc
mulb
ss
outsl
sbb
inc
mov
jne
jg
mov
sub
loope
imul
inc
jno
nop
dec
loop
aad
pop
sub
out
sarb
sub
and
xlat
push
fs
clc
gs
or
or
lahf
jne
cltd
fldt
add
add
mov
shlb
icebp
in
pop
xchg
dec
sub
cwtl
xor
ret
sbb
in
shlb
xchg
pop
sbb
aas
and
fdivl
adc
push
xchg
pushl
jb
push
rcl
xchg
ds
cld
aam
dec
dec
jb
lret
mov
add
or
cltd
subl
and
lcall
xor
xchg
pusha
mov
pop
scas
mov
sub
loopne
push
fildl
addb
mov
mov
fldl
icebp
xchg
add
data16
xchg
push
jl
or
pop
jmp
repnz
xlat
adc
lahf
push
scas
sbb
cmp
xchg
fimuls
fnsave
add
ret
fmuls
push
push
xor
int
cmc
inc
and
mov
scas
xor
inc
icebp
std
adcl
or
xchg
inc
push
lock
push
fisubl
pop
scas
orl
sub
movsb
mov
sahf
jne
out
push
test
cmp
int3
shl
dec
jge
out
shld
push
ficomps
insb
addl
sbb
inc
aad
cs
jnp
xchg
add
enter
les
sahf
xchg
imul
cmp
stos
adc
jo
xor
dec
scas
xchg
mov
jle
inc
sbb
bound
mov
jb
in
add
or
dec
ds
cmp
nop
push
icebp
pushf
cmp
jp
out
fadds
cmp
mov
sti
in
pop
in
and
rclb
stc
add
pushf
loope
adc
scas
jno
fcompl
aam
sub
mov
push
in
enter
xchg
andb
xchg
pop
xor
jns
jnp
xor
fadds
lret
out
dec
icebp
cmp
cmp
std
push
les
inc
imul
inc
test
add
pop
mov
or
add
dec
sub
and
aas
or
dec
divb
dec
sbb
fcmovnb
sbb
stos
jno
dec
leave
push
fmull
ret
scas
addr16
addr16
sbb
aaa
daa
imul
xchg
cwtl
xchg
bound
scas
fidivrl
sub
fcompl
js
cli
out
dec
ftst
jg
idiv
dec
push
and
jne
stc
test
addb
mov
jge
cltd
mov
pushf
insl
dec
mov
xchg
jbe
outsl
mov
test
mov
add
dec
jp
in
bound
insl
mov
rclb
ja
jge
xor
add
push
lock
fldcw
lods
xchg
mov
jge
dec
xor
dec
lds
cmpsb
add
jg
sub
adc
repnz
popa
and
fucomp
adc
cmp
jne
sti
fisttps
inc
or
lds
mov
mov
fsubl
push
or
xchg
cmp
repnz
orb
dec
sbb
scas
jmp
inc
push
mov
or
les
pusha
cmp
sub
repnz
xchg
popa
pusha
sbb
or
mov
mov
mov
adc
adc
or
push
inc
outsb
lret
add
adc
and
ret
mov
mov
adc
mov
mov
push
or
int3
sbb
cmp
push
mov
push
lods
ss
fwait
outsb
fbstp
std
mov
scas
push
pop
mov
js
movsb
xor
mov
or
in
add
cltd
lret
jo
push
in
push
stos
sarb
int3
sub
pop
mov
jg
lods
push
mov
xor
inc
cmp
dec
loopne
scas
test
dec
ror
lahf
pop
inc
add
xchg
aaa
mov
out
bnd
lahf
cs
aaa
push
in
in
jg
inc
adc
push
cld
jo
push
cmc
negb
and
mov
aam
mov
inc
andb
dec
and
call
xchg
and
sbbl
xor
cmp
in
out
aaa
sbb
mov
cmp
icebp
fistpll
xor
data16
movsb
stos
sar
xor
and
push
pop
add
outsb
dec
lcall
fiaddl
push
dec
insl
mov
cmpsl
aam
lcall
inc
inc
js
pop
rcrl
jnp
jecxz
sub
lods
test
dec
sub
pop
popa
or
push
jbe
adc
sub
filds
pop
pop
mov
xchg
mov
xchg
push
jge
out
popf
cmp
stos
or
cwtl
jnp
repz
add
mov
into
in
pop
mov
fwait
aaa
dec
leave
cmc
test
sub
hlt
and
inc
sbb
rol
add
hlt
push
test
cld
in
hlt
cmp
xchg
push
sbb
mov
sbb
xor
cs
dec
ja
mov
xchg
stc
mov
pusha
adc
pop
cs
sbb
data16
jb
adc
push
jge
sub
icebp
dec
mov
repnz
ret
rorb
jecxz
popf
faddp
jno
lock
and
mov
repnz
jno
cmp
mov
push
lret
or
push
ss
aas
jbe
jae
cld
add
and
mov
outsb
repnz
outsl
loope
scas
fbld
xor
and
das
int3
or
or
push
push
xchg
scas
xor
setns
out
fadd
jecxz
xchg
cmp
pop
push
push
icebp
stc
aam
jmp
xor
mov
pop
arpl
call
mov
ror
push
pop
mov
outsl
sub
mov
cmp
fs
shrl
push
xchg
mov
mov
mov
add
cmp
fnsave
stos
cwtl
sub
jnp
and
push
pop
add
es
enter
mov
mov
mov
sti
lea
mov
aam
inc
add
dec
xor
pop
cmp
idivb
loope
ret
mov
jns
and
lret
cli
test
stos
inc
push
in
cld
fcompl
add
sbb
lods
cbtw
scas
out
out
sub
jge
xchg
sbb
cli
dec
cmp
jmp
sbb
out
adc
cmp
sbb
inc
call
rcll
fucom
leave
es
les
xor
movsb
lea
in
out
bound
mov
popf
cmpsb
stos
dec
sub
mov
out
aad
jmp
dec
idivl
mov
call
lret
sbb
es
loopne
std
icebp
arpl
mov
cmc
aaa
mov
dec
and
pop
adcb
pop
sbb
sbb
lret
dec
jecxz
cwtl
popf
movsb
aam
jb
jl
dec
int3
ret
jmp
and
mov
rorl
xchg
or
test
xchg
nop
js
cs
and
push
mov
mov
xor
test
out
in
mov
dec
fnstsw
dec
add
cld
lahf
pop
lret
mov
in
lret
mov
push
fisubrl
xchg
and
cmp
or
xor
dec
mov
mov
lret
into
jmp
mov
sbb
pop
sbb
int3
enter
pop
push
sbb
mov
mov
xchg
jle
or
jmp
push
push
mov
push
inc
in
add
xchg
lret
push
jmp
push
sbb
lods
adc
sbb
mov
sbb
sarb
dec
add
and
fsubrl
or
insl
lahf
imul
jl
push
or
stos
push
int3
in
mov
sbbb
lods
test
arpl
or
mov
mov
and
add
adc
imul
xchg
cmp
jg
pop
mov
out
gs
xchg
scas
sbb
jmp
adc
aam
mov
xor
and
xchg
scas
push
popa
cs
pusha
leave
dec
dec
fwait
push
inc
bound
xchg
fcomps
adc
push
adc
xor
int
enter
divl
iret
repz
testl
daa
aaa
loopne
xchg
jle
jp
out
clc
out
pop
mov
popf
jge
push
pop
int
push
mov
jne
fcom
loop
add
sub
test
sbb
push
imull
xor
imul
mov
mov
mov
cmp
jmp
or
ljmp
mov
push
aad
sbb
jb
xchg
xor
jne
popl
cs
nop
push
inc
addb
inc
xor
in
imul
dec
push
je
add
ljmp
scas
aad
push
sub
jno
jge
jne
dec
xchg
jns
shlb
mov
cmpsb
addr16
je
pop
mov
push
ljmp
imulb
jg
mov
movsl
lret
adc
pop
mov
ljmp
sahf
xor
sub
mov
outsl
mov
add
cmp
stos
add
imul
mov
mov
push
inc
mov
js
ljmp
out
sub
push
ret
lds
add
jnp
add
mov
mov
ss
ret
lock
xchg
pop
fsubrl
and
sbb
das
repz
loopne
sbb
push
aam
dec
gs
ret
push
shlb
ljmp
pop
aam
and
sbb
adc
and
add
gs
popf
jns
sbb
test
pop
cmp
or
push
popl
int
in
add
mov
cmp
adc
pop
add
in
add
lret
inc
mov
push
aaa
xor
dec
mov
jmp
fisubl
lock
lods
sub
cmc
sub
mov
pop
clc
jle
adc
sahf
adc
pop
fs
sbb
pop
mov
cli
inc
xchg
push
and
ss
repz
sbb
rclb
outsb
push
mov
aam
mov
push
jb
test
outsl
dec
lods
lahf
xor
inc
adc
jl
dec
loope
jmp
fldl
mov
ficoms
movsb
mov
movsl
psrld
sarb
in
mov
out
push
push
cmp
cli
sub
stos
push
cmp
mov
es
jmp
stos
scas
hlt
or
xchg
nop
sub
push
dec
inc
imulb
cmc
cmp
or
push
aas
ret
mov
leave
push
push
clc
mov
dec
inc
pop
arpl
mov
jmp
add
std
mov
into
cmp
into
xor
mov
add
int
aas
icebp
mov
divb
jecxz
arpl
pop
ficoms
push
icebp
lcall
xlat
fisubs
test
push
cmp
not
orl
xor
or
adc
jmp
pushf
push
lds
mov
fwait
dec
lahf
out
jb
adc
dec
out
addr16
jecxz
mov
andl
lea
scas
cmp
scas
mov
xchg
subb
inc
dec
inc
aam
adc
divl
into
sar
sub
jno
lahf
mov
in
outsl
dec
mov
push
push
cmpsl
xor
lea
push
xcrypt-ofb
cmpsl
lods
mov
mov
rcrl
das
and
lret
mov
std
lea
in
aad
push
pop
jo
dec
cltd
sub
cmc
orl
loop
and
in
sbb
push
pop
mov
gs
sahf
dec
push
pop
cmp
test
fimull
push
xchg
sbb
jns
dec
mov
pop
xchg
pop
inc
fisttps
out
xchg
sti
adc
dec
dec
inc
pushl
fimull
pop
fstpt
clc
mov
mov
inc
ss
and
pop
sub
jl
dec
ss
pop
cmp
add
mov
pop
fisubrs
and
mov
cmp
int3
xchg
shl
cld
xor
xchg
pop
or
push
jg
int
jb
popa
dec
sbb
add
iret
inc
imul
fs
int
mov
cmpsl
pop
adc
out
and
xchg
lock
jecxz
iret
dec
jno
les
mov
clc
out
subb
arpl
mov
lock
cmc
xor
fs
dec
int3
lcall
jecxz
pop
inc
adc
mov
cmp
jns
mov
sub
and
jb
mov
or
sub
mov
mov
jb
push
aam
inc
pop
pop
push
mov
sahf
popa
ds
loop
mov
mov
push
fwait
mov
sbb
adc
xchg
add
mov
movsb
cmpsl
pop
in
cmpsl
sbb
fisubs
fs
jb
andb
cmp
aas
fwait
ja
sub
xchg
mov
adc
mov
push
xor
mov
mov
lods
and
jp
xor
xlat
xchg
inc
lock
call
sbb
xor
adc
lcall
dec
xor
xlat
jl
aaa
xchg
outsl
mov
mov
addr16
imul
imul
xchg
jae
daa
cmc
out
mov
adc
int3
leave
cmc
xor
xchg
mov
mov
fsubs
cmp
sbb
out
ljmp
std
das
and
in
sahf
imul
or
add
inc
test
jl
popf
and
pop
test
push
lcall
and
mov
test
mov
loope
mov
nop
testb
inc
add
pusha
inc
mov
cmpsl
xchg
inc
and
cmpsl
xchg
movsl
and
movsl
cli
inc
sub
and
popa
rorl
out
fistpl
sub
adc
xchg
faddl
daa
jae
lock
icebp
xchg
ret
sub
ficompl
out
in
and
and
fidivl
scas
fldcw
fcmovbe
and
pop
xchg
leave
cmp
iret
lret
in
inc
stos
dec
lcall
xlat
test
adc
xor
mov
es
or
inc
pop
lock
cli
loopne
inc
dec
shlb
cli
adc
jmp
imul
push
fadds
sahf
jo
aaa
cmp
loope,pt
int
mov
sub
or
js
mov
inc
repz
inc
ss
add
add
jl
sub
popa
xor
insl
xor
mov
lds
push
dec
stc
xchg
jnp
negl
ret
test
aas
mov
push
lea
xlat
aas
iret
mov
fwait
div
bound
push
jbe
sbb
xchg
out
push
loope
outsb
daa
mov
lcall
lret
mov
ja
xor
push
imulb
cmp
dec
push
push
xchg
cli
adc
or
popf
pop
xor
cltd
pop
and
jg
movsb
mov
shll
xchg
sub
xchg
and
and
xchg
push
fiadds
clc
jle
aam
or
je
jmp
add
dec
and
lret
mov
insl
outsb
jo
out
aas
dec
pop
mulw
inc
call
xchg
fsubrl
xor
mov
sub
push
insb
and
push
or
and
push
sbb
jns
or
xor
outsb
push
xchg
xor
xor
divb
incl
xchg
pop
dec
mov
add
pop
and
lahf
pop
jl
scas
lods
xor
test
imul
dec
xor
sbb
mov
ret
bnd
daa
lret
es
call
sbb
add
push
xor
mov
popa
mov
mov
or
es
dec
dec
jno
jmp
in
fisttps
push
mov
jecxz
fcoms
loopne
pop
fsubs
mov
inc
aas
xchg
jno
xchg
sbb
push
pop
ljmp
sub
fs
das
repnz
xchg
insl
jbe
lahf
fcoms
push
ja
push
xlat
jl
adc
push
pop
push
jns
cmpsl
push
lret
xchg
mov
dec
mov
cwtl
idivl
lods
subb
call
jns
adc
cld
sbb
add
lea
push
xchg
mov
sbb
orb
or
pop
roll
mov
aaa
add
mov
movsl
xor
push
sbb
mov
pop
adc
aam
bound
push
das
inc
out
fadds
push
push
inc
gs
mov
out
inc
jb
jb
clc
jb
sub
insb
or
jmp
in
inc
add
adc
xchg
pop
add
lods
adc
lcall
push
cmp
or
and
test
jbe
mov
movsl
rcrl
mov
dec
hlt
shr
jecxz
adc
lods
sbb
andb
ficoms
pop
mov
out
mov
push
dec
out
stc
pop
cmpsb
bound
subl
nop
test
adc
jle
xchg
dec
rep
cmp
mov
hlt
adc
or
mov
inc
nop
mov
lds
mov
cld
cmp
je
jns
xlat
icebp
cs
mov
add
in
sbb
lods
mov
jb
es
sti
lcall
les
outsb
jecxz
ja
sub
adc
ljmp
inc
and
lods
fistpl
pop
out
sete
fnstsw
or
popa
adc
cmp
mov
push
shl
in
push
adc
sbbl
in
cld
xor
ret
push
inc
push
mov
dec
cmp
gs
and
xchg
and
mov
enter
outsb
test
lods
jle
cmp
pop
xor
jmp
xchg
xorl
sub
imul
ja
inc
mov
sbb
mov
fcmovne
outsb
scas
aad
inc
lods
movsl
dec
cld
lret
popa
xor
int3
bound
or
test
xor
clc
sub
popa
sahf
or
je
out
dec
sbb
imul
sbb
sbb
les
fs
mov
xlat
mov
push
arpl
arpl
je
fiaddl
jmp
fwait
mov
dec
xchg
test
push
daa
xchg
test
in
push
in
push
out
mov
pop
js
in
es
jne
insl
repnz
lcall
xor
int3
cmp
arpl
add
cmp
notb
roll
clc
fcompl
adc
xor
and
xor
js
sub
sbb
mov
lahf
mov
scas
jo
xchg
xor
inc
dec
sub
adc
out
jge
pop
test
sub
leave
mov
mov
and
filds
and
adc
jns
add
pop
cmp
sahf
mov
pop
cld
in
jae
mov
jno
push
stos
pop
jnp
inc
mov
pop
push
xchg
loope
jle
iret
dec
mov
pop
sbb
mov
dec
xor
out
cmc
out
mov
int
scas
jne
or
bextr
mov
adc
push
mov
fistps
xchg
jo
movsl
mov
sbb
lea
adc
scas
jmp
fwait
mov
clc
lret
adc
mov
dec
iret
inc
sahf
xchg
xor
movsb
cmp
fucom
adc
ret
sbb
pop
inc
repnz
push
mov
loopne
xchg
sahf
inc
jo
mov
pop
sbb
xadd
sub
cli
test
loop
ljmp
adc
and
and
pusha
popf
clc
xchg
push
or
fildll
pushf
cmc
test
mov
mov
flds
lret
sub
or
push
lcall
cmc
mov
jg
xlat
mov
cmc
xor
in
dec
mov
rcll
pushf
mov
push
mov
mov
loope
imulb
ficompl
mov
sbb
add
cmpsl
push
rcrb
loopne
cmc
fwait
and
sub
xchg
scas
es
mov
push
or
mov
xor
bound
test
and
jl
mov
xor
jle
dec
inc
xchg
mov
mov
movsb
in
mov
inc
popa
fstpl
mov
gs
push
pop
lahf
and
fisubs
push
orb
pop
jo
cltd
jg
call
iret
mov
xchg
mov
sbbb
iret
sub
nop
dec
hlt
mov
xchg
stc
imul
push
popa
mov
aaa
stos
sar
test
ret
dec
loop
inc
cmpsl
and
cmc
out
mov
xchg
notl
int3
and
push
mov
push
mov
dec
mov
add
mov
cmp
jle
inc
sbb
test
xchg
push
repz
popa
mov
mov
dec
imul
notb
pop
sbb
cmp
addr16
stc
es
fcomip
jo
or
xchg
aam
jmp
sbb
or
mov
movsb
mov
cmp
arpl
sbb
add
push
mov
adc
insb
push
movsl
or
xchg
pop
mov
fistpl
push
mov
addr16
or
sti
ret
mov
push
sbb
sub
test
inc
pop
cwtl
or
mov
inc
mov
and
mov
or
pop
fdivrl
push
mov
icebp
out
aam
inc
js
adc
subl
push
cmpsl
stc
repz
xorl
xor
or
and
leave
in
mov
push
push
outsb
sub
testb
loop
cmp
fisttps
mov
outsl
or
mov
mov
jp
mov
add
add
jecxz
popf
push
fdiv
jl
or
xchg
add
repz
fldenv
and
in
sti
mov
add
aad
add
jmp
fucomip
out
test
shll
adc
aad
pop
sbb
pop
and
mov
cmp
lret
mov
movsb
lea
adc
mov
pop
pop
jg
sub
jmp
leave
xchg
mov
out
cmp
mov
daa
sub
js
fiaddl
jns
loope
pop
push
loopne
pop
adc
xor
mov
aam
hlt
repnz
sub
sbb
mov
adc
cmp
cmp
add
test
mov
fiaddl
arpl
mov
or
nop
push
sub
push
add
notb
cmc
push
sbb
cmp
js
bound
xchg
mov
pop
mov
movl
inc
adc
add
xchg
sbb
bnd
sbb
jmp
mov
push
mov
cmp
test
pop
or
jl
call
add
cs
stos
in
mov
mov
adc
push
aas
push
push
mov
je
mov
or
movsl
or
lret
xchg
addr16
test
leave
adc
dec
les
xchg
inc
hlt
pop
adc
pop
jmp
test
add
ret
movsl
and
xor
mov
jbe
sbb
leave
sbb
jno
mov
mov
int3
mov
sbb
out
jbe
cmp
aas
out
mov
add
js
rcr
inc
scas
clc
repz
xor
ror
test
hlt
add
xchg
xor
fs
aas
roll
mov
mov
pusha
aad
sbb
fisubs
mov
int
and
jle
pop
cmp
ret
out
or
lret
bswap
mov
mov
cmp
andl
outsb
pop
ja
ficoms
mov
xchg
out
in
sbb
jo
mov
shlb
and
fst
mov
stc
out
mov
cli
cmc
scas
shll
dec
inc
lods
sub
mov
movsb
cmpsl
loop
mov
push
sbb
rolb
add
cmpsl
imulb
mov
clc
jnp
outsl
in
fcmovb
push
sbb
and
adc
or
xchg
cmp
outsb
jmp
dec
leave
popa
add
adc
out
push
cs
icebp
aam
xor
scas
adc
pop
sbb
mov
das
cmc
jle
ret
push
out
sarb
mov
push
int3
jo
sahf
daa
inc
rolb
in
ror
jecxz
fwait
mov
mov
push
sub
sbb
inc
loope
inc
ffree
mov
push
pop
jnp
loope
jo
dec
insb
loopne
hlt
data16
and
ret
cmp
push
mov
push
cld
cmp
dec
ret
dec
imul
dec
mov
je
fwait
lods
mov
ja
pop
push
cmpsl
incb
cmp
ss
aad
mov
or
dec
jbe
mov
fadd
test
scas
iret
inc
add
fwait
pop
mov
cld
add
cltd
imul
out
out
jl
call
cmpsb
fisubs
shll
dec
xchg
leave
adc
sub
lcall
dec
cmpsb
dec
aad
into
push
adc
mov
push
push
leave
out
dec
dec
sub
xchg
mov
adc
xchg
push
addr16
scas
pop
xor
sbb
xchg
jl
lds
inc
mov
xchg
test
in
push
dec
dec
cmpsl
clc
sarb
or
sub
shr
stc
jmp
loope
fnsave
xor
lcall
adc
sbb
aam
imul
xchg
and
mov
mov
xchg
sbb
push
rclb
xor
pushf
pop
jns
out
fcompl
jecxz
aaa
and
cmp
or
jecxz
pushf
aad
pop
cmc
ja
orl
sub
dec
adc
hlt
aad
enter
repnz
mov
dec
imul
lret
stos
and
xchg
inc
enter
test
jmp
mov
fdivrs
fnstenv
jo
jns
xor
xchg
int3
mov
imul
xor
lock
dec
std
mov
fdivr
push
push
out
mov
push
push
cld
test
hlt
xchg
dec
rcr
sar
hlt
xchg
jne
push
xlat
mov
adc
gs
out
dec
sbb
mov
scas
dec
aam
aas
inc
xor
lock
fiadds
dec
imulb
ss
adc
push
push
cmp
adc
add
xor
in
cmp
xchg
sbb
in
test
mov
and
adc
stos
cwtl
repnz
push
and
pop
inc
and
jnp
in
lods
cmp
loope
ret
cmp
call
dec
mov
lea
or
jle
scas
cmp
adc
fidivrl
push
enter
cmp
into
stc
rorl
out
dec
psadbw
mov
xor
adc
cmp
push
dec
stos
outsl
pop
xor
lret
iret
mov
aas
pop
sub
mov
imul
mov
and
sbb
aam
lret
jecxz
mov
stos
ja
pop
or
scas
ret
mov
testl
imul
xor
notl
pop
pusha
inc
pop
cmp
into
xchg
shll
push
push
mov
sbb
aam
aam
add
mov
fs
sub
sbb
add
lahf
out
nop
adc
push
mov
mov
or
rcrb
jge
xor
xchg
outsl
xchg
loop
and
aas
push
movsb
outsl
jnp
cmc
lods
adc
pop
xor
out
mov
mov
dec
inc
inc
in
xor
int3
jle
aas
loopne
test
lds
scas
mov
movsl
xorl
mov
mov
jno
adc
jle
loop
sbb
sbb
cs
xor
cltd
push
cmp
in
cli
mov
xor
cmp
cmp
jecxz
ljmp
test
sub
adc
ss
dec
sbb
out
loopne
inc
or
jb
pop
push
stos
data16
mov
xor
add
mov
mov
nop
mov
mov
imul
push
movntq
out
fucomi
mov
sbb
dec
call
jmp
push
mov
js
and
fisubl
or
sub
or
repz
and
jb
pop
mov
jno
je
xor
or
sahf
repz
pusha
push
into
aam
pop
and
push
adc
pop
in
add
xchg
rclb
mov
addb
repz
add
fadd
adc
xlat
inc
cwtl
jle
cmpsb
cltd
test
xchg
fsubrl
sti
sbb
in
aas
mov
pop
push
shlb
adc
dec
hlt
pop
movsb
mov
iret
xor
sbb
cmp
mov
lahf
inc
sbb
sub
pop
mov
cltd
xchg
jbe
testl
dec
add
int
lods
xor
imul
insb
jle
xchg
push
stc
push
or
test
mov
sub
xor
and
pusha
ja
adc
xor
pop
sbb
xchg
fsubrl
sub
mov
mov
test
or
test
jmp
push
jbe
iret
or
pop
ficoml
pop
movb
inc
adc
fnstcw
pop
pop
hlt
cmpsl
jg
xchg
ja
pop
mov
fs
mov
dec
lea
push
repz
enter
push
mov
xchg
out
add
pusha
xorb
mov
sbb
test
stc
test
roll
ret
int
add
push
ja
inc
adc
bound
cmp
xchg
pop
add
xor
cmpb
dec
mov
aaa
icebp
ror
add
ja
mov
dec
inc
enter
add
mov
mov
or
data16
and
and
test
push
scas
ret
je
jle
mov
movsl
xor
sub
sbb
incl
adc
push
sahf
sub
push
pop
push
mov
sbb
out
int
shll
fs
sti
and
fwait
jne
jmp
jae
pushf
mov
lret
xchg
insl
inc
push
ljmp
mov
out
sub
nop
repz
adc
jae
mov
testb
mov
push
lret
pop
clc
inc
nop
jmp
addr16
shll
push
mov
push
mov
dec
adc
mov
inc
gs
xchg
or
stos
push
or
repnz
roll
pop
push
jns
mov
inc
pop
inc
or
xlat
cmp
pop
imul
xchg
test
xor
imul
sbb
lds
mov
ret
xchg
rcrl
pop
invd
pop
and
mov
insb
mov
out
hlt
mov
dec
sbb
gs
neg
fildll
mov
shrb
sub
js
add
fistpll
movsl
sbbb
test
lods
dec
jae
cltd
push
lcall
movq
xchg
xchg
cmp
inc
xrelease
pop
dec
sub
ret
loope
jecxz
push
in
ret
mov
or
scas
fstpl
insb
jne
sub
and
shrl
fwait
sahf
int3
inc
mov
pop
cmp
xchg
ret
adc
in
dec
shlb
pushf
sbb
jmp
outsb
andb
je
pop
xchg
lret
ret
sbb
sub
lea
jmp
sar
pop
pop
dec
mov
shrb
loop
xchg
and
fwait
mov
std
inc
sub
mov
aaa
call
xlat
imul
xchg
add
jbe
shrl
push
mov
adc
push
ficomps
mov
mov
cmp
cmpsl
cmp
pop
lcall
mov
xchg
jp
sahf
push
mov
mov
insl
rcl
sub
jno
sub
adc
inc
int3
movsl
mov
lods
jb
cli
sub
sahf
ds
sub
add
cwtl
mov
jmp
push
enter
mov
pop
or
mov
and
insl
ss
stos
jmp
push
outsl
loop
test
movsl
lods
mov
push
lods
outsl
xchg
xchg
mov
inc
int
add
dec
jle
ret
add
xchg
fs
or
into
lds
mov
aas
icebp
mov
test
repnz
es
out
imul
sbbl
inc
fldt
in
mov
sbb
mov
ja
ret
jmp
xchg
jmp
pushf
stos
mov
jbe
jge
notl
lret
mov
cmpsl
into
pop
lret
imul
popf
jl
cltd
test
repz
sbb
loope
sub
sbb
pop
push
push
sbb
adc
movsb
data16
dec
dec
jbe
enter
and
pop
cli
sub
nop
mov
dec
lahf
jg
stc
movsb
or
xchg
push
xchg
imul
jmp
lods
mov
jle
loope
dec
push
lods
in
shrb
ret
dec
xchg
cmp
inc
cmp
fldcw
mov
inc
arpl
int3
arpl
fidivrs
sarb
jge
push
out
xchg
lods
lahf
mov
add
push
or
mov
add
xor
js
xchg
test
insl
mov
inc
sbb
in
sbb
mov
xlat
push
jmp
mov
mov
les
int
or
fsubr
mov
or
mov
cmc
adc
maxps
cwtl
inc
movsb
insl
neg
xchg
dec
mov
je
ljmp
sub
add
lds
enter
orl
mov
repnz
pop
inc
insl
or
imul
push
out
js
shlb
push
push
push
or
mull
add
jp
fsubs
cwtl
fldl
ja
cmpsl
scas
or
les
sets
adc
ja
outsb
popf
in
add
push
fwait
in
cmp
xchg
mov
outsl
std
icebp
adc
push
lods
mov
mov
stos
loopne
pushf
xlat
cld
adc
adc
push
xchg
sti
in
push
sbb
outsb
xorb
xor
gs
in
add
mov
jno
cs
loopne
aas
pop
push
enter
daa
mov
cld
in
call
pop
jge
xchg
add
stos
ds
cmc
lret
sbb
sub
into
inc
addr16
mov
aaa
arpl
js
mov
mov
pop
rolb
das
lcall
je
push
ret
cs
push
aas
xor
xchg
sbb
shr
cwtl
pop
addr16
jmp
xor
inc
adc
sbb
fisubs
imul
das
jle
inc
xchg
rcl
mov
push
and
iret
ret
testb
adc
jmp
into
idivl
xor
or
movsb
ss
out
fsubl
mov
aaa
pshufw
pop
mov
dec
push
dec
push
cmpsl
in
cmp
fimull
subb
arpl
push
mov
pop
adc
stc
push
idiv
or
dec
stos
or
push
cmc
scas
sahf
or
pop
pop
test
adc
mov
lcall
sub
sbb
jg
jne
aas
mov
mov
mov
inc
and
lcall
pop
fsubl
mov
jbe
pop
out
adc
and
shll
stc
dec
or
dec
pop
lret
bound
pop
repz
sahf
mov
sbb
push
arpl
push
sbbl
out
mov
shrb
addr16
push
dec
aaa
cmp
cmc
or
addr16
int3
decb
sub
out
std
xchg
xchg
dec
inc
jno
addb
and
mov
push
add
ds
dec
jp
sub
push
xor
adc
cmpsl
loopne
mov
mov
aaa
out
test
and
add
jecxz
repnz
push
mov
mov
movsb
dec
hlt
dec
pusha
iret
cltd
mov
icebp
stos
movsbl
xchg
jg
push
cld
mov
popf
jnp
iret
pop
pop
xor
mov
test
enter
push
push
test
add
pushl
enter
loope
stos
daa
add
inc
and
dec
mov
sbb
sub
jns
inc
lcall
xor
shrl
jne
and
dec
fsubr
sbb
mov
add
add
cmpsl
scas
out
outsl
mov
inc
movsb
negb
mov
mov
xorl
jo
sbb
xchg
push
sub
dec
sub
leave
pop
fyl2x
mov
mov
out
enter
mov
outsl
dec
mov
jge
jmp
leave
dec
ja
mov
push
mov
adc
repz
rclb
and
push
pushf
sbb
shlb
pop
andl
fidivl
insl
and
ja
loopne
add
lret
in
mov
inc
xorb
imul
jo
sbb
nop
push
rclb
data16
loope
adc
push
shr
cltd
inc
inc
and
push
stos
aad
pop
jp
cmp
mov
notl
dec
mov
sub
imul
xor
jl
inc
scas
mov
pop
adc
testl
imul
fidivs
imul
out
popf
xor
sbb
push
xchg
mov
xchg
lock
aaa
sarl
add
push
push
call
and
add
sbb
mov
inc
jmp
popa
xchg
addl
and
jbe
jecxz
cmc
sub
xchg
xchg
subb
and
mov
jae
pop
rol
scas
fisubl
fstpl
mov
fcoms
mov
jg
in
icebp
pop
out
fucomp
idivl
std
dec
repnz
jne
gs
ja
dec
stos
xor
cmp
cmc
insb
push
or
call
rorl
sbb
pop
pop
or
mov
and
sub
adc
push
add
push
lods
mov
push
xchg
int
adc
inc
out
test
add
mov
pop
push
mov
dec
mov
dec
std
cli
xchg
stos
pop
jge
pop
inc
movsb
inc
pop
jp
sbb
jecxz
repnz
push
xchg
mov
or
push
xchg
sub
into
in
mov
mov
xor
test
and
xchg
fwait
add
enter
cmpsl
sub
or
cltd
mov
iret
ret
mov
sub
mov
in
mov
sub
mov
sub
arpl
loopne
push
mov
movsl
scas
or
xchg
in
cmp
sahf
xor
mov
shll
sub
jae
seto
ror
test
xchg
xor
fists
in
and
lret
or
lods
call
xor
pop
sub
sar
pop
sbb
sbb
sbb
mov
arpl
rcr
mov
dec
repz
test
sbb
jns
cmp
mov
movsb
sbbb
or
fdivp
int3
stos
std
icebp
or
fildl
scas
js
lahf
fnstsw
bound
add
pop
jo
movsb
pushf
mov
xor
dec
jbe
and
lahf
pusha
adc
lock
sub
je
int
int
negl
xchg
mov
cmpl
test
jg
int
std
adc
aaa
dec
sbb
cld
sahf
jmp
sti
shll
adc
mov
xor
pop
jl
scas
cld
inc
pop
hlt
or
out
cwtl
pusha
xchg
push
dec
xchg
jmp
push
push
imul
in
jg
aad
cltd
pop
push
shll
adc
fcmove
icebp
add
imul
dec
push
pusha
adc
ret
and
dec
lahf
stos
fidivrs
inc
and
mov
adc
in
push
mov
aaa
and
fwait
dec
pop
out
test
cmp
sub
lcall
stc
imul
scas
mov
sbb
mov
cmp
add
mov
mov
or
sahf
mov
add
add
imul
mov
xlat
mov
mov
nop
xor
stos
int
clc
roll
xor
cmc
jns
cli
xchg
adc
fsubr
imul
jns
pop
jnp
sub
lea
lock
test
data16
jne
mov
fadds
outsl
xor
out
sbb
call
cs
jae
jmp
and
pop
cmp
cs
push
push
divb
xchg
mov
int
scas
jmp
stc
scas
fistpll
pop
inc
push
ror
mov
cmpsb
in
lahf
sbb
faddp
mov
fstps
incb
push
hlt
cmp
xlat
push
sub
fwait
out
mov
mov
movsb
js
hlt
aas
inc
mov
call
je
movsl
sbb
dec
adc
arpl
ds
popf
sbb
lods
ja
cmp
ret
lret
dec
push
pusha
pop
sub
inc
sti
shl
into
test
jp
shl
push
add
adc
push
sahf
add
jecxz
fwait
push
mov
xor
filds
repnz
ret
and
xorb
dec
fbstp
andb
cmovb
movsb
mov
mov
push
cmp
sbb
push
push
addr16
mov
pusha
clc
adc
sub
jae
adc
push
aad
pushf
lcall
sbb
push
lods
dec
add
dec
pop
orb
repz
fsubrs
mov
push
pop
jge
push
out
add
mov
loope
iret
mov
fwait
sti
cmc
stos
mov
ss
hlt
xor
rcr
jge
fisttps
jbe
xchg
xor
movsb
loop
xor
inc
push
rcrl
aas
loop
inc
fs
or
cmp
addl
loop
movsb
lcall
sbb
pop
sbb
jns
mov
inc
cmp
nop
or
sbb
cltd
jb
dec
dec
in
ja
push
outsl
shll
jp
filds
dec
pop
add
mov
add
jae
ret
cli
pop
sub
or
cld
mov
insl
arpl
punpckldq
popf
xchg
das
clc
dec
jge
mov
in
mov
insb
add
aam
xor
pushf
lahf
pmullw
pop
popf
pop
scas
sbb
or
and
and
mov
inc
jp
popa
aaa
in
and
scas
out
fiadds
and
jl
dec
adc
scas
dec
in
jle
bound
or
cmp
ret
and
cmp
cmpsb
jno
pop
add
ss
pop
lods
sbb
cmp
jmp
xchg
push
adc
cli
xor
xchg
sub
jg
push
dec
bound
push
dec
test
loop
clc
jle
mov
arpl
mov
xchg
ret
rcll
adc
inc
outsl
les
in
int3
sbb
xor
add
ljmp
mov
fists
cmp
sbb
cld
lods
scas
xor
push
dec
lret
daa
inc
shll
ljmp
adc
rorl
test
sbb
inc
mov
xlat
out
stos
out
sbb
mov
ds
push
cmp
xchg
sub
daa
pop
dec
adc
int
jge
jb
addr16
sbb
jnp
or
ds
jo
xchg
fidivl
xorl
adc
sar
push
enter
xor
cmp
loopne
jmp
dec
test
sahf
dec
pop
bound
popa
pop
ret
mov
cli
loope
int
das
shll
adc
mov
ret
mov
test
jno
push
mov
popa
icebp
mov
mov
xchg
pushf
cltd
cmpsb
inc
pushf
sbb
sbb
lahf
xchg
frstor
testl
jae
lcall
fimull
adc
lods
lahf
pop
cmp
hlt
mov
inc
lahf
aam
fldcw
xchg
push
mov
inc
add
insl
inc
xchg
in
repnz
sub
mov
ja
xor
lods
in
daa
test
jb
mov
jmp
outsl
mov
lret
sbb
and
pop
fadds
xchg
addr16
push
dec
insl
xchg
je
or
orl
call
fsubr
xchg
push
pop
pop
xchg
cwtl
es
loopne
sub
mov
nop
outsb
add
sbb
pop
hlt
aas
repz
dec
loop
andl
cmc
or
adc
inc
inc
ss
ret
inc
ja
test
or
stc
inc
lahf
mov
fldcw
divb
inc
cmp
jns
int3
mov
mov
xlat
leave
xchg
jnp
jg
dec
cmp
pop
or
in
scas
mov
jle
adc
aam
mov
neg
push
rclb
mov
push
into
mov
mov
push
sti
add
push
outsl
push
inc
out
nop
aad
mov
das
dec
mov
mov
dec
push
movsl
mov
jp
test
adc
cmp
push
sbb
mov
jp
out
dec
repnz
and
mov
xor
imul
sbb
push
decl
jns
xlat
push
mov
mov
adc
fcoml
call
dec
adc
cwtl
fcmovnb
movsb
push
shlb
xchg
imul
push
and
mov
jecxz
jge
mov
or
sbb
pop
mov
add
loope
lods
int3
leave
pop
lahf
sbb
push
in
add
je
jne
stos
scas
cmp
mov
nop
fisttpll
cs
in
push
xchg
popf
cmp
pop
mov
xchg
add
imul
add
and
push
movsb
cmc
add
pavgw
ja
fwait
int
mov
inc
mov
xchg
mov
xor
cmpsl
repz
pushf
xchg
lret
mov
mov
ss
pop
mov
jle
mov
les
add
shlb
xor
cld
ljmp
and
or
jns
cmp
es
mov
mov
das
shlb
jno
add
fadds
fbstp
or
or
shlb
jnp
ret
mov
test
adc
mov
sub
sub
xor
push
mov
jge
mov
addr16
int3
mov
jl
rcr
out
mov
int
cmp
and
xor
xlat
or
call
mov
jmp
rcr
repz
out
and
stos
neg
sbb
sbb
frstor
xor
dec
lods
addl
xchg
inc
push
test
xor
fs
inc
jl
mov
insl
into
fidivrl
jge
das
push
lock
rorb
cltd
push
jmp
ljmp
and
test
adc
jle
jp
mov
test
add
push
test
jg
sbb
jl
negb
push
cmp
fisttpll
sub
dec
into
sub
cmp
in
push
rorl
mov
mov
int3
sub
push
or
cltd
insb
mulb
movsl
mov
in
sahf
cmp
xchg
push
lcall
xchg
add
mov
insl
xor
push
aas
nop
push
fldt
ja
test
pop
shll
pop
sbb
push
aaa
je
push
aam
nop
fwait
lahf
rclb
mov
mov
inc
pop
dec
mov
dec
mov
subb
xchg
dec
mov
sbb
fidivs
adc
cld
jo
cmp
sbb
lock
pop
add
push
push
sub
outsb
push
xchg
sahf
in
nop
push
insl
push
adc
pop
dec
in
arpl
fldt
mov
dec
and
repz
mov
adc
add
jl
mov
dec
sbb
rol
shr
mov
sbb
jge
push
fldcw
xor
rcll
ret
das
jno
jecxz
xchg
shl
popf
xchg
or
lret
std
call
mov
cmc
outsb
sti
lea
push
fwait
adc
jb
push
repz
dec
ja
mov
sbb
iret
fisttpl
in
push
dec
or
mov
cmp
loop
ret
or
inc
in
pop
lds
adc
scas
pslld
xchg
xchg
sti
sbb
js
fwait
cmc
add
nop
mov
mov
mov
dec
in
add
dec
xchg
lret
leave
sub
shlb
in
out
ss
stc
push
xor
out
or
push
mov
sbb
je
dec
je
mov
push
mov
or
mov
pop
mov
leave
leave
ficompl
lahf
mov
jno
test
in
fwait
repz
pop
adc
mov
pop
aaa
xchg
cmp
push
sti
fistpl
dec
outsb
and
adc
xchg
adc
stos
out
ja
push
outsb
int3
jge
mov
mov
adc
cltd
or
push
add
dec
out
mov
sbb
pop
jle
cmpsl
mov
or
mov
lods
pop
aad
push
data16
call
sbb
xchg
push
fsubr
sti
push
call
push
xchg
aas
iret
jno
clc
ss
lods
pop
mov
test
adc
rcrb
cmc
adc
jle
xor
pop
mov
negl
mov
push
push
add
ss
sti
or
cmp
popl
inc
scas
scas
pop
xor
mov
jbe
call
dec
aas
icebp
sbb
inc
stc
rorb
cmp
insb
clc
add
cmp
push
push
mov
scas
enter
cltd
push
push
xor
cmp
idiv
mov
jnp
stos
cld
jne
mov
inc
jb
mov
push
pop
xcrypt-cfb
cmpsl
and
pop
and
loope
into
cmp
inc
jnp
add
jbe
sub
lock
icebp
in
cmpsl
and
movsl
test
xchg
mov
mov
jnp
and
sub
mov
pop
loope
leave
add
add
dec
iret
rolb
fdivrp
dec
push
setl
movsb
popf
mov
test
int3
cs
ds
fxch
cmp
or
mov
lret
iret
shr
push
mov
addr16
in
pop
imul
stos
shll
ret
or
mov
ljmp
gs
out
push
cli
push
xchg
jle
jb
inc
sbb
mov
inc
adc
je
dec
jnp
popf
jmp
pushf
cmp
clc
inc
into
aad
pop
fcomps
cmp
ficoml
cli
dec
inc
lods
fcompl
push
mov
push
xor
cli
dec
sbb
shrl
rol
jo
inc
ja
mov
ret
xchg
or
pop
jecxz
test
shrb
xabort
icebp
lea
and
ljmp
sub
icebp
push
aad
or
imul
fldt
jb
out
lcall
sub
in
pop
mov
lea
popf
dec
lods
cmp
rolb
dec
out
les
pop
clc
add
cmp
jecxz
cs
fmul
pop
mov
lods
dec
daa
dec
xchg
inc
pop
inc
pop
dec
fsubrs
jo
xor
inc
sbb
stos
mov
gs
fwait
add
jp
std
push
push
negb
xor
xor
loopne
or
xchg
in
mov
int
mov
xchg
fwait
xchg
mov
cmpsl
cmc
clc
outsb
and
xchg
add
gs
mov
ret
out
clc
and
inc
inc
jle
xchg
popa
cmpb
daa
push
mov
in
push
or
or
mov
loopne
dec
push
xchg
adc
leave
mov
aas
sub
in
push
xor
repz
mov
pop
in
bound
repnz
cmp
add
xor
lcall
jb
push
adc
and
mov
mov
add
mov
adc
mov
jb
mov
js
pop
mov
lods
xchg
popa
out
call
cltd
adc
mov
and
pop
sub
js
adc
test
cmp
jecxz
push
ds
out
imul
add
iret
rorb
sbb
stc
or
lods
or
cli
jecxz
pop
and
mul
jecxz
es
xchg
movsb
xchg
pop
ret
adc
push
testl
cmp
cmp
xor
call
lods
inc
shlb
cmp
dec
add
dec
mov
adc
adc
jbe
notl
pop
mov
int
mov
jmp
pop
jmp
movsb
mov
dec
imul
mov
imul
mov
mov
out
fwait
mov
mov
in
sub
icebp
rcr
por
jmp
push
clc
push
mov
stos
xorl
in
sub
jmp
adc
xor
mov
repnz
sti
int
mov
aad
push
pop
loopne
mov
aaa
imul
sbb
das
decb
cmc
imul
adc
cmc
inc
xchg
mov
imul
dec
not
int
sarb
lds
pop
mov
fcmovne
popa
add
aad
mov
inc
pop
mull
js
push
mov
mov
fldcw
dec
stos
xchg
sub
mov
inc
scas
inc
mov
inc
aad
outsb
and
lods
inc
mov
vorps
dec
cmpsb
lods
jge
shll
in
insl
adc
notl
cltd
int
jo
ret
push
idivb
shl
mov
jmp
jge
mov
lahf
lret
xchg
insb
push
call
pop
les
dec
out
xor
dec
pusha
and
jmp
or
lods
stc
inc
pop
cmp
scas
stos
inc
int3
leave
add
addr16
sahf
sbb
into
inc
pop
jge
ficoms
ja
popf
jno
insb
mov
or
std
xchg
les
mov
ja
fbstp
ret
add
cmp
jl
in
cltd
iret
shrb
dec
xchg
mov
in
fdivs
push
jge
lret
test
cs
pop
mov
dec
mov
outsl
fildll
sbb
pop
or
orb
fsubrp
dec
aaa
push
pop
fst
pop
pop
sub
loop
push
rorl
mov
ljmp
fiadds
ja
ljmp
sbb
js
js
jp
jmp
mov
sbb
pop
cmp
outsl
lock
pop
fisubs
fmul
adc
ja
push
pop
testb
movsl
xchg
cmp
rcrb
leave
xor
sahf
sub
xchg
jno
inc
jge
int
adc
sti
jp
jbe
xchg
mov
das
dec
mov
push
add
js
adcl
mov
dec
cwtl
stos
jp
aam
outsb
sbb
sub
cltd
adc
and
sub
aam
enter
in
mov
jnp
xchg
popf
pop
and
add
out
adc
lods
and
cmp
out
loope
adc
std
ja
cld
and
test
lret
adc
shrb
xchg
add
jne
mulb
xchg
pop
add
mov
sbbl
pop
cmpl
imul
scas
in
adc
inc
push
fmulp
mov
jl
mov
loop
add
jne
jmp
cmpsb
pop
lcall
jb
jp
push
adc
fsubrs
fsubrs
mov
rolb
icebp
jns
sub
imul
push
lea
lock
mov
out
xor
lret
call
dec
dec
lret
call
and
incb
rcrb
outsb
sbb
adc
pop
pop
dec
fcomp
and
jmp
mov
out
add
mov
sbb
mov
push
adc
jb
fcoml
lock
cmp
xchg
cs
lret
mulb
inc
jl
and
xor
lds
in
push
adcl
add
add
xor
xchg
scas
or
mov
push
cwtl
rcr
dec
or
mov
adc
ret
js
inc
cmpsl
push
mov
xchg
add
inc
lods
dec
jo
rcrb
jb
and
and
pop
sub
loop
ds
ss
inc
dec
mov
xchg
mov
push
out
loope
mov
add
clc
add
fists
outsl
xchg
std
cli
inc
es
scas
loop
cs
imul
cwtl
das
push
test
clc
daa
cmc
dec
fildll
stos
sub
in
outsl
inc
js
fwait
je
xchg
insb
insl
dec
jg
scas
dec
xchg
inc
popf
movsb
pop
lahf
ret
xor
and
push
xchg
loopne
aad
inc
mov
and
pop
push
stos
inc
ss
xorb
outsl
xor
push
mov
insl
lea
int
ret
arpl
out
cmp
mov
cmp
mov
jbe
and
in
dec
sbb
popa
mov
add
mov
sbb
aaa
ss
cmp
lock
and
xchg
dec
and
jno
imul
std
xchg
and
out
inc
movsb
pop
cwtl
sub
dec
loopne
xchg
aas
movsb
mov
sbb
int
push
xchg
sbb
push
dec
adc
mov
adc
fisttps
aas
mov
vmaxsd
cmpsl
movsl
and
ror
jge
fdivs
jne
fwait
sarb
hlt
repnz
jb
add
sarb
xchg
cmp
incl
mov
inc
sub
jne
call
into
std
clc
inc
inc
pop
bound
push
in
nop
lods
ljmp
jb
lods
lahf
ss
mov
es
subb
in
outsb
stc
pop
fimuls
outsl
orb
mov
loop
fwait
push
pusha
lcall
xor
arpl
xor
mov
fisttpl
pop
or
inc
fcomps
mov
push
push
lret
pop
out
dec
sti
int
call
dec
or
enter
icebp
cmpsb
cmp
pusha
dec
testb
mov
fcomip
shrd
mov
pop
push
and
out
mov
subb
mov
fs
addr16
dec
dec
orl
rcrl
mov
ror
xor
lock
int3
push
dec
fnsave
push
or
ret
mov
lret
ret
lret
mov
or
push
flds
lods
mov
or
mov
jns
or
xchg
pop
mov
sub
nop
fistpl
mov
not
outsb
out
xchg
cwtl
out
dec
decl
mov
jno
movsb
and
scas
jle
jo
pop
sbb
aad
inc
lret
jge
push
mov
xchg
jecxz
dec
sbb
fstpl
arpl
cmpsb
jmp
lods
sbb
xor
out
pop
inc
lea
mov
mov
jno
test
test
mov
insl
cs
adc
aad
pop
mov
mov
push
cmovo
loope
mov
push
stos
mov
xchg
je
fsubs
xchg
or
sub
xorb
jecxz
test
pop
jbe
mov
sbb
cmp
cwtl
out
rcrb
insl
cmpsl
rep
mov
jg
adc
jmp
pop
scas
jno
imul
mov
xor
add
pop
xchg
roll
notl
in
or
jo
leave
ret
or
and
lret
mov
mov
or
push
iret
call
push
or
inc
call
loope
pop
bound
imul
sahf
xor
aad
cwtl
or
loope
mov
mov
or
int
jbe
sbb
cli
xor
test
rcll
xchg
mov
cmpsl
dec
pop
dec
push
into
pop
xor
loope
shrl
dec
call
mov
cs
lea
dec
or
jb
sti
xor
push
rol
add
inc
mov
test
sub
fsubs
int3
inc
mov
lods
jmp
xor
iret
outsl
jbe
push
and
dec
xchg
lds
loop
call
and
xchg
inc
fildll
xor
cmc
push
lock
loop
sbb
mov
popa
pusha
cmp
lock
testl
stos
cld
lret
enter
das
lds
pop
out
psubd
sub
rcrb
mov
dec
lds
or
stos
mov
jp
jb
mov
xchg
ret
add
inc
std
sub
add
adc
cmp
xchg
popf
or
int
dec
test
ret
mov
fs
inc
sub
repz
popa
subb
rorl
dec
sbb
add
mov
imul
loopne
cmp
and
fs
and
dec
mov
jbe
dec
mov
push
add
movsb
jle
mov
cmp
mov
test
dec
push
push
test
sub
cmc
incb
faddl
shll
mov
lods
sbb
fmull
add
out
daa
loopne
xchg
out
data16
fstl
and
movzbl
popf
int
insl
pushf
push
cli
shl
jo
orb
dec
test
mov
decb
mov
sub
cs
add
test
fimull
leave
push
cmp
andl
imulb
lahf
aaa
xor
mov
sub
push
test
es
or
aad
adc
mov
lods
test
int3
sbb
rcll
shll
lret
bound
jmp
xor
lock
stc
dec
or
stos
push
adc
fcmovnu
push
push
out
inc
movsl
ljmp
lock
cmp
lods
adc
loop
xor
out
stos
pop
dec
sahf
fisubs
notl
pop
xor
mov
cmpb
arpl
fsubrs
cmp
xchg
cmp
je
scas
xlat
adc
inc
mov
fs
stc
pop
or
mov
push
inc
lret
cs
and
sbb
dec
cmp
popa
lea
dec
arpl
jno
lea
fs
jmp
ret
sub
cmpsb
sub
inc
push
fs
in
ja
cmp
aam
pusha
lock
ret
movsb
push
lret
popa
stc
outsb
out
jne
dec
call
sbb
mov
sahf
out
jge
mov
pushf
test
xchg
mov
mov
sub
jl
mov
add
aas
test
mov
mov
imul
inc
mov
pushf
out
cmp
test
ret
pop
mov
test
mov
inc
xchg
inc
cmp
cmp
mov
mov
xor
or
rcll
out
loopne
xor
push
sahf
loope,pt
inc
lods
jae
inc
movsl
addl
sbb
xor
icebp
ret
lea
ds
and
cli
stos
or
dec
sub
clc
sub
inc
adc
cwtl
outsb
test
xlat
or
outsb
arpl
lcall
mov
imul
in
les
pop
push
arpl
test
adc
pop
mov
pop
cmp
fs
cwtl
adc
add
test
adc
sbb
mov
push
adc
lcall
jbe
pushf
sahf
sub
dec
xchg
enter
add
lds
mov
aad
jb
sbbl
shl
adc
push
mov
mov
fcoml
xchg
jns
fmuls
call
adc
adc
sub
mov
push
pop
mov
mov
mov
mov
les
or
inc
xchg
mov
fwait
mov
dec
sahf
das
hlt
add
xchg
pop
pop
and
fidivrs
and
movsb
mov
out
in
roll
mov
dec
std
insb
sbb
pushf
insb
into
xchg
adc
mov
pushf
sbb
jmp
or
mov
dec
ret
div
test
sets
loopne
mov
or
cmp
mov
jle
mov
inc
jb
lods
sbb
fcoms
shll
movsb
fisttpl
adc
out
mov
fcmovne
sub
shll
pop
aas
sub
dec
dec
inc
scas
xchg
sqrtps
push
mov
cmp
aad
dec
adc
sbb
mov
cmp
stos
inc
popf
popa
loope
mov
test
dec
enter
jnp
fcomps
push
outsb
xchg
sbb
cmpsl
stos
pop
and
push
or
jecxz
push
mulb
imul
loop
pop
filds
ljmp
imul
mov
cs
and
mov
lods
movsb
pop
lcall
xorl
sub
loope
jo
ja
hlt
filds
inc
adc
adc
pop
mov
mov
pop
inc
repz
in
pushf
mov
movsb
xor
push
push
cmc
push
or
push
mov
dec
lahf
sbb
out
xor
es
adc
sbb
push
aaa
cmp
mov
gs
inc
mov
fsubr
dec
movsl
mov
mov
xorl
mov
mov
adc
lods
jmp
or
sbb
push
push
jno
cmpsb
outsl
inc
aaa
out
ljmp
rcrl
imul
div
fildll
cmp
cmp
sub
pushf
cs
adc
sub
cmp
ljmp
adc
fcomps
mov
jl
popf
sbb
sbb
test
out
idiv
sub
mov
cmc
mov
fbstp
fndisi(8087
lahf
loope
and
mov
mov
xor
out
andb
test
mov
adc
sbb
imul
xchg
scas
fldpi
mov
icebp
mov
data16
and
jle
or
push
enter
mov
adc
jae
lcall
loop
int
add
xchg
cwtl
sti
push
test
push
test
out
add
test
dec
adc
adc
test
or
adc
jp
mov
sbb
lods
clc
nop
sbb
sahf
ds
iret
daa
cld
xor
push
jle
int
or
js
testb
mov
movsb
push
call
fisttpl
rol
loopne
lea
arpl
lds
xor
push
pusha
push
inc
mov
add
lahf
push
push
dec
or
lret
scas
fbld
popa
jns
sbb
test
xchg
inc
pop
test
push
aas
xor
out
lret
or
xchg
clc
jmp
bnd
mov
fsubr
pop
mov
shll
das
sbb
inc
or
nop
push
push
push
les
enter
cmp
jbe
movsb
jp
fwait
xor
gs
push
stos
dec
out
push
lods
mov
popf
cmp
pop
mov
add
mov
add
sbb
jge
insl
std
test
sub
fcmove
sbb
sub
sbb
lods
mov
cmp
iret
cmpsl
movsb
sbb
enter
nop
dec
fstpt
cwtl
dec
data16
or
sarl
jg
test
dec
sbb
loopne
or
aaa
dec
aaa
jmp
int
pop
lret
aas
and
jg
xor
push
pop
int3
pusha
scas
pushl
outsl
jns
stos
fisubrl
rolb
aad
pop
jb
iret
adcb
add
cwtl
adc
jmp
xor
pop
xchg
or
repz
jge
jno
xlat
pop
mov
idivl
mov
int
dec
repz
and
int
int3
daa
in
mov
lock
or
aaa
or
arpl
push
fwait
aad
add
cld
inc
insb
push
xchg
push
cmc
inc
cmp
arpl
dec
in
ds
iret
jno
outsl
xor
or
fs
sti
je
mov
outsl
cmpl
jno
cs
int
mov
in
addl
fbld
jnp
xchg
or
out
mov
ja
jae
imull
jbe
popl
push
jg
test
lock
xor
jmp
aad
fcoms
xor
add
sub
scas
push
fs
fs
xchg
dec
divb
aaa
aam
cwtl
sarl
push
and
ja
fwait
push
mov
test
sbb
add
lea
xor
cwtl
sbb
movsl
add
xorb
jnp
outsb
push
addr16
push
aas
js
hlt
enter
inc
cwtl
xor
scas
ss
insl
inc
loope
add
aad
aaa
xchg
jmp
add
and
les
ja
testb
cmpb
lahf
fnstenv
popa
adc
outsb
iret
cld
ja
loope
jno
fsubrs
cmp
add
lret
sbb
cmpsl
in
or
adc
lea
pop
jg
xor
rorb
cwtl
mov
test
bound
cmpsb
arpl
in
add
xchg
mov
adc
push
aam
cmc
fisubrs
xchg
out
inc
xor
sbbb
call
mov
out
aam
repz
adc
andl
xchg
mov
sub
sbb
movsb
inc
insb
jbe
xor
sbb
divl
add
nop
clc
stos
xchg
mov
insb
push
loope
lds
lock
les
mov
mov
cmp
call
clc
cmc
xor
in
adc
sub
pop
shlb
stos
cmp
push
repz
int3
jge
shrb
icebp
mov
or
sti
dec
mov
add
fnstcw
pop
mov
imul
sub
jp
test
lods
imul
out
dec
mov
lods
sbb
add
and
mov
inc
xlat
jl
add
test
dec
jns
add
xchg
sahf
mov
movsb
stos
pop
push
xor
sbb
pusha
subl
dec
insb
fsubr
loope
pop
cmp
xor
ret
inc
in
dec
fnstenv
shll
mul
in
jg
push
add
ffreep
push
pusha
imul
call
jle
sbb
dec
out
cmp
dec
sbb
mov
shlb
add
loop
jae
mov
shrl
enter
lods
add
or
sbb
xor
icebp
pop
fisttpl
js
add
sbb
and
push
push
pop
fadds
cltd
mov
pop
sub
idivb
xchg
inc
jbe
xor
aad
mov
int
xchg
jno
cmc
imul
imul
mov
lods
js
or
fs
lret
and
sub
stos
jo
in
dec
jns
jno
shl
fwait
sub
into
dec
int3
add
popa
xchg
adc
and
cmp
sbb
mov
cli
and
jle
pop
mov
imul
iret
mov
jge
arpl
or
adc
scas
jb
mov
addr16
cmc
subb
scas
xchg
and
mov
fisubrs
xchg
dec
movswl
pop
cmp
imul
addl
dec
in
sarl
outsb
out
sbbb
in
loope
add
fldcw
inc
mov
adc
icebp
or
out
dec
data16
and
shr
mov
ja
pop
in
cmp
int
mov
pop
adc
pop
add
mov
add
lock
dec
inc
adc
popf
mov
sbb
push
ja
sbb
movsb
adc
out
inc
pushf
and
sbb
xchg
rcll
stos
xchg
ror
mov
out
push
dec
xor
cmc
push
aad
dec
xchg
lods
clc
unpckhps
pusha
sub
xor
aas
cmpl
inc
stc
jne
shlb
xchg
movsbl
sbb
pop
xlat
jecxz
daa
sub
mov
mov
outsl
cs
jnp
xchg
and
dec
pusha
dec
cmp
push
sti
movsl
mov
xor
push
mov
loope
sbb
inc
repnz
int3
in
pop
jp
lods
push
rorb
fdivr
int3
xchg
sub
jmp
and
and
pop
pop
jns
dec
inc
mov
xchg
dec
push
jmp
sahf
std
sub
mov
lds
sub
sbb
roll
es
inc
or
int3
insb
add
xchg
popf
jge
bound
inc
imul
pop
mov
in
dec
out
dec
inc
push
cmp
push
mov
cmp
inc
outsl
and
int
cwtl
cld
js
mov
adc
iret
lea
test
cmpsl
sbb
sbb
push
hlt
push
into
mov
xor
mov
stos
and
sbb
jg
ja
outsl
add
jnp
dec
mull
lods
stc
xor
ret
jge
ljmp
je
pushf
fdivrs
adc
in
stos
hlt
push
pop
test
movb
rcll
jnp
fcompl
test
xchg
sub
sbb
mov
mov
mov
sbb
or
stos
jmp
inc
sahf
mov
leave
fidivrs
mov
mov
cmp
inc
jp
xlat
cmp
sub
xor
fnsave
push
mov
addr16
sbb
sbb
ret
mov
call
push
mov
xor
sbb
cwtl
push
cmc
mov
add
mov
call
or
out
insl
and
icebp
adc
dec
mov
mov
push
mov
sbb
aaa
aaa
pop
push
in
xchg
dec
loopne
fwait
or
push
cmp
inc
cmp
int
insb
fnstsw
daa
je
int3
push
aad
xchg
loope
sbb
pop
notl
loopne
int
in
cmp
jnp
xchg
or
dec
aad
cmc
insb
mov
shlb
shl
or
mov
push
loope
sub
mov
aam
pop
mov
push
xchg
or
repnz
dec
es
sub
xor
push
add
cmp
jo
pop
jmp
mov
repz
sbb
cmpsl
dec
or
out
popa
fildll
jle
adc
jne
lods
pop
jbe
jne
cli
xchg
jb
imul
flds
out
addl
jb
or
sahf
pop
gs
imul
mov
stos
lods
xor
xor
stos
push
fwait
aad
add
add
add
or
cmp
sbb
push
pop
pushf
lock
hlt
lock
aad
fs
adc
dec
sub
sub
cmp
in
out
dec
test
cmp
popa
enter
inc
pop
xchg
cmc
add
sub
test
jae
aas
mov
js
sub
cmp
sbb
ffree
lahf
ret
js
adc
cmp
xchg
jnp
xchg
dec
sbb
cmpsl
jbe
add
push
test
add
dec
nop
dec
stos
dec
sub
mov
cli
push
test
out
enter
neg
cmp
test
aas
jns
fdivl
sbb
sbb
inc
hlt
loop
bnd
sbb
in
das
cmc
ror
mov
xor
dec
sub
leave
cli
adc
stos
push
ljmp
stc
ss
cmpsl
int3
pop
inc
xor
dec
addr16
jp
and
pusha
xlat
repz
pop
sbb
adc
push
or
or
sub
fs
push
test
xchg
scas
dec
mov
movsl
fisubl
xchg
mov
stos
je
push
pop
addb
pop
inc
cmpb
cwtl
xlat
pop
arpl
cld
fimull
jp
jmp
loopne
outsl
std
fstpt
mov
cwtl
into
std
lods
hlt
adc
jecxz
lret
testl
add
sti
fcomps
lret
outsl
sbb
test
xor
test
daa
xchg
xor
or
aam
mov
out
test
xchg
pop
push
mov
outsl
and
out
jb
sub
or
push
sub
fisttpll
dec
enter
clc
mov
bound
repz
mov
les
mov
jbe
mov
test
lods
and
xlat
cld
pop
fucomip
cld
jmp
dec
leave
mov
int3
mov
gs
fisttpl
or
addr16
jge
inc
push
nop
xor
mov
arpl
inc
popf
jle
in
aaa
mov
xor
push
lahf
test
dec
gs
jae
mov
lcall
mov
lret
push
and
jnp
adc
arpl
pop
mov
clc
movsl
jp
sub
mov
adc
lahf
imul
into
int
rclb
loope
call
adc
imul
cmp
jo
mov
into
cmc
push
xchg
fwait
aad
adc
test
mov
cwtl
insb
xor
or
mov
cld
jb
cmp
and
enter
sub
cmp
and
pop
gs
jle
mov
xchg
repnz
nop
pusha
sti
movsl
in
test
insb
fisubs
push
or
add
enter
and
mov
ficomps
adc
pop
imul
cmp
pushf
add
int
cmpsl
jg
jmp
loopne
and
jg
pop
rcll
inc
ficoms
xor
and
cmp
repz
jae
mov
pop
mov
leave
and
decb
mov
std
and
or
add
pop
dec
add
mov
rcr
xchg
lgs
cmp
sub
mov
pop
sub
in
movb
sub
fildl
cmpb
jnp
lods
mov
outsl
mov
pop
push
mov
enter
cmpsl
rclb
pusha
mov
pusha
negb
xchg
mov
aas
push
outsb
loopne
fdivl
nop
sub
add
dec
jo
and
loop
aaa
dec
pushf
dec
ret
add
pop
insb
andb
ljmp
nop
sbb
mov
jbe
rcl
out
dec
adc
dec
lret
ss
shll
fsubrp
enter
sub
add
cmp
mov
arpl
adc
out
adc
addr16
sbb
mov
adc
aaa
and
adc
cmc
xchg
fwait
mov
mov
add
jne
mov
enter
cmpsl
enter
stos
cmp
adc
mov
pop
mul
lods
loopne
aaa
dec
inc
lcall
shlb
jo
out
jmp
mov
cwtl
or
rcrl
out
movsl
leave
xchg
mov
pop
test
and
mov
sub
mov
nop
sti
or
mov
jg
dec
push
xor
loop
out
or
jl
pop
fimull
jne
stc
xor
das
and
stos
test
sarl
xor
jae
enter
loop
cmp
test
mov
cmp
cwtl
popf
shlb
xor
sub
adc
fs
lret
inc
mov
xchg
int
dec
or
mov
pushf
hlt
push
push
jnp
addr16
stos
std
and
fnstenv
inc
dec
or
int3
jmp
aas
dec
xor
loope
xchg
jge
lock
mov
mov
dec
inc
cmpsl
mov
pop
dec
das
int
add
push
cmp
fs
add
mov
pop
push
lret
sub
xchg
fildl
jecxz
and
out
lea
mov
test
pop
adc
sbb
aaa
pop
xchg
dec
stos
xchg
enter
ljmp
in
cwtl
sti
rcrb
push
cmp
add
loopne
cmp
adcb
outsb
in
lods
mov
arpl
cmp
decb
mov
xchg
int
jge
inc
enter
jns
lcall
jl
pop
stos
shll
jb
mov
xor
mov
ss
ret
clc
cmp
and
cmc
into
test
les
adc
pop
out
es
test
lods
and
cltd
addr16
sub
outsb
lock
jg
sub
sub
int
je
xor
inc
sub
sti
push
sbb
xchg
push
lcall
divl
out
fldl
imul
insl
data16
cmp
lods
xchg
sbb
cli
adc
nop
xchg
test
sbb
add
xchg
add
xor
insb
out
cld
addr16
mov
mov
mov
addl
cmpsl
repz
xchg
sub
cwtl
aas
jp
sti
lods
add
mov
pop
mov
into
test
sbb
mov
adc
inc
sbb
movsb
sub
xchg
lock
pmaxub
xor
add
lret
clc
xlat
lds
pop
xor
xor
pop
adc
gs
xlat
fsubrl
mov
sti
xchg
faddp
cld
mov
jle
sbb
and
dec
std
push
fs
int
mov
in
insl
sahf
push
mov
mov
cltd
icebp
xchg
inc
mov
pushw
clc
push
and
insl
or
insb
mov
clc
roll
cmp
mov
cmp
aad
iret
pushf
add
repnz
movsl
mov
cmpsl
out
out
scas
dec
lea
out
jle
nop
sub
and
add
and
pusha
mov
decl
cli
mov
test
lods
sbb
add
jnp
mov
fwait
xor
cmpsl
out
jp
dec
pop
out
js
push
movsb
in
mov
bnd
loope
xchg
stc
rcll
jb
insl
iret
test
xorl
aas
movsb
shlb
dec
cmpsl
out
out
sub
test
cmpsl
ret
outsl
adc
movsb
inc
mov
jne
push
stc
sub
adc
rclb
rolb
adc
push
jmp
fs
inc
dec
sbb
inc
dec
cltd
sub
or
pop
lods
dec
push
or
stos
and
and
sbb
ret
lods
imulb
mov
cmpsl
sub
add
sbb
cmp
jmp
sti
jne
xor
pop
pop
jmp
testl
jo
sub
daa
rol
ret
dec
daa
mov
das
insb
inc
enter
cmovb
insb
test
sarb
xor
cmpsl
sahf
sbb
addr16
adc
addl
mov
pop
cmp
jb
test
jo
stos
out
js
les
dec
jg
aad
push
aaa
add
clc
or
aam
sbb
xchg
mov
sub
dec
add
iret
add
mov
xor
push
pop
dec
ret
jp
xor
xor
jl
popa
jbe
ror
jge
xor
scas
push
xlat
sub
negb
pop
jl
mov
push
fadd
rorb
mov
push
fistpl
inc
in
lea
add
push
mov
fsubrp
or
or
mov
xorb
xlat
mov
adc
mov
mov
popa
and
out
aad
jno
mov
jp
inc
dec
push
sbb
sub
jl
dec
push
ss
leave
dec
push
cmc
pop
insl
xchg
aas
lods
jbe
mov
adc
les
xchg
jp
xchg
pop
or
adc
out
add
fstpl
ret
iret
pop
xchg
lret
filds
cmp
jbe
shll
out
and
mov
outsl
lods
roll
mov
or
dec
sbb
shll
mov
cmp
adc
mov
mov
jns
pop
mov
adc
repz
cmp
sahf
fs
mov
sub
dec
cmp
notb
pop
add
aad
outsl
adc
in
daa
mov
sbb
jecxz
cmpsl
arpl
jae
loope
xchg
les
inc
sub
js
xchg
das
pop
sti
dec
mov
in
fisttpll
sub
outsb
push
xor
aas
push
sub
push
cmpsl
jge
subl
sub
jae
jno
flds
cld
sbb
cmp
leave
xchg
out
pusha
or
or
xchg
or
cmp
rcrl
adc
pop
pop
cld
mov
outsb
dec
sar
dec
jle
imul
xchg
inc
inc
test
ja
cmpsl
rorl
in
mov
decl
adc
shrl
push
xchg
test
push
in
cmc
push
lcall
rcll
addl
mov
lock
push
pop
int
dec
ds
mov
jecxz
cmpsl
fs
mov
pop
mov
call
cmp
cmp
mov
dec
pop
loopne
es
xor
lds
sub
jle
and
repz
mov
push
lods
cmp
pop
es
shrl
or
imul
pop
lods
or
call
cwtl
test
sub
mov
xor
adc
sub
or
dec
add
push
imul
insb
cmp
cmp
or
fs
inc
cltd
gs
ss
inc
pop
cmc
cmp
sub
loopne
in
iret
outsb
jbe
lahf
es
sub
inc
scas
jb
loopne
ja
les
iret
inc
cmp
mov
pop
adc
jmp
or
mov
sti
jo
imulb
ret
sti
in
inc
test
pop
xchg
and
imul
lcall
stos
lds
xchg
push
dec
adc
insb
outsb
dec
or
push
and
mov
inc
arpl
loope
adc
pop
push
mov
inc
fisttpl
clc
cmp
insb
push
cld
mov
ja
adc
push
xor
adc
sti
lods
in
leave
or
add
jg
gs
addr16
sub
ret
sub
jg
cwtl
mov
sub
lret
mov
fstpl
jge
rol
dec
xchg
iret
sarb
jae
in
xor
cmovs
sub
outsb
fwait
push
cmpsb
jge
sub
push
stos
jnp
into
stos
icebp
shrb
xchg
int3
push
jle
lret
dec
or
or
jae
push
clc
and
popf
shrb
in
cs
pop
pop
cmc
fstl
or
rcrl
jno
dec
inc
jb
xor
or
pop
clc
pusha
out
ss
rcl
xchg
xor
lea
sub
fildl
push
ret
push
jbe
push
push
add
jle
clc
jno
int3
mov
inc
fadd
xchg
dec
fmull
mov
popf
mov
mov
or
push
adc
lret
iret
lcall
add
jno
push
xlat
mov
ja
add
xchg
imulb
jp
ret
or
aas
std
jle
cmpsl
xchg
add
adcl
cwtl
stos
lock
roll
mov
mov
fsub
cmp
xchg
add
and
add
aas
xchg
lahf
jg
xlat
jp
cmp
jns,pt
add
lods
out
imul
aam
mov
ja
fs
push
jne
jnp
icebp
mov
movsb
mov
mov
pop
les
sub
jae
out
jno
mov
xlat
aam
sub
sahf
push
fldt
arpl
test
inc
mov
loop
into
int
cmp
mov
xor
jns
dec
sti
scas
pop
data16
mov
dec
pop
movsb
addr16
lds
and
aad
int3
mov
in
nop
and
shlb
add
ss
jecxz
push
ss
xchg
outsl
call
insb
push
dec
sub
pop
or
ss
in
gs
cmp
movsb
daa
cltd
aam
movsl
and
stos
pushf
dec
pushf
adc
mov
xchg
sbb
push
pop
aad
les
dec
push
out
test
and
sub
lret
pop
ss
pop
push
inc
mov
rorl
xchg
insl
dec
jmp
shrl
in
or
inc
push
dec
cs
testl
jp
cmp
jnp
inc
jecxz
pop
xor
mov
adc
xlat
lds
lcall
js
outsl
xor
mov
mov
fiadds
add
aas
or
mov
cli
push
ja
sub
mov
cmpb
lock
call
xor
mov
cmpsl
je
or
lret
and
inc
cmp
jb
cmp
fxch
imul
jmp
fimuls
sub
xchg
je
ja
mov
lock
stos
inc
jne
fiaddl
pop
adc
xchg
in
insb
cltd
shll
ja
mov
std
sub
popf
loope
add
push
sub
mov
out
or
pop
andb
out
push
icebp
pop
aam
fnstsw
adc
mov
sbb
pop
or
xor
dec
push
mov
lahf
aad
sti
xchg
jmp
mov
add
cmp
ds
lods
das
dec
aaa
fnstenv
jne
es
inc
xchg
jmp
mov
dec
std
stos
push
lret
dec
into
jmp
int
jg
xchg
push
movb
jle
push
insl
js
jo
mov
mov
mov
pop
dec
push
sti
sub
pop
daa
cs
xor
das
adc
iret
imul
sbb
mov
lods
repnz
test
xchg
scas
mov
sbb
mov
rcrl
xchg
add
insb
lahf
and
or
ja
xchg
fs
gs
adc
or
shlb
xor
popf
jl
and
cli
insb
add
int3
call
arpl
pop
xlat
cmp
in
lret
mov
arpl
mov
clc
aam
mov
dec
stos
sub
xor
and
fwait
or
adc
loopne
jnp
rcrl
das
jl
mov
pop
lock
cmp
mov
xor
gs
push
push
out
cmp
pop
jl
movsb
dec
into
cmpsl
cmp
mov
mov
shll
lret
repz
push
cmp
and
out
jge
and
lock
mov
add
jp
jbe
inc
push
sbb
scas
jne
call
out
faddl
xchg
popa
jmp
pop
pop
add
ljmp
xchg
sbb
loop
stos
aaa
dec
pop
and
and
add
mov
mov
adc
mov
test
cld
movsb
in
addr16
subb
rcr
jle
enter
ja
mov
mov
xor
push
bound
sbb
in
stos
pop
test
movl
push
inc
jnp
mov
mov
sbb
movsl
aas
push
insl
jae
add
cmovl
into
jle
inc
jle
aam
jmp
add
pop
or
aad
adc
xor
imul
jecxz
shlb
cmp
cmpsb
dec
ja
pop
movsl
xchg
inc
rorb
stc
test
les
out
lock
loopne
sbb
xchg
adc
aam
test
inc
add
inc
repz
loop
add
loop
xchg
psllq
add
cmpl
rolb
jb
ret
or
or
xchg
aad
iret
in
adc
jo
xchg
movsl
push
jno
jmp
jecxz
into
insb
lods
mov
rcrb
inc
push
addr16
gs
sbb
xchg
outsb
cmp
pop
mov
cld
andl
fists
ljmp
adc
lcall
mov
pop
in
add
jne
cmp
jg
pusha
jmp
or
ret
in
bound
cwtl
cltd
pop
leave
and
fs
push
jb
push
aam
imul
dec
xor
jmp
or
push
lcall
int3
xchg
hlt
mov
out
or
js
call
es
test
lcall
jnp
mov
jp
pusha
shr
orl
insb
test
sub
lods
or
cmp
fldenv
ja
mov
mov
outsl
mov
stos
test
dec
fiaddl
lods
imul
mov
pop
in
push
xchg
dec
outsb
aaa
sahf
jnp
rcrl
mov
inc
pop
aas
sub
les
dec
enter
rcll
aam
pusha
jne
add
or
sarl
mov
cmova
stos
pop
mov
cmp
sbb
rolb
push
sbb
imul
sub
in
stos
ret
hlt
call
loop
fwait
pop
and
add
scas
in
xchg
aaa
bound
xchg
lret
test
sub
ret
addr16
mov
dec
aam
or
inc
add
and
cltd
scas
jo
nop
shll
mov
ljmp
sub
ss
xchg
ret
mov
fcmovne
add
mov
inc
pop
add
divl
sbb
jge
xor
mov
cmp
fwait
inc
mov
int
aad
push
rcll
jle
lret
in
xor
aas
clc
ds
mov
push
mov
jmp
repz
cltd
dec
jne
lret
leave
loopne
sub
xchg
sbb
push
cmp
movsl
pop
sub
or
mov
cwtl
mov
jmp
adc
test
mov
adc
mov
fiaddl
xchg
xchg
pop
lods
or
xchg
cmpsb
cld
sub
xchg
and
mov
pop
inc
inc
js
insb
xor
fnstenv
adc
fistps
pop
decb
mov
inc
test
into
push
dec
dec
push
fildll
and
divl
js
or
sub
sti
add
addl
aad
pusha
jno
push
fsubr
pop
popa
sbb
mov
mov
and
mov
inc
adc
push
test
dec
pop
xor
outsb
sti
push
or
sub
test
fcompl
sbbl
mov
fstl
xchg
into
mov
dec
jp
ja
movsl
cltd
ds
pop
jl
cmpsl
inc
and
ss
or
cmc
int
and
es
mov
ret
sbb
arpl
loope
push
test
sub
xlat
mov
push
and
cmpb
jecxz
aas
jnp
mov
test
mov
pop
adc
out
cs
ficompl
or
xchg
xchg
jecxz
push
fbstp
mov
aad
cmp
pop
rcrl
loopne
or
cmc
xor
scas
inc
dec
test
and
rolb
icebp
mov
xor
lea
notb
mov
mov
adc
and
jo
pop
fidivrl
jle
sbb
push
stos
out
xor
xor
mov
dec
dec
xchg
sub
rcl
dec
das
loopne
jb
jg
mov
iret
cmpsb
inc
aam
mov
adc
mov
arpl
adc
out
pop
sahf
push
scas
xor
mov
sbb
adc
fdivrs
dec
adc
push
call
addl
sbb
in
xchg
inc
imul
push
loop
rolb
mov
add
rcr
fldt
sbb
mov
jmp
mov
push
cmpb
aad
pop
pop
fdiv
cltd
daa
iret
mov
and
push
in
inc
imul
movsb
mov
invd
pop
mov
adcb
mov
cmp
adc
jp
out
loopne
in
aaa
xor
lods
sbb
in
and
jp
out
stc
fxch
mov
aaa
push
and
fidivrs
shlb
pop
pop
xchg
rcrb
rorl
cltd
in
jbe
xlat
aad
mov
mov
inc
and
loopne
hlt
sbb
add
rcl
jle
cmpl
ret
ret
inc
cli
jns
add
jno
cmp
test
jns
mov
mov
cwtl
adc
inc
push
or
dec
ljmp
cltd
movsl
dec
jo
inc
and
mov
mov
inc
mov
cwtl
repnz
sti
xchg
and
retw
insl
jmp
inc
add
pop
test
sti
xchg
bound
adc
and
push
hlt
jl
repz
mov
jo
fcom
shll
stc
fidivrs
sub
in
daa
ja
pminub
cmc
sahf
pop
xchg
pop
ficoml
xchg
xor
mov
mov
insb
sub
lcall
mov
pushf
mov
cmp
shl
xchg
movsl
ljmp
inc
cs
push
jbe
xchg
out
jno
jbe
outsb
nop
in
loope
mov
rorl
rolb
sbb
loopne
cmp
repnz
lock
movsb
push
and
lock
pop
in
lds
fwait
popw
fnstenv
je
sub
inc
cmp
into
jne
ds
or
xchg
or
movlps
mov
and
xlat
mov
fimuls
imul
out
imul
push
adc
inc
sbb
cli
xor
xchg
jmp
aaa
test
scas
shll
test
into
push
inc
out
push
out
pop
mov
sbbl
repz
mov
shlb
xor
call
pop
mov
cmpb
lock
dec
popf
push
pop
cmp
inc
add
dec
fistpl
sbb
jecxz
pushf
sbb
jecxz
pusha
aas
mov
popa
add
incb
xchg
dec
loope
insl
or
out
mov
push
shll
pop
nop
or
pop
addr16
pop
ret
cmp
dec
sti
rolb
dec
inc
jae
dec
insb
gs
push
subl
imul
xchg
inc
popa
mov
cwtl
and
dec
shlb
mov
scas
gs
in
in
test
andb
je
add
into
daa
into
adc
pop
xchg
mov
int3
jnp
adc
ds
stos
fucomi
xchg
outsb
pop
imul
std
pop
add
ss
mov
add
jecxz
adc
add
pusha
gs
lcall
repz
xchg
outsb
inc
scas
jnp
dec
and
mov
out
mov
xor
push
pop
inc
shrb
loop
iret
mov
clc
les
mov
adc
xor
sbb
or
outsb
int3
mov
ret
or
not
into
or
and
sti
mov
pop
and
fstp
ss
sti
mov
loop
nop
lods
or
mov
jb
in
xor
mov
mov
mov
jecxz
fists
mov
mov
arpl
cmp
xchg
fcomp
addr16
dec
cli
mov
fdivl
jb
jno
pusha
mov
es
dec
lret
inc
dec
adcl
xor
jae
xor
mov
pop
repz
addr16
jle
ljmp
xchg
ljmp
xor
repnz
mov
inc
xor
popa
imul
ja
sbb
and
jge
out
cmc
pop
jmp
cmp
sbb
cwtl
add
test
sbb
jo
insl
loop
mov
mov
mov
inc
mov
je
adc
sbb
mov
fs
jge
pop
jecxz
out
inc
push
in
inc
cmpb
push
jno
lea
sahf
mov
int3
add
pop
mov
inc
xchg
adcb
mov
add
inc
xlat
mov
and
push
xchg
es
arpl
dec
mov
addl
mov
arpl
cmp
sbb
mov
mov
popf
enter
xchg
pop
add
and
fwait
cmpsb
and
mov
std
out
cli
xorb
dec
pavgw
or
mov
jae
fidivl
or
xchg
jmp
ja
aas
sahf
sub
sbb
xlat
in
cli
and
jle
ds
scas
sub
orl
mov
js
pop
xchg
jp
or
jmp
add
test
outsb
call
jns
and
push
or
cmp
adc
jb
cmp
fisttpl
mov
pop
jno
sbbb
sti
add
push
jp
js
inc
adc
inc
inc
fidivrl
mov
in
pop
sub
in
mov
xchg
jg
out
dec
adc
es
clc
cltd
sbb
cli
cmp
test
mov
jnp
das
repnz
sbb
lds
lea
mov
mov
repnz
mov
mov
pop
std
daa
mov
pusha
shlb
les
imul
dec
xlat
mov
jbe
call
cld
dec
and
xlat
cmpb
push
test
adc
enter
add
adc
lcall
adc
ret
adc
or
pop
cmp
sahf
shrl
push
leave
mov
mov
stos
fcompl
dec
ret
mov
cmpsb
aaa
sbb
mov
pop
cmpsl
sahf
movsb
sbb
jo
sbb
dec
mov
into
testb
jp
cltd
dec
fcomip
pop
daa
mov
push
or
mov
jno
mov
movsb
pop
push
ds
inc
xor
inc
pop
je
mov
mov
mov
bound
adc
pusha
mov
pop
jns
xor
sbb
mov
ror
jge
push
into
bound
xadd
sub
mov
mov
adc
lods
dec
xor
ret
int3
adc
push
test
outsl
mov
out
sahf
and
add
xchg
test
repnz
stos
lock
aad
and
dec
mov
lock
mov
mov
pcmpgtb
sbb
xlat
xor
fnstsw
sub
cmp
fcomi
add
cs
push
cld
orb
add
cmp
adc
xchg
xor
fnsave
repz
add
leave
add
mov
or
mov
mov
cli
dec
and
add
push
or
jmp
les
xchg
push
popa
lock
pop
push
xlat
jp
sub
je
insb
mov
repz
mov
call
cmp
xor
jns
jmp
in
inc
pop
xor
or
xchg
dec
lret
loope
sti
and
push
xor
pop
inc
sub
lea
dec
enter
mov
andb
cmp
jge
aad
jb
and
mov
xor
jo
jmp
sub
pop
sbb
das
cmpsb
nop
sub
pushf
int3
scas
or
imul
jne
add
mov
sub
lret
stos
jo
fstl
incl
jge
jb
cmpsl
jle
cmp
cmp
rep
into
gs
jmp
xchg
fcomip
fldl
dec
pushf
inc
sub
orl
cmp
repz
out
and
cmp
in
jl
add
push
push
outsb
mov
sti
loope
jecxz
cld
outsb
in
jno
inc
mov
je
and
fsubrl
or
movsb
lahf
inc
xor
xchg
into
pop
mov
mov
fldl2e
push
dec
cld
pop
call
adc
in
push
mov
aam
shrb
pop
adc
lods
sbb
bound
mov
sete
in
and
ds
sub
aam
bound
push
dec
mov
xchg
das
data16
jbe
cltd
or
add
cs
xchg
and
call
or
pop
ret
dec
and
scas
cmp
push
inc
repz
out
mov
adc
jae
adc
stos
mov
andb
mov
cmp
mov
cld
outsl
bound
aam
in
xchg
inc
cmpsb
xchg
lods
dec
cmpsb
mov
jl
ds
jp
jmp
lds
jge
idivb
xchg
test
cmpsl
std
bound
rolb
xor
popf
jb
push
pop
test
pop
sbb
pop
movsw
cld
or
jle
clc
das
jl
das
js
in
mov
push
jmp
loope
mov
cmp
in
and
test
cli
test
and
mov
aad
dec
inc
iret
pop
or
jo
inc
jb
test
or
outsl
jnp
xor
ret
outsb
outsb
and
sub
ret
and
push
push
sub
popf
ja
js
movl
inc
das
and
pop
or
arpl
mov
cli
xchg
ret
outsl
stos
push
lods
fiaddl
sbbb
rol
cmp
jmp
call
cmp
adc
ret
mov
sti
call
ljmp
aas
and
inc
xor
and
das
repnz
xchg
test
aaa
pop
cwtl
mov
icebp
and
sbb
out
scas
sbb
or
icebp
xorb
hlt
loopne
nop
push
dec
inc
or
mov
lea
jae
js
fs
xor
movsl
cmp
cmpl
repnz
aad
pop
sarb
add
outsb
add
adc
mov
stos
les
mov
stc
pop
jecxz
jnp
je
pusha
or
push
xchg
inc
mov
test
push
shr
lock
pop
mov
popf
je
out
ret
mov
insl
sub
cld
cltd
xchg
mov
jge
xchg
pop
ja
mov
jmp
stos
xor
jle
jl
and
mov
xor
out
mov
dec
xchg
repz
inc
mov
xor
dec
test
mov
leave
mov
pop
xor
xchg
pop
cmp
mov
jmp
std
xor
cld
fnstsw
inc
sbb
out
inc
stc
xor
push
icebp
cmp
das
or
addr16
mov
inc
and
add
cmp
adc
cwtl
notb
cmpsl
in
scas
js
lret
sti
arpl
loop
or
push
jnp
jo
and
push
test
jle
add
push
adc
jl
loop
add
faddl
jp
mov
add
loope
divl
and
add
lcall
or
mov
scas
xor
lea
aam
and
test
lcall
add
aaa
inc
pop
inc
and
sbb
lea
inc
in
icebp
mov
loope
cmp
dec
iret
push
jle
pop
andl
bound
cmp
inc
xchg
pop
cltd
mov
ds
inc
icebp
pop
scas
insl
mov
sub
cltd
outsl
pushw
ds
sub
imul
aad
add
xor
xchg
mov
arpl
xchg
js
enter
neg
jmp
and
mov
add
xlat
inc
subl
push
jb
sbb
xor
xor
popa
pop
pop
mov
hlt
pop
mov
push
xchg
fwait
movb
dec
in
lods
mov
js
dec
dec
pop
mov
mov
push
sahf
push
hlt
push
xor
cmp
test
jb
and
das
movsl
pushf
add
push
sbb
sbb
dec
fwait
ja
adc
in
push
or
sbbb
pop
jp
lret
dec
iret
xchg
stc
sub
cmc
xor
dec
or
mov
mov
cld
jecxz
sbb
pushf
fisubrs
mov
mov
mov
cwtl
sbb
pop
and
insl
or
fisttps
dec
inc
sub
jbe
mov
cmpl
lahf
sbb
mov
jne
in
sbb
int
clc
stos
xchg
gs
into
neg
test
sub
xchg
push
push
aas
and
repnz
aaa
jne
mov
jo
pop
inc
sub
xchg
mov
test
mov
test
nop
std
mov
xor
sbb
cmp
repz
push
adc
insb
add
jmp
cmp
popf
inc
imul
popa
out
mov
pop
mov
imul
and
iret
add
xchg
inc
lods
sub
sub
aam
adcb
xchg
sub
shrb
insl
pushl
lret
fidivs
dec
ret
lods
test
mov
add
cld
sbb
add
mov
notl
fildll
std
mov
push
xchg
inc
cs
popa
and
xor
jno
jmp
xor
mov
sbb
xchg
imul
rcrl
and
imul
or
aam
lock
xchg
mov
popa
cld
jmp
ret
mov
cmpsb
jp
push
or
iret
dec
dec
or
cmpsb
mov
push
push
pop
mov
hlt
xchg
adc
je
fsubl
lcall
xchg
mov
jecxz
push
or
inc
push
sbb
pop
int
pop
movsw
test
and
sbb
xchg
or
mov
addr16
push
push
loop
jg
js
xchg
lcall
testl
xchg
idiv
jno
cmp
cli
pop
or
and
xchg
xchg
mov
add
mov
imul
sbb
mull
imul
add
fs
cltd
cmp
and
dec
pop
fisubs
xor
jp
outsl
jge
in
vpshlq
out
imul
and
jnp
adc
leave
pop
mov
fisubl
mov
aam
jae
mov
mov
pop
mov
gs
sub
imul
push
dec
lods
jecxz
outsb
sti
out
jne
cltd
xor
xchg
les
dec
aaa
mov
stos
add
sbb
xchg
jecxz
cld
adc
sub
xchg
jo
sbb
xchg
shl
test
xchg
out
add
mov
jp
cmpsb
push
and
mov
movsb
in
dec
stc
inc
divb
addl
cli
mov
cmp
mov
pop
jl
xchg
pop
pusha
pop
popf
repnz
pop
or
push
ficompl
lods
notl
sub
pop
mov
hlt
mov
mov
mov
xchg
loope
lea
lret
inc
lods
mov
xor
push
stos
fcoml
adc
pop
pop
cli
repz
jb
mov
pop
dec
push
call
pop
push
gs
or
ret
xchg
gs
push
cli
mov
cmp
in
lahf
and
jecxz
test
in
jno
out
cmp
hlt
rorl
mov
jl
pushf
dec
pop
stos
jp
pop
testl
sub
sbb
dec
pop
add
mov
xor
dec
and
jb
push
lahf
cmp
sbb
nop
or
insl
pop
sub
ss
out
addr16
push
mov
xor
js
xcrypt-cbc
cmpsl
xchg
fistps
cld
adc
dec
loope
sarl
cwtl
push
std
cld
andb
sbb
jmp
pop
je
jmp
rclb
popa
mov
jle
sbb
sbb
cld
test
push
adc
add
mov
idivl
mov
add
push
xor
mov
mov
cmp
mov
and
push
inc
loopne
popf
sbb
ja
inc
push
pop
mov
in
pop
fistpl
inc
mov
pop
mov
xchg
repz
call
int3
rcr
dec
test
sub
pop
xchg
outsl
clc
gs
xor
imul
pop
in
xchg
push
adc
ret
xor
imul
pop
dec
add
ja
jl
sbbl
cmpsl
test
scas
jae
xchg
xor
inc
mov
fldl
cs
outsl
pop
jg
jae
jg
push
int
push
sbb
push
push
mov
data16
mov
dec
data16
inc
mov
in
cmpsb
sub
or
in
push
cmp
jl
jge
push
std
lock
mov
std
jno
int3
or
hlt
mov
cmp
adc
andb
inc
dec
cwtl
add
shlb
push
sub
sbb
mov
scas
mov
stos
stos
cwtl
sub
or
aas
fwait
cs
mov
or
int
jl
hlt
jb
xchg
and
push
pop
xchg
sub
ljmp
adc
sbb
push
lret
cli
mov
jg
push
mov
shrb
enter
sbb
lahf
faddl
cmpsl
mov
stc
ret
shl
dec
mov
cmp
cmp
adc
pop
or
pop
ret
nop
aam
das
sti
rcl
cmp
xor
sbb
inc
inc
hlt
mov
pop
icebp
inc
mov
insb
xor
pushf
or
push
cltd
inc
stos
and
in
test
push
test
or
jae
clc
leave
mov
icebp
test
jl
add
pop
xor
outsb
mov
add
jmp
add
outsb
iret
fwait
movsb
mov
repnz
lret
das
mov
adc
test
call
jns
cmp
pop
jmp
mov
pop
scas
jp
ds
pop
std
faddl
hlt
sbb
daa
sbb
dec
cmp
es
sarl
mov
push
aad
mov
mov
push
lea
mov
sub
incb
and
cwtl
dec
pop
mov
mov
das
cmpsl
jp
sbb
out
sbb
test
jbe
mov
xchg
adcb
add
call
pop
sub
clc
pop
in
xlat
outsb
incl
fisubs
dec
repz
subl
add
repz
stc
push
mov
xchg
sbb
scas
roll
xchg
mov
lret
out
and
jg
js
mov
int
jbe
inc
push
ljmp
xor
faddp
stos
fisttpl
push
ja
push
call
adc
gs
mov
stc
add
jl
repnz
mov
fcmovb
inc
cmpl
in
shll
inc
jnp
clc
popf
repnz
fnstcw
ja
pushf
pop
fldcw
push
stc
sti
mov
push
ljmp
mov
fs
cld
and
xchg
stc
sub
movsb
iret
xchg
das
insb
pop
sbb
aam
dec
jb
test
push
clc
jg
jns
pop
lds
rcl
xchg
les
cwtl
lret
and
mov
shll
inc
xlat
hlt
test
xchg
mov
cmp
cmpsb
or
and
sub
out
cltd
test
jg,pt
adc
sarl
gs
mov
cs
lods
in
xchg
test
dec
mov
mov
test
ret
hlt
sbb
lods
outsl
mov
shlb
fimull
xchg
pop
push
push
cmp
inc
sbb
xor
lret
jne
es
add
inc
mov
adcl
cmc
adc
test
cmpsb
adc
lea
inc
aam
inc
push
mov
dec
fwait
mov
jmp
jmp
mov
test
adc
xchg
xchg
mov
cltd
jecxz
mov
mov
out
mov
into
push
in
int3
push
push
lods
mov
mov
in
aaa
int
ret
mov
push
push
mov
or
push
addl
out
cmpsl
jl
call
sahf
sub
push
inc
clc
pusha
xor
pop
rcll
xchg
mov
dec
jmp
cmc
aas
pop
inc
push
mov
add
jecxz
fdivr
and
jbe
int3
xor
in
gs
das
movsb
dec
jbe
sub
push
mov
cmp
int
cmc
xchg
pushf
xchg
in
jbe
mov
popa
in
or
dec
adc
xchg
outsb
adc
lds
aad
or
dec
dec
sbb
xchg
out
mov
lds
stos
push
adc
sbb
adc
cmpsl
pusha
and
xor
or
hlt
repz
ds
loope
and
lret
and
lds
popa
or
mov
sub
dec
sarl
push
dec
loopne
mov
loopne
jle
loop
dec
pop
lahf
and
inc
fdivs
add
jbe
inc
adc
push
imul
filds
les
sbb
sub
jns
iret
insl
pop
push
outsl
jnp
jns
or
les
lahf
dec
xor
shll
xor
out
imul
fsubrs
mov
or
add
data16
stos
add
pop
cs
imull
mov
js
ss
scas
stc
js
inc
test
test
daa
imul
jmp
jae
xor
imul
fistpl
lcall
test
outsb
mov
movsb
cmp
into
sub
dec
outsb
into
dec
and
push
sub
cmp
mov
pop
popf
popl
dec
lock
push
mov
rorb
cmp
popa
and
jnp
adc
xor
setle
sub
mov
add
sub
in
aam
inc
mov
enter
and
jmp
mov
ficomps
mov
into
scas
aaa
ret
mov
mov
in
pop
mov
mov
and
push
pop
adc
jnp
inc
mov
das
mov
repnz
cli
push
and
dec
mov
jp
out
push
xor
xchg
push
cwtl
sbb
cmpsb
mov
jae
fwait
mov
enter
push
push
pop
insb
push
cli
sub
ficoms
mov
jo
in
lock
movsb
cli
movsb
daa
and
xor
dec
sub
xchg
mov
jnp
leave
inc
aas
mov
mov
mov
orb
popa
mov
adc
clc
mov
mov
std
cmp
cmpsb
fnstcw
xlat
in
test
or
or
outsb
unpckhps
jge
lret
rorl
push
mov
jae
or
mov
lods
cld
jo
and
push
sub
jb
sbb
dec
jnp
sbb
add
push
inc
adc
xor
push
test
mov
xchg
out
sbb
push
mov
outsb
cmp
xor
mov
das
sub
jnp
fistpl
cmp
and
and
and
sbb
sub
push
movsl
dec
inc
mov
adc
cmp
mov
aam
adc
push
aas
jl
rcrb
ret
movsl
loope
dec
or
xchg
mov
push
js
mov
loopne
dec
pushf
push
mov
arpl
insb
bound
and
cmp
in
pop
dec
daa
imul
push
repz
and
cmpsl
adc
or
fcomi
add
daa
inc
jne
and
mov
insb
cmp
push
adc
rcr
jmp
shlb
jns
daa
add
lock
mov
cmp
xor
test
xchg
inc
sti
es
idivb
jmp
mov
rorb
fisttpl
push
lea
jo
sar
mov
hlt
iret
mov
dec
push
jnp
dec
icebp
ret
mov
xchg
std
fsts
out
jne
scas
dec
es
je
mov
aas
aas
sub
lods
mov
lcall
push
test
aaa
or
stc
xchg
dec
mov
js
lods
add
ds
imul
loope
sar
fwait
leave
out
ret
lcall
movsl
push
int
fists
aad
cmp
and
cmp
mov
push
push
scas
add
jae
sbb
inc
jmp
sarb
pop
xchg
xor
pop
inc
fistpl
loope
out
or
cmp
ficomps
stos
bound
xorb
pop
and
lock
xor
mov
lods
insb
add
and
inc
jne
inc
sti
adc
movsb
or
adc
aaa
jp
subb
push
iret
inc
imul
pop
push
mov
push
cli
pop
inc
xchg
in
out
push
inc
fcoms
in
enter
and
scas
dec
inc
cmp
and
pop
aam
imul
fs
adc
jg
stos
stos
imull
ds
xlat
mov
xchg
leave
call
or
into
xchg
ret
shrl
test
rcrl
inc
ja
jno
stos
loope
jg
inc
add
repnz
pop
cwtl
fs
xlat
xlat
inc
sahf
clc
repnz
enter
test
mov
sub
out
mov
icebp
dec
add
fcomps
add
mov
xlat
cwtl
sti
daa
scas
test
inc
and
jns
adc
shlb
inc
sbb
out
sbb
ret
xchg
xlat
push
jl
jl
jp
fisttps
sub
mov
jae
mov
scas
bound
lcall
daa
insl
andb
fmuls
jnp
jecxz
das
in
test
jl
sbb
push
bound
rorl
jl
shlb
or
ja
or
push
add
dec
sub
and
add
sub
rcll
fchs
push
mov
or
out
into
adc
xor
and
sbb
mov
pop
jmp
bound
cmpsb
ret
rcl
sbb
leave
xor
dec
xchg
pop
or
enter
cli
and
inc
mov
cli
mov
mov
add
cli
xor
or
and
jecxz
sbb
mov
xor
andb
andl
adc
push
cwtl
out
inc
sbb
push
sahf
mov
jle
push
sbb
sbb
mov
rcr
and
xor
pop
dec
pop
mov
outsb
sahf
push
or
scas
stos
pusha
cmp
sbb
pop
mov
adc
jo
pop
fcmovnbe
mov
sbb
sub
arpl
xlat
data16
pop
out
mov
mov
enter
shrl
pop
cmpsb
test
pop
stos
and
jl
dec
jns
popf
loop
pop
out
mov
insb
inc
inc
je
jae
ds
mov
add
cli
je
std
push
movsb
mov
out
add
std
flds
mov
inc
orl
jno
std
cmp
ljmp
or
lods
rep
rcll
fsub
jbe
mov
mov
nop
repnz
xor
adc
mov
add
mov
xchg
mov
fldcw
push
push
imul
pushf
movsb
xor
push
leave
mov
sub
xchg
dec
lret
arpl
insl
inc
sbb
scas
jno
sbb
add
stos
mov
daa
andb
add
sbb
push
in
rcll
mov
lahf
cmp
pushf
adc
adc
fcmovne
lret
mov
xchg
test
das
jne
xor
lods
and
or
ds
mov
dec
pop
mov
test
mov
cld
enter
jmp
mov
or
js
xchg
mov
scas
jg
cmp
mov
inc
cli
insb
call
mov
insb
adc
iret
sub
ljmp
and
jge
adc
mov
pusha
xor
stc
push
inc
insl
gs
outsl
and
jno
jmp
inc
rcrl
rcrl
mov
rolb
lods
lea
and
cld
pop
shll
jmp
jge
scas
inc
repnz
mov
fmull
movsb
repnz
sbbb
push
pop
push
outsb
dec
dec
lods
fwait
pop
cmp
jl
mov
out
imul
sbb
nop
movl
out
xchg
xchg
insb
and
outsl
hlt
in
and
dec
cmp
cs
int
adc
xor
jl
cmc
addr16
or
inc
cmpsl
push
sbb
xchg
outsl
mov
sbb
push
ds
pop
cs
inc
pop
push
outsl
xchg
xchg
loopne
in
push
jno
arpl
cmpxchg
ljmp
push
push
cmp
call
jb
jns
mov
subl
adc
into
add
xchg
inc
cli
sbb
scas
negl
add
push
jbe
xor
dec
pop
xor
inc
cvtpi2ps
mov
or
insl
stos
aaa
pop
or
mov
mov
stc
push
jg
scas
sub
jmp
imul
xor
xlat
aad
in
adc
fwait
cmp
je
out
adc
mov
jae
mov
or
iret
mov
mov
push
notl
movsl
cmp
lock
jg
add
and
push
sub
es
xchg
or
out
adc
add
add
frstor
sbb
mov
stos
add
xor
stos
fcmovnu
mov
pushf
dec
das
sti
lret
adc
pop
dec
outsb
in
cmp
pop
xlat
insb
scas
jge
shr
add
sbb
xor
in
inc
dec
mov
test
fiaddl
cmp
pop
popa
gs
test
sub
xor
pop
dec
cmp
out
idivb
dec
pop
push
fdivs
fbld
jecxz
jmp
movsb
ljmp
imul
push
data16
cmp
sbb
or
stc
ljmp
int3
fsubr
push
insb
jo
mov
fidivs
mov
push
repnz
pop
cwtl
mov
fldl
push
out
sbb
sub
xlat
ss
rcrb
loopne
ljmp
lret
scas
jg
jae
mov
add
dec
aam
jg
cmp
pmulhuw
or
adc
dec
xor
mov
xor
jno
adc
or
rcll
and
push
add
lock
rolb
jmp
push
xor
jnp
push
fnstenv
fbstp
pop
xor
hlt
sub
push
sbb
push
push
sub
jne
addb
jmp
hlt
fwait
cmp
rol
sub
gs
push
jp
idivl
sub
sbb
stos
push
loop
ret
popa
mov
repz
out
jnp
sub
loope
sti
mov
add
inc
scas
popa
daa
pop
in
and
and
or
mov
ret
mov
add
cltd
sbb
add
cmp
shlb
add
shr
cwtl
xorb
or
repnz
aaa
adc
ffree
mov
lcall
xchg
int
inc
test
jb
enter
pop
pop
lahf
pop
inc
mov
dec
push
lock
fiadds
cli
mov
into
aaa
or
cltd
pusha
mov
add
lea
ds
daa
mov
mov
sbb
leave
insl
bound
stos
ljmp
rcrb
dec
div
nop
xlat
mov
jno
add
adc
lods
nop
ja
std
and
sahf
sub
or
add
loop
mov
mov
out
jae
std
call
fisttpl
dec
ljmp
jns
int
pusha
pop
shrl
xor
mov
int
xchg
fildl
aaa
cmp
and
into
xor
cmpsl
add
jae
pushf
lock
mov
ret
cli
out
dec
test
ror
inc
das
lea
cmp
mov
or
jo
push
repz
jnp
fninit
or
jecxz
movsb
pop
adc
mov
test
push
dec
into
ret
sub
loope
std
push
fldl
lock
cmp
xlat
sub
mov
call
sahf
jae
push
cld
test
iret
inc
rclb
sub
test
sub
movsl
bound
jbe
cmpsl
fisttps
mov
push
sbb
inc
cs
push
push
stc
cmpl
aaa
aas
outsb
jecxz
mov
int
fadd
sbb
or
sbb
or
push
jo
mov
ret
push
inc
fimuls
aaa
dec
test
xchg
jecxz
les
lcall
sub
pop
inc
dec
repnz
shlb
test
jns
xchg
rcrl
mov
mov
sarl
ljmp
imul
stc
adc
inc
sbb
cs
cli
mov
loope
popf
mov
sbb
xor
out
icebp
cmp
icebp
sarl
std
mov
cmc
cltd
mov
fisttps
mov
stc
loope
inc
mov
sbb
into
jne
idivl
mov
sbb
push
mov
in
cmp
lret
mov
es
push
repnz
stc
xchg
jno
subb
fildll
jg
push
sbb
push
insb
nop
movsl
xchg
jle
int3
sub
jnp
icebp
mov
inc
and
jecxz
bound
dec
addr16
dec
mov
mov
sbb
xchg
cli
nop
cmp
call
rorb
ret
sahf
pop
jae
ljmp
xchg
gs
pop
lcall
ja
fisttpl
lret
cmp
pop
dec
insb
add
mov
sbb
out
shl
xor
jo
stos
push
dec
xor
cmp
ja
xor
nop
mov
dec
xor
int3
inc
insb
adc
xchg
jp
lret
in
out
or
add
loop
push
adc
push
and
add
clc
loop
loop
dec
imul
movsl
push
jl
or
mov
int3
add
fwait
pop
add
test
sbb
pop
xor
lahf
arpl
pop
std
xchg
pop
jno
or
test
adc
call
loope
or
jne
outsb
mov
fcmovnu
xchg
pop
aaa
add
jp
in
adc
ficoml
out
mov
rcrl
xchg
add
arpl
mov
mov
add
pusha
cmp
rorb
xlat
pop
cmpsl
lcall
fldenv
inc
jae
sbbb
into
jae
xchg
stos
dec
xlat
or
loop
andl
pop
mov
test
in
push
xchg
out
adc
push
mov
call
je
ds
mov
mov
cmp
xor
adc
mov
cmp
sub
inc
in
sbb
shl
cmp
inc
insb
xchg
dec
pushf
or
cmp
popf
imul
scas
out
in
fildl
test
rorl
inc
and
cltd
and
in
add
cmp
idivb
and
and
add
pop
or
sbb
push
inc
sbb
mov
xor
lods
enter
imul
fnstsw
adc
dec
aad
test
add
fsubrs
push
mov
inc
pop
iret
mov
push
xor
in
mov
ret
xchg
cmp
hlt
fwait
inc
mov
mov
sub
dec
imul
pusha
dec
cmp
hlt
in
cmc
xchg
arpl
mov
push
inc
fs
outsl
loopne
or
or
jl
dec
popa
jo
fisubrl
dec
push
and
and
mov
and
push
gs
jmp
mov
rorb
cli
xor
xchg
dec
outsl
adc
in
mov
push
mov
ret
cld
aam
sub
in
lds
rcrb
ret
jae
xchg
and
ret
addr16
xor
addr16
lret
xchg
fnstcw
push
push
jmp
out
cmc
or
ret
sbb
ds
and
and
stos
dec
mull
outsb
aas
enter
mov
push
std
hlt
sti
call
scas
cmp
rorb
inc
inc
add
mov
out
stc
sbb
jp
imul
push
mov
cli
sub
sbb
adc
shrl
adc
insb
push
in
push
shrl
dec
xor
repz
adc
hlt
inc
inc
and
jp
pop
mov
movsb
fsubs
adc
negb
inc
or
cmpsl
insl
mov
adc
add
icebp
dec
es
call
call
jae
pop
imul
rolb
fwait
add
cmpb
jo
pop
cmp
dec
je
mov
jno
jmp
dec
jmp
in
in
jno
or
bound
add
inc
rorb
dec
add
sub
xor
mov
adc
lock
xor
rcll
cmp
rolb
xor
inc
mov
xor
insb
sahf
std
lods
loopne
push
loop
rorl
pop
loop
paddusb
mov
inc
push
add
leave
pop
subl
test
mov
sbb
mov
stos
or
ljmp
mov
lds
out
gs
push
dec
push
adc
jle
ret
or
jnp
cld
ja
sub
mov
adc
xor
movb
inc
nop
xchg
inc
fstps
xchg
mov
cmp
xchg
xchg
icebp
push
push
lret
and
adc
test
popa
add
pusha
pop
push
in
mov
adc
scas
pushf
rep
subb
push
lods
and
inc
jb
mov
mov
mov
mov
mov
xchg
pushf
popl
jne
loop
push
cmp
push
fidivs
and
mov
add
imul
mov
sub
call
repz
jo
popf
shll
jl
pop
mov
sbb
xlat
stos
mov
pop
hlt
and
test
and
mov
ja
in
pusha
lret
mov
lock
or
adc
xor
mov
cltd
jmp
adc
outsl
gs
scas
push
fisubrl
mov
fstpt
es
push
dec
pop
xchg
stos
jne
fiaddl
lret
pop
loopne
push
addr16
out
sub
enter
out
pop
sub
or
movsl
dec
arpl
or
test
fs
add
xor
cltd
ficoms
and
mov
jmp
dec
sbb
addl
icebp
insb
pusha
call
jp
sub
dec
and
divl
nop
lret
inc
mov
mov
test
push
push
or
loope
pop
mov
stos
jge
push
xchg
jo
xor
cmp
das
pop
sub
push
inc
cmp
leave
jle
cli
ljmp
adc
lock
push
jecxz
sub
js
dec
mov
pop
aaa
call
ds
xchg
lret
arpl
imul
jge
aad
push
sbb
mov
push
cmc
bound
mov
jmp
mov
cltd
push
and
pop
popf
int
ja
xor
fmuls
sub
push
mov
popf
push
adc
stos
push
mov
rol
mov
cmp
adcl
mov
mov
mov
mov
sub
mov
pop
je
xchg
or
lahf
pushf
adc
scas
movsl
mov
aad
jbe
jp
insb
in
arpl
jge
sub
inc
push
mov
imul
lock
cmp
and
dec
push
or
inc
into
repnz
in
imul
pop
dec
xorb
sub
mov
aaa
xchg
stc
aam
movsl
mov
jne
jne
mov
fcmovnb
cltd
cli
lret
xor
mov
jns
and
stos
notb
jmp
adc
adc
sbb
dec
xor
popf
repz
je
pop
pop
jmp
xor
mov
icebp
cmpsb
mov
mov
mov
enter
jle
insl
dec
mov
mov
dec
sbbb
inc
clc
xor
jbe
inc
ret
out
pop
push
add
repnz
cld
push
cld
leave
jge
das
push
test
mov
xor
push
sbb
loop
inc
mov
repz
fstl
push
dec
test
mov
lahf
xchg
jmp
stos
and
or
jb
mov
add
stc
push
into
iret
gs
sbb
add
sti
nop
test
daa
nop
push
sub
mov
xchg
daa
cmpsb
push
cmp
push
adc
push
imul
loop
ret
cwtl
inc
mov
lods
lret
rcl
fisubrs
pop
roll
je
mov
inc
loope
push
pop
sub
pop
insb
std
sbb
push
out
insl
mov
test
sarl
int3
add
pop
and
call
inc
sub
arpl
mov
enter
notb
mov
inc
pop
es
arpl
sbb
or
cmp
aad
rcrb
sub
out
push
in
clc
dec
stc
stc
cmp
mov
iret
rorb
es
std
stos
popa
ss
cmp
iret
inc
hlt
mov
in
adc
or
mov
int3
add
repnz
sti
ja
jne
cmpsb
imul
pop
insb
loopne
je
fidivs
rorl
mov
out
xchg
add
pushl
subb
lahf
lods
push
xchg
add
cmpsl
jp
mov
mov
clc
ja
aad
sbb
fildl
ror
push
adc
ja
push
add
pop
mov
push
xchg
sbb
xchg
cmp
xchg
sub
sub
push
mov
and
lcall
test
rcl
dec
shr
or
insl
in
in
mov
loop
imul
inc
add
js
aad
sub
lret
cmp
leave
jmp
aas
and
mov
roll
std
fcomps
dec
aaa
popf
fidivl
mov
shlb
push
cmp
enter
inc
pop
int3
std
mov
mov
mov
mov
pop
das
rcrb
lret
lea
cwtl
cmpb
sub
sub
pop
xor
jnp
cmc
jmp
jecxz
cmpsb
test
xor
fs
nop
repnz
push
inc
sub
cmp
fstpt
dec
loopne
popf
lock
xchg
jge
icebp
pop
mov
jge
push
xchg
dec
bnd
in
imul
cmp
xor
rcl
push
rcr
out
sbb
jecxz
adc
into
jl
adc
xchg
out
dec
jmp
xor
pop
push
dec
mov
mov
jmp
imul
in
xchg
xlat
push
and
xchg
jg
mov
push
xor
gs
xor
inc
xchg
and
iret
push
mov
adc
add
pop
lret
iret
bound
in
ret
scas
setge
cmp
mov
push
push
rcrl
cmp
adc
sbb
pop
in
enter
js
repnz
ja
out
sbb
addr16
inc
xchg
sbb
pop
cmpsl
xchg
fisubl
pop
xor
sub
fildl
into
xchg
fldt
repz
or
jl
mov
mov
icebp
and
ljmp
and
scas
pop
cli
jmp
out
inc
xor
in
push
aad
fldenv
fwait
bswap
cld
cs
or
xchg
and
xchg
repz
lods
inc
xchg
adc
jp
call
push
aad
int3
adc
adc
int3
cli
pop
xchg
fsubrs
sbb
sbb
aaa
mov
sahf
sub
cs
mov
out
jmp
add
or
insb
inc
pop
movsl
sbb
ror
inc
pop
mov
or
mov
jge
movsb
movsb
in
lea
adc
dec
adc
movsl
test
out
shrl
mov
push
push
mov
into
inc
pop
jmp
out
add
sub
cmpsl
push
pop
and
inc
cmpsb
push
cmp
and
cmp
iret
jge
jo
jb
fdivl
cmp
jne
aaa
mov
lahf
xor
adc
xor
call
push
mov
ror
add
idivl
adc
jmp
dec
call
push
pop
into
imul
push
and
mov
das
aas
subb
aas
je
movsl
mov
jp
inc
push
rcll
inc
or
add
xchg
mov
sbb
xchg
cmp
jbe
outsl
push
movsl
das
jb
or
or
add
inc
js
xor
int3
or
shrl
add
cmpsl
ret
jp
test
mov
negb
inc
push
xor
lcall
mov
sub
les
clc
out
xchg
inc
outsl
inc
aad
push
scas
dec
pop
mov
out
inc
lods
outsb
imul
addl
fmull
leave
jge
int3
fidivrl
sbb
xchg
jno
js
test
js
mov
dec
test
jb
gs
xor
mov
add
aam
adc
pop
pop
pop
mov
cmp
dec
or
inc
out
lcall
or
mov
add
jle
cmp
pop
mov
and
mov
jnp
mov
dec
data16
bound
nop
sti
xchg
lods
push
xchg
lahf
inc
push
inc
fisubrs
cwtl
lcall
xor
mov
push
lds
nopl
sti
loope
push
mov
inc
or
fsubrp
sbb
and
xor
into
movsl
call
sbb
adc
or
leave
call
test
shll
shll
xorl
rorb
pop
jl
pop
cli
jge
dec
inc
mov
xor
mov
cmp
mov
dec
mov
mov
mov
enter
lds
insl
shr
mov
or
mov
andb
scas
or
or
add
in
dec
mov
ds
int
adc
cmc
les
cmp
pop
adc
xor
icebp
mov
jp
rorl
sub
cltd
es
mull
dec
sub
repnz
cltd
flds
shlb
mov
mov
popf
incb
inc
fnstcw
decl
push
or
iret
lock
movsl
lret
or
adc
test
or
fs
adc
mov
daa
mov
scas
mov
pop
inc
cmpsl
into
pop
xor
sbb
push
mov
pushf
sbb
cmc
and
adc
cmpsl
jle
ja
xchg
mov
inc
sbb
push
mov
stos
pushf
dec
cli
mov
lret
cmpsb
or
aad
mov
hlt
lahf
int
iret
cmpsb
jns
or
add
pop
arpl
sahf
mov
imulb
xor
xlat
lock
xchg
mov
bound
jmp
pop
mov
mov
cmp
adc
mov
cmc
gs
outsb
pop
mov
xchg
andb
addr16
cld
ret
pop
inc
lret
sub
fmull
subb
mov
cmc
pop
fiaddl
mov
push
ret
add
stc
dec
pusha
das
cmp
ficomps
and
adc
bound
adc
mov
ljmp
sub
mov
adc
or
cmp
mov
pop
in
loope
movsbl
aaa
or
jl
sub
int
rcr
jne
cmp
xor
lret
push
or
sub
sub
pop
popf
mov
rclb
jnp
test
push
sbb
lahf
adc
pop
inc
fwait
sub
dec
jo
stos
arpl
shr
or
movsb
das
add
fistpl
add
cwtl
mov
xor
data16
xchg
mov
rorb
subb
pop
es
lods
enter
mov
les
sbb
les
pop
cmpsl
out
or
mov
adc
mov
lea
les
and
mov
push
sub
jge
imul
icebp
addr16
inc
bound
mov
push
mov
jmp
xor
xchg
sub
adcb
add
ret
test
sti
jne
mov
push
lahf
rorb
fnstsw
loope
cmp
mov
push
andl
popa
push
jo
inc
xor
pop
jns
aam
pushf
jb
dec
popa
imull
shl
adc
gs
fidivrs
push
inc
scas
jae
xchg
cld
lock
test
movsl
xchg
dec
mov
lods
stos
mov
ret
sbb
push
sbb
cwtl
push
jg
fucomi
ret
dec
push
scas
or
push
push
outsb
mov
aam
icebp
xor
scas
les
and
shlb
in
mov
inc
repnz
movsb
lret
add
shr
test
addl
leave
fnstsw
fldt
jnp
sub
mov
ficomps
cmp
js
scas
or
inc
aas
push
bound
stos
int
sarb
cmc
sti
out
mov
ret
push
wbinvd
xchg
jbe
lahf
in
cmp
push
lret
xchg
fdivr
aaa
push
aad
push
pop
fistpl
loop
mov
xchg
pop
adc
xlat
test
mov
dec
bound
stc
aam
mov
shlb
imul
adc
lcall
ds
aam
inc
pop
sub
xor
mov
nop
lea
mov
adcb
fidivl
cmp
pop
cltd
scas
jbe
sbb
cmp
add
sub
jecxz
push
push
test
pop
mov
mov
nop
cld
jge
or
or
push
nop
and
cld
jg
and
cmp
out
scas
adc
out
pushf
inc
lahf
xchg
mov
repz
push
jae
jns
xchg
fsubs
add
jns
testb
dec
insb
loopne
mov
test
inc
xchg
mov
aad
inc
cwtl
cmp
in
or
adc
sbb
movsl
movsl
pop
repnz
test
test
xchg
fdivrl
or
in
jecxz
or
shl
addr16
push
sti
inc
cmp
aad
fidivrs
movsl
mov
rclb
jbe
or
push
jecxz
test
shr
div
lret
xchg
pop
or
insb
out
std
movsl
pop
clc
push
sbb
in
js
stos
aas
sub
add
add
lock
movsb
sbb
cmp
mov
push
aaa
sub
add
insl
je
push
test
push
sarb
jmp
xchg
inc
or
lea
pop
movb
sbb
stos
ja
adc
inc
and
push
cltd
pop
pop
adcl
pop
aad
or
js
dec
xchg
mov
cmc
cltd
adc
sbb
jns
dec
lea
rcr
sbb
movsb
or
sub
rcrb
mov
ficoml
inc
add
je
sar
push
addr16
insb
pop
sahf
call
pop
sbb
int3
lea
sbb
push
xlat
push
push
xchg
jns
mov
adc
sbb
push
pusha
mov
mov
test
nop
rorl
push
sahf
inc
mov
xor
mov
xor
repz
jp
test
push
testl
int3
or
pop
sub
out
icebp
into
xor
popf
sub
addl
lock
or
stc
loope
or
dec
pop
push
add
fsubrl
fldt
iret
aad
add
mov
out
jo
jne
or
mov
dec
stos
xor
enter
ds
test
xchg
enter
xchg
mov
jae
adcb
dec
add
call
jmp
mov
lock
cwtl
jg
xchg
pop
and
mov
mov
add
jl
dec
or
inc
data16
cmp
int3
or
xor
and
addr16
mov
movsb
mov
sub
push
mov
adc
inc
and
dec
test
lods
cwtl
fistpll
xlat
xor
xor
aad
lcall
xchg
sbbl
jne
sub
cmp
jp
cli
ror
aaa
xor
mov
pop
and
movsl
fwait
pop
mov
jmp
aas
fdiv
push
les
sbb
sbb
in
fs
xor
aas
mov
cmp
ret
add
rcr
fadd
or
push
cmpsl
fdivrs
das
das
cmp
in
movsl
mov
jno
imul
lea
aad
add
in
xchg
xor
sti
inc
and
pop
mov
jnp
ret
inc
mov
mov
dec
mov
sub
add
in
jecxz
filds
lret
jae
jmp
mov
ficomps
sub
inc
jno
out
xlat
call
and
mov
mov
jl
stos
lods
add
repz
rcrl
jb
ret
popf
push
loope
adc
dec
add
in
lods
mov
push
push
lret
xchg
jle
and
xchg
les
dec
test
daa
scas
movsb
imul
ret
inc
rcl
xor
and
mov
loope
pop
aad
lock
mov
adc
adc
mov
mov
inc
lods
aad
loope
mov
push
les
sbb
enter
adc
cmp
pop
sbb
arpl
arpl
mov
push
mov
vpackuswb
enter
pop
xchg
outsb
sbb
pop
push
mov
sub
inc
ds
mov
push
xor
inc
mov
mov
stos
cmp
fidivrs
mov
in
les
pushf
aaa
test
rorl
xchg
js
push
jl
or
gs
xor
mov
inc
xor
pop
sahf
mov
add
lods
pusha
sbbl
clc
dec
stos
orl
pop
lcall
lret
dec
dec
jns
sub
pusha
add
add
sub
out
push
or
adcb
cli
out
and
cs
cmp
inc
js
gs
cmp
pusha
icebp
repnz
ljmp
mov
fidivs
ds
add
sub
adc
cmc
adc
push
daa
std
adc
nop
jecxz
testb
adc
call
sbb
outsl
mov
mov
sub
sub
xchg
and
jl
outsb
lock
repnz
iret
sbb
nop
push
repz
cwtl
push
mov
shll
mov
aas
inc
jp
xor
and
push
scas
int
arpl
inc
inc
int
add
pop
mov
dec
push
xchg
lret
shlb
imul
lock
movsl
imul
sbb
out
xorl
lret
or
les
iret
and
adc
or
dec
push
mov
xor
mov
call
lods
pop
out
jg
aaa
pop
scas
lcall
cmp
into
and
pop
xchg
shlb
jnp
test
cmp
aam
sub
daa
js
or
sti
jmp
nop
and
add
subb
lock
push
xchg
sub
or
inc
maskmovq
jl
lods
push
insb
daa
gs
fsubs
divl
sub
scas
and
cmp
push
sbb
arpl
cmp
shr
popa
push
and
ret
clc
xor
push
pop
add
xchg
jo
xlat
or
loop
mov
jno
out
ret
out
stos
sub
push
fs
dec
mov
mov
or
loope
das
enter
aam
push
dec
loopne
xchg
call
jg
mov
xor
shrb
mov
lods
inc
push
stc
push
push
mov
jg
adc
mov
mov
xchg
mov
pushf
mov
loopne
push
or
ja
loop
jp
mov
stos
inc
add
pop
ret
adc
jmp
outsl
push
xor
fcos
xchg
movsb
fsubs
and
push
imull
call
ficompl
fistpl
iret
cmc
mov
sub
xchg
into
pop
mov
xchg
addr16
inc
pop
mov
icebp
pop
adc
clc
or
inc
pusha
and
loope
jl
imul
pop
and
int
lods
sub
movsb
pop
mov
push
push
icebp
fsubl
xchg
lahf
mov
sbb
les
aas
loop
pusha
jge
hlt
push
test
cmp
fwait
pop
and
and
xlat
push
mov
mov
adc
cmpsb
cmpsb
adc
dec
mov
cld
js
add
dec
in
cmp
into
dec
xlat
or
lds
xchg
push
xor
gs
sub
xor
jp
inc
sbb
push
rorb
fwait
insl
test
loop
push
jno
pop
test
lods
leave
jp
loop
je
or
into
push
mov
or
stc
cmp
pop
or
stos
jno
mov
test
mov
push
mov
cltd
outsb
in
lret
jl
jne
xchg
sbb
scas
rcrl
out
testl
adc
fs
pop
sbb
jmp
lock
jl
push
mov
push
jo
jmp
adc
jle
arpl
enter
rcll
adc
aam
bound
pop
insb
lret
shl
enter
insb
outsl
and
rcrb
dec
mov
pop
outsl
pop
aas
insb
std
push
sub
lret
aaa
aad
jb
cmp
fcoms
pop
jmp
test
sahf
jbe
stos
scas
dec
jb
cmc
fs
enter
push
jmp
cmp
xchg
enter
xchg
jnp
push
sti
mov
dec
sub
orb
sbb
push
and
inc
jecxz
jmp
das
stos
dec
daa
adc
mov
cli
lds
cmpsb
cmp
in
popa
shll
lcall
mov
xchg
xor
add
imul
into
sub
outsl
or
daa
fnstsw
cmp
inc
fsub
inc
dec
das
cmpsl
andl
pop
dec
mov
jmp
rorl
cmp
mov
repz
nop
insl
imul
adc
and
fidivs
jns
ficompl
loop
mov
addr16
and
adc
jo
out
pop
cli
lret
jbe
dec
jge
daa
jmp
cmpsb
xor
pop
jne
js
add
test
imul
movsb
adc
pop
mov
rcrb
pop
mov
scas
jp
push
push
push
es
pop
inc
addr16
cmc
jecxz
sub
sub
inc
cmp
dec
lcall
mov
xchg
je
out
mov
mov
ret
pop
mov
pushf
dec
pushf
scas
iret
popa
call
or
mov
insb
ret
not
xchg
sub
or
fldt
sbb
dec
cmp
push
lods
mov
pop
cmp
ds
and
aas
fwait
cmp
dec
mov
xchg
push
nop
fscale
sbb
rcl
and
sbbb
push
lods
inc
sub
fs
inc
shl
sub
pop
cld
or
push
pop
in
pop
gs
cld
mov
jae
mov
rclb
push
lahf
mov
mov
jp
or
lea
xchg
pop
add
xor
xchg
jmp
dec
outsl
sarl
cmpsl
dec
fistpl
bound
into
in
mov
mov
add
cmc
cmp
xchg
sti
out
mov
repz
clc
test
dec
in
or
mov
xor
push
hlt
cmp
sbb
inc
popf
push
cld
or
xor
out
xor
scas
xor
pop
popf
mov
fistl
sbb
data16
loope
test
push
outsb
mov
aam
push
pop
cmp
jb
inc
sbb
ds
fucom
loopne
ja
inc
les
inc
or
cwtl
push
test
sahf
cmp
pop
cmpsl
sbb
int3
mov
lea
adc
cmpsb
pushf
pop
fidivrs
stos
call
jae
sar
mov
cmp
sbb
push
imul
repnz
and
jmp
jb
push
aad
inc
scas
out
test
dec
lock
xchg
sub
popa
mov
mov
push
repz
xchg
push
xchg
cmp
xchg
pushf
movsb
sub
pop
push
std
mov
test
xlat
test
xchg
inc
push
addr16
insl
fiadds
and
in
repz
movhlps
fsts
xchg
xchg
and
cmpsb
push
cwtl
xlat
inc
bound
jnp
lea
add
inc
test
xchg
loop
jb
iret
test
pushf
inc
push
ds
lret
popa
fnstenv
fiaddl
pop
jp
push
cmp
int3
mov
cwtl
aaa
out
imul
in
test
push
lret
add
cmp
lods
xchg
adc
int
sub
mov
ret
shll
cli
xchg
aas
adc
push
mov
lahf
outsl
mov
xlat
cmp
push
cmp
addr16
fdivs
ficomps
ret
dec
lods
test
add
inc
jb
fildl
shll
fnstsw
add
aad
or
pop
rolb
lock
out
scas
inc
rcll
arpl
cmp
pop
stos
dec
in
shll
in
std
stos
sbb
lea
and
sbb
sub
xchg
or
inc
leave
jp
mov
pop
cli
push
and
in
mov
mov
cmp
bound
iret
jle
mov
pop
cmpsb
lahf
and
and
xor
push
ljmp
sub
rorl
lods
sti
negl
loop
inc
nop
pop
mov
das
mov
cltd
fimull
sarb
sbb
mov
in
mov
test
jmp
jae
sub
mov
jmp
and
xor
jmp
idiv
mov
sub
fbld
jnp
inc
sub
jg
ja
add
outsl
in
push
out
test
jno
push
js
out
cli
and
cmp
sarl
mov
mov
xchg
xchg
sub
aaa
sub
xor
mov
add
dec
loop
je
out
add
lods
faddl
xor
call
lea
xchg
mov
jbe
fistl
es
push
mov
adc
adcl
repz
adc
data16
mov
jae
xchg
popa
js
dec
xchg
test
adc
dec
int3
scas
je
cmp
sub
and
in
push
cmp
sub
cmp
inc
push
cld
sub
nop
negl
cld
inc
and
dec
cmc
popf
xchg
mov
pop
fimuls
mov
push
je
clc
jge
testb
data16
or
sbb
jmp
or
adc
int3
mov
jae
scas
pop
cwtl
mov
scas
inc
push
out
xchg
add
imul
subb
jno
data16
das
dec
lock
movsb
push
inc
sbb
mov
not
out
lods
push
inc
sbb
mov
rcrl
inc
out
fcmovne
insl
cltd
fisttpl
ja
xchg
add
leave
push
mov
add
lcall
adc
xchg
std
cmp
push
paddd
mov
rorl
push
push
orl
or
pop
cmp
pop
cs
test
into
mov
shlb
ljmp
popf
insb
cmp
or
in
cmp
jle
sbb
push
aaa
cmpsb
enter
test
pop
inc
pop
inc
ds
mov
pushl
pop
adc
sbb
or
add
pop
add
mov
notb
jo
testl
push
fildll
mov
pop
call
mov
loope
hlt
in
xor
cmp
jl
jno
fldcw
in
or
popa
xlat
xorb
lcall
fnsave
push
cmp
jo
xchg
or
loopne
jae
fistl
mov
xor
push
dec
and
jg
bound
jns
jo
mov
std
mov
test
jae
sub
mov
lcall
pop
in
fistl
iret
and
push
add
inc
out
mov
stos
mov
es
sub
popa
lea
cmpb
mul
movsl
xchg
mov
into
push
sub
cmp
aaa
insl
mov
add
loopne
das
xor
mov
rcll
lret
cmpsl
lret
mov
out
add
orb
lahf
addr16
hlt
int3
lea
and
mov
sbb
mov
decb
mov
xchg
xchg
xchg
gs
fdivrs
ss
icebp
bound
notl
in
test
pushf
adc
movb
xchg
cli
pop
push
sub
fxch
mov
out
adc
negb
mov
add
repz
mov
mov
iret
pop
insb
imul
cmp
xor
and
out
xchg
stc
mov
sub
adc
mov
outsb
push
sbb
cwtl
jmp
icebp
xlat
jp
ja
test
jmp
dec
fs
imul
adc
or
aas
mov
inc
inc
inc
inc
adc
arpl
inc
pop
test
ss
in
sub
test
mov
xchg
mov
stos
xor
mov
lcall
inc
inc
aam
push
pop
test
fidivrl
mov
movsb
dec
xor
sbb
or
std
outsl
jne
or
jmp
dec
or
subl
jecxz
lret
sub
out
mov
cld
test
movsl
xlat
addb
sbbb
sbb
sub
add
rcll
ja
push
sbb
or
or
dec
repnz
nop
out
repnz
bound
mov
jae
test
rclb
fcmovne
das
adc
and
inc
push
mov
inc
aas
ret
push
imul
push
or
dec
mov
jle
addr16
mov
fistps
sti
addl
xlat
rorb
xchg
filds
mov
add
mov
push
xor
pop
test
inc
jns
push
not
sbb
cltd
stos
mov
mov
sbb
out
out
pop
push
sbb
cli
les
jns
sbb
lret
jmp
mov
addl
mov
adc
out
sub
inc
cmc
jb
adc
int
xchg
fdivrs
orl
adc
loope
inc
mov
push
sbb
and
jle
pop
ret
dec
int3
out
xchg
xchg
or
imul
jmp
inc
push
mov
repz
rcrl
ffreep
loop
xchg
sub
inc
and
jbe
fstl
add
repz
cwtl
xchg
lret
mov
out
jns
dec
int
jbe
mov
push
push
pushf
pop
loop
or
adc
or
in
lods
jl
sbb
adc
aam
adc
add
mov
fnstsw
sbb
mov
frstpm(287
mov
daa
enter
xchg
lods
stos
or
mov
jge
call
out
sub
out
mov
add
push
hlt
xchg
xlat
out
dec
jmp
sbb
mov
push
add
in
es
nop
aam
fdivrl
pop
push
xchg
and
mov
aas
or
and
pop
int3
cmp
inc
mov
add
pop
pop
lcall
or
push
pushf
push
popf
fwait
in
pop
addl
loopne
mov
adc
mov
sahf
in
test
pop
push
push
test
andl
sbb
sub
pop
outsb
pop
push
mov
or
hlt
inc
cwtl
adcl
in
mov
jle
mov
in
push
sbb
xchg
pop
mov
fcomps
xchg
gs
mov
add
inc
je
push
insl
mov
call
jmp
sub
lahf
loope
lds
add
xor
mov
xor
fs
mov
fcomi
pop
mov
std
push
lea
mov
cld
das
orl
repnz
aas
jge
xor
mov
stc
fcompl
inc
and
and
sbb
xor
push
fsubr
xorb
dec
xor
mov
pop
scas
mov
jae
idivb
xor
jb
insb
inc
jge
sbb
cmp
lretw
jg
xor
xchg
sub
sub
cmpsb
aaa
mov
pop
xor
ss
mov
icebp
mov
mov
and
jb
scas
call
cmp
aad
sub
mov
lret
mov
outsb
adc
cmc
push
push
mov
int3
lret
divb
dec
stos
ss
out
stos
adc
icebp
push
jp
cmc
out
adc
jno
mov
jb
mull
lods
in
addl
or
imul
jmp
jle
test
cli
add
iret
dec
call
sub
jae
dec
inc
pop
test
movb
mov
sti
test
stos
nop
sbb
ss
xor
shlb
dec
shl
sti
or
enter
mov
push
jge,pn
cmpsl
fstl
xchg
outsl
test
popa
dec
rorb
inc
test
fadd
stos
shr
mov
or
pop
mov
int
sub
jle
xchg
fisubrl
cmc
jae
push
mov
cmc
sub
iret
in
shlb
adc
push
sub
sub
rcll
ljmp
insl
cli
dec
out
ss
loop
and
cmpsb
sbb
fcmovnu
test
jns
lret
sti
in
nop
popa
test
out
aad
jb
jmp
xchg
sub
ret
jns
jo
push
je
mov
aaa
leave
add
xchg
dec
dec
adc
push
std
sub
ret
pslld
insl
ds
ret
adc
jle
scas
stos
aam
iret
cltd
jb
std
into
aam
xchg
loop
jge
fs
shrl
rorb
mov
inc
sbb
mov
mov
or
sub
xor
push
fcmovbe
lea
add
test
push
jne
pop
cmpsl
jl
iret
cmpsl
or
pushf
mov
out
add
or
leave
mov
xchg
mov
stc
xchg
xor
or
add
cmp
xchg
inc
sbb
sahf
lods
mov
fidivrl
out
lcall
test
sti
into
test
test
cwtl
cs
cwtl
imul
aam
scas
or
sbb
orb
aas
push
cmp
lods
ds
ret
adc
enter
repz
push
mov
xchg
mov
jns
push
ja
add
sub
mov
data16
popa
sti
ljmp
ja
xchg
add
int
loop
shlb
xor
lods
stos
enter
ret
sbb
or
jb
pop
fimuls
leave
dec
or
dec
push
pushf
sbb
sub
mov
sbb
ficoms
dec
mov
lock
pop
movb
dec
dec
ficompl
js
jle
mov
sub
inc
pop
in
and
lret
imull
push
dec
inc
fcoml
jge
add
movl
jns
sbb
icebp
jno
push
vpsubq
mov
sub
xor
adc
xor
dec
mov
push
cwtl
xchg
mov
xor
cmp
jmp
insb
cs
loopne
icebp
jne
xchg
scas
cltd
mov
lock
pusha
lret
lods
loopne
popa
imul
and
repz
adcl
xchg
xor
mov
lds
sahf
adc
loope
cmp
scas
mov
adc
or
push
inc
popl
jbe
mov
nop
repz
int3
cmp
repz
xor
dec
xchg
inc
jle
mov
rorl
stc
pop
push
sbb
addr16
pop
dec
adc
les
jl,pt
daa
pop
xor
mov
mov
pop
pop
and
inc
mov
movsl
push
adc
or
xor
out
pop
inc
cwtl
lods
or
mov
adc
or
testl
jg
cmp
test
adc
xlat
fwait
ret
sbb
inc
js
aaa
or
fisubrl
popa
mov
stc
call
cmpsb
mov
add
mov
outsl
pop
int3
outsl
inc
xchg
and
cli
jecxz
cmp
hlt
push
stos
sbb
jecxz
imul
fisubs
test
xchg
jl
lods
aam
mov
sbbb
cmpsb
adc
je
lret
or
and
fisttpl
add
pop
and
rcl
popa
pop
lea
xor
mov
leave
sti
mov
push
jmp
fisubrs
fnstsw
mov
mov
lods
xchg
and
or
adcl
mov
and
jle
pop
outsl
lahf
lret
pushf
xchg
xchg
pop
pop
adc
movsb
push
addr16
jne,pt
inc
cld
in
nop
icebp
mov
xchg
jecxz
popf
aam
cmpsl
add
jmp
out
loop
push
push
cmc
stos
push
mov
add
into
icebp
xchg
and
scas
ss
adcb
xchg
rclb
mov
sbb
mov
sub
mov
outsl
push
cmpsb
sub
int3
jb
xchg
mov
dec
cmp
mov
movsl
ret
addb
inc
mov
rol
outsl
or
mov
sti
sub
icebp
mov
mov
stos
mov
push
cmp
cmpsb
cltd
inc
testl
cs
push
in
and
pop
sbb
popf
mov
je
iret
lock
nop
and
jge
movsb
jmp
sbbl
mov
lahf
stc
repnz
je
in
popa
aaa
outsl
push
sbb
int3
ret
sbbl
rorl
ds
fcmovnb
inc
cli
and
in
add
cmpsl
test
mov
sub
sub
cmp
xchg
shlb
xchg
push
out
cld
pusha
xor
lcall
cwtl
js
leave
mov
leave
popa
sbb
cmp
inc
fcompl
lea
cltd
sbb
ret
stos
test
enter
mov
aas
cmpsl
dec
push
lcall
pop
sti
fstpt
pop
nop
push
or
aad
fldt
xchg
xor
xor
xlat
xchg
adc
orl
adc
jae
fwait
push
clc
push
mov
dec
jle
push
push
xchg
nop
stos
jecxz
push
dec
sbb
sub
into
aas
mov
inc
aas
inc
mov
lods
cmp
push
jmp
cmp
pop
cmp
js
int
jnp
push
mov
mov
fwait
xlat
sub
cmp
cmp
xorb
adc
arpl
or
test
mov
in
inc
inc
pusha
mov
mov
sub
and
rclb
rcl
push
or
mov
push
mov
cltd
jno
loop
ds
inc
xor
mov
pop
imul
cltd
xchg
stos
aaa
mov
push
rclb
push
adc
jecxz
in
adc
push
inc
lods
cltd
and
inc
cli
cmc
xor
mov
jge
xchg
scas
sbb
cmp
and
push
or
ds
sub
pop
or
inc
cmpsb
ljmp
out
arpl
mov
scas
jecxz
movsb
lret
das
pmullw
bound
dec
stc
outsb
rolb
stc
ret
int3
cmp
repz
xchg
in
mov
dec
lret
cld
mov
leave
lea
dec
movsl
repnz
call
add
fcoml
fxch
scas
arpl
push
pop
out
lds
pop
xchg
xor
imul
mov
pusha
jae
adc
or
notb
mov
dec
mull
push
mov
push
cmpsl
jp
mov
and
ljmp
dec
popf
xchg
and
repnz
lret
jno
in
cmp
mov
rclb
dec
insl
push
inc
push
shll
gs
pop
cmpsb
push
inc
testl
push
add
xchg
hlt
push
mov
scas
lds
adc
mov
mov
pop
mov
xor
sti
xor
out
decb
aam
pop
inc
dec
mov
call
jb
lcall
xchg
idivb
rolb
xchg
add
xchg
pop
jecxz
mov
push
loop
cmp
xchg
xchg
inc
out
or
dec
sbb
mov
inc
ret
mov
filds
movsl
mov
add
fimull
xor
xor
cmp
adc
ja
and
adc
cmpsl
dec
sbb
gs
xchg
sbb
sub
test
in
sbb
pop
push
pop
je
jno
sarl
shrb
out
inc
gs
aaa
icebp
icebp
insl
cmp
popa
xor
stos
sbb
rolb
and
mov
in
insl
push
aas
ljmp
imul
jmp
dec
mov
sub
lret
push
hlt
mov
arpl
jno
bound
mov
mov
sbb
push
jno
stc
fisubl
dec
inc
or
movsb
xchg
stos
lea
cmp
stc
jmp
mov
pop
out
jg
mov
adc
jae
pushf
inc
in
add
mov
adc
push
jo
pushf
hlt
data16
fsubrs
pop
aas
mov
inc
pushf
ret
dec
mov
gs
in
pop
add
sub
mov
cmp
mov
enter
jno
enter
sub
gs
mov
cmpsl
hlt
js
int
adc
adc
aaa
lods
dec
mov
mov
not
mulb
jnp
add
mov
insb
jmp
xchg
scas
sbb
in
ljmp
xor
in
inc
xchg
lea
sbb
not
or
outsl
pop
movsl
ror
add
mov
das
lods
aas
ret
iret
clc
jne
dec
mov
fwait
xor
movb
push
sub
shlb
xchg
lea
es
xchg
inc
sub
loop
and
dec
inc
cmp
aas
push
or
xor
and
mov
insl
sbb
shl
mov
cmp
fwait
add
fnstenv
loopne
sbb
inc
in
fadd
push
clc
out
mov
or
insl
xor
aad
sbb
insb
adc
js
in
pop
addr16
data16
sbb
jg
mov
dec
cmpsb
lcall
mov
out
pop
imul
jle
add
out
cmpsb
jl
and
cmc
jp
dec
fdivl
repz
jo
sbb
popa
adc
mov
rcrl
into
repnz
dec
inc
nop
pop
ds
dec
cmp
cmp
xchg
sarl
adc
cmp
cmp
mov
cwtl
das
das
mov
add
iret
cmpsb
jb
mov
mov
mov
dec
ljmp
icebp
mov
pop
ds
rclb
push
sbb
pop
fdivs
sbb
in
mov
fdivs
xor
rorb
lock
dec
outsl
sub
sbbl
jmp
lock
cwtl
mov
hlt
sub
cmp
lret
sahf
mov
sub
popa
cmpsl
push
and
jno
mov
mov
push
mull
sub
push
cmp
xchg
sti
daa
iret
outsl
mov
arpl
cmp
mov
inc
iret
mov
mov
shl
jmp
test
rclb
and
dec
mov
adc
jp
cs
in
sub
movsb
sub
xchg
daa
shl
jb
sub
cmp
adc
push
addb
enter
or
roll
cmp
mov
lcall
push
outsb
pop
push
pop
inc
dec
es
mov
ljmp
xchg
mov
lock
out
out
cmp
xor
sbb
pusha
or
jae
rclb
mov
in
icebp
icebp
mov
cmp
mov
mov
lods
inc
push
ds
test
shrl
cmpsl
adc
push
xlat
or
lock
push
cmp
test
fcomi
xor
jno
cmp
mov
sub
lret
xchg
cli
cmp
mov
or
lods
and
loop
adc
les
xchg
push
sbb
mov
add
bnd
in
shll
xchg
test
mov
pop
loopne
ds
mov
ja
dec
fs
pushf
push
movsl
scas
xchg
xor
inc
mov
cmpsl
adc
cld
insl
xor
int3
jno
lret
ret
mov
dec
push
daa
test
iret
xorb
sub
adc
add
adc
addr16
mov
stos
dec
xor
inc
outsl
lret
xchg
enter
mov
ret
push
xchg
cwtl
xor
add
and
fs
or
ret
nop
jge
and
cmp
movb
cmp
sbb
mov
mov
or
inc
aam
repz
ljmp
cmpsl
sbb
dec
loopne
xchg
imul
add
push
cs
mov
jmp
out
adc
mov
sbb
add
and
je
mov
xchg
jle
push
pushf
pushf
scas
mov
ret
pop
cmp
or
pop
popa
cld
mov
jnp
paddusw
adc
dec
jge
pop
push
push
cmp
hlt
cmp
pop
lds
lds
test
out
jge
xchg
or
jnp
popf
lahf
pop
aad
xor
sbb
out
cmpl
mov
mov
cmpsl
insl
jbe
mov
sub
rorb
stos
mov
xor
inc
ds
sub
subb
lret
jns
mov
or
test
inc
mov
out
mov
stc
cmp
loope
movsb
shrl
xlat
mov
mov
or
dec
pop
jbe
mov
xchg
adc
jno
xchg
push
icebp
push
mov
sarl
xchg
mov
add
and
pushw
shl
mov
pop
jnp
mov
add
cmp
jg
or
pop
ja
dec
data16
adc
jne
mov
add
xor
movl
fcoml
cs
cmc
outsb
lret
lods
in
add
add
loopne
clc
mov
mov
add
sti
stos
inc
data16
fxch
mov
les
movsl
xor
icebp
out
inc
movsb
lods
fimuls
sbb
xor
dec
pop
mov
mov
nop
out
shrl
jae
sti
in
in
dec
adc
imul
fiadds
sbb
mov
jnp
cmp
xchg
nop
enter
repnz
jmp
cltd
out
inc
shr
inc
mov
and
dec
les
fildll
fcomip
adc
shlb
push
mov
test
sub
sub
outsl
insb
test
add
imul
jge
fisubrs
idivb
dec
sub
int3
mov
mov
xchg
pushf
test
pusha
shll
jg
ja
ret
and
adc
mov
ss
rolb
in
icebp
push
jge
sarb
xchg
fistpll
int3
adc
push
cmpsl
mov
xchg
fsubp
outsl
movsb
xchg
test
and
vfnmsub231ps
and
iret
iret
push
inc
fstps
jne
mov
sub
jae
push
pop
inc
or
xlat
or
push
xchg
mov
cmp
lahf
pop
or
jmp
mov
adc
jno
idivb
test
fldenv
lcall
sahf
fwait
call
mov
jns
leave
psubsw
sbb
das
pushf
sbb
push
fwait
jecxz
sbb
xchg
pop
push
iret
stc
adc
xchg
or
bsf
out
pop
push
jno
pop
and
push
mov
inc
rcll
ret
mov
and
ds
jmp
fwait
xor
bound
push
xor
and
mov
adc
cli
cmp
fidivs
adc
xlat
push
aad
psubq
aam
dec
lret
ret
sahf
or
mul
sub
add
insb
ds
sti
add
jns
and
and
daa
les
jmp
shll
imul
mov
shll
or
jnp
xor
push
outsb
xchg
cmp
fldenv
das
mov
and
fidivl
in
imul
push
bound
xchg
faddl
sahf
cmc
push
je
mov
jmp
inc
push
add
cld
sbb
call
je
or
jnp
sub
iret
or
add
pop
nop
movsb
test
xor
orl
popf
dec
iret
aas
dec
mov
or
mov
repz
pop
push
cmp
xchg
pop
shrl
rolb
cmpsl
xchg
clc
movsb
pop
arpl
int
mov
jnp
push
stos
lcall
cmp
sti
adc
jnp
pop
fcompl
dec
test
mov
out
arpl
xor
push
cwtl
fidivrs
icebp
add
jno
fdivl
jo,pn
xor
cmp
lds
ret
inc
test
xchg
xor
pushf
cli
lods
xor
jb
testb
test
daa
jbe
mov
loop
aam
cmp
fsubrs
pop
jg
fisttpl
cmp
inc
pop
ret
fisubrs
jnp
cwtl
add
nop
pop
pop
pushf
repz
repnz
dec
fistpl
jo
or
in
rorb
push
sub
ds
in
fwait
out
jbe
xlat
and
or
mov
outsl
in
test
int
mov
push
out
jge
ret
xor
xchg
in
lods
jg
add
xor
daa
cmpsb
lds
jmp
loopne
leave
aas
push
popf
mov
mov
orl
mov
inc
push
shlb
dec
cmc
mov
cmc
xor
sbb
inc
shrl
cli
stc
cmp
push
xor
sahf
aam
aam
loop
enter
sahf
into
lret
mov
push
push
pop
arpl
mov
in
jns
mov
pop
and
xor
in
loope
leave
mov
int3
or
inc
add
mov
sbb
adc
pushf
or
imulb
aam
mov
mov
repnz
stc
sbb
adc
jecxz
dec
push
and
inc
or
lock
dec
add
dec
clc
push
jle
jb
jmp
jae
cwtl
loopne
cmp
push
push
lea
and
adc
cmp
xchg
jae
or
dec
adc
stos
clc
dec
jbe
cmp
pushf
mov
cmp
add
scas
pop
and
mov
movsb
xor
sbb
xor
mov
movsl
or
pop
les
sahf
popf
aam
popa
inc
mov
dec
or
and
cli
add
inc
pop
pop
add
and
jb
pop
or
push
pop
ds
sbbb
jmp
push
and
and
sbbl
jle
jmp
sbb
xor
lods
jne
dec
inc
or
sbb
sub
inc
xchg
mov
bound
sbb
cmpsb
fcmovnbe
and
cmp
dec
ret
lods
jb
ud0
int3
jg
fildll
fldl
inc
jo
ffree
mov
ret
sbb
sbb
lods
dec
mov
ja
xchg
xchg
and
call
outsl
outsl
push
add
sub
xchg
lock
mov
in
dec
dec
adcb
xor
fs
out
xor
aaa
jae
ja
mov
cli
ret
loop
mov
sbb
xchg
push
aam
cmp
mov
lret
es
mov
push
into
or
mov
cs
mov
xchg
leave
popa
push
out
xor
inc
mov
arpl
dec
xor
mov
sub
dec
nop
inc
insl
lahf
sub
jmp
fs
inc
pop
stos
mov
jmp
imul
int
mov
int3
add
sbb
xchg
xchg
mov
ss
cltd
mov
sbb
fcompl
sbb
jns
mov
xchg
test
dec
cmpsl
mov
cli
pusha
in
out
jecxz
popa
call
cmpsb
jmp
cmpb
xchg
jmp
xor
jg
mov
paddb
popf
jne
mov
pop
xor
add
popa
fisttpl
mov
add
xchg
push
addl
sub
xchg
call
push
xchg
xorb
insl
cmp
add
fisttpl
inc
cmpsl
cmp
inc
sub
lods
xor
xor
out
adc
rcrb
and
fisttpl
out
repz
push
mov
cmp
jne
loop
data16
dec
shrb
dec
jbe
pop
mov
pushf
xchg
test
add
std
mov
rol
sub
ds
adc
bound
xchg
inc
negl
mov
jg
daa
push
xchg
test
lods
cwtl
push
xor
addr16
push
push
xlat
shl
scas
jb
pop
push
sbb
out
and
add
pushl
xchg
lock
fucomi
add
sub
fsubs
jae
push
repz
push
imul
push
sub
pop
mov
pop
imul
push
adc
aas
sbb
pop
lret
je
dec
push
or
out
mov
cmp
cmpsl
mov
or
iret
cli
call
jmp
jne
or
or
adcb
movsb
pop
std
and
pop
lds
sub
je
push
mov
test
shlb
and
insl
jbe
mov
out
sub
test
stos
xor
fsts
jle
dec
stos
and
push
pop
cmpsl
sub
dec
pop
fsubrl
cmc
test
mov
aas
stc
cmp
cmp
negl
jecxz
xor
mov
imul
fcoml
pop
imul
cwtl
lds
mov
mov
lock
xchg
cwtl
mov
xchg
divl
push
xchg
cmpl
xchg
push
gs
push
lds
in
xchg
mov
in
pop
inc
xchg
loopne
mov
shlb
int
and
leave
jecxz
xchg
mov
push
std
push
insl
add
movsb
sbb
daa
outsb
js
in
aaa
cmc
adc
outsb
push
test
aam
stc
push
mov
push
cmp
in
dec
inc
mov
in
mov
or
and
jne
cld
sbb
push
inc
mov
mov
adc
sub
push
enter
stos
jb
xor
jb
push
mov
jecxz
je
aaa
fnstcw
add
leave
repnz
ljmp
int3
dec
dec
enter
stos
cmp
repnz
out
aaa
aam
aaa
ror
add
arpl
aaa
pop
sbb
pop
in
mov
stc
aad
hlt
lock
lock
xchg
mov
xchg
push
jl
shll
mov
push
ss
into
lret
adc
std
add
xchg
outsb
ja
dec
sbb
icebp
inc
mov
fisubl
and
sub
sbb
idivl
cltd
lahf
xchg
adc
rcl
lods
std
inc
sahf
bound
sahf
sbb
lods
scas
add
addr16
jmp
ss
inc
cwtl
int
pop
lock
adc
push
sbb
inc
xor
fidivrl
cmp
or
hlt
out
fsubs
pop
rclb
aad
cli
mov
fstpt
sub
lock
mov
jg
mov
rcrl
push
inc
fstl
loope
xchg
js
xchg
outsl
mov
pop
push
sbb
mov
jae
cmpsb
imul
in
out
and
cmpsl
mov
ja
pop
sbb
repnz
and
cld
adc
call
push
mov
xor
xchg
out
sar
ror
insb
or
mov
mov
dec
and
xchg
fs
sbb
loope
jne
add
inc
mov
inc
pop
stc
or
xchg
cld
pop
jmp
sbb
push
std
inc
cmpsb
and
in
inc
dec
push
dec
jno
ret
xor
jae
mov
adc
add
mov
xor
fisubrs
fildl
jecxz
xchg
jns
dec
mov
shll
in
add
inc
and
jb
into
stos
lods
into
ret
repz
int3
and
imul
push
or
dec
subl
int3
add
imul
out
ss
sti
out
inc
xchg
hlt
add
daa
mov
dec
add
jbe
call
das
mov
aas
cld
ficompl
insl
icebp
xchg
cwtl
mov
daa
iret
gs
push
stos
and
dec
and
or
nop
or
dec
or
and
jb
mov
sub
and
es
mov
imul
xchg
lret
jge
cli
ja
jb
outsl
dec
insl
add
xchg
nop
jae
adc
cs
adc
mov
arpl
xchg
inc
inc
cmp
pop
mov
cmpsl
or
inc
inc
imul
mov
jp
mov
es
in
mov
data16
ror
jns
mov
pushf
sbb
and
mov
scas
mov
mov
lods
cmpl
pushf
cmp
addb
ror
pop
iret
mov
dec
inc
add
inc
cs
push
cmp
push
sub
je
push
aad
pop
addb
inc
daa
or
xchg
outsb
mov
sub
xlat
test
xchg
push
mov
scas
pusha
add
in
push
in
jno
daa
cmpsb
xchg
adc
dec
addr16
stc
pop
add
fwait
scas
sbb
xor
and
and
pop
pop
mov
cmpsl
les
cmpb
or
pop
cld
push
cs
xchg
cmp
clc
adc
xlat
mov
jns
cmp
mov
popl
jne
dec
mov
lahf
and
mov
jno
outsl
push
push
scas
mov
jno
xchg
icebp
int
dec
lds
sahf
inc
fsubl
sbb
push
sbb
mov
mov
dec
cmpsb
repz
pop
fstl
in
insl
inc
push
clc
pop
pop
cmpsb
repz
inc
int3
cmpsl
test
pop
push
fidivrl
jecxz
jg
dec
mov
hlt
mov
inc
pop
xlat
sbb
or
push
add
mov
mov
pop
dec
pop
mov
xchg
pop
mov
enter
js
pop
pop
lock
je
xor
lret
lds
sub
sbb
pop
or
jp
lahf
lea
sbb
into
add
xor
mov
pop
mov
scas
lcall
xchg
jmp
gs
cmp
lret
xchg
dec
icebp
push
or
jo
cli
dec
repnz
nop
jecxz
pushl
xor
repz
dec
negl
sti
and
xlat
push
mov
movnti
les
aam
push
cmpsb
xor
push
mov
adc
mov
or
mov
stos
and
xchg
jp
dec
aam
ds
subl
movsb
pop
cwtl
roll
repnz
fcmovne
or
jmp
xchg
lret
cwtl
pop
mov
jge
std
nop
pop
cmpsb
into
aas
inc
aaa
jno
pushl
jnp
test
sarl
jp
test
add
mov
xchg
xorl
aaa
add
movsb
sub
insl
cli
sahf
mov
add
lds
dec
rolb
pusha
orl
lods
sar
cmpl
xchg
jl
sub
push
inc
cmp
jg
mov
test
jnp
inc
call
lcall
xchg
pop
mov
fildll
test
inc
cmpsl
pop
je
sub
mov
dec
int3
xor
shll
push
add
imul
and
xchg
and
sbb
mov
mov
add
jo
mov
sub
fwait
inc
mov
sbb
dec
or
mov
rol
cwtl
add
test
mov
sbb
hlt
inc
addb
mov
insl
sbbl
outsl
or
dec
mov
xchg
jge
xchg
and
mov
xor
mov
xchg
bound
sbb
loop
push
in
sbb
das
repnz
xor
xor
inc
or
dec
lahf
mov
xor
jno
lret
jno
mov
dec
push
out
sub
outsb
cmp
test
sub
xchg
cmpsl
lcall
nop
fstps
fwait
mov
movsl
xchg
les
sub
mov
add
lods
xor
lcall
ss
fwait
and
push
ds
jge
inc
repz
add
jno
mov
mov
jmp
jl
cmc
jp
mov
test
jno
pop
dec
test
icebp
subl
cli
mov
cli
jge
jmp
sbb
push
gs
push
adc
bound
shr
or
cltd
dec
mov
push
lock
in
push
mov
data16
lock
shll
inc
xchg
mov
inc
xor
xchg
and
mov
xchg
ljmp
dec
idivl
loopne
mov
inc
lcall
cwtl
stc
pop
lcall
and
imul
sbb
xor
dec
add
mov
push
clc
or
mov
xchg
rolb
xchg
sub
mov
es
testb
mov
inc
push
pop
insb
out
popa
sti
inc
test
cld
cwtl
test
jl
div
ljmp
testl
or
shl
sbb
mov
sbb
xor
jo
add
adc
ret
sahf
mov
pop
fwait
dec
fildl
aas
mov
cmp
or
lods
pushf
jo
fwait
add
xchg
cs
adc
pusha
aad
rcrb
scas
sub
out
xchg
sub
arpl
adc
cmp
pop
pop
outsl
mov
fs
sub
outsl
push
xor
out
mov
jb
mov
gs
lret
loope
pusha
fbstp
imul
mov
insl
or
shrl
mov
or
icebp
insb
scas
jle
lahf
adc
sub
xor
push
mov
add
leave
xor
add
adc
cmpsl
ret
hlt
out
insl
jg
lods
cmp
xor
mov
cmp
mov
push
xchg
sub
cmc
lock
adc
dec
cltd
and
add
mov
fdivrl
or
addr16
and
add
pop
add
sahf
scas
sbb
or
jmp
jmp
fcompl
cmp
cld
sti
ret
mov
xor
mov
dec
sbb
ret
icebp
sbb
xor
xchg
mov
adc
cmp
stos
cmp
sbb
cltd
inc
sub
jmp
repnz
dec
pop
imulb
cmp
outsb
gs
xor
imul
sbb
add
leave
inc
lahf
inc
scas
out
mov
lock
pop
xchg
out
inc
jbe
sub
add
xchg
adc
xchg
xchg
jp
ret
push
pop
sbb
mov
sub
jbe
rcl
push
imul
mov
inc
or
into
shrl
lods
push
xor
icebp
int3
sbb
mov
or
mov
in
mov
and
leave
xor
sbb
popf
inc
pop
daa
xchg
ds
mov
inc
sub
test
cs
mov
xchg
push
push
pop
gs
imul
adc
data16
negl
inc
push
inc
ret
aad
lea
sub
rorl
mov
sbb
jo
dec
mov
or
ss
mov
ret
or
mov
in
pop
or
mov
clc
movl
cmc
xchg
mov
movsl
and
or
ror
inc
mul
gs
mov
inc
jmp
pop
and
out
push
ds
pop
sub
xchg
mov
adc
in
push
fwait
cmp
mov
xchg
pop
mov
pop
sub
cld
add
fdivs
in
pop
inc
inc
outsb
ret
icebp
mov
dec
test
xchg
pusha
fcomip
jp
rcll
arpl
jg
mov
popa
mov
out
push
mov
xchg
dec
aas
mov
scas
mov
push
js
pushf
xor
cmpsl
or
adc
ja
or
or
lretw
rcrb
inc
arpl
mov
sha1rnds4
btrl
pop
push
cmp
sbb
mov
fimuls
xor
in
xchg
dec
pop
xchg
arpl
jle
push
fldcw
lcall
inc
js
push
sbb
icebp
sbb
cwtl
push
fcomps
movsb
xor
adc
adc
adc
into
fs
mov
inc
mov
out
mov
stos
cmpsb
pop
push
jle
pop
idivb
fdivrs
mov
sarl
xor
test
jbe
fsubrl
xor
mov
loope
push
push
inc
mov
sub
and
dec
push
jecxz
xchg
ffreep
lock
dec
mov
jg
xlat
or
pushf
dec
adc
lret
loopne
jno
lds
idiv
cmp
in
pop
in
or
jnp
push
arpl
mov
mov
push
jns
repz
lods
cmpsb
push
jno
pop
outsl
mov
insb
imul
aaa
push
imul
inc
mov
loopne
xchg
jg
xor
add
dec
out
xlat
scas
insb
or
pop
adc
adc
pop
pop
aam
push
mov
dec
mov
ljmp
in
outsb
es
xchg
test
dec
int3
pop
mov
jo
xor
in
das
jno
pop
xlat
xchg
repnz
lahf
popf
xor
out
testb
sub
daa
fldcw
inc
mov
jbe
aaa
xchg
mov
push
dec
pusha
arpl
cmp
mov
jbe
sbbb
ja
sti
ror
mov
sub
mov
dec
lea
sub
mov
repnz
pop
xor
sbb
mov
inc
or
rclb
mov
cmp
mov
and
jg
mov
lea
and
gs
addr16
jae
add
and
and
and
fadds
lahf
cli
dec
std
inc
dec
pop
testb
add
imul
and
sub
push
aam
xchg
add
adc
mov
xorb
mov
std
jp
rolb
jno
stc
and
and
jg
std
in
aam
inc
mov
cld
fs
and
jne
lahf
cs
sub
dec
mov
sarb
mov
cld
aad
xor
xlat
test
cmp
in
pusha
push
insl
dec
push
stc
outsl
push
stos
inc
les
fcmovbe
xchg
cs
ljmp
sbb
pop
movsl
add
in
jl
xor
jbe
sub
shl
inc
push
jge
cmp
and
in
daa
movsb
gs
das
push
shl
fwait
mov
mov
dec
xchg
icebp
lods
mov
xchg
push
ja
pop
mov
push
jmp
pop
mov
mov
test
or
cmp
push
arpl
popl
popf
add
mov
pop
daa
lea
mov
pushf
fnstenv
and
xchg
or
daa
rcrl
pop
xchg
sub
jp
cltd
add
push
daa
push
ja
icebp
test
es
jb
jmp
cmpl
dec
xlat
addr16
sub
aam
aas
and
mov
mov
je
popf
movsl
inc
rorb
inc
add
in
repz
and
fidivs
add
shl
inc
add
in
pop
addb
inc
jns
cli
dec
mov
insb
mov
arpl
repnz
pop
shrb
push
mov
sub
mov
arpl
mov
movsl
aas
rorb
mov
or
push
inc
jb
and
jmp
push
or
mov
insl
sti
push
inc
xchg
pop
lds
insb
cmp
mov
int3
mov
outsb
flds
loop
mov
sub
mov
pop
lret
jg
xchg
div
mov
mul
mov
cmpsl
adc
xchg
arpl
in
jo
ss
push
jle
pusha
adc
cmp
pop
test
bound
pusha
or
pop
cmc
jmp
clc
add
bound
mov
pop
push
ss
and
scas
mov
mov
idiv
movsl
dec
xor
and
and
jo
daa
shll
shl
and
das
mov
mov
fiadds
lods
sbb
push
pop
sub
xchg
jbe
mov
dec
call
add
in
in
adcb
xor
adc
test
xchg
jbe
mov
xchg
xor
sbb
mov
cmpl
jno
cmp
dec
fcmove
pop
mov
fsubrs
bound
rcrl
cmp
icebp
push
add
sub
add
leave
outsl
and
fadds
sub
hlt
imul
iret
or
and
jg
inc
add
cs
arpl
mov
jae
sub
imul
cmp
cs
xor
rorb
push
or
scas
lea
dec
test
inc
sbb
out
xor
jg
pop
mov
jnp
dec
jne
cmp
jmp
jge
cmp
in
cld
mov
pop
rcrl
stos
xchg
mov
repnz
mov
push
mov
aam
leave
push
mov
or
and
cmp
add
aas
out
sub
dec
pushf
pop
sbb
dec
inc
out
adc
repnz
aam
lret
jne
mov
push
mov
and
pop
loopne
sar
outsl
cltd
sti
into
test
icebp
shlb
xor
lods
repz
cmpl
ret
jbe
in
ja
sbbb
add
inc
xchg
in
inc
test
mov
popf
mov
clc
inc
mov
jb
rclb
out
je
sete
or
push
loopne
mov
xor
out
aaa
mov
mov
imul
mov
push
fidivrs
imull
jne
dec
adc
dec
cmp
xchg
jo
imul
repz
mov
pop
add
push
sbb
pop
lods
xchg
popf
mov
dec
insl
jno
add
mov
inc
lods
xchg
mov
pop
mov
mov
dec
sub
imul
or
jae
mov
push
imul
fldl
int3
ret
xor
add
sbb
les
xor
mov
clc
fnstcw
and
push
pop
sbb
mov
pop
xchg
mov
sar
sbb
lret
add
out
rcrl
sub
lcall
pop
movsb
mov
in
mov
inc
xor
lds
test
in
out
pop
aad
cmp
push
icebp
dec
push
in
adc
sub
cmc
xor
scas
mov
pop
cltd
sub
inc
in
jno
lods
enter
mov
in
push
mov
pop
and
xchg
pop
divl
or
push
js
cld
mul
shrl
enter
lahf
pop
cmp
cwtl
mov
pop
arpl
test
arpl
rcrb
stc
adc
lds
stc
popf
fadd
mov
add
shr
ret
cmpsl
or
cwtl
adc
mov
jnp
xchg
fisubrs
sub
nop
loope
stos
jne
dec
push
or
push
ds
sub
push
or
rcll
cli
jle
mov
jp
push
dec
inc
lret
jo
pop
stc
cmpsb
test
adc
shrl
daa
xlat
fistl
imul
scas
mov
mov
mov
jno
jge
scas
outsb
lock
sub
jno
imul
add
loope
xchg
and
add
sti
sbb
dec
mov
ret
pop
js
ficoms
push
int3
jp
nop
mov
repnz
je
add
dec
mov
add
or
xor
mov
aam
rorl
dec
fisubrs
mov
test
cmc
es
insl
rcl
imul
dec
mov
inc
rcrl
fcmovne
pop
cmp
ljmp
jbe
sub
loopne
cld
mov
mov
mov
and
lcall
pushf
popf
push
lret
mov
xor
xor
ficomps
mov
add
cli
mov
xor
push
sub
cld
push
lock
mov
call
pop
popf
sbb
aas
adc
shll
fcoms
loopne
fdivrl
les
loop
sbb
or
push
mov
push
push
fsubrs
jmp
stc
testb
daa
jle
push
mov
mov
cwtl
std
aam
into
dec
and
push
rclb
push
mov
mov
xor
jnp
rcr
or
and
or
loop
test
inc
push
out
xor
pop
adc
lret
sbb
push
add
inc
add
inc
sub
in
add
into
or
addr16
cmp
mov
fadds
lds
jl
mov
push
cmp
sub
pop
sub
and
lds
dec
xor
xchg
mov
mov
enter
shll
adc
popa
add
hlt
add
mov
mov
xchg
sub
inc
adc
jno
loop
pusha
in
lret
arpl
jae
or
mov
xchg
mov
lods
or
and
int
sbb
call
inc
pushf
mov
shrl
std
fstl
adc
lea
aam
mov
jmp
xor
mov
test
sub
sti
rcll
sbb
mov
xor
into
ret
ror
lods
ds
nop
fcmovb
cmpl
data16
rclb
push
insb
and
jl
inc
sbb
and
fidivrl
xchg
cmp
test
xchg
repz
pop
sbb
sbb
test
int3
call
loope
cmp
in
pop
or
pop
cmp
xchg
in
mov
push
and
jmp
mov
ret
fidivrl
cmp
push
push
insb
jns
lret
mov
fstpt
aaa
and
or
stos
iret
into
pop
dec
notb
inc
push
mov
adc
lock
jp
addb
in
test
inc
mov
xor
scas
lock
cmpsb
adc
fptan
mov
mov
mov
jmp
pop
movsb
mov
cmp
popf
popa
lea
sub
adc
or
call
dec
push
loop
fcmovnbe
mov
xor
das
lods
push
stc
pop
mov
cmp
cmc
fs
mov
aaa
imul
mov
or
cld
push
mov
outsb
adc
mov
xchg
pop
pop
insl
scas
xor
push
and
inc
aam
jle
imul
popl
scas
xchg
lds
pop
jecxz
ja
mov
push
dec
or
test
mov
popa
sahf
xor
movb
or
out
stc
xchg
je
cmc
mov
cmp
pop
jecxz
out
pop
negl
test
sub
nop
enter
dec
xchg
in
jns
mov
aad
push
aad
in
and
push
cltd
sar
jmp
xor
or
inc
and
ja
arpl
inc
test
push
data16
cltd
and
pop
push
pushf
push
mov
adc
inc
leave
es
ljmp
int3
sub
outsl
js
js
mov
sub
call
pushf
sbb
ret
xchg
mov
sub
and
and
ljmp
jne
adc
pushf
inc
adc
or
dec
aad
push
paddsb
adc
popa
popf
addr16
mov
mov
rcrl
add
inc
lahf
inc
inc
enter
daa
mov
jb
cltd
cltd
pop
std
add
shl
movsl
mov
adc
lds
or
rcrl
sbb
jae
sub
cmpsb
stos
mov
pop
fisubrs
sub
inc
pop
lahf
addl
enter
and
arpl
adc
das
dec
and
ja
fadd
xchg
jno
mov
mov
lods
in
shl
test
popa
rcr
pop
sbbl
ds
sub
negb
adc
lahf
std
ds
jo
dec
stos
xchg
xor
mov
push
dec
adc
std
mov
icebp
fwait
es
and
adc
mov
mov
imul
das
outsl
adc
push
fwait
add
mov
adc
in
jae
push
jbe
icebp
push
and
cmp
xchg
mov
mov
jge
mov
mov
loop
adc
aam
and
jmp
out
mov
in
xor
adc
rcrb
and
cmp
fsubrl
sbb
sbb
push
push
js
icebp
mov
mov
dec
push
dec
mov
es
popl
cmpsl
jbe
aam
cmp
adc
ljmp
pop
adc
pop
repz
in
imul
inc
test
int3
sbb
mov
lods
sub
sbb
js
imul
fimull
jg
into
add
int
sti
testb
ds
cmc
push
mov
rorb
in
push
cmp
negb
scas
inc
sbb
push
add
inc
cli
mov
in
repz
push
add
or
mov
mov
mov
push
cmp
addr16
repz
cwtl
mov
push
and
mov
mov
jb
js
mov
mov
push
insl
pop
push
xchg
jns
lods
push
call
inc
mov
adc
push
inc
fnstenv
push
sub
js
cltd
cmp
inc
add
mov
and
jmp
in
fwait
pushf
inc
clc
fldl
inc
xchg
fimull
pop
lods
pushf
sub
test
adc
mov
mov
sbb
inc
dec
cmp
cltd
aam
ret
insb
fs
sbb
xor
addr16
stos
sbb
cli
popf
es
pop
or
inc
xchg
scas
test
shrd
insl
or
cmp
lods
and
xchg
adc
lds
sbb
decb
dec
cs
nop
xor
mov
test
fsubs
inc
cmc
hlt
movsl
fstpt
arpl
sub
int
push
xchg
cmc
and
pop
repnz
into
push
ljmp
or
stos
shll
pop
and
or
jmp
jns
adc
sbb
inc
int
xchg
xchg
and
cmp
stos
neg
push
dec
pop
cli
rclb
sbb
sahf
add
fwait
mov
imul
gs
mov
add
adc
inc
adc
adc
or
mov
lcall
or
adc
mov
fsub
lods
mov
bound
dec
jg
jmp
jl
roll
mov
stos
sbb
cmp
adc
and
dec
aam
cmp
sbb
sub
inc
nop
out
jo
or
mov
sahf
fsubs
bound
out
je
push
pop
mov
push
adc
xchg
mov
or
dec
icebp
dec
push
mov
movsb
js
jno
adc
or
int3
aaa
js
insb
lock
xchg
ja
jecxz
outsb
xchg
stos
aaa
mov
dec
ret
sti
add
inc
popa
es
cwtl
xlat
cwtl
mov
sbbb
lahf
stos
sub
insb
insb
mov
cmp
push
fimull
sub
clc
jp
lds
push
sahf
in
enter
jl
lds
in
pusha
mov
loope
enter
adc
das
push
xchg
cli
push
mov
insl
fs
jecxz
dec
mov
cs
inc
pop
test
mov
xor
or
scas
pop
push
outsb
jge
pop
popf
push
adc
lahf
pop
jmp
loop
mov
icebp
in
or
nop
jnp
or
nop
imul
xchg
stc
jp
push
dec
rcrl
jns
cmpsl
and
and
and
dec
xchg
shrl
mov
daa
inc
cmp
popa
test
push
pop
aam
add
mov
adc
enter
sbb
mov
popa
iret
dec
into
aas
pop
cmp
xchg
or
adc
jmp
mov
sti
jmp
mov
idiv
stos
fcomps
aas
test
aad
pop
jnp
dec
andb
int3
xchg
mov
push
pop
mov
or
fadds
je
xchg
jp
jbe
fdivp
push
iret
jge
xchg
stc
push
fwait
jle
insl
clc
cmpsl
lods
sar
pop
sbbl
jns
xor
sti
and
sbb
lret
cmp
icebp
ja
pushf
loop
sub
xchg
and
xchg
jmp
iret
xchg
push
test
xor
xchg
jnp
xor
and
stos
popf
mov
loop
mov
pop
mov
enter
mov
insb
or
inc
xor
lea
inc
cmp
movsb
xchg
sbb
and
sub
in
add
mov
fnsave
mov
push
xor
das
aas
fdivrs
aas
loopne
insb
push
test
xor
outsb
mov
and
mov
ror
push
jns
aad
push
fbld
lock
jp
fildll
outsb
das
adc
sbb
je
cmpsl
fsubl
mov
push
adc
jne
adc
enter
lock
test
lods
sti
pushf
and
adcb
jmp
leave
push
je
jmp
lds
inc
mov
pusha
mov
out
out
sub
sti
sub
imul
mov
pop
cltd
mov
loop
inc
inc
add
loop
jle
sbb
outsl
mov
push
test
and
jae
jmp
insl
stc
imul
dec
xor
out
shlb
sarl
mov
xor
mov
fs
pushf
jne
dec
loope
rolb
mov
dec
mov
push
int
and
jo
es
adc
cld
add
sub
adc
push
jo
pop
jbe
lods
add
rep
inc
ds
pop
bound
addl
nop
sbb
xor
mov
cmpl
int
adcl
sub
inc
xchg
inc
jo
sub
and
dec
repnz
ret
cmp
fsts
cmp
std
xchg
or
push
lret
xor
in
mov
fistps
loop
adc
mov
jns
push
call
adc
fidivrs
movsl
out
lret
jp
mov
decl
push
leave
cmp
fwait
pop
mov
mov
pop
pop
or
cmpsb
mov
adc
cli
leave
int
cli
mov
daa
rep
cmc
push
std
stos
push
lcall
push
jp
sbb
arpl
mov
aam
push
cmpsb
sbb
clc
mov
lret
mov
xchg
sub
sub
ret
jmp
push
pop
cmpb
out
cmp
cmc
les
xchg
stc
mov
scas
xor
gs
cmp
lret
lds
mov
hlt
testl
fwait
xor
aaa
leave
cmp
inc
add
cld
insl
cwtl
andb
jae
or
fsubrs
popf
mov
icebp
mov
les
cmp
fstps
jp
add
daa
mov
pop
mov
xlat
pusha
jnp
inc
nop
addb
jns
mov
mov
stos
and
dec
repnz
mov
aam
mov
jae
test
and
loop
aas
sub
nop
mov
int3
idiv
sbb
add
scas
mov
sbb
cmpb
push
arpl
in
cmp
imul
mov
aas
fiadds
nop
loop
mov
inc
inc
fstpl
cmp
hlt
add
test
or
out
jo
push
rorb
testl
mov
cwtl
and
xchg
shr
mov
mov
sbb
xchg
cmc
call
sub
xor
hlt
mov
xor
jecxz
mov
xor
rorb
arpl
lock
adcl
lock
cld
mov
inc
aas
pop
fistps
mull
popa
xchg
lds
je
xorl
lret
in
push
adc
stc
xchg
rol
es
sbb
aam
mov
add
add
fs
dec
repnz
test
rclb
xchg
jns
and
push
or
shrl
add
ret
and
mov
call
jns
negb
in
mov
sub
mov
nop
js
lods
jp
test
aam
adcl
mov
daa
push
sbbb
and
push
dec
out
sub
jp
sub
in
test
imul
inc
dec
jg
xor
aad
lea
stos
lret
mov
mov
imul
test
fisttpl
push
inc
into
insl
jmp
sysret
or
push
stos
add
mov
jle
mov
xor
mov
das
outsl
filds
or
lods
aaa
sub
mov
mov
daa
jno
dec
inc
pop
sti
movsb
cmp
inc
sub
call
add
cmpsl
and
pop
pop
pop
dec
jno
inc
cmpsl
je
xor
inc
out
mov
rcl
cmp
mov
lcall
out
and
psrad
jno
dec
orl
adc
jno
add
mov
pop
mov
pop
fdivl
mov
call
jg
rolb
mov
fidivrs
fs
bound
cmp
push
mov
jo
ret
and
mov
or
cmp
xchg
or
and
lds
rcrl
sbb
mov
mov
push
call
push
mov
cmc
lds
aad
and
or
daa
sbbb
adc
push
shlb
mov
mov
test
push
push
rcrl
cmp
cmpsb
inc
add
in
add
ljmp
loop
in
aaa
xchg
int3
or
and
les
and
adc
adcl
adc
sbbl
jb
loopne
ds
arpl
push
mov
mov
jle
push
mov
sub
in
pop
push
push
add
add
sarl
adcb
fwait
xlat
fsubrl
cmpsl
xor
and
loopne
lahf
pop
out
ds
aaa
inc
imul
in
imul
mov
cmp
jnp
or
mov
mov
out
add
pop
imul
adc
icebp
fsubrs
adc
iret
aam
push
inc
call
and
cmp
in
fs
addr16
mov
mov
notb
sbb
jg
ret
scas
xchg
push
or
jnp
cmp
jge
push
or
cmpsl
add
and
in
pop
lods
pop
shlb
ret
inc
push
mov
and
mov
push
lods
mov
sbb
leave
push
push
xor
bound
pop
inc
pop
inc
outsl
cmc
mov
lods
nop
in
jne
into
add
push
jnp
rol
out
xor
shll
jnp
mov
pop
call
xchg
jg
pusha
lret
clc
dec
and
sti
dec
xorb
int3
mov
ret
mov
and
pop
shlb
lea
rcrl
ja
into
addr16
popl
mov
outsb
loopne
mov
cmpb
inc
int
mov
movb
xor
jae
cmp
into
jmp
mulb
lcall
daa
mov
fs
sbb
cmp
aas
rep
pop
jmp
jnp
aas
leave
push
je
imul
or
cs
xor
sub
ljmp
dec
sti
out
dec
add
dec
mov
push
jmp
hlt
add
pop
lods
popa
jno
pop
cmpb
test
inc
notb
xlat
push
add
sub
lcall
push
fs
rorb
lret
rorl
xor
fsubl
aam
sub
aam
repz
stos
xor
add
add
xor
cld
pop
dec
sub
and
mov
pushf
xchg
iret
jg
or
inc
push
xchg
dec
dec
mov
xor
adc
dec
loop
shrl
xchg
jae
inc
lds
pop
xchg
add
iret
push
xchg
cltd
mov
push
je
pop
fcmovbe
add
ds
jg
sub
les
leave
dec
pop
ret
sbb
push
stos
loope
mov
sbb
cmc
popf
inc
xorb
mov
out
test
dec
and
push
cld
pop
sbb
clc
loop
mov
jno
lds
stc
sub
jb
repnz
outsl
pusha
addr16
js
in
jae
shlb
dec
xor
cmp
lds
pop
xchg
or
sub
lock
or
or
xor
inc
jg
mov
loope
inc
inc
sub
fildl
or
dec
mov
lods
in
pop
fnstenv
enter
mov
mov
sbb
inc
outsl
sub
into
xor
in
jecxz
out
in
and
cs
out
int
cld
inc
mov
fnstsw
xor
jp
ds
stos
add
mov
stos
mov
dec
fldt
in
and
pop
lret
in
jle
inc
jl
aam
or
rcr
out
in
test
or
adc
push
pop
sarb
ds
arpl
jg
push
out
mov
mov
movsl
lds
andl
jo
sahf
mov
popf
xchg
inc
jnp
xor
xor
lcall
mov
jbe
sti
loopne
icebp
std
cmp
jne
sub
ret
or
jnp
jl
add
aaa
invd
mov
les
in
adc
xchg
push
mov
js
pop
add
and
mov
fs
sub
pop
dec
cmp
insb
xchg
jl
mov
sti
data16
mov
pop
or
rclb
mov
enter
addr16
mov
sub
mov
add
nop
and
ja
test
loop
jb
mov
bnd
icebp
lcall
js
addr16
hlt
ljmp
and
fsubl
jns
mov
repnz
ret
ljmp
push
cmp
jns
lods
jecxz
add
les
int
adc
ffreep
push
enter
sti
leave
shr
testl
popf
imul
mov
outsl
addr16
adc
and
int3
in
ljmp
call
insl
int
insl
loope
leave
sbb
pop
mov
cmp
lods
pop
adc
and
out
ljmp
scas
fists
lahf
add
dec
test
xor
inc
mov
mov
push
aas
in
mov
or
cmc
imulb
cvtdq2ps
xlat
pop
scas
mov
cmp
jo
mov
push
fs
in
mov
mov
jmp
xchg
sub
fisubs
fstl
loopne
pop
or
jae
in
movsl
insb
les
push
icebp
or
pop
cmc
cmp
test
das
popf
pushf
sti
push
add
add
xor
and
imul
mov
pop
bound
int
mov
mov
je
or
sbb
aaa
jae
jecxz
fdivs
push
cmp
xlat
das
lret
incb
xchg
pop
pop
fisubl
cld
lea
outsb
fisubrs
subb
negl
or
cltd
scas
sti
pop
loop
test
dec
xchg
aas
gs
fsubrs
ficompl
enter
or
into
xchg
ljmp
cmc
xlat
imul
sbb
enter
adc
fdivl
cmp
jmp
nop
adc
pusha
sbb
dec
lock
sti
sahf
sarb
les
std
sub
lds
pop
and
dec
out
rolb
sub
sar
cmpsl
call
fiaddl
orb
js
ficomps
popf
lods
xchg
sahf
lods
cmp
mov
cmc
or
cmc
shlb
sbb
mov
sbb
jbe
mov
hlt
xlat
cmp
imul
scas
cwtl
ficomps
mov
dec
mov
mov
push
adc
and
sbb
aaa
mov
sub
shll
sbb
and
pop
xlat
fdivs
xor
xcrypt-ctr
cmpsl
fnsave
les
aas
push
xor
mov
mov
iret
fwait
push
dec
hlt
adcb
mov
jp
mov
jmp
jecxz
fs
sbb
mov
pop
sahf
icebp
or
add
or
clc
js
pop
jb
mov
stc
lock
push
inc
repz
mov
or
and
mov
mov
inc
cmp
ds
aas
rcl
stc
mov
mov
sub
shl
fisttpl
jg
xchg
rorb
lods
cmpsl
or
jge
pop
pop
lcall
rolb
in
ja
cmp
xchg
push
push
cmpsl
fadd
insb
pop
jle
adc
mov
dec
lods
imulb
pop
inc
cld
cmp
repnz
jmp
pop
sbb
iret
movsl
inc
mov
jno
xor
stos
mov
sub
int
fisubrs
push
scas
xchg
pop
xchg
shlb
nop
and
mov
repnz
aaa
jb
or
imull
lods
mov
sar
pusha
jmp
sbb
mov
push
sub
ret
cwtl
sbb
push
adc
icebp
adc
scas
aam
rcr
adc
cmpsl
jnp
mov
out
lods
push
pop
fsubs
adc
mov
or
aaa
xor
pop
cmpb
lahf
bound
jb
push
jecxz
mov
dec
sub
sbb
dec
xchg
nop
scas
push
sbb
fs
sub
cmp
mov
jmp
sub
rolb
push
mov
fistl
ficomps
or
gs
sahf
shrb
fwait
imul
jecxz
and
inc
fcomip
lahf
test
add
mov
adc
lods
stos
cmpsl
out
xor
push
mov
xor
lret
lock
adc
cwtl
scas
and
lock
sarb
xchg
push
and
mov
pop
lret
pop
lock
mov
dec
mov
push
imul
add
loop
fs
mov
sub
dec
int
mov
repnz
ret
add
pushf
ljmp
dec
inc
popa
popf
adc
fimull
dec
pop
rcrl
mov
in
stc
jge
mov
pop
adc
push
shrl
sbb
test
iret
je
ja
sub
or
js
xchg
xchg
fdivrs
cld
mov
lods
out
mov
push
pushf
add
inc
fs
sub
jno
push
mov
fs
or
mov
lea
mov
xor
lods
add
lahf
and
cs
outsl
cmp
int3
pop
movsb
xchg
xchg
popf
pop
xor
push
in
jbe,pn
addr16
lret
jns
lret
fcompl
inc
lahf
mov
mov
inc
mov
test
loopne
cltd
xchg
fucomi
ds
mov
sbb
pop
pop
clc
mov
test
mov
pushf
cmc
sub
pop
stc
sub
inc
or
mov
push
dec
sahf
push
push
cmc
stc
jl
aam
pop
cmp
adc
sti
aad
adc
jb
jp
int
movsb
pop
jnp
fdivrs
or
lret
push
out
adc
pusha
fistpll
fbstp
sub
jnp
add
cmpsl
cmpsb
in
push
mov
sub
xchg
cmp
mov
xor
jl
dec
xchg
out
mov
call
or
add
das
lock
xor
fstpt
gs
repnz
movsl
xor
icebp
or
jae
dec
daa
sbb
les
in
hlt
xor
sub
xchg
jp
or
and
outsl
sbb
push
es
xchg
sbb
insl
cmp
inc
rcl
xor
dec
aas
cld
or
or
xchg
dec
jmp
stc
pushf
push
les
nop
mov
test
shlb
push
push
or
fcmovne
test
or
shll
mov
call
mov
shl
stos
cmp
stc
or
aad
loope
and
std
inc
mov
cld
pop
cs
mov
mov
nop
mov
push
dec
push
inc
lahf
push
jno
xor
inc
and
imul
push
fcoms
shr
jno
arpl
inc
ret
lods
test
aaa
sbb
test
xchg
jbe
mov
inc
pop
fidivs
stc
pop
lods
lds
fdivl
inc
call
popf
push
fnsave
adc
nop
ror
sub
mov
dec
cltd
data16
push
mov
add
int
loope
xor
rclb
sbb
dec
negb
adc
aad
insb
lret
shrb
push
push
push
nop
aas
into
fwait
pop
in
lahf
lea
movsb
stc
mov
jbe
subl
push
and
addl
jecxz
fsubrs
mov
mov
xor
xor
fisubl
sub
sub
adc
mov
xchg
ja
pop
ret
sbbl
jg
inc
pop
lahf
push
xchg
pusha
sbb
mov
jbe
out
sbb
mov
addr16
jns
sub
dec
push
icebp
sbb
push
cmp
outsl
inc
aas
adc
test
pop
adc
mov
and
mov
sar
sbb
out
scas
leave
or
fs
pop
fmull
addr16
mov
xchg
sbb
sbbl
xor
inc
call
adc
outsb
out
ljmp
add
jmp
in
inc
mov
cmp
push
cmp
bnd
adc
push
adc
mov
fdivl
mov
fnstenv
fbstp
stc
mov
divb
xchg
dec
mov
sbb
add
mov
aam
mov
fiaddl
xchg
test
cmp
in
ja
xor
adc
clc
jb
adc
jmp
dec
sbb
out
cmp
push
and
inc
xchg
fcompl
mov
cmc
out
xor
mov
and
jae
in
test
fs
lret
in
inc
repnz
clc
jb
out
cmc
push
adc
push
int3
lock
adc
test
sbb
and
xchg
inc
insl
dec
shlb
mov
adc
sbb
pop
xchg
mov
add
mov
sub
cmp
xchg
mov
repnz
leave
mov
mov
aad
icebp
lret
loopne
ret
or
in
or
fcomip
gs
xchg
shrl
mov
add
std
adc
ds
int
cmpsl
cwtl
push
xlat
mov
xor
and
test
movsb
out
loop
repnz
mov
push
cmp
xchg
adc
ja
or
jl
and
sub
dec
cltd
sub
push
scas
ret
imul
ja
jbe
xor
jo
push
das
adc
push
jle
push
lods
fwait
rcrl
dec
or
xchg
sub
pop
ret
mov
sbb
push
dec
or
fwait
mov
call
scas
in
aas
outsl
or
inc
mov
adc
mov
push
dec
test
xchg
negb
dec
std
adc
pop
mov
mov
or
jp
add
xor
or
adc
ljmp
imul
fdivrl
xchg
mov
mov
incb
outsl
and
mov
push
xor
dec
movsb
in
fistpll
mov
pop
add
lcall
adc
or
aam
in
inc
les
lea
xchg
test
jb
mov
jle
push
pop
and
mov
inc
mov
jg
cltd
das
shrb
cmp
ret
rcl
cmp
lods
jle
cmp
ss
inc
push
bound
jb
sbb
mov
stos
fstl
pop
jnp,pn
adc
insb
in
test
mov
fwait
jb
add
inc
sub
and
repz
in
ds
cltd
pop
pop
sbb
enter
sub
insl
or
push
fbstp
in
lds
dec
mov
mov
test
cmp
mov
jb
movntq
das
pop
jbe
movsl
in
or
out
sbb
or
andb
pop
cwtl
cs
or
cs
clc
xor
xchg
xchg
scas
ljmp
mov
imul
lcall
stos
add
or
or
rcrl
rcr
aas
dec
or
stc
imull
ss
repnz
fiadds
sbb
outsl
pop
dec
jmp
pop
mov
test
or
push
add
imul
icebp
lock
in
dec
insl
mov
pop
pop
test
fs
pop
sarb
addr16
xchg
pop
rcrb
mov
fmulp
fwait
insl
jns
scas
or
jl
cmp
sar
cwtl
les
add
sbb
insb
jo
and
inc
xchg
mov
mov
xor
orb
out
repnz
lcall
pushf
mov
outsl
jge
outsb
and
cltd
out
loop
pop
outsb
mov
addr16
mov
ljmp
jmp
mov
xchg
ds
push
pushf
cmpsb
push
mov
xor
pop
cld
mov
and
jb
mov
rol
push
mov
and
push
mov
jmp
jg
dec
jbe
ljmp
scas
jbe
notb
push
test
jg
mov
arpl
jnp
jno
mov
xchg
cmovo
test
fmull
je
pop
and
ret
out
and
mov
inc
sbb
jbe
out
test
cmp
add
aaa
lods
pop
insl
fsubrs
mov
xchg
loope
stc
jnp
fldenv
mov
nop
test
hlt
mov
mov
jno
push
fadd
jg
ret
adc
pop
xchg
mov
aaa
jp
arpl
sub
xchg
or
cmp
xor
jge
jb
push
mov
pusha
push
ret
sahf
orb
insb
dec
nop
push
cmpsl
iret
pop
inc
mov
pop
mov
test
cmp
loopne
and
daa
stos
sub
ret
push
mov
pop
pushl
inc
imul
fistpl
or
std
daa
push
xlat
test
and
fadds
mov
in
fcompl
pop
cli
enter
sahf
cli
in
jno
dec
push
xor
imul
imul
mov
lock
and
xchg
lret
xor
icebp
cmp
push
xor
ret
mov
sahf
jo
cld
lods
pushf
ret
adc
sahf
dec
mov
test
repz
dec
mov
loope
icebp
mov
xor
fistpl
mov
out
adc
stos
mov
aaa
call
out
fcmove
mov
inc
sub
ds
sahf
mov
scas
or
je
cmp
mov
inc
jno
xor
notb
lcall
xor
inc
push
lahf
mov
lea
imul
pop
stos
inc
pop
scas
leave
sti
and
mov
cld
xor
or
jge
mov
fiaddl
hlt
pop
aas
mov
jmp
pop
arpl
pop
pop
push
xchg
out
lods
push
jns
or
pop
sbb
sub
xchg
out
divl
xlat
mov
mov
and
in
jp
dec
jmp
sub
jge
dec
cmp
pop
mov
xchg
scas
inc
ja
shufps
ljmp
sbb
xchg
movsl
out
inc
mov
pop
lock
test
xor
data16
jecxz
jge
jmp
lahf
sbb
pop
xlat
xchg
adc
and
push
jbe
jecxz
mov
imul
sub
dec
jge
xlat
cmpl
adc
fstl
push
insb
add
in
pop
pop
aam
mov
sti
out
inc
mov
gs
in
jae
data16
lea
ffree
call
or
xorl
movb
ret
sbb
aad
fs
xor
cli
xchg
pop
addr16
fcmovnb
push
rcl
mov
jmp
in
mov
jns
adc
add
mov
or
push
int
imul
and
mov
shlb
push
int
cmp
mov
pop
rcll
rcr
fcmovu
aaa
rcrl
xchg
std
add
sbb
push
movl
inc
shlb
repz
call
icebp
mov
icebp
paddb
lcall
mov
adc
inc
in
ror
cli
adc
jecxz
xchg
push
adc
pop
cld
insb
repz
inc
jle
aaa
dec
push
notl
pop
insl
mov
xchg
clc
iret
clc
xchg
rcrl
and
push
add
stos
xchg
cmp
clc
xor
out
sbb
jmp
add
ret
inc
mov
and
cmpb
idivl
sub
out
ss
mov
test
test
or
mov
out
or
dec
mov
pop
or
pop
add
inc
leave
icebp
jp
es
pop
inc
sub
dec
add
movsb
cltd
add
lret
or
cli
push
xor
adc
lods
sarl
pop
xorb
inc
scas
dec
xor
dec
arpl
xchg
out
ss
adc
push
jbe
cs
cmp
fcoml
mov
or
ss
push
sub
push
in
popa
cmp
cmc
mov
insl
pop
stos
cmp
jne
mov
and
jo
push
push
cld
sbb
add
repz
jbe
pusha
dec
fwait
test
orl
mov
imull
xor
cli
mov
mov
inc
xchg
fisttpll
push
daa
dec
mov
or
ss
sub
xchg
jae
push
xchg
mov
into
mov
add
jmp
cmpsb
or
out
xchg
xor
xor
xchg
mov
adc
adc
rcrb
test
clc
cwtl
mov
insl
insl
push
cmc
cwtl
shll
movzbl
cltd
cmp
jle
inc
add
and
inc
insb
xchg
sarl
or
or
lahf
lea
jo
hlt
aam
in
mov
push
inc
or
mov
xlat
inc
call
lahf
xor
lret
or
and
in
pop
bnd
cmp
and
jns
adc
push
sub
scas
iret
into
pop
push
f2xm1
jp
not
aas
insl
mov
adc
jnp
jg
pop
mov
sub
sbb
outsb
mov
dec
lea
inc
jo
dec
divb
adc
adc
out
xor
sbb
cmc
loope
sahf
xchg
aas
inc
bswap
adc
decb
jle
push
gs
out
inc
and
sbb
pusha
add
sub
mov
adc
or
sub
insl
roll
mov
orb
es
xchg
inc
clc
stc
aas
sub
addr16
das
xchg
xor
adc
hlt
stc
rol
sbb
in
in
ja
inc
sub
push
xorb
jl
jo
adc
fcmovu
mov
out
shlb
cwtl
adc
addb
push
add
mov
sub
psrlw
out
mov
ret
and
sub
pop
fiaddl
mov
in
outsb
ja
repz
sub
jbe
mov
and
shl
ja
cmc
xchg
jae
or
push
xchg
adc
add
mov
or
adcl
ds
ljmp
leave
pop
mov
cmp
mov
sti
into
aam
lret
push
testl
jnp
xchg
or
mov
pop
mov
lds
sbb
xchg
pop
sbb
cmp
push
ret
push
push
in
ror
push
mov
jecxz
push
dec
pop
aam
lock
push
push
jle
ficompl
enter
imul
push
fnsave
jecxz
and
in
leave
shrb
subb
pop
xor
xor
popl
jae
inc
clc
cli
ficomps
insb
jb
jecxz
jge
lea
cs
mov
mov
adc
xor
adc
push
in
mov
pusha
pop
cltd
cmpb
mov
pop
js
xchg
sar
push
mov
outsb
les
js
cmp
in
lret
add
dec
out
fiadds
inc
loope
jae,pt
ds
jmp
pop
imul
xlat
cmp
sub
incl
xchg
int3
mov
repz
iret
pusha
pop
push
gs
mov
sub
ret
aam
loopne
ret
or
js
ja
clc
dec
js
mov
adc
and
or
jns
push
out
rorb
sub
fwait
lds
imul
push
addr16
push
mov
mov
aad
andl
xor
sbbl
mul
sbb
jmp
cmpsb
jbe
repz
nop
addr16
jns
lret
enter
and
sbb
sub
mov
outsl
repnz
xchg
int
pop
add
loop
int
mov
adc
jl
cs
cld
add
pop
or
push
enter
bound
or
icebp
or
sub
mov
sub
mov
fimuls
lcall
push
sarb
lret
ljmp
add
mov
xor
inc
cmp
jae
add
pop
das
fbstp
cmpsl
cs
xchg
or
in
xabort
lods
movsl
xchg
movsb
or
js
adc
dec
inc
pop
insl
push
dec
imul
lret
xchg
cltd
add
jle
dec
orl
push
lea
inc
or
xchg
popa
enter
push
mov
mov
daa
int
inc
fcomp
push
out
mov
cmp
bnd
mov
lretw
popf
out
sti
shrb
aam
sbb
push
lea
adc
push
mov
ss
les
pop
cs
mov
cmpb
in
setge
rcrb
ret
rorb
jne
gs
rcll
idiv
daa
push
cmpsb
adc
jne
and
outsl
xchg
and
xor
mov
data16
dec
lock
jmp
mov
mov
into
add
pop
cmp
fsubl
cltd
adc
dec
pop
pop
out
test
dec
mov
mov
pop
and
js
xchg
insl
adc
sub
int
in
clc
xor
push
sbb
or
mov
call
sub
pusha
or
fbstp
xorl
adc
adc
mov
jmp
mov
jmp
and
push
or
adc
cs
fucomp
mov
mov
sbb
into
aam
cmpsl
adc
xor
pop
gs
loope
push
mov
mov
or
pop
movsl
in
or
rcl
mov
jo
mov
xor
out
inc
dec
lds
dec
and
sbb
xchg
lods
lods
ret
test
lret
pop
or
cmp
cmp
push
idiv
cmp
std
pusha
in
jae
aam
psubb
cmp
fisubrs
xor
push
notb
pop
mov
cmc
jo
movsl
mov
mov
fwait
push
push
imul
and
sbb
sub
movsb
and
dec
add
pusha
mov
clc
insb
jno
mov
xchg
daa
cmc
jle
dec
and
in
adcb
fwait
mov
daa
sbb
xchg
push
pop
push
loope
push
iret
pop
loop
enter
xchg
movsb
imul
push
jmp
les
out
pop
js
movsb
add
mov
xchg
cmc
lods
popa
adc
dec
das
dec
inc
inc
mov
and
stc
out
fdivrl
xchg
fildll
inc
pop
sub
ss
sbb
add
clc
insb
or
push
sbb
lods
shrb
daa
out
jge
xchg
jnp
sub
lea
xor
inc
lock
mov
xchg
xor
mov
jne
pop
cmpsb
mov
out
scas
fsubrl
int3
js
mov
jmp
fildll
sbbb
adc
pop
and
pusha
out
gs
mov
das
dec
cmp
das
repnz
add
and
inc
mov
inc
in
pushf
orl
fdivr
sbb
imul
push
cmpsb
shlb
dec
mov
pop
mov
mov
xor
in
mov
aad
ds
jns
or
or
lret
mov
insb
fbld
mov
push
push
pushf
mov
ret
adc
cwtl
fldl
add
shrb
into
fwait
inc
subb
sub
pop
mov
cmp
xchg
inc
fwait
or
cmpsb
clc
mov
int
adc
inc
xchg
cmp
rcrb
stos
scas
clc
dec
std
mov
inc
cmp
dec
add
test
jp
loop
sub
push
add
xor
xchg
pop
repnz
loope
popa
or
inc
sarl
push
adc
mov
sub
pop
inc
mov
inc
into
inc
xor
call
xor
stos
test
mov
and
push
fs
cmp
xor
dec
xchg
hlt
repnz
cmp
mov
divb
in
sbb
dec
mov
stc
adc
fimull
cmp
outsl
lds
adc
push
mov
decl
mov
xor
adc
in
xchg
fcom
mov
in
inc
inc
xchg
sbb
mov
pop
or
movsb
test
sti
and
hlt
add
inc
cmp
outsl
lahf
jae
cmp
mov
sbbl
dec
scas
fwait
ret
clc
cmp
push
pusha
jg
in
jp
lods
or
test
xor
mov
push
js
xchg
or
mov
push
jno
pop
shlb
cmp
cltd
call
rclb
xchg
out
jne
bound
pop
fcmove
in
call
xor
dec
cmpl
cld
jno
add
mov
pop
pop
inc
test
xor
inc
xor
jne
sti
cmp
and
cmp
push
push
adc
xlat
dec
or
out
pop
or
ret
push
jns
sub
fistps
inc
ja
sbb
ja
cwtl
push
aas
popf
xchg
imul
or
push
or
sub
mov
mov
into
dec
sbb
inc
lods
add
mov
pop
lret
stos
mov
mov
fmul
or
cmp
out
jno
pop
cmp
movsl
in
mov
cmp
imul
push
dec
int3
cmp
ret
mov
push
inc
daa
dec
gs
aad
cmp
adc
lods
jmp
pop
sub
imul
loope
push
sbb
adc
in
jg
jb
pop
lahf
icebp
mov
imul
xchg
push
out
aaa
jmp
inc
sbb
addr16
sahf
dec
aaa
xor
out
jns
xchg
pusha
pusha
nop
ds
cmp
cmpsl
stc
icebp
std
cli
push
mov
mov
mov
fisubs
pop
lar
jnp
pop
jp
ja
pop
cmpsl
inc
xor
mov
add
in
adc
fucomp
xchg
in
inc
fisubrs
jbe
test
addb
in
xchg
dec
jae
inc
andb
xor
xchg
push
adc
jne
sub
lods
mov
mov
and
dec
xchg
std
ret
rcrb
gs
ljmp
cmp
dec
fimuls
icebp
jne
outsl
inc
xchg
dec
scas
and
cs
or
int
cs
cmp
sbb
sbb
out
into
fistpll
pop
push
push
sbb
pop
add
rcll
and
cmp
cmc
push
xchg
ja
lret
shrb
popf
into
inc
jl
ret
push
mov
sti
lahf
aas
fbld
std
push
lds
cmc
scas
and
dec
and
fwait
push
lods
xor
xlat
inc
ja
pusha
xor
inc
mov
push
sub
int
loop,pn
lret
xor
scas
jnp
and
je
inc
sahf
nop
in
lods
xor
fcom
push
imul
adc
gs
xchg
inc
mov
xor
aaa
cltd
or
push
repnz
push
mov
lret
rclb
pop
cld
mov
outsb
pop
test
pop
adc
and
movsb
out
xor
insl
mov
push
and
ficompl
pop
leave
mov
sbb
xchg
xchg
cltd
repnz
xor
mov
mov
pop
fwait
pop
dec
and
xor
shrb
dec
nop
loop
aas
fadds
jecxz
bound
pushf
scas
nop
adc
test
sbb
stos
push
cmp
test
lods
ljmp
fsubl
mov
testb
insl
dec
mov
jmp
inc
inc
pop
mov
mov
lret
mov
add
add
inc
mov
lods
ret
das
pop
je
jecxz
xor
fisttpll
xchg
cld
jb
sbb
inc
data16
jbe
or
xchg
jns
pop
inc
fstpl
popf
mov
jle
roll
lea
loop
dec
mov
pop
cmp
xchg
orb
fcmovnbe
popf
jmp
es
icebp
fiaddl
jnp
push
daa
sub
enter
push
inc
or
test
popa
xlat
arpl
insb
ret
inc
push
in
or
lea
add
sbb
test
and
test
push
adc
cmp
inc
sub
mov
scas
popa
insl
mov
mov
imul
jnp
fwait
or
or
inc
jmp
jo
add
inc
bound
ret
ror
test
rcll
adc
pop
push
rolb
push
adc
aas
scas
or
mov
ficompl
mov
sbb
test
mov
icebp
push
rorb
mov
and
sbbb
movsl
sub
out
cmpsl
lods
inc
les
movsb
and
xchg
adc
out
cmpps
fmuls
inc
push
cwtl
adc
repz
pop
xor
mov
int3
inc
push
sbb
xchg
xchg
sbb
lcall
mov
or
cmpsl
les
mov
js
and
mov
jmp
sbb
or
les
insl
jp
outsl
mov
xchg
lds
lcall
mov
sub
in
and
mov
adc
cmpl
insl
int3
sub
pop
mov
jmp
jno
dec
sbbb
ret
push
sub
pop
mov
pusha
xchg
jnp
jno
xorl
mov
xchg
cmc
or
insb
fs
mov
push
mov
popa
dec
mov
stc
dec
inc
jecxz
mov
cmp
aas
push
ljmp
ss
in
xor
adc
or
push
std
cmp
push
pop
jmp
push
and
outsl
lea
push
int3
shll
fldcw
lret
movsl
fs
insl
test
jne
aam
jno
leave
jno
mov
xchg
and
mov
dec
sub
lods
dec
inc
mov
mov
scas
mov
lahf
insl
and
dec
dec
jl
fisubl
mov
cmp
sahf
out
rcrl
out
xchg
shl
jmp
scas
cmc
inc
lock
sbb
xchg
push
xchg
cmp
and
lock
inc
incb
add
cmpsb
jbe
jo
mov
js
leave
jb
jg
inc
mov
mov
aad
mov
sbb
sbb
sbb
xchg
adc
mov
sbbb
daa
push
es
jns
in
lods
outsl
jle
mov
aas
cmp
xor
jb
int
or
pandn
ret
jp
xchg
add
shr
aad
cmp
mov
imul
adc
mov
xor
jnp
sub
mov
ljmp
sub
gs
clc
clc
mov
pop
scas
push
ret
xchg
addr16
adc
pop
mov
fistl
mulb
stos
sub
sbb
and
push
rorl
es
push
mov
mov
scas
sarb
out
out
int
cmp
aas
inc
mov
add
pop
enter
mov
ss
dec
sbb
add
dec
mov
shrb
sbb
cwtl
pop
and
dec
into
xor
imul
sbb
pusha
jp
das
xor
pop
sti
mov
test
xchg
shl
mov
in
jl
add
mov
fstpt
insb
mov
fwait
xchg
in
mov
push
mov
or
cmpsb
dec
jns
repz
shl
push
repz
shrb
faddl
inc
adc
dec
ret
outsb
xchg
shlb
jmp
push
dec
lret
outsb
popa
cmc
or
inc
sahf
and
sub
mov
push
in
sahf
inc
xor
or
push
fistpl
jge
and
in
int3
dec
jg
or
jns
leave
xchg
fadds
mov
pushf
scas
dec
sub
pop
out
push
sub
xor
push
test
or
sti
pusha
iret
pop
out
cli
sbbb
push
adc
jb
mov
or
adc
iret
lods
jbe
jle
mov
cmpsl
sub
outsb
or
pusha
leave
scas
scas
jp
sarb
les
sub
adc
jnp
mov
xor
ret
jnp
cmp
cmpsb
xchg
daa
jae
out
xchg
cmp
cmpsl
mov
adc
and
pop
inc
fcompl
ss
push
mov
insl
or
dec
inc
push
ret
xorb
push
aas
cwtl
push
mov
repz
inc
fsubr
and
popa
push
mov
imulb
sub
imul
dec
test
dec
std
mov
sub
fistpl
lahf
jg
in
dec
imul
push
mov
aad
inc
orb
rorb
xchg
push
ljmp
xor
divb
sub
sub
jl
hlt
lock
repz
popl
mov
adc
int
or
inc
add
push
push
int3
outsl
dec
movsl
jmp
mov
pusha
dec
cmp
je
push
mov
insl
out
scas
clc
cmpsl
inc
xchg
xchg
adc
rcrl
mov
xor
fisttps
cmpsb
jns
cwtl
imul
mov
push
pop
jle
mov
dec
test
jl
jno
rcll
adc
stos
mov
shlb
cld
jb
test
scas
rclb
mov
push
stc
pop
adc
add
out
stos
outsl
or
adc
out
test
pop
mov
int3
cmp
mov
inc
pop
push
pop
test
dec
shlb
outsl
cmp
gs
cwtl
jbe
fnstenv
cltd
incb
pop
fs
mov
out
lcall
cli
addr16
sub
mov
ja
leave
pushf
jbe
lea
cmpsb
push
aaa
lcall
adc
xchg
andl
pushf
movsl
daa
fldenv
fwait
arpl
popf
addr16
adc
mov
roll
aas
xor
pop
inc
pop
je
xchg
fldcw
mov
or
test
sahf
negl
lods
mov
sbb
jne
pop
xor
mov
xor
dec
jg
es
loope
dec
mov
cmp
das
imul
and
fcoms
iret
xor
push
enter
enter
imul
imul
rorl
mov
shrb
repz
fnsave
mov
movsb
mov
pop
cmp
xor
clc
loopne
insb
aaa
fdivr
and
push
in
pushf
xchg
mov
xor
and
add
je
mov
inc
fwait
call
pop
inc
out
or
test
std
adc
adc
xor
sub
fsubrs
xchg
and
mov
call
lods
fadds
dec
enter
and
dec
lahf
inc
nop
into
xchg
mov
mov
clc
cmp
or
adc
mov
mov
clc
outsl
push
sti
mov
xor
test
mov
pusha
xor
pusha
sub
push
div
mov
out
les
jle
or
pushf
mov
xor
js
jbe
scas
mov
xchg
jb
test
int
shll
dec
cmc
sti
mov
jbe
xchg
lret
bound
rolb
ret
mov
pop
and
mov
sub
xlat
clc
lds
lock
aas
xor
movsl
dec
lds
stc
push
sub
lea
sti
sub
loopne
js
sub
mov
imul
sub
jb
sbb
scas
loopne
lret
jmp
test
and
int3
dec
mov
into
rclb
and
push
cmpsl
cmpsl
and
out
adc
adc
jg
xor
add
insb
xor
or
orb
dec
pop
js
or
and
mov
lahf
lods
fisubs
jb
rolb
xchg
xlat
add
les
xor
sub
adc
hlt
push
je
push
pop
jp
sahf
mov
pop
in
fmuls
icebp
xor
loopne
cwtl
pop
mov
push
mov
inc
xor
lea
pusha
divb
xchg
scas
iret
into
addr16
scas
dec
cmp
push
sub
dec
pop
shll
lret
mov
sahf
push
lods
aam
insb
popf
sub
in
push
mov
pusha
in
cwtl
push
mov
jge
bound
pop
imul
enter
and
lods
mov
loop
imul
add
xor
sarb
mov
fnstsw
xchg
aam
or
inc
mov
adc
leave
inc
xchg
int3
add
movsl
aad
mov
int
pop
sub
sti
int3
sub
insb
das
adc
sbb
aad
cmp
cmpsb
ljmp
xor
repz
ja
and
mov
adc
iret
cmp
or
sbbb
mov
sub
xor
mov
adc
lret
or
jmp
sarl
dec
jae
outsb
test
stc
mov
stc
jne
and
shrl
push
cmc
jns
jb
add
cmpsb
icebp
test
xor
sub
adc
mov
jnp
and
cmpsb
mov
xlat
test
mov
push
ret
mov
xchg
inc
xor
out
cwtl
pop
divl
and
icebp
cmp
push
mov
and
je
aam
xlat
stc
push
and
xor
lahf
xchg
push
out
mov
push
mov
pop
jmp
lods
dec
dec
repnz
dec
sub
out
adc
scas
mov
mov
dec
lods
xchg
call
leave
mov
sbb
inc
js
and
sahf
add
mov
mov
pusha
mulb
jo
or
and
stos
xchg
mov
jge
jle
or
in
mov
lret
sbb
inc
stos
mov
insl
adc
stos
int3
pop
jo
cmpsb
cmp
pop
mov
jp
out
in
jg
aam
and
sahf
cwtl
mov
lretw
jo
lcall
fldt
fstl
movsl
div
mov
das
pop
int
mov
shll
adc
sbb
push
mov
inc
mov
movsb
cmc
xchg
inc
and
movsb
cld
push
mov
cmp
push
xlat
pop
sub
push
xor
xchg
cmp
ret
mov
ss
movsl
dec
out
loope
dec
sub
ja
cmp
jns
popa
and
mov
jo
mov
xchg
lock
and
aaa
mov
in
fiadds
push
lahf
int
cmp
imul
jbe
hlt
aad
lods
arpl
inc
xor
push
and
ja
or
inc
enter
out
in
mov
adc
divl
fcoml
cmpsb
mov
sub
sbb
cmp
pusha
jo
sarb
mov
or
inc
stos
sbbb
cltd
mov
and
mov
and
cld
dec
adc
cli
xor
test
cmc
ret
mov
jp
pop
sarb
sub
jecxz
aas
jbe
pop
mov
or
inc
push
jno
push
jo
inc
jle
xchg
xor
pop
or
pop
push
and
fs
daa
mov
leave
mov
imul
test
sub
subl
mov
fsubrl
ds
lds
mov
lret
pop
shr
sahf
repz
jns
inc
shll
xor
sbb
jg
jne
inc
push
in
mov
sub
sti
out
jno
sarb
lea
and
test
push
mov
xlat
imul
push
lret
mov
lret
add
mov
push
fs
dec
pop
out
and
dec
add
into
mov
mov
test
lret
insl
scas
popf
or
dec
test
mov
sub
jae
lret
pop
sbb
daa
pushf
adc
jl
nop
or
sbb
jmp
jecxz
or
in
test
cwtl
loop
mov
mov
push
fs
or
xor
xchg
pop
xchg
ret
or
pop
jge
add
test
mov
movsb
push
push
inc
sbb
push
in
dec
xor
sub
pop
mov
mov
rolb
fistpl
loope
fucomp
inc
dec
xlat
xlat
push
push
add
pop
fwait
or
xchg
jae
fldt
shlb
je
or
mov
out
in
aas
jge
pop
cmp
fbstp
aam
insl
sub
mov
das
cli
in
jne
jno
icebp
mov
dec
cmc
jl
fnsave
sub
arpl
push
out
dec
push
and
mov
faddl
movsl
test
adc
mov
psllw
sub
leave
rolb
in
in
jns
or
arpl
dec
mov
loop
xor
fs
push
aad
fisubs
inc
mov
mov
jnp
xchg
lret
pop
or
mov
divb
or
sbb
cs
push
fnsave
nop
cli
inc
sbbb
shl
xor
sbb
lcall
mov
mov
sbb
das
mov
mov
jo
mov
mov
add
mov
jae
aaa
gs
sub
inc
mov
loopne
cmc
jo
mov
inc
jg
jbe
push
das
and
xchg
dec
stos
jbe
push
lahf
stos
push
mov
xor
adc
lret
cmp
adcl
inc
dec
fs
add
mov
rorl
lock
in
in
call
jno
enter
stc
and
popf
push
pop
lea
sub
add
adc
adc
mov
sub
jle
sub
stos
popf
jb
aam
dec
mov
and
cmp
pop
stos
lock
push
scas
pop
xchg
pop
repnz
or
push
ds
mov
fcompl
xchg
addr16
push
pop
int3
mov
sub
test
or
mov
lea
stc
shrl
in
cli
inc
dec
pop
adc
add
or
jecxz
and
ret
xchg
add
lcall
sub
xchg
xor
inc
or
dec
dec
je
and
enter
adc
movsl
jle
imul
sbb
out
cmpsl
leave
test
cmc
push
cld
ret
xor
xor
test
lahf
and
pop
andb
fadds
imul
fsts
adc
je
jmp
adc
push
pop
and
aad
andl
push
out
or
push
adc
pop
shr
pop
aad
add
pushf
and
loop
xchg
stos
ja
xchg
inc
mov
into
imul
enter
inc
cmp
ds
jl
aam
mov
lret
aaa
mov
sbb
xor
push
xchg
popa
cmp
into
mov
lret
push
fwait
mov
mov
addr16
in
add
je
loop
leave
cmp
scas
imul
js
jo
jl
fwait
stos
test
cmpsl
sub
pop
clc
sbb
hlt
or
nop
outsb
mov
xchg
orb
sbbl
pslld
testl
addr16
mov
push
lds
pushf
lcall
iret
fs
mov
pop
inc
movsl
out
mov
mov
mov
aas
sahf
out
out
sub
aas
fwait
sub
int
and
out
movsl
xchg
movq
push
mulb
arpl
rorl
movsl
into
cld
push
ljmp
loop
mov
daa
iret
lods
pop
xchg
mov
xor
shll
pop
test
repnz
jb
mov
mov
jmp
sbb
sarb
add
mov
sub
in
mov
imul
pop
lods
fucomip
mov
ds
fistl
xchg
mov
jae
pop
test
fnstcw
push
fimull
fcoms
andb
ret
sbb
inc
xor
sub
jbe
icebp
sub
or
rolb
adc
test
fistpl
or
push
insl
mov
jmp
iret
out
stc
dec
and
mov
sahf
push
and
pushw
adc
and
arpl
jmp
mov
es
push
mov
jo
dec
mov
and
jno
shrl
ja
scas
movsb
lods
jg
je
call
inc
inc
mov
dec
mov
sub
pop
hlt
scas
out
xchg
addr16
mov
ljmp
mov
scas
jb
ss
jnp
adc
dec
or
mov
ss
lods
fcompl
sti
jecxz
mov
notb
mov
scas
movsl
outsb
add
inc
mov
push
imul
sub
ljmp
cmp
jge
lock
mov
and
ret
popf
insb
mov
mov
stos
je
inc
test
test
out
in
mov
sbb
inc
fisttpl
addr16
cmp
cmp
mov
mov
rorl
xor
and
dec
cwtl
int
xlat
push
insl
or
sub
pushf
iret
cmc
jns
sahf
add
out
cli
and
or
jmp
add
or
push
dec
push
int3
mov
cltd
call
shrb
test
sti
test
test
or
sbb
std
out
cmp
pop
xchg
and
cmp
sbb
cwtl
shrl
push
out
inc
rclb
pop
leave
sbb
pushf
loop
or
movsl
imull
cmpsb
fnstenv
stos
icebp
fistl
push
jecxz
jecxz
add
scas
cwtl
imul
in
xchg
mov
push
xchg
dec
in
ss
popf
insb
cmpsl
push
ss
dec
dec
es
mov
mov
mov
icebp
xor
call
mov
or
or
add
repnz
or
cmp
lret
sbb
xchg
xor
subl
inc
adc
cmp
pop
mov
dec
fsubs
pop
mov
and
inc
mov
loope
ffree
add
ljmp
lock
dec
lock
cltd
adc
xor
xchg
push
mov
test
ret
push
nop
fildll
xchg
pop
enter
aad
inc
jnp
xchg
stos
lcall
xchg
fistpl
ret
stos
adc
mov
and
lock
negb
jbe
mov
loope
insb
aad
cltd
dec
jg
cltd
sbb
scas
call
dec
popf
ljmp
jnp
mov
adc
std
into
mov
pusha
pop
pop
jne
add
scas
imul
jmp
fimuls
sarb
cmp
ror
inc
mov
jo
into
cmpsl
shll
pop
shlb
into
fldl
push
sahf
ja
sbb
out
sub
jle
into
mov
mov
cmc
lahf
clc
dec
jp
insb
movsl
ss
dec
push
and
jg
jnp
es
mov
xchg
leave
rcrb
into
cld
sarb
xor
mov
add
add
xchg
and
lea
mov
pop
scas
push
fists
or
lret
adc
xchg
xchg
jg
mov
in
mov
inc
inc
jb
mov
mov
loope
stos
push
xchg
mov
in
test
lcall
jg
push
js
jnp
push
sub
mov
pop
lcall
mov
out
adc
adc
insl
jl
mov
lret
adc
and
push
lods
addr16
loopne
inc
aas
sub
pop
addl
mov
mov
pop
ds
push
push
push
dec
cmc
jle
add
mov
mov
scas
cmp
lock
inc
out
xor
mov
nop
xor
addr16
popa
push
test
inc
mov
xchg
enter
shrl
icebp
xor
cmpsb
inc
sbbl
sbb
cltd
inc
xor
enter
out
into
mov
gs
in
test
inc
repnz
add
rcrl
arpl
mov
push
popf
mov
sub
mov
or
xchg
pushf
and
test
lea
outsl
lods
sbb
jno
or
jb
sti
sbb
insl
add
out
sub
push
les
cwtl
pop
lret
inc
sbb
arpl
or
les
mov
mov
mov
les
fcompl
cmp
add
push
mov
aaa
push
mov
push
out
in
mov
jo
lods
jmp
lret
xchg
xor
jp
div
mov
sti
shlb
pop
jno
flds
xchg
adc
jp
adc
mov
pusha
mov
push
lds
jg
and
dec
inc
roll
pop
dec
aaa
nop
lods
push
pop
sbb
and
add
mov
hlt
jmp
ljmp
xor
xchg
push
sub
cmc
sub
test
in
mov
inc
mov
es
xor
mov
repz
ficomps
mov
xor
int
adc
mov
jmp
mov
ljmp
inc
fwait
jno
push
data16
popf
rorb
les
inc
data16
adc
adc
or
cmpsl
ljmp
mov
push
jl
pop
mov
mov
leave
fmulp
js
push
jno
sbb
pushfw
mov
mov
pop
das
or
mov
push
and
cli
sbb
lds
cmpsb
xor
push
xchg
sti
loop
inc
gs
mov
lea
mov
add
fidivs
loope
lcall
push
sarb
mov
and
push
inc
push
sbb
lods
fs
mulb
pop
or
jecxz
call
fdivs
popf
sar
jle
cmovp
xor
cwtl
or
jge
mov
or
movzwl
mov
jno
sbb
mov
add
dec
cmp
std
nop
cmp
aas
sub
jns
les
inc
xor
mov
sbb
shrl
repz
or
add
aas
jnp
fwait
loop
adc
mov
lret
inc
fisttpll
xor
in
js
loope
repnz
and
dec
cmp
aas
fs
sub
push
pop
sbb
mov
arpl
int3
dec
mov
jp
mov
jge
fmuls
scas
les
repz
std
xlat
popa
sbb
cmpsl
xor
lret
movsb
mov
adc
movzwl
mov
cmpsb
sub
aad
mov
enter
hlt
mov
mov
or
mov
dec
or
dec
mov
fdivrp
ja
push
push
mov
leave
into
int
push
add
scas
out
pusha
subb
mov
insb
insl
push
push
jo
sbb
jnp
fwait
and
dec
adc
mov
xchg
and
insb
andb
jae
leave
inc
push
hlt
loope
mov
jp
sub
push
loopne
mov
sar
cmp
mov
xorl
pushf
jge
push
mov
subb
mov
lock
jg
into
pop
fmuls
push
add
cmp
and
or
das
add
xchg
ret
fisttpl
js
out
gs
mov
xor
aam
push
hlt
xor
loop
dec
cmp
sbbb
mov
sti
in
push
test
jo
xchg
pop
dec
lea
icebp
popf
or
mov
or
es
mov
orl
stos
fstps
or
nop
or
imul
sbb
jp
shrb
xor
and
xor
and
repz
and
push
jno
rorb
sub
arpl
dec
fildll
and
inc
mov
sbb
std
pop
fscale
sub
lea
popf
xchg
dec
and
cmp
and
pusha
jle
enter
add
mov
mov
cmp
xchg
add
in
inc
shr
dec
repz
cmp
sbb
mov
pusha
inc
xlat
imul
insl
adc
ffree
mov
pop
pop
cmpsb
ficompl
pushf
and
mov
mov
adc
add
push
sbb
xchg
cmp
or
jg
sub
mov
jbe
sti
fimull
repnz
xchg
rcrb
or
push
jbe
stos
lods
leave
sbb
inc
ss
push
mov
arpl
mov
cmpsl
dec
js
icebp
fimuls
daa
daa
lds
in
lock
or
pop
push
mov
mov
mov
shlb
in
dec
clc
mov
xlat
popf
jne
sub
push
sbb
iret
dec
int
mov
sti
test
in
pop
rcr
xor
xor
and
hlt
imul
mov
test
cmp
xor
push
jne
fdivrl
mov
negb
cmpsb
add
sub
mov
daa
and
imull
popa
sub
mov
mov
ret
or
leave
cmp
cmpl
jbe
mov
xor
xor
mov
std
sbb
xchg
xchg
pop
dec
in
or
cmc
cmp
cmc
or
pushf
xchg
mov
aad
mov
mov
shr
push
mov
nop
sub
loop
adc
arpl
cmp
sbb
lea
jge
scas
imul
push
aad
adc
and
cmp
add
or
add
push
js
hlt
test
outsb
and
push
dec
dec
dec
lcall
test
cmpb
ret
cli
repnz
mov
ss
aam
cltd
shll
scas
cmpl
dec
arpl
orb
ja
gs
mov
iret
or
lods
ret
mov
add
mov
mov
cwtl
into
mov
dec
add
ficoml
test
jge
push
test
cs
inc
lret
sub
jg
cmc
ss
mov
fadds
pop
inc
push
and
test
dec
cmp
leave
fidivrs
popf
incl
push
repz
jp
lods
inc
mov
pop
rcr
ja
arpl
pushl
mov
aas
dec
lret
lcall
ret
and
jbe
dec
inc
mov
push
jp
dec
lret
mov
fdivl
stos
cltd
mov
shrl
loopne
add
stos
scas
mov
push
adc
xchg
jbe
jmp
pop
xchg
fldl
lods
movsl
jle
call
movsl
mov
jno
and
xor
jno
dec
sbb
arpl
mov
jbe
shl
xchg
mov
imul
imul
sub
pop
mov
inc
pop
cwtl
cli
aaa
out
pop
data16
test
movsl
push
mov
int3
scas
shll
pushf
shl
push
cli
push
xchg
lods
in
push
sbb
ret
inc
jmp
xchg
outsl
mov
bound
adc
xchg
sub
jns
idiv
mov
mov
fsubl
shll
push
sub
cmp
fadds
jecxz
movb
in
scas
xchg
movsl
xor
mov
dec
jnp
js
cwtl
sub
jnp
inc
add
test
mov
loope
lock
add
jl
in
cmp
cli
fistpl
xchg
add
dec
or
movsb
add
jg
adc
arpl
leave
dec
sbb
ja
sbb
insl
loope
sbb
inc
or
out
iret
aas
bound
rorl
repnz
xchg
or
sbb
inc
outsl
cwtl
das
dec
add
add
lds
call
adc
mov
push
xor
and
xor
fdivrl
popl
mov
lock
ret
aaa
cmpsl
jnp
repz
or
stc
pop
popf
cmp
pushf
xor
or
push
call
arpl
adc
std
push
shrl
es
pop
adc
push
xor
mov
cmp
add
cld
add
xor
loopne
out
test
in
shlb
pop
loopne
mov
dec
mov
mov
popf
repnz
daa
inc
mov
rolb
or
pop
xchg
test
or
das
jae
dec
cmp
out
icebp
pop
aam
jp
adc
mov
push
adc
push
imul
sahf
push
sub
xchg
fldt
aad
fs
mov
lahf
mov
jg
xchg
push
jb
inc
mov
lods
aad
push
ret
xor
xor
fwait
xor
sub
lret
cmpsb
mov
fwait
ret
xchg
adc
and
mov
inc
mov
out
pop
fadd
les
cmp
push
loop
mov
jae
bound
push
cmpsb
sub
xorl
pop
sbb
cmp
lods
inc
test
mov
call
fmull
int
jmp
push
dec
mov
loope
sbb
pop
fwait
or
mov
mov
cli
lea
jo
xchg
lret
pop
push
xchg
mov
dec
lods
fucomi
in
xor
addr16
pop
add
mov
mov
ds
aas
pop
jne
cmp
ja
daa
add
mov
jge
inc
cli
shll
dec
jno
fistps
mov
mov
xchg
mov
push
loopne
add
repz
test
mov
or
mov
fwait
aas
push
xor
loope
xorl
in
nop
fcmovne
push
in
dec
fadd
jg
fwait
pop
sarl
or
xchg
sub
ljmp
xchg
lock
sbb
rolb
adc
clc
jo
dec
sbb
push
push
jg
mov
push
xchg
sbbb
adc
aad
scas
xor
inc
inc
or
outsb
jp
shlb
sub
xchg
mov
movsb
mulb
mov
shl
jg
xor
push
and
ja
mov
xor
or
and
sub
je
mov
xchg
in
movsb
sub
cmc
cmc
push
jl
addl
sub
mov
adc
cmp
add
pop
call
arpl
aam
sbb
leave
xchg
xor
or
divb
cmp
cmp
shlb
or
jg
sbb
lcall
mov
decb
inc
xchg
cmp
data16
lahf
outsb
inc
fbld
mov
andl
fidivs
fldcw
shrb
ja
or
cs
dec
rorb
and
outsl
les
es
orb
cmp
inc
pop
add
adc
jge
shrl
sub
pop
sub
dec
jle
jle
pop
xor
adc
movsb
movsb
in
jo
inc
je
ljmp
in
xchg
add
jge
inc
inc
xor
add
mov
into
add
outsb
add
jp
xchg
lds
movsb
or
sbb
cmpsl
sbb
scas
in
and
jg
jns
movsb
sarb
or
lods
sbbb
inc
scas
sub
andb
mov
imul
jmp
push
sub
dec
sbb
mov
pop
les
hlt
ret
sbb
stos
lahf
mov
sub
jmp
int
mov
pop
arpl
adc
fwait
xchg
or
dec
neg
ret
sbb
test
adc
jno
push
pop
sbb
jnp
dec
mov
out
lea
cmp
push
js
mov
mov
add
pop
mov
cmpsb
das
fsub
mov
insl
mov
fs
adc
outsl
jmp
adc
adc
sub
or
sti
xor
shll
mov
lea
mov
xor
dec
push
scas
lock
pop
into
sbb
jle
repnz
fistpl
rcrw
stos
jecxz
pop
test
xchg
aad
loop
adc
ficoms
cmpsb
inc
jecxz
and
or
imul
inc
lods
adc
mov
mov
pop
andb
stos
add
sbb
xchg
pusha
leave
andb
or
ret
add
adc
push
sbb
dec
push
dec
adc
je
mov
dec
sub
cmp
sbb
lds
cltd
fistpl
cmp
pop
sub
cld
mov
je
into
rcl
push
dec
imul
scas
cmp
cmp
and
int3
insb
jno
xchg
movsl
mov
cmpsl
or
rclb
mov
cmp
sub
subb
and
rcr
sarb
scas
pop
sbb
fildl
add
jl
push
rolb
mov
xchg
lret
idivl
ss
movsl
pop
or
subl
adc
and
jo
insl
outsl
stos
aad
xchg
sub
sti
movsb
or
out
push
sahf
daa
lock
or
and
or
lsl
outsl
lcall
lret
rcll
popa
dec
frstor
stc
cmpl
lods
adc
insl
lret
jo
mov
shll
insl
repz
cs
xor
pop
dec
cwtl
arpl
fcom
mov
sbb
ret
lret
mov
mov
shll
pop
jp
dec
cmpsb
addr16
xchg
push
orb
jno
test
add
je
fsubr
jl
xorl
xchg
mov
je
push
lods
jle
mov
lods
pop
mov
in
adc
pop
rcr
ret
mov
sub
xor
jnp
xor
and
xor
fdivrs
or
rcr
arpl
pushf
leave
into
pop
jns
sbb
mov
lahf
cmp
dec
push
sahf
fidivs
pop
inc
xor
and
inc
mov
cmp
out
add
hlt
dec
mov
mov
outsl
push
xor
imul
xchg
testb
cmpb
test
jg
addr16
sub
dec
mov
je
adc
pop
lcall
js
adc
stos
adc
add
push
push
xlat
lea
movsl
sbb
adc
ljmp
cs
insb
adc
sub
les
pop
push
iret
mov
mov
lds
push
into
outsl
lods
aad
cmpsl
cmp
aaa
fisubl
cmpsb
xchg
pop
mov
jae
fmul
fidivrl
in
pop
jbe
je
dec
mov
out
pop
mov
xchg
sub
fstpt
popf
rclb
mov
outsb
mov
js
pop
sub
sub
repnz
cmpsl
xchg
imul
pop
pop
inc
outsl
push
push
mov
and
and
and
ljmp
arpl
mov
test
sub
mov
adc
add
pop
sbb
das
clc
inc
mov
mov
push
rolb
adc
jmp
call
int3
notl
jecxz
test
outsl
pop
and
add
and
add
or
mov
ret
mov
xchg
sbb
mov
out
pusha
mov
mov
xabort
pushf
sbb
lea
test
adc
pop
sbb
xor
movsb
add
mov
push
xorb
or
or
and
mov
mov
xchg
push
lods
push
adc
and
cmpsl
pop
push
pop
cld
sbb
dec
jo
or
sbb
shr
mov
ficoms
sahf
je
mov
in
das
mov
lods
mov
pop
stos
dec
in
xlat
stc
test
test
and
outsb
inc
push
push
dec
lods
xchg
mov
cmpsl
ds
dec
and
inc
lret
sbb
movsl
nop
xor
mov
push
pop
loope
push
and
and
cmp
mov
test
mov
repz
jp
stos
scas
int
leave
in
push
pop
out
fcoms
cmpsb
cmp
inc
add
and
test
add
jl
lods
dec
gs
out
jne
pop
push
mov
shll
inc
sbb
cmp
pop
mov
pop
push
aaa
inc
dec
ficomps
xor
ret
pop
mov
inc
mov
cmp
cwtl
jecxz
mov
or
cmc
push
rcrb
xor
inc
fdivl
add
std
movsb
and
int3
scas
cmc
nopl
ret
pop
adc
sub
lret
and
sbb
jmp
scas
fmull
xchg
call
pusha
push
jecxz
mov
inc
cwtl
lcall
sbb
lret
mov
add
ud0
aaa
nop
mov
test
dec
mov
cmp
imul
stos
scas
adc
xchg
iret
xor
cmp
mov
bound
xchg
and
push
hlt
jbe
in
popf
mov
xor
shll
sub
mov
push
inc
and
sbb
mov
mov
ss
lret
xchg
and
fiadds
fnsave
cmp
xchg
jne
bound
add
jnp
pop
int
loop
cmp
dec
cmp
cmp
push
sub
push
or
cmp
leave
push
xchg
add
add
mov
imulb
in
dec
xchg
dec
pop
into
out
fsubp
or
cs
cs
sbb
aam
push
cmp
jl
sub
out
rol
popf
nop
loop
xchg
cwtl
fisttpll
cs
jmp
add
js
ficoms
in
push
leave
pop
sbb
add
imul
xchg
pushf
jg
pop
xor
mov
dec
and
fadds
and
push
je
popa
loop
inc
inc
test
push
repnz
lcall
out
inc
add
dec
adc
xchg
sub
xchg
push
cmp
mov
dec
mov
inc
mov
xlat
ss
in
inc
dec
ret
fsubl
repnz
test
in
decb
fisttpll
or
push
lds
jb
scas
pop
stos
jne
or
xchg
push
sub
mov
stos
mov
dec
inc
test
clc
pop
ret
loop
sub
popf
sbb
or
mov
xchg
mov
ret
adc
les
repnz
scas
pop
push
dec
or
adc
sub
pusha
scas
mov
push
in
mov
addr16
xor
test
xchg
jecxz
jmp
jp
pop
dec
mov
push
adc
test
push
sahf
xchg
jge
sbb
enter
lcall
inc
fs
mov
xchg
rclb
cmp
push
push
daa
aad
mov
call
in
int
or
pushf
xchg
jl
inc
inc
insl
dec
insl
inc
sbb
leave
lea
andl
jo
in
ss
adc
xchg
mov
pop
xor
sub
and
cmp
shrb
ss
jl
cld
sahf
push
or
adc
push
testb
insb
sbbl
jl
or
subb
mov
fwait
inc
or
jmp
icebp
xchg
mov
out
pop
ss
add
push
sub
cmp
daa
sub
xchg
in
sub
ss
and
outsb
inc
call
ljmp
std
push
sbb
popf
iret
leave
sub
mov
in
mov
sub
repz
das
out
inc
dec
mov
hlt
sub
or
and
test
lock
leave
int
aad
cltd
repz
or
pop
out
xchg
pusha
scas
leave
or
add
ds
lahf
mov
insb
lret
shl
scas
mov
xor
pop
xchg
aaa
insl
lahf
xor
cmp
pop
push
dec
scas
jmp
movsl
imul
cmp
jns
sbb
jbe
cmp
sub
sub
data16
push
in
js
or
mov
ja
sbb
mov
dec
mov
divl
ret
push
lret
mov
dec
cmp
cmc
pop
add
dec
fld
ljmp
lods
outsb
mov
cmpsl
sub
loopne
icebp
stos
adc
daa
stos
add
int
or
sbb
sbb
cmpsb
popa
cmp
addr16
sub
inc
mov
fidivs
mov
insb
lret
cwtl
negb
call
gs
xchg
or
add
lods
push
adc
sahf
rorb
arpl
mov
inc
dec
filds
roll
add
movsl
ja
or
push
xor
xchg
pop
xrelease
pop
sub
pop
cmp
jmp
inc
push
mov
pop
push
fists
fldl
dec
and
xchg
push
cmp
push
jg
sub
daa
xor
pushf
in
xchg
std
fildl
popf
repz
inc
push
jp
mov
js
loopne
dec
mov
mov
cmp
push
out
and
sbb
mov
out
sub
and
scas
xor
jle
sub
jne
jle
cld
push
scas
mov
mov
mov
jae
pop
cwtl
mov
shll
in
xchg
pushf
xchg
fwait
mov
cmpsb
ja
and
hlt
shl
jecxz
xor
sbb
mov
mov
arpl
pop
or
inc
bound
mov
jns
iret
stos
out
adc
mov
je
jae
jbe
shrb
shrl
xchg
lret
push
xchg
test
sbb
mov
insb
mov
xor
je
stc
out
das
fwait
inc
aaa
mov
fwait
dec
sbb
clc
add
and
pop
into
jae
insl
stc
loop
adc
jge
xchg
push
int3
lret
or
or
xor
adc
stos
pushf
mov
gs
or
jle
lcall
push
loope
je
xchg
jno
xchg
ret
icebp
inc
scas
pop
movsb
xchg
cmp
lods
out
cs
nop
xor
dec
into
inc
movsb
sub
sbb
lods
sbb
ss
mov
js
ret
ret
pushl
cmpsl
dec
pusha
adc
push
lret
lret
psllw
add
push
inc
aad
xor
sbb
cmp
jbe
shl
test
dec
insl
in
adc
xchg
fwait
test
enter
push
inc
rol
xchg
sbbb
pop
mov
lea
into
jo
cmp
xor
aam
and
pop
xchg
dec
or
mov
jne
xchg
les
mov
push
xor
jbe
jnp
xor
ret
xchg
cs
lret
sbb
inc
push
in
mov
js
test
pop
and
data16
sbb
negb
cmp
sub
loopne
nop
push
fnsave
push
mov
dec
shrb
sbb
data16
outsb
mov
sub
cld
in
mov
xor
xor
lret
nop
inc
mov
data16
add
push
xchg
andl
addb
sbb
lret
cwtl
fnstsw
fwait
sbb
mov
das
shrb
push
cmp
out
cmp
cld
mov
pop
mov
les
sahf
push
out
int
adc
or
cmp
and
pop
lea
lea
add
shr
xchg
pop
outsb
xrelease
ret
dec
jbe
xor
pop
sbb
mov
pop
cmc
jno
lds
inc
ret
mov
cmp
fwait
adc
int
mov
movups
mov
jae
adc
inc
into
xor
cli
sarl
cld
pop
imul
mov
mov
fists
sub
xlat
mov
cmp
inc
ret
sub
sbb
pop
cmp
mov
in
add
adc
scas
rorb
dec
sahf
data16
roll
aaa
test
inc
jmp
push
in
adc
mov
push
xlat
pop
push
ja
and
les
jnp
icebp
lcall
out
popf
sbb
pop
mov
add
add
dec
lahf
and
bound
xor
inc
mov
xchg
sbb
xor
shll
dec
mov
push
leave
sub
mov
ljmp
aas
stos
mov
pop
je
xchg
xlat
fimull
mov
inc
addr16
pusha
push
inc
dec
out
scas
adc
ljmp
and
sub
rorb
inc
ss
jbe
or
jle
sub
mov
adc
pop
push
out
orl
addr16
cs
aad
xor
mov
fistl
pop
mov
xchg
mov
test
and
sub
adc
cmp
iret
call
jbe
xor
xor
bound
int3
xor
mov
fiaddl
inc
mov
cwtl
sbb
insl
rcll
add
clc
mov
shlb
jae
std
xchg
iret
sahf
loop
insb
in
add
lods
push
movsb
popf
xor
in
int3
push
sarl
dec
scas
adc
cmp
aaa
negb
mov
ljmp
add
adc
stc
mov
pop
popa
pop
add
xchg
jmp
dec
push
lods
cmp
cmpsl
or
andb
mov
loopne
mov
mov
imulb
push
inc
hlt
pop
pop
pop
pop
mov
or
add
ret
test
lock
or
xlat
inc
mov
daa
ret
std
es
mov
push
mov
xchg
lret
dec
test
leave
sub
push
icebp
or
jmp
pop
sbb
mov
mov
ja
pop
shrl
fs
lret
cmp
sbb
dec
ljmpw
xor
inc
leave
and
data16
inc
sti
cmp
orb
dec
jo
fmull
cmpsb
inc
sbbl
rolb
add
movsb
rorb
js
daa
pop
pop
cmpb
dec
dec
loop
lret
lcall
into
jmp
jp
inc
out
xor
aam
cmp
xor
or
xchg
lret
into
fldt
mov
pop
jl
cmc
xchg
mov
cmc
lcall
cmpsb
jl
or
sub
mov
or
cmc
dec
out
imul
pushl
cmpsl
enter
inc
fsub
push
sub
and
and
push
mov
rcrl
push
mov
push
int3
mov
adc
cmpsb
daa
xor
adc
xlat
fwait
xchg
cmpsl
call
pop
stos
jno
aam
test
pop
rcrl
mov
lret
adc
and
push
addr16
pop
cmp
add
out
adc
pop
lahf
fwait
repz
add
cmp
inc
xchg
push
or
xor
hlt
sub
pop
dec
push
pop
jmp
sub
sti
outsl
jnp
pushf
movsl
mov
pop
and
stc
stos
sbb
mov
push
inc
xchg
and
xor
out
fcom
mov
lods
cmpsl
mov
popa
inc
xor
ss
ds
loopne
out
aas
cmc
mov
jl
cmp
ret
fistps
movb
cltd
mov
or
mov
mov
fstpl
sbb
iret
scas
mov
xor
outsl
lret
lea
sub
dec
sbbl
ljmp
push
lret
ja
pop
cli
jb
xchg
rorb
shlb
dec
dec
jge
or
push
roll
gs
rclb
outsb
test
std
repz
sub
gs
pop
out
test
mov
jle
int
test
addr16
cmp
int
arpl
jecxz
incl
add
xlat
ja
cld
mov
test
outsb
cmp
xor
movsl
nop
mov
mov
jmp
xchg
lret
cld
lods
xchg
clc
pop
ljmp
out
fwait
xchg
dec
das
add
loopne
stos
cmp
dec
or
and
pop
inc
mov
mov
shll
jae
sets
push
insl
or
cmp
test
shlb
fs
sub
int3
lret
pop
loop
repz
dec
popf
fistpll
imul
dec
mov
cs
data16
adc
lods
dec
sbb
getsec
dec
and
fwait
fs
push
fcmovne
arpl
and
pop
sar
loope
add
add
inc
mov
clc
or
push
sbb
add
inc
faddl
xchg
and
sbb
and
xor
test
aas
hlt
inc
das
jae
sub
fstps
mov
iret
cmp
mov
popf
mov
mov
push
cltd
push
xor
xor
insl
fnsave
call
adc
cmp
lods
mov
test
xorl
sbb
insb
add
insb
or
cli
cli
push
jge
sub
mov
aas
push
test
addr16
lock
jp
adc
xor
push
iret
jbe
cmp
dec
sbb
mov
mov
fbstp
pop
pop
mov
popf
add
cltd
in
out
divb
xchg
and
fimull
jno
xchg
push
in
push
out
mov
loope
cltd
fstl
and
cltd
test
mov
addr16
cmpsb
bound
pop
lea
pop
scas
xchg
mov
fs
xlat
push
push
and
and
and
and
xchg
das
mov
andb
cmp
sub
mov
shr
lret
lea
pop
aad
lahf
jmp
mov
pop
mov
cmp
in
cmp
fildll
sbb
xchg
or
cmp
dec
push
orb
in
fidivl
fs
fwait
lods
or
popf
ret
andb
push
lods
stc
out
pusha
inc
ret
pop
push
add
out
cmp
pop
into
xchg
imul
jl
aas
pushl
scas
sbb
mov
fidivl
add
jge
stc
sub
jb
sti
test
stos
test
into
ret
clc
sub
cli
pop
push
ja
pop
xlat
push
sbb
outsl
fimull
movsl
xchg
data16
mov
divl
inc
imul
sub
pop
mov
pop
dec
arpl
lret
inc
xchg
and
test
or
ds
pop
sub
adc
adc
push
adc
test
cmp
add
in
xor
xor
xor
shl
pop
push
icebp
mov
loop
aam
pop
cmpsl
ljmp
stos
mov
fwait
or
ljmp
pusha
sub
inc
lret
fs
loop
dec
rcrl
lods
or
dec
iret
cmp
dec
adc
or
std
iret
outsb
leave
mov
mov
add
xchg
mov
nop
jge
mov
mov
popf
psubq
mov
lahf
cld
addr16
cs
and
das
ds
sbb
or
cld
fld1
les
fnop
into
sarl
popa
adc
mov
push
sub
fcompl
jecxz
and
stc
or
jo
mov
sub
into
push
mov
push
test
jp
push
pop
in
out
insl
daa
cmpsb
xlat
punpckhbw
mov
pop
hlt
and
or
add
mov
ljmp
out
call
dec
add
and
aas
hlt
aam
nop
nop
vmulpd
jle
lods
jmp
mov
loop
push
mov
loopne
std
rcll
inc
lods
das
or
jmp
js
and
imul
dec
cmpsb
gs
mov
js
fsubl
fsubr
cwtl
and
cmpsb
mov
sti
push
pop
pop
call
inc
lahf
cltd
push
fwait
stc
fisubl
jno
cli
or
leave
xchg
cmp
sub
xorb
das
stc
dec
lock
xor
imul
out
imul
xchg
cmpsl
push
xchg
push
adc
fidivl
push
adc
lods
xor
or
cs
sub
push
outsb
int
fcoms
pop
add
sub
imul
and
repnz
mov
aas
push
jl
mov
or
or
out
leave
call
mov
int3
test
sarb
out
sarl
pop
add
out
ds
pop
movsl
cld
push
clc
sbbb
movsl
test
push
jg
arpl
ljmp
test
enter
js
fcmovb
mov
adc
sub
repz
mov
xchg
in
adc
or
adc
nop
adcl
repnz
ljmp
loopne
xor
inc
cmpsl
add
ljmp
pusha
adc
sbb
data16
sti
jae
bound
jae
leave
imul
pop
pusha
int
jl
adc
iret
lcall
ret
push
xchg
xlat
xor
mov
or
and
mov
xor
inc
push
call
fcmovnbe
jge
mov
or
test
inc
fwait
sbb
outsb
call
pushf
jo
call
out
cmp
jmp
fwait
pushf
push
repnz
insl
aad
mov
xchg
mov
mov
add
jb
mov
inc
sbb
std
jmp
xchg
imul
push
adc
sarb
cmp
xchg
imul
das
push
push
movsl
xor
fdiv
add
add
pop
sbb
pop
fcomps
scas
repnz
daa
and
dec
test
inc
and
sub
mov
and
adc
jno
hlt
push
and
lea
mov
xchg
xchg
cmp
aad
lock
push
repnz
push
xlat
cmpsb
cld
stos
movsb
std
ret
cmpsl
push
cmc
scas
jg
cmp
test
shlb
pop
test
mov
fwait
jns
xchg
mov
mov
sbb
sbb
int
mov
arpl
test
scas
movsb
loope
adc
mov
dec
xor
mov
push
push
push
push
fimuls
pop
int
aas
ljmp
mov
push
hlt
mov
jb
ljmp
test
repz
hlt
dec
sbb
inc
jecxz
pop
es
xor
fldt
inc
mov
inc
clc
xchg
add
inc
push
ret
and
cltd
xchg
aaa
popl
pop
mov
mov
xchg
sarb
dec
loop
or
inc
lock
orl
push
dec
sub
inc
sub
xchg
xor
pop
subl
mov
and
sub
mov
mov
jg
movsl
mov
hlt
xor
aam
and
sbb
lods
lds
hlt
rolb
test
clc
jne
jg
xor
cmpsb
inc
insl
bound
movsl
and
adcl
and
fistl
pop
cmovg
push
sbbl
add
push
jecxz
and
sub
push
inc
push
jle
cli
xchg
inc
jb
test
pop
mov
cmp
push
xor
adc
xor
pop
addr16
mov
add
sub
shrl
adc
xor
icebp
cld
call
mov
mov
mov
test
test
sarb
push
dec
in
pop
jb
gs
add
jmp
cli
cli
shl
out
push
or
ret
xchg
push
push
mov
mov
inc
pop
xor
loop
push
scas
subl
enter
jne
dec
xchg
or
dec
int
mov
das
jno
xor
add
addr16
adc
push
mov
aad
adc
pop
sbb
aad
sbb
addr16
sub
adc
fiaddl
xchg
addr16
and
mov
daa
bnd
in
push
and
dec
fmul
jmp
mov
push
sub
mov
and
jecxz
imul
fistpll
test
inc
mov
andl
sub
shrb
call
push
xor
and
mov
loop
jnp
jmp
stos
mov
push
jns
popa
or
loope
stc
popa
dec
adc
lods
divb
pop
mov
pushf
cltd
push
adc
aaa
loopne
jnp
stc
int3
cltd
movsb
mov
adc
and
jp
test
imul
push
or
out
push
mov
push
sti
les
ljmp
movsl
dec
fnstcw
in
inc
lahf
ja
lahf
push
cld
jne
unpckhps
pushl
xchg
stos
jb
pop
arpl
mov
dec
movsl
hlt
lret
xchg
les
out
and
addr16
push
js
xor
cld
std
daa
popf
repnz
sub
cmpsl
and
lods
mov
cmp
adc
fistl
sbb
and
xchg
inc
jnp
xor
pop
test
mov
das
and
negb
in
fidivrl
leave
cld
hlt
sbb
int
add
jle
and
loop
push
sbb
ds
dec
or
cltd
mov
inc
in
pushf
mov
jno
ror
pop
push
es
sar
outsl
sub
cmp
add
add
inc
pop
pushf
fs
addb
stos
stos
sbb
mov
or
inc
and
call
jl
test
adc
stos
sub
cli
scas
fildll
xchg
inc
fdivs
les
loope
lods
sub
push
cmp
and
adc
push
btr
jae
ret
inc
scas
incb
push
cmp
std
aas
popa
or
mov
xor
lods
push
xchg
lcall
push
mov
inc
loop
aas
mov
adc
or
vpshlq
sbb
sub
decb
cmp
jecxz
inc
outsl
or
bound
clc
push
mov
xchg
ret
aad
xor
jecxz
fsub
mov
mov
mov
addb
push
add
and
cli
add
xchg
pop
sub
mov
cwtl
movsl
adc
add
xor
loopne
jg
scas
mov
fisttpll
xor
popf
lock
pop
dec
cmp
loopne
or
ret
stos
pop
nop
jge
cmc
or
cltd
xchg
inc
cmp
imul
dec
out
and
push
sub
add
inc
idivb
test
xor
add
repz
mov
imul
dec
fstpt
bound
or
out
or
and
add
pop
sbb
cltd
addr16
arpl
insl
hlt
push
jle
imul
call
les
scas
outsl
inc
mov
pop
jno
push
dec
fnstenv
add
adc
mov
out
insl
mov
ljmp
sbb
data16
xor
jge
in
adc
mov
cmp
sub
outsb
cwtl
int3
adc
out
mov
in
subb
nop
mov
in
aam
mov
cli
lcall
cmc
pop
sarl
ret
jo
popa
mov
notl
and
inc
out
subb
mov
dec
bound
js
xchg
and
cmpsb
xchg
xchg
push
fxch
pop
faddl
jecxz
ret
mov
push
cwtl
outsb
ljmp
pop
pop
in
dec
mov
inc
or
cmp
mov
bound
fsubs
mov
les
inc
notb
push
int
call
mov
dec
insb
cmpl
mov
into
hlt
push
pop
nop
xchg
sub
fdivrl
jae
adc
mov
add
movsl
mov
outsb
push
jb
jns
dec
sbb
fwait
icebp
add
in
pop
and
xchg
rcl
hlt
mov
pusha
lcall
pop
int
insb
add
pop
add
push
cltd
cld
rolb
ret
add
mov
mov
jecxz
jl
pop
fwait
mov
test
xchg
fisttpll
cmc
lret
fwait
mov
lods
iret
adc
jne
loopne
jo
mov
inc
out
and
sub
jno
ret
fs
sub
js
daa
adc
xchg
pop
inc
into
push
xchg
mov
scas
in
nop
imul
xor
pop
mov
cltd
shll
das
mov
mov
pop
and
call
adc
mov
xchg
cmp
dec
mov
std
mov
repnz
popf
ds
test
mov
pop
int
adc
adc
loop
popf
hlt
dec
fwait
or
outsb
addr16
cmp
and
xchg
es
call
push
imull
insl
push
pop
jg
cmp
dec
test
add
push
cmp
mov
dec
pop
enter
insl
jl
jl
aaa
in
pushf
lahf
mov
mov
je
scas
sarl
adc
outsb
in
jo
mov
es
mov
nop
jge
int3
pop
and
insl
cli
jg
or
push
sahf
cmp
ja
jb
mov
in
xchg
aad
pop
jo
adc
insl
and
into
lret
shlb
scas
cmpsb
jmp
xchg
sbbl
repz
int
daa
test
rclb
xchg
icebp
pusha
xchg
shll
ds
sahf
jo
jl
push
jl
insl
sbb
lahf
imul
lcall
add
in
mov
lret
mov
out
pushf
test
or
stc
outsb
into
imul
test
cmp
xor
psllw
jbe
xchg
push
mov
or
xor
out
repnz
fcoms
xchg
out
arpl
movsb
sti
inc
les
test
sahf
into
jo
dec
leave
cmp
xor
sbb
xor
fsts
psraw
mov
mov
xchg
nop
out
adc
clc
pop
movsl
cmpsb
adc
adc
xor
orl
mov
mov
sub
xchg
jle
xchg
call
inc
mov
xchg
mov
pop
repz
out
ss
rorl
stos
pop
mov
adc
dec
ss
adc
and
sahf
xor
js
ja
inc
pop
shrb
test
roll
js
ja
cmp
cmpsb
repz
jb
inc
push
outsb
mov
adc
fimull
insb
pop
shlb
ret
inc
jb
xchg
dec
rolb
xchg
fwait
cwtl
inc
popa
out
pop
xor
notl
mov
mov
imul
sbb
cmp
mov
popa
lods
sbb
cld
pop
lahf
inc
pop
dec
fstpl
sub
xchg
jns
jmp
push
adc
sbb
jmp
cwtl
lods
std
push
jnp
pop
lds
mov
sub
js
cmp
ret
aas
pop
fcompl
aam
mov
and
dec
mov
or
xor
int
imul
sahf
mov
jae
je
aam
ljmp
inc
xorb
pop
out
add
cli
pop
xor
pop
fwait
mov
or
mov
add
or
pop
out
add
add
aam
pop
mov
scas
xor
inc
add
into
push
or
push
cmp
jmp
es
insl
mov
daa
sbb
daa
mov
out
xchg
call
pop
push
imul
pop
inc
or
addb
ja
into
adc
movsl
mov
loopne
mov
movl
data16
cmpsl
addr16
cmp
movsb
lods
insb
shlb
divl
jne
test
in
push
add
bound
mov
popa
mov
sbb
pushf
mov
aas
jo
test
mov
lea
clc
in
mov
or
inc
pop
sub
dec
cmp
jl
adc
inc
push
dec
arpl
jb
mov
inc
outsl
shll
sub
xor
fbld
cmp
mov
stc
out
mov
xor
fidivs
xor
loop
adc
lret
jge
xchg
popf
inc
jg,pn
dec
jo
pop
xor
and
push
test
out
and
and
fucom
dec
jmp
mov
pop
push
imul
cmp
pop
dec
jns
mov
add
xor
jg
incb
push
subb
roll
pop
cmp
iret
pop
aad
cwtl
shlb
loop
aad
iret
andb
iret
push
xchg
sub
xor
xchg
xchg
fs
mov
pop
dec
cmpl
std
pusha
fidivs
sbb
add
mov
and
movsb
in
rcrl
pop
in
xor
adc
enter
dec
test
add
andb
xor
jb
jg
inc
sub
aam
mov
jecxz
dec
dec
inc
lahf
addr16
dec
sbb
bnd
cli
fwait
xchg
popf
sti
lods
in
fs
addr16
ds
jmp
insb
and
add
mov
xchg
stos
cmp
add
lcall
call
ljmp
cmpsb
pushf
popl
cmc
dec
sub
cmp
stos
aas
imul
and
lcall
mov
aaa
test
xchg
bound
sahf
int3
bound
test
push
clc
add
mov
fbstp
push
xor
dec
jle
mov
test
sub
ret
ss
je
sbb
push
mov
xchg
fs
call
cli
mov
dec
test
push
adc
xor
lret
adc
aad
inc
sbb
cltd
jp
dec
in
jns
movsl
inc
aas
arpl
int3
push
cltd
mov
inc
mov
or
movsb
inc
lods
fnstsw
bound
sahf
adc
push
pop
jg
or
mov
rcr
cmp
outsl
sub
scas
or
and
in
dec
mov
fwait
pop
pop
clc
jmp
and
js
dec
icebp
insb
jno
inc
inc
iret
addb
ja
in
xchg
cmp
dec
hlt
test
iret
dec
xor
fwait
inc
mov
sbb
sahf
push
mov
sbb
mov
test
js
loopne
lods
pop
mov
ret
scas
pop
cmp
das
pop
popa
test
xor
in
aad
cmp
js
cld
cltd
dec
pop
not
roll
inc
ja
stc
pop
dec
add
and
cmp
inc
add
xchg
sub
add
bound
mov
addr16
inc
aas
inc
pop
shlb
cmc
into
or
fildl
fisttpl
push
dec
push
seto
cmp
dec
add
push
jle
push
ret
add
pop
int
imul
or
sbb
pop
inc
test
or
sbb
loopne
ret
sbb
adc
cltd
je
int
scas
lret
cmc
leave
cmp
out
scas
inc
aas
jecxz
xor
adc
pop
cmpsb
mov
clc
cmpsl
lret
sbb
or
test
sbb
cmp
jmp
xchg
add
mov
std
inc
in
or
mov
in
xchg
mov
mov
les
aaa
adc
adc
push
outsb
mov
out
push
push
stc
push
fadds
shl
fildl
push
in
outsl
shll
es
rol
shlb
jno
mov
lods
movsl
mov
dec
push
lahf
pop
pop
pop
inc
mov
fsubrs
je
add
pop
sub
outsb
in
rcr
xchg
and
jae
aad
int
shlb
in
fisubrs
std
inc
sub
cmp
xchg
and
notb
add
ror
sbb
test
lods
push
cli
mov
and
enter
stos
pop
or
movsl
cwtl
loope
arpl
mov
adc
or
stos
xor
cmp
pop
ljmp
orb
mov
js
mov
cmp
and
cs
cs
mov
cmpsb
ljmp
jmp
out
cmpsl
xlat
sti
jne
or
xor
jo
cwtl
out
push
or
adc
lcall
or
pop
movsl
repnz
popf
mov
das
lret
xor
ja
cmp
lock
test
add
jg
loope
pop
je
sub
adcb
xor
or
jmp
jns
cmp
xchg
cmpsb
dec
adc
lea
push
push
test
adc
cwtl
fiadds
sub
xchg
pop
xor
loop
jae
pop
pop
sbb
mov
lcall
mov
pop
pop
jecxz
test
imul
gs
addb
mov
inc
out
bound
scas
cmp
nop
add
pop
push
sbb
and
mov
shrl
jmp
pusha
mov
out
pop
sbb
addl
adc
sbb
imul
and
cmp
ret
inc
xchg
mov
sarb
sbb
sbb
mov
mov
or
jecxz
jo
lea
iret
aam
and
sub
dec
dec
call
push
and
jecxz
scas
xchg
loop
cmp
cmpl
pop
push
imull
call
push
into
adc
je
stc
mov
hlt
adc
add
sub
popa
test
movsl
xchg
lods
xor
hlt
scas
sbb
insl
add
pop
and
mov
aam
fisubrs
mov
inc
jno
cmp
test
rorl
sbb
push
xchg
inc
nop
sbb
ficoml
aaa
mov
dec
jmp
mov
adc
shll
sbb
in
cmp
push
addr16
cwtl
push
dec
imul
mov
imul
mov
or
mov
shll
mov
fdivl
cwtl
js
adc
test
and
fnstcw
ljmp
rorb
call
or
mov
jbe
and
fdivs
or
insb
pop
std
and
fimull
sub
lcall
and
in
and
pop
das
xchg
push
andb
icebp
rclb
out
in
imul
push
jl
shrl
or
dec
mov
push
or
insl
and
dec
inc
loope
imul
jbe
cmp
mov
cmc
test
subb
push
cmc
in
cmp
adc
leave
insl
arpl
push
push
mov
add
cmpsl
mov
pop
sbb
leave
pop
sbb
mov
stos
cmpsb
repz
cmc
inc
xor
sbb
mov
mov
add
fs
push
les
cmp
jle
fsts
jb
scas
cmp
das
fucomp
jno
pusha
icebp
sbb
aas
jle
sub
jl
pop
mov
cwtl
sbb
mov
xchg
shrl
ljmp
ffree
aas
push
dec
pop
aam
cmp
sbb
or
add
es
adc
sbb
movsb
arpl
xchg
lea
xchg
pop
fldt
loop
xor
cmp
mov
sahf
mov
cmpsb
xchg
jae
das
sbb
test
movsl
loop
icebp
jl
ss
lods
cltd
xchg
and
mov
in
pop
shlb
in
jl
pop
mov
mov
push
daa
mov
ret
dec
inc
ss
cmp
lcall
push
xor
ja
cli
xchg
sarb
jg
jmp
sti
mov
mov
push
movsb
cmp
mov
jle
mov
cmp
das
subl
mov
sub
fs
push
jg
movsb
ret
xlat
mov
push
in
mov
sti
jg
cmp
test
push
aas
shrb
sub
sti
push
ret
jae
inc
xchg
mov
mov
out
mov
mov
xor
mov
das
pop
pop
lret
jp
dec
inc
pop
sarb
push
jp
ljmp
ret
stos
iret
xor
cmpsb
dec
out
xor
sub
jo
cmp
loopne
mov
rorb
mov
mov
nop
adcl
scas
pop
adc
stos
or
sub
jns
insl
icebp
or
shl
imulb
adc
iret
divb
cmc
sbb
div
insl
pop
mov
std
subb
mov
dec
leave
movsl
fstps
das
fwait
bound
scas
aam
and
leave
popa
and
cmp
cmp
push
push
stos
and
lods
scas
into
or
cs
enter
sbb
sbb
cmp
cs
ret
mov
jmp
pop
adc
push
sub
repz
or
imul
mov
xlat
inc
rcll
lds
xor
repnz
push
add
jbe
stos
shl
jmp
adc
shr
mov
imul
jns
aas
popa
push
int
sub
push
pop
fwait
add
in
sbb
jno
adcb
push
sub
out
push
fimull
popf
sti
or
sarb
fisttpll
test
xor
xorb
gs
mov
pop
or
and
add
sub
or
into
fisttpl
stos
jb
psadbw
xor
daa
add
inc
and
xor
push
push
push
push
sbb
mov
test
mov
mov
stc
sbbb
xor
cs
rorl
insl
xor
mul
outsl
mov
stos
dec
mov
cli
addb
sti
pushf
or
arpl
xor
fs
push
and
testb
jae
xchg
and
cli
gs
cmp
sub
scas
and
scas
push
bound
mov
incb
mov
scas
and
cltd
js
dec
sub
push
nop
xor
mov
xor
js
addr16
lods
nop
cmp
pusha
icebp
xor
out
scas
scas
testl
jmp
enter
xchg
fnstenv
pop
push
clc
call
jp
sub
addr16
mov
bound
push
jae
mov
lea
pxor
mov
fs
xchg
sti
movl
mov
push
dec
xor
push
loop
mov
outsb
mov
lea
xchg
cmpsb
pushf
scas
add
lods
xor
push
push
shrl
mov
sbb
pop
adc
push
sbb
push
mov
sbb
jl
movsl
mov
mov
pop
pushf
stos
loop
add
push
jns
dec
jp
inc
movsb
rcrb
lahf
push
xchg
gs
std
or
pop
add
test
mov
pop
adc
div
mov
cmp
sub
xor
lds
mov
ror
clc
or
mov
shrb
std
and
clc
lret
lods
sahf
jp
mov
jns
xchg
inc
mov
mov
mov
jp
rcll
xchg
cmp
sub
insb
popa
mov
mov
into
sub
and
sbb
and
xchg
mov
mov
out
test
sub
mov
loopne
sub
das
fwait
rorl
mov
jp
dec
mov
lods
sub
sub
jns
or
lcall
jne
push
cltd
add
and
repnz
pop
enter
xchg
shlb
in
jno
xor
fbld
out
popf
daa
in
dec
ds
pop
inc
mov
ficompl
mov
dec
sub
repz
pop
cmp
das
cli
sub
pop
pushf
mov
lods
decb
lahf
pop
ss
push
push
sti
mov
enter
in
jo
fistpl
mov
or
rol
adc
xor
mov
push
sub
fwait
mov
stos
pop
les
mov
inc
pop
sahf
icebp
dec
pop
in
stos
xchg
loope
cltd
sub
roll
cmpsl
inc
mov
aas
and
add
and
jmp
addr16
push
push
push
jb
jne
jmp
shlb
push
mov
jns
pop
add
scas
sarb
mov
push
js
into
in
in
xchg
mov
jp
sbb
iret
out
hlt
push
push
xchg
add
push
adc
sub
ja
xor
clc
mov
adc
mov
add
iret
aas
movsl
sarl
lds
sbb
jge
mov
and
dec
icebp
jecxz
sub
jge
in
mov
gs
and
es
cmp
mov
xor
mov
cmp
iret
addr16
lea
and
movaps
xchg
stc
pusha
inc
and
xor
and
pop
enter
aam
lods
pop
sahf
cmpsl
pop
out
sbb
push
mov
sub
ja
in
scas
out
out
stos
shrb
fcomps
push
ficoml
fstps
cld
jne
or
jmp
push
lods
sbb
mov
cltd
inc
adc
popf
data16
fildll
push
jns
mov
sbbb
push
cmp
push
inc
jno
cmpsb
ret
fnsave
addb
jns
push
insl
scas
out
aad
icebp
loope
popa
cmpsb
fidivl
fidivl
sbb
addr16
inc
dec
movsl
mov
movb
js
mov
popa
stc
dec
sbb
inc
loop
fidivrs
in
inc
dec
fists
outsl
push
test
test
cs
aam
pop
mov
pop
jo
mov
push
cmpsl
xor
mov
cld
dec
mov
ds
mov
mov
mov
cmpsl
test
je
dec
scas
dec
outsl
enter
cli
add
andps
pop
xchg
mov
rcrb
out
adcl
jo
jne
mov
adc
pop
push
xor
sub
xchg
pusha
mov
dec
rclb
in
int3
jecxz
xor
or
inc
sbb
ror
mov
xor
jge
xor
mov
jg
pusha
or
jns
adc
xor
pop
push
shlb
pop
addl
jno
xchg
sbb
push
mov
into
pusha
mov
push
add
outsb
cmp
ret
xchg
sub
jle
mov
subb
push
xchg
xor
adc
push
push
ljmp
mov
xchg
jmp
jnp
cmp
out
popf
aad
sub
int3
aaa
int3
cmp
into
pop
in
outsb
mov
ficomps
pop
or
fcom
bound
cmpsl
sbb
sbb
fisttpll
fdiv
std
aad
cmp
fwait
push
mov
icebp
daa
clc
rcl
lret
push
mov
cmp
add
sbb
or
jge
incl
xor
dec
daa
sbb
hlt
fsubs
add
clc
sub
dec
xchg
push
shrb
rcrb
push
je
xor
repz
pop
mov
inc
mov
mov
inc
imul
push
leave
mov
jns
jns
std
je
imul
and
fldlg2
push
cmc
sub
mov
adc
pop
xor
pop
xor
lods
cmpsl
pop
fs
cmp
jae
xchg
push
pop
fldcw
fstpt
mov
sbb
arpl
xor
mov
pop
fstpl
adc
and
mov
push
loope
push
imul
pop
dec
mov
mov
xchg
push
addr16
mov
aaa
adc
xchg
jge
mov
pushf
sub
lcall
addb
adc
jo
movsl
lcall
adc
pusha
cs
insb
mov
jae
mov
mov
cltd
sub
test
fisttpll
sbb
mov
dec
dec
add
movsb
das
mov
out
dec
outsb
enter
insb
cs
xor
mov
sub
sub
popf
mov
lcall
mov
mov
jns
sti
cs
xorb
out
cltd
scas
pop
fmuls
sub
inc
enter
push
idivl
add
popa
sbb
ret
and
mov
adc
daa
xor
popl
cmp
inc
es
out
lret
xor
arpl
mov
dec
inc
addr16
mov
add
sbb
adc
rcrb
xchg
or
push
icebp
sti
push
dec
ds
mov
xor
es
les
sbb
mov
sbb
sarl
pop
enter
mov
lds
rcll
mov
inc
push
daa
insb
inc
iret
call
jne
aad
out
aam
icebp
add
mov
adc
sbb
out
and
mov
loope
pop
mov
xchg
je
or
push
rorb
cld
mov
sbbb
outsl
fidivl
jecxz
pop
xor
stc
and
test
jg
pop
int
insb
pop
cld
push
push
mov
or
push
or
fcompl
mov
adc
inc
dec
pop
aam
mov
aam
cmpsl
jo
mov
aas
dec
cmp
test
xchg
lds
cs
adc
mov
lock
data16
mov
out
or
ret
xchg
inc
lahf
sbb
fcoms
sarb
loopne
add
jge
dec
inc
jl
fcmove
and
daa
call
not
popf
sysenter
jne
mov
push
loope
lds
pop
adc
aaa
mov
loopne
xchg
mov
aad
fimull
test
arpl
sbb
and
lret
popf
out
mov
and
lret
mov
in
mov
mov
dec
loope
pusha
cwtl
push
es
inc
sub
dec
pop
in
lcall
jbe
lods
scas
xchg
inc
rcrb
mov
jle
shlb
sarl
cmp
jle
lret
std
fbld
xchg
push
movsl
jp
scas
pop
push
or
int
push
aad
sarl
mov
xchg
xchg
mov
adc
ficoms
in
push
dec
push
addr16
in
or
popa
xor
mov
fsubrl
in
cmpsl
repz
cmovp
add
cld
adc
mov
push
shlb
dec
cmp
imul
in
ljmp
dec
xor
cmp
ljmp
adcb
sbb
lods
adc
in
outsl
and
dec
lods
cmc
lods
dec
inc
and
sub
or
out
cmc
fcmovnu
jmp
pop
mov
pop
mov
sbb
cmc
mov
fcoml
cltd
cmc
repz
lods
dec
mov
bound
xchg
shlb
mov
xlat
stos
push
aaa
negl
add
jbe
popf
rorb
les
fimull
mov
test
test
js
xchg
hlt
inc
and
push
cs
filds
add
lret
jb
rorb
enter
and
mov
out
lcall
imul
xor
inc
or
test
cli
xor
pop
inc
jae
call
pop
mov
push
and
movsl
fs
push
lcall
pop
lcall
in
into
push
and
push
adc
loopne
fstl
pop
adc
cli
mov
loope
scas
add
xor
movsb
lcall
dec
shl
out
jbe
push
insb
mov
outsl
lods
push
pop
pop
or
arpl
sbb
mov
pushf
cmp
int
xchg
xchg
nop
xor
mov
leave
loop
pop
or
mov
je
int3
jne
mov
mov
fadds
mov
outsl
ss
xchg
inc
insb
ud1
lret
push
in
ret
pop
lcall
cmp
inc
shll
cli
cmp
add
mov
adc
fldt
mov
stos
add
sbb
xchg
call
inc
or
rcl
in
lret
sub
xchg
es
add
push
adc
cli
inc
mov
adc
jle
mov
imulb
shll
sbb
cli
loopne
outsl
roll
dec
cli
lret
dec
inc
aam
stos
cld
int3
sahf
xchg
sbb
mov
add
ja
fsts
mov
dec
cld
pop
inc
sahf
outsl
clc
jns
es
jg
push
shrl
sti
icebp
jecxz
dec
mov
in
sbb
insl
jbe
rcl
jns
dec
or
xchg
orl
dec
notl
xor
inc
mov
test
cmp
cmpsb
scas
xor
out
bswap
xchg
lret
out
and
or
lock
lcall
test
repnz
push
xor
sbb
sarb
pushf
test
ja
inc
dec
imul
sbb
popf
inc
sub
test
pop
jo
push
mov
push
fnsave
shrb
jp
push
ret
adc
dec
inc
jne
jmp
lret
lods
movb
push
or
or
pusha
repz
and
or
in
dec
rcll
mov
inc
hlt
bound
stos
hlt
push
vmread
out
xchg
ret
stos
mov
iret
pop
sarl
sarl
inc
cli
arpl
lds
push
dec
push
mov
sbb
adc
jbe
sub
in
xchg
daa
pop
mov
inc
sbb
pusha
repnz
dec
mov
sahf
popa
pop
push
and
push
and
inc
and
outsb
ljmp
stc
jmp
iret
and
ja
add
pusha
out
loopne
push
mov
add
jg
cmp
push
mov
mov
test
push
xchg
enter
push
xchg
daa
mov
shrl
shlb
cwtl
test
adc
scas
jbe
inc
pop
push
jge
add
cmp
jge
imul
pop
cmp
fs
loop
mov
cmp
leave
jl
and
push
loope
pop
mov
pop
int3
and
add
out
shl
pop
pop
sarb
scas
xchg
cmp
inc
lods
xor
sub
call
bound
fiaddl
xor
pop
sub
cs
fwait
dec
ljmp
das
cltd
ja
pop
ja
outsl
repnz
mov
inc
dec
jmp
cld
stos
sbb
outsl
or
les
test
ss
jne
add
ret
ret
adc
sub
mov
test
popa
push
mov
subl
adc
sub
adc
mov
mov
xchg
lds
movsb
adc
xchg
dec
out
lahf
mov
and
pop
and
stos
mov
dec
test
xchg
cmp
inc
jg
cltd
mov
dec
clc
or
add
test
cs
pop
pop
or
jnp
cltd
mov
decl
adc
popa
int3
clc
testb
dec
and
out
push
xor
insb
jns
or
cmc
cmp
push
xchg
ds
test
adc
xor
push
into
fsubrs
bound
das
pop
frstor
adc
xorps
loopne
mov
popa
ret
stos
out
mov
push
cli
ret
mov
adc
outsl
into
test
test
inc
adc
jns
scas
mov
out
push
fidivrs
enter
inc
fsubp
test
mov
fisubl
cmp
jo
loope
aas
addb
jecxz
js
into
fmull
jae
sbb
add
das
jge
scas
mov
adc
xor
xchg
movsl
push
pop
jnp
leave
jecxz
pop
popf
lcall
sub
jmp
dec
cmp
test
xchg
inc
pop
push
xor
mov
jle
lds
mov
xor
dec
jmp
ficoms
push
sbb
jge
sbb
sub
nop
pop
cmpsl
pop
aas
fstl
sub
hlt
scas
pusha
cmp
cmc
aad
adc
aad
sub
xchg
push
or
in
xchg
mov
sub
or
push
stos
in
movsb
dec
popf
add
jecxz
stos
pop
scas
test
mov
les
fs
push
cwtl
jg
enter
out
aam
xchg
sub
mov
hlt
ja
mov
pop
or
xchg
or
aad
mov
pop
pop
push
fxch
xchg
outsl
mov
loop
sbb
shl
sub
dec
fiaddl
test
adc
cs
roll
push
jge
loope
test
xchg
pop
mov
test
repz
shll
shrb
push
dec
pusha
lcall
movb
stc
sahf
ja
es
and
stc
lea
lret
fsubl
mov
sub
ljmp
inc
aas
imul
das
aaa
ret
and
pop
adc
xchg
insl
mov
js
xor
test
int3
dec
repnz
and
pop
sbb
js
xchg
push
dec
mov
leave
test
push
cmc
and
call
or
fnstenv
cs
inc
or
push
add
aam
mov
add
cmp
loopne
int
add
fldt
ret
repnz
call
fs
and
mov
mov
js
mov
addr16
movsb
mov
ss
dec
cmpsl
fdivrp
mov
dec
add
jge
outsb
sbb
jmp
in
adc
jno
sub
lods
mov
cmp
std
je
pop
add
sub
inc
lret
push
dec
push
sub
cwtl
fildl
dec
push
mov
pop
sahf
push
cmp
mov
sarb
loopne
jl
insl
test
sbb
cwtl
sub
aaa
inc
lods
mov
mov
sbb
and
out
rcrl
jmp
adc
mov
add
cmp
mov
lock
push
sbb
push
mul
add
lds
cmpsb
idivl
imul
adc
mov
xor
dec
mov
mov
adc
jne
jo
mov
inc
jecxz
jno,pt
aam
cmp
mov
pop
pop
pop
xchg
mov
daa
cmc
jns
push
and
or
inc
nop
fmuls
push
addr16
fwait
and
jbe
push
cmp
pop
cmp
sbb
mov
into
xor
sbb
pop
xchg
cltd
inc
pop
push
in
add
xor
dec
nop
or
scas
shll
pop
jg
iret
faddp
add
and
fs
pop
das
sbb
ret
jge
paddusw
pop
jns
push
jmp
add
mov
jp
loopne
mov
in
push
sub
imull
das
and
ss
mov
lds
and
fs
stos
outsl
xchg
mov
subl
push
sbb
push
mov
aad
cmp
outsb
aaa
or
rolb
lods
jmp
jl
or
aaa
inc
popa
lret
jbe
lcall
ret
loop
inc
imul
ss
dec
or
aas
inc
xchg
rcrl
nop
sbb
pusha
push
push
mov
lock
or
sub
icebp
cmpb
imul
xchg
fwait
jl
in
xchg
lahf
sub
or
xor
ljmp
sbb
rcll
sbb
mov
push
mov
and
dec
xor
insl
out
pop
stos
ret
call
clc
cmpsb
sub
mov
rcrb
sub
jne
in
cmp
insl
rcl
daa
insl
jnp
add
xchg
add
xor
repz
test
xchg
aam
addr16
pop
jge
push
int3
add
or
insl
add
into
inc
adc
sbb
rcll
mov
scas
jg
xor
pop
or
nop
pop
sbbl
dec
pushf
pop
pop
push
adc
ss
mov
inc
jmp
lahf
lgs
mov
fsubrl
ret
jge
addb
orl
arpl
js
dec
inc
jb
adc
adc
push
adc
jl
mov
add
mov
cmpsb
xor
aad
or
stc
inc
xchg
orl
fcomi
pop
jno
mov
mov
jecxz
into
pop
inc
ds
adc
ljmp
push
rcrb
in
negb
fimuls
cmc
rol
fdivl
push
enter
sbb
repz
ljmp
mov
mov
cmp
das
mov
mov
sbb
or
jmp
pop
mov
sub
pop
sbb
mov
push
les
outsb
sub
pop
mov
adc
fcomip
mov
addr16
scas
xor
push
cmpl
sti
sbb
imul
push
insl
cmp
xor
inc
jp
lahf
pop
add
into
mov
inc
subb
mov
inc
add
mov
jne
lock
push
jle
pop
xchg
cmpsb
ljmp
cmpsb
mov
mov
and
aaa
or
add
sbb
dec
adc
jmp
std
fsubrl
fstp
adc
mov
sbb
lods
xchg
jg
pusha
mov
aad
shr
mov
das
or
sub
pop
test
xchg
inc
leave
clc
cli
dec
and
movsl
push
jns
jge
xchg
decl
or
dec
insb
dec
add
mov
xchg
jns
jmp
out
sbb
mov
dec
sarb
add
cwtl
lds
lods
hlt
xchg
pusha
es
ljmp
test
test
jae
jp
xchg
or
test
les
xor
pusha
dec
ss
lret
jne
icebp
sub
test
dec
rolb
mov
xchg
cld
adcb
repz
je
xchg
sbb
mov
adc
lods
std
imul
jp
pop
add
cmp
lock
push
js
repz
neg
lods
cld
mov
sbb
les
iret
ds
add
lock
es
popf
cmp
fisttps
mov
cltd
out
adc
inc
stc
aad
jno
xor
xchg
or
jns
out
leave
mov
pop
ret
pop
cmpsb
out
mov
push
jo
leave
fisubrl
lock
sbb
cwtl
lahf
fcomps
lret
in
xor
mov
repz
xor
lcall
imul
pushf
cltd
movsl
ret
sub
push
outsb
hlt
ljmp
test
push
in
ret
hlt
xor
ss
or
fldt
mov
push
ljmp
into
aad
rclb
push
popa
push
sarl
addr16
jae
sbb
xchg
stc
sub
cs
fs
pop
icebp
pop
sbb
scas
test
mov
jmp
loop
push
repz
cmp
aas
dec
dec
sub
add
jmp
sub
mov
inc
insl
mov
test
std
and
sub
add
mov
mov
sub
and
fs
sahf
xchg
movsb
sahf
ret
jl
test
and
lock
xchg
bound
dec
ficoms
mov
aas
xchg
in
lret
xchg
sbb
aad
mov
js
xchg
pop
push
cmp
mov
stos
aam
adc
das
mov
je
loope
pop
mov
iret
dec
cmp
xor
push
jb
mov
fisttpl
mov
sub
rcrb
mov
inc
mov
or
or
test
pop
icebp
andl
push
fists
decl
shrb
mov
mov
pop
clc
push
into
mov
aas
xchg
jecxz
test
pop
arpl
mov
fldt
dec
jne
out
dec
pop
mov
mov
jg
dec
xchg
into
rolb
mov
lret
mov
rorl
int
mov
xchg
std
stos
pop
sbb
stos
mov
dec
jge
cmc
push
out
push
les
adc
rorb
push
dec
mov
pushf
ficoms
mov
sub
test
das
xchg
mov
int
rorl
push
sarl
sub
fstps
xor
and
stos
jl
cwtl
lret
inc
push
js,pt
enter
sub
leave
inc
imul
aas
jbe
push
mov
scas
fs
mov
loop
mov
ds
clc
xchg
ljmp
dec
mov
pop
stos
or
lret
xchg
test
lret
adc
jge
xchg
ljmp
test
pop
xchg
xchg
movsb
cmp
out
jle
clc
aam
decb
hlt
pop
call
sti
inc
push
mov
js
fisttpl
sbb
sti
xchg
repz
nop
adc
jge
cmp
jb
sbb
sub
in
and
cmp
into
jge
cmpsl
out
loope
movsl
in
mov
or
sbb
adc
lods
mov
xchg
repnz
add
sub
and
jae
mov
mov
pop
leave
inc
xchg
jmp
insl
inc
cs
push
push
jg
pop
repnz
xor
pushf
outsl
sahf
jns
pop
xchg
mov
in
push
and
hlt
stos
push
popf
aaa
jp
cmc
adcl
jne
xor
xchg
andl
pop
in
xchg
clc
adc
int
in
leave
daa
insl
in
int3
ljmp
dec
push
scas
xchg
push
stos
daa
in
out
aad
add
push
pop
lods
xchg
lea
xor
jge
fs
push
cmpl
fdivrs
adcb
dec
push
mov
addr16
or
sarb
dec
inc
mov
cli
sti
dec
xchg
flds
insl
mov
dec
inc
jge
push
nopl
insl
mov
jne
into
jbe
mov
sbb
call
push
push
mov
mov
inc
or
ljmp
push
les
lret
insb
gs
sbb
jbe
and
push
adc
and
cli
int
in
out
mov
mov
adc
sbb
pop
ds
push
mov
test
movsl
xchg
adc
jbe
push
inc
in
mov
dec
xchg
and
pop
mov
cld
lcall
push
sub
packssdw
or
sub
out
jae
cmp
sbb
sub
jae
mov
icebp
add
stos
dec
mov
sub
add
sbb
dec
push
ja
or
sub
outsl
stos
jbe
popf
jl
repnz
or
sub
push
jo
cmp
arpl
and
adc
pop
lcall
in
cmp
outsb
les
push
xchg
repz
loopne
into
stc
dec
test
or
mov
negb
mov
push
test
sahf
dec
inc
xchg
in
adc
stos
call
pop
movsb
fmull
scas
aad
jl
les
dec
push
scas
add
xor
out
hlt
fimull
loopne
xchg
inc
mov
ds
mov
mov
sub
and
mov
loope
add
mov
shlb
xlat
dec
jge
aaa
pop
adcl
lahf
lock
jl
adc
push
pop
inc
pusha
movsb
nop
mov
or
mov
dec
hlt
movsl
or
lock
add
je
loope
adc
sti
imul
mov
sub
gs
test
add
add
mov
cmc
repz
fbstp
outsb
arpl
leave
adc
gs
xor
ja
push
test
aam
jns
jb
dec
daa
push
cmpl
aaa
mov
xchg
mov
adc
idivl
ds
mulb
mov
fadd
sbb
std
cld
dec
in
push
fdivl
pop
daa
ss
das
mov
je
jg
lods
push
stc
or
pop
xor
in
scas
cs
lahf
sbb
into
push
lahf
xor
and
jns
div
adc
xlat
rclb
scas
enter
lds
or
mov
adc
sti
xchg
adc
hlt
rorb
jmp
jnp
outsl
jmp
sub
mov
push
ficomps
fsubp
pop
sub
insl
inc
jno
insb
test
sbb
jo
movsb
fdivp
inc
and
clc
mov
and
or
inc
add
push
mov
sub
into
mov
into
push
into
rorb
je
mov
push
cmp
int
xchg
or
sub
and
sbb
fiaddl
fisubs
lahf
sarb
into
cltd
stos
jbe
push
sbb
nop
xor
repz
sti
int
sub
xchg
and
rolb
adc
loopne
mov
es
push
mov
add
shll
test
sti
add
cmp
push
loope
popf
pop
sbb
lahf
sahf
je
aaa
enter
mov
mov
add
and
les
xor
negb
dec
xor
sbb
cmc
xchg
inc
scas
pop
push
lret
mov
int3
sbb
adc
aam
cmp
mov
jle
fstpt
test
in
popf
test
add
dec
xor
lret
add
inc
and
aam
mov
dec
das
dec
inc
ret
cmpsb
sbb
lret
fcmove
or
loope
dec
xchg
mov
cli
jo
repz
in
mov
xchg
inc
adc
mov
rolb
inc
lahf
out
push
xchg
lock
inc
add
xchg
xor
lods
in
mov
int3
stos
icebp
pushf
inc
mov
stos
call
mov
mov
stos
push
push
push
mov
sbb
aas
lock
ret
testl
xor
xchg
sbb
sahf
imul
adc
mov
push
pusha
fwait
mov
inc
xlat
icebp
or
aam
mov
lds
mov
test
dec
loope
dec
bound
lock
add
dec
dec
inc
push
outsb
movsb
aam
pushf
int3
insl
jbe
push
lods
out
sahf
dec
repz
pop
dec
into
out
cmpsl
push
mov
dec
mov
repz
cltd
nop
out
push
out
sub
jmp
je
aaa
inc
in
mov
addr16
test
ret
test
xchg
pop
adc
cmp
ret
outsb
out
adc
rol
imul
mov
cmp
mov
or
jmp
push
insb
leave
js
lret
imul
pop
test
mov
filds
pop
lea
cld
outsl
test
pusha
mov
inc
mov
imul
inc
mov
add
xchg
rcll
std
jb
addl
lods
dec
test
in
mov
es
or
jecxz
cmpsb
sub
dec
push
fnsave
pop
lods
hlt
mov
iret
gs
fistl
aaa
enter
inc
jnp
xchg
or
mov
cmc
inc
pop
imull
lods
dec
jne
insl
test
mov
pop
lds
in
outsl
out
mov
cmp
andl
inc
add
fs
std
clc
faddl
jo
out
xchg
push
or
mov
in
lea
rorb
dec
xchg
clc
lea
xor
je
das
add
out
cwtl
or
add
cmpsl
leave
jle
bound
jp
cld
int3
pop
push
adc
inc
sbb
jp
mov
push
test
leave
dec
movsl
jns
lods
xor
loop
test
loop
sbb
dec
fdivrp
inc
adc
cmp
mull
add
fcompl
aaa
xchg
loop
rcll
mov
in
mov
jg
out
xor
add
dec
mov
std
pusha
shlb
and
cwtl
je
mov
jae
or
xchg
or
bound
push
adc
push
std
xchg
and
mov
mov
cli
movsl
insb
das
cmp
pop
stc
push
cwtl
aam
jae
dec
pop
repz
sub
vrcpss
lret
in
sbb
xor
push
gs
inc
xor
sub
mov
aaa
popa
rcl
repnz
mov
cwtl
and
dec
popf
loopne
mov
outsl
repz
stos
fcmove
aas
mov
fcomps
nop
xor
add
mov
inc
and
lods
or
out
jge
and
mov
mov
aaa
xor
repnz
test
mov
adc
ret
xor
sbb
sub
fdivrl
xchg
sahf
and
xor
add
insl
mov
and
cwtl
lock
mov
jne
ds
mulb
jmp
cmp
call
ds
sbb
mov
add
aad
and
adc
dec
push
mull
out
movb
cmc
dec
js
cmp
cmc
es
scas
mov
shl
mov
xlat
push
jbe
cs
test
xor
loopne
pop
jp
jge
aam
sbb
pusha
rolb
jae
inc
and
out
addr16
mov
ljmp
int3
jo
insl
mov
jle
aam
add
pop
jmp
shll
cmpb
fistps
repz
cmp
sub
push
loopnew
xor
xchg
aam
pop
mov
dec
scas
lods
int3
push
imul
push
or
lahf
gs
xchg
adc
aam
xor
mov
mov
scas
outsb
frstor
dec
fldenv
mov
fisttpll
clc
pop
fsubrl
loope
inc
pusha
movlps
cmp
add
jp
rcr
clc
lods
cld
lahf
mov
push
rcrl
aad
stos
lcall
cli
mov
mov
pop
fs
or
and
and
inc
mov
inc
push
sbb
and
lret
push
xchg
xor
imul
adc
push
pop
mov
outsb
iret
rol
mov
pop
xlat
dec
xor
sbb
cli
ja
sbb
outsb
sbb
shl
out
mov
fstl
push
rcrl
pushf
xor
cwtl
call
xor
lahf
mov
std
xor
sbb
add
scas
data16
movsl
xchg
outsb
jo
push
xchg
push
xor
into
dec
call
jb
and
js
imul
test
stc
loope
enter
add
cwtl
push
mov
sbb
rorl
mov
sub
pushl
pushf
jno
and
lret
fsubr
ds
cmpsl
ljmp
int3
enter
notl
lock
push
cmpsb
xor
add
popf
fisubs
xchg
loope
push
in
out
int
aam
pop
xor
cmc
cmp
icebp
xchg
sbb
dec
mov
ret
jns
out
add
outsb
adc
mov
sbb
push
mov
mov
loope
sub
call
push
data16
bound
ja
pushf
ss
leave
sbb
and
in
mov
pop
lods
inc
or
ss
add
push
dec
addr16
mov
stos
ja
xchg
orps
inc
push
dec
lahf
adc
add
aas
cmpsl
push
xorl
add
std
xchg
icebp
pop
xor
in
cld
ljmp
les
ret
adc
push
lea
in
cmp
sub
add
test
scas
ja
lret
mov
outsb
and
cmpsb
sar
frstor
stos
pop
lods
mov
mov
jecxz
jle
jnp
add
dec
in
cmp
sub
mov
hlt
mov
leave
jmp
xor
mov
jne
xor
jae
and
pushf
jle
std
push
ljmp
sarb
pop
lahf
cmp
fpatan
shll
mov
cmp
shl
aam
fbstp
clc
ret
sbb
fcoml
dec
outsb
mov
lock
push
cmc
mov
sbb
fiadds
push
scas
ja
psubusb
sub
ret
leave
mov
jb
outsl
jmp
xorl
je
imulb
mov
add
lods
pushf
rcrl
sub
or
fimuls
int3
push
adc
sub
mov
out
stc
into
outsl
add
or
ja
int3
ljmp
jecxz
dec
or
pop
pop
insl
adc
lods
mov
inc
leave
and
sub
cmpsb
call
into
jo
inc
in
out
dec
and
cmp
daa
mov
mov
test
jae
mov
lods
aaa
stc
inc
pop
or
inc
dec
incb
or
jno
add
leave
movsl
and
imul
mov
and
fwait
inc
dec
push
aaa
fbstp
into
pop
insl
or
cmp
add
jg
test
mov
mov
scas
jl
fs
aas
xchg
push
dec
push
addr16
lods
xchg
jmp
mov
in
adc
loope
out
xorb
mov
repnz
lods
pop
dec
mov
dec
mov
clc
adc
xor
sub
shr
and
inc
cmp
sbb
sub
adc
jmp
imul
test
test
mov
sub
add
pop
cmp
jne
mov
jbe
add
dec
fimull
and
nop
push
in
jo
cmp
cmc
test
add
stc
push
lret
std
cmpsl
push
fs
cmpsl
mov
add
sahf
stos
xchg
into
or
test
ljmp
xchg
leave
or
pop
ret
aam
mov
scas
fcmovnb
and
ja
pop
aas
push
adc
cmpsl
mov
ret
movsl
call
clc
cltd
lahf
push
shl
sbb
jb
nop
dec
orl
pop
sub
sbb
popa
push
rdtsc
xor
and
aad
sbb
fmulp
mov
xor
jbe
cmpsb
dec
jle
or
inc
pop
pop
cs
or
sbb
stc
daa
lods
out
fcmove
adc
daa
ds
add
add
fldlg2
scas
in
dec
ss
test
enter
mov
sbb
scas
cmp
inc
je
push
loopne
adc
adc
les
ret
adc
add
pop
loop
cmpsb
mov
lds
arpl
pop
sbb
mov
mov
dec
pop
inc
push
lods
cmpb
enter
pop
add
daa
mov
and
xchg
scas
loopne
push
mov
int3
aaa
scas
pop
movq
push
out
into
out
insb
in
out
and
mov
jp
test
popf
cltd
in
out
jae
in
mov
clc
dec
xor
mov
or
xchg
cltd
mov
ficompl
insb
test
aam
add
dec
ss
mov
test
xchg
or
insb
adc
mov
les
push
repz
pop
jno
roll
cld
cmp
movsl
pop
ret
push
xchg
cmc
and
leave
movsl
arpl
add
ret
cmpsl
lods
in
lds
cmpsl
ret
push
je
ret
inc
inc
xchg
mov
mov
or
test
add
push
sahf
jge
or
dec
push
cmp
jecxz
pop
jb
mov
and
mov
icebp
ljmp
add
aam
mov
jl
mov
aad
xchg
or
or
test
fsubrl
sahf
or
adc
push
rcl
in
out
dec
int
mov
cmp
scas
mov
push
inc
pop
sub
sbb
lret
lret
cld
push
xor
in
mov
xor
pop
or
sahf
loopne
add
fwait
int3
jp
sti
in
jne
fstpl
lea
leave
inc
add
push
jae
inc
and
loopne
scas
jae
pop
dec
inc
add
jno
mov
jno
sbb
sub
add
inc
adc
push
sbb
push
cli
fdivr
jl
add
out
iret
mov
dec
push
sub
fwait
orb
mov
push
pop
inc
bound
bound
cmp
lret
inc
jp
lods
repnz
cmp
stos
push
cmp
add
test
outsl
sub
push
and
or
ret
sub
fmul
ja
add
add
ret
lea
lods
ss
mov
rolb
aam
xor
pop
jnp
shll
xchg
clc
mov
push
rcrb
repnz
fisubl
mov
nop
lods
mov
loope
xchg
mov
mov
ljmp
iret
pop
jecxz
cmpsb
popa
outsb
movsb
xchg
lock
xchg
mov
jns
int
xor
sub
cmpsb
lret
or
roll
inc
cli
cs
dec
sbb
sahf
cmpsl
sbb
xor
data16
pop
jns
jle
or
insl
or
push
inc
idiv
lea
cmpsl
jl
jmp
jb
add
mov
imul
stos
cltd
inc
decl
push
and
xchg
ljmp
xlat
mov
jns
cmp
int
add
add
push
out
xor
jb
setg
pop
push
cli
mov
push
sub
adc
push
xchg
leave
out
in
adc
in
movups
aad
cmp
inc
sub
jbe
pop
sub
cld
sub
movsb
movb
hlt
mov
xor
ljmp
pusha
jmp
xchg
subb
les
and
jl
mov
xor
and
insb
jo
xchg
stc
sahf
es
test
fisubrl
cmp
repnz
adc
push
enter
jb
push
and
sub
loopne
out
mov
add
cmp
push
iret
push
push
inc
xor
aas
dec
mov
mov
push
call
stc
lods
push
jecxz
fs
pop
dec
leave
cs
ficoms
lea
jg
sbb
push
lock
adc
or
add
push
jae
sbb
sbb
mov
cmp
sbb
inc
jo
pusha
imulb
adc
out
pop
fsubs
cs
addb
and
xor
cld
mov
push
test
cltd
andb
jns
loope
pop
mulb
cs
popf
inc
adc
xchg
data16
in
fnsave
mov
and
mov
hlt
dec
xchg
mov
outsb
or
jge
test
mov
sub
sbb
jecxz
ret
inc
pop
popf
mov
cltd
out
popf
jns
inc
mov
and
arpl
jne
rcrb
test
jp
addb
stc
pop
push
psrlq
scas
mov
les
scas
mov
gs
inc
cmp
sbb
rcrb
add
mov
mov
add
sub
mov
xor
popa
gs
test
jo
addl
adc
push
or
daa
loope
mov
pop
jo
mull
jb
arpl
xor
pushf
fsts
incl
sbb
xchg
test
pushf
mov
mov
sti
push
jge
mov
int3
mov
or
insb
and
xchg
loopne
jne
xor
jmp
andl
aam
or
mov
mov
movsb
lods
inc
cli
or
jo
cmpsb
movsb
pop
mov
push
mov
sarl
pop
mov
test
iret
or
mov
jbe
daa
hlt
mov
repz
sbb
jne
cmp
adc
jmp
js
xor
push
sub
daa
push
xchg
lret
pop
mov
iret
lret
jbe
sbb
lcall
push
or
loope
outsl
pop
pusha
cwtl
jg
mov
je
fisttpl
loope
adcb
out
jg
or
mov
add
add
cmp
or
mov
testl
out
cld
lods
insl
xor
jbe
insb
jno
repz
lahf
xchg
ss
pop
mov
mov
add
cmp
sarl
dec
sbb
inc
notb
sahf
push
lret
loop
test
adc
mov
stos
adc
cwtl
fs
js
sub
subb
imul
cli
push
xor
pop
xchg
pop
mov
out
mov
sarl
push
sbb
daa
orl
sbb
cli
ljmp
movsb
movsl
jle
mov
or
movsl
add
ja
sbb
ucomiss
scas
lods
cmp
in
ljmp
mov
sbb
movsl
mov
movsb
clc
mov
repnz
jp
imul
push
xchg
mov
sti
xor
lods
push
mov
movsl
mov
pop
fisttpl
adc
fstl
mov
scas
sbb
test
fstpt
movsb
xchg
jns
icebp
ds
push
jae
aas
jnp
loope
lods
aam
sbb
in
cmp
jmp
push
ret
sti
fmulp
outsl
or
adc
test
sbb
leave
sub
or
hlt
lret
adcb
mov
flds
lock
pop
mov
sub
ljmp
add
inc
lret
out
lods
enter
icebp
push
in
ret
push
aad
aaa
cmc
cmp
arpl
inc
hlt
push
ficompl
mov
jg
mov
orb
sub
add
mov
leave
mov
inc
arpl
mov
insb
jnp
stos
fnsave
jae
pushf
mov
cmp
outsb
cmp
cli
pop
xchg
sarb
cmc
jge
inc
cmp
jg
inc
pusha
insl
mov
mov
pop
fcompp
xor
cli
fwait
pop
xchg
mov
int
lds
cs
mov
push
outsl
push
nop
cmpsb
jmp
sarb
in
rorb
adc
jbe
mov
add
cmpsb
in
fidivrs
addr16
mov
insl
into
xchg
and
stc
dec
jnp
cltd
cmp
imul
cmpsl
shl
mov
sub
sbb
shll
mov
and
outsb
xor
push
add
scas
cli
cs
loopne
and
lock
mov
sub
adc
addr16
xor
stc
mov
in
iret
jmp
cmp
in
and
adc
cmp
pop
xlat
xchg
jno
jb
mov
mov
xlat
inc
mov
push
clc
stos
mov
xchg
cmp
sbb
outsl
inc
rcrb
push
lcall
cmp
mov
cltd
push
mov
pop
shlb
and
xor
pop
ja
sub
rol
push
lods
call
xlat
cwtl
lahf
mov
sbb
insl
js
pusha
insb
popf
pusha
sbb
sub
cmp
aas
ljmp
movsb
data16
je
push
flds
xchg
js
adc
sbb
cmp
mov
stos
aaa
imul
pop
push
sbb
je
inc
mov
xchg
outsb
cmp
sbb
pop
leave
test
movsl
mov
ret
faddl
jl
and
in
shrb
xchg
fidivl
nop
mov
imul
imul
push
in
movl
push
and
or
loope
lcall
and
jp
mov
mov
xchg
lds
dec
or
pop
lahf
or
push
or
cmpsb
repnz
push
cld
mov
pushf
sub
aas
push
or
pop
pop
sub
in
push
leave
daa
dec
jmp
cmpsl
mov
fsubrl
leave
shrl
xchg
call
and
mov
outsl
dec
inc
add
jl
xchg
sub
pop
push
inc
cmc
mov
bound
lods
sti
add
mov
xor
loope
stc
xor
xor
ficompl
jnp
xchg
in
mov
sahf
ret
push
ds
mov
outsb
nop
mov
in
fwait
cmp
mov
lahf
call
bound
cmp
adc
test
push
push
scas
sub
mov
in
aaa
push
xor
jmp
test
mov
fstl
xchg
cmpsl
xor
mov
mov
rorb
mov
inc
inc
test
adc
sub
into
cli
mov
lods
in
into
mov
rcr
dec
repz
inc
in
jmp
mov
rorl
das
cmp
adc
or
jns
shrl
test
sub
psrld
sar
mov
adc
add
jns
pop
cli
out
mov
xchg
fidivs
icebp
leave
iret
rorl
test
pop
fstpt
xor
push
test
pushf
pop
jae
lret
pop
cltd
or
pop
lret
jns
push
roll
xchg
jae
pop
and
pop
dec
pop
cs
add
or
lods
faddp
lock
scas
scas
push
aas
xchg
loop
dec
xor
and
sub
sub
sub
cmp
push
cmp
out
dec
repnz
out
loope
andl
push
fsubp
addl
inc
fildll
pop
adc
xchg
fucomi
in
loope
pop
mov
xchg
inc
in
sub
lods
inc
notb
mov
inc
pushf
sub
jne
adc
fdivs
push
outsb
jle
sub
mov
fcmovnbe
xchg
test
xchg
sub
das
ret
loope
pop
rclb
pop
mov
inc
jb
lds
aas
adc
imul
outsl
mov
jne
into
push
mov
inc
mov
sbb
sbb
vcvtsi2ssl
sbb
pop
movsl
in
int3
and
add
out
movsl
sbb
inc
dec
mov
push
das
xor
cwtl
inc
clc
fists
add
sub
mov
push
out
xor
cwtl
inc
cmp
inc
imul
add
loopne
rcrb
fdivrl
lock
les
inc
add
adc
insl
pop
or
mov
sahf
mov
test
jge
mov
or
lods
push
daa
in
in
push
sub
js
popf
push
xchg
ljmp
mov
or
mov
cmp
and
mov
adcb
push
and
dec
mov
hlt
and
inc
pop
lock
rcr
test
mov
xchg
popa
adc
iret
jecxz
mov
jmp
xchg
jo
jae
push
rol
int3
loop
mov
and
mov
and
xchg
leave
mov
and
mov
inc
cld
and
aaa
sbb
nop
mov
dec
mov
jg
test
sbb
stos
dec
sub
mov
xchg
xor
pop
mov
nop
inc
mov
xor
cmpsl
inc
adc
push
or
jle
pop
xchg
sahf
pop
add
mov
bound
cltd
je
jo
push
ret
sarl
loop
push
xchg
ljmp
push
xchg
push
mov
mov
pop
out
hlt
sub
into
in
nop
arpl
sbbl
adc
frstor
mov
mov
orb
movsb
push
mov
aam
ds
or
sar
jae
xor
cs
add
mov
dec
push
or
add
push
ficoms
dec
sbb
lahf
mov
pop
test
xor
sbb
inc
fwait
jp
es
mov
mov
ja
aaa
rolb
gs
jbe
cld
sbb
mov
sahf
xor
repnz
shl
out
out
pop
cmp
in
cmpsl
push
test
jbe
cld
call
xchg
sbb
xor
loop
shrd
pop
shrl
je
add
add
dec
cmpb
sbb
aad
addb
shlb
pop
mov
and
movsl
pop
adc
inc
jbe
aad
daa
pop
cmc
je
out
xchg
cmp
add
hlt
xlat
adc
push
inc
fwait
cmpsl
cmp
ja
shl
adc
pop
xchg
out
lods
in
int
iret
jae
shlb
aaa
cmc
out
sub
mov
dec
ss
aaa
push
outsl
cmpsb
or
adc
add
jo
fwait
jnp
push
mov
inc
notb
push
inc
lods
dec
jge
jo
ss
lea
adc
out
adc
jnp
std
dec
pop
addr16
push
inc
lret
jo
inc
add
push
push
sbb
cld
jnp
jl
mov
fcmovnb
sub
popa
mov
inc
roll
movsb
icebp
push
mov
sbb
rcl
xor
daa
notb
lret
pop
dec
dec
repnz
cmp
cmp
cmp
mov
sub
ljmp
push
iret
add
popf
xor
cwtl
adc
fbstp
or
jb
push
mov
jo
imul
inc
pushf
jbe
mov
jl
add
out
ja
ljmp
lods
push
sub
scas
lea
cmp
cli
loopne
and
xor
fxch
lcall
cli
pushf
insb
lds
or
aaa
adc
sbb
xchg
mov
and
ljmp
sti
cmc
out
push
jmp
push
pop
add
shrl
xor
mov
sti
stos
inc
lods
push
or
shl
stos
pushf
add
xchg
lcall
dec
pop
sahf
mov
out
insl
sti
push
cld
cld
pop
nop
pop
fstp
jmp
rcl
pop
push
adc
mov
xchg
adc
movsb
popa
cmp
ds
jns
mull
adc
testl
std
fcoml
fsubrl
xchg
xor
dec
loopne
lods
mov
movsb
ret
mov
mov
jo
pusha
repnz
iret
nop
inc
out
jnp
fimull
movsb
bswap
add
outsl
pop
inc
test
xor
xchg
js
push
fsts
lret
cltd
aad
in
ljmp
xchg
push
icebp
push
cld
jmp
das
out
cmpsl
fsubrs
lcall
mov
js
out
cmp
xchg
adcb
in
fwait
imul
iret
mov
pusha
jg
daa
sarb
sbb
sbb
and
jecxz
std
insb
mov
cmp
push
jl
lods
xchg
xchg
push
test
test
cmpsb
sub
outsl
push
movsl
jns
jl
mov
pop
adc
ss
or
inc
sbb
add
sbb
ljmp
adc
les
lods
and
out
jb
rorb
cmp
or
out
out
sub
fdiv
stos
sub
nop
fists
adc
pusha
xchg
test
dec
jo
push
xchg
jnp
sub
insl
and
xchg
loopne
and
cld
fimull
mov
cmp
lret
jg
adc
inc
lret
cmp
adc
add
out
addr16
xor
nop
cwtl
mov
das
adc
das
sbb
cld
arpl
mov
pushl
sahf
lock
imul
int3
xor
jae
stos
mov
loop
dec
fwait
mov
ss
cmp
jnp
or
inc
lcall
aam
clc
icebp
stos
cltd
jno
ret
and
movsl
mov
cmpsb
mov
movsb
mov
in
lods
in
aas
push
xor
jae
repz
pusha
pusha
fildl
imul
or
inc
xchg
dec
into
sti
fidivl
js
lcall
out
dec
inc
popa
push
test
cltd
ficomps
in
shrb
xor
dec
mov
xchg
jg
mov
repz
xchg
inc
shr
sbb
push
popf
add
les
push
inc
call
enter
ss
ja
mov
or
lcall
shll
adc
cltd
push
and
call
add
clc
arpl
mov
enter
jno
push
out
pop
add
jo
and
pop
subl
ss
pusha
or
std
fmuls
and
or
test
pushf
clc
rcll
mov
add
cmpl
int
xor
pop
sub
loope
jecxz
imul
push
lcall
sub
shlb
xchg
aas
inc
add
xlat
lret
xor
daa
subl
outsl
push
dec
enter
lods
jbe
das
mov
xchg
sub
cmp
push
cmpsb
xor
xor
cmp
xor
loop
inc
dec
rcl
mov
and
jno
xor
and
push
daa
cmc
out
dec
out
xchg
add
mov
dec
lcall
shl
lock
icebp
add
ret
mov
xor
push
xor
popf
cmp
lcall
sarb
outsb
mov
ds
ficompl
repnz
mov
sub
push
sub
xor
adc
mov
loope
mov
pop
out
sbb
adc
cmp
add
ja
js
int
mov
mov
push
dec
inc
and
adc
cmp
aas
sub
add
mov
mov
pop
dec
inc
gs
jns
out
adc
mov
and
fwait
out
lds
pop
mov
and
outsl
xor
cmpsl
aas
dec
loopne
mov
test
cmpsl
les
ret
aad
or
clc
shlb
mov
cmp
lods
pop
mov
jne
loopne
xchg
lret
test
lods
xor
mov
mov
lock
xchg
mov
scas
or
cmc
pop
out
dec
pop
mov
fldcw
ffree
cmp
adc
mov
div
nop
pop
lcall
movsl
mov
xor
inc
aam
mov
cs
stos
push
lods
ds
push
scas
xor
shlb
pop
xorl
or
imul
mov
jae
in
mov
xchg
cmp
inc
add
and
sbb
ret
push
aas
jbe
cltd
inc
sbb
xor
movsb
or
lods
fisubrs
jl
lahf
jge
xor
cmpsl
scas
or
negb
es
cmp
jbe
mov
jno
mov
fisubrl
repnz
out
xor
leave
or
std
add
sub
inc
int
popf
test
xlat
inc
adc
jg
push
popf
xor
inc
outsl
repnz
insl
in
scas
inc
push
or
lret
adc
stos
cmp
mov
mov
jns
loopne
add
sub
stos
jae
pop
ret
mov
popf
inc
ss
addr16
in
aas
test
or
imul
scas
test
or
jg
ror
sub
jmp
out
pushf
push
and
jecxz
fisubrl
aad
and
cmp
xorb
test
scas
int3
jnp
cltd
pop
stos
cmp
mov
jae
cmp
ja
jnp
or
add
mov
xchg
fnstsw
fwait
scas
sti
sub
sub
push
push
mov
negb
xor
cmp
dec
cmp
popa
jb
cmp
and
shl
dec
push
cmp
jne
sub
outsl
lcall
xor
push
pop
inc
sub
loop
mov
adcl
xor
xchg
mov
out
dec
jb
enter
mov
mov
leave
sbb
fbld
cmp
fwait
pop
rorb
and
mov
andb
mov
ret
std
enter
add
or
cmc
aaa
fsubp
xor
mov
mov
fadd
das
jne
xchg
sbb
shll
push
xor
ds
outsl
call
shrb
subl
outsb
lret
loopne
xor
dec
push
clc
pop
repz
movsb
jne
or
subb
dec
mov
movsb
stos
and
xor
ret
jno
ret
repnz
fldl
dec
push
add
mov
test
xchg
loopne
icebp
fsubrl
mov
ljmp
xchg
adc
or
and
aas
adc
xor
mov
insl
jp
and
fisubs
sub
mov
aas
mov
adc
js
rcrl
ds
gs
xchg
jge
mov
pop
cmp
add
xor
add
imul
rcl
ret
sbb
callw
std
adc
jge
mov
push
mov
lods
test
jns
fs
in
jne
fxch
mov
xchg
inc
sahf
out
nop
clc
sti
mov
jp
jmp
test
shlb
inc
dec
sbb
cmp
push
loope
xchg
inc
mov
xrelease
mov
inc
adc
aam
imul
xchg
push
inc
lcall
sbb
stos
pop
mul
pop
pop
push
lret
in
das
inc
inc
test
sub
enter
inc
inc
mov
gs
cltd
int3
cmp
sbb
loope
lea
aam
mov
mov
inc
fwait
scas
pop
jbe
out
dec
push
outsb
push
xchg
lret
rcrl
jmp
jecxz
insb
xchg
out
pop
cmp
xchg
adc
dec
cmpsl
rclb
in
push
or
xchg
push
stos
sbb
xor
cmp
push
mov
out
test
and
push
inc
imul
scas
jp
add
jbe
or
inc
cmp
mov
mov
lret
or
fs
or
xor
sub
dec
ljmp
gs
jecxz
sub
insb
and
call
mov
push
pop
or
inc
cmp
inc
or
fwait
inc
jnp
in
jno
hlt
ss
jge
push
cmp
inc
jb
fildl
jecxz
lahf
jno
in
test
sub
and
mov
in
jb
in
cli
adc
mov
adc
dec
fcomip
ja
add
and
xlat
inc
jo
inc
cltd
mov
push
rorl
fldt
daa
insl
popa
adc
fdivrl
mov
xor
cs
sub
aaa
mov
xchg
cmp
sti
int3
adc
and
mov
pop
push
push
scas
mov
mov
dec
stc
push
cmp
fnsave
pop
push
mov
aas
pop
repnz
mov
sarl
jnp
stos
mov
mov
xor
jmp
jns
push
movsl
mov
dec
cmp
push
cmovnp
pop
std
xor
mov
addb
sub
pushf
mov
stos
xchg
jne
mov
mov
pop
adc
jnp
xchg
sbb
mov
jnp
scas
std
mov
in
fldlg2
or
test
js
test
sbb
push
pop
adc
cmpsl
out
lods
add
mov
icebp
inc
mov
mov
mov
sbb
xor
fisttps
push
repnz
int3
iret
push
pusha
bound
iret
cmpsl
xlat
xchg
lds
pop
cmc
jns
push
inc
xor
push
push
repz
xchg
mov
push
jge
pop
add
test
aaa
push
xlat
loop
xchg
jmp
cli
push
lods
fnstcw
cmc
inc
mov
je
dec
mov
xchg
mov
cmp
dec
mov
popa
fsts
fsubp
pushf
rcrb
aam
lcall
inc
lods
sub
jmp
jge
inc
jecxz
mov
leave
aam
shrb
xor
imul
mov
imul
imul
loop
push
sbb
or
lcall
call
in
inc
xlat
test
cltd
sbb
cmp
fstps
xchg
je
orb
mov
shlb
flds
test
ja
lcall
xor
repnz
lahf
or
cmp
fdivrs
sarb
cmpb
enter
push
dec
repnz
pop
and
cmpsb
cmp
jae
mov
adc
mov
inc
fsts
pop
push
adc
frndint
push
dec
movl
in
xlat
adc
clc
orl
cmpsb
or
xchg
push
pop
jp
les
ss
pop
jne
pop
adc
je
or
fadds
sahf
add
aas
in
fsts
mov
add
fnsave
ret
xchg
mov
adc
daa
xchg
mov
fsubl
ljmp
adc
lea
pop
fsubp
dec
icebp
inc
adc
movsb
xor
dec
dec
testl
and
shll
inc
push
and
jb
mov
ret
jb
lods
frndint
xor
repnz
push
mov
cltd
mov
jecxz
jnp
loope
icebp
mov
test
mov
into
inc
push
pop
xchg
sbb
push
jnp
cs
jnp
xchg
cmpsl
fwait
data16
lods
je
inc
icebp
sbb
and
fldt
sbb
mov
push
aas
sti
ret
pop
cmpsb
js
dec
pop
or
mul
cs
fnsave
dec
jmp
test
push
jle
sub
lock
rcr
jl
fucomi
mov
mov
cmp
mov
ret
or
lcall
xchg
sbb
fwait
push
and
inc
sub
or
rcr
popw
mov
pop
bnd
lods
pop
lret
xchg
imul
mov
rcll
int3
add
fwait
aam
into
dec
sahf
ret
sub
imul
pop
cs
lret
sub
sbb
add
jle
sahf
ficompl
push
dec
dec
sbbb
inc
inc
out
dec
mov
test
fidivs
repz
mov
daa
mov
cmp
repz
xor
jg
shrl
mov
pop
add
int
inc
xchg
fnstenv
mov
leave
lahf
mov
cwtl
insb
test
pop
adc
xchg
loop
mov
les
mov
dec
pop
imul
cmp
call
xchg
jne
mov
sbb
jne
lret
int3
inc
jae
jnp
push
lcall
mov
aam
int3
add
xor
lea
or
xor
fcom
stc
and
add
push
cmpsb
insl
out
ret
stc
jo
xchg
in
sub
shr
pop
xchg
cwtl
in
xor
fdivrp
xchg
shr
addr16
sbb
inc
or
cwtl
jecxz
mov
cld
dec
xorl
mul
mov
xor
nop
mov
push
jbe
or
bound
and
jle
jne
imul
sti
cld
outsb
inc
pop
add
cmp
not
and
push
popf
shrl
fnsave
test
out
fistl
mov
xor
lahf
inc
jg
jbe
cmp
in
hlt
repz
lock
fcoms
or
jmp
push
inc
repz
shrl
out
cmc
enter
rolb
and
scas
scas
jle
cmp
pop
adc
sti
inc
jmp
cwtl
push
push
das
and
fwait
jo
call
pop
xor
push
cmpsl
hlt
xchg
cmpsb
push
sbb
rcrb
push
lods
testl
loopne
rorl
jo
fsubl
sub
dec
loopne
ret
xor
dec
or
and
test
ret
xlat
ret
xchg
int3
push
imul
pop
and
lcall
imul
stos
stc
jno
fwait
xchg
xchg
repnz
clc
movsb
rcrb
insb
dec
push
loop
cld
mov
xor
xchg
out
dec
xchg
sbb
push
jle
pop
sbbl
testb
mov
jns
jmp
lcall
xor
pop
xor
pop
in
das
xchg
aam
inc
dec
out
jmp
out
test
clc
mov
xchg
arpl
jmp
cmp
je
cltd
pop
cli
loope
aam
mov
cwtl
mov
xor
xchg
rorl
pop
mov
jl
leave
inc
aaa
inc
jmp
loopne
cmpl
mov
lock
sub
jg
xorl
pushf
rcl
mull
loope
ret
test
aam
test
cwtl
mov
scas
mov
and
sahf
aaa
lret
orb
pop
pop
call
movsl
sbb
inc
cmp
xchg
push
lds
rol
mov
sbbb
mov
syscall
jne
sbb
mov
jecxz
dec
clc
and
in
adc
push
sar
xor
fs
lods
in
daa
imul
std
dec
inc
and
xchg
je
pop
jns
outsb
inc
sbb
outsl
std
mov
mov
das
cld
mov
sti
cmp
pop
imul
mov
pop
and
test
xchg
dec
loope
jle
data16
test
add
ror
push
mov
mov
lock
jns
jg
fmull
push
xlat
mov
xchg
push
pop
fwait
jne
ret
leave
int3
mov
icebp
ds
pop
pop
mov
jle
imul
test
pop
repz
xchg
cmp
jecxz
inc
sbb
mov
out
into
or
mov
in
xor
cld
js
shrb
fsubrl
imul
xchg
mov
mov
mov
dec
repnz
rol
cmp
add
loop
push
and
dec
call
repnz
enter
ljmp
xchg
test
sahf
inc
or
cld
imul
icebp
leave
cmp
pop
jo
and
inc
insb
inc
adcb
cmp
lock
dec
fildll
data16
add
cmc
sub
loope
scas
cmp
movsl
dec
hlt
into
pop
sub
popa
ret
mov
movsl
or
mov
test
and
or
lcall
xlat
xor
andb
cltd
mov
leave
sbb
and
dec
pop
ljmp
sub
cmc
jmp
pop
fisubrl
mov
cwtl
add
push
pop
test
rorb
aas
lret
popf
adc
sub
adc
jg
push
xchg
dec
push
xlat
mov
sbb
push
push
and
add
inc
mov
js
outsb
sbb
or
imul
aaa
aas
lock
sbb
push
jbe
mov
xor
je
stos
pusha
icebp
lock
fwait
and
jp
ss
inc
out
or
and
ljmp
testb
addb
jp
hlt
pop
int
cmp
out
xor
in
pop
cltd
add
push
push
test
inc
or
xchg
jbe
mov
inc
nop
jne
xchg
sub
sub
call
dec
inc
jno
int3
and
sarb
jle
pop
jne
xchg
fidivs
rorb
nop
inc
adc
inc
sbb
fistps
loopne
ret
sbb
cli
sbb
pop
mov
lods
cmp
xor
daa
mov
and
push
push
cmpsb
sub
pop
xchg
push
dec
inc
mov
outsl
add
mov
ret
xchg
cmc
add
mov
je
pop
mov
cmpb
pusha
and
rcrl
sub
cmp
bndldx
enter
ret
cmpb
xor
pop
adc
cmp
cbtw
rcl
test
out
add
loop
adc
push
les
mov
mov
shlb
lods
xlat
icebp
xor
imul
jo
nop
and
inc
pop
mov
pop
cmc
mov
rcrb
movsb
push
jg
sbb
add
in
in
popf
mov
aam
or
fisubrl
add
enter
js
arpl
push
fcmovbe
mov
testl
dec
fwait
add
dec
in
xlat
std
repnz
xchg
lock
daa
lock
mov
in
mov
gs
inc
stos
push
push
xchg
add
aam
ds
jb
inc
out
loop
sbb
stos
sbb
sub
and
mov
mov
or
pop
pop
aaa
inc
ja
push
popf
and
xchg
pushf
mov
pop
push
or
push
jno
cmp
push
or
in
xor
inc
sarl
out
mov
sbbl
jmp
out
jl
adcb
sub
xchg
stos
cli
pop
shr
addr16
in
and
push
mov
sti
and
xchg
xor
leave
and
inc
mov
loop
push
add
popf
lods
or
sahf
sbb
adc
enter
rorb
cmp
jmp
push
add
mul
bound
aam
jle
cmp
push
gs
sub
in
mov
sub
mov
cli
shl
push
call
dec
addr16
insl
iret
outsl
mov
pop
test
push
insl
sarl
push
jle
xchg
and
sub
mov
xchg
jp
xor
or
test
dec
mov
fs
xor
xor
outsl
inc
mov
pop
clc
jl
cld
and
add
test
subb
cmpsb
jmp
pop
pop
cmp
movsb
sub
insl
popf
sbb
das
inc
rcrb
mov
lds
jmp
pop
sub
pop
adc
pushf
pusha
cmpsl
jge
push
dec
fimull
xor
fdivs
jge
push
sub
rcrl
pop
insl
mov
add
mov
add
push
xchg
out
adc
cmp
sub
mov
sbb
push
jbe
outsb
loope
mov
in
jno
or
test
jecxz
outsl
dec
sahf
lret
sbb
xorl
clc
sub
lods
fsubrl
or
ljmp
jl
lret
push
mov
add
xor
cmpsb
sbb
leave
loope
lods
bound
mov
mov
icebp
mov
ds
fwait
xor
jl
sbb
fisttpl
test
out
and
lods
adc
rcr
dec
mov
repz
jae
dec
cmp
mov
jp
mov
dec
shrb
lahf
xchg
loope
daa
jmp
dec
sti
bound
stc
test
fnstsw
rcrl
sub
mov
fistpll
push
jbe
scas
lcall
cmp
jno
sar
xlat
ja
mov
addr16
ljmp
and
shrl
push
cwtl
js
xor
mov
mov
mov
es
stc
dec
lret
outsb
xchg
loopne
mov
push
dec
jmp
add
add
adc
or
inc
mov
ss
lds
push
cld
push
add
movsl
adc
movl
call
mov
nop
lahf
pop
mov
aam
test
pop
xchg
jmp
sahf
and
in
fdivrl
xor
push
pop
movsb
pop
and
dec
or
adc
mov
inc
jge
cmc
sub
imul
lea
lds
mov
xchg
in
push
mov
int
pop
jns
xchg
movsb
and
fsubrl
mov
in
sbb
xchg
push
out
jno
out
outsl
jecxz
jmp
int3
lds
xchg
xor
orb
stos
jno
outsl
jle
aad
faddl
out
inc
push
jecxz
orl
repnz
icebp
or
mov
inc
sub
add
mov
scas
fwait
je
cmp
mov
cmpsl
stos
icebp
repz
xchg
popa
jmp
cmpsb
das
push
or
arpl
push
mov
jbe
dec
fisttpll
test
jns
mov
fs
mov
popa
push
mov
shrl
loopne
xchg
push
repz
sbb
adc
add
mov
lock
pushf
jae
sti
je
jae
pushf
into
dec
gs
push
jmp
pushl
orl
jg
std
lret
pop
mov
nop
add
xchg
mov
pop
sbb
inc
in
jl
adc
mov
outsl
popa
ljmp
push
dec
jae
leave
adcb
inc
repz
xchg
xchg
jnp
in
stc
xchg
or
cs
push
int
jae
sub
rorb
sub
hlt
sub
shlb
fninit
push
mov
enter
fs
mov
das
insl
std
and
ss
adc
mov
pop
inc
lret
stos
cli
fistpll
adc
enter
xor
pop
add
mov
mov
cmp
or
cmp
insb
and
adcb
das
cmp
dec
push
sti
and
repz
cs
and
ja
into
pop
dec
shrb
xor
jae
add
jns
adc
jp
or
mov
xchg
xchg
in
mov
cmp
inc
mov
mov
fs
jno
popa
ds
sti
cltd
cltd
scas
movsb
add
dec
jle
mov
sbb
paddd
test
and
push
fildll
mov
out
or
bound
dec
nop
sbb
cld
shl
movsb
xchg
aaa
into
sbb
xor
sti
mov
cmp
lods
pushf
pop
ss
ret
loopne
add
jnp
pop
ljmp
in
push
inc
scas
adc
pop
cmc
pop
inc
repz
cwtl
shll
sub
enter
lods
sahf
popf
out
xor
lea
inc
imul
mov
std
add
mov
add
mov
lret
and
test
and
idiv
sbb
jge
test
aam
aad
and
push
push
dec
xor
dec
fstl
aaa
pop
push
fsubrs
adc
imul
xor
addr16
lods
mov
imul
fdivr
subb
rclb
out
iret
and
neg
lods
cwtl
push
ljmp
jge
andl
xchg
pushl
popa
outsb
cmpb
testl
adc
ss
icebp
push
test
adc
push
jo
fmul
sbb
rorl
fnstenv
ficomps
mov
cmp
inc
daa
daa
jae
in
jne
in
insb
lahf
push
imul
jae
aaa
popa
adc
cmp
test
xor
lret
and
repnz
sbb
sti
add
inc
xor
jl
out
jbe
push
add
cli
stc
mov
cmpsb
fstl
sbb
repnz
cli
mov
or
mull
insb
add
pusha
inc
out
push
lret
push
pop
fisttpl
mov
jo
jmp
xor
call
ljmp
out
shll
idiv
lahf
mov
pop
dec
mov
lret
das
prefetcht0
mov
xorl
xor
sbb
int3
xor
adc
cli
loope
bnd
dec
dec
jmp
fimuls
jge
mov
insb
loope
push
push
loop
xchg
aaa
sbb
in
nop
mov
jbe
pop
test
push
clc
xchg
je
enter
pop
cli
xchg
rclb
insl
fidivrl
adc
pop
data16
sub
dec
dec
icebp
jbe
fistpll
or
xor
adc
ljmp
shlb
mov
pop
push
loope
jmp
int
sbb
dec
xor
ss
imul
loopne
je
sbb
cmp
fidivrs
repz
aam
adc
sbb
fwait
test
arpl
sahf
bound
pop
daa
dec
jno
stos
jno
lret
clc
fsubp
popa
push
pop
mov
pop
xor
jp
pop
or
jmp
adc
ret
lret
add
aam
les
outsl
mov
es
and
pop
je
or
andl
xor
mov
cmp
pop
scas
popf
arpl
inc
je
and
pop
aam
push
dec
dec
fsts
inc
pusha
add
adc
sar
sahf
xchg
imul
ret
out
push
dec
sahf
or
sbb
push
inc
adc
jo
out
movsl
pop
popa
divb
dec
mov
sub
mov
cmpsb
into
fcmovnu
jg
inc
or
inc
mov
pushl
xor
scas
adc
mov
testl
mov
fsubs
adc
imull
ret
pop
cmp
insb
outsl
push
mov
or
sub
cmp
test
cmp
movsl
jo
mov
fs
repz
pop
gs
cmp
dec
xlat
jmp
push
mov
lods
dec
mov
sti
sub
arpl
imul
lret
test
jecxz
add
mov
or
sub
adc
mov
std
ds
mov
outsl
cmp
add
sub
xchg
fldenv
insb
adc
imul
lods
add
sub
push
sbb
scas
lahf
out
stos
idivb
cwtl
jb
and
aam
out
cmp
jo
mov
lods
or
xor
pushf
insl
cmp
mov
mov
lahf
jl
pop
popa
push
jp
imul
xor
ret
cmc
cwtl
sub
cmp
xchg
andl
adc
cltd
cmp
pop
push
in
cmp
mov
in
mov
adc
rolb
lds
mov
xchg
xchg
daa
fistpll
repnz
pop
dec
leave
ret
xlat
out
pop
add
dec
xchg
dec
bsr
loopne
mov
xchg
jbe
in
jle
sbb
aaa
sbb
push
sub
or
js
jbe
cmp
sbb
shll
adc
dec
leave
out
sub
fcompl
xchg
fnsave
cwtl
push
xlat
xchg
popf
dec
push
and
sbb
mov
push
fidivrl
add
dec
mov
xchg
jl
xchg
pop
mov
adc
fadds
out
sahf
xlat
dec
lahf
mov
insb
xchg
jnp
and
ja
sti
lea
loopne
jmp
pop
out
ficomps
in
add
pop
lods
pop
mov
pop
mov
cmp
adc
lds
or
pop
adc
lahf
cs
out
cmp
mov
sbb
mov
inc
xchg
inc
pusha
ret
scas
push
call
outsb
jg
fucomip
push
lahf
stc
adc
sub
lcall
xor
insb
pop
push
aas
mov
sbb
mov
mov
mov
insb
cmp
push
push
pop
lock
lods
lock
xor
or
bound
push
mov
inc
test
lea
nop
shrb
ss
cmp
in
lock
jle
cli
xor
js
stos
movsb
mov
jmp
mov
push
add
fcompl
push
jb
hlt
aam
mov
shlb
xchg
pop
mov
aaa
mov
cmc
xchg
lahf
mov
out
cmp
aas
mov
std
xor
ljmp
sbb
cmp
jp
jnp
adc
stos
mov
xor
add
mov
adc
aas
cmpsl
shll
loopne
mov
ja
mov
or
icebp
add
jns
in
add
mov
dec
add
ljmp
fildll
push
fnsave
call
sarl
dec
les
push
inc
lcall
loopne
mov
stc
xchg
ja
sti
sahf
test
stc
mov
push
mov
pop
loop
add
nop
and
dec
ror
pop
push
sub
dec
loop
xor
lds
test
xchg
push
sub
fnstenv
cmp
mov
test
cmp
dec
pop
sub
push
neg
inc
inc
fnstcw
xchg
adc
dec
xchg
mov
popa
or
pop
pushf
inc
popf
jo
imul
sti
nop
dec
mov
mov
cmp
ds
jno
mov
jne
adc
cmp
or
out
xor
push
rorl
cmc
xchg
jp
es
outsb
xchg
lret
test
fs
jge
sbbb
shl
movsb
dec
jle
and
push
pop
push
loope
or
xlat
gs
adc
cmp
repnz
xor
aaa
jno
mov
insb
daa
inc
dec
stos
xor
pop
push
inc
scas
xchg
clc
sbb
rclb
cmp
or
aam
mov
sub
ss
jmp
jl
jo
movsb
add
mov
lret
loop
test
and
fnstsw
push
loopne
hlt
and
fsts
mov
mov
notb
inc
jns
imul
std
dec
stc
mov
in
push
cltd
aad
fnstcw
push
sarb
cmpsl
daa
adc
lret
out
nop
stos
mov
cli
jns
mov
aad
adc
and
lret
inc
out
js
leave
pop
fcmovu
lret
fstpl
icebp
sbb
arpl
testb
jbe
add
sbb
mov
loop
dec
cmp
movsl
pop
arpl
call
push
dec
repnz
int3
pusha
divl
mov
pushf
dec
rcl
mov
mov
lds
jae
fistpl
cmp
aad
fld
es
jmp
cmpsb
loopne
pop
es
sub
xor
inc
xlat
xlat
faddl
scas
test
push
in
ljmp
jle
lret
insb
lods
fidivs
leave
xchg
lods
cmp
fwait
cmp
imul
repnz
outsb
scas
fnstcw
and
test
sub
stc
mov
rol
inc
in
rcrl
loop
mov
ss
xor
mov
out
xorl
push
push
lock
push
arpl
mov
out
jp
jge
xchg
mov
iret
jmp
jno
test
pop
sbb
loop
adc
push
mov
leave
sbb
jb
dec
gs
mov
dec
lret
or
pop
lea
addr16
push
cwtl
mov
xor
add
lea
outsl
pop
xchg
int3
or
jne
xlat
mov
das
add
add
pop
sbb
jp
ss
cmpsl
xor
sub
cmpsb
sub
jg
inc
push
data16
mov
mov
xchg
scas
and
imul
shlb
mov
jbe
notb
inc
cwtl
ss
stos
ffreep
popa
mov
push
jns
rcll
ret
xor
or
xchg
insb
pop
xchg
adcb
in
cmp
add
cmp
push
into
xchg
add
adc
insl
cli
shl
sahf
lret
inc
repz
adc
and
sbb
mov
xchg
or
jae
or
insl
mov
clc
std
adc
push
push
call
sbb
outsb
push
insb
stc
push
scas
push
outsl
dec
neg
dec
mov
push
push
jp
jo
dec
sub
les
lods
and
xchg
push
enter
adc
lret
sub
sbb
adc
je
int
call
mov
dec
mov
push
sbb
punpckldq
aad
sub
out
daa
sub
js
jns
test
rcrb
shrb
pop
daa
mov
cmc
dec
in
mov
add
mov
ss
std
shlb
sti
sub
pop
sbb
outsb
sbb
rcrl
stc
pop
pop
mov
fisubs
ss
fimull
dec
int
dec
out
cmp
mov
mov
in
and
aaa
lret
test
mov
inc
push
movsb
push
test
pop
cld
data16
mov
push
adc
ret
pop
jb
ret
inc
adc
jle
xchg
mov
faddl
dec
mov
inc
mov
xchg
loop
aad
push
push
mov
imul
scas
adc
mov
xor
arpl
mov
lret
in
sti
push
flds
mov
mov
arpl
xor
inc
fsubs
les
ja
pushf
cmp
cmpsl
and
ss
idivb
mov
and
mov
jg
call
pop
repz
or
fstl
mov
jno
inc
mov
mov
out
pop
orl
nop
movsl
mull
popa
mov
ja
mov
cmp
insl
mov
mov
leave
xor
and
movntps
xorb
std
push
push
add
int3
jmp
iret
cmpsb
arpl
jo
adc
imul
lds
mov
shrb
push
rorl
add
repz
xchg
push
xchg
push
movsb
adc
push
mov
push
enter
orl
mov
pop
or
xchg
cli
rcll
jmp
cmp
data16
shll
outsl
add
jne
outsb
test
and
aad
sbb
test
mov
adc
fisubl
lcall
and
ret
cmp
pop
leave
xor
sbbb
dec
nop
pop
or
mov
push
cmp
es
imul
mov
ret
ret
fs
jbe
pop
and
inc
sub
xor
aas
repz
fwait
lcall
pop
mov
pop
jmp
sbb
jne
sub
ss
cmpsl
inc
addr16
lret
in
test
ret
sbb
popl
cs
bnd
fdivr
cwtl
int
outsl
lock
pop
or
adc
das
stc
or
xlat
insb
xchg
rorb
mov
jl
scas
pop
out
adc
push
mov
decl
push
loop
leave
aam
pusha
mov
pop
dec
rorb
sbb
les
mov
rolb
in
into
sbb
arpl
xchg
or
or
sub
adc
dec
push
dec
pop
outsb
test
push
mov
std
ss
xor
xlat
sbb
xchg
rcl
xchg
xor
or
in
mov
push
aad
pop
loope
jp
xchg
iret
xlat
adc
xor
or
mov
icebp
rcrb
mov
sti
and
test
fildll
mov
psubusb
sbb
inc
lods
adc
pop
js
jp
shlb
call
cmp
mov
add
push
ret
push
jl
and
jns
outsb
mov
jl
mov
mov
idivl
daa
mov
insb
mov
jo
sub
pusha
sti
cmp
sbb
mov
stos
movsl
ja
jmp
inc
xchg
or
and
ret
push
inc
les
mov
push
cmp
sarb
jmp
push
xchg
leave
mov
daa
rcl
pop
shrb
mov
nop
pop
dec
idivb
gs
cmp
rdmsr
sbb
lahf
xor
dec
push
out
imul
stc
adc
fs
stc
dec
aaa
jno
rolb
xor
rcrl
sbb
and
leave
jl
add
add
mov
adc
push
push
mov
outsl
add
sbb
xlat
sub
xor
mov
add
int3
mov
sbb
add
jecxz
dec
cmc
imul
movb
and
fdivs
xchg
insl
outsb
pop
mov
inc
push
lret
mov
fiaddl
jbe
je
pop
xchg
inc
int
or
push
mov
xor
or
fadds
push
lahf
frstor
imul
nop
mov
and
mov
inc
aam
fnsave
xchg
scas
push
sbb
cli
inc
call
xchg
inc
lahf
int3
icebp
jns
sarb
mov
test
adc
add
outsb
sbb
xchg
lcall
test
push
stc
fisubs
cwtl
push
mov
movaps
in
ljmp
jmp
dec
in
jae
punpckldq
add
jge
or
jnp,pn
inc
enter
dec
out
lret
icebp
sbb
loope
push
out
out
inc
popa
pop
jnp
jno
dec
cs
lret
lods
and
ja
mov
jae
push
shlb
addl
mov
test
inc
pop
sub
clc
jmp
in
adc
mov
cltd
enter
movsb
outsl
jns
mov
cmp
lcall
push
jne
sti
pop
ljmp
pop
and
adc
into
data16
dec
and
fidivs
js
movsb
jo
push
outsl
sahf
inc
dec
push
sahf
sbb
aas
push
sub
mov
jbe
fidivrs
pop
cmp
xchg
ljmp
inc
pop
fldenv
into
and
mov
aad
loop
pop
sbb
sub
dec
push
sbb
mov
sbb
nop
pop
fdivrs
jmp
ret
pop
jmp
adc
movsw
sbb
jmp
mov
gs
fucomi
push
test
sbb
mov
sbb
ret
mov
insb
mov
lcall
xchg
leave
out
cmp
xchg
xchg
or
inc
inc
pop
in
nop
cmp
push
ret
rolb
and
adc
or
ret
pmulhuw
out
iret
outsb
int3
cs
mov
ss
dec
sahf
out
jns
mov
aam
mulb
pop
std
movsl
imul
sbb
les
dec
xor
rcll
les
adcb
add
cld
pop
inc
aaa
mov
xchg
mov
das
stos
aad
cmp
addl
inc
add
pop
je
popf
mov
jns
push
push
xor
mov
ret
je
pop
jl
in
mov
adc
adc
push
rorl
push
xchg
int
decb
sbb
adc
sub
daa
mov
icebp
add
pop
aaa
sar
dec
cwtl
mov
call
in
mov
xor
sub
dec
stc
pop
dec
pusha
iret
jo
mov
mov
xor
mov
ret
adc
outsl
or
imul
push
enter
mov
jbe
xor
push
or
jbe
fldcw
cmp
mov
out
fnstcw
hlt
imul
enter
sbb
mov
mov
stos
mov
mov
rclb
and
cmpsb
dec
fldt
add
mov
fldcw
aaa
xchg
mov
cld
inc
jno
aaa
push
add
or
repnz
push
sti
cwtl
loope
xor
mov
cmp
call
xor
sbb
insb
mov
stos
dec
enter
lret
imul
jns
add
pop
adc
cmpsl
dec
sbb
repz
mov
mov
fnsave
imul
add
sbbb
int
jbe
adc
int
sub
mov
xor
rcll
sarl
pushf
sub
adc
inc
nop
or
or
xchg
add
push
cs
jns
lock
sub
mov
orl
hlt
or
ret
testb
and
mov
inc
xor
and
adc
add
xchg
xchg
aas
mov
es
push
xor
out
adc
faddl
xor
sbb
or
leave
and
in
ret
sbb
add
push
mov
push
or
xchg
int3
rol
cs
movsl
lahf
mov
xor
add
test
orb
push
cwtl
mov
and
es
movsl
push
addr16
sbb
mov
xchg
movsb
int3
lret
test
mov
cmpsl
xor
ficoml
mov
add
ljmp
xor
lret
pop
mulb
xorl
or
push
cltd
xor
test
cmpsl
cmpsl
xchg
fwait
cmp
in
into
push
test
pop
dec
aam
scas
jae
repnz
jge
add
clc
mulb
out
adc
jne
shrb
xor
xor
mov
sahf
mov
movsl
inc
push
inc
xchg
js
stc
xchg
insl
scas
mov
push
test
sbb
and
add
in
or
ja
pop
jmp
cmp
fwait
ror
or
repz
mov
decl
and
sub
out
sbb
ret
dec
or
pusha
jge
jo
call
jmp
ss
or
les
fisubrs
decb
add
scas
mov
mov
mov
dec
mov
popa
cmpsl
adc
adc
out
out
loop
and
sub
je
addl
sub
pop
enter
out
test
and
stc
pop
je
pop
dec
icebp
popa
bound
jle
pop
popf
mov
sub
repnz
mov
sub
shrl
sub
adc
outsb
rorl
mov
push
pop
xchg
ret
xchg
icebp
mov
lret
and
test
or
sarb
jns
jbe
mov
lahf
or
mov
jge
notb
add
scas
orl
iret
dec
sub
std
stos
mov
inc
cli
add
ljmp
mov
test
fldt
push
fstpl
jp
add
je
inc
sub
loopne
sub
add
ss
shl
clc
sbb
pop
add
xor
mov
les
outsl
add
pop
loop
loop
mov
out
cli
and
data16
enterw
int
cmp
cmp
inc
pop
adc
and
sbb
and
loopne
sbb
insl
xor
stc
push
cmpsb
pop
xor
out
sbb
outsl
jl
dec
repnz
dec
dec
push
mov
in
in
inc
jne
cld
fnstcw
jnp
test
xlat
mov
mov
dec
jl
repz
js
add
inc
sub
adc
sbbb
mov
jno
loopne
iret
imul
xor
pop
test
and
pop
dec
xor
xchg
mov
outsb
sub
adc
jno
fldcw
jnp
dec
jge
mov
outsb
push
adc
adc
inc
aaa
fs
gs
mov
scas
add
pusha
sbb
mov
in
xchg
adc
notb
enter
adc
icebp
pop
push
daa
sahf
or
ljmp
sbb
pop
jno
icebp
rolb
mov
incb
out
insl
pop
cmpsl
push
sarb
adc
mov
xor
ret
pushf
ret
inc
jp
push
lfs
movsl
push
or
mov
push
push
mov
jecxz
dec
adc
int3
loope
test
or
idivl
insl
pushf
addr16
sub
ss
cmp
hlt
mov
aaa
mov
dec
cmpsl
fisubrs
pop
cli
push
rolb
pop
ss
and
xor
pop
pop
pop
inc
out
int3
sbb
inc
push
dec
test
cmp
out
sarl
jo
lahf
mov
ret
fsubl
jle
lahf
sub
xchg
aaa
add
arpl
cmp
jge
sbb
mov
dec
pop
loopne
jno
aam
mov
pusha
ret
pop
mov
add
ret
gs
and
jae
jbe
pop
daa
mov
inc
cmp
arpl
mov
int3
or
loope
enter
shr
pushf
and
and
sbb
mov
push
sbb
popa
incl
sbb
aaa
push
lods
daa
jae
sub
jb
pop
leave
sbb
sarb
pop
cli
mov
cmp
or
and
lahf
fmull
mov
sti
outsl
lret
fistpll
inc
cmc
hlt
xor
loope
pop
add
mov
out
mov
inc
mov
push
xor
jnp
pop
pop
or
sbb
aas
adc
stos
in
repnz
lahf
int3
sbb
dec
jno
adc
mov
aaa
or
inc
xchg
lcall
inc
mov
out
leave
mov
and
stc
stc
inc
cmpsl
add
mov
cmc
imul
adc
adc
xor
cld
arpl
das
jle
popa
jo
pop
sub
test
sub
jo
mov
mov
push
or
sub
fldenv
mov
jb
sub
int3
xor
cld
aam
ja
add
cmp
in
pop
dec
iret
mov
outsl
add
and
mov
and
pop
sub
dec
les
push
fists
std
sbbb
push
cli
jns
cmp
pop
lods
dec
loop
pop
and
sub
mov
or
test
pusha
enter
dec
call
mov
sahf
ss
inc
inc
mov
push
pop
fstpl
inc
imul
imul
adc
fsubp
xchg
iret
icebp
xchg
push
cmc
cmpsb
jbe
xor
cli
outsb
daa
or
mov
iret
mov
mov
and
fstpt
xchg
cmpsl
imul
es
inc
mov
orl
in
inc
xor
sub
jl
je
dec
pop
aad
in
sbb
and
leave
push
xchg
sbb
mov
mov
or
daa
out
fwait
lahf
xor
arpl
test
fcmovnb
jg
int
jb
push
xor
sub
add
decb
jnp
lods
mov
iret
push
test
add
or
pop
shl
daa
push
jo
inc
adc
pop
push
adc
push
pop
hlt
aad
sbb
aas
imul
mov
cmpsl
xchg
sbb
repnz
mov
ljmp
cmc
jmp
xchg
fs
xor
inc
push
arpl
or
clc
xchg
sbb
arpl
shll
imul
pusha
jmp
mov
jno
adc
je
enter
mov
imul
in
sbb
mov
pop
ffreep
cmp
cmpsl
out
cmpsl
imul
cmp
jbe
cltd
andl
call
mov
fwait
dec
inc
jae
inc
fnstenv
hlt
mov
aaa
loopne
cltd
pop
ret
les
xor
mov
jp
shrl
mov
jp
jns
ret
movsl
mov
pop
cmpsb
sub
dec
jb
out
int
out
and
inc
lock
enter
sub
jns
in
das
dec
pop
stos
pushf
dec
xchg
mov
push
lea
mov
mov
dec
fsts
sub
push
mulb
sub
in
adc
sti
jns
and
xor
icebp
adc
aad
loop
cmp
dec
popa
lcall
not
ficoms
scas
xor
shl
pop
aad
sbb
add
dec
jmp
cmc
cmpb
push
daa
xchg
pop
mov
adc
je
cwtl
cmp
roll
xor
call
mov
sbb
dec
dec
add
pop
cmpl
test
out
mov
mov
or
dec
out
fsubrs
in
fcoms
xor
sti
fnstenv
sbb
xor
xor
adc
dec
jb
gs
cmp
xchg
push
lods
nop
sub
adc
adc
push
dec
repz
mov
jb
pop
jbe
mov
negl
sub
add
aam
shl
test
mov
fbstp
xchg
or
mov
and
lret
sub
xchg
dec
dec
or
das
xchg
mov
inc
mov
int
push
lods
sbb
add
sbb
push
sub
std
xchg
mov
decb
xchg
outsl
pop
pop
nop
sbb
jno
inc
sub
fisubl
pushf
bound
sbb
xchg
pop
cwtl
mov
insb
fs
out
adc
jno
push
cmp
addr16
pop
push
and
into
adc
adc
ja
adc
and
and
test
dec
or
aad
pop
addr16
aas
popf
push
push
aam
mov
and
and
addr16
fdivs
or
adc
push
lret
jle
mov
testb
cmp
jle
mov
xchg
jnp
fidivl
mov
popa
std
arpl
xor
fimuls
mov
jns
push
pop
out
or
in
mov
jns
repnz
aad
and
xchg
ds
xchg
xchg
jg
and
or
and
and
iret
push
jae
aad
clc
xchg
jmp
jmp
gs
pushf
sarl
lahf
mov
popa
rcll
bound
push
push
xchg
cli
dec
sub
sbb
pop
jo
add
jmp
xlat
test
scas
cli
or
arpl
outsb
out
jcxz
sbb
popa
in
int
iret
or
iret
sbb
xchg
sub
mov
outsb
aam
xor
stc
cmp
scas
hlt
xor
repz
or
pop
fcmovne
mov
add
les
pop
pop
dec
fs
xchg
out
mov
pop
sub
lods
lods
mov
inc
sub
push
int
mov
repz
sbb
stos
fcoml
push
and
bound
scas
in
out
lahf
lcall
xchg
sub
add
and
lcall
or
sbb
pop
sarl
jle
mov
lahf
loopne
roll
sti
cmp
pop
xor
popaw
pusha
xchg
out
fnstsw
jmp
popf
cwtl
add
pop
in
add
mov
sub
out
sub
loop
mov
xchg
mov
push
imul
popa
pop
cmpsb
je
rolb
inc
jle
jb
dec
sub
subl
xchg
sub
jae
mov
repnz
cs
xchg
xor
int
sbb
rolb
pushf
movsl
test
inc
and
fwait
add
stos
mov
insb
in
cmp
dec
roll
mov
outsl
add
lahf
fstpl
sub
into
stos
sbb
sbb
std
nop
icebp
lds
push
jne
iret
jp
fildl
xor
jecxz
xor
aad
mov
aas
sti
push
push
fs
push
push
adcb
xor
and
mov
lea
add
xor
jmp
popa
lahf
mov
cli
aam
mov
add
cwtl
data16
stos
sti
ss
movsb
pop
ffree
js
sub
adc
mov
scas
sub
sub
inc
imul
sbb
sahf
push
cld
inc
aaa
xor
push
and
push
fbld
jmp
out
aaa
xchg
leave
xlat
xor
inc
je
scas
sub
invd
test
xor
xor
std
lcall
dec
aad
inc
mov
cld
mov
adc
and
mov
push
cmpsl
ret
loope
testb
std
add
adc
xchg
call
push
bnd
leave
pushf
push
pop
in
arpl
shll
mov
sti
adc
test
sub
mov
pusha
xchg
stc
mov
or
mov
mov
inc
mov
ja
outsl
and
mov
js
push
sbb
xor
mov
fucom
test
orb
cmp
popf
insl
inc
mov
in
and
scas
dec
cmp
aam
add
mov
xor
sbb
aam
lea
push
mov
jo
repnz
push
adc
push
add
push
rcr
jp
scas
call
loopne
das
imul
xchg
sarb
daa
mov
mov
lret
sbb
jo
sub
adc
insl
and
jl
iret
call
xchg
jno
or
mov
cld
cmp
aaa
or
nop
cli
mov
js
inc
inc
mov
or
leave
jno
jg
adc
and
repnz
push
leave
sarb
lock
xchg
loop
jge
pop
push
mov
push
xchg
cmp
shl
mov
cmp
inc
pop
mov
inc
cmp
int3
dec
pop
add
das
jle
mov
fwait
mov
pop
scas
mov
pusha
mov
xchg
test
fildll
out
jno
mov
loopne
add
dec
xchg
jmp
mov
rolb
out
cmc
stc
rclb
repnz
mov
and
xor
ljmp
sbb
xchg
cs
in
jl
lods
aas
push
bnd
mov
inc
lret
in
pushf
idivl
fisubl
test
test
test
and
shl
lods
mov
stos
xchg
aas
jg
test
jle
shrb
mov
mov
xchg
fwait
jp
outsl
cmp
xlat
push
fldln2
jecxz
ss
mov
push
adc
inc
inc
push
decb
sar
orl
sub
mov
sbb
mov
and
cwtl
sbb
testb
push
jnp
imul
xchg
adcb
loope
sbbl
into
movsl
jne
test
cmpsb
inc
cmp
jl
loope
mov
dec
into
mov
test
stos
movsb
jnp
inc
cs
inc
jns
in
jmp
xchg
aad
mov
xor
out
jle
xchg
push
pop
pushf
push
cs
data16
clc
or
mov
add
daa
dec
mov
mov
add
and
xlat
pop
mov
out
test
in
fisubl
in
cld
mov
faddp
clc
out
leave
xchg
jno
mov
or
leave
mov
mov
and
push
pop
repnz
add
xor
sub
or
jle
sbb
movsl
es
je
ljmp
std
xor
sti
jno
mov
repz
int
jno
les
add
xchg
mov
scas
mov
loope
inc
sbb
scas
lods
cmp
jb
imul
ljmp
jns
gs
jecxz
dec
pop
xchg
fcmovnu
dec
xor
aas
imul
sti
xchg
lret
add
outsl
leave
aaa
sub
xchg
aam
xchg
pop
inc
into
and
cmpsl
lds
loopew
jg
or
push
cltd
leave
or
fs
iret
push
xor
lahf
ja
pop
pop
lds
ret
jmp
cmpl
lods
adc
ficoms
jecxz
test
insb
vmovupd
dec
les
lods
push
jecxz
ja
scas
dec
sti
sbb
out
jle
push
xor
pop
cli
or
mov
fsubrl
jecxz
sar
xchg
sbb
mov
repz
push
sub
outsb
jbe
insl
mov
mulb
xchg
mov
in
sahf
pop
imul
jle
lods
push
subl
enter
hlt
movsb
mov
mov
loopne
imul
lea
insb
mov
and
ss
jnp
push
mov
aas
pop
or
xor
aaa
mov
je
push
popl
clc
outsl
jge
bound
add
vprotb
pop
mov
fidivl
aam
vmovaps
push
or
adc
fdivrs
sbb
cwtl
mov
into
pop
xor
adc
movsb
fimuls
cmp
into
mulb
in
jg
inc
mov
add
shll
or
loope
push
aad
pop
not
jno
adc
and
fstl
aad
les
mov
dec
inc
mov
daa
loop
ljmp
mov
sti
shlb
dec
data16
adc
and
test
or
sbb
aaa
daa
cmp
daa
lock
dec
xchg
mov
sub
shl
hlt
dec
push
or
mov
adc
push
jnp
ret
and
bound
sbb
loope
inc
mov
push
mov
and
adcb
cmc
mov
clc
mov
add
mov
mov
test
loop
aaa
jno
mov
inc
dec
inc
inc
mov
hlt
inc
push
cltd
add
icebp
fdivl
out
insl
addr16
in
sub
mov
cmp
mov
pop
mov
sub
repnz
inc
mov
mov
clc
shlb
dec
fcoml
out
sub
pop
addb
cmp
mov
mov
std
mov
push
test
xchg
and
cmpsb
out
je
decl
adc
mov
or
jb
push
add
pop
jbe
test
enter
or
call
shrb
jbe
and
jmp
cld
sbb
movsb
inc
lret
jecxz
call
rorl
and
push
pop
sub
mov
out
lret
push
ret
icebp
xchg
sub
cmp
jnp
shrl
pop
push
dec
icebp
add
lock
xchg
scas
or
scas
mov
sub
cmp
push
insl
mov
xchg
cmp
mov
scas
stc
or
mov
inc
loopne
test
mov
cmp
and
adc
shll
mov
xchg
mov
popl
in
nop
xchg
cwtl
and
popf
mov
pop
inc
in
je
inc
fcmovnbe
dec
outsl
adc
mov
inc
cltd
and
adc
sbb
mov
add
lods
xor
es
lods
cld
test
mov
movsb
push
fistpll
popf
xchg
cmp
lcall
cltd
pop
mov
xchg
js
ljmp
add
xor
push
aam
inc
fidivl
lods
mov
sbb
std
leave
add
sbb
dec
das
aad
xchg
sub
mov
lea
sbb
mov
int3
adc
pop
dec
inc
js
mov
lods
push
mov
icebp
pop
pop
push
cld
popa
push
mov
stc
popa
dec
and
movsb
movsl
mov
sbb
lcall
loopne
lea
les
sub
jmp
and
test
mov
cwtl
sbb
adc
out
repz
xchg
scas
dec
jno
mov
add
imul
push
andl
movsb
es
dec
aam
ja
in
gs
cli
adc
adcl
aaa
lahf
xor
ficoml
push
or
jl
into
xor
negl
sub
or
arpl
test
lods
mov
movsb
mov
sub
mov
mov
shl
cmpsb
add
pop
xchg
es
lret
scas
dec
xchg
xor
jb
xor
mov
xchg
outsl
fldenv
mov
xchg
psubq
xchg
in
dec
xchg
mov
lods
pop
pop
addr16
fucomp
mov
lahf
pmaxub
xchg
add
insb
subb
mov
mov
jle
out
jmp
dec
pop
xchg
fistpl
adc
cmp
movsl
int
test
lcall
sub
cs
pop
test
ja
out
mov
and
mov
dec
filds
fidivrs
loope
add
mov
clc
pop
aaa
mov
sbb
scas
outsb
or
sub
add
lods
fisubs
je
cmp
fcmovb
in
jno
stos
test
xorl
jns
into
dec
rcl
xor
mov
test
fcmovne
test
daa
sub
addr16
scas
push
dec
jbe
pop
std
xor
push
je
jmp
mov
cmp
scas
xlat
rcrl
add
nop
adc
xchg
pmullw
adc
jecxz
lret
pop
mov
or
add
and
sbb
pop
ret
popf
xchg
add
cmc
inc
add
mov
loope
cmp
or
mov
mov
ficoms
ds
inc
push
das
shll
add
arpl
popf
enter
mov
pop
and
mov
lods
shr
int
insl
add
fisubl
sti
or
xor
mov
aad
dec
sbb
rclb
in
mov
je
adc
sarl
in
jb
ds
jo
rcrl
push
push
xchg
pop
or
cmp
or
push
jb
and
sbb
fstpt
test
outsb
pop
push
xor
insl
jb
dec
xor
mov
js
xchg
cmpsl
nop
cli
cltd
ret
fildl
imul
push
lcall
mov
es
dec
pop
and
mov
cltd
adc
cmp
pop
bound
testl
dec
jge
adc
sahf
xchg
mov
cmp
enter
or
mov
stc
loop
xor
stc
stos
cmpsl
movsb
xor
outsb
js
arpl
jae
push
cmp
jge
push
pop
mov
sahf
fdivrs
test
inc
ret
pop
adc
dec
and
mov
sbb
push
and
inc
jmp
fwait
pusha
jb
test
adc
loopne
gs
sbb
lods
test
ret
std
ljmp
cmpsb
push
clc
lahf
out
jp
orb
cli
or
pop
mov
sbb
mov
lret
pop
mov
jg
add
inc
sbb
mov
ja
scas
adc
lcall
fdivs
fisubs
and
push
jg
adc
popf
push
xor
mov
jl
xor
js
shlb
das
hlt
jnp
add
mov
push
out
mov
das
xor
out
xchg
fdiv
xchg
cld
jb
inc
cwtl
mov
and
pop
andl
push
daa
sbb
push
stos
push
mov
jns
test
daa
fidivrs
mov
sbb
lods
inc
mov
jle
cmc
add
jmp
enter
in
xor
in
mov
std
inc
lcall
push
or
loope
divb
cmp
loope
jecxz
add
pop
stos
add
sub
sub
imul
inc
inc
aas
js
mov
pop
clc
push
push
pop
mov
imul
inc
lahf
aam
movsl
sub
and
ljmp
xchg
mov
xchg
xchg
aaa
jp
movsl
jb
in
ret
fwait
pop
insb
test
int3
les
loopne
mov
movsl
popa
cmc
jmp
sbb
jno
cmp
sub
sub
ret
lods
mov
sbb
insl
cld
mov
push
loop
in
lods
jge
push
mov
push
repz
idivl
dec
in
jnp
push
jecxz
cwtl
sub
jbe
xchg
push
push
and
xor
push
call
mov
mov
lock
mov
rcrl
sbb
mov
int
pusha
sti
push
adc
pop
dec
push
jbe
sub
out
cmp
adcl
cld
mov
sbb
sarb
mov
ljmp
mov
jo
inc
insl
and
add
out
jecxz
sbb
push
les
es
pop
mov
adc
inc
mov
sahf
iret
sub
push
je
sbb
add
xchg
in
dec
mov
mov
xor
movl
ret
cmc
xor
or
popf
mov
lcall
mov
rclb
xor
push
adc
lods
cmpsl
enter
add
ds
push
lods
cld
and
cmc
dec
loope
dec
xor
into
xor
sub
and
mov
jmp
fwait
and
inc
sahf
in
push
stc
shll
sub
bound
les
add
xchg
popa
xchg
icebp
cltd
aad
mov
mov
gs
inc
or
mov
dec
loope
jle
outsl
bound
pop
rolb
mov
out
lret
stos
jmp
jbe
xchg
idivb
add
std
lret
fisubs
jl
fmuls
pushf
int3
push
addr16
fwait
insl
xchg
and
sti
mov
cmp
sub
les
push
mov
insb
stc
mov
jge
daa
stos
fnstsw
dec
cltd
scas
xchg
lret
popf
mov
in
or
dec
push
lret
stc
sbb
lret
dec
xor
push
int3
push
jecxz
sub
popw
dec
inc
push
nop
outsb
xchg
sub
add
xchg
lahf
in
xchg
inc
jge
and
das
adc
xor
test
rcr
lods
cmp
cmc
cmp
fldl
mov
outsl
xlat
out
mov
aaa
mov
sti
xor
jnp
or
cmc
cltd
leave
and
pushf
inc
sbb
sbb
jle
and
rcll
jmp
lea
lret
popa
es
lcall
into
cli
jmp
mov
cmp
xchg
jle
ret
popa
mov
or
push
pop
mov
ffree
pusha
or
fbld
mov
imul
sbb
or
mov
sarl
inc
repnz
negb
vmovmskps
scas
sti
add
iret
and
inc
loop
mov
mov
mov
mov
xchg
xchg
push
je
sbb
jo
in
dec
lock
lret
les
jb
outsb
inc
hlt
mov
lcall
push
mov
fidivs
or
jl
test
sub
insb
pushf
mov
fistpl
mov
pop
mov
jns
lds
push
xor
pop
enter
je
xor
xchg
and
loop
cwtl
in
adc
mov
jnp
mov
loope
cmp
jnp
les
aaa
hlt
int
mov
xor
call
dec
jnp
fsubs
dec
push
fwait
pop
out
rcrl
mov
dec
pop
mov
or
sub
jnp
fdivl
or
dec
iret
jbe
ret
xor
cs
jbe
cld
jae
ret
lods
sbb
mov
add
pop
imul
and
sub
xor
or
fucomi
shll
bound
sti
xor
incb
lret
adc
pop
cmpsb
xchg
jnp
or
push
sbb
mov
lahf
mov
mov
xor
mov
iret
push
daa
pop
mov
and
mov
mov
jbe
push
iret
mov
cmp
stos
dec
cmp
and
or
or
in
ret
pop
dec
pop
clc
repz
ss
cld
repnz
loopne
mov
push
push
arpl
fidivrl
cmp
fcomi
int3
mov
faddp
dec
mov
aad
iret
ljmp
sbb
add
mov
mov
rcrb
gs
xchg
imul
mov
push
in
imul
iret
loope
jb
lods
cmpsl
xchg
test
and
leave
cld
aad
popf
stos
je
mov
push
stos
xchg
aad
xor
jnp
dec
loopne
mov
sub
push
jb
mov
sbb
or
ja
orb
lea
sarb
aaa
lcall
lret
pop
pop
fcmovnbe
std
jb
stos
std
sub
inc
mov
shrl
push
fsubl
mov
mov
cmp
xor
pop
adc
insb
dec
pop
lock
outsb
jl
in
sbb
loopne
inc
jl
xorps
stc
and
mov
repnz
push
push
js
adc
mov
pusha
jnp
ret
cmc
adcb
std
mov
in
fildl
addr16
ret
cmp
repz
adc
ret
pushf
push
add
lahf
or
lods
xor
adc
lea
xor
jne
or
xlat
xchg
push
testl
mov
push
call
xor
fmull
dec
or
lock
popf
xor
in
unpcklps
cmp
xor
outsb
mov
inc
std
idiv
lret
fstl
lret
cltd
test
jns
fwait
and
dec
adc
sbb
fcmovne
addr16
inc
add
ror
mov
idiv
dec
jae
jnp
out
xchg
ret
fcoml
push
sub
test
xcrypt-cfb
cmpsl
and
lods
test
leave
xchg
js
mov
in
jne
idivb
es
addr16
lods
aam
mov
in
into
fldenv
fs
repnz
cmp
push
je
inc
pop
xor
movsl
loope
mov
sbb
test
aas
push
adc
mov
pop
push
pop
mov
cwtl
scas
xchg
pop
jbe
mov
mov
jo
daa
shrl
subb
inc
fxam
cld
adc
pop
jecxz
iret
push
scas
imul
sbb
sub
aaa
push
adc
lret
push
pop
adc
shlb
loopne
pop
jp
lds
pop
ds
mov
inc
ficoml
popaw
mov
gs
xor
jnp
inc
xchg
into
icebp
cmp
mov
scas
or
roll
pop
scas
imul
fidivrl
cmpsb
shl
jo
cwtl
and
jecxz
shll
mov
jge
sub
wrmsr
ret
dec
pop
add
scas
lods
cmp
pop
adc
out
outsl
aam
xchg
sub
scas
hlt
xor
push
cmc
cmc
data16
pushf
and
sbb
fcom
mov
pop
sbb
and
lret
xor
or
fisubs
nop
jae
mov
add
lret
ljmp
sti
adc
gs
dec
mov
aam
lds
mov
sahf
push
cmp
add
push
pop
notl
jmp
inc
adc
ffree
sbb
cmpsl
or
mov
fs
jae
sbb
rclb
mov
lods
xor
dec
rclb
mov
jge
or
push
xor
or
or
lods
flds
cmpsl
out
adcl
xchg
and
ljmp
cmp
ret
inc
stos
addb
inc
pop
inc
lret
aaa
shlb
daa
in
enter
mov
adc
int
pop
mov
dec
ret
loop
add
ss
cli
pop
das
sub
loope
icebp
push
and
mov
sbb
mov
fsubl
inc
xlat
mov
adc
or
mov
jae
icebp
sti
mov
push
xchg
insb
inc
inc
jp
inc
mov
and
rclb
movl
xlat
leave
in
nop
loopne
cmp
in
sti
sbb
pop
mov
pop
sbb
lcall
aas
cmp
repz
mov
pusha
or
adc
lret
fistpl
mov
jne
lock
daa
pusha
shrb
imul
push
loop
repnz
mov
ret
xchg
dec
enter
iret
daa
jns
or
jb
or
out
jns
shrb
and
fwait
dec
mov
jae
mov
pop
int3
lea
add
test
call
inc
sbb
mov
mov
jecxz
xchg
ret
pushf
cmp
lahf
mov
mov
jge
xchg
ret
idiv
push
or
mov
test
xchg
fidivl
push
xchg
repnz
aaa
xchg
stos
shrl
rcrl
lds
notl
mov
ds
xchg
je
icebp
scas
hlt
or
shlb
shl
jo
clc
mov
and
sahf
repnz
stc
mov
push
jp
mov
adc
movsl
notb
xchg
out
lods
jae
jmp
lcall
int
test
mov
pop
fwait
dec
cltd
xchg
or
test
inc
pop
push
xor
pop
icebp
xchg
jne
mov
jbe
inc
push
fwait
popa
adc
mov
mov
mov
xchg
mov
loope
ret
adc
push
jge
stos
and
scas
lock
mov
xor
dec
push
cmp
aaa
cld
fcoml
ja
jg
pop
mov
and
aam
movsl
loopne
pushf
or
ljmp
pop
adc
lods
xchg
adcb
popa
inc
icebp
insb
jl
aaa
xchg
fildll
fldcw
jmp
sbb
ret
hlt
lds
xchg
jg
add
push
lock
movb
dec
mov
xchg
jno
testl
push
cmpb
shll
jp
call
test
xchg
mov
mov
es
add
scas
mov
inc
lcall
int
mov
mov
test
sbbl
stos
loopne
sbb
push
sub
pop
add
xor
adc
inc
push
sub
inc
mov
popa
jne
xchg
inc
aad
mov
dec
fdivr
push
or
std
inc
push
xchg
lea
movsl
jns
sub
ret
pop
pop
call
xchg
adc
es
pusha
jecxz
pop
sub
mov
shrb
add
ja
push
ljmp
cld
sub
notl
cltd
jmp
lret
call
aam
jne
je
daa
rcll
sbb
cmc
sbb
jle
add
lret
stos
dec
xor
imul
popf
gs
hlt
repnz
mov
cli
testb
popf
popf
ftst
dec
dec
dec
sub
lret
shrb
icebp
sbbb
mov
es
aad
pop
and
lahf
or
outsb
push
add
arpl
stc
mov
add
and
je
pushf
icebp
out
cmpl
dec
adc
add
aaa
and
ret
jmp
sbb
adc
movsl
cld
xchg
xchg
imul
push
dec
mov
xchg
cmp
mov
jo
cmpsl
mov
ret
fwait
rcl
cs
or
or
pop
jnp
imul
sub
pushf
in
sbb
lret
xor
pop
xor
in
push
cmc
xchg
mov
lret
stos
push
int3
xorl
leave
xor
bound
movsb
mov
and
dec
fwait
lea
push
scas
fdivr
mov
push
xchg
sbb
pop
lcall
jno
inc
jno
loopne
mov
jo
flds
sub
adc
jo
ljmp
fs
push
stc
cwtl
lret
icebp
xchg
bound
test
jnp
mov
adc
push
aas
ret
lock
lea
fsubr
lea
push
loop
aas
repnz
hlt
outsl
mul
cmp
pop
in
add
inc
mov
daa
leave
scas
mov
xor
xchg
xorb
cmp
lret
xchg
jb
push
cmpb
xor
stos
shll
push
pop
stos
lea
bound
shll
mov
pop
leave
ret
shr
inc
cmp
test
imul
mov
sbb
movsl
dec
push
popf
sub
arpl
outsb
out
push
adc
mov
in
lea
jne
outsb
push
add
mov
jge
out
js
sbb
data16
add
js
out
sub
loopne
pop
inc
push
std
and
nop
leave
insl
pop
aaa
xchg
cmpsb
or
pop
pop
push
adc
mov
call
mov
cwtl
pop
pop
sub
hlt
roll
int
sub
jnp
fmulp
xchg
adc
leave
inc
loopne
jp
lds
js
in
loop
testl
lods
ljmp
popf
jae
sbb
sub
fmuls
scas
xlat
jecxz
mov
fidivrs
adc
ds
dec
dec
aas
lret
sbb
or
daa
or
and
xor
inc
lahf
sbb
rorb
sbb
lret
sbb
lea
pop
lahf
imul
xor
fistl
inc
aad
fcompl
or
mov
aad
loope
push
add
shr
sahf
dec
jb
mov
repz
xor
ficoms
movsl
lods
pop
pop
lods
mov
negl
inc
ss
cli
sub
outsl
sub
add
test
or
jns
addr16
loope
sbb
lea
or
ja
dec
scas
inc
scas
sbb
test
pusha
clc
ret
lahf
ja
js
popa
push
or
sbb
mov
xchg
lcall
out
in
insb
incl
and
pop
test
mov
xlat
jecxz
cmp
in
std
or
in
in
mov
loop
pop
mov
sbb
in
adc
outsl
jecxz
xchg
stos
data16
loop
add
in
xor
std
imul
cmp
cwtl
xchg
movsl
cltd
push
sub
and
jmp
dec
flds
pop
or
push
rcr
inc
push
mov
lahf
xor
inc
mov
jbe
cmp
dec
std
je
cld
pop
cltd
shrb
sub
mov
test
mov
mov
pushf
or
pop
in
pop
outsl
scas
cmp
pop
pop
inc
mov
cmp
add
mov
push
push
jge
inc
xor
sub
or
aaa
xchg
cmp
xchg
jne
push
xchg
shrl
mov
mov
stos
xchg
push
jne
cmp
jbe
push
loopne
pop
sbb
cld
jo
es
addr16
jg
jnp
ss
ret
inc
scas
dec
outsl
mov
or
dec
cmp
xor
cmpsb
out
add
dec
mov
pop
aad
jbe
jno
cltd
scas
mull
fdivrp
repz
mov
aaa
aad
pusha
or
and
mov
dec
mov
add
mov
inc
dec
mov
lcall
sti
shrl
mov
sti
repnz
cli
ljmp
or
les
add
inc
cwtl
outsb
sub
cld
inc
pop
shl
push
inc
jnp
scas
sub
call
pop
inc
sbb
je
push
sbb
push
pusha
outsl
xor
xor
addr16
push
dec
outsb
test
lods
lret
cmp
adc
lods
popa
and
mov
sub
hlt
in
mov
loope
popa
loop
popa
stos
jo
add
lcall
xchg
jle
pop
fwait
pop
jns
xor
sbb
aad
outsl
cmp
test
daa
cmc
std
lods
aaa
js
xor
dec
push
xchg
and
jg
mov
and
xor
push
xchg
loope
rorl
fisubrs
into
leave
push
cld
insb
xor
idiv
jge
test
sbb
push
pop
pop
insl
mov
aas
repnz
gs
data16
cmp
jne
cld
insb
jne
fildl
mov
xor
mov
negl
push
cmpsb
mov
shrb
cwtl
and
fdivr
pop
mov
mov
push
fdivrs
cmp
xchg
cmpsl
sub
lret
bound
neg
or
adc
mov
mov
cltd
jl
or
or
or
push
jmp
fmull
imul
sbb
outsl
loopne
sbb
xor
les
xor
lods
cmpsl
lahf
add
outsb
or
nop
cwtl
aas
push
notb
lea
scas
inc
or
cmp
xchg
or
incb
stos
xchg
popa
sbb
das
pushf
cmpsb
inc
cmp
pop
jns
pop
adc
adc
pop
fwait
sbb
fstl
mov
stos
pop
adc
add
in
hlt
std
xor
pcmpgtw
xor
xchg
ljmp
cli
dec
imul
push
out
notb
jo
add
inc
out
and
cmp
into
mov
shr
inc
loopne
cwtl
data16
pop
add
loop
inc
inc
cmp
in
outsb
jno
mov
gs
loop
fistl
pushf
cmpsb
cmp
mov
hlt
cmp
pop
or
imul
rorl
adc
jmp
mov
cmp
fcmovbe
imul
pusha
adc
sahf
std
jge
shl
adc
std
std
fs
lret
in
jns
or
aas
icebp
hlt
and
pop
sbb
ds
xlat
push
mov
stos
mov
call
inc
sbb
icebp
push
dec
fildl
insl
xchg
cmc
sbb
push
int
in
xchg
inc
aaa
or
push
pop
adc
push
mov
insl
mov
loope
and
xor
aaa
and
repz
add
dec
sub
hlt
jno
mov
push
pop
add
dec
mov
and
mov
add
pop
arpl
pop
sbb
out
lret
psllq
cmp
repz
jmp
push
dec
loope
aas
gs
icebp
andl
lret
fbstp
add
pop
mov
mov
pop
sbb
adc
mov
sbb
jecxz
lcall
cwtl
test
adc
mov
dec
testl
loopne
mov
sub
lcall
loope
cmp
test
jmp
xchg
aaa
pop
xchg
lea
jg
jge
je
push
insb
sahf
nop
addr16
mov
test
add
jle
in
repnz
jne
repz
das
bswap
pop
dec
jecxz
or
out
mov
and
aam
push
call
pusha
xor
dec
or
mov
cmp
outsb
das
push
imul
out
rolb
cmpsb
repz
jno
sub
push
call
in
mov
aad
jns
lcall
push
lcall
add
loope
divb
popf
in
pusha
shll
pause
in
sarl
neg
aam
xchg
test
cmp
xchg
and
fld
jno
cld
sbb
push
adc
inc
inc
and
in
loop
xchg
fs
and
xor
rcrb
xchg
mov
popf
addr16
push
aaa
add
scas
or
je
call
cltd
orb
dec
popf
adc
fsub
inc
jo
jle
inc
setae
add
dec
ds
stos
fdivl
je
mov
jmp
lods
sbb
xor
jns
and
scas
outsb
pop
push
pop
or
xor
adc
stos
pop
mov
out
sub
cmp
add
mov
sbb
adc
fistl
sub
dec
and
mov
aad
cwtl
and
jg
adc
xchg
je
in
cmp
fsubrl
sub
in
icebp
and
push
or
cmp
pop
int
inc
mov
jge
mov
test
in
aas
out
jnp
mov
jmp
push
mov
jg
or
pop
rcr
repnz
notl
mov
add
dec
data16
out
xchg
pop
or
xchg
std
fwait
xor
mov
pop
je
in
add
aaa
fldt
dec
es
shrl
stc
ss
cvtpi2ps
or
xchg
mov
mov
fildl
cmp
and
testl
pusha
mov
int
stc
xor
ljmp
dec
cli
stos
out
sarl
in
or
and
lods
fs
test
lret
faddl
aaa
pop
dec
into
out
inc
repnz
push
mov
xchg
test
addr16
cld
xlat
in
push
push
pop
xorb
icebp
movl
or
mov
push
xor
ficompl
lock
adc
pusha
in
add
mov
pop
mov
add
cmp
lcall
test
pop
mov
cmp
inc
test
mov
fcoml
adc
add
xchg
jecxz
fmul
pop
xchg
scas
jns
jge
dec
es
int3
das
lods
mov
stos
ljmp
push
cmc
dec
data16
jp
fs
sbb
pop
adc
jne
outsl
xchg
aad
iret
orb
call
fstl
push
adc
add
cmp
or
lcall
scas
xor
inc
dec
arpl
pop
mov
lret
test
mov
mov
test
mov
subb
cmpb
in
inc
xchg
mov
emms
lret
xchg
sub
sbb
inc
push
push
xchg
popf
xchg
mov
lahf
jno
mov
pop
jge
jp
cmpb
stos
loop
xchg
cwtl
les
leave
insl
mov
in
jnp
loopne
pop
and
mov
ljmp
popa
je
loopnew
xchg
adc
dec
outsl
sub
push
clc
hlt
adc
mov
insl
mov
std
loope
divl
jb
imul
xlat
inc
hlt
push
fisttps
xchg
in
mov
cs
ds
fisubl
jp
fucom
test
sbb
jb
fisttpll
cmp
mov
jbe
cmp
cwtl
test
les
pop
pop
jo
aad
aas
jo
sub
inc
mov
aas
mov
xchg
xor
imul
outsb
inc
ss
out
adc
rcl
push
fldl
sub
dec
negl
fwait
push
jae
mov
mov
jnp
push
test
pop
outsb
lods
lea
jb
cmc
outsb
or
bound
ret
lret
cmp
inc
xchg
sub
mov
rolb
sub
jnp
sub
inc
mov
or
imul
fldl
inc
aam
jne
pop
pop
test
sbb
scas
mov
mov
in
outsb
test
outsl
sub
das
mov
and
push
push
mov
getsec
jo
scas
dec
cmp
sarb
int
sbb
dec
out
xchg
pushf
jne
sub
mov
mov
pop
ud1
aad
add
pop
or
pusha
or
xlat
dec
xchg
scas
sbb
lods
das
mov
jno
xchg
fucomp
ja
cs
je
sub
adc
int3
sub
ds
push
and
push
pop
inc
mov
test
test
jo
push
enter
test
and
aad
jae
and
xchg
sub
mov
add
mov
pop
shll
mov
lock
notb
andl
shlb
fstl
sub
pop
add
mov
sbb
lcall
ficompl
out
imul
jp
dec
int3
push
int3
fs
mov
cld
in
outsl
shrb
jmp
lret
push
dec
into
dec
mov
pusha
andb
or
lahf
mov
jmp
dec
or
jecxz
sub
xchg
add
and
pop
sub
mov
pop
xor
push
hlt
cmp
daa
lods
dec
xchg
xor
mov
daa
mov
inc
ret
shll
mov
mov
lret
stos
out
lret
and
xor
mov
dec
popa
daa
push
in
out
jle
or
mov
or
mov
and
inc
mov
dec
cwtl
add
mov
mov
sbb
int3
leave
ret
pop
sub
outsb
push
pop
adc
push
sbb
xchg
pop
xchg
int
scas
fadd
fnstenv
sub
cli
jmp
pop
imulb
lods
fwait
insl
sbb
push
mov
push
cmp
sub
aam
mov
sbb
lcall
ljmp
outsl
mov
ja
sar
cmovns
inc
jnp
dec
lods
inc
add
out
mov
jne
and
test
int3
jo
test
popa
xlat
es
xchg
std
fimuls
mov
sub
mov
xor
lahf
bound
test
inc
xor
inc
arpl
mov
ss
pop
aad
or
out
sub
test
mov
mov
add
and
int3
cli
xlat
push
push
or
stos
dec
push
pop
dec
jp
ljmp
cs
mov
push
enter
jo
ret
pop
push
stos
inc
cmpsl
jnp
jp
jae
xchg
mov
out
in
stos
cmp
dec
and
lret
xchg
xchg
push
nop
dec
gs
sbb
imul
adc
les
inc
jns
cmp
and
movsl
sbb
out
ljmp
and
cld
dec
sbb
pop
in
push
adc
push
pusha
in
cmc
add
imul
insb
mov
ret
mov
mov
pusha
xchg
or
or
jbe
push
sub
in
push
xchg
enter
loope
push
scas
test
mov
sub
or
mov
pusha
pop
loope
lds
or
sub
daa
pop
mov
sub
sub
or
data16
pop
sbb
pop
cmc
sbb
xor
and
faddl
sbb
push
xchg
das
int3
clc
or
divb
out
mov
in
out
push
push
loopne
loop
mov
sahf
mov
pop
mov
imul
jmp
das
ss
test
ljmp
jle
imul
jb
jb
adc
dec
cmpsl
inc
mov
inc
ds
lea
pop
rcrb
cs
loopne
and
lods
in
mov
test
cmpb
dec
cli
adc
sub
push
adc
xor
mov
das
add
not
stos
mov
add
add
loope
out
mov
or
lods
rcrb
les
mov
jp
mov
mov
fsubs
mov
jecxz
cmc
jmp
cmp
push
or
std
push
int3
pop
repz
cltd
sbb
dec
xchg
in
pop
inc
or
lahf
gs
in
pop
jg
cmpsb
mov
das
fs
fimuls
aas
jns
push
mov
ds
sbb
push
push
dec
aas
sub
sub
mov
push
cmp
add
dec
or
dec
or
rcll
and
test
mov
mov
fimull
mov
jo
daa
ret
xchg
cmp
and
jnp
fcmove
mov
lahf
mov
mov
mov
stos
test
pop
cmp
leave
nop
rclb
shr
pushf
ret
ja
test
mov
xchg
xchg
filds
and
leave
xchg
or
pop
pushf
enter
push
insl
mov
popa
insb
call
add
imul
lret
into
pop
xchg
jns
cltd
push
inc
inc
or
mov
pop
fisubrs
lret
inc
mov
daa
dec
cmp
out
aad
cwtl
xchg
xchg
cli
movb
or
fists
insl
ljmp
or
jp
xor
movsl
or
sub
pop
int
aaa
add
xor
mov
push
mov
stos
fdivrp
shrl
add
inc
dec
pop
outsb
cmpsl
jns
out
xor
add
add
or
adc
daa
xchg
fmulp
push
cs
fs
sub
test
sbb
fsubrl
jb
inc
fnstsw
lahf
cmpsl
sbb
mov
addr16
outsb
sti
sbb
push
cs
movsb
dec
scas
xchg
xor
lds
inc
aaa
sbbl
ds
outsb
call
test
and
arpl
scas
and
pop
daa
xor
sub
hlt
mov
loopne
mov
sub
push
lret
inc
xor
loopne
push
mov
lahf
fwait
push
add
test
les
decb
and
inc
sbb
xchg
imul
cmp
jg
jns
and
or
cmp
mov
ret
call
ja
sbb
mov
das
imul
mov
and
shr
pop
xlat
in
call
lods
ret
xor
mov
roll
jo
add
xor
mov
inc
lea
clc
iret
and
xchg
ljmp
push
popa
mov
insl
imul
sbb
lea
test
das
arpl
jo
push
xor
ja
mov
push
jns
loopne
les
push
sub
push
incl
fcomps
and
test
cli
sub
jnp
iret
and
pop
add
rorl
xchg
xchg
aam
lgs
push
xchg
xlat
adc
movsl
sub
test
rcll
fdivl
je
mov
push
pop
jl
subb
cmpsb
jg
mov
xchg
inc
jp
jnp
dec
push
adc
sub
inc
outsl
out
fmulp
adc
or
lcall
push
sbbl
jmp
inc
ljmp
and
push
sarb
mov
aad
test
pop
scas
loope
clc
aaa
sub
roll
ss
into
fwait
pushf
fdivl
in
mov
lock
pop
cs
lahf
shrb
sahf
les
xor
mov
fisubs
dec
mov
mov
popf
rorl
cld
cs
dec
rcrl
jl
cmp
push
into
push
dec
xchg
mov
jge
out
dec
cli
mov
or
add
inc
out
jns
lea
lea
cmp
mov
pop
xor
sub
mov
cmp
jp
aad
cs
mov
out
sub
inc
adc
cld
xchg
pop
fsubrl
bound
rcl
inc
mov
or
inc
push
sti
repz
adc
inc
mov
lods
ds
xor
into
mov
movsb
add
ss
sub
loop
add
lcall
sahf
dec
repnz
add
test
mov
xchg
lds
jl
pop
push
pop
lds
xchg
test
adcb
xchg
xchg
gs
insb
push
sub
decl
mov
push
loopne
xchg
mov
pop
jns
in
mov
cmp
or
xchg
cwtl
fcmove
pop
sub
int
in
mov
xchg
sub
mov
inc
push
pop
andb
xchg
sti
addr16
lahf
insl
rorb
add
rorl
sub
outsl
jp
mov
or
scas
shlb
or
das
or
dec
xor
nop
insl
mov
xchg
ficoml
mov
fiaddl
jo
inc
outsl
pop
add
cmp
and
outsb
lods
xchg
or
ss
test
iret
jg
fisttpll
mov
ret
adc
mov
mulps
fimull
daa
cld
sbb
jl
xor
mov
ljmp
xchg
arpl
cmp
xchg
cwtl
cmp
das
sahf
adc
inc
iret
test
push
je
pop
mov
inc
xchg
push
aad
mov
add
jle
xor
out
sbb
mov
rcr
insl
push
out
outsl
mov
pusha
xchg
jp
stos
pop
in
mov
int3
aam
and
je
shrb
ficoml
lret
mov
mov
or
daa
pop
cmp
imul
and
adc
loop
aad
push
lea
inc
xlat
sbb
enter
cmc
sub
into
shlb
sub
inc
sub
std
adc
sub
push
ljmp
add
arpl
mov
cmc
xchg
sub
inc
cs
mov
popa
and
fadds
mov
in
add
vpackuswb
pop
sub
mov
flds
repnz
out
xchg
jle
movl
cmpsb
roll
movsb
sahf
sbb
repz
pop
mov
jbe
cmp
lret
out
push
or
xor
pop
cmp
xor
sbb
xchg
xor
in
dec
mov
cmp
dec
mulb
lahf
mov
andl
loopne
lahf
je
std
cmp
lea
dec
mov
pop
clc
push
inc
dec
xchg
mov
ret
mov
dec
push
pushf
push
xchg
ffree
mov
inc
and
cltd
dec
addr16
in
jmp
jb
mov
inc
xorb
pop
and
aas
cltd
lods
xor
xor
or
xchg
sbb
popf
stos
push
outsb
mov
sbb
or
popf
pop
ljmp
arpl
pop
add
xchg
arpl
pop
lds
lods
pushf
incl
mov
inc
xor
add
addr16
sub
dec
xchg
cmc
mov
and
sbb
sub
mov
loope
test
addr16
mov
shlb
sub
mov
ret
push
fwait
xor
imul
iret
sub
aas
in
imul
pushl
mov
notl
cmpsl
jmp
stc
xor
lock
enter
loopne
clc
adc
add
iret
mov
loopne
inc
mov
mov
sbb
and
xchg
sahf
out
setl
xor
fwait
aad
mov
sbb
adc
push
sbb
jne
shll
inc
jb
sbb
cli
cli
jmp
push
mov
push
jge
addl
pop
push
push
or
lds
jle
xor
and
subl
in
add
aas
and
pop
jmp
lods
sarl
push
div
push
les
cmpsb
push
std
inc
rorb
jo
out
inc
out
push
ljmp
mov
into
fimuls
cmp
jmp
roll
pop
xchg
sub
jb
cmp
js
loope
or
ljmp
sub
pop
jbe
mov
or
add
and
mov
lahf
sbb
icebp
ss
mov
sub
and
xchg
xchg
mov
and
jae
mov
dec
popa
je
outsl
movsb
dec
jb,pt
jnp
pop
add
lret
fimuls
push
mov
lock
lahf
mov
jnp
dec
in
sub
roll
sarb
inc
popf
shrl
or
lea
and
imul
sarb
cmc
fcomi
iret
test
mov
fstp
inc
mov
push
mov
imul
pop
push
call
test
xor
mov
cli
fistps
loope
shll
imul
mov
ror
jp
sub
out
popa
in
repz
sub
push
pusha
push
mov
arpl
or
movsl
fldenv
inc
aam
xchg
repnz
push
lods
mov
cmc
add
sub
sub
xlat
dec
scas
push
push
xchg
add
nop
lret
push
jg
sti
and
cs
cmp
scas
andb
sbb
mov
and
outsb
and
pop
gs
add
and
inc
je
mov
rcrl
aas
rcll
xchg
aam
mov
pop
lcall
jmp
ljmp
mov
xchg
push
push
jo
mov
fistl
enter
xor
loop
push
mov
fiadds
in
mov
jbe
jp
pop
je
pop
int
cmpsl
or
push
sahf
aam
lahf
sub
repnz
cmp
push
blci
mov
daa
inc
xchg
or
mov
or
mov
and
rcr
xchg
pop
les
sub
add
pop
xchg
mov
sub
jg
inc
jne
adc
scas
out
jae
mov
lret
lods
mov
inc
lds
xor
fdivrl
andb
mov
sbb
es
cli
sub
and
dec
movsb
cmp
lods
roll
jns
lret
fs
mov
aad
dec
dec
insl
stc
cmpb
sub
sbb
ljmp
jae
data16
pop
xor
or
push
or
inc
or
add
mov
inc
mov
in
or
add
aad
mov
sub
add
out
xor
cs
imul
dec
xor
push
adc
inc
inc
pop
pop
enter
pop
mov
dec
mov
or
xchg
mov
pop
jns
or
in
leave
add
je
and
mov
mov
leave
push
xchg
fsubl
lcall
es
cli
adc
out
pop
frstor
jge
sbb
ss
dec
insb
test
push
xchg
test
mov
sti
daa
xchg
dec
and
push
and
repnz
lret
mov
mov
repnz
loop
pop
cs
mov
mov
mov
das
mov
pushaw
xor
insb
cmp
xchg
cmp
fidivrs
je
or
ret
sti
jp
outsl
in
mov
addr16
adc
jns
and
outsb
jmp
cmpsb
insb
sub
xchg
test
add
adc
mov
cmpl
or
inc
adc
fwait
adc
xlat
decb
imul
push
repz
mov
pop
aaa
mov
xor
dec
mov
push
cs
inc
sarl
mov
inc
shl
rorb
arpl
data16
push
pop
ss
sbb
or
or
rcl
mov
pop
jp
aas
jmp
jge
je
dec
or
rclb
decl
mov
pushf
jecxz
push
fnstenv
setp
and
cmc
and
fildll
daa
add
xchg
dec
adc
lahf
xchg
pop
mov
fnstsw
fstl
repz
lret
nop
xor
dec
test
insl
or
push
in
mov
inc
test
cmc
dec
mov
xlat
fimuls
sub
nop
push
cmp
bound
or
sub
popf
aad
xor
inc
inc
sbb
dec
mov
jnp
dec
bt
push
ja
sub
shrl
sarb
in
jae
cmp
cs
ss
sub
xchg
fwait
das
or
add
lock
cwtl
out
js
out
stos
cmpsl
fidivl
push
stos
pop
das
idivl
fstpl
dec
or
repz
clc
lahf
stc
sub
pop
sub
scas
adc
sbb
mov
cs
jg
aam
jecxz
call
aad
pushf
cmp
xor
daa
cltd
mov
outsl
adc
out
std
sbb
cmpb
rorb
inc
sub
xchg
cwtl
loope
dec
dec
jge
inc
jl
pop
aas
nop
mov
rclb
inc
clc
imulb
repnz
sub
push
add
mov
out
ss
lods
add
mov
add
cltd
jno
xorb
rolb
loope
icebp
sub
bound
add
pop
push
push
add
scas
inc
jg
gs
cmp
mov
dec
push
adc
nop
adc
das
xor
mov
call
jae
dec
into
pop
cmc
push
mov
jno
mov
call
cmp
insb
std
notl
dec
xchg
movsb
jns
jl
xor
push
inc
jge
pop
pusha
fucom
call
push
mov
sarl
fadds
mov
mov
jnp
sbb
add
sbbb
aas
es
cmp
lea
addl
lret
and
mov
ret
dec
in
lahf
shr
xchg
xchg
inc
mov
mov
pop
scas
shrb
outsb
xor
mov
add
fstpl
movsl
repnz
scas
js
and
inc
cs
mov
call
mov
stos
lahf
pop
pop
les
mov
sbb
mov
pop
lret
or
out
lret
mov
push
test
pop
test
mov
out
jno
ret
lds
jne
pop
repnz
jecxz
push
adc
add
push
ljmp
leave
and
pop
xor
mov
enter
mov
iret
and
cld
test
pop
dec
dec
stc
push
lods
pop
or
test
xchg
sbb
loopne
sbb
jmp
xor
rcl
pop
std
mov
xor
rcll
dec
xor
dec
mov
lds
push
xchg
mov
sbb
xor
pushf
cmp
mov
in
aas
loopne
ds
fsubl
orl
xchg
movsb
mov
push
loope
in
lods
push
scas
jne
icebp
or
dec
xchg
fxam
js
jg
dec
mov
es
lahf
in
stc
stos
push
aaa
lods
sub
and
dec
jp
lea
hlt
cmp
outsl
jmp
mov
adc
sub
fdivr
sbb
adc
pop
mov
mov
push
movsl
loopne
mov
cmpsb
popa
sbb
mov
cmp
add
jnp
hlt
data16
mov
pop
not
jge
xor
xchg
mov
ret
push
inc
sahf
jge
test
clc
xor
xchg
in
inc
scas
add
xor
dec
or
pop
jno
or
loope
loopne
push
cmp
and
xchg
repnz
imul
pop
sbb
pop
pushf
stc
data16
add
mov
add
add
cld
cmp
push
cmp
fstpl
fists
sbb
shrl
data16
arpl
mov
repz
xor
cmpb
adc
nop
mov
or
add
fdivs
inc
xlat
pop
das
popf
mov
cmp
ds
dec
add
adc
dec
lea
mov
js
movsl
push
jge
mov
cmp
int
outsl
xor
movsl
addb
out
jae
cmovb
and
cltd
scas
fbstp
pop
xchg
add
loopne
push
cmp
loop
dec
push
repz
lods
cmp
inc
scas
mov
dec
jle
cmp
stos
mov
sub
cmpb
js
fsubrs
dec
push
mov
in
adc
dec
mov
fisubrl
pusha
cmp
dec
popf
ja
or
fidivs
ljmp
loope
hlt
push
mov
mov
and
or
xor
sbb
sbb
test
and
fyl2x
aas
pop
mov
ret
js
push
mov
clc
xchg
leave
test
sti
sbb
cltd
add
and
cmp
out
xchg
cwtl
in
mov
mov
sbb
mov
lock
xchg
sub
push
jecxz
adc
pop
enter
test
cltd
dec
rorl
arpl
or
or
jb
jmp
or
fmull
test
fldt
lods
clc
jle
mov
mov
pop
xor
lret
shlb
in
loope
ret
xor
ret
aas
inc
ljmp
fwait
popf
rcll
faddl
mov
cmpsl
or
movl
add
mov
lea
mov
xchg
pop
int3
popa
or
mov
mov
fsts
mov
ret
push
scas
pop
and
sbb
mov
dec
iret
ror
dec
cmpsl
xor
adc
mov
je
aam
adc
enter
sbb
inc
aas
mov
aas
out
xor
mov
stos
dec
pop
jg
out
sbb
out
imulb
frstor
xchg
mov
aam
cmp
sub
fyl2xp1
xchg
in
out
sbb
sarl
sbb
xchg
jnp
fistpl
les
les
cwtl
aas
sub
je
gs
add
add
push
enter
jp
pop
xchg
insb
in
or
mov
lods
sbb
std
lcall
fdivrl
xchg
mov
lea
jp
roll
test
call
insl
jecxz
xchg
mov
movsl
lahf
or
rorl
rorb
and
inc
or
jecxz
gs
mov
jmp
sti
mov
lods
aas
scas
jnp
mov
clc
inc
push
pop
les
dec
ljmp
addr16
mov
ds
xchg
insl
push
test
stos
and
and
sub
xchg
fcomip
cwtl
lods
push
or
das
push
lds
xchg
add
jne
and
push
jo
cmpsb
lret
cwtl
xor
imul
push
mov
adc
lock
stos
mov
enter
adc
push
inc
xchg
shrl
loop
push
stc
and
jg
push
stos
das
dec
inc
mulb
cli
sub
and
mov
dec
cmp
xchg
cmp
mov
cmp
aam
cmp
jae
xchg
or
lods
sub
movsl
adc
add
or
add
scas
icebp
xor
imul
lods
cmp
and
sbb
iret
pushf
and
bound
fwait
sahf
test
jnp
fildll
test
out
popf
push
push
loope
push
jno
shlb
add
or
jmp
add
push
push
inc
lods
mov
popf
lds
movsl
add
lcall
lret
ret
dec
adc
decb
in
mov
negl
adc
fincstp
dec
xchg
outsl
icebp
jecxz
lahf
jge
or
mov
ficomps
cmpb
dec
add
hlt
arpl
stc
xor
loope
out
xchg
pop
pmulhw
lds
adc
pop
mov
cmp
or
push
gs
add
and
or
jno
inc
andb
ja
scas
mov
test
into
mov
adc
jbe
ja
sub
aas
mov
push
dec
sbb
xchg
fldenv
les
sbbb
dec
rcrb
jge
pop
lods
hlt
cmp
sbb
add
pop
popf
gs
sti
movsl
push
rorl
inc
xorl
js
cmp
fldl
scas
icebp
stos
aas
or
mov
xor
movsb
leave
gs
mov
xlat
and
std
insb
jo
rclb
sub
push
call
pop
lock
shrl
push
test
xchg
mov
cwtl
xchg
test
movsb
pop
xor
int
jnp
dec
pop
adc
sub
addr16
stc
add
dec
add
xchg
and
sub
adc
or
jle
inc
repz
mov
push
lret
out
lods
lcall
push
or
std
push
sub
loopne
lods
mov
mov
dec
adcl
pop
js
lds
add
mov
sub
scas
das
test
sub
ret
dec
je
sbb
out
gs
sarl
push
pop
stos
lahf
jl
rcrb
cmpsb
inc
repnz
mov
pop
pop
leave
push
aas
sti
incb
dec
mov
mov
inc
jge
or
movsl
stc
insb
sbb
mov
cld
bound
xor
xor
sbb
pop
std
inc
out
sub
mov
ds
test
movsl
mov
mov
in
mov
ss
cmp
out
nop
jl
outsl
outsb
dec
fisubs
pop
mov
inc
sub
leave
enter
mov
sub
adc
outsb
push
hlt
out
shlb
mov
test
mov
push
out
paddd
mov
xor
push
stc
inc
jecxz
cmc
lods
inc
cmpsb
addr16
shlb
bound
js
lahf
leave
shl
push
loopne
sub
xchg
icebp
adc
push
lret
lcall
arpl
and
adc
xchg
dec
leave
jmp
cmc
mov
and
out
dec
xchg
das
cs
addb
insl
out
and
or
test
adc
sbb
mov
pop
and
lea
sbb
icebp
push
dec
mull
mov
lahf
insb
inc
jg
sub
insb
popa
jb
sub
push
mov
shl
std
jbe
out
out
aaa
cmp
shl
jnp
mov
cmp
cwtl
int
pop
jl
lret
cwtl
inc
das
sbb
jae
notl
dec
lock
fstpt
mov
inc
mov
pop
mov
pop
mov
jmp
add
jge
mov
mov
lahf
jmp
pop
cmp
adc
inc
in
addr16
je
out
pop
mov
mov
sbb
push
mov
mov
xchg
cmp
mov
and
add
pusha
xchg
and
gs
icebp
mul
xchg
xchg
je
xor
sub
daa
jmp
mov
mov
mov
dec
psubw
rorl
and
mov
daa
adc
push
cmp
dec
pop
push
lods
movsb
sarl
dec
sub
push
fldcw
cmp
inc
or
sub
sub
or
rcll
adc
pop
inc
mov
cmp
mov
leave
inc
lods
sub
call
daa
and
lret
aas
pop
fucomi
out
gs
incl
lahf
scas
movsl
fmul
adc
inc
xor
xlat
lcall
sub
xor
mov
or
aad
mov
inc
or
fstl
push
fistps
repz
sbb
shll
push
jmp
push
xchg
outsl
imul
cmp
loope
scas
adc
pop
add
repnz
fisttpl
fnsave
mov
ljmp
or
ret
scas
lahf
std
cmpsl
and
out
je
sub
add
xchg
mov
or
js
pop
mov
xchg
out
and
jae
lret
dec
std
inc
or
in
ficomps
int3
repnz
dec
rolb
lea
and
pop
push
pushf
es
pusha
and
sbb
push
push
mov
repnz
dec
and
cmp
mov
ds
inc
cmp
adc
push
dec
or
hlt
data16
cmp
add
test
pop
mov
mov
and
cmp
cmp
cli
mov
sub
jle
xor
test
or
sub
aad
xchg
jl
adcl
mov
fs
loopne
addr16
mov
sub
outsl
add
dec
divb
pop
sbb
pop
in
dec
xor
adc
push
call
mov
inc
adcl
jl
ljmp
cltd
stc
pusha
sub
jmp
mov
mov
aaa
inc
jae
aas
jne
jmp
das
sub
imul
jbe
cmp
jecxz
jne
mov
mov
mov
mov
loope
in
not
in
cmc
jecxz
js
test
inc
jne
adc
clc
stc
sub
rclb
mov
push
es
filds
sbb
in
cld
pop
jp
cmp
adc
pop
xchg
inc
aaa
push
fmulp
insl
inc
mov
xor
inc
cmpsb
push
jmp
mov
jge
sub
imul
leave
movsl
ljmp
xchg
and
dec
int3
dec
jne
sub
xor
push
pop
add
stc
sbb
fs
in
dec
insb
push
lods
xor
add
pop
mov
dec
adc
cs
adc
ja
andb
dec
jl
fwait
mov
jae
int3
sbb
hlt
push
icebp
or
nop
out
sub
inc
cmp
loopne
stos
xor
fldcw
test
int3
xchg
push
dec
xor
aam
xchg
cmp
test
scas
loopne
sub
or
or
sub
jns
mov
lds
iret
mov
jnp
sub
mov
push
xchg
in
add
negb
or
and
or
dec
add
adc
arpl
xor
enter
push
andl
mov
call
repz
fdivrl
pop
pop
jmp
es
cmpsl
and
jge
push
mov
and
sub
inc
aas
shrl
stc
pop
adcl
inc
es
insl
adc
cmp
mov
fildl
add
mov
xchg
pop
mov
repz
push
and
ret
mov
xor
mov
xchg
fsub
ljmp
cltd
push
sti
sub
mov
lods
andl
ret
push
das
mov
xor
jmp
xor
xor
cld
sbb
call
ret
xchg
mov
mov
jno
movsb
xor
xor
xor
fcomip
mov
cmp
lock
or
adc
jp
xlat
je
sub
or
pop
in
aam
inc
cmc
pop
jb
imul
or
inc
or
jmp
popa
jb
sub
cmp
repz
bound
push
out
add
cmp
das
test
push
xor
fstp
movsb
sti
insb
mov
daa
stos
adc
inc
pop
fsubs
pop
test
pushf
imul
sbb
andb
push
into
sbb
ficomps
cmp
ret
icebp
mov
shll
popf
dec
dec
ja
xor
jb
and
mov
xchg
push
jge
jp
rcll
and
jb
bound
and
enter
ljmp
and
adc
cli
xchg
je
ljmp
icebp
cmpl
and
mov
es
scas
flds
cmp
add
pop
sbb
mov
add
enter
push
fldt
clc
enter
sbb
cmpsl
xchg
mov
in
mov
xchg
repz
jbe
fsub
ficoml
sub
imul
je
popf
pop
lods
inc
mov
pop
mov
add
mov
dec
adc
outsl
lods
jmp
pop
xchg
inc
data16
dec
fnstsw
fstps
dec
fadd
mov
mov
adc
xor
mov
lret
sub
lds
jg
jge
lcall
hlt
sbb
popf
dec
movsl
push
fs
aam
lcall
sbb
lret
jns
lea
push
lods
jl
orl
fmul
dec
jbe
xchg
loop
leave
sbb
es
xor
std
loopne
xchg
outsl
mov
divl
sub
jnp
mov
push
jmp
sahf
cmpsl
xchg
dec
cmp
test
add
pop
push
jae
pop
xor
and
fistpll
cltd
dec
inc
pop
je
daa
xchg
or
mov
jbe
push
cmpsl
rcll
add
fistps
push
xor
imul
les
mov
or
gs
into
cmp
gs
inc
sbb
mov
cs
andb
sbb
fldenv
sbb
mov
lods
pop
fxch
xor
fsubl
lods
jle
inc
mov
inc
out
in
andb
mov
fdivs
cwtl
popf
lds
sub
fists
jns
push
cmp
outsb
pushf
test
inc
insl
xchg
or
xchg
xor
push
cmpsb
mov
pop
subb
dec
dec
push
xor
aam
mov
adc
jbe
lods
cwtl
out
push
gs
lods
aad
xchg
pop
sbb
fcmovb
dec
xchg
pop
xor
out
outsl
xchg
mov
mov
inc
push
xchg
enter
add
sbb
dec
sub
mov
inc
mov
sarb
scas
pop
pop
icebp
xchg
into
sub
mov
sbb
mov
push
push
sub
data16
test
clc
or
ljmp
mov
dec
dec
cmc
or
fstl
xor
insb
push
mov
out
cmpsb
scas
inc
sub
sbb
scas
shlb
sbb
dec
out
adc
dec
xchg
in
sarl
pop
sub
cmpl
and
sbb
inc
jp
aas
int3
neg
xchg
inc
pop
cmp
ret
out
pop
shrb
add
cmp
and
mov
nop
fcmovne
mov
ror
inc
cmc
lods
mov
cmp
ljmp
mov
dec
out
and
mov
rcrl
sub
outsl
xchg
push
or
xchg
movsb
call
mov
and
mov
mov
jbe
in
lds
mov
ror
stc
rorb
bound
xor
jmp
out
flds
aas
add
jno
jae
inc
mov
int3
scas
inc
xor
cmp
aaa
lock
fsubs
lock
shrl
cmp
dec
in
cmc
adc
cli
pop
mov
jae
je
outsb
sub
xchg
hlt
pop
jmp
mov
dec
xor
cld
cwtl
mov
cmp
adcb
adc
add
jnp
jmp
mov
and
or
stc
inc
mov
cmp
je
jl
shll
jo
mov
jmp
arpl
dec
sub
cmp
ficompl
nop
loopne
jmp
xchg
or
andb
push
aam
into
sahf
rclb
icebp
negb
int
ljmp
inc
mov
and
mov
push
sub
or
into
scas
pop
popa
xchg
out
popa
pop
xchg
fisubrl
lds
sub
scas
fdivr
and
or
adcb
test
adc
lret
and
xchg
xor
ret
mov
fwait
cwtl
fwait
negb
lods
orb
into
dec
lahf
xor
push
addb
push
rcrl
cmp
std
or
dec
insb
sub
jle
enter
lods
loope
sgdtl
pop
cld
inc
sbb
sbb
les
inc
das
in
testb
outsb
add
lret
fisttpl
in
sbb
daa
data16
lcall
das
xchg
ja
mov
lret
ljmp
xor
int3
int
lea
push
push
xchg
or
jne
inc
push
les
mov
or
cwtl
xor
andl
dec
or
fnsave
gs
mov
es
iret
xchg
inc
enter
fbstp
pop
les
insb
lds
dec
xor
fcos
sub
cld
xor
adc
dec
pop
mov
or
cmpsl
xor
in
sub
xor
push
jno
sbbl
xor
movsl
dec
aad
test
and
scas
out
rcl
hlt
xchg
dec
lret
enter
ljmp
jecxz
adc
adc
jmp
mov
pop
sbb
fincstp
cld
pop
lahf
mov
icebp
in
adc
stc
cs
xchg
test
dec
cvttps2pi
mov
xchg
jno
push
repz
dec
mov
mov
cmpsl
iret
and
fsubrs
addr16
out
pop
shlb
in
aaa
cmp
xchg
lds
ja
inc
sub
jmp
or
test
jns
cmpsl
pop
or
sub
and
je
push
int
inc
xchg
jno
mov
int3
mov
cwtl
fstpl
push
mov
push
mov
inc
mov
movsb
jnp
cmc
mov
inc
idivb
push
je
mov
push
out
mov
fadds
add
lahf
sub
mov
sbb
or
divl
out
pop
lock
addr16
out
mov
push
push
aad
push
rcrb
inc
sbb
jmp
gs
aam
inc
movntq
rolb
mov
pop
sbbb
sti
inc
sbb
pop
jp
test
dec
xor
cmp
cs
mov
ret
add
int
sub
lock
adc
dec
pusha
sar
cmp
ret
cli
ja
pop
out
xchg
inc
push
sub
stc
pop
bound
inc
push
nopl
jecxz
pop
stc
loopne
dec
cmc
cwtl
pop
dec
icebp
test
in
or
popl
push
adc
sarb
or
bound
mov
out
into
jge
sbb
icebp
mov
sbb
pop
sbb
sti
shl
in
dec
mov
pop
add
mov
adc
test
sub
insl
xor
push
lcall
dec
xor
jbe
in
orl
jo
pop
mov
hlt
out
rolb
clc
xor
sbb
pusha
jne
sbb
je
jl
inc
xchg
dec
fsubrl
xor
or
sbb
xor
int3
in
push
jno
icebp
daa
imul
jg
pop
or
mov
gs
cmp
mov
in
es
add
dec
cld
cld
mov
xor
inc
aad
js
repz
in
dec
lods
rclb
inc
jbe
pop
mov
pop
push
adc
pop
xor
mov
aam
xlat
clc
ret
or
or
clc
movb
mov
jbe
cmp
cmp
inc
mov
or
jb
push
and
dec
mov
pop
mov
inc
int
repnz
cmp
cmpsb
dec
mov
jnp
addr16
repz
sbb
hlt
aam
mov
mov
ret
jae
mov
xchg
adcl
cmpsb
cld
adc
cli
cmp
fidivl
dec
test
mov
add
mov
pop
mov
out
add
dec
movsb
in
in
imul
popf
mov
mov
pop
jno
ds
adc
or
cmp
mov
mov
jmp
cmp
and
movsb
sbb
add
icebp
xor
imul
fucomip
loopne
cmpsl
sbb
adc
cmp
jmp
cwtl
int
sub
fmul
add
or
xlat
movsb
lock
adc
pushf
je
sbb
outsb
call
adc
mov
push
fmuls
xchg
iret
outsb
mov
inc
loopne
mov
pop
popa
or
pop
jne
fsubr
pushf
js
mov
out
lea
add
out
rolb
insl
lret
xor
cmc
movsb
loop
loope
je
jns
sub
adc
jae
mov
jne
enter
sbbl
and
mov
aas
movsb
pop
dec
inc
cmp
arpl
sub
jle
loope
jo
push
rcrb
push
mov
fisttpll
adc
adc
mov
push
sbb
std
lods
or
inc
xlat
push
mov
cmp
push
cwtl
or
pop
and
int
lcall
mov
pop
inc
stc
sub
or
pop
cmp
mov
aam
into
scas
inc
inc
icebp
insb
jns
sahf
sub
fs
or
insb
sub
add
cmp
or
inc
pop
and
sub
xchg
fcmovnb
push
gs
cmp
and
add
add
jno
push
sti
dec
jns
int3
jo
lret
xchg
xchg
push
xchg
mov
cld
inc
add
insl
pop
pop
ss
mov
pop
jp
sub
repz
mov
push
outsl
daa
ret
icebp
les
pushl
add
rep
in
mov
mov
mov
ret
cmpsb
outsl
pusha
mov
loop
mov
mov
fidivs
fdecstp
test
data16
sbb
inc
lods
arpl
add
push
lea
jecxz
mov
leave
push
cmp
xor
xchg
outsl
jg
adcb
pusha
scas
cmpsb
int
imull
ss
and
pop
fwait
repnz
int3
shlb
int3
sub
inc
insb
and
pop
jle
push
aas
cmp
adc
and
adc
xor
pop
xchg
scas
es
mov
mov
mov
inc
jns
icebp
pushf
pop
loop
std
into
mov
lds
push
push
and
in
sbb
cs
cmp
fisttpl
jmp
ffree
mov
int3
cmp
add
mov
repnz
fstp
inc
in
pop
ljmp
sub
je
mov
cmp
pushf
repz
mov
adc
cs
sbb
xchg
ja
xchg
fwait
ja
ja
pop
jle
cmpsb
mov
push
sti
arpl
jle
mov
fwait
add
lock
lret
inc
shll
add
pop
insl
ljmp
pop
inc
loop
lea
add
sub
fadds
push
aad
lods
movsl
dec
mov
into
fimuls
push
shl
ljmp
ja,pn
aaa
jmp
mov
sub
into
xchg
mov
cmp
test
outsl
sub
icebp
std
pop
dec
out
repnz
lock
cli
pop
cmp
cmp
sub
mov
pop
movsl
fmulp
jle
lea
bound
sbb
mov
add
sbb
int
push
lods
rcl
insb
test
push
and
jbe
cmp
add
mov
dec
sbb
sub
and
or
add
cmp
mov
push
jmp
ss
sbb
shl
cmp
mov
cltd
jae
xor
or
pop
imul
clc
iret
stc
mov
jb
dec
test
jmp
add
push
rclb
dec
mov
dec
jbe
jae
loopne
dec
jne
loope
adc
add
inc
inc
fs
aad
jae
insb
pushf
push
xchg
lock
xor
js
jg
pop
daa
lcall
or
je
xchg
cltd
out
jp
adc
hlt
mov
fsubrs
xor
pop
dec
adc
jbe
xor
ficompl
shrl
push
or
outsb
or
xor
cmpsl
mov
iret
mov
jo
and
jnp
sub
pop
call
pop
jae
inc
lret
stos
mov
out
cmp
jo
push
decl
ret
out
fs
push
in
popa
data16
xor
nop
ss
inc
pop
adc
in
fisttps
xchg
mov
cmp
shlb
sbb
or
mov
push
mov
mov
inc
pop
lret
push
fsubrl
jle
xor
push
test
fildll
mov
or
push
dec
in
popa
cld
push
hlt
dec
leave
xor
mov
and
fistl
je
loop
dec
or
pop
adc
fdivrs
scas
sub
arpl
inc
jo
shlb
outsl
mov
icebp
cmc
imul
fwait
push
mov
sbb
in
mov
or
js
jle
push
or
xchg
sahf
into
xor
xor
xor
xor
bnd
dec
push
and
fldl
pop
dec
test
rcr
or
sti
sbb
jne
popa
pop
jp
add
cmp
daa
cmpsb
cmp
xchg
fcoms
loopne
idivl
iret
call
and
arpl
or
test
sbb
lcall
inc
scas
mov
into
sti
mov
addr16
or
or
repnz
push
insl
cltd
pop
adc
cmp
test
aam
fimull
aaa
pop
std
pop
out
pusha
sub
pop
negb
fs
xor
jno
nop
cmp
xchg
stc
aaa
nop
test
cmp
ds
mov
mov
mov
sub
enter
jl
repnz
mov
xor
arpl
bnd
cwtl
jno
jmp
shrb
add
jle
mov
jns
pop
xchg
dec
adc
fcmovb
call
adc
pop
xlat
adc
dec
mov
mov
mov
ja
nop
and
jne
xorl
cmp
sub
fildll
bound
jge
in
cmp
mov
out
scas
cmc
jmp
jp
xor
sub
addr16
inc
mov
mov
and
int3
repnz
cmpsl
pop
lahf
inc
xor
jo
sbb
xor
jb
imul
mov
inc
cmpsl
mov
push
cli
outsl
pushf
lds
lock
push
dec
sub
inc
lcall
cmp
fs
jb
enter
xchg
insb
scas
xor
fldcw
movsl
dec
jne
push
xor
popa
xchg
mov
insb
mov
popf
lcall
testb
xor
pushf
pushf
sub
dec
into
and
pushf
out
jmp
xchg
adc
cs
inc
addb
or
mov
mov
lcall
mov
and
inc
cmp
cmc
call
mov
setle
mov
mov
and
in
fwait
push
and
mov
adc
xor
xchg
movaps
jns
jle
je
cmpsb
icebp
jnp
pop
mov
mov
inc
push
and
repz
push
inc
mov
js
cmp
lret
push
lret
mov
mov
mov
cmp
adc
pop
aad
and
push
mov
xchg
lcall
fs
push
fmuls
gs
add
add
sub
fcomps
popf
repz
mov
lods
inc
lea
xor
xor
inc
mov
test
enter
inc
jge
push
in
and
mov
ret
iret
xchg
ljmp
sbb
xchg
ret
insb
mov
push
cmp
inc
cmpsb
pop
scas
add
iret
dec
jns
out
pop
xchg
mov
xor
xchg
pop
sbb
mov
lods
inc
lcall
mov
enter
loop
xlat
insb
push
mov
fwait
div
cli
jb
xchg
adc
xchg
lock
fcomi
adc
push
pop
shlb
bound
fs
repnz
mov
xor
roll
cmpsb
pop
adc
pusha
rcll
mov
pushf
xor
sbb
bound
mov
fisubs
cld
rcr
insb
daa
out
ss
test
jmp
dec
ss
mov
int3
xchg
lret
cld
cltd
pop
xchg
and
dec
jmp
subl
push
and
hlt
mov
repnz
add
inc
hlt
out
xchg
mov
push
je
out
lods
and
ret
xor
inc
aaa
in
pop
in
shlb
in
mov
jl
stc
jmp
cmpsb
out
das
aaa
test
nop
sbb
hlt
push
insl
jg
sbb
in
outsb
ja
push
ror
out
push
fisubrs
aaa
adc
xlat
inc
mov
imul
mov
aas
and
std
xor
adc
mov
inc
or
inc
mov
push
rcrl
cmp
lret
rol
adcb
jb
jmp
dec
lea
lret
pushf
dec
jne
cld
loopne
cmp
test
push
fisubrs
adc
push
xchg
fcomps
pop
dec
adc
sti
test
or
or
fs
push
pusha
into
repz
sub
mov
int3
lods
mov
adc
fldl
test
addr16
or
aam
cwtl
mov
push
sahf
lods
push
mov
lea
fadd
ss
sahf
call
mov
pop
sbb
xchg
fsubrl
shll
test
pop
ret
lea
add
popf
roll
dec
mov
pop
or
repnz
pop
sahf
or
data16
imul
repz
pextrw
in
shll
cmp
repz
dec
lret
loope
mov
xor
mov
int
sub
and
mov
out
push
push
repnz
repnz
fs
int3
test
and
test
jge
mov
pop
loop
cwtl
mov
shll
js
jns
or
push
sbb
shl
pop
xchg
stos
xchg
sub
aas
dec
pop
fwait
jo
scas
mov
lret
divb
push
cwtl
bound
shrl
jb
pop
xchg
outsl
pushf
fwait
rcrl
fdivr
mov
fsubr
and
pop
cli
xchg
jb
fisttps
sbb
lret
pop
test
out
mov
enter
ret
loope
push
cltd
insb
fwait
lret
lea
xchg
jmp
inc
in
mov
mov
stos
fwait
cmpsl
mov
inc
push
push
lods
adc
push
addb
push
adc
ds
stos
das
add
push
mov
mov
dec
daa
pop
sub
cmp
push
and
jecxz
icebp
aas
push
lods
add
fistpll
nop
cmp
or
and
andl
repnz
cmp
xchg
leave
jno
mov
and
dec
inc
cmp
movsb
xor
add
repnz
adc
adc
ss
mov
cmp
lods
sbb
and
subb
and
pop
fsts
mov
testb
mov
mov
rol
imul
cld
push
aas
or
jmp
dec
lea
gs
loope
in
ja
xlat
xorb
and
mov
cmp
cmc
mov
fs
out
test
loope
movaps
inc
mov
fdivrl
sbbl
sahf
loope
pop
and
add
stc
ja
pop
dec
lods
jecxz
rorb
decb
mov
mov
mov
imul
mov
loope
pop
xchg
pop
out
test
mov
test
dec
mov
enter
call
adcb
daa
ficomps
in
fidivrs
push
cmc
enter
jge
mov
lret
and
push
inc
ret
fwait
and
je
das
or
repz
sahf
movsl
xlat
pusha
dec
pop
ror
mov
cli
icebp
ret
mov
test
push
pop
add
push
cmp
jge
add
rcll
loopne
shl
jmp
cmp
jmp
sub
cmc
jns
dec
je
push
call
pop
mov
clc
cmp
jl
sarl
mov
xchg
or
test
adc
pop
imul
cmp
push
ret
sub
les
aad
es
into
sub
cmpsl
jo
aaa
mov
dec
mov
inc
nop
mov
cli
movsb
push
subl
xchg
sbb
add
aaa
pop
mov
shlb
push
test
ja
bswap
js
inc
jle
adc
and
movsb
iret
cmp
jae
xor
test
push
sbb
push
movsl
in
jp
movsl
push
test
jno
cmp
ret
jb
js
popa
icebp
mov
add
dec
jno
xchg
les
int3
and
xor
psrad
push
orb
dec
mov
les
fiadds
aaa
sub
pop
cmp
xchg
aas
push
mov
mov
das
jle
mov
loope
and
gs
aaa
bound
jo
mov
inc
mov
sbb
pop
out
pop
adc
pop
cmpb
inc
xor
not
loopne
push
cmp
dec
xchg
insl
out
xchg
xchg
jbe
shrl
fsubl
rcrb
fsubs
lret
mov
jge
mov
bound
sbb
in
pusha
mov
and
mov
xor
sub
iret
aas
imul
xchg
inc
and
loopne
movsl
fisubs
inc
mov
aaa
ja
imul
jno
cmp
push
loopne
fisttpll
aam
fsubrl
std
push
inc
sti
push
pop
adc
pushf
pop
movsb
push
mov
jns
sti
jl
or
mov
mov
push
pop
test
xor
mov
pop
xchg
lret
in
fxch
or
leave
and
jnp
mov
jne
mov
shlb
or
or
sub
cwtl
cmp
fldcw
repz
popa
mov
orb
lds
and
push
pop
out
xchg
cld
addb
or
popf
jnp
mov
mov
xor
push
inc
pushl
adc
pushf
mov
mov
push
inc
aad
mov
inc
jp
insb
test
dec
add
fcmovnb
push
daa
js
push
loopne
push
xor
add
push
shll
pop
jmp
in
adc
shll
test
pushf
outsl
xor
jl
jg
pop
dec
orb
lahf
mov
push
jecxz
lahf
dec
pop
fldcw
xchg
mov
fwait
imul
cs
notl
jae
add
xchg
mov
sbb
leave
add
xchg
shrl
repnz
bnd
aaa
push
and
loope
xchg
lods
not
push
add
cwtl
movsb
mov
push
fcom
fildll
shl
push
xchg
cs
sub
cmp
xor
adc
loope
sbb
jp
stc
aas
loop
sub
jmp
cmc
and
pop
scas
into
sub
imul
inc
pop
lea
add
icebp
add
flds
sbb
sub
cmp
movsb
or
imul
jmp
popa
in
dec
lods
pop
ja
idiv
in
test
mov
or
cwtl
jnp
jmp
inc
jg
sbb
or
imul
sub
jno
fcomi
push
loopne
adc
inc
xchg
movsb
cmp
inc
jnp
push
js
jecxz
adc
pop
jne
fwait
lods
hlt
mov
orl
sub
lahf
fwait
pushf
or
sbb
push
jns
sub
xchg
sub
mov
ficomps
or
adc
xchg
pop
add
ficoml
add
mov
decb
dec
push
xor
push
mov
inc
and
xor
xor
ja
inc
mov
mov
stos
outsb
sti
insb
lcall
out
js
in
ret
and
fimull
addr16
test
jg
outsb
mov
fsubrs
outsb
inc
push
stos
int
jno
push
cmpsl
pop
mov
cmpsb
repz
fdivl
int
xchg
push
fwait
lods
movsl
adc
xor
inc
add
dec
dec
xchg
add
inc
push
xchg
jge
mov
mov
mov
lods
or
daa
mov
imul
dec
das
xchg
addr16
sar
xor
sub
stos
fdivs
adc
pop
movsb
inc
mov
mov
inc
push
mov
xchg
aas
test
lods
into
mov
fisttpll
mov
jo
aas
scas
cmp
cs
cltd
arpl
xchg
test
sub
testb
add
mov
push
lds
xabort
dec
push
and
dec
inc
add
popf
lock
sub
cmp
xor
sub
es
int
xor
and
sbb
lahf
jb
rolb
decb
adc
fildll
popa
sub
cmp
lds
movsl
in
inc
xchg
leave
out
adc
fmuls
dec
sub
mov
ficomps
ja
insb
fsub
push
cmp
sahf
lret
mov
fsin
in
xor
jb
fxch
in
xor
cmpsl
dec
dec
mov
cli
sti
sarb
idivb
mov
sub
loope
mov
sub
sahf
or
dec
xor
sarl
xor
ds
mov
pop
mov
enter
cmp
ret
pop
repnz
pusha
fisttps
cwtl
int
jno
inc
aas
out
or
push
and
pop
mov
mov
jae
pop
sub
scas
cmpsl
push
pop
mov
sbb
inc
rcll
xchg
cmpsb
enter
adc
cmp
adc
pop
dec
xlat
mov
xchg
xor
add
push
add
mov
dec
inc
orl
sahf
outsb
testb
cli
push
mov
mov
lods
mov
adc
cmp
inc
out
aam
xor
add
out
jmp
pop
outsl
cltd
gs
mov
in
stos
dec
es
insl
repz
mov
mov
clc
push
inc
xor
rorl
mov
cmp
inc
shll
or
dec
xchg
pushf
sbbb
push
test
sbb
aam
mov
push
mov
xchg
das
mov
les
stos
lock
pop
xchg
and
pop
pop
outsl
sbb
push
mov
outsl
bound
jne
and
lret
cltd
roll
jnp
or
cs
dec
fmuls
jecxz
clc
ret
out
add
sub
repnz
jg
mov
xchg
and
and
test
inc
pop
and
cwtl
sbb
xchg
pusha
sarl
or
into
popa
pop
add
into
xor
mov
pop
cltd
inc
lcall
rorb
je
repz
repnz
insb
inc
jno
call
subb
pop
lods
mov
aad
es
in
imul
icebp
cmp
insl
pop
jmp
xchg
inc
pop
push
inc
mov
ds
jnp
test
jle
outsl
inc
or
adc
inc
xor
dec
mov
fistl
add
data16
and
adc
repnz
out
dec
add
lods
rep
mov
repz
add
jmp
rolb
push
jle
fdivl
call
repz
leave
push
aam
push
in
pop
xchg
push
orl
add
sbb
jge
lock
sub
cmp
lock
inc
mov
fisttpll
push
mov
pop
mov
mov
adc
cmpsl
out
pop
enter
insb
or
test
and
dec
xchg
push
or
inc
mov
inc
shrl
push
es
data16
pop
xlat
test
add
gs
outsb
adc
dec
test
mov
add
hlt
xchg
call
push
in
call
add
mov
sub
or
inc
and
push
and
addb
push
imul
mov
sbb
fists
insl
hlt
cmp
fbstp
xchg
out
outsl
fmull
cmp
mov
ljmp
outsb
stos
decl
sub
ret
pop
stos
arpl
cmpsl
push
lcall
icebp
shr
bound
lret
push
in
pop
lods
inc
out
mov
movsl
fstpl
inc
aas
movsl
repz
ret
push
xchg
or
mov
imul
mov
adc
sub
add
jne
test
pushf
pushf
pop
adc
shlb
nop
cltd
lret
pop
and
lahf
inc
lock
sbb
mov
addr16
lcall
sbb
xor
add
jl
push
inc
mov
cmpsb
adc
jb
pushf
lret
pop
jmp
push
dec
mov
inc
pop
sbb
push
repz
mov
sub
and
pop
ret
jl
push
pop
xlat
pop
push
mov
int3
cs
movsb
leave
mov
mov
test
sub
jg
or
in
dec
xor
adc
jmp
xor
or
mov
mov
stos
dec
and
lods
xor
or
js
jbe
adc
arpl
fstps
in
adc
add
inc
dec
mov
dec
push
test
jge
jbe
movsl
pushf
pop
outsl
mov
in
pop
push
std
outsl
ffreep
test
jecxz
add
lahf
xadd
int3
mov
or
jae
add
sub
cmpsb
xchg
popf
fimull
mov
xchg
sbb
adc
mov
mov
sub
test
add
sub
push
icebp
and
out
fxam
push
mov
pop
xor
scas
jnp
fwait
cli
sti
out
sub
aam
sbb
adc
fwait
dec
add
inc
xor
jmp
fcoml
sti
xlat
push
vcvtpd2dqx
or
jb
jnp
loop
add
dec
repnz
ds
movsb
mov
mov
pop
rcll
aas
std
movsb
cltd
push
sub
aam
push
das
xchg
popa
lahf
jne
stc
xor
fldt
mov
ret
inc
push
cmp
push
icebp
push
aam
dec
adc
iret
mov
loope
sub
jbe
out
pushl
in
cwtl
stos
mov
je
xchg
inc
movsb
jns
enter
xor
flds
jg
mov
jb
mov
js
adc
xchg
mov
pusha
add
int3
mov
push
mov
rcrl
adc
mov
jae
aad
dec
dec
out
scas
inc
jbe
pop
push
repz
push
imul
fwait
mov
pop
repz
inc
sub
rorl
or
sub
jl
dec
fwait
inc
lods
jb
rcrb
int
pop
dec
adc
notl
jns
sarl
xor
popa
das
add
xchg
test
dec
cmpsb
decb
sarb
fiaddl
and
loope
repnz
sub
and
xorb
push
jecxz
or
cmpsl
loop
jecxz
shrl
das
sbb
cmc
idivb
enter
dec
jae
mov
pop
xchg
fadd
lahf
das
jp
push
and
sbb
cwtl
aad
xchg
bound
enter
loop
cmp
xor
les
xchg
pop
pop
test
scas
cli
cli
cmpsb
push
jne
dec
ds
or
cmp
sbb
dec
xor
inc
test
push
add
pushf
adc
jecxz
das
fs
and
dec
xor
mov
mov
mov
ljmp
mov
and
ja
ret
and
cmpsl
sbb
in
fwait
add
scas
push
sbb
mull
sbb
push
mov
xor
and
outsl
inc
fsubp
pop
pop
gs
mov
lret
adc
andl
lahf
xor
jl
loopne
mov
jns
aaa
cmp
or
inc
fucom
sbb
je
xor
mov
rclb
xor
std
mov
incl
imul
xorb
xor
dec
jle
ret
mov
mov
pop
sti
dec
mov
lods
and
mov
adc
mov
jg
cwtl
dec
push
jge
and
push
loope
int
out
cmp
daa
andb
sbb
xchg
test
popw
xlat
std
and
sub
jns
stos
add
xchg
lods
fimuls
push
loopne
mov
mov
mov
xlat
lret
push
mov
push
mov
sub
mov
xor
cli
push
add
xchg
sbb
xor
xlat
out
adc
in
rcrb
mov
or
mov
es
jecxz
stos
xchg
or
loope
adc
bound
mov
xchg
scas
and
sbb
xchg
pop
mov
xorl
cmp
stos
mov
das
loope
and
popf
imul
fisubrs
stos
inc
daa
jne
pop
pop
mov
push
out
sbb
lahf
sti
push
and
mov
xchg
shll
int
lods
addr16
push
adc
sti
push
and
rclb
push
fldcw
ja
lock
js
incb
mov
aad
jns
movsb
test
pop
xchg
cmp
mov
iret
sbb
or
sahf
add
push
push
ret
repz
or
fisubrs
sbb
int
xor
xchg
add
mov
fisttpll
jmp
iret
rcrl
fldcw
mov
or
mov
inc
pop
or
sbb
jmp
mov
inc
dec
pop
sbb
cwtl
mov
jbe
mov
rcll
mov
ds
xchg
xor
add
inc
pop
orb
mov
add
shrl
push
jge
rcrb
enter
lods
mov
popa
scas
jb
cmp
xor
sahf
loop
inc
test
mov
aad
rolb
jle
jmp
cmp
loop
movsl
lock
jp
xchg
es
dec
fstpt
add
and
mov
loopne
mov
pusha
mov
and
dec
aam
fsubs
add
or
lcall
int
and
add
fwait
mov
pop
shrl
fs
mov
clc
dec
test
mov
jg
xchg
mov
fildl
xor
test
jno
mov
or
stc
jnp
arpl
cmp
roll
iret
inc
push
push
inc
adc
movsl
repnz
mov
pop
lcall
movsl
int
idivb
fcmovb
or
iret
and
mov
jg
repnz
add
add
ja
mov
shll
test
push
adc
insl
movsl
aad
mov
jmp
sbb
dec
jecxz
cmpsb
jbe
mov
insl
add
pop
dec
iret
stc
mov
pop
jb
mov
iret
inc
pushf
sub
lcall
popa
or
rorb
js
shl
insl
inc
cmp
push
or
jge
mov
jecxz
jnp
xchg
out
cmc
push
pop
movsb
sub
sti
jnp
sub
pop
in
decl
andl
inc
lcall
cwtl
enter
les
lahf
out
ret
mov
mov
sub
mov
fnsave
pop
inc
loopne
lcall
out
sub
mov
jmp
sbb
pop
jp
mov
andb
ret
xor
mov
mov
push
cmp
xorb
add
xchg
fnstcw
lss
push
inc
mov
cld
ficomps
test
rorb
xlat
sbb
lcall
inc
and
in
or
loopne
je
pop
ljmp
xlat
test
and
pop
lret
js
sahf
hlt
mov
test
pop
pusha
repz
call
je
inc
cmp
test
jmp
test
or
in
xchg
inc
dec
in
ret
xor
inc
cmpsl
outsl
stos
inc
xor
out
int3
or
or
sub
adc
out
add
jl
push
loope
adc
lods
and
repz
iret
xchg
pop
and
popa
adc
sub
js
push
inc
mov
shll
insl
mov
inc
mov
mov
shlb
mov
mov
adc
stos
xchg
inc
jle,pt
mov
xchg
sub
into
cltd
pop
outsb
xchg
mov
or
pusha
cmp
outsl
xchg
jns
mov
outsl
inc
out
mov
mov
lret
ljmp
xchg
pop
test
int3
mov
ja
orl
clc
jp
xchg
outsb
push
adc
jnp
push
add
sbb
inc
shlb
stc
clc
negl
dec
jge
ja
das
shrb
call
setb
adc
pop
ljmp
xchg
push
inc
movsl
push
jmp
and
add
cmp
lea
out
inc
add
add
and
mov
or
jo
insb
bound
dec
cmpl
pushf
xor
repz
jl
adc
add
inc
fucomi
enter
lds
shrb
jmp
inc
outsl
pop
dec
sbb
jp
iretw
cmp
movl
jno
mov
adc
in
out
adc
cmpsl
adc
cli
sub
xchg
xor
roll
inc
jecxz
pop
or
sub
je
in
sub
push
les
mov
or
jecxz
dec
mov
push
arpl
ret
hlt
mov
sbb
sub
xor
leave
icebp
repnz
into
xor
imul
xchg
mov
ljmp
mov
mov
mov
shlb
loope
nop
jmp
xchg
fcos
mov
sub
push
mov
add
cli
push
mov
leave
cmp
push
push
cmpsb
jne
test
dec
orl
xchg
cmp
popf
outsl
add
pop
jno
or
cmp
cmp
shll
mov
push
push
add
sub
pop
movsl
cmp
mov
rcr
mov
mov
pop
aam
mov
bound
sub
xor
leave
push
loopne
jnp
mov
in
cltd
enter
ror
repnz
push
fsubrp
setbe
push
cmp
mov
cmpsl
push
dec
iret
xor
xchg
jns
mov
add
int3
js
lock
xor
scas
in
int3
or
repz
lret
call
and
inc
add
cmp
and
movsl
sbbb
daa
inc
out
sbb
sbb
sarb
clc
addb
cmp
sbb
pop
sub
inc
lods
in
loopne
mov
mov
push
mov
jecxz
cmp
jb
xchg
test
pop
cmp
repnz
xor
fldcw
in
mov
jle
cwtl
mov
xor
int3
xchg
inc
scas
mov
scas
push
push
adcl
or
pusha
rcr
addr16
cld
fdivp
dec
mov
push
push
and
out
sbb
adc
pop
or
jg
jp
push
fwait
and
mov
xchg
imull
add
jle
cmp
adc
lods
inc
or
inc
and
cltd
xchg
xchg
rorl
pop
mov
push
outsl
push
push
or
addl
and
fsubrs
mov
data16
mov
stos
xchg
cmp
cs
lcall
and
cmp
cmpsl
jbe
jecxz
add
adc
push
jg
mov
ret
adc
nop
jo
addr16
jmp
mov
push
jb
repnz
test
mov
add
jg
scas
sti
cmp
out
ja
aam
xchg
lea
mov
cmp
loope
mov
ret
inc
rcrb
ret
mov
mov
nop
add
cmp
cltd
cmp
inc
sub
push
cmp
cmpsb
imul
scas
repz
jae
aam
bnd
iret
cs
stc
pushf
xchg
and
stos
sarl
inc
loopne
popf
mov
jl
scas
or
jmp
pop
cmp
sar
ds
call
test
lcall
fwait
mov
mov
ret
popa
pop
stc
es
stos
mov
shll
adc
add
and
in
cmp
out
mov
push
xchg
data16
mov
mov
cmc
out
lock
lea
sub
add
push
lds
cmp
popa
dec
stc
stos
cld
sub
leave
mov
in
jg
jge
imul
je
adc
add
mov
xchg
cmp
xor
insb
adc
xor
cmc
in
loope
sarb
inc
loope
push
push
and
out
clc
lds
dec
lcall
jnp
jge
mov
test
or
jo
add
in
fwait
loopne
sub
cmp
pop
jp
or
imul
inc
in
adc
bound
fcmovbe
ja
lods
cltd
sbb
cmp
in
pop
out
pop
loop
xchg
mov
xchg
sub
sti
and
dec
push
scas
lea
lret
dec
std
dec
jb
push
mov
xor
mov
lds
sub
lds
add
xchg
shl
and
repnz
push
or
jb
loop
adc
jae
outsl
xchg
jnp
dec
jge
pushf
jno
lods
rorl
jno
icebp
out
les
mov
adc
inc
lret
popf
das
mov
jle
add
cmc
test
jle
test
hlt
daa
loop
cmp
xchg
xchg
xchg
out
lret
outsb
pop
pop
add
shl
xlat
cmpsb
pop
and
sub
aad
aam
nop
and
lcall
lods
jle
push
inc
adc
jo
int3
aaa
es
mov
pusha
subb
aam
insb
mov
or
cmpsb
cmp
sbb
loopne
daa
movsl
aaa
dec
call
mov
jno
push
fmul
push
mov
mov
dec
es
fcoml
jns
out
std
cmp
cmovge
and
orb
or
pop
hlt
jb
pop
mov
jmp
push
sub
sbb
jo
lahf
pop
aad
dec
xor
addr16
pminsw
or
sbb
mov
out
inc
sbb
out
repz
popf
lret
pop
fwait
add
ss
adc
test
inc
in
mov
mov
mov
mov
stc
dec
test
inc
xchg
or
icebp
sbb
fcmove
lock
pop
es
xchg
dec
xor
inc
jge
outsl
in
xchg
imul
mov
fwait
mov
push
sbb
pop
lea
rorl
lahf
dec
nop
repnz
jo
pop
movsb
dec
dec
aas
and
repnz
sub
lea
or
pushf
or
push
sub
and
jle
add
sbbl
and
push
xchg
push
inc
pop
js
inc
cmp
fcoms
ss
movsb
loope
sbb
mov
xchg
cmc
gs
out
lcall
std
pop
repnz
js
or
push
stc
jb
mov
push
dec
inc
sti
pop
jp
push
stos
mov
mov
mov
bound
inc
mov
or
push
dec
lods
call
fmul
dec
push
push
mov
cmp
push
jg
jne
ja
pop
mov
clc
mov
pop
pushl
mov
shr
add
pop
test
insl
mov
xor
dec
or
ret
aaa
pushf
sbbl
mov
fisttps
push
dec
aad
lea
xor
sbb
ret
fsubrs
scas
sarl
fdiv
jno
mov
fsubrs
cmp
dec
imul
sbb
aaa
out
and
xchg
push
dec
jge
adc
sub
inc
lock
sub
testb
lods
out
push
inc
lret
sbb
xor
aam
or
out
lods
sbb
add
cmp
push
dec
or
rclb
stos
jl
push
jg
scas
arpl
sar
inc
dec
dec
pop
cmp
jno
lahf
add
jecxz
xchg
aaa
pop
push
mov
add
idivb
cs
pop
inc
or
jp
mov
shrl
or
int
sarb
lods
xchg
mov
sub
dec
rorl
mov
push
adc
jge
dec
inc
sti
test
bnd
lods
push
fildl
mov
xor
out
jno
es
ljmp
hlt
insl
rorl
jo
mov
jmp
outsl
add
mov
mov
push
mulb
test
mov
movsl
inc
jg
imulb
pusha
mov
dec
cltd
pop
test
cmp
mov
aaa
fimuls
inc
or
outsl
xchg
jb
mov
imull
enter
mov
cmpsb
int3
pop
lcall
pop
out
mov
sbb
lea
mov
xor
xchg
aaa
or
aaa
adc
int
mov
push
pop
enter
pop
xchg
adc
ret
je
xor
insb
ret
inc
shlb
add
out
xchg
jp
aad
fsubrl
adc
incl
push
popl
int
xor
data16
repnz
push
sub
sbb
hlt
add
pop
or
sbb
or
jmp
mov
add
dec
mov
cs
mov
scas
xchg
clc
push
push
mov
inc
jne
xchg
and
xor
cmp
add
cli
add
push
jb
enter
jmp
aaa
and
jnp
inc
xchg
jne
fwait
call
in
andb
pop
mov
popa
pushf
mov
mov
iret
sbb
inc
push
mov
push
fisttpll
push
outsb
mov
pop
rclb
into
jl
sbb
pop
mov
jg
sbb
inc
or
ljmp
and
adc
pop
stc
ljmp
pushf
inc
push
xlat
adc
add
out
fmul
stos
frstor
mov
or
dec
roll
xor
lods
cmpsb
popf
add
pop
push
gs
movsl
mov
push
cltd
std
jnp
sub
aam
push
add
bnd
cmp
sbb
jmp
or
dec
or
lock
or
out
roll
adc
cltd
and
ljmp
dec
popf
orl
dec
dec
in
fwait
aas
add
in
rcrb
sahf
pop
in
das
fs
jmp
daa
ss
fadd
jno
mov
dec
stos
cli
dec
cli
jns
cmp
pop
popa
loop
sbb
filds
push
lahf
pop
int3
push
mov
mov
imul
loope
outsb
out
and
jmp
je
test
xorb
xlat
xchg
dec
test
pop
bound
popl
ss
test
dec
jne
frstor
arpl
push
out
in
sbb
adc
jbe
adc
lock
jle
in
jae
dec
xor
lret
lret
dec
jne
xchg
push
adc
or
movsb
cmpsl
and
daa
cmp
add
in
arpl
or
test
cmpsl
add
lds
in
arpl
dec
cltd
mov
fcmovnbe
mov
jg
aas
jbe
jle
rcr
or
xchg
ret
jo
mov
inc
cwtl
xor
popf
xor
into
mov
mov
fiadds
faddp
enter
mov
mov
sti
cmp
mov
in
leave
test
jle
or
xor
jg
int3
fidivs
mov
aas
push
mov
sarb
outsb
jns
in
sarb
sbb
push
in
frstor
add
mov
mov
pushf
rolb
nop
or
mov
stos
adc
xor
in
loopne
cwtl
sub
lret
rcll
stc
mov
pop
adc
adc
xor
add
xchg
mov
inc
fwait
stos
pop
out
xor
cld
jbe
bound
xchg
push
mov
xor
scas
adc
adc
repz
inc
mov
outsl
adc
es
or
cltd
sbb
dec
xchg
stos
fs
cmp
and
xor
cwtl
cwtl
pop
sub
push
je
add
xor
xchg
adc
test
or
xor
xlat
sbb
jbe
or
mov
std
inc
mov
aaa
lods
mov
test
push
fcmovnu
aaa
pop
push
stos
mov
xor
push
ja
and
sub
jns
inc
xor
adc
xchg
stc
sbb
adc
mov
xchg
lods
mov
inc
stos
into
adc
inc
divb
inc
lret
xor
push
cmpsb
sbb
aas
push
data16
add
mov
je
mov
fimuls
inc
sub
repz
fstp
pop
enter
dec
inc
out
pop
push
out
push
imul
test
mov
dec
jbe
cmpsb
fsubrl
testl
mov
sbb
cltd
or
push
cwtl
and
or
add
mov
xor
cmp
mov
xchg
cmpb
push
pushf
movsb
test
in
lcall
sti
stc
adc
inc
scas
and
dec
mov
dec
and
jb
and
sbb
sbb
icebp
sbb
mov
repnz
lret
sbb
shll
dec
mov
push
hlt
xor
arpl
xchg
push
insl
cmp
push
inc
in
pop
add
cmpb
push
test
and
daa
xor
and
lods
sbb
xchg
xchg
jbe
lret
aad
sbb
pop
pop
adc
push
test
scas
popa
inc
jo
out
jp
inc
mov
ljmp
push
xchg
inc
mov
push
sbb
stc
and
and
aam
jecxz
outsb
dec
fimuls
cltd
adcl
outsb
xchg
dec
nop
xchg
mov
adc
ffreep
scas
arpl
rolb
ret
inc
ret
test
inc
mov
dec
mov
daa
mov
inc
xor
test
xor
into
mov
sbb
push
lahf
jne
icebp
adc
and
int3
jmp
call
scas
jle
stos
sbb
sbb
add
aas
loopne
daa
int3
pop
inc
adc
call
mov
pop
daa
sahf
dec
xchg
clc
in
inc
xchg
fcmovnu
cmp
in
and
push
jg
sub
add
pop
jl
push
dec
push
les
and
add
push
push
jge
aam
in
call
jge
cltd
and
jmp
std
in
push
in
pop
cltd
or
mov
test
cmp
mov
shlb
loope
and
add
sbb
or
sbb
testl
movsl
sub
xorb
jge
mov
jnp
cltd
outsl
pop
popf
test
push
popf
movsb
sbb
sahf
jge
test
xor
sub
mov
xor
pop
loop
and
mov
or
mov
sub
outsb
movsb
mul
not
or
sti
mov
sbb
pop
dec
xchg
inc
mov
jo
and
cmp
loope
insb
lods
addr16
or
sub
faddl
sub
add
mov
cmpsl
dec
aad
nop
mov
mov
sbb
sbb
jae
jle
loopne
nop
shl
popf
or
sub
cmpsb
inc
mov
int
sbb
test
pusha
xor
stc
push
das
outsl
pop
pushf
mov
mov
mov
and
lcall
dec
mov
mov
mov
push
hlt
cmp
pop
mov
pusha
rclb
mov
sbb
jle
push
push
xor
xor
push
jnp
stos
cmp
insl
imul
repnz
push
push
aaa
sti
cmpsl
push
adc
inc
mov
and
enter
jl
adc
into
fisubs
adc
jg
xchg
test
scas
fdivr
or
fdivrs
mov
mov
movsl
sbb
jle
test
push
inc
pushf
and
or
dec
or
mov
clc
pop
ret
jnp
cs
cld
dec
enter
repnz
inc
or
sub
xchg
es
jg
fistps
jae
decb
sbb
sarl
sti
movsl
frstor
test
inc
stos
imul
sti
fcmovbe
loop
lods
sbb
push
das
or
scas
sahf
add
add
sub
push
and
adc
iret
popf
aam
loop
inc
mov
or
push
push
xor
xchg
shlb
xchg
and
mov
out
es
adc
mov
push
xchg
push
call
jl
stos
mov
mov
addr16
mov
loopne
jnp
lret
pop
nop
cld
or
xor
lcall
xor
sahf
or
leave
mov
pop
sub
jae
or
aam
push
jp
sbb
pop
xchg
rol
xchg
and
in
popa
xlat
cltd
imul
mov
aaa
ret
es
les
sub
shlb
and
lret
push
jo
cmp
rcrl
sti
mov
fists
sbb
push
xlat
pop
pop
nop
stos
pop
xor
and
or
ljmp
sub
pop
sbb
pusha
ret
call
rep
cld
addr16
scas
dec
fmuls
loope
lock
pushf
mov
stos
add
dec
stos
ljmp
add
or
push
enterw
pop
mov
shl
subl
sbb
push
inc
inc
or
sarb
out
inc
inc
or
adc
stc
sub
inc
mov
push
loope
and
and
sub
fsubrl
test
imul
outsb
inc
pop
mov
lahf
popa
pop
pop
loope
cmc
mov
push
dec
dec
mov
sub
int
aad
test
jl
jne
adcl
xchg
push
pushf
ljmp
and
mov
or
into
xor
ds
aad
cmp
sub
aad
loop
pop
cs
jb
cmp
push
js
ficompl
dec
inc
mov
push
pop
and
mov
in
push
xchg
fbstp
inc
out
dec
repnz
mov
inc
cs
sbb
ror
cmp
ret
xlat
std
dec
push
sub
jecxz
sub
mov
pop
movsb
inc
pop
ljmp
sahf
mov
shlb
xchg
inc
das
push
jecxz
mov
add
xchg
xchg
push
jae
out
dec
push
pop
push
mov
loopne
mov
test
sbb
in
movsl
fisttpl
sysret
jnp
insb
inc
sahf
and
cltd
dec
insb
xchg
cmp
or
int
loopne
mov
mov
pop
jg
cli
notb
test
fimuls
aaa
ja
mov
out
arpl
jecxz
jle
cmpsb
pop
std
jns
xor
out
lea
stc
add
push
pusha
dec
clc
mov
fcmovnb
in
and
jmp
mov
and
ljmp
cld
fmuls
push
sub
sbb
mov
add
sbb
dec
js
or
stc
int3
pop
test
jae
sbb
out
jmp
ficoms
cld
push
pop
out
mov
mov
arpl
sub
jmp
nop
sub
ret
dec
or
ljmp
sub
or
subb
fadd
lahf
ja,pn
jne
cmp
call
je
sbb
pop
pop
jmp
xchg
and
jnp
fwait
test
je
sub
jmp
dec
addr16
mov
into
and
bound
push
adc
dec
sbb
stos
push
sub
pop
ja
lret
insl
sub
stos
mov
movsl
subl
xchg
pop
pop
cmpsb
dec
sbb
cwtl
cltd
pop
mov
ja
pcmpeqd
mov
addr16
xchg
addr16
adc
pop
xor
fwait
xorl
lods
xor
mov
cld
pop
subb
xor
int3
shrb
push
mov
cmp
in
cmp
and
sub
shr
mov
xor
jmp
add
jne
popf
dec
lcall
push
push
sub
lds
test
aas
jo
jmp
cmp
mov
pop
jp
clc
outsb
sahf
inc
mov
aad
mov
add
pop
rorl
mov
pop
and
cmp
jp
or
cmp
xchg
pusha
jne
cmpsl
fisubs
mov
adc
sbb
mov
jmp
lret
out
fsubr
add
fmul
cmp
sub
out
sahf
or
sbb
fsub
icebp
dec
fisttpll
xchg
addb
loop
loop
adc
xlat
cli
repnz
fstl
pop
mov
imul
inc
dec
or
mov
mov
std
or
mov
pop
int3
and
xor
lret
insl
push
dec
cmp
sahf
xor
cli
mov
mov
orb
or
les
je
js
dec
add
adc
push
sub
cltd
jno
jp
sub
ds
mov
ss
mov
cmp
std
sub
inc
sub
movsl
dec
mov
jge
xchg
sbb
sbb
sub
fsubl
cmp
shr
pop
ret
ds
pop
mov
mov
movaps
jg
dec
or
inc
sbb
push
mov
dec
xchg
xlat
dec
jl
fidivl
push
inc
mov
je
data16
imul
xchg
xchg
push
sub
popa
mov
call
or
lods
inc
test
ss
enter
cmp
adc
daa
bound
add
sub
je
dec
dec
xor
mov
or
sub
inc
test
pop
jp
stos
outsb
jnp
pop
insb
mov
xchg
push
push
movsb
adc
inc
jnp
pop
push
sbb
in
xchg
mov
mov
call
inc
mov
popf
movsl
ret
jb
call
outsl
pop
rolb
mov
jno
repz
fnsave
lret
cmp
xor
cmp
cmp
fcoml
jo
jns
jl
mov
add
shrb
push
inc
push
push
pop
dec
cmp
pop
push
out
xor
xchg
jb
pop
xchg
test
sbbb
jbe
stos
jae
push
ret
xor
add
mov
add
mov
fisttps
sti
mov
sbb
and
and
pop
mov
pop
adc
dec
xchg
xchg
jle
fcoml
loope
mov
mov
in
xor
cld
mov
push
or
xor
out
mov
bound
into
scas
and
adc
test
inc
orl
cwtl
mov
iret
call
fwait
repz
jp
lock
aaa
lods
lahf
xor
test
scas
stos
flds
ss
jno
inc
mov
test
push
or
adc
movsb
movsl
aad
pop
push
sbb
fisubs
inc
sbb
xor
fnstcw
adc
mov
popf
sahf
xchg
xchg
out
mov
mov
mov
jg
dec
ds
inc
push
lock
cmp
test
xor
adc
pop
scas
mov
enter
mov
stos
stos
xchg
or
ds
ss
mov
and
and
sahf
ja
int3
push
dec
xchg
jne
jnp
push
xchg
adc
dec
sbb
cltd
jmp
bswap
aaa
jl
pusha
jo
mov
mov
mov
lahf
lock
mov
cmp
jbe
adc
push
pop
ljmp
mov
mov
cmp
xor
ret
cmp
sub
inc
inc
pop
or
mov
inc
inc
mov
sub
mov
es
andl
xchg
rorb
fmuls
xchg
dec
movsb
aaa
daa
fists
jmp
lret
ret
mov
scas
clc
ficomps
nop
pop
adcl
mov
adc
adc
push
jecxz
xor
cmp
movb
stos
xor
pusha
test
xchg
push
mov
test
repnz
daa
mov
es
mov
xchg
or
test
cmp
ror
out
lret
lock
mull
sub
mov
mov
arpl
mov
or
mov
mov
push
stc
xor
adc
inc
popf
outsb
aaa
cld
xrelease
fidivrl
inc
lcall
movsb
insb
xor
mov
sub
imul
and
icebp
inc
sbb
leave
dec
xchg
dec
jb
insl
cmp
cmp
mov
cmpsb
cli
pushf
sub
jge
mov
mov
mov
sub
fs
repz
loopne
cli
lret
sbb
roll
lods
jns
jl
pop
ja
test
lea
sub
add
and
mov
sti
lret
sub
inc
jb
inc
dec
or
orl
fidivs
les
inc
mov
jge
cld
outsl
mov
push
aad
pop
dec
fdivs
and
xchg
andb
cmp
jecxz
inc
mov
fs
mov
or
dec
test
cltd
mov
push
aaa
out
jae
or
sbb
clc
sub
dec
push
mov
jo
mov
push
dec
fsubs
jmp
mov
and
xchg
stc
add
or
mov
pop
scas
push
sbb
xchg
cmp
mov
arpl
imul
cmp
loop
stc
xchg
sbb
add
sub
sti
mov
andl
xor
push
jmp
fstpt
rolb
or
mov
dec
pushf
lock
dec
mov
ljmp
mov
mov
dec
ret
fcmovu
or
jae
gs
repz
push
jbe
push
push
rcll
test
stc
loope
fs
jmp
ljmp
mov
lahf
clc
pop
pop
addr16
gs
ret
mov
cli
dec
icebp
in
test
inc
sbb
fldenv
push
int
jne
mov
movsl
test
add
loope
outsb
jns
inc
rclb
pop
cmpl
pop
jmp
test
pop
lods
lcall
cmp
sub
push
add
xor
mov
push
js
cmp
sbb
sbb
mov
mov
jmp
shrl
lcall
addr16
and
add
dec
icebp
fadds
ljmp
adc
push
dec
cmp
mov
call
push
addr16
shll
shll
fisttps
push
lahf
inc
gs
xor
mov
push
push
in
clc
icebp
stos
add
lods
into
dec
push
repnz
iret
or
jb
mov
gs
enter
subb
cmp
cmp
adc
fimull
jb
incl
insl
loop
out
and
iret
scas
sub
inc
lret
xchg
xor
mov
fisubs
out
jno
push
pop
sbb
pop
adc
jg
mov
ljmp
call
repz
sti
mov
addr16
pop
sub
mov
jb
mov
out
shll
fdivrs
mov
xlat
xlat
push
ret
pop
adc
lods
or
pop
outsl
outsb
sti
movsb
js
fs
insl
hlt
repnz
or
ja
mov
call
aam
es
scas
push
xor
sub
fmuls
push
int3
notb
outsl
or
pushf
rcll
pop
pop
imul
cmp
xchg
jae
jo,pn
sub
sub
mov
push
outsl
mov
mov
sbb
movsl
lret
fbstp
jne
insb
dec
into
bnd
and
aad
push
xor
test
jns
inc
sbb
xchg
mov
sti
bnd
outsl
cmp
inc
pushf
inc
jns
in
add
fstps
xchg
pop
js
lods
xchg
or
jbe
sti
mov
out
test
adc
adc
dec
lds
lea
inc
int3
daa
push
mov
pop
mov
fnstcw
cltd
pusha
mov
lea
push
inc
ljmp
lock
inc
push
and
stos
mov
fisubrl
scas
push
sbb
pop
test
mov
inc
dec
stos
dec
mov
fldcw
and
fidivrl
dec
cmp
test
repnz
out
push
add
push
fs
test
test
sub
mov
fadd
movsl
rcrl
pop
popa
movsl
xlat
mov
in
and
sahf
push
jnp
call
or
xchg
push
rcll
ja
dec
sub
aam
push
imul
xor
stos
xor
fiaddl
push
mov
push
mov
sub
jo
mov
cmp
out
outsl
fstp
fucomip
jns
mov
dec
test
dec
sarb
ja
mov
mov
in
pusha
mov
jmp
cltd
outsl
shll
mov
pop
push
mov
ja
call
cmp
pushf
mov
inc
int
cwtl
cmp
sub
sahf
inc
jge
ret
aam
out
or
xor
std
shlb
hlt
loopne
int3
mov
mov
mov
xchg
inc
pop
aad
shl
popa
push
bound
scas
jae
pop
sbb
xchg
pop
gs
cmpsl
imul
mov
hlt
mov
aad
ss
xor
cmc
cmc
aas
sub
pop
aad
stc
mov
jbe
ljmp
mov
pop
sti
jb
xchg
mov
push
outsl
sub
adc
dec
fdivs
repz
test
jns
jno
lahf
sbb
fcoms
pop
test
fnsave
lods
fadd
lock
loope
adc
stos
sbb
xchg
cmp
jae
jle
cmp
pop
icebp
sbb
pop
movsb
push
mov
mov
xchg
push
push
fsubr
mov
xor
sarl
add
mov
sub
pop
sbb
fcomp
addr16
js
adc
dec
test
inc
xchg
jle
out
sub
popa
int3
add
inc
pop
enter
add
sbb
dec
out
jg
in
call
xor
mov
fldt
or
xchg
jle
std
jbe
mov
cli
jmp
stos
pusha
leave
repz
mov
mov
cmc
sub
lds
mov
sub
test
mov
jg
xor
ja
rcll
idivb
inc
inc
xor
mov
lret
inc
jl
and
add
pop
jnp
push
mov
ljmp
xor
outsl
leave
push
mov
iret
in
std
pop
push
and
cmp
cmp
sub
adc
sahf
mov
out
scas
fnstenv
pop
and
fwait
mov
mov
adc
mov
jge
cli
xchg
pop
in
incl
imul
or
sahf
jns
test
mov
jp
sbb
and
in
movl
adc
icebp
negb
jae
in
mov
mov
jbe
dec
jb
cmp
inc
arpl
ret
jmp
inc
fstp
push
lea
jns
pop
push
fstl
arpl
inc
dec
and
ret
or
enter
ss
subl
pop
inc
fmul
mov
nop
daa
shlb
mov
adc
movsb
nop
shl
pop
insb
mov
bound
cmpsb
js
fucomp
test
outsl
jns
sbb
mov
decb
cwtl
out
in
cmp
loop
pusha
sbb
or
nop
mov
pop
dec
dec
and
stos
fwait
pop
inc
xchg
cmp
xor
mov
xchg
int3
mov
hlt
cmp
das
mov
popf
jecxz
xchg
movsb
inc
or
dec
add
mov
sub
xor
inc
jae
jb
jge
push
inc
dec
shlb
lret
jno
mov
mov
push
js
cmp
cmp
xor
aaa
mov
and
jbe
lods
ljmp
es
xor
mov
or
add
leave
addr16
pop
pushf
out
out
or
fisttps
in
ffreep
push
movsl
loop
popf
push
cwtl
cmp
cmp
test
push
inc
adc
push
push
mov
sub
inc
fistl
lods
jnp
jns
mov
xchg
out
xchg
sub
mov
add
sets
out
arpl
mov
mov
inc
cmp
in
jle
jae
out
and
lock
iret
nop
mov
rclb
xchg
or
stos
notb
lcall
sub
cltd
and
dec
arpl
arpl
sbb
leave
jle
mov
mov
std
xlat
mov
pop
test
aam
mov
mov
xchg
dec
aam
cmp
and
cli
inc
fs
lahf
cmpsl
notl
mov
popf
mov
or
dec
rorb
das
mov
lea
add
mov
or
sahf
pop
push
push
cld
out
pop
jne
or
lock
out
add
test
fstpl
sbb
cmp
push
or
into
or
test
cli
les
add
jge
mov
ret
and
icebp
jmp
shll
adc
scas
and
cmp
mov
mov
mov
cwtl
or
repz
ljmp
xor
mov
daa
aas
mov
mov
rcrl
jg
add
sarb
lret
mov
jp
and
mov
push
dec
clc
jno
sti
xchg
push
imul
mov
xor
mov
ja
out
push
insl
js
push
test
mov
pushf
lret
push
adc
hlt
adc
xchg
or
and
add
fidivl
sbb
test
pop
jbe
mov
stos
or
ret
dec
push
fmulp
or
out
or
dec
ss
xor
jae
push
int
negl
aas
pop
fimull
fwait
enter
add
icebp
nop
mov
aad
call
mov
fs
mov
adc
adc
adc
mov
dec
xor
stc
pop
pusha
or
test
stos
out
add
cmp
aaa
jb
aam
pop
sbb
push
or
in
out
mov
sti
mov
aad
xchg
push
push
imul
in
cmpsb
cld
loop
lahf
test
aad
push
add
je
dec
push
cmc
xchg
jae
jecxz
pop
stos
out
test
aam
push
inc
sbb
xor
into
mov
and
push
lret
xchg
test
ffreep
adc
push
fisubrs
cmpsl
sbb
shlb
repz
pop
mov
movsb
push
je
movsb
mov
dec
iret
cmpl
inc
inc
ljmp
dec
insl
xor
addr16
xchg
sar
pushf
insb
and
loope
xchg
cmp
add
leave
mov
push
stos
and
sub
inc
test
daa
sbb
and
fisttpl
mov
inc
cmp
outsb
mov
js
cmpsb
adc
and
or
loopne
push
jecxz
pop
outsl
sbb
loopne
mov
imul
adc
ficoms
jns
andl
cmp
shll
sub
pop
outsb
outsb
inc
test
xchg
sub
mov
in
mov
xchg
fwait
cwtl
pop
mov
xor
sbb
jmp
std
sub
loope
mov
adc
ret
ljmp
add
and
dec
test
push
jmp
sbb
scas
mov
popa
gs
dec
add
mov
test
sub
add
mov
bound
loope
fisttpl
add
pop
mov
push
xor
cmp
inc
pop
cwtl
cmpsb
xor
mov
repz
inc
fnstenv
ret
mov
jbe
mov
aaa
scas
mov
mov
fimull
mov
adc
movsb
mov
and
mov
aad
dec
pop
adc
adc
pop
out
cmp
loop
data16
xchg
scas
xor
sub
or
xlat
into
cwtl
adc
popf
fs
fdivp
inc
dec
leave
leave
jge
xchg
adc
das
mov
mov
pop
fs
add
inc
ljmp
fldt
adcl
ss
push
mov
das
cltd
decb
dec
repnz
mov
stos
push
mov
aad
cmp
shrl
ds
test
sbb
and
jno
roll
and
sub
sbb
mov
ret
mov
lret
add
xchg
je
mov
into
mov
xor
icebp
stc
mov
lock
mov
ss
enter
mov
cmc
rcll
xor
shll
or
loopne
jae
hlt
jae
fcoms
clc
inc
shrl
xchg
clc
cmp
sub
shlb
dec
pushf
lret
aas
lcall
clc
daa
cmp
mov
push
sub
test
dec
call
iret
lcall
test
scas
and
orl
push
xor
test
stos
jo
je
hlt
mov
sarb
imul
popf
ds
mov
out
ljmp
sti
add
adc
test
roll
mov
movsb
imul
les
inc
sti
in
jle
dec
adc
dec
mov
cmc
scas
dec
add
je
mov
clc
call
mov
mov
push
cwtl
xchg
lahf
xor
xchg
mov
imul
mov
jo
mov
lds
jae
or
hlt
jnp
in
xchg
clts
mov
sarl
js
mov
ss
inc
and
stos
imul
ret
pop
lret
cmp
sub
imul
int
xchg
push
push
add
xor
push
jg
jnp
in
out
popf
loopne
inc
in
dec
sub
or
mov
xor
and
jo
pusha
out
es
sbb
sti
pop
out
lahf
in
mov
lcall
repz
pop
pop
cmp
test
aam
rorb
pop
pop
mov
pop
mov
sbb
lret
or
adcb
pop
and
rcrb
jb
pop
push
jb
out
dec
or
es
clc
and
sbb
and
xor
mov
shll
xchg
movsl
in
add
xor
pushf
fisttpl
xchg
inc
out
sub
stos
mov
xor
push
cwtl
jle
mov
xchg
pop
jbe
lods
and
xor
lds
js
paddusb
sbb
adc
iret
imul
jecxz
push
mov
ret
test
pop
xor
std
xchg
bound
fs
push
xchg
pop
popa
sti
out
mov
xor
scas
jb
mov
mov
lods
cmpb
repz
mov
mov
xchg
cmpsl
cmp
fsubl
adc
mov
pop
sti
ss
sub
iret
adc
cmp
lock
jle
xor
fstpt
mov
cmp
fwait
lret
xchg
mov
xchg
xlat
pusha
dec
mov
xchg
stos
inc
loope
push
hlt
jnp
lods
adc
testb
aas
or
fsub
mov
mov
movsb
jb
cmp
jo
inc
add
xchg
pop
push
xor
lret
cmp
pop
divl
call
sub
pop
cmpsb
out
shll
xor
inc
mov
sbb
xchg
cmp
out
int
frstor
jnp
test
jmp
dec
in
cmp
pop
je
int
sbb
or
fiadds
loopne
data16
lods
lret
jmp
push
lock
int
add
shlb
fidivrs
xchg
add
sar
pushf
dec
mulb
and
test
fldl
insl
pop
test
sbb
int
push
sub
repnz
adc
sbb
or
lea
jge
das
add
rcrb
inc
or
xchg
lds
jecxz
xor
test
in
js
popf
push
jae
inc
sti
mov
xchg
xchg
cli
cmp
sahf
add
push
mov
mov
jecxz
jns
sbbl
aas
test
adc
or
and
push
add
xchg
insb
fnstcw
jb
mov
cli
dec
mov
xor
sub
adc
push
inc
pop
test
dec
pop
clc
push
movsb
stos
sub
dec
add
or
popf
and
inc
sub
pop
fisubl
gs
mov
popf
cmpsl
int3
pop
insb
and
fmull
push
push
addr16
hlt
bound
movl
nop
jnp
fucom
sbb
inc
icebp
int3
es
aad
mov
cmc
jecxz
jmp
jbe
loop
pop
in
clc
cmp
push
dec
pusha
sub
icebp
jecxz
arpl
mov
lcall
gs
popf
pop
mov
shlb
inc
mov
xchg
out
fwait
mov
mulb
dec
lret
jne
test
shrb
sarl
call
push
inc
outsb
xor
and
xlat
outsb
cmp
jp
cwtl
push
mov
dec
inc
in
dec
mov
in
cld
lret
push
in
push
pop
fdivrs
dec
repz
pop
xchg
clc
aaa
lahf
xor
outsl
cs
in
xor
repz
inc
idivl
loop
adc
jmp
xchg
add
je
jmp
sbb
stos
dec
int3
cmpsb
xchg
adc
cwtl
and
mov
dec
call
shr
sub
int3
dec
cmp
rcll
xor
cmpsb
stos
nop
fwait
fwait
inc
mov
mov
mov
std
ss
movsb
mov
push
lahf
cs
dec
sbb
xchg
lcall
xchg
dec
adc
dec
sbb
in
pop
out
pop
les
pop
pop
mov
mov
xor
mov
jns
inc
in
or
sbb
push
data16
sahf
xchg
xlat
mov
stos
lahf
enter
fisttpl
ja
inc
lds
pop
push
mov
mov
mov
add
enter
dec
data16
outsl
sub
mov
stos
out
sub
or
xabort
mov
out
fwait
dec
pusha
pusha
popf
lahf
daa
repnz
repz
xor
ret
push
sar
cltd
fwait
inc
xchg
shlb
mov
out
rcl
and
sub
int
mov
insb
sub
sti
xchg
sbb
icebp
xor
ficoml
mov
inc
push
and
nop
jnp
sbb
negb
jno
xchg
mov
stc
cmc
push
les
jg
xchg
lods
imul
nop
out
inc
addl
sbb
in
ret
jle
xor
inc
push
idivb
or
sbb
push
cs
fadds
fs
hlt
incl
push
jp
inc
fnstcw
fwait
sub
mov
jae
dec
popf
mov
push
imul
cmpb
outsb
and
jae
lea
ljmp
cltd
ret
jge
or
adc
add
pop
add
mov
daa
aam
or
jecxz
lods
or
or
inc
imul
xchg
pushw
adc
mov
js
and
aaa
bound
add
sti
push
gs
dec
sbb
in
push
fcomip
ss
xchg
xchg
inc
jne
jge
sbb
ret
xchg
repz
ret
ret
clc
dec
fidivrs
data16
jg
test
js
orl
and
mov
shlb
les
inc
decl
movsb
push
pushf
xlat
or
sub
rcr
icebp
cltd
jg
mov
mov
loopne
push
sti
mov
add
lret
js
fldcw
and
nop
pop
push
ss
dec
inc
adc
mov
imulb
or
cld
pop
pushf
mov
sub
in
mov
xor
xchg
and
test
adc
dec
sub
and
test
lahf
add
loopne
mov
mov
addr16
div
ret
sub
int3
roll
xchg
mov
out
cltd
sub
int
adc
leave
faddl
ss
or
shrb
xlat
and
cltd
push
into
inc
mov
sub
jno
inc
jbe
mov
inc
iret
add
mov
mov
in
lahf
in
shlb
and
cmp
inc
inc
xchg
xlat
icebp
movsl
xlat
rol
xor
jno
sbb
into
lahf
mov
cmp
fptan
lock
xchg
push
cmp
ret
roll
inc
test
push
dec
push
paddsb
lods
xor
xlat
add
sub
xor
xchg
dec
mov
fsubs
stc
ss
push
lds
mov
mov
sbb
cmpsb
and
fildll
mov
shl
inc
adc
xchg
mov
xor
hlt
and
pushf
int
mov
int
pop
enter
subb
gs
xlat
insb
fcoms
xchg
or
push
adc
rcll
imul
je
inc
fincstp
or
rcll
je
sbb
push
sbb
loop
push
fildll
xchg
mov
imul
push
xchg
mov
int
xchg
enter
mov
repnz
jae
gs
imul
out
jbe
ds
stos
inc
cwtl
dec
or
xchg
xchg
inc
or
pop
cwtl
int
push
int3
xor
xor
aam
sbb
movsb
and
fsubrp
cmp
xchg
pushf
xchg
outsl
push
pop
cwtl
pop
dec
push
lds
pop
daa
inc
stc
dec
inc
push
push
or
cld
mov
mov
adc
and
xchg
or
add
cltd
cmp
mov
sub
sahf
sub
out
aaa
and
sub
pop
das
jns
adc
xchg
adc
fsubs
or
jb
shrb
leave
sbb
in
std
add
inc
bound
mov
xor
mov
xor
outsl
sbb
jnp
mov
xchg
stos
jg
inc
test
subb
out
mov
pop
jns
push
popf
mov
adc
push
cwtl
push
and
testb
sbb
insb
cmp
mov
sub
inc
push
mov
inc
mov
ss
jnp
int
leave
loopne
xchg
aam
xchg
dec
inc
fistpl
dec
sub
add
inc
inc
faddl
mov
mov
in
in
jae
es
jge
movsb
pop
call
out
out
mov
lds
sub
aaa
lret
jg
pop
ret
test
and
ja
add
decl
popf
mov
outsb
and
clc
and
xchg
sub
xor
cltd
and
adc
add
loopne
popf
add
loopne
add
lock
cmpsb
lret
mov
jmp
jbe
ljmp
rcrb
push
fistl
pusha
lret
fsts
in
or
mov
push
mov
dec
pop
pop
enter
into
adc
mov
xor
xor
push
into
jae
movsl
movsb
and
jo
les
push
mov
sub
rolb
and
cli
mov
int3
push
sbb
out
dec
cmc
repz
cmc
lcall
jp
ds
pusha
lods
lret
pop
enter
sub
sub
or
dec
pop
mov
mov
vmwrite
adc
adc
bound
adc
mov
mov
mov
push
imul
and
dec
fbstp
dec
pushf
dec
push
stos
test
xchg
cld
imul
add
mov
ret
cs
fcoms
in
and
data16
addl
mov
xlat
add
jb
jge
jmp
adc
call
sbb
mov
xchg
mov
sub
add
les
mov
or
mov
inc
inc
jns
scas
pop
rcll
and
aaa
xchg
adc
cmp
aas
adc
and
ret
sub
addr16
fwait
push
or
mov
xchg
inc
into
lret
dec
lcall
cld
push
data16
in
lret
cmp
test
pop
fcomps
insb
ss
test
pop
cmp
push
sbb
jnp
mov
pop
mov
dec
cmpsl
inc
mov
dec
jne
lea
mov
adc
and
scas
sahf
jl
cmpsb
fadd
pop
pushf
js
mov
xor
jl
in
ret
add
lea
fs
sub
loop
xor
xlat
sbb
test
or
dec
pop
in
xor
dec
xor
adc
mov
clc
push
mov
out
stc
mov
cmp
mov
cmp
xor
push
scas
ficomps
mov
pusha
popa
data16
or
ljmp
test
insb
pop
adc
sub
pop
hlt
adc
out
mov
pop
xlat
sbb
ret
cmp
mov
leave
loop
jp
mov
mov
mov
or
gs
pop
aaa
and
sub
push
cmp
cld
push
or
stos
leave
adc
mov
sarb
imul
mov
in
test
or
mov
xchg
in
flds
adc
mov
jp
jecxz
shll
pushf
jb
add
and
out
icebp
ljmp
push
rcl
sbb
rclb
inc
xchg
imul
jecxz
aam
movb
sbb
push
fnstenv
test
shrb
jns
mov
or
xchg
movsb
jle
mov
int
divl
mov
ja
rorb
pusha
xor
push
push
clc
add
test
sbb
mov
pop
add
pop
adc
dec
push
xchg
mov
mov
cld
ss
jge
mov
xchg
adc
dec
mov
jecxz
pop
jp
xlat
aad
test
add
scas
xor
pop
std
addl
jb
sbb
push
imul
lods
inc
pusha
jnp
les
jle
adc
jae
or
dec
enter
xor
cld
mov
mov
fs
mov
sub
iret
jns
xchg
add
loopne
arpl
pushf
push
lock
scas
sbb
pop
popf
das
cmc
cmovo
notb
pop
call
pop
shll
sub
test
pop
push
jmp
pop
mov
imul
mov
push
push
sbb
cmp
adc
xchg
inc
push
sbb
jbe
and
adc
mov
inc
fdivl
push
mov
into
mov
aam
mov
mov
adc
fistpl
aas
movsl
jmp
ror
dec
fmul
mov
daa
sbb
cltd
sti
cmpb
daa
xlat
fcomip
xchg
iret
movb
push
push
or
mov
xchg
xchg
dec
mov
daa
sbb
sub
sub
popf
out
lods
or
push
aaa
mov
ds
ja
jnp
fwait
push
or
mov
sbb
rolb
jecxz
pop
out
sar
pusha
push
hlt
cwtl
leave
push
in
js
stc
inc
enter
daa
popf
stc
pusha
inc
and
xor
mov
xor
add
scas
mov
push
xlat
out
stos
push
add
and
out
push
out
imul
in
lods
adc
clc
push
pop
lea
push
bound
and
sbb
lret
pop
cmp
pop
loopne
fucomi
arpl
mov
mov
and
loop
sub
lods
pop
push
fwait
inc
lds
lods
lcall
cmp
pop
fwait
cwtl
rorl
mov
xchg
jg
dec
mov
outsb
js
call
fldt
lock
fwait
sti
mov
sbb
fnstsw
sbbl
mov
int
insb
inc
cmp
daa
jns
into
movsl
and
imulb
push
push
sub
push
imul
loope
mov
ret
xor
sahf
insl
jnp
cmpsl
pop
gs
pop
cmpsb
in
leave
pop
clc
cmp
mov
lods
jae
loop
movsb
mov
mov
pop
jne
add
push
lock
movsb
mov
fs
jo
pop
xor
mov
das
lahf
imul
insl
dec
mov
xor
or
add
movsl
push
shlb
add
adc
inc
lret
out
jle
addr16
inc
xchg
fs
out
ljmp
imul
stc
xor
xor
inc
adc
sbb
das
adc
popa
pop
cmc
movsl
sti
inc
adc
cmpsl
mov
movsl
xchg
and
testl
shll
out
ror
xchg
adc
jnp
mov
addr16
mov
and
xchg
adc
das
popa
cmc
cmp
add
lods
std
test
pop
dec
inc
fdivrs
dec
xor
rol
xorl
iret
push
mov
rcrl
or
ljmp
scas
adc
push
dec
jg
jmp
xor
mov
imul
and
push
insl
mov
subb
cvtps2pd
sti
sub
xchg
pop
sub
adc
mov
ffree
out
daa
scas
inc
jns
push
sahf
movsb
xchg
mov
inc
jl
add
jle
adc
xchg
ret
mov
mov
or
out
mul
stc
in
lret
xor
push
outsb
xchg
lock
cli
pop
hlt
mov
scas
arpl
lds
xchg
icebp
and
mov
dec
mov
sub
test
dec
mov
dec
adcb
ret
stos
xor
mov
test
push
pop
adc
sub
mov
mov
dec
pushf
int3
negl
cmp
sti
jge
mov
and
icebp
daa
arpl
mov
shrd
gs
cmp
loopne
jns
std
push
adc
insb
outsl
mov
inc
mov
add
ficomps
lods
mov
daa
push
mov
xor
pop
pop
daa
mov
inc
pop
xchg
mov
lds
popa
es
sbb
sarb
push
scas
xor
movsb
mov
lcall
inc
fwait
rcl
add
adc
lahf
insb
shr
mov
outsb
fldt
push
bound
jno
or
hlt
and
pop
pop
add
mov
ds
mulb
pop
pop
imul
push
cmp
mov
jb
push
inc
cwtl
pop
aam
outsb
stc
addr16
enter
xchg
lock
mov
iret
fs
ljmp
pusha
cmp
mov
enter
jmp
inc
jne
fbstp
lret
mov
pop
mov
movsb
cmpsl
sbb
dec
xchg
cltd
jle
js
or
push
sub
adcb
pop
aaa
pop
arpl
push
jp
bound
lcall
fmul
jecxz
inc
repnz
xchg
aaa
in
insl
outsb
stos
or
icebp
cmp
xchg
mov
xchg
es
add
jmp
sbb
js
xchg
inc
jmp
cmpsl
inc
cmpsl
jle
add
pop
pusha
add
leave
int
jle
mov
sub
sbb
clc
and
push
stos
inc
addl
int3
pop
aaa
xchg
mov
push
add
nop
and
icebp
divl
insb
xor
sti
ret
popa
cmp
sub
orb
ficompl
cmp
ret
sbb
pop
push
dec
scas
mov
add
fdivp
div
mov
std
push
cmpsb
adc
fdivp
mov
xchg
mull
clc
xchg
movsl
lahf
and
mov
mov
shlb
or
adc
adc
and
cmp
clc
jo
sbb
inc
pop
push
cmp
mov
cmp
jl
push
adc
pop
push
adc
ljmp
mov
enter
cmpsl
pop
rolb
mov
ret
imul
outsb
rol
nop
or
dec
cmp
adc
mov
pop
lret
out
sub
jge
jl
sahf
imul
xchg
add
popf
add
adc
add
mov
mov
lret
or
cs
mov
imul
jg
sub
sbb
dec
push
adc
pop
sbb
stc
pop
int3
inc
xchg
popa
push
loop
dec
inc
addb
out
clc
cld
dec
mov
inc
or
pop
add
ret
pop
insl
clc
push
bound
out
mov
test
xchg
jge
jb
cld
pop
sbb
adc
mov
sbb
cmp
push
xchg
je
ret
sbb
and
dec
cmc
pop
out
leave
sub
sub
out
iret
jp
cmp
sarl
fcoml
lods
jg
ret
in
lret
mov
les
cmp
int3
mov
clc
jle
sbb
popa
fnsaves
nop
cs
std
adc
cwtl
out
or
loopne
imul
ljmp
inc
cmc
pop
iret
push
mov
lock
into
lods
jmp
popa
in
into
dec
jp
push
dec
add
popa
add
jge
rclb
push
int
imul
call
jo
les
lahf
dec
jg
dec
ja
pop
mov
pushf
popa
cli
out
push
cmp
fwait
addr16
add
jns
xchg
adcl
fs
out
lahf
scas
sbb
daa
std
inc
pop
mov
mov
xlat
xchg
mov
aad
xchg
jnp
mov
test
fwait
lods
das
ret
les
jmp
or
jae
test
cs
and
cmp
leave
push
push
xor
icebp
fnstcw
push
outsb
filds
stos
and
jle
sub
outsl
jo
and
test
cmp
arpl
subb
mov
lods
or
mov
data16
dec
into
out
push
subb
mov
pop
ljmp
dec
in
leave
jmp
lods
mov
mov
in
imul
xchg
movsl
les
leave
enter
mov
mov
das
pop
sbb
aaa
push
sbb
push
jne
js
cwtl
adc
int3
fstpt
push
jbe
push
int3
xchg
pop
or
ss
or
add
fdivl
push
dec
sahf
cmc
stos
mov
xor
inc
dec
mov
sar
mov
addl
mov
cmpsb
lods
cmp
js
leave
xor
and
jno
inc
inc
adc
out
jno
mov
pop
mov
adc
loopne
mov
movsb
mov
mov
pop
arpl
pop
sub
in
add
mov
pushf
ror
and
jmp
cwtl
aas
and
mov
lock
mov
mov
inc
aad
xchg
jae
in
insl
btc
cmp
insb
adc
mov
cmpsl
cmp
int3
lahf
rcrb
arpl
leave
lcall
or
push
enter
cmp
rclb
add
enter
clc
imul
cmp
jno
mov
dec
add
pop
lret
sub
pop
add
and
add
inc
into
popa
lret
mov
ja
sbb
repz
xchg
dec
jle
xchg
loope
adc
push
lods
out
pop
ljmp
cmp
pop
leave
insb
daa
mov
inc
int
movsb
cmpsl
inc
cld
or
adc
inc
fldt
jno
jp
xor
mov
lcall
xor
mov
jmp
fs
jle
jnp
pop
or
xchg
sbb
jmp
sub
jecxz
push
in
xor
dec
cmp
jp
xor
push
push
mov
sbb
push
sbb
rcl
shlb
icebp
jnp
es
out
lods
mov
imul
push
push
mov
xchg
ds
mov
out
aad
je
aad
leave
clc
dec
mov
fstl
pop
ja
adc
xor
int3
xorl
daa
add
sbb
jb
shr
dec
mov
xchg
ds
in
divb
pop
push
cmp
pop
in
pop
outsb
int3
or
out
shl
rorb
lahf
dec
jl
mov
sub
xchg
lahf
ja
outsb
and
push
insb
mov
mov
cltd
mov
sub
push
popf
sbb
push
fidivl
dec
movsl
xor
in
mov
bound
test
adc
xchg
dec
inc
in
cmpsb
testl
fcoms
pop
out
jae
cmp
push
rclb
dec
es
stos
inc
mov
fisubrs
addr16
mov
jle
push
lods
scas
mov
addl
cmp
test
ja
cltd
int
and
cmp
in
push
xchg
mov
push
in
icebp
mov
jbe
mov
cmp
pop
mov
xor
xchg
mov
clc
shlb
lret
cld
push
les
pop
push
inc
add
xor
mov
jb
fbstp
mov
inc
arpl
inc
je
filds
das
stc
movsl
fbld
popa
dec
jle
push
mov
and
push
mov
sub
shll
leave
movsl
lret
dec
or
mov
dec
notl
shl
xchg
test
cmp
mov
inc
fldl
push
fs
neg
fnsave
call
jle
in
mov
pop
stos
mov
out
pop
sti
and
mov
loope
inc
call
inc
mov
sub
pop
frstor
xchg
mov
and
int
std
or
jmp
cld
shlb
sahf
sbb
inc
out
and
add
fucomi
enter
loope
mov
jno
pop
mov
into
lods
sub
aam
pop
xor
xchg
out
inc
inc
cmp
inc
xor
int3
push
dec
aam
loopne
sti
test
int
push
addb
adc
aas
mov
lahf
jno
js
inc
xor
mov
divb
cmpsb
push
popf
push
mov
out
lds
aad
push
nop
ljmp
pop
fwait
scas
pop
imul
insl
dec
xchg
cmp
xchg
rcrb
jb
dec
pop
add
loopne
in
push
js
or
mov
jge
sahf
pusha
lcall
fcompl
or
mov
lock
out
pop
leave
inc
sub
cld
jp
repz
jo
sub
pop
pushf
sbb
pop
sub
call
xlat
jno
sub
sbb
clc
dec
mov
sahf
sbb
mov
fwait
add
movsl
in
mov
insb
add
xor
push
xchg
orb
dec
push
enter
mov
out
mov
push
xchg
flds
push
gs
lods
stc
xchg
adc
push
insl
sbb
jne
in
adc
ret
scas
jecxz
cmp
icebp
test
fidivrs
pop
mov
sub
xchg
repnz
and
mov
jo
mov
dec
or
icebp
loop
sbbl
mov
insl
cmpsb
outsb
mov
fnstenv
je
adc
mov
arpl
sbb
sub
pushf
sub
rep
push
mov
call
jo
rolb
je
mov
pop
mov
and
pop
cmc
sti
mov
fldl
imul
in
sar
push
popl
out
add
popf
pop
aam
sub
mov
xchg
xchg
in
sbbl
mov
adc
jbe
idivl
sar
jecxz
repnz
push
in
loope
imul
inc
mov
cmp
push
inc
out
ret
enter
nop
xchg
in
mov
jb
dec
and
outsb
xchg
cltd
ds
fiaddl
mov
inc
cmpsb
mov
jbe
sub
push
lds
cmpl
push
pop
jo
aas
arpl
testb
pop
pop
cmpsb
mov
xchg
pusha
lods
fs
bound
lea
mov
sbb
notb
cli
sbb
inc
cli
jo
cmovp
push
push
push
fidivrs
push
lret
cmc
mov
xor
outsl
inc
fldl
repz
fs
and
pop
in
cmpsb
mov
mov
cmp
pop
fisttpll
dec
adc
mov
and
xchg
fcmovbe
mov
push
push
pop
test
adc
or
stos
imul
mov
cwtl
sti
cltd
push
inc
mov
fldcw
adc
in
aaa
clc
inc
ret
addr16
xor
or
pop
cmp
mov
lea
dec
jb
inc
dec
popf
stos
push
leave
les
mov
pop
jle
and
fwait
pushf
xor
je
sub
xchg
mov
inc
cltd
mov
sbb
mov
and
jl
inc
ror
sub
xchg
outsb
aaa
sbb
jmp
xor
or
xor
dec
pop
push
into
mov
nop
jp
xchg
sub
sbb
in
sbb
xchg
sbb
jg
add
test
push
adc
dec
call
loope
jne
mov
push
or
adc
sbb
add
mov
pushf
mov
add
cmpsl
mov
mov
cmpl
nop
adc
sbb
xor
dec
fwait
mov
inc
test
mov
xor
mov
ja
or
into
inc
push
sbb
pop
inc
xchg
aad
xchg
sub
iret
and
pop
cmc
cmpsb
adc
or
lea
fldcw
push
mov
mov
scas
fwait
pop
push
call
add
imul
xchg
xadd
cmc
arpl
sub
insl
frstor
movnti
fiaddl
cmpsl
cld
int3
xchg
es
mov
lock
cmpsb
mov
xor
inc
iret
or
push
adc
in
and
pop
add
loop
fdivr
jmp
mov
enter
mov
jp
loop
xor
es
cmp
shl
sbb
es
mov
xor
arpl
sub
inc
jp
jp
or
int
daa
inc
in
ljmp
cltd
sbb
add
das
dec
movb
jae
and
or
cwtl
xchg
xchg
shrl
push
jmp
xchg
repz
xchg
xor
mov
xchg
jb
adc
stc
adc
lcall
push
ds
sub
stos
in
add
call
jg
imul
lea
hlt
adc
mov
lds
mov
das
sbb
shlb
into
jl
int3
mov
dec
sbb
add
or
nopl
arpl
std
pop
clc
push
mov
push
push
mov
and
jbe
out
xor
call
inc
xor
pop
adc
imul
xchg
lea
mov
mov
mov
subl
push
arpl
fwait
dec
cmp
lock
xchg
inc
test
push
cld
int
xor
lret
lea
call
andl
mov
sbb
les
mov
faddl
xchg
std
rclb
test
adc
leave
sbb
nop
push
mov
ret
call
jns
paddd
push
rclb
aad
shll
push
xchg
sub
pop
dec
mulb
rorb
or
jns
ficomps
xor
lods
cmp
xor
hlt
test
out
popa
out
imul
sub
inc
or
aad
movsb
shl
add
mov
cmp
lcall
xor
jae
jno
movsb
inc
mov
dec
insl
je
imul
popf
dec
push
test
fisttpl
sub
jle
jmp
repnz
or
lahf
push
mov
in
iret
cwtl
aaa
inc
les
lods
aaa
push
test
xchg
lea
je
sbb
adc
testb
inc
fisubl
or
dec
and
mov
dec
push
jb
fnsave
test
xor
js
jae
pop
gs
sub
out
cld
jb
pop
add
add
andb
fwait
popf
push
insl
lahf
and
add
mov
pop
pop
cmp
jle
sar
inc
insl
jecxz
add
xchg
sbb
lcall
add
sarl
add
pusha
push
inc
mov
repz
outsb
cmpsb
push
movsl
subb
test
push
jo
sti
cmpsl
in
adc
sub
adc
fistl
sub
fisubrl
mov
pop
and
fadds
sub
and
test
mov
cmp
loope
cmp
mov
ficoms
jp
movsl
sbbb
and
mov
fnsetpm(287
imul
mov
outsl
mov
clc
pop
adc
iret
pop
pop
movsl
and
out
loopne
push
sub
jle
leave
mov
nop
pushf
sar
mov
dec
push
cmc
dec
roll
jecxz
scas
mov
out
and
lcall
push
push
shr
adc
das
mov
xchg
loopne
lods
mov
pop
lods
rcl
xchg
mov
fistpl
sub
dec
mov
mov
mov
shlb
mov
jns
or
ja
xor
sub
les
xchg
jle
mov
and
cltd
cmp
ljmp
xor
lret
rcl
mov
out
or
rcrb
data16
pop
add
cmp
inc
negb
inc
test
push
and
mov
stos
or
addb
shll
ds
xor
rcrl
popf
dec
jb
mov
mov
icebp
xchg
xlat
into
dec
clc
repnz
aaa
ret
xor
dec
and
test
sub
xchg
pop
mov
lods
fdivrp
adc
or
and
cmp
ja
or
dec
lahf
scas
push
inc
xchg
push
inc
stos
inc
add
pop
fs
pushf
push
ror
bnd
mov
or
adc
and
add
testl
jle
pop
data16
shll
jecxz
cltd
ljmp
mov
loope
lods
dec
sbb
out
cld
or
mov
push
push
push
jg
sub
mov
adc
popa
sub
fs
pop
xor
lock
pop
lret
lea
and
inc
js
push
push
push
add
lcall
scas
or
add
cmp
xor
scas
mov
loope
sub
pop
ja
lock
movsb
jecxz
stc
jno
mov
fwait
mov
mov
fsubl
push
fisubrl
in
in
in
jle
jge
mov
out
xor
testb
lret
jo
popa
cwtl
test
push
inc
pop
pop
pop
mov
xor
inc
pusha
ret
xor
stos
or
jle
or
lods
sub
stos
push
out
inc
cwtl
js
inc
daa
pusha
adc
notb
jmp
adc
arpl
sub
and
sbb
push
or
push
negb
xor
and
pop
jne
cmp
orl
mov
inc
mov
inc
dec
dec
and
imul
es
gs
xchg
and
xor
rorl
mov
jo
fdivl
jle
inc
popf
dec
neg
mov
xor
mov
aam
sub
mov
dec
mov
jmp
mov
aam
outsl
fwait
add
xchg
fstpt
mulb
ds
call
dec
sub
les
fcoms
fldcw
insb
and
cmp
xor
loopne
cmp
roll
mov
negl
xor
cmpb
arpl
test
sbb
xchg
fwait
inc
fwait
stos
mov
adc
xchg
iret
rcrl
pushf
cmp
ss
in
arpl
lcall
jl
fcoml
and
into
xchg
xchg
pop
into
xor
xor
icebp
cwtl
cmp
or
mov
or
fistpl
pushf
aad
jle
push
icebp
cmp
stos
imul
adc
dec
or
loopne
jg
orl
mov
inc
mov
dec
pop
xchg
lock
lea
gs
lcall
decb
dec
shlb
and
shr
es
insl
jno
dec
push
pop
sbb
lcall
cmp
mov
xor
dec
fwait
push
mov
andl
push
xor
ficomps
and
sub
or
cmp
in
into
fistl
and
in
dec
iret
pop
bound
imul
negb
bound
mov
mov
sub
sub
aas
dec
std
cmp
sahf
iret
je
fistps
mov
lock
out
and
xor
mov
fucomi
aas
push
loop
cmp
inc
hlt
fsubrs
mov
sbb
fnstcw
mov
push
mov
call
iret
pop
jl
add
int
add
jno
imul
or
aaa
dec
adc
push
sbb
jg
adc
xor
daa
dec
nop
bound
cld
mov
mov
push
arpl
and
mov
cmp
sbbb
jle
aaa
roll
scas
push
pop
jle
insl
call
mov
mov
and
cmpsl
cli
fldl
mov
int
imul
divb
push
js
mov
adc
inc
mov
push
mov
xchg
xchg
cld
lea
dec
mov
push
adc
inc
in
lahf
roll
cmpsb
insl
lds
fcmovbe
jbe
xchg
out
daa
subb
pop
jge
test
scas
bound
jae
xchg
pop
xchg
cmp
mov
daa
add
jmp
mov
mov
ss
dec
popf
daa
sub
in
mov
cmp
lcall
push
or
inc
outsl
lock
das
je
mov
loop
add
xchg
inc
mov
insb
out
xchg
movsl
mov
insb
iret
movsb
inc
xchg
bound
jle
ja
into
mov
out
mov
sbb
fidivs
xor
mov
adc
mov
push
scas
into
jbe
shr
ljmp
mov
cmp
cmpsl
xor
dec
es
inc
dec
lds
jnp
adc
clc
push
je
mov
out
mov
out
into
in
dec
and
int
inc
cli
shlb
fwait
hlt
movsb
stos
mov
mov
mov
pop
lahf
dec
daa
cld
loope
add
int3
jmp
shll
sbb
pusha
adc
and
mov
push
cmp
push
mov
add
pop
clc
inc
push
std
sub
cmp
popl
add
inc
sub
mov
in
inc
adc
jno
xor
sarb
out
adc
std
xor
add
add
rclb
xor
stc
orb
pop
jl
fwait
dec
xor
enter
cmpsb
aam
gs
ret
cmp
sbb
fisttpl
out
mov
out
xor
xchg
inc
lret
adc
xchg
mov
xor
lcall
bound
test
mov
push
pop
das
cmp
and
or
add
rorl
xor
insl
outsb
ss
pop
fsts
call
sbb
pop
jle
push
dec
leave
lret
hlt
xlat
adcl
or
xlat
jp
or
sbb
mov
jecxz
shlb
andb
lock
shlb
aas
mov
je
push
adc
je
insb
fucomip
mov
add
fwait
jg
int
push
gs
push
sub
loopne
sbb
jmp
je
cltd
ljmp
das
ds
test
dec
clc
sarl
sub
jmp
out
out
inc
es
rcll
and
rcr
cmp
mov
push
js
rorl
test
and
add
aaa
shr
shrb
gs
daa
cmp
and
lcall
adc
outsb
shll
inc
ret
pop
cld
lcall
mov
sub
xor
xor
lahf
out
scas
ficoms
cld
pop
dec
push
repnz
add
arpl
fwait
js
scas
xchg
adc
ja
xchg
cmp
andb
sbb
test
add
outsb
mov
test
test
xchg
push
pop
cmpl
jp
fstpt
inc
xchg
or
rcr
jmp
jl
mov
int
sbbl
adc
std
mov
mov
arpl
clc
xchg
insb
imul
xchg
movsb
inc
mov
and
push
jne
aad
cwtl
gs
mov
mov
rclb
shlb
addr16
ljmp
push
mov
sbb
mov
pop
pop
call
sbb
mov
insl
push
rcrl
dec
or
insb
mov
sbb
leave
rolb
inc
cmpsb
into
loopne
push
stos
adc
and
push
dec
std
movsb
arpl
bound
push
inc
adc
and
js
push
inc
movsb
mov
xlat
add
insb
test
out
jmp
xchg
and
xchg
or
add
pop
mov
xchg
cmpsb
sti
inc
jp
dec
push
lsl
or
mov
out
mov
mov
pop
or
push
mov
jns
out
push
push
add
pop
imul
mov
inc
pop
add
leave
pop
mov
nop
jae
repz
sar
push
cmp
pop
push
lea
adc
dec
cmp
cli
xor
push
jne
cli
mov
pop
mov
int3
mov
cmp
mov
mov
add
orl
les
dec
mov
mov
mov
loop
or
imul
jbe
dec
mov
repnz
add
pop
js
mov
cmp
xor
fisubrs
push
cmp
or
and
mov
je
push
test
inc
cmp
mov
shll
daa
inc
push
push
mov
xorl
xlat
js
pusha
pushf
jge
push
mov
pop
ret
push
dec
sbb
sub
and
xchg
and
inc
fcom
jmp
mov
jbe
out
cmp
fwait
mov
divl
jg
push
enter
jo
inc
sbb
stos
sub
add
or
push
pop
or
mov
mov
sbb
jae
xor
sbb
enter
loop
jb
jb
inc
ss
movb
dec
mov
xorl
cmc
push
ljmp
pusha
movsb
xor
or
sbbb
aam
imul
scas
or
push
add
push
rcl
loopne
std
or
aaa
cmp
sarl
lea
movsb
lcall
xor
xchg
sbb
mov
jb
lret
mov
pop
pop
ffree
dec
lods
daa
cmp
cltd
xor
inc
xchg
outsl
mov
dec
mov
dec
push
ret
hlt
cmp
negl
mov
sub
mov
sbb
sarb
push
iret
cmp
or
repz
pop
rcll
push
push
xor
bound
jl
push
mov
aas
jmp
fst
aad
sub
in
mov
ljmp
and
aad
ret
mov
add
sub
sbb
and
pop
repnz
xchg
xchg
inc
push
adc
lock
in
das
sub
fdivrl
push
sub
scas
imul
ss
call
ret
les
mov
push
fwait
xchg
aad
out
clc
mov
mov
fsub
fwait
aaa
adc
fdivp
icebp
stos
bnd
insl
mov
cmp
cmp
insb
in
push
imulb
in
add
cmpsl
not
push
imul
fdivs
popa
push
and
mov
mov
divl
arpl
cmp
adc
or
cs
xor
mov
and
lret
or
adc
sub
xor
js
fimull
cltd
push
mov
frstor
dec
inc
lock
cmpsb
and
adc
push
mov
aad
jns
fistps
add
imull
push
push
xor
arpl
add
repnz
inc
push
mov
xor
mov
dec
add
dec
mov
paddq
xchg
pop
lock
sub
cmpsl
and
setge
add
and
ljmp
push
lret
jno
and
icebp
mov
pop
fistpll
fsubs
das
nop
xor
adc
rolb
dec
sub
ljmp
out
pop
lods
push
fiadds
mov
pcmpgtw
mov
xchg
rclb
in
push
mov
inc
test
pop
out
in
es
in
or
xor
jmp
mov
out
imul
dec
push
clc
fisttps
pop
xchg
xor
lret
sub
inc
sbb
jae
fsubl
push
push
xchg
in
push
mov
pusha
mov
sub
loop
jecxz
mov
jmp
mov
pop
xchg
dec
popf
gs
ljmp
xorb
loope
pop
pop
cld
outsl
lcallw
jne
inc
lock
rcrb
mov
movd
fidivrs
xor
push
or
js
push
inc
testb
into
xchg
hlt
pop
add
rclb
cmp
in
lret
jle
and
aam
or
in
push
or
pop
xlat
lea
pop
es
lods
mov
add
loop
sbb
insl
push
cmp
stos
sahf
xchg
lods
cmpl
xchg
mov
inc
mov
insb
and
add
negl
sti
shll
and
ficomps
mov
repz
imul
int3
push
fs
loop
jnp
pop
pop
lret
xlat
imul
mov
movsb
ret
popa
scas
stos
push
es
cmp
or
shr
mov
xor
push
xchg
rcll
leave
adc
pop
pop
lock
mov
mov
aam
std
das
pop
dec
data16
inc
hlt
adc
int3
data16
sbbl
rcrl
adc
cmp
push
dec
adc
add
xchg
dec
cmp
fimull
rcll
pop
xor
pop
insb
dec
in
pusha
xlat
or
mov
lods
mov
push
enter
out
sahf
mov
dec
fstl
fsubrs
movsb
push
pushl
cmp
cld
cld
fwait
addr16
and
or
jb
ret
aam
or
data16
lcall
out
pop
adc
push
xchg
inc
mov
leave
xor
mov
movb
push
shrl
push
cld
addl
out
es
jle
lock
fstpt
jo
bound
or
xlat
cmp
scas
or
subl
sbb
call
push
pop
xchg
fmul
leave
and
adc
cmp
jg
loopne
xlat
add
jne
sbb
and
cmp
jnp
dec
mov
dec
adc
dec
jbe
xchg
cmp
addr16
decb
movsl
push
call
imul
pushf
adcl
xchg
ret
lret
or
test
lcall
pop
sbb
mov
lods
mov
stc
xchg
test
cli
int3
xor
test
and
ljmp
push
mov
xchg
jecxz
add
jb
adc
push
cmp
jmp
adcl
insl
rclb
push
lret
xor
mov
cwtl
pushf
stos
jbe
gs
enter
push
pop
add
mov
and
sub
sahf
movl
jnp
out
mov
sarb
adc
mov
xchg
cmp
aam
mov
sbb
stos
mov
out
xchg
aad
out
sti
sahf
mov
jg
call
jnp
push
dec
lret
xor
lods
data16
pop
xchg
mov
xor
jp
sub
imul
loopne
xchg
js
mov
in
test
lock
adc
xchg
js
shll
imul
jbe
add
clc
push
or
cld
jbe
add
inc
dec
enter
cmc
jnp
lods
xchg
xor
sbb
adc
mov
out
fcomps
leave
inc
mov
std
jle
and
mov
mov
ffreep
or
jo
rcrb
ds
cmp
jecxz
mov
cmp
lahf
mov
nop
sub
js
sbb
out
in
arpl
sub
popf
inc
sbb
jl
mov
mov
mov
add
es
adc
sub
cmp
adc
jecxz
shll
imul
jnp
mov
lods
adc
add
cmp
push
ret
sti
repnz
nop
mov
scas
mov
out
sub
repz
dec
cmp
or
fisttpl
pop
imul
push
lret
loopne
adc
mov
xchg
aam
and
enter
sbb
repz
or
scas
repnz
shr
push
mov
cltd
movsl
ss
stos
into
or
ss
mov
inc
xlat
shlb
je
out
popa
xchg
jo
lea
inc
pop
mov
and
mov
cmp
xchg
mov
mov
in
jg
icebp
dec
pop
add
lahf
and
hlt
mov
dec
ljmp
xchg
bound
out
mov
cmp
pushf
lods
sti
inc
mov
inc
dec
cmp
fbstp
lods
mov
adc
jo
or
ficompl
cltd
iret
fidivs
pushf
mov
fildll
inc
int
mov
adc
jo
mov
add
jmp
arpl
xchg
inc
jp
fidivrs
xchg
mov
ja
xchg
push
jecxz
pop
fs
jae
mov
cmp
mov
push
and
shrb
outsl
pop
roll
sbb
insb
and
dec
jmp
lcall
dec
aaa
and
sbb
nop
mov
in
in
mov
push
out
mov
andb
iret
loop
adc
pop
sbb
inc
inc
imul
in
inc
fisubrl
scas
icebp
add
testl
push
movsl
push
xchg
in
mov
sarl
insb
xchg
notl
pop
jmp
cli
xchg
out
and
mov
bnd
or
inc
mov
mov
lret
mov
int
lret
aam
push
scas
add
or
push
sbb
pop
add
xchg
or
or
fisubrl
pop
adc
pop
pop
lret
sub
sbb
sti
add
fucomi
inc
and
push
sbb
and
mov
stc
jl
out
mov
mov
jb
mov
test
mov
cmp
insl
cmp
jmp
sbb
stc
xchg
fwait
pop
bound
int
dec
data16
sahf
nopl
add
test
int
sub
and
std
je
pushf
ja
push
mov
push
adc
in
dec
js
setle
xchg
pusha
lret
cltd
pushf
push
rcrl
lock
pop
sbb
inc
sti
add
aad
push
add
popa
notb
xchg
adcb
sar
out
or
sbb
xlat
cmp
repnz
jl
pop
mov
and
call
nop
xchg
mov
jns
sub
repz
lcall
stos
in
arpl
imul
or
cmp
cmp
adc
pop
mov
push
add
or
add
or
or
in
leave
lock
inc
jne
pusha
pop
dec
ret
jecxz
dec
push
cvtpi2ps
mov
xchg
inc
pop
movsl
fst
ds
pop
fucomp
cmpsb
add
popa
lods
bound
fstps
mov
or
mov
mov
and
xchg
enter
xlat
dec
push
sti
dec
pop
shll
jge,pn
aas
add
rcrl
mov
inc
xor
jae
jl
divb
push
lods
fcos
mov
mov
pop
inc
flds
scas
mov
stos
sbb
or
cmp
fwait
add
inc
dec
sub
bound
dec
push
adcl
lahf
mov
mov
push
cmp
dec
dec
test
incl
adc
mov
movsb
ficoms
xor
xor
cmp
mov
mov
mov
hlt
lcall
sub
mov
xlat
sub
mov
xor
push
fnstsw
pusha
dec
fdivs
mov
push
mov
arpl
cli
call
or
jbe
jmp
mov
mov
fdivrl
ret
fwait
bound
into
icebp
mov
xchg
cmp
sub
xchg
faddl
sarb
add
add
cmpb
inc
mov
pop
cmpsl
js
lods
out
pop
scas
inc
pop
hlt
scas
cmp
push
lods
fistl
dec
insb
jecxz
mov
lock
test
mov
ffreep
lahf
push
hlt
mov
outsl
sub
lods
inc
mov
push
movsl
lahf
inc
fistl
jg
lods
movsl
imul
and
lret
sub
sub
push
ja
pop
fisttps
dec
inc
xor
test
sti
and
rol
shlb
movsb
xor
lock
xor
pop
add
sub
pop
sub
dec
fwait
and
icebp
mov
fwait
lds
jge
fstpl
int3
jecxz,pn
mov
mov
lahf
stc
adc
leave
cmp
push
sbb
aad
pop
mov
or
andb
lds
pop
mov
out
adc
xchg
fldt
cmpb
bnd
ds
xchg
or
pusha
xchg
mov
xchg
pop
mov
mov
bound
ljmp
leave
lods
push
push
int
push
pop
pop
test
rcrl
out
mulb
push
mov
xchg
das
mov
mov
cmp
xor
and
int3
aad
and
int
aam
xchg
sub
cmc
jo
cmpsb
and
popf
mov
popa
adc
pop
ss
or
movsb
int
imul
adc
into
pop
mov
cmpsl
pop
adc
sub
lret
jge
je
out
stos
adc
pop
jbe
pop
aad
mov
mov
es
ror
test
jge
xchg
ftst
and
or
and
push
imul
adc
push
andl
pop
stos
pop
leave
sub
adc
icebp
dec
out
cmpsl
mov
jle
shll
mov
pop
jb
xor
ret
xchg
std
and
lds
pop
fsubrp
cli
out
shlb
dec
test
xchg
sbb
cs
test
mov
mov
sarb
inc
mov
test
outsb
out
sbb
gs
popf
push
xchg
not
add
bound
or
cmp
cmp
xchg
xchg
xor
stc
pop
enter
outsl
repz
fnstcw
aas
subl
pop
mov
cmp
xchg
mov
or
ret
sahf
xor
loope
jbe
add
push
inc
lock
imul
fbld
imulb
mov
fdivrs
inc
icebp
mov
repnz
jnp
mov
mov
into
repz
mov
leave
std
push
repz
enter
mov
cmp
lea
jle
dec
pop
add
lds
sbb
bndstx
fsubrp
cli
xor
or
repz
fdivs
adc
inc
jmp
stc
dec
imul
xchg
setne
iret
loopne
pop
scas
stos
and
mov
sbb
mov
outsb
cli
popa
out
test
loop
cmc
les
xchg
push
add
dec
mov
ljmp
imul
test
jmp
aad
out
dec
movsb
push
adc
lock
or
adc
pop
rorl
xchg
aas
or
inc
aas
int
in
rcrl
out
ja
test
icebp
test
movsl
lahf
dec
mov
int
loop
jns
jg
lods
into
sub
pop
psraw
sub
cmpsl
cli
cmc
ficoml
inc
addb
cmp
mov
imul
pop
push
in
jbe
ret
ret
rcr
lods
inc
test
iret
sub
push
mov
xor
stos
ficomps
test
daa
and
pop
or
addl
test
mov
push
pushf
sbb
push
es
sarl
mov
mul
mov
cmp
sbb
and
add
or
and
adc
xchg
sbb
ds
les
mov
jbe
stos
xor
xor
rcrb
inc
dec
mov
or
adc
mov
sub
inc
mov
sub
adc
adc
aas
cmpsb
cli
pop
lods
push
sti
shrl
or
test
fbld
push
andl
jp
out
aam
or
insb
xor
inc
mov
lcall
jno
cmc
adc
dec
adc
cmp
push
add
pop
nop
pop
jmp
nopl
shl
les
loop
or
mov
inc
cmp
into
dec
aam
jno
scas
sbb
xchg
or
ret
std
lret
popa
fiaddl
pushl
or
rcr
repnz
das
fs
negl
xchg
push
cmp
or
push
jp
imul
and
xlat
jo
mov
dec
mov
xchg
adc
jmp
paddq
fnsetpm(287
adc
mov
pop
dec
aaa
mov
or
xchg
sbb
aaa
sbb
insb
and
push
jns
les
bound
test
add
mov
rcll
dec
leave
or
shrl
adc
sar
pop
mov
inc
inc
lret
int
sbb
sub
cmp
or
and
sbb
xlat
adc
inc
aaa
add
pop
out
scas
xchg
hlt
jmp
mov
int
jg
fcomps
popf
out
mov
pop
add
and
mov
push
xchg
in
loope
dec
pop
mov
xchg
bound
push
pop
and
lods
inc
test
cltd
and
cmp
addr16
test
shl
add
out
mov
out
lret
dec
xor
xor
mov
xor
mov
sub
dec
sbb
repnz
cmp
aam
aad
mov
xchg
sbb
jnp
dec
mov
sbb
xor
dec
jle
mov
jl
jno
mov
in
mov
imulb
mov
pop
cmpsb
insl
or
stos
leave
sbb
sbb
sub
jne
decl
enter
mov
pop
sbb
sbb
popa
or
mov
fidivs
xchg
mov
sub
dec
mov
sti
push
push
lret
test
cli
xor
stos
lret
mov
lret
push
xor
movsl
test
sub
sbb
add
scas
bound
in
cmc
mov
inc
mov
and
xchg
lock
cmpsl
add
sti
stos
das
push
adc
mov
cmp
dec
dec
bound
out
adc
or
scas
std
xchg
inc
adc
dec
sub
jmp
pop
mov
orl
push
fwait
jecxz
cmp
sbb
adc
sbb
js
push
ret
jg
loope
in
sti
hlt
pusha
xchg
mov
inc
inc
mov
in
xor
in
ljmp
popa
mov
pop
cltd
mov
leave
rcrl
push
popa
nop
in
call
fstl
aad
push
push
lret
imul
mov
jae
dec
lock
stos
rorl
cmp
outsl
aad
loopne
and
aad
push
popf
xchg
inc
not
arpl
cmpsl
dec
inc
dec
adc
and
pop
lret
shrl
add
out
pop
push
mov
les
mov
or
pop
sub
hlt
pop
pop
mov
out
adc
pop
cmp
or
clc
xchg
mov
insl
dec
dec
and
or
test
pop
negl
out
jl
pop
imul
sbb
out
sahf
mov
dec
jge
clc
fs
inc
jns
cmp
pop
out
callw
sarl
push
nop
push
xchg
mov
xchg
pop
xchg
mov
mov
or
pop
cmp
or
xchg
cmpsb
add
aad
or
dec
leave
daa
aad
cmp
sub
mov
sbb
into
xchg
scas
das
cmp
out
and
cmp
test
mov
mov
lods
inc
fimuls
lea
or
jne
xchg
testb
cmp
sbb
mov
xor
cwtl
mov
call
mov
cli
add
mov
ja
push
sub
out
mov
mov
cmpsl
cwtl
xor
mov
cli
inc
pop
fidivrl
xor
pop
sbb
out
and
adc
mov
xor
loopw
test
mov
shll
inc
fiadds
aaa
xor
or
mov
ss
jns
fdivrl
cmpsb
adc
jns
pop
mov
adc
pop
push
out
and
sub
stc
or
rorb
fidivl
lret
int
mov
jb
rcrb
mov
or
movsb
cmp
stc
in
das
sub
xchg
add
popa
jne
cli
icebp
clc
xchg
pop
daa
mul
data16
jle
adc
lret
push
pushf
mov
sbb
mov
outsl
adc
or
pop
mov
xorb
xor
nop
cmp
outsl
negb
nop
std
and
jno
jne
push
iret
push
pop
fnstsw
movl
js
fwait
scas
mov
xor
fnstenv
dec
lock
inc
mov
push
mov
scas
pop
lret
xchg
pop
inc
mov
xchg
out
jae
pop
sbb
push
mov
mov
sub
leave
repnz
out
cmp
lcall
stos
push
rcrb
push
sbb
pop
cmp
dec
mov
hlt
mov
bound
idivl
xor
popa
rcr
adc
std
add
push
test
loope
jns
ja
or
inc
mov
push
dec
pop
mov
mov
cmpsl
pop
inc
xor
add
cmpsb
lds
inc
data16
inc
je
lods
ljmp
and
outsb
xchg
pop
or
repnz
mov
dec
mov
mov
jl
adc
pushf
jns
pushf
lock
or
jmp
fisubrs
fwait
or
inc
das
mov
push
sub
xor
cmp
sahf
sub
out
std
push
mov
xchg
add
add
push
push
mov
xchg
adc
adc
sub
fwait
daa
lods
addb
scas
push
jae
push
cs
in
add
adc
in
shl
rorb
outsb
push
cs
or
inc
mov
movsb
mov
daa
outsb
inc
jg
xor
mov
xchg
inc
push
sarb
and
lods
sub
mov
adc
xor
aad
add
stos
push
or
stos
jbe
push
rorl
int
insl
in
icebp
mov
scas
out
lret
in
push
imul
hlt
dec
add
std
jbe
dec
mov
arpl
inc
jecxz
jmp
addr16
call
cmp
aad
inc
xchg
rcll
aam
mov
mov
out
or
and
push
jmp
cld
sub
sahf
xor
faddl
cli
mov
dec
pop
sarl
sub
sbb
jge
mov
cmp
xchg
out
sbb
mov
sub
ss
xor
push
int3
lock
into
out
inc
mov
pop
push
cmp
out
es
cmpsl
cli
pop
pop
cmc
sbb
lea
fwait
mov
or
add
aad
stos
insl
leave
sahf
xor
ss
dec
popf
or
cld
push
les
ret
popf
in
xchg
xor
dec
inc
dec
aaa
jno
leave
or
sahf
or
jp
out
dec
test
mov
xchg
sti
sub
lods
inc
dec
push
lock
mov
enter
pop
pop
insb
and
push
ds
in
int
add
mov
fmuls
mov
jbe
mov
inc
xor
pusha
sbb
stos
sti
and
mulb
jl
je
inc
popa
dec
cmpsb
imul
cmp
ljmp
movsb
sbb
push
inc
mov
inc
push
arpl
xchg
aam
aas
sti
das
sti
or
adc
popf
push
lea
add
sub
cmp
xchg
out
xchg
push
gs
imul
add
orl
sbb
dec
call
lret
sbb
add
pop
or
xchg
xchg
xor
pop
je
xor
test
imulb
pop
jo
or
mov
fidivrl
or
adc
dec
jmp
and
sahf
jae
and
cltd
inc
lock
or
shrl
shrl
sub
pop
push
icebp
push
daa
fimuls
stos
loop
mov
out
in
cmp
fnstcw
ret
gs
jle
adc
out
xor
inc
sub
add
sub
pop
ja
call
cs
jmp
adc
jg
push
test
xchg
ret
scas
inc
inc
outsl
mov
shlb
inc
icebp
lret
xchg
sub
sub
popa
movsb
cmp
and
inc
arpl
cmpsl
pop
loopne
stc
les
or
aam
imulb
sbb
scas
adc
cmpsl
out
dec
push
pop
add
jno
sbb
pop
stos
dec
and
jbe
scas
add
inc
aam
gs
fldcw
daa
cwtl
pop
cs
jb
repz
loope
lock
push
stos
and
jno
push
adc
popaw
cmc
imul
insb
and
repz
imul
outsl
jmp
pop
fstl
and
scas
dec
dec
mov
dec
je
bound
fs
fwait
pop
mov
dec
mov
ja
jb
cmp
mov
xor
xor
push
sbb
pop
fwait
and
and
fs
in
mov
or
bound
jb
mov
push
inc
xchg
es
lock
jl
cmc
pop
dec
lret
adc
jbe
ljmp
add
push
mov
outsl
inc
mov
mov
push
push
add
pop
jnp
cmpsl
jbe
mov
cmp
int
sub
xchg
inc
faddp
lock
mov
loop
fs
dec
push
inc
push
push
dec
je
or
movsl
xchg
movsb
pop
or
arpl
push
pop
sarb
mov
push
sbb
xchg
pop
mov
mov
lds
add
xchg
in
in
sub
rol
ret
push
pop
push
test
push
xchg
popa
push
add
xchg
lret
mov
cmpsb
cmp
mov
jo
ljmp
mov
inc
sub
popa
pop
vphadddq
mov
adc
pop
sti
aas
adc
cmpsb
stos
pop
mov
rorl
or
mov
ja
jmp
cli
fcomi
and
xchg
leave
add
or
mov
imul
sbb
cltd
pop
adc
xchg
cmp
sub
mov
inc
inc
icebp
cli
loop
div
adc
jnp
and
jmp
pop
aad
xor
push
sti
lods
out
fistpll
jbe
loope
aam
in
test
jbe
mov
aaa
jo
cmpsl
into
dec
aam
or
dec
push
jb
pop
or
mov
pop
pop
xlat
lahf
sbb
clc
mov
and
ja
fisttpl
popa
xchg
mov
repz
mov
and
mov
adc
shrb
in
dec
sbb
push
push
addr16
cmpsl
add
call
ret
inc
cmp
sbb
scas
pusha
mov
repz
aaa
add
subl
jns
movsb
sahf
adc
cmp
sub
xor
mov
dec
pop
shrb
jne
push
mov
cwtl
stos
leave
movsl
fistps
rcrb
clts
fstpl
movsb
popf
dec
sbb
dec
rolb
insl
fwait
les
dec
fbstp
mov
lock
adc
mov
dec
std
scas
jb
pushf
outsb
adc
xor
push
out
dec
sbb
pextrw
aas
lret
inc
roll
cmc
sbb
pusha
outsb
jae
adc
xchg
out
mov
xchg
inc
lds
fsubp
jmp
out
cwtl
xchg
sbb
dec
pop
inc
leave
cs
out
sub
movsl
push
sub
frstor
mov
hlt
xchg
sub
inc
sbb
shrl
jle
pop
rorb
inc
fsubl
mov
call
pop
fs
cwtl
lock
cmp
insb
stc
or
inc
movb
adc
push
xor
rcrb
in
rcr
xlat
jno
out
cwtl
stc
loope
xchg
sbb
mov
sbb
add
movsl
push
mov
pop
push
dec
int
xchg
adc
mov
cwtl
xchg
scas
dec
mov
cmp
test
aaa
pop
push
jle
stos
in
daa
jo
mov
cmpsl
into
xor
and
lea
out
jecxz
mov
call
in
jae
daa
fdivr
pop
sbb
lea
add
imul
xchg
inc
leave
cltd
dec
mov
jnp
add
movsl
icebp
xchg
cmpsb
ficomps
push
insb
pop
mov
lret
lea
ret
jecxz
out
es
aam
mov
mov
jo
scas
fnsave
lea
sahf
push
jns
sub
movsb
ret
addr16
jge
jbe
add
or
ret
movsl
shr
fcoml
adc
jne
out
xor
fstp
inc
aad
mov
cmpsl
nop
fcoml
insl
daa
adcb
mov
lds
mov
loope
add
cmp
xor
imul
inc
inc
repz
mov
or
add
dec
add
add
jo
sub
push
xchg
sbb
fists
sbb
adc
test
mov
push
mov
mov
xchg
adc
imull
xchg
xor
shlb
xor
add
or
negl
je
out
fidivs
mov
ret
pop
pop
cmpsl
xchg
in
mov
inc
call
jb
pop
mov
pop
mov
or
push
gs
outsb
aaa
ror
sbb
inc
and
jb
aam
dec
dec
aad
push
mov
scas
xchg
xor
imul
dec
adcl
loop
inc
sti
mov
inc
aas
dec
subb
jmp
enter
scas
inc
jns
pop
jl
jge
jecxz
inc
rcl
sub
and
push
sbb
adc
outsl
ret
xchg
repz
cli
inc
movsb
pop
sub
js
gs
fdivrp
dec
stos
jge
or
mov
mov
scas
sub
xlat
cmpsb
gs
push
test
test
popf
sbb
insb
pop
lcall
fnsave
sahf
mov
cmpsl
or
sbb
ljmp
adc
aaa
dec
add
mov
push
enter
pop
addr16
stos
sahf
orb
xor
jp
jmp
lret
adc
pop
idivl
insb
loope
push
pop
aas
jmp
inc
imul
icebp
aam
lahf
sahf
mov
and
jle
dec
sbb
arpl
lea
or
add
repnz
out
sbb
xor
out
gs
ret
lock
pavgw
mov
bound
out
inc
imul
xor
rorb
jg
jb
lcall
nop
mov
popa
cmp
cmpsl
fnstenv
dec
enter
xchg
enter
leave
outsl
sbb
shlb
and
fdiv
mov
lds
cmp
not
jo
cmp
sbb
shlb
mov
in
scas
insl
add
iret
call
lret
mov
jbe
mov
or
jle
cwtl
ja
ss
mov
and
scas
shl
cmp
mov
push
sub
xchg
les
push
std
sub
and
repnz
sbb
stc
ljmp
test
push
and
mov
inc
lahf
xchg
movsb
cmp
ljmp
and
inc
gs
add
push
movsl
push
lds
mov
push
pop
repz
dec
daa
in
lcall
add
pop
sbb
fstl
aaa
shrb
xchg
jns
cmp
into
and
dec
add
cli
into
inc
jge
repnz
dec
jns
int3
shlb
xchg
cmp
lods
ret
mov
scas
loop
call
xchg
js
xchg
mov
iret
cmp
aas
jo
scas
push
stos
fists
roll
addr16
popa
sti
fistpl
jg
mov
stc
mov
in
and
cli
pop
push
test
jmp
repz
xchg
dec
dec
dec
sti
in
repnz
jne
test
mov
lcall
ljmp
rcl
xlat
imul
jmp
pop
out
inc
loopne
and
mov
lea
sub
lds
push
ds
mov
mov
lods
popf
and
outsl
lds
repz
add
adc
inc
dec
and
fcomps
mov
jb
cld
xchg
add
mov
test
cs
xchg
push
loope
fwait
fs
xor
clc
fsubl
push
xchg
aad
dec
mov
or
lret
and
push
xor
ds
jmp
jb
xchg
jb
in
mov
and
aam
xchg
sahf
xchg
stos
pop
add
in
sbb
popf
sahf
mov
xor
dec
flds
xor
fsub
mov
lahf
mov
daa
iret
sahf
lret
mov
popa
push
xor
or
addr16
dec
mov
add
mov
pop
ret
xlat
dec
mov
pop
mov
repnz
daa
ja
xchg
jae
rclb
repnz
xor
gs
cmp
sbb
loop
pop
xchg
out
adc
mov
or
cmp
pop
mov
pop
mov
dec
ret
jo
iret
xchg
push
jns,pt
add
mov
cmp
subl
push
lahf
aas
daa
je
xchg
das
and
out
int
push
rolb
xor
int3
mov
add
sbb
test
lret
sub
cs
repz
out
xlat
pop
pop
push
gs
jecxz
stc
sarb
and
int3
xchg
lret
iret
das
mov
jo
xchg
sbb
jmp
xlat
xor
imul
insb
fldenv
test
add
addr16
dec
push
sbb
lahf
iret
dec
mov
ja
sbb
std
jb
pop
mov
jne
add
pop
pop
aas
stc
xchg
cs
mov
jae
sbb
dec
call
jbe
or
jnp
and
sbbb
pop
aad
test
sbb
cmp
lods
cmp
jae
ret
jmp
test
sbb
popa
pop
mov
or
rcr
je
sbb
pop
mov
adc
sbb
adc
ret
or
mov
sbb
sub
cmc
ljmp
add
jg
xor
jno
lds
sub
adc
cli
add
dec
mov
fdiv
sub
mov
es
loopne
mov
pop
or
aas
in
fdivrl
mov
or
das
dec
push
pop
loopne
hlt
lods
mov
nop
push
sub
adc
ret
sahf
xor
insl
aam
shll
arpl
pop
inc
cld
jg
or
xchg
scas
test
jp
test
mov
or
inc
jecxz
mov
idivl
filds
xchg
inc
cltd
mov
push
mov
push
and
xchg
sahf
and
insl
hlt
movsl
dec
push
pushf
daa
or
mov
adc
xchg
add
jo
cmp
aaa
add
mov
pushf
sbb
lcall
pop
sbb
inc
lret
sub
pusha
jmp
cmpsl
repz
jb
das
icebp
jge
mov
xor
jne
mov
xor
jp
das
cld
add
and
sub
sbb
adc
push
repnz
push
xorb
push
fistl
or
mov
fsubrl
push
rcrb
inc
push
or
int
popa
mov
and
fldl
sbb
enter
jbe
mov
int
dec
jecxz
jnp
cs
jg
cmova
rclb
rol
sahf
cli
cmc
cmc
push
sbb
sub
shll
test
scas
movsb
sahf
mov
bound
dec
add
ss
sbb
mov
rorb
out
fwait
adc
stos
cwtl
in
jle
xchg
out
xor
lahf
mov
mov
xchg
and
in
popa
repnz
stc
pop
mov
pushf
fwait
push
add
fsubrl
repz
xchg
je
test
jmp
out
mov
pushf
jmp
fidivl
push
sti
nop
pusha
in
xor
jl
jb
pop
iret
fisubs
out
and
inc
adc
add
sub
test
jo
dec
jae
hlt
in
inc
jno
adc
xor
cld
mov
lret
push
stos
jbe
dec
sti
mov
jmp
jne
jnp
lret
sbbl
loope
leave
sarl
sub
mov
shr
push
loope
push
imull
rclb
fstl
xor
insl
pushf
mov
aam
rorb
xor
sarb
cmp
mov
jbe
or
xor
inc
mov
mov
into
lcall
shll
fiadds
ffree
and
in
pop
ljmp
jnp
jnp
out
daa
lods
xor
cmp
fld1
jae
pop
lock
popa
seta
pop
fdivr
cmp
adc
sbb
jne
pop
sti
loop
fists
jbe
repnz
cmp
xor
js
je
push
mov
xchg
jno
lahf
insb
call
cmp
ljmp
xchg
push
xchg
jbe
imul
inc
xor
add
mov
xor
sbb
addr16
cs
dec
inc
loop
fwait
rorl
pop
xor
adc
and
inc
cmc
pop
xchg
inc
mov
pop
mov
add
add
xchg
inc
sti
push
ret
ret
lods
sbb
lcall
cmc
aam
inc
loop
popf
pop
jle
push
les
hlt
cmp
mov
idiv
in
fstpt
popf
pop
popa
xchg
xchg
add
hlt
std
int
dec
in
fucomip
adc
xlat
stc
inc
roll
xchg
loope
sbb
lcall
jne
dec
mov
add
fs
cltd
test
ret
inc
idiv
or
pop
mov
push
push
inc
cmp
ds
lcall
push
fs
roll
sub
ret
inc
mov
pop
pop
inc
pusha
cli
jbe
loope
add
je
cmp
push
mov
fimuls
aad
addb
xchg
dec
add
mov
and
fnstenv
ljmp
jl
fsubrl
cmovl
out
cmp
mov
in
cmpsl
mov
push
fisubl
jecxz
scas
sbb
aas
sub
pushf
addb
cmp
mov
add
jl
repnz
jns
cmp
mov
shl
jl
inc
fs
aas
mov
mov
fdivl
orb
jnp
xor
jb
dec
je
addr16
xor
shl
es
pop
fidivs
test
shll
daa
out
les
push
mov
fistpl
out
enter
cmp
push
repnz
int
add
and
push
jmp
mov
inc
imul
scas
std
lret
lock
adc
xor
push
and
icebp
mov
push
xor
or
scas
test
jg
sbb
data16
test
and
ret
jno
push
in
inc
movsb
mov
pop
inc
sbb
popf
pop
xchg
lock
add
repnz
xor
push
push
mov
shr
addr16
inc
xchg
mov
fmull
add
mov
xchg
dec
adc
adc
daa
pop
gs
xor
cmp
clc
in
pop
out
jo
int3
mov
xlat
jmp
out
dec
inc
lret
in
push
movsb
lods
pop
xor
in
fisttps
sub
outsb
int3
ljmp
movsb
call
mov
mov
movsl
jb
fisubrs
fists
pop
mov
sbb
sbb
rol
cmp
test
inc
fnstenv
fcmovb
imul
mov
mov
jo
or
test
mov
fcmovnu
sub
cmp
xchg
adcb
repz
call
and
mov
pcmpeqd
adc
bound
xchg
outsb
cmp
cmp
ds
les
xchg
pop
fldt
dec
call
out
hlt
insb
into
and
mov
xchg
adc
mov
pop
pop
ficompl
mov
adc
aas
sbb
dec
icebp
adc
and
jmp
stos
xchg
shll
insb
lret
push
xor
ja
xchg
out
pop
fdivrs
ja
pop
jno
and
divb
xor
stos
shrb
iret
sub
or
mov
enter
mov
jno
inc
adc
pop
imul
popa
xchg
out
es
add
push
xchg
mov
imul
jp
adc
into
cmp
fistpl
insl
add
pop
jnp
xor
push
sub
or
mov
sbb
lret
mov
push
xchg
push
sarl
outsb
lds
cmpsl
loopne
sti
dec
les
adc
and
xchg
fisubs
idivl
and
lea
jmp
sbb
mov
ret
mov
lods
jmp
xchg
outsl
mov
clc
jne
ljmp
xlat
or
pop
adc
pusha
fisubl
xchg
and
pop
pushf
es
int
sti
push
jnp
movhps
mov
inc
imul
inc
repnz
in
enter
cmpsl
sub
mov
jge
rclb
mov
dec
pop
push
push
lea
pop
pop
cmp
jg
inc
pop
fprem
lea
adc
andb
mov
pop
mov
rorl
mov
pop
cmp
xor
add
pop
loopne
pop
dec
bnd
test
push
xchg
pop
jnp
jnp
fsts
lea
cmp
push
sbbl
lds
xor
and
int
dec
adc
mov
jle
imul
cmp
mov
cmp
out
push
pushf
and
es
cmc
int
rolb
stos
fdivs
sbb
dec
jne
icebp
mov
test
push
jecxz
daa
in
sbb
shlb
adc
fildl
out
daa
into
repnz
mov
outsl
lods
jmp
jl
xchg
rorb
repnz
testb
inc
xor
aam
dec
adc
mov
pop
and
stc
mov
sbb
jp
in
cli
insb
mov
hlt
dec
jno
cmpsb
pop
pop
repnz
jo
les
xor
dec
xchg
or
jne
into
addb
inc
orb
icebp
cmp
xchg
mov
mov
inc
jnp
cwtl
adc
in
or
cli
mov
pop
adc
xchg
pop
dec
gs
push
cmp
das
dec
add
scas
cmp
loope
inc
fsubs
pushf
imul
push
sbb
cmp
and
insb
das
mov
aad
xorb
sti
or
ret
fldt
outsl
ljmp
pushl
inc
push
repz
xchg
and
xor
jge
out
xor
lret
outsb
xchg
mov
test
les
mov
or
mov
fdivs
pop
mov
cmc
notl
je
test
push
sarb
js
ret
sub
flds
decb
jg
dec
cmp
mov
pusha
mov
addr16
andl
test
stc
call
xchg
xchg
sbb
shll
xchg
mul
lea
mov
sahf
ja
jecxz
jmp
sbb
out
push
je
test
and
pop
sub
cli
jecxz
pop
inc
inc
arpl
int3
jp
mov
hlt
jle
mov
fbld
rorl
bswap
sub
mov
add
shrl
xor
inc
xor
cmp
dec
sbb
adc
addr16
daa
or
movsl
ret
add
lret
cmp
cs
xchg
or
test
pop
rorl
arpl
adc
lcall
mov
or
jmp
scas
popa
mov
ljmp
fs
cmp
jg
int3
jge
icebp
movsl
dec
mov
push
pop
loop
and
push
lods
cli
sbbl
or
and
push
sbb
adc
sahf
sbb
dec
pop
mov
pusha
mov
or
ret
xchg
mov
sub
bound
mov
clc
mov
rol
xor
lods
cmp
xchg
in
push
add
sbb
insb
call
jns
ja
mov
push
and
jge
mov
xchg
inc
mov
int
push
sub
or
je
dec
pop
xor
add
mov
mov
jp
cli
sti
fnstcw
push
dec
pop
lods
rorl
mov
xchg
insb
dec
mov
pop
cld
sub
xchg
pop
ffree
jle
icebp
mov
repnz
mov
sbb
and
add
sti
dec
add
mov
xchg
int3
gs
fcomi
popa
sbb
mov
jge
cmp
mov
dec
xchg
aas
adc
in
cmpsb
adc
or
sbb
aaa
dec
lds
mov
loope
imul
imul
in
sahf
push
fninit
jl
movl
adc
push
push
ss
inc
mov
sbb
dec
imul
pop
cli
ficompl
cld
pop
mov
add
mov
xor
std
dec
add
leave
add
iret
jne
mov
cmp
je
push
fbstp
cld
xor
jg
dec
out
mov
xchg
pop
pop
add
pop
mov
jl
nop
js
xchg
cmp
adc
or
sbb
sub
stos
push
add
adc
loop
pop
xor
je
arpl
mov
xchg
add
outsb
mov
xchg
sbb
push
mov
movsl
data16
add
or
push
dec
jne
imul
mov
cld
and
jge
mov
jns
jb
inc
cmpsl
in
dec
push
jecxz
test
outsl
cltd
xor
mov
sbb
or
jno
lcall
pop
call
jnp
ret
and
jns
rclb
mov
inc
rcr
inc
cmp
jb
in
pop
or
push
mov
js
or
repnz
mov
and
mov
add
push
xchg
pop
int
popa
lahf
in
addr16
add
adc
movsl
or
push
jb
out
inc
adc
adcb
inc
aam
push
in
add
xchg
add
mov
stc
stos
ret
clc
mov
insb
pop
mov
mov
cmp
mov
out
push
jae
dec
scas
xchg
test
fmul
xchg
nop
in
imul
or
fwait
jnp
mov
popa
icebp
stos
cmp
inc
sbb
and
mov
mov
sbb
outsl
stc
pusha
jmp
int
test
loope
pop
cmc
mov
mov
inc
or
cmpsb
sbb
jmp
xor
inc
pushf
xor
mov
cli
fs
das
enter
mov
in
lahf
pop
arpl
sub
jbe
sub
adc
dec
mov
push
imul
pushf
dec
dec
or
inc
cmp
xchg
mov
adcb
data16
mov
scas
daa
es
mov
jno
xor
jae
xchg
sub
xchg
dec
jae
jle
inc
and
xchg
mov
std
cmp
push
insl
mov
aaa
xchg
divl
in
sbb
stc
rclb
cmpsl
int
push
mov
outsl
add
fistps
test
push
mov
test
sbb
outsb
cmp
push
je
jg
jo
inc
shr
loopne
lea
and
ljmp
xor
cmp
xchg
mov
push
jmp
mov
and
mov
pusha
pusha
dec
mov
adc
mov
jb
cmpsb
icebp
push
cld
inc
mov
leave
movsl
cmp
pause
faddl
jnp
test
lahf
cmp
xor
mov
push
push
movsl
notl
cmp
fwait
cs
test
fcoml
int
js
add
test
mov
dec
push
lret
xchg
addl
add
dec
imul
adc
stos
dec
xchg
popf
mov
rcl
in
cmpsb
adcl
sub
push
or
jp,pt
sti
dec
add
jae
js
mov
xlat
mov
inc
add
push
inc
mov
adc
push
aam
jnp
iret
loop
call
test
fdivs
and
test
rcrl
jbe
int
lcall
es
lahf
mov
incb
xchg
cmp
cmp
adc
mov
sub
jns
jns
jbe
sub
jno
in
cwtl
data16
sbb
popa
push
cmpsl
adc
dec
inc
shll
out
cmp
xchg
es
sahf
push
dec
push
fcomps
out
xor
das
pop
cli
add
xchg
div
xor
cld
mov
mov
call
sbb
in
push
and
in
xchg
out
cltd
adc
push
shrb
push
rolb
sub
push
mov
mov
lret
mov
mov
ret
neg
and
or
sub
mov
mov
cmp
adc
es
addr16
js
test
adc
mov
pop
imul
lcall
pop
jp
das
rcrb
movsb
jl
xchg
lret
mov
repnz
imul
jae
sbb
popf
or
pop
roll
das
push
repnz
jb
sbb
sub
lea
out
fmul
xor
push
sub
std
out
es
or
jbe
fstpt
rcr
push
cli
pop
mov
negb
int3
or
lret
mov
sub
aas
push
and
or
hlt
in
movsl
push
add
jg
jae
jmp
fsubrl
push
push
das
stos
je
push
add
movsb
xor
cmp
mov
sahf
movsb
lock
add
fldcw
testb
dec
jno
push
shl
fwait
and
incb
add
int3
rol
in
aas
fistps
mov
xchg
subb
mov
call
sub
pop
adc
mov
insb
lds
or
inc
cmp
xchg
je
and
imul
xor
es
mov
adc
jb
test
insl
mov
adcb
jo
mov
xchg
add
stc
into
movl
xchg
adc
dec
push
rcr
jmp
mov
mov
rep
push
sbb
push
rcr
xchg
rolb
test
and
scas
sbb
push
sub
jne
adc
rol
es
mov
leave
sub
or
pop
movb
add
or
cld
jns
xor
xor
push
loope
sub
hlt
fstl
fdivl
mov
dec
sub
inc
push
loopne
and
pop
addb
xor
jg
dec
xchg
in
sub
adc
mov
mov
adc
xchg
dec
or
mov
jp
scas
sub
mov
fistl
je
fldt
shll
in
icebp
nop
mov
and
popf
jmp
and
mov
int
pop
insl
inc
loop
xlat
arpl
add
fisttpl
xchg
ret
add
mov
andl
in
mov
jle
mov
adc
fildll
sub
clc
xchg
and
dec
xchg
insb
lds
rcr
cmp
shrb
and
cmp
call
jnp
iret
sub
add
bswap
xchg
jge
in
test
xchg
sbb
xchg
repz
ficoms
xor
out
adc
rcr
push
test
mov
std
cmpsl
test
addr16
rcrl
repz
xor
out
rcrb
xor
rclb
and
jp
repz
dec
into
or
inc
sbb
or
lods
sti
mov
mov
jns
dec
data16
fdivr
mov
out
add
cmp
cmp
cmpsl
jecxz
jbe
jmp
and
xchg
sub
out
sub
cmp
jge
jno
outsl
movsb
and
xchg
xor
in
adc
aas
push
shll
addb
sub
push
add
sbb
test
fbld
add
cmpsl
ja
mov
insl
repnz
mov
jmp
sbb
repnz
inc
iret
jae
xor
inc
scas
push
add
xchg
arpl
xchg
mov
or
mov
mov
mov
stos
out
xchg
jmp
popf
loop
sub
leave
inc
pusha
jle
add
je
fistpl
or
loope
jle
in
mov
js
rorb
xchg
ret
add
pop
jb
mov
mov
xor
inc
add
testl
ficomps
jecxz
ljmp
and
adc
call
or
test
ret
in
mov
popf
movsb
and
sub
lahf
fisttps
or
xchg
xchg
cmp
mov
sbb
inc
loopne
pushf
dec
xlat
adc
loopne
adc
pop
push
pop
pop
sub
push
cmc
adc
and
sahf
rorb
fwait
nop
cmc
loope
mov
jne
sarl
shll
popa
cmp
push
rcrb
nop
jno
out
pop
loopne
lods
arpl
pop
lahf
ds
lret
jle
jo
scas
mov
mov
mov
or
adc
inc
mov
inc
xor
push
pop
adc
adc
aas
cli
or
xchg
lods
and
cwtl
sti
cmc
test
and
xchg
add
mov
jbe
xchg
and
and
push
sub
daa
mov
ljmp
fildll
push
out
mov
xchg
push
test
mov
or
scas
cmp
lret
out
mov
xchg
sbb
cmp
pop
pushf
inc
xor
je
pusha
sub
mov
gs
popa
movsb
je
movl
in
or
mov
cmp
xlat
jp
push
mov
mov
inc
sub
push
shl
insb
jl
cmpl
orb
arpl
push
jae
jg
adcb
jge
outsb
sti
shll
mov
sbb
sbb
xor
pop
enter
mov
stos
jbe
in
jg
and
out
sub
sub
aam
pop
sbb
lret
mov
cmp
lds
ja
and
jmp
xchg
xchg
outsb
sbb
test
repz
int3
les
rol
idiv
repz
jnp
movsb
test
sbb
imul
imul
psadbw
mov
fbstp
mov
mov
pop
push
jmp
popa
sti
mov
xchg
repz
xchg
jge
jno
add
scas
loop
out
adc
mov
enter
or
shll
js
cmp
nop
dec
popf
cmp
orb
add
jl
pop
dec
mov
xor
cmpsl
filds
repnz
sahf
pop
inc
test
xor
pop
aam
shll
lods
mov
pop
push
pop
dec
push
add
shll
mov
aas
dec
rcl
xor
int3
mov
dec
rorl
ss
pop
inc
or
push
cld
dec
movsl
sbb
in
pop
jmp
xor
sbb
in
loope
cmp
add
in
stos
mov
jle
mov
mov
shl
mov
arpl
stos
jecxz
xor
outsl
add
ljmp
and
popa
shl
or
inc
xchg
or
test
cmc
jp
mov
ss
push
test
lea
and
sub
or
and
cwtl
and
push
faddp
cmp
lcall
sti
sbb
movsb
pushf
jnp
roll
or
test
test
imul
jge
sbb
push
loopne
test
call
xchg
call
cmpb
adc
and
les
stc
adc
mov
jnp
push
push
xchg
cmpsl
out
sbb
repz
mov
push
mov
nop
pop
push
jmp
pop
cmc
mov
negl
inc
pushf
jnp
out
testl
sti
jbe
dec
mov
loope
or
xor
mov
rsm
mov
xor
sbbl
jne
mov
mov
lret
in
jns
pop
lcall
je
xchg
dec
imul
sbb
sbb
mov
mov
adc
cmovns
test
int
pop
adc
insb
xor
jo
add
bound
fidivs
int
lahf
mov
or
fdivs
pop
adc
enter
data16
test
lret
leave
sti
sub
pop
out
aad
mov
int
xchg
or
mov
lea
jb
push
mov
pop
cmpsb
adc
adc
aam
stc
sub
mov
mov
mov
rcl
xor
jo
sub
xchg
add
cwtl
orb
cmp
rcl
std
lea
jo
mov
aas
lds
jmp
sub
pushf
cwtl
jne
cli
jne
mov
jns
pop
push
push
sbbl
mov
dec
popa
cmc
negl
dec
dec
out
scas
adc
xor
pop
mov
mov
sbbl
jns
pushf
dec
mov
push
cmp
mov
inc
mov
fcmovb
hlt
mov
xor
push
ret
jl
gs
mov
dec
sahf
sarb
in
int3
mov
test
dec
jge,pn
mov
pusha
aam
pusha
xchg
std
dec
xlat
sub
out
xor
repnz
push
sub
sbb
and
sub
mov
adc
xor
in
xchg
jno
cmc
loop
pusha
ret
lss
cmp
push
mov
lahf
hlt
pop
mov
adc
mov
pop
aad
xor
pusha
scas
and
jbe
je
xchg
rcll
mov
pusha
inc
mov
rcrl
les
aas
pop
loopne
les
mov
lcall
rcr
pop
push
mov
mov
lock
cmp
xchg
scas
jnp
dec
jl
or
mov
insb
in
xchg
movsb
cmc
icebp
stos
mov
fs
into
cmpsl
out
push
inc
jne
or
cmp
aas
xchg
pop
addl
inc
insl
fs
push
dec
or
xchg
add
aaa
mov
es
int3
mov
lcall
jp
imul
das
daa
aaa
pop
mov
push
ds
push
insb
std
mov
push
movsl
pop
pause
push
insb
jg
and
out
or
outsb
jl
mov
leave
fsubl
insb
mov
pop
xchg
test
imul
std
fsubp
nop
cld
jno
std
xor
jg
mov
xor
pop
mov
dec
mov
loop
cs
add
rcrb
bsr
leave
dec
fists
insb
push
mov
jns
popf
or
pop
repnz
fwait
out
or
outsb
pop
mov
pop
pop
sbb
and
out
push
xor
fs
aad
push
pop
inc
pop
arpl
inc
mov
popf
push
shll
inc
sub
es
int
mov
xchg
sub
pop
cmpsl
mov
jbe
dec
neg
and
or
or
xchg
pop
push
cmp
pusha
cmpsw
jne
sub
int
sbb
adc
cmpsl
xchg
mov
cmc
aaa
dec
pop
in
andl
adc
cltd
outsb
bound
and
or
push
pop
outsl
xchg
in
xlat
adc
pop
jne
ds
lods
mov
cli
mov
shr
std
xchg
cmp
hlt
mov
leave
inc
popf
test
insb
mov
xor
dec
pop
or
xor
and
stos
in
fisubs
mov
popf
mov
das
mov
cmp
lahf
mov
xor
insb
mov
iret
rcr
ja
pop
and
pop
test
stc
xchg
inc
push
sub
iret
pop
js
xlat
ret
xor
jge
test
cwtl
dec
xchg
aam
lods
inc
adc
je
pusha
xchg
je
fimuls
add
clc
in
push
mov
insb
push
ret
in
outsl
ss
in
sub
rol
fwait
int3
aas
not
stc
into
sub
decl
or
add
inc
cmpb
xchg
dec
dec
ljmp
jl
push
fildl
sbb
adc
and
add
xchg
sbb
stos
xor
mov
dec
push
mov
cmp
movhps
xor
ret
xchg
xchg
xchg
out
sbb
leave
lret
mov
shr
or
int
lea
xchg
jnp
ja
push
inc
mov
int
mov
inc
stos
and
mov
fnsave
jmp
xor
pop
sti
into
mov
ds
xor
pop
add
push
outsl
outsl
fildl
push
push
cmp
add
rcrb
andb
data16
pop
pushf
jp
jbe
mov
sub
ret
cld
mov
dec
sbb
push
jbe
into
pop
stc
out
fucom
insb
int
insb
xchg
mov
or
push
aaa
dec
call
xchg
lods
pop
das
mov
inc
jnp
cwtl
cld
sub
and
jmp
pusha
leave
adc
aad
mov
jg
pop
mov
lods
outsl
add
imul
mov
orl
inc
jmp
sub
enter
pop
cmp
jge
addr16
je
decl
fs
loop
inc
xor
hlt
aas
jp
xchg
rorl
jle
mul
xor
sub
cmp
pushf
inc
insl
mov
fcoml
lret
and
pop
int3
xor
daa
cs
das
and
push
xchg
lahf
xchg
or
inc
shrb
cmpl
lret
std
out
fsubrs
pop
pop
idivb
enter
pop
mov
test
jbe
dec
xchg
fdiv
and
dec
ret
insb
push
add
cmp
test
inc
mov
loop
and
dec
cmpl
mov
jb
and
add
xor
dec
into
push
sub
sbbb
loop
jbe
inc
push
or
sbb
ret
ds
adc
ss
mull
push
mov
pop
ficoms
fcoml
aad
cltd
fsubrs
push
cs
push
ret
xchg
cmp
adc
in
pop
xor
outsb
fwait
ja
xor
pusha
arpl
shl
add
cld
imul
or
mov
mov
push
mov
imul
iret
fs
scas
cmpsb
adc
or
jne,pn
push
or
jbe
pop
and
xor
add
cmc
bound
sub
outsl
test
lods
and
ret
sub
pusha
repz
repz
mov
shll
jge
leave
insb
jle
cmp
mov
fwait
repnz
add
cmpsb
dec
loope
cli
dec
subl
sub
out
push
add
fucom
sbb
and
pop
jge
fsub
mov
mov
cmp
rorb
inc
imul
push
pop
es
je
or
mov
loopne
cmp
pop
lcall
mov
sbb
cld
add
or
push
cli
dec
clc
enter
and
sub
fildll
inc
jle
mov
jge
jno
push
imul
or
jnp
mov
mov
cltd
popl
popa
das
and
sbb
repnz
insb
insb
pop
pop
popf
pop
aaa
sub
cmpsb
mov
sub
xchg
lock
shlb
loop
sub
push
insb
pop
jg
and
int
ss
add
xchg
pop
dec
dec
add
cmp
les
cmpsl
jmp
inc
outsl
outsl
jno
and
push
jbe
in
inc
lea
or
movsb
psrlq
xchg
push
inc
ljmp
or
xchg
dec
mov
dec
pop
mov
jne
sti
ss
sub
mov
pop
mov
dec
sar
inc
mov
fcom
insb
test
or
aad
sbb
cmp
jb
push
popf
mov
outsl
pop
lock
jns
popa
ret
push
push
push
outsl
pop
lret
scas
test
lock
mov
mov
int
mov
fmul
out
xchg
adc
sarl
pop
and
sbb
mov
push
or
mov
jmp
mov
mov
dec
lahf
push
sub
pop
fists
icebp
jns
loop
fs
hlt
xor
imul
jns
test
dec
push
imul
testl
push
jmp
out
sub
mov
xchg
xor
popa
cwtl
sbb
sbb
inc
mov
adc
movsl
push
ds
jb
sbb
fisubrs
add
xchg
lods
ret
jmp
dec
push
ret
and
dec
jl
push
es
cltd
outsl
pop
sbb
pop
pop
lcall
sub
sbb
ljmp
insl
jns
pop
stc
lods
xchg
stos
test
loopne
rolb
arpl
add
xchg
xchg
mov
and
loope
jle
push
negb
push
adc
fs
das
orl
ja
repnz
in
jecxz
scas
cmp
nop
and
mov
xorb
jns
shl
dec
cmp
xlat
xchg
hlt
dec
gs
and
and
je
sub
daa
scas
movsl
sbbl
inc
jl
aaa
cmpsl
sub
xor
mov
shlb
fnstenv
stos
and
mov
mov
push
std
push
shll
lods
jns
add
sub
iret
push
insb
dec
out
adc
ljmp
insl
or
fcomp
add
movsl
jecxz
in
ljmp
mov
rorb
shll
xchg
pusha
pusha
in
xchg
cmpsl
adc
xor
or
rcr
jnp
xchg
movsb
or
popl
jae
in
fnstenv
jnp
js
jb
in
mov
or
push
stos
adc
mov
or
or
cld
movsl
push
jmp
shl
add
mov
or
pop
in
rcl
fdivl
xchg
ja
xchg
pop
scas
lcall
subl
dec
ret
das
sahf
dec
aas
arpl
in
cmp
int3
ror
dec
inc
fsubp
int3
outsb
js
lret
insb
into
mov
lods
fdivrl
mov
or
inc
idivl
adc
outsb
popl
jnp
arpl
lock
dec
enter
cmp
mov
rorb
mov
loopne
xchg
bound
dec
cwtl
in
or
stc
lds
out
mov
xchg
push
mov
inc
in
mov
cmpsb
adc
cltd
adc
or
xor
pop
push
pop
out
cmp
push
fs
adc
adc
dec
aam
xchg
jbe
mov
ja
jle
jo
and
dec
push
mov
insl
test
pushf
pop
mov
inc
jno
add
adc
pop
mov
imul
aad
and
jb
mov
and
add
xchg
jp
inc
ret
jbe
jmp
and
jg
cmp
fldl
pop
and
gs
jecxz
test
jo
gs
scas
cmpsb
mov
cmc
aam
outsl
pop
call
ds
fs
ss
movsb
adc
pop
sub
cld
je
pop
adc
std
incl
pop
and
test
int3
sbb
jb
xor
xchg
dec
mov
xor
sbb
sbb
jb
aaa
cmp
pop
fdivrp
out
cmpb
nop
or
aaa
sahf
mov
dec
fstpl
mov
pop
incl
push
pop
dec
cmp
push
clc
scas
lret
pushf
rol
dec
fbstp
pushf
xor
rolb
fldt
mov
jns
or
in
cwtl
mov
mov
enter
and
jecxz
push
insl
mov
ret
fwait
lret
and
mov
sbb
aas
loop
imul
test
mov
dec
rorl
das
test
daa
push
xchg
lret
inc
sarb
inc
in
push
nop
mov
ss
jb
mov
jbe
js
popf
adc
loope
or
aaa
xor
add
sbb
insl
pop
or
pop
outsb
mov
out
das
push
test
dec
insl
loop
repnz
fmuls
aaa
sbb
aad
int3
or
lea
nop
and
and
push
daa
mov
xchg
mov
jp
sbbl
orb
decb
repz
jp
pop
lahf
pushf
push
inc
fisttpll
popa
mov
in
aas
add
inc
ficoms
pop
addb
sbb
insb
push
xchg
decl
insb
pushf
aad
pop
cwtl
inc
pusha
or
mov
aad
xchg
pushf
dec
push
std
inc
lcall
sbb
into
icebp
test
insb
inc
out
adc
xlat
clc
push
leave
dec
nop
repz
stos
call
aas
push
sub
push
and
mov
scas
lds
mov
dec
nop
push
ret
aad
pop
jb
jnp
pop
mov
adc
inc
xorb
cmc
xchg
cmc
loope
idivb
xor
sub
adc
push
rolb
mov
inc
xchg
jmp
call
imul
cmpsl
test
lock
sub
int3
in
or
xor
sti
push
add
xlat
ja
xchg
adc
mov
mov
pop
jp
and
fwait
sub
and
sarb
inc
push
pop
gs
hlt
in
into
dec
mov
or
jno
test
jnp
jnp
fldt
cmc
jge
mov
and
mov
or
dec
mov
jmp
sahf
fst
popf
lods
or
add
popa
lock
sar
imul
sub
cmp
popf
push
fiadds
lcall
xor
inc
cmp
jns
rcrl
push
loop
ds
or
bnd
es
fdivrl
push
stos
sarl
pop
dec
loope
cmp
bound
mov
xchg
cmp
mov
fwait
pop
aas
and
out
roll
movsb
sbb
clc
addl
xchg
jnp
outsl
mov
shll
adc
cltd
into
inc
inc
push
sbb
aad
mov
cmp
loop
pop
sti
pop
mov
xor
clc
and
out
out
sub
or
add
add
pop
daa
pop
leave
fstps
jne
and
mov
nop
pop
scas
rcr
push
aam
popf
out
push
ds
insb
xchg
xchg
iret
data16
jp
in
scas
into
pop
aam
adc
or
xchg
pop
xor
adc
mov
scas
jecxz
sbb
xchg
push
mov
lods
pusha
test
sub
add
pop
scas
test
sub
jb
push
pop
jl
or
push
mov
jae
or
pop
xchg
or
subb
test
in
fs
scas
mov
loopne
adc
sub
gs
int3
mov
inc
insl
fwait
lds
or
push
push
mov
jno
mov
add
popa
lock
aam
nop
sbb
xor
jae
pop
xor
cld
xor
mov
mov
cmpsb
decb
cltd
in
loop
mov
jne
pop
xor
xchg
push
pop
sbb
add
subb
jnp
idivl
add
scas
in
pop
mov
sbb
adc
repz
pushf
inc
in
lret
inc
sbb
push
xor
pop
shrb
cmpsl
aad
and
xchg
add
cli
lods
pop
xchg
lds
dec
mov
mov
xor
lods
sbb
data16
in
inc
in
movsl
add
insl
pop
jne
mov
push
mov
mov
fwait
jns
jl
shll
mov
mov
nop
adc
pop
movsb
mov
xor
in
mov
pushf
shrb
ret
xor
fdivrl
test
push
or
and
cmp
movsb
pop
push
aam
clc
pop
sub
in
sbb
test
ror
push
jbe
push
inc
sahf
add
jge
push
mov
rclb
push
int3
aaa
stos
pop
mov
push
imul
addr16
and
jp
mov
xchg
sbb
mov
test
xor
inc
adc
push
dec
ljmp
rcl
sbb
stc
mov
es
jge
movsb
sub
ret
jp
xor
das
jnp
imul
movsl
fwait
cmpsb
scas
leave
dec
fnstcw
stos
nop
roll
lret
push
sbb
jae
shrl
mov
jmp
loop
lods
jecxz
or
push
inc
mov
lar
mov
push
jne
cmpsl
xor
movsb
loop
cld
xchg
mov
xchg
repnz
add
notb
fistl
scas
cmpsb
cli
lcall
and
push
inc
cmp
jge
lret
insb
jmp
stos
lods
and
dec
mov
sbb
cli
test
jo
xchg
jmp
xor
sbb
and
dec
mov
cmp
dec
fistpl
adc
es
jge
jns
inc
ret
jbe
xor
jmp
repz
sarl
adcb
popw
aaa
arpl
js
test
clc
dec
nop
inc
filds
sub
mov
pop
and
sbb
dec
scas
call
outsb
sbb
cmpsb
addb
fucom
jbe
jmp
inc
int
lods
mov
xchg
test
fidivl
ret
jo
sbb
inc
pop
xchg
push
adc
xlat
repz
lods
pop
nop
cmpsl
lds
pop
insb
and
pop
add
mov
xorl
lods
popa
sub
sub
cmp
adc
cld
mov
jmp
in
or
mov
xor
call
scas
push
jno
or
and
and
sub
add
sbb
inc
dec
mov
fmul
xchg
in
jbe
popf
ljmp
test
fdivl
pop
push
dec
xor
jnp
or
mov
cltd
inc
and
xor
sbb
inc
test
inc
in
ja
loop
imul
push
push
xchg
out
shrb
xchg
aaa
insl
test
jecxz
pop
inc
inc
xor
add
and
sahf
jl
gs
add
scas
sub
sahf
in
jge
jo
sub
sti
shrl
out
jae
addl
xor
imul
cmp
aad
pusha
test
imul
in
add
shll
mov
addr16
loopne
pop
push
mov
xorl
and
jmp
push
adc
lahf
add
adc
dec
popf
xchg
xchg
fidivrl
mov
ljmp
mov
out
bound
insb
fs
mov
add
jne
mov
rcr
ja
mov
ljmp
push
movaps
inc
mov
das
pop
js
fs
vpmullw
fwait
xchg
dec
lret
xor
gs
fnsave
jg
adc
mov
addb
xchg
into
cld
mov
pushf
inc
push
loop
movsl
lret
mov
shll
mov
lock
xor
sbbb
ja
movsb
or
scas
arpl
popf
fsubl
dec
pop
icebp
rorl
or
jns
enter
inc
shll
xchg
std
clc
fcoms
adc
add
jle
xor
adc
xchg
mov
aas
popf
sbb
cmp
jns
in
mov
push
in
mov
ja
rcrl
hlt
bswap
into
fs
or
in
out
clc
lret
stos
cmpsb
pop
or
or
aam
inc
mov
aad
pop
mov
mov
mov
shll
push
stc
adc
out
aam
adc
cmp
inc
cltd
add
dec
icebp
loop
mov
jg
nop
scas
jae
xor
punpckhdq
aam
mov
dec
xor
mov
jne
sti
decl
xchg
sbb
mov
and
enter
jne
cmpsl
fs
icebp
mov
out
jb
and
and
pop
or
mov
cmp
outsb
in
pop
push
pop
clc
movsl
outsb
aad
mov
mov
subl
push
outsb
add
aam
daa
aas
movl
or
dec
mov
popa
xchg
xchg
xchg
je
cmp
push
mov
push
xor
inc
jbe
packuswb
ret
mov
mov
imul
out
jbe
push
lahf
pop
push
loopne
mov
in
ret
into
push
das
out
inc
or
jnp
jmp
out
inc
sbb
lcall
insl
dec
jp
out
rcl
fxch
xlat
call
or
jle
das
cmp
sub
xchg
cmp
and
sti
or
test
loop
ror
xchg
mov
popf
addb
jl,pt
insb
insb
xchg
lea
and
out
mov
insb
pusha
jle
xor
sarb
int3
fidivrs
sub
mov
push
movsl
sbb
out
ret
fistps
jno
lods
add
or
and
js
jge
and
insl
in
data16
inc
dec
les
icebp
shl
xchg
jl
incb
mov
dec
mov
sbb
mov
and
mov
mov
fsubrl
cmpl
jge
dec
cltd
aas
adc
pusha
cmpsb
cmp
dec
sbb
mov
adc
xchg
sub
xor
sbb
stc
jge
pop
mov
imul
pop
icebp
inc
popf
xchg
lret
sbbl
aas
pop
and
insb
jmp
fistpll
mov
sbb
adc
mov
or
movsb
sub
ss
sub
bound
and
pop
add
cmp
movsl
ljmp
xor
mov
rcrl
xchg
stc
shl
push
ret
ds
das
pop
push
cmp
out
shll
jl
stc
fwait
stc
jp
hlt
cmpsb
fsubs
xor
scas
and
xor
pop
out
test
xchg
and
hlt
fisubs
shlb
cmp
loop
lret
shlb
xor
lret
pop
cwtl
ja
rolb
mov
push
push
pop
movb
shlb
pop
pop
push
js
adc
jae
inc
inc
and
roll
dec
mov
stc
inc
iret
test
sarb
cli
push
sub
inc
pop
cwtl
out
sahf
into
sarb
mov
xchg
xor
inc
mov
clc
pop
ja
add
dec
dec
dec
or
sahf
mov
call
ss
jle
push
pop
inc
adc
lods
pop
ret
pop
loopne
insb
test
add
ljmp
int
jle
dec
in
aaa
stc
sbb
xchg
sbb
pop
mov
mov
xor
inc
pop
jp
push
or
cmp
xor
and
jp
hlt
mov
ss
lcall
or
lret
jge
inc
rolb
pusha
pop
imul
out
mov
in
or
sbb
sbb
jecxz
dec
xchg
ficoml
or
cmp
dec
ds
xchg
jbe
stos
aas
sbb
aas
mov
push
ret
insl
shll
jno
out
push
sbb
repnz
lds
loope
mov
sub
push
xchg
and
or
mov
jns
pop
mov
mov
adc
out
cmp
cmp
out
movsb
and
dec
inc
mov
push
dec
jb
jae
jg
outsl
lea
or
mov
mov
mov
or
xor
lahf
ss
stos
sysenter
hlt
sub
mov
inc
dec
cltd
test
rcrl
push
testl
fwait
je
fucomp
add
dec
add
insl
jl
rcll
out
call
xchg
scas
xchg
xor
ja
sbb
cltd
dec
fnsave
adc
mov
inc
sbb
outsl
xchg
cli
mov
jl
in
xlat
outsl
pop
int
les
repz
sbb
out
sti
mov
sbb
push
repnz
add
or
push
or
rolb
lret
cs
out
iret
lcall
and
inc
clc
pop
dec
sbb
mov
in
sub
add
push
xchg
cmpsl
sbb
mov
nop
push
fistl
fimull
xchg
rcr
adc
repz
fisttpl
in
cwtl
js
mov
xchg
lahf
push
jae
sbb
xchg
into
mov
lea
leave
jl
rorl
cli
jns
push
xchg
cmc
mov
addr16
movsb
jno
xor
mov
push
push
jae
lods
mov
leave
xor
jecxz
rolb
xchg
stos
jmp
mov
lods
mov
cld
and
loopne
dec
mov
mov
in
lret
cmp
lcall
leave
mov
pop
or
dec
lret
mov
scas
mov
test
dec
push
sbb
cmpsb
lds
or
jg
stc
add
into
sti
int3
aam
push
mov
jecxz
iret
shrl
or
aad
idivb
cltd
jb
andb
jg
or
mov
bnd
jmp
cwtl
sub
push
or
push
xchg
mov
mov
aad
jge
cld
out
push
jl
inc
jno
adc
test
mov
lods
sbb
inc
or
mov
int
cmp
ss
adc
or
and
sub
sub
stos
ds
movsl
outsl
addb
sub
insb
add
jnp
js
lahf
stc
popa
sbb
imul
pushf
int3
push
fs
cwtl
into
js
adc
repnz
inc
fdivrl
test
cmp
cmc
push
and
adc
push
add
push
dec
push
mov
mov
inc
mov
and
adc
cmp
adc
push
mov
pop
xchg
aas
sub
iret
scas
sarl
mov
cmp
adc
repnz
pushf
jge
enter
icebp
push
sbb
mov
movsb
jnp
and
jecxz
dec
inc
pop
sub
or
std
jno
xchg
and
test
popf
inc
sub
jae
stos
out
pop
lahf
cmp
and
lcall
jmp
in
data16
rcll
or
bound
fwait
gs
lret
lock
outsl
cmpsb
mov
jge
arpl
pusha
inc
jbe
push
pop
xchg
mov
cli
incb
in
ja
mov
insb
out
std
xchg
pop
mov
pop
dec
cmpsb
lock
lock
cmp
inc
shll
sbb
add
sbb
jbe
mov
adc
adc
dec
jne
mov
add
cmc
push
mov
mov
mov
fdivs
dec
adcl
addr16
cmc
sbbb
es
add
cld
incl
cmpb
loope
into
dec
or
sub
mov
jg
mov
sbb
pop
inc
or
or
pop
leave
push
movsb
aas
sbb
enter
jle
lcall
aam
xor
mov
and
cltd
jge
dec
neg
lods
dec
push
jb
pop
mov
into
xlat
ret
std
sub
mov
jae
repnz
jl
pusha
das
fbld
arpl
ss
ljmp
out
aaa
int3
mov
jno
jecxz
ljmp
xlat
and
fnstcw
jae
mov
aam
aas
xor
inc
sub
sub
sbb
loopne
stos
enter
xor
jle
mov
jns
ret
jecxz
mov
mov
push
cs
add
add
add
sbb
sub
pusha
xchg
lods
js
and
mov
dec
mov
insb
sbb
cltd
popa
popa
or
jg
lea
sub
aam
js
push
inc
hlt
cmp
dec
fwait
mov
insl
fdivrp
jns
rcll
pop
pop
outsl
out
jmp
dec
popf
jmp
fnclex
mov
popf
or
adc
das
push
push
out
mov
lock
into
cmpsl
mov
dec
mov
out
inc
adc
int3
fstpt
std
movb
jnp
inc
jmp
and
add
movsb
mov
mov
imul
movsb
and
js
or
pop
sub
in
pop
cld
or
add
test
in
iret
popaw
imul
sub
mov
ljmp
in
pop
lcall
insb
and
push
xchg
mov
jl
add
mov
inc
mov
daa
movsl
lret
pop
add
cmpl
mov
mov
and
psadbw
imul
sahf
pop
hlt
enter
fwait
outsl
dec
adc
xchg
stos
dec
daa
sbb
dec
pop
inc
rcrl
mov
fldl
mov
mov
int3
jl
sub
insb
sub
cmpsb
adc
rcll
js
inc
iret
xor
push
jo
outsl
in
sahf
jns
sarl
ss
stos
mov
mov
lods
xor
or
lcall
jl
daa
mov
cmp
cmp
adc
add
push
lret
push
jo
mov
ja
mov
les
dec
out
mov
inc
dec
out
fidivrs
dec
jmp
orl
jne
inc
pop
dec
lret
xchg
mov
outsl
mov
iret
dec
insl
imul
dec
cmp
adc
sub
dec
fwait
testb
aad
cmc
testl
push
insb
xorl
push
xorl
aas
lods
call
arpl
mov
sbb
xor
push
push
push
repz
xor
pop
gs
fadds
lds
lahf
outsb
add
xchg
push
sbb
adc
mov
inc
hlt
dec
movsb
popf
push
in
fimuls
loopne
mov
leave
enter
test
test
lret
gs
rcll
insl
cmp
xchg
imul
and
jl
inc
jae
cwtl
sti
jl
test
mov
fsts
test
jmp
popf
jmp
pop
icebp
cli
lahf
pop
add
add
sub
jecxz
inc
mov
outsb
mov
gs
inc
imul
jp
inc
outsl
insb
rolb
mov
jnp
add
xlat
pushl
cwtl
cld
jns
mov
mov
add
adc
shl
sub
pop
push
sub
xor
mov
jecxz
xchg
leave
rcll
cmp
test
fistpll
pop
mov
repnz
push
iret
popa
xor
movsb
inc
popa
shlb
fbstp
or
dec
add
dec
pop
mov
sahf
imul
sub
or
cmpsl
nop
sbbl
mov
inc
push
in
adc
in
mov
and
stc
popf
or
lret
mov
and
out
cmpsl
rcll
sbb
scas
mov
out
mov
loop
push
outsl
cmp
mov
xor
test
sbb
out
arpl
lods
mov
dec
mov
loopne
aas
push
pop
repnz
push
daa
xchg
pop
jmp
xor
or
les
shr
mov
sbb
mov
sbb
rorb
in
das
inc
cmc
popa
sbb
lret
ror
int
dec
pop
mov
jmp
dec
and
cmpsb
insb
insb
ljmp
pop
negb
and
pop
fwait
mov
shlb
xlat
mov
or
or
rcr
or
push
jp
leave
shll
in
out
pop
adc
jp
jp
lcall
lods
push
sub
jno
or
or
mov
push
fwait
jo
hlt
cwtl
pop
push
mov
sub
mov
out
mov
pop
mov
dec
sti
xor
in
into
ret
cli
sub
mov
sbb
mov
add
sbb
cmp
es
fs
xor
cli
scas
push
js
out
cmpsl
ret
ret
dec
fsubl
push
clc
stos
dec
leave
push
mov
adc
mov
js
pop
mov
mov
adc
repz
cmpsb
push
mov
add
pop
lret
sub
mov
fsts
jecxz
outsl
pop
pop
cmp
loopne
sbb
mov
mov
mov
fstps
xchg
cld
testb
mov
sti
mov
aad
hlt
mov
sahf
sbb
out
pop
rorb
mov
out
mov
data16
and
fdiv
jns
out
xchg
ret
mov
sub
or
dec
fmuls
insb
xor
jbe
inc
mov
push
enter
aam
pop
fcomps
je
mov
push
enter
aas
xlat
and
push
push
push
inc
mov
adc
cmp
dec
sub
add
inc
in
xchg
mov
xchg
cli
sarl
mov
stos
mov
xchg
sbb
adc
push
pop
stos
clc
mov
fistl
sub
add
add
fwait
scas
mov
fidivs
inc
les
dec
inc
cmpsl
movsl
roll
fcoml
push
lods
leave
out
mov
pop
shlb
jno
jg
clc
sbb
jbe
push
test
and
push
pop
lea
test
sbb
lcall
mov
ficomps
cmc
jge
mov
mov
sbb
mov
mov
inc
jb
xor
and
push
int
pushf
mov
jo
ret
test
in
sbb
lds
mov
xor
mov
sbbb
das
test
call
int
or
mov
cmp
outsl
push
lds
cmpsb
pop
jge
dec
push
adc
pusha
mov
mov
lcall
jmp
sub
clc
inc
add
sbb
js
call
ja
mov
data16
mov
jno
jge
xor
or
mov
mov
mov
icebp
pop
lahf
sub
xor
jle
adc
adc
loope
sahf
mov
jne
sub
out
push
testb
hlt
aas
adc
lods
push
imul
pop
adc
aam
aaa
mov
cmp
pop
mov
adc
xor
push
scas
push
push
stc
insl
add
lret
std
jae
mov
scas
add
loopne
insb
cmc
add
mov
xchg
sbb
sub
je
cmp
ljmp
arpl
fdivl
push
jmp
adc
decb
movsb
ret
pop
fs
push
add
pavgw
adc
mov
pop
xchg
xchg
jp
jne
ss
fimull
add
gs
mov
mov
add
fld
push
xchg
dec
nop
in
jmp
lods
repnz
js
cmp
scas
sub
inc
adc
sbb
jg
enter
outsl
xchg
cmp
fcomip
jecxz
leave
lahf
dec
popa
out
addl
xor
push
jecxz
mov
sub
into
ds
xchg
mull
push
std
ret
repnz
aam
pop
dec
inc
rorl
sub
call
mov
adc
movsb
jge
out
cmp
push
in
cltd
stc
mov
and
sbb
and
cmp
mov
mov
ds
imul
mov
or
pusha
pop
pop
into
and
cmp
sti
add
push
insb
pushf
mov
jmp
adc
push
imul
movsl
and
aas
movsl
add
adcb
pop
in
das
fsubrp
push
fucom
fdiv
push
sbb
cmpsl
adc
jmp
shl
sarl
dec
xchg
cwtl
or
loope
jae
and
mov
jae
dec
int3
sbb
pop
in
imul
cwtl
mov
cmc
or
xor
inc
les
sbb
rol
icebp
cltd
sbb
or
xor
mov
and
xor
sar
add
ret
enter
dec
out
sahf
cmpsb
test
pop
imul
jb
adc
lcall
hlt
andb
mov
nop
add
dec
fs
addr16
stos
clc
scas
xchg
fdivrl
push
sub
cmp
aam
jle
ljmp
mov
push
ss
add
mov
movsl
cmpsl
scas
inc
jl
jb
std
jns
dec
inc
mov
xchg
lret
scas
cltd
mov
cmp
pop
xchg
cltd
inc
ljmp
add
ja
imul
jns
test
scas
dec
addr16
xlat
clc
or
dec
cmp
mov
in
stos
shrl
lods
cmp
mulb
xor
pop
cltd
out
in
stc
push
cld
lcall
call
mov
pop
or
sbb
movsb
pop
add
std
sahf
lods
mov
fistpll
jle
mov
add
out
loope
xchg
or
fldenv
add
jecxz
dec
push
out
mov
ret
fstl
cld
hlt
jns
inc
nop
shr
sbb
ja
call
hlt
sti
mov
test
add
jle
mov
aam
mov
and
jns
leave
cltd
lds
std
xchg
dec
mov
imul
mov
xor
xchg
jae
cmp
into
fnsave
pop
xchg
mov
cmp
adc
mov
popa
mov
mov
or
cmpsl
pop
loopne
rcrl
and
or
dec
dec
clc
mov
sahf
pop
mov
pop
in
pusha
cmp
stc
dec
xchg
ds
out
lea
les
sbb
sub
push
sarl
dec
add
ds
jle
cmp
or
dec
push
cmpsb
popf
push
test
pop
dec
xor
fwait
dec
std
push
mov
sbb
lea
or
push
mov
addb
daa
mov
out
jp
cs
add
imul
push
sub
movsl
orb
pop
int
js
xchg
push
sbb
mov
push
cs
mov
mov
or
inc
jb
and
cmp
xchg
fsubrs
testl
mov
mov
and
mov
adc
push
cmp
clc
cli
jp
gs
in
cmp
cmpsl
mov
stc
cltd
movsl
cltd
dec
dec
push
or
or
in
push
mov
lret
mov
aaa
icebp
roll
push
ret
mulb
sbb
push
push
pop
adcl
lock
subb
pop
int3
pop
popf
jnp
out
shrb
repnz
dec
iret
add
and
gs
loop
push
cmpsl
mov
mov
cmp
pop
jae
xchg
jno
sub
xlat
test
xchg
jp
clc
insb
and
xor
cmp
xchg
ljmp
test
sbb
cmp
jle
sub
cmp
gs
and
and
fldz
xor
out
mov
sub
push
ret
xchg
adc
imul
stos
push
sti
pop
add
push
rolb
addr16
push
xlat
fwait
lock
add
inc
inc
int3
ret
out
sub
cmp
jo
cltd
pop
out
hlt
repnz
mov
das
xchg
jl
sbb
and
fdivrs
push
fneni(8087
jp
in
lea
aam
mov
or
sub
mov
mov
decl
jo
adc
push
mov
rep
in
jg
bound
icebp
outsb
jne
xor
push
test
enter
add
fcmovnu
pushf
aad
jecxz
std
ss
mov
dec
push
xchg
add
or
inc
xchg
ljmp
dec
xor
in
add
insb
xchg
test
fiadds
mov
dec
mov
mov
aas
mov
insl
imul
lea
pop
jbe
test
fwait
xchg
scas
test
lahf
cld
xchg
sub
dec
dec
pop
adc
mov
cmp
lds
and
dec
and
mov
aad
cmp
adc
push
push
roll
lcall
cmp
cltd
pop
mov
jne
and
xchg
jb
dec
mov
adc
pushf
ja
sti
cmp
rcrb
pop
cmp
cmp
jge
dec
iret
pop
xor
mov
adc
mov
cmp
sbb
and
fnstcw
sub
lock
sub
pusha
cmp
mov
mov
pop
fldt
rcll
cmp
test
cmpb
cmpsl
test
mov
and
mov
xor
mov
inc
ffree
loopne
mov
cmp
jp
jb
cmpl
fbstp
scas
sahf
ljmp
jl
mov
shlb
out
adc
ret
mov
test
lds
inc
cmpsb
xor
sbb
mov
add
jbe
dec
or
insb
nop
pop
jle
and
rcr
pop
out
lods
insb
pop
sbb
mov
sarl
test
jmp
ffreep
or
jmp
mov
cmp
loope
jg
clc
popf
xchg
out
adc
hlt
or
push
cs
into
daa
out
cmp
mov
out
testl
pop
sti
cld
lds
and
adc
mov
mov
lods
xlat
out
lahf
call
jp
and
and
enter
lcall
cmp
inc
dec
ds
dec
sub
pushf
test
hlt
xchg
or
pop
add
pop
xor
sbb
fnstcw
mov
loope
aad
pop
negb
das
mov
enter
imul
pop
ror
mov
push
mov
sahf
lods
test
pop
cmp
mov
pop
xor
cld
xor
dec
jno
sbb
jne
std
test
aad
daa
shlb
test
repz
in
shrb
mov
imul
cmp
fimull
arpl
xlat
pusha
cmp
adc
out
int
adc
popa
inc
mov
divb
fldcw
or
dec
xor
loopw
movb
mov
outsl
into
jg
mov
dec
subb
pop
mov
jl
sbb
mov
hlt
mov
call
and
and
jl
pop
cmc
je
loop
mov
jns
push
inc
xchg
insl
rclb
fsubrs
cmp
aaa
shlb
or
mulb
loope
ds
or
sbb
or
jecxz
jnp
inc
divb
sarl
icebp
or
adc
notb
inc
std
push
xor
sub
outsl
jae
adc
fnstsw
out
add
fwait
mov
aam
mov
lahf
stos
cs
stos
cmp
fisubs
cltd
xchg
mov
xchg
add
mov
clc
push
aad
nopl
aam
es
or
push
lret
mov
lcall
inc
aas
outsl
sbb
aas
fdivrl
push
pusha
cmp
xor
lcall
pop
jge
shll
or
sub
aam
repz
cmp
xor
data16
jl
pop
sub
push
sti
push
repz
das
dec
lds
jp
ljmp
dec
cmp
ret
sbb
add
push
cmp
outsb
jbe
adc
mov
jecxz
sti
nop
pop
cmpsl
cs
sti
xchg
jp
jmp
dec
pop
pop
popf
fs
push
adc
cwtl
pusha
mov
clc
dec
cmp
adc
lods
lret
and
insb
js
addr16
sbb
pop
jns
ret
mov
int3
cmp
loop
or
mov
insb
adc
mov
cmp
mov
lahf
shrb
lea
ljmp
filds
and
pand
insl
fimull
or
divl
subb
out
in
dec
imull
das
xor
insb
add
pop
push
xchg
call
mov
dec
shlb
hlt
lock
add
sub
jg
leave
and
add
inc
inc
repz
outsl
dec
subl
int3
outsb
pushf
dec
in
lcall
ret
dec
mov
fmuls
sbb
xor
sub
jno
xor
outsl
pop
xor
push
jg
ljmp
xchg
jbe
int3
inc
mov
test
pcmpgtw
dec
scas
cmpsb
xchg
in
rolb
in
pop
jle
pop
lret
or
hlt
sub
pop
cmp
xor
test
jecxz
insb
outsb
aas
ror
fiadds
inc
pushf
sub
cmp
sti
mov
cli
enter
push
pushf
dec
lods
and
addr16
adc
jns
movlps
jmp
in
push
adc
test
out
mov
adc
lret
jmp
push
jmp
or
gs
test
or
pop
int
mov
sub
int
jmp
sbb
xchg
data16
lret
das
fs
mov
ja
imul
enter
inc
xor
fisubl
push
negb
dec
and
ret
mov
orl
pop
stc
add
ret
addl
aam
add
mov
pop
lock
push
xchg
xor
aad
mov
test
sub
lds
xchg
cmpsb
jge
inc
push
pop
jno
cmp
mov
add
mov
jp
int3
cs
pop
aam
gs
mov
dec
ret
lea
jg
jno
cmp
add
pushf
pop
out
or
stos
mov
mov
shl
cmc
cmp
lods
mov
inc
mov
andl
inc
nop
stos
icebp
sub
bound
shrl
int3
ss
out
mov
cmp
sbb
adc
push
hlt
mov
mov
imul
cmpl
inc
adc
movsl
jb
sbb
pop
and
jl
inc
repnz
out
rcrb
movsl
adc
cmpsb
and
fisubs
mov
push
sbb
mov
iret
dec
rcrl
loopne
sbb
add
insb
or
fs
cli
dec
cwtl
adc
repnz
xor
out
dec
notl
jo
jb
sti
sbb
arpl
push
popf
pop
adc
aaa
push
mov
cwtl
fwait
mov
and
adc
ljmp
popf
rorl
dec
ljmp
clc
xor
stos
int
xorb
mulb
sbb
clc
sahf
mov
data16
out
mov
xchg
cmpsb
scas
inc
jb
fldt
add
hlt
fwait
add
mov
mov
cwtl
ja
imul
or
sub
dec
cmp
push
push
sub
sbb
es
cmp
mov
mov
ror
fmull
mov
push
sub
lods
icebp
cltd
outsl
and
cmpb
outsl
mov
je
out
jmp
stos
jle
cwtl
les
stos
xchg
call
insb
jbe
sub
sbb
push
jbe
rorb
sbbb
mov
mov
outsl
cmp
jmp
test
fwait
imulb
sbb
xchg
jmp
shrd
cli
adc
popf
dec
mov
mov
mov
push
gs
test
inc
mov
inc
pop
and
xchg
adc
cmp
mov
hlt
lods
xchg
fisttps
mov
cmp
int
in
inc
fdivr
xor
xchg
push
cld
push
stc
jge
xchg
push
pushf
test
mov
mov
lret
out
sbb
pop
dec
sbb
mov
jp
in
jo
shrb
leave
add
mov
xchg
adc
pop
outsl
push
jne
cmp
pop
xchg
inc
aad
mov
and
mov
xchg
pop
and
adc
xor
inc
imul
jg
xlat
fldenv
jmp
push
test
ror
fstpt
jle
cmp
ss
adc
inc
aam
aam
test
call
cwtl
add
push
sub
push
adc
pushf
mov
icebp
mov
cli
setb
mov
xchg
dec
or
mov
push
mov
or
xor
jle
add
adc
mov
and
jns
arpl
bound
pop
into
mov
arpl
inc
scas
cmp
fstpt
subb
fs
test
insb
push
mov
mov
xor
daa
pop
cs
loop
cmpsl
lods
je
pop
xchg
xchg
lcall
aaa
mov
mov
and
pop
xor
sub
sahf
mov
jle
mov
scas
xor
jae
jle
lret
addl
insb
call
ret
sub
inc
or
inc
repnz
adc
xchg
push
jp
out
push
pop
push
sub
fsubr
lret
sub
pop
jb,pt
jnp
iret
sub
xchg
pop
shll
push
inc
bound
cmp
xor
mov
sub
pop
fidivrs
adc
fldenv
lock
fmull
test
aam
xor
mov
fucomi
push
and
jge
pop
cmp
cmpsb
pusha
inc
xchg
cmp
fsubrl
rolb
jecxz
rcr
fistps
push
aas
cmp
testb
cmp
bound
adc
dec
notl
adc
loop
cmpsb
imul
xlat
jl
loop
aaa
cmpsb
and
and
jge
mov
out
xor
pop
out
pop
addr16
add
nop
push
jp
push
sub
xchg
jmp
pop
pop
inc
outsl
sub
sbb
xchg
pop
sbb
cmpsl
or
jae
sub
mov
arpl
dec
push
fimuls
jns
lock
jmp
fbld
inc
push
lcall
push
mov
repz
xchg
fsubl
cmpsb
sbb
mov
jge
sti
pop
inc
lods
xor
or
lock
jb
xor
call
into
mov
jbe
outsl
pop
clc
jmp
push
cli
lret
push
jae
test
insl
fs
sbb
and
sbb
lock
outsl
test
mov
fucomip
fldpi
jb
jae
adc
mov
or
push
and
sar
mov
sahf
fnstcw
push
out
push
cmp
cmpsl
das
mov
out
and
in
push
imul
dec
mov
inc
mov
sub
popa
dec
jle
fsubl
jb
jmp
mov
mov
or
adc
jp
mov
arpl
xchg
jmp
enter
xlat
pusha
push
xchg
call
cmp
push
in
push
fldl
outsb
mov
fwait
jae
cmp
cmp
cmp
add
xchg
or
cld
xor
imul
xchg
xor
push
mov
or
js
ret
mov
xor
xor
sub
loop
xchg
sarl
push
inc
test
shlb
sbbb
jle
or
push
test
push
loopne
sbb
popf
scas
in
popa
cmc
data16
lret
aad
mov
add
pop
es
sbb
jmp
jmp
subb
pop
lods
and
sahf
pushf
je
jl
int3
stc
stos
neg
mov
pop
cli
sarl
rcrl
andb
inc
and
add
stc
int
or
out
icebp
test
mov
jmp
repnz
xchg
fs
ljmp
adc
lock
cli
push
into
xor
push
fcoms
loop
cld
dec
mov
in
movsl
push
xchg
add
mov
sti
mov
sub
int
add
push
icebp
add
stos
inc
or
idiv
pushf
mov
mov
cmpsl
pushf
stc
in
dec
add
mov
loopne
addr16
cwtl
or
out
add
out
and
sub
sub
mov
mov
imul
in
in
aam
shrb
adc
push
rolb
xchg
jl,pt
mov
leave
xchg
adc
dec
add
ss
stos
mov
pop
push
mov
xorl
and
ljmp
xor
jp
sub
dec
sub
loope
loope
data16
cmpl
loopne
xchg
push
jne
rcl
lods
cwtl
mov
pop
sub
addr16
or
dec
je
iret
mov
inc
jae
jle
pop
mov
rcrb
mov
push
jae
mov
outsb
mov
push
pop
inc
lcall
mov
in
cmp
sub
xchg
adc
xlat
lods
lahf
mov
sub
ss
xor
stos
in
xchg
cmc
jecxz
subb
ficompl
incl
sahf
mov
jmp
aaa
push
pop
out
lahf
sbb
hlt
xor
lcall
lret
push
mov
test
leave
mov
iret
mov
lds
loop
leave
jle
pushf
movsb
flds
pop
cmp
jg
sub
xchg
out
cmp
mov
push
loope
lock
inc
into
xor
ljmp
adc
cwtl
push
mov
xchg
shr
pop
cmc
xor
outsl
add
ret
ljmp
adc
orl
sbb
jnp
bound
mov
jmp
pop
jl
jnp
jnp
dec
sbbl
repz
mov
scas
pushf
cmp
push
out
sub
out
int3
pop
cmpsb
xchg
pop
mov
push
jp
rolb
mov
pop
mov
push
sub
rep
addr16
mov
rcr
mov
imul
shl
test
dec
xchg
shlb
push
js
lock
les
push
dec
mov
outsb
mov
shlb
daa
rcrb
movsl
pushf
inc
iret
cmc
in
fistl
ljmp
gs
cmp
pushf
pop
fwait
outsb
lahf
mov
fsubl
stos
inc
sub
fmull
cmp
nop
push
loopne
and
cmpsl
adc
pop
jns
or
xor
jl
mov
bound
movsl
popa
rorl
jl
scas
std
xlat
and
pushf
lods
jns
test
xor
sub
movsb
pop
add
rcr
sbb
inc
test
push
mov
fcmovnb
fs
cld
xorb
sbb
sbb
cs
outsb
fisubl
jbe
sub
xchg
xchg
mov
dec
jl
mov
aam
push
sarb
push
popa
int
jbe
mov
and
lods
ja
pop
sbb
imul
lods
push
popf
rcrb
out
leave
int3
xchg
or
jmp
rcl
mov
and
jg
mov
lcall
xor
test
in
imul
mov
cmpsl
push
jb
movsl
cli
jg
das
ret
repz
sub
out
dec
out
xor
sbb
mov
add
mov
daa
mov
jp
mov
repnz
push
inc
imul
test
or
rorl
out
ss
jb
cmp
es
add
rorb
popa
dec
into
cmpsb
lods
lahf
and
mov
jg
adc
out
test
inc
fcoms
inc
pop
cld
xor
jno
add
sub
cmp
outsb
or
xchg
mov
ret
push
adc
das
xlat
divl
les
imul
fsub
mov
pop
jp
movzbl
mov
add
lds
push
pop
stos
nop
movsb
pop
jge
jmp
int3
enter
mov
add
repnz
mov
mov
cmp
or
jne
andb
mov
or
pop
dec
xor
adcb
cmpb
jae
lret
sahf
test
aaa
push
pop
xchg
inc
lods
push
jne
arpl
lret
sub
rcrl
cli
int3
and
les
imul
decl
insl
rcr
or
ds
pop
cmp
push
jbe
sti
mov
js
pop
aas
push
in
in
cwtl
mov
mov
jecxz
push
push
rclb
jecxz
xchg
aaa
push
clc
dec
gs
ret
jnp
sbb
test
add
add
sub
outsb
jle
lcall
cmpsb
jl
sbb
nop
adcl
xor
les
mov
jne
scas
ss
mov
and
and
xor
sub
fdivs
data16
mov
cld
push
in
push
andl
sub
subl
adc
iret
mov
push
mov
mov
orl
xor
push
stos
inc
pop
adcl
pop
das
scas
push
pop
inc
ret
cmp
in
sarl
icebp
pusha
movsl
inc
sub
xlat
add
jl
dec
loope
sbb
lds
and
out
xchg
aad
mov
push
jae
mov
movsb
lea
dec
mov
lret
xorb
cmp
rcr
xchg
insb
pop
xor
fisubl
dec
push
mov
out
xlat
imul
es
hlt
mov
js
adc
pop
dec
test
push
xor
xchg
vmwrite
sub
mov
pop
pop
decl
and
jge
in
aas
punpcklwd
pop
xor
repz
lret
inc
sub
movsb
mov
dec
xor
add
and
sbb
mov
pop
dec
int
sub
call
add
notl
sarb
scas
aam
add
mov
or
clc
in
sti
scas
lods
jbe
stos
lahf
popf
push
jle
mov
push
mov
mov
cmpb
data16
lcall
fmuls
mov
or
pop
jae
imul
cs
dec
sbb
mov
lock
push
js
mov
addr16
push
filds
pop
test
fstpt
cmc
mov
jge
pop
ja
xor
and
movdqu
mov
outsb
push
cmp
jecxz
les
and
and
jge
pop
fwait
mov
lock
or
pop
test
xchg
fsubrl
push
push
in
add
push
xchg
lret
mov
cmpsl
in
int
xchg
out
dec
mov
cmp
jb
jp
jl
std
or
loop
mov
xchg
cmpsl
push
test
outsl
pop
stc
add
push
sbb
jle
and
loopne
push
push
mov
ror
decb
pop
cmp
iret
or
bound
or
jns
mov
adc
cmp
or
mov
and
subps
and
les
lds
pop
cmp
fidivl
repnz
fwait
or
xchg
dec
cltd
adc
imul
aaa
repz
mov
shll
sbb
mov
call
in
or
mov
jnp
jno
aad
push
add
inc
leave
in
inc
push
dec
ja
daa
clc
push
popf
fld
fisubrs
and
cmpsl
int
adc
pop
jge
and
adc
subl
lahf
adc
jle
push
jne
arpl
ljmp
jmp
das
sbb
movl
gs
repz
sbb
xchg
lret
movsb
jnp
jmp
jecxz
push
cmp
pop
pop
test
daa
lods
sbb
jns
repnz
dec
clc
fwait
negb
aad
test
sub
push
shlb
sbb
sbb
in
push
int
fwait
nop
mov
sbb
cs
cmc
shll
shl
loopne
xchg
mov
jae
out
cmp
icebp
xchg
mov
and
jmp
push
adc
stc
xchg
inc
cmp
outsb
adc
lock
jne
jmp
fstps
cltd
inc
fs
loopw
mov
cmc
jle
mov
nop
lock
pop
adcb
shrl
mov
jl
jo
scas
cmp
push
test
rcll
xchg
or
out
jbe
and
mov
adcb
mov
push
xchg
int
out
dec
jecxz
in
xlat
inc
jo
mov
mov
inc
nop
loopne
mov
sbb
divl
mov
call
xor
lds
dec
inc
pop
cmpsb
out
loopne
xchg
sti
sahf
adc
ss
xchg
or
push
sbb
xchg
or
loope
jae
mov
out
ret
in
fs
pop
lock
ljmp
shll
pop
mov
add
pusha
xlat
mov
or
push
cs
push
cmp
jno
xor
in
mov
mov
push
pop
insb
ss
fdivrs
loope
or
in
movsl
loop
or
sbb
xor
mov
scas
outsl
xchg
or
cmpsl
push
add
jmp
xchg
inc
ja
jmp
dec
jp
xorl
xchg
mov
das
dec
sbb
and
pushf
mov
shll
fists
rcrb
jecxz
and
incb
std
cmc
jge
push
jo
movsb
jle
xchg
or
test
outsl
nop
xor
das
negl
lcall
mov
lret
or
daa
out
test
jbe
jnp
cmpsb
push
pusha
or
mov
loopne
lods
pop
sbbb
pop
cld
imul
jl
push
or
notb
adc
adc
add
inc
movsl
loopne
mov
xchg
shll
xchg
dec
or
push
gs
xchg
add
push
ja
cli
sub
fisttpl
pop
xlat
data16
lea
xor
mov
xchg
fstl
xor
lret
aad
rorb
adc
insb
jae
lcall
iret
mov
sti
xchg
add
and
mul
sub
xchg
fisttpll
push
test
mov
je
fsubrl
or
call
dec
mov
fsubl
xor
call
cli
xor
inc
sbbl
adc
fdivr
dec
movsb
add
sub
fdivl
and
mov
lea
iret
and
ret
fnsave
dec
jae
scas
or
andl
sahf
cmpb
sbbl
imul
push
lods
nop
les
icebp
xchg
rclb
hlt
jne
add
sub
jecxz
sbb
fcoml
pusha
into
cmpsl
psrad
les
mov
jns
dec
sub
loopne
lahf
pushf
fstpt
add
mov
cltd
outsl
fucomi
test
adc
add
faddp
or
pop
push
loope
mov
jg
add
andl
jmp
add
adcl
lods
mov
ret
add
push
ret
or
nop
xchg
push
push
jnp
out
mov
sub
jge
xor
push
mov
int3
dec
js
les
sub
xor
outsb
int
insb
jmp
mov
xlat
mov
jo
xchg
out
pusha
dec
push
shl
adc
cmpsb
imul
push
out
movsb
push
aas
xchg
inc
ljmp
in
jmp
outsb
add
ljmp
imull
fwait
dec
icebp
push
pushf
loop
mov
rorb
mov
push
sbb
xor
decl
test
test
mov
push
outsb
outsl
lahf
jno
cmp
nop
push
xchg
bound
inc
add
fstpt
inc
aaa
jl
pop
dec
dec
loope
jno
mov
cmpsl
mov
pop
mov
mov
inc
mov
scas
and
mov
loop
enter
xchg
fistps
or
pop
and
lea
rorl
cmp
or
mov
add
movsl
push
jns
das
push
add
sub
mov
push
jmp
dec
push
xchg
xor
jge
cmc
sub
jl
insl
repz
in
sbb
fcompl
jmp
dec
mov
cltd
stc
ret
cwtl
ljmp
leave
fldenv
leave
out
fldl
jmp
sbb
mov
add
mov
mov
jno
movsb
test
addr16
int
mov
xor
aam
negl
rorl
xor
loopne
lcall
in
jb
sub
movsl
mov
scas
mov
push
fmuls
jmp
and
dec
jns
xchg
or
cmp
fwait
movsl
rolb
push
lret
mov
sbb
mov
scas
fidivl
pop
cld
daa
inc
mov
mov
lcall
push
andl
mov
je
xchg
or
js
rorb
jnp
je
jne
jmp
arpl
iret
pop
popf
cmp
xor
pcmpgtb
push
mov
sbb
out
iret
movsb
test
mov
out
ja
jge
addr16
adc
pop
mov
leave
push
mov
mov
cmp
dec
jnp
enter
sahf
xlat
or
mov
fisubl
lock
stos
lret
sbb
pop
icebp
std
pop
cmp
into
inc
cmpsb
lcall
lea
mov
sbb
xchg
xchg
testb
rol
jnp
and
or
call
lcall
or
int3
fstpt
gs
mov
in
adc
and
pop
cwtl
pop
xchg
pop
ja
in
or
push
lahf
mov
jb
and
cmp
movsb
call
dec
out
xchg
cmpl
testb
add
aam
or
lcall
mov
sub
fs
mov
popf
lret
aam
es
test
insb
out
cmp
sbb
loopne
lea
mov
popa
sbb
xlat
icebp
sub
adc
pop
shl
out
cmp
dec
push
iret
stos
test
cltd
sbb
std
incb
pusha
test
ljmp
ret
fstpl
push
dec
jbe
popa
mov
dec
outsl
leave
ror
imul
sub
and
add
pusha
popf
bound
push
lret
push
push
sbb
ret
dec
repz
mov
jnp
divb
dec
and
stc
mov
test
xchg
iret
xchg
push
movb
ja
or
test
fldl
mov
push
inc
lahf
cld
fldcw
push
ja
or
push
push
pusha
and
rorb
mov
ljmp
outsl
mov
cmp
pop
into
gs
clc
out
pushf
stos
fs
test
lods
cli
jge
repz
shl
xchg
pusha
inc
inc
je
and
sub
xlat
daa
ret
scas
aaa
cld
imul
stos
and
adc
jnp
xor
add
adc
sub
jbe
jne
or
jle
cmp
scas
mov
rclb
out
in
mov
test
sub
pop
push
imul
pop
shrb
mov
stos
jl
das
or
push
rorb
mov
fbstp
or
cmp
jae
movsl
lods
sbb
adc
aad
fnstcw
scas
jp
hlt
mov
sbb
rolb
aas
xor
call
mov
or
mov
jb
jmp
pop
subl
jae
sahf
adc
sbb
call
and
pop
rcl
jl
shl
jp
les
sbb
aad
dec
out
cwtl
mov
pushf
cltd
sbb
pop
cmpsl
mov
loope
in
mov
pop
out
movsb
lds
dec
or
mov
fldenv
dec
pop
stos
add
adc
mov
and
stc
xchg
gs
sti
enter
rclb
xor
sub
fcomip
pop
sbb
dec
xchg
xchg
push
mov
and
inc
outsl
loopne
xchg
mov
xor
xor
outsb
cs
xchg
shrl
mov
jns
or
or
int3
fwait
fwait
jae
mov
sti
insb
repnz
mov
cmpb
jb
inc
in
jmp
dec
pusha
outsl
pop
dec
mov
xor
jg
mov
shl
fidivrs
enter
xchg
testl
mov
and
daa
ret
mov
lret
mov
dec
adc
stc
repnz
adc
xchg
xchg
cmp
js
shrl
adc
push
xor
jne
pop
dec
shrb
ljmp
lahf
adc
fcoml
adc
jnp
dec
xchg
aaa
fwait
int3
pop
fidivrl
hlt
popf
mov
cld
lock
mov
fiaddl
cltd
test
pop
push
pushf
and
fcomps
push
jp
std
leave
out
pop
imull
insb
fwait
cwtl
mov
enter
ficoms
pop
cltd
scas
mov
jecxz
cmp
pop
loope
xchg
mov
jbe
test
pop
mov
xchg
inc
push
dec
xor
fistpl
outsb
push
insb
jb
dec
imull
ds
pop
loopne
inc
xlat
adc
jo
dec
popa
jmp
fidivl
into
mov
push
sbb
and
xchg
dec
ret
je
inc
push
sub
maxps
daa
xchg
fistl
out
jno
jg
pop
mov
lods
pop
fistpll
add
loop
add
add
cmp
inc
sub
int
jle
in
subl
in
mov
xor
inc
adc
mov
movsb
rolb
lds
ss
jge
xchg
fisttps
data16
pop
lods
jnp
sub
push
imul
jmp
repz
and
mov
iret
xlat
sysexit
fwait
xor
add
push
adc
rorl
xor
lock
cld
dec
and
int
mov
xor
xlat
mov
push
and
mov
mov
add
jnp
andb
shll
fcompl
dec
xchg
cmpsl
rcrl
popa
sbb
fisttpl
clc
xor
mov
lahf
or
mov
imul
sbb
inc
mov
test
jbe
and
or
mov
lea
and
aaa
cmp
dec
popa
ret
mov
repnz
ljmp
dec
fidivl
mov
xor
cld
sub
and
out
out
bound
ss
xor
mov
jns
push
xchg
jbe
lahf
mov
xor
sub
lea
jnp
add
dec
dec
jne
mov
jne
dec
std
cmp
mov
fidivrs
outsl
jle
pushf
mov
std
fbstp
adc
aaa
inc
push
adc
pushf
push
test
jae
pop
les
imull
push
popf
cmpl
sub
inc
inc
or
data16
test
data16
xchg
jbe
ficoms
data16
scas
in
or
sbb
int
ret
daa
jp
mov
dec
jle
loop
dec
jo
subb
dec
fwait
mov
adc
fistl
in
push
js
push
pop
add
or
and
pop
add
rcl
sub
push
cwtl
aas
lsl
lahf
lock
adc
lcall
xor
in
dec
push
mov
dec
sub
sbb
clc
gs
mov
in
enter
pop
or
test
jecxz
inc
data16
jne
punpckhwd
mov
inc
pop
lds
jbe
cmp
pop
jbe
and
je
sbb
fisubrl
sbb
lock
or
adc
in
rcrb
mov
mov
inc
mov
clc
jo
ret
xchg
or
pop
push
into
imul
and
xchg
mov
xchg
test
pop
dec
push
xchg
mov
fucomip
nop
pop
jne
lcall
roll
hlt
ljmp
xchg
hlt
mov
mov
mov
je
and
mov
jmp
pushf
mov
loop
aaa
push
mov
popf
clc
jmp
repz
or
out
dec
push
mov
sub
dec
hlt
mov
ds
mov
sub
cmp
ds
inc
xor
mov
ficompl
cmpsb
inc
popa
xor
test
mov
pusha
mov
adc
pop
adcl
imul
out
pop
sub
cs
iret
jno
fcmovne
and
test
jp
das
hlt
aas
pop
pop
push
xchg
xchg
and
rclb
in
pop
cs
das
ret
jg
sbb
shr
jecxz
pop
adc
lret
cmpsl
mov
mov
fstl
insb
sub
scas
ret
jne
adc
repnz
xchg
aaa
js
jns
pop
ss
imul
fsub
push
out
xchg
pop
and
out
jne
lods
xorb
dec
leave
sbb
cmpsl
xchg
outsl
in
and
lahf
sub
pop
out
jnp
into
lahf
and
stos
leave
jl
sbb
ret
jno
xor
movsb
mov
push
out
add
movlhps
adc
xchg
mov
jg
jno
sub
push
ret
jmp
pop
out
dec
call
jecxz
pop
and
cmpsl
fwait
mov
jo
das
out
add
cmpl
xor
out
jle
push
xor
inc
insb
sbb
xchg
jns
inc
pop
pop
adc
xor
ljmp
shrb
mov
pushf
std
mov
sub
leave
stos
into
enter
add
shrb
mov
adc
cs
inc
xchg
and
cli
xchg
sub
cmp
sub
movsl
clc
imul
cli
mov
ffreep
jge
loop
push
inc
lea
adc
jae
mov
xor
pop
mov
push
in
pop
pop
cld
lcall
shl
in
push
inc
sbb
cmpb
xor
xor
aam
int3
xchg
mov
cs
sub
stos
out
in
sub
sbb
xor
or
mov
movsb
mov
enter
imulb
nop
sar
rolb
cmpsl
inc
pop
dec
push
cmc
test
das
mov
mov
aad
outsb
cwtl
lods
out
pop
fs
outsb
push
jecxz
lahf
cmp
sub
add
jbe
pop
mov
mov
mov
adc
int
das
mov
cli
aam
jmp
cmp
or
mov
decb
xchg
hlt
pop
xchg
lods
pusha
pop
xor
cltd
xchg
jecxz
push
dec
sarl
jp
adc
xor
imul
mov
int3
push
xchg
popa
xchg
shlb
lretw
mov
out
inc
pop
subl
lcall
shr
dec
ja
push
cmp
jg
mov
fiadds
pop
rcr
and
and
pop
cmpsb
xchg
loopne
add
and
xor
mov
adcb
scas
pop
push
jecxz
les
mov
or
push
sbb
cmp
pushf
inc
push
dec
jns
xchg
mov
arpl
push
test
push
push
cmp
pop
dec
lock
inc
pop
and
add
dec
jp
adc
out
testb
cmp
push
pop
in
cmp
pop
add
sub
bound
call
addr16
test
xchg
add
pop
fmul
cltd
mov
xchg
pop
fldt
cld
out
inc
jnp
repnz
jl
jns
xchg
push
jo
mov
pop
ljmp
xchg
std
ret
nop
add
xchg
test
insb
jecxz
cmp
cli
xchg
add
and
ss
cs
testl
mov
les
push
push
jmp
mov
dec
std
imul
push
xchg
jl
push
jne
dec
mov
movsb
jl
addb
ret
hlt
mov
cld
inc
ret
repz
mov
test
insl
pushf
jns
push
sti
loop
sbb
xchg
dec
pop
imul
xor
dec
test
mov
push
jp
bswap
jnp
cld
mov
out
dec
pusha
cmp
mov
mov
cmpsl
out
jns
push
test
xor
or
dec
lahf
ljmp
cmp
leave
ret
ret
rcrl
inc
repz
sarb
push
out
mov
mov
lcall
sbb
ljmp
lahf
push
lahf
daa
xchg
mov
inc
mov
popf
jecxz
mov
adc
dec
mov
inc
addr16
lods
jmp
cmp
lret
jecxz
int
movsl
mov
repz
popf
sub
mov
push
mov
and
mov
sbb
push
movsb
cmp
fwait
xchg
mov
pushf
push
inc
mov
and
push
fcom
push
mov
mov
cmp
ljmp
push
mov
popf
mov
movq
in
repz
dec
push
and
insb
ljmp
lds
out
mov
loopne
fisubl
movl
enter
aas
jb
and
cmp
stos
test
in
int3
scas
leave
sbb
ss
data16
pop
push
sub
sarl
addr16
sub
fimull
sub
stc
cmp
and
inc
mov
jl
int
pop
cmp
inc
mov
fistps
dec
cs
mov
mov
adc
push
loop
aaa
inc
jne
pushl
sub
adc
jns
aas
cs
aam
jnp
idivb
cmc
test
xlat
sub
fwait
cmc
mov
in
addr16
xchg
push
mov
or
out
fcoms
aad
jo
test
and
cli
push
add
test
shrd
adc
cmpsl
ffreep
pop
cmpsl
adc
add
push
in
add
into
out
clc
ss
pop
aas
or
add
xchg
xchg
xchg
xor
jge
ja
pop
and
cmpsl
insl
cmpsl
xor
push
mov
aaa
loopne,pn
push
mov
xchg
in
add
jg
mov
jbe
outsb
rcr
cmpsb
sbbb
aad
dec
imul
bndldx
inc
sub
or
cs
inc
lock
cmc
add
fists
test
and
lods
mov
cmovne
mov
pop
push
mov
jl
pop
mov
sti
pop
mov
fnstsw
cmpsb
push
bound
je
les
xchg
imul
sub
pop
xchg
adc
movb
fistpl
fisttpll
leave
cmp
in
out
cltd
hlt
or
mov
ljmp
nop
dec
push
and
movsb
or
dec
jg
jg
xchg
xor
jmp
dec
shll
push
jecxz
xor
sbb
inc
adc
push
xor
and
sbb
adc
mov
add
lret
movsb
outsb
add
sub
rcll
push
cld
das
aas
fistl
jo
and
sub
mov
adc
push
js
xchg
lcall
cmp
or
std
cmp
push
or
imul
daa
ja
xchg
cmc
mov
and
and
xchg
push
or
popf
popa
jg
mov
xor
sub
fcomps
mov
add
mov
mov
fldenv
pop
inc
jp
les
mov
sub
jl
jecxz
es
jmp
inc
mov
data16
mov
adc
clc
jg
daa
jge
jne
add
push
sbb
adc
jecxz
add
mov
scas
mov
fwait
sbb
fisttps
arpl
mov
daa
dec
lahf
outsl
stos
mov
lret
pop
das
loope
pop
subl
data16
pop
and
mov
stc
inc
inc
inc
jl
call
stc
add
mov
out
lret
cltd
fmull
outsl
clc
push
icebp
lods
push
inc
cs
lea
mov
in
ljmp
mov
leave
loope
and
mov
dec
or
push
mov
mov
lahf
scas
movsb
push
sub
clc
push
sbb
shl
lret
dec
mov
adc
jl
xabort
icebp
loop
inc
iret
push
cs
pop
mov
cmp
inc
mov
imull
mov
adc
cld
adc
xor
sbb
call
mov
ret
lea
popa
adc
inc
xchg
dec
pop
ret
jl
mov
jo
rcrl
scas
cmpsl
into
sbb
ljmp
push
xchg
into
pusha
xchg
imul
push
sbb
cmpsl
or
fiaddl
test
repnz
pop
inc
cmp
push
mov
sbb
xchg
lahf
push
xchg
out
sub
out
push
shrl
inc
jp
lret
ret
cmc
mov
cwtl
xchg
cmpsl
setnp
sub
lret
orl
mov
addr16
jno
repz
int3
jle
imul
das
dec
inc
popl
sbb
xor
cmp
je
iret
push
mov
xor
fdivrl
fldl
adcb
sbb
sarb
lea
jae
fdivr
loope
xor
sbb
push
dec
sub
cmpsb
pop
frstor
aas
fnstenv
je
fiadds
mov
or
mov
je
mov
jg
dec
movsl
scas
adc
fwait
cmpsb
adc
sbb
mov
pop
jp
and
popa
in
push
roll
insl
pop
das
dec
popa
fimull
mov
loop
sub
pop
xor
imul
prefetchwt1
mov
dec
lahf
ret
mov
inc
shrb
push
add
nop
and
adc
cwtl
push
ror
adc
dec
dec
dec
popf
xchg
fstps
cli
dec
cwtl
cmp
jg
jmp
lds
xchg
and
mov
fldt
or
xchg
jno
add
dec
jb
xchg
jle
cwtl
fwait
das
xor
out
hlt
popf
push
aas
outsl
pop
lahf
sub
push
insl
pop
les
mov
jecxz
push
xchg
xor
xchg
shl
das
loopne
mov
cmp
sub
test
popa
cmp
mov
xchg
flds
mov
add
or
aas
movsl
pop
std
dec
xor
inc
sub
mov
push
push
lods
mov
adc
mov
dec
lret
lods
lahf
and
fistps
iret
pop
adc
inc
inc
inc
add
mov
push
mov
movb
pop
cs
pop
mov
pop
arpl
fimuls
or
sub
mov
push
cmp
pop
adc
ret
and
ja
cmp
mov
sub
mov
add
sbb
jno
jle
adc
inc
scas
dec
sbb
je
and
jb
xchg
push
mov
ja
add
lea
adc
scas
ss
or
cs
inc
dec
pop
xchg
or
inc
lods
push
outsl
cli
and
loopne
dec
rcrl
cli
xchg
mov
inc
sbb
or
lods
add
pusha
add
ss
std
bound
outsl
leave
shrl
ss
repz
leave
aaa
cmpl
incb
inc
sahf
outsb
lods
shr
and
jne
cltd
cwtl
xchg
stos
xlat
clc
add
pop
push
xchg
sub
cmpsb
js
std
lcall
stc
mov
fidivs
mov
test
sub
in
arpl
xchg
mov
or
inc
dec
pop
xchg
push
ja
xchg
and
jge
dec
xor
mov
cwtl
ja
int3
aaa
popl
arpl
cld
xchg
cmp
pop
loop
fucomi
xor
insl
xor
popf
add
jg
push
mov
inc
pushf
fs
jmp
pop
les
adc
and
add
pop
pop
mov
outsb
push
or
xor
add
sub
leave
push
mov
fiaddl
mov
gs
inc
jmp
jmp
fdivs
xor
and
mov
lret
and
mov
cld
decb
divl
loopne
fldl
mov
adc
rorb
inc
testb
arpl
divl
xchg
and
pop
xlat
test
push
jb
jno
jbe
or
lea
and
sbb
hlt
mov
mov
je
imul
mov
cs
ss
pop
push
xor
movsb
icebp
mov
jae
insb
dec
pop
push
mov
dec
dec
ja
push
or
fsubrl
orb
jo
push
stos
jnp
in
addr16
adc
xor
fneni(8087
sub
js
sub
loope
stos
sbb
sbb
xor
inc
sub
pop
jg
aad
sub
mov
and
aad
jo
fsubl
xchg
push
push
pop
pop
repz
push
pop
adc
xchg
int
jno
call
mov
ds
gs
adc
sahf
jecxz
cmp
jno
rolb
ret
imul
stos
bts
mov
mov
cld
dec
lea
stos
jl
dec
pop
out
xor
and
scas
std
sahf
pushf
pop
std
loop
dec
ret
jecxz
jnp
mov
dec
sub
sbb
icebp
rcrb
aaa
mov
data16
sbb
pop
std
pop
andb
xor
ret
imul
sub
lea
push
scas
push
push
dec
push
outsb
mov
xlat
pop
test
jle
pop
or
aas
aad
test
sub
loopne
inc
bound
addr16
iret
insb
jno
jns
push
mov
fdivl
add
ret
mov
sub
ja
mov
lret
cmp
pop
or
inc
test
call
lcall
jp
je
popa
mov
add
ret
lahf
sub
xchg
or
hlt
mov
shrl
inc
aas
xor
add
jle
jbe
js
push
data16
jbe
popf
scas
and
inc
jmp
lds
fdivr
sbb
or
mov
dec
xchg
jae
xchg
and
fbstp
jo
jno
xorl
in
mov
fildl
jmp
hlt
and
sbb
ret
mov
sub
dec
dec
sub
aam
inc
mov
pop
jg
and
push
test
das
jmp
call
dec
in
ret
inc
dec
jge
sbb
push
sbb
enter
sbb
divps
xchg
dec
mov
sub
jne
fisubl
idivb
mov
push
gs
and
inc
cmp
fwait
testb
movsl
add
mov
into
xchg
jno
les
fwait
scas
sbb
mov
and
fcoml
outsb
push
test
cmpsl
fistps
sbb
mov
jbe
outsb
aas
lahf
insb
xor
mov
adc
jne
adc
sub
stos
mov
imul
xor
repz
xchg
notl
and
jp
or
rcrl
jecxz
xor
jo
cmp
call
aam
lods
xchg
leave
sahf
push
push
scas
push
pop
and
daa
cmc
ja
movsb
mov
stos
and
pop
pushf
inc
cmc
jne
inc
sub
popf
adc
or
sbb
mov
test
mov
dec
mov
cmp
rcrb
and
sti
fs
sub
es
jle
sub
xor
cld
cmp
lock
cmp
sti
lds
adc
punpckhbw
mov
leave
fsubs
rorl
add
call
fsubl
fwait
fst
mov
mov
out
lret
fmull
or
fwait
sahf
xchg
mov
sub
ds
cmp
cmp
or
inc
inc
insb
addr16
add
ret
movsl
ss
icebp
mov
sub
jge
movsb
insl
cmp
cmp
popf
movsl
xchg
sbb
data16
xchg
flds
cmp
rcrb
clc
ficompl
jecxz
jns
ds
test
andl
loope
inc
cwtl
jp
add
sldt
cmp
mov
cltd
out
jg
out
subb
push
adc
pop
xchg
push
jecxz
xor
mov
fisubrs
dec
adc
ds
xchg
data16
cwtl
add
std
fwait
mov
mov
lcall
pop
cmp
test
lret
scas
ds
fisubrl
mov
push
cli
sbb
dec
mov
call
xor
out
gs
inc
add
hlt
int3
add
fs
shll
fistl
push
pop
sarl
cmp
iret
pop
inc
loopne
lret
jo
rcrl
adc
shll
cmp
push
push
lret
stc
sub
push
out
ljmp
mov
mov
mov
cmp
adc
lods
pop
cmp
jp
mov
or
jae
xlat
stc
rclb
fnstsw
jl
xchg
add
mov
jb
dec
int3
imulb
sbb
ja
fcoms
std
rol
add
dec
mov
xchg
fisttpl
dec
fdivp
cmp
xor
int
loope
mov
fdivrp
ja
sbb
outsb
outsb
pop
pop
and
fldcw
xchg
imul
repnz
push
sahf
test
test
mov
in
mov
fidivl
ljmp
test
sar
fldl
test
cmp
jbe
xchg
push
pop
jne
jp
ss
xor
in
add
push
sub
and
push
jnp
mov
lds
jo
cltd
neg
nop
jo
nop
cmp
inc
cmp
outsb
mov
mov
int3
mov
je
mov
sahf
push
mov
xlat
pop
mov
movsl
mov
pop
xor
lds
lea
lods
pop
sahf
or
sbb
lea
movsl
jns
movsl
repnz
jecxz
xchg
pop
aas
mov
push
out
mov
fcomi
push
loopne
push
divb
jge
jge
pop
aaa
int
cs
loope
jns
sti
flds
and
sbb
mov
lret
iret
push
jg
imul
in
test
or
or
aam
jbe
ret
int3
xor
dec
scas
inc
xchg
mov
insl
test
push
mov
push
sub
or
insb
fnsetpm(287
sub
stc
xchg
sbb
fcomps
fnstcw
cwtl
test
mov
inc
pop
sahf
jmp
shrl
std
dec
pop
dec
gs
adc
and
clc
push
jmp
outsb
mov
or
fwait
and
lods
movsb
clc
push
pop
imul
jecxz
call
lahf
sub
movsl
mov
or
popa
or
cli
scas
pop
dec
xor
push
cwtl
mov
or
sbb
jle
push
int
pop
popa
iret
and
out
dec
pop
jae
ss
mov
or
push
adc
jecxz
inc
push
cmp
call
rcr
lcall
pusha
sti
movsl
insb
jbe
mov
sbb
mov
xchg
sbbl
sbb
push
push
mov
sub
in
pop
dec
sbb
movl
xor
fildll
imul
inc
repnz
mov
iret
xchg
iret
or
lods
or
dec
std
pushf
push
inc
cwtl
pop
das
in
xlat
roll
xor
ds
xlat
inc
sub
popf
ja
jp
pop
js
push
getsec
or
fwait
in
dec
clc
int
add
mov
xor
jae
pop
inc
arpl
aas
mov
lock
and
xchg
addb
mov
cli
lods
mov
xchg
scas
inc
rclb
push
icebp
aam
pop
inc
inc
jl
fldenv
adc
cmp
lds
hlt
imul
mov
sbb
mov
mov
pusha
jns
dec
mov
jns
dec
shlb
leave
inc
or
icebp
test
jo
in
cmp
mov
popf
cld
rcrb
insl
aam
dec
out
lea
jns
mov
sarb
inc
sar
pusha
xchg
sbb
iret
inc
cmpsb
dec
cs
adc
cmp
mov
xchg
les
lret
sbb
mov
pop
pop
lods
push
jmp
mov
je
lock
xor
clc
mov
cwtl
pop
notl
sbb
outsb
xchg
ds
mov
sbb
je
pop
jo
movsl
lahf
push
push
lahf
call
inc
add
out
xor
mov
dec
enter
pop
sub
aas
imul
mov
insl
je
popf
xor
inc
int3
push
cmp
fdivp
ret
jno
push
push
fwait
or
repnz
shlb
testl
cmp
js
lahf
shl
fcmovb
mov
sbb
jl
fsts
sub
lret
je
fsubl
mov
outsb
scas
or
lahf
add
inc
jecxz
fidivrs
rcll
add
xchg
dec
hlt
xchg
cmp
xchg
sub
sbb
mov
push
push
pop
inc
fcmove
sub
xor
lds
sbb
or
pop
scas
inc
ss
mov
repz
popa
and
cmp
cmp
mov
cmp
adc
outsl
and
imull
adc
subl
xchg
xchg
push
pop
adcb
fwait
rorb
mov
shll
push
dec
push
popf
shll
rcr
jbe
gs
sbb
adc
ljmp
jns
popw
stc
dec
inc
add
mov
mov
out
pop
and
or
iret
outsb
mov
dec
shll
xor
or
lcall
mov
shr
mov
or
push
xor
or
xchg
je
fcomps
es
fcomip
mov
push
cwtl
cs
out
rol
in
adc
shrb
mov
mov
xor
pop
gs
leave
gs
fisubrs
sub
add
cmp
les
cmp
push
dec
or
daa
cmp
adcb
cmp
jo
es
test
lea
sub
in
movsb
and
sbb
sbb
arpl
ror
mov
pop
arpl
das
stos
pop
cmp
or
clc
mov
insl
or
test
cld
sarb
mov
loopne
repz
notl
stc
ret
loop
cmc
repnz
sbb
push
mov
stos
add
gs
rorb
insb
pop
push
mov
push
imul
dec
add
fmuls
lods
xlat
outsl
aad
daa
pop
add
sbb
ret
push
cltd
icebp
jae
clc
jno
jle
and
sub
mulb
cmp
fsubrl
test
loop
dec
jp
jns
dec
adc
inc
pop
cld
fadd
push
icebp
bound
sti
inc
test
pop
add
aaa
sbb
imul
xor
mov
or
xor
sbb
ret
mov
push
outsl
in
out
cmp
and
fs
xchg
jb
test
mov
fisttpl
and
loopne
dec
iret
and
test
push
jbe
mov
mov
imul
sbb
repnz
sbb
sti
fs
push
hlt
sbb
imul
lcall
mov
repnz
arpl
jg
aad
lahf
mov
push
sub
test
ret
das
mov
mov
pop
push
test
pop
pop
out
push
or
jno
cli
or
dec
cli
mov
arpl
push
icebp
int3
aam
adc
jne
or
js
lods
andb
mov
adc
jecxz
pmovmskb
je
jae
lahf
stos
jae
mov
pop
inc
popf
mov
inc
add
inc
xor
rorw
cmp
lret
notb
aaa
sbb
add
jmp
inc
repz
and
mov
rcl
cld
dec
mov
addl
int
inc
in
or
xor
jns
in
cmp
inc
ljmp
sub
sub
push
mov
push
out
add
pop
mov
adc
sub
pop
xchg
dec
lds
xchg
popf
enter
dec
xchg
mov
inc
imul
jmp
test
xchg
sbb
icebp
ljmp
dec
or
cmc
adc
rorl
test
xchg
mov
cmc
shlb
in
or
pop
mov
cmp
sbb
shl
gs
es
stos
mov
xor
mov
fwait
jb
pop
out
testl
pusha
adc
sub
mov
addr16
rcl
pop
adc
popa
cmp
repnz
in
and
mov
stos
popa
pop
sub
xor
repz
mov
pop
clc
jbe
jns
push
stos
rclb
sti
jp
push
mov
xor
pop
fidivl
cli
rclb
xor
sub
cs
icebp
mov
imul
fsts
dec
je
push
push
neg
je
ds
cmp
sbb
leave
adc
sti
cmp
sub
xchg
jb
mov
or
sahf
add
adc
mov
je
imul
cmc
push
cs
pusha
xor
int3
leave
es
cmpsl
push
push
jl
and
insb
enter
mov
and
or
fmul
pop
and
pop
or
add
jge
cld
or
imul
data16
pop
loope
lret
mov
scas
xchg
inc
adc
xchg
sti
addr16
decb
daa
dec
cmp
sub
arpl
xor
lcall
repnz
clc
mov
push
dec
cwtl
out
sahf
mov
test
insl
sub
xchg
mov
hlt
fwait
inc
jp
jmp
rcl
fistpll
mov
xor
lods
inc
test
or
jp
cs
adc
mov
pop
sbb
push
or
sub
sbbb
mov
jbe
sahf
int
xchg
pop
jmp
cmc
or
inc
dec
mov
roll
mov
cld
add
ret
push
movsl
ss
mov
jne
enter
frstor
aam
ljmp
mov
or
jmp
adc
je
stos
xchg
bound
pop
iret
rorb
jnp
ret
movsb
loop
and
mov
repz
mov
pop
push
mov
enter
je
cmp
insb
and
dec
fwait
aas
dec
pushl
add
inc
enter
xrelease
mov
pop
xor
xchg
faddl
rclb
mov
pop
loop
xor
out
mov
push
xor
pop
mov
loopne
ja
mov
outsb
out
insl
add
mov
pop
jp
push
xlat
insl
xchg
imulb
pop
inc
icebp
sarl
inc
pop
mulb
push
pusha
or
xor
das
stos
adc
imul
lret
aam
mov
stos
push
int
fnsave
mov
cmp
xchg
dec
outsb
push
inc
in
inc
lcall
sbb
pop
xor
ret
sub
sub
adc
or
add
lahf
sbb
and
stos
out
fwait
sub
outsb
loopne
into
fistps
sbb
mov
les
jmp
cmpsb
cli
clc
sbb
in
sbb
pop
sub
or
daa
xor
icebp
aad
repz
repnz
insl
push
sti
fsubs
loopne
mov
adc
add
lods
cli
cld
or
xor
mov
call
dec
js
stc
pop
cld
out
jge
push
ret
out
aaa
xchg
setl
pop
jo
paddd
mov
cmp
mov
xchg
mov
rcrb
xor
jp
sti
sbb
decl
pinsrw
hlt
mov
adc
jne
inc
jp
inc
pop
ss
mov
shl
movsl
aad
pushf
js
xor
repz
cmp
out
and
jp
mov
mov
aam
jno
test
fs
pop
cmp
jbe
xor
xchg
out
add
or
add
loop
scas
or
out
jo
push
push
dec
lret
notl
mov
in
xor
add
xchg
rcr
pop
push
add
stos
aad
adc
sarl
fxch
daa
outsb
aas
daa
push
fsubr
in
lods
adc
fs
mov
adc
pushf
mov
lcall
daa
dec
nop
outsb
inc
popf
jno
rolb
rorb
mov
xor
sub
jns
sbb
mov
mov
and
ret
rclb
xchg
jb
jmp
sub
or
xor
sbb
or
rsm
jbe
cli
add
out
imul
insl
int
mov
push
dec
sti
sbb
xchg
int3
enter
and
int3
xchg
cmp
mov
andl
adc
sbb
xlat
and
enter
pushf
cmp
sbb
loope
cltd
jmp
cmpsb
int3
pop
mov
mov
repz
inc
or
pop
jmp
pop
sub
mov
sbb
push
stos
dec
sbb
vmread
cli
outsb
stos
sub
icebp
push
push
ss
xchg
sti
inc
mov
push
scas
cmp
push
mov
mov
loope
add
fildl
fcomip
ss
add
in
xchg
xchg
clc
inc
icebp
mov
push
fistps
sarb
add
les
stos
xor
mov
sbbl
push
das
cld
adc
jg
popf
jne
cmp
dec
lock
lods
cmp
int
adc
scas
xchg
aam
out
aam
mov
popf
push
shrb
xchg
add
sub
fdivrl
jo
and
scas
mov
sbb
push
test
or
xchg
xor
jns
iret
mov
pusha
mov
jns
sbb
xchg
ds
inc
insl
sahf
clc
cmp
pop
inc
ljmp
cltd
pop
ret
insl
mov
and
cmp
or
bound
fucomip
push
adc
pop
mov
out
push
andb
mov
mov
xchg
jge
mov
loope
sub
pop
lret
inc
sub
inc
int
mov
mov
shrl
jb
cltd
adc
and
fnstsw
es
pop
sarb
enter
aaa
sub
pop
push
in
pop
sbb
mov
daa
in
pop
pop
sahf
mov
hlt
mov
and
mov
inc
and
mov
test
jle
push
adc
jne
in
inc
stos
sahf
dec
pop
bound
sbb
push
iret
add
je
test
scas
stos
stos
push
xchg
inc
or
and
pop
cmpsl
int
mov
negb
pop
inc
idivl
popf
sub
out
xor
lret
or
test
fucomi
ret
mulb
fs
jle
outsl
fsubp
andb
pop
xor
push
shlb
or
pop
out
add
fwait
iret
push
outsl
nop
int3
int3
push
xchg
cmp
out
pop
scas
dec
xor
xor
mov
jae
or
jge
mov
leave
pop
fwait
xchg
ds
or
mull
mov
xchg
mov
sbb
sub
or
repz
into
mov
dec
dec
add
xchg
sub
icebp
mov
jbe
sbb
jbe
xchg
inc
imul
notb
insl
clc
pop
add
cmpsb
inc
sar
xacquire
adc
sub
ret
push
xor
sbb
or
lods
repnz
nop/reserved
cs
push
add
sarb
popl
jnp
stos
into
mov
fsubrs
stc
int3
xchg
and
in
sub
sub
adc
test
cwtl
nop
inc
aaa
pop
insb
add
add
pop
push
sbb
aas
cli
push
jmp
pop
sub
cmpsb
sub
xchg
pop
add
stos
add
adc
outsl
imul
lret
cli
jl
test
xchg
andl
fcmovbe
repz
adc
and
sub
stc
and
fnstsw
lret
xchg
pop
pop
pop
ljmp
scas
xchg
dec
ffreep
sbb
dec
outsb
push
call
call
je
dec
int
stos
scas
ret
into
push
fmuls
aad
cmp
mov
orb
and
cmpsb
inc
stos
test
xor
mov
inc
pop
mov
sub
mov
or
sub
sub
push
dec
ja
iret
push
popf
sub
dec
mov
dec
sbb
mov
js
fistl
hlt
out
sysexit
paddusw
and
aad
stos
fs
movsl
push
mov
or
inc
inc
and
add
movsb
rorl
and
pop
mov
cli
xchg
out
inc
lock
mov
lret
fs
aad
movsl
inc
fnsave
add
push
sahf
jle
repnz
xchg
dec
xor
sub
je
aaa
enter
out
mov
xor
outsb
repnz
lahf
jae
pop
stc
loop
or
addb
and
loopne
or
xchg
clc
push
inc
xchg
cmpsb
xchg
sbb
jge
mov
xor
xlat
sbb
insb
jmp
mov
xchg
pop
or
and
insl
ret
sbb
and
mov
xchg
in
xchg
sub
pop
xor
add
adcb
dec
popa
xor
push
mov
mov
fsts
sub
push
cmpsl
add
mov
mulb
test
fisubrs
out
xchg
add
lahf
jno
jecxz
into
xchg
scas
or
ja
xor
loop
mov
sbb
fstl
jecxz
dec
lock
mov
jl
test
cmpsl
lds
xor
test
adcl
lret
mov
sub
xchg
xlat
pop
push
pusha
lret
push
sbb
sarl
inc
shr
adc
inc
inc
cmpsb
push
sub
aas
sbb
mov
in
mov
ficoms
pop
xchg
xchg
pop
mov
xor
imul
lahf
xorl
adc
and
xchg
push
mov
sub
int
xchg
push
add
mov
mov
decl
hlt
imul
lock
stos
mov
inc
jbe
sub
add
stos
out
ljmp
mov
lods
push
popa
sub
push
adc
adc
pusha
imulb
aam
mov
dec
cltd
xchg
and
lods
mov
xchg
sbb
cmp
addl
scas
mov
push
or
mov
or
in
jne
js
adc
mov
adc
ss
movsl
inc
mov
add
int3
or
ret
call
int3
jmp
dec
pop
sti
jnp
out
pop
sbb
orl
cmp
and
pop
add
adc
add
adc
cmp
sub
repnz
xchg
hlt
push
cmc
mov
stos
lret
sbb
mov
std
or
xchg
scas
lea
outsl
mov
cmpsb
fwait
mov
dec
pop
shrl
dec
std
gs
inc
cli
adc
popa
pop
pop
faddl
add
dec
xchg
shlb
add
cld
je
mov
and
in
cmpsb
mov
cltd
loop
std
mov
loopne
mov
and
data16
mov
lock
popaw
lock
enter
xor
fwait
repz
outsw
repz
xchg
imul
add
and
and
cmp
push
cmp
rol
xchg
and
shl
clc
or
icebp
repz
iret
dec
add
mov
fwait
inc
out
dec
sub
test
ficoml
sbb
in
cmp
cld
and
sub
lds
pop
xchg
or
fs
pop
pop
orb
inc
xchg
push
cmp
in
pop
rcrb
mov
cmp
xchg
shll
jnp
mov
pop
mov
adc
aaa
mov
notb
mov
add
cmp
lods
sub
es
mov
pop
fcmovbe
adc
or
push
or
or
or
test
sub
push
je
push
push
dec
dec
pushf
push
dec
jp
lret
push
movsb
notb
pop
or
mov
sahf
cmp
cmpl
movsl
push
inc
test
insl
rorl
mov
jne
rcr
mov
fwait
sbb
loope
pop
jne
xor
stos
add
jge
adc
arpl
jo
pushf
or
int
dec
xchg
addb
xor
push
cmp
mov
or
je
imul
in
sub
mov
div
rcr
jae
mov
mov
inc
push
cs
ret
xchg
push
inc
adc
stos
xchg
jle
lock
icebp
aaa
lret
inc
insb
es
in
inc
mov
xchg
xchg
loope
pop
mul
sbb
and
bound
mov
dec
cmpsb
pop
lret
and
into
mov
sub
pop
sub
pop
inc
fidivrl
lock
ljmp
shll
xchg
sbb
loop
mov
jnp
xchg
clc
gs
cld
into
das
movsl
xor
in
cwtl
cmp
pop
cli
test
cmp
mov
lods
lret
mov
xchg
adc
sbb
addr16
cmp
xor
aas
mov
inc
pop
mov
les
mov
filds
shl
int
mov
fwait
aas
call
mov
es
cmpsl
shl
lahf
dec
xchg
xor
pusha
xor
inc
in
jp
xchg
jne
add
loopne
lods
inc
test
cmp
ljmp
test
sub
adc
cmp
dec
sbb
push
inc
sub
scas
outsb
cli
mov
or
sbb
sahf
jnp
inc
and
daa
bound
je
sbb
fwait
mov
sti
mov
shl
xor
test
je
cmp
test
popf
repnz
xor
mov
das
xchg
ret
and
orl
mov
cld
imulb
rep
je
inc
sub
test
out
mov
jmp
inc
xor
in
inc
mov
insb
iret
sub
pop
lds
jmp
dec
jl
or
fcompl
cli
xor
test
add
push
repz
xchg
negl
or
mov
lahf
xor
adc
and
bound
ror
pop
cmp
sarl
mov
fwait
aaa
out
xor
inc
clc
sub
bound
and
pop
push
pop
subb
jae
call
mov
std
xchg
gs
adc
adc
nop
push
fildll
or
mov
add
popf
mov
inc
and
lea
rclb
pop
push
adc
cmpsl
mov
frstor
fcoml
jns
and
ja
mov
xor
inc
test
lock
mov
pop
loopne
jne
add
cs
mov
inc
add
ljmp
leave
sbb
lahf
ja
xchg
cld
mov
xchg
hlt
xchg
movsb
push
es
sub
xchg
jecxz
test
cmpl
std
mov
movsb
sub
stos
sbb
or
daa
gs
jp
jle
rorb
rolb
or
inc
mov
insb
cmp
push
fst
pop
jb
in
lods
jg
aaa
add
pusha
xor
jecxz
or
pop
shrb
or
xorl
into
in
push
fst
hlt
ljmp
fldlg2
fstpl
pop
inc
xchg
mov
pop
mov
jmp
push
add
sub
mov
jp
in
adc
lcall
and
les
dec
inc
push
dec
fildl
outsl
xor
icebp
dec
jecxz
jno
scas
aaa
or
xor
mov
jb
orl
rcl
idivl
jle
movsb
mov
pop
out
push
hlt
push
xlat
pushf
xor
outsl
adc
insb
data16
sbb
jnp
mov
adc
jle
pop
add
sub
push
pop
cltd
fstpl
dec
push
insl
repz
into
std
or
mov
inc
mov
add
sbb
mov
test
repnz
ja
or
jg
xchg
mov
test
mov
xor
push
lds
adc
cwtl
pop
dec
push
jno
mov
fwait
invd
adc
sbb
mov
scas
jno
adc
inc
pop
xchg
jge
xchg
and
add
dec
push
lret
and
push
mov
mov
push
test
and
cmp
xchg
inc
or
inc
test
jge
and
mov
push
int3
enter
mov
pushf
movsb
aam
aam
mov
scas
in
out
pushf
shlb
std
fsubp
push
add
enter
inc
inc
sub
push
push
adc
inc
in
fcmovnb
shl
ljmp
ret
and
pushf
pop
nop
pop
mov
cli
sub
call
add
les
mov
rcl
mov
inc
ja
jne
lock
add
int
jecxz
jo
addr16
popf
push
mov
adc
mov
mov
into
mov
dec
call
xor
pusha
xor
pop
sarb
lret
add
cmp
xchg
sar
cli
adc
lods
add
ss
xor
jne
push
jge
fimuls
jns
js
enter
into
jge
js
xor
cmpl
popa
mov
mov
movl
fwait
iret
stos
fildll
pop
mov
sub
in
ss
inc
scas
lds
add
adc
sarl
jp
jae
rcr
cmp
pop
mov
insb
jecxz
add
inc
jae
jb
cs
rorb
adc
mov
and
fs
or
sbb
mov
push
fsubp
int3
pop
cli
fildl
mov
mov
add
lret
mov
adc
es
cmp
xchg
loop
and
pop
jb
sti
incl
repnz
hlt
fwait
addr16
push
cmp
sbb
movsl
push
mov
adc
rorl
call
jle
repz
xor
inc
mov
and
jecxz
in
jle
fsubl
xchg
imul
jecxz
loopne
inc
out
jmp
call
cmpsl
and
xchg
cmp
push
out
ror
outsl
cmp
and
in
aad
cmp
lods
adc
xchg
popa
iret
dec
adcl
scas
jg
lahf
adc
push
inc
lods
xchg
fldt
push
sbb
mov
fwait
outsb
out
in
adc
ljmp
lret
xchg
push
jp
jmp
mov
adc
sarl
pop
ljmp
ror
mov
lret
dec
movsl
dec
hlt
lret
scas
adc
lds
push
rcrl
aaa
fwait
mov
test
into
stos
adc
test
mov
shr
xchg
int3
and
into
test
shl
xchg
jno
pop
cmp
pop
xlat
xchg
inc
mov
test
pusha
out
jg
inc
pop
add
or
lahf
jecxz
push
jbe
ficompl
push
mov
ficompl
lahf
out
jge
rcrl
add
xor
xchg
sbb
stos
lahf
push
in
data16
inc
xchg
shrl
cmp
inc
lcall
sub
lock
xabort
mov
jb
cmp
adc
sti
movsl
mov
shrb
lcall
pop
xor
mov
dec
data16
out
imulb
push
mov
out
es
push
push
push
push
mov
scas
inc
mov
js
sub
add
fildll
pushf
pop
push
push
push
aam
or
jno
daa
xchg
jmp
add
shrl
cwtl
mov
out
lret
fsubs
pop
fcomip
out
movsb
xchg
xchg
rcrb
jne
inc
stc
sub
mov
xor
mov
scas
jg
inc
xlat
scas
js
mov
ss
inc
pop
ficoml
jp
out
popa
mov
jge
lcall
popf
into
out
dec
xor
mov
adc
cmpsl
dec
shl
and
jl
loope
popa
push
les
add
in
push
pop
leave
flds
cmpsl
out
ds
sbb
mov
jno
stos
les
out
cmp
jmp
out
push
or
adc
mov
cli
sub
lods
jp
test
imul
dec
jnp
mov
shl
jb
xor
add
in
repz
push
inc
push
jns
push
mov
lcall
stc
push
stos
or
adc
add
movsl
fiadds
das
or
push
lahf
pop
cmp
pushf
shll
inc
xchg
push
in
push
sbb
xchg
push
add
cmp
cmp
and
sbb
xor
gs
insb
mov
jmp
scas
sbb
test
cltd
pop
loop
test
ret
mov
inc
nop
adc
xchg
mov
lock
add
push
and
pop
pop
cs
jb
rclb
sarb
aas
adc
dec
sbb
jg
mov
or
push
test
lods
mov
out
adc
cmp
pusha
dec
adc
cltd
cmp
mov
or
xor
jg
into
int3
xor
imul
je
mov
daa
cmp
lods
dec
or
inc
addr16
cltd
and
sub
outsb
mov
pop
push
sbb
test
inc
sbb
sub
sub
pop
cld
cmp
mov
jno
xor
jns
shr
sub
stos
cmp
out
push
mov
neg
pop
fmul
cmp
adc
lret
aaa
push
outsb
in
clc
iret
scas
inc
xor
inc
sbb
xor
sar
outsl
mov
mov
mov
push
or
sub
pop
insb
out
icebp
mov
sbb
scas
mov
mov
fstpl
adc
mov
pop
hlt
cmp
mov
mov
fists
scas
icebp
ficoms
mov
sub
xlat
popf
rcrl
cmp
adc
test
adc
sub
inc
fcoms
sbb
cmp
and
push
jecxz
mov
fbstp
in
push
cmp
and
jns
lahf
sbb
mov
vpcmpeqb
mov
js
xchg
add
xchg
and
pop
mov
jbe
test
pop
xchg
xchg
sbb
cmp
mov
int
filds
pushl
xor
xor
adc
into
or
stos
subl
mov
dec
add
das
pusha
dec
push
xor
mov
pop
adc
sbb
dec
add
shll
lds
iret
testl
mov
jl
pop
mov
stos
aam
fdivr
mov
mov
add
push
fwait
xchg
sub
sbb
sbb
add
inc
leave
in
or
xor
fdivl
fdivrs
mov
lods
push
cltd
dec
jg
clc
push
cli
mov
test
das
loope
pop
jno
xor
pop
inc
mov
call
in
xlat
cltd
das
push
mov
pop
and
add
or
icebp
xlat
adc
mov
aad
lds
punpcklbw
jbe
cmp
adc
add
je
scas
movb
xor
push
movsl
adcb
dec
js
xchg
and
negb
cmp
mov
push
xor
loop
enter
xor
adc
iret
pop
in
sub
jns
fisttpl
ja
sarl
mov
or
xchg
std
stc
jo
dec
sub
cmp
pop
lahf
insl
ss
fsubl
fcompl
sub
loop
in
je
mov
cld
mov
loopne
push
xor
jns
inc
out
mov
test
jno
xchg
ss
xchg
leave
scas
stc
xor
jnp
lea
xchg
enter
inc
cmp
test
out
mov
mov
mul
push
insb
inc
ret
add
mov
jp
or
stos
arpl
ljmp
pop
out
adc
in
pmullw
je
cltd
fldenv
xor
ret
mov
inc
popa
lods
push
and
sub
cwtl
in
cli
aaa
lock
mov
in
xchg
data16
in
hlt
jae
sbb
dec
mov
lret
es
out
mov
jmp
dec
add
adc
loope
insb
jae
rcr
sub
mov
mov
xchg
in
and
mov
sbbl
insl
xor
popa
cmpsl
xlat
loopne
jo
mov
push
adc
test
sbb
stc
stc
out
insb
jp
adc
jmp
cld
mov
fistl
mov
or
push
iret
cmp
or
aam
divb
lea
les
xchg
push
outsl
adc
test
bound
or
stos
in
dec
inc
sbb
fadds
jle
cmp
sbb
idivl
test
lds
sti
cmc
out
in
repz
gs
fisttpll
jb
enter
xchg
cmpb
pop
test
jns
xorb
sti
mov
adc
aaa
or
mov
xchg
sti
mov
jle
test
mov
iret
sub
or
pushf
fs
cltd
stos
push
int
sarl
xchg
pop
sub
jecxz
fucom
pushl
aas
fmuls
addr16
js
lods
pop
sub
xor
je
mov
lods
movsl
pop
mov
lock
loopne
icebp
push
movsl
pop
push
push
mov
prefetch
fnstenv
sub
in
lret
and
setb
loopne
mov
jmp
pop
scas
mov
jge
adc
xchg
in
jp
in
xchg
andb
stos
adc
mov
fsubr
push
cmc
jnp
or
add
or
sbb
inc
dec
pop
dec
inc
xlat
push
rcll
push
jae
divl
clc
repz
and
lods
mov
dec
and
xchg
lret
lods
jno
cmp
stos
adc
sbb
stos
cltd
add
cli
add
or
inc
cmc
scas
dec
xchg
sub
inc
insb
sub
mov
dec
lret
adc
jecxz
ss
mov
ljmp
imul
adc
mov
sbb
jbe
in
sub
xor
adc
or
inc
cmpsl
jle
mov
sub
notl
sbb
popa
aaa
adc
cmp
xchg
ss
pop
or
dec
insl
lahf
cmp
aas
sub
loopne
arpl
and
mov
out
scas
jns
fisubs
in
mov
test
cmpsl
pop
rol
in
arpl
xchg
int
stos
sub
lret
jecxz
scas
xor
adc
test
adc
cmp
sub
push
scas
push
sbb
fistpl
movsb
sbb
and
nop
pushf
sub
mov
mov
sarb
cmpsb
cmp
shr
test
clc
loope
aas
shlb
pop
push
xor
shlb
mov
xchg
dec
jae
in
sbb
or
lea
ljmp
test
pop
jmp
scas
enter
ds
aas
loopne
inc
sub
iret
jae
icebp
addb
iret
add
sti
shll
jb
fdivl
xchg
push
lret
inc
sub
jg
push
je
push
xchg
fdivrl
shll
push
jne
shrl
aaa
mov
cmc
mov
or
push
lcall
imul
xlat
jmp
cmpsl
inc
sub
test
mov
daa
and
adc
int3
ret
mov
mov
imul
sub
push
outsb
frstor
sarb
mov
mov
and
psubd
or
cmpsb
rcl
xor
repz
ljmp
sbb
cmp
data16
mov
mov
lret
ficomps
xor
inc
adc
push
in
lret
jmp
xchg
mov
and
xlat
andl
outsl
mov
rcrl
add
or
insb
call
fwait
jge,pn
push
push
leave
insl
or
shrb
xor
cli
mov
in
cmp
mov
sbb
cmp
adcb
sub
scas
xchg
in
dec
lcall
loop
add
xchg
pop
pop
mov
fcoms
fcmovb
loopne
daa
int3
add
mov
xor
sub
mul
xchg
jg
repnz
add
or
cld
push
lahf
xchg
push
stos
sub
icebp
mov
fidivs
sbb
test
xor
jne
mov
std
movsb
pop
xor
sbb
ja
lods
iret
loope
mov
mov
shl
pop
jge
mov
xor
mov
rol
push
dec
push
push
pop
pop
mov
cmpb
mov
movsb
shlb
bound
cwtl
fisttpl
sub
mov
fs
mov
cmpsl
dec
out
pop
cmp
mov
mov
pop
push
fistps
std
cmp
sub
or
in
js
pop
ljmp
clc
push
push
xchg
push
dec
out
sub
sti
aas
jge
jecxz
xorl
notb
movsb
dec
mov
jns
push
rolb
call
ret
fmul
dec
pushf
lret
movsl
inc
inc
push
lods
mov
mov
xchg
xor
lds
push
pop
lcall
adc
mov
ret
push
jmp
sub
ret
cmc
dec
rol
jns
aaa
movsb
call
xchg
mov
aam
testl
sbb
loopne
jb
xor
outsb
add
lea
aaa
add
jno
and
inc
mov
call
divb
jnp
jle
into
leave
or
es
xchg
icebp
in
sti
inc
test
stc
mov
mov
cs
out
inc
int3
iret
add
mov
mulb
addr16
popf
into
push
lds
outsl
pop
push
in
mov
adc
loopne
sub
dec
dec
inc
call
ffreep
iret
enter
adcb
mov
mov
and
sub
fwait
cltd
and
or
mov
out
and
lds
jae
sub
adc
imul
mov
fcompl
out
sbb
add
or
cmc
iret
sahf
pop
leave
add
cmp
lods
lea
jle
fstpl
sbb
lock
jge
addr16
test
xchg
jmp
loop
jnp
outsl
or
mov
stos
divl
sbb
je
xchg
insl
imul
es
out
stos
ffree
pop
jl
mov
xor
push
imul
fxam
push
mov
mov
scas
sbb
frstor
pop
ret
mov
int
push
fwait
or
pop
pop
icebp
loop
pop
test
les
ss
sub
cwtl
pop
fisttpl
or
lret
aad
jmp
xlat
bound
fcomp
mov
loop
push
cli
lret
jmp
into
stos
shll
cld
cmp
stos
lcall
inc
push
jo
out
push
cmp
mov
les
out
int
xchg
cmp
sarl
fwait
xchg
pop
inc
movsb
xchg
pushf
faddp
xchg
push
cmp
test
add
jo
xor
xchg
jmp
or
loop
inc
inc
ret
fsub
pushf
sbb
das
pop
and
push
icebp
sti
in
and
fucomip
lods
xchg
in
pop
out
dec
imul
inc
icebp
cld
xchg
ret
outsl
push
sub
andl
xchg
lods
lds
pop
mov
ljmp
out
xchg
xchg
lds
dec
imul
adc
mov
int3
jae
sbb
fidivrs
mov
jb
mov
aad
test
or
or
repz
ss
add
and
add
add
call
fdivrl
add
pop
cmc
out
push
xor
fwait
mov
subl
adc
lods
in
jg
jmp
fsubrs
add
cmp
jne
jns
outsb
xor
jg
push
movsb
mov
or
mov
inc
out
xor
and
imul
call
outsl
lahf
nop
add
lods
xchg
loopew
mov
lret
sbb
in
stos
js
dec
mov
pop
repz
in
leave
sbb
mov
je
scas
mov
cmp
dec
sarl
adcb
push
daa
sbb
cltd
pop
roll
xorb
mov
add
jnp
imul
lret
or
and
arpl
dec
xor
xor
ja
cmp
cltd
and
inc
fisttpl
pop
push
xorb
mov
popa
mov
notl
clc
push
add
fwait
jae
dec
dec
hlt
jnp
les
test
cwtl
xor
stos
xlat
lods
lret
xchg
mov
xchg
dec
pushf
xor
xor
addr16
scas
stc
je
fistps
stc
out
cltd
imul
pop
fistl
xor
test
push
outsb
cmp
repz
aas
or
movsl
push
sbb
pop
mov
mov
sbb
or
mov
xor
inc
and
dec
and
aad
xchg
dec
test
pushf
enter
or
push
push
arpl
inc
lret
mov
fstl
ja
lcall
vpor
hlt
fnstenv
lods
xchg
inc
inc
mov
mov
mov
or
imul
stos
ljmp
cli
inc
cmpb
pop
xchg
or
pop
cld
adc
fs
or
imul
std
cld
hlt
es
dec
lods
push
cmc
mov
xor
push
jno
cmp
aad
and
sbb
out
or
or
push
sete
cmp
sbb
aas
pop
jns
mov
add
int3
fmuls
js
cmp
dec
imul
jp
ljmp
push
cmp
mov
cmpsl
dec
test
loopne
data16
xchg
pop
fsubl
shll
pop
repnz
gs
shll
add
jbe
gs
cmpsb
popa
in
dec
fstpl
clc
ret
outsb
dec
inc
xchg
popa
cmp
aad
cmp
or
inc
pop
lcall
sub
jb
jmp
in
and
aam
aas
loope
mov
inc
imul
shll
adc
mov
shll
aas
aam
rclb
adc
mov
inc
push
shl
pop
jg
jecxz
adc
cmp
out
in
jae
ds
cwtl
aam
cmp
jns
jl
push
hlt
pop
push
push
and
sar
sahf
imull
pushf
ljmp
and
dec
jno
out
aaa
dec
sub
cmovae
and
je
nop
jnp
mov
test
xchg
test
mov
sub
sbb
pusha
jmp
and
test
xchg
mov
popf
popa
xchg
cli
aad
adc
mov
pop
shlb
xor
es
adc
mov
push
sub
mov
rclb
dec
int3
ret
mov
xchg
adc
mov
lret
pop
cmpb
jp
pcmpgtw
mov
add
hlt
push
in
lret
insl
cmc
push
daa
mov
insb
roll
xor
xor
sub
jo
push
sahf
pop
call
fists
stc
ds
xlat
dec
into
pop
jne
sbb
sti
mov
xchg
sbb
scas
or
clc
lods
lahf
into
and
push
ds
sub
div
xor
jecxz
loopne
addr16
jae
int3
inc
mov
push
in
add
cmp
jb
ds
cld
lret
fimuls
lahf
xchg
xchg
dec
bnd
adcl
jbe
pop
push
mov
jle
cld
jns
add
lock
add
loopne
jle
out
cld
cmp
dec
nop
pop
movd
out
adc
test
push
jecxz
incb
xor
lea
mov
pop
inc
imul
pop
dec
cli
sbb
sbb
mov
les
lret
sbb
test
xchg
jns
mov
mov
inc
push
mov
xchg
in
fists
movsl
pop
fldl
sub
sub
imul
sub
jne
out
scas
mov
ds
daa
rcll
mov
insb
cli
sub
mov
fs
test
mov
dec
aaa
enter
push
cmp
mov
xchg
xor
sbb
repnz
inc
fmuls
pop
add
push
loope
xor
pop
roll
sbb
mov
mov
xchg
ljmp
loop
mov
repnz
or
push
pop
dec
mov
xchg
and
inc
mov
stos
xor
stos
mov
or
xchg
fcoml
andb
out
sub
rcrb
insb
ljmp
mov
jecxz
mov
push
popf
inc
adc
xchg
pop
out
inc
movsb
sub
dec
inc
jecxz
xchg
lods
imul
pop
sub
push
out
in
and
push
fildl
es
ret
ret
fisttps
enter
pop
ljmp
stos
xor
paddw
into
fwait
js
pop
addl
xchg
ror
daa
sub
mov
and
fdivrp
sbb
or
add
xor
fmull
cmpsb
lods
adc
pushf
pushf
imul
and
cmp
out
daa
mov
aaa
mov
mov
mov
jae
andl
stc
add
jge
imul
je
ja
inc
cmp
inc
pop
addr16
jg
mov
jae
shlb
ss
mov
inc
popa
cmp
sub
add
ja
mov
cltd
enter
fdivl
push
sti
lcall
jns
adc
mov
es
movsb
inc
lock
push
icebp
cmp
sahf
aad
xchg
xchg
push
pop
pushf
sahf
adcl
shl
roll
test
sbb
dec
aas
push
and
inc
into
rclb
add
testb
pop
or
sbb
cmp
imul
push
pop
push
cmp
nop
in
push
push
out
sub
pop
lock
xchg
cwtl
testl
xor
pop
pop
sub
fdivl
fisubl
pop
fyl2x
pop
cli
daa
ss
xchg
dec
jge
das
lret
adc
dec
das
mov
in
mov
addr16
mov
cmp
fisttpl
push
adc
mov
stos
cmpsl
adc
fimuls
mov
cmp
push
mov
xor
jg
cmp
loop
jno
sub
sub
arpl
roll
sub
js
sahf
xor
pusha
push
cmp
xor
sub
or
cmpsl
jnp
lds
into
hlt
call
sbb
dec
push
lods
push
aaa
xor
inc
stos
in
sub
mov
cmc
sbb
sbb
jg
inc
and
dec
mov
mov
xor
hlt
jg
push
movsl
gs
loop
and
inc
sub
mov
je
call
fldt
adc
pop
or
adc
mov
add
iret
mov
push
jnp
dec
cld
push
cli
mov
mov
aad
cmp
xchg
pop
xlat
pop
mov
bound
xor
sub
std
jns
ljmp
test
mov
mov
scas
jmp
mov
jl
jnp
xchg
mov
stos
xor
lock
cmc
frstor
in
rcl
lahf
mov
pop
out
fcoml
xor
outsl
sub
inc
jbe
or
push
hlt
or
cmp
add
mov
mov
pop
imul
loop
xchg
movsl
ds
bound
daa
dec
jmp
into
movsb
jecxz
nop
mov
sbb
das
xchg
or
movsb
cmc
adc
ficomps
mov
pop
adc
mov
loopne
pop
dec
scas
dec
xchg
dec
push
adc
jge
xor
adc
fidivrs
mov
jmp
sbb
shrb
sarb
sub
cmp
ja
es
mov
lret
imul
lds
mov
out
in
ror
mov
cmp
ret
dec
dec
sub
arpl
inc
sub
xor
lods
popf
in
test
mov
cwtl
out
shlb
mov
cmp
cltd
in
das
jae
cwtl
xor
sub
push
xlat
dec
repnz
mov
inc
aaa
call
addb
scas
das
fstps
lahf
mov
adc
add
mov
dec
repz
or
mov
decb
sub
mov
popf
sbb
or
fdiv
iret
pop
iret
xor
push
cs
sub
add
sbb
cwtl
sbb
cmc
mov
inc
pop
ljmp
test
sub
dec
stc
dec
push
sbb
pop
jl
ret
pushf
rcr
pop
movsl
pusha
jmp
mov
jo
pop
mov
dec
enter
adc
inc
pushf
imul
fnstcw
push
mov
sbb
mov
jge
lods
je
js
mov
out
sub
mov
loop
test
xchg
cs
es
decl
fldl
inc
fucomi
jmp
inc
jmp
fsubrs
mov
cli
mov
xchg
xor
mov
cli
jl
out
cli
jno
mov
jecxz
cmpsl
lds
stc
enter
xor
ja
nop
mov
push
ljmp
mov
cltd
not
xor
pop
in
gs
adc
dec
fdivrp
aam
loopne
inc
mov
rclb
mov
or
pushf
pop
movsb
movsl
mov
movd
es
xchg
rcrl
xchg
out
js
mov
aam
inc
push
mov
mov
push
inc
mov
mov
scas
and
mov
fsubl
enter
int3
sbb
fmul
dec
sbb
add
xlat
ds
xor
pop
mov
sub
jg
mov
test
mov
mov
icebp
ss
hlt
pop
jo
pusha
hlt
sub
xchg
push
fwait
scas
addb
das
xchg
or
orl
jmp
lds
mov
roll
bswap
adc
or
xchg
mov
outsl
hlt
xor
cmp
cmpsb
sub
mov
pop
xor
add
and
inc
lods
or
repz
stc
fsqrt
incl
lods
adc
mov
or
lcall
dec
test
mov
mov
stc
xlat
js
add
iret
xchg
push
or
leave
cmpb
jg
pop
or
cmc
cwtl
fnsetpm(287
scas
mov
adc
push
hlt
outsl
loop
cmp
pop
bound
mov
mov
xchg
mov
mov
in
pop
pop
sub
sub
inc
or
inc
inc
dec
xor
sar
icebp
mov
or
fwait
movsl
outsl
fisubrs
sahf
bound
or
jae
add
jo
add
cmc
pop
dec
jne
mov
orb
inc
xchg
pop
mov
inc
mov
inc
dec
cmp
lds
int3
icebp
lods
push
nop
adc
sbb
add
in
inc
bound
push
mov
movsl
dec
test
insb
imul
jecxz
mov
sahf
push
scas
add
imul
fildl
xchg
std
test
mov
mov
lock
inc
adc
gs
push
test
loope
int
loop
imul
insl
movlps
dec
sub
out
dec
scas
mov
mov
adc
dec
shlb
inc
rcl
fcompl
iret
xor
icebp
and
enter
cli
inc
adc
imul
movsl
cmpsb
movsb
lcall
mov
jnp
xor
ud2
push
dec
add
xchg
test
and
cs
repz
cmp
imul
imul
xchg
roll
add
mov
jl
sub
insb
mov
dec
frstor
sub
jne
clc
insl
data16
testl
adc
repnz
inc
xchg
insb
dec
mov
inc
aam
jno
in
or
movsl
cmp
fwait
adc
mov
xchg
jmp
xchg
pusha
pushf
insl
nop
notb
and
push
mov
roll
pushf
es
or
nop
iret
cmpsb
popf
in
sub
faddp
push
repnz
mov
in
lret
and
fcmovb
ror
lahf
js
enter
or
lods
daa
aam
mov
add
lock
pop
jno
inc
pop
ljmp
push
jp
ds
dec
fst
mov
call
mov
out
hlt
clc
cmpsl
das
test
or
dec
add
jle
cmp
xor
fwait
out
dec
xchg
jne
iret
mov
mov
test
cwtl
lods
sbb
jae
mov
and
and
shrl
or
std
test
mov
iret
dec
jp
ficomps
fwait
das
das
daa
add
hlt
sahf
unpckhps
leave
hlt
xchg
mov
jmp
dec
ja
nop
jecxz
in
into
nop
add
das
fstpt
xchg
call
out
into
push
xor
dec
aam
jnp
dec
into
mov
loopne
xchg
mov
ss
or
add
scas
mov
push
cmp
inc
call
or
fs
test
mov
pop
cmp
bound
cwtl
fdivrl
mov
fs
pusha
jnp
push
arpl
out
pushf
mov
inc
fcomi
lods
into
lods
dec
pop
data16
movb
fmull
add
outsl
jmp
cmp
fcmovb
sub
loope
xor
push
push
js
dec
mov
jbe
pop
in
arpl
int3
sbb
sub
ja
lcall
mov
aam
xlat
jae
mov
rcrl
shrb
or
add
roll
xor
int3
mov
jp
cld
fcmovnbe
or
lret
or
fildl
mov
sarl
js
movsb
or
xchg
push
lret
imul
in
orl
inc
mov
rcrl
je
addl
or
lret
repz
jge
pop
jne
int
ja
icebp
xor
pop
les
imul
dec
nop
mov
inc
pop
out
das
pop
dec
lods
jmp
stc
aas
in
xchg
sub
jbe
ljmp
lds
repz
ret
repz
sbb
notl
or
cmp
jo
xor
test
pushf
xchg
cli
mov
minps
ret
jg
add
xor
sbb
sub
xchg
lock
and
cltd
in
inc
add
pop
sbb
mov
pusha
fldl
das
add
mov
fstp
leave
cmp
adc
mov
ja
mov
add
jns
jnp
push
sbb
or
add
sub
mov
rcl
das
mov
fsubrs
mov
mov
out
add
movl
jne
add
xor
xchg
das
pop
outsl
dec
pusha
and
daa
jg
mov
dec
gs
or
insl
fisttpll
pop
test
pop
bound
xchg
xor
jb
mov
dec
add
into
push
inc
jnp
cs
and
loope
rolb
loope
rcrl
test
pushf
dec
xchg
ret
inc
mov
lods
mov
pop
outsl
sub
pop
cmp
mov
scas
test
movups
add
add
jg
cltd
lret
popa
jl
or
in
enter
mov
and
fs
or
pop
mull
cltd
daa
test
jg
divb
xchg
xor
daa
ja
xor
mov
pusha
lds
mov
jo
or
sub
sbb
arpl
or
loop
adc
sbb
aad
xchg
sbb
adc
into
or
push
test
insb
incl
cmc
cmpl
or
cmp
add
out
dec
pop
push
cmpb
push
fcompl
sbbb
dec
or
sub
mov
and
popf
xchg
jae
sbb
popf
jnp
sub
adc
push
mov
loop
and
inc
and
fimuls
in
xlat
xor
pop
sbb
sahf
xor
adc
jo
int
mov
sbb
or
js
jecxz
jb
aaa
and
cld
pop
call
lret
stc
jmp
add
adc
mov
add
add
xchg
das
mov
mov
sbb
aaa
mov
cmp
das
adc
ficompl
cmp
jo
lea
fsubr
lahf
rol
or
sub
adc
mov
ret
mov
out
adcb
mov
jo
push
lds
ficomps
cmp
add
xor
cs
mov
sub
pop
or
dec
lret
dec
lret
mov
iret
pop
and
lock
mov
and
hlt
lods
mov
push
dec
popf
or
pop
push
test
mov
aaa
mov
jmp
fwait
add
fcmovnu
jbe
pop
sbbb
push
repnz
daa
loopne
das
and
xor
filds
cmpsl
lahf
jb
add
dec
mov
and
adc
sub
addr16
mov
mov
mov
insl
cmp
imul
pop
and
in
fcomps
add
sbb
inc
sahf
push
mov
mov
or
lods
mov
jmp
pop
mov
jl
scas
inc
mov
cmp
divb
xor
xchg
add
inc
xchg
jnp
mov
outsb
fucomp
push
test
push
notl
push
insb
push
movsb
xor
mov
inc
push
cmp
inc
inc
movsl
mov
movsl
arpl
mov
inc
icebp
ljmp
in
fsubrs
lods
roll
sbb
dec
test
inc
cmp
add
hlt
jns
lahf
lods
xlat
insb
fldl
mov
in
pop
daa
fidivs
dec
xor
cmp
inc
or
in
mov
push
add
ret
lcall
cmp
sarb
fcoms
jle
repnz
imul
mov
cmp
std
outsb
mov
mov
icebp
sbb
stc
test
sahf
xchg
fs
inc
mov
int3
sub
mov
out
jg
dec
leave
lock
gs
adc
insb
pop
cmp
call
xlat
cmp
test
fcomps
or
shl
movsb
jae
sti
loop
mov
test
dec
xchg
push
mov
mov
or
xorl
lods
dec
dec
pusha
fstps
sub
call
or
je
push
mov
push
fcompl
sti
pop
sub
xor
sbb
or
mov
imul
es
dec
pop
in
sbb
adc
fadds
lea
push
cmp
lea
mov
jno
mov
add
lcall
stos
jne
add
mov
adc
push
fstpt
aaa
pop
jns
mov
call
test
pop
adc
loopne
cli
pop
xchg
filds
mov
mov
shl
dec
repz
push
or
fbstp
idivb
mov
or
icebp
jle
fbld
jmp
pop
xchg
mov
stos
enter
mov
out
lahf
dec
dec
or
sub
test
ljmp
movsl
sub
xor
sub
insb
mov
repnz
ss
dec
sbb
add
add
dec
xchg
cmp
fnsave
adc
fidivrl
sti
insl
ficompl
push
mov
loope
ret
mov
push
scas
jmp
push
xor
and
xchg
adc
sti
ljmp
stc
xor
gs
push
je
out
mov
sbb
jne
scas
lcall
and
mov
xchg
jne
cltd
cmp
andb
sbb
aas
outsl
mov
jb
mov
push
inc
fmuls
pop
out
mov
mull
pop
out
sub
dec
subl
dec
xchg
pop
sbb
inc
dec
mov
repz
dec
or
lods
sarl
ljmp
mov
pop
xor
push
jae
jl
shlb
xor
lcall
and
aas
xlat
pop
mov
fisttpl
push
mov
mov
icebp
xchg
rclb
pop
inc
push
divb
and
xchg
adc
lcall
jne
dec
add
mov
insb
imul
testb
xor
xchg
xor
xchg
xor
ja
fdivs
not
sbb
mov
int3
xor
lea
shl
in
sub
and
sbb
out
decl
rolb
push
and
or
shll
mov
stos
movsl
adc
sbb
adc
ret
mov
es
ljmp
pushf
add
rcl
xor
jno
fiaddl
pop
cld
push
sub
test
test
push
subl
aas
sbb
cmpsl
enter
pop
jecxz
loopne
push
scas
fwait
fwait
daa
repz
ret
fwait
push
jbe
stos
dec
shl
ja
mov
inc
ljmp
lret
jb
pop
jg
xorb
scas
push
scas
or
mov
push
daa
adc
cli
insl
mov
adc
ss
sub
mov
jbe
scas
xlat
sti
push
rorl
jae
xor
lods
sti
mov
dec
subl
lret
adc
cmp
and
out
movsl
push
ljmp
mov
or
les
sub
mov
fwait
in
pop
mov
jle
mov
ret
mov
mov
pop
pushf
int
inc
gs
lods
imul
fimull
pop
cltd
popa
adc
mov
mov
aad
sub
ja
repnz
mov
inc
js
roll
jnp
pop
jg
lahf
shr
pop
pop
mov
jle
xchg
mov
sbbb
mov
dec
mov
dec
cmp
sbb
xchg
dec
rclb
push
in
mov
mov
dec
sbb
push
dec
or
fcoml
jno
cmp
leave
aaa
sbb
arpl
mov
es
pushf
movsb
std
xchg
aad
subb
adc
in
dec
mov
pop
mov
in
pop
push
sub
test
sub
in
ret
fyl2xp1
arpl
nop
arpl
psubw
mov
cs
mov
int3
xchg
push
jo
cmpsb
dec
idiv
jge
jecxz
sbb
sub
negl
gs
movsb
std
xor
out
dec
aam
or
inc
stos
mov
sbb
fmull
push
pusha
and
jecxz
pop
add
dec
hlt
cmp
lahf
cmp
cli
pop
sbb
loop
mov
lret
ja
dec
add
mov
jae
ret
add
std
or
jp
lret
jle
inc
mov
jne
xchg
out
add
movsb
arpl
lods
leave
fs
cmp
shr
pop
or
lret
ja
dec
je
push
fbld
imul
add
sbb
xor
or
daa
insl
xor
fnstcw
inc
dec
je
cmp
adc
dec
mov
rcrb
addr16
out
mov
lcall
mov
pop
aam
pusha
es
xor
lret
mov
dec
dec
push
bound
lahf
insb
xor
test
clc
push
and
mov
sub
xor
pop
std
dec
test
rcrl
sbb
xchg
sbb
cmp
add
fwait
out
in
arpl
mov
and
and
imul
pop
andl
lods
push
mov
sbb
ret
mov
nop
pop
xorb
lock
je
add
adc
sti
stc
xor
lods
popa
jp
ljmp
in
push
test
or
in
sub
adc
nop
xchg
call
lods
mov
mov
divl
mov
xor
imul
leave
adc
push
ds
lds
std
cs
jae
mov
push
ret
iret
stos
hlt
imul
sub
test
dec
sti
pop
xor
jnp
mov
insl
cmp
sub
adc
xor
jge
mov
xchg
mov
pop
cmp
sbb
sub
pop
mov
push
fstl
cmpsb
leave
jle
enter
cli
inc
lahf
adc
shll
incb
add
or
jnp
and
xor
dec
cmpsb
std
icebp
cmp
mov
es
lahf
inc
mov
rcr
cwtl
mov
shll
pushl
xor
push
out
jnp
dec
xor
and
adc
lret
mov
push
cld
lret
iret
out
das
lds
loop
mov
or
jge
cmp
inc
loopne
pusha
rclb
jb
mov
push
sbb
shl
je
cmp
push
or
fwait
xor
std
in
inc
out
test
jns
fidivs
lahf
xchg
sub
rolb
adc
jmp
mov
xchg
incl
cmpsb
mov
ljmp
xor
fldt
mov
out
int3
inc
xor
jecxz
lcall
inc
xor
fwait
add
movsl
pop
jge
outsb
test
push
int
mov
les
addb
data16
push
xchg
jb
fmuls
mov
cmp
xchg
jge
pop
push
lret
pop
in
ds
xor
cmpsb
pop
cltd
pop
jbe
filds
jle
pop
xor
jge
xor
adc
lods
mov
mov
stos
inc
mov
mov
insl
push
adc
jnp
cmp
push
push
fnstsw
pop
in
and
jae,pn
daa
arpl
sbb
and
iret
or
fnstenv
ja
fisubs
adc
out
arpl
scas
ror
xor
imul
test
dec
xor
ss
orl
sahf
test
add
xchg
stos
push
mov
insl
in
sarl
mov
sbb
shlb
push
inc
sbb
adc
cltd
xor
out
into
not
insl
xor
mov
mov
shll
mov
and
dec
jl
and
fsubs
push
pop
dec
or
jmp
jl
std
adc
mov
ljmp
sbb
imul
sub
dec
push
lahf
mov
test
ja
jae
das
or
adc
adc
fisttpll
dec
outsb
test
fildl
mov
add
es
test
add
popa
push
adc
xchg
push
cmp
enter
aaa
push
or
movsl
and
push
cmc
ret
aad
test
out
out
lods
pop
sbb
loop
push
inc
xchg
sub
loopne
dec
add
shll
mov
mov
jmp
mov
dec
xor
loopne
lods
cs
test
bound
pop
pop
jnp
fsubrl
cwtl
loop
test
inc
xlat
fidivrs
popf
ret
and
scas
shl
push
es
iret
xchg
ljmp
cmc
xlat
and
cwtl
fcmovne
fbld
push
out
pop
and
or
repnz
lods
mov
pop
insb
test
xchg
xchg
out
cmp
adc
call
mov
fsts
inc
xor
adc
jg
lock
imul
stc
stc
cld
jo
xchg
fadds
out
lsl
pop
mov
rcll
mov
fisubs
fs
dec
les
xchg
xor
or
dec
hlt
mov
add
xchg
pop
nop
outsl
movsb
movsb
shl
pop
and
or
sti
mov
sti
mov
cs
fidivrl
add
adc
addr16
in
push
decl
shr
fdivrs
inc
jp
push
ds
push
inc
inc
emms
sbb
pusha
lret
inc
scas
jmp
cmpsl
mov
sbb
and
add
pop
inc
lock
mov
push
dec
jecxz
jo
adc
test
push
inc
mov
pop
pop
sbb
pop
out
aam
pop
mov
push
loope
cmp
mov
dec
stos
es
call
inc
push
ret
adc
mov
nop
fs
bound
push
sbb
and
inc
xchg
enter
popf
or
jnp
pushf
mov
das
jnp
push
ja
jne
sbb
lods
fwait
dec
test
repnz
pop
xor
or
lcall
jne
mov
push
pop
sub
mov
push
das
sbb
lahf
in
jne
ljmp
mov
xchg
adc
mov
xchg
call
push
popf
mov
stc
out
xor
fcmovb
repnz
pop
cli
mov
fildl
cmp
dec
cmpl
mov
jae
icebp
hlt
fnstenv
rolb
ror
mov
sarb
pop
out
pop
or
in
pop
and
fistpll
repnz
fsubrl
dec
jns
stos
or
xchg
add
jle
pop
sti
or
rcll
into
xor
pop
xor
es
mov
ds
fstps
mov
leave
xchg
call
fucomp
stos
dec
addr16
gs
fiadds
ja
bound
shlb
test
xchg
xchg
stc
lret
mov
inc
add
dec
mov
jns
test
push
lods
out
lret
loop
lods
pusha
mov
arpl
and
or
mov
jg
in
ret
jp
pop
pop
rsqrtps
mov
mulb
out
rorl
js
xchg
lahf
ss
mov
cmp
cmp
sahf
pop
mov
pop
push
aaa
add
or
ja
lret
dec
mov
mov
push
mov
cmp
mov
imul
arpl
jae
inc
jl
push
test
xchg
pusha
cmp
push
jmp
inc
sub
push
sub
bound
sub
jg
dec
and
jo
pushw
dec
fidivs
out
out
or
ret
int3
loop
jns
xchg
int
mov
and
add
add
data16
mov
in
je
out
es
ja
cmc
rcrb
inc
jnp
arpl
mov
jl
and
xor
loope
iret
mov
mov
fldcw
mov
mov
outsl
sti
adc
les
aam
movsb
inc
roll
leave
pop
loope
fcompl
loopne
adc
mov
test
inc
insb
inc
inc
loope
pop
inc
jae
iret
xchg
push
ret
test
jge
in
inc
add
dec
dec
inc
mov
sbb
pop
ret
leave
adc
pop
ljmp
fcmove
sbb
sub
cmp
sbb
insb
sub
jb
mov
jns
pusha
jne
fprem1
pop
fdivs
and
inc
add
lret
push
sub
call
mov
push
lcall
and
push
cmp
lahf
sbb
ret
cli
mov
rcrb
int
cmp
xchg
inc
cmp
cmp
push
cmc
les
cmpsl
mov
out
dec
fwait
enter
mov
xchg
inc
bound
fmull
push
dec
add
inc
xor
js
jl
inc
adc
or
cwtl
inc
pop
arpl
sahf
xor
sti
das
or
mull
repz
aad
lods
fldt
mov
adc
cltd
fidivrs
pop
pop
mov
mov
loopne
fdivrs
xchg
jle
inc
sbb
lahf
sub
fstps
call
add
rcll
fdivp
loopne
cmpsb
or
xor
xor
and
enter
daa
lret
jecxz
cmp
sbb
insb
jp
ss
repz
jno
mov
lret
inc
or
gs
je
mov
test
or
test
add
fwait
outsl
je
add
mov
and
mov
movsl
ljmp
mov
in
xchg
pop
push
ror
shrb
add
enter
es
push
mov
mov
inc
pop
cmp
stos
sbb
xchg
cltd
ret
lahf
insl
cmp
pop
rol
push
pop
gs
jae,pn
dec
push
gs
or
movups
or
sbb
jle
and
jl
out
aaa
ss
sbb
xchg
sbb
or
inc
in
mov
jge
lahf
outsb
std
pop
out
clc
and
and
mov
dec
popa
mov
out
sarb
xchg
sbb
mov
orb
lods
mov
mov
aas
nop
adc
aam
cmpsb
stc
cwtl
and
imul
rorl
js
xchg
mov
insb
pop
sbb
sbb
popf
and
dec
movsl
push
adc
int
xchg
mov
movsb
adc
dec
dec
mov
fcmovbe
mov
jle
fwait
subl
rcr
adc
jns
out
in
lahf
cmpsb
sahf
add
and
inc
andb
push
enter
sbb
sbb
xchg
fsubs
aam
dec
dec
jns
icebp
xchg
lahf
daa
mov
adc
push
mov
mov
dec
int
sbb
out
stos
mov
pop
adcb
insb
iret
xchg
mov
mov
xor
sbb
pop
cwtl
andl
pop
inc
lods
push
loopne
gs
into
mov
das
imul
jmp
jl
mov
jno
lds
pop
incb
mov
fdivl
add
jns
into
jns
or
faddp
mov
adc
out
call
mov
add
push
or
out
mov
add
mov
shlb
repnz
mov
int
dec
fildl
lods
pop
inc
sub
xor
sbb
mov
sbb
sbb
je
inc
sti
iret
cmpl
popa
and
push
cmovs
rorl
xchg
inc
cmp
jmp
xor
arpl
movd
ret
aas
or
ftst
cltd
imul
fcompl
cmp
cmp
mov
loope
dec
mov
cmp
dec
addr16
gs
inc
aam
out
dec
jbe
sbb
xchg
or
popf
enter
rcr
lret
pop
sbb
sahf
inc
data16
and
nop
sub
or
cmp
lds
pop
lods
jg
mov
or
shrb
das
ja
lea
fwait
push
insb
add
push
mov
dec
cmpsl
rcll
into
mov
lcall
adc
loopne
mov
jl
jae
cmp
icebp
ds
push
ljmp
xor
jns
fwait
std
xchg
fsubrp
pop
mov
leave
adcl
shlb
test
cmpsl
add
js
shlb
mov
add
pop
in
stc
pushf
pop
ss
lds
enter
add
add
lahf
lods
xchg
into
nop
push
push
mov
mov
stos
and
mov
into
xor
mov
mov
fisubl
cmp
sti
xchg
mov
xchg
jp
xor
mov
mov
out
pop
xor
sub
sub
mov
mov
mov
jb
dec
sbb
or
stc
aaa
sbb
out
in
rorb
push
call
aas
ss
push
pushf
dec
stos
mov
sub
out
out
out
adc
fs
mov
cmp
jg
xor
aaa
pop
xchg
push
sbb
mov
insb
pop
cli
jo
out
icebp
pop
push
pop
mov
or
push
cmp
test
xor
pusha
push
or
fwait
and
xor
mov
gs
mov
sub
cmp
sub
addl
dec
rclb
inc
cmp
fwait
sbb
out
mov
mov
and
adc
dec
jle
test
dec
and
or
push
jle
mov
push
mov
inc
ljmp
mov
xchg
pop
dec
pop
test
fbld
out
test
mov
in
cmp
sbb
cmp
mov
dec
xchg
insl
fstpl
ja
jg
mov
mov
push
leave
adc
mov
mov
test
pop
pop
sub
aam
cmp
stc
lcall
or
push
lcall
jge
sub
mov
xor
sti
cwtl
jle
xorb
call
inc
mov
lret
cmp
xor
in
lahf
jae
jne
push
push
sbb
sub
jmp
mov
add
call
mov
out
call
mov
pusha
or
repnz
std
pop
adc
cmpsb
mov
stos
mov
sub
cli
dec
or
add
je
shl
cmp
test
add
jle
daa
fsubrs
jne
cwtl
ret
int
dec
cltd
and
cmp
inc
push
lahf
ja
inc
xchg
fsubrl
test
xchg
pop
push
dec
push
aaa
decl
push
lahf
and
jl
cmp
xor
adc
pop
fsubl
out
fisttpll
mov
push
mov
dec
cmpb
or
les
cs
int
cmpb
bound
iret
xchg
jl
aam
inc
mov
mov
push
js
inc
jne
inc
push
adcb
bound
or
jecxz
pop
movsl
pop
jnp
enter
ds
mulb
mov
adc
movb
mov
shlb
jmp
sub
repz
pop
add
xchg
rorl
pop
pop
jl
dec
pusha
movsb
pop
jo
dec
inc
cmp
add
mov
sub
mov
icebp
popa
xchg
cli
xor
pop
pop
fidivl
fidivl
int
sbb
fidivrs
mov
xor
sbb
push
push
and
add
mov
dec
xlat
or
bound
sar
pop
jg
nop
ljmp
cmpsl
jno
sbb
xchg
mov
dec
xchg
xor
fwait
cmp
lods
imul
jns
int
push
mov
sarl
and
test
es
inc
or
sub
scas
ficoms
xor
mov
pop
cmp
sub
and
cmc
and
in
std
add
ror
rcrb
mov
sub
mov
and
ds
adc
ret
mov
and
rcrb
push
mov
fwait
mov
call
adc
fldl
mov
mov
fists
stos
or
push
adc
mov
fisttpl
inc
cmp
test
movsb
int
test
pop
pop
and
pop
fldenv
stc
xor
arpl
pop
sbb
test
outsb
inc
cmp
mov
fdivrs
push
sub
mov
popf
fwait
mov
adc
inc
imul
add
jl
aas
mov
into
cld
xor
and
xor
movlps
in
sub
fidivl
mov
lods
das
aaa
mov
popa
rcrl
std
ret
aam
and
jmp
bound
xchg
dec
cmp
inc
inc
in
addl
xor
xchg
sbb
mov
mov
adc
mov
int3
or
loop
std
pop
outsb
loopne
adc
out
in
push
rorb
push
jmp
sahf
rcrl
and
sbb
mov
pop
cwtl
push
sub
and
or
minps
mov
loope
cli
decb
pop
outsb
out
mov
jae
pop
icebp
sbb
mov
fadd
dec
mov
in
popa
push
jg
mov
and
out
lods
daa
xchg
mov
or
loope
fcmovb
lea
xlat
out
insb
xchg
xchg
push
adc
shld
or
lds
jecxz
sub
je
pop
daa
xchg
mov
inc
out
jbe
add
jns
pop
xor
sbb
rcrl
or
push
cmp
dec
cmpsl
call
test
push
dec
popa
xorl
cmp
sub
pop
sbb
pop
pusha
jp
cmpb
pop
aam
pop
add
or
pop
sub
jl
pop
push
or
ja
andb
mov
mov
xchg
shrl
leave
adc
adcl
mov
out
gs
jg
pop
jbe
cmp
test
icebp
cld
notb
cmp
xor
mov
test
cli
dec
mov
sbb
or
lahf
xchg
filds
push
aaa
sub
sbb
inc
xchg
fwait
jl
aas
sbb
fists
fdivs
add
out
arpl
arpl
push
lret
sbb
mov
popa
fidivrl
mov
xlat
sti
mov
xchg
fmul
push
xchg
xchg
mov
xor
cmp
sub
push
fmul
add
sbb
jns
ja
stc
dec
icebp
mov
push
mov
push
push
icebp
dec
adc
sbb
mov
mov
or
out
mov
stc
fnstenv
sub
push
and
mov
xchg
push
fsubrs
into
jo
pop
in
in
pop
mov
fwait
sarb
hlt
imul
out
jmp
pop
jl
jp
adc
addr16
jecxz
xchg
push
mov
or
ror
repnz
jo
cmpsb
dec
sbb
xor
fldt
clc
call
jl
xor
stos
hlt
dec
mov
adc
repnz
cld
mov
loopne
xor
mov
mov
adc
add
sahf
fbstp
xchg
cmp
or
shrb
fnstcw
popa
pop
cmp
outsb
repz
fmull
inc
aaa
sub
cmp
iret
sbb
incl
mov
hlt
outsb
shlb
or
loopne
cs
fistpl
mov
or
xor
and
lods
cmp
popf
push
lods
add
ret
mov
or
fwait
stc
or
xlat
test
ljmp
and
lea
cmp
mov
cld
jle
nop
push
pop
cmp
clc
adc
xor
and
popa
jo
outsb
lahf
test
pop
mov
push
pop
cli
cld
jne
push
hlt
cli
or
divl
sbb
setge
pop
insb
xchg
fisubs
add
or
mov
cmp
inc
test
fsub
aaa
sub
ds
mov
fwait
xchg
mov
sub
out
cmp
sbb
mov
std
xor
lret
pop
mov
add
inc
fsubrs
lock
push
stos
jle
or
pop
loop
jne
cmp
push
ret
jb
inc
or
ja
addr16
call
xor
pop
adc
icebp
or
xchg
ljmp
je
pushf
insl
fnstenv
mov
fimuls
call
or
inc
jns
test
dec
jo
and
fisttpll
xor
dec
mov
testl
movsl
out
and
lcall
stos
push
add
test
lods
shl
cmp
out
pop
adcb
sbb
loope
in
jne
decl
test
and
adc
sbb
inc
xorl
cwtl
dec
fcmovne
mov
roll
dec
adc
jecxz
in
mov
loopne
sub
dec
jae
lods
add
stos
push
add
sub
and
xchg
dec
notb
inc
std
inc
movsl
push
dec
outsb
test
and
leave
daa
inc
add
in
and
dec
sbb
xorl
shrl
mov
mov
mov
daa
scas
sub
pop
add
cmpsb
test
mov
rol
jne
cmp
lea
jle
jle
out
cld
lods
dec
mov
cmp
adc
add
or
push
xchg
cwtl
outsl
mov
cmp
pop
out
jmp
out
pop
xchg
pushf
call
std
xor
std
stos
int
shrl
ret
push
cwtl
sahf
jae
int3
xor
mov
fisttpll
add
dec
or
addb
popf
popf
xchg
pop
cmp
adc
jmp
adc
mov
mov
mov
jl
pop
mov
push
nop
and
sahf
xchg
out
push
push
sahf
adc
dec
dec
stc
and
sarl
push
mov
sbb
mov
rolb
sub
sbb
fldt
rclb
adc
or
xchg
mov
xor
jbe
outsl
cmp
mov
pop
sbb
lds
mov
sbb
fcoml
pop
push
xchg
pop
xor
nop
xor
add
mov
mov
das
push
jo
sti
push
sbb
jnp
cld
jns
xlat
sub
xchg
jmp
jno
mov
js,pt
andl
popa
popf
lahf
push
pop
mov
add
push
push
cs
mov
push
add
imul
pop
add
and
add
int
jne
shrb
lds
andps
fs
ret
fldenv
or
jae
cwtl
xchg
ljmp
and
pop
xor
sbb
jbe
xor
mov
xor
inc
aaa
mov
test
jl
cmp
jno
xor
xor
in
sub
cmp
push
pusha
push
leave
push
and
inc
push
sbb
inc
dec
gs
mov
add
mov
push
call
pop
mov
sub
out
xor
xor
fildll
nop
inc
sub
lcall
add
dec
nop
bound
in
mov
jecxz
pop
jns
dec
jno
lahf
jnp
jbe
arpl
pop
adc
jecxz
out
fimuls
adc
jno
cmc
cmp
xchg
xor
mov
inc
add
jno
dec
das
cmp
add
xchg
shlb
es
iret
lds
push
out
or
mov
mov
pop
mov
icebp
xor
inc
cmp
inc
popa
pop
inc
sub
or
int
lea
and
mov
lods
push
sbb
or
or
lock
lods
into
mov
push
mov
pop
inc
xchg
and
test
push
std
and
sbb
ret
inc
xor
mov
xchg
test
das
or
mov
xor
xchg
pop
imul
nop
cs
out
add
mov
cmpsl
dec
jne
inc
mov
js
pop
int3
std
jno
push
xchg
adcb
xchg
mov
jmp
nop
push
mov
adc
loop
lods
cmc
fisttps
and
in
in
add
push
add
in
push
or
push
xchg
aaa
dec
inc
dec
mov
mov
jb
pop
pop
jmp
push
dec
and
jmp
movsb
arpl
mov
sbb
daa
notb
es
or
cs
mov
adc
ss
in
xchg
jp
sar
and
pop
pop
fsubrl
inc
into
jg
and
or
repnz
mov
and
xchg
cmp
cmpsl
xchg
cmpsl
and
cmpsl
add
sbb
dec
sub
sti
test
push
sarl
out
cmp
sub
repz
rolb
cmp
insl
js
imul
jle
and
mov
int3
imull
push
adc
pushf
pushf
xchg
adc
clc
popa
adc
push
es
jge
push
stos
jmp
xor
cmp
stos
sbb
add
pop
cmpsl
xchg
test
adc
add
cli
stos
mov
fisubl
xor
les
xchg
mov
cld
add
cltd
loop
insl
jb
jecxz
scas
mov
cmpb
daa
dec
push
mov
pop
mov
jge
cmp
adc
lcall
push
mov
add
add
jae
add
scas
jo
dec
and
dec
cld
and
mov
cmp
mov
cs
pop
pop
mul
sbbb
or
arpl
pushf
xor
cmp
xor
jne
loopne
in
sbb
pop
cmp
jne
cmp
push
test
xlat
mov
stc
bound
add
out
ljmp
pop
jecxz
cs
inc
lods
mov
repnz
int
das
sbb
add
pop
call
fstps
mov
jmp
out
sub
pop
mov
insb
sub
sub
fs
xor
jecxz
inc
jne
int
jmp
test
testb
jnp
mov
sbb
cmp
mov
jg
jle
mov
arpl
xchg
sbb
in
mov
sub
jnp
repnz
lret
xchg
xchg
dec
xor
mov
sbb
or
in
dec
test
dec
mov
incl
aad
subl
jno
sub
adc
rorb
or
decl
mov
shll
xchg
mov
imull
pop
aad
ds
lds
icebp
fisubrs
divb
repz
mov
ds
xor
mov
sahf
sbb
rcl
sti
out
fwait
mov
aaa
jle
repz
aam
scas
mov
rorb
sub
aas
int
ja
push
xor
dec
mov
mov
out
loop
fwait
gs
and
dec
adc
mov
jns
ror
xor
ret
mov
ret
sub
push
leave
push
sbb
sti
mov
xchg
jl
and
pop
inc
std
add
subb
fdivl
sub
xchg
xchg
ret
mov
lret
bound
cld
pop
int
add
lcall
xchg
mov
sub
pop
stos
fcmovnb
mov
or
in
inc
test
hlt
push
inc
std
int3
pop
stc
or
ficompl
jp
imul
nop
pop
es
movsb
ss
push
outsb
inc
inc
gs
add
push
jge
jge
insl
dec
xor
cmp
cwtl
pop
enter
inc
mov
inc
ret
repnz
push
int3
inc
or
inc
aad
jae
add
mov
mov
in
jae
cs
popf
mov
in
pop
cmpsb
repnz
xchg
sub
inc
ja
das
mov
sbb
xor
jo
stc
cmp
test
mov
push
sbb
fildl
sbb
popa
add
pop
jns
push
test
scas
test
sub
loop
push
mov
jge
hlt
aam
js
push
jo
icebp
inc
adc
sbb
mull
jp
imul
xchg
sub
push
inc
lcall
xchg
out
data16
sub
mov
sbb
push
in
dec
push
mov
idivb
in
add
or
mov
or
clc
push
xchg
test
adc
sub
dec
adc
lds
jb
mov
sbb
idivb
xchg
jmp
or
test
std
dec
jmp
inc
pop
mov
push
adc
iret
mov
fnsave
push
fwait
xchg
mov
xor
test
xorl
lock
std
mov
fs
jmp
mov
mov
in
jl
pop
sub
mov
fistl
jo
jp
pusha
jg
aaa
mov
fsub
push
leave
cmp
ja
push
daa
ljmp
dec
inc
fucomi
loop
jo
xor
fwait
sbb
clc
cmp
xchg
sbb
dec
scas
and
jmp
mov
and
jmp
mov
inc
adc
xor
loopne
cmpl
in
or
adc
xor
cs
test
cmp
pop
push
cmc
ljmp
mov
pop
pop
push
pop
into
lods
in
movsb
js
jecxz
stos
add
daa
lods
in
ret
ret
scas
xor
fs
jno
lret
xor
test
jg
cmc
dec
rcrl
lods
jg
cmp
and
sbb
movsb
pop
lods
test
loopne
loop
mov
psrld
lods
popf
mov
cwtl
or
mov
nop
notb
push
inc
jmp
mov
out
in
loopne
in
jbe
jns
push
inc
ficompl
rolb
sub
fdivrp
sub
andl
stos
frstor
inc
inc
push
int3
sub
shl
mov
in
loope
jb
sub
hlt
pop
stos
std
mov
fldt
mov
fidivs
cmp
mov
out
inc
pushf
gs
mov
pop
ret
mov
or
jne
cmp
fisubrs
xchg
xchg
adc
and
add
push
in
frstor
xor
pusha
iret
mov
pop
es
add
lock
in
mov
fwait
sub
lods
sub
jae
mov
sbb
push
add
out
ficomps
test
jle
out
int3
sbb
data16
insb
ficomps
mov
adc
cmpsl
fildll
push
jae
xor
pop
xor
imul
gs
enterw
loope
mov
sbb
shll
leave
int3
into
sahf
loopne
pop
pusha
cmc
jno
mov
cmpsb
pop
sti
in
mov
mov
push
pop
mov
std
cmp
xorb
jg
out
cmpsb
lods
repnz
xor
loop
and
pop
aad
and
jbe
pop
dec
insb
cmc
lods
xchg
mov
mov
pop
inc
mov
loop
iret
jb
jge
fnstcw
js
xchg
ljmp
mov
push
popf
push
adc
xchg
pop
popw
xchg
mov
xchg
sbb
xor
xchg
ljmp
add
or
imul
int
jg
dec
jle
mov
xor
mov
outsl
popf
loop
dec
pusha
and
ret
lea
das
js
cltd
sbb
sbb
lret
and
out
and
and
inc
push
cmp
mov
sub
rolb
rolb
imul
mov
test
hlt
adcb
mov
imul
fwait
mov
pushf
fwait
push
inc
inc
out
idivl
jo
bound
mov
add
out
push
jo
dec
shlb
das
into
inc
aas
cwtl
mov
gs
and
jbe
sbb
mov
out
shlb
cmc
vpsadbw
lahf
cmp
dec
aas
mov
lds
mov
push
or
int3
int3
and
aas
xor
insb
out
mov
xor
fs
jl
iret
mov
push
gs
jae
xchg
or
inc
faddp
sbb
shlb
outsb
movsl
lock
imull
dec
leave
adc
rcrb
sub
pop
pop
mov
dec
mov
xchg
or
jg
imul
insl
adc
arpl
arpl
dec
cs
xor
dec
lcall
cld
ds
gs
cli
mov
jle
fwait
or
ss
mov
les
repz
stc
xchg
cs
and
gs
pop
xor
mov
xor
sbb
mov
call
imul
in
test
es
movsl
mov
imul
ss
lret
pop
xor
loopne
sub
sub
icebp
ja
das
and
pop
test
sbbl
lret
jb
lea
cmpl
addl
les
mov
push
adc
push
rclb
jge
movb
fcmovbe
xchg
popa
pop
lds
and
loopne
jle
mov
cmp
push
out
insb
fisubrs
fistl
scas
mov
scas
fadds
xchg
es
or
jno
xor
mov
xchg
mov
adc
dec
pop
jg
out
aad
in
ja
cld
ja
rcll
push
mov
or
cwtl
mov
aaa
adc
inc
mov
icebp
adc
sub
xchg
jl
jmp
imul
les
arpl
imul
jb
push
mov
mov
mov
mov
and
cmp
cmc
inc
in
xor
mov
add
bound
sbb
insb
xor
out
adc
sub
js
adc
mov
loopne
jns
sbb
rcr
data16
adc
in
push
pop
lcall
xchg
xchg
in
lods
jg
cmc
imul
inc
xor
cmpsl
lods
add
fwait
nop
lea
pop
aam
mov
and
adc
repnz
mov
prefetchnta
cwtl
jo
and
jne
icebp
push
cmp
nop
das
or
mov
xor
or
imul
cmpsb
add
addr16
inc
and
push
sbb
sub
xchg
add
mov
repz
sub
mov
test
lock
mov
gs
push
push
stos
fdiv
add
dec
int
pop
aas
shrb
adc
testl
xchg
addr16
cmp
or
ret
inc
out
xchg
hlt
adc
dec
mov
push
cmp
int3
popf
leave
xor
shlb
lods
in
adcl
loope
jge
or
or
and
mov
call
mov
out
mov
imul
sub
pop
adc
or
inc
xlat
fisubl
jle
mov
sbb
lahf
dec
movsb
fs
pop
loop
js
mov
mov
lea
das
xchg
sub
or
stos
test
mov
mov
jl
std
xor
out
jmp
jmp
insl
push
in
jge
fcomip
mov
mov
mov
fadds
cwtl
dec
or
stos
xor
stos
ds
out
subl
push
mov
mov
faddl
push
mov
or
xlat
inc
jns
lret
sub
xlat
adc
lcall
lret
ret
sbb
cmpsb
enter
repz
jbe
xor
test
sub
sbb
cltd
push
ret
aam
repz
lock
or
pop
jnp
cmp
jns
jne
clc
pop
xchg
lret
inc
loope
icebp
pop
inc
ss
cli
mov
fsubs
std
sbb
inc
movsb
xchg
ret
call
popa
jp
sti
rol
push
jmp
mov
inc
leave
cmc
fistl
add
xlat
mov
push
nop
jo
push
sbb
cltd
decl
mov
repnz
int3
lock
addl
imul
inc
sbb
insl
pushf
ret
and
cmpsl
cmp
and
push
lods
add
idiv
sub
fnsave
sub
enter
push
lahf
jae
dec
jp
cs
into
or
js
fwait
getsec
push
scas
in
lret
jge
xchg
clc
inc
dec
jle
adc
gs
mov
shll
ljmp
sbb
hlt
fisubl
push
leave
jo
fs
adc
imul
pop
call
mov
add
idivl
scas
setne
pusha
adc
test
loope
push
jecxz
inc
sub
ret
cmp
cli
js
push
dec
mov
imul
rorb
pop
fisttps
ret
pop
mov
lock
inc
sub
outsl
or
outsb
xchg
dec
push
fidivl
daa
jb
jmp
aaa
dec
divl
pop
cld
dec
arpl
loop
sahf
movsl
lock
jmp
sbb
enter
pusha
out
mov
push
add
stos
push
xchg
push
pop
mov
cmpsl
ret
push
jecxz
cld
mov
or
mov
jns
push
xchg
mov
je
lahf
lahf
push
out
test
and
dec
xor
incl
into
cs
std
mov
adc
cmp
sub
sub
pusha
xchg
ret
dec
jb
int
push
mov
jo
mov
or
push
mov
jne
mov
push
out
out
sbb
push
out
addr16
or
mov
fs
push
xorl
xor
pop
cwtl
ljmp
jg
test
cmpl
cmp
subb
ja
test
loop
adc
jae
mov
cmpsl
out
jge
daa
inc
shr
std
inc
push
xchg
fsubl
mov
popa
push
jb
jo
push
or
and
mov
cmpl
pop
mov
cmpsb
push
negl
adcl
or
xchg
subl
sub
mov
xchg
cmpsb
push
xlat
mov
jns
int3
pop
data16
inc
sbb
popa
cmc
scas
ja
das
lret
mov
dec
adc
sarl
add
seto
test
mov
mov
mov
test
pop
inc
xor
das
mov
popa
ja
fidivl
jecxz
and
lret
mov
pop
dec
sub
loopne
mov
shlb
repnz
std
adc
adc
sub
test
enter
lods
cs
movsl
sub
push
mov
push
stos
inc
sub
pop
cmpsb
in
es
icebp
fcomip
adc
jns
sub
adc
or
loop
out
jno
and
and
pop
dec
pop
jle
or
shll
fstpt
andb
mov
push
and
inc
xchg
push
cmpsb
aam
cli
inc
mov
adc
es
test
jle
clc
cmp
sbb
push
mov
sub
add
pop
mov
lea
jae
movsb
cmpb
xchg
push
test
pop
lods
cmpsb
scas
addr16
repz
lock
in
outsl
lds
sahf
dec
push
shrl
cli
jno
and
sub
enter
mov
out
xor
inc
inc
ljmp
xchg
imul
test
mov
fwait
xor
or
stos
arpl
xchg
sbbb
mov
int
xchg
test
dec
inc
outsl
lods
ret
jecxz
imul
test
mov
add
or
pop
mov
pop
test
cmc
push
out
jmp
call
xor
cmp
inc
sbb
or
push
repnz
in
aad
mov
in
sub
pop
push
out
push
dec
out
in
cwtl
mov
das
out
cwtl
dec
add
dec
ljmp
mov
and
push
out
mov
cmp
add
popf
ljmp
fadds
mov
ret
repnz
push
mov
mov
mov
sarl
js
dec
xchg
dec
cli
mov
je
and
loopne
std
adc
mov
xchg
push
addb
sub
mov
xchg
insb
filds
leave
adc
pop
sahf
sti
xor
test
test
fs
loopne
dec
jmp
sbb
mull
push
jl
fistl
sbb
sbb
mov
mov
adc
pop
lods
mov
leave
cmp
push
sub
lods
mov
loopne
dec
add
cwtl
cmpl
cmpsl
pushf
dec
adc
aam
inc
cmp
imul
cli
dec
addb
leave
sub
mov
icebp
or
sub
mov
aam
dec
jb
stc
push
arpl
cli
movsl
push
mov
mov
push
ret
out
lea
and
imull
mov
ds
addb
push
in
dec
shrb
mov
jle
mov
mov
xchg
aaa
faddp
adc
push
jmp
mov
or
xor
or
sbb
out
sahf
or
sub
jp
inc
lods
icebp
cmpsl
sub
xor
jmp
jle
lods
int
cmp
lock
dec
sarb
mov
inc
jecxz
sub
sub
fstpl
clc
cmp
adc
ljmp
leave
aam
into
add
add
subb
scas
xchg
insb
mov
testb
push
push
add
xor
push
movsl
and
int3
shl
call
scas
testb
ljmp
bnd
cmc
insb
jnp
xchg
jno
daa
das
and
mov
push
imul
ss
js
popa
mov
dec
icebp
dec
sub
imul
lret
jmp
lods
loopne
push
mov
adc
sbb
mov
stc
mov
mov
push
sub
pop
arpl
push
mov
fistpl
bound
pop
jmp
cltd
push
sahf
inc
lock
daa
adc
rorl
gs
xchg
lret
maskmovq
imull
sub
fidivl
fs
xor
mov
xchg
mov
sbb
mov
mov
fadd
imul
out
cmp
call
pop
addr16
test
jmp
pop
movsl
sub
fcmovb
lods
xor
cld
dec
and
mov
incb
lds
mov
gs
push
add
bound
push
nop
scas
pop
jno
xchg
mov
xchg
arpl
jecxz
jl
push
jg
bnd
xor
adcb
cmc
pop
xchg
sub
inc
out
rorl
jle,pt
faddl
or
popa
pusha
ja
xor
hlt
mov
inc
repnz
and
ja
roll
clc
hlt
mov
cmp
and
fs
cwtl
add
xchg
movsb
push
jmp
das
pop
push
imulb
or
test
in
pop
sbb
adc
nop
ret
mov
cmp
sub
dec
jge
push
or
push
or
adc
cltd
jle
out
add
dec
in
sbb
repz
xor
xchg
dec
hlt
js
mov
ds
add
or
stc
iret
xchg
sar
insb
dec
int
adc
test
dec
fdivrl
aaa
lods
and
sbb
inc
cmp
xchg
jle
movl
ror
jae
ffree
jmp
shrl
in
mov
lcall
jp
jmp
mov
xor
call
mull
cltd
scas
test
and
jne
sbb
repnz
dec
mov
div
or
lock
outsl
push
jle
dec
cs
sbb
data16
js
jp
add
jmp
out
or
hlt
test
cmp
push
mov
xor
and
test
inc
pop
scas
sti
jae
insb
push
xchg
daa
adc
dec
into
sbb
mov
inc
es
add
cmp
into
push
stc
iret
movsl
cmp
incb
adcl
aam
insb
lahf
negb
ret
mov
and
mov
mov
and
lock
lods
push
cmp
stc
push
sbb
outsl
shrb
sbb
xor
mov
fisubrs
je
inc
inc
push
insb
mov
cmpsl
pop
pop
scas
leave
test
dec
bound
mov
push
dec
add
push
out
push
lret
out
test
in
push
lahf
movsl
jg
scas
sub
push
sti
arpl
les
fbstp
data16
hlt
or
mov
pop
add
je
pop
dec
mov
and
mov
jns
jb
mov
test
add
data16
sbb
pop
and
jne,pn
xchg
repnz
test
or
or
mov
fnsave
in
cmc
ljmp
sub
xchg
mov
jp
cs
jo
in
xchg
daa
add
sub
inc
movsl
aad
or
push
aas
cmpsb
pop
pusha
ja
mov
jecxz
or
and
addr16
xchg
mov
xchg
pop
fwait
xor
inc
and
cmp
fildl
pop
pop
popf
and
je
pop
jge
fs
idivl
popf
adc
and
mov
adc
or
xchg
mov
mov
push
lret
sbb
or
jecxz
adc
iret
jmp
push
stos
xchg
aas
mov
mov
pop
dec
lret
movsl
or
xor
arpl
sub
xor
push
es
lahf
and
mov
cmpsb
mov
repz
loopne
imulb
dec
cltd
cmp
or
fidivs
xor
mov
out
ret
dec
inc
lret
sbb
subb
scas
xor
fwait
stos
jecxz
pop
cmp
daa
dec
loop
movsl
aad
mov
jmp
cli
sub
and
loope
fwait
adc
int3
pop
scas
lds
je
movsl
pop
lods
cmp
scas
test
cmp
popa
orb
xor
sbb
das
in
insl
xchg
out
je
pop
in
mov
pop
mov
iret
mov
cmp
je
xor
adc
inc
outsb
in
or
and
push
scas
adc
pusha
and
mov
jns
add
jno
or
xchg
sub
or
iret
push
adc
jp
jbe
stc
mov
mov
cmp
pushl
mov
pop
jne
mov
jno
jge
fsubrp
icebp
rcrb
lret
xchg
rorl
into
xor
bsf
ds
cmp
adc
mov
stos
sahf
push
inc
inc
decb
movsb
xchg
fmull
or
push
push
cmc
cmpsb
push
sub
adc
repz
mov
mov
mov
lahf
out
jle
in
scas
int3
test
sub
adc
repnz
ret
mov
pop
mov
mov
rolb
pop
gs
test
push
add
mov
fsubp
data16
mov
mov
test
adc
int
test
jo
stos
xor
adc
cmp
add
jmp
mov
cmpsb
cmpsb
push
pop
jae
xchg
jecxz
jg
rorl
mov
jbe
mov
imul
sbb
push
scas
sub
mov
push
or
inc
sub
mov
push
mul
mov
addl
or
cmpsl
push
and
mov
bound
jns
and
es
mov
jno
jg
hlt
pop
mov
jp
fnstenv
idivl
mov
rcr
add
mov
jmp
mov
movsb
ret
cmp
ds
inc
sub
shrl
jne
fwait
cmp
outsl
jl
add
rolb
ja
lds
loopne
pusha
mov
lret
ss
stos
jb
and
shlb
outsl
xchg
ljmp
popf
cmpsb
pop
das
sbb
jge
mov
pop
sti
mov
das
dec
push
adc
loop
mov
jo
mov
jb
push
dec
stos
jmp
in
mov
mov
xchg
mov
jg
lcall
leave
in
ficoms
imul
pop
addr16
mov
push
mov
fidivrs
test
rolb
jo
add
icebp
shlb
xchg
mov
pop
sbb
mov
jmp
xchg
jle
push
jno
jo
mov
sub
jno
dec
arpl
xor
add
and
lea
sbb
fbld
push
and
push
andb
cs
inc
cmp
and
mov
iret
lock
in
jecxz
mov
sub
lcall
les
mov
sub
pusha
or
shl
bound
shrl
push
lret
outsl
or
mov
xchg
mov
xchg
or
adc
fwait
jae
jmp
push
adc
cs
outsl
cli
ds
daa
push
in
push
lret
int
fcomip
sbb
mov
and
rorb
pop
shlb
sub
scas
aam
push
lods
xchg
call
xchg
sarl
pop
jb
mov
pop
lcall
das
xchg
shll
movsl
xchg
dec
or
mov
fdivrl
mov
xor
xchg
cmp
cli
les
stos
sbb
jmp
hlt
mull
inc
jge
out
cmp
lahf
in
xor
and
push
pushl
inc
push
push
mov
loope
ficoml
pop
push
fstpt
sbb
popa
and
fwait
inc
shll
pop
add
dec
pusha
sub
pop
xchg
add
pop
or
mov
jl
lea
xchg
ret
dec
sub
and
jecxz
lret
dec
adc
data16
sbb
dec
xlat
mov
push
mov
mul
mov
enter
pop
xor
push
mov
mov
sbb
fwait
xchg
scas
cmp
cmp
mov
dec
hlt
test
out
mov
pop
movsb
adc
or
sbb
xor
into
orb
mov
add
pop
sti
or
mov
cmp
push
adc
adc
push
or
int3
lret
xor
cltd
iret
ret
jno
jbe
add
xor
sti
aas
mov
inc
push
lea
or
rcrl
xor
hlt
pop
aam
js
push
mov
fstp
loopne
fdiv
mov
xadd
cmp
psllw
adc
inc
outsl
add
jmp
or
pop
mov
mov
mov
mov
sar
mov
jbe
cwtl
orb
cmc
sbb
jecxz
pusha
in
jge
fs
mov
out
jnp
sbb
mov
out
sbb
sub
in
mov
sub
jmp
jnp
cmp
sahf
ss
cmc
iret
out
hlt
shll
fcmovu
inc
jne
pop
pop
aas
repz
in
popa
js
add
sub
xor
cmpsb
pop
mov
shl
xchg
or
fistl
adc
sub
mov
jl
pop
xchg
lds
repz
ljmp
je
pmuludq
adc
movsb
push
fs
popf
outsl
aad
and
test
cmp
cli
negb
pushf
adc
ret
adc
frstor
xlat
mov
rcrl
push
mov
inc
fisubs
icebp
add
jp
dec
fnstenv
cmp
lea
xor
inc
lods
cmp
mov
enter
negb
cmp
shll
and
mov
inc
int
adcl
cwtl
and
mov
jmp
addr16
and
mov
add
xchg
repz
pop
push
and
gs
inc
clc
cmp
popa
out
push
jge
stc
fidivl
fs
test
cmp
jge
es
mov
xchg
into
cld
or
lock
pop
dec
adc
sti
popf
ror
or
sub
test
or
mov
or
push
or
xor
sbb
xchg
push
push
test
aaa
inc
dec
nop
and
xor
xchg
dec
pop
jae
arpl
pop
sti
iret
ret
xchg
cwtl
stos
outsl
stos
lahf
jnp
loopne
inc
mov
jge
roll
jmp
cmp
aad
cmp
repnz
push
jb
mov
mov
pop
jmp
ret
iret
xchg
mov
xchg
call
sahf
cmp
mov
js
aad
int
push
cmc
xor
pushf
mov
int
insb
jns
ljmp
add
pop
mov
push
push
clc
out
push
into
aam
es
push
sub
fisttpl
cwtl
and
fdecstp
shll
xor
aaa
lcall
xchg
inc
mov
hlt
hlt
pusha
repz
pop
pop
lea
sahf
rcll
mov
dec
pop
jno
push
inc
test
sbb
inc
mov
std
cmp
mov
test
push
add
enter
ret
pushf
imul
mov
outsb
jae
jp
clc
sub
jle
fdivs
inc
xchg
pop
aaa
xor
mov
pop
sub
push
mov
inc
sti
xor
push
pusha
scas
jge
aas
adc
push
jle
push
popa
mov
test
adc
in
pop
das
jle
int
dec
mov
xchg
xchg
mov
negb
jne
jg
cmp
ja
mov
pop
in
loope
in
push
jo
mov
dec
mov
cmc
dec
shlb
pop
lods
sub
jo
xchg
adc
lahf
scas
rorb
stos
ja
lods
jmp
xor
enter
lea
std
out
stos
and
aaa
mov
jmp
xchg
ret
and
enter
push
push
lret
or
fldcw
lock
gs
aam
adc
hlt
jnp
push
adc
in
add
push
xchg
or
sbb
dec
xlat
sbbl
fstps
js
jp
mov
loop
push
add
xor
push
cs
jl
rclb
add
call
icebp
xchg
call
sbb
sub
bound
mov
fisubrl
mov
jp
add
xor
repnz
int
mov
sub
and
inc
push
push
jbe
cwtl
in
jnp
dec
push
lock
mov
das
loope
adc
mov
lahf
mov
xchg
jns
fidivrl
add
add
in
bound
jae
fsts
inc
sub
lods
mov
sub
mov
push
mov
lcall
lcall
push
cmp
test
cmp
lret
ljmp
cmpb
popf
inc
jns
scas
mov
cmp
imulb
lcall
pop
pop
jb
sbb
movsb
mov
and
aas
scas
aad
popa
pop
sub
mov
xor
and
je
cmp
mov
add
mov
adc
pop
pop
bound
out
xchg
mov
subl
imul
popa
lods
push
mov
add
xchg
dec
push
xchg
mov
sub
lret
aas
push
and
sarb
xchg
fcmovnbe
cmpsb
sahf
mov
jle
xor
xchg
inc
push
cli
inc
inc
xor
mov
pusha
movsl
iret
cld
hlt
mov
dec
in
dec
cmpl
cmp
pop
jmp
in
mov
xchg
dec
and
call
pop
stos
in
repnz
xor
mov
ds
mov
push
push
cmp
jne
ds
add
pop
pusha
and
out
dec
and
jo
inc
lret
cmp
sub
pop
les
pop
jnp
xor
mov
fucomi
fidivrl
cmp
repnz
aam
or
or
pop
leave
push
lcall
and
pop
push
cltd
aad
minps
ljmp
les
dec
lret
nop
sub
addr16
fdivrs
xchg
insl
add
in
xchg
push
sti
jmp
cld
xchg
daa
lock
sbb
in
xlat
sub
in
jae
mov
add
inc
dec
cmp
stc
movsl
sbb
arpl
or
rclb
jmp
fdivs
fidivl
jne
inc
xchg
dec
mov
mov
shlb
sbb
pusha
out
xchg
xor
mov
loop
daa
sbb
ss
sub
xchg
sbb
push
sub
lret
fidivrl
add
jp
stos
loopne
ja
arpl
or
int3
jl
in
pop
lods
in
fsubrs
or
into
adc
dec
leave
jle
adc
xchg
mov
inc
adc
and
pop
mov
dec
lret
out
scas
dec
hlt
test
fldcw
dec
leave
mov
mov
lea
or
xorl
mov
mov
add
add
ret
xor
cmp
in
mov
mov
test
jl
sub
shll
sarl
aaa
and
sub
in
rcrb
lock
lret
mov
xor
fldcw
pop
mov
mov
jbe
pusha
xchg
sub
loop
out
adc
aad
cs
mov
inc
aam
xor
adc
dec
fmulp
add
enter
lret
dec
loope
es
or
sub
inc
xchg
int3
outsl
xor
add
stc
xchg
adc
pop
clc
in
bnd
push
lcall
in
pop
lahf
sub
mov
adc
aaa
iret
gs
add
add
aaa
test
xchg
imul
das
or
sub
dec
test
out
add
pop
shr
in
or
push
inc
inc
jecxz
lret
cmp
ret
scas
shll
or
dec
adc
sub
aas
mov
inc
ljmp
fucom
add
cltd
push
aam
xchg
xchg
mov
outsb
int3
pop
fstps
xchg
pop
cmp
call
mov
dec
loope
sub
pop
ret
stos
adc
push
jmp
or
mov
xor
mov
rorl
in
xlat
xchg
fwait
dec
and
lea
hlt
js,pn
clc
into
imul
inc
pusha
pop
inc
cmp
in
dec
pop
ljmp
fcmovnu
or
dec
ds
hlt
stc
jg
and
cmp
movsl
insl
ja
bound
stos
dec
jbe
fiaddl
mov
adcl
dec
xor
sub
adc
psrlw
or
cmp
pop
inc
stos
lea
pop
jbe
divb
or
inc
bswap
in
add
sbb
pop
shl
shlb
pushl
pop
mov
mov
push
jg
cmc
aas
dec
iret
xchg
add
std
jle
mov
fiadds
nop
push
sbb
icebp
push
movsb
xor
pop
dec
add
mov
push
test
outsb
test
shlb
mov
and
fsubp
out
arpl
cmp
in
fstpl
adc
mov
or
movl
mov
aas
mov
jg
xor
mov
pop
sub
aad
ret
jns
pop
dec
push
dec
mov
push
fmulp
jb
aad
repz
adc
sub
mov
mov
pop
add
sub
cmpsb
rcr
jg
inc
icebp
sahf
mov
lcall
lock
jecxz
and
sub
or
aad
pop
cs
mov
cmp
mov
mov
jp
mov
xor
enter
xchg
sti
mov
ljmp
push
sub
fs
xchg
cmp
mov
xchg
outsb
sbbl
xchg
fimull
aad
sbb
lods
inc
test
adc
stc
ljmp
mov
xchg
ffreep
scas
scas
ret
icebp
adc
mov
repz
add
push
repz
fwait
scas
xor
jecxz
dec
xor
xchg
std
fistpl
in
cltd
cmpsl
mov
data16
jnp
cmp
mov
xchg
hlt
lods
ja
push
mov
jl
xchg
mov
data16
adc
sub
xchg
pop
pop
pop
test
jnp
cld
call
sub
test
pop
popa
mov
mov
xor
xchg
fsub
mov
hlt
outsl
cmpsb
mov
lahf
cwtl
in
iret
or
imul
cmpl
pop
test
xchg
pop
push
roll
invd
daa
je
fs
dec
adc
push
ret
xchg
pop
or
mov
movsb
pop
in
xchg
xchg
jae
jns
sbb
clc
jecxz
dec
mov
clc
xor
xchg
push
xor
inc
cld
in
cmpsb
xor
cmp
mov
pop
jb
mov
jb
xchg
xor
daa
jo
mov
aaa
cli
add
and
mov
out
in
repz
mov
adc
icebp
mov
mov
xor
or
jnp
push
shrb
or
xor
mov
fucomp
test
mov
shll
push
sub
push
jge
popf
jno
loop
add
push
mov
les
or
inc
pop
stos
sub
popa
cld
adc
scas
out
repz
cmp
sbb
icebp
and
jb
ja
and
jns
ret
cwtl
jnp
rol
add
cs
stos
in
pop
sub
sbb
scas
mov
aam
push
and
mov
pop
and
ss
xchg
aad
lahf
or
or
fincstp
xor
divl
lds
lock
loope
out
ds
push
in
dec
xlat
ret
adc
push
roll
loop
add
push
mov
and
and
xor
cmp
jne
xor
pop
sarl
lea
sub
cli
icebp
pop
push
andl
push
dec
repz
pop
inc
push
roll
mov
aaa
pop
out
movsl
xor
pop
dec
mov
fcomp
add
mov
lret
push
cld
fsubl
xchg
jge
adc
adc
xchg
push
dec
test
outsl
and
dec
loop
movsl
cwtl
popa
into
dec
repnz
fstpt
cld
push
int3
dec
repnz
popf
add
subl
sub
data16
lock
cmp
sbb
adc
or
sahf
insl
imul
mov
jmp
rcrl
jnp
cltd
dec
or
xchg
inc
shrl
je
test
mov
jg
pop
outsb
and
adc
jno
push
les
sbb
test
lods
subb
shl
lods
jb
sub
pop
inc
fisttpll
sub
call
or
gs
shlb
pop
aas
hlt
xchg
inc
xor
xchg
pop
sbb
adc
sbb
mov
push
rcrl
test
lcall
data16
mov
or
push
add
cld
clc
ficoml
lret
insb
and
dec
movsl
daa
push
sub
push
in
sub
xor
lods
or
push
pop
jge
mov
mov
sbb
subb
mov
add
sbb
inc
enter
inc
xchg
inc
shr
fwait
push
xor
mov
lahf
popf
and
out
leave
adc
add
adc
dec
sub
jo
pop
sub
mov
push
in
je
pop
les
lds
lds
push
shlb
pop
in
and
sbbb
movsb
mov
jle
rolb
xor
xchg
pusha
pop
cmp
cld
xor
inc
adc
cs
mov
jg
and
xor
mov
rcrb
shll
lods
out
aad
push
lahf
pop
jo
mov
jl
jg
negl
dec
lods
inc
jl
sahf
loope
daa
in
pop
jle
in
lcall
scas
std
pop
out
jecxz
adc
in
pop
lcall
mov
lds
jae
aaa
out
push
push
push
lds
fst
cld
ror
inc
loopne
jns
or
cmc
sbbl
outsb
setge
inc
sbb
xchg
scas
hlt
sarl
ror
icebp
jo
stos
loop
cmpsb
mov
in
push
jb
loope
add
setle
in
or
inc
cmp
ret
insl
fstps
push
sub
push
jg
aaa
mov
mov
cwtl
inc
lcall
inc
or
icebp
jo
lds
or
out
push
cmp
or
jns
out
mov
adc
sbb
or
ds
sbb
jp
mulb
lods
push
push
xor
in
jmp
lret
decb
nop
clc
push
mov
repnz
aam
cmpsb
pop
lds
ss
in
into
add
es
fs
ret
add
push
push
int3
push
out
and
enter
adc
inc
jp
mov
rorl
sub
inc
ds
or
sbb
push
std
dec
mov
pop
jb,pn
fs
sub
rol
mov
pop
cs
int3
movsl
sub
in
das
insl
btr
mov
push
out
nop
xchg
out
mov
adc
xlat
repnz
xor
lds
or
clc
add
inc
scas
mov
sbb
jnp
sub
movsb
add
xchg
lahf
xlat
outsl
sbb
imul
mov
data16
cltd
mov
pushf
mov
cmp
inc
xchg
cmp
xchg
lahf
fsubrs
ret
lret
pop
mov
andb
mov
inc
jns
add
and
ljmp
inc
cmpl
adc
enter
in
lea
dec
dec
aad
ret
jmp
ret
mov
and
cwtl
out
pop
mov
aaa
and
popa
add
out
inc
push
lret
icebp
int
ret
cmp
push
inc
inc
pop
fstpl
push
or
mov
dec
stos
lahf
dec
js
out
or
and
sarb
xchg
mov
shrl
mov
mov
cmp
test
lahf
cmp
jb
mov
rolb
insl
into
sub
sub
mov
testl
ja
shrb
dec
push
pop
mov
out
jp
jns
and
or
jg
popa
mov
ficompl
hlt
lcall
mov
cmp
or
sbb
arpl
cmp
outsl
data16
dec
jg
fstps
stos
lea
movsb
add
movntq
fisttpl
adc
in
sbb
aas
imul
popf
jo
jecxz
out
and
fldcw
cmp
nop
pop
lds
add
mov
aad
inc
dec
adc
mov
cmc
pop
cli
mov
aam
aaa
pop
test
test
ret
sub
push
jl
popa
push
mov
out
push
dec
std
sti
loope
dec
int
jo
roll
repz
jmp
ret
icebp
cld
jmp
push
jp
mov
movsl
mov
sbb
aas
mov
dec
cmpsb
or
loop
movsb
sti
and
push
sub
rcl
arpl
xchg
movl
nop
aam
cmp
push
sti
pushf
inc
pop
orb
cmp
mov
jmp
mov
xor
psraw
sbb
out
jle
or
xchg
jmp
lock
jl
adc
mov
xchg
lahf
pop
in
fldcw
stos
pop
sbb
test
mov
xor
mov
mov
mov
mov
inc
fstpl
scas
dec
bound
mov
add
data16
test
inc
fs
stos
sbbl
mov
dec
shlb
idivl
pmuludq
mov
push
sbb
out
mov
daa
enter
cmc
nop
loopne
lods
sbb
jns
iret
jecxz
cmc
xor
jae
movsl
cli
mov
dec
jge
pop
out
push
in
inc
cmp
cmpsb
leave
iret
pop
clc
test
pop
mov
fwait
clc
fisttpl
mov
idivl
pushf
shll
cmp
xor
shrl
aaa
iret
fsubs
dec
les
fdivl
xchg
jmp
or
mov
aaa
xor
jmp
pop
pushf
jno
aad
push
jl
mov
sbb
jmp
cwtl
ds
testl
fdivp
mov
hlt
and
loope
adc
out
in
pop
add
pop
xor
es
je
lods
lcall
clc
jg
and
or
outsb
addr16
fadd
mov
call
mov
shl
pop
adc
addl
sub
xlat
pop
faddl
dec
lret
ret
add
push
mov
adc
pop
dec
clc
mov
add
or
pop
add
outsb
int
push
push
inc
cmp
ficomps
and
out
mov
sub
and
xchg
pop
xor
mov
lea
sub
add
pop
fstl
stos
loopne
mov
jp
pop
dec
push
mov
pop
mov
out
dec
inc
sub
mov
ret
loopne
icebp
jae
lock
ja
cmp
aam
call
dec
test
lahf
pop
lods
xchg
daa
ljmp
push
into
js
add
push
dec
lods
push
jbe
mov
mov
push
push
push
dec
dec
mov
sti
and
mov
jmp
leave
lea
ss
sub
aad
push
add
into
insl
shrb
lcall
outsl
sbb
add
inc
and
lret
shrb
cmp
mov
shrl
ds
aad
mov
je
outsb
mulb
testb
cmp
add
jg,pn
fcomps
dec
cld
jo
jmp
pop
outsl
mov
jne
jns
loop
sub
imul
xchg
pop
mov
repz
mov
pop
jb
aaa
int3
sar
loop
add
ffree
fld
xor
pusha
adc
pushf
add
lock
dec
push
test
imul
adc
lock
testl
stc
test
dec
inc
jge
test
gs
nop
jl
cmpsl
ljmp
add
enter
pop
arpl
mov
push
pushf
sub
sub
xchg
fidivrs
push
out
addl
lahf
and
mov
cwtl
ds
subl
leave
stos
mov
sub
ficompl
loope
push
int3
xor
mov
xor
or
cmc
push
fldt
jae
inc
dec
das
push
stos
dec
fidivs
mov
jne
adc
aam
mov
xor
icebp
or
repz
jne
and
lret
cmp
stc
mov
test
mov
movsb
ret
bound
add
jb
in
or
dec
test
cmpsl
jle
ret
adc
enter
not
push
cltd
xor
adc
loope
inc
test
jo
ja
shrb
pop
xchg
jbe
xor
in
stos
jnp
ret
xchg
js
pop
pop
dec
out
add
jge
int
shll
xchg
lds
mov
adc
xchg
inc
sbb
jecxz
sub
jl
pop
adc
xor
int3
pushf
sbb
test
and
add
adc
jge
mov
xor
jp
inc
arpl
adc
mov
lcall
sub
leave
jno
xchg
incb
add
mov
adc
adc
hlt
sbb
fwait
lcall
pop
arpl
cmp
fbstp
bound
sub
aam
bound
fidivrl
es
mov
xlat
xor
sti
test
fbstp
sti
sarl
in
sbb
into
test
mov
aaa
push
fwait
pushf
aas
xor
lahf
mov
fisttps
jp
cmp
adc
aam
push
mov
push
arpl
push
push
and
inc
mov
ss
into
mov
das
jo
movsl
mov
adc
fnstenv
lock
inc
in
or
cli
push
ljmp
mov
xchg
es
jae
xchg
push
out
call
icebp
push
stos
mov
xchg
arpl
mov
push
mov
push
mov
pop
mov
in
stos
pusha
jne
ljmp
cmp
repnz
in
mov
mov
shlb
std
cmpsl
or
dec
jp
or
dec
push
dec
sbb
inc
ja
insl
cmpsl
pushf
or
jmp
roll
dec
pop
cld
mov
or
subb
aas
aaa
pop
mov
inc
jbe
jmp
cld
and
mov
hlt
or
loopne
scas
aam
or
stc
add
sbb
pop
and
scas
mov
dec
cmp
lods
dec
ds
or
mov
call
push
inc
jmp
push
sub
int
sbb
fwait
cmp
lods
stos
test
push
cli
jne
push
jmp
push
or
mov
cmp
fxch
cmp
call
andl
jl
dec
popf
shr
stos
cld
push
mov
in
cwtl
inc
clc
mov
jno
roll
dec
dec
sbb
cld
sub
ds
mov
xchg
ret
popf
sub
sbb
shrl
lods
push
pusha
hlt
push
dec
or
ljmp
out
mov
xchg
icebp
iret
sub
push
icebp
fmuls
pop
and
or
popf
dec
mov
adc
jbe
test
mov
lea
les
mov
inc
cmp
stc
data16
lock
pop
pusha
xor
movsl
cmp
mov
adc
push
lea
mov
add
add
out
sbb
and
sbb
jecxz
mov
movsl
and
scas
mov
int
bound
gs
enter
mov
pop
imul
hlt
fucomi
mov
test
cmc
mov
outsb
fs
ret
ret
mov
or
outsb
fwait
push
mov
cmp
dec
mov
mov
or
sub
shl
jecxz
add
jb
stos
movsl
pop
jo
xchg
inc
test
fstps
xchg
orl
cmp
or
fldt
push
pop
rcll
jne
xchg
xlat
scas
xor
cmp
mov
mov
sbb
mov
bound
inc
pop
jns
mov
andl
mov
mov
and
int
mov
mov
mov
out
jno
mov
ss
inc
mov
pop
push
flds
mov
sbb
jg
imul
cli
inc
je
pop
mov
lret
loope
adc
repnz
mov
rcll
lods
sti
dec
jg
scas
push
jmp
mov
mov
add
add
lock
mov
adc
xchg
inc
popf
cmp
clc
lods
jl
cwtl
mov
inc
dec
dec
jns
xor
inc
mov
add
push
es
scas
mov
pop
cltd
fwait
sbb
mov
inc
jge
shr
cmp
mov
sbbl
sbb
inc
in
inc
fldt
add
mov
mov
repz
jbe
dec
xchg
int3
mov
lahf
xchg
mov
loopne
cmp
xchg
adc
enter
mov
sbb
xor
es
lahf
setae
pop
cwtl
dec
xor
xchg
xor
and
out
sar
popa
les
cmp
ret
sbbl
jecxz
ja
inc
rolb
in
dec
mov
dec
testl
jnp
cmp
mov
aam
mov
push
push
jb
pop
cmp
loop
scas
dec
dec
ret
inc
jge
leave
push
pop
cmp
clc
xor
mov
mov
xchg
das
push
sub
ret
aaa
outsb
outsb
nop
xor
mov
arpl
lods
mov
aad
adc
add
xor
iret
jge
mov
outsl
push
xor
sub
mov
lahf
stc
iret
sub
in
outsb
test
push
fs
scas
push
sbb
inc
cli
outsb
mov
sbb
push
mov
in
int
repnz
xchg
popa
daa
outsl
cwtl
ja
pop
push
xchg
mov
bound
sbb
pop
lods
xchg
stos
shlb
mov
mov
pop
xchg
aad
adc
push
mov
loop
lods
push
mov
inc
test
enter
xchg
pop
loopne
mov
pop
dec
movsl
ficoms
mov
xchg
add
out
loope
pop
mov
scas
popf
fs
jg
add
pusha
jl
inc
mov
jns
cmc
call
pop
push
jl
sbb
inc
inc
nop
dec
inc
fnsave
lret
or
push
xchg
scas
push
xchg
pop
cmp
mov
push
mov
pusha
sub
pop
pop
cmp
sub
or
out
push
shlb
mov
sub
fistpll
push
insl
mov
test
test
mov
jmp
xchg
mov
ret
outsl
mov
xchg
xchg
mov
and
cmpsl
stos
pushf
xchg
push
add
ret
adc
scas
sbb
daa
popf
jge
call
mov
insb
inc
and
into
je
xor
dec
aam
clc
lret
ror
divl
push
test
push
hlt
shrb
call
ficompl
and
daa
jae
lahf
arpl
fcmovnbe
mov
jl
fldt
mov
mov
shll
dec
jo
jae
pop
lret
mov
mull
loop
mov
mov
add
mov
sbbb
mov
lea
dec
xchg
jecxz
sbb
mov
shll
enter
mov
cmp
xchg
or
mov
popf
inc
f2xm1
mov
mov
fidivrs
stc
cmpsl
adc
adc
imul
or
mov
cmova
cmp
pusha
and
into
push
sub
push
sbbb
mov
pushf
sbbl
leave
sahf
cwtl
adc
cwtl
xor
push
add
hlt
jge
ds
stos
stos
add
ja
mov
sbb
daa
stos
stos
fimull
leave
dec
inc
mov
call
pop
fstp
data16
mov
dec
mov
divb
xor
imul
xor
gs
cmova
les
adc
lret
push
dec
add
ljmp
test
xor
scas
adc
xchg
mov
incl
stos
call
fstpt
popf
stos
pop
aam
mov
dec
ljmp
out
push
inc
stos
sub
push
in
insl
push
sub
xor
add
lock
add
jle
mov
scas
mov
ss
xchg
push
push
xor
mov
jne
push
mov
add
xchg
into
push
sbb
aaa
push
test
sahf
xor
mov
cmp
jno
jle
sahf
and
movsb
leave
outsl
cmp
xacquire
data16
enter
and
call
and
inc
dec
fsubrs
pop
imul
cmp
jo
cmpsl
test
push
sahf
pop
xchg
ss
push
ret
jg
sub
push
jne
sti
push
push
mov
push
popa
push
dec
xor
inc
lret
data16
loop
cs
mov
das
xor
stos
xchg
sub
aad
gs
cmp
pop
jp
jl
aas
std
movsl
adc
movsl
popf
pop
scas
pop
sub
imul
test
mov
adc
pop
pop
mov
shll
sbb
mov
iret
cli
idivb
mov
push
and
push
jg
incl
sbb
ja
pop
mov
jo
sahf
jns
pusha
insl
mov
jns
into
xor
jne
push
jno
push
push
cmp
les
xor
in
pusha
imul
loop
mov
vmovdqu
cli
loope
add
lret
mov
in
jg
and
add
mov
push
push
sub
pop
xor
or
jg
sti
jg
push
movsb
push
stc
loop
aas
dec
jge
xchg
add
mov
subl
sub
dec
in
mov
sti
adc
sbb
test
xchg
xchg
and
cli
push
jle
pop
push
nop
in
lock
iret
addr16
ja
mov
lret
aad
mov
repnz
loop
mov
lcall
outsb
sub
and
fcoms
adc
or
sub
push
std
test
push
stc
daa
push
cli
fcmovnb
out
popf
mov
les
sbb
orb
pop
mov
mov
inc
pushf
and
notb
in
int
nop
popf
or
jecxz
repz
addr16
popf
inc
mov
outsl
jo
mov
mov
int
sbb
mov
push
dec
inc
pop
mov
jns
or
pop
or
inc
notb
xchg
dec
cmp
out
gs
pop
pop
jae
mov
jl
fs
lret
mov
lcall
xor
sahf
cli
push
into
sbb
sub
jge
cmp
notl
add
sbb
out
add
test
mov
lods
inc
fiadds
test
fwait
add
push
mov
inc
cmc
shr
pop
imul
inc
fldenv
mov
das
movsl
add
je
push
ret
mov
xorl
push
sbb
lahf
pop
jb
fwait
sbb
and
daa
fnstcw
pop
sub
jbe
mov
push
and
xor
and
loope
push
cmp
xor
int3
jno
mov
or
ss
scas
orl
mov
pop
sti
xchg
mov
jae
xchg
push
jns
pop
or
idivb
movsl
mov
mov
adc
pop
stos
aam
pop
jb
dec
pushf
dec
mov
enter
jg
push
adc
insl
xchg
mov
popf
sbb
mov
out
xchg
jno
push
scas
push
ss
xchg
inc
cmpsl
fmull
mov
ss
push
fidivrs
adc
notb
mov
cmp
mov
mov
popa
ljmp
add
stc
les
arpl
mov
adc
in
repnz
or
mov
mov
es
ficompl
inc
out
inc
flds
add
stos
fsubrs
adc
addr16
jns
or
inc
lods
int
jno
adc
sbb
xchg
scas
addr16
nop
stos
stos
dec
call
mov
test
in
xchg
dec
push
and
mov
into
dec
fcmovnu
aad
lahf
adc
inc
in
out
aas
ret
es
das
cs
ret
cs
push
push
add
sub
popa
adc
mov
das
popf
popa
inc
out
inc
push
rcll
jo
or
xchg
fisttpl
data16
push
out
sbb
ret
jae
cmp
and
pop
lods
pop
and
pop
jo
lods
stc
and
call
in
adc
sbb
std
aas
dec
imul
mov
sbb
dec
push
cmp
adc
fsubrl
fwait
cmp
lea
mov
fisttpll
cmpsb
loop
les
aad
inc
adc
xchg
fidivl
shrb
cmp
loopne
sub
out
dec
xor
mov
js
mov
adc
cmc
mov
jne,pn
outsl
xchg
or
out
lds
out
xchg
test
pop
xor
adc
add
xchg
aas
push
shll
sbbb
ja
cs
mov
imul
movsb
dec
sti
dec
notb
adc
and
xchg
sbbl
scas
movsl
sub
inc
push
and
mov
cmpsl
add
xchg
inc
mov
or
and
inc
mov
test
adc
lret
enter
dec
or
inc
push
fldz
lcall
aas
adc
arpl
loop
pop
add
mov
cmp
inc
push
into
repz
cmc
adc
pusha
jp
pop
and
and
mov
xchg
push
pop
sbb
and
adc
fbld
je
cmp
mov
repnz
test
mov
adc
jg
rol
jb
pop
pop
in
stc
cmpsb
fnstenv
cld
ret
pop
ret
cmp
pop
dec
push
test
cmc
xchg
test
pop
lods
xchg
ret
mov
dec
xchg
xor
cli
mov
in
mov
in
inc
jmp
in
out
push
fsub
aaa
pop
aad
mov
jae
xor
push
push
ja
jbe
das
and
shrl
roll
repnz
ds
sbb
lods
cli
sahf
dec
jl
and
inc
inc
cs
frstor
xchg
fcompl
lods
cmp
out
enter
push
xor
mov
add
xchg
iret
and
fld
and
adc
pop
push
fcoml
mov
data16
insl
jae
add
insl
into
adcl
jp
dec
adc
lock
jne
or
mov
in
pop
jne
leave
fisubrl
push
ret
push
lds
push
dec
dec
mov
lahf
dec
pop
add
jl
push
insb
popa
loope
add
ret
jb
ja
jne
out
and
jo
mov
xchg
jnp
hlt
sub
add
jns
ds
xchg
cmpsb
jl
cs
push
je
or
cli
sti
mov
dec
out
push
pop
push
inc
scas
or
ja
cmp
loopne
in
or
mov
out
mov
cltd
test
int
jle
aas
out
xchg
loop,pt
stos
mov
adc
pop
cli
pop
mov
jmp
cmc
xchg
inc
push
jge
ficoml
dec
dec
or
inc
push
or
outsl
pop
and
test
cmc
jno
lret
mov
imulb
daa
fidivl
aaa
push
fdivrl
push
sarl
js
mov
pop
mov
in
xor
ficompl
mov
pushf
mov
add
clc
sarl
mov
pop
pop
adc
jae
test
sbbb
lods
pushf
in
push
shrb
add
insl
shr
mov
in
or
adc
fnstcw
push
leave
lods
xchg
mov
cmpb
push
adc
mov
xchg
mov
arpl
clc
adc
xor
push
add
inc
sbb
lock
pop
jle
aaa
sub
lds
add
int3
in
mov
mov
lahf
pop
mov
cmp
dec
lcall
and
pusha
insl
aas
stc
pop
dec
div
sbb
lahf
and
mov
stos
shl
pop
add
ret
incb
stos
sbb
fs
mov
xchg
sahf
xchg
adc
mov
jno
shll
bound
divl
cmc
test
add
in
push
in
cltd
sbb
icebp
lret
add
cmpsb
jl
ror
movsb
out
ret
mov
dec
iret
jnp
sti
jb
mov
shrb
xor
nop
into
popa
imul
sub
cmp
fnstcw
jb
dec
lds
in
mov
cmp
shl
jae
xor
sahf
sahf
pop
rcl
int3
cs
jae
push
cmp
in
aaa
fsubs
repz
push
cmp
xlat
pop
test
xor
movsb
movsl
adc
inc
and
dec
add
and
jae
inc
adc
xor
ljmp
push
int3
jg
mov
add
daa
mov
fimull
mov
xchg
sub
mov
mov
xchg
nop
ljmp
jl,pt
xor
mov
sub
nop
xor
rolb
dec
stos
mov
pushf
cmp
add
inc
icebp
push
mov
push
or
dec
call
dec
pop
lret
testl
fs
and
clc
mov
clc
xchg
aad
mov
loope
add
insl
into
lds
and
mov
xchg
sbb
movl
xchg
mov
pop
mov
nop
adc
repnz
mov
out
xchg
lcall
jnp
stos
mov
pushf
mov
lret
pop
test
mov
aaa
jp
xchg
mov
jp
pop
pop
sub
test
dec
movsl
out
adc
outsl
inc
loopne
pop
or
mov
loopne
jl
push
xchg
imul
into
fdivrl
ret
mov
ja
inc
inc
out
int3
or
cmp
jb
inc
les
das
insb
mov
pop
push
adc
xor
and
or
shrb
cmp
mov
mov
dec
pop
popf
cmc
int
inc
out
insl
ror
jle
jge
dec
sti
xchg
xchg
inc
movsl
rcr
adc
inc
jne
mov
cmp
negb
and
vandps
neg
inc
clc
cltd
sbb
scas
inc
push
pop
mov
cli
rcrl
add
insl
xchg
aaa
in
mov
pop
xlat
adc
int
scas
cmc
pop
mov
ficoms
xchg
push
cmp
out
xor
push
push
lahf
jne
out
icebp
add
sub
mov
gs
push
cmp
int3
sbb
mov
ret
adc
dec
jmp
mov
mov
je
aas
sarl
and
push
ret
mov
or
scas
filds
fidivs
cmp
jle
ret
pop
jl
lea
mov
lods
test
mov
jge
mov
jecxz
mov
pop
es
xchg
ret
dec
or
outsb
insw
int
dec
jnp
test
jne,pn
xor
jmp
pop
cmpsb
test
imul
dec
inc
pop
arpl
aas
movsl
jnp
fstps
sbb
in
xchg
sub
lret
ret
xor
rcrw
mov
iret
cmp
jmp
leave
push
cli
dec
out
jno
mov
pop
jmp
fdivrs
and
jp
test
jg
push
add
lret
or
bound
pop
mov
jbe
mov
push
xchg
cmpsb
dec
stos
xchg
mov
and
mov
pop
dec
rol
add
jae
xor
cmpb
out
scas
jl
xchg
mov
inc
jle
notl
and
sub
fstps
or
das
bound
loop
loope
fnstenv
jmp
push
cmpsb
test
mov
sar
push
and
cmp
adc
mov
push
cmc
inc
xor
mov
int
shrl
dec
es
pusha
adc
mov
mov
in
outsb
loopne
cmp
imul
fwait
imul
add
push
popf
sub
push
bound
cmp
inc
call
sub
lods
xchg
sahf
sub
scas
mov
xlat
pop
repz
ret
push
mov
jne
cmc
aam
jl
insl
leave
lahf
cltd
lret
jge
xor
jbe
jne
mov
inc
nop
adc
cmp
jmp
cmp
sti
movsb
fs
pop
adc
jp
in
inc
xchg
test
or
pop
jne
jecxz
mov
adc
mov
adc
movsb
jp
dec
jns
inc
scas
sub
inc
add
insl
scas
push
mov
sbb
jo
jecxz
es
movsb
lcall
inc
lods
call
mov
loope
pop
and
pop
cld
or
mov
sbb
lods
divl
enter
xchg
addl
hlt
stos
adc
pop
cmpsb
pushf
xchg
add
cmp
mov
ja
adc
loopne
scas
add
push
sti
leave
dec
jg
test
mov
decb
shlb
push
sub
xchg
cli
in
repz
ds
dec
in
test
add
xchg
daa
cmp
jge
sbb
out
mov
fbld
icebp
aaa
rorl
pop
inc
jp
and
adc
xlat
gs
inc
adc
inc
mov
arpl
xchg
dec
pusha
stos
lahf
mov
shll
and
add
roll
outsb
or
icebp
cmpsb
dec
jg
sub
sti
jbe
jl,pt
sbb
lods
sub
cld
push
outsb
inc
sti
mov
mov
dec
nop
jno
inc
int3
cmc
ss
stc
jle
jl
ret
in
stc
add
mov
fnstenv
jbe
xchg
jbe
inc
dec
xchg
xor
arpl
sti
push
sarb
xchg
lock
jnp
aas
std
scas
cmp
ja
dec
bound
imul
mov
xchg
jmp
push
pop
push
pop
nop
enter
lahf
popf
sbb
jne
mov
mov
int
cmpb
gs
and
adc
xchg
repz
jl
test
jge
sbb
cli
int3
pop
dec
jb
add
out
inc
pop
xor
sbb
jmp
adc
dec
test
int
les
shlb
ficomps
in
adc
cli
into
xor
mov
mov
dec
loopne
mov
xor
push
xchg
fmuls
adc
cltd
and
xor
jecxz
pop
jle
jo
int3
lret
mov
mov
add
or
fisttpll
rcll
pop
cmc
xchg
inc
aad
jl
and
mov
int
pusha
jbe
adc
or
pop
in
cmp
sub
mov
stos
testb
pop
int3
sti
mov
cmpl
repnz
mov
frstor
push
aad
lods
pop
fnstsw
enter
mov
mov
repnz
push
das
icebp
fiadds
jmp
jle
adc
adc
add
and
mov
in
push
adc
mov
outsl
imul
lahf
mov
fldt
jo
int
lcall
vorps
repz
stos
shld
gs
shll
lea
inc
or
cltd
dec
pop
and
enter
cmc
cmp
adc
xor
push
jg
cld
jg
and
xchg
push
pop
inc
xchg
movsb
fwait
outsb
das
mov
dec
mov
loope
icebp
adc
imul
cmpsl
shll
insb
lods
pop
or
or
push
pop
outsl
movsl
je
pop
inc
in
ss
mov
sbb
repnz
mov
inc
leave
movsb
test
das
mov
pusha
ja
dec
pop
pop
jbe
test
mov
mov
mov
xor
inc
pop
pop
mov
shll
lea
jecxz
and
push
jne
scas
jnp
mov
xchg
in
inc
loope
sbb
push
lret
aad
out
sbb
fstpl
cmpsb
sub
push
sub
inc
inc
xor
mov
push
sub
faddl
enter
and
push
sahf
adc
popf
pop
mov
vpsrad
nop
cmp
insb
aad
sub
fldt
inc
xchg
cmp
mov
mov
push
movsl
xchg
sbb
stos
or
cli
inc
in
lods
sub
and
xor
cld
repz
insl
dec
xor
dec
sahf
xor
mov
add
xor
or
jmp
and
inc
lods
xor
in
repnz
inc
pop
and
xchg
xor
fsts
or
fdiv
xlat
icebp
adc
ret
iret
inc
bound
loope
push
mov
in
imul
mov
test
loop
and
outsb
sbb
dec
inc
nop
cmpsl
dec
cmp
mov
dec
xlat
fwait
sbb
std
in
lods
jl
xchg
fadd
fmull
mov
cmpsb
bound
mov
sbb
out
int3
clc
call
daa
js
pop
xchg
lret
js
inc
lahf
fidivrl
stos
or
dec
int3
ljmp
movsl
jne
sbb
push
fsubrp
scas
insl
movsl
and
les
pop
fbstp
mov
xchg
cwtl
repnz
pop
sbb
sarb
xlat
lock
sub
shl
data16
rclb
adc
fdivrl
movsb
xchg
mov
popf
popf
out
fcmovnu
sbb
jg
sub
pop
mov
xor
or
stc
add
je
nop
out
fxch
and
ficomps
push
or
inc
cmc
inc
adc
sbb
int3
daa
addb
pop
ja
push
adc
sbb
cmp
iret
loopne
repnz
mov
xchg
mov
movsb
cltd
ja
out
inc
lret
sbb
fs
mov
add
pushf
xor
cmp
and
pusha
test
movsb
in
test
jl
mov
lea
sbb
pop
inc
push
xchg
andl
repnz
mov
into
repz
out
pop
xchg
push
and
pop
test
cmp
outsl
jae
mov
xor
jmp
ret
xor
dec
add
arpl
sbb
mov
shrl
out
imul
imul
ljmp
mov
cmpsl
cmpsl
push
inc
push
sub
lahf
ss
repnz
mov
xor
mov
in
or
gs
xor
sbb
lods
inc
int3
mov
out
xor
data16
mov
jno
in
imul
outsb
jmp
push
movsl
pop
jb
cmp
push
adc
mov
mov
pop
push
pop
push
rol
push
cmp
pop
mov
shll
inc
pop
lock
sub
jno
and
push
jne
imul
fcmovne
xchg
stos
sub
lock
xchg
sbb
sbb
lods
pusha
andb
sbb
aaa
jno
fwait
mov
xor
aas
push
and
scas
cmp
int
data16
adc
loopne
xchg
cmp
into
jne
mov
and
sub
pop
sub
aad
cmp
sahf
push
sub
fdivp
jp
xor
push
stos
in
iret
add
adc
dec
mov
leave
push
out
out
sbb
push
jno
loope
popa
or
ss
jne
subb
lcall
cmp
lock
stc
sbb
mov
mov
xchg
xchg
daa
lret
inc
imul
push
leave
shrb
icebp
addr16
dec
call
stc
pop
and
sti
comiss
in
mov
scas
cli
es
icebp
sub
sarb
stc
jno
push
fisubrl
std
les
pop
add
arpl
cmpl
out
sbb
adc
mov
mov
inc
xchg
rcr
adc
fs
jne
out
insl
pop
imul
jecxz
rcll
ds
out
pusha
dec
or
push
xchg
jne
enter
stc
jg
notb
scas
mov
pop
adc
or
roll
fcmove
mov
roll
outsl
jmp
clc
jne
aaa
out
movsb
mov
adc
mov
ret
xor
xchg
sbb
sub
hlt
loope
ja
mov
mov
aas
or
mov
inc
sbb
dec
in
jo
out
sub
stc
xor
pop
or
inc
mov
lret
fildll
inc
inc
cmp
outsl
fldl2e
pop
pop
mov
outsl
shl
imul
jmp
popa
xchg
pop
iret
xor
sub
popf
cmp
pop
mov
subl
dec
adc
xchg
inc
pop
push
dec
negb
pop
cmp
inc
fdivs
mov
lock
dec
mov
hlt
je
xchg
aam
sub
jo
test
and
dec
call
cmp
enter
mov
add
cmp
push
jecxz
dec
test
mov
aas
cmpsl
sub
jb
and
sbb
and
sahf
pop
or
cmp
fildl
add
adc
fstpt
rorl
mov
aaa
mov
mov
or
push
mov
mov
jle
sbb
imul
push
lahf
insb
mov
xor
gs
xchg
loop
por
mov
xor
addr16
outsl
sub
movd
ret
addr16
xchg
ja
repz
lods
jns
sub
push
mov
fs
pop
sub
ja
mov
cmp
mov
mov
sbb
rcrl
clc
test
sbb
out
or
popa
sub
mov
jmp
pop
fdivs
aas
mov
shrl
movsb
arpl
shrl
jae
aaa
cmp
in
lds
xchg
cld
xor
out
out
int
add
clc
sbb
dec
push
ret
mov
lahf
xchg
inc
push
daa
lods
ljmp
xchg
mov
and
cwtl
xor
cmp
mov
push
jns
xor
add
cwtl
pop
insb
mov
aas
je
sbb
punpcklwd
add
gs
inc
fstps
test
subl
shll
lods
test
pop
idiv
pop
xchg
push
cmp
mov
mov
int3
mov
popa
or
and
jle
setg
adc
rcrl
in
mov
mov
pop
add
shld
add
mov
mov
jge
jge
shlb
jmp
hlt
mov
jno
cltd
arpl
sahf
sub
pop
cmp
inc
rorl
mov
inc
xchg
testb
xchg
cmp
jo
jg
inc
out
mov
pop
xchg
ljmp
ljmp
cmp
xchg
mov
sbb
mov
lret
pop
cmp
mov
cmp
cmp
ret
loop
cmpsb
int3
arpl
clc
aaa
jg
cmp
dec
leave
lret
in
adc
leave
ficoms
scas
in
pusha
hlt
cmpsb
or
sbb
and
in
fiaddl
clc
pop
jb
test
adc
mov
cltd
mov
cs
jne
or
rcll
pop
mov
cwtl
adc
mov
pop
imul
and
lds
mov
jg
jb
jg
push
mov
push
cmp
dec
test
clc
movsl
xchg
mov
idivl
sub
sbb
xlat
or
xchg
lret
push
jecxz
sub
add
sub
stos
mov
cmp
dec
ret
and
cmp
lea
xchg
insb
aam
sub
push
es
movsb
push
and
loope
dec
cli
lods
push
sbb
inc
mov
fdivrs
pusha
mov
ja
add
inc
fwait
cli
xor
pop
or
pop
mov
pop
add
jo
sahf
mov
add
stc
push
push
int
notb
dec
mov
xchg
loope
push
daa
jge
sbb
mov
outsb
inc
mov
iret
pop
repz
shr
push
cmp
push
je
in
std
and
ret
cmp
ret
ds
sub
xor
xor
js
jg
mov
stos
mov
push
push
inc
cmpsl
das
pmovmskb
and
pop
jg
xchg
fildl
adc
cwtl
mov
lock
push
mov
mov
inc
int
pop
popf
or
dec
pop
std
inc
mov
das
movsl
mov
or
inc
and
bound
ror
lea
insl
jp
int3
add
fisttpl
pop
dec
scas
int3
pop
pop
xchg
out
inc
mov
fcmovnbe
imul
out
ja
sub
xchg
push
adc
dec
dec
lods
cwtl
mov
lret
lea
add
je
xchg
pop
push
incb
idivb
adc
push
mov
xchg
adc
sbb
daa
jle
add
jbe
stos
pushf
xchg
cmp
jo
dec
mov
push
mov
inc
mov
jo
sub
stos
mov
jmp
jle
subb
jmp
fistpll
sbb
dec
imul
or
out
cli
loop
mov
ror
jecxz
push
adc
insb
cmp
aaa
mov
seto
and
push
pop
mov
ljmp
insb
sub
push
xchg
push
in
int3
std
xor
mov
lahf
pop
pop
fistps
mov
testb
cwtl
imul
aad
add
and
jl
pop
fwait
and
sbb
or
jae
mov
xor
jg
pop
dec
cmp
pushf
inc
and
cmp
mov
test
jecxz
std
out
insb
out
push
aam
inc
jne
gs
mov
popf
xchg
jge
dec
add
cs
imul
std
lcall
popf
ret
push
jge
mov
stc
mov
es
imul
rcrb
add
enter
sub
in
ss
ja
repz
mov
mov
popa
jbe
mov
out
jnp
mov
mulw
inc
rcl
subl
xor
and
mov
pusha
mov
jnp
push
fimull
cmc
enter
jne
push
popf
cld
xor
mov
lods
mov
out
loopne
mov
mov
cli
gs
popf
dec
mov
js
and
sarl
mov
add
xchg
xchg
mov
push
mov
xchg
pop
das
sbb
mov
test
mov
loop
push
mov
jae
mov
push
bound
inc
add
jae
movsl
push
insl
or
fstl
inc
pop
scas
inc
clc
inc
hlt
loop
and
add
idivl
arpl
cmp
leave
in
lcall
sbb
pushf
ret
daa
mov
dec
or
inc
add
adc
les
rep
dec
xchg
js
stos
lods
orb
lcall
shrl
adc
mov
sub
mov
cmpsb
or
movsl
pop
shrb
and
enter
daa
adc
mov
movsl
in
cmp
push
cmp
mov
les
mov
das
or
ffree
ss
adc
cmp
scas
insl
lods
jp
push
inc
or
inc
pop
sarl
sahf
mov
or
icebp
call
mov
nop
xchg
fimull
sbb
add
xchg
out
add
lret
jnp
lea
ja
jg
ss
shlb
jmp
lcall
call
sub
pop
or
add
jns
sub
ficoml
push
dec
enter
pop
pop
or
cmc
test
adc
fdivrl
data16
mov
pop
jecxz
inc
fisubl
stos
les
xor
or
inc
xor
jmp
stos
fdivs
loopne
cltd
mov
mov
push
int
dec
mov
xchg
mov
stc
loop
and
jmp
shl
cmp
cmp
stos
out
or
daa
mov
adc
xchg
mov
aaa
push
inc
aaa
aam
inc
bound
xor
xor
mov
stc
adc
mov
push
push
push
mov
xchg
jl
mov
xor
cmp
mov
cmp
in
add
jmp
shlb
adc
mov
scas
sbb
repnz
mov
repz
sar
lcall
movsb
aad
cmp
fnstenv
jecxz
adc
insl
je
ja
es
cld
adc
xchg
pop
jne
and
inc
xor
lcall
outsb
jge
ror
dec
jg
and
pusha
outsl
roll
in
xor
jo
dec
mov
push
jmp
movd
lret
cld
cmp
rclb
test
fsubrs
cmc
jnp
cmp
and
fildl
jo
js
test
mov
mov
jp
fistpll
add
iret
dec
pop
lods
mov
jmp
xor
bound
xchg
fsubl
ljmp
or
push
clc
outsb
mov
and
in
mov
jae
adc
adc
das
bndldx
testl
aad
cwtl
mov
jle
inc
fcoml
cmpsb
push
mov
sbb
dec
loope
sbb
fxch
add
dec
jne
enter
push
push
and
mov
pusha
scas
inc
fmuls
jl
xchg
cld
or
in
jp
repnz
push
xor
add
lahf
cwtl
mov
sub
dec
cmp
out
xchg
outsb
sub
or
add
jns
out
in
xchg
sub
dec
pop
jae
pop
add
dec
ljmp
mov
aad
mov
cmp
rorb
push
sbb
push
xchg
int3
roll
hlt
pop
in
test
shl
add
sub
push
add
ljmp
lods
mov
inc
ss
or
fsubrl
ficomps
es
fldenv
inc
push
in
pop
pushl
mov
scas
insb
or
mov
fistpl
push
sbb
jnp
cmp
sbb
aam
and
and
das
inc
jo
jnp
and
cmc
in
push
stos
xchg
xchg
cwtl
xchg
pop
sub
into
sbb
sahf
mov
or
jae
sbb
xchg
movsl
pop
loop
pop
adc
sar
fsubrs
flds
cmp
sub
xchg
mov
mov
add
push
in
or
sub
shlb
ror
icebp
push
dec
dec
stc
fisubrs
aaa
leave
mov
cltd
in
pop
movsl
dec
arpl
aas
or
idivl
cmpsl
and
js
aad
fcmove
adc
outsb
fistl
shl
movsb
pop
in
and
repnz
sbb
mov
adc
nop
loope
xor
rclb
bound
repz
push
rcrb
out
popa
jp
or
fdivrl
pop
and
push
sbb
fndisi(8087
mov
aam
or
sti
fisttpl
mov
in
mov
incl
push
push
dec
dec
aaa
lahf
jno
xchg
mov
cmp
sbb
cltd
and
in
and
add
push
inc
add
aad
xorb
cltd
test
xor
arpl
xlat
out
dec
icebp
dec
outsb
mov
pop
cmpsb
outsb
pop
push
lea
mov
inc
add
lret
movsl
fiadds
xchg
adc
scas
pop
xorl
push
ficomps
xor
dec
pop
stos
push
cmpsl
out
arpl
fimuls
shlb
enter
je
out
mov
adc
popl
mov
or
test
push
outsl
or
cwtl
out
sub
popa
leave
xchg
pop
lds
xor
roll
pop
mov
inc
pusha
sub
mov
aam
jge
enter
cmp
loop
std
mov
sti
push
xchg
fsubp
ret
sbb
push
test
sti
stos
test
add
xchg
fcoms
xchg
push
and
xor
aaa
fstpl
jb
or
insb
adc
imul
pop
jb
daa
cld
cli
mov
rorl
stos
mov
ja
sbb
and
mov
outsb
jnp
cmp
adc
mov
add
dec
dec
sarl
faddl
in
cmp
mov
xchg
paddsb
notl
je
popf
clc
dec
ret
cmp
mov
in
pushf
push
sbb
sbb
sub
cltd
dec
mov
gs
mov
loop
stc
ficoms
sbb
pop
outsl
movsb
call
cmc
mov
test
mov
xchg
leave
scas
lock
xor
insb
mov
mov
jbe
test
cli
sub
push
pop
fsubrp
jno
jecxz
in
pop
adc
adc
push
jl
xchg
xor
push
bound
js
hlt
and
dec
pop
xor
sbb
aad
stc
fldenv
pusha
adc
outsl
mov
nop
cwtl
push
js
and
cmc
cwtl
push
cmp
push
sub
mov
out
sbb
int3
push
mov
xor
dec
imul
iret
jl
mov
jle
ja
mov
mov
xchg
sbb
sbb
dec
mov
pop
stc
test
test
jae
or
in
mov
xor
addl
add
push
sub
pop
adc
popf
les
pop
dec
subl
out
and
xor
je
movsb
adc
sbb
jbe
sub
cmpsb
mov
mov
mov
rcrl
stos
inc
shlb
std
pop
dec
mov
xchg
jl
sbb
inc
fstpt
sbb
in
xchg
shlb
mov
icebp
dec
xor
xor
sbb
and
xchg
notb
push
mov
sub
str
cmp
sti
mov
hlt
bound
jbe
xchg
xchg
jb
or
fstps
pop
ss
push
aaa
sbb
sub
iret
push
push
add
cmp
xor
psraw
push
and
or
and
or
out
jne
sbb
stos
mov
movsl
aam
cmpl
lahf
mov
insl
jl
ss
sub
sbb
pusha
adc
inc
sarl
pop
data16
push
ret
pushf
cmp
mull
std
insb
adc
and
dec
outsl
pop
aad
lahf
cmp
je
xor
xchg
push
loop
or
pop
inc
sbb
mov
or
mov
or
dec
dec
xchg
sbb
cltd
mov
adc
rcrl
xor
aad
xchg
inc
scas
std
xor
mov
outsl
sbb
test
test
xchg
dec
jne
sbb
mov
pop
insl
nop
add
and
lret
insb
ds
jl
insl
adc
cmpsl
sub
mov
test
cld
lea
mov
shrl
clc
fistpll
add
lock
push
icebp
icebp
and
mov
jl
add
insb
push
sbb
mov
out
lret
insl
sbb
andl
sub
push
cmp
mov
shl
out
mov
jne
test
int
inc
xor
xor
int
outsb
inc
xor
jecxz
push
mov
lds
mov
push
fiadds
lahf
sub
cld
stos
mov
sub
push
cld
sub
pushf
and
rclb
das
out
repz
and
cltd
pop
cld
or
lret
push
mov
outsl
xchg
sbb
and
into
cld
cltd
fbstp
clc
fsts
test
cmp
enter
andb
lret
popf
cmpsb
jns
test
mov
cmpsl
movsl
dec
jmp
pop
push
repnz
scas
pop
mov
cmc
xor
fdivp
cld
add
test
movl
into
push
out
mov
setg
lcall
xchg
std
dec
add
addr16
dec
jmp
test
js
bts
lods
sbb
jbe
out
movsb
call
dec
outsl
out
pop
imul
stos
mov
pop
pop
dec
lahf
clc
xchg
insl
lods
xlat
xlat
outsb
jl
in
jmp
jl
mov
mov
adc
jmp
mov
inc
fisubs
pushl
insb
mov
and
fimull
sub
testl
enter
aaa
ret
lods
fistpll
add
xchg
sbb
xchg
arpl
pop
test
iret
sub
int3
fstl
out
movsb
gs
lret
movd
cmp
les
cmp
xchg
out
or
test
sub
sub
adc
outsl
sbb
movsl
push
xchg
xor
xchg
fiadds
clc
dec
ljmp
add
push
ret
insb
and
cmp
mov
lret
js
and
ret
mov
daa
test
xchg
adc
iret
mov
xor
outsb
xchg
gs
pop
loope
cmp
sbb
push
sbb
daa
cmovs
addl
js
js
loope
add
push
sub
rcrb
xchg
push
pop
xchg
das
jge
push
xor
mov
fsubp
add
loop
pop
mov
test
sbb
bound
out
mov
or
cld
mov
sbb
or
cmpsl
push
sub
inc
dec
xchg
je
lret
sahf
pop
repz
push
mov
add
jbe
out
lea
sahf
arpl
jne
cmpsb
loopne
xchg
inc
pop
repz
loopne
ret
sub
jmp
insb
mov
iret
inc
xor
mov
inc
inc
dec
lds
and
mov
fisttps
sub
lds
mov
gs
in
sub
mov
adc
push
imul
std
std
outsb
mov
mov
imul
jmp
jle
pop
add
pushf
outsl
mov
and
cmpsb
fsubrl
in
xchg
sar
mov
xor
arpl
sbb
scas
xor
add
mov
adc
and
in
mov
sbb
cs
repz
test
push
aas
je
jnp
aad
pop
pop
ja
setp
dec
cmp
jo
test
xlat
mov
sbb
push
pop
lret
mov
stos
push
add
jns
or
cmp
lods
mov
in
rol
mov
push
jmp
sahf
add
mov
arpl
fcomps
scas
xor
or
xor
pop
cmpsl
dec
dec
addl
insb
lock
lods
push
repz
out
rorb
pushf
lret
lods
cmp
push
inc
push
call
and
push
mov
ror
nop
das
mov
mov
cmc
xchg
xor
push
xchg
mov
pop
aas
cmp
pop
rcl
and
push
mov
jmp
in
pop
inc
push
shrl
adc
mov
jns
aas
and
addl
cmpsb
lea
aas
scas
mov
and
jp
lret
call
iret
nop
cmp
inc
icebp
xchg
sub
ljmp
fnstsw
mov
xor
xchg
sub
movsl
xchg
push
lcall
pop
stc
loopne
cmp
add
jne
mov
xchg
or
out
xchg
mov
and
repnz
push
rcr
inc
mov
ror
jae
pop
pusha
mov
rcl
cltd
adc
testl
adc
lret
and
jnp
dec
les
pop
jmp
or
cmpl
sbb
data16
repnz
jl
dec
xor
test
push
mov
addr16
mov
out
mov
aam
or
push
movsb
pop
insb
jl
inc
test
scas
mov
scas
xor
jmp
imul
fsubp
xchg
clc
aaa
sub
gs
jae
repz
mov
push
jno
lds
cmp
sbb
enter
jno
fsubl
mov
jmp
out
jae
jle
dec
cmpsb
xchg
imul
inc
ja
pop
movsb
ljmp
pushf
gs
push
push
sub
loop
mov
or
stos
dec
jne
pop
and
je
lcall
test
and
mov
cmp
xchg
sti
pop
rcll
outsb
lret
inc
cmp
inc
xchg
es
jns
pop
jmp
outsl
mov
aaa
sbb
repnz
and
cmp
mov
sarb
imulb
pop
jmp
int
into
fwait
pop
iret
pop
fwait
mov
mov
daa
stc
inc
movntq
cmpsl
jp
xchg
test
bound
adc
add
pushf
in
fbstp
outsl
divb
lds
arpl
ja
aaa
lcall
outsb
lea
push
ds
dec
inc
call
cltd
inc
pop
rcl
int
push
clc
out
bound
sbb
or
fs
imull
out
sbb
idiv
cmp
mov
xor
mov
leave
sub
test
shl
fmull
les
int3
mov
or
fdivl
repnz
push
stos
mov
stos
adc
xlat
je
xchg
add
xchg
pop
fldl
xor
xchg
sbb
cmpsb
fwait
rol
in
sub
aam
mov
clc
shrb
add
lds
int
shlb
pop
sbb
fwait
mov
xchg
dec
mov
ljmp
psrlw
in
and
in
add
enter
test
cmp
out
dec
cmp
shlb
add
push
jnp
xchg
sub
das
push
push
add
jb
and
loope
cmc
and
xor
pop
mov
mov
lods
loopne
cmc
pop
xchg
jge
rclb
mov
sbb
dec
adc
cs
ret
xchg
out
bound
iret
pop
push
in
loope
out
repz
shrl
jecxz
dec
test
push
in
and
add
inc
xor
stos
pop
xchg
mov
or
stc
sarb
lahf
sarb
jb
push
push
jb
cmp
jecxz,pt
cmp
arpl
out
jns
hlt
mov
push
xorb
jb
fadds
or
and
or
mov
das
push
add
mov
cltd
mov
mov
daa
jl
scas
sbb
sahf
out
in
or
lcall
mov
push
jno
mov
xchg
sub
psubq
cmp
out
pop
pop
mov
sbb
in
ds
fbld
push
cwtl
jl
dec
mov
scas
jle
fs
bound
inc
jle
fsubrs
jb
and
ret
fwait
jl
sub
jno
rclb
inc
cs
sbb
fcompp
mov
cmp
loope
ja
jg
mov
jbe
inc
outsl
sub
repz
fstpl
jge
pop
sti
fdivrs
xor
adc
mov
jns
mov
adc
nop
mov
xchg
jge
into
data16
pop
roll
mov
mov
mull
cmpb
rcrl
lods
test
lahf
add
jbe
in
and
stos
jbe
or
arpl
jg
inc
push
iret
outsb
xor
mov
xor
xchg
mov
push
inc
push
xor
jecxz
xorb
cmc
orb
pop
and
push
inc
or
sahf
cmp
scas
movsb
into
subl
fcoml
sub
bswap
pop
xor
andb
stos
fisttpll
mov
dec
fwait
leave
sahf
or
add
test
pusha
pusha
mov
mov
mov
popf
shlb
rcl
or
mov
pushf
inc
mov
movsb
mov
aad
mov
rorb
jae
imul
aad
movsb
outsl
mov
mov
add
or
dec
jmp
loope
es
fdivrl
and
stos
movsb
inc
addr16
xlat
push
adc
jmp
dec
idivl
lea
push
pop
adc
adc
sbb
dec
cwtl
lea
sub
shrb
push
aaa
push
push
mov
out
xchg
lods
pop
jg
xlat
les
adc
add
dec
cmpsl
mov
and
out
dec
in
dec
adc
fildll
shlb
xor
sbb
sbb
sti
xchg
xlat
pop
inc
aas
mov
and
jae
out
mov
ret
stos
add
xchg
stos
mov
fwait
add
nop
and
jbe
xor
std
bnd
call
and
fildll
jae
sbb
into
out
inc
xlat
dec
movsl
mov
xor
mov
mov
inc
add
fwait
aaa
int
test
cli
andl
pop
fisttpll
lods
pop
testl
cld
sbb
ljmp
mov
and
and
shl
or
cwtl
cmpsb
jle
jle
std
cmpsl
mov
inc
mov
pusha
pusha
aad
out
cmpsl
pop
into
jne
icebp
mov
push
add
cld
mov
cli
dec
push
lret
push
adc
xchg
and
add
in
or
fildll
mov
lcall
xchg
mov
scas
mov
push
pop
sub
jle
lcall
test
inc
pop
dec
pushf
push
aas
sbb
daa
in
pop
add
sarl
subl
fcoms
ljmp
xchg
pop
mov
mov
dec
sub
or
mov
es
jo
ret
out
lea
fldcw
lcall
jae
out
mov
and
in
xor
addr16
sub
subb
sub
lods
nop
daa
jbe
mov
ret
mov
adc
pop
inc
adc
insb
add
sub
imul
or
mov
dec
scas
shlb
dec
fcoml
aam
leave
lret
sahf
push
sahf
mov
cmp
shll
fiadds
sbb
cmp
and
push
push
cmp
shld
test
dec
aad
call
or
push
push
insl
adcl
add
repnz
push
dec
rolb
dec
inc
lock
sub
jno
sbb
mov
fists
pop
mov
xchg
cmovb
sarb
xchg
pushf
sub
dec
in
xor
dec
dec
lea
inc
xor
jge
pushf
cmp
arpl
or
js
mov
fcom
shl
lods
xchg
ss
xlat
ss
adc
mov
push
jle
and
fldcw
xor
ficompl
push
enter
out
stos
aad
test
jge
aaa
push
fldenv
mov
aas
dec
add
es
xchg
sbb
or
push
mov
xchg
mov
xchg
cmp
divl
xor
js
mov
test
ficoml
push
and
inc
sbb
fcompl
mov
movzbl
fisttpl
jecxz
mov
mov
aaa
xchg
xor
test
loop
inc
sbb
mov
add
or
add
repnz
movsl
inc
sahf
test
out
inc
pop
push
test
adc
mov
xchg
and
fstps
sub
insl
push
ret
into
pop
jp
xor
xor
rorl
fwait
push
loopne
xor
int3
ret
mov
xchg
inc
mov
xor
rol
pop
test
jns
jmp
rcrl
pop
sub
jmp
jecxz
leave
xor
pop
and
hlt
into
sar
push
mov
and
and
inc
sahf
movsl
in
sub
mov
into
inc
lcall
adc
pop
leave
mov
sbb
test
jb
outsb
dec
insl
mov
xlat
jmp
nop
add
jp
data16
ja
xchg
test
dec
mov
cwtl
mov
pop
iret
mov
jmp
and
mov
test
cs
pusha
cli
and
adc
idivb
stos
xor
push
mov
jecxz
mov
pop
and
lea
lds
sbb
sbb
push
sub
out
cmpsb
or
sub
jmp
cmc
xor
rcll
stos
stos
xor
clc
mov
in
fsubs
pusha
and
imul
push
pop
xor
cmc
popf
stc
scas
aam
mov
push
lea
loopne
xor
lcall
subb
mov
out
fs
and
mov
mov
fstl
push
cmc
jno
movsb
fwait
mov
mul
repnz
imul
cmp
xchg
test
insl
sub
cli
in
mov
push
mov
popa
cmp
cmp
sub
sbb
cmp
popa
mov
jae
dec
ss
xchg
roll
dec
push
xchg
test
or
pop
ja
loop
mov
xor
addr16
loope
addr16
shrb
lahf
cmp
mov
mov
xorb
adc
es
mov
test
sbb
jbe
and
xchg
mov
push
sbb
xor
std
mov
shl
cmp
and
mov
aad
ret
inc
xchg
pop
mov
fldt
ja
scas
mov
and
icebp
leave
push
fiadds
aas
push
and
mov
daa
cltd
mov
mov
add
popf
push
jbe
test
test
mov
add
adc
test
and
or
cmpsl
inc
cmp
mov
sti
fstl
jno
insl
loope
hlt
push
ss
add
out
push
and
mov
das
xor
aaa
pop
mov
mov
push
decb
push
aad
cmp
outsl
fildll
loop
leave
cmpsl
or
ljmp
sub
std
xlat
or
push
mov
loop
orb
stos
roll
cs
cmp
adc
push
sbb
int
outsl
daa
mov
ds
add
adc
fwait
cwtl
cmp
aad
push
adc
sub
push
lret
jno
mov
pop
mov
sbb
adc
fs
push
and
lahf
inc
divb
inc
adc
mov
imul
enter
mov
stos
test
jb
push
or
out
daa
or
jno
sub
and
dec
xor
clc
and
adc
cmp
popf
movsl
inc
and
call
mov
mov
outsb
mov
loop
pop
pop
sub
push
outsl
sbb
cmp
jne
insl
adc
add
mov
das
inc
fimuls
mov
stos
loopne
ss
pop
ret
ljmp
pop
mov
adc
fpatan
mov
lock
ja
or
mov
cmp
lock
out
leave
sbb
jns
xor
int
leave
pop
decb
adc
mov
jb
lds
push
inc
inc
fldt
test
movsb
and
sub
push
mov
iret
je
pop
mov
adc
push
pop
hlt
jmp
mov
sahf
scas
adcl
add
fisubs
and
xor
inc
sarl
jg
mov
mov
cmp
leave
mov
push
xor
adc
sti
in
repz
andb
push
xchg
xlat
dec
cmp
and
rcl
xchg
lea
cli
or
fcomps
sub
pop
and
pushw
movsb
adc
jb
xor
jbe,pn
adc
push
loope
inc
pop
mov
sbb
xor
pushf
or
push
les
xchg
dec
or
mov
orb
fwait
cmp
cmp
jmp
cmpsl
or
xor
xor
push
xchg
data16
dec
pop
pop
fbld
mov
daa
aas
daa
xchg
sbb
vcvtss2sd
mov
add
lahf
mov
je
negl
push
imul
adc
fst
mov
sbb
orl
sbb
bound
rorb
sbb
lods
rorb
pop
test
mov
mov
int
mov
sub
push
jmpw
popf
mov
adc
lds
or
addr16
xchg
popf
lahf
push
lcall
push
cmp
jle
lahf
lret
pop
push
cmp
sbb
scas
int
pop
es
shlb
cwtl
test
ret
inc
fdivl
aaa
push
imul
test
inc
push
cmp
and
in
loopne
les
imul
lea
call
or
mov
mov
xor
addr16
fbld
lock
fcoml
nop
and
jge
mov
icebp
sub
jno,pn
dec
lea
xor
inc
mov
jp
lds
dec
cwtl
or
jp
add
xchg
inc
push
shlb
push
push
mov
fwait
push
fisttpl
push
mov
jmp
lock
lret
mov
adc
mov
cs
or
pop
add
mov
inc
call
incl
inc
in
mov
les
dec
sbb
sahf
rorl
cmp
jne
pop
xor
lret
imul
mov
sti
imul
pop
inc
mov
cmp
repz
ljmp
movsl
push
stos
mov
daa
mov
sbb
dec
cmpsb
push
pop
mov
lock
pushf
cmpb
xchg
pusha
sarl
push
shl
adc
jns
fcmovnb
fistps
shr
outsl
lahf
out
fdiv
aaa
push
scas
and
loop
in
outsb
es
cltd
push
ffree
arpl
shufps
aad
rcll
sub
adc
testb
sub
decl
mov
xor
lock
pop
lea
add
dec
pop
push
pop
add
and
push
repnz
cld
sbb
insl
add
mov
out
mov
dec
imul
jo
int
daa
sbb
inc
inc
ljmp
pop
daa
aam
enter
mov
mov
movsb
inc
fisubl
jns
xor
cmp
loope
mov
or
dec
and
mov
cmp
imul
leave
sub
call
mov
adc
fisttpll
or
jmp
inc
pop
pop
outsb
xor
or
inc
mov
push
rorl
popf
mov
test
push
test
jnp
jns
adc
mov
std
push
xorb
out
daa
cwtl
fwait
and
jge
push
fcoms
stc
pop
sbbb
outsb
pop
dec
or
add
mov
dec
or
negb
dec
aam
push
clc
rcll
rorl
adcb
fcomps
mov
adc
sbb
out
sub
pusha
gs
or
adc
clc
filds
xchg
adc
test
les
dec
jmp
xchg
fcmovb
push
or
lret
jns
test
push
sub
mov
inc
jmp
lods
or
sub
xor
or
push
and
inc
push
mov
fmull
das
and
lret
dec
je
cmp
cmp
xor
xor
adc
dec
xchg
ss
cmc
xchg
aaa
pop
insl
pop
aad
sub
test
mov
push
test
cmp
mov
fidivs
cmpsl
shrb
or
aad
pop
inc
jecxz
mov
adc
dec
insl
dec
loopne
popa
xor
xchg
jecxz
cmp
and
out
xor
xor
add
nop
sbbl
repnz
ficompl
sub
xchg
adc
pop
imul
aas
inc
dec
cs
into
xlat
cwtl
hlt
das
data16
jg
pop
out
sbbw
and
sbb
in
insl
mov
pop
push
popa
xor
sahf
les
push
ds
sbb
cmp
adc
mov
fwait
adc
mov
ja
or
test
sbb
pop
int
cld
mov
xchg
inc
outsl
call
xchg
push
imul
call
pop
das
mov
jns
repz
add
scas
cld
sub
adc
xlat
ds
inc
adc
ret
xor
in
fwait
adc
cld
add
mov
insb
fwait
pop
dec
inc
mov
jno
mov
shl
lret
and
fldt
cli
jb
push
jecxz
jle
ss
push
mov
outsl
push
pop
xchg
xlat
add
int
ljmp
les
mov
lret
in
rcl
mov
dec
push
adc
mov
jp
fiaddl
push
push
cmp
xchg
mov
cli
gs
sbb
add
cli
xchg
fimull
in
aaa
out
add
out
jecxz
adc
add
jbe
xor
je
xchg
mov
cld
sub
xor
push
test
imul
xchg
cmp
shrl
sbb
lret
inc
ja
inc
leave
or
mov
aad
mov
pop
inc
ss
je
cmpl
sarl
mov
pop
ljmp
dec
dec
xchg
mov
xchg
ret
scas
add
or
roll
out
sbb
sub
bnd
mov
mov
and
sub
mov
imul
jbe
mov
inc
jl
or
addb
mov
fdivrs
mov
mov
std
mov
add
insb
jg
sbbb
dec
jns
icebp
in
inc
ja
test
stos
mov
cmp
addl
jb
lahf
insb
and
mov
test
negb
pop
out
out
mov
jl
push
imul
ret
fcmovnu
xor
sub
scas
js
rcll
xor
xchg
data16
push
cmpsl
imul
and
cli
mov
out
sbb
in
cmp
call
roll
sub
add
xchg
sbb
lds
mov
add
xchg
cli
inc
mov
clc
aas
push
inc
cmp
or
push
mov
andb
mov
xchg
pop
outsb
fisttpll
out
lcall
nop
cmp
dec
jnp
adc
aad
jmp
loopne
les
mov
shr
dec
mov
and
xor
sub
rorb
cmp
push
xor
scas
dec
ret
out
movsb
rol
clc
fcomp
shll
and
dec
push
test
cmp
imul
addr16
in
jne
in
vsubss
sub
mov
cmp
pop
es
jb
pop
in
movsl
fsubp
sub
sub
lahf
int3
cmpsl
lods
aad
mov
mov
test
mov
jae
lock
mov
fistpll
adc
imul
add
jno
aas
push
stos
das
subb
pushf
ret
js
and
lods
ds
ljmp
addr16
adc
cld
mov
sbb
cltd
mov
sbb
xchg
inc
rolb
fcmovu
cmp
cmp
push
into
or
dec
sub
sbb
jb
js
mov
mov
cmp
cwtl
shlb
cs
aas
in
fisttpl
sbb
xchg
fisubrl
leave
cltd
push
lret
addr16
xchg
inc
mov
cmp
jle
test
cmpsl
mov
into
cltd
cmp
push
xor
jmp
fwait
and
lds
mov
cmp
hlt
daa
loope
mov
jne
cmp
add
push
xor
jmp
repz
or
in
dec
pop
push
pop
test
xchg
cli
mov
xor
sub
sbb
outsl
cmpsl
jg
xor
sahf
cmpsb
je
add
ret
inc
insb
aaa
lock
and
push
push
fmulp
add
ljmp
mov
mov
loop
xor
adc
jmp
sub
dec
stos
fnstenv
ret
mull
test
mov
sti
shrb
sbb
lods
inc
out
clc
popf
call
add
cmpsb
mov
xor
loop
test
and
add
jge
mov
lret
cmp
and
push
stos
data16
inc
repz
icebp
iret
mov
xor
push
pushl
cwtl
adc
xchg
xchg
adc
rcll
les
or
andl
fwait
jb
movsl
mov
mov
adc
mov
mov
mov
insb
lds
jns
push
sahf
jo
leave
mov
sub
int3
sub
scas
mov
fiaddl
xor
dec
xor
pop
imul
in
sub
sub
das
push
or
fldlg2
imul
mov
repnz
scas
xchg
pop
inc
dec
clc
fbld
popa
in
jp
loopne
out
push
mov
push
popf
ret
xlat
cmp
stos
xor
xor
aas
outsl
ds
push
lods
jecxz
out
rorl
push
add
inc
rcll
fldenv
pop
pop
in
push
inc
and
loope
jae
mov
mulb
popa
pop
repz
sbb
and
int3
leave
fstl
insb
leave
mov
rclb
pop
sti
in
es
ljmp
sar
mov
dec
push
test
and
in
mov
jne
fiadds
inc
push
xchg
repz
lea
cltd
mov
inc
sahf
sti
sahf
dec
mov
inc
hlt
cwtl
add
ljmp
ss
mov
inc
fdivr
std
and
or
or
sub
repz
cwtl
inc
mov
insl
cli
xchg
or
movsb
pop
inc
cmpsl
push
in
test
iret
lret
sbb
and
xchg
outsl
leave
imul
arpl
push
pop
xchg
clc
or
push
inc
push
pop
testl
xchg
mov
sub
jle
inc
cld
sub
cmp
xchg
fidivrs
dec
add
inc
mov
inc
fwait
scas
psubsw
lret
sub
das
mov
imul
lcall
loope
cmp
mov
out
mov
xor
xchg
dec
adc
xor
sbb
dec
outsl
shll
pop
mov
mov
test
or
push
out
xchg
cmp
sub
shrl
jns
stos
or
push
sub
movsb
mov
pop
movsb
lret
ja
scas
dec
add
pop
sbb
popa
loop
mov
pop
out
enter
add
into
sbb
xchg
inc
cmp
bound
cwtl
loope
jge
jl
sbb
daa
pop
aaa
in
lret
sub
cs
and
fwait
pop
cmpsb
adc
das
xor
shr
arpl
xchg
xor
cwtl
lock
sub
repnz
sahf
xchg
clc
jp
scas
mov
lock
pop
ret
push
xchg
sub
cwtl
inc
cmp
lock
cmpsl
cli
push
dec
sbb
in
or
mov
and
xor
adc
pop
dec
aaa
pop
mov
sub
in
sbbb
inc
clc
push
push
add
mov
cmpsl
icebp
push
push
xchg
arpl
and
inc
push
and
and
mov
dec
lods
dec
aaa
out
jno
in
repnz
out
scas
jmp
jae
lods
xlat
add
mov
or
leave
push
out
cmp
sbb
and
xor
mov
pop
insb
dec
pop
add
jae
and
mov
jne
std
setae
or
mov
jne
sbb
adc
pop
je
pop
cs
mov
repz
sub
fdivs
daa
xchg
test
cwtl
fisubs
pushf
adc
xchg
imul
push
outsb
xor
es
pop
mov
inc
lock
pop
jns
push
cmp
push
pop
dec
or
push
sti
xchg
daa
xlat
mov
pop
popa
jne
sbb
mov
pop
push
jg
mov
std
or
mov
test
sbb
sahf
ja
pop
sub
sub
loop
clc
bswap
push
mov
xor
pusha
jmp
aad
subb
mov
sub
inc
add
sbb
xorps
aas
push
imul
call
add
sbb
xor
std
xchg
mov
js
subl
or
es
mov
jecxz
pusha
sub
xchg
ljmp
js
ja
pop
loopne
inc
outsl
and
insb
loopne
into
xor
loope
fisubl
ljmp
cmp
cld
fsubs
mov
mov
roll
call
frstor
call
subb
jo
xchg
or
cltd
mov
cmp
test
and
jg
dec
lahf
add
loop
leave
test
jp
stos
ss
pop
push
jmp
mov
mov
adc
aad
xor
hlt
jp
add
sbb
stos
rcrl
jbe
mov
xchg
mov
jecxz
cmpsb
in
iret
inc
addb
arpl
das
out
jo
mov
pop
into
push
xor
rol
xchg
cs
cld
push
adc
int
jle
push
repnz
jmp
cs
repz
subl
sbb
adc
ja
mov
mov
pop
stc
and
adc
and
into
cld
sbb
dec
pusha
cmpsb
test
lcall
adc
ror
mov
mov
and
int3
rcrb
mov
das
pop
mov
in
fimull
packssdw
lret
push
push
push
adc
imul
mov
mov
mov
sti
shl
sub
clc
addr16
fidivl
dec
cmp
pop
dec
fs
and
inc
stc
adc
repnz
nop
loope
pop
jecxz
packsswb
adc
stos
mov
push
xchg
jle
push
push
mov
and
sub
jmp
aas
or
or
jno
sbb
rorl
mov
inc
or
stos
in
imul
movsb
mov
inc
adc
orb
jae
add
xor
in
jp
inc
aas
jl
lahf
sbb
fcmovu
cmc
mov
or
mov
loope
aaa
aad
push
push
popf
scas
inc
inc
add
mov
push
add
pushf
in
dec
mov
mov
push
mov
fidivl
mov
inc
pop
cli
push
stc
mov
lret
pop
cmp
or
xchg
sbb
inc
repnz
faddl
ljmp
mov
jnp
and
add
sub
cmp
mov
jmp
add
xlat
fstps
in
psrld
xor
xchg
stc
cmp
stos
dec
mov
add
cld
mov
cmp
divl
push
dec
sbbb
dec
push
lret
imul
imul
test
dec
jge
xchg
push
movl
jb
inc
sbb
mov
mov
rorb
lods
int3
cmc
pop
daa
cmpsl
jae
dec
rcrl
push
popf
cld
push
pop
out
adc
std
xchg
xor
lret
or
lds
jo
fdivl
cmpsl
stos
jecxz
inc
push
out
into
dec
xchg
adc
cmp
aas
xor
push
hlt
pop
sti
mov
sbb
dec
mov
inc
cmp
mov
test
frstor
mov
inc
xchg
lods
shrl
push
mov
in
les
aaa
inc
pop
and
imul
fldl
xor
mov
mov
cmc
addr16
push
out
pop
lret
xchg
in
xlat
push
test
negl
push
or
testl
stos
adc
stos
xor
mov
jns
js
pop
test
lret
int
xchg
out
imul
loope
loope
sbb
push
outsb
out
mov
jae
iret
insb
mov
shrl
push
inc
or
cmp
xchg
popa
sahf
cltd
in
push
ds
cmp
test
fists
cld
add
adc
mov
imul
loop
das
jnp
test
call
fwait
cmp
insb
movzwl
mov
stc
mov
test
test
loop
or
fcmovnu
inc
test
mov
jecxz
pop
data16
or
ljmp
mov
lret
xchg
push
test
jmp
xchg
inc
adc
lcall
xorb
dec
aas
pop
add
push
xchg
aad
test
xor
mov
popf
push
aam
fimuls
sub
movsl
and
hlt
sarl
sub
inc
mov
push
stos
sarb
xor
test
xor
mov
into
jle
int
pop
jle
add
mov
and
insb
xchg
stos
jae
dec
out
xor
cmp
ret
nop
adc
mov
xor
push
and
es
and
cltd
stc
jns
jnp
cmp
lret
out
popf
sahf
push
bswap
or
mov
push
sahf
rcrb
pop
and
add
pop
sti
inc
sub
in
mov
mov
das
jnp
sarb
xor
jecxz
sub
jae
daa
xchg
xchg
xchg
or
xchg
sub
mov
pop
stc
push
pop
push
call
int
insb
scas
mov
sub
xchg
mov
stc
movsb
and
lods
ds
dec
inc
mov
ja
in
aad
movb
ljmp
jae
xchg
pop
popa
jno
addr16
add
lock
iret
mov
in
ret
shlb
mov
popa
or
inc
push
jl
mov
dec
fistpll
push
mov
in
vpunpckhbw
out
adc
mov
out
outsb
fdivs
imul
sub
stc
cmp
xchg
fnsave
pop
xor
xchg
rolb
push
jno
subl
adc
scas
dec
mov
xor
call
push
out
call
mov
loopne
pop
lret
cs
negl
pop
loopne
add
or
mov
ret
jo
sbb
lods
dec
jae
pop
mov
add
mov
xchg
xchg
pop
mov
lahf
clc
popf
rcrb
push
rep
sub
dec
inc
and
jecxz
sub
cmc
jl
outsb
stos
sbb
shrb
ror
sub
jae
lds
frstor
sti
stos
lods
jg
inc
aas
or
add
ret
rcrb
mov
sbb
cmp
push
xchg
adc
adc
sbb
inc
call
push
sub
or
dec
iret
test
inc
repz
sahf
push
inc
xor
test
pop
adc
pop
out
gs
mov
iret
sbb
stos
orb
mov
sti
lock
push
adc
sbb
mov
roll
lods
push
xor
xchg
cmp
xchg
lcall
rol
fmul
adc
pop
hlt
lret
add
dec
and
jae
sbb
test
inc
lods
mov
inc
dec
jns
repz
push
sbb
cli
or
or
inc
ds
les
inc
pusha
xor
pop
into
outsb
mov
jp
hlt
push
jmp
cmp
push
nop
mov
cwtl
and
outsb
mov
pop
lret
lods
cmp
mov
mov
fmull
jnp
lock
cld
movl
roll
jne
mov
adc
push
lcall
mov
mov
push
sbb
loopne
add
inc
jle
xchg
cs
sbb
pop
nop
sahf
lret
mov
cltd
mov
icebp
xor
xchg
adc
fsubrl
iret
int3
movl
sbb
test
pop
adc
jns
xchg
pop
data16
sbb
insb
add
lea
insl
test
cli
rorl
add
ficoms
mov
in
inc
cld
mov
fsubrs
push
daa
test
les
sbb
in
dec
cltd
mov
int
enter
mov
leave
test
enter
mov
jmp
pop
cmp
subl
lahf
fdivl
or
out
xor
pop
and
cs
lret
sub
testb
popa
xor
stc
and
gs
xor
sub
jmp
pop
loop
cmp
xchg
lret
push
pop
hlt
iret
push
mov
shll
jge
adcl
js
fbld
jns
push
out
das
mov
into
andl
lret
xchg
adc
ja
stos
add
sbb
sub
push
dec
rclb
cmp
cmp
inc
sbb
rcll
push
and
sub
mov
repz
mov
push
pushf
inc
dec
in
mov
icebp
in
dec
fcoml
mov
sbb
dec
xor
arpl
or
aaa
dec
not
stc
icebp
jmp
lea
lock
shll
xlat
mov
xchg
stos
inc
sarb
mov
aad
pop
fdivl
ret
dec
xchg
lret
inc
push
in
mov
pushf
xor
mov
and
adc
inc
sbb
arpl
mov
sbb
shll
jmp
fisttpl
and
fiaddl
aad
cli
fidivrs
sahf
pop
cmp
lds
ljmp
xchg
dec
loop
repz
push
xchg
push
cmp
bound
movsb
push
cwtl
inc
int
mov
sahf
xor
stos
lret
mov
xchg
sbb
mov
loopne
aam
xchg
outsl
in
stos
repnz
sahf
aas
and
and
je
cmp
outsb
and
hlt
pop
mov
icebp
push
in
mov
dec
je
divb
adc
or
rcrl
movsl
cwtl
mov
push
repz
popa
pop
jnp
jno
adc
and
pop
call
cmpsb
addb
cmpsl
imul
rorl
cmp
fsts
cmpsl
int3
and
ljmp
push
outsl
add
lahf
push
daa
xor
dec
pushf
dec
add
test
sub
push
jg
mov
xlat
sub
lret
pusha
jle
hlt
dec
adc
adc
and
sti
loopne
repnz
leave
pusha
into
inc
cmp
jp
sub
lea
frstor
shrl
je
test
cmpsl
sub
jg
pushf
inc
lea
add
roll
add
jo
xchg
jbe
add
loop
add
out
ret
xor
lea
sub
cmpsl
hlt
into
sub
aaa
pop
nop
mov
pop
and
inc
pop
mov
jae
pop
mov
out
jnp
fistps
int3
add
add
clc
hlt
sar
gs
enter
out
fidivrl
bound
fwait
je
lods
xchg
and
pop
sbb
icebp
bound
dec
add
test
cltd
in
into
scas
les
mov
mov
mov
pop
add
mov
sbb
mul
mov
pusha
xor
in
mov
jns
or
repnz
das
mov
stos
out
lahf
jg
sbb
sub
and
lods
xchg
sahf
test
adc
pusha
push
or
mov
pop
or
inc
mov
jno
out
lcall
xorb
adc
mov
xor
or
push
loop
mov
movsl
jl
mov
dec
fsts
sti
cmp
lea
imul
dec
mov
sahf
lret
inc
add
arpl
sbb
js
lret
out
jae
push
ret
push
popa
xchg
shll
outsl
addb
fdiv
push
inc
movsl
in
xor
imul
add
popa
and
lahf
movsb
inc
sub
inc
or
xchg
jb
sti
fistpl
dec
imul
jnp
movsb
repnz
xor
inc
sub
jns
lret
inc
fucom
cmp
or
cli
mov
cmp
mul
sub
add
and
dec
dec
cmpsb
or
jge
jae
fs
lret
shlb
mov
cwtl
movsl
add
and
xor
fcmovne
daa
test
push
sti
in
sar
int
pop
jl
cmp
sahf
push
push
xchg
aad
imul
dec
fisttps
jge
jg
xor
cltd
sub
dec
add
nop
inc
cs
and
sbb
cmp
or
mov
xchg
and
in
enter
xlat
arpl
jo
xor
popa
mov
scas
loop
popa
mov
add
cmp
insl
ret
push
add
xchg
or
arpl
insl
lods
icebp
mov
pusha
je
loopne
jmp
pop
inc
cmp
push
push
out
mov
xchg
dec
and
xchg
mov
aaa
xchg
mov
push
sahf
ss
push
adc
lret
fcmove
aad
sub
mov
push
sub
mov
dec
push
shll
lret
jbe
push
push
jp
adc
faddp
nop
into
insl
in
mov
add
test
lret
daa
imul
test
mov
bound
popa
pop
mov
dec
mov
fs
ret
rclb
inc
inc
call
pop
adc
xor
pop
int3
bound
sub
call
add
mov
pop
mov
jnp
lcall
mov
fsts
push
icebp
shlb
sahf
lea
mov
outsl
stc
mov
int
popf
adc
fisubl
pop
dec
mov
mov
mov
outsb
sub
sub
cmp
add
sub
mov
dec
push
jmp
cli
stos
sub
or
mov
aaa
lods
frstor
rcll
pop
arpl
jb
push
xlat
push
xchg
lods
jne
sub
in
sub
adc
das
mov
repnz
xchg
adc
aam
addr16
mov
out
push
pusha
pop
jne
pop
fiadds
jae
pop
adc
jecxz
mov
adc
mov
push
adc
arpl
or
arpl
dec
ja
jmp
popf
je
mov
and
xor
leave
test
test
xchg
push
sub
mov
loop
dec
inc
adc
cmp
imul
sub
mov
rorb
addb
mov
mov
out
xor
lcall
lret
call
movsb
shrb
loop
test
lcall
imul
popf
movsb
lods
xchg
sbb
enter
jl
stos
sub
jno
dec
mov
xor
adcl
sub
cmp
push
test
pop
imul
mov
dec
or
xchg
dec
stc
mov
out
sub
pusha
push
sarb
pop
loop
xchg
ficomps
cwtl
lcall
jns
les
xchg
fsqrt
mov
pop
pop
out
push
jge
jno
daa
and
cli
push
inc
lds
stos
xor
call
cmp
mov
dec
hlt
popa
sub
nop
pop
push
out
decl
popf
xor
push
sbb
jl
jnp
lcall
sub
scas
outsb
aas
mov
imul
inc
loop
mov
fs
dec
xor
jmp
in
cs
jle
lods
push
adcb
mov
out
sub
jp
jecxz
sbb
sbb
push
dec
xor
shrl
or
and
inc
pop
sbb
or
cli
jmp
and
rcl
sbb
dec
cs
jge
jo
adc
xchg
cmp
stc
idivl
sbb
mov
add
xchg
lea
adc
add
fsubl
divl
shll
pop
or
pop
loop
push
ret
inc
lods
adc
xor
cmp
dec
test
aas
adc
and
sahf
jl
icebp
sub
xchg
repnz
ret
add
xchg
sub
subl
cmp
inc
pop
mov
or
je
inc
stos
mov
iret
imul
insb
iret
fwait
lock
movl
cmc
jle
cmp
test
dec
int
inc
rcrb
lock
sub
jl
add
es
inc
aas
sbb
add
push
test
jnp
outsb
fwait
jle
out
into
inc
sbb
rcr
and
dec
aam
loop
insb
xor
mov
rcrl
in
pop
decl
pop
cs
mov
sub
mov
testb
jae
and
mov
and
hlt
lods
nop
and
filds
mov
ret
mov
imul
mulb
jg
or
or
fidivrl
xor
xchg
jne
divl
sub
cmp
or
mov
fwait
adc
jne
stos
scas
mov
icebp
sti
rcrb
push
adc
or
lret
pop
sub
jae
loope
mov
push
cli
cs
mov
xor
int3
add
scas
mov
sahf
lea
loope
dec
xor
loope
fsubrs
ret
and
pop
sub
inc
aam
add
dec
fdivl
jb
cli
inc
xchg
out
outsl
xchg
das
xor
adc
sbb
mov
test
jno
pop
loope
data16
push
pop
jb
jns
inc
xchg
push
mov
mov
mov
cmpsl
jns
loope
in
popa
inc
test
repz
mov
sub
cmpsl
out
das
ss
repnz
fcomip
loop
in
xchg
enter
add
sub
arpl
movsl
add
int3
cltd
pop
add
cmpsl
orb
dec
sti
jecxz
sbb
jl
decl
popf
xchg
insl
xchg
fisttps
test
cld
test
fsubrp
pop
outsb
sbb
loopne
out
jns
lock
movsl
xchg
loop
mov
sbb
fcmovb
inc
xor
adc
movsl
sbb
cmp
rolb
jge
outsl
pop
or
and
lods
outsb
push
mov
insl
es
lret
cmpsl
pop
mov
out
icebp
xlat
or
mov
add
out
add
repnz
push
int
cmp
mov
pop
pop
sbb
xchg
lahf
xchg
jae
loopne
sub
and
xchg
leave
les
je
mov
ret
gs
loop
fsubs
or
daa
mov
ss
movl
pop
bound
stos
push
or
aas
or
sbb
push
decb
daa
adc
or
dec
xor
dec
sbb
sub
mov
xchg
add
cmp
dec
test
add
sub
into
adc
xchg
pop
cmp
xor
push
push
cmp
xchg
sub
jno
sub
in
cld
mov
fwait
lahf
mov
fxch
nop
je
jmp
xlat
ficoms
jo
adc
adc
js
orb
mov
mov
scas
loopne
fsubr
push
pop
push
jl
push
sahf
std
push
pop
fwait
xchg
push
outsb
pop
mov
test
repnz
lret
scas
adc
gs
stc
adc
inc
mov
enter
sbb
cmc
cltd
dec
pop
push
out
pop
outsb
sub
fistpll
sbb
icebp
or
std
dec
mov
ds
xlat
icebp
into
sub
jge
dec
mov
sub
adc
pop
jb
lods
jns
mov
std
xorl
rcrb
xchg
les
pop
jne
fdivs
out
inc
mov
mov
cmp
dec
es
mov
pop
imul
lcall
outsl
fdiv
mov
fbstp
cmp
lds
mov
jne
inc
mov
aad
mov
cmpsl
xchg
xchg
push
rcl
test
int3
insl
xchg
jae
adc
scas
std
add
in
mov
add
ss
clc
leave
mov
pop
pop
rorb
sub
push
adc
jle
mov
xor
add
push
cli
imul
call
data16
pushf
xlat
pop
sbb
lret
cmp
jno
mov
addr16
inc
sbb
lods
test
jbe
jo
lahf
sbb
pushf
mov
movsb
in
and
push
xor
inc
inc
pop
les
fildll
add
lock
cmpsb
push
cmp
sti
xor
cmp
add
xor
xchg
xor
fxch
adc
imul
sbb
cmp
inc
dec
push
enter
push
mov
ja
test
out
es
push
push
je
sub
loop
cwtl
pushf
and
imulb
fs
mov
test
int
or
aam
mov
insb
shl
and
jbe
stc
sti
pop
int3
push
jae
mov
sbb
sub
and
lcall
jb
add
and
out
mov
xchg
add
pop
mov
adc
aad
fcompl
pushf
sbb
ja
jns
sbb
pusha
pushl
jno
popa
mov
out
aam
and
jmp
ret
xchg
cmp
ds
add
or
ss
xor
test
jnp
pop
pop
int3
out
int3
inc
in
push
aas
testb
es
and
pop
mov
mov
jb
mov
test
movsl
jae
push
adc
repnz
push
jmp
jae
or
test
lahf
mov
push
gs
jmp
imul
adc
mov
mov
cmp
adc
movsl
scas
leave
push
mov
stc
pop
and
xchg
mov
jbe
or
inc
cmp
push
or
fldl
lar
iret
lret
aas
push
push
in
cltd
fwait
int3
dec
pusha
fmuls
loope
mov
sub
mov
cs
inc
and
outsb
dec
xor
push
adc
jo
sarb
add
adc
fwait
repnz
sbbl
mov
adc
mov
icebp
fsubrl
stos
test
inc
cmp
andb
negl
test
inc
js
push
test
je
pop
push
decb
and
mov
decl
sub
mov
mov
fsts
cmp
in
adc
mov
push
subl
mov
leave
or
mov
stos
inc
fbstp
pusha
inc
pop
loop
fwait
ret
ja
mov
xor
stos
mov
das
jae
push
mov
fdivrp
clc
and
jo
or
sub
push
pop
mov
stos
lret
addr16
dec
imul
scas
stos
mov
aaa
lret
ror
hlt
mov
sbb
xor
xchg
xchg
stos
add
push
mov
addr16
inc
jecxz
mov
push
mov
or
sbb
mov
xor
add
mov
and
inc
dec
inc
stos
aad
pop
fs
lret
mov
cwtl
ds
icebp
mov
loope,pt
in
xor
xchg
mov
insl
mov
insl
and
and
loope
insl
mov
shr
fidivrl
pusha
stos
movsb
imul
push
mov
in
gs
in
sbb
add
stos
jl
xor
pop
lcall
xor
cwtl
sbb
ja
pop
adc
mov
jg
shrb
jge
mov
lcall
add
sub
xor
jecxz
shrl
stos
fdivr
or
adc
adc
inc
inc
push
mov
xchg
inc
shrb
xor
jle
mov
dec
imul
xor
incb
les
cmp
loop
sub
jno
lret
negl
sti
fs
inc
cmpb
stos
xchg
out
inc
add
ret
push
std
jne
adc
xchg
mov
movsl
mov
ret
scas
pop
mov
lods
movsb
cld
push
popa
push
push
xor
or
mov
mov
or
inc
jns
or
mov
test
loopne
mov
clc
aaa
add
sbb
xor
in
sub
adc
mov
lahf
leave
or
lods
cmp
rcl
jg
adc
pop
das
mov
cld
mov
cld
dec
inc
sbb
out
jbe
inc
dec
sub
cli
cmp
sub
pop
jo
addr16
mov
dec
jge
in
clc
aas
sub
jecxz
lcall
adc
and
cli
fldl
push
adc
js
or
mov
fmul
cmp
xor
and
sub
leave
mull
pop
ds
mov
pop
ljmp
sbb
lret
push
ficomps
out
mov
mov
adc
lcall
jg
and
shl
lock
adc
adc
loopne
mov
pop
leave
jecxz
jbe
push
cltd
out
rorl
xchg
out
loop
xchg
push
jg
add
mov
mov
sbb
js
outsl
push
push
jnp
dec
dec
jne
das
ss
lea
add
pop
xor
js
pop
fidivl
mov
loop
out
sbb
or
shll
add
dec
aam
repz
andl
adc
nop
out
mov
add
push
xchg
cmp
cmp
mov
mov
fdivrl
dec
add
lods
call
inc
xchg
dec
xchg
mov
sub
scas
cmp
lock
xchg
jne
dec
cs
pop
test
xchg
clc
pop
hlt
or
mov
and
jne
pop
imul
and
inc
and
jle
push
jb
adc
jns
daa
dec
fs
sbb
inc
jge
dec
sbb
mov
cmp
add
mov
iret
xchg
push
sbb
dec
inc
mov
in
lods
sti
and
insb
loopne
scas
push
negb
dec
push
jno
jp
xor
dec
add
xchg
outsl
and
push
and
pop
sub
jb
pusha
mov
lret
add
sub
mov
xor
add
aas
repnz
cli
adc
in
pop
sbb
test
push
in
mov
sub
rolb
in
cltd
nopl
or
cmp
fdivs
mov
cmc
lock
sub
jl
or
push
shlb
dec
andl
or
insb
fmull
mov
pop
mov
mov
sub
popf
pusha
negb
mov
adc
dec
dec
pop
insl
xor
stos
aam
pop
in
fildl
in
mov
jg
test
mov
push
clc
test
and
pop
rcll
sahf
push
mov
shr
cmpsl
adcb
cmp
aas
adc
out
rcll
and
push
shlb
fmuls
lods
pusha
sub
pop
mov
pop
mov
xchg
mov
cmp
xchg
call
or
fstps
jg
add
jnp
clc
ljmp
int
ds
pop
icebp
cmpsl
gs
mov
ret
add
and
pop
out
push
and
add
adc
cltd
xor
sub
pop
arpl
adc
int3
push
add
jns
sbb
arpl
sahf
xor
mov
scas
jecxz
mov
insl
test
inc
sbb
popf
mov
mov
rolb
ret
jle
test
pop
sub
xor
cmp
in
mov
dec
cmp
or
mov
leave
add
adc
adc
push
scas
inc
cmp
inc
pop
stc
xchg
std
mov
pop
test
add
push
fs
insl
fmull
lahf
push
dec
stc
push
sub
aam
sarb
inc
sarb
ljmp
mov
lods
shl
shrb
or
pop
mov
test
jno
leave
push
cmp
mov
rcll
fisttpl
add
pop
mov
bound
pop
int
fwait
or
pushf
dec
or
rcrb
lods
subl
dec
cs
popa
jbe
fs
mov
mov
xlat
push
lea
cmpsb
adc
lret
sub
dec
ret
and
pusha
jl
nop
xorl
js
jno
jno
inc
sub
test
sbb
add
sub
roll
add
mov
clc
scas
enter
jno
push
xchg
ret
ja
inc
add
add
int3
outsb
test
cli
test
sarl
test
fldcw
xor
popl
mov
add
je
aaa
dec
xorb
adc
outsb
shll
dec
jle
fcoms
mov
xor
ret
xchg
jae
sub
dec
pushf
es
dec
xor
add
adc
stos
aaa
or
sub
outsl
dec
ja
movsb
push
test
arpl
loop
aam
out
and
pushf
and
sub
mov
andb
add
cmp
cmp
push
leave
adcb
fwait
cli
jne
fmul
jo
enter
mov
mov
pop
pop
jns
in
push
xchg
cmpsl
inc
das
movsb
pop
xchg
xchg
repnz
out
mov
mov
cmp
or
lea
xchg
int
inc
test
das
lods
inc
dec
lret
subb
popa
adcl
imull
sbb
xchg
jne
lcall
xchg
pop
dec
das
test
hlt
sbb
adc
jae
arpl
addr16
fidivl
das
push
mov
dec
fdivs
add
jle
push
dec
scas
outsl
rclb
sti
hlt
or
int3
cwtl
mov
inc
cmp
les
notl
lods
rcrl
popa
lods
orl
nop
outsb
aam
xchg
lea
mov
in
in
adc
das
cmp
pop
mov
jae
nop
and
jmp
nop
sbbb
add
outsl
fisubrl
xor
repz
stos
add
cli
insl
mov
sub
pop
insl
or
cs
lea
jle
ret
pop
lock
push
dec
inc
movsb
fidivrs
inc
and
sti
outsb
and
into
test
test
push
jne
jecxz
xor
sti
inc
movsb
or
inc
jp
mov
jp
pop
fimull
pop
sub
pop
cmpsl
and
xorb
mov
je
fisubrs
in
mov
test
xchg
in
mov
or
in
xlat
adc
iret
mov
push
xchg
adc
dec
xchg
xchg
mov
mov
jle
cmp
pop
add
hlt
dec
nop
stos
arpl
cs
ljmp
rol
into
fwait
pop
addl
mov
fildll
mov
xchg
lcall
sub
scas
inc
out
pop
inc
lods
mov
pop
mov
mov
dec
test
mov
repz
inc
cmc
mov
inc
aam
push
mov
test
mov
inc
int3
jno
in
pop
add
gs
mov
push
imul
div
or
popf
push
cmp
push
sbb
push
das
fistl
sahf
sub
and
fildl
sti
inc
push
cmp
stc
sub
in
push
sahf
cmp
enter
and
push
dec
push
lods
mov
lret
add
js
mov
adcl
pushf
and
jmp
mov
test
xor
fwait
loop
dec
test
fsubrs
es
mov
popl
ds
inc
inc
cltd
leave
hlt
or
fidivrl
cmp
ss
xchg
jae
jns
in
cltd
aam
mov
cmpsb
das
sub
sub
mov
sbb
push
cwtl
insl
nop
arpl
adc
push
test
icebp
mov
jl
adc
xor
jle
iret
push
out
aas
jl
in
cmpsl
rcl
hlt
mov
in
in
mov
int3
in
repz
xor
jg
mov
jmp
adc
xchg
cmp
cmp
fldl
sub
leave
sub
addr16
stos
data16
sub
pop
pop
xor
jns
push
nop
add
clc
pop
testl
scas
or
and
cld
mov
lods
pop
xor
mov
jo
pop
cmp
movsb
lds
jg
out
out
inc
add
mov
jg
lock
sahf
inc
push
ljmp
mov
int
nop
fsincos
and
clc
inc
mov
call
lret
insb
dec
sub
shlb
mov
push
xor
into
fs
dec
adc
in
loopne
sbb
push
pop
fwait
out
repnz
shll
add
out
in
jl
addr16
pushf
loopne
jno
mov
popf
pop
imul
insl
cltd
shr
pop
dec
fcmovnbe
mov
notl
jb
mov
inc
repnz
popf
push
dec
pop
push
mov
xchg
iret
push
jbe
test
pushf
mov
dec
ja
mov
pushl
mov
divl
jne
xor
pop
mov
call
in
aad
mov
xchg
sbb
lock
not
std
shlb
icebp
sbbl
cmc
int
sti
mov
lock
decb
xchg
dec
cmpsl
adc
lret
lods
push
popa
push
test
repz
sar
aaa
cmp
xor
xlat
cmp
or
mov
adc
jg
mov
xchg
mov
cwtl
mov
jp
test
das
mov
cmpb
xor
adc
sub
out
dec
push
mov
lods
or
and
mov
xchg
lods
mov
test
int
cmp
enter
mov
and
cmc
stc
inc
jge
fcompl
push
aas
jnp
jl
adc
push
stos
mov
pop
add
mov
data16
push
popa
pop
sub
js
or
sub
mov
loope
mov
rclb
sub
cli
cmp
xor
out
inc
dec
xor
aad
in
roll
in
sahf
add
xchg
mov
mov
cmp
xor
pop
mov
inc
ss
testl
jne
dec
in
jle
lods
outsl
in
int3
call
sub
fnstcw
lret
loop
cs
jns
mov
into
add
lds
mov
insb
mov
or
imul
orl
notb
add
and
lret
lcall
and
ljmp
movsb
and
add
jb
daa
fldl
enter
testl
shll
mov
jmp
pop
test
sti
push
push
lock
fwait
popa
or
aas
shrb
out
xchg
sub
scas
sbb
mov
push
jecxz
push
rcrb
lret
aam
push
cmp
out
bound
mov
outsb
push
movsb
inc
sbb
mov
out
dec
std
fisubl
daa
pusha
jmp
and
push
lock
xlat
cmp
aas
mov
cwtl
jg
jge
adc
orl
scas
into
jge
mov
adc
stos
test
cmp
sbb
pop
mov
fdiv
xchg
push
adc
inc
push
adc
xchg
pop
aas
pop
push
cli
cmp
xor
scas
xchg
and
lcall
stos
push
stc
mov
xchg
cld
repnz
fwait
mov
inc
sbb
or
insb
sbbb
add
sahf
fistpll
insl
mov
dec
fldcw
adc
arpl
sub
jmp
lcall
mov
gs
stc
adc
pushl
shrl
jnp
pop
insl
xchg
push
imul
mov
mov
and
push
mov
lds
adc
mov
push
mov
jo
cmpl
fdivp
nop
and
sub
add
pop
mov
fisubrs
dec
faddl
jnp
mov
arpl
rcr
xor
js
mov
push
adcb
cmpsb
call
clc
mov
xchg
mov
jb
xor
mov
in
jp
or
add
mov
push
out
lcall
stos
iret
cmp
inc
inc
mov
cwtl
fdivl
imul
incl
and
popl
xchg
cmp
gs
xchg
xor
loop
dec
call
je
and
jecxz
or
cmc
dec
add
imul
push
adc
cmp
std
aas
xor
dec
mov
push
sub
cmpsl
add
aas
addr16
xor
cmpsb
adc
adc
loop
scas
in
inc
mov
jb
pop
fwait
in
out
mov
loop
pop
outsl
inc
in
pop
dec
or
mov
scas
push
push
notb
imul
jne
add
mov
xchg
lahf
loope
jae
in
pop
add
es
push
mov
neg
loop
jbe
and
into
out
xchg
mov
call
out
arpl
push
daa
rorb
cs
pop
in
aaa
mov
lahf
cmp
fs
enter
jo
pusha
or
or
pop
fistl
lret
lcall
pop
sbb
mov
mov
inc
mov
sub
mov
inc
and
dec
inc
push
jp
push
in
aaa
dec
xlat
push
sbb
mov
or
test
push
add
fsubrl
pop
dec
into
ret
js
insb
in
xchg
pop
push
inc
push
mov
sub
mov
outsl
mov
pop
bound
sbb
fsubrs
mov
out
daa
bound
xchg
fistpl
arpl
movsl
push
mov
cmp
je
pop
sub
xchg
and
jge
pop
adc
or
inc
fstps
cmpb
inc
pextrw
test
outsb
clc
fcmovb
adcl
js
push
pop
fwait
xor
mov
add
icebp
sbb
shlb
or
cli
adc
fiaddl
push
aam
and
sbb
mov
mov
repz
xchg
jno
inc
jo
mov
in
push
test
lods
test
or
sub
popl
mov
sahf
fmull
jns
push
sbb
dec
mov
sub
xor
pop
scas
adc
push
shll
xchg
jns
inc
aas
outsb
ljmp
xchg
in
aad
xlat
bound
adc
lock
push
xchg
subl
mov
mov
mov
movsb
sbb
jg
or
cld
lea
add
adc
xor
clc
pop
mov
lahf
iret
icebp
jbe
inc
push
call
sbb
sahf
adc
fdivrl
shrb
dec
xchg
and
pop
cs
fdivl
and
jb
cli
das
mov
fstl
pushf
fmulp
jmp
mov
pop
jge
ffreep
and
out
das
cmp
loop
rorl
ljmp
xlat
push
out
pop
xchg
ret
lret
inc
adc
lds
lret
or
jo
pop
xchg
lahf
cli
das
repnz
sbb
xor
cmpsl
mov
mov
mov
jne
shlb
imul
roll
jne
sbb
xor
fbstp
mov
cmp
cmpsl
add
aam
sarl
adc
shrl
sarl
jne
daa
adc
mov
adc
call
adcl
pop
mov
std
adc
aad
fwait
sahf
xchg
cmp
out
in
xchg
xorl
xor
lret
add
pushf
and
mov
je
sub
enter
repnz
mov
push
iret
dec
psadbw
scas
xchg
outsl
test
xorl
sub
pop
mov
sbb
mov
xchg
pop
pop
insb
and
jae
sub
add
jge
jns
mov
cmp
in
sbb
cmp
add
fsubr
mov
repz
and
insl
lret
sbb
call
add
lds
dec
mov
jg
arpl
and
xlat
xchg
cmp
lods
cmc
fwait
cmp
pushf
popf
sbb
mov
icebp
push
add
in
jmp
int
and
in
or
jns
add
cmp
mov
sub
xor
jbe
sbb
in
mov
mov
pop
es
xchg
push
adc
inc
loope
mov
inc
push
sbb
xchg
jae
repnz
arpl
sub
sub
push
gs
pop
in
rolb
mov
adc
and
jnp
inc
daa
nop
insb
and
jne
push
stos
push
out
mov
sbb
addr16
push
test
popf
ror
mov
inc
das
adc
lret
mov
repz
rol
pop
jg,pt
and
xor
imul
jnp
mov
shlb
bound
push
aam
fimuls
mov
mov
ret
pop
and
mov
cmp
or
mov
push
icebp
mov
xor
or
pusha
fsubrs
je
mov
sarb
mov
xchg
cld
mov
out
sbb
xor
push
inc
push
xchg
dec
sbb
and
cmp
cmp
cmc
jb
jecxz
les
shl
push
imul
in
dec
in
xorb
nop
cli
pushf
sub
xchg
mov
xchg
imul
add
aaa
mov
mov
pusha
leave
les
mov
inc
or
pop
sub
adc
aam
jge
imul
mov
jge
hlt
jecxz
sbb
call
pop
scas
ficoml
xor
inc
adc
imul
lret
dec
adc
ficomps
aas
or
mov
sub
push
mov
mov
dec
out
xor
sub
js
sbbb
clc
jecxz
int3
push
in
xchg
imul
mov
aam
cmpsb
sbb
sbb
lds
in
sbb
pop
loope
xchg
lods
and
call
cs
ds
incb
xchg
jnp
sbb
or
pop
stos
xchg
dec
stos
clc
mov
cmp
cmp
ja
mov
and
cs
or
mov
add
cs
mov
les
ja
mov
jnp
in
mov
sahf
inc
lea
sub
ret
sbb
add
mov
fwait
cmpsb
ja
pop
in
fcmovbe
arpl
dec
fld
xchg
nop
out
imul
les
and
mov
lret
xor
int3
sbb
sbb
fucomi
sbb
dec
pop
sbb
mov
enter
add
aam
outsl
xchg
sbb
popf
pop
mov
pushf
lret
add
lea
jnp
addr16
aad
push
scas
mov
ja
mov
add
repz
sub
dec
sti
lods
popa
mov
ret
adc
pop
inc
mov
repnz
sahf
rcr
dec
stos
shl
pop
ss
jge
lods
les
xchg
and
std
mov
mov
popf
xor
xchg
mov
mov
scas
leave
enter
fstl
sbb
mov
ret
lods
sub
stc
movsl
imul
jb
lcall
inc
adc
adc
out
ja
sti
xchg
pop
aaa
cmp
sahf
inc
pop
mov
mov
inc
ljmp
inc
repnz
popa
mov
aaa
out
cmp
int3
out
mov
or
gs
cwtl
int3
push
push
jl
jl
enter
sub
jmp
enter
add
cltd
or
pop
pop
push
lcall
add
inc
movsb
jg
aaa
xchg
jbe
jnp
pop
call
xor
push
jmp
jae
cld
lods
ljmp
jno
and
nop
mov
jmp
pop
mov
lcall
and
sbb
push
add
idivl
lea
sti
inc
test
sub
lahf
ja
out
repz
and
push
adc
insl
xchg
clc
data16
sarb
jb
jmp
sti
xchg
insb
lret
lcall
push
mov
nop
inc
or
stos
xchg
and
pop
fs
ss
mov
mov
das
dec
insb
out
lods
out
bound
xchg
in
fsts
notb
insb
jb
mov
cld
cmp
jp
popa
sub
rolb
jg
mov
push
push
daa
adc
dec
pop
inc
push
mov
les
pop
lahf
outsl
pop
xchg
sub
out
in
sbb
cmc
push
out
pusha
cmc
xor
add
pop
lods
fildll
es
xor
ss
scas
mov
mov
fistps
icebp
pushf
mov
push
leave
push
xchg
sbb
lret
cltd
scas
mov
add
jne
imul
imul
movsb
add
aas
jae
mov
inc
lods
lods
mov
xchg
ljmp
shll
pop
mov
stos
sbb
rcrl
add
lea
out
cmpsl
je
sub
test
rcrl
addr16
pop
out
dec
xchg
repz
and
xchg
sub
add
insb
into
xchg
sub
rolb
mov
das
fbstp
popa
cli
out
mov
mov
dec
cmp
bound
gs
inc
mov
stc
pop
mov
int
stc
cltd
and
fsubl
mov
ret
shlb
cmpsb
outsb
sub
fxch
inc
dec
out
adc
lea
inc
xchg
lcall
inc
fisubrs
incb
loopne
xchg
mov
pop
mov
mov
jp
cmp
pop
sarb
cmp
cmp
mov
push
ljmp
loop
lret
and
push
dec
or
mov
xlat
loope
popa
out
test
rorl
jne
mov
ret
and
rcr
mov
xchg
cmp
mov
push
shr
push
adc
popf
insl
orl
popa
ftst
into
movsl
enter
jmp
jo
pushf
dec
in
icebp
dec
push
insl
fwait
xor
rcr
dec
repz
jp
xchg
sub
test
push
or
sub
lret
xchg
into
dec
mov
sub
movsb
insb
push
sub
pop
sarl
xchg
pop
mov
mov
fmull
lret
sbb
imul
xor
mov
mov
imul
mov
lea
add
push
cli
mov
mov
inc
scas
mov
mov
jecxz
shll
pop
push
mov
popa
sbb
mov
rcrl
shrb
fistpll
push
pop
inc
pop
push
rcll
jo
loop
push
mov
inc
sub
cmp
xchg
jmp
inc
dec
out
xor
repz
subl
adcb
mov
pop
das
pop
dec
ret
imul
notl
fisttps
adc
cmp
add
mov
jl
xor
pop
test
inc
or
and
orb
adc
push
inc
sub
cwtl
adc
fmull
mov
push
out
sub
out
std
in
and
jbe
pop
add
push
ljmp
lcall
push
int
pop
mov
inc
add
imul
or
lahf
sub
hlt
pop
mov
test
add
test
mov
or
sbb
mov
xchg
adc
into
xchg
push
out
xchg
cmpsw
xchg
or
dec
xchg
inc
jns
cmpl
test
xor
dec
mov
add
stos
jecxz
adc
sarb
int
sub
fcomp
out
jmp
sysexit
dec
pop
xchg
ret
and
adc
add
loope,pt
push
cmp
mov
jmp
mov
test
cmp
jge
mov
mov
pop
sahf
lcall
les
mov
arpl
cmp
mov
test
icebp
loopne
fildll
jge
stos
stc
mov
jne
test
add
in
mov
or
jecxz
jb
or
in
lcall
push
dec
and
add
daa
adc
pop
pop
scas
mov
jnp
fistpll
fnstenv
in
insl
inc
in
xchg
pop
sti
stos
daa
push
out
jae
pop
js
mov
dec
inc
push
push
adc
fsubs
or
popa
mov
loopne
xchg
sbb
cltd
xlat
cmp
and
pop
fistpl
mov
ja
out
sbb
jge
mov
xchg
xor
into
outsl
movsl
lret
or
inc
push
add
xor
stc
inc
xchg
xlat
push
cmc
lods
dec
mov
movsl
sbb
push
mov
inc
mov
dec
imul
push
adc
stos
fisubs
test
cmp
test
hlt
adc
mov
test
lea
pushf
cmp
insl
xor
sbb
test
fwait
adc
sbb
mov
mov
fistl
inc
cwtl
add
push
imul
notl
sub
enter
enter
pop
or
dec
dec
mov
divb
shrb
jl
cwtl
adc
push
lret
test
pop
push
jbe
sbb
addr16
shl
popa
push
or
lret
xor
fs
outsl
adcl
or
adc
dec
dec
cwtl
addr16
imul
mov
sbb
jo
xor
jle
mov
dec
cs
push
mov
aam
mov
xchg
adc
xor
negb
shll
push
outsb
sbb
sub
jb
out
and
scas
push
sbb
jmp
sbb
cli
inc
push
bound
sbb
mov
cli
test
or
imul
xchg
mov
loope
jl
shll
leave
mov
sub
mov
sarl
inc
gs
fidivs
vlddqu
xchg
scas
or
push
dec
sahf
xchg
imul
lahf
scas
cmp
push
inc
dec
inc
sbb
mov
cmp
pop
cmp
in
xor
fldcw
jge
jge
or
std
out
xchg
or
xor
add
push
out
jo
leave
iret
test
aas
add
repnz
sub
in
mov
int
lds
mov
jb
mov
sahf
nop
xchg
xchg
cli
inc
movsb
adc
js
sbb
int
movsb
add
ja
rcrb
push
lods
add
movsl
iret
add
rclb
mov
je
mov
mov
dec
pusha
jne
dec
roll
ja
cmpsl
cmp
gs
inc
sti
or
mov
mov
mov
fs
std
sub
ss
push
insb
jnp
sbb
xor
xchg
loopne
mov
repnz
xchg
sub
mov
test
fwait
pop
insl
mov
insb
xchg
fidivrs
add
dec
push
mov
les
icebp
subl
xorl
cmp
pop
mov
pop
das
pop
mul
push
push
mov
mov
mov
cs
inc
dec
mov
xchg
std
xor
popf
movsl
fmulp
sbb
int
cmp
sahf
ret
rolb
mov
cmpsb
in
mov
inc
and
push
stc
add
fucomi
clc
sbb
mov
add
cmp
pop
sub
test
xchg
lret
sbb
mov
jnp
jo
aam
xor
movsl
jge
aas
leave
enter
dec
dec
or
or
fcomp
mov
inc
push
and
push
lret
inc
cld
ret
mov
sbb
jno
sbb
inc
out
rol
loopne
jg
or
imul
jecxz
addl
sbb
adcb
push
push
cmpsb
xlat
jmp
in
push
dec
xchg
test
or
cmpsl
mov
push
cld
jb
push
sbb
cmpsl
xchg
mov
or
mov
repnz
xor
jns
mov
int
out
mov
and
imul
sub
daa
aam
in
adc
into
xor
adc
pushf
ret
cmp
iret
mov
stc
loopne
mov
pop
push
mov
mov
enter
mov
or
cmp
pop
ja
jl
in
pop
adc
ljmp
jbe
lcall
movsb
bound
and
mov
add
aaa
or
ljmp
ret
cmpsl
inc
dec
mov
enter
xchg
rorb
cmp
fistpll
out
aam
ud2
push
gs
sub
leave
adc
sub
cmpb
into
adc
jb
xchg
pop
xor
fcoms
fiaddl
pop
mov
dec
dec
jge
movsb
adc
fidivs
push
nop
hlt
jle
push
jmp
inc
dec
sub
and
das
scas
fwait
inc
add
lahf
push
sub
xchg
mov
push
addr16
leave
shl
add
leave
xchg
out
int
leave
int3
loope
mov
in
cmp
jmp
mov
pop
repnz
into
sub
mov
and
movsb
aas
outsl
pusha
dec
xor
mov
mov
shll
icebp
jno
add
jecxz
stos
pop
pop
mov
sahf
sbb
daa
xchg
fsubs
push
push
mov
and
scas
inc
jecxz
lret
push
sbb
inc
jg
rcrl
xchg
jmp
fwait
shrl
jns
jae
add
add
adcl
adc
pushf
adc
mov
adc
add
jge
adc
dec
push
push
sub
mov
or
fdivp
shr
test
test
add
fs
pusha
aaa
lret
pop
xor
rolb
out
inc
loope
imul
andb
mov
sbb
mull
jno
aas
leave
pop
in
xor
push
mov
inc
dec
outsl
mov
lock
pop
sub
sub
xlat
adc
roll
pop
sbb
adc
push
dec
test
push
lods
sub
dec
and
je
cltd
addr16
repnz
pop
pop
mov
mov
lret
mov
mov
into
xor
dec
dec
cmp
dec
inc
xchg
imul
cmp
dec
xor
out
mov
mov
in
loope
in
mov
out
mov
cmp
dec
ja
imul
lcall
xlat
adc
and
mov
xchg
push
stos
es
xchg
sbb
lods
ror
cmp
mov
dec
and
dec
xchg
add
xor
push
mov
bound
in
xchg
dec
sub
sub
jmp
sbb
movl
sahf
pop
nop
mov
aas
sbb
sbb
sub
or
mov
into
push
sub
pop
push
in
push
roll
or
test
enter
cmp
sub
push
jns
ficoms
stos
je
sub
dec
xor
sti
ja
cs
add
and
pop
adc
out
cmpsl
shrb
adc
and
pusha
popa
mov
mov
jae
mov
pop
add
pop
data16
std
mov
jg
fbstp
movsl
jmp
enter
jp
mov
decb
jp
mov
neg
fdivl
sbb
data16
adc
ret
cs
addr16
push
orl
dec
out
xlat
pop
and
test
out
cmp
fistps
pop
sbb
in
in
xorb
imull
test
or
jmp
std
push
inc
clc
rcl
pop
dec
insl
popa
rcr
jb
mov
pop
les
aam
add
mov
inc
inc
rcrb
mov
neg
int
inc
insb
inc
stos
mov
xchg
iret
push
into
and
aas
dec
pop
jle
jbe
or
cwtl
xor
mov
jb
jne
in
sub
negb
adc
inc
mov
leave
mov
and
imul
jne
call
jns
mov
leave
mov
push
adc
je
bnd
jp
cld
out
decb
push
and
mov
rcll
jb
mov
je
loop
iret
lret
pop
ljmp
cmp
leave
push
pusha
icebp
cli
cmpsl
and
dec
leave
xchg
sbb
movsl
scas
test
incl
sbb
cmp
cli
addb
mov
fidivrl
adc
push
rcrl
movsb
xchg
xchg
xchg
xchg
js
pop
inc
and
loopne
js
mov
ds
add
shrb
or
mov
into
mov
dec
cmpl
and
andb
std
lea
iret
lret
lahf
pop
sub
ret
add
jmp
ja
outsb
hlt
sub
push
xchg
les
adc
outsl
outsl
cltd
fcompl
pop
sub
mov
negl
pop
xor
les
cmp
fists
or
jbe
cmpsl
adc
sets
js
test
ret
dec
push
xchg
ret
je
mov
test
movsl
pop
shrl
pop
jle
add
int3
push
ljmp
jne
in
fwait
in
or
nopl
lock
sub
call
cmp
lods
dec
ret
mov
sbb
mov
inc
pop
leave
movsb
shr
sbb
outsb
je
mov
mov
mov
adc
lret
xlat
std
arpl
iret
ret
and
xchg
lret
jne
adc
push
sbb
icebp
mov
repz
in
inc
inc
div
xchg
icebp
jp
stc
add
mov
mov
mov
or
loope
xor
pop
cmp
sbb
xchg
sbb
sti
push
add
jno
pop
repnz
sahf
dec
cs
cs
cmp
cltd
es
aaa
pop
scas
test
jmp
inc
ficoms
adc
mov
ret
push
sbb
cmp
cli
and
in
xchg
adc
jle
jnp
lret
jle
cmp
mov
cmp
frstor
aas
add
or
jne
jb
adc
inc
sbb
push
outsl
fisubrl
dec
pop
mov
mov
mov
push
iret
es
adc
mov
in
add
mov
jb
loop
fidivl
pop
pusha
data16
inc
jecxz
jns
bound
adc
jp
xchg
mov
mov
and
int3
call
pop
pop
push
and
imul
popf
into
mov
cmpl
mov
adc
xchg
loope
inc
mov
sub
mov
cwtl
lock
shlb
sti
mov
fstpl
lods
push
stos
jbe
adc
aad
mov
addr16
pop
dec
xchg
or
xor
out
jno
mov
bound
clc
jnp
loope
stos
insb
dec
and
add
xchg
into
sub
mov
xorl
cltd
ljmp
imul
mov
mov
jb
shll
jecxz
jge
jne
int
addl
call
mov
sbb
shlb
mov
lahf
adc
fists
data16
imul
sub
test
add
mov
scas
inc
push
aad
dec
test
mov
cmp
fcmove
call
divb
cwtl
bound
push
sahf
stos
insl
sub
mov
faddl
test
add
xlat
stos
inc
pop
jp
pop
or
fcoml
fcomip
jb
lret
pop
and
sahf
fxch
testb
mov
outsl
mov
sbb
inc
add
insl
inc
fbstp
xchg
inc
pop
dec
insl
jno
inc
dec
xor
push
cs
rcl
sub
push
pop
add
and
push
or
mov
sbb
js,pn
add
inc
add
in
fcomps
xchg
sub
gs
mov
xchg
sbb
or
inc
lahf
dec
and
jns
hlt
fiadds
jns
sbb
dec
loop
mov
sbb
in
scas
outsl
dec
movsb
cld
adc
xchg
divl
out
adc
int
cmp
adc
jmp
mov
movsl
mov
sbb
adc
xor
push
test
cwtl
push
shrl
and
inc
cltd
lret
inc
pop
bound
in
mov
cmc
addr16
pushf
jno
jbe
jecxz
out
mov
lret
pop
xor
mov
cltd
repnz
add
pop
push
pop
leave
icebp
jl
add
or
mov
add
mov
repz
out
ficoms
push
pop
lock
adc
jnp
call
dec
mov
dec
dec
xchg
leave
mov
call
mov
xchg
inc
and
push
inc
inc
pop
aaa
adcl
mov
mov
cs
add
lahf
in
lods
push
mov
cmp
sub
cmpsl
dec
lret
cmpsl
dec
pop
setb
sbb
fbld
fucomip
dec
loopne
push
cmpsb
outsl
push
or
xchg
and
loopne
jmp
cmp
cmpsl
pop
xor
ret
enter
cld
xchg
mov
into
jg
les
data16
aas
add
adc
mov
ds
xlat
inc
js
jecxz
dec
push
scas
jmp
mov
xchg
es
add
mov
add
inc
dec
mov
arpl
sbb
push
sbb
cmp
fcomi
lods
loopne
sub
movntps
jo
out
ret
add
mov
pusha
into
xor
fidivrs
xor
jle
jb
fcmovbe
cmp
loop
mov
leave
sub
sbb
adc
xor
mov
int
xchg
push
rolb
xchg
pop
dec
ds
cmp
add
fwait
push
ja
pop
xchg
arpl
test
out
stos
add
and
cmpsl
jecxz
push
out
mov
test
add
rcr
cmpsl
fldl
push
rcrl
jle
std
test
push
sub
scas
mov
pop
cmp
movsb
and
ficoms
outsb
fwait
in
push
ss
jge
sbb
int3
insl
mov
mov
neg
sub
std
xchg
pop
aaa
inc
lds
ds
push
test
ficomps
xor
loop
mov
sahf
out
fbstp
popf
push
pop
das
or
mov
add
jnp
pusha
mov
jnp
add
pop
pop
xchg
mov
mov
mov
iret
push
sub
idiv
iret
rorl
je
push
push
add
or
lock
testb
and
jg
in
frstor
addr16
adc
xchg
mov
fisubl
fwait
dec
add
outsb
push
or
fiaddl
push
lret
inc
ret
stos
inc
push
mov
movsb
ret
cmp
mul
and
mov
rcrl
popf
dec
pop
stc
push
idivl
into
lds
ffreep
call
nop
ret
mov
imul
aas
pmaxub
fsubs
lods
sbb
cmp
movsl
movsw
fdivrl
fcomps
xor
sub
xor
shrb
test
or
idivb
xchg
int
jge
mov
inc
inc
lods
loopne
cmp
nop
aaa
adc
outsb
cltd
test
push
and
adc
adc
loope
sub
shll
fwait
push
pop
nop
mov
pushl
inc
xor
xchg
clc
push
ss
stc
jbe
cs
notb
push
lret
cmpsl
xchg
and
ljmp
in
mov
das
mov
loope
adc
xor
lret
jo
add
push
les
scas
test
pop
inc
div
fnsave
inc
sbb
sub
das
adc
testl
adc
jne
sub
mov
adc
insb
adc
sub
jecxz
or
out
hlt
out
add
and
mov
push
xor
sub
stos
mov
cmp
xor
dec
es
arpl
cmp
sbbl
push
pop
mov
sbb
cli
xchg
negb
add
insl
or
ljmp
mov
jns
xchg
sub
into
pop
sub
bound
mov
cs
push
mov
mov
jp
movsb
add
cmpb
adc
les
add
dec
call
rorb
lods
arpl
cmp
mov
dec
mov
out
and
jecxz
push
fwait
xor
push
stos
repz
pop
insb
xor
sahf
dec
in
dec
gs
lret
call
push
aad
cwtl
int
xchg
cmp
xchg
repnz
imul
mov
shll
push
inc
xchg
enter
pushf
into
rorb
mov
loop
in
in
mov
lret
or
adc
or
inc
pop
push
insb
cmpsl
iret
addl
or
mov
push
jbe
insl
dec
xor
xchg
stos
cmpsl
add
push
pop
in
lret
pop
mov
ret
rolb
sub
mov
ljmp
cld
mov
cli
stos
jb
push
mov
out
or
nop
and
jbe
and
jnp
ret
jle
lret
xor
xchg
aad
scas
xchg
leave
out
mov
cwtl
push
test
push
lret
mov
pusha
push
enter
xchg
lret
xorps
jl
arpl
or
ret
cltd
cmp
inc
sbb
lock
pcmpeqw
lods
insb
xchg
jno
repz
insl
xlat
cmp
jbe
outsl
cmp
into
test
test
xchg
xchg
sbbl
mov
and
lods
sub
pushf
cmpsb
sbb
pop
xor
pop
push
imul
adc
loopne
ret
das
add
incb
push
adc
in
adc
push
xor
insl
repnz
fistpl
repnz
push
push
pop
out
lock
pushf
ss
std
mov
sbb
je
lods
pop
lret
push
dec
clc
xchg
push
add
es
cmp
incb
cmp
fcmovbe
es
mov
test
fimuls
hlt
pop
cmp
movsb
jl
pushf
xchg
xchg
test
lcall
hlt
movsl
iret
out
outsb
andb
int3
xor
fcoml
jle
add
or
je
lock
inc
or
cld
xchg
sub
fldenv
shll
sub
sbb
sbb
sbb
fisttpl
stos
jge
dec
andl
xor
push
lea
dec
sti
sahf
popa
cmpb
sarl
cmp
adc
gs
jns
lods
mov
or
repnz
lods
ja
imul
cmpsb
dec
xchg
dec
inc
jne
jbe
movsl
inc
and
xchg
inc
lods
paddsw
aam
ss
cmp
shll
inc
int
mov
sub
cmc
imul
adc
dec
fmulp
and
jns
adc
sub
or
in
and
jno
addb
or
imul
sub
das
imul
or
out
pop
adc
xor
jecxz
cmc
dec
pop
lea
lcall
fistps
loop
pop
andb
enter
sahf
shll
jl
jp
pusha
pop
pop
inc
add
stos
repnz
les
imul
jmp
add
mov
or
sti
int3
adc
or
add
idivb
in
adc
dec
lahf
shr
add
xchg
sbb
testb
adc
pop
push
cli
cmp
xor
xchg
jno
loope
jl
mov
in
lea
xchg
fildl
pop
mov
add
ds
repz
mov
add
pop
dec
xor
ljmp
add
fwait
push
mov
cmp
icebp
add
mull
mov
push
fwait
test
pop
sbb
fiadds
mov
sub
aad
test
pop
adc
add
dec
adc
inc
dec
out
dec
and
jns
addr16
sbb
push
scas
mull
repz
call
or
aaa
out
fdivr
add
pop
cmp
mov
loopne
or
push
insl
pop
jp
xchg
fisttps
sbb
push
mov
adc
xor
fisubrs
sbb
xchg
in
pushf
in
lock
or
imul
scas
fdivs
sub
fdivr
fiaddl
outsl
fs
ds
cmp
cld
stos
out
xchg
repz
push
xchg
dec
cmc
pusha
cmpb
out
inc
fs
aaa
roll
inc
test
pop
dec
es
loope
jbe
dec
add
jg
jge
dec
call
jmp
movsb
aad
lds
ljmp
fcompl
mov
xchg
mov
xor
scas
cmc
mov
lret
dec
cwtl
add
dec
stc
cs
pusha
loopne
sbb
loop
mov
into
xchg
xchg
adc
lret
lods
and
mov
es
xor
shll
inc
outsb
dec
jns
shrb
sbb
or
pusha
out
mov
mov
xchg
pop
lret
mov
iret
insl
lahf
test
jmp
ja
loope
mov
cmp
bound
hlt
xchg
andb
scas
jl
jae
punpckhdq
lds
sarb
xchg
addr16
data16
es
fucompp
les
cmp
pop
cmpsb
shll
add
push
jg
les
ljmp
and
leave
mov
cld
cmp
mov
push
mov
nop
or
or
jns
xchg
inc
and
mov
jns
mov
sub
sbbb
cmp
ss
xchg
push
jle
xchg
insb
jne
divl
in
ja
ds
mov
sub
mov
inc
jmp
std
or
jno
sub
loope
in
dec
pop
cmp
sub
mov
pop
std
lods
out
jmp
pop
adc
jb
lea
sub
loopne
inc
out
sub
repnz
cli
xor
xchg
repz
mov
test
and
js
mov
inc
cmpsl
or
mov
sti
or
in
mov
in
out
pop
jne
sti
dec
jo
or
gs
or
mov
and
in
or
outsb
out
cs
test
test
fxch
lods
imul
shrl
stc
loope
int
mov
in
pop
mov
mov
data16
add
xchg
xchg
ss
mov
call
daa
push
xchg
pop
or
dec
inc
mov
fsubp
adc
outsl
je
insb
mov
mov
jle
cwtl
lods
push
xchg
mov
jo
jmp
test
cmovb
mov
es
push
sbb
jo
lret
add
push
mov
and
call
stos
or
jae
add
addr16
pushl
add
sub
inc
cld
xchg
js
icebp
jle
add
push
movsb
xor
leave
or
jecxz
cmp
pop
popl
dec
xchg
xchg
orb
out
adc
dec
adcb
cmp
xchg
mov
sub
dec
testb
mov
jecxz
mov
push
jne
loopne
lret
xor
mov
fldt
jl
arpl
pop
jle
nop
mov
jmp
xor
outsl
dec
outsb
cmp
in
aaa
jno
sarb
sub
mov
lods
out
dec
mov
cltd
push
pop
aas
and
mov
sbb
lock
pop
adc
xchg
push
push
into
negl
lea
nop
aad
in
adc
xor
xor
arpl
mov
add
jo
pop
mov
sbb
sarb
sub
dec
mov
mov
mov
push
js
adc
jne
das
or
adc
jns
int
int
mov
add
add
ret
xor
inc
mov
mov
add
jecxz
fdivr
mov
pusha
mov
mov
jno
mov
mov
aam
out
adc
sbb
mov
subl
jbe
lret
orl
clc
push
imul
stos
or
in
dec
cmp
inc
out
shll
sbb
push
jns
push
fistpll
jnp
arpl
aad
xor
and
bnd
xorb
jp
inc
push
xor
add
dec
ja
push
aaa
or
incb
fidivrl
mov
mov
lea
sub
aaa
dec
and
sbb
fidivs
add
sbb
xchg
call
and
test
dec
dec
or
pop
lahf
sub
jg
inc
or
sahf
and
cli
popf
lea
daa
mov
fiaddl
lds
es
pushf
pop
pop
mov
inc
cmpsl
fdivl
xchg
jo
adc
mov
out
and
aam
repz
fisubrs
fs
mov
sbb
in
xchg
sub
dec
movsl
or
es
das
xchg
or
in
cmp
movsb
clc
addl
mov
adc
dec
aad
fwait
add
fs
loope
dec
imul
inc
cmp
in
fsub
mov
fdivs
mov
aam
xor
loop
mov
xor
lea
aas
sbb
addr16
xchg
lcall
adc
push
jmp
jp
inc
inc
pop
dec
mov
jns
jae
jns
iret
push
movsl
adc
and
xor
and
movsl
jge
push
add
mov
inc
ljmp
add
push
mov
dec
push
imulb
inc
fdivrp
es
xchg
xor
pop
out
outsb
mov
je
mov
ret
sahf
scas
xchg
test
adc
sbb
lret
stos
mov
dec
jl
inc
cmpsl
lock
xchg
xor
fstpl
sub
jmp
mov
or
icebp
xacquire
push
mov
xor
jp
sub
outsl
mov
pop
xchg
jbe
mov
ret
pop
adc
inc
pop
or
fistl
pop
out
icebp
in
dec
test
pop
and
in
out
mov
lea
int
dec
add
jns
mov
popa
data16
fdivrl
mov
sub
sub
fidivs
xor
jmp
cld
fcompl
in
cmp
out
mov
inc
xor
subl
test
xchg
jns
js
xor
mov
push
out
jnp
dec
xchg
and
ret
lods
sti
lock
aas
mov
inc
iret
dec
dec
mov
icebp
adcl
pop
jae
aam
repnz
rcrl
cwtl
int3
dec
cmp
jp
mov
mov
enter
int
sub
insl
ja
mull
inc
and
mov
xor
push
hlt
jnp
adc
loop
scas
in
out
mov
sahf
mov
fsubrs
in
mov
add
sbbl
add
loop
mov
aam
cmc
xor
or
jmp
cmp
rcll
test
adc
dec
xor
dec
sbb
fisubrl
xchg
das
push
cmp
mov
xchg
pop
sti
sbb
movsb
shr
outsl
mov
daa
shll
push
lods
mov
int3
or
insb
ds
jge
mov
jle
adc
push
sahf
adc
mov
ja
jae,pt
jge
out
cmp
inc
sahf
lods
shrb
dec
xchg
fsubrl
jl
repz
shll
clc
movsb
pop
repnz
mov
mov
mov
jecxz
sbb
ret
lods
inc
gs
inc
adc
mov
out
mov
jbe
push
inc
jbe
arpl
jmp
jne
and
pushf
push
ror
mov
mov
mov
cmp
test
jmp
in
inc
and
incl
fmul
bound
call
sub
mov
cmp
psllw
cli
push
leave
cmp
mov
aas
loop
cmp
flds
mov
cmc
sahf
fmul
imul
mov
outsb
je
je
jl
lcall
and
fildll
pop
dec
mov
jmp
stc
mov
aas
sub
mov
out
dec
hlt
mov
ljmp
bound
stc
test
xlat
jb
cmp
ret
or
mov
xchg
sbb
mov
mov
rclb
cmpsl
mov
and
jns
ret
ljmp
fnstenv
sub
lea
in
lahf
subl
shrb
cltd
push
cmova
in
in
in
push
rcrb
jge
xchg
fildll
add
fwait
adc
mov
or
push
mov
fcmovnu
mov
cmpsl
pop
fcmovnbe
xor
adc
fisubrl
js
adc
sub
in
lcall
jne
bound
das
pmaxsw
lock
xor
adc
outsb
pop
jl
mov
adc
xchg
movsl
dec
pop
pop
xchg
mov
xchg
push
add
xor
mov
or
loopne
push
or
ss
dec
mov
inc
jl
push
mov
lret
loop
imul
xlat
push
pop
hlt
push
dec
rcrb
mov
test
jne
xor
imul
outsl
in
testl
push
imul
dec
pop
bnd
sbb
pop
int
mov
stos
repz
outsb
imul
xor
mov
scas
mov
mov
push
pop
in
adc
adc
subb
sbb
in
push
lods
pop
jp
sbb
mov
fdivrs
imulb
int
push
xor
xor
mov
push
cwtl
lahf
push
xor
cmp
ljmp
mov
rolb
insb
std
ret
cs
popa
outsb
mov
sarl
cmp
or
xor
insb
push
or
and
dec
add
stos
fstpl
and
out
int3
mov
js
sub
push
inc
stc
jl
fbstp
bound
cmp
pushf
xlat
mov
push
jo
stos
test
sarb
sub
subl
add
fwait
insb
mov
test
shrl
mov
jmp
pop
hlt
test
stos
leave
cmp
sbb
aas
loop
jmp
arpl
shrb
cmp
pop
cwtl
xor
xchg
push
cs
sbb
outsl
xchg
cmp
cmpb
out
lret
or
push
filds
mov
push
and
ss
out
packsswb
sbb
mov
shll
mov
sub
xor
xchg
out
push
or
fisttpl
inc
jno
mov
notl
add
mov
push
inc
mov
inc
jge
jb
out
and
push
mov
pop
lock
outsl
mov
addb
gs
xor
iret
adc
mov
subl
loope
mov
rorb
mov
or
ja
scas
mov
mov
jecxz
jmp
xor
pop
mov
or
pop
mov
mov
adc
xchg
inc
cmp
mov
lret
xchg
rolb
or
les
dec
movsl
mov
sbb
dec
cmp
mov
lods
sub
out
cs
xor
lcall
cmp
xor
or
daa
sbbl
sahf
add
hlt
mov
fsubl
idivb
push
adc
sahf
push
dec
xor
inc
dec
filds
sbb
lret
in
inc
or
push
add
incb
jno
repz
inc
sbb
sub
mov
test
inc
jg
dec
xor
mov
xchg
cltd
out
out
dec
sub
sub
dec
divl
push
jns
addl
repz
insl
mov
rclb
fisubrs
aam
fwait
and
mov
loopne
loopne
leave
dec
push
fs
cmpsb
test
jbe
mov
lock
sbb
jecxz
rcl
xlat
not
aam
xchg
movb
arpl
fistpll
popf
out
add
sbb
cmp
imul
dec
call
sti
pushf
jno
mov
xorl
pusha
js
mov
jle
icebp
cmp
test
pmuludq
enter
std
pop
pop
sbb
dec
inc
xorl
mov
mov
mov
mov
ret
repz
jo
sub
jbe
dec
icebp
mov
repz
cmp
lock
cmp
mov
nop
and
push
loopne
jae
mov
mov
adc
icebp
out
add
cmp
and
jns
lock
in
mov
movsl
and
jl
xlat
lret
idiv
xchg
xchg
int
xorb
adc
and
stc
inc
pusha
shl
es
test
cmp
sbb
inc
out
jecxz
mov
mov
test
dec
out
sbb
push
pop
sbb
xor
push
test
idivl
lret
aas
sti
lahf
popf
rcrl
aam
push
mov
test
into
bound
inc
jo
xorb
bound
inc
sub
jo
negb
mov
jp
inc
add
loop
inc
lahf
ret
cmpsb
clc
les
call
sbb
aas
mov
xor
xchg
stos
and
push
popf
inc
mov
popf
mov
add
cs
fnstsw
outsb
inc
cmpsb
fcomps
daa
mov
mov
repnz
cmp
adc
cmpsl
ret
clc
jmp
sub
insl
xchg
in
lea
mov
xchg
fisttpll
lret
test
imulb
pop
mov
or
daa
ljmp
aad
ja
mov
xor
aaa
je
das
sbb
loopne
je
iret
cwtl
dec
popf
lock
fdiv
cmp
add
fucomp
dec
sbb
fcomip
int
sbb
lds
sub
stc
sub
mov
aam
shr
add
ficompl
aas
mov
cmp
scas
pop
mov
push
aam
mov
cmpsl
decb
mov
adc
arpl
and
push
fidivrs
ret
cs
xlat
call
lea
loop
push
ret
adc
mov
js
inc
lahf
push
xor
adc
js
sub
fmull
hlt
movsb
faddp
sub
insb
loopne
test
and
int3
div
push
mov
outsl
fdiv
in
and
outsl
addl
js
jo
iret
and
lods
sub
aad
sbbb
add
add
and
rclb
lahf
or
addr16
lock
or
inc
movsl
sub
sahf
aam
add
shll
and
push
and
and
or
js
or
xchg
xor
std
push
int3
negl
dec
xor
lahf
pop
or
push
hlt
add
or
popf
push
mov
mov
adc
jae
adc
cmc
arpl
in
imul
pop
dec
idiv
dec
sbb
xor
cld
xchg
and
popf
inc
dec
aad
das
sbb
cmp
mov
dec
sti
ror
fisttps
hlt
xor
loopne
mov
and
mov
lods
es
add
xrelease
cmpsl
jmp
jp
flds
dec
fs
push
lea
xorl
scas
dec
test
loopne
fcompl
cmp
stos
or
lods
imul
out
push
aas
sub
packuswb
cmp
cmp
sbb
pusha
jg
and
rorb
pop
idiv
pop
movsb
mov
adc
out
stos
in
push
jle
mov
popa
inc
mov
test
int3
xchg
dec
xor
out
inc
sbb
jne
adc
in
push
clc
scas
xor
lcall
clc
or
inc
xchg
push
pop
fstps
ret
rclb
jnp
insb
mov
cld
sub
add
pop
out
ljmp
test
mov
xchg
fidivrl
xor
sti
mov
sub
pop
sbb
fadds
fadds
lcall
and
test
jae
js
dec
sahf
mov
push
mov
loopne
mov
sub
loop
mov
lahf
mov
add
push
div
rcr
mov
data16
jle
movsb
pushf
dec
setp
pop
cmc
dec
in
mov
stos
cmpsl
stc
cmc
popf
lcall
enter
jb
inc
xor
mov
lock
push
test
push
add
mov
adc
popa
movsl
imul
jle
mov
stos
mov
dec
jle
mov
sbb
aas
fisubrl
leave
cmpsl
popf
mov
adc
data16
mov
push
xchg
mov
fdivrl
sar
test
ficoml
out
mov
pop
inc
fcompl
fildll
xlat
shrb
dec
mov
push
add
test
bound
sti
ret
sub
xchg
daa
fmull
ja
pop
rolb
mov
xchg
and
fs
ret
imul
or
mov
test
push
pusha
lret
and
jno
fists
mov
push
mov
add
loopne
int3
xor
ret
je
repz
mov
mov
xor
xlat
in
push
lods
shl
daa
xchg
aad
jo
jns
popf
sub
lods
inc
adc
add
test
inc
iret
lcall
into
hlt
dec
clc
dec
jmp
insl
shrb
adc
cmp
sbb
int
adc
enter
mov
xchg
aad
mov
repz
adc
rol
shrl
aam
push
push
mov
pop
push
imul
add
mov
jecxz
and
and
fildll
divb
stc
pop
leave
les
ljmp
inc
hlt
pop
sbb
rol
in
int3
add
lea
mov
std
add
dec
or
mov
dec
das
loop
fcoml
ret
incl
adc
fldenv
cld
pop
rolb
pop
jge
rcrb
adc
push
jo
jecxz
jnp
out
xor
pop
xchg
mov
sub
mov
cwtl
jp
pushf
mov
stos
sub
cli
inc
stos
imul
mov
ret
xchg
fidivl
adcl
push
sub
mov
xchg
addr16
loop
sbb
loopne
sahf
xchg
loop
dec
xchg
xor
mov
outsb
jne
sbb
scas
std
aam
xchg
inc
das
loope
pop
enter
pushf
aaa
sub
in
rcr
fistps
add
sub
jno
testb
mov
fcomp
in
xor
fstl
pop
filds
gs
dec
or
outsl
xchg
ret
leave
sub
and
mov
sub
add
adc
jmp
mov
adc
inc
pop
ss
adc
lods
enter
adc
mov
enter
push
mov
xchg
adc
fpatan
sub
adc
sub
loop
popf
push
adc
jle
sbb
inc
dec
decl
lahf
push
dec
mov
lock
in
loop
jmp
repz
jp
imul
in
sbb
clc
fistl
test
ja
insb
mov
out
mov
push
sub
cmp
dec
fdivl
inc
xor
add
leave
push
lret
or
mov
das
shrb
movaps
pop
stos
sub
icebp
inc
cs
lret
stos
sbb
adc
fdivl
int3
xchg
or
fs
inc
push
dec
outsb
inc
mov
inc
arpl
insb
jle
sarl
jbe
mov
inc
ss
test
out
stc
movq
xchg
aas
push
mov
bound
clc
xchg
fmuls
mov
xor
repz
mov
movsl
arpl
lds
in
xor
and
stos
sbb
lea
subb
add
ljmp
sbb
mov
popf
ljmp
aam
or
push
repnz
sahf
out
fistpll
add
xor
std
inc
push
dec
sub
jge
sub
xchg
stos
sbb
pop
outsl
arpl
dec
pop
imul
cmp
jno
dec
push
mov
mov
ficompl
xorl
dec
fcmovne
test
les
cmp
inc
mov
gs
mov
shrb
fdiv
sub
cmp
test
arpl
xchg
roll
sbb
aas
jnp
mov
and
arpl
out
inc
dec
pushl
adc
scas
mov
lods
shll
call
mov
mov
fs
add
push
leave
xchg
lds
test
imul
xor
cmp
mov
jae
xchg
jl
cli
popa
mov
cmpsl
jecxz
mov
js
je
xchg
or
mov
xor
mov
call
mov
ret
addr16
sub
and
sahf
push
sub
movsl
xor
sbb
lret
add
add
lahf
mov
insb
xchg
scas
xchg
sub
sbb
ret
idivb
cmp
pop
scas
mov
sahf
cld
jp
cmc
inc
add
cmpsb
ret
cmp
fldl
inc
add
pop
shll
out
clc
addr16
inc
mov
mov
inc
xor
mov
call
nop
adc
cwtl
stc
jo
ss
aad
fists
push
jp
repz
arpl
fistl
add
jp
ljmp
fmul
addr16
outsl
jae
loop
cmc
jg
loope
push
es
ds
out
mov
push
lret
shlb
xchg
lcall
add
push
imul
sbbb
adc
ja
in
mov
jne
jg
cmp
push
jo
sar
repnz
add
inc
jns
pusha
jnp
les
pop
lcall
and
lcall
sub
sbb
test
mov
ds
mov
pop
inc
ret
xchg
pop
out
mov
push
add
loop
imul
mov
cmpsb
mov
xchg
mov
or
inc
xchg
ja
jp
and
xchg
mull
and
icebp
dec
or
or
sub
sbb
int
icebp
lods
addr16
jno
xor
or
mov
add
mov
ljmp
movsl
in
int3
mov
or
inc
or
adc
sbbl
pusha
cmp
sti
mov
sub
lods
aas
sbb
sti
and
jb
inc
jbe
fcomps
shlb
pop
imul
into
stos
lahf
sti
inc
lcall
ljmp
test
enter
mul
jns
std
repnz
cmpsb
ret
cmp
pop
fcmovnu
subb
pusha
cmpsb
daa
das
repnz
insb
fisubs
sbb
addr16
out
adc
lret
add
mov
xor
push
xchg
cltd
xor
jo,pn
pop
rorb
mov
enter
pop
out
shll
sub
adc
lea
mov
out
pop
jo
and
cmp
fnsave
popa
aad
or
iret
mov
shl
arpl
test
in
and
mov
xchg
pop
lds
andb
push
adc
cmc
xchg
notb
idivb
xchg
push
jb
sub
clc
adc
fstps
sub
jns
mov
dec
sbb
mov
or
sbb
test
and
stos
cli
xor
lods
leave
lret
scas
dec
xchg
mov
test
mov
scas
jg
mov
push
fs
cmp
dec
dec
daa
inc
adc
mov
sbb
add
adc
out
stos
daa
stos
dec
jnp
dec
pop
lods
flds
das
filds
movsb
cmp
and
lods
or
xor
mov
lods
xor
jbe
stc
imul
pusha
pushf
cmp
imul
jge
jb
stc
cmpsl
mov
cld
dec
test
popa
and
aad
insl
adc
icebp
pop
xor
ljmp
frstor
movaps
pop
clc
clc
dec
push
mov
call
out
push
add
or
fwait
orl
sbb
dec
dec
push
jbe
dec
push
or
push
mov
ficoml
fwait
cltd
aam
push
cld
push
adc
lds
mov
sahf
in
enter
push
xchg
mov
sub
bound
lret
jno
xchg
inc
xor
mov
push
push
or
out
in
add
popa
add
or
call
sub
lods
or
sar
inc
push
jp
push
push
pop
add
jb
repz
outsl
out
sub
test
pop
rcrb
icebp
lods
addr16
adc
insl
sbb
les
push
je
mov
xor
hlt
sub
jne
out
mov
rorb
mov
push
addr16
ffree
mov
cwtl
insl
out
sahf
test
int3
add
and
xor
pop
mov
mov
mov
jo
imul
ss
mov
or
sbb
mov
mov
cmp
ds
out
sub
jl
mov
mov
add
aaa
out
out
sbb
loope
outsb
sbb
xchg
xorb
push
and
mov
cmc
testl
sbb
gs
mov
jecxz
std
shl
stos
cltd
mov
ss
mov
xchg
test
iret
sub
jb
aad
out
jmp
inc
xor
insb
icebp
mov
dec
pop
xchg
dec
push
xchg
jp
or
test
mov
jnp
cld
adc
arpl
or
push
mov
popa
sbb
mov
rcrb
fprem1
lret
add
sub
repz
xor
inc
sub
or
push
push
or
and
sbb
mov
pop
mov
mov
fs
jnp
sbb
cmp
outsl
push
out
jbe
adc
addr16
xchg
push
je
iret
out
pushf
mov
mov
add
sti
xchg
movsl
sub
add
mov
add
and
cmpps
push
aas
outsl
in
mov
mov
mov
loop
cmp
int
call
add
aaa
xorl
sub
mov
lds
sbb
cltd
in
mov
movsb
xor
inc
ljmp
jbe
dec
out
xchg
ds
fadds
mov
cmp
repnz
adc
jne
cltd
cmpsb
jae
xor
pop
aas
push
inc
arpl
fistpl
adc
out
das
ljmp
insb
dec
roll
icebp
cmp
and
mov
add
and
imul
cmp
daa
mov
std
in
nop
loopne
repnz
sub
jno
cli
popa
out
loop
pop
add
sar
sbb
sub
xor
jne
lock
xchg
jae
dec
in
cmp
cld
jb
js
jnp
push
imul
push
push
push
adc
mov
adc
push
pop
pop
adc
pop
inc
lods
insl
aas
cmc
aad
addb
mov
sbb
push
adc
shll
mov
and
jne
adc
mov
mov
xchg
or
sub
das
aam
jae
orb
push
stos
sbb
push
mov
pop
ljmp
mov
add
adc
mov
mov
fdivrl
xchg
loopne
inc
cs
mov
mov
mov
stc
in
dec
mov
xchg
and
cli
dec
sbb
insl
pop
lcall
adc
mov
xorl
dec
stos
imul
xor
push
jnp
lret
mov
xor
mov
rcll
xor
mov
les
clc
xchg
lahf
inc
xlat
in
stos
dec
lahf
push
mov
daa
sti
add
jae
push
pop
popa
xchg
in
and
xchg
icebp
sbb
sbb
imul
int3
icebp
lea
sub
cmp
add
lcall
jnp
mov
stc
pop
pushf
data16
int3
jecxz
jns
lods
xchg
xchg
inc
push
mov
ljmp
mov
dec
xchg
aam
xor
push
cmpsb
fisubrs
inc
lret
in
jno
dec
add
pop
movl
sbb
inc
out
inc
test
adc
push
loope
fcmovnb
je
xchg
and
addb
cmpsb
insl
mov
cmp
push
add
aam
lods
stos
cld
call
dec
in
into
dec
in
pop
jp
lahf
nop
mov
inc
out
mov
into
ret
imul
mov
ficompl
iret
adcb
dec
nop
scas
mov
xchg
mov
or
push
push
outsb
or
ljmp
lods
pop
repnz
xor
sub
popa
stos
pop
aas
cld
pusha
daa
imul
mov
push
scas
call
cmp
xchg
jp
out
xor
jns
cwtl
hlt
aas
maxps
adc
add
insb
mov
scas
inc
in
and
dec
ficoml
jp
sub
leave
lods
lods
das
int3
cmpsl
movsb
movsl
xor
shlb
negl
cld
lret
pop
xor
jns
xor
and
test
dec
out
add
lea
aaa
mov
jmp
dec
pop
cmpsl
repnz
rcrb
std
iret
scas
mov
mov
adc
jg
push
dec
fwait
out
mov
mov
mov
mov
cmpsl
and
ror
push
ret
mov
dec
sbbb
mov
jno
je
sub
push
fcompl
add
test
stc
out
sbb
das
mov
movsl
clc
out
adc
mov
in
loopne
fcomp
jb
std
pop
inc
jge
and
push
xchg
dec
push
lahf
jmp
scas
cmp
push
arpl
icebp
stc
fwait
sbb
leave
test
jge
push
fmulp
mov
sub
cmpsl
inc
inc
push
ret
jne
pop
pop
daa
xor
mov
jp
aad
jb
adc
jo
pop
or
and
adc
xor
jns
push
pop
or
push
cmp
xor
dec
fwait
loop
sub
xchg
ficoml
leave
inc
inc
inc
sub
inc
ficompl
cmp
sbb
clc
xlat
nop
and
pop
outsb
jmp
push
lods
lcall
xlat
mov
jb
push
aad
ret
pop
sbb
test
jl
mov
roll
inc
adc
cmc
sub
jge
test
fstp
dec
outsb
xchg
jecxz
test
out
scas
insb
or
fcomp
adc
cli
pop
sahf
call
pop
jae
insl
dec
aad
sbb
and
stc
sub
mov
xor
xor
xchg
mov
sub
inc
test
xor
testb
push
negl
push
and
test
sbb
mov
stos
sub
adc
adcl
cltd
push
and
xchg
aaa
ss
in
in
fimull
xchg
xchg
xor
mov
mov
leave
xchg
xchg
or
pop
sbb
fs
repz
push
bnd
sub
add
imul
daa
cmp
lcall
xlat
movl
daa
icebp
hlt
pop
mov
jle
dec
jo
aad
xor
lea
das
sbb
add
add
outsb
cltd
pop
jmp
les
ja
mov
push
xchg
cmp
and
cmp
ret
fstpt
sub
das
mov
dec
hlt
sbb
imull
mov
push
inc
sbbb
mov
push
inc
xchg
xor
dec
mov
imul
in
imul
jno
stc
negb
sbb
outsl
addr16
aad
push
cmp
mov
insl
je
or
jle
mov
lahf
stc
xchg
pop
xchg
subl
jne
inc
inc
cmp
clc
mov
loop
fxch
xchg
scas
rcll
push
or
ror
fcomp
mov
jb
pop
mov
clc
movb
fs
pop
test
in
adc
cmp
adc
jle
jmp
lahf
adc
xor
loope
xchg
into
lea
jnp
popa
cmpsl
jno
push
jno
mov
nop
loopne
mov
pop
imul
xchg
insb
cmp
jno
pop
repnz
xlat
out
jge
sbb
lods
fstl
pushf
cmpl
mov
pop
sub
cmp
insl
mov
cli
jb
sbb
push
mov
adc
mov
add
shlb
ret
adc
mov
std
dec
shrd
fcmovbe
lods
and
xchg
arpl
aas
sbb
or
sub
rol
decl
inc
dec
shlb
sbb
mov
mov
push
or
xchg
scas
cltd
dec
mov
outsb
adc
sarl
sub
add
aam
into
jae
mov
arpl
fcompl
aam
cmc
sbb
pusha
faddl
lock
and
adc
cmp
in
cmpsl
sub
fildl
addr16
push
dec
call
aad
dec
pop
mul
rcl
jne
push
es
mov
shr
out
sbbb
das
rorl
and
fimull
and
in
jbe
mov
pop
dec
jbe
icebp
pop
adc
mov
mov
fwait
daa
mov
hlt
mov
fstps
pop
pusha
jle
in
and
jo
inc
jae
loop
cmp
mov
push
in
das
cmp
out
xchg
scas
mov
adc
loopne
enter
pop
das
jns
arpl
es
fdivrp
repnz
out
mov
jne
ror
test
insb
push
dec
adc
mov
fcmovbe
mov
pop
ljmp
mov
loop
test
ja
sahf
movsl
fnstcw
dec
cmp
pop
push
cld
or
push
je
ds
jmp
test
jmp
add
mov
ja
gs
out
lea
mov
rolb
insl
popf
jge
js
mov
lods
and
fsubr
stc
inc
or
cmpsl
dec
bound
jno
pop
negb
or
rcrb
cltd
rcr
sub
movsb
mov
outsb
test
mov
call
sub
adc
aas
test
cmp
les
mov
mov
xlat
push
scas
out
fwait
lcall
add
rclb
scas
push
das
inc
vaddss
int3
nop
xchg
dec
mov
repz
adc
sbb
stos
aaa
cmpsl
and
and
cmp
mov
jns
xchg
xor
xchg
in
jp
sub
xchg
jb
pop
data16
in
lret
add
add
xchg
lods
pop
dec
mov
push
out
mov
and
inc
lret
rcll
sub
and
notb
cmpsl
xchg
dec
xor
dec
test
adc
repnz
enter
mov
xchg
outsl
stos
jge
mov
sahf
push
push
add
xchg
insb
sub
xor
sbb
adc
ljmp
adc
push
rcll
mov
int3
rorl
ds
aaa
call
mov
jnp
mov
mov
xor
aad
sbb
dec
aad
sub
or
lcall
mov
hlt
or
lret
sahf
ja
lret
inc
dec
hlt
push
xchg
sbb
xor
jg
cli
fstpt
add
jle
cmp
push
xchg
cmp
cltd
add
cmp
ds
imul
int3
dec
jp
jmp
les
pusha
mov
cli
mov
aas
out
jecxz
jle
jmp
enter
xchg
into
scas
arpl
cmp
lea
dec
addr16
fisttpl
test
mov
fisubs
xor
roll
pushf
xchg
pop
test
scas
pop
popa
push
pop
mov
push
push
sub
fsubrp
cwtl
popf
js
inc
dec
push
and
mov
ljmp
mov
xor
mov
scas
sub
dec
hlt
lea
movsl
cli
push
add
inc
adc
xchg
mov
cmp
push
loop
xor
sbb
arpl
cmp
and
inc
xchg
ljmp
lea
push
scas
cli
push
mov
sbbl
insb
enter
jno
xchg
insb
sbb
xchg
fsubrl
or
es
out
rolb
push
lds
les
les
dec
xor
scas
pop
adc
mov
and
js
push
lods
sahf
jecxz
sub
push
cmp
mov
hlt
dec
inc
int
xchg
jge
repnz
pushf
clc
mov
mov
xchg
mov
mov
xor
push
push
and
call
inc
fisttps
jb
dec
mov
scas
push
dec
fld
xlat
pop
leave
jecxz
addb
and
ret
cmp
mov
add
fsubrs
ret
sub
xor
loopne
outsl
dec
add
sub
lds
enter
or
in
gs
cld
rcrl
dec
rorl
push
popa
pop
sbb
and
les
orl
cmp
icebp
add
pusha
popa
mov
jmp
cwtl
rcrl
cmp
aaa
je
mov
inc
mov
mov
jecxz
jmp
mov
mov
sub
cli
sbbl
mov
leave
jbe
lahf
rclb
pop
mov
add
cwtl
xchg
sub
mov
inc
dec
daa
cmc
mov
imul
out
inc
add
in
dec
mov
push
js
xchg
adc
add
jecxz
fwait
push
inc
sub
and
add
in
mov
call
pop
shl
add
es
adc
mov
fs
jl
imul
mov
pop
rep
out
outsl
add
fldt
mov
popf
mov
or
aaa
sbb
scas
xor
in
and
jb
pop
mov
or
roll
ljmp
mov
shrb
pop
dec
sub
loope
inc
mov
push
ret
xchg
jmp
mov
and
fmuls
ss
hlt
jg
sbb
ret
mov
loopne
sub
movsl
jmp
sbb
push
loop
xlat
xor
add
push
rcr
out
repnz
sti
sbb
pop
lea
jl
cli
push
mov
inc
and
push
fisttpll
ljmp
inc
push
cmp
je
shl
mov
scas
jns
rorl
notl
adc
popf
add
in
js
mov
pop
or
shrb
cmpsl
scas
das
arpl
aaa
mov
push
pop
stos
movsb
sub
fbld
xor
push
sbb
jle
shll
std
sbb
mov
out
xor
fs
loop
stos
movsb
iret
cmp
dec
ljmp
es
in
adc
outsb
sub
iret
mov
cmc
adc
sub
xlat
sbb
xchg
cmp
cmp
sub
or
jae
mov
sbb
jns
jne
dec
stos
sarl
xchg
fadds
xchg
mov
rol
arpl
dec
lret
xor
std
pop
roll
test
cld
inc
sub
fcoml
cmp
or
mov
mov
ffree
push
xchg
lret
dec
ret
xor
pop
dec
push
in
dec
icebp
or
jecxz
sub
loop
inc
mov
fs
data16
mov
xchg
cmc
gs
stos
js
pop
xor
push
test
inc
out
inc
add
push
call
pusha
mov
and
jle
pop
sahf
clc
sbb
test
push
jmp
inc
cmc
pop
stc
xchg
out
adc
cmp
ss
lret
lcall
les
mov
mov
repnz
push
cmp
int3
push
jge
in
dec
jne
mov
cli
mov
aaa
sub
fs
adc
sub
and
push
rcrb
jmp
pop
lods
dec
mov
out
sbb
push
das
jnp
pop
sbb
lock
sahf
ja
xchg
push
lahf
fisubs
sbb
mov
mov
mov
ljmp
outsl
push
daa
dec
sbb
negl
lahf
lcall
outsb
dec
pop
xchg
pop
push
inc
inc
lret
iret
aaa
cltd
mov
int
daa
shl
fdivrp
mov
sahf
rcr
clc
bnd
pop
pop
fwait
into
sbb
int
inc
in
lahf
inc
stc
xor
mov
imul
aam
fildll
divl
inc
test
xchg
sbb
out
lock
or
jns
jle
mov
xchg
xchg
out
pop
mov
mov
gs
mov
insb
lds
enter
push
jnp
fs
jge
pop
jne
loopne
subb
mov
cmc
fdivs
push
in
inc
daa
out
mov
int
and
cld
sbb
fsubr
pop
push
pusha
mov
fildl
add
sbb
cmp
int3
cld
and
xchg
dec
or
lcall
xchg
enter
fucompp
mov
push
fisubrs
push
inc
lods
dec
ficoml
outsl
inc
xchg
add
sbb
jp
dec
cmp
lods
pop
pop
es
aaa
cmp
call
test
push
mov
jl
cli
pop
lods
pop
or
sarb
pop
jmp
subl
add
shlb
ljmp
jmp
mov
mov
mov
lods
inc
dec
push
xlat
push
pop
rorb
in
jecxz
jmp
or
cwtl
xchg
mov
jnp
mov
push
mov
add
push
dec
mov
cwtl
outsl
xchg
and
outsb
in
dec
loopne
data16
icebp
lret
out
cmpsl
into
inc
jp
xor
fcoml
test
popf
jo
adc
xchg
push
push
xor
sbb
test
jb
jge
mov
xchg
push
mulb
lods
mov
leave
dec
sbb
or
das
fisttpl
lods
ljmp
sub
mov
xor
xchg
bound
cmp
cmpsl
lcall
xchg
xchg
or
les
and
shr
mov
pop
call
adc
repnz
xchg
inc
in
jmp
push
mov
xchg
movsl
sarl
add
jne
out
ja
movsb
data16
mov
cs
cld
pop
dec
jnp
and
lea
cld
sarl
rcrl
in
or
mov
xchg
enter
pusha
inc
ror
repnz
aas
fcmovnbe
pop
test
xchg
adc
je
sbb
jge
ret
shrl
rclb
arpl
jo
jle
inc
jae
mov
push
stos
hlt
arpl
fsubl
les
push
cltd
add
xor
sub
cmp
pop
fists
xor
jge
dec
pop
pop
pop
lods
push
cmp
sub
pop
js
mov
lock
insl
arpl
and
cli
ds
rcll
mov
mov
in
xchg
dec
mov
mov
mov
sub
ss
mov
std
sub
adc
iret
jp
pop
in
shll
ret
dec
movsl
adc
movsl
nop
inc
or
pop
sbb
jle
js
sbb
js
test
push
cs
adc
xor
ja
mov
or
mov
mov
xlat
cld
cmp
mov
stos
cltd
pop
mov
jmp
lahf
iret
sub
cmpsl
mov
pop
frstor
mov
mov
or
xchg
mov
test
push
aas
push
enter
xchg
testb
add
dec
adc
sub
adc
adc
mov
jae
fsubrs
daa
and
mov
ret
mov
lds
xor
jno
and
cld
xchg
lock
fldenv
test
pop
xchg
stos
and
inc
scas
jg
xlat
divl
and
mov
ret
adc
mov
lds
sub
clc
sub
jne
and
idivl
out
outsl
outsb
and
add
jno
ja
dec
iret
repz
call
ret
ficoms
imul
or
fbstp
pop
cmp
je
addr16
les
lret
cld
jle
jge
ljmp
test
out
test
sahf
aas
aaa
pop
aaa
cltd
mov
or
xchg
xchg
sahf
sbb
or
dec
and
and
lods
imul
fnsave
xorb
dec
lods
adc
mov
mov
mov
shll
pop
dec
lcall
dec
or
ret
jbe
push
cmpb
loope
and
xchg
pop
and
mov
ret
xlat
iret
aam
push
inc
cmc
adc
push
push
xor
sub
in
sub
loopne
sub
inc
dec
clc
scas
mov
test
das
jnp
fsqrt
dec
push
mov
xor
mov
jge
mov
repnz
stos
mov
xor
or
hlt
lock
out
imul
and
ss
daa
sbbb
mov
adc
mov
xor
push
cmp
enter
lahf
sbb
cli
xlat
adc
jle
xor
mov
jg
push
ficoms
cmc
int
push
fsubs
add
data16
incl
enter
xor
jnp
jg
mov
ret
pop
enter
fisubrs
loope
cltd
dec
mov
insb
dec
jae
rcrb
pop
sbb
cmpsb
sbb
push
imul
or
xchg
out
jns
pop
les
push
enter
fistps
add
outsb
loope
clc
xor
das
pop
cs
add
or
adc
push
stc
fildl
pop
pop
div
popa
inc
push
fcoms
push
and
scas
in
sbb
sarb
out
cmp
mov
insb
and
call
iret
cmp
lock
pop
mov
jbe
xor
arpl
push
dec
push
add
pusha
xchg
mov
cmp
fucom
nop
cs
sub
inc
loopne
mov
cs
aam
mov
mov
xchg
pusha
add
sbb
dec
mov
mov
or
aaa
shrb
movsb
mov
addr16
or
add
add
out
mov
push
sbb
push
cmp
mov
and
mov
cmpsl
lods
inc
mov
dec
les
test
faddl
and
test
jb
jp
stos
pop
sbb
mov
dec
shr
callw
mov
mov
outsl
ljmp
pusha
cwtl
lret
push
or
inc
sbb
aas
js
outsl
fstl
je
inc
mov
xor
fisubl
fwait
ret
add
dec
jno
fwait
lock
mov
lea
xor
mov
pusha
cmp
and
mov
pusha
fimuls
and
mov
cld
sbb
push
xor
jb
jmp
adc
or
in
out
aas
add
arpl
xchg
out
lret
or
ljmp
nop
stos
xchg
xor
inc
pushf
mov
adc
mov
mov
rorl
popa
out
jge
test
out
idiv
cmp
decb
pop
fs
xchg
imulb
and
mov
cmp
jge
pop
out
push
mov
add
push
and
xchg
out
iret
adc
mov
jmp
fisttps
icebp
pop
inc
leave
mov
push
movl
mov
cmpsl
je
mov
mov
fdivrs
jb
lods
cmp
sbb
pop
hlt
enter
or
sbb
and
jle
xchg
adc
negl
mov
lods
repnz
push
das
push
lds
test
push
mov
ds
dec
pop
ss
icebp
ja
js
or
aas
pushf
fcmovnu
arpl
test
xchg
sub
dec
lea
stc
das
cwtl
or
add
xor
adc
pop
sbb
adc
cmp
bound
xor
in
or
js
cmpl
and
movsb
xchg
scas
test
cltd
lret
ss
jge
imul
stc
es
test
xor
insb
imul
push
jo
and
push
loop
aas
cmp
pop
mov
cmp
or
and
or
push
movl
out
cmpb
insl
inc
out
jg
xchg
and
add
jg
icebp
sbb
xor
subl
fmuls
mov
dec
imul
test
mov
shll
push
xchg
ret
insl
add
mov
adc
lds
sub
sub
sbb
ljmp
in
mov
add
adc
mov
ret
jg
jp
ja
fwait
jmp
movsb
pop
in
in
mov
mov
shl
sti
inc
sbb
cmp
dec
or
mov
cmp
jns
sub
xchg
jne
push
out
mov
add
icebp
mov
jns
adc
and
notl
mov
xchg
stc
lock
ss
faddl
dec
push
sti
inc
pop
pusha
or
sub
add
data16
dec
fwait
pop
cmpsl
shll
adc
cmc
frstor
ljmp
lock
add
rcr
lahf
das
stc
fbstp
inc
in
or
xchg
stc
out
sti
data16
icebp
adc
fildll
mov
call
out
pop
adc
inc
push
jnp
bound
jecxz
aad
data16
pop
jmp
loop
push
push
out
push
adc
pop
jne
push
xor
ret
in
push
out
mov
push
mov
push
decb
jne
inc
mov
sti
aad
cli
aam
lret
lea
mov
cltd
xchg
jp
sbbb
outsl
mov
jns
mov
adcl
fucomi
popf
ficompl
sub
cltd
mov
jbe
arpl
xchg
or
mov
and
insl
dec
call
xor
push
xor
into
mov
jecxz
insb
ftst
std
sbb
arpl
insl
jae
jno
or
mov
stc
jecxz
fadds
sub
rol
test
ret
test
mov
popf
fwait
pop
lret
cli
sub
rorb
mov
add
mov
xchg
or
sub
mov
popl
mov
xchg
xchg
jo
jne
jno
and
loope
fwait
call
into
mov
cmpsb
pop
cmp
mov
scas
lods
xchg
add
xchg
sbb
cmp
adc
mov
cld
ret
inc
jecxz
xchg
dec
xchg
hlt
pusha
shlb
fbstp
add
ret
lea
test
in
mov
cmp
mov
aam
hlt
mov
cltd
cmp
shrl
mov
inc
outsb
xor
jb
loopne
add
out
dec
and
push
push
ret
pop
jnp
out
mov
mov
aas
cmp
loope
sbb
adc
stos
or
fs
xchg
inc
adc
popa
mov
sub
cmp
mov
ficomps
das
fstpt
ret
subl
mov
out
ret
sub
negl
js
lods
ret
add
add
js
and
loopne
jmp
and
mov
fisubl
cmovno
cmpsl
outsl
ret
mov
bnd
sub
mov
addb
daa
aam
pop
mov
leave
dec
fistpl
out
sbbl
enter
out
shl
add
mov
ret
ljmp
ds
xor
pop
jb
jb
mov
sbb
aad
mov
xchg
cltd
sub
xchg
imulb
cli
lods
dec
jmp
add
addr16
push
pop
and
loope
scas
adc
adc
loopne
shll
push
or
bound
dec
bound
jecxz
adc
loopne
jo
out
lock
stos
jge
push
pusha
hlt
cmpsl
sti
add
mov
daa
inc
lock
imul
negb
xlat
mov
std
jmp
add
add
lahf
sub
inc
in
pop
rcrl
test
fdivrl
push
push
movsl
nop
fmull
mov
sti
sbb
fisttpll
inc
cwtl
cltd
rorb
fidivrl
test
sub
out
cbtw
xchg
test
int
bound
mov
pop
mov
outsb
mov
dec
inc
scas
loope
cmp
adcl
popa
sub
scas
aad
xchg
test
and
jmp
dec
xchg
push
pop
xor
movsb
and
mov
js
dec
shll
pop
loopne
imul
adc
test
cs
sahf
mov
xor
je
jns
push
add
pusha
xchg
xchg
mov
mov
fisttpl
or
dec
cld
lcall
push
mov
jo
adc
cwtl
pop
add
push
xor
repnz
sub
sbbl
xor
fnstenv
xor
xor
mov
ror
clc
fbld
push
sahf
mov
iret
add
mov
notb
test
les
sub
pop
or
lods
jbe
arpl
cmpsl
xor
test
push
mov
add
push
push
lea
popl
ret
add
or
loopne
adc
mull
hlt
xchg
xor
xchg
stos
cmp
jmp
push
insl
jl
push
push
fsubrl
pop
inc
int3
xchg
jecxz
lahf
pop
adc
ret
data16
ja
add
inc
sub
mov
outsl
mov
cld
and
xor
pop
in
es
push
test
cmp
inc
pop
dec
or
popa
mov
in
push
imul
test
xlat
cs
mov
lods
add
pop
stc
pop
and
cmp
pop
fldl
mov
mov
or
sub
push
scas
jmp
xchg
jne
sub
popf
and
lods
push
movsl
add
std
mov
stos
rcl
pusha
movsb
sbb
inc
lods
cmpb
outsb
packssdw
decl
pop
andl
cltd
call
inc
pop
fadd
sbb
jne
lods
xchg
inc
insb
pop
xchg
fcomi
shl
loop
push
sbb
test
outsb
add
mov
jg
or
lock
add
lods
mov
popa
or
es
shll
mov
push
stos
dec
mov
inc
pop
push
sub
mov
sbb
out
sbb
mov
mov
ret
pop
in
out
mov
cli
lock
out
pusha
pop
xor
inc
mov
xchg
push
lds
push
daa
mov
out
jmp
pop
and
sbb
clc
xlat
clc
dec
xorb
es
push
mov
mov
pop
jno
push
jb
loope
push
push
sub
inc
sbb
xchg
inc
dec
and
fstl
aam
adc
es
jns
int3
mov
out
test
xchg
pop
lcall
cmp
jb
orb
mull
aas
aaa
jae
mov
push
cmpsl
sbb
pop
scas
and
sbb
nop
popf
cmp
in
pusha
in
adc
scas
fwait
mov
push
rorb
dec
imul
inc
and
ss
test
andl
and
popf
add
ret
push
sbb
or
inc
mov
xor
push
jae
das
mov
sub
ds
hlt
cmp
push
xchg
loopne
push
mov
mov
jle
pop
ljmp
add
fisttpl
adc
sbb
inc
cmp
pushf
pop
push
lahf
mov
mov
std
cmc
jae
add
pusha
scas
mov
hlt
clc
in
clc
xchg
mov
nop
inc
leave
pop
sub
repz
andl
inc
bound
cmp
push
inc
nop
dec
dec
adc
scas
inc
push
ja
mov
ja
xchg
inc
jp
movsl
cmpsb
dec
pushf
ds
into
mov
test
outsb
in
cmpb
cmp
lock
jne
push
mov
cmp
fmull
sbb
push
shlb
test
mov
inc
or
pop
loop
ja
mov
sti
mov
mov
cmpsl
lock
xchg
and
xchg
push
in
xchg
daa
leave
jnp
jmp
sbb
sbbb
mov
jmp
dec
idiv
sbb
mov
in
inc
fwait
scas
bound
test
test
jecxz
test
gs
xor
mov
into
rorb
pushl
sub
test
mov
cmpsl
pop
mov
test
or
fcoml
inc
xor
rcr
xlat
dec
jp
add
mov
jb
cwtl
out
sbb
mov
jb
lea
or
and
scas
xchg
leave
xchg
popa
leave
pop
nop
jmp
fisttps
clc
xchg
jno
dec
jno
inc
xchg
sbb
ja
ret
arpl
pop
sar
adc
sub
insb
cmpsl
ss
mov
xchg
ja
loopne
iret
add
jns
repz
inc
mov
jns
and
pop
stos
sbb
lods
inc
cwtl
sbb
add
mov
mov
inc
push
mov
lahf
outsb
lahf
negl
inc
inc
mov
xchg
push
adc
daa
mov
rclb
mov
mov
pop
mov
pop
mov
pop
inc
pop
and
push
fisubrl
faddl
shlb
aas
cwtl
sbb
push
and
pop
xchg
cmp
xor
shl
pop
dec
jmp
shlb
pop
push
mov
in
push
ds
jp,pn
jge
jl
out
shll
fcompl
and
xchg
pop
xor
xchg
jo
sbb
push
pop
fistpl
gs
mov
lds
mov
sub
sbb
arpl
and
dec
in
push
or
imul
fidivrl
out
jecxz
mov
xchg
test
filds
loop
addr16
fiaddl
jecxz
int
test
scas
and
test
cmpsb
das
sub
and
sub
test
addr16
sti
pop
repnz
push
jmp
iret
cmpsb
addr16
inc
pop
enter
adc
mov
int
and
or
sub
call
fisubrl
test
cltd
sub
push
or
or
repnz
lea
int
ljmp
aad
mov
test
jle
lahf
or
pop
pop
add
mov
fisubs
ss
rcl
lods
add
rorb
jp
dec
xor
lret
mov
lods
fs
push
out
aad
or
call
inc
add
sbb
cltd
sahf
sub
xchg
cmp
xchg
aad
inc
lock
fistps
hlt
call
dec
sbb
adc
stc
ljmp
dec
ds
fs
xor
ja
cmpsb
cwtl
test
scas
cmpsl
pop
outsb
jae
sbb
dec
mov
sub
push
clc
shll
js
pop
leave
movsb
adc
xchg
xor
sub
xchg
jns
dec
adc
lods
roll
out
loop
shlw
adc
jg
mov
xchg
mov
repz
inc
lret
dec
mov
sti
notb
push
insb
jns
xchg
lods
cmp
fldt
lahf
ljmp
push
sbb
xchg
sbb
ljmp
pop
mov
lcall
fdivs
cmc
add
sbb
adc
pop
add
popa
pop
rcl
xor
cmpsb
inc
movsb
jle
inc
xchg
inc
jge
pop
cmp
push
xchg
jecxz
sbb
inc
icebp
adc
int
out
hlt
outsb
ja
mov
mov
xor
jo
insl
dec
ja
jmp
pop
and
aad
sti
lret
push
ficompl
pop
es
stc
iret
mov
mov
inc
or
inc
pop
inc
loopne
mov
dec
push
push
js
push
xor
sti
push
push
cmp
scas
jae
sub
repnz
xchg
mov
mov
jnp
pop
std
sbb
dec
test
cmp
enter
rcl
xor
and
dec
ljmp
xchg
das
xchg
aad
inc
call
pop
jae
int
cmp
fidivrl
mov
faddl
aam
jle
inc
cli
mov
dec
sbbb
cmp
cltd
jne
shl
sbb
pop
repnz
mov
sub
cs
daa
xchg
push
rcl
loope
pop
pop
mov
ret
push
jns
cmp
push
cmpsb
mov
mov
dec
cwtl
mov
out
jnp
aam
adc
or
mov
rcrl
jns
cmpsb
push
testl
xor
into
xchg
dec
divl
daa
aad
fimuls
and
lock
out
stos
mov
shrl
pop
lret
fdivrl
mov
pushf
add
xor
mov
add
inc
mov
cld
mov
pop
mov
jo
push
xchg
sbb
outsb
push
adc
add
inc
push
call
xchg
idivb
add
or
add
pop
popf
sub
cmp
pushf
mov
rorb
outsl
mov
test
jno
jno
rep
xchg
adc
dec
addr16
sub
mov
imul
neg
popa
aad
and
inc
xchg
in
hlt
add
xchg
sbb
repnz
dec
seto
das
jbe
hlt
fs
lahf
in
push
movsb
pop
lret
leave
jg
push
out
add
dec
jmp
cli
xchg
pop
xchg
mov
in
hlt
lahf
xchg
popf
or
aad
lret
jp
dec
or
cli
mov
mov
dec
inc
pushl
sbb
push
repnz
add
dec
je
cmpsl
clc
cwtl
jmp
xlat
fidivl
mov
bound
xor
cmp
xor
dec
xchg
and
inc
insl
xchg
mov
fisubl
push
lods
out
lods
cmp
cmc
xchg
pop
ret
mov
xchg
mov
mov
popl
jno
es
rcrb
es
adc
add
dec
fidivrs
push
jbe
mov
mov
lcall
ja
aaa
int
and
ret
inc
xchg
cld
mov
sbb
push
scas
sbb
add
cltd
test
fadds
aas
xchg
test
mov
xlat
jp
jno
xchg
stos
xchg
gs
cmp
pop
insb
sbb
mov
adc
add
xor
mov
aas
mov
cmc
stos
mov
lods
xchg
iret
into
pop
in
loop
roll
gs
scas
int
or
daa
sbb
and
dec
dec
neg
dec
aas
mov
ror
mov
lcall
out
pop
mov
inc
ljmp
test
out
push
mov
mov
shll
xor
mov
add
sbb
repz
cmpsl
mov
push
mov
dec
in
adc
sub
movsb
scas
out
clc
sub
das
xchg
sbb
mov
sub
das
out
std
xor
clc
adc
scas
dec
fcomp
jb
lret
pop
mov
mov
adc
xor
imul
inc
pop
leave
and
les
fwait
fildl
testb
jmp
xor
push
iret
pushf
mov
xchg
ss
ret
and
aaa
ret
movsb
pop
adc
lds
sbb
sub
mov
ds
xor
jle
flds
addr16
js
jne
jno
loopne
fs
ret
call
inc
or
aad
and
sub
pop
jecxz
push
inc
xchg
test
popa
mov
test
cld
rolb
rcrl
fdivrl
cs
jecxz
fxch
lods
mov
adc
jne
call
mov
idivb
test
sbb
ret
mov
xlat
aam
adc
mov
add
lea
pop
int
or
jb
cltd
push
xchg
insl
fs
xor
dec
insb
push
outsb
adc
mov
movsl
stc
push
int
sbb
or
jp
cli
mov
jge
test
sub
pop
pop
test
cmpsb
loopne
lret
js
mov
push
sub
lods
xor
in
daa
mov
dec
nop
das
sub
outsb
or
pop
mov
pop
or
push
mov
sbb
lods
xchg
in
lock
cmp
dec
enter
jne
xchg
push
jg
xchg
daa
outsl
jns
and
and
inc
cmpsl
lods
dec
ja
roll
movsb
add
mov
pusha
jnp
xchg
push
insb
and
pop
push
and
mov
imul
sbb
mov
hlt
dec
cmc
imul
mov
jo
sarb
out
dec
adc
cs
sub
sbbb
xchg
popf
push
call
ret
jmp
sub
lods
lods
dec
mov
lcall
jne
sbb
adc
lods
cmpsb
jg
loop
out
sub
mov
pop
push
mov
mov
or
call
sbb
in
pop
adc
and
fstpl
pop
sti
mov
xor
push
sub
scas
mov
cmp
mov
loopne,pn
or
mov
mov
lret
dec
lcall
lret
imul
stos
push
sub
inc
jg
mov
cmp
test
cmc
out
movsl
cmp
adc
jmp
push
sbb
stc
adc
cmpsl
cmp
mov
fstpt
nop
rorl
xchg
lds
fsubrs
xor
bswap
inc
fidivrl
jae
sub
xchg
ja
mov
scas
loope
scas
aad
jo
ret
lods
roll
loope
jo
or
daa
inc
push
call
mov
push
clc
test
fists
cmp
pop
jnp
cmp
jns
jmp
out
push
xchg
mov
adc
xchg
mov
add
imul
mov
imul
icebp
imul
leave
pop
pop
ret
push
mov
xor
push
sbb
mov
mov
shrb
xchg
mov
jbe
inc
es
iret
movsl
aad
cmp
sahf
push
inc
xchg
addr16
push
subl
inc
sbb
push
rclb
mov
lret
mov
cmp
jmp
bound
mov
cmpsb
adc
pop
out
pop
jo
dec
add
sub
daa
rorl
mov
push
xchg
repnz
sbb
imul
hlt
mov
movsb
hlt
cli
cwtl
adcb
in
dec
push
mov
mov
leave
or
test
mov
icebp
mov
addr16
cmpsl
lods
lret
mov
clc
fwait
inc
jnp
insl
rcrb
jnp
test
mov
pop
xchg
inc
xchg
or
or
dec
insl
imull
pop
fistpl
pop
mov
push
pushf
aas
or
popl
xchg
pop
pop
xchg
pop
xor
insb
aam
cwtl
out
shl
jno
sub
icebp
cmp
cmp
movsl
xchg
icebp
rclb
pop
dec
movsb
daa
sahf
cltd
into
dec
aaa
aaa
outsb
andl
jmp
push
or
xchg
xorb
loop
xor
lock
lods
xchg
adc
jl
loop
aaa
test
nop
pop
or
jmp
mov
cmp
test
mov
and
ds
push
in
jmp
test
cmpsb
or
adc
call
out
mov
pushf
xor
mov
lcall
clc
aaa
and
sbb
jmp
xchg
sbb
imul
jae
mov
push
mov
add
mov
xchg
loopne
addr16
mov
out
jge
inc
imul
push
mov
inc
in
and
dec
lea
int
cmp
lock
cs
aam
add
xchg
and
das
out
or
mov
and
sub
or
dec
jecxz
test
insl
movsb
inc
jnp
cwtl
mov
pop
bound
daa
outsl
pop
fadd
call
push
jp
jae
xorb
mov
cmpsl
scas
inc
dec
adc
push
adc
lods
out
in
cmp
xor
mov
leave
inc
test
test
push
inc
mov
hlt
and
mov
sub
lret
xchg
sti
or
aam
mov
jecxz
dec
mov
mov
add
push
int
leave
inc
repnz
mov
test
xchg
cwtl
or
dec
jmp
das
adc
orb
sbb
jp
test
mov
push
xchg
lea
xlat
jl
xorl
mov
std
mov
ss
div
cmp
cltd
rclb
in
mov
test
mov
xorl
jp
into
sti
dec
pop
xchg
jmp
inc
test
imul
fdivrs
shl
or
out
filds
fldenv
shrl
sbb
repnz
lahf
xchg
incb
xchg
jne
sbb
inc
mov
gs
mov
lods
jg
les
test
and
xcrypt-ecb
cmpsl
lret
mov
xchg
lahf
cs
jmp
popa
mov
pop
fwait
es
inc
test
jle
mov
push
jbe
add
loopne
fdivr
ror
repz
arpl
inc
jp
pop
cs
cmp
or
jno
and
cmpsb
and
call
mov
movsl
andb
push
into
stos
inc
cmp
pop
daa
in
arpl
movsl
pop
adc
pop
mov
lret
popf
lret
and
roll
inc
sahf
jl
fsts
jge
mov
ja
sbb
dec
daa
cwtl
jmp
clc
stc
es
idivb
pop
jne
cli
imul
iret
xchg
orb
fcompl
pop
mov
adc
mov
xchg
roll
mov
test
rolb
std
and
mov
dec
decl
dec
leavew
or
out
xor
jl
push
popf
aam
loop
sar
bound
inc
xlat
jns
push
xor
push
pop
outsb
lahf
sbb
inc
pop
mov
insl
je
lods
cmpsl
movsl
rcr
jne
mov
adc
int3
jmp
xorl
dec
add
fwait
adc
push
test
or
movsl
dec
rcrl
cli
add
lret
push
test
jl
movsb
or
mov
and
icebp
adc
inc
je
lods
je
das
ret
pusha
fadds
or
dec
lods
bswap
in
xchg
mov
sbbl
ja
int3
jmp
pop
inc
xchg
xor
sbb
std
outsl
test
mov
inc
fcoml
test
mov
repnz
in
sbb
je
xchg
push
sbb
je
xchg
pop
loop
popf
adc
js
mov
mov
push
outsb
aam
push
loopne
sbb
pop
fsts
mov
push
in
cmpb
xor
imul
stos
mov
or
sub
push
test
lahf
insb
cmpb
icebp
addr16
xorb
mov
les
mul
sarb
sbb
adcl
add
xchg
sub
fstps
leave
clc
arpl
into
mov
scas
mov
or
inc
and
popf
dec
lock
cmp
jp
pop
adc
pop
lcall
pop
mov
data16
or
xor
enter
sbb
out
add
push
mov
push
out
sub
cs
jg
iret
xchg
pop
and
push
insl
inc
xorb
lea
add
test
push
lret
jge
loope
jl
rorl
sub
jmp
ror
popa
gs
inc
cltd
loop
mov
int
mov
sub
push
inc
fiaddl
stc
cmp
jae,pn
dec
and
sti
addr16
add
andl
inc
cwtl
adc
sub
sbb
in
xlat
cmpl
pusha
notb
jne
add
and
push
setg
mov
fldenv
inc
push
negb
lret
js
jno
sbb
add
jns
xchg
ja
dec
mov
aaa
pushf
adcb
cld
rorl
insl
outsl
ljmp
fcmovne
lcall
cmp
dec
jae
repnz
into
add
pop
ljmp
iret
xor
lods
scas
jle
sub
repz
mov
adcl
aas
hlt
cltd
xchg
lods
lds
or
lock
icebp
icebp
in
push
fwait
lret
ret
inc
das
sbb
inc
cwtl
adcb
cs
or
inc
hlt
aas
scas
dec
aad
jbe
das
mov
sub
call
jbe
push
push
psubusb
cmp
sub
push
stos
mov
out
ja
and
lea
cwtl
mov
lock
inc
divl
in
inc
hlt
scas
pop
xor
icebp
add
pop
xchg
std
jae
mov
xchg
add
into
in
push
push
aad
add
add
dec
stos
and
bound
sarl
mov
xchg
test
leave
xchg
cmpsl
out
pop
jmp
lcall
ss
xor
mov
adc
add
pop
in
pusha
xchg
shlb
fmull
dec
mov
cmpl
imul
or
push
sbbb
fcmovu
adc
lret
pop
xchg
xchg
adc
loope
and
dec
cltd
shrl
movsb
shlb
ljmp
or
and
outsl
push
and
mov
dec
xchg
mov
sub
xchg
jo
or
pop
xor
mov
cltd
add
leave
push
xchg
mov
xchg
scas
dec
push
mov
pop
mov
insl
lahf
out
push
pop
ret
pop
jp
movsb
cmpsb
out
aas
shr
or
in
mov
xchg
mov
adc
int
mov
ss
vpshufhw
push
fisttpll
mov
scas
xchg
les
insl
xchg
pop
dec
cmp
ja
leave
push
mov
xorb
pop
cmc
inc
out
int
hlt
imul
fsubs
mov
not
mov
dec
in
push
push
sti
mov
cli
dec
dec
cwtl
daa
jo
fsub
outsb
pop
stc
lods
xchg
cmpsl
sbb
test
adc
xchg
aaa
test
es
xchg
xchg
sbb
notl
gs
daa
scas
aad
dec
cmp
push
mov
add
pop
mov
test
xchg
call
popf
and
sub
sbb
in
fisttpl
cltd
mov
xor
pusha
xchg
cmpsl
push
out
and
or
imul
inc
mov
sbb
clc
cwtl
jne
rcrl
je
cs
out
ret
or
or
add
std
mov
cmp
push
mov
test
mov
cltd
stos
cs
jno
mov
loope
xchg
mov
adc
stc
sahf
paddusb
push
in
jle
cmp
xchg
dec
add
pushf
push
arpl
xor
stc
jge
mov
clc
shrb
xchg
fs
xor
mov
int
jecxz
xchg
jge
dec
mov
outsl
and
jnp
stc
sub
test
mov
xchg
shrl
and
leave
jmp
push
add
mov
adc
adc
adc
cmpsl
or
shll
es
in
push
sub
push
jp
mov
push
lock
add
mov
or
sub
mov
popa
xor
push
fcompl
insb
pop
cmc
insb
xchg
adc
sbb
push
popa
flds
aam
fistl
add
outsb
xor
movsl
sahf
adc
and
fimuls
xor
mov
test
mov
mov
cmp
mov
stos
add
imul
jp
inc
mov
test
xor
mov
jp
lock
mov
lods
xchg
inc
mov
inc
and
hlt
aaa
jmp
jbe
xor
pop
jge
je
test
mov
js
sahf
aad
ljmp
or
test
xor
pusha
lret
add
mov
dec
mov
and
in
jge
ret
lock
add
adc
mov
ret
and
mov
push
xchg
inc
mov
sub
clts
jmp
cli
and
shlb
mov
pusha
aaa
ja
push
xchg
js
pop
push
pusha
fbstp
cmp
arpl
movsl
pop
negb
dec
mov
mov
xor
lcall
scas
pop
mov
sub
add
aaa
movb
adc
jbe
or
cli
sub
lret
push
and
add
mov
out
mov
push
les
loopne
jg
shlb
dec
dec
cmp
idivl
pop
adc
test
xor
fildll
sub
ljmp
dec
xor
jp
clc
cld
out
gs
aad
pop
sub
xchg
xchg
aam
outsl
gs
cmp
xchg
daa
or
subl
mov
aam
sub
enter
adcb
mov
test
cmp
inc
sub
std
mov
xor
cmp
lret
icebp
popf
loop
push
rsqrtps
pop
pushf
dec
cmp
sbb
mov
je
sti
dec
scas
loopne
xchg
lock
pop
repnz
gs
pop
cmpsb
lods
mov
push
hlt
jo
mov
stos
dec
pop
test
fnsave
adc
add
xchg
lahf
imul
jle
ficoml
lcall
int
pushf
repnz
test
pop
stos
orl
xor
enter
loop
rep
stos
and
and
or
push
ss
pop
xor
sar
jecxz
lock
adc
sub
rcll
mov
add
jge
mov
out
fildl
fnsave
push
jle
out
shll
and
mov
and
out
push
rcll
mov
daa
loope
add
into
mov
cmp
insb
xchg
inc
and
cmp
pop
push
push
mov
jp
inc
mov
push
sarl
fimuls
cmp
sub
add
xchg
jmp
mov
mov
ds
ret
in
stos
cs
cmpsl
adc
pop
mov
mov
xor
xchg
cmp
mov
mov
pop
add
pop
insl
sub
call
adc
stos
cltd
pushf
cmp
loope
ret
pop
dec
inc
cmp
xchg
cmp
repnz
gs
testl
inc
loopne
call
mov
fisubrs
orl
push
xor
push
push
test
rolb
es
sub
jnp
xor
inc
stc
mov
lret
fnstenv
push
pop
ret
pop
cmp
xchg
faddp
inc
fistl
inc
add
mov
sbb
and
aam
gs
pop
rcr
loope
and
jnp
mov
lods
and
inc
push
scas
es
dec
sub
sub
dec
sahf
mov
jecxz
or
mov
fs
insb
mov
fists
nop
repz
xchg
outsl
or
dec
lods
out
test
lock
jge
or
insb
fcom
outsl
stos
pushf
sbb
sub
mov
pusha
fwait
sti
out
adc
aaa
out
or
movsl
mov
or
or
fisubs
lret
cmp
movsl
leave
jg
es
add
jp
lcall
mov
enter
and
inc
testb
inc
push
pushf
test
xor
pop
jg
and
pop
in
jmp
mov
xor
dec
mov
mov
add
push
aaa
ds
scas
lea
cmp
sti
add
flds
out
xchg
dec
fcmovbe
into
ret
fdivr
dec
sub
xchg
popa
jno
ljmp
cmp
imul
addr16
enter
jb
xor
shlb
add
fimull
pop
lcall
std
mov
cwtl
insl
mov
gs
repz
dec
cld
mov
inc
pop
xchg
movsl
and
pop
daa
sub
inc
inc
and
dec
push
pavgb
arpl
mov
das
dec
divb
sbb
inc
lds
jbe
cmp
mov
adc
adc
dec
add
mov
cmpsb
popf
test
ror
lods
call
add
ret
jge
mov
es
sbb
shlb
cmpl
push
jmp
dec
aad
and
ss
je
inc
sarl
add
iret
in
out
or
in
mov
dec
outsl
dec
stos
in
test
std
cmpl
in
scas
mov
fisubl
lods
ret
lret
and
sbb
pushf
inc
mov
imul
fs
sbb
lock
xor
jnp
les
push
mov
fsts
inc
pusha
out
push
lcall
test
cmp
jecxz
sbb
ds
in
pop
mov
out
inc
cmp
sub
outsl
xchg
call
out
pop
out
mov
outsb
dec
xchg
mov
stos
imul
sub
jge
repz
ja
adc
push
fwait
mov
cli
pop
mov
test
sub
outsl
stc
call
fmul
test
outsb
xor
jle
sub
repnz
js
jmp
cs
xchg
dec
pop
fcom
pop
cli
repz
stos
enter
enter
rorb
arpl
mov
inc
add
cmp
push
sub
sbb
sub
aas
mov
pop
ror
add
mov
mul
cmp
mov
jne
aad
insl
and
int3
out
cmpsl
sbb
jnp
dec
outsl
popl
mov
lahf
repnz
outsb
dec
push
push
sub
and
lret
dec
dec
cmp
setl
push
push
and
jno
shl
popf
negl
imul
mov
in
in
scas
leave
lahf
loopne
fimuls
dec
cmp
sbb
out
outsl
pop
lock
mov
out
inc
lret
rol
sub
popa
stos
lock
lock
icebp
rcrl
jo
in
jge
push
push
in
xor
ja
in
aam
sbb
shlb
push
lret
test
adc
xchg
ds
pop
mov
xchg
jno
xor
mov
push
mov
cmp
or
popf
or
cmp
or
hlt
ds
neg
lods
push
jge
in
inc
jne
pushf
jp
fstpt
or
in
sub
imul
mov
pop
inc
pop
loop
or
pop
test
jg
push
out
cld
pusha
rorl
dec
sub
xchg
lds
test
jmp
subl
add
jecxz
dec
frstor
inc
shll
adc
jae
sbb
jecxz
in
aad
ljmp
and
lock
aad
movsb
dec
and
mov
or
xlat
in
and
and
stos
fs
out
push
sbbl
or
cld
fisttpll
ret
fstp
sbb
or
push
inc
adc
in
jmp
adc
mov
cld
mov
adc
mov
inc
hlt
inc
dec
dec
lods
test
add
cmp
fnstenv
mov
sbb
rcrl
insl
cld
aad
pop
das
fwait
fwait
or
jnp
in
stc
popa
aaa
imul
lcall
insl
cmp
xor
imul
mov
push
loope
push
cmp
mov
xchg
aam
into
mov
push
pop
sbb
loope
arpl
ss
loope
popf
mov
shl
enter
pushf
xor
sub
add
cs
cmpsb
mov
lea
loop
ja
lock
enter
xchg
enter
insl
fidivrs
arpl
sbb
repnz
or
das
lods
jno
lock
mov
insl
cs
test
mov
pop
pusha
pop
jno
jae
into
xchg
pop
bound
mov
notl
in
push
add
mov
lret
inc
ja
jl
sub
ss
sahf
sub
inc
add
cmpsb
repnz
mov
pop
shll
cmpsb
mov
push
jo
bound
inc
addb
jnp
aas
sub
mov
imul
sbbl
pop
lret
mov
cld
cltd
mov
pop
push
cltd
lods
sub
adc
lds
arpl
cli
aad
testl
push
mov
fdivrl
add
sbb
outsb
sub
jno
pop
push
fbstp
orb
hlt
fs
jmp
sti
xchg
ret
scas
test
lcall
mov
js
std
shll
or
pop
mov
lods
mov
sub
or
arpl
test
sub
cmp
cmp
ss
push
sub
push
or
stos
mov
pusha
cli
push
xchg
xchg
cwtl
or
dec
imul
and
mov
test
add
add
daa
lods
sbbl
ljmp
sahf
mov
or
int
mov
xchg
cmp
or
push
lret
push
xchg
mov
out
mov
push
cltd
stc
sbb
ss
sub
fld
aas
adc
xchg
test
xchg
fisttpl
mov
out
mov
mov
repnz
addr16
push
rcrl
loop
jns
inc
or
insb
fcmovnu
hlt
int
pop
mov
lahf
pop
in
xchg
mov
jno
sub
hlt
push
xor
jbe
jl
addl
ss
sbb
mov
idivl
mov
lds
jl
daa
add
pop
aad
outsl
nop
jmp
add
inc
sbb
int
push
idivl
cli
xchg
test
cmpsb
out
inc
sarl
jns
jge
jbe
sahf
sahf
jo
xor
cmp
pusha
roll
lcall
cmpl
inc
mov
incb
andl
jg
or
orb
aad
adc
aas
out
sahf
cwtl
cld
push
ds
popf
add
fstps
inc
adc
ss
fwait
or
dec
cmp
mov
mov
enter
test
mov
pushf
testb
add
je
xlat
push
cmp
in
inc
and
adc
aam
mov
jecxz
push
adc
jmp
stc
in
loope
xchg
mov
add
sbbb
mov
loope
mov
jb
adc
std
inc
insb
or
cmp
gs
sub
push
sbb
sahf
sahf
in
sbb
jbe
out
inc
cmp
enter
sub
pop
enter
xchg
test
push
test
mov
cli
xor
mov
inc
icebp
lcall
mov
andl
lods
pushf
ljmp
cs
sub
test
push
xchg
aad
int3
sub
or
jecxz
add
xlat
je
xchg
adc
repnz
mov
bound
mov
xchg
in
outsl
sarl
or
adc
add
dec
repnz
out
push
mov
out
rcl
aad
sti
mov
xor
push
out
sbb
cmp
pop
sti
repz
mov
adc
rcll
add
repz
cwtl
xor
outsb
movsl
sub
lock
pop
pop
sub
ret
stos
mov
sbb
push
outsl
pushf
sti
aaa
jbe
popf
mov
daa
adc
ljmp
aaa
sbbl
test
jge
aad
repz
mov
push
jg
testl
fcmovnb
scas
bound
fiadds
pop
lret
gs
fcompl
mov
add
mov
xchg
xor
add
mov
dec
push
xor
fsubrp
mov
inc
jb
test
push
pop
shll
in
sub
inc
rcll
hlt
loopne
or
cmpsb
rorl
or
dec
xlat
in
dec
sbb
imul
push
jae
xchg
xchg
adc
ja
pop
pop
inc
outsb
inc
mov
daa
mov
dec
add
ss
jp
dec
fimuls
je
leave
pop
xchg
movb
and
fisubrl
dec
mov
pushf
adc
mov
or
lds
flds
push
hlt
sub
pusha
into
fsubrs
push
pop
lret
dec
ret
es
xlat
sbb
mov
enter
adc
pusha
jb
aam
add
pop
mov
loop
pop
push
aad
bound
pop
inc
outsl
imul
ljmp
mov
jae
sbb
jae
cmp
ss
scas
addr16
cmpsl
les
adc
insb
pusha
mov
aaa
push
inc
cmp
xor
scas
leave
add
jl
pop
in
in
mov
cwtl
daa
test
and
in
cmp
mov
enter
sub
lcall
pushf
icebp
bound
pop
mull
test
pop
mov
clc
cmp
mov
and
adc
mov
push
outsl
xchg
mov
xchg
sbb
jecxz
scas
scas
adc
loope
xor
cld
jecxz
xor
outsl
or
cmp
out
and
test
mov
xor
mov
imul
and
test
cmp
jmp
pop
addr16
jg
cmp
imul
icebp
or
fdivrl
or
pushl
lock
mov
push
add
xchg
cmp
jmp
adc
xchg
into
adc
jb
in
fiadds
push
mov
xchg
jp
cmp
and
dec
jecxz
sahf
jge
xchg
loopne
jl
sti
mov
lret
dec
cmp
fs
jg
aaa
cmpsb
in
mov
adc
movsl
or
mov
sub
fwait
sub
scas
pop
push
cmp
push
cmpsl
test
popf
rorb
add
ret
pop
stos
push
data16
xor
inc
imul
mov
xor
mov
xchg
pop
leave
out
push
push
add
addr16
idiv
out
push
sbb
lods
pop
aam
icebp
pop
push
push
push
stc
cmp
sub
enter
mov
or
push
jbe
leave
mov
ficomps
xchg
loop
sub
pop
mov
sbb
nop
sbb
aad
sub
push
cmp
sbb
sub
cmpsl
leave
cltd
inc
or
jb
jle
add
push
xor
cmpsl
inc
in
fisttpl
sbb
xor
hlt
pop
test
dec
in
sbbl
pusha
aad
dec
aas
sub
popa
mov
push
repnz
adc
loopne
mov
jbe
pop
jo
out
or
pavgb
movsb
adc
sbb
je
sub
call
pop
xlat
xor
xchg
gs
lods
push
loop
push
push
jae
add
int
outsb
push
jo
mov
loope
in
shrl
pop
cli
hlt
mov
out
lcall
pop
insl
in
push
out
fisttps
arpl
cmp
mov
inc
jo
pop
jae
fldenv
cmp
pop
or
bound
inc
push
mov
test
add
adc
addr16
sbb
inc
call
sysexit
leave
sbb
inc
mov
push
pop
pop
xchg
pop
fisubrs
sbb
outsb
inc
adc
cli
mov
adc
lds
sub
fstpt
inc
push
hlt
popa
lcall
xchg
insl
sbb
or
subl
lret
loop
nop
jmp
mov
push
cli
cmp
movsb
and
scas
mov
rclb
sub
xchg
daa
or
imul
leave
sbb
not
mov
imulb
add
xorl
stos
out
inc
jne
mov
scas
mov
jbe
jmp
jle
jno
mov
push
dec
xlat
mov
cli
in
mov
andl
push
and
add
push
jo
rcrb
xchg
mov
rcl
test
rcrl
add
adc
adc
mov
jnp
mov
push
add
mov
push
icebp
out
das
gs
dec
jg
jno
xorb
mov
out
das
xchg
insl
loop
pop
mov
inc
cld
pushf
pop
shl
test
jae
mov
xchg
mov
loope
inc
jg
in
sahf
pop
test
out
movsl
or
cmp
clc
sahf
pop
out
out
mov
in
push
decl
push
movb
adc
lock
imul
mov
jl
jge
lods
lds
lea
lcall
cmc
clc
adc
roll
jmp
insl
and
sub
scas
or
mov
pusha
nop
jl
lahf
int
sub
and
add
xor
fstpt
xor
imul
imulb
adc
iret
or
mov
sub
aad
sub
cltd
out
mov
inc
dec
cmc
cmp
cmp
cmpsb
repnz
ffree
cs
shlb
into
dec
xor
iret
in
push
insb
bound
insl
seta
je
push
push
mull
mov
sbb
sub
cmp
pop
dec
inc
ja
aad
adc
stos
das
cwtl
leave
dec
or
inc
adc
mov
mov
cmp
pusha
mov
inc
jo
scas
repz
push
xchg
inc
lret
pop
push
and
add
adcl
dec
xor
adc
out
inc
xor
test
rorl
lret
mov
nop
rcl
testl
icebp
es
fistps
jno
adc
push
in
call
pop
shrb
sbb
outsb
pop
push
js
daa
dec
xchg
leave
mov
or
sub
ret
lods
int3
sahf
call
sbb
xlat
xchg
mov
xchg
lds
lcall
ljmp
mov
leave
jae
or
mov
push
popf
in
jecxz
ret
fcomps
jbe
xorb
in
mov
dec
rcrl
or
jae
and
fbld
fcoml
das
mov
cltd
fsts
enter
jns
xor
sub
xor
iret
push
mov
mov
xchg
inc
aam
sub
fs
sbb
push
movsb
jmp
push
test
inc
cmpsl
add
ret
mov
enter
insb
xlat
push
lock
push
lods
sub
orl
sbb
and
rclb
adc
cmp
xor
cmp
mov
xor
stos
ret
jmp
pop
sub
ds
mov
adcl
push
dec
fisubrl
inc
mov
movsb
mov
mov
pop
mov
lret
stos
push
adc
dec
jl
sbb
out
and
push
clc
mov
lret
jecxz
mov
shlb
sbb
sahf
test
enter
mov
lahf
stc
push
dec
outsl
rorl
test
push
pusha
addr16
dec
ss
cmp
popa
or
cli
pop
cmp
pop
jbe
cmp
pop
pushf
and
mov
jle
mov
fwait
xchg
out
sub
ficompl
add
leave
pop
popf
fs
push
fdivrl
mov
lahf
in
adc
fbld
mov
int
in
push
mov
outsl
cmpsb
sub
mov
xchg
repz
pop
ds
call
adc
test
jmp
push
movsl
les
jmp
call
or
xchg
cmpl
dec
cmp
dec
push
sahf
inc
je
call
enter
lret
pop
imul
cmovno
loope
enter
hlt
xchg
adc
es
xchg
sub
pop
insb
adc
outsl
outsl
cmpsl
scas
shlb
es
cmpsb
jge
push
loop
mov
dec
lcall
cld
pop
es
pusha
hlt
or
jge
mov
cmp
pusha
lahf
xor
and
push
xchg
jbe
adc
out
jbe
xchg
lds
mov
movsb
ret
cmpl
in
inc
push
dec
dec
jno
xor
and
cmpsl
bound
jp
pop
into
orl
sbb
pop
add
add
fisubrs
mov
or
iret
xlat
aad
xor
adc
in
in
pop
ficompl
out
cvtps2pi
push
sub
repnz
or
enter
rep
push
mov
xor
sbb
pusha
xor
loopne
js
sub
insl
rorl
movsb
mov
into
repz
cmp
xchg
lods
call
leave
add
incl
aas
or
stos
pop
inc
sub
xor
mov
inc
cmp
jnp
xchg
push
test
fcmovbe
imul
push
xor
dec
dec
out
cmp
fisubl
sahf
test
rcrb
scas
sbb
push
jb
xor
cmp
faddl
cld
adc
sbb
push
add
mov
in
lcall
sub
xlat
lea
mov
xorb
sbb
xchg
push
bound
mov
mov
mov
fmulp
cmpsl
mov
push
xchg
pop
xchg
mov
add
fistl
andb
pop
rcll
xchg
pusha
inc
sarl
mov
outsb
cli
shlb
cmpsb
pusha
cli
pop
mov
lret
mov
jp
jb
or
lcall
xlat
mov
push
inc
iret
jecxz
enter
add
aam
int
push
mov
popa
mov
lret
pop
jbe
dec
cltd
imul
push
js
andl
lods
pop
ficoml
leave
in
sbb
sbb
stos
xchg
icebp
jp
sub
test
cmp
arpl
arpl
sbb
fsubrs
sub
or
inc
mov
outsl
pop
inc
movsb
insl
or
fnstsw
push
das
hlt
and
inc
add
xchg
lea
xor
dec
xor
repz
call
inc
add
jp
leave
sub
cmp
or
jne
je
mov
jne
pop
mov
add
sarl
fsubl
je
xchg
jno
mov
aad
pop
jnp
sub
vcvtsi2ssl
hlt
jb
pop
je
fsubr
mov
cmc
push
fistpl
xchg
call
or
aad
adc
push
push
add
dec
mov
inc
rorl
aaa
test
push
out
pop
push
and
mov
cwtl
je
mov
daa
dec
les
lods
clc
and
cmp
aad
fs
and
int3
cwtl
add
and
sti
movsl
xacquire
pushf
bnd
icebp
jns
out
mov
sarl
and
test
push
push
jp
arpl
aam
aas
pop
add
mov
movsl
mov
pop
aad
sub
and
adc
fidivrl
mov
or
sbb
sahf
outsb
mov
xchg
fwait
int3
pop
xor
dec
dec
push
call
sub
xchg
and
mov
lahf
mov
iret
movsb
hlt
inc
lea
and
sub
mov
sahf
sbb
jle
mov
pop
in
in
xorl
sub
or
shlb
int3
lret
cmp
lods
lea
sar
int3
cmp
pop
loop
fwait
xor
cmc
movsl
adc
loop
clc
mov
add
out
loope,pn
call
push
loop
dec
xchg
data16
inc
sbb
xorb
mov
out
xchg
lahf
out
dec
sub
jp
jp
adc
rolb
sarb
test
sbb
mov
sbb
filds
adc
out
sti
scas
jle
lahf
sbb
or
int
and
adc
cmpsb
jecxz
enter
pop
sbb
fiaddl
rorl
xchg
or
mov
das
mov
cmpsl
repz
outsl
xlat
jbe
push
dec
mov
scas
push
repnz
cmc
add
stos
mov
adc
leave
imul
in
popa
ja
pushf
les
popf
mov
push
xor
sub
movl
lret
jl
jns
in
cmp
xor
rolb
cmp
out
js
jge
faddp
dec
sub
cwtl
aam
js,pt
int
addr16
pushf
xor
les
dec
shrb
mov
jns
adc
sub
subl
pop
push
in
std
or
or
cld
insb
and
fwait
push
sti
aad
add
push
js
cmpsb
fnstcw
test
pusha
pop
jbe
mov
pop
scas
fbstp
negl
dec
leave
and
xchg
mov
lret
mov
stos
mov
mov
mov
cmpsl
add
stos
push
pusha
mov
push
in
in
loope
mov
dec
in
lahf
sbb
in
mov
cmpsb
pop
dec
inc
xor
or
add
xor
and
mov
or
mov
rcrl
popf
mov
jge
arpl
cmp
jo
cmp
pop
orl
mov
sbb
icebp
push
repnz
in
adc
mov
adc
outsb
inc
sub
inc
test
jle
addr16
or
call
dec
bound
arpl
adcb
je
push
pavgb
idiv
xlat
or
push
add
loop
push
and
mov
adc
call
pop
andb
mov
xor
or
call
xchg
push
lahf
push
push
inc
testl
rclb
push
push
xchg
ret
test
mov
sbb
lcall
sbb
push
jne
aaa
notl
lds
pop
out
pop
lret
inc
dec
pop
cs
adc
jmp
mov
cmc
jg
and
dec
aaa
push
out
fstpt
xchg
and
dec
scas
lock
adc
cmc
mov
shll
mov
sbb
cmpl
mov
call
arpl
push
div
scas
pop
dec
sub
dec
test
add
mov
fidivl
lcall
push
or
insl
daa
ljmp
xor
dec
mov
bound
xor
fmull
popa
sub
lret
ror
loop
data16
sti
xchg
rcrb
sbb
jnp
cmpsl
jo
mov
andb
dec
push
mov
jno
jge
jnp
ljmp
push
scas
push
testb
mov
dec
nop
xor
out
mov
and
stos
sub
sbb
rclb
ficompl
xor
sbb
cwtl
decb
andb
nop
les
mov
fldt
js
aaa
inc
in
cmp
out
mov
mov
mov
fwait
ret
test
daa
sub
test
cmp
xchg
mov
add
sbb
push
inc
pop
sub
lret
out
push
out
ljmp
sub
mov
test
xchg
outsl
cltd
pop
sarb
pushf
push
dec
jb
push
push
add
notb
xchg
or
cmp
out
aaa
push
in
mov
mov
cmpsl
xor
and
jp
ret
mov
push
push
adc
xchg
jp
pusha
lods
sti
or
int3
stos
aas
aam
ficompl
push
mov
push
aad
and
jecxz
dec
sbb
jl
cmp
cmp
push
outsb
sahf
jg
stc
pop
jp
pop
or
xchg
and
mov
mov
push
mov
jnp
cmp
sub
stc
ret
ds
xchg
ds
jge
and
fists
sub
push
jge
xorb
ss
jne
pop
jae
jno
push
shrl
in
sbbl
aad
and
push
jle
jecxz
jge
test
es
adc
xor
fisubs
pop
adc
or
adcl
call
stc
mov
test
ret
lcall
add
sub
cwtl
cmc
test
insb
jne
lahf
adc
mov
in
sub
mov
mov
lock
sbb
push
lds
pop
add
push
mov
dec
sub
shll
dec
or
jp
sti
push
rorb
gs
inc
xchg
xchg
js
idivl
fimull
cmp
inc
add
movsb
sub
lods
fistpl
cltd
cmp
sub
jg
inc
inc
fistpl
fadds
pop
adc
pop
test
pusha
lret
into
xchg
popf
push
aas
test
push
cwtl
test
jne
pusha
push
ret
push
inc
aam
das
push
movsl
inc
cmp
cmp
jbe
cmpsb
inc
scas
xchg
adc
jle
lods
mov
cmp
test
out
push
jmp
jge
fimull
inc
cli
fstpt
sub
inc
dec
jb
cmp
xchg
ljmp
orb
pop
es
test
jg
xlat
or
int3
loopne
adc
pushf
adc
ja
cltd
push
pop
call
xchg
push
fistpll
mov
jmp
sub
test
fidivl
lds
cli
bound
mov
mov
xchg
and
mov
pop
shll
xor
pusha
js
cmpsb
or
es
aad
daa
cmpb
mov
das
in
fptan
jo
std
pop
mov
inc
fsubrl
mov
arpl
test
addr16
pop
xchg
jl
dec
sub
jne
fadds
bound
mov
pushf
loop
push
mov
push
jecxz
jl
mov
fcoms
adc
cmp
or
jns
pop
pop
roll
add
rcll
xchg
xchg
cmp
pop
popa
jne
clc
mov
xor
or
adc
das
lahf
xchg
xchg
push
or
cli
lcall
mov
mov
in
add
sub
fnstcw
rcll
mov
cmpsl
mov
test
lods
out
and
out
or
leave
mov
and
fistpl
loope
in
mov
outsl
mov
pop
repnz
cltd
aad
data16
inc
jbe
or
push
insl
xchg
paddusb
and
sbb
loop
push
or
sbb
lods
inc
into
in
aaa
push
pop
xor
mov
or
leave
jmp
pop
fbstp
cmp
jmp
mov
pop
sub
movntps
cmp
or
out
fucom
jne
xchg
cmc
add
mov
rcl
outsl
jo
jns
setno
insb
pop
cmp
push
push
je
adc
xchg
fs
dec
jno
cmp
fstpl
out
shrb
jne
jmp
repz
sub
scas
inc
je
jl
xchg
push
sub
jns
aam
test
data16
cltd
or
out
subb
dec
add
out
sub
rcrb
mov
or
call
icebp
mov
daa
push
xlat
pop
adc
hlt
pushf
test
and
outsl
les
jmp
push
jg
or
popa
push
dec
out
push
mov
sub
xor
adc
test
iret
rcll
dec
inc
xlat
xchg
mov
xchg
jae
fcmovbe
sbb
out
dec
cmc
pop
and
mov
adc
fiaddl
lock
mov
mov
je
xchg
xchg
pop
iret
nop
mov
mov
sub
rcll
popf
subb
mov
aas
or
mov
pop
jl
das
and
adc
hlt
repnz
jo
cltd
adc
mov
mov
pop
ficompl
jns
insb
insb
sbb
sbb
aad
loopne
cmp
sbb
outsl
fmuls
sub
pushf
mov
repz
in
es
sub
sbb
jnp
fcoml
fiaddl
add
cmc
paddsb
push
insl
adc
pop
pop
xor
bnd
push
fldt
in
push
ret
push
cmp
scas
and
loope
inc
adc
out
or
dec
or
xchg
xchg
xor
cmp
fcmovbe
sub
addr16
cmpsl
fst
pop
cmp
insl
movsb
inc
cmc
pop
or
push
in
push
fstps
sbb
cld
ret
jne
add
xor
sub
shll
aaa
or
cmp
test
repnz
movsl
mov
mov
adc
jl
and
fsubrl
inc
xchg
pop
out
jge
out
popa
pusha
mov
das
push
rclb
sbb
mov
xchg
out
scas
mov
hlt
dec
pop
xchg
scas
cmp
out
scas
call
inc
cli
std
hlt
mov
adc
pop
sub
imul
aas
ret
inc
push
cld
jmp
pop
jp
inc
mov
mov
adc
jae
and
inc
adc
test
ficoml
pop
fld
push
sub
xchg
push
xchg
por
mov
inc
shll
mov
shl
hlt
lret
mov
xor
mov
add
xchg
test
mov
jmp
incb
xchg
hlt
adc
pop
mov
push
test
xor
testb
push
xor
and
inc
or
adc
mov
lock
cmc
inc
push
push
mov
ljmp
orl
pop
fldenv
ljmp
int
mov
fcoms
cmp
mov
cmpsl
xor
outsb
xor
and
cwtl
adc
es
mov
je
jl
cmpsl
js
sub
rclb
mov
in
mov
xor
rcrl
cmp
je
movb
or
leave
imul
cld
mov
testl
aad
add
mov
and
sbb
and
das
les
shrb
mov
mov
cmp
inc
mov
shll
pop
add
fldcw
shrl
lods
sahf
enter
fwait
mov
outsl
fcoml
ljmp
sub
test
rcrl
mov
arpl
mov
sub
xchg
insl
pushf
or
clc
nop
jle
dec
or
bound
loop
test
adc
sbbl
cmpsb
and
mov
cmpsl
sub
addr16
gs
psrld
stos
or
mov
adc
fdivrp
sbbb
popf
and
push
or
cwtl
test
adc
stc
sub
xchg
pop
pop
xor
mov
xchg
subl
jp
xlat
sbbl
cmp
push
rcr
fsubr
pop
inc
pop
fadds
push
fidivl
bswap
addl
into
pusha
addr16
jne
xchg
dec
xchg
mov
insb
shrl
push
imul
lds
stos
movsb
pop
pop
insb
lods
xor
mov
pop
clc
cmp
sarl
repz
in
adc
insb
jne
xor
jo
fimuls
push
dec
pslld
iret
sub
push
lret
cmpsb
lods
lea
and
mov
adc
sbb
lahf
outsl
push
add
movsl
pop
cmpsb
push
call
inc
xchg
ljmp
bsf
mov
mov
mov
jbe
nopl
test
adc
cmp
sbb
sbb
nop
out
lds
mov
mov
je
jns
ret
int
or
pop
add
sarl
push
cmp
inc
jg
adc
inc
pop
mov
scas
or
out
fwait
dec
or
scas
rcl
lret
xchg
cltd
mov
dec
mov
dec
push
ret
shufps
and
jo
and
ret
dec
arpl
cli
xchg
shl
cmpb
inc
int3
fldl2t
pushl
mov
lcall
mov
jae
mov
shrb
mov
inc
sub
adc
sbb
insb
pop
lcall
negb
das
iret
lret
xor
cld
sbb
cltd
xlat
push
ret
dec
mov
add
outsb
inc
imul
sbb
lret
mov
cmp
mov
lahf
ret
xchg
lods
inc
xlat
movsb
repnz
adc
hlt
mov
mov
and
add
stos
sbb
data16
rorl
gs
cmp
xchg
pop
adc
insb
fwait
dec
xchg
mov
je
scas
push
xor
xchg
sub
pushf
sub
mov
daa
xchg
fiadds
inc
push
mov
add
insb
je
mov
xchg
nop
xchg
jo
xor
ja
gs
mov
stos
pop
js
divb
scas
mov
xchg
and
adc
sub
cs
test
ret
cld
sub
and
outsb
fcoms
ja
push
int3
push
jbe
repnz
idivb
ds
sti
inc
jne
pop
mov
inc
xor
pop
jecxz
iret
ja
jp
push
push
pop
jg
popa
iret
push
or
int3
aaa
push
clc
ja
mov
jnp
shll
push
lock
xor
inc
loope
inc
movsb
movsb
inc
out
push
mov
cmp
je
sbb
sub
gs
lock
dec
pop
push
pop
push
adc
sarb
xchg
aas
mov
hlt
popa
and
mov
insl
inc
mov
xchg
mov
lcall
cmc
or
push
xchg
jnp
aad
jge
xor
les
roll
pop
mov
ss
pop
pop
rcll
push
fstpt
lcall
push
lock
js
pop
push
sbb
pushl
or
adc
out
ljmp
data16
cli
in
fnstenv
ret
dec
sbb
push
js
sbb
rcrb
mov
stos
sbb
aam
cmp
dec
pushf
cmp
jmp
mov
into
scas
insl
mov
and
ljmp
mov
or
es
dec
shr
andps
pop
mov
popl
sbb
and
xchg
lods
and
pop
shll
adc
add
xchg
adcb
out
out
mov
icebp
shr
sub
push
outsb
mov
sbbb
subl
pop
jge
lock
mov
push
inc
cmc
fdivp
pushf
aad
clc
xchg
cld
das
push
sahf
xchg
js
xchg
mov
test
dec
lahf
jb
mov
pop
sti
jno
jns
rclb
popf
in
popa
push
ljmp
fiaddl
push
or
inc
dec
ja
int3
adc
popa
divb
stos
sbb
inc
fistpll
cld
inc
jo
dec
cmp
sbb
mov
test
imul
repnz
inc
pop
mov
xlat
lret
and
mov
lock
mov
pop
xor
je
data16
mov
jo
into
or
jno
cmc
cmp
lea
xchg
mov
add
lods
rol
lock
mov
push
notl
shll
mov
les
popa
push
jbe
inc
shrl
clc
pop
sub
ret
loop
jl,pn
sbb
popf
add
inc
jne
push
and
sahf
stos
addr16
mov
pop
iret
xchg
cltd
xor
ror
decb
dec
cmpsb
adc
sbb
pusha
mov
aaa
call
xchg
jne
push
daa
lret
and
mov
dec
ja
lret
push
out
xor
xchg
popa
test
test
cmp
jb
or
pop
shll
icebp
lret
add
test
lcall
inc
cmpsl
lret
sarb
mov
imul
pop
xorb
xor
mov
adc
cwtl
cmpsl
inc
xor
sbb
std
in
lahf
xor
rolb
das
aaa
xchg
jo
mov
mov
mov
cwtl
xor
mov
xor
shll
insl
sarb
rclb
sub
dec
aad
add
clc
mov
push
insl
shrb
xor
cmpsb
loopne
ljmp
jno
mov
fdivrs
inc
ret
inc
cmp
mov
pop
scas
jb
ds
jg
je
rcrl
xchg
mov
into
outsl
mov
int
in
insl
stos
mov
xchg
sar
sub
or
outsb
push
subb
scas
ret
mov
pop
dec
test
fcomip
push
jmp
xorl
push
push
cmp
xor
pop
adc
sti
mov
lds
push
fsub
sbb
jnp
pop
cmp
adc
stc
pop
imul
popl
adc
push
push
or
push
pop
int3
mov
jp
addb
sarl
in
fisttps
jae
mov
mov
pusha
push
pop
imul
call
pop
aaa
enter
pop
fcmovnb
ficoml
sbb
inc
cld
lea
ret
jmp
mov
dec
test
adc
push
xor
stos
call
repnz
xor
jmp
sbb
fldln2
call
add
pop
outsl
pop
pop
into
mov
mov
jnp
stos
lret
mov
mov
cmp
push
lea
lods
and
pop
repnz
clc
gs
xchg
fwait
pop
out
mov
lea
cs
int
mov
dec
mov
addr16
fcmovu
push
xchg
and
hlt
mov
push
sbbl
adc
ljmp
loop
lods
insb
jbe
lahf
mov
jne
sbb
push
pop
mov
movsl
mov
ljmp
jmp
out
jg
push
jnp
gs
mov
subl
data16
and
imul
out
scas
xlat
xchg
xor
sbbl
mov
lods
testb
mov
pushf
xchg
mov
ror
and
pushf
push
pop
sub
pop
ds
fiadds
int
mov
fwait
lock
cmp
push
fdivp
stos
push
mov
pop
and
sbb
cli
lds
add
push
cli
jmp
rolb
pop
add
or
jle
loope
inc
icebp
sahf
jns
cmp
aas
push
xchg
cld
cmp
inc
lcall
xchg
jns
fucom
insb
push
mov
and
arpl
mov
adc
scas
test
gs
sahf
movsl
sbb
rcll
push
jnp
lods
jns
jl
insb
popl
fistpll
arpl
or
xchg
push
xlat
add
or
out
inc
or
popf
lret
add
sub
cld
dec
add
adc
in
jg
mov
cmpsb
mov
mov
test
cmp
in
push
imul
xchg
sbb
pusha
lea
or
sahf
aam
mov
or
lods
test
push
stc
test
sub
jle
sub
bound
mov
fs
sub
gs
movsl
or
push
inc
and
xor
in
nop
arpl
push
sahf
cmpb
loop
enter
xchg
mov
fistl
cli
and
scas
or
jns
mov
cmc
dec
ficomps
mov
xlat
push
aam
jmp
dec
cmp
test
xor
inc
inc
test
mov
lds
in
out
out
outsb
lods
jg
jb
push
outsl
add
sub
out
rcrb
popf
test
iret
loop
int3
sub
sub
and
cmp
dec
fstl
add
or
cmp
mov
xor
insl
mov
xor
stos
mov
xor
fwait
notl
addr16
xlat
push
jo
fisubrs
in
roll
test
shlb
lods
loope
out
mov
cmpsl
cmp
adc
xchg
mov
clc
mov
jmp
mov
pcmpeqw
push
sbb
cli
stos
xchg
aas
es
xchg
movl
mov
sbb
addr16
es
test
jmp
sbb
aas
scas
lods
loopne
in
dec
mov
cmp
or
adc
and
fbstp
mov
scas
mov
cmp
ret
nop
xchg
pop
and
mov
push
imul
adc
cli
cmp
dec
mov
scas
repz
xchg
test
adc
mull
rolb
sub
adc
arpl
or
inc
or
fidivrs
fdivrp
dec
mov
mov
es
fs
rorl
xchg
in
inc
std
in
sub
dec
out
mov
out
insl
je
xchg
out
stos
pusha
inc
lods
inc
addr16
loopne
cs
les
xor
pushf
dec
pop
xlat
sub
fistps
xor
inc
lahf
sbb
sbb
lea
or
xor
add
xchg
std
sub
fwait
mov
ja
shrl
sub
outsb
scas
test
add
adc
push
orb
cmc
fildl
xor
jge
stc
sbb
mov
ret
sahf
rcll
jl
dec
loopne
icebp
or
pop
in
jns
lock
and
pop
lock
ret
shll
movsb
push
mov
mov
sbb
cmp
movsb
jbe
test
fdivs
cs
les
pop
mov
fsubrs
repz
xor
sbb
mov
dec
and
mov
cmc
and
mov
test
lret
dec
orl
aaa
push
mov
sbb
mov
mov
cmp
jmp
sbb
inc
lahf
push
jb
fmull
imul
cmp
push
push
pushf
sub
shrl
jmp
frstor
add
xor
jne
cmpsl
push
lods
push
imul
ret
psubd
jno
mov
adc
add
jle
cmp
movsb
mov
lahf
mov
les
movb
mov
out
leave
in
stc
add
fmull
loope
pop
roll
lods
es
cltd
push
mov
push
dec
inc
int3
mov
je
lret
dec
add
inc
daa
or
cmpsb
cmpsl
adc
sub
mov
idiv
icebp
icebp
push
xchg
sub
test
dec
jb
lahf
adc
out
sbb
or
stc
inc
sbb
push
imul
stos
les
jl
push
push
cmpb
pop
mov
pop
mov
aas
mov
xor
and
pushf
std
lret
cld
dec
mov
sub
jnp
pop
fldcw
mulb
push
pop
mov
test
add
ja
and
out
imull
sub
repnz
adc
daa
cmpsb
push
sbb
mov
push
mov
popf
call
loope
iret
hlt
loopne
inc
jmp
xchg
jmp
jno
pushf
cmpsl
and
mov
ja
lods
das
psubq
dec
out
xchg
icebp
call
test
jmp
stos
aaa
adc
xchg
push
leave
push
or
jecxz
sbbb
popa
adc
shrl
pop
lahf
rolb
fwait
pop
inc
cwtl
xor
iret
enter
dec
xor
lock
pushf
or
mov
xchg
xchg
jl
mov
aad
insl
nop
iret
cli
jnp
mov
mov
aas
and
lret
xchg
es
outsb
push
cmc
addl
jae
and
insb
mov
fs
jbe
ret
xor
in
mov
sub
mov
jae
push
daa
xlat
mov
and
inc
mov
mov
push
cs
loopne
mov
xchg
xchg
fcoml
sub
pop
stos
pop
setnp
and
sub
mov
aam
pop
mov
inc
sbb
push
sub
fs
mov
add
xchg
gs
xchg
push
pop
fidivrl
mov
bound
adc
jne
xor
pop
mov
arpl
xlat
mov
push
lret
dec
dec
mov
pop
pop
fs
dec
inc
cmpsb
fidivrs
mov
cltd
arpl
pop
mov
scas
sbb
push
xchg
jmp
daa
icebp
inc
or
stc
gs
dec
push
mov
repz
and
xor
xor
fidivl
jmp
xor
in
pop
inc
in
mov
in
add
jns
andb
sbb
leave
cmp
mov
inc
sub
push
sub
shr
int3
lods
cmp
out
adc
jg
add
xor
cli
lods
repz
shrb
cmpsb
fs
jnp
dec
je
ds
stc
and
mov
scas
mov
mov
mov
outsb
jg
sti
cmpl
lret
aad
cltd
clc
pop
push
jle
jbe
out
mov
loope
in
test
dec
cmpsl
scas
out
cmp
aas
lock
decl
insb
dec
push
adc
pop
dec
and
jb,pn
mov
out
clc
repz
addb
data16
roll
sub
add
jle
push
add
ljmp
ss
lds
mov
cmp
insl
add
inc
sub
fisubs
xchg
repz
call
mov
dec
mov
adc
mov
dec
sbb
adc
and
jge
and
adc
mov
sub
in
jbe
add
xchg
jmp
sahf
jmp
iret
xor
data16
pop
shrd
out
mov
mov
jg
adc
addb
test
in
insb
mov
loopne
xchg
xchg
jl
ss
fdivp
xor
adc
pop
out
nop
bound
repz
mov
pop
inc
dec
idiv
mov
mov
cmc
rcl
xchg
sbb
cs
stos
xchg
jecxz
adc
into
adc
lods
xor
cs
sbb
inc
dec
ljmp
je
cmpsb
sub
jge
enter
inc
testb
in
and
repnz
push
sbb
aad
push
add
sbb
adc
in
mov
add
in
ret
into
mov
jb
dec
arpl
subl
add
outsb
stc
xor
shlb
jno
cmc
pop
into
mov
sub
cmp
or
adc
test
jecxz
push
sub
aam
or
pushl
rcl
dec
cmp
push
mov
jge
push
sbb
jo
and
loope
lods
out
xchg
xchg
test
push
push
push
or
mov
sbb
jge
pushl
inc
addl
sti
data16
or
idivl
and
mov
push
and
push
mov
aaa
add
enter
movsl
mov
cld
push
lahf
lret
add
mov
outsb
fisubrl
inc
and
jmp
in
mov
mov
xor
out
mov
xor
xchg
imul
mov
jp
or
lds
cltd
mov
push
sbb
push
shlb
sbb
jno
cwtl
add
jns
inc
sahf
jne
lahf
push
pusha
inc
add
adc
mov
jle
mov
dec
fmull
repnz
jmp
out
jo
std
adc
pop
imul
in
pop
xchg
mov
adc
add
in
sub
hlt
xchg
xchg
movsb
daa
pusha
movsb
je
inc
imul
imul
loope
sbb
mov
xchg
mov
mov
push
loope
jbe
imul
mov
mov
sbb
cld
jo
stc
and
outsb
adc
nop
fcomip
stos
lret
mov
leave
nop
pop
cli
xor
imul
clc
imul
je
fsts
adc
repz
sub
arpl
lret
xchg
mov
jb
fcmovnu
sbb
pop
popf
pop
std
repnz
push
mov
test
imul
inc
cld
xor
cli
imul
aad
outsl
jp
jl
xchg
mov
jae
out
les
outsb
lret
xchg
sbb
or
xor
lds
stos
ss
andb
adc
pop
xor
mov
mov
jle
bound
mov
int
mov
dec
cmp
mov
add
jle
cmpsb
inc
stc
orb
in
dec
mov
push
cmp
lds
call
sub
pop
jp
sbbb
jge
or
stc
push
movsb
rcl
mov
pop
mov
divl
dec
jle
sub
sub
addr16
lcall
xchg
shlb
inc
lahf
out
lock
stc
sarl
ja
adcb
sahf
js
hlt
lods
sub
pop
sub
sub
outsb
out
pop
movsb
scas
pop
pop
test
popf
dec
xchg
das
lret
push
inc
in
in
xor
icebp
ja
in
imul
imul
push
sahf
enter
aam
data16
lahf
fimull
popa
les
adc
mov
outsb
pop
or
xchg
xchg
push
lahf
pop
adc
cmpsb
sti
movsb
mov
pop
inc
mov
jmp
mov
nop
lods
mov
ja
xchg
das
in
cmpsl
stos
cld
push
sti
fildl
in
outsl
pop
jp
sub
jb
or
pushf
dec
imul
lods
emms
movsl
mov
jl
xlat
mov
xor
fnstsw
and
mov
jge
xchg
cli
add
pop
xchg
mov
cwtl
repz
int3
lret
rcl
inc
dec
add
daa
mov
rcrb
adc
sbb
cmpsb
shlb
fld
jb
out
mov
mov
or
cmp
sbb
das
clc
and
add
dec
mov
add
mov
cmpsl
jnp
nop
dec
fdiv
xor
mov
incl
jnp
mov
push
sub
mov
hlt
sub
push
jnp
ljmp
leave
outsb
mov
add
cmp
and
cmp
xchg
adcl
in
stc
cmp
movl
pushf
stc
pop
subb
mov
push
clc
mov
mov
fwait
loop
cmp
xchg
loop
push
fyl2x
cltd
mov
mov
mov
fwait
or
cwtl
nop
je
lret
in
sub
rcrb
mov
mov
cwtl
nop
rol
adc
or
adc
shrl
and
dec
out
roll
or
adc
fidivl
push
pop
add
in
mov
repz
cmp
inc
and
cmpsl
inc
test
fs
xor
shll
and
pushf
sbb
jno
stos
aam
sbb
mov
repnz
mov
scas
out
idivb
outsb
or
scas
in
mov
jbe
sbb
movsb
xor
pop
test
add
shrl
push
jl
mov
cmp
ret
add
sub
and
mov
leavew
and
mov
push
arpl
mov
outsl
xchg
scas
pop
xchg
int3
fdivl
sbb
jae
sub
inc
insl
aaa
cli
jno
bound
fmul
cmpsb
pop
cltd
in
push
push
mov
xlat
aas
sbb
fisubrl
scas
xlat
in
mov
hlt
int3
push
pop
sub
sbb
add
cmp
rcrl
lock
mov
lods
stc
dec
or
push
inc
pop
rcll
pusha
mov
ja
mov
popa
ds
pop
add
push
out
inc
adc
inc
xchg
ret
adc
pop
rclb
jnp
add
mov
pop
pop
jp
subb
mov
ret
and
push
lods
cmpsb
mov
xchg
add
xor
stc
fs
add
mov
mov
iret
mov
in
cmp
out
nop
pop
mov
xor
jno
out
jb
xchg
cmp
mov
adc
pushl
xor
and
in
adc
in
add
push
mov
cmc
std
inc
mov
xchg
out
dec
pop
mov
jg
bound
mov
xor
insl
insb
fs
add
xor
clc
fistl
andl
int
pop
fildll
sub
arpl
gs
and
xor
lea
or
sbb
sub
mov
lret
mov
mov
rclb
inc
pop
out
cmp
adc
repnz
add
jle
adcb
int
movsl
mov
push
cmc
subl
cmp
xchg
mov
mov
jo
pop
lds
daa
mov
push
dec
cmp
ret
int
sbb
dec
fldcw
test
inc
fdivl
adc
mov
jg
in
xor
popa
ror
add
imul
arpl
cmp
in
aaa
dec
scas
cmp
cli
xchg
push
fisubrl
push
push
shll
xchg
jnp
mulb
sti
repz
xorl
dec
stos
test
out
push
sub
out
cmp
push
lods
repnz
add
imul
icebp
push
cmpb
jne
mov
mov
jb
sub
inc
jle
xor
mov
xor
rcll
mov
pop
mov
dec
push
leave
adc
mov
mov
shll
jecxz
rcr
lcall
orb
pop
pop
mov
add
push
jl
in
sahf
gs
in
lds
pop
jecxz
xor
and
mov
fadds
hlt
into
xchg
ljmp
sub
mul
call
lahf
xor
cmp
push
int3
mov
jmp
das
xor
or
mov
adc
jge
jle
jae
jb
pop
test
xchg
rolb
dec
cld
aaa
pusha
push
lret
sbb
fxch
inc
addl
lcall
les
xchg
mov
cmp
ss
leave
sub
jle
leave
loop
cli
fisubl
into
and
jecxz
pop
adc
xchg
fcoms
push
mov
ds
xchg
movsb
in
cld
add
push
int
sub
lret
mov
js
xlat
pop
xor
adc
dec
push
add
sbb
push
mov
mov
cmp
mov
xchg
std
insl
fisubrs
mov
lret
rcr
xor
stos
cmpsb
pop
fstps
pop
lahf
ljmp
lcall
nop
arpl
mov
movsb
add
cmp
dec
dec
shlb
xor
imul
out
insb
sub
js
repz
and
jl
popa
aaa
mov
sbb
mov
lcall
push
das
push
fisttps
stos
stos
jp
pushf
incl
aas
mov
jle
and
and
jbe
cmc
or
scas
mov
xor
mov
adc
mov
dec
add
mov
jle
in
and
cmp
fsubrs
jecxz
sti
and
sahf
mov
loop
jge
mov
dec
daa
cmp
mov
mov
xchg
adc
in
hlt
movl
cmpb
cmp
insl
jns
ljmp
adc
sti
jne
test
jp
xor
mov
call
into
or
outsl
or
inc
fld
rolb
mov
xchg
xor
in
and
add
popa
jecxz
jl
fisubrs
repz
movsl
and
sbb
call
adc
ljmp
in
dec
sbb
pop
sahf
rcl
test
or
mov
jl
ficompl
pop
ret
xor
out
push
push
cs
rcrl
lods
aad
cli
mov
shrd
jle
mov
sub
in
dec
aam
sub
jbe
xchg
cmovge
pop
mov
or
cmp
movsl
outsl
xchg
mov
jl
sub
jl
xchg
mov
jns
cmp
fdivs
fs
jns
jmp
mov
sub
mov
subl
outsl
std
lret
lahf
insl
jmp
movsb
call
pop
insl
loop
adc
xchg
xchg
fcmovnu
imul
add
dec
out
push
aam
push
dec
stos
scas
jp
test
pop
out
roll
sub
loope
push
stc
nop
push
cmpsb
loop
std
pusha
dec
mov
sub
movsl
xchg
in
out
push
movsl
fldt
jo
scas
lea
ret
mov
sbb
push
loopne
int
and
cmp
in
and
hlt
add
filds
fisttps
icebp
push
push
fldenv
popf
mov
mov
movsl
sahf
int3
mov
clc
imul
sub
cld
insl
popf
outsl
fmuls
aaa
cmpsb
sbb
rcr
dec
adc
mov
icebp
dec
pusha
gs
dec
aad
popa
out
dec
adc
movsb
insl
enter
adcb
push
sbb
adc
int
inc
shll
pusha
sarl
sbb
ficomps
mov
cmpsb
outsb
cmp
aaa
mov
mov
xor
aad
cmpl
xchg
inc
mull
cmp
jne
and
pushf
mov
pop
sub
in
test
lret
loope
sub
sbb
out
sbb
dec
data16
cmc
push
pop
xlat
nop
mov
pop
push
ja
xchg
xor
cmpsb
fisubrl
daa
fst
sbb
cmpb
cmpsl
mov
insl
mov
fadds
dec
inc
scas
nop
and
outsb
bound
add
cmpsl
or
shlb
fmulp
pushl
dec
clc
adc
shll
xchg
je
mov
stos
rcr
push
mov
add
gs
outsb
push
hlt
outsb
push
add
out
loope
jnp
mov
repz
inc
push
mov
and
and
or
mov
push
mov
cli
lahf
in
fmuls
sbb
or
mov
xchg
mov
sbb
lods
movsl
sbb
int
mov
aas
lret
cmp
rcll
lods
fstps
sti
popf
scas
add
push
dec
sbb
xchg
jp
pop
icebp
mov
ror
das
jle
mov
xchg
lods
lock
fsubrs
adc
cmpl
mov
loope
sahf
adc
jmp
out
xor
push
jl
xor
dec
aam
adc
cmp
cwtl
sub
pop
mov
fnstcw
mov
leave
mov
add
dec
lret
add
cmp
sti
into
sub
cmpsb
orl
iret
xchg
dec
xor
imul
or
insl
push
add
pusha
xor
mov
push
in
in
and
push
adc
push
dec
call
rclb
fsubs
adc
push
add
and
push
inc
pop
imul
dec
jp
pop
mov
pop
stc
xor
aad
ss
sbb
rorb
mov
mov
inc
cmpsb
fistpll
and
data16
insb
clc
mov
cmp
add
push
xlat
xchg
sub
cltd
in
aam
loope
movsb
mov
push
sbb
dec
or
xchg
and
pop
nop
stc
popf
fs
outsl
lods
popf
lcall
outsl
or
icebp
fstps
pop
rclb
insl
div
adc
mov
fnsave
lds
pop
rcl
lret
sbb
add
pop
stc
push
les
xor
fldl
xchg
push
sar
popf
icebp
push
mov
push
jo
inc
icebp
pop
sahf
fdivs
fidivrs
movsl
cwtl
sbb
aad
outsb
shlb
and
pop
jae
add
mov
in
and
repnz
flds
push
dec
sti
outsb
push
push
sahf
mov
mov
inc
repz
xchg
sbb
repz
je
inc
inc
push
mull
sbb
subl
fistpl
and
mov
js
xor
pop
dec
out
or
mov
adc
sti
sbb
out
xchg
and
iret
xchg
sub
xchg
popf
mov
test
dec
cmpsl
sti
xor
lods
mov
ficompl
in
fwait
mov
mov
insb
aaa
repnz
jae
pop
test
cmpsl
jl
xchg
mov
dec
pop
xor
and
leave
add
adc
pop
std
mov
mov
ffree
dec
bound
adcb
loopne
scas
cmp
inc
movsb
cmpl
xor
test
outsl
push
mov
rcr
and
insb
mov
das
push
add
and
inc
mov
xchg
dec
xor
dec
push
xchg
mov
pop
mov
adc
jb
int
xor
lods
mov
unpcklps
push
add
fmuls
imul
das
sub
or
insb
jo
icebp
mov
pop
outsl
lret
ja
sub
push
pop
cwtl
sbb
mov
arpl
pop
and
sub
shrl
push
sarl
jle
cmpsl
sub
push
popf
inc
das
push
mov
and
xor
add
loope
stc
jne
out
push
jae
out
inc
ja
mov
out
mov
shll
pop
mov
xchg
dec
scas
sahf
mov
xlat
xor
rolb
mov
sbb
movsl
aam
ljmp
rcpps
jg
jns
sbb
and
adc
ljmp
mov
cltd
lahf
inc
mov
hlt
ss
push
or
daa
lds
testb
inc
cmp
jg
inc
xchg
cwtl
cmp
fstpl
daa
pop
xchg
shll
inc
cltd
jle
mov
sti
sub
and
rcrb
out
or
hlt
insl
and
in
xchg
or
out
leave
test
cmp
mov
jb
dec
imul
dec
mov
jne
cmp
int
and
cmp
ds
jge
repz
aad
xchg
loope
adc
xlat
scas
jno
jl
mov
fidivs
cmc
adc
scas
pop
pushf
les
push
push
jl
mov
cmp
cmc
inc
sub
in
and
roll
jmp
xor
xor
cmp
xchg
mov
mov
adc
adc
fimuls
sub
and
arpl
and
cli
inc
pop
loop
js
scas
push
inc
popl
movsb
xchg
push
pop
loopne
dec
pop
push
mov
fsubl
int3
dec
inc
xchg
out
mov
mov
add
inc
xchg
jbe
xor
or
mov
pusha
jge
lahf
fstps
fimuls
jp
gs
or
push
repz
cmp
inc
pop
mov
popa
add
es
cwtl
mov
cltd
std
or
jecxz
fldcw
lods
dec
pop
jns
xchg
push
addr16
mov
loop
out
scas
cmp
in
xchg
sub
ret
jbe
ret
adc
or
and
jnp
lock
insl
movl
movsb
push
pop
or
je
xchg
xchg
and
xchg
inc
xor
push
sbb
mov
shl
pushf
and
and
adc
sub
dec
inc
or
mov
cltd
jns
pop
lret
sti
push
or
push
xchg
lret
aas
pop
sub
in
xchg
aas
cltd
jl
nop
sarl
push
bound
jb
jecxz
adc
addr16
lock
pusha
push
pusha
cld
ds
ror
pop
and
sbb
pop
or
loopne
mov
out
shll
stc
mov
inc
scas
addb
pop
mov
push
xor
adc
sub
pextrw
outsl
clc
shlb
cmpsl
subl
push
lahf
xor
addr16
cmp
and
je
or
ljmp
fistps
mov
stos
or
dec
xor
repnz
das
sbb
pop
sub
xor
mov
mov
clc
sbb
shlb
rolb
add
xchg
sbb
insl
push
stos
mov
insb
xchg
mov
push
rolb
add
sbb
dec
sahf
scas
mov
adc
int
lods
add
mov
mov
inc
data16
jo
es
dec
outsl
cli
fcoms
jmp
imul
sbbl
inc
push
xor
adc
xchg
push
mov
aaa
aam
pusha
orb
dec
push
inc
andb
xchg
mov
mov
inc
gs
jbe
insb
fs
pop
or
fsub
mov
rorl
sti
jbe
stc
repnz
js
adc
jnp
test
xchg
xor
into
dec
xor
sbb
int
push
test
mov
cltd
xor
or
push
int
and
out
cs
sub
cmpsb
xchg
inc
push
sbb
test
xor
rolb
stc
push
fldt
fwait
loope
stos
ja
lock
push
popl
mov
and
mov
fs
mov
cwtl
inc
aaa
outsb
lock
shll
inc
cltd
pop
aam
fists
and
repz
daa
push
sahf
jae
mov
roll
dec
or
mov
pop
push
add
paddsb
xchg
int3
addr16
push
nop
add
jle
into
out
ss
rclb
mov
xchg
xchg
adc
pushf
movsl
sbb
cltd
je
dec
out
inc
mov
fistpl
dec
call
lahf
xchg
adc
mov
dec
popa
lcall
xor
mov
xchg
push
nop
and
in
adc
out
dec
mov
imul
lock
xor
or
pop
sub
movsb
roll
adc
aad
pop
filds
sub
and
push
xor
rorb
sub
adc
popa
xchg
add
sarl
lea
enter
sub
mov
or
add
and
sub
adc
gs
das
faddl
jno
dec
cmp
mov
xchg
in
stos
cs
mov
push
push
sbb
mov
test
mov
test
jbe
adc
outsl
sub
aas
cmpsb
inc
jle
sub
mov
mov
jl
sub
iret
repnz
push
lret
pop
xchg
js
cmpsl
add
in
and
std
mov
gs
insb
or
clc
mov
fcoml
movsb
jle
in
jp
sub
je
outsl
jl
aad
and
sbb
loope
pop
mov
jne
scas
and
test
and
inc
pop
idivl
hlt
jns
mov
inc
mov
cs
and
cmp
mov
mov
mov
or
lds
aam
mov
dec
adc
daa
hlt
xchg
mov
loop
pop
incb
mov
sahf
prefetch
mov
out
popf
xor
test
int3
cwtl
notl
xchg
mov
mov
add
or
push
or
lret
push
fsubs
pop
stc
rorb
mov
lret
lret
dec
xchg
jl
mov
mov
xchg
or
xchg
push
int3
sbb
test
movl
mov
movsl
std
iret
movsb
call
sbb
ljmp
repz
mov
lods
lahf
out
mov
inc
sbb
mov
rorb
loope
cmpsb
out
lea
bnd
in
xchg
sti
repnz
int
into
mov
ret
div
dec
call
sub
push
outsb
icebp
je
lea
mov
gs
cwtl
sub
fdiv
and
sub
pop
cmp
ljmp
js
dec
in
pushf
pop
mov
imul
or
cld
or
and
sbb
aam
xor
ja
xor
addb
jle
cld
xchg
daa
insb
pop
push
add
lahf
or
stos
leave
bound
fiadds
lds
cltd
push
and
hlt
mov
or
push
ror
sti
push
lods
leave
popa
test
sbb
scas
dec
xchg
jo
ja
jge
add
repz
aad
iret
js
in
subb
testb
add
sub
mov
out
jo
divl
or
jae
loope
in
add
out
fidivl
cmp
adc
sbb
xchg
xchg
out
fbstp
sub
jo
test
test
push
xchg
add
cmp
out
sbb
shll
in
mov
jae
jno
sti
mov
fwait
js
rcrl
pop
int
mov
clc
xchg
out
cmpsl
loopne
jnp
popa
mov
stos
mov
push
popl
insl
mov
mov
lea
push
popa
js
pop
orl
icebp
std
and
fwait
icebp
pop
lock
cwtl
subl
stos
andb
mov
xchg
pop
fwait
icebp
out
pop
dec
and
pop
shrl
xlat
in
mov
repz
loopne
add
pop
sarl
add
lea
xor
inc
jbe
xchg
js
cmpsl
aas
xor
divb
push
sbbb
daa
cmp
xor
movsb
mov
cmc
mov
scas
dec
loope
jno
cmp
sbb
mov
icebp
and
ljmp
inc
push
cmp
sti
cmp
sbb
sbb
data16
pusha
xchg
push
fisubrs
add
fstl
cmpsb
push
rolb
cmp
xor
xor
std
movsb
aad
mov
cmp
scas
push
xor
jns
iret
inc
xchg
mull
mov
jmp
sarl
lods
fcompl
and
stc
xchg
mov
fcoml
push
mov
out
and
insb
stos
popw
push
rclb
push
cmc
cmp
fdivl
sbb
repnz
push
mov
mov
sahf
test
pop
dec
push
xor
and
xchg
out
or
faddl
or
sbb
sub
arpl
cli
push
movsb
xchg
push
inc
lock
mov
sarl
fstpl
cmpsb
rclb
pop
or
addr16
inc
fsubrs
pop
mov
push
mov
push
and
pop
jno
dec
stos
adc
mov
adc
fiaddl
lcall
and
icebp
loope
imul
mov
mov
das
in
out
js
int
aam
fstl
sbbb
nop
shl
sbbb
test
data16
aas
jb
xchg
mov
mov
js
dec
dec
fistps
fimuls
mov
xchg
cli
icebp
test
fwait
mov
inc
mov
fstl
popa
add
xchg
sub
xchg
mov
lcall
dec
ret
aad
sbb
mov
jmp
mov
push
cmpsl
or
sbb
push
scas
out
cmp
push
ret
mov
mov
sti
mov
ret
sub
mov
inc
pop
pop
jne
shl
call
jmp
dec
mov
shlb
add
jae
in
scas
push
jecxz
sub
sub
push
mov
mov
fcompl
pop
icebp
mov
stos
jg
mov
jbe
push
push
fcmovu
mov
stc
in
pushf
outsl
rorb
nop
in
push
mov
xor
cmp
and
stc
add
subb
or
and
popa
adc
cltd
mov
ret
xchg
and
cmp
ficoms
clc
stos
pushf
aad
mov
leave
jo
adc
stc
icebp
push
movsb
cmpsl
fs
jne,pn
adc
out
xor
xor
mov
je
mov
mov
sub
in
cs
gs
add
cmp
dec
sbb
shrl
rcl
das
mov
adc
out
sbb
clc
jmp
imul
cmc
in
cwtl
adc
jmp
xor
or
in
jp
movsb
aad
mov
push
mov
out
das
inc
movsb
dec
adc
add
lea
adc
xor
xlat
xlat
mov
movsl
mov
aaa
pop
adc
push
push
aam
fsts
pop
and
pop
add
xchg
xor
in
nop
pop
pop
add
adc
adc
lds
push
fisubl
fisttpl
ret
scas
inc
jmp
jnp
mov
sub
cmpsb
jno
test
mov
stc
scas
push
push
mov
push
jne
adc
push
pop
sub
notb
push
jo
sbb
icebp
stos
and
push
cwtl
addr16
adc
push
loopne
cmpl
leave
mov
or
sub
out
inc
sub
fcmovb
mov
call
xorb
push
test
push
out
pop
pop
aad
cmpsb
xor
lcall
xor
jno
hlt
inc
pop
std
adc
xor
fwait
hlt
and
daa
cmp
das
pop
daa
es
push
mov
sbb
addr16
push
shll
ss
shlb
pop
mov
fisubl
xor
sub
jbe
inc
repnz
mov
icebp
pop
loopne
push
fwait
repnz
xchg
sbb
cmpsb
dec
add
lock
jb
pop
jl
jge
and
pop
hlt
movsl
push
xchg
das
xchg
mov
cld
xlat
cltd
daa
scas
insl
repz
loopne
loopne
shr
rep
loope
cltd
movsb
pusha
test
das
xchg
call
add
jb
xor
mov
jmp
pushf
mov
xchg
lahf
lahf
cmp
movsl
or
jno
stos
movsb
pop
add
leave
inc
xchg
xor
ds
stos
push
mov
xor
imul
into
and
sub
outsl
lods
pop
sbb
fs
enter
das
lock
pop
mov
dec
fldcw
shlb
mov
clc
stc
test
adc
aam
cmp
fs
loop
inc
mov
jbe
out
mov
ss
fwait
and
cmp
aam
xchg
pushf
sbb
mov
xchg
iret
lods
push
xor
flds
or
adc
add
sbb
mov
into
insb
gs
push
adcl
sti
pop
inc
cmp
adc
sub
sub
inc
lret
int
stos
mov
lret
jne
mov
insb
stos
addr16
cs
push
mov
or
or
sub
mov
or
cld
pop
inc
dec
jns
lahf
fs
test
shlb
xchg
daa
ljmp
pop
dec
lahf
imul
or
adcb
inc
ret
cmp
sbb
and
adc
adc
xchg
xor
mov
aas
sub
outsl
je
jbe
stos
push
in
mov
dec
test
xor
xchg
aas
add
es
daa
or
mov
inc
insb
jle
xor
int
inc
lods
xor
imul
ja
push
pop
add
in
into
ret
cwtl
fidivrl
loope
xchg
adc
add
push
inc
add
dec
and
mov
push
insl
and
adc
idivb
insl
test
mov
outsb
cmp
fcomi
in
pop
repnz
aad
mov
test
outsb
fs
jno,pn
aam
sti
outsb
inc
push
mov
leave
fs
jae
ds
cmp
add
lea
xchg
sti
cmp
cmp
adcl
or
xchg
shlb
lds
out
xchg
lahf
loop
sub
and
pop
andb
sbb
add
mov
sbb
inc
sbb
movsl
enter
lea
adc
ret
divl
sbb
pop
and
mov
ljmp
es
xchg
orl
out
pop
repz
push
mov
add
sbb
test
iret
inc
add
sbb
add
adc
ret
cmp
mov
cmc
inc
or
cmp
push
jge
orl
lods
pop
mov
push
lea
jns
inc
das
int3
sbb
cmp
push
je
nop
rorb
jo
stc
mov
call
pop
insb
hlt
test
pushf
addr16
aam
push
arpl
out
sub
add
or
add
push
hlt
call
loopne
pop
std
hlt
hlt
imul
lock
cli
add
arpl
out
inc
scas
daa
mov
xor
aam
aaa
mov
or
aam
lret
push
xchg
xor
mov
test
lret
sti
shlb
ficomps
and
in
cmpsl
adc
pop
sahf
aad
stos
mov
cmpsl
add
jp
mov
jae
outsl
pushf
add
cltd
loop
in
and
ret
andl
inc
add
inc
lds
inc
cmpsb
enter
iret
out
mov
aaa
inc
mov
adcb
aas
lea
dec
arpl
js
ss
push
iret
mov
sbb
rclb
push
jp
testb
jnp
dec
jo
insb
xlat
fbstp
filds
pop
xlat
push
pop
jae
test
outsb
pop
sbb
pop
out
mov
cmp
int3
gs
shr
mov
inc
push
jnp
pop
fucomp
insb
mov
testl
cmp
dec
mov
or
sarl
enter
push
and
push
push
xchg
push
fmuls
subl
mov
test
fists
into
sbbl
cmp
mov
rcll
adc
pop
sub
mov
sub
mov
cmc
jg
jecxz
mov
pop
or
fstps
jo
mov
push
int3
in
jle
addr16
cmpsl
mov
aas
and
dec
add
data16
out
adc
mov
addr16
jl
repz
mov
add
mov
stc
xor
popf
and
fcoms
and
cli
stos
sub
jge
mov
mov
dec
adc
jl
data16
jle
add
fcompl
fwait
sub
add
pop
adc
psrlw
dec
ds
out
cmp
out
jne
pop
cmp
jo
inc
push
cmp
mov
fadds
mov
push
fmull
jbe
lea
and
imul
je
stos
xor
mov
xor
mov
mov
movsl
movsl
loopne
push
aas
or
add
imul
lods
inc
mov
lcall
dec
mov
cmp
dec
sbb
mov
push
addr16
dec
dec
imul
es
mov
mov
scas
scas
and
xor
mov
sahf
add
outsb
fnstsw
xchg
sub
ret
dec
mov
pop
into
jg
cmp
cmpsl
loopne
sbb
mov
lods
adc
imul
lea
or
neg
mov
pop
lods
movsl
fldenv
push
mov
mov
add
adc
lret
in
sub
leave
outsb
cmp
test
add
jl
adc
lods
mov
ret
outsb
mov
call
sub
add
data16
xor
repnz
stc
hlt
mov
xchg
pop
xchg
aad
adc
orb
sub
pusha
fwait
out
setne
rorl
and
icebp
cmp
nop
mov
inc
xchg
pop
mov
sub
xchg
xor
movsl
mov
jnp
xchg
mov
pop
rcrl
push
arpl
aam
enter
aas
jle
push
pop
addr16
out
jl
out
imul
fwait
xor
lret
mov
test
outsl
stos
xor
push
push
cmp
cmpsl
push
add
loop
push
outsb
pushaw
dec
mov
mov
ret
jl
insb
test
out
xchg
mov
repz
sub
mov
xor
jl
adc
sbb
das
push
ljmp
popa
shrb
ret
ja
repz
sbb
js
inc
add
mov
sarl
inc
adc
movsl
test
test
push
sbb
jb
or
rcr
insl
xchg
int
jge
xchg
call
hlt
push
or
movl
fsubl
jge
cwtl
scas
sahf
imul
pop
push
sub
shrl
loopne
test
roll
sbb
sub
cld
mov
push
xor
xchg
aaa
aas
cs
syscall
mov
int3
adc
and
cltd
adc
pop
xchg
cmp
adc
jl
in
mov
shrb
xchg
sbb
xlat
add
jmp
inc
cmp
inc
stc
cmp
sbb
arpl
vminpd
movsb
dec
sbbl
and
rorb
xchg
popa
ret
bound
sbb
sub
jp
out
cmc
cltd
mov
in
stc
mov
movsl
and
fwait
mov
adc
add
jmp
push
bnd
shlb
or
sub
les
in
int
dec
jae
cmp
test
fdivrl
xchg
jl
adc
push
pop
cli
in
andb
mov
into
mov
stos
cmp
mov
lret
or
xchg
adc
test
push
sbb
push
scas
mov
int
stos
mov
inc
dec
fidivrl
call
rorl
pop
loop
or
inc
cwtl
mov
pusha
mov
imul
dec
jae
mov
rol
cltd
mov
and
test
mov
out
lods
adc
jnp
and
pop
arpl
inc
mov
les
in
stc
cmp
sahf
fstl
xchg
sbb
dec
push
nop
jmp
repnz
insb
and
enter
insl
mov
cltd
mov
enter
sarl
sub
insb
sbb
inc
sub
adc
rclb
pop
test
xchg
or
dec
lds
in
and
dec
jle
push
inc
cmc
std
dec
xor
lock
push
jns
mov
xchg
fistl
fidivl
xchg
adc
std
jmp
xor
and
stos
push
mov
push
ror
xorb
lock
push
ret
xor
daa
lahf
or
dec
cmc
jmp
pop
cmpsl
cmc
insl
xchg
int3
mov
popa
jbe
pop
pop
cmp
iret
sbb
je
test
negb
xchg
jb
mov
popf
cltd
inc
xchg
in
push
add
ss
mov
sbb
aad
xor
jl
repnz
sti
xchg
push
mov
int3
pushf
jp
mov
out
repz
mov
outsb
sub
test
fisubrs
in
push
das
dec
or
mov
vmovaps
cmp
test
repnz
adc
xchg
xor
jo
add
sbbb
dec
call
dec
push
hlt
sbb
fsts
lock
fisttps
cmp
pop
mov
mov
cli
inc
packsswb
or
lods
and
mov
arpl
pusha
and
jp
add
and
in
xchg
addr16
add
xchg
xor
jae
cmp
cmp
notl
shl
je
mov
scas
clc
mov
call
xor
clc
sub
or
or
push
pushl
xor
sub
lret
sbb
mov
mov
fisttpl
cmpsl
inc
ja,pt
loop
mov
jge
inc
movsb
jge
mov
pop
leave
ds
icebp
arpl
jge
sti
or
aad
cmp
out
jle
orl
mov
pop
pop
pop
mov
arpl
or
sub
ret
jnp
or
aam
xchg
or
shr
rorb
inc
mov
and
in
repnz
pushf
fxch
out
out
jb
aad
dec
fisttpl
and
or
ret
out
cli
dec
rolb
lods
add
mov
add
add
sub
mov
sarl
xchg
or
mov
push
mov
loopne
insl
ret
inc
sub
mov
sub
pop
mov
call
sbb
and
lret
inc
jmp
inc
cmp
cmpsb
test
fwait
xor
sub
popf
push
popf
ret
xchg
sahf
jecxz
fdivs
fidivrs
outsb
cmp
enter
dec
mov
adc
int
in
add
or
sub
outsl
inc
mov
int3
mov
add
and
push
dec
in
cmp
std
aad
mov
mov
daa
cmp
xor
and
xor
arpl
sub
lock
xor
jo
fistl
add
in
inc
cltd
outsb
scas
imul
insl
dec
jg
loopne
jge
lea
sub
sti
cs
roll
push
ss
mov
push
lock
mov
fimuls
push
sub
popa
mov
lahf
inc
loopne
js
aam
xchg
mov
mov
pop
lea
lock
pop
or
ret
in
or
data16
aas
cmp
dec
sarb
popa
movsb
pop
sahf
cld
shrb
shr
mov
mov
sbb
in
cwtl
sbb
cmovb
test
mov
in
mov
or
pushf
lods
dec
sub
add
mov
aaa
mov
fs
pop
pusha
push
mov
mov
lods
imull
leave
loope
jle
xchg
les
std
or
add
sub
daa
idivb
shrl
add
xchg
xchg
out
mov
imul
inc
jb
jle
sub
lcall
inc
and
cmp
xchg
jno
mov
push
stc
in
jnp
mov
out
adc
rcl
rolb
add
add
stos
push
sub
mov
sub
imul
add
dec
sbb
loopne
or
cld
cmc
loopne
mov
sti
dec
jb
lods
jecxz
pop
lds
push
cmp
enter
jno
lods
jl
cmpsl
out
jne
mov
mov
cmp
sub
divl
xchg
adc
out
shrl
push
repz
cltd
pop
mov
sub
popf
mov
push
aaa
test
je
psrlw
xor
ficomps
inc
pop
add
cmp
js
mov
insl
rorb
inc
sbb
dec
lods
xor
and
mov
mov
inc
sub
ret
add
cmpsb
in
outsl
cmp
in
inc
push
push
iret
jmp
xor
daa
mov
mov
out
jb
sbb
pop
jge
pop
mov
mov
add
or
push
pushf
les
add
fucomp
cmpl
inc
stos
mov
enter
cmp
or
into
sbb
outsl
mov
mov
xor
fs
push
movsl
mov
pop
aas
fistpl
pop
pop
push
mov
stos
mov
pop
ja
js
push
dec
dec
cmpsl
pop
in
in
stc
push
out
int
imul
dec
orl
insb
fnstenv
loop
lret
mov
fdivr
sub
and
mov
inc
sub
rclb
push
sti
imul
mov
fisubrs
pop
outsl
push
lahf
xchg
push
lods
add
outsl
popf
in
call
inc
cmp
xor
fsubrs
fwait
pop
shrl
cmpb
xchg
or
and
lcall
jnp
ret
int
pop
fstp
imul
loope
jge
jmp
dec
push
xor
mov
int3
push
jo
pop
pop
inc
imul
cmp
sub
sub
cmc
dec
mov
lock
scas
sub
and
and
sub
shl
loop
les
test
in
insl
cmp
dec
push
push
test
jae
bound
fimull
fnsave
jecxz
xor
or
out
cmpsb
movsl
and
fcmovnbe
fisttpl
cmp
pop
mov
test
mov
fldl
stos
repz
sbb
xchg
mov
lret
jae
xchg
imul
push
aam
lcall
fsubl
add
pop
xor
test
in
xor
jp
or
outsl
fisttps
mov
mov
mov
out
jnp
add
out
cmp
rcrb
sub
mov
dec
out
pop
push
push
cmpsb
sbb
ljmp
mov
bound
lods
or
lds
int3
xor
xchg
aas
jle
lret
fimuls
mov
inc
out
sbb
std
mov
adc
test
lods
jge
clc
fcom
cs
adc
lcall
rcrb
test
cld
in
cli
imul
jb
fisubrl
fstl
enter
insl
mov
cmp
xor
xchg
popa
or
and
push
lret
or
inc
out
in
imul
dec
lcall
xchg
daa
dec
jbe
mov
mov
rclb
push
stos
inc
imul
and
dec
pop
call
aad
pop
sbb
loop
jns
push
mov
add
mov
shll
mov
jnp
sbb
and
pop
mov
lods
idivb
xor
sbb
add
idivb
cmpsb
mov
test
dec
int
xlat
cmp
inc
fwait
xchg
xchg
fiaddl
popf
lods
lret
pop
jbe
pushf
daa
jno
add
out
lods
ss
test
push
ficompl
insl
lcall
daa
add
lods
sti
xchg
out
mov
andb
ret
iret
push
mov
jns
icebp
lahf
pop
adc
pop
shlb
inc
sub
out
add
adc
ljmp
mov
cltd
out
xchg
arpl
outsl
iret
add
gs
adc
in
lods
pop
jmp
jmp
xor
aad
jns
roll
lods
jle
or
jno
jl
test
out
mov
mov
or
int
or
and
jmp
cld
jecxz
inc
mov
popa
lods
enter
cmpsb
jo
mov
adc
inc
pop
test
push
sub
sub
xchg
push
mov
das
int3
pop
pop
stos
mov
mov
sbb
test
inc
adc
xlat
jo
scas
das
mov
fyl2xp1
sub
inc
sub
pop
in
insl
sub
push
mov
aaa
ss
popa
sti
imul
repnz
orb
jnp
into
lds
or
fwait
ja
and
iret
jmp
push
test
or
mov
into
jp
imul
mov
push
stos
push
loop
xchg
push
jo
cmp
adc
cld
ret
dec
adc
ret
das
adc
outsb
lods
cmc
add
enter
jge
aad
into
push
lods
mov
xor
mov
jge
sbb
in
jmp
jnp
sbb
or
sarl
push
clc
sahf
jg
scas
fwait
mov
pop
sbb
push
xchg
stos
sub
sbb
fmul
fs
je
inc
int
rcr
loop
xchg
jmp
cltd
loope
push
std
fs
rolb
shrl
insl
jne
adc
and
cmovs
iret
xchg
pop
mov
jno
xchg
inc
fiaddl
sbb
lods
jmp
fistl
cltd
pop
addr16
mov
testb
dec
adc
leave
std
xor
jno
xchg
adc
divl
add
add
enter
xchg
mov
ret
loope
xor
aad
xchg
lahf
cmp
adc
ja
pop
insb
push
je
ljmp
in
in
push
fstps
xchg
adcl
xor
or
int3
xchg
ss
sub
iret
daa
cmc
mov
push
mov
negb
jl
mov
add
lahf
scas
pusha
adc
movsl
xor
mov
sub
vpunpckhqdq
jp
movsl
movsl
xor
mov
pop
sbb
or
dec
xchg
loopne
fnsave
jne
mov
inc
or
mov
push
das
or
dec
je
xor
neg
je
inc
dec
movsl
and
test
ja
int
pop
fdivs
jmp
sahf
mov
dec
stos
lds
scas
mov
movb
jg
or
push
push
xchg
int
fisubrl
iret
lcall
lret
jl
push
cmp
sub
in
sarb
enter
mov
sahf
xor
adc
xor
adc
movsb
xor
lret
ret
outsb
xor
inc
xor
mov
cmc
cwtl
in
mov
mov
das
subl
or
and
int3
clc
in
jp
jecxz
jbe
pop
sbb
pop
call
imul
xor
test
scas
fadds
cmc
inc
xchg
add
mov
iret
cmp
mov
in
scas
sub
xor
test
addl
lods
orl
push
subl
shll
sub
sub
sbb
mov
jmp
popf
push
add
inc
add
or
or
aas
inc
sub
sbbl
je
mov
iret
fcoms
push
mov
add
cmp
adc
xchg
js
xor
lcall
loope
pop
ret
repz
inc
add
jecxz
int3
int3
push
sbb
mov
ds
popa
jne
repnz
mov
sarl
pop
aas
mov
cli
or
cmp
pop
inc
out
ss
adc
movsb
dec
popf
imul
mov
mov
iret
dec
mov
pop
out
je
inc
jne
pop
cwtl
imul
and
fsts
dec
icebp
mov
das
xor
xor
sahf
dec
jecxz
xor
or
pop
xor
iret
jecxz
inc
sbb
cltd
pop
sub
aaa
cld
ljmp
cmp
push
scas
mov
nop
xor
cmpsl
mov
push
mov
out
mov
mov
jb
test
insl
lods
pop
lahf
insb
js
pop
mov
call
iret
cs
cmpsl
add
enter
jmp
jecxz
jge
hlt
enter
pop
push
test
popl
movsb
int3
sub
pop
push
push
mov
xchg
lahf
cmp
into
dec
sub
jecxz
xor
mov
jns
pop
out
xchg
pop
mov
pop
aaa
sbb
neg
je
jbe
ss
rep
add
jp
orl
jle
mov
jp
fimuls
cmp
jle
ds
std
shrb
mov
nop
scas
jb
pop
jle
std
jge
dec
mov
add
pop
and
add
cld
int
mov
scas
into
loope
std
aam
sbb
fldt
iret
mov
es
lods
jb
xchg
push
adc
add
lea
daa
out
aas
mov
xchg
mov
or
daa
dec
jo
in
and
or
mov
lock
add
sub
shrl
jl
test
sub
jp
jle
mov
push
dec
cmp
xor
wbinvd
add
frstor
jbe
lods
pop
loopne
xor
iret
es
mov
imul
mov
or
loopne
add
cmpsl
pop
std
lret
xlat
in
xchg
xchg
pop
add
aam
aad
jno
xchg
fwait
jg
jmp
popf
icebp
cmp
sbbb
mov
cs
mov
sub
nop
xor
pop
mov
mov
xchg
pop
test
std
rep
divb
adc
mov
jmp
mov
jno
int3
nop
fwait
xor
push
cld
adc
lahf
hlt
daa
sub
outsl
mov
xchg
lahf
dec
sti
pop
xchg
les
stos
mov
xor
out
or
sbbb
jg
or
sahf
aad
inc
and
mov
or
jno
xchg
out
add
and
inc
inc
sbb
sahf
add
pop
into
cmp
loope
subb
sti
mov
mov
imul
cmp
mov
ja
xchg
rorl
sbb
daa
xchg
xchg
pop
aad
lcall
xor
imul
pop
xchg
lahf
xor
mov
xchg
in
cli
mov
loopne
fwait
out
cmp
sbb
push
out
mov
sti
mov
cli
or
sahf
mov
cmp
sar
inc
xor
mov
or
push
negb
cmp
inc
inc
mov
xchg
pop
popa
stc
cmc
add
inc
pop
stos
lahf
dec
pop
scas
jno
and
out
leave
and
jae
and
int3
popw
push
or
inc
out
out
mov
inc
fwait
ret
and
lds
in
test
or
mov
mov
loopne
xchg
ret
lret
ja
call
cmpsl
inc
xchg
je
adc
inc
adc
mov
movsl
div
in
mov
cmpl
add
repnz
shll
cmp
scas
jle
les
rcrl
divl
adc
repnz
pop
insl
cmp
loop
or
out
push
imul
out
cmp
shll
cwtl
sbb
jns
dec
sti
xlat
inc
xchg
jae
out
push
addr16
push
mov
push
mov
enter
mov
mov
in
rcl
pop
call
scas
mov
scas
lahf
sti
stc
rcrl
lods
mov
inc
insl
loopne
push
shlb
repnz
inc
test
movsl
cmc
xor
ss
xchg
sub
jmp
xchg
adc
sbb
nop
into
mull
cmc
pusha
jns
daa
in
pop
lahf
push
jmp
or
pop
cmp
xchg
mov
addl
negb
mov
aam
jmp
xchg
loope
fwait
or
sub
mov
notb
xlat
mov
and
xchg
data16
sub
and
hlt
jae
mov
sub
and
cmp
mov
add
pop
mov
scas
xlat
dec
jns
add
xchg
pop
loope
add
mov
jbe
imul
add
push
cwtl
sub
xchg
mov
xor
mov
and
mov
fmulp
pop
adc
and
cmp
cli
aaa
dec
popf
les
outsb
sar
inc
ficomps
cs
jns
dec
pop
mov
sti
lahf
aaa
fistpl
jp
jle
pop
xchg
jb
mov
lret
push
lret
xchg
adc
clc
mov
mov
xor
xor
bound
mov
and
stc
push
cmc
xor
mov
jecxz
jb
pop
scas
popf
es
push
inc
incl
sarl
mov
loope
cmp
out
dec
fstps
loope
int
sub
sbb
mov
popa
fmuls
jmp
dec
cmp
test
xchg
xchg
xlat
test
inc
scas
movsl
ret
sub
mov
cmp
test
arpl
sub
inc
mov
inc
xlat
and
movl
frstor
mov
andl
jns
in
jmp
or
mov
jg
loope
and
xchg
cld
push
and
adc
or
movlps
xlat
mov
add
inc
sbb
das
movsl
mov
xchg
jae
inc
rclb
jg
cltd
aam
push
pop
and
and
mov
mov
mov
add
lods
mov
cmp
adc
adc
xlat
sbb
adcl
push
or
lret
add
mov
scas
mov
or
xchg
inc
dec
ret
mov
in
lcall
sbb
negl
leave
mov
and
gs
push
test
xorb
fimuls
es
push
into
xchg
jne
pop
dec
inc
ror
push
mulb
addr16
mov
or
xlat
js
jae
int
lock
mov
test
and
pop
cmp
inc
or
repnz
pop
lods
inc
iret
sbb
cli
or
cmp
adc
fdivrs
pusha
fstpl
xor
in
shlb
iret
jmp
int
mov
das
in
xchg
imul
or
adc
sub
movntps
enter
psllq
or
add
rcll
cmc
test
dec
lcall
scas
mov
lcall
pop
sub
add
push
push
and
aaa
sbb
out
mov
ret
mov
sub
int3
cs
and
enter
adc
int3
insl
cmp
addb
into
mov
cmp
sub
adc
ret
cwtl
bound
push
dec
jo
pop
outsl
test
icebp
lret
inc
in
sub
addb
cmp
push
jl
aas
cmp
jmp
dec
mov
movsl
inc
pop
mov
loop
andb
pop
lods
fimuls
and
out
scas
xchg
testb
mov
and
int3
js
add
xor
sbb
adc
jge
pop
mov
mov
cmp
repnz
jbe
repz
rorl
dec
add
dec
mov
sbb
in
std
inc
add
cmp
inc
jecxz
cmc
sub
ds
push
movsb
leave
enter
sbb
mov
mov
and
scas
sbb
jo
icebp
fisttps
push
mov
cli
out
scas
sub
lcall
addr16
stos
cmc
pop
sub
in
push
scas
pusha
jp
lods
call
dec
dec
enter
fiaddl
mov
mov
les
out
test
push
sbb
mov
cmp
mov
mov
sub
xor
xlat
dec
and
jnp
mov
inc
inc
enter
in
cmc
sbb
loopne
or
stos
inc
push
ret
xor
xor
dec
mov
jl
sbb
mov
outsb
mov
ret
fidivrl
fistpll
dec
repnz
adc
mov
outsb
mov
fs
push
in
sub
sbb
mov
ret
mov
adc
cli
jecxz
and
xchg
pop
mov
imul
add
push
out
out
xchg
shrl
mov
ret
popa
arpl
and
sbb
adc
mov
das
lret
jmp
sbb
or
dec
mov
es
push
out
cmp
out
mov
sub
adc
insl
add
inc
or
es
lahf
in
add
sbb
add
sbb
xlat
rclb
cmp
aas
out
jnp
mov
jle
xor
inc
xchg
bound
out
xlat
dec
xchg
cmp
mov
jge
outsl
pushf
push
sti
xchg
cmp
mov
jl
cmp
loope
scas
xlat
or
fwait
mov
mov
push
fdivp
jno
loopne
cmpsb
cwtl
decl
aad
add
cld
inc
or
mov
push
iret
out
adc
xorl
outsl
adc
in
sub
call
pop
daa
stc
sbb
mov
or
jmp
jecxz
outsb
cmpsb
dec
lahf
xlat
mov
in
lods
cmp
add
cmp
fstpt
mov
adc
xchg
dec
xlat
shlb
mov
lcall
pop
addl
cmpb
fldt
add
mov
sub
cmc
jg
insb
dec
ja
sarl
or
adc
pop
add
adc
cmpsb
sahf
mov
mov
or
aaa
stos
ljmp
sub
push
sti
ret
xchg
hlt
in
xchg
mov
std
mov
ljmp
js
lcall
mov
sti
stos
shl
pop
sub
adc
mov
jnp
adc
mov
adc
add
popf
or
imul
hlt
xchg
mov
outsb
and
pop
push
inc
sbb
ds
sbb
xchg
dec
lock
xchg
cmc
mov
sbb
jns
inc
pop
and
jmp
xchg
and
nop
les
xchg
and
loop
xchg
push
push
xchg
cmc
andl
adc
adc
mov
in
data16
mov
lea
pop
repz
fwait
std
push
in
xlat
addb
mov
dec
fwait
mov
or
out
lcall
add
mov
sub
leave
iret
or
pushf
xorb
pop
or
sbb
dec
jo
int
and
xor
lahf
push
mov
cmp
adc
cmc
cmp
rcrb
dec
out
mov
add
mov
mov
adc
mov
rclb
adc
and
lahf
or
out
or
aaa
pushf
xchg
jbe
push
insb
push
inc
cmp
adc
pinsrw
stc
sub
dec
inc
push
dec
cld
inc
les
call
jecxz
adc
and
loopne
xor
in
and
pop
inc
jne
push
cli
into
adc
xlat
in
dec
adc
stos
sahf
sbb
stc
xchg
xor
dec
xchg
out
int3
pop
cltd
add
ret
jge
pop
sub
sub
mov
cs
aam
popf
xor
loope
jae
sbb
push
rcrb
xchg
mov
dec
pop
cmp
push
iret
or
push
jno
repz
repnz
sub
test
mov
cmp
push
mov
push
js
jmp
pop
ret
adc
mov
test
or
xchg
les
jmp
mov
xor
dec
rsm
sbb
ss
data16
test
mov
adc
xor
inc
stc
mov
addl
xor
push
or
sahf
cmc
insl
xchg
fisttpll
int
inc
stos
and
imul
xchg
adc
pop
pop
push
lcall
adc
inc
pop
and
mov
jecxz
sbb
repnz
xchg
addr16
add
repz
sbb
fstps
push
cmp
xor
mov
sub
pushl
pop
cmp
xchg
fdiv
mov
jno
cs
jmp
or
imul
enter
and
mov
jg
aam
jne
sub
mov
push
in
push
pop
cmp
fcompl
fldl
jl
ret
pop
imul
inc
fmull
icebp
sub
xor
cmc
push
sbb
sub
mov
mov
push
or
xor
adc
in
pop
out
jnp
out
or
push
in
or
xor
lret
sbbl
mov
stos
loope
dec
sbbl
js
jb
aam
xor
inc
int
jp
cmc
mov
jmp
idiv
pop
dec
je
pop
mov
and
lret
stos
jle
adc
pop
push
sbb
cmp
mov
jge
test
inc
std
int
xchg
mov
fbld
sub
roll
in
pop
in
sub
cmpsl
cmp
repz
jg
lret
daa
rol
adc
push
mov
stos
test
pop
inc
mov
mov
xor
pop
pop
xchg
or
mov
incb
or
subl
in
ds
mov
jo
push
jge
xchg
add
xorl
cmp
xchg
push
and
pop
jo
push
pop
sahf
cwtl
je
xchg
sarl
pop
orl
add
add
stc
and
imul
popa
jbe
sbb
mov
loop
fsubp
ret
imul
mov
test
add
out
repz
stos
adc
sub
and
aam
sub
into
push
cmp
sub
in
mov
dec
cltd
fcompl
sub
or
jbe
cmp
pop
mov
insb
jmp
stos
sahf
movsb
rorl
or
or
add
sbb
dec
aas
repz
jp
jb
dec
push
jnp
cmp
scas
jns
cli
mov
cwtl
cmc
mov
repz
cmc
sub
cli
test
xchg
and
jl
testl
adcb
lods
pop
xor
rcr
pop
les
clc
or
or
iret
ja
ret
int
pop
stos
adc
sbb
or
mov
dec
add
out
or
popa
sub
or
and
sub
popa
pushf
cmp
mov
add
xchg
adc
imul
and
sub
mov
stc
pop
pushf
arpl
xchg
out
repnz
jg
add
pop
sbb
push
daa
in
xor
adc
and
in
dec
sbb
mov
cltd
adc
push
xor
cmp
enter
out
mov
xchg
mov
out
mov
pusha
inc
int3
fcoms
lock
sub
cmp
out
test
and
pop
scas
and
jmp
xchg
test
mov
in
call
stos
mov
and
mov
cmpsb
mov
push
into
sbb
and
out
pop
sarl
lret
mov
xor
push
sbb
xchg
das
cld
mov
in
fsubrp
push
cmp
and
inc
xor
add
add
push
mov
sub
int
out
jp
movsl
or
xor
stos
cmp
loop
out
adc
rorb
xchg
mov
mov
add
inc
ret
cmc
cmpsb
adc
in
out
push
mov
inc
sti
jmp
inc
xor
nop
push
mov
out
out
jns
sub
and
dec
pop
test
inc
xchg
repnz
addl
xor
adc
pop
jo
das
imul
lods
dec
sbb
jge
mov
add
mov
fwait
addr16
push
cmp
js
frstor
into
mov
dec
mov
mov
cmp
pop
lods
cmpsl
fcmovu
out
std
insl
mov
push
dec
and
adc
data16
mov
adc
test
stos
cmpsl
ss
bound
fwait
mov
mov
cwtl
mov
movsb
lea
lcall
push
xorb
adc
dec
sahf
out
cmp
loopne
push
and
xor
aaa
push
mov
testb
fxch
mov
push
adcb
adc
test
aaa
pop
sub
add
add
jp
push
mov
xlat
sti
in
je
mov
mov
movsb
rolb
shll
inc
sub
mov
lret
lds
sbb
fdivl
stc
rol
mov
push
push
sbb
daa
jecxz
dec
mov
sahf
add
ret
mov
and
xchg
dec
je
sub
mov
sub
scas
cmpsb
and
adc
pop
or
scas
lcall
movsl
push
in
push
mov
xchg
adc
movsl
mov
sbb
xlat
jge
enter
cmp
mov
gs
inc
bound
push
sbb
mov
call
fcompl
mov
lea
test
sarb
gs
jo
aad
or
sbb
es
ror
dec
ja
fcmovnu
adc
cmp
addr16
mov
add
mov
jbe
mov
pop
cmpb
mov
mov
je
hlt
mov
shr
jle
clc
mov
jnp
cmc
add
inc
out
jecxz
mov
inc
push
mov
xchg
inc
sbb
cmpb
fnstcw
pop
js
and
add
jbe
subb
cmp
mov
fdivl
hlt
pop
mov
pop
cmp
ret
fistpl
cwtl
int3
in
out
xor
cmpsl
jl
xchg
jp
inc
in
adc
fistpll
push
imul
jne
roll
xor
or
repnz
or
je
adc
nop
out
dec
pusha
jne
gs
push
push
and
arpl
cmc
mov
pop
aad
test
add
xlat
sti
xor
push
fwait
shrl
dec
push
rcrl
into
mov
adc
and
mov
xchg
adc
arpl
add
ficoml
adc
xorl
mov
cmp
popf
ret
mov
xchg
out
fisttps
fidivs
xchg
push
pop
outsb
push
test
daa
jge
adc
cld
out
push
fldt
push
pop
jp
stc
dec
bound
out
dec
std
pop
push
or
vunpckhps
inc
movsl
lea
ljmp
or
loop
cmp
imul
addb
daa
in
mov
and
mov
xchg
pusha
jno
pop
jb
xchg
and
xor
adc
iret
xchg
mov
dec
je
dec
cmp
jl
add
pushf
sarb
mov
cmpsb
xchg
and
cli
pop
ficoms
fsubl
je
jmp
arpl
mov
mov
pop
je
xor
jo
pop
pop
xchg
sti
sub
sbb
repz
mov
and
push
fmull
int3
outsl
push
ss
xor
scas
or
aam
cmp
sbb
or
mov
xchg
decl
xchg
shrl
push
mov
jecxz
push
pop
icebp
lea
roll
push
int
in
lds
jne
dec
adc
movsl
inc
movsl
gs
aas
fadds
lret
test
jo
jbe
sbb
mov
adc
adc
mov
je
dec
xchg
sbb
adc
sub
clc
ret
sarl
cs
or
xor
sub
scas
out
add
or
js
or
cmp
push
sub
movsl
sbb
xor
imul
std
sub
push
adc
xchg
test
lret
jne
add
gs
pop
leave
and
jge
push
loopne
jecxz
test
out
and
sub
mov
lret
shrb
inc
dec
dec
movsb
jae
push
jle
mov
aas
shr
jecxz
stc
int
inc
push
icebp
mov
xchg
add
xchg
mov
push
xchg
daa
mov
mov
daa
insl
pop
je
out
push
adc
pop
sub
push
add
and
outsl
mov
pop
mov
jbe
sbb
or
and
push
dec
pop
jb
mov
jl
outsb
sub
popa
inc
addb
jbe
lret
xchg
jne
adc
repnz
ficompl
out
cmpsb
sbb
push
insb
push
mov
push
shlb
imul
xchg
xor
push
xor
and
repz
pop
outsl
jnp
es
divb
push
fwait
xchg
jb
loope
jno
arpl
cltd
xchg
add
xchg
add
push
xchg
stos
test
xor
inc
mov
bound
push
pushf
rcl
sbb
icebp
xchg
sarb
loopne
pop
je
test
out
pop
enter
fidivl
sbbb
pop
cmc
jb
pop
jbe
scas
fisubl
rolb
hlt
jne
shll
cli
dec
jb
cltd
jne
cs
push
xor
repnz
mov
pop
lret
xchg
cmpsb
pushf
ja
pop
inc
sbb
add
sbb
ret
pop
dec
sbb
cmp
add
jnp
jnp
loope
mov
or
adc
add
jb
pop
add
xor
fwait
subl
inc
jmp
xor
rorb
loope
ret
jns
data16
insb
in
sub
push
sbb
notb
pop
dec
into
rep
sub
in
push
lret
push
adc
lods
lcall
fnstsw
adc
hlt
addr16
push
adc
or
sub
inc
rcl
push
mov
repnz
aaa
inc
lock
xchg
xchg
add
jns
das
adc
add
add
mov
dec
xor
cmc
ljmp
cmp
movl
and
mov
outsl
mov
std
fdiv
aas
adcl
sahf
movntq
aas
push
shlb
outsl
add
das
sub
cmp
inc
dec
aaa
subb
sti
mov
cmp
inc
and
inc
add
lods
inc
adc
sub
mov
test
fcoml
cmpsb
cmp
jge
mov
cmp
out
mov
and
in
loope
loope
adc
adc
sbb
pop
xlat
add
dec
sub
iret
sub
sbb
push
sub
fnstcw
lahf
lods
test
aad
pop
mov
not
imul
mov
ljmp
dec
and
xchg
and
xor
xchg
xchg
jnp
loopne
sbb
add
mov
scas
jecxz
jmp
fstps
or
aaa
pop
stos
int
mov
movsl
loop
pushf
lcall
adc
mov
inc
loope
fcmovb
fisubrs
sub
inc
xlat
xchg
ja
dec
dec
inc
in
adc
fcomps
imull
into
cld
or
and
xchg
cmc
adc
stos
and
cli
in
sub
subl
push
jnp
popa
or
cwtl
enter
push
and
cmpsb
xor
and
cmp
push
xchg
out
xchg
mov
iret
pop
cltd
xor
xchg
mov
cs
mov
sub
daa
rcl
ss
add
dec
enter
fldcw
call
add
lea
int
mov
loop
enter
dec
sar
neg
adc
out
in
mov
loopne
ret
push
lret
push
lret
dec
adc
jge
pop
sub
ljmp
or
ss
pop
loop
inc
insb
xchg
shlb
push
loopne
push
fadds
xorb
xor
pushf
pop
aad
fmulp
into
enter
ljmp
inc
or
dec
dec
mov
or
movsb
mul
mov
movsb
add
lea
adc
pop
loopne
aam
push
xor
subl
bound
in
cmp
sub
scas
leave
outsl
dec
push
and
repz
lods
lea
jg
adc
jo
inc
and
mov
mov
jno
sbb
add
lods
insb
sbb
push
mov
lret
loopne
add
icebp
ret
call
add
cmp
dec
xlat
ret
and
movsl
lret
and
loopne
icebp
callw
add
cltd
add
imul
mov
loopne
xchg
je
aam
push
popa
lret
fwait
push
mov
sbb
outsl
ljmp
sbb
add
jb
out
pop
ret
pop
mov
cmp
mov
pop
aad
dec
iret
pop
imul
mov
push
enter
pop
jle
das
and
adc
aam
jg
lods
fwait
ljmp
inc
iret
sub
or
inc
pop
xor
in
sbb
xchg
jge
inc
repnz
sti
push
je
jno
repnz
mov
add
mov
js
addb
ficompl
cmpsb
push
leave
cmp
add
inc
sub
adc
xor
or
cli
je
inc
popf
jmp
test
sbb
mov
adc
fcompl
mov
or
aas
pusha
imul
xorb
push
stos
add
dec
test
shrl
push
popf
aam
addl
jecxz
dec
repz
push
ret
add
std
les
sbb
mov
popf
nop
mov
dec
jmp
adc
mov
rolb
arpl
pop
icebp
jmp
lret
add
or
adc
and
repnz
pushf
mov
lods
mov
or
jecxz
push
add
xchg
sti
orl
or
jg
jns
mov
das
fiadds
ljmp
inc
lds
mov
jmp
arpl
das
ret
jae
mov
cld
push
lret
jl
mov
hlt
je
xor
adc
push
or
mov
pop
out
sbb
jle
sub
out
int
cltd
fldl
sbb
sti
loop
or
fldenv
shrl
jp
dec
imul
mov
into
ljmp
cmp
mov
xor
loope
push
sub
add
and
in
mov
inc
jl
push
sub
cmp
xchg
jno
mov
stos
sbb
aaa
sbb
dec
ljmp
into
mov
xor
test
ret
mov
lods
repz
test
cmp
or
icebp
or
ja
inc
cld
js
adc
inc
dec
hlt
lahf
xlat
jl
pop
cli
jecxz
jg
pop
pop
xchg
push
pop
xchg
sub
dec
mov
cwtl
inc
sub
in
push
and
leavew
in
or
lods
and
pop
sub
inc
jb
xor
lock
cwtl
cs
out
xchg
pop
rcll
in
outsb
xor
rcll
popa
mov
sbb
mov
int3
inc
mov
add
adc
dec
xchg
jle
lods
xlat
push
fiaddl
xchg
pop
pop
jle
fisttpll
cmp
sbb
cmp
arpl
negb
mov
sub
inc
cwtl
mov
roll
and
or
mov
das
test
add
inc
cmp
enter
xchg
xchg
jg
jle
jno
ljmp
scas
inc
lret
js
mov
imul
addr16
xor
sub
add
rorb
fs
adc
mov
cmovbe
mov
cmp
xor
lcall
out
jge,pt
repz
pop
in
push
call
inc
test
cmp
fs
movsb
and
push
jno
imul
adc
bnd
dec
xor
xchg
jmp
push
mov
adc
push
dec
push
in
inc
push
ds
addr16
stos
mov
lea
push
loopne
push
and
and
clc
popa
pop
push
dec
xchg
sbb
daa
movsl
ret
pop
negl
inc
insl
and
call
lret
sub
popf
pop
mov
xchg
xchg
shrl
and
sarb
mov
jbe
gs
sarl
push
add
adc
xchg
xchg
ljmp
scas
stc
mov
mov
jecxz
out
mov
sbb
jo
pop
cmp
iret
loop
dec
stc
sub
dec
shl
int
sub
dec
and
mov
cmpsb
add
pandn
xlat
outsb
add
pop
das
inc
mov
stos
sbbl
stos
cmpl
rorb
cmp
pop
daa
ss
aam
aas
lret
repnz
dec
les
dec
and
dec
xor
pop
sub
add
lret
xor
cli
sbb
daa
add
inc
js
or
push
xchg
aaa
jle
cmp
out
push
aas
cs
inc
or
lock
sbb
cmovae
push
or
cmp
and
nop
insl
sbb
and
lea
sar
pusha
pop
xchg
cwtl
mov
cmpsl
push
jmp
adc
xchg
sti
aas
and
push
mov
fmull
pop
dec
and
mov
enter
add
out
cs
jb
mov
fisttps
aad
inc
pop
out
outsl
adc
fwait
mov
out
cmp
or
sub
rolb
push
cmp
mov
pop
xchg
xchg
push
xor
popa
ret
movsb
leave
test
and
bswap
mov
scas
call
add
int3
pop
mov
out
dec
cmp
push
dec
aas
fbld
test
ss
add
mov
pop
cmp
out
jns
fildl
push
aas
loop
jg
cmp
adc
aaa
cmp
leave
mov
jge
and
outsl
mov
adc
xor
rcr
xor
test
mov
fdivl
js
xlat
xchg
or
push
mov
mov
xchg
cmp
add
pop
mov
sbb
out
cs
dec
repnz
push
stos
push
jbe
cli
dec
nop
mov
xchg
out
mov
dec
mov
add
enter
lahf
fnstsw
push
shl
mov
dec
mov
sbb
mov
xchg
sbb
out
imul
sub
in
pop
cli
xor
mov
mov
cmp
imul
or
xchg
mov
shlb
jo
mov
push
movsb
int3
fs
push
sub
jnp
stos
xchg
pusha
imul
jl
jl
dec
push
mov
jb
movsb
inc
cmp
push
leave
fcompl
jo
adc
and
sub
movsl
xchg
icebp
pop
subl
pop
mov
dec
testb
push
pop
mov
lahf
inc
mov
jnp
sub
sbbl
mov
bound
or
hlt
xor
mov
or
sbb
dec
imul
add
addr16
pop
dec
pop
pop
sub
jmp
sbb
dec
jmp
fildll
xchg
pop
aas
dec
push
sbb
out
dec
es
in
push
adc
sarl
ds
cli
jecxz
les
lods
lret
mov
je
xchg
sub
push
jo
int
cmp
loope
mov
int3
pop
push
pop
icebp
sub
and
mov
shlb
mov
dec
pop
or
mov
dec
jmp
into
push
lret
or
cmp
filds
cld
mov
aaa
jp
cmp
icebp
icebp
jns
ljmp
pop
cmp
mov
test
adc
psubd
leave
xchg
sub
pop
ficoms
in
add
xor
inc
in
paddsb
imul
sub
mov
fwait
aas
dec
scas
mov
in
push
lcall
push
inc
dec
xchg
pushf
dec
inc
out
cmp
scas
gs
ret
out
push
and
mov
push
fwait
or
fwait
add
inc
or
or
rcrl
and
push
daa
cmp
xor
pop
inc
lahf
lds
movsl
cmp
xor
inc
mov
test
mov
and
mov
fisubrl
push
sarl
sbb
cmpsl
std
call
add
push
not
icebp
fcomi
imul
sub
jne
test
xchg
dec
mov
hlt
ret
faddl
test
pop
mov
roll
aas
jae
inc
dec
arpl
scas
or
loope
test
pop
popf
dec
cmp
int3
imul
imul
jo
outsb
dec
mov
push
dec
icebp
sub
inc
aad
pop
push
add
lock
xchg
das
data16
loope
and
xor
mov
in
xor
ret
int
dec
in
orw
xchg
movsl
repnz
lahf
or
lea
cmp
inc
pop
ss
leave
and
sbb
int
mov
fnstenv
dec
push
jge
add
pushf
sbb
ror
leave
adc
dec
lret
ffreep
push
adc
insb
push
dec
ss
sub
imul
sbb
sbb
lret
repnz
ljmp
mov
insl
fs
xchg
fwait
jge
xor
sbb
push
cmp
push
into
fmul
lret
xor
adc
push
popf
sub
lret
filds
outsl
mov
andl
and
sbb
jae
inc
call
inc
inc
orl
insl
inc
enter
shll
dec
fists
cmp
lods
push
add
push
in
xchg
sti
scas
inc
lods
ds
loope
cmp
dec
pop
sbb
xchg
iret
out
and
adc
cltd
std
jecxz
mov
cmp
adc
loope
mov
sahf
cmp
cmp
push
fstl
cmc
ja
cmpsl
js
push
shlb
in
pop
loop
xor
in
cmp
mov
test
mov
jge
jp
xor
mov
dec
aas
popf
cmpsl
inc
mov
xchg
add
inc
shll
cmp
push
jne
pusha
icebp
xor
or
sbb
xchg
cmp
lea
sti
out
call
test
fs
andl
sbb
sti
or
and
jg
rorl
or
pop
fists
in
inc
xchg
mov
ret
outsl
and
jle
mov
jp
jb
insb
adc
mov
outsb
add
push
scas
lret
popf
xchg
repz
push
and
pop
inc
cmp
movsb
rorb
adc
xchg
dec
fisubrs
pop
push
sub
or
dec
leave
jno
aam
mov
scas
lret
mov
xlat
loop
and
mulb
cmp
fnstenv
fbld
push
xor
inc
push
ss
inc
in
mov
bound
hlt
insl
or
fimuls
leave
adc
mov
call
testl
sbb
iret
movsb
push
in
mov
cld
jmp
jg
hlt
jmp
shll
pop
or
mov
sub
mov
jbe
adc
xor
push
sbb
ret
stc
or
mov
rcrl
inc
stc
data16
aam
dec
das
lods
xchg
imul
mov
mov
fstpt
cmp
stc
hlt
fmuls
test
xchg
scas
inc
inc
mov
push
dec
lret
lret
mov
push
xor
shlb
mov
lds
xor
std
push
mov
dec
push
mov
loop
je
outsl
jne
adc
fs
lret
add
inc
add
leave
push
out
mov
adc
test
dec
aaa
mulb
mov
xchg
mov
push
cmp
inc
bound
cmpl
andl
orl
lret
push
ret
or
mov
popf
inc
insl
add
and
cmp
mov
mov
mov
fcmovnu
pop
cmp
ror
dec
insl
mov
xchg
adc
jns
sub
leave
addl
movsl
aas
jecxz
fstps
jmp
xor
fs
mov
mov
mov
sub
or
je
clc
stos
inc
push
int
inc
notl
shll
sbb
mov
call
xchg
addr16
push
xchg
test
fstp
je
cmpsb
jbe
mov
loope
mov
inc
inc
mov
ret
add
pop
std
data16
std
test
scas
mov
cmp
pop
inc
xor
stos
rolb
jno
call
into
sti
mov
cwtl
ljmp
dec
pop
lea
stc
xchg
xchg
add
mov
das
add
icebp
ret
push
in
imul
sub
jmp
lahf
aad
ds
imul
sbb
pusha
add
shl
sub
call
lds
ret
dec
adc
sti
clc
loop
add
lahf
int3
mov
ficomps
adc
push
pop
mov
arpl
insb
enter
aaa
mov
jl
xchg
pop
lret
sub
out
and
add
movsb
les
inc
test
cmp
dec
jl
pop
inc
push
pop
es
mov
mov
dec
sti
lds
ds
movsb
ljmp
pop
mov
or
inc
adc
dec
ror
cmp
imul
pop
call
stc
or
lea
ret
cmp
aad
pop
xor
insb
popf
outsb
pop
stc
dec
mov
daa
aaa
dec
jp
hlt
fbld
xchg
ja
xchg
enter
add
cmp
xchg
push
pop
shl
in
movb
div
jl
and
jae
pop
inc
xchg
mov
lahf
xchg
adc
fsubrl
lock
stos
mov
ss
and
popf
popa
adc
dec
mov
sahf
es
push
pop
rorb
dec
push
adc
xchg
fsubs
gs
dec
ljmp
inc
loop
pop
out
aaa
outsl
mov
incb
mov
add
pop
imul
pushf
cs
int
out
call
out
add
aad
or
jmp
roll
enter
xor
push
sub
and
lods
cmpl
mov
shl
xchg
cmp
push
mov
das
imull
imul
es
pop
inc
sbb
mov
jge
and
int
cltd
jl
jne
pushf
fs
jb
jecxz
mov
nop
fwait
aas
lahf
push
xor
cmp
ret
ja
stos
xchg
mov
fstl
lahf
loope
sbb
sbb
sbb
into
mov
mov
dec
sbb
add
stc
js
mov
ja
and
decb
enter
icebp
mov
push
and
daa
xchg
sbb
push
adc
fs
lahf
imul
loop
cli
xchg
xchg
sbb
rol
xchg
addr16
cmp
loope
cmp
xchg
inc
imul
adc
fwait
leave
ret
ljmp
mov
out
xor
fwait
dec
mov
mov
mov
pop
scas
mov
aad
mov
pop
arpl
and
xlat
jge
inc
push
scas
push
lods
and
xchg
pop
sub
loopne
mov
jne
jno
xchg
adc
pop
sbb
add
testb
push
cmp
add
push
ficomps
mov
sbb
mov
pop
lods
lcall
lcall
not
sar
mov
arpl
ret
sbb
dec
shll
fistpll
sub
rcrl
loopne
sub
cmp
dec
shl
mov
subb
push
aas
sbb
repz
pushf
hlt
jmp
sbb
decb
imul
insl
shll
mov
jo
in
mov
sbbb
roll
les
push
pop
sbbb
mov
orb
test
fiadds
dec
adc
push
pop
adc
pusha
dec
xor
mov
in
push
jnp
add
pushf
mov
xchg
push
shll
ret
sti
bound
or
push
aam
xchg
and
test
adc
aaa
xchg
les
cwtl
fs
mov
or
sbb
or
adc
daa
fmul
and
and
lock
adc
sbb
mov
push
addr16
sahf
adc
stc
bnd
fisubrs
xor
xchg
or
xor
les
std
cmpsb
mov
scas
push
lea
mov
aas
pop
push
out
fdivr
test
pop
push
xor
inc
inc
fistl
jb
dec
mulb
inc
jmp
inc
push
jmp
imulb
jmp
pushf
dec
out
dec
movsb
test
repnz
rolb
or
jge
outsb
or
ret
pushf
dec
ffreep
imul
mov
sub
sub
lahf
inc
cmpsl
xchg
in
jle
push
fnstsw
out
add
call
arpl
cmp
daa
fmul
xor
gs
xor
push
jl
adc
cmpsl
push
jbe
pop
aad
pop
aad
push
mov
dec
sbb
cmp
clc
loop
stc
ret
scas
popa
leave
div
mov
or
dec
pop
and
les
aaa
and
push
mov
nop
dec
xchg
jno
int
or
ss
cmp
sbb
das
loope
cmpl
mov
cmp
xchg
dec
call
flds
mov
jb
add
pushf
mov
popa
mov
cmp
mov
jnp
cmp
adc
in
sub
mov
ja
shl
mov
popf
push
shlb
adc
mov
stos
push
xchg
into
icebp
les
nop
or
cmp
push
movsb
repnz
ds
jg
aaa
cwtl
cmp
ret
and
adcb
push
nop
inc
popa
fidivrs
cmp
repnz
inc
and
cmp
xchg
mov
add
pop
jo
imul
mov
pop
dec
leave
pop
pop
mov
sti
cmp
stos
in
pop
inc
subb
xlat
es
movsb
jle
daa
cmp
add
xchg
lcall
scas
lret
sub
sarb
xor
cmp
inc
lcall
pop
mov
inc
daa
jns
jb
fiaddl
cltd
push
or
inc
mov
dec
dec
mov
call
sarb
icebp
lods
rolb
pop
pushf
adc
das
xchg
inc
test
xor
ret
pop
xor
lahf
pushf
lea
scas
mov
out
jmp
orb
ljmp
pop
push
push
insl
and
mov
push
sbb
jnp
and
cmp
das
test
push
sbb
ret
outsl
int
adc
popf
jnp
lock
arpl
mov
mov
insl
push
jge
sahf
mov
sub
or
imull
inc
add
ss
lret
lcall
adc
shlb
aaa
add
out
or
sub
adc
std
mov
mov
dec
jp
jae
ds
cmp
sub
inc
xchg
mov
ds
xchg
aas
sub
test
sub
pop
mov
inc
rcrb
adc
mov
mov
cmpsb
dec
sub
adc
je
sub
ss
dec
cmp
loope
inc
dec
push
add
je
lahf
lods
arpl
sbb
in
jne
mov
hlt
cmp
sub
mov
sub
mov
xchg
push
jae
fldcw
popf
popa
cmp
stos
flds
outsb
adc
adc
std
icebp
out
insb
popf
inc
iret
pusha
mov
fldcw
leave
fldcw
and
sbb
int3
xor
inc
sub
sub
pop
inc
mov
mov
xchg
stos
xchg
cmp
mov
adc
pop
out
inc
mov
test
dec
scas
mov
mov
mov
mov
inc
sub
std
mov
jbe
push
cmp
pop
arpl
mov
cwtl
mov
sub
xor
push
adc
push
jg
inc
rclw
sub
ss
hlt
aas
mov
cmpsb
mov
call
mov
outsb
jnp
sub
call
outsb
sti
add
mov
or
jae
dec
in
pushf
jnp
sbbl
push
add
push
sahf
shrl
sub
push
icebp
ret
shl
pop
mov
outsl
sbb
add
stos
test
enter
mov
mov
repz
mov
fdivl
frstor
and
adc
pop
fidivs
add
push
jl
lcall
pop
rolb
std
in
lret
data16
imul
or
into
push
rolb
or
dec
leave
and
ret
or
dec
add
subb
adc
subl
pop
jb
xor
out
stc
bound
xchg
lods
repnz
or
insb
jnp
or
ljmp
mov
leave
shrl
lret
mull
inc
ss
push
lcall
pop
out
inc
mov
pusha
push
or
cmp
test
cmc
add
adc
dec
jp
mov
sub
mov
ljmp
mov
jp
in
outsb
aaa
or
sbb
loope
es
cmp
or
jnp
lret
lock
and
clc
xor
repnz
cmpsb
mov
mov
test
test
test
jg
lods
and
jnp
push
loope
notb
mov
xor
and
dec
fs
enter
cmpsl
aad
les
jg
test
mov
enter
mov
jo
sub
movsl
pop
jge
dec
push
push
jnp
xlat
push
insb
movsb
cwtl
hlt
pop
mov
mov
lods
sub
shrl
pop
stos
sti
or
xlat
jl
fstpl
xchg
inc
leave
lcall
mov
jae
push
fmull
adc
xchg
push
pop
ds
scas
movsl
xor
add
adc
fstps
jne
dec
popf
sbb
xor
mov
mov
dec
or
test
xlat
mov
or
xor
or
pop
and
mov
xchg
ffreep
mov
enter
sahf
incl
mov
xchg
push
loope
mov
fwait
jns
push
insb
dec
mov
addb
aas
or
aaa
into
add
or
inc
je
and
dec
xor
inc
xor
sub
std
add
push
mov
fistpll
out
or
cmp
fistpl
sbb
loopne
aad
xor
fdivrs
mov
cmpsl
or
out
lcall
xchg
xor
jns
xchg
inc
jl
push
or
add
mov
pop
in
lret
xor
call
movsb
ja
ret
cld
sub
mov
loopne
jns
cmp
sbb
adc
xlat
nop
fsubp
mov
pop
dec
adc
dec
mov
and
sbb
sahf
push
dec
lcall
leave
and
data16
xor
ljmp
add
inc
add
add
aam
mov
ds
jle,pn
ja
sub
jae
ljmp
subb
or
mov
mov
mov
mov
mov
stos
cmpb
rcrb
ds
lret
mov
fcmovb
sub
mov
aad
imul
in
and
ss
add
cli
scas
xor
addl
rorl
cltd
and
pop
cltd
pop
daa
or
push
lods
pop
xchg
cwtl
outsb
orl
call
xchg
adc
loope
loope
fucom
jnp
mov
inc
lods
mov
shlb
pop
mov
leave
mov
negl
icebp
scas
or
mov
cmc
mov
repz
add
out
jbe
stos
inc
jns
icebp
shlb
inc
sub
icebp
and
aaa
or
js
mov
mov
push
mov
dec
int
mov
mov
pop
hlt
pop
sbb
add
inc
mov
lods
fcmovnbe
pop
cmp
cmp
push
bound
lret
push
mov
bound
je
xor
mov
aad
mov
dec
lret
dec
popf
lea
and
mov
dec
rcrl
add
mov
xor
cs
lahf
push
push
aam
scas
pushf
popa
mov
or
adc
push
mov
int3
jo
imul
js
call
pop
mov
pop
aam
xor
add
dec
mov
dec
cld
std
inc
std
out
xor
sarb
popa
and
pop
pop
and
push
cmp
xor
or
inc
pop
sbb
adc
ficoml
jecxz
pop
icebp
je
xchg
mov
push
jmp
pop
cmc
mov
mov
arpl
mov
insl
adc
jmp
jo
negb
fcoms
push
add
out
add
mov
adc
mov
and
and
sbb
sbb
jp
mov
aas
add
xchg
or
adc
in
rorb
dec
sub
cmp
sbb
outsb
and
fisubs
inc
jl
jl
daa
aas
rorb
mov
jg
jg
out
push
cmpsl
push
sbb
sbb
xchg
adc
adc
adc
push
inc
cmp
lret
dec
lcall
pusha
cs
push
mov
mov
xchg
jae
sbb
and
xchg
lds
clc
inc
lods
xchg
out
mov
sbb
dec
mov
mov
mov
es
lret
push
dec
cmp
hlt
and
sub
test
aam
fstpl
pop
lret
popa
jo
inc
push
add
push
int
inc
sub
sub
shlb
jle
test
cmc
xor
jmp
pop
ja
shll
push
sub
cmp
pop
or
movsb
xchg
int3
scas
idivb
xor
jo
jbe
xchg
mov
jge
mov
mov
sti
pusha
sbb
add
add
mov
cmc
insl
outsl
cmc
mov
in
dec
mov
iret
sub
adc
jl
jp
push
jmp
jl,pn
add
or
push
ret
jne
or
dec
mov
insw
in
mov
sahf
pop
rcrl
inc
pop
rol
pop
pop
mov
icebp
fbld
push
aas
enter
in
xchg
sub
mov
jg
mov
sbb
xchg
and
and
daa
aas
sti
fcompl
addr16
xchg
push
cmpb
xchg
jae
andl
ret
sub
push
subl
stos
dec
pop
ds
sahf
inc
pop
leave
vminsd
sub
sbb
sub
pop
stc
stos
insb
xor
push
pushf
mov
mov
mov
inc
cli
pop
vpmacssdd
mov
stc
addr16
xor
stos
adc
aam
lahf
icebp
dec
leave
jbe
and
in
loop
repnz
or
lret
mov
push
push
jecxz
mov
dec
mov
movb
inc
push
icebp
mov
cld
xor
rcrl
stc
sbb
in
mov
mov
iret
call
cs
test
rcrb
push
mov
out
dec
outsb
in
loopne
js
and
movsl
enter
aam
ficompl
loope
pushf
xor
pusha
add
fwait
jle
fistps
je
subl
lahf
adc
or
dec
or
push
adcl
ret
pop
adc
aad
xor
loop
mov
mov
push
mov
ljmp
add
pop
cli
jg
jae
xor
jmp
roll
sub
std
xchg
mov
sbb
shrb
pop
movsb
mov
inc
add
test
out
je
nop
xchg
ljmp
mov
mov
dec
sarb
bound
sub
rdtsc
jns
data16
leave
test
mov
fwait
xor
hlt
dec
ja
pop
inc
mov
xchg
dec
mov
daa
shlb
cmpsb
fnstsw
add
in
push
in
mov
mov
int3
sub
xchg
stc
sbb
ret
jne
mov
pushf
mov
cwtl
cs
sbb
push
and
and
sbb
in
add
mov
icebp
test
fisttps
inc
stos
jle
fdivl
lods
inc
xchg
xor
scas
leave
cwtl
cmp
lcall
inc
push
popf
rorl
es
dec
aas
jecxz
xchg
dec
incl
in
int3
dec
je
and
jl
test
cltd
aam
inc
xor
frstor
mov
arpl
fmul
insb
pop
sub
push
inc
in
sbb
in
lahf
xlat
sbb
xchg
stc
dec
mov
pop
sub
mov
mov
cs
rcr
cmp
dec
js
adc
add
mov
push
ljmp
fdivrl
test
push
inc
xor
adc
jbe
add
mov
jne
stos
inc
imul
cmpsb
xor
xlat
dec
dec
fcompl
repz
adc
xchg
pop
stos
ja
dec
ret
es
in
hlt
mov
adc
es
dec
jge
loop
add
repz
pop
shl
cmp
aad
lret
stc
dec
sub
lahf
outsl
jno
fucom
movsb
cmp
int3
gs
sub
and
test
cwtl
mov
xchg
jp
jge
and
hlt
mov
xor
adc
popa
sub
das
stc
mov
jge
aam
les
mov
es
push
cmpsb
in
lds
adc
push
sbb
or
shlb
xchg
sbb
in
cmp
mov
insl
inc
mov
movb
or
sbb
or
mov
movsl
pop
lret
aam
out
sbb
stc
mov
or
movsb
add
outsl
pop
push
add
out
ret
jnp
xor
adc
enter
mov
mov
das
inc
or
test
out
sbb
jle
mov
fisubrl
pop
add
fcmovbe
je
cmp
test
je
jo
orl
cmpsl
aad
push
aaa
jno
leave
sbb
and
pop
pop
stos
popa
pop
xchg
mov
sbb
rcrb
sbb
test
or
jo
pushl
fadds
fcmove
adc
adc
xchg
mov
cltd
int
repnz
out
ja
std
xchg
adc
icebp
or
cli
test
daa
outsb
mov
push
sub
mov
divb
inc
cmc
mov
lahf
out
faddl
clc
iret
dec
jae
add
push
mov
jno
aas
xchg
adc
xorb
sbb
pop
adc
pusha
mov
outsl
jg
mov
and
int3
xor
rcrb
pusha
cmp
add
mov
testl
dec
push
jne
pop
inc
mov
pop
sarb
sti
aad
lods
push
ds
imul
and
cmp
loope
fimull
xchg
imul
ret
push
add
lret
inc
ljmp
mov
mov
lret
sbb
or
inc
mov
lcall
dec
add
stos
adcl
ss
and
lods
rcrb
cmp
clc
shl
and
push
addl
cmp
ss
dec
jg
mov
sbb
subl
xor
push
pop
jnp
lock
mov
jbe
enter
mov
push
add
push
add
test
mov
lds
mov
lcall
daa
popa
sbb
popf
and
cltd
test
mov
xor
jne
pop
icebp
dec
sub
dec
sahf
sub
jge
cltd
gs
and
into
cmp
sub
adc
pop
dec
xlat
push
add
insb
ljmp
shl
pop
sub
push
push
or
xlat
and
add
aaa
jl
loop
push
add
dec
pop
jno
aas
mov
or
jg
cld
dec
testl
cs
or
and
lods
out
pushf
sbb
push
mov
mov
or
imull
and
shlb
das
sub
mov
shl
out
cld
out
xchg
int3
fsts
test
push
mov
push
inc
sbb
inc
fnsave
fcoml
pop
xchg
jns
jecxz
cmp
mov
and
mov
addr16
leave
mov
push
xor
repz
mov
rcl
imul
adc
sbb
push
jl
cmp
jnp
xchg
sbb
cwtl
insb
sti
dec
fidivl
jnp
mov
push
xchg
xor
mov
call
push
mov
shr
jmp
addr16
push
xchg
mov
ja
lret
imul
add
mov
jb
sub
mov
mov
add
or
hlt
out
loopne
or
xor
es
lea
or
pushf
dec
mov
loop
dec
js
roll
les
outsb
xlat
lds
xor
mov
add
push
push
add
repnz
mov
jge
mov
icebp
aaa
les
jbe
sub
pusha
sbb
push
push
repz
in
pop
sub
insb
push
loop
lea
sbb
gs
or
dec
sbb
insb
dec
mov
repz
xlat
inc
fsubl
inc
fsubs
jns
sti
mov
js
jns
and
add
shr
and
and
push
dec
fdivrl
inc
aad
adc
vcvtss2sd
pop
cmp
clc
sub
pop
out
jmp
pop
inc
repnz
xorl
gs
int3
mov
mov
sbb
fcmovnu
repnz
inc
sub
test
add
incb
pop
and
mov
inc
gs
jmp
adc
push
out
cs
cld
lds
nop
imul
jl
adc
jp
sbb
cs
xor
popf
xchg
mov
mov
xchg
sub
aad
in
adc
jge
shrl
js
add
mov
xor
dec
roll
push
loop
iret
stos
jb
mov
mov
xchg
mov
pop
mov
pop
fnstcw
mov
imul
ds
ja
jb
scas
int
xchg
cli
mov
mov
aas
xchg
and
jecxz
pop
cmp
mov
clc
es
jle
xchg
rcll
push
cwtl
push
shrb
push
lret
inc
or
stc
dec
repz
dec
aas
jle
push
sub
or
jge
mov
mov
test
sbb
add
subb
ja
rcrb
xor
jge
ficomps
sbb
clc
and
fisttps
sub
testl
xchg
lods
and
mov
xlat
loop
add
outsb
lret
push
pop
ror
ja
jle
inc
mov
mov
xor
iret
int
push
pop
std
dec
inc
adc
mov
loopne
cmp
popl
mov
filds
fnstcw
shl
adc
repz
sub
stos
hlt
sbb
cli
out
jno
push
out
nop
mov
in
pop
dec
loope
aam
push
stc
cmp
push
aaa
jmp
cli
or
mov
cwtl
scas
xchg
mov
sub
cmp
cmp
xchg
in
jecxz
fs
cmp
push
and
inc
imull
stos
divb
mov
cli
mov
sub
adc
sbb
cmp
fs
or
jle
and
push
sahf
push
adc
inc
jno
sbb
lea
xlat
in
pusha
xchg
outsl
stos
xchg
and
add
mov
xchg
push
jl
decl
push
shl
or
mov
lcall
mov
dec
mov
cmpb
shl
xchg
inc
jecxz
rcr
dec
stos
jle
outsb
int3
pop
mov
add
sub
fldt
sub
xor
scas
inc
cmp
sbb
or
shll
add
imul
popf
push
jae
dec
pop
xor
add
sti
sbb
mov
mov
jae
daa
dec
hlt
rcl
int
loopne
pop
int
mov
mull
cltd
add
sbb
cmpsb
adc
fdivrl
bound
dec
cmc
clc
jmp
add
int3
das
mov
pop
xchg
repnz
push
ss
cmp
sahf
es
push
add
cmpsl
in
fstpt
pop
iret
mov
imulb
push
and
mov
and
mov
loop
arpl
incl
cltd
cld
jo
and
jb
push
test
lods
movsl
inc
jl
cmp
push
cli
mov
popa
mov
or
inc
cmp
movsb
ds
fdivr
sbb
hlt
dec
jbe
xchg
and
add
bound
push
aas
inc
inc
and
xor
sbb
push
push
fildl
call
mov
add
or
arpl
mov
jge
jp
mov
cmpsb
adc
pop
xchg
xchg
loop
cmpsl
in
clc
xchg
pop
xchg
xchg
cmp
fstps
mov
push
shlb
adc
or
add
ficoms
andb
js
fisubrl
xor
xor
jns
adc
cli
sbb
mov
movl
adc
fisttpl
or
dec
imul
push
in
dec
mov
and
xchg
mov
dec
mov
or
jecxz
js
pop
and
ds
push
out
and
mov
xchg
mov
lods
int3
xchg
ds
gs
or
cltd
mov
sbb
and
jns
or
push
xor
test
divl
mov
xorb
fisubs
in
inc
dec
add
cmp
stos
inc
push
notl
cmp
mov
bound
es
fcmovb
idivb
inc
dec
out
mov
pop
cmp
in
dec
and
ret
and
dec
ss
sub
pop
mov
xor
mov
push
popa
pop
fsts
xor
je
sbb
faddl
int
and
mov
jo
ret
dec
sub
out
out
rcrb
fadds
inc
cltd
jge
push
bound
dec
push
arpl
jl
or
push
dec
rcrl
jge
mov
adc
mov
inc
and
in
xor
adc
or
mov
cmp
movntps
jno
xchg
mov
or
mov
xor
es
repnz
push
dec
testb
js
xor
imull
sub
ljmp
add
jno
pop
std
mov
dec
gs
or
imul
fidivs
lods
loop
into
xchg
add
pop
fbstp
outsb
rcrb
xor
repnz
popa
popf
dec
mov
incl
das
popa
mov
mov
je
inc
cmpl
sbb
ret
mov
addr16
add
out
jp
es
adc
adc
push
pop
sub
ret
cmp
ret
call
rclb
inc
add
push
sub
shrl
test
dec
or
dec
leave
push
mov
sub
imul
ss
lods
xchg
jnp
stos
pop
sub
push
scas
cmp
and
push
mov
aam
inc
adc
xchg
pop
xor
mov
cs
jl
clc
and
shrb
rol
sbb
pop
fidivs
stos
adc
popf
push
test
divl
movsl
jp
mov
fwait
lock
loopne
stos
cmp
jle
xor
ds
add
cltd
sbb
add
xor
xor
xchg
cmc
pop
dec
push
test
inc
jnp
lcall
cwtl
orl
insl
push
cmp
and
lret
and
idivb
sbb
pop
lods
fimull
mov
sbb
push
xchg
test
fsub
mov
movsl
inc
dec
push
ds
dec
mov
add
loop
clc
lock
pop
mov
sahf
cmpsb
andl
daa
push
scas
aas
ljmp
jbe
mulb
mov
cmpsb
mov
lahf
push
dec
out
xchg
jnp
mov
jmp
xor
mov
pushf
lahf
add
imul
scas
es
in
inc
push
pop
jmp
jo
mov
hlt
xchg
push
cmp
cmc
xchg
enter
jmp
addb
or
or
adc
das
adc
lret
mov
jno
adc
push
xchg
push
add
out
adc
inc
mov
gs
xchg
int3
jae
cmp
imul
popf
push
push
rcrl
ret
push
xor
int3
imul
adc
add
fists
mov
mov
in
and
and
enter
push
dec
in
xor
idivl
xchg
jo
fiadds
rolb
insb
dec
mov
imul
cmp
idivb
pop
jl
lea
xchg
xchg
pop
mov
inc
cwtl
or
lret
sarl
pop
and
leave
sbb
xchg
xor
xor
jp
lods
nop
fiaddl
clc
and
sub
mov
clc
call
adcl
aad
cwtl
cmp
xor
sahf
jns
jnp
xor
dec
xor
addr16
mov
in
lcall
mov
jae
cmc
aas
mov
push
pop
addr16
pop
sub
pop
fisubl
and
stos
sub
rolb
pop
ret
jmp
sbb
cmp
and
subb
clc
std
dec
insb
pop
push
sub
adc
lods
pop
xor
adc
and
and
in
push
outsl
outsl
lahf
repz
mov
sarl
xor
xchg
pushf
push
add
pop
add
loope
sbb
jmp
xchg
gs
ljmp
repnz
std
frstor
xchg
pop
ljmp
xchg
jl
push
adc
xchg
cmc
ljmp
cli
outsb
arpl
imulb
cli
sub
dec
mov
xchg
mov
mov
pop
out
sbb
add
int
int3
sbb
cmp
cltd
sub
outsl
jne
fcmovnbe
add
rcr
or
fwait
rolb
shrb
rorl
adc
popa
js
mov
cwtl
cli
cltd
or
sub
mov
jg
jns
jmp
pop
psubd
aam
sti
cmpsl
dec
cltd
pop
aaa
fstps
xchg
rclb
pop
cmp
faddp
inc
xor
mov
adc
icebp
inc
mov
ja
es
pop
daa
add
pop
mov
push
test
ja,pt
xchg
std
jg
mov
daa
push
cltd
cwtl
loopne
jmp
repz
jl
push
dec
fidivl
shll
mov
std
stos
aad
sub
inc
mov
cwtl
stc
pop
div
fldt
mov
das
in
pop
stos
test
cwtl
int
mov
loop
jae
adc
fwait
iret
test
test
imul
lods
test
cmp
adc
jb
aas
cmpsb
push
dec
sbb
xor
sbb
bound
adc
cmc
add
ficomps
lods
out
xchg
xchg
dec
lods
sahf
out
jl
jae
lahf
test
loop
fnsave
sbb
fcomp
ja
mov
mov
pop
dec
push
movsl
les
popf
neg
jge
push
stc
inc
data16
sub
jecxz
enter
inc
lods
in
loop
outsb
jb
insl
jg
adc
pop
jmp
addl
sub
and
inc
ja
icebp
jns
dec
call
sbb
mov
jmp
imul
pop
mov
and
mov
fmulp
cmp
dec
pop
xchg
xor
mov
adc
ds
je
out
dec
cmp
cmp
mov
scas
xor
loop
js
jbe
mov
adc
jb
int3
pop
sbb
pop
mov
cmc
test
jnp
sarb
test
lret
jb
out
insb
cmp
sub
inc
gs
imul
xor
jge
fimuls
lods
push
loop
popf
imul
lret
mov
addl
jmp
adc
cmpsl
adc
das
loope
adc
subb
enter
mov
repz
push
stc
pop
loope
fs
xchg
pop
or
or
mov
xchg
nop
cmpsl
inc
cmp
cwtl
out
outsb
cmp
sbb
cltd
loopne
cli
mov
xchg
sub
xchg
mov
out
add
inc
leave
pop
loope
push
mov
in
cmp
pop
mov
and
add
lret
mov
mov
scas
jl
cmp
rorl
mov
adc
sbb
and
cld
jae
in
and
mov
mov
jnp
pop
shll
dec
in
aaa
aad
cmc
xchg
shl
xor
xchg
mov
pop
out
sbb
push
inc
in
in
enter
jo
jae
clc
jne
push
loopne
adc
subl
cwtl
enter
xchg
mov
jns
ror
int
out
inc
je
mov
pop
or
sbb
insl
jl
sbb
data16
jae
mov
icebp
add
cmpsl
pop
pop
nop
nop
fst
das
in
and
sbb
push
mov
mov
jge
xchg
dec
sub
cmp
adc
pusha
js
sahf
and
pop
or
repnz
add
lret
lods
sub
jnp
aaa
rorb
dec
aaa
push
xchg
je
sbb
insl
cwtl
pop
mov
aam
or
bound
movsb
sbb
ljmp
into
test
sub
mov
jb
popa
into
leave
cmp
test
ret
jl
ds
sub
pop
xchg
fadd
dec
shlb
sbb
outsb
mov
and
aam
jge
hlt
je
ja
popf
bound
jne
dec
shlb
jne
inc
aaa
add
rcl
mov
sahf
dec
int
cmp
out
inc
sub
push
push
sub
mov
xor
rcrb
sbb
jmp
repnz
or
popa
jp
mov
inc
mov
or
nop
cmp
push
push
ds
pop
jmp
xor
js
xchg
adc
fwait
dec
ljmp
rorl
adc
lcall
sar
mov
orl
imul
inc
xor
mov
add
cmp
lret
ss
jo
pop
adc
pop
flds
mov
and
add
jb
adc
sbb
idivl
mov
xchg
add
shll
fdivrs
xchg
fdivl
xor
sbb
cli
lods
push
xor
ficomps
scas
cmpl
xor
testl
mov
xor
rcll
scas
insb
dec
fistps
xchg
mov
push
rcrb
sub
inc
lcall
in
ljmp
adc
outsb
js
xchg
cmc
sbb
in
int
add
in
xor
int
aad
mov
ret
push
mov
jp
adc
pushf
and
nop
in
outsb
push
data16
jle
cmp
hlt
or
popa
jle
ret
add
std
and
inc
hlt
xor
add
sub
mov
or
stc
pop
fnstenv
xor
mov
lods
adc
add
clc
lret
dec
cs
mov
outsl
adc
stos
nop
in
inc
mov
inc
sbb
imul
push
int3
subb
jp
jp
xlat
stc
in
push
inc
outsb
int
sbb
cmp
adc
test
push
iret
add
out
dec
cmpl
dec
outsl
or
pop
sbb
add
les
mov
arpl
xor
out
lahf
insl
insl
push
ret
out
cli
add
pop
and
push
data16
in
sbb
xchg
xchg
inc
jl
or
jns
ss
test
push
aaa
cmpb
ljmp
sub
jmp
leave
mov
dec
dec
ss
or
dec
sbb
aas
loopne
hlt
mov
and
out
mov
and
test
ds
int
push
lret
inc
movups
in
or
lods
and
xchg
mov
dec
iret
dec
leave
mov
push
sbb
aad
ror
fstps
pop
subb
adc
stos
jg
fdivl
leave
xchg
mov
bswap
ja
incb
mov
dec
sub
push
mov
gs
movsb
inc
ret
dec
std
dec
add
loopne
jmp
xchg
es
or
pop
int3
cmp
test
js
in
pop
sbb
and
aad
mov
mov
jbe
push
leave
xlat
xchg
out
pop
ror
pop
mov
bnd
push
adc
push
movsb
sbbb
dec
insb
popl
jns
ss
ret
in
mov
scas
cmc
pushf
jmp
nop
jmp
dec
mov
cmc
ljmp
and
pop
xchg
xchg
sub
in
or
rcrl
lds
pop
xor
dec
dec
pop
push
sub
push
add
jb
out
mov
stos
repz
mov
testl
push
and
cwtl
shll
jmp
nop
mov
inc
rcrl
sbb
add
lret
inc
adc
xchg
inc
cwtl
arpl
add
imul
jno
mov
adc
xchg
mov
cmpb
stos
ficoms
jno
and
mov
imul
popa
mov
sbb
cmp
fdivs
lods
pop
mov
xor
js
push
sti
mov
mov
out
cmp
imul
out
loope
int3
lods
or
push
and
mov
mov
mov
jno
lods
dec
mov
enter
pop
jae
outsb
mov
push
add
xor
lret
cmp
inc
dec
and
int3
adc
pop
jo
enter
adc
ret
ret
sahf
aad
jg
xor
jns
aam
cmp
push
fimuls
insl
cmp
inc
lds
xlat
stos
fidivs
hlt
test
mov
sbb
mov
xor
mov
outsb
xor
mulb
push
pop
outsl
sbb
inc
and
popa
stos
iret
pop
inc
dec
in
dec
xchg
add
and
mov
mov
cltd
sarb
fnsave
jb
pop
aam
stos
and
mov
mov
jno
stos
dec
mov
pushf
mov
jg
adc
mov
in
inc
jmp
decl
pusha
lret
dec
sub
jns
push
adc
int
jne
aad
mov
jge
pop
fnsave
add
inc
pop
insb
movsl
mov
aam
test
dec
xchg
dec
xor
arpl
sbb
in
pop
sbb
scas
mov
cmp
test
push
lods
cmp
mov
fldt
in
and
cmc
sub
scas
sbb
push
xor
sbb
and
jo
ss
mov
lds
ret
jne
fwait
mov
xor
ljmp
pusha
enter
outsl
orb
test
xor
repnz
mov
dec
test
mov
cli
mov
inc
or
adc
cmpsb
mov
int3
mov
stc
inc
addb
mov
incl
mov
mov
out
add
push
ds
iret
hlt
push
sbb
pop
test
lea
mov
dec
cli
mov
pop
mov
rorb
xchg
sahf
scas
subl
mov
jo
or
inc
out
std
push
adc
jae
lea
cmp
out
xchg
push
sti
test
clc
push
loope
inc
add
inc
adc
lahf
enter
lock
imul
mov
std
jp
pop
sbb
insl
js
inc
jb
filds
sahf
dec
sbb
dec
dec
mov
js
add
pushf
sbb
mov
mov
add
push
mov
and
cmp
ss
push
jg
outsl
mov
aaa
mov
std
pusha
gs
xlat
mov
jb
popa
push
mov
push
xchg
outsb
es
add
xchg
dec
movsl
xor
mov
sbb
or
lahf
icebp
stos
mov
in
stc
lret
lock
ljmp
xchg
xchg
push
sub
pushf
shr
dec
adc
out
cli
fistpl
push
inc
and
inc
mov
cmp
pop
cmp
xor
adc
add
push
and
pop
lcall
cltd
dec
inc
jno
xlat
or
fisubrl
call
pop
lods
mov
lcall
sti
add
xchg
imulb
inc
inc
push
adc
xchg
sarl
push
inc
xor
inc
arpl
push
sbb
mov
sbb
imul
cmpsl
sbbl
push
xchg
mov
stos
lret
jno
cmpsb
bound
jae
push
push
sbbb
jecxz
adcl
int
inc
inc
test
fistl
sbb
jmp
xbegin
sbbl
ss
push
or
int
mov
pop
cmpsl
sti
imul
adc
out
leave
mov
or
pop
shrl
dec
and
mov
inc
mov
leave
lahf
sub
fisubrs
roll
hlt
mov
adc
aas
mov
dec
stos
cmp
push
push
mov
sub
lret
fwait
and
or
aam
mov
cmovns
xchg
addr16
sti
fmuls
pusha
imul
call
push
clc
lcall
or
ret
mov
test
add
mov
push
lret
or
rorb
ljmp
sbb
movsb
xor
mov
cmp
xor
es
leave
sub
cmp
out
push
push
mov
mov
mov
jo
stc
outsl
pop
jmp
jbe
mov
push
loopne
outsl
add
cmp
and
or
xlat
scas
or
lea
cmovno
adc
mov
std
dec
dec
push
movsb
mov
or
lds
inc
outsl
jbe
push
pop
mov
xor
dec
pushf
cmc
lock
mov
mov
ds
add
data16
push
mov
sbb
cmp
cmove
cwtl
dec
cwtl
ltr
pusha
ja
lods
adc
in
sbb
or
mov
pop
or
mov
movsl
loop
test
sub
or
adc
push
pop
mov
addr16
add
or
pop
repz
mov
dec
fcmovne
shrl
mov
flds
fdivs
pop
aad
pop
aas
sahf
or
add
idivb
fwait
mov
fs
mov
adc
es
cli
pop
cltd
pop
pushf
cmc
stos
jl
xchg
nop
xchg
inc
xor
mov
inc
mov
testl
jns
cmc
xor
jl
cld
stos
es
popf
roll
cwtl
fwait
jae
dec
jns
lea
cwtl
push
repz
jmp
mov
aaa
mov
mov
add
xchg
imul
xchg
and
imul
shll
js
push
out
inc
std
sub
daa
jbe
sub
inc
lret
jecxz
dec
inc
push
outsl
and
jg
lock
inc
fnstenv
adc
cld
mov
outsb
jp
es
adc
jge
lds
enter
lods
cld
outsb
in
sar
xor
fwait
xorl
mov
pop
mov
lret
les
mov
mov
jnp
dec
cltd
outsl
xorl
push
jl
mov
hlt
imul
inc
xor
ljmp
fwait
cltd
popa
xlat
push
mov
shlb
xchg
test
test
loop
jp
in
inc
inc
aad
cltd
inc
aaa
jne
cwtl
scas
dec
mov
lret
or
repz
stc
lret
arpl
sbb
aam
push
push
enter
insb
out
pusha
jbe
fwait
dec
sbb
fbstp
push
and
fstl
inc
inc
xchg
push
mov
jnp
scas
in
test
adc
mov
in
or
fldz
adc
pop
adc
sbb
pop
adc
pop
mov
mov
iret
pop
das
push
addr16
lahf
sub
aam
sbb
cmp
mov
xor
lds
dec
pop
int3
stc
xlat
sbb
mov
adc
pushaw
xchg
dec
fwait
subb
push
fidivrs
mov
mov
cmpsl
popa
adc
aad
dec
mov
push
enter
xchg
mov
arpl
call
adc
out
cmc
test
dec
in
pop
push
fidivrl
and
adc
xchg
sub
insb
jl
lcall
out
shrb
fwait
inc
add
addr16
mov
mov
loope
orb
fstps
in
xchg
adc
lods
sub
mov
lcall
aad
or
jmp
ds
call
mov
dec
bnd
push
sarb
xor
loopnew
fnstcw
dec
call
inc
frstor
lcall
mov
jmp
es
adcl
adc
dec
inc
jae
repnz
cmp
cwtl
in
cli
add
in
stc
shlb
pop
aad
mov
loope
or
sub
inc
sbb
jle
mov
fwait
movsb
adc
jp
jbe
fdivr
test
pop
or
push
xor
xchg
xchg
jno
and
movsl
daa
insb
out
jge
pop
jo
aam
pop
xchg
hlt
and
and
out
cmp
sarl
nop
lea
jae
cmc
das
inc
js
loop
arpl
call
in
mov
add
add
mov
cmc
add
mov
mov
inc
pop
sahf
pop
pop
mov
inc
cmpsb
fsubrs
mov
jp
jl
inc
jle
and
pop
sbb
call
pop
test
push
dec
cltd
fldl
ljmp
gs
fcomps
test
jmp
roll
cwtl
jnp
daa
or
or
addr16
xchg
jnp
mov
repnz
rorb
stos
lahf
ficoms
jge
lds
and
pop
les
stos
fistps
push
add
jbe
inc
lods
add
shr
cmp
fstpt
je
test
pop
imul
fwait
or
in
push
cmpsl
cmp
les
hlt
xor
jle
das
jp
daa
rorl
in
divl
outsl
fmuls
pop
sbb
sub
outsb
das
sahf
add
mov
in
sbb
pusha
sbb
rol
sub
in
subb
inc
cld
fistl
jmp
dec
jp
loope
test
fisttpl
adc
ret
cmp
push
pop
jbe
mov
adc
ficomps
popa
clc
ss
es
cmp
das
insb
shr
xchg
sub
jge
sbb
in
insb
and
inc
cmp
mov
mov
mov
hlt
inc
mov
xorl
lds
mov
pop
test
jg
ss
js
push
stos
mov
fs
add
jae
adc
or
iret
mov
sbb
mov
push
test
dec
shll
andl
xor
push
jno
cmp
fmuls
dec
jmp
je
cmpsl
and
xchg
cwtl
mov
sbb
inc
ror
adc
adc
or
leave
xor
pop
adc
lds
mov
cmp
das
pop
in
jg
xchg
fwait
adcl
mov
pop
test
add
stos
add
fwait
mov
cmp
mov
sti
dec
mov
mov
and
cmp
notb
add
push
jb
cmp
mov
push
inc
mov
xchg
fucomi
int3
dec
xchg
inc
insb
out
sub
mov
addr16
xor
mov
call
xor
mov
imul
and
mov
jl
mov
leave
and
push
add
scas
adc
data16
sbb
fsubs
pop
mov
fistpll
or
cmp
insb
dec
fs
les
jno
fcoms
xor
mov
push
aam
jmp
dec
aad
out
adc
inc
mov
sub
mov
mov
mov
enter
mov
enter
push
rorl
cli
jl
pop
ret
aam
push
vcmpsd
xchg
popa
data16
clc
mov
divl
inc
mov
idivb
adc
mov
jg
cmp
gs
cwtl
ja
in
and
and
int3
and
cmp
sbb
dec
add
mov
lds
xchg
jmp
push
jne
cltd
mov
jbe
cmc
imul
dec
daa
pop
clc
mov
dec
push
jmp
gs
shlb
inc
cs
popl
jg
push
call
sbb
jmp
mov
lods
cmp
cmpsb
xor
out
pop
cs
mov
cmp
inc
xor
sub
dec
addl
xlat
fwait
mov
mov
lcall
loop,pt
xchg
xor
mov
rolb
loop
movsl
mov
sbb
and
in
je
sub
and
lds
sub
mov
rcl
xchg
xchg
xchg
ljmp
std
sarb
pusha
xchg
sahf
mov
push
add
mov
add
mov
nop
xlat
cmpsb
nop
stc
sahf
pop
mov
jne
pop
inc
in
pop
add
mov
jo
mov
aad
outsl
push
fwait
sbb
adc
mov
lahf
pop
pusha
lret
and
mov
fisubrl
gs
cmp
xor
std
dec
fisubl
outsl
or
je
sbbb
es
cmp
jle
sub
mov
mov
inc
adc
das
mov
js
fdivrl
into
sar
mov
inc
mov
or
mov
cli
inc
lret
sbb
outsl
pushf
and
push
loope
sbb
or
jl
inc
dec
cmp
and
cmc
test
mov
mov
jl
cmc
mov
push
push
mov
mov
sar
xchg
pushf
lret
inc
mov
fst
ljmp
movsb
inc
sti
sbb
jae
dec
push
lcall
ljmp
data16
inc
ret
ficoml
push
lret
jno
shll
addr16
adc
fld
xchg
cmp
pop
aam
push
into
jb,pt
sub
loopne
iret
sti
push
adcl
inc
bound
stos
and
cmp
mov
mov
mov
add
push
adc
dec
lds
dec
mov
inc
out
mov
jmp
js
fcompp
cltd
pop
or
and
adc
nop
push
scas
shlb
test
pop
pop
xor
shr
das
or
cmp
fildll
hlt
inc
cld
cmpsb
insl
imul
mov
daa
sarb
jae
push
push
inc
shl
mov
sub
rcrb
shrb
xchg
xorl
es
add
mov
and
imul
out
mov
iret
cwtl
jae
sbb
adc
not
push
insb
pushf
adc
push
nop
dec
jle
das
test
es
sahf
push
scas
repnz
jmp
pushl
in
push
mov
sarb
cmp
mov
aad
adc
std
cs
addl
cmpl
sti
pop
mov
loopne
jns
dec
or
ffree
and
ds
push
in
jno
add
jg
les
add
mov
xchg
stos
or
ficoml
mov
popf
fdivrs
cwtl
stos
or
and
loope
mov
mov
testl
add
in
mov
pop
jmp
pop
fadd
mov
fucomp
jb
adc
inc
cli
sarb
fsub
mov
jge
jo
mov
nop
sub
shrl
out
test
loope
ret
jge
shll
xor
in
jae
mov
xor
jmp
repz
pop
test
aad
push
ficompl
mov
mov
stos
sub
pop
ret
fstps
fsubl
fisubs
jne
mov
mov
sub
add
xchg
call
dec
and
mov
add
imul
addl
pop
jae
and
sbb
addl
ret
sahf
cmc
push
cmpsb
cmpsl
xchg
add
mov
mov
adc
les
mov
xor
pushf
fdivl
adc
mov
sub
push
add
xchg
and
xor
push
leave
xor
sahf
xchg
cmp
aas
xor
fidivrs
adcl
fidivl
pop
cmp
dec
fwait
xchg
fnsave
lea
mov
sbb
clc
jb
test
push
mov
xchg
xor
mov
cwtl
mov
jns
pop
push
jbe
out
les
insb
sbbb
push
clc
mov
outsl
add
and
ss
test
xlat
fisubrs
or
xlat
sbb
inc
das
ds
push
rolb
xor
das
test
aaa
sbb
adc
xor
lret
data16
mov
dec
jnp
pop
adc
rolb
lea
cs
lock
sub
cs
xchg
test
jmp
sub
jnp
lahf
leave
mov
outsl
bound
mov
sarb
lods
lds
sub
adc
shrb
jg
pop
inc
jmp
mov
xor
sarb
std
add
cld
rorl
adc
jle
pop
int3
jge
out
push
inc
test
enter
cmp
pop
std
adc
repnz
pop
lret
bound
adc
ficoms
or
push
std
movsl
movsb
pop
xlat
mov
iret
mov
cmpsb
scas
sti
into
jp
imul
sbb
sub
mov
clc
cmc
test
cmp
push
push
in
rclb
gs
xor
mov
popa
push
pop
fnstenv
inc
insb
es
fcomps
xchg
push
push
inc
dec
andb
dec
std
inc
or
clc
jl
mov
es
cmc
je
dec
cs
jne
lret
jmp
loop
cmpsl
pop
lea
inc
lahf
stos
fbstp
pop
cli
xor
fadds
mov
mov
dec
add
push
mov
stos
out
add
push
mov
sub
adc
iret
push
push
stos
rcr
out
sbb
add
adc
icebp
es
pop
inc
add
cld
arpl
jbe
inc
mov
fisubrs
call
gs
mov
aaa
cwtl
iret
fldt
and
jne
mov
adc
jns
sub
push
cld
mov
xchg
dec
aam
mov
or
cmp
and
xor
jp
mov
inc
pop
mov
pop
push
imul
les
subl
into
jns
test
lahf
test
lods
add
fsubrl
insl
dec
xor
dec
movsl
rcrl
in
adc
std
xor
mov
ss
mov
cltd
dec
jbe
dec
xchg
lea
push
jb
pop
cmc
je
fildl
movsl
push
insb
imul
stc
cmp
imul
iret
outsb
jae
cltd
test
sbbb
cmp
das
xchg
testl
sub
push
push
hlt
cwtl
mov
je
mov
xchg
loope
pushf
pop
or
ret
stos
mov
inc
lods
xchg
dec
rsm
or
push
fsubrl
imul
sub
mov
cltd
mov
call
out
pop
daa
jg
dec
enter
fidivrl
out
inc
push
leave
add
push
and
jge
bnd
mov
lret
pop
cmp
adc
pop
push
cmpsb
add
sub
test
or
out
adc
mov
insb
inc
aam
mov
sbb
adc
aas
or
ja
push
adc
jno
int3
dec
mov
adc
or
inc
int3
jo
test
pop
aam
push
push
popf
pop
push
xor
cmpsl
fldenv
xor
scas
inc
test
jae
cmp
loope
push
fbstp
inc
xchg
sub
cmp
push
sbb
jb
or
sahf
aam
inc
mov
insl
add
adc
push
cli
imul
add
insl
mov
mov
in
cmp
add
cltd
and
fcom
cmpsl
jmp
xchg
out
inc
pop
test
lcall
into
sub
sub
insb
imul
adc
bswap
pop
cmp
pop
dec
add
pop
pop
pop
jne
outsb
dec
daa
mov
mov
sub
and
pop
or
jge
dec
ret
jle
enter
adc
aaa
mov
dec
stos
jl
subl
pop
xchg
ror
decl
lods
mov
fists
sub
xchg
mov
jnp
mov
aas
aam
sub
call
jo
daa
mov
xchg
popf
cltd
xor
mov
xor
add
push
or
jle
inc
inc
pop
cmpb
jp
mov
jne
mov
pop
jae
mov
xchg
mov
ss
inc
sub
hlt
and
incb
imul
and
xchg
sbb
nop
inc
pop
dec
adc
cmp
mov
dec
jbe
lret
xchg
lret
jne
sbb
or
sbbb
push
dec
xorb
adc
xchg
mov
dec
out
dec
jmp
imul
pop
dec
aad
xlat
mov
jbe
pop
incl
mov
scas
inc
adc
push
dec
imul
inc
xchg
icebp
or
pop
sbb
sbb
fmul
push
pop
sbb
fidivl
int3
ja
pop
popa
stos
or
sbb
fildll
cld
jnp
imul
std
aad
xorb
lret
inc
insl
push
push
stc
adc
aaa
data16
mov
fbld
dec
mov
repz
jp
mov
push
stos
test
push
pop
repz
adc
std
outsl
pop
nop
lret
sub
sbb
add
add
mov
bound
es
jnp
or
mov
dec
repz
cmp
xor
jb
scas
ficoml
in
loop
movsl
adc
in
xor
cs
shrb
xchg
add
or
test
mov
jmp
in
cmp
pop
bound
inc
clc
xchg
stos
loopne
xchg
movsb
xchg
and
or
mov
fistpl
movsl
pushf
push
mov
pop
aas
xchg
popf
lretw
popa
xor
cmovnp
mov
mov
adc
sub
mov
cmp
pushf
mov
aas
hlt
add
out
movsb
xchg
les
push
xor
loope
adc
test
mov
jne
data16
mov
roll
daa
jae
add
or
push
ss
decl
mov
lret
arpl
mov
test
int
aam
stos
out
orl
dec
cmc
mov
fildll
aam
popf
pushf
ucomiss
xchg
jl
inc
jp
shll
sub
cmp
lods
outsb
push
out
adc
mov
iret
inc
xor
pop
dec
xchg
in
push
pusha
dec
mov
cltd
pop
add
enter
fisubl
test
mov
lahf
loope
push
into
sarl
sub
iret
sub
daa
aaa
mov
cmpsl
mov
lret
shrb
jae
negb
or
shr
mov
xor
and
fstp
sub
cmpb
adc
ret
xor
add
fidivrl
jmp
daa
sub
ss
arpl
inc
gs
stc
push
mov
inc
sub
ljmp
jge
or
jmp
xchg
cmp
das
js
in
or
or
mov
icebp
jne
pop
cmpsl
add
rol
adc
mov
push
xorl
sub
sbb
mov
mov
cmpl
imul
insl
sarb
out
pop
inc
jge
clc
add
bound
sar
test
xor
js
jnp
in
hlt
jo,pt
addr16
iret
mov
sub
add
scas
jbe
out
iret
fisubs
xrelease
jp
dec
imul
cmp
out
ss
cli
stos
push
lea
add
jle
mov
cmp
and
dec
call
xchg
std
push
popf
mov
inc
push
pop
dec
sahf
pusha
in
pop
adc
insb
fcmovne
pop
gs
sbb
mov
mov
xor
adc
xchg
faddp
inc
dec
enter
sbb
adc
push
mov
dec
cli
adcb
cmpl
lcall
test
push
ffreep
repnz
movsb
jl
mov
daa
hlt
js
jp
pusha
daa
jnp
sti
push
daa
xor
fwait
adc
js
fildll
jle
in
pop
inc
mov
xor
inc
inc
notb
jbe
and
lcall
xchg
lods
sbb
bswap
adc
lret
fnstcw
or
mov
xlat
fs
fisttps
mov
mov
ds
adc
outsl
rolb
lds
mov
sbbl
test
mov
jge
cmp
int
jo
xor
lahf
sub
inc
xorb
call
aaa
and
xchg
add
icebp
adcl
test
das
out
fists
xor
xor
loope
fisubrs
lret
in
xchg
push
mov
xchg
push
outsb
cltd
imul
repnz
push
adcl
sbb
or
mov
mov
push
ss
jle
xchg
out
dec
sub
xor
add
dec
xchg
jae
jmp
add
pop
lods
aam
sbb
leave
fldcw
ficoms
mov
movsb
and
cwtl
in
mov
adc
stos
dec
outsb
into
stos
js
lds
les
lcall
mov
addr16
xor
pusha
sbb
cltd
cwtl
data16
jle
dec
inc
jmp
xchg
imul
sbb
paddusw
mull
inc
ss
adc
shll
sbbb
sbb
push
call
mov
inc
push
xor
mov
frstor
add
test
imul
push
mov
mov
jle
sbb
lcall
outsb
loope
test
fstpt
into
std
xor
jge
das
mov
cmpsb
cli
out
pop
cmpsb
lds
ficoms
aaa
into
fsubr
enter
icebp
inc
jb
js
mov
push
push
test
shrb
call
cmp
cmp
sub
lret
fistpll
push
mov
jno
sbb
sub
fsubs
inc
sub
addb
dec
pop
mov
rorl
sbb
add
jno
xor
loopne
or
gs
or
imul
sbb
push
jg
dec
push
ret
addr16
aam
clc
mov
sbb
mov
xor
pop
or
sbb
and
js
test
and
fidivrs
pop
mov
add
and
stos
out
mov
push
xchg
xchg
icebp
loopne
inc
push
mov
loopne
popa
andl
lea
pop
mov
add
jle
xchg
jecxz
mov
pop
jp
div
adc
pop
jno
loope
and
dec
shrl
scas
popa
cmp
jne
notl
mov
jb
mov
cmpsb
xchg
jmp
aaa
popl
stc
shlb
lahf
rcl
mov
and
sbb
ljmp
mov
jnp
jge
cmp
pop
scas
aaa
cmp
add
call
dec
dec
in
movsb
stos
mov
in
outsl
or
pop
push
xor
mov
in
cmp
scas
jnp
imul
adc
mov
add
mov
das
inc
outsb
pop
aas
pop
pop
pop
out
lods
out
mov
adc
pop
mov
cmp
xchg
faddl
fwait
mov
dec
push
or
scas
push
push
les
xor
loop
popf
bound
mov
lahf
rcrl
pop
fists
adc
arpl
into
mov
push
pusha
int
mov
xor
js
inc
mov
test
sbb
mov
cmp
mov
leave
push
jns
adc
add
inc
mov
sub
bound
sbb
xorb
test
xchg
add
jo
jnp
pop
mov
mov
test
pop
sbb
in
cli
dec
test
push
incb
lcall
sbb
push
xor
xor
xor
clc
mov
mov
test
push
jmp
inc
mov
aam
loop
mov
mov
int3
push
fstpl
pop
dec
xchg
push
sub
push
cmpsb
xchg
add
out
dec
hlt
jns
jno
ss
lahf
lcall
cmp
les
call
outsl
icebp
jmp
add
dec
xor
shll
stos
pop
lret
imul
xchg
fsubp
cmp
fwait
jo
jle
or
xchg
ret
mov
push
mov
mov
loop
or
cwtl
sarb
jge
sar
pop
push
pop
jecxz
sub
cmp
inc
data16
loope
pop
jno,pt
or
jne
jmp
mov
scas
int3
inc
ss
cmp
pusha
movb
ljmp
pop
lret
jae
adc
adc
lret
ja
mov
imul
fwait
cmp
push
popa
push
jbe
dec
xchg
std
fdivs
stos
inc
push
sbb
sti
es
popa
int3
ds
push
cli
mov
ss
hlt
and
ds
aad
cmp
add
mov
inc
icebp
hlt
mov
mov
or
sub
stc
sbb
rorl
push
stos
push
inc
in
data16
dec
sahf
dec
ss
sub
jae
mov
xchg
stos
subb
dec
cwtl
inc
lds
les
and
sbb
mov
mov
fidivrl
mov
orw
mov
movsl
adc
fstl
clc
les
mov
push
fsubs
pavgb
jb
mov
aaa
cmp
mov
mov
sbb
popa
lahf
xchg
fucomip
and
shll
daa
mov
roll
mov
shlb
repz
lds
fs
ljmp
imul
pusha
pop
out
stos
aam
enter
insl
push
movsl
jae
sbb
or
cli
inc
sub
test
xchg
ret
mov
and
lock
dec
in
add
cltd
dec
xchg
xacquire
xchg
cmp
dec
xchg
xor
push
or
cmc
push
mov
int
ss
mov
aaa
insb
cltd
loopne
pop
out
icebp
test
add
jp
mov
mov
jle
add
fwait
outsb
rcrb
adc
pusha
dec
inc
add
jecxz
je
inc
divl
aaa
out
rcrl
jae
inc
mov
out
aad
inc
mov
imul
scas
std
in
mov
into
ds
adc
xor
xor
idiv
sub
push
jecxz
jns
jmp
jmp
push
jle
fdiv
xchg
rcrl
jecxz
int3
xchg
ret
mov
subl
cmp
mov
mov
aaa
adc
inc
dec
adc
cltd
js
mov
shlb
hlt
popa
jp
push
stos
xchg
dec
rcrb
test
add
fsts
lods
sbb
and
mov
adc
or
test
in
loopne
cmp
pop
cmc
and
hlt
ljmp
inc
sub
push
and
pop
outsb
hlt
inc
aaa
mov
sbb
dec
test
icebp
push
add
dec
leave
out
jg
xlat
xchg
loop
xchg
jbe
or
jnp
jns
in
popa
lret
es
xchg
mov
jo
jno
repnz
xor
dec
push
popa
adc
into
mov
adc
not
jge
xchg
sub
enter
pop
loopne
ret
rorl
push
dec
out
mov
cmpsb
jbe
iret
pusha
mov
add
dec
mov
inc
nop
pop
test
xchg
xlat
mov
dec
xchg
stc
adc
xchg
jecxz
in
lahf
lahf
popa
aad
sub
rcll
aam
cld
incb
std
mov
ljmp
pop
pop
fincstp
push
push
mov
sbb
inc
imul
nop
mov
jl
fidivs
cmpsb
add
jb
jge
sti
or
push
mov
mov
push
xorps
mov
lods
cmp
into
loopne
repnz
mov
lods
xor
mov
mov
jo
leave
mov
sbb
adc
xchg
mov
mov
subb
inc
jno
iret
inc
mov
mov
jb
insl
loop
cltd
xchg
inc
mov
loop
inc
iret
fcoms
pop
mov
sarl
push
call
dec
mov
push
xchg
dec
hlt
les
sbb
test
es
imul
mov
fstpt
pop
inc
pop
and
pushf
stos
or
je
aas
iret
daa
icebp
shll
cmp
mov
mov
icebp
cmc
das
mov
xchg
and
clc
in
mov
jne
jae
mov
pushf
repnz
lahf
sbb
adc
sbb
notl
sbb
and
push
inc
orl
add
xor
les
fwait
pushf
xor
cmp
scas
sbb
and
jne
rol
rcll
mov
cmp
lods
xchg
push
mov
push
or
in
fcomip
push
pop
inc
pop
push
cmc
loopne
sti
stos
mov
pop
imulb
add
or
mov
lahf
jl
mov
cmc
adcb
scas
mov
cmp
jbe
jns
stos
cmp
mov
jmp
mov
cltd
pinsrw
int3
cmp
mov
pop
iret
pop
jno
out
push
jg
sbb
dec
adc
sub
xor
loopne
cmp
or
inc
movsl
scas
add
aad
mov
shll
inc
pop
stos
mov
and
rcrl
loopne
xchg
std
cltd
xchg
loope
ret
and
mov
outsl
jne
pop
sbb
aam
insl
jnp
lahf
dec
imul
and
mov
loopne
sbb
sbb
aad
jle
cmp
mov
mov
hlt
jae
repz
lret
sbb
adc
cmp
jnp
xor
fisttpl
add
or
or
sbb
movsl
add
rolb
and
ljmp
push
mov
insl
in
loopne
xor
lods
mov
fldt
adc
nop
mov
pop
add
pop
xchg
test
dec
fdivrl
frstor
add
pop
or
adc
iret
dec
jmp
or
mov
xchg
fimull
mov
jecxz
inc
xchg
mov
push
stos
imul
das
mov
scas
mov
xchg
nop
cmp
pop
xchg
repnz
popa
cmp
or
inc
addr16
leave
loop
jno
sub
fdiv
movl
dec
mov
sub
dec
mov
psubsw
or
pop
cmp
sub
sbb
lods
sarb
adc
mov
js
sub
or
sbb
pushl
mov
xor
mov
push
add
repnz
mov
fdivrl
pop
rorl
sub
std
dec
xchg
and
inc
sub
loopne
pop
jg
movsb
fnsave
inc
lock
lahf
mov
mov
mov
mov
clc
mov
pop
and
scas
cmpsb
test
outsl
mov
into
loopne
mov
jecxz
adc
movsb
lretw
xchg
or
inc
sbb
mov
std
pop
scas
ret
in
sbb
xchg
bound
mov
xor
daa
jge
mov
arpl
dec
mov
test
xlat
fs
jo
xchg
xchg
mov
int3
mov
fdivr
bound
mov
cmc
push
cmp
sub
stc
fcompl
stos
cmp
pop
jb
cltd
push
push
or
repz
pop
inc
xsha1
cmpsb
lret
jp
mov
mov
xor
add
mov
in
scas
push
pcmpgtw
orb
shrl
add
inc
aaa
mov
adc
jne
cmp
dec
mov
sub
dec
stc
cmp
mov
test
sbb
loop
xorb
mov
cs
mov
aam
push
add
push
ret
test
adc
mov
jl
xchg
insl
movsl
mov
mov
rcrl
in
mov
aaa
shll
stos
lock
pop
adc
push
xor
enter
dec
pusha
xchg
inc
pop
cld
push
push
xor
pop
dec
in
mov
mov
lahf
add
and
insl
mov
mov
roll
push
xchg
add
ljmp
subl
sbb
cwtl
adc
cwtl
push
pop
push
inc
push
out
adc
sbb
je
inc
rcrl
test
push
rcrl
mov
pop
pop
xchg
jnp
jae
or
les
jno
fbld
test
mov
les
cmpsb
mov
adc
shlb
push
out
hlt
mov
cmp
jmp
test
sub
jge
nop
insb
add
rcrl
daa
dec
scas
mov
push
stos
dec
and
mov
js
pop
imul
or
inc
test
pop
cld
add
mov
popl
jmp
xor
cmpsb
or
loopne
scas
xchg
inc
and
pop
pusha
fiadds
and
insb
add
js
repz
ffreep
mov
out
pop
push
push
dec
pop
push
aas
pop
xchg
push
fadd
cmp
daa
leave
call
sub
fldl
divl
std
add
lock
jl
dec
mov
cmpsl
mov
jecxz
cmpsl
loope
decb
sub
cmp
xchg
or
dec
rcrb
inc
enter
inc
mov
lock
das
push
mov
mov
out
aam
pop
push
int
sub
and
inc
jae
rorl
iret
mov
fcmovnbe
aaa
fidivl
adc
stc
adc
lret
sub
ret
out
inc
movsb
test
cmp
sbb
lds
jb
mov
add
outsb
into
testl
push
mov
and
push
cltd
adc
inc
stos
das
xor
push
mov
mov
rolb
cltd
dec
std
stos
cs
sub
cmp
sbb
popf
in
mov
test
push
repnz
add
mov
iret
jl
scas
dec
sbb
sub
decl
xchg
jp
mov
push
mov
movsl
lods
jmp
dec
push
aad
stc
ffree
xchg
dec
clc
sub
cli
adc
scas
test
xchg
xchg
jp
dec
iret
rcrl
adc
in
sarb
in
and
scas
push
push
xchg
mov
pop
fistpll
in
call
adc
mov
rcrb
mov
mov
mov
ss
fildll
push
daa
loopne
outsl
pop
add
push
fdivs
lea
in
inc
mov
mov
adc
xchg
cmp
xorb
lods
out
testl
es
leave
insl
popl
in
or
push
xor
inc
fmul
xchg
notl
cld
out
mov
stos
dec
fiadds
pop
xor
mov
jb
inc
les
in
inc
hlt
test
push
sbb
push
icebp
jle
arpl
cmp
add
outsl
sbb
movsb
ret
xchg
pop
js
dec
push
scas
pop
push
sbb
ljmp
outsl
icebp
push
cmp
mov
mov
xchg
jns
ficompl
rcl
psllq
in
sbb
jo
push
rol
and
cmpsl
jmp
mov
sbb
loop
dec
push
int
jl
mov
sub
in
pusha
push
daa
mov
adc
pushf
sbb
loop
or
hlt
movsb
mov
ficomps
xor
mov
sub
cmp
add
repz
inc
xchg
sti
rcrl
adc
jecxz
mov
imul
jg
jl
cmp
test
lock
jl
ja
pop
je
mov
adc
sti
mov
lret
pushw
adc
stos
mov
lea
scas
movsl
dec
cmp
imul
movsb
ficoms
std
fs
testb
imul
mov
push
mov
push
or
adc
lea
jp
stos
inc
jbe
xor
pop
imul
cmp
adc
fs
fadd
outsl
sbb
pusha
jl
mov
cmp
push
push
or
adc
and
setnp
jmp
xchg
scas
push
pop
mov
inc
ss
add
pop
enter
jne
in
enter
jo
popa
xor
pop
shr
add
push
sbb
sbb
mov
cmc
ljmp
xor
je
pop
add
adc
in
sbbb
movswl
jnp
mov
cmpsl
rolb
neg
test
std
out
sti
shll
dec
cmp
sub
mov
popa
fstpt
sarb
xor
xchg
test
ja
fildll
inc
mov
mov
sti
into
adc
iret
inc
incl
out
cmpsb
dec
outsb
testl
add
flds
lret
pop
shrl
lods
cmp
push
pop
out
inc
mov
outsb
mov
cmpsl
push
sub
out
test
add
addr16
mov
sub
shrd
or
mov
or
push
dec
into
jg
or
xlat
aas
mov
xchg
cld
divl
outsb
das
add
in
or
std
sub
das
xchg
pop
movsb
mov
jg
mov
xor
repz
jne
pop
jle
test
daa
jo
lret
adc
or
jb
mov
cwtl
cmpb
stos
jne
test
inc
inc
aaa
jno
sbb
cwtl
in
repnz
xchg
ds
ja
cli
xchg
dec
and
sub
and
sbb
cld
enter
pop
xor
push
imul
rol
mov
popf
xchg
cs
xlat
stc
out
push
xchg
and
inc
test
sub
push
add
mov
sbb
or
mov
fst
adc
xor
std
xchg
stos
out
push
mov
add
mov
push
fists
pushf
test
adc
or
lahf
pop
jno
cmc
pushf
jno
out
jb
push
loop
xchg
neg
lcall
add
andl
xchg
lods
push
bound
push
std
pusha
jb
testb
sbb
and
or
mov
push
adc
mov
inc
and
notl
test
test
inc
imul
inc
or
jnp
mov
pop
rcll
push
jle
mov
fiaddl
mov
sub
pop
jmp
in
xor
testb
cmpsl
and
pop
fs
fwait
mov
loopne
adc
inc
aaa
push
jg
imul
xchg
fs
lret
xchg
sub
and
mov
arpl
mov
dec
outsl
xchg
sub
imul
dec
adc
sbb
cmp
loop
stos
jb
add
cwtl
pop
adc
popf
jb
aam
cmp
lds
mov
or
jb
sub
imul
lret
or
add
or
cmpsl
lods
leave
cmp
jb
dec
rclb
hlt
xchg
pusha
sbb
pop
add
mov
push
xchg
xchg
xchg
repz
rolb
jo
call
mov
rclb
mov
out
jmp
std
mov
cmp
jae
cmp
xchg
or
add
cmp
test
xor
movsl
mov
call
lahf
jne
int3
cmp
sub
int
sub
mov
jae
dec
test
push
int
pop
mov
mov
pop
pop
sub
hlt
cwtl
loope
push
mov
xchg
inc
adc
ficoms
cli
sub
lock
jge
hlt
int
xchg
inc
mov
push
fisubs
orl
or
xchg
mov
inc
sub
cmp
ljmp
pop
jnp
leave
stos
cs
sbb
aaa
in
mov
cmp
test
pusha
daa
testb
rclb
add
fdiv
xchg
cmp
testl
inc
cmp
icebp
pop
pop
lock
cwtl
fstps
ljmp
into
inc
pop
ljmp
out
jl
nop
mul
cmpsb
mov
pop
movsl
cmp
and
adc
xchg
or
pushl
xchg
jmp
shll
test
mov
imul
and
xchg
jg
ds
stc
cmp
pop
fildl
push
and
test
arpl
inc
jmp
test
shll
jp
sbb
dec
dec
sbb
jbe
cs
pusha
cmp
sub
and
sbb
xlat
jmp
dec
xor
lock
and
cmp
xor
pop
push
xchg
loopne
xor
jno
mov
out
push
push
mov
outsb
sbb
push
dec
scas
jl
repz
outsl
sbb
add
adc
pop
jg
adc
loope
inc
xchg
into
or
mov
in
pop
fstpl
jle
xchg
dec
mov
fs
out
xchg
lret
out
scas
mov
xor
pusha
sub
and
pop
pop
xchg
jb
call
add
lods
and
push
es
sub
fs
test
fisttps
je
sub
lods
sbb
push
mov
repz
xor
imul
icebp
shrb
or
and
js
xor
sub
daa
sub
or
add
pop
orb
adc
xor
mov
lret
bound
cwtl
mov
pop
inc
cld
daa
cld
jno
push
ss
js
sub
mov
mov
mov
fwait
jmp
fdivrl
bound
ds
inc
mov
roll
cmp
sbb
xchg
cmc
test
inc
xchg
into
sbb
push
mov
add
pop
pop
xor
push
fstpl
mov
loopne
mov
pop
push
push
mov
mov
pop
adc
movsl
arpl
rcr
or
fsts
and
add
shrl
pop
clc
addl
aas
faddl
icebp
dec
dec
sub
mov
pop
arpl
jp
ss
push
add
lods
pop
rcrl
out
daa
scas
push
lods
pop
loopne
sub
flds
jmp
sbb
ja
adc
adc
xchg
sbb
sbb
mov
inc
jmp
out
test
add
jl
cli
outsb
aam
mov
test
rolb
clc
or
out
adc
add
xchg
mov
push
add
ljmp
and
mov
das
int
inc
or
mov
push
dec
pushf
mov
cmp
loop
fisttpl
dec
pop
sub
fldenv
js
cwtl
test
div
sbb
gs
test
pop
or
push
arpl
out
cmpsl
cmp
push
imul
adc
or
jns
mov
xor
adc
cld
xor
pop
rol
add
or
push
dec
or
xor
jo
lahf
mov
mov
add
xchg
lret
lahf
adc
lahf
mov
inc
mov
sbb
inc
nop
sahf
fistpll
inc
data16
loope
lret
adc
push
xor
in
dec
adc
xchg
scas
hlt
dec
sub
fwait
push
sbb
daa
loop
loopne
mov
pop
call
adc
cmpsb
sti
mov
fcompl
cli
test
cli
es
adc
outsb
and
sub
les
loopne
pop
addb
pop
xor
add
or
popa
add
xchg
cmp
out
lods
repz
fsubs
lock
shrl
stc
push
sbb
cwtl
lret
mul
popf
mov
pop
pop
dec
mov
daa
fsts
repnz
jge
and
je
imul
jne
inc
orb
int
aas
pop
std
aaa
aam
adc
out
xorl
and
sbb
ret
lds
xchg
xor
aam
into
outsl
mov
mov
push
fstl
addr16
roll
lods
rdmsr
clc
push
js
mov
das
xchg
adc
imul
or
fisubs
mov
or
inc
dec
dec
in
rorb
adc
nop
and
dec
sbb
sbb
or
mov
out
pop
lret
iret
mov
inc
jo
movsb
pusha
ss
inc
mov
sub
jge
scas
insb
mov
adc
push
in
lods
roll
and
mov
aas
mov
outsb
sti
adc
mov
nop
xor
mov
inc
dec
push
gs
push
insl
hlt
or
repz
pop
sbb
pop
mov
pusha
and
dec
cmp
or
pop
aas
shrb
test
bound
mov
stc
mov
dec
xor
hlt
jle
xchg
mov
out
dec
sub
mov
nop
fistpl
pop
dec
bound
jne
in
xlat
les
and
int3
xlat
lahf
lods
dec
nop
push
jb
sbb
and
scas
push
repnz
add
test
arpl
lcall
ficompl
cmp
xchg
ror
xor
jb,pn
mov
add
mov
inc
adc
mov
push
lock
inc
xor
or
fwait
leave
lock
jmp
cwtl
adc
js
dec
xor
movsb
xor
sbb
sbb
push
out
in
jp
mov
mov
dec
xchg
lahf
ljmp
xor
sbb
cmp
lret
arpl
xchg
ljmp
lahf
pop
call
or
fsub
mov
add
lret
shll
data16
dec
sbb
adc
lods
pop
out
in
inc
mov
or
adc
into
sbb
sub
sub
or
push
push
pop
jno
loopne
push
and
call
inc
adc
jbe
push
pop
mov
mov
out
loop
fisubs
popa
insb
sub
xor
stos
push
xor
inc
jae
or
xchg
ret
mov
mov
xchg
fcompl
cmp
mov
repz
cmp
mov
push
mov
ljmp
ja
push
mov
and
out
jp
or
mov
mov
dec
js
mov
jmp
mov
stos
jnp
jo
xchg
loopne
mov
lods
xchg
jle
jle
movsl
les
adc
push
xorb
jae
xor
push
mov
add
scas
shll
test
lcall
add
mov
fsubp
inc
xor
sbb
scas
dec
adc
mov
pop
dec
sub
sub
pop
insb
mov
mov
cmp
mov
push
jmp
push
mov
or
cli
mulb
pop
clc
das
aaa
jle
mov
loop
dec
adc
inc
aas
sti
xor
pop
sub
mov
lret
daa
mov
add
mov
mov
testl
cld
and
jne
jl
stc
cmpl
arpl
mov
jmp
xchg
cmp
and
or
push
fs
stos
test
lods
int3
add
int3
sub
shr
aaa
xor
addr16
or
cwtl
es
imul
mov
mov
imul
jo
jp
cmp
sbb
outsb
das
stos
add
rol
movsb
popf
jns
movsl
cmpsb
leave
sbb
mov
sahf
scas
or
stc
sahf
mov
loope
and
jp
push
pushf
pusha
jae
cmp
les
mov
in
cmpsl
andb
lods
mov
or
outsb
jnp
jmp
mov
decl
dec
mov
and
and
jo
xchg
lods
outsl
movsl
xorl
and
sbb
dec
dec
xchg
scas
sbb
mov
mov
les
mov
cs
fmuls
mov
fcomip
sub
push
and
out
or
xchg
shlb
xchg
cmpsl
fwait
jno
pop
pop
and
sbb
movsb
inc
cmp
loope
pop
or
ja
andb
sbb
xor
iret
std
push
mov
lock
in
cmp
mov
pop
xor
loopne
jo
lods
dec
lret
mov
lods
aas
clc
out
jmp
repz
rcl
jns
xchg
stos
lea
xor
ret
aas
js
or
inc
outsl
cltd
mov
pop
inc
insl
dec
pop
fsubl
div
sbb
and
cli
ret
mov
add
shll
incl
or
iret
or
cmpsb
out
pushf
add
dec
mov
cmp
fadd
adc
pop
cli
addps
mov
dec
and
xlat
aam
xchg
jbe
fdivl
push
out
test
lods
push
stos
dec
dec
inc
pop
mov
daa
adc
add
rclb
int
lods
fcomps
stos
lret
scas
mov
xchg
add
inc
dec
aad
xlat
xchg
icebp
adc
es
mov
adc
pop
jge
sbb
xchg
dec
jg
jb
xchg
mov
xchg
sub
xor
jecxz
sbb
xchg
push
out
mov
imul
jno
sub
pop
xchg
xchg
pushl
and
ds
add
movsb
sub
jae
cmp
out
and
divl
inc
sbb
sbbl
iret
aam
insb
es
cld
pop
inc
nop
cmpsl
cltd
imulb
inc
stos
cmp
nop
adc
seta
test
mov
push
shll
loop
bswap
pushf
mov
shll
aad
and
fisubrs
test
shrb
sahf
insl
sbbl
add
and
mov
pop
push
pop
xor
imul
adc
add
lock
pop
js
pop
pop
mov
int3
out
dec
loopne
jb
cld
mov
stos
dec
inc
mov
std
decl
xchg
dec
adc
mov
add
mov
out
mov
repz
into
rclb
lods
mov
cld
cmp
popf
sbb
call
in
dec
mov
adc
clc
or
fs
test
cmpsb
sbb
sbb
inc
dec
lea
outsb
xchg
ret
loop,pn
inc
mov
cltd
fstpl
xor
sub
cmp
dec
sti
cld
mov
mov
fs
xchg
fstl
mov
and
lods
adc
and
adc
xchg
lds
sahf
arpl
xchg
dec
xchg
pushf
push
mov
and
fisubrl
mov
cmp
ret
and
jp
sbb
and
cld
rcrl
mov
sub
inc
mov
negl
sbb
das
sbb
loop
cltd
fisubrs
push
mov
or
call
xchg
cli
lea
adc
ret
and
dec
int3
mov
jp
pop
enter
sbb
sub
lds
mov
out
xlat
js
fildl
sbb
fs
xchg
push
lret
or
sbb
in
jg
enter
push
pushf
cli
xchg
into
xchg
outsb
cwtl
cmpsb
jl
shl
das
and
sahf
out
aas
push
inc
pop
push
jns
shlb
lret
xchg
call
add
sbbl
pop
aam
lods
sbb
mov
das
cmp
inc
outsl
rol
jp
testb
imul
mov
outsb
in
cmpl
fidivrs
shll
pop
pop
mov
pop
inc
add
xchg
out
test
daa
insb
cmp
sbb
jmp
pop
aam
cmp
push
adc
cli
loop
push
lret
out
mov
lret
sub
sbb
xchg
imul
dec
jg
out
mov
and
aaa
xor
mov
mov
out
aam
inc
sahf
and
daa
xchg
xor
sbb
int3
inc
lods
aaa
push
pop
fstps
or
scas
inc
push
xor
jecxz
les
jbe
mov
push
dec
movsb
aas
mov
pop
stos
in
lods
inc
push
les
and
xlat
clc
repz
mov
and
xor
ja
test
fists
sub
xchg
inc
inc
pop
mov
and
mov
aas
in
daa
lcall
push
xchg
mov
movsl
xchg
fldl
lret
mov
adc
xchg
dec
push
jmp
pop
or
mov
sahf
add
mov
jae
or
inc
lahf
lods
sub
jo
int
call
pushf
daa
je
and
or
mov
ss
cmp
push
jg
sub
mov
inc
and
sbb
add
xor
push
es
fs
in
lods
xlat
enter
aam
fcomps
outsb
xchg
xchg
int
jle
mov
pop
imul
cmpb
mov
mov
mov
scas
push
xor
push
aaa
lahf
adc
orl
cmp
mov
cmc
xchg
cmp
push
jg
pusha
jbe
xchg
fsubrl
xchg
xor
sub
or
xchg
xorl
sti
jb
sub
cld
imul
test
and
pop
test
pop
ja
aas
push
shr
stos
stc
mov
xor
cmpsl
or
pushf
dec
adc
lcall
push
lds
out
hlt
mov
push
jge
pop
ficoml
lods
test
mov
push
stc
mov
adc
mov
push
lods
sub
mov
les
jmp
ret
cmpsl
std
ret
adc
fmuls
icebp
aad
stc
push
sbb
dec
outsb
lea
rcrl
popa
xor
xchg
cwtl
xor
jle
push
popa
lcall
mov
test
fstps
fcomps
add
mov
mov
cld
lds
lods
xor
js
sbb
icebp
jb
stos
push
pop
adc
or
mov
inc
enter
cmpsl
push
xor
or
push
pop
les
mov
sarl
imul
int
push
add
pop
cmp
jp
cmp
popf
into
push
rcrl
mov
push
lea
dec
stc
sbb
lret
stos
cld
and
cwtl
lock
pop
out
mov
popa
cmp
jne
adc
scas
lods
test
xor
in
push
int3
sub
xchg
xchg
popf
add
call
lcall
sbb
inc
pusha
mov
jge
cmpl
mov
xor
or
xchg
dec
inc
pop
arpl
stc
jmp
add
xchg
adc
int3
scas
rcrl
lret
movsb
jns
scas
movsl
in
pop
and
dec
or
pop
adc
sub
jne
mov
push
sahf
mov
sub
xor
hlt
aad
add
jp
mov
inc
and
xchg
stc
push
iret
push
adc
stc
dec
sbb
inc
je
idivl
cwtl
push
add
call
pop
rep
int
orl
jmp
pop
add
cwtl
int
jl
dec
out
mov
mov
inc
sahf
xor
xchg
icebp
pop
scas
stos
sub
cs
adc
or
xchg
movsl
les
sbb
lea
and
pop
std
and
inc
adc
inc
jp
add
cmp
call
mov
pop
shll
jg
push
inc
cmp
pop
mov
shll
rolb
outsl
cmp
adc
call
mov
add
stos
stos
fs
imul
jp
nop
sbbb
fwait
std
scas
test
dec
loope
push
push
nop
or
cli
xor
push
je
inc
adc
ret
sub
arpl
adc
mov
cmp
or
enter
cmp
jle
ret
xchg
xchg
sbb
mov
outsb
rorl
pop
rorl
fsubp
push
pop
mov
fnstsw
out
dec
mov
cmc
mov
arpl
pop
outsl
shlb
and
ficoms
xchg
imul
xlat
shll
dec
xor
xor
xor
mov
int
inc
je
test
or
pushf
xor
hlt
aam
lret
xor
mov
adc
rclb
pop
std
jge
aam
daa
add
pop
cmp
js
mov
adc
aad
xchg
jno
arpl
mov
subb
dec
insl
mov
dec
lea
lret
jge
sbb
add
mov
dec
mov
mov
xchg
mov
into
aaa
adc
ljmp
rolb
mov
imul
aad
adc
sbbb
in
and
ret
in
adcl
mov
cmp
adc
mov
and
adc
push
mov
bound
ja
push
popa
dec
adc
jo
scas
jge
adcl
pop
push
xchg
cs
ljmp
mov
shrl
jo
aaa
movsb
idiv
jle
jnp
add
pop
sbb
adc
push
out
shrl
aam
loope
addr16
leave
addr16
subl
mov
adc
push
icebp
mov
insl
inc
sub
jge
jg
mov
pop
ds
fisubs
inc
mov
inc
inc
sub
stc
pop
mov
adc
xchg
mov
nop
rcrl
repnz
incb
dec
scas
clc
adcl
repnz
enter
addb
pop
gs
jae
add
mov
push
add
imul
cmp
subb
jg
int3
push
or
imul
dec
dec
rcll
aas
imul
xor
inc
mov
adc
daa
cmpsb
inc
xchg
lahf
pop
lret
stos
lods
lds
cmpsl
je
sub
or
inc
daa
data16
mov
rcrl
icebp
dec
test
mov
stos
out
dec
in
out
hlt
insb
js
fidivl
sbb
sbb
sti
or
imul
dec
pushaw
lds
lret
add
cli
test
daa
fwait
add
or
neg
inc
leave
xor
fildl
jnp
leave
neg
push
xor
dec
inc
jne
jns
xchg
cmp
jo
inc
mov
hlt
pop
mov
cmp
and
movsb
repnz
adc
rclb
mov
fnstsw
add
xchg
sub
jno
jp
pop
sarb
jecxz
push
cltd
int3
ljmp
or
lcall
xor
mov
cs
mov
or
loopne
inc
jmp
sbb
mov
cli
ret
outsb
sbb
pop
or
mov
fisubl
iret
push
xor
push
mov
mov
and
jbe,pt
fwait
ja
mov
imulb
js
sbb
add
mov
xchg
andb
roll
in
leave
push
imul
fidivl
cld
add
out
je
mov
cs
popf
jo
popa
cli
out
adc
dec
imul
lea
pop
mov
in
repnz
pushf
dec
cmpsb
dec
les
xchg
lds
test
mov
lcall
loope
and
jno
cmc
push
cmp
aam
aaa
xor
imul
aad
fstps
js
cs
jne
push
cmp
daa
sahf
dec
jo
pop
push
sti
das
pop
push
dec
gs
jp
ja
push
lret
pusha
int
stc
sbb
lret
outsb
inc
pusha
sahf
lahf
ret
mov
enter
mov
xchg
and
sar
imul
xlat
xor
fstps
xchg
lock
stos
mov
push
cmc
mov
add
lock
xor
fwait
dec
mov
dec
mov
jmp
cmpsl
test
pop
loop
push
jge
outsb
aam
es
cltd
je
movsl
es
not
lahf
mov
enter
jb
push
pop
iret
das
or
jle
cli
sbb
mov
mov
xchg
fadds
or
loop
sbb
or
inc
jmp
sub
jo
mov
les
adc
jbe
adc
xchg
pop
scas
push
pop
sbb
push
cmp
lods
sub
in
or
or
cmpsb
pop
cmp
cmpsb
cmc
arpl
pushf
xchg
xor
repnz
cmc
loopne
cmp
out
test
fdivs
dec
pushf
ret
sub
sbb
call
loope
or
cmp
sbb
xor
das
icebp
dec
pusha
mov
repnz
inc
shll
xchg
adcb
pop
or
xor
incl
jne
insb
out
mov
test
adc
adc
mov
ja
bound
call
xor
loop
scas
subl
mov
cmp
cmp
jno
adc
pop
icebp
stos
sbb
sub
movsl
mov
mov
inc
cmp
fs
negl
int3
add
mov
add
mov
xor
add
xchg
cwtl
rcr
push
icebp
pop
ljmp
pop
test
stos
neg
cmp
call
clc
and
inc
in
cltd
jge
and
hlt
fcmovnb
enter
pop
jmp
mov
mov
jo
sti
adc
cltd
cwtl
inc
lods
pop
ss
mov
loop
mov
or
and
in
gs
orl
and
xor
adc
arpl
ja
repz
or
enter
jp
outsb
cltd
mov
xor
loope
mov
jbe
stos
mov
fisubs
cmp
mov
test
cmp
pop
jno
push
mov
xchg
filds
cmp
aad
add
xor
and
aad
ss
lret
dec
cmc
pop
je
mov
leave
mov
xchg
or
adcb
hlt
sbb
imul
xchg
and
iret
aad
popf
ja
cltd
sbb
push
add
outsl
shll
ja
cmc
test
jae
int
adc
mov
subb
sti
sbb
sbb
int
repnz
sbb
push
sbbl
jnp
dec
xchg
fcmove
jl
call
popa
mov
cs
lret
mov
mov
cmc
popl
xor
sbb
mov
jl
mov
cmpsb
nop
dec
fsubrl
sbb
iret
adc
jmp
repnz
mov
les
fsubs
mov
inc
loopne
cmc
mov
or
push
sbb
sub
push
aaa
repnz
mov
in
stc
mov
push
xchg
imulb
fcoml
mov
js
inc
xchg
sbb
mov
std
lret
jle
test
sbb
inc
pop
or
or
mov
lret
fs
iret
adc
mov
aas
jnp
dec
shl
roll
xchg
push
dec
lds
mov
xchg
add
mov
loop
pop
loope
mov
and
arpl
rcrl
das
test
repnz
lahf
and
sbb
ds
mov
ja
mov
jmp
insl
jecxz
jl
dec
cmc
cmc
mov
push
fwait
hlt
or
add
cmpsb
and
xlat
cmp
les
xchg
andb
fstpt
sbb
inc
pop
dec
dec
adc
sub
insl
movsl
mov
sub
dec
mov
push
mov
sub
sbb
test
ljmp
sbb
dec
dec
xchg
rcrb
punpckhdq
adc
testl
push
push
int3
aas
dec
pcmpgtb
enter
inc
icebp
xor
sti
xor
or
xlat
in
scas
xchg
push
aas
mov
out
dec
pop
test
into
mov
mov
mov
push
jl
ljmp
nop
jl
push
ret
iret
mov
ja
mov
push
stos
mov
add
push
and
cmpsl
ljmp
jp
push
popf
push
hlt
out
stos
and
mov
int
or
nop
test
inc
jmp
outsb
and
in
enter
scas
cld
mov
out
mov
lret
inc
adc
add
movl
sbb
push
inc
lret
mov
dec
pop
aas
xchg
sbb
push
sahf
cwtl
add
test
cmp
fld
es
sbb
fisttpl
dec
pop
lods
jno
mov
and
xor
fcompl
fmul
dec
sub
fidivrs
xor
in
pop
popf
loopne
sbb
insb
push
dec
fsts
mov
cmpsb
sub
icebp
cmc
xor
flds
mov
repz
scas
fwait
ret
mov
movsl
mov
inc
into
sbb
sub
add
cmp
call
mov
xchg
sahf
mov
mov
xor
mov
std
lock
js
rep
or
or
mov
aad
in
fiadds
je
dec
xor
add
push
cmpsl
faddl
xchg
sub
test
or
insl
pop
test
out
dec
aam
pop
dec
pop
ss
negb
jbe
in
fsubrl
xchg
lret
fdivrp
insl
cs
shl
inc
inc
xor
imul
ss
xchg
xor
cmp
push
cmp
fisubrl
je
push
sub
xor
mov
dec
xchg
rorl
nop
cmpb
dec
dec
stc
xchg
hlt
add
inc
cwtl
out
out
call
or
iret
pop
imul
jge
test
out
movsb
mov
mov
mov
cmp
lret
xchg
pushf
inc
sarb
imul
inc
mov
xchg
jmp
das
or
sub
jp
xchg
jmp
scas
ss
cs
cs
mov
bound
ds
fdivl
mov
mov
std
cs
xor
frstor
lock
xchg
jmp
xchg
jae
sub
cmp
dec
push
sbbb
out
enter
iret
jnp
mov
pop
orl
addr16
lahf
les
inc
adcb
in
cli
stos
and
cltd
daa
ds
xor
dec
out
ror
les
jge
inc
sarb
mov
push
movl
leave
jmp
incl
xor
sti
int3
mov
fldl
rcrl
pop
jecxz
pop
dec
pop
fcoml
pop
mov
cmc
pop
jmp
ret
cmp
pop
mov
daa
pop
xor
cmp
lahf
aaa
mov
lea
xor
push
daa
inc
and
int3
lea
dec
insl
je
insl
mov
aam
add
lret
loope
adc
lea
cmp
sub
adc
mov
xorps
add
inc
aad
stos
sarb
stos
jbe
loope
lahf
cmp
cmp
loopne
in
int
ret
lods
xor
mov
into
popa
movsb
insl
push
jge
lahf
inc
mov
les
mov
xchg
sbb
push
push
and
lock
in
pop
mov
loop
jp
jmp
xlat
and
ret
jl
aad
dec
sbb
xor
test
and
sahf
iret
cmpsl
into
adc
mov
cwtl
or
sbb
decb
mov
testl
sub
push
cmp
mov
inc
scas
out
out
add
mov
push
ret
xchg
mov
jbe
aad
push
adc
pop
popf
cmc
call
and
clc
xchg
and
push
mov
ljmp
cmpsl
nop
pop
shll
push
sub
lret
stos
into
into
add
int3
daa
dec
jl
mov
out
mov
sub
faddl
stos
add
inc
add
enter
int3
push
call
pop
and
loopne
sbb
adc
mov
or
jbe
lods
adc
adc
inc
sub
test
and
and
cs
scas
mov
sbb
sbb
shlb
xchg
mov
scas
mov
pushf
pop
jnp
cmc
pop
ljmp
sahf
test
mov
test
xor
dec
push
cmp
push
dec
jns
in
popf
test
ret
sub
js
les
cmpsb
cli
push
mov
mov
testl
in
lahf
shrl
nop
addr16
mov
pop
or
fabs
push
mov
jle
sub
inc
in
les
mov
push
data16
inc
mov
fdiv
gs
pop
or
mov
bound
ret
pop
leave
add
outsb
orb
pusha
imul
inc
mov
fadds
lret
shrb
jp
jg
xor
sub
pop
fcmovnu
stos
je
lods
pusha
sub
mov
scas
and
out
stos
push
call
mov
scas
mov
push
test
dec
icebp
adc
mov
std
dec
add
dec
fisubl
out
ds
fimuls
dec
adc
fisubs
xchg
rcll
add
pop
mov
pushf
fmuls
cmpb
gs
adc
mov
sbb
iret
stc
das
es
aaa
dec
rcll
mov
scas
aam
mov
aas
ljmp
push
mov
cmp
pop
push
cmp
ss
cs
sbb
test
mov
ret
mov
and
add
das
inc
mov
mov
mov
xor
lcall
js
push
mov
shl
fnsave
addb
mov
push
stc
mov
dec
pop
loope
shrb
dec
outsl
cmpsb
xlat
dec
jle
ds
mov
stos
leave
and
pushf
xor
sub
jb
jp
jnp
outsl
in
pop
add
pop
mov
ficompl
data16
stos
lods
push
pushf
adc
push
out
cmovp
test
adc
fcomps
ss
fsubs
mov
dec
cmp
fcompl
lahf
ret
lcall
mov
mov
into
mov
stc
outsl
in
jns
cmp
les
adc
jp
jb
pop
lods
sub
cmpsb
popf
pop
das
aas
faddl
push
in
loop
mov
mov
dec
push
or
lods
mov
std
fs
fsubr
push
imul
mov
fstpt
pop
jecxz
jb
inc
pop
xchg
scas
pop
inc
loopne
add
dec
stos
adc
movsb
loope
aas
lcall
cld
dec
cmpsl
call
gs
xchg
pop
xchg
pop
adc
cmp
outsb
mov
sub
jnp
jb
xor
inc
in
in
mov
mov
outsl
fnsetpm(287
out
push
mov
inc
mov
jmp
cmp
fisubl
out
or
jnp
and
mov
push
pop
push
inc
inc
addr16
xchg
std
jle
ret
jmp
cmpsl
fs
popf
mov
outsl
insl
cld
and
pusha
inc
dec
clc
or
mov
icebp
es
jge
jecxz
stos
sbb
cmc
outsb
stos
addr16
in
pop
nop
xor
jmp
or
or
sbb
pusha
cld
jnp
xchg
dec
test
jp
adc
adc
data16
xchg
and
test
mov
or
repnz
xor
adc
sahf
jle
jns
cltd
sbb
pop
mov
imul
or
incl
test
dec
iret
inc
fldcw
mov
cmp
cmp
or
cmc
xchg
push
push
jne
dec
or
enter
xchg
add
xor
shrl
adc
mov
lcall
ljmp
pop
out
sti
jecxz
fdivp
loopne
lock
xchg
sbb
adc
lods
jecxz
sarl
push
cmp
leave
sarb
sub
pop
sub
test
repz
ja
test
cmp
jmp
repz
je
and
fstpt
cwtl
push
ret
stc
hlt
loopne
push
inc
xchg
fildll
cmp
inc
dec
in
mov
jno
jo
ljmp
pop
insb
jecxz
ficoml
lcall
mov
insl
inc
inc
ret
sub
in
push
inc
icebp
lret
iret
sbb
cltd
data16
test
stos
loope
test
and
mov
fwait
jmp
cmp
dec
pop
aas
pop
xor
loopne
shll
fadds
and
and
pop
pop
sbb
adcl
pushl
jbe
add
add
and
jno
aam
stc
cwtl
and
rclb
loop
push
shlb
jmp
fsub
xor
mov
lds
add
pop
inc
push
mov
movsb
jge
scas
sbb
or
push
xchg
mov
in
inc
xchg
xor
popf
mov
addr16
and
pop
cmc
call
rorl
loopne
stc
dec
daa
push
repz
mov
sub
fwait
xchg
sub
outsl
or
jae
fistpl
sarl
jae
inc
push
push
adc
dec
shlb
icebp
xor
xor
pop
jmp
adc
cmp
lods
fldl
addr16
lods
mov
inc
in
es
les
rol
jle
cmp
mov
div
add
in
cmp
push
mov
jnp
cwtl
dec
inc
inc
pop
cmp
repz
iret
insl
andl
mov
les
jae
popa
jne
dec
aad
xor
or
xlat
shlb
dec
shlb
xlat
lods
push
cmpsb
mov
xchg
or
adc
cmpsl
pop
jne
incb
iret
jb
mov
cwtl
divb
push
dec
lret
and
out
loop
std
and
inc
imul
and
sub
or
iret
mov
outsb
mov
in
jb
imul
mov
jae
sbb
lret
push
ja
xchg
aad
cld
rcrl
ret
jbe
inc
ret
inc
adc
sbb
dec
arpl
lds
outsl
pop
mov
or
sub
stos
jae
adc
incb
ret
out
push
mov
scas
adc
xor
jecxz
push
popf
dec
lret
xchg
mov
mov
cmp
push
js
add
push
mov
enter
push
test
inc
sbb
ljmp
jecxz
push
sbb
push
andl
fisttpl
push
mov
mov
fsts
clc
pop
mov
mov
adc
movsb
push
ljmp
fld
fsubrl
dec
outsl
out
into
popf
or
jb
js
mov
or
xchg
dec
inc
ss
xchg
daa
in
jb
jl
sbb
mov
int3
lods
push
push
out
add
out
or
lea
mov
cmp
dec
andl
mov
push
movsl
inc
xchg
cmp
loopne
fistl
jecxz
cmc
rorl
movsb
adc
mov
xor
aaa
daa
inc
push
jmp
pushf
and
arpl
pop
mov
xor
aam
sub
pop
push
fimuls
lret
mov
push
sbb
ror
iret
imul
mov
inc
sahf
shl
test
mov
mov
jg
xor
pushf
mov
ret
test
xchg
push
jae
xchg
imul
lods
fiadds
mov
push
add
lea
cmp
mov
nop
aas
mov
cmpsb
dec
push
jno
sbb
leave
add
xchg
mov
xchg
pop
dec
mov
ljmp
loop
adc
andb
loope
pop
sbb
pushf
xchg
clc
sub
xor
and
and
inc
cmp
jecxz
add
push
and
add
mov
jns
loopne
mov
jo
push
adc
test
mov
xor
adc
aam
fldt
lods
lods
jg
aas
shrl
test
int
push
mov
cmp
push
ds
jne
pop
loopne
lcall
lret
adc
int
sub
adc
mov
cmp
xor
cmp
sbb
shrl
pop
pop
fadds
pop
push
in
mov
push
stos
insb
jnp
dec
pop
fstpl
cmc
fbstp
push
out
stc
clc
arpl
loop
jnp
push
repz
jo
lock
pop
adcb
push
mov
inc
pop
in
ficomps
sti
fsubr
jecxz
pusha
adc
rcrb
jp
lret
sbb
mov
mov
pop
shr
inc
sbb
xor
xchg
loope
xorb
addr16
adc
cld
gs
shlb
mov
call
or
mov
sub
lds
add
xorps
push
push
jecxz
and
dec
loopne
pushf
insb
push
jo
clc
mov
jl
pop
mov
test
and
jmp
icebp
push
cmc
sbb
mov
cmp
push
cmp
sbb
in
push
idivb
in
stos
jmp
jp
mov
or
mov
out
push
ja
ficoms
out
outsl
in
ss
sub
sbb
mov
cmp
mov
gs
or
jb
lret
jmp
out
inc
cwtl
int
aas
add
pushf
xchg
pop
rcl
outsb
xchg
bound
cli
lds
and
or
sub
js
push
fbstp
sub
dec
test
jg
ss
adc
fldcw
popa
mov
stc
stc
aam
mov
push
mov
push
mov
aas
xchg
dec
inc
fldt
and
mov
cmp
test
sub
jge
call
cmc
test
xchg
icebp
int
mov
push
jnp
lret
jmp
push
sbb
sub
outsb
out
in
xlat
das
jmp
xchg
fnsave
out
lds
cs
mov
mov
movb
push
pop
cmp
repnz
add
ljmp
aaa
xor
mov
rolb
mov
nop
je
mov
loopne
cmp
pop
adc
int3
fwait
out
fmuls
sbb
ljmp
or
test
push
loop
imul
mov
adc
daa
lcall
lahf
jmp
stos
fmull
dec
addl
push
sbb
aaa
push
out
repz
fcompl
adc
lods
mov
sahf
mov
cld
push
fs
or
das
mov
or
xchg
movsb
stc
inc
jnp
mov
mov
jmp
cld
les
pop
ljmp
hlt
xchg
das
and
mov
lea
pop
jl
es
in
cwtl
aas
loop
leave
testl
in
push
aam
add
jmp
outsl
in
add
addl
pop
mov
pop
jno
in
in
out
lret
les
out
clc
es
xor
sub
lret
sub
in
std
imul
pop
xor
inc
or
fsubrl
xchg
mov
test
mov
je
dec
jo
pop
ds
scas
lds
or
outsb
xor
popf
cmp
and
jge
mov
ljmp
addb
xchg
adc
push
add
pop
pop
dec
shrb
mov
inc
aas
sub
dec
cmpsl
xor
mov
out
mov
into
jo
test
jmp
and
ret
mov
loope
cmp
mov
bound
aam
mov
and
or
mov
sbb
in
push
mov
adc
or
cmp
push
mov
push
ss
sbb
cs
std
out
sti
iret
adc
push
xchg
loopne
mov
inc
xor
out
mov
ret
iret
fs
cld
rolb
adc
movlhps
lret
xchg
push
nop
adc
int
iret
xchg
cli
jo
fiaddl
pop
pop
aad
out
mov
fbld
daa
or
adc
mov
sbb
shrb
fdivp
or
sbb
sahf
cltd
sub
mov
xchg
insb
rcrl
mov
dec
fs
push
mov
in
and
push
gs
dec
inc
xchg
xor
in
mov
add
xor
in
js
mov
adc
sbb
add
push
pop
push
cld
sub
jns
pusha
ret
popf
les
dec
mov
sbb
mov
test
testb
push
push
pop
sbb
and
les
test
arpl
mov
mov
xchg
outsl
dec
push
xor
xchg
pop
not
nop
sub
mov
push
cmpsl
inc
dec
mov
jp
adc
xchg
add
sbb
push
testl
cli
jb
fs
jecxz
test
or
jne
lea
imul
mov
mov
arpl
popf
adc
xor
fsubr
push
push
mov
mov
popf
repnz
insb
xor
fbstp
adc
outsl
outsl
jge
jl
cmp
mov
sub
pop
add
dec
dec
adc
ds
sub
xor
scas
dec
inc
roll
ljmp
mov
fcoml
mov
jno
fisttps
inc
cmp
pushfw
pop
rolb
jl
xchg
cmp
mov
repnz
add
xchg
sbb
xor
imulb
sub
test
xlat
mov
iret
outsl
mov
mov
in
inc
sbb
adc
dec
aad
jnp
fldenv
ret
insb
cmc
mov
hlt
in
xor
popf
xchg
push
mov
xchg
pop
sti
lods
and
scas
rol
and
aaa
xor
and
ds
test
arpl
jecxz
push
popa
out
fdivs
cmp
push
clc
mov
cs
aam
fldl
jg
push
add
mov
xorl
mov
pop
push
je
cwtl
pop
push
cmp
sarl
in
cmc
pop
adc
ja
mov
pop
jnp
dec
loope
aam
jno
mov
leave
add
and
xchg
gs
push
outsl
push
imul
es
hlt
scas
push
rorl
xlat
pusha
mov
pop
call
incl
mov
xchg
sub
adc
push
fsubrp
out
adc
movsb
jmp
loope
xor
and
repz
add
hlt
leave
imul
add
lcall
or
and
add
sbb
les
movsb
jl
adcl
dec
add
cmp
out
fdivp
or
js
mov
mov
insb
dec
mov
cmp
incl
mov
push
mov
xchg
add
test
and
xor
ljmp
push
clc
imul
rcrb
repz
es
add
movsl
xlat
and
mov
inc
aad
test
out
in
outsb
xor
rcll
pop
std
shrb
lods
es
cmp
inc
jmp
sbb
or
mov
fdivl
sub
xor
popa
mov
mov
jns
pushf
mov
in
mov
adc
scas
in
in
dec
cmp
inc
aas
cmpsb
cmpsb
cmp
sbb
ds
repnz
cmp
daa
jns
in
ds
mov
cltd
xchg
push
ss
ficoml
outsb
pop
into
mov
xor
sti
pop
lret
push
movsl
outsl
sbb
sbb
sbb
int
xchg
ror
mov
lahf
fsub
nop
sub
in
ret
xor
clc
pop
cs
mov
test
fsubrs
push
push
mov
xor
ret
stos
mov
icebp
dec
lock
clc
lds
lock
mov
scas
inc
mov
pusha
xor
cmp
ror
mov
aad
adc
test
push
adcb
jne
outsb
ds
cmpsb
daa
lret
ret
push
cmp
test
cs
mov
or
imul
pop
jae
lods
sti
popf
movsl
pop
daa
cld
push
aaa
push
mov
pop
push
ret
dec
popl
pop
fwait
or
sub
filds
cltd
mov
out
jbe
in
and
pop
cmpsb
int
xor
pop
aas
pop
fucomi
lock
sbb
test
jnp
fcomps
pop
fwait
popf
fiadds
xor
mov
test
repnz
stos
pushf
lods
mov
pop
inc
iret
mov
dec
aam
cmp
inc
jo
addr16
sbb
mov
scas
push
ljmp
loop
add
dec
or
mov
mov
push
dec
cmp
int3
ljmp
mov
movsb
mov
xchg
push
rorl
dec
insb
adc
lcall
or
out
mov
xchg
lret
add
int
dec
cltd
sub
xor
ja
xchg
add
ja
xchg
repnz
push
imul
xchg
ja
xorl
push
scas
adc
jnp
and
sub
mov
xchg
pop
and
or
jg
lods
enter
xlat
xor
into
pop
aam
push
mov
scas
jl
push
pop
xor
das
subb
jmp
mov
adc
in
outsl
and
mov
or
stc
js
jle
inc
in
sbb
in
add
mov
adc
adc
jmp
gs
add
sub
cmpsl
leave
pop
movsb
cmp
sbb
xchg
jg
mov
jne
pusha
mov
bound
jns
xchg
xchg
xchg
cmc
faddl
das
call
loopne
xor
cmp
ss
out
fwait
jno
sbb
or
bnd
rol
jge
inc
sahf
inc
mov
imul
jmp
imul
icebp
insl
push
push
ret
mov
xor
pop
cmc
xchg
iret
int
lock
inc
xchg
push
popf
daa
or
cmpsl
jne
mov
ret
rorl
cmp
cwtl
shl
jne
inc
xchg
xor
jns
lods
fmuls
xchg
sub
xor
bound
xor
jbe
into
dec
mov
jmp
loop
adc
loope
xchg
adc
fwait
aad
xchg
xor
sti
leave
mov
stos
pusha
xor
dec
inc
or
and
cmp
and
daa
leave
jge
ja
arpl
jle
bound
ficomps
and
mov
adc
test
and
ret
loope
mov
ret
imul
xchg
int
pop
pop
dec
xchg
test
push
pushf
int
jle
jb
and
or
loope
xchg
or
pop
pop
push
or
xlat
and
stos
sti
lcall
out
lods
das
add
and
and
sbbb
add
lods
and
xchg
imul
push
loop
bound
push
insb
push
cmpsl
in
hlt
mov
mov
cltd
fnstcw
and
push
and
adc
out
in
jl
mov
cmp
mov
pop
data16
imul
sbbl
dec
and
lea
mov
pushf
cmp
mov
push
dec
ror
out
hlt
xchg
lret
stc
push
stos
test
mov
and
repnz
adc
out
sub
test
and
call
gs
fs
ss
adc
movsl
in
adc
jne
push
jg
mov
out
das
insl
scas
mov
int
stc
inc
sub
xchg
pop
mov
shl
lret
std
div
jns
push
add
and
mov
jg
lret
lds
jmp
jmp
or
sub
lret
ds
mov
mov
xor
mov
leave
sub
js
jno
cmp
ficoml
subb
packssdw
mov
daa
jbe
in
pop
rep
loop
inc
ja
push
sub
shll
aas
arpl
inc
push
jno
repz
jo
and
negl
mov
mov
jle
xchg
loopne
shr
push
insb
or
dec
jmp
lcall
xchg
dec
imul
or
mov
ja
and
push
push
mov
jle
xchg
or
sbb
fldenv
xchg
aam
daa
out
lcall
in
scas
adc
sbb
rcrb
sub
jmp
sar
cli
and
adc
inc
enter
mov
sub
add
ss
leave
shl
pusha
xchg
and
or
or
push
xor
icebp
sarb
push
push
daa
fs
inc
xorb
adc
sbb
sbb
rorb
rcrl
sub
xchg
dec
in
loope
daa
clc
mov
insb
and
lahf
add
lahf
adc
insl
and
into
cmc
fistpll
test
sbb
shlb
std
xlat
loopne
cmp
xchg
dec
leave
xchg
rcll
fbstp
fwait
cmpsl
call
push
cmp
stos
shl
push
and
and
popf
pop
or
mov
xor
xor
mov
pop
lods
sbbb
inc
fdivr
jne
cmpsl
jp
mov
add
add
jle
cmc
idiv
out
lds
xor
test
mov
sub
movsl
lcall
and
stos
mov
push
imul
js
movl
outsb
das
lods
lcall
sbb
pushf
sbb
mov
adcl
sub
jecxz
call
xchg
adc
daa
jno
push
mov
vcmppd
add
mov
test
loopne
pusha
sbb
mov
sbb
ficoms
or
pop
jnp
fbstp
jmp
test
sub
cltd
mov
mov
adc
jnp
into
adc
xchg
pop
sub
push
jo
dec
xchg
jne
inc
fstp
dec
pop
outsb
mov
mov
cmpsb
mov
iret
inc
add
cs
xchg
imul
icebp
cmp
mov
adc
outsl
scas
jne
adc
in
push
fimull
and
jp
add
mov
mov
add
inc
and
xchg
std
repz
fwait
jp
popf
push
mov
push
in
pop
pop
inc
mov
inc
fs
cmp
data16
pusha
ret
adcb
dec
sub
fs
pushf
and
divl
scas
push
push
xor
jmp
repnz
andb
aas
mov
popf
jb
gs
test
in
sbb
repz
push
andb
or
add
mov
ret
jb
xchg
call
mov
call
aad
rcl
scas
push
test
and
xchg
push
repnz
cmpsl
insb
test
push
aas
pop
pop
cwtl
rclb
aam
jo
fstpt
push
js
or
dec
xchg
cs
mov
outsl
ds
cmp
repnz
push
lcall
arpl
jge
sub
adc
jae
push
out
arpl
mov
inc
inc
ret
pop
mov
nop
movsl
rolb
push
or
dec
hlt
cmp
add
ljmp
fstps
nop
stc
lret
es
hlt
mov
stos
loope
push
inc
movsb
push
push
jbe
xlat
mov
int
popa
mov
cmpsl
jns
je
pusha
lahf
mov
dec
adc
out
and
dec
cmp
xchg
mov
icebp
adc
sbb
mov
and
stos
dec
out
icebp
gs
add
outsl
int
pop
dec
adc
mov
test
lret
pop
movsb
int
cwtl
xchg
and
daa
sbb
out
and
fcom
mov
test
mov
or
xor
xchg
in
inc
cmpsb
aad
and
ret
outsl
push
jns
pop
pop
push
xchg
ja
mov
stos
jb
xchg
clc
dec
nop
clc
repnz
loop
mov
scas
sub
iret
mov
movsl
fisubrs
push
movsl
push
sti
jo
cmp
movsl
cmp
push
dec
cmpsb
jl
mov
jmp
cli
cs
adc
loope
fwait
mov
cmp
repnz
lods
cmp
inc
or
push
leave
and
bound
lret
daa
mov
mov
repnz
dec
test
cmp
jnp
rcrb
mov
and
jge
insb
cmp
push
int3
stos
adc
xlat
mov
insb
faddp
fs
push
lcall
adc
inc
jle
int3
loopne
test
cmpsb
mov
aam
jae
ret
adc
pop
xchg
adc
test
sub
out
lods
pop
cmc
push
pop
add
rcl
lcall
and
cmpsb
or
in
stc
adc
pop
cmp
daa
mov
rcr
or
jnp
xlat
loopne
dec
push
mov
std
ljmp
pop
xchg
cld
add
in
or
outsl
sub
mov
lods
sbb
outsl
cmc
inc
cmp
mov
icebp
sbb
nop
sahf
dec
cld
mov
push
xchg
xchg
aas
pop
outsl
dec
insb
daa
cmc
adc
stc
adc
out
push
pushf
aas
sub
adcl
jg
inc
fsubl
xorl
shrb
and
movsb
test
cmp
dec
jbe
xchg
aam
add
clc
add
jle
arpl
imul
inc
mov
cmp
dec
and
stc
mov
mov
adc
mov
testb
and
repnz
push
lods
popa
sti
test
test
rcl
pop
sti
pop
inc
ret
adc
jecxz
stc
rol
mov
outsb
xchg
pop
sbb
xor
and
or
outsl
mov
xor
insl
push
int
aas
sbb
sahf
sbb
cmpsl
iret
adc
fcmovbe
movsb
insl
and
les
cs
push
lods
xor
dec
mov
mov
pop
sbbb
dec
pop
adc
mov
mov
arpl
mov
or
fstpl
sub
sbbl
pop
in
lods
enter
sub
dec
cmovbe
ret
sub
dec
and
adc
fsubr
ljmp
test
cmp
jg
cmp
lds
stos
cld
loope
imul
add
adc
mov
jnp
in
cmp
mov
outsl
bound
xchg
dec
jle
in
inc
out
sbb
sub
push
es
cmp
cmp
jnp
cmpsb
sub
jge
imul
sub
movsl
sbb
mov
repnz
iret
out
mov
push
xor
add
arpl
sub
dec
ret
mov
out
cld
xchg
popa
mov
xchg
jbe
call
pop
js
jae
xchg
cltd
insb
or
mov
imul
xor
rcl
inc
popa
jp
aas
lret
mov
cmc
test
je
repnz
sub
es
jbe
mov
mov
mov
arpl
push
pop
jb
dec
cli
push
adc
xchg
mov
pop
lret
notb
popa
mov
push
sub
fisttps
data16
lret
in
incl
and
mov
cmp
lcall
dec
or
ss
inc
jns
js
mov
and
and
lea
out
mov
mov
in
insb
mov
stos
adc
fdivrs
fstpl
xchg
pop
adc
addr16
sbb
xchg
push
and
xchg
in
repnz
mov
sti
call
cmp
push
aas
ror
add
mov
xor
push
adc
lahf
add
scas
push
insl
mov
mov
ljmp
sub
mov
pop
popf
mov
in
mov
mov
sub
mov
into
pop
xchg
data16
mov
jnp
dec
jno
addr16
pop
sub
repnz
mov
jno
pop
dec
js
mov
pop
movsb
mov
cmpsb
push
pop
sbb
out
xchg
sahf
lods
sbb
or
mov
popf
jge
pop
cmpsl
sub
sub
cmp
fidivs
jmp
xor
fsubrs
jns
and
lods
icebp
mov
xchg
in
cmp
xor
jmp
fld
xor
pop
cmpsl
dec
popf
mov
in
dec
bound
loopne
popa
shlb
in
jo
outsb
fcomps
mov
push
jge
repz
adc
adc
adc
cmpsl
ja
test
lea
mov
xchg
xchg
leave
push
gs
jb
aaa
js
mov
inc
mov
jp
dec
ja
push
sub
mov
jp
xor
dec
jnp
movsb
call
sbb
mov
push
loop
inc
add
add
pop
rcr
popf
lods
push
cwtl
xchg
faddp
sbb
sub
cmpsl
loop
add
jo
cltd
sbb
and
push
jmp
xchg
adcl
les
mov
cltd
cltd
xchg
scas
add
rcrl
fstpl
cmpsl
hlt
or
imul
in
pop
jae
mov
mov
fucom
std
adc
rol
jl
push
rcrb
adc
jno
jns
aas
subb
cmp
inc
je
ret
lret
leave
push
mov
leave
dec
mov
xchg
sub
sbb
cmp
inc
insb
sub
lcall
sbb
outsb
hlt
sbbl
adc
jbe
mov
ret
mov
cmpsb
imul
rcll
cmp
jno
mov
jle
sub
shll
adc
mov
jne
inc
jle
jno
pushf
cmp
adc
inc
movsl
xor
fld
mov
inc
sub
inc
sbb
xor
ds
jne
jle
push
sub
lods
add
movsb
scas
xchg
repz
xchg
jge
mov
and
cli
enter
sti
lods
mov
mov
pop
ja
lcall
dec
fs
nop
push
mov
in
xchg
fwait
xchg
sub
push
outsl
inc
and
popa
out
mov
jnp
xor
xor
in
pusha
int3
xchg
jl
cmp
add
add
stc
int
sbb
mov
stos
add
data16
lea
mov
loopne
mov
scas
cmpsl
cmp
adc
add
sahf
jmp
adc
push
imul
inc
out
lret
add
jae
and
inc
xor
mov
or
sbb
cs
test
sbb
popa
push
xchg
aas
imul
js
gs
scas
push
sbb
xchg
mov
xchg
ljmp
cwtl
cmc
cwtl
mov
sbb
push
add
inc
and
adc
mov
xor
rorl
inc
cmp
jno
mov
inc
test
jo
mov
adc
repnz
cli
fcoml
sbb
pushf
mov
stos
lods
sbb
sbb
sub
js
out
inc
adc
rcr
dec
jns
fsubl
push
mull
push
xchg
movsb
mov
xchg
mov
cld
jg
xchg
movsb
lock
stc
pop
cld
or
dec
jmp
cld
sbb
ret
andl
jp
mov
dec
cmp
mov
sbb
sub
mov
lcall
sti
xchg
push
inc
inc
sub
jl
push
jg
cmpl
xor
cmp
inc
mov
cmp
push
filds
jo
cmpsb
cmp
mov
out
push
dec
and
mov
mov
cmpsb
pop
jo
sub
rcrb
stos
sub
mov
push
shl
inc
icebp
lret
xor
lock
dec
hlt
repnz
cmc
add
hlt
push
dec
imul
sub
xorl
ds
and
hlt
mov
fldt
insl
mov
xchg
test
adc
mov
xchg
sub
or
jmp
pop
fdiv
cmp
pop
movsl
pop
int
imulb
jecxz
in
test
or
mov
and
int
ret
out
sbb
cwtl
xchg
or
pop
addr16
cli
aaa
or
pop
popa
mov
repz
lahf
inc
stc
cmp
mov
jle
flds
hlt
or
lods
orb
cltd
xlat
stc
mov
sub
std
fistpl
jg
adc
sub
adc
mov
sbb
mov
loope
lahf
jp
pusha
and
aaa
call
mov
inc
sub
mov
jns
cmp
in
inc
out
rcrl
lahf
sub
test
in
scas
rclb
pop
lea
iret
popaw
cli
les
nop
pop
and
jne
cs
cmp
xchg
std
jle
cmp
stos
sbb
ds
or
jns
or
in
dec
push
sub
xchg
ficoml
pop
jmp
pop
mov
xor
mov
jbe
inc
mov
inc
fbstp
pusha
cmp
adc
dec
mov
ficompl
mov
push
shll
sub
ret
in
xchg
lea
lods
cmp
test
or
sahf
stc
push
inc
fwait
jne
xor
dec
popa
adc
imul
xor
ficompl
pop
mov
out
jmp
xchg
es
xchg
stos
and
push
pop
hlt
out
mov
lods
loope
roll
dec
popf
mov
mov
pop
or
and
sbb
ret
xchg
out
nop
xor
idivb
dec
xor
flds
out
dec
jmp
add
sbb
sarl
push
imul
mov
pop
mov
or
lods
xor
fadds
mov
jp
enter
test
cmp
mov
dec
mov
aam
adc
inc
cmpsb
push
mov
mov
inc
fwait
adc
out
cmp
jle
test
aaa
jae
gs
fcomps
je
lret
mov
bound
dec
data16
pop
gs
les
imul
jo
or
imul
mov
xor
aam
mov
lods
dec
jno
subl
imul
vcvtss2si
mov
repz
nop
xchg
dec
and
jmp
sbb
sar
ja
loop
jns
inc
sub
imulb
sub
mov
mov
movb
mov
fiaddl
xchg
leave
cmc
fdivrs
add
ret
ficoms
sub
insl
repz
pop
mov
rorl
imull
mov
inc
negb
cltd
xchg
push
push
mov
mov
fisubl
mov
ds
mov
lret
fs
adc
mov
call
fnstcw
ret
mov
jno
popf
and
xchg
int
in
push
jge
subb
jne
inc
iret
pushf
loope
out
ficomps
sbb
int
rcll
adc
gs
pop
sahf
or
and
xor
fisubrs
jecxz
sti
and
in
xchg
sub
jo
scas
dec
push
mov
cmc
push
or
fisttpll
cmpsl
add
or
aas
test
shrb
fcomps
lahf
clc
sbb
add
subl
or
xchg
frstpm(287
inc
mov
jmp
mov
out
push
jmp
mov
in
es
xor
push
fdivrl
scas
nop
xchg
jmp
enter
push
inc
sub
add
fadds
and
fs
out
mov
dec
jns
dec
ja
lcall
call
fsubrl
popf
stos
mov
jecxz
loop
adc
imul
sub
adc
into
fdivr
dec
xchg
xor
shlb
mov
inc
mov
test
or
jno
pop
insl
and
or
mov
mov
sbb
sbbl
lea
inc
and
lods
das
clc
dec
mov
adc
push
inc
push
idivb
scas
mov
adc
lds
cmp
dec
lea
imul
aam
icebp
pushl
cwtl
xchg
or
mov
das
pop
add
and
cli
push
jno
ret
icebp
push
nop
repz
xchg
shrb
es
clc
inc
and
mov
or
jno
jo
and
test
add
xchg
fwait
ret
dec
and
xchg
or
adcl
ljmp
inc
call
mov
push
and
cmpsb
xchg
xchg
mov
jecxz
es
mov
lds
icebp
cmp
stos
jno
mov
jne
or
ret
jne
addb
or
jnp
inc
repz
jle
insb
in
and
bnd
std
jge
leave
lods
mov
pop
cli
or
cmp
and
mov
inc
xor
xor
sahf
inc
clc
jae
jecxz
fcompl
pop
ret
repz
adc
add
inc
fcmove
xor
filds
or
xchg
dec
jmp
pop
fldt
jo
dec
aaa
roll
or
popa
fwait
outsl
add
mov
ja
pop
shrb
aam
xor
stc
sub
push
cltd
popf
adc
loope
enter
sbb
ja
lds
push
cmpsb
dec
push
adc
xchg
xor
lret
or
in
xchg
adc
xlat
addr16
hlt
mov
cmp
or
ret
fldt
das
pop
popa
mov
into
jecxz
and
orl
sbb
mov
clc
aam
lahf
mov
sbb
repz
ljmp
mov
jl
adc
std
imul
pusha
add
sar
sub
inc
stos
sbb
loope
xor
add
push
fidivrl
mov
icebp
mov
lret
inc
xor
and
jns
fisubs
sub
inc
and
imul
jp
inc
insl
insb
xlat
xchg
and
add
dec
dec
shlb
repz
and
in
mov
pop
fidivrl
mov
pop
ljmp
push
inc
jp
sub
inc
scas
lock
sti
shlb
sti
nop
out
jmp
inc
movsb
xor
movsl
cld
pop
jge
pop
test
jns
lods
das
aam
pop
mov
subb
icebp
and
mov
dec
push
mov
cmp
adc
xchg
sub
gs
mov
out
nop
lock
sbb
sbb
mov
out
jmp
jnp
fxch
fcmovnbe
rolb
xor
andl
das
sbb
push
cmpsl
adc
cld
filds
sub
fistl
pmullw
aad
leave
test
outsl
dec
add
xlat
jnp
ljmp
xor
sbb
sbb
cli
std
das
and
cmp
xchg
jbe
sarl
sahf
stc
push
popa
xor
cmp
outsl
lds
cmc
insb
in
stos
jge
mov
push
cmp
jae
inc
cwtl
xor
mov
push
dec
es
jae
sub
lahf
inc
xor
add
jno
testb
sahf
add
dec
inc
into
or
or
jg
imul
rol
push
aam
cmp
push
and
fcomps
add
pop
andb
cmp
cmp
cmp
pop
add
mov
je
out
nop
jecxz
mov
sbb
add
push
jnp
rorb
fistpl
inc
push
xor
xchg
xchg
leave
push
ret
in
pop
jnp
mov
dec
cs
adc
jo
mov
mov
fucomp
mov
inc
or
inc
mov
push
out
int
into
jge
cmp
mov
into
add
insb
push
test
imul
mov
test
and
je
and
jae
rcl
inc
test
add
outsb
js
cmpsl
jle
sub
nop
add
mov
adc
sbb
mov
mov
add
push
pop
push
xor
push
sbb
outsb
popf
movsb
mov
xchg
adcb
pop
sarb
and
or
imul
ja
das
out
dec
cmovb
repnz
inc
cmp
scas
cmp
dec
or
jbe
insb
mov
call
cmp
pop
fadds
iret
push
sbb
inc
dec
out
cmp
mov
lcall
inc
jo
dec
jb
lock
nop
mov
mov
std
cmpsl
cwtl
insb
push
mov
add
scas
rcrl
popf
aad
movsl
mov
lock
sahf
push
out
in
notl
mov
mov
iret
xor
xor
fsubr
or
cltd
rcrb
inc
ret
cmpsl
add
cmpsl
adc
fstpt
lods
stos
cltd
in
lret
icebp
out
cwtl
inc
jge
js
xchg
inc
loope
loop
pop
fldt
sbb
fsts
ds
push
push
loope
daa
jnp
into
xlat
packuswb
jmp
pop
lods
in
roll
xor
in
leave
adc
inc
std
cmp
aam
adc
and
mov
fs
mov
pop
or
inc
ljmp
mov
ret
cmp
divb
push
movq
mov
iret
lock
sub
fs
xchg
mov
ror
jmp
lods
cwtl
fwait
mov
xor
sbb
cld
adc
xchg
out
push
jnp
test
or
mov
je
and
icebp
push
fnstcw
add
push
or
ficomps
aas
cmp
and
loope
popf
push
dec
inc
dec
outsl
pop
mov
insl
sub
xchg
cmp
mov
dec
lods
cmc
sbb
shld
cli
dec
out
xchg
push
pushf
test
insl
dec
adc
out
dec
pop
lea
dec
push
inc
popa
test
mov
aam
outsl
jns
bound
push
mov
mov
or
or
pop
stos
inc
insb
xor
pop
stos
inc
out
cs
mov
insb
push
fucom
sub
loope
leave
cmpsl
mov
cmpb
cmpsb
jbe
shrl
add
out
fnsave
push
imull
sti
test
sbb
test
mov
out
outsl
pop
fs
iret
mov
ds
out
cmp
cmp
mov
shrb
mov
rclb
jae
std
neg
sbb
pop
push
js
jo
push
push
mov
cli
mov
fildll
jns
in
cmp
in
push
add
aad
rcl
int3
and
fdivr
jecxz
push
std
punpcklwd
jb
jg
dec
xchg
mov
adc
sbbb
fstps
fsts
mov
popf
add
or
cmp
adc
jbe
push
push
mov
loopne
popf
add
movsl
mov
or
push
xchg
dec
fdivl
inc
pusha
mov
lds
les
sub
cmpsb
push
fistpll
inc
pop
sbb
test
or
aas
lahf
push
cmp
aam
mov
dec
inc
shrb
sbb
inc
sbb
sub
rcrl
add
pop
sub
cmp
push
fidivs
mov
sarl
cmpb
dec
orps
xchg
imul
xchg
loop
and
mov
lret
ret
push
lahf
inc
mov
jle
adc
fistpl
movsb
xchg
add
push
enter
sbb
fxch
sbb
sub
icebp
pushf
pop
out
das
std
pop
out
mov
cmpxchg
or
xlat
xor
popa
fstp
pusha
call
ror
push
aas
adc
out
mov
out
add
iret
ffree
mov
xor
out
nop
push
test
lcall
fwait
cs
sahf
add
pop
and
and
jo
cmp
xchg
xor
aam
mov
jg
xchg
les
and
inc
add
lds
and
sbb
cs
in
xor
jb
sub
mov
mov
xor
arpl
jno
mull
xchg
iret
into
fstps
cs
mov
test
mov
jl
mov
enter
lds
sarb
pop
sahf
pop
jle
repz
pop
mov
ljmp
int
mov
push
dec
gs
lds
stos
jae
or
out
mov
jbe
dec
cmc
mov
jno
add
sbb
sbb
fisttpl
push
push
rcrl
sub
inc
xor
fidivrs
test
loop
xchg
mov
pop
sub
dec
stos
scas
cmp
hlt
loope
test
int3
push
in
cmpb
addr16
mov
cs
mov
sub
daa
scas
jo
jmp
xor
roll
sub
cld
decb
pop
nop
push
jle
jg
sub
out
xchg
lods
mov
sub
nop
repz
movsb
or
loop
adc
aaa
jecxz
out
xor
jecxz
pushf
inc
lret
cmp
cmpsl
fistpl
xchg
addr16
pop
mov
jecxz
xchg
adc
cld
jb
shl
test
or
cmpsb
inc
jmp
faddl
icebp
test
out
push
or
nop
lcall
fwait
jge
sub
rcll
inc
sbb
pop
jo
push
push
jp
incb
popa
add
pop
mov
fs
aam
sbb
dec
into
jmp
or
sbb
lahf
push
xchg
daa
pop
ret
lahf
add
rcrb
in
fdivl
sub
es
shlb
in
jae
aas
mov
stos
in
or
call
jl
adc
adc
inc
imul
dec
test
scas
adc
aas
dec
pop
test
in
jb
fsubrl
inc
xchg
imul
subb
pushf
jns
enter
jo
sbb
add
cmp
jae
cli
mov
mov
xor
ret
cld
in
cmp
pop
dec
add
mov
aaa
pop
std
fmulp
rcl
dec
mov
jl
lods
xlat
sub
sub
outsl
pop
cli
push
les
mov
shlb
dec
cmp
scas
pop
push
adc
bound
mov
mov
push
fldenv
adc
jmp
jp
pusha
aaa
or
outsb
ss
aam
int3
xor
insb
pop
push
add
mov
aam
popf
xchg
cld
idiv
inc
pushf
and
dec
rclb
scas
dec
and
iret
lods
enter
mov
jnp
or
adc
inc
xchg
fidivrs
js
jne
and
int3
mov
call
sbb
adc
fiadds
js
mov
addr16
and
fcmovbe
mov
or
ljmp
jb
nop
orb
jle
inc
incb
cmc
in
in
leave
mov
adc
int3
popa
fwait
jnp
mov
xchg
movsl
mov
daa
pop
jge
jno
mov
movsb
dec
pushf
ret
fmull
sahf
stc
push
decl
popa
sbb
push
test
mov
mov
in
imul
jp
inc
js
cwtl
xor
inc
outsl
mov
cmp
test
mov
out
mul
sbb
sbb
pop
mov
add
jnp
sarb
push
and
cwtl
mov
dec
es
jle
pop
lods
mov
loope
mov
adc
xor
mov
cmp
push
cld
aam
daa
inc
cmp
popa
movsl
incl
jns
sahf
test
push
cmp
adc
sub
les
xor
jb
stos
jge
nop
mov
out
aaa
sub
lock
or
jmp
xlat
adc
out
jecxz
jae
into
push
call
adc
mov
cmpl
fdivrs
push
pushf
pop
jb
or
test
orb
lcall
sti
in
jne
mov
jmp
loopne
clc
mov
add
lods
and
mov
pop
lods
js
sti
andb
adc
aam
js
outsl
loop
jns
push
adc
xchg
fwait
stc
int3
inc
xchg
bnd
xor
aas
xchg
xlat
inc
push
dec
sti
fldcw
pop
pop
cmpsl
xchg
ret
inc
jg
mov
les
adcb
mov
data16
sarl
es
dec
lahf
inc
mov
push
add
inc
pop
loopne
push
xchg
pop
cmp
sub
or
pop
cli
or
lds
add
cld
xor
je
mov
test
sti
jb
xor
and
adc
scas
int3
call
mov
jp
dec
inc
dec
mov
jnp
xchg
mov
mov
in
aaa
mov
dec
insb
mov
mulb
sub
fdivrl
fs
push
insl
popf
and
shr
imull
jp
and
cltd
mov
pop
jnp
mov
fldt
cmp
lods
mov
mov
jl
sbb
mov
cmpsl
push
xchg
bsr
roll
mov
pop
dec
dec
js
cmpsl
add
mov
pop
sbb
mov
out
rcll
mov
jne
sub
pop
cmp
dec
nop
cmp
pop
outsl
xor
mulps
mov
into
jmp
xor
adc
cltd
bound
mov
cltd
dec
or
xchg
jp
flds
adc
xor
and
out
cltd
or
ljmp
jle
popa
pop
fsubl
lcall
xor
xchg
mov
pop
mov
cmpsb
dec
ljmp
adc
cmpsb
xchg
mov
insb
dec
cwtl
sbb
mov
pop
popa
sbb
push
sbbl
jae
mov
adc
sbb
sarb
loope
cmc
mov
rcrb
ficoms
jp
or
mov
and
adc
sub
sahf
mov
jno
adc
icebp
or
mov
loopne
addr16
adc
push
sti
lret
push
mov
mov
bound
pop
add
ret
fstpl
es
insb
scas
jns
mov
incl
inc
fisttps
jmp
push
hlt
je
cmp
pop
enter
mov
fildl
jbe
and
add
lcall
les
or
jecxz
loopne
and
test
jne
pop
adc
mov
ror
inc
aam
fadd
dec
rclb
add
pop
xchg
and
imul
mov
xor
and
push
popf
clc
das
lods
mov
pop
xadd
mov
ljmp
add
scas
das
or
cltd
bound
push
loopne
push
int3
mov
fmull
aam
add
mov
repnz
and
mov
gs
adc
out
int3
jnp
sbb
repz
fstl
rcrl
call
mov
xchg
add
mov
or
jbe
inc
lods
sub
fsub
scas
pop
rorb
adc
mov
roll
ljmp
mov
mov
sbb
xor
icebp
or
and
cli
xlat
mov
mov
mov
dec
mov
adc
enter
lds
inc
popf
das
sti
into
mov
sub
ljmp
lcall
fwait
and
stc
xchg
pushf
aad
mov
fdivs
mov
enter
xor
sbb
paddq
sub
stc
cltd
jnp
mov
and
cld
and
insl
and
sub
repnz
repnz
cmp
cmp
rcll
xchg
push
fisubrl
xchg
ret
xor
pusha
lret
add
enter
fisttps
adc
fildl
popa
jmp
pop
aas
push
cmc
cmp
mov
or
xchg
mov
int
aad
xchg
es
idivb
xlat
out
mov
add
aam
insb
push
sub
mov
jae
sahf
insl
xor
fdiv
xlat
xor
xchg
cmp
mov
sarl
frstor
adc
dec
aaa
fcompl
dec
xor
xchg
das
jns
not
pop
and
dec
mov
adc
test
les
mov
mov
scas
outsb
test
das
cltd
imul
inc
jle
or
mov
cld
mov
or
pop
loopne
push
add
jns
scas
pop
xor
mov
pop
fistl
mov
mov
push
xchg
mov
sahf
pushf
dec
cwtl
rclb
stc
stc
pop
gs
mov
and
and
and
sub
fwait
call
mov
lahf
sti
popa
pushf
stc
ror
out
in
jb
andb
mov
push
icebp
gs
pushf
sti
out
push
neg
movsl
ss
hlt
add
ficoms
clc
into
and
mov
lcall
xor
push
jmp
stos
imul
pop
cmc
jbe
mov
push
sahf
sahf
gs
jb
iret
fsub
shlb
push
lds
addr16
mov
jle
cmp
shll
add
mov
xchg
dec
dec
or
ficoml
stos
xchg
sti
ret
push
outsl
add
rolb
in
dec
dec
xor
mov
cmp
add
inc
adc
sub
cmp
cli
and
stos
dec
rcr
push
pop
xor
sbb
pop
insb
cmp
fsubrs
clc
stc
push
out
ljmp
or
cltd
loope
out
jl
push
or
adc
iret
pop
sub
xor
or
in
or
sbbl
fcompl
jb
xchg
repz
sbbb
jno
add
in
fcompl
sub
pop
aas
mov
inc
pop
out
mov
xchg
pop
mov
mov
iret
push
xor
dec
mov
mov
add
es
in
lock
loop
xor
mov
in
lret
mov
ret
pop
mov
xchg
jbe
jle
jno
inc
imul
int
inc
sub
mov
arpl
out
pop
fwait
xor
inc
imul
jo
dec
repz
mov
insb
or
xchg
push
movsb
cmpsl
sub
lea
jo
scas
movsl
rcll
popa
pop
or
mov
fwait
pushf
xchg
and
jns
sub
es
popf
daa
jae
ret
idiv
testl
je
xchg
mov
xor
fsub
cmp
mov
xchg
xchg
sbb
mov
jo
in
into
ret
push
sub
jmp
insl
push
sub
lods
ret
dec
or
push
loop
xor
pop
lret
cmp
jnp
xor
and
bound
rorl
sarb
or
mov
in
sub
js
icebp
lcall
sub
lret
insb
mov
push
xor
inc
jle
mov
popf
xorps
xchg
scas
repz
or
shrl
sti
mov
ficoms
je
or
out
push
or
adc
out
xchg
push
push
and
rclb
shrb
push
loope
test
loop
pop
inc
shrb
out
outsb
jns
lret
pop
sub
adc
js
test
cmpsb
lahf
data16
clc
ljmp
mov
sub
cmpl
fsubrl
inc
jne
mulb
call
dec
pushf
jns
enter
and
insb
and
lods
ffree
ret
push
cmp
cld
call
lods
lret
inc
mov
addr16
or
pop
pop
in
sub
ds
rclb
out
xor
in
fnstenv
xchg
mov
push
imul
jbe
push
movsb
sbb
jmp
hlt
sub
xchg
pushf
test
lcall
clc
and
lcall
pop
inc
outsl
mov
push
or
sub
mov
js
repnz
xlat
ljmp
inc
or
mov
in
into
and
adc
pusha
adcl
and
imul
dec
jno
or
jle
jmp
sub
mov
cmpsl
popf
push
sahf
fstl
or
hlt
mov
cltd
in
mov
cmc
sarb
clc
aas
cmpsl
jns
repz
xchg
mov
sarb
xor
lret
dec
test
cmp
mov
cs
add
xor
sub
testl
cltd
sub
cmp
cwtl
andb
repnz
xchg
sub
push
push
add
clc
lret
lret
sub
push
pop
mov
lods
mov
les
pop
lret
fucomp
fwait
hlt
pop
ljmp
lcall
and
add
fnsave
in
sub
mov
push
sahf
inc
sbb
movsl
enter
aas
jns
shlb
pop
pop
pop
lock
jg
insb
mov
insl
ja
mov
push
in
fs
out
lea
mov
push
inc
adc
lds
or
xor
lods
sub
data16
xchg
adc
inc
aad
mov
mov
test
clc
mov
lret
adc
rolb
stos
outsb
jp
loopne
aas
jno
push
add
jle
int
mov
insb
dec
test
dec
jae
es
hlt
lods
or
xor
fstl
mov
jbe
push
jmp
pop
mov
ret
cmpsb
push
enter
jno
cltd
add
dec
test
mov
push
inc
inc
ljmp
and
add
push
punpckhdq
cwtl
sbb
push
sbb
xorl
push
dec
scas
mov
imul
mov
mov
loope
sub
or
push
xchg
mov
push
and
or
mov
negl
xchg
jne
sub
aam
sbb
jl
jmp
popa
xchg
push
and
call
cmp
test
cmpb
dec
xlat
sbb
data16
and
jnp
pop
out
ja
lret
mov
mov
or
loop
sbb
push
cmpsl
inc
rorl
loopne
fs
test
mov
dec
fnstsw
aaa
mov
jno
xchg
xor
das
mov
imul
adc
pop
mov
xchg
dec
jge
mov
and
addr16
push
mov
push
pop
jns
or
pushl
aad
pop
repnz
repnz
lret
addr16
sahf
aas
push
push
mov
fcomi
xchg
inc
nop
add
in
mov
mov
aam
sbb
mov
flds
sbb
out
ja
push
jne,pt
clc
cmp
mov
or
leave
out
out
or
xchg
or
push
clc
ss
inc
xchg
mov
push
mov
add
pop
inc
bound
pop
lods
mov
cli
shrl
jns
arpl
mul
mov
dec
fcomi
jmp
cmpsl
fstpt
out
stos
clc
cmpb
mov
push
fisubrs
sbb
call
or
pop
aaa
lret
jo
lods
push
clc
cli
mov
aaa
sbb
fnsave
int
aam
sti
cmp
mov
dec
add
and
js
push
in
addl
sub
pop
pushf
push
push
and
dec
cmc
mov
jecxz
fcomip
imul
xchg
sbb
dec
pop
sbb
mov
scas
mov
cmp
fstpt
rcrb
pop
in
sti
adc
aad
push
mov
mov
lcall
push
sub
xchg
pop
mov
cwtl
pusha
nop
fs
aas
dec
sarb
mov
cmp
bts
cltd
xchg
jg
or
fcmovu
nop
dec
add
xor
fwait
scas
or
sub
fadds
gs
loopne
fdiv
loope
xchg
mov
add
fimuls
lea
dec
andl
ja
outsb
add
sbb
push
std
push
ds
into
repnz
or
mov
test
cmp
fwait
jnp
repnz
popf
xor
icebp
or
jp
jle
push
jns
inc
and
in
fsubr
out
push
pop
aam
or
hlt
inc
sub
or
or
inc
pop
mov
push
sbb
mov
xor
leave
popf
nop
mov
sub
push
jb
dec
pop
push
adc
stc
loop
leave
cmpsl
les
add
orl
mov
xlat
jp
xchg
arpl
dec
decb
sbb
int3
xchg
inc
and
in
pop
push
pushf
loopne
sbb
movsb
pop
add
cs
push
adc
out
sub
fs
mov
int
jbe
dec
in
mov
inc
rcll
out
leave
jne
aad
sub
jbe
or
adc
dec
push
push
pusha
pop
movsl
movsl
bnd
insl
enter
scas
add
popf
fiadds
aas
lock
xchg
aaa
adc
imul
sbb
push
andl
std
jno
sub
ljmp
adcb
test
out
add
dec
inc
and
rol
cs
mov
pushf
mov
dec
xor
hlt
inc
rorb
and
sub
sbb
lds
sub
call
xchg
call
outsb
stc
aas
xor
shlb
fiaddl
cltd
imul
lret
scas
jecxz
jl
movsw
inc
jbe
scas
fs
and
xchg
out
movsb
pop
xchg
repnz
xorb
push
sub
jecxz
jo
inc
int3
icebp
neg
cmpsb
inc
mov
mov
pop
enter
loope
mov
pop
les
inc
repnz
out
mov
cvtdq2ps
lds
pop
xorl
cmc
int3
js
sbb
and
xor
inc
xchg
mov
push
pop
repz
inc
sub
add
jmp
sbb
outsl
mov
enter
or
out
fsubrl
int3
or
je
loopne
jns
mov
jmp
inc
call
fs
out
cmc
xchg
cwtl
xor
pop
push
sub
lds
imul
loope
dec
loop
and
pop
sub
add
xchg
enter
push
xchg
push
jmp
pop
lds
mov
mov
shlb
js
cmp
mov
jo
imul
sub
int
int3
shll
lcall
mov
daa
les
aam
mov
xlat
out
jl
mov
and
cs
mov
xlat
cmp
push
in
fistpl
lret
mov
shll
sub
test
std
insl
add
mov
loope
pop
cmp
lea
xlat
loopne
push
mov
inc
pop
dec
mov
sti
loopne
fs
daa
cwtl
xlat
inc
inc
sub
jmp
mov
cmp
and
ja
fimull
out
xor
adc
mov
sarb
sub
insb
out
xor
in
into
into
pop
xor
fists
or
inc
cmpsb
clc
loop
nop
sarb
push
out
clc
shll
out
sbb
pop
mov
ret
adc
sbb
inc
pop
dec
sti
xchg
xchg
popf
mov
scas
push
add
dec
test
sbb
push
lcall
mov
in
stc
sub
jecxz
stc
push
and
fmull
mov
sti
mov
cs
sahf
jne
popa
push
lret
xor
in
sub
lsl
jno
shr
push
or
outsb
cmp
aas
lds
daa
push
dec
rcrb
lock
cmp
and
push
jo
push
lods
inc
loopne
lret
shlb
cmpsb
out
mov
push
pusha
push
cmp
cmp
rolb
sbb
sub
lahf
std
dec
hlt
fstpl
lret
adc
inc
xchg
clc
jle
ja
mov
lea
cld
jmp
idivb
pxor
push
sarl
push
and
dec
fnstsw
jb
push
xchg
xlat
clc
fidivl
jmp
xchg
mov
jbe
push
loopne
add
xlat
mov
leave
jbe
roll
dec
inc
push
stos
nop
or
ljmp
dec
lahf
mov
sub
jbe
ljmp
enter
js,pn
imul
push
in
jno
lahf
mov
test
push
mov
mov
pop
xchg
rcll
or
fcomps
xchg
adc
shlb
fnstenv
into
and
testb
divb
scas
lds
icebp
cld
jmp
mov
jnp
loope
fistpl
adc
pop
jbe
inc
mov
push
pop
js
mov
imul
popa
in
push
es
pusha
sti
shll
les
pusha
enter
pop
mov
lds
mov
jmp
into
mov
cld
mov
insb
mov
or
jmp
push
test
push
loopne
out
push
jo
jp
andl
xor
push
mov
sti
sub
pop
dec
int3
dec
idiv
add
add
int
mov
roll
pop
fs
scas
lds
insb
cmpsb
mov
je
jg
ret
scas
mov
popa
popa
clc
add
popa
fsubr
in
iret
push
mov
stos
pushf
sahf
aas
push
xchg
insb
sahf
arpl
mov
icebp
mov
fbstp
fwait
jl
sub
stos
cmp
xchg
mov
mov
jmp
daa
sbb
cmp
add
cmp
xor
mov
aad
sub
pop
int
mov
pop
and
sar
or
sbb
call
push
loope
sub
mov
out
push
jne
cmp
cmp
fdiv
ja
call
ljmp
add
aaa
mov
jno
call
sti
movsl
mov
fisttpll
in
out
fcmove
adc
xchg
xchg
in
mov
mov
stos
test
dec
or
jmp
cmpsb
and
pop
int
cmp
shll
imul
shll
rcr
push
sbb
scas
arpl
movsb
dec
pop
cwtl
sbb
jno
insb
dec
ds
addr16
or
mov
test
jo
sbb
add
push
inc
lret
jmp
in
or
xor
push
mov
lods
dec
jae
test
mov
add
rcll
sub
in
je
addb
xor
ror
imull
jno
je
and
add
or
cmpb
cmp
mov
lret
jecxz
rorb
repnz
mov
adc
aad
mov
adc
popa
out
push
outsl
bound
and
sbb
cmp
and
in
hlt
in
rolb
xor
shll
shlb
xchg
aam
in
je
jge
mov
sar
pop
adc
cmpsb
sub
aaa
push
std
dec
enter
cmp
cltd
mov
inc
dec
xor
in
test
fmulp
ss
sbb
mov
out
dec
mov
aas
xchg
call
pop
inc
jmp
nop
in
jl
or
xchg
jne
imul
push
mov
lcall
les
add
jl
jns
aad
fdivs
cmp
sub
cmp
pop
lods
push
test
adc
mov
mov
push
cmpsb
jecxz
xchg
insl
sub
lea
rcll
dec
insb
mov
mov
and
sub
test
push
cmp
jno
sub
and
lock
iret
inc
dec
fcmovnbe
fptan
sahf
fwait
jg
enter
mov
mov
out
shrb
add
jae
cli
aas
hlt
xchg
dec
movsb
adc
fcoml
ret
dec
lcall
cmp
js
cmpsb
lret
xchg
adc
push
sbb
adc
sub
push
outsl
mov
pusha
insl
in
add
pop
jns
sbb
mov
mov
cmpsb
jmp
xchg
icebp
mov
jbe
xor
test
leave
push
xchg
in
test
scas
pop
or
sbb
fisubrl
aam
imul
sti
sbb
test
out
mov
mov
lods
or
pop
xchg
cmp
arpl
bound
inc
cmpsl
xorb
add
fdivl
jmp
push
mov
jno
shll
cli
lds
xchg
pop
lcall
xchg
adc
movsb
fistpl
iret
cs
aam
ret
add
jmp
jl
pop
or
ret
and
lods
jne
mov
fwait
push
add
repz
or
movsl
mov
push
fsubr
dec
jmp
mov
mov
pop
addb
adc
push
loope
pop
mov
mov
fwait
sti
jg
psubsb
cmp
xor
and
mov
pushf
jmp
adc
stc
pop
cmp
fdiv
ljmp
inc
push
sub
test
mull
cli
pop
imul
jae
xor
fsubrl
outsb
cmpsl
int
test
ficomps
sbb
sbb
push
adc
sub
dec
in
pop
ror
test
loopne
gs
scas
xor
xchg
xchg
sarb
xchg
xchg
js
inc
add
aad
stos
pop
or
cmpsl
inc
lea
push
inc
loopne
add
jg
jp
out
cli
test
std
jne
icebp
cwtl
clc
clc
sub
cmp
ret
pop
imul
jge
pop
sub
jge
push
fcompl
adc
orb
out
lods
add
mov
jge
cmp
sti
fwait
mov
xchg
out
mov
or
mov
repz
arpl
mov
test
mov
mov
and
hlt
cmc
xchg
jecxz
pop
pop
dec
mov
dec
pop
into
pop
stos
flds
adc
xchg
cmp
cli
cmp
cltd
mov
jae,pn
pop
pop
pop
out
dec
xchg
in
adc
gs
mov
inc
pushf
add
xlat
dec
jnp
pop
jnp
scas
daa
lds
add
in
dec
mov
pop
jae
fildll
je
mov
repz
fcom
enter
ficomps
ds
gs
lcall
jno
jb
xor
in
mov
insb
dec
mov
sbb
fcoms
in
push
es
inc
pop
mov
pop
lds
lret
xchg
or
jb
xor
sub
mov
jle
mov
xor
push
call
jb
shlb
test
das
pop
cmp
fcomps
push
nopl
out
cmp
outsb
push
xlat
fildll
in
adc
cs
arpl
lea
mov
scas
jbe
mov
or
sbb
out
movsb
sub
test
icebp
and
lods
stos
or
cmpsl
xchg
mov
movsb
pop
mov
int
mov
inc
jle
sub
pushf
lahf
and
mov
in
dec
aad
popa
clc
and
stc
fisubs
adc
sub
fdivs
scas
movsl
mov
jo
dec
ja
lds
push
insb
push
outsl
cmpsb
sbb
aaa
sbb
lret
in
xchg
add
push
mov
cwtl
mov
inc
pop
mov
jns
pop
push
pop
cmp
in
mov
lea
or
xor
ror
clc
jbe
or
fs
ror
rcr
sub
mov
push
cmc
gs
dec
jecxz
in
arpl
lret
pop
mov
subl
xor
and
mov
push
dec
orl
mov
or
mov
xor
jecxz
push
jns
inc
ret
add
adc
mov
fcomps
cltd
pop
sarb
cmp
pop
int
pusha
xchg
out
data16
in
pushf
add
xor
sbb
scas
add
icebp
enter
and
cmpsl
cmp
mov
test
cmpsb
js
aas
push
std
jbe
outsb
rclb
push
pop
dec
cmp
test
ljmp
leave
das
fwait
pushf
dec
mov
cltd
push
xchg
fwait
pop
int3
sbb
rep
cmp
adc
sbb
jmp
insl
pusha
fildl
decl
iret
outsb
sbb
into
cs
xchg
insl
movsb
daa
and
pop
sub
sub
hlt
mov
rolb
jl
xor
add
push
mov
aas
and
mov
fmuls
sub
fimuls
arpl
pop
in
rcll
mov
lds
hlt
sbb
jnp
jle
mov
mov
aad
in
fwait
out
jns
xchg
inc
out
xchg
pushl
sahf
mov
loope
adc
fmul
jmp
roll
aad
scas
popf
data16
or
jecxz
mov
test
pushf
enter
and
jnp
rcrb
stc
pop
xor
add
mov
push
out
xchg
xor
push
adc
roll
sbb
addr16
orb
add
jmp
and
xchg
inc
jbe
leave
dec
pop
sbb
cmp
xchg
mov
sub
int3
cli
sahf
cmp
mov
cmpl
inc
test
pop
aam
and
into
mov
xchg
dec
cmp
cltd
push
ljmp
xor
jecxz
fistpll
stc
push
xor
rcl
push
cmpb
pop
mov
ret
and
jmp
int
enter
nop
pop
dec
loopne
pop
xchg
ret
jb
sub
movsb
cs
pop
and
fisttpll
sub
mov
mov
int3
or
mov
adc
dec
xlat
inc
sub
fdivs
push
mov
ja,pt
jnp
outsl
lret
je
jle
sbb
pop
cmp
shl
inc
ds
inc
stos
xchg
mov
fdiv
aam
cmp
push
mov
js
test
clc
xor
shll
cmpsl
mov
jae
pop
aam
and
mov
inc
mul
pusha
aas
movsb
inc
in
call
jle
dec
mov
inc
mov
movb
and
lds
cmp
lahf
pushf
sbb
cs
sbb
mov
fsubrl
in
in
fwait
xchg
lea
cmpsl
das
mov
inc
int3
pop
scas
lods
pop
in
push
fldt
mov
lock
push
les
sbbb
xchg
hlt
sbb
push
enter
jo
push
rcrb
mov
in
xchg
xor
scas
js
shlb
cmp
cltd
mov
insl
imul
aas
mov
loop
aas
xchg
out
rorb
mov
test
jmp
add
loopne
fwait
xlat
pop
jnp
icebp
jmpw
sbb
sbb
fs
jmp
pushf
jns
push
inc
xlat
rol
movsb
jo
fwait
cs
jp
xor
mov
fstpt
mov
fstl
mov
or
sub
sub
fidivl
push
pop
movsb
inc
jmp
mov
adc
cs
outsb
leave
push
fbstp
negl
cld
push
lahf
out
mov
hlt
mov
mov
mov
ds
adc
cmp
jmp
not
rol
mov
mov
and
adc
loop
xchg
cld
loop
xchg
jnp
ja
mov
in
jae
sub
mov
fwait
sub
lods
ss
call
and
loop
stos
frstor
inc
sub
push
cmp
jae
lahf
mov
hlt
out
shlb
pop
out
push
mov
insb
inc
fdivl
rcr
mov
fmuls
pop
test
jge
dec
lds
mov
into
jnp
xor
inc
and
jb
iret
dec
mov
sbb
push
jnp
mov
cmp
loopne
cltd
jl
outsl
inc
test
xor
mov
not
insb
push
and
cmp
jbe
out
and
sahf
push
out
and
xchg
sub
sub
nop
test
bound
leave
dec
inc
movsl
filds
jmp
into
inc
js
or
sub
push
std
ret
xchg
rcl
pusha
movsb
adc
jbe
imul
xlat
cmc
dec
push
test
adc
mov
insb
xchg
mov
sarl
add
cmp
pop
shrl
filds
scas
aad
loop
std
sahf
dec
mov
and
aas
sub
ficoml
lahf
leave
in
adc
pusha
push
mov
xchg
or
and
xor
sbb
jno
outsl
cmc
sub
int
fxch
add
fcmovnbe
jge
ror
sub
sbb
dec
jmp
pop
sub
jnp
stc
add
add
pop
arpl
ret
mov
data16
jg
loope
push
int3
jge
sub
in
int
or
rorl
sub
insb
mov
inc
add
sbb
adc
in
mov
imul
dec
and
mov
dec
or
sub
push
fsubrl
sub
fcomps
clc
jge
pushf
sbbl
cmpsb
popa
inc
lods
rcrl
jae
sub
out
pop
mov
aam
pop
insb
jno
jg
bnd
ljmp
cmp
js
mov
pop
ss
dec
in
or
mov
nop
movsl
test
mov
enter
xchg
push
std
out
sbb
js
add
scas
in
add
xchg
push
or
sub
cmp
bound
mov
addr16
push
std
push
adc
lret
inc
cs
jle
dec
sub
cmp
enter
push
dec
push
mov
outsb
mov
sarl
iret
jne
jb
adc
mov
mov
mov
push
icebp
fistl
or
cmp
lds
in
insb
cmpsb
mov
or
std
pop
int
mov
testl
arpl
mov
mov
dec
lods
scas
js
sahf
daa
xlat
in
sbb
popa
fwait
movsl
hlt
inc
imulb
mov
dec
mov
xlat
lret
ret
inc
sbbl
scas
sbb
in
lods
jns
insb
xor
add
popa
fildl
test
mov
add
call
adc
out
mov
xchg
fidivrs
dec
pop
mov
pop
jo
pop
cmp
mov
inc
pop
add
sarb
inc
push
stos
push
inc
ret
jo
aad
add
push
setg
cmp
mov
icebp
cmp
mov
outsb
repnz
leave
enter
push
push
rolb
sarb
mov
rolb
mov
lret
std
and
pop
and
and
std
test
nop
push
test
int
das
push
lods
xor
loopew
push
xchg
sub
dec
dec
sub
testl
cmp
sbb
mov
call
xor
add
mov
enter
ja
or
popa
mov
and
notb
in
sub
and
cwtl
cmp
pop
cs
rcrl
jg
stc
loope
push
and
stc
adc
in
push
xchg
mov
jnp
popf
adc
jl
sub
pop
mov
daa
or
cs
and
das
out
icebp
hlt
mov
jne
sub
sub
or
pop
test
push
mov
mov
and
imul
addl
inc
push
dec
mov
adc
aad
sahf
sub
sbb
and
stos
dec
cmpl
lcall
enter
lahf
fadds
lahf
push
pop
out
xor
je
ret
dec
cmp
pop
into
push
xchg
mov
pop
add
inc
ljmp
test
xchg
ja
jmp
rorl
xchg
dec
mov
int
je
xchg
mov
aam
pushf
in
add
mov
cmp
iret
adc
add
inc
mov
pusha
subl
int3
pop
clc
sarb
cmp
lret
dec
push
mov
cmp
int
sub
inc
sbb
lcall
mov
pushf
inc
in
ja
cmpb
in
cli
enter
rol
sbb
pushf
and
push
xchg
xchg
inc
test
mov
fidivrl
cmc
xor
fcompp
lret
xor
mov
xchg
in
mov
lods
cmpl
mov
fimuls
add
jle
fdivp
addr16
fists
movsb
lahf
ret
shlb
les
lret
cmp
cli
sbb
orb
adc
or
mov
cmp
xor
jl
imul
mov
in
add
mov
lret
lock
enter
or
fwait
insb
sub
cli
aas
xchg
movsb
jno
scas
pop
mov
imul
mov
ret
shrb
lods
arpl
jae
gs
lahf
bound
mov
insb
in
mov
dec
push
push
aas
and
sar
xor
mov
mov
pop
ficompl
and
pop
rorb
cmp
js
roll
cmpsb
call
icebp
in
cli
aaa
cmp
mov
mov
pop
fisttps
stc
mov
push
inc
dec
sbb
gs
mov
fdivr
std
dec
pop
lock
pop
lcall
sbb
imul
push
cmp
lods
sysexit
dec
insb
imul
inc
dec
cmp
pop
xchg
aam
in
pop
movsl
mov
das
aad
add
or
cmp
dec
loope
mov
dec
psllq
mov
pop
inc
out
lods
cmp
cmp
out
int
movsb
ficompl
loope
test
xor
ret
scas
mov
les
addr16
sub
cs
push
loope
rol
fadds
add
mov
cmpsb
call
std
dec
jmp
push
lahf
jbe
test
lds
jle
stc
sub
out
arpl
push
add
push
bound
add
mov
ljmp
add
lock
push
adc
movsl
into
out
fs
pop
xchg
std
cmp
ja
loope
xchg
aas
movsl
xchg
inc
jp
jmp
or
insb
sbb
jns
inc
xchg
lret
hlt
fbstp
xchg
shll
clc
add
pop
jp
and
lods
mov
inc
and
data16
add
inc
add
nop
ret
xlat
pop
mov
addr16
fsubrs
mov
scas
mov
xchg
mov
pop
and
add
push
fisubl
add
out
inc
les
mov
cld
in
out
das
jmp
lahf
jne
inc
sbb
imul
push
loopne
cmp
int
mov
stos
das
iret
lcall
int3
bound
fsubrs
sbb
sub
xchg
out
ret
xlat
dec
pop
mov
mov
xchg
bound
or
mov
add
ret
shll
clc
dec
sbb
jmp
in
add
or
and
sbbb
add
mov
adc
popa
lds
dec
mov
int3
rorb
mov
mov
mov
fldt
xorl
fdivrl
stos
dec
dec
mov
cmp
cmp
js
movsb
in
mov
cmp
inc
fcomp
mov
dec
inc
inc
pop
in
aad
add
leave
cmp
and
mov
push
adc
in
pushf
mov
inc
repnz
inc
mov
cmpb
nop
xor
sub
repnz
or
or
sub
scas
xchg
inc
inc
pop
js
shrb
mov
add
adc
fs
imul
shlb
pop
and
push
jmp
adc
cmp
lcall
out
icebp
add
mov
mov
in
or
dec
iret
jg
jl
adc
gs
jp
outsb
daa
andl
dec
mov
popf
ds
sti
mov
lret
pusha
mov
push
aas
jmp
ret
dec
sub
mov
sahf
mov
dec
jae
int
push
cmpsl
je
pop
push
out
mov
dec
repnz
mov
push
jno
stos
faddl
or
xor
cmpsl
and
sbb
jg
rcrb
fcoml
daa
push
out
movsl
sarl
ds
mov
fisubs
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
pop
nop
ror
fistpll
jne
jnp
imul
jmp
sub
xchg
clc
push
inc
sub
pop
jecxz,pn
popa
cli
ljmp
leave
cmp
adc
ret
dec
xor
loop
je
pop
and
orb
sarl
push
inc
aas
fidivl
lods
jo
pop
mov
jle
insb
xlat
decb
pusha
pop
aad
jns
cmpsb
ds
cmp
stos
sub
mov
pop
adc
test
bnd
sbb
stos
mov
popf
dec
and
sbb
inc
sahf
loop
and
cltd
inc
shr
cmpl
loopne
cmp
dec
out
lret
and
test
andl
mov
jb
les
push
and
dec
mov
lahf
and
cli
and
sbb
fisttpl
add
popa
cmp
xlat
ficoms
sbbl
add
add
leave
lods
pop
mov
push
fadds
xchg
insb
push
xchg
pop
dec
adc
sbb
out
sub
daa
adc
add
loopne
outsl
loope
jl
in
in
cmp
xchg
loop
mov
or
icebp
in
inc
and
mov
pop
out
push
loop
clc
loope,pt
dec
and
xlat
aas
lret
and
in
sub
imul
nop
cvttps2pi
push
dec
dec
out
mov
loope
and
xchg
cmp
xchg
cmp
int3
adc
outsl
push
jg
mov
sub
pop
addr16
lock
push
cmpsb
fincstp
lret
jo
inc
sarb
add
sbb
dec
dec
push
shll
jmp
ja
sbb
cwtl
cs
xor
ds
mov
jp
test
xchg
jl
jbe
mov
mulb
adc
mov
jo
dec
daa
push
mov
sub
sub
push
fdivs
xor
cli
std
mov
lcall
jle
fwait
std
mov
psubsb
lahf
mov
stos
xchg
int3
adcb
and
inc
push
push
pop
inc
movsl
dec
xchg
pop
outsb
inc
mov
xchg
and
fmull
xor
mov
negl
push
in
xor
jmp
dec
repz
int
hlt
movsl
mov
jle
mov
or
or
push
xor
leave
and
cmpsb
rorl
in
lods
je
adc
pushf
out
lret
cmp
add
stos
xchg
ss
jbe
cmp
push
xor
mov
nop
lea
movsb
call
jl
inc
stos
daa
cli
vandnps
rorl
je
shr
xchg
xor
pop
clc
jecxz
stos
push
sub
fdivl
push
cmp
or
shlb
jne
dec
loope
push
mov
insl
sbb
push
sbb
stos
mov
fdivs
xchg
xchg
push
fidivl
jne
mov
out
nop
mov
test
pop
loopne
outsl
mov
push
xchg
stos
jo
test
or
notl
and
push
sub
out
sbb
cli
movsl
in
sbb
fdivl
push
in
and
xor
sub
ret
sti
test
sarl
leave
sbb
or
stos
in
das
icebp
js
mov
icebp
in
lea
jmp
imul
jg
inc
mov
or
cmpl
addl
mov
mov
cmpsl
fcoml
xlat
negl
gs
stos
mov
or
mov
or
out
test
dec
push
cmp
fcmovu
divl
stc
or
push
adc
push
xor
fwait
dec
cmp
les
mov
dec
or
and
cmpl
mov
mov
mov
jne
fisubrs
dec
andb
and
bound
fsqrt
jb
lret
in
push
int
imul
jge
lea
sbb
xor
dec
pop
xor
sub
jns
sbb
mov
addr16
iret
fstpt
lcall
pop
lret
mov
cs
mov
mull
mov
add
push
adc
ss
sbb
dec
je
sbb
inc
div
test
lret
lcall
and
add
fdivrl
push
sub
mov
call
out
ret
dec
cmp
dec
aam
mov
push
int
xor
js
push
mov
imul
adc
inc
pop
pusha
push
fwait
jbe
daa
adc
jae
sbb
pushfw
aas
xchg
pushf
jle
mov
jmp
ds
loop
xor
mov
fnstcw
hlt
dec
dec
mov
adc
dec
sub
jnp
mov
add
addb
bound
mov
imul
xchg
ret
repz
mov
xchg
pop
loop
fidivrl
pop
test
ret
mov
jno
ja
mov
ja
jg
pop
ds
inc
lcall
xchg
xor
push
dec
push
push
test
dec
cltd
aaa
mov
enter
out
adc
adc
shrl
push
pop
mov
xchg
sub
or
inc
mov
aad
in
mov
push
ret
lods
in
aam
out
or
jge
lcall
daa
mov
nop
push
orb
pop
insl
sarb
ret
mov
dec
or
iret
icebp
sbb
add
push
cmp
sbb
fs
test
or
sub
cmp
in
mov
repnz
sbb
into
fsubrl
mov
pop
hlt
das
xchg
add
stos
cmpsl
add
daa
pop
jmp
adc
or
divl
xor
dec
jb
sub
mov
ljmp
mov
daa
jbe
lds
jmp
jb
or
push
movsb
dec
test
nop
mov
adc
pop
xor
stos
test
je
lcall
pop
mov
cli
cwtl
aam
cld
mov
xor
and
mov
out
add
movswl
mov
push
push
in
data16
jge
adc
jno
xor
pop
in
adc
xchg
xchg
push
fxch
pushf
mov
addl
dec
add
jnp
movsl
mov
insl
imul
ljmp
inc
mov
push
cltd
mov
mov
sahf
frstor
add
int3
pop
mov
aam
jmp
rcrb
cmp
jb
pop
std
fcompl
adc
in
inc
dec
push
loop
mov
ret
js
inc
mov
int3
mov
inc
inc
loopne
cmp
or
or
sub
subb
shlb
hlt
nop
push
jbe
sub
inc
ja
cwtl
push
in
leave
mov
inc
orl
cli
bound
js
or
mov
daa
pushf
dec
repz
jp
inc
add
mov
xchg
xor
aam
or
mov
xchg
out
leave
repz
sbb
and
jecxz
mov
mov
jl
fisttpl
test
arpl
jae
inc
xchg
push
mov
cmp
std
mov
push
popf
leave
push
adc
lods
pop
leave
and
movsl
add
push
dec
add
movsl
in
scas
mov
out
and
cwtl
outsb
sbb
jnp
mov
xor
or
pushl
fsubr
xchg
mov
jns
push
mov
out
adc
cli
movsb
out
aam
inc
or
sub
lret
aas
int
sbb
test
xlat
movsb
aad
fwait
and
outsl
fwait
inc
push
adc
jmp
out
outsb
sti
and
sub
add
add
out
dec
push
xchg
and
mov
rcr
push
pop
cmc
mov
in
push
out
xor
enter
push
in
lret
mov
or
fnstenv
and
mov
jp
out
push
mov
in
lret
xchg
imul
mov
stos
pop
rcrl
cld
out
imul
dec
jno
dec
lods
out
cmpsl
pop
pop
and
sub
ret
add
xchg
xor
xchg
movsb
sbb
push
inc
leave
out
nop
call
add
add
ret
push
out
sub
or
sbb
push
dec
enter
mov
in
sahf
adc
and
jno
jge
jmp
fistl
call
movsl
adc
outsb
aad
xchg
mov
pushf
sub
xchg
fcoml
jno
fcoml
lret
mov
push
mov
loope
int
test
mov
ss
data16
dec
fisttps
dec
inc
mov
fsave
pop
roll
add
cli
push
mov
inc
ror
dec
push
cmp
jg
push
popa
mov
push
loopne
retw
enter
in
enter
mov
sub
adc
and
fidivrl
out
das
or
pop
and
fstps
sbb
mov
cmp
loop
stos
and
sti
ret
cmp
push
mov
rcl
aam
or
loope
and
xchg
pop
cwtl
add
jns
mov
mov
dec
out
cwtl
mov
shrb
mov
lods
std
jno
lods
popf
jmp
sub
and
repz
test
cmp
mov
inc
pusha
packssdw
sbb
outsl
dec
cmc
je
adc
sbb
xchg
repnz
mov
arpl
int
jne
pusha
lock
sub
dec
cmp
in
mov
mov
or
pushl
pushf
testb
inc
and
popa
jb
lock
xlat
imul
cmp
dec
push
inc
out
adcb
sti
inc
adc
outsl
rorl
outsb
mov
in
aaa
movsb
adc
dec
mov
jmp
mov
sahf
outsl
mov
iret
mov
pop
into
mov
cmp
repz
jno
lahf
mov
outsb
stc
js
testl
add
cwtl
xchg
pop
adc
mov
xor
cmp
insb
lods
pushf
pop
mov
lret
mov
loop
mov
sub
and
imul
scas
es
adcl
sarb
sbb
push
sub
int3
fs
adc
sti
and
pusha
out
aam
dec
arpl
les
xchg
ror
sub
push
jb
inc
js
es
xlat
decl
add
ljmp
dec
jbe
xchg
xchg
cmpsb
popa
adc
mov
xor
outsb
jnp
daa
push
int
das
cmc
lcall
jmp
add
mov
out
and
enter
ljmp
cld
xlat
inc
mov
subb
mov
lcall
sub
lret
scas
imull
stc
ficoms
cld
mov
cmp
pusha
and
data16
sub
fidivs
jl
mov
add
je
inc
or
cmpsb
lods
rorb
xchg
push
movsl
test
push
inc
movsb
fwait
mov
and
cmc
dec
fs
cli
and
popf
rcrl
mov
std
mov
shl
outsb
inc
fs
rolb
xor
fimull
outsb
aam
mov
push
inc
push
addr16
sbb
arpl
outsb
jl
and
insl
pushf
inc
jno
dec
insl
push
pop
pop
xlat
mov
push
xchg
fisubrl
pop
add
int
aas
jle
mov
jo
sbbb
sub
pusha
sahf
push
sbb
enter
push
test
loop
jg
mov
and
cld
cmp
add
shl
out
rolb
xchg
push
ss
fadds
inc
icebp
jmp
xor
sub
xchg
in
and
ret
push
jae
bound
aaa
mov
mov
addb
and
pop
fwait
iret
adc
sub
inc
fs
lahf
ret
mov
add
jle
pop
lods
les
out
movsl
xchg
ret
out
cmp
pop
push
inc
imull
in
adc
movsb
inc
add
mov
loope
add
cwtl
xchg
add
popa
mov
pop
std
and
aad
mov
push
test
jp
add
bound
jl
loop
fldl
xor
push
aam
sub
lret
fnsave
pop
xor
std
mov
lods
sub
jo
enter
mov
cli
xchg
fsub
es
cmp
ja
int
aam
dec
push
es
enter
jae
movsl
jne
paddb
xorl
cmpsl
inc
pushf
pushf
mov
mulb
adc
pop
xchg
fs
bound
dec
pop
dec
sbb
dec
outsl
and
dec
cmp
test
nop
orl
in
sarb
mov
insl
push
dec
dec
push
or
mov
mov
lea
mov
xchg
adc
std
inc
fucomi
add
adc
jp
hlt
or
push
jbe
cmp
inc
dec
jb
jmp
mov
cmpsl
sub
rolb
imul
aam
mov
rorl
jae
xchg
jge
std
mov
adc
test
add
add
add
fldcw
dec
stc
out
sub
mov
out
out
mov
aad
cmpsl
sbb
int
cmp
arpl
inc
inc
jbe
pop
enter
pop
jge
push
dec
pop
pop
push
xchg
test
inc
cmovnp
adc
mov
mov
cli
lods
sub
data16
and
jg
xchg
xor
imul
popa
jmp
fsubr
mov
lock
scas
lret
imul
xor
dec
push
fisttpll
sub
in
xor
mov
dec
pop
pop
adc
add
mov
pause
push
dec
aaa
jg
aas
ja
lret
sbb
or
jb
or
sahf
cli
xchg
mov
jno
lret
popa
xchg
insl
rorl
sub
ret
loope
mov
or
push
test
jp
push
out
mov
into
aaa
mov
stos
sub
add
fucompp
loop
jbe
scas
arpl
mov
pop
icebp
and
sbb
mov
into
pop
loope
sbb
bound
rol
bound
fstps
add
jae
and
adc
xlat
jne
pop
push
scas
jecxz
dec
fs
out
cmp
mov
mov
idivb
and
jns
loope
sub
push
in
hlt
jne
ret
sub
sbb
sbb
rorb
pop
sub
adc
jo
jae
inc
scas
stos
inc
dec
insl
nop
mov
cmp
dec
dec
dec
lods
mov
insl
add
jnp
aam
push
dec
jno
mov
test
hlt
xchg
mov
add
lret
sub
or
mov
loopne
jmp
aam
cmp
cmp
out
in
sub
pop
out
es
daa
jecxz
es
in
pop
pop
mov
xlat
xchg
mov
jge
push
ret
push
aas
imul
cmp
ret
adc
push
push
add
es
testl
pusha
outsl
sbb
xchg
cmp
mov
push
or
sbb
add
jg,pt
pop
rcr
xor
mov
aam
pop
lds
lcall
mov
sbb
rolb
pop
mov
cld
sub
xchg
int3
jmp
ret
hlt
les
push
or
je
push
push
in
jns
insl
lahf
jp
push
adc
arpl
insb
adc
xor
std
adc
loopne
xorl
and
out
into
mov
jbe
outsb
jo
xchg
out
mov
push
jl
and
xlat
push
ret
rcrb
pop
and
fcoms
jmp
pop
mov
into
sti
aas
scas
xor
frstor
xchg
ss
loope
fcomps
into
js
aas
gs
add
and
xchg
loopne
cs
int3
xchg
inc
lret
push
mov
jecxz
fldcw
xchg
xchg
imul
push
dec
mov
aaa
loop
dec
loope
sbb
fcoml
mov
cmp
stos
mov
out
mov
lret
jp
ror
mov
and
icebp
dec
aam
mov
pop
shlb
xchg
test
add
and
xchg
pushf
pop
insl
lea
jno
dec
loopne
xor
adc
cmp
arpl
cmp
push
inc
in
sbb
adc
mov
loop
ss
xchg
imul
mov
xchg
adc
push
out
loope
add
mov
fucom
xlat
cmpb
add
sbb
sub
lcall
mov
test
outsl
outsb
adc
std
loope
in
and
pop
cltd
and
xchg
repz
jnp
scas
scas
pop
inc
xchg
xor
mov
xor
inc
sarb
mov
idivb
xchg
pop
jmp
xlat
cmc
push
push
rol
pop
movups
dec
scas
jle
sbb
dec
mov
xor
pop
or
sbb
mov
jnp
daa
or
mov
das
sbb
ret
push
push
jb
sub
sub
xchg
and
xchg
adc
ljmp
mov
andl
push
jg
mov
jge
pop
and
sarb
ds
adc
fadds
rcrl
shl
aas
push
movsl
stos
sub
sub
movsl
ret
sbb
call
pop
imul
mov
pop
pop
fisttpll
rclb
mov
rcrl
test
cmp
xchg
pmulhw
or
bound
rclb
mov
adc
pop
in
imull
ficoms
or
mov
subb
xchg
inc
xlat
cmp
mov
add
or
jae
mov
es
push
xor
cmp
xchg
push
insl
jae
xchg
cltd
mov
int
add
cmpl
fisttpll
and
push
push
inc
add
pop
push
and
test
pop
sbb
call
out
push
xor
aad
sub
dec
ret
sbb
in
mov
xchg
push
fs
scas
mov
xchg
xor
mov
cmp
sub
sbb
stos
int
test
xlat
and
xlat
out
int3
fisubrl
aas
xchg
jno
shll
adc
pop
testb
xchg
xchg
add
imul
fcmovbe
cmpsb
subl
scas
xchg
std
and
mov
push
mov
sar
sub
xchg
mov
pop
pop
dec
lahf
movsb
sub
jle
shrl
adc
pushf
nop
xlat
or
orl
jae
pop
and
xchg
sbb
mov
dec
addr16
adc
mov
out
jne
shrl
xor
fdiv
xor
xor
sbb
adc
imul
lock
adc
dec
movsl
xor
sub
push
imul
jle
sahf
repz
sbb
mov
cmpl
mov
movsl
stc
and
cmp
ljmp
push
push
or
sbb
imul
sub
sbb
int3
mov
adc
js
sbb
stc
je
xor
sub
mov
sub
mov
or
addr16
push
ds
in
jno
imul
shl
lock
adc
dec
jb
addr16
int
jecxz
ja
mov
or
stos
pusha
arpl
aas
rorl
cli
outsl
xchg
aam
cld
mov
jmp
pop
inc
xchg
add
mov
arpl
jge
es
jno
xchg
in
xlat
leave
jl
data16
inc
cmp
pop
and
pop
inc
pop
adc
dec
mov
push
gs
mov
mov
lret
in
out
hlt
adc
es
inc
call
push
ficomps
ja
repnz
cld
fnstenv
mov
lea
ds
pop
pop
insl
stos
adc
jnp
flds
xlat
aas
imul
jecxz
mov
xlat
pop
add
cltd
xchg
push
lcall
xor
add
call
push
pusha
mov
outsl
inc
in
xchg
hlt
stc
xchg
push
repz
sbb
lahf
rorb
jbe
add
jae
out
fwait
mov
xchg
jno
pusha
sub
icebp
pop
mov
sub
jbe
js
inc
aas
cli
pushf
dec
pop
sub
sub
lret
push
cmp
pop
cmpsl
pushf
movsl
subb
fldcw
cmpsl
mov
inc
sub
daa
sbb
jnp
roll
sub
or
push
std
jns
xchg
cmp
fisubl
xchg
testl
jno
jmp
or
jae
pop
loope
mov
out
cmp
bound
imul
popf
xchg
xchg
push
and
leave
or
add
outsl
add
sbb
stc
fsub
rcl
mov
mov
sarl
cmp
inc
mov
jg
adc
lahf
rcrl
test
push
insl
loopne
sbb
es
cmp
movsl
or
sar
rcrl
cmpsl
roll
int3
pop
mov
sbb
outsl
adc
push
mov
adc
cltd
ret
mov
pop
das
sub
inc
mov
push
int3
lods
xchg
cli
test
mov
mov
xor
arpl
jno
mov
dec
add
jne
lcall
aas
adc
lahf
jecxz
sbb
out
inc
sbb
mov
sbb
jo
xchg
shll
mov
push
mov
xchg
lods
out
pop
ret
rcll
jne
rcrl
in
test
out
sub
lret
lods
xchg
ret
js
inc
xlat
adc
bound
fsubs
ret
dec
les
in
mov
mov
cmc
mov
add
je
ficompl
in
xorb
cmp
in
push
sbb
rcr
subl
shrb
push
lock
mov
movsl
int3
jbe
inc
roll
dec
pusha
jae
pop
adc
sub
or
popf
je
pushl
pop
add
add
dec
jp
aad
inc
dec
add
rcll
nop
in
cmp
jmp
mov
arpl
outsb
mov
es
dec
nop
stos
mov
arpl
xchg
nop
aam
shll
addr16
xor
data16
popa
and
movsl
imul
aaa
cmp
mov
mov
sub
fwait
xchg
adc
mov
add
push
out
push
ljmp
inc
setne
pop
pop
ljmp
stc
dec
mull
nop
adc
pop
nop
mov
inc
leave
dec
fisttpl
fwait
cmpsb
outsb
sub
stos
lret
sub
stc
shll
hlt
and
pop
out
lock
xor
ret
mov
add
push
sub
push
cli
and
clc
or
into
dec
lock
add
lock
push
ficompl
mov
mul
and
xchg
cmp
xor
inc
lahf
pushf
in
push
ja
push
mov
jb
push
ljmp
pop
push
push
pop
dec
or
sbb
push
lcall
aas
jle
lcall
mov
lahf
repz
sub
pop
cmp
jnp
adc
mov
out
out
call
cltd
jge
ljmp
call
jne
in
inc
inc
cmpsl
divb
jno
add
push
lret
xchg
sub
je
vmovntps
dec
shl
loope
sbbb
call
inc
ds
cmp
and
call
divl
pop
flds
dec
xor
mov
push
outsl
lret
dec
and
jbe
adc
jl
dec
pop
int
sbb
movsl
loopne
fs
js
cmp
insl
mulb
lahf
push
aam
scas
push
loop
pop
pop
xor
das
or
sti
inc
lods
outsl
push
pop
les
imul
and
add
and
inc
cltd
call
and
rcl
push
in
push
scas
movsb
jns
dec
popa
leave
js
jnp
sub
scas
out
pop
aad
xchg
xchg
pop
int
mov
or
cwtl
jns
pushf
js
xorb
out
sar
ja
xor
sarl
xchg
mov
lock
or
xor
cwtl
and
mov
xchg
repnz
push
loop
gs
and
movsb
mov
lods
hlt
pop
jns
movsb
mov
mov
pop
jmp
or
jnp
mov
mov
pop
pop
scas
mov
aam
sub
adc
js
sub
stc
xchg
sub
lods
or
xchg
xor
lret
mov
push
cmp
dec
cmp
mov
dec
sub
adcb
fiadds
xlat
adcl
fldt
sti
in
mov
je
xorl
adc
sub
and
fs
testb
lds
pop
jg
mov
mov
les
cmp
and
mov
lahf
add
cmc
testl
out
lock
inc
cs
xchg
in
or
mov
pushf
scas
cs
inc
jl
adc
mov
mov
pop
ds
mov
popl
aam
lcall
in
inc
fidivl
jo
dec
and
fldt
inc
mov
mov
push
jbe
pop
pslld
imul
jle
movsb
xchg
repnz
fadd
mov
je
cmpsb
xchg
movsb
push
ds
pop
in
mov
ret
and
mov
std
xchg
into
mov
adc
movswl
add
stos
aad
dec
inc
mov
dec
pop
fwait
sti
outsb
mov
test
sbb
mov
std
cmp
mov
cld
movsl
sbb
inc
pop
loopne
fnstenv
dec
fildl
inc
cwtl
lea
insb
push
pusha
add
push
icebp
popa
mov
pop
mov
roll
das
xchg
insb
cltd
or
insb
add
adc
out
dec
pop
cmpsl
pop
sub
jp
and
in
cltd
lret
lods
mov
jmp
or
pop
xor
and
mov
ret
xchg
pop
rolb
int3
sub
js
jb
sub
adc
xlat
jmp
fsubp
xor
test
adc
cmpsb
mov
test
scas
cmp
jle
outsb
sbb
in
inc
and
add
mov
mov
cmp
outsl
mov
in
mov
negl
and
mov
dec
inc
cmpb
dec
push
sbb
inc
imul
lahf
sbb
cmpsb
cmc
push
jge
mov
push
repnz
jmp
push
shlb
push
imul
mov
test
loop
gs
shlb
xor
xchg
jmp
cmpsb
movsw
stc
jl
jg
std
add
push
mov
jp
sub
sbb
jnp
mov
mov
mov
movsb
mov
sbb
cltd
inc
aam
jbe
sbb
stc
out
add
mov
xlat
jp
mov
or
xor
lea
dec
cmpsl
ss
xor
sbb
inc
imul
arpl
xchg
add
mov
xchg
je
xchg
cli
sti
lahf
adc
pop
mov
neg
repnz
mov
or
orb
sahf
jmp
sahf
pop
insl
into
int
or
fxtract
fildll
dec
mov
gs
lcall
ret
xchg
push
add
adc
insb
es
mov
movsb
mov
inc
pop
je
mov
dec
fdivp
cmp
shrl
cmc
cmp
push
sti
popf
xchg
outsb
notl
aaa
cmp
mov
inc
mov
or
mov
mov
xchg
xor
jno
or
in
out
xor
shrb
jo
fimuls
pushf
pusha
sub
call
test
cmpsl
push
mov
or
adc
scas
loop
fldcw
iret
jne
mov
mov
out
fldl
testl
pop
fucomp
xor
pop
mov
xlat
mov
jecxz
add
jns
jge
xchg
pop
jge
cli
and
lret
fwait
mov
in
mov
mov
addb
cld
pop
xchg
xchg
rorb
xchg
push
leave
push
jmp
cmp
iret
in
or
enter
arpl
sbb
fldt
neg
push
faddl
adc
enter
sahf
pushf
adc
mov
mov
xlat
cmp
mov
in
sbb
jp
jp
xor
aaa
sahf
or
sub
jecxz
lret
xchg
xchg
mov
jb
push
push
ror
mov
jae
stc
fnsave
addb
sbb
andl
jg
or
add
fwait
aas
sbb
cmc
imul
dec
cmc
daa
ret
test
push
daa
sbb
or
lcall
je
inc
shll
mov
sub
cs
shll
mov
fwait
out
inc
cmp
sbb
mov
pushf
xchg
inc
jnp
or
mov
fwait
mov
and
xor
shlb
sahf
pop
inc
mov
cmp
arpl
cmp
inc
add
arpl
xlat
scas
jecxz
mov
dec
lcall
pop
fsubrl
mov
mov
push
xchg
sbb
jge
add
inc
je
jmp
lahf
mov
cmp
adc
insb
mov
or
mov
cmp
mov
mov
dec
dec
movsl
mov
movsl
mov
sti
xchg
push
mov
sub
mov
popf
les
mov
nop
idiv
adc
jnp
push
les
sub
and
mov
jo
pop
adc
and
fstpt
cmpsb
xlat
nop
mov
or
les
pop
pusha
lds
adc
pop
mov
pop
dec
xlat
mov
mov
dec
push
and
add
xchg
adc
lock
jae
movl
enter
fucomp
pop
rorb
cltd
push
call
xor
es
test
imul
pop
xor
add
xchg
bound
dec
lahf
sub
xchg
sub
out
fadds
add
add
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
cmp
mov
add
mov
