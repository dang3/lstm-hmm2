jne
mov
cmp
jne
and
mov
lea
push
lea
call
mov
test
pop
jne
mov
mov
call
xor
push
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
inc
push
push
lea
call
cmpl
pop
pop
jne
mov
lea
call
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
pushl
call
test
pop
je
mov
mov
push
pushl
push
call
mov
jmp
mov
mov
push
call
xor
ret
mov
pushl
mov
pushl
mov
push
call
movsbl
add
and
ret
push
mov
push
push
push
push
push
xor
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
mov
jne
push
lea
mov
call
mov
lea
push
push
mov
mov
call
mov
test
jne
testl
mov
lea
push
push
jne
call
mov
test
jne
mov
mov
push
pushl
push
call
mov
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
push
push
push
call
cmp
je
xor
jmp
call
jmp
mov
ret
int3
int3
cmpl
push
push
mov
jne
add
add
add
test
sbb
adc
add
test
je
push
push
xor
mov
mov
adc
sahf
pop
adc
xchg
inc
add
push
mov
call
pop
pop
mov
call
test
je
mov
mov
push
push
push
call
test
js
mov
cmp
je
test
jne
test
je
mov
mov
push
call
mov
test
mov
jne
test
je
mov
mov
push
call
pop
pop
ret
orb
jmp
mov
jmp
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmpl
jne
cmpl
jne
cmpb
jne
xor
pop
ret
mov
mov
mov
call
xor
pop
ret
sub
push
mov
push
push
mov
mov
push
mov
mov
test
movl
movl
mov
je
mov
mov
mov
mov
mov
lea
push
push
lea
call
mov
mov
add
test
jne
test
jne
test
jne
mov
mov
mov
push
call
mov
test
mov
jne
mov
push
call
add
push
mov
call
mov
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
cmpl
jbe
xor
mov
movl
lea
mov
push
push
call
push
mov
call
mov
add
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
lea
lea
cmp
je
lea
mov
jmp
lea
test
je
push
movl
movl
movl
call
mov
add
add
cmp
jne
mov
addl
mov
add
cmp
mov
jb
xor
pop
pop
pop
pop
add
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
mov
test
push
je
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
je
mov
lea
push
push
push
movl
call
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
cmp
je
cmp
je
xor
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
add
call
ret
int3
push
mov
push
mov
imul
xor
cmp
mov
jg
sub
js
push
mov
cmp
jge
movzwl
add
cmp
ja
cmp
jb
add
movzwl
shl
add
sub
jns
pop
pop
pop
ret
cmp
jb
cmp
ja
and
shl
lea
jmp
lea
cmp
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
push
mov
jne
test
jle
xor
jmp
lea
movzwl
cmp
ja
cmp
jb
add
cmp
jl
push
xor
cmp
setne
push
push
xor
add
mov
call
mov
push
mov
mov
call
mov
push
mov
mov
call
add
cmp
je
mov
or
shl
or
mov
shl
or
pop
pop
pop
mov
mov
pop
pop
ret
cmp
jb
cmp
jbe
add
cmp
jbe
pop
xor
pop
pop
ret
cmp
je
pop
xor
pop
pop
ret
mov
shl
or
mov
mov
shl
or
mov
shl
or
jmp
push
mov
and
mov
sub
push
xor
cmp
push
push
je
mov
push
lea
mov
call
mov
mov
mov
mov
lea
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
mov
lea
push
push
pushl
push
push
call
mov
test
je
mov
test
mov
je
mov
mov
push
call
mov
mov
call
mov
lea
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
cmpl
jne
mov
push
mov
push
mov
testb
push
je
mov
sub
je
push
call
add
add
mov
xor
pop
pop
pop
ret
mov
lea
lea
push
call
add
test
je
mov
movl
mov
push
lea
push
push
call
add
movb
mov
pop
pop
xor
pop
ret
mov
push
lea
mov
push
lea
jmp
push
call
pop
add
cmp
jne
pop
pop
ret
pushl
call
ret
mov
call
mov
ret
push
mov
push
push
decl
cmpl
jne
push
movl
lea
mov
push
mov
mov
add
shl
add
cmp
je
mov
jmp
mov
lea
call
mov
call
addl
cmp
jne
mov
push
push
push
push
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
lea
call
mov
call
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
push
andl
push
push
lea
call
mov
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
mov
pushl
push
call
lea
mov
call
mov
pop
leave
ret
mov
cmp
mov
je
cmp
je
sub
neg
sbb
not
and
mov
ret
mov
add
jmp
push
mov
cmpl
jne
pop
ret
mov
call
lea
add
xchg
add
add
sub
inc
add
add
pop
xchg
add
add
sbbl
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
andl
andl
lea
call
lea
call
lea
call
lea
call
push
lea
push
push
call
push
lea
push
push
call
add
mov
ret
int3
int3
sub
mov
push
push
xor
push
lea
lea
mov
movl
mov
mov
mov
call
mov
cmp
je
mov
lea
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
cmp
jne
push
lea
push
push
call
mov
add
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
mov
test
pop
jne
test
je
mov
push
call
add
mov
push
push
call
add
cmp
mov
jne
mov
mov
shr
and
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
cmp
je
mov
lea
xor
and
xor
lea
call
pop
pop
add
ret
mov
lea
push
movl
lea
movl
mov
mov
push
push
call
mov
mov
mov
push
push
push
call
jmp
mov
jmp
push
cmpl
jne
cmpl
je
mov
pop
ret
push
call
test
pop
je
call
mov
push
mov
call
call
test
jns
xor
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
push
push
jne
call
test
je
push
push
push
call
add
test
js
push
mov
mov
mov
call
cmp
pop
je
movl
mov
lea
call
cmp
je
push
lea
call
mov
mov
lea
push
pushl
push
push
call
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
mov
push
mov
add
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
lea
push
mov
mov
push
call
test
mov
jne
call
or
test
movl
mov
movl
je
or
or
movl
mov
movl
add
cmp
mov
leave
adc
add
je
lret
adc
mov
add
cmp
test
movl
mov
movl
jne
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
push
mov
mov
pop
push
mov
and
or
pop
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
or
pusha
loopne
adc
add
shr
adc
add
clc
xchg
mov
loopne
adc
add
enter
movl
mov
movl
mov
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
and
or
or
or
or
or
or
add
mov
add
and
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
leave
adc
add
add
add
sbb
lret
adc
add
lock
jecxz
adc
add
and
lret
adc
add
sbb
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
and
add
or
or
or
or
or
or
or
mov
mov
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sub
lret
adc
add
adc
mov
leave
adc
add
push
icebp
lret
adc
add
xor
out
adc
add
je
lret
adc
add
js
mov
leave
adc
add
cwtl
icebp
lret
adc
add
fs
adc
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
in
lret
adc
add
adc
mov
leave
adc
cmp
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
leave
adc
add
enter
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
jmp
jmp
lret
adc
add
push
mov
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
and
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
add
add
cmp
lret
adc
add
add
jmp
adc
add
pusha
test
jmp
adc
mov
leave
adc
add
test
lret
adc
add
cmp
in
leave
adc
add
test
lret
adc
add
sub
in
leave
adc
add
int3
test
in
leave
adc
xchg
mov
leave
adc
add
lock
in
leave
adc
xchg
mov
leave
adc
add
adc
lret
adc
add
pop
or
leave
adc
add
cmp
lret
adc
add
adc
in
leave
adc
add
add
lret
adc
add
je
mov
leave
adc
add
test
lret
adc
adc
movl
movl
mov
movl
movl
or
or
or
or
add
or
and
or
or
or
or
and
and
or
and
and
or
or
or
or
mov
push
mov
mov
mov
inc
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
add
and
lret
adc
adc
adc
add
xor
lret
adc
add
jl
mov
out
leave
adc
add
cmp
lret
adc
add
clc
cld
mov
icebp
leave
adc
add
inc
stc
lret
adc
add
enter
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
add
or
and
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
push
pop
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sbb
lret
adc
add
and
mov
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
movl
movl
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
movl
movl
add
test
mov
hlt
leave
adc
add
mov
lret
adc
add
cwtl
mov
hlt
leave
adc
add
cwtl
cld
lret
adc
add
mov
jl
leave
adc
add
cld
lret
adc
add
push
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
add
test
mov
cld
leave
adc
add
jo
int3
adc
add
cwtl
mov
cld
leave
adc
add
js
int3
adc
add
mov
in
cld
leave
adc
add
addb
std
leave
adc
mov
std
leave
adc
add
mov
sub
leave
adc
scas
inc
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
pushf
push
int3
adc
add
enter
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
adc
int3
adc
add
mov
mov
lret
add
sub
int3
adc
add
int3
in
mov
add
adc
add
dec
pop
int3
adc
add
pushf
in
mov
add
adc
add
push
pop
int3
adc
add
lods
in
mov
add
adc
add
pop
pop
int3
adc
add
mov
sbb
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
cwtl
mov
push
lret
add
js
int3
adc
add
nop
cltd
mov
add
in
lret
or
adc
add
sbbb
push
lret
add
nop
or
adc
add
add
mov
push
lret
add
cwtl
or
adc
add
mov
mov
pop
lret
cmp
or
or
or
or
and
or
or
or
or
or
or
or
add
and
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
lret
add
insb
or
adc
add
mov
mov
lret
add
je
int3
adc
add
dec
mov
lret
add
cwtl
or
adc
add
call
sbb
movl
movl
mov
movl
movl
mov
add
call
cmp
or
or
or
add
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
mov
movl
mov
mov
movl
movl
mov
add
les
int3
adc
add
insb
out
adc
adc
add
rorb
int3
adc
add
pop
out
adc
adc
add
fmuls
int3
adc
add
jl
mov
or
adc
add
loopne
int3
adc
add
mov
mov
or
adc
add
call
add
pushf
out
adc
adc
add
lock
adc
add
lods
out
adc
adc
add
clc
or
adc
add
int3
out
adc
adc
add
add
int3
adc
add
mov
sbb
movl
movl
mov
movl
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
sbb
int3
or
les
int3
adc
add
or
lock
call
or
adc
add
jo
mov
push
lret
add
orb
adc
add
nop
cmpl
add
nop
or
adc
add
clc
xchg
push
lret
add
mov
add
call
sbb
movl
movl
mov
movl
add
enter
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
mov
mov
movl
movl
mov
movl
call
xor
mov
add
ret
je
mov
lea
push
pushl
mov
push
call
add
inc
cmp
jl
xor
push
call
inc
cmp
pop
jl
call
push
push
call
movzbl
push
push
mov
call
movzbl
add
mov
movl
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
je
mov
js
mov
add
test
jne
lea
push
push
mov
movl
movl
movl
mov
movw
mov
call
lea
push
lea
mov
movl
call
add
push
lea
mov
call
test
je
test
je
mov
mov
lea
mov
test
jne
test
jne
test
je
mov
cmp
je
cmp
je
mov
mov
add
push
add
add
add
rcrb
and
add
add
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
call
test
je
mov
mov
cmp
jne
mov
test
je
mov
mov
mov
lea
cmp
je
lea
movzwl
lea
cmp
movzwl
jbe
mov
add
add
cmp
jne
pop
pop
pop
pop
ret
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
jne
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
push
mov
mov
push
push
mov
mov
mov
xor
test
je
mov
add
test
jne
sub
je
mov
mov
mov
mov
mov
mov
push
call
test
je
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
and
or
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
push
call
lea
call
mov
mov
test
jne
test
jne
mov
push
push
call
add
test
je
mov
mov
push
push
call
add
test
je
pop
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
xor
movl
mov
movl
mov
cmp
push
push
je
lea
push
mov
mov
mov
mov
push
push
mov
call
mov
test
mov
je
mov
mov
lea
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
add
or
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
movl
orl
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
test
push
mov
je
mov
lea
push
push
push
mov
call
test
jns
mov
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
call
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
push
lea
and
xor
push
push
call
add
cmpl
mov
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
movzbl
mov
shl
xor
push
and
xor
lea
push
mov
mov
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
test
movzbl
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shr
mov
mov
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
cmpl
je
mov
lea
xor
and
xor
mov
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
mov
and
xor
call
lea
push
push
call
add
push
lea
call
test
je
movw
mov
test
mov
mov
pop
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shl
xor
xor
and
xor
mov
and
xor
test
je
mov
mov
lea
push
push
push
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
and
push
xor
mov
call
mov
test
mov
jne
test
je
mov
push
call
add
mov
test
jne
test
je
mov
push
call
add
pop
pop
add
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
je
push
mov
push
mov
push
push
push
call
inc
add
pop
pop
pop
ret
test
je
lea
push
push
mov
call
test
jns
mov
test
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
mov
movl
call
test
jne
mov
mov
call
test
jne
push
push
mov
call
pop
pop
pop
pop
ret
mov
cmp
mov
cmp
scas
inc
add
cmp
mov
mov
mov
add
push
call
pop
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
cmp
je
mov
cmp
jne
mov
call
cmp
jne
mov
call
test
jg
mov
call
cmp
jne
mov
call
test
jg
xor
pop
ret
mov
pop
ret
cmp
je
jmp
cmp
jne
mov
call
fmull
push
fstps
flds
fstps
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
push
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
mov
mov
mov
mov
mov
call
mov
addl
add
cmp
jne
mov
addl
mov
pop
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
test
push
jne
mov
test
je
cmpl
je
mov
pop
pop
ret
push
call
add
test
je
movl
movl
movl
mov
test
mov
je
mov
mov
push
call
mov
pop
pop
ret
mov
mov
call
test
je
push
mov
add
mov
mov
call
test
jne
pushl
mov
push
call
xor
pop
ret
push
mov
and
sub
push
push
mov
call
test
jne
and
mov
mov
lea
push
push
call
test
js
mov
test
je
andl
mov
lea
push
push
call
test
js
mov
mov
lea
push
push
call
cmpl
jb
mov
andl
mov
lea
push
push
call
mov
push
call
mov
pop
mov
test
mov
jne
cmp
je
lea
push
push
push
pushl
call
add
test
je
cmpl
jg
pushl
call
push
call
pop
pop
xor
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
mov
test
jne
cmpl
je
push
call
test
je
mov
mov
mov
test
je
cmpl
je
mov
test
jne
pop
mov
pop
ret
call
jmp
push
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
mov
movl
mov
push
xor
mov
mov
push
lea
lea
mov
mov
mov
movl
mov
mov
call
cmp
je
mov
mov
mov
lea
push
push
call
test
mov
js
cmp
je
lea
call
lea
call
lea
call
xor
mov
pop
pop
pop
pop
xor
call
inc
add
or
mov
push
lea
mov
lea
push
lea
mov
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
call
mov
mov
push
call
mov
push
lea
lea
movl
mov
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
jne
mov
call
lea
mov
mov
call
mov
push
lea
call
lea
shrb
add
push
lea
mov
call
test
js
mov
cmp
je
addl
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
lea
push
push
mov
call
cmp
jg
cmp
lahf
mov
mov
lea
push
mov
push
call
test
mov
js
cmp
je
mov
cmp
je
lea
push
mov
push
mov
mov
mov
push
push
mov
call
cmp
jne
lea
lea
push
push
mov
lea
mov
mov
movl
movl
mov
mov
call
add
push
lea
push
call
inc
add
add
add
out
cmp
test
jne
mov
mov
lea
push
mov
push
push
mov
call
cmp
mov
je
mov
push
mov
mov
call
mov
addl
mov
cmp
jge
addl
mov
call
inc
add
cmpl
jge
lea
mov
jmp
call
mov
mov
add
adc
cmp
jg
mov
jl
cmp
jbe
jmp
lea
call
mov
mov
push
push
call
add
lea
call
lea
call
lea
call
jmp
push
mov
lea
call
jmp
push
mov
lea
call
jmp
int3
push
mov
and
sub
fildl
lea
push
lea
fstpl
push
fildl
mov
fstpl
fildl
fstpl
fildl
fstpl
call
fldl
lea
fstpl
push
fldl
fstpl
fldl
fstpl
fldl
lea
push
fstpl
call
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
push
mov
mov
mov
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
cmp
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
clc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
mov
mov
mov
cmp
jne
movzbl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzbl
mov
mov
xor
mov
mov
jmp
lea
mov
movzbl
movzbl
lea
push
lea
call
mov
call
push
lea
mov
push
lea
push
call
mov
add
add
cmp
jl
pop
pop
mov
pop
pop
add
ret
int3
sub
mov
xor
mov
push
mov
mov
test
push
lea
jne
mov
call
lea
call
add
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
test
je
testl
je
push
call
add
mov
pop
pop
xor
call
add
ret
push
call
add
jmp
push
mov
mov
mov
push
call
add
jmp
push
mov
sub
cmpl
je
leave
ret
cmpb
jne
cmpl
je
push
push
lea
call
lea
mov
mov
call
mov
mov
mov
andl
andl
push
lea
mov
mov
movl
movl
call
mov
test
je
mov
test
mov
je
mov
lea
push
push
push
call
test
js
mov
xor
cmp
setne
inc
push
movzbl
push
call
pop
push
push
push
call
test
js
pop
pop
leave
ret
andl
jmp
push
mov
push
mov
push
xor
inc
cmpl
jne
testb
jne
xor
testb
je
pop
leave
ret
test
jne
mov
mov
mov
push
push
mov
lea
push
lea
mov
call
add
mov
neg
sbb
neg
call
mov
shl
xor
pop
and
xor
pop
jmp
mov
jmp
mov
andl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
add
push
je
mov
mov
mov
push
xor
call
mov
cmp
jne
xor
cmp
mov
jne
mov
mov
push
mov
lea
mov
mov
call
mov
cmp
je
mov
mov
push
push
mov
call
mov
mov
cmp
je
movl
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
cmp
je
mov
lea
push
push
mov
call
test
js
cmp
jne
cmp
je
cmp
je
cmp
je
add
xchg
adc
mov
dec
and
push
lea
push
lea
push
mov
movl
movl
mov
mov
mov
movl
mov
mov
adcb
jo
jl
je
jl
js
mov
mov
mov
push
push
call
mov
test
js
cmp
jne
cmp
jne
mov
mov
mov
push
push
call
cmp
mov
jne
mov
add
mov
push
lea
push
mov
push
push
call
mov
lea
movl
call
lea
call
mov
cmp
je
mov
mov
push
call
lea
call
cmp
jne
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
call
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
xor
push
lea
mov
call
mov
mov
mov
lea
push
push
call
test
js
push
lea
mov
mov
mov
mov
call
mov
cmp
mov
jne
mov
mov
mov
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
push
mov
lea
mov
mov
call
test
js
mov
mov
cmp
je
movl
cmp
lea
jne
xor
lea
lea
mov
test
je
mov
cmp
jge
mov
mov
mov
mov
mov
push
push
call
add
add
jmp
xor
mov
mov
mov
push
push
call
cmp
mov
mov
jne
jmp
lea
mov
test
je
mov
cmp
jge
mov
mov
mov
mov
mov
push
push
call
add
add
jmp
xor
lea
call
lea
call
lea
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
pop
pop
add
ret
xor
jmp
xor
jmp
push
mov
push
mov
push
push
push
push
call
mov
mov
mov
andl
andl
test
mov
mov
lea
mov
mov
je
mov
push
call
push
push
pop
mov
andl
push
lea
pop
mov
mov
call
push
push
pop
push
lea
pop
mov
call
test
pop
pop
mov
jne
mov
push
push
pop
push
lea
pop
call
push
lea
push
push
call
push
push
pop
push
lea
pop
mov
call
add
pop
pop
pop
mov
pop
ret
mov
pushl
mov
push
call
ret
push
mov
decl
mov
je
pop
ret
lea
movl
call
lea
call
push
call
pop
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpb
jne
push
push
push
mov
movzbl
mov
xor
cmp
jne
push
call
add
test
je
push
mov
call
mov
test
je
test
jne
add
mov
lea
call
mov
mov
lea
call
mov
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
call
mov
mov
test
movl
je
mov
mov
push
call
movb
movb
xor
pop
pop
pop
pop
ret
sub
cmp
ja
jmp
push
call
add
test
je
flds
push
push
fstps
mov
mov
call
lea
add
push
push
movl
movl
movl
call
flds
fstps
mov
jmp
push
call
add
test
je
push
push
mov
xor
mov
call
mov
mov
mov
mov
jmp
push
dec
scas
inc
add
test
je
mov
shl
sar
push
push
mov
push
push
xor
mov
call
inc
add
test
lock
mov
mov
mov
movzbl
xor
lea
and
xor
mov
mov
call
inc
add
mov
flds
fstps
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
arpl
cmp
xchg
cmp
shll
adc
and
mov
cmp
and
imul
cmp
cmpsb
daa
or
mov
cmp
push
cmp
popf
and
adc
and
adc
and
adc
daa
or
pop
and
cmp
enter
call
es
dec
es
sbb
or
test
cmp
mov
cmp
mov
cmp
lods
es
fldenv
cmp
or
cmp
mov
cmp
mov
cmp
out
and
mov
cmp
cmp
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
jge
cmp
int3
int3
int3
int3
int3
int3
int3
int3
movzbl
and
cmp
je
cmp
je
mov
movzwl
test
push
je
mov
lea
call
test
je
mov
mov
call
test
je
mov
mov
mov
add
mov
mov
mov
add
mov
mov
and
or
mov
pop
mov
ret
xor
ret
orb
xor
pop
ret
mov
and
cmp
jne
xor
inc
ret
push
mov
call
pop
ret
push
mov
sub
mov
push
push
push
mov
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
push
lea
lea
movl
mov
mov
mov
call
mov
lea
call
cmp
je
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
call
lea
mov
call
lea
call
pop
pop
mov
pop
leave
ret
push
mov
push
push
mov
mov
test
mov
je
mov
push
call
mov
test
je
mov
push
call
lea
call
mov
mov
mov
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
mov
mov
push
push
mov
mov
mov
xor
push
mov
lea
mov
call
mov
mov
call
cmp
mov
mov
ja
lea
call
mov
pop
pop
xor
xor
pop
call
leave
ret
mov
pushl
mov
call
mov
mov
mov
cmp
add
cmpl
jne
lea
push
pushl
lea
mov
mov
mov
mov
movl
mov
mov
mov
push
mov
call
mov
lea
push
pushl
lea
mov
mov
mov
push
mov
mov
movl
mov
call
lea
lea
call
test
je
lea
push
pushl
lea
mov
mov
mov
movl
mov
mov
mov
push
mov
call
lea
push
mov
call
test
je
add
mov
lea
call
mov
call
lea
call
mov
cmp
je
mov
cmp
mov
je
mov
push
call
mov
push
push
lea
push
push
lea
push
push
push
mov
call
add
lea
call
lea
call
lea
call
pushl
pushl
call
pushl
pushl
call
pushl
pushl
call
add
incl
mov
cmp
jae
jmp
push
mov
sub
push
push
mov
push
lea
xor
cmp
je
cmp
jne
mov
lea
push
mov
call
pushl
lea
call
cmp
je
mov
xor
cmp
je
lea
push
push
mov
mov
push
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
lea
call
mov
mov
call
cmp
je
lea
xor
call
lea
xor
movb
call
mov
xor
call
push
lea
call
cmpb
je
mov
and
and
push
lea
lea
movl
mov
call
mov
test
je
mov
lea
push
push
call
mov
mov
lea
call
xor
mov
push
mov
lea
mov
call
mov
lea
mov
call
pop
pop
pop
leave
ret
mov
push
mov
call
test
jne
push
xor
cmp
jne
push
mov
push
mov
call
test
jne
pop
pop
ret
mov
mov
push
mov
call
test
je
pushl
mov
mov
call
inc
jmp
pushl
push
call
pop
pop
pop
ret
sub
mov
xor
mov
mov
test
je
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
pop
mov
xor
call
add
ret
lea
mov
mov
lea
push
mov
mov
mov
movl
movl
movl
movw
mov
mov
push
push
call
cmpl
jne
mov
test
jne
test
je
jmp
mov
mov
add
mov
inc
add
xor
ret
push
push
mov
call
mov
push
push
call
pushl
mov
call
pop
ret
mov
call
cmp
jne
mov
call
test
jne
xor
inc
ret
mov
call
cmp
je
mov
call
test
jne
xor
ret
int3
int3
push
mov
and
sub
push
push
push
push
mov
mov
mov
test
jne
mov
push
push
call
mov
mov
call
mov
mov
mov
test
jne
mov
push
push
call
mov
mov
mov
call
test
jne
lea
cmpl
jne
movzbl
add
push
lea
call
call
test
je
movzbl
lea
push
lea
call
mov
call
cmp
je
call
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
mov
pop
pop
pop
pop
mov
pop
ret
mov
test
je
mov
jmp
mov
test
je
jmp
mov
movl
jmp
mov
mov
and
xor
or
jne
pop
xor
pop
pop
pop
mov
pop
ret
xor
jmp
mov
add
call
ret
push
mov
sub
mov
push
lea
push
push
pusha
push
call
mov
add
lock
clc
jbe
mov
cmc
sti
in
sahf
mov
popf
add
add
flds
add
add
add
push
add
add
add
add
ret
pop
mov
lds
aad
add
filds
add
out
movsl
add
add
add
add
nop
mov
add
add
in
add
pop
pop
call
add
mov
add
jnp
mov
xchg
add
push
mov
mov
push
lock
add
iret
movsl
mov
mov
xlat
mov
add
ficoms
push
push
ret
pusha
scas
mov
add
cmpsl
int3
pop
fiadds
add
add
shl
add
mov
rclb
repnz
popf
xchg
add
add
push
mov
xlat
push
sarl
add
push
mov
add
push
push
lea
push
call
add
filds
add
mov
xlat
ror
fwait
add
jl
xchg
xchg
aad
je
stos
add
add
add
add
data16
mov
stos
sti
add
ljmp
push
add
add
addb
cli
iret
sti
imul
push
push
add
pop
push
mov
leave
add
jae
scas
lahf
icebp
ret
les
inc
cld
add
add
popl
push
push
push
lea
push
push
push
push
call
mov
push
add
add
add
divl
add
cmc
in
imul
mov
add
int
out
pop
add
pop
add
pop
xchg
out
add
jecxz
add
stos
pop
jbe
mov
movl
fdivrs
cmpsl
mov
lea
add
cmpsl
add
add
xlat
arpl
out
cltd
add
pop
push
push
push
push
lea
push
push
lea
push
push
push
call
add
add
in
add
out
repnz
scas
push
add
mov
int3
mov
add
jne
add
les
vpackuswb
aad
add
in
add
add
nop
lods
xchg
push
mov
loope
add
in
push
lods
popa
mov
shlb
outsl
add
in
jns
add
jb
les
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
ljmp
add
add
add
out
add
hlt
rcrb
mov
shll
add
mov
push
mov
lock
fnstcw
movsl
add
add
out
nop
fistpll
add
xlat
add
push
jl
add
add
sti
lret
add
jne
mov
fwait
addb
aam
bound
pop
push
push
push
lea
push
lea
push
push
push
call
in
mov
addl
add
iret
xchg
add
add
jmp
filds
sarl
lcall
lock
add
mov
fidivs
add
roll
push
add
roll
data16
jge
adcb
xchg
add
mov
addw
pop
add
mov
add
pop
pop
js
add
faddl
roll
add
scas
add
xchg
push
mov
lea
pop
call
call
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
imul
fiaddl
roll
add
lret
imul
add
in
sti
imul
jl
mov
cli
sahf
test
add
add
jns
mov
add
cld
jmp
sahf
out
add
add
cmpsb
stc
mov
pushf
mov
add
add
jmp
add
stos
add
fmull
add
call
and
lea
push
push
push
push
push
push
call
cmc
popa
add
jp
cmpsl
fiadds
orl
sahf
pop
scas
add
add
add
test
idivb
add
roll
out
add
fs
add
test
add
nop
faddl
repnz
add
mov
test
ljmp
addl
cmc
add
add
sti
mov
add
rolb
add
hlt
lea
pop
ret
push
lea
push
call
sarb
add
add
stos
popa
push
imul
add
jbe
int3
mov
mov
push
int
repnz
sti
add
lret
int
fimull
test
push
lret
push
pop
int3
loopne
add
int
mov
lahf
divb
pusha
add
pop
push
add
add
gs
add
lds
jmpw
cld
lea
pop
mov
push
push
push
push
lea
push
call
pop
add
fldl
add
roll
movb
add
push
stc
rolb
add
test
xchg
shll
enter
jge
addb
add
mov
add
lock
add
jo
stc
addb
cmpl
imul
mov
test
push
add
bound
lret
add
ljmp
pop
mov
push
push
push
push
push
push
call
leave
add
add
add
xchg
add
out
add
add
ficomps
fs
add
mov
loope
lods
iret
xchg
add
aam
pop
lea
outsl
add
ret
testl
add
jbe
add
mov
test
js
rolb
xchg
cltd
add
stos
pop
movb
pop
loopne
les
mov
test
add
add
push
add
pop
std
mov
lea
pop
add
add
add
push
lea
push
push
push
push
call
add
mov
add
add
add
addb
add
add
xchg
xchg
add
mov
call
fs
addb
add
scas
fstps
aad
loop
add
mov
add
add
add
add
pop
in
add
add
shr
add
push
xchg
add
rolb
pop
add
pop
mov
push
push
push
push
call
fisubrs
test
stos
add
mov
add
xchg
xchg
outsl
iret
add
add
xchg
add
ficompl
test
add
pop
repnz
add
fildl
aad
add
add
lods
add
add
out
test
add
add
mov
mov
push
add
add
add
xchg
mov
fmuls
lea
pop
xor
push
push
lea
push
push
call
add
push
add
xchg
add
ja
mov
mov
rorb
add
add
fisubrl
aad
mov
test
flds
stos
jmp
add
cwtl
add
aam
stc
sti
add
sti
mov
insb
push
add
jnp
test
add
add
add
jecxz
lea
pop
gs
mov
sahf
add
pop
add
add
push
lea
push
push
lea
push
push
push
call
add
test
add
add
add
out
add
cld
add
arpl
out
fsubs
lea
mov
lods
mov
test
imul
jl
jo
add
push
outsl
rolb
imul
cltd
mov
pop
lods
test
xchg
add
add
add
push
add
mov
jnp
add
add
int3
lea
pop
call
mov
xor
push
push
xor
inc
push
and
add
rol
sub
shr
xor
shr
xor
pop
sub
pop
push
lea
push
lea
push
push
lea
push
push
push
call
mov
mov
aam
lods
jb
xchg
mov
add
add
xchg
add
mov
enter
xchg
add
add
add
mov
add
pop
jae
cmpsb
lret
add
add
add
add
add
add
cld
stc
ljmp
xchg
add
pop
pushl
push
push
push
push
lea
push
call
cmc
add
add
call
add
js
add
cmpl
outsl
add
add
ret
add
jle
loop
pop
xchg
add
add
add
add
add
add
iret
cld
push
add
mov
add
add
fwait
movsb
add
add
lahf
add
scas
jle
fmull
sub
add
push
lea
push
push
call
jmp
arpl
jle
mov
mov
add
testl
call
mov
add
test
jnp
cwtl
mov
mov
add
mul
add
add
in
mov
add
imul
mov
add
imul
mov
addl
add
pop
xchg
stos
push
mov
add
add
mov
lea
pop
mov
push
push
push
push
push
lea
push
push
call
jmp
add
lock
push
add
shlb
add
stc
popf
add
add
add
jmp
add
add
jnp
add
mov
add
add
pop
aad
test
hlt
imul
add
mov
cltd
cli
push
xchg
add
add
fidivrl
fistl
std
pop
add
mov
lea
pop
movl
lea
push
push
push
push
push
push
call
add
test
ljmp
add
add
outsl
pop
ljmp
clc
mov
gs
mov
pop
add
add
mov
add
into
arpl
movsl
add
add
mov
stos
add
mov
hlt
add
add
out
test
add
xchg
add
iret
mov
lea
pop
pushl
push
push
push
push
push
call
push
ja
popf
fldcw
scas
test
add
add
add
rcr
add
add
lcall
test
add
xchg
rcl
movl
test
add
mov
filds
fiadds
lahf
add
add
add
add
movsl
add
add
std
add
movsb
add
je
mov
out
add
rcr
mov
lea
pop
pushl
call
push
lea
push
push
push
call
add
insb
pop
stc
add
add
add
lods
add
add
add
mov
add
aad
add
movsl
loop
push
lret
mov
repnz
cli
jo
fstpl
nop
add
mov
lret
add
pusha
lea
add
ficoms
mov
stc
add
insb
add
xlat
add
int3
lea
pop
pushl
push
lea
push
push
call
add
add
in
pop
pop
ror
add
addr16
add
fldl
xlat
out
xchg
xchg
mov
outsl
add
jecxz
mov
jnp
fistpll
add
mov
pop
add
mov
add
in
add
add
xchg
addl
mov
insb
mov
add
add
loope
add
mov
fs
add
lock
lea
pop
pushl
call
push
push
rol
push
and
add
ror
ror
xor
sub
dec
lea
add
pop
lea
pop
push
push
push
push
push
push
push
push
call
jbe
incb
add
movsl
iret
hlt
addb
add
add
sahf
add
push
mov
loop
mov
add
push
add
clc
add
mov
pop
out
mov
add
add
add
std
add
test
loop
add
cmc
add
rolb
mov
addr16
xlat
test
shlb
add
push
mov
cmpsl
pushf
nop
arpl
pop
pushl
push
push
push
push
call
add
add
testl
arpl
add
clc
in
int3
movl
adcl
mov
fadds
add
add
add
jns
push
add
add
add
mov
add
rolb
add
add
incb
add
imul
mov
stc
add
jb
js
mov
lea
pop
call
push
push
push
sub
shr
push
and
add
xor
xor
add
sub
rol
pop
inc
sub
pop
push
lea
push
lea
push
push
push
push
lea
push
push
lea
push
call
mov
add
pop
add
popl
fildl
ja
add
loopne
mov
add
add
in
add
insb
add
mov
mov
icebp
add
add
fsubrl
mov
jecxz
stos
add
mov
add
mov
test
mov
add
lods
mov
mov
lea
pop
push
push
push
push
push
lea
push
call
out
add
stos
add
out
add
add
push
jmp
mov
add
add
add
pop
sahf
add
push
add
add
iret
clc
pushf
add
xchg
call
add
jmp
rcr
cwtl
into
add
out
stc
movsl
add
testl
pusha
add
filds
pop
mov
je
xchg
mov
add
addr16
push
call
mov
push
push
push
push
push
push
push
push
push
call
int
mov
add
mov
add
mov
add
out
outsl
add
jnp
xchg
add
xchg
push
fs
push
pop
arpl
lods
not
add
add
mov
icebp
lahf
add
add
add
movsb
test
jne
mov
add
fildl
add
jae
testl
add
mov
lea
pop
push
push
push
push
push
call
add
add
fnstcw
add
add
out
add
out
fcoms
mov
in
fisubl
popa
push
int
in
pop
add
cwtl
icebp
sarl
jmp
add
imul
neg
pop
cld
icebp
mov
fwait
out
add
loopne
jecxz
add
aam
cld
rolb
mov
pop
add
test
add
pusha
into
add
mov
mov
add
gs
lea
pop
mov
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
sahf
pop
leave
cltd
lcall
cli
mov
testl
add
cld
xchg
divb
pusha
add
les
add
cli
fcmovnb
add
imul
test
imul
fadds
add
adcb
mov
push
out
add
mov
add
add
add
mov
arpl
push
add
mov
lea
pop
add
push
lea
push
lea
push
push
lea
push
push
call
xchg
addr16
add
add
roll
call
add
fiaddl
add
push
xchg
mov
fwait
loope
jl
pushf
add
mov
add
add
into
mov
fmulp
lahf
scas
repnz
idivb
cli
mov
popf
add
add
mov
add
add
add
in
add
add
ljmp
in
sarb
add
lea
pop
add
push
push
push
push
call
gs
xchg
popf
add
mov
aad
popa
in
nop
add
js
outsl
pop
shl
stos
add
popa
out
push
lret
add
arpl
add
add
mov
xchg
xchg
movsb
jle
xchg
add
add
add
add
movsb
movsb
add
scas
roll
mov
push
popa
mov
lea
pop
add
push
push
push
push
push
call
add
pushf
stos
mov
fadds
arpl
add
mov
popf
scas
sbbw
mov
xchg
sahf
add
add
add
push
mov
cmc
lahf
add
xchg
mov
add
roll
add
fsubl
mov
cmpb
movsb
mov
add
add
add
mov
xchg
lcall
mov
xor
push
push
push
lea
push
call
mov
cmpsb
add
add
mov
test
xchg
add
mov
add
add
lea
or
lahf
cwtl
aad
mov
scas
mov
add
add
lret
nop
add
imul
fildl
add
xchg
add
lock
loope
addl
add
lcall
pop
fiadds
mov
movsl
add
pop
add
adc
jne
push
push
call
lock
imulb
push
add
add
in
fmulp
add
xorl
jns
imul
addr16
add
test
enter
movsb
imul
add
add
add
add
jne
cwtl
add
movsb
fstpt
cld
shl
add
hlt
mov
add
add
add
add
add
mov
lea
pop
push
mov
xor
push
push
push
push
push
push
push
call
fisubrl
xchg
mov
mov
mov
mov
xlat
add
push
add
into
xchg
loop
add
push
fsts
add
add
add
movsb
add
rcll
add
add
test
add
pop
mov
add
add
stc
mov
jmp
out
add
add
sbb
add
pop
mov
push
push
push
push
push
push
push
push
push
call
add
add
add
add
mov
imul
add
mov
add
in
add
add
test
adc
mov
arpl
add
jecxz
ljmp
std
add
aam
pop
push
add
add
mov
fldl
add
fs
xchg
cli
jecxz
add
add
push
add
repnz
mov
jmp
add
mov
and
or
push
lea
push
push
push
call
add
add
mov
add
push
in
add
pusha
push
cmc
fiaddl
divl
enter
add
add
jo
jne
pop
add
mov
add
add
add
add
ret
out
add
jecxz
add
mov
add
push
add
add
lea
pop
add
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
mov
enter
add
add
fbld
add
add
add
add
push
add
test
add
mov
add
add
test
push
in
fisttps
add
add
add
xlat
add
jmp
js
mov
mov
push
ret
add
js
clc
add
jle
fmull
push
push
call
jo
mov
add
pop
sarl
add
stc
fists
popa
xchg
imul
add
iret
loope
add
pop
test
add
add
test
push
add
add
lret
add
add
jl
fwait
pusha
in
add
loopne
add
rorb
add
add
jmp
rclb
add
push
jmp
mov
cld
add
jmp
test
jbe
fildl
mov
lea
pop
mov
xor
sub
push
push
push
push
lea
push
push
push
push
push
call
add
add
jmp
add
add
xchg
cmc
mov
add
mov
test
iret
add
add
add
add
jge
add
xlat
out
push
test
movl
std
movsb
add
jbe
shlb
jge
in
add
lock
adcb
lock
add
push
add
push
aad
mov
mov
push
mov
lea
pop
pop
rep
pop
push
rol
ror
add
pop
mov
add
push
dec
rol
pop
add
add
push
shr
pop
mov
push
push
push
push
push
push
push
push
push
push
call
mov
add
add
mov
add
add
add
lods
jl
cltd
xchg
add
leave
add
jns
mov
add
add
add
mov
add
add
lcall
xlat
jo
add
ljmp
add
les
out
loopne
add
add
jecxz
add
scas
add
mov
lea
pop
xor
push
push
push
push
push
call
add
call
test
add
add
add
pop
add
add
repnz
add
mov
add
xorl
add
stc
add
push
add
add
iret
aam
outsl
nop
add
imul
pop
xchg
mov
push
add
mov
addr16
jo
add
add
mov
lea
pop
add
push
lea
push
lea
push
push
push
push
call
add
add
push
add
test
add
in
test
popl
std
add
test
cld
add
push
fildll
mov
add
pop
add
jge
aad
out
jne
cli
nop
mov
int3
add
mull
mov
add
call
jo
add
mov
add
pop
add
add
xchg
icebp
into
add
testb
mov
fildl
outsl
mov
lea
pop
mov
push
push
push
push
lea
push
lea
push
push
push
push
push
call
sahf
mov
lds
mov
add
add
add
add
jne
mov
xchg
add
add
add
mov
hlt
lret
mov
jle
pop
mov
add
add
leave
fwait
pop
xchg
les
jnp
add
add
into
les
jl
add
sti
add
mov
out
fisubrs
rolb
xchg
insb
lods
mov
lea
pop
xor
push
push
lea
push
push
push
push
push
push
call
rolb
add
out
popf
xchg
push
add
add
add
add
add
repnz
add
add
cld
add
push
xlat
add
add
roll
add
add
pop
push
insb
pusha
add
add
roll
pusha
mov
int3
mov
add
pop
orl
push
push
push
push
call
mov
add
add
nop
repnz
fsubp
mov
addr16
test
out
add
add
lods
jns
xchg
mov
add
out
addb
jge
rolb
in
test
test
jecxz
add
int3
test
imul
mov
scas
ja
add
pop
mov
xor
add
push
push
call
jns
add
in
ret
lock
out
outsl
mov
ljmp
add
xchg
push
xchg
movsl
add
add
lahf
movl
jne
add
out
add
fadds
add
test
mov
add
add
scas
xchg
mov
cmpsb
add
add
mov
add
pop
mov
mov
jecxz
add
mov
lea
pop
add
mov
push
push
not
inc
not
push
xor
add
rol
sub
pop
sub
inc
sub
pop
push
add
sub
dec
pop
pushl
push
push
lea
push
push
call
loop
add
add
ror
xchg
add
pop
mov
xchg
add
sahf
cwtl
into
mov
cli
add
lret
add
add
add
movsl
add
fbstp
jbe
mov
mov
jne
xchg
mov
stc
add
jbe
rcrl
mov
mov
add
pop
call
push
lea
sub
lea
pop
push
push
push
add
push
sub
add
shl
sub
sub
shr
sub
ror
pop
lea
pop
push
push
push
lea
push
lea
push
push
push
push
call
mov
pop
les
mov
jl
add
nop
mov
shrb
shl
add
stos
jae
add
mov
gs
pop
out
pusha
add
jno
xlat
add
lods
add
add
stos
addr16
add
fs
add
loop
orb
aam
push
add
mov
aam
add
push
popa
sbb
push
call
push
lea
push
push
push
lea
push
push
lea
push
call
jle
out
add
add
add
push
mov
mov
add
fcoml
mov
scas
loopne
not
add
jb
add
cmpsb
in
add
lds
push
mov
add
add
loop
jmp
add
push
cld
mov
out
mov
xchg
mov
mov
aad
mov
lea
pop
mov
push
push
push
push
push
push
push
call
jno
bound
add
add
push
add
xchg
ja
add
add
into
jns
add
add
jne
add
gs
roll
jecxz
rcll
add
add
add
mov
mov
mov
enter
add
add
lret
loop
aad
call
std
add
mov
add
loopne
out
jge
mov
add
pop
mov
add
add
push
add
pop
add
mov
xor
push
pop
add
push
shr
shr
rol
pop
push
mov
push
push
push
push
push
call
roll
xchg
jbe
add
add
pop
lock
mov
add
lahf
mov
add
add
mov
add
mov
fnstsw
add
push
add
out
out
popf
xchg
in
push
add
jp
add
repnz
popa
add
add
add
ret
pusha
pop
mov
pop
mov
add
fistpll
into
repnz
jl
mov
lea
pop
xor
push
push
push
push
push
call
add
pop
out
mov
add
clc
pop
add
add
cmpsl
mov
loop
mov
add
out
lret
leave
add
mov
mov
mov
add
mul
xchg
mov
add
jbe
jmp
loopne
cmpsl
cltd
lcall
shl
jmp
outsl
sahf
mov
add
mov
lea
pop
add
push
add
rol
pop
add
pop
push
inc
lea
pop
mov
push
push
lea
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
add
mov
imul
mov
jmp
add
gs
xchg
add
ja
add
xchg
add
add
mov
pushf
jge
add
add
cld
pusha
test
test
loop
cld
enter
lahf
add
add
add
mov
cmpsb
rcll
fcmovnu
out
movsl
push
imul
fmull
or
push
lea
push
push
push
push
push
push
push
call
xchg
je
add
add
filds
add
add
lret
pop
addr16
add
add
shr
ljmp
jne
repnz
add
mov
add
mov
call
lret
add
int3
mov
mov
repnz
add
add
mov
jle
js
filds
test
into
mov
lea
pop
add
push
push
push
call
pusha
add
xchg
add
mov
xchg
shr
add
scas
notb
add
add
push
mov
add
add
add
add
add
xchg
jnp
add
mov
scas
add
add
test
add
pop
xchg
add
mov
lods
aad
pop
add
add
add
add
movsb
add
add
mov
lea
pop
rep
mov
push
push
push
push
push
call
mov
in
add
jmp
test
test
insb
lods
mov
test
lea
jl
fiaddl
add
mov
std
add
bound
ljmp
mov
cli
jb
add
add
cld
test
arpl
push
sahf
rolb
mov
add
call
add
jmp
lea
pop
xor
push
push
push
push
lea
push
lea
push
push
push
call
push
add
mov
mov
add
add
add
xlat
add
pop
mov
add
popa
lods
xchg
add
add
hlt
mov
add
add
lret
jnp
add
add
add
add
mov
jno
add
repnz
scas
add
mov
add
sub
rolb
clc
mov
add
add
add
sarl
add
pop
add
push
not
sub
pop
or
je
mov
xor
push
push
push
push
push
call
add
enter
scas
add
into
add
add
lds
add
in
lcall
out
lahf
ljmp
add
add
mov
notl
add
add
popf
cld
addb
add
in
add
push
gs
add
lds
jbe
hlt
in
mulb
jae
add
in
cwtl
gs
jb
flds
enter
mov
addr16
mov
xor
push
rol
add
pop
add
push
push
push
call
add
mov
add
add
add
aam
mov
popa
add
out
js
icebp
mov
add
add
add
ret
add
enter
add
add
jnp
fisubrl
test
add
xchg
add
add
add
add
add
pop
add
mov
imul
stos
jge
add
incb
mov
lea
pop
add
push
push
add
pop
mov
push
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
push
call
add
push
scas
lock
mov
icebp
pop
add
jmp
add
add
xchg
cltd
mov
xor
add
cmpsb
add
scas
add
add
stc
test
add
scas
imul
add
mov
shl
xchg
movl
push
add
jmp
push
aad
loope
in
pop
les
pop
adcb
mov
lea
pop
xor
push
push
push
push
push
push
push
call
add
test
idiv
add
movl
cld
arpl
push
mov
push
add
add
arpl
in
loope
movsl
hlt
mov
stos
xlat
add
fnsave
rolb
js
mov
add
add
pushf
lock
cmc
add
test
arpl
cld
push
fadd
cltd
in
mov
imul
call
lea
pop
add
push
shr
pop
add
pop
rep
push
add
pop
mov
push
push
push
push
push
push
push
push
push
call
mov
mov
push
roll
add
imul
jmp
add
push
fiaddl
insb
push
add
js
add
insb
out
mov
add
xchg
mov
fwait
cmpsl
movsb
out
mov
mov
mov
mov
les
mov
scas
add
lcall
add
ljmp
cld
in
pop
outsl
add
push
scas
jmp
cld
mov
lea
pop
xor
push
push
push
push
push
push
push
lea
push
call
movsb
mov
add
mov
fisubrs
mov
pop
rolb
lock
lret
jnp
lahf
bound
cli
add
add
cld
add
xchg
jmp
add
lods
add
pop
jge
lock
cmpsb
repnz
push
add
cmpsb
lods
add
push
add
scas
add
lock
add
data16
add
add
mov
lea
pop
add
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
imul
add
pop
add
add
jl
sti
int
popa
ljmp
clc
add
aad
xchg
call
sti
xlat
mov
pushf
pop
add
add
fiaddl
pop
cli
add
mov
pop
pop
add
rcr
mov
fistl
push
enter
jo
add
in
xchg
xchg
add
sahf
add
fs
mov
lea
pop
or
je
push
push
push
push
lea
push
call
jbe
mov
enter
add
mov
jmp
add
int3
add
pop
call
add
pop
aad
arpl
pop
mov
add
jl
add
test
xchg
fcmovbe
lds
add
add
xchg
add
add
pop
add
push
cwtl
xchg
add
add
hlt
add
std
divl
add
pop
add
cld
lea
pop
mov
push
push
push
lea
push
push
push
call
ljmp
pop
jnp
mov
pusha
push
jae
add
adcl
mov
stos
in
add
cmpsb
fiaddl
mov
add
mov
nop
add
out
add
jp
xchg
add
popa
add
fucomi
add
sahf
add
jo
mov
fadd
pop
jge
enter
mov
mov
pop
add
push
push
push
call
xchg
add
shl
add
add
fldl
in
imul
add
incb
insb
imul
lock
stos
pop
add
add
add
in
add
add
mov
cmpsl
add
loop
jp
add
mov
scas
roll
mov
mov
imul
test
mov
rcrb
jb
loop
hlt
lea
pop
add
push
push
lea
push
push
push
lea
push
push
push
push
push
call
push
add
in
add
add
push
ja
add
rcr
mov
add
rolb
add
mov
add
sti
add
add
add
jp
add
int3
into
push
outsl
outsl
ja
mov
xchg
fistl
jmp
add
add
test
fs
add
scas
mov
in
add
add
fsubl
mov
lea
cld
lea
pop
rep
pop
push
push
push
push
pop
add
add
lea
dec
sub
sub
shr
add
pop
rol
lea
pop
push
shl
pop
pop
mov
push
lea
push
push
push
lea
push
push
call
nop
stos
out
add
add
cmpsl
pop
out
mov
pop
ja
push
popf
jae
imul
out
push
add
fdivrl
test
fs
jmp
pop
push
add
cli
add
add
add
mov
test
add
jge
add
pop
add
add
ja
nop
jecxz
call
add
addl
hlt
lea
pop
mov
push
not
pop
mov
jmp
push
push
xor
pop
mov
push
push
lea
push
call
jno
add
add
int3
gs
test
add
add
mov
out
addl
fcomi
enter
jns
jnp
jp
fdivrp
mov
pop
mov
add
stc
in
pop
add
data16
mov
mov
fildl
stos
ror
add
mov
add
fiadds
addl
add
fmull
cld
push
push
push
push
push
call
mov
out
add
add
fucom
add
add
roll
les
add
cmpsb
nop
add
int3
test
xchg
mov
add
add
jne
jnp
add
rol
add
add
add
lahf
out
in
popf
xchg
addl
shr
xlat
loopne
add
lock
add
pop
push
push
push
add
add
pop
push
push
sub
add
pop
mov
pop
push
sub
pop
pop
pop
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
add
rolb
enter
add
popa
fdivr
movl
roll
add
fadds
add
movsl
pop
add
pushf
pusha
lret
mov
add
add
out
ja
add
add
jle
hlt
cltd
loop
add
jnp
shrb
add
imul
add
push
aam
bound
pop
pop
leave
push
push
push
push
push
call
push
add
add
roll
mov
add
add
cltd
pop
mov
add
loop
int
cli
add
incb
add
out
mov
rolb
pop
ljmp
mov
add
cwtl
add
jne
add
fisubrl
lret
xchg
add
add
add
add
lret
add
lods
aam
les
or
push
sub
add
not
pop
push
push
ror
inc
pop
mov
add
push
push
push
call
popa
add
test
add
push
add
xchg
nop
mov
add
rolb
cmpsb
in
ret
stos
add
loop
add
push
mov
ljmp
fcmovu
add
mov
fstl
fiaddl
mov
mov
add
add
cli
add
add
add
pop
pop
ljmp
add
mov
loope
add
add
add
cld
lea
pop
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
call
mov
pop
add
xchg
mov
add
add
adcl
lock
fildl
loope
add
push
pop
add
add
lret
push
mov
push
add
lock
ja
push
arpl
add
xchg
insb
shlb
icebp
addb
in
lods
roll
test
ljmp
test
mov
test
les
push
not
xor
dec
pop
movl
addl
push
inc
add
rol
pop
test
je
mov
pop
push
xor
shl
pop
pop
push
add
inc
dec
pop
pop
push
dec
lea
shr
pop
pop
push
lea
sub
pop
leave
ret
push
rol
shr
shr
shr
pop
push
mov
add
push
lea
ror
pop
push
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
jecxz
aam
movb
add
add
popa
pusha
add
enter
pusha
imul
lock
add
add
mov
mov
add
stc
fldl
fst
mov
add
test
mov
scas
nop
push
add
add
pop
lds
jl
lahf
mov
addb
xchg
popa
add
ja
mov
out
add
addb
add
mov
lea
pop
push
push
push
push
add
inc
shl
xor
pop
testl
push
push
push
call
xchg
popf
stc
add
add
pop
add
add
push
js
add
add
bound
mov
add
add
out
mov
ret
xchg
pop
popf
sahf
cmpb
pop
add
insb
add
add
add
add
add
fdivp
cli
mov
nop
cld
int
movsb
mov
add
shl
pop
mov
js
out
fmull
inc
or
push
push
shr
sub
pop
call
push
inc
add
pop
mov
push
dec
shl
ror
rol
pop
pushl
push
push
rol
lea
shl
pop
push
call
push
lea
shl
sub
pop
cmpl
jne
push
push
push
lea
push
push
call
cld
int3
push
add
add
xchg
insb
jmp
ja
add
add
roll
lret
out
cmc
jne
add
fstpl
add
mov
add
xchg
mov
add
add
pop
insb
data16
add
add
mov
add
pusha
fistpll
fs
mov
add
add
repnz
add
lea
pop
pop
push
push
lea
push
push
lea
push
call
add
movsl
add
pop
add
lret
add
sbb
in
call
rorb
add
jbe
add
rclb
fiaddl
add
add
add
add
test
pop
add
add
add
xchg
add
xchg
mul
add
filds
add
jae
fadd
cmpsb
add
aad
add
je
in
mov
test
cltd
mov
lea
pop
pop
push
push
call
movl
xchg
out
jbe
pusha
data16
test
test
add
mov
testb
loopne
in
fstl
in
cld
add
sti
adcb
xlat
repnz
arpl
bound
jne
mov
push
loop
jo
add
add
xchg
add
int
out
mov
jp
andl
test
add
aam
bound
pop
pop
pop
leave
push
sub
inc
sub
pop
ret
push
push
push
call
rolb
fiaddl
adc
jns
std
pop
add
lret
add
add
add
mov
jl
add
int
add
add
cmpsl
add
js
icebp
add
xchg
imul
xchg
push
add
stc
mov
fbld
add
add
add
push
add
add
add
fiaddl
repnz
ret
add
pusha
or
in
push
lea
push
lea
push
call
test
add
add
repnz
fnsave
add
add
ja
jb
add
add
in
xchg
mov
add
xchg
mov
mul
iret
add
popa
test
add
add
mov
xchg
add
add
add
cmpsl
pop
out
js
fildl
sti
fsts
add
pop
add
test
push
push
andb
ja
pop
je
les
cld
push
lea
push
push
push
lea
push
push
push
push
push
call
add
movsb
mov
add
add
add
icebp
push
idiv
add
add
pop
movsl
jb
add
jne
mov
sahf
pop
add
xchg
testb
icebp
lret
mov
scas
mov
addl
add
out
fldcw
pop
imul
add
enter
faddl
add
jbe
add
jb
cld
add
insb
lea
faddp
add
xchg
lea
pop
push
push
not
pop
push
push
sub
pop
push
push
rol
sub
add
lea
pop
push
push
sub
ror
shl
pop
movl
push
push
push
push
lea
push
call
arpl
add
add
movsb
add
add
enter
xchg
pop
add
add
add
add
jno
jnp
in
mov
mov
jmp
ret
add
mov
add
pusha
idivl
xchg
jno
in
jns
lods
add
xchg
out
mov
in
add
call
ficompl
lcall
popa
adc
xbegin
push
add
pop
call
push
dec
sub
ror
xor
pop
subl
push
push
lea
push
lea
push
push
lea
push
push
call
scas
nop
add
into
push
add
cmpsb
add
add
cltd
add
mov
out
roll
in
lods
add
add
out
into
fcmovnb
add
push
test
mov
rolb
add
out
insb
mov
pusha
popl
add
add
add
fwait
in
js
add
jmp
lcall
jl
in
out
jb
mov
lea
pop
cmpl
jne
pop
pop
push
push
push
call
cmpsl
fisubrs
stos
out
mov
imulb
pop
pop
jnp
fists
add
insb
std
icebp
add
mov
insb
test
add
xchg
add
out
add
test
imul
mov
add
fsts
push
mov
popa
add
add
add
scas
faddl
add
pop
mov
test
ljmp
aam
bound
pop
pop
push
add
rol
pop
leave
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
push
add
andb
bound
add
add
jno
add
add
lock
cmpsb
xchg
add
test
push
fists
add
add
enter
out
mov
add
xchg
push
xlat
mov
filds
push
std
add
mov
add
pusha
mov
cltd
cmpsl
mov
add
lock
in
add
add
lcall
jne
jns
scas
jne
scas
add
mov
lea
pop
ret
push
mov
push
sub
ror
pop
add
push
push
call
xlat
cld
scas
add
add
les
pusha
movsl
add
mov
mov
cmpsb
testb
shll
sarb
add
ficoms
add
add
cmpsl
pop
pop
xchg
arpl
lock
mov
add
add
add
mov
fs
cmpsl
add
jb
add
jns
mov
add
add
mov
lea
pop
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
mov
jnp
add
mov
mov
ret
add
loope
cmpsb
add
push
filds
cmpsb
add
bnd
rcrl
add
add
aam
add
icebp
jae
add
data16
add
push
insb
mov
lea
xchg
add
ljmp
mov
into
lret
add
cli
add
pop
push
add
xchg
pop
push
push
lea
sub
not
pop
push
mov
push
push
push
call
jb
pop
icebp
add
add
add
cwtl
add
in
pop
add
cmpsb
add
add
mov
add
add
add
lcall
xchg
add
mov
mov
cmpsb
add
movsl
add
add
add
add
add
test
mov
add
scas
cmp
cmpsl
mov
les
popa
or
lea
sub
push
push
lea
push
push
push
push
lea
push
call
aad
loop
fs
std
add
in
add
andb
add
add
add
add
add
test
loop
imul
add
xchg
add
xchg
ja
movl
pop
mov
pop
int
add
add
add
int
in
add
add
add
in
loopne
mov
lea
pop
mov
shr
push
push
lea
push
push
push
push
push
push
call
addr16
add
mov
add
jmp
add
movsl
cmpsb
in
add
mov
rclw
add
xchg
test
add
xchg
add
sbbl
arpl
pop
mov
add
add
arpl
push
out
mov
add
add
aad
lds
ja
jo
xchg
add
add
cmpsl
repnz
add
mov
lea
pop
add
push
shr
shr
sub
pop
mov
mov
add
push
add
pop
add
push
pop
mov
push
xor
shl
sub
pop
mov
push
inc
pop
cmp
jne
push
push
push
push
call
ficoml
mov
add
add
add
jbe
add
repnz
add
roll
out
imulb
in
add
add
in
add
add
xchg
sbbl
add
mov
addl
pop
pop
add
pop
pop
add
js
les
add
push
push
stos
add
js
jle
jb
test
add
mov
lea
pop
cmp
jne
mov
movl
push
push
lea
push
push
push
call
loop
loope
je
add
popf
add
bound
xchg
add
mov
xchg
jp
clc
add
fs
shlb
insb
pop
add
add
vxorps
add
push
push
jl
bnd
mov
mov
add
mov
test
out
test
jmp
imul
add
pop
jmp
mov
push
inc
sub
sub
pop
mov
push
add
add
sub
not
pop
sub
jne
push
lea
push
lea
push
lea
push
call
cld
addl
add
xchg
add
add
jl
add
add
add
add
add
fsubs
popf
add
cmc
add
ret
mov
addr16
xchg
movb
add
addl
add
lahf
xchg
add
add
roll
mov
jecxz
mov
pop
add
add
fisubl
je
fsubrl
popa
adc
inc
adc
add
add
jmp
push
push
lea
push
push
push
push
push
push
lea
push
call
mov
xchg
add
lock
jecxz
add
std
add
call
std
insb
jmp
add
jb
stos
addb
test
add
stos
add
int3
jbe
add
push
jno
add
ja
add
stos
jmp
add
jnp
add
fwait
test
add
add
add
pop
add
pop
mov
mov
cmp
jne
push
push
lea
push
push
push
push
push
push
push
call
nop
call
add
add
xchg
mov
add
testb
jp
roll
mov
add
xchg
fsubp
xchg
gs
rolb
xchg
add
add
add
cltd
pop
cmpsb
add
add
mov
add
add
add
cli
int3
imul
out
add
pop
mov
xchg
popl
push
pusha
and
mov
movl
push
rol
dec
not
rol
pop
jmp
mov
push
sub
not
pop
cmpw
jne
mov
movl
push
sub
inc
ror
pop
jmp
push
push
push
call
add
popl
xchg
add
cmc
imul
movsb
out
jns
push
add
add
jne
leave
call
lods
testb
rcl
xchg
add
std
stc
pop
add
clc
add
add
jl
add
fwait
popa
pusha
add
jns
movb
xchg
add
add
mov
add
add
shl
int
add
call
aad
iret
out
pop
add
hlt
lea
pop
pushl
pop
mov
push
lea
push
push
lea
push
push
push
call
add
add
xchg
scas
scas
arpl
add
push
add
pop
add
add
add
sahf
mov
fsts
jecxz
add
xchg
imul
mov
add
jp
in
out
out
adcl
add
mov
add
filds
add
add
add
add
aad
pop
lahf
add
pushf
add
andl
jno
into
jmp
test
mov
lea
pop
mov
mov
push
push
ror
inc
push
and
add
add
not
lea
sub
xor
add
pop
dec
xor
pop
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
xchg
add
cmpsl
pop
jno
cmpsl
add
add
add
mov
stc
add
add
test
add
jno
jne
loope
add
add
xchg
je
add
pop
jl
mov
add
push
imul
add
add
mov
lea
pop
push
call
push
shr
not
xor
shl
pop
cmpl
je
push
push
sub
shr
add
push
sub
add
add
dec
shl
add
sub
shr
add
pop
dec
lea
add
pop
push
push
ror
shr
pop
call
cmpl
je
push
push
push
or
inc
add
not
add
sub
sub
sub
sub
inc
pop
shl
pop
push
lea
push
call
add
add
sti
lret
mov
loop
data16
addl
mov
mov
in
add
add
add
add
add
ljmp
add
lds
clc
mov
add
add
mov
fldl
sarb
addb
test
addl
add
call
jb
xchg
push
mov
rolb
jle
mov
lea
pop
push
push
push
push
call
add
add
popf
add
xchg
nop
add
add
loopne
add
add
mov
ljmp
add
cli
cwtl
stos
add
mov
xchg
mov
cmpsl
fs
adcb
imul
cmc
add
les
add
add
add
imull
mov
lea
pop
call
push
shr
ror
pop
cmpl
je
push
push
ror
not
shr
shl
push
or
inc
add
shr
xor
sub
sub
not
pop
ror
sub
not
shl
pop
push
push
push
lea
push
push
lea
push
push
push
push
call
sti
add
popf
add
data16
mov
add
fistpl
into
popf
aad
add
loopne
add
rol
pop
add
lods
add
xchg
pop
add
add
addr16
adcl
lret
cmc
add
push
clc
xchg
add
add
xchg
add
in
mov
lods
mov
jo
int
fiadds
in
loopne
aam
bound
pop
call
cmpl
je
push
push
xor
rol
push
push
pop
add
add
shl
sub
dec
pop
xor
add
dec
add
pop
push
shr
dec
shl
pop
push
call
push
not
pop
cmpl
je
push
push
dec
xor
shr
push
or
not
add
add
shr
sub
sub
shl
rol
pop
add
ror
pop
push
sub
add
pop
push
call
push
sub
lea
xor
pop
cmpl
je
push
push
inc
xor
ror
push
push
pop
add
dec
sub
dec
dec
add
dec
pop
not
ror
pop
push
push
not
add
add
add
pop
call
cmpl
je
push
push
dec
push
xor
add
sub
sub
not
dec
pop
xor
add
pop
push
lea
push
push
push
lea
push
push
push
lea
push
push
push
call
ljmp
xchg
mov
hlt
xchg
fxch
xchg
clc
pop
xchg
in
gs
add
mov
lahf
mov
xchg
jbe
lret
add
add
lret
add
jl
mov
add
test
add
jle
lods
add
add
add
add
jae
mov
lock
mov
fs
outsl
push
rolb
push
testl
add
data16
call
cmpl
je
push
push
shl
not
rol
push
or
not
add
sub
shr
sub
pop
shr
pop
push
lea
push
push
lea
push
push
call
cmpb
add
add
add
add
loope
sti
xchg
add
cltd
jae
mov
add
mov
add
lahf
jne
sahf
data16
mov
mov
add
xchg
lods
add
cwtl
pop
add
ret
jmp
test
xchg
add
add
push
add
push
mov
add
add
add
add
add
fldcw
sahf
jb
add
out
mov
lea
pop
push
call
cmpl
je
push
push
xor
sub
shl
push
push
pop
add
shr
sub
pop
lea
sub
pop
push
push
push
push
call
pushf
add
fistl
pusha
rol
stos
pop
mov
add
push
mov
mov
mov
add
scas
test
add
movsl
addr16
mov
push
flds
add
add
test
fcmove
ffreep
lcall
lret
jns
loopne
add
xchg
xlat
movsl
test
leave
mov
and
add
add
test
xchg
int3
pop
nop
loopne
mov
data16
call
push
not
pop
cmpl
je
push
push
sub
push
sub
add
sub
sub
pop
inc
pop
push
push
add
ror
pop
call
push
lea
push
push
lea
push
push
push
push
lea
push
call
arpl
jnp
out
add
roll
sbbl
add
mov
jbe
into
add
test
xchg
add
sbbl
stos
aad
cwtl
lock
loopne
mov
mov
jns
add
add
add
outsl
scas
popf
xchg
add
lahf
enter
add
add
xchg
rclb
add
iret
jns
add
add
and
js
xor
ret
test
add
add
sub
xor
add
shr
shl
add
sub
add
rol
add
pop
sub
pop
push
dec
shl
pop
push
push
ror
dec
pop
call
cmpl
je
push
push
not
push
and
add
ror
shl
ror
sub
sub
lea
pop
pop
push
push
push
push
call
roll
add
int
faddl
add
shl
add
mov
gs
add
xchg
mov
fisttpl
push
add
fldl
int3
jmp
add
add
out
mov
ret
jbe
add
add
mov
faddl
push
add
jmp
fsts
jno
lock
pop
mov
add
mov
xchg
mov
lea
pop
push
push
ror
xor
pop
call
push
inc
xor
sub
add
pop
cmpl
jne
mov
push
push
lea
push
push
push
call
add
mov
rolb
ja
stc
in
add
pusha
leave
add
loope
add
add
add
sub
add
test
lods
pop
jl
add
addb
pusha
add
arpl
add
mov
add
stos
push
arpl
icebp
filds
sbbb
in
fldz
pop
mov
push
push
loope
push
movsb
xchg
xchg
add
add
add
add
repnz
add
add
pop
movl
jmp
push
push
lea
push
push
push
lea
push
push
call
fwait
add
loope
add
icebp
hlt
jns
add
add
test
push
movsb
xchg
sar
add
add
add
add
lret
pushf
add
movsl
mov
push
faddl
popf
push
add
xchg
sti
add
cli
jle
pop
add
ljmp
cltd
mov
add
test
add
add
push
shll
test
lea
pop
xor
push
add
pop
pop
pop
pop
push
push
push
call
mov
fldl
imul
add
add
scas
pop
mov
push
cmpsb
mov
mov
add
pop
add
jb
add
jbe
mov
jecxz
fs
iret
add
push
pop
add
add
scas
fisubrl
pop
add
out
out
add
jmp
cld
enter
call
add
andl
addb
fildll
call
mov
or
pop
push
add
not
shr
pop
leave
push
not
lea
pop
ret
push
shl
pop
push
push
push
lea
push
push
lea
push
lea
push
call
add
add
stos
pushf
cwtl
add
add
add
out
add
outsl
movsb
push
add
add
add
pop
mov
lret
out
pop
iret
stos
add
imul
mov
aad
mov
fiadds
add
mov
je
rolb
add
shl
add
cld
add
add
js
mov
add
add
mov
add
add
add
in
add
jnp
xchg
int
add
mov
lea
pop
mov
add
cmpl
jne
push
push
sub
sub
shl
push
xor
add
add
xor
sub
xor
inc
rol
pop
add
add
pop
push
rol
add
pop
pushl
push
push
call
add
mov
add
jmp
jmp
add
push
add
mov
mov
popf
add
add
ret
xchg
popl
mov
add
add
stos
add
popf
out
fwait
add
into
cltd
test
add
cli
fildl
test
je
add
add
add
mov
add
loopne
int3
lea
pop
call
push
add
pop
push
push
add
lea
pop
call
jmp
cmpl
je
push
push
call
mov
aam
imul
leave
scas
add
jb
xchg
add
push
add
mov
cwtl
int
add
filds
icebp
arpl
icebp
mov
ljmp
fs
add
arpl
int
hlt
add
ljmp
enter
mov
shlb
add
std
xchg
jl
add
fstl
add
aam
xchg
add
add
in
popa
jmp
leave
sbbl
sahf
mov
lea
pop
cmpl
jne
leave
add
push
lea
pop
pop
push
lea
push
lea
push
lea
push
lea
push
push
push
call
shll
jns
lahf
loope
pop
enter
add
addr16
movsl
xchg
add
add
in
insb
cld
js
add
repnz
pusha
add
icebp
add
mov
movsb
icebp
lret
stos
add
lret
xchg
add
add
int3
mov
mov
mov
into
arpl
push
add
hlt
lea
pop
pop
push
push
call
add
ljmp
ja
add
jb
xlat
add
fsubrp
pusha
pop
add
popf
lea
cwtl
pop
add
push
xchg
add
add
jle
movl
add
add
stos
jnp
pop
cmc
enter
in
jo
xchg
add
add
fcoml
movsb
add
aam
bound
pop
pop
push
shr
inc
shr
pop
pop
push
pop
leave
add
push
push
lea
push
push
push
push
lea
push
call
add
xorl
lods
addl
push
push
xchg
xchg
add
movb
lcall
push
add
addb
add
shlb
loop
popl
cmpsb
add
add
test
add
pushf
pop
add
pushf
add
les
movsb
xchg
xor
test
push
ljmp
pop
ret
jmp
push
push
lea
push
call
xchg
stos
lods
mov
cmpsb
mov
pushf
pusha
popf
fucomi
add
add
jecxz
add
xchg
mov
loopne
mov
push
test
add
add
roll
add
mov
imul
add
loope
in
add
ret
xlat
pop
bound
jnp
into
enter
cltd
sbb
fmull
jge
add
test
add
add
pop
adc
push
shr
push
or
not
add
lea
rol
shr
inc
sub
add
add
pop
xor
not
pop
push
shr
shl
pop
pushl
call
push
push
push
push
push
call
insb
add
add
orb
rcrl
add
mov
lods
add
cmc
add
mov
hlt
cmpsb
add
cltd
in
mov
movl
pop
ja
jmp
in
xchg
pop
mov
add
mov
fnstenv
out
sahf
filds
add
add
jo
jnp
add
add
xchg
push
add
mov
lea
pop
call
jmp
cmpl
jne
push
inc
sub
pop
mov
mov
jmp
push
push
push
call
lock
std
add
add
add
mov
mov
lcall
mov
lret
add
add
in
cld
push
flds
adcl
mov
lea
add
add
add
je
test
mov
xchg
add
add
xchg
add
je
add
movsb
jns
jae
jecxz
add
lret
add
ja
data16
push
mov
lea
pop
push
push
sub
xor
add
xor
pop
pop
dec
jne
push
ror
lea
pop
call
push
lea
push
push
push
lea
push
push
call
outsl
add
cld
jb
pop
notb
mov
cmpsb
subb
loope
std
add
hlt
add
xchg
add
cltd
add
faddl
ret
lock
mov
add
push
add
mov
imul
mov
jae
lret
test
push
mov
aam
bound
pop
jmp
push
sub
shr
pop
call
push
push
add
lea
sub
push
xor
add
ror
shl
sub
add
add
shl
not
pop
pop
push
push
lea
push
push
call
add
loope
cmpsb
add
loop
mov
jbe
lret
add
jae
jecxz
stos
add
add
stos
mov
add
out
pop
add
add
push
jmp
stc
add
xchg
mov
add
cli
mov
add
pop
mov
bound
add
add
pusha
je
mov
xchg
loope
pop
pushl
call
push
push
lea
push
push
push
push
push
push
push
lea
push
lea
push
call
add
pop
fldt
hlt
add
xchg
add
mov
add
or
insb
les
les
add
call
int
mov
add
and
mov
les
fmulp
fildl
cmpsl
shll
cmpsb
fwait
xchg
mov
imul
add
pop
call
mov
push
push
push
push
push
push
push
push
push
call
mov
ja
add
enter
mov
fisubrl
movsb
call
arpl
add
jl
add
shrb
pushf
add
add
insb
push
add
add
lock
add
ja
add
add
add
les
pop
int3
sbbl
rolb
fidivs
add
add
add
add
add
movsl
add
cltd
mov
lea
pop
lea
push
push
sub
inc
push
xor
add
dec
add
sub
sub
pop
add
dec
pop
push
lea
add
pop
pushl
call
push
push
push
lea
push
push
push
push
call
jae
pop
push
movsb
leave
jnp
clc
sbb
add
cwtl
jecxz
jb
hlt
add
mov
mov
add
test
rolb
pop
add
add
add
add
mov
out
icebp
fwait
add
loope
call
add
add
mov
test
push
jbe
add
test
lods
add
add
add
add
out
xchg
aam
stos
add
pop
push
push
push
call
jl
icebp
stos
into
xchg
mov
mov
mov
add
push
hlt
lret
add
repnz
add
add
in
add
mov
add
shrl
lahf
add
xchg
ret
add
mov
testl
pop
add
add
add
sti
xchg
add
add
add
lret
add
add
mov
lea
pop
call
push
push
xor
push
sub
add
sub
sub
dec
xor
shl
pop
shr
add
pop
push
sub
ror
pop
pushl
push
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
imul
add
push
js
add
cltd
mov
in
push
loop
clc
mov
add
add
add
add
add
data16
repnz
ret
add
add
movsl
test
jnp
rcrb
add
jo
add
mov
jge
lods
push
add
je
clc
out
cwtl
loope
cld
mov
test
int3
lea
pop
call
call
push
add
sub
pop
mov
push
push
push
push
push
call
int3
fadds
js
xchg
repnz
add
nop
rolb
add
bound
add
xchg
addr16
add
add
test
fucom
mov
jle
rol
add
jne
std
mov
add
xchg
add
mov
add
pop
jmp
add
add
fldl
rol
add
iret
add
jmp
movsl
add
push
mov
add
pop
add
add
pop
lea
push
push
push
sub
add
sub
ror
pop
sub
pop
pushl
push
push
push
call
pusha
add
push
add
jl
je
add
movl
jns
fcomip
add
data16
push
jne
cmpsl
add
lods
xchg
in
pusha
imul
out
out
jns
popf
add
loopne
add
roll
add
mov
flds
jmp
ret
jno
add
add
xchg
pop
test
fwait
add
jp
mov
sahf
icebp
add
fwait
xchg
mov
lea
pop
call
lea
push
push
dec
rol
lea
pop
push
push
shl
not
pop
push
pushl
push
push
add
push
xor
add
shr
ror
lea
sub
inc
shl
pop
sub
pop
push
add
shl
pop
push
call
push
push
rol
not
push
sub
add
ror
add
inc
sub
lea
add
pop
shr
pop
push
push
lea
push
call
cltd
add
test
add
push
add
cmc
scas
add
cli
hlt
insb
jae
fs
add
xchg
add
add
add
scas
add
mov
cmpsl
add
ja
add
mov
addl
fadd
icebp
add
jbe
shl
push
jmp
lds
mov
add
ficoms
imul
add
sub
aam
bound
pushl
call
push
sub
dec
shr
pop
push
push
push
lea
push
lea
push
push
lea
push
call
xorb
add
add
add
add
add
add
shll
add
std
mov
filds
in
add
add
pop
add
pop
add
jmp
popa
data16
add
call
add
xchg
mov
add
mov
add
mov
add
add
pop
call
push
push
ror
add
push
and
add
lea
sub
shl
add
ror
pop
add
not
pop
pushl
push
sub
pop
call
call
jmp
push
dec
dec
shl
pop
pushl
push
push
push
push
push
push
lea
push
push
push
call
add
add
cwtl
cmc
cmpsb
add
shl
add
jle
fildl
add
je
ret
add
loope
fwait
add
add
add
sahf
loop
xchg
add
lea
add
mov
add
sahf
fildll
add
add
add
add
in
add
scas
jge
loope
lea
in
cli
cli
mov
and
mov
push
pop
jmp
push
push
add
push
sub
add
add
sub
rol
pop
rol
pop
push
lea
xor
add
ror
pop
pushl
push
lea
push
push
call
ret
jmp
push
cld
clc
add
mov
xchg
fcoml
add
add
loopne
push
add
les
add
pop
pop
add
xlat
add
lcall
jmp
mov
add
xchg
add
mov
cltd
add
cli
in
mov
lea
bound
nop
lods
lret
add
add
add
mov
add
pop
xchg
call
lea
pop
call
push
not
add
pop
push
call
push
push
xor
xor
not
push
and
add
add
not
sub
sub
sub
inc
pop
ror
add
pop
push
sub
dec
sub
pop
pushl
call
push
push
push
push
push
lea
push
lea
push
push
push
push
push
call
push
add
add
js
add
std
add
movsb
add
add
add
pop
push
mov
add
xchg
push
add
stc
aad
mov
lods
lret
add
add
sahf
xlat
mov
add
lock
fistpll
jge
add
add
clc
out
add
add
ja
push
cltd
mov
rclb
pop
data16
mov
lea
pop
call
leave
add
push
lea
pop
pop
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
push
popl
add
fcomp
add
lods
add
leave
add
xchg
jge
jb
push
push
shrl
add
lock
roll
lcall
add
mov
cld
insb
add
je
add
popl
popf
mov
fs
out
roll
pop
add
scas
add
add
add
add
clc
add
mov
lea
pop
pop
pop
push
rol
pop
pop
leave
push
lea
push
push
push
push
push
push
push
call
mov
cmpsb
add
add
push
lret
out
add
flds
mov
add
add
mov
scas
push
add
add
push
jge
add
add
stos
add
add
add
ja
cmpsl
mov
mov
add
jnp
pop
mov
add
cld
iret
mov
sahf
std
mov
hlt
lea
pop
add
push
dec
inc
ror
pop
ret
leave
push
push
lea
push
push
call
pop
add
add
ljmp
jns
add
pop
hlt
add
stos
lock
ficoml
loope
fcmove
add
add
fildl
ja
in
out
add
jmp
mov
jb
pop
mov
add
mov
fsubr
mov
jle
push
add
add
mov
pop
add
add
jecxz
add
rcr
ja
add
adc
or
push
mov
push
not
pop
cmpl
jne
mov
push
push
push
push
push
lea
push
call
out
cltd
loope
cwtl
mov
jb
idivb
scas
xlat
add
js
jmp
xchg
add
pop
rolb
add
add
add
pop
jbe
add
in
jne
scas
mov
sti
ficoml
frstor
sti
je
pop
push
stos
xchg
popa
bound
pop
aad
movsl
test
pop
enter
add
add
jge
cld
mov
add
add
add
jo
in
jae
add
mov
sbb
or
add
push
xor
xor
sub
pop
mov
and
push
push
push
push
push
push
push
call
mov
push
mov
mov
xchg
test
add
cmpsb
mov
fdivp
add
cltd
sti
outsl
add
add
pop
mov
mov
add
push
add
testb
add
sahf
add
jns
push
incb
xlat
jp
add
mov
add
add
add
add
add
testl
add
add
cli
add
jns
nop
data16
add
lea
pop
xor
xor
push
push
push
push
push
push
push
call
mov
add
add
cli
mov
add
in
stc
ret
add
add
add
jae
add
fxch
insb
fistl
add
pop
add
add
add
in
mov
add
std
in
add
add
mov
scas
fnstenv
pushf
gs
out
push
xlat
pop
jecxz
add
lea
pop
add
push
add
pop
xor
push
push
lea
push
push
push
push
call
ja
test
add
push
add
add
mov
add
add
mov
add
fcmovnb
add
xchg
add
xchg
add
add
rclb
mov
mov
faddl
ret
shll
lea
filds
add
out
add
in
add
ficoms
lea
pop
dec
push
shr
pop
sub
jmp
sub
push
shl
rol
rol
add
pop
pushl
pop
sub
push
ror
pop
cmp
jne
push
push
push
push
lea
push
call
mov
flds
add
cli
fwait
fwait
add
mov
faddl
jne
fwait
add
data16
mov
add
shlb
add
add
cmpsl
mov
cmpsb
add
pop
pop
add
roll
add
outsl
mov
out
rolb
mov
mov
cli
loopne
sahf
mov
rolb
negl
lcall
outsl
add
pop
into
rclb
movsb
add
adc
mov
push
shl
pop
lea
push
not
shr
pop
sub
mov
shr
push
push
call
push
jmp
out
add
out
add
add
addl
add
in
shlb
sahf
add
xchg
mov
cmpsb
add
pop
movsb
add
pop
shlb
adcb
shlb
loope
scas
mov
enter
iret
cwtl
add
fbstp
out
mov
lea
pop
add
sub
push
push
push
push
push
push
push
push
push
call
add
pop
jo
add
ljmp
mov
sbbb
clc
add
add
test
lret
add
ret
add
add
add
jne
rolb
addl
enter
pop
scas
add
out
add
add
sahf
ja
push
insb
std
pop
test
mov
fiadds
out
iret
add
mov
mov
lea
pop
pushl
pop
push
xor
pop
shr
and
push
dec
sub
inc
pop
sub
cmp
jne
push
shr
dec
add
pop
leave
ret
push
push
push
push
push
lea
push
call
imul
add
jae
mov
aad
clc
cltd
mov
addl
add
add
test
add
pushf
hlt
pop
xchg
add
add
lds
add
add
divb
jb
mov
std
add
add
jne
add
sahf
jae
jo
xchg
rolb
add
add
push
mov
lea
pop
push
mov
add
push
sub
shr
pop
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
add
ljmp
in
leave
add
fcomi
pop
hlt
add
lock
mov
jmp
add
cltd
nop
jecxz
mov
int3
in
mov
xchg
pop
bound
add
add
push
add
out
loop
test
add
add
add
enter
add
add
lea
pop
push
push
push
push
xor
lea
pop
push
mov
push
lea
push
push
push
lea
push
push
call
xchg
ret
out
in
pop
add
xchg
xchg
push
in
mov
les
add
mov
add
add
add
add
std
add
xchg
add
add
jno
aam
lock
lea
pop
test
test
ljmp
sar
je
add
add
std
add
add
add
add
insb
mov
mov
js
clc
testb
lea
sub
push
push
push
push
call
flds
add
jbe
pop
jge
mov
add
out
addr16
add
xchg
jae
jecxz
add
imul
stos
fs
push
add
pop
shll
pop
add
flds
add
add
push
int3
add
lea
mov
add
cltd
mov
mov
add
sahf
int
add
stc
add
jl
add
fists
mov
add
fidivl
xchg
add
mov
add
int3
lea
pop
mov
shr
push
dec
add
pop
add
mov
push
push
call
mov
add
stos
sar
aam
fadds
add
add
add
xchg
add
add
cmpsb
mov
loop
cmpsb
add
add
lea
mov
std
pushf
imul
pop
shrb
pop
roll
add
imul
xchg
add
add
loopne
std
lcall
add
movsb
mov
lea
pop
add
push
push
push
push
push
push
push
push
lea
push
push
call
loopne
std
rol
add
mov
push
add
add
add
add
push
add
add
add
add
add
add
stos
add
xchg
add
jl
shlb
cmpsb
add
add
mov
add
mov
ljmp
addb
add
imul
rcrb
outsl
xchg
rorl
pop
mov
push
lea
push
lea
push
push
push
push
push
call
add
mov
aad
notl
ljmp
add
filds
add
repnz
iret
movl
pop
add
bound
outsl
add
add
add
scas
add
pop
iret
add
pop
push
add
cld
js
add
scas
pop
scas
mov
jge
add
addl
gs
cmpsb
push
add
mov
lea
pop
add
push
push
push
push
call
pushf
scas
add
jle
add
aad
int
scas
stos
add
mov
loop
jecxz
add
mov
add
lret
fildl
nop
jnp
xchg
mov
add
icebp
add
data16
add
add
add
mov
out
pop
add
mov
lahf
lods
add
add
ljmp
mov
add
mov
lea
pop
xor
push
xor
shl
add
xor
pop
mov
push
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
call
into
jecxz
mov
mov
leave
push
add
shll
add
cmpsl
imul
add
xchg
iret
mov
add
arpl
imul
cmc
jmp
xlat
scas
mov
popf
add
rolb
cwtl
insb
xchg
insb
add
add
pop
fildl
add
add
ja
xchg
jne
add
jb
add
mov
stos
addl
sahf
popl
fiaddl
mov
lea
pop
and
call
add
push
lea
sub
pop
cmp
je
push
lea
push
push
push
call
cli
test
stc
cltd
sti
rclb
push
add
mov
out
add
enter
aam
test
add
pop
jle
add
ficompl
push
sbbb
negl
fcmovnb
js
add
jb
add
add
js
popf
add
icebp
mov
ja
testb
add
push
sub
shr
inc
sub
pop
cmpl
jne
xor
push
push
push
push
push
push
push
call
add
add
mov
negl
out
add
add
mov
mov
loope
lock
add
lods
lea
call
xchg
pop
add
add
add
add
les
add
icebp
xchg
add
jb
add
js
add
incb
movsl
bound
add
add
xchg
test
pop
add
sbb
pop
push
add
add
shr
pop
pop
pop
pop
push
pop
pop
push
rol
sub
pop
leave
ret
mov
push
not
rol
pop
add
push
push
ror
lea
shr
pop
push
pop
push
push
push
push
lea
push
push
call
add
add
add
stos
lods
or
loop
add
lea
add
add
jp
xchg
scas
add
push
ret
lret
xchg
arpl
pusha
add
add
xchg
jmp
pop
add
lret
pop
pop
add
scas
add
add
fildl
fldl
push
add
add
pop
arpl
testl
add
pop
add
push
imul
lods
mov
lea
pop
pop
push
inc
xor
shl
pop
mov
push
push
sub
pop
call
push
pop
xor
pop
push
sub
pop
pop
pop
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
out
fldl
add
push
push
add
jp
imul
add
add
add
add
add
in
in
roll
add
add
cld
add
add
jae
add
scas
add
stc
add
jle
neg
add
add
xchg
rcrl
test
jecxz
add
scas
add
add
in
sti
cld
add
add
pop
pop
pop
push
lea
push
push
push
push
call
add
add
jae
mov
jne
add
lret
nop
add
push
mov
mov
add
pop
add
in
add
loopw
mov
cltd
mov
add
cmpsl
jb
clc
add
add
jge
add
jl
mov
jmp
xchg
cmpsb
add
add
cmc
addr16
push
shll
add
add
in
add
scas
test
mov
mov
lea
pop
leave
ret
push
push
push
call
cwtl
add
lock
scas
cli
add
gs
test
je
add
add
add
data16
lcall
cltd
test
add
jnp
scas
cmpsb
add
mov
add
fcmovb
add
hlt
pop
popa
xchg
xchg
add
add
fadds
add
fcoml
filds
mov
add
clc
add
jno
mov
pop
rcr
fmull
push
sub
shr
pop
mov
add
push
ror
lea
pop
push
push
push
push
shl
add
pop
push
push
not
sub
ror
pop
mov
push
pop
push
sub
pop
lea
sub
mov
push
push
push
lea
push
push
call
pop
fldl
add
add
call
jae
xchg
cmpl
pop
push
fcmovu
push
add
add
mov
mov
imul
add
add
cmc
add
add
js
add
jmp
imul
cmc
bound
js
add
push
jmp
adc
cld
push
mov
lea
pop
shr
push
push
push
push
push
push
push
push
call
add
push
add
add
cmc
add
add
fnstcw
imul
fstpt
add
mov
ret
xchg
pop
ljmp
cwtl
mov
mov
add
add
add
push
add
testl
xchg
fstpl
add
add
lock
loope
popf
mov
lea
pop
add
mov
push
push
push
push
push
push
push
push
lea
push
lea
push
call
cmc
xchg
pop
mov
mov
add
fcmovnb
pop
mov
xchg
cmpsb
out
push
mov
jno
arpl
add
movsl
mov
jae
test
enter
in
mov
push
add
rolb
add
gs
subb
add
mov
add
out
jle
add
add
add
add
jbe
add
add
jp
arpl
add
sub
fcos
jae
push
add
sub
dec
pop
popl
mov
push
lea
add
pop
add
xor
push
add
not
xor
pop
lea
push
lea
push
push
push
lea
push
call
mov
fildl
outsl
jno
add
cmc
add
mov
add
pop
add
add
roll
add
add
mov
test
add
add
cld
aad
pop
stc
roll
test
pop
add
mov
add
outsl
add
add
mov
test
les
adc
shll
rclb
mov
rorl
call
push
lea
add
shr
pop
add
push
pop
nop
push
dec
sub
inc
pop
nop
cmp
je
push
lea
add
not
xor
pop
nop
nop
inc
push
push
push
lea
push
push
push
call
add
push
pop
add
clc
loope
add
add
hlt
scas
pop
mov
add
xlat
fsubr
lods
xchg
add
add
xchg
sub
add
xchg
popf
add
add
push
jb
addw
pop
filds
fiaddl
add
add
mov
lea
add
stos
jns
lahf
xchg
add
fisubrl
add
add
add
add
out
add
call
lea
pop
nop
push
shl
sub
pop
nop
cmp
jb
xor
push
push
lea
push
push
push
lea
push
push
call
add
add
imul
add
test
leave
mov
mov
shlb
mov
sti
jb
lock
loopne
add
push
scas
add
add
lcall
pop
test
std
pop
add
add
shll
arpl
pushf
add
add
jle
add
scas
mov
add
jl
add
add
mov
imul
lea
pop
jmp
mov
add
push
ror
dec
pop
movzwl
push
push
push
push
push
push
lea
push
call
jno
je
mov
add
iret
in
out
mov
add
add
add
lret
popf
add
nop
pop
mov
popf
mov
add
pop
pop
cli
mov
jp
mov
fwait
leave
jb
lcall
jge
ja
in
mov
xchg
int
mov
push
mov
mov
push
outsl
add
mov
add
scas
test
push
pusha
mov
lea
pop
mov
add
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
mov
jne
add
popa
push
cmpl
mov
add
icebp
add
add
add
rorb
pop
lret
add
les
nop
out
add
mov
lahf
add
add
add
fs
add
add
in
ret
xchg
movsl
in
xchg
in
add
add
fiaddl
stos
push
nop
add
add
add
pop
mov
push
not
lea
pop
xor
push
add
rol
not
pop
xor
push
sub
not
lea
pop
shl
push
push
call
imulb
outsl
jle
add
add
add
mov
mov
lods
add
xchg
data16
in
add
add
xchg
movsb
jne
add
add
add
lcall
cmpb
roll
test
ljmp
push
cwtl
add
cltd
add
fdiv
pop
fldl
add
cli
xchg
add
add
pop
xor
shl
push
xor
pop
xor
shl
push
push
push
push
lea
push
push
lea
push
push
call
data16
jecxz
mov
pop
add
cmpsb
add
ret
add
lcall
loop
add
lds
mov
add
cld
add
add
add
les
push
mov
mov
jne
pop
add
add
add
lret
add
add
lcall
movsb
stos
addl
mov
mov
add
mov
lea
pop
xor
mov
push
xor
add
shr
pop
add
push
rol
not
rol
pop
pop
push
rol
pop
pop
pop
push
dec
pop
pop
push
rol
sub
ror
pop
leave
push
push
push
push
push
push
lea
push
push
push
call
add
add
add
call
arpl
add
jmp
add
mov
add
int
mov
fwait
xorb
pop
test
push
fidivs
cmpsl
push
add
add
jbe
subb
add
sti
cmc
jns
mov
in
jp
jecxz
fadds
add
pusha
popf
js
add
pop
ret
push
shl
dec
pop
push
mov
push
push
push
push
push
push
lea
push
push
push
call
int
arpl
add
add
ret
pop
lods
add
xchg
addr16
add
jbe
push
in
xchg
add
add
lock
push
add
jmp
fiadds
into
pop
jl
jno
add
jmp
pusha
popf
rcll
cmpsl
add
jp
cli
add
loop
add
add
out
mov
add
rcrb
nop
add
lock
add
add
sti
mov
lea
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
call
mov
add
fiadds
add
fadds
add
lods
fwait
xchg
push
pop
pusha
add
add
add
pop
out
out
add
cwtl
add
mov
lcall
stos
mov
add
add
xchg
mov
addl
add
mov
add
add
push
iret
add
jb
std
imul
test
xchg
add
add
xchg
lea
pop
push
push
push
push
push
push
lea
push
push
call
lods
add
cmpsb
mov
movb
add
mov
rcrl
std
movb
outsl
int
test
shrb
mov
pushf
xchg
add
add
int
xchg
cltd
add
jo
mov
insb
test
add
push
fdiv
add
add
push
add
fs
pop
in
je
std
add
add
je
in
addl
xchg
scas
xchg
pop
jns
int3
lea
pop
mov
push
push
push
push
push
push
call
mov
pop
add
pop
outsl
out
mov
jae
xchg
clc
xchg
arpl
add
ja
adc
add
hlt
lods
sahf
mov
scas
jo
mov
xchg
add
jle
add
loope
stos
xchg
call
loopne
loopne
cli
add
add
add
jno
imul
hlt
lea
pop
mov
push
push
call
add
pop
add
add
data16
add
pop
add
rcrb
add
mov
mov
fwait
lahf
jl
add
stc
xchg
add
add
lods
lods
lds
sahf
add
add
aad
aam
loope
incb
add
add
fcomps
add
add
lahf
add
add
jbe
test
xchg
add
xchg
data16
mov
lea
pop
mov
push
push
lea
push
push
push
call
add
imulb
jmp
add
add
stc
xorl
pop
mov
int
arpl
mov
push
add
add
add
std
add
add
add
pushf
xchg
nop
push
jnp
hlt
xchg
add
cmpsb
arpl
jo
add
std
push
pop
pop
add
jp
rolb
add
movl
xchg
add
add
jne
out
aad
scas
add
loop
cld
lea
pop
test
je
push
shl
sub
pop
mov
push
shr
sub
pop
test
je
push
pop
mov
push
not
pop
mov
push
push
push
call
add
repnz
lret
add
pop
push
enter
lds
add
mov
pop
in
shlb
add
add
ja
jbe
jo
add
mov
jne
mov
rolb
mov
push
add
enter
popf
shl
add
add
test
into
fiaddl
mov
add
sahf
push
roll
mov
xchg
arpl
mov
lea
pop
mov
push
push
push
lea
push
push
push
push
push
lea
push
push
call
add
jbe
shrb
sarb
xchg
add
add
mov
stos
add
ja
cltd
add
test
add
add
lret
movsb
mov
xchg
add
add
xchg
movb
push
mov
lret
jne
add
jb
add
mov
jle
lock
out
jbe
add
add
fimull
pop
inc
push
not
shr
pop
cmp
je
test
je
push
lea
push
push
lea
push
call
out
or
pop
mov
ficomps
mov
add
popf
add
mov
add
add
loopne
rclb
jmp
icebp
add
ljmp
jp
add
jnp
int3
add
add
mov
test
add
add
add
add
cld
lea
pop
mov
inc
cmp
je
push
push
push
push
push
lea
push
push
call
jno
pop
xchg
out
mov
add
jecxz
lods
add
sti
add
pop
mov
roll
add
cmc
mul
push
add
mov
add
rcrl
outsl
enter
pop
add
popa
lods
add
out
xchg
add
lret
push
add
add
roll
mov
stos
add
jnp
movsl
add
imul
xchg
add
lret
lea
pop
test
jne
push
sub
pop
xor
pop
push
push
push
call
out
add
fisubs
add
stos
cmpsl
scas
add
add
aad
add
fsubrp
push
popf
ljmp
sahf
jnp
roll
push
fldt
add
pop
cmpsl
cmc
add
mov
add
in
lcall
add
jbe
rol
les
pop
js
push
test
adcb
js
lret
pop
lea
pop
pop
push
push
push
push
lea
push
push
call
jge
mov
add
lock
add
add
lock
add
lds
testb
int3
in
scas
add
leave
js
xchg
mov
add
push
add
mov
iret
add
in
stos
add
xchg
jmp
loope
enter
add
add
add
pop
mov
lea
pop
pop
pop
leave
push
shr
pop
ret
push
sub
shl
sub
pop
mov
inc
push
sub
not
xor
sub
pop
cmp
jne
push
push
push
lea
push
push
lea
push
push
call
int
fidivrl
add
imulb
mov
mov
jecxz
gs
mov
mov
add
out
enter
out
add
xchg
add
movl
add
add
mov
stc
add
popa
add
jp
rclb
mov
test
jge
fnstsw
add
xchg
add
add
pop
lea
push
push
lea
push
push
push
lea
push
push
call
add
pop
nop
xchg
add
iret
fwait
add
push
add
add
loopne
mov
add
lods
lea
in
in
add
rcl
mov
test
mov
adcb
add
imul
mov
stos
mov
cmpsl
xchg
mov
add
lods
add
cltd
xchg
add
pop
mov
push
lea
push
call
cmc
jecxz
mov
add
add
add
xchg
bnd
insb
pop
roll
jns
jp
jl
pop
add
add
clc
add
addr16
jbe
into
add
add
add
mov
add
add
test
pop
rol
add
add
add
mov
mov
add
shlb
aam
bound
pop
test
je
mov
add
push
push
push
push
push
push
push
push
call
mov
lods
andb
shll
xchg
and
add
nop
add
mov
int
cli
mov
movsl
testl
cmpsl
stos
mull
add
add
add
add
movl
add
shl
add
adcb
data16
add
cmc
loope
test
lea
pop
cmp
jne
mov
push
sub
pop
test
je
mov
push
shr
shr
pop
add
push
add
lea
pop
cmp
je
push
push
push
lea
push
push
push
push
push
push
push
call
stos
shrb
jl
in
lret
jbe
add
in
fildll
xlat
mov
add
add
add
lds
add
test
add
mov
add
add
testl
push
call
add
add
add
hlt
mov
enter
mov
push
movl
add
add
stc
roll
mov
add
jp
add
out
mov
sub
jnp
pushl
rcrb
sub
add
add
lahf
add
je
jo
jmp
add
push
and
add
stos
imul
push
xlat
fiadds
add
add
jae
out
mov
add
push
mov
add
xchg
add
cld
push
pop
in
fwait
add
push
cmpsl
add
icebp
mov
add
int3
scas
pop
add
mov
add
roll
jmp
or
pop
pop
push
rol
pop
leave
push
push
push
push
call
lods
mov
add
pop
imul
sti
push
test
add
add
add
mov
add
mov
fcmove
jb
nop
xlat
xchg
insb
pop
loopne
add
add
add
call
xchg
add
lret
in
add
add
push
add
xchg
add
add
pusha
adc
or
push
push
call
add
add
add
lret
int3
add
pusha
push
add
pop
sti
add
addb
mov
imul
popa
jecxz
mov
mov
jnp
xchg
loope
roll
mov
mov
loop
add
cmc
call
add
add
push
movsb
push
movsl
data16
add
jnp
mov
lea
pop
lea
push
lea
push
push
push
push
push
call
lcall
out
movl
add
mov
test
add
pop
addb
cmpsl
mov
add
ret
add
add
test
push
fisubl
cmpsb
mov
mov
loope
aad
add
add
mov
pusha
sbbl
pop
out
add
add
int3
lea
pop
pop
push
dec
dec
pop
pop
pop
push
lea
push
call
cmpsl
lea
loopne
add
add
jl
add
jae
lret
imul
lahf
ljmp
add
cltd
xchg
add
add
jbe
add
cltd
add
pusha
mov
add
add
out
cli
add
cltd
jno
incb
mov
add
mov
add
mov
fimull
fcomi
add
pop
pop
leave
ret
push
push
push
push
push
push
push
push
push
call
xchg
add
add
jl
push
mov
leave
mov
fistpll
xchg
roll
addb
add
push
add
stos
add
stos
mov
sti
add
cwtl
mov
add
mov
push
push
add
cwtl
add
add
lret
add
mov
into
out
movsl
add
add
divl
mov
lea
pop
mov
pop
push
lea
pop
pop
pop
pop
push
pop
leave
ret
rol
push
push
lea
push
call
mov
add
add
iret
lret
jge
add
add
add
mov
add
testb
fisubs
add
push
movsl
add
int3
testb
add
andb
cmpsb
mov
add
add
add
cld
push
scas
add
add
icebp
add
xchg
mov
mov
hlt
lds
jo
mov
sbbb
pop
rol
xor
push
push
push
push
lea
push
push
call
fwait
push
popf
jns
pop
mov
pop
mov
mov
push
js
add
lods
cbtw
pop
fxch
mov
lds
add
rolb
mov
pusha
add
add
add
mov
jge
add
les
push
xchg
popf
in
in
fidivs
pop
add
pop
scas
out
add
add
add
jle
push
add
pop
inc
cmpb
jne
push
lea
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
lret
fidivrl
popf
mov
add
jmp
clc
add
push
mov
add
cltd
imul
cmpsl
add
mov
scas
jbe
subl
add
lea
add
mov
add
icebp
scas
add
loop
sahf
movsl
add
add
jge
add
pop
ret
hlt
nop
mov
sti
movsb
shll
sti
movsb
shll
sti
movsb
inc
mov
sti
ljmp
sti
movsb
loope
sti
loop
mov
sti
cmp
sti
movsb
shlb
sti
pop
int
jns
push
dec
ret
jg,pt
aam
jl
stc
inc
aas
jl
fs
fists
xchg
aad
aas
mov
sahf
sbb
mov
inc
test
xchg
xorb
scas
jb
js,pn
in
add
je
lahf
cld
fdivr
loop
add
stos
stc
stos
kaddb
daa
imul
jecxz
loopne
rorb
push
lods
lahf
cmp
cmp
and
out
jp
jae
adc
scas
or
fdivs
es
daa
xor
fs
inc
pop
jae
xor
hlt
jb
outsb
push
ds
cmc
add
cmpsl
mov
out
jp
mov
dec
sbb
xchg
lds
sbb
test
ds
icebp
and
sub
fwait
mov
pop
or
push
mov
ss
jecxz
add
cs
jo
lret
dec
insb
xchg
pop
dec
sbb
push
or
fnsave
out
mov
fistl
pop
pushf
mov
sub
popa
add
mov
add
pop
jb
fs
push
loop
stc
and
inc
jns
pop
adc
push
shrl
fs
mov
jae
rol
stos
jo
out
jb
cli
or
pop
sarb
movl
dec
mov
stc
lods
lods
push
gs
xchg
cmpsl
fdivrl
data16
pop
sub
std
sarb
lcall
jae
ss
in
adc
and
pop
push
ret
push
test
mov
push
inc
shrb
adc
mov
les
in
in
mov
rcl
lea
mov
ror
mov
dec
jmp
xchg
insb
sub
cltd
and
shrl
sbb
jmp
fcomi
dec
mov
ret
jp
dec
je
add
mov
push
lods
inc
cmp
lahf
mov
or
dec
cmpsb
shr
cmp
rcrl
outsl
or
sbb
and
imul
xor
mov
mov
mov
fsubl
mov
xchg
les
cmp
jmp
scas
rep
sahf
sbb
fcomps
mov
outsl
or
inc
test
sbb
pop
mov
orl
push
jns
push
or
shl
add
xlat
mov
scas
pop
inc
fdivrp
mov
iret
mov
roll
sbb
mov
clc
or
sub
arpl
rolb
int3
mov
rcll
in
sub
cmp
scas
xchg
imul
insl
xchg
fs
lcall
loopne
movsb
sub
lret
pop
dec
mov
dec
lret
mov
jmp
xchg
mov
jne
dec
popa
cmp
add
enter
mov
inc
sub
fs
jo
pop
xor
mov
push
aad
out
mov
mov
sub
inc
dec
push
lds
daa
loopne
or
xchg
orl
cmp
movaps
jo
jp
jmp
push
cmpsl
xchg
loopne
into
or
aaa
pop
cmc
adc
xchg
imul
adc
insb
lods
incb
or
les
cmp
push
lods
pop
xor
jle
lret
jg
mov
xchg
push
addl
xchg
and
imul
mov
aaa
and
xor
repnz
or
test
das
shll
loop
xor
hlt
adc
das
xchg
pop
xlat
mov
pop
shrb
cmp
xchg
push
ds
push
adc
xchg
sub
push
mov
cmp
cmp
andl
arpl
out
fdivl
mov
push
out
enter
popa
xor
sub
dec
and
mov
lret
out
gs
loop
mov
jne
cltd
popf
setge
and
loopne
andl
into
sbb
fwait
movsl
push
adc
sbb
add
push
sti
cmp
inc
es
inc
sub
inc
pop
xchg
jne
dec
jp
lds
lret
scas
or
pop
pop
imul
pop
cmpsb
jbe
subl
cmp
add
in
aas
je
inc
sub
movsl
aad
dec
sub
xchg
test
mov
nop
adc
sbb
or
sti
cld
jg
sti
inc
push
and
lods
jg
sub
push
push
jnp
test
inc
jmp
cmp
in
fwait
or
in
cmc
push
push
movb
stos
fidivrs
das
mov
sbb
mov
jns
push
add
lock
pop
and
mov
mov
out
push
add
outsl
cmpsb
mov
das
jns
insb
lret
aad
cmpsb
pusha
int
add
pop
fwait
pushf
mov
mov
jg
stos
das
inc
push
mov
out
aaa
lret
test
sbb
adc
xorb
cmpsl
sti
arpl
inc
cltd
mov
cli
mov
fcomi
sbb
push
std
push
std
add
mov
jae
cmc
jo
pop
shr
xchg
dec
cmc
sbb
popa
in
data16
xchg
xor
outsb
lea
xor
dec
mov
jnp
mov
inc
insl
or
jp
pop
arpl
movsl
inc
and
imul
and
popa
cwtl
mov
adc
stos
xchg
pop
and
dec
mov
jnp
popf
inc
add
xor
pushf
nop
fcom
std
cmp
sarl
pop
les
imul
daa
loopne
orb
pushl
insb
inc
or
scas
ret
addr16
sub
insl
mov
pop
push
clc
enter
sub
push
clc
mov
mov
outsb
xchg
stos
or
sbb
jne
sti
jne
sbb
jno
sub
mov
pop
xor
pushf
ss
insb
movsb
xchg
hlt
mov
popf
iret
push
mov
lret
xchg
mov
jne
pop
xchg
inc
jns
inc
shl
scas
xchg
sub
or
sub
xor
popa
jecxz
sub
enter
popf
jmp
inc
cli
push
test
xor
js
mov
jg
pop
pop
cmp
stc
pop
cmpsl
push
call
sub
inc
in
test
pusha
out
jg
cmpsb
mov
sbb
in
and
outsl
dec
hlt
jecxz
pop
add
cmpsb
inc
xchg
pop
sub
push
pop
add
mov
pop
jge
cs
scas
push
rcrl
cmpsl
aad
push
mov
mov
xchg
dec
fildl
adc
movsb
mov
sub
scas
enter
lock
arpl
aas
fbstp
jno
sbb
jnp
pop
lcall
dec
mov
movsb
inc
mov
or
dec
cltd
jl
out
rcrb
imul
mov
aad
and
mov
inc
fdivr
dec
push
imul
xchg
adc
push
mov
jp
push
out
sub
mov
daa
outsl
xchg
or
dec
fsubl
push
cmp
and
lock
pop
rsm
pop
mov
jno
jbe
int3
ret
leave
sbb
stos
jbe
sub
movsb
scas
hlt
pusha
cmp
sbb
rorb
pop
lret
rcl
rolb
test
xor
mov
test
pop
aaa
pop
insb
nop
fs
mov
push
mov
pop
and
mov
xchg
adc
jl
orl
dec
ljmp
dec
fstpt
pop
pop
jp
push
loop
daa
push
lcall
imul
sbb
call
scas
adc
xchg
mov
add
dec
test
jl
dec
mov
shrl
or
push
lahf
or
mov
int
push
mov
jl
jp
aad
jno
push
dec
sub
je
hlt
inc
mov
in
jecxz
mov
pop
pop
jb
push
sub
shr
mov
adc
cwtl
or
icebp
xor
lret
daa
sarb
dec
shrl
and
xchg
mov
shl
rcr
hlt
cmpsl
lock
loope
loopne
cmc
xchg
data16
mov
xchg
outsl
js
imul
xchg
insb
fistps
jns
sub
push
mov
jmp
inc
jecxz
add
ret
aas
jg
fwait
cmp
xchg
cmp
cmp
shll
xor
or
add
mul
jne
je
adc
sbb
jle
pop
scas
int
bound
sbb
pop
dec
imul
out
adc
and
fnsetpm(287
xchg
xor
xchg
jne
cld
and
and
pop
cmpsl
sub
aad
iret
add
pop
dec
mov
mov
fs
popa
cwtl
xchg
xor
out
mov
bound
sti
mov
mov
repnz
stos
or
jle
push
dec
jnp
imul
ss
andl
scas
into
ss
cld
xor
xchg
add
sbb
jmp
mov
and
mov
jmp
out
push
cmp
mov
dec
popf
stc
in
lret
out
aaa
andb
xlat
mov
mov
inc
cld
nop
test
mov
and
xor
imul
ret
jmp
loope
xchg
bswap
rolb
adc
fnstenv
push
xchg
cwtl
adc
aas
int
cmp
mov
push
add
sub
and
test
add
ret
jno
iret
imul
xchg
in
inc
out
outsl
push
mov
ljmp
mov
mov
sub
shl
rclb
push
mov
adc
ljmp
dec
xchg
xor
push
mov
in
pop
jle
dec
icebp
inc
pop
adc
push
movsb
imul
sub
das
das
sbb
imull
jmp
out
mov
or
fstl
push
add
mov
mul
int3
jl
jo
adc
mov
pusha
popa
js
push
ret
push
add
and
xchg
cmp
push
xchg
mov
inc
jbe
adc
add
cs
cmp
inc
cmpsl
mov
add
jae
daa
pop
mov
incl
mov
mov
aad
xchg
jne
cmp
aaa
adc
pop
data16
out
es
xchg
lods
fdivrp
mov
push
loop
dec
mov
adc
sbb
in
addr16
clc
mov
xchg
popf
stc
jmp
nop
xchg
das
repz
and
dec
mov
mov
test
stos
shll
lock
and
fadds
cmp
adc
fistl
xor
test
jo
out
push
cmp
push
adc
sbb
sbb
into
xorb
push
pop
fcmovnbe
push
cmp
sbb
pop
mov
add
pusha
jecxz
addr16
push
cmp
fsubrs
cmp
nop
nop
jecxz
adc
sbb
add
clc
or
ret
xchg
or
push
xor
adc
adc
sti
inc
cmp
insl
jl
stos
pop
stos
in
inc
sahf
sti
dec
out
mov
adc
int3
in
or
ljmp
xchg
rcrl
shl
movsb
xchg
repz
inc
in
movsl
push
daa
lret
inc
mov
push
inc
mov
pop
inc
rcrl
mov
gs
inc
push
addr16
js
sub
xchg
jbe,pn
lea
insb
xchg
ss
movsb
in
in
dec
imul
pop
inc
stos
ss
pop
push
and
mov
add
pop
lock
stos
ljmp
adc
js
sub
jecxz
inc
shrb
add
test
and
test
adc
scas
out
sbb
pop
lods
xor
test
push
adc
out
sbb
xchg
lods
rcl
andl
hlt
imul
pop
lock
loop
cmp
clc
andb
cmc
loope
cmp
adc
mov
xor
xchg
popa
outsl
rcrb
jbe
mov
mov
es
jp
jge
xor
lahf
sbb
stc
jno
into
cld
sti
mov
incb
daa
mov
xchg
mov
add
push
imul
cmp
mov
addb
repz
pop
mov
or
out
rcrl
pusha
dec
mov
jmp
mov
xor
sbb
dec
jg
into
xchg
popa
addr16
sub
cltd
adc
inc
pop
das
repnz
mov
scas
mov
xchg
testb
and
add
mov
inc
mov
dec
notl
das
sub
scas
ljmp
sbb
cltd
sarb
dec
mov
scas
adc
inc
pop
cmpsl
gs
push
mov
pop
pop
stos
or
xor
xor
fwait
mov
push
int3
lods
insl
dec
lcall
cs
jp
fwait
cmp
xor
int3
faddl
sbb
movl
adc
mov
adc
test
pop
insb
jnp
stos
dec
mov
repz
mov
outsl
rorl
xlat
push
mov
loop
fwait
inc
rorb
pop
mov
gs
dec
rolb
out
xor
inc
movsb
xor
cli
aad
lret
jmp
sub
push
out
shrb
cmp
push
xchg
jecxz
jle
xor
rol
push
subl
jp
stc
mov
dec
dec
dec
and
xchg
test
cli
inc
aad
xor
movsb
sahf
add
jne
pop
stos
shrb
inc
mov
test
dec
lods
jecxz
push
xchg
jne
lcall
xchg
test
dec
xchg
add
inc
xchg
popa
fidivrl
xor
mov
add
xorl
adc
repz
sbb
iret
loopne
mov
mov
jg
cmp
stc
ret
out
cmpsb
ficompl
daa
iret
push
in
adc
xor
hlt
aas
mov
js
inc
movsl
fstps
jno
stc
sbb
lods
dec
and
lea
mov
outsb
shl
fs
xor
aad
inc
gs
push
inc
lret
popf
sbb
orb
aam
dec
pop
aaa
xchg
jecxz
cmp
out
orl
rcll
in
push
lret
outsb
mov
test
repnz
inc
cmpsl
push
out
out
int3
dec
cmp
das
and
sbb
cmp
sbb
scas
jmp
leave
roll
sarl
add
or
xchg
aas
imul
pop
mov
out
roll
subl
ret
or
mov
cmpsb
or
inc
sub
pop
xchg
jmp
add
xor
push
or
lds
add
adc
xor
jmp
xchg
in
sbb
pop
fstpt
pop
xchg
and
es
ret
imul
mov
push
cmc
mov
cli
sarl
fcmovnu
fsubrl
out
ds
insb
test
inc
mov
loope
inc
mov
nop
xchg
test
in
cwtl
jbe
fnstsw
xor
or
mov
cmpsb
xchg
jns
pop
mov
and
imul
mov
shll
adc
sbbl
in
aas
sbb
hlt
fistps
jae,pn
cwtl
dec
and
les
cmp
fnstsw
pop
jo
jnp
xor
ja
stos
cmc
inc
lea
es
xchg
dec
push
xchg
lret
rcll
shll
mov
aad
mov
push
stos
mov
rorl
in
mov
inc
push
lret
lods
jno
into
push
int3
dec
in
pop
jo
fistps
sub
sub
int3
or
cmpsl
pop
cmp
sbb
aaa
lret
push
push
popf
nop
aas
das
jp
shl
xlat
pushf
pop
mov
dec
cmpsb
lahf
jnp
je
std
pop
and
and
out
xor
add
sbb
pusha
cmp
ds
fdivl
testb
stos
jae
aad
pop
cmp
loope
adc
sbb
push
fmull
adc
std
mov
mov
inc
divb
insl
sub
out
cltd
daa
fdivrl
mov
jmp
test
mov
xchg
fs
inc
xor
loop
arpl
stos
es
adc
lods
adc
mov
or
push
fmulp
repnz
cmp
nopl
and
or
shl
push
push
inc
mov
push
insb
repnz
push
je
jp
xor
jns
cmp
lds
xchg
dec
sub
js
int
lcall
insb
outsb
inc
push
sbb
cmp
push
push
jle
aam
bound
sbb
fnsave
mov
pop
jge
adc
jne
lret
or
sbb
cwtl
shll
cwtl
push
movsb
lods
enter
iret
mov
mov
and
ret
incb
mov
loopne
lods
loope
scas
mov
cltd
cmp
xor
dec
add
outsb
jecxz
gs
repz
push
out
mov
out
xchg
lock
fnstsw
stc
xor
repz
ret
mov
xor
stos
push
lcall
pusha
push
pop
scas
mov
xor
push
sub
xor
jnp
xchg
dec
mov
movsb
call
add
lret
pop
xchg
je
adc
mov
gs
sub
int3
test
add
outsl
xchg
js
shrl
pop
test
les
fs
addr16
jmp
mov
cmc
add
sbb
enter
ret
fcoml
inc
sahf
cld
aad
loop
notb
sbb
scas
int
cmp
cmp
loop
out
int3
dec
add
aad
icebp
push
scas
add
addr16
mov
mov
mov
and
lahf
out
imul
int3
sbb
mov
xor
fldl
out
mov
lret
lock
mov
ds
cmpsb
fstpt
out
daa
fmuls
dec
stos
es
cmpsb
in
orl
or
adc
and
subl
cmp
jl
and
jge
dec
mov
stos
pop
fisubrl
and
loop
mov
iret
lea
push
mov
outsb
jnp
xor
pop
inc
jne
push
sub
js
in
rcrb
sarb
cmp
sub
out
xor
cmpsl
fbld
lret
xor
ljmp
decl
cmc
pop
xchg
enter
iret
shll
into
insb
push
incb
sub
mov
push
out
mov
ja
dec
test
arpl
dec
inc
cmpsl
push
push
rorl
stos
cmp
cmp
xor
adc
push
jg
jbe
xlat
and
push
mov
sti
mov
pop
mov
jo,pn
lock
mov
mov
pusha
loop
or
adc
mov
ret
mov
sub
dec
pop
imul
cmp
dec
nop
lods
mov
jne
cmp
xor
js
popf
in
xchg
dec
test
inc
mov
inc
dec
into
out
add
dec
leave
cmp
mov
dec
fcomp
and
xor
je
sub
or
push
jns
cltd
aaa
mov
stos
or
out
fwait
imul
aas
push
adc
ljmp
sbb
arpl
or
adc
mov
mov
pop
je
inc
cmp
roll
cmp
or
call
pop
jae
out
orl
shlb
sbb
adc
push
iret
add
mov
cmp
outsl
or
cmpsb
xchg
cmp
inc
pop
in
mov
push
jne
xor
or
testb
out
icebp
mov
adc
aas
fs
jge
repnz
fstps
xchg
rcll
movsl
fcmovne
ss
jno
mov
movsl
mov
je
sub
lahf
and
aaa
stos
je
out
adc
inc
xchg
insl
push
mov
out
scas
fsub
into
jno
out
inc
orb
mov
xchg
pusha
scas
sbb
dec
mov
add
shlb
inc
decb
mov
out
popf
sub
int3
cmpsb
pop
addr16
pusha
lea
pushf
inc
push
jecxz
mov
cmpb
ja
sti
repz
and
jg
lcall
jbe
cwtl
imul
imul
fwait
pushf
adc
lods
inc
pop
or
incl
rorb
mov
pushf
test
dec
sbb
pop
add
fisttps
jp
jo
sub
jbe
outsl
jno
lcall
aas
outsl
pop
and
pop
mov
ja
add
movsl
mov
jns
std
sti
jno
or
or
xor
dec
lods
inc
sbb
call
add
sub
push
mov
jg
test
imul
outsl
mov
jmp
inc
stc
adc
inc
jmp
decl
xchg
cltd
jg
push
lock
dec
iret
std
lcall
cld
mov
lret
xchg
xchg
bound
sub
and
imul
insl
movsl
add
aam
scas
jge
je
xchg
jp
xlat
lock
inc
loope
and
xor
xchg
loopne
mov
add
mov
or
mov
sbb
xchg
xchg
stos
inc
rolb
cmp
js
mov
cmpsb
adc
xchg
xor
hlt
sub
sub
push
test
rcll
test
scas
cli
or
xor
push
dec
int3
and
inc
dec
and
xchg
gs
mov
and
cmp
arpl
data16
clc
rolb
xchg
dec
mov
out
jne
adc
outsb
fiadds
push
pop
ja
push
in
sahf
push
xor
fildl
mov
mov
sub
int3
mov
shr
les
and
fistps
pop
push
mov
fwait
push
lret
fildll
ret
int
jmp
pop
push
mov
call
xor
loopne
cltd
dec
iret
repnz
jno
xchg
sbb
out
js
inc
inc
int
insl
push
stos
lret
pop
add
lods
add
outsl
add
lahf
mov
add
mulb
sub
fldl
repz
hlt
mov
jl
sub
ds
jle
icebp
mov
clc
ljmp
dec
test
sub
testb
or
pop
shrl
or
daa
pop
test
pop
shlb
mov
cwtl
mov
or
ja
push
push
pusha
push
outsl
jp
ljmp
push
adc
sbb
push
sahf
inc
popa
in
jnp
xchg
add
in
mov
lret
xchg
push
push
inc
cmpsb
mov
jge
mov
aaa
mov
xchg
fcom
inc
adc
pop
and
outsb
ds
cmp
jne
pusha
jmp
notl
jle
shlb
sbb
xor
cmpsb
xor
sbb
movsl
sub
shll
movsb
lock
inc
jmp
jbe
mov
sahf
movsl
out
les
pop
push
or
shll
das
ja
push
cmp
jecxz
fisttpll
cs
aaa
lret
icebp
xchg
mov
jnp
cmp
xchg
jo
pop
outsl
cmpsb
sub
adc
adc
xlat
cld
popa
inc
mov
decl
es
mov
pop
mov
cmp
and
or
mov
jg
xlat
lods
pop
pusha
add
lcall
loopne
rorb
inc
cld
mov
std
mov
cmp
rclb
push
test
ja
shlb
testl
into
mov
movsb
cmp
pop
mov
mov
test
std
cwtl
mov
iret
scas
stos
sub
dec
pusha
adc
sbb
mov
aas
mov
movl
loopne
aam
xchg
popa
data16
pop
lods
fmuls
pop
enter
push
push
inc
imul
out
jmp
xchg
pusha
mov
mov
mov
pop
xor
jecxz
adc
xchg
mov
lahf
popa
je
pop
repz
inc
push
flds
jno
jle
dec
xchg
in
scas
aad
fcmovu
inc
loopne
and
outsl
insl
mov
lcall
push
scas
jge
movsl
add
cwtl
mov
cmp
jecxz
call
call
daa
mov
mov
adc
and
inc
sahf
pushf
pop
and
push
push
sbb
cmp
mov
sub
push
add
test
jp
push
shll
mov
dec
and
or
mov
arpl
dec
xchg
hlt
jecxz
in
psrld
mov
rorb
dec
jbe
jmp
lds
xchg
sub
or
dec
sub
popf
jo
mov
imul
ror
lods
dec
jecxz
cmp
mov
jnp
mov
inc
test
mov
rcrl
push
lock
lcall
or
mov
test
pop
jecxz
das
mov
mov
mov
add
add
adc
imul
adc
mov
popl
inc
popf
bound
xor
stos
xchg
push
inc
jp
adc
or
mov
aad
mov
and
xchg
mov
xchg
in
call
je
push
in
push
push
pop
cs
push
lods
cltd
fidivl
mov
out
or
gs
mov
mov
cmp
xchg
mov
shlb
in
sub
adc
imul
or
jno
das
add
xchg
cmp
imulb
mov
sub
jb
stos
cmp
fisubl
sub
pop
mov
out
xor
mov
inc
or
pop
mov
cmp
stc
adc
sbbb
push
jbe
sub
sarl
ds
jp
lock
mov
jg
and
flds
xchg
cmp
inc
mov
negb
mov
adcb
add
mov
or
cli
in
lcall
dec
rcrl
iret
jns
mov
inc
sub
pop
xor
xchg
cli
xor
mov
stos
pop
aam
popa
imul
test
mov
dec
sub
bound
push
push
cmpsb
aaa
inc
mov
out
inc
jl
or
out
imul
lds
insl
cs
push
into
mov
dec
loopne
out
xor
push
rol
movsl
push
mov
adc
rcrl
sbbb
inc
lock
sub
xchg
xchg
sbb
pop
adc
xlat
repz
mov
addr16
push
mov
imul
sbb
pop
loop
out
cli
or
mov
cld
int3
and
sbb
sbb
outsb
xlat
bound
inc
in
or
and
aad
push
inc
imul
lods
cmc
movl
lods
ror
cmpsl
idivb
dec
sub
mov
repz
sbb
addr16
jg
lret
inc
ljmp
decb
popf
mov
pushl
add
negb
loope
sti
xchg
lret
mov
cmp
cmc
int
pop
mov
sub
fwait
mov
sbb
js
inc
in
ja
fdivrs
leave
and
push
outsb
cltd
lret
jmp
xchg
arpl
int
andb
mov
mov
std
fldl
add
sub
dec
mov
cmc
push
enter
lcall
push
das
ljmp
mov
cs
jnp
movsl
push
dec
imul
adc
test
jle
adc
adc
les
pop
dec
and
daa
push
divl
je
adc
fwait
adc
ja
jmp
xchg
hlt
sub
cmp
movsl
xchg
lock
dec
roll
add
cltd
stc
fsubs
aaa
fs
aaa
xor
idivl
cmp
cmpb
ret
jl
aaa
pushf
fs
lods
mov
xchg
add
addl
test
mov
imulb
fistpl
mov
cmpsl
sar
cltd
xchg
pop
jo
push
pop
inc
xchg
mov
pop
and
sub
repnz
pop
and
hlt
lds
push
jecxz
or
inc
adc
daa
lds
stos
inc
inc
aad
je
aaa
dec
cmp
sub
sahf
daa
ss
popa
pop
fmuls
and
test
test
jne
test
mov
jge
mov
jne
test
ljmp
vpmacssdd
pop
ja
inc
arpl
push
pop
or
xchg
data16
sarb
in
daa
lds
and
cmpsl
push
xchg
pop
pop
out
sub
mov
cmp
adc
add
cmpsb
mov
iret
add
adc
ja
jl
repz
and
into
pop
fs
in
lods
add
xorb
dec
adc
jp
inc
into
push
lock
popa
pushw
adc
jl
out
nop
call
sarl
sbb
repnz
loopne
insb
sbb
pop
add
imul
dec
add
loopne
ss
cs
lret
cmp
fiaddl
loope
cmc
out
sbb
pushl
pop
mov
adc
test
lahf
mov
sbb
xchg
cmpsb
test
and
shll
jl
pop
inc
add
outsb
dec
sub
stc
jl,pn
sub
ficoml
push
mov
int
add
fmul
sbb
cli
mov
or
adc
stos
push
jp
xchg
xor
test
xchg
in
mov
stc
cmc
stc
mov
lods
sar
stos
jg
dec
lods
in
cmp
add
and
pop
mov
push
mov
jo
mov
fisttpl
pop
mov
in
pop
cmpsb
adc
mov
repz
jmp
xchg
xchg
ja
sbb
ja
jl
test
mov
aad
xor
lcall
outsb
sti
mov
mov
lahf
add
mov
xor
push
out
adc
int3
fisttpl
data16
cmp
lret
cmpl
rcrb
test
mov
pushf
cld
cmc
loope
or
movsl
add
sbb
mov
call
imul
fwait
cmp
inc
outsl
loop
sarb
pop
and
jo
push
inc
cmpsl
add
inc
cmpsb
push
scas
push
push
mov
pop
pop
ret
sub
movb
enter
fnstcw
cli
mov
fdivs
imul
in
dec
cmp
in
movsb
shll
dec
xor
in
add
popa
sub
bound
data16
push
out
dec
jae
jo
ret
lds
in
iret
pushf
cmp
push
push
inc
rcrb
adc
dec
jne
mov
imul
lahf
add
add
test
xor
adc
in
and
mov
mov
movsb
mov
lods
imul
insb
xchg
out
mov
js
fidivrl
mov
xorl
sbb
jl
and
enter
nop
mov
aas
mov
stos
fsts
mov
mov
cmp
ljmp
lods
icebp
mov
out
adc
pop
jb
arpl
or
lahf
jne
sar
and
out
mov
mov
pop
mov
dec
aam
add
mov
cmp
and
or
cmp
push
xchg
test
iret
fcompl
xor
or
addb
dec
lcall
ds
or
jbe
push
adc
and
cld
push
jb
xchg
and
mov
pop
xorb
test
rcr
mov
xor
daa
adc
jmp
sbb
outsl
dec
mov
sbb
push
fcmovnbe
adc
fst
arpl
pusha
pop
ffree
div
cmp
adc
fld1
orl
out
fnsave
pop
in
push
xor
lret
shrw
add
and
mov
add
cs
addr16
les
je
out
clc
ds
push
cs
mov
push
loop
mov
xchg
sar
ret
sub
orb
add
test
imul
mov
roll
test
jge
call
into
push
cmp
call
js
xor
js
cmc
insb
push
mov
xchg
or
daa
jae
ret
cmp
mov
pop
jge
add
push
pop
pop
mov
adc
dec
es
and
xchg
jne
mov
pop
xchg
sbb
sub
fwait
shr
adc
and
imul
ds
xchg
pop
dec
cmc
bts
data16
es
sarb
sti
mov
jecxz
push
mov
adc
insb
cs
jl
pop
mov
insl
pop
push
stos
pop
jmp
data16
adc
je
adc
fwait
jl
mov
dec
mov
cmpsl
jne
fs
and
sahf
lret
fidivl
aas
lret
mov
cmpb
stc
push
push
push
cmp
sbb
addr16
adc
in
ss
pop
jo
movsb
push
add
adcl
sub
jno
rcrb
lds
push
mov
aam
push
sbb
cmp
push
lock
pop
pop
push
push
sub
shll
inc
mov
or
mov
adc
xchg
hlt
ljmp
outsb
call
sbb
pop
sahf
pop
mov
je
mov
out
push
lahf
lea
sbb
jg
mov
aad
push
mov
div
push
cmc
int
ficoml
call
mov
push
inc
movsl
outsb
les
jmp
jecxz
loop
stos
sub
xchg
loop
sti
ror
sahf
out
imul
dec
mov
pop
or
mov
jns
sbb
fisubl
fisubs
pop
in
xor
cmp
pop
xchg
xchg
movsb
inc
jnp
xchg
stos
pop
int3
dec
in
xchg
push
fwait
adc
xchg
mov
jb
adc
pusha
xorb
dec
cmc
and
test
out
jno
mov
sahf
mov
pop
lret
inc
push
sarl
jo
roll
rol
leave
xor
imulb
mov
sub
aaa
in
xlat
xor
jbe,pn
jns
outsb
cld
stos
jg
dec
sar
outsl
add
inc
and
inc
or
lods
xchg
leave
pop
mov
jns
aas
lods
mov
mov
insl
cmpsb
rorl
mov
adc
jmp
fdiv
or
imul
sbb
jecxz
mov
xchg
xor
jns
xlat
or
fnstenv
fbld
popa
fidivs
lret
hlt
pushl
stc
shrb
stos
add
pop
xchg
jle
imul
add
out
sub
sbb
jecxz
mov
mov
mov
mov
in
mov
pop
xlat
jns
mov
repnz
lea
xor
add
xor
insb
jns
jne
push
cmpb
fmulp
in
inc
cmp
mov
out
lea
cmp
inc
jnp
mov
dec
in
nop
jecxz
sbb
test
lahf
es
bound
sub
xor
or
mov
insb
pusha
inc
stos
and
mov
push
aam
pop
roll
dec
sbb
jbe
xor
nop
and
adc
js
in
adc
andl
test
sahf
imul
dec
mov
inc
jno
stos
es
shrl
mov
push
pop
fidivrs
adc
nop
ror
ja
cmp
movsb
sbb
xchg
mov
cmpsb
cmp
lods
aad
inc
movsb
in
push
push
ds
inc
pop
mov
fdiv
inc
ss
xor
dec
es
push
sbb
pop
mov
jnp
scas
jnp
in
mov
pop
fisubrl
add
in
dec
nop
pushf
btc
xchg
cmpsl
mov
mov
pop
imulb
icebp
aas
cmc
mov
iret
ds
icebp
dec
test
mov
lahf
int3
inc
sti
push
mov
lahf
mov
ja
loopne
mov
cmp
out
lods
int
faddl
jae
jnp,pt
pop
jmp
push
sbb
xchg
mov
inc
mov
fisttpll
jno
add
add
cmc
sbb
xchg
xchg
lods
and
clc
xchg
mov
test
ja
lcall
xor
loopne
jmp
lds
jg
push
cmpsb
fisttpl
push
dec
in
sti
mov
mov
dec
xor
cmp
inc
cmp
sub
sub
xchg
shll
xor
jecxz
pushf
sub
shrb
shrl
cmp
jecxz
fwait
mov
movsl
loop
or
nop
ret
outsl
test
test
push
rol
out
jl
pop
stc
mov
andl
lret
mov
mov
sbb
or
pusha
pop
dec
fiaddl
es
push
repz
cld
mov
std
ja
les
pop
and
into
mov
sti
in
sbb
insl
sahf
mov
sub
arpl
cmp
jge
insb
xchg
sub
jp
xor
movsl
mov
inc
inc
loope
rcrb
mov
cltd
add
mov
push
sahf
pop
movl
adc
cmp
push
inc
xchg
mov
dec
hlt
imul
ret
mov
xor
sbb
and
adc
mov
xchg
es
pop
mov
stos
xor
aas
shll
sbb
inc
add
sbb
sti
fimuls
inc
mov
or
xor
sbb
cmp
and
jp
xlat
cltd
in
stc
cmp
mov
scas
enter
test
lcall
inc
or
and
lret
mov
mov
sbb
and
jmp
xchg
xlat
insw
inc
sbb
and
adc
cmpsb
jle
aam
int
sbb
outsb
pushf
in
and
push
and
mov
cmp
add
add
mov
add
push
jge
push
sarb
push
js
inc
mov
xchg
adc
inc
aad
cld
cmp
pop
cmp
jne
pop
inc
cmp
jle
ret
mov
mov
add
test
test
jp
aad
loop
jl
gs
addr16
sub
js
mov
mov
inc
das
mov
mov
mov
lods
xchg
hlt
cmpsl
in
stc
das
dec
fxch
xor
mov
adc
mov
push
pop
push
in
jmp
xchg
ret
and
loopne
jb
sub
popa
sbb
ds
stc
inc
cmp
lds
cld
cmp
mov
add
je
add
mov
out
jecxz
or
push
inc
or
sub
inc
xchg
popf
jne
rolb
rcrl
sbb
mov
dec
add
cltd
outsl
aaa
sub
leave
dec
xor
sbbl
imul
or
adc
insl
stc
and
inc
mov
xor
cmc
out
cmpsb
ja
jle
xor
sbbb
push
clc
add
out
repz
hlt
lods
push
inc
push
lea
mov
insl
in
xchg
fsub
mov
xor
inc
push
mov
rcpps
mov
shrb
xor
adc
add
add
mov
xor
mov
es
loop
lret
add
nop
xor
sbb
mov
fucom
aas
cwtl
cmpsb
sbb
push
dec
aaa
pop
jbe
and
test
jmp
fdivs
mov
jl
repnz
in
xchg
xor
cmpsl
icebp
clc
sbb
mov
inc
jmp
rorb
cld
and
dec
stos
sbb
cltd
jne
xchg
or
int
inc
fcmovbe
std
shll
adc
mov
subb
dec
pop
adc
mov
roll
imul
cmp
jl
mov
outsb
cmp
push
cmp
int3
lret
repz
xchg
push
lcall
lods
shr
add
push
sub
js
jno
inc
mov
sbb
shl
dec
mov
inc
in
test
adc
arpl
push
rol
out
nop
jne
pop
cmp
movsb
mov
out
test
cmp
rcll
orb
rcrl
pop
xchg
or
les
pop
fnstsw
pop
mov
dec
jno
sbb
mov
xor
xchg
cmp
push
mov
loope
adc
adc
mov
mov
mov
xchg
daa
xlat
mov
adc
scas
mov
pop
pop
pushf
mov
xchg
rclb
es
outsb
cmp
jle
sub
push
out
icebp
ja
in
jb
dec
in
iret
inc
xor
inc
jl
xor
inc
pop
lods
pop
in
xchg
sub
loopne
outsb
andb
jnp
cmp
iret
sarl
jg
xchg
pop
adc
call
data16
mov
sbb
sbb
dec
jno
push
data16
pop
movsb
adc
shll
xchg
jecxz
sub
aaa
add
mov
xor
test
inc
mov
fimull
das
xorl
insl
loop
shlb
enter
popa
mov
shlb
cmp
outsl
out
nop
test
mov
test
mov
in
mov
sbb
subb
mov
push
fimull
cmp
rclb
loop
add
xchg
outsb
scas
loopne
sarl
stos
push
push
add
inc
xor
jge
daa
clc
nop
cmc
pop
xchg
jb
xor
es
xor
mov
jge
mov
dec
test
cmp
ja
dec
andl
insl
popf
js
mov
lds
and
and
stos
not
scas
test
adc
and
repz
jbe
mov
adc
or
push
sub
popf
in
dec
aad
test
out
lcall
mov
push
std
insb
shlb
aas
outsb
cmp
or
push
movsl
int
xor
push
add
sbb
dec
mov
pushf
mov
fs
mov
sub
cmp
testl
iret
xchg
aaa
mov
sub
cltd
ret
inc
sbb
jbe
jbe,pt
shlb
movsb
outsb
shlb
push
mov
scas
cmp
adc
es
cmp
mov
out
not
jbe
je
scas
mov
leave
sbb
and
mov
push
fdivs
dec
dec
dec
adc
pop
ss
xchg
test
sub
pop
subb
jne
xchg
adc
in
cmp
in
inc
clc
push
push
leave
bound
std
in
add
xchg
int3
xor
push
into
movsl
test
sub
mov
fadd
fnstcw
shl
dec
jle
lods
icebp
fdiv
fstpl
mov
jo
lea
adc
scas
int
out
sti
pop
call
pushf
dec
sbb
xchg
not
jecxz
dec
sbb
adcl
mov
shll
jbe
in
ljmp
movsb
mull
sub
mov
xchg
jnp
lcall
scas
inc
fdiv
je
movsb
sbb
mov
call
sbb
scas
mov
into
fwait
jg
sub
cmc
inc
inc
jno
mov
call
mov
ss
fdiv
call
dec
add
xchg
and
pop
enter
mov
sti
push
ret
mov
mov
dec
lds
ficoml
clc
lock
hlt
sub
aaa
mov
test
cmp
sbb
sub
inc
rcrb
jns
mov
mov
or
adc
lret
std
jno
cmpsb
mov
jae
and
jmp
push
inc
enter
fists
jg
push
jnp
fisubs
mov
orb
mov
push
jb
andnps
jbe
fisubs
jns
sub
push
inc
xchg
scas
hlt
hlt
int
mov
mov
dec
dec
xor
adc
add
aas
xor
push
pop
mov
int
dec
push
or
adc
push
popf
xchg
mov
lds
shll
cld
fsubrs
adc
popf
mov
inc
out
jmp
enter
add
outsb
pushf
add
pop
add
inc
add
imull
rorb
cmp
push
push
cli
pop
fisttpl
dec
inc
jne
test
fistps
into
test
movb
pop
inc
push
iret
icebp
out
push
inc
dec
popf
sbb
popf
stc
in
sti
mov
dec
insl
les
push
lock
add
stc
add
push
lods
in
rcl
cmpb
cmp
or
or
das
dec
mov
mov
aaa
jae
adc
push
adc
fs
cmp
icebp
xor
test
push
cmpb
aaa
fbld
dec
add
inc
jns
scas
jmp
outsb
addr16
icebp
outsl
ljmp
ss
fwait
xchg
sti
sub
fistps
push
sbb
xchg
adc
mov
popf
test
outsl
adc
mov
popa
jno
icebp
push
sarl
xor
sub
mov
or
adcb
movsl
inc
mov
mov
add
fsub
and
iret
and
inc
gs
faddl
sub
dec
inc
stc
cltd
xor
cmc
lock
dec
push
push
inc
fsubrs
outsl
push
cmp
out
adc
mov
aaa
and
pusha
call
mov
pop
or
jno
sbb
jl
insl
fs
je
sbb
cmp
mov
xor
out
or
inc
xchg
cmp
fs
mov
inc
out
out
xlat
test
and
mov
jbe
mov
divb
mov
or
inc
push
cli
add
lods
push
jnp
adc
jecxz
cmp
xor
das
stos
xor
cltd
std
sub
fs
jnp
fwait
mov
mov
fs
add
in
add
leave
stc
add
stc
cmc
jmp
movsb
xchg
in
cld
jmp
jl
jge
out
insb
fwait
outsl
pop
xchg
or
xchg
xlat
sbbb
sbb
sbb
push
bound
mov
mov
mov
test
and
ret
push
ljmp
dec
jbe
fsts
in
pop
adc
scas
std
in
lahf
je
add
xchg
cld
sbb
mov
wbinvd
pop
aam
loop
push
dec
push
in
xchg
ret
sbb
enter
fwait
xor
cmp
ja
inc
xchg
loope
lods
hlt
dec
loope
idivb
mov
add
adc
jmp
add
mov
dec
cmp
jp
cmp
incb
pop
dec
add
leave
stos
arpl
popf
xor
nop
fadds
ret
mov
shrl
out
ja
pop
xchg
sub
pop
aas
adc
push
adc
leavew
xchg
cmp
mov
sub
outsb
repz
adc
lcall
dec
iret
fcmovb
pop
pop
ljmp
aad
xchg
sub
ja
jle
xor
ret
stos
movsb
stc
push
push
add
adcl
jb
jnp
sub
and
mov
cmpsl
xor
sbb
xor
in
cmc
imul
mov
sbb
scas
and
call
dec
add
dec
xchg
sti
clc
iret
mov
xor
mov
pop
addr16
mov
lock
subl
mov
mov
mov
shlb
dec
inc
nop
inc
sbb
loopne
bts
or
mov
pop
xchg
movsb
fldenv
lock
inc
dec
xchg
jae
xchg
add
or
pop
addr16
les
decl
pop
mov
es
pop
fdivr
out
mov
xchg
and
out
sbb
or
cwtl
movsl
mov
shll
fsubrs
loopne
repz
movsl
lret
cmp
mov
mov
lcall
jecxz
mov
ja
xchg
dec
xlat
push
bound
ret
sbb
testb
jg
mov
push
jne
inc
push
xor
xchg
push
xlat
mov
pop
push
mov
mulb
aas
xchg
mov
xor
xchg
jne
push
cmp
ljmp
mov
mov
adc
mov
inc
iret
pop
ret
jg
xchg
push
dec
pop
aaa
and
mov
cmp
jb
stc
cltd
pop
push
fs
popa
and
sarl
mov
jge
test
shr
fs
movl
cmp
mov
std
fcomi
push
mov
or
mov
mov
xchg
xchg
mov
loope
or
call
gs
pusha
mov
fstpt
xchg
push
or
adc
mov
push
jl
adc
ja
mov
xor
mov
push
xchg
loop
mov
ficomps
pop
sarl
in
inc
dec
mov
sti
dec
sbb
push
cmp
popa
inc
push
jb
fwait
std
aaa
adc
ret
test
add
sbb
push
add
dec
nop
lock
daa
ds
test
negl
xor
arpl
lea
mov
or
pop
cmp
fsubrs
inc
mov
lret
jecxz
push
mov
mov
hlt
push
mov
sbb
ds
lock
outsb
inc
push
cmp
sbb
and
mov
popf
orl
mov
mov
hlt
mov
jge
cmp
or
sub
mov
inc
sarl
inc
lock
or
adc
nop
add
pop
dec
rorl
divl
fisttps
mov
insl
or
inc
or
fsts
inc
cld
je
push
add
mov
sub
test
dec
fdiv
cltd
imull
cs
imul
imul
aaa
adc
testl
adc
push
dec
clc
cmp
cld
insl
out
adc
pop
mov
or
movsl
loope
push
adc
bnd
nop
and
add
xchg
sahf
lods
cld
dec
mov
push
in
jmp
in
sbb
fsubl
es
sub
movsl
outsl
push
mov
movsl
mov
inc
jo
fwait
stos
pop
add
pop
jp
inc
cli
cmp
out
push
shll
idivl
pop
cld
sub
les
sarl
int
iret
shrb
xor
aam
cmp
lcall
popf
mov
xchg
inc
push
cmp
push
pusha
enter
mov
sbb
movb
test
ret
pop
mov
pop
lret
pop
pop
lds
mov
call
leave
mov
xor
cld
rcrl
ret
cmp
pop
push
cltd
mov
add
sbb
push
addr16
lds
insl
pop
lret
mov
dec
ds
rcrb
mov
repz
sbb
leave
xchg
test
js
insb
daa
insl
pop
rcrl
add
jns
inc
jmp
test
push
jnp
mov
clc
jno
inc
in
int
jecxz
pop
or
stc
out
popl
data16
or
adc
faddl
lock
add
push
in
or
mov
push
fwait
dec
ret
cltd
and
xchg
add
inc
or
rclb
in
cmp
and
cwtl
out
xchg
fwait
hlt
pop
or
into
jl
adc
pushf
pop
mov
aaa
sub
xchg
scas
sub
mov
add
fiadds
lods
daa
xchg
jg
jle
out
jl
add
lods
jmp
dec
push
adc
jno
or
xchg
scas
test
cmpsb
xor
pop
dec
insl
daa
push
lcall
dec
rcl
adc
pushf
mov
and
xchg
xorb
xor
ror
inc
cld
sarl
into
in
lret
je
divb
repnz
int
lret
popa
mov
hlt
scas
rolb
out
sahf
mov
adc
jle
sub
scas
icebp
jne
clc
xor
lret
pop
adc
std
inc
aas
mov
movl
loope
pop
xchg
rcl
lahf
adc
sub
push
les
sub
test
xchg
xchg
jmp
mov
xor
push
int
or
xchg
push
call
xlat
cmp
mov
mov
xchg
add
sub
jge
fldl
mov
push
cmp
sub
push
jbe
add
in
scas
lds
xor
ret
std
cmp
ret
ret
cmp
addr16
scas
test
lcall
cmp
xchg
mov
sbb
dec
push
mov
ds
pop
insb
orl
add
or
adc
pop
cmp
mov
out
jg
adc
jb
mov
cmp
sbb
iret
mov
pop
cmp
movsl
in
bndldx
addr16
hlt
pop
pop
pushf
xchg
push
adc
repnz
aad
dec
repz
cmpsb
ficompl
xor
sbb
push
pop
cmpb
idiv
inc
out
cmp
aad
jg
and
add
stc
scas
push
sbb
fs
mov
imul
pop
adc
clts
mov
adc
fld
out
push
pop
sbb
jle
jmp
jg
dec
xorb
out
gs
pop
sbb
and
ja
and
cmpsl
sbb
mov
adc
xchg
neg
rolb
shll
xchg
push
rorb
sub
or
outsl
push
adc
cmp
movsb
jnp
subl
out
into
pusha
sbb
add
xor
clc
cmp
or
mov
popa
push
xor
pop
cltd
or
dec
nop
out
xor
ror
fcomp
jp
into
xlat
fsubrl
fsubrl
mov
aas
movsl
lcall
test
fistpll
aas
pop
adc
mov
or
mov
add
dec
das
sti
subl
filds
fcoml
xlat
mov
clc
bnd
sbb
inc
aas
jl
fidivl
jnp
hlt
xor
xlat
je
push
push
sub
adc
push
sbb
mov
xchg
test
mov
push
std
loopne
sub
ss
mov
repz
mov
xchg
cs
jb
jae
mov
cltd
addr16
lds
adc
iret
xchg
out
pop
test
sbb
cmp
fstp
popa
xor
lock
inc
notb
sub
cs
test
fs
shrb
add
push
inc
mov
push
xor
sbb
jb
notb
cmp
shl
in
mov
jbe
dec
push
cwtl
dec
insb
cmpsl
outsl
xchg
mov
mov
pop
out
cmpsl
hlt
jo
std
test
add
mov
in
inc
mov
xor
loope
dec
por
insl
outsl
xchg
inc
pushf
push
jmp
cli
add
xor
pop
in
dec
dec
inc
fmull
and
mov
rcrb
mov
mov
incl
std
sub
hlt
stos
mov
lods
enter
and
mov
jb
mov
inc
divb
lahf
lret
sub
pop
pusha
imul
test
frstor
icebp
sub
mov
imul
xor
es
mov
movsl
jno
push
sarl
repnz
cmp
loop
mov
std
sbb
gs
adc
sub
adc
xchg
mov
out
xchg
cmc
pusha
push
les
flds
jl
in
cld
inc
hlt
xchg
in
loope
mov
stos
icebp
sub
mov
aas
mov
out
das
mov
popf
inc
cmp
fdivp
pop
mov
negb
je
lret
pop
pop
in
mov
push
cltd
sub
lock
jecxz
or
push
std
push
daa
cmp
sub
mov
sub
push
xchg
mov
scas
pop
xchg
mov
leave
test
cltd
sub
mov
setb
cmp
out
add
ficomps
insl
lods
add
push
nop
cmp
pop
push
fsubr
inc
jge
leave
add
fnsave
daa
ret
sahf
mov
adc
imul
fwait
cmpsb
jmp
mov
cs
movsl
dec
push
insb
les
jg
aaa
and
mov
xor
ja
shll
xlat
fiaddl
mov
jge
push
push
rcrb
es
xor
push
es
rclb
test
xchg
incl
mov
inc
leave
stos
or
faddl
push
lock
adc
outsb
mov
icebp
fcmovne
lret
ja
andl
cmp
frstor
stc
nop
and
sub
pop
jne
rol
or
popa
xchg
sbbb
sub
insl
addr16
test
testb
sbb
insl
jg
mov
nop
lcall
inc
cmpsb
std
inc
ret
and
es
pop
scas
call
jnp
push
jae
mov
sbb
pop
add
xor
or
add
xlat
jmp
pop
inc
and
xchg
inc
notl
out
scas
aas
mov
hlt
inc
jae
test
and
inc
popa
js
les
sti
outsl
sbb
movsb
adc
lea
xchg
jg
ret
clc
fwait
inc
fldcw
dec
push
mov
xchg
or
inc
outsl
cmp
imul
sbb
inc
xchg
sbb
jmp
mov
and
mov
mov
mov
ret
sbb
sub
imul
dec
pop
adc
in
rolb
and
xchg
ss
xchg
sub
in
pushf
sub
cmp
repz
data16
sbb
jg
xchg
mov
add
push
pop
lods
filds
sub
adc
mov
mov
mov
vpcmpgtb
rorl
push
sub
fs
clc
scas
idivl
lods
xor
mov
popa
jecxz
inc
scas
cwtl
add
stc
and
imul
mov
or
cwtl
mov
insb
andb
fcomps
cmpsl
js
xchg
cs
and
data16
xchg
inc
popf
pop
pop
fisubs
cmpb
jecxz
add
dec
daa
daa
pusha
xchg
mov
and
int3
fmull
in
ljmp
cmc
add
outsl
xchg
andb
mov
test
test
js
subl
sbb
mull
jo
scas
push
xchg
sub
xchg
cmp
ret
cltd
adc
aaa
mov
std
jl
xor
and
std
push
ret
and
dec
adc
add
test
jl
mov
mov
mov
pop
test
stos
sti
out
sbb
dec
mov
jns
dec
mov
push
mov
scas
sub
xor
push
shlb
jg
lods
cli
insb
movups
mov
pop
lods
nop
cmp
repnz
out
sub
loopne
fxch
push
add
insb
adc
ret
xlat
push
add
cmp
inc
shl
stos
in
mov
adc
inc
in
dec
fildll
and
pop
aaa
mov
decl
push
ljmp
cwtl
insb
dec
add
mov
mov
sti
jp
cs
mov
cmc
xor
outsb
sbb
stos
adcb
imul
inc
ja
sub
stc
xlat
dec
pop
enter
lahf
jnp
cmp
repnz
push
std
js
stos
mov
enter
movsb
xor
dec
icebp
push
jl
lret
aam
mov
mov
loopne
push
push
sbbl
xor
dec
xchg
popa
cwtl
jge
jecxz
pop
mov
cmc
xchg
ljmp
mov
pop
rclb
dec
nop
fwait
scas
imul
mov
cmp
pop
dec
pop
jg
rcrl
mov
ret
jge
xchg
mov
in
pop
pop
pop
dec
mov
out
popa
cwtl
xchg
adc
cwtl
jp
and
lret
mov
dec
add
test
mov
repnz
cmc
jno
jo
js
aaa
popa
add
leave
fistpll
sub
or
shll
sbb
inc
mov
fabs
stos
xchg
fcmove
mov
jp
inc
cmc
mov
call
into
les
sub
fldcw
stc
jae
loop
stos
cmc
fs
addr16
imul
fldenv
sbb
pop
inc
mov
push
aad
in
fcoml
stos
xor
inc
loopne
mov
push
push
sub
hlt
mov
cli
clc
mov
mul
push
nop
lds
sub
outsl
arpl
lea
jmp
test
rcrl
dec
xchg
push
enter
jno
mov
mov
cmp
adc
dec
xor
add
shrl
push
repz
add
movsl
lret
mov
stos
ss
inc
arpl
xchg
out
ficompl
jmp
jnp
mov
es
fdivrs
xchg
cli
adc
sbb
sub
jnp
je
addr16
sbb
fmull
push
push
adc
cmp
data16
mov
push
pop
es
test
dec
fnstenv
nop
call
pop
pop
mov
outsb
aad
jae
divb
cmp
and
xchg
mov
outsb
push
mov
icebp
sbb
mov
lods
xchg
hlt
push
push
adc
aas
mov
pop
andb
test
in
repnz
mov
nop
insb
ljmp
pusha
jl
xor
or
xchg
adc
outsb
inc
inc
cmp
repz
jnp
jmp
lods
and
add
mov
xor
xchg
sar
dec
push
cmpsl
ds
cmp
sbb
or
xchg
xchg
add
xchg
movsb
xchg
sub
mov
mov
mov
push
inc
dec
jle
dec
xchg
test
mov
dec
in
mov
push
dec
xor
push
xchg
divb
lret
sub
ljmp
sub
int
cmp
cmp
popa
sub
in
ficomps
add
dec
mov
hlt
subb
push
push
dec
mov
in
or
sub
fldenv
aaa
sbb
testb
paddd
sub
pop
pop
jp
fimuls
pop
lods
add
mov
xchg
cwtl
add
js
lods
jg
mov
xchg
xchg
std
das
jp
mov
dec
mov
inc
ret
jb
jg
push
cmpsb
scas
push
pop
sarl
lret
out
inc
loope
loope
xchg
in
push
jne
pop
sahf
fistps
clc
stos
mov
xor
stos
insb
popf
sbb
stos
enter
stos
sbb
mov
cld
mov
cmp
pop
pop
sub
fsubrs
out
and
pop
or
mov
cmpl
xchg
jne
xor
mov
fld
or
aaa
fidivs
or
int
mov
jb
sahf
xchg
add
scas
jl
dec
es
je
or
call
sar
cs
adc
jne
out
hlt
jbe
lock
stc
sub
mov
icebp
sbbb
sub
xor
mov
mov
mov
adc
mov
inc
jnp
popf
cmp
sub
int
pop
adcb
jbe
scas
stos
fs
jbe
ret
ljmp
nop
adc
gs
cs
sbb
sarb
and
xchg
negl
mov
xor
or
dec
les
push
filds
mov
mov
xchg
jb
pushf
sub
js
add
push
aam
and
imul
sbb
add
sbb
pop
jo
dec
pop
hlt
adc
xlat
sub
pop
rcr
pop
dec
pop
mov
fists
test
push
pop
fmuls
fninit
inc
std
lahf
pop
or
imul
ret
in
sbb
cmp
lds
incb
popf
repnz
dec
pusha
aad
mov
inc
test
adc
movsl
adc
in
daa
enter
pusha
loop
add
jle
scas
add
inc
mov
decb
dec
push
push
lret
adc
push
push
pop
mov
leave
jnp
jb
or
call
sbb
test
sub
cs
loope
jecxz
add
shlb
icebp
push
sub
cltd
cltd
jns
inc
pop
xor
jle
imul
loop
dec
inc
cmp
in
pushf
mov
mov
lock
in
sti
xchg
jb
notl
loop
mov
mov
xchg
mov
stc
xchg
call
imul
out
sti
adc
mov
in
xor
scas
mov
lds
out
clc
xchg
and
or
andl
ret
pop
push
add
mov
inc
shl
add
xor
popf
mov
cld
mov
fwait
inc
outsl
inc
inc
fldcw
jae
lods
mov
repnz
mov
mov
out
inc
pusha
stc
push
daa
and
jae
lcall
mov
pop
mov
dec
pop
sbb
data16
xchg
cmp
dec
mov
cmpl
pop
daa
fnsetpm(287
xor
mov
jb
or
and
imul
into
into
sub
pop
sub
mov
cltd
xlat
add
jmp
mov
mov
js
adc
in
mov
sbb
test
xchg
cmp
dec
mov
and
mov
cs
adc
daa
push
or
inc
cli
fdivs
push
xchg
rorb
lahf
movsb
pusha
lret
push
pop
fdivrs
sar
adc
jns
icebp
repnz
cmp
or
push
repnz
push
lahf
jo
add
mov
movsl
mov
lcall
insb
rcrl
pop
cmp
xchg
xchg
out
jae
mov
int3
fidivrs
xchg
lods
data16
xchg
test
cltd
pop
mov
push
sub
mov
mov
sub
aam
inc
lret
add
inc
cmp
in
cmp
stos
cwtl
xchg
mov
add
cmpb
outsb
add
aam
cmp
and
in
mulb
fs
jge
xchg
add
add
xchg
fdivs
xor
mov
addr16
push
push
jp
sbb
inc
sub
sub
mov
pop
neg
enter
jb
test
lahf
fiadds
pop
sbb
in
mov
cmpsb
cld
push
fsubs
xchg
popf
setl
push
jge
gs
popa
adc
fcomps
aaa
push
and
cmp
mov
test
push
insb
rclb
xor
lock
test
cmp
pop
pop
aaa
int3
inc
xor
insl
mov
fcmovu
push
mov
pop
xor
rclb
dec
in
pusha
scas
push
sbb
js
mov
jge
pushf
iret
inc
es
xchg
nop
jbe
mov
pop
sbb
mov
movsb
fstl
adc
das
pop
sub
or
push
addr16
lds
cmp
mov
mov
out
or
mov
cmp
and
lahf
scas
pop
or
ret
arpl
int
add
cwtl
pop
xchg
jae
xor
cs
stos
xor
pop
sbb
xchg
add
aas
mov
jo
scas
sub
fidivs
clc
test
jmp
add
or
sbb
inc
jle
fsubrl
les
int
jg
xor
xchg
dec
daa
mov
fs
data16
xchg
pop
dec
xor
shrl
lock
and
jl
call
mov
inc
or
out
in
and
loope
adc
mov
mov
mov
xchg
mov
cmp
mov
adc
js
push
incb
imul
push
mov
loop
pop
sub
test
push
mov
ljmp
cmc
jp
mov
aas
mov
push
adcb
and
mov
out
jp
test
aam
fs
and
mov
xchg
and
fsubr
push
xchg
adc
data16
pop
xchg
push
inc
cmp
aaa
imull
xchg
iret
mov
stos
int
and
xchg
xchg
inc
mov
std
xor
jmp
mov
movsb
or
mov
mov
or
xor
mov
mov
loope
mov
hlt
addr16
or
dec
dec
les
lret
mov
sub
pusha
ret
jge
enter
in
jbe
sbb
mov
ss
jecxz
mov
cmpsb
loop
cltd
mov
push
adc
mov
mov
test
inc
and
push
inc
es
dec
int3
or
loopne
jns
mov
repz
shl
jl
jmp
divb
das
xchg
inc
cmp
mov
mov
dec
sahf
bound
pop
cs
lock
fimull
es
idivb
mov
and
sub
sbb
sbb
stos
nop
or
ret
leave
push
fdivrl
push
and
xor
das
pop
sub
sub
fwait
mov
dec
adc
push
test
push
pop
mov
cmp
xor
scas
bound
add
mov
pop
adc
das
add
push
orl
sub
adc
adc
cmp
inc
push
rcrb
mov
ret
cmpsb
shll
mov
mov
lods
inc
jmp
push
imul
dec
loop
scas
adc
inc
mov
repz
imul
xchg
and
cs
adc
jno
dec
ret
dec
adcl
jecxz
ds
push
xchg
sbb
rcrl
sti
test
sub
or
sub
outsb
inc
dec
or
xchg
lea
jmp
or
or
mov
sub
sub
adc
jecxz
int3
insb
pop
ljmp
cltd
mov
sub
lods
rolb
or
push
dec
jnp
scas
or
in
xchg
sti
aas
ljmp
cmpsb
lret
gs
ret
add
adc
pusha
dec
movsb
mov
xchg
fsubp
dec
outsb
and
hlt
dec
and
cmp
sbb
and
push
fwait
ror
addr16
test
mov
push
cli
cli
les
adc
testb
xchg
xchg
mov
les
pop
fwait
inc
cld
out
add
push
push
popf
ljmp
clc
mov
jmp
dec
outsb
xor
or
shrb
jae
or
das
pusha
int
addl
push
sti
cmp
cmp
cmpsb
stos
and
lods
sub
dec
push
cmp
aad
xchg
dec
add
jge
in
sbb
les
sbb
inc
adc
add
mov
in
mov
subl
push
mov
jno
iret
cld
imull
out
push
or
sbb
mov
and
or
xchg
shlb
pushf
sbb
repz
or
movsl
nop
push
aad
inc
sbb
xor
clc
mov
enter
and
addr16
or
pop
xor
lock
xchg
push
scas
xor
xor
pushf
popf
inc
in
outsl
xchg
sub
sub
adc
testl
mov
outsl
mov
enter
push
fwait
push
push
daa
dec
rcrl
or
mov
incl
sbb
out
pop
test
dec
jne
sbbl
push
fldl
in
pop
or
sbb
repz
push
inc
shlb
lahf
jno
adc
rcrb
cmp
scas
outsl
or
lock
int3
rcrl
sbb
mov
cmp
fsubrs
and
cmp
xor
movsb
nop
jns
sbb
mov
cli
rorl
push
js
push
push
add
mov
mov
and
pop
int3
lods
jo
cwtl
shrb
cmp
push
and
sub
fimull
in
sub
imul
cmpsb
mov
gs
lds
outsb
mov
fistpl
or
outsb
fs
cmp
xor
push
in
stc
pop
sub
xor
sub
sub
imul
lock
cmp
jbe
test
and
mov
fidivrs
daa
push
js
out
daa
lcall
sbb
or
les
std
pusha
jb
mov
or
xor
or
dec
jg
ficoml
sbb
loope
jp
aas
lcall
cmc
movsb
shll
int
cmp
pop
les
xor
push
stos
es
adc
stc
dec
dec
in
sti
dec
sahf
push
sbb
jmp
push
or
jg
cmpsl
cmp
mov
pop
push
fisttpll
jae
or
in
adc
adc
ret
insl
lret
mov
mov
inc
arpl
sbbb
sub
pusha
cmp
or
xchg
pop
ss
dec
jle
mov
add
xor
ljmp
fucomp
iret
mov
mov
cmpsb
iret
pop
mov
jge
out
or
pushl
clc
push
aam
mull
addr16
jns
adc
cmp
in
sbb
pop
mov
je
mov
cmp
fwait
adc
push
mov
adc
loop
push
dec
lea
mov
push
fs
vandps
test
fmulp
sete
sahf
and
pop
in
cmp
sub
or
repnz
outsb
jg
jg
jecxz
frstor
lahf
add
popa
mov
sbb
jle
cld
cmpsb
ss
outsl
sub
daa
lea
mov
repnz
movsb
loopne
push
fisubrs
repnz
sbb
in
add
jae
mov
lahf
aam
pop
sti
incl
cmpsb
out
dec
mov
test
inc
push
pop
cwtl
fdivp
mov
outsl
add
pop
and
jge
ss
xchg
fildl
int
jecxz
jno
sahf
xor
jmp
sub
test
and
mov
add
mov
cmp
int3
lret
add
fidivl
adc
jb
pop
jge
add
dec
aam
jnp
les
popf
mov
mov
xor
mov
imul
lahf
sub
inc
in
or
dec
sar
scas
ljmp
cs
ret
jb
jle
inc
repz
inc
repnz
push
cmp
fsubrl
mov
rcrb
pop
faddl
test
xorl
jmp
loopne
and
mov
jecxz
jle
jnp
loopne
mov
test
scas
jmp
mov
mov
int
mov
pop
adc
lods
popf
test
push
pop
xlat
fs
xchg
pcmpeqd
inc
aaa
cmp
cmp
ret
sub
or
or
faddp
mov
xlat
mov
mov
fst
nop
push
cmp
adc
leave
pusha
jg
jmp
push
mov
sbb
int
cltd
pushf
in
in
xor
mov
pop
lret
notl
xchg
inc
jne
xor
in
mov
adc
pop
js
inc
hlt
fidivrl
xor
fbld
ret
and
jecxz
cs
ret
xchg
daa
insl
add
jp
lods
jmp
xor
xor
sub
push
sub
mov
pop
das
in
mov
fdivs
jp
enter
insl
jb
mov
outsl
add
orl
push
mov
pop
sbb
aam
imulb
aad
xor
lcall
jae
xchg
xchg
and
mov
stc
adc
mov
mov
push
mov
jo
movsl
into
stos
dec
adc
add
outsl
mov
cwtl
dec
and
sarl
jg
and
stc
ret
adc
lret
add
popf
je
sbb
int
lahf
test
dec
cwtl
test
addl
in
pop
shll
mov
dec
outsl
cs
fbld
mov
add
imul
mov
and
out
and
in
push
shlb
pop
push
and
push
mov
mov
cmpsl
sbb
sub
iret
nop
add
lcall
frstor
sti
add
arpl
psubq
dec
fwait
push
mov
jb
add
pop
dec
repnz
shrb
addr16
or
adc
pcmpgtd
sbb
inc
jle
jnp
mov
mov
cli
mov
cmp
pushf
ja
mov
jnp
sahf
dec
aaa
fists
dec
mov
cld
push
push
ret
xchg
in
xor
adc
int
xchg
rcrl
mov
adc
xchg
shr
cmpsb
inc
aas
jg
cmp
cmp
gs
in
repz
inc
stos
ss
push
loopne
cmp
and
dec
xchg
jo
lahf
shl
sbb
mov
push
sub
sub
push
jns
inc
fs
pushf
fcomp
cmp
test
imul
stos
sbbl
stos
test
and
es
jbe
mov
jo
jge
jns
das
xchg
xchg
sbb
or
sub
test
stos
mov
cmp
das
das
xor
aam
cli
mov
pop
cmc
hlt
movsb
je
cmp
mov
icebp
jge
and
and
inc
lods
push
mov
fimuls
cmp
sub
pop
imul
shl
ds
ja
add
int
repz
shll
in
out
iret
mov
pop
or
es
jle
dec
and
xor
dec
mov
or
stos
fdivs
mov
mov
lret
push
pushf
dec
lcall
push
rclb
cmpsl
cmp
insb
in
js
dec
mov
gs
xor
arpl
mov
aam
mov
jecxz
popa
or
cmc
das
push
or
cmp
inc
je
inc
cld
dec
iret
and
out
cmp
loop
jle
lea
insl
cwtl
mov
dec
scas
cmpsl
xor
jno
roll
xchg
jae
pop
add
mov
loope
push
aam
xchg
paddsw
jns
enter
test
iret
jae
addr16
xchg
ds
xchg
or
push
dec
mov
imul
cld
lds
jns
adc
mov
dec
sbb
cmp
and
clc
ja
ret
add
push
mov
sbb
cs
repz
jae
outsl
sub
xor
in
sub
push
pop
iret
sub
pushf
xlat
push
in
mov
std
mov
adc
cs
je
sbb
rorl
sbb
call
aam
xchg
mov
cmpb
negb
lds
mov
sub
popa
mov
mov
dec
sub
or
adc
lods
push
xchg
mov
xchg
adc
cld
mov
push
inc
addr16
hlt
xchg
inc
jge
mov
xlat
jp
sbb
sahf
test
into
add
repz
in
out
xchg
fisubl
test
sub
cwtl
sbb
loopne,pt
fisubrs
mov
cmp
leave
cmpsb
xor
sbb
push
into
std
or
sbb
outsl
data16
pop
lds
or
cmp
add
outsb
lods
out
int3
inc
les
adcl
mov
adc
push
pop
pop
mov
jmp
loop
pop
mov
lret
daa
nop
fs
sti
jae,pt
adc
int3
leave
nop
sub
cmp
jb
sbb
or
sbb
inc
mov
out
pop
loop
test
pop
xchg
pop
cmpsb
lods
gs
xor
mov
ljmp
xchg
shl
pop
fimull
sbb
mov
nop
pop
cmp
cmp
pop
cmp
lret
data16
cmp
inc
sbb
or
adc
xorl
out
shlb
add
mov
jo
xchg
repz
xor
jle
jle
shlb
fdivl
push
scas
addr16
inc
mov
sbb
push
roll
adc
dec
xchg
shl
push
cmpsl
sbb
lcall
xor
jo
jns
xor
ja
push
mov
sti
cmpsl
loopne
inc
mov
pop
aad
stos
jns
int3
mov
insl
jb
or
ds
sub
jno
dec
scas
bound
cld
adc
and
and
shr
lods
rcrb
lahf
std
mov
push
stc
test
push
scas
mov
fiaddl
sbb
popa
cmc
ss
sahf
repz
lds
jno
mov
adc
out
sarl
dec
sbb
clc
xchg
mov
popa
push
ds
pushf
jp
xchg
ret
cmp
test
int
or
mov
cld
push
mov
cs
and
loopne
int
int
push
pop
dec
popf
jmp
jg
or
dec
cmp
mov
cmp
rcr
neg
fxam
mov
subl
leave
sbb
cltd
fnstcw
daa
in
add
cmp
inc
mov
cmp
jb
dec
and
lahf
cmp
test
fdivs
cs
xchg
push
mov
pop
sbbl
fsubrl
pop
sarb
imul
mov
icebp
inc
dec
ds
movsb
loope
adc
cmpsl
clc
aam
into
stos
lahf
or
lahf
rcrl
xchg
sbb
out
shrl
je
lret
pushf
test
or
lret
sub
xor
int
and
sbb
adc
cmp
scas
jmp
in
mov
fs
outsl
fnsave
cmc
sub
mov
pop
loopne
push
lcall
push
imul
push
xor
dec
push
mov
jnp
and
adc
lret
outsb
movsb
sbb
inc
lcall
jg
xor
out
imul
or
sub
jae
xchg
xor
out
mov
repz
cli
test
ja
add
mov
cmp
sbb
or
mov
pop
mov
xchg
inc
stos
jmp
push
shlb
ds
adc
dec
aaa
lods
fists
out
pop
adcl
mov
aam
lods
pop
and
popf
or
push
popa
and
jno
xchg
jecxz
xchg
call
aam
es
repnz
cmp
push
pusha
rorl
movsl
ja
sbb
sbb
inc
mov
daa
adc
popa
clc
je
mov
orb
cltd
ds
jecxz
or
ja
sub
aas
add
adc
fnstcw
fs
inc
inc
push
or
xchg
dec
bound
dec
mov
jle
cli
mov
mov
mov
das
in
jo
jne
xchg
pop
icebp
shlb
clc
mov
add
mov
pusha
out
xchg
out
jg
lods
xor
sbb
add
sahf
pop
mov
ret
jp
adc
jmp
gs
stos
jae
mov
jno
mov
jle
cmp
out
cltd
lea
or
scas
mov
sbb
jmp
icebp
lret
jecxz
inc
inc
loope
sbb
dec
call
xor
push
dec
jp
cmp
xchg
cltd
cmc
add
movsl
cli
or
data16
out
push
cmc
scas
mov
mov
jae
xchg
test
xor
mov
xchg
add
daa
or
sub
sahf
aad
push
test
lock
ret
push
jno
pushf
imul
cltd
xor
pop
loope
pop
and
jae
add
iret
lods
outsb
loope
test
push
sbb
std
sbb
imul
pop
cmp
adc
push
pop
add
pop
out
in
pusha
mov
bound
cli
jns
addr16
push
inc
fnsave
icebp
push
mov
es
neg
cmp
leave
xlat
lahf
lcall
lret
pop
or
lock
pop
and
xor
cld
lcall
fs
lds
out
xlat
out
or
outsl
fiadds
dec
dec
pop
mov
sarw
jmp
inc
mov
add
out
adc
pop
jae
divb
add
adc
fcomip
and
lea
xor
lock
push
and
cmp
sub
sti
pop
aas
out
cmpsl
test
cs
ror
mov
lcall
je
sub
jno
sub
xchg
jecxz
or
int3
cmp
clc
and
push
adc
jmp
outsb
imul
dec
scas
jmp
push
das
ret
push
dec
mov
ljmp
pop
dec
outsb
jle
ljmp
popf
dec
xchg
dec
dec
mov
lds
fs
or
loopne
or
mov
fs
and
dec
cmc
test
stos
jbe
aad
outsl
xor
pop
inc
xorb
pop
adc
xchg
push
pop
lret
cmpsb
jle
xchg
dec
daa
and
inc
dec
pop
data16
les
movsl
dec
sub
push
mov
out
int3
jnp
cmp
cli
adc
xorl
mov
xchg
xchg
cmc
scas
jmp
sbb
mov
xchg
and
push
or
xor
fadds
test
xor
into
jmp
xorb
cmpsl
fbstp
xchg
cmp
into
cltd
pop
in
mov
add
ds
pop
pop
sub
xchg
or
int
arpl
std
test
mov
mov
push
inc
std
mov
xor
leave
scas
into
aad
and
add
xchg
dec
xchg
jae
imul
inc
mov
cli
and
les
cmp
mov
mov
mov
and
pusha
mov
addr16
mov
gs
and
aaa
lcall
hlt
shl
jne
aad
pop
inc
push
push
aaa
dec
ljmp
jl
and
imul
jb
dec
stc
mov
hlt
cmp
jle
mov
or
cs
inc
in
fwait
dec
nop
scas
clc
pop
pop
mov
pop
and
addr16
mov
cwtl
ficompl
sbb
fnstenv
push
stos
xchg
pop
das
push
jp
lahf
mov
pop
push
ljmp
sub
push
cli
mov
jno
cmp
sbb
nop
mov
inc
cmpb
lret
xchg
out
fcomps
dec
movsb
clc
mov
push
loope
pop
pop
pushf
mov
mov
mov
or
push
add
rcrl
imul
add
or
negl
aaa
inc
mov
scas
dec
pop
pop
mov
imul
sbb
call
lcall
mov
stos
fs
jecxz
fdivrs
testl
cli
iret
inc
enter
jae
mov
lret
lds
xchg
push
test
inc
dec
repz
mov
pop
add
add
dec
jp
mov
loope
dec
lods
pop
push
cmp
add
fdivrs
pop
lock
jle
mov
roll
pop
jb
push
cmp
cmp
inc
push
or
das
imul
mov
lcall
cli
cmp
ret
jns
test
fiadds
mov
push
inc
mov
jg
jmp
jns
push
repnz
sub
mov
mov
add
mov
divl
js
lahf
xor
test
sub
scas
fistpll
in
cs
pop
outsl
rcl
movsb
xor
and
mov
xchg
cmpsb
fwait
nop
adc
lods
pop
push
jl
lods
adc
xchg
push
add
call
in
xchg
add
adc
js
cli
push
cmp
outsb
sub
pop
xor
arpl
enter
testb
in
cmpsb
pop
or
jle
in
pop
sbb
dec
jno
inc
dec
push
leave
or
add
inc
fcmovbe
cli
adc
aas
pop
scas
aaa
jae
dec
out
rol
xor
popf
inc
dec
cmp
loop
loope
fadd
jo
pop
insb
mov
loop
mov
ds
shrb
xchg
mov
cmp
and
add
lcall
imul
imul
test
outsb
insb
in
push
loope
es
sbb
mov
xor
and
mov
xchg
lahf
mov
cmp
int
push
cltd
je
cmp
sarl
call
fistpll
in
out
cmp
add
or
sbb
sub
and
mov
in
mov
rcr
rclb
js
idiv
push
sub
sbb
es
jbe
pushf
in
lds
scas
mov
jbe
fwait
mov
jmp
mov
pushl
cltd
mov
mov
imul
aas
repz
repnz
jno
mov
push
fnstenv
mov
sbb
pop
cmpsl
cld
ret
sarl
sbb
dec
stos
cs
inc
mov
out
insl
leave
xchg
and
mov
outsb
movsl
jbe
shll
mov
clc
call
test
adc
jl
and
pop
mov
push
mov
divb
mov
pop
lahf
xchg
cmp
pop
sub
lahf
mov
dec
cld
out
adc
ds
pop
outsl
repz
int3
pop
dec
mov
dec
pop
or
enter
jae
xlat
stos
mov
and
int
rolb
xor
aaa
aam
mov
pop
jl
fdiv
cmpsl
sbb
mov
mov
and
xor
xor
pushl
gs
addr16
dec
test
mov
int
in
cmp
aaa
inc
jge
in
popa
cmp
arpl
cwtl
push
gs
testb
loopne
stos
mov
add
xor
mov
jb
fidivl
jge
mov
jnp
inc
adc
adc
aas
xor
or
fcmove
pop
add
test
sbb
leave
mov
fidivrl
in
shl
std
cmpsl
jb
sbb
mov
cmpsl
mov
mov
mov
lret
fists
cltd
gs
roll
aad
mov
inc
xchg
rcrb
test
cwtl
mov
test
test
lret
jno
add
adc
sti
movsb
add
inc
in
or
push
movsb
data16
jp
sub
shl
dec
inc
push
scas
and
pushf
xlat
scas
cwtl
add
jnp
push
cmpb
iret
inc
lahf
push
pop
fprem1
jl
out
lock
or
dec
outsb
inc
mov
fs
push
xor
xchg
fs
popa
xchg
pop
movsb
mov
or
xor
mov
mov
ja
bound
dec
adc
inc
mov
push
xchg
jnp
jl
inc
pusha
repz
push
int
push
jle
push
add
and
mov
push
movsl
sti
cmp
stc
rolb
push
outsl
sub
sub
inc
push
sbb
or
inc
imul
shl
xor
sbb
pop
pop
ja
xor
addr16
mull
lret
lret
push
aam
rorb
mov
dec
mov
jecxz
int3
jnp
inc
ljmp
sar
and
push
outsb
xor
push
fildl
lods
xor
iret
in
or
subl
dec
iret
fwait
sub
adc
aad
jle
xchg
test
add
inc
mull
sub
cmp
push
lcall
inc
pcmpeqd
loopne
xchg
sub
es
iret
rorb
lods
jns
mov
clc
inc
add
les
and
repz
fs
dec
fcoms
mov
push
dec
adc
ret
sub
les
mov
xchg
cmp
push
or
fists
inc
cmpsb
xchg
pop
scas
mov
add
insl
mov
push
sub
add
loope
rorb
pop
mov
bound
test
cmp
roll
xchg
stos
mov
or
fdivr
add
mov
xorb
fbstp
out
outsl
pop
xchg
arpl
xchg
mov
dec
dec
push
sbb
or
pop
pop
mov
mov
mov
cmc
xor
mov
xchg
sbb
add
push
aas
xchg
cmpsl
jnp
fnstenv
imul
bnd
xchg
pusha
pop
cmp
and
jp
mov
and
ret
sub
pop
sbb
das
push
aam
push
orb
outsb
cs
leave
cmpsb
jecxz
int
xchg
leave
pop
add
sti
flds
addl
pushf
sub
mov
xor
data16
cld
in
cmp
popf
adc
mov
adcb
add
push
mov
imul
push
jge
aam
dec
jnp
cmpsl
aad
push
cmp
pop
adc
popa
sbb
dec
mov
and
pop
shl
xchg
scas
pushf
shr
lods
out
xor
xchg
xor
pop
sub
movsl
fildll
rcrl
pop
ljmp
std
arpl
push
cmp
jno
stc
dec
cmpsl
adc
pop
lods
mov
pop
daa
jnp
xchg
data16
pop
and
mov
aam
or
push
jo
xchg
ja
jno
push
scas
jns
xchg
dec
sub
stc
rcl
jb
adc
cmpsb
ds
out
ret
xchg
mov
shrb
push
xlat
sbb
lods
stos
ret
cmpxchg
or
mov
das
mov
into
and
hlt
cmp
pop
or
fidivl
and
cld
out
xchg
dec
add
mov
or
dec
adc
fcmovb
push
pop
pop
mov
and
out
stos
mov
icebp
in
je
pushf
cld
add
push
lahf
dec
fcomip
loopne
push
cs
cmp
mov
rclb
arpl
daa
fcmovu
gs
imul
enter
jecxz
mov
inc
mov
rol
pop
pop
addr16
jae
in
pop
dec
das
cmpsb
gs
stc
jno
adc
xchg
mov
xchg
push
mov
push
fiadds
mov
mov
fiadds
bnd
jno
ja
jle
leave
or
adc
mov
scas
sbb
nop
andl
inc
incl
push
pop
cmpsl
cmpsl
mov
inc
loopne
popa
stos
lea
cwtl
orl
pop
pop
jb
test
iret
cmp
int
cs
int
decb
shll
sub
int
xchg
jmp
mov
push
push
xor
movsl
jo
lcall
push
sbb
dec
pop
inc
jno
xor
and
movsb
das
sarb
fdiv
xor
aam
imul
adc
mov
test
inc
pop
imul
sbb
jbe
lret
mov
xchg
xorb
js
mov
sub
pop
jae
pop
push
jmp
push
jecxz
and
adc
mov
outsl
pop
in
mov
test
sti
test
jmp
jg
test
mov
fidivl
sbb
jb
ja
xor
fld
js
lock
push
in
push
in
dec
cmc
push
sti
mov
inc
xor
push
cmpsb
stos
inc
pop
rorb
adc
shlb
mov
loope
mov
and
insb
aas
xorb
cmc
jbe
dec
fldcw
ss
loopne
jmp
inc
lcall
mov
push
push
es
clc
shrb
inc
jle
sbb
xorl
jl
mov
push
adc
push
sbb
push
push
and
or
daa
lods
or
cld
or
dec
out
ljmp
add
btcl
mov
mov
jmp
adc
sub
sbb
push
pop
mov
cmp
div
pcmpeqb
rorl
pop
push
fmul
outsl
sub
adcb
xchg
lcall
stc
iret
jno
add
in
stc
repz
cwtl
mov
ret
lods
pop
std
cltd
fs
cmp
fucomip
loope
fadds
js
inc
arpl
fucomi
sahf
jl
lock
dec
and
addb
mov
scas
pushf
in
jne
jmp
mov
mov
sbb
repnz
aas
fsubrl
cmp
mulb
inc
pop
and
repnz
jo
jns
sahf
shrb
push
repnz
aas
repz
rolb
mov
mov
dec
outsb
push
in
sub
mov
orb
outsb
insl
movsb
jo
loop
or
and
dec
pop
fidivl
inc
fnstenv
dec
jne
xor
shlb
mov
sub
je
std
bound
fstpt
sbb
sub
pop
inc
mov
hlt
push
mov
inc
cmp
dec
js
jl
aam
movsb
fwait
pushf
push
mov
jle
jl
out
mov
sbb
fcomps
dec
push
pusha
adc
nop
xorb
dec
sbb
cli
inc
mov
test
jle
sbb
cli
sub
fldcw
or
mov
fistpl
fwait
xchg
shr
rclb
pop
stos
pop
inc
in
pop
out
fdivl
aam
push
xchg
jl
jbe
icebp
ret
sbb
pop
sbb
rcrb
cmp
jl
cmpsb
imul
push
xor
mov
frstor
sbb
clc
rcl
mov
in
mov
lahf
lds
jle
add
xchg
sarb
inc
js
stos
ret
lods
cmp
test
pop
sbb
mov
jg
pop
in
xchg
pop
incl
xor
jns
mov
das
ret
sbb
popf
dec
push
pop
call
cltd
loop
adc
aas
xor
pop
in
add
iret
xor
out
mov
dec
or
imul
fs
cmp
lret
cmpsb
xchg
cli
xchg
sbb
adcb
pop
mov
sarb
mov
push
loope
xor
mov
mov
pop
pushf
lea
mov
pop
mov
inc
mov
add
les
pushf
sub
cmp
xchg
in
jno
sub
jmp
in
mov
sub
lret
mov
mov
mov
mov
and
insl
lods
push
divl
sti
xor
or
push
add
cmp
addr16
push
clc
and
mov
mov
shlb
push
jns
push
outsb
inc
rorb
adc
pop
xchg
addb
and
xchg
inc
rorl
ja
fdiv
lds
lret
dec
test
and
inc
lret
scas
xor
cmp
in
add
pop
sbb
and
push
inc
lret
cmp
clc
aad
ret
inc
shll
xchg
lret
dec
cmp
sub
cmp
dec
push
pop
scas
jmp
lods
test
out
jmp
mov
fistpl
lods
and
gs
xlat
mov
into
pop
xchg
fidivl
outsl
lcall
test
or
loopne
lock
rorb
jl
out
pop
stos
jno
lock
mov
pop
mov
cmp
mov
ja
push
push
notb
lods
push
adc
std
out
das
daa
sub
xor
cmovb
ds
pop
mov
sub
mov
inc
in
enter
or
xchg
inc
fdivl
add
push
and
les
ja
push
inc
cmp
test
fidivl
gs
pop
adc
and
or
cmp
jno
mov
sub
aaa
or
mov
ret
mov
mov
cmp
jmp
std
mov
fcmovb
stos
orb
push
cmc
xorl
inc
xor
lret
jg
inc
dec
lds
fdiv
sub
jl
xchg
inc
and
inc
adc
loopne
xchg
clc
les
inc
sbb
test
popa
lea
adc
ret
out
mov
sar
cmc
xchg
mov
xor
fprem1
inc
clc
pop
inc
jns
call
xchg
xchg
aam
std
xlat
jge,pt
or
or
xchg
mov
sub
adc
jmp
inc
push
cmp
pop
out
sarl
loope
or
test
cs
mov
test
data16
das
mov
jo
pop
enter
mov
ja
xchg
outsl
cmp
inc
sahf
bound
lret
xor
es
rcrl
cwtl
mov
inc
and
fistl
filds
mov
jecxz
or
iret
stos
sbb
xor
lods
and
cmp
adc
mov
push
loope
dec
sub
mov
dec
jne
mulb
mov
add
adc
jle
push
in
sbbb
mov
pop
add
cmc
out
pop
cmp
and
lahf
push
sub
movsb
lahf
dec
push
fmull
xchg
inc
xchg
push
hlt
js
in
test
or
loope
ds
sub
jae
sub
lret
mov
les
lret
xchg
nop
cmpsl
imul
push
jbe
inc
push
inc
cmc
xor
adc
jne
jo
mov
sub
push
sbb
pop
jmp
fbld
pusha
test
inc
push
xor
add
xor
add
cmc
sbb
or
shlb
mov
adc
das
xchg
adc
pop
out
ja
in
sahf
xor
adc
imulb
and
push
sub
ja
xlat
push
aaa
and
jecxz
imul
repnz
sbb
sub
ret
push
cmp
rorl
shll
repnz
mov
je
imul
sub
push
sub
mov
imul
test
dec
outsb
or
jae
in
in
test
dec
stc
lds
leave
dec
pushf
xor
inc
dec
mov
sub
ret
inc
push
aad
cmp
out
mov
mov
insb
and
cmp
les
cmp
roll
rcll
jae
add
movsb
das
mov
xor
mov
mov
rclb
cmpsl
lahf
lahf
bound
outsl
stos
add
aad
sub
jno
cmp
shll
add
outsb
or
pop
mov
fwait
xchg
hlt
fwait
adc
clc
sub
aad
pop
jb
lret
mov
pop
inc
adc
or
dec
xlat
and
aas
push
lea
jno
and
mov
ret
push
and
mov
adc
int3
inc
loop
stc
or
xchg
imul
push
sub
nop
push
jb
inc
push
jle
push
xor
daa
mov
scas
pop
test
jno
pop
jns
push
inc
xchg
int
and
pop
out
stc
and
dec
push
addb
pop
decb
pop
cmp
loop
push
in
or
mov
popf
xchg
xlat
adc
idivl
mov
and
fcmovnb
loopne
mov
sub
jno
jb
sub
mov
popl
pop
enter
fcmove
cmp
inc
add
cmpsl
mov
test
xorl
scas
nop
in
mov
add
sub
mov
sbb
test
push
mov
jnp
es
test
sahf
and
adc
cltd
out
inc
rolb
sbb
mov
mov
rcrb
inc
ljmp
ret
je
adc
les
or
adc
test
movsl
lods
movsl
jbe
aad
push
out
jle
inc
push
pop
sti
xor
mov
lret
mov
outsl
daa
inc
shll
jmp
mov
and
in
jp
and
lret
or
ljmp
mov
or
popa
push
and
xchg
lds
repz
cltd
dec
and
dec
sub
sbbl
sbb
cmp
inc
rclb
dec
arpl
inc
pop
rcl
dec
fwait
pop
pop
scas
scas
cmp
mov
mov
push
push
or
das
fcompl
xor
jmp
jmp
inc
xchg
das
repnz
xlat
add
dec
out
jae
mov
pop
push
push
or
jae
pop
scas
cwtd
aam
fidivs
cmp
xor
sbb
adc
cmp
aaa
cmp
push
mov
push
fstl
cmpsb
and
and
jp
mov
inc
pop
out
lds
icebp
shr
test
mov
and
lret
leave
push
ja
and
mov
sub
sbb
mov
adc
dec
icebp
out
jne
int
fldcw
jbe
mov
std
divl
sbb
xor
mov
mov
int
call
mov
dec
dec
jmp
inc
mov
fcomi
cmp
or
jae
mov
fucom
jl
mov
dec
push
ret
mov
sub
jge
jp
add
mov
movsl
xchg
jne
jo
enter
jg
call
mov
ja
and
rcr
sub
and
sub
mov
imul
mov
push
sub
mov
out
adc
fstpl
pop
adc
fisubs
xor
gs
xchg
mov
sub
mov
or
pop
lods
cmp
rorb
iret
sbb
sar
cwtl
das
mov
leave
push
je
dec
and
cmpl
or
loope
incl
push
inc
stos
sub
xor
cwtl
les
cmpsl
and
in
das
lods
jae
pop
xchg
loopne
test
inc
cmp
jle
lahf
mov
aad
mov
js
and
stos
pop
sub
mov
xlat
mov
andb
dec
fstpt
or
cs
mov
xchg
jl
and
lock
repz
pop
fbstp
push
ja
jo
push
push
andl
xchg
fxch
xchg
cmpl
arpl
sub
arpl
scas
sbb
xor
cmp
ss
jnp
out
cmp
and
push
or
jae
js
jo
scas
test
les
insl
cli
push
and
add
xchg
pop
and
or
mov
scas
jno
or
jp
lret
and
cs
mov
fstl
das
mov
ficompl
adc
loopne
pop
sbb
cli
sub
mov
stos
xchg
mov
dec
pop
fs
sub
mov
addr16
in
xchg
push
sti
in
adc
push
cmp
jmp
fwait
rclb
cmpsb
jae
stos
popl
sbb
fisubrs
sub
scas
and
mulb
pop
xchg
jbe
mov
jp
xor
fimull
mov
mov
std
mov
cld
fisttpl
rcrb
ss
add
roll
imul
adc
gs
fwait
cli
bound
loope
les
call
mov
cmp
add
mov
inc
cmp
inc
push
int
xchg
arpl
push
mov
lods
and
test
scas
inc
or
cmp
cld
dec
xor
pop
and
scas
and
mov
cmp
cli
out
adc
popf
int3
xchg
notl
mov
mov
mov
jge
xchg
pop
cmp
mov
dec
sub
jb
mov
xchg
pop
rcll
cs
outsl
adc
test
cmp
ljmp
xor
and
fimull
add
push
insb
dec
mov
out
sbb
test
movsl
popf
idivb
mov
adc
and
loope
shr
roll
sbb
mov
jno
iret
daa
xchg
aas
xchg
inc
xlat
push
sarl
mov
mov
out
mov
mov
sbbl
aad
or
rolb
lret
into
cmp
pop
cltd
add
enter
jle
fidivs
aaa
cltd
pusha
out
lret
out
rcrl
or
in
and
out
xchg
xchg
or
icebp
cmpl
test
mov
dec
frstor
fwait
lock
les
addl
in
sbb
scas
hlt
mov
jge
push
in
test
and
add
hlt
jp
dec
aaa
stos
jbe
test
push
shrl
jle
fs
cmpl
mov
mov
outsl
push
stos
shll
es
sahf
or
xrelease
jno
pushf
in
and
dec
jl
in
mov
dec
std
xor
outsb
or
mov
mov
mov
and
xchg
imull
in
inc
fdiv
ss
pop
scas
push
mov
fcom
daa
stc
pop
insl
pop
pusha
dec
fidivrs
xchg
icebp
test
jp
aad
inc
sub
mov
inc
lcall
pop
ss
sbb
nop
movsl
mov
sub
xchg
push
iret
frstor
and
push
or
je
aam
leave
ja
inc
adc
cmp
out
mov
dec
fldl
mov
xor
leave
xor
cmpsl
movsb
add
cmp
gs
testl
ret
mov
push
adc
xor
mov
lods
insb
cmpb
fistps
jae
repnz
lret
bswap
fwait
stos
scas
lods
outsb
data16
aas
and
or
mov
xchg
imulb
jae
xchg
jb
lcall
insl
cmpsl
leave
es
push
dec
cmp
std
push
dec
in
lds
loop
lea
popa
pusha
xchg
mov
lahf
sbb
aam
mov
mull
pop
insl
push
ret
jo
pop
pop
jne
jecxz
inc
xchg
xorl
fsts
mov
sbb
sbb
dec
lock
pop
adc
xor
xor
adc
and
fwait
xor
mov
jne
es
push
orl
fwait
add
adc
scas
mov
in
and
add
out
pop
mov
adc
insb
repz
add
xor
aas
pusha
sbb
lret
cmp
adc
push
add
loop
or
or
setnp
enter
adc
pop
jmp
movb
and
xchg
dec
cmp
stc
sbb
adc
xchg
pop
fwait
sbb
lock
cmp
or
nop
add
aad
inc
hlt
iret
sahf
clc
or
jecxz
jbe
imul
mov
mulb
mov
cmpsb
mov
push
sub
mov
xlat
cmp
adc
in
popf
mov
ja
inc
jmp
fs
aas
inc
aas
orl
dec
add
loop
orb
adc
dec
push
cmpsb
out
jns
sarb
cs
fdivrl
or
xchg
stc
test
mov
fwait
mov
pop
outsb
dec
das
xchg
sarb
mov
xchg
jle
decl
leave
adc
xor
call
jp
xchg
xchg
shl
call
mov
mov
mov
mov
jno
xor
lock
das
rclb
insl
push
dec
jmp
ret
test
xchg
inc
icebp
insb
lcall
insl
push
jno
adc
jno
jg
ds
in
cmpsb
cwtl
cmpsb
xchg
outsb
dec
not
ja
sbb
xchg
sub
lahf
adc
xor
pop
xor
imul
cmp
ret
sbb
sbbl
ds
xor
cmp
add
loope
dec
cmp
lds
fwait
pop
sahf
lahf
mov
sbbb
fsts
bound
pop
ret
sub
jnp
inc
xor
sbb
sub
adc
push
mov
mov
call
pop
into
cltd
imul
dec
call
adc
mov
pop
loope
sub
jbe
fs
mov
pop
push
pop
mov
es
loope
ss
movsl
mov
push
addr16
ss
nop
add
outsl
xor
repz
cmp
mov
dec
pusha
ret
gs
insl
or
in
or
push
add
enter
in
and
push
test
aad
xchg
cs
mov
aad
cltd
xchg
lods
int3
test
mulb
lcall
push
pop
jmp
jl
xor
ret
int3
sar
outsl
push
pop
dec
jmp
or
les
jno
in
sbbl
dec
loop
or
xchg
loope
and
push
notl
jmp
and
lret
nop
pslld
rcll
fcmove
jno
std
sbb
adc
out
cmp
dec
es
fs
jg
call
jg
mov
rcrl
punpcklwd
rolb
xlat
add
cmp
dec
pop
jp
adc
mov
in
jmp
loop
mov
adc
movsb
mov
lret
and
loop
jns
jnp
data16
mov
int3
pop
sub
cmp
pop
notl
pop
outsl
insb
sar
adc
dec
push
insb
xor
in
clc
scas
xchg
dec
stc
in
push
cmp
sbb
in
mov
data16
mov
push
push
or
imul
and
mov
data16
imul
enter
cltd
pause
mov
mov
push
add
imul
mov
pop
inc
jmp
data16
and
mov
inc
dec
push
pop
into
cltd
lahf
pop
dec
mulb
pop
jb
xchg
cli
and
adc
loope
daa
pop
mov
jecxz
fistps
jno
test
es
enter
push
mov
out
mov
cs
mov
xor
test
mov
in
jne
outsl
je
mov
cmp
les
test
mov
push
faddl
jl
xor
sbb
push
loopne
divl
mov
sub
ss
adc
fs
cmp
arpl
repz
andl
es
das
aad
xorl
mov
loop
dec
cli
test
jle
and
xor
sbb
fwait
xchg
add
mov
pop
cmp
adc
pop
adc
cmp
lahf
out
sahf
mov
dec
aaa
and
sbb
leave
stos
sarb
ss
das
outsb
sbb
insb
mov
xor
dec
jge
push
subl
add
adc
test
and
pop
add
push
and
vpunpckhwd
inc
aam
test
jb
adc
sbb
loop
imul
push
arpl
imulb
lahf
stos
mov
cmpsl
cmpsb
stc
adc
hlt
jmp
cwtl
scas
xorb
scas
mov
testl
push
pushf
je
mov
mov
xchg
ljmp
jno
vsubsd
xlat
fsubr
clc
jge
jo
popa
jecxz
jae
mov
pop
lret
gs
mov
pop
xchg
cltd
xchg
jmp
out
rcrl
xlat
jl
iret
test
sbb
adc
orl
sub
xor
pop
psrld
xchg
repz
loop
sbb
adc
xor
jmp
inc
xchg
popa
jb
lea
cmp
imul
dec
mov
imul
xor
and
jle
or
lods
sbb
jecxz
imulb
jg
hlt
inc
hlt
or
andl
add
xlat
cmp
subl
and
das
out
push
or
mov
fwait
mov
outsl
das
push
lahf
mov
jne
inc
es
je
call
sti
jbe
add
push
push
adc
jo
add
inc
rcrl
test
xchg
stos
popf
jb
inc
lods
movsl
lods
outsb
dec
cmp
cltd
lock
shrl
inc
jbe
insl
push
jle
push
enter
and
loope
mov
ret
aad
jecxz
les
jg
test
adc
add
xchg
mov
mov
xor
out
and
xchg
pop
fdivs
in
cmp
cli
scas
call
push
cli
addr16
and
in
cli
xor
xchg
lds
mov
lds
mov
push
je
arpl
inc
cwtl
xor
cwtl
jbe
js
push
iret
icebp
lds
mov
ret
ds
cmp
repnz
outsb
cs
jne
in
dec
jb
pop
dec
and
cltd
xchg
fisubl
push
pusha
jbe
push
mov
mov
xchg
daa
push
xchg
add
ret
pusha
in
cli
lods
out
dec
outsb
mov
movsl
rcrl
push
xchg
ljmp
push
test
push
pop
movsl
aaa
fucomp
inc
cmc
push
dec
stc
dec
mov
push
loopne
lods
fistl
in
int
ljmp
cmp
jbe
cmp
insb
ds
inc
inc
push
mov
sbb
and
add
adc
sub
gs
repz
fmull
lcall
jmp
loop
sub
orb
sub
xchg
inc
rcrl
jmp
cmpsb
push
das
xor
ja
mov
xchg
push
lods
das
pusha
push
popf
ret
and
jo
icebp
out
push
jns
filds
in
cli
daa
ss
loop
dec
pop
in
add
xchg
in
fidivrs
lret
into
imul
jg
add
mov
sub
pop
mov
ficoml
movsb
sti
or
fmuls
int
jp
mov
push
and
subb
fistl
xchg
lods
jb
xor
jae
mov
sti
push
sbb
mov
jno
imul
dec
mov
mov
push
sysret
mov
dec
popa
cmp
ret
sbb
arpl
orb
push
push
xchg
movsb
ficoms
mov
int
xlat
fdivrl
mov
xlat
hlt
jnp
xor
add
out
dec
lods
std
rclb
and
xor
sbb
test
in
adc
and
xchg
jae
int
adc
gs
shrl
jge
outsl
sarb
adc
cld
lock
cmpb
xor
pop
mov
and
mov
add
mov
cmp
hlt
sbb
cmp
fnstcw
push
repnz
xchg
lock
fimuls
enter
je
add
cmp
lods
shrl
cmp
cwtl
sbb
into
outsb
mov
fwait
cmc
hlt
dec
lea
mov
fdiv
adc
fcoml
aas
pop
or
iret
and
fisubrl
dec
sub
loop
repz
movsl
mov
or
lret
movsl
mov
mov
push
pop
out
mov
jno
rcl
push
push
aas
dec
pop
and
inc
mov
lds
test
or
cmp
mov
xchg
mov
xchg
dec
jp
mov
test
xchg
add
sub
xchg
ss
addr16
daa
adc
out
adc
inc
mov
xor
out
das
mov
clc
loope
dec
push
sti
pop
pop
imul
add
and
mov
mov
nop
mov
cwtl
adc
xor
fwait
shr
ljmp
leave
sub
push
xchg
or
mov
sbb
dec
and
shlb
jbe
push
sub
xchg
fidivrl
fnsave
cmc
inc
sbb
dec
jnp
mov
mov
xchg
dec
icebp
ror
and
loopne
leave
pop
lds
inc
cli
sub
sbb
xorl
out
jmp
jae
fldenv
loope
inc
ficomps
int
xchg
lods
jge
and
mov
push
mov
mov
xor
jle
fldl
jbe
dec
jnp
les
je
adc
mov
xchg
mov
daa
push
ficoml
loope
or
daa
fidivs
in
imul
xor
adc
push
into
push
ret
cs
inc
dec
and
rorb
mov
cld
jbe
xchg
sbb
shlb
popf
jne
arpl
out
inc
into
dec
add
push
lds
cwtl
lods
add
fidivs
xchg
sarl
mov
call
into
mov
jae
movsl
adc
in
sahf
mull
insl
into
sarl
cmp
test
shlb
mov
and
ss
aad
rcrb
xor
mov
pusha
push
repz
pop
adc
iret
jne
iret
dec
movsb
mov
cmp
test
call
aaa
rorl
scas
adc
or
in
sbb
and
push
int3
sbb
scas
lods
pop
shll
in
outsb
cs
push
je
in
cmpsb
push
jle
int3
into
inc
test
fcmovnu
lahf
push
lahf
out
jl
mov
push
and
rcrl
iret
pop
jmp
add
xchg
leave
mov
add
fdiv
xchg
in
xor
lret
sar
imul
jb
fsubrl
dec
xor
hlt
sbb
xchg
int3
arpl
inc
cld
mov
movsb
sbb
inc
mov
int
dec
gs
push
sub
pcmpgtb
sbb
cmp
xor
stos
in
fstpl
sub
popa
in
mov
shll
out
aad
add
sub
adc
mov
and
and
jl
mov
std
mov
aad
in
int
jns
pop
xor
jnp
cs
fwait
lahf
aaa
sbb
sarb
mov
mov
mov
add
ss
ficompl
jo
mov
add
xchg
xorb
lods
xor
sbb
or
repz
inc
mov
mov
and
xor
ss
jo
or
push
stc
sbbl
loopne
mov
cmp
mov
lock
xor
repz
mov
add
pop
add
push
pop
mov
clc
xchg
test
push
jl,pt
daa
scas
cmp
ret
sti
call
or
dec
and
repnz
imul
push
and
enter
insl
data16
xchg
cltd
jb
gs
out
pop
sti
add
sbb
scas
fs
and
mov
mov
xor
inc
mov
data16
sti
inc
cmp
jb
rcll
jge
fsts
cmpsb
adc
inc
pop
nop
cltd
mov
dec
test
push
lcall
mov
and
inc
or
fdivrs
stos
pop
js
movb
loop
xchg
in
xorl
jg
adc
jbe
pop
scas
test
push
insb
push
pop
push
scas
pop
aaa
test
das
sub
icebp
je
inc
xchg
jg
jl
scas
adc
and
push
and
cwtl
enter
std
outsl
mov
mov
and
fidivrl
and
repz
and
test
rcr
xchg
inc
jle
outsl
and
outsb
test
and
or
jno
pop
ficompl
dec
add
sub
hlt
lret
outsl
fistpl
cmp
int3
lahf
ss
cld
xchg
push
je
mov
mov
insb
sarb
inc
jno
mov
jg
push
outsl
mov
jnp
lock
les
add
movsl
inc
push
nop
xlat
rcr
out
int
es
orb
xchg
ja
fdivs
aad
data16
push
aaa
dec
mov
jns
sbb
xchg
ljmp
and
dec
shl
test
xchg
pop
push
add
xchg
loop
mov
xor
lahf
dec
sbb
xchg
pop
sbbl
xlat
cmp
or
outsl
cltd
mov
mul
inc
or
daa
adc
mov
enter
pop
js
int3
adc
jmp
add
in
dec
popa
aaa
daa
rcll
inc
test
ss
rolb
hlt
les
addr16
sub
push
repz
sbb
mov
in
or
jecxz
stos
lods
mov
push
cwtl
jno
xchg
jns
in
xchg
fucomi
js
adc
push
test
pop
dec
sbb
jg
push
fdiv
or
xchg
jl
idiv
or
jbe
bound
lea
push
outsb
add
fcomp
dec
xchg
adcb
ja
add
lds
mov
int3
shrd
out
inc
sbb
push
mov
shlb
lret
mov
test
je
aas
out
ds
aam
pop
imul
push
mov
xchg
in
aad
lds
out
inc
sbb
push
push
mov
jo
dec
sbb
stos
mov
aad
fsub
dec
roll
xor
mov
jnp
sahf
cld
push
add
dec
push
dec
cmp
push
popf
pop
lds
data16
and
push
inc
inc
add
repz
and
dec
push
add
aaa
int3
mov
xor
push
scas
xor
popf
fisttpl
inc
pop
inc
xor
xor
jo
and
les
cld
sub
testb
jo
mov
inc
cld
popa
les
ljmp
out
xchg
xchg
icebp
jbe
sbb
lea
lock
je
repz
xor
mov
repz
aam
xchg
ja
fstps
xchg
int3
icebp
fdivl
jno
cwtl
hlt
adc
in
or
les
loopne
orb
orl
sbb
outsl
mov
loope
jbe
hlt
int
sbb
xor
jp
mov
cmc
aam
sub
push
xor
and
mov
push
jmp
jp
cmp
mov
jne
sub
shl
mov
arpl
scas
jno
xchg
jns
inc
imul
pop
inc
mov
addr16
ljmp
cmp
loopne
pushf
mov
mov
jbe
push
cmpb
ljmp
sub
bound
rcr
aas
jns
pop
inc
icebp
inc
repz
inc
jnp
xchg
sbb
je
mov
sbb
xchg
add
jo
adc
push
lsl
fcmovne
icebp
push
adc
add
cmc
popl
push
adc
nop
loopne
cwtl
out
std
mov
sbb
inc
ret
xchg
cmp
fcmovu
pop
xor
cmpsb
xor
and
jmp
ja
adc
jmp
jmp
fldl2t
lret
movsl
pusha
dec
dec
pop
test
xchg
jno
je
jns
jecxz
mov
aad
xor
fnsave
jae
sub
and
insl
inc
sbb
cmp
into
xchg
stos
mov
ja
jl
xchg
je
call
movsl
mov
enter
movsl
push
bts
pushf
cli
pop
in
loopne
mov
sbb
mov
leave
xor
cmp
cli
insb
adc
mov
loop,pt
pop
jg
mov
imul
fidivrs
jo
daa
or
cmp
mov
dec
flds
shlb
mov
jae
sarl
push
xchg
repnz
add
mov
mov
mov
lods
adc
popa
andb
popf
fcompl
jg
movsl
add
jmp
sarb
out
lods
jno
pushf
sub
pop
mov
lret
lea
lods
mov
fmuls
sahf
mov
add
xchg
lods
ja
les
push
mov
xorb
lret
jb
movsb
adc
xor
addl
pop
fldcw
popf
adc
movb
sub
inc
outsl
cld
mov
sahf
loop
mov
outsl
sub
ror
out
adcb
xchg
popl
mov
mov
mov
das
xchg
pop
mov
adc
sbb
fucomi
cmp
mov
mov
sbbb
in
and
cmp
iret
lods
ret
pop
mov
sbb
pop
out
stos
xor
xor
mov
subl
mov
aad
loop
hlt
xlat
mov
out
inc
mov
clc
mov
push
mov
adc
mov
mov
in
cmc
jnp
xor
lds
stos
push
cwtl
xor
fwait
shll
js
cmpsl
jae
repnz
mov
jg
inc
or
mov
inc
pop
testl
cmp
push
add
xchg
fwait
sbb
addr16
loope
shrb
test
jnp
stos
sbb
xor
pop
jno
inc
insl
scas
push
push
scas
push
xchg
pop
loop
gs
sub
lea
inc
jne
and
sbb
int
daa
sbb
sbb
or
js
pop
shr
adcl
movsb
jnp
ret
fucom
xchg
mov
pop
push
lret
xchg
dec
mov
pop
pusha
stos
movsl
cmp
push
cmp
xlat
dec
test
pop
pop
xor
outsb
pusha
xchg
test
inc
mov
xor
sbb
repnz
mov
push
cmp
test
shll
jle
in
data16
lock
push
mov
bound
lods
pop
jle
pusha
test
mov
dec
pop
add
push
nop
rcl
jl
xor
out
dec
sbb
sarb
pop
scas
rolb
loope
jp
xor
cli
or
and
test
repnz
push
test
and
fisttpll
sbb
add
xchg
or
insl
jle
xchg
movsl
cwtl
cld
imul
pop
jae
nop
fcomip
popf
mov
cmp
cmpsl
mov
cmp
test
mov
xchg
jbe
jmp
cltd
mov
sbb
roll
sub
push
add
sbb
xchg
cmpl
or
cmp
andb
std
sub
fcoms
pop
mov
test
orl
pop
jmp
dec
ror
testb
xor
pop
subb
leave
jnp
sbb
sbb
insb
push
jnp
sub
ds
and
xchg
xor
adc
fisubs
jbe
lock
pop
mov
xor
stos
jnp
call
mov
lret
pop
sarb
xchg
out
loopne
push
mov
mov
add
js
rolb
aas
lret
mov
call
pop
into
dec
sub
dec
adc
push
jge
pop
les
orl
mov
and
repz
adc
sarl
inc
out
mov
xor
enter
xor
sub
arpl
test
add
push
aad
call
cmc
movsl
iret
jbe
or
movsb
sub
mov
out
clc
xchg
push
mov
int
gs
mov
adc
out
aad
call
pop
push
lods
shrl
dec
je
and
mov
test
push
scas
daa
xor
and
fstps
sbb
inc
jle
mov
sub
sbb
pop
mov
int
dec
orl
mov
ret
hlt
fcomp
xchg
push
test
btc
out
mov
aas
repz
repnz
in
push
pop
pop
inc
jecxz
jmp
ret
cltd
mov
mov
xchg
fxtract
jnp
test
stos
dec
mov
mov
lods
sub
daa
outsl
jae
and
fcmovb
movsl
jnp
pop
dec
or
mov
call
xor
shr
xor
addr16
mov
int
lods
jmp
mov
xchg
repnz
lcall
cld
sbb
lock
shl
mov
pop
ja
iret
dec
push
pusha
xor
jb
scas
or
sbb
and
cli
mov
or
xor
ret
cltd
adcl
mov
and
adc
mov
mov
shl
movsb
das
or
ror
cwtl
testb
pop
jmp
ljmp
imul
mov
push
ss
push
inc
mov
or
fiadds
inc
fcmovu
fs
js
jl
aaa
test
popf
mov
aam
jne
jl
lds
hlt
arpl
aas
mov
add
dec
repnz
and
rcrl
nop
mov
js
je
cld
or
movl
fcomps
jo
sub
sbb
and
cwtl
mov
mov
mov
push
aas
in
mov
mov
in
dec
xor
jne
std
inc
xchg
mov
or
mov
inc
lds
daa
out
xor
adc
aas
test
fnstsw
pop
dec
mov
nop
jg
ret
scas
insl
push
mov
mov
std
ret
loop
pushf
ret
pusha
dec
push
les
mov
and
jae
out
jo
jg
jge
mov
and
mov
inc
xchg
xor
pop
adc
inc
int3
xor
in
xchg
movsb
adc
mov
xor
hlt
mov
xor
in
negl
jo
jbe
xor
cltd
dec
and
sub
fsubl
xchg
xchg
or
xor
fnsave
rclb
mov
fildll
xor
jno
mov
mov
outsl
mov
arpl
iret
mov
jns
push
xchg
add
sub
out
xchg
mov
inc
add
xchg
fidivs
mov
movzbl
js
or
mov
xorb
mov
add
pusha
pop
or
and
and
std
enter
inc
cltd
outsb
xor
test
dec
fistpl
add
fs
fldt
cltd
imul
mov
pop
or
add
ret
push
int
andl
scas
sahf
call
mov
loop
xchg
scas
sbbb
dec
addb
lahf
stos
mov
pop
and
ds
or
sub
push
ret
jge
cmp
or
push
xchg
push
out
cmp
test
subl
mov
push
subw
mov
pushf
fistpl
icebp
shll
adc
ds
popf
dec
clc
xor
insl
sub
loope
xchg
pop
add
xor
and
cmp
out
inc
sub
jle
mov
dec
rcrl
jns
push
cmp
in
enter
rorb
ss
rorb
sub
mov
insl
xchg
scas
test
sarl
int
or
sub
out
mov
jl
mov
adc
push
inc
ss
cmp
mov
mov
movsb
pop
xor
mov
pop
mov
pop
push
outsb
imul
xor
cld
cmp
scas
sar
cmp
rclb
lock
in
mov
push
insl
push
mov
push
jle
into
sahf
jmp
mov
ds
mov
mov
in
pop
and
jl
lods
lods
add
dec
addb
mov
cld
jl
daa
scas
push
dec
mov
push
jmp
into
es
ret
cmp
mov
popa
sub
inc
and
xchg
xchg
and
lahf
mov
fsub
scas
xlat
inc
repnz
lods
pop
in
call
mov
enter
dec
mov
cmp
push
pop
pop
add
or
xchg
sbb
cmpsl
push
movsb
add
pop
mov
or
ret
pop
fisubrs
loopne
outsb
xchg
jl
or
call
jbe
push
xchg
cs
cmpsl
ret
adc
adc
push
lods
mov
push
adc
insl
js
adc
adc
inc
ljmp
xor
cmp
gs
int
push
arpl
mov
mov
lret
loop
xchg
mov
mov
cmp
mov
sub
stos
push
fisttps
push
scas
mov
rolb
xchg
in
xchg
cmp
addb
loop
jg
xor
rol
mov
test
pop
or
push
and
push
inc
cmc
lcall
add
mov
test
test
xchg
mov
pop
push
outsl
jecxz
and
loope
sub
sub
mov
sub
lahf
cmc
jp
test
outsl
bound
inc
jno
xor
add
lock
pop
fwait
mov
push
jmp
cmpsb
jo
cmc
imul
enter
dec
add
mov
xchg
add
dec
adc
mov
mov
dec
xchg
lds
jb
jl
jp
in
or
inc
inc
repz
jns
xchg
cmp
adc
in
vpmacsdql
pop
sbb
sbb
sahf
js
fidivs
das
fdiv
std
mov
ljmp
ss
lock
outsb
lods
and
cltd
rcrl
imul
adc
dec
ljmp
stc
insl
mov
lcall
push
jns
popa
scas
sub
jle
dec
pop
lds
pop
dec
xchg
repz
dec
out
mov
rcr
cmc
mov
dec
insl
fbstp
jle
lds
testb
lods
mov
pop
jne
push
cmp
mov
fucompp
push
inc
sbb
jno
lds
mov
cmp
add
shll
test
pop
popa
orb
mov
int3
cmp
int
mov
aam
mov
pop
imul
jge
jl
mov
mov
loopne
pushf
pop
fldcw
pusha
mov
jae
fcom
pop
xchg
sbb
mov
or
push
sbb
fildll
inc
xchg
lahf
ror
mov
imul
in
jmp
mov
jnp
in
aam
fisttpl
daa
lret
and
lret
ret
sbb
add
xchg
mov
jp
inc
ret
adc
pop
stos
inc
movswl
jmp
and
sub
stos
pop
mov
ja
dec
je
add
jmp
arpl
mov
fistl
push
mov
sbb
iret
inc
push
inc
dec
sbb
dec
xchg
test
pop
lods
mov
aas
mov
adc
fisubrl
sbb
inc
sbbl
repnz
adc
or
jb
decb
xchg
sub
jl
xor
sbb
jo
cmp
mov
adc
in
mov
insl
lods
hlt
clc
ret
sbb
pop
xor
cmp
push
scas
cltd
jge
adc
mov
xor
int
mov
in
cltd
arpl
mov
fdivs
cwtl
pop
jns
xchg
mov
inc
inc
popa
jp
hlt
and
pop
aad
loop
mov
imul
mov
jmp
jmp
sub
out
add
fildll
pop
js
pop
ret
outsb
clc
add
in
sbb
insb
inc
adc
imul
adc
sub
jmp
xchg
dec
mov
lret
inc
mov
push
jae
inc
nopl
in
movsl
sti
add
imul
ss
xchg
insl
imul
add
pop
aam
bound
adc
xchg
adc
fisttps
movb
insl
and
mov
sub
stc
popa
mov
cltd
sbb
add
int3
gs
movsb
in
lods
sbb
aad
test
sbb
cmp
sti
cmc
xor
shr
js
fwait
jne
mov
popf
push
push
lds
sbb
mov
jo
sbb
test
fisttps
fldl
pushf
pop
sbb
push
cmpsb
out
and
pushl
rorl
push
cwtl
push
sbb
movsl
xor
push
rol
in
adc
lock
adc
outsb
push
fidivrl
ret
push
test
dec
in
lcall
loop
outsl
sub
add
shlb
in
addl
daa
mov
cs
jmp
inc
scas
into
fwait
xlat
push
jns
lods
xchg
ss
inc
xor
in
mov
pop
aas
sbb
icebp
add
sub
ljmp
mov
adc
out
sti
xchg
mov
push
mov
shll
adc
js
add
je
arpl
negl
daa
add
outsb
mov
cmpsb
call
addl
out
pop
shll
ljmp
jnp
ret
jle
movsb
xor
jmp
cli
cld
fimull
jns
xor
aad
lret
cmp
add
in
dec
jb
push
xchg
mov
mov
dec
mov
xchg
clc
imul
cltd
jge
sbb
movsb
mov
jp
mov
cmp
adc
mov
or
inc
cltd
mov
std
shll
pop
cmpsb
dec
shrb
shll
je
or
mov
mov
jae
and
leave
adc
xor
mov
xchg
out
cmpsl
mov
xor
pop
xchg
adc
pushf
les
cmp
mov
mov
mov
cltd
imul
jecxz
add
lds
out
ds
orl
sub
mov
in
aam
adc
mov
loop
repnz
push
aam
and
stc
mov
out
and
mov
insl
repz
jle
mov
std
scas
or
lods
and
pmulhw
dec
test
sbbl
jmp
mov
dec
int3
ficoms
push
add
outsl
cmpsb
pop
dec
jp
std
sub
cmp
mov
add
mov
mov
test
xor
cli
mov
mov
outsl
clc
ret
sahf
mov
call
es
dec
into
mov
lret
xor
or
push
xor
lods
mov
aad
aas
xchg
jg
mov
cmp
mov
hlt
push
pop
aaa
or
stos
fucomp
push
inc
lret
aam
imul
xor
pop
inc
inc
cmc
dec
add
xchg
or
insl
aaa
outsb
gs
iret
mov
lret
jno
or
sbb
mov
push
ljmp
in
xor
hlt
sbb
std
aas
ss
loop
pop
insl
dec
aaa
in
mov
js
jo
mov
mov
xchg
jb
or
rcrl
clc
neg
out
push
and
or
jo
fcomp
int
mov
mov
pop
adc
mov
jns
or
xchg
notl
push
sarb
psrld
xchg
inc
stc
dec
lock
fcompp
outsl
or
pushf
pop
fwait
jnp
mov
outsl
int3
scas
fabs
enter
scas
shl
dec
mov
cltd
sbb
push
imul
cmpsl
mov
jno
xor
mov
imul
cmp
jmp
and
test
cs
scas
xchg
sarb
add
pushf
testb
sub
outsb
cmp
in
and
cmp
inc
mov
dec
cmc
sub
xchg
fs
xchg
and
scas
out
loope
fs
dec
mov
insb
pop
pusha
shl
inc
sbb
jmp
mov
int
test
in
or
stos
scas
mov
push
cwtl
mov
mull
dec
xchg
sub
scas
pop
out
shl
loopne
inc
fidivrs
scas
lahf
adc
in
js
nop
jmp
pop
pusha
imul
mov
nop
adc
fdivr
rorl
sbb
decb
negb
stos
les
inc
mov
mov
rcll
pop
sbb
mov
mov
push
inc
adc
inc
xchg
cmpsb
in
xchg
fstpt
pop
pop
inc
mov
fisttpll
mov
lds
sbb
sub
gs
pop
stos
mov
cmp
mov
les
push
enter
dec
and
mov
out
and
arpl
sub
int
les
lods
xchg
pop
inc
scas
flds
mov
int
fldcw
das
test
mov
push
test
add
pop
dec
insb
out
cmpsl
incb
popf
sbb
add
mov
mov
clc
mov
fsubl
ret
mov
aad
xchg
fiadds
or
and
cmp
pop
push
je
gs
mov
arpl
clc
push
ret
adc
aad
or
dec
mov
mov
jg
lahf
ja
inc
push
jl
into
aas
stos
jne
xchg
jge
sbb
das
add
cmp
popl
hlt
add
gs
lock
popa
mov
movsl
insl
jb
push
mov
mov
jg
fwait
push
add
jle
lods
mov
push
stc
scas
stos
in
jae
jmp
mov
orl
out
in
outsb
stc
dec
idiv
xor
mov
fcmove
sbb
mov
sbbb
xor
js
ss
xchg
adc
xor
add
xor
in
dec
fwait
int3
adc
ret
pop
fsin
fwait
or
hlt
push
pusha
sub
cmp
leave
dec
xchg
ret
daa
in
push
and
dec
adc
insb
cmp
xchg
mov
xor
je
xorl
mov
sub
mov
scas
lcall
stc
imul
imul
cmpsb
sbb
cmc
xor
cmpsb
scas
insb
loope
aas
xor
ror
sub
arpl
test
rolb
mov
iret
cwtl
and
into
dec
dec
ss
cli
mov
outsb
xorb
mov
and
cs
cmc
mov
cmpsb
icebp
cmovns
lret
adc
test
mov
arpl
jg
stos
iret
cmp
xchg
in
loopne
add
mov
imul
jge
cmp
mov
push
lds
mov
es
test
bound
fcmovu
scas
adc
mov
jp
inc
iret
es
cwtl
dec
nop
and
cmp
mov
lahf
xchg
punpckhdq
jno
or
xchg
in
dec
daa
rcrb
cwtl
xchg
jno
mov
and
addr16
stos
push
mov
pusha
adc
push
push
adc
stc
pop
popf
cli
inc
enter
cwtl
jns
aas
sbb
paddusw
jns
insb
fs
sub
ret
lock
lret
call
lock
mov
aam
xchg
rcrl
pop
mov
mov
int3
cmc
inc
fstpl
xchg
cmp
in
xchg
xorl
in
dec
test
xchg
adc
jg
in
mov
fdivrl
stos
loop
ficoml
push
push
cmpsl
ja
and
pop
cmp
scas
or
rorb
mov
outsl
jp
in
or
mov
push
mov
movsb
stc
cld
ljmp
mov
mov
push
mov
xor
mov
loop
pop
jg
test
xor
ja
push
das
xor
add
sbb
ret
dec
dec
xor
in
stos
dec
gs
mov
addl
dec
popf
xorl
pop
int3
or
adc
imul
int3
es
ja
mov
mov
mov
mov
loope
jne
inc
cmp
dec
inc
ret
xchg
sub
mov
adc
add
fwait
hlt
outsl
xor
or
inc
ficoml
lea
stc
pop
inc
fiaddl
and
sub
ja
push
outsb
xor
sbb
outsl
nop
dec
jp
mov
es
xchg
aas
sahf
ret
and
mov
fldl
mov
clc
out
inc
in
out
mov
cli
aaa
pop
mov
pop
not
mov
fwait
jmp
aas
sbb
fcom
inc
and
stc
mov
nop
out
fwait
call
fimull
sarl
xor
ret
dec
imull
dec
das
jmp
push
or
xchg
xchg
cmp
push
mov
mov
cld
in
into
adc
jno
jmp
andl
push
push
xchg
fs
fldt
popl
mov
fisubl
mov
lock
cmp
notl
xchg
inc
lcall
call
rol
dec
notb
mull
push
xchg
iret
mov
daa
add
adc
fsts
mov
ret
stos
mov
and
shlb
sub
cmpsl
imul
mov
jmp
inc
sbb
mov
cmp
cmpsb
std
in
bound
jb
ficomps
xchg
xchg
adc
dec
data16
mov
jo
imul
xlat
mov
mov
outsb
ja
and
add
adc
fwait
shrb
dec
shlb
sbb
jecxz
pop
out
mov
lahf
mov
test
sbb
mov
mov
psubsb
jg
jae
fimuls
cmp
call
andl
fwait
sbb
mov
hlt
or
ljmp
xchg
dec
ret
sub
sbb
mov
pop
call
and
stos
jnp
mov
xlat
mov
xchg
xor
xchg
out
jp
push
xor
xor
xor
xor
pop
jno
push
xchg
jae
sbb
sbb
shlb
adc
inc
lcall
jl
int
repnz
rorl
inc
fcoms
dec
jae
movsb
push
push
call
js
jg
cmpsb
cld
add
inc
mov
lods
mov
xor
call
jle
dec
or
sub
cmp
in
enter
add
xchg
shl
pop
mov
pop
test
aad
mov
xor
fbstp
jecxz
push
xchg
lret
arpl
push
pop
jno
leave
testl
or
cmc
js
insl
xor
mov
mov
mov
or
repnz
jnp
loop
pop
push
mov
call
aam
mov
and
sbb
xchg
icebp
pop
shl
cld
cmc
jae
hlt
fisttpll
dec
call
xchg
mov
flds
les
daa
cmp
cmp
shrl
test
mov
cs
sub
xor
adc
inc
icebp
mov
xchg
mov
xor
jo
and
popf
mov
mov
fsubrs
push
gs
leave
and
insb
cld
flds
nop
and
jb
pop
pusha
xchg
jns
sbb
sub
flds
ds
pop
xchg
lods
ds
movsl
mov
sbb
mov
int
mov
daa
mov
add
iret
jmp
dec
or
mov
gs
out
rorb
xor
or
mov
sti
pop
xorl
xchg
inc
inc
fs
outsb
in
xlat
add
jns
aas
daa
stos
mull
and
mov
and
bound
xchg
daa
aas
int
jnp
mov
xchg
dec
jecxz
sub
and
cmp
ret
inc
mov
jae
cmp
push
mov
pop
testl
jg
mov
adc
into
or
jge
push
cmp
or
scas
push
cmp
xchg
and
call
lret
enter
adc
pushf
mov
nop
movsb
add
mov
shlb
fmull
push
xor
push
repz
outsl
push
or
pop
inc
and
hlt
inc
adc
ja
add
sub
xchg
jge
pop
adc
sub
push
insb
gs
inc
pop
or
call
sub
jge
imul
push
aad
mov
loop
gs
popa
ja
pop
into
mov
mov
inc
lret
cmp
add
fsubs
mov
push
fcom
inc
fucom
push
mov
add
pop
mov
mov
mov
mov
ja
mov
mov
sbb
pop
insb
mov
sbb
jo
xor
iret
push
push
nop
xchg
mov
mov
cmp
data16
aad
fst
or
incl
add
lds
mov
push
lds
xlat
dec
jl
dec
repz
and
and
test
sub
call
addl
dec
lahf
jle
in
cltd
popa
call
inc
dec
mov
outsl
idivb
stos
in
pop
ret
push
adc
dec
nop
jmp
fnsave
pusha
dec
fsts
adc
mov
scas
insl
gs
gs
pop
in
mov
repnz
in
das
movsl
pusha
or
xor
and
divb
loop
dec
dec
push
or
mov
js
leave
or
or
mov
fnstsw
xor
or
lods
jnp
adcb
enter
dec
test
jbe
fsubr
xchg
repz
push
int
repnz
jbe
mov
xchg
clc
ret
sahf
cwtl
cmp
mov
stos
sub
fmulp
popa
fadds
test
cltd
mov
mov
hlt
push
and
imul
hlt
enter
jnp
xlat
jae
or
setl
inc
mov
mov
inc
ret
hlt
stc
xchg
cmpsb
mov
push
pop
sbb
test
repnz
push
push
and
int3
je
xchg
xor
xor
test
or
and
xchg
xchg
adc
pop
inc
fidivrs
dec
nop
push
iret
fwait
and
mov
fs
jmp
jb
sub
or
mov
into
push
clc
rclb
arpl
in
mov
dec
fwait
cld
jmp
out
ret
push
aaa
clc
data16
mov
jo
loope
add
pop
movsb
mov
push
lds
cmp
mov
mov
sub
sub
cmp
mov
sbb
stc
mov
stos
mov
sub
inc
jne
xchg
imul
cmc
xlat
cmpsb
mov
pop
je
lcall
shlb
mov
daa
sarl
mov
xor
andb
xchg
push
fisttps
sub
sub
loope
pop
ljmp
xchg
mov
adc
loope
mov
cmc
sbb
pop
jo
sahf
jnp
loopne
pop
fdivrs
pusha
mov
cmp
cmp
xchg
xchg
lret
in
outsl
cmp
mov
xchg
mov
jb
fstps
pop
pop
int
sbb
addr16
cmc
xchg
dec
das
jge
push
es
addr16
mov
fcoml
sti
aas
pusha
jecxz
daa
push
mov
push
adcl
pop
and
pop
ret
mov
mov
into
inc
pop
cmp
mov
push
mov
xor
sbb
pop
jae
rol
or
xchg
fmulp
push
ret
jle
insb
xchg
mov
add
out
push
push
out
cmp
mov
rolb
into
mov
dec
dec
mov
test
ret
in
daa
pop
hlt
mov
xchg
lret
and
and
popf
ljmp
aam
cltd
xchg
aaa
or
mov
stos
cld
decb
inc
mov
aad
pop
pop
rolb
and
cmp
dec
mov
jno
or
loope
scas
and
push
and
xor
in
cmp
push
int
dec
or
adc
arpl
repz
inc
adc
cmp
dec
cs
mov
dec
ljmp
mov
outsl
xchg
rolb
mov
cmp
xor
bound
arpl
js
mov
or
nop
dec
loop
xchg
mov
xchg
in
ss
sbb
xor
and
insb
iret
sub
or
gs
cmp
adc
pop
js
mov
mov
dec
bound
cwtl
roll
or
and
sbb
std
out
iret
jg
sub
sub
jno
pop
std
xor
and
rorl
mov
lcall
fdivrp
and
mov
mov
and
psrld
adc
inc
stos
mov
popa
jbe
cmp
push
inc
push
mov
jo
cltd
add
or
sub
mov
push
mov
lods
gs
pop
or
lds
push
inc
lahf
mov
lods
jp
xchg
xchg
xor
dec
mov
and
add
xchg
xchg
lock
dec
loope
and
xchg
jmp
add
bound
xor
jl
pop
mov
cmp
dec
stc
dec
add
xor
clc
sbbl
pushf
out
movsb
stos
fld
add
sarb
jp
pusha
add
add
outsb
push
or
add
adc
or
cltd
fisttpl
enter
test
push
testl
scas
pop
inc
push
inc
or
dec
jno
in
cltd
outsl
mov
sbb
adc
adc
incl
mov
lcall
sub
outsb
adc
insb
scas
cld
enter
push
mov
or
cltd
pop
xor
jl
xlat
dec
add
jg
clc
addr16
mov
data16
scas
cli
icebp
cld
iret
in
mov
pop
cwtl
daa
mov
lods
loope
sar
jp
std
jl
push
filds
inc
or
in
mov
stc
mov
mov
xor
mov
push
cli
les
add
adc
sbb
insb
xchg
or
fisubrs
and
jg
clc
push
add
and
movsb
pushw
into
mov
cmp
cltd
add
push
bound
push
and
cmc
sub
outsb
out
cmc
dec
fs
adc
pusha
and
ss
insl
movsl
jno
dec
xchg
daa
mov
jb
inc
add
mov
mov
mov
push
inc
mov
dec
into
or
int
divl
push
xor
mov
jo
test
popf
sbbb
sbb
push
movsl
movsl
mov
imul
jle
aad
dec
sub
hlt
xchg
add
daa
mov
push
subl
and
andb
sbb
jmp
xor
mov
rclb
js
jmp
and
or
sbb
test
in
mov
ss
shl
addb
or
add
sarb
lods
mov
clc
test
xor
cmpsl
jg
push
cmp
cmp
ja
cmp
movsb
mov
adc
jge
push
inc
sbb
pushf
push
push
or
unpckhps
mov
lea
xchg
leave
lcall
faddl
fisttps
mov
mov
repnz
add
sub
xchg
push
add
lea
lahf
lret
fnstenv
add
sub
mov
xor
inc
mov
xchg
xchg
mov
pop
jns
add
add
push
sbb
add
push
ret
fisubs
jle
ljmp
cmpsb
lcall
test
sarb
int
mov
pusha
in
sub
leave
lock
inc
xchg
inc
dec
scas
in
pop
int
sbb
shrl
movl
add
cmpsb
pop
aaa
push
dec
lahf
jg
jecxz
jns
cmp
nop
push
subl
subl
test
xchg
jae
mov
in
xor
incb
jmp
jg
adc
gs
cwtl
icebp
repz
outsl
in
clc
cmp
mov
mov
mov
or
or
or
cltd
cld
repnz
sbb
aad
jb
xchg
xor
addr16
jo
out
xor
insl
pusha
push
adc
mov
mov
mov
add
ret
push
mulps
mov
mov
and
sub
movsl
sub
or
in
clc
jg
ret
xor
push
mov
mov
fldenv
cmc
imul
or
xchg
xchg
mov
push
sarl
dec
inc
fisubrs
sub
mov
daa
xchg
jbe
imul
into
or
test
aad
xor
push
add
or
pop
enter
lahf
js
lods
call
aad
or
mov
test
ljmp
add
inc
scas
lret
mov
inc
int3
adcb
pusha
push
stos
sub
int
outsb
fdivl
lret
lahf
andb
sar
and
dec
lcall
outsl
ja
push
aam
and
sbb
pusha
mov
lcall
iret
loopne
movsb
repz
sbb
scas
mov
sub
or
mov
mov
dec
mov
rcrl
stos
pop
xchg
leave
adc
stos
cmc
cmp
and
push
adc
xor
dec
ss
mov
rcrl
in
mov
lods
push
pop
int3
mov
iret
das
xor
mov
in
mov
pop
lcall
sti
inc
fs
cltd
in
pop
jbe
mov
add
int
lret
aam
add
pop
movsl
fdivs
cmp
ja
es
push
jnp
out
cmc
lods
stos
xor
cmp
fnstsw
jns
inc
mov
xlat
jb
shl
xchg
cmp
push
jae
cwtl
add
stos
loopne
jae
fs
pushf
adc
insl
sahf
xor
inc
pop
sbb
sbb
notb
mov
outsl
fmuls
rolb
or
fimull
movsb
js
mov
mov
xchg
xor
cwtl
xchg
int3
fimuls
sti
fidivs
cs
lret
int
push
dec
dec
aam
es
xchg
pop
push
repz
dec
inc
push
xor
lods
fcmovbe
inc
jae
push
mov
hlt
sub
addr16
testl
push
lcall
add
int
sub
and
cwtl
cld
mov
push
fdivs
movsl
add
or
dec
mov
imul
daa
enter
shl
push
out
movsb
mov
sub
xchg
lea
cld
jp
lret
mov
inc
xchg
cs
cmc
subl
fcoml
dec
fisubl
div
lock
push
popf
sbb
fsubl
adc
inc
and
sbb
mov
out
push
jo
addb
and
mov
mov
dec
or
loopne
or
pop
out
insb
dec
stos
aam
mov
dec
push
aad
fwait
int3
xor
testb
movsl
cmpsl
push
ljmp
loop
xor
and
in
lret
xchg
jl
xchg
jb
test
movsl
xor
xchg
pusha
rcrb
mov
lret
iret
ja
movsl
out
jne
mov
stos
aad
cmp
push
pop
popf
mov
ja
hlt
xchg
rorb
pop
repnz
push
mov
int
jle
inc
mov
shll
je
xlat
outsb
sahf
ficoml
mov
repz
pop
push
jge
out
or
sub
inc
jg
pop
mov
lret
fcoms
push
lcall
pop
jmp
out
mov
sub
mov
sub
cmpsb
mov
dec
and
mul
stc
cmp
es
mov
sub
mov
es
outsl
dec
sbb
or
xor
ror
mov
mov
sbb
xchg
fdivrp
loopne
out
mov
jbe
inc
fldl
jnp
cmc
adc
addr16
mov
outsb
inc
mov
mov
sarl
aam
inc
repz
dec
notb
fnstenv
jns
and
adc
xor
xchg
mov
adc
mov
pop
hlt
adc
jnp
test
ljmp
and
sub
sub
push
jmp
and
bound
ja
sti
inc
popa
icebp
xlat
rcl
in
es
fsubrs
jae
fs
in
jb
sub
xchg
out
jo
and
xchg
out
in
xorb
js
push
push
aad
fistpl
sub
fldenv
fists
mov
xchg
std
repnz
mov
xchg
and
stos
push
test
and
daa
lods
call
xchg
jg
mov
xor
lock
out
rolb
fdivrs
std
mov
orb
sub
je
das
dec
jl
lahf
aad
sub
out
sub
xchg
shll
in
push
push
jge
loopne
dec
inc
dec
cmp
push
jmp
push
adc
dec
xor
mov
cld
mov
jle
jns
dec
out
imul
pusha
and
sbb
cmp
cmp
xchg
jge
mov
in
repz
sbb
sbb
add
sbb
cld
in
adc
lods
adc
xchg
cmpsb
dec
ret
sbbl
pop
xor
fs
leave
and
xor
in
mov
inc
ret
movsb
icebp
arpl
inc
roll
pushf
cmp
push
and
ret
adc
fisubl
xchg
cld
or
sub
pop
inc
in
xchg
ds
mov
fs
aas
repz
insb
negb
mov
shlb
mov
push
inc
pop
sbb
dec
in
in
in
sub
cmp
repz
or
cld
aaa
xor
dec
ja
or
jns
add
lret
fs
fildll
lods
pop
dec
inc
roll
dec
mov
sub
adc
adc
xor
sarl
loop
scas
loopne
push
push
jb
in
cmpsl
popa
lods
mov
cmp
or
loopne
jbe
xchg
pop
xchg
lds
sbb
dec
adc
fcmovne
inc
or
rclb
add
jno
jo
lahf
cmc
lock
out
sbb
push
ret
in
mov
mov
imul
pop
dec
push
cmp
fcoms
inc
mov
jns
dec
inc
mov
cwtl
xchg
nop
icebp
xchg
mov
pusha
les
lods
dec
outsl
dec
jb
pop
fstp
adc
lret
and
cmp
sbb
mov
adc
lahf
rorl
fildll
sbb
add
int3
lret
or
arpl
inc
adc
sub
cmp
ret
or
repnz
pushf
dec
mov
jb
pop
call
sub
xor
mov
jmp
fbstp
ss
andb
ds
mov
inc
faddp
push
insb
pop
add
lret
lods
pusha
pushf
fstpt
cli
dec
jns
push
rcrb
cmpsb
and
push
out
movsl
rclb
xor
aam
out
mull
lret
add
daa
cltd
xor
and
das
dec
pop
mov
mov
pushf
lea
pop
mov
mov
fucomi
lods
jnp
mov
lods
cwtl
mov
sbb
push
sbb
sub
movsb
in
movsl
fwait
out
aam
std
xchg
sahf
sub
je
adc
push
ds
pushw
std
xrelease
push
add
and
sbb
movb
jnp
cmc
push
popf
mov
clc
mov
mov
cmp
sbb
add
mov
fidivs
mov
scas
insb
cwtl
paddusw
mov
test
es
lret
dec
xor
insl
inc
and
xor
cmp
cmpsl
in
rorb
ret
mov
push
or
xor
xchg
jb
roll
push
cs
pop
ror
jnp
xchg
mov
movsl
repz
adc
ds
inc
ss
lods
mov
test
dec
and
and
jo
jo
repnz
jmp
loopne
repnz
xlat
mov
and
sbb
js
xor
xor
mov
ret
test
pop
dec
mov
scas
unpcklps
sti
pushf
imul
mov
dec
cmpsb
in
sub
push
psraw
cmp
xchg
pop
inc
popf
pop
xchg
sub
add
push
xor
cmpsb
pusha
mov
mov
sub
xorl
dec
insl
inc
call
std
adc
mov
inc
mov
ud2
pop
out
pop
insl
test
aas
pop
leave
pop
and
dec
xor
and
pushf
push
nop
fsts
mov
fldenv
aam
sarb
xchg
adc
push
dec
add
xchg
pop
xadd
sub
mov
sarl
lock
icebp
push
lea
aam
stc
jmp
add
add
dec
lahf
xor
dec
push
scas
xor
pop
push
out
sar
inc
pop
mov
idiv
lea
loope
add
movsl
jp
ja
das
jb
fwait
or
xchg
hlt
call
lret
inc
push
in
jg
push
mov
dec
mov
dec
into
inc
leave
outsl
xor
mov
xor
iret
pop
sbb
xchg
or
pop
test
cmc
jb
pop
loop
adc
outsb
xor
adc
push
xor
or
push
fildll
call
adc
aas
cmp
imul
cmpb
xlat
add
rcl
imul
ret
pop
insl
fwait
jns
jl
mov
jg
faddl
mov
push
ds
mov
lods
xchg
or
fsubp
add
push
jnp
adc
jl
lahf
lret
fistps
adc
insl
repnz
sbb
mov
ret
xor
out
movsb
repz
xchg
sub
pop
pop
cmp
jbe
pop
fisttps
cmp
jle
in
andl
arpl
arpl
test
xor
or
cmp
mov
mov
adc
ret
add
bound
xor
repnz
ds
int3
mov
pop
pop
xor
fcmovnbe
cmc
xchg
cmpsb
mov
pop
nop
lock
xor
xchg
cltd
pop
mov
cmp
cmp
int3
imull
mov
lahf
xor
adc
lods
mov
bound
xor
mov
xchg
mov
inc
mov
pop
out
out
mov
bnd
cmp
sub
dec
bswap
jmp
divl
jne
outsl
mov
jg
jle
xchg
cmp
and
cmp
dec
pop
jmp
andl
xchg
mov
out
inc
inc
cld
int
push
sbb
adc
inc
adc
inc
add
inc
mov
inc
jb
add
jp
loope
push
add
andb
adc
outsl
jl
fbld
roll
cltd
in
xor
xchg
jbe
aas
jl
push
loopne
adc
lods
pop
inc
inc
push
stc
mov
mov
call
mov
sub
lods
adc
scas
jmp
int
adc
add
pop
mov
sub
sub
inc
add
inc
lock
dec
cmp
jmp
std
dec
sbb
adc
iret
cs
jecxz
push
fxch
mov
inc
clc
pop
pop
pop
sub
xchg
mov
push
add
ljmp
sub
in
or
and
andb
sbb
mov
scas
fsubrs
jge
loop
sub
jae
cs
add
xor
xchg
in
inc
or
push
stos
popa
jns
pop
add
sub
and
cli
push
xchg
jp
rcr
mov
test
cli
add
iret
inc
aas
inc
fisttpll
sbb
adc
gs
jb
popa
in
mov
push
fdivl
sub
ljmp
xchg
pop
push
push
adc
mov
mov
out
es
jg
push
das
and
jg
mov
je
int
fisubrl
adcb
sbb
jmp
add
ja
rcrl
pop
idiv
inc
jbe
mov
cmpsl
in
or
jb
and
dec
decb
pushf
loope
pusha
cli
jne
jb
xlat
add
add
mov
into
pop
xchg
xchg
cmp
and
pop
pop
xlat
xor
mov
test
mov
pop
mov
push
pop
cs
icebp
stos
mov
mov
push
push
pushf
or
sub
shl
pop
adc
aad
add
cmp
mov
push
jmp
test
mov
insb
adc
xchg
mov
aas
xchg
fmul
dec
subl
ss
call
xchg
sub
clc
jp
mov
mov
insl
outsb
push
cli
cmp
and
scas
pop
sbb
sbb
add
in
insl
clc
jmp
push
xchg
sbb
fistpl
in
inc
bound
fcoml
jbe
pop
fnsave
mov
dec
xchg
mov
pop
in
insb
movsl
scas
imul
mov
lret
pop
xor
or
cmp
sub
sub
add
filds
sub
sub
push
xchg
cld
dec
jp
mov
or
mov
cmpb
push
jp
jge
sar
mov
jle
push
clc
xchg
into
mov
xor
shll
lcall
adc
lods
push
test
cmc
pop
cwtl
in
daa
jnp
jmp
test
adc
nop
lods
mov
dec
stos
aas
or
xchg
js
add
xchg
jbe
and
xchg
pop
jae
iret
push
sbb
sti
xchg
or
std
test
inc
mov
jb
nop
push
push
sub
or
ror
ss
aam
lods
mov
icebp
cmp
fstl
jmp
mov
je
mov
bound
mov
jo
jns
popa
loopne
testl
sbb
mov
adc
enter
aaa
lret
or
cmp
es
adc
mov
lahf
std
add
dec
push
or
inc
mov
pop
ret
clc
inc
inc
sbb
mov
stc
jge
dec
ret
jle
inc
sbb
gs
fldl
out
jne
jl
insb
sub
popa
bound
adc
rorb
adc
sub
push
sub
in
mov
cmp
xlat
mov
nop
dec
mov
es
dec
imul
dec
rcrb
and
lretw
mov
fs
jo
push
ret
push
and
or
ret
dec
dec
mov
popf
mov
mov
aaa
mov
mov
leave
push
mov
arpl
lods
jl
call
dec
jmp
roll
and
cmp
cmc
push
mov
fisttpl
adc
fwait
xor
adc
push
icebp
sub
stos
pmullw
add
xchg
cmpsb
aam
xor
roll
int
adc
xor
lret
dec
outsl
and
push
cmp
push
in
and
cmp
mov
rcr
pusha
test
scas
inc
jp
leave
xor
xchg
imul
jl
fstps
or
aam
jno
mov
and
mov
int
inc
daa
cmp
int3
pop
push
pusha
test
inc
or
sbb
ret
fildll
xchg
addr16
sbb
loopne
ret
lods
add
xchg
push
xchg
lcall
stos
xchg
hlt
mov
incl
xchg
xor
adc
pop
lret
mov
std
push
jne
ljmp
jecxz
sbb
sbb
sub
fs
mov
repz
cmp
push
pushf
inc
dec
in
add
mov
sahf
movsl
add
adc
gs
cmp
call
mov
jae
fsts
popf
xchg
inc
mov
jno
jae
data16
aam
push
add
addb
add
dec
or
pop
mov
test
mov
jo
push
jp
xchg
cmp
xor
out
mov
outsb
loop
cli
jmp
mov
dec
outsb
or
scas
js
loop
cwtl
aam
pushl
imul
jg
jno
xorl
cmp
iret
mov
xor
sbb
xchg
sysenter
js
sub
or
mov
dec
out
push
xchg
mov
pop
test
and
add
and
lods
add
aas
sbb
shl
cs
xchg
adc
mov
stc
add
xchg
sub
repnz
adc
pop
push
sub
xchg
clc
clc
shl
jae
push
jnp
out
jbe
mov
jae
fisttpll
scas
fnstcw
aaa
outsb
cmp
mov
sbb
lea
mov
inc
add
xchg
data16
pop
add
inc
adc
fldt
cltd
addr16
lcall
xchg
jp
push
loop
insl
sbb
arpl
in
fsubs
adc
fmul
daa
pop
jnp
push
imul
push
es
imul
lods
cli
flds
loop
inc
inc
ja
pusha
cmp
pop
add
flds
pushf
lods
xchg
and
jle
es
sahf
clc
jns
add
insl
loop
fists
dec
lcall
dec
shrl
out
out
in
sub
fwait
cs
lods
mov
jl
in
sub
jmp
shll
ljmp
xchg
add
mov
sub
xor
notb
jbe
cmp
add
mov
loope
dec
rcll
jb
add
mov
push
scas
dec
popf
into
sub
adc
aas
and
mov
push
jae
adcl
sub
pop
sub
stc
bound
jl
pop
pusha
rol
push
pop
ds
sbbb
dec
test
pop
jns
arpl
mov
into
push
jg
ss
inc
mov
dec
and
into
ds
aas
push
mov
mov
add
mov
cmpsb
sub
jno
mov
inc
sbb
and
push
inc
push
cmp
lods
xor
inc
loop
mov
sbb
into
fadds
daa
add
xchg
sub
imul
mov
mov
and
mov
stos
add
mov
test
push
aaa
cmpsb
js
jnp
mov
xchg
ss
sbb
push
mov
xchg
mov
mov
xor
nop
sbb
cmpsb
mov
clc
push
jl
mov
call
push
imul
into
xor
loopne
popa
adc
push
jp
js
es
pop
adc
outsb
lods
xor
mov
dec
add
outsb
je
mov
cmp
adc
or
in
xchg
das
dec
aaa
lahf
mov
mov
jg
scas
mov
push
or
mov
mov
frstor
cltd
add
fcmovb
lock
cld
mov
inc
scas
cltd
jnp
mov
cmp
leave
push
lret
mov
jmp
fsub
cmpsb
int3
mov
push
fs
fildl
adc
pop
sbb
repnz
pop
in
outsb
fwait
fwait
mov
mov
and
nop
orb
daa
mov
push
adc
cmp
jo
out
leave
in
mov
shrl
add
xor
dec
dec
flds
xlat
loopne
pop
inc
in
mov
dec
inc
inc
mov
xchg
xchg
into
insl
or
cmp
fdivs
push
jb
lret
dec
ja
and
or
daa
cmp
inc
push
int
jno
sahf
add
mov
loop
xor
pop
div
xchg
and
sarb
add
add
adc
jg
lret
sbbb
test
and
insb
push
fisubrs
push
lea
sbb
cmpsl
sub
mov
outsl
insb
imul
pushf
mov
das
adc
ret
cmp
xor
fidivl
repz
das
add
cli
pushl
and
sbb
jno
lret
js
and
jo
cmp
int3
push
nop
shlb
shlb
pop
pop
sub
in
inc
sub
aas
mov
push
mov
stc
xor
rep
test
mov
sti
lret
out
loop
jno
neg
movsl
mov
sub
dec
inc
xchg
jo
and
pop
adc
jae
fwait
cmp
fisubs
pop
mov
movsl
rcrl
cld
inc
inc
out
pop
cmpsl
jns
outsb
data16
xchg
jne
pop
iret
out
rorl
popa
imul
cmp
in
pop
stos
adcb
jae
mov
or
sti
push
add
xor
mov
mov
sbb
outsl
inc
movsl
push
out
jg
mov
sbb
mov
test
or
jno
pmuludq
sbb
jne
int3
adc
dec
dec
sbb
mull
push
jae
lret
pop
adc
mov
or
outsl
inc
xchg
cltd
sub
pop
stc
pop
cltd
mov
incl
inc
jb
add
sub
cmpl
movsl
mov
add
lret
arpl
sti
mov
dec
dec
and
sub
jl
sbb
cltd
mov
int3
stos
bound
xor
imul
xor
out
jbe
xchg
add
rcrl
sbb
insb
jno
fldl
or
inc
jp
xchg
push
mov
sti
push
lods
popf
lock
push
cmp
sub
fs
push
out
inc
fcmovnu
gs
jo
es
iret
pop
std
sti
das
xchg
inc
lcall
sub
scas
mov
xchg
aad
movsb
mov
into
mov
sti
jecxz
fstp
or
dec
das
mov
aaa
sbb
out
jnp
popf
fcmovu
push
pop
pusha
sbb
push
or
sbbl
xlat
imul
mov
xchg
push
push
mov
jbe
jp
jecxz
inc
sti
dec
mov
mov
xchg
ss
shll
xchg
insl
sbb
or
and
mov
mov
arpl
pop
inc
mov
fucom
mov
push
push
jno
leave
and
test
xor
mov
sbb
mov
add
cmp
inc
add
jae
ljmp
sbb
pop
push
pop
sbb
cmp
lret
cmp
sbb
pop
inc
xchg
shl
mov
in
jge
adc
jne
imul
test
lds
sub
sbb
sbb
stos
and
aad
loopne
ja
int
mov
neg
and
fmul
pop
pop
pop
mov
push
lock
mov
mov
aas
lahf
mov
and
lods
jg
movsb
push
call
xor
jo
mov
outsl
xor
mov
mov
lret
mov
cmp
sub
or
cmp
jmp
mov
mov
mov
or
push
cmpsl
out
cltd
or
dec
xchg
imul
push
push
push
pop
add
fcomi
dec
mov
add
cmp
rcll
cmp
enter
lods
and
in
mov
mov
push
lock
or
int
in
aad
idivl
add
sbb
movsl
add
push
sahf
fildll
fwait
out
xor
jne
ret
jno
add
mov
in
cli
dec
push
dec
xor
cli
outsb
cli
fnstcw
xchg
lock
mov
arpl
cli
pop
push
xor
xchg
mov
cmp
dec
in
xchg
xor
stos
sub
add
push
aas
or
cltd
and
xchg
mov
dec
daa
inc
add
out
push
insb
shll
mov
loope
push
push
lcall
in
daa
bound
sarb
outsb
and
test
mov
push
das
mov
in
xchg
out
xchg
pop
imull
addr16
sbb
jg
dec
stc
cmp
and
repz
mov
mov
pusha
and
stc
adc
jae
clc
popf
je
mov
push
or
push
sub
gs
jns
pop
shll
sub
imul
scas
scas
lahf
lret
push
test
mov
jg
xlat
outsb
jmp
lret
out
outsl
jle
testb
cmp
mov
fldenv
xchg
loopne
in
dec
push
loopne
out
movsb
sahf
scas
pop
fadd
mov
pop
push
mov
sbb
and
jmp
and
mov
rclb
and
fwait
enter
ds
inc
add
test
xchg
pop
pop
mov
lods
cld
hlt
iret
xor
dec
subl
fimull
in
jecxz
dec
jbe
push
roll
jmp
int3
sar
cmpsl
xchg
aas
xor
xlat
adc
pop
push
jmp
lds
les
hlt
push
pop
sbb
jbe
cltd
inc
jns
nop
push
jle
test
aas
frstor
adc
out
or
sahf
mov
gs
lods
mov
inc
popf
or
les
fildll
or
adc
cld
adc
ja
lret
gs
xchg
pop
sub
or
stos
and
aad
jge
ror
stc
xchg
mov
repnz
addr16
ficompl
int
out
imul
mov
outsl
out
pop
sar
shl
cmp
pushl
sbb
scas
push
clc
dec
mov
lods
jae
test
and
stos
adc
cwtl
xchg
bound
out
daa
or
pop
and
in
cmp
shrl
loopne
xor
loopne
aad
push
mov
sub
push
mov
jb
push
stos
rol
sub
push
sti
mov
mov
fmuls
jns
add
addr16
inc
lock
insb
jle
fidivrl
jmp
test
add
mov
test
xchg
ret
mov
in
cmovs
adc
mov
and
out
movsb
and
push
stos
cwtl
mov
fnstcw
in
call
in
inc
sbb
mov
roll
mov
rol
icebp
ja
aad
les
mov
into
rorl
scas
fsubl
push
jo
aad
scas
enter
cmp
mov
sbb
test
lds
mov
pop
push
bound
ss
enter
adc
shll
leave
inc
stos
dec
pop
pause
jp
sbb
out
and
ret
cmp
out
jecxz
adc
xlat
fisubs
mov
push
stos
gs
xchg
push
dec
clc
lock
mov
or
aas
sub
inc
fs
nop
lcall
into
jle
movsl
add
pusha
add
xchg
sti
mov
and
add
aad
mov
dec
mov
inc
mov
sbb
repz
sarl
sbb
xor
cli
insl
inc
mov
xchg
sbb
sub
aam
mov
aad
mov
jbe,pn
mov
push
and
xor
movsb
mov
insb
mov
lods
loopne
cmpsl
adc
fbstp
clc
pusha
jo
movsl
aam
in
shl
sub
movsl
xchg
push
lods
ds
fwait
adc
roll
pop
push
push
popf
push
sbbb
fsts
ljmp
fcoml
ret
cmp
pop
xchg
jl
inc
mov
jb
xor
cmp
adc
jae
not
call
xchg
mov
mov
xchg
enter
jnp
test
jae
push
push
lock
adc
js
pop
mov
int3
ss
jne
cmp
push
ljmp
mov
adc
stos
stos
cmp
in
add
std
mov
adc
int
in
sarl
add
lods
mov
push
repz
mov
jl
xchg
jg
ret
loope
or
fbstp
sbb
sarl
dec
imul
in
xchg
jmp
jne
push
jge
rcrl
fiaddl
push
es
test
ror
sti
mov
xlat
into
popa
sbb
pop
sarl
jecxz
fidivrs
hlt
repnz
sbbl
xchg
or
insb
jle
inc
jo
push
cmp
cmpsb
pusha
scas
stos
xor
loope
jecxz
sbb
repz
sbb
loope
or
nop
bound
popf
inc
mov
stc
sub
call
add
dec
fimull
imul
adc
rcll
iret
inc
jp
adc
sbb
jp
pusha
xor
inc
pop
cltd
stos
dec
outsl
ret
sub
ja
int
xor
sbb
fistl
pusha
and
rorl
jmp
push
add
mov
pop
mov
jg
push
scas
call
mov
pop
jae
xchg
xchg
test
mov
cmpl
cmc
push
out
in
mov
lea
mov
xor
cmp
and
xchg
and
jle
out
bound
add
loop
dec
add
jae
insb
xlat
rcrl
hlt
inc
xchg
cmp
sti
out
inc
insl
mov
mov
mov
cmp
cs
cwtl
repz
add
je
cmc
lods
les
pop
and
shll
or
aaa
pop
sbb
movsl
ret
adc
push
sub
rol
xchg
orb
mov
jno
add
cs
mov
cmc
rcl
inc
or
lds
das
cmp
push
jl
jg
jge
mov
jp
jne
aam
pop
push
mov
add
in
pusha
inc
mov
push
pmulhuw
js
mov
pushf
daa
push
arpl
in
or
pop
lods
dec
test
cmp
imul
pop
mov
push
and
sbb
mov
addl
aas
dec
cwtl
or
mov
sub
sahf
pop
daa
fisubs
lods
dec
xlat
jae
imul
pop
push
inc
enter
daa
repz
or
imul
adc
outsl
pop
cld
das
cmp
or
cmp
dec
in
inc
inc
dec
popa
dec
shrb
xchg
pop
mov
and
in
xchg
loop
xchg
pop
cmp
loopne
mov
sub
and
call
fdivrl
sub
sub
stos
inc
or
jne
inc
jp
push
push
lods
jbe
cltd
mov
ss
loope
mov
sarl
int
mov
dec
repz
cmc
cltd
stos
sub
aaa
sub
sub
jmp
xsaveopt
fmull
sbb
adc
fsubl
sbb
out
int3
and
ss
data16
nop
xor
dec
popf
xchg
sub
xlat
imul
xchg
push
pop
jecxz
adc
ds
imulb
mov
dec
mov
pop
dec
xchg
jecxz
push
mov
pop
fistl
test
push
dec
sti
add
shlb
pop
add
rcrl
add
into
lret
lcall
push
cli
lahf
jnp
sub
xchg
jle
sbb
sub
cmp
repz
push
and
shll
jg
mov
je
adc
aad
cs
aaa
out
xor
stos
lahf
rcl
out
adc
sub
adc
push
jnp
into
call
pusha
stc
test
push
fnstcw
jp
mov
pop
dec
nop
jg
mov
imul
or
and
shrb
arpl
inc
loopne
mov
outsl
push
sub
add
popf
dec
sbb
into
add
cmp
mov
mov
dec
rcrb
mov
sbb
scas
jp
andl
bound
cmpsl
jo
or
mov
aad
inc
pop
dec
and
pop
pusha
adc
mov
jp
sub
or
into
dec
fnstenv
cmpsl
loop
cmp
pushf
into
test
add
insb
fs
inc
test
sbb
inc
sub
mov
int
inc
lods
mov
pop
mov
pop
and
add
jb
sub
push
cmc
sbb
xor
in
sbb
push
inc
pop
sub
fildl
in
or
sbb
mov
xchg
lods
sbb
cmp
sub
lods
mov
xchg
cmp
cld
sbb
push
filds
data16
xchg
and
inc
xor
adc
xchg
loope
fwait
adc
in
in
xacquire
icebp
nop
loop
and
cmovo
pop
icebp
jno
inc
mov
xchg
add
cli
jmp
xor
dec
mov
jae
dec
inc
xlat
push
pop
push
out
push
sbb
xchg
or
sbb
lods
or
sbb
pop
scas
in
daa
lods
test
xor
push
insl
pop
pop
out
add
fadds
adc
mov
and
pop
jno
repz
fiaddl
dec
push
aam
dec
mov
mov
xchg
cltd
push
push
aaa
add
and
dec
ljmp
mov
iret
sbb
rcrb
imul
jne
imulb
out
daa
xchg
test
cmp
into
push
mov
sub
imul
ret
add
xor
jnp
bound
mov
rol
mov
mov
fwait
mov
adc
mov
mov
decb
enter
inc
cmp
pop
jl
xor
push
jns
loope
xchg
lcall
add
stc
cmp
jecxz
or
fidivl
cmp
enter
loop
addr16
sbb
ljmp
pop
out
sahf
data16
mov
popf
dec
fsts
lds
test
pop
push
pop
js
mov
push
mov
ljmp
adc
jp
mov
mov
sub
dec
aam
mov
sahf
out
mov
test
pop
aaa
pop
mov
and
out
outsb
test
cmp
jmp
push
es
orl
call
xchg
fildll
mov
lahf
mov
pop
mov
or
loop
loop
cmpsl
add
cld
into
mov
repz
jle
cltd
clc
adc
inc
bound
mov
out
stos
in
push
jle
or
in
ret
jg
dec
cli
ljmp
pop
mov
pop
pushf
int3
orl
mov
jle,pt
test
cmp
pop
sub
pop
faddl
mov
pop
mov
pop
or
outsl
jge
jno
sub
push
ds
inc
add
fiaddl
and
mov
ret
roll
sbb
out
inc
jp
adc
adc
dec
or
loope
cli
das
jbe
lds
adc
les
lock
or
repnz
mov
jno
in
inc
mov
lods
pop
push
js
dec
repnz
scas
mov
iret
mov
lcall
add
sub
into
imulb
and
pop
stc
pop
out
add
sti
mov
or
outsl
and
fld1
aaa
imul
cs
insl
push
popf
cmpsb
pop
push
xor
jno
data16
int3
imul
add
into
push
sub
test
push
xchg
pop
xchg
es
sbb
lock
mov
or
xchg
jo
and
xlat
inc
sbb
mov
push
xchg
add
popf
lock
and
add
xchg
pop
push
cmp
stc
sbb
loope
repnz
fstps
or
popa
pop
cmp
mov
in
xchg
xchg
jae
mov
push
push
xchg
sti
or
cmpsl
mov
cmp
push
or
add
add
add
lods
adc
cmpb
sub
roll
and
stos
iret
jns
xchg
add
lcall
dec
or
mov
xchg
xor
cmpsl
mov
sti
or
jle
fs
dec
scas
jne
shll
int
out
ret
in
es
aad
iret
or
addl
or
or
mov
dec
dec
or
fs
fldt
addr16
inc
push
int
xchg
sub
mov
mov
sub
in
xlat
mov
aas
jbe
notb
xchg
jle
xchg
js
ss
imul
mov
and
ss
pop
cmp
xor
nop
mov
sti
repz
sti
mov
push
jnp
insb
mov
repnz
and
pop
ret
add
test
mov
mov
scas
fiaddl
dec
sbb
or
add
fbld
shrb
icebp
push
xor
mov
lcall
xor
sub
clc
sub
sub
test
jne
adc
ffreep
mov
iret
dec
sub
test
jae
in
pusha
and
dec
jne
push
mov
fsubs
mov
xchg
and
mov
pop
loopne
jns
cmp
xlat
orl
mov
cs
roll
adc
hlt
mov
push
mov
add
lods
cld
ror
mov
in
xchg
adc
stc
adc
stos
mov
test
shll
xlat
stos
inc
and
push
cmp
inc
adcb
lods
xor
and
subb
addb
xchg
cmp
dec
mov
hlt
adc
jmp
push
jne
shlb
inc
xchg
jle
mov
or
push
mov
dec
lea
xchg
lret
fbstp
es
leave
jne
xchg
es
lock
fmulp
mov
leave
mov
mov
es
out
sub
rorb
das
sub
cmp
pushf
gs
cmpsb
bound
push
mov
fs
inc
push
or
or
or
lds
xor
mov
out
sbb
sbb
subb
lret
jns
sbb
repnz
pusha
ret
sub
sahf
inc
shll
xchg
hlt
nop
push
dec
jecxz
pop
mov
sbb
adc
jg
lcall
out
inc
mov
or
dec
mov
sub
stos
orb
shll
jmp
cld
in
outsl
insl
adc
xchg
fisubs
mov
lahf
mov
lods
popf
pop
lock
jns
cld
imul
sbb
aaa
xlat
sbb
mov
sti
movsl
lock
and
inc
mov
xor
xor
sub
push
mov
mov
ret
and
inc
xor
pop
fimuls
push
jge
sarl
movsl
fcoml
dec
mov
in
jmp
out
aaa
push
js
ret
inc
and
pop
rcll
xor
mov
jg
ret
cs
mov
sbb
cmp
adc
cmpsb
pop
dec
das
push
jno,pt
pop
rolb
sti
or
and
adc
push
xor
daa
sub
ss
xor
or
push
out
xchg
jg
fildll
loop
popw
ret
cld
xchg
fmull
in
stos
gs
pop
jp
or
lcall
lea
pop
adc
jne
daa
stos
xchg
movsb
dec
imul
js
in
in
inc
enter
and
mov
je
adc
and
int
pushl
lcall
pop
addr16
fldcw
inc
jg
iret
jge
arpl
clc
lahf
insl
mov
mov
movhps
sub
bound
mov
ja
xchg
out
xchg
pop
arpl
inc
sub
mov
inc
xor
imul
cmp
addr16
xchg
stc
sub
xchg
ret
or
insb
leave
cmp
inc
mov
mov
in
push
push
sbb
adc
lcall
das
mov
cmc
ds
movsl
lock
dec
mov
daa
adc
xchg
test
mov
scas
scas
sti
xchg
or
rorb
and
inc
ftst
lcall
call
fistpll
dec
insb
subb
test
rol
jmp
test
mov
ror
aaa
imul
mov
pusha
addr16
lds
mov
sbbl
test
js
stos
jecxz
inc
leave
movsl
push
addr16
repnz
rclb
bound
adc
scas
je
fsubl
mov
adc
inc
outsb
cmp
sbb
dec
jbe
stos
andl
or
mov
addr16
test
loop
mov
dec
sbb
pop
aas
mov
pop
jo
fcomi
ret
push
scas
in
aad
and
pop
jge
cwtl
or
mov
lds
sub
stc
jmp
push
lret
mov
stos
pop
push
or
lods
cwtl
sub
jl
jno
cld
mov
stos
insb
add
hlt
add
jb
shl
pop
push
les
and
mov
dec
push
repnz
popf
cltd
in
das
inc
dec
scas
shlb
lods
mov
push
pop
mov
xor
xor
sar
or
sub
sub
clc
stos
jge
movl
js
and
pop
lock
inc
iret
add
and
push
push
cmp
add
sti
mov
ficompl
sub
xchg
imul
or
dec
insl
adc
aam
mov
pop
hlt
xchg
add
pop
dec
push
fadds
in
incb
sbb
add
lcall
lcall
adc
test
sub
push
movsl
pop
and
adc
adc
fsubrs
sub
jg
mov
mov
test
sbb
ss
adc
add
cs
pusha
mov
ja
js
fsubr
adc
jge
xchg
jecxz
cli
aas
arpl
sub
add
gs
xlat
stc
push
and
lea
shrl
fwait
adc
pop
mov
pop
ret
and
inc
ficoms
lahf
cmp
mov
in
or
iret
clc
repnz
rclb
shll
jne
and
add
inc
cmp
xor
pop
clc
shrl
leave
push
fnstenv
repz
cld
sbb
mov
fmull
daa
arpl
notl
fs
jmp
xchg
cmpsl
cmpl
xor
faddl
mov
jnp
add
aaa
movsl
xor
xorl
pusha
les
cmc
int
js
or
rorb
cmp
sub
pusha
dec
fnstenv
out
mov
stc
fst
stos
test
inc
ss
xor
pop
int3
jg
dec
jbe
in
outsb
or
leave
push
adc
clc
insl
adc
mov
mov
or
hlt
jbe
push
std
and
xor
sbb
inc
jmp
xor
inc
cltd
inc
fisubl
in
insl
test
nop
popf
repnz
xor
cmp
ret
negl
lods
or
jl
cwtl
and
adc
mov
inc
sbb
fldcw
stc
mov
inc
cltd
dec
cmp
add
mov
call
push
incb
lea
dec
ret
or
adc
lea
ret
mov
rolb
fxch
add
dec
push
ficomps
dec
pop
aam
add
into
push
sahf
es
mov
push
and
enter
mov
pop
sub
jnp
dec
pop
add
aas
cmp
test
sbb
das
dec
jnp
imul
inc
lcall
push
decb
das
loope
in
mov
fnstenv
subl
mov
addl
sub
push
popl
pushf
jno
push
inc
mov
xchg
lock
mov
dec
add
mov
aam
mov
adc
sbb
cmp
inc
jecxz
repz
cmp
xlat
jle
jno
cmp
in
out
adc
ja
outsl
les
sub
lods
in
inc
inc
leave
je
xor
jb
push
ljmp
push
mov
movsl
dec
sub
sbb
push
push
rorb
dec
mov
adcb
int
into
or
out
adc
aaa
xchg
stos
sub
sahf
and
cs
jmp
ret
mov
pop
mov
push
jae
cmp
or
cli
int3
cmp
out
dec
dec
sub
fnstsw
mov
xor
xchg
bound
add
int3
sbb
sbbb
jge
lcall
sub
add
shll
sbb
dec
int3
scas
sub
in
scas
fs
shlb
pop
adc
inc
aas
pushf
mov
js
push
repnz
hlt
cmp
jae
pop
push
movsb
push
mov
lcall
adc
ljmp
call
pop
inc
mov
sbb
je
ds
xlat
shll
mov
sub
xchg
xor
lret
push
daa
sbb
mov
mov
test
mov
orb
imul
aaa
cld
add
mov
arpl
lods
fsubs
push
pop
mov
jae
lods
push
addr16
into
out
imul
mov
adc
cli
ret
repz
sbbb
adc
jmp
push
mov
divb
and
or
sarb
data16
stc
rcl
xor
jecxz
inc
cmp
sbb
mov
mov
lahf
jbe
push
pop
rclb
adc
adc
int
lea
addr16
js
push
cli
loop
insl
cld
jo
add
out
push
pop
fidivs
bound
nop
sub
mov
mov
ds
push
test
add
pop
jmp
inc
iret
push
cltd
push
and
sarb
aad
js
add
es
out
sub
push
nop
lahf
xchg
mov
repnz
fstl
in
xchg
fwait
push
mov
fidivrl
fcoml
adc
or
leave
jae
jns
arpl
sbb
xchg
mov
rolb
sbb
cmc
enter
sbb
mov
out
scas
mov
inc
hlt
imul
inc
sbb
mov
outsl
mov
adc
sarb
inc
dec
loope
add
push
dec
stos
add
test
xchg
push
sub
xchg
sbb
pop
xchg
xor
aaa
push
push
and
js
xchg
jmp
das
fists
or
ljmp
pop
sbb
lret
fucomi
push
arpl
push
push
cli
push
or
pop
in
pop
adc
fisttpll
jecxz
ret
iret
dec
test
rcr
mov
lea
scas
movsl
push
xchg
imulb
leave
dec
jns
dec
outsb
mov
push
aad
or
insl
repnz
fisubrs
mov
daa
aam
pushf
jne
cmpsl
sub
loopne
mov
arpl
mov
stos
ja
mov
call
ja
sbb
xor
xorl
ffree
xchg
jg
push
insl
sub
xchg
jmp
cmp
popf
or
push
icebp
fs
add
sbb
push
dec
out
cmp
lcall
out
out
and
push
data16
and
aas
sbb
ret
loopne
enter
movsl
pop
into
cli
or
cmpsb
dec
das
mov
arpl
mov
jne
mov
jnp
inc
jne
and
sbb
imull
mov
pop
sub
xchg
cltd
xor
scas
test
repnz
repz
and
jp
xchg
cltd
out
sbb
mov
push
jmp
pop
mov
std
xchg
mov
fadds
add
stos
icebp
xor
in
cmp
ss
mov
mov
xor
xor
dec
or
and
dec
pop
popf
mov
mov
jg
aaa
mov
xor
mov
xchg
xor
in
or
ret
sbb
js
mov
mov
xor
cmp
shll
in
stc
in
cmp
jns
cmp
insl
or
inc
push
or
popf
jno
clc
push
lret
push
inc
cli
ret
adc
sbb
daa
xchg
add
cli
or
or
aam
push
push
pop
aam
lds
and
iret
cmp
sbb
sti
fdivl
adc
jg
pop
in
out
pushf
int3
inc
and
ret
flds
mov
stc
icebp
add
mov
movsl
xchg
cmp
sub
mov
mov
imul
fstp
jne
dec
mov
add
lods
pop
mov
lea
fidivl
ret
lea
fisttpll
lcall
or
ret
pop
sub
iret
pop
xor
in
mov
mov
stos
and
sbb
pop
test
adc
mov
sbb
add
adc
or
movsl
fs
xchg
dec
outsb
xchg
sub
or
or
mov
std
mov
jbe
jb
mov
mov
movsl
fiadds
je
mov
sbb
aas
push
jb
cmc
xor
mov
fsub
jae
inc
mov
outsb
icebp
cs
test
fldcw
and
pop
push
mov
out
call
popa
sub
cs
test
gs
jne
push
lahf
push
lahf
jne
les
movsb
and
dec
ret
cmp
test
adc
out
mov
fldenv
repz
in
mov
pop
push
and
int
or
sub
cmc
sub
sbb
jecxz
mov
nop
push
lods
cmp
sbb
jp
popf
addr16
lods
cmp
pop
repz
push
xchg
mov
xchg
push
test
mov
js
mov
mov
xchg
fdivrl
shl
scas
stos
push
jno
je
mov
jle
cmp
ds
clc
mov
mov
out
fwait
scas
jbe
inc
cs
fsubl
les
jne
pop
xor
mov
sbb
icebp
xchg
mov
sbb
out
xchg
cli
or
jnp
sti
mov
mov
mov
jb
push
mov
and
adc
mov
jp
adcl
cwtl
adc
lcall
pop
in
fstpt
dec
vpunpcklwd
je
cld
pop
in
mov
std
cs
push
dec
pop
bswap
fwait
mov
mov
xchg
or
dec
mov
aaa
into
fildll
cmpsb
jns
jecxz
pop
and
adc
mov
sarb
cmp
rorb
push
mov
add
push
cmp
adc
leave
mov
cld
stos
or
jnp
pop
push
lds
sbb
mov
sbb
js
mov
pop
das
sub
pushf
sbb
mov
or
mov
pop
stos
jp
lcall
sub
xor
sub
adc
xor
xor
mov
jnp
cli
add
aad
mov
sub
shll
sbb
lds
xchg
and
in
sub
imull
mov
adc
or
sbb
les
call
call
mov
pop
xor
and
pusha
nop
and
push
leave
push
int
jns
dec
int3
lods
add
dec
lea
adc
leave
mov
mov
fidivl
iret
lods
jo
add
or
repz
mov
add
or
dec
movsb
cmpsl
sub
out
imull
add
pop
cmp
mov
jle
sbb
pushl
je
gs
cmp
fs
add
dec
jbe
or
cmp
cs
inc
jle
mov
out
cwtl
add
sbb
je
and
add
je
jbe
cwtl
mov
mov
jge
leave
iret
cli
lock
cmp
cmp
sbb
aad
pusha
mov
push
cmpxchg
cld
loope
rcrl
ffreep
aad
xor
mov
mov
cmpsl
pop
jns
mov
add
push
and
pushf
rol
dec
pop
enter
mov
pop
pop
data16
xor
divps
inc
xor
out
pop
mov
dec
ret
lods
mov
pop
out
cmpb
lods
push
je
rcr
add
enter
shlb
adc
adc
pusha
hlt
or
cmpsl
cmp
push
in
or
xchg
inc
ficomps
pause
dec
add
add
gs
jnp
js
push
pop
data16
testb
mov
aad
test
and
sub
repnz
xor
mov
jbe
dec
imul
xchg
test
fs
shll
xor
std
int
pop
cmp
test
lods
or
dec
ret
cvttps2pi
int3
jae
or
mov
pop
leave
inc
daa
cmp
andl
int
mov
xor
and
test
arpl
scas
aam
clc
in
cmp
and
mov
add
xchg
repz
push
xchg
mul
pop
add
pushf
cmc
mov
sbb
jne
call
lods
movsb
jle
sbb
ret
cmp
mov
fs
mov
xor
repz
xor
rolb
fmull
mov
inc
test
call
xor
xor
cmpsl
xorl
mov
gs
add
lcall
aas
shrl
push
movsb
or
push
cli
pop
mov
mov
add
ds
ja
inc
scas
pop
lock
and
nop
ret
xor
stos
stos
lds
cmc
dec
jae
mov
push
push
xor
sarl
sahf
mov
sbb
int3
cmpsl
xchg
jmp
rsm
push
icebp
dec
or
dec
adc
aaa
xorb
aas
enter
add
psubusw
ret
lock
adc
add
adc
add
push
aaa
lods
push
and
lcall
cli
lods
sbb
inc
daa
xor
das
shrl
fwait
lods
jnp
dec
faddl
shrl
jecxz
xchg
adc
push
adc
jno
mov
cwtl
mov
ljmp
test
inc
jecxz
xchg
xchg
push
rcrb
outsb
sub
cmc
mov
rcll
xchg
xchg
jl
dec
clc
pop
cmc
stos
imul
cltd
jbe
mov
mov
push
pop
iret
and
cld
cld
cmpsl
mov
inc
test
nop
pushf
bound
mov
add
in
inc
adc
xor
mov
dec
dec
ds
cmp
aas
out
and
xchg
inc
movsb
mov
mov
xor
test
cmp
xor
or
cli
push
mov
lret
mov
push
cli
push
mov
jno
cmc
or
pop
pushf
and
sbb
mov
and
shrb
in
lods
cmp
adc
sbb
aad
rol
inc
cmpsb
push
mov
xor
stos
dec
push
push
inc
lret
dec
loop
mov
mov
call
loop
cmc
icebp
fdivr
xor
inc
sbb
and
in
or
cld
inc
aaa
sbb
mov
gs
cmp
lods
dec
dec
xchg
push
movsb
cli
sar
add
xchg
push
repz
lods
adc
xchg
movsb
jle
repnz
add
add
xchg
and
fnstenv
mov
call
adc
call
or
divl
das
rolb
shll
movsb
insb
ja
in
fldt
push
xor
jmp
outsb
xchg
jecxz
mov
scas
stos
mov
push
fldl
xor
loop
repnz
das
fisubrl
popf
and
inc
pop
pop
push
aad
xor
ret
repz
insb
inc
aaa
ret
inc
pop
mov
push
and
jne
cmp
popa
sbb
jae
adc
ljmp
dec
loope
mov
push
sbb
enter
mov
das
cmp
push
js
push
les
andb
cmpsl
jle
fsubrs
or
add
std
pop
fucomp
or
clc
das
sub
inc
sbb
cli
jnp
adc
pop
mov
mov
lcall
orl
add
imul
mov
js
sahf
cmp
imul
sbb
shll
xor
sbb
mul
test
mov
lods
push
testl
sub
mov
and
addr16
pop
inc
fmuls
sub
outsb
cmpsl
push
lods
cs
dec
lcall
pop
or
mov
pop
hlt
adc
outsl
test
int3
hlt
mov
mov
pop
in
sbb
or
arpl
push
loopne
subb
inc
out
pop
or
fmull
dec
ja
repz
aas
pop
xor
mov
mov
or
mov
pop
and
aaa
icebp
xchg
ds
mov
inc
mov
inc
int3
fcoms
rcr
xor
sti
scas
pop
mov
push
out
aam
stos
inc
mov
out
push
xchg
lcall
sbb
dec
and
das
fs
out
out
or
test
mov
pop
inc
or
add
test
aaa
in
popf
xchg
or
scas
cmp
ret
les
pop
mov
idivb
lea
imul
mov
out
aaa
in
or
jl
jle
pop
sbb
or
clc
shll
sbb
pop
xchg
mov
adc
jg
ret
imul
and
push
outsb
mov
xor
sbb
rcll
outsl
xchg
or
jmp
mov
inc
dec
dec
bound
flds
jl
stc
repnz
cmp
inc
fs
jle
fsubrs
adc
lock
loopne
pushl
fildll
cmpsl
test
mov
jnp
iret
adc
nop
xchg
std
subb
mov
in
cmp
ljmp
rorb
int3
push
clc
or
bound
xchg
mov
cmp
push
or
push
and
mov
stc
jmp
ja
mov
jp
outsb
in
push
jg
call
int
fmul
dec
sub
cmp
je
jns
and
dec
lret
adc
mov
jp
movsb
sub
jnp
in
and
mov
sbb
enter
clc
push
mov
cmp
push
imul
movsl
lcall
xchg
jae
movsl
push
les
push
repnz
enter
sub
pop
push
mov
pop
lret
sub
inc
push
daa
gs
test
mov
adc
arpl
mov
arpl
pop
mov
mov
push
cmpsb
pop
addb
dec
push
scas
inc
xchg
leave
xor
cmpl
rolb
cmpsb
and
sahf
or
pushf
mov
sbb
cmp
xor
or
scas
lods
inc
out
lds
inc
aaa
and
xchg
lcall
mov
outsb
stos
push
ret
adcb
or
cmp
jne
rclb
mov
sub
mov
enter
cmp
and
sub
call
jne
jno
add
jmp
xchg
cmp
loope
jl
mov
fdivrs
fidivrs
in
inc
aaa
leave
rcll
mov
pop
add
xor
mov
insl
push
aaa
sub
push
mov
sahf
imull
pop
cmp
cmpsl
adc
mov
xor
mov
shrl
push
pop
imul
pop
xor
dec
push
jg
push
notb
subb
gs
fstl
arpl
aas
mov
sbb
cmp
mov
daa
adc
add
inc
push
scas
lock
dec
mov
test
mov
outsb
and
jecxz
mov
not
ljmp
sbb
mov
aam
add
mov
outsb
push
negl
ss
cmpsb
mov
add
sbb
std
mov
dec
out
jo
pop
push
pop
leave
inc
add
pop
ret
test
push
in
sub
repz
outsb
pop
push
mov
std
inc
adc
inc
pushf
xor
sbb
movsl
rorb
insb
cltd
adc
lock
dec
push
sub
cwtl
mov
in
int
dec
daa
aad
cmp
insl
mov
or
out
xchg
push
enter
xorl
mov
sahf
aad
cmp
es
outsb
jnp
mov
and
fdivrp
movsb
mov
call
clc
cli
incl
je
sarl
out
pop
sbb
cld
inc
xlat
jns
dec
popf
nop
cmp
gs
nopl
stos
nop
sarb
and
or
in
inc
das
lock
mov
loopne
repz
test
xchg
mov
adc
lods
pop
adc
and
push
daa
push
js
push
stc
pop
call
cs
lods
test
jo
roll
icebp
xchg
push
nopl
inc
or
aam
scas
jns
mov
int
xchg
leave
mov
sbb
mov
lods
fdivl
mov
push
xor
ds
inc
outsl
sub
scas
dec
stos
add
out
mov
sbb
scas
mov
mov
repz
jo
xchg
mov
cmpb
bound
fnsave
mov
push
stos
lcall
addr16
divl
pop
outsb
push
jae
pop
cld
out
pop
shlb
lret
pop
andl
lds
mov
xor
ja
adc
and
leave
testb
inc
jmp
and
rcrb
mov
pop
sahf
lahf
dec
icebp
out
dec
dec
mov
repz
mov
add
sbb
aam
pop
jnp
mov
xor
xchg
pop
mov
es
xchg
test
in
mov
mov
xchg
ljmp
mov
fs
inc
fisubs
fs
dec
lea
mov
cmp
jmp
cmpsb
outsb
push
sub
ljmp
jmp
enter
ds
shlb
push
cmp
mov
xor
mov
adc
leave
shll
jo
arpl
fnsave
popa
mov
mov
aas
mov
and
sbb
pushf
and
lret
xchg
into
aas
push
pop
sbb
mov
push
ja
and
xchg
repnz
testl
pop
lock
scas
pop
es
or
ss
andl
out
inc
fucomip
adc
fldcw
xor
jle
sbb
jmp
inc
imul
arpl
or
push
popa
sub
dec
cmp
cmp
xchg
sarb
aad
testb
aas
mov
adc
jl
jl
mov
aad
je
and
xor
sbbb
adc
and
mov
enter
xor
and
and
mov
xchg
insl
out
mov
jae
mov
inc
fbstp
int3
in
dec
mov
pop
jge
sbb
das
repz
dec
fdivs
push
sbb
and
out
inc
popf
mov
sbb
dec
add
loopne
test
shl
rolb
popf
in
testb
mov
stos
shll
in
or
pop
test
call
sar
in
aas
jmp
mov
pop
in
les
sbb
in
jnp,pn
roll
mov
add
and
mov
enter
iret
cmpsb
mov
jno
popa
pop
aam
iret
mov
mov
addr16
lret
fbld
and
dec
scas
inc
out
je
add
push
gs
loopne
add
push
fidivrl
scas
scas
outsb
add
xchg
aas
repz
cmp
and
or
rcrb
jg
mov
shll
pop
inc
insl
pop
aad
jno
in
inc
pushf
iret
and
fsub
in
jae
aaa
ljmp
xor
sbb
cmp
pop
mov
dec
sbb
outsl
scas
mov
xchg
mov
jg
cmp
mov
repnz
cmpsb
nop
test
add
xchg
sub
fnstsw
push
aam
fdivrs
test
dec
lds
adc
dec
pop
ret
rcl
adc
mov
dec
adc
fsubl
xlat
inc
jg
or
xchg
push
xor
ja
or
pcmpgtd
xchg
stos
lret
inc
inc
sub
mov
dec
inc
mov
jb
mov
and
aad
mov
pop
mov
mov
jne
fstl
repz
lods
shrl
insl
loopne
mov
push
into
test
dec
pop
jg
popf
mov
ja
mov
adc
and
paddusb
push
aas
mov
adc
bound
ror
int3
sahf
and
pop
lret
aam
sub
ljmp
add
in
mov
fimull
scas
cmc
iret
movsb
es
mov
xchg
out
jecxz,pt
aas
push
cli
mov
and
lods
movsl
push
les
mov
and
es
mov
enter
int3
mov
pop
test
aam
xor
mov
jmp
je
fldenv
inc
sbb
push
bound
xlat
call
loopne
movsb
movsb
in
cmp
imul
cmc
stos
pop
push
pop
fs
aad
or
and
out
outsl
pusha
ret
jbe
imul
pop
adc
das
jle
or
ret
add
ret
sub
sbb
pop
ret
xchg
gs
imul
inc
jne
dec
movsl
js
push
iret
jge
ljmp
hlt
rolb
loope
mov
or
loop
fs
cwtl
jl
out
jne
xorl
xchg
or
or
ds
and
push
or
push
or
fdivrl
adc
out
inc
leave
push
inc
xchg
inc
adc
pop
fld
outsl
outsl
push
fimuls
mov
pop
or
mov
lret
insl
xor
and
iret
xor
dec
out
dec
or
fistl
mov
cmp
lods
xchg
outsl
inc
aaa
filds
mov
xor
push
jecxz
les
repnz
inc
fmull
dec
cmp
enter
add
and
mov
jecxz
in
sbb
xchg
out
dec
inc
std
or
mov
xchg
pop
dec
iret
call
push
xor
jmp
and
les
mov
and
push
sbb
adcl
imul
fsubs
addr16
xor
sahf
or
mov
sarl
sarl
jg
mov
pop
arpl
xchg
jle
pop
out
pop
xchg
sub
inc
loopne
mov
mov
and
cmp
pop
add
ret
ja
xor
shrb
push
jo
and
jne
sti
jb
popa
imull
ret
sub
cmp
mov
loop
dec
pop
movsb
cmp
call
aad
dec
fistps
test
cmp
out
fisubs
faddp
enter
inc
icebp
mov
cwtl
jnp
pop
add
leave
sub
nop
inc
xor
lret
leave
dec
test
jmp
and
aas
xor
adc
fcomip
xor
sahf
cmp
iret
in
jnp
jb
mov
pop
test
in
outsb
xchg
pop
xor
insb
sub
push
ja
mov
lahf
pushf
dec
and
xchg
cmp
sub
xchg
fmul
cmp
mov
and
pushf
adcb
fiadds
jecxz
sbb
jp
pushf
lcall
push
or
fldt
int
data16
jns
fimuls
dec
push
negb
dec
xchg
fwait
popl
push
add
iret
aas
popa
jae
push
mov
data16
and
pop
lock
lock
fwait
push
insb
je
dec
mov
xchg
mov
sub
int3
daa
jmp
lret
shl
inc
adc
gs
in
jecxz
lods
add
jns
inc
inc
aas
add
xchg
push
aad
icebp
aas
fwait
adcl
shll
imul
jnp
mov
mov
mov
cwtl
mov
add
loopne
shl
jns
jmp
scas
jb
int
and
in
je
dec
adc
lret
xchg
lcall
leave
cwtl
and
gs
and
mov
rcrb
nop
or
movsb
xchg
test
or
dec
fistps
mov
xchg
mov
cld
lds
aam
into
sbb
cmp
movb
out
sbb
jnp
out
cmp
and
movsb
enter
add
pop
in
hlt
mov
mov
add
jg
out
mov
inc
sarl
or
fs
data16
sbb
out
jo
pushf
fcmovne
mov
in
jo
or
outsb
jno
sbb
pop
fsubl
mov
inc
fs
shll
mov
xchg
or
lods
add
test
add
mov
dec
push
jb
addl
push
inc
mov
shll
data16
inc
mov
mov
leave
push
mull
ficomps
frstpm(287
xchg
inc
sub
sub
adcb
push
in
call
insl
dec
jg
xchg
mov
inc
popl
ds
pop
jl
gs
shrl
out
sbb
sbb
jecxz
push
loop
dec
sbb
aad
sbb
xor
lods
push
jae
mov
adc
add
jbe
xchg
mov
xor
sub
cmp
sbb
cwtl
aaa
and
movsl
rcrb
lods
lds
aad
push
jbe
arpl
jns
enter
outsb
arpl
stc
cmc
cli
jo
cmpsl
adc
pop
pusha
pop
push
mov
stos
mov
mov
movsb
lret
inc
mov
and
pushf
sbb
mov
xchg
sub
sbb
repz
sub
ret
pop
pop
xor
adc
cmc
movsb
test
xchg
int3
sar
and
scas
or
sbb
or
in
popf
cwtl
inc
lods
xchg
xchg
xor
mov
pop
dec
icebp
mov
add
shrb
jb
adc
sub
mov
repz
sbb
dec
out
jg
aad
sub
addl
pop
daa
fwait
mov
and
pop
notb
add
adc
xchg
in
mov
cli
outsb
fiaddl
ffreep
rorl
addl
out
mov
xor
sbb
adc
leave
dec
dec
push
or
jnp
or
movsb
push
dec
clc
test
sarb
jne
les
dec
mov
jae
dec
outsl
fwait
dec
jg
sub
lods
aam
xchg
rdtsc
xchg
fstpl
enter
or
mov
je
mov
fucomip
sub
aad
mov
pushf
shll
divb
jne
adc
loop
mull
mov
lahf
outsb
in
or
or
add
mov
stc
rolb
push
out
loop
push
fwait
in
mov
flds
add
adc
pop
in
xchg
xor
fldl
push
cltd
jg
das
test
hlt
daa
pop
out
in
lock
lcall
mov
cmp
push
mov
inc
lcall
cmp
insl
dec
js
gs
rcrl
pop
bound
aad
das
addr16
jbe
jp
fsubrs
mov
jmp
xor
jnp
xlat
cmp
push
cmc
jl
sub
jecxz
ljmp
cmp
add
jmp
mov
iret
iret
rorb
pop
stc
adcb
rorb
xchg
sbb
xchg
sub
subb
shrb
stos
add
cltd
sahf
test
ja
int
pushf
dec
mov
inc
jp
xchg
lret
lahf
push
fwait
xorl
pop
testl
les
or
out
lahf
fldenv
in
mov
imul
pop
xchg
dec
xlat
ret
sbb
and
adcl
mov
jmp
data16
shr
hlt
ret
cmp
into
popf
mov
adc
int
test
lock
mov
nop
sbb
and
pop
add
mov
jmp
jb
mov
or
xchg
xchg
js
sarl
int3
rcl
dec
push
sub
inc
pop
and
mov
iret
push
fcomps
shlb
xchg
outsb
outsb
lds
out
xchg
ret
call
jp
pop
cmpsb
or
sbb
mov
mov
cmp
insb
fists
ret
ja
inc
pop
sbb
das
test
addr16
sub
nop
dec
xchg
mov
imul
mov
in
dec
call
jnp
incl
lock
inc
iret
xchg
pushf
mov
jb
add
dec
pop
scas
imul
std
leave
repz
scas
int
mov
stos
daa
out
push
fiaddl
pop
jp
in
out
dec
cmp
dec
mov
aad
fbld
mov
mov
aam
adc
jge
leave
pop
mov
jg
add
movsl
xchg
lea
xlat
sarb
push
and
in
dec
mov
jle
inc
sbbl
mov
repnz
outsb
les
push
mov
hlt
lods
push
xchg
and
inc
sub
nop
dec
dec
pop
and
cmpl
shlb
add
push
mov
aas
or
pusha
sub
ljmp
xor
nop
add
hlt
xlat
mov
lahf
nop
js
cltd
jbe
scas
adc
cmp
loope
mov
jb,pn
cmp
lret
sub
lret
xchg
loope
lock
ret
stos
sarb
gs
dec
je
xchg
pop
jg
sub
rcrl
push
or
dec
push
test
inc
in
clc
leave
cltd
imul
nop
cltd
mov
aam
mov
or
movsb
nop
call
push
xlat
pop
mov
add
data16
jecxz
push
sbb
mov
mov
inc
and
adc
gs
cltd
fcompl
mov
into
cmpl
stos
push
sbb
testl
fildll
in
stc
jbe
cmp
mov
xor
aad
aam
andb
adcb
es
insb
mov
mov
dec
push
imul
je
fildl
ficoms
inc
cmp
cmp
mov
inc
daa
sub
int
mov
cwtl
sbb
lea
or
mov
repnz
movsl
or
fistl
push
rcll
sub
arpl
nop
push
mov
fnstsw
in
aaa
sarl
call
xchg
and
lcall
int3
and
and
mov
mov
into
jl
enter
mov
addb
mov
jmp
out
das
xchg
add
les
out
or
pop
add
adc
das
or
imul
jnp
cmpsb
or
fidivl
je
outsl
sti
adc
subb
insl
dec
movsl
stc
lret
pop
mov
push
in
inc
jb
jb
cmpsl
std
ret
jp
test
shlb
or
xlat
fwait
jne
cmpsb
call
ds
pop
pop
fnstenv
jp
incl
pop
mov
add
lret
not
push
xor
outsl
aam
xor
test
aad
jbe
iret
inc
mov
imul
sbb
mov
out
sub
dec
jge
mov
leave
dec
std
out
js
sbbl
jb
pop
sub
sub
add
mov
insl
icebp
xchg
dec
push
mov
cmp
sbb
xchg
ds
cmp
xor
iret
xchg
or
cmp
imul
mov
push
sub
jg
push
daa
push
clc
faddl
sub
lret
push
push
movb
out
xor
xchg
xor
and
stos
repz
rcll
pop
sbb
cmp
pop
fmull
sbbb
xor
fwait
loope
jbe
popa
inc
inc
or
nop
ret
fistpl
pop
inc
testb
rorl
sub
loope
jo
pop
mov
mov
in
test
jmp
addl
jnp
or
mov
xor
or
mov
jbe
test
lods
int
jmp
push
adc
mov
das
aam
iret
mov
mov
push
dec
xchg
je
cli
push
je
jp
outsb
push
and
testb
or
loope
xor
das
int3
pop
and
inc
cwtl
imul
push
xor
out
or
sub
mov
insl
and
pop
xor
iret
or
sub
or
lods
sub
loopne,pt
pop
cmpsb
ret
call
mov
inc
loopne
mov
xchg
jecxz
sbb
in
in
sbb
xchg
and
push
jmp
cmp
std
xchg
sbb
std
or
fsubl
inc
shl
mov
jbe
fnstenv
dec
lods
rcll
cmp
push
pop
stos
sti
jge
push
cwtl
rorb
pop
repz
popa
pop
popa
aam
insl
pushf
scas
decb
push
subb
aam
stos
movsb
cld
mov
lret
dec
xchg
cmp
push
imul
fldl
mov
int3
out
or
stos
xchg
cmp
movsl
xorl
push
imul
addr16
aad
jecxz
fwait
popa
fiadds
jbe
loop
inc
insl
mov
sub
popf
pop
xchg
sbb
mov
push
dec
mov
xchg
lods
mov
push
lret
ret
adc
dec
pop
jg
mov
mov
lods
mov
shlb
push
xlat
xchg
pusha
pop
or
scas
xor
or
jnp
cmp
decl
fistpll
inc
cmp
std
shll
pushf
orb
aam
scas
pushf
xor
pop
std
js
neg
inc
fists
sbb
or
xchg
add
adc
adc
pop
arpl
adc
shrb
sub
jne
mov
cwtl
adc
cld
mov
inc
fists
outsl
aas
push
imul
movsb
or
xchg
push
in
mov
movsb
push
add
stos
in
ret
ljmp
adc
faddl
ljmp
adc
xchg
sub
dec
mov
int
cli
cld
movsl
cld
push
imul
insl
and
or
pop
pop
mov
push
jmp
fisubl
mov
js
jecxz
xor
cli
leave
test
mov
sub
jns
sti
lea
jmp
push
xor
xor
sahf
in
mov
mov
pop
pop
push
jno
and
mov
incl
sahf
cwtl
test
cli
pop
in
pop
lret
mov
or
gs
add
aam
jmp
dec
add
loope
and
int3
xor
jmp
sub
nop
mov
inc
mov
fs
roll
and
lret
movl
out
pushf
orb
pop
jl
cli
and
mov
stos
subb
mov
pop
aad
aaa
or
cmp
sbb
cmp
aam
pop
ja
insb
lock
push
call
add
jmp
mov
mov
mov
inc
movsb
dec
xchg
sbb
dec
inc
lcall
popa
pop
mov
cli
push
pop
sub
cmp
adc
push
mov
pop
cmpsl
inc
shl
add
movsb
jns
shrl
xor
xor
hlt
orb
in
jp
ret
mov
jb
xor
enter
and
ljmp
inc
inc
mov
out
pop
dec
sub
fisubl
mov
pop
xchg
imul
int
int
aaa
dec
inc
les
add
xchg
out
add
mov
in
xchg
xor
sub
dec
mov
lods
mov
icebp
leave
inc
or
mov
xchg
pop
arpl
fisubrl
xchg
and
shl
stc
adcb
cmp
scas
jae
fstpt
sahf
insl
movsl
stos
and
xchg
or
data16
adc
xchg
js
repz
push
and
daa
mov
xchg
mov
sti
in
cmpsb
sbb
sbb
popf
adc
pop
push
inc
sbb
or
dec
inc
shll
ficompl
jns
mov
aam
hlt
mov
mov
or
pop
push
ja
cmp
nop
and
fwait
mov
cs
mov
imul
pop
cwtl
in
testb
int
jl
xchg
jae
repnz
mov
jg
push
adcl
mov
push
mov
or
xchg
cld
ss
and
orb
dec
mov
cwtl
aam
pop
and
inc
cmc
mov
stc
adc
js
insb
lods
cmpsb
inc
mov
pushf
pop
and
lahf
mov
outsl
sbb
daa
arpl
sti
mov
fwait
push
push
sbb
or
sbb
and
pop
dec
inc
scas
jo
aaa
mov
scas
inc
fwait
jmp
adc
in
stos
and
lock
imul
pop
fidivrs
in
mov
mov
cwtl
mov
sub
or
in
cmp
out
fdiv
mov
xchg
cltd
andb
adc
aaa
sub
and
adc
and
xlat
push
or
inc
jl
push
ret
lea
inc
adc
jnp
and
xlat
inc
jecxz
movsl
outsb
lret
adc
lcall
aas
xchg
leave
add
in
xlat
aam
pop
lret
cmpsl
test
or
stos
ja
add
xchg
add
dec
scas
into
mov
xchg
pop
cli
lods
es
mov
stc
rcrb
mov
outsl
scas
xor
xlat
cmc
inc
xchg
popf
cmp
mov
ja
add
add
push
dec
jbe
jmp
mov
pop
adc
and
adc
xor
cmpsb
mov
loope
mov
inc
inc
pop
sbbl
cltd
xchg
pop
sub
mov
cmovns
dec
push
shlb
int
not
int3
repnz
rcrl
dec
xchg
fsubl
out
outsl
lret
test
xchg
jle
lcall
aad
loope
lods
xchg
or
add
adc
imul
dec
push
cmp
pop
lahf
in
pop
sbb
pop
int3
pop
xor
jl
xchg
std
idiv
mov
xchg
and
mov
dec
push
scas
fwait
shr
mov
or
jg
sub
mov
jne
out
jg
mov
inc
dec
es
mov
cmc
sbb
cs
mov
mov
cmp
mov
adcl
imul
mov
sbb
dec
sbb
xchg
adcb
sub
xlat
xchg
gs
xor
sub
adc
inc
and
jg
xor
cmc
push
dec
pop
or
mov
push
jno
mov
ret
stc
mov
push
test
xorb
xchg
jae
pop
shll
test
popa
add
fidivrl
and
jb
inc
adc
dec
sbb
scas
shrb
adc
xor
cmp
mov
inc
pop
mov
cmpsl
incl
out
cs
inc
mov
sub
insb
mov
mov
sub
xchg
adc
leave
push
xchg
adc
insb
scas
push
sbbb
fdivl
in
dec
outsb
xor
std
lea
lea
or
mov
mov
pushf
popf
sbb
sarl
add
xchg
xchg
bound
mov
push
stc
add
jno
push
test
cwtl
pop
cmp
sub
testl
out
je
lret
cmpsl
xchg
in
jne
leave
lds
into
movsb
inc
lds
or
and
mov
call
aam
pop
sti
dec
lcall
std
lret
mov
mov
inc
mov
jbe
xor
fbstp
fxch
push
fwait
pop
repz
lret
leave
out
mov
test
repnz
mov
push
xchg
js
out
sbb
sub
mov
jmp
cltd
sahf
push
fimuls
jnp
jne
jecxz
pop
mov
xchg
xor
sub
jbe
popa
and
mov
in
adc
outsl
lods
cmp
fsubl
and
jbe
dec
jle
fdivrl
fdivs
sub
push
mov
mov
inc
nop
in
and
mov
add
enter
add
loopne
jmp
add
and
mov
call
push
popl
pop
lcall
inc
sbb
adc
repz
in
sbbb
rcrb
fdivrs
lods
sbb
out
cmc
loope
iret
es
nop
lret
jne
movsb
imul
sbb
mov
mov
fadds
inc
test
clc
and
push
out
mov
fmul
mov
ret
push
into
cmp
aaa
shlb
push
cmpb
add
jle
psrad
fistpl
sbb
mov
shlb
and
cmp
outsb
test
lods
mov
das
mov
sbb
push
lds
pushf
add
movsl
push
xor
pushf
inc
out
sahf
out
mov
out
push
cmc
push
sbb
fiadds
cmpsb
popa
xor
pushf
xchg
push
lcall
aaa
cmp
call
sub
jns
arpl
mov
sarb
arpl
mov
inc
xor
adc
test
in
pop
std
and
xchg
push
loopne
dec
and
call
leave
jb
ret
adc
push
mov
outsl
call
sub
jecxz
mov
clc
fdivs
mov
aas
sub
shr
sti
sbb
push
mov
sub
outsb
hlt
jne
xchg
inc
outsb
sbb
sbb
es
cmp
out
loopne
daa
pop
into
jp
repnz
movsl
imul
aam
inc
aad
mov
imulb
mov
xlat
ds
sbb
xor
jo
cli
mov
inc
imul
inc
xor
mov
mov
lret
enter
jecxz
dec
cmpsl
fidivrs
movsl
mov
cmp
mov
xchg
or
fnstsw
jne
int3
sub
mov
mov
stos
add
out
aas
dec
add
test
mov
mov
fisubrs
inc
add
sub
or
adc
pop
mov
out
xor
inc
push
punpckldq
pop
inc
sub
mov
sbb
lcall
cli
fs
ret
xchg
cwtl
pop
mov
or
mov
mov
imul
mov
mov
mov
clc
jp
mov
loope
mov
sub
repnz
notb
or
test
clc
rcrb
mov
vmovsd
jns
cmp
pusha
cmp
xchg
or
hlt
mov
push
fstpl
fildl
sub
out
loop
ja
in
push
add
rclb
scas
jne
or
jns
inc
mov
addr16
xor
cltd
popf
cmpsb
jns
pop
pop
cld
int
out
push
int
insb
push
cmp
std
out
pushf
in
mov
push
jb
rcll
aam
cmpsl
xor
pop
and
ljmp
fistps
mov
xchg
cltd
xor
jge
or
pop
or
dec
pop
ret
add
je
sub
sub
int
mov
cmp
xor
cmc
insl
mov
ja
rcl
inc
inc
or
mov
mov
iret
int3
sub
call
daa
ret
push
ret
int
xor
pop
push
test
aad
cmp
sub
cli
fadd
insl
sbb
lea
mov
lcall
andw
pop
cmp
add
mov
pop
fcomp
sbb
sub
inc
sbb
enter
lret
sub
shlb
xlat
sbb
clc
mov
jno
dec
ds
and
push
and
or
mov
and
mov
sub
inc
xor
jnp
or
mov
dec
push
movsb
mov
mov
clc
mov
cmp
movsl
pop
and
jne
lods
xchg
jae
outsb
inc
ret
jo
outsl
mov
sbb
arpl
out
xchg
in
imul
xchg
push
adcl
and
jo
outsb
mov
xor
clc
outsl
adc
movsl
lret
testb
mov
out
repnz
jp
or
std
clc
sub
xchg
mov
mov
jecxz
cltd
insb
pushf
arpl
and
imul
aas
pop
xchg
aad
inc
pop
sbb
lret
lock
fsts
jecxz
dec
int3
bound
sahf
and
sub
pusha
sub
cmc
ds
imul
movsb
pushf
ficoml
add
jo
pop
sub
dec
push
inc
test
mov
or
aas
jecxz
adc
jnp
lret
jmp
cld
adc
inc
shll
scas
cmp
inc
xor
mov
mov
lods
lods
sbb
jle
loope
cmp
data16
leave
pushf
in
rcr
aad
les
push
push
mov
inc
dec
jge
push
test
out
jno
add
sbb
shl
sbb
gs
mov
insb
scas
jmp
add
gs
sbb
dec
cltd
repz
pop
sahf
add
cld
mov
xor
inc
test
jno
add
pop
xor
sub
testb
add
jnp
setnp
dec
pop
mov
rcll
aad
add
or
sbb
mov
pop
stos
add
jns
xor
mov
insl
mov
or
mov
inc
fnstcw
aad
js
xlat
push
sub
pop
shll
xchg
out
int
jo
pop
scas
pushf
aam
sti
data16
clc
sbb
scas
jmp
ss
test
pop
movsl
push
push
and
imull
cmp
pop
cmpsl
push
and
cmp
mov
inc
dec
mov
dec
sub
sub
les
mov
ja
xor
imul
cmpsl
pusha
mov
pop
inc
pop
fdiv
cmc
rorb
dec
shl
insl
xchg
fld
insl
ret
add
mov
mov
fistpll
push
mov
hlt
ror
lock
push
cmpsb
fs
sub
out
fsub
sub
add
dec
add
pushf
push
and
iret
repz
inc
jb
push
addr16
mov
mov
out
lock
outsl
mov
jnp
fiadds
push
scas
mov
push
jecxz
xor
sub
or
loope
xchg
pop
adc
push
mov
movsb
out
inc
xor
sub
or
and
popa
xchg
mull
dec
mov
repz
fs
jl
cmc
das
sti
inc
cltd
mov
and
xor
mov
mov
inc
jecxz
jno
filds
inc
mov
nop
sub
pop
test
scas
xchg
call
add
inc
nop
enter
cwtl
mov
dec
cmp
shrl
jne
or
mov
fidivrs
sbb
xchg
xor
bnd
iret
push
loopne
iret
imul
xchg
mov
cwtl
adc
jg
fucomi
dec
aam
or
lret
mov
xchg
pushf
int
or
lods
xchg
dec
ret
stc
mov
jo
lods
test
sarl
cmpsl
sbb
sub
pusha
push
movsb
cmp
out
paddw
add
fiaddl
in
test
out
adc
xor
in
mov
loop
aam
cli
xchg
popa
int3
fldcw
ljmp
or
mov
hlt
xchg
roll
inc
xchg
std
mov
pop
sbb
jae
test
clc
loopne
xchg
push
pop
rorl
ret
call
fisttpll
inc
dec
test
fstl
cld
ror
mov
int3
lock
fucomi
xlat
inc
adcb
imulb
add
aad
into
cmp
in
jns
dec
inc
test
add
sarl
ds
xor
clc
sbb
imul
mov
cwtd
clc
jl
mov
popf
inc
xchg
test
cmp
pop
cwtl
xor
cmp
test
dec
add
dec
jecxz
and
xor
mov
push
adc
movsb
pop
aas
mov
xchg
push
loop
loopne
sub
push
jnp
pop
push
mov
cmp
xor
push
or
shl
jp
outsl
test
std
dec
sub
test
mov
sti
mov
jge
dec
fcmovne
or
lods
cmp
test
inc
mov
std
fcoml
repz
loope
cs
daa
jae
imul
fwait
and
idivl
pop
sub
sti
jg
insl
push
mov
aaa
scas
into
addb
adc
lods
sub
fwait
cmpsb
ljmp
or
dec
adc
out
adc
movsb
cmpsl
cmp
cmp
je
popl
or
push
ret
push
test
fildll
push
rorl
push
dec
lret
mov
fstpl
mov
xchg
add
rorl
movsl
sbb
push
push
pop
ds
and
xor
cs
jnp
sarb
jmp
cmp
int3
pop
push
dec
fs
lds
std
cmp
mov
push
inc
in
sbb
add
divb
mov
stos
adcl
xchg
mov
and
ja
fmull
fs
nop
aam
cmp
syscall
imul
push
add
inc
adc
popa
cmp
jbe
xchg
or
jecxz
sub
push
sub
fcomip
sub
pop
xchg
call
xor
jne
mov
cmp
jb
ret
pop
xchg
dec
xor
dec
loope
jb
inc
and
and
out
sbb
add
or
or
out
lahf
loope
xor
ja
push
sbb
sub
xchg
or
and
sub
adc
inc
jecxz
inc
or
leave
leave
in
mov
mov
fildl
jge
push
jg
in
push
iret
andl
xchg
pop
cmp
mov
cmpsb
lahf
mov
inc
arpl
dec
push
jge
push
pop
imul
adc
push
sbb
fwait
mov
lahf
jecxz
popf
pop
sahf
sub
imul
mov
sbb
jmp
lret
iret
pop
mov
in
jle
ja
mov
jmp
fwait
jge
shr
movsb
aam
loope
mov
push
pop
cwtl
movb
cmp
xor
dec
dec
dec
add
dec
hlt
push
cltd
or
nop
shrl
sahf
add
fs
cmp
adc
dec
sub
mov
push
adc
int
dec
adc
rorl
or
mov
dec
xchg
mov
imul
sbb
cltd
andl
popf
push
into
mov
mov
repz
jmp
inc
loopne
gs
xor
pop
cmp
pop
push
xor
sub
sbb
hlt
sahf
mov
pop
mov
mov
stc
aad
rorl
and
insl
dec
add
or
dec
enter
xor
jne
jo
repz
mov
xchg
test
dec
mov
cmp
dec
cli
sbb
xor
inc
lret
nop
mov
cmp
sti
sti
xorb
pop
cmp
mov
xor
mov
xor
test
mov
push
sub
push
sbb
and
adc
mov
cs
and
pop
inc
dec
jmp
lret
cli
adc
pop
cmp
imul
inc
mov
inc
cmp
xor
imul
in
sub
sbb
insb
scas
sub
gs
or
clc
mov
mov
add
call
xchg
push
mov
enter
scas
dec
loopne
sbb
mov
pop
and
mov
lahf
sub
jns
dec
addl
cmovp
cmp
icebp
cli
aaa
loopne
ficomps
ljmp
cmp
repnz
pop
rorl
fistps
loop
or
mov
sti
sub
ror
in
lods
loop
dec
mov
mov
and
sbb
mov
aas
decl
xor
xchg
pop
inc
xchg
les
rcll
scas
xchg
jno
sub
mov
mov
imul
sbbb
into
mov
xor
mov
icebp
dec
mov
xchg
daa
sti
lods
jno
xchg
les
inc
mov
es
stc
inc
sahf
fwait
addr16
nop
xchg
pop
mov
sarl
adc
pusha
loopne
dec
cmpsb
dec
inc
dec
in
enter
dec
fdivp
dec
jmp
cmp
rcll
pop
fstl
sbb
or
inc
in
push
popa
add
mov
jl
xchg
test
push
les
mov
mov
test
add
mov
out
lea
add
cmp
dec
cmp
movsb
jmp
aam
mov
dec
gs
mov
sub
inc
std
fwait
sbb
jnp
addr16
xchg
repz
and
mov
mov
push
xchg
shll
inc
pop
mov
stos
inc
and
mov
idiv
in
outsl
pop
cs
cmp
lods
ss
inc
iret
cmp
add
jne
jnp
je
cmp
mov
pop
mov
sbb
sbb
mov
pop
idivb
movups
sarb
aad
fwait
jecxz
ret
push
jo
hlt
int3
and
dec
and
pop
lds
lock
fidivl
lock
mov
dec
sub
adc
cmp
aaa
scas
and
negb
imul
adcb
icebp
out
cmp
xlat
sub
inc
daa
in
mov
test
and
sbb
hlt
cs
mov
xor
pop
jae
pop
fnstsw
fcompl
jg
push
pop
inc
xor
sbb
adc
jge
stos
pushf
cld
xchg
je
mov
std
arpl
jmp
daa
mov
cmpsl
das
lret
jbe
lock
daa
rol
add
outsl
inc
fnstsw
and
insb
sbb
cltd
test
pop
stos
adc
imul
and
jp
push
and
insl
mov
sahf
or
fucomip
orl
psrlq
sarb
sub
cli
lods
xor
dec
out
mov
and
adc
scas
fs
fnsetpm(287
xchg
mov
xchg
and
les
out
fwait
adc
sbb
jmp
push
and
mov
inc
pop
lret
pusha
or
push
gs
cwtl
fstpl
inc
sub
into
mov
add
sub
jecxz
sbb
lock
repnz
in
jno
faddl
xchg
pop
bound
insl
push
or
es
std
mov
cmc
fisubrs
jno
lods
stos
movsl
fs
mov
out
insb
xchg
outsb
outsl
sbb
lahf
fs
lods
jo
xchg
pushf
adc
imul
std
sub
and
push
dec
push
fimuls
cmpsl
mov
jbe
lds
mov
and
jae
cmp
mov
dec
cltd
test
mov
push
hlt
mov
mov
int3
dec
rorl
enter
mov
push
repz
cmp
mov
popl
mov
outsb
lret
push
fwait
xchg
and
imull
cld
cmp
rol
sub
and
mov
enter
mov
pop
jmp
test
daa
lds
mov
loop
cli
bound
into
pop
adc
int3
ret
pop
frstor
rcll
in
jmp
scas
fdivl
cmpsl
and
or
mov
cmpsb
imul
push
enter
mov
fld
pushf
or
or
pop
or
and
add
ja
pop
jg
fwait
insb
orb
pop
std
je
jp
jns
mov
mov
scas
lahf
fstp
sbb
nop
jbe
stos
mov
mov
dec
mov
leave
mov
push
scas
stos
icebp
xor
add
icebp
push
inc
lahf
pop
clc
push
xlat
push
lret
mov
dec
popfw
dec
and
imull
xorl
pop
dec
push
pop
push
dec
add
cmp
inc
lret
cld
push
out
mov
push
cmpsb
push
insl
mulps
daa
into
in
or
in
jmp
in
leave
cmp
repnz
insl
cmpsb
xorl
adc
mov
jecxz
cld
repz
xchg
or
imul
sub
movsb
cmpl
call
or
and
outsb
je
and
or
pop
mov
push
cltd
clc
jne
popf
enter
xor
test
sub
das
ljmp
dec
orl
xchg
xlat
push
nop
xchg
inc
sbb
cmp
data16
out
add
push
loope
aaa
and
fistpl
dec
mov
mov
filds
xchg
ret
push
dec
xchg
xor
dec
xchg
xor
sub
push
and
jmp
pop
sub
mov
ja
aad
stos
leave
add
fcoml
adc
mov
cwtl
inc
mov
call
xchg
mov
jmp
or
leave
ja
adc
lcall
add
aad
push
dec
dec
iret
out
iret
sub
pop
cmc
rcrb
js
mov
add
icebp
out
xchg
cmp
jb
push
ja
fimuls
lret
imul
cmp
repnz
cli
xor
pop
out
dec
or
nop
fcmovnu
in
imul
int3
pop
shl
mov
scas
fst
cli
push
push
lea
sahf
adc
scas
les
idivb
inc
mov
roll
xor
iret
mov
inc
xchg
xchg
jo
je
test
insb
fdivl
xor
cwtl
xchg
ja
ds
iret
xchg
xor
cs
enter
ret
pusha
int3
in
pop
push
sub
loop
jp
pop
pop
test
out
repz
movsb
push
enter
xchg
or
cmpsb
xor
push
fwait
add
test
xor
arpl
lahf
mov
stos
leave
or
and
mov
mov
jecxz
daa
jno
ljmp
movsl
cmp
or
mov
imul
cmpsb
xchg
mov
iret
push
pop
in
jp
cmp
test
pop
ljmp
sbb
push
iret
cwtl
jno
cld
sahf
dec
and
inc
cs
mov
mov
push
fcomi
sub
jge
ds
ret
cltd
test
mov
cltd
lret
outsb
stos
mov
data16
repz
mov
cmp
cmpsb
int3
aas
mov
outsl
inc
rcrl
lea
mov
push
pop
addr16
xor
or
sub
int3
jg
mov
xchg
cmp
notl
jns
jmp
dec
push
mov
dec
rclb
sbb
rol
sbb
mov
push
mov
hlt
mov
loopne
add
loope
dec
es
mov
xor
mov
xchg
insb
adc
cs
push
int
cmp
sub
ret
xchg
out
pop
mov
ror
sbbl
push
dec
jmp
mov
adc
pushf
pop
mov
aaa
inc
je
or
leave
jl
or
pusha
sbb
inc
mov
push
ret
sub
mov
test
sbb
out
dec
adc
out
pop
rorb
pop
cmp
sahf
or
and
or
xor
pop
cmpsb
ficompl
mov
test
cmpl
inc
cld
jnp
xchg
jns
push
pop
mov
push
push
inc
jbe
iret
shlb
scas
dec
and
das
inc
test
negb
testl
jne
icebp
cmpsb
push
dec
jle
out
fildl
xor
sbb
push
mov
mov
daa
push
aad
lret
push
bound
mov
cmpsl
pop
mov
fimuls
shll
inc
pushw
dec
jmp
jp
xchg
and
or
pop
dec
xor
sub
jmp
add
aaa
lcall
sti
aad
arpl
xchg
dec
push
sahf
push
outsb
dec
fs
xchg
pop
inc
repz
push
pop
pop
push
jl
in
stos
rorb
andl
jbe
ret
sbbl
imul
in
push
aaa
notl
orl
inc
mov
bnd
or
xlat
add
pop
je
dec
ljmp
sbb
jmp
pop
mov
push
mov
jmp
stc
out
in
cld
movsl
mov
adc
int3
adc
test
push
mov
leave
inc
das
mov
int
and
or
pop
add
mov
push
jns
cmp
shll
loopne
cvtdq2ps
xchg
cmp
int3
adc
xchg
pop
movsl
xor
pop
int3
std
data16
xor
xchg
lret
jae
call
test
ficoms
or
lods
jnp
sub
mov
xchg
jbe
insb
fcmovnu
lret
mov
pop
push
inc
pop
or
sub
pop
xchg
nop
mov
and
add
out
fisubrl
out
xchg
xor
push
scas
add
jne
jecxz
mov
movsb
clc
push
jno
notb
stos
mov
test
inc
mov
and
mov
lret
or
bndstx
std
adc
dec
add
in
and
mov
and
cmp
loop
jmp
add
xor
out
addr16
rcrb
add
scas
sbbb
push
sbb
subb
xor
pop
jp
scas
call
jb
popa
pop
lds
jno
xchg
cmp
push
cmp
cmp
xor
loope
sarl
rcl
mov
jne
or
movsb
sbb
loop
test
je
movsl
in
xor
add
sbb
inc
sbb
push
sub
inc
add
stc
test
push
imul
repnz
jbe
je
or
and
in
pop
shll
cltd
mov
cltd
jb
mov
lret
jmp
decl
mov
les
or
leave
pop
rorl
cmp
xor
fisubs
test
xor
adc
jns
jbe
jns
pop
fisttps
pop
mov
jns
pop
sbb
cltd
gs
out
movsl
outsb
addr16
cmp
push
leave
push
mov
inc
sahf
xor
mov
loop
push
lcall
pop
mov
mov
aaa
mov
dec
push
inc
jl
ds
sub
xchg
outsb
lahf
ljmp
and
fnstsw
movsb
push
lcall
clc
jg
xor
or
mov
popa
inc
adc
into
mov
cmp
and
dec
lds
loope
and
inc
cmp
inc
sub
insb
and
push
lahf
fstpl
inc
jae
push
jp
jge
cli
mov
push
pandn
push
and
jl
xor
dec
hlt
inc
or
sub
jge
inc
mov
scas
and
sub
inc
into
fwait
pusha
add
pushf
rcrb
aam
fstps
out
xor
aam
lds
add
adc
sar
inc
ljmp
lcall
scas
ret
xchg
xchg
jne
mov
cmp
xchg
xchg
rcll
and
add
sub
or
adc
mov
test
adc
mov
fbstp
push
outsb
inc
xor
mov
jb
jo
es
lds
add
test
or
repz
nop
imul
test
lret
cmc
jae
pop
add
dec
fwait
dec
mov
test
cmpsb
dec
addr16
enterw
lock
xchg
pop
pop
xor
push
lcall
in
xlat
out
and
sbb
mov
inc
inc
imul
pushf
test
sbbl
adc
arpl
nop
mov
add
mov
movsb
nop
mov
cmp
aaa
pop
sbb
call
mov
push
cwtl
jno
pop
mov
enter
inc
stos
pop
stc
aas
push
jo
movsb
push
push
icebp
mov
and
fnsetpm(287
xchg
mov
jg
push
loop
aam
jg
cmp
dec
mov
leave
xchg
push
push
mov
push
cli
pop
jno
inc
insl
lea
inc
lret
fldcw
leave
adcb
inc
mov
testl
nop
jo
ljmp
shrb
dec
cmp
xchg
ds
fwait
mov
adc
adc
arpl
mov
jp
adc
cmpsl
mov
out
sub
mov
inc
dec
pushf
pushf
roll
shr
sbb
in
dec
movsl
cmp
mov
or
jnp
pop
inc
div
sub
sub
insl
sub
mov
jle
inc
push
cmp
inc
mov
in
fimull
xchg
cmpl
inc
ret
xchg
sbb
das
xchg
cld
xchg
mov
in
icebp
xor
sub
jl
adc
mov
dec
lea
cmpsl
out
push
cmpl
in
cmp
mov
push
adc
jbe
jo
inc
in
stos
test
cmpsl
xchg
clc
fcmovnu
jnp
push
outsb
cli
bound
push
test
mov
mov
mov
or
jl
sbb
orl
adc
mov
shl
xor
and
data16
jg
sti
inc
cmpsb
inc
in
inc
call
fisubrl
mov
out
add
or
mov
cmp
mov
stos
repz
sbb
mov
or
xchg
packsswb
and
out
dec
repz
pop
xor
pop
mov
cmp
or
xor
nop
sbb
in
add
repnz
fbld
test
lock
call
pop
xchg
lds
addl
mov
mov
stos
aam
inc
inc
or
xchg
mov
dec
call
in
dec
rcr
mov
push
jb
js
roll
stos
adc
scas
inc
mov
mov
pop
repnz
test
dec
mov
ja
inc
mov
jecxz
adc
dec
and
sahf
and
inc
stos
movsb
lds
push
lods
lahf
jle
jb
cmp
xchg
ret
and
insl
das
leave
mov
mov
repz
mov
add
orb
cli
rcr
dec
push
inc
call
cs
scas
in
push
loope
jmp
adc
xchg
xchg
out
add
shl
and
mov
adc
xchg
push
jnp
pop
cltd
xchg
std
push
lock
mov
dec
jp
or
push
pop
jmp
stc
lods
into
xor
mov
sub
adc
jne,pt
jl
mov
xor
add
hlt
cmp
gs
cli
out
in
mov
iret
cmpsb
mov
and
and
inc
pop
jo
push
int3
mov
inc
sub
mov
jb
stc
jb
and
jns
scas
xor
std
pop
sub
daa
mov
adc
sub
pop
outsb
push
push
popa
push
adc
dec
push
hlt
imul
pop
or
stc
push
cmpsb
faddl
inc
sub
mov
mov
lds
gs
sub
pop
add
roll
xor
fld
pop
cmp
add
dec
inc
loopne
std
cltd
sub
inc
nop
jnp
mov
scas
mov
fcmovu
and
adc
movsb
insb
into
and
test
repnz
mov
adc
xlat
sub
push
adc
sahf
jo
jne
adc
and
popa
mov
shl
jbe
call
sub
xor
push
or
xchg
lahf
scas
fistpll
mov
pop
dec
fsubrl
dec
xchg
faddp
push
das
lods
out
add
test
push
and
cmp
or
aad
fdivl
jmp
jb
das
lock
scas
scas
cs
aad
inc
xor
das
out
push
sub
push
mov
flds
cmp
sbbb
jne
cmp
lret
sbb
inc
addr16
add
leave
pusha
fisttps
mov
and
cs
aam
sar
jbe
xchg
mov
ds
popf
push
pop
mov
sub
rol
and
or
ficomps
int3
in
xor
mov
pop
incl
lahf
pop
cltd
cmc
fsubr
xchg
icebp
jle
pop
push
sahf
jg
sbb
xlat
mov
mov
lret
lea
xchg
or
push
arpl
xchg
jne
rcrl
pop
iret
dec
mov
in
in
cli
imul
addr16
ja
cmpsl
das
frstor
popf
pop
mov
xor
sub
mov
lahf
notb
sahf
mov
popf
ret
cmc
scas
mov
jae
cltd
xor
test
popa
cltd
or
stos
shll
negb
xchg
pop
aad
shrl
sahf
idiv
stc
movsb
xchg
insl
ds
daa
jmp
push
push
sbb
popl
aad
push
rol
and
xor
daa
repz
cmp
dec
enter
or
inc
jp
repnz
jbe
mov
fnstenv
in
jg
into
rorl
stos
pop
sbb
push
adc
push
jp
pop
lahf
xor
mov
sbb
adc
popf
in
inc
xchg
dec
xlat
inc
adc
ret
or
lods
push
in
sbb
lret
gs
sbb
jmp
in
pop
xlat
mov
xchg
out
jmp
addb
inc
outsb
aaa
mov
adc
scas
xor
adc
mov
arpl
jmp
xor
repnz
dec
popf
outsl
mov
or
aaa
std
les
xchg
loop
mov
dec
push
pop
mov
dec
jnp
push
repnz
popa
mov
mov
call
push
inc
xor
ficoml
nop
sbb
mov
sbb
rcrb
and
jns
bound
test
cli
mov
push
push
fdivs
rcr
mov
loop
mov
in
mov
fildl
ja
mov
mov
jb
ds
ret
sbb
in
mov
fdivr
popa
sub
dec
ffreep
cwtl
or
or
mov
add
xor
dec
mov
push
adc
adc
mov
or
dec
insl
mov
pop
mov
adc
mov
cmp
cmpsb
js
frstpm(287
adc
mov
mov
inc
lret
lret
nop
orb
mov
and
add
insb
xchg
mov
rcrb
cmp
mov
push
inc
frstor
or
movsl
mov
dec
shlb
inc
test
cmp
into
dec
sub
sub
aam
and
xlat
xchg
xor
scas
int
dec
inc
jno
push
push
xor
pop
push
or
in
dec
cwtl
lock
repnz
cmpsl
adc
icebp
mov
daa
fisubl
push
dec
fistl
jo
mov
stc
push
xchg
arpl
mov
pop
fistl
notl
das
scas
adc
sub
pop
push
cmp
es
jo
in
mov
mov
rcrl
cmp
in
adc
repz
in
iret
dec
jno
pop
pop
aam
xchg
inc
stos
rorl
jecxz
ret
scas
std
fsubl
shrb
leave
aad
pop
inc
adc
or
jmp
mov
fldenv
cld
push
ret
jmp
sub
stos
ret
mov
jecxz
test
in
mov
push
enter
mov
sbb
add
fstl
aas
out
pop
sbb
cltd
jbe
xchg
add
pop
pushl
xor
or
mov
icebp
leave
mov
popf
xor
sub
sub
or
mov
xchg
movsb
pop
enter
xor
xchg
pop
ret
rcrl
jge
fsubl
adc
loopne
mov
or
sbb
in
jnp
and
cmp
add
adcl
cli
add
xor
sbbl
shrl
mov
test
scas
push
xor
sub
ss
icebp
es
dec
stc
mov
je
int3
pop
outsl
lret
jae
jl
pushf
xor
insb
sbb
jno
mov
icebp
dec
jge
sbb
mov
out
mov
mov
mov
push
add
shrb
int3
pop
sub
push
pushf
and
jg
movsl
leave
xchg
xchg
dec
repnz
push
movsl
mov
ficomps
or
lret
lret
ljmp
push
push
enter
movsl
je
jle
dec
pop
shlb
and
leave
push
fwait
add
jnp
bound
mov
jb
sbb
mov
xor
sub
cmpsl
sub
xor
sti
push
daa
lods
jmp
push
xor
inc
pop
mov
adc
arpl
cmp
adc
imul
pushl
leave
push
adc
and
dec
xchg
inc
push
mov
mov
outsl
inc
into
xchg
sahf
xchg
cli
mov
mov
cwtl
push
sbb
xchg
in
and
mov
jb
mov
mov
sbb
pop
xchg
sub
add
mov
jb
cld
pop
dec
jnp
enter
xor
popf
test
xchg
shll
dec
add
fstps
lret
mov
call
push
rcl
cmpsl
or
push
dec
jae
repz
or
shlb
sub
jg
rorl
addr16
pop
push
jno
in
out
ds
or
in
lods
les
pop
jg
outsl
daa
cmpsb
and
pop
test
push
xchg
movsb
adc
imul
bswap
jg
ret
movsl
sarb
nop
leave
std
ja
adc
lds
in
mov
cmp
outsb
aas
xchg
mov
fsubrs
cmp
test
adc
xor
repz
cmp
mov
ds
dec
test
mov
aam
and
outsb
mov
fsubrl
push
fstpt
loope
les
jge
test
xchg
jns
xor
inc
movsl
lea
outsb
push
dec
push
aas
sti
or
aad
pop
sbb
pop
imul
sbb
nop
xchg
and
cmp
aad
stos
ljmp
push
xchg
aad
mov
sbb
xchg
xchg
scas
or
sbb
push
xor
jb
sbb
ret
cmp
xchg
or
loop
andb
mov
bound
fwait
dec
loop
mov
rol
js
push
ud1
cmp
add
cld
out
inc
test
jo
xor
pusha
mov
loop
xor
icebp
stc
push
call
jge
aaa
or
mov
out
jmp
gs
fdivs
into
notl
fldenv
or
mov
test
shlb
mov
sti
sbbb
ja
leave
jecxz
or
rorl
ret
or
lds
xor
cmc
pop
sub
dec
jmp
popa
sahf
mov
outsl
movsb
jle
cmp
cltd
or
add
inc
xchg
mov
inc
in
or
daa
or
cmpsl
pop
or
andb
jmp
out
fcompl
sbb
aas
imulb
std
orb
xchg
pop
sbb
testb
push
or
push
test
and
lods
stc
sbb
rcll
dec
adc
int3
push
lcall
sbb
popf
js
shr
and
and
mov
or
scas
sub
jmp
mov
mov
jbe
mov
popa
jnp
pop
bound
rol
inc
mov
lret
fmuls
lcall
es
cmpsl
and
arpl
push
jbe
inc
fisttpll
cmp
add
mov
ret
lock
mov
fidivrs
push
mov
cmc
cli
addr16
inc
das
out
xor
sub
xchg
dec
ljmp
fsin
adc
dec
add
pop
mov
add
shll
xor
jnp
jns
sbb
pop
add
dec
popf
mov
mov
ret
outsl
xchg
sub
mov
push
dec
sbb
adc
test
xchg
jmp
out
shl
cli
imul
push
mov
stos
pop
fdivs
bound
cltd
insb
xlat
ja
mov
loope
add
jl
stos
aas
add
aaa
clc
dec
mov
add
pop
shlb
and
rcll
loopne
xchg
xchg
in
cmp
aam
push
push
cmp
or
mov
cmp
cld
ficoml
jb
bound
shll
clc
inc
adc
mov
cli
int
pop
jg
pop
sbb
rclb
xor
lret
xchg
inc
ss
push
sub
negl
mov
cmp
mov
inc
loop
jg
rorl
leave
out
cli
out
js
mov
ja
jle
int
ss
je
mov
inc
mov
lret
sbb
fwait
rcll
call
jno
out
mov
xor
movsb
or
mov
sub
mov
out
jbe
pop
fistpl
pop
push
lret
out
adc
lods
lock
arpl
mov
mov
pop
mov
les
pop
nop
mov
sbb
push
push
xorb
inc
call
divl
jbe
sub
or
add
jae
dec
push
push
xchg
fwait
lahf
popf
mov
outsl
jge
mov
mov
test
cmp
js
pop
jnp
inc
push
cmp
rorb
jp
pusha
cmp
mov
or
xchg
call
gs
push
fistps
xor
cmpsl
inc
in
and
push
cmp
mov
arpl
movsb
and
mov
sbbb
cmpsl
dec
jmp
and
or
inc
xor
pop
lret
cltd
into
pop
add
cmp
pop
dec
filds
out
shlb
pop
lcall
or
mov
push
mov
jnp
mov
sub
int
cmp
rcll
add
pop
pop
jb
dec
ljmp
add
popa
arpl
push
cmpsl
int3
pusha
dec
fsubrl
sti
leave
adc
dec
mov
xlat
sub
inc
or
pop
xlat
inc
insl
or
out
jl
fs
andb
leave
mov
sub
push
sub
lock
ret
sub
out
sbb
gs
xchg
fnstsw
pop
fs
xchg
shlb
out
cli
stos
add
xchg
cmp
les
rorb
xchg
push
sbb
hlt
fsubrl
pop
mov
jg
xchg
ja
dec
pop
mov
add
inc
mov
inc
cmc
adc
icebp
xor
xchg
and
or
lds
cli
mov
lahf
ficompl
push
in
fwait
int
xorb
aad
mov
adc
inc
addr16
ds
mov
push
ljmp
pop
lock
cmpsb
or
andl
rcrb
add
adc
and
mov
sub
xchg
sbb
mov
and
sbb
pop
xchg
lret
ljmp
enter
xor
cmp
sbb
push
xor
mov
bound
hlt
xorl
in
add
scas
add
adc
mov
test
cmp
push
lcall
cwtl
stos
ja
jecxz
push
sub
movsb
cwtl
pop
xchg
mov
imul
and
lds
push
mov
std
pop
data16
sti
inc
xchg
xor
daa
pop
dec
add
or
mov
cmpsb
mov
xchg
cmp
mov
outsl
pop
jo
movsb
fsubs
sahf
shrl
imul
ss
push
push
lcall
ds
es
mov
xchg
stos
data16
iret
jne
gs
lret
sub
dec
cltd
and
jb
cs
add
xchg
fdiv
xor
mov
and
mov
xchg
mov
jl
dec
fcmovu
and
sub
mov
mov
dec
mov
imul
icebp
jp
call
je
xor
jo
stos
jle
icebp
ljmp
pop
fpatan
or
and
cwtl
jecxz
cmp
jno
stc
pop
sub
inc
or
call
adc
mov
ss
sub
xchg
adc
fisttpll
or
sbb
into
push
push
mov
punpckhdq
incb
pop
sbb
les
insb
sub
nop
add
mov
cmpsl
sbb
xchg
pop
es
in
pop
aam
ficoms
sub
xchg
std
or
cmp
sbbb
in
repnz
or
and
rol
sti
and
and
das
sub
dec
insl
rcll
push
mov
pop
inc
leave
cs
jle
shl
fistl
xor
clc
push
mov
iret
xchg
add
xchg
mov
ret
mov
fsubrs
cli
jnp
outsl
jmp
les
or
ds
sbb
stc
fs
addr16
leave
add
push
and
sti
dec
imul
js
push
mov
jno
push
pop
sbb
fistpll
in
cmc
xchg
inc
adc
push
fnstcw
sbb
cmpsb
xchg
popf
and
fldcw
dec
lock
cmpsl
ljmp
and
dec
jo
xor
out
push
scas
or
insl
xor
in
mov
mov
dec
dec
jae
add
leave
popf
test
dec
ds
adc
fistpl
mov
sti
mov
dec
xchg
negl
jne
xchg
icebp
jo
insl
nop
out
mov
sbb
add
mov
jo
data16
or
dec
xor
in
iret
psrad
movsb
stos
sti
jmp
fstps
mov
std
mov
lea
add
adc
sub
data16
lock
inc
pop
scas
cmp
add
loopne
adc
xor
hlt
cmpsb
pushf
dec
jp
lock
adc
mov
cld
inc
mov
cmp
push
das
fists
mov
jnp
pop
and
dec
in
bound
je
shr
sahf
lret
xchg
in
inc
add
in
or
mov
sub
mov
shlb
rol
mov
and
ret
add
loopne
pop
push
mov
ja
subl
mov
scas
push
into
cmp
and
cltd
cmp
jns
adc
in
adc
mov
repz
sub
xchg
push
daa
dec
bound
push
lock
jecxz
repz
lcall
and
les
in
aas
incb
inc
mov
addb
pop
xor
insb
es
and
adc
ret
nop
in
das
loope
inc
sub
int3
lahf
dec
insl
lds
insl
fsubrs
shl
fimuls
je
mov
mov
ret
jne
cld
inc
test
add
hlt
je
shll
mov
xor
push
fisubs
mov
icebp
dec
push
imul
fstpt
mov
in
leave
add
or
mov
aam
iret
shrl
fistpll
loopne
and
mov
stc
cmpl
das
mov
fcompl
inc
mov
cli
fdivr
ud2
sarb
divl
adc
ljmp
movsb
js
pop
mov
cmp
ret
lods
aad
jne
mov
leave
mov
adc
incl
fists
pop
xchg
js
test
pop
stos
in
xchg
aad
in
insl
pop
pop
std
mov
xchg
pop
js
aas
mov
popf
jo
dec
in
cmpl
ffree
mov
ret
sbb
mov
ss
gs
mov
cmp
mov
mov
loopne
loop
shr
push
lods
jbe
xchg
jge
enter
push
and
repz
mov
push
adc
popf
mov
jbe
push
jp
push
mov
pop
and
dec
cmp
and
dec
pop
je
out
rcrl
test
test
shr
aad
lds
les
lret
pop
mov
cwtl
idivb
imul
push
inc
mov
push
xchg
sbb
lahf
mov
mov
aam
push
inc
je
xchg
xchg
pop
into
or
ljmp
cvttps2pi
adc
icebp
xor
sahf
jl
cmp
enter
adc
push
aam
aas
fistps
data16
or
inc
leave
hlt
mov
inc
sbb
or
test
mov
je
mov
fldt
pop
movsl
pushf
jle
ds
xchg
stos
cltd
inc
push
mov
pop
shl
repnz
cmp
ss
ja
sahf
inc
movsl
sahf
mov
lret
and
mov
dec
pop
mov
rclb
fs
mov
imul
xchg
and
mov
or
inc
adc
mov
mov
aam
add
mov
mov
mov
mov
cltd
loop
sub
pop
leave
fs
fidivrl
pop
sub
push
push
adc
fistl
cmpsb
dec
mov
pop
popa
mov
inc
fs
mov
lret
push
out
shlb
lcall
aas
dec
pop
cmp
and
xchg
xchg
repz
cmpsb
pop
jecxz
sbb
xchg
add
sub
decl
add
das
add
jb
adc
jl
jle
jno
movb
xchg
add
xchg
loopne
mov
mov
ret
dec
xchg
mov
mov
mov
outsb
adc
andb
lods
loopne
xchg
sub
mov
mov
and
outsl
cli
fldenv
cmp
mov
push
pop
shrb
shll
inc
adc
mov
and
cltd
or
ja
dec
clc
jo
aam
pushf
insl
sbbb
fs
and
pop
mov
inc
faddl
xchg
lds
in
mov
cltd
orb
cltd
mov
scas
movaps
pop
movsb
out
mov
les
fisttpl
pop
push
push
js
dec
jbe
clc
imul
fsubl
aaa
dec
push
sbb
and
notl
lcall
mov
or
outsb
pushf
push
adc
arpl
and
jg
cmp
pop
les
xlat
out
xchg
stos
fists
out
mov
jo
arpl
outsb
inc
lods
jl
mov
in
fldl
pusha
dec
outsl
ja
pop
mov
xlat
inc
std
sub
dec
cmc
pop
adc
add
sbb
push
add
fdivp
and
xor
push
fs
push
mov
push
sub
cltd
sub
popa
pop
sarl
dec
into
push
inc
mov
filds
add
jns
dec
sub
sub
and
popa
jb
loop
jmp
jns
std
push
sbb
add
jo
jbe
iret
adc
and
aaa
xchg
mov
jnp
lahf
rcll
aam
and
jnp
rorl
enter
xor
jl
jge
inc
pop
rclb
pop
jecxz
cwtl
fmulp
js
mov
push
jns
xor
inc
outsb
call
jo
aas
jp
mov
xor
cmp
pop
jl
push
lret
subb
pusha
pop
into
sahf
pop
fisttps
adcb
imul
mov
out
lods
xor
or
and
lahf
sub
in
sbb
pop
inc
sbb
test
dec
jns
in
into
pop
mov
lcall
xchg
mov
popf
test
add
push
out
dec
push
adc
push
or
jg
ffreep
aad
loopne
leave
mov
in
insb
mov
fistpl
cwtl
rcr
jg
ss
xor
xor
push
in
cli
std
in
and
sub
mov
movl
jl
mov
popf
movsl
jns
inc
sub
test
shl
lock
or
mov
data16
xchg
or
cmpsl
dec
das
xlat
scas
sub
sub
iret
inc
aas
scas
popa
mov
pop
pop
adc
adc
mov
and
pop
sbbl
ja
mov
cmp
loop
cmp
das
xchg
cmpsb
bound
cmpsl
orl
icebp
xor
sub
mov
shll
inc
sbb
out
inc
bswap
stos
lock
add
pop
in
aam
aad
jl
arpl
dec
ds
mov
dec
repz
out
xchg
bound
aad
adc
fimuls
cmp
das
dec
arpl
mov
cwtl
rep
add
adc
repnz
or
add
mov
adc
jne
add
jmp
or
aaa
mov
dec
sbb
xchg
add
dec
jb
imul
mov
roll
outsb
jns
cli
les
dec
jmp
cs
mov
push
sbb
sbb
sub
aad
out
dec
adc
dec
mulb
dec
push
imul
aam
loop
add
and
push
pop
insb
xchg
iret
pop
dec
testb
mov
jg
pop
mov
mov
or
scas
lret
push
sub
push
push
stos
sti
add
movb
and
ret
and
mov
hlt
insb
jnp
pop
lods
push
test
pushf
fs
lret
in
bound
pushf
pop
jg
les
cwtl
jae
jb
mov
or
push
push
lea
jle
cmp
fmul
push
je
lret
pusha
dec
sub
jl
mov
lock
dec
dec
adc
xchg
cmp
xor
aas
dec
mov
adc
neg
loop
add
xchg
mov
mov
loop
pop
loope
xor
sahf
loop
mov
push
mov
and
push
pop
push
xchg
inc
mov
lahf
jb
call
enter
lret
jmp
xchg
cs
xabort
sar
jae
out
in
cmp
insb
movsb
xchg
mov
mov
icebp
inc
aas
jne
or
add
sub
daa
xor
mov
imul
sarb
aaa
dec
imul
arpl
and
xchg
pop
call
xchg
xor
iret
mov
dec
ret
xchg
mov
push
std
int
mov
addr16
push
push
icebp
jne
fs
subb
stos
bound
jb
sbb
and
mov
mov
cltd
mov
pushf
imul
repz
nop
xor
xor
mov
mov
ja
pop
mov
dec
push
push
icebp
push
xchg
pop
pop
xchg
jg
sbb
push
mov
and
mov
xchg
mov
sti
sarb
and
call
mov
pop
stos
push
sti
and
js
pop
loopne
push
xor
jo
xor
add
sub
les
fwait
sti
jmp
or
cmc
sbb
das
jl
loop
mov
pop
and
sarl
mov
mov
adc
jbe
fistps
sbb
and
popf
das
dec
xchg
adc
push
lea
cltd
pop
daa
in
in
stc
aad
push
jo
xor
pop
sub
lret
arpl
into
aam
mov
mov
cmpsl
cld
icebp
jno
into
mov
pop
in
mov
adc
sbb
test
repnz
imul
sub
je
pop
call
test
dec
outsl
hlt
jge
sbb
jl
data16
xchg
xchg
loope
das
stos
adc
lods
mov
cmp
push
mov
decl
lea
xchg
pop
test
lret
xor
push
xchg
cs
insb
pop
xor
mulb
in
fisubs
adc
scas
or
cmp
mov
cmp
popa
aad
mov
and
jbe
mov
in
jb
fdivs
daa
push
dec
jo
xchg
movb
sub
in
fwait
lock
in
fidivrs
dec
jge
cli
adc
div
xchg
push
lcall
xchg
push
and
push
sub
pop
xchg
mov
out
outsb
cmp
lock
dec
fwait
mov
inc
jb
add
inc
test
mov
add
push
cli
movsb
pop
xlat
enter
xlat
in
les
insl
or
push
inc
ds
fsts
push
xchg
imul
aam
add
push
pop
fstpl
sbb
loope
in
sub
or
sti
lcall
cs
mov
inc
lods
leave
dec
mov
enter
inc
xchg
mov
cmp
ljmp
pusha
xor
rcrl
jno
aad
mov
dec
adc
ret
inc
sub
lahf
sarb
rcl
stc
sbb
pop
in
xchg
xchg
push
mov
out
push
out
lods
inc
out
pop
cmp
iret
pop
scas
fcmovne
inc
add
out
mov
sub
or
mov
fdivr
push
repz
sbb
xchg
inc
jge
adc
fcoms
inc
jbe
pop
mov
sbb
pop
fnsave
cmp
loope
stc
cwtl
hlt
push
push
ss
pushf
shlb
icebp
mov
jnp
in
aam
imul
xor
je
xchg
jecxz
test
daa
pop
pop
shrl
mov
rcll
dec
jecxz
push
fs
aaa
mov
pushf
imul
or
pop
add
mov
ja
int
ror
mov
add
pop
pop
xor
ret
movsb
xor
ds
scas
loop
xor
jl
cwtl
andb
test
std
mov
mov
rcl
inc
fnstenv
lahf
xchg
cs
or
mov
jae
in
in
es
call
mov
inc
nop
pop
xor
mov
cmpsb
xchg
fistpl
cmp
stos
pop
dec
cmpl
dec
pop
inc
sbb
dec
pop
sbb
das
dec
ret
into
jbe
inc
jp
and
dec
pop
enter
mov
inc
loop
xor
jne
fisubs
push
popf
aas
xchg
push
pop
test
jge
mov
adc
out
loopne
add
push
adc
jae
fldenv
pop
push
mov
mov
mov
sbb
sbb
test
dec
incl
mov
popf
adc
push
pop
es
fs
je
out
insb
pusha
adc
push
scas
pop
dec
cmc
mov
iret
gs
or
add
lock
dec
fiadds
nop
popa
pop
mov
pop
scas
stos
ja
jg
inc
pop
stc
mov
fwait
or
mov
add
stos
in
hlt
push
and
mov
mov
xchg
lcall
mov
add
xchg
cmpsb
push
xor
add
sti
xor
ret
xchg
test
mov
xor
cmp
int
lahf
mov
xor
mov
subl
adc
adc
repnz
test
push
loopne
lcall
jae
lods
xchg
jge
or
popf
fistpll
test
lock
test
jmp
lcall
or
mov
repz
popa
jmp
addl
adc
xchg
sub
or
jno
xor
movsb
lcall
mov
out
mov
cmpsl
aam
stos
jne
stos
sub
ds
fmuls
push
ja
pop
ljmp
mov
jecxz
hlt
ljmp
mov
std
out
pop
jne
test
out
imul
dec
xlat
push
sarb
xchg
orl
pusha
and
mov
push
lret
mov
dec
rcl
push
js
in
mov
mov
inc
inc
call
test
repnz
loop
xchg
dec
movsl
xor
push
mov
setg
lea
mov
inc
pop
jl
rcll
cmp
daa
dec
enter
jmp
jne
push
pop
or
cmc
or
loope
cmc
or
jne
into
xchg
out
in
jg
fdivs
and
shl
lds
xchg
int
xor
adc
pop
xor
push
jmp
mov
mov
xor
xor
push
mov
dec
aam
inc
mov
fidivrl
and
dec
mov
sub
push
fdivrp
jae
in
lds
cwtl
mov
rcrl
sbb
pop
mov
xchg
push
or
arpl
jg
mov
jle
xor
jo
xor
xchg
daa
rorb
sbb
pop
lods
cmp
push
dec
ja
ficomps
xchg
fsubs
in
pop
xchg
addr16
add
popa
inc
xchg
rclb
fcmove
xor
dec
mov
enter
fs
out
sub
and
push
in
inc
push
jl
add
sbbb
cld
jb
sub
push
cmpsl
rcll
inc
lret
mov
pushf
cmp
cmpb
sahf
sbbb
mov
and
dec
ret
jns
push
sbb
inc
sti
sub
stc
jecxz
lea
stos
push
and
test
std
lods
inc
inc
out
and
inc
ret
ljmp
inc
xchg
clc
pusha
sti
mov
aaa
push
js
adc
sbb
jae
lods
xor
insb
sbb
or
mov
mov
mov
flds
mov
icebp
mov
inc
push
push
and
in
sub
pop
cmp
inc
inc
push
mov
push
mov
xor
jecxz
or
shl
bound
lock
push
push
push
xor
scas
arpl
mov
inc
add
ss
jbe
cmp
test
inc
inc
or
pop
inc
adc
cli
sub
pop
mov
es
adc
ss
movsl
loopne
xor
adc
cmpsb
les
or
cmpsb
sub
fwait
daa
call
mov
inc
lahf
sar
lea
fadd
aad
xchg
mov
sbb
and
popa
in
pop
subb
stos
lods
cmp
push
leave
mov
repz
and
add
fs
in
jmp
inc
fldl
aas
stos
lock
jb
cmp
dec
pop
add
or
push
pop
aaa
sub
sbb
sbb
xor
clc
pusha
flds
and
je
cmpsb
test
in
or
stc
mov
cmp
dec
add
test
ljmp
jecxz
pop
or
jb
scas
jge
cmc
xor
jns
jnp
dec
jle
and
pop
jp
jo
and
repz
fwait
push
fwait
fwait
push
mov
adc
or
cmp
cli
inc
leave
mov
or
lret
mov
test
add
or
test
jb
cwtl
and
test
pop
shlb
cmp
out
mov
negb
adc
lret
dec
jp
stc
jmp
sub
popa
pop
jmp
roll
movsb
fidivs
insl
dec
pop
sub
mov
imul
rcrl
lretw
mov
pop
mov
mov
jmp
inc
mov
pop
pop
pusha
sbb
cmpsl
jns
mov
xchg
test
dec
mov
pop
sbb
out
xchg
pop
cmp
daa
call
push
out
jmp
adc
sub
dec
xchg
out
xor
push
or
cwtl
popf
or
pop
adc
imul
adc
testl
negb
in
call
jl
in
xchg
push
cmpsl
add
pop
dec
cli
mov
popa
xchg
jmp
es
push
int3
arpl
loopne
test
cmp
xchg
dec
call
xor
jle
mov
test
mov
orb
mov
cli
stos
out
call
pop
loop
loope
mov
ret
rcll
mov
ficomps
lret
jg
dec
dec
mov
jne
inc
fnstenv
ficoml
sub
dec
pop
or
repnz
fbstp
adc
fistpl
jb
fcompl
scas
mov
rclb
int
les
push
in
cld
stos
jge
or
dec
fnstcw
jae
scas
out
xchg
pop
jecxz
ret
scas
mov
sbb
xchg
sarl
xor
add
fsubrs
fs
cwtl
xor
or
out
arpl
and
rorl
pop
push
inc
aas
push
inc
sub
lahf
movsb
sbb
in
insb
out
popf
jle
jp
icebp
insl
jle
int3
xchg
jmp
pusha
jge
sub
jno
mov
and
adc
cmp
add
fs
add
dec
pop
rcrb
inc
or
push
mov
arpl
lods
push
sbb
push
lods
inc
fld
adc
xchg
or
mov
xchg
mov
xchg
cs
inc
mov
push
jns
pop
dec
out
adc
icebp
jle
lods
imul
inc
dec
stc
scas
push
xchg
mov
out
sub
hlt
xchg
fdivrp
dec
scas
sub
fstps
adc
mov
jbe
ja
int3
jl
pop
sbb
mov
cmpsb
cli
int
lcall
and
and
push
mov
je
push
adc
mov
test
sti
das
les
pop
mov
loop
stc
cwtl
lahf
out
xor
lds
movsl
pusha
popf
in
cmp
adc
loopne
pop
lods
cli
popa
test
scas
lods
mov
pop
mov
mov
jg
jae
je
mov
mov
ret
adc
pop
push
mov
pop
mov
jae
jb
loope
sbb
xchg
dec
aaa
or
sti
lods
inc
cwtl
add
fisubrl
cmp
test
movsb
pop
inc
mov
std
out
cmp
cvtps2pd
xor
movsb
mov
mov
adc
cmp
push
adc
or
pop
mov
dec
cmpb
jnp
in
jo
adc
loopne
mov
or
out
sub
subl
jmp
sub
ss
pop
sub
scas
es
xchg
shll
pop
ret
push
ss
adc
mov
mov
mov
pop
push
xchg
mov
push
inc
mov
loope
test
inc
js
inc
dec
pop
in
pop
movsl
cs
fcomi
insl
mov
xor
cmp
pop
push
and
push
imull
mov
test
jo
dec
xchg
dec
aad
pop
scas
jnp
inc
in
jp
sub
in
mov
enter
xchg
dec
mov
imul
xchg
and
test
das
lea
sub
loopne
rcl
nop
pop
insb
inc
popf
lahf
jae
xchg
outsb
in
inc
fs
das
ja
push
insb
cmp
xor
popf
push
xchg
and
cltd
movsl
icebp
add
jno
dec
xchg
pop
cld
inc
cmp
enter
mov
and
or
pop
push
je
mov
and
pop
sub
movsb
pop
mov
add
pop
adc
gs
mov
cltd
inc
jo
xchg
xor
repnz
shl
or
clc
out
jl
fidivs
out
adc
mov
in
popf
lea
sbb
mov
inc
fmull
pop
sub
lcall
ljmp
hlt
cmp
pop
cmp
cmp
fmuls
push
inc
fcompl
scas
cmp
mov
cli
divb
fsubp
sub
mov
jo
pop
mov
jo
mov
fildll
cwtl
sub
adc
mov
mov
sbb
fildll
jmp
andl
xchg
jno
sbb
stc
ljmp
mov
or
out
jmp
in
add
mov
add
dec
rcl
inc
and
rcl
dec
and
mov
stc
adc
mov
xor
pushf
inc
out
in
sub
dec
popf
out
in
cld
xor
ret
mov
fildl
jecxz
ds
stos
cmp
data16
sahf
pop
repz
push
mov
cmp
test
or
dec
push
shll
pop
adcb
and
lcall
push
add
mov
and
push
scas
inc
pop
ficomps
popa
mov
mov
dec
fistpl
divl
test
mov
mov
popa
mov
ljmp
xor
addr16
or
iret
push
sub
inc
sub
mov
mov
push
rol
mov
outsl
clc
cmc
pop
js
jle
jne
add
das
sub
nop
dec
jnp
stc
xchg
mov
mov
lock
test
test
dec
sti
stos
xor
add
and
adc
mov
cmc
aam
loop
mov
dec
inc
xor
or
fsubr
and
mov
or
fnsave
mov
shl
add
xchg
pop
dec
lcall
pop
jmp
cli
sub
adc
add
dec
in
inc
push
mov
out
pop
sti
int
fwait
loope
out
jnp
add
xlat
mov
or
jmp
ljmp
lds
cmp
mov
dec
das
xor
jmp
ss
scas
addr16
test
cmp
jnp
jg
jg
fcmovnbe
adc
scas
sbb
or
and
mov
repnz
pop
mov
fistpl
dec
fcomps
scas
sbb
imul
mov
push
es
mov
addr16
jecxz
pop
mov
and
inc
xchg
lret
sti
sub
fbstp
jb
cmp
xchg
lds
out
pop
pop
mov
and
add
insb
add
inc
arpl
inc
sahf
dec
cld
fbld
shll
lock
ret
bound
xor
mov
loope
gs
sbb
add
loop
inc
sub
mov
jae
jnp
mov
push
hlt
inc
testb
xchg
xor
add
cmp
fildl
lods
inc
call
jp
test
cmp
repz
lods
sahf
std
xchg
mov
js
mov
stos
add
shr
lret
mov
jle
ss
pop
mov
leave
into
js
or
scas
scas
xchg
push
imul
movsl
repnz
xchg
mov
arpl
out
and
je
sbb
jmp
dec
mov
lods
ret
push
push
sti
adc
loopne
inc
adc
cmp
pop
mov
or
jmp
stc
add
fistpll
rcrl
adc
or
cmp
inc
sbb
lret
rcrb
pop
inc
dec
aad
aaa
andl
out
aas
pop
stos
jecxz
pushw
into
or
test
popa
xor
subl
aam
inc
andb
aam
loope
sub
sub
push
jl
or
mov
push
sbb
sub
mov
sar
daa
aam
fcmovne
xor
sahf
inc
dec
shlb
aaa
dec
add
rcl
idiv
pop
and
fwait
mov
mov
xchg
push
and
fcoms
inc
jmp
aad
jmp
sbb
sub
daa
clc
or
inc
jne
push
adc
sbb
les
sbb
ja
add
roll
mov
and
es
jecxz
add
icebp
iret
sub
push
cmp
or
push
adc
or
mov
push
loopne
sub
jae
stc
mov
stos
jl
xchg
add
rorl
dec
loop
psubsb
into
imul
mov
mov
sub
cmp
or
popa
scas
jmp
sti
ljmp
jle
ret
sub
arpl
push
popf
mov
out
push
paddq
cmpsb
mov
and
push
dec
insb
mov
cmp
rcrb
mov
xor
fldt
adc
push
pusha
mov
out
cld
cmp
pusha
out
ret
pushf
addb
add
push
fisttpll
mov
and
scas
popa
jo
rcl
bound
js
add
imul
fstpl
dec
insb
movsl
divl
pushf
cs
mov
or
mov
push
sbb
or
lea
outsl
pop
inc
push
push
push
adc
mov
lret
push
fcmovnbe
call
inc
mov
dec
vmwrite
jl
std
mov
sub
mov
add
inc
mov
xchg
lcall
sub
ss
sbb
sub
add
and
hlt
add
sbb
push
mov
incb
daa
jl
jae
cmp
cmp
icebp
std
insl
les
adc
add
gs
add
bound
jle
gs
nop
imul
sbb
push
lret
xchg
scas
out
mov
jecxz
jge
lds
xor
clc
lret
mov
mov
cmp
mov
pop
push
loopew
lods
add
xor
scas
jae
mov
dec
mov
adc
out
push
or
sbbb
or
mov
aad
cmp
pop
inc
clc
aad
sub
jge
inc
inc
jle
call
dec
adc
rol
sub
fbld
dec
xor
fdivrs
cld
lcall
cmp
dec
jge
fistpll
ds
cmp
xor
inc
aas
or
mulb
cld
push
fisubs
mov
push
xor
pop
jl
jp
rorl
mov
cmp
push
int3
jns
sahf
and
fcmovb
je
lock
fcmovnu
enter
adc
leave
adc
push
je
into
xor
lods
das
imul
lods
mov
xchg
or
fadds
imul
daa
mov
fcmovb
push
rorb
sarb
adc
test
lods
push
jae
cltd
push
or
addr16
pop
jl
cmc
shrb
mov
jp
or
push
les
nop
imul
les
pop
jae
ret
jmp
dec
or
ret
lds
fidivrs
repz
ja
mov
sub
sbb
sbb
ljmp
mull
cwtl
xor
xor
pushf
jb
icebp
ds
les
cmp
lea
jecxz
pop
imul
movsl
jnp
mov
andb
adcl
cmp
pusha
and
jbe
mov
sbb
add
inc
pop
sarl
sub
data16
or
push
mov
jg
sar
cmp
cmp
xchg
mov
imul
out
push
sbb
imul
push
ljmp
xchg
fst
das
mov
aad
data16
sub
imul
cmp
mov
test
push
jl
mov
repz
mov
fdivrp
adc
ficoml
imull
es
mov
out
mov
outsb
inc
cmpsb
jp
cli
pushf
ret
shlb
mov
push
mov
push
loopne
pop
sub
xlat
jle
xor
mov
fstpt
loop
icebp
icebp
inc
pusha
sbbb
jl
push
cmpsl
xchg
mov
andl
mov
push
jge
test
mov
fsubrs
xor
pop
insl
jno
add
lods
outsl
cmp
scas
push
mov
jmp
lock
push
shll
cld
ljmp
repnz
shrl
or
mov
pusha
jae
dec
sbb
std
das
sbb
out
sbb
fs
mov
ja
sbb
gs
pop
push
loopne
add
in
mov
fldcw
and
jns
mov
in
dec
idivl
jp
add
stos
lea
mov
aam
sti
xchg
aam
xor
dec
sbb
cld
pop
mov
mov
jl
bound
jl
cmp
sub
shrl
mov
shll
sub
outsb
push
pop
in
or
adc
pop
jg
mov
cmpsl
xchg
and
out
into
sub
xchg
out
dec
dec
iret
jne
ss
adc
dec
lock
jg
aam
and
insb
jae
aam
mov
shll
loope
cld
lret
mov
lcall
add
test
iret
sub
adc
xlat
incl
and
orl
jne
mov
inc
aad
cs
xor
outsb
mov
scas
insl
sub
push
mov
adc
hlt
insb
cmp
sysenter
fmuls
arpl
cmpl
push
outsl
mov
xor
fs
and
jle
and
mov
sarb
test
mov
fadds
mov
cwtl
movsl
mov
cs
fsubs
pushf
fucomip
cwtl
repz
jl
leave
sbb
stc
xlat
mov
int
bound
sub
mov
jp
add
incl
fwait
lret
or
sub
add
pop
mov
insl
movsb
cmpsl
jbe
pop
adc
jle
add
jne
leave
loope
mov
and
adc
es
sub
mov
repnz
cli
ds
or
inc
jnp
xor
std
arpl
xchg
jg
sbb
pop
enter
cmpl
inc
jnp
divw
push
add
out
arpl
out
lds
sub
pop
sub
test
and
stos
dec
inc
imul
lock
sub
jmp
mov
xor
push
adc
xchg
negb
lods
cli
cli
les
loope
ljmp
or
cmc
jmp
incl
mov
add
popa
push
push
aam
loopne
push
xchg
insl
or
jle
cmp
sbb
cmp
in
fsub
mov
sbbl
popf
inc
rcrb
mov
sbb
jle
sub
sbb
loopne
inc
je
test
clc
outsb
mov
jns
mov
push
imul
movsb
popa
imul
std
dec
insb
jbe
mov
pop
add
mov
jo
sahf
mov
jp
jno
ret
push
cltd
mov
cmc
sti
xchg
cmp
sti
and
jns
adc
fs
jbe
negl
into
xchg
adc
mov
imul
or
int3
push
je
inc
xchg
fcmovne
outsl
loopne
xchg
add
add
push
adcb
shll
xchg
in
ret
push
sub
jp
lret
mov
dec
repz
or
fcmovbe
cld
call
xor
out
and
mov
adc
fldl
push
pop
test
push
pusha
adc
mov
xor
pop
test
push
enter
pop
jl
imul
push
push
stos
fists
lods
xchg
push
adc
xchg
in
push
gs
add
inc
push
shll
fwait
into
scas
sub
cmc
and
fwait
xchg
sub
popa
adc
fs
leave
jns
sbb
mov
mov
btrl
and
add
scas
push
sub
cld
push
lods
adcl
stc
jb
enter
loopne
add
add
outsl
xchg
negl
sub
sub
enter
adc
pop
jns
sahf
sub
iret
xchg
push
lock
xchg
sbb
or
xchg
mov
inc
add
repnz
xchg
int3
push
loope
xlat
sub
mov
add
into
not
sub
rcrl
arpl
mov
flds
insb
inc
cmp
daa
inc
mov
sbb
add
cmpsb
mov
and
loop
ljmp
xchg
cmp
jo
shr
lds
scas
xchg
jl
push
and
mov
lret
stos
adc
adc
mov
lahf
cmpsl
mov
jecxz
sbb
jbe
outsb
and
mov
mov
mov
ja
pop
popf
ror
sti
lock
mov
fwait
dec
inc
add
or
test
adc
pcmpeqd
jecxz
out
or
mov
push
stos
mov
sti
mov
lods
and
movsl
insl
sarl
xlat
cmpsb
push
jecxz
mov
add
stos
or
sub
daa
rcrb
xor
add
ss
and
sahf
dec
scas
or
filds
push
pop
iret
cmc
jle
mov
inc
stc
arpl
lds
test
pop
jbe
ja
pop
cmpsl
jns
push
or
jno
xor
and
xor
cmc
aaa
mov
cld
mov
subb
mov
xchg
and
mov
dec
pop
and
xor
scas
fstpl
cmp
fwait
ss
movsb
js
jmp
push
out
lds
mov
div
int3
or
iret
testb
mov
jae
rcrb
xchg
les
enter
hlt
pusha
cld
jne
pop
sub
fnstsw
mov
mov
fstpl
test
jae
jmp
shlb
jle
icebp
jmp
adcb
int3
push
lods
inc
xor
mov
cs
cs
sub
iret
adc
add
xor
add
mov
pop
movsb
adc
shrl
cmpsl
rolb
push
cmpsl
xor
ja
adc
push
fcomi
mov
adc
aas
inc
ljmp
xchg
aam
fwait
cmp
or
sub
xchg
xor
mov
adc
hlt
sub
mov
inc
inc
into
sbb
outsl
addr16
shll
mov
and
aad
arpl
push
or
insl
scas
dec
pop
lret
sbb
data16
mov
mov
in
mov
out
jbe
xor
jbe
cmp
cmpsb
out
sub
in
test
iret
lcall
aas
pop
xor
adc
mov
insb
punpckhwd
cmpsl
mov
pop
test
loopne
in
sbb
mov
push
les
les
adc
pop
lcall
xorl
jle
cld
shlb
cmpsb
int3
in
xchg
inc
fiadds
leave
push
not
outsl
andb
sarb
sub
or
pop
sub
testb
push
in
fstl
and
lock
fdivrl
jo
clc
fists
push
je
inc
shrl
mov
adc
fs
fcoml
lcall
add
jp
xor
inc
subl
je
fsubl
int3
cmp
xchg
jle
jle
jle
in
mov
xchg
sti
xchg
outsb
repz
cmpb
inc
inc
sahf
xor
mov
or
dec
cs
movsb
repz
bound
in
out
ficompl
jno
out
mov
out
dec
sbb
pop
in
je
inc
and
pop
mov
jae
mov
ds
sbb
icebp
out
imul
xor
push
cmp
dec
mov
mov
xchg
mov
jl
dec
adc
xchg
dec
enter
addr16
imul
inc
repz
es
add
sahf
mov
mov
lock
add
aaa
push
xchg
adc
xor
add
rorl
call
sub
inc
iret
fldcw
ss
mull
lea
test
pushl
adc
add
mov
aas
int
pop
repnz
pslld
inc
les
mul
pop
xor
subl
adc
sbb
cwtl
sub
jmp
mov
rorb
lret
imul
ret
pushf
adc
in
mov
cmp
shll
add
mov
jae
mov
mov
mov
jge
inc
push
push
scas
daa
push
and
sub
cmp
ficoms
paddusb
gs
test
and
pop
sahf
loope
mov
and
sbb
inc
push
repz
push
push
mov
insl
stos
or
clc
jb
outsl
out
mov
inc
inc
xlat
xchg
nop
out
sub
insb
inc
add
and
sarl
push
xchg
mov
add
repnz
nop
xchg
je
dec
fstp
dec
scas
fcmovnb
andb
popa
or
mov
sub
dec
push
mov
mov
idivl
in
insl
mov
stos
sbb
cmpsb
cmp
outsl
out
setle
pop
jbe
mov
outsl
mov
jle
out
outsb
les
jmp
test
mov
mov
arpl
xor
push
push
shlb
clc
pop
xor
mov
icebp
outsl
in
jl
sub
rorl
notl
jb
popa
jne
lret
cs
test
mov
data16
bound
aad
pop
and
xchg
pop
es
dec
adc
cmpsb
xor
add
sbbl
ret
mov
sti
push
xor
sub
data16
mov
mov
inc
sahf
ljmp
pop
mov
adc
sub
jmp
xchg
int3
imul
xchg
mov
sbb
lds
xchg
in
int3
in
scas
jb
arpl
aas
jnp
sub
sahf
enter
and
js
xchg
xor
out
imul
sbb
mov
aad
pusha
add
add
sub
jp
push
adc
xchg
sahf
xor
mov
mov
leave
insb
aad
sub
ret
xor
mov
mov
jmp
add
and
popa
repnz
dec
in
pop
rclb
push
outsl
jl
outsb
repnz
cmpsb
jecxz
push
cld
call
ret
cmp
cmpsb
cld
pop
inc
iret
lret
cmp
repnz
repz
jge
pop
sbb
push
and
sub
fwait
mov
sub
inc
mov
leave
sbb
repnz
xlat
pop
or
lods
stc
jmp
xor
jp
out
mov
aad
shrb
lods
mov
cld
fsubrs
inc
iret
cmpsb
pop
mov
push
xchg
mov
jg
enter
xlat
inc
mov
je
test
and
arpl
insb
cltd
aaa
xchg
das
xchg
out
sub
jns
sbb
ja
bound
andb
and
add
fs
std
mov
pop
in
mov
jbe
test
adc
cmc
inc
sub
inc
in
push
leave
mov
xchg
push
sarl
adc
jo
mov
mov
sub
inc
loopne
add
inc
sbb
pop
mov
pop
mov
sahf
ja,pn
rclb
push
je
push
dec
xchg
hlt
pop
and
jle
ja
std
bound
cmpsb
data16
lds
cmp
subl
in
int3
insl
out
dec
jns
add
mov
xchg
sub
insb
ficoms
push
in
andb
mov
sarb
std
xor
add
mov
clc
ret
mov
test
push
mov
in
popf
sub
decl
dec
dec
mov
inc
cld
adc
sbb
sarb
fcmovnbe
mov
mov
stos
cmpsb
fidivrs
jp
inc
inc
and
repz
jp
cmpb
in
psraw
cltd
cmp
sub
lcall
push
fcmovne
lods
fildl
jbe
pop
loop
jg
leave
push
mov
fistpl
insb
insb
and
lcall
test
sbb
test
and
jg
mov
adc
push
xlat
aas
or
pop
jns
imul
cmp
add
shlb
jmp
int
int3
jmp
movb
data16
popa
cwtl
cmpsb
mov
mov
sub
imul
adc
and
cmp
dec
sarb
mov
sbb
faddp
out
ret
lock
mov
imul
add
cmovg
cpuid
or
out
mov
mov
outsb
add
outsb
xchg
xor
out
push
lret
mov
mov
pusha
xchg
daa
out
out
or
and
add
inc
fsubr
mov
cmc
roll
push
test
xchg
ja
iret
inc
cmpb
inc
pop
jae
jecxz
sub
push
push
test
jmp
push
push
clc
popf
pop
lret
gs
shr
sbbl
and
inc
add
sbbl
sbb
cwtl
mov
sub
notl
cmp
push
scas
pop
jp
sbb
aam
add
popa
jmp
fcmovnb
mov
jo
cmp
movsb
push
jo
xchg
cmp
mov
xor
push
addr16
sub
shlb
ret
enter
clc
mov
inc
xchg
cmp
jecxz,pt
iret
test
icebp
push
jb
cmp
repnz
and
jne
nop
push
aam
mov
ret
test
mov
lock
das
fcoml
sbb
lret
jne
and
or
mov
pop
mov
in
loopne
scas
sbb
jecxz
jl
add
push
andl
fcoml
leave
test
or
jmp
adc
or
inc
xchg
pop
pushf
mov
add
fcmovu
daa
arpl
lds
idiv
pop
inc
push
or
scas
inc
or
lret
mov
jle
or
mov
mov
inc
pop
and
xchg
fwait
sbb
test
loop
mov
sub
cwtl
int3
or
mov
test
inc
pop
jb
jge
jb
mov
and
cmpsb
cmp
jmp
lods
jb
sub
inc
and
sbb
sbb
adc
les
inc
sarb
ljmp
es
dec
sbb
pop
sub
movsb
fdivp
jno
bound
adc
xchg
and
leave
cwtl
aas
sub
stc
icebp
jle
pop
ret
rcrb
fdivrs
and
mov
pop
dec
lea
mov
fildll
sub
mov
xchg
roll
pop
fsubrs
push
sbb
xor
sbb
pop
test
fdivrp
fdiv
jecxz
or
bound
push
mov
jmp
arpl
add
outsb
mov
mov
push
xchg
dec
inc
add
pop
push
sub
ljmp
rcl
add
mov
lret
add
aad
mov
enter
sub
and
cld
push
stos
lcall
test
std
sub
jne
mov
pushf
and
pushf
ds
add
movsl
sbb
lea
pop
cld
mov
cs
fwait
xchg
ds
or
mov
xor
mov
mov
jmp
inc
movsl
xchg
mov
cmp
xor
inc
clc
stc
mov
test
mov
mov
mov
push
cmp
cs
loope
xchg
fcompl
shrb
imul
xchg
inc
ds
push
mov
rclb
inc
cmp
push
dec
sub
aam
lret
pop
int
fistpll
xor
lahf
push
cmp
ret
daa
cs
push
sbb
aas
pop
test
cwtl
jg
int3
pop
mov
lods
mov
outsl
movntq
es
dec
movsl
in
hlt
out
lcall
aad
lods
ret
mov
fimull
mov
dec
out
mov
rolb
xchg
dec
lods
pop
nop
push
sarl
cmp
imul
inc
dec
inc
and
jge
js
pop
push
xchg
adcb
inc
cmp
dec
push
cmp
int3
ja
lcall
daa
push
sbb
or
xor
inc
inc
or
xchg
push
or
popa
mov
mov
je
scas
lcall
mov
pop
mov
cmpl
jo
in
fimuls
jl
ja
int3
es
push
out
sub
mov
push
push
test
iret
jae
cmpsb
sti
xor
lods
push
hlt
clc
xor
fdivr
ret
jle
sbb
inc
xor
aad
fwait
mov
push
sbb
ss
and
inc
clc
mov
neg
pusha
inc
cmp
jmp
cmp
cld
pop
insb
stos
mov
cmpsl
imul
dec
cmp
lret
ret
inc
mov
mov
loop
mov
sti
movsl
push
ds
pop
repnz
dec
mov
adc
cmp
mov
mov
testl
fistps
adc
or
add
jmp
orb
ljmp
dec
push
adc
rolb
pop
xchg
cmpsl
pop
xlat
and
jno
pop
sbb
sbbl
in
mov
sbb
push
mov
dec
or
pop
sarl
push
sub
insb
pop
loop
mov
push
push
sub
mov
arpl
sti
mov
xchg
js
xchg
lret
bound
push
sbb
stos
lcall
mov
out
fnstsw
and
out
insb
or
adcl
inc
ds
mov
push
jae
addr16
adc
dec
and
aas
mov
pop
mov
movsb
mov
andb
mov
push
aam
xchg
mov
rorl
int3
aad
push
or
je
mov
test
or
xchg
mov
sub
fs
into
push
sbb
out
insl
aas
stos
and
ret
mov
test
leave
mov
mov
out
repz
add
inc
inc
sysexit
arpl
or
sti
in
xor
in
sbb
adc
push
daa
aam
or
dec
add
pushf
fsubs
inc
in
fimull
xor
dec
outsb
sahf
lcall
popf
push
push
push
pop
clc
rcl
push
adc
pop
loopne
and
push
dec
nop
es
cwtl
sub
rclb
push
inc
loope
mov
mov
dec
aas
outsl
adc
jo
and
rorb
jge
mov
cmp
xor
inc
sub
mov
inc
add
call
outsl
adc
inc
cmp
movsl
ds
lods
and
ret
cmp
xchg
adc
xor
push
and
mov
insl
shrb
xlat
pop
mov
and
stc
fstl
mov
sbb
mov
pop
scas
js
lahf
mov
mov
sub
lea
je
movsb
xor
fnstcw
pop
sub
out
inc
add
or
adc
xor
adc
sti
mov
lock
xchg
cmp
and
add
jl
mov
test
fucomi
jae
enter
fcmovu
aad
cmp
decl
iret
lock
jbe
sub
and
popa
out
or
adc
cld
notl
inc
dec
or
inc
dec
movsb
imul
sbb
int
fcmovb
jg
mov
ljmp
sbb
jns
hlt
mov
jo
push
into
jns,pt
data16
in
mov
aad
cmpsl
lret
bound
notb
xchg
jo
lcall
pop
or
adc
fbld
mov
push
sbb
insl
out
enter
rol
mov
cwtl
xchg
xchg
jb
cmpsl
add
mov
cmp
cltd
mov
mov
imul
adc
sbb
pop
ja
fistps
mov
mov
sbbl
imul
leave
mov
clc
jo
shll
mov
fisttpl
in
repz
out
je
movsb
ds
imul
inc
cwtl
inc
push
cmpsb
sbb
pop
loope
dec
pop
push
pop
push
test
repnz
xchg
mov
cs
jge
in
jae
or
jge
test
loope
ljmp
es
in
les
jmp
aaa
sub
call
or
xor
jp
adc
jl
arpl
cmpsb
out
inc
and
dec
rorl
sbb
cmp
aam
movl
cli
mov
adc
adc
or
sahf
or
out
adc
jmp
rcrl
dec
rcrb
jmp
adc
das
cmc
cmp
jle
or
xchg
jp
imul
in
xchg
int3
ljmp
sub
or
jge
jl
adc
test
xor
ja
test
add
incb
call
lcall
push
dec
add
test
in
dec
mov
xchg
pop
xchg
outsb
hlt
arpl
aad
jae
push
adc
xlat
int3
jecxz
sbb
sarl
mov
mov
adcb
aam
cmc
shl
popf
test
ret
jg
mov
cmp
dec
mov
fldl
lock
into
mov
add
jno
insb
xchg
push
pop
insb
neg
call
jmp
das
xor
pop
nop
ret
mov
not
jae
jle
add
dec
imul
shll
ss
adc
in
std
call
mov
dec
add
ficomps
and
add
jne
fwait
rclb
xchg
sbb
mov
or
pop
mov
aaa
xchg
aaa
scas
pop
mov
push
pop
jnp
push
push
mov
jmp
sbb
mov
in
push
movsb
pushf
movsb
xchg
push
mov
ljmp
jb
mov
add
out
dec
cmpl
hlt
clc
push
rorl
sbb
cmc
les
mov
jbe
fstps
pushf
aaa
jecxz
sub
push
stos
add
shll
jbe
ret
xor
ljmp
shlb
lcall
pop
outsl
jns
inc
mov
test
imul
adc
lea
sahf
lret
inc
xor
inc
out
cmpb
push
imul
xor
scas
lds
push
jecxz
scas
ret
xlat
movsl
push
xchg
fiadds
sub
pop
lahf
lret
dec
lcall
mov
bound
mov
adcl
jecxz
leave
push
xchg
fstpt
dec
cli
pop
cmp
sahf
stos
cmpsb
lea
cmp
cld
andl
jge
and
into
movsl
sub
push
das
int
js
sub
iret
repz
sbb
fs
mov
mov
pushf
cs
mov
push
aaa
adc
ljmp
rcr
and
movsl
insl
pavgb
pop
and
xchg
mov
xor
mov
adc
xchg
cmp
lcall
cmpsl
roll
test
inc
pop
sbb
push
cmp
pop
cld
mov
pop
push
xchg
sarl
lock
mov
flds
jns
sub
into
or
jmp
push
scas
nop
xchg
jl
aas
push
jg
insb
push
xor
das
mov
ja
lret
fadd
push
or
test
outsb
ret
xchg
pop
add
in
and
test
or
xchg
jno
pop
cwtl
or
out
sbb
pop
push
pop
aad
lret
jmp
les
frstor
cmp
lahf
cmc
nop
push
inc
cmp
int3
lock
jl
icebp
or
mov
scas
sbb
bnd
gs
mov
rorl
and
in
cmp
int
xchg
adc
add
stos
flds
lret
movsl
les
add
out
ror
mov
xor
ret
push
mov
jl
popf
movsl
mov
shrb
arpl
mov
rcl
decl
pop
hlt
cmp
addl
push
jmp
jmp
lock
mov
jecxz
adc
ds
and
hlt
lods
insb
cmpsl
stos
mov
in
fptan
mov
push
sub
fwait
pusha
fsubrl
sbb
stc
dec
jecxz
test
pop
xor
pushf
int3
pop
shr
pop
xchg
or
fidivl
iret
cmp
push
dec
xor
cld
enter
cs
lret
scas
lea
mov
std
les
or
stos
daa
fsubl
pushf
push
cltd
cmpsb
xchg
add
add
jbe
les
test
push
mov
mov
cmp
icebp
out
stos
call
loop
fimull
mov
xor
add
jmp
cmpsl
xchg
or
lock
mov
stc
dec
sub
in
xlat
fbld
pop
push
pop
out
call
mov
lret
int
loope
mov
inc
xor
movsb
fs
outsb
out
or
lcall
aaa
pop
imul
mov
mov
or
lret
repnz
adcl
ret
in
xchg
cmc
movsb
push
in
xchg
getsec
sahf
adc
fadd
inc
mov
mov
repnz
mov
sub
xchg
and
iret
pop
mov
js
out
xor
ss
xchg
stos
sbb
sbb
mov
ficoml
scas
dec
lea
in
sub
push
lds
int
or
mov
jbe
mov
dec
mov
testb
nop
cmp
xchg
cwtl
sahf
outsl
scas
mov
outsb
pop
dec
movsl
mov
add
cmc
or
nop
jle
bnd
sti
push
push
adc
fistpll
aas
mov
sub
jecxz
out
pushf
jb
loop
mov
and
into
mov
lret
xchg
dec
lahf
cmpsl
sub
rclb
sub
insl
into
mov
das
mov
sbb
mov
outsb
and
add
push
adc
aas
test
gs
fwait
xchg
or
scas
add
sbb
andb
inc
or
dec
dec
repz
inc
push
adc
cmp
out
bound
adc
lds
jae
es
xor
daa
pop
cmp
inc
je
and
fdivrs
shll
cmpsb
jae
push
inc
shlb
sbb
mov
ficompl
fists
fidivrl
fcoml
cmp
inc
push
add
sahf
xor
nop
inc
repz
lea
in
adc
adc
out
add
cmp
lock
daa
xchg
leave
jge
dec
sub
iret
outsl
shlb
jne
jb
in
lret
xchg
jo
dec
ss
mov
jo
outsb
mov
aas
sbb
mov
cli
adc
sahf
sbb
sti
andl
cld
int
mov
sbbb
xor
mov
pop
or
scas
fidivrs
enter
xor
ret
pop
in
sub
ljmp
pop
adc
cmp
adc
mov
ret
loop
pop
in
jbe
mov
sbb
and
push
jle
es
mov
out
xchg
imul
add
cli
mov
dec
and
add
fidivrs
push
or
pop
pop
dec
popf
adc
sbb
sub
sti
in
cmpsl
imul
sub
push
insb
inc
inc
mov
dec
sahf
xlat
inc
out
fdivl
mov
adc
cli
push
ja
daa
stos
icebp
stc
shr
mov
push
adc
sbb
cmp
lock
clc
gs
lods
inc
cmp
popf
sub
fidivrl
mov
dec
lret
mov
negl
daa
cwtl
insb
scas
jl
jbe
aad
inc
push
or
bound
cltd
lahf
movsb
xchg
fs
pop
xchg
pop
jp
rcr
les
xchg
lahf
xorl
mov
dec
inc
xchg
mov
mov
out
fisttps
inc
sub
lods
xchg
aam
mov
rclb
adc
sbb
lcall
xchg
or
or
mov
movsl
xor
fdivrl
scas
fsubrs
jae
dec
push
in
push
test
pushf
out
and
andl
or
mov
sub
mov
xor
push
scas
push
or
pop
ljmp
imul
lods
in
stos
adc
pop
sub
mov
repnz
sbb
out
mov
insb
and
sub
arpl
jb
aad
jo
and
clc
outsl
lods
jecxz
inc
roll
push
cmpb
push
add
inc
lds
jl
mov
popa
out
or
xor
pop
jae
ret
mov
pop
push
cmp
clc
dec
and
jge
aad
mov
ret
je
int3
ret
loope
add
ret
and
lds
out
das
aam
idivb
xchg
add
sub
dec
lret
and
push
push
mov
sub
insb
ljmp
push
sub
mov
push
decl
stos
sbb
test
push
out
es
jns
inc
mov
and
add
adc
clc
int3
cli
sbb
xchg
pusha
adc
sub
outsb
inc
or
ds
jmp
testl
mov
dec
fistpl
call
popl
jo
popa
loop
sbb
jp
testl
push
cmp
push
popf
xor
dec
bound
aas
int3
cmc
icebp
jns
or
pop
jmp
test
add
aad
psubd
faddl
pop
xchg
js
enter
imul
sbbb
push
mov
leave
std
xor
addb
or
xor
inc
add
cmpsl
ror
out
jp
call
pop
lock
outsb
loopne
mov
sub
mov
adc
and
mov
dec
sar
bound
lcall
and
adc
cmc
mov
es
add
xchg
scas
pop
sub
cli
les
lcall
call
les
lds
pop
repnz
push
xchg
xchg
sub
push
sbb
cmp
test
cli
in
adc
iret
shl
adc
ds
daa
pop
lcall
adc
outsl
push
cmpsb
std
iret
mov
out
dec
sbb
mov
andb
mov
pop
stc
lea
je
xlat
nopl
mov
mov
dec
fstl
js
leave
clc
int3
sbb
sub
shrl
mov
or
pop
push
ljmp
jl
js
loopne
jmp
mov
dec
enter
aam
pop
and
push
in
sbb
stos
mov
test
js
pop
or
mov
popa
das
data16
xor
into
mov
sbb
xchg
push
cwtd
arpl
adc
xor
and
std
outsb
sbb
push
pop
pop
pop
or
jmp
test
fdivrl
fs
aaa
je
xchg
cmp
lods
scas
xlat
push
hlt
shr
mov
mov
add
mov
fs
adc
test
int
adc
mov
imul
jmp
movsb
and
adc
addb
ljmp
cmpsl
icebp
lods
lea
data16
frstor
lret
jl
ja
cmpsl
mov
mov
loopne
js
sub
into
jb
mull
mov
xchg
lcall
or
sbb
or
decb
jns
fiadds
stc
cmpsb
mov
stc
out
adc
inc
hlt
out
mov
mov
das
dec
subb
push
mov
sub
mov
xor
fnstsw
inc
pop
aam
mov
mov
int
scas
insb
sbb
dec
imul
out
sub
and
loop
mov
jle
pop
and
mov
mov
inc
jnp
sbb
out
inc
cmp
mov
inc
addl
push
mov
dec
pop
ss
shlb
sub
ficoms
aam
jecxz
idivb
mov
out
inc
dec
jp
popa
enter
xchg
cld
push
cmp
fdivr
imul
add
sbb
xchg
sub
pop
jb
sub
mov
cmp
mov
insb
and
cmp
test
mov
pop
leave
orl
int3
jg
mov
ja
pop
inc
mov
addl
lods
push
repnz
jg
adc
adc
sub
sub
mov
pop
pushf
stos
or
subb
lods
stc
outsb
cmpsl
jge
imul
mov
out
xchg
outsl
xlat
movsb
and
sub
xor
into
adc
mov
test
cmp
test
std
stos
push
add
cs
movb
push
xor
in
shrl
out
shlb
pop
adc
lods
in
cs
mov
sub
in
rorb
lods
mov
fcoms
stc
cs
dec
pop
ds
adc
adc
dec
adc
pop
xchg
sub
mov
push
mov
sti
and
jo
cmp
sbb
mov
jp
xchg
jl
stc
arpl
inc
icebp
addb
mov
ret
dec
shll
dec
and
and
sub
popa
lahf
inc
cli
mov
push
ja
sar
push
lods
xor
cmc
inc
cltd
jo
jne
out
sub
xchg
xor
pushf
inc
add
mov
sbb
test
orl
sub
imul
ja
cmp
addb
fadd
mov
jp
mov
xor
or
inc
iret
ret
mov
gs
dec
pop
call
lret
mov
andb
jnp
lods
jg
insl
sub
