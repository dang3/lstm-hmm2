xor
add
add
and
incl
add
add
push
fwait
incl
daa
push
add
stos
addr16
adc
cmp
orb
mov
sub
adc
sub
sbb
xchg
or
mov
sub
pop
mov
add
xchg
or
push
add
adc
lret
aad
and
push
push
mov
add
leave
inc
clc
ljmp
mov
incl
add
add
rorb
mov
jb
fisttps
add
add
push
push
or
add
pop
add
aad
lea
push
faddl
std
fstpt
xlat
add
stos
and
sbb
xchg
xchg
mov
in
lock
jg
out
pushf
stos
fs
adcb
xchg
cmpsl
mov
testl
inc
jae
hlt
mov
add
lods
add
bound
mov
push
xlat
pop
and
stos
add
and
cs
add
shll
cmp
inc
ja
sbb
sahf
dec
ret
mov
insb
and
push
xlat
pop
aaa
xchg
and
sbb
inc
mov
insb
addl
add
xlat
pop
sahf
sbbb
leave
xchg
add
sbb
mov
mull
add
add
subl
mov
inc
add
adcl
decl
call
and
cmpsl
dec
or
and
sbb
and
inc
sar
pushf
mov
pop
mov
jecxz
inc
icebp
iret
push
mov
jns
shrb
mov
pop
call
cmpsb
xchg
loop
or
call
inc
mov
mov
roll
mov
mov
addl
mov
and
add
std
outsb
loop
jns
aam
adc
cmp
and
stos
or
cmpl
in
inc
pop
ljmp
pop
pop
xchg
xchg
aad
es
out
stc
and
daa
adc
dec
loop
adc
pop
jmp
bound
sbb
stc
sub
daa
negl
or
cli
cs
es
dec
or
and
in
inc
das
int3
fisubrs
adc
mov
insl
or
fiaddl
ret
pop
es
and
or
clc
cs
daa
sti
adc
cli
cs
daa
stc
loop
adc
mov
bound
sar
pop
push
jmp
bound
mov
sub
mov
and
decb
or
or
cmp
or
push
in
and
mov
fs
loop
es
out
cld
outsb
push
sar
sub
repnz
sub
push
and
sub
adc
sub
sub
sbb
shrl
in
popa
push
sar
imul
sub
es
sar
sub
pop
call
dec
call
int3
pop
sbb
ret
insb
pop
jmp
outsb
pop
in
sub
jmp
adc
add
aam
sub
loop
adc
pusha
out
clc
sub
mov
pop
sub
adc
or
clc
cvtdq2ps
or
or
push
out
mov
pushf
xor
push
jp
or
push
out
or
out
shll
or
or
leave
popa
or
xchg
dec
mov
jecxz
into
jg
xchg
xchg
mov
aam
push
or
inc
scas
ljmp
mov
ret
mov
mov
mov
scas
outsl
inc
andb
mov
or
or
push
imul
sub
loope
shll
xchg
movsl
or
jns
sub
or
xor
mov
push
loop
sub
inc
sbb
xlat
loop
push
push
rorb
imul
xlat
insb
fimull
add
subl
pop
subps
push
pop
loopne
popf
sub
lods
jle
ja
sbb
pop
mov
push
pop
in
test
and
ss
inc
pop
cltd
aam
inc
jl
out
rorl
xor
test
mov
mov
popf
popa
pcmpeqb
mov
jae
rolb
mov
and
xchg
or
mov
insb
adc
out
add
pushf
adc
adc
stos
push
pop
pushf
sbbl
fwait
sub
lds
aam
fwait
sub
ror
out
xor
push
pushf
push
cs
pushf
adc
rcl
jo
insb
test
xor
jl
cwtl
outsl
mov
subl
mov
imul
inc
sub
push
repnz
sub
xchg
nop
mov
ja
mov
outsl
jp
jmp
lods
lret
mov
pop
fstpt
jge
dec
pop
mov
mov
scas
outsl
inc
nop
and
xchg
data16
push
mov
inc
rcrl
hlt
outsb
pushf
sub
mov
inc
in
mov
pushf
xorb
inc
in
xlat
cltd
push
repz
hlt
inc
stc
dec
xchg
test
jne
xchg
lahf
test
sahf
ja
addl
mov
pushf
int3
mov
sub
in
movl
pop
mov
call
pop
inc
out
push
pushf
pushf
lahf
aam
inc
in
in
fldt
sbb
mov
fists
adc
pop
repnz
mov
sbb
mov
popf
sub
pop
mov
sub
cltd
push
in
add
xorl
inc
pop
in
push
pushf
nop
nop
mov
or
add
xchg
out
rcll
and
mov
cmp
dec
sub
fwait
xor
cmp
jp
cld
outsb
fwait
jmp
in
imul
pop
cmpl
push
inc
or
popf
cmp
or
repnz
push
adc
mov
jl
mov
or
popf
sbb
mov
mov
ret
dec
out
dec
xchg
mov
dec
pop
stos
out
adc
mov
jno
fsts
push
loopne
pop
mov
mov
mov
mov
jp
sub
jb
jmp
adc
or
pop
pushf
sub
or
push
hlt
mov
adc
dec
stos
pushf
pop
mov
inc
out
push
fildll
pop
mov
mov
adc
xchg
popa
add
xchg
subb
mov
test
mov
in
xor
out
mov
dec
je
jmp
insb
imul
ja
xchg
or
popf
cmp
sub
push
pusha
mov
lea
iret
sbb
nop
pop
pushf
sub
setge
mov
pushf
xorl
fiaddl
aad
shr
loope
and
pop
int3
adc
in
push
fwait
jne
gs
xor
popf
add
inc
sub
lds
mov
pushf
or
pop
pushf
sub
add
xor
repz
pusha
fwait
or
ja
lahf
push
jne
add
sbb
pushf
xorl
pushf
sub
inc
pushf
sub
rcll
out
testl
and
testb
out
test
in
push
adc
lea
mov
xor
mov
jns
push
adc
mov
cmpsl
or
sti
lret
pop
xchg
in
fwait
sub
loopne
popf
jmp
ret
aaa
jl
popf
and
add
sarb
mov
or
test
mov
inc
xchg
xor
cli
or
jae,pn
loopne
or
shld
cmp
popa
mov
fcomps
aas
add
sub
loop
mov
rorb
lcall
or
test
dec
stos
push
sti
push
adc
jae
sbb
into
xchg
mov
stc
lea
lock
pop
test
mov
pop
aam
mov
mov
inc
mov
test
mov
and
fnstsw
fiadds
cmp
cmp
pop
mov
repz
mov
adc
scas
pop
lods
cld
sbb
push
or
mov
lahf
jecxz
push
call
popa
insb
aaa
lods
push
xchg
es
hlt
lods
cltd
pop
iret
ret
fs
gs
std
jno
xchg
sarb
push
push
dec
inc
xchg
mov
mov
or
cmp
inc
inc
and
dec
sub
es
sarl
lcall
cs
sbb
sub
mov
xchg
fsts
das
sbb
mov
jg
int
shrb
hlt
adc
mov
repz
scas
cmp
bswap
lret
mov
and
notl
clc
clc
int3
scas
out
xchg
mov
mov
ret
loope
fs
call
sbb
xchg
pop
push
mov
daa
rolb
test
jae
pop
rcrl
cli
loop
icebp
call
mov
daa
pop
mov
outsl
inc
or
xor
xor
fisubrl
clc
pop
popf
push
add
jle
xchg
fs
pop
cmpsb
out
lds
ficompl
sbb
pop
push
inc
sub
jbe
xor
out
sbbl
or
leave
lods
outsb
out
int3
xchg
ret
aam
roll
sub
jae
orb
sbbl
ret
mov
xchg
adc
add
xchg
or
and
mov
push
out
add
shll
adc
jl
adc
cmp
test
pop
inc
jle
jbe
sub
movsb
int
loopne
pop
inc
in
pop
dec
and
mov
or
push
movsb
roll
or
fmull
adc
sbb
mov
sub
add
mov
xchg
dec
popa
push
out
in
add
test
adc
jno
jecxz
mov
adc
je
icebp
test
dec
mov
sahf
rcrb
push
sub
hlt
cmp
mov
add
les
jecxz
inc
sbb
lret
es
cld
cwtl
push
icebp
repnz
cmc
mov
pop
jno
jne
loop
sti
adc
arpl
fildl
jnp
loope
leave
pop
mov
imul
cmpsl
xor
mov
shlb
outsl
popa
adc
comiss
in
in
inc
jg
out
jne
cmc
stos
xor
add
xchg
jecxz
sahf
popf
add
imul
adc
push
not
xchg
test
mov
mov
inc
inc
es
es
fbld
or
xchg
mov
jns
lahf
js
and
jne
jne
adc
test
test
lock
jmp
adc
dec
test
mov
pop
sbb
movsb
push
sub
mov
aam
and
imulb
clc
add
lods
push
mov
repz
cvtpi2ps
mov
inc
adc
xor
jae
mov
mov
sbb
and
xchg
das
out
jbe
out
popf
mov
cwtl
xchg
xchg
add
adc
xchg
mov
imul
jge
lock
push
pop
testl
jae
xorb
je
icebp
insl
push
cmp
sbbl
sbb
add
xchg
inc
or
inc
inc
hlt
xor
mov
outsl
in
sbb
pop
sub
sarb
mov
dec
cmpsl
add
cmpsl
lcall
push
sbb
cmc
es
je
pusha
pop
or
pop
add
loopne
or
ret
scas
stos
das
stos
mov
xor
icebp
adc
push
add
sub
lods
mov
lds
xor
cmp
call
inc
cli
fs
push
clc
push
lods
add
std
out
mov
fstpt
sahf
fst
pop
inc
lock
aam
sbb
stos
add
and
faddl
nop
or
fcmovnb
jbe
push
cmp
mov
mov
je
dec
aas
lods
stc
andl
hlt
xor
inc
lahf
and
jb
adc
xor
mov
pop
mov
mov
add
in
or
mov
fmull
sbb
loop
call
fdiv
adc
xlat
out
pop
in
or
decb
shl
cmp
xor
cwtl
xor
inc
sbb
aam
subl
xlat
loopne
sti
mov
xchg
pop
repz
xor
mov
leave
sti
dec
mov
inc
mov
lret
je
xor
jbe
in
xor
cmc
xorb
sbb
or
or
pop
rclb
das
cmp
sub
cld
sub
mov
push
dec
mov
sub
adcb
pop
rcrb
sbb
stc
sbb
or
data16
mov
jmp
xlat
mov
frstor
imul
lret
push
mov
test
hlt
xor
sub
adc
sub
pop
daa
add
adc
push
jl
lds
mov
jl
mov
cmpsb
js
pop
mov
add
jno
repz
jle
inc
adc
mov
pop
fildl
push
pop
cmpsb
mulps
repz
dec
cmp
push
bnd
out
jecxz
mov
int3
dec
in
mov
pop
push
sbb
rcr
jle
nop
cmc
leave
pop
adc
jno
shl
mov
xor
jae
inc
jle
mov
lock
out
popf
push
loopne
and
cmc
lret
mov
adc
xchg
pop
inc
or
xchg
inc
cltd
out
testb
dec
push
and
xchg
and
in
jnp
out
test
in
rorb
xlat
insl
popa
ror
cmp
mov
mov
and
inc
jne
idivb
test
xchg
adc
test
stc
notb
testb
adc
cld
xchg
xor
lret
imul
pop
pusha
or
stos
pmaxub
je
insb
clc
mov
fwait
mov
xchg
adc
pop
xor
xchg
data16
jno
push
adc
das
pushf
pop
xchg
xor
aas
jecxz
fsubl
jmp
scas
into
adc
and
push
adc
or
loopne
xor
mov
mov
testl
cmpsb
and
scas
loop
mov
push
insl
pop
pusha
mov
pop
sbb
xchg
jo
xchg
lret
lret
in
mov
cld
and
add
jae
rorl
roll
jl
xchg
xlat
dec
popa
jp
pop
mov
sub
pop
sub
jns
imul
or
pop
mov
xor
ljmp
bound
and
mov
and
faddp
stos
loop
outsl
inc
mov
jns
dec
out
xor
xor
mov
add
sub
scas
sub
mov
push
jno
pop
adc
fstpt
cmp
shrb
outsb
inc
sbb
pop
rorb
insb
into
rorl
in
xor
push
inc
mov
inc
add
or
push
push
fdivl
mov
inc
adc
loope
or
mov
jecxz
inc
adc
pop
bnd
in
pusha
movsl
sarb
sub
aad
adcb
cwtl
fildll
and
test
sbb
xor
out
push
pop
out
fadd
rcl
mov
add
imul
mov
adc
add
sbb
cmp
jo
movsl
push
movsl
dec
or
mov
addb
xchg
xor
mov
add
out
add
inc
lret
jg
add
lods
test
insl
hlt
jb
jno
inc
imul
or
sbb
or
or
ljmp
jno
nop
push
push
xchg
pop
xchg
pop
inc
push
nop
mov
inc
lds
cmp
adc
mov
bound
std
push
dec
scas
dec
aad
rcrl
inc
jo
push
pop
pusha
stc
pop
pop
sub
pop
cld
movsl
ds
add
rolb
push
inc
mov
mov
pop
int
repz
lock
inc
cwtl
push
test
mov
fdivl
or
out
inc
mov
pusha
sahf
inc
imul
fwait
sti
inc
xchg
fisubl
mov
lds
insb
mov
and
daa
or
mov
movsl
inc
dec
shr
or
cwtl
out
inc
sub
movsl
popf
lret
bound
andb
out
add
pushf
cmc
cmp
in
mov
rorl
add
push
or
mov
xor
mov
sbb
mov
enter
xlat
movsb
mov
inc
or
or
sub
stos
push
dec
and
push
lret
shr
data16
xor
pop
rcl
dec
sti
inc
add
out
xor
mov
jae
cmpsb
adc
fsubl
or
lahf
add
or
mov
ja
dec
dec
xchg
mov
arpl
cmpsl
xor
sub
lea
or
data16
scas
loop
into
popa
imulb
jae
and
out
push
je
ret
in
sub
jg
dec
mov
sbb
sahf
pop
adc
ja
or
negl
ljmp
push
idiv
jle
dec
test
fstpt
xchg
mov
mov
les
adcb
aam
inc
dec
push
cmc
jb
push
add
lds
and
out
or
in
adc
andl
arpl
xchg
mov
dec
dec
out
aad
add
inc
mov
lret
jecxz
and
int3
push
outsl
sahf
mov
rcrl
add
xchg
lea
flds
dec
mov
xchg
fcoms
cmp
repnz
test
xchg
xor
sar
jne
fadd
add
cmp
jno
lcall
mov
fnstcw
and
bound
push
or
push
std
lahf
or
mov
stc
ret
mov
iret
repz
jbe
jp
in
test
push
sti
xlat
jmp
cld
imul
aad
and
jge
jecxz
or
adc
jl
nop
repnz
push
push
sbb
inc
pop
sub
xor
push
jb
push
pop
mov
hlt
scas
mov
je
ds
sbb
inc
cmp
and
icebp
push
cmp
sbb
lea
push
xchg
out
movsb
cmp
jg
and
shlb
dec
cmpsb
or
jmp
jecxz
bound
dec
clc
orl
pusha
out
mov
rcpps
push
fbstp
sub
inc
repnz
mov
stc
jo
or
mov
jbe
xchg
js
xchg
daa
lret
or
scas
and
dec
cwtl
test
call
in
sub
into
mov
adc
sti
sbb
in
pop
or
sub
cmp
enter
adc
push
adc
out
mov
inc
sub
xchg
ljmp
push
repnz
sbb
mov
dec
inc
aam
sbb
test
loop
mov
ret
cmp
or
mov
dec
icebp
scas
test
push
sub
add
popa
popf
out
adc
inc
mov
add
push
or
push
dec
inc
movsl
pop
les
adc
clc
mov
xor
xchg
dec
jo
push
xchg
jmp
push
cbtw
fiaddl
outsl
jb
mov
fstpt
adc
mov
addr16
jl
sbb
outsl
mov
mov
pop
sbb
sti
popa
lock
ret
sub
or
jecxz
mov
stos
mov
or
jg
and
lcall
fwait
jg
push
lds
xchg
jl
shrl
lret
push
cli
into
shrl
in
cmp
sbb
sub
pop
pop
jne
xchg
scas
add
shlb
stos
xlat
sti
aam
jle
cwtl
neg
repz
or
in
pop
mov
les
inc
lock
cltd
popf
insb
out
push
adc
lret
sub
adc
ret
inc
mov
or
pand
pop
out
popa
cmpsl
ss
xlat
shll
push
add
inc
enter
adc
lret
loopne
adc
daa
inc
lds
sub
add
add
xchg
addr16
add
push
test
or
cmp
int3
cld
pop
gs
fstps
push
push
orl
adc
cmp
mov
dec
jno
dec
xor
dec
or
sbb
pushl
sub
data16
dec
out
adc
lock
imul
mov
test
into
adc
and
add
flds
scas
and
insl
sti
imul
push
jno
in
pop
add
jmp
outsb
fwait
pop
push
dec
push
lahf
sbb
or
mov
movsb
lea
insb
fnstenv
out
add
outsl
mov
lret
push
mov
jecxz
push
movsl
dec
insb
and
or
dec
popa
adc
inc
xor
adc
sub
sbb
rclb
pop
cmp
push
out
add
mov
jb
or
imulb
cmp
shrl
xchg
and
pop
jmp
loopne
pop
test
pop
inc
sbb
idiv
dec
cmc
or
rolb
cmp
arpl
in
push
aad
inc
mov
in
mov
pop
xor
mov
adc
lock
mov
dec
sbb
jecxz
add
jecxz
ljmp
lock
fdivp
push
aam
repz
push
mov
mov
clc
icebp
mov
orl
push
and
push
cmpsl
cmp
xor
lea
lds
icebp
jo
sub
outsl
sbb
notb
inc
add
je
dec
push
movsb
inc
clc
mov
xlat
mov
dec
filds
mov
sbbb
push
mov
cmc
push
mov
sti
sbb
mov
loopne
push
pop
aas
push
rorb
xor
movsb
sbb
ror
push
sbb
pop
addr16
fldt
sbb
mov
loop
jbe
lea
repz
or
lods
cmp
shlb
xlat
mov
cwtl
fistpll
jp
inc
mov
jbe
andl
sti
and
mov
rcrb
sbb
bsf
jne
pop
ds
cltd
rolb
je
adc
sub
adc
push
ljmp
in
out
shrw
fimull
mov
pop
dec
mov
mov
xor
repz
pop
mov
push
ljmp
popf
jge
aas
dec
sbb
ret
repz
or
lods
dec
jbe
cmp
shlb
les
scas
adc
mov
pop
inc
lea
and
outsl
repz
push
jecxz
cmp
inc
scas
mov
pop
xor
adc
dec
add
imul
mov
faddp
sti
jne
movsb
dec
inc
xchg
lcall
jecxz
mov
xchg
adcl
lods
insb
sar
mov
mov
pop
and
jp
jbe
xchg
push
push
dec
popa
int
xor
mov
lret
cmc
mov
ja
and
cmp
add
sbb
xchg
mov
movsb
gs
mov
imulb
lock
mov
add
dec
add
outsb
or
mov
enter
pop
sarb
fisttps
add
incb
xorb
loop
pop
pop
arpl
negl
aas
add
inc
cli
push
inc
add
pop
shl
enter
faddp
cli
idivl
cli
jo
mov
jns
or
lret
std
loop
insl
xrelease
mov
cmpsb
push
rclb
int
push
hlt
jle
jno
es
out
clts
xchg
clc
je
cmp
jp
out
ds
jae
shl
mov
or
popf
and
out
sub
pop
in
pushf
jno
or
clc
imull
push
into
mov
and
movl
std
ja
cmpsb
pop
sbb
lock
clc
mov
jne
bound
push
mov
jns
jbe
push
add
rcrb
test
shlb
and
or
add
aam
adc
sbb
sub
psrlq
xor
negl
mov
sub
ret
cwtl
add
lcall
or
test
or
ffree
inc
jns
scas
lcall
inc
cmp
xchg
pop
lods
shl
mov
add
sbb
jecxz
test
daa
inc
shrb
jbe
arpl
xor
pop
ljmp
rorl
popa
inc
cmp
add
iret
aas
shll
or
pusha
or
mov
xor
push
mov
lds
mov
ja,pn
ja
mov
mov
pop
sbbl
dec
ljmp
mov
add
ret
jg
cmp
dec
or
mov
or
jmp
pop
test
cmpsb
and
push
sub
stc
frstor
mov
pop
scas
cmp
pop
dec
inc
hlt
pop
and
push
sbb
mov
daa
arpl
sbbb
cs
stos
xor
inc
fstps
push
jne
xchg
daa
int
add
sbbb
test
rcll
xchg
inc
leave
or
inc
popf
and
cmc
mov
setae
xchg
es
or
mov
mov
pop
xchg
and
sub
jo
mov
pusha
cmc
sub
pop
ret
xchg
es
xchg
les
loopne
and
push
or
cld
push
es
scas
pusha
mov
push
jp
lods
stos
or
imull
fs
es
push
fnstsw
fiaddl
xchg
dec
inc
cmp
and
xlat
lret
xchg
push
lods
hlt
bound
mov
movsb
xchg
jbe
stos
dec
insb
lahf
clc
or
icebp
sahf
clc
push
imul
je
out
movsl
pop
call
aad
nop
in
repz
xchg
shlb
dec
or
int3
dec
je
mov
xor
loope
or
mov
mov
adc
aam
gs
jl
cmc
mov
lds
lea
dec
in
test
popf
mov
adc
cltd
int
leave
pusha
mov
push
pop
mov
scas
or
pop
adc
gs
sub
fwait
cmp
in
mov
or
mov
jecxz
jne
stc
test
push
mov
inc
into
mov
sub
sub
cmp
jns
ret
push
insb
mov
popf
and
out
mov
mov
std
push
jbe
aam
push
mull
inc
pop
outsl
clc
push
inc
or
adc
int3
jg
mov
scas
pop
adc
mov
sub
xchg
enter
mov
arpl
ss
iret
lcall
dec
lods
xchg
cmp
leave
dec
lds
pop
loope
and
fs
fnsave
jp
jl
and
sub
aas
mov
movsb
adc
incl
jbe
stos
push
push
mov
xchg
xor
push
lea
inc
icebp
insl
fadd
pop
jae
push
pop
cmpsb
mov
pushf
or
inc
sbbl
shll
shrl
mov
xor
aas
sbb
rcrl
adc
fsubrp
stos
dec
pop
or
stc
mov
pop
xchg
pop
or
lods
mov
xor
je
push
dec
sub
out
jno
adc
aad
mov
int
incl
pop
cmp
or
sbb
lock
xor
jle
mov
lret
mov
mov
in
xor
push
outsl
jo
jnp
mov
in
add
out
sbb
add
push
ss
xor
jle
test
pop
mov
sub
mov
pop
cmp
or
or
ret
mov
push
cld
jge
xor
sub
sbb
test
and
fidivrs
adc
push
jge
cpuid
lea
and
lea
cli
repnz
je
xchg
xor
mov
or
push
fstps
jecxz
cltd
bound
sub
insb
lcall
jle
push
jbe
repnz
adc
jae
cmp
push
sahf
fcom
fimull
aam
xor
sub
popf
jecxz
daa
dec
addr16
icebp
and
dec
or
fwait
push
adc
xchg
stos
imul
push
sbb
add
mov
adc
xor
int3
shll
lret
cmp
jbe
sub
pop
push
jno
adc
xchg
add
stos
pop
xchg
aad
jge
imul
xor
jge
and
mov
lahf
dec
imul
mov
sbb
scas
xchg
negl
pop
cmp
add
xor
loopne
dec
adc
je
outsl
xchg
xchg
das
push
jae
repz
or
adc
mov
scas
fwait
xchg
jmp
sbb
sbb
push
repz
push
sub
xor
and
add
mov
inc
cmpsb
or
mov
jns
dec
popf
push
cmp
daa
jmp
ror
test
and
dec
lock
add
loopne
loop
aad
int
aas
push
xor
out
mov
mov
inc
leave
mov
out
icebp
mov
aaa
pop
push
fcmovu
in
jnp
scas
test
push
je
lds
lahf
xorb
cmp
cmc
xchg
dec
push
cmp
dec
cmp
adc
cli
cli
out
pop
mov
cmp
add
pop
add
loop
jl
aas
xor
mov
popf
jmp
mov
lret
bnd
and
fdivl
out
cs
push
rcrl
pop
sub
into
mov
popf
add
andl
sarl
dec
in
test
pop
lret
imul
arpl
dec
orb
mov
cmpl
xor
cmc
and
movsl
cs
cltd
jmp
je
adc
ret
jo
popf
add
aas
pusha
clc
jno
pop
and
jecxz
mov
push
cld
xor
div
xor
pop
ficoms
jno
rorl
jecxz
or
stos
jl
enter
and
test
or
mov
imul
mov
pop
aad
adc
xchg
out
add
push
insl
or
negl
insb
addr16
inc
mov
outsl
push
mov
push
negl
or
sbb
cmp
les
xor
pusha
subb
mov
xor
sub
mov
inc
xor
mov
es
jb
popf
sbb
xor
js
push
ja
cli
sub
aam
adc
aam
fistpll
jp
ja
xor
and
cmp
jbe
in
inc
sbb
pusha
add
fldenv
ss
mov
mov
inc
push
bound
notb
pop
add
cmpb
daa
shrb
and
lcall
mov
dec
in
add
jg
aaa
aas
add
mov
shll
call
cld
stos
sub
push
sub
mov
pop
push
xor
aaa
xor
inc
inc
inc
xchg
mov
insb
pop
sbb
out
outsl
loop
add
or
cltd
or
xor
arpl
and
mov
xor
mov
cltd
ja,pn
jecxz
out
lahf
inc
aaa
outsl
push
adc
pop
ret
push
pop
lds
ret
xchg
adc
sbb
adc
sub
mov
push
cmc
lcall
inc
sbb
cmovne
cmpsl
adc
test
adc
shrl
and
pusha
xchg
lcall
sub
fwait
pop
sub
sarb
mov
add
enter
loope
icebp
cmc
bound
jecxz
or
xor
in
stos
aaa
mov
cwtl
outsl
fmuls
int3
out
inc
pop
addr16
push
out
lock
adc
push
mov
sbb
repz
or
xchg
jbe
add
sti
add
mov
mov
xor
sahf
in
pop
arpl
adc
lock
sbb
pusha
jnp
pop
stc
shrl
in
push
mov
jle
fcmovb
sbb
cmpsl
fistpll
sub
sbb
mov
or
rclb
sub
add
clc
cmc
pop
pop
lock
jnp
or
into
mov
lret
dec
adc
repz
mov
inc
sub
pop
push
sbb
sbb
rcr
ret
adc
movsb
rclb
jns
cli
cmp
leave
push
or
loop
add
out
jne
jne
movsb
pop
pop
repnz
sub
push
dec
hlt
outsl
dec
sub
gs
dec
or
popa
hlt
inc
and
sbb
aad
push
ljmp
gs
fwait
xor
and
jge
mov
mov
pop
fdiv
xor
add
out
testl
cwtl
rolb
and
inc
movl
xchg
pop
lock
ljmp
int
mov
and
jae
scas
repnz
xchg
dec
repnz
sbb
orb
sti
pop
data16
fbld
je
sub
loope
addl
lds
sub
notl
out
pop
cmp
jno
in
dec
lods
xchg
xor
icebp
xorb
or
daa
or
mov
sub
sub
push
aaa
in
in
sub
add
sbb
jmp
adc
outsl
shrl
mov
test
add
lods
fstps
mov
lea
xor
push
test
cld
dec
xchg
fxrstor
or
fs
xchg
ret
push
jo
pop
ljmp
cmp
sub
out
daa
jne
stos
test
pop
jns
mov
aam
test
lcall
pop
dec
or
gs
xor
enter
cld
int3
xchg
pop
in
scas
out
sti
loop
inc
lahf
mov
in
push
and
cld
mov
adc
andb
push
adc
or
jae
inc
and
int3
jne
pushf
insb
sub
add
adc
repnz
fdivr
mov
aad
fsubr
pop
jp
mov
xor
movl
xor
test
pop
dec
cmpsb
aas
cmpsl
mov
in
popa
lea
out
arpl
mov
rorl
fdivl
mov
mov
mov
aas
call
ds
mov
mov
push
jl
inc
lret
dec
pusha
jp
call
lods
jecxz
xor
mov
sub
pusha
and
xor
sub
adc
pop
movsb
inc
aad
aas
add
pop
push
test
popa
hlt
int
cwtl
xchg
xor
xor
mov
xor
popaw
add
inc
out
int
cmpb
mov
ss
popf
mov
sbb
mov
dec
xchg
aam
loope
or
lea
mov
push
lcall
icebp
out
add
mov
or
xor
lds
push
or
int
test
cltd
add
dec
ret
or
aam
js
adc
and
popf
sbb
rolb
stos
shll
rcrb
test
adc
and
outsb
fmull
and
xchg
jno
int3
dec
and
pop
into
es
mov
cld
push
push
sbb
into
mov
push
out
adc
xchg
outsb
ret
sbb
pop
and
test
movsl
imull
data16
in
mov
and
enter
outsl
lret
out
out
sbbb
and
mov
je
mov
push
js
lahf
fcomps
push
addl
stos
rorb
sbb
dec
or
mov
pop
test
int3
jne
in
sahf
xor
inc
mov
lods
mov
out
pop
fmuls
data16
add
movsb
xor
outsl
rol
cmpsb
repz
sub
sub
push
loopne
adc
rclb
sbb
add
add
cli
and
gs
bound
negb
mov
push
in
pop
ret
cmp
cmpl
add
pop
scas
jl
mov
scas
mov
and
fxch
lock
lods
and
pop
js
loope
add
lret
jmp
push
in
and
lret
das
xchg
jmp
mov
xchg
andl
test
in
push
xchg
jle
push
movsb
es
mov
pushf
cmc
mov
scas
sbb
scas
mov
adc
or
dec
or
xlat
jae
xchg
in
xor
sarb
dec
jne
sarb
cmpsl
dec
mov
sub
ss
lahf
or
lret
clc
dec
dec
pop
xchg
fwait
aam
stos
addr16
mov
xchg
adc
xor
pop
cld
sbb
iret
xor
inc
xor
sub
adc
dec
xchg
xchg
jnp
fiaddl
jg
add
clc
imul
pop
movsb
adc
inc
push
mov
mov
add
fbld
fsubrl
les
or
stos
pop
pop
mov
data16
fs
insl
jnp
sahf
cs
cmp
shl
scas
add
sahf
or
cmp
jbe
mov
out
punpcklbw
andl
negl
inc
imul
xor
insl
sbb
movsl
jo
hlt
inc
lock
ss
shll
inc
xchg
movswl
sbb
mov
sbb
fnstsw
ja
icebp
std
jmp
shr
sbb
imul
shrb
mov
pop
call
dec
lods
jg
xor
xchg
xchg
pusha
adc
shlb
inc
outsl
loop
scas
and
rorb
lret
popf
mov
jle
in
pop
mov
cmpsb
ja
adc
loopne
xchg
cmp
sbb
outsl
xor
xchg
dec
add
inc
cmp
loop
or
jmp
adc
outsl
jo
mov
mov
push
add
movsl
cmp
pusha
test
mov
in
mov
sub
mov
test
mov
shrl
inc
stc
movsl
mov
mov
jle
or
in
popf
push
mov
hlt
outsl
jne
dec
sbb
xchg
jne
jle
es
and
mov
cs
push
mov
lock
cmp
test
ret
xchg
xor
sbb
arpl
cmp
movsb
test
jb
push
arpl
ret
xor
imul
cmp
xor
lret
mov
imul
jns
popa
arpl
inc
sahf
sub
scas
stos
insb
jb
cmp
inc
mov
iret
push
imul
scas
mov
pop
gs
or
pushf
sahf
sti
xchg
xor
xorb
push
mov
faddp
dec
jo
xchg
shl
in
leave
je
rcrb
push
lret
adc
dec
mov
xchg
dec
cmp
mov
enter
in
repz
xor
push
pop
jbe
sbb
adc
aad
jle
aad
js
enter
fistl
xchg
scas
aad
jecxz
xlat
dec
stos
push
aad
inc
push
rcrl
xor
pop
pop
in
fnstcw
add
dec
xchg
lods
cli
push
aad
or
jae
icebp
movsb
jo
pop
push
insl
bound
ret
lret
fmull
push
andb
out
mov
add
in
push
jnp
dec
fldcw
sbb
imul
xchg
lahf
aas
cmpsb
push
hlt
jg
test
and
mov
cmp
mov
jmp
inc
push
sub
aam
pop
es
enter
adc
nop
cwtl
mov
and
test
les
call
popf
add
xchg
cmp
xchg
fstps
outsb
jno
push
pushl
cmpsl
sbb
xchg
jg
imul
jae
ffree
stos
aas
xor
daa
in
cmc
scas
cmp
push
mov
dec
mov
xor
and
or
mov
add
outsb
cmp
xchg
cmp
iret
inc
xchg
icebp
xlat
and
cs
iret
mov
das
mov
adcb
and
xor
push
ja
cmc
add
pop
aam
xor
lret
and
scas
and
cld
jmp
dec
mov
add
xor
lods
add
cmpsl
add
sbbb
adc
sub
mov
pusha
bound
mov
and
xor
nop
xchg
push
mov
xchg
test
out
lods
jno
mov
adc
and
mov
aad
fdivl
push
pop
dec
addr16
or
icebp
xor
sub
xchg
or
sub
xchg
push
jo
sub
jae
insl
sub
inc
or
fmull
sbb
out
push
dec
push
mov
aam
xor
icebp
jle
xchg
jl
es
ret
xor
xchg
adcb
outsl
out
filds
cmpsl
xchg
xchg
leave
repnz
jno
inc
test
push
dec
enter
sahf
aas
int3
jmp
add
fsubrl
xchg
imulb
jo
in
xor
and
xchg
jo
mov
popf
mov
jecxz
and
mov
mov
out
pop
add
pop
mov
mov
aas
loop
loopne
dec
cmp
dec
imul
pusha
repnz
outsl
fmul
out
jns
adc
stos
pop
push
lods
stos
push
lret
dec
stos
inc
and
xchg
icebp
pop
xchg
andb
fwait
add
pop
loopne
cld
xlat
in
and
in
mov
fsubrl
cmpps
cmp
sbb
xchg
mov
fnstenv
outsb
ja
fiaddl
jp
es
inc
dec
mov
loopne
or
out
sub
jae
mov
in
sub
out
sub
sahf
cli
cmpsb
call
inc
lret
adc
xor
inc
sub
sahf
insl
and
xor
lret
aaa
in
rclb
xor
cmc
push
jnp
ret
inc
jo
mov
mov
sub
testl
or
push
sub
jp
xchg
dec
fbld
jo
insl
ljmp
xchg
pop
pop
push
aad
insl
jmp
mov
hlt
xchg
sahf
xor
jae
and
and
jno
and
loope
test
adc
popa
xor
insb
lea
pop
adc
mov
jg
out
jae
mov
cmp
outsl
jp
xor
lea
xor
sub
or
aam
mov
mov
jmp
je
pop
and
aad
mov
test
sub
or
leave
push
iret
enter
xchg
adc
shrl
das
ljmp
pushf
cs
stos
or
daa
stos
mov
pop
push
mov
add
loopne
cmp
das
xchg
icebp
movsb
into
icebp
or
jno
jge
xchg
add
out
mov
loopne
dec
mov
into
out
lcall
loopne
pop
mov
das
cld
addr16
out
in
aaa
rclb
cli
jae
hlt
pop
add
lods
rol
jl
mov
sbb
repz
test
sbb
fidivrl
jp
inc
or
insb
lea
jb
mov
repnz
and
outsl
flds
jp
adc
rcl
mov
push
adc
jno
push
pop
dec
or
out
ljmp
add
aaa
movq
mov
test
jle
xchg
xor
dec
add
and
stos
loope
push
jae
test
and
sbb
cs
into
jg
or
rcl
jne
sbb
filds
lret
andl
sbb
js
jns
adc
mov
pusha
pop
mov
xchg
xchg
push
mov
loopne
push
dec
push
adc
shll
sti
adc
addr16
pop
loopne
sub
dec
adc
loope
add
test
or
sbb
mov
xor
sub
sahf
mov
lds
add
cmp
pusha
cld
hlt
mov
xchg
lahf
icebp
cwtl
fmuls
adc
iret
and
shrb
nop
mov
lods
lret
scas
push
pop
mov
xchg
mov
mov
movsb
jge
out
ret
ljmp
or
fs
pop
aas
mov
push
arpl
and
xor
pusha
test
dec
xorl
test
xor
ss
in
outsb
arpl
pop
int3
jnp
cmpl
jge
mov
push
pop
int
jo
adc
test
xchg
mov
cmpsl
lock
test
repz
xor
add
inc
fsubs
hlt
and
or
mov
dec
jle
mov
push
sbb
aam
jne
mov
jge
idiv
pop
add
stos
push
adc
pop
rcr
sub
ljmp
bound
or
fstp
in
arpl
inc
xchg
aaa
icebp
es
std
jp
das
rcll
xchg
xchg
sbb
ljmp
sub
scas
adc
push
int
inc
add
jecxz
jnp
mov
xchg
in
xchg
fisubrl
push
iret
scas
mov
mov
push
mov
aas
sub
inc
mov
std
out
lret
jno
mov
cmp
jbe
imul
push
pop
cmp
lcall
sub
imul
mov
cmp
icebp
sbb
rcrb
sub
inc
add
add
or
push
xchg
adc
lea
bound
push
lock
lods
mov
inc
call
std
fwait
testb
fs
inc
mov
in
aad
outsl
inc
push
loop
jle
mov
xchg
rorb
ret
push
call
mov
sbb
mov
dec
sbb
adc
jmp
aas
jbe
in
mov
push
pop
push
xchg
cmovp
das
cmpsl
mov
popa
arpl
enter
cld
mov
les
push
into
aas
push
pop
cld
mov
shrb
insb
decb
jl
mov
inc
pusha
and
mov
or
or
roll
jo
inc
fdivrp
outsb
sarl
cmc
or
std
ja
out
std
sti
in
sbb
cmp
das
mov
pop
cmp
mov
movb
mov
jae
mov
test
and
aaa
pushf
jne
cwtl
dec
cwtl
mov
ret
pop
push
and
outsl
int3
push
add
jo
stc
ljmp
cmpl
aad
mov
aam
inc
mov
mov
xor
ljmp
mov
stos
jbe
pop
lea
pop
or
aaa
leave
les
ds
imul
inc
mov
hlt
mov
inc
cmp
or
enter
jl
clc
mov
push
call
ja
jne
flds
andb
jnp
xchg
int3
push
xchg
or
ret
outsl
push
rcrb
pop
outsl
lods
push
ja
xor
pop
mov
sarl
xlat
mull
call
lret
iret
xlat
add
rorl
xor
dec
push
ficompl
pop
dec
out
add
pop
mov
jns
fnstsw
stc
push
fldl
mov
aam
pusha
scas
iret
ljmp
stc
rolb
adc
nop
dec
lock
mov
push
subb
ja
adc
adc
jne
inc
movsl
loop
sbb
mov
mov
pop
lea
mov
pop
orb
push
mov
in
call
mov
aad
stos
int3
jbe
scas
outsl
repz
xchg
out
mov
lret
push
pop
mov
push
fdivs
xor
daa
pop
ja
ficoml
jb
cmpsb
mov
mov
push
mov
mov
inc
stos
sub
jmp
test
mov
addr16
push
cmc
lock
out
mov
inc
outsb
add
push
pop
push
cmp
jne
dec
mov
or
xorl
xor
jecxz
cmpsb
nop
outsl
repz
fs
xchg
repz
push
imul
ds
clc
xchg
mov
sbb
xlat
and
adc
adc
fdivl
and
jae
mov
sbb
iret
test
mov
add
subb
fidivrs
cmp
lock
imull
outsl
dec
inc
mov
stos
dec
leave
scas
fnsave
sti
jmp
add
sbb
push
lret
mov
push
mov
and
fs
ret
pop
movsb
push
and
fwait
icebp
popa
outsl
sbb
and
or
adc
loopne
jae
loopne
push
push
aaa
mov
xor
jns
test
inc
cmp
mov
or
cltd
les
xlat
in
lcall
loope
scas
loop
imul
imul
cs
loope
mov
repnz
pop
jo
enter
xlat
test
add
sarl
bound
add
sbb
add
sbb
jae
arpl
or
add
call
lcall
loopne
cmp
xlat
xor
dec
and
iret
ja
outsl
in
inc
push
cltd
scas
mov
mov
test
mov
xor
push
lret
jo
pop
sbb
repz
xchg
jmp
push
add
sar
data16
inc
or
fwait
pop
mov
jns
dec
cmc
test
outsl
dec
out
adcb
dec
ret
scas
es
add
lcall
pop
jae
loopne
cmp
imul
fcmovnb
mov
enter
add
jle
mov
dec
jno
int
lock
mov
pop
sub
mov
or
hlt
and
cwtl
inc
fmuls
xchg
mov
and
test
lods
and
mov
lret
leave
je
pusha
dec
or
fs
ficoms
mov
mov
cmc
stc
adc
jns
sub
shrl
mov
ret
adc
and
pop
sub
or
mov
mov
out
cmp
and
popf
scas
mov
and
mov
jmp
ret
lret
outsl
out
dec
mov
mov
sub
xchg
add
add
push
inc
movsl
pop
ficomps
mov
gs
mov
inc
fs
scas
test
test
iret
imul
mov
mov
cltd
jg
mov
cmpsl
push
pushf
dec
stos
call
jge
pop
xchg
popf
aaa
pop
sti
cmpl
decl
cwtl
xchg
movsl
and
je
add
mov
xchg
fxch
mov
cmp
sub
repnz
mov
movsl
adc
add
loopne
sub
lea
push
shl
icebp
mov
repnz
loop
cmp
jmp
dec
daa
jge
out
testl
adc
inc
adc
repnz
add
push
jbe
mov
stc
outsb
mov
pop
adc
mov
dec
stc
mulb
inc
or
popa
stc
lret
adc
mov
push
js
ret
bound
jbe
bound
ja
leave
cmp
lock
inc
push
cld
lea
loopne
or
stos
sbb
push
jae
stc
lcall
pusha
mov
cmp
hlt
lret
xor
push
xchg
xchg
pop
inc
lahf
fnsave
pop
stos
jb
pop
popa
mov
push
pusha
out
shrb
sub
jg
aam
arpl
jbe
jo
int
add
dec
testb
or
fldl
pop
into
jb
int
mov
ds
testb
divb
testb
push
pop
mov
shll
mov
ja
mov
rol
ret
movsb
or
jb
push
cmp
bound
in
inc
iret
jno
add
pop
in
fcmovnu
hlt
in
push
cmpsb
sbb
jae
xlat
test
inc
mov
repz
es
ja
add
mov
jns
shl
sbb
fiadds
pop
call
push
inc
test
mov
sub
xor
mov
das
adc
jg
mov
jns
mov
or
adc
outsb
or
and
sbb
fmull
pushf
pop
dec
daa
cltd
add
mov
sbb
loope
insb
imul
push
xchg
xrelease
aad
dec
jae
cmpsl
push
pop
movsb
ja
adc
std
out
aam
inc
add
mov
loop,pt
jne
sbb
cld
lahf
push
stos
or
xlat
add
or
xchg
loopne
jge
cmc
hlt
mov
scas
aas
push
adcb
add
sub
or
xchg
lret
mov
std
in
push
dec
or
dec
imul
bound
les
mov
rcrb
adc
lcall
rolb
lds
repnz
sub
mov
cmp
xor
adc
sahf
test
pop
push
push
add
das
cmp
iret
xor
lods
loope
aad
out
ret
cmp
nop
inc
sub
mov
push
sti
mov
rcl
lahf
xchg
cmp
cmpsl
andl
mov
push
pop
mov
xchg
pop
push
ljmp
inc
and
mov
test
mov
and
rolb
into
mov
dec
mov
jle
xchg
add
xchg
sbb
jns
add
insl
adc
clc
cmc
inc
jo
aas
ja
push
sti
loope
push
rcrl
cmp
xchg
pop
cld
js
test
aam
sbb
ret
sti
cmpsl
sbb
mov
pop
and
aas
aas
adc
imull
dec
mov
or
mov
and
dec
pop
mov
adc
add
mov
inc
mov
mov
daa
mov
cmp
jo
dec
testb
mov
shlb
jb
inc
bound
daa
push
pop
stos
push
add
pop
in
mov
xchg
call
sub
or
cwtl
push
daa
dec
xlat
ret
arpl
sub
sbb
lea
cmp
loop,pt
mov
test
sub
push
testb
push
push
sub
xchg
mov
test
rclb
insl
lea
lock
fs
dec
inc
dec
adc
ret
cmp
inc
cmp
xchg
test
dec
jl
push
push
jmp
cmc
das
jp
pop
ficompl
daa
push
mov
int3
mov
out
xchg
clc
jbe
push
sti
push
rcrl
lea
mov
std
popa
push
cwtl
les
lea
xor
pop
pop
das
es
add
adc
push
aas
outsl
dec
cmp
popf
cmp
push
mov
sub
loopne
sti
jb
ret
pop
or
out
xor
lods
jle
out
mov
pop
mov
popf
jp
sahf
mov
shll
add
cmp
addr16
mov
jmp
mov
fiaddl
jo
inc
sarb
fcmovnu
das
jmp
int
add
mov
iret
push
stos
pop
push
aaa
pop
and
pushf
jge
inc
sbbl
jl
mov
add
lds
int
adc
jae
out
shl
cmp
movsl
pop
lds
dec
insb
add
and
fsubr
jg
or
rolb
outsl
push
cmpsb
jne
in
shlb
mov
inc
repnz
inc
push
popa
inc
mov
sub
pop
div
adc
mov
sbb
push
or
mov
push
add
test
es
xor
cmp
ltr
xchg
cld
mov
in
adc
xchg
mov
fildll
xor
fsubrl
mov
sub
and
adc
inc
xchg
xchg
push
sub
rolb
inc
pop
aaa
xchg
sbb
aad
push
mov
shlb
add
inc
mov
dec
sbb
jecxz
sbb
add
shlb
aaa
into
xchg
push
mov
in
jno
inc
aaa
inc
sub
ljmp
sub
jge
add
add
adc
clc
and
cwtl
push
loop
pop
roll
mov
mov
jns
pop
mov
push
out
and
mulb
cli
dec
cltd
cmc
aam
bound
aaa
popa
std
xchg
mov
cld
mov
pop
lcall
je
das
into
sbb
fbstp
std
pop
repnz
push
inc
lods
mov
mov
test
cmc
add
inc
dec
aaa
popf
nop
adc
jp
push
mov
adc
pop
dec
fiadds
dec
out
xor
lock
imul
jg
xor
adc
add
neg
mov
pop
adc
add
or
lock
lcall
sbb
js
cmp
push
icebp
jle
pushf
mov
ja
inc
insl
mov
sub
sbb
jecxz
cwtl
jmp
cmp
testb
inc
sbb
test
lea
cmp
imul
mov
out
jmp
xor
frstor
test
add
mov
cmc
pushf
pusha
les
mov
aad
leave
adc
test
iret
cmp
bound
push
jno
push
inc
mov
sub
mov
fwait
mov
das
inc
cmc
and
sub
shll
sub
outsb
insl
loop
pop
xlat
ret
xlat
dec
sub
int3
sbb
push
daa
add
test
sub
push
inc
lahf
push
pop
push
adc
dec
sub
shl
int
out
test
xchg
mov
test
pop
outsb
lds
cmp
add
je
inc
mov
das
rcrb
in
xchg
imul
icebp
inc
aam
xchg
test
cltd
pop
test
aaa
loop
push
in
lcall
inc
pop
cld
jle
mov
insb
sub
jae
sbb
notb
mov
and
sbb
out
jg
cmp
mov
adc
or
xchg
fdivs
ret
sub
push
or
cmp
mov
test
xlat
ja
or
inc
mov
int
mov
add
addr16
in
and
cwtl
into
in
cs
and
cmpsl
pusha
ret
das
cmp
lret
mov
sbbb
jo
inc
dec
mov
cmp
mov
mov
sub
mov
fimull
xor
repnz
je
mov
fs
daa
cmp
xor
sub
xor
lret
and
sbb
or
pop
adc
sbb
sbb
ljmp
cld
stos
in
xor
fidivl
les
sti
ficompl
mov
or
dec
dec
mov
mov
outsl
je
sub
dec
test
xor
sub
sti
lods
sub
xchg
call
mov
mov
add
add
cli
and
dec
bound
pop
daa
dec
push
fnstenv
pop
in
push
cmp
je
icebp
inc
loopne
add
adc
jle
icebp
jne
and
inc
imul
sub
into
lcall
push
loope
pop
and
gs
jbe
and
add
mov
pushf
mov
jo
out
xchg
or
pop
pop
xor
ret
mov
and
dec
in
inc
std
adc
and
scas
mov
push
dec
stos
jmp
lds
inc
loope
in
movsl
mov
lods
xor
xchg
mov
or
add
xor
sub
push
andl
xchg
mov
lea
inc
mov
cmp
js
rorl
mov
movsb
je
mov
jmp
dec
xchg
inc
dec
dec
add
or
inc
mov
mov
xchg
pop
jo
xor
imull
fwait
mov
mov
cmp
jno
test
mov
mov
inc
pusha
out
repz
cmp
inc
adc
sub
mov
xor
push
enter
xor
icebp
cltd
fistl
pop
push
push
xchg
mov
fucomp
shlb
movsb
stos
pop
fcmove
or
sti
lds
insl
loop
cmp
fcmovb
imul
dec
rol
es
jle
add
outsb
mov
stos
movsl
icebp
adc
lret
mov
jp
pop
lock
lea
mov
aam
mov
mov
in
mov
popa
or
ds
shll
les
sub
fisubrl
push
or
mov
sbb
and
jg
mov
aaa
fs
jae
push
mov
inc
ljmp
mov
lock
icebp
aad
xor
or
scas
add
or
or
or
jae
ss
adc
stc
out
mov
pop
sub
mov
cwtl
call
bound
es
mov
mov
pop
addr16
movsl
jns
dec
movsl
and
in
std
add
clc
pop
sub
aam
pusha
addb
ljmp
inc
push
mov
call
mov
popf
subb
cmc
and
aas
je
xlat
mov
mov
mov
mov
loopne
and
adc
cmp
inc
repnz
xchg
sub
mov
adcb
mov
stc
push
or
pop
and
and
cmp
inc
in
sub
dec
int
insl
pop
out
ljmp
ja
out
mov
xchg
add
je
pop
jmp
clc
data16
add
mulb
push
push
jle
je
outsl
cmp
mov
mov
call
inc
push
stos
sub
push
les
adc
fistpl
sbb
outsl
out
pop
les
cld
inc
shrb
int
lcall
push
fstpl
mov
lds
mov
mov
cld
jo
cwtl
lret
ljmp
xlat
xor
push
repz
nop
inc
nop
xchg
sbb
fs
push
repz
xor
imul
mov
rolb
push
repnz
mov
jg
pusha
and
xchg
scas
mov
sbbl
shlb
ficoms
dec
fnstenv
enter
adc
xor
and
xor
sti
sahf
mov
into
out
repz
nop
xchg
push
jge
mov
xor
ficomps
enter
cs
and
lea
popf
stos
and
or
push
pusha
cmc
call
inc
insb
push
je
mov
mov
mov
repz
pop
lea
mov
pop
stos
sbb
jp
mov
add
popa
mov
rorb
jle
call
inc
shrl
mov
cmp
adc
ljmp
push
mov
clc
imul
adc
cld
jae
pop
int
push
push
sub
sbb
aaa
daa
stos
dec
add
push
and
pop
mov
leave
adc
clc
dec
cmp
pop
loope
leave
add
lods
fs
sbb
cmc
mov
dec
insl
push
xor
xorb
jmp
pusha
mov
test
fcmovu
mov
jbe
dec
add
out
lds
adc
inc
xchg
loope
mov
mov
jbe
repnz
flds
repz
call
rcr
dec
inc
call
sub
xor
mov
test
mov
jge
pop
in
jmp
xchg
rcl
aam
adc
add
inc
push
sbb
daa
mov
mov
mov
pop
pop
push
stos
jg
cmc
lock
dec
pop
jne
sbb
xchg
imul
fistpl
in
test
movsl
mov
and
xor
bound
sub
sbb
daa
jbe
fnstcw
xor
dec
mov
cmpb
movq
jmp
inc
in
hlt
pushf
sub
cld
xchg
in
mov
cmp
sbbb
insl
frstor
mov
push
in
cli
icebp
jg
and
mov
jp
addr16
imul
in
or
jge
jno
wrmsr
mov
adc
and
push
add
dec
adc
dec
mov
inc
outsb
or
push
or
stc
cmc
adc
sbb
dec
imul
loop
fldt
and
in
mov
fldenv
insb
dec
pop
or
repnz
push
add
jg
pusha
adc
cli
ret
pop
adc
sub
cmpsb
add
shl
dec
dec
or
cltd
and
dec
xchg
scas
mov
out
add
aas
cmp
jg
mov
idivl
cmp
push
push
sub
mov
or
xchg
and
data16
lahf
cmp
push
xchg
xchg
cmp
sub
push
push
sub
aaa
mov
add
incl
add
stc
cmp
ss
mov
iret
sub
lock
inc
pushf
cmp
add
in
dec
out
sbb
popf
stos
inc
cmp
test
lds
mov
inc
rcrb
sub
rcll
iret
inc
add
stos
mov
stos
and
mov
loop
cs
les
inc
jl
lea
das
jbe
hlt
sub
dec
inc
ja
inc
mov
push
movsb
sysenter
sti
aaa
push
icebp
jmp
sub
in
lcall
jo,pt
cs
arpl
sahf
push
add
xchg
mov
pop
addl
rclb
xor
cltd
sbb
sub
add
mov
pop
push
dec
out
mov
jne
adc
push
outsb
test
gs
sti
push
xlat
xor
or
roll
icebp
adc
xchg
mov
addb
aam
xchg
push
loop
hlt
add
scas
and
dec
cmp
ss
cmpsb
and
fdiv
jle
outsb
aaa
adc
aam
cmpsl
ret
cmp
nop
ds
mov
test
jle
add
mov
pop
sbb
bound
das
addr16
or
xlat
out
inc
xor
clc
mov
mov
daa
xchg
lcall
sub
sahf
ja
xchg
jne
push
or
clc
inc
test
movsb
add
push
scas
push
adc
jle
add
sti
lret
mov
fisubs
pusha
inc
push
negb
in
jecxz
inc
adc
test
jo
fidivs
or
cli
rcrl
repz
scas
cli
ljmp
sahf
push
int
jbe
lahf
stos
jg
adc
inc
mov
and
sub
les
add
popf
cmp
fistps
aad
jno
and
aas
loopne
cld
pushf
inc
repnz
arpl
jg
jg
iret
mov
push
mov
xchg
sbb
dec
push
adc
sahf
test
sub
repnz
cmpsl
mov
sub
sbb
outsl
imul
xor
test
aaa
or
cmp
cmpb
xor
fisubs
repnz
outsl
daa
ljmp
shlb
hlt
xchg
inc
mov
push
push
jbe
mov
out
lock
imull
popa
cmp
push
inc
lock
mov
shlb
mov
in
push
fiadds
fimuls
repz
jbe
push
rorl
mov
in
rcrb
call
test
dec
xchg
jb
push
insb
adc
in
aaa
adc
cwtl
jbe
in
sahf
mov
fwait
mov
lods
add
jnp
mov
jno
pop
pop
dec
adc
fcoml
push
orl
push
cmpb
dec
arpl
aaa
pop
faddl
fstpt
mov
push
cmp
int3
inc
pusha
jmp
xchg
xor
not
inc
sbb
in
or
das
stos
divb
jge
mov
lods
out
push
cmp
mov
adc
push
cmp
hlt
jle
xor
xchg
and
ret
pop
idivb
mov
test
xlat
cli
sbb
lahf
xchg
cs
xchg
mov
add
lock
or
xchg
cmp
push
test
jbe
mov
adc
pop
popf
ret
pop
int3
xlat
inc
lcall
sub
jle
jecxz
std
sbb
stos
push
xchg
sbb
mov
movsb
mov
inc
cmpsl
or
outsb
addb
comiss
or
data16
cltd
dec
adc
and
jae
xchg
enter
jb
and
jno
cltd
stos
pop
imul
loopne
lret
mov
xchg
je
xor
icebp
jo
mov
push
testb
mov
fmul
popf
int3
mov
dec
push
adc
movsb
or
insb
lret
ja
data16
mov
sub
mov
dec
shrb
push
es
pop
sbb
cli
jae
lea
ds
mov
ljmp
mov
mov
and
push
pop
in
xor
jge
cmpsb
jle
and
inc
aam
mov
mov
inc
dec
ja
jle
sti
das
clc
out
sub
dec
data16
mov
pop
imul
insl
inc
fmul
fistpll
xor
scas
mov
pop
mov
mov
add
or
pop
push
iret
sbb
xor
xor
jbe
add
mov
pushf
cmp
push
in
mov
pop
inc
jns
or
jne
jbe
mov
loop
pop
cmp
out
icebp
sbb
sahf
pop
movb
mov
icebp
scas
insl
sahf
xchg
lock
stos
stos
jno
xor
adc
jo
xor
mov
mov
mul
cmp
stc
adc
or
sub
pop
pop
or
lds
mov
push
add
xchg
pop
cld
pushf
repz
jge
push
movsl
loope
lods
into
pop
jp
aaa
loopne
mov
dec
les
loope
in
cltd
fsubs
out
pop
sbb
jb
gs
loopne
insl
or
stos
movsl
inc
xchg
fbstp
mov
push
sub
ret
lcall
stos
repnz
bound
push
test
sbb
dec
scas
test
cmp
inc
xchg
fnstenv
xor
sub
fucomip
add
push
and
test
xchg
mov
lcall
popf
bound
clc
not
mov
bound
test
aas
repz
sar
lahf
add
hlt
or
cmp
xor
lret
scas
sub
mov
vminss
cmp
sbb
out
xchg
inc
repz
adc
mov
jmp
push
xor
ja
mov
aas
push
or
jp
dec
out
shll
sbb
rcll
out
fiadds
mov
mov
cmp
or
jbe
xlat
in
or
sbb
data16
add
shr
xor
adc
and
arpl
test
neg
cmp
mov
mov
test
dec
sub
fnsave
movsl
popa
push
inc
mov
add
mov
mov
es
ret
push
popa
fbstp
sbb
fbld
jge
cmpl
jae
mov
mov
outsb
imul
sbbb
out
lea
idivb
cmp
les
mov
dec
ret
rcll
ljmp
add
and
aad
test
or
sbb
mov
push
repnz
daa
hlt
xor
ja
call
mov
aaa
jbe
scas
xchg
cmpsb
xlat
jno
mov
out
loop
insb
dec
sub
mov
aaa
outsl
aad
jne
xlat
sahf
das
xchg
dec
mov
test
rorb
fs
jp
repnz
addr16
repnz
arpl
mov
mov
inc
mov
inc
mov
add
lds
insl
mov
insb
pop
popf
lods
test
mov
adc
cmp
and
sub
inc
or
sub
subb
mov
and
test
popf
in
push
cld
sbb
and
push
sahf
data16
call
jo
mov
in
xchg
outsb
das
scas
fsubs
ja
mov
shl
nop
cli
mov
push
shrl
sbb
sub
dec
jns
movsl
mov
mov
mov
push
mov
xchg
mov
ror
fldcw
push
frstor
mov
arpl
xlat
sbb
lock
cmp
jbe
lods
daa
stc
in
push
adc
mov
xchg
loopne
imul
mov
jecxz
cltd
icebp
es
xlat
cmpsb
pop
aam
outsl
inc
xchg
dec
cmp
pop
mov
add
xlat
mov
bt
add
imul
stc
cmp
int
mov
xlat
add
fs
jns
dec
insl
adc
data16
pop
add
sbb
or
cwtl
xchg
flds
in
cli
cmp
jnp
lock
loopne
js
xchg
dec
hlt
sub
arpl
loope
add
sub
lock
sbb
cmp
and
pop
ljmp
les
add
push
loope
pop
mov
dec
mov
sbb
xor
test
mov
dec
mov
and
clc
movsb
insl
push
pop
or
insb
sub
cmp
popa
sarl
add
dec
js
into
stc
jo
mov
xor
test
dec
and
jl
pop
xchg
jnp
call
or
cmc
lock
sahf
leave
call
cmp
and
inc
cmc
jecxz
lret
sbb
or
scas
push
hlt
xor
and
mov
roll
pop
shl
mov
rclb
dec
lret
aaa
test
dec
cmp
ret
out
pop
mov
mov
int3
enter
lea
int
and
jb
leave
subb
cwtl
mov
dec
nop
mov
ret
and
das
mov
xor
movsl
popf
iret
out
jnp
xor
adc
push
std
mov
jbe
jp
addb
hlt
shrb
jno
decl
inc
mul
mov
out
xor
xchg
or
mov
lret
sbb
add
into
into
in
add
xchg
jno
aam
cmpb
mov
pop
push
or
sub
jns
ja
xor
mov
push
pop
imul
je
push
dec
mov
enter
repnz
neg
ljmp
mov
cmp
pop
inc
and
push
mov
scas
out
test
mov
test
scas
ja
insb
inc
mov
sbb
lods
inc
mov
pop
ret
imul
testl
add
out
fdivrl
jne
or
shlb
sbbb
xor
or
pop
xchg
and
and
mov
jbe
cs
out
xchg
dec
hlt
sbb
ja
or
xor
sub
sbb
or
push
les
inc
imul
stos
pop
testl
movsb
mov
cmpsl
cmpsl
push
add
arpl
mov
jg
movsb
and
test
xchg
jmp
inc
pop
push
aas
push
push
test
push
pushf
outsb
cld
sub
mov
cld
ror
sbb
cli
push
cmp
and
addr16
idivb
popa
fistps
dec
mov
stos
insl
inc
jecxz
push
in
jne
and
in
fcoms
or
fisubs
jne
xor
ds
imul
dec
rclb
ss
sti
nop
mov
mov
dec
lcall
fisubl
pop
cmp
sahf
xchg
les
cltd
lret
mov
push
lods
push
divb
pop
cmpsb
mov
adc
insb
mov
push
mov
mov
stc
outsb
cmc
jmp
mov
pop
repz
sbb
sbb
push
and
xor
lret
adc
jecxz
push
cmc
dec
les
test
daa
adcb
cltd
nop
lods
pop
mov
xchg
sbb
sahf
jecxz
scas
popa
adc
ret
outsb
jne
lret
cli
ret
mov
inc
mov
jns
sbb
push
push
popl
cmpsl
movl
into
daa
add
aam
sub
or
mov
rorb
scas
das
call
dec
mov
inc
js
aaa
repz
xor
jo
or
pop
xor
cmc
xor
adc
cltd
into
dec
stos
push
add
mov
test
jns
inc
sub
jne
les
pop
enter
les
aam
adcb
nop
loope
sbb
dec
jnp
cs
ds
inc
out
fneni(8087
adc
add
add
inc
icebp
add
jae
pop
lods
cltd
inc
add
dec
bound
xor
xor
mov
mov
rol
scas
shll
dec
mov
movsb
into
cmp
add
cwtl
cmp
cmovl
mov
jle
out
aam
out
xchg
cmpsl
add
out
sbb
add
out
test
mov
cs
adcb
cmp
sbb
mov
mov
in
or
lods
push
cld
fists
jg
rclb
inc
mov
ror
and
cmp
dec
or
or
aas
es
cmp
sbb
cld
std
icebp
mov
jae
into
addr16
movsb
push
mov
fisttpll
notl
xchg
inc
gs
dec
incl
bound
inc
jle
or
sub
xchg
inc
push
lahf
addr16
add
mov
sti
xor
aaa
add
aam
mov
pop
in
iret
jns
cmpsl
ljmp
sbb
movsl
mov
jecxz
inc
in
pop
pop
lods
dec
sub
xchg
cmp
dec
xchg
rol
pop
in
adc
jp
int3
xchg
push
repz
add
fsts
sbb
mov
jne
into
mov
adc
jp
jae
in
sub
addl
or
in
jb
jmp
insb
push
in
mov
mov
fisubl
adc
cs
lods
cmp
or
cmc
aam
lods
mov
sub
mov
pop
mov
lods
mov
xor
fwait
adc
jns
xor
pop
mov
mov
test
pop
mov
push
inc
mov
lret
mov
cmp
ja
lods
stc
rcll
mov
cmp
mov
pop
mov
jl
xor
sbb
and
xchg
outsl
add
out
inc
leave
movsl
ret
fwait
push
enter
adc
aad
fmull
fidivrs
test
cmp
jns
es
mov
add
testb
mov
aas
inc
push
mov
loop
cltd
inc
dec
push
xor
pop
in
cmp
jb
xchg
inc
xor
pusha
movsl
nop
push
mov
push
dec
mov
movsb
data16
xchg
dec
cmpsb
xor
xchg
sbb
rcll
xor
cmp
mov
pop
inc
lds
cli
inc
add
jb
mov
cmpsb
gs
jbe
cltd
dec
hlt
repz
inc
mov
scas
loope
xchg
test
int
jge
popa
sbb
add
subl
testl
cmc
popa
cmpl
mov
scas
dec
sahf
test
xchg
in
orb
mov
mov
xor
aas
jne
test
and
cld
jl
in
xchg
pop
das
add
fwait
mov
inc
dec
inc
sbb
pop
mov
in
imul
and
dec
test
lods
bound
jae
push
dec
mov
sbb
data16
push
outsl
add
adcl
or
dec
lock
push
or
add
jno
bound
outsl
mov
jno
nop
sti
mov
sbb
cli
pop
lock
inc
in
add
add
mov
or
fnstenv
pop
or
movsl
sbb
call
fs
insb
cmp
and
pop
fmuls
cmp
sbb
hlt
movsb
outsl
pop
jb
rolb
add
sub
xor
ljmp
sub
xor
loop
jne
mov
pushf
or
in
sub
test
mov
in
divb
lret
jb
mov
in
std
repnz
jmp
fiadds
movsl
shrl
xchg
mov
clc
mov
insl
add
add
bound
add
sarl
imulb
inc
add
in
test
mov
xchg
stc
mov
jae
ss
push
sbb
lds
lret
xor
js
adc
sub
shrl
jl
mov
cmpsl
jb
rclb
lahf
in
pop
cmp
out
inc
inc
sbb
pop
and
out
and
adc
inc
fstp
mov
dec
loope
dec
inc
xchg
add
sbb
mov
adc
fstpt
sti
sbb
inc
push
jmp
in
or
mov
movsl
enter
ficoml
notl
adc
mov
push
or
adc
cli
daa
in
negb
adc
adc
loop
mov
sub
inc
clc
repnz
imul
lcall
ror
bound
test
bound
mov
push
or
push
shrl
outsl
pop
xchg
jecxz
test
pop
jnp
sub
outsl
add
daa
sahf
cmp
test
mov
and
aas
mov
xor
outsb
mov
in
xorl
jge
jmp
loop
xor
stc
jmp
fcompl
cld
mov
ja
test
loope
lahf
stos
inc
add
loopne
dec
lret
daa
leave
pop
jb
adc
xor
mov
mov
jmp
adc
xor
add
cmpb
mov
ljmpw
push
push
pop
pminsw
fstps
jp
hlt
ds
into
outsb
push
mov
cmp
ss
lods
ja
bound
jo
mov
cli
and
das
sti
insl
mov
mov
mov
test
jmp
mov
in
out
jmp
lcall
push
or
adc
testl
insl
nop
mov
xchg
xchg
add
cmc
pushf
sbb
jae
jmp
dec
sub
cmp
sbb
lock
lock
sub
movsb
std
cs
push
insl
mov
jmp
xchg
daa
mov
pop
xor
add
je
and
scas
cmp
adc
repz
sbb
aas
mov
mov
jns
adc
and
and
push
and
jae
fistpll
cmp
xor
lret
cmp
push
pop
into
jge
cmp
xchg
dec
outsb
pop
push
sub
mov
push
lret
fidivrl
jnp
xchg
or
aad
push
jne
inc
mov
daa
sbb
shl
push
push
mov
add
jns
fisubrs
sub
xor
icebp
mov
inc
int
mov
into
lods
push
dec
lret
cmovbe
cmpsb
imul
and
and
pop
mov
testl
xor
xchg
mov
adc
sbb
test
mov
push
jge
inc
inc
jmp
inc
cmovns
addb
mov
cmp
shl
mov
push
mov
or
fcoms
jle
cmc
roll
inc
xchg
sbb
inc
pcmpeqw
out
inc
sub
les
xchg
push
movsl
int
push
cmp
daa
add
stos
jbe
movsl
outsb
pop
pop
lock
cli
cmp
jnp
bound
mov
aad
dec
mov
add
sbb
shr
mov
push
add
cmp
mov
es
jne
pop
ficompl
add
xor
outsl
call
add
sub
lea
adc
imul
cmp
inc
xor
xchg
xor
ret
pslld
xchg
adc
dec
adc
cmpsb
das
iret
cmc
mov
mov
clc
cmp
dec
stos
hlt
fdivl
or
out
inc
in
push
cmc
nop
mov
ror
int
mov
or
and
jg
shlb
enter
add
fwait
adc
das
mov
sbb
lock
in
iret
mov
cmp
leave
repnz
popf
popf
jns
jnp
repnz
ljmp
push
xchg
int
jecxz
push
xchg
mov
pop
or
aad
jmp
and
into
sbb
rclb
stc
add
dec
adc
cltd
push
push
add
xor
jecxz
aaa
mov
cwtl
js
data16
inc
sub
sbb
pop
enter
jecxz
dec
outsb
or
imul
cmp
fldl
sbb
sub
dec
int3
ss
add
lea
dec
adcb
push
xchg
mov
jmp
dec
sbb
adc
leave
xchg
dec
in
push
sbb
adc
push
sbb
pop
rcrl
mov
nop
out
cmp
sahf
fcompl
ja
add
lds
scas
ficomps
aas
std
push
sub
aam
jnp
jne
cmp
mov
shll
cmp
cmpsl
enter
push
mov
and
stc
les
mov
hlt
mov
int3
and
fdivrl
lea
mov
inc
or
and
jg
out
cmpsb
dec
cwtl
lcall
xor
sbb
lret
mov
xlat
inc
in
inc
adc
sarl
mov
inc
cmc
and
fwait
push
cmc
push
fbstp
adc
ja
subb
push
stos
and
nop
push
loopne
or
xchg
push
fcoml
push
sub
aam
daa
jmp
es
imul
scas
lea
xchg
in
pop
iret
push
scas
icebp
loope
or
call
jp
icebp
sti
daa
jb
sbbl
pop
movsb
movl
adc
out
inc
pop
add
mov
mov
sbb
inc
cmc
push
xchg
mov
inc
mov
push
xor
xchg
fld
xor
xchg
cmpsl
rcl
je
in
hlt
test
pop
or
or
iret
cltd
or
cmp
sbb
mov
scas
sub
add
pop
outsl
hlt
sbb
js
pop
mov
mov
insl
pop
xchg
outsl
rcll
stos
dec
push
pop
pop
mov
gs
rcll
adc
out
dec
sbb
mov
jp
mov
ds
in
pop
jbe
cmp
jno
fsubp
ljmp
lds
out
lea
pop
inc
jmp
repnz
rorl
mov
add
movsl
setns
addr16
push
mov
popf
ss
fs
out
shrb
enter
std
mov
sub
das
fwait
dec
push
or
mov
add
pushf
aad
inc
sub
rolb
out
adc
inc
testl
fcoml
dec
jp
or
cmp
dec
xor
adc
xor
lea
mov
int3
xchg
inc
out
scas
xor
push
adcb
shl
jb
mov
mov
pusha
or
out
popa
ss
push
fs
je
adc
movsl
mov
mov
jbe
or
fisttpl
sahf
cmpsl
mov
repnz
pop
add
sbb
pop
pop
pop
popf
out
jnp
cli
inc
outsl
jl
out
and
je
lods
and
pop
mov
call
pop
or
mov
sbb
mov
cwtl
mov
jle
outsb
bnd
mov
xor
sti
pop
repnz
ret
cmc
fimull
jo
lods
rcr
mov
daa
pop
or
xchg
mov
sbb
imul
das
jmp
stos
inc
or
popa
stc
ljmp
call
push
push
dec
les
cltd
mov
jo
sahf
imul
and
jno
pop
add
and
subl
lea
add
sti
jge
mov
ljmp
daa
add
xchg
in
sub
pop
jge
pop
mov
jecxz
mull
and
cld
jbe
rorb
loopne
sub
mov
dec
jp
cmpsl
aas
cmp
sti
mov
mov
repnz
cs
sub
mov
sub
sahf
dec
mov
mov
daa
xor
or
xor
daa
mov
shl
insl
aam
mov
inc
inc
shl
jb
aas
xchg
lea
icebp
xor
and
mov
or
push
mov
negl
out
cmp
mov
push
clc
ret
jmp
jae
fcomps
popa
je
int
mov
jge
sbb
stos
jb
insb
insb
repz
sarb
je
fdivrs
ret
iret
int3
inc
fsubl
push
xchg
popa
mov
pop
cmp
add
cmp
xchg
mov
pop
pop
pop
into
test
inc
addr16
jb
xchg
push
and
mov
xchg
cltd
inc
out
test
es
aas
or
sbb
and
jo
and
aaa
xor
add
push
je
push
arpl
add
lahf
xchg
sub
push
out
je
lods
mulb
hlt
aad
xor
jnp
pop
mov
rcrb
aam
or
jl
ss
andl
mov
imul
sbb
jno
lcall
jmp
aad
mov
data16
ret
dec
repnz
dec
push
jns
and
push
sub
out
ret
mov
repz
mov
mov
or
and
out
push
adc
pop
cmp
mov
cs
add
jae
lods
cli
adcb
sub
inc
mov
ss
cli
jbe
sti
cmpsl
mov
mov
mov
and
outsb
movsl
lea
pusha
inc
inc
cmp
outsl
jno
and
fldt
and
lock
sub
sub
das
setno
sti
roll
sub
mov
pop
out
lret
push
pop
sbb
sub
mov
push
jne
femms
insb
sbb
jo
add
pusha
add
imul
or
adc
xor
movsl
mov
push
adc
add
push
xlat
or
pop
cmp
in
lods
xchg
xlat
pop
mov
ret
cmp
or
push
cs
jb
sbb
loop
iret
arpl
mov
in
push
xchg
or
sbb
mov
push
imul
into
cmp
pop
jge
pop
jmp
mov
and
dec
xor
fwait
pop
shrb
push
or
lods
jno
pop
andl
stos
scas
repz
in
outsl
aam
pusha
cmc
and
mov
outsb
dec
lret
jb
fs
or
cmc
aad
dec
iret
cmc
repnz
adc
dec
mov
xchg
je
jge
or
push
push
int
and
sbb
and
sahf
jbe
pusha
mov
add
jb
push
popf
imul
test
cli
and
mov
xor
stc
gs
iret
and
adc
lret
aas
sbb
gs
stos
jns
enter
xchg
mov
and
push
test
cmp
xor
lock
lods
xchg
and
fcoml
and
popf
cmc
pusha
adc
xor
sub
cld
add
pusha
cmc
mov
sbb
cwtl
cli
sbb
adc
aas
xor
sub
push
in
daa
pusha
mov
jo
and
mov
ret
jg
jne
push
sti
pushf
push
sbb
jp
xchg
add
test
xchg
inc
jle
adc
cmp
ret
je
adc
jg
push
notl
inc
call
dec
stos
push
test
xchg
and
xor
sub
pop
mov
cmp
repz
aad
inc
loopne
lret
jne
int
leave
cmc
clc
sub
sbb
dec
inc
mov
outsl
and
dec
lcall
dec
xor
xchg
imul
jge
mov
adcb
jge
fcompl
ret
cmpsl
xorl
imul
push
adc
and
dec
jbe,pt
pop
push
ret
mov
cmp
mov
inc
cs
fldl
shl
xor
lret
cmp
in
data16
mov
mov
mov
cld
and
push
out
cmc
sub
fwait
sub
or
pop
rorl
andb
sbb
lret
dec
in
adc
push
and
les
pop
mov
or
xor
lcall
add
xor
fdivl
scas
dec
popf
repnz
jo
into
sub
add
xchg
mov
push
push
dec
cld
arpl
jmp
call
mov
sub
cmp
add
push
in
lret
inc
dec
aam
jecxz
add
adc
cmc
ret
ret
arpl
lock
jp
sbb
mov
sti
stos
inc
xchg
pop
add
or
push
vaddsd
xor
inc
pop
add
daa
push
jp
and
mov
das
or
add
adc
push
ficoml
pop
push
ljmp
push
or
iret
or
sub
cvtps2pd
fwait
add
sbb
inc
mov
xchg
push
insl
sub
jl
add
pop
repz
and
loopne
and
cmp
jb
mov
mov
or
shrl
jge
mov
jo
inc
mov
mov
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
push
nop
nop
push
push
nop
nop
call
nop
nop
nop
nop
push
nop
nop
nop
call
nop
sub
lea
nop
push
push
nop
push
nop
nop
nop
push
nop
nop
nop
nop
push
call
nop
nop
nop
nop
add
nop
nop
nop
nop
mov
nop
nop
nop
mov
shr
nop
nop
nop
jmp
nop
nop
nop
lods
nop
add
nop
xor
nop
mov
nop
dec
nop
nop
nop
je
nop
nop
jmp
pop
nop
nop
pop
nop
nop
nop
nop
pop
jmp
